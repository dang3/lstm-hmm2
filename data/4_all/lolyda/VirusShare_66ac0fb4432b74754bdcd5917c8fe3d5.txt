daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
insb
add
daa
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
jecxz
add
leave
test
stc
push
pushf
pop
ret
pop
pop
fidivrs
enter
mov
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
popa
fstp
testl
pop
lahf
cmpl
fisttpl
dec
test
je
mov
push
add
or
fcmovnu
mov
mulb
xor
xchg
shr
or
in
jne
mov
pop
shr
rol
or
jbe
mov
push
push
push
mov
xchg
push
sbb
xlat
or
or
push
cltd
adc
jo
or
std
outsl
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
mov
call
sub
add
repnz
sbb
test
push
test
jne
sbb
lea
shr
push
push
xor
fists
jle
sub
dec
cmp
or
cmpw
jne
lret
dec
jbe
call
cmp
sbb
neg
add
or
sub
push
or
insl
mov
and
push
mov
pop
or
mov
push
fs
sbb
jno
fbstp
push
add
pop
lock
xor
or
mov
test
jbe
or
cmp
mov
out
adc
adc
sbb
jbe
mov
outsb
fdivrs
outsl
add
adc
outsl
test
mov
rolb
mov
ja
inc
add
mov
jl
mov
mov
push
jl
adc
adc
add
stos
stos
stos
push
pop
sub
or
or
inc
push
adc
adc
and
push
or
mov
mov
pop
add
dec
mov
in
mov
out
dec
stos
push
mov
aas
mov
lods
into
mov
mov
or
shl
add
mov
mov
repnz
not
sub
lea
mov
push
sbb
rep
pop
push
and
mov
movsb
stc
inc
imull
and
pop
push
push
lea
scas
push
pop
sbb
mov
push
push
out
inc
add
push
sbb
and
dec
cmp
mov
mov
lods
stos
xchg
sbb
lahf
adc
and
xor
sub
jnp
cmp
mov
push
mov
dec
sub
data16
add
add
mov
sub
sub
xor
das
inc
sbb
jge
xchg
test
add
je
mov
cmp
inc
add
inc
jecxz
lahf
je
adc
fadd
xchg
std
mov
xor
pop
jne
adc
insl
mov
sbb
adc
fstl
jle
add
push
pop
mov
push
push
jmp
push
push
pusha
int
pop
leave
push
sub
adc
mov
loope
dec
ss
mov
add
pop
enter
cmc
ret
push
test
dec
imul
add
pop
xor
fwait
xor
test
pop
mov
int
cs
fnsave
add
or
push
dec
cmp
sbb
mov
inc
jne
jecxz
xor
mov
mov
aaa
adc
fsubrl
imul
push
push
add
adc
pop
mov
mov
push
xor
shll
rolb
je
xor
rol
sub
or
mov
dec
scas
and
adc
sub
ja
nop
sbb
push
or
sub
push
out
outsb
je
xor
push
mov
push
push
sub
popf
xchg
xor
inc
inc
cmp
push
pushw
stos
repz
sti
xchg
push
inc
lock
adc
push
mov
aad
cmp
add
scas
fstl
lea
push
push
jo
xor
sbb
fs
test
or
sub
dec
dec
or
mov
push
pop
push
adc
push
rorb
cwtl
loop
outsl
add
loope
dec
pop
push
push
cmp
xchg
add
xlat
inc
xchg
mov
add
xlat
dec
mov
jl
push
addl
mov
push
push
add
scas
aaa
cmp
or
push
lret
nop
sbb
pusha
add
pop
xor
jmp
jae
movsb
in
rcll
ds
js
les
test
fldt
ret
mulb
adc
xorl
popf
xor
xor
in
sub
mov
xor
cmc
rcrl
push
push
push
xchg
int3
xchg
push
lods
xchg
lea
add
mov
pop
pop
or
iret
mov
inc
push
adc
adc
adc
adc
in
sbb
cmp
test
xchg
mov
dec
pop
cmpsb
sar
jne
mov
cli
mov
insb
int
int
clc
cld
lret
or
jl
or
xor
dec
push
fistpl
incl
add
test
jle
push
dec
jns
add
jp
jnp
inc
push
pop
rcl
cld
mov
icebp
jg
add
out
or
jmp
addl
sbb
nop
sbb
pop
out
jmp
mov
loopne
leave
sbb
adc
inc
mov
xor
sbb
shl
mov
pop
shll
ror
ja
mov
loopne
rclb
pop
jb
sub
sub
std
xor
xor
mov
push
adc
mov
into
adc
push
lret
jecxz
xor
push
push
fnsave
je
xchg
cmp
mov
call
fisubrs
adc
inc
sbb
push
clc
sbb
call
pushl
push
lea
push
shl
gs
data16
roll
ja
ret
or
stos
mov
push
mov
aad
ret
push
push
or
xchg
adc
lods
cmp
inc
fsubs
fiadds
jmp
ret
adc
out
and
aaa
sbbl
lea
add
add
cmp
scas
push
xor
mov
mov
shlb
mov
movsl
or
jo
loop
cwtl
popa
rclb
popa
movsb
or
inc
fs
sub
pop
and
mov
xor
movsb
push
jne
or
shlb
add
lea
pop
cmpsl
leave
adc
mov
dec
dec
sbb
dec
jbe
dec
inc
sbb
gs
jno
add
mov
jb
mov
pusha
mov
xchg
test
xor
sub
icebp
out
pop
sbb
push
push
pop
push
xor
jmp
push
xor
push
and
or
out
mov
adc
adc
xor
xchg
add
ljmp
mov
inc
outsl
push
xchg
ret
sbb
ja
add
dec
mov
cmp
mov
lret
add
mov
outsb
push
or
sub
in
push
daa
add
push
sub
cmp
sbb
sbb
and
or
pop
add
lea
fldcw
add
imul
xor
cmp
inc
pop
jnp
add
xor
push
xchg
shll
out
xor
push
or
pop
adc
mov
pop
xor
xor
mov
pop
aaa
sbb
mov
mov
imul
push
data16
mov
mov
inc
cmc
out
stos
jae
push
jg
sbb
jne
inc
add
out
add
adc
inc
ret
and
das
dec
rclb
and
movl
inc
jg
nop
mov
dec
lcall
sbbl
jmp
popa
jbe
mov
push
xor
fcompl
sarl
mov
push
adc
jo
jae
fs
inc
pusha
test
or
pop
xchg
dec
paddusb
mov
lahf
xorb
xchg
fisttps
out
mov
data16
cmp
jne
daa
cwtl
outsb
add
fs
ret
mov
add
clc
mov
aaa
into
or
mov
sub
inc
dec
push
sbb
adc
mov
cs
shlb
pop
inc
pop
or
je
mov
pusha
push
movl
mov
jmp
push
setnp
push
mov
mov
add
pushf
push
or
adc
popa
pusha
pop
int3
sbb
jno
sbb
push
cmp
and
adc
jp
jmp
xchg
daa
inc
or
mov
data16
sbb
xlat
or
inc
jmp
scas
js
dec
lret
adc
mov
dec
in
push
jp
or
imul
aaa
jecxz
push
je
fld
mov
and
pop
xchg
cmp
pop
and
lock
xchg
pop
dec
dec
or
hlt
enter
negb
xchg
adc
sub
fs
outsl
pop
mov
push
xchg
clc
adc
dec
mov
pushf
mov
mov
push
cmp
jecxz
rcr
outsl
jecxz
adc
lods
adc
iret
in
inc
adc
add
mov
js
pop
js
fs
add
xor
outsb
push
push
and
adc
popa
mov
and
sub
pop
cmp
shl
lock
and
sti
mov
mov
imul
fwait
mov
fs
insb
mov
pop
adc
jg
int
fldl
and
ss
and
jmp
insl
push
lret
and
sbb
popa
popa
shlb
push
sbb
in
cmp
mov
repz
dec
hlt
add
ret
jnp
js
adc
filds
adc
shrl
inc
cltd
sub
add
clc
out
sbb
push
sub
or
adc
push
xor
std
je
je
sbb
pop
pop
mov
fisubrl
mov
pop
fcoms
inc
pusha
ret
movups
aaa
sub
sahf
insb
iret
or
xor
mov
mov
fwait
mov
test
adc
xchg
mov
xor
inc
push
lcall
pusha
daa
adc
jg
mov
add
pushf
and
mov
sbb
cld
pop
mov
xchg
lea
in
adcl
dec
sub
mov
in
sub
inc
xchg
cmp
pusha
andl
and
adc
iret
inc
leave
dec
adc
xchg
cmp
or
or
xor
and
adc
and
cld
xchg
adc
jecxz
rorl
sbb
add
loopne
jb
addr16
push
add
rcl
lock
in
sub
inc
inc
lods
push
add
mov
add
lock
or
add
mov
into
jge
sbb
push
bswap
in
cmp
or
ljmp
cmp
mov
lock
lea
jo
lock
sub
mov
int3
inc
out
cmp
out
mov
pop
xchg
or
push
int3
or
bound
shll
call
sbb
pop
cltd
jb
pop
push
inc
es
aad
pusha
jne
ret
push
pop
mov
aad
sub
add
out
rolb
sub
stc
push
push
add
pop
inc
and
adcl
push
push
movaps
cmp
mov
movsl
and
xor
arpl
fsubr
je
inc
sub
xchg
mov
ljmp
or
lods
out
pop
add
inc
push
push
fbld
outsl
push
adc
pop
adc
lret
out
rorb
push
xor
insb
jle
aam
sub
rol
add
add
push
sub
jno
lret
jns
or
xor
inc
adc
push
mov
mov
sbb
adc
dec
ljmp
xchg
pop
icebp
or
or
mov
mov
mov
sbb
push
lret
mov
test
push
int
and
push
push
pop
mov
andb
or
imul
out
sbb
xor
xor
xor
mov
sbb
aad
fsubrs
adc
call
shrb
aad
add
jg
or
leave
jae
daa
jne
push
insb
add
adc
cltd
idiv
mov
mov
sti
adc
add
mov
cmp
jb
or
push
and
jg
arpl
mov
or
addr16
fcoml
add
xchg
xchg
enter
xchg
xchg
xchg
mov
sub
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
lahf
iret
xchg
xchg
add
cld
inc
clc
inc
hlt
inc
repz
jl
lock
mov
inc
enter
test
enter
pushf
mov
movsb
test
mov
xchg
out
mov
inc
mov
xchg
enter
and
and
fsub
in
movsl
fcoms
and
jo
fdiv
test
pop
sub
sbbb
adc
push
mov
and
cmp
and
jo
or
scas
cmpsl
pop
add
ret
push
xor
add
add
in
insb
cwtl
inc
scas
sub
push
stc
pop
decl
mov
ljmp
inc
orl
push
fcoml
inc
jmp
int3
or
or
hlt
iret
insl
lock
aam
xchg
inc
cmp
int
mov
cld
sbb
adc
adcb
push
mov
lea
test
or
pushf
push
add
mov
xor
fwait
or
ss
xor
jne
cmpb
jne
inc
or
add
or
mov
and
jbe
aam
dec
movsb
fistpl
repnz
inc
testb
in
movzwl
jmp
sub
mov
jbe
jmp
push
pop
pusha
push
push
and
ljmp
pop
xchg
cwtl
xor
inc
in
mov
mov
mov
push
test
insb
and
pop
mov
sub
xchg
add
or
add
pop
push
pop
das
dec
out
inc
call
in
lahf
mov
pusha
add
mov
and
mov
inc
jne
push
adc
enter
outsb
add
jmp
mov
je
rorb
push
inc
lea
cmp
adc
paddusb
scas
int3
mov
icebp
test
mov
add
inc
lea
inc
mov
nop
addr16
and
add
data16
mov
imul
xchg
int
loop
lock
adc
fldcw
cmpsb
xor
testb
dec
cmpsb
imul
imul
add
adc
add
adc
ss
jb
or
or
sbb
movsl
leave
adc
jb
fcompl
mov
or
pop
shll
adc
add
mov
in
pop
jp,pn
nop
xor
adc
add
insb
fwait
inc
sbb
comiss
repz
jne
xlat
jne
out
sub
adc
aaa
xor
out
arpl
movhps
pop
xlat
pop
xchg
pop
sbb
xchg
daa
push
lcall
arpl
lcall
inc
push
adc
sub
or
lcall
mulb
jmp
scas
test
jno
mov
mov
push
push
addr16
scas
jmp
mov
mov
adc
fwait
pop
dec
or
push
scas
arpl
scas
jmp
data16
or
mov
cmp
lret
cmpsb
imul
dec
shll
mov
lcall
outsb
ss
inc
dec
pop
mov
dec
outsb
js
add
fmull
shrl
shlb
or
je
add
clc
adc
xor
out
mov
aaa
jne
in
adc
push
inc
loope
or
jbe
inc
lods
rorb
dec
das
sbb
add
xor
and
adc
inc
das
cmp
cmpsb
imul
lcall
or
add
je
mov
cs
out
pop
call
mov
ror
lcall
mov
cmpsb
imul
loop
cmpsb
cmpb
inc
nop
int
ret
mov
add
mov
mov
xor
and
repnz
das
nop
and
xor
cs
xor
and
pop
sbbb
adc
push
or
cld
das
div
ljmp
fcoms
rcrb
imul
mov
imul
imul
cmpsb
imul
inc
and
pop
loope
add
xor
pop
jecxz
add
inc
inc
jb
sti
das
shrb
lock
sbb
xor
or
xchg
inc
and
pop
dec
sub
sub
xchg
mov
xor
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
jg
aas
inc
inc
dec
xor
cs
insb
add
push
inc
push
or
push
push
xor
pop
mulb
dec
inc
push
sbb
inc
cmp
andb
mov
clc
cld
add
sti
stc
xor
ja
cld
idiv
cld
mov
testl
cld
stc
dec
adc
or
mov
lret
push
mov
dec
leave
push
dec
addr16
pushl
push
pop
insb
sbb
imul
sbb
sbb
sbb
push
jmp
addr16
popa
sub
add
sbb
ret
pop
xchg
shlb
decl
mov
sub
xchg
ret
adc
or
jl
int
daa
cmpsl
xor
xchg
mov
mov
popa
dec
shll
inc
push
push
into
and
sub
dec
gs
gs
aas
in
adc
add
xchg
ljmp
add
add
jmp
popf
add
jb
imul
std
pop
sti
sbb
pop
push
sbb
or
dec
xchg
addr16
jge
mov
cs
xchg
ret
or
nop
fistl
daa
jo
jmp
imul
daa
push
add
in
sbb
outsb
pusha
pop
imul
insl
das
pop
shlb
push
cmp
daa
pusha
xor
repnz
jno
fnsave
or
fistl
fucomi
add
daa
or
cmp
sqrtps
daa
dec
xchg
push
jle
add
js
clc
cli
cld
idiv
dec
push
cmp
mov
std
cld
pusha
std
std
imull
ljmp
sbb
push
or
xor
dec
outsb
cmp
dec
adc
mov
or
adc
decl
mov
lods
imul
incl
stc
idiv
sti
mov
mov
add
stc
push
push
test
stc
cmp
pop
pop
pop
mov
idivl
mov
cmc
cld
xchg
push
popa
aas
sub
push
test
outsl
jg
movsb
fs
xchg
add
stc
dec
sti
adc
mov
cli
sti
cld
inc
mov
idiv
fs
cmovns
adc
cmp
xor
xchg
dec
popa
pop
popa
mov
mov
or
and
cmp
ret
lcall
add
or
std
pop
push
clc
aam
push
push
lds
ljmp
sti
jl
out
inc
std
dec
push
data16
sub
mov
xor
icebp
test
movsb
cmpsb
arpl
movsb
insl
fcmovne
in
cmp
in
inc
lret
mov
mov
jl
testb
in
inc
decb
dec
outsb
movq
inc
or
mov
sahf
repnz
mov
sub
fcomi
sti
shrl
test
icebp
push
dec
testl
mov
xchg
cmpb
stos
mov
addr16
outsl
fnstsw
in
cmp
mov
clc
sar
jle
test
rorl
dec
push
xorb
jo
dec
loopne
dec
insl
test
add
or
mov
or
or
cltd
adc
mov
out
jl
insl
sub
xor
mov
inc
sahf
push
adcl
std
mov
dec
or
push
jnp
or
stc
notl
jno
loope
aaa
or
pop
outsl
and
dec
dec
dec
push
jg
call
addb
hlt
push
xchg
jp
jns
push
dec
data16
pop
xorb
clc
sub
inc
pop
mov
mov
fs
pop
add
orb
pop
mov
pop
loope
addr16
sbb
frstpm(287
mull
pop
jecxz
or
clc
addb
mov
sub
jg
repz
sti
mov
add
or
faddl
or
jl
outsl
cld
fst
stc
or
add
jne
sbb
add
sbb
in
inc
pop
leave
and
arpl
adc
xlat
jge
push
mov
dec
jl
or
or
xor
or
pop
cmp
out
mov
sbb
add
add
or
or
add
fs
cmpsb
sti
dec
or
push
or
shl
sbb
gs
fbld
sti
dec
ja
adc
in
js
adc
pop
out
jl
cmp
fnsave
je
ljmp
sbbb
sub
arpl
xchg
fistpll
cld
push
fildl
out
dec
sbb
push
movsl
int
xor
pop
jle
out
sbb
insb
cmp
dec
xchg
and
movl
jo
enter
xor
and
aas
push
mov
popa
pop
add
popf
inc
gs
mov
icebp
notb
insb
sub
shl
xchg
mov
jae
adc
das
cld
das
stos
pop
rol
mov
dec
dec
dec
mov
mov
out
pop
rorl
or
lahf
lods
xchg
add
adc
jbe
jecxz
pop
inc
cmpsl
arpl
addr16
adc
mov
clc
dec
testl
mov
ret
sbb
add
in
push
incb
add
dec
test
sub
dec
sbb
cmp
xor
cmpsb
or
sub
in
push
sbb
cld
mov
std
jb
loope
shr
sub
mov
add
sti
loope
out
inc
push
div
test
push
in
pop
push
and
mov
mov
fwait
sbb
xchg
jp
add
inc
sbb
cmp
test
decl
hlt
add
push
pop
aaa
jp
je
cmp
outsb
jo
mov
dec
mov
lds
jg
icebp
mov
jb
gs
add
pop
outsl
daa
push
push
gs
ja
push
jne
dec
popa
nop
dec
push
or
pop
xor
sub
out
sub
imul
aas
or
jge
xorb
outsb
sbb
jns
cltd
or
jl
or
or
jae
lock
in
sbb
mul
inc
jmp
in
loope
daa
lret
and
mov
test
push
fwait
mov
add
aas
ja
insl
or
sub
xchg
insl
jecxz
sti
xor
xor
xchg
in
aas
arpl
adc
dec
mov
sub
cmp
push
repz
js
in
in
sub
out
and
mov
cmc
push
out
repnz
in
iret
mov
loopne
es
dec
stc
imull
fs
dec
inc
cmp
push
cmp
push
push
jno
mov
out
push
arpl
xchg
fistps
lahf
in
das
add
pop
add
pop
mov
cli
aaa
shl
mov
dec
jno
out
add
inc
add
ss
clc
lret
mov
mov
sti
testl
pop
cld
sbb
push
jmp
bound
popa
add
adc
xchg
fchs
dec
dec
or
mov
arpl
push
pop
rol
jg
or
xor
pop
add
das
sub
xor
imul
sarb
call
ret
xor
outsb
add
loope
mov
sub
pusha
xchg
pop
adc
jg
jne
mov
fs
mov
mov
das
sbbb
mov
aas
dec
pop
aaa
aaa
les
jg
xchg
push
mov
cmp
ss
jl
jmp
push
mov
dec
loope
inc
outsl
xchg
jg
out
call
sarl
insb
adc
sbb
orl
lock
jp
add
jb
in
jg
ljmp
les
ljmp
add
in
sbb
sti
push
sar
mov
test
mov
dec
inc
in
inc
sarl
push
or
dec
add
sarb
mov
xor
lahf
in
pop
fnstenv
add
shll
lret
cmpsb
or
nop
inc
xchg
dec
popa
or
daa
xchg
sub
fs
scas
or
sbb
jnp
lret
or
dec
clc
in
add
or
or
rcrl
pushl
addr16
mov
jl
or
mov
int
jecxz
add
push
or
sbb
jno
clc
push
lcall
popa
push
push
xchg
inc
sub
fimuls
or
outsl
ja
loopne
xor
add
stc
push
inc
sbb
add
arpl
out
sbb
imul
ret
lock
pop
js
lret
stc
sbb
adc
mov
repnz
decl
in
mov
cmp
in
and
pop
out
dec
insl
dec
adc
dec
repz
lds
cli
dec
loopne
add
ffreep
movsl
outsl
inc
sub
pop
or
leave
inc
jl
fdivr
jmp
idivl
idiv
js
idiv
push
popa
cli
bound
ljmp
xor
xchg
cmp
sbb
inc
clc
jp
paddb
inc
rcll
and
sbb
mov
or
test
loope
mov
in
add
frstpm(287
jbe
enter
repnz
inc
hlt
in
jg
mov
icebp
outsb
testl
cld
clc
or
aam
mov
aaa
imul
imul
cs
adc
test
ds
out
out
add
jge
mov
lods
or
out
sbb
xchg
cmpsl
jmp
negb
push
or
ret
incl
mov
cmp
sarb
xchg
and
sub
cmp
sbb
test
or
sub
or
push
hlt
mov
popa
or
mov
lock
fsubrl
xchg
mov
mov
and
xlat
and
pop
outsb
adc
xchg
push
div
adc
repnz
call
jae
addr16
ja
lret
in
add
inc
imul
lods
add
mov
fwait
in
repnz
inc
stc
testl
push
sbb
mov
insb
imul
ja
adcb
testb
cmc
xchg
int3
jns
jb
loope
xlat
sar
adc
dec
ret
cld
xchg
jmp
scas
jb
gs
mov
enter
shl
pushf
ret
dec
push
inc
inc
push
test
arpl
cs
in
in
dec
xor
sbb
or
xorl
clc
add
cli
xor
lret
inc
pop
jecxz
das
mov
mov
pop
stc
or
or
dec
dec
cmpb
push
push
cmp
incl
or
mov
test
test
addl
cmp
jg
stc
divl
das
incl
loope
add
pop
pop
pusha
xchg
fwait
push
add
jnp
sub
push
popa
sbb
adc
nop
test
adc
shll
sbb
or
push
jle
xchg
outsb
sar
das
jo
inc
mov
add
inc
call
outsl
hlt
add
inc
add
fdivr
roll
fbld
decl
jle
std
int
addl
sahf
in
jle
mov
andl
add
mov
cld
in
imul
outsl
xchg
mov
daa
lds
into
addb
hlt
out
lea
neg
cmp
mov
pop
clc
aad
icebp
int3
add
dec
std
aam
or
jg
push
and
jl
or
add
add
cmp
xchg
lds
out
idiv
dec
inc
cmp
cltd
ret
cmp
pop
xchg
subb
or
inc
and
mov
inc
pop
push
out
mov
mov
insb
dec
xchg
inc
loop
cmp
insl
dec
ds
jno
cmp
pop
adc
sub
or
popa
and
sub
sbbl
aaa
std
andl
cmp
jb
fstps
insb
popa
decl
pop
inc
add
sbb
mov
dec
fsub
mov
adc
and
std
outsl
lock
adc
aaa
inc
pop
adc
jle
dec
add
mov
mov
push
add
repnz
clc
add
pop
jge
or
out
push
in
clc
das
pop
cld
les
or
jae
dec
dec
in
cld
call
and
mov
rorl
add
mov
sar
adc
mov
cli
or
pop
xchg
fs
xor
call
sub
test
xchg
adc
mov
lea
aad
cmp
sbb
test
popa
pop
pushf
xchg
xor
jae
push
test
test
xchg
cmp
mov
mov
fstl
addr16
dec
push
aad
add
outsl
std
shll
xor
xchg
ljmp
pop
jbe
mov
add
inc
insl
and
dec
clc
xor
fidivrs
aam
mov
adc
or
fisubrl
pop
cmp
aaa
mov
or
cld
test
fcoms
leave
outsb
vmovq
dec
std
xor
xchg
xor
push
dec
or
sub
je
push
inc
inc
and
dec
mov
or
loopne
mov
divb
sbb
iret
dec
inc
fstl
insb
xor
mov
in
mov
or
sbbb
std
push
cld
sub
gs
out
aad
push
or
jl
inc
mov
inc
jno
or
enter
push
into
push
pop
push
pop
push
inc
lods
out
incl
push
sub
ss
outsb
inc
rolb
push
ret
fidivs
sti
push
or
arpl
pop
dec
out
push
pop
enter
pop
fwait
shrl
jecxz
jne
or
daa
sub
roll
ret
dec
les
cmp
inc
mov
arpl
sar
fistps
out
adc
movsl
dec
divb
enter
in
mov
or
xor
aaa
cld
mov
pop
or
cs
inc
inc
mov
lds
fists
or
mulb
inc
in
pusha
test
dec
inc
mov
or
xchg
and
pop
sbb
decl
add
cmp
lds
das
repz
mov
mov
add
insl
insl
push
xchg
or
sti
andl
sbb
add
mov
cmp
loope
dec
dec
dec
push
dec
mov
clc
mov
mov
test
call
add
fiaddl
jle
push
cmp
xlat
sub
test
outsb
add
fidivrs
pop
stc
jb
imull
stos
xor
push
push
mov
fsubp
aaa
or
xor
jecxz
movl
xor
jno
and
hlt
insl
lret
insl
inc
out
add
add
sbb
pop
fwait
mov
addl
mov
ja
mov
daa
dec
or
pop
jb
dec
dec
std
loop
popa
add
pop
sysret
add
cmpb
repz
jns
clc
std
jno
or
dec
xchg
pop
mov
add
push
xor
or
outsl
decl
jp
std
imul
xor
jno
ss
outsb
dec
jne
pop
js
push
add
jo
outsb
notb
mov
dec
mov
loope
cmp
ret
popf
or
sbb
fimuls
rclb
fiaddl
aas
add
sub
sub
push
or
pop
idiv
ljmp
xchg
pop
add
sar
loope
dec
mov
loopne
cld
movl
add
clc
jmp
mov
aaa
ds
mov
mov
std
xor
dec
aam
adc
push
test
sub
in
cld
jbe
sub
inc
stc
mov
or
mov
mov
clc
pop
pop
cmpsb
pop
push
mov
pop
mov
imul
push
mov
in
fstpt
dec
flds
or
call
mov
in
xchg
xor
push
sbb
insl
adc
or
lret
leave
in
imul
add
cmp
inc
mov
mov
jg
repz
jle
mov
xchg
xor
jno
xchg
inc
pusha
push
in
dec
std
aas
lock
outsl
pop
test
test
xchg
adc
orb
sub
add
ljmp
ret
xor
dec
or
jo
arpl
test
aas
sbb
mov
test
loopne
test
push
out
inc
inc
std
xor
addl
pop
xor
cmp
xchg
in
test
dec
or
xor
push
or
stos
xor
adc
in
xchg
adc
jno
inc
xchg
loop
repz
adc
mov
dec
mov
add
xchg
add
xor
lods
movb
das
pop
mov
call
ljmp
cmc
cmp
jb
xor
pop
add
add
xor
or
push
cmp
or
add
mov
cmp
pusha
ljmp
sbb
jle
repz
push
sub
ret
daa
aas
adc
je
addb
jnp
sbb
add
insb
roll
aas
dec
add
mov
inc
add
sub
clc
pop
cli
jecxz
cmp
ret
jl
shl
std
out
mov
xchg
repz
add
jne
jb
mov
fmuls
xor
pop
adc
in
pop
sbb
test
addb
sbb
movsl
stc
clc
enter
decb
inc
jecxz
mov
mov
fcmovnb
mov
jg
lods
mov
in
mov
push
mov
dec
cmpl
sti
in
lret
test
mov
test
pop
inc
sbb
jne
testl
cli
repnz
in
xchg
jg
testb
clc
scas
insb
xlat
je
out
xor
inc
or
test
aas
insl
imul
push
pop
test
stc
incb
push
push
cmp
jle
pop
fadds
out
std
sub
push
in
cmp
sub
jae
push
mov
fstpl
mov
imul
mov
push
lock
cmp
clc
jmp
iret
popf
xor
fnstenv
xor
cwtl
mov
pop
clc
xchg
add
fistps
out
and
add
sub
mov
cmp
sbb
pop
addl
or
pop
flds
pop
ret
jg
dec
mov
int
test
sbb
xor
push
outsl
stc
or
jae
cwtl
or
pop
cli
inc
lods
add
incl
cmp
mov
decl
sti
aas
or
jb
jb
and
add
cli
jne
adc
adc
aas
or
jp
mov
add
add
push
cmpb
mov
push
jns
add
out
cmp
je
xchg
in
or
hlt
xor
bound
clc
jg
or
addl
mov
sub
push
mov
popa
add
dec
adc
dec
out
icebp
popa
sbb
add
mov
call
xchg
out
imul
xchg
jnp
mov
mov
pop
adc
sti
insb
add
add
jg,pn
sbb
mov
fmul
xchg
lods
push
loope
std
iret
lret
sbb
dec
das
xchg
int
arpl
loopne
cld
sub
lods
sbb
orl
adc
cmp
xchg
add
xor
aas
add
cli
in
ja
add
mov
ljmp
dec
pushl
hlt
cmp
and
xor
sti
test
pop
clc
std
pop
mov
inc
inc
arpl
insb
adc
cli
and
xor
imul
sbb
sbb
push
rclb
test
add
cmp
mov
sub
daa
cmp
mov
lods
jne
pushl
mov
subl
xor
pop
xor
add
and
or
clc
ljmp
sti
rol
call
sbb
imul
xchg
cmc
test
sub
mov
jno
insl
test
push
std
jae
cmpl
inc
dec
xchg
dec
add
add
pop
dec
rcr
orl
idivl
push
dec
lcall
dec
sub
lcall
insb
pop
jo
add
dec
add
sbb
sbb
shlb
icebp
push
xorl
mulb
xchg
loope
lods
imull
mov
pop
shl
in
ss
arpl
add
sbb
lahf
sbb
shl
jbe
pushf
and
pop
mov
add
mov
stos
frstor
cmc
pop
xchg
cmp
je
jb
mov
sub
hlt
mov
xlat
sub
push
dec
in
pop
adc
fs
fiadds
xor
sti
shrb
pop
stc
lret
in
inc
xlat
daa
out
mov
push
jmp
stc
inc
hlt
or
sub
outsb
clc
pop
pop
add
hlt
insl
lods
das
notl
icebp
testl
mov
and
pop
hlt
jmp
dec
das
repnz
dec
push
dec
in
test
test
out
dec
xor
push
stc
orb
xchg
js
icebp
clc
shll
hlt
scas
sub
int3
or
das
jnp
jnp
sbb
jg
cmpsl
testl
push
dec
std
in
xor
push
in
jnp
adc
pop
push
sub
add
fisttpl
sub
mov
mov
dec
fwait
xorb
insl
mov
mov
insl
mov
jno
nop
pop
push
outsl
cli
mov
ret
inc
xchg
pop
adc
jne
sar
fwait
xchg
xchg
or
fdivrs
dec
cmp
aaa
pop
dec
xchg
dec
test
or
push
mov
outsl
call
sahf
or
aad
mov
cmp
divl
daa
fbstp
or
imul
cli
xor
fdivrs
and
pop
sbb
jo
incl
dec
dec
jg
and
aas
add
mov
sbb
imul
or
aad
jne
daa
fmull
daa
cli
push
push
push
popa
jle
test
push
in
cmp
das
mov
xchg
or
ja
std
xor
jecxz
cmc
jns
cmp
push
dec
clc
decl
or
imul
dec
les
cmp
push
shll
jp
mov
fnstsw
xor
jno
dec
push
lahf
jmp
insb
cmpsb
imul
jge
mov
rcll
test
in
call
stc
imulb
jg
pop
mov
cld
push
mov
sub
lret
pushl
dec
outsl
rol
pop
leave
adcl
in
daa
pop
xchg
cltd
sub
mov
push
popa
add
imul
xor
movsl
mov
test
add
fistl
push
push
push
push
clc
or
test
jle
mov
mov
outsb
out
dec
sbb
mov
test
xor
out
adc
jb
ffree
test
dec
mov
dec
mov
rolb
imul
dec
sub
in
push
xchg
jp
fsubl
push
repz
jmp
ja
cmp
jbe
mov
mov
mov
or
dec
add
jp
or
arpl
xchg
fchs
jno
mov
ret
cmp
xor
pop
cwtl
jmp
jo
sub
outsb
in
cwtl
scas
dec
daa
inc
jnp
out
sub
cld
push
outsl
popa
xchg
jmp
icebp
add
xchg
enter
orb
mov
dec
mov
imul
dec
mov
pop
push
pop
cmc
clc
in
dec
aaa
pop
hlt
insl
cmp
cmp
add
hlt
push
xor
insl
sub
clc
out
out
xor
imulb
xor
jae
mov
mov
decl
push
jle
push
cmp
les
push
hlt
outsb
loope
pop
jmp
jp
clc
pop
pop
push
ret
ret
or
jns
jge
mov
jecxz
dec
fldt
push
jnp
dec
lahf
xchg
arpl
inc
mov
jecxz
sub
sti
adc
divl
mov
stc
jecxz
inc
in
stos
fwait
lods
aad
adc
push
or
fs
adcb
sub
cli
jecxz
test
push
jne
xchg
dec
cmc
fwait
and
push
imull
in
cli
mul
outsl
xor
mov
sbb
xchg
push
sub
shrb
or
jne
pop
js
cmp
xchg
mov
or
push
mov
jno
xor
xor
sub
jbe
arpl
xchg
lret
fs
sub
sub
lret
lea
shlb
inc
ret
dec
pop
or
bound
aaa
lds
ds
aaa
clc
add
mov
adcb
not
call
push
xor
in
cltd
mov
lods
jp
xor
cmp
mov
add
test
icebp
xchg
mov
push
mov
push
add
and
dec
mov
mov
not
jno
mov
sbb
js
stos
jns
push
lahf
mov
xor
xchg
scas
std
adc
dec
popa
adc
inc
mov
shll
loope
sub
mov
and
dec
mov
stc
int
movsb
add
outsl
cmp
push
sti
or
iret
pop
sbbb
jg
daa
lret
fadd
adcl
dec
dec
test
call
imul
aad
out
jo
in
mov
xchg
fidivl
cli
push
inc
leave
out
dec
loope
sub
xor
mov
aad
subl
cmpl
in
lock
shll
in
adc
add
loop
movsl
arpl
mov
mov
fucomip
fistpll
jle
fadds
xchg
stc
or
jl
cmpl
push
decb
loopne
lds
add
cld
rorl
stos
xorl
jle
xor
pop
cwtl
mov
sti
cmp
js
gs
rolb
sti
std
icebp
mov
xor
dec
adc
xchg
sub
fbld
jo
push
lret
shll
loope
mov
stos
xor
lret
lds
out
out
add
jmp
loope
jp
sub
das
fdivs
sbb
jno
mov
imul
insl
add
les
cmp
mull
and
dec
sarb
cmp
mov
in
cmpsl
bound
mov
scas
xchg
jmp
mov
mov
or
push
jnp
test
dec
push
push
cwtl
push
pusha
mov
and
leave
pop
pop
adc
inc
call
lock
jge
push
or
clc
inc
out
mov
sub
fstpl
jmp
aad
mov
mov
fs
sub
lock
into
push
cmpl
hlt
mov
mov
lret
lea
xchg
cmp
decl
nop
add
ja
pop
xchg
pop
add
sub
fs
insb
pop
push
jno
adc
nop
inc
push
and
dec
push
xor
inc
jbe
xchg
mov
insl
mov
jl
mov
shrl
xor
add
lds
cmp
lds
fldenv
das
cmpb
xor
cmp
ja
and
test
inc
arpl
movsl
or
fisttpll
ret
cli
add
or
rorl
push
inc
in
add
outsl
lock
or
adc
add
aam
mov
mov
adc
test
cli
mov
in
sub
das
ja
les
xchg
in
add
mov
jno
mov
cmp
sbb
daa
js
dec
or
xor
dec
push
xchg
pop
mov
push
adc
pop
and
ja
jns
push
out
cmpsl
data16
sti
arpl
and
pop
jmp
aad
xchg
sub
std
ja
lret
pop
out
and
dec
dec
clc
sbb
sbb
pop
out
xchg
sub
push
rcrb
push
cmp
cmp
jae
mov
sub
add
jae
dec
dec
dec
mov
pop
or
insb
lds
ds
jecxz
xchg
mov
or
mov
add
lea
xchg
sti
push
push
jge
add
je
stc
fcompl
jnp
mov
popa
notb
add
test
xchg
fwait
leavew
hlt
dec
imul
xor
outsb
insl
dec
into
sub
inc
cs
stos
test
mov
fists
or
repnz
hlt
cmp
dec
add
sbb
sbb
fbstp
push
mov
lret
adc
or
ja
mov
dec
cld
lret
push
xchg
mov
ja
add
pop
or
pop
cld
push
js
dec
and
cmp
add
icebp
inc
shll
leave
mov
loop
mov
out
mov
add
imul
pop
pop
add
std
push
loope
aaa
xor
sub
pop
cltd
enter
icebp
fucomp
std
and
in
jno
mov
loope
shrb
cmc
inc
sbb
xor
jae
loope
outsl
mov
push
movsl
inc
repnz
and
mov
jo
mov
mov
ffree
sti
inc
add
mov
pop
insl
test
subb
push
addr16
inc
or
pop
dec
fiaddl
mov
sub
test
fmul
scas
sub
les
jnp
clc
push
fcomip
xor
or
pop
pusha
ds
gs
fstl
fsqrt
sbb
or
cmpb
aad
xchg
push
mov
fistl
sbb
and
std
jp
pop
dec
std
iret
push
test
aad
lds
pop
push
bound
pop
popf
rol
out
loopne
or
add
sar
and
and
mov
sarl
xchg
cmpsl
jns
insb
jmp
cli
out
cli
xchg
jg
out
jno
sbb
xchg
ljmp
ret
fcomps
outsb
xchg
cmp
push
inc
jo
mov
arpl
imul
sub
jns
or
shr
clc
jecxz
add
jo
out
adc
rcrb
sbb
fnstcw
and
out
hlt
addr16
dec
mov
in
lea
in
and
sbb
jmp
repz
dec
or
push
and
outsl
test
out
arpl
movsb
outsb
jo
push
test
jmp
daa
push
or
xor
pop
xor
jge
add
clc
dec
add
mov
leave
or
xorl
inc
flds
clc
imul
mov
fnstenvs
pop
and
in
shlb
out
and
push
cmp
mov
mov
in
push
stc
popa
add
shrl
std
mov
pop
call
cmp
cmpxchg
sti
aad
jbe
sub
mov
outsb
mov
fldl
jecxz
pop
rolb
sti
out
arpl
shl
hlt
lods
inc
xor
push
push
cmp
std
pop
or
cmp
insl
adc
insb
pop
mov
flds
sbb
fadd
filds
jg
sbb
punpckldq
sbb
sarl
push
xor
into
add
sbb
and
rcr
add
dec
scas
cmp
mov
sub
call
iret
adc
imul
loope
xchg
arpl
push
test
loope
jmp
movsb
test
repnz
mov
jne
das
clc
adc
jbe
push
mov
mov
mov
pushf
dec
int3
cs
push
aad
mov
inc
and
sub
pop
loop
in
jnp
dec
insl
xor
filds
sub
jg
fisttpl
xchg
jg
addl
fldl
cmc
in
fsin
xchg
or
adc
or
lahf
push
pop
call
pavgw
test
jnp
cmp
mov
sub
mov
mov
jle
sub
inc
in
repnz
sbb
push
cmp
fwait
stos
sub
or
cs
sub
dec
sbb
outsb
push
ffree
jp
sbb
orl
and
dec
ljmp
and
icebp
orb
iret
push
sbb
pop
mov
shrb
dec
repz
jg
dec
push
sbb
jmp
rorl
adcb
sbb
push
out
outsl
adc
pop
inc
push
push
sub
ljmp
call
insb
sub
sbb
cmp
dec
add
mov
sub
insb
add
push
inc
cmp
mov
sbb
mov
das
mov
push
and
das
jl
mov
xchg
stos
shrl
pushf
sbb
cmpsl
sbb
jmp
sbb
fstl
pushf
adc
aas
pop
test
js
fildll
fisttpl
jecxz
idivl
sbb
push
sbb
sbb
ljmp
xchg
mov
test
jmp
mov
add
sahf
pushf
lea
stc
lock
dec
daa
movsl
mov
pop
cs
sbb
mov
jle
xchg
jnp
or
jp
dec
insl
ss
or
sbb
push
xchg
dec
popf
xchg
sbb
test
pop
stos
ret
cwtl
sti
rcrl
test
inc
add
addl
push
fadds
ja
fsubp
pop
stos
insb
jmp
clc
fbld
mov
fstps
cmpl
jae
xor
ret
xchg
cmpsb
dec
pop
popf
add
add
sub
shlb
lods
hlt
lods
xchg
or
mov
ljmp
xor
dec
cmp
xchg
add
lret
sti
mov
sbb
cmp
xchg
dec
fists
clc
aas
inc
xlat
mov
push
dec
out
sbb
loope
add
xor
daa
xor
cmp
or
aas
mov
mov
dec
mov
outsl
add
sti
jb
lods
in
or
or
sub
push
dec
out
sbb
and
stc
jno
aad
movsl
pop
fimull
lock
pop
jno
sbb
inc
cmpsb
int3
cli
sarb
cmp
movsb
sub
imul
cmp
int3
push
mov
dec
movsb
cli
add
cmp
es
aas
add
dec
and
into
ja
iret
insl
scas
mov
sarl
sbb
pop
cmc
insw
pop
xor
fiadds
adc
sbbb
cmc
cltd
addl
cmp
mov
pop
and
mov
imul
into
sbb
cmp
sub
insl
ret
andb
xor
ljmp
std
cltd
add
lea
das
xlat
cmpsl
dec
sbb
lret
lret
fdivrs
int3
adcb
filds
fucompp
in
jbe
inc
addr16
push
outsl
icebp
insb
push
stos
daa
test
cli
inc
fnstsw
ja
jge
push
add
cld
mov
sub
sbb
stos
mov
mov
jne
jns
mov
cld
cmp
mov
fsin
push
cmp
dec
jle
jl
jnp
std
jmp
int
into
add
adc
lock
ret
push
inc
mov
jbe
addl
mov
outsl
mov
mov
push
mov
ja
fiadds
pop
xchg
pop
enter
in
bound
push
push
arpl
vphaddbw
and
in
arpl
repz
loopne
mov
test
pop
sbb
aad
jno
fsub
inc
mov
repz
data16
adc
out
aaa
das
adc
and
sbb
mov
daa
outsl
xchg
fucomi
test
or
inc
and
clc
dec
aam
add
subl
mov
cmc
adc
arpl
xchg
ja
sub
fdivrs
or
lret
rcl
push
arpl
or
sub
jge
lret
mov
fldl
adcb
cmp
or
mov
fsubrl
mov
call
adc
int3
repz
sub
push
sbb
xchg
push
roll
xchg
arpl
dec
or
ljmp
jg
pop
incl
dec
inc
rcll
adc
cltd
fists
shr
xchg
in
stc
xchg
pop
cmpl
xchg
out
addr16
adc
fldl
clc
mov
mov
jge
cmc
jnp
add
mov
in
nop
addl
jnp
sar
inc
in
andl
xchg
stc
add
push
hlt
jne
mov
fidivs
pop
mov
and
sub
jnp
or
mov
sub
loop
add
fdivrl
pushf
or
push
xchg
jno
jmp
mov
inc
mov
subl
dec
rorl
xchg
das
mov
adc
dec
inc
addr16
xchg
in
cmc
repz
imul
jle
mov
xchg
ret
inc
cmc
in
hlt
test
cltd
pop
testb
lock
lock
faddl
cmp
sti
test
outsl
xchg
ljmp
out
loope
pop
mov
clc
push
dec
sarl
in
sahf
or
and
mov
aas
aaa
mov
ret
push
lds
loope
sbb
sub
sti
push
loopne
sbb
sub
outsl
cltd
icebp
scas
loope
sbb
push
fisubs
cs
inc
out
cwtl
adc
imull
addb
push
fdivl
aas
clc
scas
movsl
fstpl
pop
addr16
dec
push
push
out
out
stc
xchg
xor
fisttpl
jae
dec
addr16
in
mov
das
adc
cmc
pop
daa
in
pop
aas
fistpll
jmp
push
stc
cmp
shrb
std
jg
pop
ss
testl
call
sbb
dec
aad
cmpb
pop
loopne
jle
punpcklwd
and
shl
nop
fiadds
or
or
or
outsb
add
fiaddl
out
mov
xor
js
adc
cli
in
flds
and
adc
pop
pop
lods
pusha
add
mov
or
cmp
mov
jmp
lret
stos
jne
nopl
cmc
cli
add
fists
mov
and
fwait
add
movb
jmp
loopne
mov
jmp
loop
aaa
mov
adc
inc
repz
xchg
add
rcr
pop
push
push
push
rolb
sub
cld
adcl
xchg
hlt
test
lds
fnstenv
mov
push
fsubl
stos
cmp
cmp
in
push
jmp
and
out
cwtl
cmpb
test
insl
lahf
bound
sbb
cmp
mov
cmc
mov
sbb
and
jno
shrb
inc
push
push
pop
cmc
sti
cmp
lahf
inc
testb
lock
adcl
in
in
inc
testl
mov
in
mov
in
mov
in
mov
jb
push
jb
pop
and
xor
push
xor
leave
push
xor
add
push
xor
leave
push
repnz
or
jb
push
xor
push
xor
mov
dec
mov
shr
cmc
push
inc
mov
lahf
or
scas
test
cld
lret
sbb
push
mov
xchg
cmpsl
out
pop
popf
mov
rcrl
cmp
cmp
add
mov
push
and
lds
xchg
fcoms
jb
out
cmc
inc
lock
sub
int
xorl
inc
ss
in
rorb
xchg
push
cli
pop
xchg
mov
push
je
add
mov
icebp
or
push
in
cmc
lcall
loope
ficompl
insl
repz
iret
xchg
push
into
sub
in
adc
aaa
daa
into
dec
iret
push
sub
lea
js
setg
test
ficoml
js
adcb
rcrl
flds
stc
or
jl
mov
cmpb
addb
add
mov
pop
loop
aad
mov
mov
jne
add
sbb
addb
cli
sub
ret
sti
incb
jb
outsl
aam
pop
les
mov
insl
mov
inc
pushl
cli
push
sti
jge
cs
dec
xchg
xchg
sar
shll
sti
leave
or
rolb
pop
mov
xchg
cli
mov
push
popl
or
ljmp
adc
in
fbld
inc
aaa
jns
jae
push
inc
cld
pop
test
push
roll
jge
add
fildl
jbe
add
cli
jmp
outsl
mov
aam
fwait
imul
stos
clc
je
rol
inc
mov
adc
xor
jb
mov
cmp
sti
jae
es
nop
andb
fwait
cmp
adc
adcl
xor
mov
add
add
lahf
clc
fiaddl
push
push
or
sar
push
mov
mov
addr16
cmp
jnp
std
or
and
into
and
inc
sub
cmp
sbbb
sub
sbbb
adc
leave
add
xor
pop
enter
jno
jle
test
cmp
subb
jns
lods
add
xor
mov
lret
pop
mov
sub
inc
repz
cltd
push
in
sbbb
fmuls
push
fnsave
jo
orb
mov
adc
add
subl
fwait
imul
add
aad
push
inc
loope
ss
aam
push
rcll
push
sbb
arpl
sti
out
mov
mov
cmp
xor
dec
dec
mov
std
lds
mov
jne
cmp
push
xchg
push
roll
cmp
pop
xchg
inc
mov
outsb
sbb
push
lea
test
cmp
jb
aas
push
adc
lds
test
or
inc
icebp
leave
enter
xor
cmc
xor
push
xor
aaa
stc
fdiv
test
mov
or
in
int
push
xorb
out
adc
mov
xchg
inc
cld
inc
xor
push
pop
test
adcb
pop
je
repnz
mov
push
and
adc
lods
loopne
adc
xor
sti
pop
pop
jge
out
je
lahf
jecxz
inc
xor
jae
inc
add
dec
dec
xchg
inc
mov
loop
adc
std
pop
out
xchg
xchg
incl
sbbb
stc
jp
dec
cmp
xor
aaa
fwait
mov
xchg
push
xchg
push
cld
dec
or
sarb
add
inc
or
fdivrs
inc
dec
out
or
inc
adc
loop
lods
js
mov
adc
popf
incb
or
xchg
cmovns
fwait
adc
jg
pop
or
mov
call
cltd
addb
fs
cld
and
cmpsl
and
popf
insl
ja
mov
xchg
mov
mov
push
das
mov
cmp
xchg
ja
or
jecxz
loop
sarl
push
fsubrs
inc
cmp
aaa
or
in
pop
enter
clc
dec
insl
roll
rep
mov
clc
and
in
mov
jno
test
mov
jbe
or
adc
js
insb
sarb
ss
pop
add
jmp
stos
add
push
test
and
or
mov
in
in
jge
mov
test
inc
imull
stos
or
jne
add
sbb
sbb
ud2
jb
mov
in
dec
test
psubd
jmp
mov
push
cmp
sbb
fnstenv
stos
lock
and
test
icebp
pop
lea
cmp
jb
dec
std
or
or
sub
test
pop
or
push
pushl
movups
inc
lock
mov
hlt
mov
adc
fdiv
push
cmp
lcall
je
mov
or
pop
insl
jg
dec
mov
cmp
dec
jp
mov
or
loopne
cld
sarl
push
sub
in
xchg
popa
sub
clc
or
and
jge
mov
je
pop
dec
jne
sbb
xchg
loope
mov
incl
dec
arpl
data16
popa
incl
mov
int3
push
xchg
inc
sub
adc
cmp
les
aas
add
out
aad
gs
outsl
add
aam
add
pop
insl
pop
repz
repnz
insb
xchg
dec
push
pop
in
push
or
push
cmc
mov
fists
roll
adc
sahf
add
and
hlt
pop
push
or
mov
add
push
test
push
loope
cmpsl
mov
pushl
xchg
test
pop
mov
insl
out
push
pop
cmpl
fists
push
das
repz
aas
mov
stos
data16
or
mov
mov
inc
mov
and
stc
std
in
shll
jge
xchg
dec
or
in
jb
jge
or
mov
jle
hlt
das
jg
jmp
mov
jle
xchg
data16
xchg
adc
or
popa
jle
push
imul
pop
in
mov
sbb
add
pop
push
loope
or
sbb
das
aaa
mov
dec
add
insb
inc
cli
divb
je
push
loope
push
mov
pop
cld
add
mov
pop
rcl
add
add
dec
jmp
jmp
mov
daa
push
pop
pop
xchg
pop
fcoms
inc
and
sbb
jae
pop
loop
push
popa
dec
add
add
aas
sub
sbb
xor
jns
loopne
or
lock
add
dec
mov
adcw
add
pop
loope
test
push
roll
adc
in
outsl
mov
es
pushf
lds
stc
jle
fwait
or
cmp
aas
add
or
mov
cmp
dec
mov
add
aaa
outsb
loop
int3
cmpsl
sbbb
sub
xchg
int3
mov
imul
fstpt
mov
dec
xchg
in
or
cmpsl
xchg
push
ret
stc
aam
hlt
cli
pop
inc
addb
ds
cmp
lds
push
mov
xchg
mov
sub
push
js
and
push
stos
addb
adc
or
add
test
pop
pusha
jmp
push
jge
adc
push
aaa
jno
andl
xorb
outsl
push
aaa
sub
adc
sbb
fistps
js
mov
leave
or
inc
in
push
and
mov
sbb
in
test
lcall
dec
cld
sub
andl
add
lock
mov
mov
jne
ret
cld
inc
out
or
popa
je
addr16
imul
dec
mov
inc
pop
sbb
push
mov
test
cld
dec
mov
in
pop
outsb
stos
das
insl
mov
pop
stc
je
pop
lds
fstpt
insl
sbb
xchg
push
cmpsl
std
add
popa
ljmp
lods
clc
jno
or
orl
jns
test
jns
arpl
and
mov
mov
sar
and
inc
addr16
mov
lds
mov
insl
jmp
push
in
data16
sub
lock
jne
mov
mov
push
mov
mov
mov
pop
out
mov
xchg
dec
imul
xchg
jge
in
jle
nop
rorb
dec
mov
pop
scas
lock
pop
in
outsl
dec
das
aaa
sbb
jmp
push
lea
mov
test
rorb
lret
sbb
jae
loop
pop
mov
adc
out
in
sbb
fistl
cmc
ret
fs
push
xchg
add
aas
lret
out
add
or
in
std
cmpsb
or
pop
aas
mov
ja
bound
jge
xor
movsl
std
jae
fistl
mov
add
pop
cld
out
fs
aas
cmp
addr16
or
lret
sti
pop
aas
mov
add
mov
mov
mov
in
outsb
jg
push
push
sti
addr16
pop
pop
push
arpl
lret
mov
idivb
arpl
cmpsb
ret
mov
imul
inc
rcr
fwait
add
or
shlb
mov
jmp
jl
push
test
in
fs
or
push
fwait
or
jle
lcall
sub
fucomp
pop
and
enter
rcr
arpl
mul
sar
addl
push
stc
pusha
fstpl
popa
add
popa
mov
xor
pop
in
aas
mov
or
jle
add
pop
or
and
aam
or
stos
push
fsubrs
push
insb
pop
jecxz
adc
adc
gs
pop
stc
adc
arpl
add
fisubrl
mov
stc
pop
and
xchg
fcomip
lahf
jmp
popa
or
pop
mov
xor
push
imul
rcrb
add
add
or
icebp
pop
pop
insb
outsb
add
out
add
rcll
jo
dec
sub
rcrb
jp
insl
test
lds
ljmp
mov
and
push
insl
rcl
repz
cmc
clc
mov
out
out
add
xor
jno
inc
lds
lock
pop
in
cld
repz
shlb
mov
cmc
or
jl
lret
pop
inc
mov
dec
jg
pop
mov
ret
pop
ljmp
mov
adc
out
sub
inc
mov
lret
inc
mov
fldcw
stc
negb
jecxz
or
mov
repnz
inc
movsb
jns
pop
add
subl
add
add
test
insl
mov
arpl
rcl
push
fcmovnb
cs
in
and
incl
fs
shl
arpl
cmc
mov
jl
xchg
decl
dec
fisttpl
lods
jns
sti
pop
push
movsl
ret
mov
inc
cmp
mov
and
add
int
cli
xchg
imulb
cmp
pop
rclb
loop
mov
or
in
lods
pop
loope
xor
add
lahf
mov
or
pop
pop
and
fsqrt
iret
adc
decb
aam
repnz
int3
pop
mov
add
sub
sub
loope
setnp
pop
push
in
mov
int
mov
fwait
gs
ret
pusha
lret
orb
leave
hlt
fwait
pop
movsl
decb
mov
mov
xchg
xchg
pop
call
arpl
add
faddl
stc
sub
out
int
std
or
mov
dec
push
and
mov
imul
fs
push
lock
int
popa
fs
aas
cmc
adc
xor
aaa
mov
int3
sub
enter
clc
hlt
pushl
jge
lea
pop
fdivrp
pop
icebp
fs
sarb
push
mov
sub
nop
shrb
mov
or
mov
cli
mov
dec
std
inc
dec
out
ds
pop
push
push
mov
or
sbb
mov
push
push
leave
and
dec
data16
mov
insl
jg
inc
adc
sbb
out
js
sub
lret
in
sbb
pop
push
cmc
lcall
xchg
and
mov
repz
and
dec
push
insl
and
inc
cwtl
call
sbb
out
out
dec
adc
faddl
in
cli
test
mov
or
das
inc
mov
sbb
insl
push
mov
pop
cli
dec
inc
adc
call
in
mov
lret
flds
in
add
pop
push
test
sbbb
lock
pop
shll
lock
arpl
xor
adc
arpl
or
shl
mov
jge
push
sbb
mov
mov
push
js
mov
push
xorl
faddl
xor
insb
jns
pop
inc
repnz
mull
sub
std
mov
mov
mov
mov
test
dec
push
int
jecxz
test
mov
add
add
outsb
sarl
and
outsl
or
loopne
loop
sub
test
call
lods
arpl
add
xor
rclb
xchg
fsubr
sbb
mov
pop
mov
mov
push
mov
mov
pop
jp
std
dec
jb
cmp
or
cmc
std
int
mov
mov
mov
mov
push
cli
push
test
stos
cli
decl
addl
dec
mov
push
inc
jnp
cmp
jge
aaa
fldl
stos
inc
jno
push
leave
jg
push
and
pop
jp
cmc
push
sub
outsl
push
mov
pop
dec
insl
movsl
xorb
add
add
jne
call
daa
dec
sub
out
iret
outsb
aad
mov
xchg
mov
or
mov
jg
or
cmpb
inc
out
jmp
mov
inc
movb
sbb
dec
push
push
lret
aam
insb
push
sbb
pop
out
jno
dec
frndint
in
pop
mov
add
push
ss
and
cmc
push
mov
push
fidivl
in
mov
aaa
push
loop
mov
jnp
and
adc
mov
bound
fs
add
call
mov
mov
in
mov
notb
decl
push
in
push
jl
push
jb
jnp
or
hlt
push
repnz
jg
ja
dec
mov
fildl
loopne
std
or
and
add
rclb
inc
jns
iret
cld
adc
ds
addb
xchg
pusha
outsb
psubsb
hlt
mov
dec
xor
pop
cmp
shrl
xchg
cmp
push
jmp
or
call
stc
push
or
cld
insl
add
call
mov
mov
aam
pop
insl
push
xor
mov
add
int
data16
stc
cltd
ret
in
mov
out
push
out
sbb
xchg
frstor
xchg
std
push
jnp
push
andl
data16
lds
sub
jmp
gs
or
cmpsb
ret
insb
sbb
xchg
mov
sarb
ljmp
in
inc
loope
out
ret
mov
aad
add
xor
or
or
xchg
cs
or
sub
fdivr
xor
xchg
loopne
and
fdivr
xor
ds
pop
jecxz
sub
lods
outsl
pop
dec
mov
into
out
outsb
dec
neg
pop
rcll
mov
inc
jg
jl
mov
add
mov
sub
jbe
mov
outsl
outsl
sub
cmpsl
mov
xor
test
jg
stc
push
arpl
jmp
mov
xor
daa
bound
sub
xchg
dec
popa
add
sbb
outsl
lods
aas
or
mov
imul
hlt
clc
push
loop
push
adcl
test
push
pop
mov
inc
jecxz
lahf
inc
out
fsubl
sarl
dec
push
sbb
stc
test
adc
xchg
cmp
movsl
xorb
or
adc
jp
mov
ss
je
addr16
push
pop
adcl
jno
xchg
jae
aas
leave
xor
pusha
xchg
inc
js
inc
xor
jne
shll
loopne
addr16
or
rorb
and
fwait
add
js
cltd
call
mov
outsl
adc
pop
add
fwait
or
or
roll
pop
add
dec
push
mov
mov
jno
out
iret
sbb
or
clc
and
testl
std
stc
clc
outsb
cmc
imul
sbb
loope
popa
mov
push
outsb
ja
out
inc
imul
sbb
add
clc
cld
inc
arpl
or
and
and
mov
add
dec
inc
sub
and
enter
les
or
incl
dec
sbb
imul
loope
sub
or
cli
cmp
ljmp
rolb
fildll
dec
xorb
outsb
or
dec
adc
pop
xlat
pusha
aad
lret
addb
mov
xchg
pop
mov
cmpsl
add
loope
sbb
pop
add
jns
ss
lret
xor
or
cmp
mov
adc
out
add
insb
ds
jle
cli
stc
sub
xlat
add
in
add
jg
cwtl
andl
cmpsl
pushl
fwait
shll
fcomip
mov
sar
enter
jmp
sarl
dec
sub
or
or
push
aaa
in
clc
mov
subl
add
add
into
inc
jnp
add
out
mov
xorb
adc
cmc
mov
rcrb
dec
cmp
loop
cli
mov
xor
cmp
and
cli
jb
jnp
jno
cwtl
roll
jo
push
dec
and
std
out
clc
into
or
dec
out
mov
jg
sub
dec
in
cli
xchg
ljmp
xor
sti
shll
loopne
jecxz
push
jb
push
dec
push
in
lds
inc
add
jns
lods
jnp
sub
lcall
cld
enter
add
cs
or
sub
push
or
loopne
mov
mov
imul
enter
push
repz
out
jne
cli
inc
sub
mov
arpl
mov
andl
out
ss
mov
cmpsl
loop
jno
mov
call
mov
call
out
lds
xlat
call
popf
out
cmp
sub
jge
jns
push
out
pop
loop
push
outsl
test
movsb
aaa
jl
fcompl
add
adc
mov
stc
jno
pop
int
mov
jns
jb
jne
outsb
iret
xorl
outsl
adc
je
jne
in
mov
sbb
jne
lret
cmpsb
imul
pop
shll
stos
cmpsl
cmp
fstpt
adc
popa
push
cmp
xor
shrl
je
xchg
lret
in
fnsave
jne
outsb
nop
jae
cs
lret
lods
ja
jp
je
jns
jp
in
mov
mov
jne
cs
jl
jp
jp
jl
jge
in
mov
jle
ja
xor
cmpsb
imul
cmpsb
imul
imul
dec
mov
ss
adc
jbe
mov
xor
mov
fldt
fucomi
jo
arpl
ja
adc
js
jno
aaa
dec
jne
shll
test
stc
test
insl
inc
jp
or
aad
outsb
pop
jl
jnp
js
xor
insl
add
add
jle
add
lock
sub
jns
lret
mov
ja
inc
jae
js
pop
ret
push
adc
ja
shrb
xchg
add
push
pushl
clc
sub
dec
add
jmp
inc
push
decb
test
rcrl
xchg
add
addl
nop
sbbl
fs
stc
jno
and
leave
andb
or
inc
xor
jno
add
nop
jg
cmp
fisttpl
movsl
insb
adc
lret
lret
loope,pn
adc
jne
jo
insb
and
stos
daa
outsb
in
fwait
in
ja
sub
jp
int
fwait
mov
outsb
adc
mov
inc
xchg
stos
cmp
pusha
int
jae
out
adc
arpl
mov
xor
data16
repz
or
imul
js
stos
jnp
cmpl
jbe
outsl
dec
call
sti
out
adc
ja
jo
xor
jb
jne
pop
imul
mov
cltd
shll
pop
push
dec
shll
or
test
shll
mov
nop
xchg
lods
jns
jb
gs
fnstenv
in
jl
jne
adc
cmp
adc
dec
jnp
lcall
and
imul
imul
xor
divl
in
jp
int
popa
shll
fwait
jge
lcall
ja
lret
in
fsubl
jbe
adc
jne
js
lcall
pop
imul
test
lcall
adc
pop
adc
int
imul
add
cmc
xor
sub
js
xor
jae
pop
aas
jecxz
lret
gs
sbb
js
jbe
fnstenv
call
addr16
add
jo
dec
imul
outsb
imul
pop
push
jno
mov
xlat
xor
dec
jne
imul
xor
jo
imul
popa
jo
dec
mov
cld
aas
jno
imul
add
repnz
inc
jo
pusha
pop
push
bound
dec
jo
test
inc
jo
decl
bound
clc
inc
decl
pop
fs
pop
jmp
jno
pusha
gs
outsl
insl
cmp
sar
fs
imul
adc
dec
imul
pop
pusha
outsb
repnz
cli
inc
imul
push
jb
mov
lods
std
and
popl
test
pop
pop
imul
pop
out
imul
fs
push
insb
pop
push
pushl
outsb
gs
inc
dec
clc
inc
cld
aas
outsl
pop
pusha
insl
arpl
gs
cmp
std
fdivs
push
cmp
aas
imul
cld
addr16
je
jb
cmp
push
push
bound
cmp
lods
insl
push
cmp
arpl
push
gs
mov
jno
push
pop
pusha
jae
insl
outsl
dec
pop
mov
mov
fisttpl
inc
pop
mov
in
sbb
arpl
bound
pusha
jns
lret
fbstp
push
inc
jnp
insb
popa
addr16
outsl
bound
pop
ds
pop
inc
imul
std
cmp
rcl
or
imul
shl
scas
std
dec
data16
inc
dec
pop
insb
pop
les
in
and
cmp
fs
loop
imul
jo
pop
jno
stc
jg
xchg
cmp
outsb
pop
je
arpl
ds
inc
and
insb
gs
push
addr16
push
pop
mov
je
inc
inc
dec
inc
ds
das
das
and
jo
notl
add
inc
sbb
test
sbb
pop
fistpl
aad
fidivl
daa
ds
or
arpl
outsl
mov
cmp
mov
inc
lcall
outsb
push
pop
lock
mov
inc
add
pop
inc
pop
jb
jb
push
gs
inc
out
insl
inc
arpl
sub
push
test
sbb
dec
xor
xor
imul
jecxz
js
xor
je
push
jecxz
lea
outsl
pop
jno
mov
insl
insb
bound
jge
mov
popfw
push
pop
fs
adc
cli
ret
or
fs
std
or
dec
inc
dec
sub
daa
bound
mov
cmp
das
push
incb
bound
adc
gs
jne
aas
arpl
or
adc
pop
pop
pop
ss
push
std
and
aas
insb
sbb
pop
adc
aaa
adc
data16
dec
clc
es
test
jg
data16
pop
jno
popa
dec
inc
cmp
jmp
js
ljmp
mov
imul
or
lods
ja
decl
dec
pop
cmpsl
dec
incl
sub
outsb
pop
imul
mov
dec
pop
jg
insl
std
test
xchg
dec
pop
bound
mov
pop
aad
clc
cmp
popa
mov
outsl
cld
in
fs
inc
xor
sub
inc
push
ds
dec
sub
sub
or
int
aas
pushw
insl
loope
push
pop
cmp
addr16
mov
inc
mov
dec
sbb
jl
pop
dec
pop
fs
fdivr
adc
std
icebp
call
outsl
popa
inc
push
pop
push
insb
cmpsl
std
cltd
add
mov
sbb
mov
fisttpll
mov
cli
inc
xchg
xor
inc
jno
mov
scas
insb
std
dec
mov
mov
das
pop
shlb
mov
mov
and
insl
pop
add
mov
dec
fsubs
jecxz
adc
inc
cmp
cld
cmp
cmc
cld
sub
ret
popa
inc
aam
sbb
cmp
jge
or
lret
daa
addr16
fcmovnu
jb
cmp
dec
pop
dec
lahf
clc
cmp
sub
inc
clc
fistps
dec
lea
mov
aas
inc
cmp
aad
jmp
add
cmp
jo
out
mov
fimull
cmp
push
lds
imul
and
pop
aas
cmp
dec
push
xor
cs
fcmovnu
sti
cmp
inc
outsb
daa
jo
cmp
pop
jge
gs
push
daa
jo
pushaw
cmp
and
sub
inc
stos
push
inc
stos
insl
pop
jnp
cmp
push
insl
pop
mov
inc
lods
test
sub
cmp
aam
sti
cmp
inc
cmp
push
push
aas
sub
in
dec
push
or
dec
mov
pop
xor
bound
and
push
mov
push
icebp
outsl
fs
inc
dec
mov
jg
pusha
pop
or
addr16
cmp
push
mov
fisubrl
xchg
imul
aas
insb
mov
inc
inc
dec
sbb
jl
inc
pop
ds
sub
cmp
mov
imul
mov
xor
lds
cmp
sbb
in
or
or
gs
pop
push
imul
push
cmp
bound
outsl
cli
push
mov
pop
outsl
jb
inc
cmp
ds
aaa
push
sub
or
dec
ds
inc
inc
cmp
xchg
sub
inc
and
cmp
cs
outsl
mov
cmp
push
ja
aad
sub
jle
xor
push
pop
pop
outsl
bound
int
mov
out
sbb
cld
push
cmp
push
arpl
jg
popa
pop
call
mov
dec
cmp
sar
push
push
cmp
sub
pop
cmp
push
dec
push
ja
cld
fstl
aas
mov
outsl
inc
pop
jo
ret
fs
cld
xchg
std
inc
mov
outsl
daa
jo
es
js
out
lods
push
adc
and
fwait
daa
dec
jo
cmp
mov
pop
pop
loope
incb
inc
dec
inc
dec
out
outsl
sbbl
arpl
inc
bound
in
mov
in
fldt
fbstp
mov
pop
insb
push
popf
cmp
adc
xchg
inc
cli
pop
nop
ljmp
pusha
mov
or
mov
mov
cld
or
add
cmp
cmp
inc
outsb
xchg
push
mov
pop
inc
cmp
cli
mov
int
xchg
push
imul
dec
ds
dec
ffree
aas
jne
jae
mov
sbb
mov
sub
xor
cmp
mov
pushl
outsb
shrl
outsb
pop
push
push
add
lods
jno
fwait
imul
daa
pusha
das
sbb
dec
pop
push
pop
jecxz
jno
clc
jg
sub
or
insl
mov
pop
push
loope
and
jb
mov
pop
sub
xchg
pop
inc
mov
xchg
dec
sub
add
mov
test
imul
add
pop
gs
mov
and
out
aas
pop
pop
outsl
outsl
mov
cwtl
out
dec
or
fnstenv
fstpl
popa
xchg
jl
xchg
lret
in
pop
xchg
push
movsb
pop
mov
dec
mov
in
in
adc
jge
mov
pop
mov
xor
add
inc
test
xor
rcll
pop
xchg
popf
cmpsl
jbe
in
mov
lcall
pop
clc
movb
incb
clc
call
std
push
insb
jmp
xor
cmp
fcomp
pop
inc
pushl
sar
arpl
dec
mov
or
pop
ds
or
icebp
jno
addr16
push
repz
inc
cmp
fbld
gs
testl
fsubrl
inc
pop
sti
pop
pop
sbb
mov
iret
jno
imul
pusha
popfw
lds
ficoms
inc
jo
cmp
icebp
popa
xchg
clc
inc
outsl
sbb
call
dec
jne
outsb
pusha
ja
pusha
mov
push
int
insl
lods
icebp
inc
xlat
aas
pop
cmp
pop
pop
xor
std
pop
xor
sub
push
fsts
cmp
in
outsl
add
adcl
jl
or
inc
mov
pushl
adc
dec
pop
inc
loop
or
cld
jne
mov
in
add
sub
jb
jae
bound
push
sbb
pop
mov
mov
std
inc
daa
stc
push
enter
sub
adc
cli
pop
std
popa
clc
addr16
pop
insb
scas
or
and
or
and
xor
jb
push
sub
or
push
aaa
cs
mov
insb
shrb
cvtps2pi
sub
das
xor
fdivr
out
decl
das
sub
sub
push
popa
and
and
pop
pop
or
sti
add
xor
push
xor
mov
imul
ficoml
mov
inc
xlat
mov
sub
sti
faddl
lret
bound
test
outsb
bound
insb
inc
lahf
mov
lds
pop
outsb
outsl
xchg
mov
inc
inc
dec
dec
test
imul
pop
jmp
clc
sub
insb
sub
out
sub
dec
test
test
pop
and
and
arpl
add
ljmp
loopne
mov
mov
outsl
jae
je
imul
les
dec
push
pushl
mov
jae
inc
jne
cld
xchg
jecxz
test
fistps
add
push
mov
insl
and
lods
lds
adc
dec
dec
push
push
pop
cmp
aaa
gs
imul
inc
mov
inc
dec
mov
mov
aaa
mov
in
popf
inc
inc
mov
mov
cmp
outsb
sbb
dec
dec
std
inc
outsb
or
pop
cld
and
and
dec
daa
mov
fs
cmpsb
sbb
jbe
scas
push
cmp
dec
dec
push
dec
inc
fistpl
jge
sbb
dec
sbbl
or
add
jo
out
inc
mov
cli
ljmp
daa
sbb
sub
sub
pop
fwait
insl
arpl
lea
insl
sub
pop
adc
sbb
pop
cmp
subl
push
sti
sbb
sbb
sub
dec
shll
pop
push
fisttps
xor
jo
add
imul
pop
push
outsl
adc
daa
sub
sbb
jmp
or
sub
adc
adc
mov
jl
dec
mov
sub
arpl
imul
inc
inc
mov
daa
inc
dec
bound
sub
adc
pop
xchg
dec
aaa
dec
dec
aam
inc
push
sbb
dec
dec
sub
sub
push
push
cmp
mov
das
jno
outsl
push
popf
and
std
es
or
aas
push
sub
gs
imul
jb
popa
ss
dec
mov
lcall
pop
sarl
scas
inc
arpl
test
sub
addr16
mov
sub
call
daa
test
jl
or
sub
and
and
sbb
xor
test
pop
sub
push
daa
outsb
sub
pop
outsb
fnstsw
scas
iret
arpl
jbe
imul
es
stos
shrl
xchg
addr16
dec
and
dec
fistpll
imul
pop
sub
fdivs
jae
and
sbb
fadd
xor
jmp
shrl
shrl
inc
fs
xor
scas
add
sar
add
das
xor
and
push
insb
ja
pop
pop
das
pusha
pop
mov
or
xor
mov
push
mov
popa
sub
add
mov
test
mov
insb
xor
add
and
sbb
push
loopne
frstor
sbb
sbb
insb
mov
pop
repz
sbb
add
cmpsl
xor
int
test
sub
cltd
lret
subl
mov
cmp
ss
push
pop
sub
sbb
sbb
aaa
ficomps
sub
lds
pop
pop
cmp
lods
pusha
push
xor
and
sub
in
sbb
sbb
cmp
aas
xor
cmp
rcl
test
cwtl
xor
mov
enter
inc
and
xor
xor
xor
xor
dec
pop
dec
xor
xchg
cmp
sub
pop
ss
inc
ss
or
xchg
jo
sbb
lods
jb
ja
sub
jecxz
stos
lock
es
aaa
adc
es
inc
sbb
dec
lret
mov
lods
mov
and
popa
dec
dec
cmp
bound
fwait
cmp
push
out
push
pop
cmp
dec
dec
jo,pt
popa
add
push
mov
arpl
notl
fsubrs
add
jne
inc
popa
jmp
aas
dec
pop
cmp
or
popa
sbb
mov
ja
jno
xchg
imul
push
pop
jb
adc
sarl
sbb
popa
aas
shlb
arpl
fadd
lods
insb
fs
inc
pusha
mov
sbb
outsb
cmp
pop
mov
ljmp
daa
jo
rorb
pop
mov
add
fucomi
scas
sub
pop
cmp
pop
inc
ja
cmp
aad
cld
inc
mov
int3
outsb
clc
mov
pop
add
jo
pop
dec
sub
jo
push
call
inc
jno
arpl
scas
push
stos
push
pop
test
mov
popf
popa
pop
dec
push
inc
cmp
fildl
outsl
sbb
outsb
jo
jne
inc
fs
inc
subl
js
rol
cmp
arpl
arpl
push
add
jg
aaa
mov
xor
xor
inc
inc
inc
inc
inc
ss
inc
dec
dec
dec
dec
dec
dec
push
scas
dec
push
push
pop
fcomps
mov
xchg
push
loop
hlt
push
sub
push
je
ss
divb
dec
inc
sub
popa
cmp
push
pusha
mov
adc
inc
insb
pusha
push
mov
jnp
and
addr16
push
ds
push
std
fsubs
arpl
adc
dec
outsb
push
add
jecxz
in
fs
sub
add
cmp
test
mov
aad
xchg
xor
pop
test
popa
ja
or
add
dec
popa
cmp
insl
jl
ret
jne
jne
das
loop
sbb
dec
imul
jo
sub
pop
es
or
pop
loop
daa
bound
imul
sub
inc
dec
inc
sub
push
call
jmp
jno
stc
xor
mov
push
std
bound
jno
test
data16
inc
std
je
and
add
dec
das
mov
push
stc
xor
arpl
inc
mov
jg
sbb
fldcw
or
and
sarb
and
and
pop
cli
or
outsl
inc
in
movsl
dec
frstor
adc
adc
xchg
xchg
xor
mov
stc
push
mov
inc
in
push
lahf
bound
movsb
jmp
insl
xor
mov
repz
pop
dec
dec
in
sti
inc
jno
inc
dec
sub
jmp
addr16
ret
ret
sbb
pop
cmp
dec
ss
sub
mov
pop
push
insl
pop
adc
xchg
mov
sub
sub
add
mov
pop
pop
xor
push
xor
sub
sub
add
inc
jae
or
or
jae
incl
sub
sub
sub
sub
jae
jae
mov
sub
sub
ljmp
lock
sub
cs
xor
push
sub
imul
xor
sub
jg
xor
xor
and
xor
sub
mov
xchg
xor
mov
das
out
shll
sub
push
xor
xor
xor
ljmp
das
cmp
aas
xor
push
sub
xor
jno
jnp
jle
xchg
mov
xchg
xor
jmp
xor
xor
xor
sub
das
or
xor
push
xor
std
pushl
xor
xor
mov
xchg
xor
jg
out
xor
xor
std
clc
xor
add
xor
lods
xor
xor
xor
ljmp
push
aaa
push
ss
xor
xor
pop
xor
jns
xorl
mov
xchg
xor
aaa
mov
fnstenv
xor
mov
lret
aaa
arpl
mov
lock
ljmp
cmp
xor
cmp
cmp
adc
xor
inc
cmp
push
cmp
jg
ss
cmpl
cmp
test
mov
mov
ss
add
adc
pop
cmp
cmp
imul
movsb
cmp
sarb
aaa
dec
ret
test
add
sub
xchg
mov
ljmp
lcall
das
mov
push
xor
inc
xor
xor
inc
dec
sti
pusha
xor
xor
xor
stc
xor
mov
fidivs
ss
xor
jg
jg
xor
mov
xchg
xor
xor
repnz
xor
daa
dec
mov
xor
lret
sarb
out
icebp
xchg
ss
aaa
xor
das
cld
cmp
data16
cmp
cmp
xor
cmp
mov
xchg
xor
aaa
sbb
lcall
cmp
cmp
cmp
pop
loope
clc
cmp
sbb
jnp
jg
mov
cld
call
insb
ss
cmp
and
cmp
cmp
ds
cmp
or
cmpb
cltd
cmp
loop
imul
jg
jo
stc
xor
sub
imul
mov
sub
sub
and
cmp
dec
xor
js
subb
pushl
mov
mov
cs
xor
das
stc
sub
cs
adc
xor
clc
inc
subb
adc
cs
shlb
fdivl
out
out
adc
push
xor
mov
sub
mov
xor
sub
pop
xor
out
clc
pop
xor
popa
mov
fwait
xor
das
clc
xor
in
xor
adc
sub
mov
xor
xor
xor
jge
add
and
jo
ja
aaa
divb
xor
arpl
insl
xor
ss
sbb
andl
in
cmp
xchg
push
gs
aam
fbstp
outsb
mov
cmp
cmp
aaa
stos
call
pop
clc
cmp
cmp
cmp
xchg
cmp
cmp
sub
xor
or
cmp
xor
das
push
arpl
cmp
dec
cmp
ss
cmp
cmp
ss
fnstsw
sub
out
cmp
cmp
ds
cmp
outsb
aaa
xchg
cmp
cmp
negl
xchg
or
sti
adc
sbb
dec
hlt
sar
ljmp
push
sub
sub
cmpsl
sub
das
ret
mov
pop
sub
jge
dec
fwait
sub
xor
das
icebp
sub
jg
ljmp
and
xor
push
cs
pop
xor
cs
xor
sub
cs
das
pop
push
sub
dec
jge
xchg
jmp
pop
ss
xor
mov
das
hlt
xor
xor
xor
xor
xor
push
sub
xor
loope
push
decl
or
sub
xor
xor
xor
cld
push
xor
ss
mov
xor
xor
pop
xor
jg
cmp
cmp
cmp
cmp
jmp
cmp
xor
cmp
cmp
ss
cmp
cmp
dec
pop
lock
jmp
cmp
ds
aaa
aaa
dec
cmp
lret
pop
jg
fwait
gs
rorl
sub
sub
xchg
outsl
xor
cmp
cmp
insl
out
and
add
or
adc
sbb
lock
mov
xor
data16
xor
fildll
sub
cmp
inc
cmp
pop
xor
jne
jne
test
adc
jmp
jg
jg
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
xchg
cmp
hlt
cmp
cmp
cmp
cmp
fidivrl
dec
stc
cmp
push
jmp
ja
aas
jg
hlt
cmp
ss
mov
cmp
sarl
cmp
ds
cmp
stos
icebp
outsl
clc
cmp
ds
cmp
mov
insb
lock
mov
cmp
cmp
ds
pop
repz
ljmp
fiadds
sub
sub
push
pop
sub
out
sub
ret
xchg
cli
std
sub
das
sub
movsl
xchg
push
jle
js
sub
outsb
sub
add
leave
sub
insb
das
xorl
addr16
sbb
mov
test
cld
dec
xor
jns
ds
aad
jnp
xor
stos
add
push
add
sbb
in
ja
and
inc
outsl
cs
pop
push
out
outsl
or
je
adc
dec
dec
pop
push
dec
inc
push
push
inc
push
mov
pop
inc
push
outsl
jne
inc
dec
xor
sbb
je
popa
jb
divb
gs
dec
imul
push
imul
push
outsl
int
std
notb
popa
insl
sbb
arpl
add
cs
sti
sti
mov
sub
fs
jae
mov
call
je
and
jo
jae
arpl
jnp
xchg
sub
imul
je
insl
movsl
cli
jbe
cmp
bound
and
outsl
fldcw
ss
fs
in
ficoms
jbe
in
jns
or
mov
jae
jbe
pop
jns
jo
xchg
test
jb
jns
xor
xor
out
in
outsl
sub
push
gs
add
fmull
aas
negb
fstpt
xor
and
outsl
outsb
imul
filds
push
jae
and
rol
insl
iret
imul
mov
iret
ficomps
inc
bound
jo
mov
std
std
inc
gs
popa
push
ds
pop
inc
js
adc
in
divb
fildl
push
adc
jns
dec
jmp
data16
inc
inc
fs
imul
outsb
inc
and
jne
dec
inc
inc
mov
push
jne
push
sbb
inc
fs
lds
je
dec
lods
inc
cvtps2pi
in
jae
add
cmovno
pusha
outsl
out
sub
cmp
push
or
imul
leavew
inc
push
or
dec
pcmpeqw
mov
pop
cmpsl
sbb
dec
jae
xor
fiadds
lds
movd
jbe
roll
fdivrs
jae
xchg
insl
jbe
inc
jmp
add
mov
and
daa
pusha
pop
sti
fimuls
sti
imul
insb
sti
lods
icebp
add
imul
dec
insl
imul
or
jae
and
add
or
add
jg
add
or
test
jbe
ja
push
jbe
push
jno
cmp
pop
push
adc
sub
sahf
add
sbb
out
adc
xor
xor
xor
cmp
or
adc
gs
mov
mov
add
mov
out
ja
outsl
add
fwait
data16
xor
add
push
sbb
add
verw
ss
lcall
pusha
inc
repz
fldt
addr16
sbb
inc
xchg
dec
pushf
into
arpl
mov
jnp
psubd
and
addr16
out
sti
or
push
or
mov
in
dec
mov
insb
mov
or
add
add
ss
outsl
fmul
xchg
add
int3
push
aaa
adc
icebp
xor
sbb
xor
ret
adc
add
jmp
cmp
jbe
mov
fmull
pop
leave
lock
or
aas
lret
add
or
loope
mov
nop
call
push
fdivl
daa
sub
inc
adcb
adc
dec
or
add
add
inc
popa
inc
add
call
add
rolb
nop
add
add
and
sub
sub
cltd
shlb
jns
add
aas
repz
push
sbb
adc
xchg
add
add
jg
sub
test
add
mov
add
add
add
add
jbe
sub
ljmp
add
mov
xor
incl
inc
jb
popa
je
inc
imul
outsb
addr16
or
gs
fsubrs
ja
pushw
push
inc
insb
jne
push
sar
popa
and
je
push
imul
fisttpll
add
outsl
jae
dec
popa
outsb
fs
inc
je
jb
bound
jae
outsl
jbe
jle
pop
jnp
js
and
jo
dec
popa
insl
inc
inc
gs
push
sbb
test
push
jb
mov
fldt
cmp
outsb
or
inc
addr16
fs
outsl
dec
push
lcall
outsb
outsw
adc
add
mov
xchg
mov
imul
adc
inc
mov
and
pushf
gs
jnp
popa
daa
push
xchg
jae
outsl
outsb
mov
mov
fsubs
dec
outsl
popa
fs
out
jg
mov
mov
jns
fldl
je
adc
push
mov
mov
gs
outsl
outsl
insb
pop
mov
orb
xor
jo
outsl
je
adc
int
in
and
push
xor
inc
fisubs
aaa
jmp
jmp
adc
pop
adc
pop
or
pop
or
call
mov
mov
decl
or
and
mov
add
mov
jp
call
mov
sti
mulb
add
inc
push
sbb
ljmp
or
repz
inc
sub
push
push
jns
aaa
xor
out
dec
out
ud0
inc
xchg
xchg
sbb
mov
or
lcall
fisttpl
xchg
lock
push
or
icebp
adc
add
sub
bound
push
test
insl
add
push
push
add
out
movsl
dec
mov
fstpt
adc
or
mov
lret
mov
andl
sar
or
out
sub
inc
das
dec
or
aam
fsubs
repnz
pop
ret
mov
jo
gs
imul
je
push
pop
push
pmaxub
je
wbinvd
pop
insw
add
xchg
or
fsubrs
sub
and
push
push
fwait
addb
in
or
arpl
divb
arpl
pop
arpl
je
xorb
push
xchg
or
insb
or
mov
arpl
out
pop
cmp
jb
jbe
push
sbb
outsb
arpl
lods
jecxz
sub
js
inc
jb
dec
aam
das
outsl
frstor
jo
outsb
je
je
insl
mov
mull
pop
push
jae
sbb
call
and
rcrb
pop
shll
dec
sbb
jo
or
inc
xor
jne
xchg
push
sbb
sbb
cmp
dec
fs
or
ret
jge
dec
adc
nop
pop
fdivrl
mov
shlb
lods
imul
incb
inc
mov
add
sbb
stc
por
pop
ja
loopne
sidtl
add
add
in
insb
repz
adc
or
inc
add
pcmpgtd
mov
add
pop
xor
sbb
sti
sahf
sub
add
adc
cmp
mov
push
aaa
dec
inc
fs
or
mov
mov
push
cs
add
and
popa
mov
nop
fists
es
jmp
jb
popa
je
mov
lret
cs
ss
mov
dec
arpl
mov
jmp
dec
lock
and
add
add
incl
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
