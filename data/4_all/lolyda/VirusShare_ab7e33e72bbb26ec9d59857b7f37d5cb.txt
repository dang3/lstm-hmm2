daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
mov
pusha
fnsave
add
jmp
fpatan
addr16
ud1
inc
add
leave
test
stc
push
mov
fidivrs
call
add
push
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jnp
push
sub
rclb
and
or
je
inc
mov
mov
mov
ja
mov
mov
mov
mov
cmp
jne
test
mov
aaa
insb
pop
or
cmpsb
push
outsl
add
adc
aaa
ret
in
jmp
sbb
sbb
xor
dec
int
mov
add
cmp
mov
jl
mov
idivb
lea
adc
add
stos
stos
stos
push
pop
push
lret
sbb
or
inc
push
adc
outsb
cmp
adc
and
push
or
pop
cmp
les
mov
negb
movb
lcall
fistl
int3
into
mov
mov
or
shl
add
inc
mov
fbstp
repnz
not
sub
lea
mov
push
mov
cld
shr
rep
pop
push
and
mov
movsb
dec
out
fnstsw
and
push
push
lea
mov
sbb
pop
ja
jno
inc
lret
sbb
push
sbb
jb
xor
and
jmp
dec
and
fldcw
lahf
adc
and
jnp
cmp
sub
mov
push
mov
dec
sub
cs
das
jnp
inc
push
jns
lea
mov
popa
orl
sub
xchg
test
push
push
imul
add
je
mov
mov
jb
add
std
mov
dec
cmpb
jne
adc
push
adc
fst
popa
jle
nop
ret
int
pushf
push
pop
mov
jmp
cmp
push
adc
jle
pop
push
push
leave
push
sub
adc
mov
push
mov
dec
add
ret
or
sbb
add
dec
mov
sbb
subb
xor
fwait
imul
or
pop
in
lea
fwait
pop
or
or
stos
push
lret
or
push
push
inc
sahf
mov
dec
and
add
xor
mov
jecxz
mov
aaa
adc
xor
push
mov
push
add
add
pop
mov
mov
push
xor
jl
mov
rcll
add
je
xor
ret
or
dec
jp
jecxz
mov
hlt
insb
ret
bound
xchg
sub
repz
sbb
push
or
adc
push
cli
sub
or
push
mov
xor
jo
push
push
sub
xor
xor
enter
cmp
repz
add
imulb
inc
lock
fcompl
jmp
push
aad
in
mov
xchg
xor
add
inc
incl
enter
lea
push
push
dec
es
or
mov
test
sub
xchg
push
dec
cmp
pop
push
adc
insb
bound
push
cwtl
loop
or
pop
push
push
cmp
and
js
push
cmp
add
push
add
in
bound
adc
in
inc
xlat
jl
pop
jp
push
push
adcl
lret
fnstcw
repnz
add
or
fcompl
sub
dec
iret
xor
adc
pop
hlt
mov
mov
cmpsb
fnstenv
rclb
inc
sub
or
decl
push
and
or
lcall
fs
test
popa
mov
lahf
mov
sbb
mov
gs
popa
xlat
fs
cmp
xchg
push
push
sub
cmp
push
mov
cwtl
mov
inc
push
adc
dec
int
rcll
in
mov
dec
push
mov
pop
add
xor
fildl
mov
sub
dec
add
mov
cli
mov
push
xor
sar
cld
lret
pusha
imul
add
sbb
outsl
out
push
add
cmpb
jne
test
jle
push
fcmovnu
fcomi
dec
jns
add
push
mov
mov
cld
in
add
out
or
jmp
and
mov
cmp
nop
mov
mov
sbb
lea
test
out
mov
sbb
sub
ljmp
cmp
lea
shl
lret
pop
rcr
into
cmp
arpl
ja
mov
pop
cmp
int
jb
inc
out
pop
aas
sub
sub
bound
insl
scas
lds
push
adc
out
orl
les
iret
push
lret
shll
pop
rclb
cmpsb
xchg
push
sbb
xchg
cmp
push
scas
scas
or
test
pusha
sub
mov
pusha
xchg
inc
sbb
shr
push
lahf
lds
rorb
push
push
lea
das
cld
add
push
shl
gs
test
pusha
fcomps
jmp
je
mov
cltd
mov
jmp
and
pop
rcl
inc
push
sub
xchg
cltd
push
push
dec
adc
and
push
inc
fsubs
imul
lea
adc
data16
and
inc
pop
mov
lea
loope
lea
sub
cmp
test
fsub
mov
mov
xor
loop
or
lret
xchg
sbb
xor
pop
and
add
pop
jg
push
push
push
fnstenv
or
aam
es
dec
inc
popl
lcall
mov
dec
xchg
fistpl
sbb
inc
sbb
adc
sbb
sbb
sub
pop
pop
mov
sbb
xchg
or
mov
mov
nop
inc
test
sub
icebp
xlat
js
scas
jno
push
pop
push
xor
mov
push
and
or
sub
outsb
adc
adc
adc
sub
xchg
add
or
outsb
jo
je
or
aad
js
test
sub
imul
sub
sbb
mov
movsb
sbb
sub
in
push
push
xchg
adc
xchg
rcrl
cmp
popa
in
add
add
sbb
pusha
xorb
sbb
not
cmpl
pop
add
scas
mov
cli
or
or
jmp
and
rclb
sub
adc
cmpsb
das
adc
pop
xor
fwait
scas
sbb
aaa
sbb
mov
mov
xor
data16
mov
mov
inc
cmc
out
stos
jae
cmpl
sbb
jne
inc
add
out
add
mov
loopne
xor
inc
ret
and
xchg
and
mov
or
movl
dec
shrb
ljmp
roll
inc
outsl
or
add
inc
dec
jmp
popf
fsubrs
jl
add
addr16
sbb
das
ss
rorl
push
adc
fcompl
cltd
jo
mov
test
or
pop
xchg
dec
movhps
sbb
outsb
movsb
fisttps
pop
cs
sub
inc
mov
add
push
and
sbbb
scas
or
push
ret
leave
or
pop
leave
cmp
add
sub
push
sub
add
insb
popf
mov
outsb
add
adc
ret
or
shlb
arpl
inc
pop
or
pusha
push
cmp
sbb
sbb
cvtps2pi
clc
jbe
push
push
mov
mov
je
or
xor
gs
int3
sbb
aam
cmp
pop
dec
into
jl
mov
inc
inc
pop
push
or
mov
dec
add
or
into
js
fs
out
lret
adc
push
outsl
or
aaa
in
push
jp
ficoml
mov
addb
push
xchg
push
dec
and
fld
jbe
pop
js
pusha
dec
mov
dec
or
lock
pop
outsl
sub
push
loop
movsl
sti
pop
cmpsb
mov
push
push
js
and
pop
test
test
and
gs
pop
add
xchg
sbb
insb
outsb
fcompl
lock
pushf
mov
mov
ret
in
int3
shll
jbe
mov
dec
add
adc
pushl
out
inc
mov
js
push
fnstsw
lock
dec
push
push
and
jo
int3
notl
push
jp
fld
pusha
sbb
mov
sbbl
and
jae
je
lock
pusha
cmc
adc
cmpl
push
cmp
insb
insb
mov
jge
insb
mov
shl
and
sub
inc
push
and
cmp
push
sub
mov
and
or
aaa
fisubrl
jmp
sbb
mov
incl
xor
pop
mov
dec
adc
js
add
and
shll
inc
cltd
sub
and
clc
out
sbb
fstps
sub
je
pop
aas
popf
jnp
test
fisubs
adc
jbe
or
xor
testb
movups
repnz
wrpkru
or
jbe
mov
xor
rcll
and
mov
popa
and
fnclex
test
jmp
push
fchs
push
dec
hlt
pusha
clc
jbe
lahf
cmpsb
gs
mov
call
sbb
xchg
mov
and
pop
fwait
xchg
mov
inc
imul
dec
xchg
addr16
inc
mov
dec
sahf
cmpl
jns
sbb
and
xor
or
jl
je
push
and
and
inc
push
repnz
adc
iret
inc
leave
xor
and
test
sub
dec
adc
outsb
xchg
lret
sbb
adc
xchg
jae
jbe
push
in
aad
pop
and
inc
push
enter
add
sub
enter
dec
lock
outsb
mov
inc
xchg
out
sub
mov
into
popf
mov
inc
cmp
xor
pushf
loopne
iret
verw
jo
fs
inc
nop
je
push
mov
adc
dec
pop
xor
cltd
sbb
sbb
xlat
add
cmpsb
add
mov
push
fmull
pop
push
sub
inc
call
mov
xor
jb
pop
jns
cmc
pusha
inc
cmp
jne
ret
ds
xor
add
sbb
outsb
aam
push
push
adc
cmp
xchg
or
push
jl
ss
out
add
xor
in
popa
mov
arpl
sub
xchg
fisubrl
ret
cmp
ret
or
faddl
dec
xor
push
adc
sti
outsl
push
adc
adcl
lret
pop
ret
sub
push
xor
insb
sub
fists
pushf
jne
add
jne
out
ljmp
in
push
ficoml
pop
aaa
and
cs
adc
ljmp
xchg
sbb
jae
adc
or
rorb
or
sbb
popf
xchg
or
xor
shll
outsb
mov
fmull
push
int
clc
orb
or
movsl
jp
pop
or
sbb
xor
rcrb
xor
push
lock
sbb
fldl
aad
adc
call
lds
jmp
and
add
xor
jae
daa
sbb
push
icebp
pop
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
pop
and
sub
add
inc
cmp
jg
arpl
mov
pop
add
in
addr16
fcoml
and
int3
enter
and
and
and
lods
test
mov
pushf
cwtl
xchg
nop
and
and
mov
and
jl
je
and
and
insb
push
and
pop
pop
push
dec
and
and
dec
inc
inc
cmp
and
and
xor
sub
and
and
and
sbb
and
and
adc
or
and
and
add
cld
imul
inc
clc
hlt
cmp
and
out
mov
inc
test
mov
and
pushf
mov
and
lods
mov
fadds
inc
sahf
inc
mov
dec
inc
inc
rcl
add
mov
in
in
add
adc
jb
sub
adc
pop
adc
sbb
aad
scas
jmp
and
nop
pusha
popf
loope
cmpsl
pop
add
ret
push
xor
add
in
insb
cwtl
inc
andl
push
xor
cmp
pop
cld
ljmp
inc
orl
push
in
adc
inc
or
or
xchg
xchg
insl
mov
or
or
mov
xchg
popa
cmp
fwait
mov
dec
cld
sbb
push
mov
aas
xlat
adcb
push
inc
mov
lea
lcall
or
pushf
push
add
push
lods
add
or
add
push
ss
and
add
xor
and
inc
or
stc
mov
mov
cmp
je
cmp
repnz
pop
mov
and
aam
dec
movsb
cld
inc
testb
rcl
add
movzwl
jmp
sub
jbe
jmp
push
jge
subl
push
lcall
xchg
cwtl
xor
inc
in
mov
mov
mov
pop
sub
mov
inc
pop
mov
push
arpl
in
inc
xchg
add
aaa
inc
mov
add
das
mov
inc
call
pushf
inc
lahf
mov
icebp
aaa
xor
sub
sar
pop
and
mov
jcxz
push
adc
enter
pop
mov
jmp
jb
lock
mov
inc
lea
out
sbb
add
fdivrl
into
int3
add
fsubs
and
and
and
mov
pop
inc
fldenv
enter
add
dec
mov
mov
jl
xor
shrl
pop
aam
dec
shll
data16
adc
xor
insb
xchg
dec
dec
testb
dec
adc
shll
bound
dec
shll
scas
sahf
add
adc
adc
add
adc
pop
or
in
jb
or
sbb
movsl
leave
adc
mov
pop
lea
or
adc
add
mov
jp
int
fldt
xor
adc
add
mov
comiss
repz
sub
jmp
scas
jmp
sub
adc
aaa
inc
out
arpl
lcall
pop
shlb
xchg
idivl
pop
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
xlat
jne
xlat
testl
adc
dec
mov
mov
je
addr16
push
push
addr16
fnstenv
xlat
movsl
addr16
mov
adc
mov
adcl
push
rcrb
jne
cli
or
int
shll
mov
ss
shll
push
testb
imul
xor
mov
dec
js
bound
dec
cmpsb
imul
addr16
dec
add
imul
mov
sbb
push
jbe
push
mov
add
nop
fwait
cmp
loope
or
xchg
cs
in
push
jecxz
and
dec
mov
lcall
push
xor
inc
sub
cmp
xor
xlat
pop
xor
sub
and
dec
shll
add
xor
shll
testb
ljmp
fcom
int3
mov
shll
mov
popa
mov
jae
fwait
outsl
pop
mov
add
rcrl
jo
pop
str
inc
ss
aaa
and
mov
lret
or
and
inc
cs
xchg
lcall
sub
sbb
imul
sbb
int
repnz
aaa
stos
rolb
cmpsb
imul
cmpsb
imul
cmpsb
imul
xlat
mov
rorl
and
push
insb
inc
mov
and
inc
xchg
daa
lock
add
sbb
xor
push
and
int3
inc
stos
pop
dec
pop
leave
sub
dec
orb
leave
fs
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
adcb
xor
inc
inc
dec
xor
cs
insb
add
push
inc
push
gs
testb
pop
or
push
sbb
shll
pop
and
pop
jl
in
clc
cld
add
sti
stc
cld
idiv
cld
mov
testl
cld
fisttps
stc
jmp
idiv
pushl
cli
dec
leave
push
dec
bound
push
pop
insb
sbb
imul
sbb
idiv
pushl
sbb
sbb
push
pop
popa
sub
add
sbb
fucomip
ret
mov
add
mov
addr16
xchg
stc
out
mov
add
mov
daa
cmpsl
je
xchg
mov
inc
pop
push
push
xchg
push
inc
pop
dec
into
stc
cmpsb
imul
mov
mov
inc
inc
std
add
rolb
fsin
or
add
add
dec
lcall
xor
pop
or
push
pop
std
add
push
add
enter
pop
push
or
fnstenv
push
test
add
lds
dec
fwait
mov
ret
jnp
pop
daa
fscale
adc
jae
jbe
arpl
fldl
add
and
jno
pop
jno
daa
jo
pop
push
push
mov
cmp
pop
adc
jle
insl
lret
jle
gs
mov
negb
insb
pop
fldt
popf
fsts
jg
dec
push
push
mov
loopne
dec
pop
dec
incl
dec
loope
dec
cmpb
movsb
punpcklwd
in
outsl
cld
clc
or
xchg
inc
fsts
pusha
clc
add
push
dec
imul
ja
gs
test
gs
add
push
neg
std
aaa
mov
push
dec
in
xor
mov
mov
inc
sbb
insl
or
or
loopne
ja
pushl
les
jnp
pop
pop
xchg
push
xchg
dec
push
dec
mov
cmp
sti
incl
push
divb
movsl
testl
push
loopne
sti
sti
cld
jp
mov
push
or
jg
fdivr
in
and
stc
push
lahf
pushf
mov
incb
pminub
in
loope
sub
xchg
in
sub
pop
pop
fildll
and
dec
mov
addb
jl
xor
jb
imull
fs
aaa
pop
cli
pop
or
stos
inc
pop
jg
xchg
lea
lds
push
dec
cmp
ds
inc
repz
clc
jae
mov
pop
add
or
mov
in
sub
decb
out
or
in
xchg
fisttps
les
xchg
jbe
jmp
fs
test
in
pop
sahf
mov
adc
nop
popf
loope
or
lahf
adc
daa
fistpl
cmp
xorb
sbb
loope
sbb
sti
mov
stc
cmp
popa
data16
add
sti
adc
pop
repnz
inc
loopew
sub
imul
and
inc
ret
jmp
and
cld
insl
cmc
fs
decl
loope
inc
push
jle
aaa
call
mov
dec
dec
addb
lock
daa
cmc
cmpb
mov
pop
les
jg
in
xchg
dec
dec
mov
xchg
cmp
push
mov
out
sbb
sarb
cmp
cmp
scas
mov
aaa
jnp
push
mov
pop
pop
test
clc
aam
mov
adc
dec
sub
push
xor
cs
xchg
test
in
or
clc
clc
in
mov
test
push
add
in
inc
sbb
sub
in
push
arpl
xchg
fildll
sbb
inc
sbb
into
icebp
clc
push
arpl
in
inc
arpl
push
outsb
cld
mov
iret
adc
mov
call
and
push
test
test
add
jg
sti
dec
push
notb
out
test
rorl
outsb
push
push
testl
clc
outsl
incl
clc
xor
push
arpl
mov
repnz
fs
add
cmp
cmp
test
test
insl
cli
outsl
cwtl
xor
add
std
push
pop
loope
jg
rol
fstpt
or
sbb
mov
mov
jno
ffreep
and
jg
mov
ret
xor
ret
in
add
sbbb
pop
or
sti
adc
outsb
fsubs
arpl
stc
add
clc
aas
inc
push
or
das
call
test
test
movsb
jg
add
pop
dec
loope
inc
cmp
push
loopne
mov
add
std
sbb
sub
xor
xor
jnp
lcall
fcomip
jb
mov
out
dec
loopne
inc
and
pop
xchg
jmp
pop
in
jae
lock
in
inc
push
push
addb
dec
add
ljmp
cld
jno
call
std
insl
add
inc
add
jns
insb
or
inc
add
ss
adc
mov
or
jnp
in
test
cmc
dec
inc
loope
inc
aas
aaa
loope
mov
hlt
push
push
push
in
mov
addl
mov
clc
lods
insb
cli
repnz
pusha
aas
std
sbb
hlt
dec
gs
add
mov
daa
inc
dec
addr16
inc
movsl
push
pop
jg
and
mov
mov
or
nop
test
xor
mov
popf
adc
aaa
ds
add
or
jmp
pop
jge
pop
mov
cli
jbe
imulb
insb
outsl
mov
loope
mov
ret
or
lds
sti
test
add
pusha
jecxz
inc
jecxz
test
in
in
sub
call
mov
aam
push
and
popaw
or
lods
aad
lret
ret
or
repnz
push
add
stc
add
out
int
jg
ret
cmp
mov
xchg
fucomi
add
bnd
iret
loopne
add
gs
das
xor
out
jne
dec
out
idivb
icebp
std
js
jbe
lcall
cld
push
popa
xchg
bound
mov
mov
out
jmp
jp
fiaddl
loopne
add
enter
push
data16
xor
jl
rorb
pop
icebp
cmp
sti
in
add
test
adc
outsl
leave
in
mov
cli
ret
cmp
or
ljmp
mov
mov
add
loopne
dec
out
inc
roll
add
scas
ljmp
testl
out
add
xor
out
pop
push
in
mov
add
sub
icebp
inc
lds
icebp
add
dec
mov
aas
inc
shrb
lcall
sub
out
in
cld
jge
icebp
shll
xchg
add
mov
fisttpl
test
in
xchg
xor
add
test
hlt
or
mov
test
pop
lea
leave
dec
test
in
inc
jnp
push
jmp
lods
add
mov
mov
arpl
popa
repnz
cwtl
lods
out
clc
leave
in
add
jecxz
das
mov
jl
sti
pop
cld
das
xchg
inc
pop
cmpl
mov
xacquire
jns
testb
divb
cld
inc
pop
inc
cli
out
add
std
xorl
pop
loop
add
add
pop
popa
orb
jle
xchg
pop
js
imul
jl
sub
adc
xchg
ds
jg
push
jge
icebp
fisttps
adcb
add
icebp
push
std
pop
push
sti
jb
decb
sahf
pop
clc
and
rcll
test
dec
mov
out
shl
aas
mov
xor
adc
test
add
in
ds
insl
lock
or
jbe
ffreep
movsb
cmpl
pop
or
in
mov
add
or
fistps
std
mov
ret
cmp
add
fstpt
enter
shl
dec
popf
icebp
push
mov
or
je
aam
addr16
imul
sar
mov
sub
add
cli
pop
add
ds
ret
lcall
xor
add
test
add
out
pop
clc
fistps
mov
or
cmp
cmp
enter
outsl
mov
incl
dec
push
cmp
fwait
adc
xlat
outsl
lock
or
int
sbb
shll
arpl
dec
ret
testl
cwtl
pop
and
dec
jo
outsl
sarb
orb
lret
aas
std
xor
jae
dec
adc
sub
pop
cmpb
or
xchg
clc
or
mov
mov
and
icebp
jg
or
dec
pop
in
dec
mov
shl
outsl
clc
mov
sub
in
and
and
test
pop
sub
les
outsb
cli
addr16
in
lahf
in
jno
lahf
lahf
ds
add
les
xchg
jg
add
mov
sar
ret
xchg
lds
pop
pop
subb
ja
push
loope
out
and
push
cmpb
pop
test
or
push
pop
push
mov
and
mov
fsubl
xor
jne
and
ret
leave
pause
aaa
daa
xchg
in
jmp
inc
add
xchg
gs
stc
fisttpll
cmp
mov
mov
aam
add
repz
imul
jg
out
cmc
mov
and
daa
lret
xchg
add
outsb
jg
xor
cmc
dec
or
in
xchg
in
lea
cmp
xor
loop
incl
cltd
ret
pusha
addl
call
arpl
adc
pop
pop
push
mov
push
mov
ss
mov
test
outsl
std
mov
xor
or
jb
jmp
dec
std
out
mov
std
xor
outsl
or
inc
or
fucomp
sbb
std
jp
add
divb
call
add
shrl
pop
push
push
cld
stc
inc
mov
dec
test
mov
mov
sti
jg
adc
imul
mov
or
add
test
push
or
dec
test
ljmp
call
insl
dec
mov
or
xchg
and
aaa
out
push
test
mov
jmp
adc
sbb
lret
or
rorl
cltd
add
in
jg
add
add
xor
std
fcmovnu
inc
adc
lar
icebp
pop
push
shl
js
adc
dec
sbb
insl
adc
pop
cltd
dec
push
jb
mov
add
jp
dec
inc
pop
outsb
add
mov
in
push
test
mov
jno
repnz
arpl
dec
out
mov
mov
add
or
or
in
rcll
cld
pop
call
add
mov
jecxz
xor
push
sbb
fdivrl
int
clc
add
cmp
adc
mov
lds
adc
xchg
xchg
and
mov
dec
fs
sub
xorb
xchg
inc
and
ja
fstp
pop
xor
push
cld
sub
mov
jne
adc
jle
dec
cld
sub
xchg
cltd
cmp
inc
sbb
dec
out
sbb
adc
xor
pop
cld
int
mov
clc
jo
sbb
dec
dec
gs
mov
mov
mov
pop
add
mov
sbb
add
xor
mov
rclb
or
inc
cmp
ds
rcrl
sub
and
mov
sub
adc
mov
mov
sbb
cmp
add
in
sbb
ret
and
jae
adc
jle
loop
imull
dec
pop
dec
push
jge
xor
mov
jae
rcl
sbb
sbbb
vpunpckhwd
mov
lcall
fadd
out
xchg
push
popa
lret
xor
aas
out
aaa
je
mov
icebp
testb
insb
jnp
cmp
aas
push
cmp
and
push
cmp
and
or
mov
jmp
in
insl
sub
sbb
jnp
lock
in
push
pop
pop
pushl
mov
pop
xor
fnstcw
testl
mov
in
xor
sbbb
sti
aaa
jle
insb
add
adc
in
xor
inc
repnz
addl
dec
enter
xchg
addb
lods
hlt
fisttpll
mov
out
fisttpl
test
cmp
in
gs
fildll
lret
mov
lods
cmp
mov
mov
in
sbb
fidivrs
jo
jecxz
cmp
dec
rclb
out
repnz
dec
dec
push
orb
xchg
rorl
jo
adcb
orl
push
or
xchg
mov
xor
fimuls
jns
add
pop
and
mov
push
stos
xor
mov
sar
add
sbbl
push
jge
xor
pop
test
jae
cmp
dec
int3
orl
or
inc
mov
and
out
ss
int
mov
dec
add
or
fbld
push
cltd
dec
xchg
in
pop
push
mov
ret
pop
adc
lods
call
or
hlt
stc
add
test
lds
mov
xchg
adc
push
andl
add
jb
xor
inc
push
test
cltd
pop
cmp
mov
jno
sarl
out
aaa
test
dec
in
jg
lods
test
sbb
test
jb
test
pop
andb
cld
addr16
test
cmc
push
add
jl
jmp
mov
out
xor
sbb
adc
add
dec
cmp
or
fists
filds
xchg
mov
jmp
jo
or
push
adcl
pop
jecxz
inc
das
jo
filds
or
loopne
pop
clc
fldt
xorb
stc
ret
push
xor
or
adc
test
mov
push
jae
pop
pop
insb
jp
fistpl
dec
lds
mov
jg
in
out
in
push
push
cmpb
loope
add
cli
lea
jg
lahf
sbb
cmp
sub
fnsetpm(287
jb
sub
sbb
or
lret
call
mov
test
loope
sbbb
adc
pop
clc
cld
cmp
das
lock
xor
or
pop
xor
shrb
fwait
bnd
mov
mov
mov
aam
addb
dec
test
fildl
push
addr16
add
js
add
out
xorb
ss
paddw
cli
sbb
mov
add
sbb
sub
in
test
dec
in
test
inc
add
jno
jno
xchg
in
xor
jmp
add
dec
out
xor
xchg
pop
mov
add
xchg
jmp
fidivrl
enter
or
js
or
repnz
pop
dec
mov
aaa
outsb
cli
push
xchg
and
or
dec
add
mov
ljmp
imul
stc
mov
out
xchg
mov
pop
in
cmpsl
xor
or
mov
pop
mov
or
jne
or
sbb
cmp
jae
cmp
daa
aas
lock
or
add
jl
sbb
clc
or
sbb
add
pop
lods
pop
pop
cli
xor
insl
aas
inc
add
jecxz
les
lea
xorl
adc
or
fisttps
push
icebp
mov
pop
cmp
jbe
outsb
mov
dec
jnp
sbb
cwtl
subl
add
jb
inc
adc
outsl
or
inc
push
adc
sbb
in
xor
testl
mov
mov
outsl
pushl
loopne
aaa
xor
decl
ja
pop
sbb
cmp
mov
pop
popa
mov
adc
adc
jl
daa
test
enter
ret
ljmp
ja
adcb
fdivp
and
and
xor
pop
sbb
ljmp
xchg
add
and
cmp
push
imul
sbb
xchg
mov
testl
pop
cmpb
xor
mov
xchg
insb
loop
call
xchg
mov
mov
push
dec
push
push
dec
test
sbb
jg
xchg
call
fadds
inc
sbb
sahf
icebp
push
jecxz
jb
popf
xor
fnstenv
insl
xlat
xorb
sbb
pop
hlt
stos
add
icebp
aaa
mov
and
adc
pop
and
pop
test
inc
loope
ss
mov
cmp
loope
orl
adc
negb
xchg
fsts
adc
int
xor
bound
in
addr16
icebp
ss
outsl
stc
adc
adc
sbb
addb
xchg
or
decb
cli
dec
and
mov
jge
jmp
xor
jne
adc
or
aaa
inc
add
repnz
aas
add
addr16
outsb
sbb
mov
add
call
call
std
xor
jno
xorb
aad
aaa
test
popa
jmp
loope
cmpsb
mov
sbb
test
cmp
mov
pop
insl
adc
in
orb
adc
jmp
add
cmp
jno
pop
xor
je
imul
cs
mov
fidivs
pop
sbb
cld
push
in
andb
jo
xor
outsb
or
push
iret
lret
gs
mov
arpl
loope
xchg
xchg
sub
inc
outsl
aam
pop
mov
popa
arpl
mov
fdivs
mov
mov
xlat
and
xor
jno
mov
mov
cmpsl
femms
lcall
addb
jecxz
or
pop
js
push
out
mov
jg
ffreep
inc
inc
arpl
insl
sbb
insl
and
cmp
jo
cmp
test
mov
jno
pop
mov
jle
push
sbb
push
mov
outsl
dec
outsl
pop
mov
aaa
jmp
imul
test
mov
cmp
xchg
out
repnz
xchg
ficoml
subb
cmpl
add
mov
std
mov
cvtdq2ps
movl
cld
push
aaa
dec
add
aas
or
inc
xchg
push
add
add
mov
mov
sbb
xor
call
jle
movsl
cmp
orl
cmp
insb
add
mov
fistl
loope
sti
mov
clc
aaa
daa
ljmp
sti
and
insl
and
pop
push
ret
inc
xchg
jnp
cld
daa
fyl2xp1
mov
mov
jg
sub
shlb
leave
sbb
sarl
test
fnstcw
repnz
xchg
pop
mov
add
mov
xor
add
jns
mov
test
jmp
frstor
outsb
fcoms
imul
imul
in
stc
enter
and
mull
sti
scas
push
insb
popa
mov
sub
push
loopne
cli
jno
pop
daa
cld
insl
inc
add
sub
lock
ja
lahf
mov
imul
out
push
push
dec
dec
fs
cmpb
imull
pop
mov
or
outsl
push
jnp
or
adc
int3
or
cmp
sub
addr16
in
jg
jle
jg
push
sbb
push
sbb
jp
add
mov
mov
test
mov
jge
and
dec
ret
arpl
or
rolb
mov
jb
xchg
xorb
insb
stos
ja
mov
jb
mov
xchg
repnz
clc
das
imul
cmc
ds
and
xchg
rolb
pushl
popf
sti
or
decb
aas
testl
mov
or
negb
outsl
dec
mov
push
lock
imul
sti
mov
and
and
xchg
cld
xor
daa
in
push
push
mov
ja
xchg
dec
sti
jb
dec
clc
aam
outsl
xchg
aam
inc
rcll
pop
pop
in
xchg
pusha
inc
outsl
mov
les
ret
movsl
fwait
int
pop
sbb
jbe
andb
popa
xor
add
cld
into
test
pop
xchg
loope,pt
mov
mov
push
in
sti
push
push
pop
sub
add
js
ja
imul
push
mov
subb
aad
ljmp
cld
incl
jg
xor
pop
lds
cmp
pop
rolb
jns
les
das
shl
sbb
fucomi
push
dec
push
lahf
jmp
rorl
mov
sub
mov
sbb
push
pop
icebp
mov
xor
popa
test
outsl
mov
xor
addr16
rorb
outsl
push
loopne
jl
mov
pop
enter
loope
xor
sbb
fistpl
test
mov
clc
push
addl
jle
loope
das
ljmp
mov
add
sbb
mov
insl
sub
dec
addr16
outsl
outsl
mov
push
dec
test
cmp
jl
mov
outsb
in
dec
sbb
sti
dec
and
mov
sbb
cld
incl
cmp
jmp
mov
mov
out
push
pop
fnstcw
loope
push
pop
sub
in
sub
in
fildll
decl
clc
dec
gs
test
jns
adc
mov
jns
push
movsb
sahf
mov
js
in
push
pop
mov
cmp
dec
pop
push
pop
pop
mov
arpl
jb
lods
jne
das
mov
in
xor
cmp
pusha
mov
out
xchg
das
ret
inc
mov
pop
pop
stc
push
daa
inc
jnp
in
das
mul
dec
pop
xchg
incl
mov
mov
mov
cmc
icebp
xor
dec
pop
jecxz
or
dec
xor
inc
das
sbb
icebp
push
cmp
insl
sub
cmc
loopne
inc
inc
cld
mov
xchg
xor
sbb
lret
mov
push
jl
push
jb
cmp
cmp
imul
sar
mov
ret
mov
mov
mov
jge
out
sub
dec
dec
mov
stc
gs
mov
fwait
pop
out
clc
adc
sub
aam
in
adc
and
mov
cmp
std
jmp
addr16
rcl
push
repz
sti
mov
cmp
inc
push
jne
les
aaa
mov
sub
pop
dec
in
cli
clc
std
or
adc
in
int
cmp
adc
arpl
push
shll
popa
xchg
pop
jle
jmp
or
fs
xchg
xchg
lods
inc
adc
sbb
fs
dec
push
xchg
xchg
daa
inc
jg
in
lea
mov
and
leave
dec
gs
stos
ljmp
pusha
push
or
mov
dec
arpl
clc
lods
mov
mov
xchg
scas
hlt
fsubl
out
cmpsl
xor
jmp
test
mov
adc
xchg
js
jmp
xor
cmc
fldl
fsqrt
cmpsb
div
mov
jl
dec
and
jp
cmp
pop
push
mov
test
mov
mov
out
fs
jno
mov
rclb
mov
sbb
add
adc
lahf
mov
repz
xor
pop
jno
stos
pop
pop
pusha
jge
fisttps
sub
pop
xor
or
subb
mov
aad
sub
cmp
adc
push
sti
pop
test
arpl
or
fnstenv
hlt
out
daa
loope
mov
dec
in
es
loopne
sarl
xchg
sarl
jge
pop
ljmp
lods
clc
mov
decl
out
dec
sub
jnp
push
add
rorl
xchg
inc
cmpl
push
dec
jg
out
sub
add
ja
push
imul
mov
jb
out
andnps
push
fstpl
popf
and
xor
add
cmp
sahf
hlt
add
jp
jg
lock
xchg
mov
stc
cmc
add
dec
or
mov
push
fstl
and
pop
jl
or
call
cmp
pushf
repz
pop
mov
icebp
mov
mov
jbe
mov
xlat
jno
ss
adc
daa
push
addl
or
jle
outsl
mov
incl
add
add
rcrb
imul
sub
adc
or
movsl
inc
or
imul
out
pop
push
lds
sti
imul
stc
ret
pushl
mov
lods
cmp
pop
test
mov
fdivs
xchg
icebp
sbb
adc
inc
sbb
cs
dec
lock
js
jno
in
das
pop
mov
push
push
lea
iret
adc
dec
mov
dec
inc
jg
pop
pop
ret
add
mov
mov
push
xorb
or
pop
cmp
jg
stos
add
sub
jmp
cmp
hlt
movsb
sub
jg
addl
pmaddwd
add
adc
cmc
popa
mov
mov
int
mov
pop
jg
in
and
insb
insl
jp
fs
add
pop
data16
ret
dec
add
xor
pusha
lods
pop
fs
insb
pop
cmp
adc
sbb
adc
icebp
dec
push
pop
insl
inc
sahf
xor
cmp
hlt
sbb
xor
cmp
insl
add
xorb
jns
sub
sbb
stos
xor
inc
mov
sbbl
sub
mov
push
and
adc
inc
pop
xor
fldl
sub
fildll
outsl
or
mov
dec
push
loope
pop
mov
aam
sbb
mov
or
jns
mov
xchg
std
jnp
test
ljmp
inc
push
inc
xchg
jmp
testl
out
outsl
xor
pushf
daa
jne
or
push
loope
sub
fidivl
pop
mov
popa
out
jle
add
sub
loope
or
mov
clc
and
in
mov
cld
insl
mov
push
outsb
pop
in
sub
sub
aam
sbb
rorb
sbb
gs
mov
mov
sbb
and
fildll
std
mov
shll
decb
inc
push
shlb
and
into
inc
stc
ljmp
pop
pusha
sub
jg
pop
jne
and
sbb
mov
and
jp
addl
ja
popa
fcoml
ds
xchg
addr16
sbb
lcall
clc
fcmovne
xchg
test
shlb
fwait
int
pop
inc
cs
daa
xchg
lahf
mov
push
add
xlat
mov
dec
cmp
cmc
push
mov
push
aad
push
popa
push
sub
push
push
ret
mov
sarb
add
adc
or
dec
std
rolb
mov
ret
cmp
sar
icebp
mov
mov
mov
adc
push
test
pop
push
and
leave
xor
sti
fwait
xor
mov
dec
lret
add
mov
add
test
aas
pop
cli
jb
dec
loope
es
mov
push
sti
sub
adc
sbb
add
jl
imul
mov
out
mov
outsl
outsb
icebp
rclb
jo
cmp
and
or
insl
jae
mov
adc
loop
add
push
insl
out
pop
cmpsb
lahf
xchg
add
popf
fnstcw
push
push
push
ret
bound
std
mov
or
loope
mov
adc
mov
arpl
add
fld
fstl
xlat
std
sbb
mov
rcll
mov
arpl
mov
or
dec
cmp
aaa
sub
add
loop
xorb
addr16
pusha
test
pop
mov
imul
cwtl
call
pop
mov
add
add
out
xor
dec
cmpsl
mov
xchg
or
jno
sbb
push
and
jle
sti
and
or
pop
sti
cld
imul
pop
sub
or
call
jle
pop
xor
add
aad
lock
jecxz
idiv
sub
mov
test
jb
jb
flds
in
repnz
iret
imulb
dec
test
or
and
and
repz
pop
icebp
lock
jb
adc
sub
outsl
lock
pop
xor
dec
and
arpl
loope
scas
jmp
test
push
orl
mov
jmp
loop
shll
inc
mov
pop
lahf
jmp
std
inc
or
or
leave
scas
sub
pop
xchg
cld
push
mov
or
sub
jle
repnz
mov
fxam
and
ljmp
dec
or
mov
cmp
fsubrl
sbb
popa
lds
rol
pop
cs
sti
xor
add
ret
insb
cwtl
xchg
bound
add
sti
lds
lock
fwait
movsl
imul
or
dec
mov
mov
inc
arpl
pop
or
out
push
push
cmp
test
addr16
fldt
cmp
mov
sbb
xor
cld
mov
jg
and
or
mov
movsl
push
sub
stc
rclb
add
pop
mov
add
jmp
mov
push
scas
cmp
push
out
std
lods
jmp
test
movsb
bound
test
jle
out
jmp
popa
aas
std
push
imul
aad
in
mov
andl
negl
clc
fsubrs
adc
pop
xchg
mov
add
or
dec
aad
mov
cltd
hlt
or
sub
cld
adc
dec
imul
in
sahf
in
cmp
fldt
push
imul
inc
loopne
sub
outsl
aaa
out
push
mov
jae
sub
cmp
cmp
rclb
loopne
and
pop
jmp
rcr
fdiv
xor
mov
movsl
sbb
cmp
mov
xchg
inc
add
mov
mov
mov
pusha
add
mov
ss
stos
daa
test
int3
push
jno
fwait
cs
jo
xchg
xor
sbb
sti
sbb
push
mov
in
and
mov
sub
mov
pop
mov
rorb
insl
sbb
orb
adc
mov
mov
stc
sbb
cmp
lea
mov
inc
or
push
in
aas
dec
rorb
xor
and
andw
test
pop
icebp
push
push
aaa
mov
clc
push
frstor
sub
xor
mov
adc
push
addr16
loope
aam
sbb
ficoml
lcall
loope
sti
jmp
sbb
mov
mov
xchg
adc
mov
jbe
cmpsl
xchg
movsb
test
cmp
jnp
sbb
cmp
mov
xchg
xchg
or
popf
arpl
mov
jg
aas
mov
out
mov
mov
mov
repz
push
cmc
sbb
dec
jo
jo
daa
movsl
pop
sbb
bound
add
mov
jnp
dec
insl
xor
loope
pop
mov
in
sub
xchg
pop
sbb
test
rorl
mov
cmp
aam
dec
into
adc
push
mov
and
fsubr
mov
push
test
mov
js
cmp
insl
ss
in
inc
in
stc
dec
push
xor
lods
test
or
add
lret
mov
fucomi
mov
jnp
in
jnp
mov
xor
push
mov
andb
push
or
xchg
mov
fistpl
sahf
or
dec
in
sbb
xchg
push
add
and
mov
aad
push
icebp
mov
movsb
add
int
xchg
dec
in
sti
mov
inc
fst
test
lods
in
or
lret
jecxz
xor
dec
out
sbb
sbb
movsl
into
inc
movsb
mov
adc
mov
jo
jp
xchg
inc
ds
mov
shlb
add
xor
push
repz
dec
mov
pop
int3
push
cmp
pop
out
gs
clc
out
es
mov
mov
sarl
mov
push
cmc
fs
cmp
push
loopne
pop
test
and
cmc
cltd
xchg
fwait
cmp
inc
lods
dec
adc
aaa
add
jnp
sbb
inc
jmp
sub
insl
mov
jg
std
xor
jecxz
jl
add
xchg
sahf
insb
cltd
add
lret
shll
aam
push
push
adc
mov
lods
jge
xchg
mov
pop
xlat
or
sbb
loop
jns
inc
xchg
je
push
outsl
repnz
ss
inc
mov
sbb
mov
ret
decl
dec
xor
fmuls
adc
jmp
icebp
fwait
sti
arpl
mov
dec
ljmp
cmp
dec
sbb
frndint
push
cmp
dec
jge
jns
xorl
cmc
roll
insl
add
push
inc
xchg
in
mov
test
pop
xchg
outsl
mov
test
dec
push
ja
sbb
mov
into
sbb
gs
out
in
sbb
push
xchg
scas
fiadds
push
add
fcmove
sti
add
aas
xchg
or
mov
mov
push
repz
fs
jne,pn
std
add
das
sbb
and
lea
mov
shll
pop
in
add
push
sbb
fmull
stc
dec
cmp
jne
scas
jl
push
mov
cli
aas
pop
mov
iret
inc
les
movsb
ja
or
out
add
test
dec
mov
enter
mov
rorb
sub
sar
pop
adc
fisttps
xor
rcr
xchg
xor
or
jl
adc
pusha
leave
repnz
cmp
aaa
push
mov
incb
pusha
jmp
lds
stc
pop
jmp
push
int3
popa
roll
or
or
adc
ja
mov
cmp
adc
test
scas
sub
pop
cld
inc
cmc
dec
popa
addb
lret
lea
xchg
out
in
mov
or
test
push
aas
js
xchg
cmc
or
sbb
pop
mov
jmp
testb
mov
mov
test
sub
sti
dec
jecxz
jle
mov
mov
jge
push
icebp
jne
mov
or
out
or
pop
aas
lock
mov
fistps
adc
fucomi
loope
stc
sahf
leave
scas
or
jno
pushl
mov
or
dec
mov
stc
data16
mov
popa
dec
adc
fs
iret
ret
mov
rol
push
movsl
clc
jl
outsb
or
mov
incl
pop
push
cld
cmp
js
bound
xchg
mov
dec
jl
cmp
test
jne
sub
rclb
jmp
sbb
push
push
fsubl
and
mov
flds
xorb
into
repnz
push
push
lds
adc
mov
sti
push
in
push
fyl2x
scas
jo
mov
pop
iret
dec
inc
out
sub
popf
insl
jmp
push
xor
xchg
inc
lods
movsl
popf
test
clc
lods
mov
push
xchg
push
fs
push
dec
push
in
repz
xchg
and
jno
push
dec
push
loope
repz
icebp
add
in
push
push
enter
cmp
add
cmp
in
arpl
mov
push
dec
cmp
mov
sbb
cmp
outsl
jl
fisubs
iret
out
xlat
pop
xor
cs
mov
imul
loop
cs
or
xor
arpl
pop
jnp
add
pop
les
add
pop
mov
or
jp
cmp
gs
jmp
pop
ds
jne
sub
dec
sahf
add
add
stos
pop
dec
insl
pop
mov
xchg
les
lock
std
test
sbbb
ret
in
or
aaa
lahf
or
add
xchg
outsb
test
std
pop
lock
cmc
inc
cmp
add
or
das
leave
pop
mov
repnz
jg
icebp
mov
int3
lret
ret
xchg
stc
adcl
mov
in
and
roll
xchg
fnstcw
pushf
or
cmp
out
out
sub
mov
aam
sbb
add
cmp
repz
iret
lret
stos
addr16
testb
bound
or
iret
inc
add
hlt
std
and
pushf
push
mov
jno
cmc
mov
pop
ds
sbb
push
icebp
decl
dec
inc
cs
inc
cmp
cs
jns
cmp
cs
inc
cmp
cs
inc
cs
sbb
sbb
and
and
es
and
dec
sahf
xchg
icebp
sbbb
or
inc
loope,pn
sbb
sbb
and
and
adc
cmp
xchg
lods
push
mov
cs
repz
inc
mov
xorl
flds
xor
mov
mov
loopne
push
popf
stos
inc
sub
mov
ja
fsts
in
cmp
xor
xor
adc
pop
arpl
push
call
pop
mov
sti
sbbl
mov
mov
cmp
testl
test
pop
add
jno
cmp
adc
pop
adc
fs
rol
mov
xchg
push
in
pop
rolb
push
sub
repz
enter
daa
rol
dec
test
xchg
mov
shll
xchg
call
rclb
or
test
xor
mov
mov
lods
lcall
add
repz
pop
or
outsl
lock
mov
or
ds
imulb
sar
xchg
jns
jbe
stos
test
xchg
jnp
xor
pop
mov
mov
into
mov
mov
and
mov
or
push
add
dec
std
mov
push
dec
std
incl
mov
add
scas
xlat
pop
xchg
jg
lods
fiaddl
orl
cmc
xchg
outsl
in
addl
jne
js
pop
adcb
xchg
push
pop
mov
call
dec
push
sbb
cmp
gs
jae
sar
jmp
fsubp
push
xor
shrb
cmpsb
adc
mov
cmp
imul
cmp
mov
repnz
jp
push
shll
cmpb
add
clc
jbe
stc
inc
xor
inc
pop
jecxz
xchg
pop
dec
add
mov
pop
cmc
add
std
push
icebp
clc
inc
add
xor
and
add
int3
aad
das
popf
cmp
adc
in
sub
nop
dec
dec
xor
mov
dec
mov
test
in
adc
rcl
lods
js
std
stc
test
xchg
das
lahf
sub
cltd
inc
testl
inc
jmp
repz
imul
add
sarl
aam
mov
decl
in
xchg
mov
test
stos
imul
adc
icebp
das
aad
dec
into
imul
cmc
out
mov
jmp
dec
mov
sub
jne
cmp
je,pn
pop
fwait
call
jl
ss
xor
test
in
push
inc
testl
out
sti
ror
push
adc
aaa
popf
mov
cmp
xor
insb
mov
mov
or
cli
cmp
arpl
jb
xor
cmp
data16
aad
cmp
sti
stos
sbb
cli
pusha
out
push
in
or
jge
gs
inc
decb
popa
pop
sbbl
or
push
xchg
movsl
mov
sti
sbb
add
jle
fdivr
daa
les
std
adc
ficoms
ss
mov
dec
out
jne
stos
test
pop
dec
dec
dec
dec
daa
fbstp
sbb
pop
mov
xchg
inc
mov
loope
push
vmovsd
negb
or
std
incl
xchg
jg
dec
xor
das
xor
incl
mov
or
inc
punpckldq
decl
pop
loope
inc
test
addb
mov
testl
sbb
push
cli
xor
push
adc
dec
jo
xchg
jmp
adc
push
std
neg
fistps
sti
inc
or
jl
dec
cmp
je
xchg
or
push
addr16
es
xchg
push
jno
inc
xchg
pushf
mov
cmp
push
xchg
decl
inc
or
incl
sbbb
or
push
inc
popf
push
jno
leave
rolb
xchg
or
pop
mov
dec
xchg
loope
icebp
dec
inc
mov
repz
addl
jmp
jbe
in
popf
adc
dec
xchg
xchg
mov
lea
dec
setne
xchg
clc
inc
add
push
push
pop
ja
xchg
pop
pop
mov
test
push
mov
fwait
xchg
or
int
ja
fcmovnu
aaa
sbb
insl
sbb
out
imul
cmp
js
daa
pop
xor
sbb
lock
jmp
dec
dec
in
or
insb
jmp
adc
jb
fs
cmp
jns
addl
in
div
adc
or
dec
leave
addl
adc
je
adc
or
lret
inc
cmp
or
test
jnp
dec
aaa
test
out
scas
fwait
xchg
or
sub
mov
xor
aaa
fwait
pushf
popa
jnp
fabs
jecxz
outsb
rolb
jnp
or
mov
std
push
js
cmpb
sbbb
icebp
or
adc
dec
icebp
popa
add
aas
mov
and
jg
mov
fmul
or
mov
mov
and
dec
subl
xchg
xor
jg
add
stc
data16
daa
dec
pop
xchg
add
frstor
sub
ja
repz
mov
ret
inc
push
cmc
xchg
loop
add
push
gs
add
pop
je
int
popa
add
cltd
push
adc
fiaddl
notb
dec
cld
xchg
dec
mov
clc
add
dec
push
arpl
lcall
mov
sbb
jno
push
mov
sti
movsl
cld
or
bound
into
push
xchg
push
dec
clc
rorl
or
mov
pop
dec
pusha
or
mov
movsl
mov
pop
mov
and
out
jle
jb
ret
push
sub
jge
cmp
stos
pop
call
or
ljmp
inc
add
mov
mov
clc
sar
loopne
jne
mov
push
jo
std
xchg
or
jmp
adc
mov
pop
stos
fnclex
jb
adc
xor
outsl
cs
push
imul
pop
mov
test
push
popf
pop
das
jmp
pop
test
fisttpl
gs
push
in
push
pushl
mov
les
push
fsub
lret
fmuls
jl
jno
lea
ret
mov
or
pop
scas
stos
in
or
dec
sub
arpl
mov
add
dec
daa
popa
fs
mov
test
adc
cltd
sbb
loop
sbb
aam
or
jmp
or
sub
in
push
push
push
outsl
cmp
pop
mull
cmc
stos
pop
call
add
dec
jmp
and
lock
jecxz
xchg
out
add
pop
push
loope,pt
or
ror
addb
add
shlb
jp
jl
aaa
adc
in
notl
add
jecxz
pop
mov
sbb
add
test
jl
das
pop
or
sbb
inc
fwait
clc
das
mov
popa
jne
pop
mov
push
outsl
loope
mov
and
mov
jmp
inc
mov
in
mov
mov
and
addb
cmp
add
fld
test
cld
mov
ret
cmp
xchg
push
jnp
push
je
rolb
inc
iret
jmp
aaa
jb
mov
jns
add
jbe
cmp
pop
mov
gs
mov
stos
cmp
sbb
leave
inc
xor
xor
fcmovnbe
or
push
pop
insb
sub
push
and
xchg
cld
incl
lods
dec
clc
das
lds
mov
in
mov
add
xchg
add
add
je
data16
arpl
lods
call
je
inc
jne
push
lock
cltd
jno
add
push
decl
dec
mov
loopne
or
jb
sub
pop
jno
lds
add
in
pop
shrb
and
xor
jae
jb
cmpsl
add
pop
data16
mov
std
jb
out
inc
mov
dec
push
lods
push
jnp
push
jb
pop
orl
ret
imul
ret
imul
clc
dec
in
add
adc
movsl
bound
xor
pop
icebp
mov
in
outsl
popf
cli
xchg
inc
cli
popa
adc
hlt
pop
std
adc
data16
jns
stos
pop
repnz
push
add
pop
stos
movsl
pop
mov
xor
jmp
sbb
add
pop
lea
repnz
or
icebp
pop
insl
incl
lret
adc
pop
mov
rdtsc
rcrl
stos
add
lahf
dec
mov
filds
pop
sbb
mov
xor
pop
jmp
aas
fdivr
mov
sti
addr16
mov
pop
aas
ret
jae
outsl
stos
mov
movsl
arpl
xor
out
in
sbb
xlat
cmpsl
jae
outsl
sbb
es
sub
mov
cli
xchg
in
pop
aas
addb
and
in
imul
or
aas
pushf
add
xchg
test
mov
push
adc
add
pop
stc
fs
cmpsl
pop
push
icebp
fwait
or
cmpsl
mov
mov
lock
and
sub
into
arpl
mov
in
decb
mov
xor
inc
inc
or
mov
xor
pop
lock
or
pop
mov
jno
fistps
jle
and
and
shl
push
inc
out
in
add
push
sti
popa
in
fstps
inc
insb
lret
pop
in
inc
jle
popa
aas
mov
ret
in
or
and
rorl
fmuls
sbb
cmp
arpl
in
push
inc
addr16
fildl
push
les
aas
pop
add
loop
movsl
or
cmc
in
aaa
sbbb
add
mov
scas
call
in
add
pop
loop
dec
xor
pop
imul
out
fs
aas
or
orl
arpl
sbb
lret
negb
ljmp
cmp
push
sub
or
out
popa
jg
imul
out
add
pop
xchg
insb
dec
insl
int3
pop
xchg
lods
push
or
idiv
in
insl
pop
jle
int3
add
loope
addr16
fdivp
insl
pop
mov
in
mov
clc
fs
mov
push
iret
push
insl
movsl
in
sti
ficomps
add
mov
fnstcw
lret
pop
lcall
leave
or
insl
mov
mov
jnp
inc
inc
sti
ret
jne
and
lods
int
and
lods
hlt
sub
repz
push
and
movsl
rep
jmp
nop
or
lock
call
test
in
stc
mov
fsubs
filds
divl
mov
xor
rcl
fcmovne
cs
call
lret
cmp
inc
out
fstl
cmc
mov
jl
xchg
sti
out
jnp
sbb
aaa
xchg
push
lods
jns
add
test
push
sbb
add
stc
pop
inc
sbb
icebp
jmp
test
nop
sti
es
popa
or
push
movsb
pop
or
icebp
sbb
in
movb
cmp
add
pushf
nop
add
pop
and
mov
adc
decl
sarb
add
mov
or
ljmp
jmp
xchg
insl
mov
mov
leave
sbb
outsl
popa
iret
pop
jl
push
mov
mov
outsl
inc
jge
insl
adc
mov
xchg
mov
pop
jmp
cli
arpl
pop
sti
das
lods
out
int
stc
adc
add
pop
mov
or
dec
dec
mov
xor
mov
addr16
hlt
popa
add
mul
mov
repnz
icebp
push
clc
xor
xor
ror
sub
stc
stc
das
fs
cld
mov
aam
dec
jge
enter
pop
mulb
int3
and
mov
push
int
or
inc
mov
rcrb
test
mov
dec
stc
aas
dec
out
aas
or
enter
loopne
pop
push
sbb
mov
sbb
orl
int
ret
push
sbb
test
push
jns
inc
sbb
incl
pop
das
cmc
outsl
jno
in
outsl
adc
add
sub
jg
add
dec
adc
or
sbb
jg
outsl
add
pop
add
push
mov
inc
adc
movsl
incl
inc
sbb
adc
incl
jge
outsb
cmp
add
xor
sbb
mov
push
add
add
sub
ljmp
cld
jno
sub
xchg
cli
sub
push
push
add
int
rcll
mov
ljmp
sbb
jmp
mov
push
test
in
pop
xorl
push
test
mov
dec
mov
test
mov
jo
movb
out
ret
mull
incb
mov
mov
incl
jmp
test
mov
cmpb
mov
decl
aam
call
out
push
cmp
imul
dec
sub
xchg
mov
fs
push
enter
xchg
orb
push
les
inc
push
mov
inc
push
mov
mov
dec
insl
in
pop
push
shl
test
jg
add
cmp
xchg
adcb
lds
push
push
lds
ljmp
mov
test
jecxz
dec
mov
and
mov
inc
push
xchg
xchg
ljmp
mov
or
inc
jl
cmp
in
cmc
clc
std
dec
js
inc
loope
ficompl
mov
popa
lods
mov
in
ja
xor
hlt
cmpb
fwait
loop
pop
push
push
push
lds
and
movsl
or
mov
jbe
mov
aad
add
mov
dec
decl
in
jae
inc
inc
inc
xor
js
mov
addl
pop
adc
inc
movl
dec
sbb
adcb
stc
lret
ret
test
add
fwait
test
rcr
mov
sbb
push
int3
pusha
subl
cmp
mov
pop
mov
and
pop
icebp
fbstp
das
std
out
mov
cli
add
pop
mov
adc
sbb
mov
mov
and
and
or
push
mov
mov
xorl
jno
adc
mov
dec
dec
xorl
repnz
imul
les
stc
push
adc
arpl
js
push
jnp
push
jno
fnstenv
movsl
int3
mul
in
decl
mov
jl
add
pushf
sti
add
test
addb
mov
mov
hlt
lahf
inc
jl
dec
dec
insb
out
push
mov
cli
les
adc
add
xchg
pop
add
fisttps
clc
pop
xchg
xor
lea
adc
sbb
push
test
mov
aad
outsl
sbb
mov
stos
das
shlb
mov
adc
push
adcl
insb
mov
add
stc
mov
movsl
push
push
paddw
dec
add
sub
mov
std
and
test
push
pop
mov
subl
ffreep
outsl
add
loop
popa
push
mov
andl
inc
stc
mov
pop
gs
sbb
add
fucomip
add
add
out
out
inc
jae
lock
inc
pop
cld
or
int
or
push
xchg
incl
fldt
std
cs
std
push
fists
mov
in
fscale
xor
pop
mov
jecxz
cs
add
xor
mov
or
push
repz
cmp
subb
js
jge
or
out
sbb
jne
das
mov
mov
movsb
test
fidivs
sahf
mov
mov
mov
pop
mov
mov
fisubrs
mov
daa
pop
movsb
das
sti
mov
pop
int3
sbb
cmc
add
prefetch
sahf
idiv
cmpb
loope
popa
mov
or
or
xchg
stc
out
push
roll
jecxz,pn
pusha
pop
adc
inc
fmull
push
lods
gs
mov
inc
ss
sub
fsubs
or
dec
std
adc
xor
leave
pushf
jne
cmpb
orl
pop
xchg
js
aas
loope
push
cmpb
jns
aas
jl
sub
jmp
das
jo
lahf
mov
outsb
cmp
sbb
pushf
popl
in
in
jno
mov
mov
or
ret
lock
adc
call
push
outsl
add
dec
roll
mov
pusha
std
or
and
pop
testl
push
sbb
in
pop
jmp
cmp
insb
sbb
rol
push
pop
sbb
jns
dec
pop
inc
inc
cmp
sub
sub
leave
leave
pop
sbb
or
lcall
or
and
mov
add
lret
add
sub
pop
xor
adc
fildll
imul
sub
les
cmp
icebp
push
and
mov
std
xchg
addb
dec
mov
outsb
popa
roll
add
push
push
icebp
push
mov
jge
sbb
loope
add
mov
insl
and
loopne
cmpsl
out
xlat
adc
push
out
roll
cmp
add
clc
out
xchg
mov
pop
xor
sub
push
fsub
mov
push
jmp
jg
pop
incb
inc
jno
pop
jg
xchg
mov
mov
sbb
jmp
popf
andl
mov
mov
scas
mov
aam
push
push
ljmp
pop
push
jno
test
or
or
mov
lds
inc
sub
cld
in
adc
pop
jnp
call
sub
mov
push
adc
xor
or
cwtl
outsb
pop
xor
pop
adc
jg
jmp
jle
incb
outsb
push
popf
loope
insl
insb
add
push
test
xchg
jmp
dec
in
mov
incl
loop
push
push
push
loopne
pop
jp
cli
push
shrl
dec
xchg
outsl
add
loopne
mov
jne
or
push
loope
sub
cmpl
mov
sub
cwtl
jecxz
movsl
add
clc
into
dec
inc
orl
arpl
sbb
lret
cmpsb
loope
sbb
pop
std
vandnps
mov
dec
jmp
nop
scas
mov
mov
movb
and
jp
sbb
mov
call
mov
dec
loopne
fbstp
test
adc
out
shll
mov
pop
pop
repnz
fucom
xor
adc
out
enter
sahf
outsl
cmp
fldl
daa
sbb
push
in
out
jecxz
inc
dec
jae
lcall
sub
adc
xchg
lret
in
imul
dec
mov
iret
push
daa
adc
and
adc
in
lretw
pop
fsubl
fs
int
mov
mov
dec
jmp
andl
push
cmp
imul
cs
lret
out
gs
shlb
fs
bound
dec
mov
lea
pop
mov
ja
arpl
imul
lret
push
nop
push
imul
pop
lds
push
insb
mov
or
xchg
lret
lods
imul
insl
in
data16
aad
lcall
daa
cmp
lcall
adc
shrl
mov
sahf
xchg
adc
jne
pop
outsb
aas
negl
or
int
mov
popa
andb
cmpsb
pop
fdivs
in
pusha
jnp
or
pop
sub
pop
arpl
addr16
gs
imul
cmp
test
jl
lcall
js
sti
add
pop
jle
imul
push
push
punpckhwd
data16
bound
lcall
imul
enter
jne,pn
jecxz
sbb
es
cwtl
ficoml
dec
sub
jecxz
add
dec
or
push
mov
pop
cmp
and
daa
jne
pop
fs
push
xchg
popf
sbb
xorl
fs
adc
leave
cmpb
orl
jb
das
mov
mov
pop
pop
fnstcw
pusha
or
inc
bound
fldcw
cmp
loope
popa
loopne
fistpl
adc
mov
rcrb
std
bound
popf
pop
popa
or
addr16
sbb
adc
and
ficoml
pop
call
inc
aas
ds
dec
outsl
popa
outsl
pop
jo
inc
jno
fs
push
jo
pusha
insl
pusha
aas
xor
imul
std
pop
shlb
imul
jb
cmp
insb
dec
outsb
imul
sti
fists
js
dec
outsb
jno
pusha
gs
insl
popa
pop
jno
out
inc
fs
push
imul
xchg
inc
dec
imul
pop
pusha
outsb
bound
jg
inc
out
cli
inc
imul
push
and
imul
jg
pop
inc
pop
imul
repnz
inc
push
aas
nop
pop
push
decb
push
push
insb
pop
fists
pop
inc
in
fisttps
clc
inc
cld
aas
outsl
pop
stos
arpl
gs
cmp
inc
pop
neg
jle
pop
push
cmp
aas
imul
data16
popa
add
bound
cmp
outsb
std
mov
lcall
jle
jno
jb
push
insl
imul
incl
mov
test
pusha
xchg
adc
lea
in
push
gs
pop
bound
pop
pusha
jae
insl
outsl
dec
jnp
imul
decl
fucomi
outsl
jnp
push
dec
bound
pusha
jns
or
mov
dec
insb
popa
ret
mov
pop
insl
dec
push
imul
fildl
cmp
pop
jno
jb,pt
imul
in
pop
pop
jb
xor
arpl
inc
dec
pop
insb
sti
mov
xchg
les
cmp
fs
cs
loopw
sub
fst
cmp
jno
daa
pop
decl
aas
or
outsb
pop
je
cmp
add
insb
mov
pop
push
arpl
xor
dec
insl
dec
ds
das
das
and
jo
mov
popa
sarb
dec
pop
test
sbb
fs
pop
repz
fidivl
daa
popa
arpl
ds
push
arpl
outsl
mov
mov
arpl
pop
pushf
push
insb
jl
mov
outsb
push
pop
inc
add
pop
inc
jbe
insb
insb
inc
fs
push
insl
insb
test
out
clc
inc
arpl
sbb
sub
pop
jg
dec
xor
std
or
shrl
and
jl
push
js
xor
je
push
mov
push
outsl
and
test
lcall
xchg
pusha
pop
sbb
mov
push
outsb
push
popfw
push
pop
xlat
mov
sar
jo
imull
clc
dec
dec
inc
dec
or
test
sub
daa
bound
mov
cmp
mov
mov
dec
pop
jae
clc
cmp
aas
arpl
or
mov
dec
push
pop
pop
pop
std
and
mov
aas
imulb
imul
and
test
lea
inc
addr16
or
pusha
popa
dec
inc
cmp
inc
loope
mov
js
ljmp
popa
xor
fidivl
ja
decl
dec
pop
fistpll
call
sub
pop
imul
mov
dec
pop
jg
insl
lea
inc
bound
pop
bound
das
insb
pop
popa
inc
pop
aad
clc
cmp
popa
mov
outsl
cld
in
fs
inc
xor
sub
inc
push
ds
dec
sub
sub
dec
push
add
pushw
push
pop
mov
push
cmp
addr16
std
movsl
lea
lcall
xchg
fdivr
adc
pop
das
inc
push
pop
push
insb
cmpsl
dec
mov
cmp
inc
out
gs
arpl
pop
cli
inc
xchg
pop
sbb
insl
mov
scas
insb
std
push
pop
fmuls
imul
je
sub
inc
pusha
outsl
and
mov
pop
inc
or
dec
fsub
mov
mov
inc
cmp
cld
rcrl
mov
cld
sub
pop
mov
sbb
pusha
sbb
cmp
outsb
fstpt
pop
ss
daa
shll
jb
cmp
cmp
clc
cmp
sub
inc
dec
inc
inc
cmp
aas
inc
cmp
add
cmp
pop
mov
lret
out
pop
in
test
cmp
push
lds
imul
and
pop
aas
cmp
imul
outsl
adc
cmp
and
fcomi
idivb
inc
outsb
daa
jo
cmp
jle
outsl
gs
push
daa
jo
pushaw
cmp
and
jo
or
push
inc
inc
cmp
fcmovnbe
jne
push
insl
pop
mov
mov
cmp
cmp
ds
cmp
idiv
filds
push
push
aas
sub
cmp
pop
ja
test
cmp
dec
cmp
add
xchg
in
imulb
and
push
add
xchg
outsl
fs
inc
dec
mov
daa
pop
mov
sti
addr16
cmp
push
ja
imul
insb
mov
loope
dec
cmp
pop
ds
cs
fisubrl
push
inc
cmp
ss
imul
das
cs
xchg
sbb
cmp
lock
fildl
sbb
in
or
pop
push
imul
hlt
lods
sub
push
cmp
bound
outsl
push
insl
outsb
pop
outsl
jb
scas
out
loopne
inc
cmp
ds
xlat
ds
addr16
dec
ds
xor
dec
inc
inc
inc
cmp
xchg
sub
jbe
xchg
sbb
add
movsl
and
add
aaa
sub
pop
outsl
mov
aas
push
pop
pop
outsl
bound
aas
mov
rcll
cmp
push
arpl
jg
popa
pop
test
pop
jbe
cmp
sar
push
push
cmp
sub
pop
or
push
dec
push
ja
sbb
dec
aas
mov
aaa
push
mov
mov
mov
jecxz
outsl
daa
jo
out
lret
fistpl
adc
dec
jo
cmp
mov
pop
inc
inc
inc
dec
inc
dec
out
mov
stc
imul
sub
pop
jb
imul
mov
cmp
push
aas
adc
inc
cmp
mov
xor
or
jbe
rcrb
add
stc
fsts
push
cltd
outsl
outsb
or
hlt
lret
jg
add
push
data16
inc
lcall
inc
out
insl
pop
aaa
sarb
lahf
inc
pop
imul
mov
jne
fadds
jo
jo
adc
fsubl
mov
jo
mov
popa
sbbl
jno
outsl
clc
push
bound
lock
add
dec
push
sub
pop
pop
divb
fsubl
jge
pop
or
jno
or
adc
imul
xlat
mov
pop
data16
sti
and
jne
pop
data16
lods
je
incl
inc
xor
daa
pusha
push
insb
call
pop
out
or
mov
mov
sar
sbb
jbe
jecxz
cmc
sti
push
movsl
outsl
decb
mov
and
mov
push
lcall
add
xor
mov
mov
pop
arpl
push
call
jb
insb
push
outsb
sbb
insl
push
js
jb
je
popf
movsl
outsb
daa
leave
insb
fldpi
xor
cld
outsl
das
cmp
dec
or
incb
add
aaa
pop
add
push
clc
inc
add
mov
cld
pop
outsl
pop
imul
aas
imul
jbe
lods
rcll
push
inc
pop
xor
sub
xlat
push
pop
bound
std
cmp
mov
xchg
popa
jae
jbe
add
sti
ret
sub
sub
inc
sbb
rcl
movsl
xchg
mov
lret
insb
sub
mov
gs
xchg
jae
pop
jne
push
gs
enter
inc
repz
mov
fsubrl
jb
cmp
imul
fwait
cld
inc
jo
dec
sbbb
push
jbe
inc
imul
mov
sarl
jno
cmp
jb
push
xchg
push
das
es
fisttpll
xor
ds
adc
lods
cmc
push
in
decl
and
xor
pop
insl
popa
pop
cltd
xorl
cmp
jo
gs
std
jo
shrb
sub
outsb
mov
cmp
xor
pop
popl
mov
push
test
ljmp
sbb
sar
lahf
int3
mov
adc
icebp
mov
idivb
mov
aam
in
iret
lods
shlb
xchg
psubq
inc
leave
mov
mov
dec
mov
bnd
aad
int
into
mov
call
pop
idivb
enter
mov
iret
fisttpll
ret
shl
fnstenv
das
mov
in
mov
ret
jmp
sar
cld
lfs
mov
mov
mov
mov
mov
sahf
lods
mov
int
scas
adc
call
fcmovb
mov
in
mov
xlat
stos
mov
cmpsb
mov
sahf
scas
mov
repnz
in
pop
shl
lods
movsl
mov
mov
test
psubw
mov
stos
enter
mov
int
decb
xchg
lods
lret
xlat
mov
in
ror
pop
testb
iret
cmpsl
dec
cli
scas
xchg
psubw
mov
mov
and
inc
sarb
mov
mov
mov
enter
mov
lret
mov
mov
mov
enter
jg
mov
shl
aam
mov
stc
psubw
scas
mov
mov
mov
mov
daa
rol
scas
enter
lahf
int
rol
in
repnz
mov
mov
out
leave
incl
ret
cmpsb
mov
mov
mov
int
sub
iret
cmp
shr
mov
and
mov
mov
iret
mov
daa
int
mov
int3
shll
mov
pop
int3
icebp
lret
ds
and
enter
leave
hlt
lret
int3
mov
stc
cmp
lahf
ror
mov
ret
mov
ret
ret
fwait
aas
mov
add
fldt
and
fbstp
xorl
stos
scas
and
lods
scas
out
pop
testb
mov
scas
test
lahf
rcrb
enter
mov
int3
loop
stos
mov
lods
jle
aas
nop
scas
mov
scas
test
stc
cmp
shll
imul
lahf
scas
test
mov
lods
movsb
cmp
mov
movsl
pop
repnz
mov
mov
fld
cld
inc
cwtl
mov
dec
sarb
ret
test
sub
test
inc
rep
outsl
fs
inc
jmp
je
out
push
mov
cmc
push
push
pop
sub
pop
data16
and
fisubrl
push
roll
cld
in
mov
push
cs
xor
dec
dec
dec
inc
and
fbld
mov
stc
std
mov
idiv
fsin
jo
addr16
mov
movsl
pop
pop
mov
icebp
xor
daa
jae
nop
orl
mov
shll
inc
push
dec
inc
cmp
add
popf
cld
popa
std
mov
clc
xlat
arpl
addr16
adc
adc
mov
sbb
push
and
and
mov
setns
outsl
pop
and
and
pop
imul
mov
incl
cmp
imul
lret
adc
pop
mov
lock
inc
add
hlt
loope
xchg
pop
dec
mov
pop
jno
cmp
adc
push
push
xchg
pop
insl
pop
pusha
xor
mov
pop
adc
push
pop
gs
pop
pop
test
push
inc
pusha
cmp
insb
fisubrl
inc
dec
pop
ss
fistps
sti
out
push
push
xlat
outsl
icebp
mov
inc
aas
jo
mov
inc
dec
orl
push
mov
jo
dec
dec
imull
mov
jno
sbb
imul
pop
mov
and
insl
out
push
inc
ds
pop
in
test
inc
dec
inc
fistpl
std
sub
push
or
adc
mov
fildl
push
sbb
sbb
dec
push
dec
sub
push
ds
sub
cmc
jno
sbb
add
decb
sub
sub
or
adc
jle
mov
fildll
aaa
pop
jns
sub
clc
int
mov
dec
adc
and
add
outsb
iret
mov
jno
push
insb
adc
sub
stos
pop
xor
cs
mov
test
xor
mov
test
and
sub
or
and
pop
cmp
out
imul
mov
imul
bound
cmp
pop
xchg
dec
call
push
incl
push
sbb
pop
inc
push
push
dec
sub
pop
push
pusha
mov
inc
jno
sub
call
imul
and
inc
outsl
insl
sub
divb
pop
arpl
xor
ja
es
push
push
insl
lea
add
xor
roll
push
sbb
inc
pop
jo
sub
cs
dec
ja
xor
imul
jecxz
in
insb
sub
call
test
or
sub
sub
movsl
lea
sub
and
sub
mov
push
pop
pop
xor
jo
es
adc
xchg
frstor
inc
push
ret
pop
sub
sub
pop
das
mov
cs
pop
cmp
inc
or
mov
ljmp
das
shrl
cmp
out
jo
inc
fs
pusha
xor
test
imul
movsl
sbb
outsb
dec
pop
mov
loope,pt
add
rcrl
adc
xor
xor
insb
jne
arpl
pop
jne,pn
int3
pop
mov
xor
shll
pop
das
pusha
sub
or
push
out
mov
imul
mov
pop
sti
gs
pop
cmp
insb
cmpsl
cmp
outsl
movsl
push
cmpsl
das
pop
xor
dec
call
pop
imul
std
pop
dec
js
mov
sbb
add
pusha
mov
lret
cmpl
sub
pop
das
sub
outsl
insb
aaa
and
pusha
sub
popa
mov
mov
arpl
fnstsw
jecxz
inc
sub
mov
and
cmpsl
and
jns
cs
test
xor
inc
mov
sub
xor
pop
xor
dec
pop
pusha
xor
cld
push
bound
pop
cmp
pop
jo
xchg
lods
sbb
fdivl
sbb
mov
xor
fistps
inc
cli
push
outsb
push
aaa
push
fwait
imul
arpl
sbb
pop
outsl
fsubrl
fmuls
fs
pop
fs
dec
data16
cmc
inc
pop
data16
pop
ss
jb
push
imul
dec
cmp
loope
jge
jb
popa
jb
pushw
mov
mov
js
dec
imul
dec
dec
jecxz
cmc
push
aaa
push
cmp
jmp
sub
gs
inc
imul
inc
inc
aas
test
mov
xchg
jmp
mov
xorl
dec
dec
mov
js
mov
ja
inc
outsl
fsubr
push
mov
arpl
aas
mov
addr16
jge
inc
jg
outsb
push
fucomi
pop
shll
sbb
invd
outsl
ja
imul
pop
inc
dec
imul
xchg
ljmp
or
je
insb
lcall
shlb
add
aaa
insl
jbe
inc
sbb
push
jecxz
das
outsl
jecxz
jo
idivb
aas
xor
hlt
popa
pop
leave
imul
cmp
cmp
mov
jno
push
jne
imul
out
sub
cli
cmp
arpl
in
aas
push
mov
arpl
push
adc
ljmp
das
das
sub
inc
cmp
inc
inc
inc
decl
dec
dec
inc
dec
dec
inc
dec
push
dec
push
push
push
push
push
adcl
add
inc
test
inc
pop
sar
xchg
mov
ja
js
mov
sub
jb
pop
cmp
jecxz
pop
adc
mov
xchg
fs
mov
shll
dec
cmp
push
test
imulb
push
cli
jo
jne
arpl
xchg
mov
gs
imul
jg
lock
imul
inc
inc
aas
dec
inc
es
inc
ret
out
js
aas
push
sti
inc
addr16
push
add
or
dec
cmp
adc
pushf
mov
dec
jbe
sub
je
inc
push
cld
mov
je
jne
inc
ds
push
aas
and
ss
pusha
inc
pop
insl
daa
inc
inc
fcos
jg
inc
jne
cmp
inc
cmp
sub
fildl
jmp
jo
stc
add
or
lock
push
loopne
or
mov
inc
imul
movq
push
out
jae
in
incl
std
inc
mov
and
sub
daa
xor
or
mov
add
push
lock
mov
das
jo
dec
adc
outsl
inc
in
pop
xor
jae
popa
popa
callw
add
xchg
int
pop
je
and
jno
jno
push
dec
pop
stos
jno
dec
outsb
out
pop
or
adc
pop
inc
outsl
das
or
mov
or
dec
inc
sbb
cld
inc
outsl
sub
push
sub
shlb
insb
xor
adc
gs
pop
pop
cmp
xor
mov
insb
pop
xorb
enter
push
sbb
adc
test
pop
pop
pop
je
sub
sub
imul
push
sub
inc
push
add
wbinvd
sub
sbb
sbb
cmp
lcall
inc
sub
sub
sub
sub
sub
sub
movaps
lcall
cld
es
fbstp
js
cwtl
cs
xor
sub
pushl
or
cs
das
dec
xor
xchg
sub
xor
xor
sub
xor
jg
xor
stos
xor
mov
xor
xor
xor
xor
xor
sub
and
xor
sub
xchg
xor
xor
mov
arpl
addr16
xor
mov
xor
mov
aaa
enter
stos
aaa
stos
cmp
cmp
xor
cmp
loope
sub
cmp
ljmp
icebp
dec
cmp
mov
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
xor
pop
cmp
cmp
cmp
cmp
xor
aam
fdivrl
divb
xor
jge
cmpl
inc
cmp
mov
sub
or
decl
jnp
mov
pop
sub
sbb
push
sub
bound
xor
jg
neg
sub
xor
jl
mov
push
push
dec
insb
imul
outsl
xor
cs
test
mov
decl
cli
ljmp
das
inc
xor
ret
xor
out
jmp
push
ss
xor
gs
shll
xor
xor
cmp
aaa
movsb
xor
cmp
cmp
xchg
shll
cmp
cmp
xor
aaa
or
or
adc
or
inc
aaa
xor
arpl
push
jge
mov
pop
cmp
cmp
inc
mov
fbstp
cmp
cmp
cmp
cmp
cmp
pop
cmp
jns
mov
cltd
xor
fnstcw
cmp
ss
cmp
mov
cmp
push
cmp
cmp
cmp
sbb
sub
pop
mov
out
cmp
ds
mov
mov
mov
cmp
sub
fisttps
sub
sub
ljmp
jle
jle
test
movsb
sub
das
fsubrs
jecxz
ljmp
das
and
jg
push
leave
shrl
aaa
xor
das
dec
sub
jecxz
mov
je
jp
mov
xchg
xor
hlt
cs
mov
sub
xchg
das
lods
xor
das
sbb
xor
inc
jecxz
sub
sub
dec
xor
xor
inc
sub
xor
sub
xor
addr16
clc
fbld
aam
mov
dec
in
xor
pushl
xor
shlb
xchg
divb
push
adc
aaa
adc
and
cmp
test
cmp
push
aaa
xchg
nop
cmp
aaa
mov
jmp
in
or
mov
cmp
cmp
or
cmp
cmp
jbe
mov
scas
cmp
xor
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
lea
pushf
cmp
cmp
cmp
xor
cmc
cmp
cmp
ss
call
jnp
mov
lahf
cmp
ret
ss
push
cmp
ds
cmp
sahf
lahf
movsl
jmp
mov
cmp
cmp
loope,pt
sbb
lea
sub
sub
sub
mov
jecxz
ljmp
lds
jecxz
jmp
icebp
das
adc
sub
jnp
sub
mov
xor
sub
wrmsr
sbb
pop
cs
das
inc
or
mov
lea
movsl
xor
xor
sub
cs
cmc
xor
xor
push
xchg
pop
xor
das
mov
pop
sub
fnsave
fisubrs
xor
cmp
dec
xchg
jle
pushl
dec
xor
sbb
xor
xor
cli
cmp
aaa
test
mov
mov
cmp
cmp
sti
in
sub
cmp
cmp
adc
xor
lret
das
std
jg
sbb
sub
mov
push
cmp
fistps
out
and
std
dec
daa
out
stos
xor
out
incl
aaa
into
fdivs
fldcw
aaa
cli
aaa
add
add
cmp
lcall
xor
xor
addr16
mov
add
mov
lods
mov
ss
pop
ss
call
outsl
cmp
xchg
xor
cmp
std
mov
cmp
xor
ss
xor
lea
mov
ljmp
jmp
aaa
les
enter
std
xor
cmp
inc
cmp
push
mov
outsb
cmp
ja
mov
cmp
jecxz
idiv
cmp
xor
cmp
cmp
cmp
cmp
xor
cmp
cmp
pop
fwait
cmp
iret
popa
fcomip
cmp
cmp
xor
sti
cmp
and
dec
cmp
aad
xlat
cmp
push
mov
cmp
and
cmc
cmp
dec
jl
xchg
push
inc
cmp
mov
loope
test
cs
xor
pop
sub
test
fwait
xor
lcall
clc
jg
sub
cs
divl
adc
xor
jno
xchg
sub
jl
sub
sub
sub
sub
xor
sub
adc
and
push
inc
cs
js
or
pop
add
jae
xchg
cld
jg
popa
je
add
dec
dec
pop
push
outsl
data16
popa
jb
pop
add
pop
sti
je
jno
jae
cmp
std
mov
mov
ja
sar
rol
mov
shl
das
dec
imul
push
imul
outsl
ja
push
push
push
outsl
popa
insl
sbb
xor
add
xchg
mov
sub
fs
arpl
fs
and
in
outsl
dec
jns
je
jbe
adc
outsb
imul
frstor
mov
imul
outsb
outsl
jo
pop
andb
cmp
add
jns
or
insl
imul
jo
and
push
push
jb
jns
xor
mov
sub
push
gs
add
fmull
arpl
outsb
cmp
ja
outsb
imul
adc
push
jae
inc
mov
imul
push
jnp
gs
jg
bound
jo
inc
cmp
divl
popa
push
ds
pop
inc
js
adc
push
mov
fildll
adc
dec
jmp
fwait
insl
ja
inc
fs
imul
or
popa
dec
add
inc
xor
ret
jne
lret
je
inc
inc
jbe
outsb
sti
mov
lods
inc
jb
notl
bound
sub
fs
mov
cmp
push
or
inc
sub
or
dec
pcmpeqw
outsl
fxch
cmpsl
sbb
dec
jae
xor
jae
add
inc
lds
movd
pop
mov
cmp
ret
adc
insl
jbe
inc
jmp
scas
adc
out
outsl
dec
push
and
daa
subl
push
sti
imul
insb
sti
imul
dec
insl
imul
daa
pop
insl
jmp
and
add
ret
decb
pop
add
add
add
push
dec
add
cwtl
std
mov
imul
xchg
loope
add
clc
pop
sbb
push
out
adc
xor
xor
mov
xor
adc
mov
cltd
loope
cltd
cmp
out
or
in
daa
add
ja
outsl
add
mov
and
inc
ja
jle
add
mov
add
sub
repz
ss
ja
push
add
outsb
adc
pop
fistpl
add
push
lock
sti
jge
push
push
add
mov
add
pop
nop
shll
idiv
filds
dec
outsb
out
pop
outsl
lea
mov
pop
add
incl
jge
sub
bound
rol
outsl
sbb
jbe
leave
xchg
jp
not
into
jl
sbb
dec
decb
xor
jne
stos
imul
add
sub
orl
aas
stos
xchg
enter
out
sub
and
addb
stos
inc
pusha
movsl
add
nop
xchg
push
inc
dec
push
add
sub
add
mov
inc
inc
pusha
sub
xchg
pop
add
incl
rolb
nop
add
add
sub
xchg
das
sub
cltd
shlb
jns
add
repz
add
add
add
add
imul
jg
sub
pop
sti
call
add
mov
add
add
push
add
jb
jbe
sub
add
mov
add
jl
add
cld
mov
popa
je
inc
imul
outsb
addr16
or
sti
in
std
push
imul
inc
insb
jne
push
in
push
outsb
insl
and
je
push
imul
sbb
add
outsl
jae
dec
popa
outsb
fs
mov
shrb
bound
jae
outsl
jbe
out
arpl
and
jo
dec
popa
insl
inc
xlat
outsb
leave
fiaddl
push
sbb
test
dec
mulb
push
jb
arpl
outsb
or
loop
fcomps
outsl
dec
push
pop
jae
test
outsb
outsw
adc
mov
jb
xchg
mov
insb
fistl
adc
inc
mov
mov
lods
jl
push
pushf
gs
jnp
in
fistpl
push
xchg
jae
outsl
outsb
mov
sti
inc
fs
dec
outsl
popa
fs
out
jg
mov
fcmovbe
push
jns
fldl
je
iret
add
gs
outsl
ret
lds
in
xor
push
lock
insb
add
outsl
je
sub
add
test
xchg
inc
jmp
jmp
jmp
adc
pop
adc
pop
or
imul
pop
or
call
leave
adc
mov
mov
decl
mov
fistpl
or
mov
jp
in
add
nop
add
or
and
incl
sbb
ljmp
or
insl
and
inc
sub
push
push
fstpt
aaa
xor
jmp
jae
mov
inc
xchg
sbb
xchg
sbb
insl
xorl
das
or
pop
jle
mov
bound
push
xchg
lock
push
or
icebp
add
mov
add
mov
mov
insl
sub
dec
mov
mov
mov
adc
jb
mov
or
push
andl
sar
or
out
mov
inc
das
dec
or
scas
repnz
pop
pop
sub
adc
out
sbb
or
jo
pop
push
xor
pop
push
ud2
pop
je
punpcklwd
data16
or
shll
sbb
fs
fwait
pop
stc
addl
fsubrl
cmp
arpl
outsb
or
jo
ja
jge
je
subb
xchg
out
xchg
insl
orl
and
insl
bound
ds
icebp
cmpsl
xchg
ja
or
jbe
ret
lret
push
sbb
outsb
arpl
inc
pop
aaa
jmp
inc
js
inc
jb
dec
aam
jo
outsb
in
std
fmul
je
je
insl
mov
push
sub
sbb
insl
ss
and
xor
int3
xor
imul
jo
or
jne
imul
xchg
push
out
sbb
push
outsb
out
sbb
or
ljmp
xchg
lret
gs
pop
das
dec
cmp
or
mov
imul
push
out
mov
add
sbb
pop
lods
in
pop
jmp
loopne
sidtl
add
out
lock
adc
add
sets
into
add
pop
xor
sbb
add
adc
repnz
xchg
push
aaa
dec
inc
and
rcr
inc
add
mov
js
push
and
test
adcb
xor
popa
je
mov
fisubrs
inc
cs
mov
daa
rorb
mov
jmp
dec
lock
add
add
adcb
inc
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
