daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
mov
pusha
fnsave
add
jmp
fpatan
addr16
ud1
inc
add
leave
test
stc
push
mov
fidivrs
call
add
push
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jnp
push
sub
rclb
and
or
je
inc
mov
mov
mov
ja
mov
mov
mov
mov
cmp
jne
test
mov
aaa
insb
pop
or
cmpsb
push
outsl
add
adc
aaa
ret
in
jmp
sbb
sbb
xor
dec
int
mov
add
cmp
mov
jl
mov
idivb
lea
adc
add
stos
stos
stos
push
pop
push
lret
sbb
or
inc
push
adc
outsb
cmp
adc
and
push
or
pop
cmp
les
mov
negb
movb
lcall
fistl
int3
into
mov
mov
or
shl
add
inc
mov
fbstp
repnz
not
sub
lea
mov
push
mov
cld
shr
rep
pop
push
and
mov
movsb
dec
out
fnstsw
and
push
push
lea
mov
sbb
fstpt
jno
inc
lret
sbb
push
sbb
jb
xor
and
jmp
dec
and
fldcw
lahf
adc
and
xor
addr16
xchg
pop
testl
mov
das
jnp
lea
pop
cmpsl
gs
mov
popa
xorl
sub
out
jp
push
imul
outsb
mov
mov
inc
mov
push
jo
fcomp
mov
pop
test
cmpb
jne
adc
sub
adc
fstl
ret
int
pushf
push
pop
mov
push
push
sbb
push
lods
fldcw
push
leave
push
sub
adc
ja
mov
push
ss
mov
and
pop
enter
clc
into
adc
push
test
or
push
sbb
and
test
js
out
lea
mov
add
or
push
dec
inc
inc
mov
dec
add
jne
xor
mov
jecxz
mov
aaa
adc
xor
push
mov
push
add
add
pop
mov
mov
push
xor
rcll
rolb
je
rclb
xor
ret
or
lods
jge
outsl
mov
pop
sahf
jbe
sahf
insl
pop
adc
pop
nop
mov
and
or
outsb
je
cli
sub
or
push
mov
push
push
fcomps
push
xor
inc
inc
push
pushw
pop
cmp
repz
pop
sub
inc
lock
push
mov
inc
sbb
aad
scas
fstl
add
inc
incl
lea
fnstenv
sub
push
sbb
and
sarl
xlat
into
test
sub
repnz
push
dec
cmp
pop
push
adc
ret
push
push
cwtl
loop
das
loope
shrb
push
push
cmp
add
push
add
push
add
add
ficoms
adc
mov
xor
jl
push
sahf
mov
out
dec
lret
add
add
or
cmp
sub
adc
jmp
hlt
mov
jae
popa
shll
push
or
or
adc
cmp
mov
addr16
xor
mulb
adc
fstpt
xor
sub
popa
mov
mov
rcll
sbb
movsb
and
mov
fs
nop
lea
adc
push
mov
add
aaa
or
dec
inc
push
adc
lods
daa
test
adc
in
sbb
jbe
dec
mov
pop
add
push
xchg
sbb
mov
cmpsb
sar
dec
add
mov
cli
mov
int
int
sar
cld
lret
or
add
dec
pop
jecxz
int
add
cmpb
jne
test
jle
push
dec
jp
jnp
jns
add
push
and
jg
cld
in
add
out
or
jmp
mov
dec
add
mov
daa
adcl
loopne
leave
sbb
add
cmp
sbb
sub
cmp
daa
pusha
push
pop
shll
adc
adc
mov
sub
pop
jb
sub
enter
sub
bound
xor
sub
push
into
jge
mov
lret
xor
sbb
push
push
ffree
je
inc
xchg
cmp
mov
loopne
jne
repnz
rcrb
sub
mov
push
clc
sbb
inc
sbb
shr
push
pushl
fmuls
adcb
lea
test
pusha
ja
mov
popf
ret
or
stos
mov
push
scas
inc
push
and
leave
push
test
xchg
adc
mov
inc
fsubs
mov
mov
cmp
fwait
or
and
sbbw
or
lea
pusha
mov
lret
lea
mov
xor
and
jbe
lcall
movsl
sub
mov
or
mov
push
inc
xlat
sub
sbb
sarb
lock
aam
sbb
adc
pop
or
or
push
adc
xchg
inc
orl
dec
adc
popf
imul
dec
sbb
inc
sub
mov
sbb
xchg
icebp
test
sbb
sub
enter
sub
add
mov
mov
push
rcrb
imul
push
push
pop
push
xor
jb
pop
pop
mov
adc
sub
aam
dec
adc
add
imul
push
or
mov
or
popa
popa
hlt
mov
ja
add
mov
fimuls
sbb
loopne
mov
lods
in
add
inc
push
mov
out
push
inc
into
or
push
push
xchg
rcrl
sub
pusha
popa
in
and
jbe
and
int
xor
out
sub
mov
outsl
fstpt
or
or
mov
and
rclb
sub
adc
mov
das
adc
pop
xor
mov
cmpsb
jmp
sbb
aaa
sbb
mov
mov
jbe
int
dec
push
sbb
push
data16
mov
mov
inc
cmc
out
stos
fsubp
in
jae
cld
jne
inc
add
out
add
bound
mov
ret
and
or
dec
mov
cld
and
push
call
mov
or
mov
nop
adc
outsl
or
jmp
daa
sub
mov
in
sbb
sbb
mov
adc
testl
pusha
test
or
pop
xchg
dec
test
paddusb
test
pusha
pop
xchg
mov
sub
cmp
jne
push
and
pusha
sbb
or
push
ret
mov
mov
xor
lock
cltd
add
or
inc
shr
xchg
outsb
es
xor
ret
or
shlb
fcoms
inc
pop
or
pusha
push
mov
movl
add
jmp
clc
jbe
inc
lods
mov
pushf
je
sbb
int
or
jl
add
xor
xchg
sbb
mov
mov
xor
xor
outsb
and
insb
mov
inc
pop
add
data16
cmp
call
out
pop
xor
push
outsl
or
or
ficoml
push
loopne
jecxz
push
xchg
push
dec
and
jno
xor
pop
js
xchg
sub
push
lock
pop
leave
inc
outsl
sub
push
cmp
pop
cmpsb
mov
push
push
js
mov
pop
call
add
push
xchg
sbb
insb
notl
cld
outsb
mov
pushf
mov
mov
xor
xchg
int3
rcr
sti
insl
cld
xor
int
movsb
rcrl
inc
adc
loope
mov
mov
js
push
ja
shlb
dec
mov
push
and
add
cltd
xor
push
jp
or
pcmpeqd
and
lock
mov
cmc
adc
cmpl
push
jmp
mov
insb
insb
ret
push
idivb
mov
dec
orl
lahf
add
ds
and
cmp
inc
cmp
fildll
fsubrl
fsubr
and
sbb
mov
ret
or
js
mov
adc
js
filds
push
ret
adc
shrl
aam
dec
lock
cltd
sub
and
clc
out
sbb
imul
jnp
sub
je
jbe
je
sbb
pop
pop
fisubs
adc
fcmovb
or
sub
pop
fsubs
movups
leave
aaa
wrpkru
or
fmuls
rcll
mov
test
sbb
adc
add
sbbl
pusha
in
fdivl
jg
xchg
aad
or
call
daa
adc
cvtdq2ps
addb
sbb
mov
sbb
mov
inc
cmpsl
jns
lea
out
dec
dec
sahf
adcl
cwtl
cmp
aaa
in
sbb
xchg
cmp
xor
xor
xor
inc
push
iret
inc
and
repnz
cmp
sbb
leave
xor
and
add
add
push
xlat
add
lock
mov
adc
xchg
push
sahf
sub
pop
int3
sub
lret
mov
push
lock
out
lock
outsb
pop
and
enter
fstpt
sub
into
popf
mov
xor
sarl
sbbl
loop
out
add
jo
and
je
push
push
dec
stc
mov
scas
sahf
cmp
pop
sbb
clc
stos
mov
pop
cmpsb
add
or
mov
fmull
roll
pop
push
sub
mov
or
call
jns
xorb
lods
push
jne
ret
ds
in
dec
mov
xor
sbb
cmp
push
add
jg
sbb
push
push
out
pushf
insb
jl
add
inc
xor
arpl
popa
mov
inc
sub
xchg
ret
fisubrl
cmp
sub
subps
adc
inc
xor
push
lea
ss
outsl
push
adc
bound
pop
lret
out
add
repz
xor
insb
sub
test
test
movb
mov
or
jne
mov
out
or
adc
es
pop
aaa
and
cs
loopne
sub
rcrb
je
mov
or
or
pop
adc
ja
xor
inc
iret
icebp
outsb
mov
mov
sub
int
loope
ss
and
roll
es
xchg
ljmp
sbb
sub
insb
in
movsl
rcrb
xor
add
push
lock
sbb
icebp
ja
ss
adc
call
adc
sbb
shlb
mov
add
xor
jae
daa
push
sbb
add
adc
outsl
lcall
cltd
idiv
mov
mov
add
mov
cmp
jb
pop
addb
cmp
or
add
or
insb
or
and
mov
rorb
mov
mov
mov
nop
mov
orb
jo
mov
mov
dec
mov
cmp
mov
mov
sbb
mov
mov
cld
inc
iret
scas
adc
lock
mov
inc
jl
addb
sbb
sbb
mov
sbb
pushf
mov
sbb
lods
mov
fadds
xor
repnz
insb
xor
rcl
add
fs
call
cmp
fsubrs
adc
movl
cmp
ret
and
nop
cmpsl
add
or
pop
add
ret
push
xor
add
add
insb
cwtl
inc
andl
push
xor
mov
in
pop
ljmp
inc
orl
popf
in
adc
inc
or
or
or
mov
clc
or
hlt
iret
insl
lahf
in
xchg
popa
cmp
fsubrl
insb
dec
cld
sbb
push
subb
push
inc
mov
lea
test
insb
aaa
ja
rorb
pushf
push
add
xor
add
or
add
ljmp
add
xor
and
inc
or
push
cmp
je
cmp
repnz
jbe
mov
rorb
cld
inc
testb
std
repz
aam
push
sub
jbe
jmp
push
pop
in
jmp
insb
pusha
push
test
xchg
cli
mov
inc
in
mov
mov
mov
mov
inc
popa
loope
inc
pop
mov
mov
dec
in
inc
xchg
add
mov
add
das
push
out
inc
call
loope
lahf
mov
mov
inc
sub
mov
jmp
test
mov
mov
std
or
sbb
pop
fadd
dec
aad
jmp
jb
mov
loopne
jno
inc
lea
adc
js
fdivrl
into
int3
add
dec
lock
sbb
mov
inc
mov
jns
adc
cmpsb
imul
imul
cmpsb
imul
data16
or
and
imul
addr16
adc
adc
in
mov
pop
adc
pop
or
sbb
movsl
leave
adc
mov
jne
jb
or
adc
add
mov
or
mov
jp
nop
insb
fwait
in
xor
adc
add
add
das
xlat
jne
xlat
dec
cmp
or
sub
pop
sub
xlat
jne
push
adc
aaa
inc
out
arpl
movhps
xor
pop
xchg
pop
sbb
mov
daa
push
addl
jmp
scas
das
rdtsc
lcall
fnstenv
lock
or
icebp
testl
mulb
pop
mov
jmp
jno
mov
pop
push
push
scas
jmp
add
out
movsl
addr16
mov
mov
adc
inc
int3
fnstenvs
push
scas
arpl
sar
or
mov
mov
addr16
dec
add
and
shll
cmpsb
push
testb
mov
scas
cmpsb
pushf
mov
lcall
dec
xor
shll
data16
js
shrl
add
fmull
rorb
dec
mov
mov
sbb
xor
je
in
clc
add
in
adc
mov
adc
push
inc
loope
dec
and
jne
mov
xor
lods
rcrb
jecxz
and
adc
imul
scas
imul
cmp
xor
lcall
and
adc
jmp
cmpsb
imul
testb
imul
imul
cmpsb
imul
and
inc
pop
mov
out
adc
adc
pop
xor
test
aaa
sub
and
mov
mov
xor
xor
add
cmp
lcall
sub
sbb
sub
cmpsb
imul
clc
jbe
popa
shl
lock
aaa
stos
rolb
in
das
imul
imul
imul
test
mov
adc
xor
add
and
inc
sbb
mov
lock
cmp
add
sbbb
xchg
cmp
xor
scas
in
dec
orb
push
adc
lret
inc
inc
in
psubq
dec
xor
cs
insb
add
push
inc
push
or
push
push
xor
inc
pop
leave
ds
inc
push
sbb
adc
roll
shll
adc
push
cvtps2pi
inc
pop
clc
cld
add
sti
stc
cld
notl
cld
mov
testl
cld
stc
ljmp
jmp
divl
cli
dec
leave
push
dec
bound
push
imul
pop
insb
sbb
imul
sbb
sbb
sbb
push
pop
popa
incl
sti
sub
add
sbb
xchg
mov
sbb
mov
sbb
mov
pop
mov
out
ljmp
shll
and
xor
ror
and
mov
mov
mov
and
shll
imul
mov
pop
push
mov
pop
gs
dec
inc
inc
std
add
int
pop
idiv
mov
dec
adc
decb
sbb
out
xor
xchg
add
popa
or
or
or
jb
repnz
push
add
incl
ss
sub
push
or
or
cltd
jle
leave
rcrb
jae
fldcw
loope
cmp
add
decb
mov
add
inc
lcall
push
add
pop
in
pop
and
pop
pusha
movd
pop
sbb
pop
dec
shrl
jp
daa
mov
insl
cwtl
fdivrl
push
pop
fisttpl
or
insb
lret
jns
aas
out
in
mov
or
call
fisttpl
add
cmp
dec
push
jmp
inc
add
inc
add
dec
jg
pushl
es
push
or
sbb
dec
arpl
mov
dec
or
movsb
bound
cld
aaa
popa
add
mov
dec
std
adc
sbb
outsb
dec
clc
or
pop
jl
outsb
add
sub
sub
mov
mov
in
jl
stc
cmc
push
push
bound
das
mov
mov
in
fisttps
cmpsl
bound
dec
clc
fs
adc
mov
imul
popa
lea
pop
jo
push
sbb
mov
dec
sub
adc
mov
xor
mov
pop
sbb
pop
push
pop
addr16
mov
and
jg
dec
or
clc
adc
rorb
mov
adc
mov
dec
dec
push
dec
or
in
pushl
std
mov
arpl
div
movsb
fs
jg
shlb
mov
test
mov
mov
daa
xchg
in
lahf
in
xchg
jp
test
mov
xchg
cltd
fsin
pop
lock
push
test
arpl
cld
out
mov
dec
cmp
pop
dec
push
dec
pusha
mov
std
test
cltd
dec
out
dec
les
or
cmp
push
xchg
mov
pop
sub
push
mov
pop
andl
xor
stos
pop
test
out
dec
testl
lods
or
dec
adc
xor
fdivl
incl
or
cmp
mov
xchg
mov
daa
repnz
loope
ljmp
xchg
mov
inc
push
pop
xor
push
mov
inc
push
xchg
clc
pop
outsl
mov
push
aaa
popf
dec
rdmsr
pop
jmp
fbstp
xchg
loop
std
inc
out
cmp
dec
ret
notl
clc
mov
cmc
in
dec
jl
adc
test
int
inc
jge
adc
stc
xchg
jg
sahf
jg
push
cmpl
mov
sti
sbb
jnp
push
xchg
loopnew
cmp
in
mov
inc
stc
cmp
cmp
or
sbb
iret
call
jmp
mov
jb
test
orb
lea
dec
loope
cmp
fistpl
mov
dec
sbb
outsb
test
cmp
outsl
in
dec
jns
clc
jno
lahf
dec
dec
sti
adc
stc
add
setns
incl
mov
inc
mov
aas
pop
dec
aaa
stc
loope
cmc
cmp
test
sbb
in
add
cmpb
in
sbb
mov
sbb
pop
push
loopne
dec
dec
push
popa
out
pop
add
in
dec
mov
dec
gs
or
push
in
inc
and
pop
push
pop
sbb
out
mov
dec
mov
adc
mov
lock
das
repnz
cmp
ret
add
or
cli
mov
fstpt
xorl
insb
stc
push
dec
push
in
fbld
dec
dec
sti
shl
insl
sti
ja
dec
outsl
outsl
inc
icebp
push
push
cmp
or
arpl
pop
clc
movsl
ret
rcrl
shl
mov
push
jecxz
out
mov
xchg
or
popa
sub
or
jg
aaa
fbstp
or
or
insl
pop
pop
ljmp
add
xchg
xor
std
outsl
sub
xchg
loopne
sbb
jg
cmovg
sub
mov
scas
sbb
mov
das
fstpt
xchg
sbb
xor
xchg
cltd
sti
outsl
mov
cmp
stc
std
insb
add
add
mov
mov
stc
pop
jmp
cmp
ret
and
call
fwait
adc
aaa
sbb
or
mov
rorl
cltd
icebp
aas
sbb
inc
outsb
push
dec
lea
pop
xchg
adcb
out
sub
test
movsb
cmpsb
jne
mov
outsb
xchg
bnd
push
in
inc
stc
xor
push
mov
ret
decl
cld
int
dec
addr16
rclb
xor
roll
mov
das
cld
in
or
or
stc
or
dec
or
fstpt
sti
or
inc
or
cmc
jbe
sub
add
or
mov
pusha
daa
in
aaa
pop
out
xor
adc
outsl
fwait
lds
adc
push
daa
fisubrs
pop
clc
insb
push
in
sub
mov
cs
push
pop
push
add
pushl
mov
xchg
popa
jmp
dec
das
xchg
mov
cli
addr16
arpl
xchg
outsl
in
repz
rorl
mov
sbb
jns
jno
sub
test
sarl
aaa
sahf
jg
sbb
fs
mov
mov
loope
push
mov
jb
pop
popa
mov
add
lahf
jge
pop
jmp
mov
or
xchg
fists
jg
test
cmpl
test
push
sub
sbb
lret
insl
ja
fs
add
push
cltd
outsb
shlb
push
ret
add
sti
cmp
test
in
lods
fcmovne
sbb
or
jg
cmpsb
stc
idivb
mov
in
incb
or
int3
loopne
add
cwtl
mov
xor
into
loope
je
rorl
mov
dec
fidivs
mov
jno
inc
fnstenv
jmp
adc
mov
popa
loope
sbb
shl
push
jne
int3
and
loope
arpl
add
in
push
loope
or
sti
xor
outsl
mov
in
add
lcall
sbb
mov
add
sahf
jl
andb
fsts
sbb
push
lds
jmp
push
push
dec
cmpsl
and
sub
push
sub
mov
or
out
xor
insl
fcmovnb
push
jno
push
xchg
dec
ja
mov
loope
sub
cld
pop
pop
and
scas
loopne
pop
addb
mov
jae
push
gs
lcall
mov
dec
adc
ret
addr16
in
mov
mov
push
and
jle
or
cld
mov
mov
test
out
cmpsl
arpl
and
popf
aad
dec
push
jge
in
xchg
dec
fistps
inc
push
orl
xchg
xchg
addl
xchg
cmpsl
or
and
loope
pop
pop
jle
imul
loope
inc
std
negl
ljmp
pop
dec
xchg
mov
insl
add
xlat
xchg
add
sub
lock
clc
sub
movl
mov
inc
in
pushf
push
pop
pop
xchg
cld
fucomip
inc
xor
mov
add
jmp
or
mov
jb
jg
out
dec
cmp
cld
in
jg
arpl
pop
push
fistpll
sbb
xorl
in
fistpll
sti
cmp
xor
jl
pop
outsb
mov
insl
or
push
loopne
das
fmull
inc
in
inc
jnp
jno
jge
aaa
pop
ja
xor
orl
jg,pn
cli
je
jmp
add
pop
in
xor
push
outsl
lret
rorb
stc
sar
xor
pop
lods
mov
mov
add
pop
orl
incl
repz
mov
hlt
shlb
sbbl
cmc
mov
test
adc
mov
loope
pop
jp
outsb
cmp
sbb
rclb
call
jle
jno
or
jns
bound
cltd
addr16
jl
or
inc
mov
add
sbb
dec
popa
fadds
stc
and
sub
test
aas
arpl
gs
add
xchg
xlat
or
ficompl
adc
int
daa
popf
jno
insl
mov
imulb
push
out
lods
dec
inc
es
fs
pop
mov
iret
js
insb
fwait
gs
mov
mov
test
pand
test
call
in
outsb
push
aad
sbb
or
int
out
xchg
mov
out
test
rcrl
and
out
fbld
sti
test
mov
push
xor
or
jle
sub
xor
mov
mov
push
js
idiv
jge
sti
stc
popf
bound
cltd
lock
fucomip
cmc
popa
add
mov
mov
inc
bnd
cmp
or
cmpl
push
push
hlt
data16
xor
ret
mov
testb
shll
mov
jge
test
jne
ja
lock
jge
mov
mov
lock
lock
in
pop
outsl
leave
xor
test
xor
and
dec
xor
inc
or
aaa
sub
in
int
dec
imul
dec
push
mov
jb
xor
out
push
xchg
imul
inc
psraw
add
jae
mov
idiv
ja
add
outsb
mov
popa
or
xor
inc
inc
out
insb
dec
jae
pop
out
imul
leave
mov
xchg
das
cmc
iret
loope
push
mov
call
loope
pop
addr16
xchg
nop
imul
incl
aaa
clc
aaa
mov
sub
pusha
rcr
lcall
dec
dec
xchg
mov
jl
or
mov
fildl
xchg
jmp
ds
push
outsb
jo
mov
sbb
fdivrl
test
pop
add
in
sub
pop
mov
pop
inc
in
inc
or
cld
mov
in
xor
and
push
push
hlt
clc
adc
add
aaa
icebp
pusha
xchg
dec
sarl
push
push
bound
xchg
addr16
push
negl
data16
rorb
jge
pop
adc
arpl
xorb
sar
jb
add
ds
mov
clc
outsl
fiaddl
dec
orb
xchg
out
cmp
inc
add
mov
mov
fcmovne
push
fnstenv
cmp
jg
outsl
inc
add
addb
test
mov
pop
xlat
inc
xchg
dec
pop
jmp
dec
jg
ss
add
add
mov
cld
stc
out
insb
cli
add
decl
enter
outsl
ss
icebp
icebp
push
xchg
xchg
loop
sbb
xor
mov
sbb
pushl
sub
and
add
add
mov
das
mov
mov
in
jle
ret
fucomp
push
lock
pop
test
insb
or
pop
in
sub
idivl
jl
push
push
pop
pop
pop
sarl
or
dec
data16
test
mov
mov
test
sbb
jge
lea
pop
popa
add
lretw
sbbl
add
rorl
in
add
ss
cs
imul
loopne
pop
cmp
add
jb
in
or
mov
ja
or
dec
mov
mov
pop
or
sub
loop
inc
mov
xor
adc
ret
xchg
push
push
jno,pn
dec
or
lahf
jge
fcmove
mov
mov
xchg
and
mov
sti
in
cli
lds
pop
arpl
jg
xor
out
out
and
or
das
jl
lock
push
lds
test
sbb
dec
sti
out
add
sbb
jp
test
ret
cmp
imull
pop
sar
jae
xchg
adc
fmuls
ja
out
cmp
jg
add
push
dec
aaa
repz
iret
arpl
mov
hlt
sbb
sub
dec
xchg
and
ljmp
sub
xor
jo
mov
xchg
cltd
or
sbb
dec
and
xchg
xor
insl
imul
jnp
ret
jno
or
pop
sti
pop
imul
jno
fistps
incl
ret
dec
adc
call
pop
mov
add
push
loopne
mov
mov
jae
addl
sbb
cmp
sar
mov
mov
dec
sar
insb
pop
out
icebp
or
dec
int
mov
shrl
add
or
adc
or
stc
push
in
dec
pop
pop
push
mov
xchg
outsl
cmp
mov
push
sub
std
das
inc
dec
out
js
insl
push
dec
fldenv
std
sbb
jo
adc
sbb
adc
addb
dec
cmpl
sbb
push
xor
std
mov
sbb
iret
sbb
lea
scas
push
int
xchg
jo
mov
sti
xor
jg
mov
lea
dec
std
xor
push
jg
adc
or
jb
mov
data16
pusha
gs
jae
sbb
dec
dec
mov
icebp
mov
inc
xchg
or
mov
out
pop
mov
or
dec
push
decb
sarb
in
or
sbb
dec
std
jno
or
subl
fildll
push
mov
adc
aad
insl
cmc
pop
push
mov
dec
jne
and
cs
dec
or
pop
xchg
loope
test
test
pop
in
call
jb
lret
adc
iret
pop
jl
fsubl
mov
mov
dec
fsin
mov
cli
cmp
aam
fs
cmp
xor
sti
mov
gs
dec
popa
nop
arpl
mov
pop
fdivs
jae
or
dec
pop
mov
fistpl
xchg
cmp
ret
mov
xchg
clc
xor
shlb
arpl
mov
xchg
stc
dec
arpl
push
lahf
fistpll
push
leave
xchg
aas
or
push
in
add
add
jno
adc
dec
dec
pop
fwait
pop
sbb
andb
dec
adc
aam
pop
xor
add
int3
mov
cli
lret
or
rorb
xor
xlat
rcr
sar
les
cmp
sbb
popa
add
outsb
xchg
lods
fistl
stos
and
fnstsw
adc
sbb
stos
movsl
add
popa
pop
rcrl
ja
add
pop
fistl
test
fsubr
je
push
push
aas
sbb
xlat
push
outsb
call
add
call
stc
iret
mov
arpl
int
mov
sub
cli
stos
imul
sbb
in
ss
fdivs
mov
fcmovnb
dec
retw
mov
cmp
xor
jo
and
xor
rep
add
arpl
push
pop
addr16
push
dec
incl
xacquire
daa
mov
adcl
cmp
insb
decl
movsl
adc
or
dec
add
roll
mov
in
xchg
fstpt
jae
inc
cs
insb
xor
dec
ret
fsubrs
and
add
fnstsw
or
sub
jo
xor
outsb
push
shll
insl
dec
loopne
add
jl
cltd
sti
inc
add
dec
inc
cli
call
aaa
in
in
add
add
sub
test
pop
dec
mov
or
cmpl
jecxz
insl
mov
fldcw
in
push
xor
add
push
imul
push
jp
add
push
or
inc
or
mov
lcall
dec
insb
bound
inc
cli
adc
sub
cmp
mov
push
test
call
je
mov
push
test
or
lock
mov
mov
idivl
cmpl
jge
mov
add
aaa
dec
movsb
sbb
pop
add
jmp
in
lds
push
push
adc
fdivrl
pop
fdivrs
addb
ret
ljmp
cltd
pop
and
fmuls
mov
push
fcomip
jns
stos
int
sbb
push
cmp
jb
jg
push
mov
stc
ret
insb
fisttpl
cmp
add
inc
jo
pop
mov
mov
mov
pop
sbbb
xor
dec
outsl
sar
jmp
xchg
test
mov
or
outsl
std
sbb
aaa
in
cmpb
outsb
mov
loop
ret
clc
test
cmp
insl
push
push
xor
lret
ret
sub
orl
push
pop
cmp
shll
stc
clc
xor
jo
orb
add
cli
aaa
pop
test
xor
in
inc
sti
mov
xchg
push
insl
fildl
mov
mov
out
mov
xor
xor
pop
xchg
add
cmp
stc
iret
sbb
mov
or
xor
adc
dec
sbb
mov
out
test
push
in
addl
sti
cmp
pop
insl
add
add
sub
loop,pn
mov
or
cmp
jae
mov
hlt
and
add
add
dec
adc
loop
or
xor
jo
flds
jmp
adc
dec
jbe
insb
and
or
push
clc
push
ja
xor
adc
stos
inc
sti
xor
xor
call
mov
incl
jno
dec
add
mov
std
aaa
insb
add
xor
mov
adc
xor
and
test
aaa
sub
jnp
cld
jb
mov
mov
xchg
ds
adcb
jg
loope
cld
das
sub
popf
aas
push
cmp
outsb
inc
mov
mov
loopne
or
mov
sbb
insb
sbb
mov
jp
adc
add
adc
adc
inc
mov
sbb
movsb
out
jle
pop
sub
inc
push
test
mov
sbb
adc
jl
fidivs
leave
in
xor
test
push
pop
jecxz
adc
mov
mov
sbbl
in
xchg
addl
xchg
fcomps
in
popa
lret
lret
test
pop
mov
sbb
jmp
std
add
je
divb
out
cli
test
adcb
inc
loopne
in
das
mov
mov
inc
or
ret
call
jns
pop
out
add
pop
mov
sbb
in
xlat
jle
roll
loopne
flds
loop
fcmovnu
xor
xor
fists
shrb
in
arpl
mov
sub
mov
jne
lds
test
adcb
ss
insl
or
sbb
xlat
test
scas
xchg
cltd
loope
push
fadd
lods
mov
push
or
call
roll
insb
and
rcrb
in
cmp
subl
imul
out
addl
or
lock
add
mov
sbb
pop
out
push
sbb
push
in
xor
ucomiss
stc
or
std
sahf
loopne
xor
push
pop
xchg
and
pop
add
leave
inc
cli
jae
cmp
cmp
jo
cli
mov
and
xor
jne
pop
and
push
xor
jne
jge
inc
cld
xor
fstpl
sbb
lods
jno
jb
push
ljmp
or
jecxz
sub
jl
xor
cmp
cmc
cmp
subb
mov
pop
popf
lods
rcll
or
idiv
lock
addr16
push
test
push
adc
or
cli
shrb
cmp
dec
test
imul
inc
mov
cmp
jns
clc
out
inc
lret
inc
cmp
pop
adc
in
jo
lea
call
mov
mov
push
call
loope
cld
iret
ret
sarb
dec
jp
insb
arpl
in
ljmp
call
sub
test
arpl
add
sbb
jne
cmc
rcrl
or
push
or
xlat
mov
mov
cmp
jae
mov
adc
out
test
cmp
lock
xor
pop
xchg
sub
cmpl
fisubrl
arpl
inc
inc
arpl
or
lock
and
xor
mov
sbb
pop
or
jb
push
mov
add
loope
pop
pop
cmp
sub
xor
jae
incb
inc
xchg
inc
add
dec
add
lods
sub
scas
cmp
je
push
pop
mov
pop
orb
mov
subl
das
xor
mov
jno
xor
jno
sub
add
in
dec
std
pop
cmp
add
inc
xchg
dec
add
in
insl
sti
mov
decb
sbb
insl
cld
jne
or
movsl
cmp
push
ret
mov
jmp
add
aad
or
je
jmp
outsl
loopne
mov
outsb
fisubl
out
push
mov
or
cld
and
jno
setle
out
lret
adc
in
fstps
in
fcomp
mov
or
shlb
jns
xlat
dec
in
imul
push
shll
outsl
icebp
notb
push
cli
jecxz
jnp
and
push
push
jae
stc
shlb
xor
std
imulb
clc
shll
stc
enter
clc
jae
mull
xchg
lods
adc
adc
push
dec
push
outsb
movsl
pushw
in
loope
pop
fidivl
jb
adc
inc
jg
or
movsl
cmp
push
add
ljmp
dec
dec
movsb
mov
cli
jae
subl
std
lahf
popa
or
cmp
xor
clc
out
outsl
jg
int3
or
xor
js
fucomip
fucomip
in
jg
sti
jle
notl
or
mov
pushf
mov
cli
and
xorb
adc
mov
andl
mov
mov
mov
movsb
inc
stos
ja
mov
xchg
lods
mov
jb
mov
xchg
push
mov
ds
and
adc
rolb
bound
or
movsl
data16
xor
daa
dec
push
in
sti
test
jmp
mov
mov
or
call
test
and
xchg
cld
xor
jno
sub
push
fstpt
push
sbbl
xor
clc
aaa
or
cmc
xor
push
inc
cmpb
mov
in
lock
sbb
jno
arpl
roll
ret
data16
test
pop
dec
dec
dec
pop
leave
push
push
addr16
pushl
cmp
cmp
into
pusha
xor
std
das
mov
test
dec
icebp
adc
cld
call
or
bound
jg
xor
pop
lds
cmp
pop
rolb
push
lcall
jns
les
das
adc
imul
aad
fisttpl
cmpsb
je
ljmp
push
js
clc
xchg
mov
aam
bound
jnp
jge
popa
test
mov
xchg
sub
int
dec
outsl
mov
imul
enter
loope
xor
pop
test
adc
mov
adc
jl
pop
mov
fnstenv
aaa
xchg
inc
std
jg
cli
add
insl
dec
mov
xchg
test
aam
addl
mov
test
cmp
xor
outsb
in
dec
sbb
sti
dec
loop
pusha
fdivrs
cltd
xlat
cld
incl
in
xor
fistps
ffree
jmp
cli
outsl
aam
mov
push
dec
mov
mov
ljmp
inc
out
in
ja
clc
pop
fildll
adcl
jmp
jns
je
mov
daa
mov
push
movsb
xchg
pop
sub
bound
or
addb
xchg
dec
pop
mov
sub
sbb
arpl
mov
mov
fcomip
movsl
xor
mov
pop
fildll
in
das
pop
mov
or
das
imul
mov
mov
in
pop
xchg
xchg
pop
lds
mov
rorl
or
push
dec
insl
pop
sbb
fmuls
hlt
das
loope
sbb
xor
inc
add
icebp
push
cmp
insl
cli
fistl
cmc
loopne
das
xchg
xor
sbb
subl
lret
add
push
cmp
cmp
cli
inc
mov
rorb
mov
mov
pop
jo
fistpll
mov
jmp
pop
and
arpl
inc
outsl
fwait
orb
testl
mov
inc
addr16
adc
lods
aad
push
or
xchg
adcb
mov
push
jg
cwtl
sti
inc
push
jne
test
and
pop
aaa
xchg
cld
imul
sub
pop
dec
in
cli
loopne
subl
adc
mov
jg
aas
lds
mov
pop
call
divl
cwtl
add
push
fs
outsb
cld
fstl
cmp
jmp
enter
lds
aam
inc
dec
loope
sbb
fistpll
and
leave
dec
aad
pop
cld
fldt
std
movsb
test
push
jnp
pusha
push
push
hlt
arpl
in
add
arpl
fcoms
test
pop
pop
fsubl
add
mov
push
loopne
stc
mov
add
outsb
scas
mov
mov
sti
cmp
sti
inc
lock
jl
dec
and
popa
imul
pop
outsb
mov
xorl
in
xchg
mov
iret
jl
adc
mov
sbb
shl
imul
mov
not
sbb
fldt
pusha
inc
xchg
xor
sti
mov
cmp
lods
inc
testl
inc
sub
add
jno
outsl
cmp
adc
pop
cmp
shll
fwait
ds
or
sarb
inc
mov
dec
in
sub
lock
mov
mov
mov
push
mov
jp
push
dec
leave
out
ljmp
mov
mov
bound
pop
testl
add
mov
sbb
adc
cs
pop
hlt
popf
jmp
repz
cld
jg
lods
cmp
add
or
mov
cld
pop
cmc
das
rcrb
aam
mov
lret
roll
or
mov
sbb
call
pop
ljmp
bound
mov
incl
pop
jnp
mov
rol
vpaddw
mov
add
add
cmp
mov
imul
fsubrs
outsb
jb
insb
xor
loope
cmpl
sub
fildll
aaa
add
dec
xor
jmp
sub
adc
test
push
inc
fidivrs
jl
add
jle
jg
cmp
or
sbbl
inc
push
xchg
mov
icebp
sbb
mov
imul
jbe
mov
pop
cs
lock
push
push
mov
pop
mov
push
push
xchg
push
sbb
lahf
clc
scas
popa
dec
pop
pop
ret
add
mov
xorb
orb
ror
mov
pop
sub
sub
xor
jge
adc
mov
push
pop
push
roll
push
repnz
add
mov
mov
rcll
push
or
cmp
int
pop
push
ja
clc
inc
add
in
and
dec
add
nop
data16
xor
jo
pop
pop
adc
push
fs
adc
es
sbb
mov
inc
sahf
cld
popa
insl
mov
jp
mov
sarl
insl
add
cmpb
cmp
les
xlat
pop
dec
adc
movsl
scas
sub
jno
mov
shlb
mov
add
sub
pop
or
and
push
loope
or
dec
aaa
stc
sahf
jecxz
fisttpll
test
jns
jg
aaa
iret
mov
pop
add
jnp
test
mov
adc
decl
ret
push
inc
mov
out
xor
testl
frstor
lods
fs
jne
or
js
and
xor
mov
lcall
ja
push
sub
mov
or
loope
or
sub
and
outsb
cmpsl
add
out
mov
in
fisttps
test
pop
sbb
gs
fldl
fs
sbb
in
movsl
push
cmp
cmp
cld
push
lea
push
cwtl
add
dec
lock
popa
dec
xor
mov
jl
cmc
call
cli
mulb
inc
sbb
jg
pop
pop
jne
scas
push
ficoms
cmpb
dec
cltd
cmp
pop
pop
stc
jno
sbbb
popa
mov
jo
inc
mov
stos
outsb
xor
push
pop
daa
mov
xor
fstpl
mov
and
insl
inc
jge
stos
movsl
aad
jecxz
lahf
push
cwtl
testl
sub
push
mov
cmp
jo
mov
mov
push
push
ret
xor
insl
jecxz
iret
rclb
dec
insw
sub
ss
mov
xchg
ret
rcrb
icebp
mov
test
dec
in
and
sub
lahf
test
sar
insb
aad
mov
add
test
and
jb
dec
loope
outsb
aaa
pop
andb
mov
add
sub
clc
outsb
orl
ret
jmp
fisttpl
incb
and
mov
jo
cmp
das
jbe
mov
mov
notl
addl
mov
pop
jns
push
fldcw
and
or
jns
popf
fldcw
mov
notl
push
ret
incl
mov
mov
cltd
push
jo
enter
lahf
fsubs
adc
arpl
pop
out
andl
fstl
xlat
std
popa
sbb
incl
mov
jno
cwtl
ret
aad
outsb
aaa
dec
or
or
push
add
ja
aaa
ret
cmp
loop
jge
addr16
dec
addr16
pusha
test
pop
pop
popf
mov
or
sbbb
ret
mov
add
rcll
mov
loope
inc
mov
jno
sbb
adc
push
mov
loope
push
add
dec
arpl
outsb
lds
shrl
sub
or
outsl
pop
js
in
testl
out
cltd
mov
icebp
push
test
jg
popf
sbb
fsts
push
loop
test
in
and
and
repz
pop
jb
jo
mov
lds
lock
pop
push
rorl
push
xchg
sti
xor
sarl
jmp
push
push
test
mov
in
jmp
xor
das
mov
loope
adc
lahf
jmp
pop
rorb
std
inc
add
dec
lods
sub
test
outsb
cld
fucomip
sub
jle
jno
or
repnz
lret
mulb
daa
in
vhaddpd
shlb
cmp
lds
iret
in
lea
shrb
divb
fstpl
or
pop
fdivs
or
sti
cmpl
data16
and
shlb
xor
faddl
outsl
xor
push
out
push
push
cmp
mov
addr16
fldt
cmp
jmp
sbb
and
xor
test
out
movd
mov
mov
jmp
call
rclb
cmpb
insl
sub
lds
enter
xchg
daa
push
scas
cmp
xchg
test
test
fsts
fs
cmc
loope
out
loope
loope
test
test
mov
mov
jne
sub
fsubrs
adc
fists
mov
mov
rorb
mov
hlt
pop
sub
xor
add
stos
jns
dec
imul
mov
sub
in
fisttpl
addl
test
cli
push
cs
mov
test
adc
mov
jne
stc
pop
and
lahf
push
pop
jmp
fdiv
mov
std
and
sti
movsl
or
dec
mov
popa
mov
mov
in
mov
das
pusha
inc
aaa
ss
stos
daa
idivb
fs
fwait
cs
movsb
push
sub
insb
inc
xor
dec
sbb
ja
rcll
lock
std
mov
in
ljmp
push
in
es
and
xor
fst
enter
cld
add
insl
sbb
add
adc
icebp
test
inc
and
out
pop
int
stos
sbb
cmp
inc
adc
inc
and
aaa
clc
pop
das
dec
sub
xor
jb
push
push
sbb
xor
pop
cmpsb
aaa
test
inc
aaa
mov
pop
subl
inc
lock
xchg
inc
dec
or
ljmp
pop
addr16
lahf
or
mov
push
lcall
pop
in
jmp
sbb
sbb
popf
cmc
cltd
pop
push
ficomps
or
mov
test
add
mov
cmp
mov
xchg
imulb
pop
push
lock
arpl
mov
cli
jg
mov
test
imul
popw
repz
aas
sbb
dec
jo
jo
daa
movsl
pop
sbb
bound
dec
mov
clc
or
insl
xor
mov
imul
pop
sbb
ljmp
mov
fs
or
add
jg
adc
mov
repnz
cs
ss
inc
fsubr
mov
pop
add
rcrl
popfw
js
insl
ss
ljmp
push
xor
je
dec
pop
dec
or
add
popa
test
stc
lods
xchg
mov
jnp
out
jnp
jo
jno
mov
inc
ret
or
inc
or
ss
sahf
or
or
lret
push
fwait
sti
cmp
clc
sub
xchg
and
jo
add
aad
push
in
hlt
mov
jns
add
sub
call
add
xbegin
push
pop
pop
lcall
sbb
xchg
inc
xchg
xor
into
inc
movsb
mov
adc
cmc
mov
mov
fstpl
add
pushf
test
mov
mov
repz
dec
mov
and
mov
out
cltd
and
mov
mov
cs
cmp
pop
cld
fldl
push
cmc
fs
cmp
push
cld
add
push
loopne
and
jo
cs
xchg
fwait
mov
cmp
lods
dec
in
dec
mov
dec
clc
mov
sbb
cs
xor
cmp
shrl
xor
jecxz
jl
add
inc
pop
cltd
add
lret
pop
dec
shll
aam
push
sbb
mov
test
lods
jge
sub
jns
in
sbb
sub
jne
loop
lds
inc
data16
push
outsl
repnz
ret
jp
jge
dec
cmc
test
jl
ret
jmp
sbb
mov
or
arpl
cmc
pop
mov
mov
jns
mov
stc
cmp
sahf
xor
jle
cld
push
cmp
lret
jge
jns
xorl
cmc
roll
lock
push
inc
xchg
hlt
push
sbb
ja
or
mov
test
cld
outsl
mov
mov
aaa
mov
add
push
xchg
mov
out
inc
ja
imul
outsl
adc
das
pop
test
push
or
adcb
lods
or
bound
jo
repz
scas
pop
int3
adc
pusha
or
push
add
sbb
cmp
testb
movsl
sbb
rolb
xor
inc
jl
aad
mov
adc
test
std
stos
sbb
insb
cmp
or
sti
add
cmp
xor
iret
enter
mov
int3
push
das
sub
fisttps
movsl
cld
pop
or
leave
rcr
xchg
xor
fistl
outsl
mov
divl
add
test
mov
or
out
inc
jno
pusha
mov
adc
xchg
pusha
jno
sahf
xor
sahf
push
sub
xchg
gs
shl
sub
jg
pop
fldl
pop
cld
inc
cmc
dec
popa
pop
xchg
dec
xchg
mov
jno
xchg
out
sbb
adc
mov
pusha
mov
test
cmc
or
clc
xchg
sub
jmp
testb
or
cmp
mov
das
roll
jecxz
and
stc
add
add
push
icebp
jne
mov
mov
xor
nop
and
pop
movsl
dec
cmpl
js
sahf
out
jns
das
movzwl
jno
icebp
or
dec
mov
dec
mov
scas
jecxz
scas
dec
mov
repnz
pop
lea
in
imul
out
hlt
pop
aaa
or
adc
repz
cmc
test
mov
cld
cmp
js
in
adcb
mov
loope
ret
or
inc
clc
jne
jbe
jmp
icebp
call
push
adc
mov
jmp
or
arpl
divl
mov
push
sub
ret
xor
mov
pop
fyl2x
scas
pop
mov
dec
inc
insl
adc
inc
mov
lcall
outsb
jo
subb
lods
jl
sub
add
ficoms
push
filds
repz
xchg
repz
push
dec
push
testb
loope
icebp
repz
daa
jb
mov
in
push
test
mov
sbb
stc
cmp
idiv
das
sub
pop
aaa
cmp
clc
add
jb
mov
jmp
clc
mov
sbb
cmp
std
add
add
out
xlat
pop
xor
loope
mov
sbb
arpl
add
aaa
jne
or
xor
mov
test
int
ljmp
pop
add
orb
sti
mov
aas
push
add
mov
dec
jmp
lods
loop
iret
inc
cltd
pop
dec
sahf
lret
incb
xlat
pop
mov
cmc
mov
jecxz
les
cmc
out
pop
cli
vpshufhw
sti
repz
cli
inc
outsl
adc
pop
or
pop
test
lds
jo
pop
cmp
lret
paddd
mov
dec
push
data16
leave
pop
sub
cli
jg
pop
aaa
rclb
xchg
stc
jns
cwtl
jns
xchg
in
adc
sub
in
and
daa
inc
cmpsb
mov
cmpsl
pusha
orl
mov
out
jb
cmp
lock
jecxz
sbbb
mov
repz
iret
dec
push
in
or
divb
xor
jno
in
loopne
jge
hlt
sti
adc
test
jae
dec
cmc
cmc
dec
das
sbb
sub
sbb
add
cmp
and
dec
xchg
dec
mov
dec
mov
xor
in
add
and
and
in
mov
aad
xchg
mov
in
mov
in
mov
in
mov
jb
push
jb
sbb
test
mov
mov
in
repz
inc
ja
lahf
or
scas
test
sti
rcr
adc
inc
xchg
lock
pop
xchg
mov
cmp
rolb
stos
inc
adc
fisttpll
sbb
insl
and
xchg
mov
pop
and
dec
mov
push
sbb
call
orl
jp
ss
sbbb
jo
sarl
rol
pop
mov
mov
rorb
mov
mov
mov
xchg
mov
ret
minps
test
push
sub
fs
pop
lea
aaa
daa
shl
dec
push
pop
dec
iret
xchg
gs
outsl
add
sub
push
mov
push
xchg
push
das
movb
jle
mov
vpcmpeqb
das
sti
test
or
cmp
cli
xchg
clc
lods
mov
push
scas
inc
adcl
subb
incb
ljmp
xor
adc
addb
add
add
cmpsl
jg
clc
mov
push
push
sub
xor
add
push
cli
mov
mov
mov
add
push
xchg
sti
or
lods
std
incl
or
leave
adcb
or
inc
xchg
adc
cmp
jns
push
mov
push
mov
lods
add
sahf
fisttpl
sbb
push
jge
rcrb
outsl
xor
hlt
lock
loopne
sbb
outsl
inc
cmpsl
adc
cmp
mov
cmc
divb
jae
sbb
clc
push
mov
and
adc
shrl
adcb
xor
pop
and
icebp
inc
cmp
insl
es
aam
xor
or
inc
stos
dec
adc
std
iret
addr16
fnstsw
das
jne
add
cmp
xor
xchg
add
fdivrs
cmp
xchg
in
xchg
add
sub
iret
sub
inc
push
nop
dec
inc
mov
xor
mov
loopne
mov
dec
adc
jle
scas
jmp
fsubrs
add
lods
mov
test
repz
push
out
xor
sbb
xor
frstor
jns
ljmp
popf
sub
pop
mov
mov
fwait
add
sti
dec
callw
push
jmp
loopne
xor
adc
leave
popa
adc
mov
jp
loopne
decw
lahf
idiv
clc
or
push
dec
mov
cld
lds
push
gs
addr16
enter
jmp
or
inc
idivb
cvtdq2ps
and
adc
addr16
test
in
jns
fwait
add
push
adc
or
or
mov
push
pusha
int
testl
insb
enter
adc
sbb
xchg
xchg
pushf
aaa
cli
loope
in
leave
xchg
push
sbb
clc
pusha
outsl
cs
push
mov
out
push
loopne
adc
les
inc
xor
cmpl
pop
imul
dec
add
shll
sub
dec
out
mov
pop
jns
lcall
sbbb
inc
out
ja
lahf
fmull
xor
lods
jae
inc
sbb
dec
arpl
inc
mov
jno
adc
sti
pop
incl
pop
ja
rolb
pop
cli
cmpb
aaa
andb
xor
or
or
pop
mov
cld
cld
data16
dec
shll
add
adc
xchg
or
jge
dec
in
adc
mov
aad
mov
push
sbb
mov
mov
rorb
int
dec
es
mov
sbb
out
push
std
jne
mov
fwait
pusha
enter
lods
sub
aad
mov
ljmp
addl
xchg
das
mov
xor
test
jne
or
push
in
imul
ljmp
cmpsl
push
jl
adc
or
pop
jb
icebp
out
repnz
dec
jb
inc
cld
divl
addb
ljmp
adc
inc
sti
dec
subl
std
jno
lea
push
cli
jnp
aaa
pop
add
mov
idivl
and
dec
test
test
mov
out
loope
insl
add
test
cmp
jbe
jne
lods
daa
inc
sbb
addr16
jg
add
in
adc
push
test
fsub
in
adc
jno
aad
clc
orb
jle
pop
aaa
inc
jnp
cmp
stos
div
mulb
jns
xchg
adc
inc
sahf
sti
add
inc
xchg
and
jno
adc
add
call
mov
lds
andl
icebp
push
lock
xor
ja
mov
fabs
or
pop
insl
jl
or
push
aaa
mov
jl
xchg
push
add
or
loopne
fists
inc
shlb
cmp
bound
iret
or
jp
sbb
insb
push
test
inc
cmp
inc
mov
or
outsl
mov
add
addr16
inc
pop
pushl
int
push
sub
mov
dec
push
lock
dec
addr16
jo,pn
dec
out
aad
int
or
icebp
insl
adc
push
in
gs
std
xchg
cmpsl
mov
in
pop
sbb
push
dec
addr16
rcrb
push
jge
sub
cmp
mov
mov
cld
int3
pop
dec
std
fsubrl
loope
pop
dec
popa
fiaddl
sub
pop
push
shlb
add
mov
pop
mov
inc
adc
inc
jo
cmp
and
jno
xchg
fldl
cwtl
dec
fistl
rolb
repz
xor
or
push
rclb
imul
in
push
sub
sbb
ja
stc
movsl
mov
or
adc
in
or
sbbl
push
mov
or
aad
out
subps
repnz
dec
imul
dec
sub
pusha
jns
imul
push
dec
out
or
jle
popa
cli
push
clc
dec
or
dec
push
mov
sbbb
inc
fldt
aam
pop
xorb
dec
adc
daa
xor
push
dec
jmp
mull
and
or
call
in
mov
out
gs
push
stc
rcrb
jno
sub
or
push
loopne
or
inc
in
and
fwait
cmp
mov
add
mov
sub
mov
lods
mov
ds
ljmp
roll
dec
or
xorl
pop
leave
mov
xchg
cltd
push
jge
int
mov
popf
popa
aas
xchg
dec
adc
mov
aaa
mov
cmp
adcb
push
mov
push
dec
sbb
cld
outsl
xor
aas
mov
mov
ljmp
jae
pop
scas
add
sbb
aam
aaa
jmp
inc
add
cs
cmpsb
aas
dec
or
add
incb
or
xchg
inc
dec
daa
sub
sbb
cmc
sub
push
bound
rorb
pop
push
lret
dec
dec
xchg
add
std
or
sub
in
add
xchg
sub
pop
hlt
shll
dec
dec
mov
sbb
xchg
adc
repnz
popa
imul
dec
inc
rcl
xchg
inc
adc
rorb
test
shrb
mov
call
lret
rcll
push
loope
push
stc
lods
loope
or
mov
add
add
cld
ss
mov
or
sbb
lret
sub
std
jecxz
mov
popa
stos
and
mov
fcmovnb
cmp
adc
dec
icebp
adcl
loope
or
pop
movsl
pushl
xchg
sbb
ds
cmp
subb
mov
mov
push
cs
das
adc
in
pop
mov
mov
pop
or
leave
push
popf
lock
fidivl
bound
pop
sti
inc
push
jp
push
outsl
out
push
std
popa
loope
aad
fyl2xp1
aas
or
xchg
jb
add
stos
jle
or
add
fcomi
adc
push
and
icebp
inc
adc
or
jmp
mov
pop
xchg
in
lods
push
or
std
mov
mov
dec
aad
pop
add
sar
mov
jns
cli
xabort
in
add
outsl
mov
mov
cmc
jno
mov
test
and
daa
repz
aas
push
mov
out
xor
inc
sbb
mov
mov
aam
sbb
popa
adc
lods
test
call
jmp
add
fcmovnb
xchg
cmpsb
jno
gs
mov
push
pop
mov
jb
enter
faddl
icebp
incb
insl
xor
imulb
aaa
mov
ret
jg
data16
mov
mov
pop
pop
cmpsb
add
push
or
inc
sub
mov
aaa
es
xchg
inc
or
in
cmc
arpl
xor
inc
rcrl
lcall
iret
xchg
jns
in
push
add
leave
mov
pop
push
jmp
xchg
xor
pop
in
pop
ror
lea
xor
fs
push
lea
mov
jb
pusha
in
inc
jmp
adc
pop
int3
insl
jmp
rcrl
imul
testb
aam
jae
daa
pop
and
mov
add
aaa
pop
es
pop
jmp
insl
xchg
or
in
popa
or
in
pop
mov
sar
mov
jb
pushw
xor
out
and
movsb
add
fs
adc
fstpl
aas
lret
out
add
push
out
add
rcrl
add
lods
ds
ss
jno
mov
in
std
fs
jg
dec
mov
repnz
push
pop
and
rcrb
sub
out
aas
mov
fmull
push
and
add
out
fistps
es
add
adc
push
xor
cli
arpl
xor
pop
repnz
or
mov
insb
mov
imul
cld
out
and
iret
jecxz
or
mov
loopne
in
add
push
mov
fldcw
fs
loopne
push
out
and
sar
xor
sbb
add
pushf
add
pop
sbb
adc
mov
jl
push
mov
cli
or
push
inc
cmp
lds
int
leave
clc
aas
pop
add
loope
incb
or
pop
jae
outsl
outsb
and
out
cmc
push
or
add
add
push
xor
popa
xlat
jmp
data16
ret
pop
cmc
aas
inc
jecxz
out
add
and
lret
shl
pop
and
insl
insb
cmp
test
add
fs
jo
push
add
in
cli
pop
pop
xchg
imul
rcl
icebp
hlt
repz
into
call
in
or
jecxz
bound
inc
cs
repz
add
cmp
mov
cwtl
js
fistps
inc
insl
mov
js
mov
pop
inc
mov
popa
cli
pop
fs
xchg
addr16
int3
cmp
adcb
and
aad
mov
cmc
es
and
dec
lahf
pop
push
fistl
lods
push
cld
pop
or
and
pusha
jle
jmp
dec
lret
call
cmp
insl
mov
xor
int
fcoms
les
sbb
inc
cs
add
pop
in
bound
jl
lret
cmc
cltd
sti
icebp
js
sbb
loop
xchg
push
mov
lods
jns
jmp
movsb
push
sbb
scas
inc
cmp
lret
jg
mov
es
jmp
cmp
nop
std
daa
cmp
mov
push
sahf
and
xchg
icebp
in
and
jb
popa
aaa
popf
mov
adc
fs
push
enter
ficoml
data16
xlat
or
std
cwtl
or
xor
mov
in
jmp
add
fildll
sbb
push
cmpl
cmpsb
fistpll
jp
insb
popa
add
dec
mov
sbb
xlat
in
cld
add
loopne
clc
popa
jne
cs
std
lahf
insl
mov
push
add
fstpt
and
push
out
arpl
insl
scas
or
dec
sub
icebp
aas
icebp
adc
dec
sub
sub
xor
mov
mov
std
mov
into
sub
ljmp
cmc
pop
nop
int3
xor
sbb
loope
xor
lahf
arpl
jmp
stc
jns
add
push
adc
clc
lea
inc
inc
in
push
pop
push
cli
jg
sbb
pop
mov
hlt
enter
das
mov
stos
pop
add
push
int
dec
sbb
inc
adc
pop
pop
ljmp
outsl
adc
mov
xorb
pop
loope
or
decl
mov
and
xchg
out
iret
sbb
or
sbb
dec
icebp
inc
adc
cmp
addl
rcl
or
add
imul
xor
inc
or
sub
push
and
ljmp
mov
shr
mov
iret
fldl
out
xchg
push
mov
sub
lahf
fcos
lcall
push
add
or
or
sbb
inc
or
add
arpl
incb
and
dec
xchg
fistpll
fists
push
xchg
mov
push
mov
push
les
ss
imul
mov
out
std
adcl
push
sarb
mov
mov
add
lcall
pop
mov
and
into
shr
xor
cmp
clc
notb
imull
jo
daa
ret
leave
push
dec
gs
xchg
add
inc
jge
test
or
lret
xor
incl
mov
inc
pop
mov
shl
test
xchg
loopne
adc
pop
addl
in
jg
pop
dec
cld
inc
cmp
inc
lock
inc
push
mov
clc
imul
cmp
mov
and
iret
les
jae
push
ljmp
and
dec
xchg
inc
mov
test
paddd
push
push
lock
push
inc
jg
aaa
jno
mov
loopne
xchg
aad
test
inc
je
pop
pop
push
or
mov
dec
jnp
pop
push
insl
or
dec
les
stos
dec
push
pop
push
mov
insl
and
push
xor
add
aas
sub
dec
popa
mov
or
incl
jp
or
adc
push
jg
negb
xor
push
or
ja
aad
or
dec
pop
arpl
ja
pop
mov
xor
pop
pop
add
outsb
loop
mov
add
mov
sub
ja
dec
push
xor
dec
xchg
push
mov
sbb
outsl
aad
or
mov
negl
and
inc
inc
mov
pop
pop
sub
loopne
sbb
mov
add
cli
push
xor
xchg
mov
icebp
pushf
movsb
sahf
lea
repz
ljmp
push
insl
sbb
add
leave
in
push
andb
insb
add
xor
and
jecxz,pn
mov
push
jl
pop
sti
clc
cli
push
xchg
int3
sbbb
aad
jo
inc
out
fwait
pop
mov
or
fldenv
push
pop
int
rclb
into
roll
clc
pop
cmp
mov
mov
clc
mov
gs
in
std
dec
or
or
cpuid
jne
dec
lock
pop
jno
insb
adc
sbb
or
fildll
popa
adc
xor
imul
pop
std
in
ret
push
pusha
flds
movsl
sub
add
fldt
push
loopne
push
loope
in
ljmp
xchg
cmp
mov
in
mov
in
lods
jo
ficoms
sbb
pusha
movsl
xchg
mov
dec
andb
sub
pop
dec
icebp
dec
push
in
scas
lret
shl
xchg
shll
jo
lds
std
xor
call
fistpl
jg
pop
cld
xlat
cs
or
fcomip
xchg
sbb
sti
fdivr
sub
xor
fisttpll
jecxz
sti
xor
aas
push
add
int
mov
pop
cwtl
adc
inc
pushf
cli
jp
cmp
pop
mov
pop
cmp
mov
les
cmpsl
pop
push
cmc
mov
mov
xor
stos
mov
fisttpl
push
or
mov
cld
aas
not
repz
movsb
xor
test
push
roll
jmp
or
ret
insl
je
jp
jo
xorl
cmpsl
xchg
mov
cmp
test
cs
mov
jecxz
cmp
test
aas
inc
fisttpll
dec
lods
shll
pop
sbbb
adc
mov
jno
or
inc
pop
jns
in
dec
adc
pop
adc
fwait
imul
add
push
pop
cmp
mov
xor
out
cmp
scas
sub
shl
inc
xchg
in
inc
jae
inc
push
sub
adc
jae
add
inc
jmp
add
out
mov
mov
outsb
das
mov
movsb
pop
xchg
xor
aad
add
pop
push
add
adc
mov
fisttps
adc
and
push
gs
lret
enter
sbb
sbb
std
repz
insl
fsubrl
out
jo
add
push
cmp
push
jo
in
stc
push
insl
push
outsl
inc
outsb
les
cld
inc
icebp
lods
or
dec
dec
imul
out
xchg
mov
ja
cmp
clc
rcrb
insb
call
decl
and
sbb
mov
mov
lds
cld
dec
addb
out
ljmp
call
mov
or
mov
mov
xor
mov
std
stc
adc
mov
frstor
adc
pop
insl
xor
popa
add
js
cli
jg
jno
loope
mov
aam
mov
mov
pop
lock
inc
mov
test
jns
xor
or
mov
sbb
push
movsb
mov
movsl
pop
ret
mov
jo
lahf
mov
decl
popf
in
jg
mull
sbb
or
mov
lods
xor
outsb
pop
mov
out
xchg
mov
xor
outsl
ss
xchg
daa
sub
add
or
loopne
test
mov
jne
xor
fdivr
enter
add
loope
xor
stos
mov
movl
outsl
or
sub
or
rep
sub
call
mov
add
mov
insl
mov
jo
push
pop
int
or
loope
mov
adc
cmpl
xchg
jb
das
push
addb
add
xor
adc
cmc
adcl
add
and
xchg
scas
inc
out
mov
jg
or
jae
lahf
test
insl
push
pop
sbb
inc
add
jo
enter
outsl
outsb
sbb
lret
ret
lret
or
mov
mov
inc
or
test
outsb
decl
jnp
add
stos
scas
ja
insl
jne
repnz
mov
and
inc
test
add
xchg
mov
mov
enter
xchg
loop
push
sbb
xor
ja
fwait
pop
scas
mov
inc
mov
outsl
pop
mov
mov
iret
out
icebp
leave
adc
out
ja
lea
push
out
xor
adc
out
lahf
outsl
repnz
mov
mov
out
xor
arpl
sahf
out
and
out
fidivrl
lods
dec
pusha
push
cwtl
addr16
xor
in
jnp
adc
dec
jns
cs
lret
gs
ja
js
jbe
pop
imul
cs
jne,pt
dec
jbe
je
ja
lcall
lods
mov
shl
cmc
sub
lcall
repz
xchg
lret
in
outsl
je
jne
jae
shll
popa
dec
in
ss
cmp
add
cmp
pop
cs
lret
arpl
add
jl
pop
jae
pushl
jnp
xchg
jp
xchg
lret
in
pop
das
je
adc
jge
jl
jle
mov
fbstp
jl
sarl
mov
daa
sbb
jle
imul
lcall
cmp
scas
imul
pop
adc
cmpsb
inc
inc
cmp
pop
outsb
out
jl
jg
cmp
pop
ja
fwait
in
mov
js
mov
rcl
dec
rcl
loope
daa
or
movsl
or
negb
insb
fcmovnu
icebp
pop
mov
pop
and
or
cmp
jecxz
shll
or
jl
std
cld
sub
fcmovne
xor
xor
ja
fnstsw
jae
mov
cs
pop
aaa
dec
adc
jne
addr16
jnp
pop
cmp
fwait
sub
jecxz
dec
lcall
inc
repnz
cwtl
ficoml
add
jecxz
add
xchg
pop
add
sub
pop
xchg
or
xchg
movsl
and
leave
xorb
fst
add
inc
jmp
pop
std
arpl
enter
jge
add
nop
or
cmp
leave
orb
cmc
mov
add
jno
ss
gs
xor
jb
dec
ja
notl
jo
js
daa
int
int
inc
add
stc
jae
and
or
xchg
jno
gs
in
jnp
popf
jb
rol
int
inc
xchg
outsl
mov
lods
vpcmpgtd
pusha
cmp
jge
inc
jb
add
outsl
cmp
ja
add
imul
pop
outsb
adc
xchg
jns
mov
xor
jmp
jbe
sub
lret
in
je
ja
jo
jne
shll
rcr
mov
ss
cmc
sub
jno
jbe
mov
add
outsl
call
xor
lods
jae
mov
mov
xor
jae
push
cmp
add
jg
bound
jp
mov
push
jl
jne
outsb
int
imul
jp
xchg
jge
out
jns,pn
sub
dec
out
xchg
out
dec
aad
mov
insl
mov
outsb
daa
pop
jle
jl
aas
js
lcall
addl
jmp
jnp
adc
pop
push
dec
inc
mov
jge
dec
jg
jbe
cmp
lret
in
pop
jne
js
jno
lods
ja
lcall
daa
add
inc
adc
jb
add
xlat
je
out
sbb
imul
adc
std
adc
cmpsb
cli
xor
mov
ret
jmp
fwait
cmpsb
imul
incl
pop
xchg
add
jo
dec
imul
dec
outsb
imul
pop
push
jno
push
xor
test
decl
jo
fs
pushw
pop
jo
imul
popa
jo
xor
push
popa
push
dec
pop
jb
cmp
ds
inc
insb
gs
pop
mov
inc
push
pop
fs
pop
push
imul
cld
pop
jno
jae
inc
jbe
pop
cld
stos
std
sbb
dec
push
pop
pop
jg
mov
push
fs
popa
jmp
jno
stc
fbstp
imul
mov
add
outsl
insb
outsb
pop
push
outsb
insl
jnp
arpl
imul
cmp
pop
in
imull
xchg
orl
pop
insb
outsl
add
add
push
incl
pop
pop
inc
gs
outsl
pop
jno
aas
daa
cld
aas
imul
push
popa
std
in
arpl
pop
push
lret
cli
inc
push
das
lcall
dec
insb
imul
jo
lahf
inc
gs
mov
sub
jo
cmp
xchg
mov
sti
popa
pop
push
daa
jae
cmp
es
mov
push
jno
mov
bound
gs
pop
inc
popa
pop
outsl
clc
lock
bound
pusha
mov
xor
popa
mov
lret
mov
jle
inc
imul
pop
das
jg
outsl
dec
bound
test
dec
sbb
bound
jbe
in
or
dec
bound
pop
add
bound
dec
dec
pop
push
gs
pop
imul
or
outsl
data16
inc
outsb
popa
push
fists
sbb
fs
insw
sub
inc
imulb
loope
imul
outsb
jo
inc
popa
mov
inc
test
dec
insl
ret
aaa
insb
cmp
outsb
pop
je
jo
push
std
cmp
jmp
sar
outsl
inc
arpl
dec
dec
inc
dec
sub
daa
bound
jne
loope
xorl
push
pop
ja
inc
ds
std
jo
cld
ja
pop
jg
sub
inc
popa
dec
imul
bound
xlat
cld
inc
imul
outsl
std
push
imul
enter
aas
pop
outsl
popa
inc
cmp
das
sub
push
bound
or
xor
ret
pop
inc
pop
pop
insb
add
cs
push
inc
gs
popa
ds
pop
push
call
pop
gs
incl
cmp
outsl
jo
pusha
data16
call
in
jno
addr16
pop
rcrl
inc
mov
fidivs
outsb
inc
inc
mov
data16
fs
xchg
xchg
outsl
dec
jno
outsl
inc
or
mov
call
cmc
jo
jno
enter
aam
cld
push
push
cmp
sub
sub
xchg
jmp
pop
jb
or
inc
gs
loope
jmp
pop
ja
adc
jno
outsl
pop
ret
imul
bound
mov
pop
jbe
insl
cmp
imul
cmp
inc
lea
sarb
gs
in
test
fcmovb
ja
addr16
insl
ja
add
das
jl
jo
pop
arpl
jb
clc
sahf
push
insl
insl
pusha
arpl
std
mov
out
pop
jae
xchg
mov
pop
imul
aad
std
cmp
pop
bound
adc
cmpsl
pop
jae
in
outsl
cmpsl
inc
cmp
inc
inc
inc
xor
sub
gs
cmp
inc
pop
push
daa
pusha
push
inc
lods
xchg
push
dec
add
lea
or
push
dec
fldt
inc
push
pusha
xchg
roll
adc
inc
bound
fists
cmp
pop
arpl
rorl
stos
fs
pop
or
outsl
gs
dec
insl
pop
outsb
jno
and
fnstenv
std
dec
das
jecxz
in
pop
popf
pop
arpl
mov
outsb
and
inc
into
idivl
insb
pusha
pop
loope
aam
mov
cld
inc
aas
pop
mov
daa
sbb
std
sub
sub
dec
pop
fs
popf
insl
es
push
dec
cmp
insb
cmpsb
rcll
insb
sub
sti
mov
sub
cmp
sub
and
mov
adc
aas
dec
aas
inc
cmp
in
mov
cmp
push
cmp
ds
push
pop
mov
cld
cmp
ds
pop
xchg
jle
sub
sub
and
pop
pop
insb
pop
sub
imul
cmp
push
and
mov
arpl
das
cmp
ret
add
pop
inc
cmp
sub
daa
mov
outsb
xor
jge
pop
pop
daa
mov
jo
outsl
lods
pusha
ds
cmp
pop
gs
jb
scas
outsl
push
outsl
cmp
popa
inc
push
insl
int
ja
pop
pop
outsb
adc
ds
clc
push
incl
push
push
cmp
inc
cmp
mov
jbe
test
das
sub
mov
cmp
mov
and
movsl
movsl
mov
or
pop
pop
imul
cmp
mov
rcl
shlb
mov
inc
mov
ja
dec
stos
pop
xchg
in
das
je
sub
outsl
jno
aas
cmp
cmp
cli
add
jg
push
sub
cmp
inc
aaa
pop
cmp
mov
pop
xor
std
sbb
outsl
fistpl
ss
pop
addr16
pop
or
push
push
cmc
test
push
aaa
xor
mov
sub
loopne
add
aaa
jb
repz
and
adc
sbb
stos
push
or
dec
cmp
dec
aas
cmp
repz
daa
jne
rcl
dec
addr16
addb
adc
rcrb
push
in
add
mov
inc
imul
pop
pop
push
push
and
pop
dec
pushf
push
push
xor
daa
mov
rorl
aaa
push
push
decb
jg
jmp
pop
xchg
pusha
cmp
cmp
xor
dec
push
dec
inc
dec
xor
lds
sub
bound
adc
ret
xor
dec
dec
lods
shrb
xchg
clc
inc
push
push
in
or
mov
nop
adc
movsl
mov
inc
adc
cmp
dec
dec
sub
ljmp
cmp
nop
add
mov
jno
insb
shll
or
jno
into
mov
mov
pop
jmp
or
pop
xchg
pop
sbb
dec
jne
or
stc
fwait
bound
ret
mov
mov
arpl
inc
jecxz
cmp
jno
iret
addr16
pop
xchg
lods
add
pop
adc
aas
dec
cmp
imul
je
insb
pop
cmpsl
or
mov
imul
add
lds
fdivrp
mov
mov
aaa
sub
cmp
cld
mov
pop
xchg
arpl
push
xor
mov
adc
push
std
push
sti
ret
lcall
jg
pop
or
gs
insl
test
outsl
aaa
lcall
arpl
jb
stc
add
repz
and
dec
lahf
inc
sub
aaa
mov
dec
mov
sar
stc
mov
shll
std
gs
rorl
mov
inc
inc
jae
xchg
mov
and
or
aaa
subb
inc
adc
clc
or
jl
in
mov
jns
pop
xor
mov
insb
daa
dec
outsb
pop
adc
jb
in
fldcw
jp
pop
inc
xorb
lcall
jle
jg
fnstenv
jle
jo
mov
xor
std
ljmp
and
or
mov
clc
add
xor
cld
outsl
jbe
imul
xchg
inc
loope
dec
jns
xor
std
jo
sbb
das
sub
mov
test
jns
lds
adc
xchg
gs
jno
imul
repnz
cmp
scas
inc
addl
mov
mov
inc
dec
dec
pop
shll
and
mov
out
mov
shrl
pop
xchg
and
sub
outsl
mov
rorl
dec
test
dec
nopl
imul
push
outsb
inc
jb
push
sbbl
pushl
jmp
mov
sub
lea
lods
lret
xor
in
sub
imul
or
div
or
pop
insl
pop
fisttpl
push
mov
pusha
dec
outsb
lea
lods
andb
mov
in
sbb
das
outsl
cmp
pop
je
push
aam
imul
push
mov
addr16
push
cltd
push
sub
repnz
stos
mov
ret
arpl
push
jecxz
cli
test
push
pop
gs
pop
pusha
sub
stos
stc
outsb
pusha
xor
xor
aaa
outsb
leave
and
ret
daa
inc
add
xor
insl
leave
insl
pop
xchg
cmp
repz
or
mov
xor
sbb
outsb
sbb
les
mov
inc
popf
gs
push
mov
jmp
insb
lcall
pop
jae
fcmovnbe
sbb
aaa
daa
sub
outsl
dec
push
jo,pn
sub
cs
jmp
sub
rcll
shll
movsl
int
out
push
cmpsb
and
xchg
mov
pusha
sbb
and
or
push
outsl
and
jns
sti
pop
jne
and
insb
js
add
push
mov
mov
int
mov
push
insb
bound
imul
and
popa
sbb
mov
mov
sti
fcoml
mov
fldenv
bound
push
mov
mov
jmp
xchg
push
and
mov
mov
inc
pop
inc
push
lcall
daa
add
das
das
arpl
dec
inc
inc
pop
inc
inc
push
addr16
data16
pop
std
pop
push
sub
test
or
lods
jg
shrl
dec
out
data16
and
and
ja
pop
enter
sub
push
and
and
test
out
mov
imul
mov
or
stc
inc
adc
leave
mov
mov
popa
movl
fidivrs
addr16
jmp
std
dec
cmp
insl
repz
add
fstps
mov
push
dec
xor
ds
testb
pop
sub
outsl
aas
pop
insl
fnclex
push
pop
push
outsb
je
loop
xor
push
mov
xchg
jo
mov
pop
xor
dec
push
mov
ds
dec
cld
dec
insb
mov
rclb
pop
and
jo
jns
sbb
and
js
lret
cmc
dec
or
mov
inc
inc
fistpl
lcall
fists
lahf
add
adc
fs
jg
sbb
in
daa
sbb
sub
lcall
pusha
pop
iret
jo
pop
pop
daa
mov
dec
adc
mov
sub
push
push
iret
pop
fcom
test
xorl
jecxz
sbb
jnp
pop
imul
mov
in
flds
mov
pop
inc
movsb
jo
dec
insb
adc
xor
jecxz
cmp
xor
dec
imul
sub
cmp
std
sub
sub
and
dec
sub
bound
pop
daa
dec
pop
and
test
pop
inc
dec
pop
xlat
fisubrl
lds
xchg
dec
mov
mov
dec
push
sbb
xor
das
orb
or
cmp
bound
xor
mov
das
push
in
jne
sbb
sub
or
inc
pop
test
insl
sub
cmpsb
ficoml
gs
lret
xor
gs
pushw
inc
push
add
outsb
lea
roll
or
in
scas
adc
dec
jne
xor
pop
mov
popa
xorb
jg
push
mov
insl
jb
or
xor
sub
and
and
xor
sub
inc
das
or
das
popa
pop
dec
jno
lods
imul
dec
movsb
dec
imul
sub
pop
fsub
out
xchg
pop
push
addr16
arpl
mov
cmp
pop
adc
pop
jmp
insl
mov
movl
imul
lods
shlb
sbb
mov
xor
add
fmull
jae
adc
mov
fistpll
push
jne
arpl
pop
sub
cmpsl
mov
inc
mov
or
pop
push
or
push
loopne
push
sub
pop
sub
xchg
sub
cmp
std
and
push
enter
jno
ss
add
lods
push
outsl
or
xor
and
sub
cld
test
clc
sbb
lds
pusha
sub
and
cmp
test
sbb
ja
cs
ss
loop
test
push
sub
cmpsl
pop
bound
pop
mov
inc
pop
pusha
xor
outsb
inc
mov
pop
and
and
sub
jo
cs
negl
dec
jae
xchg
insb
fstpt
xor
ss
xchg
insb
pop
mov
xchg
sbb
aaa
clc
jae
popa
pusha
push
jmp
sbb
test
mov
and
dec
dec
inc
nop
adc
test
pop
fwait
cmp
repz
cmp
dec
cmp
inc
mov
push
fistps
dec
xchg
dec
cld
adc
sbb
dec
pusha
arpl
adc
inc
pop
je
jmp
cs
aas
jae
mov
insl
jne
inc
push
inc
xchg
jmp
dec
in
inc
daa
pop
arpl
sarl
sbb
lea
mov
aas
ja
or
fcmovnbe
cmp
push
inc
arpl
aas
jae
out
outsb
lret
insb
cmp
bound
xchg
pusha
jno
daa
gs
sti
jmp
sbb
bound
outsb
dec
mov
dec
mov
ja
inc
dec
jne
ficoms
je
insl
jns
inc
arpl
jb
imul
mov
insl
je
dec
sub
mov
lods
outsb
je
pop
in
dec
insl
jno
arpl
das
mov
stos
leave
imul
mov
dec
decl
ret
insb
insl
sti
jae
loopne
out
cmp
fs
ficomps
push
out
sbb
daa
arpl
aam
push
aas
imul
ficompl
add
ffreep
xor
ds
inc
cmp
inc
inc
inc
inc
inc
or
outsl
mov
mov
dec
lret
push
push
push
pop
and
inc
test
add
xchg
pop
mov
outsb
je
jo
dec
insb
cld
aaa
mov
inc
and
push
and
pop
adc
inc
lahf
rcrl
adc
cmp
call
sub
pop
mov
lret
pusha
adc
pop
aas
jecxz
aad
fcoml
pop
or
mov
lock
add
xchg
aas
es
dec
fst
push
dec
mov
add
lods
pop
xacquire
inc
addr16
pop
push
cmp
pop
dec
je
sub
inc
push
xor
jbe
cmp
ds
inc
and
addr16
data16
daa
inc
fsubrl
arpl
cli
pop
dec
add
sub
jo
out
dec
inc
es
dec
jbe
shrb
jmp
insl
cmp
add
xchg
mov
popf
rcll
aaa
xchg
addr16
imul
add
add
add
pushl
loope
dec
fnsave
arpl
fisttps
cmp
push
out
xor
mov
push
and
dec
sub
aas
daa
and
and
sarl
add
sbb
inc
adc
arpl
sbb
ljmp
jbe
add
xchg
sahf
outsl
jno
jno
cmp
jb
enter
test
fisttpll
sbb
cltd
bound
mov
mov
cmp
push
mov
push
sub
pop
ret
mov
adc
repz
ljmp
sub
xchg
cmp
jecxz
adc
int3
pop
cld
das
xor
jb
bound
lcall
xchg
inc
popa
jne
sub
sub
lods
leave
popa
sbbb
test
jecxz
jmp
xor
inc
decb
sub
sub
cmpsb
sub
mov
fsubrs
fisubrl
sbb
sub
mov
int3
sub
pop
xor
sub
pop
das
jno
jp
xchg
sub
incl
cs
das
pop
xor
xor
inc
xor
mov
mov
mov
xlat
icebp
pushl
cli
xor
xor
push
xor
mov
xor
sub
sub
sbb
jnp
jg
call
xor
xor
xor
xor
xor
pushl
and
xor
data16
jp
mov
call
xchg
xor
xor
xor
xor
sub
push
xor
pushl
jnp
jg
mov
xor
xor
add
inc
xor
push
xor
jmp
lea
xchg
aaa
mov
ss
cmp
aaa
loope
in
in
ss
cmp
push
xor
jmp
sub
sub
cmp
dec
xor
aaa
mov
ret
cmp
xor
aaa
inc
cmp
imul
call
sbb
cmp
cmp
cmp
cs
pushl
aaa
loop
jmp
jmp
stc
push
push
sbb
inc
jg
add
adc
mov
mov
sub
pop
sub
sub
mov
mov
lock
sub
das
inc
call
cs
inc
das
popa
das
dec
sub
ja
xor
test
xchg
sub
mov
into
sti
pop
sub
sub
dec
pop
sbb
sbb
and
xor
ljmp
push
xor
insb
sub
xor
xor
sub
cs
in
fbld
sub
xor
sub
pop
sub
ret
pushl
mov
shrb
xor
xor
ss
xor
xor
pop
mov
fucomip
sbb
cmpsl
cmp
rcl
mov
divl
or
adc
aaa
cmp
cmpb
cmp
das
hlt
cmp
cmp
dec
cmp
outsl
cmp
cmp
xor
add
sbb
jg
sti
cmp
xor
cmp
cmp
into
das
lock
jo
cmp
bound
cmp
cltd
movsl
jecxz
ds
les
aam
loopne
out
imul
incl
jae
mov
int
in
sub
jecxz
jl
mov
cwtl
sub
ljmp
test
sub
stc
repz
xor
sub
cs
das
mov
sub
fnstsw
pop
cli
das
lock
xor
cmp
push
call
sub
xor
in
das
or
or
adc
sarb
cmp
push
xor
insl
xor
xorb
xor
jecxz
jecxz
add
adc
ss
xor
xor
js
pop
fcomps
mov
xor
xor
loope
call
xor
sub
add
dec
xor
out
xor
xor
aaa
sub
sbb
xor
pushl
or
pop
xor
outsl
jl
cmp
mov
leave
jae
in
repnz
pop
xor
bound
push
aaa
int
add
push
aaa
xchg
cmp
pop
cmp
cmp
cmp
ret
inc
aaa
push
cmp
cmp
xor
cmp
xor
icebp
mov
cmp
cmp
xor
xor
xchg
mov
movsb
cmp
cmc
cmp
out
inc
lods
incb
aas
std
sub
test
incl
das
dec
cs
sub
popa
mov
popf
sub
incb
cmp
sub
das
out
fists
inc
cs
xor
outsl
sub
xor
dec
sar
jg
cmp
xor
jno,pn
xor
fisubrs
call
call
inc
sub
das
pop
xor
sub
out
adc
sub
pop
xor
pop
xor
jle
mov
mov
mov
pop
divb
shlb
ret
xor
sub
xor
ja
inc
xor
clc
sbb
xor
xor
xor
sub
aad
inc
shlb
dec
xor
jb
rorl
jg
movsl
popa
xor
cs
xor
mov
cmp
xor
ss
xor
out
test
xor
ss
sbb
test
aaa
mov
ret
xor
movsl
aaa
mov
stos
shll
cmp
inc
jg
cmp
aas
xchg
movsl
incl
cmp
lock
orl
add
sbb
mov
cmp
sub
pop
sub
sub
jle
jg
sub
push
sub
in
subl
and
int
mov
hlt
xor
sub
xchg
das
jmp
dec
jge
pop
dec
xor
scas
xor
sub
push
cmp
pushl
pop
cmp
js
jg
ss
cmp
mov
cmp
cmp
loope
stc
add
adc
ds
pop
aaa
outsb
cmp
cmp
ss
mov
stc
dec
clc
std
inc
jecxz
std
das
push
sbb
sbb
sub
mov
ljmp
xor
subb
sub
sub
shrl
sub
sub
add
idivb
insl
push
cs
xor
je
xchg
sub
rolb
out
sub
inc
std
xor
xor
sub
loope
jle
xor
pop
inc
das
inc
xor
pop
gs
in
mov
mov
fldt
in
in
ljmp
add
sub
jbe
pushl
xor
xor
dec
das
sub
pop
js
jns
xorl
test
cmc
movsb
sub
jmp
jno
jbe
xor
sub
jns
xor
lock
js
xor
sub
or
sbb
xor
orl
pop
xor
std
push
out
scas
sub
lea
popf
sub
jmp
sub
xor
sub
mov
mov
and
shrl
fldcw
clc
xor
and
lock
add
or
push
inc
inc
mov
jae
mov
inc
jb
outsl
outsb
dec
gs
cs
unpckhps
mov
dec
popa
imul
sbb
incl
push
dec
inc
push
push
inc
push
inc
pop
jae
fs
pop
outsb
pop
cmp
insl
pushl
outsl
data16
popa
jb
pop
dec
imul
inc
jle
jg
outsl
ja
push
push
outsl
push
outsl
popa
insl
sbb
arpl
mov
jg
cs
ja
adc
cs
je
jae
and
std
in
je
and
jo
jae
arpl
arpl
imul
fwait
and
je
sub
popa
bound
insl
and
adc
jo
pop
mov
andb
hlt
vmwrite
fcmovnbe
data16
jg
jbe
pop
jns
jo
adc
push
push
fnstcw
xor
xor
mov
sbb
push
gs
add
push
js
negl
cmp
ja
xor
pop
sbb
push
insl
adc
push
jae
pop
mov
imul
jnp
adc
popa
gs
jg
bound
jo
div
iret
and
gs
popa
push
ds
pop
inc
js
adc
fildll
jb
push
adc
jns
dec
jmp
mov
adc
fs
imul
insb
andl
jne
dec
inc
inc
pop
loope
js
push
jne
push
sbb
inc
mov
sti
bound
je
dec
lods
inc
movhps
jbe
jb
adc
inc
outsl
pop
mov
imull
cmp
push
or
jnp
mov
inc
push
or
dec
pcmpeqw
int
cmpsl
sbb
dec
jae
jnp
inc
loope
xor
lds
movd
mov
fdivrs
jae
xchg
mov
inc
fisubrl
add
imul
pop
hlt
outsl
dec
push
and
fs
daa
push
out
shll
insb
sti
imul
adc
or
imul
pusha
fldt
or
pop
add
or
add
add
add
arpl
dec
inc
pop
push
pop
xor
push
push
mov
loopne
sti
clc
cs
add
sbb
icebp
pop
add
cs
ja
fildl
cs
lock
aam
mov
add
add
add
ja
outsl
add
fnstsw
imul
add
mov
add
mov
add
pusha
inc
repz
or
outsl
mov
add
outsb
adc
add
ret
pop
psubd
and
jecxz
out
push
push
add
pop
clc
cmp
mov
adcb
and
aam
add
rolb
lcall
mov
aaa
mov
mov
incl
into
rcrb
pop
lea
sub
jmp
xlat
repnz
icebp
ret
fisubl
xchg
push
mov
mov
jnp
fcoms
pushf
and
incl
rsm
jbe
add
add
jg
and
lahf
xorl
mov
daa
jmp
mov
push
inc
dec
push
push
dec
adc
enter
mov
push
stc
push
inc
nop
inc
add
lcall
jns
aas
add
rolb
nop
add
add
sub
cltd
pop
repnz
repnz
jns
add
lock
call
add
add
add
imul
jg
sub
push
push
or
adc
jae
mov
adc
insb
add
push
add
jb
jbe
sub
inc
pop
add
add
and
push
add
andb
xor
inc
jb
loop
inc
jne
inc
imul
jge
outsb
addr16
adc
push
imul
das
in
add
inc
insb
jne
push
and
lods
sbb
mov
jp
push
dec
push
add
gs
insb
outsl
jae
dec
popa
outsb
fs
imul
sub
outsl
jbe
inc
js
and
out
out
gs
jo
dec
popa
insl
inc
inc
or
or
outsb
sbb
test
cmpb
jae
jo
outsb
or
sub
cmpb
dec
push
lods
xor
jo
outsb
outsw
adc
add
jae
cpuid
pushf
insb
adc
into
mov
adc
inc
mov
and
pushf
gs
jnp
ret
mov
jae
outsl
outsb
mov
mov
sti
mov
mov
fs
out
jg
mov
lods
insl
insl
jns
fldl
je
adc
sub
lret
mov
gs
outsl
outsl
insb
cs
aaa
push
clc
xor
push
lock
outsl
je
es
les
fildl
push
xor
inc
fisubs
outsl
jmp
jmp
adc
pop
adc
pop
or
pop
or
call
mov
leave
adc
mov
mov
decl
or
and
outsl
lret
add
mov
jp
call
and
imul
add
inc
push
sbb
ljmp
or
repz
mov
xor
jns
aaa
xor
out
dec
out
ud0
inc
xchg
ss
add
xorl
mov
cmp
lcall
repnz
adc
lock
pop
or
icebp
adc
add
pop
mov
pop
mov
add
add
push
push
mov
cmp
movsl
dec
mov
mov
fisttpl
mov
adc
or
push
insl
sub
call
cli
or
out
adc
mov
mov
mov
repnz
pop
and
pop
data16
gs
call
pop
push
pop
push
bsf
je
wbinvd
pop
insw
or
cmp
push
pop
fsubrs
sub
and
sub
jb
sti
fst
lret
stos
jb
jae
arpl
arpl
jecxz
outsb
or
jo
je
subb
lods
mov
pop
and
ja
push
insl
bound
xchg
ja
or
mov
jbe
push
sbb
outsb
arpl
pop
pop
push
inc
inc
js
inc
jb
dec
aam
pop
fidivrs
je
je
insl
mov
out
arpl
push
jae
sbb
rorb
dec
xor
xorb
push
imul
jo
or
lea
sub
xchg
push
cmp
sbb
push
ja
xor
and
or
test
adc
and
shr
xchg
bound
or
lods
imul
incb
mov
add
sbb
cmp
pop
pop
ja
loopne
sidtl
add
add
adc
insb
repz
add
pcmpgtd
mov
add
pop
xor
sbb
sti
sahf
sub
add
adc
cmp
mov
push
aaa
dec
inc
and
mov
mov
sub
or
popa
js
push
and
addb
pusha
jb,pn
insb
or
or
scas
mov
lret
insl
lret
xchg
mov
fidivs
jae
or
repz
lock
fimuls
add
add
inc
mov
incl
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
