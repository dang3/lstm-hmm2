mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
nop
jno
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
sbb
pusha
scas
sti
push
push
push
push
adc
mov
rclb
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
mov
das
and
enter
call
movsl
and
mov
pop
sbb
ja
add
mov
or
mov
mov
daa
ret
jmp
fldz
cmp
add
mov
fsubrl
mov
aas
push
in
pop
ret
pop
add
xchg
lahf
push
push
mov
and
test
lods
jl
or
or
adc
test
test
mov
inc
inc
pop
ret
icebp
pop
faddl
sbb
test
mov
enter
je
mov
out
out
dec
lea
adc
push
xor
mov
add
add
xchg
aas
fs
or
jne
and
call
faddp
ret
cs
dec
push
mov
jecxz
and
xchg
push
jb
mov
orl
int
pop
pop
repnz
in
ret
sbb
sbb
mov
add
adc
ss
lahf
or
cmp
add
icebp
fwait
sti
addr16
test
jne
sbb
lea
shr
sub
xor
in
sarl
scas
cmpw
jne
lret
push
pop
cmp
sbb
neg
add
or
fistl
push
or
xor
lds
inc
pop
pop
adc
adc
mov
out
xor
test
push
aaa
std
mov
pop
lock
sub
push
mov
or
je
adc
fsubrl
jle
mov
or
xchg
cmp
push
jne
test
mov
mov
cmpsb
push
outsl
add
adc
in
lea
jecxz
add
xor
jae
out
decb
add
mov
jl
mov
fbstp
lea
rep
stos
stos
push
push
ja
push
pop
sbb
or
inc
push
adc
adc
sub
clc
pop
pop
push
or
pop
add
dec
std
pop
popa
idivl
adc
dec
push
rolb
and
mov
mov
or
shl
add
pop
sti
inc
mov
not
sub
lea
mov
push
jmp
push
and
mov
fnstsw
mov
push
push
int
mov
push
pop
and
lea
jmp
ja
push
push
add
push
xor
xor
dec
cmp
dec
and
adc
stos
fldcw
xchg
sbb
fidivl
mov
pop
jae
sub
mov
push
mov
dec
mov
cs
das
jnp
leave
and
add
mov
xchg
xor
addl
sub
leave
inc
jmp
push
je
jne
mov
mov
mov
inc
inc
add
or
sub
fsubrs
lcall
adc
ss
push
adc
fnsave
pop
push
fxch
push
pop
push
pop
addl
push
std
xor
push
leave
push
sub
in
adc
jle
subl
ss
mov
loope
lret
dec
or
pop
or
sbb
sbb
addb
xor
test
out
in
lea
jmp
or
or
stos
push
lret
cmp
jne
adcl
push
rorb
xchg
out
add
les
jecxz
xchg
dec
push
mov
je
adc
pushf
push
data16
sub
les
arpl
jb
mov
push
xor
rcll
xor
push
je
xor
addb
mov
xchg
scas
and
adc
cmp
psllq
and
out
mov
sbb
push
or
sub
pop
ret
or
push
mov
sbb
cmp
xor
inc
inc
cmp
sbb
repz
sbbb
push
inc
lock
inc
jmp
inc
sbb
aad
cmp
add
inc
incl
lea
ret
std
sub
cwtl
in
xor
or
and
gs
jmp
cmp
push
xor
ret
cs
cmp
pop
push
adc
or
ss
or
xor
cltd
xchg
dec
inc
push
in
mov
adc
adc
dec
add
inc
ljmp
je
inc
test
jmp
sub
pusha
add
push
xlat
movsb
data16
repz
sub
movsl
out
inc
mov
test
ss
push
mov
mov
mov
pop
add
lea
jns
inc
pop
add
add
add
push
stos
nop
sbb
leave
mov
push
call
dec
sub
push
jg
pop
push
in
sub
add
push
sahf
xchg
push
repnz
pop
add
sbb
xchg
mov
in
fs
inc
sbb
adcl
lret
dec
pop
push
dec
or
or
push
mov
shll
addl
arpl
pop
data16
in
add
push
push
in
jb
gs
rorl
push
add
xor
push
ret
pusha
xor
xchg
nop
add
pop
inc
mov
imul
xor
jae
mov
decl
jae
in
lods
mulb
adc
xor
adc
cmpsb
inc
andl
lcall
push
jle
push
add
xor
out
int
lcall
or
or
cmpsb
in
mov
fs
inc
push
push
sti
inc
sbb
push
scas
icebp
dec
lret
pop
add
push
mov
push
dec
jp
nop
outsb
jns
add
rcl
sbb
xchg
dec
in
add
dec
jne
lahf
dec
cld
xchg
leave
mov
sahf
or
mov
mov
dec
out
mov
outsb
add
xchg
sti
jl
insl
movsb
adc
int3
push
rorl
idivb
jecxz
xchg
jo
pop
lret
scas
adc
lods
loopne
arpl
ja
mov
ret
push
imul
cmp
xor
mov
testb
sub
mov
out
iret
push
lret
icebp
xor
pop
and
fnstsw
or
insb
or
mov
push
test
fldt
inc
sbb
shr
push
shrb
sbb
push
jge
push
rcll
ret
gs
mov
rcr
fcomps
stos
ljmp
jmp
and
and
cmc
rorb
and
sub
inc
fsubs
imul
or
ret
mov
ficompl
loope
and
shrl
adc
mov
lea
mov
mov
and
mov
mov
or
mov
sbb
rclb
sbb
xchg
pop
and
cwtl
fs
mov
cmp
sbb
add
xor
in
scas
xor
or
add
rclb
leave
and
popf
mov
adc
sbb
inc
sbb
jbe
sbb
sbb
jnp
inc
xor
je
inc
lock
push
call
mov
or
dec
xor
push
shrb
xor
mov
push
and
or
adc
shr
sub
es
add
fwait
add
add
aam
or
movsb
push
sub
mov
int3
lds
cmc
dec
pop
sbb
bswap
in
es
in
add
fs
mov
push
mov
xchg
cltd
loopne
das
and
insb
repz
xor
movb
add
mov
xor
mov
nop
add
into
mov
adc
or
xor
ss
xlat
sbb
das
adc
je
leave
out
xor
aaa
int
ja
lock
mov
adc
aas
push
inc
mov
mov
inc
inc
out
sti
ret
loop
decb
jne
inc
add
out
add
push
and
push
inc
ret
jle
xchg
mov
add
movl
pop
adc
mov
cmp
pop
bound
inc
test
inc
mov
add
lea
rorl
mov
mov
test
mov
cmpsb
xor
push
adc
push
int
inc
pusha
test
or
pop
xchg
lahf
adc
mov
insb
or
ret
pop
pop
sbb
mov
dec
sub
je
ja
test
call
cmp
jne
loope
popl
jmp
mov
mov
test
sbb
incl
adc
or
xchg
pop
lcall
lock
outsb
push
xor
sub
cmp
push
mov
sub
or
pusha
add
ljmp
and
pop
idivb
pop
pusha
pusha
mov
rcrb
xchg
push
insb
inc
and
pop
sbb
or
sbb
ret
pop
icebp
jmp
lods
jmp
inc
in
mov
adc
popa
pusha
into
gs
int3
mov
in
mov
out
adc
adc
push
inc
leave
shr
inc
data16
lea
push
inc
pop
daa
js
cwtl
repz
sbb
rorl
lods
out
imul
fwait
and
push
ss
adc
push
sbb
xchg
pop
jo
xor
dec
cmp
mov
inc
inc
push
fs
bound
pop
mov
mull
push
xchg
mov
or
clc
lods
mov
push
mov
or
test
sti
sub
sbb
dec
xor
jo
dec
adc
xchg
mov
js
insb
pop
cmp
cltd
mov
xor
outsb
push
push
and
adc
cwtl
mov
and
sub
mov
addr16
shl
out
js
and
clc
adc
cmpl
push
je
fstps
popa
sub
int3
insb
mov
adc
mov
int
jl
add
xlat
and
cmp
sbb
and
nop
fsubl
sbb
mov
dec
push
in
push
fdiv
lock
clc
dec
fs
or
adc
shrl
inc
test
mov
sar
out
sbb
mov
or
lret
adc
push
scas
mov
jl
ja
jnp
pop
pop
pop
fs
mov
or
or
inc
pusha
ret
pandn
arpl
pusha
push
invlpg
mov
rol
bound
mov
nop
mov
mov
add
mov
js
inc
xor
cmp
push
movsl
sahf
movsl
fs
or
jo
pop
push
push
stos
lea
xor
and
push
add
rcl
insl
rclb
jo
mov
mov
inc
cmp
adcl
push
and
in
sbb
or
aam
inc
dec
sahf
sub
sub
push
mov
addr16
nop
pushf
push
dec
sahf
orl
adcl
jl
lea
adc
fmuls
gs
adc
xor
leave
push
sub
enter
fstps
inc
les
mov
pusha
add
lock
sub
lds
dec
lock
outsb
and
enter
push
sub
pop
enter
mov
sarl
push
inc
cmp
sbbl
cli
add
jo
test
test
loop
loopne
mov
and
dec
not
mov
dec
fs
xor
sbb
testb
out
or
jb
xchg
push
mov
call
fidivrl
push
push
jne
test
push
jns
and
add
mov
sub
mov
inc
xor
jmp
es
not
es
mov
ja
test
xchg
or
push
sysenter
aaa
loopne
test
int3
cmp
cmp
sbb
mov
arpl
push
fwait
inc
sub
xchg
dec
sbb
pop
jge
ret
lea
or
add
loopne
xor
pop
imul
mov
sti
insl
push
adc
dec
adc
sub
sbb
call
insb
cmp
and
mov
rol
add
add
xor
cmp
jno
invd
fs
ficoml
mov
push
mov
push
xchg
movsb
mov
or
inc
bound
or
out
xor
shrl
push
sub
js
push
push
fsub
ret
push
int
xor
inc
xchg
dec
cwtl
sub
cli
xor
aas
xorb
shrb
mov
lock
mov
rorl
ss
adc
divb
call
shlb
pop
add
or
leave
jae
daa
jne
push
rolb
adc
cltd
idiv
mov
mov
mov
clc
in
add
mov
cmp
jb
jp
mov
movsl
inc
cmp
jg
arpl
mov
push
or
addr16
jg
dec
and
adc
shrl
cmp
test
dec
movsbl
lods
xor
push
dec
and
xlat
adc
cmp
push
add
sub
and
mov
xor
lods
ljmp
cmp
push
xchg
adc
xchg
xchg
xchg
loopne
fcom
xchg
xchg
mov
ror
sub
les
mov
xchg
xchg
mov
test
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
nop
mov
xchg
cmpb
xchg
xchg
xchg
jo
push
xchg
pop
pop
push
push
xchg
xchg
xchg
xchg
dec
dec
inc
inc
xchg
xchg
xchg
xchg
cmp
xor
xchg
xchg
xchg
xchg
sub
and
xchg
xchg
xchg
xchg
sbb
adc
iret
xchg
xchg
xchg
or
add
inc
nop
stc
jl
lahf
inc
xchg
inc
cwtl
inc
pushf
inc
mov
rep
inc
test
mov
enter
mov
enter
in
inc
rclb
fsub
in
and
call
inc
aaa
and
cld
add
and
cld
pop
testl
push
mov
and
lods
add
add
ret
push
add
cmp
int3
add
gs
mov
xchg
cmpsl
push
loopne
xor
cmp
mov
iret
imul
sahf
iret
add
and
out
mov
add
dec
or
or
mov
outsl
push
or
std
xchg
cmp
xchg
insb
dec
adc
lock
jl
adc
adc
jbe
inc
aas
inc
xchg
lea
or
mov
or
adc
inc
mov
add
mov
xor
and
inc
or
add
fildl
repnz
or
jbe
aam
lods
das
pop
insb
dec
movsb
int3
inc
testb
mov
movzwl
jmp
sub
jbe
jmp
push
pop
xor
push
xchg
call
imul
inc
in
mov
mov
mov
cld
es
test
ret
mov
fmulp
pop
mov
add
mov
add
das
cwtl
jo
mov
mov
inc
cld
clc
inc
ffree
sbb
xor
loop
ret
cld
repnz
ret
icebp
mov
mov
push
pop
addb
jmp
lods
bnd
jb
mov
mov
lea
adc
mov
cmp
or
int3
add
fcomps
mov
dec
faddl
nop
jg
in
mov
mov
mov
inc
sahf
sub
int3
dec
add
insb
add
fnstenv
test
dec
mov
lcall
dec
fnstenvs
dec
mov
fsubr
clc
add
adc
and
lcall
subb
jg
jb
xchg
push
add
adc
int
mov
or
sbb
movsl
leave
mov
cs
sbb
or
je
popf
or
das
add
mov
adc
nop
xor
adc
add
xor
add
das
dec
cmp
or
jne
sub
pop
sub
adc
aaa
int
out
arpl
movhps
xlat
jne
xchg
pop
sbb
xchg
daa
push
cmpsb
jmp
scas
addl
rdtsc
pop
mov
mov
push
adc
sub
mov
pop
icebp
testl
jmp
cmpsb
jmp
test
jno
mov
scas
dec
add
mov
mov
addr16
mov
adc
fwait
pop
dec
or
push
scas
arpl
jmp
mov
sar
or
scas
inc
aas
dec
mov
shll
fcmove
mov
cmpsb
mov
fnstenvs
xor
sbb
xor
mov
cli
dec
pop
add
add
sub
xor
xor
add
xor
js
pop
dec
xor
cmpsb
push
dec
xchg
shll
pop
fs
jnp
dec
js
xchg
addr16
mov
jl
sbb
adc
rolb
xor
jbe
rolb
add
inc
loope
push
popa
insl
pop
mov
xor
add
jmp
adc
loopne
pop
xchg
adc
add
outsb
xor
mov
rclb
push
shll
cmp
xor
sub
and
ss
shll
push
or
cld
xor
cmpsb
pop
div
ljmp
fcom
int3
mov
aaa
repz
pop
rcr
lret
adc
add
pop
es
test
pop
push
daa
aaa
dec
scas
adc
jl
ret
mov
xor
out
add
add
lcall
pop
push
dec
inc
imul
popf
imul
add
insb
lcall
xor
xor
mov
repnz
out
dec
shll
ret
mov
xlat
shr
push
jb
and
repz
cmpsl
add
and
xchg
leave
push
das
adc
inc
daa
cmp
pusha
and
nop
push
mov
sbb
mov
and
dec
dec
fimuls
leave
sub
dec
inc
dec
rorb
mov
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
jmp
push
inc
push
dec
xor
jnp
clc
xor
fs
insb
ja
xor
dec
inc
dec
push
fnstenv
rolb
mov
outsl
sti
jmp
decl
lret
out
push
mov
std
stc
cli
cld
idiv
std
add
cli
sti
or
clc
cmp
stc
sti
mov
or
or
mov
pop
mov
dec
lcall
dec
fs
outsb
push
push
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
sbb
pop
in
push
decl
sbb
pop
bound
rolb
sbb
inc
xor
call
dec
cltd
dec
and
dec
and
sub
push
xchg
dec
and
aam
pop
cltd
dec
adc
xor
stc
out
lcall
dec
and
xor
daa
xor
dec
cwtl
dec
sub
xchg
dec
lcall
cltd
lock
or
cmpsb
imul
neg
push
dec
inc
or
std
inc
test
add
sbb
stc
add
push
mov
jecxz
sbb
xor
or
add
cmp
cld
adc
xchg
stc
or
or
pop
inc
out
sub
stc
sti
std
mov
in
and
sahf
sbb
or
and
rcrb
pusha
je
lahf
pop
push
stc
push
daa
out
das
pop
push
pop
daa
insb
pop
pop
imul
or
insb
or
cmp
stc
pop
pop
jo
sti
add
in
insl
dec
mov
pop
popa
push
ss
daa
aas
out
pop
stos
rclb
push
push
test
jg
pushl
pop
mov
sbb
dec
push
mov
push
dec
push
out
push
mov
outsl
sub
or
testl
lea
mov
push
jg
push
imul
mov
xchg
cld
pop
ja
jecxz
movsl
pop
jle
xchg
mov
mov
mov
jmp
jmp
loope
push
push
cmpl
or
stc
outsb
cwtl
inc
jne
mov
call
in
dec
push
add
rorb
cmc
imul
jns
in
fs
mov
mov
fistpll
mov
mov
mov
mov
jo
jle
or
push
divb
jae
jmp
xchg
dec
fistps
mov
insl
sti
in
jmp
sbb
cli
xchg
push
push
data16
push
xor
mov
jmp
lock
pusha
cmpsb
cmpsb
test
ja
loope
mov
mov
fs
xchg
pop
loopne
jnp
xor
xor
cmp
add
mov
movsl
lahf
gs
dec
cli
aam
dec
pop
jnp
add
lods
push
pop
mov
out
out
lahf
mov
mov
push
cmp
mov
popa
sub
out
test
jg
dec
notl
mov
mov
lods
sbb
cli
roll
fmull
test
lods
out
ficoms
mov
gs
pusha
cmp
add
arpl
sahf
adc
sbb
or
bound
gs
insb
jg
into
pop
rorl
fwait
scas
adc
decl
das
add
mov
cmpl
or
repnz
cmp
cltd
aaa
cld
pushl
and
hlt
repnz
mov
dec
arpl
dec
push
notb
in
fistpl
stc
jl
pop
xchg
jno
add
or
pushl
test
inc
xchg
out
repz
std
mov
loopne
ljmp
jae
jecxz
dec
jne
sub
push
dec
gs
test
mov
insl
add
outsl
mov
into
test
mov
cld
dec
in
dec
xchg
test
testl
pop
fcomi
dec
idivb
or
jb
dec
gs
jo
dec
jb
stc
pushl
rclb
xchg
movsb
imul
data16
jo
clc
roll
inc
xchg
fldt
or
xor
test
push
dec
mov
jle
ss
jb
cmpsb
insl
addr16
dec
or
imul
in
inc
loop
pop
sti
adc
mov
mov
push
fs
cld
outsb
add
dec
pushl
mov
rcrb
dec
dec
xchg
xchg
ja
lahf
fs
pop
mov
inc
dec
loopne
cld
clc
stc
mov
jb
add
dec
mov
dec
dec
arpl
loope
mov
adc
cmp
jecxz
cmc
adc
in
fbstp
mov
xchg
dec
dec
dec
push
push
dec
test
addb
inc
sbb
insl
repz
popa
cld
mov
pop
cli
jno
test
and
jecxz
in
mov
cmc
popa
ficompl
add
std
dec
xchg
fistl
sub
cmpb
jo
loope
mov
in
jecxz
sub
sub
in
sub
loope
out
xchg
sbb
or
ret
in
or
test
jle
add
jecxz
cltd
pop
push
push
lods
jbe
or
push
dec
addb
stc
push
fs
push
lcall
aaa
outsb
lcall
xchg
clc
pop
xchg
movq
dec
dec
stc
push
pusha
andl
jecxz
dec
sub
push
ret
cmpsl
and
dec
xchg
lret
clc
dec
gs
mov
or
mov
push
sahf
cmpl
mov
bound
add
push
cld
iret
cmc
std
sbb
push
or
cmc
inc
stc
jge
adc
jmp
call
jle
int3
xchg
test
in
es
rorb
dec
dec
dec
mov
and
cmc
push
jge
clc
sbb
jnp
pop
xlat
pop
pop
clc
cld
imul
repz
psubq
pop
loope
sbb
jnp
xchg
push
jle
add
popf
sub
push
mov
xchg
and
xorb
and
or
mov
and
xchg
sbb
aas
fstl
mov
push
cmp
xor
pop
push
cli
adc
xor
push
insb
push
inc
inc
cs
mov
loope
and
in
sbb
push
push
xor
sbb
arpl
xchg
lds
sbb
call
jg
mov
inc
gs
add
sbb
mov
out
sti
dec
dec
push
xor
cs
sbbb
test
movsl
mov
jg
std
icebp
popa
xchg
test
in
into
mov
test
cmpsb
sub
xor
cmpsb
mov
jl
cld
bnd
inc
pop
cmpsb
xlat
xchg
negl
fwait
nop
clc
outsl
pop
loopne
cmpsl
fs
mov
xor
clc
outsl
mov
cmp
bound
or
dec
push
pop
push
xor
jmp
mov
push
sub
not
mov
ljmp
dec
imul
mov
add
arpl
push
jecxz
insl
clc
jg
iret
xchg
popa
add
arpl
dec
dec
incl
arpl
dec
jno
dec
adc
dec
daa
inc
xchg
mov
lock
dec
lret
jecxz
sbb
insb
mov
sub
sbb
jns
jne
mov
push
testl
xchg
sti
jecxz
pop
js
clc
ror
daa
or
xchg
in
das
pop
call
jle
insl
aas
test
inc
movsl
paddb
ss
push
insl
in
pop
push
dec
stos
cmp
loopne
pop
test
jns
cltd
aad
push
lock
lods
rcrl
push
neg
jnp
outsb
push
ret
or
ss
jle
test
jp
add
dec
mov
mov
mov
clc
jge
pushf
in
adc
aad
mov
inc
sub
jecxz
cli
adc
gs
and
mov
in
xor
inc
or
das
fdivrl
push
sbb
push
sub
sbb
push
test
shll
dec
sub
mov
mov
decw
push
loop
dec
roll
outsl
in
mov
and
mov
orl
dec
mov
repnz
test
loope
mov
ret
add
outsl
pop
sub
daa
sbb
mov
jo
lods
movsl
adc
insb
jns
das
xor
add
out
sti
inc
add
test
xor
loop
dec
or
out
in
xchg
test
pop
movsb
sbb
dec
lds
or
int
push
loopne
sub
pop
jae
mov
stc
jo
ret
sbb
lods
popa
xchg
sub
xchg
dec
mov
in
sbb
pop
mov
mov
push
sub
cmc
push
pushf
mov
sbb
mov
clc
mov
gs
sub
lock
adc
std
jb
aaa
mov
bnd
faddl
dec
adcl
pop
dec
pop
jge
ret
push
jl
mov
jo
cltd
mov
outsl
ucomiss
xor
bound
jmp
aaa
cmp
test
jg
std
jae
in
jmp
sbb
xchg
or
xchg
aaa
jne
xchg
lods
push
leave
mov
fisttpll
or
jns
push
imul
inc
fisttpll
fwait
push
mov
add
out
sub
fisubl
fsubrs
push
cmp
daa
sub
mov
incl
xor
lock
jno
dec
pop
ja
imul
cmpsl
inc
and
dec
dec
mov
mov
lret
jl
in
push
inc
fisubrs
aad
lds
pop
dec
movsl
pushf
addr16
popf
push
sub
push
ffree
jne
add
roll
push
adc
outsl
clc
mov
or
inc
loope
jae
in
aam
insl
push
add
mov
mov
aaa
test
out
sti
shll
insl
pop
mov
insl
fistpl
arpl
dec
stc
inc
iret
push
pop
mov
movsl
or
lods
testl
cli
daa
packsswb
mov
dec
xchg
adc
xor
outsl
mov
mov
call
inc
loope
add
inc
das
xor
loop
sub
and
pusha
add
jg
inc
loopne
or
ljmp
incl
addl
sub
or
push
push
cltd
and
xchg
in
and
sub
loopne
push
daa
movswl
cld
leave
in
xor
or
push
cli
shll
push
arpl
xor
jo
cli
xor
fwait
imul
je
shrb
mov
in
cmpsl
mov
mov
jnp
xor
push
fildll
sti
xchg
test
cmp
repnz
ja
xor
idiv
mov
or
push
xchg
addb
loopne
out
cltd
push
outsb
or
jmp
out
add
sub
in
out
jl
jno
out
shrb
jb
adc
ret
or
ret
lret
or
push
pop
negb
stc
jmp
or
or
outsl
add
testb
push
insl
jle
pop
sbb
arpl
in
stc
sub
mov
ja
in
xchg
pop
mov
es
sbbl
movsl
inc
imul
mov
mov
test
jo
test
in
add
arpl
aaa
fidivrl
outsb
inc
cmp
imul
lds
push
mov
inc
cmp
cmp
dec
aaa
dec
adc
rclb
mov
jg
add
adc
push
mov
sub
pop
add
lock
decb
push
in
cmp
aaa
push
adcl
sbb
push
mov
divb
test
xorl
and
out
mov
mov
roll
int3
sub
cmc
out
jp
int3
out
popa
in
addr16
in
and
mov
scas
push
xchg
shrl
sub
cmpb
fldcw
mov
and
pop
pop
outsl
push
xor
xor
pusha
and
jb
das
pusha
jg
stc
xchg
adc
jbe
stos
push
and
pushaw
add
hlt
or
adcb
mov
xchg
xor
ret
push
ljmp
mov
sub
inc
out
inc
ds
jg
mov
jmp
push
mov
mov
pop
stc
inc
jmp
mov
add
ljmp
in
mulb
rcr
xor
pop
add
dec
out
sti
sbb
lea
push
adc
dec
dec
test
cmp
lock
push
xchg
jl
pop
repz
roll
fisttps
xorl
dec
daa
or
in
incb
jle
jl
int3
xchg
sub
loopne
or
repnz
fsubrl
mov
cmp
test
push
les
jno
push
fdivs
mov
in
std
mov
jae
bound
in
std
ror
pop
cs
pop
icebp
fs
shl
xlat
repnz
in
mov
adc
adc
notl
xor
orl
lret
and
adc
jnp
lahf
jnp
ss
sub
lock
pop
insl
std
mov
or
testl
punpckhwd
mov
ja
lret
fisttps
gs
mov
ljmp
cmp
mov
mov
jecxz
aaa
popf
fdivl
ret
gs
outsb
insl
mov
lret
out
data16
out
xchg
jb
pop
lock
cld
repz
mov
shl
or
push
cmc
xchg
push
add
shl
pusha
stc
push
bswap
ja
xchg
fidivl
add
or
insb
mov
lods
ja
lock
in
dec
dec
lock
in
mov
test
pop
negb
dec
xchg
lret
clc
mov
ficomps
jecxz
inc
std
xor
out
std
mov
adc
test
jecxz
clc
ljmp
mov
hlt
dec
stc
jnp
xchg
dec
mov
cs
repz
test
dec
clc
cmp
outsl
mov
mov
pextrw
shlb
outsl
outsl
push
repz
cs
in
mov
icebp
testl
pop
das
push
pop
std
cltd
xlat
stc
fsubr
cmp
cld
sbb
or
in
icebp
sti
cmpsb
sbb
sbb
or
test
cli
aaa
incb
jecxz
std
addr16
mov
adc
out
lock
shll
rclb
mov
js
ss
std
cmpb
pop
jnp
cmpsb
imul
mov
mov
clc
jl
mov
cmc
jmp
fdivrp
jl
bound
push
jp
pop
sbb
pop
pop
push
stos
mov
mov
mov
bound
push
loopne
test
push
push
test
test
mov
mov
xchg
faddp
xchg
jg
cmp
jecxz
in
jge
mov
out
add
nop
mov
test
add
push
pop
xchg
loope
add
fwait
push
repz
sub
popa
mov
or
aam
xorb
adc
dec
incl
pop
push
mov
pop
mov
mov
mov
jmp
icebp
loope
add
xor
outsb
das
push
mov
fists
jbe
or
mov
jo
test
sbbl
pop
jecxz
mov
add
fisubrl
push
add
xchg
ljmp
mov
add
lds
test
shrb
outsl
repnz
xchg
test
fwait
in
aaa
arpl
call
into
cmp
lock
les
popa
sti
fldt
std
mov
add
les
cwtl
ret
cmp
pop
test
add
imul
mov
iret
jl
or
pop
pop
ret
cld
jne
out
dec
push
gs
push
clc
sbb
test
add
xchg
or
addr16
jge
clc
and
ja
imul
xchg
fisttpl
xchg
in
dec
xchg
mov
cmpsl
aaa
cmp
aas
add
dec
adc
lods
cmpl
loopne
jecxz
cmp
into
fucom
das
lock
fisttps
mov
pop
mov
mov
enter
dec
mov
inc
push
add
test
lds
stc
sar
xor
push
inc
cld
cmp
adc
cld
mov
shll
in
lahf
lods
add
or
in
mulb
loopne
jecxz
inc
cmp
lcall
pop
in
jno
jne
add
aaa
xor
or
pop
out
and
add
pop
push
push
les
sti
lods
xchg
dec
push
bound
mov
jb
mov
jae
enter
out
pop
xchg
add
loope
add
neg
mov
lret
jae
cmp
inc
ss
dec
add
out
add
repz
hlt
test
test
and
sub
test
inc
out
lock
in
outsl
xchg
testb
pop
and
jnp
idiv
add
cmp
out
add
fwait
repz
in
pusha
addb
loop
clc
daa
mov
mov
sub
or
aad
cld
decl
lds
icebp
jo
xchg
or
inc
jle
lds
dec
insl
cmp
clc
jg
das
incl
or
adcl
sub
outsl
std
or
cmp
in
xorb
jo
push
xor
outsl
mov
incb
adc
ret
sub
fstpt
pushl
mov
popa
jg
dec
push
outsb
push
inc
mov
enter
mov
cli
adc
mov
push
sub
mov
seta
mov
imul
adc
outsl
pop
fucomi
push
aaa
jno
inc
xor
pop
add
cld
pop
loop
mov
mov
jl
pop
ret
mov
dec
push
stos
sbb
sar
out
js
aad
adc
adc
subb
xor
or
mov
sbb
iret
shlb
scas
jecxz
push
fsubl
inc
mov
add
mov
and
add
mov
ja
add
cld
scas
or
cmc
aaa
jecxz
push
clc
das
ljmp
test
mov
divb
add
pop
loopne
arpl
adc
repnz
fiadds
movsl
outsb
pushf
add
pop
or
mov
pop
test
xchg
dec
nop
sbb
leave
or
out
mov
stos
xor
push
dec
or
cmp
movsl
push
xchg
cmp
div
out
imull
adc
jno
push
in
sub
add
popf
pop
mov
fisubl
mov
mov
cli
push
clc
in
out
xor
scas
xor
dec
dec
or
loop
sti
jg
ret
pop
mov
movq
or
sub
fistl
cli
shl
cvtps2pd
stos
sarb
cmp
mov
test
stos
movsl
push
jae
repz
push
cmp
fidivs
or
arpl
pop
push
out
add
je
push
fldt
push
cmpb
push
orl
pop
aas
lods
fcmovne
cmc
cmp
push
pop
out
mov
cs
or
push
aaa
arpl
jo
fcmovnbe
adc
push
lahf
xchg
arpl
ret
insl
das
out
pop
cmp
fisttpl
add
sbb
rclb
shll
pop
std
das
jl
pushf
xor
bound
in
cmp
outsl
lock
inc
in
jl
mull
jb
jecxz
jg
pop
stos
sar
xor
fwait
das
mov
dec
jmp
jge
repz
xchg
sbb
mov
xor
dec
dec
pop
push
mov
jecxz
xor
outsb
ja
mov
loope
out
mov
lds
pop
mov
sti
jno
xchg
xor
popf
xor
clc
sbb
call
jecxz
cmp
ja
movl
push
add
jg
inc
jge
imul
in
jno
test
sbb
or
push
add
int
mov
push
in
mov
loopne
jp
stc
pop
sub
xor
dec
les
add
cs
arpl
imulb
mov
push
sub
dec
dec
lret
adc
mov
insl
mov
mov
ljmp
stos
cld
test
xchg
out
xchg
mov
das
cld
mov
daa
dec
or
or
dec
dec
popl
push
dec
push
push
and
pop
mov
push
emms
stos
jbe
add
cmp
add
jns
pusha
cli
clc
jno
inc
cmp
mov
jb
shr
adc
das
sub
pop
push
jp
or
jo
xor
incb
xchg
lahf
pop
test
aaa
iret
outsl
sbb
xchg
mov
push
test
cmp
jmp
arpl
fists
xor
dec
add
or
mov
cmp
inc
add
addl
xor
and
mov
add
push
xor
mov
pop
add
or
add
in
sti
aaa
push
fucomi
xchg
xchg
filds
cld
lods
or
inc
ret
lds
and
push
fbstp
bound
push
out
add
jno
fldt
jno
or
aas
pop
jo
loopne
test
mov
push
cmp
aas
rorb
inc
mov
pop
mov
fwait
cmp
pop
aam
jmp
js
clc
push
insb
jo
or
movsl
xor
add
js
sbbl
pop
mov
lds
xchg
in
insl
dec
outsb
mov
jl
test
push
in
loop
mov
push
mov
sbbl
orb
cmp
push
add
add
cli
jo
addl
sti
mov
fdivl
test
fwait
sti
mov
pop
call
je
insb
add
xchg
test
add
xor
cld
mov
std
sbb
fidivrl
xor
orb
inc
mov
in
in
decl
fstpl
add
ja
jnp
out
xor
mov
mov
mov
sub
jno
or
xor
insl
pop
mov
jle
push
xor
mov
push
je
push
xchg
mov
shr
xor
outsl
xor
repz
mov
mov
add
and
mov
xor
insb
das
inc
test
out
sbbb
cmp
jg
sarb
xchg
xchg
out
xorb
mov
pop
ss
imul
mov
jg
dec
xor
or
out
dec
repz
das
mov
or
sbb
jbe
dec
add
scas
cs
ljmp
jae
sub
cmp
test
mov
xchg
or
sub
sub
pop
in
insb
adc
push
cmp
jp
sbb
push
std
mov
jg
ds
repz
je
insl
scas
xor
inc
or
lods
pop
xor
imul
imul
mov
jbe
jle
adc
ret
cmp
xor
inc
adc
mov
andl
cmp
pop
loop
jp
cli
pop
xchg
mov
dec
test
stc
in
sub
repnz
dec
inc
adc
inc
adc
mov
insl
and
andl
xchg
cs
xchg
cli
mov
xchg
fdivl
mov
jecxz
in
lret
xor
imul
subb
out
push
pop
test
mov
mov
add
fsts
sbb
xor
das
or
sbb
jle
fbstp
xor
mov
or
xor
mov
shl
aaa
inc
push
xchg
hlt
addr16
mov
sbb
xor
xchg
sbbb
inc
sbb
pop
js
jo
popf
xor
xorl
adcl
xor
adcb
pop
sarb
jle
pushl
scas
inc
repz
push
out
and
pop
pop
adc
popa
sti
out
push
loopne
addl
adc
je
inc
adcb
cmp
jge
or
adc
sbb
add
insb
or
sar
jge
sbb
test
pushf
xor
inc
pop
fisubrl
push
jp,pt
cmp
shlb
add
scas
outsb
and
pop
fdivr
jne
push
and
push
cmp
insl
jp
lahf
jns
add
add
test
cmpb
dec
insl
aam
movsl
out
mov
call
xor
mov
xor
jne
sbb
mov
mull
pop
lea
fildll
mov
insl
or
jle
pop
jae
dec
aas
dec
sbb
dec
sbb
cmp
mov
imul
imul
ret
mov
repz
ds
jle
adc
add
icebp
or
ja
aad
xor
das
adc
lods
push
loope
sti
iret
enter
mov
arpl
in
sti
mov
adcb
xchg
xchg
lds
pop
mov
mov
xor
mov
mov
cli
in
ja
add
mov
call
or
dec
add
outsb
mov
jmp
mov
xchg
inc
push
arpl
jo
push
mov
mov
add
mov
jo
push
mov
pop
orb
pop
je
sub
insl
mov
sub
jmp
mov
incl
adc
dec
pushl
subl
cmc
es
cmp
cmp
mov
pop
or
outsb
imul
ret
subl
fcmovnb
outsl
and
push
ss
std
outsl
add
mov
add
add
std
cmpl
std
dec
jle
sti
jb
test
fistpll
movsl
cmp
push
mov
mul
pushl
shll
xchg
cmc
jecxz
sbb
fmull
in
push
xchg
push
jge
and
jo
or
mov
js
arpl
cmp
xchg
enter
inc
stos
int
icebp
fisttpl
adc
or
adc
lret
sub
in
add
js
test
daa
je
sub
scas
stc
jo
lahf
adc
hlt
ret
or
imul
jg
jmp
sbb
daa
sti
push
popa
addr16
je
inc
or
pop
daa
push
sbbb
and
add
sub
icebp
xchg
add
mov
cs
out
shll
out
ss
push
mov
lahf
or
repnz
addr16
shrb
in
or
stc
cld
jnp
gs
jp
mov
jp
es
jecxz
aad
pop
call
lcall
xchg
adc
arpl
movl
or
idiv
mov
xorl
stos
scas
incl
mov
jno
xchg
pop
orl
clc
ret
and
xchg
popa
ret
cmp
or
xchg
sti
push
stos
xlat
mov
add
cmp
lea
jg
int
adc
aaa
gs
cltd
xchg
push
xchg
in
lahf
or
mov
das
and
outsl
pop
adc
clc
xor
adc
push
aaa
jl
add
int
test
aaa
pop
xor
xor
jle
out
mov
pop
xchg
ret
push
push
out
pop
add
cld
int
xor
out
outsl
sbb
addr16
sub
jo
aam
sbb
push
push
pusha
jnp
add
jmp
xchg
test
or
xor
add
jbe
inc
fwait
loopne
xor
dec
in
nop
mov
push
mov
das
dec
dec
bound
cmp
aam
test
mov
fldenv
ffree
aas
fnsave
push
fucomi
xchg
sub
mov
dec
lahf
call
cltd
scas
mov
jae
jecxz
je
inc
data16
jle
call
mov
pusha
cmpsl
ljmp
jl
pop
sti
test
mov
sub
pusha
mov
pop
mov
mov
push
mov
adcb
jne
daa
pop
xchg
aaa
call
test
out
jl
inc
mov
push
mov
push
and
mov
movsb
dec
mov
stos
fistl
push
jno
divl
push
insl
jmp
jl
mov
sbb
cli
dec
inc
mov
or
aas
std
sti
dec
jecxz
sub
push
mov
jnp
in
inc
mov
sub
pop
aad
inc
aam
insl
sub
fstpt
pop
aad
out
jecxz
sub
fcmovnu
in
ljmp
dec
popa
mov
ja
mov
out
daa
mov
push
mov
mov
pop
pop
mov
or
insb
mov
mov
mov
insl
mov
jne
dec
insb
mov
pop
jge
or
in
sub
outsb
repnz
int3
mov
push
daa
inc
jnp
jecxz
sub
sti
inc
sbb
lret
add
adc
sub
pop
orl
mov
sbb
sub
dec
sbb
pop
cmc
addb
dec
xor
cmc
outsb
cmp
mov
cmp
push
fldt
notl
imul
mov
xor
insl
sbb
mov
xor
xor
clc
jmp
rorl
rep
fnstsw
not
jmp
jg
xchg
arpl
dec
cld
icebp
mov
test
call
push
dec
sub
push
dec
lahf
xor
arpl
inc
xchg
pop
insb
and
rcll
outsb
icebp
in
repnz
mov
inc
addr16
paddq
push
or
arpl
xchg
andl
pop
sbb
dec
jne
xchg
les
outsl
pop
add
sub
mov
shl
mulb
rcrl
cmp
test
mov
pusha
ja
test
jl
sub
fistpl
das
fst
arpl
jns
mov
mov
xor
jne
arpl
xchg
xchg
pop
das
add
sub
in
sub
das
aaa
mov
daa
cmp
dec
pop
or
clc
push
xor
std
jns
bound
lea
or
scas
xchg
adcl
cmp
test
movsl
movsl
push
sub
or
stos
xchg
adc
cs
dec
rcrl
cwtl
mov
stos
idivl
std
push
mov
jb
adc
dec
mov
outsb
mov
mov
adc
scas
stc
js
fdivs
jp
add
idiv
xchg
jmp
out
mov
std
sbb
lods
out
xchg
iret
loop
sub
mov
adc
or
jle
push
push
xchg
test
xchg
cmp
imulb
bound
xchg
inc
mov
or
dec
mov
adc
mov
jae
out
mov
mov
in
rcll
test
popf
pusha
leave
sub
mov
loope
scas
adc
add
inc
cmpl
dec
dec
jg
jecxz
fstps
imul
cmpsb
shrl
mov
pop
repz
xor
pop
sub
push
jnp
fsin
xor
scas
jns
pop
jp
xor
pop
add
test
in
adc
add
sti
mov
rcrl
add
inc
js
andb
cmp
ja
pop
ret
xor
std
icebp
mov
sub
lahf
lods
not
mov
movsl
xchg
nop
loopne
fisubs
insl
xor
mov
pop
or
je
sbb
sti
fwait
jle
add
mov
jl
fisttpl
lcall
mov
shlb
push
jno
fstl
sbb
fwait
clc
inc
or
and
sti
sbb
cmp
push
test
lock
adc
addr16
cmpsb
bound
mov
sbbl
or
loopne
btc
dec
div
dec
dec
pop
jo
mov
and
pop
bound
imul
insl
cmc
les
std
push
mov
int3
lds
mov
fisttpll
jnp
pop
cmp
mov
pop
or
mov
xor
movsl
add
fdivrl
push
cmpb
jo
icebp
hlt
fwait
movsb
xchg
iret
dec
or
rolb
clc
pusha
mov
jo
sbb
fldt
hlt
bound
nop
rcrl
insb
jns
bound
push
sbb
ds
popa
andl
lods
pop
pop
cmp
xor
dec
jno
adc
pop
orl
daa
or
out
clc
and
popa
xor
outsl
sbb
les
mov
mov
ss
jl,pt
aaa
mov
adc
cs
jp
push
mov
pop
sub
pushf
dec
mov
mov
daa
and
es
jns
add
das
lahf
outsl
or
xchg
sarb
or
aaa
in
xor
sbb
or
in
mov
mov
adc
cmpl
mov
bt
dec
dec
cltd
fucomip
add
fstp
push
pop
cmp
xor
mov
js
dec
pushf
rol
or
lcall
push
mov
xor
out
ja
scas
cli
sub
jns
loopne
or
pusha
cmp
idivb
and
ja
jecxz
das
mov
and
rorl
mov
rolb
mov
sbb
and
push
mov
xor
lahf
test
push
call
fs
xor
xor
daa
xlat
jge
pop
andb
add
push
addl
shlb
sbb
addr16
xorl
pop
mov
pusha
fists
test
ret
pop
xchg
cmpsl
push
test
outsl
and
jnp
xchg
sbbb
xor
inc
daa
lahf
sahf
mov
cltd
add
sub
outsb
outsl
add
mov
sbb
pop
add
aaa
xor
push
cmpsl
pop
shlb
in
dec
ss
hlt
test
stc
jns
jg
push
inc
std
ret
fwait
icebp
mov
mov
push
and
cmp
xchg
loopne
bswap
out
mov
aaa
out
push
xchg
je
ret
insb
pop
adc
repz
push
fbstp
imul
loopne
daa
push
ret
cli
outsb
std
sar
ret
and
xchg
jno
addl
inc
repz
dec
outsl
push
sub
mov
outsl
inc
inc
addb
lock
pop
js
insl
outsl
adc
icebp
loop
sar
fidivs
aaa
icebp
pop
jg
adc
mov
cld
jns
mov
popa
sbb
popa
cmp
inc
inc
jmp
arpl
movsb
test
mov
add
enter
xor
pop
lahf
fidivs
rcrl
fcompl
jl
pop
sbb
mov
push
dec
sbb
or
fwait
ret
aad
insl
dec
jbe
rcl
push
es
dec
clc
jp
cmp
push
fadds
add
fcmovnbe
mov
cli
insb
lret
leave
inc
out
sar
mov
or
add
push
mov
mov
loop
push
or
cmpsl
mov
lea
sti
jmp
out
outsl
sbb
xchg
ljmp
sub
push
jno
mov
outsl
dec
arpl
push
mov
scas
loopne
out
jp
pop
jle
jmp
clc
mov
sbb
out
sub
mov
cmpb
fildl
jge
jnp
inc
mov
lock
popa
sub
lcall
insl
pop
in
and
and
add
leave
icebp
jo
mov
hlt
mov
icebp
insb
pop
inc
and
jo
popa
lahf
and
xchg
pop
test
push
movsb
movsl
test
or
dec
jmp
mov
lock
dec
inc
movhps
outsl
pop
pinsrw
sti
push
pop
xor
push
movsl
xchg
and
mov
loope
sub
inc
flds
shrb
mov
das
sub
jmp
loopne
and
add
or
add
cmp
cwtl
add
and
gs
aad
jle
add
mov
cmp
push
sbb
outsl
xchg
push
sti
fadds
sub
mov
xor
ret
inc
or
ret
stos
mov
push
rcrl
add
mov
repz
push
cli
packuswb
cmp
outsb
adc
mov
pop
mov
repz
cmc
jo
or
call
sbb
mov
arpl
dec
xor
shrl
and
push
imul
mov
lds
test
test
jns
out
jecxz
je
add
loopne
fldt
or
aad
pop
movsl
mov
mov
xchg
es
cmp
icebp
push
mov
movsl
fnstcw
mov
jns
mov
ret
push
lea
sub
and
stc
dec
outsb
xor
jecxz
loop
into
jbe
cld
jns
sbbl
hlt
leave
jg
inc
loope
fucomip
movsl
test
sti
xchg
add
adc
loop
and
push
pop
out
loop
xor
mov
ds
xor
mov
jge
sti
push
push
insb
pusha
mov
mov
cld
inc
daa
repnz
jb
mov
sub
movsl
mov
das
stc
push
mov
insb
stos
sub
inc
mov
repnz
and
mov
insl
add
lret
cs
jle
mov
es
loope
mov
testb
loope
and
dec
std
pop
jl
rcl
imul
mov
or
add
add
ret
ljmp
pop
aam
loopne
loopne
jecxz
sbb
add
sarb
adc
aad
sub
test
idivl
test
cmp
mov
sti
push
xchg
mov
cmp
or
mov
sub
loop
and
fs
push
pop
cwtl
stos
mov
movsb
stc
jmp
sbb
cmpsl
sbb
pop
xlat
sbb
cltd
add
aas
jne
test
or
mov
mov
idivl
mov
mov
mov
out
mov
movsl
xchg
test
test
mov
mov
xor
xor
negb
dec
sbb
inc
daa
movsb
fidivs
jo
adc
popa
mov
jge
sub
mov
dec
insb
xor
lcall
cmpb
pop
cmpsl
sti
rcrl
mov
inc
add
addb
or
sub
xchg
lcall
lret
inc
fucomi
lahf
clc
ffreep
insl
or
lret
fcomps
lock
jno
pop
out
jo
out
mov
push
dec
push
cs
or
pop
popf
push
dec
add
lods
sbbb
or
jmp
inc
jb
xor
mov
mov
pop
loop
adcl
sti
movsl
jb
scas
cmc
and
push
inc
push
push
std
add
jecxz
sbb
add
or
dec
lret
js
push
imul
mov
pop
dec
xor
roll
dec
add
movl
lods
in
or
dec
test
repz
movsb
jno
inc
movsl
mov
dec
inc
icebp
mov
adc
out
or
daa
movsl
clc
sub
sbb
fildll
add
xor
fistl
iret
dec
movsb
hlt
add
out
fnstcw
bound
add
and
jg
test
mov
sarb
sarb
pop
hlt
arpl
add
notl
das
push
test
dec
mov
arpl
ja
fwait
int
cs
subb
mov
dec
adc
mov
sbb
shrl
rorb
sbbb
lcall
mov
inc
jnp
add
push
negl
daa
add
shrl
xlat
mov
inc
mov
scas
mov
sarb
pop
jecxz
sbb
std
push
jmp
sbb
outsl
jmp
insb
mov
test
hlt
push
fnsave
jecxz
push
jge
mov
fsubs
decl
insl
adc
pushw
sbb
add
or
mov
iret
xchg
xchg
cmp
mov
cmpsb
push
sti
push
cmp
xorb
in
inc
cmp
andb
xor
adc
js
mov
movsl
addl
in
mov
mov
test
inc
or
ja
push
mov
imul
push
jecxz
ss
push
shll
scas
push
or
add
xor
add
sbb
fcoml
xchg
psllq
dec
xor
mov
jns
sbb
lea
mov
rcrl
rorl
mov
push
pop
dec
dec
jl
scas
push
mov
or
sub
push
mov
divb
pop
movsl
fistps
inc
lret
ja
add
and
dec
loop
inc
iret
inc
pop
js
daa
adc
pusha
subl
rcl
pop
pop
jge
icebp
idiv
sub
mov
in
xor
test
mov
mov
loopne
dec
arpl
outsb
aam
mov
push
data16
pop
subb
jecxz
data16
mov
js
jg
jb
push
mov
cmp
jbe
out
push
push
adc
flds
scas
pop
cmp
dec
pusha
subl
inc
ja
xchg
filds
push
cmpl
insb
or
mov
fiaddl
fwait
in
outsl
cmp
dec
dec
out
jl
out
jg
add
test
std
sbb
jnp
int
inc
out
sbbl
or
adcl
xor
fisttpll
test
movsl
dec
jo
arpl
and
push
cmpl
and
adcl
push
fildl
and
ret
mov
mov
aas
fdivl
mov
or
dec
mov
cs
sub
sbb
cmc
dec
mov
push
imul
adc
add
push
mov
mov
test
into
lds
mov
icebp
jnp
lock
mov
mov
mov
test
sub
mov
in
sub
mov
pop
rclb
dec
pop
ret
inc
frstor
cwtl
aaa
add
jle
clc
push
sbb
rorl
pop
pushf
in
lds
loopne
sbb
sti
push
adc
sbb
icebp
out
shlb
inc
jmp
subb
sbb
or
lods
gs
movsl
shrb
push
sub
push
push
dec
jecxz
js
add
outsb
ficompl
icebp
mov
icebp
adc
adc
xchg
mov
add
xchg
stos
cmp
sub
pop
xor
push
dec
push
cmp
sbbb
dec
aad
cmpl
clc
add
xor
fists
filds
ss
and
imul
loop
fiaddl
xor
xor
clc
jb
push
xchg
adc
xorl
jno
pop
mov
dec
dec
orb
fldl
mov
shr
daa
and
sbb
testb
adc
mov
negl
ret
outsl
xchg
ret
xchg
jle
lret
add
add
out
jno
mov
aaa
mov
repnz
test
xchg
xorl
stos
cld
or
sub
push
sub
stc
push
or
mov
out
cmc
fisubrs
pop
test
push
xor
and
into
push
xchg
jo
fsts
dec
setle
sub
movsl
mull
notb
cld
test
addb
sbb
push
dec
into
lods
push
out
fcomp
mov
test
sbb
es
jl
sub
pop
sarb
xor
mulb
sub
xor
mov
or
lods
out
fabs
pop
cs
ds
adc
pop
cmp
scas
push
push
cmp
jge
inc
cmp
dec
dec
aaa
cmp
sbb
xchg
or
inc
out
inc
pop
xchg
sbb
and
and
xchg
sbb
and
repz
stos
pop
das
jecxz
or
inc
in
adc
and
xchg
sbb
and
cmp
push
mov
sbb
lahf
test
mov
scas
test
in
mov
adc
test
call
out
adc
lods
or
repz
jo,pn
dec
or
push
cmp
and
insl
mov
imul
fisubrl
into
mov
shll
repz
cmp
mov
push
sub
rcl
popa
bnd
loopne
or
bound
sub
int
xchg
repnz
into
xchg
push
sub
data16
sub
repz
cmp
aad
dec
iret
jg
inc
pop
cmp
xchg
adc
add
adc
mov
adc
in
push
lds
cmp
ret
jns
sub
dec
ds
or
or
cli
inc
pop
or
cmc
adc
add
sbb
mov
inc
cld
or
mov
rcl
push
pop
pop
sarl
test
fstpt
loop
mov
jnp
push
stc
into
mov
sbbl
pop
insl
add
xchg
test
sti
lds
mov
and
jg
test
lds
mov
out
test
add
fbld
ds
ja
lret
push
add
push
push
pop
mov
push
push
xchg
hlt
inc
xor
jp
sahf
testb
mov
pop
insl
shl
jmp
jo
bound
inc
sub
test
movsl
adc
xchg
jnp
cmc
jge
mov
divb
divl
sbb
std
outsb
daa
and
cmpsb
test
movsl
dec
xor
push
xchg
daa
xor
pop
add
mov
inc
cmp
and
push
subl
std
ret
xchg
pop
dec
add
daa
stos
sti
pop
clc
add
cli
movsl
loop
inc
add
jp
out
xor
xor
inc
and
sub
sbb
pop
enter
push
and
test
das
and
arpl
cmovp
clc
test
adc
mov
mov
repnz
icebp
sbbl
dec
call
add
add
jns
lret
je
pop
shll
clc
or
inc
test
roll
lea
mov
enter
aad
aaa
cli
in
shll
mov
adc
sbb
dec
dec
mov
mov
push
fildl
push
adc
lcall
dec
or
cmc
xor
add
movsl
adc
adc
mov
xor
mov
cmc
jecxz
hlt
ror
push
adc
mov
mov
xor
dec
in
push
pusha
fwait
add
xor
rep
enter
aam
adc
xchg
xchg
xchg
add
xchg
sbb
repz
adc
scas
sbb
push
aam
push
in
por
inc
cli
inc
cli
and
cld
fwait
jl
pusha
in
adc
jno
mov
cmp
mov
dec
mov
testb
ficoms
or
out
jae
add
test
dec
dec
daa
inc
push
mov
xchg
inc
mov
lcall
dec
sti
stc
pop
out
sbbl
incl
std
jle
dec
xor
mov
ret
or
xchg
mov
inc
add
or
jmp
lods
cmpb
inc
test
inc
add
mov
mov
mov
pop
aad
mov
xor
or
mov
shrl
adc
mov
adc
sbb
jnp
jg
cli
out
dec
xor
jp
xchg
dec
fs
daa
mov
dec
jno
call
push
bound
xchg
lahf
cmp
or
mov
pop
mov
sbb
cmp
mov
fimuls
inc
popf
popa
ss
ja
in
js
lock
xchg
loopne
das
in
push
icebp
mov
icebp
insl
inc
in
addb
in
in
outsb
adc
inc
stc
dec
pop
pop
jp
lds
xchg
sti
jo
lea
ja
stos
test
mov
pop
add
jno
in
dec
imul
test
push
or
dec
mov
or
aas
ja
inc
jmp
daa
xchg
loop
int
sbb
jmp
inc
repnz
xor
add
inc
sbb
pop
ljmp
jmp
ljmp
into
mov
cli
outsl
out
adc
insb
out
mov
pushl
addl
movsl
hlt
repnz
cmp
push
dec
xchg
sub
or
xchg
and
inc
jo
adc
lret
fdivp
jg
or
cmpl
clc
orl
sbb
mov
loope
pop
jg
adc
pop
dec
inc
xor
rorb
pop
and
adc
rolb
jg
mov
in
jnp
add
bound
insl
push
mov
or
clc
nopl
pusha
xchg
dec
icebp
mov
ds
pop
push
or
clc
gs
daa
push
insb
cld
jg
fsts
push
repnz
mov
push
dec
mov
push
inc
push
dec
arpl
pop
push
daa
scas
fldl
mov
cltd
pop
adc
adcb
push
sub
js
and
cmp
jp
pop
inc
aad
das
jnp
sub
jmp
insl
or
daa
sbb
sti
int3
push
push
not
mov
loope
pop
dec
data16
das
jne
or
notl
popa
push
std
sti
lock
out
rep
sti
mov
adc
cmp
mov
fcmovne
nop
fsts
add
push
call
mov
les
pop
or
or
dec
or
adc
push
xchg
jge
or
int3
inc
mov
pop
pop
or
shrb
add
or
mov
xchg
inc
popa
stos
int
xor
jb
push
jp
mov
ret
push
loope
or
das
aaa
outsl
imul
inc
rclb
iret
or
sbb
inc
lea
add
jle
rcl
aaa
inc
dec
or
dec
leave
out
push
or
mov
jl
sbb
jle
dec
daa
jl
inc
test
adc
inc
pop
sbb
stos
pop
mov
mov
xchg
push
push
sub
in
mov
insl
mov
push
jns
gs
filds
js
pop
or
bound
dec
nop
add
sbb
jl
jge
add
inc
loopne
or
out
push
out
roll
add
fstl
hlt
shll
jns
jge
dec
test
cmp
cmp
push
loopne
or
mov
je
dec
jne
std
add
ds
xchg
add
ret
sbbb
sub
aam
fnstenv
addr16
stc
clc
mov
and
not
out
loopne
lea
bound
mov
decl
or
push
inc
pop
test
or
andl
sar
xlat
mov
jo
cs
pusha
push
jnp
mov
sub
push
leave
jnp
adc
ror
add
stos
push
js
pop
clc
inc
add
mov
push
cmp
jge
push
testl
cmp
xor
add
inc
scas
xor
mov
pop
stos
sbb
and
adc
dec
pop
inc
jecxz
lods
dec
imull
movb
filds
push
dec
cli
mov
incl
add
mov
cld
jns
inc
testl
pop
jae
roll
movsb
mov
or
add
push
scas
ret
adc
cld
outsb
cmpsb
mov
jb
mov
push
jmp
imul
lea
mov
xor
ljmp
add
pop
jmp
mulps
add
repnz
jo
fnstsw
push
gs
rcll
divb
popa
add
mov
xorb
outsl
push
sbb
ret
imul
or
mov
loope
add
das
push
pop
mov
sub
mov
aaa
fstpt
add
stc
nop
inc
mulb
mov
stc
jle
inc
dec
imul
rcll
das
aad
or
push
dec
mov
lock
aad
xor
in
hlt
jb
sbb
fs
lea
mov
and
lret
mov
pop
lret
adc
mov
test
push
test
xor
out
in
push
lahf
dec
pop
xor
mov
arpl
or
iret
pop
call
aas
fdivrp
lea
gs
jmp
jmp
mov
jae
data16
int3
insl
xor
out
in
add
pusha
test
sbb
pop
cwtl
insb
movsl
mov
repz
test
pop
pop
xchg
fistps
pop
lock
push
aas
lahf
jge
insb
fwait
sub
stos
cmp
mov
in
add
xchg
cmp
leave
mov
dec
push
pop
and
xor
pop
repnz
push
xabort
arpl
movsl
lds
negb
or
sub
bound
mov
mov
xor
adc
fsubs
std
data16
inc
inc
add
fwait
or
aas
or
jl
lret
mov
repnz
sbb
pop
and
into
jecxz
femms
addb
repnz
sti
inc
mov
xchg
enter
sub
pop
cld
out
fs
mov
roll
xor
lods
mov
pop
and
ss
or
scas
in
or
sbb
xor
push
cmp
test
mov
push
lds
aas
in
loope
pop
incl
loope
cmpsb
or
hlt
stc
int
pusha
pop
and
in
hlt
gs
sub
pusha
outsb
stos
out
in
jg
or
push
xor
push
pop
cld
out
fs
aas
or
xchg
mov
sbb
lret
out
pop
and
fwait
sti
cmp
rcll
mov
jmp
pop
or
jmp
js
outsl
jg
or
insl
fistps
inc
out
pop
pop
xchg
push
sub
mov
icebp
repz
iret
lods
push
sub
cli
arpl
xlat
xor
mov
repnz
pusha
fistl
sbb
insl
movsb
in
idivb
lret
insl
mov
ja
cmc
or
mov
push
xadd
xchg
pop
pop
imul
inc
mul
addb
js
and
aam
fwait
lret
inc
mov
lods
cmc
and
imul
sahf
jecxz
push
dec
mov
and
push
and
icebp
inc
clc
jg
jmp
dec
lret
jmp
cmp
ss
insl
mov
incl
mov
mov
fcmovnb
mov
push
mov
out
and
stc
movntq
xchg
jecxz
add
xchg
in
bnd
push
dec
fisttps
lods
jns
stc
pusha
push
movsl
mov
jne
jo
cmp
mov
bound
push
and
push
decb
cli
daa
cmp
add
and
or
in
arpl
add
popf
mov
push
and
cmc
dec
xchg
push
push
mov
cli
mov
imul
test
pop
nop
les
mov
stos
jmp
xchg
cmc
mov
call
add
sbb
out
shll
jge
mov
xchg
jmp
dec
jns
data16
mov
xchg
test
pop
in
pop
fnsetpm(287
and
fs
add
loopne
imull
pop
fstpl
lahf
insl
mov
jl
and
mov
sub
fnstenv
push
lock
sub
mov
aas
lock
xor
xor
insl
rolb
fsqrt
out
std
mov
shrb
dec
jge
mov
shufps
pop
out
arpl
mov
inc
jae
add
push
mov
sub
mov
dec
ds
ljmp
sti
pop
push
fisubl
or
pop
mov
mov
hlt
leave
sbb
push
add
incb
pop
stos
aad
sahf
pop
iret
in
adc
rorl
fldl
jno
xor
icebp
sbb
fisttps
mov
and
xchg
repnz
sbb
sbb
fcmovnu
loopne
mov
adc
push
sub
out
dec
sbb
call
pop
push
imul
push
sbb
insl
push
es
outsl
insb
lcall
aas
adc
cmp
mov
into
jmp
pop
cmc
push
out
sti
jle
push
jo
sub
lahf
xchg
xchg
cli
sub
lret
or
push
arpl
cs
pop
push
sub
dec
or
mov
dec
xchg
jecxz
pop
jge
or
call
inc
or
lret
push
mov
xor
mov
aas
or
inc
filds
test
subl
mov
fildl
or
dec
incl
orl
cld
add
call
das
nop
dec
clc
insb
sarb
loop
dec
imulb
jno
ficoml
loop
es
flds
arpl
out
pop
rorl
add
xor
loope
decl
inc
pop
addb
lods
aaa
or
inc
pop
xchg
in
addb
sub
in
add
mov
adc
cmp
pop
sarl
cld
push
sbb
mov
push
mov
test
mov
dec
push
test
fucomip
pushl
push
xchg
inc
push
orl
dec
daa
adc
ds
out
cmp
xchg
loope
icebp
sti
testb
pop
pop
push
or
push
push
js
jle
jns
loop
icebp
shll
push
insl
add
add
push
push
add
push
mov
push
lods
cs
aas
sti
add
push
mov
les
std
pop
enter
inc
jle,pt
or
mov
aam
cmp
pop
repz
add
mov
xor
dec
sbb
sar
or
push
rcrb
inc
mov
add
sbb
xlat
rcrl
out
pop
push
mov
push
sbb
dec
rcr
imul
loop
mov
fsubrl
pop
sbbb
les
aaa
mov
sbb
mov
and
sbb
mov
mov
mov
aaa
mov
jns
jno
adc
aaa
mov
fildl
insb
out
push
xor
outsb
pop
jg
lock
push
arpl
push
insl
add
xchg
call
lahf
and
push
cli
push
shrb
adcb
rclb
lahf
dec
scas
out
xchg
lea
leave
je
add
or
popf
jmp
jg
mov
pop
cmp
lds
or
inc
icebp
out
jo
jecxz
jmp
notl
sbb
adc
jp
movsl
aad
outsl
out
and
jne
subl
jo
lds
xorl
bound
jmp
ss
rcrl
push
ljmp
sub
mov
ret
scas
clc
push
mov
std
popf
stos
sbb
loopne
push
adc
out
in
cld
mov
add
xchg
mov
in
xor
mov
jns
or
inc
out
sar
jecxz
loopne
inc
jae
stos
cmp
fdivr
xor
push
jp
in
pop
scas
fldt
inc
jae
out
sub
sbb
sbb
cli
fdiv
xor
lods
fisttps
jecxz
push
xor
fxam
stos
fisttpl
dec
cli
fstpl
and
lods
loop
inc
mov
int
dec
shll
mov
mov
je
mov
cmpsl
mov
in
fwait
xor
stos
mov
scas
stc
or
mov
pop
mov
daa
push
sbb
push
pop
daa
pop
imul
sbb
stos
pop
inc
cli
pop
push
sarl
jle
insl
loop
lret
pop
out
stos
cmpsl
lods
xor
fildl
adc
fildll
jecxz
pushaw
cmpl
fisttpll
or
leave
outsb
mov
xor
dec
mov
in
dec
adc
add
cs
cwtl
js
lds
add
push
mov
push
fwait
ja
aas
lock
fyl2x
loope
ja
inc
jnp
sub
aad
roll
jmp
mov
ljmp
mov
repnz
sub
jecxz
call
or
jecxz
fisttpl
movsl
mov
sahf
inc
xor
adc
jecxz
in
cs
inc
shlb
aaa
push
mov
adc
das
inc
cmp
and
sbb
fwait
sbb
mulb
sbb
or
fs
std
mul
inc
jae
insl
insb
push
loope
popa
rol
ds
iret
out
imul
insl
push
outsb
inc
insb
mov
cmp
mov
ret
lret
cld
dec
pop
pushf
mov
pop
test
mov
mov
or
mov
or
leave
inc
xor
xor
mov
mov
popa
jl
jns
mov
cmp
in
inc
cld
pushl
lds
mov
xchg
xor
and
mov
nop
sbb
pop
inc
inc
mov
sti
adc
add
add
sbb
bound
fsubrs
jle
fprem1
rclb
mov
mov
sbbb
or
jp
clc
jnp
stc
or
pop
orl
jns
jp
outsl
cmp
add
js
or
mov
xlat
or
out
mov
and
jge
cld
cwtl
subl
mov
or
jbe
gs
out
jnp
das
in
mov
cmp
sti
and
aaa
clc
das
sub
push
ss
imul
pop
int
cmpb
sub
insb
xchg
add
cs
xchg
push
push
add
jo
leave
jp
jg
mov
cmp
out
out
jp
ljmp
sti
lea
test
dec
dec
std
enter
fldl
push
push
mov
xchg
jle
jmp
mov
dec
loop
dec
xor
inc
or
das
push
dec
adc
stos
mov
outsl
add
sbb
fnsave
add
inc
adc
add
pop
cld
imul
inc
push
out
mov
cs
leave
rcrl
test
sub
adc
dec
inc
ret
std
fildll
xchg
jecxz
pop
in
add
daa
mov
mov
popa
loopne
sbb
push
cmp
and
inc
test
sbb
loope
xor
fisttpl
mov
adc
cs
lret
mov
fucom
xchg
xor
adc
in
lret
cmp
outsl
arpl
sub
xor
xor
out
popa
fdivrl
push
outsb
inc
test
iret
nop
jnp
adc
adc
in
jns
ja
jbe
jno
je
int
imul
insb
shll
xchg
movsb
jb
shll
cs
lret
in
je
jae
jo
jb
jae
mov
jne
je
arpl
int
imul
xlat
mov
dec
lea
shll
dec
xor
dec
sbb
jo
iret
lcall
leave
jne
loope
pop
jae
pop
das
jns
js
je
stc
jge
pop
cs
js
jp
jns
jbe
js
lods
jnp
lods
jbe
jnp
js
jns
jp
mov
outsb
adc
popa
pop
ja
adc
mov
jnp
lcall
inc
sub
sbb
adc
icebp
jns
xlat
xor
in
jnp
jp
int
adc
jnp
fisubl
or
jae
pop
jbe
mov
in
jo
jae
je
pop
ss
pop
fs
cmpl
mov
mov
shll
jp
js
pop
pop
jp
outsb
sbb
leave
out
jge
arpl
dec
rcr
adc
incl
sub
shrl
xchg
jae
test
lret
mov
js
ja
cmp
je
lods
daa
insb
xchg
jne
pop
ja
jge
jae
mov
mov
push
pop
inc
mulb
lcall
out
aad
fnsave
adc
imul
cld
mov
and
cmpl
int
adc
sti
outsl
cmp
or
sbb
dec
sbb
jae
fwait
gs
addl
jb
fldenv
push
jo
lock
imul
outsl
int3
stos
daa
arpl
fs
test
cmc
daa
jo
jbe
mov
jno
pop
lds
xlat
or
pop
mov
cmp
lods
pop
push
lcall
pop
pusha
insl
imul
ja
fsubl
stc
jne
adc
cmp
push
jbe
outsl
jge
lret
in
insb
mov
adc
jb
je
mov
sbb
and
jae
jne
imul
aad
int
mov
dec
xlat
xor
lahf
xchg
jnp
adc
ss
shll
sub
fs
pop
add
outsb
jo
xchg
jae
gs
into
jae
jecxz
ja
dec
mov
cmp
aad
sbb
cmp
scas
jne
and
cmpsb
fnstenv
jle
arpl
jnp
imul
pop
cs
or
dec
lcall
sbb
invd
int
mov
jmp
shl
dec
fdivs
jno
daa
or
ret
repz
adc
jbe
je
int
mov
inc
pop
popa
jne
lcall
mov
stc
xchg
ja
imul
adc
add
jl
xor
push
iret
jae
mov
lcall
xor
xchg
jb
je
pop
js
xchg
in
sti
push
outsl
bound
dec
imul
bound
arpl
mov
cmp
bound
je
imul
outsl
pop
pop
outsl
imul
pushl
test
clc
incb
outsl
xchg
pop
pop
ds
insl
jg
call
dec
jb
outsb
fs
arpl
incw
addr16
jl
pusha
push
push
jmp
ds
insl
std
test
inc
je
outsl
dec
push
pusha
pop
insl
fstl
inc
bound
decl
pop
dec
outsb
pop
arpl
ds
inc
decl
pop
or
cli
aas
popa
arpl
pop
inc
gs
cmp
dec
jg
filds
popa
outsl
inc
popa
insl
bound
outsb
jo
shll
dec
arpl
jmp
sti
insb
pop
push
insl
sbb
jo
in
imul
push
jbe
sti
addr16
std
xchg
sti
sub
ds
gs
xor
in
fbstp
inc
incl
pop
pusha
inc
mov
outsl
jb
or
fstpt
push
pop
inc
inc
pop
ja
lock
push
pop
addr16
lods
out
or
xchg
bound
jle
imul
cmp
jo
inc
addr16
outsb
mov
sbb
data16
lock
pop
and
mov
std
cmp
ret
pusha
push
pusha
test
loopne
fsin
push
pop
jae
imul
in
sbb
dec
pop
add
test
call
xor
inc
push
fs
fldt
mov
add
dec
imul
in
mov
movl
sbb
or
inc
clc
ds
pop
outsl
popa
cmp
arpl
xor
test
popa
inc
pusha
inc
inc
int
xor
pop
outsl
cmp
adc
incl
jo
aas
imul
fucomi
add
bound
cmp
jb
or
lahf
mov
push
cmp
inc
outsb
cmp
frstor
in
lods
dec
jno
jbe
pop
mov
incl
dec
cmp
xor
sub
imul
ficomps
add
sti
jne
repz
pop
clc
je
push
dec
pusha
jne
mov
call
arpl
pop
push
mov
pop
rolb
aad
inc
data16
push
arpl
pushl
and
dec
pop
addr16
pop
outsb
arpl
std
insl
mov
imul
pop
inc
xchg
imul
fdiv
popa
imul
pop
insl
xor
ret
daa
std
adc
pop
arpl
divl
jecxz
iret
idiv
aas
arpl
pop
data16
outsb
lods
popa
jbe
add
outsb
inc
dec
bound
sbb
push
jno
insb
dec
add
imull
clc
and
sti
inc
ret
cltd
negl
jae
pusha
inc
pop
fs
ret
dec
dec
inc
dec
cs
daa
jb
mov
gs
sti
push
lret
pop
inc
pop
push
andl
or
mov
mov
adc
pop
pop
outsl
das
daa
fisubl
inc
outsb
outsb
dec
mov
or
push
stc
and
imul
mov
dec
aas
aas
mov
inc
mov
outsl
and
in
arpl
sbb
dec
das
outsb
insl
ja
cli
dec
mov
inc
add
mov
mov
sbb
popa
repz
xchg
fisubl
dec
add
cltd
xorl
fisttpll
imul
jp
cmp
sub
cmp
icebp
cmp
mov
ds
inc
sub
cmp
push
cmp
sub
sub
rcrb
outsl
mov
fs
arpl
arpl
pop
push
sti
mov
pop
bound
jl
aam
fstpt
pop
bound
pop
insl
pusha
inc
gs
jle
mov
cmpsl
clc
popf
cmp
ret
lds
xor
jmp
divl
insb
dec
outsl
pop
imul
push
aad
pop
inc
test
jmp
mov
pop
std
dec
insl
lret
and
pop
mov
imul
pop
inc
jae
inc
popa
pop
daa
aas
mov
jae
sti
cmp
sti
das
lahf
ds
lcall
inc
push
insl
sub
arpl
or
cmp
pop
in
pop
sub
leave
insb
cmp
cmp
cmp
cmp
dec
ljmp
popf
cld
cmp
push
inc
dec
add
cmp
dec
xchg
sbb
test
in
cmp
sub
sbb
fcmovu
or
out
push
cmp
fdivr
pop
mov
inc
insl
outsb
cmp
cmp
pop
cmp
aad
adc
cmp
lods
std
or
pushl
pop
inc
cmp
pop
dec
insb
daa
mov
outsl
cmp
pop
xchg
outsb
addr16
pop
daa
add
jl
xlat
inc
dec
cmp
pop
add
fidivl
cmp
cmp
jb
push
insl
pop
mov
inc
lods
insb
imul
cmp
rcr
fisttps
inc
cmp
sub
cmp
sub
cmp
dec
cmp
movsl
das
adc
adc
cmp
ficomps
idivb
pop
pusha
or
or
dec
jbe
pop
fdivs
mov
aas
mov
outsb
lea
ja
ret
mov
adc
aas
insb
outsb
jp
dec
aas
pop
pop
cmp
inc
cmp
push
push
push
ja
pop
lea
cmp
sbb
adc
fldt
in
or
shrl
arpl
fildll
push
aaa
pop
popa
pop
insl
pop
inc
xor
movsl
push
das
dec
cmp
cmp
imul
mov
adc
popa
cs
or
lahf
dec
cmp
inc
aaa
mov
cltd
sub
jb
cwtl
insb
pop
pop
stos
insl
in
lods
pusha
mov
push
ja
outsb
mov
and
cmp
inc
insb
pop
cmp
imul
mov
ret
dec
mov
push
arpl
lock
jnp
jg
gs
test
inc
outsl
das
frstor
xorl
cli
push
insl
addl
sub
pusha
or
lods
lods
imul
pop
outsl
inc
pop
ret
out
mov
cwtl
clc
inc
insl
in
pop
pop
popa
call
dec
sub
lea
cmp
movsl
jbe
in
inc
inc
inc
rorl
std
stc
scas
and
mov
xchg
pop
std
lods
push
xchg
outsb
test
cld
nop
std
imul
push
std
xor
sbb
das
push
ds
xchg
sub
insl
xchg
imul
outsb
test
xchg
pop
sub
outsb
mov
scas
cld
mov
cli
pop
pop
cmp
ds
stos
mov
insl
xchg
inc
pop
mov
xor
pop
sub
pop
imul
push
sarl
jge
cld
pop
pop
mov
sarl
sub
sti
mov
pop
arpl
fisubrl
pop
lds
push
lea
inc
dec
push
pop
push
test
push
clc
jnp
imul
xchg
fmuls
or
fwait
cmp
je
jo
mov
pusha
mov
imul
fildl
jg
dec
inc
sub
mov
lods
aad
xor
imul
arpl
outsl
cli
mov
cld
pop
jne
fbstp
shll
cld
test
pop
pop
pop
add
lret
dec
xorb
je
mov
jp
jg
cs
lret
mov
imul
fdivl
int
jnp
lea
jl
in
mov
fidivrl
bnd
mov
sbb
daa
jge
pop
daa
shlb
mov
lds
add
sti
add
cli
push
jle
adc
add
add
add
jne
jbe
push
repz
arpl
pop
cmp
test
add
sub
pop
imulb
sbb
push
dec
arpl
js
jbe
sbb
mov
and
inc
pop
pop
pop
cmp
jae
inc
dec
fisttps
imul
aad
and
jno
push
popf
fsubrs
int3
push
aas
pop
pop
lds
in
jae
std
inc
insl
cmp
xor
mov
inc
jo
dec
pop
pop
daa
imul
pop
je
mov
orl
aam
rcr
fsubs
ja
cmp
jo
insb
or
sub
push
icebp
dec
pop
xor
push
jecxz
xchg
dec
pusha
lahf
inc
and
cli
es
dec
mov
mov
pop
imul
dec
sti
je
idivl
pop
std
xchg
dec
mov
pusha
push
adc
mov
jb
cltd
sar
and
xchg
clc
sub
or
pop
decb
cmpsb
pop
xchg
std
or
sbb
int3
jmp
cmpsl
xchg
std
ret
popf
mov
mov
mov
xor
fwait
mov
divl
mov
dec
nop
jg
ljmp
mov
sarl
jg
ljmp
in
repz
mov
enter
cld
das
fstpt
mov
lahf
rcl
ljmp
sti
xchg
mov
mov
aas
fs
lret
lahf
shl
cmpsl
mov
repz
stc
pop
repnz
test
mov
ret
xchg
psubq
dec
shl
in
mov
leave
mov
and
inc
scas
mov
shrl
enter
nop
pushl
jmp
lret
hlt
mov
test
jle
repnz
mov
mov
mov
in
int
shlb
shll
pushl
mov
ret
cmc
les
int
and
xor
fsubs
mov
fxam
mov
mov
dec
mov
lret
out
les
divb
scas
sahf
mov
testb
ffreep
mov
mov
mov
dec
lret
or
pop
lret
xlat
aam
sbb
fmull
lret
hlt
mov
xchg
mov
lret
mov
mov
mov
ret
mov
repnz
mov
jmp
mov
int
popa
mov
out
enter
out
mov
invd
fcmovnb
repz
aas
mov
mov
mov
insl
out
mov
jecxz
cli
nop
jmp
lods
bnd
lods
mov
cmc
pushl
in
ret
fildl
scas
in
mov
xchg
mov
mov
pushf
mov
icebp
cmpsl
iret
test
icebp
lahf
nop
pop
ret
mov
into
mov
fnstcw
mov
rcrl
idivb
jge
shlb
push
repnz
insb
xlat
lahf
les
lock
stc
punpckhwd
inc
ljmp
movsl
aas
in
ret
fld
in
lret
mov
dec
stos
mov
stos
fs
pop
repnz
mov
mov
lahf
push
and
jg
xor
iret
lret
mov
iret
mov
xchg
in
push
cwtl
sahf
sub
mov
xchg
jmp
test
mov
mov
nop
sbb
mov
and
les
mov
cli
frstor
fdivrl
mov
mov
dec
mov
insl
pop
repnz
scas
movsb
mov
aas
mov
popa
jns
pushl
psubw
test
mov
popf
mov
mov
jne
out
in
cmc
das
stc
fucomip
mov
ret
fidivrs
ret
cmc
inc
mov
ret
orl
mov
nop
outsb
arpl
ret
pop
mov
aam
mov
out
xchg
out
dec
mov
iret
mov
mov
or
in
outsl
ret
loop
into
andl
out
repnz
jl
movsb
stos
lret
das
mov
lods
movsl
mov
cld
pop
jg
shll
ret
in
ret
mov
iret
jl
jle
lods
xchg
lahf
scas
ror
clc
mov
xor
mov
into
stc
mov
daa
adcl
and
mov
loope
mov
pop
das
stc
xchg
adc
leave
test
lods
ret
es
stos
scas
lahf
clc
jg
push
int3
sub
xchg
jnp
out
lods
fmul
pop
mov
cltd
lret
mov
mov
psrld
cmpl
fmull
es
out
mov
sbb
loop
mov
mov
jle
mov
mov
mov
mov
mov
mov
pop
mov
jg
and
xor
lods
mov
in
lahf
mov
pop
clc
cmp
mov
mov
les
cmc
mov
push
mov
jne
and
lret
mov
in
dec
jmp
dec
pop
out
ljmp
arpl
cmp
das
stos
stos
cmp
popa
pop
mov
push
lea
subl
jbe
das
stc
addr16
enter
mov
rol
in
xchg
cld
ret
pop
icebp
stc
xadd
jmp
decb
fbstp
lods
mov
cltd
or
cmpsl
mov
stos
ljmp
mov
repnz
int3
cmpsl
int3
ljmp
fisttps
mov
sahf
pop
lcall
mov
dec
lret
dec
mov
or
movsb
mov
gs
add
fmul
mov
das
jmp
mov
mov
repnz
mov
mov
stos
shl
int
mov
rcrb
sbbl
jecxz
test
mov
mov
popa
mov
pop
ret
testl
ret
pop
ret
int
or
or
in
add
jle
xor
ror
adc
mov
in
sbb
mov
mov
mov
jno
lds
xchg
frstor
leave
mov
enter
shlb
mov
lahf
loopne
lds
lahf
ror
fdivs
mov
stc
pop
mov
mov
pop
or
mov
hlt
scas
jb
mov
sar
mov
mov
fdivl
dec
das
fucomip
ror
dec
dec
push
mov
mov
dec
setle
inc
mov
fildll
lea
frstor
hlt
xchg
iret
int
pop
mov
out
mov
stc
popa
xchg
lret
shrl
mov
ret
call
mov
mov
lahf
shrb
call
jge
fsts
xchg
xchg
orl
mov
mov
enter
mov
nop
mov
mov
sbb
sarb
enter
movsb
fisttpl
cmpsb
mov
mov
dec
sub
push
arpl
imul
mov
lret
cli
rol
clc
inc
in
pop
ret
fs
add
iret
jne
and
lds
movsb
leave
fists
mov
xor
push
imul
lahf
xchg
pop
lret
jle
in
ror
pushl
mov
mov
cmpsb
jno
push
add
lret
xchg
cld
inc
aas
into
mov
ret
in
stos
aaa
xchg
shrb
sarb
lret
das
ret
mov
xchg
push
popl
das
stc
aaa
sub
enter
leave
mov
mov
push
pop
mov
ljmp
test
jg
popa
lock
mov
ret
aad
and
nop
mov
mov
mov
dec
stos
imul
fistpll
xor
xlat
mov
dec
sub
out
mov
mov
pop
xchg
mov
push
stos
cld
aad
into
repz
jl
and
ret
scas
lahf
mov
aad
fldl
adcl
xor
out
popa
das
sbb
mov
fstpl
int
js
sub
jmp
mov
or
popa
mov
shl
bnd
mov
mov
cmpsl
mov
cld
psraw
test
shrb
ret
std
sar
xchg
inc
mov
mov
icebp
dec
jbe
das
call
lahf
lret
cmp
lods
in
ret
pop
dec
jb
in
pop
xchg
pop
bnd
into
aam
movsl
mov
lret
mov
call
mov
ret
arpl
fucomp
jmp
cmpsb
pop
iret
fdivr
iret
pop
in
xchg
leave
mov
fwait
mov
cs
fbstp
sbb
enter
jl
mov
enter
out
lahf
jmp
xchg
cld
lret
mov
mov
stos
repz
jl
pusha
fnstcw
aaa
sbb
sbb
mov
pop
add
iret
mov
popa
sub
movsl
das
iret
mov
fcmovb
pushf
repnz
loop
lahf
out
mov
lds
mov
mov
mov
sub
lahf
shll
mov
vcvtpd2dqx
dec
mov
mov
mov
pop
pusha
jns
mov
fistps
pop
repnz
scas
mov
leave
ljmp
mov
cld
mov
ror
repz
stos
out
mov
mov
inc
pop
lods
cmc
dec
shl
iret
mov
mov
lock
das
mov
push
push
or
stos
les
adc
jb
popa
scas
mov
mov
mov
out
pop
sub
test
scas
les
rcl
roll
pop
repnz
enter
pop
add
ret
lahf
out
scas
jecxz
lds
xchg
in
shlb
xor
into
pop
shlb
lock
popa
stc
mov
lods
sarl
sarb
jp
push
out
mov
mov
movsl
xchg
sub
daa
mov
subl
sub
fwait
mov
iret
fdivrl
pop
rolb
dec
popa
jg
mov
mov
jno
dec
mov
in
and
mov
lahf
dec
imul
divb
icebp
stos
repz
movsb
das
lahf
mov
mov
dec
das
mov
lock
mov
mov
jmp
ljmp
scas
or
aas
and
sbb
lods
scas
mov
or
mov
stc
add
xorb
add
mov
in
sub
pop
sti
dec
cmp
repnz
mov
lahf
mov
std
loop
or
push
test
add
out
pop
add
cld
inc
cli
int
mov
mov
fwait
add
movsb
xchg
lcall
adcl
outsb
mov
hlt
int3
out
shr
cmp
mov
add
aam
ret
outsl
shlb
insl
cltd
std
lret
repnz
iret
out
mov
sub
sbb
sahf
mov
sub
stos
gs
add
aad
imul
dec
leave
lret
in
test
pmulhuw
shrl
lods
das
dec
inc
lahf
mov
out
vmread
cs
ljmp
lods
mov
enter
lods
cmpsl
shrl
sub
lahf
cltd
int3
mov
lds
sub
sbb
loopne
es
loopne
fwait
mov
test
repz
mov
ja
out
stos
mov
fcompl
sbb
mov
and
scas
clc
data16
out
mov
shrb
das
mov
xor
in
sub
xorl
aaa
xchg
jl
stos
mov
scas
in
mov
dec
xchg
mov
or
popf
idivb
int
mov
sarb
mov
sub
jge
push
repnz
loopne
lods
aam
clc
pop
and
mov
mov
shl
outsl
dec
shrl
in
lods
fists
push
fbstp
mov
divl
movq
jbe
and
repnz
clc
xor
dec
cli
test
inc
sbb
add
loop
mov
shl
mov
leave
dec
pusha
ljmp
divb
pusha
outsl
or
daa
push
dec
push
cld
push
jb
idivb
jo
outsb
and
leave
fwait
mov
and
repnz
lock
popa
sbb
jg
repnz
or
cld
push
cmp
insb
cli
sbb
sti
jno
xor
sbb
daa
clc
outsb
std
xor
daa
and
pop
or
jb
pop
jae
clc
jg
stos
mov
jg
imul
sbb
iret
cld
insb
pop
outsb
pop
popa
jb
cmpsb
inc
sarl
sub
jg
arpl
pushw
es
jne
pop
outsl
push
dec
popa
pop
imul
sub
arpl
dec
pop
pop
sub
xor
inc
cmp
mov
cmp
sti
mov
dec
cmp
push
insb
pop
outsl
insb
insl
popa
pop
out
or
inc
lea
jb
push
inc
daa
cmp
outsb
add
adcl
inc
dec
dec
dec
cmp
cld
outsl
scas
push
clc
pusha
std
sub
add
adc
popa
imul
sub
push
pusha
imul
and
and
sbb
bound
push
and
and
pusha
imul
mov
mov
loope
jb
push
cli
lahf
mov
pop
pop
pop
outsl
pop
pusha
mov
push
cmp
test
insl
jae
insb
jnp
pusha
loop
jo
insl
insb
pop
pop
insl
pop
gs
jmp
push
insl
cmp
pop
fs
fildll
xor
imul
sub
gs
jb
cmp
inc
aas
inc
pop
push
mov
inc
dec
cmp
jo
cmp
cld
inc
push
push
pop
clc
stc
pop
imul
jno
lods
daa
imul
icebp
test
push
pop
outsb
pop
mov
pop
push
inc
ja
sbb
inc
inc
dec
cmp
inc
push
dec
outsl
test
or
or
adc
push
inc
inc
dec
sbb
sbb
dec
dec
sub
sub
add
subb
or
push
insb
daa
sub
pop
popa
and
add
sub
push
cmp
xorl
int
outsb
jmp
sbb
pop
imul
push
outsb
or
inc
push
imul
outsb
adc
aas
daa
lock
stos
pop
sub
dec
data16
pop
sub
sub
and
sbb
inc
push
cmp
dec
push
push
pop
mov
jae
and
add
insl
data16
pop
sbb
pop
dec
inc
pusha
bound
cmp
pusha
jno
add
push
repnz
inc
dec
sbb
dec
sub
cmp
pop
std
mov
lock
xor
imul
and
or
cmp
mov
inc
pop
aas
jo
mov
pop
cmp
imul
jge
xor
pop
sarl
push
insb
or
push
fcomps
outsl
mov
cmpsl
pusha
cmp
and
shrb
sub
mov
int
test
imul
sub
sti
sbb
xor
xor
jo
xor
mov
sub
push
js
sub
mov
outsl
aad
jne
pop
daa
das
sub
sbb
pop
pushw
pop
pop
data16
fisttpl
inc
pop
dec
outsb
push
dec
and
pop
pop
sub
adc
jbe
sarl
stc
outsl
inc
sub
sub
sbb
adc
outsl
pop
sub
pusha
arpl
ds
add
divb
add
arpl
sbb
fcoms
xor
sub
jno
xor
sub
jae
mov
sub
cli
pop
outsb
jne
popa
sbb
cmpsl
mov
sub
insl
imul
popa
push
xor
dec
imul
pop
push
pop
xor
out
mov
sub
mov
pop
cmp
std
pop
dec
jae
xor
arpl
inc
mov
cmp
sub
daa
sbb
sub
movsl
and
sub
lds
fistps
icebp
pop
sub
xor
xor
push
pop
das
sub
ret
aaa
in
test
sub
repz
lea
cmpsl
and
sub
mov
inc
mov
repnz
cs
out
outsl
inc
xor
dec
pop
imul
sub
pop
outsb
negl
pop
popa
insb
cmp
xchg
int
fistpl
pop
stos
fdivl
sub
je
pop
imul
int
mov
aaa
push
fwait
jo
sbb
pop
mov
inc
or
dec
push
imul
pop
dec
dec
inc
pop
popa
arpl
imul
pusha
repz
aas
bound
dec
cmp
ds
cs
dec
jb
popa
pusha
dec
notl
shlb
shll
inc
bound
pusha
insl
xor
int3
mov
inc
jecxz
pop
xchg
cmp
pop
mov
clc
dec
jo
inc
add
pusha
outsb
pop
dec
arpl
sbb
jnp
aas
sbb
popa
xor
mov
scas
cmc
inc
pop
imul
fldcw
cmp
push
ljmp
push
daa
pusha
pop
jne
jg
fistpl
dec
push
call
mov
dec
testl
push
inc
or
arpl
mov
push
pop
aaa
outsl
je
dec
xor
outsb
jecxz
jne
inc
lret
inc
outsl
dec
arpl
sub
cmc
imul
aam
adc
aas
rcl
mov
imul
ja
add
inc
test
into
inc
fistpl
fidivrs
aas
daa
arpl
push
lret
insb
imul
mov
xchg
lds
cmp
cmp
inc
ds
inc
inc
inc
inc
dec
test
cmp
dec
dec
dec
dec
dec
dec
mov
push
push
iret
ss
sbb
bound
xchg
aam
xchg
and
pop
shll
jg
mov
inc
cmp
cmp
pop
aas
es
inc
arpl
pop
adc
adc
gs
pop
clc
decl
mov
cmp
sub
dec
jne
pop
pop
outsb
push
push
jnp
arpl
adc
mov
inc
scas
aas
jecxz
pop
pop
jg
jmp
imul
inc
sub
gs
imul
btc
outsl
gs
push
cmp
cmp
imulb
adc
push
xor
jbe
jae
ja
xchg
adc
xor
pop
loopne
and
ds
ds
inc
sub
imul
fdivrs
cmp
pop
lods
jg
sub
jb
inc
cmp
push
aas
sub
addr16
fucomi
xchg
sbb
iret
outsl
cmp
add
outsl
aad
lds
jae
xchg
addb
pop
mov
aas
jg
std
add
incb
xor
std
in
add
or
sub
push
sub
iret
push
sub
mov
sub
pop
and
sub
and
jae
inc
add
sub
outsl
dec
in
mov
sbbb
adc
mov
dec
xchg
ja
pop
pop
les
and
outsl
xor
imul
insb
les
sub
dec
imul
push
adc
clc
aas
xchg
push
insl
rcrl
mov
jmp
dec
aaa
jno
mov
mov
fstpl
ss
loop
adc
ja
jae
test
jbe
mov
jbe
dec
insb
dec
popa
fisubs
sub
outsl
pop
arpl
fbld
je
pop
jb
cld
sub
cs
pop
arpl
pusha
inc
pop
cld
pushl
or
ja
add
sub
inc
sub
push
loop
ljmp
icebp
sub
sub
mov
mov
sub
pop
inc
test
cs
inc
sub
lea
cwtl
sub
ljmp
mov
sub
sti
das
or
adc
sub
cs
inc
pushl
jb
jle
mov
fwait
sub
das
fldt
add
xor
cs
sbb
inc
sub
xor
ljmp
imul
mov
mov
mov
sub
xor
adc
sub
fdiv
mov
xor
jg
adc
and
jl
outsl
xor
xorb
ljmp
adc
fidivl
jmp
xor
dec
xor
xor
outsl
xor
xor
xor
das
add
and
xor
xorb
or
lcall
xor
xor
xor
xor
xor
mov
pop
mov
xlat
xor
adc
dec
xor
in
das
inc
xor
mov
ss
xor
sahf
xor
iret
xor
ljmp
or
or
and
sub
cmp
xchg
cmp
aaa
jg
movsl
in
xor
cmp
ss
cmp
aaa
mov
mov
cmp
or
mov
cmp
aaa
mov
cmp
incl
fistpl
sub
mov
lock
clc
sub
das
xchg
sub
or
mov
xor
das
pop
fidivl
loopne
lock
pop
clc
neg
sub
pop
mov
cmp
lcall
pop
xor
jb
mov
xchg
xor
xor
xor
sub
inc
mov
pop
test
xor
push
xor
pusha
xor
decl
xor
xor
xor
xor
inc
das
in
gs
out
in
xor
xor
ss
xor
iret
xor
sbb
ret
adc
lea
cmp
cmp
ss
das
lock
inc
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
popa
cmp
nop
cmp
cmp
cmp
cmp
cmp
push
std
sub
movsl
ljmp
jnp
subl
sub
sub
sub
sub
sbb
pushl
je
jns
lea
rcr
sub
outsb
sub
in
in
jg
sub
das
out
sub
das
mov
sub
xor
sub
mov
ljmp
sub
xor
lcall
dec
rdtsc
pop
xor
sub
xorb
xor
sub
add
push
xor
in
mov
cmp
test
xchg
xor
xor
xor
comiss
in
dec
xor
jl
xor
xor
das
jmp
jecxz
pushl
xor
xor
fs
pop
jns
mov
pop
cld
fistpll
les
call
xor
jno
push
pop
xor
test
xor
cld
cmp
dec
xor
xor
call
xor
or
pop
and
push
cmp
xchg
pop
ss
mov
test
loope
cmc
ss
xor
add
aaa
xchg
mov
int3
cmp
and
push
aaa
bound
cmp
clc
mov
or
inc
cmp
outsb
cmp
aaa
jp
test
mov
cmp
cmp
aaa
push
cmp
cmp
cmp
xchg
aaa
popf
cmp
cmp
jmp
andl
sub
sbb
sub
adcb
inc
js
mov
cs
aam
fdivl
out
sub
ds
xor
ljmp
lret
das
outsl
sub
xor
das
scas
sub
xor
xchg
jle
mov
xor
sub
jae
das
jg
clc
movsl
pushl
test
nop
sub
insl
popf
xor
sub
xor
mov
pushl
push
mov
xor
cs
xor
testb
sbb
xor
inc
xor
gs
xor
pop
inc
fisttps
and
push
xor
jo
movsl
jle
pushf
xor
xor
xor
xor
xor
dec
outsb
mov
xor
push
xchg
xor
push
ss
loope
push
fdivs
xor
dec
push
xor
cli
hlt
mov
pushf
xor
xor
cmp
mov
aaa
sub
inc
xor
jle
test
mov
mov
mov
shlb
ss
xor
xchg
push
ss
cmp
incl
mov
cmp
xchg
cmp
xchg
cmp
outsl
mov
and
cmp
dec
jmp
sub
sub
sub
sub
xlat
sub
fwait
jmp
pop
fwait
adc
pop
das
jb
jne
cs
mov
das
cmpsb
sub
xor
das
enter
in
xor
xor
ljmp
xor
xor
sub
xor
xor
dec
cmp
jge
mov
xor
pop
mov
fsubrs
jg
pop
clc
subl
sub
cs
sub
into
fldcw
out
test
inc
sub
sub
sbb
pop
fs
jg
mov
iret
shrb
clc
sub
push
sbb
sub
or
inc
das
popa
pop
sub
imul
dec
pop
xchg
sub
xor
adc
or
inc
in
pushl
xorl
mov
test
adc
xor
cmp
clc
lods
adcl
dec
das
push
xor
cli
jg
xchg
sub
jg
mov
clc
sub
sbb
adc
adc
inc
pop
jmp
mov
mov
mov
mov
cwtl
xor
xor
repz
mov
pop
repz
mov
xor
les
aam
ret
call
xor
das
add
es
xor
addr16
call
int
and
mov
bound
imul
sub
cs
sub
mov
das
pop
jae,pn
xor
add
std
jae
xchg
lahf
test
mov
sub
sub
aas
and
mov
push
outsl
ja
ja
push
lds
jb
add
add
popa
incl
sub
pop
add
insl
gs
popa
jg
int
push
and
push
push
inc
push
inc
pop
inc
insb
imul
pushl
and
je
jb
aam
or
mov
mov
push
jb
adc
and
arpl
data16
insl
int3
cmp
xor
push
fsubr
lret
je
gs
dec
imul
dec
imul
fisubl
push
push
push
outsl
xchg
push
dec
inc
popa
arpl
pop
cs
sub
fs
je
arpl
fs
mov
fstpl
and
jo
jae
arpl
arpl
imul
xchg
and
mov
sub
popa
bound
and
adc
jo
jbe
scas
loope
or
jbe
and
jns
cbtw
mov
jbe
push
and
inc
jo
adc
push
fnstsw
add
in
push
fdivl
je
and
sub
push
pushf
pop
pop
and
daa
dec
push
aas
jb
mov
arpl
and
inc
outsl
outsl
je
inc
sti
insl
pushl
outsl
outsb
imul
jae
faddl
inc
daa
inc
gs
fcoml
push
push
inc
bound
std
mov
and
gs
popa
push
ds
pop
inc
js
divb
fisttpl
push
adc
jns
dec
cmc
data16
in
jo
adc
fs
imul
insb
andl
jne
dec
dec
mov
inc
xor
push
fstpt
je
dec
lods
inc
jne
jb
adc
dec
pop
in
in
mov
imul
sub
push
inc
push
or
dec
cvtdq2ps
lret
jne
sbb
dec
jae
fidivrs
jae
shll
movd
pop
rclb
fdivrs
jae
push
insl
mov
jbe
or
arpl
dec
push
and
fs
daa
push
sti
imul
insb
sti
lea
mov
and
imul
xchg
pop
insl
jae
and
pushl
push
xor
insl
aaa
xor
xor
insb
dec
jbe
dec
iret
or
pop
out
add
push
lret
test
xor
xor
add
add
xor
add
or
cmc
pop
arpl
pop
sarl
adc
and
fwait
adc
in
out
std
mov
adc
aas
fdiv
add
es
and
in
addr16
fadds
ja
out
mov
imul
push
sub
adc
fdivrl
add
addr16
push
add
add
pop
or
and
out
scas
stos
jg
xlat
in
add
add
mov
add
sub
mov
outsl
and
dec
rclb
add
call
mov
pop
jbe
inc
movd
pop
loop
jmp
lcall
fidivrl
inc
fdivr
jb
sub
sbb
add
add
cld
xor
push
outsb
decl
ljmp
repnz
repz
ret
insl
rcr
cmp
loopne
fisubl
xor
push
cli
and
lock
in
jb
pop
sub
incl
in
out
loope
loopne
xchg
lret
lret
mov
push
sub
aas
add
add
add
add
push
add
push
xor
outsl
les
pop
push
arpl
push
pop
sbb
movsb
xchg
adc
pop
inc
dec
inc
push
insl
sub
or
add
push
push
sub
mov
in
adc
jg
xchg
incl
rolb
nop
add
add
sub
cltd
shlb
enter
jns
add
push
sbb
dec
cld
add
add
add
imul
jg
sub
call
add
mov
add
fbld
add
jb
jbe
sub
add
mov
cs
jbe
add
push
lcall
inc
jb
popa
je
inc
imul
outsb
addr16
or
imul
inc
insb
jne
push
notb
insl
and
je
push
imul
or
jo
insb
outsl
jae
dec
popa
outsb
fs
fcos
pusha
sub
inc
jb
outsl
jb
inc
je
jb
mov
jle
bound
jae
outsl
jbe
inc
js
and
notl
jo
dec
popa
insl
push
inc
or
lods
imul
push
dec
arpl
pop
dec
jo
outsb
or
dec
lds
sub
inc
outsl
jne
je
or
mov
xchg
pop
push
lods
xor
jo
outsb
outsw
adc
sbb
lods
jnp
fnstenv
mov
adc
into
mov
adc
inc
mov
and
es
push
mov
arpl
xchg
fbstp
stos
jae
outsl
outsb
aad
inc
fistl
jle
fs
dec
outsl
popa
fs
add
jns
fstp
push
jns
testb
outsl
mov
mov
adc
or
faddl
hlt
push
outsl
outsl
insb
shll
xor
jo
add
sbb
inc
dec
stos
inc
pop
in
xor
add
imul
out
dec
bound
sbb
nop
jmp
push
outsl
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
pop
mov
sti
mov
decl
or
and
or
jg
add
mov
jp
call
and
incl
sbb
pushl
or
repz
and
inc
sub
mov
push
push
jns
aaa
xor
jmp
call
adc
xchg
sbb
insl
xorl
das
mov
xor
xchg
lock
push
icebp
adc
add
mov
mov
push
test
jno
mov
add
push
push
dec
mov
fistpl
out
movsl
dec
mov
mov
adc
in
or
or
push
andl
shlb
or
out
mov
inc
das
popa
mov
pmullw
xor
std
jecxz
mov
or
fbstp
pop
push
sbb
pop
cmovnp
js
mov
or
insl
mov
sbb
pop
mov
lods
pop
sub
ds
push
xchg
outsl
xor
int
add
idivb
addr16
arpl
outsb
or
fcmovb
arpl
je
subb
xchg
fnstenv
pop
or
insb
or
in
pop
out
insl
bound
scas
ja
or
jbe
mov
sbb
outsb
arpl
inc
jne
mov
inc
js
inc
jb
dec
aam
jo
iret
mov
data16
insl
mov
mov
jae
sbb
and
popa
loopne
pusha
xor
movsl
add
adc
xor
jp
xchg
jne
jo
or
or
mov
add
out
inc
aaa
jne
mov
les
fs
sahf
fcmovbe
cmp
xor
popa
adc
dec
lods
fst
rclb
xchg
imul
pop
xlat
in
jae
inc
or
inc
mov
fstpt
mov
mov
inc
jp
pop
pushf
adc
ret
ficoml
push
pop
test
push
push
jo
jb
cmpsl
pop
fistl
mov
fstl
and
push
jo
and
lock
push
xchg
aaa
outsl
jns
jne
in
sub
dec
imul
and
dec
add
sbb
pop
ja
mov
std
ret
sidtl
add
mov
jl
int3
adc
adc
fstpl
pop
push
das
adc
adc
mov
dec
xchg
push
aaa
mov
jnp
inc
mov
loope
js,pn
pop
fsubrs
daa
nop
jmp
and
jb,pn
popa
push
cmp
inc
out
xchg
dec
add
cs
mov
in
pop
xchg
jnp
xor
or
repz
lahf
mov
sbb
stos
inc
add
add
addb
inc
add
incl
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
