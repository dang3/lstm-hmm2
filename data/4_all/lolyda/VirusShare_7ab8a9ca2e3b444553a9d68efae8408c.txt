mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
pop
sbb
out
sbb
add
or
lods
mov
outsl
pusha
outsb
mov
cmp
sub
repz
ud1
inc
add
fsubrl
sar
push
fcompl
pop
add
pop
outsb
jg
ljmp
xor
mov
and
push
fs
pushf
jl
or
and
adc
lea
test
push
fidivs
mov
inc
xor
or
pop
lahf
faddl
sti
outsl
sbb
add
test
je
mov
std
mov
adc
push
xor
mov
add
add
xchg
fs
or
jne
and
call
mov
jnp
or
dec
push
xor
lea
adcb
loope
mov
rclb
mov
orl
repnz
in
ret
sbb
sbb
shrb
add
adc
in
fadds
fadds
sbb
outsl
out
lahf
or
test
jne
sbb
lea
shr
pusha
mov
jno
xor
in
sarl
jmp
jns
or
jne
lret
push
pop
cmp
sbb
neg
add
or
sub
insl
pop
mov
push
or
iret
insb
mov
inc
pop
pop
adc
adc
xor
mov
and
jno
test
push
fbstp
in
or
lods
rcr
fwait
sub
mov
fnstsw
xor
jle
mov
cmp
adc
sbb
jbe
mov
push
mov
push
outsl
add
adc
in
jmp
jg
jecxz
fdivr
xor
dec
inc
add
add
cmp
mov
jl
mov
mov
ja
lea
push
add
stos
stos
stos
push
test
push
inc
push
push
lcall
or
or
div
push
cmp
les
mov
push
fcomps
test
out
dec
stos
idiv
ss
push
in
into
mov
mov
or
shl
add
inc
mov
mov
repnz
not
sub
lea
mov
push
sbb
rep
pop
push
and
mov
movsb
stc
inc
imull
and
pop
push
push
lea
scas
push
pop
sub
sbb
mov
inc
lret
sbb
cmpsb
adc
xor
push
in
dec
cmp
pop
test
loopne
popa
scas
mov
sbb
mov
push
push
jmp
fcomip
je
cmc
add
je
mov
jmp
xlat
bound
ds
repz
lock
incb
clc
dec
cmpb
jne
add
mov
adc
add
andl
sti
pop
ja
out
dec
add
adc
test
mov
jge
push
or
std
mov
push
sub
push
ss
mov
push
sbb
pop
dec
or
cmp
sub
sub
lock
pop
xor
iret
pop
in
jne
mov
ret
xor
or
or
xor
fwait
add
or
ja
sub
rorb
add
push
xor
xor
mov
popa
les
mov
adc
pusha
ret
push
sbb
mov
inc
mov
imul
mov
in
or
push
xor
rcll
rolb
fstps
mov
xor
ret
xchg
hlt
push
pop
mov
mov
xchg
fimull
xchg
sub
repz
pushf
inc
ja
mov
push
or
sub
or
inc
xlat
adc
push
mov
subl
xor
inc
inc
cmp
jo
rdpmc
repz
xchg
jge
inc
lock
adc
dec
jle
fstpl
aad
cmp
add
aas
xlat
outsb
dec
inc
incl
lea
push
push
lea
or
frstor
push
test
lds
mov
pop
push
dec
cmp
xlat
push
push
jns
push
adc
pop
fcomp
in
mov
xor
pop
and
pop
ret
cmp
and
cmp
ss
add
push
xor
or
adc
mov
push
push
adcl
mov
add
int3
aaa
dec
outsl
or
push
lret
add
lea
out
pop
lock
imul
ret
lods
or
or
fidivrl
cmp
mov
ret
idivb
mov
into
and
or
xor
flds
and
popa
mov
fadds
jns
sbb
push
push
add
or
shlb
xchg
xchg
arpl
inc
addr16
mov
or
or
dec
inc
push
movsb
out
dec
adc
adc
mov
adc
in
sbb
insl
fistl
lea
pushf
push
xchg
sbb
mov
inc
push
push
jne
mov
cli
xor
ret
sar
sub
inc
in
or
pushl
repz
cmpb
jne
test
jle
insl
jnp
sub
dec
jns
add
call
jl
add
out
or
fcoml
rorl
mov
mov
push
sbb
jmp
mov
mov
fwait
add
xchg
movsb
adc
sub
xor
jmp
cmp
jecxz
lret
filds
mov
dec
fcompl
outsl
ja
mov
xchg
sbbl
cltd
sub
sub
bound
test
or
sub
test
mov
pusha
adc
push
lret
dec
push
sub
inc
push
fwait
dec
push
cmp
into
pusha
push
scas
shl
das
adc
xchg
test
bound
dec
call
scas
orb
popf
clc
ljmp
icebp
dec
push
stos
rorb
mov
cmp
daa
push
addr16
mov
sbb
enter
and
and
adc
jne
xor
add
imul
lods
push
fcoms
xor
push
inc
outsl
push
push
push
dec
xchg
cmp
pop
pop
mov
mov
inc
or
xor
loopne
int3
das
adc
arpl
sub
in
cmp
push
and
sbb
xchg
in
fcoml
sbb
inc
loope
loopne
add
mov
or
mov
mov
addr16
xchg
pop
testl
jno
dec
out
mov
inc
push
mov
xor
adc
push
subb
pop
scas
into
push
xor
inc
mulb
mov
aaa
and
or
adc
adc
adc
pushf
lock
cs
addl
add
push
push
xchg
sub
dec
xchg
jp
or
ja
add
cmp
int3
cmp
or
mov
add
sub
add
fwait
push
or
push
inc
lock
mov
cmp
xor
sbb
rorb
cwtl
and
mov
add
inc
mov
pop
mov
add
or
or
and
mov
jae
sub
adc
jmp
ss
mov
dec
xor
sbb
mov
shlb
adc
push
mov
mov
push
data16
in
insb
or
aaa
clc
and
adc
add
mov
jb
and
sub
ret
dec
mov
push
mov
and
add
stc
outsb
movl
jb
inc
or
pop
int3
inc
sbb
nop
adc
xlat
bound
jmp
dec
sub
xchg
frstor
jl
xor
xor
sbb
mov
icebp
push
push
adc
testl
pusha
test
or
std
xchg
outsl
test
adc
mov
movsl
dec
das
sti
jp
arpl
push
sub
xlat
inc
mov
push
add
js
enter
call
js
mov
mov
pushf
add
lods
cmp
adc
or
dec
call
and
or
das
mov
xchg
int3
lock
sub
mov
insl
bound
lods
pushf
test
addr16
sbb
insl
jbe
or
and
inc
pop
or
mov
jmp
push
pusha
push
movl
dec
cltd
pusha
sub
add
xlat
bound
or
fmull
pop
int
les
pusha
mov
xor
sbb
in
sbb
mov
inc
pushf
fisubs
fs
mov
inc
data16
jbe
scas
and
or
mov
sti
lcall
stos
or
sub
adc
loopne
fidivs
push
outsl
pop
dec
and
dec
xor
orb
imul
mov
leave
scas
push
daa
test
mov
push
pop
test
push
fs
dec
jl
ljmp
clc
adc
mov
pushf
mov
mov
ret
out
shl
jle
lahf
nop
dec
add
adc
fmull
shlb
adc
xchg
insl
loopne
lcall
dec
in
cwtl
mov
adc
mov
xchg
and
fucomp
pop
cmp
pusha
jecxz
lock
test
adc
cmpl
push
inc
out
fwait
sbb
mov
iret
mov
adc
mov
or
test
push
and
mov
sub
fildll
test
or
mov
decl
fdiv
jo
jne
clc
dec
hlt
lock
mov
jle
adc
shrl
inc
test
fwait
loopne
sub
add
clc
out
sbb
mov
or
pop
adc
push
sahf
movsb
stc
jbe
ja
jnp
pop
pop
fs
mov
sahf
xor
push
or
inc
pusha
ret
pop
jno
ret
push
push
fs
dec
mov
add
outsb
pusha
icebp
xor
adc
jb
sti
mov
dec
sub
pop
pushf
xor
mov
sbb
pusha
stos
hlt
fcmovb
push
clc
shll
mov
xchg
mov
fwait
push
add
xor
pushf
sub
and
inc
out
rcll
and
mov
inc
in
pop
fs
dec
in
dec
rolb
jns
dec
sahf
cmp
cmp
sbb
add
inc
jo
repnz
and
iret
inc
leave
xor
pop
sbb
xchg
cmp
and
repnz
sub
and
inc
leave
sbb
or
sub
pushf
pop
loop
out
clc
scas
repnz
xchg
xor
mov
mov
call
inc
push
dec
sahf
adcl
lock
push
ss
lock
leave
add
ficoms
frstor
mov
dec
push
add
cli
repnz
sarl
jo
leave
mov
and
mov
mov
in
stos
addr16
cmp
div
pop
out
xor
or
mov
jns
imul
rcll
cmc
xor
inc
ret
jb
push
aad
adc
jne
ret
ror
es
jle
sub
orl
mov
stc
and
cmp
daa
fistpl
adcl
sub
movsl
mov
sub
xor
in
mov
arpl
sub
jnp
jnp
loope
lea
or
mov
jge
or
outsl
pop
scas
xor
mov
dec
adc
je
pop
mov
mov
idivl
out
add
repz
xor
insb
cli
sbb
and
test
movb
adc
xchg
mov
mov
invd
sub
adc
mov
popa
sar
xchg
push
daa
jae
sbb
inc
rcrb
or
cld
repnz
or
adc
jae
sbb
push
fmull
jmp
xor
js
or
inc
adc
lea
andb
or
sbb
js
mov
cmp
clc
xor
rorl
mov
aad
adc
call
insb
je
jmp
add
insl
and
xor
jae
mov
loope
daa
jne
push
sti
incl
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
push
and
mov
in
inc
cmp
jg
arpl
mov
lods
cld
add
lock
in
xchg
xchg
xchg
xchg
ror
xchg
mov
xchg
enter
mov
mov
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
push
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
lahf
iret
xchg
xchg
add
cld
inc
clc
inc
rolb
jl
test
inc
mov
inc
enter
xchg
cwtl
pushf
mov
movsb
test
mov
enter
mov
xchg
xchg
xchg
enter
arpl
in
adc
and
in
lock
test
cmp
sbb
sbb
mov
adc
mov
pop
cmp
aad
scas
ret
and
mov
pop
add
pusha
popf
loope
ret
push
xor
add
in
insb
rolb
xchg
cmc
out
lcall
call
cld
fstps
hlt
inc
orl
mov
adc
inc
dec
fmull
or
cld
fmuls
data16
out
lahf
in
xchg
cmpl
loopne
insb
out
push
sbb
std
std
xchg
xchg
aam
inc
xchg
lea
test
or
pushf
push
add
mov
xor
fldl
outsb
xor
mov
sti
and
inc
or
add
or
mov
add
jbe
aam
dec
movsb
cld
fdivrp
rclb
add
movzwl
jmp
sub
jbe
xor
cmc
push
pop
pusha
push
push
and
std
jg
imulb
xchg
cwtl
xor
inc
in
mov
mov
mov
mov
and
mov
push
push
insb
inc
xchg
add
and
add
enter
das
mov
ret
inc
lock
in
inc
lahf
mov
jg
xor
adc
test
mov
mov
mov
push
and
pop
cltd
stos
jne
fsubr
xor
jo
clc
in
or
jb
mov
inc
lea
into
icebp
cmpsb
inc
adc
out
int3
add
jle
daa
mov
bound
and
lea
add
xor
jbe
test
and
sbbb
push
sbbl
add
je
jbe
dec
add
pop
and
or
dec
js
dec
add
xor
xchg
test
lret
lcall
lods
mov
imul
push
iret
ss
shrl
push
inc
dec
jnp
adc
lret
in
add
adc
pop
or
or
mov
cs
adc
mov
lret
lea
or
adc
jb
in
lcall
mov
jp
fldt
int
xor
adc
add
add
scas
jmp
data16
dec
cmp
or
sub
pop
mov
inc
push
adc
aaa
inc
out
arpl
btsl
shlb
xchg
xlat
jne
jmp
sbb
xchg
daa
push
addl
pop
cmp
lcall
imul
or
icebp
divl
je
mulb
pop
mov
inc
add
mov
pop
dec
xlat
jne
push
push
addr16
movsl
lcall
mov
adc
lret
scas
jmp
inc
adcl
push
sar
or
jne
addr16
out
mov
inc
aas
dec
psrlq
cmp
fcmove
dec
shll
push
ss
shll
dec
inc
xor
dec
sub
cmpsb
pop
into
les
lcall
adc
add
and
adc
je
out
hlt
dec
inc
add
dec
shll
jle
pop
dec
xlat
xor
dec
or
sub
cmp
cmp
and
inc
add
add
cs
inc
adc
pop
inc
loope
or
adc
push
mov
inc
mov
sbb
push
imul
adcb
add
pop
jo
fs
dec
shll
push
add
cmp
xor
xor
sub
imul
shrl
add
das
clc
repnz
out
dec
shll
fcmovbe
into
enter
rol
mov
inc
and
rclb
nop
pop
inc
popa
repnz
and
str
mov
or
and
or
shlb
and
pop
and
xor
and
aas
push
add
cmpsb
imul
cmpsb
imul
and
sub
into
stos
lock
push
add
xor
out
call
lcall
inc
popa
cmpsb
imul
mov
xchg
jae
xor
xor
arpl
jecxz
xor
imulb
rolb
xor
inc
orb
js
nop
xor
leave
mov
xchg
cmp
dec
xchg
dec
enter
es
push
push
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
add
xor
mov
inc
push
inc
push
dec
xor
cs
insb
pop
push
xor
inc
fdivs
sbb
inc
push
xor
jg
in
mov
sar
scas
mov
clc
std
stc
cli
inc
mov
idiv
std
add
clc
cmp
stc
les
nop
sti
cld
or
or
mov
mov
dec
sbb
pusha
outsb
push
push
pop
imul
insb
insl
sbb
pop
in
push
ljmp
sbb
sbb
dec
dec
sbb
pop
bound
call
lcall
outsl
inc
outsl
cs
pop
sub
adc
adc
inc
xor
pop
xor
pop
stc
out
mov
sbb
and
adc
das
daa
pop
xor
outsl
mov
sub
and
pop
mov
stc
cmpsb
imul
sub
mov
cwtl
dec
aas
adc
add
shlb
dec
data16
push
xchg
push
sbb
push
inc
mov
and
sbb
incb
cld
sti
sti
pop
lcall
flds
xchg
add
adc
or
sub
or
lock
lock
xlat
or
jbe
movsl
mov
sbb
sti
sub
and
jb
arpl
dec
xchg
or
daa
push
add
pop
sub
pop
outsl
pop
xchg
or
push
mov
cmp
popa
pop
outsb
pop
cld
cmpsb
jne
ss
imul
pop
fisttpl
push
jne
or
mov
cmp
or
xchg
jmp
out
clc
dec
xchg
xchg
inc
push
std
pop
jg
or
inc
pushl
inc
add
dec
dec
stc
adc
std
mov
cmc
rorl
cmp
idiv
push
jmp
arpl
std
das
outsl
aaa
arpl
cli
dec
dec
cli
adc
pusha
sbb
inc
dec
out
outsl
add
pop
cmpb
sub
gs
pop
mov
jge
jg
sahf
idiv
sti
idiv
push
bound
xor
dec
out
test
movsl
movsl
mov
mov
inc
pop
mov
decl
xor
cli
sti
pop
xor
insl
inc
cmpl
data16
push
or
mov
data16
mov
lods
addr16
shrb
jmp
push
add
testl
cli
or
mov
cld
outsl
fistps
cli
adc
rorl
mov
adc
out
fildll
dec
push
push
adc
outsb
inc
xchg
loop
xlat
mov
mov
ret
addl
nop
out
mov
cld
adc
pushl
mov
sbbb
fldt
gs
mov
jbe
test
cmpsb
fs
xchg
test
dec
push
adcb
fwait
lods
jl
xor
arpl
mov
loop
dec
cmp
outsl
clc
int
jns
dec
dec
dec
pusha
mov
dec
in
dec
std
xor
aaa
lock
push
in
sbbl
in
cmpsb
bound
mov
jg
andb
out
cmpsl
pop
cmpsb
test
jb
idivb
test
notl
dec
push
test
dec
adc
mov
gs
push
xor
adc
jl
adc
lcall
sbb
mov
mov
loop
stc
test
mov
arpl
mov
push
cld
mov
mov
jle
test
xchg
cwtl
cmp
fstpt
cmpsl
dec
or
pop
ljmp
test
in
lock
or
mov
cld
mov
mul
out
sti
lret
icebp
dec
jp
adc
stos
std
ja
jnp
adc
daa
iret
inc
stc
push
push
out
sti
xchg
jl
dec
or
aas
jle
push
jo
xor
call
jg
dec
xchg
imul
xchg
loopne
cmp
in
pop
inc
cli
cmp
adc
inc
hlt
in
mov
outsl
or
sbb
jnp
mov
mov
push
jecxz
outsl
xor
adc
ja
stc
dec
cmp
lret
xchg
test
popa
push
test
jns
jb
hlt
lock
dec
dec
cld
push
dec
insb
stc
jle
add
into
dec
pop
inc
fsubs
incl
mov
jecxz
mov
inc
stc
jecxz
je
lret
loope
push
xor
ja
mov
dec
push
in
incl
cmpl
fildl
mov
push
pop
in
mov
dec
push
pop
sti
or
or
lahf
dec
inc
mov
decl
mov
cltd
dec
and
pop
push
push
mov
lock
std
incl
addl
pop
push
data16
pop
roll
add
push
stc
xchg
push
mov
test
mov
test
outsl
notl
nop
imul
cld
mul
das
sub
daa
pusha
xchg
jecxz
daa
xor
test
inc
mov
dec
xchg
addl
jecxz
hlt
repz
dec
dec
popa
cmp
xchg
or
sub
sub
jg
or
add
sti
or
ret
std
sub
jecxz
sarl
jae
inc
sbbl
in
fistl
ljmp
inc
out
in
ja
jmp
cmpb
xchg
xchg
jg
inc
or
notb
cmp
pop
imull
jnp
cmp
ja
imull
data16
stc
jo
loop
inc
roll
add
nop
dec
fstpt
sub
mov
in
push
dec
push
dec
dec
pop
push
pop
cli
das
notl
aad
sbb
icebp
or
pop
dec
pop
push
pop
jae
xor
in
dec
push
sub
aas
and
or
inc
aad
pop
jnp
imul
testb
insb
inc
mov
cmp
push
stc
jle
std
not
push
dec
test
dec
sub
or
inc
out
xchg
dec
or
dec
dec
or
or
mov
call
dec
pop
mov
jo
dec
or
pop
mov
repz
popf
pop
sbb
xor
mov
mov
cmp
daa
imul
xchg
sub
ret
lock
and
pop
push
push
les
xchg
movsl
and
dec
dec
lret
aaa
dec
clc
divb
inc
inc
testb
xor
iret
adcl
in
add
data16
sbb
cld
leave
sti
sub
cwtl
clc
dec
loope
pop
mov
fisubrs
daa
cwtl
loopne
add
arpl
mov
mov
incl
jg
in
out
sub
cmp
shlb
jl
dec
aaa
addl
test
std
lcall
popa
add
mov
cs
pop
fldlg2
movsl
popa
cmpsl
mov
insb
xchg
fs
addr16
shl
push
add
arpl
add
sbb
adc
fcompl
rcrl
inc
dec
stos
iret
xchg
dec
xlat
push
dec
mov
push
rclb
addb
shl
dec
mov
or
sbbb
push
xor
push
outsb
xor
and
adc
sarl
loop
inc
or
hlt
outsb
test
imul
sbb
add
adc
mov
sub
add
ret
ja
add
leave
out
add
leave
or
in
add
push
pop
pop
in
push
test
dec
arpl
loope
ss
jno
ret
sbb
jo
add
mov
popa
sbb
hlt
out
and
sbbl
loop
sbb
lret
xchg
mov
std
stc
fs
or
mov
shrl
mov
test
lea
lcall
ret
ljmp
add
aas
icebp
pushf
nop
xchg
divl
bound
adc
mov
add
aad
lret
syscall
sbb
or
clc
mov
xchg
mov
jb
aas
xor
rclb
dec
xchg
fwait
mov
je
pusha
jnp
or
sub
ja
mov
mov
sbb
pop
mov
cli
dec
cmp
loopne
mov
mov
std
sbb
cli
push
xchg
test
mov
mov
out
and
popf
pop
bound
xor
std
sub
mov
xchg
fidivrs
jl
cmc
dec
dec
pop
xchg
mov
call
lcall
mov
add
loopne
daa
jne
sbb
lock
pop
add
repz
out
mov
mov
jecxz
cli
push
jo
out
pop
repz
ret
ret
pushl
jb
xchg
filds
mov
jl
push
mov
add
call
add
les
jo
xchg
in
jno
pushl
out
xor
pusha
out
push
idivl
mov
mov
daa
lahf
les
cmp
insl
jecxz
mov
test
xor
ss
sub
jbe
outsb
or
add
orl
pop
mov
push
jle
outsl
or
xchg
inc
push
xchg
call
insb
sub
adc
sarb
jnp
decb
sar
in
aaa
icebp
ljmp
call
inc
call
sbb
jmp
sti
add
jecxz
inc
mov
repnz
outsb
jns
ret
mov
ss
arpl
xor
mov
xor
mov
jg
jno
xor
std
pop
push
xor
or
mov
lret
and
push
mov
ss
cli
push
gs
fwait
adc
imul
loopne
fnstenv
cli
mov
xor
add
shrb
in
stc
insl
fbld
dec
inc
or
ja
pop
cli
ret
subl
cmc
or
popa
pop
rorl
out
es
add
sbb
cmpsb
mov
dec
xchg
add
cmpsl
xor
popa
push
jno
in
mov
jecxz
sti
jno
jle
mov
xor
adc
es
jecxz
loopne
jmp
xorl
or
jl
out
std
mov
ret
adc
pusha
sub
arpl
mov
jecxz
test
sti
jle
hlt
and
lret
repnz
dec
dec
test
ret
fucomi
mov
ja
inc
out
push
ret
ds
xchg
testb
std
mov
stc
stc
cmp
sbb
mov
mov
fnsave
test
js
lcall
sbb
add
jb
movsl
xor
icebp
cli
aaa
sub
mov
jl
mov
lea
adc
jnp
test
mov
sti
inc
hlt
incb
jb
dec
push
out
xor
test
jg
repz
xchg
lret
in
jp
ja
pop
clc
inc
sti
or
repnz
out
mov
add
test
xchg
and
popa
inc
cmpb
int
add
insl
add
mov
shl
negl
cmc
jb
mov
dec
fdivl
fistl
out
les
lock
cmp
out
mov
cmc
popa
xchg
mov
into
loopne
or
comiss
mov
shl
data16
scas
addr16
add
mov
loopne
jne
xchg
pop
int3
dec
xchg
fisttps
inc
pop
push
out
cs
pusha
pop
inc
pop
cs
xchg
ds
dec
test
push
push
addl
jge
fnstsw
mov
jnp
add
in
add
shll
clc
jle
stc
insl
adc
xchg
dec
sub
stos
mov
cs
aaa
dec
mov
pop
hlt
inc
dec
dec
fs
fbstp
hlt
xor
cmc
stc
xchg
fisttps
daa
mov
pop
pusha
orb
ret
xchg
jle
lea
ljmp
in
mov
push
arpl
mov
xlat
xchg
pop
fcomip
incl
push
testl
outsl
mov
pop
dec
xorl
loope
add
outsb
das
push
adc
mov
add
fidivrl
add
sub
jmp
insl
int
dec
lock
fadd
outsl
fisttpll
test
dec
pop
jecxz
mov
add
pop
loop
pop
add
aas
cld
clc
in
insl
sti
add
sbb
add
lds
test
pop
insb
out
sbb
outsb
repnz
xchg
or
pop
mov
outsb
aaa
aaa
arpl
daa
into
cmp
jbe
cli
in
lock
les
or
ljmp
std
mov
add
roll
ret
cmp
pop
test
add
sbb
pop
mov
pop
sub
popf
rorb
push
pop
cltd
mov
aam
pop
jecxz
sbb
clc
aam
fiadds
cli
mov
dec
dec
out
sbb
mull
push
push
adc
xor
inc
lahf
in
dec
xchg
jecxz
std
push
in
outsl
inc
sti
ss
add
dec
adc
movl
xchg
loopne
jecxz
cmp
stc
into
insb
fistps
jne
into
into
mov
or
shrl
out
dec
mov
push
or
mov
sub
loope
and
inc
cld
pop
pop
clc
test
add
cmp
mov
dec
leave
in
lahf
insl
mov
addl
jg
sar
sarl
xchg
and
inc
cmp
lcall
pop
pop
test
jne
add
loopne
rolb
in
xchg
or
pop
and
lods
pop
rol
ret
pushl
imulb
cld
inc
jmp
into
add
test
xor
fcomi
test
test
fsubp
iret
addr16
jo
sti
call
xchg
add
jecxz
cmp
or
xchg
loopne
dec
sbb
shlb
push
cli
push
push
sbb
push
sub
jg
or
lret
jl
and
push
adc
in
jo
lock
sti
cmp
jnp
and
ja
xchg
and
test
clc
xor
sti
cmp
jo
jnp
rcrb
sub
int
ds
adc
ljmp
cmc
cmp
cld
shl
sub
mov
mov
jmp
lret
outsb
adc
xor
lea
jl
dec
inc
pop
outsl
incb
repnz
mov
sti
jns
push
pop
push
xor
push
add
jl
in
in
xchg
mov
mov
ret
test
outsl
mov
pop
lea
or
xchg
pop
stos
hlt
dec
pop
pop
push
mov
aam
cld
or
cli
mov
jmp
inc
pop
das
mov
cmc
push
sbb
jg
add
fidivs
cli
sbb
sbb
movsl
into
jae
cltd
pop
jnp
rolb
das
insl
cmpb
sbb
shrb
sahf
sarl
dec
dec
pop
mov
std
idivl
sti
fcmovnbe
inc
pop
fs
imul
outsl
push
mov
mov
testl
fnstenv
rol
aas
xlat
push
mov
fisubs
dec
in
and
push
mov
jb
mov
je
mov
sahf
lds
lea
roll
and
imul
frstor
ret
aam
outsl
aas
imul
push
sti
in
pop
mov
pop
adc
jae
mov
ret
bound
insb
pop
sbb
rcll
and
out
dec
pop
adc
vsubpd
pop
sbb
and
das
xlat
xchg
xor
push
pop
cmp
mov
or
or
lods
icebp
sbb
and
xor
xchg
sarb
inc
clc
rolb
pop
push
push
inc
cs
lods
push
inc
dec
popa
xor
jo
inc
xchg
ret
movsl
or
cmp
mov
push
gs
cld
lods
mov
push
bound
sbb
sub
imul
dec
sub
rcll
insb
push
push
arpl
push
cmp
arpl
push
pop
inc
or
push
lahf
in
mov
ffreep
insl
xor
inc
ds
lcall
pop
loopne
dec
push
push
xlat
lds
andb
cmpsb
xor
popa
data16
adc
in
stc
aad
hlt
cmp
or
add
fmull
cmp
and
jo
shlb
andb
mov
sbb
add
xchg
ljmp
popa
mov
xchg
out
loope
xchg
mov
pop
xor
dec
das
std
fisubl
pop
sti
int
mov
imul
mov
call
jae
gs
or
xor
test
mov
in
repz
lea
mov
std
iret
sahf
icebp
cmp
xor
orl
in
add
test
sti
or
sti
dec
dec
pop
fcomi
movsl
mov
stc
sti
jmp
xor
xor
fucomi
pop
xchg
sti
push
sub
xor
fldt
fldenv
or
insb
or
and
xor
sti
sbb
add
cmp
js
or
dec
mov
or
lods
xor
outsb
cld
ss
insl
adc
push
or
faddl
or
mov
in
xchg
ficoml
jl
cli
outsl
inc
jo
or
out
dec
sar
loope
sbb
rolb
addr16
mov
iret
addb
es
insl
sbb
subl
loope
lcall
aas
idiv
addb
pop
dec
inc
imul
cmp
testb
dec
add
or
test
loop
pop
push
add
and
mov
push
insl
jnp
hlt
sti
loope
bound
sub
pushl
icebp
fists
or
jl
sti
jno
les
xor
jae
xor
or
dec
ss
push
adcb
pop
xchg
xor
jb
cli
je
mov
adc
loop
cmp
lock
hlt
sbb
jo
jecxz
fiaddl
pop
inc
cld
addr16
negb
or
add
jmp
jmp
test
pop
outsl
sbb
pop
push
jecxz
fld
mov
mov
dec
iret
pop
incl
cmp
push
out
aas
addl
testl
ljmp
mov
mov
test
xor
mov
push
loopne
jne
jb
test
ret
insl
fisttpl
push
jg
xor
push
add
addb
mov
pop
pop
mov
adcl
pusha
lods
jecxz
ss
jecxz
push
das
call
xchg
mov
jecxz
std
adc
pushf
imul
in
lcall
aaa
out
jnp
test
outsl
mov
out
loope
lock
shrl
or
into
lret
ret
in
xchg
mov
imul
cmc
fistpll
fadd
mov
mov
and
push
xor
or
pop
sbb
jae
cwtl
std
in
mov
decl
inc
test
sbb
test
xchg
adc
mov
test
xor
xor
xor
or
sti
xor
insl
mov
mov
sbb
arpl
in
fistpll
inc
adc
dec
mov
out
test
push
inc
add
fdivl
jno
jb
jbe
cs
insb
add
xor
dec
fcmovnb
subl
xor
test
repz
pop
ljmp
adc
out
adc
mov
fadds
in
adc
rcll
mov
dec
jbe
jo
cmc
push
mov
pusha
xor
addb
pop
inc
decl
outsl
add
call
pop
out
cld
pop
pop
shlb
jb
adc
pushl
or
ffree
xor
xor
push
icebp
xchg
jp
clc
push
repz
daa
jo
cmp
daa
cld
insb
adc
cmp
mov
add
jp
sbb
mov
loop
clc
or
sbb
mov
insl
inc
sbbl
adc
sub
jnp
sbb
das
xorl
adc
test
sub
decb
repz
pushl
adc
push
test
dec
jnp
sbb
or
loopne
repz
inc
xor
mov
pop
jg
pop
decb
rcl
mov
mov
rcll
popl
lahf
jnp
inc
mov
xor
std
in
xchg
ds
adc
inc
add
sbb
in
std
in
pop
stc
xchg
das
lret
test
xchg
pop
xchg
xchg
xchg
push
movsl
outsl
in
test
mov
pop
adcb
test
xchg
sbb
sti
or
outsb
loope
jecxz
xor
loop
inc
sbb
or
jns
fwait
mov
outsl
or
repz
test
jle
mov
loope
flds
xor
aaa
sub
push
test
fists
jo
dec
push
dec
xchg
arpl
jnp
call
in
sub
mov
test
inc
adc
addr16
popf
xor
fldcw
decl
test
lcall
push
add
add
movl
and
sbb
mov
lods
cmp
jecxz
lods
push
pop
fadds
stc
or
rcr
mov
add
push
loope
mov
adc
xchg
bound
in
xor
popa
imul
stc
push
call
fiaddl
inc
mov
je
lds
xor
inc
sti
xchg
adc
cmp
cmp
jge
loope
xor
jne
adc
xor
pop
outsb
call
jle
lahf
jl
insb
std
xor
jo
call
cmp
cmp
jo
decl
jmp
test
clc
das
mov
aad
cmp
or
jg
jg
or
dec
add
mov
jg
insl
push
addr16
push
pop
adc
pop
lret
cmp
mov
imul
cs
jb
mov
push
out
cmp
or
xor
repz
scas
sbbb
std
push
loop
xorl
inc
cmpsl
ss
mov
lods
dec
loop
cld
or
ror
mov
movsb
xchg
stc
filds
cli
cld
clc
test
scas
inc
outsl
push
jecxz
cmp
jge
rcl
mov
inc
or
mov
xchg
shll
mov
outsl
mov
in
scas
rdpmc
dec
popf
loop
fstl
std
cmp
in
mov
cmp
push
jnp
pop
sbb
lock
inc
inc
arpl
imul
mov
jle
xor
inc
add
sbb
lds
pop
mov
pop
xchg
call
xchg
xchg
test
inc
test
addr16
mov
mov
int3
push
inc
add
dec
add
sbb
sub
or
insl
mov
test
in
add
mov
push
mov
testb
aaa
sub
or
jmp
inc
stc
mov
test
dec
jo
cmpb
xchg
dec
jmp
dec
adc
in
push
rorl
clc
mov
sub
std
dec
fs
aaa
mov
movsl
cmp
push
orl
sub
insb
push
mov
out
out
sbb
sbb
out
push
xorb
cld
and
gs
call
imul
popf
mov
mov
fidivrs
movb
hlt
adc
mov
jae
jg
pop
or
test
dec
sbb
pop
jns
xchg
out
or
mov
popa
pop
xchg
mov
jl
fsubs
and
jle
fdivr
and
xlat
push
dec
shl
or
inc
push
mov
idivl
int3
cld
or
mov
sbb
dec
and
inc
xrelease
enter
in
loope
je
push
pop
jns
jb
adc
inc
jl
notb
jle
pop
out
xchg
jp
out
out
les
out
push
push
dec
push
insb
jge
sub
mov
icebp
subb
sti
jmp
fstp
mov
lahf
gs
arpl
into
add
fistpll
int
stos
out
cli
icebp
sub
pushl
lcall
sbb
in
jg
jge
negl
or
mov
std
add
test
mov
mov
enter
pusha
jae
or
shll
jle
pop
test
xorl
stos
ja
mov
test
mov
push
daa
out
stc
lds
xchg
and
fs
test
rorb
lods
sarb
or
ds
gs
dec
jg
addl
push
jb
push
xchg
ljmp
mov
stc
adc
cli
xchg
divb
lds
outsb
fbld
in
pop
push
fildl
inc
xchg
shll
lds
mov
in
xor
add
ret
add
fs
iret
xchg
scas
pop
jne
jno
fs
lea
xchg
jb
and
or
leave
push
push
add
lea
addr16
add
push
push
popa
lods
popf
gs
add
xor
sub
dec
inc
cs
sub
jg
cmpl
aad
or
sub
inc
sarl
lock
incl
js
pop
cmpl
inc
loopne
dec
stc
rorl
push
ljmp
mov
and
fwait
adc
popa
cld
xchg
mov
ror
cmpsb
sub
adc
pop
mov
fistpll
pop
fmull
xchg
pop
enter
stos
mov
xor
pop
mov
popf
sub
pop
jne
fisttpl
rorb
inc
xorl
lea
loopne
add
push
jne
inc
test
push
dec
dec
outsl
lods
sbb
jmp
cmp
mov
into
testb
outsl
jmp
sbb
dec
dec
arpl
mov
filds
mov
dec
out
das
jno
mov
ffree
call
push
ret
sub
stos
pop
mov
js
sub
test
dec
out
in
sub
call
adcb
mov
hlt
fnstsw
js
mov
daa
mov
push
mov
xchg
clc
aas
pop
mov
loopne
sub
xchg
dec
pop
mov
dec
pop
clc
out
arpl
test
mov
fbld
mov
add
nop
mov
pop
mov
loop
call
push
ret
cmp
cs
add
cmp
and
cmp
popa
sub
lds
adc
or
mov
or
adc
insl
pop
xchg
test
aad
fmuls
hlt
cli
loopne
adc
mov
rep
cmp
idivb
mov
sbb
hlt
outsb
sub
cmc
loope
sub
inc
pop
cld
lock
xchg
sub
lret
std
imul
push
outsl
push
cmp
rorl
imulb
add
pop
pop
push
les
out
mov
mov
jge
mov
dec
insb
shr
out
lahf
mov
lret
push
in
arpl
jmp
adc
testl
stos
push
psubsb
roll
pop
or
jns
xchg
cmp
mov
push
pop
ret
jne
add
jns
outsl
roll
hlt
rorb
stc
dec
addr16
sar
adc
sub
sarb
push
mov
xor
pop
mov
inc
pushf
adc
push
movsl
inc
inc
dec
test
add
xor
jmp
fldcw
sbb
xchg
mov
daa
cmp
jecxz
xor
dec
loopne
das
filds
and
dec
aaa
lock
subl
push
jl
pop
push
push
mov
arpl
mov
rclb
mov
scas
out
cld
arpl
jae
call
push
cs
idivb
xchg
scas
xchg
adc
iret
sbb
mov
lock
pusha
cmpsb
cmpsb
test
jp
and
add
stos
notb
roll
mov
pop
jmp
dec
cld
rorb
xor
jne
or
mov
mul
jmp
inc
lcall
dec
arpl
out
mov
jo
push
xchg
xor
cmp
lock
movsl
or
scas
aad
movsb
add
sub
cmp
aam
test
rcrl
lcall
leave
mov
fcmovnu
fisttpl
jge
dec
in
sub
pop
pop
sub
inc
loope
mov
outsb
pop
popa
stos
inc
in
in
mov
pop
push
push
jecxz
sub
leave
insb
aam
repz
shlb
xchg
inc
jl
pop
testl
lock
iret
xor
xor
popa
xchg
out
loop
movsl
gs
or
repz
repz
xchg
jnp
ljmp
jne
or
cmpb
add
jg
faddp
xchg
push
or
mov
loopne
push
ja
jg
dec
clc
add
jl,pt
jge
jle
dec
xor
fildl
xor
jae
add
jp
arpl
sar
push
xchg
lret
mov
aaa
adc
outsb
lahf
stos
clc
xlat
fdivrl
pop
ss
xor
sub
arpl
popa
addb
sub
jge
add
out
push
dec
aaa
jecxz
dec
ret
aaa
hlt
push
jmp
sub
sub
ss
adc
jg
sub
or
outsl
pop
jnp
add
jg
sbbb
pop
negl
lcall
sbb
out
test
sub
jnp
pop
and
adc
pop
pop
jne
mov
dec
dec
push
adc
push
dec
push
adc
adc
insb
sbb
mov
ret
pop
pop
in
add
lcall
jae
js
cmp
mov
sbb
jbe
push
orb
insb
loopne,pn
cmp
shlb
clc
jg
int
ss
jg
push
or
mov
imul
repz
repnz
stc
fs
dec
push
outsb
jns
cmp
gs
int
insb
icebp
sub
pop
repnz
push
add
in
and
inc
push
fs
and
push
xchg
add
or
fcomip
pop
cs
xor
jns
mov
sarl
outsb
add
ret
jns
cmp
call
push
dec
divb
push
fsubl
sub
lcall
shll
jae
push
xor
bound
xlat
lcall
out
mov
push
push
loopne
or
push
pop
jp
cwtl
testl
ud2
mov
js
std
fstpt
xor
jnp
test
cli
add
pushl
inc
dec
aas
jmp
sti
jne
insb
testl
or
outsb
and
lret
push
or
loop
test
mov
imul
ja
push
sub
mov
sbb
mov
pop
pop
fidivs
and
mov
fwait
ljmp
pop
dec
clc
lods
fsubrs
dec
push
lods
test
and
fs
sbb
and
mov
adc
fs
std
mov
sub
mov
lea
or
inc
dec
push
pusha
ljmp
dec
dec
inc
daa
shll
push
sti
mov
pop
incl
mov
push
jge
push
je
jg
push
push
jg
add
in
mov
cli
jo
jp
add
btr
bound
pop
push
add
pushf
insl
cmpb
stos
pushl
stc
xor
add
js
mov
fisubrl
frstor
xchg
sahf
pusha
or
jg
push
mov
dec
xchg
cmp
mov
outsb
pusha
push
xor
push
mov
lret
arpl
das
ja
rolb
out
aad
rorb
imul
and
mov
pop
test
xorl
push
lock
add
dec
xchg
leave
pushf
or
mov
and
insl
jne
and
repnz
test
dec
loop
daa
sub
outsl
cltd
cli
insl
sti
ret
insl
dec
popa
adc
loope
stc
jg
jge
mov
dec
cmp
call
inc
push
bound
arpl
jae
mov
sti
adc
add
mov
pop
mov
mov
pcmpgtw
sub
int
push
sub
dec
cwtl
inc
inc
push
mov
or
cltd
mov
or
fxch
and
lret
fstl
pop
outsl
fiadds
dec
pop
mov
out
cld
pushf
mov
jo
outsl
iret
je
fistl
repnz
and
sti
cmpb
inc
lahf
or
dec
icebp
pop
pop
pop
test
dec
xchg
fisttps
sbbb
add
fucomip
ret
push
pop
add
xchg
xor
mov
js
arpl
jg
in
push
jo
js
pop
pusha
xlat
mov
cltd
jge
sti
and
or
es
dec
arpl
push
aas
add
fildll
pop
jp
testl
outsl
add
in
clc
jg
inc
xchg
in
in
fnstcw
add
dec
test
and
aad
in
and
repnz
sbb
test
mov
movsl
mov
or
push
ret
ja
mov
lcall
xchg
ljmp
cmpsb
test
ds
push
outsb
jmp
xor
inc
sysenter
mov
stc
out
pop
movnti
adc
xor
leave
rcr
xor
cwtl
adc
xchg
call
pop
jge
jno
or
out
dec
pop
mov
jne
and
dec
xor
jecxz
and
mov
cmp
fnstcw
lods
jno
popf
int3
rcl
push
ljmp
lret
pusha
ret
and
aad
pop
mov
insl
jns
popa
or
mov
pop
sbb
jle
lods
dec
sbb
mov
fldl
std
arpl
cmp
add
push
push
cmp
xlat
and
shrl
mov
push
cmp
fnstcw
xchg
xor
jb
jg
mov
xlat
mov
add
adc
fbstp
mov
push
xor
stc
shl
aam
and
add
jmp
cmc
mov
jg
ljmp
movsb
gs
jl
idivb
ds
push
xor
filds
vrcpss
fcomi
xchg
push
out
nop
fnstenv
xor
xchg
out
mov
or
pop
clc
aaa
pop
cld
sub
or
clc
inc
outsl
ss
adc
iret
fisttpl
sbbb
xchg
mov
sbb
xchg
inc
loopne
lahf
out
inc
xchg
outsb
pushf
movsl
pop
lods
or
jecxz
rclb
jl
and
push
pop
ljmp
idiv
filds
add
xor
das
mov
testl
mov
jle
sub
mov
xchg
int
popa
out
mov
xor
sub
ss
sub
and
fwait
sub
dec
and
adc
pop
roll
addr16
pop
jl
sbb
dec
mov
fistps
faddl
or
ds
ror
imul
push
gs
arpl
sbb
mov
das
addl
stos
add
pop
ficoms
and
push
aas
and
rorb
xor
jb
push
push
insb
rcl
lea
dec
aaa
test
cmp
dec
sub
pop
imul
push
fsubs
sub
inc
push
or
xor
mov
lahf
or
mov
sbb
sti
and
sbb
dec
std
xchg
sbb
sahf
imul
cmpsb
push
push
fistpl
sub
aas
ja
cmpsl
xor
mov
cmp
cmp
mov
pop
mov
xchg
insl
push
sbb
fs
hlt
incl
mov
jbe
out
mov
mov
int
sub
push
repnz
aas
pop
into
inc
mov
daa
cmpsb
pop
pop
clc
cmp
cs
mov
cmp
jnp
dec
outsb
xor
outsl
xor
mov
cmpb
pop
cmpsl
cli
shll
mov
add
es
dec
adc
push
xchg
and
inc
fucomi
mov
test
mov
add
push
repnz
xor
mov
sub
movsl
mov
popf
decb
mov
pusha
mov
sub
jno
ret
in
jl
jno
xor
jo
sub
dec
mov
ret
popa
or
fidivrs
or
pop
ljmp
dec
dec
jecxz
sbb
sbb
dec
add
std
fldenv
or
cld
pop
sub
mov
mov
jno
pop
divl
lods
in
push
daa
xor
jae
mov
inc
out
sbb
jno
imul
sub
pop
sub
push
daa
sahf
and
lret
sub
or
fildll
add
xor
stos
repz
dec
mov
jae
insb
cmp
push
out
inc
and
outsl
outsb
outsl
jg
mov
mov
test
mov
ficomps
sti
fiaddl
push
adc
bound
mov
arpl
test
xchg
adc
cltd
test
fwait
mov
negl
mov
fidivs
pop
dec
or
xor
sbb
fstps
pop
xor
sub
pop
rol
push
leave
lods
mov
cld
cs
inc
jnp
dec
negb
sahf
add
shll
shll
sbb
or
jge
lock
leave
push
inc
jns
in
sbb
jmp
and
push
outsl
xadd
pop
jns
push
xchg
andb
lea
xor
cmpsl
arpl
adc
pop
dec
vmovsldup
xchg
bound
mov
inc
fildl
dec
clc
cmp
clc
cmp
popf
lcall
push
ljmp
repz
push
mov
cld
ljmp
cmc
roll
stc
addr16
add
lret
inc
test
incb
fimull
mov
fcomps
mov
push
ja
pop
mov
rcrl
fucom
sub
dec
fs
shl
mov
jmp
in
sbb
dec
mov
mov
test
fisubrs
push
test
adc
aad
mov
test
or
clc
xlat
and
add
or
loope
sbb
imul
xor
push
sbb
rcr
push
xor
sti
sbb
sub
dec
fisttpll
push
insl
add
jns
stc
sbb
mov
add
fldt
mov
inc
mov
lret
imul
lds
mov
daa
ret
mov
test
leave
mov
xor
mov
xor
mov
xchg
sbb
inc
or
scas
pop
ret
xchg
mov
dec
mov
jg
or
sbb
push
sub
dec
cmp
lock
mov
xchg
add
add
sahf
and
testl
pop
sub
out
jecxz
in
push
cmpl
icebp
loopne
xchg
cmc
addr16
add
imul
cmc
sbb
xchg
test
cs
testb
ljmp
addr16
xchg
mov
imul
mov
add
ljmp
adc
dec
xor
push
ja
adc
ja
iret
stc
push
fwait
out
pop
pop
orl
popa
inc
sbb
mov
out
or
arpl
xchg
out
xchg
insb
insl
jecxz
mov
inc
out
mov
adc
clc
dec
cmp
mov
add
inc
sub
push
fsubs
icebp
ja
lret
or
lret
iret
ds
pop
lahf
fcomi
orb
pusha
inc
ds
jle
outsl
inc
loopne
sub
sub
and
mov
in
sbb
repz
lret
and
jge
js
sub
mov
lret
xchg
sbb
mov
pop
sbb
push
sub
mov
loopne
sbb
loopne
data16
sbb
mov
mov
arpl
clc
lock
sti
cmpsl
mov
in
dec
shl
daa
push
lods
jne
hlt
idiv
cmp
lods
sbb
ljmp
lea
stc
add
jecxz
pop
pop
loop
sbb
das
pusha
sub
push
mov
sbb
imul
mov
pop
dec
jno
icebp
decl
jb
iret
sarl
sti
decl
pusha
or
pop
jb
pop
jp
add
pop
pop
add
imull
sbb
pop
das
adc
dec
dec
dec
gs
cmp
push
ret
aas
insl
std
jae
shlb
fisttps
fists
outsl
and
lds
add
call
add
and
faddp
adc
cmpsb
or
xchg
fistps
cli
cmpsl
stos
jp
or
imul
aaa
sub
jne
xlat
int
cmc
hlt
testl
in
xlat
ljmp
ds
lock
out
arpl
repz
movsl
enter
mov
add
repz
idivl
roll
xor
sub
dec
xchg
call
imul
mov
sub
dec
aas
mov
inc
clc
push
jns
cs
lock
lods
mov
cli
add
and
sbb
cmp
pop
sub
xchg
dec
mov
sbb
xchg
xchg
dec
mov
push
add
or
mov
sbb
out
mov
sti
loop
fs
idiv
add
cmp
repz
or
xchg
mov
xor
push
jmp
cmpsl
xor
push
out
jne
xchg
orl
inc
mov
inc
orb
inc
xor
out
sti
int
adc
outsl
xchg
notl
xchg
pop
sbb
push
jecxz
addr16
dec
les
xchg
and
in
pop
and
enter
call
sbb
xor
sar
out
clc
lods
lret
mov
xchg
sbb
xchg
daa
xchg
and
mov
incl
aam
call
repz
daa
cld
inc
push
or
popa
push
sub
xchg
xchg
adc
in
in
cmpsl
loope
cli
iret
xor
sub
adc
es
inc
mov
aaa
daa
rol
dec
push
sub
pop
push
popf
pop
pop
adc
rorl
clc
ljmp
jmp
xchg
adcb
push
call
xchg
scas
sti
xchg
mov
jg
xchg
cmp
icebp
xor
sbbb
icebp
cmc
sub
or
adc
outsl
pop
inc
or
jg
ja
imul
test
decb
ss
add
dec
stc
outsb
iret
ja
add
xchg
add
fisttpl
sub
ss
xchg
fisttps
mov
mov
push
cmp
outsl
pop
lahf
add
std
enter
xchg
push
orl
movb
xchg
add
mov
xacquire
push
sub
daa
inc
aaa
je
jp
pop
das
arpl
incl
call
mov
dec
test
mov
cmc
stc
ss
rcl
divl
mov
icebp
mov
pop
inc
jmp
insl
cwtl
adc
or
loopne
test
imul
sti
jb
cli
je
sbb
divb
and
aaa
sbb
iret
pop
imul
cmp
loopne
mov
aas
ss
mov
lahf
clc
dec
dec
in
mov
xchg
inc
sar
jl
jno
adc
inc
and
int3
or
rcrl
and
sub
add
ds
repz
sub
add
in
xchg
add
sub
add
xor
test
or
popa
dec
sbb
dec
lods
cld
sti
cltd
sub
mov
ljmp
test
inc
cs
dec
fimull
inc
sub
dec
imul
dec
dec
pop
iret
jnp
test
inc
adc
stos
std
push
mov
push
jmp
dec
test
std
into
or
adc
inc
lea
sti
loopne
divl
add
testb
lahf
mul
mov
pop
cmp
xchg
sub
mov
lds
out
aad
adcb
cvttps2dq
jo
xchg
stc
out
adc
dec
xor
aas
sahf
daa
dec
in
loope
call
les
std
or
addr16
xor
aas
clc
xor
imul
idivl
or
inc
jbe
arpl
xor
cmp
fdivp
and
scas
cmp
std
mov
mov
out
push
loopne
ljmp
clc
je
xlat
push
out
xor
sbbb
xor
sub
inc
pop
push
subb
inc
jl
xor
lods
loop
adc
jg
pop
fistps
jbe
out
fs
fmull
push
aam
sbb
jae
inc
xchg
add
xchg
inc
mov
mov
out
test
sbb
aaa
hlt
incl
testl
sub
ss
or
pop
or
xchg
mov
fstpl
pop
inc
dec
or
subb
dec
add
iret
inc
xchg
insl
cmp
js
jnp
mov
sbb
and
mov
popf
out
stos
adc
inc
jbe
xchg
setl
adc
cmp
cmpl
fbstp
add
xchg
mov
loope
lds
mov
test
sub
popf
stos
in
out
dec
xor
or
testb
cmp
xor
jns
les
test
dec
sarl
cli
push
inc
add
gs
xchg
xchg
jecxz
repnz
ret
dec
inc
std
hlt
cmc
add
mov
jns
mov
pop
in
popa
psrlw
inc
cld
pop
fidivl
lds
lea
decl
movl
test
cmp
popa
sub
inc
insb
or
inc
ja
dec
in
fildll
sub
sbb
jmp
int
cmc
jb
shlb
inc
sbb
sbb
jecxz
inc
adc
fistpll
xchg
push
das
aaa
cmp
sbb
aad
jge
icebp
adc
inc
mov
addb
test
lock
sub
adc
push
sbb
jns
incl
pop
mov
or
fisttpl
dec
leave
sbbl
movsl
or
dec
xor
mov
sti
mov
adc
sub
xor
fwait
sbb
insl
xchg
insl
mov
in
insl
jp
or
cmp
fwait
add
or
or
push
mov
mov
adc
jle
add
mov
jecxz
sbb
loop
xchg
gs
les
mov
loopne,pn
popa
sti
mov
aas
loopne
ss
pop
cmc
rclb
mov
cld
fcoml
aaa
fildl
pop
or
mov
fisubrl
loopne
fisttpl
cmpsl
xchg
xchg
das
push
pop
mov
js
mov
add
pushf
repnz
sub
cmp
jmp
mov
xchg
dec
stc
rclb
add
dec
jecxz
pop
dec
pop
out
pop
int
cld
iret
xchg
or
pop
push
mov
mov
push
jo
mov
adc
cmp
stos
xor
push
push
mov
fstl
push
rorb
pop
and
dec
fldl
add
sar
cli
xchg
cs
xor
insl
mov
sub
daa
sbb
push
sub
xchg
sbb
push
out
pusha
mov
jecxz
or
push
jg
xchg
push
jnp
xorl
add
aas
test
or
push
push
test
orb
inc
mov
sub
outsb
dec
addl
cmp
fistps
xor
rclb
xchg
dec
dec
pop
aam
pop
mov
jmp
call
pop
loopne
push
cmp
mov
mov
cli
push
or
inc
lret
lock
stc
mov
and
clc
jb
insb
dec
jecxz
pop
dec
loope
or
call
ret
xchg
cmp
sub
and
add
mov
lahf
xchg
mov
les
inc
les
fisttpl
or
mov
dec
or
adc
pop
outsl
in
or
cs
addr16
mov
pop
inc
jecxz
dec
jl
or
pop
pusha
jle
push
gs
scas
icebp
scas
pop
popa
dec
xchg
mov
adcl
js
fidivrs
arpl
mov
loope
or
sbb
ret
dec
push
clc
movsl
fwait
popl
add
add
movsl
cmpsb
cs
ds
dec
or
add
push
mov
cmp
dec
daa
cld
cmp
dec
xchg
xchg
jmp
xchg
push
add
pop
call
ljmp
pop
push
lret
dec
dec
stos
jle
add
out
icebp
in
or
les
push
push
repz
fsubrp
adc
bound
mov
push
xchg
jg
xchg
rcpps
or
loopne
or
ss
push
roll
add
popa
add
dec
sub
mov
bound
add
jns
mov
ja
in
cli
lods
loopne
cmp
push
mov
push
outsl
add
std
add
inc
sbb
mulb
test
sbbb
sub
das
mov
push
iret
les
clc
fs
ss
fildl
mov
mov
mov
aam
loopne
xor
mov
shr
clc
push
inc
pop
test
mov
or
cmp
andl
nop
ret
pop
pop
cwtl
jo
cs
mov
jle
dec
fnsave
inc
push
movsl
jnp
add
daa
icebp
cmp
addb
pop
add
cli
cli
inc
dec
jle
push
cmp
jge
mov
testl
jo
jno
inc
cmc
add
cmp
or
mov
cs
push
std
inc
pop
data16
push
clc
pop
mov
and
test
adcb
dec
lcall
dec
imull
movb
filds
push
dec
cli
mov
mov
mov
loopne
cld
jns
lds
in
add
aam
jae
pop
and
addr16
movsb
dec
inc
mov
out
adc
aaa
add
mov
jg
push
scas
ret
xor
xchg
sbb
jno
lds
lcall
aad
sbb
gs
lods
xchg
outsl
push
je
inc
xlat
cmpsl
sti
add
mov
jmp
mulps
mov
gs
ja
popa
add
adc
pop
insb
aaa
jp
mov
ret
inc
or
mov
lds
insl
incl
mov
mull
inc
daa
mov
add
mov
hlt
mov
sub
stc
nop
inc
mulb
mov
mov
imul
xchg
js
in
push
cmc
icebp
inc
push
add
xor
insl
jmp
lock
xor
pop
in
sbb
hlt
jb
jmp
lea
mov
mov
mov
fistl
add
rcll
aam
jae
push
in
add
inc
jne
dec
adc
or
iret
jle
popa
mov
call
insb
xchg
hlt
or
jmp
aas
fdiv
sub
fidivl
data16
fsubr
adc
jne
in
add
insl
jmp
ljmp
ficomps
aas
gs
jle
test
pop
and
lock
pusha
pop
aas
lahf
add
dec
push
ds
cmp
mov
in
aas
shrb
jbe
dec
mov
pop
and
jae
mov
iret
pop
repnz
arpl
adcb
in
or
in
aaa
and
sub
bound
mov
stos
push
int
in
jl
insb
fcmovnb
aaa
pop
dec
cmovno
xor
pop
out
mov
pop
cwtl
aas
or
jl
cwtl
shrl
mov
jae
pop
pop
lock
and
inc
jle
cmc
into
jecxz
pslld
xlat
sti
in
outsl
adc
fistps
sub
pop
fldt
pop
jmp
mov
roll
xor
data16
pop
and
fwait
add
shr
fs
scas
in
stos
jno,pt
and
orps
cwtl
insb
xor
pop
idivl
pop
jl
insb
aad
and
inc
hlt
mov
and
in
hlt
gs
push
pop
int3
sub
decl
add
jno
shrb
mov
test
xor
pop
cmc
aas
gs
jle
or
xchg
mov
shr
stos
int
pusha
pop
and
imul
imul
mov
jmp
js
outsl
jg
in
pop
pop
xchg
push
icebp
fistps
repz
iret
decb
xor
cli
arpl
push
sub
cmc
push
sbbb
mov
jl
mov
loopne
mov
cwtl
cld
ret
or
fisubs
mov
ja
lret
in
insb
jge
inc
mov
push
xadd
cmp
lret
lahf
imul
inc
add
lods
sarb
insl
aam
mov
cmc
and
jecxz
push
dec
mov
fucomi
insl
out
and
outsl
add
lret
dec
lret
jmp
cld
mov
sbb
fwait
arpl
iret
xlat
dec
fildl
ja
out
and
jg
dec
mov
add
arpl
xchg
jecxz
add
cmc
cwtl
cli
bnd
push
dec
movsl
ret
lods
mov
add
mov
cmp
repnz
lods
std
mov
and
push
lret
outsl
push
jo
cli
daa
cmp
add
ja
mov
or
jmp
fcmovnb
jg
add
add
popf
mov
adc
xor
dec
xchg
push
sub
push
push
pop
and
xlat
repnz
pop
nop
les
mov
stos
dec
push
sub
mov
clc
jbe
ljmp
shrl
jecxz
fs
push
mov
cmpsl
stc
and
jmp
data16
mov
pop
test
pop
in
pop
fnsetpm(287
and
add
fwait
lret
fs
imull
or
lahf
insl
mov
test
or
inc
push
mov
xor
jmp
jns
lock
sub
jmp
mov
adc
xor
xor
xor
clc
std
or
cli
mov
shrb
dec
jge
pop
add
lret
sub
clc
inc
je
mov
cmpsl
adc
add
notb
pop
jmp
add
push
loopne
ljmp
sti
pop
push
jmp
ljmp
sub
inc
int3
dec
add
leave
sbb
push
add
inc
mov
adc
inc
adc
inc
sbb
adc
cltd
loop
into
fldl
jno
test
push
pop
decl
jl
ljmp
pop
and
xchg
repnz
sbb
mov
pop
mov
sbb
adc
push
adc
test
fisttpl
call
fldcw
mov
loop
or
rclb
std
outsl
insl
mov
insl
push
es
mov
adc
cmp
mov
into
jmp
hlt
mov
push
out
sti
jo
subb
lahf
mov
incl
inc
push
add
lret
or
cs
pop
push
sub
sub
arpl
shrl
rorl
jecxz
mov
mov
call
lods
inc
pop
inc
or
lret
push
mov
cli
aaa
cli
xchg
mov
sbb
aas
or
in
ret
test
subl
xchg
mov
mov
incl
mov
mov
jle
cld
add
mov
adc
jge
cmp
imulb
jno
es
mov
dec
rolb
test
push
lods
popa
add
xor
loope
decl
inc
pop
addb
incl
sbb
xchg
in
addb
add
mov
in
cmp
sbb
sarl
cld
push
cmpl
mov
inc
and
mov
jb
dec
push
test
or
cld
pushl
orl
dec
daa
adc
ds
mov
push
inc
jg
cmp
xchg
loope
adc
jae
pop
pop
push
neg
mov
sti
call
rcrb
inc
in
insl
add
push
notb
push
push
daa
sub
cmp
sub
sti
mov
aas
sti
add
xchg
xchg
popf
std
mov
dec
and
inc
jle,pt
or
sub
add
arpl
lret
ja
iret
arpl
mov
jno
decb
sar
leave
cld
push
lret
loop
mov
push
pop
mov
add
mov
jge
fsubrl
das
push
xorb
aaa
inc
pop
push
mov
fldl
jecxz
mov
add
jo
dec
add
pop
mov
sbb
push
mov
sbb
or
add
xchg
jmp
mov
pushl
dec
repnz
rcll
push
outsb
pop
mov
shrl
ljmp
mov
aaa
std
adc
mov
jecxz
mov
cli
idiv
pop
fisttpll
cld
sub
push
mov
sub
add
mov
add
mov
push
lods
imul
adcb
pop
jge
incl
add
lds
lea
add
push
jp
in
notl
jp
movsl
and
stos
mov
cmpsb
jne
addb
mov
mov
add
mov
testb
enter
daa
pop
push
imul
shl
push
popa
ljmp
loopne
outsl
test
jmp
push
loope
outsb
mov
stos
lock
scas
lds
fs
aas
sub
add
popa
ret
mov
jnp
adc
rorb
dec
jecxz
xchg
push
adc
gs
mov
lods
push
loope
xchg
ss
lods
dec
xor
push
push
loop
adc
push
and
sbbb
mov
ja
out
stc
loope
mov
icebp
divl
test
mov
ljmp
xor
add
clc
in
stc
fildl
xor
or
outsl
call
fyl2xp1
xor
adc
xchg
neg
pop
sahf
xchg
int
xchg
xchg
stc
lea
jg
loopne
mov
int
push
pusha
xchg
fisttpll
pop
pop
inc
std
add
dec
jecxz
loope
cmpsb
or
pop
add
or
sbb
pop
add
pop
outsb
insl
push
fbld
mov
sbb
mov
arpl
incl
ljmp
arpl
arpl
jo
sbb
test
clc
xor
pop
jl
jo
push
push
dec
mov
push
push
xchg
imul
clc
je
cwtl
mov
cli
pop
ja
xchg
sbbl
out
cmp
cld
sahf
fucomip
add
ret
mul
ss
in
fmull
cs
push
testl
out
push
mov
jbe
or
xchg
ljmp
xlat
sub
outsb
negl
test
xchg
and
xchg
cli
and
insb
insb
movsl
loop
and
inc
sbb
mov
div
imul
fdivrl
repz
insb
pop
add
adc
imul
repz
pop
imul
ret
lret
cmp
pop
adc
lods
fwait
insl
mov
jp
xchg
sub
mov
cld
cmp
jmp
jl
mov
add
ja
outsb
roll
leave
or
add
dec
cltd
aaa
bound
enter
or
mov
in
push
imull
lahf
or
gs
mov
adc
call
lahf
pusha
fwait
mov
arpl
subb
jmp
add
movb
sti
pop
pop
hlt
rcll
inc
mov
sub
or
mov
xor
outsl
lock
xchg
pop
orl
xchg
dec
jno
xchg
cmp
fcoms
mov
jmp
out
jl
sti
popf
fwait
cmp
mov
iret
mov
cs
ja
popf
xor
in
mov
lea
push
out
dec
fucomip
push
jmp
xchg
jge
sub
mov
cmc
xor
rcr
cs
stc
int3
inc
jle
in
and
add
cmpsl
or
lahf
mov
add
mov
add
insb
pop
loop
or
jp
xchg
stc
in
jg
jge
or
loope
sbb
loope
push
push
dec
cli
into
add
stc
add
das
mov
dec
dec
push
push
loope
pop
mov
loop
subb
shlb
adc
mov
insb
cmp
jo
xor
js
or
jbe
mov
lcall
xchg
inc
add
pop
mov
sbb
push
inc
fs
lret
adc
sub
ja
loope
mov
mov
sbb
loope
cmp
fwait
adc
add
sti
mov
mov
mov
out
pop
or
jo
inc
xchg
mov
mov
xchg
cmpsl
loopne
daa
adc
sbb
jo
add
mov
stos
jbe
cli
and
cmp
stos
mov
adc
in
leave
daa
mov
outsb
adc
sahf
xor
out
lds
xlat
in
xor
cmp
sarl
jns
push
out
pop
fstpt
stos
or
or
dec
shll
in
orb
jbe
divl
cs
lret
inc
jbe
jb
je
jne
cmpsb
imul
in
fldpi
jbe
cmp
inc
jae
jne
je
cmpsb
pop
xorb
scas
shrl
imul
and
xchg
pop
rcll
add
repz
je
jae
popf
mov
jno
cltd
mov
xor
sarl
dec
aaa
and
cmp
jno
aaa
jns
push
js
je
mov
inc
js
jp
jns
xchg
lret
in
jbe
js
jns
jnp
js
pop
outsb
dec
jmp
loope
xlat
jnp
sub
lods
ja
lds
lahf
fnstenv
lret
lods
js
pop
jp
aaa
jge
pop
cmpsb
jmp
jnp
cmc
cltd
lcall
jae
imul
inc
cmp
dec
sahf
mov
jns
inc
jge
jno
sub
mov
jbe
jne
popf
lcall
aad
cmc
int
cmpsb
imul
or
mov
fnstenv
int
add
inc
xchg
js
jp
arpl
lcall
sti
das
jb
mov
imul
enter
mov
jbe
push
sub
xor
js
xchg
cs
xor
mov
push
sbb
sub
xlat
pop
scas
dec
add
jecxz
add
pusha
cwtl
inc
imul
sbb
imul
mov
and
or
and
leave
fisubs
push
imul
or
cs
xchg
add
dec
push
pop
nop
andl
sbb
sbb
negb
xchg
insl
push
scas
adc
imul
mov
stos
jae
xor
jae
mov
or
iret
das
fldt
in
jne
sti
je
pcmpeqd
insl
jb
js
pop
ss
insl
lahf
jae
mov
xor
stos
ret
cmp
gs
in
jp
inc
jae
dec
arpl
or
testl
stos
adc
xchg
cmpsb
imul
out
jb
cmp
dec
jne
je
imul
lret
cmpsb
imul
xlat
xor
add
divl
fmuls
cs
outsl
lds
jb
cltd
mov
push
aaa
and
hlt
insb
xlat
cmc
cmp
jb
aaa
js
push
je
lret
in
cltd
jbe
ja
jp
jns
jne
xchg
pop
cs
js
mov
jp
mov
out
mov
shll
mov
outsb
add
jp
sbb
adc
imul
imul
lcall
ds
and
inc
jl
jae
in
mov
jbe
jne
jno
lcall
ret
fsub
addr16
cmpsb
imul
movl
jecxz
not
jbe
pop
shll
add
jl
cmpsb
imul
xlat
addr16
ret
aam
movsl
imul
lea
xorb
mov
jno
dec
insl
gs
pop
jb
dec
outsl
push
dec
jb
imul
ljmp
mov
inc
pop
outsl
push
jb
outsl
popa
fs
addr16
pusha
insl
imul
inc
bound
decl
ret
imul
cmp
outsl
sti
inc
popa
imul
push
gs
aas
clc
test
push
arpl
in
pop
popa
cmp
push
insb
inc
outsl
addr16
cmp
test
inc
je
outsl
dec
push
aam
sub
inc
jl
pusha
bound
pop
ds
jb
push
outsb
pushaw
inc
pop
imul
fbstp
jo
jo
imul
arpl
outsl
mov
pop
pop
fs
imul
or
aaa
icebp
jo
outsb
jo
incb
pop
pop
inc
pop
insb
pop
push
sti
or
scas
outsl
pop
inc
pop
pop
and
cli
lock
dec
imul
mov
imul
push
push
insl
addr16
inc
bound
sahf
pop
inc
gs
hlt
mov
inc
pop
pop
addr16
daa
ja
cmp
ja
aas
arpl
fisttps
and
fs
arpl
bound
or
fidivrs
clc
fs
pop
mov
inc
bound
sub
ret
jnp
pop
aas
push
dec
pusha
out
lods
in
mov
pop
mov
cli
dec
sbb
arpl
clc
push
pop
outsl
inc
pusha
arpl
test
or
dec
or
push
pop
push
imul
push
bound
and
push
mov
pop
pop
lods
cmp
arpl
sub
aas
inc
inc
pop
mov
push
xchg
push
mov
inc
pop
adc
insl
cmp
fbstp
outsl
jno
arpl
pusha
jno
inc
aas
dec
dec
cmp
xor
sub
data16
das
fnstcw
outsb
dec
arpl
inc
dec
pop
ret
adcb
sbb
pop
inc
pop
mov
popa
daa
frndint
lahf
ljmp
lock
push
cs
mov
pop
outsl
pop
aas
inc
clc
pop
sahf
outsl
push
add
jb
xor
push
std
inc
cmp
or
pusha
jo
lahf
insb
dec
fs
mov
aaa
add
addr16
pop
pop
test
push
pop
addr16
fcmovne
lea
cli
clc
cmp
pop
push
mov
dec
popf
pop
imul
andl
mov
outsl
dec
bound
arpl
dec
mov
xchg
jecxz
jg
pusha
arpl
insl
push
popa
imul
pop
pop
jne
jg
sti
sar
outsb
add
insl
pusha
cmp
dec
dec
inc
dec
cs
daa
pop
ja
add
clc
aas
jno
pop
push
mov
fs
or
ja
adc
loope
sbbb
popa
pop
loop
daa
std
inc
jle
mov
pop
filds
outsl
push
jbe
sbbb
imul
push
pop
dec
aas
add
xchg
or
out
mov
out
decb
push
pop
push
ja
cli
dec
pop
xchg
into
pop
fidivl
imull
jno
cli
mov
sub
push
pop
popa
adc
pusha
fiaddl
or
fwait
cmp
imul
mov
sub
cmp
pop
mov
aas
inc
sub
sub
cld
cmp
push
cmp
sub
sub
addr16
pop
incl
insb
icebp
jno
arpl
insl
test
faddp
gs
mov
pop
bound
gs
aam
test
bound
pop
and
insl
pop
loop
dec
mov
xchg
pop
jnp
cmp
das
adc
mov
ds
or
insb
dec
outsl
popa
sub
or
scas
imul
mov
popa
xor
pop
sbb
jg
lock
fs
inc
imul
jne
fdivl
mov
inc
inc
jg
daa
sbb
fmuls
sti
das
lahf
ds
pop
mov
imul
insl
sub
jle
std
inc
jno
push
dec
inc
ds
sti
pop
pop
push
push
mov
cmp
mov
and
sti
cmp
sub
bound
outsl
sti
dec
cld
pop
cwtl
cmp
cmp
inc
clc
cmp
pop
inc
arpl
insb
cmp
cmp
cmp
cmp
or
and
cmp
aaa
pop
pop
pop
insl
lds
adc
jl
std
cmp
push
ss
hlt
jmp
lret
jmp
pop
push
cmp
push
cmp
lods
pop
fsubr
push
adc
cmp
jge
repnz
in
in
cmp
sub
daa
insl
outsl
outsb
aaa
cmp
pop
pop
jo
pop
pop
push
or
cmp
pop
inc
pop
mov
mov
push
inc
cmp
pop
inc
push
insl
jbe
fisttpll
or
adc
call
pusha
aaa
cmp
fs
push
cmp
aas
inc
clc
repz
pop
dec
gs
gs
icebp
ds
pop
cs
aaa
push
xor
xchg
imul
cmp
pop
or
xchg
insb
insl
sbb
inc
dec
int3
sub
arpl
pop
mov
mov
ja
dec
push
and
sbb
adc
push
cmp
dec
cmpb
jecxz
cmp
aas
dec
cmpl
pop
test
add
push
jno
das
inc
cmp
movsl
pop
mov
cmp
mov
fnsave
pop
or
sub
inc
loope
cmp
lahf
push
outsl
outsl
dec
add
aas
xchg
cmp
sbb
adc
xchg
cwtl
pop
sbb
sbb
imul
cmp
cltd
sub
outsl
cs
imul
outsl
ljmp
cmp
cld
cmp
pop
xchg
lods
leave
push
adc
mov
and
mov
xor
daa
rorl
ds
push
std
push
jg
or
test
cmp
cmp
test
arpl
dec
push
cmp
sub
push
dec
sub
and
imul
push
and
popa
das
std
xchg
cli
jae
pop
or
jo
jno
push
xchg
sub
mov
dec
fisubrs
mov
fsts
sub
adc
push
js
ret
xchg
pop
jl
lods
lcall
movsl
mov
push
jno
clc
or
xor
adc
mov
or
mov
lods
je
lcall
mov
or
das
stos
imul
or
test
sub
jg
jno
or
push
call
data16
mov
push
pop
inc
jo
inc
xchg
aaa
fldcw
aas
pop
insb
sbb
or
sbb
push
inc
jne
incl
stos
popa
fucomp
pop
mov
add
or
jl
shrl
dec
adc
scas
ja
mov
popa
insb
mov
insl
cld
scas
ja
sbb
xlat
std
fiadds
dec
dec
sbb
push
or
fisttps
push
pop
in
rcr
mov
out
pop
cmp
fcoms
jne
std
xchg
cli
pop
pop
pop
gs
mov
sbb
add
dec
push
jmp
mov
pop
std
sti
dec
xchg
lahf
inc
cs
stos
fsubs
cmp
insl
int3
aam
pop
js
push
bound
and
das
rol
or
push
in
outsl
cli
mov
pop
popa
pop
xor
data16
jge
pop
jnp
or
jge
incl
sbb
insl
ret
jge
jecxz
push
jns
pop
pop
cs
lret
ficomps
pop
push
pop
sbb
in
lcall
cmp
ss
cmp
imul
jg
or
clc
std
arpl
rcll
clc
and
push
push
jno
cmp
cmp
inc
gs
aas
outsb
adc
xor
inc
inc
pop
outsl
cmp
jnp
outsl
stc
inc
outsb
xchg
sub
or
push
or
je
xorl
loop
fsubrl
lods
or
dec
xor
pop
sti
rol
adc
push
pop
add
push
inc
push
add
fs
js
sti
or
decb
sbb
mov
pop
fildl
adc
icebp
mov
jo
data16
sub
mov
bound
pusha
imul
ss
sub
daa
insb
aaa
add
cmp
adc
jo
dec
ss
xor
imul
daa
outsb
xor
dec
popa
bound
lods
inc
imul
mov
orl
push
pop
cmp
lahf
sbb
jo
out
test
jge
iret
sti
sub
aam
jnp
push
mov
push
pop
sbb
fsubrs
subl
iret
adc
xor
sub
cmp
call
outsl
sub
fstps
cmp
and
mov
popa
or
pop
clc
ja
jb
in
fwait
mov
push
lahf
daa
jp
outsb
jns
push
fneni(8087
movhps
dec
ds
mov
sub
adc
mov
pop
sbb
pop
jge
cmp
push
push
jle
inc
pusha
sub
pop
sti
fdivp
in
lods
sbb
cmp
neg
aas
imul
push
insl
jo
call
push
outsb
xor
xor
int
mov
pop
data16
jnp
sbb
daa
gs
jmp
aas
inc
dec
dec
jne
sti
addr16
addl
adc
pop
cli
adc
sub
ja
push
pop
mov
bound
arpl
inc
sbb
sti
push
and
sub
or
mov
and
outsl
mov
fildll
inc
jo
cmp
mov
lahf
mov
mov
das
pop
cmp
inc
out
pop
dec
stos
rcrl
scas
sbb
movl
les
aam
push
pop
imul
cmc
imul
pop
sub
dec
andb
jae
push
sbb
xor
fwait
aas
lods
add
dec
sub
hlt
shlb
jno
push
lret
push
pop
addr16
test
fistpll
inc
dec
cmp
mov
inc
jg
pop
adc
clc
fisubrl
outsb
pop
mov
mov
sbb
sub
fs
add
cltd
sub
out
xorl
std
dec
inc
inc
dec
inc
inc
fistpl
mov
dec
lahf
or
add
adc
scas
pushl
cld
fildl
dec
repz
inc
push
dec
dec
sub
sub
add
outsl
sub
xor
icebp
jae
daa
add
sub
and
sub
pop
subl
leave
jge
xor
adc
int
fs
add
and
or
popa
or
ja
cmp
cmp
sbb
sbb
je
hlt
test
sub
mov
outsb
cmc
ss
push
dec
scas
arpl
xchg
orl
gs
sub
or
jle
cmp
loope
xlat
fidivl
xchg
dec
mov
dec
push
pop
lods
mov
jp
inc
push
jge
and
adc
clc
push
sub
jo
sbb
arpl
fistpl
imul
add
negb
pop
cli
sbb
sub
inc
imul
iret
fwait
xor
pop
or
outsb
jo
imul
xor
ret
mov
out
fildl
arpl
test
imul
sub
sub
sub
xor
shrb
fs
ja
dec
sub
pop
dec
mov
adc
push
jecxz
dec
addr16
dec
pop
sub
sub
sbb
pop
je
cmc
insl
popa
pop
add
add
sbb
xor
sub
pop
mov
jl,pt
or
lret
imul
pop
push
xor
add
adc
pcmpgtd
inc
add
jg
adc
enter
mov
jmp
adc
sub
jne
popa
pop
sub
and
push
pop
mov
push
cs
sub
stos
jbe
push
das
pop
sub
stos
shll
lds
cs
js
out
shrb
fwait
cltd
sub
fdiv
test
xor
imul
lret
push
cld
sbb
aaa
sbb
mov
push
mov
sbb
or
dec
pop
cltd
lret
or
or
cmp
and
cmp
pusha
cmpb
and
sub
test
test
mov
daa
loope
ret
pop
lret
xor
xor
in
shrb
push
pop
xor
aaa
cmpsl
sbb
mov
enter
inc
and
sub
sub
jbe
xor
sub
pop
and
xor
cmp
sti
mov
fstl
outsl
lahf
pop
jo
jg
sbb
mov
xchg
sub
push
addr16
aaa
pop
mov
adcl
jl
push
or
pusha
mov
out
dec
fs
addl
arpl
add
fwait
cmp
push
push
dec
mov
mov
dec
dec
cmp
mov
dec
dec
stc
adc
dec
addr16
int
mov
jecxz
push
cmp
xorl
addr16
pop
inc
scas
and
addr16
cmp
mov
movsl
add
andl
fcmovnbe
cmp
cmp
fs
insb
loope
pop
push
imul
lea
mov
aaa
cs
inc
arpl
sarb
inc
mov
or
xchg
pop
inc
mov
lods
in
jbe
fnstsw
pusha
jb
cmp
fs
dec
ja
aas
adc
pop
xlat
das
inc
arpl
pop
push
add
aaa
outsl
jne
dec
leave
fnsave
or
dec
sub
jo
das
sub
outsb
popa
pop
leave
imul
pop
cmp
cmp
mov
test
es
outsl
ja
ljmp
push
dec
push
inc
jmp
arpl
xor
push
ret
add
arpl
sub
sub
lds
std
pop
inc
inc
ds
inc
inc
inc
jg
incl
dec
dec
dec
dec
dec
push
dec
push
push
push
push
push
pop
pop
popa
lea
pop
arpl
std
cmpsb
mov
pop
mov
repz
mov
jo
xchg
fcmovb
aas
in
push
inc
and
daa
pop
insl
and
leave
sbb
adc
inc
roll
cmp
adc
lahf
filds
cmp
jo
jae
xchg
arpl
gs
cmp
push
push
inc
outsb
sbb
mov
insb
sbb
inc
mov
sub
inc
sbb
dec
cmp
mov
jno
jg
add
inc
fs
pop
push
and
pop
dec
jne
sub
outsl
adc
out
pusha
xor
jae
cmp
aas
dec
inc
sub
gs
insl
and
daa
loop
ljmp
push
bound
jae
jo
inc
ds
inc
and
push
jb
ds
lret
rclb
pusha
jmp
std
push
jo
insl
xlat
pusha
addl
jae
imul
pop
popa
jo
pop
std
dec
fisubrs
in
add
xor
inc
stos
das
jbe
dec
sti
or
add
jo
sub
sub
sub
dec
sahf
aaa
or
and
mov
jae
dec
push
xchg
push
mov
and
arpl
xor
push
mov
shrl
jno
xor
dec
inc
sbb
xor
mov
pop
arpl
sub
adc
adc
dec
pop
cld
cmp
cmp
test
pop
xchg
mov
daa
sub
or
or
dec
aam
dec
jno
mov
data16
xor
inc
inc
out
aad
aas
sbb
fwait
jbe
adc
pop
test
cmp
or
adc
stos
cvttps2pi
sub
push
sub
mov
sub
shrb
fildll
mov
sub
inc
cs
sub
data16
sub
cs
sub
cs
decl
das
jae
jl
mov
or
pop
sub
cld
sbb
imul
inc
cld
cs
pushl
cs
cmp
xor
xor
xor
ljmp
cmp
imul
test
cmpsl
sub
mov
ljmp
in
jmp
xor
inc
xor
pop
cs
xor
xor
fisubrs
loopne
out
out
xor
xor
push
xor
xor
xorl
das
mov
cmp
xor
incl
xor
das
add
xor
dec
xor
je
popf
xor
xor
in
in
xor
xor
xor
ss
and
and
xor
aaa
aaa
dec
xor
incl
aaa
mov
ss
xor
mov
xor
call
mov
xor
cmp
test
xchg
cltd
xor
cmp
das
pop
cmp
ljmp
cmp
sti
sbb
sub
ljmp
mov
mov
sub
sub
sub
sub
sub
clc
sub
sub
cs
mov
sub
sub
push
sub
sub
sub
xchg
xchg
sub
fisubrs
in
jmp
repz
and
and
cmp
inc
sub
stos
xchg
incl
xchg
sub
mov
sub
das
shrb
sub
lcall
xor
cs
sub
xor
jg
jg
mov
pop
xchg
lret
xor
xor
pop
xor
xor
decl
push
xor
xor
xor
jns
mov
xor
pop
xor
xorl
mov
xchg
xor
xor
cmp
ss
cmp
jno
inc
cmp
das
cld
add
jmp
cmp
aaa
adc
fisttps
mov
jge
cmp
cmp
aaa
and
cmp
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
jecxz
pop
pop
aas
add
pop
sub
adc
popa
push
ljmp
inc
jns
sub
sub
cmp
ljmp
sub
insb
sub
sub
das
das
cmp
sub
call
cmp
sub
cs
sub
pushl
pop
sub
lcall
das
repz
sub
xor
cmp
dec
mov
subl
mov
mov
xor
das
loop
divb
or
adc
adc
jg
loop
cmp
xor
sub
pushl
das
lret
xor
xor
sub
xor
xor
xor
pushl
loope
dec
xor
pop
xor
jne
jge
mov
lcall
xor
ljmp
xor
js
mov
xchg
xor
xor
xor
xor
xor
xor
call
xor
mov
push
xor
jbe
mov
xchg
ss
mov
jg
pushl
cmc
ss
xor
lods
xor
xor
mov
enter
jmp
push
out
ss
xor
cmp
mov
xchg
aaa
dec
fdivrl
insl
aaa
mov
lds
shll
test
dec
mov
filds
cmp
sub
sbb
sbb
mov
sub
sub
sub
sub
sub
or
add
adc
adc
sar
ja
xchg
js
sub
sub
cs
fcmovnb
ljmp
out
cs
sub
das
imul
pushf
sub
fisubrs
loope
out
bnd
sub
xor
sub
sub
subl
fwait
xor
stc
pop
das
push
sub
xor
fwait
xchg
outsb
addr16
arpl
xor
das
jno
push
push
add
or
sbb
xor
int3
xor
cld
sub
xor
adc
das
xchg
mov
xor
xchg
cs
xor
lahf
int
idiv
lcall
cs
xor
xor
xor
das
push
xor
xor
xchg
mov
mov
mov
test
jmp
xor
das
adc
inc
xor
insb
xor
xor
xor
decl
ss
xor
aaa
sub
inc
xchg
cmp
aaa
mov
cmp
imul
sub
sub
jg
fcmovnbe
sub
mov
sub
sub
sub
sub
mov
sub
sub
add
push
cs
sarb
daa
sub
je
adc
push
sub
leave
shr
xchg
ljmp
jns
jl
subl
rcll
cli
push
jmp
xor
fnstcw
in
cmp
aaa
or
outsl
cmp
cmp
fucomp
filds
cmp
dec
cmp
add
and
movsl
cmp
cmp
cmp
cmp
aad
ljmp
popf
aaa
sub
push
sub
push
sub
movsb
sub
sub
lock
sbb
sub
sub
sub
or
pop
sub
sub
and
insl
sub
test
add
out
sub
add
dec
das
dec
sub
arpl
popf
mov
sub
adcl
cs
sub
mov
lock
das
ljmp
xorb
sub
shll
das
mov
shrl
cs
cmpsb
das
insl
mov
pop
or
inc
or
sub
xor
cs
and
int3
pushl
cmp
dec
sub
jl
jge
cltd
sub
push
xor
push
sub
in
jae
xlat
sahf
sub
cs
sub
push
subl
xor
push
aad
aaa
xor
cmc
test
mov
std
sub
pop
sub
or
mov
andb
jb
mov
outsb
dec
gs
cs
unpckhps
std
sti
inc
pop
push
jb
addr16
dec
push
dec
dec
pop
push
dec
inc
push
push
out
adc
incl
inc
pop
jae
fs
pop
outsb
pop
cmp
outsl
data16
divb
gs
dec
imul
inc
outsl
ja
adc
push
outsl
push
outsl
popa
insl
sbb
jne
mov
add
cs
ja
adc
fstpt
je
jae
and
je
and
in
std
jns
je
jbe
adc
outsb
imul
sub
popa
bound
outsl
fldcw
ss
fs
in
ficoms
jbe
hlt
mulps
jg
mov
jae
jbe
pop
jns
jo
mov
mov
adc
push
fnstcw
xor
xor
mov
sub
push
gs
add
push
ret
aas
jb
outsb
cmp
ja
sbb
mov
imulb
insl
adc
push
jae
in
ret
out
imul
lock
push
push
jg
bound
jo
mov
mov
insb
popa
push
ds
pop
inc
js
adc
data16
push
push
adc
jns
dec
jmp
mov
fs
imul
outsb
andl
jne
dec
inc
inc
xor
or
push
sbb
inc
inc
xchg
jne
pop
mov
lods
inc
mov
fwait
mov
add
cmovno
jmp
mov
jb
or
inc
fnstcw
insl
popa
dec
pcmpeqw
outsb
outsb
cmpsl
sbb
dec
jae
xor
jae
jnp
or
lds
movd
add
jae
xchg
mov
adc
insl
jbe
inc
jmp
out
mov
push
and
fs
daa
push
sti
jo
mov
imul
insb
sti
imul
fwait
rcrb
dec
dec
insl
imul
push
popa
popa
insl
inc
jae
jno
aaa
push
push
ss
push
inc
inc
push
outsl
push
in
outsl
dec
xor
add
sbb
incl
push
out
adc
xor
xor
xor
xor
add
int3
aam
mov
fcomp
mov
out
add
mov
out
ja
outsl
imul
sbb
fsubr
mov
ltr
pop
lcall
mov
inc
repz
sbb
outsb
adc
xchg
cli
imul
push
sti
mov
or
push
add
or
mov
sbb
add
and
insb
or
pop
add
mov
or
add
pop
add
fists
ret
mov
xlat
rclb
leave
sti
roll
rsm
call
xchg
jecxz
or
decl
jno
scas
stc
inc
pop
bound
mov
inc
sbb
add
leave
xadd
sbbl
mov
inc
jne
mov
or
sbb
mov
nop
sub
mov
unpcklps
or
pop
push
add
pop
push
inc
dec
push
xor
and
add
sub
mov
dec
inc
repnz
add
incl
rolb
nop
add
add
in
in
sub
cltd
shlb
jns
add
decb
add
add
add
add
imul
jg
push
adc
add
add
mov
das
push
icebp
dec
and
inc
xchg
add
add
jbe
out
rorb
add
add
add
inc
inc
test
mov
or
add
gs
je
inc
imul
outsb
addr16
pusha
mov
imul
inc
insb
jne
push
jge
outsb
insl
and
je
push
imul
add
add
outsl
jae
dec
popa
lea
sub
gs
push
sti
insl
sub
outsl
jbe
inc
js
and
mov
fildll
cmovle
inc
inc
or
adc
fstpl
jb
test
js
jae
mov
jo
outsb
or
dec
push
pushf
add
outsl
dec
push
pop
imul
cld
jne
dec
outsb
outsw
adc
add
mull
jae
cpuid
pushf
insb
adc
out
lods
popf
insl
adc
inc
mov
and
mov
arpl
jnp
incl
jae
outsl
outsb
mov
jb
push
add
dec
adc
insl
imul
fldl
pop
imulb
je
adc
icebp
mov
push
outsl
outsl
insb
lock
push
lock
test
sub
ss
xor
push
sub
roll
lea
decl
mov
test
mov
jmp
adc
mov
adc
pop
or
pop
or
call
leave
adc
mov
mov
mov
or
dec
adc
or
and
or
incl
mov
jp
call
and
incl
sbb
ljmp
sub
or
and
inc
sub
jg
mov
push
push
jns
aaa
xor
jmp
mov
adc
xchg
sbb
xchg
mov
sbb
dec
cmp
mov
lret
xor
xchg
lock
push
insl
lret
mov
or
icebp
adc
add
mov
lret
mov
test
jno
mov
fisttpl
cmpsb
pop
push
push
dec
mov
mov
cmp
movsl
dec
mov
mov
adc
mov
je
or
push
andl
rcr
mov
in
or
out
mov
inc
das
dec
sbb
mov
add
sub
xor
push
xor
xor
xor
jo
gs
jo
pop
push
fnsave
adc
pop
je
inc
mov
adc
or
mov
mov
lods
mov
push
sub
ds
outsl
xor
pop
push
mov
add
mov
jb
jae
arpl
fcmovb
pop
arpl
je
subb
ss
jae
xchg
or
insb
or
pop
out
cs
insl
bound
scas
ja
or
jbe
push
sbb
outsb
arpl
mov
aas
lods
inc
inc
js
inc
jb
dec
aam
mov
sub
data16
insl
mov
fisubs
pop
push
jae
sbb
mov
xor
or
lds
aas
adc
cs
add
jne
jo
fs
dec
out
hlt
or
or
out
inc
push
sbb
clc
aaa
jne
mov
ja
cmp
fs
dec
fs
sbb
or
cmp
jge
mov
jae
gs
mov
adc
push
outsl
or
outsb
mov
mov
pushf
shrb
adc
xor
cmp
or
push
gs
mov
popa
inc
sbb
ret
inc
jne
outsb
or
jo
leave
ss
outsl
jns
fstl
jnp
bound
jg
imul
dec
jl
push
inc
add
add
or
adc
dec
pushl
pop
sidtl
add
mov
lock
fldenv
inc
add
bswap
mov
out
add
xor
sbb
idivb
adc
jns
arpl
push
aaa
test
js
mov
inc
add
pop
popa
push
cs
xchg
and
pop
mov
nop
xor
adc
mov
jb
popa
push
in
add
ret
cmp
inc
cs
fwait
mov
push
inc
mov
mov
pop
arpl
or
repz
lock
xchg
lock
jns
add
add
add
add
dec
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
