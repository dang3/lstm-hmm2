daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
int3
add
daa
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
inc
add
leave
test
stc
push
cld
pop
ret
pop
pop
fidivrs
sub
adc
add
mov
jbe
mov
into
or
mov
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jnp
push
sub
rclb
and
or
je
inc
mov
mov
mov
ja
mov
mov
mov
mov
cmp
jne
test
mov
aaa
insb
pop
or
cmpsb
push
outsl
add
adc
aaa
ret
in
jmp
sbb
sbb
xor
dec
int
mov
add
cmp
mov
jl
mov
idivb
lea
adc
add
stos
stos
stos
push
pop
push
lret
sbb
or
inc
push
adc
outsb
cmp
adc
and
push
or
pop
cmp
les
mov
negb
movb
aas
testb
rolb
push
add
inc
mov
mov
shrl
stc
lea
mov
push
arpl
clc
shr
rep
pop
push
and
mov
movsb
dec
int
mov
and
pop
push
push
lea
fnsave
sbb
jns
mov
fstpt
jno
inc
lret
sbb
push
sbb
jb
xor
and
jmp
dec
and
fldcw
lahf
adc
and
xor
addr16
xchg
pop
testl
mov
das
jnp
lea
pop
cmpsl
gs
mov
popa
xorl
sub
out
jp
push
imul
outsb
mov
mov
inc
mov
push
jo
fcomp
mov
pop
test
cmpb
jne
adc
sub
adc
fstl
ret
int
pushf
push
pop
mov
push
push
sbb
push
lods
fldcw
push
leave
push
sub
adc
jnp
mov
pop
ss
push
mov
xchg
lret
cmp
pop
call
jne
jne
adc
insl
das
xor
add
scas
sbb
add
pushw
notb
or
orb
movsl
fistl
ret
lock
sbb
inc
and
in
out
insl
ss
adc
stos
push
int3
dec
adc
push
dec
xchg
in
aam
inc
rcrb
sub
dec
push
cmpsb
and
jne
jecxz
sbb
xchg
sahf
and
jb
ret
adc
fxch
mov
rorb
sbb
sbb
rorl
mov
mov
insb
insb
ret
pop
pop
out
sti
or
js
sbb
add
push
cmp
je
divb
repz
je
sub
dec
and
lods
loope
or
adc
and
xchg
sub
rcrb
pop
mov
push
sub
cmp
push
stos
or
cmpl
imul
jns
outsb
in
cwtl
stos
xor
icebp
mov
adc
stc
adc
fldl
aad
jp
add
xlat
outsb
dec
dec
inc
incl
lea
push
push
push
sbb
xor
push
push
gs
push
mov
pop
xchg
insb
loop
ss
cmp
adc
push
fadds
inc
adc
and
outsl
dec
sbb
or
or
cmp
push
add
push
add
bound
sti
mov
push
push
adc
dec
mov
jl
or
push
ret
adc
jae
fnstcw
dec
lret
add
sti
jp
int3
or
push
lret
pusha
add
xor
xor
push
jp
scas
jae
mov
pop
jns
cmc
or
or
sti
daa
add
decl
out
fistpl
and
or
xor
and
inc
jae
mov
mov
push
cmp
movsb
pusha
xlat
fs
or
int
push
sub
sbb
push
clc
pop
pop
dec
ret
or
iret
dec
push
push
adc
adc
inc
popa
or
in
push
cli
dec
mov
adc
push
xchg
sbb
push
jne
add
mov
sti
testl
clc
repz
in
or
jl
dec
out
je
dec
push
fistpl
incl
add
test
jle
push
dec
jns
add
jp
jnp
inc
push
pop
rcl
cmp
fs
jg
add
out
or
jmp
addl
sub
rcrb
push
fs
sbb
adc
cmp
movsb
adc
mov
xor
pop
xor
sbb
shl
scas
out
andl
outsl
add
mov
sbbl
pop
inc
jb
sub
sub
and
mov
jno
test
push
adc
mov
cmp
iret
push
lret
lds
push
push
or
cmp
mov
in
fmulp
pusha
adc
adc
xchg
test
pop
inc
sbb
ret
shr
push
rorb
cwtl
outsb
lea
push
shl
fldt
pop
gs
test
jg
pop
ret
or
stos
mov
push
ljmp
sbb
in
xchg
sbbl
lods
xor
inc
fsubs
pop
js
sahf
imul
cmp
push
loope
inc
push
and
sbbw
or
lea
xor
movsl
or
add
cmp
xor
and
or
and
mov
movsl
xchg
cmova
loop
test
rclb
sbb
or
inc
clc
push
pop
and
jl
or
mov
xor
xchg
mov
or
iret
or
dec
lcall
xor
adc
or
insl
ds
mov
adc
sbb
xchg
mov
sub
add
add
xchg
rclb
sub
mov
imul
sbb
xlat
push
push
pop
cmc
shrb
push
and
push
out
pop
or
adc
adc
push
rolb
xlat
and
hlt
push
or
xor
je
ret
aaa
or
aad
sub
test
cmp
sub
test
and
mov
lret
add
mov
outsb
push
or
imul
into
and
or
and
xchg
adc
sub
popa
in
add
inc
mov
sbb
pusha
xorb
lods
rolb
mov
jmp
aad
add
inc
or
xchg
xor
xchg
or
cmpsb
jmp
mov
inc
ficomps
sbb
aaa
sbb
mov
xor
or
push
data16
mov
scas
lds
mov
cmpl
mov
cmovbe
loopne
js
jb
xor
inc
ret
and
dec
loope
inc
repnz
and
mov
ret
dec
roll
aas
pusha
inc
pop
mov
jmp
popf
js
mov
push
mov
mov
push
sbb
das
adc
push
push
adc
jo
aad
inc
pusha
test
iret
or
nop
xchg
adc
and
lods
push
pop
pop
inc
mov
les
movsl
inc
data16
enter
and
orl
scas
or
dec
push
pusha
adc
mov
or
test
int
push
popf
add
insb
or
mov
outsb
data16
cmp
sbb
sti
push
addl
inc
pop
jo
xor
pusha
push
movl
out
push
sbb
push
pushf
cmp
clc
jbe
push
int3
add
faddl
push
mov
je
or
jo
xor
cmp
int3
sbb
aam
or
pop
dec
and
insb
jge
fnstenv
mov
sbb
fmuls
dec
add
lret
inc
mov
pop
aad
sbb
out
or
outsl
or
imul
jo
push
push
add
cmc
push
or
push
dec
and
xlat
in
pushf
pop
mov
xchg
mov
lock
push
hlt
push
pop
out
inc
dec
push
mov
mov
divl
bound
and
mov
adc
mov
dec
mov
push
cmp
in
outsl
jecxz
je
shll
add
adc
pop
dec
inc
adc
add
mov
js
shr
or
push
mov
jge
mov
push
and
adc
xor
aam
mov
mov
in
push
push
jecxz
lock
pusha
je
out
cmc
adc
cmpl
sbbl
adc
jne
pusha
insb
insb
mov
mov
jg
ja
cmpsb
ror
push
push
push
pop
or
inc
cmp
dec
and
mov
neg
jmp
popa
loope
push
sbb
mov
jb
sub
inc
xor
repz
dec
and
mov
adc
add
adc
shrl
inc
cltd
sub
adcl
sbb
jnp
sub
mov
push
xor
jnp
les
in
adc
add
or
or
mov
in
adc
lgdtl
dec
ss
or
xor
roll
in
push
nop
mov
and
ror
ljmp
or
hlt
pusha
lret
push
shr
jbe
or
call
mov
mov
pop
adc
mov
ss
sbb
mov
push
mov
inc
leave
sarl
add
cwtl
sbb
or
cmp
flds
je
stc
push
dec
xor
addr16
and
and
adcl
xor
xchg
addr16
adc
add
imul
sub
add
cmp
push
add
dec
inc
cs
push
loopne
scas
add
adc
orb
and
andb
dec
lock
cwtl
outsb
inc
adc
das
xchg
mov
cmc
loopne
stos
popf
mov
lods
push
dec
dec
das
push
add
cmp
sar
add
jo
or
nop
je
xchg
dec
stc
sbb
sahf
js
mov
lcall
stos
pop
sub
pop
add
lods
mov
roll
sbb
mov
dec
and
shlb
mov
sbbl
jne
ret
lcall
add
adc
and
push
sbb
fsin
and
mov
int
cmp
cmp
and
aas
inc
insb
inc
xor
arpl
cli
data16
sub
and
add
lods
mov
sub
pop
mov
inc
push
push
adc
sub
call
lea
xor
sub
push
xor
sbb
sub
jne
rol
add
add
adc
enter
imul
push
ficoml
pop
aaa
inc
pop
popa
add
loopne
sub
inc
out
xchg
sbb
and
and
add
jns
pop
adc
or
cmp
outsb
mov
pop
dec
sub
cmp
push
das
fsub
ret
push
and
rcll
inc
xchg
movsb
lcall
aas
sbb
ja
mov
xor
or
lock
fistpll
sbb
aad
adc
insb
ss
push
jmp
and
add
xor
divb
leave
jae
daa
jne
push
mov
cltd
idiv
mov
mov
add
mov
mov
mov
jb
sub
push
mov
cmp
jg
arpl
or
lret
fdivl
xor
int3
enter
xor
sarb
mov
test
xor
xor
xor
xchg
nop
mov
test
xor
je
insb
push
fs
pop
pop
xor
xor
push
dec
dec
inc
xor
xor
inc
cmp
xor
xor
xor
sub
and
xor
xor
sbb
adc
xor
xor
or
add
in
xor
cld
inc
clc
hlt
jl
mov
inc
jl
addb
xor
test
xor
xchg
cwtl
pushf
mov
movsb
test
mov
in
xor
fs
enter
add
jbe
enter
cmp
or
pop
sub
scas
mov
aad
pop
ret
mov
lcall
ret
and
outsb
pop
jge
shlb
push
add
int3
add
fadd
cwtl
inc
andl
mov
xor
mov
ljmp
inc
mov
or
lock
mov
or
or
or
lock
or
hlt
mov
mov
cld
std
mov
push
add
xchg
std
aas
inc
xchg
lea
test
push
pop
xor
insb
add
scas
mov
pop
or
add
and
add
mov
xor
and
inc
or
add
or
bswap
add
jbe
aam
dec
movsb
notb
testb
in
movzwl
jmp
sub
insb
std
repz
jmp
push
pop
pusha
push
test
and
mov
imul
or
cli
mov
mov
mov
sbbb
sbb
inc
lcall
xchg
mov
or
add
sub
test
ret
inc
sub
fs
mov
add
jecxz
mov
test
mov
mov
pusha
jne
push
adc
push
push
insb
enter
xor
jo
ret
arpl
loopne
jno
inc
jae
sub
lea
adc
test
or
push
int3
add
rclb
lea
cmpsb
mov
mov
push
push
fs
repnz
mov
dec
shll
jl
pop
sub
gs
loop
lock
adc
dec
shll
xor
testb
xor
mov
dec
adc
cs
dec
shll
scas
mov
add
push
add
adc
adc
pop
or
sbb
movsl
in
mov
mov
or
popf
or
das
add
mov
outsb
add
xor
adc
add
add
das
dec
cmp
or
sub
pop
sub
adc
fldt
out
arpl
movhps
imul
jnp
pop
sbb
xchg
daa
pop
xlat
jne
push
addl
rdtsc
lcall
inc
push
adc
sub
pop
or
icebp
testl
pop
xlat
orl
test
jno
popf
fnstenv
mov
pop
push
push
addr16
add
out
movsl
addr16
mov
mov
or
inc
adcl
cltd
int
arpl
sar
or
fildl
xlat
jne
mov
inc
aas
dec
mov
fisttpl
add
and
push
negb
loop
mov
cmpsb
imul
bound
dec
inc
dec
pop
lahf
imul
cmpsb
fnstenv
fmull
shlb
or
je
add
pop
mov
clc
add
mov
in
fldenv
inc
loope
or
popf
inc
outsb
mov
cs
test
sbb
mov
xchg
pop
add
adc
and
int
xchg
nop
mov
sub
js
jb
insb
daa
shlw
dec
dec
dec
shll
add
xor
xor
shll
push
sbb
or
xchg
dec
roll
add
cs
out
rol
cmpsb
call
and
inc
pop
mov
add
insl
jae
adc
xchg
or
and
and
sbb
lock
xor
and
enter
xor
or
add
imul
imul
lret
into
insb
add
and
xor
rcrl
adc
or
cmpsb
imul
cwtl
imul
lock
sarl
cmpsl
add
outsl
subl
enter
and
daa
lock
sbbb
inc
pusha
xor
add
inc
subb
dec
sub
orb
jns
and
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
pushf
leave
xor
add
inc
inc
dec
fcomps
idiv
xor
cs
insb
add
push
inc
push
or
push
push
xor
and
xchg
jge
inc
push
sbb
ror
pop
add
divl
in
or
clc
cld
add
sti
stc
cld
idiv
and
std
testl
cld
stc
fisttps
sbb
lret
push
mov
dec
leave
push
dec
bound
push
ljmp
outsl
pop
insb
sbb
imul
sbb
sbb
sbb
push
pop
popa
sub
decl
testb
or
rorb
add
test
or
mov
das
cld
lea
mov
xor
aaa
fistpll
add
mov
or
xor
repz
xchg
pop
mov
int3
jl
gs
cmpl
jg
stc
std
cld
inc
call
incl
pop
or
jmp
dec
shlb
sahf
add
insl
or
xor
or
add
inc
into
xchg
xchg
add
adc
or
xchg
in
pop
mulps
ja
or
jle
fs
or
stc
stc
cld
xchg
jo
or
mov
dec
dec
sbb
in
insb
daa
sub
ja
arpl
shlb
dec
daa
dec
add
pop
sub
pusha
insl
pop
lea
or
cmp
jae
decb
data16
jns
popl
mov
popa
fisttpl
push
jbe
push
ss
ds
or
incl
jle
and
js
fdivr
pop
cld
push
popa
push
sub
push
test
out
test
movsb
aad
pcmpgtd
mov
test
fsqrt
cld
div
movsb
fs
xchg
add
sti
out
repnz
adc
aad
sti
cld
inc
out
dec
xchg
cli
rolb
test
add
inc
xor
das
std
repnz
inc
push
mov
sub
mov
popa
pop
inc
jg
mov
xchg
or
mov
dec
stos
aaa
mov
jg
pop
jl
add
addb
stc
push
gs
xor
xchg
mov
cmp
xor
jmp
pop
loop
sti
jg
in
pop
out
gs
daa
call
std
pop
ljmp
cld
mov
mov
or
lea
push
or
or
es
divb
sbb
add
in
inc
jmp
cmpsb
or
in
stos
or
mov
xor
insl
roll
jmp
into
fcomp
push
sub
push
push
dec
test
std
incl
xchg
push
mov
clc
insb
sbb
xchg
inc
lret
inc
xor
imul
fstps
in
dec
pop
addr16
cmpb
or
xorps
dec
imulb
mov
push
pop
mov
mov
xorl
pop
pop
mov
push
xchg
arpl
mov
jg
in
es
sub
mov
inc
and
std
ds
push
xorb
clc
insl
sbb
push
cld
insl
cmc
in
dec
cmp
loope
mov
jb
push
loope
dec
fists
pop
rol
mov
dec
dec
xchg
cmp
lcall
jle
outsb
push
sti
jno
pop
filds
or
loopne
dec
ret
push
pop
loope
sub
mov
clc
ret
div
decl
mov
dec
mov
sbbb
mov
inc
std
cmp
outsl
ss
cmp
jbe
cmpl
dec
jnp
mov
cmpb
decb
xor
shll
dec
dec
push
inc
mov
push
xchg
push
addr16
clc
jno
int
das
faddl
imul
lcall
outsb
cmp
add
sbb
mov
inc
ja
pop
sbb
jmp
jo
lret
lods
stc
divb
mov
jnp
sbb
dec
and
push
and
rorb
inc
mov
push
jno
adc
or
add
in
inc
mov
push
jno
sub
xor
jb
sbb
mov
std
sub
sbb
pop
lods
sbb
sbbb
or
add
cmp
jg
test
push
das
push
fs
add
jmp
adc
sbb
or
lock
push
or
cmp
pop
repz
adc
sti
cli
outsb
sbb
jnp
xor
movl
in
push
pusha
cmp
pushf
inc
mov
lock
push
push
pop
pop
pop
lods
dec
push
push
dec
lahf
and
push
push
xchg
popa
add
test
ja
sub
or
fdivs
dec
insl
inc
mov
mov
push
insb
add
xor
jg
cmp
in
inc
iret
jl
push
jae
sti
dec
sub
push
pusha
aad
dec
out
dec
push
xor
pusha
jae
pusha
mov
or
test
sub
cld
sub
mov
add
stc
dec
or
add
in
fs
dec
mov
loop
mov
xor
mov
leave
shll
adc
pop
mov
in
cmpb
subl
lret
ret
dec
aad
xchg
add
out
xor
test
in
sbb
pop
push
jg
in
sbb
push
xchg
mov
push
dec
add
add
mov
dec
decb
data16
clc
stc
jb
pop
jle
idiv
push
cmp
or
scas
push
out
cmpsl
xchg
fs
dec
mov
push
je
std
jns
or
decb
std
pop
aaa
mov
add
dec
out
add
decl
roll
sub
push
ja
and
pop
jp
push
lds
or
sub
jno
push
orb
std
notb
jno
pop
and
xchg
dec
call
mov
stc
lock
call
jnp
mov
pop
pop
xchg
mov
mov
cmp
push
or
pop
xchg
sbb
daa
jnp
cmp
ja
jg
lcall
mov
fwait
add
in
call
insl
or
decl
pop
pusha
icebp
arpl
push
xchg
test
in
jmp
jnp
add
jb
ljmp
add
in
jg
incl
outsb
pop
les
mov
cmp
rcrl
ret
sti
inc
hlt
dec
fbstp
test
xor
sbb
pop
cmp
pop
or
mov
rolb
std
lahf
mov
mov
lahf
aaa
or
hlt
ds
in
jecxz
loope
repz
inc
and
pop
jg
jl
loope
inc
daa
inc
dec
popw
int3
add
mov
or
pop
orb
in
ret
leave
xor
push
js
loope
sub
sub
xchg
aas
outsb
xchg
cmpsl
fucomi
movsl
add
mov
pushl
fisttpl
sbb
sbb
cld
mulb
or
cmp
insb
add
popa
pop
outsb
std
or
xchg
cld
jge
add
or
mov
cs
in
pop
mov
fadd
outsl
sahf
outsl
ss
ret
jne
shll
cltd
std
fstp
mov
in
cld
mov
out
add
clc
xor
int3
in
dec
cld
test
dec
testl
xchg
fucomip
aaa
hlt
mov
xchg
and
dec
xchg
lret
lods
decl
dec
mov
data16
fidivl
push
or
out
test
addr16
addr16
add
popa
or
push
fsubrs
in
or
xor
rclb
aas
xor
cmpb
loopne
cmc
add
dec
push
inc
subps
hlt
dec
pusha
lea
inc
dec
imul
xchg
pop
and
repz
nop
adc
test
int
mov
hlt
jnp
add
mov
incl
mov
mov
cmp
test
inc
out
sbb
push
testb
repnz
mov
xchg
mov
jb
cmp
outsb
lahf
push
stc
and
das
lock
lcall
pusha
cmp
pop
icebp
xchg
mov
lock
add
mov
mov
or
imull
imul
jbe
mov
repz
repnz
negb
pop
clc
in
popa
clc
and
xchg
add
mov
or
out
into
mov
mov
outsb
pop
icebp
ret
xchg
out
cli
lahf
lock
cmc
xacquire
insb
cmp
cmp
shll
std
insl
outsl
jg
imul
popw
inc
push
test
mov
xchg
mov
repz
jmp
ja
arpl
das
cld
jb
cmp
dec
out
add
mov
fnsave
clc
cli
data16
repz
lret
cmp
sbb
jb
ja
mov
dec
icebp
dec
adc
xor
outsl
xchg
pop
testl
cld
arpl
enter
cmpb
dec
shll
cld
enter
jecxz
pop
popa
in
xchg
cmp
lds
xor
addr16
int
mov
mov
and
cs
fs
dec
push
mov
mov
gs
cli
repnz
pop
out
lods
mov
cli
aaa
in
mov
xor
jb
gs
adc
stos
jl
add
inc
outsl
loopne
imul
mov
out
fwait
cmp
lcall
jmp
bound
pop
inc
cmovs
inc
add
push
dec
push
xchg
xchg
or
in
ss
sbb
addl
pop
cmc
cld
jg
negl
pushl
xchg
mov
pop
pop
pop
orb
inc
cmpsb
dec
vmovq
add
pop
push
cmp
in
imul
iret
test
or
notl
sti
sbb
adc
jl
hlt
std
popa
add
mov
sti
adc
lea
dec
dec
add
inc
cli
mov
imul
in
add
test
ss
push
adc
std
jb
cmpb
or
fwait
test
sti
ds
jb
mov
jmp
loopne
sub
mov
or
shl
jmp
mov
pop
or
and
cli
mov
xchg
add
add
enter
lret
xchg
imul
cmpb
orl
dec
testb
data16
aaa
clc
in
not
or
in
daa
mov
add
cld
pop
test
std
jg
decl
cli
cwtl
ret
out
add
mov
inc
add
mov
or
out
sub
das
jg
nop
inc
or
outsl
call
push
push
lds
and
leave
add
mov
fildll
jmp
repz
xchg
xchg
adc
jge
std
inc
ret
dec
dec
arpl
push
icebp
popl
push
push
clc
jae
or
lret
movsb
insb
mov
mov
dec
mov
jmp
orb
pop
cmp
inc
add
insl
cs
adc
jae
jne
dec
push
mov
sbb
jno
mov
inc
rcrl
jle
out
mov
in
inc
movsb
loope
add
add
add
lds
sbb
sub
out
mov
test
dec
add
lcall
adc
mov
jnp
add
adc
in
mov
add
xchg
or
loope
jmp
gs
push
push
pop
push
xchg
mov
inc
xorl
fwait
jg
ret
lret
inc
lret
icebp
dec
mov
in
add
ss
incl
std
sti
test
movsl
push
sti
outsl
push
insb
aam
in
roll
xchg
add
inc
fsub
out
testb
outsb
or
pop
arpl
push
push
add
dec
jl
cmp
sbb
add
sbbb
push
dec
adc
out
push
test
mov
jg
push
fidivl
lahf
test
xor
add
fs
in
std
add
insl
or
cltd
sub
movb
rclb
aaa
je
or
rcll
incl
decl
das
mov
arpl
dec
push
jb
inc
cmp
ret
dec
sbb
lock
pop
outsb
add
movl
imulb
test
test
xchg
inc
mov
add
gs
or
or
in
cmp
pop
push
pop
mov
pop
ljmp
std
mov
test
xor
pop
inc
xor
gs
clc
add
cmpl
jmp
punpcklbw
mov
outsb
jge
sbb
fldt
dec
jne
out
loop
rclb
or
rcr
inc
and
or
xor
push
fsub
sbb
fstpl
aad
inc
mov
push
dec
or
in
jecxz
cmp
ret
add
dec
push
rclb
jno
insl
cld
int
push
cmp
jo
mov
ret
jnp
dec
gs
adc
ljmp
inc
mull
and
rolb
mov
dec
sbb
add
loope
xor
push
aas
xchg
sbb
std
cmp
cmp
adc
movsb
sti
dec
cld
imul
and
and
shlb
mov
in
lcall
outsb
cld
or
add
mov
daa
dec
mov
xchg
cmpsl
cli
xchg
xor
push
dec
or
mov
ss
or
adc
fisubrs
iret
sbb
cmp
in
dec
xor
sarl
lea
push
clc
push
or
mov
mov
out
push
popa
pop
ds
mov
inc
aaa
jg
add
xor
mov
test
xchg
cmp
push
rorw
rol
jecxz
pop
or
xchg
xchg
bound
or
ret
lcall
sub
sbb
fnstcw
or
mov
dec
in
push
shrl
jbe
mov
adc
pushl
arpl
in
xor
orb
clc
pop
clc
sub
add
or
in
xor
fwait
loopne
gs
repnz
addl
mov
movsl
pop
stos
ljmp
add
dec
fstpl
sbb
pop
jl
lret
decl
add
mov
mov
icebp
add
out
or
insl
outsb
or
and
cltd
pop
insl
or
fsts
cmc
cmp
add
mov
dec
push
orb
std
xchg
rorl
jo
negb
rolb
or
push
sbb
mov
push
call
call
imul
mov
stos
xor
test
inc
mov
mov
inc
in
mov
jge
test
jae
cmp
aad
or
int3
insl
cmc
xchg
sti
mov
add
pop
cwtl
push
mov
out
fcmovnbe
fstpt
mov
loope
add
xchg
xor
test
or
sbb
xchg
pop
add
lods
inc
add
add
pop
cli
push
testl
hlt
stc
jno
jbe
insb
push
lret
jmp
xchg
adc
push
andl
dec
xor
negb
jb
push
test
cltd
pop
cmp
jno
roll
push
aas
add
dec
in
cmp
adc
push
xor
test
jb
imul
adcb
cld
jne
insl
adc
outsl
cmpl
sub
mov
out
xor
sbb
repnz
or
adc
icebp
or
or
int
clc
or
ffreep
outsb
insl
jge
addl
stc
jmp
jo
or
adc
jmp
negb
rol
fildll
push
loopne
add
jne
cld
in
mov
inc
stc
ret
push
xor
or
mov
adc
push
push
pop
pop
rcrl
mov
cmpsl
dec
cltd
mov
pop
mov
insl
cmp
push
out
in
push
pop
jl
js
mov
xchg
xor
lahf
adc
cmp
ljmp
jmp
pop
in
mov
jmp
les
mov
cmp
lret
inc
outsl
jg
call
mov
add
loope
fdivr
adc
sub
pop
clc
das
mov
cmp
xchg
pop
xor
jb
bnd
mov
or
mov
aam
xchg
inc
outsl
fistl
dec
test
inc
add
push
test
add
out
xchg
mov
paddw
cli
sbb
mov
lock
arpl
sbb
mov
in
push
inc
add
cld
insl
idiv
inc
add
jno
jno
xchg
in
xor
jmp
cli
mov
dec
out
xor
xchg
setp
clc
pop
fildl
adc
enter
orl
imul
pop
dec
mov
lea
and
or
dec
add
clc
outsl
sub
pop
inc
cli
aaa
imul
stc
mov
cld
xchg
clc
lea
pop
test
negl
jne
push
jle
pop
xchg
fidivl
mov
xor
hlt
aaa
xor
aaa
ss
or
sub
or
std
jg
aas
ret
inc
mov
lret
sbb
pop
call
inc
popf
adc
ret
mov
insl
aas
inc
add
jecxz
xchg
jecxz
mov
stc
jae
xorl
fcom
lea
mov
aas
imul
push
cmp
jbe
outsb
mov
rcrl
dec
jnp
sbb
mov
loop
test
sub
inc
test
sbb
shlb
mov
mov
jecxz
sbb
mov
fidivrs
test
sti
mov
cld
pop
adc
ja
ret
add
push
clc
in
lret
mov
mov
adc
mov
daa
test
enter
ret
ljmp
ja
adcb
out
and
and
xor
pop
sbb
push
jns
push
bound
add
ja
and
cmp
push
cwtl
and
jg
xlat
fimull
in
loope
mov
dec
loope
loop
jg
xor
push
xchg
insb
loop
pop
mov
cmp
test
sbb
arpl
icebp
jmp
dec
icebp
xchg
rolb
movl
fnstenv
xorb
sbb
pop
hlt
stos
add
js
mov
test
sti
adc
outsl
and
push
loope
ss
cmp
loope
orl
sub
fiaddl
pop
sbb
pop
addr16
int
test
bound
in
ss
xor
adc
pop
sbb
popf
adc
addb
xchg
or
cs
xchg
sub
cld
cmp
popa
jmp
mov
jne
adc
or
repnz
add
jnp
aas
add
addr16
outsb
sbb
icebp
adc
call
std
mov
xor
jno
xorb
aad
aaa
je
mov
mov
push
andl
lea
jg
pop
adc
test
cmp
mov
pop
insl
adc
in
orb
adc
hlt
cmp
mov
addr16
xor
dec
jno
out
mov
or
mov
les
adc
std
fisubrs
xor
pop
sbb
cld
push
call
jno
cld
jo
xor
outsb
or
push
in
ror
push
iret
mov
dec
dec
xchg
or
mov
sub
aam
fstpl
in
jge
jp
out
cmp
mov
lret
or
mov
or
xlat
pop
orb
aam
mov
out
lea
fisubrl
femms
lcall
addb
jecxz
xchg
insl
mov
ds
push
inc
inc
arpl
insl
sbb
insl
and
cmp
add
inc
add
in
aaa
clc
fistps
ret
jno
pop
mov
std
push
mov
fcmovnbe
decl
aaa
jmp
fldt
subb
pop
cmp
sbb
call
or
or
subps
lock
ja
cmpl
and
incb
push
jmp
imul
xor
insl
mov
stc
mov
xchg
dec
add
aas
shr
inc
repnz
xchg
push
add
jp
lods
mov
mov
push
subb
xor
movsl
stc
aas
loope
cmp
orl
cmp
insb
add
mov
aaa
mov
jb
in
sbb
aad
clc
incl
jp
add
and
insl
and
pop
push
ret
sbb
cld
pop
fyl2xp1
lret
mov
sbb
mov
or
push
cmpsb
or
jns
xchg
in
inc
in
push
subl
fsubrl
mov
je
pop
loopne
loope
jbe
daa
jb
push
stos
jb
stc
adc
fs
sbb
test
fs
ret
decl
in
inc
fdivr
daa
insb
test
push
lret
notb
jecxz
cmc
cli
push
mov
jge
out
in
int3
fildl
je
pop
pop
add
shlb
imul
fsts
clc
xchg
and
push
xor
push
push
ljmp
dec
subl
inc
sbb
lahf
push
lret
aaa
dec
mov
rolb
scas
icebp
std
icebp
sub
std
pop
clc
neg
ja
jbe
incb
add
bound
cld
add
fwait
mov
mov
pop
cli
sub
adc
add
push
sarl
sub
mov
insb
cmpsl
inc
test
ja
stos
mov
xchg
xchg
pop
mov
cmp
cmpsb
and
mov
arpl
pop
mov
mov
push
aad
inc
and
outsl
xor
cmpl
cmp
push
test
imul
mov
daa
aad
testb
xor
cmp
daa
in
sbb
lea
jb
outsb
push
sub
stos
inc
xchg
and
pop
sbb
push
mov
cmpb
mov
out
scas
adc
jo
cmp
add
leave
rorb
dec
pop
mov
push
push
push
gs
std
movsl
ja
push
addr16
push
push
fs
add
test
ja
add
mov
push
xchg
and
insb
fnstsw
in
push
dec
loopne
call
or
or
das
dec
dec
pop
rolb
inc
mov
arpl
pop
scas
je
rolb
dec
xor
and
push
dec
cmp
aad
cmp
shll
and
mov
test
or
pop
stc
icebp
das
js
pop
cld
pop
mov
pop
sub
mov
loop
mov
les
pop
or
imul
and
mov
sub
xchg
mov
jo
add
imul
std
outsl
jnp
loop
add
pop
fistps
jo
data16
arpl
pop
dec
insb
lods
insl
mov
test
xor
jb
dec
sbb
inc
incl
cld
into
cltd
mov
sti
dec
in
sub
out
sub
call
cmc
test
sub
dec
roll
lds
adc
frstor
dec
out
in
das
imul
aad
pop
test
imul
fucom
in
std
adc
mov
daa
test
mov
adcl
mov
fsubr
fwait
dec
lahf
xchg
dec
pop
mov
pop
arpl
xorb
fndisi(8087
imul
aaa
mov
jno
mov
pop
mov
outsl
sti
test
ds
adc
xchg
in
cwtl
cmp
sub
std
add
loop
outsl
popa
mov
pop
pop
pop
orb
xor
push
sub
imul
mov
pop
push
pop
idiv
loopne
dec
xor
cmp
cmp
and
lock
aaa
divl
push
stc
hlt
in
sub
stc
aaa
pop
lock
sbb
push
cmc
incl
outsb
dec
or
xor
cmc
push
jg
outsl
cltd
mov
xchg
cmc
mov
push
mov
jl
jbe
test
push
dec
lahf
andl
and
outsb
out
jns
idivl
icebp
shll
xlat
icebp
sub
push
or
push
mov
pusha
mov
pop
gs
add
jmp
push
stos
shlb
mov
ljmp
sub
pop
and
jl
shll
and
adc
andl
jp
insl
or
push
aas
ret
push
mov
jns
inc
jbe,pn
stc
jge
inc
inc
lahf
xor
stc
sbb
test
xor
mov
adc
leave
inc
push
call
iret
sub
into
dec
loopne
sub
sub
inc
shll
ds
or
icebp
fbld
call
cld
pop
pop
or
aam
xor
xchg
fwait
lods
sar
cmp
pop
test
shlb
sti
mov
xchg
lods
xchg
adc
icebp
push
pop
mov
fwait
sbbl
movsl
cmp
mov
cmp
inc
movsl
push
mov
fidivrs
push
mov
jle
outsl
mulb
jae
arpl
test
adc
mov
js
mov
push
lahf
mov
clc
xchg
jmp
jmp
sbb
xor
fs
out
sub
adc
or
push
inc
mov
cli
inc
dec
in
daa
outsl
cmp
lds
push
adc
pop
xchg
cmp
fcoms
mov
inc
out
mov
outsb
sarb
mov
popa
mov
xchg
pop
mov
push
push
dec
leave
xchg
pop
xorb
mov
popa
cmpsb
dec
into
sbbb
inc
pop
hlt
lea
in
sub
lock
movsl
push
stos
out
mov
push
or
mov
ja
flds
nop
xchg
incl
dec
std
xor
add
gs
push
mov
or
mov
jp,pt
andb
add
adc
dec
adc
add
jns
popa
sar
icebp
mov
xor
adc
xchg
sub
fcoml
add
loope
push
adc
pusha
test
xor
pop
cmp
or
jle
or
rcrb
or
out
aam
sbb
or
cmp
inc
jb
jnp
push
imul
leave
mull
and
inc
xchg
outsl
js
xchg
clc
lods
imul
cmpsb
push
xor
lock
hlt
xchg
adc
mov
xor
hlt
cli
dec
dec
push
lret
and
repz
push
into
lret
sbb
sbb
in
pop
std
and
mov
pop
xor
add
pop
jge
jge
mov
loope
pusha
pop
xor
lods
icebp
stos
sahf
sbb
nop
sarb
mov
test
shl
xchg
iret
push
cmpb
dec
hlt
dec
je
mov
rcll
insb
mov
loop
jge
lea
xor
leave
and
mov
and
jne
sbb
inc
push
adc
mov
lea
lods
pusha
daa
mov
mov
adc
orl
and
jecxz
or
or
xor
pushl
lds
shlb
cmp
outsl
std
mov
inc
jl
add
sarl
xor
pop
push
dec
dec
cs
cli
test
xorb
movsl
ret
and
cltd
push
mov
daa
and
mov
das
fisttpll
pop
clc
xor
outsl
or
rorb
mov
push
xlat
lcall
xchg
or
mov
js
mov
outsl
cld
in
mov
add
jp
mov
cld
mov
icebp
fsqrt
lock
inc
dec
dec
mov
loope
add
cmpl
cmpsl
xchg
daa
je
push
push
jb
xor
xor
mov
jne
jns
and
ja
jg
jge
das
mov
lock
sub
jnp
sbb
cltd
pop
sbbl
add
std
fbld
addr16
pop
mov
mov
andb
and
insl
sbb
in
cmp
cmp
mov
test
push
fldcw
ss
subl
add
pop
sub
daa
insb
loop
rcl
mov
jecxz
cltd
mov
clc
jp
push
add
push
outsb
push
dec
push
pop
fldl
ja
mov
mov
insb
dec
jl
add
mov
mov
mov
std
xor
sub
cltd
popa
xchg
pushf
leavew
hlt
dec
gs
cld
sub
fisttpll
cwtl
rclb
xor
pop
arpl
or
push
das
pop
mov
push
cs
bound
dec
xor
sbb
mov
pusha
lahf
dec
dec
aad
adc
insl
iret
int3
adc
subl
xchg
aam
clc
iret
xor
insl
push
call
addr16
loope
daa
adc
jecxz
lahf
stos
jmp
inc
lahf
sub
sub
cmp
mov
movsb
pop
imul
es
inc
sbb
in
and
mov
sar
adc
mov
js
cmp
insl
add
mov
or
mov
aas
mov
insl
jb
subl
push
or
stc
push
outsl
sbb
mov
enter
rol
addr16
mov
cltd
or
test
inc
ss
ljmp
inc
pop
xchg
test
daa
lds
cmpsb
pop
in
pop
cli
out
in
gs
jno
inc
cmp
sbb
cmpsl
ftst
sbb
mov
rol
aas
jne
mov
cmpb
jo
pop
fsts
clc
dec
jns
cmp
jl
push
test
fisttpl
arpl
mov
push
mov
inc
stos
ret
out
or
lods
xchg
mov
inc
sub
mov
jae
jp
mov
aas
bnd
insl
mulb
add
jge
imul
subb
or
repz
push
xlat
sub
sbb
cmc
pop
ffreep
inc
outsl
in
repz
push
dec
mov
pop
jmp
mov
mov
icebp
xchg
pop
aaa
pop
sbb
div
bound
outsl
lds
jns
insl
fbld
and
das
add
mov
mov
mov
mov
pop
jg
les
jle
mov
std
jno
pop
popf
add
xchg
pop
cmp
stos
outsb
mov
fldenv
mov
shl
or
jecxz
pop
adc
std
push
xadd
push
jne
push
divl
icebp
or
and
aaa
or
pop
push
mov
dec
aas
add
lock
je
in
daa
rcll
push
jbe
jecxz
shl
int
jmp
imul
jl
mov
push
mov
sbb
les
decb
mov
outsb
fwait
lds
pop
xchg
int3
mov
or
xchg
push
subl
sub
or
push
xor
inc
aam
mov
addr16
dec
dec
das
clc
sub
pop
cli
stos
jecxz
movsb
and
aad
out
dec
or
std
pop
test
popf
dec
jmp
idivb
imulb
shr
inc
dec
loop
out
or
fldenv
adc
test
subb
dec
xor
mov
xor
jns
int3
push
mov
clc
shll
jp
xchg
sbb
and
xchg
mov
pop
mov
loop
xchg
xchg
das
aad
xchg
sbb
add
cmpsl
mov
jne
adc
daa
adc
mov
ja
mov
dec
jmp
push
sub
sub
fildll
jg
sub
fs
mov
sub
insb
cld
int3
sbbl
aad
in
pop
mov
cld
loopne
pop
pushf
movsl
pop
mov
or
loope
inc
jl
jne
hlt
mov
ljmp
stc
mov
cli
out
sbb
inc
dec
in
xor
push
mov
jo
mov
mov
and
js
mov
je
cwtl
int
clc
mov
dec
push
adcb
adc
lcall
pop
inc
mov
sbb
jno
fnstsw
mov
sti
or
or
and
hlt
push
push
dec
out
or
or
lret
test
shl
jno
popa
mov
or
rorl
cmpsb
std
jg
sti
dec
leave
loopne
and
icebp
aam
push
out
sbb
xlat
int
push
das
repz
xor
add
sbb
cmp
lret
push
pusha
pmulhw
xor
xchg
cli
movsl
iret
out
jae
push
orl
movsl
xchg
fidivrs
loope
and
lods
or
sub
push
sbb
imul
sbb
xchg
mov
mov
clc
mov
pop
fcomps
cltd
sbb
addr16
jns
mov
aas
mov
sbb
cmp
mov
fwait
push
test
cli
in
mov
lea
push
xchg
lock
gs
push
sub
push
testl
aaa
pop
cs
test
adc
arpl
incl
mov
repz
xorb
jo
rep
decb
ss
movsb
sub
in
addl
lea
sub
xchg
and
add
or
jo
pop
mov
sbb
fsts
stc
int3
pop
mov
or
mov
bnd
push
xorl
cmp
pop
push
add
mov
push
sti
lods
adcl
mov
ja
jg
insb
aad
mov
pop
add
fwait
dec
push
jmp
mov
sbb
mov
adcl
xor
mov
dec
loope
and
mov
and
xchg
mov
inc
dec
in
xchg
sbb
stc
jns
out
in
mul
mov
dec
cmpsl
adc
test
fiaddl
adc
pop
xor
clc
sbb
sbb
pop
sub
inc
lahf
mov
add
lods
ja
pop
push
xor
add
cld
mov
and
dec
in
fbstp
xor
inc
outsb
fwait
out
not
dec
movsl
cmc
pop
out
cmp
lahf
or
aas
push
repz
sbb
std
jae
cmc
test
lods
mov
aam
add
and
das
cmc
xlat
cld
pop
clc
fbld
mov
jecxz
pop
and
int
in
and
clc
xchg
fnstcw
pop
mov
or
in
or
mov
sbb
cld
inc
mov
push
cmp
add
push
aaa
jge
add
out
jge
pop
xchg
clc
cli
dec
dec
ss
add
fsubs
aaa
mov
xchg
jmp
imul
adc
loope
push
xlat
in
hlt
sbb
xchg
out
inc
popa
add
test
dec
push
jo
xor
and
jns
pusha
orl
lds
add
fcomps
mulb
mov
push
jns
or
mov
xor
cmp
movsl
mov
push
xchg
pop
mov
int3
mov
repnz
cmp
xchg
xor
bound
mov
loope
mov
addr16
in
mov
outsl
adcb
sti
mov
cmpsb
in
sbb
outsl
adc
add
int
fistpl
sbb
sbb
mov
test
push
iret
sbb
xor
sub
lea
jl
test
imul
andb
call
inc
cmc
dec
lds
xorb
sub
addr16
sbb
jle
aad
dec
cmp
clc
push
dec
out
or
jne
cmpsl
sub
sti
mov
into
ds
add
imul
and
dec
jg
sbb
sbb
add
lcall
sar
inc
or
lret
mov
lock
popl
xchg
lds
pop
push
xor
jg
aaa
mov
arpl
fs
adc
mov
repz
xchg
rorl
aas
test
out
or
xchg
arpl
jl
push
adc
or
jle
ret
add
mulb
xchg
add
push
and
cmp
ds
pop
pop
cmpl
jge
push
mov
or
cli
pop
sar
push
in
jg
lock
loope
icebp
out
test
jns
xor
mov
rorl
mov
in
repnz
adc
cmc
xor
outsb
mov
mov
cmpb
les
mov
ret
popa
les
push
popa
add
test
iret
sarl
movsb
add
out
cmpsb
in
jo
jl
test
mov
js
in
or
cmpl
xor
xor
push
adc
dec
dec
fs
in
shl
pop
cmp
lock
notb
dec
and
cmc
out
repz
dec
sar
pop
clc
inc
hlt
mov
mov
icebp
jl
mov
adcl
jne
sub
scas
xchg
xorb
in
in
push
pop
push
sbb
add
pop
push
testl
test
or
jl
cwtl
stc
jae
dec
mov
arpl
push
push
in
push
mov
sti
dec
out
sbb
cmc
xchg
dec
xchg
lea
iret
push
inc
out
lcall
insl
fisttpl
popf
mov
int
aas
sti
lods
cmpsl
gs
addr16
loope
pop
push
cmc
stc
xchg
les
incl
add
push
in
out
mov
lods
adc
push
filds
sbb
push
in
mov
ss
mov
pop
je
mov
jecxz
sahf
push
lahf
icebp
or
sbb
dec
aad
cmp
add
or
pop
arpl
loopne
fildl
xor
je
aam
or
rcr
add
push
jns
adc
es
pop
push
pop
testb
jb
push
xchg
pop
push
mov
pop
ljmp
shrl
cmpsl
cmp
jne
lret
push
fnstsw
pop
aaa
aad
jle
mov
das
sbb
lds
shr
addr16
bnd
cli
or
mov
dec
stc
add
add
cmp
cmpsl
js
push
adc
xor
inc
pop
dec
enter
xchg
cmc
imul
sti
jmp
inc
out
sti
xchg
lock
in
jmp
inc
out
out
aad
jmp
nop
jecxz
test
mov
xorb
inc
das
sbb
push
pop
lock
test
sbb
add
out
xor
ljmp
mov
jno
adc
xchg
out
stc
or
xchg
sbb
inc
incl
sub
mov
sub
mov
push
repnz
inc
push
xor
xor
movaps
jb
sub
fstpl
sub
mov
sub
mov
sub
mov
sub
mov
xchg
sbb
in
xchg
jecxz
xchg
mov
xorl
mov
pop
dec
mov
and
cmc
push
orb
xchg
inc
push
xchg
jg
aam
ljmp
test
not
addb
daa
pop
jbe
hlt
or
popf
sbb
dec
mov
pushf
lods
xchg
icebp
xchg
inc
sbb
je
cld
cmp
mov
push
sbb
sub
xchg
dec
in
mov
push
push
dec
cmc
icebp
jmp
mov
push
dec
jge
mov
and
cmp
sti
clc
test
pop
aas
in
inc
adc
into
adc
icebp
fs
ret
pushf
inc
cld
push
sub
in
jns
lock
xchg
or
mov
push
sub
xchg
fs
pop
in
getsec
daa
aad
dec
push
pop
dec
iret
mov
les
mov
push
mov
fmuls
dec
push
xchg
jnp
sub
test
mov
sub
add
repnz
xchg
jp
outsl
aad
ljmp
cld
add
mov
ljmp
mov
xchg
jg
jl
mov
jp
sbb
mov
xchg
mov
mov
rolb
ss
push
loop
adc
mov
mov
subl
xchg
test
add
enter
imul
jg
nop
add
sti
enter
add
mov
add
mov
push
adc
inc
cmp
jne
pop
xchg
pop
xchg
or
jg
cld
andl
outsb
push
push
bound
stc
hlt
push
aaa
or
sbb
cmpsl
sti
pmaxub
std
jae
mov
in
aaa
sbb
clc
je
imull
sbb
cld
outsb
and
and
rcll
jp
sub
pushl
inc
and
jnp
stc
cmp
xor
dec
clc
add
addr16
pop
jge
fsts
or
test
push
inc
cmp
es
and
push
sbbb
cmp
sbbb
and
leave
leave
add
sub
pop
enter
cltd
xor
loop
sub
push
mov
add
and
add
sub
mov
ljmp
inc
repz
lock
je
push
call
ss
pusha
pop
mov
imul
in
add
mov
je
aam
cwtl
push
dec
and
sarb
mov
inc
adc
jmp
adc
in
popa
add
call
sti
iret
mov
loop
test
mov
inc
arpl
aad
cmpb
in
dec
roll
jbe
pusha
leave
cvtdq2ps
pop
dec
rcrl
cmp
jns
outsl
push
lods
sub
push
adc
pop
scas
cmpl
outsl
xor
add
cmp
inc
xor
cmc
add
mov
cmp
arpl
fs
cmp
jecxz
jns
jb
insb
cmp
mov
cwtl
or
cmp
cmovg
and
jg
cltd
ljmp
addr16
xchg
in
add
adc
mov
in
cmp
orl
out
mov
jns
fwait
fwait
in
xchg
jp
add
jbe
lahf
loopne
inc
lods
arpl
inc
dec
inc
pop
loopne
addr16
xchg
inc
mov
lcall
and
sbbl
add
or
cmp
push
je
das
lds
xchg
or
aam
pop
sub
mov
jge
dec
pop
push
out
das
mov
jmp
test
adc
out
push
mov
mov
adc
mov
adc
jae
sarl
inc
or
xchg
cmovg
mov
cwtl
jp
add
andl
jns
test
fbld
dec
addr16
jmp
out
mov
xchg
mov
push
lea
fldl
inc
or
xor
ja
sub
mov
or
sarl
orl
adc
mov
xchg
enter
loopne
outsb
sbb
adc
insl
pop
stc
repz
sbb
insb
in
in
in
push
dec
xchg
fisttpl
lds
xchg
insb
jmp
mov
add
xor
test
jge
xchg
ret
fdiv
push
pop
and
insb
pop
or
mov
jae
sbb
insl
sbb
out
jb
ja
inc
repnz
in
stc
clc
std
inc
sbb
popf
jmp
loope
in
xchg
sbb
or
jb
aad
fildl
addr16
popl
xchg
and
enter
pop
dec
inc
and
xchg
std
or
lret
xchg
sbb
insb
sbb
lret
nop
adc
or
or
mov
cmpb
or
cmp
sub
pushf
mov
testl
add
not
add
push
jne
jg
repz
and
lds
or
xchg
lock
mov
arpl
cmp
jne
mov
jl
add
push
xor
test
jne
inc
mov
inc
push
mov
and
mov
arpl
dec
arpl
jg
fxch
dec
xchg
dec
and
ja
lock
mov
icebp
push
aad
dec
mov
lret
dec
and
aam
jmp
xor
pop
mov
or
add
call
xchg
push
push
pop
xchg
push
sbb
pop
outsb
xchg
imul
jge
loop
rol
sbb
push
or
or
fdivr
sbb
cmp
into
push
push
test
push
outsl
pop
dec
gs
push
imul
pop
addb
ret
mov
ljmp
aas
pop
test
inc
xchg
cmp
arpl
pop
add
test
mov
mov
cmp
stc
jmp
inc
lock
xlat
pop
imul
or
and
push
lea
pop
mov
sbbl
mov
jno
aad
push
out
or
push
jg
call
pop
das
test
out
or
int
jb
mov
lea
cmc
push
scas
in
push
pop
imul
mov
lds
push
and
add
mov
fs
or
or
push
outsl
rcl
pop
fwait
dec
leave
add
jle
scas
jne
mov
inc
dec
daa
pop
popa
hlt
xchg
mov
inc
mov
in
aad
sub
ret
sbb
jae
pop
push
cmc
lcall
push
sbbb
sub
in
or
and
mov
ss
jl
out
pushl
add
jle
scas
add
dec
pop
gs
cwtl
jl
psubsb
mov
test
or
adc
in
push
int
orb
sbb
pop
ja
adc
jns
jl
xchg
add
push
std
movl
mov
daa
mov
or
mov
outsb
lds
push
in
into
cmpsl
jg
mov
mov
popa
jne
aam
int
imul
bound
mov
roll
pop
ret
out
loopne
or
push
decb
mov
mov
cmpb
aas
stos
movsb
leave
jmp
cmp
neg
mov
sarb
jae
xor
xchg
push
ja
jmp
stos
mov
inc
push
pop
push
jge
add
hlt
cmp
pushl
or
pop
add
jnp
cmp
sbbb
pop
mov
stos
inc
mov
clc
inc
stos
push
mov
adc
pop
out
mov
or
sbb
push
and
mov
or
pop
lods
cld
pop
decl
sub
xchg
mov
mov
inc
std
mov
xchg
sub
in
testl
popa
jbe
shlb
dec
cmpsl
mov
mov
xchg
and
inc
jne
push
shll
add
mov
movsl
push
mov
in
add
mov
sti
lds
xchg
pop
sbb
aaa
sahf
inc
adc
add
add
push
mov
in
lret
mov
data16
clc
jae
push
hlt
and
jecxz
fs
or
hlt
arpl
xor
fcompl
pusha
and
addl
mov
lds
jg
push
std
or
cmpsb
or
mov
pop
idivl
inc
inc
stc
addr16
icebp
pop
aaa
stos
dec
add
outsb
add
xchg
cli
js
fistpll
in
dec
add
fstl
stos
repz
hlt
jb
mov
lock
add
pop
and
lea
repnz
add
lret
adc
pop
mov
push
xchg
xor
out
call
std
add
push
es
pop
xor
mov
add
rcrl
xchg
in
pop
aas
nop
push
fsub
xor
push
pop
aas
mov
insl
pop
imul
lahf
add
outsl
push
pop
jae
ret
pop
and
mov
bound
xor
pop
es
pop
cmc
aas
mov
pop
and
or
in
popa
add
clc
pop
test
pop
aas
mov
cmp
push
xchg
mov
std
sbb
mov
xchg
fs
push
push
and
leave
mov
int
cmc
aas
data16
les
cmc
pop
out
and
sub
out
in
pushl
add
jg
dec
mov
out
gs
or
into
fistps
pop
in
aas
or
js
lcall
push
mov
repz
and
cmc
add
clc
lret
adc
in
adc
push
push
pop
addr16
pop
es
ficomps
arpl
xor
pop
out
aas
mov
pusha
gs
rolb
xor
imul
int
and
rorl
lret
lods
in
add
es
pop
xor
pop
ds
repz
sti
add
fsubl
inc
hlt
or
and
in
cmp
jae
xor
fstpt
sub
sar
imul
rcr
cwtl
insb
pop
hlt
aas
pop
add
and
xchg
or
pop
fisubl
out
sti
aas
xor
push
sub
push
add
addr16
outsb
jg
pop
aaa
pop
mov
inc
jmp
sub
fs
insl
rcll
pop
xchg
cli
jmp
fdivrp
data16
cmp
aad
lahf
arpl
icebp
in
ret
mov
cmc
fs
inc
mov
sbb
movsb
in
jmp
scas
in
jge
or
lret
push
dec
mov
push
xadd
lahf
in
pop
add
mov
adc
sarb
ret
daa
insl
aam
mov
lods
lods
mov
out
add
xchg
jmp
mov
add
andb
int
stc
fdivp
inc
lret
in
pushl
insl
mov
xchg
out
mov
cmp
rcl
dec
mov
enter
and
pop
in
mov
jmp
loop
or
aaa
mov
cmc
jae
sbb
jae
xor
mov
loope
jle
push
test
popa
push
lods
inc
cmp
orps
cmp
and
addr16
in
pop
insb
movsb
in
add
add
push
movsl
and
in
xor
add
in
aaa
incl
pusha
xchg
lods
das
xchg
stc
popa
adc
and
xor
sbb
pmullw
ja
test
pop
pop
add
push
pop
scas
lods
push
fdivrp
setnp
js
icebp
out
add
sbb
in
shlb
cmpl
fwait
pop
cmpsb
stc
dec
jne
push
pop
mov
xchg
xchg
xchg
pop
out
popa
fsubp
sbb
xchg
jecxz
repz
push
mov
lock
add
cltd
or
push
mov
mov
jbe
xor
gs
dec
or
fisubrl
sub
in
aas
lock
jmp
xor
xor
cmc
int
arpl
cli
idiv
mov
pop
mov
mov
lods
loopne
pop
icebp
mov
mov
fs
out
mov
ret
andl
xor
jmp
adc
dec
in
clc
inc
test
or
add
pop
push
jmp
jg
xchg
insl
dec
add
push
mov
repz
and
dec
push
pop
loop
aam
and
int3
cld
inc
sbb
aaa
cmpb
int3
faddl
in
cli
sbb
push
jg
cltd
adcb
adc
adcb
pop
ljmp
pop
or
sbb
cmp
push
call
cld
inc
sbb
mov
fimuls
call
pop
push
shrl
xor
inc
test
data16
insl
push
sub
ljmp
test
ds
mov
int3
ljmp
outsb
imul
aas
jp
push
pop
lahf
test
dec
pop
lock
or
push
sbb
or
inc
aad
arpl
aad
push
or
shl
mov
test
aas
push
mov
push
mov
mov
mov
outsl
add
inc
or
call
stc
mov
subl
push
adc
call
add
loope
orl
adc
mov
pushl
aad
out
data16
fidivrs
push
cmp
push
add
or
je
and
flds
jae
add
and
aaa
mov
pop
cmp
arpl
mov
das
insb
outsl
cmc
pop
test
push
add
or
add
mov
pop
jl
add
fdivrl
push
fistpl
push
add
adc
ds
jbe
pop
andl
jnp
inc
mov
xchg
jbe
or
dec
adc
mov
sub
cld
test
outsl
jmp
shld
pop
push
pop
dec
mov
popa
int
ljmp
std
ret
push
push
insl
add
lods
push
mov
push
lret
xchg
jnp
jmp
jo
shll
aas
std
add
popa
xchg
incl
xchg
sub
inc
inc
cmp
add
ds
int
inc
int
add
aam
fldt
stc
and
adc
cmp
loop
ss
mov
add
mov
fldl
sbb
push
and
push
ret
pop
sti
and
xor
add
in
mov
jnp
and
les
push
out
jbe
iret
push
cltd
mov
mov
push
loop
add
test
mov
xchg
fldt
fisttps
mov
xchg
test
cmp
push
adc
mov
rcll
arpl
mov
out
sbb
adc
jecxz
pop
test
pop
frstor
mov
inc
jl
repz
loopne
or
sti
jecxz
push
mov
and
mov
cmp
jae
xchg
inc
imul
adc
aas
mov
mov
mov
mov
mov
out
stc
push
or
test
je
call
aad
mov
mov
loope
bound
inc
mov
mov
jo
pusha
mov
add
stc
mov
test
add
dec
add
add
add
lock
jp
shrl
mov
mov
adc
xchg
pop
pop
call
loopne
or
mov
or
add
popf
push
xchg
cs
push
out
mov
pop
sub
pushf
xchg
cmp
popf
fdivr
pop
rcrb
shlb
ja
mov
ret
inc
clc
fdivrp
sub
iret
xchg
in
jle
adcb
neg
clc
xor
fstps
or
xor
outsl
popa
in
out
pop
addb
or
pop
ret
std
sub
lahf
in
fdivrp
addr16
xorb
xchg
mov
js
sti
pop
shrb
inc
mov
mov
in
lea
das
mov
test
in
in
repnz
or
das
mov
das
xlat
daa
mov
clc
jg
mov
ja
popa
or
imul
mov
jo
inc
jp
sbb
in
mov
xor
cmp
cmp
fnstcw
sbb
xchg
stc
mov
or
mov
fmull
lods
outsb
or
adc
mov
cmpsb
mov
insb
mov
inc
push
loop
test
adc
push
mov
xchg
lea
cli
push
pop
adcl
insl
and
pop
cltd
sbb
push
rolb
sti
es
sar
jnp
sub
popa
add
mov
pop
push
insl
xor
mov
loope
jmp
out
loope
fiadds
dec
dec
dec
popa
fs
xchg
fwait
addb
or
inc
loopne
inc
dec
out
jg
stos
dec
inc
pop
dec
lret
ja
xchg
add
and
jo
ss
fdivs
push
and
push
xor
lahf
iret
out
sbb
lock
in
imul
jo
sbb
rol
push
sbb
lahf
outsb
push
imul
sbb
cmp
lret
vmovq
cld
mov
mov
cmp
or
sbb
lahf
inc
mov
mov
add
add
cmp
dec
sbb
imul
loope
aaa
inc
mov
cli
cmp
imul
incb
mov
addb
call
fnstsw
inc
push
rcrb
pusha
frstor
sub
stos
jl
mov
mov
in
sbb
repz
mov
bound
add
shll
push
mov
sti
or
lds
mov
pop
xchg
popa
jle
push
scas
dec
sub
loopne
je
xor
in
cli
fistl
andl
fstenv
fnstsw
in
shlb
pop
push
jmp
and
add
sub
or
or
adc
jl
test
aaa
bound
test
add
into
jge
clc
arpl
out
out
inc
xchg
push
and
jo
pop
rorb
fdivrs
aas
out
dec
test
push
adcb
ja
pop
and
sarb
and
int
sti
std
cli
jb
jnp
jno
cwtl
fildl
jo
push
dec
push
clc
into
test
lods
outsl
or
dec
out
pop
jle
or
pop
icebp
dec
push
dec
mov
adc
cs
dec
gs
out
sub
jg
hlt
jno
jl
pushl
push
dec
push
in
xchg
cld
pop
inc
add
pop
add
std
imul
ficompl
lcall
xor
mov
and
or
add
leave
fistps
push
mov
mov
inc
mov
xchg
leave
out
daa
stos
cli
inc
je
mov
pop
out
cmc
clc
inc
imul
push
mov
cmpsl
loop
arpl
adc
fidivrs
shlb
mov
fiadds
call
jl
out
xlat
call
mov
hlt
outsl
arpl
sbb
rcrb
call
outsl
inc
adc
inc
insb
jo
lret
in
push
xchg
pop
jl
daa
imul
jne
js
jno
jbe
imul
inc
dec
in
jnp
pop
jbe
cltd
outsl
adc
insb
xchg
lret
shll
jbe
add
adc
lret
in
and
dec
jo
xchg
mov
jge
outsb
pop
cmpsb
jmp
aaa
adc
adc
out
jne
loope
fdivs
je
insl
lcall
jae
xchg
jb
fcompl
dec
jns
jp
fcompl
jl
adc
je
jb
jns
jp
adc
xor
in
pop
jnp
jle
ja
sub
xor
rorl
mov
xor
mov
jmp
in
jp
jge
jbe
test
lahf
xchg
popl
sahf
addr16
and
in
mov
test
in
pop
or
sub
jbe
mov
lcall
inc
mov
sbb
add
shl
pop
inc
jle
cmpsb
imul
add
cli
test
insb
xor
fistps
xchg
lret
inc
jae
js
jns
ja
pop
imul
pop
test
shrl
scas
loop
adc
xchg
fcoml
jb
pushl
sbb
mov
cli
xor
adcb
pop
cmp
jno
xor
orb
rcll
test
in
mov
sbb
popa
in
andl
shll
xchg
xor
pop
int3
pop
jp
js
imul
mov
or
dec
jae
jp
rcrb
sbb
add
push
pop
punpckhwd
pop
push
dec
xlat
movsl
cmp
in
pusha
insl
push
lods
mov
pop
jmp
pop
adc
dec
imul
mov
pusha
imul
push
push
cmp
incl
aas
jno
imul
jmp
popa
pop
jno
jno
aas
and
inc
jo
pusha
pop
push
bound
dec
jo
inc
jbe
pushl
popa
imul
arpl
insl
pop
jo
cmpsb
jbe,pt
insb
insl
iret
out
dec
pusha
pop
jb
incb
dec
push
jo
inc
insb
incl
mov
pop
push
fs
bound
addr16
fwait
std
decl
push
pop
pop
push
pop
xchg
lahf
or
pushl
aas
popa
pop
cmp
roll
dec
addr16
pusha
dec
pop
jno
jo
cmp
in
lcall
std
cmp
jno
inc
pop
push
imul
add
cmp
popaw
sbb
imul
nop
add
popa
inc
in
dec
mov
clc
cmp
popa
pop
imul
pop
cmp
cmc
ds
pusha
pop
fs
daa
imulb
jl
jne
inc
pop
gs
cmp
decb
arpl
mov
pushl
pop
push
imul
inc
gs
imul
xor
jbe
popa
imul
pusha
insl
popa
jno
imul
cmp
pop
adc
fistpl
fs
bound
pusha
jae
insl
outsl
dec
push
fstpt
pop
push
decl
inc
popa
arpl
fildl
push
out
arpl
bound
fs
or
insb
pop
fmuls
or
dec
pop
jo
inc
or
insb
push
inc
insl
lods
test
fildl
loope
and
sub
xchg
imul
dec
pop
movsl
mov
imul
or
dec
and
gs
push
repnz
outsb
jo
push
dec
daa
inc
fwait
insb
test
jle
cmp
outsb
push
je
arpl
arpl
jg
addl
bound
cmp
sub
daa
aad
pop
clc
insl
sbb
shrl
mov
shll
imul
outsb
rcrb
pop
pusha
jb
test
sbb
insb
insb
push
sub
pushl
jg
and
dec
adc
outsl
popa
inc
cmp
insl
lahf
push
fstpt
mull
or
inc
lahf
pop
inc
pop
jno
insb
add
inc
scas
or
arpl
sbb
std
or
call
inc
pop
gs
mov
test
call
gs
das
inc
pusha
data16
cmp
sarl
push
bound
pop
shr
das
mov
pop
cli
dec
popa
arpl
jae
outsb
cmc
push
fs
xchg
std
sbb
dec
push
popa
outsl
inc
jne
push
into
jae
addr16
aam
mov
inc
das
push
push
cmp
sub
sub
xchg
cmp
repz
jmp
out
daa
or
mov
imul
pop
ja
adc
mov
test
fildl
outsl
pop
insb
bound
push
icebp
and
jno
cmp
imul
aas
sbb
inc
ds
in
test
ficomps
addr16
insl
ja
add
mov
sub
clc
sahf
push
insl
insl
aas
sbb
insl
mov
jae
xchg
dec
pop
imul
aad
xor
ret
pop
bound
mov
mov
clc
daa
cld
aas
outsl
pop
pusha
std
inc
cmp
inc
inc
inc
xor
sub
outsb
jmp
cmp
inc
xor
daa
pusha
push
inc
pop
jns
jb
addl
addr16
test
jb
inc
push
pusha
xchg
roll
sub
jle
dec
pop
nop
inc
gs
cli
fistl
fwait
cmp
pop
arpl
pop
pop
inc
outsb
loope
jmp
clc
pop
mov
lock
jle
insl
pop
outsb
jno
mov
pusha
gs
das
popf
pop
arpl
mov
sbb
arpl
and
insb
test
sarl
ret
cld
inc
aas
pop
pop
daa
sbb
test
lahf
cmp
lods
mov
pop
fs
add
cmp
cmp
cmp
dec
ds
push
pop
dec
fwait
cld
cmp
pop
inc
dec
sub
iret
adc
cmp
push
mov
in
filds
cmp
sub
and
ficoms
fcmovu
outsl
sbb
pop
outsl
push
jae
cmc
insb
cmp
cli
movsl
movb
sahf
cmp
ret
pop
std
das
insb
out
adc
aas
arpl
cmp
cmp
ja
mov
dec
pop
dec
jno
jb
cmp
bound
in
pop
xorl
and
lcall
fidivl
jo
cmp
jno
inc
push
insl
pop
mov
pop
lods
push
adc
ss
mov
cmp
dec
aas
cmp
xor
cld
hlt
add
pop
dec
addr16
sub
hlt
test
cmp
mov
inc
addr16
and
or
push
insb
sub
push
mov
mov
xchg
mov
mov
ja
addr16
push
mov
fidivrl
inc
icebp
push
sub
pop
aas
dec
cmp
inc
inc
cmp
pop
add
pop
inc
and
mov
inc
inc
das
mov
xchg
test
mov
pop
or
add
outsb
insl
and
pop
arpl
dec
ds
mov
pop
lods
pop
outsl
jno
cmp
xchg
sbb
dec
cmp
push
jbe
cs
dec
cmp
lahf
dec
cmp
inc
cmp
xchg
sub
sarl
bound
pop
bound
pop
ja
stc
cmp
sarb
dec
mov
insb
pop
pushf
push
in
push
push
push
dec
lds
bound
add
sub
incl
test
cmp
dec
cmp
dec
dec
aas
dec
xor
sub
pop
push
clc
push
dec
cs
ja
std
inc
repnz
mov
imul
std
xchg
incl
mov
fs
push
mov
inc
outsl
pop
insb
push
push
cmp
inc
ds
inc
dec
inc
inc
inc
dec
out
sbb
ret
stc
popf
xorl
repnz
push
xchg
jmp
negl
mov
or
xchg
shrl
cmp
aas
addr16
imul
cmpsl
ja
inc
cld
pop
ja
inc
outsl
pop
popa
js
pop
jnp
pop
jno
outsl
clc
or
fiaddl
mov
push
idivl
push
push
fiaddl
je
cmp
and
push
or
add
rcr
dec
out
insb
cld
shll
mov
fildll
popa
gs
jecxz
cld
pop
lcall
inc
dec
push
mov
push
and
push
pop
xor
jge
je
jg
pop
or
lods
fildll
faddl
gs
ret
lcall
mov
outsl
outsl
arpl
or
stc
add
imul
lahf
inc
sub
sub
aad
stc
stos
imul
das
outsl
xorb
mov
jne
fimull
sbb
push
mov
lods
out
mov
sti
nop
inc
cmp
insb
jge
cli
add
sbb
and
jle
mov
cs
pop
repz
or
pop
repnz
int
dec
pop
cmpsb
js
jg
xor
jae
js
cmp
lds
jg
jns
jle
fnsave
sbb
cmp
pop
adc
incb
in
add
add
ja
add
add
or
decb
clc
insb
rorl
cmp
jmp
fs
adc
sub
cmp
aad
xchg
sub
pop
mov
add
ja
lea
xchg
inc
inc
pop
mov
adc
pop
inc
inc
test
imul
pop
mov
ljmp
gs
xchg
sub
das
das
and
or
jo
decb
cmp
pop
hlt
insb
imul
sbb
scas
insb
out
loopne
inc
add
dec
imul
pop
lock
in
movsl
cmp
sub
sub
les
mov
imul
outsb
pop
ss
insb
les
popf
clc
cli
pusha
dec
pop
jecxz
inc
cmp
push
outsl
xor
std
insl
push
stc
sbb
in
inc
pop
dec
cmp
jbe
pop
pop
lods
inc
adc
jae
jo
push
adcl
sub
mov
stc
push
cs
or
pop
nop
lcall
fisttps
mov
mov
mov
icebp
scas
ffreep
rol
out
cld
mov
daa
mov
mov
int
into
mov
mov
sti
jg
test
loopne
stc
inc
rcr
scas
iret
out
mov
mov
fcomip
mov
sarb
in
rcl
fisubrs
jg
mov
into
mov
cmpsb
xchg
or
jmp
imul
pop
mov
push
ds
xlat
incl
mov
sbb
jno
pop
and
sbb
xor
pusha
or
jo
and
clc
pop
dec
dec
mov
aam
test
das
je
inc
dec
imull
bound
sub
pop
pop
sub
pop
cmp
and
pop
insl
dec
or
in
faddp
inc
cmp
pop
es
imul
xor
mov
sub
movsl
insl
xor
mov
scas
fstpt
scas
fnstcw
aas
pop
in
stc
std
frstor
test
pop
add
insb
arpl
push
imul
push
jae
ljmp
dec
dec
ds
push
mov
pop
jno
push
pop
sub
add
arpl
arpl
test
sar
inc
decl
or
pop
sbb
out
push
fs
push
and
mov
or
sub
addr16
cmpsl
mov
stos
inc
test
xor
jbe
mov
mov
lcall
rcrl
outsl
subl
xchg
fcomps
jg
lods
idivl
arpl
lea
adc
push
scas
imul
dec
ffree
movsl
adc
jne
insb
inc
dec
inc
fisubl
jae
cmp
cmp
dec
push
sti
add
pop
imul
ret
das
adc
mov
inc
push
inc
loopne
lock
xlat
and
and
arpl
add
jo
pop
mov
and
push
pusha
sub
outsl
push
sti
movsl
jle
dec
inc
repz
inc
dec
dec
dec
fistpl
adc
daa
ret
lahf
or
add
or
jb
pop
fildl
repz
add
dec
push
dec
daa
sub
mov
inc
mov
pop
ss
sub
ret
sub
sub
or
cmp
xorl
sbb
pusha
testb
sbb
and
mov
pop
arpl
xor
push
add
fstpl
push
jo
sub
adc
cmp
jbe
lods
sub
and
sbb
fistpl
test
popa
jns
std
lods
in
push
or
pop
and
add
imul
enterw
shrl
sahf
gs
loope
cmpsb
push
pop
lods
mov
inc
dec
dec
dec
sub
and
pop
lods
fidivl
pop
fildll
push
mov
and
sbb
daa
and
push
and
cmc
or
jae
sub
inc
pop
mov
pop
aad
pop
roll
lcall
jno
sub
or
adc
insl
pop
jo
arpl
sub
jne
pop
outsb
add
repnz
sub
sub
and
xor
xor
jb
arpl
pusha
pop
dec
jb
sub
mov
arpl
ja
loopne
lea
sub
and
push
pop
mov
gs
mov
mov
sub
jo
fcom
ret
inc
fcompl
ss
arpl
mov
sub
push
aas
movl
and
mov
push
arpl
sbb
mov
xor
das
sub
pop
outsl
inc
cwtl
mov
pop
xor
mov
or
shrl
sub
jne
or
xor
inc
insb
cmpsl
mov
pop
mov
out
sub
cmp
mov
sbb
cmp
sub
aaa
sbb
jno
ret
gs
cmp
std
and
dec
fiaddl
xor
lea
sub
lret
cmpl
sub
daa
and
ljmp
cs
sub
lds
pop
sub
bound
fildll
cmc
sub
jecxz
pop
xor
das
movsl
test
and
sub
cmp
cmp
popa
test
sub
xchg
and
xor
sub
pusha
cwtl
lahf
arpl
and
pop
xor
daa
dec
pop
outsl
pop
mov
ja
xor
push
mov
fistpl
dec
scas
pop
in
sub
ret
popa
fcmovb
xlat
push
imul
inc
mov
jo
es
pop
mov
push
fmuls
pop
lret
arpl
ret
lock
pop
gs
insb
fwait
ds
outsb
rep
jbe
cld
push
fs
inc
lret
dec
dec
cmp
jbe
shlb
shlb
stc
adc
mov
je
add
push
fs
mov
mov
jecxz
pop
aam
sub
mov
andb
lcall
insl
dec
pop
inc
xchg
mov
inc
sarl
sbb
pop
jmp
cmp
sub
bound
enter
fnstenv
cmp
ds
outsl
dec
daa
lods
rcl
cli
inc
pusha
pop
pop
push
cmp
outsb
ja
fs
pop
cmp
fs
inc
ja
aas
adc
outsb
inc
mov
fldl
stc
aas
arpl
jae
dec
iret
pop
insb
pop
call
cmp
out
push
jbe
imul
push
imul
sub
mov
pop
adc
imul
mov
dec
mov
arpl
push
push
jnp
ss
dec
mov
addl
int
fcmovnb
aas
mov
daa
arpl
push
jo
pop
pop
xchg
imul
outsl
sub
lods
fdivrp
sub
xor
sub
loop
inc
ds
inc
dec
dec
inc
stos
call
inc
push
push
dec
push
push
dec
push
push
push
jmp
mov
push
loope
aaa
sub
outsb
shll
push
jbe
inc
mov
sub
insb
in
mov
jno
bound
adc
pop
sub
inc
outsl
jnp
and
sbb
dec
addr16
cmp
ja
bound
arpl
adc
enter
jo
cmp
pop
or
push
outsl
lods
daa
sarb
pusha
push
inc
mov
addr16
sub
insl
dec
ja
or
ret
out
mov
add
cmp
pop
insb
dec
fcomp
aad
aas
pop
push
jo
sub
and
dec
fs
rorl
sub
sbb
add
dec
fcomp
fcomps
inc
lods
gs
bound
addr16
decl
pop
movsl
inc
pop
imul
mov
pop
cmp
ds
lods
cltd
pop
clc
inc
and
addr16
cmpb
stc
stos
push
mov
lds
push
dec
test
add
xor
add
jnp
xor
arpl
cltd
inc
xor
sub
and
sub
push
and
imul
ja
ss
and
sub
outsb
outsl
dec
imul
pop
adc
or
fiaddl
imul
arpl
mov
std
stc
xchg
mov
mov
mov
adc
push
push
std
cmp
inc
or
sbb
inc
aaa
outsl
rorl
pop
mov
pop
adc
jg
pop
add
ja
pop
fidivl
js
jg
test
pop
adc
sub
mov
cmp
push
shlb
jbe
xchg
push
sub
clc
sub
sub
sub
in
pushf
mov
xchg
mov
mov
das
jle
xchg
mov
sub
mov
mov
shrl
sub
ljmp
sub
sti
sub
adc
sbb
sbb
and
inc
sub
insl
jg
cs
das
jp
jl
test
stos
xor
fildll
hlt
xor
inc
subl
cmpsl
sub
xor
pushl
sub
xor
sub
push
test
xor
sub
push
xor
pushl
arpl
outsb
sub
mov
xor
sub
das
in
repz
xor
pop
sub
ljmp
xor
xor
sub
xor
dec
xor
pop
sub
xor
outsl
xor
xor
xor
sarb
xor
or
mov
xor
addr16
jp
mov
mov
mov
jg
mov
mov
cs
xor
xor
xor
pop
xor
xor
ljmp
push
das
pop
xor
jne
jle
test
test
ljmp
das
into
xor
mov
lock
ss
jbe
jle
mov
jmp
xchg
aaa
dec
cmp
xor
and
data16
cmp
incl
cmp
xor
enter
out
xor
add
jmp
inc
cmp
pop
cmp
jb
jle
mov
mov
outsl
hlt
cmp
cmp
cmp
sbb
dec
cmp
cs
ret
jge
cmpsl
cmp
ds
divl
lods
sbb
lock
pop
jae
or
sub
sub
xor
lcall
sub
lcall
shll
loop
in
xor
xor
xor
xor
cs
xor
ss
aam
loop
call
outsl
xchg
cld
das
or
xor
inc
imul
nop
aaa
cwtl
ss
jmp
xor
ss
cmp
bound
mov
ret
xor
xor
cltd
daa
cmp
cmp
xor
xchg
aaa
scas
cmp
aaa
mov
mov
xor
cmp
jg
push
jo
insl
cmp
cmp
cmp
xor
cmp
cmp
ljmp
cmpb
cmp
xor
pop
cmp
lahf
cmp
mov
mov
sarb
jecxz
repz
or
cmpsb
ds
enter
mov
icebp
fidivrl
pop
incb
fildll
aaa
lcall
sub
sub
sub
das
shrl
jmp
sbb
dec
std
ret
das
pop
xor
cs
xor
fstpt
ret
jne
xor
sub
xor
sub
cs
clc
pushl
xor
subl
xor
cs
jecxz
pop
sarl
das
lret
xor
sub
cs
mov
mov
das
cltd
xor
sub
xor
xor
cld
ljmp
xor
push
sub
push
sub
xor
pushl
cld
xor
and
cmp
xor
push
xor
xor
ss
fldt
add
adc
adc
out
dec
xor
pop
xchg
push
jle
pushl
xor
inc
aaa
fdivs
in
xor
cmp
notb
or
lods
aaa
cs
cmp
cmp
cmp
cmp
adc
push
xor
mov
cmp
cmp
cmp
addr16
cmp
xchg
cmp
ljmp
xor
sahf
cmp
ss
cmp
dec
cmp
dec
cmp
mov
cmp
add
inc
mov
dec
cmp
fs
mov
cmp
dec
hlt
cmp
mov
sub
sub
sub
mov
cs
sub
das
fisttps
sub
and
and
ret
mov
push
sub
data16
xor
mov
cs
out
das
push
xor
xor
push
mov
jge
test
xchg
sub
xor
xor
sub
xor
xor
movsl
sub
xor
jle
lea
stos
das
mov
mov
lcall
hlt
das
adc
xor
xor
xor
jae
xchg
xor
xor
sub
pushl
repnz
sub
inc
xor
xor
cs
xor
xor
ss
cmp
pushl
xor
lds
aaa
add
xor
cmp
cmp
test
or
mov
jg
dec
cmp
push
cmp
cmp
push
js
jns
mov
cmp
inc
cmpsb
push
mov
xchg
cltd
cmp
mov
clc
cmp
ds
sub
cld
test
cmp
or
ja
fcmovnu
adc
inc
call
xor
lods
lods
movsl
lea
xor
jmp
xor
into
cmp
out
sbb
inc
and
js
cmp
cmp
xor
mov
call
cmp
cmp
xor
cmp
and
cmp
ret
cmp
xor
cmp
and
cmp
mov
add
push
xor
das
cmp
lahf
xor
cmp
cmp
lret
sarb
cmp
cmp
xor
cmc
cmp
cmp
or
push
mov
xlat
xor
xor
cmc
lea
jne
add
xchg
mov
lock
ds
cmp
ljmp
shlb
dec
aaa
push
cmp
jo
jle
mov
cmpsb
cmp
cmp
pop
and
cmp
cmp
das
je
dec
repz
incl
sub
sub
sub
sub
insb
daa
mov
sub
xor
sub
or
in
cs
xor
xor
js
std
jg
sub
push
xor
mov
in
int3
loop
cmp
sub
or
xor
and
push
inc
and
or
outsb
outsl
bound
or
pop
add
inc
jl
icebp
pop
dec
outsb
jae
popa
cmp
push
out
push
dec
dec
sub
inc
push
push
inc
push
inc
pop
xor
cmp
dec
xor
outsl
and
push
dec
dec
ds
je
popa
jb
pop
in
in
ja
jae
pop
push
push
outsl
ja
push
mov
outsl
popa
insl
sbb
arpl
add
scas
std
jge
cs
jnp
adc
jno
testb
jae
and
and
jo
jae
arpl
push
les
inc
imul
fstpt
cmp
bound
mov
lret
jbe
outsl
jo
pop
andb
out
in
ficomps
jns
or
jbe
fnsave
inc
jo
adc
push
jb
insl
xchg
idivb
gs
add
xor
sub
jbe
adc
jb
add
fmull
std
jbe
aas
jb
outsb
cmp
ja
outsb
imul
adc
push
jae
xor
mov
inc
sbb
adc
lahf
xor
push
jg
bound
jo
inc
gs
in
out
out
insb
popa
push
ds
pop
inc
js
adc
push
data16
fsts
adc
dec
jmp
aaa
fucomi
inc
inc
fs
imul
push
push
mov
add
inc
xor
mov
push
inc
in
fs
mov
lods
inc
jb
out
sub
inc
outsl
sub
leave
mov
jb
or
inc
pop
imul
push
or
dec
pcmpeqw
sbb
dec
jae
xor
jae
add
fiadds
outsb
adc
fdivrs
jae
xchg
mov
jbe
inc
jmp
outsl
dec
push
in
jnp
frstor
jb
fs
daa
push
sti
imul
faddl
imul
dec
mov
mov
insl
imul
or
inc
and
add
or
add
add
add
inc
push
dec
inc
xor
push
bound
jp
ja
insb
inc
data16
add
sbb
pop
add
insl
and
add
xor
in
out
fildll
add
insl
fs
xlat
jnp
pop
aam
out
add
mov
in
daa
add
ja
outsl
add
aas
int
inc
add
or
call
pop
stc
or
add
cmp
repz
ss
ja
adc
lods
sbb
outsb
adc
adc
psubd
and
mov
sti
mov
add
ret
jmp
shll
and
in
call
jg
add
pop
nop
loop
decl
mov
push
mov
movsb
inc
loopne
lret
dec
scas
inc
fdivr
decl
fists
xchg
repz
decb
add
jmp
jnp
add
pushf
fwait
aam
call
add
add
adc
roll
stos
adc
add
and
and
or
in
loop
push
inc
dec
push
in
add
mov
pusha
test
pop
add
incl
rolb
nop
add
add
sub
xchg
das
sub
cltd
shlb
jns
add
repz
add
add
add
add
imul
jg
sub
fbld
call
push
mov
add
adc
add
pusha
in
jb
jbe
sub
test
mov
das
filds
cwtl
adc
add
mov
popa
je
inc
imul
outsb
addr16
or
gs
data16
sarb
push
inc
insb
jne
push
and
imul
or
je
push
imul
jmp
push
add
outsl
jae
dec
popa
outsb
fs
inc
je
jb
bound
jae
outsl
jbe
inc
idiv
sti
fdivrs
and
jo
dec
popa
insl
inc
inc
gs
mov
mov
sbb
test
push
jb
arpl
xchg
jge
cmp
outsb
or
dec
stos
cmp
mulb
outsl
dec
push
mov
fsubr
add
jo
outsb
outsw
adc
add
mov
int
xchg
mov
fistps
fistl
outsb
xor
jns
and
insb
jbe
pushf
gs
jnp
decb
jae
outsl
outsb
mov
jb
mov
mov
fs
out
jg
mov
mov
jns
fldl
je
adc
icebp
mov
sub
outsl
insb
mov
xor
push
lock
outsl
je
and
push
sbb
fisubs
jl
mov
jmp
adc
pop
adc
pop
or
pop
or
call
sti
mov
adc
adc
mov
mov
decl
or
mov
add
mov
jp
call
jg
or
and
incl
sbb
ljmp
or
repz
inc
sub
push
push
jns
fcomi
outsl
xor
jmp
inc
xchg
fdivl
sbb
xchg
sbb
fnstenv
jge
or
lcall
sbb
xchg
lock
push
or
icebp
adc
fnstenv
mov
add
insl
inc
add
mov
pop
xchg
insl
fcmovne
push
push
dec
mov
movsl
fcomi
insl
fisttpl
or
je
or
pop
mov
arpl
call
cli
or
push
insl
inc
das
dec
or
inc
scas
repnz
jbe
or
outsb
in
data16
gs
cmp
pop
jo
pop
push
pop
push
testb
ud2
pop
je
wbinvd
fdivs
lods
lock
insw
lahf
or
imul
fs
mov
aaa
push
fwait
addb
adc
stos
jb
jae
mov
mov
outsb
or
jo
je
insl
mov
mov
or
aas
ficomps
insb
or
insl
bound
xchg
ja
out
leave
or
jbe
push
sbb
sbb
arpl
inc
inc
js
inc
jb
dec
jnp
jmp
aam
jo
outsb
je
je
insl
mov
inc
arpl
push
jae
sbb
cmp
dec
xor
or
rolb
imul
jo
fs
or
jne
xchg
push
js
mov
out
sbb
inc
ljmp
cmp
or
jecxz
addr16
xor
fdivrl
in
add
ja
lods
imul
repnz
mov
jle
add
sbb
pop
lods
add
add
add
add
pop
jbe
mov
add
adc
xor
add
pop
jbe
popf
adc
add
pop
xor
xor
insb
add
std
add
adc
xchg
insb
pusha
pop
push
aaa
dec
inc
rcr
sub
and
jbe
mov
cmpl
js
xchg
and
outsl
das
xchg
push
pusha
jb,pn
popa
je
mov
add
cs
jp
lds
imul
jae
or
notb
div
dec
lock
add
jo
push
add
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
