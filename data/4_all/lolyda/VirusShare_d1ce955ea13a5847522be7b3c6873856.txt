mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
push
lock
pop
sbb
out
sbb
add
or
mov
outsb
mov
cmp
sub
stc
mov
cmp
add
cmp
inc
add
fsubrl
pusha
jg
push
mov
sbb
movzwl
push
push
mov
and
or
jl
into
or
ret
sub
adc
lea
test
jbe
out
jo
mov
inc
xor
test
add
aaa
or
les
mov
enter
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
out
mov
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
pop
int3
into
mov
mov
or
shl
add
mov
adc
repnz
not
sub
lea
mov
push
lock
shr
rep
pop
push
and
mov
movsb
das
je
or
mov
pop
push
push
lea
sub
or
sbb
jbe
push
or
cmpsb
cld
dec
push
xor
into
bound
popf
imul
adc
stos
xchg
ss
int
sbb
ficomps
mov
xor
negb
xor
testl
or
cs
das
jnp
xchg
or
add
mov
imul
xor
das
inc
sbb
sahf
sub
imul
or
cmp
inc
fldt
nop
add
or
fcomp
mov
pop
test
cmpb
jne
adc
and
insb
arpl
adc
fstpl
stc
gs
push
pop
push
pop
mov
push
cmp
push
or
push
pop
mov
push
leave
push
sub
mov
das
jecxz
inc
sbb
lcall
lds
adc
push
mov
test
dec
or
add
mov
xor
iret
dec
in
test
pop
mov
lret
or
xchg
jo
add
or
dec
add
dec
cmp
add
bound
dec
inc
jne
loopne
aaa
imul
adc
push
dec
adc
insl
cmpsb
pop
push
push
add
cmp
pop
mov
lcall
mov
fcmovnb
push
push
jl
add
jp
push
mov
mov
dec
scas
and
adc
hlt
insb
lcall
mov
and
or
sub
or
ja
xor
push
mov
push
or
cmp
inc
stos
imulb
or
push
inc
repz
shld
lock
sbb
aad
cmp
leave
add
inc
incl
lea
mov
push
or
pushw
push
sbb
or
sub
les
btc
push
pusha
push
adc
and
fmuls
or
xor
adc
cmovl
push
push
cmp
cmp
push
add
or
mov
pmaxub
adc
xchg
pop
push
xlat
jl
jb
or
push
addl
lret
out
push
add
or
jb
mulb
sub
adc
cmp
hlt
mov
jae
jp
push
test
or
std
pop
scas
cmp
adc
cmp
mov
fldenv
and
or
lcall
pop
nop
jge
popa
mov
jle
xorb
push
push
push
popf
xchg
fs
icebp
shlb
int
add
cmp
push
mov
frstor
iret
dec
inc
push
adc
movsb
out
rcll
in
cmp
push
pushf
push
xchg
sbb
mov
jmp
push
xor
mov
cli
mov
arpl
cld
lret
mov
inc
in
or
xor
pushl
repz
push
add
cmpb
jne
test
jle
push
insl
out
insl
jnp
jns
add
les
call
out
or
jmp
std
rorl
leave
mov
push
aaa
nop
mov
mov
fs
cwtl
rep
pop
adcl
xchg
movsb
adc
sub
insb
outsb
repz
inc
mov
cmp
lea
shl
lret
pop
outsl
add
push
adc
adc
pop
cmp
int
jb
and
sbbl
ret
sub
bound
mov
loop
xor
shrl
push
cmp
test
adc
push
lret
pusha
adc
pop
rclb
dec
add
inc
aaa
adcl
mov
call
push
adc
loope
mov
filds
adc
call
inc
rorb
push
push
lcall
push
shl
gs
andb
fcomps
jmp
dec
mov
push
rep
mov
in
push
scas
movsl
xchg
xchg
adc
aam
insb
mov
fsub
sbb
and
jmp
ja
mov
and
in
lea
sbbw
shrl
or
lea
loope
lea
push
fucomip
dec
mov
mov
out
and
mov
sbb
cmp
mov
mov
sbb
lock
and
pop
and
ljmp
test
cmc
xor
mov
and
or
mov
sub
lea
dec
xchg
lret
dec
adc
xchg
nop
adc
sbb
in
fcoml
sbb
add
inc
loop
sbb
cs
inc
lret
lock
sbb
roll
mov
xchg
xor
sbb
xor
icebp
xlat
push
push
pop
xlat
add
mov
or
adc
adc
movsl
mov
adc
aam
or
mov
or
and
ret
mov
or
cltd
js
test
dec
sub
inc
rcrb
mov
or
in
add
add
push
jl
or
inc
dec
repnz
push
sbb
mov
rcrl
and
mov
jb
and
jbe
nop
lea
xor
aam
sub
mov
cli
or
or
jnp
out
xor
push
or
pop
xchg
int
lcall
xor
cs
pop
aaa
mov
or
lcall
push
sbb
push
lock
lods
mov
mov
enter
jae
cld
jne
inc
add
or
jb
icebp
ret
cs
andb
ret
das
dec
mov
push
and
inc
adc
iret
inc
dec
enter
inc
cwtl
inc
inc
dec
shrl
fsubrs
jno
data16
cwtl
popf
mov
test
bound
adc
push
push
or
clc
adc
and
insb
out
mov
test
or
leave
orb
jmp
mov
ret
orl
ret
sti
sub
push
jmp
pop
jle
push
cmp
jne
psubsb
in
sub
add
sbb
stos
dec
mov
add
mov
sbb
cmp
adc
or
xchg
int
dec
test
and
jg
fistl
jg
pop
or
lods
xchg
cltd
add
iret
jo
in
sbb
push
cli
int3
inc
or
and
cmp
iret
ljmp
push
xchg
cli
pusha
inc
bound
arpl
adc
clc
add
push
or
push
sbb
int
pusha
mov
lret
xor
sbb
adc
es
xor
fs
pushf
in
sbb
pusha
jo
mov
je
clc
jmp
lret
inc
mov
dec
rcl
sbb
out
or
test
sbb
clc
jo
sbb
add
cs
adc
int
dec
and
mov
and
sbb
xchg
insb
push
lock
dec
jle
adc
mov
cmp
push
pop
js
test
iret
mov
jb
gs
insb
push
mov
or
push
aaa
pushf
mov
mov
subb
dec
add
sti
sub
pop
dec
and
jo
and
pusha
js
pusha
pop
cmp
mov
outsb
push
push
and
adc
arpl
fucomip
rorl
sub
jecxz
jnp
jecxz
lock
clc
pusha
cmc
adc
cmpl
push
sarl
pusha
mov
xor
push
pop
sub
inc
jo
add
jge
and
cmp
xchg
or
jl
insb
addr16
fcoms
daa
vcvtsd2si
insb
push
in
push
fcomp
ret
sub
repz
dec
push
repnz
incl
xor
adc
shrl
inc
cltd
sub
fs
out
sbb
mov
adc
push
sahf
movsb
sub
in
fistps
test
pop
fs
mov
or
inc
pusha
ret
mov
mov
push
testb
loop
cs
das
or
xor
or
mov
mov
add
mov
dec
cwtl
insb
xchg
xor
nop
or
mov
push
jg
xchg
cmp
push
dec
arpl
daa
adc
add
sbb
rol
push
pop
lea
sti
mov
jns
inc
cmp
cmp
pushf
sub
sbb
jns
sub
mov
sbb
repnz
inc
pop
inc
leave
xor
push
cmp
and
cmp
or
or
iret
inc
leave
xor
add
and
add
xor
sbb
test
add
in
push
push
dec
xor
add
scas
enter
inc
insb
mov
inc
lock
jnp
add
push
add
mov
xchg
jo
or
jo
bswap
mov
in
cmp
roll
or
mov
js
adc
cmp
sarb
flds
jo
push
inc
out
aaa
add
mov
mov
int3
lcall
push
int3
mov
or
pop
icebp
sbb
fmull
xchg
cld
in
xor
jb
push
jns
jno
mov
jg
xorb
sbb
fs
aam
push
push
sub
mov
xchg
in
das
and
xchg
or
push
movaps
mov
insb
divb
xor
arpl
sub
mov
xchg
in
push
ret
add
prefetch
pop
mov
dec
push
shll
subb
sti
push
lods
shr
jbe
adc
cmp
lret
out
add
repz
xor
insb
mov
insl
and
test
movb
ret
push
mov
push
add
or
adc
pop
mov
and
sub
cltd
and
add
mov
xchg
out
xchg
or
or
or
or
inc
ret
mov
mov
and
jnp
push
int
sub
push
push
movlps
movsb
movaps
lcall
pop
mov
cmp
mov
push
fistpll
dec
sbb
aad
adc
insb
ss
push
jmp
arpl
add
xor
divb
leave
jae
daa
jne
push
mov
cltd
idiv
mov
mov
add
mov
mov
mov
jb
push
mov
inc
inc
cmp
jg
arpl
sbb
jl
mov
addr16
and
in
shlb
xor
xor
enter
xor
xor
mov
xor
xor
xor
pushf
cwtl
xchg
nop
xor
xor
mov
xor
jl
je
xor
xor
insb
push
xor
pop
push
push
dec
xor
xor
dec
inc
inc
cmp
xor
xor
xor
sub
xor
xor
and
sbb
xor
xor
adc
or
xor
xor
add
cld
inc
lahf
iret
out
clc
inc
rolb
mov
inc
sbb
jns
nop
inc
xchg
cwtl
pushf
sbb
sbb
mov
sbb
sbb
xor
sbb
inc
enter
xor
aam
faddl
in
in
lock
sarb
dec
add
sbb
jmp
pop
ret
push
mov
push
scas
jmp
and
nop
pusha
popf
loope
cmpsl
pop
add
ret
push
xor
add
in
insb
rolb
data16
add
stc
mov
xor
cmp
pop
cld
ljmp
inc
orl
push
fcoml
inc
dec
int3
or
xchg
xchg
insl
mov
or
iret
insl
lock
aam
xchg
popa
cmp
int
mov
add
dec
sti
sub
adc
inc
mov
push
sti
inc
xchg
lea
test
push
pop
cwtl
mov
mov
pop
or
add
sti
ljmp
mov
cmpb
jne
inc
or
add
or
stc
adc
jbe
aam
dec
movsb
rclb
inc
rolb
in
movzwl
jmp
fldt
jbe
jmp
push
pop
pusha
push
push
and
xor
cwtl
xor
inc
in
mov
mov
mov
int3
and
pop
mov
cs
and
adc
add
xchg
stc
fisubrl
push
ret
lock
inc
lahf
adc
imul
adc
sub
test
mov
mov
mov
push
and
pop
fsubr
xor
jo
or
cltd
popa
jb
mov
inc
into
icebp
cmpsb
clc
lea
adc
mov
in
and
int3
add
or
outsl
sahf
rcrb
dec
faddl
or
xor
cld
sbb
and
pop
xchg
jg
nop
sbb
add
jmp
dec
bound
push
inc
pop
cs
lcall
js
imul
dec
mov
lcall
mov
enter
push
dec
insl
lcall
inc
dec
xchg
lret
in
lahf
jnp
adc
adc
add
adc
pop
or
pop
cs
or
sbb
movsl
leave
adc
xlat
sub
lret
mov
or
jb
xor
or
mov
pop
outsb
fwait
in
add
xor
adc
add
jne
mov
add
das
dec
cmp
or
sub
jne
out
sub
adc
aaa
inc
out
pop
mov
jbe
out
movhps
jmp
xlat
jne
cmc
pop
sbb
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
mov
testl
adc
pop
mov
mov
jmp
scas
cmpsb
pop
push
push
addr16
scas
jmp
out
movsl
addr16
mov
adc
xlat
xor
push
scas
arpl
shr
mov
dec
out
mov
inc
aas
fnstcw
mov
mov
fisubl
mov
cmpsb
imul
mov
fmuls
les
cmpsb
pop
in
sub
or
imul
mov
add
dec
inc
add
dec
shll
mov
xor
dec
or
sub
xor
shll
cmp
repz
and
inc
add
add
inc
adc
pop
test
aam
inc
loope
or
xchg
xor
lcall
add
rolb
lcall
add
push
dec
inc
je
mov
rclb
cmp
add
xor
shll
and
adc
pop
xlat
je
or
add
jnp
add
xor
shll
in
fcom
shll
mov
dec
scas
test
pushf
mov
xchg
and
xchg
lods
pop
enter
mov
push
pop
or
aaa
push
enter
das
mov
dec
jb
and
xor
fldl
aas
xor
dec
shll
sub
sbb
pop
ss
rcll
or
xor
xlat
mov
stos
rolb
in
xor
loopne
aam
enter
imul
mov
shll
xlat
pop
add
nop
and
pop
rorb
xor
popa
mov
add
add
jecxz
xor
add
loopne
sub
sbb
add
or
js
int3
inc
xor
mov
and
decb
dec
pop
leave
sub
dec
es
mov
adc
dec
sar
inc
push
inc
push
dec
xor
cs
insb
jg
mov
jge
xor
dec
inc
push
sbb
rolb
xor
repz
cmpl
mov
stos
std
incl
clc
std
stc
cli
cld
idiv
std
add
clc
cmp
stc
aaa
push
enter
or
lcall
or
mov
pop
mov
dec
sbb
pusha
outsb
push
push
pop
imul
lcall
imul
jae
sbb
sbb
dec
dec
sbb
pop
bound
pop
or
sbb
incl
ret
xchg
andl
pop
repz
leave
andl
int3
jns
jecxz
push
movl
daa
in
push
lret
jle
out
outsl
or
mov
fwait
add
mov
scas
fs
dec
pop
bound
pop
push
jbe
inc
inc
inc
lock
aas
mov
ret
adc
sti
or
push
out
dec
xchg
add
popf
cmpsb
cmp
pop
or
xor
rorb
pop
pop
inc
dec
pop
add
add
or
xchg
push
out
mov
fwait
outsl
fidivrl
xchg
lods
adc
or
jnp
out
scas
nop
fldt
adc
sub
jae
arpl
movsb
jmp
dec
add
xor
in
pop
sub
pop
jb
lods
or
repz
rclb
cmp
pusha
pop
outsl
pop
xchg
xor
jbe
jbe
daa
mov
fs
in
fstpt
pop
fldt
mov
imul
and
push
mov
jnp
mov
jg
mov
dec
push
push
bound
xor
stc
pmaxsw
pop
movsl
movsl
mov
cmc
clc
lcall
negb
imul
cli
imulb
push
cmp
sti
lea
pop
or
xor
push
xchg
movsb
imul
std
mov
dec
push
popa
sub
mov
lea
sub
hlt
out
outsl
xor
aam
jg
inc
dec
dec
arpl
add
mulw
mov
out
mov
pop
push
push
mov
addb
inc
stc
push
stc
jo
pop
stos
or
xchg
jle
add
in
inc
pop
jp
mov
lea
ret
cld
xchg
or
mov
inc
in
sub
xchg
loopne
sub
fildll
jecxz
pop
std
push
rorb
dec
inc
xchg
test
push
cli
jno
arpl
fcmovnu
into
add
loope
inc
daa
push
push
sarl
add
dec
dec
mov
and
xchg
in
inc
out
sbb
test
addb
xor
icebp
push
dec
xchg
cld
gs
push
dec
cli
jb
push
push
cli
neg
std
rcrb
out
arpl
pusha
imul
or
adc
stc
repnz
imul
roll
xchg
iret
loop
sbb
mov
jecxz
daa
xchg
xchg
loopne
push
push
xchg
jecxz
push
cld
ret
jg
pop
push
lds
dec
dec
push
push
in
inc
clc
mov
or
outsl
ja
push
test
xchg
xor
jno
pop
jb
imul
mov
mov
addr16
std
ljmp
clc
outsl
repz
dec
cli
aad
mov
pop
add
ficompl
std
movsl
jg
and
inc
insl
outsl
aaa
cmp
std
or
int
in
rolb
and
sti
mov
loop
and
pop
push
push
mov
dec
mov
in
pop
jle
add
jne
mov
es
das
pop
push
loopne
and
mov
push
dec
test
and
das
mov
pcmpgtb
xlat
or
mov
push
fnsave
pop
adc
mov
sti
or
push
jl
pop
push
dec
arpl
mov
xor
mov
outsl
sub
jp
pusha
test
cmpsb
mov
shrb
push
or
fcmovnb
outsb
clc
data16
arpl
arpl
dec
pop
in
adc
add
insl
popa
inc
pop
jne
rcll
popf
imul
mov
std
vpackssdw
aad
pop
inc
test
adcl
hlt
xor
lea
popa
jno
cmp
mov
xorb
mov
clc
in
fwait
test
cmp
out
push
arpl
pusha
dec
or
mov
pop
lret
gs
inc
pop
mov
jo
adcl
aad
push
cld
push
lcall
inc
enter
ljmp
cmpsl
sub
add
notb
dec
imul
mov
mov
mov
arpl
inc
fstpl
fwait
jo
mov
lahf
xchg
xor
mov
cmp
out
pop
fcmovu
gs
mov
dec
xchg
dec
arpl
fs
pop
bnd
aad
dec
or
addr16
ljmp
int
sti
int
jne
xor
mov
add
jb
ret
out
push
mov
test
mov
fbstp
dec
outsb
aaa
sbb
ljmp
js
sub
testl
push
dec
in
insb
jmp
in
pop
outsl
add
inc
add
mov
jo
pop
push
inc
pop
push
cmp
push
in
movsl
popa
cmpsl
mov
lret
lds
sub
in
imul
dec
std
or
cmc
outsl
cmpb
imul
sti
push
and
fdiv
rolb
add
jae
and
jmp
pop
std
aaa
cs
or
xchg
add
jecxz
pop
out
sti
or
and
mov
mov
in
mov
sub
adcl
cli
jmp
mov
inc
adc
pop
jg
jge
mov
sub
jns
cmpsb
test
sti
pop
push
fistpll
inc
add
lcall
cmp
push
or
test
xchg
cmp
out
aaa
sub
jbe
movsl
test
incl
xchg
inc
jecxz
inc
ljmp
add
jecxz
xor
jo
and
dec
jecxz
inc
arpl
icebp
add
jg
in
jle
jo
jecxz
adc
add
push
jmp
jp
mov
outsl
push
adc
pop
cmp
inc
xlat
mov
adc
popa
sti
lods
pop
icebp
incl
mov
xchg
sbb
sbb
cmp
xchg
jo
sbb
out
dec
pop
dec
or
inc
ja
dec
clc
lods
jb
std
push
jae
int
pop
push
jg
mov
pop
arpl
outsb
adc
or
xor
arpl
lcall
dec
clc
fists
clc
sti
addr16
push
pop
lds
outsb
lea
xchg
mov
pop
add
addr16
sbb
mov
sub
mov
jecxz
cld
pop
dec
bound
sbb
dec
sub
sub
movsl
xor
je
fsubrs
adc
dec
add
dec
pusha
pop
adc
arpl
rolb
arpl
js
mov
push
stos
decb
and
out
fiadds
out
jecxz
and
in
adc
ret
pop
test
in
add
dec
addr16
popa
add
inc
and
aas
jmp
mov
jmp
roll
les
fdivl
inc
hlt
sbb
push
xor
dec
hlt
push
sar
push
mov
dec
aaa
subl
sub
dec
cmp
cmp
dec
xchg
arpl
or
jg
cs
jp
in
repz
mov
gs
scas
or
jmp
inc
lock
xchg
fsubrl
jmp
adc
and
pop
cmc
filds
std
pop
xorl
fbstp
call
cld
ja
test
nop
add
incb
imul
push
test
xchg
xchg
cli
dec
or
dec
or
out
lret
in
in
xor
inc
in
in
add
or
repnz
add
cmpb
in
mov
enter
push
bound
scas
gs
xor
imul
rcr
pop
cmp
dec
jecxz
push
jge
sbb
jno
pop
pop
adc
test
xchg
or
dec
loop
mov
test
or
or
adcl
add
xchg
mov
icebp
add
inc
out
test
ds
or
xchg
adc
and
fistpll
push
jl
into
sahf
lahf
mov
test
daa
fimuls
fwait
sti
ja
out
idivl
loop
lds
popa
decw
dec
ror
mov
out
jmp
addr16
and
jmp
dec
daa
setg
test
pop
clc
xor
stc
cs
out
aas
jne
add
adc
out
pop
pop
incb
addl
ret
incl
addb
lods
add
and
xchg
sar
in
add
ret
push
pop
bound
in
std
mov
sub
gs
test
gs
jle
and
xlat
push
jg
clc
xchg
repz
inc
test
cli
pop
jle
pusha
cmc
stc
add
mov
jae
cmp
test
mov
mov
dec
add
divl
jo
push
cmc
out
mov
push
cmpl
mov
mov
push
enter
rolb
or
fildll
std
out
pushf
jecxz
andl
orl
mov
test
mov
dec
inc
add
sub
es
orb
mov
inc
xor
cmc
push
test
xchg
test
testl
dec
rolb
adc
jmp
sarb
test
cld
jg
add
sti
pop
adc
test
push
stc
xchg
ret
cmp
jecxz
cmp
fstp
incb
fwait
mov
add
loop
and
bound
or
jmp
ljmp
ljmp
popa
cmp
insl
xchg
jl
fmul
sub
repz
and
xchg
pop
out
std
pop
push
orl
inc
decb
fcomip
fistps
cmc
loope
add
xor
outsb
sub
adc
mov
dec
xchg
dec
in
cmp
jo
test
js
pushf
rcrl
or
or
out
mov
inc
incl
aaa
adc
sub
out
xor
add
test
lds
jno
cmc
cmc
cmpsl
sbb
mov
stos
add
in
jbe
mov
stc
mov
jecxz
loope
mov
call
popa
test
xchg
add
in
out
xchg
js
xchg
loop
cmp
push
pop
pop
ret
fs
xlat
mov
push
sub
or
idiv
jle
outsl
inc
jp
push
clc
es
or
jnp
ret
imul
jnp
std
outsb
pop
xchg
insl
lret
mov
push
adc
jg
imul
jb
jge
or
outsl
or
lahf
inc
mov
xchg
testl
sti
inc
call
pop
sub
cli
jns
pop
mov
incl
mov
jl
inc
push
jo
addb
loop
mov
inc
pop
jo
cmpl
lods
test
jmp
daa
mov
push
inc
pop
push
ret
wbinvd
push
jg
mov
push
loopne
jg
pop
pop
push
mov
outsl
hlt
std
jp
std
mov
add
xor
pop
addb
dec
gs
iret
fbld
mov
or
leave
sbb
xor
xchg
xchg
leave
inc
dec
sbbb
shl
aas
and
push
push
push
push
ss
push
inc
cmp
xchg
pop
mov
sub
test
sub
push
divl
in
xchg
cli
fildll
stos
pop
dec
adc
out
lods
in
mov
jg
pop
mov
adc
outsl
and
push
cmc
jmp
sub
pop
mov
pop
jo
fneni(8087
sti
into
push
aas
fistl
sahf
lock
loopne
cmp
repz
sti
cmpsl
cmp
scas
sbb
sub
xchg
xor
int
sub
cmp
aas
and
ret
jo
jno
jbe
dec
cld
outsb
pop
sbb
rclb
cmc
adc
cmp
sar
mov
call
out
cli
in
out
xor
xchg
xor
push
dec
or
push
cmp
ret
jno
in
sbb
dec
sti
imul
int
add
jb
das
push
pop
push
push
push
inc
xor
xor
jae
movsl
test
dec
repz
lock
mov
insb
mov
mov
push
out
in
mov
xchg
arpl
jmp
movsl
icebp
cmp
mov
push
sub
sub
idivl
push
push
data16
jo
xchg
pop
sarl
cld
outsb
or
xchg
dec
lahf
fcomip
insl
xor
dec
mov
jns
push
cld
test
popa
in
in
xor
leave
in
dec
dec
gs
pop
loope
sahf
shlb
popa
fisubrl
xchg
cld
movsl
xchg
js,pn
or
decl
add
std
int
lahf
pop
add
cmp
mov
xchg
add
hlt
pop
scas
xchg
sbb
addr16
cmp
xchg
pop
cwtl
or
stos
jb
mov
adc
jg
lea
add
pop
not
pop
aaa
divl
out
fcmovnb
cmp
mov
outsb
sbb
gs
fidivrl
push
test
test
add
in
cmc
mul
dec
sahf
sbb
in
fistpll
orl
orl
test
shlb
filds
xchg
out
or
or
adc
cmp
fstpt
or
push
gs
aam
ss
scas
insl
and
pop
jo
test
pop
xchg
fwait
mov
faddl
sbb
fst
imul
add
push
pop
sarb
dec
push
push
xor
add
daa
lods
std
jnp
adc
imul
mov
rcrb
jge
test
mov
sub
mov
fdivrl
sti
jb
jb
mov
push
stos
dec
repz
pop
aaa
mov
test
dec
hlt
out
test
jg
or
cli
sbb
outsl
sbb
lods
dec
xor
insl
dec
fists
mov
loope
test
out
mov
jecxz
fwait
addl
test
xrelease
or
sbb
add
or
xor
cltd
cld
xchg
jmp
mov
push
mov
insl
pop
pop
mov
addb
call
ja
decl
fsubr
sti
jo
cld
ss
dec
xor
pop
jo
dec
xchg
mov
pop
mov
ss
shll
or
rolb
cmp
out
xor
lcall
or
cmp
xchg
outsb
faddl
mov
xorl
outsl
adc
mov
add
or
lea
pop
jl
idivl
imul
fadds
sub
inc
add
or
decl
mov
and
das
xor
push
fbld
add
out
push
loop
add
jbe
lcall
imul
ss
add
outsb
or
inc
pop
pop
cld
inc
lods
adc
dec
out
add
mov
pop
push
sbb
lods
jecxz
xor
xor
mov
cli
ffreep
mov
mov
jecxz
sti
add
in
aaa
clc
test
xor
out
pop
fbstp
cs
mov
clc
adc
or
leave
lret
shl
subl
test
cmp
mov
fsubp
stos
imul
lds
pop
mov
lods
add
add
or
inc
sub
addl
test
in
lods
mov
inc
test
or
inc
mov
divl
xor
ljmp
xor
test
js
fildl
dec
or
mov
pop
fcmovu
pop
mov
test
test
in
test
pop
js
test
orb
xor
sarb
xor
call
pushl
in
xor
and
add
push
clc
fists
add
xchg
ss
insb
add
in
repz
imul
dec
mov
add
test
and
pop
fwait
push
xor
addr16
add
push
pop
fsubrs
xor
mov
in
test
add
pop
xor
dec
aad
mov
mov
cmp
or
notb
xor
adc
insl
loope
lret
repz
jb
test
jp
push
jo
xorb
add
jle
adc
xchg
add
ja
popf
filds
test
clc
jbe
outsl
inc
xchg
jno
in
and
jbe
sub
xorl
movb
sub
mov
sub
inc
add
jb
jo
xorb
jge
sbb
clc
je
in
clc
inc
inc
adc
mov
pop
sbb
in
sub
imul
jp
std
jbe
daa
mov
fcmovnb
sbbb
in
icebp
xchg
fdivrs
sbbl
inc
push
dec
test
leave
loopne
pushl
mov
xchg
orl
arpl
mov
insl
test
daa
xchg
movb
pop
mov
ljmp
test
xchg
pop
lock
adc
sub
mov
mov
xchg
mov
inc
or
mov
jns
push
popa
addb
sbbl
in
outsl
jg
sbbb
xor
and
cmc
insb
sbb
std
es
xor
xor
push
cmp
cld
out
mov
popa
sbb
mov
push
xchg
sub
mov
xchg
call
adc
xchg
scas
addr16
xor
fldcw
scas
loopne
aaa
lock
cwtl
pop
xchg
xchg
test
and
cs
sti
hlt
out
fisubrs
push
add
subb
xor
jge
cli
jno
xor
arpl
fwait
addl
stc
ds
inc
add
cmp
add
int
mov
fs
sub
push
jb
repz
jno
leave
rorb
and
movsl
aas
test
mov
inc
sub
mov
aaa
push
sbb
in
or
jne
adc
inc
or
push
sub
test
aas
sti
outsb
sub
xchg
out
cmp
add
jo
ret
mov
add
in
ss
std
xchg
push
jmp
test
mov
cmp
lcall
mov
mov
jnp
pop
outsl
push
data16
push
ljmp
push
daa
daa
mov
mov
fs
add
push
inc
jnp
fisubrs
loope
cmp
cmp
mov
repz
loopne
push
pop
or
testb
mov
out
jl
imull
cmp
jo
lahf
mov
ret
dec
nop
clc
iret
ret
lret
inc
decl
xchg
mov
stc
sub
or
jge
cli
lods
cwtl
arpl
jge
xor
pop
mov
sub
in
ja
mov
add
insl
mov
loop
pop
loopne
mov
mov
xor
stc
cmp
in
xchg
movsl
test
cmp
adc
cmpb
inc
aas
arpl
outsl
pop
dec
pop
fildl
lea
imul
or
out
mov
mov
xor
rclb
dec
push
call
cmp
sbb
ret
addr16
jmp
lods
fildll
jo
or
add
dec
cld
dec
fsubl
addl
mov
or
loop
fildl
mov
push
mov
mov
adc
imul
std
test
ret
popf
push
add
in
insl
pop
outsl
xchg
pop
aaa
push
jae
ds
adc
dec
add
add
mov
test
inc
cld
push
jl
cld
insb
or
pop
xlat
cmp
movsl
cmp
mov
mul
cmp
outsb
push
xchg
icebp
out
sbb
fmull
icebp
dec
xchg
add
aaa
test
mov
mov
ret
mov
fstps
adc
pushf
xor
cmp
fnstsw
and
push
sbb
push
popf
jg
pop
popf
insb
or
mov
sbb
fidivl
test
mov
icebp
decl
or
jae
es
and
test
cld
push
push
icebp
xchg
or
ret
rolb
jno
adc
enter
outsb
insl
or
fstp
stc
daa
divb
sahf
addr16
dec
lahf
cs
subb
out
pminub
aam
jge
add
imul
cli
adc
test
pop
test
icebp
in
inc
rcrl
testl
out
jbe
pop
lcall
idiv
iret
popa
mov
lock
into
or
call
add
arpl
jp
add
inc
call
xchg
or
pop
testl
and
mov
jmp
adc
pop
mov
sub
push
mov
ret
mov
sbb
test
test
ja
mov
jo
sbbl
xchg
pop
xchg
repnz
mov
mov
lods
pop
gs
fisubl
js
sti
or
sarl
stc
insb
and
and
nop
push
mov
adc
mov
dec
jo
add
xchg
out
mov
das
mov
shll
sbb
mov
sub
xchg
out
xor
out
shll
test
ret
cmpb
dec
push
aaa
pop
cmp
les
pop
sbb
js
sub
mov
sub
dec
repz
jnp
push
push
arpl
std
push
push
in
sub
sbb
jb
sbb
ss
jns
decl
mov
dec
inc
shll
mov
lret
inc
sarb
pop
test
pusha
test
ret
xor
fisttpl
mov
dec
dec
push
lahf
jmp
or
in
insl
jmp
movsl
insb
push
adc
pop
rolb
mov
pop
jnp
inc
jmp
jecxz
ljmp
push
cs
rorl
imull
loopne
mov
test
jecxz
daa
mov
sarl
mov
sti
lret
dec
in
sbb
mov
stc
sub
sarl
xchg
sub
jg
mov
fstpt
add
mov
pop
mov
popa
fwait
xor
or
dec
dec
test
leave
jle
sti
xor
sbb
dec
dec
arpl
rolb
fcoms
cltd
mov
dec
loopne
xor
mov
xchg
jmp
jg
clc
or
out
dec
stc
rcll
lds
mov
sub
loope
sub
ja
fsubrp
lea
mov
jnp
adc
sarl
and
push
popf
mov
fsubr
jbe
or
mov
push
clc
add
jnp
insl
test
js
std
xor
nop
mov
fistpll
pop
xchg
test
jecxz
sub
das
cwtl
scas
push
cltd
daa
dec
jnp
in
aas
push
xchg
in
clc
add
test
pop
pop
push
popf
cwtl
inc
in
pop
xchg
mov
xor
dec
pop
out
arpl
aad
dec
xor
inc
cld
mov
cli
mov
xor
outsl
sub
jb
loop
cs
aaa
push
push
jae
xchg
popf
divl
lret
jnp
outsl
xor
jno
cmp
lock
decl
repz
test
cmc
cmpl
adc
pop
in
jge
in
sub
or
push
dec
lahf
mov
dec
aam
cmp
subb
mov
movaps
out
cli
jecxz
cmp
addr16
adc
push
push
or
or
call
addl
movsl
sti
mov
push
jne
xchg
pop
pop
in
js
insl
dec
pusha
sbb
in
cmc
rolb
arpl
insb
hlt
dec
cmp
imulb
or
testb
or
add
mov
pop
ja
sub
outsb
add
jp
aas
cmp
call
js
subb
insl
out
aaa
mov
adc
fadd
sbb
pop
fnstcw
dec
dec
xchg
pushf
aam
inc
into
dec
jecxz
sub
ds
es
lds
sub
pop
cld
jg
stos
cmc
push
jge
pusha
push
or
cmp
call
cld
sub
cmpsl
sbbl
out
mov
pop
mov
mov
cwtl
mov
adc
ljmp
mov
loop
xchg
mov
arpl
fwait
inc
imul
out
mov
dec
mov
in
mov
subb
mov
sarl
or
lods
clc
sbb
insl
push
jle
push
lahf
mov
loopne
lcall
dec
data16
pop
std
pop
bound
mov
xor
stc
push
dec
test
stos
pop
and
sub
adc
dec
sti
into
popa
xchg
fisttps
fisttps
adcb
fbstp
lock
dec
add
push
test
adc
sub
dec
leave
out
dec
out
sub
jo
mov
dec
rcrl
lcall
lods
dec
dec
jg
loopne
sub
ss
or
ss
xchg
shll
xchg
incl
cwtl
daa
pop
xor
xchg
jl
fildl
outsl
pop
cli
pushl
xchg
movsl
sti
add
jp
xchg
std
push
int
mov
std
pusha
add
add
mov
add
popf
and
ret
testl
js
pop
rol
xor
push
je
gs
jg
data16
loope
insl
lahf
dec
and
scas
sti
xlat
imul
fisubrl
gs
sbb
mov
loope
xor
ja
in
es
aas
xor
pop
dec
xor
mov
pop
jmp
and
pop
inc
jno
lds
pop
inc
sbb
in
add
cld
or
lcall
cmp
mov
cs
or
pop
jnp
xchg
repz
xchg
adc
inc
mov
repnz
jbe
pop
adc
push
or
jmp
sbb
pop
xchg
mov
mov
push
cmpb
mov
into
push
orb
xor
rcl
adc
add
int
sub
mov
mov
dec
notl
mov
adcl
jg
sbb
fs
pop
mov
sahf
outsl
jp
xor
adcl
data16
jbe
mov
imul
cmp
pop
or
and
and
and
lcall
test
or
mov
shll
add
ss
test
pop
inc
jne
cmp
aaa
dec
push
xorb
xlat
adc
xchg
movsl
daa
sub
je
push
fcompl
dec
testl
fs
xor
js
sbb
push
push
pop
dec
push
cmpsl
jecxz
pop
push
lea
sub
test
adc
cld
jnp
stos
xchg
fdivrp
mov
cmpsb
cli
adc
xchg
std
leave
lret
arpl
dec
cltd
in
add
in
lock
inc
jp
jg
xor
lahf
jo
sbb
daa
ja
dec
or
mov
jb
dec
pop
xchg
pop
mov
shll
ja
scas
pop
std
call
mov
jmp
arpl
data16
inc
mov
pop
fnstcw
add
xlat
movb
js
pop
daa
addr16
pop
aam
jl
loope
and
popa
cli
lea
pop
jmp
pop
mov
sbb
divl
push
std
mov
mov
test
sub
dec
arpl
and
lahf
add
mov
jecxz
pop
push
push
jg
out
aaa
pop
call
push
push
pop
pop
jns
add
mov
jno
jle
cmp
mov
arpl
mov
pushl
sahf
gs
push
cli
xor
fisubrl
dec
fisttpll
gs
xchg
sub
lods
mov
and
frstor
jno
out
incb
add
add
out
push
mov
push
inc
sti
push
mov
sub
lods
aad
sbb
xchg
sbbl
iret
dec
cld
int3
imul
xchg
mov
div
sub
or
adc
loope
test
push
cmp
or
jecxz
cli
aaa
fdivs
out
dec
in
clc
jo
ret
std
sbb
ret
cltd
and
in
aas
add
jno
stos
xchg
lock
and
pop
cltd
sti
and
faddl
outsl
xchg
jno
mov
jle
repz
jge
sbb
shlb
out
test
test
js
fmuls
insl
pop
mov
dec
repz
addl
jg
out
es
ja
scas
xor
insl
test
adc
dec
push
addr16
adc
inc
out
cmpsl
pop
cmpsb
test
inc
and
clc
or
inc
filds
pop
rclb
dec
fsubl
sbb
xchg
in
pop
fdivp
sbb
mov
add
or
lahf
mov
stos
js
js,pn
mov
push
add
jle
cmp
add
inc
mov
aad
mov
and
dec
in
inc
pusha
orb
ret
shr
push
imul
add
repnz
std
popf
xor
or
rcrb
sub
mov
jno
mov
imul
mov
pop
xchg
or
pop
outsb
in
fstpt
or
cld
push
dec
arpl
insb
cs
or
add
mov
sub
jo
cmp
pop
xor
out
hlt
jg
inc
mov
sbbb
jnp
in
stc
sub
jmp
dec
push
or
es
xor
jmp
idivb
mov
and
sub
push
pop
js
pop
cmp
fwait
and
cs
ja
xor
adc
cmpb
push
cmpsb
test
test
clc
insb
mov
std
xor
adc
or
cmp
in
add
das
leave
scas
xchg
fidivs
or
add
xchg
mov
add
and
dec
pop
fstps
mov
iret
pop
xor
inc
data16
lds
in
and
xor
fisubl
in
jmp
push
rol
insb
jl
mov
fldt
movl
push
pusha
or
push
frstor
sti
mov
fs
mov
fwait
movsl
push
xor
inc
or
jle
imul
push
rcrl
sub
or
and
lcall
jb
cmp
mov
pop
push
pop
stos
mov
ss
outsb
jg
sbb
loop
mov
mov
pop
push
arpl
out
test
mov
push
xor
aad
push
add
pop
popa
sbb
movsl
or
sub
cli
jns
sbbl
movsb
movsl
cmpsb
bound
push
stc
in
adc
std
push
outsl
mov
loope
xchg
sub
lock
pusha
cmpsb
jbe
nop
jecxz
mov
jne
sub
cmp
cmp
push
mov
xor
xchg
lock
popw
orw
mov
aas
mov
mov
add
xor
jns
dec
jb
adc
pop
nop
fstpt
call
addl
mov
in
sub
push
or
cmp
lods
or
cmp
xchg
sbb
int3
pop
lahf
in
inc
in
pop
add
fdivrp
repz
mov
inc
ljmp
idivl
add
inc
jle
fdivs
sub
mov
sub
mov
aaa
xor
roll
xor
push
jb
cmpsb
sbb
fcmove
push
push
mov
ffreep
or
repnz
dec
dec
jecxz
push
pop
pusha
and
pop
push
ror
insb
orb
add
outsl
sbb
add
roll
ret
dec
sti
ret
pop
in
add
jnp
pop
adc
rcrb
inc
data16
push
lea
aas
mov
repnz
push
cld
aad
and
push
sbb
or
push
or
cs
cwtl
xor
inc
xor
mov
inc
xchg
mov
sub
inc
xchg
xor
push
sbb
repnz
stos
imul
sbb
lahf
cli
sbb
cmpsl
sbb
pop
fstpl
xchg
or
test
movsl
aas
js
mov
jmp
mov
adc
lods
clc
sbb
push
hlt
ljmp
in
lahf
gs
mov
xchg
xchg
mov
stos
out
pushf
popa
mov
mov
inc
mov
test
add
mov
aaa
sbb
dec
daa
cmpsl
pop
sbb
push
pushf
add
mov
ret
pop
pop
or
lods
outsl
xor
stos
cld
pop
or
popf
addl
add
mov
cmc
rcrl
xchg
repz
out
pop
adc
dec
dec
mov
push
gs
push
inc
fsubr
pushf
neg
mov
rcr
push
mov
hlt
testb
stc
call
push
xor
or
pop
popf
decl
add
pop
js
imul
ljmp
mov
insb
add
sub
imul
mov
or
popa
or
push
clc
cmp
mov
loope
pop
add
hlt
aas
dec
dec
in
pop
jo
je
ja
loope
add
jecxz
inc
rcl
aaa
push
or
movsl
cmpsb
or
mov
add
roll
movl
pop
call
inc
push
dec
out
sbb
xchg
inc
xchg
xor
rolb
mov
inc
inc
mov
stos
ja
mov
mov
int3
cld
mov
inc
pop
addl
jb
ljmp
dec
mov
cmp
hlt
cmp
add
lahf
fistpl
repz
stos
mov
push
std
out
loop
mov
cld
push
mull
push
clc
adc
mull
mov
add
ja
cltd
jg
int
mov
xchg
cmp
add
push
xchg
jp
aad
sar
sbb
pop
sub
in
insl
idivb
mov
inc
jl
add
xchg
dec
jp
sar
add
shrl
mov
dec
sbb
cltd
sbb
xchg
jge
inc
jns
mov
jge
jmp
sbb
sbb
leave
sar
pop
outsl
icebp
mov
movsl
mov
jmp
lret
push
push
fs
pusha
addl
push
cltd
enter
insb
adc
mulb
pop
push
sub
jmp
or
mov
sbb
jo
sbb
stc
js
jge
mov
popa
cmp
mov
out
push
dec
inc
jge
roll
push
mov
add
lods
loopne
mov
in
mov
outsl
mov
jb
dec
ja
sbb
mov
sbb
push
gs
pusha
imul
mov
or
pop
rol
mov
pop
cld
shrl
pusha
test
int
cmp
pop
sub
test
or
test
pop
push
pop
push
or
in
and
inc
lea
sub
shll
jb
push
in
sbb
push
dec
jnp
dec
cmp
aad
inc
jle
push
mov
int
fnstcw
sub
mov
sti
ds
mov
loop
jne
xchg
lock
cmp
enter
loopne
aas
arpl
shlb
sar
sti
call
pop
mov
sarb
out
xor
rcr
js
xchg
lds
aaa
push
pop
mov
mov
pop
adc
les
add
stc
outsb
push
bound
push
mov
dec
test
je
mov
add
imul
adc
ja
pop
xor
incb
dec
arpl
mov
int
insb
jmp
in
je
or
jge
or
jg
or
pop
lahf
and
insl
stc
inc
push
rolb
lock
inc
cmc
jge
out
xchg
push
jno
mov
pop
stos
push
ljmp
into
testb
andb
test
dec
repz
jae
jne
mov
rorl
popa
shlb
dec
inc
jle
xchg
sub
mov
out
fcomi
shll
fdivl
dec
mov
mov
pop
test
inc
xchg
stc
gs
jno
cltd
pop
mov
adc
push
not
clc
dec
dec
bound
addr16
inc
lea
cmpl
pop
inc
sti
cli
loopne
hlt
test
das
lock
aas
mov
repz
out
adcl
cmp
mov
jne
sub
jmp
push
daa
push
push
sub
les
cld
ret
sahf
and
fildl
jl
cmpsl
push
sbb
insl
decb
and
loop
sub
xor
dec
jecxz
pop
fyl2x
scas
out
sbb
xchg
sub
iret
dec
inc
xor
lcall
cli
xor
lods
pop
aas
cli
lods
mov
mov
push
fnsave
scas
push
push
xchg
iret
jno
loope
or
jecxz
out
mov
xchg
adc
add
fistps
mov
sbb
xchg
outsb
add
sub
pop
ss
cli
add
add
aad
scas
ret
cmp
jmp
dec
aad
xchg
or
sub
jl
xor
in
flds
cmp
push
in
inc
test
imul
loop
dec
lds
aaa
xor
xlat
push
mov
jge
sub
push
test
push
push
mov
mov
cmp
sbb
adc
dec
prefetcht0
adc
add
outsl
pop
popa
mov
cmpb
jnp
stc
jecxz
in
jno
cld
jp
xor
aaa
lcall
mov
test
inc
outsl
test
lret
movsbl
rclb
hlt
cli
xchg
aaa
rorb
cmpsb
xchg
idivl
cwtl
jns
xchg
jmp
push
roll
sar
mov
and
xchg
fsts
les
ss
lahf
movsl
mov
call
jecxz
push
push
lock
in
mov
rclb
iret
dec
push
cmc
fcomp
mov
test
pop
xor
adc
jno
shll
mov
xchg
outsb
pusha
mov
repz
mov
xchg
push
xor
mov
push
push
xchg
mov
mov
sbbb
in
dec
jno
sbb
sbb
mov
ljmp
inc
mov
xor
xchg
sub
jb
sub
xchg
and
sbb
std
mov
sbb
pop
jb
sbb
pop
je
and
mov
les
nop
mov
aad
addl
test
test
mov
jbe
jle
mov
lea
mov
cmp
loop
push
popf
mov
stos
push
pop
xchg
icebp
fs
fisttps
push
stc
add
arpl
xor
iret
adc
push
xor
inc
sub
fiaddl
mov
fwait
dec
out
jae
push
xor
lea
lock
sbb
mov
loopne
push
rolb
iret
rcrl
jns
notb
mov
pushf
pop
add
mov
sub
cld
inc
pop
insl
out
pop
lret
xchg
push
xlat
mov
repz
je
inc
mov
rol
dec
iret
les
mov
mov
dec
sub
dec
mov
inc
pushl
or
test
push
sub
mov
mov
xchg
cmp
mov
les
xor
pop
add
in
test
jg
pop
mov
stc
mov
or
xorb
xchg
mov
test
xor
xchg
loopne
insl
rcrb
les
pop
fsubrs
jne
jg
ljmp
cmp
jne
push
idivb
xchg
mov
ljmp
sar
pop
mov
test
add
or
dec
xchg
decl
mov
mov
sar
addl
adc
inc
xor
or
pop
xchg
lcall
lods
pop
cmpsl
cmp
push
dec
xchg
push
gs
mov
aaa
mov
rcll
in
push
jg
imul
inc
inc
cmpsb
adc
cmpl
push
idiv
outsl
cmp
push
pop
insl
xor
stc
jno
es
imul
into
daa
lahf
sub
push
outsl
sbb
js
stc
ds
subl
or
and
add
xchg
test
mov
add
push
add
inc
call
sbb
jbe
out
xor
sub
add
int3
popf
cmp
inc
in
xchg
add
and
dec
push
nop
add
nop
dec
inc
sbb
push
cmp
cmc
push
and
adc
test
sub
xlat
adc
das
lahf
lods
inc
testl
test
ja
stc
dec
mov
call
jnp
push
jg
add
popa
std
push
out
push
jne
jmp
mov
xchg
xor
loop
cmc
addr16
xor
enter
cli
xchg
fisttps
mov
daa
mov
push
vpsubw
or
mov
fnstsw
les
ljmp
or
xchg
movsl
sti
adc
cmp
inc
repz
cli
rol
push
adc
call
jl
loope
mov
add
sub
inc
jmp
aas
loopne
xor
xor
stc
cmp
arpl
pushf
pushf
or
xor
in
push
dec
pop
sti
lods
sbb
insb
pxor
inc
adc
scas
out
lcall
push
fwait
xor
jl
push
out
addr16
sbb
mov
popl
jmp
mov
add
cld
push
mov
pushf
stos
in
cmpsb
out
in
sbbl
dec
out
jno
lahf
fistl
out
push
dec
dec
inc
dec
daa
imul
dec
fs
xchg
inc
mov
iret
lcall
pop
ja
pop
sti
test
pop
idivl
idivl
jle
mov
sub
aaa
xchg
or
inc
aam
sbb
mov
mov
inc
inc
test
mov
mov
add
sbb
imul
jne,pt
aad
mov
popf
fidivrs
scas
add
sbb
outsb
jmp
or
add
xchg
cmpb
cmpl
jbe
icebp
ljmp
xchg
xlat
retw
mov
cld
sub
cmpsl
dec
jno
pop
push
clc
aad
xchg
fwait
popf
cmp
movsb
sub
adc
or
mov
test
jae
xor
xchg
jnp
or
dec
and
popf
push
jno
ja
or
cwtl
aaa
mov
mov
jecxz
icebp
lds
sti
inc
mov
cmpl
fildl
out
in
mov
aad
fstpl
xchg
push
lds
out
clc
subl
pop
decl
ja
ret
aad
out
push
cmpsl
inc
test
dec
or
int
out
mov
jmp
ret
test
mov
xlat
ds
jno
jle
jo
daa
inc
sbb
inc
adc
mov
fcoml
add
dec
loope
push
or
mov
cld
jae
mov
mov
inc
push
xor
jne
cmp
push
and
hlt
movntq
enter
or
nop
add
insl
cltd
nop
in
pop
add
mov
popl
or
dec
or
cs
cli
ret
andl
mov
adc
sub
ss
sahf
popa
jns
fsin
out
push
insl
loope
push
out
insl
jge
or
cmp
notl
jle
sub
xchg
in
cmc
pusha
cmc
add
jg
shlb
pusha
mov
incb
repz
cli
adc
fstps
xchg
xchg
mov
inc
outsb
shr
xchg
add
xchg
or
xchg
inc
scas
ljmp
repz
push
mov
dec
push
mov
push
popa
push
add
fs
arpl
adc
adc
mov
cmp
rcr
subb
dec
sbb
rcrl
fsub
jmp
mov
push
sti
aad
imul
inc
sbb
stos
dec
mov
push
xor
mov
pop
cmp
loopne
orb
mov
cmp
mov
data16
mov
insb
xchg
add
push
mov
add
rolb
popa
lds
rolb
jle
test
xlat
push
or
jge
dec
call
ret
ds
pop
sbb
jns
mov
ret
in
dec
shrl
push
adc
or
nop
dec
push
or
jg
sub
or
dec
cmp
or
imul
imul
sbb
aaa
imul
aas
ret
push
stc
and
cli
or
std
jo
dec
or
call
mov
push
dec
leave
ja
test
mov
push
rcrb
pop
inc
daa
imul
test
lret
dec
push
sbb
sbb
call
dec
push
pop
or
repnz
dec
push
jno
shll
cli
cmp
arpl
gs
pop
or
rcrb
dec
jmp
dec
push
mov
sbb
test
rorb
movsl
inc
jecxz
push
mov
sub
mov
mov
call
sbb
mov
push
stc
jl
fcoml
dec
mov
fists
loop
jns
addr16
roll
mov
add
jnp
mov
mov
dec
sub
pop
outsb
cmpsl
jp
cli
insl
test
popa
jne
lea
mov
outsl
fnstsw
subb
notl
jmp
add
ss
test
pop
or
incl
jmp
cmp
xchg
or
cmp
test
pop
aad
xchg
ret
cmp
je
ds
std
dec
sub
jnp
dec
test
faddl
dec
hlt
lea
or
xchg
ljmp
push
decl
aas
push
jnp
std
or
push
jl
push
cmp
ljmp
add
stos
jle
rorb
insl
sti
cmp
xchg
or
fucomip
scas
push
std
movsl
sbb
addr16
inc
add
or
push
and
test
cmp
dec
loopne
lods
aas
das
das
cld
in
rolb
add
shrl
push
movb
test
jmp
filds
sahf
shll
dec
roll
mov
push
aaa
pop
cltd
ljmp
loop
push
divb
mov
insb
in
mov
lds
add
push
aaa
jne,pt
xor
out
cmpsl
add
xchg
mov
gs
mov
inc
ficomps
cld
outsb
dec
in
push
inc
sbb
je
add
mov
mov
pop
mov
imul
addb
xor
cmp
mov
shll
insl
mov
fs
mov
outsl
pushl
add
xchg
cmp
mov
aad
sbbb
add
sarl
nop
out
xchg
jnp
in
push
std
push
push
push
sub
cmpsb
repnz
es
pop
out
sbb
add
fistps
lea
mov
mov
pop
aaa
stos
sbb
push
add
fdiv
pop
andb
out
in
push
outsl
add
sbb
mov
add
fcmovnbe
pop
jmp
fiaddl
xchg
imul
call
push
aas
or
mov
xchg
push
xor
out
in
add
push
pusha
sbb
lods
inc
gs
ret
mov
stc
aas
test
ror
cld
pop
sbb
hlt
bound
cmpsb
repz
lock
push
or
mov
cmp
gs
arpl
cmc
in
negb
mov
lock
dec
pop
push
and
xor
pop
es
pop
idivb
add
sbb
in
repnz
and
dec
cld
pop
or
mov
orl
add
dec
xor
cmp
pop
cwtl
insb
fldt
xor
pop
lock
push
add
loope
add
or
and
lret
loop
adc
mul
add
inc
aad
mov
iret
jecxz
fistpl
cld
out
les
aas
mov
cld
int
xor
pop
adc
mov
orb
popl
lret
rclb
jg
and
jmp
or
inc
arpl
xor
pop
jle
arpl
jmp
fbld
fwait
sbb
pop
mov
inc
push
pushf
jae
push
mov
out
in
pop
roll
sub
mov
es
das
sub
bound
xor
aaa
pop
aas
or
test
xchg
cmc
fcomp
or
and
loope
xchg
mov
push
sub
cld
psubsb
out
imul
insl
sti
out
cld
sbb
dec
insl
into
shr
lock
int
pop
cmc
in
sar
push
xor
hlt
gs
fldl
testl
out
mov
clc
pop
aas
call
mov
insl
cmpsl
in
cmpsb
enter
xchg
outsl
das
in
mov
jp
mov
pop
inc
mov
btc
imul
lret
ds
sarl
adc
lods
out
sbb
cmc
and
mov
fldcw
and
xchg
cmp
arpl
jmp
push
xchg
out
sbb
add
mov
push
xor
int
lret
mov
mov
sbb
in
popa
fists
ret
lret
cmp
xchg
std
divb
dec
xchg
push
mov
loopne
lods
jns
lcall
mov
aaa
popa
dec
cmpsl
ret
stos
inc
cmp
inc
mov
popa
cli
mov
in
aaa
pop
lods
mov
std
xchg
sti
and
mov
add
cmpsl
popa
or
shlb
fdivl
lods
jg
add
arpl
adc
pop
xor
adc
fs
bound
psrld
stc
mov
mov
fidivs
mov
ret
pusha
cmc
frndint
vmread
cmpsb
pop
mov
ret
lret
sbb
sbb
adcb
mov
mov
arpl
cmp
sarl
cli
pop
jmp
fchs
daa
cli
popa
add
ss
hlt
addr16
bts
insl
mov
jl
and
fldcw
bound
dec
repnz
in
mov
aas
repz
cs
xor
hlt
insl
iret
sub
cmc
or
cli
out
divl
jge
mov
shufps
pop
cmc
popa
mov
and
mov
inc
jae
add
push
xor
inc
aaa
mov
ljmp
or
push
cld
clc
stos
push
inc
or
or
push
add
lret
and
push
arpl
push
mov
dec
sbb
aas
adc
cmp
call
cli
mov
pop
iret
xlat
push
out
sti
jo
sub
jg
add
dec
or
dec
adc
push
inc
mov
sbb
push
sub
inc
pop
add
adc
sbb
inc
pop
rcr
add
sub
fisubrs
sbb
sub
mov
sbb
mov
push
and
add
adc
inc
sbb
jmp
in
adc
fldl
jno
xor
das
cmc
pop
cld
lahf
xchg
dec
add
leave
add
sbb
sub
push
and
inc
loope
xchg
mov
xchg
loope
add
jg
outsl
testl
mov
mov
push
mov
pop
clc
mov
and
mov
outsb
fidivrs
adc
ret
div
orl
sub
jle
jp
mov
mov
xchg
das
lock
mov
jl
jg
pushf
inc
divl
mov
sbb
cmp
repnz
or
and
dec
pop
lahf
xchg
outsb
xor
push
push
lods
add
sbb
mov
test
mov
add
pop
addl
loop
inc
push
xchg
mov
add
incl
jg
decl
cmp
mov
decb
pop
test
push
mov
pop
mov
inc
jecxz
dec
pop
jp
dec
mov
sti
iret
dec
test
push
addb
jle
cmp
or
filds
pop
je
aad
push
pop
rol
jg
testl
jle
push
push
insl
lods
sbb
mov
push
sbb
repz
push
mov
js
mov
mov
dec
mov
repz
inc
jl
js
orb
or
lods
jae
inc
mov
mov
dec
or
mov
stc
lret
lret
push
mov
out
jbe
ss
outsl
aam
cltd
repz
and
sarl
out
pop
push
mov
outsb
pop
adc
shlb
loope
mov
or
or
and
imul
pop
fwait
call
fs
and
or
test
test
sub
or
outsb
outsl
jnp
out
dec
dec
cmpl
in
push
jb
jle
add
outsl
push
mov
adc
ljmp
sub
loop
scas
mov
mov
aad
mov
add
mov
add
jnp
mov
inc
cmpb
jle
lahf
sbb
add
or
jb
test
imul
xchg
cld
push
xor
adc
pop
sti
popf
aaa
pop
mov
in
test
push
test
je
ljmp
les
or
and
jmp
or
sahf
push
bound
js
test
aad
adc
xchg
mov
mov
insl
and
sar
push
or
jmp
pop
mov
sbb
fs
stc
pop
pop
mov
jo
add
add
test
xor
mov
mov
sub
mov
arpl
out
loopne
adc
jno
arpl
mov
mov
add
pop
push
loopne
sti
out
loope
cmp
rorl
cmpb
sub
pop
adc
add
xor
xor
jle
stc
xor
add
inc
xchg
sbb
ljmp
sti
neg
cld
cs
arpl
loope
jecxz
divl
add
pop
add
insb
dec
or
aam
inc
das
push
out
stc
inc
jg
jg
mov
sarl
jnp
mov
mov
mov
out
daa
test
mov
sub
cmpsb
mov
add
adc
mov
ficomps
pusha
cmpsb
das
testb
jg
pop
add
push
or
rcr
jle
rcrl
sti
mov
jl
cld
or
mov
shll
inc
js
sbbb
frstor
sbb
jecxz
bound
cmpl
dec
lods
popa
cs
xchg
or
mov
xor
push
cmc
jmp
jmp
sub
jnp
pop
leave
xchg
ja
pop
sbbl
outsb
fsubrs
cltd
xchg
cmp
aas
loope
jne
jle
add
inc
jle
and
iret
jmp
mov
add
and
aas
and
sahf
and
in
ljmp
mov
scas
fisttpll
test
and
into
push
pop
sti
jnp
or
in
add
push
ljmp
loop
clc
pop
jmp
sbb
or
pop
mov
sti
xchg
imulb
negl
sti
add
in
pop
add
fists
inc
mov
and
dec
insb
dec
cmp
das
mov
xchg
outsb
enter
popa
lcall
pop
or
and
mov
fildll
xchg
add
les
sub
in
insb
cmp
insl
lret
leave
dec
aaa
sbb
arpl
imul
in
sub
cmp
out
in
add
das
pusha
mov
jmp
imul
sbb
add
cli
js
add
mov
arpl
jg
dec
jno
push
or
mov
mov
lock
js
jecxz
push
mov
addl
add
xor
cmp
cmpsl
test
adc
aaa
mov
test
cmp
mov
insb
mov
push
lcall
jb
out
jle
clc
pushf
icebp
out
dec
inc
jge
std
mov
out
imull
fbld
push
push
in
arpl
cld
adc
cltd
out
jno
mov
insl
std
das
in
or
sub
call
add
xchg
leave
mov
jg
jmp
in
mov
sub
add
dec
sbbb
pop
test
addl
ss
or
fwait
jns
jmp
jg
std
jae
add
inc
cmp
fstl
leave
lret
push
dec
dec
in
mov
rcll
in
push
xor
outsb
mov
clc
cld
test
jae
mov
adc
idivb
mov
pop
jle
outsl
add
add
push
dec
push
fsubl
inc
cld
sbb
fsubrl
out
push
lcall
int3
add
mov
inc
or
movsb
add
lret
jmp
ret
aad
pop
or
cld
in
mov
fwait
mov
mov
popa
in
push
xchg
inc
push
sub
pop
loope
lods
imul
push
ficoml
xchg
cltd
jg
call
shl
mov
daa
scas
stos
arpl
cmp
fucom
test
ret
adc
out
shll
xor
outsl
cmp
out
and
xchg
das
and
jmp
pop
fidivrs
int3
xor
and
xchg
lret
in
daa
jae
popa
jne
jbe
jne
mov
fnstenv
je
ja
xor
in
jbe
jb
inc
pop
ja
in
mov
xlat
jno
jb
je
cs
lret
add
jb
jae
cmpsb
imul
xor
jae
test
push
adc
dec
shll
sub
in
fmull
shll
xchg
cs
fistl
mov
js
jae
pop
mov
js
daa
rcrl
divb
js
out
dec
jb
cs
lahf
loopne
cmp
jl
shll
addr16
dec
shll
mov
dec
rcl
push
jns
jecxz
fnstcw
pop
mov
shlb
mov
mov
sahf
cmp
shll
jl
jb
pop
outsb
dec
popa
je
jg
push
jne
mov
jae
or
sub
cmpsb
mov
in
imul
jl
xor
add
popf
add
lcall
xchg
adc
das
addr16
mov
cmc
je
or
js
ja
cmpsb
pop
cs
jae
imul
xchg
loope
pushf
sub
ljmp
mov
push
sbb
sub
xlat
pop
scas
dec
add
jecxz
add
adc
pop
inc
mov
and
lods
in
or
sbb
xlat
cmpsb
jmp
pop
xchg
add
lcall
and
leave
notb
push
imul
or
inc
push
xchg
add
cmp
fwait
andl
jae
adc
jb
mov
jae
insb
ja
jg
mov
nop
into
or
fldt
mov
jge
out
jb
fs
and
aaa
jae
rorl
mul
daa
and
xchg
pop
jb
pop
jns
roll
mov
fldenv
ja
gs
mov
fcomi
jne
push
adc
and
pop
inc
xchg
lret
in
mov
in
imulb
mov
lcall
mov
shll
mov
mov
cmp
addr16
adc
lcall
notl
in
fcmovnb
jb
mov
xchg
jo
cs
movsl
js
mov
jbe
out
mov
pop
jns
xchg
lcall
lcall
aas
jl
xor
mov
adc
ja
pop
adc
xor
shrl
jnp
mov
shll
divl
shll
mov
shll
fwait
xchg
test
xchg
daa
jno
jne
jne
xorb
shll
xor
out
xor
mov
sbb
aas
mov
fidivs
into
ss
in
jbe
push
arpl
imul
add
imul
adc
xor
push
jb
mov
mov
stos
push
and
fdivs
in
jne
jbe
insl
shlb
lcall
incb
outsl
dec
imul
push
pusha
addr16
mov
outsl
bound
cmp
inc
push
insb
adc
push
outsl
jmp
dec
pop
imul
pop
popa
cmp
push
insb
inc
outsl
addr16
in
jmp
ja
pusha
std
fs
dec
jno
or
dec
push
pusha
pop
arpl
arpl
cli
inc
inc
push
dec
cmp
je
imul
mov
mov
push
popa
emms
jmp
addr16
fs
fcmovnu
loopne
insb
pop
jno
ds
jb
insl
or
pop
pusha
imul
mov
inc
add
popa
pop
outsl
pop
insb
je
sub
imul
imul
push
inc
outsl
pop
pop
std
inc
std
in
jmp
pop
push
push
push
arpl
nop
std
push
outsb
pusha
outsl
mov
dec
cld
sti
out
cmp
fstpt
arpl
cmp
not
inc
pop
pop
push
push
jne
aas
push
ja
inc
gs
cmp
mov
inc
insb
insl
sti
in
in
push
jb
lahf
fs
addr16
pusha
insl
imul
test
dec
arpl
pop
popa
aas
cmp
pop
mov
imulb
inc
insb
imul
fildl
addr16
xor
sbb
arpl
dec
addr16
mov
mov
or
popa
imul
dec
push
insl
mov
fs
pop
outsb
jb
push
insb
mov
mov
mov
inc
jb
jb
xchg
outsl
pop
div
dec
arpl
pop
outsb
arpl
out
push
insl
pop
push
por
ljmp
imul
les
pop
pop
ds
insl
stc
jbe
outsb
insl
gs
jo
outsb
ds
stos
cld
cmp
dec
pop
test
add
cmp
out
test
addr16
insl
lods
movsl
cli
jg
imul
inc
aas
dec
dec
cmp
xor
sub
out
fisttpl
lsl
imul
outsl
dec
inc
shlb
push
insl
clc
outsb
inc
pop
dec
insl
imul
popa
ja
fsubs
sti
imul
jae
daa
xchg
sub
push
push
xor
out
adc
or
add
cmp
in
mov
jo
outsb
push
dec
fs
push
movb
addr16
iret
je,pn
push
std
cmp
addr16
cli
clc
insl
jmp
pop
push
dec
pop
movsb
cmp
mov
xor
imul
imul
dec
popa
pop
fs
cs
int
inc
insl
dec
mov
ret
pop
imul
test
imul
xor
jo
sar
outsb
add
sar
or
inc
dec
cs
daa
pop
ja
or
std
inc
pop
dec
jmp
mov
cld
cmp
or
ja
adc
iret
daa
test
insb
jmp
fs
insb
add
sbbb
shl
in
and
imul
fs
dec
aas
xchg
fidivrl
insb
imull
ds
out
outsl
mov
pop
fcomi
test
push
pop
outsb
insl
ja
inc
fistl
int3
cli
dec
jmp
test
mov
dec
pop
popa
pusha
popa
insb
fstpt
mov
and
cmp
or
mov
imul
jae
jmp
lock
pop
cmp
inc
sub
cmp
push
cmp
cmp
dec
inc
sub
sub
lods
std
dec
jecxz
pop
loop
in
dec
pusha
imul
dec
imul
std
dec
inc
fisubrl
cmp
es
push
cli
adc
pop
fimull
insb
dec
arpl
mov
push
imul
outsb
pop
lcall
pop
inc
inc
addr16
arpl
cmp
dec
insl
sbbl
pop
inc
imul
mov
popw
sti
sbb
outsl
sbb
push
jb
insl
jno
sub
inc
pop
fs
das
sbbl
punpckhwd
in
mov
insb
aam
push
incb
insl
jo
arpl
fdivrp
inc
inc
outsb
pop
cmp
std
cmp
or
lea
inc
mov
call
cmp
inc
out
add
cmp
sub
daa
ja
inc
outsb
cmp
cmp
cmp
sar
cmp
dec
lods
sub
dec
inc
cmp
pop
cmp
cmp
mov
mov
cmp
lods
cld
cmp
aaa
pop
imul
push
mov
push
ss
xchg
cs
xor
jno
cmp
aaa
push
cmp
push
cmp
adc
add
sub
arpl
jge
std
or
in
cmp
sub
daa
dec
outsb
aaa
cmp
pop
pop
jo
or
daa
mov
dec
cmp
pop
mov
pop
push
fs
cmp
outsb
jno
inc
push
insl
fcmovnu
test
xor
imul
pusha
mov
pop
loope
cmp
fs
push
cmp
aas
inc
and
xchg
std
pop
dec
gs
je
test
adc
add
pop
xchg
loope
jnp
imul
pop
xchg
insb
insl
sbb
inc
dec
mov
in
mov
mov
imul
push
mov
insl
push
sub
push
cmp
test
mov
cmpb
dec
cmpl
pop
push
jbe
lea
pop
add
xchg
push
pop
test
dec
jl
inc
cmp
cmp
in
fldt
in
or
or
push
cmp
pop
jo
aad
push
jmp
aas
xchg
cmp
sbb
sbb
add
jg
jo
sub
or
inc
cmp
ret
inc
cmp
cltd
cs
imul
inc
mov
mov
inc
cmp
imul
sub
addr16
leave
push
pushw
cltd
xor
mov
clc
lahf
rol
rorl
ds
push
std
push
jg
cld
fwait
jae
pop
test
cmp
cmp
cld
inc
dec
psubsw
xor
sub
sti
push
dec
sub
mov
push
icebp
mov
imul
inc
push
ret
data16
iret
ret
cmpsb
orl
clc
ss
cmp
mov
pop
inc
dec
inc
inc
xor
xchg
pop
jl
mov
stc
insl
push
arpl
or
lods
push
mov
outsb
or
jmp
gs
loope
push
insb
cmp
ret
cli
imul
mov
xchg
mov
flds
pop
jb
pop
jmp
inc
inc
add
cld
xchg
cmp
inc
cmp
insl
addl
inc
pop
iret
shlb
fs
pop
pop
das
inc
mov
mov
ja
mov
insl
xchg
jmp
je
or
push
test
add
pop
call
add
dec
dec
test
std
pop
pop
aas
push
jae
pusha
mov
std
push
or
adc
outsl
fldt
insb
push
and
outsl
pop
pop
push
int
insl
pop
and
sti
dec
popa
mov
or
pop
lahf
push
push
clc
cld
pop
xor
jbe
cld
mov
sar
insl
or
or
insl
xchg
aam
mov
pop
pop
jne
cmp
mov
insb
mov
rcll
add
adc
js
in
mov
js
mov
shrl
mov
push
jns
mov
push
xchg
jl
mov
lret
insl
mov
in
adc
sbb
imul
mov
clc
outsl
aam
icebp
add
std
cli
jae
ja
cmp
adc
cld
sti
add
push
std
insb
jae
push
push
cmp
dec
loopne
mov
bound
sub
cmp
popa
adcl
jmp
fsubrs
shll
pop
sbb
or
insb
arpl
sub
cmp
push
sbb
bound
push
cmp
adc
push
nop
mov
ret
dec
inc
je
jo
lock
lea
cs
dec
mov
imulb
aas
pushf
rol
mov
jg
imul
sbb
fwait
bound
rolb
ss
sti
push
or
leave
out
clc
push
mov
jo
imul
sub
sub
pop
xor
cmp
or
fbstp
dec
cmp
adc
pop
lcall
insb
shlb
adc
mov
movsl
test
dec
inc
sti
dec
jb
icebp
push
or
jb
sbb
xor
jno
outsb
aas
pusha
mov
adc
inc
and
and
or
push
inc
lret
or
cmp
inc
inc
pop
shrl
dec
aas
outsl
ljmp
insl
insl
jae
imul
daa
jmp
rorl
push
outsl
outsb
cmp
pop
pop
xor
mov
sbb
mov
and
insl
das
pop
dec
push
insl
xor
xor
outsl
xor
jno
imul
adc
jmp
mov
dec
push
sub
pop
data16
mov
jae
pop
jae
xchg
mov
insl
dec
mov
mov
cmp
xlat
sti
push
or
mov
imul
adc
fisubrs
andl
pop
mov
pop
dec
sbb
mov
pusha
mov
out
jo
insl
inc
cmp
inc
dec
mov
daa
fs
pop
mov
jmp
ja
sub
popa
sti
outsb
clc
ret
addr16
mov
mov
jo
lock
mov
mov
push
and
gs
pop
and
jo
pop
outsb
fildll
bound
cli
imul
rcll
mov
xchg
movb
aas
dec
mov
pop
pop
dec
arpl
lea
daa
xorl
sbb
xor
imul
ds
push
insl
pop
bound
movsb
pop
push
sub
push
push
dec
dec
sbbb
addr16
dec
dec
lret
hlt
push
outsl
push
push
dec
sbb
sub
push
sub
jne
mov
push
inc
dec
cmp
test
inc
sti
dec
test
and
sub
js
mov
inc
push
pop
and
imul
out
lods
xor
pop
in
dec
dec
inc
fistpl
hlt
std
mov
or
push
add
ja
pop
movsl
fstpt
inc
push
sbb
sbb
push
inc
sub
es
add
pop
mov
sub
int
outsl
sub
in
sub
and
pop
mov
std
es
aas
pop
pop
subl
incl
jbe
sub
dec
dec
and
rcrb
int
xor
pop
add
mov
push
and
pop
mov
push
jg
sub
and
test
mov
xor
pop
cmp
loope
imul
addr16
rcr
adc
imul
cmp
mov
shlb
sbb
std
das
mov
sbb
push
dec
sub
daa
sub
push
cmp
int
xor
lods
sub
filds
daa
sbb
sub
add
imul
pop
lods
pop
mov
xor
js
sub
sbb
xchg
push
std
popa
arpl
xor
roll
jno
pop
add
test
pop
xor
sub
sub
push
xor
and
pop
pop
push
or
sub
and
sub
das
imul
pop
pop
xor
jae
imul
and
gs
arpl
push
fisttpl
sub
push
lods
shrl
dec
test
addl
mov
xor
es
and
cmp
cs
mov
frstor
xor
adc
mov
shrb
insl
es
adc
add
lret
arpl
sbb
mov
xor
das
sub
pop
jbe
dec
das
pop
jbe
int3
rcll
pop
mov
xorl
je
outsl
xor
push
mov
sub
in
mov
pop
pop
xor
dec
xor
test
pop
xorb
imul
sub
xor
arpl
pop
shlb
sbb
dec
jne
pusha
cmp
cld
pop
or
inc
fs
lret
pop
in
in
fwait
xorl
sub
daa
and
push
dec
and
sbb
cmp
and
sub
mov
pusha
sub
cmp
aaa
mov
jecxz
pop
mov
sub
pop
mov
cmpsl
jns
cs
mov
inc
sbb
mov
sub
mov
lods
ss
and
xor
sub
imul
ss
push
xlat
and
xchg
jo
sbb
inc
imul
sub
out
sub
push
ficoml
ds
push
scas
insl
ja
insl
inc
mov
ja
sub
mov
fldcw
shll
push
cmp
repz
dec
imul
push
dec
cmp
popa
insb
fimuls
subl
pop
dec
adc
inc
add
mov
push
inc
jo
fisubrs
pusha
cmp
mov
inc
jmp
test
or
outsl
arpl
xchg
mov
lods
push
into
das
jno
lahf
aas
das
mov
not
cmp
arpl
ds
jo
aas
cli
pop
lea
repnz
inc
xor
arpl
cmp
scas
or
pusha
push
push
daa
mov
adc
mov
cmp
pop
inc
dec
pop
dec
ja
mov
jbe
inc
adc
dec
lea
rcrb
xchg
push
push
das
lock
inc
aaa
imul
sub
sbb
add
xlat
call
test
fidivl
push
push
dec
jmp
or
imul
ja
inc
push
push
lret
mov
sub
cs
arpl
aad
aas
push
scas
mov
dec
daa
aad
xor
xchg
cli
xor
inc
inc
inc
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
push
or
push
push
adc
adc
lahf
push
and
xchg
or
jno
jb
jo
arpl
das
jne
inc
dec
inc
sub
pop
sub
cltd
arpl
adc
pop
xchg
or
xor
pop
cmp
or
and
add
arpl
test
push
or
arpl
icebp
inc
outsb
adc
inc
ds
pop
test
cmp
inc
and
insb
inc
testb
mov
mov
add
daa
inc
or
ss
pop
pop
cmp
dec
jae
daa
in
movsl
mov
inc
addr16
out
pusha
xor
jb
inc
stc
push
aas
sub
pop
mov
fidivrl
pop
push
popa
jo
jmp
or
and
inc
cmp
cmp
aaa
pop
lods
dec
shr
iret
insl
aaa
stc
add
or
lea
lea
jg
mov
ret
mov
add
stc
mov
pop
mov
arpl
lods
jmp
and
sub
dec
sub
lds
cmp
xchg
and
push
sub
push
repnz
sbb
xor
fsubl
mov
adc
imul
orl
sub
dec
xchg
out
bound
stc
pop
fnsave
addr16
scas
dec
mov
cmp
cmp
rorb
outsb
and
push
stos
dec
leave
insb
ds
mov
mov
dec
and
pop
mov
icebp
scas
mov
add
pop
adc
xor
outsb
mov
pusha
jne
sub
cs
insl
push
mov
je
or
push
pop
and
mov
or
mov
inc
sub
sub
sub
sahf
sub
push
and
dec
sub
cs
sub
test
sti
ljmp
test
sub
cmp
inc
sub
test
scas
sub
fsubrl
jg
xor
sub
inc
xorl
subb
sub
ljmp
les
shrb
shll
in
sub
push
sub
xor
cs
xor
das
and
xor
mov
dec
dec
sub
xor
xor
imull
push
sbb
icebp
mov
xor
das
cld
xor
xor
push
xor
jg
lods
push
and
adc
xor
xor
mov
ss
xor
xor
xor
push
xor
scas
xor
xor
mov
and
xorl
daa
aaa
cld
aaa
dec
xor
fidivl
push
or
xorl
cmp
cmp
sarb
out
idivb
clc
pop
std
pop
cli
ss
or
int3
sub
cmp
pop
xor
fildll
xor
fistpll
ljmp
rclb
xor
inc
cmp
arpl
cmp
je
cmp
cmp
cmp
ss
or
dec
cmp
xchg
xchg
cmp
std
test
outsl
insl
sub
sub
aas
xor
sub
ljmp
sub
xor
dec
xor
push
stos
xor
xor
cs
xor
in
and
xor
xor
xor
dec
xor
imul
mov
lods
xor
das
into
xor
xor
cld
mov
xor
lcall
xor
xor
adc
div
ljmp
pop
cmp
dec
xor
stos
repnz
movsl
xor
in
xor
aaa
inc
ss
xor
aaa
int3
fnsave
fistpll
jecxz
ljmp
cmp
in
ss
cmp
jmp
cmp
xor
test
lahf
cmp
xor
jg
push
mov
pop
cmp
ss
cmp
sbb
mov
pushl
cmp
aaa
sub
data16
cmp
cmp
cmp
aaa
sub
sub
aaa
lock
dec
sub
arpl
subb
nop
sub
sub
mov
sub
sub
imulb
adc
push
icebp
sub
pop
sub
sub
sub
pop
mov
sub
sub
add
pop
sub
adc
sub
lea
mov
sub
sub
ja,pn
sahf
sub
lock
ljmp
adc
dec
sub
gs
pop
shll
jmp
wrmsr
push
das
jp
push
mov
xor
das
add
dec
xor
insl
and
lea
cmpsl
xor
dec
sub
xorl
jno
inc
xor
xor
xor
xor
fildll
mov
loope
xor
xor
inc
ss
xor
in
decl
dec
aaa
jns
cltd
ss
xor
xor
pop
clc
outsl
cld
pushl
cmp
push
outsb
aaa
test
cmp
ret
cmp
fildll
popa
sarl
cmp
outsl
cld
jg
cmp
xor
xchg
cmp
aaa
xorl
xor
stc
cmp
cmp
cmp
lods
cmp
cmp
cmp
cmp
cmp
aaa
push
hlt
ljmp
cmp
cmp
ja
jge
xchg
mov
lcall
ror
cmp
stc
add
inc
push
sub
jno
sub
sub
sub
ljmp
sti
sub
and
sub
pop
sub
sub
sub
fstpt
cmc
sub
das
sbb
lcall
sub
push
subl
sub
mov
sub
pop
sub
push
popf
push
push
or
test
lea
fildll
or
xor
cmp
push
das
arpl
mov
mov
mov
iret
jge
xor
insb
cld
and
xor
int
repnz
ljmp
std
xor
xor
fs
jno
jbe
jnp
nop
cmp
cmp
cmp
aaa
shll
cmp
ss
call
and
mov
lds
cmp
push
js
idivl
pop
pop
cmp
aaa
dec
cmp
mov
jne
ss
cmp
int
cli
pop
mov
push
ss
ret
xor
lods
ss
filds
mov
xor
jmp
xor
adc
das
cld
mov
inc
xor
xor
ss
fdivs
lock
cmc
xor
aaa
or
movsl
sbb
xor
das
xor
jbe
imulb
aaa
cltd
xor
dec
fisttpll
push
mov
fbstp
jmp
pop
xor
sub
xchg
jbe
pushl
cmp
aaa
leave
xor
cmp
aaa
sbb
shrb
jg
mov
inc
cmp
push
cmp
popa
cmp
jo
jae
ja
mov
jo
sti
decl
cmp
cmp
dec
cmp
sub
cmp
mov
pop
cmp
outsl
jo
sub
lea
outsl
cmp
repz
repz
incb
cmpb
aaa
test
lret
xor
mov
hlt
out
cmp
pop
push
pop
pop
mov
js
pop
sub
decb
pop
sub
hlt
ljmp
jnp,pn
mov
cmpsl
das
mov
iret
xlat
sub
sbb
push
or
outsl
xor
xchg
das
mov
dec
ljmp
sub
sub
and
adc
and
gs
gs
outsb
je
insb
imul
sbb
push
dec
dec
pop
fildll
je
popa
jb
adc
gs
dec
imul
push
imul
sub
dec
outsl
push
outsl
popa
insl
sbb
arpl
add
pop
cs
adc
jbe
fbld
add
and
and
jo
jae
arpl
repnz
adc
outsb
imul
jae
cmp
sub
popa
bound
adc
jo
fstpt
andb
fsubrl
sti
jbe
jns
or
and
mov
jo
adc
push
jb
jns
xor
in
xor
sub
push
gs
add
arpl
jb
outsb
cmp
mov
and
outsl
outsb
imul
jae
pop
clc
lock
sbb
imul
jnp
adc
popa
gs
jg
bound
out
pop
jo
inc
gs
popa
push
ds
pop
inc
js
sti
fwait
insl
adc
push
push
adc
jns
dec
jmp
jo
adc
fs
imul
insb
andl
jne
dec
inc
sub
or
xor
push
insl
pop
lods
inc
inc
mov
lods
inc
cmovb
jae
add
cmovno
div
fisubrs
or
imul
xchg
lods
push
inc
push
or
dec
cvtps2pi
sbb
dec
jae
pop
sub
outsb
xor
jae
lds
movd
or
cmp
insl
jbe
inc
jmp
fidivrs
push
and
fs
daa
push
cmp
imul
insb
sti
imul
imul
dec
insl
imul
popa
jnp
jae
mov
push
imul
in
lcall
aaa
jo
xor
push
push
fs
cs
add
sbb
icebp
pop
add
in
sti
xor
xor
add
adc
xor
mov
enter
adc
daa
add
ja
outsl
add
outsb
aas
imul
add
mov
add
sbb
add
pusha
inc
repz
repnz
in
or
outsb
adc
add
popa
insl
ja
psubd
and
add
xchg
and
inc
and
clc
cmp
mov
es
and
sbb
add
add
aam
xor
repnz
rolb
lcall
push
in
mov
mov
and
add
int3
lret
mov
and
xchg
out
and
incl
lds
jo
sbb
addr16
call
sub
sbbl
fmull
in
mov
and
pop
push
repnz
jle
xchg
loop
mov
int3
adc
adc
inc
adc
decl
or
add
pop
push
add
test
add
and
out
add
push
inc
popa
or
xchg
pop
add
incl
rolb
nop
add
add
sub
xchg
das
sub
cltd
shlb
jns
add
repz
add
add
add
add
inc
jmp
imul
jg
sub
fdivr
decl
add
mov
add
add
push
add
jb
jbe
test
cs
sub
add
add
add
addb
push
adc
das
fwait
mov
gs
je
inc
imul
popa
jo
imul
gs
pushw
push
or
sarb
jne
push
and
push
imul
inc
gs
push
imul
pop
mov
ja
jo
insb
outsl
jae
dec
popa
outsb
fs
neg
or
sub
outsl
jbe
mov
js
and
jo
dec
popa
insl
inc
inc
gs
mov
sbb
test
push
fsts
cmp
outsb
or
mov
fs
outsl
dec
push
pop
sub
dec
jae
int
mov
dec
sbb
jb
xchg
cmp
mov
mov
adc
inc
mov
xchg
push
jns
and
gs
outsb
jnp
push
xchg
jae
outsl
outsb
rcr
popa
mov
jb
dec
pusha
jb
jns
mov
fldl
je
adc
pop
rclb
outsl
insb
pop
fsubr
add
xor
jo
outsl
je
dec
or
or
push
insb
out
pop
in
cli
lea
bound
sbb
adc
jg
test
mov
jmp
adc
pop
adc
pop
or
mov
call
leave
adc
mov
mov
mov
or
dec
adc
or
and
or
incl
mov
jp
call
and
incl
sbb
ljmp
sub
or
and
inc
sub
jg
mov
push
push
jns
aaa
xor
jmp
mov
adc
xchg
sbb
xchg
mov
sbb
dec
cmp
mov
bound
push
adc
lock
insl
lret
mov
pop
or
icebp
adc
add
mov
lret
mov
test
jno
mov
fisttpl
cmpsb
pop
push
push
dec
mov
mov
cmp
movsl
dec
mov
mov
adc
mov
je
or
push
andl
rcr
mov
in
or
out
mov
inc
das
dec
sbb
mov
sub
xor
add
pop
inc
std
xor
jo
gs
jo
pop
push
fnsave
adc
pop
je
inc
mov
adc
or
mov
mov
lods
mov
push
sub
ds
outsl
xor
pop
push
mov
add
mov
jb
jae
arpl
fcmovb
pop
arpl
je
subb
ss
jae
xchg
or
insb
or
pop
out
cs
insl
bound
scas
ja
or
jbe
push
sbb
outsb
arpl
mov
aas
lods
inc
inc
js
inc
jb
dec
aam
mov
sub
data16
insl
mov
fisubs
pop
push
jae
sbb
popa
mov
push
xor
add
sub
sarb
xchg
movsl
dec
xor
inc
jo
fs
mov
ja
or
out
inc
aaa
jne
sbb
les
fs
cmp
dec
fs
pop
dec
or
dec
adc
xlat
fisubl
sub
or
inc
ds
push
outsl
mov
xchg
adc
push
xor
popf
cmp
jb
popa
pusha
out
adc
inc
sbb
mov
push
outsb
or
jo
inc
test
xchg
jns
bound
xor
inc
or
aas
andb
add
add
add
pop
mov
setno
sidtl
add
mov
lock
cs
adc
inc
add
mov
cmp
add
xor
sbb
add
adc
mov
dec
ss
aaa
test
js
and
and
pusha
pop
push
js,pn
jb
nop
xor
xchg
add
jb
popa
mul
mov
add
inc
dec
inc
imul
es
rcrl
lret
pop
daa
rorb
dec
fidivs
jmp
dec
lock
iret
ficomps
add
add
add
add
add
add
incl
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
