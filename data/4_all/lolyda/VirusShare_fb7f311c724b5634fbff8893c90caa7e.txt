mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
cwtl
jno
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
sbb
pusha
scas
sti
push
push
push
push
adc
xchg
mov
sarl
rclb
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
test
insl
das
and
sarb
gs
movl
pop
sbb
ja
add
mov
or
cld
mov
pop
mov
daa
ret
jmp
fldz
cmp
add
dec
jecxz
add
fsubrl
pop
cmp
push
pop
ret
pop
aas
fdivr
in
sbb
ljmp
adc
push
mov
sub
cmpsl
in
jl
mov
inc
clc
or
push
sahf
adc
mov
mov
mov
movsb
jnp
dec
icebp
pop
mov
ja
adc
in
aas
mov
dec
std
mov
je
mov
push
add
or
mulb
xor
xchg
fdivrp
mov
shr
or
jne
and
mov
jnp
call
or
dec
jbe
out
push
ds
and
xchg
push
jbe
hlt
xor
push
sbb
clc
orl
popa
loope
pop
repnz
in
ret
sbb
sub
outsb
fwait
xor
adc
jle
sub
add
lahf
in
add
sbb
test
jne
sbb
lea
mov
test
shr
pusha
xor
in
sarl
pushl
cmpl
lret
push
pop
cmp
sbb
neg
add
mov
ljmp
mov
insb
mov
lds
inc
pop
pop
and
fdivl
xor
jno
test
push
fbstp
out
sub
lock
inc
push
push
mov
mov
sbb
ss
adc
or
test
mov
mov
cmp
jne
test
mov
or
popf
push
sbb
movb
jne
jecxz
add
fdivr
xor
inc
inc
add
dec
aaa
not
jl
mov
jg
or
rep
stos
push
cmp
mov
mov
iret
push
loope
add
inc
mov
mov
push
scas
not
sub
stos
rorl
cmp
fidivrl
shr
rep
xor
loope
rep
out
push
scas
and
in
cs
out
lea
jl
sbb
jo
push
sbb
aas
adc
sub
jne
push
sub
inc
xor
pushf
imul
adc
jg
pusha
outsl
subl
mov
test
jnp
mov
and
sub
pop
sub
lods
push
sub
movq
pushf
test
ret
inc
or
jae
mov
push
push
stc
jge
mov
jge
pushl
add
je
mov
inc
mov
inc
add
add
adc
fadd
xchg
std
mov
xor
pop
jne
adc
xchg
sbbl
pop
ret
out
in
out
je
mov
push
push
jecxz
adc
aad
popa
mov
cld
adc
lret
adc
mov
mov
inc
push
or
cmp
fs
or
fs
fsubs
movsl
arpl
push
jbe
shrl
pop
sub
insl
mov
lahf
adc
cmpl
add
fcompp
push
fucomp
inc
dec
into
sbb
rorl
out
arpl
and
adc
sti
and
stos
ds
jo
ja
push
sub
mov
ret
fcom
in
push
add
and
push
push
shrb
push
sub
addb
and
xchg
add
add
cld
or
sbb
jl
std
or
add
push
xor
std
push
push
pop
jecxz
je
aaa
sub
fmull
mov
or
and
movsl
pop
sub
cmp
push
mov
fists
dec
push
sub
or
mov
mov
jne
stc
cmp
mov
or
fstpt
notb
int3
aad
sub
iret
jo
daa
cmp
sbb
adc
fldl
aad
jle
add
xlat
outsb
dec
dec
inc
incl
lea
outsl
fs
sub
jo
inc
or
and
gs
jmp
cmp
xchg
mov
ret
cs
cmp
mov
inc
jnp
push
dec
inc
shrb
ss
movsb
dec
outsb
sub
or
xchg
lea
push
pop
insb
into
push
push
dec
dec
outsb
popa
stc
push
movsb
push
je
dec
sbb
push
lds
add
loope
jne
jbe
xchg
mov
clc
mov
inc
sbb
or
pushl
push
test
mov
int
mov
jg
add
lea
pop
push
mov
hlt
pop
push
call
adc
in
push
stos
hlt
inc
add
push
call
dec
sub
push
jg
cltd
cmp
add
out
ret
dec
add
repnz
dec
ret
xor
enter
sbb
cld
add
and
add
jge
pushf
mov
dec
dec
pop
jle
stc
lcall
js
jo
push
adc
pop
pop
sbb
bound
cmp
and
lods
outsb
sub
push
jne
xchg
add
or
push
fs
jb
cwtl
and
push
add
enter
push
hlt
pusha
add
nop
frstor
lock
cmp
xchg
in
cmc
out
pop
ret
sarl
push
lea
push
push
cmpsb
pop
ret
fsubl
imul
adc
je
push
gs
lods
cmp
push
push
cmp
push
push
call
or
leave
adc
data16
in
adc
and
or
out
xchg
sbb
or
or
enter
enter
sti
inc
push
lods
jle
cmp
outsb
mov
mov
dec
jns
add
xlat
outsb
cmp
cmc
push
mov
inc
dec
jne
clc
or
leave
mov
mov
out
jmp
fmull
mov
mov
iret
mov
sub
inc
sub
out
mov
cmp
cmp
out
sub
mull
mov
sbb
js
adc
cmp
jb
cmpsl
fsubl
jle
ret
sub
bound
mov
adc
and
out
mov
lret
mov
rcrl
push
inc
and
cmpsb
sbb
and
push
cmpsb
test
das
adc
cmp
and
in
push
sbb
or
jecxz
lahf
or
add
xor
push
cmp
push
fmull
inc
fdivp
insb
xchg
daa
push
dec
sbb
enter
imul
pop
sbb
es
xor
add
sbbb
iret
xchg
pop
xor
cmp
xchg
adc
js
sbb
movb
add
mov
xor
adc
movsb
sti
or
les
xor
or
dec
stos
adc
and
sbb
and
sbb
rclb
iret
adc
mov
mulb
pop
jb
push
iret
xor
and
int
aaa
xchg
push
scas
mov
iret
and
push
int3
push
mov
cmp
and
andb
xor
ljmp
and
dec
ss
or
dec
push
jp
xlat
push
dec
xor
lods
push
pop
sbb
dec
and
push
mov
ja
push
push
test
dec
mov
mov
lahf
push
rorb
mov
mov
shrd
fsubrl
push
rol
jecxz
cmp
shr
fs
inc
lcall
and
push
dec
movl
inc
loopne
mov
fstl
cli
or
or
xchg
xor
or
sub
fsubl
adc
imul
cmp
adc
pop
aaa
shlb
dec
loop
stc
notb
dec
push
sbb
push
imul
mov
in
stos
xchg
dec
adc
insb
jne
inc
or
adc
add
cmp
jb
and
pop
or
nop
sub
repnz
and
rorb
iret
adc
repnz
cmpxchg
mov
js
popa
sub
pop
sti
imul
jnp
pop
mov
sbb
mov
push
adc
mov
vpaddusb
xchg
dec
or
stc
adc
faddl
test
cwtl
aas
aad
sbb
sub
test
fwait
jl
pop
outsb
xor
cmp
jne
sbb
or
or
dec
fstpl
inc
insb
js
mov
negb
lods
sub
add
add
dec
ss
xchg
mov
dec
outsb
push
xor
lock
sub
dec
add
add
jl
xor
xchg
push
sbb
or
add
pop
cmpsl
cmpsl
mov
mov
mov
fstl
push
xchg
pushf
js
shlb
push
lods
add
in
push
mov
mov
adc
push
cmp
jo
adc
loop
arpl
lock
fucomip
fstl
popl
or
jmp
push
or
push
leave
je
fs
popa
pusha
nop
and
enter
lds
nop
out
rcll
xor
scas
fisttpl
dec
and
insb
xor
inc
inc
inc
data16
mov
js
add
adc
js
pop
shll
pop
lock
imul
jge
xchg
add
push
call
jmp
and
lret
and
popa
inc
xchg
rclb
rorb
mov
cmp
mov
cmp
call
enter
cwtl
and
push
pop
or
xchg
adc
faddl
out
fcomip
mov
fsubl
mov
push
mov
adc
arpl
lret
roll
negl
adc
adc
sub
jle
mov
js
je
fnstsw
jo
inc
leave
mov
push
and
jb
int3
notb
push
jp
xchg
xor
dec
dec
sub
hlt
pusha
xchg
fsubs
fmulp
mov
adc
cmpl
push
xchg
sarl
insb
sub
jg
jnp
int
into
pop
and
push
push
push
and
sub
sbb
and
sbb
insb
in
sbbl
daa
mov
mov
push
in
push
fdiv
clc
dec
pusha
js
scas
push
ljmp
sarb
sub
sub
inc
cltd
sub
inc
pusha
test
mov
clc
out
sbb
fwait
adc
dec
int
push
fisubrs
hlt
pop
pop
inc
mov
mov
fs
mov
or
push
testb
pop
repnz
push
mov
mov
rclb
and
nop
mov
adc
sbb
clc
test
je
clc
rolb
sbb
inc
stos
or
call
mov
xchg
pushf
cmp
cmp
lods
adc
pop
add
jl
dec
enter
inc
mov
leave
sarl
add
movsb
mov
or
cmp
xorl
xor
xor
or
push
leave
pop
sbb
or
cmp
sbb
leave
xor
xor
and
and
inc
or
cmpsl
cmp
sbb
jmp
cld
rorl
sbb
add
in
shrl
pop
fadds
enter
xchg
push
lock
out
int3
test
inc
fldenv
pop
and
ror
jp
mov
in
cmp
lods
lahf
push
add
jns
dec
pusha
cli
paddb
mov
js
sbb
rorb
dec
mov
dec
cmp
jbe
addr16
out
cmp
cmp
add
or
mov
dec
adc
daa
rol
loopne
call
push
outsb
and
jb
push
jns
ljmp
ret
mov
pop
sub
mov
fs
cmp
jnp
push
add
lds
test
cmp
push
lcall
xor
int
mov
arpl
sub
mov
arpl
lods
stos
orb
or
xor
fimull
mov
sti
outsb
lods
mov
adcb
je
or
out
add
repz
xor
insb
inc
ljmp
test
movb
inc
sbb
into
cmc
sub
test
dec
invd
mov
push
ficoml
pop
sti
mov
push
cwtl
mov
dec
popf
in
test
js
sbbl
or
pop
repnz
or
push
inc
iret
icebp
push
jo
loop
jecxz
inc
push
push
cmp
xor
add
add
andb
or
sbb
out
push
lock
add
push
ljmp
sbb
aad
adc
mov
je
push
jmp
lods
add
push
inc
insl
cmp
push
or
leave
jae
daa
jne
pop
push
add
adc
cltd
idiv
mov
sub
mov
cmp
jb
dec
pop
outsb
aas
addb
add
testb
pop
or
mov
inc
jmp
mov
fmuls
das
int3
enter
mov
sarb
mov
test
mov
mov
mov
jl
mov
push
fs
pop
pop
mov
inc
mov
xor
mov
mov
adc
mov
inc
out
stc
jl
inc
pushf
inc
mov
cmp
iret
test
lods
inc
mov
mov
mov
enter
mov
hlt
inc
aam
sbb
sbb
loopne
call
sbb
add
out
add
cmpl
xchg
sbb
sub
ret
push
jne
push
pop
sbb
fisubs
pop
add
ret
push
xor
add
jo
ss
in
insb
call
mov
push
xor
mov
jl
pop
cld
ljmp
orl
into
call
or
or
adc
mov
cmpsb
jg
loopne
xchg
sarl
sbb
popf
int
shrb
sbb
adc
adc
mov
sarb
inc
xchg
in
out
mov
add
pushf
push
add
push
lcall
xor
mov
fcomip
ja
jne
cmpb
jne
inc
or
add
or
mov
and
jbe
aam
dec
movsb
fistpl
repnz
inc
testb
in
movzwl
jmp
sub
mov
jbe
jmp
push
pop
pusha
push
push
and
fstpt
cwtl
xor
inc
in
mov
mov
mov
mov
stos
mov
mov
cs
enter
sbb
push
add
fs
fsub
ret
and
fmul
add
add
mov
add
loop
mov
test
mov
mov
sbb
shlb
push
push
xor
mov
pop
enter
xor
jo
jbe
mov
mov
inc
out
push
cld
lea
adc
mov
lds
jbe
ds
add
and
aaa
dec
pusha
pop
lea
add
dec
cmp
lea
and
mov
ret
cwtl
pop
add
repnz
push
sub
add
cmp
dec
add
mov
mov
insb
pop
dec
ds
mov
lcall
dec
add
xor
shll
xor
shll
call
dec
shll
adcb
int3
mov
sbb
xchg
lret
in
in
add
pop
or
or
sbb
jb
pop
movsl
push
leave
adc
scas
jmp
mov
inc
sbb
pop
or
and
mov
jp
nop
xor
sub
or
and
inc
sbb
comiss
cmp
or
sub
addr16
sub
mov
pop
jns
aaa
adc
addr16
por
pop
shlb
xchg
pop
pop
xlat
mov
daa
push
addl
xlat
jne
cmp
lcall
inc
push
adc
pop
or
icebp
not
jne
roll
mulb
pop
mov
inc
add
mov
pop
push
xor
addr16
movsl
imul
mov
adc
fldcw
scas
inc
adcl
push
sar
or
xor
sti
inc
aas
dec
gs
jo
sbb
push
hlt
dec
lcall
mov
xchg
insb
lcall
inc
dec
pop
ss
mov
xor
push
dec
adc
sub
ds
lcall
dec
add
cmpsb
imul
shrl
cmpsb
sbb
clc
dec
in
scas
imul
mov
cmpsb
add
push
mov
sahf
pop
cs
add
adc
inc
adc
pop
inc
loope
in
into
add
push
xor
lods
fnstcw
shl
pop
rclb
cmpsb
imul
dec
xlat
sub
scas
rclb
test
add
nop
mov
xlat
jo
jb
add
dec
shll
inc
cmp
dec
shll
xor
and
shlb
sbb
or
nop
rep
mov
sbb
mov
add
loopne
pop
lldt
pusha
daa
aaa
lret
sub
das
and
mov
mov
mov
pop
ja
repnz
stos
aas
movsb
add
cwtl
xchg
mov
sarl
outsb
push
xor
aaa
stos
inc
add
xor
shll
dec
inc
ds
xor
shll
sub
and
xor
xor
adc
or
xlat
sbb
nop
mov
cmp
cmpsl
add
frndint
and
add
inc
inc
xor
fildll
push
ss
daa
inc
xor
nop
orb
nop
mov
xor
leave
mov
cmpb
dec
cld
in
mov
loop
cltd
dec
sub
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
bound
cltd
dec
incl
push
inc
push
dec
xor
cs
insb
or
adc
rclb
inc
xor
addr16
push
push
into
not
into
mov
clc
std
stc
cli
cld
idiv
std
add
clc
cmp
stc
jg
test
out
sbb
or
mov
lcall
enter
sbb
pusha
outsb
push
push
pop
imul
insb
mov
ljmp
pop
popa
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
rolb
jmp
push
pusha
cltd
lea
mov
pop
add
mov
pop
add
ja
mov
pop
adc
adc
lds
fs
add
fistpll
mov
mov
mov
mov
xor
dec
mov
pop
dec
ret
int3
bound
inc
inc
inc
cli
sbb
mov
ret
adc
sti
or
push
out
dec
cwtl
add
popf
cmpsb
cmp
pop
or
xor
rorb
pop
pop
inc
dec
pop
add
add
or
xchg
push
xchg
pop
and
mov
cmp
pop
and
jnp
fstpl
mov
daa
add
sub
jae
arpl
dec
inc
dec
add
shll
fildll
outsb
pop
pop
jb
daa
orb
bswap
out
pop
dec
push
sbb
sub
outsl
pop
jno
shlb
jbe
daa
jnp
bound
dec
fs
insl
arpl
pop
daa
ljmp
ss
insl
pop
lahf
or
test
imul
into
or
in
push
in
add
js
stc
notl
dec
push
push
xchg
cli
out
fists
cmpsl
pop
cmpsb
test
sbbb
mov
xchg
cli
idiv
dec
adc
or
push
dec
mov
cld
pop
jle
add
xor
pop
inc
cli
adc
push
sti
call
jg
push
cmp
clc
add
mov
sub
or
mov
cli
rorb
dec
gs
cmp
maskmovq
testl
xchg
and
arpl
jg
cld
iret
pop
pop
lds
jmp
pusha
fdivrp
dec
push
push
add
mov
sti
pushl
mov
lock
jp
fdivs
clc
gs
sub
clc
stc
arpl
xchg
fcmovnu
jmp
arpl
pop
mov
aam
cld
clc
dec
adc
arpl
dec
pop
jl
test
xchg
pop
mov
imulb
add
js
popa
sub
push
std
into
aad
mov
ds
sbb
dec
mov
fisubl
inc
arpl
sbb
mov
jns
fldt
testl
cmc
add
in
inc
cs
push
push
cmpb
ret
in
es
shr
call
popa
out
dec
dec
mov
push
xor
dec
cmc
cmp
jle
loop
inc
mov
sbb
push
push
dec
fldt
mov
aad
ljmp
jge
adc
inc
rorl
dec
dec
xchg
test
push
cld
outsb
mulb
icebp
add
loopne
inc
mov
in
push
push
push
xor
mov
out
cld
cmp
cs
testl
cld
stc
sbb
or
notl
xchg
pop
and
das
pop
fsubr
loop
inc
cmpl
outsl
jg
dec
pop
in
xor
dec
arpl
or
ljmp
inc
pusha
adc
pop
pop
ret
xchg
dec
dec
addl
aas
notl
pop
outsb
clc
cli
imull
gs
repz
inc
pushf
push
push
ret
mov
dec
loope
sbbl
test
hlt
dec
mov
pop
cli
sub
adc
cmc
stc
test
dec
pop
xchg
add
sbb
push
jge
outsl
push
divb
mov
inc
mov
lds
sbb
or
movsb
sub
in
ljmp
inc
icebp
mov
idiv
or
orl
cs
testb
inc
testb
inc
xchg
aaa
std
outsl
and
jo
push
dec
cli
rorb
dec
arpl
clc
mov
mov
jecxz
and
testw
pop
push
ss
inc
sub
call
push
cld
push
mov
xchg
test
push
sti
call
out
fidivl
arpl
push
inc
repz
cmpl
adc
xor
insl
push
in
pop
sti
cld
add
pop
sbb
adc
decl
mov
mov
add
rclb
adc
cmp
dec
dec
pop
aaa
inc
cli
data16
jb
sbb
dec
testl
in
pop
arpl
cli
cmp
insb
sbb
push
pusha
imul
xor
pop
mov
pop
mov
imul
testb
pop
mov
inc
mov
push
jmp
in
decl
add
aaa
sub
inc
add
mov
push
pop
les
loope
mov
mov
in
sub
jl
data16
call
arpl
push
jge
push
or
push
dec
fsubrs
sbb
mov
fisttpl
jmp
pop
arpl
inc
ss
jg
push
or
insb
add
sub
aaa
aaa
ja
xor
jo
cli
fildll
test
dec
jecxz
xor
orl
in
jle
fisttpll
test
mov
inc
arpl
mov
sub
sub
xlat
fsubrl
push
call
jl
mov
insb
push
push
pop
xchg
repnz
in
inc
outsl
xchg
addb
jae
inc
in
mov
test
repz
push
sbb
jge
in
in
or
testb
lcall
pusha
leave
clc
add
jecxz
cmp
int
out
inc
or
mov
xor
loop
int3
in
lea
daa
sti
imul
dec
push
mov
ss
mov
icebp
ret
out
rcll
sti
or
aaa
mov
cmpb
icebp
jb
pop
in
add
cmc
loope
and
adc
sti
mov
inc
mov
jecxz
add
xchg
outsl
mov
jecxz
repz
mov
push
mov
dec
gs
push
or
dec
dec
roll
inc
in
imul
aas
repnz
mov
inc
mov
dec
cld
jae
bound
out
pop
ficoml
mov
dec
arpl
ss
in
dec
push
or
out
mov
js
lock
jb
faddl
dec
hlt
addr16
stc
andl
sbb
cmc
leave
jecxz
xorb
xor
cmp
decb
fidivs
ffreep
add
jo
fs
push
outsl
scas
push
sub
loopne
jno
mov
andl
rclb
adc
cwtl
or
adc
xchg
cld
or
sti
in
aas
xorb
hlt
add
xlat
fisttps
jecxz
sub
jbe
repnz
shl
mov
stc
out
xchg
adc
push
xchg
loope
add
push
push
repz
add
in
xchg
aaa
dec
inc
repz
js
idiv
fs
repnz
gs
push
xchg
int
jb
mov
in
mov
ja
int
add
jb
arpl
in
jae
outsl
mov
fimull
in
js
jo
dec
std
popa
dec
push
loopne
rcrl
stc
mov
jecxz
andl
or
push
shll
mov
or
dec
mov
js
or
xchg
or
jnp
lea
pop
fists
or
pop
idiv
jg
or
and
jecxz
xrelease
mov
call
orl
sarl
ljmp
adc
cld
in
push
or
roll
cmp
xlat
dec
addr16
jge
hlt
mull
push
push
mov
pop
add
mov
dec
add
call
ja
out
jecxz
xor
jo
dec
adc
cli
jae
clc
xchg
js
inc
jecxz
cmp
add
mov
fisttpll
cmpl
mov
mov
add
addr16
pop
insl
testb
loop
outsl
std
cld
incl
shr
pop
jnp
ret
addb
mov
rcl
loope
cmp
rorb
pushl
adc
cli
aad
or
or
jecxz
mov
decb
cmp
ret
out
ds
rolb
addl
pop
clc
mov
or
pop
shlb
in
lret
ljmp
sti
push
and
in
dec
push
popa
sbb
fsqrt
repnz
movq
sbb
leave
insl
pop
jb
xchg
aaa
vunpcklps
out
insb
loope
leave
xchg
cmp
outsl
clc
pop
dec
orl
cwtl
add
stc
xor
insb
sub
jecxz
in
outsl
add
sarl
imul
fmull
mov
lods
rcrb
add
jmp
sahf
loop
add
cmp
sub
push
mov
outsl
pop
pop
out
daa
mov
cli
dec
add
mov
or
or
gs
lahf
outsb
push
iret
cmpl
mov
in
fistpll
sti
roll
sarl
pop
subl
or
cli
add
push
cmpl
rclb
add
mov
push
dec
push
cmp
sbb
addr16
test
data16
cltd
std
lds
cmp
add
cmc
in
sub
cmpl
in
fidivrs
neg
ror
and
out
out
lcall
insb
clc
orl
clc
add
shlb
addb
popa
stc
cld
mov
dec
cmc
jno
dec
pop
imul
cli
xchg
rol
lds
cmp
test
or
cwtl
ret
cmp
pop
test
add
imul
in
xchg
daa
addr16
insb
jg
filds
push
push
pop
pop
ret
in
out
mov
ljmp
push
sub
or
outsl
inc
jp
or
sbb
sarb
or
inc
add
pop
mov
dec
and
mov
aaa
adc
pop
cmp
ljmp
imul
in
push
push
mov
sti
inc
call
mov
pop
mov
std
sub
adc
push
jo
mov
pop
push
inc
cmp
lds
dec
inc
pop
jo
cmp
pop
fwait
jbe
insl
mov
dec
sub
outsl
xchg
in
sbb
sar
sub
lock
ret
insl
wbinvd
or
or
in
dec
jb
imulb
clc
nop
test
pop
clc
adc
std
jle
clc
mov
xor
imul
mov
mov
pop
fdivrs
push
repz
jne
mov
call
mov
xchg
in
pop
daa
add
xchg
loope
jmp
cs
inc
imul
push
outsl
sbb
add
int
xchg
mov
mov
test
addl
xor
test
cmp
cli
lea
cmpsl
pop
in
pusha
cli
xor
test
push
outsb
mov
fucomi
stc
rclb
sahf
rolb
ja
push
adc
insl
div
fwait
mov
dec
leave
push
sti
sub
mov
push
dec
or
fwait
cmp
inc
mov
xchg
sti
test
adc
dec
dec
xor
xor
outsb
cld
les
repnz
ret
outsl
das
notl
gs
xor
mov
lret
test
aas
push
gs
mov
fsubrl
add
icebp
sbb
fcoms
xchg
cli
cmp
pop
sti
xchg
jae
push
popa
mov
jb
lea
cmp
sub
divl
roll
push
xor
sarb
cs
dec
arpl
xor
out
jns
ret
fnstcw
lods
inc
mov
jns
shrd
mov
jno
cmp
fisubs
xchg
insb
sbb
or
jnp
ret
adc
aad
rolb
ljmp
rcrl
jl
fdivrs
pop
pop
sbb
lahf
in
outsl
loope
andb
gs
pop
xor
jecxz
call
add
add
mov
dec
in
xor
out
outsb
negl
out
pusha
orb
aad
push
xchg
addr16
mov
and
mov
cli
test
jecxz
push
je
pusha
clc
jno
loope
cmp
or
sub
mov
fldt
in
fwait
in
outsl
or
jmp
sbbb
xor
sti
sbb
push
loope
outsl
outsl
ror
cmp
dec
push
push
push
pop
clc
testl
lods
sar
std
decl
mov
mov
fiaddl
or
mov
mov
outsb
lock
sbb
mov
fnstcw
test
adc
pop
or
dec
jecxz
sti
push
push
ds
repz
ja
and
cmp
insl
sub
shlb
inc
jmp
lods
dec
lret
insl
lods
in
push
adcl
loopne
pop
xchg
jmp
mov
ja
call
daa
dec
add
push
imul
dec
xchg
or
push
or
add
mov
sti
test
dec
push
pop
pusha
or
fs
sarl
stc
mov
adc
sti
jb
xor
xchg
jg
xor
inc
or
dec
test
cwtl
pop
mov
xor
jne
std
test
lret
loope
decb
push
arpl
outsl
adc
fidivl
xchg
xchg
popa
sti
addr16
std
add
pop
pop
mov
jecxz
cmp
das
loope
xor
pop
in
lcall
push
fcmovb
fistps
movl
add
mov
pusha
mov
cmp
push
push
mov
pop
or
scas
jp
pop
cmp
add
push
filds
add
push
insb
fisttpl
xor
scas
push
push
pop
mov
dec
aad
daa
pop
mov
pop
jg
in
xor
std
jl
or
dec
out
dec
jbe
mov
jecxz
cld
jg
sbb
in
popf
test
xor
jns
test
jo
ret
ljmp
sub
cmp
outsl
adc
out
sub
das
cmp
out
loop
adc
mov
in
call
cmp
xchg
ret
push
add
jno
inc
cld
out
test
xchg
inc
or
aad
jbe
dec
xchg
or
cmp
push
jmp
pop
ss
addr16
insl
outsl
jmp
or
insb
push
stc
out
sbb
arpl
lods
rcrl
push
adc
dec
mov
test
ret
test
push
out
orl
fucomi
jae
outsb
std
in
xor
xor
sub
incl
pop
jno
or
xor
call
ss
inc
adc
jb
pop
jle
ss
insl
push
jmp
adc
outsb
cli
mov
mov
and
orb
push
xor
jo
insb
icebp
aaa
das
dec
add
pop
inc
cld
xor
pop
loopne
jno
test
xchg
jmp
pop
in
popa
cld
pop
xor
or
pop
loop
mov
or
testb
div
xor
jo
lret
jo
sub
jnp
stc
inc
test
mov
mov
pop
mov
sbb
je
jecxz
cld
popf
cmp
fisttps
xor
inc
mov
jb
jo
loop
mov
js
mov
jne
push
jae
cmp
outsb
shrb
pop
adc
mov
or
add
jne
jo
aad
fcoms
xor
sbb
js
outsl
sti
faddl
addb
xorl
mov
xor
out
std
mov
pop
fistpl
testl
add
inc
in
out
rolb
insl
inc
add
fwait
jp
aas
std
in
lret
xchg
fisttpl
mov
pop
add
in
ss
pusha
adc
and
push
jp
xor
jg
lret
mov
fstpt
mov
imul
or
xchg
jns
push
pop
test
push
mov
add
dec
dec
and
xor
jmp
scas
std
push
in
roll
xchg
loopne
lds
fildll
xchg
dec
jecxz
xor
das
sbb
fmull
mov
les
sbb
cmp
out
sub
mov
test
dec
mov
cmp
popf
loopne
js
sbb
insl
push
xchg
scas
test
jmp
dec
insl
insb
xchg
test
push
push
add
mov
add
pop
and
mov
xchg
xor
xorl
mov
pop
add
fsubl
aas
cltd
pop
push
inc
xlat
add
je
sbb
mov
clc
dec
rcl
sbb
scas
xor
repz
pusha
push
sti
test
mov
sbb
scas
jno
or
rolb
leave
inc
sub
cmp
cmp
jecxz
dec
push
jno
cmp
outsb
adc
jge
imul
jne
cld
ss
add
test
test
test
out
push
inc
stos
ja
lods
add
out
ss
das
pop
mov
repnz
mov
cmp
xchg
pop
aaa
sbb
mov
lds
mov
sbb
insb
push
push
dec
adc
mov
clc
lret
cmp
in
aaa
addr16
cld
bnd
xchg
lds
xlat
cmp
ret
aaa
pop
jle
sub
sbbl
out
jmp
jg
pop
insb
test
sub
jno
test
ljmp
dec
fsubs
loop
cld
mov
push
inc
arpl
jl
loopne
sub
sbb
cmc
xor
add
pop
adc
or
scas
lods
call
add
jo
shl
mov
out
mov
pop
setnp
insl
stos
cli
cmp
in
mov
push
test
divb
add
clc
xchg
sarl
pop
cmovae
push
subb
in
in
dec
xchg
imul
mov
out
mov
jae
pop
pop
js
push
pusha
dec
push
sbb
pop
cmp
ljmp
cmp
xor
test
lea
push
sub
or
dec
std
outsl
repz
sbbl
or
inc
jmp
jle
add
mov
ret
or
add
cld
popa
imul
xor
outsb
incb
aad
lods
push
in
inc
sti
pop
cmp
cltd
loopne
push
test
push
jmp
mov
fildl
std
mov
adcl
insl
or
outsl
lods
jmp
sti
movsl
cmp
mov
in
lret
pushl
shrb
mov
out
out
sbb
sbb
lock
test
in
std
and
sar
insl
push
lds
or
mov
mov
mov
push
ret
fprem
lret
sahf
stc
fistpl
testl
dec
push
push
push
cmp
outsb
call
aas
out
or
mov
pop
insl
dec
xchg
sub
jbe
push
loopne
sar
mov
frstor
mov
mov
pop
pop
xchg
add
hlt
xchg
fdivr
or
in
into
fs
sti
lret
jmp
push
lahf
push
repz
gs
inc
aam
lahf
cs
pop
daa
push
mov
or
jg
shrl
inc
ljmp
jle
pusha
add
push
push
dec
push
data16
cmp
jmp
std
xchg
lahf
addr16
dec
ljmp
shll
push
into
or
push
insl
jns
arpl
in
incl
jmp
push
out
sub
fwait
mov
and
jle
adc
push
bound
or
idiv
fldt
push
sbb
scas
ret
cmpb
jae
test
ja
je
lret
lods
mov
jo
dec
mov
cmp
repnz
shl
jg
aas
xchg
and
incb
inc
mov
lods
push
cli
or
mov
cmc
jecxz,pt
and
adc
pop
mov
outsl
aam
mov
lock
mov
dec
sub
adc
subl
imul
push
adcb
xor
and
clc
ret
xor
jl
and
mov
inc
push
xor
gs
adc
addr16
add
sti
adc
pop
dec
push
dec
arpl
add
mov
push
pop
cmp
push
sbb
ja
mov
out
push
test
addr16
out
push
dec
xchg
popa
jg
cmpl
repnz
pop
cmpl
mov
jnp
ret
xor
aam
push
dec
dec
pop
sub
add
mov
outsb
add
arpl
and
jg
outsw
gs
movsl
mov
push
pop
hlt
mov
das
jg
pop
dec
mov
sbb
outsl
mov
fadds
int3
dec
xchg
test
or
outsl
les
daa
mov
inc
ja
mov
jns
out
sbb
mov
xchg
push
gs
bound
mov
push
xchg
add
mov
loop
repz
sub
push
addb
pop
test
addl
addr16
out
dec
sbb
gs
std
dec
dec
push
jnp
mov
mov
call
jnp
ljmp
mov
addr16
out
dec
not
mov
pop
pop
testl
mov
aas
ja
out
and
jne
icebp
add
js
adc
inc
jmp
push
jne
push
sahf
lahf
mov
movsl
inc
popf
or
mov
push
fwait
orl
mov
std
arpl
mov
scas
mov
jecxz
sub
aaa
mov
aaa
ffreep
jl
jne
mov
jl
add
jnp
out
sub
aam
sub
shll
rdmsr
aam
pop
jecxz
push
shll
sbb
xlat
inc
sub
sub
pop
lock
sub
outsb
insb
jno
inc
es
cmp
push
aaa
repnz
sub
mov
jo
fistpll
ss
repnz
std
mov
xor
fstpt
incl
cmp
inc
ss
icebp
insb
loope
mov
xchg
data16
inc
std
ja
mov
mov
call
dec
lahf
outsb
arpl
dec
rol
insb
inc
outsl
pop
jge
mov
es
jmp
repz
shl
sub
ljmp
test
je
or
fsubrl
notl
leave
test
inc
and
dec
inc
ss
mov
and
hlt
add
jne
mov
and
cmpl
dec
pop
scas
clc
sub
jge
aas
add
fildll
add
loopne
xchg
imul
xorl
or
lea
or
in
xchg
imul
cld
inc
int
loop
sub
lock
and
mov
or
bound
mov
stc
sti
mov
sub
mov
lcall
jg
cmp
mov
cs
cld
nop
scas
aam
cmp
xchg
adc
mov
std
addl
cltd
scas
mov
mov
mov
cmp
cwtl
cmp
mov
xchg
call
stc
push
dec
xchg
jle
cmp
or
lods
negl
jge
adc
movsl
popa
push
lahf
mov
inc
lcall
jge
dec
lock
pop
pop
dec
mov
sti
push
lret
and
notl
ljmp
fistps
xchg
xchg
adc
aas
scas
pushf
sub
sub
fildll
jg
dec
loopne
sub
in
and
dec
arpl
or
insb
cli
in
test
scas
cli
push
dec
imul
lock
cmp
jge
add
aad
test
jnp
cmp
jg
loope
sub
shrl
sbb
jo
inc
ja
loopew
or
cltd
jecxz
cs
ljmp
in
jle
fildl
xor
jl
xchg
in
add
cmp
fimull
in
add
inc
dec
popa
sub
pushl
loopne
add
jnp
jo
add
jg
mov
ljmpw
arpl
sar
add
fisttpll
lahf
adc
in
jge
lahf
xlat
lahf
fidivs
pop
ss
xor
in
mov
mov
outsl
lds
add
xor
push
or
jmp
sbb
sub
xor
inc
or
add
loop
xchg
incl
adc
arpl
and
inc
lahf
bound
lock
pusha
cmpsb
cmpsb
imul
test
xchg
xchg
adc
cs
mov
out
clc
push
dec
push
push
jl
and
inc
push
push
addr16
push
lahf
and
sbb
adc
jne
xchg
mov
call
mov
mov
pop
ret
stos
jl
out
jl
jns
ljmp
jle
mov
jg
aam
mov
xchg
rcll
mov
add
jnp
add
arpl
filds
push
jl
push
pop
jg
adc
push
fsubs
gs
ja
testl
fiadds
xor
push
pop
mov
pop
pop
push
outsl
aaa
or
and
pop
xor
orb
outsb
inc
popf
fcomip
decl
insl
push
lds
mov
shll
outsl
push
cmp
jle
jle
xor
or
mov
adc
adcb
movsl
aad
jno
insb
mov
daa
and
adc
jae
pop
enter
cli
xor
or
sti
mov
push
push
loop
or
pushf
in
pop
jl
arpl
adc
mov
jp
mov
gs
js
outsl
adc
xchg
in
mov
ret
in
flds
mov
repnz
cltd
jecxz
std
testl
jo
jno
mov
daa
jbe
push
test
or
dec
loop
daa
xor
lods
pop
xchg
push
mov
pusha
mov
jge
inc
pop
std
mov
jo
movsl
popa
cmpsl
mov
pop
cmp
fcmovne
mull
insl
mov
loopne
mov
outsl
and
dec
clc
pop
pop
test
and
test
pop
push
push
pusha
xlat
cs
sub
cmp
mov
mov
mov
xchg
jae
dec
dec
dec
cmp
mov
and
sub
ds
jo
pop
pop
decl
inc
jne
sti
add
and
jp
add
mov
ss
test
mov
xlat
cmp
and
push
rcrb
arpl
sahf
gs
leavew
hlt
sbb
xor
fisttpll
pusha
pusha
inc
sub
add
add
loop
daa
mov
mov
cld
push
mov
push
xchg
lret
mov
insl
dec
fstps
inc
add
push
push
fs
xchg
daa
ja
rcrb
icebp
cld
jne
fwait
add
sti
mov
shrl
fbld
mov
fisttps
lahf
cmp
loop
or
add
pop
icebp
sbb
hlt
cmp
add
clc
outsb
add
xor
daa
outsb
aad
mov
dec
daa
adc
cmp
lds
pop
negb
inc
pop
adc
mov
test
or
sub
mov
jno
mov
mov
out
lea
pop
pop
popa
pop
insl
sbb
dec
adc
pop
xlat
stc
inc
push
andw
addr16
lea
ljmp
or
cwtl
cmpsb
lea
out
push
sbbl
popa
xchg
push
inc
loopne
or
fnsetpm(287
out
adc
dec
loope
shll
pushf
mov
test
minps
aam
cs
pop
jnp
aaa
cli
jle
mov
pop
inc
ficoms
mov
cmpsl
pop
xchg
les
out
loopne
or
imul
mov
rcrl
dec
jl
dec
int
fiaddl
clc
arpl
add
inc
push
ffreep
fidivrl
imul
jmp
roll
insl
or
or
addr16
dec
push
into
jecxz
jne
jb
ja
std
jl
jmp
std
movsl
pop
and
repz
out
testb
test
lea
sbb
out
imulb
xor
loop
sub
push
pop
out
rol
xchg
and
cld
test
mov
pushf
es
ja
or
cmpps
insl
sub
mov
sbb
cmp
mov
loop
cmp
and
mov
xor
movhps
xor
pextrw
add
lods
outsl
mov
adc
sub
mov
outsl
daa
push
mov
dec
xchg
in
inc
xchg
mov
popa
daa
jmp
orb
or
rcll
aam
xchg
lods
add
mov
out
packsswb
xchg
jle
mov
sbb
ret
fdivrl
iret
pop
mov
jbe
push
xchg
stos
popa
or
mov
mov
stos
mov
addr16
mov
aam
ret
cld
in
xchg
inc
dec
fidivl
hlt
push
das
in
push
sub
popa
push
and
int
addr16
pop
cmp
outsl
sbb
test
pop
lcall
mov
cmc
xor
jo
jg
sbb
xor
push
xchg
mov
push
xor
adc
push
in
int3
sti
mov
push
sub
aaa
outsl
fldl2t
push
jo
adc
cmpsb
cmpsl
sbb
in
cwtl
in
sub
sar
pop
mov
cld
or
fisubs
testb
bound
ret
push
jb
pop
sbb
adc
cltd
dec
jl
mov
jg
mov
mov
out
add
mov
mov
in
in
xchg
jp
jp
aad
xor
mov
loope
or
xor
push
jbe
mov
inc
loop
mov
outsl
and
push
lods
mov
add
adc
jo
jo
push
and
inc
jmp
mov
mov
xchg
call
xor
push
ja
dec
adcb
cmc
fcmovnb
pop
loope
sub
lds
mov
or
sbb
xor
sub
jb
dec
stos
sub
dec
pop
mov
das
loopne
xor
aad
popf
dec
sbb
insb
add
mov
mov
add
push
inc
and
test
hlt
or
and
mov
aad
mov
arpl
jns
test
outsl
lcall
sbb
std
mov
lret
push
in
pop
mov
dec
push
ret
xlat
sub
push
test
xor
cmp
pop
imul
repz
fs
les
mov
in
and
imulb
stc
loope
and
xchg
sbb
aad
sbb
cmpsl
cld
std
xchg
fwait
test
mov
xor
sbb
pop
cwtl
sbb
fld
push
xchg
sub
jo
mov
pop
idivb
arpl
mov
add
mov
mov
xchg
jbe
decl
mov
mov
cmc
movsb
jecxz
push
mov
push
repz
out
pop
mov
filds
jmp
jb
mov
or
aaa
lea
aaa
gs
test
sbb
addl
movsb
pop
cmp
stc
fwait
testl
sarl
and
adc
repz
adc
adc
sbb
dec
pop
shl
rcrl
inc
pop
mov
adc
and
inc
aaa
mov
cmpsb
jne
in
dec
pop
dec
push
arpl
jle
pop
stc
test
mov
gs
jle
add
in
or
mov
dec
push
mov
fists
test
or
sbb
add
pop
jne
pop
roll
movsl
testb
xor
and
add
pop
das
dec
sub
icebp
add
jbe
lahf
add
stc
xchg
jmp
cmp
pop
out
jne
stos
inc
gs
lods
jecxz
or
jp
pop
sub
fistps
jl
cli
insb
push
movsl
not
addr16
sbb
xchg
stos
ja
ret
movsb
out
dec
inc
dec
cli
mov
inc
fadds
ja
push
repnz
xor
mov
jae
jge
inc
cmp
add
rcrl
adc
stos
mov
hlt
mov
add
pop
cli
pusha
imul
mov
outsl
add
dec
jecxz
sbb
mov
das
or
in
repz
xor
xchg
daa
mov
xor
dec
or
add
mov
sub
sub
lcall
bound
das
shl
dec
js
add
cli
add
xchg
pop
lds
jne
adc
inc
push
call
lahf
mov
loop
icebp
xchg
push
and
mov
jecxz
sbb
pop
push
adc
mov
mov
cmp
das
jnp
leave
push
add
rcll
ja
pop
jnp
dec
sub
sbb
push
cs
jle
cmp
sti
cmp
lds
hlt
insb
popa
popl
lock
sbb
orb
stc
mov
out
sbb
ja
or
jmp
loope
sbb
pop
pop
shlb
clc
fbstp
adcb
repz
sbb
fsubrp
in
inc
push
or
mov
mul
das
add
sbb
shll
fmull
in
jb
mov
insl
stc
ljmp
paddsw
cmp
daa
add
ds
sbb
cltd
icebp
push
mov
mov
push
xchg
and
xor
cli
insb
jo
dec
mov
jl
js
lods
pop
sub
scas
daa
xor
jbe
mov
xchg
sub
enter
add
fstpt
adc
add
mov
jnp
jmp
aaa
mov
arpl
xor
notl
cli
inc
repnz
stos
mov
push
out
add
cmp
clc
push
dec
adc
cli
dec
dec
bound
lea
jmp
jecxz
out
leave
or
cmp
jo
dec
and
jmp
sar
sbbb
inc
lock
jnp
lock
pop
mov
mov
lret
addb
mov
pop
insl
fs
mov
xchg
pop
sbb
outsb
jae
xchg
jmp
sub
adc
aad
jne
fs
lret
out
inc
frstor
or
in
repz
movsl
push
ret
inc
jge
dec
dec
pop
xchg
cmpsb
add
rol
pop
popf
scas
push
movsl
les
scas
arpl
dec
arpl
pop
sub
xor
mul
enter
pop
mov
push
fs
or
mov
icebp
mov
pusha
sti
stc
inc
hlt
js
jl
pop
jl
inc
idivb
jle
sbb
pop
lahf
cs
sbb
lds
shl
sbb
push
arpl
pop
xor
pop
sub
orb
jge
push
aaa
lds
clc
mov
xor
int
iret
push
out
sbb
jg
xchg
loopne
mov
pop
push
cmp
jecxz
pop
cld
clc
jns
pop
add
cmp
adc
gs
jecxz
loopne
push
dec
push
cmc
in
cmpb
lea
push
fistl
push
int
add
add
outsb
push
test
outsl
push
ss
push
mov
mov
pop
fisubrl
inc
shl
ljmp
aaa
fwait
xor
add
aaa
cmpsl
jae
fidivs
js
pop
inc
dec
fwait
shr
pop
push
loop
add
arpl
jecxz
mov
mov
inc
jmp
jge
jno
loop
sti
cli
or
ja
fwait
pushf
shr
add
and
jp
or
mov
cmp
int
hlt
cmp
xchg
out
shl
push
sub
sub
out
or
adc
sub
cmp
inc
lea
jo
push
jbe
cmp
outsb
jmp
roll
clc
insb
mov
add
fldl
mov
mov
outsl
aam
adc
dec
repz
pop
cltd
push
int
icebp
mov
call
sbb
add
mov
dec
and
xor
jmp
and
enter
mov
inc
leave
lea
push
enter
pop
add
enter
sub
xor
leave
mov
in
es
push
xor
out
sbb
push
xor
push
xor
jns
push
xor
jecxz
jge
andb
fistps
dec
mov
push
fistl
cltd
mov
imul
ljmp
lds
jge
sub
std
out
clc
int
xorl
pop
jp
push
cmp
or
ss
xchg
push
out
leave
enter
es
and
push
psrlw
add
xchg
clc
jne
sarb
pop
push
lahf
out
std
lret
rcr
xor
lret
scas
or
in
adc
stos
or
or
push
mov
mov
inc
in
sub
sbb
test
repz
ss
std
xor
inc
jecxz
adc
aaa
daa
int
mov
push
daa
jnp
das
push
sti
pop
pop
sarl
sub
pushl
sar
decl
adcl
das
rolb
cmp
test
inc
cld
lds
cs
or
add
push
das
mov
outsl
jge
or
jge
je
cld
jge
pop
addl
stc
addb
jg
add
inc
divl
inc
aad
pop
cltd
ja
xor
subb
jns
push
adcl
ss
cli
mov
mov
incl
mov
add
lods
aam
inc
xchg
add
decl
dec
xchg
add
mov
repnz
sub
cld
call
adc
inc
cmp
jns
pop
test
xchg
cmpsb
jp
mov
push
xor
incl
xor
out
gs
idiv
out
sbb
movsl
into
xor
pop
call
std
outsb
inc
cmpsl
adc
xchg
sbb
mov
testb
sbb
cmpsb
clc
repnz
and
xchg
shrb
pop
popa
sub
ds
add
ja
sub
mov
std
jo
lret
cli
cmc
dec
pop
pop
inc
test
add
add
inc
add
inc
es
nop
sar
lahf
xor
addb
cmp
cmp
sub
sub
cmp
aaa
pop
add
aas
push
xchg
add
add
add
sti
mov
or
xor
out
std
xchg
push
adc
mov
loopne
sbb
flds
std
pop
icebp
cmpsb
mov
xchg
jecxz
dec
arpl
loop
dec
andb
pusha
lea
inc
roll
popa
xor
orb
dec
data16
or
xchg
stos
sti
inc
loopne
cmp
dec
std
ret
gs
insl
or
popf
pop
stc
and
jmp
aad
lahf
clc
in
fists
mov
pop
and
push
scas
out
shlb
cmp
test
call
repnz
xchg
or
adc
sub
clc
xchg
cmp
mov
ja
push
mov
imul
or
aas
xor
cmp
cmp
divl
xlat
arpl
push
mov
xor
jb
fcomi
cmp
cld
test
stos
push
out
and
stos
inc
mov
inc
xor
xchg
jge
sbb
cwtl
dec
fwait
push
cmpsl
push
ret
xchg
pop
mov
outsl
insl
push
sti
jno
ljmp
push
mov
ret
lods
fbld
es
cltd
mov
dec
out
jbe
fsubs
mov
inc
dec
dec
daa
mov
cli
loop
pop
mov
inc
mov
dec
filds
push
pop
mov
xchg
mov
sbb
add
sbbb
ja
sub
xor
or
pop
test
imul
or
add
les
push
fidivs
addr16
push
inc
jmp
or
mov
sarl
xchg
mov
je
add
dec
shrb
add
or
ljmp
mov
mov
xlat
fs
dec
gs
je
icebp
push
dec
jno
popf
inc
sub
mov
es
imulb
stc
mov
xor
jns
adc
add
jmp
es
inc
je
push
mul
ja
xchg
orl
inc
xchg
nop
sbb
add
inc
cld
sbb
cmc
addb
out
imul
push
rcll
inc
cli
jmp
rcll
jno
cld
lcall
adc
jp
xor
add
xchg
mov
fimuls
in
adc
out
int
fmuls
popa
psrlw
dec
out
loopne
insl
push
jbe
insl
sbb
in
mov
cmc
stc
inc
jne
loope
jne
lods
daa
inc
sbb
mov
adc
xchg
dec
sub
out
push
std
in
call
daa
inc
add
cmp
test
repz
pop
jb
adc
or
or
incl
and
dec
or
es
pop
das
adc
dec
xor
lahf
xchg
or
sbb
adc
das
divb
pushf
popa
js
add
mov
fabs
pop
sbb
fists
or
ss
jge
dec
aam
pop
sub
test
sbb
jne
mov
out
jl
push
shrb
lret
add
je
in
addb
jns
scas
rclb
aas
inc
pop
das
add
inc
mov
cmc
inc
jmp
daa
push
push
mov
sub
adc
pop
mov
mov
push
fildll
daa
pushf
dec
arpl
in
add
test
mov
mov
xlat
push
and
push
sbb
insb
stos
mov
dec
jno
pushf
fstl
sbb
cmpb
mulb
mov
rclb
rclb
rorb
pop
dec
pusha
shl
pop
mov
shll
add
mov
jl
mov
insl
in
es
stos
sub
mov
das
inc
imul
jnp
fcoms
push
mov
inc
mov
mov
std
repz
add
divl
dec
inc
divl
mov
stc
xchg
arpl
outsl
ss
sarb
stc
inc
ret
push
outsl
sub
sub
xchg
push
sub
jno
dec
test
sbb
sbb
sarb
mov
or
test
or
shll
mov
gs
inc
mov
jo
in
imul
rcll
dec
mov
rorb
mov
dec
or
xchg
add
lcall
rorb
or
mov
push
jbe
test
or
cmp
adc
outsl
in
or
pop
jg
push
pop
das
sbb
mov
push
stc
xchg
mov
sub
or
dec
sar
test
popa
les
ret
mov
jge
jo
push
mov
sub
cld
das
lds
aaa
push
das
out
and
jle
out
or
inc
dec
daa
sub
jg
lret
sbb
testl
sub
push
cmp
push
pop
push
or
jge
sti
icebp
in
or
ja
dec
mov
cmp
hlt
mov
mov
pop
mov
ss
mov
lret
xchg
dec
mov
mov
loop
or
mov
cmp
insb
rolb
mov
in
mov
out
or
cmpsb
bsf
jnp
jl
mov
in
sti
je
repnz
lahf
add
ja
dec
mov
inc
jl
lea
fisttpl
fsubrl
jle
das
add
lock
imull
test
pop
add
mov
pop
inc
out
popa
xorb
sbb
and
loop
rcrl
sbb
std
test
pop
mov
popa
test
pop
loop
ret
cmpsb
leave
out
aas
add
fnstenv
jno
sub
xchg
push
pop
and
xchg
ljmp
jg
cmp
cmp
call
jle
jp
add
cmpb
xorb
outsb
out
fs
sti
mov
ljmp
push
xor
insb
std
xor
dec
jge,pn
fs
inc
add
outsb
adc
ljmp
xchg
mov
loope
inc
push
sbbb
lods
dec
stc
cs
lret
incl
mov
dec
idivb
dec
out
jne
outsb
cmc
fildll
sar
in
add
and
adc
cmp
mov
sub
repnz
dec
loop
add
dec
mov
loope
push
mov
lock
cmpsl
sub
or
lds
add
outsb
sbb
inc
out
pop
or
lods
test
jmp
inc
push
stos
cmpsl
shll
arpl
mov
or
cli
jb
pop
jmp
aam
aas
cmpsb
or
xchg
mov
cmpsl
push
mov
mov
bound
xor
lds
insb
fstpt
mov
jmp
adc
sub
pop
lock
fcompl
nop
inc
hlt
gs
add
fisttps
pop
adc
nop
out
xchg
add
xchg
jp
in
push
add
dec
push
arpl
arpl
sbb
sbb
xchg
outsl
dec
das
lret
pusha
lods
pop
lea
icebp
mov
sub
lods
arpl
push
xchg
xor
out
in
outsl
sub
and
fnstenv
ljmp
mov
addr16
mov
add
bound
fisubrl
pop
add
mov
sub
sbb
mov
adc
fistpll
idivl
addl
push
sub
clc
pop
aas
popa
jmp
cmp
sbb
shll
in
cld
or
pop
push
xor
pop
push
or
iret
pop
cld
out
fs
popa
add
or
sub
icebp
pop
and
lret
outsl
push
or
add
lcall
test
popa
dec
cmovo
gs
int
out
fldt
dec
aas
or
aad
or
sub
pop
and
and
gs
in
sti
xchg
mov
loope
ficompl
add
fwait
or
aas
mov
sar
inc
mov
repnz
bound
pop
and
sahf
cld
orl
lret
scas
in
adcl
jnp
repz
fistpl
hlt
pop
call
xor
pop
cli
lods
lock
aas
pusha
add
jecxz
movsl
or
repnz
mov
negb
inc
sti
sbb
mov
scas
out
in
or
dec
xor
bound
xor
fs
aas
or
addb
fs
lret
repz
and
fwait
std
cmp
sub
adc
out
pusha
jl
push
pop
sti
out
shll
jmp
push
pop
cwtl
imul
pop
mov
int
lock
idiv
jmp
stc
int
add
adc
ja
movsl
mov
in
mov
insl
push
fildll
fnstcw
in
pushf
test
in
cli
movsb
int3
xlat
inc
insl
mov
pop
lea
pop
jns
lret
pop
inc
mov
xadd
daa
jns
pop
add
mov
outsl
push
enter
mov
mov
mov
mov
mov
or
xchg
jmp
out
incb
sbb
lods
add
cs
push
mov
out
mov
push
cmp
mov
popa
mov
lods
inc
insl
fbstp
lret
rcl
push
fcmovnb
jns
sbbl
and
xchg
jne
ficoms
cmc
xchg
cld
sbb
jp
sbb
mov
jns
std
pusha
push
mov
inc
jmp
xor
pop
add
and
arpl
rclb
xchg
cli
cmp
sti
mov
movsb
sbb
cmpsb
pushw
push
xchg
and
outsb
out
in
xor
add
jp
inc
and
imull
pop
and
adc
adc
decb
repnz
sar
incl
mov
pop
mov
pop
pop
sub
scas
push
fdivrp
pop
push
dec
add
sbb
jmp
jge
push
mov
xchg
jmp
dec
jl
push
cmp
and
mov
pop
call
lret
fs
add
faddl
cli
imul
lcall
aaa
mov
or
inc
push
mov
dec
aad
pop
xor
popa
jl
dec
out
scas
mov
or
dec
sub
out
aas
repnz
dec
sub
xor
xor
insl
int3
sub
mov
clc
cld
mov
aam
dec
jge
pop
mov
inc
sbb
repz
mov
fs
out
mov
roll
andl
xor
sub
dec
cli
inc
add
xchg
pop
ljmp
sti
pop
push
pop
sub
or
sbb
dec
add
push
cld
incl
inc
or
sbb
mov
pop
add
adc
inc
pop
xchg
lret
jmp
outsl
push
into
faddl
jmp
icebp
sub
aaa
push
rcr
daa
dec
adc
mov
ljmp
cmc
hlt
leave
sbb
add
adc
inc
adc
inc
sbb
jmp
xchg
into
fldl
jno
test
push
pop
imul
popw
cs
push
sub
neg
dec
es
push
sti
inc
sbb
mov
lret
fisttpl
jmp
cmp
pop
push
lahf
push
add
int
pop
loope
cld
aas
pop
push
popa
sbb
mov
mov
pop
jg
pop
push
adc
mov
jnp
or
sbb
dec
or
push
or
pop
clc
call
xor
fscale
ss
push
std
cmp
lods
out
ret
test
loopne
xor
test
lret
out
call
jle
xor
mov
test
mov
std
cmpb
jle
jge
hlt
jo
mov
movsl
outsl
mov
icebp
insb
or
sub
push
aam
xchg
rclb
sar
lret
loope
mov
inc
push
xchg
mov
mov
mov
pop
clc
mov
mov
sti
dec
jae
cmp
out
mov
insl
pop
les
push
decb
lcall
sub
xchg
xchg
inc
sub
xorb
ljmp
mov
xchg
clc
inc
push
xchg
cmp
outsl
cld
xchg
fistpll
hlt
imull
mov
dec
jle
or
addr16
pop
dec
insl
add
add
push
jne
cmp
daa
dec
cs
rcrl
std
movsl
or
aas
incl
dec
lret
test
push
flds
aas
inc
or
test
insl
sub
sbb
inc
movb
lea
add
cs
aad
leave
sti
or
pop
mov
addr16
and
pop
hlt
dec
pop
lret
xor
pop
sbb
xor
ds
push
mov
ret
in
lea
in
mov
push
mov
or
and
pusha
push
push
rcrb
mov
xor
cmc
mull
or
push
mov
mov
addr16
in
dec
xchg
mov
idivb
jmp
sbb
or
push
adc
arpl
sub
push
imul
mov
xor
sbb
and
add
mov
mov
stc
push
jecxz
push
test
lods
mov
mov
fwait
mov
lds
mov
repz
or
jg
dec
loope
pop
icebp
or
cmc
popf
adc
shr
aaa
incb
pop
cmp
shrl
mov
push
add
jmp
rcll
push
arpl
cmpsb
mov
xchg
xchg
or
outsl
sub
mov
test
and
pop
insl
adc
repnz
sbb
mov
arpl
jl
mov
and
xor
add
movsl
in
jmp
xor
and
in
ljmp
and
sbb
mov
pusha
das
test
in
loopne
or
add
outsl
push
loop
data16
pshufw
ret
push
fs
mov
fdivl
sbb
outsl
add
inc
lret
lock
dec
jecxz
sub
dec
sub
cli
add
sti
adc
xchg
fyl2xp1
xor
xchg
push
and
mov
cld
ja,pn
inc
and
outsl
adc
divl
pop
dec
fs
adc
sbb
or
xor
push
addb
cmp
lahf
addr16
vsubps
jl
stc
mov
int
popa
addb
call
fyl2x
pop
dec
pop
xor
outsb
insl
mov
in
jbe
ja
in
and
and
insl
sub
sbb
dec
jmp
push
pop
adcb
ja
out
incl
mov
decb
or
test
jg
add
push
push
mov
xor
ret
data16
jae
inc
lock
outsl
jle,pt
and
outsl
aaa
js
lea
aaa
push
pop
add
fimull
loope
inc
lock
ficoml
imul
pop
dec
dec
inc
arpl
movsl
add
into
fisttps
jmp
rcrl
mov
push
pop
cli
and
aam
sbb
insl
cli
and
imul
imul
jecxz
sbb
jecxz
repnz
repz
divl
mov
sbb
out
jg
mov
lcall
cmp
leave
enter
les
sarl
sti
inc
pop
lahf
stc
dec
xchg
pop
bound
and
and
andl
sti
jmp
pop
cld
fwait
and
dec
xor
add
jl
adc
dec
addb
jno
lds
sbb
out
dec
jg
outsl
repz
xlat
mov
pop
dec
push
mov
sbb
and
bound
shrl
sbb
cmc
rclb
cmpsl
icebp
roll
and
add
jnp
stc
pop
loop
or
orl
int
mov
xorb
or
insb
cmp
sbb
and
push
pushf
outsb
popf
inc
mov
jge
cld
cwtl
sbb
addr16
jle
mov
out
frstor
push
push
jecxz
arpl
mov
add
xchg
or
push
xchg
or
ss
imul
in
xchg
loopne
out
mov
pop
and
jne
push
mov
pop
xchg
mov
mov
or
or
jno
jle
pop
add
out
jp
insb
outsl
out
mov
aad
jo
cwtl
addr16
insl
outsb
add
xor
repz
dec
std
enter
pop
adc
hlt
movb
and
dec
loop
test
idiv
xchg
push
leave
gs
jb
das
push
dec
adc
cli
sub
jl
call
push
push
dec
jecxz
iret
push
jo
sbb
jl
mov
cld
imul
insl
cmp
sbb
scas
subb
push
data16
loope
aad
add
mov
adc
xchg
jge
aam
loop
add
mov
mov
add
in
jnp
jae
xchg
cmc
xor
mov
imul
in
mov
fdivs
jecxz
fistl
adc
in
lret
daa
mov
pop
jecxz
iret
pop
ja
xorb
adc
in
ret
sahf
out
cmp
xchg
out
xor
aas
out
sbb
cmp
sbb
data16
arpl
or
and
cmc
xchg
lret
in
adc
addr16
mov
arpl
pop
mov
in
in
fnstenv
jmp
adc
bound
bound
movsl
fs
into
pop
aad
lret
insl
shrl
testl
sub
insb
xchg
bound
gs
push
xor
shll
or
in
fprem1
popa
in
frstor
pop
mov
pusha
popf
mov
dec
pop
pusha
pop
cs
addr16
dec
push
or
in
mov
add
gs
pop
cs
addr16
push
in
in
mov
push
data16
sub
mov
imul
shrl
in
imul
dec
outsl
stos
daa
movsl
cmp
shll
push
inc
mov
dec
fdivrs
imul
sub
pop
cs
or
aad
adc
arpl
xlat
popf
insl
lcall
or
inc
mov
and
imul
lods
mov
adc
dec
jae
or
outsb
outsl
or
dec
cld
xor
aas
jne
mov
mov
std
hlt
jg
mov
arpl
sub
out
ljmp
sti
or
inc
cmc
sub
dec
add
out
decl
cmpb
push
jb
cmp
add
nop
pop
xchg
and
ss
cmp
add
pusha
sbb
in
xor
push
xchg
add
gs
andl
fldenv
imul
mov
adc
into
mov
push
pop
dec
or
leave
data16
xor
fiadds
pop
jae
data16
imul
scas
pop
in
pop
xor
scas
sbb
test
pop
pop
inc
imul
outsb
fwait
cmpsb
fincstp
ja
xchg
test
adc
pop
shl
repz
xchg
adc
cmp
das
addr16
movzbl
jb
test
mov
lret
arpl
call
cmc
add
pop
gs
test
outsl
addr16
xor
shll
cmp
adc
or
insl
rcl
cld
dec
jecxz
popa
adc
arpl
bound
bound
dec
gs
arpl
push
pop
cs
fs
jmp
jb
pop
outsb
out
jnp
sahf
gs
das
lcallw
movd
iret
leave
outsb
fwait
cmpsb
imul
insl
mov
sbb
adc
imul
mov
jo
popa
push
push
loope
or
xor
lret
lods
inc
cmpsb
xor
or
lcall
adc
pusha
lcall
ss
pop
movsb
fs
adc
fildll
imul
shll
or
jp
or
mov
xor
sub
cs
out
mov
leave
data16
sti
gs
imul
push
jno
ret
pop
dec
insl
add
dec
outsl
push
jb
incl
lret
sti
inc
pop
bound
inc
arpl
clc
mov
jle
pop
outsl
dec
jo
daa
push
cmp
jno
std
xchg
das
jl
mov
jo
inc
daa
dec
outsb
popaw
icebp
pusha
push
insl
addr16
insb
fs
cmp
xor
pushw
imul
sarb
sti
out
inc
jne
outsb
daa
pop
popf
outsb
pop
js
jno,pn
dec
insl
pusha
outsb
clc
jp
xchg
out
cmp
push
add
insl
jo
pop
push
dec
mov
pop
jo
stc
inc
imul
mov
in
add
ja
ds
jns
push
insl
mov
inc
imul
jb
adc
sti
inc
xchg
inc
inc
pop
addr16
decb
mov
xchg
pop
addr16
push
bound
ds
pop
pop
imul
lahf
add
jo
inc
mov
fcomip
cli
outsb
pop
or
cmp
cmp
mov
inc
pop
and
rolb
add
jo
cmp
push
sub
ds
insl
mov
push
loopne
xor
pop
addl
inc
imul
bound
dec
pop
pop
pop
jb
mov
dec
mov
cmp
mov
insl
pushl
adc
push
pop
outsl
inc
bound
dec
data16
pop
outsl
lahf
insb
std
ds
jb
mov
incl
insl
aas
insl
outsb
insw
dec
std
cmp
pop
imul
pusha
imul
and
test
push
mov
pop
addr16
and
lods
ret
jge
pusha
imul
out
dec
lret
fdivrl
std
pop
imul
push
sti
dec
or
mov
jmp
pop
outsl
outsl
aas
cmp
mov
das
inc
inc
dec
dec
inc
dec
sub
cmp
test
mov
cmp
jno
push
cli
jbe
pop
insl
arpl
dec
sbb
pop
test
std
and
dec
popa
arpl
pusha
js
lods
rolb
daa
dec
add
lods
negb
jge
inc
cmp
test
pop
clc
outsl
insl
push
jae
clc
adc
jnp
cmp
dec
pusha
pusha
arpl
cld
cmp
sbb
inc
insl
insl
pop
imul
ds
outsb
jo
pop
push
dec
jle
movl
mov
std
push
pop
inc
insb
and
clc
dec
arpl
imulb
push
punpckldq
and
push
ljmp
dec
cmp
mov
inc
pop
popa
xor
mov
popa
repz
sbb
push
push
ds
cs
cli
aas
rcrb
jecxz
aad
pop
arpl
xchg
xchg
mov
or
ja
adc
fwait
mov
test
or
pop
mov
arpl
pop
mov
sub
outsb
outsb
fs
dec
inc
cmp
aas
inc
cmp
mov
dec
sub
xorl
fnstenv
dec
popa
insb
dec
cmp
pop
sub
sub
sti
mov
pop
shl
mov
bound
mov
fs
pop
mov
addr16
pop
fs
cli
pusha
pop
cmp
clc
outsl
pop
loopne
lock
cli
fstpt
fildl
inc
sub
clc
cmp
dec
cmp
mov
pop
or
pop
or
arpl
int3
mov
or
imul
mov
loope
mov
fs
gs
aad
adc
jno
inc
addr16
arpl
fdivr
jnp
fs
cli
popf
std
cmp
pop
pop
inc
out
bound
mov
jae
push
pop
mov
bound
jno
push
int3
lock
push
pop
fs
std
dec
inc
imul
popa
imul
clc
rcr
sbb
iret
inc
push
push
pop
testl
lcall
daa
sbb
jo
in
movsb
sti
sub
inc
mov
sbbl
cmp
sub
outsl
xchg
mov
daa
push
cmp
cmp
dec
movsl
add
cmp
pop
leave
jecxz
pop
hlt
aaa
cmp
cmp
cmp
cmp
cmp
cmp
aaa
pop
push
insl
fs
push
outsb
cmp
push
ss
and
fistps
xchg
pop
push
pop
xor
push
jae
sbb
gs
pop
call
pop
push
mov
cmp
jge
cmp
sub
dec
pop
inc
jo
dec
outsb
aaa
cmp
imul
pop
daa
insl
cmp
push
fstpt
shr
insl
ret
cmp
outsb
jno
inc
push
movsl
ret
insl
pop
xchg
pop
lods
dec
in
outsl
ja
sub
aaa
cmp
dec
fs
push
cmp
aas
inc
clc
repz
sub
add
pop
arpl
ds
popa
push
push
aaa
push
mov
cmp
fs
push
pop
push
cmp
pop
or
xchg
pandn
mov
dec
mov
arpl
mov
addl
ja
inc
movb
pop
jecxz
push
sub
push
fidivrl
dec
cmpb
dec
sub
inc
flds
cmp
jp
call
cmp
mov
pusha
or
imul
pop
pop
pop
push
push
push
aas
ds
cmp
imul
outsl
adc
pushf
mov
cmp
inc
pop
fwait
xchg
cltd
cs
and
jmp
dec
xchg
pop
pop
bound
arpl
ja
cld
cmp
pop
cmp
push
pushw
cltd
xor
mov
clc
lahf
rol
rorl
ds
push
std
push
jg
popa
das
jl
jnp
test
inc
cmp
cld
inc
dec
mov
jne
sub
push
dec
sub
or
sub
pusha
arpl
fs
inc
push
rcl
arpl
scas
or
icebp
fiaddl
pusha
jno
sub
adc
push
sub
test
mov
mov
pop
inc
dec
inc
inc
xchg
insl
jmp
out
incl
insl
lahf
outsl
fs
mov
cmpsb
int3
pop
mov
or
je
mov
ret
cmp
and
int
mov
mov
ficoms
pop
sbb
jo
sbb
addr16
hlt
add
dec
jne
push
loope
int3
or
cmp
dec
fdivr
outsb
and
or
aaa
fimull
xor
pop
jno
ja
pop
sub
repnz
pop
insl
xchg
jmp
inc
lods
int
pop
or
jmp
pop
lcall
fdivp
adc
dec
push
inc
dec
dec
and
pop
pop
xor
lea
fcoms
push
cli
cmp
fcomi
or
cld
xchg
sti
pop
and
outsl
mov
cmpsb
fcompl
push
dec
sti
dec
popa
mov
mov
inc
xor
sub
xor
cld
pop
xor
or
mov
push
imul
stc
pop
addr16
jmp
push
insl
sti
mov
pop
pop
dec
sti
jge
stos
push
sbb
ljmp
mov
add
sbb
push
lret
in
rep
and
push
or
push
xor
pop
data16
mov
cs
inc
push
xor
pop
insb
ja
imul
push
add
add
call
cmp
arpl
aas
inc
dec
fildll
mov
inc
jnp
insb
mov
insl
in
fdivrs
pop
testl
mov
mov
in
add
push
negl
xor
loope
sbb
mov
pop
adc
xor
adc
sbb
popa
inc
pop
xsaves
or
inc
cmp
iret
or
or
pop
insb
adc
xchg
add
or
fwait
push
mov
jno
push
ljmp
mov
jmp
insl
push
bnd
cmp
daa
mov
mov
icebp
cmp
sbb
pop
idiv
insl
and
mov
mov
sahf
mov
dec
dec
icebp
into
lret
lret
fbld
pop
sub
push
sub
xor
sub
sbb
or
sub
popa
dec
mov
stc
stc
scas
add
cli
xor
jl
or
and
aaa
push
clc
das
sub
add
jne
mov
data16
daa
stos
movsl
jmp
xchg
aas
inc
imul
std
bound
insl
insl
jne
pop
lods
clc
ljmp
lods
adc
mov
out
lret
test
dec
stos
ss
and
fnsave
sub
lahf
and
and
out
dec
mov
imul
xor
stos
mov
mov
rcl
out
mov
es
das
mov
lahf
pop
mov
add
loopne
pop
movsl
inc
add
jae
fwait
je
and
mov
pusha
mov
dec
mov
stos
outsl
push
push
imul
ja
sub
dec
xchg
loop
imul
dec
pop
cli
sub
outsb
mov
push
jne
ds
inc
xchg
add
mov
pop
pusha
mov
push
inc
dec
movsl
or
jo
cmp
add
ljmp
enter
xchg
arpl
and
pop
outsb
pop
sbb
std
test
shrb
lds
inc
inc
inc
dec
xchg
pop
lods
cmp
jecxz
ss
dec
dec
or
or
push
imul
jg
rcl
sbb
sbb
dec
dec
sub
sub
add
fdivl
and
sub
push
ljmp
daa
sub
push
cmp
lock
inc
cmpsb
inc
mov
je
sub
dec
dec
bound
fbstp
sbb
inc
imul
outsb
adc
incl
repz
dec
data16
lret
pop
sub
sub
and
lods
dec
inc
sarl
sbb
and
mov
fs
sub
and
add
imul
cmp
pusha
bound
cmp
pusha
jno
add
pop
mov
dec
push
dec
sbb
sub
push
cs
add
imul
outsl
dec
mov
mov
and
or
cmp
pop
mov
inc
pop
push
jo
xor
xor
imul
mov
mov
pop
sarl
popf
insb
or
outsl
mov
test
cmp
xor
js
sub
fcmovnbe
mov
pop
test
imul
sub
and
sub
xor
xor
mov
fildl
xor
sub
push
js
sub
add
mov
jl
arpl
jne
adc
das
sub
sbb
mov
jo
pop
pushw
pop
pop
inc
pop
dec
outsb
push
dec
fldt
test
xchg
pop
sub
sarl
stc
mov
outsw
sub
andl
pop
mov
or
ss
mov
jno
add
or
rcrl
adc
sub
jno
xor
sub
lea
mov
pop
xchg
pop
test
jae
cs
sbb
sbbl
inc
inc
imul
mov
lods
popa
push
xor
dec
push
pop
push
outsl
shl
pop
xor
arpl
sbb
push
out
ret
pop
aad
pop
cmp
std
pop
adc
ret
dec
jae
xor
fwait
inc
mov
adc
cmpsb
cmpl
daa
sub
daa
and
sub
sbb
and
lea
shl
push
test
sub
xor
test
pop
das
sub
in
test
sub
repz
or
popa
sub
cmp
repnz
cmp
pusha
sub
sub
mov
xor
dec
xor
cwtl
lahf
arpl
xor
push
pop
outsb
negl
mov
jp
pop
popa
mov
sub
ja
sub
outsb
je
decl
mov
mov
cmc
jo
sub
mov
xlat
arpl
inc
popa
pop
aaa
push
dec
push
imul
imul
pop
popa
arpl
imul
mov
aas
orl
jne
lea
push
ja
jb
jbe
notl
fwait
jecxz
aas
jae
inc
lds
bound
pop
cmp
lea
int3
mov
mov
cmp
pop
mov
inc
hlt
test
xchg
cs
dec
cmc
pop
bound
shrl
lock
aas
sbb
xor
inc
std
ja
inc
scas
cmc
jecxz
pop
addb
arpl
inc
jp
push
cmp
fs
mov
mov
fistpl
dec
phaddd
popf
popa
popa
call
inc
ja
dec
insb
adc
inc
testl
sub
cmp
pop
dec
xor
movsl
xchg
mov
scas
mov
cs
test
imul
cmp
dec
popa
aas
cmp
sub
dec
xor
push
or
inc
into
inc
out
das
jg
out
pop
pop
aas
daa
arpl
push
xor
sbb
sbb
gs
insb
jecxz
xchg
push
movsl
lds
jg
inc
ds
inc
inc
inc
lock
sub
dec
dec
dec
jae
push
dec
push
push
push
mov
dec
xchg
shrb
pop
shll
push
mov
or
je
dec
inc
cmp
jo
pop
aas
dec
out
insb
outsl
mov
stos
push
clc
dec
inc
push
mov
out
clc
push
inc
addl
insb
dec
jne
pop
xchg
xor
dec
insb
inc
jecxz
pop
ud1
pop
pop
inc
imul
leave
aas
dec
inc
sub
sub
outsl
inc
in
mov
add
cmp
cmp
mov
inc
das
push
je
sub
jae
mov
push
and
test
ss
inc
sub
imul
pop
daa
dec
inc
fcos
mov
mov
add
aas
sub
outsl
aaa
pop
lods
dec
fucomi
iret
outsl
cmp
add
xchg
sbb
loopne
daa
or
push
stos
push
pop
movsl
xchg
xchg
imul
in
cmp
add
cld
incb
xor
mov
shll
xchg
cltd
ss
xor
and
push
sub
shrl
setne
push
pop
and
sub
andl
in
fimull
sbb
adc
loopne
push
pop
sbb
xchg
or
bound
push
mov
jno
stos
jo
das
lock
imul
jne
mov
les
mov
add
push
xlat
cmp
add
hlt
adcb
dec
pop
je
push
push
fs
stos
dec
and
xchg
sub
shlb
dec
test
adc
shll
jno
jmp
push
xchg
out
cmp
ror
pop
or
das
std
mov
mov
inc
sub
sub
sub
sub
sub
cld
sub
sub
cs
sub
inc
cs
jmp
jnp
test
mov
mov
sub
ds
cs
sub
ljmp
xchg
das
pushf
sub
cs
das
lock
das
pusha
cld
jg
test
pop
sub
in
in
xor
sub
dec
movsb
das
dec
sub
xor
das
adc
sub
xor
je
xchg
xor
push
mov
jbe
xchg
cwtl
xor
shll
loope
ljmp
jg
pushl
xor
leave
xor
das
xchg
shll
cmc
xor
xor
xor
ss
aaa
call
sahf
xchg
xor
aaa
mov
ret
cmp
xor
out
xor
cmp
adc
sbb
sahf
cmp
cmp
inc
cmp
xor
cmp
aaa
les
call
cmp
fidivrs
lock
sysexit
adc
adc
cmp
dec
cmp
jg
ljmp
or
jnp
xchg
mov
mov
or
or
sbb
mov
fcmovnu
cmp
sbb
adc
lcall
sub
sub
jg
movsb
sub
das
fsubrl
cs
xor
mov
imul
cwtl
sub
loope
loop
stc
sub
add
or
sbb
outsl
xor
xchg
xor
stos
pop
clc
in
lds
xor
pop
xor
xor
out
dec
xor
xor
xor
xor
xor
lahf
and
ss
xor
cltd
xor
xor
ss
pushl
ss
xor
xor
ss
xor
aad
out
divl
pop
xor
jg
cmp
mov
fistpll
jmp
ss
cmp
aaa
lret
mov
loopne
sbb
adc
cmp
pop
mov
leave
cmp
aaa
fdivrl
in
add
sbb
das
cmp
pop
cmp
sti
pushl
lea
lahf
cmp
ss
das
add
aaa
xor
cmp
inc
cmp
decl
jbe
mov
nop
cmp
lds
dec
mov
pop
popa
sub
sub
sub
ljmp
pop
sub
mov
sahf
sub
sub
sub
sub
sub
aad
loope
out
pop
clc
or
add
cs
sub
sub
sub
cld
or
sub
cs
jae
xchg
cs
push
sbb
and
loop
das
imul
in
in
cs
mov
inc
das
imul
xor
xor
das
push
xor
sub
aas
xor
bound
cld
pop
incb
xchg
call
inc
xor
fidivs
das
out
xor
jmp
adc
xor
jge
fs
ss
incl
mov
fnstenv
push
xor
xor
pushl
xor
cmp
inc
cmp
gs
push
cltd
xor
aaa
fnstenv
out
out
cmp
xor
decl
aaa
add
adc
xor
inc
xor
cmp
movsb
cmp
out
xor
cmp
adc
dec
das
cmp
sbb
cld
cmp
jbe
scas
test
adc
cmp
decl
cmp
cmp
in
cmp
cmp
aaa
pop
lcall
cmp
cmp
dec
cmp
js
cmpl
mov
cmp
cmp
sub
mov
adc
sbb
cld
lcall
sub
inc
arpl
jb
jnp
lahf
sub
sub
sub
sub
ret
cs
sub
pop
sub
sub
xorl
sub
cs
sub
sub
jg
sub
ja
aaa
das
lcall
fs
inc
pushl
sahf
cs
sub
xor
xor
out
xchg
sub
push
xor
ss
loope
out
mov
mov
mov
xor
sbb
lcall
or
pop
xor
cmp
push
xor
cmp
test
xchg
aaa
mov
adc
cmp
std
sbb
xor
xor
xor
das
or
lcall
xor
xor
xor
cli
incl
andl
xor
xor
xor
dec
mov
xchg
jle
imulb
repz
xor
xor
lds
xor
aaa
add
call
mov
xor
xor
ss
xor
pop
xor
xor
hlt
xor
mov
xor
aaa
pushl
push
cmp
lcall
imul
xor
jg
xchg
mov
xchg
xor
aaa
mov
shlb
cmp
xor
outsl
clc
pushl
or
pandn
aaa
arpl
nop
ss
scas
xor
mov
cmp
aaa
jns
cmp
mov
fists
cmp
xor
cmp
pop
pushl
ss
cmp
cmp
cmp
arpl
jp
mov
push
push
mov
test
cmpl
das
insl
push
cs
sub
outsl
pop
cli
das
leave
sub
sbb
sub
xor
outsb
sub
and
adc
xor
sub
or
mov
add
mov
push
pop
cs
pop
or
dec
push
pop
std
jg
push
insb
outsl
imul
and
inc
push
push
inc
push
inc
pop
push
outsb
arpl
fisubrs
je
and
pop
cmp
outsl
data16
popa
jb
mov
dec
imul
push
cmp
dec
push
push
insl
mov
outsl
popa
insl
sbb
arpl
add
mov
add
ja
adc
popa
je
jae
std
in
fs
and
jo
jae
arpl
arpl
mov
imul
cmp
lret
jbe
fldt
adc
jo
mov
lock
in
insl
out
fisttpl
pop
push
or
jbe
or
insl
pop
jns
jo
adc
push
jb
jns
fcmovnu
push
sti
xor
xor
sub
push
gs
add
cwtl
imul
aas
jb
outsb
cmp
xor
and
inc
add
ret
ja
in
mov
outsl
outsb
imul
jae
mov
fldt
daa
inc
adc
push
mov
sub
lahf
and
gs
popa
push
ds
pop
inc
js
adc
jb
push
adc
jns
dec
cmc
jo
aaa
fucomi
data16
fs
imul
insb
andl
jne
dec
dec
inc
mov
bound
ret
je
inc
fs
lds
je
dec
lods
inc
cvtps2pi
in
jae
add
cmovge
pusha
outsl
out
sub
cmp
push
or
imul
leavew
inc
push
or
dec
pcmpeqw
mov
pop
cmpsl
sbb
dec
jae
xor
fiadds
shll
movd
jbe
roll
fdivrs
jae
xchg
jns
add
out
fnstsw
and
fs
daa
push
sti
out
out
in
imul
insb
sti
imul
adc
or
imul
sub
xor
jae
popa
mov
xor
dec
fs
cmp
push
inc
cmp
nop
lret
add
pusha
fwait
sub
call
add
add
xor
xor
mov
adc
fistps
ja
sti
cwtl
leave
sti
xchg
dec
pop
enter
adc
std
in
mov
out
ja
outsl
add
mov
dec
xchg
add
push
rcr
fcompl
xor
add
mov
lcall
pusha
inc
repz
cmp
fwait
sbb
outsb
adc
nop
rclb
lcall
in
psubd
and
or
add
add
int3
test
int3
icebp
xchg
add
orb
pop
add
add
lahf
rolb
cmpsb
test
or
call
dec
sbb
pop
or
mov
es
ret
mov
and
pop
and
xorb
mov
add
push
repnz
lret
lcall
xchg
pop
jecxz
js
in
test
iret
addb
push
adc
das
jmp
add
add
inc
dec
push
movsb
addb
add
inc
pop
push
pop
test
add
pop
adc
add
jg
xchg
incl
rolb
nop
add
add
sub
cltd
shlb
enter
jns
add
push
sbb
dec
cld
add
add
add
imul
jg
sub
jg
sub
add
mov
add
add
ja
push
add
jb
jbe
sub
add
add
add
mov
dec
out
mov
or
add
je
jb
jbe
push
jns
gs
xchg
cmpb
insb
outsb
or
pop
lods
mov
add
add
cmovae
outsb
stc
divl
gs
je
pop
dec
popa
jo
addr16
mov
out
ja
push
imul
insb
jne
push
ds
outsb
insl
and
push
imul
dec
push
add
ret
mov
jne
push
gs
js
arpl
fiadds
push
outsl
outsl
insb
add
xor
push
imul
je
outsl
jbe
daa
inc
pop
push
gs
insl
insl
jo
dec
popa
insl
push
inc
cs
scas
fstpl
jb
push
dec
push
jb
jae
mov
jae
adc
outsb
or
dec
add
insb
jle
push
xchg
insb
divb
jne
dec
outsb
outsw
inc
xchg
and
popa
insb
pop
je
push
jne
repnz
adc
xchg
outsb
fwait
push
sbb
sahf
lods
ud2
push
popa
imul
sbb
mov
das
dec
bound
je
and
imulb
push
lods
jae
outsl
outsb
fcomp
push
aad
je
jb
xor
mov
dec
outsl
popa
fs
jno
fwait
jns
jns
jne
lods
mov
inc
mov
adc
xchg
mov
adc
and
mov
ss
imul
jae
decl
int
sbb
cwtl
call
push
jmp
adc
pop
adc
in
lcall
incl
or
call
leave
adc
mov
decl
jg
mov
popf
or
and
add
mov
pushl
add
nop
add
or
and
incl
sbb
ljmp
or
mov
fldt
or
and
dec
out
sub
jg
mov
push
adc
aaa
push
out
dec
out
ud0
mov
adc
xchg
add
insl
sbb
dec
sub
cmp
fldt
push
xor
adc
lock
lret
mov
pop
or
icebp
push
testl
mov
lret
mov
test
jno
mov
fisttpl
cmpsb
pop
push
push
dec
mov
mov
xor
or
insl
inc
bound
arpl
call
movsb
out
mov
mov
sbb
rorl
push
jg
sahf
arpl
data16
gs
jo
pop
push
cmp
pop
xor
lods
lock
pop
insw
sahf
or
insl
or
data16
pusha
movsl
fs
aaa
push
mov
adc
data16
add
je
mov
addr16
jb
jae
int
fdiv
arpl
outsb
jle
push
nop
mov
pop
push
insb
or
insl
bound
movsl
repz
or
jbe
repnz
mov
inc
sbb
outsb
arpl
inc
int
incb
js
jb
dec
shlb
jo
jnp
div
outsb
je
je
insl
mov
arpl
push
rcrl
aas
sbb
popa
loopne
push
aaa
rorl
fwait
push
ja
aaa
jbe
sbb
rorb
inc
and
popa
addr16
jae
cwtl
inc
push
pusha
mov
xchg
imul
mov
mulb
subb
inc
or
lcall
or
and
xor
outsl
push
jne
jne
jp
pop
xchg
adc
stos
int
xchg
xor
push
xor
or
imul
cmp
inc
jne
jp
or
pop
fstpt
xlat
or
outsl
jb
popa
sbbb
test
inc
cs
pop
inc
int3
fisttpl
loopne
add
add
or
adc
cmp
aas
pop
sidtl
add
mov
lock
xor
cmp
inc
add
add
xor
sbb
sarb
pop
push
sub
rolb
mov
in
inc
add
mov
sub
je
js
loop
nop
xor
xchg
add
jb
popa
sub
lsl
adc
flds
es
roll
pop
daa
rorb
or
repz
lock
cld
in
sbb
mov
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
