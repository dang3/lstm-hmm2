mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
nop
jno
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
sbb
pusha
scas
sti
push
push
push
push
adc
mov
rclb
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
mov
das
and
enter
call
movsl
and
movl
pop
sbb
ja
add
mov
or
pop
mov
pop
mov
daa
ret
jmp
fldz
cmp
add
mov
fsubrl
mov
aas
push
mov
pop
add
xchg
lahf
push
push
mov
and
test
dec
jl
or
loope
mov
int3
lea
btc
mov
inc
inc
pop
ret
icebp
pop
faddl
sbb
test
mov
enter
je
mov
out
out
dec
lea
adc
push
xor
mov
add
add
xchg
aas
fs
or
jne
and
call
faddp
ret
cs
dec
push
mov
jecxz
and
xchg
push
jb
mov
orl
int
pop
pop
repnz
in
ret
sbb
sbb
mov
add
adc
ss
lahf
or
cmp
add
icebp
fwait
sti
addr16
test
jne
sbb
lea
shr
sub
xor
in
sarl
scas
cmpw
jne
lret
push
pop
cmp
sbb
neg
add
or
fistl
push
or
xor
lds
inc
pop
pop
adc
adc
mov
out
xor
test
push
aaa
std
mov
pop
lock
sub
push
mov
or
je
pcmpeqd
fsubrl
jle
mov
or
xchg
cmp
push
jne
test
mov
mov
cmpsb
push
outsl
add
adc
in
lea
jecxz
add
xor
jae
out
decb
add
mov
jl
mov
fbstp
lea
rep
stos
stos
push
push
ja
push
pop
sbb
or
inc
push
adc
adc
sub
clc
pop
pop
push
or
pop
add
dec
std
pop
popa
idivl
adc
dec
push
rolb
and
into
mov
mov
or
shl
add
pop
sti
inc
mov
not
sub
lea
mov
push
jmp
push
and
mov
fnstsw
mov
push
push
lea
and
push
pop
or
sbb
out
mov
adc
dec
sbb
dec
in
mov
sbb
cmp
xchg
inc
push
adc
stos
mov
sub
xchg
sbb
mov
mov
pusha
push
xor
testl
into
sub
cs
das
jnp
xchg
inc
push
add
mov
sub
popa
orl
sub
xchg
test
push
push
imul
add
je
mov
mov
jb
add
or
pop
idiv
fsubrs
lcall
adc
les
xlat
jno
or
int
push
pop
mov
push
jmp
dec
and
std
in
mov
push
push
leave
push
sub
mov
das
mov
loope
fs
mov
adc
sub
push
test
loop
sbb
sbbb
int
inc
enter
orl
in
lea
int
or
or
stos
push
lret
cmp
or
push
rorb
add
sbb
add
jne
jecxz
dec
lcall
mov
pushf
push
fwait
imul
sub
les
std
enter
or
push
xor
rcll
mov
int3
jl
add
jp
push
mov
mov
dec
scas
and
adc
hlt
insb
xchg
sub
mov
push
or
sub
or
ja
xor
push
mov
push
or
cmp
popa
xchg
shrb
outsl
or
push
inc
lock
shld
lock
sbb
aad
cmp
out
insl
leave
add
inc
incl
lea
mov
push
or
pushw
push
sbb
or
sub
les
btc
push
pop
push
adc
and
fmuls
or
xor
sbb
dec
inc
push
in
adc
adc
adc
dec
or
mov
test
shll
test
sbb
mov
push
cmpsb
pusha
cmp
jne
push
xlat
xchg
lcall
sub
xchg
ss
outsl
pop
lcall
jge
jne
test
ja
fisttpl
mov
pop
add
lea
in
inc
pop
add
sbbb
push
js
cwtl
push
push
stos
nop
mov
outsb
jmp
sbb
or
aad
sub
push
jg
pop
sbb
dec
push
js
fidivrs
push
repnz
pop
add
pop
xchg
mov
mov
popa
fs
adc
dec
dec
pop
cmp
and
jns
ss
push
mov
shll
clts
stc
loopne
arpl
pop
cltd
in
xor
push
push
in
leave
xchg
xchg
jge
dec
lret
push
add
shrb
push
ret
pusha
add
rcrb
pop
inc
mov
cmpsb
fstps
jae
hlt
push
or
lret
mov
jae
mov
pop
adc
decl
into
insl
mov
mulb
adc
xor
inc
dec
cwtl
inc
andl
cmp
jbe
sub
push
clc
push
push
add
push
ret
or
int
xor
sub
push
or
pop
or
cltd
xchg
mov
cmp
sti
pop
cltd
sub
pop
add
push
mov
push
dec
ljmp
sbb
xlat
push
pusha
fdiv
inc
dec
in
add
dec
jne
lahf
cmp
sbb
leave
mov
js
loopne
fadds
jmp
mov
outsb
add
xchg
out
repz
movsb
adc
int3
push
inc
aas
push
outsb
push
sub
add
pop
jae
ret
scas
adc
lea
adc
les
mov
sub
sub
sti
andl
or
pusha
js
shrl
push
adc
mov
sbb
push
pop
and
mov
pop
xchg
pop
mov
xlat
clc
lock
mov
jg
fisubs
inc
sbb
jmp
not
xchg
scas
push
or
stos
lret
mov
and
subb
insb
dec
sbb
mov
daa
push
dec
mov
js
mov
or
es
adc
pusha
xchg
pop
xor
add
ds
or
mov
lods
add
pop
xor
fwait
sbb
nop
adc
xchg
gs
in
cmp
int
cmp
popf
jnp
rcrb
xor
in
scas
xor
or
add
xchg
inc
jg
out
cmpsl
leave
and
cmp
pop
adc
mov
sbb
jecxz
adc
sbb
sbb
sbb
int
mov
inc
push
icebp
adc
or
xor
pusha
aam
sbb
xlat
push
jge
cmp
xor
mulb
faddl
int
sub
adc
iret
sbbb
push
lods
push
aam
add
push
mov
rorl
add
cmp
pop
cmp
sbb
ror
sbb
mov
dec
scas
push
pop
in
es
add
sbb
nop
mov
sarb
push
mov
sbb
inc
lret
pop
dec
inc
and
push
add
xlat
lret
inc
loopne
lods
add
fstpt
mov
or
or
rcrb
xor
inc
or
insl
lcall
mov
xchg
mov
sbb
aaa
nop
out
lcall
pop
and
aas
push
inc
fldt
xor
cmpsb
dec
mov
cld
mov
cmovbe
jb
loope
add
mov
mov
and
movl
pop
adc
mov
out
fadds
inc
inc
mov
add
push
sub
popa
sub
sub
xchg
pusha
sub
test
inc
mov
rorl
adc
lds
notl
mov
test
or
std
xchg
aas
adc
enter
shlb
sbb
cmp
stos
sub
sub
je
js
inc
js
pop
jle
push
cmp
jne
mov
mov
sbb
dec
in
popf
or
fwait
js
mov
js
sbb
jae
adc
or
xchg
repz
ret
lock
sub
fdivrl
add
jl
pop
out
pushf
test
push
into
xor
insb
sbb
in
not
add
jo
mov
imul
mov
imull
pop
sbb
or
mov
jge
mov
or
jmp
and
fldl
loope
add
adc
loopne
push
popa
pusha
into
gs
cltd
xchg
shll
cmp
xor
and
lds
sbb
sti
inc
inc
data16
lea
or
aam
js
mov
das
push
sbb
or
sbb
fildl
fwait
or
push
push
adc
rcl
icebp
lcall
and
aaa
sub
dec
sbb
inc
push
fs
adc
pop
pusha
sar
sub
push
xchg
pop
cld
xchg
mov
inc
clc
lods
mov
push
mov
test
mov
jae
lret
ds
shll
add
adc
movsb
jecxz
xor
mov
js
sbb
lods
and
jae
setns
cmc
adc
push
nop
pushf
jp
sub
cmp
pop
sahf
push
in
jo
and
clc
adc
mov
insb
or
push
and
sub
lret
sbb
insb
mov
adc
jg
int
fldl
and
mov
jae
cmp
dec
and
sbb
sbb
rcr
insb
jl
sbb
in
sbb
or
ljmp
in
js
mov
repz
dec
add
push
ret
jnp
mov
pop
lock
sub
sub
inc
cltd
sub
fs
out
sbb
push
sub
or
adc
push
mov
mov
jnp
pop
pop
pop
fs
mov
daa
lods
mov
mov
mov
ret
movups
fld
xchg
outsl
invlpg
or
mov
pop
cmp
shlb
nop
mov
mov
push
or
sbb
push
daa
int3
dec
mov
sbb
push
rclb
shll
out
adc
test
lock
lea
data16
arpl
mov
rcll
xchg
or
mov
and
inc
inc
cmp
cmp
inc
mov
and
hlt
repnz
in
nop
addr16
sbb
dec
or
inc
leave
aaa
push
mov
and
pushf
push
repnz
mov
mov
add
repnz
dec
lea
adc
fsubrs
jmp
jo
push
push
add
sub
jns
lret
sbb
or
lock
lcall
xchg
mov
and
inc
xor
enter
pushf
ja
in
mov
aad
or
adc
pshufw
sbb
dec
jo
orb
jl
dec
inc
cmpsb
mov
not
mov
xor
int3
lcall
sub
pop
add
add
or
add
fmull
xchg
mov
pop
dec
dec
mov
add
pop
jns
cmc
and
shlb
mov
xor
mov
sub
mov
adc
fs
push
push
jo
bound
add
lds
mov
push
sub
adc
dec
jae
add
inc
xor
mov
iret
stc
arpl
sub
xchg
in
aad
mov
maxps
dec
pop
or
push
mov
push
push
push
inc
fwait
or
insl
push
adc
adcl
jnp
out
add
repz
xor
insb
cmp
std
mov
insl
and
test
movb
sahf
pop
or
or
sub
invd
fs
adc
jne
adc
lret
jno
push
cli
or
ljmp
xchg
fs
out
adc
pmuludq
or
or
test
xchg
add
jno
jp
inc
outsb
mov
fldenv
in
push
push
xor
js
or
inc
and
lods
jp
andb
or
sbb
js
shrb
or
xor
rorl
mov
aad
adc
call
insb
je
jmp
adc
insl
gs
add
xor
jae
mov
loope
daa
jne
push
sti
incl
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
add
sub
pop
mov
inc
inc
cmp
jg
arpl
push
or
mov
mov
addr16
jg
adc
adc
mov
mov
push
cmp
push
jo
mov
push
or
mov
and
pop
sbb
add
add
and
or
xorb
loop
mov
mov
xchg
xor
sub
mov
add
arpl
and
aam
int3
sub
and
and
sarb
mov
test
and
and
and
xchg
nop
mov
test
and
je
insb
push
pusha
pop
pop
push
and
and
push
dec
dec
inc
and
and
inc
cmp
xor
and
and
sub
and
and
and
sbb
adc
and
and
or
add
ds
and
inc
nop
inc
xchg
inc
cwtl
inc
xchg
out
stc
pushf
inc
mov
xchg
xchg
xchg
xchg
lods
mov
mov
mov
and
iret
in
inc
rcl
fsub
and
in
inc
lock
inc
inc
inc
hlt
clc
cld
add
subl
sbb
cld
mov
out
ret
push
xchg
or
jl
mov
pusha
ja
jne
pop
pop
add
ret
push
xor
add
xchg
outsl
in
cmp
inc
push
ss
xchg
adc
cmp
mov
ds
cmp
or
add
es
dec
or
or
mov
or
int
iret
sub
xor
sbb
fsubrl
insb
dec
adc
sbb
adc
sti
sub
adc
push
mov
lea
fldcw
push
or
push
add
mov
xor
out
inc
or
mov
jne
cmpb
jne
mov
fnstsw
inc
or
add
or
mov
mov
repnz
dec
movsb
int3
inc
repz
add
push
sub
jbe
imul
or
push
push
and
cli
mov
xor
inc
in
mov
mov
mov
inc
popa
loope
pushf
adc
mov
lcall
inc
xchg
add
outsl
pop
mov
add
das
cmp
pop
ljmp
pusha
or
mov
loop
xor
cld
xchg
mov
leave
mov
mov
into
ret
push
sub
pop
out
push
lods
pop
test
xor
mov
push
dec
jno
inc
lea
fnstsw
fisubs
adc
sahf
int3
add
fcomps
mov
inc
mov
cmpl
aas
cmp
inc
ds
mov
pop
mov
add
sbb
xchg
dec
add
shll
inc
cmp
imul
shll
cmpsb
cli
or
and
cmpsb
imul
cmpsb
jmp
add
inc
pop
fldenv
dec
xchg
push
in
mov
pop
adc
pop
or
sbb
movsl
leave
adc
mov
jne
jb
or
adc
add
mov
or
mov
jp
nop
insb
fwait
in
xor
adc
add
add
das
xlat
jne
xlat
dec
cmp
or
sub
pop
sub
xlat
jne
push
adc
aaa
inc
out
arpl
movhps
xor
pop
xchg
pop
sbb
mov
daa
push
addl
jmp
scas
das
rdtsc
lcall
fnstenv
lock
or
icebp
testl
mulb
pop
mov
jmp
jno
mov
pop
push
push
scas
jmp
add
out
movsl
addr16
mov
mov
adc
inc
int3
fnstenvs
push
scas
arpl
sar
or
mov
mov
addr16
dec
add
dec
call
ror
mov
shll
xor
mov
lcall
add
xor
shll
sub
cmp
shll
iret
add
pop
outsb
shll
push
dec
xchg
ret
shll
test
addr16
mov
xchg
mov
adc
in
sub
rolb
add
mov
shr
loope
andl
test
cmp
sbb
add
shlb
xor
sub
es
and
mov
lcall
add
cld
xor
lock
ljmp
fdivs
ror
shll
mov
xor
test
pushf
xchg
nop
mov
jle
jb
pop
popa
mov
mov
inc
pop
push
pop
enter
add
imul
pop
str
inc
js
lods
aaa
dec
and
das
lret
or
and
xor
pop
and
nop
xor
and
lcall
xor
repnz
imul
scas
imul
stos
rolb
dec
shll
mov
movsb
sahf
xor
shll
xchg
mov
sarl
outsb
push
xor
pusha
and
dec
pop
nop
and
push
mov
and
mov
das
mov
daa
add
nop
sbb
shlb
orb
mov
aaa
mov
push
dec
cwtl
xor
dec
dec
mov
dec
lock
inc
dec
es
xchg
rorb
cltd
dec
dec
es
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
stos
add
into
cmpsb
aaa
cmp
inc
push
inc
push
dec
xor
cs
insb
xlat
push
xor
or
push
sbb
adc
rolb
lahf
xor
outsl
jg
cvtps2pi
lret
out
push
mov
in
mov
cli
cld
idiv
std
add
clc
cmp
stc
std
in
sbb
cld
or
or
mov
lcall
ljmp
dec
fs
outsb
push
push
pop
imul
insb
insl
outsb
icebp
lcall
pop
popa
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
rolb
sbb
inc
inc
inc
inc
arpl
push
std
sub
and
sub
and
and
add
stc
sub
mov
sub
adc
and
push
daa
xor
sub
xchg
pop
daa
incb
push
sub
outsl
lcall
dec
pop
bound
test
adc
add
add
mov
jno
sbb
push
movsb
jmp
insb
mov
add
or
enter
or
or
sti
sti
pop
ljmp
insb
jns
add
adc
or
cmp
or
or
xchg
gs
lock
sub
fisttpll
add
mov
daa
sbb
jb
lahf
jge
and
leave
dec
sti
push
daa
add
cmpsb
imul
pop
pop
outsl
pop
pop
or
xchg
jg
nop
pop
aaa
cmp
popa
pop
outsb
pop
cld
lea
mov
outsb
fisttps
pushw
fldt
push
lea
out
daa
jmp
or
push
test
pop
mov
sbb
dec
call
mov
or
push
out
dec
push
cmpb
mov
clc
mov
mov
sub
lcall
push
jg
push
imul
mov
xchg
cld
pop
ja
jecxz
movsl
mov
pushfw
call
das
jmp
mov
loope
dec
or
push
jno
jge
das
mov
stc
outsb
cwtl
jne
mov
in
dec
push
jg
call
push
outsl
adc
jge
imul
fs
in
mov
cmp
sub
mov
imul
std
xchg
push
push
jle
push
jo
jle
or
insl
jae
jmp
mov
sbb
mov
jmp
sbb
cli
cld
stc
push
push
data16
push
xor
cli
pop
jmp
lock
or
sti
pusha
cmpsb
cmpsb
test
lods
mov
negl
outsl
in
fstpt
jno
cmp
mov
in
jg
stc
sbb
add
mov
movsl
lahf
gs
dec
jg
std
fsqrt
aam
dec
pop
imul
adc
dec
pushl
cld
xchg
js
add
and
mull
dec
push
cmp
mov
std
or
popa
cld
or
cmpsl
xchg
dec
notl
lods
imul
mov
roll
clc
dec
out
fisttpll
xchg
push
mov
push
pusha
sub
add
fmul
imul
arpl
sahf
adc
mov
pop
in
in
bound
imul
negb
add
movsl
dec
filds
jg
testb
push
repnz
cmp
mov
or
hlt
repnz
mov
dec
clc
mov
dec
push
notb
push
imul
mov
jno
mov
pop
adc
or
daa
or
inc
xchg
jle
sub
in
push
mov
dec
loopne
jae
jecxz
dec
dec
decl
xor
icebp
push
dec
gs
test
lahf
insb
std
insl
add
outsl
pop
sti
into
mov
hlt
mov
in
dec
xchg
test
testl
pop
dec
cmovge
or
jb
dec
gs
jo
dec
jb
stc
pushl
rclb
xchg
mov
data16
jo
clc
roll
inc
cs
lock
jecxz
sub
test
push
dec
int
jle
fcmovnu
pop
jmp
sti
outsb
insl
addr16
dec
or
inc
lods
jge
mov
adc
mov
icebp
repnz
jge
and
add
dec
std
fucomi
jnp
adc
push
dec
dec
xchg
xchg
lahf
fs
pop
mov
mov
jb
xabort
mov
add
dec
dec
dec
dec
arpl
jle
cld
sti
loope
dec
mov
dec
cmpsb
add
mov
adc
ja
mov
xchg
ret
test
addb
inc
sbb
cld
mov
pop
cli
jno
test
jmp
push
fidivl
cltd
decl
push
add
sbb
xchg
sbb
icebp
cmpb
loope
outsl
pop
jo
loope
mov
sbb
sub
mov
in
sub
xor
outsb
sbb
or
ret
in
sti
test
cwtl
or
test
scas
cmp
arpl
das
cld
or
pop
push
push
lods
push
dec
addb
stc
push
fistpll
lcall
and
mov
testb
sti
je
lahf
loop
dec
stc
push
pusha
push
and
xchg
jle
jecxz
inc
sub
out
dec
xchg
lret
fcoml
jg
dec
gs
mov
les
sahf
sbb
lahf
jg
sbb
adc
dec
aaa
mov
push
cld
iret
cmc
bound
jecxz
out
inc
stc
jge
adc
dec
xor
xchg
test
in
sti
inc
andb
out
dec
dec
mov
lahf
or
xchg
and
push
jge
clc
sbb
jnp
pop
cld
imul
repz
in
mov
psubq
pop
bound
xchg
pop
push
rolb
add
les
xor
jb
dec
cld
and
dec
push
jecxz
sbb
push
mov
clc
mov
dec
xor
push
outsb
sbb
push
cli
adc
in
jo
push
inc
movsb
sub
loope
and
idivl
mov
hlt
repnz
dec
xor
sbb
arpl
xchg
lds
push
imul
or
bound
adc
mov
jg
add
lcall
xchg
jns
ljmp
call
shrl
mov
sbbb
test
movsl
mov
popa
xchg
test
in
std
ja
outsl
into
mov
test
cmpsb
sub
ret
mov
xor
fidivl
cmpsb
cld
lea
xlat
xchg
negl
fwait
nop
clc
cmpsl
fs
mov
or
mov
cmp
or
add
pop
and
rorl
incl
xchg
lock
mov
ljmp
inc
sub
xchg
dec
xchg
int
inc
enter
cld
add
arpl
sub
jecxz
iret
xchg
popa
add
arpl
dec
imull
incl
arpl
dec
inc
mov
ja
xlat
dec
adc
dec
daa
inc
cmp
dec
dec
lret
shrb
popf
andb
cwtl
test
cmp
imul
push
cmp
sbb
mov
add
dec
iret
cmp
sbb
xor
inc
clc
shlb
aam
insl
in
pop
sbb
sbb
fistps
loopne
cli
cwtl
lret
outsl
push
popf
cmpsl
jecxz
outsb
push
ret
lcall
or
icebp
les
pop
stos
lods
cld
pop
std
sbb
cld
jg
mov
sub
insl
rcrl
imul
add
mov
sub
in
and
and
sub
dec
xchg
ret
call
loope
mov
test
mov
push
lret
push
mov
cmp
inc
cli
push
mov
add
xor
pop
jns
inc
decw
ds
loop
dec
dec
fcomip
dec
adc
push
outsl
push
pusha
and
xchg
icebp
in
sar
sub
mov
add
std
push
jmp
ret
sub
mov
pop
in
stc
jo
test
and
popa
push
mov
fidivs
add
gs
outsl
ja
mov
inc
call
xor
movsb
inc
aaa
dec
mov
or
arpl
or
dec
cmp
loopne
into
hlt
fbld
fbstp
repnz
loope
ffree
lock
sub
in
inc
aas
pop
sbb
cmc
lods
pusha
xchg
dec
inc
clc
pop
jle
loope
sbb
xchg
loopne
push
xor
push
and
aaa
rcl
push
sub
out
push
sahf
test
js
mov
xor
sub
xchg
pushf
std
in
jg
cld
adc
or
add
add
decb
int3
rol
dec
mov
js
lahf
adc
jmp
fbstp
ret
mov
add
dec
arpl
mov
adc
xor
test
jge
enter
jl
std
jno
sbb
pop
pop
iret
ds
cmc
and
push
clc
push
push
pop
idivl
jb
test
push
andl
push
sub
fidivs
mov
out
ljmp
incb
rcl
mov
sub
mov
int
in
pop
cs
push
mov
dec
dec
out
cmp
cmp
or
cmp
stc
mov
dec
shll
arpl
test
in
and
add
xchg
mov
mov
adc
xchg
call
fsts
inc
hlt
pop
push
jne
emms
scas
loopne
add
ds
or
aaa
int
cld
push
jb
sbb
jecxz
inc
inc
loope
push
push
arpl
mov
lret
mov
stc
pushf
in
jns
push
mov
dec
mov
jo
adc
std
jecxz
mov
rorb
mov
inc
adc
jge
jge
push
outsl
stos
std
out
pop
rorb
and
cmp
test
and
push
and
inc
aaa
icebp
mov
out
int
or
mov
add
sbb
or
fiaddl
in
and
sub
fildll
daa
call
jl
mov
sbb
mov
add
cmp
sar
rcrb
loop
dec
push
sub
pop
cli
adc
test
cmpsb
arpl
jne
xor
out
mul
stos
xor
ret
cmpl
pop
sub
xchg
aaa
je,pn
cmp
jns
aaa
jo
aaa
mov
adc
jmp
or
jle,pt
cmp
ja
jbe
insb
inc
arpl
jmp
sub
pop
incb
adc
in
cmp
bound
cmc
std
pop
in
adc
pop
xor
push
pop
dec
mov
out
cld
fildll
std
mov
push
jno
jnp
out
xor
imul
and
dec
insb
in
gs
aas
mov
cmp
and
inc
adc
push
xorl
jecxz
or
xchg
add
das
xchg
orb
mov
ret
dec
lods
mov
ffree
dec
cmp
cmp
aad
sbb
pop
push
push
mov
or
xchg
add
rclb
sti
xor
fcomip
sbbl
movsl
movsl
sbb
dec
cs
bound
mov
pop
jb
pusha
imul
je
insb
sbb
push
xchg
fs
push
fldt
mov
mov
xor
cwtl
mov
sbb
dec
push
pop
stos
cmpsl
das
out
loop
jle
mov
leave
repnz
and
pop
fildl
cs
out
lcall
push
cmp
outsl
jmp
incb
shll
mov
or
mov
mov
pop
fcmovu
jmp
icebp
ret
mov
mov
add
roll
ds
jmp
aad
adc
sbbb
pop
stc
addb
ljmp
inc
jmp
jecxz
loopne
add
dec
mov
call
xchg
arpl
push
test
cld
lods
jmp
dec
test
cmp
dec
idivb
repz
lea
cmc
roll
cmpsb
add
pop
or
je
add
in
sbb
jle
jl
push
stc
push
pop
int3
loope
decb
mov
inc
repnz
mov
cmp
test
push
cli
jg
push
les
testb
in
dec
pushl
std
xor
adc
in
lret
adc
cld
push
add
xchg
lret
in
shl
xlat
repnz
mov
mov
cli
sbb
loope
fcmovb
mov
lret
out
mov
shll
dec
mov
jnp
lahf
jnp
push
jnp
sahf
fwait
adc
cli
pop
insl
arpl
mov
sbb
jp
add
arpl
mov
or
fisttps
stos
adc
adc
jbe
enter
imul
push
mov
jecxz
mov
icebp
and
aad
clc
dec
push
push
inc
jecxz
mov
out
xchg
in
mov
repz
mov
inc
in
pop
dec
test
push
call
outsl
jo
jb
stc
push
bswap
ja
imull
arpl
pop
ja
mov
outsb
cmp
dec
in
dec
dec
lock
or
push
adc
repz
negb
mov
ficomps
xor
jno
mov
pop
adc
dec
test
jecxz
xchg
or
in
imul
xrelease
dec
repz
test
dec
clc
or
das
aaa
popf
aad
cmp
icebp
fwait
mov
push
repz
cs
lret
in
jnp
dec
div
testl
das
push
pop
std
jae
jecxz
cltd
xlat
cld
sbb
or
in
xchg
addr16
sti
cmp
or
xchg
imul
aaa
icebp
insl
cli
or
dec
jecxz
mov
pusha
cs
dec
cmp
pop
notl
rclb
inc
or
push
in
std
cmpb
pop
jnp
jle
std
xchg
lret
lods
imul
out
jl
xchg
pop
cs
mov
std
jl
push
adc
sub
sti
pop
loop
inc
gs
das
icebp
pop
pop
push
adc
pop
insl
cmc
push
popl
movsb
jns
jmp
mov
mov
lret
cmp
ficoms
pusha
stc
xchg
and
in
out
add
dec
lock
push
pop
xchg
pop
xchg
add
add
push
sub
arpl
xchg
cmpl
popa
cmp
jl
or
incl
incl
pop
push
pop
xchg
sbb
aad
insb
mov
je
or
add
pusha
stc
add
das
push
filds
jbe
add
aas
dec
inc
add
xchg
mov
sahf
xorl
or
dec
mov
add
hlt
jg
test
aas
cld
clc
in
insl
sti
add
lds
test
pop
cmp
pop
test
xchg
jne
rcrb
aaa
arpl
call
into
cmp
lock
les
popa
sti
fldt
std
mov
add
les
das
jno
cwtl
lods
add
add
imul
outsl
jo
sub
cmp
push
mov
outsl
stos
sarb
push
sbb
mov
adc
sub
cli
dec
dec
addr16
jge
clc
and
or
subl
dec
add
loopne
xchg
cmpsl
aaa
cmp
aas
add
dec
adc
and
add
cmp
fucomip
inc
aas
into
insb
fists
mov
aaa
in
arpl
mov
out
dec
mov
cld
jg
mov
add
test
xchg
loope
and
lds
sti
add
cmp
mov
sbbb
lahf
sti
shl
iret
test
mov
sub
lods
push
jbe
jecxz
inc
cmp
lcall
test
jne
add
loopne
incl
in
inc
or
push
push
les
mov
xchg
dec
push
bound
mov
enter
pop
test
std
int
and
stc
imul
add
loope
add
neg
int
sub
pop
cmp
add
fnstcw
shl
testb
mov
push
test
and
sub
test
mov
push
push
and
lock
outsb
das
mov
dec
add
in
cltd
or
ret
out
add
fwait
repz
pop
addb
inc
or
loop
clc
lods
mov
jle
pop
orl
mov
in
out
add
jg
jo
inc
jg
add
iret
insl
inc
jle
or
jmp
cmp
pop
ljmp
jns,pn
divb
ret
or
adcl
test
decl
dec
insl
in
xorb
jo
push
nop
pop
decb
imul
jecxz
adc
ret
mov
jnp
mov
fnstsw
jo
popa
jg
dec
push
outsb
outsl
or
xor
enter
ds
jno
adc
mov
mov
orl
repnz
pop
mov
aas
xor
push
sub
push
add
std
addr16
or
push
outsl
pop
jno
mov
cld
pop
add
push
cli
xchg
sub
idivb
movsl
pop
ret
and
dec
push
stos
aaa
dec
insl
call
sti
or
jb
or
adc
jle
test
jg
sbb
fdivl
dec
jae
sbb
iret
gs
fsubrp
adc
pop
push
inc
shrl
icebp
enter
xor
mov
sbbl
xor
lods
or
shll
cs
push
push
clc
das
out
scas
dec
out
cmp
mov
push
divb
repnz
sti
add
out
mov
arpl
adc
loop
hlt
or
insl
jecxz
cmp
pop
mov
pop
push
mov
andb
stc
xor
test
xor
push
dec
or
fnstsw
xor
outsb
pop
adc
cmp
jno
push
add
adc
mov
or
add
nopl
dec
cli
xor
scas
xor
dec
dec
or
ret
xchg
or
mov
push
loop
jg
and
push
std
sub
shl
pushl
fisttpl
pop
push
inc
lahf
dec
dec
sub
xor
insb
std
mov
cmp
pop
repz
push
pop
sbb
fimuls
mov
mov
out
push
fs
lods
arpl
in
lods
push
and
mov
push
por
lret
dec
push
pop
cmp
fbstp
arpl
divl
and
loop
mov
in
sti
push
lahf
insl
das
out
push
rol
mov
hlt
movsl
movsl
ret
in
fstps
shll
ss
jns
dec
pushf
and
std
and
in
cmp
jl
mov
jl
jb
jecxz
jg
dec
cs
test
dec
sti
dec
jmp
xchg
jbe
pop
mov
test
xor
dec
dec
mov
movsl
or
outsl
mov
push
outsb
jo
xor
popa
add
loope
out
std
outsb
ja
mov
lds
insl
jno
xchg
and
in
and
dec
sbb
outsb
jecxz
jno
jecxz
cmp
dec
dec
jmp
ja
push
dec
push
add
inc
jge
fistpll
imul
jno
test
sbb
or
push
add
int
cld
mov
pop
mov
loopne
jp
stc
ljmp
xor
dec
insb
mov
mov
mov
xchg
pop
dec
inc
mul
arpl
imulb
mov
mov
insl
sub
add
fwait
insl
add
stos
cld
test
mov
xor
mov
or
outsb
jae
test
xor
jo
dec
dec
popl
aad
enter
pop
mov
push
mov
jns
add
insl
ja
cli
clc
jno
inc
cmp
mov
jb
xchg
adc
push
jp
or
cli
or
pop
lahf
pushl
pushl
xor
dec
dec
xchg
jmp
dec
lcall
iret
outsl
sbb
xchg
pop
call
jnp
cmp
mov
arpl
ss
xor
dec
add
sub
fsubrs
adcl
sarb
and
addl
or
push
mov
pop
add
push
sbb
icebp
xchg
leave
in
sti
or
in
jmp
stos
inc
and
pop
inc
sbb
and
push
pop
cld
mov
fistpll
push
out
add
jno
jbe
add
fisttpl
aaa
aas
pop
jo
mov
inc
push
cmp
lfs
pop
push
pop
dec
inc
mov
pop
mov
sbb
call
movsl
js
mov
or
cmpsl
std
add
mov
mov
ss
ljmp
mov
mov
lds
xchg
in
fcmovnb
das
inc
xchg
aas
add
loop
fmulp
push
popf
mov
arpl
sar
std
outsl
pop
orb
cmp
or
add
xchg
mov
push
imull
sub
test
jge
adc
xchg
xor
add
movsl
jg
xor
xor
cld
mov
std
sbb
fisttps
jp
xor
das
sbb
orb
inc
mov
decl
test
cld
lahf
inc
sti
xor
cld
jnp
mov
jmp
add
test
jno
in
das
std
fisttps
push
fbstp
insl
pop
mov
and
add
incb
xchg
xor
outsl
xor
lret
mov
sub
jg
dec
mov
outsl
sbb
std
add
and
or
test
out
mov
jecxz
sbbb
cmp
ds
xchg
out
xorb
pop
mov
ss
imul
mov
xor
cli
xchg
and
or
repz
sub
das
mov
andb
adc
rorb
jg
pop
adc
popa
mov
fstps
push
cmp
jno
xor
inc
add
sub
push
jb
cld
insb
adc
push
cmp
jp
sbb
loope
xchg
pop
push
std
sbb
mov
pop
pop
jl
inc
repz
scas
lea
push
xor
pop
xor
mov
cwtl
subl
adc
das
jbe
jle
adc
ret
cmp
xor
inc
adc
mov
andl
cmp
in
fildl
out
std
in
xchg
mov
clc
pop
mov
pop
stc
in
insl
in
mov
dec
inc
adc
inc
adc
push
das
push
mov
jne
loopne
notl
adc
cli
mov
neg
lds
loop
xor
aas
insl
mov
imul
push
pop
test
jmp
mov
das
ret
mov
jns
xor
aaa
jo
pop
or
sbb
in
jle
lock
xorb
loopne
movsl
xor
mov
shl
test
pusha
dec
push
push
xor
sbb
sub
mov
scas
clc
jg
aam
dec
hlt
sbbb
inc
sbb
xorb
clc
scas
jg
xor
xorl
sbbl
aam
push
out
adcb
pop
jmp
scas
dec
icebp
mov
inc
repz
push
loop
and
mov
xorb
mov
cmp
loopne
xor
test
sti
test
inc
xor
adcb
shrl
sti
int
cmp
aaa
cld
aam
sbb
mov
mov
stc
or
test
pushf
and
pop
test
and
imul
cli
inc
add
popl
dec
xchg
scas
outsb
and
rol
jo
and
push
cmp
insl
lahf
lret
inc
jns
add
add
test
cmpb
fisubrs
mov
decb
out
xor
mov
xorl
cmp
out
ss
jg
testl
push
sbbb
mov
add
mov
jne
sbb
dec
aas
dec
sbb
push
in
lret
cmp
mov
sub
cmp
jo
ljmp
stc
cmp
ret
mov
mov
pop
adc
add
sbb
out
jle
adc
cmpsb
xor
jecxz,pt
lods
push
loope
sti
iret
enter
xchg
pop
cs
mov
in
sti
sub
push
sbb
xchg
mov
xlat
mov
xchg
mov
mov
add
mov
sti
test
aaa
int
mov
call
or
dec
add
fisubrl
jmp
jp
arpl
test
adc
arpl
adc
pop
imul
in
das
xor
addl
mov
jo
push
mov
jl
dec
and
pop
je
sub
insl
test
loope
cmp
outsl
add
test
pop
mov
xor
pushl
and
sub
or
cld
test
or
or
push
sbb
jmp
imul
fdivrl
insb
test
push
add
stc
mov
inc
add
dec
std
outsl
add
push
scas
pop
xchg
dec
add
add
mov
fadds
inc
std
dec
jle
sti
jb
test
dec
clc
lods
jmp
add
mov
rorl
add
jo
jecxz
sbb
loope
shlb
in
push
xchg
push
jge
and
mov
mov
mov
sbb
arpl
ljmp
fnstcw
aaa
mov
sahf
ss
or
mov
or
lea
inc
test
or
push
cltd
adc
int
imul
jecxz
pop
pusha
mov
fldt
outsb
push
push
in
stc
adc
or
adc
fucom
imul
std
lret
arpl
jmp
daa
inc
mov
aad
mov
mov
clc
or
jmp
mov
pop
jns
aam
test
outsb
subl
out
push
mov
dec
cs
dec
ror
jg
bound
out
xchg
dec
negl
push
stos
dec
mov
std
xchg
div
scas
cld
int3
or
sarl
sub
in
in
dec
jle
sti
jp
lcall
cs
lcall
adc
xlat
mov
loop
not
dec
mov
inc
mov
push
cltd
subb
jmp
inc
cmpsl
ja
scas
test
test
xchg
mov
mov
fwait
inc
repz
ret
and
jne
pop
pusha
test
mov
stos
mov
and
cmp
or
jo
or
mov
dec
xchg
push
test
out
pushf
gs
and
add
aad
sub
xor
daa
jecxz
addb
push
fistpl
popa
addl
insb
mov
popa
hlt
pop
push
aas
sub
inc
jle
and
push
aas
add
scas
push
jnp
sbb
mov
add
push
ja
adc
shll
push
push
hlt
inc
dec
rcll
rorb
into
mov
gs
or
inc
movsl
inc
mov
pusha
lods
jle
ja
dec
lock
dec
or
addr16
jge
std
mov
fs
pop
shll
jne
arpl
cmp
dec
xor
mov
dec
lahf
jmp
mov
sbb
dec
outsb
and
or
jns
clc
push
pop
push
pop
mov
inc
mov
jnp
pusha
inc
dec
insl
mov
das
rclb
push
mov
iret
dec
outsl
ret
push
movl
daa
pop
test
das
idiv
push
mov
orb
aas
incl
test
mov
dec
xchg
subb
mov
push
sub
insl
dec
push
test
test
pusha
std
xor
aam
fs
outsb
ljmp
sbb
dec
jne
jl
pop
xchg
push
stos
out
dec
mov
dec
mov
fcomps
insl
sub
inc
sbb
sub
in
fldt
xchg
fnstsw
jecxz
jle
adc
sub
xchg
movsb
push
mov
mov
cs
mov
dec
pop
pop
clc
out
mov
xorl
sub
mov
shlb
xlat
pop
xor
mov
daa
sub
and
std
mov
stc
push
daa
fildll
and
jnp
int3
jo
fnstsw
in
xchg
push
pusha
orb
stos
pop
or
dec
imul
dec
pop
repz
mov
imul
cld
out
sbb
insb
cmp
push
ss
insl
sub
cmpsb
xchg
mov
sti
cld
xor
outsb
sbb
xor
jg
xchg
push
insb
or
jl
inc
aaa
push
repz
jle
clc
das
aam
or
rorb
fs
cli
inc
sub
xchg
jge
lahf
out
aaa
push
pop
clc
xchg
or
lahf
xchg
arpl
inc
lea
adc
hlt
sbbb
arpl
mov
hlt
and
push
out
shrb
arpl
jecxz
leave
je
loopne
jnp
std
push
jne
fwait
cli
lret
mov
imul
sub
push
dec
in
divb
ljmp
subb
add
mov
and
and
mov
stc
ss
mov
adc
mov
mov
xchg
arpl
xchg
xchg
fs
or
or
mov
dec
std
sub
lods
filds
cld
lock
cmp
push
add
push
incl
ja
cs
sbb
in
cmpsb
bound
cld
push
sub
sbbl
fsubs
outsl
mov
int
mov
sbb
fildll
cmp
stos
xor
lea
cmpsl
push
pop
xchg
subb
clc
dec
mov
int
add
sbb
sti
sbb
mov
inc
lahf
mov
sti
jecxz
xor
fs
lock
pop
dec
pop
sub
test
insl
dec
push
pop
push
sub
push
mov
hlt
or
xchg
test
or
sub
jg
push
mov
push
sub
xchg
inc
lods
idiv
fs
push
or
fsubp
inc
mov
adc
push
es
inc
in
mov
mov
pusha
int
insl
insl
mov
mov
leave
out
dec
fildll
ja
mov
mov
xchg
inc
cmpl
call
cld
mov
pop
hlt
push
clc
out
sbb
or
pushf
mov
aaa
subb
sub
mov
jp
faddl
xchg
mov
push
push
or
xchg
sbb
lds
cmp
cld
mov
rcrl
fcomip
inc
jns
andl
mov
enter
addb
pop
cli
adc
or
mov
xchg
frstor
insb
xor
inc
das
inc
loope
jl
cld
mov
inc
add
mov
jmp
jg
rdtsc
shll
inc
out
pop
sbb
pop
mov
mov
imul
decb
int3
mull
and
sbb
js
xchg
ljmp
push
sub
mov
icebp
add
adc
inc
dec
adc
ror
cmc
notb
push
push
outsl
outsb
pop
mov
dec
push
push
pushf
push
les
das
imul
jmp
jge
ret
cmpsl
cmpsl
mov
push
xorl
jge
arpl
out
stos
roll
xor
and
imul
adc
fdivr
sbb
movsb
xchg
stos
or
aad
sub
cmpl
dec
into
push
cmpb
cmp
loope
imul
rcrl
std
gs
js
inc
push
sbb
cmp
lods
pop
pop
inc
push
jnp
sub
adc
nop
add
and
or
sbb
pushf
inc
popa
insl
test
cld
xchg
mov
js
mov
shll
xchg
xlat
jg
cmp
mov
icebp
cmp
dec
test
jle
scas
movsl
or
sub
lahf
cmp
and
cmp
je
adc
push
std
rolb
or
sti
sub
mov
std
imulb
dec
xchg
rorl
cli
inc
dec
push
out
or
loop
ja
rcrl
sbb
outsl
insb
jle
mov
lahf
push
adc
test
pop
das
loopne
add
inc
xchg
arpl
idivl
jl
jge
jo
stos
mov
daa
jp
push
sub
push
out
es
adc
push
mov
pop
and
ja
sbb
push
jge
cmc
ja
or
or
dec
sub
bound
std
and
push
mov
ja
sbb
add
loop
daa
addr16
pop
jp
add
inc
sbb
mov
je
mov
dec
arpl
pop
mov
repnz
mov
fldenv
xor
nop
das
outsl
sbb
and
dec
sbb
ss
pop
loopne
shll
push
jecxz
xchg
pop
mov
mov
jge
add
jno
les
jl
ja
ja
push
mov
stc
outsl
inc
jg
loopne
ja
mov
popa
into
push
ret
pop
scas
aas
in
ljmp
lahf
outsl
and
sbbb
or
xchg
push
xchg
inc
aad
insb
lds
insl
fbstp
sub
push
cmpl
mov
sub
xchg
mov
iret
adc
ss
or
inc
in
dec
test
lret
xchg
xor
inc
mov
loope
fstpl
imul
jecxz
and
roll
popf
out
jae
add
and
cmp
mov
test
icebp
roll
imul
push
add
add
insb
add
inc
and
stc
rcr
mov
mov
or
sub
adc
out
dec
sbb
add
movsl
dec
or
add
and
jmp
mov
test
pop
adc
mov
jno
ret
notl
aad
mov
adc
push
dec
aaa
xchg
jnp
gs
push
bound
dec
fadds
loop
and
cmpsl
mov
dec
fldl
xchg
cltd
movb
pop
notl
testl
data16
mov
mov
es
pop
xlat
stc
notl
pop
and
mov
aad
add
jns
fisttpl
test
aaa
lcall
lahf
or
lret
ret
inc
out
testl
pop
test
popf
sub
in
in
or
pop
js
jle
add
pop
mov
or
add
mov
mov
push
loopne
dec
jg
jmp
jno
sbb
push
jg
mov
xchg
std
jno
test
or
call
arpl
insl
xor
inc
cltd
pop
jge
ljmp
add
mov
shrb
mov
mov
cmpb
fildl
jle
jnp
inc
mov
repz
dec
test
repz
ret
pop
xor
cs
mov
jo
scas
and
pop
add
out
sub
pop
sti
mov
gs
sub
adc
dec
fucomp
mov
inc
jmp
lods
jb
xchg
ljmp
insb
pop
or
dec
inc
push
pop
or
mov
mov
add
push
ret
add
mov
das
add
js
jno
mov
add
sarl
or
fnstcw
push
add
in
les
xor
and
push
cmp
or
in
fldenv
sti
fcompl
jae
ror
insl
jle
mov
sbb
out
or
fwait
stc
push
jns
push
cwtl
sarl
sti
aad
mov
insl
pop
or
mov
fsubrs
fidivrl
lods
int
adc
mov
shll
lcall
cmp
xor
sbb
shlb
adc
adc
push
pop
dec
lea
mov
lods
xchg
repz
jg
subb
out
xchg
mov
or
outsb
test
data16
xor
dec
loope
inc
mov
sub
das
cmp
int
add
test
cmp
loopne
test
imul
repnz
andl
enter
faddl
mov
jge
xchg
clc
fsub
sub
sub
push
mov
xor
pop
out
sbb
xchg
jmp
dec
jmp
xor
sub
jecxz
add
imul
in
cmp
adc
in
stc
jmp
testw
sbbl
aas
push
xchg
push
loope
loopne
and
add
mov
jne
clc
arpl
insb
test
xor
push
movsl
psraw
add
mov
inc
cmp
pop
out
fsts
repz
xchg
push
mov
sti
mov
push
in
repnz
sub
cmc
mov
stos
test
push
data16
bnd
fwait
leave
sahf
mov
sub
or
push
xor
setns
mov
mov
and
and
cmc
js
and
fst
int
aaa
jb
arpl
out
sub
add
adc
int
decl
js
push
loopne
and
pop
mov
fstl
dec
jecxz
sbb
and
fisubrl
xor
lcall
cmpsb
fdivrp
push
aad
daa
push
push
sbb
inc
test
cmp
mov
dec
pop
jo
pop
inc
cmp
dec
aaa
mov
sub
xchg
and
dec
xchg
sbb
sub
in
jmp
sbb
inc
sbb
pop
fcomps
lcall
pop
ss
jbe
in
icebp
inc
jecxz
shll
sbb
jo
in
xchg
sbb
in
cmpsb
insl
push
sbb
push
lahf
mov
mov
mov
bound
sub
add
sahf
pushf
lea
fstpl
testb
mov
pop
cs
adc
pusha
mov
jl
iret
push
incl
xchg
or
xor
es
add
sbb
xor
pop
cmpsb
stc
rcrl
loope
pop
test
repz
jmp
test
push
push
cmp
ja
push
fnstenv
cli
test
insl
rol
sbb
mov
cmp
jb
out
mov
fmull
cs
sbb
mov
std
fwait
add
jns
cmc
xchg
pop
in
mov
and
xor
gs
adc
cmp
popa
or
pushf
add
or
out
fwait
jecxz
sbb
idivl
push
dec
xchg
pop
jnp
loope
add
push
inc
dec
or
jle
push
out
sub
add
push
fdiv
inc
std
insl
pop
lods
jecxz
or
out
scas
loopne
push
shr
hlt
enter
jno
roll
mov
mov
push
and
pop
std
int
xchg
mov
call
or
hlt
xor
add
cmp
dec
cmpsb
cmc
add
iret
test
cmp
sbb
add
mov
testb
cmp
mov
cs
add
pop
cmc
bound
lcall
out
ror
test
jbe,pn
adc
cltd
sbbb
cmp
push
mov
insb
adc
dec
cmc
or
add
rcrl
addr16
cmp
push
mov
dec
mov
inc
jp
shl
mov
cltd
add
leave
in
ljmp
dec
sbb
leave
mov
movsb
sub
outsb
inc
cmpsb
add
sbb
loop
out
daa
dec
dec
scas
sbb
in
sbb
push
stos
mov
in
inc
test
popa
ret
sti
cmpsl
movb
dec
pop
mov
lret
pop
adc
mov
xchg
push
pushf
aam
repnz
mov
pop
dec
cmp
mov
clc
jnp
cld
jg
cmp
das
xor
popf
add
sti
out
inc
add
rorl
cmc
dec
inc
add
gs
leave
mov
mov
addl
mov
inc
mov
push
adc
lret
lea
sbb
cld
in
lds
outsl
mov
pop
push
arpl
out
push
fistpl
jecxz
push
sbb
push
rcll
push
fisubs
mov
sbbl
stos
push
pop
rorl
in
fisttpl
or
cmc
or
fstl
in
cmp
cmp
push
bound
xor
int
notb
in
sbb
add
sub
mov
add
dec
fnsave
testl
inc
enter
push
arpl
adc
jecxz
out
inc
mov
mov
daa
sbb
mov
mov
in
std
subl
mov
icebp
xor
mov
xor
pinsrw
add
pop
inc
movsl
lahf
fisttps
dec
mov
mov
pusha
shl
jmp
mov
or
lcall
dec
xchg
mov
inc
testb
test
lods
cld
mov
jge
xchg
testb
jo
rcl
cmp
xchg
stc
push
dec
or
xchg
call
inc
in
push
cmpb
loopne
test
repz
xchg
loopne
shll
aas
out
xchg
cmp
mov
test
mov
cli
sub
or
sbb
add
or
test
out
mov
rcll
dec
arpl
jae
mov
pop
pop
xchg
stc
sbb
and
dec
in
loop
ret
push
dec
add
mov
out
xchg
lods
out
mov
adc
testl
mov
push
push
das
cli
jae
lock
cmp
pop
ja
cmpl
add
xrelease
jnp
sahf
add
aas
sub
ret
orb
ljmp
mov
and
cld
in
mov
insl
xor
dec
push
ja
lret
jecxz
xor
stos
clc
aam
jecxz
push
loope
mov
les
outsl
icebp
out
sbb
dec
gs
pop
mov
mov
cli
push
mov
xchg
xchg
ret
or
sub
dec
out
lods
mov
lahf
cmp
movsl
dec
lods
jne
icebp
testl
arpl
out
out
fstpt
imul
push
loope
sbb
clc
push
rcll
cld
push
pop
push
fmul
or
mov
sbb
mov
pop
nop
mov
adc
das
shrb
jg
pop
push
ja
cld
jne
stos
outsb
inc
and
xor
fstpl
add
dec
dec
mov
add
ret
cmp
jae
outsb
rcll
repz
ja
lcall
inc
insb
push
addr16
loop
sbb
xchg
ja
call
test
jle
addl
or
test
stos
hlt
pop
fs
jle
or
sbb
aaa
sub
push
cmc
icebp
testl
lock
stc
pop
enter
mov
cli
out
xchg
in
dec
inc
sub
fistl
repz
pop
jle
sti
test
and
icebp
xchg
jg
rolb
lret
out
stc
mov
cmp
push
test
sbb
or
mov
or
repz
notl
je
xchg
sbbl
ret
mov
adc
dec
inc
cs
dec
push
imul
cmp
cmp
cmp
pop
and
daa
aad
and
adc
aaa
pop
jno
and
dec
sahf
xchg
sbb
out
stos
or
and
fistl
pop
shrl
sbb
ja
and
cmp
xchg
sbb
lahf
adc
sbb
jmp
jno
inc
shlb
adc
clc
int3
fwait
fwait
dec
adc
sbb
idivb
cld
mov
cmp
mov
jecxz
addr16
inc
push
xor
dec
mov
mov
cmp
pop
push
xor
cmp
out
sbb
lock
and
sbb
shrb
lods
shrl
xchg
xor
jecxz
adc
push
mov
mov
repnz
push
ret
sahf
push
adc
sub
lock
repnz
into
xchg
push
sub
loopne
adc
jge
cli
inc
dec
push
fwait
pop
pop
pushf
ss
sub
dec
ljmp
mov
rcll
push
xchg
test
test
push
xor
test
mov
test
xchg
roll
in
pushl
ret
jp
cs
adcl
test
outsl
cmc
pop
sahf
sti
add
mov
mov
push
dec
sbb
xchg
clc
jge
jbe
imul
addl
mov
clc
inc
divl
ja
mov
jne
dec
push
xor
xor
mov
test
mov
or
dec
rorl
add
cli
or
pushl
scas
dec
dec
and
xchg
cld
lds
mov
cld
icebp
lcall
test
add
adc
inc
ss
ja
push
test
pop
test
pop
rolb
test
push
movl
xlat
cmp
mov
out
adc
jmp
push
mov
adc
mov
imul
push
stc
jno
divb
sbb
sti
insl
daa
and
test
pop
aad
imul
inc
cld
jno,pt
lds
mov
jp
stc
inc
xor
fnsave
iret
inc
lahf
sbb
dec
inc
popa
sbb
inc
test
inc
ss
outsl
lds
and
and
inc
sub
nop
sarl
add
cmp
sub
cmp
cmpb
daa
xor
jb
pop
inc
fiaddl
or
pop
test
push
push
jp
stos
add
cltd
xor
mov
std
sarb
mov
mov
push
mov
pop
fsub
push
fyl2xp1
push
pop
jnp
js
inc
dec
imul
iret
js
sbb
sub
cli
sbb
rcl
dec
stos
push
test
fidivrl
aaa
inc
adc
rcll
shll
out
clc
or
cmp
inc
dec
hlt
dec
dec
mov
jns
sub
imul
leave
pop
pop
in
dec
dec
scas
out
xchg
aas
divl
cvtdq2ps
clc
jecxz
or
mov
cmc
mov
cmp
push
in
lret
cld
push
mov
xor
jae
outsb
cmp
mov
dec
jmp
xchg
add
xor
divb
shll
xor
ss
or
jb
aaa
adc
jl
inc
fwait
stos
dec
xchg
out
push
out
adc
inc
cld
add
mov
xor
adcl
cmovp
push
xchg
mov
inc
sub
or
lods
loope
addr16
lahf
mov
or
xchg
lahf
pop
mov
inc
xchg
gs
mov
adc
inc
sub
inc
xchg
aas
mov
rcll
icebp
lods
pop
popf
or
pop
dec
sbb
jle
dec
ss
mov
push
jae
xor
xor
or
mov
and
je
add
mov
cmp
test
xchg
jge
in
ss
decb
adcl
jle
and
incl
or
xchg
psubusb
out
outsb
xor
inc
in
sbb
jnp
loop
add
pushf
loope
les
mov
and
and
cmpsl
push
out
outsb
ss
in
dec
xor
or
sub
std
in
mov
ljmp
aaa
pop
test
js
or
push
roll
and
inc
aas
out
sbb
jge
prefetch
push
sbb
fsub
test
dec
aas
cli
repz
addb
mov
test
xlat
in
pop
push
cmp
sub
ffree
pop
push
xchg
cld
jb
lea
adc
cmc
pushl
xor
sbbl
cwtl
inc
fmull
sub
test
push
or
mov
aas
ja
inc
jmp
es
sub
shrl
mov
inc
icebp
jbe
shlb
inc
sbb
sbb
call
or
cmp
or
jmp
aad
sti
or
inc
and
ja
addl
and
hlt
repnz
pop
and
xchg
dec
or
or
jb
cmp
lret
push
fimull
xchg
std
pop
push
lret
push
adc
cmp
ja
or
or
push
mov
cmp
clc
xor
fabs
add
ja
add
cmp
dec
aas
ss
notl
call
and
push
test
mov
or
sub
dec
arpl
push
cmp
mov
mov
arpl
rolb
sub
aad
mov
mov
fwait
int
push
inc
inc
push
xchg
dec
sub
ja
repnz
adc
stc
arpl
adc
adcb
jno
pop
or
pop
jo
fisttpl
pop
lds
adc
or
pop
xchg
bndstx
jmp
ljmp
push
pop
insb
or
sbb
cmp
iret
push
dec
not
push
loopne
cli
dec
cmp
shll
std
or
add
jne
fs
imull
jg
in
mov
mov
cmp
das
in
gs
test
inc
xchg
out
in
ret
xor
pushf
in
xlat
fldt
jle
xchg
dec
or
xchg
pop
and
jle
hlt
das
and
sbbl
fisttps
jnp
or
ljmp
cmpsl
or
sbb
addr16
xchg
pop
xor
adc
mov
cmp
cli
or
mov
or
icebp
data16
inc
mov
ret
push
add
inc
push
std
xchg
add
inc
or
xchg
jno
dec
leave
add
mov
mov
daa
imul
push
outsl
call
sbb
std
push
gs
mov
push
dec
sub
or
insl
cmp
pusha
cmc
stc
sub
rorb
out
icebp
or
pop
test
cltd
aaa
aas
repz
or
pop
shrb
dec
inc
or
adc
in
imul
push
jno
imul
in
or
js
jle
jg
aaa
adc
sti
mov
mov
add
mov
lahf
js
mov
mov
add
cs
pop
lret
cmpsl
int3
mov
aaa
xor
sub
lds
insl
leave
roll
outsb
outsl
fisttps
ret
daa
addb
inc
out
pop
test
movsl
push
sbb
add
jge
push
sti
cmp
out
les
inc
pop
test
sbb
or
cmp
call
and
lret
out
ds
xlat
mov
ret
jno
mov
test
push
xchg
ljmp
or
add
neg
fistps
inc
push
ja
add
ret
aas
push
jle
dec
adc
arpl
push
mov
stos
inc
stos
sbb
inc
or
inc
xor
add
nop
lret
xor
in
repz
pop
insb
sub
push
push
and
push
sbb
pop
lods
cli
mov
movl
enter
faddl
lds
lcall
out
ret
testb
add
xor
push
mov
mov
mov
jnp
aaa
add
jg
mov
in
pop
mov
jmp
adc
inc
jecxz
lds
into
fcmovnu
test
insl
sbb
gs
cmc
fdivr
or
dec
and
inc
jecxz
jmp
push
pop
lods
stc
jo
jg
cli
dec
loop
add
or
add
mov
adc
pop
imul
fdivrl
les
addr16
cmc
jno
aaa
pop
jmp
mov
xchg
dec
jne
aas
sub
pop
icebp
fildll
lcall
mov
mov
dec
in
lea
shll
xchg
ja
in
das
xor
das
push
add
mov
dec
mov
push
xor
pop
in
fistps
popa
stos
push
lea
mov
xchg
out
inc
sbb
pop
lret
adc
movsl
xchg
push
or
je
add
in
add
insb
fstpt
or
rcrb
xchg
fistps
fdivr
mov
mull
fidivl
pop
in
pop
aas
mov
fildll
arpl
xor
out
in
insl
incl
xor
scas
inc
popa
adc
fistpll
popa
mov
idivb
cmp
and
icebp
incb
pop
test
pop
aas
pop
clc
mov
mov
cmp
inc
pop
xor
fstpt
xchg
push
pop
pop
or
iret
fistps
pop
repz
bound
movsl
ret
lods
in
lea
mov
outsb
stc
int
add
sub
popa
add
mov
cs
fists
mov
test
fs
cmovb
fldt
dec
aas
or
jle
fwait
shll
mov
mov
pop
and
and
fs
aam
sti
xchg
mov
popa
loopne
fstpl
add
fwait
or
aas
mov
aam
inc
mov
repnz
arpl
call
loopne
popf
std
jle
rorl
jl
shl
jmp
fnstenv
cmpb
aas
gs
mov
add
loopne
cmpsl
or
jl
mov
pop
and
sub
repz
lods
out
in
in
mov
xor
bound
xor
dec
mov
pop
idivb
or
addl
adc
repnz
sub
mov
and
rcll
mov
pop
ret
add
popa
jnp
insl
jle
or
int
arpl
inc
ljmp
insl
lret
mov
fcmovnbe
shl
cmc
imul
shrb
lret
add
das
loopne
bound
fimull
jb
clc
cmpsl
jb
lock
mull
sbb
insl
mov
iret
push
insl
mov
or
fisubs
mov
jbe
fsqrt
push
and
dec
cmpps
leave
pop
imul
pop
mov
mov
shrl
and
and
push
pop
dec
mov
and
push
and
subb
pop
or
call
cmp
ss
insl
mov
add
fidivrl
dec
fcmovnb
dec
pop
mov
mov
ljmp
nop
in
push
cmc
xchg
stc
repz
lret
fwait
sbb
mov
jns
cld
pusha
push
movsb
mov
std
sarl
cmp
mov
and
fwait
add
push
jns
in
sti
mov
lcall
repnz
gs
mov
mov
fildl
push
xchg
out
in
xor
add
icebp
pop
pop
xor
mov
addr16
pop
and
dec
dec
xchg
adc
decl
aam
out
js
stc
incb
mov
pop
lea
scas
lods
push
mov
push
sbb
or
mov
insb
cld
data16
pop
cmpb
xor
out
movsl
clc
dec
jnp
imul
mov
jmp
cld
fnclex
and
push
stc
or
or
pushf
insl
mov
test
push
cli
and
mov
imul
jns
push
out
or
sub
gs
fs
aas
out
adc
xor
dec
pop
mov
sub
outsl
cs
mov
shlb
dec
jge
pusha
mov
pop
repnz
pop
aaa
and
mov
mov
mov
or
sub
push
ljmp
dec
jmp
aas
push
jnp
push
sti
pop
push
hlt
pop
push
and
pop
orl
inc
mov
incb
lret
add
enter
mov
mov
sub
incb
incb
inc
int3
js
call
or
into
fiadds
jmp
outsb
push
cs
pop
jg
fwait
and
and
mov
cld
ret
repnz
sbb
mov
adc
inc
push
loop
or
inc
sbb
jmp
out
dec
adc
fisttpl
mov
push
imul
mov
sbb
insl
push
es
mov
inc
adc
into
in
mov
int3
fiaddl
pop
mov
sub
pop
mov
push
add
lret
pop
lahf
bound
xor
sub
push
daa
inc
pop
add
arpl
das
jne
jecxz
pop
call
jle
and
push
mov
test
push
mov
sar
or
test
mov
imul
push
lods
in
ret
andl
loope
decl
jg
mov
mov
std
adc
loop
test
jle
sti
jle
push
jg
dec
cmc
outsl
sarb
in
push
ss
imul
loop
sub
flds
pushaw
stos
fwait
and
pusha
call
lods
aas
pushl
add
out
sar
xchg
inc
push
test
jg
mov
or
mov
pop
addl
loop
addl
cld
dec
jb
or
test
cmp
pop
ret
cmp
cld
sar
sbb
mov
test
and
adc
les
dec
push
decl
mov
or
orb
push
mov
push
lock
cmc
inc
jl
cmp
loopne
repz
stc
inc
jno
pop
pop
and
mov
add
roll
hlt
jnp
pop
dec
insl
add
fisubrs
push
push
lods
xlat
pop
lret
arpl
push
sub
mov
pop
pop
aas
incb
jecxz
scas
or
ud0
inc
inc
inc
jle
pop
ja
aam
or
push
cmpl
jl
repz
bound
lea
sub
shlb
xchg
mov
sar
leave
std
or
inc
mov
push
test
es
in
pop
mov
mov
sub
outsb
dec
negb
in
pop
stos
ja
push
mov
sbb
pop
sbbb
mov
push
mov
sbb
and
pop
xorb
and
ljmp
inc
jecxz
pop
fucomip
movsl
bound
mov
mov
test
mov
mov
push
sti
cmp
lcall
sbb
idivw
pop
mov
out
push
pop
push
insb
add
int3
push
fisttpl
or
mov
stc
adc
mov
into
test
gs
clc
mov
mov
popf
stos
lds
inc
aaa
push
push
repnz
mov
xor
add
xor
pop
cmp
loop
lock
sbb
dec
xchg
jmp
jmp
hlt
int
push
jne
jg
mov
test
jecxz
pop
pop
stc
push
and
icebp
mov
sbbb
shll
sbb
pop
mov
movsl
fiaddl
insl
jmp
std
push
sti
lods
notl
inc
popa
pusha
pop
in
add
adc
stos
cmp
mov
push
mov
out
and
or
xchg
mov
adc
in
jecxz
stc
popa
insb
push
mov
add
mov
lret
inc
orl
add
push
mov
xor
mov
add
mov
arpl
mov
lods
adc
clc
xor
arpl
fistpl
add
clc
testl
jmp
aas
std
fdivr
xor
out
pop
mov
pop
neg
pop
mov
test
ds
leave
dec
mov
cmpb
int
push
pop
ret
sbb
insl
adc
out
mov
push
xlat
stos
loope
and
cmp
sub
jg
mov
mov
dec
outsl
outsl
dec
loop
in
stos
ja
outsb
inc
mov
xor
push
sarl
pop
sbb
push
clc
push
cmp
fwait
jo
pop
scas
arpl
decl
or
clc
inc
data16
movsl
pop
jnp
mov
insl
push
push
dec
int
xor
pop
add
lret
add
nopl
xor
ja
ficoml
add
ret
and
dec
pop
scas
jb
out
sahf
and
fstp
xchg
jecxz
inc
loope
fisttpll
cs
pop
sub
out
jo
inc
sbb
add
jp
inc
mov
stc
xchg
jmp
das
mov
and
push
or
pop
outsb
notl
outsl
stc
mov
ja
add
sti
aas
add
outsb
out
insb
gs
jecxz
ds
fistpl
cmp
pop
outsb
push
insb
data16
stc
jl
imul
sbb
inc
enter
leave
out
pop
pushf
std
cli
inc
test
or
add
xchg
fs
mov
sbb
mov
pop
dec
mov
sub
sti
xor
mov
lods
sar
sbb
in
adc
cmp
add
mov
and
mov
pop
sarb
xorb
test
test
shlb
arpl
daa
adc
movd
or
xchg
cld
cmp
mov
jg
aam
mov
fnsave
or
mov
fdiv
sub
or
xchg
sti
xchg
inc
shll
cmp
negl
add
sub
xor
fs
std
lcall
pop
sbbl
mov
jnp
cli
add
arpl
int
mov
jb
xchg
leave
or
outsl
hlt
ss
imul
or
inc
jle
cld
out
sub
ds
and
and
mov
push
pop
mov
add
inc
shrl
add
cmpb
add
rorb
out
jl
jo
test
rclb
lock
lcall
mov
cld
outsb
int3
insl
add
push
dec
loop
push
mov
ljmp
push
loopne
subl
inc
add
or
jg
pop
jns
dec
dec
adc
mov
imul
idiv
jb
les
out
push
sub
fcmovnb
fldcw
sbb
popa
xorl
ljmp
test
mov
push
pop
pop
and
daa
lret
or
sbb
addb
outsb
decl
jnp
add
test
lret
adc
inc
push
and
push
mov
inc
xchg
imul
sub
cmp
sub
mov
cmpsl
les
shl
adc
daa
mov
daa
jns
mov
lret
jecxz
fdivrs
lcall
addr16
xchg
out
sub
jecxz
loopne
out
xchg
push
outsb
aas
jnp
insb
adc
adc
adc
jb
je
je
jbe
ss
pushl
daa
cmp
ja
ss
mov
jo
mov
shll
mov
outsl
in
jno
jae
jne
xchg
lret
in
je
jo
jb
popa
shrl
cmpsb
ja
lds
mov
fnstenv
cltd
adc
shll
sub
in
repz
jae
fistl
outsb
mov
arpl
js
js
jb
jp,pn
jbe
pop
js
jp
cs
lret
lds
jne
js
jns
js
jb
sahf
je
adc
jp
jl
pop
ss
push
jnp
inc
jns
popf
fwait
cmpsb
imul
lcall
sbb
mov
adc
in
arpl
jnp
fnstcw
je
jb
jbe
mov
mov
jp
mov
dec
jnp
jns
jne
repz
jno
jb
pop
shll
je
jbe
jne
shrl
dec
dec
jae
jno
xchg
jmp
mov
push
fcmovnu
cmpsb
popa
dec
jns
pop
pop
jnp
jmp
mov
push
inc
push
adc
dec
shll
outsb
mov
cs
xor
pop
outsl
jbe
dec
ja
cs
in
ss
pop
ja
rorb
das
add
mov
ss
aaa
cli
mov
push
sbb
pop
stos
dec
out
in
add
adc
pop
in
mov
sub
pop
ret
arpl
daa
sbb
test
out
shrl
fs
insl
pop
nop
andl
sbb
jno
add
dec
push
cltd
dec
xchg
insl
push
addr16
ret
inc
xor
gs
insl
fbstp
aad
inc
outsl
outsb
fs
xor
mov
daa
arpl
fs
lea
daa
jno
jns
mov
jb
cmp
or
pop
xchg
scas
cmp
lods
pop
push
jg
jmp
adc
pushf
shlb
xchg
jae
jbe
cmpsb
pop
outsb
iret
pushf
jb
icebp
lcall
cmpsb
imul
jnp
imul
cs
lret
in
outsl
std
jb
jae
jne
je
dec
mov
inc
jo
pop
ja
jmp
outsl
popf
mov
cmp
sahf
adc
pop
cmpsb
imul
test
aad
fnsave
jno
jae
mov
sub
mov
movsl
out
sbb
js
xchg
and
cmpsb
pop
cs
js
jp
jns
sbb
xchg
out
leave
cltd
jbe
jnp
js
jns
jp
gs
push
jl
inc
ja
cltd
imul
sarl
cmp
pop
jbe
xlat
xor
add
fnstsw
shrl
psubusw
enter
dec
sahf
shlb
mov
add
pushl
push
fldcw
pop
adc
push
jno
imul
negl
mov
js
imul
shll
add
js
incl
sub
xor
xor
lret
data16
xor
and
je
push
daa
insb
xchg
jne
repz
xchg
cmc
jnp
ljmp
outsl
arpl
outsw
pop
outsl
popa
inc
insl
insl
pop
imul
cmp
stc
jg
sti
inc
popa
imul
outsl
bound
outsb
pop
pop
jb
insl
jbe
cli
std
ds
jb
clc
insl
or
inc
pusha
pop
dec
imul
outsl
cmp
pop
cli
data16
aaa
push
fs
mov
push
addr16
pusha
inc
popa
pop
insl
cld
cmpsb
sti
inc
jo
jno
insb
push
div
lcall
clc
pop
std
cmp
pusha
pop
imul
push
pop
insl
outsb
cmp
pop
mov
imul
inc
pop
bound
inc
arpl
incb
outsl
aas
ljmp
ljmp
pop
imul
outsl
insl
push
jbe,pt
dec
fs
jo
gs
insl
mov
insl
mov
inc
popa
insb
mov
aaa
push
cmp
mov
cld
cld
inc
pop
xchg
imul
pop
pop
cmp
xor
mov
inc
jp
pop
insb
jg
cmp
mov
in
mov
pop
inc
pop
pop
and
lods
mov
push
sub
inc
imul
mov
addr16
push
insl
sbb
pusha
cld
inc
sti
inc
sti
push
push
jnp
lahf
hlt
inc
pop
pop
addr16
daa
mov
das
adc
pop
aas
dec
mov
push
pop
cmpsb
cmp
movsb
cmp
in
dec
pop
push
ret
sbb
xchg
ds
fs
imul
push
xchg
add
inc
fs
aas
out
lods
std
fildll
aad
pusha
dec
pop
insl
outsl
inc
imul
testb
outsb
cwtl
jb
inc
jae
outsl
xor
fildl
inc
nop
insb
arpl
rcrl
fildl
xor
jno
cmp
or
cs
push
bound
outsb
outsb
jecxz
bound
push
in
testb
or
dec
daa
inc
pusha
cmp
outsl
jno
arpl
jmp
pop
add
insl
gs
gs
cs
out
in
inc
dec
dec
inc
dec
sub
sar
inc
inc
or
insl
pusha
cmp
outsb
pop
dec
arpl
cltd
inc
shlb
das
adc
lods
mov
lods
pop
arpl
fucomi
or
cld
test
arpl
fsubs
orl
gs
aas
inc
insl
insb
in
sbb
push
popa
bound
dec
xor
clc
xchg
clc
inc
cmp
pop
cmp
inc
jl
pop
mov
or
cld
cmp
or
lcall
pop
addr16
imul
and
ficomps
dec
xchg
iret
jp
dec
dec
mov
push
movsl
lds
decb
sbb
jno
outsl
dec
bound
arpl
dec
mov
test
inc
xchg
pusha
arpl
pop
insl
push
cld
out
fidivrs
push
pop
pop
pusha
in
dec
cmp
xor
sub
data16
icebp
pusha
sub
xchg
or
cmp
adc
or
dec
popa
adc
adc
arpl
aas
sub
ds
sti
or
aaa
inc
cmp
jecxz
xchg
cmp
pop
jp
enter
adc
pop
iret
adc
dec
cmp
lret
test
inc
cmp
and
stc
pop
and
or
ja
std
push
xchg
outsb
fildl
jb
std
sahf
mov
jb
jle
sub
nop
aaa
ljmp
ja
push
push
sbb
pop
bound
push
jecxz
pop
daa
xchg
push
aas
inc
lcall
or
inc
inc
inc
xor
adc
dec
cmp
inc
cs
daa
pop
xchg
cs
addr16
jno
dec
data16
das
adc
xchg
inc
pop
fs
and
sbb
das
pusha
xchg
sar
adc
inc
jecxz
movl
cmp
testl
fs
jge
jmp
pop
mov
cld
jle
imul
insl
sub
insl
test
or
aad
inc
push
push
pop
sbb
popa
mov
test
inc
push
sub
imul
push
jne
sbb
daa
sbb
popf
add
pop
inc
imul
bound
sub
cld
add
mov
inc
daa
addr16
ds
mov
dec
cmp
fwait
cli
cmp
daa
pop
shl
das
cld
jmp
cmp
pop
cmp
cmp
add
clc
cmp
cmp
clc
dec
lods
mov
pop
jo
in
cmp
cmp
pop
sbb
jo
inc
cmp
cmp
bound
cmp
push
mov
test
aad
adc
cmp
fucomi
pop
es
cmp
cmp
jo
outsb
mov
pop
clc
jb
cmp
aas
movsl
jbe
lods
jns
push
cmp
addr16
sbb
pop
jge
mov
mov
dec
popf
andl
sub
cmp
cmp
dec
jae,pt
cmp
inc
cmp
in
mov
push
popa
pop
jbe
test
clc
push
pop
inc
cmp
pop
add
scas
mov
pop
insl
xlat
or
cmp
pop
push
pop
pop
mov
gs
dec
mulb
cmp
mov
dec
pop
mov
outsl
adc
cmp
dec
ja
popf
pop
addl
sub
ljmp
in
dec
cmp
cmp
sub
dec
sub
cmp
push
sti
cld
mov
dec
pop
add
cs
cmp
mov
aas
bound
pop
or
outsl
movsl
push
insl
pop
loop
arpl
dec
cmp
fistpll
negb
pop
imul
pop
outsl
imul
cmp
aaa
cmp
insb
xchg
or
jg
daa
in
adc
or
dec
aas
cmp
inc
cmp
pushf
sub
cmp
divb
xchg
and
popa
mov
cmp
push
ja
fucomi
testb
cmp
gs
cmp
pop
imul
sahf
inc
sbb
dec
cmp
cmp
cld
add
push
arpl
in
pop
test
cmp
aaa
sar
pop
cmp
dec
xor
sub
std
push
dec
sub
push
pop
inc
mov
imul
push
inc
pop
ret
xchg
cmp
jge
adcl
inc
gs
xchg
xor
imul
outsl
cmp
cmp
inc
dec
inc
inc
inc
push
out
in
xlat
stc
cwtl
push
jbe
sub
xchg
mov
jno
cld
into
inc
jmp
xchg
mov
adc
xor
cmp
xor
push
mov
ds
sub
or
inc
jle
cli
jb
insb
leave
adc
imul
or
sub
or
pop
or
rcl
je
jo
inc
pop
imul
clc
data16
adc
sub
jl
adc
out
or
jmp
xor
mov
aad
ror
outsl
add
mov
scas
adc
mov
inc
and
movzwl
jg
dec
dec
ds
dec
test
pop
mov
outsl
lods
clc
add
xor
test
push
pop
pop
gs
mov
jae
pop
pop
xchg
pop
push
mov
inc
xor
inc
mov
and
sti
pop
sbb
sub
mov
arpl
adc
addr16
ret
std
push
rcrl
mov
mov
push
pop
add
insb
nop
mov
mov
fwait
cmpsb
jmp
xchg
cli
sbb
in
fldcw
cmpl
cs
fcmovnbe
pop
daa
xor
pop
add
pusha
outsb
fwait
mov
mov
sarb
mov
dec
jnp
jl
adc
das
decl
or
cld
cs
push
test
sub
cmp
aaa
mov
fcompl
dec
outsb
jno
outsb
inc
xor
sbb
pop
and
testl
dec
popf
test
clc
fs
mov
je
mov
arpl
mov
scas
fildl
mov
std
pop
imul
pop
pop
fisubs
sub
sub
or
pop
testl
lret
xchg
sbb
lret
stos
sahf
scas
in
mov
lret
popa
daa
mov
xor
in
scas
cmc
in
mov
and
mov
dec
scas
sub
idivb
xor
ljmp
xchg
psubw
mov
mov
mov
mov
fdivl
int
in
les
mov
repnz
pushf
test
lahf
repnz
fs
mov
sarl
ljmp
mov
into
in
mov
stos
mov
jl
mov
jmp
inc
dec
ret
cmc
mov
mov
mov
repnz
call
mov
mov
enter
repnz
in
mov
rol
mov
cmc
int
mov
test
stos
mov
and
cmpsb
mov
mov
mov
lods
mov
dec
mov
lock
mov
clc
ror
stos
mov
daa
mov
mov
mov
mov
lods
lahf
fistpll
mov
call
idivb
mov
lret
ret
mov
ret
dec
enter
mov
rolb
loope
ret
and
ret
mov
out
mov
mov
shll
stc
loope
mov
xchg
popa
sti
lret
mov
loopne
mov
sarb
pop
repnz
in
lds
lret
repnz
rcl
or
and
repnz
icebp
xor
test
mov
test
xchg
lahf
in
mov
fdivrp
std
test
popa
pop
imul
mov
mov
lret
jbe
mov
mov
and
ret
dec
enter
mov
mov
incl
mov
hlt
mov
lahf
movsb
mov
lea
scas
scas
sar
gs
mov
mov
test
mov
aad
test
cmc
mov
gs
inc
lahf
mov
in
iret
test
icebp
mov
hlt
aam
mov
outsl
into
lods
lret
cmpsb
mov
loope
call
test
in
fldenv
lret
bswap
mov
lahf
out
push
fnstsw
sub
iret
les
int
dec
pushf
mov
mov
leave
leave
mov
les
lea
mov
mov
out
cmp
in
ret
enter
lds
clc
xchg
cld
outsl
dec
fisttpll
xlat
mov
ss
test
mov
out
mov
das
stc
fildl
mov
mov
dec
xchg
pop
mov
test
testl
lret
enter
addr16
shll
stos
repnz
out
push
cmpsl
mov
mov
lret
enter
dec
mov
ret
inc
mov
lds
pop
add
lret
inc
mov
rcrl
ljmp
mov
out
int
in
dec
stc
mov
ror
mov
mov
sub
mov
in
scas
mov
pop
js
stos
frstor
lds
mov
stc
mov
in
mov
mov
shrl
mov
mov
jmp
popa
mov
idivb
stos
das
lods
rcl
hlt
rcl
repnz
inc
push
jae
imul
sarb
movsb
outsl
ret
pop
dec
sub
lods
mov
pop
dec
adc
lods
lahf
rorl
js
pop
in
inc
gs
mov
pushf
outsb
xor
ret
mov
ret
lret
cmpl
adc
mov
sub
loopne
out
pop
pop
insl
mov
scas
in
xchg
jl
or
test
xor
mov
mov
adc
mov
cmp
or
jmp
ljmp
jg
adc
xchg
mov
dec
lahf
shl
cs
scas
mov
jmp
pop
loopne
mov
mov
ret
mov
dec
lcall
adc
lret
mov
pop
xlat
fstl
mov
leave
xor
lret
mov
add
int
test
push
push
push
pop
shl
shld
pop
scas
mov
addr16
mov
lahf
shrl
cli
or
stos
out
lret
dec
xchg
cld
les
out
loopne
ffreep
mov
dec
mov
pushf
mov
mov
aas
mov
cmc
scas
push
push
into
in
sbb
test
pxor
lahf
pop
dec
ret
popf
jecxz
sbb
mov
andl
icebp
movsl
fisttps
iret
mov
lock
js
mov
mov
dec
mov
aam
iret
aam
or
add
shl
mov
popa
call
rcll
stos
repz
cmpsb
enter
loope
or
cmpsl
enter
test
sbb
pop
int3
mov
mov
sarb
lahf
jmp
xchg
rol
das
lahf
leave
mov
stc
das
mov
mov
or
fbstp
jno
pop
shll
jo
or
loop
hlt
out
sub
xchg
sbb
add
out
mov
xchg
sbb
int3
jo
xchg
lret
mov
lods
loop
ret
int
mov
mov
xchg
cmc
sub
push
mov
icebp
pop
movsl
mov
hlt
xchg
push
pop
stos
lods
out
popa
xchg
lret
ljmp
add
scas
mov
cli
int3
mov
and
ret
lahf
lds
mov
jge
xchg
xchg
ror
orl
fcoml
mov
enter
mov
mov
mov
das
int3
ljmp
nop
das
btc
into
movsb
lods
mov
stos
rorb
mov
aas
add
jg
mov
lahf
mov
test
mov
lret
or
stos
mov
pop
mov
dec
not
call
cmpsl
ret
fstpl
mov
ret
fcomps
repnz
lods
loopne
xchg
std
adc
mov
dec
bound
out
mov
movsb
sub
mov
cmp
int3
cmpsl
int3
mov
lds
shr
ret
test
sbb
jg
mov
pop
test
stos
xchg
popl
aaa
sub
mov
or
lret
fcmove
out
mov
sbb
or
mov
and
mov
mov
xchg
xchg
je
sahf
mov
pop
repnz
or
rcl
fnstenv
ret
jne
in
mov
repnz
and
jp
jmp
mov
or
bswap
lahf
dec
mov
lret
rcrl
iret
jmp
lock
iret
rol
pusha
adc
push
repz
rolb
adc
mov
dec
into
xor
inc
jmp
sahf
cmpsl
xor
sub
mov
cmp
mull
mov
mov
and
scas
mov
mov
stos
mov
movsb
stc
and
inc
aas
mov
jecxz
shll
shlb
dec
std
in
dec
and
into
mov
xchg
fstp
dec
lds
xchg
lret
psubsw
outsl
mov
mov
add
iret
pop
lahf
xlat
shll
cld
nop
ret
shll
in
inc
pushl
ret
and
inc
mov
mov
add
ret
das
mov
decl
pop
or
mov
int3
cmpsb
enter
push
bnd
lahf
int3
cmpsl
mov
frstor
lods
mov
out
jmp
aas
neg
mov
rol
aas
or
enter
mov
leave
lahf
das
ret
pop
mov
pop
adc
lret
mov
fadds
mov
movsb
aaa
push
mov
dec
mov
ret
dec
jl
cmc
mov
mov
shrb
lahf
test
fbld
cmpsl
mov
jns
mov
mov
pop
mov
int
stc
gs
int
out
scas
out
lods
rcll
les
clc
dec
leave
call
iret
repnz
das
sahf
adc
jo
fidivrl
cmpsb
jno
mov
outsb
mov
outsl
mov
les
cmp
lods
dec
xlat
mov
mov
or
mov
pop
dec
mov
leave
jecxz
mov
lahf
ret
cld
nop
outsb
xor
leave
shlb
cmp
pop
pop
pusha
loope
int
out
mov
into
mov
int
mov
or
mov
pop
mov
fmull
das
int3
xlat
iret
fnstsw
cld
ret
pop
sbbb
jg
mov
roll
xchg
mov
mov
scas
fisubs
fmull
enter
adcl
out
xchg
cld
and
lods
imulb
mov
leave
mov
pop
testb
out
lret
aam
and
lods
lods
in
shlb
lods
or
or
dec
shld
add
jle
cmpsl
mov
cli
lahf
inc
xor
mov
shll
push
iret
enter
out
inc
xchg
pop
lret
stos
mov
leave
idivb
andl
dec
dec
std
in
int
xor
add
out
lods
and
or
mov
mov
sahf
cmp
shld
xchg
jmp
push
lret
mov
negl
inc
shrl
mov
ror
sbb
adcl
push
add
push
jg
and
iret
loop
mov
scas
fstpt
mov
pop
int
iret
in
push
pop
mov
into
aas
mov
lret
dec
icebp
mov
imul
jne
mov
aas
leave
push
mov
sarl
mov
ror
in
cmpps
movsb
shl
mov
scas
mov
clc
sub
pushl
negb
movsb
bsr
lahf
jg
mov
lea
enter
push
ret
loopne
outsl
sahf
xor
xor
mov
mov
jmp
adc
sbb
xchg
sub
cmpl
xor
pop
insl
out
mov
stos
das
movsb
push
lret
int
in
dec
pop
rolb
lret
in
pop
mov
repnz
mov
ret
imul
pop
pop
fimuls
mov
pushf
scas
sarb
popf
stc
shlb
ret
add
aam
mov
pushf
mov
fnstcw
shlb
hlt
arpl
or
ret
lods
inc
in
lds
pop
jae
sbb
gs
dec
mov
insl
mulb
es
iret
insl
outsl
dec
mov
mov
in
push
adc
mov
lcall
mov
push
ljmp
dec
or
push
int
clc
lret
cld
stos
mov
jge
ffreep
hlt
lret
or
mov
test
fwait
mov
leave
dec
push
in
inc
in
push
cmp
push
dec
push
cli
push
jae
repz
or
jb
pop
insl
adc
gs
sahf
mov
push
cmc
cld
in
jmp
outsb
and
fcomi
in
or
cli
outsb
cld
xor
outsb
std
sbb
cld
dec
cmp
lds
insb
cli
sbb
sti
jno
xor
pop
es
lret
decl
jo
pusha
je
sti
mov
and
pop
insb
imul
popaw
push
dec
adc
imul
movsb
movsb
inc
lds
cs
cs
pop
push
stos
ljmp
sub
pusha
std
push
dec
push
xor
ffreep
fimuls
mov
cmp
cli
fdivrp
mov
stc
imulb
imul
popa
outsb
daa
add
std
outsb
popa
gs
dec
jo
push
jo
addl
inc
push
dec
inc
ds
fdivr
call
fs
pop
clc
std
pop
cli
sub
popa
sti
outsb
clc
pop
pusha
insl
push
insl
inc
mov
fsts
scas
shlb
and
fldt
gs
pop
repnz
ljmp
and
pop
outsb
pop
arpl
bound
pop
push
fldt
and
inc
je
addr16
outsl
push
mov
jmp
arpl
inc
push
sbb
push
les
jo
push
pop
ds
mov
imul
ja
fisttpl
les
notl
dec
andb
mov
mov
dec
pop
pusha
imul
inc
push
cmp
insl
repz
in
mov
adc
inc
inc
cmp
push
inc
dec
cmp
ljmp
lret
dec
insl
outsb
insl
cmp
inc
sti
dec
outsl
bound
pop
pop
sbb
sub
bound
lods
insl
push
and
sub
push
bound
xor
inc
fistpl
fnstsw
daa
inc
dec
dec
dec
lahf
or
push
add
ja
push
mov
sbb
sbb
push
inc
sub
es
add
pop
pop
pop
imul
outsl
or
pop
jmp
or
sub
add
aas
pop
pop
subl
xor
pop
xor
jbe
sub
dec
dec
and
xor
in
fnstcw
insb
pop
add
or
adc
notb
sub
pop
dec
insl
jb
xor
sub
and
test
ss
popa
fs
loope
mov
pop
daa
imul
lea
xchg
aaa
mov
shlb
dec
mov
inc
clc
jg
dec
push
sbb
dec
sub
daa
sub
push
cmp
pop
imul
or
mov
outsl
outsl
sub
daa
sbb
sub
add
sbb
aaa
mov
frstor
xor
js
ret
push
pop
popa
arpl
xor
shll
fildl
jno
inc
addr16
test
cld
ljmp
xor
gs
jo
sub
insb
push
pop
pop
imul
or
cmp
es
sub
and
sub
pop
outsl
xchg
das
gs
insl
je
pop
pop
xor
insl
adc
sarl
arpl
or
sub
sub
and
dec
push
movsl
mov
ljmp
addr16
popa
bound
arpl
push
pusha
and
cmp
fsts
lea
sbb
inc
frstor
pusha
xor
fldt
inc
pusha
xor
dec
xlat
insl
cmp
mov
addr16
or
arpl
sbb
push
adc
xor
sub
pop
outsb
jbe
pusha
pop
das
pop
out
inc
cwtl
mov
xor
sub
clc
mov
xchg
push
xor
sub
cmpsw
mov
es
addr16
popa
dec
xor
faddl
sub
aaa
pop
imul
sub
xor
arpl
gs
pop
push
dec
jne
pusha
cmp
cmpsb
inc
loope
cld
pop
popa
pusha
sub
fs
lret
orl
sub
daa
and
push
and
popa
sub
cmp
clc
and
sub
mov
pusha
sub
cmp
and
sub
sar
test
in
and
sub
pop
cs
mov
mov
inc
sbb
mov
sub
repz
aaa
pop
and
insl
pop
xor
sub
imul
pop
add
cmp
xchg
jo
sbb
imul
sub
or
dec
push
gs
cmpsb
jbe
lock
push
arpl
pop
jecxz
jo
sub
sti
and
mov
popa
dec
dec
ds
arpl
aaa
push
imul
pusha
jae
push
dec
imul
pusha
push
dec
cmp
popa
insb
fimuls
outsl
pop
outsl
dec
arpl
lock
insb
lds
dec
ja
push
adc
pusha
xchg
jle
scas
mov
inc
bound
or
outsl
arpl
xchg
in
pop
pusha
insl
data16
jno
pop
insl
aas
sarl
arpl
ds
pop
imul
inc
jno
insb
fs
pop
imul
pop
das
cmp
pop
push
inc
mov
addr16
not
movsl
insb
pop
dec
pop
cmp
pop
jmp
mov
inc
dec
pop
dec
ja
inc
adc
dec
lea
std
outsb
inc
arpl
outsb
jo
pop
test
inc
aaa
ljmp
arpl
xor
ja
dec
fildl
mov
insl
add
xor
bound
imul
imul
or
ja
add
sbb
fisttpl
sub
fcmovnb
cs
or
fisubs
gs
outsb
sub
std
daa
sub
das
xor
lds
inc
inc
sub
incl
inc
inc
inc
inc
dec
inc
dec
dec
dec
dec
dec
push
dec
push
push
push
push
push
pop
pop
pop
jge
adcl
push
fs
push
imul
mov
jb
jo
aas
inc
cmp
out
pop
clc
sub
pop
es
pop
adc
fs
aam
pop
movsl
pop
cltd
and
addr16
inc
cmp
and
xchg
mov
arpl
pop
push
jnp
adc
outsb
arpl
insb
insb
pop
push
inc
ds
pop
dec
pop
fdivrs
sbb
cmp
dec
lock
repnz
push
mov
cmp
cmp
adc
jne
pusha
dec
jae
sub
jno
push
jb
adc
xor
xor
add
aas
sub
push
test
jo
addr16
mov
jg
jb
je
aas
inc
cmp
cmp
shr
mov
aaa
stc
add
imul
cwtl
in
and
sub
out
rcrl
outsb
pop
outsb
add
divl
stc
add
sti
mov
arpl
add
xor
es
das
dec
sub
lcall
and
jns
lds
dec
sbb
xor
dec
test
sbb
adc
addl
xor
xor
mov
inc
insl
adc
imul
je
dec
bound
outsb
xor
push
or
cmp
adc
xor
addl
fcmovu
fimull
inc
inc
dec
dec
xor
pop
cs
inc
imul
sub
cmpsl
jno
inc
push
jmp
mov
imul
jae
gs
insl
addl
or
push
sub
sub
sub
ljmp
push
sub
je
xchg
sub
sub
sub
sub
or
push
xor
xor
and
jle
nop
sub
sub
leave
cs
sub
sub
sub
sub
das
adc
jecxz
call
fildll
jl
mov
xchg
cmpsb
sub
xor
sub
push
sub
xor
cs
xor
cmp
dec
sub
xor
mov
sub
xor
das
add
cmp
ds
ljmp
push
xor
das
out
out
xor
xor
xor
xor
jne
xchg
xor
xor
jg
pushl
loope
out
xor
xor
cmp
xor
xor
xor
jg
ljmp
xor
xor
xor
xor
push
sbb
loopne
decl
xor
icebp
xor
and
fisttps
xor
xor
cld
aaa
add
mov
aaa
frstor
xor
lds
aaa
subl
pushl
cwtl
xor
aaa
out
repz
add
nop
inc
aaa
pop
push
shlb
loope
je
pop
xchg
xor
cmp
ss
xor
pushl
fidivrl
out
pushl
or
cmp
leave
add
cmp
push
cmp
cmp
mov
xlat
cvttps2pi
xchg
sub
jno,pn
xchg
sub
fldt
mov
daa
das
inc
sub
xor
pop
xor
mov
jp
xchg
mov
cwtl
sub
xor
das
fldt
xor
lock
pop
sub
xor
sub
pop
xor
xor
xchg
xor
xor
das
shlb
aam
loope
hlt
xor
xor
xor
ljmp
dec
xor
cs
mov
xor
das
jmp
nop
xor
xor
ss
xor
and
mov
cmp
ss
decl
inc
xor
repnz
cmp
xchg
cmp
cmp
out
jg
cmp
cmp
cmp
and
pop
aaa
js
test
test
stos
xchg
sub
cld
sub
jmp
fistpll
sub
sub
subb
push
mov
or
outsl
sub
sub
pop
sub
ljmp
cs
sub
idiv
or
inc
das
inc
cs
sub
das
mov
ret
sub
xor
dec
xor
sub
xor
sub
mov
cmc
xor
mov
mov
out
adc
das
cld
jmp
jge
xchg
mov
lcall
clc
daa
xor
xor
incl
push
xor
xor
xor
xor
xor
xor
das
in
xor
xor
xor
xor
inc
xor
inc
mov
xor
jg
shlb
xor
add
adc
pop
and
inc
xor
pop
ss
xor
insl
repnz
pushl
xor
xor
xor
xor
sti
aaa
push
xor
pushl
pushl
mov
xor
xor
mov
pushl
cmp
cmp
aaa
shll
in
out
cmp
cmp
aaa
fdivr
pushl
cmp
cmp
test
insl
sarb
fdivrs
out
sti
cmp
cmp
cmp
cmp
aaa
mov
arpl
mov
stos
jg
sub
sub
call
scas
cs
sub
sub
imul
sub
subb
xor
sbb
xor
fcom
ljmp
sub
xor
ss
inc
xor
std
call
jns
jbe
xchg
xor
cs
icebp
das
sub
xor
xor
sub
inc
xor
arpl
xor
xor
cs
test
push
xor
push
xor
loop
pop
cli
jp
xorb
mov
xor
xor
xor
dec
outsl
cld
push
cld
pop
xor
mov
lret
je
jbe
xor
xor
xor
push
fs
add
shll
les
rcrb
jg
ret
das
fbstp
cmp
pop
xor
nop
ss
cld
shrb
cwtl
lea
lret
repnz
call
outsb
xorl
pop
xor
lea
ss
aaa
out
xor
loope
call
aaa
adc
and
xor
popf
xor
xchg
call
jle
xor
cmp
das
cmp
mov
cmp
pop
cmp
push
cmc
pop
or
inc
imull
xor
mov
sub
lods
sub
in
sub
sub
xor
sub
fwait
or
and
pop
xor
in
add
xor
xor
cmp
inc
cmp
push
and
jg
xor
test
add
aaa
sti
pop
dec
cmp
out
xchg
iret
mov
int
fisubrs
jmp
in
insl
ljmp
sbb
and
sub
pushl
dec
cs
sub
ja
mov
lds
lret
sub
insl
sub
sub
jb
test
das
lock
repz
jg
cs
sub
das
jecxz
ljmp
jmp
or
or
sbb
sbb
sub
xor
push
jmp
sub
pop
xchg
das
les
shrb
fbstp
cld
mov
sbb
sbb
cmp
cmp
das
push
sub
xor
jg
mov
jne
push
lea
das
pushf
sub
xor
or
add
xor
pop
sub
jnp
test
xchg
sub
xor
xor
outsl
cld
int
in
in
xor
xor
imul
lods
cs
outsl
pop
cli
pushl
mov
xor
cs
xor
xor
sub
loopne
xor
mov
dec
pop
std
jae
cld
dec
fnsave
sub
sub
addr16
lods
add
and
or
sub
pop
xor
subl
add
iret
or
sti
sub
sub
sub
or
std
aas
push
outsl
ja
gs
add
push
arpl
cld
jg
cmpb
jae
add
insl
gs
popa
je
inc
fimuls
dec
dec
and
push
push
inc
push
inc
pop
inc
insb
imul
inc
fistl
outsb
je
jb
popa
imul
neg
mov
adc
and
arpl
data16
adc
ss
and
xor
push
je
popa
fsubr
inc
popa
dec
imul
dec
imul
fisubl
push
push
push
outsl
xchg
push
dec
inc
popa
arpl
pop
aas
mov
int3
add
popa
je
arpl
arpl
mov
ss
and
jo
jae
arpl
arpl
daa
stc
outsl
outsb
imul
mov
sub
jae
bound
adc
jo
push
pop
ret
pop
pop
or
jbe
and
jae
in
mulps
jg
jbe
divb
jae,pn
inc
jo
adc
push
fnstsw
ret
aas
add
xor
sub
push
and
out
ret
dec
push
aas
jb
outsb
sti
ss
lret
and
inc
outsl
outsl
je
mov
negb
jae
outsl
outsb
imul
jae
ret
inc
rcr
imul
inc
adc
gs
mov
fstp
aas
imul
insb
popa
push
ds
pop
inc
jg
in
fdivrs
adc
push
push
adc
jns
dec
mov
int
cmc
jo
adc
fs
imul
insb
andl
jne
dec
xchg
sub
jne
push
mov
push
inc
inc
mov
lods
inc
mov
fcmove
jb
adc
rcr
pop
dec
outsl
sub
cmp
push
or
int
jne
push
inc
push
or
dec
gs
mov
pcmpeqw
mov
xor
jae
shll
psadbw
or
cmp
push
or
jae
xchg
jns
add
ja
arpl
dec
push
and
mov
imul
insb
sti
imul
imul
dec
insl
imul
inc
pop
xor
jae
decl
dec
pop
adc
jns
dec
push
jne
push
inc
jne
inc
mov
sbb
in
mov
cwtl
adc
add
pop
xor
jg
outsb
fildl
xor
add
mov
stos
xchg
in
divb
daa
add
ja
outsl
add
lret
add
fwait
add
jp
sti
mov
pop
lcall
pusha
inc
repz
add
mov
adc
mov
push
jbe
cli
imul
push
lock
fldt
add
add
fwait
add
orl
mov
jge
add
pop
lods
add
ljmp
sbb
in
fisttpll
xchg
inc
dec
and
outsb
hlt
iret
iret
cwtl
clc
ss
idiv
decl
cld
mov
push
cmp
aad
in
add
leave
daa
rcrb
add
jbe
jg
add
xchg
dec
test
mov
add
dec
push
add
subl
add
push
add
push
adc
icebp
jg
arpl
pop
push
arpl
push
pop
sbb
lahf
mov
adc
pop
inc
dec
inc
push
sub
in
incl
adc
add
dec
dec
push
inc
popa
inc
add
call
add
rolb
nop
add
add
and
sub
sub
cltd
shlb
jns
add
aas
repz
push
sbb
adc
xchg
add
add
jg
sub
test
add
mov
add
jg
mov
push
add
jb
jbe
subb
sub
add
add
add
sub
lret
lret
or
add
gs
je
inc
imul
outsb
addr16
mov
fsubrp
or
gs
pushw
push
inc
insb
jne
push
ds
outsb
insl
and
je
push
imul
push
dec
push
add
outsl
jae
dec
daa
sti
pop
in
popa
outsb
fs
inc
jb
outsl
jb
inc
je
fsubrs
je
imul
jbe
inc
js
and
insl
jo
dec
popa
insl
push
inc
or
jne
xchg
sbb
mov
push
dec
arpl
jae
jo
outsb
or
dec
jnp
std
pop
imul
je
sbb
xchg
aaa
add
jne
dec
mov
dec
push
adc
sbb
ss
bswap
ret
insb
fnstenv
xor
jns
flds
arpl
xchg
sbb
in
sub
push
stos
jae
outsl
outsb
aad
fcmovnb
std
inc
fs
dec
outsl
popa
fs
add
jns
fcmovnu
pusha
mov
testb
xchg
adc
mov
jo
ror
gs
outsl
outsl
insb
shll
xor
push
lods
outsl
fistps
inc
dec
mov
insb
xor
inc
add
mov
outsl
lea
bound
sbb
nop
mov
adc
push
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
lea
adc
or
and
std
insl
or
mov
jp
call
and
incl
insl
fstpt
das
or
repz
and
xor
jns
aaa
xor
mov
out
ud0
inc
xchg
insl
mov
pop
xchg
sbb
dec
cmp
jge
or
lcall
mov
cld
lock
push
or
icebp
adc
add
mov
bound
push
test
jno
outsb
add
pop
cmp
movsl
dec
mov
mov
lcall
or
push
xorl
call
cli
or
out
mov
lea
push
or
sbb
xchg
sub
xor
das
in
cs
jno
jo
gs
jo
pop
mov
ja
push
pop
pop
andps
cmp
dec
pop
je
wbinvd
fildl
or
sub
sub
or
push
lods
ds
push
int
out
push
adc
fdivl
jae
jno
std
arpl
outsb
or
jo
je
or
imul
dec
mov
insb
or
insl
bound
scas
pop
cmp
in
ja
or
jbe
push
sbb
out
or
jo
inc
inc
js
inc
jb
das
outsl
outsb
je
je
insl
cmp
arpl
push
jae
sbb
cmp
pusha
xor
outsb
cs
imul
inc
jo
lods
jmp
and
add
out
add
sbb
mov
push
push
fs
mov
mov
popa
adc
dec
adc
aaa
jae
gs
or
xor
popa
push
outsl
adc
lods
fisttpll
pushf
movsb
fsts
xor
jbe
push
mov
xlat
push
push
jo
jb
popa
dec
sub
rcr
mov
inc
jne
mov
or
jo
push
xchg
jnp
leave
ss
outsl
jns
insl
ja
mov
imul
inc
pushl
sti
outsl
add
add
or
adc
add
add
fidivs
adc
mov
or
inc
add
xor
mov
int
push
das
adc
dec
ss
add
adc
push
aaa
jnp
mov
mov
inc
add
fisttpl
push
insb
mulb
cs
inc
daa
nop
jmp
jbe
fsubs
and
pop
popa
xchg
dec
cwtl
fcoml
lsl
inc
fucomi
inc
cs
xor
fcmovne
faddp
pop
xchg
dec
jae
dec
mov
dec
adc
add
iret
pop
sbb
stos
inc
add
add
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
