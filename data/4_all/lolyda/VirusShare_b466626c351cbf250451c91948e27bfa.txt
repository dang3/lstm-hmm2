mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
cwtl
jno
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
sbb
pusha
scas
sti
push
push
push
push
adc
xchg
mov
sarl
rclb
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
test
insl
das
and
sarb
gs
movl
pop
sbb
ja
add
mov
or
in
mov
pop
mov
daa
ret
jmp
fldz
cmp
add
push
fsubrl
mov
aas
push
sbb
ret
pop
add
xchg
lahf
push
push
mov
and
test
fdivrl
push
xchg
mov
or
add
btc
mov
inc
dec
push
testb
decl
mov
dec
test
je
mov
lea
adc
push
xor
mov
add
add
xchg
pop
fs
or
jne
and
call
out
rol
or
dec
push
scas
mov
adcb
fsubrl
push
rclb
mov
orl
data16
sub
pop
in
ret
sbb
sub
insl
mov
add
adc
sbb
iret
sbb
cmp
add
int
mov
sbb
test
jne
sbb
lea
shr
push
ss
pusha
xor
in
sarl
scas
cmpw
jne
lret
push
pop
cmp
sbb
neg
add
or
insl
dec
jbe
sub
push
or
lcall
mov
pop
and
and
divl
test
push
fwait
pop
ss
lock
sub
push
mov
pushf
or
je
repz
addr16
mov
mov
push
mov
adc
sbb
jbe
mov
mov
or
outsl
add
adc
in
jmp
outsl
test
sbb
sbb
xor
dec
fwait
jnp
testl
rorl
push
sub
lea
push
add
stos
stos
stos
push
push
ss
sub
jne
inc
inc
jae
mov
adc
adc
adc
clc
push
iret
fmulp
or
pop
add
dec
mov
mov
adc
dec
dec
std
pushl
into
mov
mov
or
shl
add
inc
mov
adc
repnz
not
sub
lea
mov
push
outsl
or
jmp
push
and
mov
movsb
mov
mov
push
push
lea
imul
insb
mov
xlat
jne
js
mov
call
xor
pushf
lds
cmp
rclb
enter
in
lock
mov
inc
push
or
push
push
jmp
cmpsb
daa
je
cmc
add
je
mov
push
imul
and
das
repz
iret
or
pop
lock
andb
xchg
std
jl
lcall
adc
add
inc
adc
xchg
adc
add
imul
or
dec
add
pop
push
loope
adc
inc
into
mov
mov
push
push
lds
sbb
out
inc
pop
mov
push
mov
inc
sbb
dec
or
sti
push
sub
sub
dec
push
loope
outsb
adc
jne
push
scas
stc
mov
mov
or
stos
push
lret
mov
rorb
inc
rorb
add
rorl
arpl
icebp
or
mov
push
mov
pop
adc
adc
push
sbb
mov
insl
mov
push
add
mov
mulb
pop
mov
push
xor
rcll
lret
repz
je
xor
mov
cli
sub
mov
mov
mov
jbe
xchg
sbb
sbb
sub
mov
push
or
sub
or
xchg
jo
adc
or
push
test
sbb
xor
inc
inc
cmp
jnp
sbb
sub
jl
sbb
adc
inc
jmp
aad
cmp
add
inc
incl
lea
push
push
ret
in
xor
sbb
xchg
push
test
jmp
or
sub
dec
jbe
enter
pop
push
adc
pop
fmuls
mov
dec
pop
loope
adc
push
push
cmp
cmp
and
ss
add
pop
lret
xor
es
imul
xlat
pop
jp
in
add
or
push
xorl
in
gs
dec
mov
push
push
add
jnp
mov
or
push
lret
add
out
pop
lock
mov
sahf
mov
jae
enter
cmp
or
incb
mov
ret
mov
and
or
or
shll
mov
mov
enter
sbb
pop
aas
push
push
add
or
int
cmp
cmp
popa
or
mov
iret
dec
xor
push
adc
adc
and
adc
in
sbb
scas
mov
lea
pushf
push
xchg
sbb
mov
sarl
mov
cmp
jne
mov
sbb
xor
cli
mov
roll
cld
lret
or
mov
or
add
imul
mov
push
dec
jns
add
jae
rcl
jl
in
and
add
out
or
jmp
and
mov
arpl
lock
mov
sbb
mov
xchg
movsb
adc
lahf
addr16
sub
ljmp
clc
mov
add
cmp
jecxz
lret
pushf
jnp
cs
mov
imul
pop
cmp
int
jle
sub
jb
sub
sub
xchg
mov
mov
faddl
ret
fcmovnbe
sub
mov
in
loopne
push
lret
dec
mov
push
push
ret
mov
xor
cmp
sbb
das
sbb
push
bound
xor
sbb
scas
les
cmp
or
test
popa
ljmp
test
dec
sbb
pop
sti
sahf
in
xor
push
dec
cmp
enter
sub
lods
push
sbb
and
xor
popa
rorl
add
ds
push
addr16
dec
ret
lods
push
rcrb
adc
xchg
gs
in
push
add
out
test
pop
pop
mov
adc
enter
pop
or
aam
rorl
xchg
dec
mov
jnp
nop
push
or
call
imul
sbb
push
mov
add
add
fadds
out
nop
push
cli
and
add
xchg
pop
mov
aad
sub
mov
sub
addr16
push
mov
dec
sub
out
cwtl
inc
xor
mov
or
or
adc
scas
into
sub
push
xor
inc
and
dec
pop
mulb
mov
std
sub
push
lock
inc
sub
and
and
addl
push
dec
xchg
or
or
aad
out
mov
jp
add
xor
int3
cmp
mov
mov
push
or
bound
int3
push
dec
jl
sbb
inc
push
inc
rorb
add
dec
adc
push
fldt
inc
loopne
mov
mov
frstor
cli
or
or
ljmp
jae
sub
adc
adc
imul
shlb
sbb
aaa
shlb
adc
pop
and
aas
push
data16
mov
mov
mov
xchg
sbb
pop
jne
inc
add
adc
sbb
ret
dec
add
mov
roll
scas
movl
and
mov
dec
mov
pop
das
mov
mov
scas
dec
sub
pop
sti
imul
xor
mov
sbb
sbb
mov
mov
and
mov
pusha
xchg
loopne
cmp
sub
faddl
xchg
add
fwait
mov
xlat
push
sbb
fwait
jl
xchg
inc
sub
pop
outsb
xor
or
inc
sbb
sbb
dec
cmp
icebp
lods
adc
lcall
pop
cmp
movsb
andb
lods
sub
out
incl
adc
or
xchg
shlb
fwait
xchg
mov
das
lock
cltd
add
sub
cmp
sbb
push
fcmovnb
or
or
int3
into
push
sbb
minps
or
mov
mov
dec
aas
sbb
movl
xchg
pushf
js
pushf
aam
loopne
es
nop
aad
add
sbb
cmp
mov
pop
adc
pop
and
loopne
inc
mov
lds
clc
xchg
pop
or
fmull
mov
popa
pusha
lret
fs
gs
int3
sbb
xor
mov
adc
jge
aaa
loop
enter
data16
or
mov
lock
mov
mov
insb
das
push
sbb
mov
or
imul
lret
pop
jmp
cmp
hlt
jmp
cld
lds
scas
leave
test
rolb
sahf
fildll
loop
push
mov
cmp
rcll
xchg
test
mov
shrb
xchg
cmp
xchg
mov
inc
clc
fsubl
mov
es
cmpsb
mov
mov
rcl
dec
add
adc
jmp
and
mov
js
inc
int
in
push
fldl
fsubr
add
mov
push
and
adc
adc
addr16
dec
mov
das
enter
cmp
cmp
adc
inc
mov
adc
fnstenv
jae
sub
int3
fs
insb
ficoms
jg
int
add
sahf
fmul
pop
and
mov
lahf
cmp
sub
loope
fistps
adc
insb
fsubl
sbb
insb
mov
dec
push
in
push
sub
sub
dec
xor
push
xor
fisubrs
imulb
call
shrl
inc
cltd
sub
inc
sar
out
sbb
push
xor
fwait
adc
push
fdivp
in
insb
sbb
in
pop
pop
fs
mov
cmp
pop
inc
pusha
ret
mov
mov
leave
cs
jl
add
add
rclb
mov
mov
sti
sbb
mov
popa
inc
clc
test
je
xchg
mov
add
cmpsl
imul
cld
data16
popa
fistl
pushf
cmp
fcmovnb
bound
inc
jl
fsubs
mov
inc
leave
sarl
fadds
and
pop
repnz
cmp
pop
test
mov
sbb
inc
cmp
xchg
push
inc
mov
jl
adcl
dec
cmp
in
xor
xor
adcl
dec
popl
dec
or
xor
fs
add
sbb
js
aad
fadds
jae
fdivl
xor
sub
test
dec
lock
push
lret
outsb
fs
lock
test
aad
add
add
call
popa
aam
push
add
insb
add
out
and
or
mov
mov
sbb
testb
and
pop
std
mov
pop
add
jp
sub
xor
pop
andb
or
adc
cmp
rorl
subl
addr16
mov
jb
push
stos
pop
sub
jns
mov
mov
sub
pop
xchg
fdivrs
aam
nop
mov
add
lds
das
and
xchg
or
push
dec
cvttps2pi
cmp
inc
inc
xor
in
out
push
sub
sbb
sub
jnp
jnp
loope
int
ret
or
mov
lods
prefetch
pop
out
xor
int
add
jae
pop
mov
xchg
idivl
out
add
repz
xor
insb
cli
sbb
and
test
movb
adc
xchg
into
cmc
sub
popa
sbb
test
cmp
adc
sti
sub
adc
mov
push
daa
jnp
movsl
dec
adc
mov
or
jl
or
or
push
shll
sbb
push
fmull
out
inc
push
push
psrlw
int
or
add
push
push
andb
or
sbb
out
push
lock
add
push
ljmp
sbb
aad
adc
mov
je
or
aad
fsubr
rolb
loope
jg
add
xor
jae
daa
jne
add
call
sti
lcall
sub
mov
cmp
jb
dec
in
push
and
inc
cmp
les
arpl
push
or
addr16
lods
cld
add
jmp
xchg
xchg
xchg
call
mov
xchg
fcom
shrb
int3
xchg
xchg
xchg
xchg
enter
xchg
xchg
xchg
xchg
mov
xchg
xchg
xchg
test
mov
xchg
cwtl
xchg
nop
mov
test
xchg
js
jo
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
pop
push
dec
dec
xchg
xchg
xchg
xchg
inc
inc
cmp
xchg
xchg
xchg
xchg
xor
sub
xchg
xchg
xchg
xchg
and
sbb
xchg
xchg
xchg
xchg
adc
or
jl
lahf
iret
rolb
inc
pushf
inc
mov
out
stc
test
lods
inc
mov
mov
xchg
xchg
xchg
mov
iret
xchg
xchg
enter
aam
and
and
loopne
call
and
add
cmp
add
cmpl
mov
sub
sub
or
add
loop
ljmp
and
lock
xor
mov
ret
push
xor
add
in
insb
call
adc
stc
mov
mov
gs
cld
ljmp
orl
push
or
or
pop
sbb
mov
lock
add
xchg
sarl
pusha
fmul
mov
dec
sbb
lods
sti
sub
adc
cmpsb
mov
push
sti
inc
xchg
lea
test
push
xchg
flds
nop
mov
add
add
mov
idiv
xor
and
inc
or
add
or
repnz
jbe
aam
dec
movsb
std
movsl
das
paddb
inc
rolb
in
movzwl
jmp
mov
mov
jmp
push
pop
pusha
push
push
and
in
imul
xchg
cwtl
xor
inc
in
mov
popa
loope
cli
mov
mov
lods
and
sbb
inc
lcall
xchg
mov
pusha
sbb
push
add
sub
enter
pop
ret
add
add
ja
imul
ret
jp
mov
and
mov
ret
dec
shlb
push
push
xor
outsb
add
xor
jo
loope
push
inc
jb
mov
cmp
adc
inc
lea
adc
mov
test
or
cs
add
in
adc
and
lea
add
dec
mov
mov
ret
into
jg
pop
add
adc
and
out
dec
add
dec
add
mov
movsb
mov
pop
dec
jnp
cmpsb
imul
cmp
add
and
inc
lcall
daa
hlt
adc
lcall
pop
outsb
mov
lcall
dec
lret
in
jnp
push
sbb
adc
pop
adc
pop
mov
call
adc
jb
adc
or
popf
or
das
mov
pop
or
mov
jp
insl
xchg
xor
adc
add
add
jne
mov
das
dec
cmp
or
sub
addr16
xlat
jne
out
sub
push
pop
jns
aaa
adc
pop
mov
jbe
out
movhps
jmp
xlat
jne
cmc
pop
sbb
xchg
daa
push
addl
sub
cmp
insl
mov
mov
push
adc
pop
or
mov
testl
adc
pop
mov
mov
jmp
scas
cmpsb
pop
push
push
addr16
scas
jmp
out
movsl
arpl
or
xlat
xor
push
scas
arpl
shr
lcall
mov
inc
aas
fnstcw
mov
lahf
sbb
push
shll
mov
shll
insb
pop
fwait
cmpsb
pop
ss
dec
cmp
es
dec
xor
shrl
sbb
ds
dec
rorl
add
dec
add
lcall
dec
shll
sbb
clc
dec
in
lret
cmpsb
imul
mov
xor
xlat
or
mov
add
adc
rclb
inc
adc
jb
addr16
pop
inc
loope
or
imulb
inc
imul
adc
shl
pop
lcall
add
lret
cmpsb
imul
add
shll
inc
bound
xor
shll
dec
inc
ds
xor
shll
sub
and
pop
shll
cld
mov
subb
inc
fwait
or
jl
fcoms
add
shlb
out
outsb
pop
str
and
and
das
adc
cs
in
lods
xor
and
cmpb
dec
xlat
aas
xchg
add
shll
pop
pop
jbe
shll
stos
xor
dec
xor
cmpsb
pop
inc
inc
cmp
cmpsb
imul
insb
lcall
addb
xlat
nop
in
add
lock
jle
fs
cmpsl
add
and
inc
leave
fs
das
inc
xor
daa
inc
inc
xor
add
xor
mov
mov
inc
aaa
js
dec
push
repnz
pop
cld
dec
push
dec
loop
cltd
lods
nop
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
in
in
incl
push
dec
xor
cs
insb
or
push
inc
xor
loop
mov
adcl
std
mov
out
mov
std
stc
cli
cld
idiv
std
add
clc
cmp
adc
enter
out
or
jg
lcall
or
mov
enter
sbb
pusha
outsb
push
push
pop
imul
pop
pop
imul
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
incl
inc
push
rcr
or
test
mov
pop
pop
mov
push
pop
std
jg
jmp
sbbl
adc
movsb
jle
pop
mov
push
add
int
fbld
add
mov
push
popa
gs
xchg
xor
sarl
aad
jno
dec
mov
and
fisttps
pop
bound
dec
inc
or
inc
stc
std
pusha
jmp
dec
adc
cld
add
daa
dec
test
rcrl
or
fs
movsl
jns
sti
or
jb
cmp
add
adc
or
pop
or
or
stos
imul
ret
sbb
or
xchg
ret
into
std
sbb
fistpl
paddd
outsb
pusha
je
arpl
movsb
jmp
dec
push
imul
daa
movsb
or
movsb
dec
ds
pop
adc
jle
jl
pusha
daa
mov
dec
pusha
push
or
push
movsl
ret
jo
out
xchg
aas
push
sbbl
cld
das
dec
popa
dec
xchg
dec
decb
push
inc
jg
or
adc
das
lods
pop
pop
cmp
push
loope
inc
push
mov
push
push
popw
push
push
fucomi
decb
xor
stc
adc
clc
ljmp
pushl
cli
push
or
loope
inc
jle
add
xrelease
in
jg
push
dec
jecxz
inc
push
jl
push
insl
or
pop
dec
push
loopne
dec
call
rorl
stc
sti
js
pop
pop
push
mov
push
inc
xchg
test
fidivrl
call
jno
arpl
add
push
loopne
cld
clc
stc
jle
pop
cmp
imul
push
mov
mov
or
incl
or
mov
in
jmp
xchg
lcall
test
in
sub
mov
dec
mov
push
jg
stos
mov
int
insl
insl
adc
inc
jle
test
shll
sarb
dec
xchg
test
push
xorb
and
in
mov
xchg
or
or
pop
push
dec
in
inc
stc
in
filds
push
in
xchg
mov
decb
dec
jnp
pop
jle
and
fs
push
xorb
pop
popa
aam
inc
ret
jnp
add
std
gs
add
clc
mov
mov
iret
daa
fs
arpl
stc
add
sti
int
repnz
pop
aas
sbb
fwait
sbb
xchg
ret
mov
mov
push
push
dec
test
addb
jle
lods
mov
adcb
mov
clc
jp
mov
mov
and
add
cld
mov
xor
inc
fmull
xor
pop
mov
fbstp
fistps
mov
mov
mov
shll
mov
hlt
or
fistl
fbld
adc
daa
fmuls
data16
negb
clc
getsec
pop
aad
out
jle
inc
xor
sbb
push
insb
sbb
fisttpl
cmp
and
popa
xchg
sub
cmp
sti
test
in
and
pop
pop
push
mov
adc
push
mov
in
inc
mov
push
jo
aas
mov
cld
adcb
cld
push
or
outsb
or
mov
or
xor
xchg
out
sbb
outsl
mov
addl
jle
cmp
cli
outsl
xor
jno
ja
shl
rcrl
insl
negl
andb
in
das
lock
sti
or
rolb
mov
testb
and
adc
std
fucomip
sti
insb
mull
xchg
loop
inc
inc
push
push
rorb
dec
dec
dec
lock
out
push
daa
xrelease
cs
xchg
das
mov
test
js
test
add
testl
inc
outsb
add
ficomps
dec
ss
lock
jno
cltd
mov
popf
dec
test
cmp
push
not
cld
outsb
repnz
dec
not
cmpl
inc
shl
sbb
pop
push
push
mov
dec
xchg
dec
or
clc
outsl
mull
jecxz
inc
cmp
jb
and
jnp
movsl
outsl
xor
decb
cli
jb
loop
inc
push
outsb
adc
pop
adc
stc
add
adc
mov
or
clc
jg
in
sbb
insl
add
notb
mov
outsl
lock
cmp
jae
push
cld
push
xchg
cmpb
shl
push
push
cmp
push
out
test
jg
idiv
inc
test
mov
push
adcb
dec
mov
pop
pop
pop
lea
mov
ljmp
loope
aaa
push
and
cltd
orl
cmp
jo
loope
add
push
jmp
es
mov
adc
mov
push
pushl
pop
int
add
sub
jle
or
jge
dec
adc
pop
jg
jmp
pop
jmp
decb
mov
mov
add
push
dec
out
inc
xor
dec
adcl
sub
ss
das
jle
add
jb
xchg
inc
decl
in
jecxz
aas
sbb
out
jecxz
xorb
jno
lcall
in
dec
in
inc
jne
or
inc
add
in
jg
add
insl
cmp
and
pop
clc
ud0
divl
mov
mov
ffreep
inc
dec
jae
mov
sbb
test
inc
imul
sbb
add
dec
inc
jecxz
test
repz
or
cli
pop
mov
mov
out
ss
lcall
out
inc
mov
mov
inc
outsl
xchg
jl
movsb
dec
sbb
inc
daa
inc
dec
bound
js
mov
or
and
jo
dec
repz
add
xor
jl
dec
mov
jecxz
or
adc
pop
fcmovnu
in
sbb
push
cmpb
jecxz
cs
adcl
outsl
push
cld
push
loop
insl
dec
push
notl
sbb
cs
test
cmc
adc
std
mov
mov
test
jecxz
pop
mov
jecxz
adc
pop
outsb
mov
jmp
add
dec
add
imulb
inc
jmp
lods
cmp
ret
icebp
add
icebp
jl
loopne
imul
int
outsb
aas
cld
sub
cmp
or
mov
outsl
xchg
outsl
sbb
sti
ja
inc
in
std
addr16
call
decl
xchg
mov
inc
jmp
roll
roll
les
std
jg
in
in
pop
icebp
addb
sub
lahf
rcll
in
or
clc
ja
adcl
loopne
dec
std
popa
add
add
jb
fnstsw
movb
inc
dec
shll
andnps
popa
inc
aaa
dec
jecxz
push
xor
call
std
rolb
jecxz
shlb
add
arpl
shlb
fmull
jno
cmc
movsl
xchg
mov
in
cmp
adc
pop
cmpl
sti
pop
and
arpl
sar
cmp
sti
pop
xchg
adc
push
fistpll
lock
gs
inc
shlb
out
jl
fwait
js
xchg
nop
push
aad
lret
cltd
test
jge
add
cmpsb
imul
repnz
in
pushl
mov
insl
dec
dec
lods
gs
jecxz
fldenv
adc
or
xchg
xchg
out
std
mov
xchg
pop
out
adcl
push
jmp
dec
jmp
or
sub
dec
push
repnz
call
rcrl
pop
in
or
jnp
mov
in
ljmp
jb
mov
out
aas
out
xor
mov
sbbl
popl
add
add
pop
loopne
cwtl
pop
ja
out
idiv
inc
in
or
cs
pop
ja
jecxz
in
insl
call
mov
adc
add
pop
cs
mov
in
jg
and
cmpsb
mov
pop
les
fbld
jno
mov
or
pop
pop
lds
loop
aad
fsubrl
jno
cmp
or
out
frstpm(287
jb
call
jp
jecxz
jmp
pop
cs
mov
lock
jecxz
sti
jg
jns
scas
xorps
add
out
sub
lock
inc
dec
dec
or
dec
push
mov
test
jp
or
js
incl
test
addl
add
sbb
jnp
sbbl
pop
enter
arpl
rcrl
lret
test
pop
ret
mov
xchg
dec
jg
jge
sub
push
cmp
sbb
cli
jle
or
push
dec
data16
jle
sti
xchg
sbb
pop
push
jnp
mov
outsl
and
dec
xchg
ljmp
pop
insb
jg
mov
jae
push
adc
stos
call
ja
jmp
jnp
movsl
jmp
test
jle
fdivrp
iret
test
mov
mov
dec
pop
in
mov
pop
out
andl
add
push
sti
sar
mov
add
add
movl
jae
push
aad
pop
or
incl
add
ljmp
dec
lret
pushl
sub
jecxz
mov
add
cld
lcall
jmp
sarb
xchg
mov
pop
jge
test
or
in
rcl
out
pop
es
clc
cmp
fiadds
mov
daa
push
pop
outsl
outsb
lock
xchg
pop
rolb
aaa
ret
jg
sub
push
inc
cmpsb
mov
das
add
add
sarb
dec
add
test
jecxz
incl
mov
dec
jo
push
adc
divb
js
dec
loop
cmp
pop
sbb
iret
leave
int3
cld
xor
repnz
or
jmp
pushf
jecxz
xchg
cmp
aad
ret
sub
in
push
mov
loop
push
arpl
pop
fisubrs
decb
addr16
fildl
lahf
xchg
aas
mov
fucomi
dec
call
cli
jecxz
std
sarl
cwtl
les
add
cs
lock
subl
or
or
pop
inc
fistl
orl
jnp
mov
ljmp
cld
push
sub
popf
std
cmp
add
ret
div
lret
cmpl
in
sub
jmp
cli
loope
fwait
movsb
pop
iret
add
fwait
stc
lret
and
mov
test
out
hlt
movsb
popa
stc
incl
lret
addb
inc
cmc
dec
hlt
jno
mov
or
in
xchg
roll
cmp
jecxz
mov
mov
ret
pop
cmpb
subb
out
pop
push
cmpl
sbb
arpl
pop
pop
push
aam
in
out
xchg
push
mov
icebp
jno
test
int
inc
jle
or
lock
xchg
clc
imul
jbe
das
add
cmp
pop
clc
jg
mov
lds
outsl
std
inc
cmp
sub
sti
jno
push
fucomip
repnz
mov
std
inc
out
adc
inc
cld
cs
outsl
addr16
mov
sti
cs
pusha
jl
inc
push
jae
insl
sti
das
push
inc
xor
dec
inc
pop
jb
cmp
push
fwait
out
test
call
xchg
aad
ss
or
add
sbb
popf
mov
ffreep
mov
add
or
rorb
pop
dec
dec
jmp
pop
push
pop
mov
sbb
jmp
fcmovnb
idivb
xchg
mov
outsl
inc
mov
shrb
inc
push
add
repnz
cld
test
fisubrl
mov
out
cmc
gs
dec
arpl
pop
mov
rorl
mov
movsl
xchg
or
ljmp
clc
das
xlat
mov
dec
cld
pop
insb
mov
out
decl
sub
test
cmpsl
xchg
ss
or
xor
aad
in
sahf
pusha
mov
fstpt
cli
aad
mov
pusha
xor
pslld
xor
mov
cs
leave
fnstenv
fisttpll
push
test
or
stos
cmp
inc
fs
push
pop
fimull
pop
push
lds
decl
mov
mov
fisubrs
in
dec
gs
mov
or
divb
fisubrl
rcl
fstp
push
mov
push
cmp
iret
push
ret
ret
or
out
push
fldt
cmc
cmp
fdiv
icebp
or
push
imul
jns
in
push
jbe
and
mov
mov
xor
test
addr16
push
dec
test
mov
pop
std
fnstsw
dec
cltd
repz
mov
insb
push
push
pop
add
inc
jmp
pop
test
sub
neg
mov
ja
test
mov
subl
add
mov
dec
movlps
fildl
pop
incl
hlt
aaa
stc
fucomi
out
push
fldcw
mov
or
cli
fimuls
test
out
outsl
add
dec
push
aaa
cmp
cmp
pop
jg
or
daa
mov
idiv
test
xchg
jmp
incl
xchg
xchg
xor
or
xor
loopne
out
or
outsl
aam
ja
and
lret
scas
add
pusha
add
xchg
dec
dec
mov
rorb
mov
clc
mul
push
loope
sub
pshufw
fisubl
and
dec
insl
arpl
rclb
sti
test
js
mov
dec
movsb
cmp
stc
test
or
or
dec
dec
popl
adc
push
aaa
add
push
push
xor
xchg
sub
dec
hlt
out
insl
push
and
mov
sbb
sbb
add
dec
push
in
adc
push
jg
std
outsl
std
jne
insb
push
mov
ss
dec
aaa
cmp
push
sti
pushf
sbb
decb
pop
test
ss
sbb
outsl
cmp
loop
fbstp
push
mov
dec
in
xor
push
xor
xchg
mov
movsl
ljmp
inc
lcall
cmp
xor
pop
pop
std
xorb
inc
imul
inc
mov
add
add
out
xor
or
stos
pop
or
or
inc
stc
xchg
dec
push
pop
notl
in
pop
test
push
pop
mov
add
xchg
dec
out
cli
cld
clc
push
fists
inc
dec
outsl
pop
push
xchg
in
loope
jo
push
pop
fldt
stc
mov
add
jo
outsb
lea
pop
pop
fstpl
inc
pop
cltd
dec
sarl
mov
arpl
ss
icebp
rolb
dec
call
mov
pushl
xor
add
xchg
jb
cs
pop
xor
xor
add
insl
jmp
out
test
cmp
dec
jmp
ror
lods
filds
pop
mov
arpl
mov
shrb
push
jb
das
mov
ljmp
cmp
adc
sti
sbb
dec
addl
jg
out
addl
jae
jno
xor
or
add
mov
mov
js
xor
and
notb
xchg
mov
mov
inc
sti
xchg
setg
xor
pop
push
lods
les
xor
subl
mov
mov
or
xor
cmc
stos
xor
push
mov
lods
adc
fnstcw
lret
xchg
xchg
jecxz
repz
push
mov
test
jno
or
hlt
push
xor
dec
dec
cwtl
inc
add
mov
or
ss
insl
add
cld
outsl
mov
xchg
pop
push
xor
adc
stos
sbb
aaa
mov
add
decl
jnp
out
ss
jne
add
insl
ljmp
das
shrb
mov
push
xorb
inc
add
push
pop
adc
inc
or
pop
push
cmp
inc
addl
pop
jecxz
fdivr
jno
out
adcl
sbb
test
cmp
cmc
inc
jg
pop
divl
loope
mov
loopne
repz
add
xor
mov
jle
pop
stos
mov
in
inc
mov
xchg
sbb
leave
loopne
add
mov
dec
inc
sbb
mov
outsb
mov
popl
ret
test
test
cs
fnsave
sbb
imul
loop
in
lods
cld
lret
pop
lret
mov
test
sbb
daa
jge
mov
in
xorb
insl
jmp
out
cmpl
jge
fildll
xchg
rorb
stc
adc
push
xlat
jo
loope
xor
pop
mov
cli
mov
pop
xchg
adc
push
pusha
orb
cmp
sarb
push
xorl
xor
aam
lock
sub
dec
xchg
jecxz
roll
out
xor
xor
jg
pop
das
mov
mov
dec
mov
sbb
mov
call
test
lds
cs
mov
scas
xor
ffreep
mov
subb
xchg
pushf
stc
pop
test
push
adc
pusha
adc
jae
mov
fstps
pop
cli
fdivrp
outsb
push
testl
popa
sbb
sub
jge
imul
push
stc
inc
xor
inc
cld
push
pop
push
mov
add
push
xchg
gs
jg
mov
loopne
xor
stc
adc
cld
sub
ss
cltd
test
inc
add
leave
pop
xlat
or
jle
je
or
xchg
cmp
outsl
adc
and
push
ss
jne
push
stc
fbstp
cmp
jo
xorb
test
xor
xor
pop
mov
xorb
aad
xor
add
jle
cld
mov
pop
outsl
xor
jecxz
dec
incb
mov
je
pop
dec
sbb
repz
and
push
and
or
lea
imul
xchg
jmp
cmp
inc
loope
aas
mov
repz
cmp
out
push
mov
sbb
imulb
loopne
pop
out
jp
or
jp
sbb
xor
pushf
sub
push
das
jle
push
cli
iret
mov
push
xor
cld
jecxz
imull
hlt
movsl
lret
dec
std
idiv
mov
ret
cld
in
adc
xchg
mov
popa
orl
add
pop
test
subb
mov
or
pop
sti
cmp
lock
sbb
lea
cmp
mov
js
ret
arpl
outsl
push
xchg
jb
imul
insb
pusha
pop
fsubrs
mov
mov
jle
enter
mov
add
aas
add
mov
imul
insb
cmp
test
cld
pop
cmp
jo
addb
sub
or
dec
jno
pop
nop
inc
cld
mov
inc
fwait
push
mov
ret
std
test
push
add
shll
lcall
outsb
lock
test
dec
add
cmpl
dec
incl
push
jp
mov
add
cmp
call
jle
movsl
cmp
xchg
add
int
or
add
xchg
add
fstpl
ret
daa
in
mov
mull
dec
test
pop
mov
std
popf
mov
in
sub
mov
mov
mov
or
cli
or
jle
sbb
fildl
jp
dec
fcomip
or
mov
push
cs
pop
add
mov
icebp
add
mov
mov
fcmovnb
jg
jns
es
push
push
div
inc
divps
mov
mov
inc
sti
inc
xlat
das
adc
dec
pop
sbb
les
mov
jne
jecxz
cli
daa
cli
jb
adc
gs
ds
mov
inc
gs
insl
jmp
aam
fs
loope
add
mov
cld
push
cmpb
jmp
shl
xor
dec
sub
pusha
pop
ljmp
jae
mov
repnz
xchg
or
idiv
lret
gs
repnz
cmc
xchg
imull
fnstsw
pop
xor
add
jns
hlt
or
jmp
bound
das
sub
inc
mov
dec
gs
lcall
dec
mov
lds
jl
sbb
mov
xchg
ja
lods
test
xorl
pop
mov
hlt
test
aam
add
stos
cltd
pusha
fistps
pop
test
sti
or
mov
jecxz
add
adc
push
jge
xchg
sub
lock
test
or
sbb
fdivrl
shll
outsl
sbb
jns
dec
push
ret
pop
dec
jns
loope
cli
shlb
cmp
xor
dec
jge
and
fadd
mov
out
pop
adc
inc
xchg
sbb
addr16
rol
mov
sbb
push
inc
test
js
add
lret
pop
pop
cmp
inc
cmp
ja
jo
lea
imul
adc
xor
iret
gs
jnp
xor
popa
ret
cmp
inc
inc
test
pusha
test
popa
xchg
les
fdivl
push
stos
mov
and
in
push
dec
dec
lahf
out
aad
xor
lret
rorb
cmp
adc
dec
fldl
mov
pop
fildll
jns
popa
hlt
data16
pop
xor
lock
sbb
lahf
iret
jecxz
mov
mov
push
lret
sub
pop
xchg
jp
mov
movsl
das
xor
shlb
sarl
test
in
sub
or
loopne
aaa
jl
mov
fistl
das
sub
dec
addr16
sub
dec
dec
test
xchg
std
jo
stc
xor
jae
dec
sbb
mov
arpl
dec
push
setns
dec
decl
inc
cs
in
push
dec
test
inc
dec
xchg
aam
sti
movsl
pop
push
fld
aas
rcll
es
sbbl
das
clc
scas
sbb
fisubrl
test
dec
gs
adc
ja
mov
mov
movsl
push
lahf
mov
adc
pop
mov
rol
jmp
dec
pop
mov
les
fsubs
mov
jns
push
out
jbe
jb
mov
pop
pushf
test
fstpt
sub
inc
rorl
pop
stc
push
daa
dec
aam
stc
or
loopne
cs
cli
ljmp
jb
test
push
and
adc
push
sbb
lret
push
das
rorb
repz
sbb
mov
stc
insl
cmp
cmp
push
xor
jb
in
das
sbb
or
sti
std
xor
jb
mov
decl
sar
pop
fstpt
push
jo
cmpl
insl
loop
ret
std
test
cmpb
jmp
or
mov
dec
lahf
xchg
pop
add
add
pop
push
cli
adc
inc
ss
mov
daa
cmp
mov
insl
or
push
dec
or
fwait
movsl
add
ror
sub
movsl
test
dec
sti
mov
push
jne
jg
lret
push
pop
in
cld
insl
push
add
testb
in
cmc
xchg
ficoms
call
fisubrs
test
lods
rcrb
out
pop
ja
mov
les
jl
js
inc
sbb
call
js
fnsave
adc
test
arpl
mov
dec
push
xchg
xchg
shlb
inc
leave
dec
jecxz
daa
mov
dec
ds
es
ret
dec
arpl
fisubs
hlt
push
jle
pop
push
or
mov
jg
pop
push
sub
stc
cmpsl
test
gs
arpl
std
das
mov
mov
cwtl
mov
adc
or
fdivrp
sub
testl
test
mov
dec
and
mov
jle
xor
pop
mov
add
sub
out
arpl
jg
jno
mov
mov
inc
xchg
jne
mov
cld
jecxz
xor
stc
adc
push
popa
pop
arpl
and
loope
sub
jecxz
cli
in
lods
scas
inc
imul
jecxz
daa
jmp
mov
dec
push
not
arpl
fildl
push
std
or
fndisi(8087
dec
xchg
sarb
mov
shll
imul
lahf
jecxz
in
mov
mov
push
pushf
leave
out
dec
loope
jo
shl
sub
dec
xor
xchg
dec
stos
push
aaa
mov
sub
cmp
cmp
jb
loop
or
lock
cmc
testl
add
xor
jbe
mov
repnz
mov
mov
add
add
dec
inc
push
stc
test
add
inc
jge
jg
mov
jp
fsubrl
or
fs
mov
xchg
mov
lahf
mov
xlat
f2xm1
ror
outsb
fbstp
sub
hlt
fisubl
or
loop
jl
add
push
jl
add
stos
or
mov
popa
imul
jge
sub
lock
xor
push
jno
fdivr
ret
je
fildll
inc
loope
in
or
pop
push
mov
mov
movsl
lods
mov
cld
jg
cmp
mov
mov
div
xchg
jb
rorb
add
repz
jb
mov
push
dec
push
push
and
push
mov
dec
dec
xlat
popa
sbb
sub
and
lods
add
pop
ret
movb
lahf
mov
sbb
pop
mov
mov
mov
xor
mov
mov
mov
test
push
hlt
movsb
xor
jg
push
push
jg
add
in
mov
leave
or
rcll
cli
popa
mov
sti
or
xchg
dec
xorl
outsl
add
enter
fwait
and
test
pop
dec
add
in
and
inc
push
fs
and
adc
ja
xchg
outsl
inc
cwtl
pop
popa
cmp
shll
lock
xchg
add
xor
les
aas
mov
aaa
dec
dec
xorb
sbb
movsl
out
daa
insb
mov
mov
push
testl
cs
mov
cmp
clc
dec
push
dec
push
jecxz
add
push
rcrl
and
mov
outsl
or
ficoms
mov
icebp
adc
sub
arpl
in
fldenv
sub
jne
dec
cltd
in
add
inc
js
divl
xor
jae
ja
dec
mov
loopne
or
xor
dec
mov
jne
jl
out
cli
pushl
cs
in
cmpsb
bound
fwait
lea
sti
and
push
mov
fcomi
ja
loopne
sub
fbld
push
daa
pop
shl
sbb
clc
outsb
ret
test
and
arpl
sbb
jo
inc
cmp
cmp
clc
test
xor
insb
xchg
insl
sub
arpl
call
daa
sarl
or
pop
lcall
test
jnp
add
scas
push
push
sbb
sub
add
mov
outsl
les
subl
push
mov
data16
imul
sbb
xchg
mov
inc
xchg
mov
sub
mov
movsl
arpl
daa
pop
inc
xor
stc
sbb
fs
addr16
outsl
pop
add
add
lock
xchg
inc
sub
push
arpl
lahf
f2xm1
insl
jecxz
sti
sbb
movsl
sub
cli
aaa
xor
rorl
lret
push
xchg
mov
loopne
pop
mov
icebp
mov
cli
pop
in
in
mov
sbb
lods
cmp
or
push
std
sahf
push
out
pop
in
mulb
push
cld
jno
mov
xchg
and
icebp
aas
sbb
sarb
jo
push
out
and
rcrl
insb
je
push
ljmp
adc
addl
rorl
and
jnp
and
les
cwtl
fistpll
insl
jle
and
sbb
adc
pop
xchg
pop
insb
ja
mov
pop
mov
fwait
xchg
fisubs
push
push
aaa
dec
fiaddl
sbb
adc
mov
or
xchg
sub
cltd
mov
mov
lahf
cld
jle
lock
loop
fprem
hlt
push
pop
jge
adc
repz
outsb
ds
add
dec
jns,pt
cmp
or
jno
loopne
lret
loop
cld
lahf
mov
pop
test
stc
call
or
jp
add
pop
mov
sahf
loop
andl
cmpsl
mov
imul
std
jg
lret
pop
jno
movsl
mov
mov
or
mov
or
fs
push
dec
arpl
pop
cs
jmp
outsl
loopne
fisttpl
cli
out
xor
out
in
bnd
inc
mov
adc
inc
pop
in
hlt
cli
sub
dec
test
add
and
in
push
sbb
cmp
aad
and
add
mov
out
stc
lods
and
pop
pushf
ljmp
ret
push
out
push
test
test
test
dec
jmp
loop
iret
push
push
cs
or
cmp
rorl
ret
mov
or
std
dec
add
addw
in
mov
test
add
mov
pop
jb
cmp
pop
inc
out
adc
repnz
sub
sub
or
andl
sarl
cmp
mov
lods
std
sarl
lcall
adcl
fwait
sti
push
mov
pop
cmp
outsb
push
pop
pop
or
out
fisttpll
cs
xchg
xor
mov
fildl
shrl
adc
dec
addl
js
or
fiaddl
xchg
shlb
fldt
cmp
or
cmpsb
gs
insb
subb
jg
and
fistpl
xorl
push
xor
stc
rcll
add
rcrl
lret
pop
push
cli
or
mov
test
inc
enter
mov
cld
loope
push
loop,pt
mov
sbb
push
imul
in
and
out
sub
pop
xchg
mulb
push
mov
test
add
or
stc
adcb
and
popf
jecxz
add
xorl
les
adc
add
hlt
outsl
ljmp
push
xchg
add
add
outsb
pushf
movsl
sarb
mov
rclb
jl
sbb
push
pop
out
pusha
call
cmc
ret
mov
inc
scas
stos
leave
jecxz
mov
fildll
cld
mov
stc
inc
sub
mov
sub
sbb
arpl
jg
aaa
xor
and
icebp
jno
fwait
fs
jae
out
jbe
xchg
adc
insb
ljmp
sbb
mov
and
mov
push
in
pop
lock
les
pop
lods
push
lock
aaa
outsl
pop
pop
jne
rcrb
push
in
out
loopne
pop
mov
or
repz
loop
and
arpl
out
push
insl
test
xor
xor
sbb
sub
icebp
outsb
add
notb
aaa
push
aaa
stos
xchg
sub
pop
push
mov
xorl
jecxz
add
sbb
movsb
stc
or
push
std
test
xchg
sahf
divl
std
or
sbb
fistpl
xchg
pop
mov
popf
ja
out
js
movsb
movsl
mov
lods
push
add
mov
cld
sbb
mov
ja
popf
or
lea
imul
cmp
push
mov
jg
cmp
and
jecxz
out
sub
sbb
jmp
outsl
xor
xchg
stc
add
add
xchg
cmp
pop
mov
or
popa
das
leave
pop
mov
mov
add
lahf
cli
pop
lret
adc
inc
cmp
pop
mov
mov
sbb
jge
aaa
xor
jle
mov
inc
and
xor
test
dec
pop
das
xchg
test
ja
pop
call
movsl
mov
outsb
add
loopne
or
sub
ss
insb
xchg
xchg
aas
xor
lahf
call
jb
jge
push
jae
mov
xor
sbb
mov
repz
push
jecxz
push
fwait
cmp
cli
jnp
push
call
mov
mov
lahf
out
cmpsl
scas
lods
loope
or
adc
popf
dec
lds
mull
vmovdqu
test
mov
ja
push
not
inc
das
dec
dec
lret
daa
cmpsb
or
push
xor
xchg
testl
lahf
clc
mov
icebp
cmp
add
fildl
sbb
je
aas
out
mov
test
insl
cmp
mov
dec
ss
imul
aas
pop
stc
mov
sbb
mov
pop
xor
insb
idivl
pop
daa
scas
dec
mov
dec
or
xchg
sub
mov
bound
es
leave
jno
cs
inc
jge
add
xchg
sti
cld
xchg
pop
in
testl
movsl
push
pusha
jnp
outsb
sbb
insl
out
cmpb
jge
xchg
mov
add
add
add
sahf
add
fstpt
daa
sarl
xchg
rcrl
push
bound
rcll
jns
pop
filds
dec
sub
sbb
sub
mov
pushf
fstpt
rcll
pop
sbb
cmp
xchg
std
push
out
push
jg
inc
in
dec
iret
into
in
inc
pop
int
insb
mov
clc
mov
and
push
mov
inc
incl
rcll
mov
sbb
inc
inc
movsl
out
sbb
filds
cli
loopne
sbb
mov
inc
jge
add
lods
psrlw
loope
loopne
sbb
and
push
adc
add
aam
inc
fbld
les
cs
ljmp
mov
insl
jp
push
xlat
xor
incl
mov
or
add
out
add
xor
lret
or
add
add
lret
xchg
push
icebp
incl
fsin
xor
addr16
or
xchg
cli
adcb
int
mov
out
inc
mov
inc
xor
test
testb
add
mov
and
dec
dec
add
dec
mov
add
cs
push
mov
notb
adc
testl
popl
fwait
mov
or
pop
fistps
lods
pop
loop
cmc
or
in
rcll
test
in
lahf
dec
test
hlt
cmc
cltd
stc
pushf
aam
testl
cmp
std
test
mov
iret
xchg
test
pushl
mov
cmpsb
pop
subb
mov
pop
add
pusha
mov
cli
xor
sti
add
imul
in
testb
test
jge
dec
outsb
or
push
pop
xchg
mov
dec
pop
rol
movsl
ret
test
hlt
mov
repz
out
addr16
test
mov
imul
mov
stos
scas
xor
loope
repz
repz
adc
insl
cmp
imul
loope
jge
test
adc
xchg
insl
adc
mov
out
jecxz
push
mov
dec
shll
pushf
or
jge
jg
ja
outsb
std
lds
fmull
std
mov
xor
int
or
pop
adc
push
scas
in
divl
mov
dec
decb
pop
adc
icebp
repz
cmp
cli
scas
mov
lea
das
dec
cmp
dec
push
out
repnz
jl
jae
push
cmp
push
push
fucomip
jmp
loopne
sbb
mov
or
or
test
aad
push
shl
jmp
decb
dec
bound
pop
dec
pop
xor
dec
das
fwait
cmpsl
sbbb
sbb
push
loopne
inc
dec
adc
fucomip
add
rcr
sbb
add
fcmovnb
test
pop
add
in
or
sub
leave
sahf
in
add
pop
orl
sarb
mov
pop
jmp
mov
repnz
jg
mulb
out
cmpsl
pop
cmpsb
test
out
rcrb
jmp
xchg
adc
cmp
in
push
pop
push
ss
pop
call
fwait
cmpsb
lods
push
int
into
out
scas
pop
push
cmp
std
jmp
out
stc
test
jbe
push
roll
jl
sbb
cmc
das
lock
xchg
loopne
sbb
orb
shll
lods
icebp
psubd
das
cmp
mov
fld
xchg
mov
hlt
cmc
pusha
orl
dec
popf
pop
xor
jb
repnz
jmp
imul
leave
push
sbb
cmp
jb
push
sbb
cmp
push
adc
aad
sbb
mov
or
jno
mov
aas
sbb
or
clc
add
adc
hlt
out
xrelease
lock
mov
in
roll
pop
jb
call
and
mov
les
mov
shl
pop
stos
inc
movsl
std
in
cli
iret
lds
push
leave
mov
fwait
test
sub
clc
xor
shll
into
inc
add
pop
outsl
jge
sub
xchg
sahf
cmp
jmp
xchg
cmp
lea
sbb
xor
cmc
push
repnz
iret
stos
ds
cmp
lock
rclb
jl
mov
test
adc
cwtl
test
pop
je
xchg
out
dec
adc
out
ret
sub
cli
sahf
and
test
or
pop
into
mov
push
int
aas
or
adc
fsubl
dec
sbb
push
inc
lahf
pop
pop
push
mov
mov
dec
inc
push
mov
pop
imul
adc
movl
or
jnp
add
ja
sub
pushf
jmp
popa
orl
std
add
mov
dec
push
or
jns
jnp
add
or
ja
sub
cli
dec
scas
or
loope
mov
add
xor
lds
clc
call
jns
dec
stc
mov
dec
addl
push
test
aam
sbb
jg
ret
roll
or
dec
xchg
add
lods
les
out
test
add
adc
aas
ss
jbe
fisttpl
push
test
std
push
pop
mov
xchg
jecxz
sub
repz
movsl
cmp
or
inc
mov
push
inc
movsb
adc
xchg
sar
loopne
outsl
mov
jo
sbb
cld
outsl
es
arpl
adc
xor
fisttps
mov
in
jnp
stc
inc
push
sbbl
shl
ja
das
dec
pop
data16
call
clc
aas
mov
lret
fcomp
lahf
xor
add
inc
and
sub
sbb
pop
enter
sbb
xchg
pushf
das
inc
clc
push
mov
clc
ret
inc
sub
adc
in
add
aaa
lcall
cmpl
repnz
mov
pop
loopne
scas
inc
mov
popa
jp
add
gs
test
shll
jge
push
dec
cmp
gs
sbb
loope
mov
mov
bound
outsb
std
lret
jmp
add
dec
arpl
jecxz
fucomp
inc
pop
hlt
dec
dec
mov
aad
test
inc
jecxz
sarb
pop
int
push
xchg
dec
sbb
cmp
mov
xchg
loopne
leave
and
xor
xchg
pop
lock
cmp
mov
out
jle
jecxz
mov
outsb
mov
cmpb
xor
pop
add
or
iret
sbb
aad
adc
in
add
and
cmp
or
stc
mov
jno
cwtl
mov
and
stos
inc
rcll
inc
in
inc
je
popa
sbb
cmpsl
adc
push
mov
mov
and
and
ret
dec
lods
out
inc
pop
xor
mov
jns
out
jae
lahf
fisttps
out
push
dec
fs
dec
daa
cmp
mov
inc
dec
addr16
inc
inc
mov
out
andnps
push
outsl
mov
jno
sbbb
test
test
sti
dec
std
jge
dec
xor
lds
cltd
or
xchg
aam
icebp
inc
add
jne
add
inc
or
jg
inc
out
stos
mov
adc
shl
insl
ja
frndint
adc
fs
xor
inc
adc
hlt
pop
gs
jmp
push
lahf
dec
add
inc
or
inc
push
cmpl
xchg
icebp
ljmp
test
dec
addr16
sub
cmpsl
dec
jno
popf
inc
aaa
xchg
lahf
add
fiaddl
std
rcll
aas
push
fbstp
xor
sbbb
je
out
and
xchg
ljmp
push
divl
fisubrl
ja
out
mov
js
xchg
or
loope
cmc
sbbl
inc
stc
clc
bnd
in
pop
aad
pop
xchg
std
in
pop
or
aad
imul
outsb
or
ljmp
dec
xchg
pop
add
test
xchg
dec
adc
push
test
xchg
pusha
rorl
push
inc
jmp
enter
sub
test
fisttpl
aaa
rolb
fbstp
daa
inc
sbb
xchg
and
cld
inc
pop
dec
adc
cmc
mulb
push
dec
jecxz
or
mov
sar
inc
ss
add
addl
repz
mov
pop
in
mov
dec
push
enter
or
ja
or
add
test
xchg
or
push
xorb
std
xor
fabs
add
inc
out
or
pop
insl
decl
xor
clc
push
jbe
jg
sub
rolb
sbb
sbb
jne
shr
mov
jg
call
clc
mov
add
fldz
test
movsl
movsl
mov
dec
fsubrl
fldenv
mov
jb
arpl
cmp
push
ret
lock
add
pop
andb
inc
sub
ja
icebp
rcll
mov
mov
cmpb
dec
arpl
repz
or
mov
popa
hlt
add
push
das
hlt
mov
push
push
push
xchg
sbb
aaa
test
orl
daa
xchg
and
add
fwait
outsl
push
mov
into
push
std
int
push
clc
iret
dec
in
clc
dec
incl
call
xor
xor
rorl
pop
pop
push
push
shll
inc
jae
popa
insl
in
orl
mov
jmp
xchg
xor
cmp
ficomps
mov
and
mov
scas
fistpll
in
call
mov
fstpt
push
or
jge
jle
add
mov
pop
xchg
pop
loop
jge
or
mov
push
adc
mov
inc
mov
popf
pop
test
test
bound
push
mov
ret
push
in
or
fildll
xorb
ret
push
std
and
inc
mov
add
add
or
mov
ds
leave
add
out
stc
dec
xlat
frstor
mov
daa
ds
ficompl
jmp
ss
ds
sub
addr16
push
lcall
mov
add
push
sub
jecxz
push
loop
loop
shrl
push
jl
repz
jbe
test
or
hlt
pop
jnp
add
les
inc
mov
iret
or
add
inc
loope
or
push
pop
shrl
jno
pop
mov
mov
pop
das
aam
std
jp
and
shlb
imul
loope
or
ss
mov
and
add
push
loopne
mov
dec
mov
ffree
add
repz
sub
inc
imul
pop
inc
sbb
mov
fstpt
xchg
frstor
cmp
add
jnp
rcr
fs
sti
mov
stc
push
inc
pusha
adc
loope
cmp
andb
not
mov
sarl
dec
xor
ljmp
add
mov
test
pop
pusha
int
clc
outsl
fists
addl
pop
add
inc
push
jle
push
cmp
pop
mov
clc
mov
sti
stos
cmp
cld
sub
sar
xor
stc
mov
push
or
or
push
mov
or
and
lahf
xchg
sbb
xchg
mov
dec
clc
sub
mov
mov
clc
movsl
in
dec
outsb
mov
push
iret
jnp
inc
clc
insl
std
outsl
aam
jo
pusha
jae
arpl
add
push
xchg
mov
mov
fsubl
repz
add
scas
ret
lock
movsl
push
in
pop
pushl
adc
sbb
push
sbb
push
jecxz
cmp
stos
mov
out
std
or
jae
add
pusha
jmp
adc
in
cmpl
loopne
out
arpl
add
outsb
mov
adc
mov
mov
popa
and
cmpl
or
mov
fwait
mov
in
add
insl
lcall
inc
sub
pop
idivb
mov
adc
mov
orl
das
inc
mull
xchg
jns
in
jp
cli
js
add
sbb
repz
add
lds
sbb
hlt
jb
add
push
lea
lret
mov
pop
pop
lret
adc
pop
mov
add
addr16
shr
in
add
add
arpl
or
rcrb
out
fs
insb
xchg
cmc
or
ror
xlat
jmp
aas
mov
add
push
in
rclb
sbb
push
add
inc
arpl
xor
pop
hlt
aas
xchg
lods
sub
outsl
pop
and
in
add
mov
arpl
add
lods
push
xchg
mov
add
dec
pop
jno
leave
mov
push
pop
and
or
into
pop
out
aas
mov
int
cld
movsl
les
mov
and
sub
arpl
outsl
push
int3
sub
jg
dec
mov
fsts
dec
push
aas
popa
add
pop
out
mov
mov
jl
cltd
shll
mov
repnz
out
mov
and
into
in
les
popf
mov
xchg
or
fmulp
ficomps
add
pop
stc
int
leave
jmp
mov
roll
cs
pop
sbb
pop
and
insb
jo
pop
rorb
pop
and
cmp
fs
pop
cwtl
insb
or
cmp
idivl
pop
incl
loop
movsb
or
cmc
or
and
in
cmc
mov
stos
out
in
fcomi
pop
push
popa
sar
imul
xor
pop
repz
pop
es
or
mov
arpl
fmull
push
xchg
iret
lock
and
mov
cmp
push
sub
or
icebp
outsb
andb
hlt
out
inc
call
push
push
insb
shr
cmp
sub
repnz
decb
xor
clc
pushw
fmuls
jb
clc
adc
icebp
mov
mulb
sbb
insl
mov
iret
dec
insl
movsl
in
inc
or
fisubs
mov
js
lret
in
insb
jge
dec
mov
push
movswl
and
lahf
imul
inc
add
lods
sarb
insl
aad
mov
repz
out
push
dec
mov
imull
and
or
pop
jl
in
int3
dec
lret
in
or
stc
mov
sbb
xor
aam
mov
std
aaa
loope
fcomi
enter
fcmovne
xchg
cli
cmp
shlb
loop
aad
data16
aaa
mov
out
ja
pop
dec
fidivs
xor
mov
loope
jle
push
test
gs
cmc
pop
jmp
std
mov
and
dec
lret
outsl
push
pop
movsb
in
add
add
and
mov
or
in
jle
add
in
aaa
stc
add
fwait
repz
cmc
fsubr
push
and
ljmp
mov
add
aad
in
mov
lds
mov
lods
jp
push
pop
cmc
vmwrite
ljmp
leave
sbb
fwait
mov
jle
mov
cmpsb
dec
cmpsb
fwait
cli
inc
jns
cmpb
cld
pusha
sbb
xchg
test
pop
out
pusha
fninit
and
scas
push
add
pop
not
pop
enter
jmp
ss
jmp
lcall
mov
in
inc
xor
repz
add
pop
push
inc
xchg
sub
in
aas
icebp
adc
enter
insl
rolb
xor
div
sti
mov
shrl
jge
incl
push
arpl
mov
mov
xor
adc
add
aaa
jp
mov
aas
dec
out
inc
add
push
cli
ja
xchg
pop
push
push
jmp
inc
pop
and
aaa
mov
int3
sbb
dec
gs
clc
lea
es
adc
inc
test
sbb
pop
ljmp
int
pop
out
jae
das
push
push
sbb
data16
fdivr
test
dec
or
sbb
cld
popa
sbb
mov
dec
std
ljmp
rolb
sti
inc
sbb
orb
fisttpl
jmp
inc
je
sub
xor
inc
in
testb
sbb
insl
push
es
std
std
cmp
add
testb
rcr
push
in
cld
outsl
imul
pop
aam
push
js
adc
push
out
lret
or
mov
sub
and
xchg
sbb
add
shl
mov
dec
xorb
add
push
or
mov
mov
mov
outsl
or
jecxz
inc
or
out
shl
decl
jge
push
test
adcl
mov
xchg
mov
incb
mov
mov
xor
xor
insl
sarb
jp
cmp
mov
mov
dec
arpl
jne
in
cld
lods
bound
dec
test
jecxz
jg
filds
cmpsl
decl
fcompl
add
pop
call
mov
pop
xchg
mov
pop
aas
add
inc
jo
cmp
cmp
ja
lds
cld
cmp
aas
and
test
add
jge
jno
dec
push
xchg
push
test
cli
ljmp
pop
push
inc
orl
cld
aas
push
xchg
inc
xor
add
jmp
jb
pop
push
pop
mov
push
dec
dec
jge
clc
sub
jecxz
sti
mov
scas
test
add
adc
push
jmp
push
sub
aad
or
out
shlb
inc
or
jge
stos
cli
pop
inc
inc
aas
jle
or
daa
mov
data16
dec
bound
add
lcall
push
or
pop
pop
roll
cli
adc
das
fdivs
mov
mov
add
mov
cs
push
lret
int
push
sarl
dec
pop
push
shll
idiv
and
xor
add
sub
adc
sarl
gs
push
mov
sbb
sub
push
xor
cmc
std
sbb
push
and
push
mov
test
mov
xor
add
push
jg
mov
inc
call
pop
cmpl
inc
sti
push
aad
imul
out
popa
sti
or
or
arpl
pushf
not
xor
iret
add
inc
jg
test
clc
xorb
pop
mov
insb
aam
clc
xlat
mov
push
or
imul
test
xor
pop
test
cs
out
add
clc
or
mov
xchg
mov
out
clc
push
fnstcw
mov
outsb
stos
outsb
scas
jne
mov
push
jo
rclb
mov
loop
bound
dec
dec
mov
xorl
dec
gs
outsb
adc
push
push
fs
ja
jmp
loopne
add
out
add
mov
push
sbb
adc
in
or
clc
push
stos
cs
data16
std
push
push
and
add
push
mov
xchg
jns
jmp
mov
arpl
lahf
inc
lock
std
xchg
adc
xchg
push
in
pop
ret
push
mov
leave
add
shrb
or
pop
push
mov
adc
movsl
call
cli
das
arpl
insb
lds
arpl
pusha
idiv
std
fdivr
xor
cmp
pop
jne
sub
test
jmp
add
fdiv
xor
mov
pop
mov
pop
clc
ficompl
popa
shl
sahf
xchg
stc
imul
add
int
push
popa
xchg
out
pushl
mov
std
inc
dec
dec
jecxz
jecxz
sbb
mov
ljmp
out
mov
popf
repnz
add
jecxz
push
loopne
in
ja
xor
mov
stos
add
cmp
sarl
arpl
jo
sbb
mov
push
sbb
push
mov
loop
addr16
movsb
pop
jg
or
aaa
test
sub
sbbb
push
mov
xchg
test
and
cmp
into
push
loopne
pop
std
aas
jl
pop
sbb
out
popf
jmp
out
outsb
mov
loop
inc
out
fldl
dec
inc
dec
data16
dec
inc
jmp
add
outsb
and
data16
stc
xchg
in
xchg
sub
cltd
pop
enter
outsl
shll
test
pop
out
pop
pop
pop
orb
stc
push
lcall
and
cmp
mov
sbb
ja
jae
idiv
pop
outsl
and
jecxz
notl
xor
jl
cmp
inc
pop
inc
inc
xor
xor
xor
les
lret
cld
dec
pop
pushf
cmp
sbb
mov
mov
pop
dec
mov
mov
push
pop
enter
adc
mov
sbb
jo
jl
imul
std
adc
aaa
aam
sbbl
sbb
add
cmc
sbb
dec
mov
adc
out
push
mov
xorb
dec
mov
stos
outsl
fdivl
shl
dec
loop
imul
push
iret
icebp
roll
jo
mov
or
push
xor
stc
or
orl
shr
mov
mov
or
insb
cmp
xor
popa
stc
inc
clc
in
pushf
jle
sub
iret
push
pop
jge
cld
cwtl
push
jne
incb
sti
jle
ret
fnstsw
fcomip
in
outsb
daa
loopne
sub
ret
xor
jnp
jecxz
sti
push
out
sub
mov
ss
imul
int
orb
and
lds
orb
pop
adc
test
jg
add
dec
xchg
ljmp
jle
insb
outsl
out
jp
aaa
imull
jo
cwtl
ja
insl
outsb
add
mov
stc
push
dec
dec
std
enter
dec
adc
sbb
mov
sub
dec
loop
mov
loop
cld
xchg
icebp
aaa
das
push
dec
adc
and
add
jl
jno
push
push
mov
jecxz
int
mov
add
inc
or
cld
imul
insl
mov
lcall
pop
and
inc
pop
popa
or
or
adc
fists
mov
xor
sub
and
inc
cmp
mov
push
loopne
xchg
leave
dec
aam
notl
push
mov
loope
xor
cli
and
jo
mov
aaa
out
mov
mov
scas
lret
daa
mov
iret
pop
ja
pmulhuw
in
lret
fwait
cmp
cmp
leave
ja
xor
pop
sbb
mul
in
fdivrl
inc
pop
dec
imul
or
das
mov
adc
xchg
popa
mov
jb
fs
neg
xor
lret
jmp
sbb
jb
cmp
fs
arpl
pop
mov
popa
jmp
pcmpgtb
pusha
xlat
xor
jb
bound
dec
shll
push
cmp
sbb
adc
dec
mov
cs
mov
mov
lret
mov
out
gs
and
jb
pop
jno
shrl
imul
xchg
scas
push
pop
imul
push
insb
cmp
push
data16
mov
xchg
push
mov
mov
lcall
adc
lcall
scas
lahf
cmpsb
jmp
jge
jbe
std
fsubl
pop
push
test
fs
in
mov
gs
adc
jb
pop
ss
gs
fisubl
bound
arpl
out
int3
ss
ja
arpl
fcoml
add
xor
jge
cmpsb
imul
pop
push
jno
lahf
imul
mov
stc
adc
arpl
ss
in
sub
mov
jmp
sti
or
sub
push
pop
inc
mulb
lcall
out
add
cld
dec
pop
sti
or
ja
pop
cmp
jbe
nop
or
cmpsl
sahf
mov
iret
cmp
add
out
jecxz
pop
nop
pop
repnz
pop
ds
add
or
ss
orb
mov
adc
das
pop
mov
in
test
pop
pop
popa
popa
fs
repnz
popf
daa
inc
arpl
int
xchg
jns
out
xor
xor
arpl
popf
jns
jae
pop
bound
imul
pusha
adc
pop
pop
pop
inc
enter
inc
jmp
dec
jo
jno
insl
pop
dec
outsb
popaw
addr16
push
insl
insb
fs
cmp
cmp
inc
pop
dec
ljmp
insb
insl
jo
imul
outsl
insl
push
ds
cmp
insb
dec
outsl
push
pop
pusha
outsl
push
push
jg
pop
pop
imul
cld
inc
pop
outsl
dec
push
inc
pop
decw
mov
adc
insl
jge
mov
jno
pop
addr16
imul
pop
pop
jno
cltd
ds
pop
pop
imul
stc
inc
bound
insl
or
pop
insl
bound
lret
fistps
pop
popa
inc
arpl
pop
insl
ja
sub
outsb
arpl
lods
std
imul
cld
mulb
pop
pop
inc
outsb
pop
pusha
lahf
add
out
outsb
outsl
test
addr16
dec
insb
pop
fistpl
enter
fdivrp
outsl
cmp
pop
pop
outsl
popa
cmp
in
fildll
filds
pop
fs
daa
jp
pop
addr16
inc
arpl
mov
incl
addr16
cmp
push
data16
push
pop
insl
std
mov
outsl
bound
fs
pop
jb
jbe
in
in
cmp
push
cmp
pop
outsl
bound
pop
pop
orl
mov
sti
jo
imul
pop
push
jae
scas
cld
dec
sbb
mov
arpl
pop
pusha
jb
or
sbb
cmp
pushl
push
outsl
inc
imul
out
dec
insl
pop
sub
pop
push
inc
dec
jnp
inc
push
insb
arpl
lahf
xchg
rclb
push
or
inc
ljmp
mov
lret
dec
pop
outsb
push
jo
adc
dec
inc
pusha
cmp
outsl
shrb
push
jno
pusha
jno
fstpt
insl
pop
incl
cmpsl
add
dec
dec
inc
dec
sub
sub
imul
ss
ja
jb
ds
insl
aaa
or
jbe
pop
or
popa
outsb
call
stos
outsl
pop
daa
xlat
cli
inc
push
push
mov
or
push
cmp
jb
in
pop
js
pop
push
push
dec
pusha
pusha
inc
pop
cmp
mov
decl
mov
arpl
jno
push
push
outsl
test
cli
push
insl
dec
pusha
shlb
lret
pop
gs
cld
repz
out
outsb
das
cmp
gs
outsb
outsl
inc
sbb
jns
dec
xor
jg
aaa
jne
jo
push
push
ljmp
arpl
insb
arpl
dec
gs
pop
inc
sub
cld
push
xchg
add
outsb
dec
fs
rolb
lods
insl
fdivrl
in
cld
jb
insl
inc
xor
sar
or
push
dec
cmp
xor
sub
das
xchg
mov
pusha
popa
insb
daa
or
leave
imul
xlat
adc
arpl
dec
pop
arpl
or
movb
jne
push
jecxz
mov
clc
or
jb
ficoml
test
testb
pop
gs
dec
cmp
lea
inc
cli
icebp
stc
push
insl
mov
mov
pop
xor
push
std
push
lret
dec
pop
arpl
push
sahf
xchg
mov
sbb
mov
lea
nop
jne
pop
sti
cmpsb
xchg
xchg
cmp
dec
pop
bound
pop
iret
pop
daa
std
daa
push
dec
mov
pop
inc
inc
xor
mov
cli
cmp
dec
cmp
inc
cs
daa
or
pop
ja
inc
inc
popa
loope
addr16
pushw
xor
jp
or
fs
sti
outsb
insb
addl
fldt
pusha
xchg
sar
adc
inc
clc
sbb
xor
stc
cmp
xchg
dec
lods
shl
push
push
adc
inc
jmp
movsl
pop
dec
std
pop
jns
imul
push
or
jbe
pop
dec
insb
imul
mov
std
dec
das
pop
push
pop
sbb
jl
test
push
loope
inc
sbb
dec
fs
jae
clc
cs
inc
inc
jg
daa
sbb
les
inc
test
cld
sub
sub
pop
inc
imul
bound
insl
cld
lods
sub
cmp
addr16
mov
mov
dec
cmp
dec
fwait
cli
call
clc
cmp
daa
pop
dec
dec
bound
outsl
xor
cmp
cmp
cmc
das
add
sub
pop
push
outsb
addr16
pop
jo
xchg
add
cmp
cmp
pop
xchg
jo
mov
insb
cmp
cmp
bound
cmp
push
sbbl
aad
adc
cmp
divb
es
cmp
cmp
jo
outsb
jb
cmp
stc
pop
outsl
pusha
pop
pop
aas
jns
push
cmp
mov
aam
outsb
mov
fdivs
inc
dec
insl
pop
sbb
mov
aaa
cmp
dec
jae,pt
decb
cld
pop
cmp
inc
cmp
ss
push
popa
pop
jbe
test
cmp
pop
inc
cmp
pop
add
scas
push
incb
cmp
and
pop
pop
mov
mov
pop
bound
cmp
mov
ss
mov
pop
adc
cmp
dec
ja
pop
mov
sub
adc
mov
dec
cmp
cmp
sub
dec
sub
cmp
push
sti
cld
pop
add
mov
imul
cmp
roll
cmp
add
pop
or
insl
popa
pop
cmp
insl
sub
dec
cmp
pop
arpl
mov
push
fbstp
cmp
aaa
cmp
sub
das
pop
mov
pushl
or
dec
aas
cmp
ss
push
cmp
fcmovnu
pop
push
and
popa
mov
cmp
push
ja
sbb
cmp
pop
pop
pop
xchg
adc
cmc
ja
decl
rorl
cmp
cld
add
push
arpl
pop
clc
mov
pop
cmp
aaa
sar
pop
cmp
push
loope
sub
mov
pop
ja
js
cmc
fs
inc
lahf
or
outsb
repz
sti
mov
dec
pusha
jo
jg
cmpsb
das
cs
inc
orw
push
outsl
ss
cmp
inc
inc
inc
push
jmp
ficoml
cwtl
push
cmp
pop
jno
fs
imul
ret
or
cmp
push
shlb
aaa
test
sbb
mov
ja
sub
mov
fs
mov
repnz
outsb
push
xchg
cli
int3
sti
lea
pop
scas
or
mov
jb
inc
imul
xchg
sbb
imul
cli
jb
insb
adc
or
cli
pop
mov
rorb
xorl
sarl
cli
and
sbb
out
add
dec
dec
sub
push
pop
aas
test
pop
jae
sti
test
pop
or
clc
or
xchg
cmp
jo
inc
clc
cwtl
std
pop
pop
pop
jns
lods
sbb
jb
popa
fwait
jo
cld
dec
pusha
push
cltd
pop
sub
sub
pusha
arpl
pop
popa
xor
lods
out
or
outsb
mov
inc
insl
mov
cmp
incl
add
pop
pop
pop
pop
lods
mov
push
out
int
or
xor
xchg
fldt
sbb
adc
mov
xchg
push
mov
insl
lcall
push
cmp
pop
cs
inc
daa
dec
imul
insl
insb
insb
test
insl
fwait
cmpsb
mov
arpl
sbb
cli
add
mov
je
add
dec
mov
int3
mov
test
xor
xchg
and
push
cmp
inc
outsb
inc
imul
or
adc
lods
outsb
testl
imul
pusha
pop
imul
popa
je
inc
arpl
dec
push
test
xor
gs
insl
rol
push
dec
fxam
std
adc
pop
pop
shlb
push
test
loope
sti
or
push
decb
pop
mov
inc
jbe
or
sarb
adc
aas
mov
mov
daa
test
test
psubq
lret
hlt
mov
movb
scas
in
mov
mov
bnd
incb
ret
shrl
mov
aas
in
ror
lods
mov
rcr
dec
mov
ret
das
stc
test
scas
lret
mov
cld
psubw
movsl
aad
sahf
scas
mov
movsb
ret
fld
pushf
mov
mov
fwait
mov
enter
mov
mov
mov
lret
popf
lods
mov
mov
aam
scas
enter
mov
jge
ret
aas
lret
mov
mov
incl
shlb
mov
scas
ret
fstpt
pushl
ret
stos
enter
mov
aas
in
ret
mov
int
test
aas
in
shl
rol
out
mov
mov
psubw
ror
mov
mov
mov
inc
incb
mov
mov
mov
call
mov
in
mov
out
in
enter
mov
mov
mov
mov
mov
lahf
in
mov
inc
lahf
xchg
jg
dec
cltd
ret
divl
icebp
out
psubw
dec
mov
ljmp
loopne
shlb
ljmp
shlb
call
loop
jmp
dec
mov
mov
lods
loop
mov
mov
jg
out
enter
lds
mov
and
nop
lahf
mov
mov
jle
incl
int3
mov
and
lahf
ror
fwait
loope
mov
cmpsl
dec
mov
aas
nop
pop
enter
fildll
movsl
or
jle
mov
mov
pusha
psubw
test
es
mov
cmp
scas
test
lahf
push
repnz
rcr
mov
test
pop
int3
xchg
call
scas
test
outsl
rorl
movsl
rcrb
enter
ret
lahf
cmp
les
add
leave
mov
mov
pmulhuw
mov
ret
nop
leave
hlt
dec
iret
aas
and
pop
les
test
bound
push
in
cmpsl
mov
pop
push
jmp
aaa
mov
arpl
imul
outsb
cmp
lret
fistps
sbb
imul
fldcw
outsl
push
stc
sub
push
sub
pop
sub
push
jg
pop
aas
sti
dec
dec
dec
inc
daa
gs
divb
xlat
sti
mov
cmp
pusha
popa
outsb
loop
push
xchg
cmp
push
mov
bound
outsl
hlt
clts
mov
dec
cmp
inc
ds
shrb
jmp
mov
std
pop
cli
sub
les
aad
idiv
pusha
add
add
std
dec
lret
int
and
repz
and
and
gs
pop
jo
pop
outsb
pop
arpl
bound
pop
push
push
imul
fldt
mov
scas
out
mov
insl
mov
inc
push
mov
inc
jno
push
test
or
ds
push
insl
in
testb
ss
push
sub
push
push
call
andb
push
dec
pop
sub
imul
fs
push
cmp
insl
popa
insl
fs
mov
inc
cmp
push
inc
dec
cmp
lret
mov
insl
cmp
inc
mov
hlt
movsl
mov
push
pop
sub
cmp
jno
pop
and
push
mov
jle
push
inc
xor
inc
fistpl
out
cmp
inc
dec
dec
dec
lahf
or
push
add
ja
pop
call
ds
dec
push
fcomi
incl
das
es
add
pop
pop
pop
imul
jno
jb
sub
sub
mov
es
aas
pop
pop
ljmp
or
pop
sub
dec
dec
and
insb
test
pop
add
sti
or
notb
adc
pop
dec
insl
jb
xor
xchg
xor
test
add
pop
ss
popa
fs
pop
and
imul
addr16
stos
dec
mov
adc
sub
inc
add
xchg
dec
xchg
cli
decl
pop
xchg
sbb
dec
sub
daa
sub
push
cmp
testb
or
sbb
inc
cld
inc
loope
push
sub
mov
dec
pop
imul
popa
xor
js
sub
inc
dec
pop
popa
arpl
popf
insl
pop
mov
pop
jno
inc
push
call
test
pop
xor
mull
mov
push
mov
or
or
nop
cld
pushl
cmp
es
sub
and
sub
fistpll
pop
insl
je
pop
pop
xor
insl
adc
gs
fistpll
dec
movsb
or
sub
insl
jp
push
sbb
pop
xor
push
inc
dec
movsl
dec
pop
cmp
dec
dec
and
insb
cmp
insb
cmpsl
pop
pop
push
daa
inc
frstor
xor
insl
test
data16
push
dec
xlat
mov
mov
addr16
or
arpl
sbb
mov
xor
das
sub
pop
outsb
jbe
pusha
pop
outsb
test
lret
pop
mov
sti
das
xor
sub
xchg
or
loope
xchg
push
sub
fnsave
es
addr16
popa
arpl
jbe
dec
xor
negb
jg
out
js
pop
imul
arpl
mov
pop
aad
std
sbb
clc
push
fstpt
cmp
cld
pop
adc
pop
fs
xorl
sub
daa
and
icebp
sbb
popa
sub
cmp
and
sub
arpl
pusha
sub
cmp
and
cmp
inc
jecxz
jle
pop
sub
pop
cs
mov
mov
inc
sbb
cmp
xor
sub
int3
iret
mov
pop
and
insl
pop
xor
sub
imul
cli
mov
cmp
cmpsl
push
cs
lods
sbb
insl
ja
sub
pop
jmp
fs
gs
ds
push
jno
insl
ja
mov
pop
mov
cmp
pusha
xchg
dec
gs
insb
push
dec
dec
ds
arpl
lods
test
push
repz
das
sarb
pusha
push
dec
cmp
popa
push
dec
je
mov
iret
pop
outsl
dec
arpl
adc
inc
insb
lds
pop
cltd
dec
jecxz
push
inc
jo
pusha
mov
scas
mov
inc
bound
jbe
jmp
or
outsl
arpl
xchg
insl
data16
fsubrs
pop
insl
aas
sarl
ds
pop
imul
inc
shl
movb
inc
mov
arpl
cmp
mov
cmp
pusha
inc
mov
lret
adc
movzwl
cmp
pop
inc
dec
pop
dec
ja
inc
std
outsb
jmp
adc
dec
lea
jne
outsb
jo
pop
ljmp
test
inc
aaa
imul
sub
mov
insl
add
xor
bound
insl
imul
movsl
mov
jmp
or
ja
push
mov
and
lret
fwait
addl
daa
arpl
jno
ret
aas
gs
outsb
sub
jecxz
sub
das
xor
lds
inc
inc
inc
inc
inc
inc
inc
inc
dec
sub
incl
dec
dec
dec
dec
push
dec
push
push
push
push
push
dec
pop
xchg
mov
fs
push
imul
lock
je
jne
inc
cmp
sub
int3
mov
inc
pop
es
pop
adc
cs
pop
cltd
and
aas
cmp
aas
inc
cmp
and
mov
inc
arpl
adc
inc
jg,pn
outsb
arpl
insb
insb
pop
add
ds
pop
mov
lea
cmp
fcomps
aas
mov
cmp
and
arpl
daa
in
mov
cmp
jae
jno
inc
addr16
out
pusha
xor
jb
inc
cmp
push
aas
sub
mulb
push
popa
jo
lcall
mov
je
aas
inc
cmp
cmp
rolb
iret
insl
aaa
stc
add
imul
mov
inc
pop
imul
pop
outsb
add
stc
add
sti
mov
jg
pop
arpl
cltd
cmp
es
das
mov
add
dec
sub
leave
and
and
sbb
jns
sub
jo
xchg
dec
hlt
or
outsl
dec
in
push
aaa
mov
pop
adc
je
add
push
xor
int
pop
test
cmp
mov
gs
inc
insl
mov
cs
pop
or
xchg
pop
test
pop
roll
inc
inc
mov
roll
movsb
xlat
adc
gs
dec
xchg
sub
mov
pop
movl
dec
dec
xor
pop
cs
inc
imul
aad
stc
pusha
cmpsl
jno
pop
call
pop
imul
jae
and
orb
mov
push
pop
xlat
sub
addr16
loop
ljmp
dec
sub
jbe
mov
sub
sub
sub
clc
sti
push
clc
sub
and
imul
sub
jg
sub
sub
sub
fldt
in
sub
sub
or
push
sub
cs
fsubr
sbb
xor
xor
call
cmp
sub
mov
fsubrl
cs
adc
xor
sbb
jg
repz
mov
das
add
xor
js
mov
std
lcall
ja
jge
xchg
sub
mov
sub
or
or
mov
xor
das
aas
xor
xor
xor
dec
xor
test
pushl
or
xor
xchg
aaa
sysexit
imul
loopne
getsec
sub
xor
cmp
pop
cmp
ja
js
xorl
lods
xor
lds
sarb
fnsave
and
cmp
ds
cmp
pop
cmpsb
cmp
jl
nop
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
sbb
jg
outsl
aaa
sub
stc
jecxz
push
repz
data16
sub
ja
sub
or
lods
das
xor
jge
lcall
xor
loop
fistpll
cmc
xor
xor
das
sysenter
pop
xor
test
dec
das
push
pushl
xchg
xor
loopne
push
xor
outsb
xor
xchg
xor
dec
xor
sub
data16
xor
ss
pushl
ss
or
jnp
cmpl
mov
pushl
aaa
cld
test
cmp
cmp
ss
add
cmp
cmp
sti
cmp
cmp
incl
aas
cmp
jle
sarl
loopne
out
cmp
sub
sbb
mov
mov
cmp
xchg
cmp
cmp
aaa
call
pop
mov
sub
sub
pushl
sub
pop
sub
jp
test
sub
fisubrs
sub
sub
sub
js
jge
add
mov
cs
sub
loop,pn
in
sub
or
sbb
mov
sub
popa
sub
lea
adc
jg
add
jno
cltd
das
mov
fisubrl
sbb
mov
push
push
mov
xor
dec
das
dec
xor
jg
pop
clc
jb
mov
mov
inc
xor
xlat
addr16
das
dec
jecxz
jg
xor
jle
xorb
das
sahf
xor
sbb
aas
test
je
imul
xor
ja
or
cmp
push
xor
mov
xchg
cmpsb
xor
ljmp
cmp
xor
xor
cmp
ss
cs
cmp
cmp
dec
cmp
inc
pop
xor
gs
test
xchg
xor
cmp
ss
jg
pop
cmp
insl
cmp
cmp
cmp
pop
xor
popa
cmp
cmp
xor
sbb
mov
push
cmp
mov
xchg
cmp
cmp
pop
cmp
test
cmp
cmp
cmp
aam
push
adc
roll
ljmp
push
jno
lcall
sub
sub
sub
cs
sub
sub
ret
adc
imul
xchg
add
les
sub
jg
or
cs
sub
aaa
das
push
mov
sub
das
mov
mov
sub
pop
sbb
cs
sub
pushl
das
cwtl
cs
xor
dec
sub
loop
ret
xor
xor
cs
xor
xor
xor
xor
xor
or
inc
xor
movsl
mov
pop
mov
xor
aad
xlat
cmp
inc
call
in
divl
cli
cmp
sbb
ret
cmp
aaa
add
jne
in
jmp
aaa
data16
cmp
ret
xor
dec
push
mov
decl
xor
xor
xor
xor
mul
xor
mov
mov
dec
xor
ret
xor
inc
xor
xor
dec
mov
mov
xor
add
daa
xor
cmp
pop
inc
dec
filds
jo
jl
xchg
xor
leave
xor
xor
aam
ret
and
in
aaa
lock
aaa
add
xor
cmp
xor
xor
dec
ss
xor
cwtl
xor
aam
lock
adc
decl
mov
and
enter
inc
aaa
pop
xor
cmp
pop
mov
push
mov
cmp
hlt
das
aam
aaa
out
xor
cmp
fldt
jle
inc
cmp
pop
cmp
mov
xor
and
sarb
cmp
xor
cli
cmp
jne
xorb
cmp
int3
fdivrl
out
cmp
cmp
rol
incl
cmp
cmp
lahf
pop
sub
pop
pop
int
sub
xchg
lahf
das
dec
call
cs
sub
sub
dec
sub
aad
mov
push
ljmp
sub
sub
popf
inc
xor
sbb
push
inc
cs
or
pop
add
jae
popa
insb
insb
push
popa
je
add
dec
dec
pop
push
outsl
jg
push
icebp
data16
popa
pop
push
outsb
arpl
je
jno
jae
lcall
push
add
mov
lret
shll
pop
divb
dec
imul
push
imul
ja
push
push
push
outsl
popa
insl
sbb
push
dec
inc
popa
arpl
add
imulb
adc
test
arpl
fs
arpl
gs
and
jo
jae
arpl
arpl
imul
and
imul
gs
adc
jo
pop
mov
arpl
add
pop
push
mov
fwait
jge
pop
pushl
pop
jns
in
faddl
jo
push
push
push
jb
jns
fisttps
mov
and
sub
push
gs
add
jnp
mov
fmull
aas
jb
outsb
cmp
mov
sub
dec
dec
ret
ja
outsb
imul
pop
inc
daa
push
jae
nop
mov
imul
push
jnp
gs
mov
sub
cmp
divl
popa
push
ds
pop
inc
js
adc
push
mov
fildll
adc
dec
cmc
jo
adc
inc
fs
imul
or
popa
dec
add
inc
xor
ret
jne
xlat
je
inc
inc
jbe
outsb
sti
mov
lods
inc
jb
notl
bound
sub
fs
mov
cmp
push
or
inc
sub
or
dec
pcmpeqw
outsl
fxch
cmpsl
sbb
dec
jae
xor
jae
add
inc
shll
movd
pop
mov
cmp
mov
adc
jns
add
out
mov
push
and
fs
daa
push
sti
jo
mov
imul
insb
sti
imul
fwait
rcrb
dec
dec
insl
imul
pop
popa
popa
insl
inc
jae
imul
xor
dec
push
imul
lcall
dec
dec
add
inc
jns
popa
dec
adc
add
ja
lcall
xor
xor
adc
or
je
inc
adc
fcmovbe
addl
add
add
fwait
adc
in
adc
js
aas
dec
repz
ja
or
push
sbb
jg
pop
fdivs
shll
das
sub
mov
or
or
or
fistpl
mov
arpl
bound
or
or
push
or
add
mov
mov
add
add
jg
inc
add
addr16
sbb
fnsave
sbb
cmp
mov
push
inc
jp
clc
pop
std
ljmp
add
in
inc
idivl
jno
in
movsl
push
data16
sarb
test
jecxz
inc
lahf
shll
add
or
ljmp
call
push
ficomps
in
das
rolb
adc
or
icebp
in
add
push
jno
enter
add
mov
enter
add
incl
rolb
nop
add
add
sub
cltd
shlb
jns
add
pop
push
dec
add
add
add
adc
and
jg
sub
arpl
aas
adc
jae
mov
add
add
push
add
jb
jbe
sub
add
add
add
or
lret
data16
mov
xor
insb
jae
jb
outsb
inc
insl
sub
inc
ja
jb
outsb
aas
pop
imul
inc
insb
outsl
jae
or
in
fstp
into
adc
sub
jne
gs
inc
jb
popa
or
xchg
jg
dec
popa
jo
adc
push
imul
jnp
push
inc
insb
jne
push
and
push
imul
dec
push
add
dec
popa
mov
inc
xorb
jns
adcl
push
sti
xor
push
outsb
pop
outsl
outsl
je
mov
jbe
inc
js
xor
cmovle
and
inc
cs
fistl
jb
arpl
jae
pop
outsb
or
in
int
cmp
test
fstl
push
jne,pt
dec
lods
pop
ss
xorps
outsb
js
arpl
sub
outsb
nop
push
sbb
sahf
lods
sbb
push
popa
imul
sbb
mov
dec
dec
bound
je
and
imulb
push
mov
int
std
sbb
fs
dec
outsl
popa
fs
xchg
mov
pusha
jns
jns
out
inc
ret
adc
ret
add
pop
adc
push
roll
bound
icebp
jae
lods
pushl
int
sbb
cwtl
call
push
jmp
adc
pop
adc
pop
in
pushl
or
call
leave
adc
mov
decl
ljmp
mov
or
and
add
mov
jp
fstpt
add
or
and
incl
sbb
ljmp
or
insl
and
dec
out
sub
insl
aaa
push
out
dec
out
ud0
insl
fistl
dec
xchg
add
xor
cmp
mov
push
xor
adc
lock
fcomi
pop
or
icebp
push
testl
push
mov
mov
mov
push
push
dec
mov
mov
mov
adc
insl
inc
bound
arpl
call
cli
insl
mov
inc
das
dec
jns
sub
xor
imul
mov
frstor
or
adc
pop
push
insb
ljmp
pop
je
movntps
fimull
cli
sahf
or
mov
cmp
sub
sub
icebp
aaa
push
add
fwait
add
in
sbb
adc
sbb
jb
jae
arpl
outsb
jle
fnstenv
pop
jae
nop
or
insb
or
pop
out
cs
insl
bound
add
or
jbe
inc
sbb
outsb
arpl
mov
aas
lods
inc
inc
js
inc
jb
dec
ror
mov
sub
data16
insl
mov
cmpsl
neg
fisubs
pop
push
jae
pop
aas
in
imul
push
ret
add
adcb
ja
aaa
rorb
std
fdivs
out
addr16
jae
push
sbb
and
mov
fimull
fs
jb
fmul
je
out
outsl
jns
inc
gs
jae
or
lods
jle
or
pop
outsb
xchg
data16
push
outsl
push
jne
adc
lods
jmp
xchg
adc
jbe
fsts
push
mov
pop
jne
or
and
mov
imul
cmp
mov
inc
or
out
aaa
fmull
push
cmpsl
outsl
jb
popa
mov
sbb
pop
inc
cs
pop
sti
das
dec
pusha
inc
mov
add
add
pop
ja
in
dec
pushl
pop
sidtl
add
mov
lock
cmp
inc
push
adc
xor
add
pop
xor
in
jnp
cwtl
sbb
add
adc
sub
xchg
or
js
rcr
and
ret
les
push
je,pn
js
shlb
or
pusha
nop
xor
push
pusha
jb,pn
popa
push
push
cmp
add
cs
in
imul
mov
jae
or
rep
and
add
and
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
