daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
insb
add
daa
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
inc
add
leave
test
stc
push
pushf
pop
ret
pop
pop
fidivrs
enter
mov
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
popa
fstp
testl
pop
lahf
cmpl
fisttpl
dec
test
je
mov
push
add
or
fcmovnu
mov
mulb
xor
xchg
shr
or
in
jne
mov
pop
shr
rol
or
jbe
mov
push
push
push
mov
xchg
push
sbb
xlat
or
or
push
cltd
adc
jo
or
std
outsl
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
mov
call
sub
add
repnz
sbb
test
push
test
jne
sbb
lea
shr
push
push
xor
fists
jle
sub
dec
cmp
or
cmpw
jne
lret
dec
jbe
call
cmp
sbb
neg
add
or
sub
push
or
insl
mov
and
push
mov
pop
or
mov
push
fs
sbb
jno
fbstp
push
add
pop
lock
xor
or
mov
test
jbe
cmp
cmp
mov
out
adc
adc
sbb
jbe
mov
outsb
fdivrs
outsl
add
adc
outsl
test
mov
rolb
mov
ja
inc
add
mov
jl
mov
mov
push
jl
adc
adc
add
stos
stos
stos
push
pop
sub
or
or
inc
push
adc
adc
and
push
or
mov
mov
pop
add
dec
mov
in
mov
out
dec
stos
push
mov
lods
into
mov
mov
or
shl
add
inc
mov
mov
shrl
stc
lea
mov
push
arpl
clc
shr
rep
pop
push
and
mov
movsb
dec
int
mov
and
pop
push
push
lea
fnsave
sbb
mov
mov
rclb
cmpsb
jmp
cmp
cmp
push
sbb
inc
into
bound
and
bound
xchg
sbb
ss
int
lahf
adc
pop
mov
sub
xchg
pop
testl
mov
das
jnp
lea
pop
cmpsl
gs
mov
popa
xorl
sub
imul
add
je
mov
cmp
inc
add
xor
fsubs
pop
test
cmpb
jne
adc
mov
mov
push
adc
fstl
mov
pop
mov
push
push
je
push
adc
push
mov
mov
sub
adc
ss
push
mov
xorl
adc
jp
cmp
push
test
dec
xor
cmpsb
fldt
add
sbb
int
jne
scas
jecxz
lcall
cs
mov
push
lret
or
push
push
dec
inc
rorb
add
je
cmp
int
or
loope
add
aaa
adc
fsubrl
xor
push
add
adc
pop
mov
mov
push
xor
roll
rolb
je
rclb
xor
ret
or
lods
jge
outsl
mov
pop
sahf
jbe
sahf
insl
pop
adc
pop
nop
mov
and
or
outsb
je
cli
sub
or
push
mov
push
push
fcomps
push
xor
inc
inc
push
pushw
pop
cmp
repz
pop
sub
inc
lock
push
mov
inc
sbb
aad
scas
fstl
add
inc
incl
lea
push
push
and
frstor
sbb
push
push
test
sub
jns
lds
cmp
pop
push
adc
loope
es
push
cwtl
loop
xchg
jo
pusha
outsl
dec
pop
push
push
cmp
push
cmp
add
push
add
add
ficoms
adc
pop
push
sbb
jl
iret
fmulp
movsl
push
xorl
lret
add
fwait
popf
and
or
sbb
lret
add
pop
hlt
mov
jae
jmp
lcall
pop
mov
les
test
ret
mulb
adc
insl
mov
xor
testb
fdivrs
sub
cli
jmp
push
data16
fs
enter
push
push
sub
cmp
push
mov
subb
push
adc
xchg
aam
adc
in
sbb
out
mov
pop
add
push
xchg
sbb
mov
shll
enter
sub
out
data16
sar
cld
lret
add
add
dec
scas
icebp
jmp
add
cmpb
jne
test
jle
push
dec
mov
lods
add
push
xchg
clc
mov
sub
dec
jne
std
sbb
pop
rorl
leave
mov
xchg
rclb
mov
mov
lea
enter
insl
imul
fsubr
inc
lret
mov
fdivrl
pop
call
lret
pop
shl
jo
mov
ja
mov
pop
cmp
int
jb
jb,pt
clc
sub
sub
bound
or
jnp
xor
shrl
push
adc
mov
lret
or
sbb
push
push
xor
or
aaa
xor
pop
mov
fsubp
jecxz
test
je
sub
mov
adc
push
cmp
inc
shr
push
ljmp
push
push
push
lea
push
mov
loopne
gs
mov
insl
fcomps
jmp
mov
push
xchg
fistl
rep
mov
xchg
push
adc
dec
or
and
pop
sahf
mov
cmp
inc
js
inc
push
and
sbbw
or
lea
jbe
cmp
loope
lea
out
lock
xor
mov
inc
jae
daa
mov
in
adc
movsl
or
mov
sub
sbb
mov
pop
and
push
sbb
xchg
jp
push
push
inc
fld
jns
xlat
addr16
or
fcom
pusha
rclb
cmpsl
leave
gs
adc
dec
dec
adc
sbb
outsb
dec
shlb
add
jno
sbb
sub
mov
or
push
fldcw
pusha
call
mov
push
xor
xor
push
push
add
xor
mov
xlat
and
or
adc
movsl
mov
sub
xchg
xor
mov
fisubrs
aam
push
mov
je
fmuls
cmp
ja
add
out
mov
imul
xor
sbb
mov
mov
xor
push
or
sub
nop
dec
decb
in
push
push
xchg
push
rcrl
pop
fldenv
addb
add
sbb
pusha
xorb
jae
fstp
adcl
adc
add
add
mov
or
or
cmpsb
jmp
fisttpll
and
rclb
sub
adc
fs
das
adc
pop
xor
jl
outsl
mov
mov
mov
xlat
push
sbb
push
data16
mov
mov
push
cmc
out
stos
jae
or
jne
inc
add
out
add
xor
sbbl
ret
and
lcall
mov
and
movl
call
inc
mov
pushl
inc
outsl
call
jmp
ret
in
les
mov
and
cmp
sarl
jl
xor
push
push
adc
jo
out
enter
pusha
test
or
pop
xchg
dec
paddusb
and
jo
fisttps
fidivs
les
or
cmp
jne
dec
xor
add
and
xchg
jns
add
data16
adc
aaa
into
or
push
pop
nop
inc
dec
push
sbb
adc
mov
pop
inc
and
inc
pop
or
pusha
movsb
cmp
aaa
sbb
ja
pop
add
setnp
push
mov
mov
pushf
push
or
stos
cmp
and
andb
sbb
adc
stos
rcr
jmp
xchg
daa
inc
fs
divl
inc
data16
sbb
mov
movsl
scas
js
test
pop
xchg
xor
popa
xchg
jae
imul
mov
push
dec
and
push
cmpsb
and
pop
pop
mov
imul
mov
cld
dec
dec
or
hlt
inc
xchg
out
and
pop
xchg
test
push
fs
enter
std
and
gs
clc
adc
or
clc
pushf
mov
mov
ret
jecxz
shl
jle
mov
adc
mov
add
mov
js
fs
shlb
add
leave
cltd
xor
and
adc
orl
gs
nop
jbe
jmp
push
pusha
jecxz
rclb
lock
cmp
jmp
bsf
int3
push
mov
adc
push
idivb
es
mov
pop
adc
jg
int
add
ds
push
push
push
and
mov
lahf
cmp
jmp
fsubrl
insb
neg
lret
and
sbb
push
insb
ud2
xchg
sbb
in
push
sub
sub
dec
hlt
jmp
xor
fidivrs
adc
cmp
sub
sub
inc
cltd
sub
add
clc
out
sbb
pop
xor
pop
adc
push
xor
mov
cmpsl
xor
fs
pop
mov
dec
mov
mov
inc
pusha
ret
movups
mov
iret
outsb
and
fs
xor
mov
add
les
dec
sub
pushf
xor
popf
sbb
mov
pusha
dec
aam
sbb
push
push
shll
cmp
or
out
cmp
sbb
and
inc
add
shll
pusha
rol
push
cld
pop
mov
inc
push
ret
insb
in
jns
dec
sahf
push
in
sub
ficoms
inc
push
repnz
addl
xchg
inc
mov
xor
or
jo
and
xor
or
cmp
xor
sbb
repnz
dec
pop
add
out
add
dec
xchg
lret
cmp
repnz
add
or
js
iret
adc
je
mov
pusha
add
inc
sub
enter
dec
lock
add
fs
sub
test
into
jge
dec
in
inc
adc
cmp
push
xor
popf
loopne
iret
mov
jo
leave
mov
push
inc
dec
stc
mov
stos
addr16
xor
sbb
testb
pop
xchg
or
bound
bound
mov
call
sub
rcll
rcrl
bound
pop
pusha
jne
ret
push
mov
sub
add
push
insl
mov
push
add
adc
lock
adcl
push
push
addps
cmp
sbb
imul
push
ss
arpl
sub
xchg
lods
mov
ret
sbb
add
lods
out
pop
inc
shrl
push
imull
in
adc
outsl
push
adc
adcl
lret
out
js
jge
add
repz
xor
insb
sub
cli
sbb
rol
add
add
push
sub
push
popa
sbb
or
out
call
mov
sar
xchg
sbb
daa
je
mov
or
add
or
or
sbb
popf
add
outsb
mov
shll
push
dec
pop
jmp
or
push
push
int
and
je
addb
andb
or
jnp
jb
sbb
xor
pop
cwtl
adc
mov
inc
or
lock
sbb
data16
fst
or
test
je
push
sub
add
add
xor
jae
daa
jne
pop
sbb
fs
cltd
testl
add
mov
add
mov
cmp
jb
or
mov
inc
cmp
jg
mov
or
mov
addr16
or
jo
aam
mov
mov
mov
mov
mov
mov
cmpb
mov
jo
mov
pop
mov
dec
mov
cmp
sub
mov
sbb
or
jns
mov
lahf
iret
scas
adc
mov
sbb
addb
mov
sbb
sbb
sbb
sbb
sbb
sbb
xor
xor
ror
shlb
xor
add
fs
in
jo
or
sub
sbb
or
sub
lods
jnp
aad
pop
ret
push
pop
mov
sbb
ret
and
jo
xchg
push
cmpsl
pop
add
ret
push
xor
jo
addb
in
insb
cwtl
inc
xlat
xchg
add
push
jg
gs
cld
ljmp
inc
orl
push
or
lock
jmp
cld
mov
lahf
fneni(8087
sbb
add
xchg
inc
mov
fwait
jmp
mov
cld
sti
jae
mov
push
adcb
push
mov
push
sti
inc
xchg
lea
test
push
lcall
lods
add
jg
or
and
add
xor
decb
inc
or
add
or
insl
jnp
and
aam
dec
movsb
cld
mov
hlt
in
testb
in
movzwl
jmp
sub
jbe
jbe
lahf
fsubr
cmc
push
pop
pusha
push
push
and
push
lcall
jge
pop
xchg
cwtl
xor
inc
in
mov
mov
mov
sub
push
insb
and
pop
mov
pop
lcall
test
xor
inc
mov
add
xor
dec
out
inc
call
in
lahf
mov
adc
xor
sar
pop
scas
sub
test
mov
mov
inc
jne
push
adc
enter
mov
fsubr
xor
lock
jb
mov
inc
gs
out
sbb
mov
paddusb
scas
int3
fsubs
dec
lock
and
lea
inc
mov
mov
pop
and
add
nop
adc
mov
xor
shll
outsb
pop
aam
lret
data16
dec
lock
adc
insb
xchg
dec
shll
testb
dec
shll
inc
push
dec
shll
scas
sahf
pop
outsb
pushl
add
push
add
adc
fwait
in
jb
pop
or
or
sbb
movsl
leave
adc
pop
outsb
sbb
or
jmp
das
add
mov
sub
adc
nop
xor
adc
add
sbb
comiss
repz
sub
pop
sub
adc
aaa
lcall
out
movhps
scas
jmp
xchg
pop
sbb
xchg
daa
push
dec
xlat
jne
addl
rdtsc
lcall
inc
push
adc
sub
or
dec
xlat
insb
pop
icebp
testl
xlat
jne
xlat
adc
jno
mov
pop
dec
add
mov
xlat
je
out
movsl
addr16
mov
adc
fwait
pop
dec
or
push
scas
arpl
xlat
jne
mov
cli
or
pop
inc
aas
dec
mov
shll
testb
imul
mov
mov
imul
frstor
cmpsb
outsb
js
add
fcompl
add
shlb
or
je
add
clc
or
mov
in
fwait
cmp
adc
push
inc
loope
or
jbe
push
push
das
sbb
add
adc
and
cmp
shll
push
sub
xor
xlat
xor
or
add
fsqrt
cs
out
pop
call
pop
mov
faddl
ror
dec
shll
lods
cmpsb
xor
shll
lcall
roll
inc
enter
pop
mov
add
and
ltr
xchg
cmpsb
mov
jb
test
and
xor
pop
adc
xor
and
aas
adc
push
dec
mov
lcall
ljmp
fcoms
rcrb
xor
scas
xor
stos
mov
int3
das
mov
xor
sarl
dec
shll
test
xor
xor
jb
xchg
sbb
nop
mov
and
xor
pavgw
add
inc
and
int3
jge
shrb
lock
and
fs
inc
add
pusha
push
xchg
dec
inc
and
sub
stos
pop
dec
sub
adc
dec
and
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
add
lahf
inc
inc
dec
xor
cs
insb
add
push
inc
push
or
push
push
xor
dec
inc
push
sbb
mov
pshufw
mov
roll
into
mov
sbb
dec
pop
mov
std
cld
cli
popf
push
idiv
std
mov
sti
sub
or
clc
cmp
cld
sti
call
or
mov
int3
sbb
dec
addr16
push
pop
insb
call
bound
imul
insl
sbb
sbb
dec
push
pop
gs
bound
incl
inc
jnp
pop
ret
mov
and
xchg
ret
mov
xor
xchg
mov
sub
xchg
ret
adc
and
add
fbld
cmpsl
xor
push
sarb
sarl
dec
shlb
ljmp
dec
pop
bound
loop
decl
cld
clc
sar
jmp
inc
mov
daa
dec
xlat
push
test
pcmpeqd
jmp
or
add
pop
cmp
jb
dec
add
adc
dec
xchg
sbb
ja
or
insb
in
push
pusha
ret
movsl
mov
inc
cmp
add
scas
mov
test
pop
lahf
daa
sub
xor
out
popa
jb
inc
jecxz
or
mov
sub
pop
add
lods
or
inc
lcall
pop
pop
cmp
popa
pop
outsb
pop
call
lods
add
mov
insl
dec
mov
fstpt
push
fwait
mov
es
jne
cmp
adc
call
call
push
dec
mov
je
loopne
dec
jecxz
push
xchg
pop
push
xor
addl
imul
or
inc
sti
dec
dec
test
cld
incl
jge
jo
data16
push
mov
rorb
dec
arpl
jl
fstpt
or
mov
jo
sti
outsl
pop
adc
lcall
cmp
jo
push
cld
adc
pop
lcall
push
test
out
xor
mov
jmp
stc
mov
lahf
insb
std
mov
cmp
mov
lock
in
jmp
addr16
inc
sti
movnti
jge
ljmp
std
sti
stc
arpl
ljmp
cli
xor
add
std
adc
pop
mov
fucomip
cmp
mov
push
cmpb
jg
hlt
out
xchg
gs
push
jge
stc
daa
and
cmovs
aam
arpl
or
pusha
mov
pop
clc
lods
ret
dec
in
xor
add
fs
test
xor
xorb
xchg
or
ret
xor
or
pop
pop
je
addr16
andl
sti
in
out
inc
test
jbe
jno
loop
sub
outsl
mov
pop
pop
out
pop
sbb
sbb
in
fcmovnb
mov
jnp
cmp
push
dec
mov
inc
cmc
xchg
adc
notb
jo
mov
sub
or
insb
fcoms
mov
push
fsubl
imul
sbbb
xor
mov
stos
test
jbe
inc
stc
push
push
cli
je
lods
in
pop
jle
test
or
aaa
dec
decb
inc
jecxz
pop
sub
mov
dec
out
cld
out
jle
adc
jae
daa
mov
sub
pusha
mov
or
clc
pushf
or
repnz
mov
jecxz
fadds
add
stos
std
add
arpl
jecxz
dec
sar
ret
jnp
or
pop
insl
pop
ret
cmp
into
ss
add
pop
sarl
mov
pop
xlat
notl
mov
push
jae
jnp
sbb
js
mov
cmp
sbb
call
jg
fildl
add
pusha
xchg
lahf
or
cmp
mov
in
push
dec
cmpl
xor
cmp
jg
or
jg
xorl
inc
decl
in
inc
aaa
sbb
fnstsw
sbb
xchg
sbb
mov
pop
sti
lret
cmp
les
mov
lods
cmp
add
or
or
inc
push
test
icebp
pop
push
lods
das
xchg
adc
fwait
jle
test
inc
pop
push
loopne
daa
xor
out
outsl
lock
mov
loop
sub
adc
jo
out
fwait
fldt
dec
dec
arpl
in
mov
pop
jo
std
or
sub
out
neg
incb
clc
test
addl
xor
ss
fsqrt
call
and
push
ja
ja
dec
or
or
and
push
add
js
mov
gs
push
std
sbb
sbb
js
lret
xchg
cltd
outsb
cli
mov
jno
imul
push
cmpl
pushl
aaa
sub
pop
scas
inc
incb
push
add
jg
jge
inc
jge
jnp
xchg
call
mov
idivl
add
xchg
mov
test
cld
roll
jmp
cmp
fdivrl
xor
pop
jle
mov
add
loopne
and
fs
sti
int
clc
mov
out
sbb
jg
pop
shlb
cld
bound
or
lahf
inc
sbb
mov
mov
xor
mov
or
pop
pop
pop
enter
jno
push
xor
decl
out
jbe
mov
or
lds
add
aaa
aas
cmp
lock
dec
ret
out
call
loope
pop
out
push
addr16
xor
ss
lret
lods
out
outsb
fdivs
jle
sbb
and
xor
push
or
imulb
addr16
xchg
push
out
inc
cmp
fucomip
mov
mov
notl
rcrl
mov
xor
sbb
lods
mov
sbb
fs
insl
out
in
std
decl
aas
add
add
jnp
notl
sti
aas
repz
ret
aaa
fnstsw
push
out
inc
jnp
les
push
fcompl
jmp
cmc
or
js
test
mov
adc
lds
aas
dec
das
mov
imul
cwtl
sti
daa
adc
ret
mov
push
push
dec
xchg
inc
push
mov
arpl
pop
cmp
outsb
inc
dec
test
sbb
push
cmpl
mov
dec
pop
pop
out
in
addr16
rcrl
mov
das
or
add
or
out
sti
sti
jmp
adcb
adc
lock
dec
lea
jno
cli
cltd
cmp
aaa
add
in
mov
sti
inc
dec
dec
fwait
mov
or
push
pop
adc
mov
inc
dec
std
xlat
dec
incb
outsb
mov
xchg
dec
loopne
inc
xchg
dec
push
daa
inc
inc
cs
cld
movsl
ja
fwait
sti
push
data16
test
out
loopne
push
ljmp
jp
adc
push
push
add
pop
gs
cmc
fcmovne
pop
cmp
incl
dec
push
push
test
movsl
or
mov
loop
inc
push
cld
rclb
or
sbb
je
lss
jb
loopne
std
jne
pop
jle
cld
pop
aaa
jge
pop
push
inc
dec
dec
xchg
fildll
xor
mov
movsl
in
out
sbb
mov
adc
icebp
inc
xor
cmpl
push
adc
cmc
in
sarb
enter
in
push
dec
stos
sbb
lods
jmp
push
jge
push
mov
stos
sti
mov
notb
mov
cmp
jbe
xor
jae
push
fidivl
jae
adc
inc
push
inc
mov
and
xchg
jns
jp
xor
movl
fistpll
add
inc
xchg
in
add
mov
out
pop
xor
cmp
lret
push
pop
pop
imul
or
insl
add
add
in
add
das
push
std
in
dec
adc
iret
push
pop
sarl
out
jg
sbb
call
out
pop
mov
jl
ret
fistpll
mov
daa
pop
push
loopne
aas
pop
xor
js
sub
xchg
cld
ss
hlt
cmp
ja
cmp
ja
jle
std
outsl
or
mov
and
or
std
jmp
insb
mov
call
adc
out
push
test
mov
push
orl
out
adcl
notl
je
out
jg
cld
or
rorl
adc
push
inc
hlt
dec
add
popa
test
notl
in
jecxz
inc
aaa
cmp
pop
push
sbb
cmp
dec
test
fs
or
add
or
cmpsb
and
cmpb
sub
push
push
aas
or
push
pop
push
loopne
dec
gs
pop
pop
ficomps
ljmp
testb
fnsave
aam
xchg
rcrl
cmp
lock
aas
icebp
and
inc
out
inc
ja
adc
dec
xchg
lret
in
cmc
and
or
cmp
cld
and
in
add
std
icebp
jae
bound
lret
aad
xchg
add
cltd
aad
sbb
lock
decw
std
dec
arpl
cmpb
lds
inc
repz
mov
jg
fbld
out
pushl
ljmp
adc
aaa
outsl
cld
push
xchg
out
sti
sbb
sarl
or
mov
or
test
pop
xchg
jnp
add
rclb
insl
sti
clc
mov
out
imul
mov
hlt
mov
icebp
dec
jecxz
add
in
mov
adc
arpl
outsb
popa
clc
ret
jecxz
add
xchg
fwait
pushf
arpl
add
cmp
dec
push
test
test
cmc
push
jb
pop
outsb
mov
adc
notl
pusha
stos
std
cli
push
out
decb
or
mov
mov
sti
sarl
mull
in
ja
sub
xchg
enter
pop
cs
xchg
in
inc
repnz
cmc
mov
sbb
ret
hlt
and
push
mov
pop
add
adc
repz
lret
cld
cmpsb
pop
push
rcll
mov
add
test
fiaddl
xor
fisttpl
idivb
out
insb
fwait
stc
negl
int
fcmovnbe
aaa
jle
out
test
gs
cmp
loopne
loope
out
lea
inc
lds
nop
arpl
cld
cld
pop
push
imull
mov
popl
cmp
jo
push
test
std
pop
mov
pop
je
pop
xor
pusha
hlt
or
aas
mov
cmpsb
gs
outsb
jno
adc
shll
pop
pop
pop
insl
or
fistpll
add
out
cli
pop
mov
in
and
imul
stc
adc
pop
pop
dec
lods
mov
add
push
stos
mov
call
cld
sub
das
mov
adc
pop
push
xchg
xchg
insl
icebp
in
das
aad
test
in
in
push
in
sbb
pop
and
arpl
add
lock
and
data16
loop
push
int3
in
movsb
popa
mov
pop
outsb
std
lock
sbb
loop
fdiv
cmp
push
pusha
adc
xor
data16
mov
hlt
mov
add
test
pop
in
test
jle
fs
or
push
add
mov
insb
call
ljmp
arpl
inc
push
sub
pop
xor
daa
or
fadds
jmp
shrl
pop
mov
push
jecxz
mov
dec
incl
mov
daa
push
dec
addb
push
xchg
xchg
bound
loope
xchg
sbb
out
addb
dec
add
call
negb
sbb
add
iret
mov
xor
xchg
xchg
cli
out
add
mov
lock
cli
adc
ja
xlat
jge
or
dec
jo
movsl
fbld
jge
idiv
leave
push
cltd
jno
push
push
mov
add
dec
add
pop
or
add
add
push
jmp
cli
hlt
cmpl
scas
aaa
or
mov
test
mov
outsl
fldl
mov
dec
pop
in
mov
add
sub
xchg
orl
ror
dec
lea
sub
add
es
xchg
pop
std
add
push
mov
fstpt
std
test
pop
push
dec
cmp
daa
in
es
push
jnp
add
std
pop
mov
subb
add
mov
ds
sarb
pop
cmp
test
or
out
or
pop
shlb
out
mov
pop
push
mov
roll
xchg
push
cmp
out
pop
rolb
std
push
dec
sub
mov
arpl
andl
mov
dec
add
icebp
dec
test
out
lock
lahf
leave
cld
xor
add
in
outsl
push
push
imul
inc
les
pop
pop
insl
fmul
aam
shll
pop
add
das
xchg
aaa
mov
outsl
outsl
mov
pusha
xchg
mov
mov
cmpb
inc
std
dec
pop
aad
mov
inc
pop
pop
jno
dec
imull
jo
lahf
or
mov
pop
dec
pop
stc
les
in
jle
add
add
sar
roll
or
pusha
pop
subl
jne
inc
push
loope
out
sbb
xor
push
pop
pop
pop
popa
mov
and
and
lock
sbb
ds
in
add
enter
pop
repnz
add
xlat
add
clc
pop
xchg
out
jecxz
xor
sahf
xchg
data16
pop
into
call
das
cmp
outsl
incl
insl
pop
push
lret
int3
cld
adc
imul
dec
pop
lds
pop
and
in
xchg
roll
sbb
inc
or
sbb
ret
aas
add
or
sar
aaa
fisubs
or
push
push
push
pop
pop
lds
mov
cmc
dec
xchg
sbb
add
pop
std
sub
jb
jb
jmp
or
bound
sub
push
shll
fnsave
repz
hlt
dec
in
jno
mov
lahf
test
push
cld
dec
push
mov
dec
jg
jmp
push
or
bound
push
adc
ljmp
pop
push
ret
jmp
jo
das
std
jg
lahf
rol
lds
jae
jnp
mov
push
clc
dec
mov
pop
stc
repz
xor
jo
adcl
inc
ljmp
cld
cs
push
mov
and
insb
sbb
cld
jo
paddd
or
sub
inc
and
or
stc
mov
test
test
clc
sub
bound
cmp
dec
jne
cmpsl
cmp
insl
cmpl
fcmovu
inc
push
xor
stos
pop
adc
stos
adc
inc
cmpl
push
pop
pop
loopne
mov
pop
push
dec
pusha
scas
or
in
ss
fwait
sbb
test
inc
loopne
xchg
faddl
mov
sbb
pop
push
loope
mov
mov
in
dec
jge
jle
loope
loope
xor
sbb
jo
test
xor
xor
idivl
imull
rcll
retw
lods
xchg
sub
aam
xor
pop
xchg
sbb
inc
and
and
ret
jg
call
das
rol
xor
push
push
or
dec
ss
cmp
sbb
dec
or
mov
outsl
and
stc
rclb
lahf
out
sbb
jbe
dec
or
pop
xchg
sahf
xor
push
stc
xor
mov
loopne
mov
or
adc
jo
shlb
mov
pop
pop
inc
jl
add
add
xorl
mov
mov
mov
addr16
push
out
push
arpl
aad
add
cwtl
cmp
add
push
push
sub
stc
cmp
lods
push
movl
movsl
add
data16
adc
lret
or
pop
lahf
insl
xor
imul
sub
inc
mov
jecxz
addr16
ret
pop
xor
jmp
cmp
cltd
mov
jecxz
ss
pop
mov
lock
pop
stc
push
aaa
jne
rcrl
repz
data16
fisttpll
outsb
shr
mov
dec
mov
fsubr
push
lcall
pop
incl
fldt
xor
out
aaa
stc
vmaxsd
shrb
jo
mov
notb
xor
popa
out
outsl
add
jb
aaa
fsubl
push
dec
push
movsl
mov
xchg
daa
stos
sub
loopne
jmp
test
mov
xor
outsl
pop
xchg
fmull
or
mov
xorl
outsb
inc
jmp
push
loopne
sub
cmp
xchg
jne
dec
out
add
add
pop
ret
int3
subl
out
imul
cmp
je
or
orl
dec
jecxz
adc
sub
aam
orb
pop
pop
jecxz
mov
outsb
jae
xor
mov
daa
dec
or
or
dec
dec
lret
push
pop
or
or
pop
cld
mov
inc
hlt
or
pop
fucom
or
xor
cmc
or
mov
lock
push
cmpb
push
ret
cld
xchg
aaa
xor
jb
dec
xchg
mov
xlat
jb
inc
addl
add
fbld
aaa
dec
in
xor
pop
mov
loope
das
jo
jae
inc
lcall
cli
mov
and
test
add
lods
test
add
addl
loope
mov
pop
or
or
cmp
sti
xchg
jecxz
inc
or
ficompl
popa
adcl
push
sti
push
mov
mov
mov
inc
jb
dec
cli
dec
push
fists
loopne
outsl
mov
add
shll
sbb
jbe
cwtl
stc
mov
inc
or
cmp
faddl
test
dec
cltd
dec
outsl
jne
mov
mov
incl
cltd
mov
push
push
xchg
dec
or
push
dec
in
test
xor
das
icebp
pop
add
jmp
jmp
push
jecxz
mov
ljmp
push
lcall
call
mov
bound
jmp
int
push
mov
sbbb
cmp
outsb
pop
mov
push
js
mov
jae
fdivrp
call
adc
orl
dec
addl
pop
call
outsl
jge
fnsave
out
sar
aaa
je
cld
call
push
js
xor
incb
mov
xchg
dec
mov
incb
dec
call
js
pop
push
loope
insl
pop
insl
out
fidivs
add
insl
sti
sub
add
push
out
cmp
xchg
add
jg
pop
sti
aaa
or
inc
adc
fnstcw
int
imul
mov
mov
jecxz
repz
dec
mov
outsl
gs
mov
add
je
movsl
jle
das
sbb
inc
add
push
inc
scas
divb
dec
pop
loop
jo
xchg
mov
jecxz
xchg
pop
out
sub
xor
jne
or
aaa
push
ja
adc
push
or
adc
xor
std
jle
cli
push
mov
imul
add
jle
sbb
rcrl
clc
jmp
jne
popf
inc
push
cmp
call
pop
clc
je
addl
pop
je
ljmp
je
mov
ljmp
sbb
jno
in
mov
pop
cmp
ds
repz
icebp
mov
outsl
or
insl
in
xor
pop
adc
int3
adc
das
jb
in
inc
adc
arpl
jge
sbb
ret
loopne
cld
mov
dec
inc
sbb
mov
mov
test
pop
jne
cli
xchg
cmp
jecxz
in
add
test
add
lret
mov
jge
mov
test
adc
inc
int
or
test
in
test
cmp
out
cmpl
ljmp
loopne
sti
pop
das
mov
jmp
cli
dec
or
push
test
es
push
arpl
pop
sub
and
xor
adc
rep
sbb
jecxz
mov
mov
loopne
das
or
and
fstps
neg
inc
repz
push
push
xor
sbb
sub
fmuls
repz
ds
dec
mov
stos
shrb
adc
ljmp
mov
adcl
movl
faddl
insb
add
jecxz
xor
mov
loopne
addl
shr
in
pop
pop
mov
aas
cld
push
test
mov
pop
pop
jmp
sbb
push
shlb
je
lock
adc
pop
and
lods
mov
mov
and
push
or
or
cmp
and
push
mov
xchg
cmp
das
pop
clc
jne
mov
adc
inc
or
pop
das
adc
push
adc
ja
jecxz
ja
call
xchg
test
add
out
insl
add
or
jmp
cmc
test
xchg
out
xor
pop
test
xorl
loopne
mov
inc
cmpl
shrb
jge
pop
xchg
das
je
adc
test
dec
sbb
push
xchg
mov
or
cmp
lret
test
imul
cmp
mov
loopne
lds
adc
repz
out
jnp
mov
or
outsl
cld
loopne
pop
out
sahf
adc
outsl
stos
aaa
addr16
subl
in
cli
iret
jb
lods
rol
cmp
mov
inc
daa
test
adcl
push
mov
and
cmp
roll
fistpl
pop
mov
mov
mov
xchg
ss
mov
mov
add
test
cmp
ljmp
ss
add
xchg
pop
adc
or
ss
arpl
outsl
sbb
imul
fbstp
cld
mov
pop
cmp
aaa
clc
ret
pop
mov
cld
dec
inc
inc
sub
and
sub
add
mov
outsl
push
inc
cld
pop
cmp
addr16
cld
mov
or
fistl
inc
cmp
mov
jne
imul
add
mov
test
sub
add
insl
sub
mov
test
dec
add
test
inc
xchg
in
insl
adc
add
add
mov
inc
and
sbbl
scas
push
test
sub
arpl
aas
loope
mov
add
aam
add
jae
sbb
add
out
outsl
je
aaa
mov
mull
push
test
cmp
cld
popf
mov
jnp
les
or
mov
push
aaa
pop
mov
notl
cltd
pop
mov
insb
fbld
xchg
xchg
lock
xchg
pop
cmp
imul
loop
pop
js
jmp
sub
es
push
push
jne
stc
sbb
jg
push
push
jg
xor
dec
pusha
sbb
fiaddl
out
inc
fdivr
daa
push
push
clc
gs
inc
testl
daa
ljmp
mov
cmpsl
jno
cli
xor
cs
or
bound
xor
dec
dec
push
push
adc
jb
mov
cmp
or
cmpl
iret
fs
scas
cli
rorb
test
push
pop
das
jle
jle
in
fcomi
call
add
pop
call
std
pop
pop
xchg
mov
mov
dec
mov
pop
push
shlb
push
ret
mov
inc
mov
dec
xchg
jmp
loop
jno
inc
stos
ja
mov
jo
xchg
ret
lods
pop
mov
nop
and
stos
lahf
fs
cmp
js
mov
pop
cmpsl
aam
add
cmpsl
cmp
mov
nop
push
push
xchg
out
movsb
push
adc
fistl
sub
cmp
daa
loopne
pop
mov
outsl
sbb
xchg
popa
dec
adc
adc
or
mov
repz
and
in
xchg
pop
fcom
mov
aas
push
out
scas
lret
iret
sbb
lock
sbb
addr16
shl
ja
mov
cmp
add
push
push
push
rcll
mov
gs
cmp
inc
cmp
or
dec
xchg
inc
add
push
pop
cmc
xchg
inc
jg
aaa
cmp
push
dec
or
or
xor
gs
sbbl
mov
popa
xchg
ret
xor
xchg
xor
adc
mov
pushf
and
cmp
add
pop
shlb
stc
adc
jge
pop
add
mov
mov
pop
into
dec
icebp
pop
pop
mov
ret
ret
xchg
test
xchg
pop
add
sbb
pop
mov
mov
add
test
rcll
mov
loop
mov
mov
int
push
incb
add
dec
loopne
sub
mov
push
lods
xor
add
test
out
mov
xor
jge
mov
jb
dec
sbb
sti
dec
mov
aad
outsl
cli
std
dec
out
in
std
int
push
ffree
out
dec
test
pop
mov
roll
mov
or
out
loopne
sub
in
fisubrs
cmc
or
arpl
xchg
ja
adc
add
mov
pop
mov
rcll
or
mov
inc
xchg
dec
pop
mov
lods
rclb
mov
mov
jecxz
sub
pop
sub
fistps
jmp
xchg
lods
and
popa
mov
daa
insb
jnp
in
sub
icebp
cs
xchg
incb
mov
dec
in
add
dec
rorb
pop
mov
test
popa
dec
mov
imul
dec
pop
repnz
out
dec
xor
dec
inc
fnsave
inc
cmp
imull
jno
ficoml
lock
sub
outsl
mov
insl
xor
sti
pop
stos
out
or
add
ss
sub
sbb
mov
cmpl
jo
call
jl
jge
mov
jae
scas
cwtl
negl
jo
xor
jbe
cli
adc
icebp
push
stc
jle
idivl
pop
pop
add
mov
push
mov
mov
xor
cmp
icebp
mov
cmp
fildl
jnp
add
addr16
les
insl
xor
testb
dec
pop
add
iret
sahf
or
xorl
pop
ljmp
daa
jnp
push
jne
aaa
shrl
fs
jle
pop
popf
push
cs
sub
pop
jle
sbb
lock
mov
sub
stos
fs
mov
inc
stos
sbb
and
insl
pop
pop
outsb
mov
xor
icebp
sub
cmp
mov
add
jecxz
mov
adc
push
pop
push
push
addr16
pop
mov
rcll
and
cmp
std
or
dec
jecxz
jge
icebp
das
jle
sub
jbe
pop
dec
push
sbb
lret
aad
dec
jmp
dec
pop
movsl
mulb
fcompl
or
les
or
std
or
pop
pop
pop
push
jl
push
jge
in
ja
scas
cld
dec
pusha
subb
addr16
and
add
outsl
add
push
sarb
leave
aad
fwait
sbb
dec
ffreep
push
add
data16
jecxz
sub
in
ret
jge
push
jo
in
bnd
incb
xchg
clc
frstor
xchg
cli
jne
aas
pop
sub
and
pop
add
out
in
inc
and
pop
mov
ret
add
pop
xlat
or
pop
sub
fs
inc
mov
and
push
daa
stos
pop
sbb
pop
addl
insl
jno
jno
addl
xor
pop
and
popf
pop
insl
sbb
jns
rdpmc
jnp
fdivp
dec
incl
lods
ret
sarb
pop
xor
gs
std
adc
push
stos
pop
mov
dec
loop
cmp
test
add
pusha
fiadds
je
sub
push
add
pop
js
jne
cmp
dec
out
sbb
in
pop
popf
std
pushf
aad
jmp
jae
xorl
dec
jmp
and
movsl
sbb
dec
fiadds
std
adc
jmp
pop
pop
arpl
scas
loopne
or
decb
mov
jmp
push
push
mov
inc
int
aad
mov
jne
jl
aaa
subb
insl
or
cmp
in
sbb
imul
test
pop
cmpl
sub
out
repz
sbb
mov
popf
ja
loopne
sub
aas
movsl
mov
out
repz
jge
testb
dec
inc
or
sti
or
push
stc
jp
decl
or
jnp
lods
outsl
xchg
mov
sub
push
push
pop
stc
fwait
js
mov
jo
popa
mov
out
pusha
mov
mov
mov
das
dec
dec
jecxz
and
push
cmp
adc
pop
or
mov
in
ja
clc
dec
std
sub
pop
addl
ss
add
push
add
cmp
pop
jo
add
and
mov
repnz
or
xchg
xor
or
push
stos
in
sub
lods
add
mov
jle
mov
sbb
imul
inc
call
outsb
mov
stc
pop
xchg
popa
or
mov
movsl
mov
mov
push
or
mov
jge
cld
xchg
pop
jnp
sbb
inc
push
lret
pop
xor
jne
jnp
fdiv
lahf
incb
movsl
cmpsb
fstl
mov
adcb
das
icebp
bound
xor
aaa
sub
sbbl
int
jns
mov
jbe,pt
sbb
adc
push
mov
out
lahf
dec
fimuls
insb
cltd
out
jg
cli
add
cmc
push
lods
mov
mov
dec
insb
xor
and
mov
sub
jo
incb
inc
or
clc
push
lock
mov
ljmp
loopne
and
fdivl
out
fcomps
cmp
sbb
loopne
xchg
or
ret
jle
jae
mov
sub
sub
inc
pop
mov
push
fsubrl
lds
iret
xor
lds
int3
int
sub
xor
xor
inc
pop
mov
inc
int
pop
mov
test
mov
cli
and
std
push
push
push
loopne
push
loop
and
jg
lock
pop
bound
or
ret
test
push
add
in
and
jle
pop
lea
jecxz
and
push
xor
loopne
cmp
outsl
and
popf
ss
aaa
js
aam
mov
xor
insb
add
xchg
fnop
gs
sub
dec
aaa
mov
mov
imull
pop
loopne
decb
in
and
push
sbb
cmpsl
std
add
mov
pushf
pushf
hlt
jg
push
rcrb
mov
mov
sbb
negl
cmpsl
repz
pop
in
cmpsb
movsl
xor
sbb
pop
lock
pop
mov
insl
jns
sbb
in
mov
lock
or
icebp
movsb
pop
popf
gs
mov
mov
mull
gs
stos
jno
cmc
movsb
add
mov
loop
cmp
cmpb
jae
addr16
xchg
xor
movsb
popf
mov
xchg
leave
out
mov
sbb
test
stos
std
sub
pop
xor
sahf
mul
mov
addr16
sbb
add
adc
mov
jmp
jns
ficoms
stc
xor
gs
scas
stc
imul
xchg
jecxz
shll
out
jno
jp
cmpsl
iret
das
je
mov
mov
dec
imul
push
dec
add
cs
rol
lods
out
test
adc
dec
jbe
outsl
xchg
jbe
cmp
mov
mov
cwtl
stc
cmp
add
or
dec
movsl
or
dec
and
shl
add
xor
mov
or
lret
shll
aad
shll
js
mov
mov
mov
pop
outsl
or
jmp
icebp
push
lods
out
nop
or
mov
out
addr16
pop
int
dec
pop
or
rcl
inc
cmpsl
xchg
pop
aad
sbb
shrl
add
std
mov
mov
testb
lea
pop
clc
add
mov
dec
movsl
stc
add
cmp
aas
add
inc
and
cmc
stos
mov
xlat
mov
push
add
std
mov
sti
addr16
push
jecxz
jae
mov
push
dec
adc
aaa
xor
mov
int3
inc
xor
das
aam
xchg
or
push
push
mov
cs
pop
jg
xchg
lods
jmp
cltd
aad
dec
jle
add
xchg
jle
outsl
xchg
cld
mov
or
add
mov
dec
sbb
int
and
gs
test
cmpsb
jns
loop
and
mov
xlat
jo
inc
imull
int
adc
jle
rcrb
call
les
and
push
xchg
repz
pop
inc
or
cmpsl
or
mov
or
jae
daa
cltd
sbb
mov
cmp
mov
fsin
push
cmp
dec
xor
mov
inc
int
into
add
adc
push
pop
cmp
mulb
jnp
push
in
mov
xchg
clc
and
movsl
out
xchg
lret
xor
mov
cmc
pop
mov
mov
stc
call
scas
and
dec
in
push
fiadds
and
pop
roll
lods
iret
jno
sub
movsl
jnp
pop
adc
xchg
cmp
mov
adc
or
push
pop
jb
mov
push
loop
inc
lea
mov
mov
outsl
add
in
sbb
outsb
dec
jge
push
cmp
dec
sub
cmpl
pop
add
insb
jne
gs
sbb
aas
aas
mov
sub
pop
stc
inc
es
xchg
lret
pop
daa
dec
pop
cli
add
or
add
pop
icebp
push
fldl
cld
inc
or
mov
jnp
divb
nop
js
mov
mov
mov
arpl
roll
xor
arpl
pop
or
mov
inc
mov
arpl
or
roll
aas
inc
mov
pop
cld
dec
xor
ljmp
adc
push
push
xchg
mov
xlat
lods
mov
in
loop
xchg
sbb
lea
ret
test
mov
fsubl
cmp
cmp
pop
xchg
mov
incb
ss
jle
in
mov
icebp
fisttps
loope
shl
inc
out
xorl
decl
mov
jl
mov
jmp
dec
dec
dec
pop
jg
inc
out
ss
aad
addr16
or
fwait
dec
push
mov
testb
dec
mov
cmp
mov
xlat
cmc
dec
test
js
dec
aas
leave
and
fdiv
repz
faddl
pusha
push
outsl
sbbb
mov
mov
aaa
lods
outsb
clc
pop
jge
xorb
push
ljmp
dec
mov
xor
mov
sbb
push
push
adc
in
sbb
imul
pop
adc
js
cmpl
mov
js
mov
mov
cwtl
and
inc
and
les
cwtl
pop
mov
loopne
jne
mov
lods
pop
call
mov
and
jg
xchg
push
cmp
and
je
mov
rorb
xor
inc
pusha
sbb
aad
cmp
push
mov
insb
adc
loopne
lock
loop
loop
xor
jb
xchg
jno
rcr
or
fsubrl
in
stc
aaa
cmp
shrb
pop
rcll
fildl
pop
jl
xlat
ljmp
pop
mov
push
pop
roll
mov
or
sub
dec
imul
pop
mov
loopne
sbb
mov
jbe
cmpb
pop
cmp
call
add
add
pushf
push
mul
call
lock
sahf
repz
orl
jne
xchg
sbb
dec
jo
xlat
pop
adc
rcrb
cmc
mov
cmp
data16
ret
in
sti
jmp
push
ss
or
xchg
lock
jb
pop
inc
call
inc
mov
pop
cmp
out
hlt
sarl
cmp
cld
pusha
hlt
mov
sbb
sti
int
sub
or
inc
sbb
lods
sbb
std
insl
or
ret
repz
mov
adc
mov
pusha
iret
mov
adc
jbe
adc
pop
sub
jb
xor
loopne
sub
mov
sub
mov
sub
mov
sub
mov
xchg
sbb
in
jae
sbb
mov
mov
pop
adcb
xchg
mov
aas
push
dec
mov
das
in
sbb
cs
pop
mov
hlt
and
mov
sbb
out
cli
btl
sarl
push
add
in
clc
sarb
push
cmc
cli
out
mov
adc
adc
pop
xor
jnp
adcl
inc
and
leave
enter
xchg
mov
adc
cs
in
fs
and
lcall
cli
shlb
cmpsl
div
movsb
xchg
or
jb
add
mov
pop
divb
mov
ret
sahf
xor
add
push
add
xor
insb
jle
inc
hlt
mov
mov
dec
push
daa
push
pop
pop
mov
or
mov
sub
push
mov
adcl
enter
ljmpw
inc
add
sub
sub
xorl
loop
das
jne
cli
repz
push
scas
cmp
jl
lock
cmc
pop
imul
test
ja
xor
cld
dec
divb
add
sarl
loopne
aas
push
xor
xor
stc
push
das
mov
jg
push
stc
rorb
jnp
mov
jg
adcb
xlat
mov
xchg
test
outsl
in
in
dec
orl
cmc
cmp
add
jne
xor
decl
ja
pop
adcl
mov
push
pop
mov
mov
and
jp
idiv
ret
cld
jb
jge
outsl
push
mov
out
test
jo
xlat
outsb
inc
movsl
fbstp
push
mov
push
clc
push
std
jne
divl
jl
mov
sbb
imull
and
mov
cli
aam
jle
cmp
and
sub
clc
pop
cli
stc
inc
cmp
clc
std
ret
lahf
sti
pop
insl
mov
lea
or
add
inc
fsubp
cmp
cmp
leave
and
add
cmp
nop
dec
dec
push
das
daa
aas
cmp
inc
push
pop
sub
add
inc
cs
dec
outsl
jg
in
sub
adc
dec
std
adc
sub
std
clc
test
fidivl
aad
add
sbbl
mov
pop
loopne
cmp
xchg
dec
pusha
inc
test
jnp
mov
add
adc
sti
xor
decb
ljmp
mov
mov
jg
push
add
inc
lret
push
adc
cs
addr16
lahf
cld
jnp
dec
int
outsl
sbb
sti
lds
mov
sarl
jb
aaa
loopne
dec
jge
cmc
xor
js
fcompl
cld
jecxz
adc
shrb
inc
stc
movsl
dec
ljmp
and
pop
mov
cmp
in
push
xor
mov
out
cmp
jecxz
xor
cli
cmp
inc
jbe
arpl
pushf
pushf
cmp
jecxz
and
scas
insb
cmp
ret
jae
dec
xchg
out
push
in
adc
out
push
cmpsb
fnsave
xchg
inc
sahf
xchg
add
fwait
dec
adc
fisubs
divl
mov
subl
mov
jle
fdivr
lds
std
adc
rcrl
lahf
and
jnp
out
scas
out
jbe
ja
add
xchg
gs
xchg
or
sbb
add
bound
mov
movsl
notb
or
test
xchg
pop
adc
dec
xor
sbb
add
jnp
xor
jp
pop
mov
dec
lock
xchg
add
dec
or
sbbl
inc
add
jg
push
inc
inc
in
adc
jl
mov
lahf
adc
aas
pop
lret
fs
rolb
mov
dec
inc
adc
jmp
adc
out
mov
mov
cmpl
je
filds
jmp
dec
addr16
cli
and
push
inc
fwait
loopne
aam
mov
imul
sbb
pop
andb
sbb
pop
pop
jl
or
shrl
adc
inc
notl
out
js
xchg
loopne
mov
jb
sub
xchg
loopne
testl
stc
clc
addb
dec
mov
outsb
adc
adc
dec
xchg
enter
lds
xchg
mov
lea
movsl
clc
aas
add
add
js
push
in
inc
loopne
fwait
mov
leave
test
cli
push
or
int
jae
cmp
out
loopne
insl
sbb
test
cmp
je
das
xor
adc
imul
sti
inc
fsub
insb
stc
sbb
adc
push
test
or
xorl
pop
testl
jnp
addl
movsl
hlt
repnz
adc
mov
adc
adc
or
adc
aaa
hlt
lret
inc
cmp
pmulhw
loop
dec
rsm
dec
cmp
clc
fsubr
stos
into
test
push
cs
pushf
out
outsl
cmp
jp
fabs
add
jb
loop
insl
sbb
cmp
mov
jg
and
sbbb
out
add
lock
push
and
aad
cld
or
cmp
mov
or
dec
jl
repnz
ja
sbb
imul
pop
jne
add
and
roll
xchg
inc
cld
cmpb
repnz
mov
std
jp
adc
addr16
and
pusha
jmp
in
add
fwait
arpl
daa
xchg
mov
push
push
aaa
dec
xchg
pop
jo
mov
sub
aad
cltd
lcall
adc
xchg
cmp
push
mov
fidivl
add
pop
dec
not
push
in
sbbb
movsl
adc
ljmp
pop
mov
push
mov
jno
das
lds
mov
and
push
imul
std
in
or
testb
sbb
cmp
das
jae
push
mov
rcrl
and
notl
xchg
push
call
xlat
mov
or
orl
test
inc
cmp
push
adc
sti
xor
or
std
pop
mov
push
pop
xor
aad
divl
xor
sti
jg
std
ret
sub
insl
ja
xchg
push
test
push
outsl
sbb
test
sbb
js
sti
in
or
in
or
das
vorpd
push
pop
out
or
call
push
pop
orl
or
movsl
jg
xchg
push
fs
aaa
sbb
mov
sbb
mov
sub
pop
mov
jns
xor
test
pop
test
xor
bound
sbb
mov
mov
stc
ja
rolb
mov
mov
ret
jmp
lds
ret
loopne
mov
xchg
add
sub
lods
and
push
xchg
mov
lds
sub
adc
orb
push
push
adc
push
lret
mov
les
pop
jnp
or
pop
push
adc
dec
add
lret
das
aaa
cli
fbstp
lds
std
ja
or
mov
cli
inc
or
call
mov
add
mov
daa
std
dec
and
mov
dec
popa
mov
or
daa
dec
fidivrl
mov
pop
mov
and
pop
cli
jge
loop
or
out
jecxz
or
push
ljmp
repnz
xor
ljmp
test
dec
lds
pop
test
hlt
inc
loopne
or
pop
cmp
push
out
outsl
rclb
mov
adc
ret
cld
test
push
adc
mov
xchg
push
insl
jecxz
xchg
inc
or
lea
sbb
hlt
or
jecxz
or
lcall
test
inc
jle
add
xchg
xchg
cli
xor
sbb
mov
shr
jnp
cld
adc
or
adc
add
ljmp
mov
out
sar
and
cmp
test
lcall
rorl
push
cmp
add
fidivrl
xor
dec
sub
push
jno
pop
pop
addl
xchg
rolb
add
aaa
jg
cmp
or
push
js
add
inc
push
cmpl
mov
incl
push
dec
jge
inc
or
jb
inc
adc
mov
mov
inc
push
push
jns
push
gs
test
push
jne
call
das
adc
icebp
jmp
ds
aas
sub
xchg
test
mov
dec
mov
mov
add
xchg
sti
js
add
inc
jecxz
push
outsl
shll
mov
or
jp
sub
jmp
je
loopne
add
bound
add
mov
push
mov
cmc
ja
pop
incl
out
outsl
sub
push
and
xor
aaa
ss
jb
cmpsl
add
outsl
mov
adc
jae
fcmovnu
stos
or
lods
or
imul
pop
les
jmp
roll
mov
cmp
fcomi
ffreep
icebp
fs
or
mov
inc
aaa
mov
lea
data16
ret
lock
pop
outsl
add
or
jle
xchg
js
in
dec
add
std
pop
rclb
pusha
stos
hlt
inc
test
xor
pop
adc
leave
icebp
sbb
add
repnz
jmp
mov
mov
or
in
xchg
fs
push
nopl
push
cmp
push
push
fs
or
mov
add
xlat
pop
call
aas
imul
or
lret
aas
ret
add
mov
mov
out
in
add
mov
aas
bound
mov
bound
xor
fistps
pop
sti
aas
test
and
repnz
xchg
add
clc
sbb
mov
addr16
fdivs
mov
in
add
insl
sti
pop
mov
push
pop
and
xor
pop
aam
or
test
scas
loope
pop
sbb
and
inc
add
sub
out
in
movsl
mov
dec
addr16
into
pop
in
aas
lret
out
std
jnp
mov
loope
repnz
sbb
pop
and
int
imul
hlt
in
add
sub
loopne
bound
xor
pop
out
mov
out
aas
mov
mov
mov
lcall
or
lods
in
add
push
jne
jmp
jae
mov
xor
pop
idivb
popa
imul
movsb
addr16
lods
mov
outsl
outsb
add
inc
add
mov
stos
je
add
in
cld
sti
dec
mov
mov
std
insb
arpl
ret
pop
repz
jle
popa
aas
push
incl
or
int
pusha
negl
icebp
sti
or
mov
xor
push
sub
jg
arpl
push
ret
add
sbb
insl
sarl
gs
call
cmp
xchg
adc
push
cmp
jmp
hlt
arpl
mov
outsl
push
fsubs
fldl
mov
mov
sti
lret
pop
inc
mov
in
repnz
arpl
outsb
mov
call
inc
add
jp
and
jae
or
mov
sbb
repnz
pushf
out
add
ret
lea
or
pop
out
subl
in
mov
fnsetpm(287
jnp
sbb
cld
insl
mov
push
lock
std
xor
rcr
pop
leave
xchg
mul
shlb
mov
add
in
shl
addr16
cmc
cltd
cli
xor
lret
aaa
hlt
jbe
push
push
fmull
lods
jns
add
test
pop
jmp
loope
cmp
mov
add
ds
in
std
ja
lret
outsl
mull
push
movsb
sub
jmp
or
and
fmuls
incb
pusha
xor
pop
and
cmc
dec
xchg
adc
cli
push
pop
popa
add
xlat
cmp
xchg
les
addr16
mov
cmc
sub
fs
lock
pop
add
sbb
pop
aaa
das
fs
jge
mov
test
dec
js
pop
and
jmp
mov
loope
sbb
jmp
fsubp
and
gs
add
fstpl
insb
add
aas
sti
sahf
insl
mov
cmc
dec
cld
and
mov
iret
cs
test
hlt
data16
add
mov
call
pop
aas
push
std
xor
xor
pop
cmp
jmp
mov
aad
dec
sarl
jge
loopne
pop
subb
xchg
lret
jle
mov
outsl
rorb
mov
sbb
add
cmpl
add
adc
mov
or
push
clc
pop
pop
pop
xor
mov
mov
repnz
call
clc
pop
mov
pop
add
sbb
inc
adc
inc
sbb
loop
into
in
outsl
adc
fisttpl
in
std
inc
xchg
push
push
lcall
mov
push
dec
adc
sbb
ljmp
sbb
rclb
dec
sbb
aas
adc
inc
pop
sub
jmp
inc
pop
rcr
or
push
sub
pop
imul
xor
in
sbb
pop
in
inc
xchg
inc
push
mov
lret
jmp
or
sti
adc
pop
pop
std
push
movsl
push
lahf
dec
push
dec
add
into
or
addr16
inc
xorps
inc
mov
or
cmpl
popf
fsub
mov
je
mov
and
pop
or
mov
push
mov
push
mov
sti
xor
stc
adc
loope
mull
adcl
sti
jg
rol
call
sarl
or
out
orb
outsl
xor
inc
divl
out
xor
cmp
push
cmp
push
jne
and
arpl
mov
sbb
leave
out
jge
xor
aad
loope
or
fwait
test
loope
pushl
test
inc
jo
mov
pop
jnp
add
fcomps
mov
pop
sarb
cli
inc
sbb
jno
cmp
add
add
add
dec
push
mov
pushl
push
inc
ds
xchg
addb
ds
xchg
inc
jle
ds
add
adc
leave
in
fisttps
bound
dec
push
mov
out
mov
ret
insl
mov
xchg
std
rol
adcb
lods
and
push
xor
out
shlb
add
inc
pusha
or
mov
call
pop
inc
inc
inc
cmp
sbb
or
inc
leave
xchg
andb
mov
dec
add
outsb
rclb
xchg
stc
out
adc
aaa
mov
insl
mov
fsin
call
or
sbb
inc
pop
loope
cltd
jae
mov
mov
in
xor
add
push
lahf
out
mov
aaa
push
sub
out
or
insb
insl
bound
pop
mov
and
test
mov
mov
test
xchg
jne
jno
outsb
and
dec
dec
adcl
push
dec
aam
pushl
jle
or
dec
adc
push
notl
sub
mov
in
cli
or
mov
sub
push
sub
stc
dec
jne
test
jmp
lret
pop
add
ljmp
hlt
inc
add
adc
int
adc
adc
das
mov
pop
xchg
sub
mov
lock
dec
jl
jmp
push
mov
outsl
add
out
cmpsl
fldt
and
pop
sub
or
outsl
and
loopne
arpl
stc
push
test
gs
fs
sbb
xchg
sbb
mov
enter
push
popf
fsubr
sub
mov
jmp
push
clc
push
jb
jnp
or
push
sub
cmp
add
decl
cmp
push
gs
and
aaa
jnp
in
add
insl
add
test
dec
fstl
mov
push
mov
cmp
popf
fdiv
xor
xor
data16
aad
push
fdivrp
sub
ja
adc
stos
stc
xor
test
or
pop
add
jecxz
stc
xor
jecxz
lahf
addr16
out
fistpl
cwtl
loope
movsl
repz
jg
daa
adc
pushl
mov
mov
jl
mov
ljmp
icebp
test
mov
stos
mov
adc
fisubrs
ljmp
mov
fsubs
sbb
cli
mov
inc
cli
imul
pop
call
arpl
rcrl
cmp
in
shr
mov
jg
mov
and
inc
sti
fldl
add
push
rcrl
dec
sub
addr16
dec
dec
dec
lods
mov
xchg
push
inc
xchg
xor
insb
outsl
or
adc
repz
icebp
mov
outsb
sub
sub
ss
push
fsubrl
test
pop
adcl
insb
pop
push
fs
mov
sbb
std
call
incb
imull
jns
fnstcw
add
das
add
insl
xor
inc
and
sahf
add
jecxz
fistpl
mov
mov
or
mov
dec
pop
xchg
add
hlt
push
sbb
jnp
sti
cs
out
cs
gs
push
mov
test
pop
jb
xchg
sbb
sti
inc
sahf
pop
mov
loopne
js
inc
inc
fcmovbe
int3
outsb
and
dec
aaa
cmp
sbb
push
mov
and
and
pusha
push
dec
dec
imul
xor
dec
mov
push
pop
mov
ljmp
push
and
mov
enter
or
leave
enter
lret
pop
adc
inc
mov
add
jg
add
add
stc
xor
sbb
cmpl
lret
dec
mov
jmp
jge
cli
jno
push
cmpsb
popl
jne
or
push
mov
or
fs
fistpll
jmp
loopne
mov
out
roll
test
ja
sub
or
add
or
testl
or
out
mov
xchg
push
dec
rclb
lea
test
fbstp
fwait
int3
or
xor
std
popf
sbb
or
fs
jnp
enter
inc
mov
icebp
jmp
push
ljmp
xor
shrb
add
sub
mov
jle
mov
or
or
into
inc
and
out
xchg
fsubl
movsl
pop
and
mov
pop
clc
sbb
daa
mov
adcl
mov
pop
push
mov
jb
jge
ret
outsl
clc
dec
cld
jmp
and
cld
jae
xor
jo
popf
insl
insb
add
push
dec
cli
iret
xchg
outsl
add
push
dec
loop
jns
mov
std
dec
push
push
dec
loopne
rorl
ja
pop
ja
jge
push
dec
adc
sti
push
inc
pop
xor
add
mulb
and
push
out
adc
mov
or
pop
daa
pushf
lret
insl
push
ja
daa
add
std
iret
andl
or
sti
aad
pop
lcall
or
sub
fdivrl
xchg
ljmp
cmpb
mov
imul
sti
jno
mov
pop
cmp
mov
jecxz
shll
imul
je
mov
jecxz
xor
daa
repnz
out
shll
sti
enter
in
jecxz
loop
add
imul
ds
in
add
mov
lret
daa
xchg
popa
loopne
jmp
pusha
xor
mov
sub
push
xchg
adc
pusha
dec
in
mov
jae
andl
dec
shll
stos
popa
les
out
add
sub
bound
addr16
inc
daa
xor
in
cmc
arpl
out
pop
cmpsb
imul
lcall
push
inc
xor
jnp
imul
bound
or
cs
push
push
out
ljmp
cmpsb
lretw
in
mov
cmp
cs
fistl
dec
insl
cmp
ss
xor
addr16
shll
aam
shll
in
arpl
lcall
mov
ret
movsl
fwait
mov
sahf
insl
xor
arpl
pop
sub
mov
mov
les
jg
imul
or
js
lcall
xor
xor
fldt
imul
shll
pop
pushl
outsb
std
orl
pop
inc
stc
sub
fwait
test
cld
pop
mov
jmp
ljmp
ds
pop
scas
cmp
inc
pop
xor
pop
pop
orb
xorl
add
stos
test
inc
push
enter
bound
xchg
add
andl
or
dec
pop
subb
pop
xor
data16
adc
int
inc
mov
shr
nop
cmp
push
int3
ret
mov
jbe
mov
insb
push
movsb
pop
add
dec
pusha
inc
and
out
lret
in
ror
popa
adc
addr16
gs
dec
mov
xchg
es
dec
push
imul
adc
pop
outsb
iret
dec
fs
adc
andl
xor
jb
pop
ret
icebp
shll
arpl
bound
inc
daa
aaa
shll
sti
out
dec
mov
dec
enter
mov
xor
jb
push
inc
dec
inc
or
xor
push
gs
cmp
arpl
mov
stos
ljmp
imul
lcall
insl
adc
imul
xor
push
imul
imul
insl
lcall
fcmove
xor
xlat
xor
mov
mov
fwait
mov
dec
fcoms
push
arpl
int
mov
bound
mov
mov
cmpsb
mov
pop
adc
jge
imul
shll
mov
pop
addr16
sbbl
dec
imul
inc
imul
dec
stos
bound
insb
push
gs
jno,pt
pusha
insb
pop
dec
outsb
pop
pop
arpl
mov
jno
bound
xchg
insl
pop
add
dec
outsb
imul
outsl
jg
mov
insb
pop
lods
add
insb
dec
insl
or
pop
arpl
imul
cld
inc
outsb
pop
arpl
outsl
pop
insb
je
clc
ds
outsl
hlt
imul
fs
std
outsb
inc
or
ljmp
inc
outsl
inc
xchg
add
fs
pop
push
insl
push
pop
mov
neg
lret
xchg
std
push
jno
jae
ds
mov
fistpl
outsl
bound
fs
push
stc
inc
inc
pop
pop
imul
lock
ja
cli
aaa
ja
inc
pushw
clc
add
addr16
fisubrs
gs
jae
push
addr16
movsb
popa
cmp
xor
dec
je
fucomp
jb
sbb
outsb
jo
cmp
addb
pop
fs
outsb
push
outsl
mov
pushaw
dec
pusha
imul
fs
popa
fstpt
add
push
roll
inc
andl
dec
addr16
imul
popa
insb
jno
aas
dec
dec
pop
insl
outsl
inc
jo
jne
dec
inc
aas
inc
inc
jae
push
pop
mov
jae
dec
pop
insb
arpl
into
div
xchg
pop
outsl
push
arpl
jno
cmp
fimuls
mov
jne
cmp
imul
jno
insl
fisttpl
out
daa
addr16
aas
insb
cltd
mov
pop
imul
dec
pop
imul
pop
dec
sti
dec
bound
aaa
insl
xchg
insl
pop
and
jb
cli
dec
insl
pop
incb
ja
or
dec
fs
popa
addr16
iret
jbe
outsb
insl
push
roll
cmp
pop
imul
frstor
cmp
push
mov
jb
pop
jae
mov
dec
dec
inc
inc
xor
fs
loope
pop
clc
popa
pop
insb
jae
ja
mov
jmp
insb
popa
sub
arpl
mov
ret
and
dec
mov
jb
mov
lods
sarb
xchg
imul
aas
insb
aad
pop
ds
inc
bnd
test
push
push
push
popa
imul
add
imul
inc
sub
jmp
sub
arpl
data16
mov
or
daa
outsl
fnsave
adc
cmp
aas
push
pop
adc
fs
insb
pop
clc
subl
sarl
insb
imul
cmp
icebp
jo
pop
outsl
jg
std
jecxz
mov
pop
jnp
pop
dec
inc
inc
rorl
inc
inc
xchg
sti
std
imul
lods
popa
jo
fbld
insl
ja
decl
mov
xchg
dec
divl
push
jnp
cs
jo
pop
push
popa
push
inc
sbbb
inc
push
aas
test
aas
bound
pop
js
in
enter
jae
inc
pop
ljmp
fcmovnu
cs
jp
pop
addr16
inc
fstpt
cmp
xor
sub
jmp
xchg
xchg
jne
outsl
inc
es
pop
cwtl
dec
pop
and
fsts
xchg
adc
mov
push
addl
push
mov
flds
cmp
in
outsl
insb
cmp
out
mov
shll
jne
dec
aas
inc
dec
cmp
sbb
dec
inc
xor
push
imul
mov
dec
arpl
mov
insb
sbb
inc
popa
gs
outsb
fdivrl
pusha
inc
pop
bound
stc
fimuls
insl
loope
loopne
inc
adc
dec
push
das
push
jp
sbb
popf
cmp
inc
push
popa
imul
arpl
add
addr16
dec
outsl
pusha
punpckhbw
xor
outsl
pop
dec
inc
insl
pop
sub
push
pcmpeqb
sub
dec
lods
popa
insl
add
fiaddl
pop
imul
dec
outsl
shll
pop
inc
sti
pop
jmp
mov
outsb
popa
ljmp
lahf
sbb
inc
push
lcall
cmp
inc
stos
daa
jbe
jo
cmp
dec
inc
cmp
call
popf
cmp
jg
sarl
cli
or
cmp
cmp
push
pop
add
std
cmp
sub
mov
sub
xor
outsl
jg
test
cmp
pop
movsl
jno
insb
insl
pop
loope
negb
outsb
nop
imul
cmp
cmp
gs
mov
mov
cmp
add
or
pop
dec
jae
cmpsb
outsl
cmp
pop
sbb
fadd
jb
pop
daa
insb
shll
dec
cmp
sti
mov
push
bound
sub
sti
aas
aas
jno
pop
inc
push
insl
scas
push
in
scas
rol
arpl
xor
cmp
popa
cmp
ds
dec
inc
lret
fbstp
cmp
testb
push
dec
jae
test
aas
push
pop
dec
cmp
xor
lods
aam
je
gs
aas
cmp
add
in
in
jae
push
mov
push
arpl
movsl
in
in
jb
inc
mov
pusha
icebp
sahf
pop
sub
pop
jge
sub
and
test
push
cmp
push
sub
sub
pop
inc
fldcw
das
add
test
pop
ret
call
dec
pusha
jno
aaa
fidivs
pop
or
push
into
outsb
arpl
fcmovnu
imul
pop
repz
pop
out
sar
or
mov
cmp
pop
fwait
mov
mov
sbb
xor
or
insl
inc
stc
lahf
dec
cmp
dec
ds
sub
insb
cmp
mov
inc
inc
aas
push
push
ja
sti
jl
dec
pop
cmp
push
dec
inc
imul
mov
in
sbb
aas
cmp
incl
test
pusha
cmp
push
aas
inc
cmp
std
dec
dec
push
inc
dec
xor
cli
push
push
mov
sub
sub
inc
dec
cs
enter
cli
fistpl
xor
xchg
mov
js
push
xchg
ljmp
outsl
ja
stos
insl
add
sbb
cwtl
insb
ret
ficoms
sbb
fnstsw
jne
jp
dec
arpl
inc
out
aas
jb
mov
mov
cs
loope
pop
clc
mov
cmp
push
inc
cmp
faddl
mov
imul
or
xor
jle
add
addr16
lret
or
pop
insb
mov
pop
push
mov
insb
adc
pop
jo
lahf
rcll
cli
pop
pop
bound
or
stos
sub
add
or
pusha
xor
and
sbb
out
insl
lods
dec
mov
or
cli
dec
inc
push
inc
dec
inc
cs
sub
scas
stc
stc
adc
outsb
imul
and
outsl
insl
mov
and
pop
outsb
clc
mov
lahf
mov
shrl
into
cmc
ljmp
sbb
cld
adc
add
adc
in
fldcw
jae
add
push
mov
ss
icebp
push
movsb
adc
es
jbe
dec
insl
imul
mov
lcall
adc
adc
push
sub
mov
adc
mov
std
add
filds
std
std
cli
add
mov
pop
mov
inc
pop
adc
sti
movb
pop
cmp
ja
gs
mov
mov
pusha
sub
rclb
loop
stc
test
fs
imul
push
cmp
jbe
pop
imul
or
sbb
jbe
inc
addl
push
push
bound
push
insl
sub
out
sbb
sub
inc
popa
mov
arpl
add
insl
adc
xor
clc
inc
jo
xor
mov
js
shrl
js
mov
jb
mov
mov
pop
insl
pop
cmp
test
pop
mov
sub
inc
cmp
je
cmp
mov
fildl
je
inc
pop
sub
xchg
bound
add
jns
stos
arpl
pop
insl
fildl
push
movsl
andl
and
sti
sbb
pop
std
jne
fsubs
push
sub
jae
and
push
daa
xlat
mulb
ljmp
or
sti
movhps
or
dec
and
pop
cli
mov
mov
push
xor
adc
fsub
jmp
cwtl
mov
negb
loope
mov
lcall
pop
loop
fcmovu
idiv
cld
imull
mov
mov
adc
scas
stc
jg
out
out
ljmp
popa
ja
mov
mov
jns
in
mov
mov
repz
fwait
cmp
mov
cli
into
int
insl
pop
mov
repz
repnz
mov
sbb
into
aas
btsl
cmp
pop
jmp
loop
lea
adc
std
push
jnp
push
push
imul
rol
adc
mov
and
add
cld
enter
cmp
imull
xlat
xlat
fcmovu
or
insl
mov
out
adc
mov
ljmp
push
jns
jo
in
out
iret
rcl
mov
mov
dec
dec
in
and
iret
repnz
pushf
mov
xchg
loop
lods
std
jae
cmpl
in
out
push
dec
je
jg
popa
mov
fdiv
mov
mov
incl
loope
rcl
sub
mov
cmp
out
mov
das
and
mov
ja
jl
jns
mov
lods
ds
mov
dec
aas
je
add
mov
add
inc
sbb
and
mov
mov
sbb
roll
jle
mov
ror
inc
ljmp
fs
pushl
imul
out
repnz
repz
repnz
mov
jb
sti
mov
inc
mov
mov
inc
daa
pop
imul
popa
cmpsb
test
lea
lahf
sbb
sub
mov
mov
out
dec
std
jne
js
jns
js
mov
stc
mov
cs
fisttpll
lds
cmp
mov
daa
dec
fcomi
negb
fstpt
lds
sbb
cwtl
xlat
testl
mov
filds
xor
mov
adc
mov
mov
aas
rorl
loop
jecxz
mov
sbb
pop
fbstp
cmpsl
in
push
jb
stc
repz
idivb
push
ja
fcmovu
in
lahf
dec
sbb
loop
in
inc
sub
outsb
xchg
daa
mov
cmp
sub
cmp
mov
fbld
fstpt
into
dec
xlat
sub
das
les
fistps
ja
cli
loope
ja
xor
std
out
mov
xor
mov
in
mov
xor
loopne
das
pop
imul
mov
scas
stc
mov
jecxz
jmp
mov
in
lret
jecxz
and
sbb
adc
pop
mov
loopne
push
cli
in
repz
push
pop
mov
out
div
cli
jecxz
dec
fisubrl
push
mov
jno
int
and
out
vcvtpd2dq
lret
test
mov
lds
sbb
sar
and
dec
pop
cmp
mov
or
repnz
lahf
repz
add
out
xchg
idivl
jmp
cmp
sti
adc
pop
sub
divl
clc
cld
pop
dec
pop
stc
mov
fcmovu
mov
mov
push
jae
repz
add
stos
jns
adcl
out
ss
jge
sub
imul
icebp
ljmp
stc
sti
cli
fidivrl
aaa
fs
sub
mov
fnstenv
sbb
clc
stc
xchg
repz
popa
fistpll
daa
cmp
inc
ds
pop
xchg
negl
nop
arpl
mov
enter
ja
sahf
sub
frstor
mov
fisubs
cmp
adc
and
or
cmp
or
push
pop
sbb
aaa
pop
sbb
adc
jb
decl
fistpll
out
into
lret
dec
dec
inc
dec
dec
inc
adc
popa
mov
push
pop
cmp
scas
pop
push
nop
out
daa
xor
fildll
push
jecxz
popa
pop
cmp
pusha
xor
das
xor
jae
pop
cmp
sub
xor
jno
xor
push
xor
out
ljmp
call
mov
in
lret
out
fwait
popf
mov
int
lock
fstpl
mov
mov
shl
mov
mov
les
pop
es
jae
out
push
inc
enter
out
cld
ljmp
mov
into
iret
int3
repnz
les
scas
mov
mov
jg
ljmp
sar
int3
rol
mov
mov
outsl
jg
fcmovnb
mov
mov
cmpsl
adc
fadd
call
mov
fldl
inc
call
and
mov
shrb
pop
pusha
es
fbstp
inc
filds
mov
fcmovnu
aas
fdivr
jl
push
mov
mov
jg
jno
pop
je
arpl
sbb
insl
pusha
incw
inc
ds
cli
fs
mov
sub
push
lods
sbb
push
jno
sbb
inc
lea
pop
and
popa
fidivrs
or
and
jb
xor
or
cli
adc
pop
daa
sbb
dec
dec
lret
cld
jg
sub
pusha
outsl
jb
sbb
decb
pop
mov
and
or
bound
jno
inc
pop
insl
gs
mov
jmp
lret
je
insl
inc
dec
bound
insl
fs
sbb
testb
inc
push
or
adc
daa
imul
fwait
cli
xor
dec
insl
jns
pop
sub
sub
push
daa
pop
addr16
xchg
push
sbb
xor
cmc
dec
pop
push
pop
sub
and
or
imul
std
dec
inc
pusha
bound
imul
add
fldt
rcrl
inc
push
push
dec
daa
sub
or
pop
mov
mov
push
inc
xor
outsl
lods
aad
movsl
mov
and
cmp
pusha
divb
jne
outsl
sub
cmp
aad
pop
js
and
push
push
arpl
push
sub
inc
outsb
imul
push
xor
jp
gs
loop
arpl
daa
pop
inc
imul
fistpll
push
and
sub
sub
test
pop
sbb
pusha
pop
jo
xor
xor
ja
mov
push
jo
insb
sub
data16
jne
pop
daa
das
jg
push
outsl
sub
and
popf
outsl
pop
pushaw
cmp
test
push
dec
push
pusha
fs
addr16
sarl
idivl
sub
imul
and
adc
pop
xor
dec
fiaddl
ds
push
or
sub
xor
pop
sub
clc
testb
xor
jecxz
pop
sub
movsl
ja
sub
sub
insl
mov
push
shll
jo
and
fcmovnbe
xor
sbb
and
sbb
push
sbb
pop
mov
insb
cmp
popa
fwait
sub
fs
lret
cmpsl
cmp
mov
and
sub
xchg
push
pop
sub
cmp
outsb
and
aaa
ss
xchg
sub
pop
sub
push
pop
mov
mov
arpl
aaa
jle
sub
cmp
and
cs
and
cmp
fcmovnbe
sbb
subb
sbb
jb
cs
xor
push
dec
pop
outsb
pop
xor
sub
jb
sub
and
cmp
fcmovne
lods
sbb
sbb
xor
loop
jmp
je
pop
mov
mov
sub
push
sbb
mov
inc
outsb
imul
insl
aas
jmp
inc
pop
popa
arpl
dec
pop
mov
cld
pop
loope
push
fs
dec
cmp
mov
lea
push
push
jno
push
dec
and
jecxz
in
push
adc
dec
insb
lds
push
mov
push
cmp
jle
mov
cmp
popf
jle
addl
fcmovnbe
aaa
mov
push
xchg
pop
bound
out
sbb
incl
jae
dec
arpl
lahf
ja
push
gs
pop
insl
mov
inc
js
inc
fldcw
cmp
lods
jno
lock
arpl
jae
sbb
pop
pop
pusha
dec
jae
iret
cmp
pop
inc
xchg
rorb
ja
inc
adc
xlat
negb
dec
outsb
pusha
inc
arpl
jno
pusha
jae
pop
cmp
pop
outsl
ja
dec
sub
or
stos
jno
arpl
pop
xchg
lret
add
ret
insb
outsb
dec
jb
pop
pop
sbb
dec
cmp
cs
add
dec
or
test
pop
cmp
dec
cmp
push
arpl
push
lret
insb
imul
xor
sbb
sbb
xor
inc
inc
cmp
inc
inc
dec
dec
dec
dec
dec
rcrb
dec
dec
push
push
push
push
in
pop
pop
pop
ljmp
sub
and
das
add
jae
je
aas
cmp
cmp
popa
cmp
outsl
and
adc
outsl
adc
mov
jnp
pop
pop
cmp
jg
daa
inc
aas
cmp
insb
dec
jne
pop
pop
jno
arpl
pop
xor
adc
insb
addr16
insb
jae
pop
mov
aas
push
cmp
aas
push
inc
sub
repnz
cld
push
outsl
push
add
cmp
ds
push
pop
mov
dec
ja
das
jo
jae
jg
daa
inc
imul
sub
jne
ds
inc
push
adc
inc
and
pop
outsb
daa
pop
jb
adc
lcall
pusha
push
addr16
sub
jb
inc
inc
inc
dec
aas
sub
push
mov
jmp
outsl
cmp
add
dec
mov
test
pop
mov
inc
pop
imul
call
pop
add
cld
incb
decb
sub
xor
arpl
and
fisubrl
insb
inc
add
and
push
sub
pop
and
pop
and
and
xor
sub
xor
into
jne
inc
in
sub
imul
and
xchg
push
fidivs
jo
stos
sbb
loope
inc
jb
inc
pop
inc
jg
imul
inc
test
pop
pop
inc
imul
jmp
mov
clc
aas
cmp
icebp
dec
jno
inc
pop
inc
sub
lds
scas
pop
mov
mov
fstpl
sbb
xor
pop
scas
mov
imul
jne
jbe
dec
outsl
pop
adc
mov
jb
sub
xor
je
inc
jmp
xor
popa
sub
push
dec
add
add
cmp
imul
imul
sub
ljmp
push
xor
sub
cs
xor
xor
dec
cs
sub
xor
sub
cs
sub
xor
pushl
sub
aaa
das
ds
xor
jnp
xchg
lea
xor
das
lret
sub
xor
xor
das
icebp
das
ljmp
cmc
das
pop
sub
xor
pop
sub
sub
movsl
pushl
cltd
sub
int
in
xor
xor
inc
xor
pop
xor
outsl
lock
xor
sub
xor
arpl
xor
sub
ljmp
addr16
xor
sub
xor
xor
sub
sbb
in
mov
mov
xor
insl
add
xorl
mov
xor
jmp
add
adc
pop
das
mov
push
ss
das
jno
js
test
movsb
lods
das
mov
or
xor
xor
repz
push
pushl
daa
ss
ja
fwait
cmp
xor
cmp
cmp
xor
cmp
cmp
xor
jg
push
xchg
or
dec
cmp
test
nop
xor
mov
xor
cmp
xor
in
icebp
cmp
dec
cmp
xor
cmp
jle
dec
cmp
ss
cmp
xor
cmp
loop
dec
rcrl
jmp
inc
cmp
loop
jnp
repz
sub
pop
ljmp
cmp
xor
pop
cs
xor
jl
subb
cs
sub
ljmp
sub
cs
sub
xor
xor
push
das
or
loop
and
sub
sub
out
lea
lcall
xor
ljmp
das
fsubrl
xor
xor
mov
movsl
xor
pushl
mov
xor
cs
in
mov
mov
pushl
jmp
lock
xor
xor
cmp
xor
xor
scas
cmp
aas
cmp
xchg
cmp
jg
ljmp
cmp
xor
cmp
dec
cmp
cmp
push
cmp
jne
stos
cmp
pop
pushl
cmp
aaa
push
cmp
cmp
xor
jg
lcall
cmp
lock
jo
cmp
cmp
and
imul
sub
mov
jg
ljmp
push
das
imul
sub
das
fisubrs
stc
sub
adc
mov
dec
sub
pop
xor
test
std
sub
dec
sub
xor
jl
xchg
das
mov
js
xor
clc
lea
cmp
lahf
inc
sub
xor
cs
cmp
out
inc
push
xor
add
xor
sub
divl
xor
cmp
inc
xor
lock
arpl
shlb
loope
repz
xor
ss
and
decl
cmp
cmp
ss
pop
cmp
aaa
mov
sbb
pushl
cmp
cmp
xor
cmp
xor
cmp
cmp
pop
xor
jg
popa
cmp
cmp
cmp
xor
xor
cmp
das
sub
sbb
and
jmp
mov
cmp
mov
sarb
push
cmp
sbb
and
daa
incl
sub
jnp
nop
cmp
xor
iret
cmp
idiv
ljmp
xor
jl
test
mov
cmp
push
lcall
clc
push
ds
xchg
fwait
jne
jge
xorb
cmp
outsb
xchg
cmpsb
cmp
aaa
jmp
or
adc
jmp
inc
sub
ja
jl
sub
lcall
push
aad
jecxz
push
sub
xor
xor
cmp
dec
sub
jno
jbe
fwait
mov
ret
pop
out
sub
add
ret
xor
mov
insb
xor
ret
sub
xor
xor
decl
sbb
les
and
insb
xor
xor
sub
pop
xor
xor
aaa
inc
aaa
ret
ss
cmp
les
cmp
clc
das
push
insl
add
into
xor
adc
sbb
loopne
cmp
add
inc
cmp
jae
lods
cmp
outsl
cmp
cmp
addr16
cmp
xor
cmp
cmp
xor
fidivrs
out
adc
jp
cmp
dec
fisttpl
sti
fbstp
aam
out
xor
jge
pushl
and
sub
xor
cmp
dec
xor
pop
cmp
xchg
cmpb
cmp
lods
ss
in
cmp
add
push
mov
fbstp
cmp
call
push
xor
aaa
add
xor
cmp
cmp
cmp
mov
xor
cmp
xor
call
mov
aas
ss
pop
cmp
xchg
cmp
cld
test
ss
add
cmp
cld
in
xor
or
adc
adc
cmp
push
lcall
cmp
xor
mov
in
out
lock
cmp
cmp
and
sar
ljmp
cmp
ss
cmp
jo
jns
xchg
ss
pop
or
push
mov
lcall
ja
inc
mov
mov
push
sahf
add
fidivrs
sti
pop
lahf
and
mov
hlt
incl
pusha
sub
xor
add
xorb
push
push
xor
mov
das
add
imul
push
cmc
or
addl
and
outsl
in
ja
insl
jns
gs
pop
or
jae
popa
insb
insb
dec
outsl
out
jmp
je
outsl
outsb
add
dec
dec
and
inc
push
push
inc
push
inc
pop
dec
imul
pushl
push
imul
jne
jb
outsb
je
gs
xor
add
mov
pop
jae
inc
pop
insb
mov
jae
pop
imul
popa
sub
divb
je
outsl
push
outsl
popa
insl
sbb
arpl
mov
lahf
pop
cs
lahf
sub
imul
pop
sti
fs
xchg
jae
and
je
and
repnz
jns
je
jbe
adc
outsb
imul
lods
fisttpll
test
sub
outsl
fldcw
ss
andb
ja
jbe
adc
jns
or
in
mov
cltd
jbe
pop
jns
jo
adc
push
push
jb
aaa
xor
xor
pop
subl
sub
push
or
jbe
push
lret
push
aas
jb
outsb
cmp
pop
jae,pt
outsl
fs
insl
adc
push
jae
faddl
imul
inc
adc
popa
gs
jg
bound
sti
addr16
gs
popa
push
ds
pop
outsl
mov
mov
jns
push
push
adc
mov
fldln2
jns
dec
jmp
inc
fs
imul
dec
add
mov
xor
push
scas
sbb
inc
inc
mov
lods
mov
cmp
jb
adc
fcomp
jnp
inc
outsl
sub
cmp
push
or
pop
mov
dec
push
inc
push
int
jnp
fsubl
pcmpeqw
fnstenv
jae
xor
ds
jnp
sbb
outsb
adc
adc
in
add
xchg
out
ret
insl
jbe
inc
jmp
outsl
dec
push
mov
mov
fs
daa
push
sti
imul
jo
mov
insb
sti
imul
dec
insl
imul
xchg
pop
insl
jae
addr16
ja
pop
add
or
add
add
push
je
xor
imulb
xchg
pop
dec
dec
inc
dec
xor
out
int3
je
add
sbb
sbb
fst
push
out
adc
xor
xor
xor
adc
shrl
inc
ja
or
mov
add
mov
out
mov
fucomi
ja
outsl
add
aad
pop
sbb
out
dec
sbb
add
pop
lcall
ss
ja
pusha
inc
repz
and
sbb
rcr
sarb
pop
psubd
and
lock
mov
xchg
mov
add
or
pop
nop
roll
add
fdivr
outsb
stc
jmp
add
out
add
movsb
mov
insl
repnz
mov
sbb
lock
mull
fsubl
sub
mov
ljmp
and
ja
into
je
cmpl
or
jno
add
xor
adcl
std
rdtsc
xor
lds
add
in
and
jp
sub
cmpsb
inc
mov
cmp
xor
add
or
or
pop
inc
push
inc
dec
push
add
and
add
inc
xchg
test
in
stc
add
incl
rolb
nop
add
add
repnz
repnz
sub
cltd
shlb
jns
add
xor
pop
add
add
add
add
imul
lahf
stos
or
jg
sub
adc
jae
decb
std
mov
add
add
add
jbe
and
add
inc
cld
add
test
push
ljmp
fistps
jb
popa
je
inc
imul
outsb
addr16
jle
mov
gs
pushw
push
inc
insb
jne
push
adc
insl
and
je
ja
push
notb
jp
push
dec
push
add
pop
mov
insb
outsl
jae
dec
popa
outsb
fs
imul
mov
xor
inc
and
jo
pop
mov
sti
dec
popa
insl
inc
inc
or
jb
mov
test
push
jb
arpl
outsb
or
out
or
dec
fs
outsl
dec
fsubrl
cmp
jne
dec
outsb
outsw
adc
data16
dec
sbb
jb
xchg
cmp
mov
mov
adc
inc
mov
xchg
push
jns
and
gs
mov
insb
jnp
iret
std
sbb
mov
jb
dec
outsl
popa
imul
jb
jns
jns
fstpl
outsb
insl
inc
jle
je
adc
icebp
mov
add
outsl
outsl
insb
int3
and
mov
jo
outsl
je
push
inc
mov
jg
sub
xor
inc
fisubs
call
push
push
outsl
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
pop
mov
sti
mov
decl
or
and
or
jg
add
mov
jp
call
and
incl
sbb
pushl
or
repz
and
inc
sub
mov
push
push
jns
aaa
xor
jmp
call
adc
xchg
sbb
insl
xorl
das
mov
xor
xchg
lock
push
icebp
adc
add
mov
mov
push
test
jno
mov
add
push
push
dec
mov
fistpl
out
movsl
dec
mov
mov
adc
in
or
or
push
andl
shlb
or
out
mov
inc
das
mov
scas
repnz
adc
cmc
in
das
in
cs
data16
gs
jo
pop
push
ja
xor
pop
push
ud2
pop
je
loope
sbb
wbinvd
pop
insw
lahf
or
inc
mov
cmp
sbb
sbb
aaa
push
push
mov
add
ja
out
mov
arpl
outsb
or
jo
sbb
and
xchg
mov
pop
and
in
imul
xchg
ja
or
pop
cmp
jb
jbe
push
sbb
outsb
arpl
lods
jecxz
sub
js
inc
jb
dec
aam
outsl
frstor
jo
outsb
je
je
adc
and
pop
push
jae
pop
call
mov
mov
and
add
rcrb
xor
roll
jno
or
jne
xchg
mov
int3
inc
push
out
sbb
push
push
fs
jge
fidivrs
popa
addr16
lcall
mov
ja
mov
imul
into
movb
add
sbb
pop
ja
loopne
repz
sbb
add
add
adc
or
mov
in
insb
inc
add
add
sahf
sub
xor
sbb
add
fs
or
pop
push
aaa
mov
cmp
dec
inc
and
fisttpll
mov
mov
pop
push
sub
add
and
popa
push
and
jb
popa
je
mov
add
cs
lret
pop
out
fistl
or
mov
dec
lock
rclb
add
inc
add
add
add
add
add
inc
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
