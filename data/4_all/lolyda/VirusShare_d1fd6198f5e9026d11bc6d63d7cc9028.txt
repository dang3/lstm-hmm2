daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
lods
add
daa
ffreep
fdivl
add
jmp
mov
iret
jbe
add
add
xchg
or
repz
fcompl
pop
pop
std
mov
push
mov
mov
in
idivb
cmpsl
pushf
jl
or
outsl
fldt
lea
add
pop
jo
popa
out
mov
and
dec
call
cmpl
fisttpl
dec
test
je
mov
push
add
or
fcmovnu
mov
mulb
xor
xchg
shr
or
in
jne
mov
pop
shr
rol
or
jbe
mov
push
push
push
mov
xchg
push
sbb
xlat
or
or
push
cltd
adc
jo
or
std
outsl
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
mov
call
sub
add
repnz
sbb
test
push
test
jne
sbb
lea
shr
push
push
xor
fists
jle
sub
dec
cmp
or
cmpw
jne
lret
dec
jbe
call
cmp
sbb
neg
add
or
sub
push
or
insl
mov
and
push
mov
pop
or
mov
push
fs
sbb
jno
fbstp
push
add
pop
lock
xor
or
mov
test
jo
jl
jmp
or
jle
mov
adcb
cmc
mov
mov
mov
cmp
jne
test
mov
or
cmpsb
push
outsl
add
adc
sbb
imulb
jmp
sbb
sbb
xor
dec
out
inc
add
mov
jl
mov
sti
mov
adc
adc
add
stos
stos
stos
push
pop
or
mov
jne
inc
push
adc
mov
adc
and
clc
push
or
in
out
lods
cmp
les
mov
jle
mov
test
out
push
decl
into
mov
mov
or
shl
add
inc
mov
outsl
ss
not
sub
lea
mov
push
fdivs
jle
jmp
push
and
mov
movsb
dec
repz
pop
mov
push
push
lea
pop
push
pop
push
pop
mov
mov
fnsave
xor
inc
lret
js
add
xor
pushf
lds
cmp
xlat
adc
adc
stos
xchg
insb
ss
lds
cmpsb
lahf
adc
and
xor
arpl
shrl
mov
push
mov
dec
sub
cs
das
jnp
adc
xor
lea
bound
popa
xorl
sub
mov
xchg
dec
je
jne
adc
or
cmp
inc
sbb
add
mov
inc
fsubrs
lcall
adc
mov
nop
mov
int
pushf
push
pop
mov
push
xchg
arpl
push
imul
ficoml
push
sub
std
push
pop
ss
mov
ret
add
pop
mov
push
test
subl
dec
push
sbb
loope
dec
mov
or
stc
in
lea
scas
fucomi
or
stos
push
lret
or
push
push
dec
cmp
fdivrl
add
mov
cmp
leave
pusha
add
aaa
adc
fcompl
push
push
push
add
pop
std
enter
mov
push
xor
cmp
push
push
je
or
mov
ret
or
mov
mov
jbe
hlt
insb
ret
adc
mov
and
push
or
jo
mov
or
push
mov
push
push
ret
xor
cmp
xor
inc
inc
cmp
xor
enter
sub
add
sub
inc
lock
xchg
jge
adc
sbb
aad
cmp
mov
xor
add
inc
incl
lea
xchg
push
push
or
xor
push
push
gs
mov
mov
pop
push
bound
push
pop
push
adc
adc
insb
push
push
cwtl
loop
outsl
lret
xor
in
inc
popa
adc
xchg
mov
mov
shr
call
push
ficomps
sbb
push
pop
gs
add
push
xlat
dec
int
push
repz
sub
dec
sbb
lret
or
fs
int
ss
push
mov
jo
mov
mov
pop
add
lea
repnz
add
orb
push
push
stos
nop
push
mov
xchg
movsb
sbb
or
aad
sub
push
jg
pop
or
pop
dec
add
push
cmp
out
pushf
push
repnz
pop
add
stc
cmp
pop
xchg
mov
fs
pop
popa
fs
adc
dec
dec
pop
cmp
and
jns
ss
push
mov
shll
cmp
jl
adc
pop
mov
mov
or
push
in
rorl
in
lret
lret
push
add
packssdw
push
ret
pusha
add
pop
inc
mov
add
insb
jae
call
in
pop
adc
pop
mov
sti
cmp
mov
ret
mulb
dec
out
fistl
or
xor
and
and
popa
mov
add
push
push
push
sbb
sbb
jmp
push
push
jns
or
mov
pop
pop
or
xchg
xor
or
add
enter
pop
push
inc
leave
orl
enter
add
push
shr
xor
jle
push
dec
jns
add
das
push
outsl
or
xlat
push
dec
in
nop
add
mov
dec
jne
lahf
add
mov
leave
popf
je
enter
mov
outsb
mov
in
add
xor
xchg
movsb
adc
sub
or
testb
sbb
shl
lret
scas
adc
mov
sub
ja
mov
push
jb
daa
jle
imul
mov
mov
or
sub
pop
ret
adc
mov
addl
push
xor
push
push
fst
or
pop
dec
aaa
mov
in
repnz
jl
fsubs
xor
mov
mov
rorb
clc
lods
mov
jge
push
shl
gs
mov
cmpsb
mov
popf
ret
imul
push
push
mov
and
sub
arpl
adc
testb
fsubs
imul
test
mov
inc
inc
push
and
fiadds
mov
mov
add
cmp
mov
sbb
and
sarl
lods
in
or
fcomps
sbb
or
adc
roll
sbb
leave
lock
test
icebp
jl
sbb
gs
pop
pop
aad
pop
pop
push
or
push
out
clc
repnz
inc
orl
fwait
adc
popf
mov
and
sub
mov
sbb
int
test
sbb
jnp
fs
push
sbb
inc
or
mov
aad
mov
into
sub
rcll
mov
mov
scas
iret
or
adc
bound
push
nop
ljmp
add
push
outsl
push
xchg
nop
jp
inc
xchg
repz
add
cmp
jl
popa
jno
pop
sbb
sub
in
add
fwait
push
push
or
or
dec
out
rclb
insb
xchg
add
push
andb
aam
dec
int
addl
mov
mov
add
insl
cli
or
or
cmovge
sbb
and
shlb
das
out
adc
pop
xor
sbb
neg
je
aaa
sbb
mov
mov
scas
push
sbb
push
data16
mov
mov
lea
sti
ret
sbb
dec
jne
inc
add
out
add
xor
push
mov
inc
ret
and
mov
icebp
and
push
clc
add
iret
mov
pop
mov
and
xor
add
push
int3
dec
sub
mov
or
fildl
dec
ret
pop
sbb
push
adc
loop
out
cmpsl
int
inc
pusha
test
or
pop
xchg
lahf
adc
or
push
lahf
nop
add
or
das
lea
pop
loope
inc
data16
cmp
jne
loopne
rorl
and
ret
daa
push
mov
lock
add
add
jl
mov
gs
dec
push
sbb
adc
mov
pop
pop
adc
xor
repz
jmp
jbe
or
std
pusha
pusha
movl
ja
sub
add
mov
clc
arpl
faddl
in
inc
loop
fsubr
ud2
pop
add
int3
decl
mov
fadds
cwtl
sbb
mov
popa
xor
and
mov
stos
mov
aam
pusha
divl
data16
xor
push
daa
cmp
loope
and
js
mov
xchg
jp
lret
mov
imul
imul
in
push
rcrl
in
in
shlb
and
outsb
flds
dec
mov
add
xchg
dec
dec
std
push
and
mov
push
pop
cwtl
test
movsb
fsubrs
test
and
xor
pushf
push
dec
mov
mov
push
mov
inc
je
add
roll
in
fisubrs
lods
rcrl
inc
adc
add
add
xchg
jo
mov
rorb
dec
push
push
and
and
cwtl
adc
mov
fabs
fsub
js
inc
dec
push
lock
jle
lea
jne
cmpl
push
pop
addr16
sbb
sahf
adc
lods
jp
inc
je
sbb
mul
and
cmp
fiaddl
cmp
insb
neg
cwtl
je
inc
jmp
sbb
push
cmp
add
push
fdiv
lock
pop
mov
mov
cld
ja
rcll
sub
inc
cltd
sub
or
clc
out
sbb
jnp
fstps
xor
jnp
inc
mov
fisubs
sub
adc
or
inc
addr16
inc
pusha
ret
movups
mov
fwait
push
wrpkru
or
in
push
adc
rcl
nop
mov
mov
ljmp
or
rcrb
int
push
mov
or
cmc
jbe
aas
dec
lret
push
adc
jo
pop
push
add
test
sbb
and
push
add
roll
push
sbb
mov
jae
insb
test
cmp
adc
hlt
mov
and
repnz
enter
sahf
sub
sub
push
nop
inc
test
xchg
addr16
adcb
test
sbb
jns
je
adcl
insb
inc
lea
adc
mov
gs
adc
xor
leave
push
and
mov
repz
adc
xchg
or
dec
lock
xor
xchg
and
mov
mov
or
aas
adc
pusha
cli
dec
jo
punpcklbw
jl
mov
sbb
nop
andb
mov
push
push
add
mov
repnz
inc
cmpsb
sub
add
ficoml
pop
cmpsb
add
movsl
cli
sub
or
subb
pop
add
mov
mov
sbb
mov
icebp
pop
jns
adc
ljmp
pop
fcomps
and
jnp
adc
add
cmp
test
xchg
or
push
lcall
jl
add
jle
fcoms
xor
arpl
mov
int
sub
xchg
std
or
ret
cmp
stos
subb
or
dec
push
push
xor
sti
js
adc
mov
stos
lret
out
add
add
fcomip
push
xor
insb
xor
pushf
add
jle
jne
add
jne
jmp
invd
fs
ficoml
jge
jns
and
cmp
sub
sub
int
jne
js
or
jns
pop
jp
add
or
or
mov
mov
push
dec
insb
add
push
pop
out
push
push
int
sub
cmp
andb
or
fisubrs
sub
xor
push
mov
notl
mov
ss
fstps
je
call
dec
mov
shlb
or
add
xor
jae
daa
mov
sbb
add
adc
adc
std
jg
idiv
mov
mov
add
mov
cmp
jb
std
add
mov
pop
mov
ja
mov
mov
mov
addr16
pop
ret
pop
xor
leave
push
cmp
sbb
mov
sbb
push
test
and
fildl
push
add
inc
and
sbbb
nop
sub
je
add
stos
mov
add
jno
adc
loopne
and
fmuls
int3
enter
les
sarb
mov
test
mov
mov
mov
jl
mov
push
fs
pop
push
mov
inc
mov
xor
mov
mov
adc
mov
stc
jl
mov
cld
inc
les
inc
sahf
iret
out
mov
inc
xchg
inc
cwtl
inc
pushf
inc
inc
inc
inc
mov
inc
inc
inc
mov
mov
inc
shl
enter
mov
sbb
fwait
add
cld
sbb
hlt
clc
bound
xchg
adcb
pop
fsubl
adc
ljmp
or
and
push
clc
cli
mov
pop
add
ret
push
push
sub
jmp
int3
add
cmp
adc
loopne
inc
push
xchg
pop
cmpl
call
cld
iret
imul
mov
fwait
inc
orl
inc
iret
insl
xlat
adc
cmp
mov
or
dec
mov
outsl
inc
or
std
cmpl
push
jg
sti
ja
insb
push
add
mov
jg
inc
xchg
lea
or
xor
fistpl
or
mov
xor
in
and
adc
mov
divb
jne
cmpb
jne
inc
or
add
or
mov
and
jbe
aam
dec
movsb
fcmovnu
cli
repnz
inc
testb
mov
jmp
sub
subl
iret
jbe
jmp
push
pop
xor
stc
pop
mov
gs
imul
in
mov
mov
mov
lods
and
pop
mov
cs
lea
add
pop
out
sub
mov
or
and
inc
lahf
mov
adc
xor
xor
xlat
sub
repnz
mov
mov
xor
push
push
and
jne
mov
pop
test
xor
jo
xor
mov
inc
dec
jno
inc
gs
fwait
loop
dec
rclb
sub
mov
imulb
sahf
mov
add
loopne
test
enter
xchg
jbe
xchg
pop
xor
pop
add
nop
adc
mov
dec
fmulp
mov
lods
sahf
xchg
mov
int
flds
adc
inc
shll
adcb
sbb
inc
push
lcall
xchg
mov
imul
adc
xchg
lret
in
push
add
adc
pop
or
or
mov
cs
adc
mov
mov
jb
popf
or
das
add
in
imul
adc
nop
insl
mov
xor
adc
add
add
mov
dec
cmp
or
sub
pop
sub
mov
adc
aaa
inc
out
arpl
por
pop
shlb
xchg
pop
pop
xlat
mov
daa
push
addl
shll
das
rdtsc
lcall
fldt
pop
or
icebp
not
jne
roll
mulb
pop
mov
inc
add
mov
pop
push
xor
addr16
movsl
imul
mov
adc
fldcw
scas
inc
adcl
push
sar
or
jne
dec
out
mov
inc
aas
dec
lcall
add
insb
lcall
out
shll
mov
fimull
mov
xor
pusha
push
jmp
add
add
xlat
sub
cmpsb
sbb
dec
loopne
or
dec
int3
mov
rolb
mov
lds
cwtl
mov
mov
push
inc
loope
or
mov
inc
mov
cmp
add
adc
and
lcall
sub
scas
pop
pop
push
add
daa
cmp
sub
shll
sbb
add
add
shll
xor
repnz
out
xor
shll
aam
enter
push
mov
js
popa
and
add
mov
and
str
or
aaa
and
addr16
test
adc
das
data16
xor
xor
xlat
pop
pop
aas
push
add
inc
shll
sub
and
jbe
or
push
add
xor
xor
shll
call
xor
rcl
lret
mov
mov
add
add
jns
loopne
stc
pop
out
lahf
ds
add
and
mov
das
add
adc
sub
xor
rorb
cmpsb
dec
xchg
mov
mov
in
dec
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
sub
and
xor
inc
inc
dec
xor
cs
insb
add
push
inc
push
or
push
pusha
lret
ds
push
xor
dec
inc
push
sbb
push
push
jo
cld
sbb
dec
pop
mov
std
cld
cli
cmpl
push
idiv
std
mov
sti
or
clc
cmp
cld
sti
fisttps
or
or
mov
int3
sbb
lcall
dec
addr16
push
pop
insb
push
bound
imul
insl
sbb
sbb
pop
in
inc
decl
pop
gs
bound
inc
or
inc
jnp
jl
mov
and
xchg
shlb
xchg
ret
mov
daa
push
xchg
aas
sub
xchg
ret
adc
call
mov
sbb
setbe
rcrb
or
bound
inc
shlb
ljmp
dec
pop
bound
jns
inc
inc
cmpsb
lret
dec
adc
incl
sbb
incb
out
pop
mov
out
xor
cmpsl
imul
mov
cld
aas
add
jns
xchg
adc
cli
or
or
mov
fs
push
jg,pn
gs
and
mov
fwait
mov
ret
jnp
push
fdivr
adc
jae
ja
lahf
pop
push
sti
das
pop
rcrb
pop
sub
lcall
lock
pop
mov
cmp
arpl
pop
add
add
insl
dec
lcall
ss
arpl
pop
fstpt
push
xchg
daa
adc
push
cmp
or
incl
push
push
test
push
mov
push
dec
jecxz
push
cmp
jg
call
sbb
push
push
loopne
push
push
cmpb
or
ljmp
lcall
loopne
mov
push
out
dec
push
jg
pop
jb
jnp
or
pop
jle
mov
loopne
or
mov
pushf
mov
ljmp
lcall
push
insl
pop
jge
push
jno
jge
movq
push
stc
js
mov
dec
push
in
dec
push
test
rorb
cld
outsl
popf
clc
pop
fldt
or
in
addr16
mov
std
jg
movsl
mov
mov
mov
mov
fildll
out
add
push
out
sbb
rcll
std
in
jmp
movsb
hlt
idiv
cld
cld
push
push
imul
mov
add
out
mov
pusha
cmpsb
test
stc
adc
stc
cli
mov
addr16
ja
in
xchg
mov
push
test
fucomp
jg
std
sbb
add
mov
mov
std
fsin
into
xor
jg
add
mov
pop
mov
cld
xchg
jg
cld
stc
and
std
std
push
addr16
cs
mov
repnz
jg
sti
outsl
lcall
insb
mov
idiv
les
out
dec
mov
xor
clc
mov
imul
or
pusha
aaa
movsb
cld
or
pop
mov
sti
bound
gs
data16
mov
pop
mov
lahf
test
xchg
push
filds
pop
cwtl
pop
js
jmp
lahf
pushf
stos
daa
mov
inc
hlt
cmc
jg
xchg
clc
mov
dec
arpl
dec
push
std
adc
imul
les
mov
mov
add
or
daa
or
mov
fildl
push
mov
dec
dec
push
insl
insl
add
cmp
sti
pop
xor
dec
dec
gs
xchg
mov
add
pop
aad
cmp
hlt
mov
dec
out
push
int
aad
aas
testl
in
dec
cmpb
mov
mov
or
or
rclb
mov
ljmp
imul
or
cli
aas
dec
addl
mov
test
push
dec
mov
jae
insl
mov
ja
inc
loop
or
adc
icebp
mov
cmpsb
mov
subl
fnstcw
jno
in
push
jnp
adc
pop
enter
jmp
outsl
dec
mov
cmpl
add
cld
cs
mov
cld
sti
stc
mov
dec
mov
dec
push
addr16
arpl
adc
cmp
dec
je
fildll
pusha
jecxz
adc
jnp
lret
pop
mov
pop
cli
lds
dec
push
push
dec
test
xchg
mov
fistps
push
push
or
cli
je
mov
and
mov
pop
mov
cmc
ficompl
or
out
dec
sti
hlt
jl
pop
outsb
xchg
pop
outsl
sub
add
xor
ret
add
sahf
fdivp
fisttpl
out
sub
xor
in
sub
mov
xor
sbb
adc
ret
in
or
fdivr
ret
shll
cmp
cmp
insb
add
and
sti
push
lcall
ss
xor
jg
fwait
mov
and
in
lea
dec
sti
stc
jo
xchg
in
dec
dec
negb
incl
push
xchg
dec
dec
mov
stc
push
fs
movb
sbb
xlat
decl
mov
sbb
in
pusha
mov
push
loopew
test
popf
test
mov
push
dec
jno
in
sub
mov
mov
dec
dec
xchg
das
mov
jnp
mov
push
jnp
stc
push
outsl
inc
cmpb
std
in
mov
sub
sbbb
mull
movsl
mov
adc
jo
std
jmp
lea
and
sti
jo
out
sbb
jmp
and
stc
push
mov
jge
mov
inc
sti
push
insb
sbb
and
pop
imul
ret
add
dec
das
incl
loopne
and
push
mov
dec
push
mov
out
addr16
sti
push
mov
andl
xor
xchg
push
xchg
hlt
arpl
cmp
pop
out
xor
lods
ret
sub
sar
pop
cld
push
test
sub
sub
mov
test
jecxz
xchg
mov
pusha
test
adc
lret
ljmp
pop
shlb
test
cmpsl
movsl
popa
stos
xor
cld
jp
aaa
xlat
mov
bound
scas
dec
mov
sti
lea
xlat
pop
mov
cli
mov
inc
out
popf
xorl
pop
imul
sbb
mov
and
dec
not
mov
gs
dec
fildll
dec
dec
aam
cmp
push
arpl
jecxz
cld
je
sti
call
xchg
push
arpl
add
lods
jmp
shll
or
insl
repz
dec
stc
rorl
jo
jne
xchg
dec
adc
dec
daa
dec
cmp
dec
dec
jae
int
enter
lahf
dec
daa
xchg
stc
cs
add
data16
jl
add
dec
insb
cmp
mov
inc
imul
sub
sub
jne
mov
clc
push
outsb
jne
outsl
test
xchg
xchg
cld
pop
cmp
xor
push
push
push
arpl
cmpl
xchg
jnp
cwtl
aad
push
sarb
sarl
roll
mov
cld
ret
mov
ret
mov
gs
jg
sub
lods
test
fdivp
jnp
popf
in
jb
mov
outsl
mov
push
or
mov
out
repz
fisubrl
inc
leave
and
dec
or
xor
incl
push
add
aad
xor
pop
int3
in
mov
sub
adc
jle
test
addr16
arpl
inc
dec
clc
xlat
ja
pop
push
outsb
sbb
xor
pushf
pop
cmpsb
jbe
pop
mov
push
pusha
push
test
mov
in
fildll
insb
cli
les
push
pop
and
jl
add
test
gs
icebp
dec
repz
iret
xlat
mull
mov
insb
mov
lods
dec
mov
add
sahf
inc
sbb
sbb
push
lahf
dec
jg
fnsave
ret
orl
repnz
test
lods
mov
pusha
pop
movsl
rorl
int
aaa
cltd
aas
add
int
or
fwait
dec
ffreep
pop
dec
ja
hlt
loop
clc
mov
jo
loope
movsl
icebp
in
hlt
lods
pusha
xchg
das
dec
loop
sarl
in
sbb
sub
sbb
push
enter
jge
dec
push
cmc
hlt
push
pushf
mov
je
mull
jno
jo
mov
pop
out
jle
call
push
or
je
jo
mov
jecxz
call
rorl
jo
insl
iret
add
dec
sbb
jp
cmpl
xor
mov
mov
jo
push
mov
sbb
test
std
mov
hlt
cld
jo
sbb
xchg
or
lahf
dec
dec
dec
xchg
push
inc
leave
in
test
push
inc
outsb
sub
out
push
fs
std
push
aaa
out
inc
fidivrs
fwait
lahf
sbb
sub
cmp
inc
cld
imul
outsl
mov
mul
pusha
add
mov
out
gs
les
cmp
es
cmp
sub
movb
mov
mov
push
mov
fiaddl
adc
mov
push
jo
push
call
cld
adc
and
add
inc
or
andb
mov
cmpl
mov
jecxz
mov
aaa
movsl
outsl
cwtl
and
fnstenv
das
hlt
pop
out
dec
movsb
dec
dec
out
inc
cld
push
mov
mov
jge
mov
jecxz
lea
mov
inc
insb
lcall
in
addr16
cmp
sub
push
inc
daa
jae
push
cli
fadds
ss
jmp
das
and
push
stc
sub
out
or
aaa
clc
cs
mov
aaa
sub
or
xchg
cltd
and
cmp
or
aam
aam
leave
mov
sub
popl
xor
jge
cld
ja
push
cmpsl
xor
sub
add
add
imul
dec
push
xor
sub
inc
in
test
bound
mov
inc
jg
mov
pop
pop
jle
daa
out
mov
icebp
aaa
xchg
orl
xor
jg
je
sbb
adc
mov
addb
in
stc
add
dec
std
test
inc
lock
jecxz
dec
xor
aaa
incl
repz
jb
in
test
je
adc
rcrl
push
xchg
outsb
decl
std
into
bound
pop
repz
adc
xchg
orl
sbb
mov
dec
cmp
lea
subb
inc
lahf
pop
rolb
les
jg
inc
jmp
xchg
iret
pop
rorb
dec
test
loopne
inc
imul
pop
push
ret
test
mov
mul
movl
arpl
xchg
imul
jecxz
push
dec
imul
sbb
cli
dec
xchg
pop
push
cmp
lods
mov
jge
add
sbb
cld
mov
adc
test
pop
xchg
fidivl
jg
icebp
pop
adc
mov
test
out
pop
in
jmp
stc
pop
stos
mov
leave
fs
mov
out
dec
sub
cmc
dec
add
mov
pop
out
mov
fldenv
jmp
mov
mov
iret
xchg
xchg
push
sbb
std
aad
jge
mov
dec
popa
out
movsl
dec
arpl
dec
fwait
movsl
notb
add
push
pop
in
pop
mov
arpl
andb
jbe
ja
adc
xor
and
sbb
addr16
fnop
jle
and
pop
incb
and
or
or
add
xor
mov
js
aaa
gs
pop
pop
ret
dec
or
inc
repz
cmc
aaa
push
cld
add
cmp
mov
int3
sbbb
mov
xchg
loopne
add
mov
push
sbbl
mov
jnp
lea
or
imul
dec
or
dec
test
mov
sar
cmp
roll
jecxz
add
jae
bound
fcmovbe
pusha
fninit
dec
daa
in
test
or
jl
fwait
jmp
into
loopne
lods
fcmovne
adc
xchg
cmp
or
lods
xchg
xor
rol
mov
daa
dec
shr
insl
adc
in
add
shll
adcl
stc
mov
out
sti
rcl
lock
idivl
neg
stc
fdiv
mov
movsl
in
cld
adc
and
shll
aaa
xor
inc
push
xchg
jecxz
and
push
xchg
and
clc
lahf
mov
sub
aaa
fwait
ds
arpl
push
pop
aaa
aas
jge
lret
xchg
add
arpl
inc
js
ret
sti
int3
in
std
lods
addr16
and
jg
mov
inc
pop
or
icebp
adc
pop
cli
shl
cmp
sahf
sbb
rcl
into
sti
dec
push
pop
jb
add
in
xchg
cs
frstpm(287
jb
sti
hlt
in
divl
pop
hlt
sbbl
cmp
movsl
push
add
stc
push
adc
aaa
jl
lret
add
pop
dec
int
mov
icebp
push
hlt
dec
dec
out
icebp
pop
cs
cmp
int3
cli
pop
hlt
pop
imul
xor
dec
incl
xor
push
gs
add
xchg
std
test
sub
imul
jnp
lret
test
repz
push
repnz
cmp
add
icebp
mov
popf
jecxz
push
vsubsd
daa
outsl
shl
addr16
test
dec
stc
cmp
das
xchg
lock
xchg
out
cld
sub
cmp
add
psubq
enter
or
in
cli
cld
aas
add
pop
mov
addb
js
xchg
sti
or
push
out
fnsave
mov
adc
push
sbb
add
loope
ja
pusha
out
std
fs
push
mov
mov
pop
add
mov
icebp
data16
xor
arpl
cld
xchg
lret
in
jb
dec
testb
repz
sbb
cs
mov
mov
xchg
dec
adc
sub
push
in
xor
div
repnz
lods
bound
repnz
dec
dec
test
outsl
sub
xchg
jnp
sahf
test
mov
adc
sub
stc
outsl
and
push
mov
hlt
stos
and
leave
out
push
dec
sub
outsb
cmc
dec
lock
in
arpl
incb
fstps
cs
dec
bound
in
cmp
mov
or
das
mov
jg
push
and
or
push
dec
add
repz
pop
push
xchg
mov
xchg
inc
pop
test
sbb
loopne
add
pushl
inc
push
xor
clc
mov
adc
jae
xorl
mov
mov
xchg
icebp
enter
mov
or
movsb
push
std
add
add
push
mov
cld
xchg
test
aas
add
or
stos
sub
insl
repz
dec
lock
xchg
mov
cld
rorl
push
mov
xchg
and
sub
and
stos
icebp
out
vaddsd
inc
stc
xchg
roll
lods
jle
loop
add
xor
out
testl
shrl
or
iret
add
pop
push
stc
add
andl
test
test
imul
add
sub
data16
rcr
jno
sub
cmp
mov
addl
shlb
add
push
popa
sbb
xchg
stc
test
pop
outsb
inc
jge
xlat
clc
incb
jnp
iret
mov
jge
hlt
pop
xor
fucomp
dec
movsb
loopne
aas
sar
push
aaa
sub
mov
subl
je
adc
outsl
sub
xor
pop
inc
inc
pop
sbb
jno
dec
decl
in
and
lahf
mov
jg
std
fildl
pop
stc
ret
aas
sti
xchg
and
in
inc
inc
push
xchg
mov
movsl
pusha
test
mov
shll
out
and
in
test
push
and
cld
or
mov
in
sbb
add
cmp
std
lret
jns
jb
hlt
sti
out
add
scas
add
xchg
add
sti
fbstp
dec
mov
lret
hlt
loopne
int3
add
inc
ss
int3
ljmp
cld
aaa
repz
and
movsb
mov
jno
loope
inc
fisttpl
push
pop
and
rcll
mov
out
sbb
or
add
fisubrs
mov
or
loope
push
daa
jae
loopne
neg
add
lret
mov
mov
xor
dec
xchg
insb
inc
andb
hlt
pop
or
ljmp
mov
stc
jno
and
test
das
fs
pop
add
pop
insb
std
cmp
lock
pop
sbb
push
pop
sbb
inc
jmp
fidivs
pop
mov
add
sarb
mov
popa
cmpb
push
insl
push
inc
ss
jg
dec
cmp
std
xchg
rorl
sbb
sub
inc
mov
das
jo
out
daa
push
in
iret
test
xchg
pop
in
adc
mov
stc
jo
or
repz
fwait
jecxz
inc
push
pop
pop
mov
outsl
jmp
mov
mov
pop
jno
jnp
or
mov
push
push
arpl
aaa
pop
mov
or
aas
and
adc
sub
or
adc
cmpsl
mov
jle
sbb
aad
fwait
pushl
sbb
fsubrl
fsubrl
add
mov
xchg
jmp
frstor
fstps
cli
xor
mov
icebp
not
jl
shll
scas
dec
out
aas
jmp
push
and
mov
stc
xor
mov
out
mov
cmp
jae
or
push
lods
inc
xchg
repz
fwait
add
push
dec
bound
mov
pop
pextrw
add
mov
lahf
mov
outsl
leave
dec
cli
xor
out
cmp
sbb
add
adc
outsl
and
addl
fs
insb
sbb
add
and
sbb
dec
insl
push
and
push
cld
xor
scas
xor
dec
dec
or
aaa
imul
sub
decl
jno
push
push
xor
stos
out
or
andnps
mov
outsl
std
mov
mov
sbb
repz
mov
mov
add
pop
push
fwait
sbb
popa
out
push
fisubrs
jns
rcl
aam
sti
pop
cmp
mov
hlt
cmp
dec
mov
cmc
push
out
mov
sub
adc
or
std
testl
or
out
add
cwtl
sbb
or
push
in
push
pop
gs
pop
push
clc
jb
clc
mov
cmp
sub
movsl
sbb
outsl
mov
loopne
cmp
pop
insl
lock
les
movsb
jg
stc
dec
cld
out
cs
dec
out
pop
mov
sbb
stc
dec
imul
dec
pop
loop
cmp
mov
cmp
cld
arpl
push
xor
mov
sbb
movsl
dec
lds
fnsave
iret
in
and
sbb
call
jecxz
cmp
lds
add
jge
mov
xor
imul
lcall
cmp
insb
adc
adc
dec
add
mov
mov
jecxz
add
add
loope
jle
outsl
sbb
pop
xchg
xor
dec
loop
add
xchg
icebp
add
inc
inc
dec
stc
out
xchg
jg
and
jno
xor
lods
mov
add
dec
lret
loopne
insl
sub
mov
int
neg
icebp
test
xchg
aaa
test
in
add
mov
cmp
imul
push
popl
push
add
subb
mov
in
std
cmpl
sti
jnp
jp
sti
decb
mov
add
leave
mov
sub
jge
hlt
jae
addl
loope
cli
aaa
add
aaa
dec
insl
dec
push
xchg
mov
shrb
jp
sar
cmp
in
mov
dec
sbb
add
arpl
xchg
jo
mov
test
pop
test
add
insb
pop
pop
loope
std
call
add
sbb
sbb
push
mov
pop
add
mov
xchg
dec
dec
xchg
in
jbe
pop
jg
add
fucomp
mov
pop
cld
jle
sub
or
and
dec
dec
out
ret
dec
and
ss
cli
js
xchg
push
cmp
inc
stc
mov
jbe
insb
fisttpl
inc
pop
jno
mov
add
negl
pop
pop
dec
adc
fwait
jle
mov
popa
mov
dec
add
sbb
ret
dec
jp
dec
or
mov
lea
mov
fwait
xor
cmp
pop
jmp
pop
loopne
cld
xchg
fbstp
or
shrb
xor
icebp
mov
fildl
xchg
or
loopne
in
in
jecxz
aam
push
popf
mov
mov
ret
test
mov
addl
add
and
cld
jecxz
push
mov
outsb
jg
pop
dec
cld
xchg
sub
mov
addl
cmp
mov
xor
outsl
add
jecxz
rcrb
insb
outsl
xchg
xor
pop
stc
mov
fisttps
jne
xor
mov
dec
sbb
jge
push
inc
decl
das
lock
inc
inc
xor
add
add
or
cmp
outsl
aaa
or
xchg
dec
or
xor
in
aaa
std
cmp
addl
push
addl
in
jle
mov
xor
jno
aad
adc
out
repz
imul
jnp
dec
ja
outsl
and
lea
das
dec
ret
inc
add
adc
inc
std
xor
outsl
int
xchg
ljmp
add
pop
xor
lods
loopne
outsb
push
ss
sbb
xchg
xchg
xor
or
pop
repz
push
insl
loope
das
mov
jnp
aas
adc
ja
or
enter
lret
loopne
cld
or
sbb
mov
je
mov
mov
outsl
cmp
mov
sbb
outsl
mov
jbe
cmp
jge
cli
outsb
test
add
mov
push
pop
sti
sbb
xor
push
xorl
sbbb
lds
in
test
mov
scas
ss
fnsave
sbbb
dec
sbb
mov
inc
inc
push
testl
cmp
arpl
cmc
jb
jecxz
jnp
aaa
mov
push
add
test
in
push
in
lret
cmp
dec
dec
sbb
daa
mov
in
test
stc
je
in
iret
and
push
jle
popf
inc
fcomip
sub
mov
mov
testl
pop
jns
push
fnstcw
mov
mov
je
or
fnsave
or
sbb
loopne
cli
cli
scas
test
push
out
xor
xor
loopne
push
stos
push
mov
scas
gs
mov
je
push
push
mov
bound
jecxz
arpl
sub
sahf
hlt
cmpl
cli
pop
add
inc
adc
xorl
xor
js
into
test
scas
xchg
push
push
xorl
add
scas
sarb
pop
push
pop
or
cli
jae
std
jecxz
fsubrl
subl
pop
fdivs
jmp
pop
lds
xchg
xchg
roll
push
flds
stos
bound
out
xor
push
pop
clc
in
or
fs
popa
add
and
test
and
inc
pop
sub
inc
cli
and
imul
test
cmp
jne
push
and
push
aaa
mov
xor
inc
cld
xor
jno
test
cmpsb
ficomps
cmpl
mov
mov
cmp
insl
pop
xor
cmp
subl
sbbb
xchg
lea
in
shlb
jne
je
ret
mov
sbb
add
jmp
outsl
push
jnp
jmp
bound
cmp
in
std
mov
mov
sbbb
cli
outsl
add
sti
ret
or
js
ljmp
sub
fldlg2
iret
clc
dec
loopne
std
iret
ret
mov
arpl
in
sti
sub
mov
fisubl
inc
sbb
cmc
xchg
mov
mov
or
aaa
shrb
shl
xchg
or
not
out
rolb
out
cmp
lock
xor
mov
cmpl
adc
cli
mov
outsl
arpl
jo
push
mov
imul
push
outsb
add
mov
jecxz
mov
je
ret
aaa
xor
cmp
subl
in
push
loope
xor
fiaddl
test
fcmovbe
mov
xor
xchg
add
cmp
add
aaa
or
inc
sti
fildl
lea
mov
call
add
test
jmp
add
in
test
pop
cmp
push
inc
xchg
test
scas
adc
add
and
inc
std
push
jle
incl
xchg
xor
cmp
jmp
cld
std
pop
mov
shll
mov
imul
outsl
loopne
mov
sbb
fisubl
out
push
xchg
push
test
mov
mov
enter
shl
arpl
dec
inc
ja
lret
fwait
aas
fistpl
mov
inc
pop
mov
adc
jo
jb
std
pop
inc
out
or
sbb
mov
push
jmp
loopne
loope
ja
sub
dec
test
insb
mov
hlt
lahf
adc
or
sti
imul
jg
outsl
xorb
jecxz
daa
sti
push
fs
imul
or
mov
sub
or
push
sub
popf
in
mov
jo
lods
and
or
pusha
xor
jmp
repnz
push
push
push
addr16
mov
jae
sti
icebp
push
fstp
xchg
lahf
or
shlb
jge
mov
cmc
insl
psrlw
cmpsl
lock
clc
cmp
pop
jnp
gs
push
jnp
jl
cmpsl
pop
cli
das
jne
pmullw
add
lcall
mov
mov
xchg
xchg
mov
fistpll
shll
mov
inc
mov
fwait
xchg
mov
ja
mov
insl
mov
jno
xchg
pop
mov
sti
pop
sbb
stc
les
and
mov
lahf
add
outsl
mov
or
sti
or
test
and
inc
cmpb
fildll
addr16
xchg
push
mov
jmp
or
adc
and
pop
adc
divl
les
push
sbb
fisttpl
jl
mov
dec
cmp
pop
xor
mov
and
out
pop
sbb
loope
ss
outsl
sbb
add
cli
aad
inc
in
out
mov
lock
test
push
push
addr16
cmp
ficompl
and
aaa
xor
fiadds
push
out
and
bound
inc
in
push
dec
jmp
cmpb
inc
xlat
inc
dec
adcl
xchg
sbb
fiadds
xor
out
push
pop
mov
and
or
shl
ja
out
jp
enter
rcrl
aad
pop
cmpsl
sti
das
and
mov
mov
sub
addr16
jg
dec
test
mov
fidivrl
fistpl
pop
int
ja
daa
pop
mov
add
xchg
es
icebp
leave
test
mov
andl
mov
mov
xor
clc
xchg
cli
or
addr16
or
std
xor
jae
ds
out
dec
sbb
decb
jo
insl
sbbl
inc
sub
pop
jnp
in
dec
mov
mov
dec
push
aam
inc
aam
jns
mov
test
fst
dec
out
jecxz
xor
in
mov
ja
jbe
dec
pusha
xlat
movsl
adc
mov
mov
push
mov
popf
or
ret
or
mov
rorl
loopne
push
pop
xorb
ret
fldt
cmp
in
sub
add
ret
daa
inc
jnp
ljmp
sti
std
add
or
mov
or
xor
mov
mov
sub
aad
dec
outsb
ja
clc
cmp
outsl
cmp
imul
sub
lahf
xchg
outsl
repz
loope
pop
hlt
jo
mov
das
das
xor
xor
decl
push
outsb
or
add
outsb
loopne
std
roll
jbe
hlt
imul
push
mov
shll
push
pop
push
dec
lahf
fwait
imul
aad
fdivs
lock
repz
insb
or
jecxz
es
addr16
adc
test
or
les
data16
repnz
push
mov
jecxz
js
ss
pop
add
sub
decb
ret
and
out
int
add
push
mov
xchg
pop
xchg
mov
add
loopne
cs
jl
add
pop
sbb
outsl
loopnew
fnstsw
mov
push
adc
mov
fs
mov
xchg
sbb
dec
dec
xchg
cltd
fbstp
jg
and
sub
and
daa
aas
sbb
xchg
sbb
sub
repnz
cmp
push
cmp
mov
jns
push
stc
jg
sbb
stc
cli
imul
mov
jae
sarl
scas
xchg
adc
cs
push
mov
cwtl
mov
pusha
pop
insb
jge
test
pop
test
dec
rcrl
pop
dec
mov
daa
sbb
das
aaa
mov
jg
cmp
push
mov
dec
cli
scas
xor
cmp
jnp
push
lahf
mov
mov
jecxz
xor
pop
jl
dec
arpl
addr16
pop
xor
jecxz
mov
cmp
test
xchg
out
das
push
cmp
or
push
adc
pop
mov
inc
scas
test
xchg
std
fmull
adcl
jae
out
or
jne
mov
dec
xlat
shl
scas
hlt
jb
in
mov
leave
out
or
loop
scas
dec
mov
add
mov
pop
adcl
sbb
in
sub
cmp
insb
sti
imul
pop
ffreep
sbb
mov
pop
negl
inc
jae
icebp
mov
jg
fdivr
ss
mov
or
jge
cmpl
add
mov
test
add
dec
dec
lea
mov
jnp
andl
cmp
jns
adc
rol
ret
sar
test
sbb
ret
dec
and
xchg
loopne
fbld
jno
adc
les
pop
or
cmp
mov
add
fistl
std
fwait
imul
inc
outsl
jmp
test
sub
push
jno
inc
aaa
pop
movsl
inc
or
jg
decb
adc
cs
addr16
pop
dec
jl
scas
loopne
xchg
std
bound
pop
pop
push
outsl
mov
jnp
pushf
idiv
jb
rcrb
cld
inc
dec
idiv
jb
mov
dec
dec
push
mov
sti
jo
cs
push
dec
push
push
pushf
insb
sbb
je
imul
push
dec
cld
or
cld
pop
mov
iret
pop
fcoml
jle
pop
cmp
cmpsl
pop
mov
rcr
insb
ljmp
cmp
sarl
dec
int
aad
movsb
into
pop
mov
mov
dec
mov
in
jne
movsl
adc
fmuls
xchg
or
xchg
ja
jge
arpl
inc
mov
enter
orb
cmp
and
xor
and
push
cmp
and
pushf
push
popa
xor
cmp
jge
sbb
shll
jb
jnp
aaa
incb
repz
or
dec
dec
test
sbbl
fldenv
ds
dec
daa
xchg
lods
lcall
ss
pop
lea
fisttpll
jns
mov
outsl
or
rorl
dec
fidivs
fwait
push
in
or
cltd
aaa
fldl
jg
sub
iret
rcr
xor
das
jp
lea
jg
adc
mov
xchg
xchg
cltd
loop
add
xorb
aad
xor
daa
js
push
sub
push
in
daa
xor
adc
push
mov
pop
out
aaa
add
pop
ja
out
sbb
arpl
adc
out
push
mov
ret
pop
mov
inc
and
mov
mov
cs
outsb
pop
or
cli
add
pop
sbb
movsl
jecxz
adc
push
push
pusha
mov
lea
stos
mov
mov
jo
mov
je
pop
push
mov
push
sarl
mov
sti
mov
pop
call
cmp
js
scas
push
mov
push
push
jle
add
jle
pushf
mov
js
xorl
mov
data16
lret
out
les
push
pop
xchg
stos
insb
push
test
outsl
and
jnp
mov
fwait
and
xor
inc
xor
aam
imul
daa
mov
or
add
repz
test
aas
push
outsl
add
mov
insb
sbb
mov
sbb
fadds
in
sbb
es
dec
stc
into
imul
push
inc
clc
loope
fisttpll
mov
mov
push
sub
cmp
leave
call
pop
mov
xchg
cli
jne
and
pop
pop
mov
out
aas
add
out
and
incb
cltd
imul
xchg
or
mov
adc
cmp
es
lods
mov
testb
and
cwtl
inc
add
fstpl
sub
adc
sti
adc
inc
add
rorb
jbe
adc
xchg
jns
ficompl
mul
cmp
loopne
dec
cwtl
inc
inc
icebp
stos
pop
mov
mov
push
mov
pop
imul
fs
push
outsb
loop
outsb
mov
mov
pop
cmpl
adc
aad
jae
jne
fistl
jnp
cmp
add
sbb
dec
dec
lret
les
out
push
sub
shrl
or
and
mov
jmp
xchg
inc
arpl
insb
jg
mov
pxor
jo
jl
mov
cld
scas
imul
imul
or
cmpl
push
dec
arpl
imul
push
lock
xor
add
push
mov
out
sub
jg
js
rcr
sbb
das
pop
sub
out
mulb
test
icebp
ljmp
and
lcall
mov
comiss
mov
ljmp
add
sub
mov
pusha
test
mov
leave
cmp
cmp
loopne
inc
pop
mov
dec
adc
xchg
in
pop
adc
dec
add
aaa
mov
jl
and
mov
bound
lods
outsl
sub
aam
add
dec
and
gs
daa
repnz
fwait
lcall
push
cmp
rol
cmp
in
mov
outsb
rcl
imul
cmp
push
insl
pop
call
std
push
xlat
jo
in
mov
inc
pop
sti
fisubs
in
mov
imul
ret
subl
inc
mov
jnp
imul
mov
arpl
add
xor
push
dec
cmp
add
inc
mov
outsl
adc
push
insl
add
xchg
aaa
outsb
mov
jg
sbb
insl
add
in
mov
push
xor
adcl
aad
out
and
and
outsl
adc
pop
jmp
mov
in
call
adc
std
push
ret
int
inc
imul
aad
mov
or
test
inc
jmp
in
repz
sub
test
pusha
mov
mov
xchg
loopne
das
stc
test
sub
mov
mov
jl
dec
outsl
xor
adc
lock
mov
add
mov
add
loop
cmp
pop
mov
adc
jecxz
xor
mov
and
lods
popf
or
cmp
xor
out
xor
mov
testb
jb
mov
mov
rcrl
repnz
sub
or
xor
stos
sub
sbb
xor
mov
mov
sbb
jae
jle
sbb
sti
nop
mov
mov
mov
loopne
mov
stos
push
xor
and
add
pop
psrlq
pop
repz
jo
arpl
test
test
push
push
dec
push
sbb
fwait
mull
add
add
out
in
pop
inc
imul
push
pop
pop
push
ret
mov
sub
sub
mov
add
test
loop
mov
pop
insb
add
sti
push
mov
inc
push
or
inc
es
lret
xor
jecxz
and
or
fcoms
cwtl
stos
and
fs
shll
pushf
imull
aaa
pop
mov
cli
jmp
sbb
pop
ficompl
pushf
sbb
popa
test
aas
jnp
pop
jecxz
dec
xchg
push
movsb
gs
mov
rorb
cmp
mov
pop
or
sbb
push
xchg
pop
jmp
scas
repnz
pop
mov
test
roll
lcall
jo
jo
daa
stos
pop
push
mulb
mov
add
jecxz
cmp
or
aaa
xor
cmpsl
imull
cmpb
sbb
test
push
pop
stos
test
das
cld
ljmp
test
adc
lcall
push
fwait
pop
lret
sub
inc
fucomip
mov
movsl
repz
cs
movb
popf
xor
xor
int3
add
mov
mov
popf
aas
dec
popa
test
mov
fadds
sub
sbbl
jnp
mov
orb
dec
lds
sub
mov
clc
out
push
xchg
mov
mov
jg
inc
dec
jecxz
and
push
add
sbb
xchg
add
mov
sbbb
inc
jmp
pop
js
mov
mov
test
xchg
outsl
pop
cmc
movl
lods
loopne
push
shll
das
dec
enter
out
sbb
jno
scas
loopne
rcl
inc
mov
push
outsb
dec
mov
mov
xchg
jmp
cmp
inc
imul
icebp
sub
cmpsl
jns
movsb
testl
or
aas
add
pop
cld
jae
hlt
xchg
mov
mov
push
js
fsin
pop
dec
push
pop
cli
cmp
mov
and
jbe
adc
cltd
test
insb
cmp
aas
stos
dec
sbb
into
fiadds
sbb
mov
in
icebp
adc
jmp
mov
dec
jg
add
hlt
fs
pop
add
shll
xlat
movsb
inc
popa
push
outsl
mov
pop
mov
cmp
and
inc
jns
pop
jo
jecxz
and
out
in
sbb
inc
stc
push
outsl
out
xchg
imul
mov
jge
jnp
js
fadds
punpckhwd
lea
or
mov
sbb
test
or
movsb
test
jb
and
pop
mov
ret
push
ljmp
push
cmp
sbb
repz
jg
clc
jmp
ror
in
sbb
clc
roll
outsl
sbb
push
inc
mov
hlt
insl
testl
mov
outsl
mov
aaa
pop
push
fcompl
mov
imul
sbb
push
insb
inc
fucomp
jmp
mov
mov
dec
shll
repnz
icebp
or
mov
or
push
clc
sbb
jnp
loope
pop
lret
repz
sbb
jb
xchg
mov
mov
push
jecxz
inc
incl
pop
lea
mov
shll
outsl
add
push
loop
and
sub
jl
push
cmp
call
dec
mov
fisttps
flds
sbb
aas
inc
lret
mov
leave
or
cmp
sbb
pop
sahf
sub
arpl
shlb
pop
or
sub
mov
repnz
mov
push
cmc
mov
addr16
sub
push
fwait
push
sbb
push
mov
sbb
jnp
mov
addr16
and
movsl
cltd
daa
or
xchg
push
push
fldcw
or
jno
mov
push
adc
mov
mov
xchg
cli
rorb
inc
mov
xchg
pop
arpl
push
mov
addl
xchg
repz
cmp
insl
xchg
add
adc
dec
out
jle
bnd
xchg
imulb
scas
sbb
aam
std
adc
xor
testl
cld
js
push
hlt
mov
aaa
lods
jg
outsl
js
or
arpl
and
push
pop
sti
int
jne
xor
sbb
repz
out
cmpsb
or
mov
mov
out
or
mov
mov
push
fnstenv
dec
test
js
enter
icebp
xchg
into
repnz
lcall
mov
jae
sub
mov
cli
out
das
adc
lock
mov
mov
mov
test
jne
and
mov
and
mov
or
push
fwait
aaa
and
test
or
mov
ret
push
xchg
dec
lds
out
pop
mov
sti
dec
loopne
sbb
icebp
inc
fnstcw
iret
push
inc
xchg
mov
sbb
mov
lods
pusha
fiaddl
aaa
cwtl
sub
std
scas
enter
aad
dec
xchg
addr16
push
push
out
out
stc
js
or
push
in
icebp
call
dec
adc
adc
daa
loopne
sbb
jecxz
sbb
push
stc
add
das
mov
sub
pop
xor
sbb
arpl
ret
in
push
cmp
aaa
subb
dec
aad
test
sbb
pop
sbbb
shl
xchg
adc
xor
lahf
and
imul
mov
add
adc
xor
xchg
pop
mov
pop
flds
jno
pop
add
lds
mov
or
fisttpll
mul
mov
jne
sbb
pop
outsl
stos
pop
std
cmpb
sbb
test
ljmp
jmp
jp
sarb
aaa
fwait
sbb
add
add
pop
sarl
or
cld
or
aas
clc
imul
idiv
adcl
mov
jmp
mov
lods
bound
fnstenv
mov
adc
repnz
xchg
or
push
in
in
xchg
mov
aam
in
lcall
push
push
repnz
aaa
test
sbb
daa
jno
adc
pop
rclb
test
sbb
pop
jne
sbbb
sbb
stc
mov
and
adc
fs
bound
mov
push
jge
fs
push
inc
dec
mov
aaa
sbb
in
dec
and
sbb
jb
dec
pop
mov
xor
or
cmp
push
mov
rep
pop
push
jb
xchg
xor
in
pop
push
xor
sarl
sub
mov
push
mov
inc
push
push
mov
mov
jge
fwait
movl
xor
add
inc
dec
cmpsl
adc
mov
dec
packuswb
cmp
int3
je
jo
xor
sbb
mov
push
adc
sbbl
fidivrl
xchg
imul
pushf
jo
in
dec
adc
rorl
popa
repz
or
shrb
sub
ss
xor
imul
repnz
sub
notb
aaa
daa
into
in
je
dec
iret
sbbb
dec
adc
mov
adc
mov
push
mov
mov
xor
test
mov
test
cmp
je
cs
push
push
mov
cmp
mov
mov
or
jge
jns
add
jle
add
sub
divl
rolb
xor
roll
pop
loopne
jno
push
sub
jp
mov
xor
sti
mov
push
addb
dec
add
outsl
xchg
mov
cli
or
roll
dec
xchg
pop
addl
mov
add
mov
stos
das
icebp
lods
std
test
pop
sub
daa
inc
ss
add
test
jl
incl
pop
test
pop
pop
mov
add
inc
add
jle
popf
testl
xor
out
imul
pushl
bound
adc
mov
push
insb
push
hlt
pop
in
das
stc
jno
std
jne
sbb
je
and
test
sti
daa
add
xor
jle
ljmp
jge
stc
inc
cmp
add
jecxz
lds
pop
dec
mov
add
add
inc
add
inc
jg
aaa
inc
and
out
xor
popf
cmp
cmp
inc
adc
mov
cmp
xchg
add
daa
xor
enter
ljmp
and
arpl
push
test
das
push
xchg
shrl
shll
lods
inc
hlt
aam
xchg
das
xchg
out
or
jecxz
push
loope
lcall
dec
js
sbbl
std
jbe
add
cli
sbb
dec
test
ljmp
inc
adc
mov
sub
dec
arpl
std
hlt
movsl
mov
shr
push
dec
mov
lds
dec
mov
push
sbb
leave
pop
fwait
out
or
or
idivl
cmp
cwtl
movsl
push
push
dec
xor
ds
mul
jbe
call
les
decl
rorb
xor
inc
xor
frstpm(287
inc
xor
divb
fisubl
xor
ss
loopne
and
scas
imul
dec
jne
sbb
sbb
dec
adc
lahf
fdiv
pop
mov
cld
inc
xor
test
xchg
es
das
adc
mov
sbb
mov
jp
filds
sub
dec
lds
push
pop
stc
test
mov
pcmpeqd
xchg
lahf
faddl
inc
dec
imul
xchg
daa
rorl
dec
xchg
aas
mov
cmc
jg
cmpsl
sti
cli
inc
popf
ja
xchg
test
jle
mov
andl
xor
or
mov
inc
push
mov
jmp
or
stos
lods
mov
in
inc
mov
or
inc
loop
pop
sub
sbb
adc
mov
xor
inc
pop
mov
jmp
inc
add
mov
inc
dec
out
fimuls
or
addl
jnp
mov
xlat
arpl
dec
push
xchg
push
cmp
lods
daa
mov
cmpsl
push
jno
dec
cli
pop
insl
and
or
and
add
mov
xor
test
js
or
jmp
cmp
xor
insl
in
iret
loop
inc
jbe
sbb
mov
xchg
out
pop
jb
stos
icebp
ret
imulb
test
push
dec
fucomip
add
adc
xchg
pop
fistl
cli
dec
lds
jmp
dec
outsl
xchg
cld
jb
lea
add
aaa
pop
add
pop
add
ljmp
and
or
ss
sbb
insl
sbb
int
xlat
in
xlat
inc
clc
sub
daa
inc
sbb
cmp
jecxz
por
dec
dec
jecxz
adc
xor
in
mov
push
or
ja
addl
clc
hlt
pop
jb
xchg
cmc
adc
xor
inc
enter
in
dec
enter
push
mov
or
xchg
add
xor
mov
cld
xchg
adc
xor
xor
sbb
orl
mov
insl
addb
aas
ss
jnp
insb
add
xchg
and
jge
push
in
cltd
incb
sub
and
jge
mov
or
jns
mov
icebp
daa
notl
and
dec
or
adc
mov
arpl
scas
int
jne
ficoml
add
mov
lret
push
xchg
push
sub
jg
not
adc
push
push
mov
and
add
push
or
pop
adc
pop
mov
pop
ljmp
add
push
push
data16
cli
lahf
xor
sub
mov
insb
or
sub
push
sti
rclb
iret
push
push
aaa
cld
push
std
aam
loopne
pop
dec
sub
xor
mov
mov
pop
insl
mov
icebp
mov
insl
icebp
pop
orl
cld
sarb
in
das
mov
imul
push
gs
mov
lret
mov
pop
ret
pop
pop
mov
pop
or
mov
or
jge
or
std
xchg
and
xor
or
gs
gs
push
sbb
ljmp
jmp
mov
pop
in
mov
push
lds
push
mov
stos
outsl
je
ret
or
push
imul
lea
and
je
mov
add
jg
jne
mov
jnp
dec
leave
add
mov
dec
mov
daa
jl
adc
jge
mov
sbb
pop
mov
mov
dec
dec
dec
mov
push
push
mov
cmc
loopne
or
js
cmc
add
insl
gs
pop
or
add
arpl
mov
push
fistpll
adc
pop
pop
jo
fisttps
les
mov
push
pusha
lds
stc
push
and
jo
jmp
dec
and
dec
in
jo
push
sti
addr16
out
push
pop
mov
jne
add
mov
dec
sub
fidivrl
pop
or
pop
idiv
sti
sub
sbb
cmp
push
hlt
idivl
add
fcmovne
push
out
mov
add
or
push
sti
out
les
lcall
push
inc
cmc
cmp
ds
cmp
xchg
mov
mov
cmp
push
or
lea
push
mov
mov
push
pop
or
push
leave
lock
idiv
cmp
test
jle
adc
cld
inc
push
jle
push
aas
push
or
add
fimull
xor
inc
mov
push
xchg
dec
hlt
or
and
xchg
cmc
xchg
push
addr16
addl
or
pop
outsb
mov
addr16
jmp
inc
adc
pop
push
call
lods
dec
std
xor
andb
add
cli
mov
cli
pushl
jns
std
dec
loopne
add
mov
cmp
dec
movsb
mov
add
jno
jg
lods
call
out
or
insl
cmpsl
mov
or
cmc
lds
add
xor
adc
test
inc
mov
movb
jmp
incb
dec
pop
jns
pop
pop
jmp
push
pop
mov
jo
loop
sti
xchg
and
pusha
cmpsl
or
add
mov
mov
test
sti
xchg
lds
idivl
xor
pop
mov
loopne
add
arpl
inc
sub
pop
hlt
mov
mov
adc
mov
dec
push
jl
push
inc
in
test
push
dec
mov
out
xor
in
lret
lods
imul
stos
push
lea
mov
mov
out
pop
lret
sbb
push
int3
insb
shll
rclb
int3
out
in
add
dec
mov
incl
pop
arpl
jg
rcrb
pop
jle
popa
aas
filds
mov
mull
aam
test
in
pop
aas
mov
fstpt
cmp
or
fsubrp
in
add
test
jae
jecxz
add
adc
jle
popa
aas
test
popa
sbb
stos
test
pusha
gs
pop
aas
mov
jge
mov
mov
xor
mov
mov
in
std
cmp
das
xor
pop
and
rcrl
mov
fwait
or
bound
movsl
mov
bound
lods
pop
and
sub
push
sub
add
cli
push
aad
push
std
addr16
adc
push
xor
pop
repz
adc
loop
mov
mov
repnz
sbb
pop
and
shl
fs
addb
repz
cmp
mov
pop
fs
loopne
imul
and
dec
pushl
shlb
outsl
outsb
add
pop
and
int
sbb
lret
mov
jl
dec
outsl
push
pop
arpl
pusha
call
mov
inc
xor
pop
stc
aas
in
loope
pusha
add
loop
or
cli
stc
int
pusha
pop
and
out
cli
imul
lods
out
in
add
fstpt
push
xor
bound
xor
pop
lock
fistps
or
mov
shll
pop
pop
repnz
and
fisubl
rcll
mov
or
in
fs
jo
imul
fwait
add
sbb
push
insl
rcl
in
aaa
xchg
gs
cmc
imul
rolb
or
in
xor
adc
xor
clc
and
sti
sti
pusha
cmp
int
fistl
in
sti
mov
lret
insl
mov
jge
lret
pop
inc
mov
pop
enter
bsf
fwait
add
mov
add
fstpl
mov
cs
clc
es
loop
or
pop
cmp
lods
push
jo
cld
sub
subb
repnz
sbb
insl
mov
xchg
cmc
mov
cli
xor
or
mov
mov
ljmp
repz
bound
cmc
cltd
add
xor
lret
sbb
mov
jae
cld
fs
movsb
mov
cld
pop
jmp
cmp
mov
and
imul
in
xchg
and
gs
sar
enter
mov
pop
push
ret
pop
xchg
in
xor
add
jecxz
data16
pop
and
cltd
dec
xchg
push
ret
or
inc
mov
pop
and
jle
lret
bound
test
pcmpeqw
in
mov
mov
mov
into
sbb
repz
outsb
out
push
mov
test
inc
xor
imul
clc
xorl
pop
in
frstpm(287
sub
adc
cwtl
sub
loopne
stc
imul
or
lahf
insl
mov
flds
add
mov
xor
cmpb
add
sub
out
hlt
mov
adc
xor
cmp
mov
cld
clc
or
cli
mov
shrb
push
jge
pop
add
nop
roll
mov
imul
mov
push
jnp
mov
dec
add
aaa
push
dec
jmp
push
jnp
pop
add
add
add
add
mov
push
pop
out
enter
dec
pop
ljmp
sub
incb
cmp
rorl
outsl
sbb
fadds
jmp
jno
xor
fisttps
dec
jp
js
and
rcrb
sbb
inc
adc
loopne
mov
pop
mov
lret
out
dec
sbb
fisttpl
out
add
push
pop
push
imul
mov
sbb
insl
push
es
push
inc
adc
jg
sbb
sbb
fiaddl
out
add
pop
pop
dec
std
push
aas
lahf
mov
lret
or
dec
push
sub
bound
xor
push
sub
sti
cli
arpl
pop
int3
shl
mov
subl
or
lret
push
mov
push
xchg
mov
imul
pop
mov
repz
mull
mov
mov
mov
or
out
orb
aad
loop
test
dec
cld
jle
add
outsl
rol
in
add
fcompl
jo
sub
fstps
pusha
mov
nop
and
shl
inc
jge
mov
mov
loope
decl
std
call
clc
inc
pop
test
shl
addb
add
sub
incl
addl
in
addl
mov
cmp
or
ret
aas
push
cld
mov
cmp
mov
mov
lds
push
or
in
pop
pop
ja
or
push
xchg
inc
push
orb
dec
sub
movsb
idivb
sbb
cmp
mov
loopne
repz
fistps
push
cmp
add
dec
sbbb
jns
fstl
jecxz
add
or
aaa
add
das
push
pop
pop
enter
mov
push
lods
cs
aas
incb
jecxz
pop
add
mov
push
xchg
inc
inc
inc
jle
add
outsl
hlt
push
jnp
sbbl
idiv
sti
push
sbb
jb
ja
rorb
insl
add
push
push
stc
sar
int
or
mov
add
andl
clc
mov
and
roll
add
mov
jge
ficomps
mov
sbb
loope
das
add
push
mov
and
adc
lods
loop
loope
fwait
shll
sbb
sarl
or
test
test
test
jno
or
sti
jmp
mov
dec
cmp
out
push
outsl
sbb
push
imul
shrb
arpl
push
insb
add
xor
sub
std
or
mov
pop
inc
js
inc
mov
jnp
addr16
test
xchg
or
and
clc
add
les
les
adc
mov
xor
push
cmp
xchg
rolb
jmp
sub
rcl
dec
push
insl
jmp
and
mov
outsl
out
jb
push
pop
cmc
add
pop
rorl
xor
pop
and
push
mov
adc
insl
mov
in
imul
pop
in
sub
pop
sbb
dec
pop
lock
jmp
add
adc
push
pop
ljmp
arpl
adc
out
out
fs
stos
clc
dec
adc
loopne
std
or
iret
xchg
loopne
xchg
mov
add
pop
subb
push
in
out
jo
inc
lret
mov
loop
inc
jae
scas
ds
les
mov
push
pop
mov
daa
mov
stc
xor
sbb
sbb
ret
fists
xor
daa
scas
fisttps
inc
cmp
jecxz
cld
xor
pushl
test
or
dec
fcomps
inc
mov
adc
in
jecxz
out
mov
xchg
mov
mov
ja
mov
fdivrp
cmpsb
test
movsl
cmpsb
mov
sub
stos
mov
icebp
fisubrs
ljmp
mov
sub
daa
inc
jecxz
add
test
push
bound
and
pop
int3
and
ret
out
jno
loopne
dec
das
adc
push
jl
mov
addb
inc
jne
test
stc
ja
imul
andw
inc
fmuls
push
in
outsl
jmp
mov
add
or
cmc
sub
jb
push
adc
mov
js
pop
sbbl
lods
sub
pop
fs
ja
jp
and
cmp
pop
inc
cld
das
jge
cmpb
jae
cmpl
lahf
cs
push
ss
xchg
out
in
out
fimull
xchg
inc
mov
movsl
mov
sub
add
xchg
lret
or
sbb
in
lds
sarb
cli
cli
and
lret
cli
and
cmpsb
ficompl
jg
and
ret
gs
jno
xchg
sbb
fxch
or
or
pop
fistps
sti
imull
and
loopne
inc
mov
lret
cmp
pop
jo
outsb
push
jo
int
repz
imul
les
mov
arpl
and
xchg
pop
mov
add
mov
sub
add
lret
lret
xor
lods
sar
and
push
jl
sub
cmp
push
mov
lds
js
ljmp
mov
add
pop
cmpss
add
add
hlt
stos
ja
add
std
mov
mov
icebp
add
mov
rclb
mov
rorl
mov
pop
or
add
iret
jnp
stc
or
lds
inc
cmp
jae
add
dec
and
pusha
js
icebp
or
lahf
and
bound
lcall
lahf
ja
clc
or
fsub
imulb
push
jecxz
das
adc
cld
and
xchg
mov
mov
dec
adc
adc
add
rolb
ljmp
out
insb
sub
add
mov
ret
or
aaa
jo
sti
repz
add
or
dec
adc
or
icebp
je
xorb
xchg
cli
out
cmp
cli
cld
jo
lahf
sti
insl
outsb
lds
push
push
test
out
mov
sub
dec
loop
scas
orb
push
popf
push
jo
shrl
popa
jecxz
fistl
adc
std
jge
outsl
add
je
jg
addr16
dec
jecxz
sbb
sbb
pushf
pop
pushl
cltd
hlt
sbb
lcall
int
pop
mov
inc
mov
push
sti
adc
test
das
adc
mov
imul
jge
mov
out
mov
mov
popa
loopne
in
call
movb
imul
cld
push
mov
loope
push
mov
xlat
pop
movsl
sbb
jg
test
aas
adc
call
mov
mov
xchg
xor
adc
call
jl
cmpb
add
sbb
jl
xor
jno
out
or
mov
mov
inc
jnp
test
repz
xchg
push
popa
mov
mov
mov
or
and
sub
cmp
adcl
jbe
in
repz
in
mov
sub
jne
fwait
cmpsb
imul
dec
shrl
mov
je
jb
pushf
outsl
dec
nop
jno
outsl
adc
xor
roll
xor
insl
imulb
in
lret
jae
jb
fcompl
call
jnp
cs
fdivs
test
stc
jl
in
mov
mov
test
mov
lcall
adc
popa
dec
shll
ja
adc
fnstenv
mov
xor
xor
lret
insl
roll
clc
jge
in
jnp
jge
ja
scas
imul
jno
daa
mov
clc
ja
pop
jbe
js
jo
lcall
dec
pop
pop
jno
xor
mov
mov
sti
dec
aam
mov
je
js
sub
jg
or
pop
xorb
jge
iret
or
js
dec
shll
outsb
mov
cs
xor
jle
js
cs
in
inc
jp
xor
je
jns
push
mov
mov
jp
xchg
mov
pushl
stc
sub
pop
mov
jmp
ljmp
push
sbb
push
xchg
ret
fisubl
nop
andl
sbb
in
jb
sbbb
and
dec
and
nop
and
mov
dec
push
fwait
dec
cmpsb
jae
xchg
pop
jbe
fsubrs
xor
out
adc
cmpsl
dec
cs
jno
imul
stos
ss
dec
jbe
push
mov
lret
ss
dec
inc
jbe
cmp
int
sub
push
enter
mov
in
je
bound
data16
insb
imul
lret
in
sarb
ja
js
adc
shrl
into
arpl
cmp
outsb
iret
ss
test
jno
call
pop
repz
ja
jo
jb
imul
dec
shrl
mov
je
mov
mov
pop
lods
lahf
mov
xor
shll
inc
xor
and
popa
rorl
stc
jne
loopne
jo
ss
dec
ss
jae
jae
out
jnp
lret
cmpsb
pop
mov
xor
sbb
lret
insl
sar
sbb
jbe,pn
jne
lcall
js
push
jmp
jle
adc
lcall
adc
cmpsb
imul
cmpsb
jmp
js
lock
jnp
pop
shrl
int3
adc
jle
xlat
daa
or
jb
or
jbe
lret
in
jmp
jae
pop
imul
dec
negl
mov
ja
mov
adc
pop
push
or
xor
cmpsb
sysret
adc
mov
jo
xor
imul
rcr
xchg
jb
je
pop
js
mov
push
outsl
outsb
pusha
dec
jo
outsb
pop
outsl
bound
imul
adc
inc
cld
mov
bound
je
jb
gs
outsl
popa
pop
outsl
outsb
jo
cmp
incb
outsl
idiv
test
ds
jno
addr16
jb
decl
jae
clc
jno
outsl
addr16
inc
jno
pusha
push
imul
arpl
jg
cld
pusha
pop
insl
std
stos
cli
insl
adc
popa
insl
outsb
in
cmp
outsb
ljmp
pop
jo
dec
jno
bound
outsb
ds
inc
add
jg
js
aas
fs
insb
pop
inc
pushw
mov
aas
xchg
pushl
dec
insl
adc
cmp
outsb
push
ja
shll
push
mov
insl
jae
pusha
fs
insl
insb
inc
pop
jae
out
imul
insl
mov
addr16
std
jmp
push
ds
xor
dec
imul
outsl
jne
or
in
pop
addr16
inc
pop
push
ja
lock
push
pop
idiv
or
bound
add
addr16
pop
imul
cmp
add
fs
inc
popa
fs
std
dec
cli
jno,pt
pusha
lahf
testl
lods
pop
pop
inc
daa
fs
aas
repz
aas
dec
pusha
std
mov
addl
pop
jl
insl
push
insl
pop
mov
stos
cmp
sub
jnp
inc
push
inc
fisttps
movsl
jle
fs
filds
out
imul
push
out
pop
add
gs
dec
pop
imul
insb
fdivrs
lods
stc
in
clc
ds
pop
outsl
fs
jne
outsl
pop
popa
fldt
jo
inc
xor
jno
inc
inc
jo
shlb
xor
pop
std
in
iret
mov
cmp
push
popa
pop
push
insl
aas
push
fstpl
mov
dec
daa
inc
cmp
jae
jmp
jb
outsb
pop
add
mov
inc
adc
outsl
out
mov
inc
aas
dec
dec
inc
dec
sub
sub
inc
roll
outsl
lods
mov
adc
aas
ljmp
decb
lahf
out
ret
add
jo
inc
dec
pop
pop
insl
sbb
subb
sbb
outsb
ret
pop
pop
inc
sub
cmp
arpl
loope
pushl
clc
and
dec
pop
addr16
jb
cmp
std
jo
dec
aas
add
ds
aam
in
ret
popa
xor
jno
std
incl
ret
push
std
pop
lods
pusha
push
sbb
imul
std
inc
into
pop
imul
mov
pop
imul
mov
lret
bound
push
jns
outsb
jno
insb
dec
out
fld
arpl
or
clc
and
bound
cltd
imull
push
mov
test
jmp
pop
fs
push
cmp
pop
jb
imul
xchg
aas
bound
dec
popa
out
dec
or
inc
int
or
add
adc
gs
insb
insb
xor
addr16
aaa
pop
adc
cmp
push
pop
lods
pop
js
jno
outsb
pop
pop
insb
mov
je
sarb
mov
inc
inc
inc
and
in
addr16
dec
cmpsl
lods
rclb
pop
cli
dec
or
mov
mov
insb
pop
gs
jle
xor
repz
dec
dec
pop
bound
imul
jae
mov
cmp
addr16
pop
arpl
shrb
cmp
outsl
cli
sub
das
insb
mov
inc
cmp
sub
jg
addr16
inc
dec
cmp
das
sub
arpl
pop
pop
mov
scas
and
mov
outsl
push
xchg
inc
popa
gs
jno
fstpt
cmp
imul
xchg
je
or
dec
push
clc
popf
cmp
sbb
lods
dec
push
pop
inc
out
popa
mov
pop
cmp
icebp
jns
lods
addr16
insl
mov
xlat
push
test
arpl
insl
pop
insl
mov
mov
mov
mov
lret
dec
push
inc
loope
addb
int3
fwait
sub
jne
inc
inc
popa
pop
daa
pop
lcall
fcmovnbe
cmp
ljmp
lahf
imul
cs
sbb
loope
pop
stc
push
add
cmp
jo
clc
div
cmp
dec
cmp
dec
popf
fwait
sub
sub
mov
jb
pop
cmp
push
pop
mov
cli
xchg
sub
cmp
sub
and
ficompl
sbb
cmp
push
cmp
pop
adc
lods
push
pop
pusha
pop
insl
outsb
pop
xchg
cmp
push
cmp
pop
fwait
aad
jnp
ret
sub
arpl
add
dec
imul
jae
imulb
cmp
shlb
das
mov
pop
daa
insb
rcrl
and
pop
sbb
sub
cmp
aas
mov
mov
inc
push
insl
pop
mov
sti
mov
outsb
adc
aas
cmp
popa
cmp
ds
dec
inc
jae
cmp
mov
aaa
push
dec
in
cmp
aas
push
pop
dec
cmp
xor
mov
push
sti
shlb
aas
cmp
add
insl
outsl
or
push
mov
push
cmp
pop
loopne
ds
mov
xchg
test
rol
rcrb
adc
aas
in
lea
pop
jbe
push
cmp
push
pop
mov
inc
dec
sub
das
lret
add
test
pop
xor
or
dec
pusha
jno
sbb
in
or
push
shrl
data16
rclb
insl
jnp
aaa
pop
xor
outsl
xor
push
cmp
arpl
cmp
and
push
outsb
sbb
sbb
imul
stc
lahf
dec
cmp
dec
ds
scas
push
pop
mov
cmp
pop
jo
clc
mov
mov
aas
push
pop
add
mov
pop
cmp
out
jae
mov
inc
mov
dec
cmp
add
cmp
pop
test
aas
inc
cmp
add
aaa
jno
push
inc
dec
xor
cli
push
push
xor
pop
push
sbb
std
dec
fwait
xlat
inc
imul
cld
imul
clc
inc
imul
fildll
shl
arpl
pop
pop
popa
cmp
mov
inc
sub
inc
mov
adc
dec
inc
cmp
and
mov
stc
insl
pusha
imul
mov
outsb
mov
fimull
scas
mov
je
xchg
sbb
cmp
xor
xor
ds
xchg
sub
sub
jae
outsb
adc
imul
sub
pop
loop
jb
inc
cli
pop
adc
insl
outsb
rcr
sbb
xor
mov
imul
cld
jb
jno
gs
inc
jge
sbb
or
cli
aad
repz
rcr
sarl
ljmp
or
dec
mov
adc
jl
cmovnp
cmp
pop
stos
mov
out
and
sbb
xor
lea
pop
or
test
sub
add
jmp
pop
sbb
push
mov
mov
decb
std
jg
dec
xor
dec
inc
push
cmp
xor
es
imul
add
add
outsb
pop
fmuls
out
imul
ret
movb
rcrl
mov
push
pop
pop
add
sub
jecxz
into
lahf
mov
insb
fwait
add
jp
xchg
ss
in
pop
pop
pop
in
pusha
xchg
cs
aaa
orb
mov
aam
xlat
stc
sbb
daa
sub
scas
pop
dec
pop
daa
insb
cmpsb
adc
push
lcall
aam
mov
push
jae
cli
add
mov
pop
inc
js
gs
rcrb
jne
sbb
cmp
push
je
and
add
aas
adc
movsl
lea
repz
fcmovnb
jb
jbe
xchg
or
cs
mov
andb
inc
dec
fists
sub
dec
outsb
imul
mov
mov
jno
pop
arpl
rorb
pop
pusha
lds
addr16
inc
insl
cmp
xor
dec
mov
inc
jo
dec
and
popa
mov
dec
mov
outsb
gs
sbb
dec
mov
ja
and
imul
cmpsl
sub
lea
dec
incl
pop
xor
dec
mov
insl
jecxz
pop
iret
cli
xchg
loopne
sub
adcl
insl
pusha
mov
imul
pop
dec
jne
mov
pop
std
pop
std
jne
fsubs
adc
adc
pop
mov
ljmp
add
sti
je
aas
lods
pop
das
sbb
pop
idivb
mov
mov
psubw
iret
stc
mov
mov
cli
mov
dec
incb
mov
dec
stos
mov
mov
inc
mov
shrl
rep
sti
nop
ljmp
mov
mov
mov
in
pop
repnz
mov
mov
in
sti
mov
mov
mov
les
nop
fdivrs
out
mov
mov
in
lahf
in
scas
mov
mov
cmc
dec
repnz
psubw
repnz
scas
mov
les
cld
scas
movsl
mov
enter
leave
lret
leave
mov
rol
mov
iret
shll
lret
mov
aad
int
test
fistps
enter
mov
mov
cmc
jg
call
iret
aam
shlb
mov
test
ret
or
dec
mov
mov
pushf
jg
mov
les
shlb
aas
lods
mov
lds
testb
pop
push
lret
xlat
mov
or
loop
in
stc
les
repnz
test
out
mov
aaa
lods
mov
iret
in
inc
js
ret
mov
lods
pop
out
mov
in
xchg
lods
ror
imul
ret
out
andl
out
shll
jmp
lret
dec
jecxz
jmp
aam
idivb
ljmp
or
xchg
mov
lret
lods
mov
mov
pushf
mov
icebp
cmpsl
shrb
mov
lahf
test
enter
scas
jle
aas
nop
lods
shl
leave
rcrl
jns
xchg
add
idivb
sar
ret
pop
loopne
lods
scas
jg
mov
lahf
les
lret
hlt
movsb
movsl
in
mov
outsl
or
int3
mov
fld
in
lret
mov
enter
dec
stos
mov
scas
lret
faddp
mov
xchg
pop
shr
lahf
dec
lods
mov
mov
iret
lds
and
aas
fxch
mov
shl
mov
and
add
jae
scas
fbstp
iret
mov
enter
leave
mov
cmp
test
aad
sti
jno
scas
mulb
mov
scas
mov
dec
mov
lods
iret
movsb
mov
insb
icebp
cmpl
sbb
int3
enter
scas
mov
jle
xor
popf
mov
call
in
out
mov
lods
jg
mov
fidivrs
inc
cld
leave
push
jle
int
stos
pop
or
rcll
xchg
lret
popa
arpl
mov
into
cmpsb
mov
out
in
popa
lods
pop
int
jmp
lea
gs
fnstsw
pop
aas
in
outsl
ret
out
into
in
or
gs
mov
sbb
xchg
add
lret
lret
jle
stc
mov
lods
test
das
loope
daa
leave
aam
out
mov
shr
xorl
stc
pop
inc
push
mov
into
stc
rcl
notl
xchg
mov
dec
incb
iret
mov
les
adc
lret
mov
mov
mov
lahf
sti
mulb
loope
lods
mov
fstpt
cmp
andl
and
xor
mov
movsb
lds
sbb
int3
repnz
fistps
mov
fldenv
ret
sbb
ret
mov
mov
rcrb
mov
int3
ret
mov
mov
mov
pushl
adc
shll
rolb
lock
jmp
nop
push
mov
xchg
fistl
pop
loopne
pop
repnz
lods
mov
mov
mov
pop
dec
lods
mov
mov
adc
mov
mov
in
dec
in
xor
xlat
int3
mov
int3
in
add
leave
adc
adc
push
push
mov
stos
lods
cmp
pop
dec
push
scas
mov
shld
jg
aas
imul
cmpsl
shlb
leave
call
jmp
stc
xadd
jecxz
ljmp
stc
fdivrl
rcl
mov
xchg
sbb
mov
aas
mov
cld
lods
repnz
int3
cmpsl
iret
ljmp
fisttps
out
loope
xor
mov
sbb
rclb
lret
dec
mov
push
xor
fisttps
rolb
in
xorl
shrb
mov
jle
dec
shl
rcl
xchg
inc
inc
adc
rol
mov
mov
test
mov
rorb
pop
cmp
shr
outsb
fisttpll
int
mov
test
stos
leave
in
mov
xor
ror
adc
mov
in
sbb
mov
mov
mov
stos
lahf
lds
mov
leave
mov
enter
mov
aas
lret
mov
lahf
push
push
pop
mov
pop
fdivs
ret
jno
in
stc
out
or
sbb
ret
out
mov
mov
cld
ret
divl
sarl
jnp
mov
lods
fucomip
lret
sub
enter
adc
xchg
cmc
dec
pop
out
push
mov
inc
fildll
mov
rorb
mov
pop
stos
stos
out
xchg
aas
scas
out
enter
mov
leave
std
leave
fstpt
mov
movsb
mov
out
mov
jge
frstor
pop
add
lret
insl
xor
int
xchg
lret
psubsw
mov
mov
into
out
mov
mov
rcr
push
les
aas
or
push
dec
sub
stos
leave
stc
pop
add
cmc
mov
hlt
pop
push
andl
les
mov
fstps
sub
movsb
mov
push
ffree
mov
leave
rol
aas
lret
jle
xor
lahf
shr
iret
mov
mov
add
mov
mov
inc
clc
push
cmp
aas
into
ror
lods
mov
cs
xchg
ret
in
scas
mov
pop
outsb
sub
lret
sbb
test
stos
xchg
add
pop
rolb
das
std
adc
outsl
push
mov
iret
in
pusha
pop
mov
cld
aad
add
sub
rorb
mov
mov
dec
shrl
aas
aam
or
mov
mov
jp
jne
out
fistpll
xor
mov
dec
lahf
mov
mov
out
stc
ret
xchg
sub
in
int3
into
repz
xor
dec
lds
dec
mov
dec
iret
push
fldl
scas
mov
xor
imul
fstpl
push
ljmp
add
popa
push
loopne
pop
icebp
test
in
outsl
fildll
fldcw
mov
aas
mov
lods
scas
lret
call
stc
and
and
sub
fstp
dec
mov
mov
jmp
dec
ret
jmp
lds
bound
in
pop
cld
nop
incl
lahf
enter
mov
mov
daa
xchg
das
pushl
mov
mov
aas
in
iret
mov
fwait
mov
mov
pushl
or
cmpsb
shl
mov
hlt
mov
iret
or
sub
movsb
mov
iret
mov
pop
add
test
sahf
mov
int3
in
loop
push
mov
pop
dec
test
arpl
shll
fcmove
pushf
pop
adc
mov
cmpsb
enter
xchg
mov
shll
adc
xorb
mov
sbb
cmp
out
aas
mov
and
mov
mov
lret
les
not
lods
test
xchg
movsl
lahf
pop
xchg
aad
lods
mov
ror
je
pop
lods
jg
repnz
out
shll
scas
cmc
dec
lret
push
xchg
cmp
subl
xlat
aas
stos
jno
mov
dec
outsb
mov
mov
addl
les
mov
aam
ror
enter
pop
test
or
lahf
out
lahf
xchg
fs
popa
lahf
int3
out
mov
repz
mov
mov
aad
xchg
xchg
mov
mov
mov
in
ret
sarb
repnz
rcl
pop
mov
test
mov
rcrl
fildll
dec
das
iret
sub
fwait
mov
iret
loopne
pop
sar
dec
popa
jg
mov
mov
les
add
jmp
dec
sbbb
mov
adc
testb
in
dec
lahf
mov
loope
shlb
lock
jnp
mov
jmp
push
out
xchg
mov
fbstp
aam
pop
enter
orl
push
lahf
mov
xchg
jmp
ret
out
pop
sub
mov
xchg
ror
adc
sti
dec
mov
iret
int
mov
loop
rolb
pop
out
pop
dec
mov
nop
jg
fisttps
pop
mov
fwait
jb
mov
test
jb
gs
stos
pop
outsl
shl
bt
pop
mov
aad
call
shrb
ret
jae
cltd
sbb
int
mov
push
mov
sub
mov
sahf
mov
sub
into
sahf
sbb
xor
aas
mov
aad
ficompl
sbb
imul
paddsw
psubsb
xchg
xchg
mov
mov
mov
sbb
cmpsl
scas
scas
das
lods
mov
and
mov
lret
lods
mov
xchg
xchg
adc
lahf
cltd
int3
pop
shl
inc
lahf
lea
out
mov
or
mov
mov
mov
mov
adc
pop
mov
inc
leave
mov
jo
lock
filds
fs
scas
std
pop
out
cs
movsl
mov
test
mov
sbb
ret
xchg
icebp
inc
sbb
mov
imul
mov
mov
ja
mov
in
mov
idivb
inc
mov
mov
pop
mov
fcmovb
negl
test
sub
mov
clc
clc
pop
and
xchg
dec
test
out
leave
in
lds
mov
jg
jmp
lods
mov
add
scas
outsl
xor
sti
lock
sbb
inc
das
pop
or
mov
std
xchg
cli
or
cmp
cmp
test
pop
insb
movsl
ret
fs
pusha
outsl
or
jg
dec
daa
push
dec
push
lcall
outsl
outsb
bound
pusha
jno
push
fistpll
int3
fwait
mov
scas
lock
pop
imul
and
jno
xor
outsl
cli
sbb
outsl
adc
imul
std
and
outsb
lcall
daa
clc
outsb
std
ss
daa
sub
pop
sub
arpl
jae
jb
arpl
clc
jmp
fadd
and
push
imul
sbb
pop
jno
jg
out
gs
mov
mov
push
xor
push
sub
mov
pop
arpl
insl
outsb
insb
es
jne
pop
jb
push
pop
pop
imul
insb
outsl
arpl
dec
pop
pusha
insb
sub
mov
push
arpl
ficoms
das
ljmp
cmp
jno
pop
outsl
insb
insl
fs
ljmp
lahf
jb
imul
push
sti
adc
stc
filds
mov
push
dec
inc
cmp
cli
push
pusha
std
sub
popa
imul
push
jo
dec
add
jb
insl
jmp
mov
pop
fs
sub
outsl
pop
addr16
sub
frstor
xor
scas
mov
jb
imul
push
cli
lahf
mov
pop
pop
pop
jb
fs
mov
sbb
pop
dec
pop
insl
jae
adc
incb
insl
insb
imul
jg
clc
mov
dec
push
imul
pop
jno
lcall
mov
or
fs
jb
push
insb
gs
outsl
xor
sub
jg
arpl
pop
std
inc
aas
inc
pop
insb
lock
dec
cmp
inc
push
dec
decl
jnp
push
pop
imul
mov
sub
mov
fdivl
push
pop
outsb
pop
mov
pop
push
jg
cmp
dec
inc
pop
jo
daa
inc
pop
stos
imul
push
push
dec
lahf
add
and
mov
pop
daa
sbb
dec
dec
cs
sub
mov
pop
or
insb
daa
sub
pop
mov
sbb
sub
or
bound
jno
inc
pop
insl
gs
pop
pusha
aaa
sbb
jmp
mulb
popa
insl
dec
dec
bound
add
sbb
push
das
mov
mov
or
adc
daa
sub
dec
and
das
aad
jns
pop
sub
sub
push
daa
pop
push
ljmp
rdpmc
sbb
popa
push
pop
sub
and
or
imul
imul
dec
inc
pusha
bound
imul
add
sub
lods
sbb
push
dec
daa
sub
pop
mov
add
bound
insb
xor
sub
mov
mov
sub
cmp
push
sub
jp
sti
xchg
ljmp
addr16
pusha
gs
mov
xor
xor
roll
imul
mov
insb
test
xor
imul
pop
out
pop
inc
imul
cmc
in
mov
mov
and
sub
sub
test
sbb
pusha
pop
jo
xor
xor
stos
mov
adc
inc
fsubl
dec
imul
pop
daa
das
sub
and
push
pushaw
cmp
dec
mov
jecxz
push
pusha
bound
addr16
sarl
stc
jae
outsl
pop
and
dec
mull
xor
jmp
adc
pop
xor
dec
fs
push
sub
sub
or
arpl
notb
or
sub
inc
sti
test
pop
adc
mov
or
xor
sub
jecxz
sub
sub
inc
gs
rcrl
outsb
std
insb
popa
shll
popa
jbe
and
or
xor
arpl
dec
pop
cmpsl
xor
cmp
push
jge
insb
arpl
std
pop
push
xor
lock
loopne
pop
popa
arpl
bound
cltd
lret
cli
pop
arpl
cmp
cmp
pusha
sub
fbld
cmp
and
mov
pop
sub
lea
jecxz
pop
mov
in
and
sub
cmp
das
repz
cs
and
cmp
subb
cs
das
xor
xor
push
repz
pop
outsb
pop
xor
sub
jb
pop
sub
pop
cmp
fcmovne
lods
sbb
sbb
xor
mov
outsb
je
imul
sub
aaa
push
jae
jno
lods
sbb
inc
outsb
imul
sbb
dec
inc
pop
popa
and
cmp
loope
push
fs
ss
jne
pop
push
jno
push
dec
imul
adc
dec
insb
lds
inc
xchg
inc
pusha
dec
mov
xor
lods
xorl
dec
lcall
mov
arpl
mov
jecxz
push
xchg
pop
add
ja
jg
inc
outsb
jae
dec
arpl
push
stos
dec
cmc
inc
cwtl
addr16
arpl
cmc
out
arpl
outsb
cmp
popa
fs
mov
outsb
push
daa
sbb
fistpl
imul
bound
inc
dec
push
jo
xor
inc
adc
dec
jg
arpl
scas
in
cmp
inc
pusha
jae
pop
cmp
outsl
ja
dec
sub
xchg
mov
insl
or
stos
jno
arpl
outsb
in
push
sub
xor
jno
mov
pop
dec
push
fdivrs
imul
push
arpl
aas
imul
insl
dec
cmp
pop
xor
clc
cmp
arpl
push
lret
insb
imul
xor
sbb
inc
xor
xor
inc
inc
cmp
inc
inc
dec
dec
dec
inc
dec
dec
dec
dec
dec
push
push
pop
jmp
push
push
push
push
pop
pop
pop
ljmp
xor
rolb
dec
ret
insb
mov
idiv
push
dec
cmp
cmp
jae
popa
cmp
outsl
and
xchg
pushf
int3
pop
adc
sub
sub
jnp
pop
add
addr16
aas
cmp
insb
dec
jne
pop
mov
arpl
adc
fmuls
scas
inc
jecxz
pop
pop
lcall
or
mov
cmp
aas
push
inc
sub
insb
dec
gs
push
outsl
push
add
cmp
ds
push
mov
push
cmp
jo
adcl
imul
sub
jne
ds
inc
push
inc
and
pop
outsb
daa
pop
and
pop
jb
adc
push
xchg
cli
sbb
jb
scas
dec
aas
sub
push
mov
jmp
outsl
cmp
add
inc
mov
popa
pop
add
pop
imul
adcb
add
cld
incb
xor
mov
push
std
cltd
cmp
das
fisubrl
and
push
mov
add
and
mov
and
and
xor
mov
icebp
or
jne
inc
in
mov
mov
push
fidivs
jo
cld
xchg
mov
cmp
movsl
es
mov
push
imul
adc
mov
mov
mov
adc
adc
sub
pop
rcl
imul
shl
rorb
fstpl
sbb
inc
adc
jg
ja
stos
aam
stos
jae
jne
jbe
pop
fsubl
mov
outsl
dec
mov
jg
push
pop
cs
je
popa
jb
pushl
xor
sub
arpl
pusha
ja
or
outsl
fsub
lret
jle
add
das
mov
ljmp
pop
das
je
jne
mov
test
mov
sub
xor
xor
mov
inc
xor
jg
lea
fwait
sub
sub
xor
xor
sub
sti
das
cvttps2pi
sub
xor
jne
jle
xor
sub
loop
std
sub
xor
cs
pop
xor
sub
xor
xor
jmp
cs
sub
xor
das
adc
xor
sub
aam
in
jmp
decl
xor
and
imul
xor
lahf
xor
call
lea
dec
xor
xor
jb
jp
test
xor
das
ljmp
hlt
std
xor
sub
xor
jae
test
test
xchg
xor
in
aaa
into
aaa
stos
call
cmp
xchg
xor
xor
mov
push
add
mov
inc
xor
cmp
pushf
aaa
mov
inc
cmp
cmp
xor
cmp
cmp
ss
xor
cmp
xor
call
pushf
ss
xor
cmp
add
cmp
xor
mov
cmp
aaa
ss
push
cmp
jge
mov
pushf
cmp
clc
cmp
mov
les
aam
pop
fistpl
das
mov
sub
sbb
nop
sub
das
pop
sub
xor
xor
sub
xor
shrb
add
xor
cs
sub
xor
outsl
lods
icebp
mov
dec
das
dec
xor
xor
jecxz
xchg
xor
inc
loope
stc
xor
sub
int
shrl
xor
xchg
dec
xor
popa
xor
xor
in
pushl
leave
xor
xor
ss
cmp
inc
xor
xor
pop
aaa
jno
sbb
xor
push
cmp
xor
cmp
cmp
xor
cmp
cmp
ljmp
gs
cmp
cmp
ss
cmp
cmp
sbb
cmp
ds
push
cmp
cmp
lcall
cmp
ds
imul
add
sub
subl
das
movsb
add
mov
into
incl
das
add
add
or
xor
sub
sti
out
clc
outsl
mov
das
aad
out
cmp
mov
xchg
sub
incl
int3
sub
sub
xor
cmp
dec
xor
sub
xor
cs
jg
lret
in
pop
sub
xor
xor
sub
call
push
cs
cmp
inc
xor
mov
lcall
mov
xor
ss
ss
xorb
mov
ss
out
repz
aaa
outsb
lock
aaa
sbb
insl
data16
outsb
aaa
jo
jns
subl
aaa
fwait
aaa
lods
xor
xor
jecxz
lock
daa
xor
cmp
incl
pop
xor
xor
xor
cmp
add
call
icebp
aaa
ss
cmp
cmp
xor
aaa
mov
xor
aaa
inc
mov
fadds
cmp
mov
mov
ljmp
cld
decl
insb
cmp
mov
mov
aam
cmc
xor
pop
xor
cmp
cwtl
cmp
out
or
cmp
and
jl
jbe
lea
add
clc
cmp
cmp
ret
aaa
cltd
cmp
cmp
mov
pop
cmp
sub
das
xchg
sub
cs
sub
mov
das
bound
xor
das
fldcw
ljmp
xor
fcomi
incl
push
xor
gs
xor
mov
mov
mov
mov
xor
cs
xor
and
push
jp
addl
lcall
mov
xor
das
fbstp
xor
pop
xor
in
sbb
ljmp
test
xor
add
adc
and
shll
lea
mov
rcrl
jne
jge
cltd
cmpsl
xor
lods
xor
xor
test
cmp
xor
dec
xor
ja
jl
push
pushl
mov
cmp
cmp
xor
ss
xor
icebp
cmp
push
pop
fdivrs
jno
xor
jecxz
cmp
xor
aaa
add
ljmp
mov
cmp
mov
cmp
xor
ljmp
test
out
pop
cmp
xor
cmp
xchg
xor
and
lea
cmp
cmp
cmp
and
jo
adc
mov
jae
sti
sbb
sbb
lea
pop
xor
jl
fwait
add
dec
jg
movsb
xor
sub
xor
shlb
fbld
or
mov
pushl
xor
sub
cmc
xor
add
iret
dec
xor
scas
outsl
lea
add
xor
arpl
lea
sti
imul
ja
ljmp
xchg
movsb
cmp
shrb
aad
in
pushl
jmp
stc
cs
sub
xor
xor
outsl
das
ja
xchg
mov
das
jmp
sbb
xor
sub
xor
lret
aaa
in
aad
loope
sub
sub
xor
mov
movsl
sub
xor
xor
aad
pop
loope
jno
subb
xor
jmp
add
call
sub
xor
add
jg
dec
das
dec
xor
sub
ja
subb
xor
mov
xor
xor
xor
push
xor
imul
jle,pn
outsl
mov
movsl
xor
dec
jg
clc
xor
xor
xchg
xor
xor
imul
xor
aaa
adc
adc
sub
aaa
cmp
ljmp
addr16
xor
inc
das
pusha
sub
xor
das
mov
cmc
aaa
outsl
xor
sub
xor
xchg
xor
pop
sbb
test
dec
or
das
push
das
lret
mov
cmp
outsb
sti
sbb
js
add
jmp
icebp
push
arpl
andl
insl
decl
popa
je
dec
push
dec
dec
and
push
push
inc
push
inc
pop
inc
insb
imul
jp
jb
and
je
jb
popa
imul
xor
and
arpl
data16
adc
ss
and
xor
push
je
insl
imul
gs
dec
imul
dec
fs
mov
push
push
push
outsl
xchg
arpl
jae
mov
stos
pop
cs
iret
in
fs
je
arpl
fs
and
fcomp
dec
jns
je
jbe
adc
outsb
imul
fisubl
jae
mov
sub
popa
bound
in
fisubrl
adc
jo
pop
jnp
ret
xlat
or
jbe
and
jns
or
xor
faddl
jo
adc
push
push
fnstsw
add
xor
sub
push
and
fsubl
sub
dec
push
aas
jb
outsb
cmp
cld
and
inc
outsl
outsl
je
inc
sti
insl
pushl
outsl
outsb
imul
jae
faddl
inc
daa
inc
gs
fcoml
push
push
inc
bound
std
mov
and
gs
popa
push
ds
pop
inc
js
divb
fisttpl
push
adc
jns
dec
cmc
data16
in
jo
adc
fs
imul
insb
andl
jne
dec
dec
mov
inc
xor
push
fstpt
je
dec
lods
inc
jne
jb
adc
dec
pop
in
in
mov
imul
sub
push
inc
push
pop
popa
in
out
mov
sbb
dec
jae
stos
lock
xor
jae
pop
addb
adc
push
or
neg
cmp
xchg
jns
mov
inc
jmp
outsl
dec
push
and
mov
inc
daa
push
sti
imul
cmp
cmp
jae
and
imul
insl
jae
addr16
pop
add
or
add
add
push
push
push
aaa
push
ja
mov
bound
xchg
pop
jnp
add
sbb
adc
add
xor
out
mov
sub
xor
add
sahf
pop
js
jg
div
dec
ret
shlb
mov
out
ja
outsl
icebp
add
add
sbb
push
add
mov
cmp
pop
sub
repz
add
sbb
outsl
adc
pop
psubd
fucomi
fcmovnb
and
or
mov
orl
repnz
add
or
add
dec
xor
add
enter
sbb
mov
add
pop
aaa
add
jbe
jbe
imul
sub
mov
int3
push
jns
adc
call
pop
xor
add
stc
add
and
jl
idiv
lea
and
add
inc
push
add
add
push
inc
dec
sbb
jg
push
xor
pop
push
arpl
push
pop
repnz
mov
jo
inc
inc
pop
inc
dec
inc
push
and
sbb
add
nop
aad
pop
sub
xchg
inc
inc
adc
mov
jns
aas
stc
add
incl
rolb
nop
add
add
repnz
repnz
sub
cltd
shlb
jns
add
xor
pop
add
add
add
add
imul
lahf
stos
or
jg
sub
adc
jae
cli
mov
decl
add
add
add
jbe
sub
add
stos
mov
add
mov
xor
inc
jb
jle
jmp
gs
imul
outsb
addr16
or
gs
data16
insb
jne
push
and
gs
push
imul
dec
push
add
outsl
jae
dec
popa
outsb
fs
dec
popa
jae
inc
jb
outsl
jb
inc
je
jb
bound
jae
mov
jle
outsl
jbe
inc
js
and
jo
mov
in
testl
or
jb
pop
mov
imul
jae
jo
outsb
aas
fdivs
imul
pop
in
jne
je
sbb
xchg
pop
jae
add
push
divl
dec
outsb
outsw
adc
aaa
fstpl
add
mov
fstpt
adc
inc
mov
fs
jns
and
arpl
sti
jbe
insb
xchg
daa
push
stos
jae
outsl
outsb
aad
decb
jb
dec
outsl
popa
fs
add
mov
jb
jns
jns
testb
lods
jle
je
adc
or
push
outsl
outsl
insb
fbstp
mov
push
or
outsl
fbstp
and
inc
dec
dec
mov
add
inc
add
std
jmp
jmp
adc
pop
adc
pop
or
pop
or
call
leave
adc
mov
lea
adc
or
and
std
insl
or
mov
jp
call
and
incl
insl
fstpt
das
or
repz
and
xor
jns
aaa
xor
mov
out
ud0
inc
xchg
insl
mov
pop
xchg
sbb
dec
cmp
jge
or
lcall
mov
cld
lock
push
or
icebp
adc
add
mov
bound
push
test
jno
outsb
add
pop
cmp
movsl
dec
mov
mov
lcall
or
push
xorl
call
cli
or
out
mov
lea
push
or
inc
int
scas
sbb
xor
das
in
cs
pop
data16
gs
jo
pop
mov
ja
push
pop
push
psraw
sbb
xor
clc
wbinvd
pop
insw
lahf
inc
mov
pop
or
sbb
fs
int
push
jb
addr16
mov
ret
jb
jae
arpl
outsb
sbb
pop
arpl
je
subb
push
xchg
or
insb
or
jle
mov
cmpsl
xchg
ja
or
repnz
mov
jbe
push
sbb
outsb
arpl
int
mov
inc
js
inc
jb
dec
aam
in
repnz
and
outsb
je
je
adc
or
push
jae
xchg
mov
mov
int
xor
and
xchg
push
mov
jo
jecxz
xor
sub
xchg
shrb
push
out
sbb
push
push
fs
fcmovb
in
cmp
popa
addr16
lods
lret
fmull
mov
inc
dec
sub
fnsave
fstl
or
mov
nop
push
add
push
inc
dec
add
sbb
pop
ja
mov
jmp
add
add
add
add
adc
or
add
add
mov
int
xor
push
das
adc
mov
int
add
adc
push
lret
mov
dec
aaa
pop
inc
fs
mov
add
test
int3
push
cs
js
jb
mov
jb
nop
jmp
and
dec
jmp
jb
popa
je
out
add
inc
cs
in
xchg
mov
daa
rorb
stc
mov
dec
add
add
or
add
add
add
add
dec
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
