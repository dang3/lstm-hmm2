daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
sub
les
das
pusha
fnsave
add
jmp
fpatan
addr16
ud1
outsl
leave
test
stc
push
pop
pop
ret
pop
pop
fidivrs
mov
adc
add
mov
jbe
mov
into
or
adc
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jge
in
testb
sar
inc
jnp
mov
rcll
je
add
test
mov
dec
mov
mov
mov
mov
cmp
jne
test
or
jge
mov
push
lods
push
jbe
pushl
add
adc
repz
sbb
sbb
xor
out
imul
add
mov
jl
mov
inc
push
sub
movb
rep
stos
stos
push
adc
push
or
test
sbb
lea
mov
ss
and
pop
loopne
dec
fmuls
or
ffreep
push
push
inc
sbb
and
arpl
and
fdiv
mov
in
std
pop
push
loope
add
inc
mov
popa
adc
add
not
sub
xor
mov
mov
mov
in
mov
movsl
xor
loope
rep
cmpsl
xor
scas
jmp
cmp
pop
adc
rorl
add
dec
enter
in
idivb
out
cmp
xchg
inc
push
adc
mov
xchg
sbb
popa
xchg
mov
mov
jle
mov
int3
mov
dec
sub
xchg
pop
imul
xor
lea
mov
mov
adc
les
xor
or
ret
cmpsb
xchg
pop
rcl
dec
and
adc
push
sahf
mov
sbb
inc
push
cmp
inc
jmp
fxtract
pop
shl
mov
add
je
mov
dec
outsb
cs
je
aas
fstps
loopne
mov
out
dec
cmpb
jne
adc
xchg
sbb
ret
cmp
jae
mov
mov
push
push
mov
lods
mov
pop
pushf
adc
cmpsb
fcmovnb
lahf
mov
aam
lcall
xor
std
cmp
push
push
pop
pop
add
movl
add
popf
adcb
out
jne
adc
pop
lea
or
outsb
mov
mov
push
ficoml
push
push
inc
push
sbb
mov
xor
insl
je
xor
push
lea
adc
dec
enter
pushf
sbb
mov
outsb
xor
add
add
or
sbb
push
dec
enter
loope
adc
or
fucomi
and
jmp
or
sbb
fldt
or
xchg
adc
pop
shrl
js
lret
sub
adc
popf
or
ret
xchg
and
or
push
stos
or
out
inc
xor
push
mov
push
push
fstpt
test
imul
insl
nop
sbb
mov
push
pop
sub
addr16
xorb
sbb
stc
loope
ret
push
jae
push
adc
push
push
insl
xor
add
push
mov
add
sub
repz
jb
or
xor
push
push
xor
lcall
repz
js
jnp
faddl
cwtl
ss
push
sbb
pop
dec
subb
and
push
sbb
add
je
xor
adc
or
push
cmpsb
mov
push
scas
pusha
cmp
jne
lods
insl
xchg
lcall
jl
xchg
xchg
lcall
outsl
pop
lcall
jge
jne
test
ja
fisttpl
mov
mov
fwait
lea
adc
popa
push
pusha
push
mov
inc
inc
nop
pop
push
loopne
leave
adc
push
stos
filds
dec
xor
lods
fucomi
or
mov
std
ret
adc
leave
gs
pop
add
or
push
pop
lods
lret
clc
insb
add
pushf
add
stc
test
sbb
outsl
int
mov
dec
pop
push
insl
or
mov
mov
pop
jae
mov
xor
fs
cmp
xor
in
icebp
adc
lea
push
inc
push
testb
in
pop
fcoml
push
add
mov
data16
push
aad
add
xchg
nop
inc
push
rcll
inc
test
data16
adc
stos
fldenv
mov
ret
negb
cmp
or
scas
mov
ret
outsb
popa
mov
mov
sub
test
pop
sarb
aad
mov
pop
jae
push
or
pop
int
mov
push
mov
test
iret
mov
or
xchg
sbb
xchg
in
orl
enter
sti
inc
push
xor
add
dec
mov
cs
sbb
in
dec
jns
add
push
dec
pop
lods
cmp
add
dec
jne
scas
mov
and
add
mov
lock
test
rcr
mov
push
ja
mov
mov
and
xchg
movsb
fsub
out
adc
sub
clc
inc
mov
cwtl
fsts
in
lea
outsb
add
mov
mov
cmp
enter
adc
add
insl
push
push
pushf
mov
hlt
movsl
sbb
mov
imul
push
mov
mov
out
lods
sahf
clc
add
sub
inc
stos
lock
pop
sbb
sbb
jnp
test
adc
mov
pop
test
push
push
dec
or
or
sbb
pushf
sub
add
push
xchg
cmp
or
sbb
call
xor
int3
or
push
shl
xchg
or
nop
inc
imul
rcr
cltd
lret
outsl
shrd
sbb
inc
test
scas
push
and
mov
dec
idiv
push
adc
cmp
inc
sahf
xor
inc
aam
imul
scas
and
add
fldcw
push
and
aaa
sbbl
cmp
cmpsb
fucomip
push
or
and
fsubl
and
out
sbb
jge
xor
adc
popf
adc
or
xor
mov
push
in
inc
ljmp
mov
fsts
or
xchg
loopne
adc
or
xor
push
in
scas
arpl
dec
xor
pusha
rclb
int3
leave
sub
xchg
nop
adc
sbb
aaa
and
add
sbb
mov
add
inc
std
in
aam
inc
mov
test
loop
cmp
mov
int
jp
mov
mov
push
test
pop
pushf
lcall
nop
inc
loopne
jae
xor
movsb
and
movsb
add
adc
test
insl
clc
dec
pop
xchg
push
add
sbb
ljmp
and
mov
iret
add
sbb
cmovl
cmp
jb
push
add
imul
add
aaa
push
cmovl
push
dec
or
pop
push
loope
jo
sbb
or
inc
mov
pop
int
into
push
add
insl
stos
aad
mov
xor
mov
loop
add
mov
xlat
jne
scas
push
xchg
xor
or
sub
leave
out
dec
adc
adc
pop
xor
xor
sbb
aaa
sbb
mov
out
scas
stc
and
aas
push
data16
mov
mov
lea
out
lret
xchg
clc
daa
pop
xchg
pop
jne
inc
add
cmp
jb
or
test
xor
inc
ret
outsl
or
mov
fs
dec
mov
inc
mov
icebp
adc
inc
sub
inc
dec
mov
test
pop
mov
xor
mov
dec
data16
jl
addr16
inc
test
adc
imul
push
adc
mov
mov
test
or
mov
pusha
and
add
sbb
pop
pop
pop
test
and
inc
cmp
pusha
add
jne
push
and
decb
adc
inc
lret
xchg
adc
jbe
xchg
jns
add
push
cmp
push
sub
popf
rol
outsb
add
pop
inc
aas
adc
fsts
push
jecxz
and
or
lret
jp
jne
inc
jecxz
test
stos
and
js
adc
lods
xor
xchg
fndisi(8087
lods
movl
inc
out
stc
mov
push
cld
or
pushf
cmp
jne
sbb
pop
in
push
testb
jmp
or
pop
add
mov
pusha
test
lahf
mov
and
adc
or
dec
dec
and
xor
ss
push
out
inc
pop
inc
data16
jbe
dec
add
jnp
lcall
sub
addb
decl
sub
mov
xor
sahf
add
jp
inc
cmp
inc
xor
and
and
pusha
inc
mull
pop
loopne
adc
sbb
pop
arpl
arpl
ss
pop
ret
and
xor
dec
outsb
mov
sbb
dec
xchg
loop
cmp
inc
mov
mov
aas
sub
pop
clc
and
out
popf
add
sbb
adc
ds
clc
sbb
mov
test
push
es
jnp
in
push
jecxz
add
adc
xor
aas
mov
incl
inc
push
mov
js
testb
leave
mov
or
notl
push
dec
adc
rorl
adcl
in
push
push
jecxz
roll
and
push
adc
push
jmp
adc
push
leave
adc
movsl
in
xor
aas
mov
adc
jg
int
adc
cmp
and
jbe
and
cmp
test
mov
fdivrs
cmpsb
xchg
mov
or
lock
xor
repz
dec
hlt
add
and
outsl
adcb
sub
inc
cltd
sub
sar
out
sbb
lcall
sub
cwtl
enter
jnp
and
pop
pop
fs
mov
testb
ret
cmovge
daa
mov
outsl
or
xor
add
xchg
cmp
nop
and
push
pop
mov
sbb
xchg
adc
in
push
jle
xchg
lods
lea
mov
and
fistl
pushf
xor
shlb
js
xchg
add
insl
mov
mov
mov
testb
andb
nop
js
add
subl
jo
dec
sahf
adcl
dec
pop
xchg
addr16
pop
sub
dec
sahf
adcl
or
clc
jecxz
sbb
inc
lea
add
add
mov
add
fsub
scas
cwtl
les
dec
sahf
adcl
movsb
dec
xor
nop
lock
outsb
test
pop
leave
add
test
daa
mov
cmc
loopne
mov
push
add
flds
loopne
cmovo
mov
pushf
and
pusha
cmpb
in
stos
and
mov
add
sub
stos
cmp
add
mov
pop
es
or
adc
icebp
push
stc
in
imul
loopne
jb
call
outsb
and
aam
jb
push
ljmp
jne
ret
push
adc
mov
pop
xchg
fcomps
aam
push
pop
in
mov
add
fs
mov
js
mov
xor
cld
cmp
xor
xor
fwait
std
sbb
arpl
sub
pop
jge
push
stc
push
ret
mov
prefetch
or
sub
pop
pop
xor
or
adc
adc
mov
iret
push
adc
inc
idivl
sub
push
xor
insb
cmp
dec
xor
rol
add
add
and
add
mov
outsl
or
adc
jo
pop
mov
jmp
sub
mov
sub
pop
push
daa
je
loopne
or
add
or
or
sbb
add
outsb
mov
shll
push
dec
and
cmp
push
push
int
xor
js
inc
push
add
movsb
inc
testb
lret
ds
add
inc
sub
cmp
fcomps
scas
push
push
mov
lock
sbb
aad
sbb
out
or
test
je
mov
je
jo
adc
sub
rol
or
lds
verw
add
push
mov
pop
mov
int3
xchg
insb
inc
mov
inc
mov
mov
jns
push
push
std
lock
pop
fdivr
push
repz
push
dec
xor
or
mov
jb
pop
mov
and
or
leave
xor
xor
or
insb
add
adc
std
idiv
cltd
idiv
mov
mov
add
mov
cmp
jb
out
pop
lock
add
aad
cmp
jg
cmp
pop
aad
pushf
or
lea
lret
aas
aad
jmp
or
cmp
stc
pop
xchg
enter
movsbl
insl
sub
xlat
push
imul
push
pop
cltd
fs
sbb
add
fadds
popf
xor
adc
mov
jb
or
lcall
xchg
pop
mov
orb
and
xor
xor
aam
xor
ss
enter
xor
xor
mov
xor
xor
xor
pushf
cwtl
xchg
nop
xor
xor
mov
xor
jl
je
xor
xor
insb
push
xor
pop
push
push
dec
xor
xor
dec
inc
inc
cmp
xor
xor
xor
sub
xor
xor
and
sbb
xor
xor
adc
or
xor
xor
add
enter
out
mov
inc
xchg
inc
cwtl
inc
pushf
inc
sbb
jns
mov
sbb
sbb
mov
mov
sbb
call
xor
rcr
fsub
fs
xor
add
fs
clc
cld
bound
outsb
lods
test
or
out
cld
adc
fsubp
jne
pop
ret
push
add
fcmove
ret
and
outsb
sbb
pop
add
ret
push
or
int3
add
cld
pop
pop
inc
rol
inc
rolb
xlat
push
cmp
mov
imul
fnstcw
sub
add
sbb
mov
or
sub
das
and
daa
add
sbb
add
jg
mov
push
adcb
push
out
adc
pop
push
aas
inc
xchg
lea
or
mov
fistpl
mov
or
fidivl
in
in
and
outsb
xor
cmpb
jne
inc
or
add
or
fcomi
andb
repnz
dec
movsb
push
inc
fdivrp
add
inc
rolb
jl
mov
aam
push
sub
jbe
mov
cmc
push
pop
lock
ret
dec
jl
negb
push
xor
inc
loope
cli
pop
add
mov
mov
ljmp
inc
popa
mov
lcall
bound
divl
sub
or
mov
xchg
ret
pop
clc
hlt
inc
roll
rcrb
lahf
mov
jg
vmovss
push
cld
repnz
mov
adc
mov
jne
push
push
mov
or
xor
pop
pop
bound
push
cmp
mov
hlt
inc
lea
adc
add
fcomps
add
add
xor
push
mov
sbb
pop
dec
pop
add
add
add
dec
add
xor
es
hlt
dec
out
mov
lcall
dec
lcall
mov
imul
jo
imul
cmpsb
imul
std
iret
sub
add
push
add
adc
adc
pop
or
sbb
movsl
in
mov
mov
or
popf
or
das
add
mov
outsb
add
xor
adc
add
add
das
dec
cmp
or
sub
pop
sub
adc
fldt
out
arpl
movhps
imul
jnp
pop
sbb
xchg
daa
pop
xlat
jne
push
addl
rdtsc
lcall
inc
push
adc
sub
pop
or
icebp
testl
pop
xlat
orl
test
jno
popf
fnstenv
mov
pop
push
push
addr16
add
out
movsl
addr16
mov
mov
or
inc
adcl
cltd
int
arpl
sar
or
fildl
xlat
jne
mov
inc
aas
dec
mov
jle
pop
xor
shll
cs
push
xor
roll
dec
inc
dec
cmp
shll
adcb
add
mov
into
fsub
xor
iret
xor
dec
add
xchg
shll
dec
ds
shll
mov
xor
push
mov
addr16
ss
adc
push
inc
loope
or
xor
in
adc
pop
add
xor
sti
xchg
dec
mov
add
adc
and
xor
xor
pop
ljmp
adc
fcom
add
daa
cmpsb
imul
imul
nop
mov
cmpsb
imul
pusha
pop
push
dec
jne
imul
and
and
mov
add
nop
jl
adc
andb
add
or
daa
fs
nop
insb
pop
aaa
and
shlb
and
out
enter
xor
and
je
fidivrl
aam
into
enter
dec
shll
mov
movsb
sahf
xlat
jne
rcrl
stos
loopne
lcall
add
outsb
imul
imul
inc
popa
xlat
inc
and
adcb
ss
xorl
jecxz
add
inc
leave
mov
add
mov
push
enter
inc
nop
or
inc
shrb
add
loopne
add
push
repnz
pop
js
ljmp
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
aas
push
add
dec
xor
popa
jg
ljmp
fs
insb
add
push
inc
push
or
push
push
xor
test
pop
testb
sbb
push
or
popa
xchg
jo
mov
jg
xchg
inc
pop
clc
cld
add
sti
stc
cld
idiv
cld
mov
notl
and
or
clc
cmp
cld
stc
ljmp
pop
sbb
lret
push
mov
dec
leave
push
dec
bound
push
pop
insb
sbb
jmp
imul
sbb
sbb
sbb
push
pop
popa
sub
add
sbb
inc
ja
cmp
shll
xchg
shlb
mov
daa
and
jg
sub
xchg
ret
adc
sub
daa
cmpsl
xor
xchg
mov
inc
sbb
xchg
mov
pop
inc
push
outsb
into
fbstp
mov
mov
dec
inc
adc
add
add
stc
insb
mov
nop
dec
fdivr
add
daa
push
cmpsl
add
jmp
movsb
bound
std
or
fldenv
sti
sub
insb
add
stc
or
or
or
mov
mov
jb
outsl
mov
fistl
push
scas
nop
jmp
jo
jne
lahf
sbb
stc
jg
nop
out
push
daa
add
pop
daa
outsb
pusha
pop
imul
xchg
pusha
push
or
pop
xchg
mov
daa
pusha
pop
jno
adc
or
mov
bound
sbb
daa
jl
or
mov
out
or
mov
call
popaw
mov
jecxz
dec
decl
das
decl
adc
outsb
test
mov
je
dec
add
mov
push
std
shll
fs
mov
cmpl
testb
clc
add
iret
push
mov
dec
push
dec
test
xchg
push
push
cmp
or
lds
jb
push
loope
push
push
fs
std
xchg
or
inc
cmp
pop
add
and
push
dec
addb
hlt
fistpll
call
jno
mov
or
or
test
or
sbb
lcall
lds
push
ret
mov
push
dec
push
dec
cmpl
test
push
arpl
sbbb
or
or
or
lcall
in
outsl
mov
or
imul
or
lret
das
jg
fistpll
dec
or
mov
mov
loopne
cs
stc
mov
imul
push
push
push
call
fnstsw
call
push
rcll
push
jle
lock
in
sti
std
popa
ds
xor
cld
testb
cmpsl
cmpsl
mov
icebp
add
scas
push
xor
xor
test
xchg
cmc
orl
push
sti
idiv
dec
dec
testl
test
clc
sti
sub
ljmp
mov
jnp
call
lock
mov
stc
jns
pop
loope
fcompl
xchg
cltd
dec
addr16
mov
aaa
jl
loope
cmp
pop
or
addl
dec
xchg
jmp
call
jp
or
lret
jns
adcl
cmp
in
jle
ss
pop
pop
jg
and
bound
mov
cli
mov
dec
mov
sub
fdivrp
mov
mov
xchg
sahf
fstl
mov
idiv
sti
dec
push
divb
gs
in
aas
das
std
xor
in
cmpb
ljmp
mov
out
clc
push
push
std
and
in
mov
push
in
push
cmp
cld
insb
sti
popa
repnz
lock
or
mov
insl
xor
mov
mov
xchg
sbb
pop
cld
clc
std
jmp
fnstsw
in
sub
out
and
xlat
stc
push
in
pop
xor
push
push
das
or
gs
loope
out
das
pop
jle
push
insb
adc
inc
xchg
jl
in
mov
push
loopne
sub
in
and
pop
lcall
in
mov
and
mov
mov
push
inc
fisttpl
add
jg
inc
insl
std
insb
xor
testb
pusha
sbb
push
outsb
mov
jbe
inc
ret
outsl
xor
in
daa
pop
sbb
mov
cmp
pop
sarl
pop
pop
dec
mov
addb
dec
mov
mov
push
dec
adc
add
data16
fwait
iret
aaa
jg
loope
and
push
enter
sbb
push
mov
dec
in
push
sbb
cld
mov
add
adc
insb
dec
test
idivb
clc
outsb
sbb
cmp
insl
sub
jnp
dec
push
jge
push
jo
lret
in
dec
jl
pop
jle
out
cs
arpl
xchg
and
dec
popa
xor
mov
mov
rcr
dec
xchg
xorb
add
mov
cmc
cmc
mov
adc
dec
mov
dec
jl
fistps
in
push
in
data16
loope
inc
mov
pop
xchg
and
push
out
out
jle
popa
push
cli
mov
cmp
jb
xorb
inc
lcall
mov
push
test
in
decl
jb
jecxz
out
int3
pusha
mov
and
sub
cld
fs
jo
or
push
dec
loope
dec
fisttps
movsb
mov
cld
in
aad
inc
jmp
push
addb
iret
push
dec
mov
lock
or
add
add
add
dec
push
decl
push
or
jno
dec
push
mov
cmc
inc
mov
sub
adc
dec
fs
fstpt
cs
in
sbb
mov
gs
mov
xchg
cmp
push
loope
pop
loopne
and
std
jno
mov
sbb
pushl
mov
add
mov
scas
mov
cli
mov
and
cld
dec
jge
mov
fwait
call
stos
pop
test
addr16
add
mov
stos
jo
daa
xorb
or
and
flds
int
xor
cmpsb
push
pop
ja
mov
or
or
test
test
xor
loop
fsubrl
fisttpl
dec
pop
ret
in
in
shll
or
jecxz
cmp
loopne
in
out
rep
jo
popa
inc
pop
out
dec
add
mov
mov
add
mov
cmpsl
bound
stc
mov
in
in
dec
out
cmp
idiv
xchg
pushf
mov
incl
cmp
xor
jg
incl
outsb
adc
jmp
loope
inc
std
xchg
orl
jnp
cli
outsb
push
mov
lock
loope
dec
dec
xchg
jg
bnd
add
sub
shrl
mov
out
xorb
push
mov
rcr
insl
in
sbb
mov
inc
out
dec
test
add
push
inc
loopne
mov
or
jg
dec
pop
dec
jmp
jb
lahf
dec
bound
mov
lock
in
dec
imul
aas
dec
inc
mov
cli
jl
loope
popa
jo
in
dec
daa
cmp
gs
sub
int3
int
mov
add
incl
jle
in
lret
rolb
jae
mov
clc
test
ficoml
sub
xor
xor
sbb
icebp
ret
add
add
cli
leavew
fldl
add
adc
mov
testb
sbb
daa
test
xchg
fistps
adc
cmp
ds
sub
and
mov
std
bound
das
pop
test
adc
outsl
mov
testl
mov
mov
imul
stos
mov
dec
xchg
testb
or
or
dec
clc
adc
sbb
pusha
add
filds
roll
nop
imul
push
or
lea
xor
sti
popa
in
out
lahf
sbb
dec
pop
ss
mov
mov
cmc
cmp
mov
pop
insl
push
lock
add
lods
inc
arpl
dec
mov
les
clc
inc
idivb
testl
inc
jnp
ja
add
test
or
or
leave
in
jnp
imul
dec
mov
lret
jnp
push
mov
ret
cmp
les
in
dec
adc
in
add
mov
pusha
orl
out
cld
test
jl
out
jns
test
in
mov
in
test
xchg
lret
repnz
hlt
or
fs
cli
hlt
dec
in
mov
mov
sti
jge
dec
in
fistpll
jg
popa
or
mov
sub
mov
jp
and
sub
cmpsb
push
and
loope
das
pop
mov
add
sbb
pop
cmp
in
add
jle
pop
inc
stc
arpl
push
add
icebp
andb
repnz
test
jle
mov
cwtl
mov
sbb
or
push
jg
das
pop
std
dec
jge
pop
repz
idiv
jle
cmc
sub
imull
ljmp
test
call
mov
in
in
ss
in
jmp
test
ljmp
lock
lock
or
mov
cld
cld
xorb
push
data16
stc
mov
and
sub
pop
dec
or
in
push
fimull
shll
repz
lret
in
mov
out
adc
sub
cli
dec
mov
sti
insl
pop
push
stc
cmc
dec
xor
dec
mulb
push
cmp
sub
or
cmpsb
imul
inc
aaa
lret
test
cld
dec
loopne
add
outsl
or
or
inc
lcall
push
arpl
repz
dec
pop
mov
repz
repnz
fcomip
clc
out
mov
mov
or
stos
and
in
lcall
push
or
cli
std
push
shll
lret
call
cmp
inc
jge
jb
add
outsl
ficoml
jmp
lds
push
setge
fwait
int
movsl
stc
dec
out
mov
jns
pop
data16
xchg
cmpsb
fwait
clc
out
mov
mov
loope
cld
repz
pop
fwait
rcpps
push
in
xor
test
inc
push
dec
mov
mov
push
jb
xchg
cmpb
add
inc
xorb
clc
int
add
cmp
iret
pop
jnp
clc
pop
xlat
sbb
xor
mov
lds
pop
test
pop
sti
loope
mov
loopne
add
pop
sub
pushw
cmpb
outsl
mov
mov
xlat
jle
or
fldt
or
aaa
mov
std
jg
cmc
imull
pop
outsb
add
xchg
js
movsl
outsl
std
mov
inc
popf
out
dec
lods
divb
cld
addl
std
xor
add
xor
les
pop
clc
insl
add
inc
incl
insb
fnsave
filds
int3
mov
or
jle
outsb
jmp
dec
lcall
add
addl
or
inc
clc
loop
jo
xchg
push
dec
je
or
addb
dec
mov
push
ss
or
ljmp
adc
cmp
out
daa
sarb
test
in
mov
add
fucomp
jg
add
les
xchg
ret
pop
xchg
xchg
or
loopne
sub
mov
fstpt
mov
xor
dec
mov
jnp
sub
push
clc
or
sbb
inc
mov
xchg
sub
rorl
or
outsl
stc
data16
mov
sti
and
push
push
adcl
insl
lahf
in
dec
in
outsl
call
push
add
stc
xor
push
adc
mov
jns
je
sub
stos
jnp
mov
mov
rcrl
mov
and
dec
pop
in
dec
sahf
les
add
inc
add
subb
outsl
clc
ja
std
loope
sub
inc
cli
xchg
add
xor
decb
jp
test
lahf
mov
xlat
cld
pop
divb
inc
cli
lcall
roll
ret
cmp
cltd
ret
popa
fucomi
pusha
pop
pop
add
add
loop
cli
or
out
xchg
push
lret
pop
sarb
dec
jg
sub
push
push
bound
in
xor
xchg
addr16
mov
nop
add
cmc
repnz
pop
repnz
pop
std
out
loope
pop
xchg
out
inc
clc
jecxz
rolb
shr
mov
out
xchg
xchg
out
stc
frstor
sub
fwait
std
mov
lock
mov
mov
and
or
pop
mov
inc
cmp
mov
lret
pushl
mov
cmp
xorb
in
hlt
sbb
fsub
or
push
push
pop
pop
push
pushl
mov
dec
out
add
sub
dec
mov
jle
dec
cld
inc
jo
sti
sub
aaa
out
jo
mov
lret
das
hlt
push
xchg
addr16
je
xlat
or
lret
test
or
sbb
xor
jo
or
ds
insl
ljmp
mov
dec
push
mov
inc
jecxz
xorl
pop
mov
das
icebp
push
sbb
iret
or
adc
inc
push
jno
dec
xor
add
jns
dec
inc
pop
je
ds
mov
bound
dec
push
fldt
in
adc
or
pop
add
mov
dec
xchg
dec
sbb
mov
outsl
rcrb
adc
or
or
fcmovbe
push
aad
js
ss
ss
inc
push
adcl
test
mov
mov
or
push
les
add
inc
stc
dec
pop
lds
mov
stos
xor
std
inc
mov
mov
sti
stos
xchg
lods
fnstcw
mov
and
std
aam
add
push
dec
pusha
jmp
lcall
xchg
pop
push
ja
jg
sbb
xchg
or
pop
xor
push
stc
mov
aaa
loopne
xchg
sbb
mov
mov
movl
cmp
jg
adc
cs
pushf
leave
shlb
cmp
sbb
scas
adc
sub
loope
mov
xor
cs
sti
push
sti
xor
sahf
xor
dec
dec
or
cmp
mov
mov
and
or
inc
pop
xchg
imull
sbb
mov
in
adc
sbb
mov
mov
sbb
dec
push
cld
sub
cwtl
xor
sar
in
iret
push
dec
or
sti
aas
pop
stos
mov
outsl
fisttps
enter
dec
mov
cwtl
cld
push
int
mov
inc
push
push
inc
ret
mov
mov
dec
jmp
cmp
xorb
pop
push
or
mov
cltd
pop
dec
out
in
out
jle
pop
out
xchg
arpl
or
std
fwait
inc
lcall
push
sub
sub
cmp
dec
leave
adc
ret
clc
xor
insl
aas
lods
and
or
push
jecxz
add
fists
insl
or
out
cmp
mov
fdivl
xchg
data16
push
jmp
fcmovnu
jg
dec
dec
les
sbb
outsl
sbb
push
scas
insl
cmp
mov
and
jle
inc
addr16
sub
test
cmp
sbb
addr16
add
mov
xor
jmp
xchg
jnp
inc
cmc
cmc
pop
outsb
cli
addr16
xor
aam
mov
arpl
mov
ja
xor
dec
popf
cmp
in
xor
stos
hlt
push
push
in
in
mov
add
outsl
mov
clc
jmp
pushf
lahf
cli
pop
pusha
jle
icebp
pop
orb
pop
mov
mov
push
dec
insb
aaa
jl
add
repz
ja
lods
adc
add
enter
mov
pop
or
repnz
mov
or
or
push
inc
fidivrl
sbb
push
loope
cmp
or
lock
daa
lcall
sub
scas
std
das
add
mov
aaa
in
jno
mov
aaa
decb
or
push
add
mov
lret
xchg
loop
test
aam
shl
sbb
fildll
mov
dec
in
out
mov
add
ret
and
dec
cmc
jmp
incl
insl
sub
in
mov
insl
dec
in
add
mov
sbb
clc
out
test
ljmp
lock
push
test
aaa
or
adc
call
cmp
fbld
mov
cltd
sbb
pop
mov
insl
jge
cmc
cld
or
mov
inc
mov
xchg
adc
jg
incl
cld
jo
subb
inc
or
push
cld
lcall
hlt
cmp
insb
pop
sti
jae
int
inc
mov
ret
xor
push
cmp
cmp
icebp
mov
insl
fldt
sub
jge
adc
dec
mov
sub
mov
addb
mov
xor
sar
call
jno
test
add
or
mul
out
dec
jne
push
rol
pop
clc
movl
push
out
mov
cltd
add
add
pop
mov
mov
push
lock
fistps
jl
out
dec
loope
add
fucomi
pop
or
stc
ret
or
inc
add
add
jo
pop
inc
incl
cld
inc
sub
arpl
mov
dec
orb
jbe
mov
mov
add
sahf
cmp
mov
xor
xchg
aaa
cld
push
test
insb
mov
call
lds
test
cmp
lret
loop
mov
outsl
add
jecxz
out
adc
daa
jb
cmp
ffreep
in
fldt
scas
cmpb
add
test
loop
test
orl
insl
fcmovnbe
test
inc
test
or
mov
push
in
sti
cmp
jb
xor
add
xor
add
fisttps
jp
push
mov
xchg
add
subb
inc
cld
test
xchg
add
add
xorb
fucomi
std
jmp
mov
das
call
dec
or
in
xor
mov
out
add
mov
or
or
and
aad
repz
pop
mov
xchg
dec
mov
push
jb
or
rorl
inc
push
xor
pop
jmp
mov
cli
cmp
jae
clc
sbbl
repnz
mov
bound
inc
pop
outsl
sbb
insb
shr
xchg
mov
sti
cmp
sub
sbb
or
cs
insl
loope
sub
std
andb
jae
xorl
push
cmp
stc
fadds
fistpll
popf
aas
push
cmp
mov
outsb
inc
xchg
or
sub
clc
das
insl
ja
jb
xorb
sbbb
jbe
xchg
inc
push
mov
mov
push
ss
jno
mov
inc
jl
sbb
std
out
pusha
sub
mov
adc
fbstp
sbb
fisttps
decl
rolb
sbb
mov
frstor
mov
fcmovnb
xchg
out
notb
loop
test
mov
pop
dec
xchg
stc
andb
lret
in
lret
cmp
dec
cld
mov
jg
sbb
daa
xchg
ret
sbb
mov
in
insl
xchg
sbb
cmp
jecxz
adc
push
cmp
std
sbb
cld
inc
or
jl
pop
jns
pop
popa
cmpl
std
dec
mov
sbb
xor
inc
scas
mov
imul
fucomip
das
shl
ja
cs
in
cmp
xor
icebp
mov
je
mov
jg
imul
xor
mov
xchg
ret
inc
hlt
fldl
pop
popf
aaa
sbb
insl
loopne
lods
out
dec
scas
test
sahf
cmp
inc
or
popf
dec
hlt
pop
dec
jno
out
and
add
jmp
sub
bound
in
addl
lcall
dec
je
add
cmpb
push
cmc
sbb
shll
mov
hlt
mov
mov
pusha
sbb
subl
and
pop
push
add
inc
sub
idivl
clc
fcom
ret
xlat
push
mov
add
sub
out
or
imul
pop
and
outsl
add
cmp
sbb
ljmp
dec
outsl
add
jecxz
aaa
sub
mov
pop
clc
stc
mov
mov
repz
jne
push
jge
std
mov
cmp
std
mov
xor
das
fadd
jl
adc
data16
stos
dec
sbb
adc
lret
aas
std
mov
outsl
cmp
ficomps
and
fnstcw
inc
mov
cmp
mov
fimuls
jg
adc
incb
mov
inc
pop
jmp
jno
cmp
jae
sub
sbb
sub
iret
enter
hlt
xor
frstor
out
clc
hlt
lret
filds
sti
cld
addb
sarb
jge
cmp
xor
pop
mov
pop
loopne
int3
xor
mov
cmp
mov
mov
call
or
add
or
cmp
out
xchg
xor
jb
outsl
pop
mov
lret
inc
inc
arpl
jb
mov
call
imul
pop
pop
mov
and
jno
push
sar
ret
lock
sbb
test
xchg
sub
jmp
ret
test
jno
adcb
mov
push
inc
add
inc
jae
addl
push
insl
mov
or
mov
testl
and
addl
xor
test
push
jmp
outsl
and
in
std
pop
aaa
push
je
ds
or
jmp
stc
mov
xchg
inc
call
sbb
jb
mov
pop
push
mov
dec
lcall
test
mov
into
insl
pop
xchg
lock
sbb
sbb
repnz
mov
xchg
sti
cmp
call
and
jb
or
pop
mov
aam
sbb
cli
lret
lcall
or
pop
mov
roll
add
jns
outsl
jo
fnstenv
or
push
dec
add
aaa
mov
dec
std
sbb
fsubl
fsubrl
insb
sub
stc
and
sbb
test
out
in
iret
fs
pop
sub
jbe
cld
daa
clc
jae
dec
dec
dec
inc
cli
data16
cs
daa
jge
pop
movsl
pop
pop
push
ret
cmc
mov
in
std
adc
pop
mov
jmp
popf
sub
push
data16
scas
jle
rcll
lock
std
dec
ja
ja
sbb
lahf
addr16
dec
arpl
shlb
lock
cmpsl
mov
push
test
cld
icebp
add
jg
stc
js
in
loop
jl
add
data16
sub
xor
or
jge
hlt
jmp
jo
dec
arpl
movl
or
mov
rolb
jle
cltd
xorb
ja
mov
jae
aaa
jge
cli
subl
pusha
mov
orb
mov
mov
mov
mov
and
mov
popa
ds
call
idiv
bound
mov
push
mov
icebp
mov
jecxz
sub
cmp
push
fistl
imul
ret
shlb
popa
idivb
insb
sbb
loope
inc
jmp
and
push
push
cmc
sbb
mov
out
scas
sub
jo
popa
add
lret
inc
pop
xchg
rorl
sub
push
inc
addr16
push
addr16
inc
rcrl
add
gs
cmp
ja
mov
shr
pop
cmc
jl
cmp
ljmp
sbb
addr16
xor
dec
pop
ret
inc
aad
dec
cmp
cld
lcall
pop
cmpb
cmpb
fisubrl
dec
not
xchg
dec
dec
dec
lahf
mov
aad
into
mov
adcl
sub
push
sbb
add
fs
gs
sub
xor
dec
push
mov
pop
xor
rorb
jg
loop
dec
outsl
mov
xchg
loope
daa
push
mov
jge
cmova
test
jne
mov
mov
lock
mov
call
push
xchg
add
mov
sbb
insl
push
sub
imul
popf
sbb
addb
in
xchg
test
mov
push
arpl
dec
push
push
pop
cltd
pop
stos
mov
dec
loopne
xor
mov
jbe
es
jle
sar
lods
mov
dec
dec
mov
les
pop
sub
pop
adc
dec
out
in
sub
in
add
mov
xchg
frstor
jle
jp
mov
daa
mov
push
popf
sub
sahf
or
pop
mov
mov
jge
aas
cmpb
mov
aad
pop
sub
mov
shrb
fstpl
jmp
xchg
ja
iret
rolb
imul
pop
xor
push
daa
xor
out
xor
clc
add
faddp
sub
mov
and
lock
bound
aaa
push
pop
dec
mov
xlat
jecxz
xchg
test
icebp
hlt
loope
dec
cmp
jno
inc
cmp
add
sbb
sub
lcall
in
xor
ss
icebp
jb
mov
mov
push
lret
test
lret
sbb
or
incl
pop
lock
vdivss
dec
out
xchg
cmc
inc
add
xorl
les
out
or
aaa
jbe
dec
lahf
jnp
stc
inc
xchg
mov
cmc
adc
dec
clc
adc
mov
inc
icebp
addr16
test
outsl
imulb
inc
push
and
insb
movsl
jmp
lds
movsl
pop
fwait
ljmp
data16
dec
jne
test
mov
ret
jmp
sub
rolb
repz
out
clc
fnstsw
push
mov
sbb
mov
rol
sti
popa
xchg
jge
cmp
inc
jbe,pn
sahf
pop
or
loopew
xorl
repz
and
xchg
sbb
push
push
call
and
int
loope
xor
jnp
pop
icebp
sbb
and
enter
nop
test
mov
mulb
or
popa
aas
sub
mov
scas
repnz
push
lcall
fs
jnp
ljmp
mov
mov
adc
lods
pop
loopne
cmp
push
mov
cltd
mov
divl
add
test
stos
mov
and
lret
iret
pop
cmp
dec
mov
and
cli
push
aas
mov
out
popa
pushf
fldt
push
nop
cmp
aam
ret
or
fildl
sbb
push
lahf
mov
movsb
jns
in
xor
dec
or
mov
in
loope
testl
dec
push
loopne
pop
dec
mov
in
xor
outsl
lds
push
adc
xchg
mov
or
dec
test
pop
mov
xor
inc
in
loopne
dec
shll
int
ror
insl
mov
sti
push
dec
dec
leave
test
dec
in
ja
inc
mov
add
out
adc
and
cli
jg
loopne
cs
push
clc
push
loope
sbb
push
cmc
outsl
add
negl
mov
jg
fisubrs
add
outsl
pop
xchg
les
push
pop
jge
mov
add
test
out
and
add
dec
mov
loope
push
shll
pop
aas
jge
andl
movl
pop
or
std
mov
jo
fisttpll
xchg
adc
xchg
sub
fnsave
jno
push
lret
shll
loope
xchg
xor
or
xchg
jp
add
pop
in
push
xor
lods
lea
push
and
add
cmc
pop
sahf
movsb
repnz
testl
dec
push
test
insl
jno
or
mov
mov
sub
movsb
jl
cmc
sbb
adc
jne
cmpsl
inc
sub
mov
pop
icebp
test
movsb
cmpsb
fucomip
cld
dec
pop
mov
js
popa
pop
hlt
notl
push
dec
sbb
cmp
mov
cmp
add
jnp
lds
sbb
popl
iret
push
push
push
jle
or
movsl
pop
jge
xlat
mov
push
xorb
xor
or
sbb
aad
or
shrb
jne
mov
dec
inc
sahf
lea
mov
push
das
inc
add
test
aas
test
mull
mov
leave
aam
ja
pushl
fmuls
fwait
insl
jl
xchg
and
push
xchg
or
or
pusha
xor
cmpl
xor
orb
inc
test
mov
arpl
jns
aam
call
ret
jbe
mov
cltd
xor
jno
cmp
mov
ds
jo
pop
daa
mov
pop
mov
xor
sti
add
push
jmp
insl
outsl
pop
popa
fisubrs
dec
push
sbb
jge
fwait
ret
sarl
mov
xor
push
inc
cmpsb
lea
icebp
or
shrl
sbb
mov
push
sbb
sbb
out
pop
and
xor
cmpsl
sub
fldcw
repnz
movb
inc
ja
or
sbb
pop
mov
jge
lds
les
lods
daa
inc
add
push
cltd
inc
jnp
add
adc
mov
pop
jns
sub
das
cmp
adc
fisubrl
rolb
lret
xchg
push
pop
jle
add
push
add
dec
dec
mov
mov
mov
fwait
out
loopne
jg
lds
cmovnp
dec
sbb
lea
sub
dec
gs
inc
in
sub
outsl
xchg
clc
imul
mov
jne
sbb
sbb
lods
sub
push
pusha
cmc
jne
inc
xchg
add
xchg
sub
mov
sbb
das
repnz
stos
sbb
test
push
movsl
subl
mov
mov
mov
arpl
jae
or
jns
arpl
push
pop
push
cmpsl
dec
sbb
pop
push
jg
add
push
mov
push
push
inc
sbbb
leave
push
add
lds
pusha
pop
imul
cmpsb
outsb
cwtl
mov
test
cmp
mov
aas
fwait
test
dec
sub
in
inc
sub
daa
orb
jg
mov
push
mov
sub
push
xorl
insb
fists
call
dec
dec
adc
test
subb
adc
iret
xor
push
clc
mov
jns
pop
push
rcrl
dec
xor
cmc
sub
fisttpll
inc
jo
sub
cli
aaa
push
lret
mov
imull
ret
add
ljmp
pop
inc
repz
add
jno
dec
in
sub
and
push
sti
outsb
sti
cli
outsl
lds
add
mov
notl
js,pn
xchg
sub
and
sub
adc
push
fsubrs
insl
insl
out
dec
dec
stc
mov
imul
inc
add
je
out
mov
gs
aas
jle
adc
mov
cli
dec
xchg
xchg
sub
addl
inc
loopne
inc
mov
mov
or
xchg
fldenv
add
loopne
mov
test
pusha
sbb
out
mov
pop
and
mov
je
xorb
lea
fwait
or
sbb
sbb
loope
cli
pop
lds
mov
ljmp
cld
out
ret
and
pushf
sub
push
pop
imulb
jns
mov
outsb
fs
sbb
xchg
xchg
hlt
je
jle
push
rcl
push
addl
dec
inc
mov
imul
sbbl
clc
sbbl
add
mov
cld
insl
out
repz
push
aaa
icebp
sar
adc
push
addr16
dec
rcll
jno
in
sub
hlt
mov
xchg
mov
jne
popa
inc
xchg
sub
mov
pop
mov
xor
sbb
mov
mov
jb
sbb
dec
out
xchg
sub
dec
inc
shl
fnstenv
add
rclb
test
testl
push
mov
pop
or
or
add
mov
cmp
dec
in
sub
sarl
lret
lock
or
cmp
test
adc
shl
add
cmp
sti
outsb
or
jnp
push
sbb
icebp
cmpsb
lret
inc
out
push
loopne
sub
pop
mov
outsb
gs
or
test
fstl
mov
or
or
mov
mov
add
das
and
filds
popl
adc
addl
xlat
push
lods
int3
outsb
mov
in
icebp
cmp
push
jg
sbb
mov
or
leave
xchg
iret
subl
stc
rorl
sub
xchg
mov
ljmp
cmp
add
loop
jg
stos
jo
and
imul
fiadds
loope
sbbl
aad
mov
pop
mov
clc
arpl
adc
iret
mov
ret
xchg
lock
leave
in
and
cmpsl
sub
add
fwait
clc
mov
mov
inc
jae
loopne
iret
mov
xchg
jnp
adc
mov
adcb
jp
dec
mov
hlt
pop
sub
popf
and
jmp
adc
aaa
data16
jne
cli
test
aaa
pop
loopne
jns
insl
cltd
jb
add
addr16
jmp
fcompl
lahf
stos
push
xchg
test
adc
popa
in
push
pop
ret
jecxz
incl
jae
mov
pop
test
cmp
mov
sbb
mov
and
cmp
lock
mov
hlt
or
je
fwait
cmc
push
test
sub
subl
push
fists
add
sub
add
jnp
lea
jae
mulb
nop
cmp
mov
or
cmp
hlt
push
stos
ja
sbb
out
add
dec
push
jne
push
iret
subb
rorl
insl
sub
mov
sbb
and
sbb
out
dec
xchg
ja
inc
cmp
adc
fildll
stos
mov
add
inc
in
push
sbb
jne
cmp
shlb
or
xor
xor
add
rclb
cmp
xor
xor
repz
fxch
fdivrl
cmp
mov
mov
adc
loopne
and
clc
xchg
imul
pop
popa
xor
mov
rcrl
cltd
test
std
test
cli
jmp
pop
mov
pop
pop
movsb
test
cmpsb
hlt
push
pop
fsubrs
adc
jg
fstps
push
rol
lahf
hlt
arpl
cmp
sti
in
cltd
cmp
mov
call
sbb
or
movsb
push
mov
cmpsl
imul
push
mov
add
xor
in
mov
popf
loopne
jmp
xchg
mulb
js
push
cmp
lahf
das
cwtl
hlt
cld
int
cli
inc
fld
adc
cmpl
test
insl
jne
xor
xchg
lods
sarl
in
xchg
pop
pop
xchg
cmp
push
icebp
jb
pop
negb
cmpb
xchg
jno
es
xchg
jmp
shll
daa
ret
fmull
mov
sbb
popa
sub
lea
adc
mov
mov
jb
cmpl
mov
push
xor
dec
orl
adc
insl
cs
stc
invd
test
test
cld
add
dec
jae
pop
in
lcall
aaa
sbb
inc
dec
gs
leave
mov
push
idivl
add
incb
daa
jp
stc
sbb
push
inc
xor
sbb
pop
jo
in
jecxz
and
or
out
dec
pop
movsb
fldenv
xchg
dec
cmpl
pop
push
outsl
rcll
add
or
mov
ja
test
das
daa
jmp
loopne
adc
xor
out
xchg
mov
clc
mov
dec
pushf
cmc
mov
shr
inc
lods
ja
and
sub
movb
daa
sbb
dec
movsw
cli
push
sahf
clc
aas
iret
movsl
sbb
or
neg
aad
cmc
iret
mov
mov
test
pop
sub
roll
addr16
xchg
sbb
inc
add
push
sbb
outsb
sub
fwait
iret
add
add
mov
push
fs
mov
pop
insb
push
inc
pop
fnstsw
and
shll
loopne
and
mov
cmpsl
pop
jecxz
testl
divb
shll
inc
or
add
cmc
mov
and
push
aaa
mov
jb
aas
push
ja
popa
mov
push
gs
xchg
mov
inc
or
sub
push
jmp
add
std
push
clc
stc
or
add
xor
test
imull
push
out
xor
imul
imul
notl
jbe
mov
adc
and
pushf
cld
sahf
xchg
adc
push
pop
ja
mov
lret
mov
in
add
add
push
leave
popl
push
pusha
je
daa
mov
xchg
cld
imull
into
inc
in
lahf
or
sub
add
sbb
pop
xor
jl
movsb
outsl
dec
data16
das
xor
idivl
or
push
mov
mov
cmp
jns
cli
adc
inc
add
testl
sub
jbe
test
mov
pop
cmpsb
push
in
and
das
adc
jno
sti
out
sbb
add
push
jno
sbb
xchg
clc
jmp
jno
imul
or
jns
mov
seta
clc
fildll
sub
mov
movmskps
and
dec
lds
jae
dec
push
loope
and
dec
jg
dec
shll
adc
mov
push
add
sbb
cwtl
fsubrs
add
clc
mull
xor
leave
ja
add
outsl
add
jmp
jb
fwait
test
mov
mov
jnp
sub
add
inc
add
fcmovu
mov
in
xor
mov
ja
push
clc
insl
out
mov
lock
arpl
in
imull
mov
adc
jg
seta
xchg
shll
or
or
cmp
fldl
or
or
push
fsubrl
cli
cmpl
add
pusha
jne
mov
rcrb
mov
imul
sbb
clc
sub
sbb
and
insl
enter
sbb
push
cmp
je
or
jle
jns
inc
in
mov
jp
hlt
jno
pop
clc
mov
mov
mov
lcall
sar
inc
in
addl
outsb
clc
xlat
add
mov
sub
mov
ja
in
dec
leave
pop
cmp
dec
popa
fs
cs
mov
mov
roll
adc
addr16
push
or
or
mov
mov
mov
inc
jmp
mov
dec
mov
mov
clc
inc
test
dec
test
push
popa
push
adc
ja
jne
repz
mov
inc
in
in
addl
pop
xchg
repz
lret
dec
mov
mov
lock
jg
pop
xchg
sbb
jg
sbb
loope
sbb
ret
and
pop
mov
faddl
jp
push
jbe
mov
dec
push
loope
xor
add
sbb
lahf
loope
xchg
pushf
lock
sbb
push
arpl
push
loopne
adc
cmpsl
jecxz
pop
mov
or
inc
jle
jp
scas
gs
dec
addr16
mov
or
pop
dec
push
in
lea
fst
out
sti
imul
push
dec
dec
xchg
inc
ja
cltd
mov
xor
mov
imul
scas
add
in
push
mov
add
sbb
jmp
push
cmp
mov
inc
scas
loopne
test
jmp
xor
rcrb
cmp
add
ret
iret
out
jno
cmp
sbb
aad
loopne
cmp
mov
gs
sub
ljmp
pop
add
pop
ret
push
mov
fbstp
das
inc
addr16
aas
mov
insb
xchg
mov
mov
pop
test
aam
dec
sahf
sub
add
pop
add
mov
aad
popa
test
jge
jo
pop
cli
add
mov
lahf
xor
or
lcall
add
jge
pop
outsl
inc
movsl
test
mov
das
leave
and
xchg
icebp
push
lahf
sbb
in
stc
and
in
out
in
cld
test
sbb
add
sbbb
push
jmp
pop
cs
cmp
sub
int
mov
ret
sbb
int
enter
test
das
aaa
push
fs
out
xchg
js
aaa
lods
xchg
push
xor
das
icebp
cli
test
and
enter
pushf
jp
mov
js
popa
cwtd
xchg
push
in
sbb
test
js
add
pop
jb
mov
dec
mov
sbb
insl
cmp
shll
cmp
bound
cmp
pop
pop
cmp
sub
cmp
stc
dec
and
sbb
xchg
sbb
and
and
cmp
xchg
xor
jmp
cmp
sbb
cmp
sbb
sbb
ret
inc
xchg
pop
in
and
bnd
fadd
ror
sti
lock
push
or
test
jno
imulb
push
sub
or
and
xor
sbb
mov
jge
mov
int
aas
adcb
add
icebp
dec
loope
int
imull
out
sbb
insb
push
mov
std
shrb
mov
lret
dec
sub
loope,pt
mov
push
pop
push
xchg
arpl
push
aaa
daa
rol
loopne
adc
dec
dec
scas
pop
pop
mov
stos
push
dec
das
mov
dec
sub
push
mov
adcb
push
std
push
das
je
incb
test
jp,pt
std
cmp
je
das
sti
test
lock
pushl
stc
xchg
orb
cld
inc
or
push
scas
inc
or
push
dec
cld
cmp
xchg
addb
sub
les
inc
xor
loope
mov
jo
inc
push
sub
xor
test
jg
xor
mov
mov
add
addl
or
add
addl
leave
adcb
or
inc
xchg
or
jbe
jns
push
mov
push
mov
pop
pop
xchg
xchg
push
pop
mov
mov
push
jl
clc
stc
pop
imull
sti
inc
aas
aaa
inc
hlt
cld
clc
jb
insl
outsl
inc
cmpsl
adc
mov
inc
xchg
dec
push
push
divb
std
mov
sbb
clc
je
and
gs
inc
dec
cmp
test
inc
mov
sub
mov
xor
lds
cmp
xor
loopne
inc
test
dec
lcall
sarb
or
xor
mov
repz
and
outsl
adc
cmp
jbe
addb
mov
mov
aaa
xchg
adc
inc
dec
cmp
cwtl
fisttps
shrb
xor
cmp
mov
pop
add
aas
sub
shrl
xor
jp
adc
inc
cmp
xor
add
mov
sub
xchg
pop
mov
xchg
aad
clc
mov
sbb
xor
orl
cmp
xchg
inc
and
add
xor
inc
jne
pop
jge
das
test
mov
adc
les
dec
dec
adc
test
sar
cltd
sti
xor
aas
mov
push
mov
aas
xor
into
out
or
stc
or
add
mov
mov
add
testb
call
push
in
call
push
xchg
xchg
push
inc
loop
ss
inc
jns
ja
addr16
dec
ss
shl
jns
jns
js
dec
push
mov
dec
imul
adc
decb
cmp
adc
in
into
imul
sti
out
fsts
aam
fisttpll
mov
cli
outsb
pop
pop
addb
adc
lret
pop
push
insb
jle
and
jge
or
adc
or
xor
pop
testb
xchg
push
adc
cli
cmpsl
cmpl
scas
in
clc
cli
cmpl
aad
sbb
cmc
xchg
repnz
add
sub
gs
push
push
test
loop
cmp
add
fucom
inc
xchg
inc
xor
sbbl
cmpsl
or
mov
mov
rorl
push
jl
cli
push
das
lds
dec
sbb
std
adc
jecxz
icebp
ss
mov
jp
daa
in
jae
jge
cmp
daa
dec
dec
pop
adc
dec
inc
dec
xchg
inc
mov
dec
loope
adc
test
push
mov
xchg
cmp
jmp
jge
xor
fwait
xor
lea
or
popa
add
adc
inc
bound
pop
loope
inc
test
orb
pop
call
dec
decl
mov
xchg
push
or
jmp
adc
data16
jno
sbb
sti
inc
std
neg
push
lea
cmpl
xchg
xchg
sbb
push
addr16
es
mov
dec
xor
cli
pop
pop
push
xchg
xchg
daa
mov
test
xor
clc
sbbb
or
roll
insl
add
out
cmp
movsl
divb
mov
data16
cmp
mov
sbb
mov
test
cmp
addl
dec
mov
jb
sub
notb
pop
fsubrs
les
lret
in
adc
inc
add
shlb
xor
pop
mov
js
loope
inc
loope
lea
push
insb
pop
jb
push
or
and
testb
fistpll
xor
out
mov
repz
das
mov
push
lds
add
dec
xchg
dec
dec
in
jb
lock
mov
insb
jmp
adc
lcall
inc
push
jns
addl
test
cmpsb
fs
jae
or
test
fcomi
sub
inc
cs
sbb
or
or
sub
or
test
jnp
cli
pop
fdivp
dec
aaa
test
stc
sub
mov
clc
movsl
cmp
clc
aaa
fwait
pushf
popa
jnp
xor
sbb
or
and
xor
sub
aad
imul
push
cld
and
dec
jmp
mov
mov
mov
incl
mov
jnp
mov
jge
sub
sub
sub
xchg
mov
andb
dec
jecxz
push
out
dec
pop
cmp
stos
sbb
mov
rol
scas
aas
push
pop
mov
jg
ret
push
mov
out
mov
xor
mov
mov
pop
das
add
or
add
and
adc
push
sbb
push
dec
ja
inc
rcrb
fwait
daa
andl
or
test
jb
dec
mov
or
pop
jno
aam
lea
not
and
jmp
xor
in
or
or
outsl
nop
xchg
pop
push
mov
in
pop
aad
insl
call
mov
xchg
call
loopne
or
insl
mov
scas
or
dec
xchg
xchg
push
je
aas
xor
push
in
adc
jbe
sub
add
and
icebp
in
push
jne
push
mov
leave
jae
lahf
mov
inc
or
push
and
jbe
mov
push
lahf
arpl
inc
movsl
movsl
or
out
mov
push
in
or
pop
mov
dec
les
dec
push
xor
arpl
pushf
pusha
push
adc
ja
decl
pop
pop
roll
les
stc
jmp
rcll
mov
xchg
fwait
mov
push
mov
jecxz
iret
daa
mov
pop
in
xchg
lcall
or
ds
in
pop
and
sbb
pop
mov
cmp
out
push
mov
and
ss
sbb
mov
lds
push
mov
adc
inc
in
inc
movsl
cld
xchg
repnz
shll
xchg
out
dec
or
decb
pop
sub
roll
mov
dec
add
daa
popa
hlt
and
cli
sbb
pusha
xlat
sbb
in
das
mov
pop
and
add
in
or
cwtl
stos
ja
push
outsb
ss
scas
ja
sbb
arpl
sbb
hlt
inc
push
ds
adc
ds
rolb
test
lea
stos
adc
cmp
push
mov
xorl
shlb
jbe
jl
jns
dec
mov
pop
lods
in
cmpsl
and
push
cmp
jnp
out
or
add
mov
les
shlb
fisttps
sub
add
int
or
addr16
mov
ffreep
xchg
add
gs
fldl
mov
add
ja
push
incl
imul
and
cmpb
aas
add
movsb
leave
jmp
cmp
neg
mov
sarb
ds
pop
call
mov
xchg
dec
jl
jge
add
hlt
cmp
js
add
cli
call
jnp
cmp
sbbb
mov
cli
pop
std
inc
pop
pop
cmp
push
jo
clc
inc
adc
clc
pop
cmc
test
out
mov
push
or
xchg
imul
jne
and
jmp
das
xor
mov
sub
xchg
mov
mov
in
add
inc
std
mov
xchg
dec
in
les
or
das
shl
pop
insb
xlat
popa
jbe
bound
add
jmp
aaa
fdivs
add
mov
in
movsl
push
insl
adc
test
out
mov
sbb
pop
sbb
push
inc
sub
aam
std
add
lret
mov
data16
mov
repnz
jae
jecxz
fs
or
dec
shl
jae
arpl
lret
lea
pop
mov
ret
popa
or
mov
lret
stos
std
mov
lock
cmpsb
or
mov
idivl
fists
rorl
pop
aaa
orb
jmp
add
and
js
in
dec
add
mov
fucomi
das
aas
popa
stos
repz
subb
les
imul
jne
pop
lea
jl
mov
repnz
add
incl
mov
push
xchg
xor
out
in
cmp
push
adc
mov
clc
addr16
rcrl
aas
xchg
gs
int
std
nop
push
fsub
pop
dec
pop
sbbb
add
add
imul
lahf
add
imulb
or
add
loope
cmc
in
pop
es
mov
pop
and
repz
add
or
test
cld
xchg
test
cmp
jno
pop
je
push
in
test
scas
push
mov
or
aas
fs
push
push
and
pop
ljmp
add
lods
mov
and
mov
pop
or
out
in
roll
das
std
cmp
mov
test
adc
xor
pop
sti
int
leave
in
aas
or
js
lcall
xchg
gs
pop
and
in
clc
lret
adc
in
std
sti
das
je
jnp
xor
ficomps
arpl
xor
pop
out
aas
mov
rolb
inc
mov
repnz
imul
and
out
add
shl
addr16
mov
das
push
xor
pop
ds
mov
scas
xor
pop
rep
mov
add
fsubl
inc
hlt
jecxz
inc
mov
and
in
rol
add
xor
insl
call
lock
xchg
pusha
sar
imul
sarl
mov
hlt
aas
pop
add
or
aad
pop
and
out
sti
aas
xor
call
cs
add
addr16
outsb
jg
pop
mov
inc
jmp
fs
insl
rcrl
fcmovnbe
lock
out
cli
jmp
xchg
fisttps
xor
stc
data16
aas
js
dec
insb
pop
icebp
mov
cmc
fs
pop
insb
add
mov
push
ret
mov
scas
in
cld
jns
pop
push
dec
mov
push
xadd
push
enter
mov
iret
inc
add
je
ret
daa
insl
aam
mov
mov
add
and
cmpsb
cs
mov
jmp
or
mov
andb
int
lret
in
pushl
add
cmp
mov
outsl
mov
rcl
dec
fcmovne
cs
and
incl
data16
aam
data16
mov
jl
xchg
cli
cmc
jae
sbb
mov
aaa
xchg
push
lods
jns
sti
pop
push
test
popa
push
mov
sbb
stc
mov
clc
cmp
and
addr16
movsb
in
add
test
clc
es
addr16
push
movsl
nop
outsb
pop
call
pop
xchg
in
in
cld
push
and
incl
pusha
xchg
stc
popa
adc
ss
jp
cmc
dec
xchg
sbb
jg
push
push
bound
pmullw
in
jle
pop
pop
add
decl
fdivrp
vmwrite
out
pop
mov
inc
add
sbb
sbb
jge
mov
cmpsb
stc
and
cmpsl
push
xchg
push
incl
out
popa
fsubp
and
xchg
mov
pop
add
pop
rep
das
lods
outsb
test
mov
mov
or
dec
push
mov
xor
insl
jmp
test
or
aaa
xchg
test
adc
cmp
xchg
mov
jmp
fistps
mov
jge
ss
js
std
pop
icebp
mov
jg
push
mov
push
fbld
pop
js
dec
incl
sub
xlat
incl
ds
inc
add
inc
insl
psubsb
pop
test
mov
dec
add
int3
and
dec
push
clc
test
adc
outsl
icebp
mov
shl
outsl
adc
faddl
in
cli
je
xchg
aaa
aaa
test
adc
dec
adc
inc
call
adcb
sbb
mov
pop
or
pushl
cmp
sbb
mov
fimuls
call
inc
outsl
imull
pop
push
imul
data16
insl
push
sub
mov
inc
lar
push
mov
int3
ljmp
and
mov
pop
lahf
pop
stos
aam
push
mov
into
or
loopne
sub
or
in
push
sub
arpl
aam
inc
dec
mov
out
cltd
cmpb
pop
jle
test
push
mov
push
mov
mov
mov
outsl
add
testb
in
shl
lods
fimuls
ret
aad
call
xchg
cli
call
mov
incb
jg
lods
ficoms
mov
inc
fwait
aad
out
jne
outsl
pushl
fidivrs
push
cmp
push
je
and
xor
mov
push
outsb
lds
pop
inc
push
arpl
dec
imul
fsubp
outsl
loope
add
cmc
pop
test
push
add
lcall
pop
addb
out
addb
add
inc
pop
jl
add
fdivrl
inc
sub
sti
pop
mov
add
mov
cmp
mov
ds
test
mov
mov
jg
sub
cld
test
outsl
pop
or
pop
cmc
lret
adc
push
pop
mov
sub
dec
mov
out
inc
in
pop
inc
jg
push
push
insl
add
sbb
mov
add
daa
xor
push
push
sub
stc
mov
aas
std
add
pusha
popa
cltd
popf
call
cmp
fldl
lahf
mov
or
pop
fsubs
lds
shll
std
mov
jle
xor
jne
mov
mov
in
pop
sub
out
pop
mov
adc
sbb
adc
loope
popf
push
ret
fisttpll
fnstenv
out
mov
test
mov
sbb
add
cltd
rcl
pop
jne
and
push
loop
dec
test
test
cli
jl
mov
test
lcall
and
loopne
cltd
outsl
aaa
push
pop
jmp
adc
pushf
cltd
fists
faddl
out
ljmp
adc
mov
in
jmp
sub
les
stc
sub
mov
loop
aam
imul
into
mov
adc
jecxz
rcll
jne
clc
push
cwtl
inc
xchg
mov
rolb
xchg
mov
and
mov
ja
int
xchg
mov
cmp
test
inc
push
pop
jge
xchg
push
outsl
adc
cmpsl
jmp
movsl
loop
add
lds
xchg
incl
in
idivl
stos
movsb
and
jne
add
mov
test
sub
mov
or
pop
test
xor
lahf
push
gs
xchg
jno
or
notb
adc
pop
test
loopne
xchg
or
pop
clc
idiv
test
int3
jl
push
loope
pop
ljmp
sbb
subb
jmp
dec
out
add
insb
sbb
fwait
arpl
push
xor
fisttpll
mov
notl
clc
xor
repz
fiadds
or
divb
xchg
lcall
cmp
fdivr
xor
mov
mov
xchg
add
cld
fcomps
sarl
popa
bound
inc
sbb
ret
cld
sub
outsl
xchg
pop
stc
cmp
neg
pop
stc
jns
div
ja
inc
je
jmp
sarb
mov
xor
mov
inc
xor
add
xor
mov
mov
jnp
sub
arpl
lahf
adcb
test
mov
or
insb
push
ss
push
lret
cmp
loopne
mov
jle
cmpb
mov
movsb
xchg
jecxz
loope
mov
popa
clc
ret
decl
xchg
xchg
popa
push
sub
push
mov
test
cmp
and
xor
jne
imul
orl
aam
or
cltd
sqrtps
jno
out
add
mov
dec
push
add
sub
ja
or
aas
les
jg
cmp
jno
push
fs
fwait
adc
sbbb
gs
dec
into
ja
test
add
xchg
sti
cld
and
mov
sbb
mov
movsl
cmp
cmp
add
mov
in
hlt
aaa
fiaddl
xchg
dec
dec
dec
gs
pop
fildl
add
cmp
add
push
cwtl
out
jecxz
pop
stos
inc
shll
mov
xor
sbb
fdiv
inc
mov
outsb
frstor
jo
and
outsl
xchg
xchg
xchg
lods
sbb
loopne
xchg
and
loope
xor
ds
cmp
pop
outsl
pop
outsb
pop
imul
jo
sbb
or
cmp
push
loop
stos
in
and
test
or
xor
int
enter
ret
lret
decb
mov
and
outsl
or
in
sub
sub
pop
std
outsl
mov
insl
fwait
jo
and
xchg
jl
test
and
fldl
cmp
dec
xorb
smsw
mov
out
imul
and
inc
add
loop
mov
or
mov
add
ret
rclb
hlt
iret
inc
mov
and
cmp
add
jp
cld
add
or
mov
das
mov
orb
or
mov
inc
outsb
cmp
lds
push
and
push
out
adcb
lcall
fxch
fldl
mov
popa
sti
xchg
daa
add
arpl
mov
or
orb
dec
mov
std
dec
sub
imul
lds
not
inc
jg
add
add
loop
xchg
sbb
sbbb
loopne
jb
rcrl
fildll
or
cld
call
jae
dec
test
sub
lds
cs
cltd
cld
or
std
loop
jl
mull
shrl
or
jno
arpl
xchg
push
dec
push
cld
enter
out
testl
push
push
dec
in
mov
pusha
test
push
dec
std
push
jg
adc
std
sub
add
sbbl
push
dec
loope
push
filds
test
jg
add
insl
setle
fldl
add
xor
test
cmp
pop
mov
pop
inc
inc
inc
aad
sub
addr16
in
jg
or
loop
mov
mov
push
out
enter
lret
arpl
test
or
scas
jg
loope
stc
cmp
lds
loopne
mov
xchg
out
rol
mov
sbb
adc
inc
cmp
mov
imul
out
lcall
pop
jb
xchg
out
ja
xor
dec
sbb
loop
cmp
cmp
out
add
fcompl
adc
add
js
jbe
xchg
lret
in
jns
jb
ja
gs
insl
lcall
cmp
jbe
jb
fcoml
imull
jne
jbe
je
imul
dec
shrl
shrl
mov
insb
xchg
jbe
sahf
je
jne
jae
shll
das
sbb
or
je
jb
mov
lds
jp
aaa
js
jnp
lret
in
loope
xor
jnp
jns
jge
jb
xor
cmpl
aaa
add
lds
fistpll
lcall
movsl
fwait
shll
popl
dec
stc
or
pop
jle
jl
xor
push
cmp
xlat
xor
inc
inc
cmp
adc
adc
adc
das
cmp
mov
pop
cs
lret
mov
ja
jne
cs
mov
jb
pop
js
and
jns
lcall
sbb
repz
xor
jae
fcmovne
jb
cmpsb
jmp
jp
add
lret
in
jg
js
jge
adc
imul
xchg
pop
cmpsb
jo
pop
ja
jp
imul
jmp
dec
xor
xorl
out
call
inc
clc
sub
dec
add
jmp
std
jno
sbb
pop
nop
sbb
mov
cltd
or
add
ja
mov
add
sub
push
in
cmp
jno
cmp
popa
andl
sbb
pop
imul
das
xchg
lret
lret
lcall
jo
insb
xorb
ja
daa
cltd
repnz
lret
in
ja
jno
insl
fwait
jp
out
int
outsb
adc
cmp
add
jne
mov
out
cmc
insl
xchg
jl
and
mov
dec
push
sbb
outsb
pop
push
arpl
xchg
ud0
dec
outsl
addr16
cmp
insb
jno
inc
decb
pop
arpl
pop
push
outsb
jne
idiv
xchg
and
inc
imul
pusha
dec
pop
pusha
pop
dec
jno
xor
jb
hlt
push
mov
push
pop
popa
jo
inc
add
mov
mov
jno
push
inc
pop
insb
popa
adc
mov
insl
popa
inc
data16
add
inc
mov
dec
mov
insb
cmp
push
ljmp
pop
and
insb
mov
push
incl
insl
pop
push
clc
out
std
inc
imul
arpl
add
std
outsl
outsl
outsl
and
push
inc
outsb
pop
imul
data16
outsl
mov
cld
pop
pop
jno
aas
gs
incl
xchg
sbb
pop
pop
imul
jae
inc
jbe
pop
push
imul
arpl
gs
imul
stc
push
jbe
lahf
imul
pop
jno
imul
pusha
cmp
bound
push
gs
fldenv
pop
aas
insl
outsl
dec
bound
pop
dec
pop
jne
das
mov
pop
mov
inc
popa
gs
push
loope
stc
bound
push
pusha
jns
incb
insl
insb
jae
insl
xor
lahf
add
dec
bound
inc
bound
jg
cli
push
inc
or
jb
inc
outsl
dec
fdivr
pusha
fldt
inc
ja
jae
insl
insl
xor
inc
ret
outsl
inc
mov
imul
in
mov
mov
bound
dec
pop
jno
inc
inc
out
inc
js
shrl
insl
je
push
or
dec
daa
push
sub
inc
pop
cmp
pop
jae
test
cmp
imul
push
out
or
dec
dec
cmp
sub
fisubrs
fisubl
std
inc
lcall
cld
and
mov
pop
xor
pop
push
insl
addr16
lahf
out
in
cld
sar
inc
pusha
imul
jb
jo
bound
mov
in
rcrl
idiv
je
adc
outsl
dec
jne
jne
jge
lods
xchg
daa
ds
push
push
test
cld
and
pop
inc
push
imul
push
outsb
push
mov
std
std
inc
cmp
or
pop
jb
insb
push
imul
mov
arpl
aad
imul
lea
push
pop
sbb
fcomp
popf
test
imul
adc
xchg
jl
dec
aas
inc
push
fdivrl
outsl
mov
inc
pop
push
cwtl
insl
stos
bound
fstp
mov
inc
outsb
push
popfw
push
pop
fs
in
sbb
cli
jo
jmp
sar
jae
push
imul
outsl
decl
jno
cmp
imul
aas
data16
push
dec
ds
cli
inc
sti
dec
das
das
and
cld
inc
bound
orl
or
aas
popa
insl
ds
jge
add
adc
arpl
sbb
cmp
imul
gs
pop
mov
clc
cmp
popa
es
inc
orl
pop
dec
cmp
ja
clc
inc
inc
data16
dec
out
cmpsl
push
jb
das
cmpb
inc
jae
ja
decb
fisttpl
in
dec
pop
arpl
lcall
sub
outsb
pop
and
out
fidivrl
sub
jno
pop
jbe
rorl
shl
inc
pop
fs
je
pop
pop
aas
xor
stos
clc
fisttpl
cmp
inc
cmp
das
sub
mov
fcomps
sub
cmp
ds
xchg
insb
dec
test
xchg
inc
pop
mov
mov
outsl
cmp
push
pusha
xchg
xchg
ss
outsl
aad
adc
pop
inc
imul
neg
sahf
cmp
pop
pusha
inc
out
out
cmp
cmpsl
or
pop
add
push
lock
int
mov
bound
std
dec
ret
shl
outsl
pop
imul
add
int3
insl
repz
push
movl
cli
arpl
inc
cmpsl
fsin
inc
inc
mov
push
push
push
clc
cmp
rcl
sbb
jno
sub
lods
std
pop
insl
sub
std
cmp
sbb
pop
popa
sub
jo
sarl
rolb
cmp
xor
fistl
fwait
cmp
sub
dec
mov
imul
cmp
push
push
inc
std
ss
das
jge
and
icebp
jo
data16
push
pushl
fisubl
pop
popa
xlat
jo
pop
insb
ds
cmp
cmp
fldl
imul
imul
cmp
push
add
adc
cs
pop
dec
cli
fcmovnu
mov
ds
pop
daa
jno
sub
cmp
jo
insb
stos
lods
insl
or
push
aas
cmp
push
insl
xchg
fucomip
mov
imul
cmp
cmp
aas
cmp
mov
cmp
inc
cmp
fidivrl
ret
gs
aaa
pop
xor
sbb
sub
mov
xchg
outsb
or
xchg
jb
arpl
inc
dec
mov
fwait
andl
cmp
or
in
dec
ja
push
fistps
adc
aas
push
ds
dec
xor
pop
cmp
cs
das
pop
add
bound
pop
sub
cmp
movsl
notb
add
pop
mov
pop
or
pop
sub
mov
outsl
xor
daa
dec
cmp
pusha
pop
add
inc
das
sub
aaa
inc
fldt
outsb
mov
push
cmp
sub
pop
pop
xor
adc
cmp
stc
lahf
inc
lods
inc
cmp
repz
insb
and
test
pop
pop
mov
inc
cmp
ja
add
cs
addr16
pusha
pop
pop
xchg
popa
lcall
out
sbb
adc
dec
cmp
push
clc
push
jg
addr16
inc
outsb
test
cmp
std
inc
push
dec
inc
dec
cs
sub
push
arpl
push
push
das
push
sub
sub
imul
frstor
inc
push
jg
jb
clc
pop
movsl
pop
xchg
cld
inc
imul
insb
dec
popa
pop
popa
cmp
xchg
orl
pop
and
aas
adc
xchg
mov
loope
out
cli
and
aaa
mov
mov
mov
add
xchg
adc
enter
jae
out
mov
imul
in
in
pop
inc
adc
push
clc
pop
les
data16
fisubrl
mov
decb
cmp
lock
cmp
push
inc
cmp
fadds
cmp
or
aam
out
add
jns
ret
mov
or
adc
lods
cmpsl
lods
ret
test
outsb
jbe
ss
mov
mov
mov
cmp
mov
dec
dec
aaa
pop
xchg
shrb
dec
cli
pop
pop
lcall
arpl
jae
imul
push
ljmp
push
mov
icebp
dec
dec
daa
pusha
xor
pop
mov
gs
test
pop
or
push
pcmpgtw
mov
cltd
std
push
pusha
cmp
aad
out
pop
bound
xorl
mov
dec
cmp
jmp
dec
mov
cld
mov
fstpt
in
mov
gs
mov
test
pop
push
push
pop
mov
cltd
pop
shlb
out
push
hlt
dec
adc
jge
or
mov
jle
loope
jo
in
jb
pop
sti
pusha
daa
aas
sbb
xor
bound
jmp
mov
xor
js
int
movl
pop
loopne
daa
sbb
cmp
add
mov
add
add
std
decl
xor
pop
addr16
push
sub
lret
ret
pop
sub
aas
clc
jb
sub
das
cmp
pusha
mov
pop
mov
pop
inc
insl
xor
xchg
js
push
cs
pop
inc
adc
mov
popf
cmp
bound
imul
pop
outsb
lahf
inc
outsb
pop
fs
push
lods
rolb
addr16
in
inc
mov
xchg
sbb
ds
and
inc
jno
mov
inc
pusha
rcll
std
inc
dec
push
cmp
sbb
sbb
adc
test
pop
sbb
pop
aas
jmp
mov
pop
imulb
sub
push
dec
xchg
pop
stos
inc
mov
arpl
or
inc
push
jmp
subl
sub
mov
rorl
dec
push
lods
pop
jp
jb
add
sti
push
pop
pushl
pop
xchg
xor
sub
test
out
inc
ljmp
mov
xchg
cld
ljmp
iret
daa
testl
in
pop
cld
or
icebp
incl
dec
dec
dec
dec
inc
dec
inc
inc
inc
inc
das
sti
or
xor
xor
cld
xor
lea
outsb
and
outsb
push
push
sub
bnd
bound
mov
sub
mov
mov
aaa
inc
jo
loop
test
sub
int
mov
jbe
ja
inc
das
repz
sub
int
mov
aaa
sbb
cmp
cmp
sub
mov
in
sub
sbb
and
divl
and
rol
in
mov
jg
sbb
bound
push
bound
sbb
arpl
clc
dec
idivb
negb
shl
mov
rcr
mov
les
in
test
lds
ret
out
xchg
mov
fcmovnb
fsts
mov
test
arpl
test
hlt
aad
idiv
fcomip
subl
inc
and
lahf
iret
mov
lods
cmpsl
inc
out
out
sub
or
and
das
aaa
sbb
sub
sbb
sub
mov
mov
mov
lods
sbb
sub
std
out
ds
mov
mov
mov
repz
insl
adc
pop
push
push
sub
push
xor
push
cltd
cmp
fwait
ja
dec
pop
mov
mov
loope
jbe
js
sbb
push
jl
lock
outsb
push
andb
cmp
sti
fdivr
decl
mov
dec
ds
fnstenv
iret
aad
cs
cmp
jne
push
adc
es
push
ja
mov
cmp
sub
xchg
sti
test
sbb
push
add
mov
lods
mov
std
pop
or
mov
add
push
pop
mov
loopne
jne
insb
cmp
imul
push
insb
cwtl
cld
or
insb
jb
jo
sub
aaa
loopne
stos
push
dec
inc
cmp
pop
clc
pusha
cld
mov
jmp
insl
clc
jnp
fldenv
adc
fsts
pop
imul
fwait
mov
jo
gs
popa
adc
adc
or
pop
and
pop
imul
mov
lods
mov
mov
mov
mov
jbe
jg
mov
outsb
inc
adc
mov
jnp
lds
popa
jne
insl
mov
outsl
rcl
mov
pop
mov
jne
fstpt
add
pop
adc
mov
fisttpl
sub
push
push
inc
das
cmp
testb
test
jp
or
push
jae
ss
call
popa
pop
jae
dec
incl
inc
int
in
push
jne
dec
mov
insl
or
cmp
clc
test
dec
pop
sbb
fwait
leave
lret
popf
insl
test
and
daa
fs
incb
mov
les
lret
mov
pop
jl
pop
push
pusha
sub
test
je
clc
inc
inc
dec
dec
dec
sbb
xor
aas
pop
xor
insl
cmp
or
add
divl
leave
lcall
iret
popa
and
mov
int
lds
arpl
mov
cmp
push
inc
and
lods
mov
mov
xor
fildl
push
aas
adc
pop
lahf
shl
mov
push
aaa
inc
sbb
imul
mov
mov
ret
sbb
dec
dec
sub
aas
inc
call
cs
pop
jae
jbe
daa
pushl
push
sub
sub
shrb
mov
pop
cmp
cli
add
popa
sub
push
cli
sub
or
or
cmp
insb
adc
cmp
jbe
or
dec
imul
sub
daa
sub
and
popf
data16
adc
pop
cmc
dec
bound
jle
imul
daa
fistps
or
inc
mov
adc
inc
add
shrb
dec
lock
sub
pop
pop
pop
xchg
dec
decb
shll
ret
fsin
idivb
ret
mov
ljmp
and
fsubrs
pop
mov
int3
lock
ret
xchg
dec
push
dec
jnp
mov
inc
lods
mov
pop
addr16
push
push
dec
mov
test
leave
scas
mov
mov
iret
lcall
lahf
das
adc
lock
add
pop
ret
lret
mov
scas
mov
ss
hlt
mov
xor
and
incl
dec
push
sbb
sbb
daa
das
or
pop
in
inc
mov
xor
jo
mov
idivl
push
sub
clc
add
popa
bound
inc
mov
xor
and
xor
mov
arpl
insl
mov
inc
in
or
insb
push
pop
lods
or
cltd
and
insb
movsl
mov
test
ret
and
test
pop
cltd
pop
jmp
in
cmc
jp
adc
imul
es
das
sub
jno
das
pop
pop
das
popa
pop
jmp
je,pn
jno
es
movsb
xchg
ss
pop
dec
imul
and
push
mov
xchg
pop
lea
dec
arpl
popa
sub
pusha
daa
ror
jl
mov
dec
ret
arpl
xor
stc
mov
adc
insb
movw
imul
imul
or
movsl
xor
loopne
pushw
add
adc
dec
lea
mov
xor
insb
jne
ficoml
xor
cmp
mov
mov
add
outsl
add
aaa
sbb
and
pop
sub
sbb
jae
filds
cmp
gs
mov
fcompl
jno
sbb
and
push
jno
ss
rcrl
add
mov
out
out
mov
cmpsl
lret
mov
pop
rcrb
into
ret
lods
lret
mov
cmp
cld
push
pop
cmp
das
ss
pop
push
cmp
add
sub
and
cmp
fdivr
insl
loope
pusha
outsb
xor
and
sub
cmp
arpl
outsb
sub
pusha
aaa
cmp
and
pusha
mov
or
sub
xor
negb
pop
imul
sub
les
xchg
xchg
loop
cmp
xorl
ret
test
outsb
mov
mov
pop
jae
or
push
test
add
pusha
scas
cmpl
arpl
movsl
lcall
sub
fs
xor
aas
popa
add
pop
cwtl
pop
dec
cld
arpl
lea
inc
or
lock
aaa
pop
js
popa
je
xchg
jae
push
jno
mov
inc
mov
sub
jnp
dec
repz
cld
adc
inc
mov
dec
xor
or
mov
test
sbb
mov
in
je
inc
js
negl
fs
dec
mov
ficompl
les
sbb
jo
mov
dec
outsl
aas
ja
cmp
sub
gs
arpl
aas
lret
out
in
adc
insb
cmp
js
inc
xchg
pusha
jno
daa
jne
push
gs
in
scas
mov
arpl
aas
dec
pop
dec
ja
mov
adc
jnp
inc
arpl
jb
inc
mov
add
insl
inc
icebp
jbe
jg
sub
insb
jno
pop
push
outsl
arpl
das
jo
or
dec
outsb
sub
or
dec
cmp
sub
test
jae
cmp
mov
inc
pop
imul
mov
arpl
imul
pop
mov
xchg
cmp
aas
jne
das
icebp
inc
cmp
inc
adc
dec
dec
sbb
lods
mov
aad
push
pop
pop
fistpl
pop
ficompl
and
fs
sbb
lock
outsb
je
jo
jbe
jo
mov
arpl
sub
dec
imul
cld
fs
pusha
ret
divl
jbe
pop
push
jae
sub
ficoml
gs
push
pop
or
or
outsl
push
cmp
inc
ds
push
aas
cmp
dec
dec
cld
popa
jo
cmp
mov
or
pop
cmp
aas
pop
push
outsl
inc
jl
dec
je
dec
jno
sub
popa
adc
inc
imul
fcoms
pop
push
add
pop
imul
mov
gs
lcall
jbe
jo
dec
aas
dec
inc
es
adc
cmp
and
add
bound
mov
mov
push
cld
outsl
mov
test
insl
pop
sub
and
and
sbb
insb
mov
xor
push
rcr
testw
jno
dec
adc
push
xchg
call
in
shld
rcl
stos
lret
test
xchg
clc
cli
mov
inc
inc
dec
cmp
xor
mov
and
sub
cmp
fsubl
sub
sub
xor
push
and
and
rcrl
push
sub
sbb
jbe
test
mov
test
sbb
or
scas
add
sbb
inc
inc
movb
std
in
scas
in
int
adc
mov
ret
mov
cli
int3
ret
cli
adc
jle
pop
mov
dec
pop
cwtl
sbb
xlat
mov
mov
rcl
rcrl
loop
mov
mov
dec
fldt
mov
mov
jmp
mov
inc
popa
es
inc
std
loope
lea
aad
push
sub
add
pop
pop
daa
mov
mov
ds
sub
xor
jb
stos
fistl
push
xor
outsl
inc
outsb
pop
dec
bound
pop
arpl
sub
pop
imul
imul
inc
repz
pop
clc
bound
insl
push
outsb
jns
call
mov
xor
pop
sub
xlat
bound
imul
add
aad
lds
popa
jne
add
lret
insl
stos
wbinvd
add
das
or
pop
sub
ljmp
sub
movsb
sub
sub
sub
fisubrs
jmp
xor
jp
mov
ljmp
popf
xor
cs
sbb
cmp
insb
subl
xor
xor
sub
cld
push
push
cs
xor
and
addl
xor
sub
xor
adc
xor
cmp
incl
xor
xor
xor
xor
xor
sub
xor
xorl
decl
jg
mov
nop
xor
jmp
xor
xor
and
or
xor
pop
xor
xor
ss
xor
sub
xor
ss
jmp
cli
xor
xor
xor
xor
xor
jle
mov
ss
cmp
cmp
js
mov
pop
xor
aaa
mov
cmp
inc
cmp
cmp
ss
cmp
cmp
std
sbb
and
adc
adc
sub
and
inc
sub
sub
push
sub
stos
sub
ljmp
loop
jmp
repz
adc
sbb
cs
shl
outsl
cltd
insb
das
js
jp
xchg
and
mov
loopne
sub
push
das
pop
xor
popf
outsl
popa
clc
lods
sub
dec
xor
mov
mov
cwtl
sub
or
adc
sbb
dec
and
aas
xor
cli
in
sub
xor
push
das
test
cmpsb
xor
ss
in
das
out
xor
xor
push
shlb
arpl
xor
push
xor
lcall
xor
clc
call
cmp
cmp
xor
aaa
aas
mov
cld
incl
cmp
xor
cmp
pushl
mov
cmp
cmp
xor
cmp
inc
cmp
cmp
test
cmp
ljmp
pop
mov
cmp
cmp
cmpb
mov
xchg
aaa
cltd
cmp
cmp
push
add
jg
sub
sub
sub
mov
sub
sbb
cmpsb
xor
dec
sub
sub
cli
xor
sub
and
sub
push
xor
shrb
das
fidivl
loop
repz
fidivrs
xor
das
xchg
dec
xor
xor
sub
das
in
xor
xor
and
xor
add
incl
mov
movsb
xor
xor
sub
xor
lods
lock
out
xor
xor
xor
sub
pop
pop
nop
sub
mov
in
mov
aad
xor
xor
xor
xor
sub
or
xor
mov
lea
adc
inc
xor
cs
xor
incl
pop
cwtl
xor
inc
insl
scas
xor
xor
imulb
cmp
cltd
xor
cmp
xor
inc
xor
lds
test
mov
movsl
xor
jg
xor
ss
cmp
imul
stos
cmp
cmp
cmp
cmp
outsl
outsl
adc
cmp
cmp
push
cmp
cmp
cmp
pop
cmp
cmp
or
lea
jae
mov
cmp
cmp
lea
jg
call
sub
or
sbb
dec
sub
fs
xor
subb
sub
stos
lods
xor
leave
cs
xor
das
repnz
adc
sbb
dec
xor
insl
cs
das
inc
pushf
xor
scas
sub
xor
xor
sub
cs
add
das
xor
dec
pop
cli
fldt
jle
xor
xor
xor
imul
mov
xor
sub
xor
jl
sti
lods
sub
xor
fidivrs
pop
sub
xor
lcall
xchg
xor
loope
call
xor
je
aaa
dec
cs
xor
xor
xor
xor
pushl
cs
pop
xor
xor
push
xor
jbe
xorl
mov
fmull
xor
xor
inc
xor
jo
jo
test
movsl
xor
pushl
inc
xor
xor
xor
cmp
aaa
pop
xor
test
xchg
cmp
aaa
aam
xlat
xor
idivl
out
je
sarb
cmp
aaa
clc
sbb
push
outsl
cmp
ss
cmp
cmp
loopne
outsl
xchg
scas
cmp
sub
sub
cs
xor
mov
fldt
pop
sub
jns
outsl
jge
pushl
sub
dec
sub
das
push
xor
sub
fistpll
cmpb
sub
jmp
sbb
sbb
dec
mov
cmp
lds
sub
aaa
je
inc
das
sub
cmc
xor
mov
sub
test
das
cld
cmp
lahf
fnstcw
sarl
jmp
cmc
rcl
pop
mov
das
add
sub
xchg
xor
aas
sub
push
sub
sub
das
shrb
jmp
out
sub
sarb
sub
ja
or
jg
sub
xor
lahf
sub
sub
add
adc
and
xor
inc
cs
das
or
shll
xor
sub
and
add
lahf
xor
lret
in
jg
jmp
cmc
xor
xor
sub
iret
xor
ljmp
sbb
cmp
sub
xor
mov
std
dec
ljmp
xor
xor
xor
xor
xor
pop
xor
dec
xor
sbbl
xor
sbb
mov
aaa
pop
mov
xor
pop
xor
test
pop
xchg
xor
stos
xor
cs
xor
xor
cli
xor
add
adc
inc
das
push
test
test
popf
scas
das
ret
xor
xor
sub
movsl
xor
xor
decl
gs
je
mov
cltd
xor
pop
pusha
out
fists
sub
sub
sub
adc
and
popa
gs
insb
insb
fistps
adc
emms
insb
jp
cs
add
inc
inc
pop
imul
inc
push
inc
sub
lds
mov
fsubrp
ds
les
out
ficoml
or
pop
test
jae
jne
inc
adc
mov
sti
loope
in
iret
out
xor
xlat
sarl
iret
mov
fnstcw
daa
mov
ror
das
mov
xlat
mov
mov
pusha
sbb
jnp
dec
cmpl
aas
xlat
out
mov
sarb
int3
shl
and
fsubrs
pop
cmpsl
shl
mov
lret
mov
push
arpl
pusha
xchg
dec
mov
sar
push
outsl
data16
popa
jb
clc
ja
gs
dec
imul
push
imul
fisubrl
popa
gs
outsl
push
outsl
popa
insl
sbb
arpl
lret
ret
dec
mov
aad
or
fwait
xchg
pop
pop
cs
incl
adc
ret
rol
iret
mov
stc
lret
mov
repz
ret
inc
pusha
sub
fcom
push
clc
gs
jnp
lret
jecxz
shlb
inc
mov
pop
js
inc
inc
mov
mov
loope
and
je
arpl
fs
sub
jns
je
jbe
adc
imul
and
daa
je
sub
popa
fldcw
outsb
xor
jo
pusha
nopl
push
arpl
pop
addr16
mov
jns
or
jae
mov
jo
cmp
push
jb
jns
pop
sbb
xor
xor
hlt
mov
xor
add
mov
lret
fsubl
data16
in
into
repz
imull
in
ja
pop
add
jb
add
in
mov
outsb
xchg
xor
ja
xchg
cmp
aad
dec
mov
iret
cmp
test
xchg
mov
lret
aas
ja
outsb
imul
inc
inc
dec
push
jae
inc
lea
inc
push
daa
fdivrl
arpl
gs
pop
inc
bound
divl
pop
jo
inc
cmp
ds
pop
fildll
inc
js
adc
push
push
adc
jns
fucomp
ret
jno
dec
adc
fs
mov
mov
insb
andl
jne
test
inc
xor
jne
push
mov
adc
mov
imul
lods
inc
jb
adc
jnp
outsl
and
outsl
sub
cmp
push
or
dec
add
or
fdivl
pcmpeqw
adc
xchg
jae
xor
jae
dec
jb
or
mov
movd
or
pop
push
xchg
jbe
mov
inc
jl
dec
push
inc
mov
fs
daa
push
sti
cmpb
inc
xor
jae
and
test
js
imul
fsubs
pop
add
or
add
add
add
jbe
in
decl
xor
outsb
xor
inc
daa
inc
cli
lods
inc
jg
add
idiv
scas
adc
add
out
adc
xor
xor
xor
xor
std
std
mov
inc
jns
cmpb
adc
outsb
mov
daa
add
ja
outsl
add
mov
xchg
int
sbb
add
mov
fucomi
fistps
inc
repz
syscall
mov
dec
sbb
outsb
adc
mov
add
mov
and
lock
nop
mov
arpl
in
add
fstsw
pop
pop
add
js
lods
in
mov
mov
popf
pop
cwtl
add
mov
stc
lret
push
pop
popa
out
nop
cwtl
dec
sub
xchg
jae
shrl
mov
addb
cmp
int
add
pop
adcb
sbb
ljmp
adc
cmp
shl
int3
cmp
or
push
or
add
push
inc
dec
push
jmp
clc
mov
sbb
pop
insb
outsl
addr16
xchg
js
popa
adc
arpl
inc
insb
les
icebp
pop
mov
inc
push
pop
inc
dec
inc
push
inc
push
subb
add
sub
add
inc
repnz
aas
repnz
rolb
nop
add
add
sub
cltd
rorb
in
in
cmp
add
push
bnd
sbb
adc
xchg
add
add
jg
sub
aas
push
adc
mov
add
add
shlb
push
add
jb
jbe
sub
mov
push
add
and
xchg
call
gs
je
inc
imul
outsb
addr16
pusha
mov
imul
inc
insb
jne
push
jge
outsb
insl
and
je
push
imul
add
add
outsl
jae
dec
popa
sub
aas
fsubrs
sub
inc
jb
outsl
jb
outsb
mov
imul
aaa
call
sub
outsl
outsl
insb
xor
jle
outsl
je
outsl
std
jge
mov
and
js
dec
push
gs
jo
dec
popa
insl
jge
cmp
jb
pop
cmp
arpl
jae
in
lret
mov
outsb
or
je
add
jne
jg
gs
push
je
sti
push
dec
imul
mov
fsubrs
or
pop
jmp
pop
rclb
jne
dec
outsb
outsw
adc
xor
adc
push
pop
pusha
insl
or
jb
pop
lods
popf
insl
fldt
or
inc
daa
js
rorb
push
jns
or
imul
sub
mov
imul
sbb
inc
fs
dec
outsl
popa
fs
outsb
jb
push
sahf
jns
adc
insl
adc
push
dec
or
sbb
mov
jmp
adc
pop
adc
pop
or
pop
or
call
leave
insl
fstpt
push
decl
dec
adc
or
and
adc
xchg
add
pushl
add
nop
add
or
and
incl
sbb
ljmp
or
mov
fldt
or
and
inc
sub
push
push
in
fbstp
xor
jmp
insl
cmc
add
mov
dec
cmp
das
mov
dec
sbb
xchg
lock
push
or
icebp
insl
mulb
mov
jno
mov
mov
mov
in
or
je
jl
mov
or
push
andl
sar
or
mov
pop
cmp
movsb
mov
inc
das
dec
or
cmpsb
lea
xor
adc
inc
in
mov
data16
mov
in
or
xchg
jo
pop
push
sbb
mov
pop
cli
cmovbe
enter
in
wbinvd
pop
insw
popa
or
insl
or
data16
repz
aaa
push
lods
inc
sub
xchg
add
mov
jb
jae
arpl
outsb
or
jo
mov
mov
je
xchg
or
pop
mov
pop
and
insl
bound
fcmove
addr16
data16
or
jbe
push
jg
jns
sbb
outsb
arpl
inc
inc
js
inc
jb
ljmp
jo
je
sbb
iret
mov
inc
arpl
je
pop
imul
data16
popaw
inc
pop
outsl
inc
xlat
fisubrl
test
push
movsl
insl
xor
shlb
mov
outsb
adc
or
scas
mov
jne
inc
jo
or
pop
mov
and
push
shll
push
push
push
push
fs
fs
or
mov
push
mov
gs
lret
mov
cmpb
outsl
loope
sub
ja
xor
pusha
ljmp
push
push
cld
xchg
xchg
inc
dec
add
sbb
pop
ja
add
add
add
jbe
or
fiaddl
add
adc
add
je
and
das
adc
cmpl
push
pop
sahf
in
aaa
jo
xor
fadds
mov
ud2
push
cs
js
repnz
nop
pushl
pop
jmp
push
and
jb
popa
je
lret
cs
push
add
cmpb
aam
sbb
xchg
mov
dec
jae
xchg
popf
mov
jae
dec
add
cmp
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
