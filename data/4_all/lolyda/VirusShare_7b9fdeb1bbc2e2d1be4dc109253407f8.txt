daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
mov
pusha
fnsave
add
jmp
fpatan
addr16
ud1
jmp
add
leave
test
stc
push
mov
fidivrs
call
add
push
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jge
in
testb
sar
inc
jnp
mov
rcll
je
notl
pushl
dec
adc
adc
adc
insb
pop
loope
sbb
jge
mov
push
lods
push
in
fildll
jbe
movb
jne
repz
sbb
sbb
xor
je
imul
add
mov
mov
aaa
idivl
inc
push
sub
movb
rep
stos
stos
push
adc
push
rorl
and
loop
leave
ret
cmp
or
mov
ret
mov
sbb
or
pusha
sbb
push
insb
decl
pop
cld
repnz
mov
or
shl
add
cld
outsl
out
rolb
adc
repnz
not
sub
lea
mov
mov
push
jmp
push
and
cmpsb
xlat
std
mov
rep
mov
xchg
and
or
jecxz
flds
push
push
add
in
push
and
add
enter
sub
fwait
lds
xlat
cmpsb
movsb
rclb
or
xchg
xchg
mov
mov
rcll
push
mov
dec
xor
data16
push
cmp
inc
push
jns
lea
pop
jl
adc
inc
fmul
bound
push
stos
lret
adc
and
adc
cwtl
mov
les
pop
adc
lds
fnstenv
lock
jp
xchg
inc
push
sbb
aaa
pusha
sub
jne
dec
jbe
pusha
cmp
mov
imul
pusha
pop
jae,pt
imul
andl
pop
xchg
adc
pop
je
je
add
adc
cmp
push
inc
nop
jmp
inc
add
inc
js
mov
jp
dec
cmpb
jne
adc
adc
xchg
ret
mov
icebp
scas
pop
mov
push
push
std
or
out
and
push
mov
adc
mov
push
inc
jb
ss
mov
aaa
mov
ds
sti
push
je
add
filds
addb
cmp
test
jne
mov
adc
je
pop
ret
in
or
stos
push
lret
or
mov
dec
insb
rorb
add
xor
jne
test
adc
adc
lea
adc
int3
loop
pusha
fwait
loope
push
and
insb
hlt
les
std
enter
or
push
xor
rcll
arpl
mov
jecxz
sbb
cld
jecxz
mov
lret
mov
sahf
jbe
cmp
xchg
pushf
and
nop
fisubs
popf
or
mov
rcll
cli
sub
or
xor
jo
push
mov
push
push
sbb
xor
enter
inc
inc
cmp
stos
ret
xor
sub
pop
push
jmp
lock
sbb
sub
xor
xor
add
pop
push
mov
cmp
push
adc
out
fnstenv
xor
sbb
mov
gs
xor
bound
dec
cmp
imul
adc
pop
mov
loope
pop
xorb
dec
inc
clc
push
pop
cmpsb
push
sbb
adc
cmp
enter
pusha
mov
test
jmp
movsl
mov
add
loope
fs
mov
rcrl
mov
mov
push
mov
cmpb
mov
mov
pop
add
dec
cs
lea
pop
or
iret
dec
orb
push
idivb
jno
stos
nop
les
or
aad
sub
push
cmpb
jg
xor
ret
dec
bound
repnz
or
or
mov
or
sbb
push
push
dec
fwait
add
dec
pop
push
dec
or
or
push
mov
shll
cmp
inc
jnp
xlat
adc
cmp
push
push
rcll
and
push
add
test
cmpl
pusha
add
pop
pop
shll
fwait
push
or
push
or
adc
sti
xchg
adc
cmp
mov
pop
mov
insb
ret
mulb
adc
ss
insb
mov
mov
dec
cld
xor
push
mov
out
int
or
or
hlt
xor
push
push
jns
cmp
push
or
or
mov
in
push
fs
pop
push
push
xchg
mov
mov
pop
add
push
mov
add
dec
jns
add
pop
stos
mov
xlat
push
cmp
add
outsl
enter
jne
lahf
add
loope
loopne
mov
call
dec
mov
mov
outsb
add
mov
movsb
adc
jle
out
inc
cmc
push
push
cmp
cmp
jecxz
lret
loopne
xchg
xor
leave
lea
lods
arpl
ja
mov
inc
sti
les
test
sub
fldt
xchg
insb
mov
shrl
pushf
sti
pusha
js
adc
mov
nop
mov
movsb
add
adc
fst
or
loopne
jmp
icebp
adc
mov
push
outsb
jl
sbbl
sbb
cmp
pop
shr
push
rorb
fistpll
mov
jge
push
shl
gs
data16
rorl
mov
pop
jmp
mov
push
jne
push
and
in
popa
leave
shlb
pop
push
adc
dec
and
imul
test
mov
inc
inc
push
and
fiadds
mov
add
pop
ja
inc
cmp
lcall
and
mov
xor
loop
sub
sub
popa
rclb
pop
js
rclb
sbb
sbb
push
mov
push
or
jo
mov
adc
movsb
xor
dec
xor
xor
dec
push
fwait
movsb
or
adc
ficompl
cwtl
sbb
and
sbb
xor
jnp
test
lock
xchg
aam
and
in
mov
ja
fnstenv
jmp
andl
push
xchg
push
roll
mov
sub
rcll
or
and
push
pop
lock
push
and
ja
or
adc
sub
push
inc
aaa
or
push
or
fwait
xchg
push
sahf
xlat
add
dec
loop
xchg
jb
inc
mov
lods
push
ret
in
add
add
push
cld
ds
nop
dec
fimuls
cvttps2pi
insb
push
push
cmp
lret
or
inc
cmpb
xchg
subl
negl
adc
movsb
fldcw
pop
mov
or
or
punpckhwd
rorb
or
sub
adc
jmp
ss
mov
cwtl
xor
sbb
int
mull
mov
or
jbe
sbb
push
data16
mov
mov
imul
ret
push
sub
fsubp
jne
inc
add
out
add
xor
bound
mov
or
cld
and
loope
and
push
clc
inc
test
nop
mov
loop
mov
inc
nop
pop
mov
and
jmp
dec
xor
mov
mov
mov
mov
rolb
adc
push
adc
vpaddusb
mov
test
or
pop
xchg
adc
push
mov
lahf
nop
das
sub
adc
lea
pop
cs
inc
data16
enter
shll
jo
ret
or
inc
popa
imul
xor
leave
sbb
jge
shlb
nop
dec
dec
push
sbb
adc
mov
sub
xor
or
jne
pusha
push
movl
fstl
pop
adc
fdivrp
pop
push
jno
int3
or
jmp
or
mov
popa
pusha
fs
mov
gs
fs
rcl
mov
or
shr
push
or
les
addl
add
and
mov
inc
call
pop
jbe
cmp
imul
add
sbb
fists
pusha
loop
pusha
fimull
pusha
ja
pop
pushf
es
mov
lock
sub
push
mov
push
pop
mov
adc
pop
pusha
sar
sbb
jb
gs
pop
icebp
xchg
mov
inc
clc
lods
mov
or
jbe
ffreep
scas
call
add
adc
mov
incl
inc
mov
js
inc
int
push
jo
lods
rol
in
add
mov
push
and
adc
adc
jp
leave
cmpsb
fwait
sub
dec
push
cmp
mov
lock
clc
jnp
testl
cmpl
push
out
lods
xor
jae
insb
insb
lds
jle
jg
sti
xor
xlat
and
push
push
push
cmpl
mov
sub
insb
neg
fldt
mov
daa
push
sub
mov
ds
push
fdiv
clc
dec
pusha
js
scas
add
mov
adc
jle
adc
shrl
inc
cltd
sub
fs
test
mov
clc
out
sbb
imul
into
insb
int
push
xor
jnp
test
cmp
scas
pop
into
fs
icebp
or
jnp
mov
psubw
sbb
pop
out
add
xchg
dec
sub
or
xor
adc
mov
xchg
stos
mov
or
mov
sbb
cmp
in
mov
dec
cwtl
jo
in
xchg
or
push
mov
cld
imul
lea
dec
dec
add
daa
sbb
and
xchg
jno
or
lea
stos
mov
jns
inc
int3
in
enter
sahf
add
xchg
jl
fidivrl
sbb
mov
mov
mov
push
dec
sahf
andl
mov
jl
push
dec
sahf
nop
insb
mov
mov
mov
dec
push
and
xchg
jne
add
cmp
xchg
cmp
aam
shrb
add
dec
scas
enter
lock
cmp
aam
stc
adc
lods
in
inc
mov
lahf
inc
flds
cmc
add
js
bnd
xchg
in
test
je
repz
mov
mov
sbb
negb
les
xchg
add
or
mov
clc
shll
pop
add
and
rol
xor
inc
sbb
pop
jns
es
aad
shlb
cs
mov
aad
sub
adc
not
es
pop
push
push
add
ja
test
xchg
or
push
sysenter
aaa
loopne
mov
xor
or
mov
arpl
push
fwait
inc
sub
xchg
in
sbb
pop
jge
ret
sub
cmp
add
pop
add
outsb
mov
push
inc
mov
jne
adc
mov
mov
out
add
mov
jnp
repz
xor
insb
xor
mov
jne
add
gs
jno
lret
leave
invd
fs
fimull
adc
cmp
mov
sbb
adc
xchg
or
das
stc
inc
or
or
js
test
jno
arpl
mov
test
cmp
pop
mov
push
sub
call
andb
test
add
movsl
rolb
push
insb
cwtl
adc
mov
push
sysexit
xor
push
lock
sbb
aad
int
ja
adc
call
shrb
add
xchg
cli
imul
or
leave
jae
daa
jne
pop
sbb
je
pop
cltd
testl
add
mov
add
mov
cmp
jb
sbb
daa
and
xor
mov
mov
arpl
push
or
addr16
nop
inc
mov
xchg
push
cmpsl
and
or
mov
or
and
push
sbb
dec
xlat
adc
mov
push
add
inc
and
and
adcl
xor
inc
adc
mov
orl
and
mov
sub
add
xor
aam
int3
enter
les
sarb
mov
test
xor
xor
xor
xchg
nop
mov
test
xor
je
insb
push
fs
pop
push
xor
xor
push
dec
dec
inc
xor
xor
inc
cmp
xor
xor
xor
sub
and
xor
xor
sbb
adc
xor
xor
or
add
repz
add
inc
les
inc
jns
lahf
iret
mov
inc
xchg
inc
cwtl
inc
pushf
sbb
sbb
mov
sbb
sbb
repnz
shl
enter
xor
aam
fsub
fs
add
icebp
arpl
bound
adc
das
cld
int3
mov
pop
ret
push
xor
cmp
ret
and
nop
mov
jo
ja
add
ret
push
xor
add
outsb
rclb
cmp
inc
push
outsl
mov
push
xor
sub
fisttpl
clc
inc
orl
push
insb
adc
inc
leave
pop
ja
mov
or
add
cmpsb
jg
mov
or
rorb
into
out
mov
or
dec
push
into
inc
aam
push
inc
mov
fcmovne
pop
push
or
push
add
mov
xor
mov
mov
jne
cmpb
jne
inc
and
divb
mov
cmp
je
cmp
repnz
shll
rorb
int3
inc
iret
fcmovnu
cli
testb
mov
jmp
sub
jbe
jmp
fldcw
lock
push
pop
xor
and
ljmp
xor
imul
or
sub
mov
mov
mov
call
inc
xchg
add
lea
push
add
das
and
out
mov
inc
hlt
lock
popa
or
inc
lahf
mov
cld
or
add
push
xor
xlat
repnz
mov
mov
clc
jne
push
push
and
pop
popf
stos
jne
test
xor
jo
loop
xor
cmp
mov
inc
lea
cmp
fwait
ret
mov
into
int3
add
dec
lock
loopne
ss
enter
mov
adc
sbb
pop
pop
add
sub
shll
int3
mov
dec
sahf
xchg
mov
dec
dec
shll
adc
inc
push
fs
dec
shll
adcb
imul
cmpsb
imul
addr16
push
add
mov
pop
adc
pop
or
sbb
in
xchg
leave
adc
mov
or
sbb
or
fildl
mov
jp
nop
xor
adc
int
and
inc
sbb
comiss
scas
jmp
scas
repz
sub
pop
sub
adc
mov
mov
out
arpl
movhps
shlb
xchg
pop
sbb
xchg
xlat
jne
mull
push
addl
pcmpgtd
jne
xor
adc
dec
xlat
insb
mov
pop
icebp
testl
xlat
jne
or
test
jno
jbe
xlat
xor
pop
push
push
addr16
xlat
je
mov
movsl
addr16
mov
scas
fnstenv
adc
inc
adcl
mov
scas
arpl
sar
or
lret
xlat
mov
dec
dec
add
ss
cmpsb
imul
into
pop
ss
rol
mov
shrl
cmpsb
mov
dec
shll
imulb
scas
sti
add
add
sbb
je
mov
dec
loopne
or
mov
push
int3
xor
add
imulb
cwtl
fstl
add
inc
loope
dec
and
jne
sahf
xchg
xor
xor
lods
rcrb
out
and
adc
imul
scas
imul
cmp
xor
lcall
and
adc
jmp
cmpsb
imul
testb
imul
imul
cmpsb
imul
mov
pop
cwtl
mov
or
adc
adc
and
gs
or
es
jns
insb
sbb
das
loopne
dec
xor
xchg
pop
jb
and
inc
xor
cs
pop
push
and
aas
xor
cmpsb
imul
imul
mov
imul
in
out
cmpsb
imul
imul
cmpsb
imul
shlb
add
mov
push
enter
and
inc
or
stc
das
loopne
add
nop
pop
repnz
sub
rorb
push
inc
xchg
push
repnz
in
mov
xor
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
cltd
dec
xor
inc
inc
dec
xor
cs
insb
add
in
psubq
push
inc
push
or
push
push
xor
dec
inc
push
add
lret
sbb
shll
iret
out
loopne
jmp
push
mov
push
mov
std
stc
cli
cld
idiv
std
xor
ja
add
clc
cmp
stc
sti
aaa
cli
lret
adc
or
mov
pop
mov
cld
dec
sbb
pusha
outsb
push
push
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
pop
call
dec
dec
sbb
pop
bound
dec
push
sbb
idiv
incl
mov
mov
and
mov
and
xchg
inc
sub
xchg
rclb
jg
xor
mov
xor
xchg
ret
daa
movsb
xor
sarl
int
rol
or
shlb
xor
xor
lock
bound
or
adc
add
daa
adc
dec
fldcw
fnstenv
push
sahf
push
dec
xlat
sbb
inc
insl
or
or
nop
mov
cld
sti
sti
pop
lcall
add
fcmovne
fcos
adc
or
push
jb
jae
or
and
fisttpll
xchg
in
jo
or
add
or
adc
and
jno
jb
arpl
dec
mov
dec
add
pop
sub
pop
movsb
imul
in
pop
cs
cmp
popa
pop
outsb
pop
cld
mov
mov
imul
or
dec
push
push
jne
inc
fcomps
fistpll
in
out
clc
js
stc
notl
dec
push
push
cmp
xchg
cmpsb
arpl
sbb
jg
jecxz
std
sti
push
notb
scas
or
idiv
pop
mov
or
pop
mov
xorl
imul
hlt
adc
dec
arpl
fstps
das
cld
add
mov
fbld
xchg
dec
cli
shll
cmp
mov
dec
pusha
add
add
dec
inc
inc
jns
iret
test
mov
movsb
sub
sbb
pop
les
dec
xchg
jns
add
fstpt
faddp
dec
push
push
data16
cs
push
mov
cmpsb
mov
stc
sti
testb
cld
add
idiv
adc
fs
mov
dec
in
dec
icebp
subl
xchg
movsb
imul
stc
sbb
fcomp
out
mov
push
or
pop
insl
pusha
dec
fistl
into
out
aas
gs
add
add
push
popa
inc
mov
pop
push
std
iret
mov
push
mov
dec
cmp
cld
rolb
gs
ja
clc
add
aas
push
mov
or
push
jmp
fs
and
mov
dec
popa
cmp
pop
ja
ret
in
cli
aam
inc
cmp
inc
inc
std
jle
push
jae
push
push
clc
jecxz
dec
push
push
arpl
add
or
mov
jmp
fistps
or
or
cmovns
outsb
js
mov
rorb
add
dec
mov
jg
push
add
std
pop
mov
or
or
mov
ja
out
mov
mov
xor
daa
orl
mov
xor
and
pop
mov
or
cli
adc
jge
xor
subl
leave
das
mov
push
sub
pop
push
push
mov
dec
push
push
bound
jnp
hlt
out
test
xor
lock
movsl
mov
popa
cld
push
adc
dec
dec
pusha
mov
dec
lds
cmpsb
imul
mov
jnp
mov
clc
stc
fcoml
mov
xchg
cmpl
addr16
rcll
or
push
add
mov
decl
push
clc
rcrb
push
jmp
addb
inc
stc
test
adc
push
cld
push
mov
xchg
cli
jae
xchg
loop
dec
cmpl
mov
mov
push
outsl
aaa
cli
jno
arpl
jnp
cld
out
ret
push
pushaw
push
lods
loop
daa
cmpl
cld
outsl
in
div
fistpll
add
pushl
push
sub
pop
sarb
dec
arpl
lcall
imulb
mov
rolb
push
out
mov
xchg
or
inc
insl
jnp
arpl
mov
clc
out
lret
xor
lahf
push
xchg
push
jecxz
inc
xchg
jecxz
es
jg
fists
test
jecxz
lods
push
rorb
dec
inc
xchg
test
xor
mov
pop
or
jno
test
pop
mov
in
sbb
and
or
int
pop
jecxz
push
push
jecxz
sbb
jecxz
sbb
jnp
ret
jecxz
dec
daa
or
pop
movhps
jb
adc
mov
jne
and
cs
repz
jl
and
add
pop
jg
dec
aad
xor
and
ret
fsubs
adc
daa
mov
mov
or
shrl
imul
add
push
push
insb
std
jle
xor
pop
daa
ja
testl
cmovns
ds
test
push
xorl
das
xor
lahf
js
popa
divl
jecxz
mov
jae
imulb
hlt
cli
sub
das
pop
fiadds
push
cmp
adc
stc
add
jecxz
ret
xchg
xchg
pop
add
pop
mov
test
cmc
bound
push
outsb
xchg
pop
push
push
push
aas
xchg
aas
and
jo
pusha
or
inc
das
fistps
push
push
in
daa
xor
mov
lds
stc
mov
dec
push
push
sbb
idivb
add
xchg
imul
test
fcmovbe
lods
aaa
adc
std
jle
add
test
sub
inc
and
pop
pop
sarl
clc
aaa
sbb
js
imull
mull
outsl
insb
jl
add
clc
and
adc
cmpl
stc
test
and
gs
sub
xor
ret
in
out
mov
sub
in
inc
arpl
test
or
insb
or
mov
arpl
push
xchg
xlat
dec
jg
pop
out
in
cltd
inc
pop
jle
adc
dec
ja
fisttps
sbb
mov
inc
shlb
filds
pop
push
addr16
sub
pop
loope
pop
inc
add
xchg
stos
dec
insl
mov
inc
jl
xor
sub
test
add
sub
sbb
or
pop
addr16
sarl
push
or
pop
xchg
lock
mov
adc
inc
push
mov
jae
lods
dec
or
xchg
dec
xlat
mov
or
dec
xor
fistps
add
add
notl
push
sbb
add
mov
popa
std
jne
ret
and
outsl
lock
xchg
jmp
jb
xchg
inc
sub
pop
push
dec
jo
dec
cmp
mov
xor
sub
loope
gs
add
sbb
fbstp
dec
pop
je
mov
imul
std
mov
scas
dec
and
in
add
imul
lock
test
aaa
sub
add
sub
cli
mov
xchg
push
cli
pop
insb
adc
das
sbb
dec
fwait
daa
or
aas
mov
xchg
clc
or
aam
insb
rcll
fcoml
jecxz
inc
icebp
dec
fnstsw
dec
idivl
decb
mov
sbb
add
mov
aas
clc
dec
push
loopne
inc
sbb
xchg
inc
pop
lcall
xor
or
add
mov
pop
aaa
sub
cld
ss
xor
outsb
or
inc
dec
out
daa
push
test
mov
or
add
out
jl
pop
insb
or
loope
xchg
lea
pop
int
push
sbb
out
jp
xor
fbld
and
ret
sti
shll
stc
jg
mov
outsl
add
cmp
add
ret
jae
int
ss
std
popf
lock
adc
add
inc
add
dec
inc
in
inc
pop
ss
rol
push
nop
imul
in
sar
fwait
add
jmp
mov
in
xor
cltd
lock
jecxz
iret
inc
inc
gs
adc
ret
cmpb
sbb
scas
mov
filds
xchg
incb
mov
imul
push
test
cmc
jno
jl
mov
add
mov
insl
testl
lds
add
mov
shl
sub
or
xor
rcrb
fisttpll
into
cli
adc
mov
sti
push
push
clc
movq
adc
js
mov
add
das
jecxz
mov
add
in
and
leave
adc
sbb
mov
loop
add
pop
cmp
cmp
jecxz
cld
fs
lods
daa
mov
cltd
push
jae
gs
out
fstp
das
pop
out
cld
xchg
into
dec
gs
or
inc
dec
outsl
incl
pop
sub
cli
in
stc
pop
pusha
sbb
mov
sti
int
pop
or
lret
fwait
jle
arpl
sub
arpl
adc
lds
mov
dec
xor
sbb
xchg
pop
sbbb
arpl
dec
in
addr16
add
mov
sti
repnz
and
push
lea
test
fs
mov
sti
outsl
adc
out
cli
ret
cld
int3
push
jo
arpl
push
clc
int
mov
insb
add
loop
jle
in
std
xchg
repnz
clc
mov
push
xchg
roll
ret
ds
mov
cmp
cmpl
push
incb
cmc
sbbl
lock
inc
jecxz
cld
neg
dec
sbb
sub
adc
test
jecxz
out
decl
js
cld
addr16
adc
popa
add
int3
mov
inc
out
orl
jmp
roll
xchg
test
pop
in
jecxz
cmp
jno
pusha
fsts
xchg
insl
xor
notb
adc
mov
xorl
jp
call
sti
addr16
sbb
mov
push
dec
filds
in
mov
jmp
or
mov
dec
in
jbe
xor
jo
std
jb
ret
lock
test
xor
add
std
je
arpl
out
std
arpl
add
jmp
sbbb
push
out
jbe
xchg
or
mov
pop
in
insl
sub
frstpm(287
in
jmp
out
test
push
push
fucomi
xor
daa
loope
lods
outsb
or
pcmpeqb
jmp
rorl
in
in
or
mov
adc
mov
jmp
jmp
out
add
in
mov
out
push
lock
push
in
aas
hlt
dec
loop
pushl
push
jae
into
adc
dec
in
cli
sti
cld
repnz
jnp
out
pop
popa
add
jmp
add
out
test
cli
and
adcb
push
repnz
xor
loope
push
dec
subb
mov
pop
jo
loope
adc
sti
jge
repnz
lock
mov
cmpsb
jno
xchg
out
inc
jmp
push
mov
out
mov
loope
mov
xorl
pop
mov
out
das
push
pop
mov
aaa
pop
sub
pmaddwd
dec
or
push
dec
pop
test
incl
jl
pop
incb
xorl
add
sbb
neg
push
mov
add
push
pop
bound
sti
mov
in
std
pop
xchg
jg
sub
pop
cli
or
gs
xchg
push
push
add
ja
repz
pop
ljmp
jae
lds
mov
jg
test
jecxz
insb
jg
mov
inc
add
push
adc
jmp
incb
cmp
dec
cmp
mov
cmp
enter
add
dec
lods
pushf
jecxz
pop
mov
clc
add
mov
fsubrl
pop
das
add
sub
es
sub
repz
adc
cmc
sub
push
lods
or
rcrl
adc
sarb
pop
sub
sarb
filds
les
inc
inc
notb
xchg
jge
inc
dec
ret
fwait
mov
add
fisttpll
or
pop
and
pop
orl
inc
jno
cmpsl
jle
and
out
decl
arpl
xchg
popa
cmp
insl
aam
or
arpl
sub
test
incl
pop
mov
sub
inc
decb
cmpsb
inc
jg
dec
orl
xchg
xor
outsb
sub
cmp
push
pop
xor
add
xchg
test
pushf
rcrl
mov
pop
je
dec
addr16
xchg
std
dec
imul
jb
mul
xor
sub
jge
addb
add
in
push
or
int
pop
insb
add
xchg
inc
add
add
mov
jecxz
loope
icebp
jg
sar
mov
add
test
xchg
add
lcall
loop
jle
movsl
imul
ret
cld
inc
jg
push
push
aad
push
sub
or
outsl
inc
ss
notb
push
or
jnp
lret
add
cmp
pop
cmc
insl
lret
mov
aaa
adc
lea
lds
imul
jb
ret
or
call
lahf
dec
add
xorl
mov
cli
jg
pop
xchg
js
sbb
adc
dec
and
lds
ljmp
or
inc
cmp
cld
aaa
clc
jle
dec
inc
cltd
jo
cmpl
sbb
or
std
push
mov
stos
in
mov
push
mov
mov
add
inc
aaa
dec
wbinvd
or
dec
insb
iret
add
aas
negl
push
jg
outsl
out
clc
jle
clc
leave
cld
jp
std
mov
jle
add
cmp
out
movl
jae
ret
loope
pop
rorl
adc
xchg
xchg
arpl
xchg
cmpb
pop
test
and
out
sub
push
clc
out
inc
xlat
xchg
cld
mov
pop
xchg
outsb
pop
insl
mov
xor
fisubs
xor
dec
mov
add
push
outsl
jne
xor
idiv
pop
mov
adc
outsl
and
push
cmc
xchg
cli
rcrb
mov
or
push
ljmp
sahf
mov
cmpsl
jb
dec
pop
cmp
push
jbe
lea
sbb
push
sti
sub
cwtl
push
jbe
out
xor
dec
dec
or
cmp
xchg
out
ljmp
aas
and
jno
cld
jbe
std
outsb
pop
sbb
rclb
xchg
adc
fadd
push
xchg
sbb
mov
call
xor
dec
or
cltd
cmp
xchg
and
imul
int
popf
xchg
add
outsl
pop
test
shrl
push
pop
push
push
push
inc
jge
push
dec
sbb
mov
cmp
xchg
mov
dec
pop
lock
mov
mov
mov
or
cli
imul
das
xchg
adc
sahf
lea
popa
pop
stos
and
cmp
xchg
stc
xor
pop
cmp
inc
sub
sub
clc
xchg
fisttps
insl
xor
aaa
cmp
notl
call
dec
jne
push
pop
sti
xor
mov
dec
lcall
das
mov
loop
cmp
ret
xchg
jle
repz
incl
loope
cmc
sti
mul
add
mov
add
orb
test
lea
test
fcoml
jmp
add
vcvttpd2dqx
mov
inc
cmpsl
jno
fbstp
pop
sbbb
pop
pop
push
aam
ja
xrelease
mov
mov
mov
jbe
mov
mov
mov
fcomip
cmp
nop
ret
mov
mov
push
xchg
scas
xchg
inc
add
rorl
outsb
adc
xchg
xor
pop
and
or
jecxz
jno
into
adc
add
rcll
dec
dec
lds
decl
incb
out
add
lret
fistl
aaa
or
adc
and
je
pop
push
add
sub
push
xor
cmp
pop
hlt
pop
test
cmp
insl
cmpl
add
jns
push
in
lods
inc
add
add
pop
cld
xchg
and
scas
rorb
insl
jle
idiv
jno
js
jg
inc
add
add
aaa
push
jg
mov
jbe
ret
sti
ss
insl
dec
ss
aas
cld
pop
dec
jo
dec
xchg
pushf
pop
xchg
ss
insb
sbb
cmp
sub
jecxz
xor
rolb
xchg
xchg
insl
fisttpll
push
mov
insb
push
mov
rolb
sub
mov
push
daa
xchg
in
aaa
inc
or
pop
pop
inc
mov
or
icebp
or
mov
clc
movl
add
ss
test
pop
jge
ret
lea
in
loopne
fists
jns
push
push
mov
dec
insl
in
imul
mov
mov
inc
add
popf
aas
inc
dec
xorl
pop
pop
push
dec
inc
mov
push
out
test
push
push
ja
call
inc
pop
sub
xorb
icebp
mov
xor
jne
repz
sbb
jmp
ret
or
enter
insl
mov
dec
cmp
addb
jecxz
pop
and
mov
mov
jle
lods
and
ret
imul
test
test
movb
insl
add
inc
inc
push
in
fstpt
mov
aas
add
dec
addb
cmp
loopne
idivl
in
test
xor
xor
jns
pushl
xor
inc
mov
lcall
je
in
inc
dec
dec
pop
repnz
push
adc
test
push
insl
pop
clc
in
orl
xor
test
or
pop
jp
xor
xor
outsb
jno
or
jmp
xor
mov
add
or
outsl
lea
dec
fdivs
int
add
lock
push
mov
test
dec
mov
jae
xchg
mov
mov
loop
mov
decb
aam
incb
out
test
cli
movsl
ss
pop
add
pop
xor
mov
mov
mov
fists
push
sbb
adc
sub
xor
jae
xchg
aaa
push
aas
sbb
mov
test
ret
adc
xor
push
mov
cmp
pop
and
inc
add
push
push
je
cs
adc
pop
sbb
sub
cmpl
jno
test
inc
jo
adc
rcll
outsl
incl
jae
inc
jbe
sbb
sbb
enter
lcall
inc
sbb
mov
fcmovnb
andl
outsl
lahf
divb
loopne
iret
out
sbbb
mov
movsl
test
xchg
pop
cs
jo
xchg
add
lret
xchg
orb
mov
in
sub
lret
in
xchg
loop
sub
pushf
and
jo
rcrb
jnp
clc
xchg
fwait
out
jg
mov
xor
stc
inc
or
mov
push
pop
dec
jns
push
xlat
mov
jle
push
push
push
pop
or
cmp
lods
pop
jnp
imul
xchg
loop
loope
mov
push
in
xor
fstpl
xor
add
aam
dec
call
mov
fs
mov
out
mov
inc
xrelease
les
push
sar
icebp
mov
sbb
popf
xor
fldcw
test
fadd
mov
mov
push
fdivrs
mov
add
stc
or
sub
in
and
jecxz
xor
xor
bound
in
addl
inc
xor
adc
push
flds
int
xchg
sbb
jae
sbbl
jg
pop
incb
mov
and
aam
leave
add
testl
sbb
add
sti
ret
adc
inc
or
jbe
lods
sbb
jg
ss
pushl
xorl
out
push
fidivl
jmp
lods
add
jecxz
cmp
outsl
or
aad
xor
decl
jnp
mov
cmp
sti
insb
sarl
jb
jae
je
movhps
sbbb
pop
lret
cmp
das
jge
sti
mov
insb
cmp
fists
lea
fstpt
inc
lret
orb
mov
loope
testl
divl
loope
pop
out
jnp
sbb
sbb
cld
outsb
test
daa
jo
out
lods
push
jecxz
test
lds
arpl
jmp
clc
sub
mov
aas
arpl
cld
ret
mov
test
mov
sbb
add
insb
mov
in
xchg
mov
wbinvd
ss
add
test
cmp
mov
xor
mov
add
add
pop
adc
xchg
push
and
dec
xchg
imul
inc
cmp
add
add
sbb
push
mov
call
dec
pop
add
cmp
loope
xchg
sub
add
in
add
inc
std
pop
scas
fsubs
and
push
dec
movsl
pop
test
xor
clc
aas
std
mov
cld
xchg
jecxz
mov
clc
imul
std
test
sub
push
add
lods
pop
mov
jno
cs
mov
xchg
dec
add
add
mov
jp
add
push
jnp
xchg
xchg
fistpll
movsl
cmp
pop
mov
mul
cmp
outsl
or
bnd
outsl
or
fldenv
out
loop
sbb
cmp
cmp
cld
call
outsl
and
mov
pop
mov
add
frndint
lret
sahf
enter
int
cwtl
outsb
out
pop
mov
orb
jns
and
leave
push
xchg
xor
insb
pop
pop
push
imul
jg
jns
es
and
call
repz
push
sbb
sti
outsl
cwtl
mov
dec
xor
in
shlb
sti
enter
mov
fyl2xp1
daa
divb
stos
insl
xchg
inc
testl
sub
jns
push
sub
jmp
adc
movsl
push
mov
jnp
push
xchg
cli
pop
dec
push
sub
push
push
xchg
imul
icebp
pop
jmp
push
iret
popa
divl
mov
into
or
jle
inc
push
push
add
out
jp
add
addr16
pop
jg
pop
push
fdiv
add
mov
mov
sub
movl
in
movsl
mov
inc
mov
dec
xchg
test
pop
dec
mov
movsb
ja
mov
jo
xorl
gs
aaa
std
repnz
mov
orb
jne
lods
outsl
lock
js
adc
test
mov
dec
cmp
fnstenv
lcall
bound
sbb
out
mov
cli
adc
aad
sbb
fwait
sub
cmp
push
fildl
pop
push
sbb
out
pusha
mov
cmp
pop
cmp
mov
xlat
sbb
fldcw
scas
sbb
insl
pop
cmp
push
sbb
inc
dec
ret
lret
repz
dec
push
mov
arpl
std
push
push
bound
and
popf
gs
jb
ja
incl
mov
pop
cmc
jns
cmp
call
js
push
dec
or
or
xor
popa
les
sarb
pop
mov
jp
pusha
test
ret
xor
pop
add
repnz
dec
push
lahf
jmp
into
mov
jl
jmp
xor
push
andb
test
ja
stc
hlt
sub
xchg
mov
mov
daa
push
adc
fldcw
or
shrl
cmp
mov
test
jecxz
daa
pop
mov
pop
ljmp
fisttpl
pop
mov
sub
mov
pop
jp
add
mov
in
dec
fbstp
xor
sub
add
adcb
sti
xor
sbb
dec
dec
arpl
inc
shl
rcrl
lea
dec
loopne
xor
push
test
jmp
outsb
shrb
push
rorl
cmp
lds
or
mov
cld
in
fcom
movsl
pop
insb
pop
int
arpl
jecxz
jnp
adc
mov
mov
test
or
adc
call
dec
pop
mov
pop
fdivr
sub
mov
jecxz
mov
int3
mov
nop
mov
pop
xchg
js
mov
xchg
mov
insl
pop
xor
dec
daa
cmp
iret
in
sub
clc
add
icebp
test
and
jg
xchg
stos
ret
mov
imul
dec
ja
or
hlt
jecxz
dec
xor
inc
das
sbb
cmp
push
xor
outsl
sub
icebp
loop
loope
cld
mov
xchg
aaa
push
repz
xchg
sbb
xor
sbb
mov
insb
test
add
fistpl
mov
ret
xchg
test
cmc
cmpl
hlt
lods
or
mov
sub
imul
push
dec
lahf
mov
inc
sub
add
xchg
dec
test
xor
pop
pop
mov
out
cli
jecxz
cmp
pop
stos
addr16
push
or
jg
xchg
jmp
cmp
sti
pop
lock
int
arpl
push
jne
xchg
test
dec
pusha
jmp
sub
daa
jecxz
add
arpl
shl
mov
xchg
add
mov
mov
push
das
pop
sbbb
sub
jp
aas
inc
xchg
bound
fisttps
mov
clc
aaa
mov
adc
insb
mov
lcall
dec
cltd
cli
aam
inc
into
dec
jecxz
sub
inc
jg
mov
lds
sub
stos
cmc
push
jge
pusha
cld
pop
ss
or
push
sub
push
jne
outsl
cmpsl
sbbl
out
jae
clc
add
mov
std
sbbb
or
mov
test
out
push
arpl
inc
in
movsl
popa
cmpsl
mov
inc
lahf
lods
dec
and
cmp
dec
mov
sbb
mov
and
test
rorb
lods
clc
outsl
or
push
lahf
mov
gs
clc
mov
adc
shr
pop
xchg
cmc
stc
sub
mov
push
dec
test
mov
dec
loop
sub
xor
push
adc
sti
into
popa
xchg
cmp
or
fcmovnu
add
adc
sub
mov
pop
mov
mov
int
scas
push
movsl
inc
mov
orl
sub
mov
rcrl
lcall
outsb
fistps
jg
loopne
sub
ss
sbb
xchg
movsl
push
das
cmc
out
mov
add
xor
cmp
outsb
cmc
mov
or
xchg
incb
dec
mov
fwait
incl
or
mov
out
mov
popf
mov
jle
jle
add
fldl
dec
hlt
std
xor
lds
cli
xchg
add
add
lcall
sbb
xor
lahf
scas
sti
xlat
pop
fistps
sbb
mov
push
mov
pop
orl
rcll
out
pop
dec
xor
es
dec
dec
jl
outsl
jmp
and
pop
fcmovne
xchg
lds
pop
inc
sbb
in
add
sub
lods
lock
sbbl
popa
test
push
cs
aas
fidivrs
xchg
repz
xchg
adc
inc
movsl
movsl
lret
repnz
add
insl
inc
or
jne
add
push
je
push
mov
sbb
add
fidivl
adc
push
add
jno
ret
jo
mov
push
test
or
jecxz
add
popa
push
pop
scas
adc
xor
push
orb
lret
sbb
push
xorl
inc
pop
mov
sbb
or
add
arpl
sub
pop
std
test
cmp
jmp
ja
cli
nop
rcrl
outsl
jp
sbb
push
sbb
xchg
pop
cmp
mov
mov
orb
cmp
in
and
loopne
fmul
inc
test
inc
lcall
cli
mov
ret
jp
mov
dec
xor
outsl
add
ss
lds
jmp
cmc
out
cmp
mov
xorb
loopne
movsl
xchg
sub
sbb
ret
sahf
fisubl
and
jmp
das
fst
inc
stc
movsl
push
cli
xor
adc
mov
pop
dec
push
cmpsl
jecxz
pop
fdivrp
sarb
add
test
adc
cld
jnp
jle
aaa
iret
mov
ds
adc
xchg
cld
outsl
mov
jmp
mov
in
add
testl
mov
push
and
int
or
enter
xor
mov
es
jge
push
pushl
aas
add
xchg
jae
adc
jecxz
add
pop
pop
and
cli
and
mov
mov
sub
loopne
push
daa
addr16
pop
aam
adc
shll
adc
popa
mov
lret
and
sbb
sbb
addr16
lods
sbb
xor
sub
pop
add
sub
das
sub
sub
push
mov
xchg
mov
jg
push
negl
mov
add
aaa
push
pop
pop
jns
add
sub
subl
mov
arpl
sub
mov
push
xor
cli
xor
fisttpll
cltd
pop
add
pop
addr16
jbe
sbb
lahf
and
and
add
out
push
mov
cmp
add
lahf
push
mov
ret
lods
sub
adc
sbbl
dec
mov
int3
mov
xchg
insl
outsl
sbb
lock
cld
in
and
je
mov
pushf
sarb
mov
es
fcmovnbe
pop
insl
std
push
pop
jbe
nop
and
cmp
push
faddl
dec
loop
es
push
loopne
mov
xor
insl
sti
ret
push
mov
adc
push
ljmp
and
jecxz
and
inc
pop
cwtl
pop
or
or
outsl
and
fildl
jle
test
sbb
push
xorb
add
pop
mov
push
dec
xchg
jmp
inc
push
fcompl
std
jmp
mov
mov
addl
rclb
jmp
cli
out
in
jl
or
cmpsl
pop
inc
push
ds
add
or
push
mov
xor
iret
mov
outsl
xchg
fsub
push
and
push
fsqrt
out
mov
outsl
jnp
ss
addb
inc
fbld
js
leave
push
xchg
les
mov
mov
or
sbbb
ret
adcl
inc
pop
add
rclb
or
or
push
std
and
js
insl
sub
insb
or
mov
pop
aaa
or
repz
adc
mov
loopne
or
faddp
lret
push
cld
jns
jmp
decb
mov
cld
movsl
mov
mov
clc
xor
cmpsl
fistpl
cmpsl
icebp
pop
jle
js
cmpsl
cmp
gs
stc
inc
xchg
sub
in
and
lds
jnp
stc
xchg
mov
adc
or
mov
test
or
add
arpl
ljmp
mull
cmp
int
fisubs
cmc
mov
xor
movhps
or
ret
dec
add
aam
add
and
adc
jg
mov
add
and
mov
dec
fstps
mov
mov
out
mov
scas
data16
push
jecxz
pop
call
mov
or
add
cwtl
jge
gs
iret
enter
mov
sbb
fidivrl
std
fwait
int
mov
mov
popa
or
mov
xor
inc
sarl
sub
dec
dec
mov
sub
aad
add
mov
push
jge
jno
sub
mov
test
cmpsb
mov
aaa
aad
push
inc
mov
sbb
divb
push
lea
aam
jb
out
out
or
push
stos
aam
push
lcall
aam
add
mov
mov
mov
jmp
call
and
push
xor
test
in
jg
out
sub
icebp
repnz
pop
mov
stc
xchg
cltd
daa
testb
adc
mov
jne
mov
repz
lret
nop
sbb
test
mov
xor
in
pop
pop
xchg
add
inc
mov
xchg
orb
inc
in
or
inc
outsl
lret
mov
in
stos
lock
xchg
incb
pop
mov
mov
hlt
jecxz
pop
inc
xchg
shlb
mov
mov
jmp
adc
aaa
jne
stc
and
test
insl
adc
divl
ret
mov
or
sbb
cmp
daa
xchg
outsb
pusha
mov
mov
lcall
test
dec
adc
repz
sub
dec
stos
sub
lcall
inc
push
adc
dec
in
and
imul
dec
sbb
pop
fnstsw
mov
mov
and
icebp
push
jecxz
jbe
adc
push
inc
xor
decb
insb
push
gs
hlt
adc
inc
mov
negb
outsl
sbb
pop
int
pop
push
out
and
and
int
dec
jp
sbb
sub
add
sbb
ss
push
add
xor
or
jge
push
ret
imul
inc
mov
subl
adc
pop
mov
jecxz
push
sti
jg
stc
ret
push
sbb
jmp
insl
sahf
push
add
sahf
negb
push
rclb
addr16
mov
cmpsb
pop
fsubl
mov
pavgw
cmp
mov
xchg
insl
mov
sbb
lock
fs
mov
mov
out
shr
dec
jmp
mov
push
repnz
cmpsl
mov
lock
or
clc
popa
mov
js
pop
js
xor
outsb
xor
cmpsl
hlt
jg
mov
lods
sub
jmp
std
sbb
inc
or
ljmp
and
ds
pop
lahf
jne
in
cmp
xchg
pop
fnstcw
fldt
js
mov
repz
negl
insb
xor
clc
jae
test
das
je
dec
pop
dec
fs
xchg
add
cs
pusha
rcpps
lods
test
loop
aad
movsb
push
outsl
in
jl
outsb
std
add
loope
xor
sbb
pop
test
pop
cmp
or
xchg
xchg
xor
jmp
dec
in
push
and
subl
dec
loope
xchg
aad
push
adc
mov
mov
cmpsl
mov
insl
add
test
mov
push
adc
flds
add
testl
inc
movsb
movsb
sbb
lds
outsl
mov
addl
leave
ja
cmp
int3
mov
enter
cmc
add
sti
int
mov
clc
push
cmp
out
out
dec
pop
jg
mov
mov
inc
cmp
mov
sti
fiaddl
push
mulb
pop
add
jnp
or
push
test
push
mov
testb
cmp
decl
cld
sahf
pop
push
sbb
arpl
sub
in
sub
push
sarl
ret
cld
std
in
jnp
dec
hlt
add
mov
popa
jae
lahf
shll
shll
clc
and
leave
jmp
insb
add
and
jns
in
sbb
out
loopne
ficompl
inc
and
outsl
out
inc
push
push
cmp
es
push
mov
adc
or
adc
sti
bound
jmp
xchg
mov
mov
mov
clc
cmp
push
fildl
sti
dec
or
xchg
push
mov
add
mov
inc
xor
test
sarl
adc
cmpsb
push
inc
test
sbb
addl
stos
push
lods
mov
sti
es
push
mov
push
mov
cs
dec
jecxz
inc
push
mov
dec
sub
outsl
insl
in
sbb
leave
xchg
outsl
loopne
loope
sbb
add
bound
add
xor
or
adc
sub
jnp
loope
scas
cs
imul
mov
incl
call
gs
das
adc
pop
cmp
outsb
add
xchg
fwait
add
dec
js
dec
inc
in
xchg
cmp
negb
out
or
jne
pusha
ret
push
imul
inc
lds
gs
add
imul
mov
arpl
sub
rol
inc
pop
jl
int
fcos
xchg
xor
das
outsl
mov
mov
leave
popa
push
pop
insl
adc
movsl
bound
xor
dec
xor
xlat
je
outsb
dec
or
add
xor
roll
je
mov
and
or
jle
jg
sbb
dec
sti
inc
jge
aas
xchg
xchg
add
loop
push
inc
icebp
pop
pop
adcl
mov
lods
ds
xchg
cmc
add
aas
out
pop
mov
jg
repz
jmp
mov
sub
or
sub
lahf
test
push
jmp
pop
xor
mov
pop
mov
mov
imul
dec
das
sub
jmp
xchg
mov
lods
jns
dec
or
push
dec
and
mov
mov
dec
mov
mov
xorl
or
testb
nop
jns
sbbl
cmp
gs
jg
and
push
mov
out
pop
mov
rcrl
mov
pop
push
xchg
jl
in
jg
mov
loop
clc
jbe
std
test
jne
and
scas
or
fwait
inc
jmp
sbb
call
push
sarb
subl
fdivr
xorb
mov
sbb
inc
sbb
sti
push
fistpll
sbb
insl
sub
ds
mov
adc
mov
add
fcoml
aas
popf
aas
stc
stos
push
sti
daa
dec
insl
loope
xchg
addr16
push
dec
push
jecxz
in
stc
ret
push
xchg
repz
dec
dec
push
loopne
repz
dec
adc
ja
test
mov
scas
sbb
and
call
cmp
decl
cli
xchg
or
out
pop
sbb
pushf
cli
add
mov
and
jecxz
fadds
mov
outsl
add
or
repz
and
xchg
adc
pusha
loop
sbb
or
insl
rcrl
push
pop
mov
movsl
cs
cmp
dec
mov
xor
cmpsl
cmp
mov
adc
jl
pop
dec
cwtl
cmpsl
or
push
mov
cmp
adc
jle
jl
ret
bnd
sti
aaa
lahf
mov
hlt
sbb
in
pop
test
xor
cmp
pop
lds
int
repz
xchg
lock
xchg
adc
jb
pause
in
cmc
lock
mov
mov
testl
out
push
xchg
jecxz
cmp
lock
xchg
test
das
sbb
xchg
mov
negl
rorl
test
push
sub
dec
stc
fldcw
xor
xchg
sarb
mov
fwait
out
mov
jno
adc
nop
out
pop
popa
in
sbb
lock
and
and
adc
sbb
add
sbb
cmc
push
and
loope
sbb
aad
and
leave
andb
dec
and
mov
xchg
and
sbb
xchg
mov
mov
xchg
push
test
out
push
mov
xor
pop
cli
or
or
jns
sub
mov
icebp
or
je
gs
xchg
loope
adc
add
mov
vpsubd
add
and
xor
lret
in
xchg
daa
mov
jmp
test
cmc
in
bound
xchg
jge
fldcw
sarb
out
movsl
dec
cmp
testb
mov
in
inc
adc
shrl
popa
repz
ret
jmp
ret
mov
or
jns
in
divl
sbb
outsl
cli
roll
loop
adc
mov
push
aaa
daa
int
and
stos
inc
iret
mov
test
cmpl
push
test
lds
cmc
incl
push
das
rolb
or
jle
adc
cli
ja
lock
jg
or
shrl
xchg
incl
sti
inc
add
scas
inc
stos
or
jge
je
cld
jge
pop
addl
stc
cs
sarl
divl
sbb
dec
dec
push
sub
xor
sbb
shll
push
cli
mov
addl
addb
test
xchg
and
or
add
pop
dec
orl
cli
repnz
sub
daa
inc
cmp
pop
icebp
push
jns
pop
test
xchg
pop
mov
sbb
stc
fildl
jl
idiv
mov
dec
xor
sbb
jo
mov
push
in
sbb
movsb
stc
jno
sar
outsb
inc
cmpsl
adc
xor
push
idiv
je
xchg
jg
aaa
jae
sbb
divl
and
int
sbb
rclb
jg
sub
and
jbe
call
mov
fldcw
inc
idiv
les
cli
dec
or
cld
push
icebp
test
addr16
inc
add
push
sti
sbb
xor
je
and
inc
sub
inc
push
cmp
in
cmp
cs
mov
in
xchg
add
xor
push
push
nop
add
sub
push
mov
lret
xchg
aad
test
loopne
fnstcw
scas
std
jmp
shlb
rorl
pop
cmp
jmp
push
fsubp
cmp
pop
ret
frstor
jge
dec
push
jbe
stos
add
popf
mov
jno
dec
mov
push
xor
inc
fiadds
ljmp
cmpb
aam
add
adc
gs
loope
xchg
insl
mov
aaa
lahf
clc
in
rorl
mov
inc
mov
inc
out
cld
in
addr16
dec
call
fildl
dec
scas
cvtdq2ps
lods
nop
lahf
xor
xor
inc
jmp
jno
aas
push
adc
or
mov
xor
out
aas
idivl
xor
cmp
cmp
divl
xlat
arpl
push
mov
xor
jb
fcomi
cmp
cld
test
jae
out
push
loope
adc
imul
xchg
inc
sti
inc
xor
jg
dec
fdivrs
nop
test
sbb
mov
dec
cmc
xor
cmp
dec
out
mov
dec
lods
test
cltd
mov
in
sbbl
jbe
lahf
fisttpll
adc
jae
inc
shr
push
cmpsl
dec
bound
inc
mov
rcll
out
jg
outsl
or
test
push
testl
fists
mov
ret
xor
or
mov
push
movsl
mov
std
dec
or
mov
outsb
mov
inc
xchg
inc
jmp
mov
dec
jecxz
mov
test
gs
push
jo
push
lahf
andl
incl
xchg
mov
inc
fcoml
ljmp
adcl
je
mov
push
fs
jo,pn
jg
gs
cli
sub
fwait
loopne
dec
xor
or
test
jl
ja
push
ds
mov
xor
jns
xchg
sbbl
dec
shll
push
jge
inc
inc
icebp
push
mov
mov
pop
outsb
xor
xchg
jecxz
es
insb
ret
inc
cld
sbb
out
icebp
cmc
addb
cmp
mov
in
pop
jno
xchg
add
xchg
cli
dec
lds
hlt
incl
pop
lea
add
xor
add
xchg
clc
stos
add
testl
dec
dec
test
adc
inc
ja
dec
out
loopne
insl
sbb
mov
xchg
mov
cmc
dec
aaa
stos
outsb
sub
inc
sbb
pushf
xor
adc
or
xchg
sbb
call
std
or
add
cmp
test
xrelease
or
jns
sbbl
mov
xlat
call
orb
ret
sbbb
xchg
sbb
das
mov
pushf
popa
js
push
mov
fincstp
or
clc
mov
or
ss
jge
clc
mulb
test
sbb
cli
dec
mov
xchg
pop
xchg
call
cmpsl
test
pop
mov
mov
or
je
pop
pop
shlb
arpl
cli
cmp
data16
xchg
mov
flds
clc
sbb
mov
sti
notl
out
ss
xchg
push
sub
adc
cwtl
add
dec
push
mov
ja
aad
add
cmp
dec
arpl
mov
ljmp
xchg
dec
push
test
imul
outsb
test
pop
sbb
or
popa
fmul
pushf
mov
jge
and
cmp
push
jl
or
add
push
xchg
push
not
push
cmp
mov
mov
adc
data16
outsl
dec
xchg
push
mov
and
insl
lock
lods
push
and
cld
mov
ljmp
dec
add
lret
mov
test
sub
mov
jmp
pop
imul
sti
cmc
or
push
or
cli
movsl
enter
push
lea
jne
pop
fidivrl
pop
daa
or
mov
jbe
mov
inc
ret
bound
xchg
dec
aam
sbb
in
or
outsl
adc
dec
mov
dec
loop
or
mov
jg
sbb
test
popa
lds
aas
lea
test
ja
scas
incl
cld
mov
add
mov
ss
add
clc
daa
call
stos
mov
xchg
pop
in
inc
or
jae
inc
add
push
dec
repz
or
mov
or
jno
push
jp
hlt
divl
fldt
mov
mov
arpl
nop
pop
hlt
orb
adc
or
loop
or
or
adc
call
orb
push
loopne
in
mov
pop
ja
or
stc
jl
jns
add
loope
and
xchg
aaa
movl
mov
push
mov
mov
adc
in
into
cmpsl
jl
sbb
cld
imulb
popa
jne
pop
push
lcall
add
sub
pop
push
mov
jecxz
inc
pop
push
incb
hlt
das
mov
ret
or
cmp
test
ret
std
test
ret
fcmovb
les
push
jno
sub
inc
mov
inc
push
stos
mov
cli
aas
push
pop
push
jg
incl
cmp
mov
push
jnp
call
mov
push
cmp
dec
mov
std
stos
inc
mov
scas
outsb
jo
aas
xor
push
pop
push
div
into
or
and
roll
xor
pop
fisubs
pop
insb
and
inc
adc
decl
mov
in
lods
dec
cli
xor
test
addl
ret
outsl
hlt
jg
cmc
mov
test
std
je
add
jno
arpl
push
lock
gs
jno
xchg
xor
test
and
shl
pop
stos
sbb
add
mov
loopne
or
cmpsl
push
stc
jg
roll
repz
add
insb
pop
pop
push
or
test
fdivrl
jmp
incl
cmpl
adc
cli
jae
jecxz
test
test
add
loop
inc
mov
pop
mov
mov
or
xor
movsl
jmp
out
arpl
cmp
sub
pop
out
mov
mov
mov
xchg
dec
stos
dec
add
fisttps
pop
dec
insb
and
outsl
push
frstor
nop
jnp
in
jp
cli
js
call
mov
fildl
pop
out
rorl
sbb
repz
lods
pop
lea
mov
test
pop
lret
outsb
sti
or
pop
mov
adc
into
out
pop
push
and
mov
dec
fs
or
lea
xor
pop
jmp
cld
out
aas
fadds
mov
clc
push
ror
pop
aas
mov
in
or
je
popa
or
fucomi
in
and
jae
insl
sbb
mov
test
mov
push
xor
pop
idivl
xchg
gs
int
add
sbb
data16
movsb
cmc
das
add
sbbb
add
scas
cmp
mov
push
mov
out
push
xor
icebp
popa
dec
push
pop
sbb
repz
add
push
and
lock
and
je
fdiv
sub
out
in
add
sbb
aad
mov
cld
cs
mov
lock
pop
icebp
aas
push
add
pushf
bound
mov
jmp
and
cld
ret
fisubs
xrelease
call
xchg
insl
sti
xchg
pop
pop
loope
fstps
xor
pop
out
xor
fwait
or
mov
iret
add
mov
out
mov
and
into
je
inc
fmuls
jle
testb
jl
dec
xor
inc
push
es
pop
clc
aas
pusha
add
in
adcb
xlat
mov
aaa
aaa
and
out
add
scas
call
cmpsl
dec
xor
in
cmp
bound
xor
or
or
addl
rep
outsb
add
pop
and
jo
dec
pop
rcll
mov
xchg
in
pop
jl
imul
jmp
sbb
imul
pop
mov
hlt
cli
in
sar
add
sub
mulb
lahf
ds
pop
in
mov
stc
popa
ds
shlb
in
std
add
in
jnp
int
inc
insl
mov
jp
pop
lea
addr16
inc
mov
bsr
repnz
jns
add
mov
sub
inc
sti
sarb
insl
xlat
lods
mov
icebp
es
cmc
and
in
pop
xchg
lods
push
insl
dec
cmpsb
sbb
cld
sbbl
or
in
bound
fiadds
jo
lret
ljmp
ss
insl
mov
hlt
mov
sti
insb
movsl
fidivrl
push
fcmovnb
jg
call
and
fstl
fbld
xchg
std
repz
jmp
push
loope
lods
jns
pop
jle
jbe
bound
mov
cld
pop
jmp
cmp
mov
and
bound
repnz
add
xchg
cld
and
pop
enter
movsl
sbb
ret
sbb
add
ss
lea
pop
and
inc
dec
xchg
adc
push
push
pusha
mov
stc
std
pop
mov
or
pop
scas
in
fs
sti
sub
jp
emms
out
jmp
add
icebp
gs
fwait
sbb
pop
jl
push
hlt
fwait
pop
mov
cmpsl
mov
push
decb
xchg
mov
pop
arpl
daa
sti
arpl
fildl
lods
out
int
clc
insb
stc
push
ds
lcall
das
dec
clc
and
xlat
lods
cmc
addr16
xor
icebp
subl
sub
out
aas
repz
es
mov
mov
pop
fistps
cli
cli
stc
mov
aad
dec
jge
inc
js
loopne
pop
repz
and
add
inc
ss
ret
pop
adc
jmp
sub
xchg
pop
mov
push
std
pop
push
pop
push
jg
xchg
test
insl
dec
or
push
adcl
lret
pushl
incb
push
push
std
daa
inc
pop
add
pop
sbb
lret
pop
rcr
add
fisttps
pop
dec
dec
adc
ja
cli
outsl
jg
push
cltd
push
gs
mov
push
incb
incb
cmc
jg
jge
call
fiadds
jmp
test
mov
xor
mov
sbb
insl
push
sub
xor
push
imul
mov
lret
call
fisubrs
pop
push
lahf
mov
push
push
push
into
add
call
dec
sbb
cmp
push
and
xor
std
movsl
push
mov
dec
adc
mov
jle
jg
hlt
mov
cmp
mov
xchg
dec
pop
or
pop
push
push
xorb
cmp
insl
adc
outsl
mov
test
lods
lock
mull
mov
std
lods
orl
mov
sub
mov
mov
icebp
in
mov
aad
ljmp
push
cmp
insl
or
daa
mov
dec
popa
cs
jae
loopne
add
sub
pop
inc
jge
shlb
loope
cmpl
mov
push
pop
mov
xchg
mov
jne
incl
test
mov
pop
cmpb
push
ret
call
mov
mov
adc
push
and
and
mov
loopne
lock
push
test
testl
push
inc
jp
ds
mov
loop
repnz
pop
shlb
add
mov
push
sub
fsubrl
jge
pop
dec
insl
pop
stc
negb
xchg
stc
push
push
pop
mov
in
daa
movsl
or
cmp
aad
aas
and
mov
jno
cli
cmpsl
sar
add
ja
inc
ds
xor
mov
addl
addl
lea
ja
rorl
pop
fildll
cmovo
stc
lret
clc
bswap
add
and
arpl
jecxz
roll
pop
mov
int
ss
pop
and
cmc
push
mov
pop
xlat
xor
std
mov
aaa
push
jecxz
mov
jnp
and
adc
add
out
dec
pop
shrl
ljmp
pop
cmp
loop
adc
movsl
bound
xchg
dec
outsb
mov
popf
mov
mov
dec
dec
cmp
outsl
call
outsl
sbb
or
adc
arpl
mov
in
sub
mov
mov
add
jp
clc
in
inc
adc
push
sbb
mul
cmp
lcall
lret
cmp
push
sarl
xchg
mov
das
idivb
add
pop
icebp
adc
cld
das
rorb
xchg
cmpsl
nop
mov
adc
push
out
or
cmpsb
sti
insb
movl
rclb
pop
jno
mov
in
pusha
jg
lods
dec
rclb
mov
arpl
xor
stc
stc
sahf
pop
and
jbe
rolb
push
bound
sub
stos
mov
sti
pop
lret
jno
sub
cmc
sbb
lds
pop
rcll
gs
loopne
bound
push
jecxz
add
lock
xor
push
push
in
mov
mov
ss
or
stos
xchg
cmp
push
lock
cs
arpl
xchg
fstpl
cli
sub
divl
insl
push
add
rcll
sbb
dec
pop
out
jecxz
pop
jne
mov
in
sub
addr16
fcomip
jp
fstps
sti
xchg
jecxz
mov
jl
jnp
shrb
mov
mov
xor
inc
idivl
mov
daa
cmpsb
mov
aas
fldt
adc
xchg
cli
or
mov
popa
xsaves
clc
xchg
dec
pop
int3
inc
jecxz
mov
imul
or
idiv
inc
jg
sbb
loop
mov
xor
mov
dec
sub
cmp
in
jo
xorl
jecxz
pusha
pop
sbbl
jae
add
test
dec
xchg
icebp
pusha
add
jno
out
dec
push
pushf
imul
push
mov
mov
orl
pop
inc
adc
mov
push
arpl
xchg
sub
sbb
inc
jp
ret
aas
aas
jle
es
data16
push
pop
and
pop
push
cmc
cmp
mov
mov
frstpm(287
xchg
jmp
mov
add
dec
dec
dec
xor
fwait
addb
and
mov
std
push
out
jg
stos
sub
pop
outsl
sub
and
insl
decb
cli
and
insb
sti
push
jae
xchg
lods
insb
xchg
ljmp
sti
rep
icebp
outsl
ds
imul
jmp
insb
pop
add
and
ds
fcmovnb
les
push
imul
insl
aas
outsb
in
jg
repnz
xor
leave
enter
cs
aas
popa
lcall
repz
and
stc
and
xchg
add
mov
insb
cmp
mov
aaa
sbb
imul
sub
push
jl
inc
sub
or
sti
cmp
or
out
les
test
jno
xor
fimuls
cmp
lds
test
and
jns
popa
clc
mov
sti
jecxz
popf
jge
clc
push
rclb
mov
mov
jne
xor
jns
out
fcomp
xor
or
or
sbb
incb
jo
popa
jp
add
sub
lcall
out
pop
jle
clc
pushf
sbb
and
jg
jecxz
mov
xor
push
push
in
arpl
cltd
xchg
dec
mov
sub
mov
sub
test
add
add
leave
inc
add
clc
jg
jmp
mov
test
ja
insl
mov
push
sbb
dec
or
insl
add
ss
stc
lcall
jle
cli
outsb
add
std
jae
pushf
subl
pop
dec
push
push
clc
lret
dec
dec
in
ss
cltd
mov
mov
imul
cmp
jae
mov
lcall
jle
outsl
add
add
test
hlt
lahf
cmc
dec
jecxz
sub
jp
or
lcall
sbb
sbb
or
aad
int3
mov
enter
adc
lock
rorl
jle
cld
in
mov
das
enter
xchg
in
aas
repz
cmp
out
pop
in
imul
mov
pop
inc
mov
imul
push
loop
xchg
pop
test
adc
out
int3
daa
scas
stos
mov
fdivl
ret
adc
out
shrl
sarl
mov
and
outsb
inc
jmp
dec
fidivrs
dec
jno
iret
nop
xor
jbe
jne
enter
jbe
jb
out
mov
je
jmp
adc
lcall
jne
ja
outsb
mov
je
scas
je
lds
outsl
xchg
lret
in
jmp
jne
je
jo
cmpsb
pop
cmp
arpl
shll
lahf
xchg
cmp
shll
jb
dec
cmp
cmpsb
sbb
add
jb
outsb
xchg
lret
in
jb
jo
jno
popf
jae
jb
cs
pop
jns
js
je
in
mov
mov
sarl
outsb
dec
cs
out
pop
js
jbe
jnp
dec
ja
in
imul
jp
jl
push
imul
imul
outsb
fwait
add
jns
loope
xlat
jp
jbe
imul
aas
negl
or
jo
fnsave
in
imul
adc
mov
xchg
jae
sub
popa
fstp
cmpsb
imul
arpl
cmp
xor
cmp
add
mov
adc
adc
dec
shll
insb
mov
cs
xor
aas
pop
ja
jae
imul
adc
fisttpl
and
xor
fistps
inc
mull
aas
xchg
fsts
std
loop
sbb
mov
add
jb
sti
imul
cmp
jnp
nop
or
dec
mov
add
jbe
and
leave
repz
jo
push
in
sahf
inc
leave
orb
inc
xor
add
xchg
mov
mov
ficompl
ss
int
adc
das
push
daa
pop
mov
pop
mov
jo
ja
pop
mov
out
sbb
fstps
jo
sub
shrb
xchg
jnp
or
addr16
adc
sbb
in
iret
xorl
lcall
aaa
dec
jb
mov
mov
push
addr16
cmp
pop
cs
jno
jb
je
je
jo
lret
in
sbb
jae
jne
imul
xchg
mov
lcall
adc
shll
push
in
pop
cs
or
jae
jb
outsb
cs
push
mov
mov
or
jb
jbe
ja
jp
jns
mov
cs
jne
ja
js
mov
xlat
lret
and
lahf
jl
xor
sub
jnp
ja
dec
jae
xor
shll
scas
mov
rcr
xor
shrl
or
mov
sti
in
aad
ret
mov
adc
lcall
adc
jne
in
mov
jb
je
jbe
into
insl
lcall
arpl
lods
subb
out
ja
scas
inc
lcall
int
imul
xor
xor
sub
lcall
aaa
pop
ja
inc
add
mov
mov
ja
jbe
std
out
pusha
outsl
arpl
or
outsl
popa
inc
insl
insl
pop
imul
cmp
jg
sti
inc
popa
imul
imul
arpl
insl
dec
insl
gs
pop
jb
dec
outsl
jg
ljmp
fs
imul
inc
pop
outsl
inc
outsb
insb
insl
popa
outsl
inc
popa
insl
bound
outsb
push
jo
stos
std
jb,pt
jo
pop
pusha
jo
idivb
pusha
jb
push
pushaw
inc
pop
imul
stc
incl
arpl
std
je
push
imul
imul
jmp
pop
pop
addr16
fs
pop
cli
xchg
test
scas
mov
sahf
pusha
inc
cld
inc
imul
popa
js
insb
fisttps
idivb
imul
push
std
outsl
clc
fs
outsl
pop
pop
pop
std
inc
fs
pop
push
push
jle
stc
cli
nop
ds
cli
dec
cld
cmp
pop
outsl
bound
arpl
cmp
in
pop
pop
push
aas
inc
mov
pop
inc
gs
cmp
std
mov
aam
mov
jo
dec
insl
dec
fs
pop
cmp
jnp
loope
shrb
imul
mov
je
clc
fs
cmp
pusha
xlat
pusha
push
pusha
or
jg
push
pop
fs
imul
pop
add
test
pop
push
xchg
lods
arpl
push
pop
cmp
or
adc
pop
ja
dec
push
push
pop
jnp
pop
mov
bound
and
lods
insb
test
inc
insl
mov
mov
xchg
jno
mov
cld
dec
inc
loope
pop
cmp
loopne
bound
imul
js
orl
outsl
dec
loope
sub
jecxz
fstpt
pop
addr16
inc
ja
push
stc
sbb
test
jno
inc
inc
lods
dec
fistps
sub
mov
push
shll
jb
inc
cmp
inc
xlat
and
mov
jbe
popa
inc
fcmovnu
in
pop
dec
jo
bound
pusha
daa
fdivr
inc
xchg
addr16
mov
arpl
mov
test
fwait
mov
outsl
pop
imul
jnp
fistpl
pop
inc
cmp
pop
sbb
in
negb
outsl
insl
push
jae
std
clc
cmp
addr16
arpl
cmp
jge
imul
imulb
hlt
inc
pop
push
xor
push
or
push
inc
push
sbb
push
pop
bound
cmp
outsb
dec
arpl
inc
push
pop
jge
insl
leave
xchg
adc
outsl
push
arpl
jb
pop
jnp
pop
stos
inc
inc
pusha
in
lret
jo
insb
inc
sbb
mov
push
push
ds
cs
outsl
cltd
and
arpl
jo
xchg
cmp
mov
or
adc
push
daa
mov
insl
insb
pop
outsl
addr16
bound
arpl
pop
imul
inc
addr16
out
loopew
fs
dec
inc
cmp
mov
mov
cli
out
std
dec
sub
stos
mov
insl
ja
cld
dec
arpl
arpl
mov
outsl
popf
sti
mov
popa
test
pop
mov
std
xchg
cmp
xor
arpl
iret
pop
pop
ljmp
cmp
cmp
fildl
inc
sub
push
cmp
in
in
incl
cmp
sub
mov
push
jecxz
dec
arpl
shrl
addr16
shrl
dec
outsb
insl
subl
aad
jmp
push
pop
xor
pop
arpl
outsl
shlb
cmp
testl
movsl
shll
dec
sti
pop
test
mov
pop
insl
jno
mov
or
insl
std
dec
das
in
sbb
imul
and
sbb
push
pop
insl
jo
repnz
fdivl
mov
inc
jg
daa
sbb
ret
fmuls
std
sub
popf
popa
pop
inc
sbbl
std
add
cmp
sub
daa
push
sarl
cmp
cmp
fidivs
cld
push
clc
cmp
pop
inc
dec
test
jo
jmp
clc
xchg
push
cmp
cmp
cmp
add
cld
cmp
aaa
pop
push
xor
add
insl
fs
push
outsb
or
aas
push
ss
and
pop
push
pop
xor
push
cs
pop
cmp
push
cmp
aad
jo
fildl
arpl
jge
cmp
cmp
negb
jo
adc
cmp
pop
pop
jo
pop
daa
rcrb
ljmp
cmp
push
jmp
insl
ret
cmp
outsb
jno
inc
push
insl
pop
fucomip
pop
nopl
adc
aaa
cmp
pop
cli
fstpt
dec
fs
push
cmp
aas
inc
xchg
cmp
gs
je
mov
cmp
push
aaa
push
mov
mov
xor
outsb
lds
cmp
pop
or
jbe
push
push
rcrb
sub
out
std
pop
arpl
pop
mov
test
inc
lea
outsl
outsl
sub
adc
push
cmp
dec
cmpb
sub
pop
aas
dec
sub
das
pop
add
inc
pop
xchg
pop
xchg
push
pop
das
inc
cmp
or
icebp
loope
cmp
pusha
loope
rcr
or
or
dec
cmp
clc
push
js
pop
pop
push
outsl
outsl
dec
add
aas
imul
fucomip
cmp
push
cmp
aaa
push
pop
sbb
popa
sub
or
inc
cmp
or
repz
cs
and
sub
pop
bound
push
in
imulb
add
sub
addr16
cmp
fs
push
data16
mov
cmc
mov
push
mov
arpl
push
jg
popa
pop
test
mov
cmp
cld
inc
dec
push
jne
sub
pop
push
xchg
pop
ja
fistps
xor
fnsave
repz
scas
pop
xchg
cli
shlb
jno
loop
imul
iret
orl
fisubrs
sub
adc
outsl
pop
inc
dec
inc
inc
xchg
mov
stc
cmp
arpl
fs
repnz
cmp
insb
fldt
gs
cli
imul
arpl
repnz
pop
push
inc
dec
mov
cmp
jae
pop
adc
insb
sbb
int
lock
inc
cmp
push
fdivr
outsb
adc
fiaddl
adc
or
push
outsl
or
pop
xchg
clc
shrb
sti
ret
mov
clc
mov
pop
pop
test
pushw
outsl
pop
test
loope
adc
lcall
add
dec
dec
sub
or
pop
aas
push
pop
jae
cli
cmp
orl
adc
mov
push
and
pop
pop
push
sti
xor
mov
mov
or
pop
test
inc
xor
sub
cld
pop
lea
mov
mov
not
arpl
sar
sbb
fcmovnb
or
insl
arpl
pop
pop
pop
in
testl
push
loop
or
jnp
int
imul
jp
pop
stos
mov
cs
jge
pop
lret
push
fcomps
cs
lret
gs
pop
adc
push
or
jl
jb
pop
gs
jge
jns
jl
pop
cs
lret
xor
jle
jp
push
imul
cld
daa
daa
dec
cmp
jge
adc
lret
lret
cli
daa
cmp
mov
cmpsb
adc
mov
outsb
mov
add
cli
add
and
mov
or
icebp
pop
clc
lea
pop
dec
cld
pop
sti
add
add
or
jne
xor
cmp
mov
imul
dec
cmp
or
aas
mov
cld
idivl
jo
pop
jnp
push
addr16
mov
into
fs
sub
push
pop
subl
mov
aaa
xchg
cmp
adc
sbb
iret
jbe
inc
cmp
roll
xor
inc
lds
or
data16
inc
fnsave
in
pusha
inc
cmp
pop
cmp
add
or
dec
inc
dec
pop
jge
mov
inc
outsb
sbb
insl
push
jno
sbb
arpl
aas
jecxz
fsubs
addr16
inc
insl
sbb
sbb
cmp
clc
pop
jecxz
or
mov
insb
insb
addr16
je
mov
stc
dec
or
push
das
pop
cmp
lea
inc
mov
lods
enter
sub
int
or
sub
and
loope
add
push
pop
ja
shll
and
mov
push
daa
ds
aaa
daa
jne
mov
pop
imulb
mov
mov
cmc
dec
insb
jo
fisttpl
pop
pusha
sub
test
pop
dec
or
inc
push
xor
xchg
push
push
dec
idiv
popa
popa
mov
arpl
addr16
inc
test
daa
push
or
push
stos
daa
outsb
mov
sbb
adcl
cmp
or
mov
add
enter
das
sub
push
push
mov
cmp
stc
inc
cld
pop
push
loope
popa
cli
es
dec
ljmp
sti
adc
jno
push
sub
mov
cmp
popa
xchg
loopne
inc
movsl
dec
xor
lea
pop
pop
sub
pop
jo
jb
pop
bound
mov
or
sbb
sti
stos
or
repz
ficomps
dec
sbb
gs
inc
jecxz
and
shrb
scas
insl
jb
pop
sub
jg
clc
outsb
bound
jne
xchg
jo
pop
push
pop
xchg
ss
cmp
inc
sub
sub
adc
and
mov
pop
xor
ja
inc
sub
jmp
dec
cmp
inc
dec
dec
insb
mov
jle
xchg
jge
push
pop
js
fs
out
pop
push
mov
ja
insl
sub
push
and
adc
outsl
das
ljmp
and
pop
sbb
sbb
jo
pop
pop
outsl
shlb
sti
pop
sub
push
sub
jo
sub
cmp
mov
or
dec
iret
subl
fsubrl
dec
xchg
push
sbb
inc
jmp
mov
arpl
sahf
jno
in
lahf
or
pop
dec
dec
cmp
fldcw
pop
stos
aam
adc
mov
sbb
lods
mov
and
xlat
jns
movsl
ret
stc
stc
or
xchg
add
jae
inc
movsl
or
mov
mov
and
scas
outsb
sarl
add
dec
cmp
or
loop
clc
dec
sub
sbb
bound
and
out
push
das
cmp
ja
sbb
or
push
sub
mov
xor
stos
mov
out
ja
lods
xchg
insl
movsl
or
and
mov
pop
mov
lods
inc
lahf
xlat
mov
mov
out
icebp
test
mov
fildl
pop
mov
jo
mov
pop
gs
fdivrs
dec
push
dec
aaa
mov
pop
int3
fisttps
dec
bound
cmc
lods
inc
popf
push
jne
lcall
push
fsubl
pop
push
insl
das
fidivrl
inc
dec
cmp
jo
loop
fsubrs
push
push
inc
pop
mov
and
push
pop
mov
pop
pushl
pop
outsb
pop
sbb
sub
insl
out
dec
inc
inc
inc
inc
inc
dec
sub
sbb
add
or
or
pushl
neg
pop
fistpl
dec
sbb
sbb
dec
dec
sub
pop
outsb
cmp
sub
add
xor
push
cmc
lods
test
add
and
daa
sub
pop
cmp
idivb
pop
popa
xorl
aaa
aaa
inc
mov
sub
dec
dec
bound
mov
insb
jecxz
add
imul
adc
aas
mov
sub
dec
data16
pop
sub
sub
fdivr
and
and
cmp
dec
insl
inc
dec
insl
imul
or
ds
mov
inc
lods
imul
mov
arpl
outsl
insb
icebp
ret
lods
sbb
daa
sub
mov
pop
insb
xor
imul
and
or
cmp
pop
mov
inc
mov
xor
imul
pop
aad
not
mov
test
mov
dec
cmpsl
pusha
cmp
in
out
push
mov
outsl
sub
cmc
fisttps
mov
test
imul
sub
and
dec
insb
sbb
sub
xor
xor
int
pop
pop
push
js
sub
push
out
arpl
jne
pop
daa
das
sub
sbb
or
pop
outsb
add
inc
pop
dec
outsb
push
dec
fisttpl
pop
sub
sarl
pop
jecxz
insb
stc
outsl
pop
sub
andl
mov
cmp
sti
not
mov
push
sub
dec
jno
add
arpl
inc
rcrl
pop
xor
sub
jno
xor
sub
outsb
test
mov
shll
sbb
scas
push
jne
mov
je
aam
push
xor
dec
mov
sub
xor
arpl
mov
sbb
push
andl
and
pop
dec
jae
xor
test
push
jmp
test
fwait
or
cmpl
daa
sub
daa
and
lods
sbb
outsb
and
sub
movsl
push
jecxz
das
xor
jecxz
mov
clc
push
pop
das
sub
in
test
jge
mov
or
popa
sub
cmp
mov
test
sub
sub
xchg
xor
xor
dec
xchg
stc
cmp
sub
outsb
call
pop
popa
insb
cmp
pop
stos
fmul
insb
data16
sub
je
pop
cli
adc
dec
push
xor
fcomps
inc
lea
inc
or
dec
push
imul
mov
inc
iret
fiaddl
imul
addr16
jecxz
stos
aas
rorl
cmp
lea
fnclex
in
push
ja
jb
popa
mov
adc
inc
addl
jo
imul
mov
sbb
cmp
cmp
pop
mov
sub
inc
xchg
cs
mov
adcl
aad
mov
sarl
sbb
xor
inc
std
ja
inc
scas
cmc
lea
scas
addl
arpl
inc
fnstenv
inc
cmp
inc
mov
sub
daa
ret
sbb
jmp
pop
push
popa
call
inc
pop
push
cmp
cli
inc
arpl
push
pop
test
pop
lock
aaa
outsl
je
xor
sub
pop
pop
fistl
dec
arpl
sub
lea
sbb
imul
mov
aam
cmp
subl
ja
sub
mov
push
out
sbb
inc
fstpt
mov
pop
aas
daa
arpl
push
mov
es
insb
jecxz
decl
xor
cmp
inc
ds
inc
inc
inc
inc
dec
inc
dec
dec
sbb
dec
dec
dec
push
push
dec
xor
fidivs
bound
imul
shll
or
sub
cmp
jo
pop
aas
outsl
xchg
xchg
cmp
mov
fsubrl
mov
inc
sarl
pop
pop
mov
addr16
sub
dec
jne
pusha
popl
sbb
outsb
arpl
adc
mov
dec
insb
inc
jecxz
pop
pop
cld
fbstp
outsl
cmp
cmp
aas
dec
inc
sub
gs
test
push
outsl
inc
or
jbe
add
cmp
cmp
push
sub
je
sub
jae
inc
push
xor
jne
ds
ds
inc
sub
imul
jb
push
orl
push
icebp
ljmp
jne
jb
inc
cmp
push
aas
sub
mov
cmp
add
xchg
es
outsl
jecxz
xchg
sbb
fcoms
clc
lods
jg
std
cmp
add
add
or
cltd
ds
xor
and
dec
inc
add
push
sub
jae
push
shll
push
jnp
sub
sbb
jb
dec
xchg
fwait
inc
add
sbb
adc
enter
pop
imul
imul
jle
inc
outsl
scas
dec
imul
test
pop
xchg
dec
imul
adc
adc
repz
aas
xor
mov
pop
dec
aaa
dec
aas
mov
jno
mov
pop
fstpl
popa
adc
pop
dec
mov
outsb
mov
jbe
jge
test
pop
adc
outsl
sbb
pop
pop
arpl
int3
pusha
sub
je
pop
jb
cld
sub
cs
pop
arpl
pusha
mov
mov
inc
mov
mov
mov
sub
sub
call
cli
sub
push
sub
sub
jge
subb
sub
sub
sub
aaa
clc
mov
sub
cs
sub
sub
cs
sub
pushl
fbstp
jbe
test
lea
lods
cs
sub
sub
sti
das
add
call
sub
sub
cs
sub
dec
sub
cs
sub
ljmp
ret
cs
loope
jecxz
repnz
cmp
xor
cs
icebp
aaa
mov
sub
sub
xor
xor
pushl
xor
mov
lea
pushf
sub
xor
das
mov
cs
xor
dec
sub
dec
xor
imul
scas
xor
in
sbb
das
xor
pushl
xor
aas
xor
loop
xor
pop
xor
xor
xor
das
push
xor
xor
xchg
xor
xor
pushl
xor
inc
xor
xor
xchg
mov
xor
xor
xor
xor
add
adc
mov
mov
xor
xor
push
xor
jns
jl
mov
xor
xor
xor
divl
sti
xor
sbb
xor
pushl
push
xor
jnp
mov
xchg
xor
mov
shll
xor
pop
xor
fistps
jne
imul
add
xchg
cmp
jl
fwait
jg
push
cmp
cmp
cmp
sbb
pop
sub
data16
push
ljmp
jo
jp
mov
mov
shrb
sub
in
out
sub
sub
sub
sub
inc
sub
dec
sub
inc
in
jae
and
sub
fisubrs
dec
ljmp
mov
xor
jne
or
aam
hlt
fisubrl
sub
jg
pushl
shrb
xor
xor
pop
xor
xor
xor
jg
in
xlat
das
sbb
aad
xor
xor
lea
mov
mov
mov
aaa
lock
ss
push
xor
pushl
mov
mov
cmp
aaa
xor
inc
cmp
jo
test
xor
cmp
cli
cld
cmp
cmp
cmp
cmpl
cmp
adc
pop
jg
cmp
cmp
cmp
cmp
dec
aaa
dec
cmp
cmp
pop
cmp
cmp
or
lds
int3
cmp
sub
decl
mov
sub
sub
sub
sub
sub
lahf
sub
sub
cs
sub
sub
jns
mov
adc
lret
mov
fisubl
sub
cmp
icebp
idiv
jl
mov
leave
sub
xor
cmc
das
stc
cvttps2pi
xor
cs
ljmp
xor
xor
push
jns
mov
xor
cs
in
sub
mov
push
das
and
and
fs
jne
jns
jg
xchg
mov
xchg
sti
xor
test
sub
add
or
lea
jns
mov
shll
cs
fistpll
xor
xor
xor
xor
xor
das
pop
xor
ret
push
xor
xor
xor
xor
xor
and
sbb
jb
mov
cmpsb
xor
out
add
adc
fucomip
ss
xor
les
sarb
or
adc
mov
cmp
aaa
das
cmp
cmp
cmp
insb
cmp
adc
cmpl
iret
cmp
cmp
cmp
cmp
aaa
out
xchg
xchg
test
cld
sub
sub
cld
mov
sub
subl
jmp
stc
sub
or
test
aas
sub
sbb
sub
mov
mov
push
test
das
adc
jle
das
push
ja
pop
cli
jg
jg
xchg
sub
cs
jmp
out
sub
das
pop
std
movsl
call
mov
enter
hlt
xor
sub
sub
xor
cli
lea
stc
pop
xor
lea
xor
loop
das
iret
sub
xor
jnp
sbb
sub
push
das
push
xor
in
pop
xor
xor
xor
xor
xor
jg
call
xorl
pop
xor
push
mov
lret
xor
pushl
or
adc
cmp
cmp
xor
test
sahf
xor
xor
xor
xor
das
mov
hlt
pop
js
xor
xor
xor
fdivl
lcall
lcall
aaa
and
pop
cmp
cmp
sarb
aam
loop
fwait
add
idivb
sti
dec
adc
pop
stos
imul
int3
sub
dec
outsl
mov
sub
test
pop
sub
decb
pop
clc
sub
ja
add
sub
cs
sub
cld
loop
mov
mov
fbstp
cmp
insl
and
clc
xor
cmp
cmp
aaa
push
jno
mov
jmp
cmp
xor
push
cmp
xor
cmp
mov
cmp
cmp
cmp
cmp
ss
in
cmp
cmp
cmp
aaa
adc
jg
cmp
cmp
dec
inc
aaa
push
cmp
cmp
aaa
lret
cmp
fildll
cld
sub
pop
mov
pop
sub
sub
out
jp
sub
sub
sub
mov
mov
sub
pop
test
iret
sub
jmp
sub
sub
inc
sub
xchg
sub
sub
sub
adc
cli
incl
mov
es
cmp
fs
cs
sub
pop
jne
pop
sub
push
xor
imul
das
sub
mov
xor
cmpsb
mov
das
sbb
mov
xor
jg
mov
sub
mov
jge
cs
shrl
mov
insb
lock
sub
sub
mov
inc
and
push
popa
data16
inc
add
jae
inc
dec
dec
dec
pop
pop
add
add
ja
inc
popa
arpl
jnp
xor
addr16
insl
sub
js
unpckhps
incl
dec
outsb
outsb
outsl
and
je
jo
and
jo
push
popa
je
sbb
dec
dec
idiv
incl
push
dec
inc
push
push
inc
push
inc
pop
dec
imul
je
push
imul
sti
jg
inc
jne
jb
je
gs
imul
jae
popa
outsl
mov
pop
imul
ja
daa
aas
push
push
imul
push
outsl
xchg
sbb
adc
pop
add
imul
enter
arpl
fs
leave
pop
sti
dec
jns
je
jbe
adc
outsb
imul
aaa
and
test
sub
mov
outsb
xor
jo
pop
mov
arpl
vmwrite
lods
sbb
jg
jbe
push
inc
jle
fisttps
sbb
push
push
push
jb
jns
xor
xor
mov
or
sub
jb
add
arpl
jb
outsb
cmp
mov
and
outsl
and
adc
lods
add
push
jae
xor
in
in
jbe
imul
push
jg
aas
imul
bound
jo
inc
gs
popa
push
ds
fcomp
gs
pop
inc
js
adc
push
push
adc
int
jg
jns
dec
jmp
inc
fs
mov
mov
imul
add
sub
dec
inc
inc
xor
push
sub
push
inc
inc
mov
fcmove
mov
jae
add
pop
mov
inc
outsl
sub
cmp
push
int
jne
or
inc
push
push
mov
fisttpll
insl
popa
dec
pcmpeqw
mov
jae
xor
jae
neg
jb
movd
or
test
fdivrs
jae
xchg
insl
jbe
mov
jmp
outsl
dec
push
and
in
jnp
fs
daa
push
sti
imul
insb
adc
cmp
jae
and
imul
xchg
pop
insl
jae
addr16
mov
inc
inc
inc
push
pop
jae
add
push
push
dec
inc
jae
leave
and
add
clc
lahf
sbb
or
adc
xor
pop
xor
outsl
push
mov
add
nop
shrl
arpl
inc
add
jo
daa
add
ja
outsl
add
sarb
jae
sbb
arpl
xchg
add
sub
pushl
std
repz
and
sbb
cmp
jae
clc
cmp
pop
psubd
and
fdivs
add
or
and
fcoms
aas
aad
add
push
pop
add
frstpm(287
aaa
inc
add
int
add
cli
and
fbstp
adc
pop
sahf
aam
in
add
pop
rcr
jge
dec
jnp
sar
das
stc
arpl
pop
adc
rorb
adc
std
int
cmp
fdivl
or
sub
adc
enter
dec
xor
add
or
and
cmpl
ljmp
sbb
xor
fstpl
add
adc
aaa
dec
addb
push
inc
pop
cmp
or
pop
push
add
push
ss
add
arpl
pop
push
arpl
inc
pop
in
jnp
pcmpeqb
adc
pop
inc
dec
inc
push
add
xor
add
push
push
push
xor
add
jmp
cld
daa
add
rolb
nop
add
add
sub
pop
outsb
test
shlb
jns
add
jg
incl
push
sbb
adc
xchg
add
add
jg
sub
call
and
add
mov
add
idiv
add
add
add
jbe
sub
add
add
adc
mov
mov
xor
inc
jb
popa
je
inc
imul
cld
jo
imul
gs
pushw
push
das
in
add
inc
insb
jne
push
and
lods
sbb
mov
jp
push
dec
push
add
gs
insb
outsl
jae
dec
popa
outsb
fs
inc
jb
outsl
std
mov
mov
cmp
je
imul
jbe
out
arpl
and
jo
dec
popa
insl
push
xlat
outsb
leave
fiaddl
popa
sbb
mov
leave
mov
arpl
outsb
or
push
mov
dec
dec
popa
add
outsl
jne
je
sbb
xchg
out
aaa
push
pushf
pop
push
shll
dec
outsb
outsw
adc
pop
imul
add
mov
test
adc
inc
mov
fs
jns
and
arpl
xchg
dec
push
xchg
daa
mov
ret
data16
aad
inc
fs
sbb
dec
outsl
popa
fs
add
jns
jns
mov
imul
jle
je
adc
ret
push
outsl
outsl
insb
mov
jo
xor
push
or
outsl
filds
mov
xor
sbb
addb
jg
mov
mov
jmp
adc
pop
adc
pop
or
pop
or
call
sti
imulb
leave
adc
mov
mov
decl
or
jg
mov
and
or
mov
jp
call
pushl
or
and
incl
sbb
ljmp
or
repz
mov
and
inc
sub
push
push
jns
mov
fbstp
out
ud0
inc
xchg
cmc
add
xorl
outsb
dec
cmp
lcall
sbb
xchg
lock
push
or
icebp
adc
mov
or
test
insl
fildl
jno
mov
pop
push
sub
dec
mov
movsl
mov
add
or
or
mov
andl
sar
or
out
fidivl
inc
das
dec
or
scas
sbb
xor
test
or
in
mov
or
jo
pop
push
xor
pop
push
rdmsr
pop
je
pand
insw
lahf
or
pusha
or
fs
xor
sbbb
adc
ret
jb
out
mov
addr16
arpl
outsb
or
jo
je
lcall
push
xchg
or
leave
mov
and
insl
bound
imul
std
xchg
ja
or
jbe
push
sbb
popa
in
or
jo
inc
inc
js
inc
jb
lods
fwait
jne
dec
aam
jo
outsb
je
out
jle
je
insl
mov
push
jae
or
cmp
pop
xor
std
imul
jo
out
imul
insl
xchg
adc
out
sbb
push
push
fs
xor
ljmp
dec
pop
fmull
mov
inc
dec
sub
fnsave
cwtl
mov
imul
or
push
inc
dec
add
sbb
pop
ja
out
jmp
add
add
add
add
xor
jb
add
add
adc
add
adc
xor
sbb
add
adc
push
pop
sahf
in
aaa
pop
inc
and
fadds
mov
ud2
push
cs
js
push
es
in
test
xchg
push
pusha
jb,pn
popa
je
xchg
dec
cwtl
pop
out
add
test
in
inc
cs
jge
push
push
testb
rorb
push
xor
sti
outsl
add
dec
lock
daa
les
inc
and
add
add
add
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
