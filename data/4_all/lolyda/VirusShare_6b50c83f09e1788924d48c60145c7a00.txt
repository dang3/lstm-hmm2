mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
pop
sbb
out
sbb
add
or
lods
mov
outsl
pusha
outsb
mov
cmp
sub
repz
ud1
inc
add
fsubrl
sar
push
fcompl
pop
add
pop
outsb
jg
ljmp
xor
mov
and
push
fs
pushf
jl
or
and
adc
lea
test
push
fidivs
mov
inc
xor
fcomps
pop
lahf
mov
in
std
cmp
or
mov
dec
test
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
idivl
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
push
in
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
sub
sbb
xlat
mov
mov
in
cmpsb
adc
xor
add
xor
and
sub
dec
and
scas
in
in
jecxz
scas
mov
sbb
mov
mov
push
jmp
outsl
jp
or
add
je
mov
jne
imul
dec
mov
lock
cmpb
and
adc
add
inc
xor
adc
add
mov
dec
add
adc
loopne
fisubrs
into
mov
test
jle
lds
sbb
out
jle
mov
push
mov
or
or
popf
dec
or
sti
push
sub
sub
dec
push
sbb
out
in
jne
scas
jecxz
lcall
cs
add
sub
dec
dec
rcrb
dec
add
cmp
dec
push
jne
arpl
js
leave
mov
push
mov
or
push
sbb
mov
mov
mov
les
push
sti
xchg
or
push
xor
rcll
gs
stc
rolb
je
xor
pop
jo
sub
mov
mov
imul
pop
sahf
jbe
xchg
mov
sub
fisubs
pushf
fstp
fstl
and
or
sub
or
push
mov
mov
or
inc
cmp
cmp
sub
testl
stc
mov
push
aad
cmp
add
pop
mov
add
int3
aaa
mov
in
xor
sbb
leave
push
test
mov
mov
pop
push
dec
cmp
in
cmp
pop
push
adc
pop
fadds
adc
outsl
dec
lock
xchg
pop
push
push
cmp
jmp
cmp
add
push
add
pop
xor
xlat
mov
xlat
cs
add
or
push
adcl
divb
add
cwtl
cmp
in
lret
sbb
out
pop
cmpsb
lock
jae
mov
push
or
or
inc
inc
cmp
mov
ret
fsubl
imul
adc
pop
test
popa
mov
cmp
xor
leave
data16
lahf
push
push
push
add
pop
out
or
int
popf
aad
adc
cmp
xor
lcall
rcll
xchg
test
in
sbb
xlat
mov
lea
pushf
push
xchg
sbb
pop
mov
xor
mov
mov
rol
pushf
aad
cld
lret
or
int3
out
add
cmpb
in
xor
test
jle
push
dec
jns
add
push
pop
rcl
jl
jb
adc
add
out
or
jmp
adc
sbb
mov
xor
mov
mov
sbb
mov
xchg
movsb
mov
cmp
mov
xor
sbb
shl
lret
pushf
jnp
cs
mov
imul
pop
cmp
int
jle
sub
jb
sub
sub
xchg
mov
mov
faddl
ret
fcmovnbe
sub
mov
in
loopne
push
lret
dec
mov
push
push
ret
mov
xor
cmp
sbb
das
sbb
push
bound
xor
sbb
scas
jne
stos
aas
orb
sub
jp
cmp
icebp
rorb
cltd
jmp
sbb
pop
daa
jmp
dec
sbb
enter
or
xchg
pushf
and
test
mov
xor
add
loope
pusha
xchg
push
push
lods
push
push
push
fsts
push
ss
cmp
pop
pop
mov
xor
inc
mov
and
int3
das
mov
out
sub
jmp
cmp
nop
adc
sbb
mov
inc
xchg
jecxz
adc
sbb
test
adcl
lret
mov
push
nop
push
cli
and
or
mov
imul
sub
jmp
dec
loop
nop
into
sub
out
mov
or
sbb
dec
sbb
xlat
push
mov
sub
xor
mulb
outsb
inc
enter
std
adc
es
cmp
push
lock
cs
adcl
push
add
mov
push
dec
xchg
sbb
or
fnstenv
add
fisubs
mov
int3
loopne
nop
cmp
ret
mov
add
or
xchg
or
push
jl
add
push
jmpw
sbb
add
sbb
dec
nop
mov
outsb
mov
inc
loopne
mov
xlat
fidivs
or
or
shlb
sub
adc
adc
imul
inc
xlat
adc
pop
aaa
shlb
adc
jl
mov
push
data16
adc
mov
inc
jbe
dec
adc
add
dec
lock
mov
jb
adc
dec
or
loop
add
xchg
and
push
and
xchg
add
test
inc
cwtl
inc
mov
leave
push
or
sub
testb
push
sbb
adc
push
push
adc
or
cmc
sbb
dec
pushf
int
dec
or
cmp
adc
and
cwtl
and
sbb
sub
mov
pop
mov
xor
enter
call
adc
stos
add
adc
in
fsubl
sbb
or
adc
stos
xchg
int
ret
jbe
jae
das
lock
sub
in
add
dec
or
sbb
sub
pop
popf
popa
pop
add
and
inc
into
mov
jl
pusha
push
movl
lods
lcall
insl
mov
clc
push
pop
or
fdivl
icebp
mov
adc
mov
inc
push
pusha
mov
in
fs
inc
int3
sbb
mov
in
or
fs
mov
inc
data16
or
rorb
push
data16
das
push
sbb
lods
out
stos
or
imul
add
xor
adcb
fwait
pop
dec
and
lcall
lock
xor
or
test
mov
push
ss
loop
pop
cwtl
mov
aas
and
xchg
push
cwtl
clc
jne
pop
fists
mov
mov
pushf
mov
xchg
jo
mov
daa
call
add
adc
mov
and
js
add
out
sbb
and
adc
movsb
and
jp
sbb
push
popf
sub
mov
loope
shl
lock
clc
pusha
cmc
adc
orl
adc
sarl
sbb
movsl
in
xor
adc
jg
int
add
jge
jo
and
scas
add
xor
dec
popa
push
sbb
js
daa
ret
decl
ffree
push
fdiv
clc
dec
hlt
add
and
outsl
add
shrl
inc
cltd
sub
add
clc
out
sbb
adcl
push
pop
call
sbb
cmp
pop
mov
ret
mov
or
pushf
mov
daa
inc
pusha
ret
movups
outsl
push
push
lidtl
pop
cmp
das
or
xor
adc
mov
mov
daa
int3
dec
daa
sbb
mov
pop
push
xor
hlt
fcmovb
xor
stos
leave
push
cmpsb
adc
and
call
fwait
or
sub
pushf
sub
mov
add
rol
fcmovnb
cmp
inc
mov
inc
lcall
dec
in
sub
inc
mov
xchg
addr16
ss
sahf
cmp
leave
xor
and
and
push
repnz
and
inc
leave
xor
sbb
cmp
and
repnz
sbb
push
add
cmpsl
xchg
js
dec
add
clc
scas
enter
repnz
add
call
addr16
inc
push
les
mov
push
lock
xchg
or
dec
lock
or
nop
ja
and
test
into
frstor
push
pushf
inc
cmp
adc
stos
cli
dec
jo
addr16
bnd
mov
sbb
jo
jo
and
push
mov
cltd
or
cmp
idivb
adc
hlt
pop
out
or
jns
imul
mov
shll
call
xor
xor
inc
pop
aaa
jb
push
jns
pusha
mov
add
scas
sub
into
add
and
aam
push
push
add
std
inc
add
bound
lcall
mov
xchg
push
inc
xor
arpl
mov
int
sub
xchg
lea
ret
jge
or
lods
outsl
pop
scas
dec
push
jo
xor
push
xor
sti
je
adc
mov
mov
xor
fcomip
push
xor
insb
xor
fisttps
test
movb
mov
sub
mov
or
adc
pop
popa
addb
sar
inc
out
inc
sub
and
and
or
sub
or
popl
outsb
sub
hlt
sbb
push
dec
xor
cmp
push
push
int
push
sbb
adc
movsb
inc
mov
mov
lods
fcoml
aas
sbb
cmp
ficoml
mov
push
push
push
add
aad
fwait
jecxz
or
test
je
push
jmp
pop
dec
xor
jnp
aam
push
or
leave
jae
daa
jne
push
insb
add
adc
cltd
idiv
mov
mov
sub
mov
cmp
jb
or
jbe
push
or
cmp
jg
arpl
mov
test
or
fs
lock
fs
enter
fs
shrb
mov
fs
test
fs
fs
mov
cmpb
fs
push
fs
pop
push
push
fs
dec
inc
inc
fs
xor
fs
and
fs
adc
fs
add
lahf
iret
out
cld
inc
clc
inc
rolb
mov
bnd
mov
inc
xchg
cwtl
xor
xor
pushf
mov
xor
lods
mov
mov
mov
fs
fcomp
enter
add
jbe
enter
cmp
push
rcrb
aad
mov
ret
mov
imul
mov
pop
cmp
and
jge
sub
ret
push
xor
pusha
and
add
cmpsb
and
add
jae
std
mov
xor
mov
ljmp
inc
loop
mov
orl
inc
xor
or
or
pop
sub
or
xchg
cmpl
push
movsl
and
cmp
insb
push
push
jg
mov
lea
test
int
or
or
xlat
add
out
jg
xchg
mov
jne
cmpb
jne
inc
or
inc
mov
or
jbe
aam
in
insl
rorb
cld
inc
testb
jmp
mov
in
movzwl
jmp
sub
jbe
jmp
push
pop
pusha
mov
int
push
push
and
imul
inc
in
mov
mov
mov
insb
and
test
sub
mov
lcall
inc
xchg
add
mov
add
das
mov
mov
out
inc
lock
inc
ffreep
sbb
xor
sub
test
mov
adc
stos
mov
push
fldl
insb
popf
and
pop
fsubr
xor
ret
arpl
mov
loopne
mov
pop
inc
lea
adc
jae
or
out
int3
add
mov
bound
dec
faddl
or
incl
mov
mov
sbb
add
or
adc
fstps
bound
push
cmpsb
imul
fnstenv
lret
cld
dec
js
dec
add
mov
fsubr
lcall
lods
mov
lcall
sub
fdivr
fldenv
mov
push
add
adc
in
mov
pop
or
sbb
movsl
jb
fdivl
leave
adc
mov
or
jne
dec
popf
or
das
add
cs
add
xor
adc
insb
fwait
in
add
add
das
dec
cmp
jne
repz
sub
pop
sub
adc
insl
xlat
jne
aaa
inc
out
arpl
movhps
xor
cmc
pop
sbb
xchg
scas
jmp
out
daa
push
addl
bswap
mov
lcall
adc
sub
pop
or
icebp
testl
scas
jmp
or
test
jno
into
in
mov
add
mov
add
out
movsl
addr16
mov
pop
mov
add
or
inc
adcl
data16
or
fildl
testl
cmpsb
imul
lcall
pusha
push
dec
xor
cmpsb
imul
lcallw
dec
in
sub
or
sbb
and
adc
hlt
dec
inc
pop
shll
xsave
shll
push
dec
or
xor
shll
sub
cmp
cmp
and
inc
add
add
inc
dec
popf
cmp
inc
loope
or
mov
mov
mov
sbb
add
mov
pop
adcb
add
jo
fwait
cmpsb
imul
shll
inc
inc
cmp
aaa
sub
sbb
lcall
add
das
shll
out
dec
shll
ret
jbe
mov
mov
insb
mov
repnz
push
push
pop
or
and
adc
inc
call
xor
and
enter
xor
lock
je
add
dec
dec
dec
shll
sub
data16
xor
sbb
lcall
xor
add
xor
xor
mov
out
call
xor
ror
les
xor
xlat
nop
and
and
xor
das
mov
sbb
add
jecxz
andl
and
nop
and
add
dec
push
js
and
xchg
mov
sub
dec
xchg
dec
nop
push
repnz
es
push
lods
aas
stos
or
ret
fiadds
decb
xor
fs
insb
pop
push
xor
adc
sbb
or
adc
pop
incb
sar
scas
mov
clc
std
stc
cli
cld
idiv
sbb
mov
cli
sti
or
clc
cmp
stc
sti
pop
std
data16
or
or
mov
pop
pushl
dec
fs
outsb
push
push
pop
imul
insb
insl
sbb
pop
insl
jae
sbb
pusha
jmp
sbb
dec
dec
sbb
pop
bound
pop
or
sbb
roll
xchg
scas
sbb
std
mov
mov
and
mov
mov
icebp
movsb
sub
mov
mov
movsl
and
pop
mov
mov
shll
jl
scas
sbb
xor
jnp
cmpl
jbe
dec
pop
bound
testb
dec
stc
std
cs
adc
cld
add
mov
daa
push
fwait
push
jbe
sbb
mov
or
nop
sbb
cld
adc
or
fs
out
or
fwait
jl
xor
rorl
mov
or
jbe
sbb
or
daa
daa
shlb
outsb
pusha
je
arpl
push
daa
dec
out
das
pop
push
pop
daa
insb
pop
pop
imul
or
insb
or
daa
lcall
pop
sti
jnp
add
dec
mov
pop
fildl
or
ss
daa
aas
out
incl
mov
jnp
add
push
lcall
mov
xchg
xchg
inc
push
std
or
pushl
inc
add
decl
stc
adc
jb
sbb
dec
gs
idiv
push
jmp
arpl
mov
cld
testl
xchg
insb
xchg
pusha
sbb
sbb
in
outsl
jg
push
pop
cmpb
or
pop
mov
out
mov
jp
sahf
divb
idiv
push
bound
xor
push
movsl
fisttps
test
movsl
movsl
mov
or
fisttpl
mov
pop
mov
cmc
cmp
fildl
inc
mov
clc
maxps
or
inc
mov
data16
push
or
mov
data16
ljmp
or
shrb
arpl
out
add
shlb
mov
or
mov
cli
adc
jecxz
push
jmp
jecxz
dec
dec
push
push
adc
jae
jbe
outsb
inc
xchg
loop
xlat
mov
mov
mov
sbbb
popa
test
insb
das
mov
mov
loopne
clc
sbbb
cmp
mov
jbe
fnstcw
test
cmpsb
mov
lahf
cltd
in
mov
push
adcb
fwait
adc
mov
in
scas
dec
loop
dec
cmp
dec
lret
pop
jp
pusha
mov
dec
in
dec
cmpb
mov
mov
fwait
js
ja
cmpsb
bound
mov
std
iret
mov
pusha
mov
out
cmpsl
pop
cmpsb
test
test
notl
dec
push
mov
mov
dec
adc
push
xor
in
jg
mov
jl
adc
jae
mov
mov
jge
loop
stc
test
mov
fdivr
je
push
push
xor
push
mov
jle
test
pop
cli
cld
popa
xchg
call
xor
imul
div
insb
es
mov
cli
pop
dec
in
cmp
dec
les
ljmp
dec
jp
adc
stos
std
push
mov
jnp
adc
sti
dec
leave
mov
jl
dec
jle
push
jo
xor
call
std
xor
xchg
imul
cmp
in
mov
dec
pop
inc
cli
cmp
adc
inc
hlt
or
sbb
scas
jge
das
jnp
mov
dec
push
imull
xor
adc
jno
js
fbld
dec
xchg
mov
push
push
test
flds
ja
fstpl
dec
insb
or
ret
into
gs
dec
lret
rol
inc
mov
icebp
lahf
outsl
inc
stc
jecxz
les
push
xor
ja
pushl
mov
dec
push
in
add
cmpl
jg
sbb
pop
ja
pop
push
loopne
dec
sub
push
pop
repz
aaa
call
inc
dec
bound
add
out
dec
and
pop
push
push
mov
aaa
std
incl
stc
push
sub
data16
add
add
rcll
push
pop
loop
dec
test
das
cmp
or
outsl
notl
outsl
cld
divb
sub
es
xchg
jecxz
fistpl
xor
mov
dec
xchg
addl
jecxz
hlt
repz
mov
data16
fs
sub
push
sub
and
add
xor
adcl
or
push
inc
mov
sbbl
add
bound
dec
xchg
rcll
and
inc
out
and
pop
xchg
jg
jg
jle
inc
or
push
jle
jns
pop
cld
notb
cmp
add
stc
jo
loop
sub
push
add
loopne
ret
mov
das
fstpt
and
dec
dec
pop
notl
aad
sbb
pop
dec
push
pop
icebp
or
add
mov
inc
pop
jae
dec
push
sub
xor
rcl
pusha
lods
or
mov
aas
incb
adcb
xchg
imul
inc
mov
lea
push
stc
rcll
test
dec
ret
imul
rcll
or
dec
dec
or
or
mov
rorb
add
push
clc
cli
dec
or
repz
jle
ret
in
popf
pop
icebp
xor
inc
xor
adc
in
pop
test
daa
imul
out
mov
fildll
popa
clc
pop
push
push
les
and
notl
mov
dec
inc
insb
jl
cmp
mov
xchg
pop
cmp
xor
test
push
loop
add
data16
sbb
xchg
cwtl
clc
pop
imul
dec
mov
pop
jg
or
outsl
aaa
loopne
add
arpl
mov
sbb
lcall
push
icebp
divb
decb
das
shlb
jl
dec
or
jmp
adc
test
movsl
lods
mov
popa
test
push
cs
pop
fldlg2
movsl
popa
cmpsl
mov
fcom
lcall
sarl
fsubl
arpl
add
fldenv
add
adc
push
xchg
pop
pop
incl
stos
iret
dec
outsl
outsb
cmp
lods
aaa
cmpb
mov
inc
in
std
aam
dec
dec
fs
pop
clc
mov
or
jg
pop
or
std
loopne
aas
out
jge
adc
dec
xchg
loope
pop
fbstp
mov
clc
das
xchg
testl
sub
nop
xchg
and
lea
icebp
xor
jne
leave
out
add
mov
dec
dec
sbb
mov
hlt
push
cld
outsb
test
jnp
cld
std
xor
sub
adc
pop
fidivs
push
shl
pop
in
es
outsl
rorb
test
jecxz
sbb
cli
fwait
mov
cmp
and
lahf
shrl
ret
or
adc
add
sahf
lea
ja
add
mov
add
pop
push
cmp
sbb
push
xorl
xor
mov
push
sub
dec
int
or
fwait
daa
ja
mov
fldenv
lret
stos
popa
mov
shl
adc
mov
fwait
movsl
ret
and
out
dec
ljmp
or
push
fbstp
rcll
pop
sub
ficompl
stc
fisubl
nop
nop
int3
pop
mov
jecxz
outsl
xor
or
xchg
or
test
out
sub
mov
in
inc
and
jg
lcall
dec
push
mov
xchg
mov
xchg
xchg
sub
pop
mov
int3
jecxz
test
or
addb
mov
dec
lock
cld
push
add
pop
xchg
jecxz
outsb
aad
das
xor
shl
test
out
xor
loope
mov
loope
jl
rcrb
clc
pop
pop
test
or
mov
in
xchg
cld
cmp
lock
aaa
aaa
ja
cld
fistpll
xor
jo
shl
dec
jecxz
inc
ja
orl
in
jle
and
adc
mov
inc
cmp
std
sbb
sub
sub
xlat
insb
add
push
call
sub
idiv
or
int
insb
push
push
insb
mov
push
xchg
addb
sbb
mov
and
inc
in
inc
mov
repz
push
sbb
movsl
enter
cmp
in
xchg
mov
and
loope
pop
pushaw
jnp
adc
or
add
xor
mov
adc
aad
adc
testb
mov
mov
push
fildl
dec
lret
lock
cmp
sbb
cmp
insl
fists
push
xlat
pop
mov
add
push
out
std
pop
push
push
and
dec
popa
test
mov
bound
ja
xchg
add
test
gs
lret
mov
fucom
pop
and
aad
jg
ss
pop
fbstp
orl
mov
mov
adc
jb
add
test
jo
mov
mov
loop
testl
jg
fwait
imul
lds
sub
arpl
incl
pop
test
std
jns
hlt
cld
call
nop
or
in
fistpll
icebp
test
add
ret
ds
push
ret
mov
call
or
cmc
cmp
ljmp
mov
sahf
js
mov
add
jnp
std
mov
sti
push
arpl
push
jmp
pop
dec
push
mov
cs
lret
lock
in
lock
mov
add
and
pop
push
push
daa
jge
icebp
sti
jl
repz
push
gs
lods
jge
bound
dec
dec
out
xor
xchg
mov
inc
bnd
jle
ja
and
stc
jb
cmp
mov
int
iret
cli
or
dec
rorl
aas
mov
pop
or
hlt
ljmp
cmpl
pushf
mov
jbe
xchg
fisubs
out
addr16
xchg
xor
int
out
cmp
arpl
stc
leave
xchg
cmpsb
mov
sti
leave
loop
paddsb
or
xchg
add
add
mov
in
ret
sub
test
jmp
imul
adc
popa
into
jnp
out
ja
mov
std
icebp
jge
push
bound
loopne
jmp
aas
dec
dec
mov
sub
pop
mov
sub
cmp
cld
pop
push
cld
in
push
shll
jle
testl
inc
dec
jmp
push
pop
stos
mov
in
decl
pop
je
dec
xor
lret
out
dec
call
out
jle
repz
adc
xchg
pop
test
jae
jge
inc
mov
adc
jmp
ss
jg
rolb
mov
repz
bound
pop
push
sub
mov
pop
xchg
mov
pop
in
dec
xorl
cltd
add
stc
xor
insb
xor
loope
add
fcmovnu
cli
aaa
xchg
in
mov
decl
int
int3
pushf
xchg
mov
sub
pop
out
sahf
loop
add
std
pop
stos
add
sti
imulb
mov
cld
add
and
sub
jno
pusha
cld
lods
repnz
repz
cmp
push
or
add
mov
not
cmp
es
out
out
orb
push
mov
dec
faddl
sarb
xchg
shrl
cmp
mov
mov
add
and
or
pop
and
sub
outsl
inc
jp
or
ds
mov
adc
xchg
arpl
jnp
mov
mov
jle
dec
lds
insl
cmc
add
lcall
andl
orl
decl
out
dec
test
nop
push
test
xor
push
adc
cli
mov
clc
pop
ret
test
dec
in
cmp
jo
das
xchg
xchg
outsl
iret
mov
pop
mov
dec
pop
cltd
mov
std
dec
sbb
add
bound
ret
cmp
das
hlt
outsl
xor
add
les
add
mov
add
fstps
pop
stc
les
cld
cltd
jl
add
fildl
out
add
in
sbb
loope
ja
add
in
out
and
sbb
call
push
in
rol
fcmovnbe
dec
inc
mov
cmp
das
cld
dec
add
rolb
xrelease
xor
insl
das
mov
cmp
iret
divb
divl
rorl
dec
mov
inc
or
orl
xchg
divl
repz
into
gs
fisttps
std
push
pop
pop
ret
xchg
dec
mov
outsl
fistl
pop
decl
push
or
outsl
inc
cmp
push
or
jnp
testb
mov
lahf
hlt
fcomip
mov
mov
aaa
adc
pop
cmp
ljmp
outsb
test
aaa
shll
add
mov
das
icebp
add
pop
mov
jns
or
outsl
adc
gs
sbb
cld
cmp
lds
dec
xor
add
push
or
mov
pop
mov
adc
repz
test
push
fistpll
inc
mov
or
wbinvd
or
and
aas
stc
pop
mov
dec
aaa
sarl
mov
or
jle
add
pop
addb
mov
push
push
pusha
adcl
std
add
fdivrs
outsb
sbb
inc
addl
arpl
cmpb
sbb
arpl
sahf
sarb
or
popa
sahf
aaa
jecxz
cmp
xchg
divb
sub
mov
cld
pop
xor
sarl
popa
call
xor
xchg
jecxz
mov
mov
insb
fnstsw
cmp
mov
push
test
push
outsl
mov
sub
cmp
insl
push
pop
jnp
insb
cli
shr
dec
pusha
scas
adc
icebp
rolb
pusha
xlat
outsl
pop
sbb
pop
fwait
daa
push
dec
arpl
push
mov
fisttpll
iret
imul
lcall
loopne
jecxz
or
test
and
jno
mov
clc
outsb
pop
sbb
rclb
arpl
adc
pop
repnz
or
xor
daa
stos
sti
scas
and
xor
xchg
xor
xor
xchg
cwtl
neg
mov
mov
push
dec
mov
aad
pop
pop
not
fsts
push
push
inc
add
dec
dec
cld
jae
iret
cs
aad
sti
mov
lock
cmp
dec
sbb
add
out
mov
arpl
daa
cmp
or
dec
fbld
sub
cmp
in
ret
push
data16
mov
pop
idivl
lds
jle
or
add
dec
mov
ffreep
insl
xor
cmp
push
or
dec
sbb
test
rclb
pop
pop
sarl
push
mov
popa
mov
mov
dec
jnp
mov
or
fsubrl
push
push
incw
loop
cmp
out
pop
sti
mov
subb
hlt
ret
cmp
notb
fldenv
add
mov
mov
outsb
mov
jmp
subb
out
out
addr16
pop
not
jae
fstl
pop
fstpt
popf
jmp
xlat
dec
jne
outsb
sbb
xor
test
mov
add
in
hlt
testl
iret
sahf
lock
dec
icebp
pop
orl
dec
sbb
ffreep
push
test
dec
push
sub
ds
cmp
sti
dec
jl
hlt
inc
lahf
leave
in
mov
cmp
bound
pop
cltd
push
sub
ret
insl
neg
mov
and
repz
mov
popl
sbb
filds
xchg
cmp
dec
std
inc
xchg
push
xor
add
add
or
imul
mov
xlat
test
mov
filds
xorl
fdivrl
sti
jb
jb
pop
mov
push
dec
dec
mov
xor
cld
test
push
sub
outsl
lock
out
sub
orb
sub
adc
in
dec
enter
xchg
add
sti
inc
add
or
test
mul
mov
idivb
pop
testl
pop
sub
movsl
sub
push
dec
xchg
popa
outsl
mov
or
cltd
cld
xchg
dec
clc
mov
in
loop
insl
jge
idiv
loope
jle
xor
call
ja
add
lea
add
loop
ud0
dec
xchg
fwait
pop
mov
ss
shll
testb
inc
add
cmp
xor
cvtsd2ss
mov
fsubrl
xchg
xchg
mov
mov
add
and
inc
and
mov
test
and
inc
or
ret
pop
pop
out
lcall
iret
add
ror
stc
pop
jmp
dec
pop
std
movsl
inc
add
dec
test
jmp
or
mov
push
cli
std
push
fisttps
adc
ja
fists
add
outsb
popl
outsl
mov
stc
ret
pop
ss
add
lods
add
test
pop
sarb
add
mov
popa
icebp
sbb
push
out
out
dec
xor
call
mov
push
jecxz
jae
test
xor
jg
pop
xchg
jbe
test
jo
cs
mov
cmp
jle
negb
lret
shl
subl
inc
out
cmp
fdivrs
faddp
scas
jne
insl
incl
clc
divl
lds
or
add
add
test
mov
out
or
test
adc
mov
test
or
jp
mov
jb
xor
or
mov
xor
sbb
rorb
inc
ret
push
mov
sti
inc
dec
adc
dec
mov
in
test
incl
test
orb
xor
pop
loope
cld
dec
xor
call
fists
jno
or
xor
and
add
fildl
or
adc
add
mov
loopne
push
dec
mov
add
test
out
pusha
rorl
hlt
push
xor
addr16
add
mov
adc
jmp
in
test
xchg
fs
pop
xor
dec
aad
shr
aaa
mov
cmp
or
pop
xor
adc
or
cli
repz
jb
test
jp
clc
jo
xorb
icebp
adc
ret
ret
adc
sti
adc
ret
filds
jbe
outsl
inc
xchg
das
pop
loopne
jno
in
xchg
adc
adc
sbb
movb
out
or
add
jb
jo
sbb
mov
sbb
je
jno
jg
pop
imul
add
sbb
dec
repz
mov
decb
lods
insl
lea
testl
sub
divl
loop
out
xchg
fdivrs
sbbl
inc
push
dec
test
leave
loopne
pushl
mov
xchg
orl
arpl
mov
insl
test
daa
xchg
movb
ljmp
jns
jl
and
pop
mov
out
aas
xor
pop
mov
inc
or
imul
mov
add
jae
push
in
fisubrl
xor
cmc
in
rolb
xchg
out
mov
dec
pop
xor
sbb
push
cmp
fistl
outsl
shrl
popa
sbb
arpl
in
sub
mov
les
inc
adc
jle
mov
sbb
insb
push
mov
scas
test
cwtl
repz
xchg
test
add
sti
hlt
out
adc
loop
and
testl
cmp
jecxz
cmpl
stc
ds
inc
add
loopne
and
add
mov
subl
jb
test
stc
jno
fs
fstpl
shlb
add
leave
inc
stc
xchg
outsb
lea
mov
push
sbb
xor
and
push
xor
push
fildll
dec
outsb
add
dec
std
sub
cmp
add
mov
cld
out
push
lods
add
in
ss
std
xchg
xchg
repnz
clc
and
xchg
ss
cmp
lcall
dec
hlt
pop
xor
int3
add
popa
imul
je
outsl
push
data16
push
ljmp
out
icebp
ds
mov
outsb
cmp
lret
testl
loope
cmp
sub
fcmovb
cmp
mov
ret
in
jnp
push
pop
or
mov
cli
pop
out
jl
pop
mov
imull
cmp
jo
ljmp
dec
cwtl
or
ret
mov
cli
insb
daa
imul
mov
cmp
jge
sub
fst
xor
pop
mov
sub
sti
pop
aas
mov
add
insl
mov
loop
pop
js
mov
mov
xor
stc
cmp
das
xor
ret
pop
mov
test
adc
arpl
outsl
pop
dec
test
fisubrl
pop
imul
or
out
aaa
clc
fistps
lds
pop
rclb
dec
push
call
fisttpl
pop
cmp
imul
jmp
push
imul
dec
or
add
dec
cld
push
pop
or
and
add
push
std
loop
fildl
mov
cmpl
das
push
adc
push
subl
outsl
popf
push
add
in
fstpt
xchg
pop
aaa
push
jae
ds
adc
dec
add
add
mov
test
inc
cld
push
jl
cld
insb
or
sub
cmp
movsl
cmp
mov
jmp
add
iret
outsb
push
xchg
icebp
out
sbb
push
mov
outsl
xlat
daa
icebp
dec
xchg
add
xchg
test
mov
mov
clc
inc
mov
add
xchg
fstps
mov
add
pop
mov
packssdw
fildl
in
cmpb
or
push
mov
cld
push
jle
lea
and
fcmove
add
xchg
jbe
repnz
or
das
pusha
fisubl
jmp
stc
into
test
mov
stc
jo
mulb
dec
lret
jg
push
push
gs
popa
jmp
push
imul
fisubl
call
add
sarl
jno
adc
adc
das
hlt
pop
xchg
addb
pop
pop
add
ljmp
mov
mov
cmc
mov
testb
xchg
lahf
addr16
dec
arpl
add
div
xor
repz
std
sbb
cmp
daa
jle
cli
jns
in
out
jnp
add
dec
lcall
push
out
sub
fwait
mov
and
jle
adc
and
andl
mov
mov
mov
push
xchg
test
inc
outsl
std
das
jo
subb
push
mov
fcomip
sarb
and
orl
mov
test
or
pop
mov
loope
inc
and
ds
orb
xchg
push
call
jno
push
mov
out
mov
add
mov
cli
adc
lea
mov
cmp
daa
in
sbb
test
or
sub
sbb
and
cwtl
test
mov
or
jl
and
insb
cmp
scas
sbb
jo
jmp
inc
sub
and
fisttpll
clc
fistl
jle
add
pop
pop
pop
cmp
andb
pop
xor
pop
call
mov
xchg
call
push
dec
push
aam
pushf
mov
ret
cmp
incl
js
pop
test
push
dec
cli
aam
ret
int
push
dec
dec
lahf
jmp
add
lods
fisttpl
data16
gs
hlt
mov
aas
xchg
mov
mov
ljmp
cs
mov
pop
pop
xor
test
test
scas
mov
loop
das
daa
pop
mov
stos
jl
outsb
loopne
pop
das
fisttpl
gs
push
aaa
push
sub
xor
mov
cld
mov
inc
test
outsb
mov
dec
sti
add
test
pushf
lods
xor
jo
dec
mov
in
fs
dec
hlt
xchg
or
cltd
rcrb
loope
das
or
or
jl
push
mov
dec
dec
in
mov
shrb
outsb
sub
in
loopne
cmpsb
nop
sbbb
arpl
sub
popf
mov
mov
movsl
sahf
xchg
push
pop
or
shll
or
mov
icebp
ret
mov
scas
mov
jecxz
add
sti
aaa
mov
pop
pop
jmp
xchg
add
sub
pop
xor
mov
sub
and
cmp
push
pop
push
mov
or
gs
aad
xlat
inc
pop
lock
loop
fistps
jno
inc
imul
outsl
jmp
push
cmc
hlt
fildll
xchg
ss
bnd
rorb
pop
jo
sub
lret
outsb
lods
mov
push
outsl
or
ss
icebp
insb
loope
mov
dec
call
xchg
std
ja
jge
mov
or
lahf
jle
pop
jmp
dec
lahf
mov
inc
pop
mov
cli
jmp
mov
xrelease
es
jmp
insl
rolb
push
adc
lods
aad
push
or
jns
push
adcb
lea
insl
ljmp
jne
test
and
dec
pop
push
jecxz
mov
jecxz
hlt
loopne
mov
pop
data16
testl
mov
mov
mov
mov
sub
sahf
or
push
dec
stc
data16
xchg
out
or
mov
adc
adc
sbb
in
and
mov
and
dec
loop
xor
push
mov
dec
add
or
fwait
or
cli
bound
mov
arpl
sub
push
sub
mov
mov
out
test
comiss
jge
adcl
mov
add
mov
sbbl
add
cmpb
and
cmp
dec
mov
mov
mov
xorb
adc
mov
jle
or
lods
testl
rcll
mov
cmp
jmp
mov
fildll
fst
adc
stc
out
pop
push
cltd
xor
mov
aad
scas
neg
orb
pop
mov
jle
pushf
sbb
imul
mov
decb
xchg
aas
scas
clc
or
in
ffreep
leave
fcmovu
insl
jg
dec
loopne
sub
dec
inc
mov
dec
arpl
insl
loopne
cli
in
mov
out
sbb
push
dec
mov
lods
jnp
in
aad
test
dec
sbb
mov
lret
sub
sarl
add
add
sbb
movsl
loopew
or
test
mov
cs
jle
fldt
ljmp
add
jl
xchg
std
add
mov
pop
inc
dec
dec
mov
loop
add
mov
or
mov
mov
outsb
sti
add
jne
arpl
addb
imul
add
aaa
adc
lahf
lock
xchg
xlat
aaa
fidivs
in
fnstenv
loope
dec
popa
or
stc
sub
jns
sti
out
add
add
inc
outsl
mov
dec
jmp
and
sub
shll
jno
mov
add
outsb
rorb
fildl
adc
arpl
and
add
mov
or
mov
pusha
cmpsb
cmpsb
push
cs
repz
js
mov
dec
out
push
lret
clc
push
dec
push
push
mov
lods
cli
add
push
cmp
sub
sbb
les
inc
loope
jmp
xchg
mov
push
push
jl
call
cmp
mov
pop
inc
adc
mov
xchg
int
mov
mov
add
shrl
or
add
outsb
mov
adc
sub
cmpsl
ror
pop
lea
dec
repnz
dec
outsl
jl
nop
inc
push
cmp
fmull
push
mov
sbbl
nop
rcrl
outsl
aaa
adc
fs
push
sbb
add
sbb
outsb
inc
popf
or
decl
lds
mov
shll
outsl
push
cmp
std
xor
ret
js
cmp
rcrb
adc
sbbb
movsl
or
sub
sahf
adc
and
aas
cmp
add
cli
xor
or
call
xchg
out
lds
push
push
loop
or
xchg
ficoms
pushf
icebp
add
xchg
adc
clc
fstpt
xor
daa
xchg
pop
popa
inc
mov
add
xor
testl
mov
pop
scas
scas
push
or
icebp
inc
push
xor
mov
xor
add
sbb
ja
push
sub
mov
jecxz
add
jl
pop
or
and
insl
mov
aaa
aad
std
out
sub
test
xchg
pop
adc
test
cs
cmp
lahf
sbb
sbb
outsl
aad
pop
data16
std
mov
sub
inc
arpl
dec
dec
bound
aam
cmp
pop
pop
call
mov
orl
jg
pop
aam
sub
jp
add
subb
shlb
jae
jle
mov
ret
in
push
sar
pop
scas
std
cmpsl
insl
stos
roll
sahf
gs
cli
xor
add
movsl
pushf
pusha
xchg
das
insl
inc
xor
add
mov
dec
frstor
xchg
mov
push
push
incb
out
push
xchg
cmp
sti
dec
bound
xor
mov
shlb
arpl
sub
push
add
rcrb
insl
fists
xchg
adc
icebp
mov
add
pop
jno
dec
in
xchg
mov
cmp
mov
cld
leave
lcall
sarb
vmovntps
xchg
subb
out
aas
add
outsl
add
or
dec
jecxz
and
rcrb
test
cli
sub
loop
std
mov
jno
dec
loope
stc
xchg
push
jmp
in
and
inc
jb
test
fs
test
and
imul
jbe
ret
addb
add
rcr
les
mov
popa
insl
cmp
adc
jns
pushf
mov
cmp
dec
cwtl
dec
fiadds
out
test
aas
pop
stos
rcrb
filds
add
xlat
inc
cwtl
sbb
or
das
popa
mov
notl
int
mov
jg
mov
jo
mov
movsl
add
les
repz
mov
jb
push
inc
lahf
or
dec
lock
pop
bound
mov
mov
jecxz
jg
add
icebp
jg
pop
rolb
js
jbe
pusha
mov
dec
les
pop
jp
insb
adc
jo
dec
fcompl
mov
cmp
add
dec
arpl
insb
mov
mov
jl
or
mov
lods
push
stc
jecxz
imul
cs
push
fmull
test
and
repnz
gs
pop
cmp
sub
in
jmp
jo
loopne
es
aad
and
out
testb
mov
xchg
and
lea
or
dec
testl
cwtl
fistpll
mov
popa
test
push
cmpsb
test
cmp
jge
dec
jmp
bound
dec
adc
adcb
das
or
pop
adc
scas
mov
out
or
das
hlt
idivb
add
jo
or
out
dec
pop
mov
jne
and
out
ret
mov
pop
out
and
lea
shlb
cmp
fnstenv
stc
popf
data16
ror
insb
jg
mov
pop
call
cmp
popa
lds
imul
imul
mov
pop
mov
lock
push
mov
fildl
std
arpl
das
pusha
pop
negl
icebp
push
dec
mov
jmp
cmp
scas
cmpsb
test
std
xor
jno
cmp
jle
mov
add
mov
icebp
xor
jecxz
or
scas
inc
btr
pop
arpl
xor
stc
into
dec
push
sub
pop
lds
mov
dec
scas
jmp
inc
mov
cmpsl
in
pop
in
sbb
pop
jno
mov
adc
sub
dec
cmp
push
fimull
imul
insb
test
aad
mov
pop
mov
das
repz
push
mov
sbbl
out
mov
mov
loopne
daa
divb
pop
cld
rcrb
sub
pop
jle
and
jno
adc
xchg
rorl
mov
test
test
add
mov
clc
jecxz
push
jne
dec
mov
or
add
loop
inc
and
mov
in
hlt
ret
xor
adc
sbb
icebp
ja
outsl
arpl
pop
nop
pop
inc
sub
mov
push
mov
out
mov
xor
cltd
or
lock
fistl
or
xor
dec
sbb
jo
jg
sbb
cld
pop
push
jecxz
and
and
xchg
pop
xor
fst
insb
or
pushl
outsb
push
fildl
adc
clc
inc
insl
and
jecxz
sbb
sarl
or
push
loope
and
rcrb
or
xor
std
aad
and
xor
stos
insl
mov
aas
mov
xor
mov
imul
jne
outsl
or
scas
repz
pmulhw
and
aaa
adc
aam
sbb
lahf
shrl
lahf
stc
push
mov
negl
push
fistpl
pop
add
inc
xchg
add
rcrb
and
aaa
mov
push
cmc
sbb
popa
cmp
mov
sbb
cmc
iret
pushf
or
xchg
mov
jge
stos
icebp
popf
xchg
dec
mov
outsb
xor
fnstenv
add
mov
pop
cs
lea
cmpsl
pop
pop
mull
ja
add
in
cmp
or
hlt
inc
outsl
ss
sub
mov
popf
addb
pop
adc
lock
mov
cmp
push
xchg
sub
adc
push
mov
test
sbb
ja
faddp
mov
neg
int
mov
cltd
icebp
popf
pop
mov
sbb
sti
push
push
lea
mov
popf
add
add
jnp
pop
aad
fisubrs
push
out
data16
test
insl
add
cmpsl
pop
push
loopne
dec
mov
lret
rorl
xchg
mov
dec
jg
mov
jne
fwait
cmc
pop
loop
aas
dec
dec
out
pop
in
loope
shlb
or
xor
inc
push
mov
cld
insb
or
mov
test
add
stc
jo
sub
les
inc
pop
dec
and
or
sbb
jno
int
mov
dec
inc
mov
scas
pop
mov
dec
cmc
std
lret
cmp
je
pushf
cmpsl
sub
imul
add
xor
dec
mov
and
repz
push
aas
out
lock
jg
mov
mov
pop
cmp
sarl
push
mull
pop
add
cmp
push
and
sub
insl
add
mov
push
mov
sbb
imul
iret
add
movsl
into
sbb
sti
cmp
add
mov
xlat
jle
add
xchg
sti
cltd
add
icebp
xchg
sahf
add
shrl
sbb
or
jge
lock
leave
push
inc
jns
in
sbb
jmp
push
inc
cld
pop
outsl
out
or
sahf
mov
stos
dec
ljmp
stc
cmpsl
xchg
mov
mov
pop
adc
pop
jg
fisubl
push
sub
jnp
dec
test
mov
mov
jns
ret
dec
in
mov
sarl
jae
out
js
and
inc
push
xabort
stc
and
pop
mov
sbb
mov
in
sbb
xor
adc
addr16
and
mov
cltd
jnp
test
pop
inc
cli
mov
jbe
add
psrlw
push
jecxz
sbb
mov
add
mov
std
outsl
add
dec
loop
out
push
add
aad
or
ret
int
jbe
or
xor
add
rorl
mov
or
adc
arpl
fstpl
fcomi
sub
mov
inc
dec
es
mov
xchg
add
int
fsin
test
xor
pusha
mov
push
push
or
leave
test
lods
jg
fs
std
pop
or
test
push
add
mov
add
arpl
pusha
pop
or
cmp
mov
dec
dec
add
out
arpl
push
cmp
dec
mov
rorl
pusha
nop
jg
push
push
push
xchg
bound
fisttpll
push
imul
inc
clc
lock
dec
sub
xrelease
cmp
lea
cmp
mov
scas
inc
and
or
add
test
mov
push
xor
jg
inc
gs
cld
rorl
push
sti
dec
das
mov
call
test
pop
xchg
pop
jns
mov
jge
fs
pop
or
repnz
add
dec
incb
arpl
jb
jnp,pn
pop
dec
cmp
cli
dec
dec
adc
hlt
dec
dec
arpl
stc
subps
adcl
outsl
scas
repnz
pop
mov
jno
iret
jmp
jecxz
shl
mov
out
repz
pop
adc
add
dec
in
jnp
hlt
test
push
pop
or
sub
inc
jmp
lods
lcall
cwtl
test
add
pushf
mov
sub
stos
fistpl
jnp
cmp
rcll
sub
sbb
push
push
repz
push
cmp
sub
mov
sbb
or
push
sbb
imull
nop
std
pop
mov
sbb
and
mov
outsl
rorl
push
in
das
sar
push
daa
in
test
incl
mov
push
imul
popa
or
scas
stos
fsub
adc
out
or
fs
or
pop
mov
aas
insb
jnp
imul
sbb
outsl
pop
popa
ljmp
std
mov
jge
repz
push
mov
stos
cmp
jecxz
jg
mov
adc
pop
test
push
js
fsubp
adc
rclb
sbb
mov
repz
sbb
push
call
shl
and
out
data16
roll
enter
jmp
shrb
add
ss
mov
imul
sarl
nop
xor
rorb
push
and
outsb
ds
xor
sbb
addr16
in
sbb
xor
stos
fiaddl
mov
pop
pop
sahf
test
sar
ja
and
rolb
cld
push
xchg
pop
add
fs
or
xor
sti
pop
and
xchg
sbb
inc
rclb
pop
xor
mov
adc
mov
or
add
or
xchg
jl
cmc
nop
adc
jl
mov
stc
clc
add
cmc
sbb
and
and
in
xchg
adc
mov
in
pushf
xchg
dec
lea
push
sub
sbb
jmp
mov
cmp
cli
shll
icebp
test
fwait
or
and
jb
pop
pop
ret
add
push
add
pop
mov
lcall
xor
push
sub
sub
mov
pusha
dec
push
lea
rcll
jns
sbb
lock
mov
xchg
sbb
jo
jb
iret
lods
out
neg
bound
pop
pushf
and
sub
ret
loope
out
clc
std
lret
xchg
push
sub
jecxz
fldt
daa
shl
ds
std
dec
push
sbb
sahf
push
pop
add
fildll
mov
test
sub
mov
mov
cli
loop
repnz
and
mov
testb
add
in
lods
mov
cli
jg
cld
test
mov
add
pop
jle
js
lea
call
test
std
xor
ret
and
insb
shrb
jo
mov
pop
outsl
add
sub
add
js
push
ljmp
add
scas
les
mov
add
movl
call
addl
orl
insb
pop
add
test
mov
inc
outsb
sub
daa
inc
xor
jne
pop
test
pop
addl
pop
push
aad
add
cltd
or
js
clc
hlt
or
mov
in
movsl
mov
inc
popa
pop
jno
mov
fldl
out
sbb
cld
icebp
in
pop
jp
sub
je
cli
jae
and
pop
xchg
testb
imul
inc
and
loop
mov
jns
stc
cmp
lcall
lahf
hlt
dec
rclb
cmpsb
rorl
rcl
push
bound
or
insb
mov
and
and
daa
xlat
add
add
add
aas
testb
and
and
and
sbb
pop
enter
pop
les
test
mov
pop
cld
aam
mov
add
pop
sub
mov
lret
mov
mov
inc
clc
xchg
outsl
mov
test
fistl
mov
dec
imul
add
or
lcall
mov
fs
popa
out
addl
push
inc
adc
arpl
sti
loop
sub
das
frstor
push
pusha
cmp
inc
fbstp
loope
dec
mov
inc
mov
cmp
push
insb
cmp
pop
xchg
cmp
loopne
push
cmovo
bsf
cld
loope
adc
xor
cmp
pop
aas
inc
repnz
dec
in
fbstp
out
jle
push
adc
or
jg
xchg
loop
jae
xor
inc
repz
xorb
push
mov
cmp
arpl
xor
cmp
nop
daa
daa
push
push
dec
mov
lods
push
test
dec
jmp
std
scas
fldenv
testb
pop
sbbl
cmp
daa
push
add
xchg
mov
pop
lock
or
jecxz
or
rcrl
sbbb
out
jo
lahf
pop
mov
dec
xchg
arpl
mov
xchg
gs
and
adc
rcrl
aaa
cli
outsl
cmc
or
pop
push
sbbl
lock
mov
sub
xchg
jns
addb
pop
sub
outsb
test
decb
fs
out
outsb
adc
inc
ja
jg
pop
shrl
mov
aas
pusha
push
pop
push
subl
inc
push
fs
mov
push
dec
aas
or
sti
jge
rorb
ja
mov
rolb
mov
mov
out
outsb
ss
pushf
pushf
addl
sub
jmp
pop
mov
sbb
push
add
in
inc
loopne
roll
stos
push
insl
les
out
js
shll
dec
jb
and
xchg
in
hlt
xchg
dec
inc
clc
inc
jne
pop
cmc
clc
jle
sbb
mov
adc
rcll
in
outsb
mov
movsb
or
incl
je
ss
add
pop
jmp
inc
sub
std
cmp
fdivs
ja
mov
sub
sbb
out
push
fwait
dec
sarl
divl
xor
es
pop
sbb
inc
push
adc
push
lret
or
dec
test
adc
fists
shll
adc
inc
cmp
inc
push
je
inc
push
test
stos
repnz
nop
sbb
hlt
adc
sahf
and
lahf
adc
push
and
inc
xchg
insb
push
jb
xchg
sbb
or
pop
sub
jle
dec
xor
scas
mov
testb
das
shrl
cli
aaa
xchg
lahf
popa
jns
fabs
jg
out
or
outsl
pop
in
insl
push
add
notl
in
in
jo
mov
add
cld
mov
loope
inc
daa
sbb
pusha
fdivrp
lret
add
fbld
push
cmp
sbb
neg
mov
gs
rcr
pusha
sbb
stc
lret
pop
add
dec
mov
cltd
std
cmp
loopne
ss
xchg
push
and
ja
lock
mov
aaa
pop
sar
cld
pusha
xlat
add
xchg
pusha
and
pop
lcall
jbe
inc
into
call
cmp
iret
push
mov
add
dec
rol
add
subb
pop
add
cmp
dec
mov
lock
sar
into
dec
jecxz
dec
rcr
ficoms
dec
arpl
add
in
or
xlat
pop
mov
push
mov
jecxz
fiadds
adc
mov
cwtl
jle
fidivs
jle
sti
adc
std
fldl
clc
dec
mov
xor
pop
loopne
pop
test
push
mov
out
mov
mov
arpl
jo
mov
push
sar
cmp
sti
mov
daa
rolb
push
insl
sbb
outsb
in
fldl
stc
loop
insl
add
icebp
push
jecxz
pop
dec
sbbl
cli
add
dec
sub
pusha
pop
das
mov
xor
out
arpl
stos
mov
sub
aaa
call
dec
inc
add
pusha
mov
rclb
repz
pushf
inc
mov
stc
jmp
xlat
fbstp
insl
add
sti
into
push
push
cmpl
and
pop
jne
push
dec
xchg
dec
push
fst
and
mov
jecxz
xor
popf
or
dec
add
lods
or
rcll
testb
cli
push
xor
gs
sti
inc
mov
fs
xchg
lods
std
adc
jb
dec
out
or
fists
dec
push
fldl
adc
push
mov
cmp
inc
imul
or
lahf
test
mov
mov
rolb
fidivrs
loopne
jge
xlat
dec
or
das
adc
loopne
or
das
std
roll
sbbl
fisttpl
jle
or
sbb
cmp
mov
cmp
jecxz
dec
xchg
mov
jg
out
loopne
or
jecxz
mov
mov
les
jecxz
cmpsl
mov
jae
popa
les
ret
xchg
or
jo
mov
xor
cld
jge
mov
or
xor
mov
dec
daa
add
inc
dec
daa
xor
or
sub
outsl
add
sub
aas
loope
pop
push
lret
dec
dec
mov
push
dec
sub
bound
std
outsl
jo
push
push
idivb
ja
outsl
inc
outsl
je
mov
pop
dec
push
arpl
cs
in
cmc
dec
inc
das
pop
push
fimuls
aas
loop
or
cmp
insb
shlb
dec
add
add
add
inc
outsl
xchg
sub
mov
popa
xchg
ja
pop
fdivr
jnp
jl
mov
push
sti
pop
pop
mov
push
xchg
mov
in
dec
dec
push
jo
loopne
pop
icebp
xchg
or
cli
mov
dec
sbb
testl
sub
jge
negb
call
fstpt
lahf
lods
out
sbb
ljmp
rcll
ds
test
fbld
ds
andl
stc
fnstenv
pop
das
insl
jno
sub
mov
jbe
dec
pop
pop
jg
add
cld
mov
jno
xchg
jp
add
cmpb
orb
cmp
jle
push
sti
mov
insl
clc
inc
push
stc
add
mov
or
add
test
mov
inc
addl
subl
fidivrs
or
ljmp
lock
adc
xchg
sbbb
lods
aas
pop
clc
movsl
jle
lds
fiaddl
push
lods
dec
idivb
add
pushl
rclb
addb
arpl
shlb
jecxz
pop
xchg
sub
dec
mov
add
ljmp
fs
cmpsl
sbb
inc
out
out
hlt
lds
sarl
xchg
add
outsb
sbb
or
lods
test
jl
xchg
or
incl
mov
push
pop
jmp
mov
or
cli
jb
pop
rclb
push
loop
cmpsb
or
gs
mov
xchg
pop
mov
mov
bound
xor
lds
mov
mov
arpl
sub
push
test
mov
outsl
nop
inc
hlt
gs
rcrl
pop
scas
imul
nop
out
xchg
jp
in
push
add
insb
fstpt
out
aas
mov
xor
pop
jmp
mov
std
pusha
lods
pop
lea
xor
cmp
fistl
push
xchg
xor
out
cmp
jnp
fnstenv
sbb
mov
add
rcrl
sub
mov
mov
clc
addr16
mov
pop
aas
mov
insl
mov
bound
in
std
loop
push
pop
fwait
dec
daa
sbb
mov
fs
mov
pop
idivl
addl
pop
and
clc
pop
mov
mov
cmp
add
mov
lcall
cmp
aas
out
fs
push
pop
push
gs
mov
repz
popa
add
or
ror
and
rcr
fwait
add
sub
add
add
call
push
popf
popa
dec
mov
loope
cmovo
xor
pop
out
sub
outsl
cs
or
aad
or
adc
not
fbld
cmp
repz
lcall
push
sbb
sbb
xor
pop
repnz
or
sar
xor
bound
inc
mov
out
and
and
orl
lret
scas
in
pushl
dec
xor
push
inc
addr16
int
leave
cli
aas
pusha
add
jecxz
movsl
popa
add
add
pop
jae
outsl
outsb
and
call
out
in
sbb
jge
es
outsl
out
aam
bound
xor
aaa
pop
aas
or
addb
fs
fcmovu
or
and
loope
xchg
mov
push
sub
lock
repz
pop
in
sti
out
inc
jmp
push
pop
cwtl
imul
ror
gs
mov
idiv
jmp
add
xor
stc
popa
adc
pop
insl
repz
enter
in
mov
mull
mov
pushf
aaa
cmpsb
in
cli
or
int3
xlat
inc
insl
mov
jns
lret
pop
mov
mov
xadd
pop
fs
xchg
insl
mov
mov
cld
adcb
and
lods
mov
hlt
sub
hlt
and
movsl
pop
push
fistl
lods
add
and
pop
subb
iret
push
lret
out
mov
add
cmp
mov
lahf
mov
xor
rcl
push
fcmovnb
sbb
sbb
inc
cs
sti
jmp
ficoms
mov
ret
lret
cmc
xchg
cld
repz
sbb
aaa
xchg
push
mov
lods
jns
std
pusha
push
mov
mov
cmp
pusha
lret
jg
mov
and
arpl
lahf
in
sub
cmp
xchg
cli
cmp
rorl
fists
movsb
sbb
cmpsb
pushw
push
xchg
out
in
push
call
push
xor
add
pushf
mov
push
int
mov
dec
xchg
adc
mov
decb
sar
call
mov
pop
mov
scas
push
cmp
lea
in
pcmpeqb
in
lret
ss
push
jmp
aaa
pusha
int3
pop
jge
push
mov
mov
aaa
dec
jl
push
cmp
sbb
mov
pop
call
stc
add
fwait
lret
faddl
cli
imul
sbb
fwait
insl
mov
fwait
or
cs
inc
push
mov
xor
popa
jl
rcl
loopne
dec
out
push
insl
mov
jmp
fwait
lret
ret
repnz
xor
xor
insl
int3
cs
pop
stc
clc
cld
mov
lods
outsl
mov
aam
dec
jge
fprem
pop
mov
mov
and
cmp
cmpsl
sub
jno
sbb
clc
jecxz
fildll
clc
inc
add
jmp
ds
jge
push
sti
pop
push
test
lea
imul
or
push
inc
or
sbb
mov
call
add
adc
inc
pop
xchg
lret
jmp
add
add
xchg
pop
pop
jg
int
decl
mov
pop
inc
jns
std
add
leave
sbb
add
push
pushl
cli
inc
adc
inc
sbb
adc
fldl
decb
test
push
pop
imul
movsl
jbe
or
pop
cs
push
sub
cltd
push
sti
inc
push
std
jg
sbb
mov
lret
fisttpl
jmp
sub
clc
mov
repnz
aas
pop
push
popa
sbb
mov
mov
inc
pop
mov
outsl
push
adc
mov
jnp
or
decl
aas
dec
mov
xchg
dec
mov
xorl
std
ss
cs
hlt
push
std
cmp
lods
out
ret
ljmp
pop
xor
test
lret
out
orb
int
call
test
loope
xchg
cmpb
hlt
jo
icebp
in
mov
das
jle
aaa
push
cmp
insb
or
sub
xor
jno
sbb
or
jge
pusha
push
sbb
loope
mov
das
incl
inc
push
xchg
pop
mov
mov
cs
inc
pop
clc
mov
adc
std
jle
sti
dec
jae
cmp
pop
les
push
push
fstp
adc
cmpl
adc
movb
insl
and
xorb
mov
xor
xchg
clc
inc
push
xchg
cmp
add
ret
cmp
dec
outsb
fistpl
pop
adc
popa
outsl
push
in
repnz
jne
rcrl
add
mov
les
add
sti
add
and
dec
cs
xchg
xor
dec
bound
pop
push
mov
cli
inc
aas
inc
cmp
fldl
sbb
jns
ja
movb
ja
shll
stos
mov
aad
leave
sti
or
mov
inc
sub
stos
jbe
dec
mov
add
pop
pop
add
pop
push
mov
fisttpll
gs
sbb
xor
mov
push
adc
pop
imul
loopne
sub
sbb
push
mov
sbb
or
add
xchg
or
mov
xchg
dec
in
dec
aas
push
cmp
lods
repnz
outsl
sbb
or
xor
add
mov
fstpt
cmp
push
cmp
scas
adc
inc
fldl
cld
sbb
stc
push
adc
les
or
pop
xor
add
mov
loopne
adc
aaa
pop
aad
jge
pop
add
mov
xor
mov
xchg
mov
arpl
jle
add
int
call
and
stos
jne
xorl
mov
adc
pop
xchg
or
je
data16
andl
adc
pop
add
rcr
sub
cld
pop
in
mov
add
arpl
je
clc
ffreep
mov
out
pusha
notl
sbbb
ret
xchg
mov
aaa
jnp
push
data16
push
push
xchg
rcll
fs
jecxz
gs
pop
sub
push
dec
xor
push
dec
jecxz
js
mov
sub
or
loope
mov
pop
aaa
fyl2xp1
xor
or
lods
pusha
sti
or
and
addb
neg
cld
ja,pn
adc
pop
shl
int
adc
divl
stc
cld
xchg
add
addr16
xlat
cli
xor
add
aam
jl
pop
xchg
stc
fistpl
xor
cmp
cmc
int
movsl
loop
sti
push
bound
in
pop
fdiv
and
in
jecxz
jnp
dec
shlb
pop
jmp
mov
std
hlt
arpl
outsb
or
rolb
jle
mov
push
dec
cli
sar
jnp
push
mov
jo
arpl
jo
or
jb
out
bound
push
call
arpl
movsl
pop
jp
insb
pop
push
dec
push
pop
xchg
imul
stc
jbe
inc
xor
xchg
mov
sub
jg
ja
jg
xor
sahf
call
loopne
jmp
stc
jecxz
loopne
fimuls
cs
mov
fistl
out
jo
inc
out
add
addr16
stc
jecxz
mov
lret
push
add
mov
xor
sub
push
pop
pavgb
mov
sbb
ljmp
imul
and
jae
fs
sti
rep
icebp
imul
jecxz
and
add
adc
mov
jl
movsl
cmp
inc
insl
lret
leave
lds
dec
cmp
out
dec
fwait
mov
in
es
pop
std
mov
xor
ret
mov
add
mov
mov
das
outsb
mov
cld
enter
or
and
dec
int3
pop
or
and
add
addr16
in
testb
rol
add
push
and
aam
gs
outsb
data16
adc
and
daa
add
jmp
dec
mov
cld
jecxz
pop
repz
push
mov
mov
daa
inc
jmp
or
addr16
jns
testb
xchg
icebp
mov
test
mov
or
inc
cmp
cmp
push
sub
movsl
jecxz
mov
sbb
cltd
ja
arpl
sti
iret
lea
je
loopne
pop
cli
add
shrb
aaa
arpl
xchg
das
jo
mov
jo
test
ss
push
mov
arpl
iret
inc
jle
sti
out
aaa
loop
shll
add
push
pop
pop
rolb
jecxz
cmovle
cmp
jae
jle
push
outsl
push
mul
and
imull
jle
jno
mov
outsl
inc
insl
ret
push
dec
ja
fildll
leave
insl
add
dec
jecxz
stc
mov
sub
call
pop
cmpb
add
fnsave
push
dec
mov
in
mov
outsb
add
jae
push
mov
testb
pop
add
aas
mov
or
insl
loop
add
adc
sbb
test
pop
arpl
add
add
outsb
pop
sbb
lret
or
adc
addr16
mov
lcall
sbbl
idivb
jge
add
jle
ja
imul
xchg
cld
in
mov
jb
fdivs
cmpsl
in
daa
sbb
imul
fwait
mov
add
cld
push
fidivrs
stos
sbb
adc
out
int3
mov
scas
or
out
xor
adc
out
stc
jl
out
test
mov
imul
cmpsl
jno
pop
subb
bnd
jmp
sbb
cmp
ret
test
add
ja
mov
push
jb
je
jne
shll
fstpl
ss
cmp
jb
inc
jae
jne
int
mov
xchg
popf
scas
fnstenv
sub
jbe
in
lcall
jb
je
int3
in
aad
lret
jno
cltd
cmpsb
imul
in
lcall
aaa
jns
push
js
in
mov
inc
js
jp
mov
dec
jbe
js
jns
jnp
jb
jb
js
jns
test
jl
fldcw
jnp
adc
mov
outsb
jl
js
pop
jp
aaa
jge
dec
xlat
xor
pop
outsb
jae
cmp
cltd
je
shll
test
adc
xor
shll
inc
cmp
test
and
jo
adc
je
je
jbe
jne
xor
mov
popf
jae
ret
aad
into
ss
shl
das
inc
adc
or
cmpsb
imul
test
push
lret
in
or
jp
jnp
adc
xor
jae
add
das
jb
mov
fnstsw
shll
jae
xor
in
jne
jbe
push
sub
adc
fwait
das
js
mov
mov
loopne
sbb
sub
xlat
pop
scas
dec
sbb
jecxz
add
lods
inc
jne
clc
or
aas
daa
push
and
mov
xchg
add
dec
pop
ficoms
push
imul
or
xchg
fwait
orb
push
scas
xor
add
jle
cmpsb
nop
or
inc
xlat
into
push
and
xor
idiv
pusha
add
xchg
pop
adc
imul
xchg
sub
je
insb
xlat
jno
jmp
or
iret
lret
lret
ss
in
jne
sti
je
pcmpeqd
lcall
mov
scas
lahf
pusha
int
inc
mov
sbb
cmp
jns
ret
cmp
mov
inc
jae
dec
arpl
jp
loope
js
testl
stos
adc
xchg
cmpsl
mov
fucomp
jb
pop
outsb
iret
cmp
jae
dec
jne
je
jo
xor
jb
jb
mov
xor
iret
pcmpeqw
jb
in
lcall
jae
outsl
cmpsb
jmp
mov
adc
lcall
cs
sahf
in
cmp
jb
aaa
js
push
je
jbe
jb
pop
repz
jp
jns
jne
xor
inc
js
mov
jp
xlat
leave
and
mov
fisubrl
cmpsb
imul
js
fwait
in
lahf
jp
sbb
adc
je
shrl
jg
cmc
pushf
dec
xlat
xor
popl
pop
xor
shll
mov
dec
fsubs
jp
inc
jl
jae
daa
jne
mov
jnp
mov
dec
shll
fwait
je
ret
fsub
repz
shll
inc
adc
movl
jecxz
not
jbe
ret
jae
lcall
jl
dec
shll
push
cmpsb
jmp
aam
movsl
addr16
dec
shrl
cmp
inc
xor
push
jno
dec
insl
gs
das
lock
pop
jb
dec
outsl
push
dec
jb
imul
mov
lcall
push
jb
outsl
popa
fs
addr16
pusha
insl
imul
insl
xor
lahf
and
push
pop
imul
cmp
sti
inc
popa
imul
push
gs
aas
adc
in
pop
popa
cmp
push
insb
inc
outsl
addr16
cmp
mov
inc
je
outsl
dec
push
decl
js
insl
outsb
and
fs
bound
jp
ds
mov
pushl
push
outsb
pushaw
inc
pop
imul
dec
fs
jo
gs
jbe
imul
arpl
push
cmp
gs
cld
xchg
orl
pop
outsb
jo
jbe
lcall
inc
push
pop
inc
pop
insb
pop
push
cmp
std
cmp
mov
pop
outsb
pop
and
pop
pop
imul
jle
push
hlt
inc
imul
push
push
jle
decl
sbb
cmp
pop
inc
gs
mov
ja
incl
pop
pop
addr16
daa
jle
cmp
ja
call
jle
aas
arpl
and
dec
jb
outsb
fs
arpl
bound
insl
in
lods
jg,pn
clc
push
dec
pop
mov
ret
mov
jnp
pop
aas
push
fcmovnu
outsb
in
dec
pusha
mov
pop
mov
scas
stc
push
pop
sbb
inc
pop
outsl
inc
pusha
arpl
ja
mov
dec
or
push
pop
push
imul
push
push
xor
stos
ret
aad
divl
lods
mov
jno
outsw
sub
inc
inc
pop
outsb
fldt
mov
ljmp
test
push
adc
dec
insl
incl
jno
arpl
pusha
jno
inc
aas
dec
dec
cmp
xor
repz
imulb
popa
cmp
arpl
inc
or
pop
ja
outsl
cld
jb
sub
outsb
outsl
or
inc
popa
daa
frndint
lahf
jae
adc
in
ret
cs
mov
in
adc
pop
mov
clc
outsl
in
add
jb
xor
std
flds
inc
cmp
or
pusha
jo
lahf
insb
dec
fs
mov
je
cli
cld
cmp
dec
pop
pop
test
push
pop
addr16
fcmovne
lea
cli
clc
cmp
pop
push
shll
popf
pop
imul
pop
popa
pop
js
outsl
mov
decb
push
mov
and
jno
mov
popa
imul
pop
pop
jne
outsb
mov
jecxz
pusha
cmp
dec
dec
inc
dec
cs
daa
pop
ja
add
clc
aas
jno
pop
push
shll
or
or
ja
adc
push
popa
pop
loop
daa
std
inc
ss
mov
pop
filds
outsl
push
jge
sbb
and
imul
fs
test
imul
out
mov
out
decb
push
cmp
mov
or
inc
pop
jne
sub
sub
push
pop
popa
adc
fisubrl
or
imul
jae
cmp
sbb
cld
test
icebp
cmp
pop
mov
aas
inc
sub
fcmovnb
cld
cmp
push
cmp
sub
sub
addr16
pop
push
xor
dec
arpl
shll
clc
in
sti
mov
pop
bound
gs
aam
pop
xchg
or
stc
adc
and
mov
mov
cmp
mov
addl
xor
inc
loope
vcvttps2dq
ds
or
insb
dec
outsl
sbb
jae
mov
scas
imul
and
mov
popa
xor
sbbl
or
pop
inc
imul
jne
stc
fcmovnb
xlat
or
daa
sbb
rcrl
jne
insl
mov
arpl
pusha
sbb
push
js
pop
repz
push
dec
inc
ds
or
pop
pop
push
push
jg
fisubrl
andb
cmp
sub
jg
dec
frstor
cmp
cmp
cmp
das
mov
cmp
pop
inc
arpl
cmp
cmp
loope
add
cmp
cmp
out
cld
cmp
aaa
pop
pop
pop
insl
lds
outsb
adc
aas
push
ss
hlt
jmp
pop
outsb
insl
pop
lret
push
cmp
push
cmp
scas
pop
scas
adc
adc
cmp
mov
jbe
jge
cmp
sub
daa
mov
outsb
aaa
cmp
movsl
jo
pop
pop
daa
mov
sbb
lods
dec
cmp
pop
inc
pop
pop
add
outsl
cmp
cmp
outsb
jno
inc
push
insl
or
pop
pop
imul
pusha
aaa
cmp
mov
push
cmp
aas
inc
clc
repz
pop
dec
gs
or
inc
fnstcw
test
jle
icebp
test
pop
add
pop
xchg
imul
mov
xchg
insb
insl
sbb
inc
dec
mov
arpl
jae
fldt
mov
mov
addl
dec
push
and
adc
test
sub
push
cmp
dec
cmpb
fidivrs
cmp
inc
pop
test
cmp
das
lret
jno
das
inc
cmp
hlt
pop
cmp
cmp
pusha
or
fdivl
mov
pop
daa
dec
cmp
xchg
outsb
test
lahf
push
outsl
outsl
dec
add
aas
xchg
rcl
das
popa
cmp
push
cmp
pop
fs
pop
lods
jo
into
sbb
dec
add
jecxz
ret
jg
inc
cmp
cltd
cs
imul
inc
mov
mov
inc
lods
aad
in
cmp
cld
cmp
pop
leave
fs
push
adc
mov
push
rol
rorl
ds
push
fistps
xchg
pop
cmp
dec
ds
jg
cmp
cmp
cld
inc
dec
push
cmp
sub
push
dec
sub
nop
mov
imul
insb
imul
pop
pusha
mov
jno
fwait
insb
popa
sub
pop
push
mov
dec
fimuls
mov
push
sub
adc
mov
inc
xchg
pop
jl
lods
call
jno
clc
xchg
jmp
inc
mov
push
and
jno
into
mov
rcrb
dec
lcall
mov
sbb
std
mov
or
adc
sub
std
adc
or
stos
pop
mov
inc
cld
push
pop
fsubrl
icebp
inc
jo
inc
fldcw
aas
pop
insb
sbb
fdivs
sbb
cmp
jne
lcall
or
mov
cmpsb
gs
and
cwtl
insl
mov
scas
ja
or
mov
bound
std
addl
dec
dec
jo
pop
mov
dec
sti
pop
push
pop
in
jp
insb
lret
pusha
outsl
pop
cmp
push
imul
decl
push
pop
pop
gs
sbbb
or
sbb
dec
push
pop
std
sti
dec
shlb
inc
cs
mov
add
ret
hlt
cld
std
push
bound
imul
pop
and
outsl
cli
mov
pop
popa
pop
fbld
movsb
push
xor
das
testb
lret
cmpsb
imul
inc
jge
jb
fdivrl
push
pop
cs
inc
pop
shll
in
pop
imul
sahf
jb
jbe
push
cmp
daa
cmp
fstpt
jle
aam
int
jg
cld
push
mov
add
add
insb
jae
push
test
and
dec
dec
dec
push
mov
rorl
cmp
imul
cli
aas
outsb
adc
cmc
inc
inc
jmp
addl
jnp
pop
sti
xchg
aas
and
pusha
inc
push
fisubl
fldcw
add
or
mov
inc
loop
jne
push
sbb
pop
dec
daa
or
lods
xor
pop
mov
lds
add
mov
or
inc
or
decb
fildl
cmc
aam
mov
fbld
icebp
mov
jb
fldenv
jo
data16
sub
out
bound
pusha
imul
add
sub
daa
pop
out
mov
cmp
adc
outsl
fs
xor
sbb
sbb
dec
popa
bound
xchg
orl
mov
ss
cmp
lahf
sbb
push
mov
sub
jbe
iret
sti
sub
push
mov
push
push
aam
pop
sbb
ss
adc
sub
jbe
rcl
xor
inc
pusha
outsl
sub
cld
in
call
sbb
and
and
sbb
pop
inc
int
mov
and
rcrl
aaa
daa
jp
outsb
jns
pop
push
cmp
ds
bound
inc
cmp
mov
mov
sti
adc
rcrl
clc
lea
aas
cmp
inc
sbb
sub
pop
lock
insl
pop
dec
scas
cmp
cmp
neg
sbb
sbb
daa
insl
jo
xchg
jp
call
cs
cmc
pop
data16
int
lods
pop
sub
data16
jnp
mov
lods
inc
test
aas
inc
dec
dec
fisubrs
sti
addr16
daa
cli
cld
pop
xor
add
push
pop
mov
adc
aas
sbb
imul
adc
in
push
cmp
push
fucomi
ja
loope
and
xor
lods
mov
fwait
test
imul
test
pop
cmp
inc
out
pop
mov
sbb
popa
xor
xchg
add
les
pop
mov
push
ja
sub
dec
andb
stos
mov
dec
pop
xor
mov
aas
nop
imul
pop
fcmovu
ret
jno
jno
push
sti
lret
pop
outsb
jg
push
pop
addr16
inc
dec
cmp
mov
push
call
clc
shlb
pop
sbb
sub
fs
in
ret
sub
out
jge
notb
dec
inc
inc
fistpl
pop
shlb
push
dec
lahf
or
add
adc
fcomip
lods
fildl
dec
repz
inc
push
dec
dec
sub
sub
add
insl
insl
xor
icebp
jae
daa
add
mov
mov
sub
pop
subl
pop
jge
xor
adc
lods
pcmpgtb
xor
push
or
fcomip
imulb
daa
cmp
sbb
sbb
je
pop
mov
dec
or
pop
mov
aad
shll
sbb
push
dec
scas
arpl
ss
pop
and
add
xor
dec
sub
inc
jle
cmp
pop
imul
jo
xchg
dec
mov
dec
push
mov
lods
sbb
jge
and
loope
and
xor
jae
sub
mov
and
add
loopne
arpl
inc
pop
cli
sbb
lods
aad
bound
jno
insb
imul
adc
mov
or
jo
and
jo
adc
mov
rcl
pop
mov
test
mov
or
cmp
and
sub
sub
xor
ja
dec
push
push
ret
pop
dec
outsb
adc
push
cmc
outsl
lock
jecxz
dec
addr16
dec
pop
sub
sub
sbb
jge
pop
push
je
add
add
sbb
jnp
dec
insl
xor
mov
test
lods
insl
jl,pt
and
dec
pop
push
xorb
push
push
inc
jns
test
inc
jg
enter
sub
mov
xor
sbb
pop
fcoms
cs
pop
sub
pop
sub
or
xor
sub
stos
addr16
ret
push
das
pop
sub
lds
and
scas
lods
out
shrb
call
cltd
sub
pop
xor
imul
lea
mov
bound
pop
mov
sbb
fsubs
lea
pop
jmp
pop
dec
pop
cltd
lret
sbb
mov
sub
sub
daa
and
sbb
mov
and
sub
mov
daa
jecxz
sbb
das
xor
push
mov
push
pop
xor
aaa
cmpsl
jns
cs
sbb
mov
inc
and
and
cmp
sub
xor
and
xor
inc
pop
lcall
xor
cmp
cmp
insl
push
arpl
adc
clc
push
addr16
aaa
push
out
mov
pusha
stos
ja
fs
pusha
jmp
xchg
outsb
mov
out
dec
fs
es
dec
dec
mov
pop
cmp
cmpsl
arpl
push
out
pop
rcl
cmp
push
push
cwtl
cmp
mov
je
cmp
outsb
xchg
dec
lods
or
mov
jno
dec
fisttpll
or
std
add
push
cmp
lcall
xchg
mov
popa
pop
inc
add
addr16
cmp
roll
popa
dec
ss
add
sarl
fs
insb
loope
pop
lea
mov
pop
fidivs
arpl
fmull
fldcw
cmp
fs
mov
jo
mov
pop
inc
mov
inc
pop
cmp
pop
cmp
jno
fisttpll
pop
dec
ja
aas
adc
xlat
sbb
stos
pop
das
inc
arpl
lret
ret
add
aaa
outsl
jne
dec
mov
mov
and
sub
insl
outsb
popa
pop
dec
or
dec
pop
cmp
lods
dec
dec
cmp
addr16
outsl
pusha
mov
ljmp
js
lret
push
out
dec
push
cmp
arpl
xor
aas
xor
test
sub
sub
sub
sarl
ds
inc
inc
inc
orb
dec
outsl
adc
sub
shrl
popa
arpl
std
icebp
pop
mov
mov
jo
pop
call
aas
in
push
inc
and
daa
pop
sub
cltd
jecxz
and
inc
data16
mov
cmp
pushl
filds
cmp
jo
jae
xchg
mov
imulb
arpl
adc
jno
lods
mov
inc
jecxz
pop
add
mov
add
popa
fisttpl
sub
inc
rorb
ret
out
push
add
inc
fs
pop
push
decl
dec
jne
sub
outsl
adc
sub
inc
imul
movsl
incb
dec
inc
sub
gs
cmp
daa
jmp
inc
out
push
bound
arpl
jg
jae
jo
inc
ds
inc
and
dec
lret
rolb
pop
mov
xchg
cmp
add
adc
shrb
cli
jae
mov
add
imul
pop
popa
jo
shr
and
pop
or
std
add
cwtl
mov
xor
or
pop
sub
jo
imul
sub
sub
fwait
sub
push
repnz
jnp
adc
cmp
dec
dec
inc
pop
xor
push
dec
icebp
cmp
arpl
xor
cli
je
sbb
jno
mov
rorl
jo
sbb
cwtl
jae
insb
jae
into
and
xor
bound
xchg
repz
jb
adc
mov
pop
cld
cmp
lea
aam
negl
mov
jo,pt
pop
mov
mov
dec
dec
dec
outsl
insb
rcl
inc
dec
jno
inc
data16
xor
mov
aas
sbb
jp
sbb
fwait
add
popf
insl
insb
pop
test
or
imul
std
decl
sub
sub
push
sub
mov
sub
shrb
fildll
adc
and
cmp
outsl
xchg
cmp
sub
dec
sub
data16
sub
cs
sub
cs
inc
jg
sub
jae
jl
mov
or
pop
sub
ljmp
mov
lods
cs
cs
cs
cmp
xor
xor
cs
push
xor
das
cmp
imul
pushl
test
cmpsl
sub
mov
sub
in
jmp
xor
inc
xor
jg
xor
pop
xor
xor
xor
xor
xor
xor
xor
ljmp
inc
push
xor
jbe
xchg
xor
xor
das
fbstp
xor
call
aaa
add
and
xor
cmp
xor
xor
lods
dec
xor
xor
ss
cmc
xor
or
pop
xor
inc
cmp
pop
aaa
pusha
xor
imul
mov
aaa
xor
je
mov
pushl
incl
inc
cmp
push
cmp
icebp
je
mov
fstpt
sbb
inc
xor
inc
add
add
das
aaa
sti
pop
pop
std
fwait
call
lea
inc
sub
jne
jp
xchg
xchg
jg
sub
sub
sub
sub
sub
sub
cld
sub
sub
cs
sub
mov
aaa
sub
sub
pop
sub
jns
mov
mov
mov
sub
mov
repnz
push
sbb
sub
fists
outsb
sub
mov
mov
sub
clc
ljmp
das
inc
cs
sub
pop
sub
jo
mov
das
das
push
xor
xor
shlb
ljmp
cmp
xor
arpl
sbb
loope
adc
dec
xor
fidivs
xor
xor
inc
and
push
mov
sarl
xor
push
call
pop
cmp
fwait
cmp
cmp
ss
cmp
xor
cmp
cmp
cmp
xchg
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
aaa
imul
daa
sub
call
push
add
ljmp
cs
sub
jbe
jmp
sub
cs
sub
xlat
sub
stc
or
test
xlat
mov
cs
incl
xor
outsb
dec
cs
sub
das
lds
sub
xor
or
sbb
ss
xor
inc
jnp
xchg
das
cld
mov
cltd
dec
das
mov
enter
in
in
jae
xor
outsl
cld
push
fldt
push
and
cmc
ja
subl
daa
xor
pushl
xor
xor
sub
xor
sbb
aaa
incb
xor
xor
inc
cs
xor
xor
mov
lcall
das
dec
xor
xor
xorl
lcall
dec
xor
xor
xor
jbe
jge
mov
ss
inc
xor
mov
xorl
xor
ss
ss
adc
fildll
ja
test
lcall
in
cmp
dec
scas
cmp
aaa
pop
cmp
cmp
cmp
or
std
data16
leave
cmp
cmp
aas
cmp
adc
and
sub
hlt
lcall
jecxz
sub
pop
sub
jae
subb
insl
sub
cmp
mov
sub
cs
sub
sub
dec
insl
shrb
pop
xchg
inc
sub
adc
xchg
fldt
test
sub
sub
sub
mov
aaa
sub
lahf
sub
cs
sub
out
repz
rcr
cli
jg
mov
mov
sahf
sub
pop
jmp
out
sub
mov
adcl
call
cs
mov
sub
xor
cs
xor
xor
push
xor
dec
mov
jle
xorb
das
lods
xor
xor
xor
pop
and
inc
xor
dec
xor
jp
mov
cmpsb
jmp
xor
xor
xor
cmpsb
das
xor
popa
std
lcall
xor
xor
das
or
and
pop
xor
ss
mov
xor
nop
xor
aaa
sbb
push
cmp
cmp
lcall
mov
cmp
cmp
cmp
aaa
jmp
dec
adc
sub
sub
ljmp
sub
bound
subb
enter
mov
leave
sahf
das
jbe
sahf
cmp
push
mov
sub
sbb
sub
std
cmp
std
dec
mov
jnp
cmp
push
cmp
out
hlt
cmp
ss
cmp
lds
cmp
cmp
cmp
cmp
aaa
ljmp
mov
fwait
cmp
cmp
cmp
cmp
aaa
out
notb
add
sti
sub
adc
sbb
addl
sub
popf
sub
aam
jno
sub
mov
loope
out
sub
sub
cmp
inc
sub
mov
xchg
sub
sub
mov
fldcw
loope
jecxz
lock
std
ljmp
ljmp
add
cs
das
jnp
subl
sub
roll
ljmp
in
sub
das
pop
adc
push
syscall
pop
pusha
sti
das
daa
cmp
icebp
arpl
gs
sub
pop
das
and
cmp
daa
addr16
test
jg
sub
xchg
cs
mov
in
clc
xor
mov
sub
incl
outsl
sub
mov
ret
fstpt
pop
xor
sub
sub
jge
mov
mov
xor
sub
dec
pop
das
testl
or
fstl
in
mov
inc
and
inc
jb
push
call
je
gs
unpckhps
mov
push
jb
addr16
dec
push
dec
dec
pop
push
dec
pop
ret
inc
push
push
inc
push
inc
pop
jae
fs
pop
outsb
pop
cmp
outsl
fidivs
jmp
ja
jb
pop
dec
imul
inc
outsl
ja
fisttps
push
outsl
push
outsl
popa
insl
sbb
out
divl
cs
ja
jge
mov
adc
je
jae
and
je
and
jns
je
jbe
adc
outsb
imul
jbe
jp
je
sub
popa
bound
jo
pop
fs
jbe
hlt
mulps
fcmovnbe
data16
jg
jbe
pop
jns
jo
insb
or
jo
adc
xor
cmp
xor
sub
push
gs
add
out
xor
push
aas
jb
outsb
cmp
mov
lock
outsl
sbb
push
insl
adc
push
jae
jo
inc
add
iret
imul
inc
adc
popa
gs
jg
bound
out
lahf
xor
gs
popa
push
ds
pop
mov
js
adc
push
push
adc
jns
fucomi
data16
jmp
inc
fs
imul
insb
andl
jne
dec
ret
push
inc
inc
xor
push
lds
je
dec
lods
inc
les
fs
jb
adc
pusha
outsl
out
sub
cmp
push
or
leavew
mov
or
dec
mov
pop
testb
cmpsl
sbb
dec
jae
test
fildll
xor
lds
roll
outsb
adc
fdivrs
insl
or
fisubrl
add
mov
arpl
outsl
dec
push
and
fs
daa
subl
push
sti
imul
insb
sti
imul
dec
insl
imul
es
xor
jae
sti
pushl
dec
inc
pop
push
aaa
jo
xor
push
push
fs
cs
add
sbb
idiv
jg
icebp
pop
add
xor
xor
xor
out
lock
vpcomud
add
add
ja
jnp
fucomi
outsl
add
adc
push
mov
ficomps
rorb
add
insl
imul
sub
repz
or
outsb
adc
clc
xor
aaa
add
cli
imul
jl
std
negb
push
add
and
clc
cmp
inc
or
insb
mov
cmp
jle
fs
add
add
aam
add
add
pop
rolb
cli
jg
in
mov
mov
lahf
out
add
lret
pop
mov
sub
icebp
and
nop
mov
add
and
orl
dec
ds
loop
pop
test
pop
add
jmp
and
push
adc
and
adc
mov
mov
add
add
add
inc
dec
push
sub
add
push
inc
outsl
mov
add
jmp
cld
daa
add
rolb
nop
add
add
sub
pop
outsb
test
shlb
jns
add
jg
incl
push
sbb
adc
xchg
add
add
jg
sub
stos
or
add
add
cli
mov
decl
add
add
add
jbe
sub
add
add
add
mov
or
add
mov
popa
je
inc
imul
outsb
addr16
or
gs
data16
sarb
push
inc
insb
jne
push
and
imul
or
je
push
imul
jmp
push
add
outsl
jae
dec
popa
outsb
fs
inc
je
jb
sub
mov
jbe
inc
js
and
jo
dec
popa
mov
inc
inc
or
jb
test
mov
pop
arpl
cmp
jge
jo
outsb
or
dec
fs
outsl
outsl
mov
cld
jne
dec
outsb
data16
fsubl
adc
add
xchg
mov
int
mov
adc
sub
pop
cmp
push
jns
and
jbe
insb
jbe
arpl
jnp
push
xchg
decb
outsb
mov
jb
dec
out
jg
mov
fcmovbe
push
jns
fldl
je
iret
add
gs
outsl
ret
lds
lock
push
lock
insb
inc
inc
in
outsl
je
cs
pop
mov
xor
inc
faddp
jae
bound
dec
bound
sbb
lcall
mov
jmp
adc
pop
adc
pop
or
pop
or
mov
sti
call
leave
adc
mov
mov
decl
add
mov
jp
pushl
add
or
and
incl
sbb
ljmp
or
and
inc
sub
push
push
jns
pushl
out
dec
out
ud0
int
add
ds
insl
cmp
lcall
xor
adc
lock
pop
or
icebp
adc
xchg
insl
testl
push
test
xchg
mov
mov
fnstenv
push
dec
mov
insl
fbstp
or
je
lret
mov
inc
bound
arpl
call
cli
or
mov
fstpt
out
mov
inc
das
dec
or
sub
and
sub
xor
mov
jno
jo
mov
js
jo
pop
push
pop
iret
mov
xor
je
shrd
or
fdivs
cmp
xor
fs
push
sub
data16
fwait
add
mov
jb
jae
arpl
outsb
or
out
mov
jo
je
subb
xchg
pop
mov
mov
pop
and
insl
leave
addr16
fisubs
cmpsl
scas
ja
or
jbe
jns
fisubrl
sbb
outsb
arpl
inc
jmp
sbb
inc
jb
dec
aam
jo
mov
je
je
insl
mov
inc
xlat
fidivrl
cmp
retw
loopne
push
xor
aas
dec
add
or
rorb
jne
hlt
lcall
cld
or
clc
insl
dec
add
out
inc
aaa
jne
mov
les
fs
xlat
or
aas
pop
cmp
dec
adc
addr16
push
stos
inc
or
mov
outsl
mov
mov
dec
wbinvd
or
shrb
push
push
cmp
gs
sbb
mov
push
mov
or
jo
inc
xchg
leave
ss
jns
bound
jg
dec
fstl
dec
imul
incl
dec
add
add
pop
ja
outsb
mov
std
sidtl
add
mov
lock
add
inc
add
add
xchg
pop
xor
sbb
add
adc
push
mov
test
js
mov
inc
nop
add
js,pn
xchg
in
test
nop
xor
lods
loope
jb,pn
popa
mul
push
add
inc
cs
movsb
mov
inc
mov
rorb
or
rep
and
add
add
loopne
add
add
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
