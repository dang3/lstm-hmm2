mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
test
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
push
and
mov
frstor
sti
push
push
push
push
adc
push
xorb
adc
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
mov
scas
insl
das
and
mov
lretw
jle
movsl
and
pop
sbb
out
sbb
add
or
lods
mov
outsl
pusha
outsb
mov
cmp
sub
repz
ud1
out
add
fsubrl
sar
push
fcompl
pop
add
pop
outsb
jg
ljmp
xor
mov
and
push
fs
pushf
jl
or
and
adc
lea
test
push
fidivs
mov
inc
xor
fcomps
pop
lahf
mov
in
std
cmp
or
mov
dec
test
je
mov
dec
lea
adc
push
xor
mov
add
add
xchg
jg
shr
or
jne
and
call
lods
mov
dec
push
sbb
adcb
jo
pop
jp
push
sbb
clc
orl
lcall
pop
ret
sbb
sbb
imul
sub
aas
fadds
sbb
aaa
test
jne
sbb
lea
shr
pusha
pop
fdivrs
inc
xor
in
sarl
jg
cmpl
lret
push
pop
cmp
sbb
neg
add
or
popf
mov
fldcw
lds
or
imul
mov
pop
adc
adc
outsb
fcmovnu
xor
test
push
outsb
cli
outsl
fstps
out
sub
push
mov
or
je
repz
or
jle
mov
cmp
ret
adc
sbb
jbe
mov
push
fsubrl
insb
cmpsb
push
outsl
add
adc
in
jmp
mov
sbb
xor
dec
inc
subl
jg
rorl
push
sub
lea
push
add
stos
stos
stos
push
inc
fchs
out
pop
sbb
or
inc
push
or
insl
adc
adc
sub
push
or
sti
jnp
cmp
les
mov
sub
pop
movb
jmp
push
push
in
into
mov
mov
or
shl
add
inc
mov
repnz
not
sub
lea
mov
push
fisttps
shr
rep
pop
push
and
mov
movsb
jl
sti
push
dec
mov
push
push
lea
xlat
push
pop
sub
sbb
scas
xchg
nop
adc
in
cmpsb
cld
dec
push
nop
mov
jmp
and
pop
add
adc
scas
push
push
xchg
scas
mov
inc
mov
and
js
hlt
fs
je
cmc
add
je
mov
insl
cmp
ds
repz
popa
mov
xchg
incb
clc
add
mov
dec
cmpb
jne
adc
add
or
inc
xchg
adc
add
or
dec
add
and
dec
into
mov
idivb
push
lds
sbb
push
push
aam
push
dec
add
pop
inc
push
adc
push
sbb
lcall
add
andb
sti
mov
test
js
out
lea
addl
stos
push
enter
andl
dec
mov
filds
dec
inc
jne
pusha
pop
mov
or
roll
cwtl
mov
pop
ds
push
sbb
insb
imul
mov
fiaddl
les
in
inc
cmp
lcall
mov
fcmovnb
in
popa
out
push
push
je
xor
shl
pop
sub
mov
mov
dec
das
and
adc
sub
ja
xor
push
std
sub
sub
xor
push
mov
je
cmp
xor
inc
inc
cmp
inc
stos
imulb
add
sub
inc
repz
xchg
jge
adc
sbb
aad
cmp
xor
add
inc
incl
lea
xchg
push
push
or
xor
push
push
gs
mov
mov
pop
push
pusha
nop
xchg
cmp
pusha
push
adc
dec
jo
mov
fcomp
xor
and
push
push
cmp
inc
ret
add
push
add
xchg
imul
pop
xor
push
ficoms
xlat
xlat
mov
push
push
fmul
cmp
mov
push
div
out
add
or
push
lret
jb
sub
adc
sub
outsl
jae
cmp
jp
test
or
or
scas
jae
cmp
mov
in
lods
pop
mov
mulb
adc
add
mov
pop
nop
jge
mov
fwait
mov
cmp
push
push
push
add
or
int
xor
packsswb
sub
es
mov
iret
cs
dec
inc
push
adc
adc
adc
adc
in
sbb
adc
push
xchg
andl
imul
pop
jae
xor
clc
cld
lret
or
lahf
addl
mov
push
push
mov
clc
jg
add
test
jle
push
dec
jns
test
out
add
push
jl
dec
cld
pop
in
add
out
or
jmp
outsl
enter
mov
cmp
or
jmp
mov
lods
ror
mov
xchg
mov
jns
movsb
adc
sub
xor
aas
ss
aad
lea
shl
jae
rol
ffreep
mov
lea
adc
rorl
and
ret
sub
sti
xor
mov
sti
pusha
js
shrl
push
adc
mov
sbb
sbb
push
ret
mov
inc
push
mov
xor
loope
out
inc
push
push
bound
es
inc
sbb
call
jl
xchg
jp
cmp
icebp
rorb
xor
sbb
pop
daa
mov
dec
or
enter
fcoms
push
sbb
mov
xor
add
xchg
push
lods
push
cmp
xor
push
int
push
push
leave
mov
cmp
pop
pop
mov
xor
pop
or
push
adc
xchg
inc
sbbl
sub
pushf
es
mulb
jmp
sbb
jecxz
fs
sbb
sbb
mov
pop
push
into
mov
or
or
and
pop
mov
aad
sub
mov
xchg
jmp
sub
out
xor
mov
cwtl
push
mov
sub
adcb
in
pop
scas
xor
mulb
mov
pushf
ds
and
adc
adc
sub
sub
and
hlt
addl
cmpsl
push
push
dec
or
fisubrs
je
or
aad
sub
mov
dec
int3
cmp
addl
mov
sbb
add
pop
mov
dec
or
push
pop
push
push
jmp
and
sbb
add
leave
inc
xor
dec
movl
inc
loopne
ds
jmp
fsubl
add
push
ja
mov
xor
jae
cmpsb
jmp
adc
adc
imul
pop
aaa
scas
stc
imulb
mov
mov
fnstsw
adc
inc
in
test
imul
or
loopne
jne
inc
add
mov
jb
adc
pop
xchg
loopne
dec
mov
das
sbb
loop
and
push
and
pop
test
add
pop
int3
inc
xchg
or
imul
jmp
sbb
push
loopne
sub
lock
in
sbb
sbb
je
cmc
cmp
inc
pusha
test
or
std
xchg
outsl
adc
mov
mov
ret
aad
sub
mov
pop
jle
push
cmp
jne
inc
add
sbb
sbb
dec
cmp
stos
add
push
into
movsb
insb
and
lods
sub
sbb
mov
or
xchg
out
hlt
leave
int
ret
das
lock
sub
or
test
ret
add
or
in
inc
pop
das
mov
pop
or
pushf
aad
xlat
push
pusha
push
movl
cmpsl
jnp
das
pushf
add
clc
mov
pop
or
fmull
insb
enter
jecxz
pusha
mov
cltd
adc
gs
sbb
mov
fs
loop
ss
inc
sbb
jge
inc
data16
jbe
clc
divl
sub
dec
das
or
push
sbb
or
outsb
pop
mov
add
imul
mov
test
and
inc
stc
lock
popa
mov
mov
aas
test
mov
push
pop
cwtl
daa
les
mov
jecxz
push
out
xchg
push
cwtl
sti
adc
mov
pushf
mov
mov
popa
adc
rcl
mov
pop
cli
nop
dec
add
adc
sub
jle
adc
xchg
pusha
jo,pt
aam
popf
adc
int3
fstl
push
and
adc
insb
dec
inc
jecxz
fucomp
sbbl
and
lock
clc
pusha
cmc
adc
cmpl
push
mov
jae
mov
addr16
adc
inc
mov
inc
jo
push
mov
push
push
push
and
pop
add
repz
fwait
ret
and
sbb
ret
test
pop
icebp
decl
jnp
in
fdiv
clc
dec
hlt
lock
filds
push
ret
adc
shrl
aam
dec
lock
cltd
sub
add
clc
out
sbb
pop
push
sub
sub
movsb
jl
sarb
sbb
cmp
pop
fs
mov
dec
sbb
mov
filds
ret
lods
cmp
movups
mov
or
bound
mov
xor
adc
cmp
mov
cmpsl
push
dec
mov
cwtl
xchg
mov
or
rclb
pop
push
cmpsb
adc
mov
dec
pop
dec
fwait
push
add
cwtl
lea
and
rol
push
push
inc
adc
cmp
mov
das
mov
cmp
cmp
pushf
cmp
and
jl
insb
testb
xchg
addr16
and
sub
dec
adc
addr16
adc
sahf
adcl
sbb
fs
in
cld
out
aad
xor
dec
mov
mov
cmc
dec
inc
cs
add
aam
lock
rolb
cmp
inc
mov
pop
int3
addb
inc
out
lock
and
enter
repz
push
and
frstor
popa
aam
cmp
push
insb
add
pinsrw
repz
js
dec
testb
jl
jo
jns
pop
sbb
mov
pop
cmp
add
hlt
jae
add
out
or
mov
cld
imul
mov
mov
adc
sub
call
jns
pusha
jne
ret
data16
jle
sub
push
out
js
and
or
sbb
adcl
faddl
cmp
sub
xor
xchg
push
jmp
mov
jne
xchg
lea
cmc
push
ret
jge
or
add
addb
dec
adc
push
adc
sub
out
add
repz
mov
insb
xor
dec
std
test
movb
mov
sub
ret
xchg
or
adc
cli
or
adc
popa
sar
cmp
sub
je
imul
or
dec
jle
or
or
cmp
or
test
cli
call
push
lret
les
pop
out
push
push
int
sub
inc
cmp
andb
or
sbb
cmp
mov
cmp
ficoml
mov
push
fistpll
dec
sbb
aad
adc
insb
ss
push
jmp
add
add
xor
divb
leave
jae
daa
jne
push
mov
cltd
idiv
mov
mov
add
mov
mov
mov
jb
or
push
in
imulb
jg
arpl
fistps
mov
lock
in
enter
rcr
enter
enter
enter
mov
enter
test
mov
pushf
cwtl
xchg
nop
enter
mov
enter
je
enter
insb
push
enter
push
dec
enter
dec
inc
inc
cmp
enter
xor
sub
enter
and
sbb
enter
adc
or
enter
add
cld
inc
jl
lahf
iret
clc
inc
rolb
mov
inc
fs
nop
inc
xchg
cwtl
pushf
fs
fs
mov
jae
inc
enter
enter
faddl
in
in
lock
push
in
mov
sarb
mov
aad
pop
mov
fcoms
push
pop
jge
lcall
pop
or
sbb
dec
ret
push
xor
add
rolb
inc
addl
mov
xor
mov
in
pop
ljmp
inc
orl
popf
fcoml
inc
dec
int3
or
or
mov
enter
jg
sbbl
sbb
out
mov
add
insb
push
or
les
inc
jbe
xchg
ficoml
or
pushf
push
add
mov
push
or
xor
xchg
mov
xor
and
inc
or
add
or
bswap
add
jbe
aam
dec
movsb
notb
testb
in
movzwl
jmp
sub
outsb
std
repz
jmp
push
pop
pusha
push
push
and
jmp
scas
push
imul
mov
test
mov
pop
mov
or
add
adc
add
lcall
ret
inc
lock
adc
in
inc
lahf
mov
adc
xor
push
and
mov
mov
push
and
push
lods
fildl
loop
outsl
addr16
add
mov
inc
gs
aaa
lds
mov
out
int3
notb
popa
add
or
or
add
dec
faddl
or
xor
and
mov
pop
add
pop
inc
add
cmpsb
imul
inc
pop
cs
imul
cmpsb
imul
int
imul
mov
enter
push
dec
mov
lcall
dec
jnp
cs
mov
push
add
adc
pop
or
or
sbb
movsl
leave
adc
mov
lea
or
adc
insl
xlat
je
add
mov
jp
mov
xor
adc
add
xlat
xor
das
dec
cmp
or
sub
jne
xlat
jne
sub
adc
aaa
inc
out
jne
jb
arpl
movhps
scas
jnp
xlat
jnp
pop
sbb
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
jmp
cmpsb
imul
mulb
pop
scas
jmp
cmpsb
mov
mov
scas
xor
addr16
insb
mov
mov
mov
adc
pop
xlat
dec
or
push
scas
arpl
shrb
or
sti
loopne
dec
mov
ficompl
mov
imul
xor
mov
dec
into
les
fwait
data16
add
adc
jp
pop
daa
and
adc
mov
add
dec
inc
add
dec
imul
cmpsb
imul
mov
cmpsl
and
inc
add
imul
loope
cmpsl
nop
fwait
cmp
mov
inc
mov
aaa
pop
mov
sbb
add
loopne
adcb
shll
add
jo
fs
lcall
push
add
mov
xor
sub
xor
add
adc
lcall
clc
repnz
imul
int
cmpsb
enter
pop
and
jl
in
mov
adc
fcompl
or
repnz
and
str
int
or
and
and
and
and
mov
xor
pop
ja
xacquire
push
add
dec
shll
inc
cmp
xor
xor
push
sbb
jne
and
push
dec
shrl
add
xor
out
call
xor
ror
les
xor
mov
push
cmpb
mov
pushf
fildl
cmpsl
add
jecxz
das
add
jecxz
leave
mov
das
rolb
andl
sbb
sbb
mov
sbbl
pop
leave
sub
dec
es
push
inc
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
adcl
call
inc
push
inc
push
dec
xor
cs
insb
pop
push
ret
fdivs
pop
or
push
sbb
inc
cmp
adc
jmp
ret
ror
mov
idiv
push
mov
std
stc
cli
cld
idiv
std
add
clc
cmp
stc
fisttps
sti
out
or
or
jg
mov
pop
mov
dec
sbb
pusha
outsb
push
push
pop
imul
ljmp
insl
sbb
pop
insl
jae
sbb
sbb
dec
dec
sbb
pop
bound
in
aas
fadds
sbb
push
fmull
gs
pop
pusha
xchg
das
mov
and
out
mov
xor
pop
adc
es
pop
xor
mov
daa
add
cmp
push
popa
gs
pop
icebp
cmpsb
imul
mov
out
pop
dec
pop
bound
dec
inc
or
jg
jg
stc
std
pop
out
dec
adc
cld
add
daa
dec
shlb
cltd
push
rcrl
or
mov
or
add
inc
into
xchg
xchg
cld
adc
or
in
pop
or
or
or
and
mov
mov
or
sbb
push
insl
daa
pop
daa
outsb
pusha
je
cmpsb
cmp
daa
dec
xor
jg
push
pop
daa
insb
pop
pop
imul
mov
push
ds
shlb
lret
pop
sti
xor
mov
and
pusha
push
or
cmpsb
movsb
fldenv
push
jo
out
aas
push
andl
repz
cs
dec
push
push
arpl
push
push
pop
jnp
outsb
add
cli
adc
pop
lods
xor
idiv
or
xchg
mov
push
clc
mov
inc
setnp
or
inc
stc
loope
dec
xchg
orl
loop
div
dec
in
dec
cmp
jb
or
cmc
dec
mov
inc
jmp
clc
enter
cli
jb
loop
dec
cmpl
dec
push
cld
push
sahf
lcall
imul
push
mov
inc
cli
dec
int3
in
dec
cli
jno
ds
mov
cli
push
dec
push
cli
adc
cmp
in
pop
push
adc
or
loopne
dec
pushl
xor
jl
in
push
cs
repz
dec
stc
jo
fcomip
jg
lret
jb
push
or
notl
lods
imul
adc
aas
mov
fninit
dec
inc
dec
push
push
shll
push
push
pop
pop
ret
xchg
lcall
sti
jp
lock
cli
std
clc
dec
push
push
cmp
mov
mov
sti
clc
stc
out
cmpsl
ja
fdivp
cli
fsts
bound
mov
sti
idivb
loopne
cld
repnz
cmp
mov
jmp
incl
inc
out
test
movsl
movsl
mov
xor
jge
insl
cld
push
adc
repnz
dec
mov
fbstp
sti
pop
mov
insl
mov
pop
mov
stc
dec
dec
std
or
testb
into
divb
xor
xor
out
popa
sbb
fcmovnu
jmp
push
add
push
mov
lea
arpl
dec
ret
xchg
test
idivb
bound
gs
arpl
movsl
fidivrs
sub
data16
dec
ljmp
adc
dec
dec
fs
mov
jnp
mov
callw
rorl
clc
or
pop
inc
or
and
dec
data16
insl
sarb
adc
notb
mov
jl
or
decl
sahf
out
in
cmp
mov
cmpsb
arpl
sti
mov
stc
add
sbb
mov
cli
pop
dec
mov
push
jnp
xchg
fisubrs
inc
jno
cmp
cld
jns
fcom
cmp
sub
divb
in
cmpsl
mov
mov
sarb
cmp
mov
outsl
mov
adc
sub
outsl
adc
cs
dec
std
into
mov
in
jle
and
jo
jle
hlt
sti
ljmp
mov
outsl
das
inc
jecxz
repnz
jl
idiv
push
push
jmp
adc
push
outsl
add
ds
adc
fistpll
mov
push
jge
push
outsb
or
jae
pop
clc
out
mov
dec
sti
int
ret
lcall
ja
jecxz
inc
fs
pop
dec
in
ret
sbb
adc
push
mov
inc
pop
nop
pop
pop
push
push
mov
jns
inc
xchg
test
push
xchg
xor
sub
add
jg
or
lret
inc
popa
or
add
mov
pop
test
rolb
push
or
add
add
stc
loop
sub
into
sub
fldt
and
stc
xchg
loope
sub
insl
add
or
fistps
adc
dec
bound
jmp
jge
adc
in
pushl
or
dec
addl
aas
notl
aaa
sub
push
shll
xchg
fnstenv
popa
test
mov
insb
mov
or
subb
je
fs
dec
push
cmpsl
cmpsl
out
mov
mov
addr16
bound
sub
outsb
pop
insb
mov
loop
sbb
rorb
mov
jecxz
push
dec
dec
mov
push
test
xor
xor
leave
push
cmpsl
lods
cmp
insb
sub
pop
imul
xchg
out
dec
cmp
lret
push
xchg
out
push
arpl
mov
or
mov
movsl
loop
adc
outsl
scas
pop
andl
or
sub
arpl
mov
and
sub
dec
aaa
jle
push
jo
loope
jle
jecxz
sbb
pop
shll
call
pop
loope
push
dec
cs
push
dec
insb
insb
das
jl
pop
arpl
pop
dec
adc
or
sub
ret
in
pop
ret
mov
sbb
arpl
cmc
fwait
lea
xor
insb
and
mov
lahf
std
arpl
mov
loopne
sub
gs
add
cs
std
fstpt
sbb
xchg
dec
in
dec
iret
and
icebp
out
movb
rorl
mov
imul
xor
rclb
ss
stos
scas
jecxz
popf
test
loope
daa
dec
xchg
test
xchg
xor
adc
cmp
enter
xor
pop
fdivl
xchg
mov
add
mov
push
push
loop
sub
lds
jne
vcmppd
shrl
mov
ficoms
and
jg
dec
push
ret
repnz
jo
imul
sub
gs
sbb
ja
cli
arpl
inc
addr16
or
pop
sub
or
mov
or
jmp
xchg
or
jo
subl
movsb
add
aad
sbbl
mov
imul
mov
cltd
or
sbb
mov
cmpsl
not
xchg
sarl
mov
and
insb
sbb
xchg
push
sbb
cs
or
and
push
adc
pop
mov
fnstenv
push
fbstp
dec
mov
lret
insb
das
jl
cmp
dec
dec
shrl
add
sbb
inc
jo
push
lods
in
push
in
cmpsb
mov
xor
arpl
push
xchg
jle
mov
lret
out
dec
mov
push
push
pop
cmpl
add
stc
push
ja
add
mov
out
loop
push
inc
mov
leave
orl
add
fisttpll
push
loope
add
jle
int3
sub
in
pop
xor
clc
or
loop
add
loope
das
or
xchg
data16
fnstenv
xor
add
push
ljmp
xchg
sbb
aam
cmp
shrb
mov
ja
cmpsl
jg
lea
rcrl
push
jecxz
ds
xor
push
or
cwtl
cld
or
test
cmp
repnz
call
xor
ljmp
mov
xor
inc
push
xchg
addb
out
jnp
mov
mov
dec
out
inc
arpl
in
out
jl
jno
out
jge
jb
pop
mov
push
loop
xor
std
mov
fs
push
test
dec
jecxz
clc
insb
orl
fisttps
lret
push
insl
jle
jbe
loopne
out
mov
dec
arpl
pop
ret
call
loopne
inc
mov
mov
dec
data16
loop
inc
shll
pop
push
jge
xchg
cli
jo
test
in
add
arpl
and
outsb
mov
jecxz
decb
cld
push
push
ret
mov
add
push
mov
jle
sahf
sub
sti
and
arpl
or
mov
sub
jp
leave
add
xor
mov
pusha
xchg
adc
sti
jae
pop
pop
lcall
push
incb
push
movsl
or
roll
hlt
ja
push
loope
add
sbb
pop
lret
psubq
jecxz
add
daa
mov
dec
add
mov
std
decl
ret
and
add
in
dec
clc
test
lret
lock
repnz
loopne
add
shrl
jb
arpl
mov
out
push
arpl
inc
gs
xchg
lret
in
jbe
enter
inc
jmp
aas
lods
pop
pop
cs
dec
icebp
fs
std
insl
roll
jno
pusha
in
adc
sbb
cmp
mov
fistps
xchg
gs
ret
mov
fidivl
andl
lahf
mov
push
ja
cltd
test
inc
ljmp
cmp
insl
cmpl
xorl
jno
popa
enter
fninit
fdivp
lods
push
fistl
aaa
mull
adc
mov
outsl
fldt
xchg
push
xor
cmp
aas
dec
pop
in
jb
outsl
repz
dec
dec
mov
ror
in
xchg
lret
out
sbb
aaa
out
test
icebp
dec
repnz
incl
insb
test
jo
and
mov
mov
push
ljmp
in
mov
call
xchg
jbe
out
push
jecxz
and
adc
mov
lret
cld
fbstp
out
in
lret
in
leave
dec
add
gs
ljmp
pop
cs
inc
ljmp
in
or
xchg
jnp
leave
out
mov
jb
arpl
push
push
fnstsw
xor
mov
ret
sub
cli
jnp
out
mov
and
cmpb
int
dec
inc
in
add
mov
out
jns
std
icebp
mov
add
jb
fdivl
jmp
adc
ret
lock
push
adc
decl
adc
mov
daa
and
ja
mov
adc
loope
inc
jnp
call
cli
jge
mov
popa
pop
lods
out
add
or
out
test
mov
rcrl
push
in
dec
ljmp
jg
mov
jecxz
cli
jno
pop
xchg
adc
je
jmp
cmp
mov
mov
mov
ds
mov
inc
sub
scas
xchg
cmpl
icebp
mov
call
test
jg
jmp
scas
pop
mov
jle
repz
jg
loop
add
test
rcrb
xor
and
jl
sub
addl
pop
sub
and
add
sarb
ja
jb
jecxz
cmc
push
dec
add
idiv
add
mov
js
add
dec
add
mov
push
fldl
jo
dec
adc
cs
fstl
push
cmp
add
mov
into
sub
mov
jnp
mov
pop
jmp
andl
pop
xor
xchg
orl
cli
sar
test
std
lds
insb
icebp
jg
test
daa
mov
dec
repz
sub
dec
cld
testb
jns
or
add
inc
push
dec
cli
aam
pushl
sarl
loop
ret
xchg
incb
clc
xchg
les
std
test
sbb
in
cmp
pop
aam
mov
mov
or
pop
and
push
pop
and
pop
pop
push
push
aaa
push
iret
test
jle
and
mov
fs
ja
aad
mov
jg
pop
leave
sub
push
stos
mov
sbbl
adcl
fst
popf
fildl
dec
imul
imulb
push
insl
sub
pop
aaa
mov
fists
adc
xchg
pop
call
aam
rcrb
jg
imul
fistpll
and
xor
pop
loop
pop
sub
mov
shlb
outsl
lea
mov
clc
pop
jae
gs
in
insb
push
rcrl
push
stc
clc
in
testb
add
add
push
cld
sarb
xchg
test
arpl
add
xchg
pop
out
and
lea
rclb
sarl
mov
call
lock
dec
xorb
int
inc
jge
add
es
or
out
insb
cmp
sbb
or
cmp
pop
jecxz
and
ret
xchg
cld
cmp
outsl
add
aaa
dec
jae
pop
ficompl
jp
cli
outsl
pop
negb
pop
icebp
push
popa
stos
das
mov
out
fisttpl
mov
cld
cs
mov
call
pop
jl
inc
push
jb
test
cli
lds
dec
inc
pop
jo
cmpb
lods
loope
jmp
xchg
pop
clc
movzwl
call
jmp
or
ljmp
outsl
shlb
dec
push
fistpll
xchg
pop
ljmp
mov
mov
mov
test
push
xor
push
xchg
xor
jmp
les
ret
lea
push
adc
pop
xorb
push
mov
and
cli
insl
jo
adc
sbb
push
test
lret
out
popf
addr16
and
das
jnp
mov
pmuludq
pop
jg
xlat
pop
xor
divb
jbe
mov
mov
add
fnsave
dec
jecxz
cmp
std
dec
mov
adc
sbb
jae
insl
cld
iret
bound
lea
std
insb
pop
sbb
rcll
pop
arpl
mov
lock
lret
or
or
std
hlt
jmp
mov
mov
call
das
ja
xor
push
push
or
pop
in
sarl
das
aas
and
cld
insl
push
paddw
jmp
mov
outsl
and
arpl
sbb
fistl
pushf
mov
imul
fisttpl
daa
dec
add
xor
pusha
int3
or
cmp
rclb
aaa
adc
and
outsb
pop
adc
mov
stc
shrl
push
adc
inc
outsl
hlt
lods
rorl
cld
jno
mov
cld
xchg
leave
out
push
xlat
mov
or
pop
push
out
sub
push
arpl
jne
movsl
pop
cmp
ss
aas
lods
pop
sub
push
fs
xchg
cwtl
sbb
add
xor
call
mov
mov
cmc
xchg
fistpll
cs
xchg
arpl
mov
xchg
push
in
movsl
dec
packuswb
fisttpll
mov
dec
dec
data16
mov
jae
popf
ja
sub
push
push
arpl
dec
mov
mov
push
sub
ret
push
fdivrs
cli
sbb
xchg
lahf
xchg
lods
mov
mov
xchg
pushf
dec
mov
cmp
fwait
shrl
ljmp
mov
fdivrs
dec
lcall
or
dec
mov
xor
push
inc
ljmp
outsl
add
pop
cmc
mul
add
mov
mov
sbb
aad
insb
mov
push
add
push
pop
xchg
dec
cmpsl
das
adc
sarb
add
pop
pop
sbbb
pop
pop
push
cs
retw
lods
movsl
cmp
outsb
and
stos
jo
xorl
outsl
sbb
jg
cmpsl
xor
out
outsb
add
or
push
push
cmp
mov
dec
mov
fadds
scas
cli
test
adc
push
cld
cmp
outsb
adc
xchg
xor
pop
lahf
mov
jno
test
out
xorb
fnstsw
add
jo
inc
adc
jae
inc
add
and
mov
ret
les
incb
push
movb
mov
rcrb
sbb
insl
dec
loop
xor
cltd
add
fnsave
sub
xor
mov
sbb
daa
dec
pop
cmp
insl
sbb
xrelease
pop
sti
add
mov
lret
xor
add
div
in
insl
jle
insl
pop
pop
fistpl
push
mov
push
test
adc
pop
loopne
icebp
push
xorl
ss
dec
ss
aas
mov
push
cld
pushf
pop
xchg
ss
insb
sbb
jo
xlat
in
pop
jp
filds
cmp
or
arpl
jg
aaa
out
xchg
insl
fisttpll
cmp
mov
outsb
adc
sti
test
inc
cld
test
push
scas
push
and
mov
in
aaa
inc
or
cli
aam
pop
ret
pop
pop
in
add
push
cmpl
clc
movl
pop
mov
les
add
or
test
fists
mov
dec
out
dec
jecxz
cmp
mov
push
insl
pop
cmp
push
ss
add
popf
adc
aas
inc
dec
inc
pop
pop
or
dec
mov
pusha
lods
in
cld
mov
jp
push
dec
test
push
push
xchg
out
clc
push
xchg
dec
testl
fldt
jmp
out
loop
mov
jmp
ret
insl
cmc
fcomip
orb
lret
out
subb
add
clc
mov
jecxz
push
mov
mov
push
lcall
cmc
cli
ss
imul
test
std
mov
adc
add
inc
push
push
in
insl
mov
add
dec
addb
cmp
ja
mov
inc
pushl
in
pop
push
xor
cmp
lcall
dec
outsl
insl
ja
xor
test
dec
mov
sub
js
loop
test
orl
loop
lahf
inc
add
je
outsb
lret
or
jg
clc
xor
test
dec
or
xor
mov
out
push
jb
test
add
ljmp
fdivs
int
add
lock
mov
dec
jno
jae
xchg
movsl
push
xor
mov
ja
dec
std
addl
push
mov
divl
clc
pop
push
out
test
xchg
mov
sbb
xor
dec
or
mov
les
testl
sub
or
push
out
xor
jae
xchg
jge
testb
jae
ja
ret
adc
das
fdivl
outsl
jecxz
cli
popf
inc
test
mov
pop
fsub
adc
inc
addb
pop
jae
out
and
je
jae
test
cmp
sub
std
clc
sub
adcl
push
pop
rep
aaa
jno
jb
test
or
rcll
jb
outsl
mov
mov
inc
lret
je
jp
repz
fistpl
xor
loope
cld
mov
push
popl
mov
cli
in
les
loopne
sbb
cmp
rclb
test
test
add
xchg
jg
or
cld
orb
addb
inc
aam
divb
test
and
push
clc
xchg
fmulp
cmpb
xchg
clc
xchg
notb
loop
ss
xchg
sti
outsl
out
jecxz
mov
stc
inc
or
mov
clc
fwait
call
bound
add
dec
push
push
imul
xor
stos
in
roll
xchg
fucomip
aaa
mov
fcompp
mov
push
in
xor
xor
lods
test
fidivl
push
dec
push
mov
fs
xchg
arpl
sub
xchg
les
push
pop
iret
pop
jb
sbb
popf
xor
fldcw
or
sub
xchg
fwait
cmpsl
xchg
xchg
mov
add
add
loopne
inc
and
and
testl
bound
in
subl
stc
inc
xor
adc
loopne
std
push
xor
imul
jo
jg
mov
gs
jae
xchg
lods
xchg
cmp
xorl
and
push
test
mov
cmp
sbb
mov
ss
pop
mov
jne
adc
inc
or
jbe
sub
sbb
ss
pushl
xorl
shrb
xor
push
lods
add
jecxz
cmp
outsl
mov
das
xchg
hlt
xor
or
xchg
and
pop
mov
dec
insb
xor
pop
ds
clc
lea
inc
mov
sti
dec
mov
insb
cmp
outsb
xchg
in
ret
sbb
loopne
cmp
mov
filds
cmp
pop
pop
or
sub
loope
pop
out
jnp
sbb
outsb
inc
into
clc
inc
jecxz
jo
out
lods
push
jecxz
test
lods
cmpsb
iret
mov
dec
ror
cli
jecxz
clc
sub
clc
jmp
outsl
lods
stc
sbb
ds
ret
jge
sub
mov
or
popa
das
mov
pop
mov
insb
mov
in
xchg
wbinvd
ss
add
test
mov
pop
ljmp
outsl
add
arpl
pop
adc
arpl
mov
and
lock
in
movsl
fisubrs
cmp
push
inc
add
sbb
mov
outsb
call
dec
pop
add
cmp
push
fisttpl
pop
sub
jmp
outsb
outsb
rcrb
ds
inc
std
pop
scas
add
and
test
xchg
in
xor
lods
cs
mov
pop
test
add
std
test
mov
ret
add
pop
xor
mov
cld
cs
dec
add
add
mov
cld
jmp
std
push
jnp
stc
outsl
or
movsl
cmp
call
jle
pop
mov
into
outsl
or
repnz
ficomps
fldenv
out
lock
mov
cmp
push
subb
mov
pop
mov
or
add
ror
in
fcomp
fwait
mov
pop
mov
imul
insl
mov
or
mov
test
out
std
or
mov
cmp
es
and
loopne
rclb
repz
push
sbb
sti
outsl
cwtl
push
out
xor
in
shlb
sti
enter
or
jb
stc
daa
lea
insl
in
adc
insl
daa
out
mov
pop
jns
inc
movsl
clc
imulb
adc
cli
adc
lock
jne
gs
dec
push
sub
push
dec
push
push
shrb
inc
mov
test
xorl
ja
stos
pop
scas
lcall
iret
popa
jmp
lock
repz
icebp
test
sub
add
out
jp
jmp
ja
addr16
pop
jg
mov
cwtl
mov
mov
sti
inc
jge
dec
popa
adc
add
push
mov
mov
mov
dec
xchg
test
inc
mov
xchg
insl
movsb
ja
mov
jo
xorl
repnz
cli
cld
mov
inc
sahf
pop
ret
fisubl
fnstsw
incl
or
sarl
cmp
insl
mov
xor
add
xchg
out
mov
cli
adc
mov
sbbb
daa
loope
sbb
mov
sbb
popa
ret
mov
out
shll
shl
xor
sbb
stc
jnp
and
out
scas
sbb
insl
pop
gs
shrl
mov
daa
clc
dec
xchg
adcb
addr16
bound
imul
dec
lods
popf
xchg
xor
ljmp
mov
pop
lock
out
push
dec
ljmp
or
or
xor
popa
les
sarb
pop
test
pusha
test
ret
fbld
fidivl
dec
cli
rol
repnz
dec
push
lahf
jmp
pop
mov
in
inc
xor
fwait
sub
cli
inc
or
repnz
pop
mov
or
jge
das
rol
pop
arpl
mov
cs
sar
pop
fsubrl
ret
ret
test
jecxz
sub
or
pop
mov
mov
in
sub
fisttpl
data16
mov
push
mov
mov
sti
mov
push
fistpl
xorl
sub
not
pop
mov
sub
fs
xor
jo
inc
sbb
dec
dec
arpl
inc
rolb
mov
sbb
cltd
mov
dec
loopne
das
daa
xchg
movsl
ficompl
jmp
mov
or
push
insl
out
dec
mov
shll
aad
out
push
xlat
dec
out
loope
sub
in
fcomps
pop
faddl
arpl
loope
dec
or
mov
mov
inc
pop
mov
mov
lods
pop
rol
pop
mov
insl
jecxz
pop
loope
test
mov
mov
mov
scas
jmp
outsl
sti
add
and
push
daa
and
in
sub
clc
add
dec
icebp
test
mov
push
adc
and
addr16
dec
dec
or
aam
pop
out
ja
clc
out
hlt
jecxz
dec
xor
inc
add
repz
xor
outsl
push
cmc
outsl
sub
jb
loop
sub
jae
xchg
dec
test
shll
ss
push
cmpl
push
mov
add
jl
push
stos
call
mov
cmc
cmpl
mov
test
loop
lahf
and
push
sub
push
dec
lahf
push
jnp
mov
mov
adc
sub
mov
test
dec
movl
jmp
or
cmp
imul
dec
jg
sub
jae
arpl
push
jne
xchg
aad
insl
push
and
sub
rolb
je
arpl
shl
mov
jecxz
sub
pop
shlb
pop
sti
pushf
sub
jp
aas
inc
inc
aaa
jb
lahf
les
stc
fisttps
fisubs
aaa
mov
adc
lods
mov
rcr
imul
dec
dec
xchg
cmpsb
mov
xchg
nop
aam
inc
into
dec
shrb
pop
outsb
cld
push
filds
es
lds
daa
pop
stos
cmc
push
add
inc
jge
pusha
push
or
sbb
lret
decl
sbbl
mov
pop
std
sbbb
ret
gs
decb
xchg
mov
arpl
inc
in
movsl
popa
cmpsl
mov
fsqrt
cmp
xor
aas
dec
mov
push
and
fistpl
testl
pop
jne
clc
sbb
lahf
mov
mov
jecxz
xor
add
dec
data16
seta
and
mov
stc
push
loopne
pop
push
dec
test
loop
sub
in
jmp
push
adc
sti
into
popa
xchg
popf
sub
or
fcmovnu
add
adc
sub
shl
shll
imul
mov
scas
push
push
mov
mov
out
adc
sub
sub
cltd
popa
es
rcrl
lcall
loope
lea
loopne
sub
ss
mov
sbb
or
loopne
cwtl
cmpsl
xchg
xor
cmp
ljmp
add
jp
xchg
incb
dec
mov
pusha
cmp
or
mov
aaa
add
or
popf
mov
jle
jle
add
adc
cli
xor
push
je
gs
sbb
sub
adc
enter
scas
sti
xlat
xchg
fbstp
fisubl
outsb
xor
sbb
loope
orl
rcll
out
cli
fldl
dec
xor
push
xchg
inc
gs
cli
push
or
xor
lret
iret
mov
fdivr
addl
sbb
in
or
into
aas
xor
rcr
push
das
sbbl
mov
lods
cld
pop
adc
cmc
cli
cld
adcl
sub
add
mov
push
jge
mov
insl
pop
cld
push
or
mov
pop
xor
xor
add
mov
iret
push
cmpb
add
popa
lea
rcll
or
cmp
cmp
nop
rclb
push
mov
pop
pop
mov
mov
pop
adc
add
add
std
rcll
and
icebp
push
push
jg
lea
inc
jb
add
cli
ljmp
jp
mov
push
mov
in
and
pop
mov
cmp
fs
add
test
pushf
std
xchg
inc
push
adc
xchg
lea
ret
insl
shll
xor
shr
mov
xor
add
ss
lds
cmp
mov
jg
dec
push
xorb
rclb
je
popa
fcompl
cmp
mov
xor
dec
sbbl
mov
pop
dec
push
cmpsl
jecxz
pop
push
iret
pushf
stos
add
js
das
fldl
cld
jnp
mov
aad
in
mov
sti
adc
xchg
incl
mov
in
add
xor
daa
ja
sbbl
jecxz
and
add
mov
pop
mov
mov
ja
pop
push
pushl
push
sub
adc
lods
clc
and
cwtl
add
pop
and
cli
out
test
and
mov
sarl
cmp
pop
test
inc
inc
and
popa
inc
and
mov
aaa
sbb
sbb
outsl
aad
pop
addr16
mov
xor
jo
loope
sbb
sub
imul
icebp
cmp
rcrl
mov
adc
jg
push
add
aaa
sub
ja
mov
mov
js
mov
xor
jle
shrl
btr
arpl
xchg
push
or
mov
test
xchg
sahf
gs
push
cli
xor
push
sub
inc
xor
xor
frstor
mov
gs
incb
out
push
mov
cmp
testl
aad
sbb
insl
into
adc
fwait
call
cld
int3
fs
or
ja
sub
sahf
rorl
mov
pop
add
pop
jbe
cmp
jnp
jmp
xchg
pop
mov
xor
rorl
mov
std
and
das
sub
jne
and
jno
jecxz
and
outsl
mov
cltd
sti
push
outsl
mov
loopne
dec
mov
push
stos
aam
push
jmp
outsb
mov
fidivs
lahf
and
jo
add
aaa
fisubrs
pop
mov
idivl
adc
imul
adc
add
insl
xchg
stc
jns
lahf
cmpsb
mov
dec
push
pop
filds
adc
or
inc
filds
cltd
mov
cmp
enter
arpl
fstpl
inc
imul
push
insb
clc
fists
jecxz
mov
add
das
dec
les
js
dec
maskmovq
idivl
cmp
or
cmp
test
aad
ljmp
push
das
jne
push
xchg
jecxz
or
mov
ret
call
in
jmp
xor
mov
fsubp
jo
jg
jmp
mov
mov
subb
add
dec
arpl
insb
ss
and
cs
repnz
jo
cs
inc
hlt
fildl
adcb
xchg
js
fldcw
in
stc
insl
sti
insb
das
sub
out
in
dec
push
or
xor
scas
cmpsb
xor
jmp
leave
push
pop
cs
pop
outsb
mov
sub
adcl
ret
fwait
and
xor
xchg
mov
cmpb
push
cmpsb
test
test
jmp
insb
pop
or
xor
pop
cmp
sbb
jecxz
in
add
loopne
bound
imul
mov
inc
mov
add
and
push
fpatan
push
push
in
inc
jae
out
ret
dec
insl
push
add
and
lds
in
fldcw
popf
fcompl
ror
insb
jl
sti
sbb
mov
fwait
add
jns
push
popa
adc
xlat
xchg
mov
insl
fs
mov
mov
int
jg
lods
pop
test
adc
fiadds
incl
push
arpl
sub
call
push
dec
cmp
inc
xchg
incb
fnstenv
cmp
fiaddl
sbb
mov
ss
outsb
xchg
push
movups
push
pop
mov
pop
push
arpl
mov
push
xor
inc
mov
sub
icebp
lds
rorl
push
mov
jns
sbbl
sbb
inc
jo
movsl
shrl
stc
test
inc
stc
loopne
out
cmp
stos
mov
test
sbb
inc
aad
movsb
pusha
cmpsb
cmpsb
mov
jne
fdiv
mov
sub
push
mov
xor
sbb
cmp
xchg
lock
dec
aad
jge
negb
sub
fbld
jns
dec
jb
adc
mov
loopew
fisttpl
test
sbbl
pop
mov
in
movsl
pop
pop
fcomp
cld
push
or
adc
out
loopne
repnz
lahf
push
cmp
pmaxub
repz
add
mov
inc
ljmp
arpl
add
mov
mov
out
inc
sub
push
sbb
sub
mov
ftst
stc
stos
cs
sbb
jae
fwait
sub
xor
sub
lret
lahf
sar
sbb
stc
and
mov
push
dec
dec
jecxz
sbb
add
aaa
enter
outsl
sbb
add
dec
sbb
test
sti
addl
lock
add
loopne
and
jmp
mov
xor
outsl
aad
and
push
sbb
cmp
add
ss
push
inc
aas
push
insl
sub
or
repz
mov
out
lds
push
loope
loope
sbb
rcll
cmpsb
std
shrl
cmpb
cli
sbb
fcompl
lahf
imul
test
xchg
pop
add
das
in
and
frstor
arpl
mov
mov
mov
pop
push
in
lahf
gs
mov
xchg
mov
ja
out
pushf
popa
mov
lea
lea
mov
xchg
test
hlt
bound
add
jle
lods
movsb
loope
loop
xor
stos
push
dec
loop
mov
push
push
addl
test
push
clc
aad
add
addr16
aaa
sub
push
repz
out
pop
mov
push
les
adc
stos
insb
jmp
repnz
sub
mov
fistpl
cmp
pop
clc
test
outsl
xor
push
sub
sub
mov
popf
jmp
mov
fucomi
stos
in
or
movsl
rclb
adc
cs
insb
add
cmpsl
pop
push
mov
sti
add
lock
mov
sti
cmp
pop
sub
mov
loope
push
fwait
hlt
stos
test
dec
in
push
mov
xchg
mov
lahf
push
fcomps
lahf
or
cs
outsl
add
sbb
cli
jb
lods
fildll
xchg
mov
stc
jno
lods
cmp
mov
cmpl
sbb
int3
cld
cmp
mov
sub
sbb
add
lret
jae
out
rorl
cli
add
out
fnstcw
ret
aas
add
popa
sbb
jg
mov
stos
mov
sarl
sarb
cld
push
mull
push
cmp
dec
loop
push
test
dec
mov
jp
ja
aam
lds
cltd
jg
xchg
cmp
or
xor
dec
or
sar
sbb
sti
mov
sub
or
pushl
aam
inc
jl
add
xchg
std
clc
dec
inc
outsb
cltd
add
push
shrl
cmpsl
dec
push
add
mov
movsb
jge
inc
jns
outsl
rorl
xchg
sbb
jmp
inc
mov
mov
popa
cld
pop
outsl
icebp
mov
inc
lret
or
std
pop
push
mov
pop
xorb
adc
gs
push
sub
mov
cld
jge
divl
jb
cmp
dec
cld
jne
xchg
jnp
lds
inc
inc
fidivl
out
inc
sbb
stc
pop
xchg
call
push
sbb
mov
out
out
sbb
gs
cmp
mov
mov
push
jnp
loope
pop
inc
cmc
arpl
add
jmp
mov
mov
mov
lods
sub
mov
pop
cmp
sbb
add
mov
or
fcompl
xor
add
sub
mov
fisttps
add
fiadds
int
pop
and
cmc
test
cmpsl
jmp
mov
push
dec
mov
sub
mov
fdivr
xchg
xor
pop
push
or
lods
jne
repnz
popa
icebp
popf
dec
data16
fdivp
jb
pop
aam
test
das
add
fldenv
in
adc
or
add
rorl
test
out
imul
test
lea
in
dec
dec
adc
dec
out
nop
jg
fcomi
adc
or
fisttps
or
and
in
inc
imull
clc
ljmp
cmc
test
jge
out
xorb
test
sbb
add
mov
cs
clc
inc
out
jl
std
mov
push
jmp
fdivrp
lods
jnp
cld
xor
sbb
mov
cmpb
inc
push
rcll
mov
xchg
cmpsl
stc
dec
xor
jmp
pop
ret
test
pop
jb
out
arpl
data16
mov
or
add
push
shl
fwait
scas
dec
dec
incb
arpl
mov
outsb
xchg
or
sti
push
dec
adc
repz
pop
pop
dec
dec
or
inc
mov
inc
push
pop
divl
repnz
pop
fisubrl
iret
jmp
in
je
pop
aam
cltd
cmpsl
repz
inc
jmp
das
or
icebp
test
inc
aaa
es
clc
xchg
lea
repz
sbb
mov
addb
cmc
bnd
and
jb
in
mov
or
outsb
xor
out
icebp
rcll
popa
sbb
mov
sbb
pop
pop
push
popa
fs
sub
mov
or
or
cmp
xchg
imulb
nop
mov
int3
sbb
aas
and
aad
and
dec
fiaddl
xor
ja
fildl
push
fisubs
out
sbb
test
jnp
imul
push
imul
shl
in
mov
dec
popa
addr16
mov
lret
xchg
jnp
push
jno
inc
call
out
inc
dec
pushf
xchg
orl
mov
in
sbb
inc
lods
cmp
xchg
in
jp
call
sub
mov
das
adc
addb
stos
mov
stos
scas
pop
or
xor
std
sub
inc
pop
sbb
mov
in
push
out
outsb
dec
jmp
xchg
call
inc
int
icebp
fs
xlat
je
mov
outsb
sbb
insb
jge
jle
pop
cmp
out
clc
rclb
push
rolb
push
test
mov
sbb
add
pusha
mov
loope
push
and
adc
repnz
dec
adc
testl
in
lods
in
pop
stos
adc
xor
cli
add
fs
fcmovu
jns
fs
ror
inc
mov
mov
xchg
lret
adc
jb
cwtl
mov
xor
ret
push
xor
mov
dec
push
xor
mov
sbb
cmp
scas
push
mov
sub
mov
sub
mov
sbb
mov
mov
sbb
inc
adc
mov
repnz
into
test
aaa
xchg
sub
repz
or
mov
cmovae
lock
sbbl
popf
out
xor
mov
jecxz
push
fucomip
fwait
sbb
fwait
out
gs
inc
cli
aad
mov
stc
sub
daa
pop
jbe
xchg
fucomp
adc
mov
adc
enter
add
into
lods
ja
rcr
hlt
ret
fwait
sar
and
xchg
sub
dec
mov
notb
fmul
les
or
enter
dec
push
stos
add
sbb
sahf
mov
add
movsb
das
icebp
ljmp
dec
incl
sub
stc
and
mov
lret
jg
shlb
stc
sbbl
lock
das
cmc
dec
sub
xchg
std
mov
mov
sar
inc
add
or
incl
jbe
das
rol
cld
cli
dec
cmc
loopne
jbe
outsl
shl
mov
adcl
ja
xor
and
dec
clc
mov
dec
sub
ljmp
sbb
push
add
les
mov
or
test
inc
test
add
ret
repz
inc
xor
insl
cmc
js
je
pop
adcb
addb
lock
pop
shlb
add
push
mov
fwait
dec
xor
cmp
pop
cld
outsl
inc
popa
cmpsl
divb
test
lock
into
cmp
lret
mov
cmp
outsb
aaa
sbb
cli
je
and
or
xchg
xchg
rclb
imul
sbb
xor
add
stc
mov
aaa
mov
es
cld
ret
push
lahf
repz
shll
les
cli
or
outsl
lock
ja
and
aas
sub
enter
cmp
mov
and
cmp
sbbb
inc
fs
mov
mov
pop
sti
push
loopne
adc
cli
pop
sub
cmpsl
add
sub
push
testb
dec
cmpsb
ljmp
rcr
xchg
dec
data16
push
sub
repnz
arpl
cmp
or
mov
out
addb
fucomip
out
rorl
xchg
fwait
adc
arpl
or
jecxz
fs
pop
cmp
cli
loop
loop
movsl
adc
mov
gs
ss
push
pop
xchg
leave
aad
adcb
hlt
cmp
pop
sub
and
add
icebp
aaa
dec
jmp
testb
push
adc
or
popf
mov
push
xor
add
xor
clc
orb
adc
inc
jb
xor
cmp
sbb
data16
orl
dec
adc
push
in
stos
mov
inc
stc
or
sbbl
cmpsl
push
push
inc
stc
sbb
mov
out
fsubrl
cmp
or
jmp
inc
hlt
push
pusha
pop
pop
xchg
sahf
xchg
pop
or
test
mov
cmp
bound
daa
lahf
xchg
gs
and
add
rorl
lods
aam
out
push
loope
sbbl
pop
cli
jnp
negl
cli
ret
sbbb
xor
jnp
test
inc
add
jae
add
dec
or
clc
lea
inc
add
add
inc
adc
mov
frstor
cmp
push
mov
aas
arpl
sbbb
cwtl
test
adc
je
mov
dec
add
mov
or
cmpl
inc
filds
dec
push
popa
std
sub
push
sub
lcall
test
or
or
dec
jbe
xor
adcb
jo
in
sub
pop
jg
roll
daa
jo
pop
mov
or
outsl
cwtl
dec
mov
notl
or
inc
div
idivb
fildl
sbb
adc
sbb
xchg
dec
lds
sti
and
cld
std
cli
outsl
out
adc
jae
aaa
jge
test
jbe
pop
ljmp
sub
aas
test
push
or
fildl
sbb
insl
mov
ret
test
aas
clc
lret
mov
sbb
sbb
adc
or
pushf
xchg
dec
test
outsb
out
sbb
cli
inc
cmp
andl
stos
icebp
adc
adc
push
enter
pop
jb
inc
enter
jb
pmulhuw
or
invd
pop
call
xchg
jle
dec
test
iret
in
loopne
test
adc
xchg
aad
mov
lods
or
jecxz
mov
insl
jle
add
inc
xor
notl
in
xor
and
mov
std
mov
add
scas
ss
test
pop
lock
ljmp
sub
daa
fcompl
xchg
pop
ret
xor
pop
add
sbb
inc
add
dec
inc
rcr
ss
inc
daa
mov
pop
out
rcrl
mov
outsl
ds
pop
popl
or
shll
add
pop
inc
sbb
add
xchg
push
roll
cmp
dec
mov
ljmp
outsl
rcrb
sub
hlt
cli
outsl
call
mov
dec
xchg
push
cli
rcll
std
int
in
mov
outsl
xchg
cld
inc
arpl
ja
or
xchg
xlat
pop
pop
push
push
mov
out
hlt
adc
mov
add
inc
inc
bound
add
pop
mov
decb
mov
jg
test
in
inc
roll
arpl
aas
ret
popf
jecxz
mov
fisttps
dec
or
push
or
scas
mov
xchg
jge
push
dec
sbb
or
sub
pop
out
scas
out
xchg
or
mov
adc
or
lds
xchg
in
test
jecxz
inc
jl
out
cmp
call
mov
incl
mov
mov
and
xchg
jg
insl
inc
push
loope
mov
add
stc
add
mov
out
fwait
dec
leave
mov
lock
mov
push
clc
jmp
xchg
lea
sbb
incl
cli
jnp
sbb
pop
or
xor
ljmp
xchg
mov
push
je
push
jge
repnz
das
mov
fbld
outsl
or
popa
loop
add
loopne
pop
aaa
add
lds
in
test
pop
jo
pop
mov
shll
mov
mov
leave
or
test
in
mov
or
sub
out
or
inc
mov
test
call
loope
xchg
dec
cs
popa
loop
in
xchg
ret
cmpsl
scas
sub
sub
ret
insb
in
push
push
stos
inc
lods
pop
dec
fcmovnu
add
dec
lock
mov
mov
push
sub
add
jp
pop
testl
sar
sbb
cmpl
cmp
xchg
add
shll
arpl
insb
lock
dec
sub
push
adc
out
addl
or
mov
or
cmp
adc
jp
push
cmp
jl
jg
mov
cld
scas
sti
movsb
aas
mov
testl
rcll
dec
add
sbb
sbb
xor
mov
ss
push
and
mov
sub
test
pop
incb
sbb
popa
dec
add
faddl
add
lods
dec
stc
inc
mov
xchg
sti
js
ret
jecxz
add
outsl
lahf
push
mov
jmp
or
out
leave
jno
fsubr
lret
xor
bound
mov
inc
xor
add
popa
outsl
sti
or
lds
add
and
xor
pop
sarl
ds
cmpsl
add
pop
mov
fs
mov
out
test
in
sti
insb
dec
in
add
inc
xor
aaa
pop
mov
int
fisttpl
inc
fs
xor
pop
ljmp
repz
inc
sub
gs
mov
outsl
pushl
add
lea
arpl
mov
shlb
jge
das
in
iret
xchg
jle
in
dec
add
in
push
outsl
push
jmp
or
inc
insl
dec
mov
pop
icebp
sbb
push
mov
lods
push
lea
lret
jmp
filds
gs
mov
mov
xor
out
in
add
pop
and
jmp
js
outsl
cs
mov
pop
out
aas
fildl
mov
stc
adc
ljmp
sar
mov
mov
out
in
ret
mov
icebp
bound
stos
inc
push
push
xor
pop
clc
aas
test
mov
sub
pop
and
out
add
in
aas
sahf
lcall
mov
mov
shll
test
jge
or
dec
xor
and
int
leave
mov
int3
pop
icebp
aas
addr16
mov
ret
adc
and
shrl
mov
in
ljmp
lss
or
jmp
pop
in
mov
jae
aas
adc
jnp
popf
jl
mov
sub
loope
pop
and
enter
int
or
in
add
push
sub
arpl
test
mov
fcompl
bound
xor
pop
out
pop
sbb
int
sti
roll
mov
insb
jo
and
rorb
and
lods
in
std
arpl
rcrl
gs
push
inc
popa
stos
ret
ficomps
pop
idivb
pop
incb
out
movsb
or
adc
inc
cli
pop
out
and
ljmp
pop
push
das
dec
xor
pop
es
insb
pusha
or
mov
call
in
test
mov
shl
pop
mov
fmull
and
rorl
loope
xchg
sub
xorb
bound
ret
cli
pop
mov
sti
sbb
insl
iret
shr
repnz
int
call
addr16
mov
outsl
pop
out
mov
pop
mov
inc
inc
lahf
cltd
stos
in
out
int
xchg
add
mov
enter
jge
lret
pop
inc
mov
dec
movswl
cli
addr16
mov
adc
or
fwait
add
ret
ja
and
lods
outsb
cs
mov
pop
pushf
pop
stos
fidivl
ds
in
xor
jo
and
lock
inc
jle
ljmp
add
sbb
dec
hlt
out
mov
std
xor
lret
aam
leave
dec
xchg
insl
xchg
imull
mov
mov
jg
std
in
pop
loopne
shl
addr16
lods
sub
lock
add
dec
fmull
lods
jns
pop
push
test
add
pop
cld
mov
stc
popa
ds
movsl
in
std
ja
lret
outsl
xchg
mull
push
nop
outsb
pop
cli
sahf
push
xchg
mov
in
cmp
sti
add
fwait
nop
cmc
adc
aas
fwait
mov
xchg
adc
sub
add
rcrl
pop
shlb
lret
add
mov
decb
jp
jmp
jmp
arpl
push
jg
fistpll
movsb
decl
mov
dec
cmpsb
add
xchg
test
pusha
pop
jmp
xlat
loope
mulb
add
jne
sbb
mulb
adc
sahf
insl
mov
cmc
dec
cld
and
mov
aas
mov
arpl
sub
sub
insl
scas
sub
lock
mulb
cli
sub
cmp
cli
out
xor
repz
sti
mov
into
and
fnstcw
fsincos
pop
hlt
pop
mov
mov
sarl
push
mov
mov
fbld
add
mov
roll
inc
dec
jmp
push
std
sub
pop
adc
push
dec
movsl
cmpb
sbb
xcrypt-cbc
cmpsl
xchg
cli
pop
loopne
mov
sbb
inc
push
sti
inc
sbb
push
call
outsl
sbb
fisttpl
jmp
pop
push
ljmp
xchg
push
dec
or
lret
and
push
lcall
push
arpl
push
mov
dec
sbb
push
cmp
mov
into
jmp
cli
push
incl
out
sti
test
fstp
push
sub
gs
jg
lods
pop
in
ds
inc
pop
xchg
mov
into
faddl
jmp
stos
inc
das
add
sub
lahf
es
push
mov
xrelease
xchg
sbb
or
es
adc
jmp
add
mov
cmpl
ds
xchg
xchg
push
mov
xor
mov
jo
stc
adc
loop
test
orl
sarl
xchg
mov
aaa
ljmp
dec
jp
add
out
imul
jnp
divl
mov
cmp
or
cld
inc
jl
push
and
arpl
xchg
fcmovbe
or
lods
incw
ret
jecxz
loope
sti
xchg
push
shl
ret
addl
addl
add
inc
jne
fists
mov
pop
jnp
add
fdivrs
push
xchg
mov
sarb
clc
push
xchg
push
add
pop
push
mov
inc
add
mov
or
call
or
inc
push
xchg
inc
jle
aaa
insl
add
lock
inc
jo
inc
mov
pop
scas
sti
repz
scas
inc
pop
mov
fildll
cmpb
adc
mov
enter
es
sub
call
shlb
xchg
xor
sub
xor
pop
or
stc
push
je
cmc
sbb
push
jnp
andb
sbb
ja
aam
rclb
sbb
stc
and
outsb
out
adc
xor
roll
mul
or
mov
in
jno
int
int3
imul
pop
pop
and
mov
and
push
fsub
stos
cmp
fldt
cmc
push
xchg
cld
push
shl
push
push
mov
sbb
cli
and
or
fnstsw
pushf
mov
adc
mov
orl
push
insl
push
xchg
add
push
mov
add
mov
lock
jno
mov
add
mov
fwait
or
idiv
mov
jecxz
xorl
std
fwait
sbb
mov
push
jge
fimuls
xchg
jge
outsl
and
or
xor
pop
xchg
mov
popf
add
jns
lahf
dec
fistps
inc
lock
movsb
loope
add
aaa
mov
jne
outsl
inc
pop
outsl
and
ficompl
mov
adc
enter
mov
popa
stos
mov
mov
mov
pushf
stc
gs
dec
push
gs
add
pop
add
jmp
xchg
push
xor
in
or
xchg
cmp
incl
arpl
add
mov
mov
xchg
mov
call
lock
mov
push
test
arpl
arpl
fbld
dec
ror
push
push
loope
add
xchg
cli
xor
pop
inc
ja
test
mov
int
clc
neg
std
sub
rcll
nop
or
sti
scas
jbe
xor
mov
clc
xor
dec
pop
mov
pop
in
addr16
stc
das
pop
or
mov
std
jae
jns
fcomps
mov
pushf
iret
fdivs
loop
sbb
inc
sbb
add
xchg
lea
call
icebp
out
popa
out
lahf
push
jecxz
mov
fistpl
jnp
insl
insb
push
in
jmp
xchg
das
push
rclb
ja
inc
pop
lock
arpl
xchg
fstpt
insb
inc
push
sub
insb
add
jmp
iret
sub
test
dec
dec
dec
lock
or
dec
sub
push
jb
jge
and
jbe
pop
and
das
je
sbbb
add
in
xlat
out
loopne
inc
jecxz
sub
ja
lea
push
dec
inc
lcall
and
stc
stc
xchg
fcoml
add
mov
psubsw
sbb
push
mov
push
mov
insb
and
push
sbb
inc
push
cmc
imul
iret
in
mov
pop
add
and
push
mov
pop
idivl
imul
insl
das
outsb
daa
sbb
leave
enter
popa
xchg
add
or
or
and
jbe
mov
xchg
or
outsl
fsub
enter
lret
or
inc
les
lds
jl
mov
sti
sub
clc
cmp
outsl
mov
cmpb
dec
jnp
rolb
or
sbb
mov
or
mov
arpl
fldl
jecxz
sbb
or
popa
lock
push
lock
push
mov
mov
out
or
add
xor
test
sbb
dec
or
test
test
pop
inc
jo
popa
jp
fstpl
dec
sbb
cld
insb
repz
push
cld
std
out
jle
clc
pushf
andl
mov
mov
js
aam
adc
daa
push
pop
cmp
cltd
das
or
in
mov
mov
sub
call
rorb
test
lds
std
leave
inc
jg
jmp
sbb
sub
gs
addl
sbbb
mov
mov
add
jg
or
sti
jmp
add
std
jae
rep
out
sbb
dec
push
push
clc
lret
dec
dec
in
stc
call
cltd
in
push
jecxz
mov
clc
cld
test
jae
movsl
xorb
push
dec
adc
negb
pop
mov
imul
xor
loop
inc
iret
jge
jb
sbb
jp
or
xchg
or
add
mov
jb
movsb
loope
aad
or
insl
std
outsl
pop
adc
xchg
jle
cld
in
mov
inc
in
mov
in
in
fadds
jo
mov
mov
add
add
cmp
pop
push
fidivs
push
jno
mov
adc
out
int
scas
mov
jns
mov
ret
adc
out
fldt
lcall
pop
arpl
xchg
out
and
out
fidivrs
out
xchg
push
jno
jle
push
inc
pop
adc
mov
leave
jae
je
jbe
fdivl
lret
cmc
jne
and
jne
ja
addr16
push
push
je
lret
jae
mov
out
jno
jae
jne
xchg
lret
in
je
jo
jb
lods
je
ss
mov
nop
cltd
fwait
jb
cmpsb
imul
adc
jb
fs
shrl
out
jae
adc
outsb
scas
xchg
lret
in
insb
jae
mov
std
ja
mov
lods
js
jne
ja
js
lret
in
lret
jp
jns
jbe
jne
cs
fistpl
adc
jnp
ja
jns
jp
xor
mov
sub
shll
xlat
in
dec
shll
jnp
insl
mov
arpl
jp
sarl
leave
jns
ss
shll
mov
xchg
lea
ret
leave
adc
ja
pop
fnstenv
mov
jno
cld
pushl
jbe
xchg
int
pop
jne
cmp
pop
je
fwait
cmpsb
insl
adcb
mov
insb
rorl
adc
xchg
imul
inc
arpl
jns
mov
dec
jae
add
add
dec
outsb
xor
dec
push
jne
jbe
ss
xor
ja
or
je
scas
jne
das
mov
jbe
xor
xorl
sbb
sub
xlat
pop
scas
dec
add
jecxz
add
dec
pop
jns
lods
push
jne
mov
pop
daa
push
and
xchg
dec
mov
push
iret
imul
or
jecxz
negl
sbb
dec
or
xchg
jbe
sahf
gs
xorl
das
jb
fldenv
imul
adc
ja
in
jno
stos
daa
arpl
fs
jne
out
and
js
mov
jae
and
or
pop
jg
cmp
lods
pop
push
imul
adc
arpl
ja
jg
jb
shrl
fabs
je
cmc
jbe
jne
push
mov
jbe
cmp
adc
je
lret
in
loope
hlt
outsl
add
jne
mov
cmp
pop
test
lcall
mov
pop
shll
pusha
push
adc
daa
xor
push
rcll
clc
pop
in
lret
addr16
data16
mov
popf
mov
mov
jae
jbe
ja
jns
lret
in
or
jne
ja
js
jp
sahf
pop
add
jae
jp
out
jl
in
mov
cmp
sub
and
popf
cmpsb
imul
imul
sub
dec
jbe
lret
js
mov
mov
xchg
mov
lods
jnp
xor
xlat
lret
in
mov
jo
jae
je
dec
mov
xchg
jbe
jno,pt
pop
insl
cmpsb
cmp
xor
pushf
jno
pop
arpl
pop
addr16
dec
ss
add
or
pop
rcll
jmp
lcall
ja
cmpsb
imul
lcall
jne
out
ja
jg
lret
sti
push
outsl
bound
inc
pusha
arpl
push
arpl
cmp
push
insb
inc
outsl
addr16
pushl
ja
pusha
std
int
push
pop
imul
cld
lods
std
push
pop
pop
popa
gs
push
aas
arpl
cmp
inc
bound
fs
daa
dec
jle
jmp
outsb
pop
pop
jb
inc
gs
cmp
clc
inc
pop
addr16
pusha
pop
and
incb
outsl
dec
imul
bound
out
jbe
dec
outsl
or
cmp
insb
fistpll
pop
push
popa
push
lahf
cmp
aas
adc
imul
arpl
pop
outsl
insl
push
ds
incb
insb
fs
jb
push
jmp
pusha
inc
popa
pop
insl
cld
dec
push
fs
bound
cmp
jo
gs
insl
imul
insb
push
ljmp
mov
imul
mov
cld
inc
pop
outsl
cmp
cmp
jo
movsl
stc
negb
inc
push
pop
inc
ja
pop
outsb
jo
call
pushw
pop
addr16
push
sbb
insl
pop
pop
imul
std
xchg
lahf
pop
decl
pop
push
jb
je
push
mov
arpl
data16
inc
push
outsl
in
lret
pusha
pop
dec
imul
pop
or
out
inc
inc
push
out
in
push
pusha
sub
push
dec
neg
outsb
or
and
push
outsl
arpl
push
mov
inc
pop
imul
push
xor
jne
jnp
outsl
pop
push
popa
cmp
arpl
stc
js
inc
push
outsb
mov
or
ror
push
pop
pop
cmp
outsl
sahf
dec
pop
outsl
cmp
pop
pop
insb
jb
inc
fistl
outsl
jb
adc
push
fmull
in
inc
bound
cmp
lahf
outsb
cmp
std
mov
inc
jne
push
pop
arpl
outsl
push
insl
gs
mov
inc
dec
dec
sbb
insb
incl
sub
xorl
ffree
jb
pop
jb
ds
pop
out
imul
pop
push
insb
jbe
pop
or
decl
aaa
insb
leave
inc
add
cli
inc
mov
push
popa
imul
pushf
decl
pop
insl
pusha
inc
cmp
jb
push
push
out
ffreep
jne
pop
pop
inc
cmp
std
pop
mov
arpl
jno
push
js
push
sub
pushf
lahf
popa
addl
les
and
flds
sbb
pop
jnp
sbb
or
outsl
inc
scas
cmp
jns
dec
mov
test
fistps
ljmp
lock
dec
gs
data16
imul
push
outsb
fstp
dec
fs
inc
pop
inc
pop
bound
shlb
mov
mov
add
dec
xor
sub
push
xchg
xor
pusha
jecxz
out
or
cmp
loope
scas
jmp
pop
ja
adc
dec
pop
jo
or
push
sub
push
add
dec
popa
sbb
add
cmp
pop
aas
sub
cmp
jo
fisubrs
or
pop
dec
cmp
mov
popa
inc
inc
cmp
adc
fldt
sub
jbe
mov
push
xor
aaa
int3
std
push
scas
dec
pop
arpl
sahf
dec
cmpsb
cmp
sub
xchg
dec
pop
sub
ds
pop
jnp
cmp
fisubl
dec
pop
bound
mov
ds
daa
mov
jg
das
adc
pop
inc
inc
xor
pop
sub
cmp
dec
cmp
xchg
mov
inc
cs
daa
or
ja
mov
addr16
pushw
mov
addr16
fs
xchg
outsb
insb
sbb
hlt
in
ss
pusha
xchg
sar
adc
inc
push
pop
pop
pusha
push
push
inc
imul
pop
mov
inc
xchg
fs
addr16
std
pop
cld
movsl
shrb
xor
push
outsb
push
insl
mov
mov
mov
pop
js
dec
mov
inc
das
pop
es
insl
mov
sub
and
stos
mov
pop
out
dec
fs
mov
mov
daa
out
lahf
cmp
lods
sti
or
push
inc
imul
bound
ret
sub
cld
add
cmp
addr16
ds
in
pop
sub
mov
dec
cmp
dec
fwait
cli
cmp
daa
pop
and
pop
cmp
adc
cmp
cmp
pop
cli
aaa
mul
clc
cmp
cmp
sti
outsb
addr16
pop
pop
push
ret
aaa
mov
jge
dec
cmp
pop
xchg
aaa
sbb
pop
fs
cmp
cmp
bound
cmp
push
pop
push
test
pop
movlps
cmp
std
cmp
push
divb
sub
dec
jo
outsb
jb
cmp
add
es
cmp
jbe
insb
imul
mov
inc
dec
insl
pop
xchg
out
sbb
cmp
cmp
jg
push
dec
jae,pt
cmp
inc
cmp
repz
pop
push
popa
pop
jbe
test
cmp
pop
inc
cmp
pop
mov
ss
mov
cmp
and
popa
pop
pop
test
pop
bound
cmp
mov
ss
in
lea
mov
inc
mov
call
popf
pop
sub
adc
aas
outsb
jno
in
dec
cmp
cmp
sub
dec
sub
cmp
mov
sti
cld
pop
add
cs
cmp
cmp
add
icebp
add
pop
or
pop
jno
arpl
fldt
dec
cmp
pop
arpl
fildll
outsl
imul
cmp
aaa
cmp
cmc
cmp
aaa
negb
lcall
dec
fcoms
sub
or
dec
aas
cmp
xchg
repz
sub
cmp
in
in
lods
sub
popa
mov
cmp
push
ja
mov
in
add
cmp
pop
pop
pop
xchg
mov
sahf
cmc
and
incl
push
push
cld
add
pop
clc
mov
imul
cmp
aaa
sar
lock
loope
pop
cmp
bound
dec
sub
and
cld
inc
lahf
or
outsb
aad
cmp
mov
daa
sbb
dec
pusha
jo
addr16
mov
jmp
imul
outsl
cmp
cmp
inc
dec
inc
inc
inc
push
out
stc
adc
push
push
sbb
incb
xor
or
cmp
push
lods
push
mov
jne
inc
aaa
in
lcall
imul
sar
fsts
adc
ret
fcmovnbe
scas
fwait
push
cli
jecxz
dec
cld
mov
jno
popa
jmp
pusha
imul
sub
call
adc
or
jg
inc
jo
xor
pop
insb
push
ja
in
jg
pop
push
pop
inc
jo
inc
imul
add
test
imul
repnz
pusha
xor
pop
pop
jno
mov
fistps
imul
mov
mov
lret
add
mov
clc
pop
pop
outsl
lea
mov
dec
dec
sub
sbb
pop
mov
xchg
in
jae,pt
test
fsubrs
or
popa
outsl
jno
push
addr16
xchg
or
sti
dec
popa
insb
std
in
and
std
inc
aas
fwait
inc
inc
stc
clc
cld
pop
mov
add
sub
cld
mov
pushl
insl
sar
addr16
sti
or
sar
sub
clc
pop
cld
jae
lahf
push
daa
pop
xchg
jmp
jno
inc
adc
andb
inc
pop
cs
lret
pop
jnp
pop
mov
push
notl
lcall
clc
jl
imul
cmp
xchg
mov
sub
xchg
fidivl
or
jbe
jno
test
sti
int3
inc
dec
adc
pop
das
xchg
dec
insl
pop
pop
pop
fxch
aaa
pop
or
pop
mov
mov
loop
push
inc
outsb
aas
mov
ds
sti
dec
insb
cmp
and
sbb
ja
movsl
adc
cli
dec
fbld
push
pop
mov
push
mov
sbb
mov
push
push
stos
je
adc
inc
add
and
stc
or
push
sbb
test
push
lret
jno
mov
push
call
outsl
pop
insl
je
mov
repnz
insl
imul
lahf
dec
sbb
xchg
sbb
outsl
or
hlt
xchg
mov
dec
cmp
xchg
dec
pusha
aaa
sub
xchg
outsb
push
test
sti
arpl
push
cmc
outsl
arpl
lret
ljmp
in
mov
pop
test
and
pop
outsb
sbb
outsb
iret
jmp
repnz
iret
enter
lds
push
loopne
push
loope,pn
pusha
push
push
mov
sub
pop
sti
or
cmp
pushf
out
add
insb
inc
jmp
mov
das
sub
jp
and
inc
xlat
sbb
sbb
pop
daa
into
outsb
dec
outsl
lock
aas
inc
dec
dec
dec
inc
std
cli
mov
aad
mov
std
sub
addr16
les
mov
bound
adc
shrb
dec
outsl
push
xchg
bound
mov
pop
sub
and
addr16
sbb
xor
stos
mov
out
shll
fldenv
lahf
mov
in
mov
mov
shll
mov
push
cmp
mov
dec
dec
inc
pusha
pop
std
pop
insl
or
gs
push
ja
sub
loopne,pn
lods
dec
jle
imul
pop
test
xchg
adc
outsb
push
or
loop
jne
or
jno
jb
mov
mov
cmp
inc
aas
inc
mov
push
dec
pop
js
dec
std
push
or
dec
sbbl
popa
daa
xchg
push
aaa
mov
mov
pop
inc
roll
out
imul
cmp
daa
and
push
dec
dec
lahf
or
or
adc
xlat
pushl
dec
sbb
sbb
dec
dec
sub
sub
add
mov
push
fnsave
sub
outsb
xchg
das
insb
and
daa
sub
push
cmp
xorl
outsl
jo
aaa
sbb
pop
imul
or
loope
pop
jmp
inc
push
or
adc
aas
pop
std
outsb
decl
mov
jne
lret
pop
sub
sub
and
test
inc
lea
mov
sbb
imul
fistl
xor
pop
sub
and
add
add
imul
loopne
cmp
push
xchg
dec
add
mov
dec
sbb
mov
push
cs
add
imul
fildl
das
jae
es
pop
aaa
and
or
cmp
pop
mov
or
sub
inc
fwait
mov
aad
mov
pop
subl
pop
mov
test
cmp
and
pop
or
inc
data16
xchg
jg
fisubrl
imul
sub
and
sub
jno
xor
xor
jb
outsb
jnp
mov
push
js
sub
std
pop
ljmp
daa
das
sub
sbb
pop
outsw
pop
adc
pop
inc
pop
dec
outsb
push
dec
and
mov
dec
test
push
bound
sarl
stc
outsl
test
inc
or
aam
push
arpl
imul
test
push
push
sub
dec
sub
arpl
sbb
decl
xor
sub
jno
xor
sub
aaa
ret
xor
sub
mov
sbb
and
sub
inc
xor
shr
jb
push
xor
dec
mov
shl
pop
xor
arpl
sbb
or
rcrb
ret
push
std
pop
popf
jp
gs
dec
jae
xor
addr16
mov
cltd
lret
sbb
mov
cmp
sub
daa
and
sub
dec
and
sub
test
inc
lea
lds
sbb
xor
push
pop
das
sub
in
sbb
sub
repz
in
mov
cmp
inc
and
mov
repnz
xor
push
dec
cmc
pop
xor
sub
mov
negl
mov
mov
xchg
outsb
fistpl
pop
in
ja
sub
cs
sbb
push
pop
mov
push
scas
jo
cmp
movsl
or
or
dec
push
imul
pop
dec
dec
inc
pop
popa
arpl
imul
pusha
repz
aas
bound
outsb
xchg
sbb
cmp
lea
ja
jb
flds
jae
inc
lds
xor
mov
dec
cli
mov
int3
mov
fs
cmp
cmp
pop
scas
pop
xor
pop
inc
xchg
rcr
pop
cs
dec
arpl
cmp
sarl
sbb
popa
xor
mov
scas
cmc
inc
fnstsw
arpl
inc
fldcw
push
mov
fidivrs
pop
fs
mov
pop
pop
loopne
test
pop
pusha
dec
popa
jbe
pop
addr16
inc
ja
cmp
fldt
inc
xor
jo
rcl
shlb
aaa
outsl
adc
sub
fstps
outsl
dec
arpl
sub
imul
cmp
dec
popa
aas
cmp
xchg
outsl
xchg
mov
lea
ja
pop
out
outsb
cmp
inc
std
sub
xchg
daa
arpl
push
pop
sub
jge
jecxz
xchg
ljmp
xchg
inc
ds
inc
inc
ret
xor
dec
dec
dec
dec
dec
dec
dec
push
push
dec
push
push
iret
ficomps
pop
dec
bound
das
cmp
pop
insl
roll
outsl
lds
je
inc
cmp
cmp
pop
aas
dec
out
insb
outsl
mov
mov
push
pop
cld
das
cmc
loopne
addr16
cmp
dec
jne
pop
rcrl
sbb
push
inc
jecxz
pop
pop
pop
mov
lods
outsl
cmp
cmp
dec
dec
insl
lock
sub
sub
cmp
enter
add
cmp
cmp
push
incl
dec
je
sub
jae
inc
push
xor
jne
ds
ds
inc
sub
imul
or
movsl
add
aaa
dec
inc
pop
cmp
mov
sub
jb
test
push
aas
sub
stos
fucomi
iret
outsl
cmp
gs
andb
fldt
aad
movsl
xchg
xchg
imul
mov
andl
daa
std
out
jmp
incb
xor
mov
shll
sub
push
sub
rcll
mov
sub
jns
pop
and
sub
jae
cmp
or
insl
lahf
dec
in
imul
jb
loopne
dec
icebp
cmp
xor
out
popf
dec
add
je
in
mov
sub
fistpl
push
scas
add
push
bound
pop
arpl
outsl
jg
pop
movsl
outsb
jne
adc
fnstcw
insl
cld
mov
pop
sub
sub
test
sbb
xchg
pusha
pop
std
or
and
mov
add
dec
daa
stos
xor
jno
lret
jg
pop
imul
pop
test
cmpsb
mov
stc
incl
sub
sub
sub
sub
sub
sub
sub
mov
lcall
sub
sub
sub
repz
add
adc
std
ljmp
fwait
das
test
mov
sub
xor
push
das
pop
mov
divb
xchg
sub
sub
xor
sbb
and
ss
xor
jno
xchg
fwait
sub
jmp
xor
das
icebp
sub
xor
xor
sub
xor
jg
lahf
xor
pop
jmp
enter
cli
xor
xor
xor
xor
push
xor
stos
ljmp
mov
xlat
xor
xor
xor
das
add
xor
and
xor
xor
inc
xor
push
pushl
xor
push
xor
xor
hlt
xor
xor
xor
xor
mov
xor
ss
jp
jl
cwtl
xor
xor
call
pop
xor
jle
leave
xor
aaa
out
sub
xor
cmp
push
das
adc
aaa
iret
inc
inc
aaa
cmp
das
xchg
xchg
push
sarb
cmpsl
cmp
cmp
sbb
pushl
sbb
inc
sub
dec
sub
sub
jnp
xchg
lea
lcall
sub
shrb
out
call
sub
sub
and
ljmp
mov
xchg
sub
sub
shrb
fsubrs
or
cvttps2pi
sbb
mov
inc
cs
sub
sub
insl
imul
mov
clc
sub
das
jge
fnstenv
and
aaa
xor
das
add
xor
sbbb
jg
shlb
fdivs
fdivl
ljmp
xor
xor
jnp
mov
shll
jg
pushl
lret
xor
xlat
xor
sti
xor
xor
pop
xor
pushl
cwtl
xor
aaa
repnz
xor
cmp
insl
cmp
xchg
xor
cmp
ss
cmp
fildll
sub
push
cmp
mov
cmp
popf
and
out
cmp
cmp
aaa
mov
mov
gs
cmp
xor
cmp
cmp
cmp
sub
push
aas
std
push
or
mov
xchg
sub
sub
ljmp
in
sub
sub
sub
sahf
sub
sub
repnz
das
test
sub
pop
sub
shrl
loop,pn
add
push
xor
inc
das
pop
jns,pn
mov
pushf
sub
iret
sub
xor
add
or
jecxz
jne
aaa
cs
xor
pop
stos
xor
xor
shlb
cmpsb
xor
cmp
sbbb
push
sub
outsb
xor
xor
xor
sub
clc
sbb
sub
xor
das
decb
pushl
outsb
pushl
inc
xor
xor
xor
xor
xor
sbb
mov
aaa
xor
test
out
clc
jmp
push
xor
outsb
in
xor
lea
sbb
ret
sbb
cmpl
xor
sbb
cmp
aaa
incl
xor
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
cmp
aaa
in
cmp
cmp
cli
sub
sbb
adc
mov
jg
sub
sub
dec
sub
popa
sub
test
loope
stc
sub
add
mov
inc
sub
sub
mov
pop
sub
aaa
cld
sub
or
adc
adc
and
or
xchg
hlt
sub
imul
xchg
cs
lret
push
sub
push
jae,pn
jl
xchg
sub
int
iret
xor
loope
cs
stos
lock
jo
nop
cs
xor
cmp
clc
fstpt
divl
or
xor
bound
xchg
xor
cli
outsl
pop
int3
das
lock
xor
and
pop
das
cld
pop
fidivs
xchg
aaa
stos
xor
xor
xor
das
pop
cli
ljmp
and
xor
jle
xchg
xor
mov
or
mov
xor
xor
int3
ss
xor
cmp
pop
ljmp
ss
cmp
cmp
cmp
cmpl
pushf
cmp
shll
cmp
xor
loope
ljmp
cld
sub
lcall
sub
sub
sub
sub
pop
aad
insb
sub
sub
cs
sub
aaa
mov
bound
cmp
aaa
mov
fdivrs
fidivl
out
out
cmp
ss
call
sbb
fistpll
aaa
inc
cmp
xchg
xor
cli
or
cmp
or
adc
ss
std
mov
cmp
cmp
cmp
cmp
cmp
cmp
mov
ljmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
orw
cmp
cmp
or
mov
cvtps2pi
sub
sub
sub
sub
xor
or
or
sub
js
sub
sub
popf
xor
test
call
add
xchg
popa
inc
sub
push
sub
mov
test
sub
sub
jnp
sub
sub
in
call
sub
push
das
jno
jns
sub
stos
sarb
sub
dec
xchg
fidivrs
cmp
aas
xor
xor
sub
test
ljmp
das
loope
ljmp
pop
nop
shlb
push
outsl
sub
xchg
cltd
lds
pop
jmp
fs
fmuls
and
add
fdivrl
outsb
je
insb
imul
dec
push
push
test
dec
dec
pop
setle
incb
je
popa
das
dec
imul
push
imul
outsl
ja
push
push
push
outsl
popa
insl
sbb
arpl
rep
adc
addr16
cs
in
out
mov
fs
dec
add
and
and
in
std
jns
je
jbe
adc
outsb
imul
insl
fstpt
sub
popa
bound
add
jbe
outsl
jo
pop
sti
in
fstpt
fmull
pop
push
or
mov
fnstenv
pop
jns
jo
adc
mov
std
push
push
push
jb
jns
xor
xor
sub
pop
mov
gs
add
fmull
aas
jb
std
dec
mov
jae
outsl
outsb
imul
adc
push
jae
sbb
in
in
jbe
imul
push
jg
aas
imul
bound
jo
inc
gs
popa
push
ds
push
pop
inc
js
adc
pop
data16
jns
dec
jmp
outsb
fs
imul
ret
fadds
inc
xor
jmp
mov
push
inc
mov
mov
lods
inc
jb
mov
cmovno
or
imul
outsb
fnstcw
popa
dec
pcmpeqw
sbb
dec
jae
xor
jae
or
jnp
lds
movd
or
in
add
xchg
out
ret
insl
jbe
inc
jmp
outsl
dec
push
mov
mov
fs
daa
push
sti
imul
jo
mov
insb
sti
imul
dec
insl
imul
pop
xor
or
add
jae
cmp
cmp
mov
addr16
push
xor
push
aad
stos
add
sbb
adc
add
xor
mov
scas
jmp
adc
push
outsl
fst
lods
mov
mov
add
mov
out
out
fucomi
ja
outsl
add
aas
mov
jle
fstpl
add
push
add
sldt
lcall
ss
ja
pusha
inc
repz
push
add
outsb
adc
cmp
cmpsb
mov
psubd
and
lock
push
or
push
jnp
add
mov
add
or
pusha
inc
or
add
mov
jg
add
std
add
cmpsl
cmpsl
add
std
out
sbb
int3
mov
cmp
xlat
mov
sbb
jmp
aas
cmp
lcall
dec
and
lret
cmpsb
ja
mov
push
dec
out
cmp
add
jnp
add
adcl
mov
je
enter
rorb
je
call
and
adc
jecxz
lods
add
xchg
or
pop
push
add
or
add
push
sub
stos
mov
pusha
inc
add
call
add
rolb
nop
add
add
and
sub
sub
cltd
shlb
jns
add
aas
repz
push
sbb
adc
xchg
add
add
jg
sub
test
add
mov
add
add
add
add
jbe
sub
add
orb
fiadds
add
ljmp
mov
xor
inc
jb
popa
je
inc
imul
popa
jo
imul
gs
pushw
push
or
sarb
jne
push
and
push
imul
inc
gs
push
imul
pop
mov
ja
jo
insb
outsl
jae
dec
popa
outsb
fs
neg
pop
inc
int
jae
outsl
jbe
mov
js
and
jo
dec
popa
insl
inc
inc
gs
mov
sbb
test
push
fsts
cmp
outsb
or
mov
jne
outsl
dec
push
imul
scas
adc
dec
outsb
outsw
adc
add
fisubrs
jae
cpuid
pushf
insb
adc
mov
insl
jb
outsb
xor
jns
leave
data16
and
gs
jnp
mov
addr16
push
xchg
jae
outsl
outsb
mov
jle
fs
dec
outsl
popa
fs
out
jg
mov
pop
sbb
fldl
je
adc
or
mov
icebp
gs
outsl
outsl
insb
or
pop
adc
lock
outsl
mov
inc
mov
sub
notb
xor
push
jge
popf
add
lea
bound
sbb
ljmp
lret
test
mov
jmp
adc
pop
adc
pop
or
pop
or
call
sbb
movsl
adc
adc
mov
mov
decl
outsl
lret
mov
adc
add
mov
jp
call
add
or
and
incl
sbb
ljmp
or
rep
out
sub
push
push
jns
std
dec
out
ud0
inc
ss
fildl
pop
xchg
sbb
insl
outsb
dec
cmp
lcall
sbb
xchg
lock
push
or
icebp
adc
add
mov
add
pop
inc
add
mov
pop
mov
mov
mov
adc
or
xchg
outsl
fildl
push
andl
sar
or
push
mov
test
mov
add
sub
xor
test
inc
std
jno
jo
gs
fbstp
pop
push
pop
cmp
pop
je
movzbl
insw
mov
jecxz
pop
or
push
sub
sbb
fst
lret
jb
addr16
in
jecxz
sti
arpl
outsb
or
jo
je
sbb
push
xchg
or
ja
insb
insb
or
insl
bound
scas
mov
jb
jb
jbe
push
sbb
pop
push
fimuls
outsb
arpl
inc
inc
js
inc
jb
pop
fidivrs
jo
outsb
je
je
insl
jbe
out
out
inc
arpl
push
jae
sbb
cmp
push
xor
ret
add
inc
outsb
push
andb
xor
inc
jo
pop
sarl
mov
add
out
inc
add
jle
jne
mov
movsb
mov
fs
dec
fs
xchg
mov
pop
cmp
imul
imul
stos
inc
fs
int
or
ret
fistl
mov
mov
pushf
xor
rolb
jae
xor
scas
push
push
sub
jb
popa
inc
sbb
jo
or
push
outsb
or
mov
das
fnstenv
inc
xchg
jns
add
inc
bound
jg
fistpll
push
or
add
add
add
or
adc
add
add
mov
dec
aaa
fadds
lock
add
inc
add
add
xor
in
jnp
cwtl
sbb
sub
xchg
or
js
rcr
and
ret
mov
push
cs
cmpl
and
xor
outsl
add
jb
popa
push
in
xchg
add
cs
and
lds
pop
daa
out
mov
jae
or
rep
and
add
add
loopne
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
