daa
in
dec
mov
ret
nop
mov
mov
push
call
movl
pop
sbb
outsb
sbb
and
add
or
mov
pusha
fnsave
add
jmp
fpatan
addr16
ud1
inc
add
leave
test
stc
push
mov
fidivrs
call
add
push
mov
jbe
mov
into
or
lea
in
xchg
mov
add
add
pop
jo
mov
testl
pop
lahf
rcrb
add
inc
or
enter
je
mov
push
add
or
in
xor
mov
add
add
xchg
shr
or
imulb
dec
jne
mov
pop
shr
rol
or
mov
push
ds
push
push
mov
xchg
push
or
or
rclb
inc
jo
data16
mov
dec
jne
pop
pop
pop
xor
pop
ret
sbb
adc
fisubrs
push
push
call
sub
add
cmp
add
add
mov
divb
sbb
lea
shr
push
push
xor
outsl
or
add
dec
cmp
or
cmpw
jne
lret
and
pop
cmp
sbb
neg
add
or
sub
push
in
outsl
out
mov
mov
and
push
mov
pop
ss
lcall
add
mov
test
push
add
pop
lock
jnp
push
sub
rclb
and
or
je
inc
mov
mov
mov
ja
mov
mov
mov
mov
cmp
jne
test
mov
aaa
insb
pop
or
cmpsb
push
outsl
add
adc
aaa
ret
in
jmp
sbb
sbb
xor
dec
int
mov
add
cmp
mov
jl
mov
idivb
lea
adc
add
stos
stos
stos
push
pop
push
lret
sbb
or
inc
push
adc
outsb
cmp
adc
and
push
or
pop
cmp
les
mov
negb
movb
lcall
fistl
int3
into
mov
mov
or
shl
add
inc
mov
fbstp
repnz
not
sub
lea
mov
push
mov
cld
shr
rep
pop
push
and
mov
movsb
dec
out
fnstsw
and
push
push
lea
mov
sbb
pop
ja
jno
inc
lret
sbb
push
sbb
jb
xor
and
jmp
dec
and
fldcw
lahf
adc
and
jnp
cmp
sub
mov
push
mov
dec
sub
cs
das
jnp
inc
push
jns
lea
mov
popa
orl
sub
xchg
test
push
push
imul
add
je
mov
mov
jb
add
std
mov
dec
cmpb
jne
adc
push
adc
fst
popa
jle
nop
ret
int
pushf
push
pop
mov
jmp
cmp
push
adc
jle
pop
push
push
leave
push
sub
adc
mov
push
mov
dec
add
ret
or
sbb
add
dec
mov
sbb
subb
xor
fwait
imul
or
pop
in
lea
fwait
pop
or
or
stos
push
lret
or
push
push
inc
sahf
mov
dec
and
add
xor
mov
jecxz
mov
aaa
adc
xor
push
mov
push
add
add
pop
mov
mov
push
xor
jl
mov
rcll
add
je
xor
ret
or
dec
jp
jecxz
mov
hlt
insb
ret
bound
xchg
sub
repz
sbb
push
or
adc
push
cli
sub
or
push
mov
xor
jo
push
push
sub
xor
xor
enter
cmp
repz
add
imulb
inc
lock
fcompl
jmp
push
aad
in
mov
xchg
xor
add
inc
incl
enter
lea
push
push
dec
es
or
mov
test
sub
xchg
push
dec
cmp
pop
push
adc
insb
bound
push
cwtl
loop
or
pop
push
push
cmp
and
js
push
cmp
add
push
add
in
bound
adc
in
inc
xlat
jl
pop
jp
push
push
adcl
lret
fnstcw
repnz
add
or
fcompl
sub
dec
iret
xor
adc
pop
hlt
mov
mov
cmpsb
fnstenv
rclb
inc
sub
or
decl
push
and
or
lcall
fs
test
popa
mov
lahf
mov
sbb
mov
gs
popa
xlat
fs
cmp
xchg
push
push
sub
cmp
push
mov
cwtl
mov
inc
push
adc
dec
int
rcll
in
mov
dec
push
mov
pop
add
xor
fildl
mov
sub
dec
add
mov
cli
mov
push
xor
sar
cld
lret
pusha
imul
add
sbb
outsl
out
push
add
cmpb
jne
test
jle
push
fcmovnu
fcomi
dec
jns
add
push
mov
mov
cld
in
add
out
or
jmp
and
mov
cmp
nop
mov
mov
sbb
lea
test
out
mov
sbb
sub
ljmp
cmp
lea
shl
lret
pop
rcr
into
cmp
arpl
ja
mov
pop
cmp
int
jb
inc
out
pop
aas
sub
sub
bound
insl
scas
lds
push
adc
out
orl
les
iret
push
lret
shll
pop
rclb
cmpsb
xchg
push
sbb
xchg
cmp
push
scas
scas
or
test
pusha
sub
mov
pusha
xchg
inc
sbb
shr
push
lahf
lds
rorb
push
push
lea
das
cld
add
push
shl
gs
test
pusha
fcomps
jmp
je
mov
cltd
mov
jmp
and
pop
rcl
inc
push
sub
xchg
cltd
push
push
dec
adc
and
push
inc
fsubs
imul
lea
adc
data16
and
inc
pop
mov
lea
loope
lea
sub
cmp
test
fsub
mov
mov
xor
loop
or
lret
xchg
sbb
xor
pop
and
add
pop
jg
push
push
push
fnstenv
or
aam
es
dec
inc
popl
lcall
mov
dec
xchg
fistpl
sbb
inc
sbb
adc
sbb
sbb
sub
pop
pop
mov
sbb
xchg
or
mov
mov
nop
inc
test
sub
icebp
xlat
js
scas
jno
push
pop
push
xor
mov
push
and
or
sub
outsb
adc
adc
adc
sub
xchg
add
or
outsb
jo
je
or
aad
js
test
sub
imul
sub
sbb
mov
movsb
sbb
sub
in
push
push
xchg
adc
xchg
rcrl
cmp
popa
in
add
add
sbb
pusha
xorb
sbb
not
cmpl
pop
add
scas
mov
cli
or
or
jmp
and
rclb
sub
adc
cmpsb
das
adc
pop
xor
fwait
scas
sbb
aaa
sbb
mov
mov
xor
data16
mov
mov
inc
cmc
out
stos
jae
cmpl
sbb
jne
inc
add
out
add
mov
loopne
xor
inc
ret
and
xchg
and
mov
or
movl
dec
shrb
ljmp
roll
inc
outsl
or
add
inc
dec
jmp
popf
fsubrs
jl
add
addr16
sbb
das
ss
rorl
push
adc
fcompl
cltd
jo
mov
test
or
pop
xchg
dec
movhps
sbb
outsb
movsb
fisttps
pop
cs
sub
inc
mov
add
push
and
sbbb
scas
or
push
ret
leave
or
pop
leave
cmp
add
sub
push
sub
add
insb
popf
mov
outsb
add
adc
ret
or
shlb
arpl
inc
pop
or
pusha
push
cmp
sbb
sbb
cvtps2pi
clc
jbe
push
push
mov
mov
je
or
xor
gs
int3
sbb
aam
cmp
pop
dec
into
jl
mov
inc
inc
pop
push
or
mov
dec
add
or
into
js
fs
out
lret
adc
push
outsl
or
aaa
in
push
jp
ficoml
mov
addb
push
xchg
push
dec
and
fld
jbe
pop
js
pusha
dec
mov
dec
or
lock
pop
outsl
sub
push
loop
movsl
sti
pop
cmpsb
mov
push
push
js
and
pop
test
test
and
gs
pop
add
xchg
sbb
insb
outsb
fcompl
lock
pushf
mov
mov
ret
in
int3
shll
jbe
mov
dec
add
adc
pushl
out
inc
mov
js
push
fnstsw
lock
dec
push
push
and
jo
int3
notl
push
jp
fld
pusha
sbb
mov
sbbl
and
jae
je
lock
pusha
cmc
adc
cmpl
push
cmp
insb
insb
mov
jge
insb
mov
shl
and
sub
inc
push
and
cmp
push
sub
mov
and
or
aaa
fisubrl
jmp
sbb
mov
incl
xor
pop
mov
dec
adc
js
add
and
shll
inc
cltd
sub
and
clc
out
sbb
fstps
sub
je
pop
aas
popf
jnp
test
fisubs
adc
jbe
or
xor
testb
movups
repnz
wrpkru
or
jbe
mov
xor
rcll
and
mov
popa
and
fnclex
test
jmp
push
fchs
push
dec
hlt
pusha
clc
jbe
lahf
cmpsb
gs
mov
call
sbb
xchg
mov
and
pop
fwait
xchg
mov
inc
imul
dec
xchg
addr16
inc
mov
dec
sahf
cmpl
jns
sbb
and
xor
or
jl
je
push
and
and
inc
push
repnz
adc
iret
inc
leave
xor
and
test
sub
dec
adc
outsb
xchg
lret
sbb
adc
xchg
jae
jbe
push
in
aad
pop
and
inc
push
enter
add
sub
enter
dec
lock
outsb
mov
inc
xchg
out
sub
mov
into
popf
mov
inc
cmp
xor
pushf
loopne
iret
verw
jo
fs
inc
nop
je
push
mov
adc
dec
pop
xor
cltd
sbb
sbb
xlat
add
cmpsb
add
mov
push
fmull
pop
push
sub
inc
call
mov
xor
jb
pop
jns
cmc
pusha
inc
cmp
jne
ret
ds
xor
add
sbb
outsb
aam
push
push
adc
cmp
xchg
or
push
jl
ss
out
add
xor
in
popa
mov
arpl
sub
xchg
fisubrl
ret
cmp
ret
or
faddl
dec
xor
push
adc
sti
outsl
push
adc
adcl
lret
pop
ret
sub
push
xor
insb
sub
fists
pushf
jne
add
jne
out
ljmp
in
push
ficoml
pop
aaa
and
cs
adc
ljmp
xchg
sbb
jae
adc
or
rorb
or
sbb
popf
xchg
or
xor
shll
outsb
mov
fmull
push
int
clc
orb
or
movsl
jp
pop
or
sbb
xor
rcrb
xor
push
lock
sbb
fldl
aad
adc
call
lds
jmp
and
add
xor
jae
daa
sbb
push
icebp
pop
pop
cltd
idiv
mov
mov
add
mov
cmp
jb
pop
and
sub
add
inc
cmp
jg
arpl
mov
pop
add
in
addr16
fcoml
and
int3
enter
and
and
and
lods
test
mov
pushf
cwtl
xchg
nop
and
and
mov
and
jl
je
and
and
insb
push
and
pop
pop
push
dec
and
and
dec
inc
inc
cmp
and
and
xor
sub
and
and
and
sbb
and
and
adc
or
and
and
add
cld
imul
inc
clc
hlt
cmp
and
out
mov
inc
test
mov
and
pushf
mov
and
lods
mov
fadds
inc
sahf
inc
mov
dec
inc
inc
rcl
add
mov
in
in
add
adc
jb
sub
adc
pop
adc
sbb
aad
scas
jmp
and
nop
pusha
popf
loope
cmpsl
pop
add
ret
push
xor
add
in
insb
cwtl
inc
andl
push
xor
cmp
pop
cld
ljmp
inc
orl
push
in
adc
inc
or
or
xchg
xchg
insl
mov
or
or
mov
xchg
popa
cmp
fwait
mov
dec
cld
sbb
push
mov
aas
xlat
adcb
push
inc
mov
lea
lcall
or
pushf
push
add
push
lods
add
or
add
push
ss
and
add
xor
and
inc
or
stc
mov
mov
cmp
je
cmp
repnz
pop
mov
and
aam
dec
movsb
cld
inc
testb
rcl
add
movzwl
jmp
sub
jbe
jmp
push
jge
subl
push
lcall
xchg
cwtl
xor
inc
in
mov
mov
mov
pop
sub
mov
inc
pop
mov
push
arpl
in
inc
xchg
add
aaa
inc
mov
add
das
mov
inc
call
pushf
inc
lahf
mov
icebp
aaa
xor
sub
sar
pop
and
mov
jcxz
push
adc
enter
pop
mov
jmp
jb
lock
mov
inc
lea
out
sbb
add
fdivrl
into
int3
add
fsubs
and
and
and
mov
pop
inc
fldenv
enter
add
dec
mov
mov
jl
xor
shrl
pop
aam
dec
shll
data16
adc
xor
insb
xchg
dec
dec
testb
dec
adc
shll
bound
dec
shll
scas
sahf
add
adc
adc
add
adc
pop
or
in
jb
or
sbb
movsl
leave
adc
mov
pop
lea
or
adc
add
mov
jp
int
fldt
xor
adc
add
mov
comiss
repz
sub
jmp
scas
jmp
sub
adc
aaa
inc
out
arpl
lcall
pop
shlb
xchg
idivl
pop
xchg
daa
push
addl
arpl
lcall
inc
push
adc
sub
or
icebp
xlat
jne
xlat
testl
adc
dec
mov
mov
je
addr16
push
push
addr16
fnstenv
xlat
movsl
addr16
mov
adc
mov
adcl
push
rcrb
jne
cli
or
int
shll
mov
ss
shll
push
testb
imul
xor
mov
dec
js
bound
dec
cmpsb
imul
addr16
dec
add
imul
mov
sbb
push
jbe
push
mov
add
nop
fwait
cmp
loope
or
xchg
cs
in
push
jecxz
and
dec
mov
lcall
push
xor
inc
sub
cmp
xor
xlat
pop
xor
sub
and
dec
shll
add
xor
shll
testb
ljmp
fcom
int3
mov
shll
mov
popa
mov
jae
fwait
outsl
pop
mov
add
rcrl
jo
pop
str
inc
ss
aaa
and
mov
lret
or
and
inc
cs
xchg
lcall
sub
sbb
imul
sbb
int
repnz
aaa
stos
rolb
cmpsb
imul
cmpsb
imul
cmpsb
imul
xlat
mov
rorl
and
push
insb
inc
mov
and
inc
xchg
daa
lock
add
sbb
xor
push
and
int3
inc
stos
pop
dec
pop
leave
sub
dec
orb
leave
fs
cltd
dec
es
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
adcb
xor
inc
inc
dec
xor
cs
insb
add
push
inc
push
gs
testb
pop
or
push
sbb
shll
pop
and
pop
jl
in
clc
cld
add
sti
stc
cld
idiv
cld
mov
testl
cld
fisttps
stc
jmp
idiv
pushl
cli
dec
leave
push
dec
bound
push
pop
insb
sbb
imul
sbb
idiv
pushl
sbb
sbb
push
pop
popa
sub
add
sbb
fucomip
ret
mov
add
mov
addr16
xchg
stc
out
mov
add
mov
daa
cmpsl
je
xchg
mov
inc
pop
push
push
xchg
push
inc
pop
dec
into
stc
cmpsb
imul
mov
mov
inc
inc
std
add
jl
sti
dec
adc
fstpt
decb
sbb
add
pop
sbb
or
push
pop
std
add
push
add
enter
pop
push
or
fnstenv
push
test
add
lds
dec
fwait
mov
ret
jnp
pop
daa
fscale
adc
jae
jbe
arpl
fldl
add
and
jno
pop
jno
daa
jo
pop
push
push
mov
cmp
pop
adc
jle
insl
lret
jle
gs
mov
negb
insb
pop
fldt
test
or
lea
dec
push
push
mov
loopne
dec
pop
dec
incl
dec
loope
dec
cmpb
movsb
punpcklwd
in
outsl
cld
clc
or
lcall
add
push
dec
imul
ja
gs
test
gs
add
pop
neg
std
aaa
mov
push
dec
in
xor
mov
mov
dec
sbb
insl
or
or
loopne
ja
pushl
les
jnp
pop
pop
xchg
push
xchg
dec
push
dec
mov
cmp
sti
incl
push
divb
movsl
testl
push
loopne
sti
sti
cld
jp
mov
push
or
jg
fdivr
in
and
stc
push
lahf
pushf
mov
incb
pminub
in
loope
sub
xchg
in
sub
pop
pop
fildll
and
dec
mov
addb
jl
xor
jb
imull
fs
aaa
pop
cli
pop
or
mov
pop
jg
xchg
lea
lds
push
dec
cmp
ds
inc
repz
clc
jae
mov
pop
add
or
mov
in
sub
decb
out
or
in
xchg
fists
les
xchg
jbe
jmp
fs
incl
mov
adc
nop
popf
loope
or
lahf
sbb
daa
fistpl
cmp
xorb
sbb
loope
sbb
sti
mov
stc
cmp
popa
data16
add
sti
adc
pop
repnz
inc
loopew
sub
imul
and
inc
ret
jmp
and
cld
insl
cmc
fs
decl
loope
inc
push
jle
aaa
call
mov
dec
dec
addb
lock
daa
cmc
cmpb
mov
pop
les
jg
in
xchg
dec
dec
mov
xchg
cmp
push
mov
out
sbb
sarb
cmp
cmp
scas
mov
aaa
jnp
push
mov
pop
pop
test
clc
aam
mov
adc
push
sub
outsl
and
cs
xchg
test
in
or
clc
das
or
add
sub
push
out
sub
ret
push
arpl
xchg
fbstp
sbb
ja
incl
push
arpl
in
inc
arpl
in
jg
push
outsb
adc
adc
mov
pop
loope
cld
or
push
test
fcmovnu
pushl
test
add
push
notb
out
test
rorl
outsb
push
push
testl
sti
pop
lods
test
clc
xor
push
arpl
mov
sub
call
movsb
fs
xchg
popa
cmp
sbb
ss
jae
test
insl
ret
sub
xor
add
clc
mov
pop
rol
fstpt
or
sbb
mov
dec
xchg
xor
leave
and
fucomi
pop
and
push
push
ret
xor
ret
in
add
sbb
mov
pop
or
in
sub
fs
arpl
or
add
add
push
or
jle
call
test
test
movsb
jg
add
pop
dec
loope
inc
decl
or
mov
dec
mov
sbb
sub
xor
xor
jnp
inc
incl
hlt
jb
mov
out
dec
loopne
inc
and
pop
xchg
jmp
out
xorb
dec
in
inc
push
push
addb
dec
add
jg
ljmp
cmp
and
add
inc
add
jns
insb
dec
jae
stc
or
inc
add
ljmp
cli
mov
out
sbb
dec
in
aas
test
add
dec
inc
loope
inc
aas
jl
push
jnp
hlt
push
push
push
in
mov
addl
mov
xchg
dec
mov
aas
std
and
hlt
dec
gs
add
or
inc
dec
sbb
inc
movsl
das
jl
rcrb
pop
gs
or
dec
repz
adc
std
xor
mov
ret
popf
gs
add
or
jmp
pop
jge
pop
mov
cli
rcll
mov
popa
push
or
push
popa
out
insb
mov
inc
xor
ret
adc
icebp
xor
xor
sbb
add
or
push
cld
cmc
imul
in
xor
xlat
dec
mov
std
fbstp
in
es
bound
clc
ljmp
fnsave
sbb
data16
popa
push
dec
push
mov
mov
decl
ret
cmp
ljmp
icebp
sub
in
lret
call
push
call
xchg
or
or
out
call
decl
jns
in
cld
popa
add
push
in
add
les
mov
lds
decb
mov
cmp
fcoml
ljmp
out
std
imul
aaa
shrb
in
or
fbstp
in
insl
jnp
adc
test
ja
sub
pop
cs
mov
add
ds
in
imull
ja
repz
loope
add
mov
or
ljmp
out
dec
data16
aam
dec
insl
mull
jb
faddl
stc
sahf
clc
in
inc
lods
aaa
pop
sub
icebp
add
aad
dec
movsl
test
iret
sbbb
pop
jno
stc
out
rcll
pop
rolb
cmp
add
add
std
data16
jmp
mov
pop
jmp
and
or
pop
push
out
dec
in
xor
jae
js
pop
in
scas
push
add
addr16
imul
pop
in
or
or
jmp
sti
jg
out
call
xchg
test
dec
lock
xchg
lret
in
shl
cmc
test
or
cmpsl
mov
test
repnz
push
mov
or
ljmp
inc
icebp
popa
repz
loopne
cmc
xor
outsl
clc
movsl
lods
icebp
add
push
xchg
xor
aaa
sbb
pop
mov
sub
mov
mov
dec
push
xchg
cmpb
add
jae
or
add
cmp
ffreep
push
and
mov
sti
inc
out
cmp
xchg
clc
pop
xchg
popf
mov
lds
test
mov
cmpsl
add
mov
sub
jbe
jne
lock
cmp
jle
or
fcmovne
rcrb
dec
xor
icebp
cmc
decb
push
lret
add
xchg
and
add
addl
cli
pop
fdivr
xor
add
xor
loop
add
pop
rorb
insb
int3
jnp
mov
xchg
in
or
dec
das
pop
loop
mov
add
mov
andl
xchg
incb
ret
clc
loop
jo
mov
push
mov
and
daa
int3
addb
fistps
jg
lock
out
mov
sahf
pop
imul
not
xchg
outsl
push
incb
dec
arpl
adc
add
out
daa
sarb
and
mov
add
cwtl
ret
cmp
loope
out
outsb
mov
xchg
ret
pop
xchg
imul
or
pop
sub
rcl
sbb
or
aaa
rorb
mov
dec
popa
loope
mov
sbb
xchg
cwtl
test
adc
or
divl
dec
dec
cwtd
sti
stc
push
fcmovnu
jb
fistpl
add
in
pusha
sti
fwait
decb
dec
cmc
fistpll
add
insb
xor
loopne
mov
fbld
xchg
out
cmp
xchg
mov
mov
jne
call
test
pushf
mov
lds
dec
sahf
in
insb
cld
mov
add
loope
les
sub
loope
in
xor
add
aas
decb
cmc
dec
sti
jb
imul
in
fistps
mov
loopne
add
sti
ret
cmp
cltd
ret
pop
xchg
dec
pop
add
loop
add
and
pop
pop
pop
call
popf
add
bound
xchg
addr16
mov
pop
ret
std
kmovw
daa
xchg
repnz
inc
std
cmp
gs
cmc
loope
inc
clc
mov
mov
aad
pop
sarb
fs
insl
clc
xchg
mov
jg
out
stc
or
sub
fwait
std
dec
testl
lock
dec
stos
fsubrl
and
in
cwtl
shr
add
cs
mov
or
fsubrl
fstpt
adc
in
sti
inc
aaa
pop
test
mov
push
push
cmc
push
add
dec
dec
dec
mov
xchg
push
mov
pushf
mov
mov
movsl
imul
ss
pop
stos
arpl
insb
cltd
outsb
imul
mov
adc
insb
pop
loope
aas
pop
jg
or
dec
mov
es
mov
mov
imulb
push
fnstenv
test
jae
das
loope
out
fildl
jnp
add
in
aaa
jno
mov
icebp
add
push
ret
sti
das
cld
push
mov
push
dec
mov
push
xor
or
insl
inc
jg
int
outsl
xchg
and
adc
jmp
cmp
stc
xorb
xchg
in
divb
dec
or
lds
insb
cltd
or
aas
dec
xchg
pop
loop
jae
imul
jmp
cli
das
cltd
xor
add
jmp
call
xchg
dec
loop
sub
icebp
push
pop
mov
and
sub
pop
cli
movsl
push
jp
dec
push
outsb
jge
xor
lds
jg
dec
ds
jb
mov
dec
mov
push
mov
mov
outsl
sub
sbb
in
or
mov
insl
sub
adc
ret
or
sub
out
rcll
mov
cld
mov
adc
outsl
je
fbld
clc
push
jle
leave
dec
pop
dec
addr16
test
sbb
inc
and
inc
out
iret
ret
lret
lea
xchg
std
scas
inc
inc
jmp
clc
aad
add
adc
in
aas
out
xchg
popf
push
mov
sbb
mov
push
add
fcmovbe
pop
jg
add
ljmp
push
dec
inc
adc
cmc
call
sarl
imull
adc
xor
mov
shlb
std
jno
adc
arpl
aad
pushf
in
insl
out
fcmovbe
decl
or
add
test
fwait
xor
xor
test
sarl
or
fistps
cmp
roll
cmp
jo
adc
aas
cmp
sub
sbb
dec
popa
repnz
lahf
add
outsl
push
and
sti
xor
mov
into
dec
sbb
mov
or
fstpt
xchg
mov
xchg
clc
outsl
jmp
and
push
clc
xor
xchg
push
xchg
mov
sub
xor
xsetbv
xchg
mov
xchg
pop
dec
or
mov
pop
push
out
push
gs
lea
in
push
aaa
jbe
filds
ds
dec
imul
push
dec
sub
push
cmp
dec
std
mov
push
pop
fildl
sub
andl
ret
jle
mov
push
lahf
sub
addr16
mov
xor
sbb
icebp
pop
lret
push
in
test
mov
dec
mov
xor
xor
mov
mov
incl
adc
test
pop
call
clc
sbb
enter
adc
jno
mov
mov
arpl
mov
push
sub
jge
add
dec
test
out
jns
fistps
imull
in
pop
sub
mov
sub
mov
mov
mov
testb
or
mov
jg
sbb
add
rep
add
je
push
mov
std
dec
push
push
mov
mov
addl
aad
outsl
std
cmp
insb
adc
test
cmp
sbb
mov
in
xchg
ljmp
jl
stc
jo
add
stos
xor
push
dec
ffreep
std
push
add
pop
mov
mov
or
ret
xor
sub
pop
outsb
push
and
push
xchg
push
dec
into
insl
and
push
or
out
jbe
cld
jp
and
call
test
xchg
push
add
pop
or
inc
mov
pop
add
add
pop
test
and
add
bnd
cmc
jno
inc
add
mov
fistpll
mov
adc
push
jp
add
xor
pushl
idivb
mov
outsb
dec
dec
mov
lcall
pop
std
je
lret
movsl
ss
lret
pop
mov
in
cmp
sbb
je
sub
cld
push
test
inc
std
outsl
test
addl
ds
icebp
fucomi
fwait
add
push
aaa
dec
movsb
sbb
add
cld
std
and
xchg
in
inc
add
stos
push
adc
lods
jmp
fistpll
arpl
sti
push
and
pop
pop
push
fbld
jns
inc
push
loope
add
in
divb
addb
fisttpl
cmp
ret
add
mov
inc
into
dec
adc
jg
insb
jp
sub
jns
jmp
dec
push
xchg
mov
sbb
jg
cwtl
pop
mov
sbb
add
add
in
sub
mov
mov
aaa
cli
loop
test
cmp
adc
ret
lret
das
mov
outsb
cmpsl
cmp
xchg
in
adc
pushl
mov
jl
stc
clc
xor
jo
orb
aas
add
aaa
mov
cmp
je
xchg
adc
mov
inc
out
inc
std
xchg
dec
roll
and
push
out
mov
xor
xor
jnp
adcl
xor
outsb
mov
jo
fildl
dec
or
xor
das
roll
orb
test
push
aas
add
sti
cmp
jb
insl
add
add
xor
xor
mov
in
das
std
fisttps
push
fistpll
xor
addl
mov
orl
pop
mov
test
xor
jo
flds
lret
js
xchg
dec
mov
xchg
ljmp
sbb
das
dec
add
outsl
pop
sbbb
xor
xor
call
mov
mov
inc
xor
or
inc
mov
jno
xor
xor
clc
xchg
insb
sbb
mov
xor
jnp
aas
adc
decl
add
adcb
std
jae
loope
lcall
inc
cmp
outsb
inc
mov
or
cs
in
mov
je
std
insb
sbb
cmp
jp
adc
out
outsb
std
test
add
pop
sub
lock
jae
xorl
jl
sbb
push
out
test
negb
push
test
jns
sbb
adc
leave
in
sbb
test
adc
in
xchg
daa
jns
enter
in
lods
clc
sti
jae
out
mov
adc
inc
add
xchg
sbb
in
stc
in
lret
test
xchg
insl
in
inc
sbb
daa
mov
outsl
rorb
je
jne
out
jge
jnp
roll
inc
loopne
xlat
pop
test
mov
int3
ss
pop
lds
cld
roll
pop
mov
add
cld
movsl
adc
xchg
aaa
cmp
or
roll
loopne
xorb
rorb
xor
fucomip
decl
mov
pop
call
push
mov
bound
in
arpl
mov
aam
arpl
loopne
inc
adc
xorb
adc
loopne
fldcw
test
scas
xchg
cltd
sbb
push
xor
add
mov
inc
mov
push
cli
jno
std
sti
and
ja
cmp
out
sbb
insl
sti
mov
aas
xor
inc
xor
dec
xor
fldenv
push
sub
int
fsubs
fildl
dec
pop
xor
ja
stc
or
jg
sbb
mov
sahf
sbb
and
sub
pop
or
inc
cli
or
incb
popa
jmp
dec
cmp
jno
and
jne
aas
jne
jge
inc
cld
xor
pop
jg
jb
jno
call
inc
sti
cmp
jae
add
cld
pop
mov
sub
cmp
cmc
cmp
or
aas
and
pop
popf
add
mov
cmp
jbe
outsb
sbb
cld
or
push
test
push
adc
jmp
cmp
dec
xchg
outsl
mov
cmp
sti
gs
sbb
sbbb
jp
sbb
imul
sub
jb
mov
mov
fdivrl
jmp
cld
iret
ret
sarb
xchg
sub
dec
fildl
sbb
cmp
add
sbb
xchg
sub
jle
add
add
mov
jecxz
xchg
movd
rcll
pop
out
test
cmp
lock
xor
xor
movsl
push
stc
mov
pop
rolb
shlb
adc
and
xor
mov
pop
addl
mov
jb
push
jecxz
dec
sub
add
cmp
xor
insl
sbb
mov
push
mov
xchg
push
inc
add
dec
add
sub
scas
cmp
je
jecxz
xorl
arpl
outsl
je
add
test
jno
xor
inc
orl
jno
sub
pop
jmp
in
dec
std
pop
cmp
xchg
test
pop
mov
xchg
dec
add
xchg
sub
pop
inc
decb
dec
insl
or
pop
decl
movsl
cmp
push
ret
jg
test
add
aad
or
je
jmp
outsb
pusha
add
out
push
mov
outsl
hlt
pop
fmuls
jno
setle
out
jecxz
or
arpl
add
cli
lret
inc
mov
mov
sub
mov
or
add
inc
shrl
pop
pop
inc
jmp
jle
mov
stc
mov
mov
add
mov
test
sub
jae
dec
dec
out
push
add
or
test
sti
test
sbb
leave
clc
or
lods
adc
clc
daa
imull
push
push
popa
ja
outsb
cmpsb
dec
pop
or
pop
daa
outsb
lret
push
add
sub
in
rolb
or
pop
stos
jmp
decl
pusha
dec
push
das
repz
push
dec
push
gs
repz
fnsave
cld
mov
add
cmc
sbb
in
shlb
stc
clc
rorl
icebp
jg
jns
sub
add
jmp
jnp
popa
add
or
aad
sti
add
and
jge
inc
pop
out
mov
mov
dec
cld
push
shlb
mov
inc
mov
push
xchg
push
mov
xchg
test
scas
mov
outsb
mov
push
mov
lock
repnz
clc
cli
ret
inc
daa
pop
std
addl
arpl
cmc
mov
push
scas
sarb
dec
popa
imul
cltd
pop
xor
or
sti
fbld
push
mov
in
mov
in
dec
hlt
pop
das
and
stos
sub
aaa
ret
daa
push
mov
sbb
pop
push
jnp
add
mov
int
jmp
cwtl
sbb
mov
jbe
lds
out
pop
sbb
jp
jae
push
iret
ret
pop
dec
hlt
sbb
mov
jge
data16
add
decl
popa
in
mov
sub
or
ja
out
sbb
imul
scas
inc
in
push
dec
lcall
testb
das
int
mov
adcl
inc
mov
fstpl
jp
rolb
push
fcomi
sub
test
rorl
in
and
fs
push
mov
sbb
mov
pop
cmpsl
std
xor
jecxz
sbb
xorl
push
sbb
jns
mov
pop
pop
out
fisubrl
clc
pop
int3
in
xor
pop
mov
sbb
jg
test
cs
mov
sub
test
testl
inc
out
xor
add
push
push
push
dec
arpl
mov
cmp
fisubrs
testl
leave
jle
jae
dec
sbb
cld
dec
dec
mov
rcrl
inc
sub
mov
inc
in
loope
in
inc
mov
sti
lock
sti
out
push
pop
aad
inc
aad
popa
inc
sbb
push
aad
out
out
xor
in
fsubrl
mov
call
popa
aam
adc
adc
mov
sarl
mov
popf
or
jbe
pop
or
dec
pop
mov
das
insb
rolb
in
mov
aam
ja
sub
cs
mov
pop
sti
out
cwtl
xchg
test
in
xor
stc
in
cwtl
outsl
push
daa
dec
jnp
in
sub
cld
and
jne
std
mov
adc
bound
cmc
sub
dec
pop
lock
mov
ss
cmc
jo
inc
cmc
cmp
push
cmp
jb
push
clc
mul
add
xchg
xor
call
sub
lcall
push
imul
add
outsl
fldl
mov
mov
mov
and
movsb
jge
loop
jo
pop
sbb
or
push
or
add
push
in
pop
mov
xor
sub
inc
jg
jecxz
inc
addr16
or
mov
adc
dec
push
or
mov
pop
fucomip
dec
sti
pusha
sti
fwait
xchg
imul
mov
adc
aaa
pop
add
dec
loope
idiv
imulb
push
int
insl
scas
clc
and
ret
mov
or
push
lock
pop
and
xor
popa
adc
loopne
mov
fstpl
mov
mov
adc
sbb
cmp
dec
dec
xchg
test
and
int3
dec
in
xor
lock
sub
dec
pop
sub
lods
out
pop
jl
popa
push
or
icebp
jns
push
aam
fstpt
lods
clc
notb
mov
sbb
cld
sub
pop
test
mov
push
mov
mov
mov
adc
cmp
xchg
and
dec
mov
mov
mov
mov
std
push
mov
out
pusha
ljmp
sub
mov
sbb
lcall
clc
jecxz
xor
loopne
adc
fs
popa
or
xchg
dec
pop
mov
jecxz
mov
jne
fldt
push
dec
test
ret
loope
sub
ret
and
dec
push
cld
iret
pop
test
pop
cmp
or
fstp
dec
adcb
movsl
or
sub
loope
mov
fmull
cmc
testb
jle
loopne
stc
mov
aam
mov
out
jo
sub
push
ret
sbb
add
aam
sbbb
cmpl
in
es
push
cmp
insb
cld
imul
mov
outsb
data16
ljmp
cltd
sbb
cmc
dec
jge
flds
mov
xchg
xchg
testb
jnp
test
xchg
filds
or
sarb
lods
cltd
mov
sbb
inc
js
jge
sbb
lcall
cmpl
xor
popf
out
add
pop
shll
push
es
icebp
mov
mov
data16
lods
stc
xlat
jbe
andl
mov
push
pop
xor
cmp
loope
mov
faddl
add
jecxz
push
xor
test
jmp
out
outsl
cs
xor
cmp
jno,pt
fdivrp
inc
or
inc
adc
push
inc
filds
or
sbb
lock
mov
sti
lods
bound
lods
mov
arpl
test
idiv
xchg
adc
adc
sti
movsl
add
xchg
push
pop
push
dec
pop
les
dec
add
sbb
mov
sbb
adc
pop
pop
mov
inc
mov
mov
push
jle
push
or
or
call
test
mov
mov
xor
mov
jmp
test
iret
push
outsb
push
xor
cmpl
mov
add
mov
cmpsb
shlb
mov
push
cli
fs
mov
dec
repnz
stc
insl
jb
adc
addr16
mov
pop
nop
rcrl
cmp
adc
fs
push
sbb
and
jg
das
sbb
inc
mov
jo
sub
xor
jl
test
sbb
jb
cmp
mov
aaa
sbb
cli
push
push
xor
pop
and
push
mov
cs
cmp
and
xor
fldl
mov
mov
mov
std
lcall
push
enter
dec
dec
push
push
in
or
fisttpll
and
or
fiadds
xor
mov
jg
sub
gs
add
sub
cltd
fucomip
push
cmp
addr16
mov
mov
cwtl
daa
jns
push
or
loopne
push
sub
inc
fwait
or
out
std
lcall
ja
pop
sub
mov
out
test
stos
mov
movb
popa
cmp
and
lahf
insl
mov
in
and
sub
push
aad
and
mov
es
mov
leave
test
and
pusha
mov
xchg
dec
cmp
imul
jmp
jnp
sub
add
mov
ljmp
or
rorl
xchg
loop
jmp
cmp
or
xchg
sar
loop
jb
addr16
test
cld
sarb
data16
add
pop
push
cs
rcrl
sbb
xchg
add
ret
sub
inc
xor
mov
mov
loopne
add
repnz
cmpb
push
das
sbb
or
roll
adc
pop
push
sub
dec
not
fiaddl
mov
clc
js
in
icebp
rcrb
dec
out
sub
movsl
call
cmp
mov
out
or
out
pushf
loop
mov
jecxz
outsl
add
adc
or
mov
xchg
and
add
dec
out
and
push
cltd
cld
imul
jg
outsb
and
hlt
aad
clc
stc
push
push
repz
dec
out
mov
cld
fucom
ja
jno
addb
pop
jae
insl
jo
adc
clc
adc
adc
dec
ja
scas
jg
adc
cmc
int
mov
adc
jns
sahf
fdivrp
push
push
popa
aas
add
inc
inc
icebp
pop
push
fistps
mov
aam
cltd
mov
add
lahf
fnstenv
rorl
adc
pop
add
fld
loop
fdivr
and
mov
ret
adc
mov
jmp
fisttpl
jl
cmp
sub
add
fcmovnbe
shrl
repz
addl
cmc
enter
or
call
add
pushf
push
icebp
add
mov
cmpsl
mov
out
gs
add
pop
jno
sbb
outsl
insl
cmp
xchg
cli
outsb
or
or
cs
add
dec
dec
arpl
pop
xor
jp
fisubrl
call
in
repz
cmp
mov
add
sub
mov
sub
sbbl
das
pop
in
mull
dec
test
shrl
jae
loopne
and
hlt
xchg
mov
jge
jg
mov
pop
xor
and
orl
mov
pop
mov
out
push
movsb
cmpsl
test
inc
mov
jmp
fwait
mov
adc
test
lds
inc
adc
call
icebp
pop
addw
loope
xor
pop
xor
jae
or
adc
push
fxch
mov
loopne
and
sbb
jnp
mov
lea
shl
cmp
fcompl
xchg
sti
sarl
test
cld
sbb
les
or
or
imul
imul
lock
push
push
sbbl
imul
arpl
call
dec
cmp
out
and
aad
aad
inc
jmp
fwait
sbb
pop
dec
pop
mov
je
jg
or
cmc
mov
add
push
arpl
dec
xor
jmp
dec
push
add
punpcklwd
leave
push
sbb
mov
mov
pop
call
arpl
mov
sti
in
adc
mov
ret
std
pop
imul
jo
xchg
sub
ljmp
jne
jbe
in
repnz
adc
or
fnstenv
push
add
loopne
mov
mov
mov
loopne
add
or
xor
std
mov
addr16
in
xchg
xchg
testw
add
movsl
pop
clc
fucomip
fscale
cmpb
lods
pop
xchg
jmp
outsb
pushf
in
loope
and
rclb
call
scas
fimull
pusha
ret
mov
ds
hlt
inc
mov
jb
mov
mov
out
inc
daa
testb
xor
push
test
aaa
das
stc
stos
sub
jno
lahf
or
insl
and
dec
daa
imul
mov
clc
xor
push
mov
and
jns
and
mov
mov
xor
adcl
pop
and
int
pop
hlt
or
mov
cmpsl
or
cld
xor
sbb
dec
push
push
cmp
fwait
test
push
in
sbb
cmovo
inc
sub
dec
xor
xor
cld
cmc
test
and
dec
fs
aaa
test
fldenv
mov
xchg
pop
adc
outsb
xor
or
xchg
fidivrs
in
and
lahf
or
mov
pop
pushf
movsl
std
shll
jmp
sbb
inc
sbb
pop
xlat
pop
xchg
sbb
clc
testb
fisubs
imul
mov
sbb
cmp
in
lods
pop
sbb
push
adc
fwait
mov
lock
pop
mov
andb
add
mov
sbb
cmc
inc
daa
stos
pop
adc
arpl
js
jl
or
sub
jb
mov
in
jecxz
pushf
jo
mov
lcall
test
pop
icebp
aad
jae
test
cmc
mov
add
test
mov
dec
fwait
push
popf
and
inc
fucomp
mov
fistl
pushf
repz
pop
clc
popf
xchg
or
test
lock
out
cmpsb
cli
adc
push
xor
pop
rol
popf
add
add
shl
movsl
lods
cmc
lods
sbbb
jns
ret
out
jl
insl
add
sbb
jne
mov
mov
icebp
out
push
mov
xchg
out
cli
dec
in
and
in
sbb
xchg
psraw
xor
dec
lret
mov
in
dec
and
mov
dec
mov
aam
xrelease
shlb
shll
repz
sub
jno
iret
inc
mov
mov
ja
mov
mov
movb
cmp
je
pushf
movsl
sub
imul
push
divl
dec
movsl
hlt
add
repnz
mov
repz
test
push
sbb
ljmp
aas
test
mov
add
gs
jle
jle
push
loope
and
arpl
adc
rolb
cli
cltd
adc
fstps
dec
mov
dec
pop
popf
mov
movl
pop
xor
cmp
jg
lcall
in
jge
add
testb
sbbl
ljmp
mov
lret
mov
adcb
out
in
and
icebp
fs
jmp
mov
ffree
or
lahf
jle
jg
js
enter
push
push
add
pop
pop
pushl
xchg
adc
mull
movsb
test
sub
jle
jb
xlat
mov
sbb
clc
jl
ja
std
push
cmp
sbb
hlt
jge
xorl
in
sbb
stc
roll
outsl
sbb
push
inc
mov
mov
insl
mov
lahf
ss
outsl
mov
and
call
fistpl
mov
jecxz
fucom
int3
push
popf
dec
push
lods
in
test
out
pop
in
push
xchg
fwait
pop
mov
push
or
in
or
loopne
jnp
arpl
repz
mov
add
and
inc
or
lea
mov
mov
outsl
fists
das
dec
jge
add
jmp
scas
outsb
aam
push
mov
negb
mull
adc
sbb
movsl
ja
mov
addr16
push
in
inc
clc
rcl
iret
leave
sbb
arpl
mov
rcl
outsl
incl
pop
or
into
mov
mov
mov
jl
adc
popa
into
repz
push
fs
add
inc
out
int3
std
add
or
xor
mov
jg
insl
ss
aas
inc
mov
or
fs
mov
jnp
push
adc
jle
xchg
mov
cmp
dec
addw
lea
xchg
filds
call
scas
insb
push
dec
test
cmc
roll
addr16
cld
outsl
popf
inc
icebp
orl
inc
out
adcl
lock
mov
inc
jnp
iret
testl
stos
pop
cmp
jns
push
cmc
jne
lea
test
lods
sbb
dec
fs
dec
xor
and
orl
loope
stc
sahf
into
lods
or
jno
pushl
mov
or
dec
mov
stc
pop
gs
xchg
jmp
push
adc
dec
dec
popa
addb
imul
pop
pop
or
push
mov
out
jle
push
shrl
idivb
pop
das
aam
mov
icebp
jnp
mov
push
xchg
cmc
test
mov
push
loope
daa
sbb
mov
js
pop
daa
push
dec
pop
repz
push
or
xorb
cld
call
pop
pushf
in
lds
out
pop
mov
xchg
jecxz
pop
sbb
icebp
ja
sbb
xchg
sub
iret
dec
inc
in
sbb
mov
sbb
jno
or
lods
pusha
mov
push
mov
decl
mov
push
dec
push
in
out
stc
xchg
repz
testb
in
cmc
mov
add
push
xlat
or
loopne
sbb
out
sbb
push
notb
pop
pop
mov
cmp
repnz
aam
subb
shll
inc
mov
test
add
or
rcr
fadds
fbld
in
mov
imul
mov
adc
xor
or
pop
mov
xchg
fidivrl
in
idiv
jb
pop
test
pop
push
mov
mov
cmp
lret
dec
mov
rolb
test
dec
lcall
aad
push
mov
clc
sbb
jg
repz
test
loope
lock
sti
aaa
fwait
add
push
jnp
in
bound
loopne
ljmp
sub
push
sub
sti
xchg
mov
cmp
mov
cltd
xchg
cmc
test
dec
mov
xchg
push
icebp
and
sbb
xchg
fsts
cmp
ss
imul
inc
in
out
xchg
mov
push
sarb
rolb
sbb
cmpsl
dec
rcl
push
out
push
test
push
push
or
inc
sub
pop
shll
rclb
inc
xor
mulb
in
mov
mov
jae
ret
or
sbb
inc
cs
ds
in
add
addr16
cmp
push
jg
cmp
inc
dec
inc
cmp
aaa
sbb
cmp
and
pop
and
mov
xchg
sbb
and
test
xchg
sbb
pop
call
xchg
sbb
sbb
andl
cmp
jecxz
push
and
mov
movnti
or
cmp
jno
or
pushf
xchg
add
inc
in
mov
mov
xchg
add
into
rcr
stos
inc
pop
xchg
negl
or
in
cmp
sub
xor
push
push
in
sbb
mov
jb
cli
inc
icebp
hlt
sbbl
into
mov
xorb
int3
xchg
xchg
xchg
push
add
loopne
push
sub
hlt
push
jbe
loopne
mov
mov
pop
pop
sub
pop
fidivrl
mov
push
sub
cmc
adc
movsb
stos
das
mov
iret
dec
iret
or
ja
xor
mov
test
xlat
push
mov
decl
jg
xchg
push
das
movb
jp,pt
std
cmp
je
or
out
das
jmp
or
std
ljmp
lea
add
mov
push
scas
inc
or
xchg
adc
clc
aaa
and
ljmp
mov
add
sbb
push
pop
push
mov
pusha
inc
mov
or
cmp
jbe
push
cli
mov
push
addb
dec
add
xchg
sti
or
pop
std
inc
xchg
add
stc
leave
adcb
or
inc
lods
sub
cmp
jns
push
mov
push
mov
xchg
test
clc
pop
pop
mov
insl
dec
push
das
pop
push
push
push
push
imull
std
jg
inc
shl
jmp
jb
arpl
rolb
inc
xchg
xor
cmc
divb
std
jae
push
in
sbb
clc
je
and
cmpl
insl
xor
shll
aas
es
add
lret
ja
stc
inc
cmp
mov
je
jecxz
les
mov
and
mov
add
inc
add
daa
jne
push
jae
inc
out
xor
popf
cmp
add
inc
or
in
mov
in
xchg
add
xor
add
add
mov
sub
xchg
aad
xor
arpl
stc
push
mov
adc
mov
mov
aad
je
lcall
add
stc
dec
mov
cld
add
jns
sbbb
push
sti
dec
callw
scas
push
fildll
jae
xchg
push
adc
stos
dec
adc
outsb
mov
decl
std
cmc
in
int
adc
jmp
dec
mov
mov
push
fildl
push
or
enter
mov
or
cmp
add
movsl
movlps
mov
xor
mov
cmc
in
hlt
rol
push
adc
mov
mov
xor
dec
in
push
pusha
fwait
add
xor
rep
enter
fisubl
xor
aaa
cli
leave
leave
xchg
sbb
repz
mov
cld
scas
sbb
xor
push
adc
lahf
mov
mov
xor
test
dec
ds
addr16
sti
mov
fsubs
mov
ja
flds
sub
dec
loop
jp
push
adc
mov
lcall
pop
or
ja
lahf
fsub
fcomps
pop
inc
dec
addr16
dec
daa
xor
sti
mov
xchg
inc
mov
push
jnp
sti
pop
out
xchg
sbbb
pop
mov
mov
cmpb
jp
sub
xor
aam
js
or
xchg
add
or
mov
mov
dec
add
dec
inc
xchg
or
pop
mov
fwait
sbb
adc
mov
xor
or
add
mov
xchg
jmp
or
dec
ljmp
ja
sbb
cld
cmp
ss
fisttps
jne
mov
xlat
pusha
enter
decl
mov
sti
sub
jle
sbbl
push
or
mov
add
cmp
jbe
xor
sub
clc
test
jne
or
xor
popf
dec
jno
ja
jecxz
rolb
xchg
nop
sbb
out
icebp
mov
mov
addb
inc
mov
ljmp
jbe
or
push
xchg
dec
and
aaa
lds
xchg
std
jno
lea
pop
stos
jnp
aaa
pop
add
mov
out
cmpsb
and
test
dec
or
int
lds
int
ja
inc
out
loope
insl
pop
mov
ss
in
xlat
cmp
shll
daa
inc
sbb
and
adc
sbb
jmp
cmc
ret
push
inc
out
adc
cli
jno
repz
ds
inc
jnp
cmp
stos
div
testb
xor
xchg
cmova
add
dec
mov
xchg
pushf
nop
adc
lsl
pop
push
inc
lds
andl
cli
xchg
adc
jbe
xchg
popf
popf
popa
ja
fabs
or
out
push
push
in
insl
jl
or
aaa
mov
sbbb
and
jp
pop
mov
data16
push
and
jg
in
jl
mov
lret
cld
add
orl
add
dec
jge
and
inc
mov
xor
outsl
push
sbb
mov
clc
daa
dec
pop
mov
sub
mov
dec
pop
mov
loop
mov
addr16
mov
nop
add
mov
cld
repnz
gs
cld
push
add
dec
mov
stc
add
push
dec
addr16
rcrb
push
jnp
sub
jmp
sub
outsl
mov
movsl
push
sti
rcll
int3
pop
dec
std
rorb
paddq
popa
adc
xor
adc
notl
popa
pop
clc
aas
push
imul
in
std
mov
inc
sbb
cmp
mov
repnz
mov
add
jge
xchg
test
mov
std
ljmp
or
dec
in
sub
mov
ud1
pop
mov
xor
or
notl
pop
jle
xchg
imul
fistps
push
inc
ret
mov
pop
sub
pop
in
in
push
lds
push
mov
lea
cmc
xchg
dec
loope
or
icebp
in
mov
ds
push
cli
and
jb
xchg
outsb
lea
push
dec
or
push
cli
dec
or
minps
test
mov
daa
gs
or
gs
pop
jge
mov
mov
push
pop
sbb
test
testl
add
xor
loopne
or
dec
je
dec
jns
hlt
gs
pop
scas
jp
mov
dec
jmp
adc
xor
sbb
jl
jge
adc
and
mov
cmp
jo
out
roll
add
call
adc
jg
js
fwait
or
push
cld
dec
pop
sub
addr16
in
pop
mov
rorb
or
mov
mov
add
pop
cmpsl
fwait
cld
sub
push
in
jne
push
dec
hlt
clc
mov
adc
je
pop
testl
insl
mov
push
in
les
ret
dec
jg
jmp
ds
or
inc
std
xchg
cmc
push
incl
mov
push
jnp
push
test
inc
dec
hlt
lea
or
roll
leave
icebp
cmp
jno
aaa
push
push
call
ja
cmp
mov
mov
stos
inc
mov
clc
add
ds
push
loopne
filds
dec
cmc
adc
pop
or
pop
pop
mov
sbb
mov
dec
sub
jg
in
lods
dec
std
xor
andl
rcr
or
dec
cld
pop
sarb
orl
jecxz
rclb
addb
aad
ja
push
movsl
inc
mov
lock
call
jno
jg
scas
loope
or
outsb
test
ret
inc
xor
out
insl
cmc
lds
outsl
pushl
add
sbb
xor
sbb
sti
push
dec
push
in
pop
pop
pop
in
mov
mov
je
mov
pop
add
test
js
popa
push
xor
insl
xchg
jb
mov
mov
addb
xor
loope
mov
xchg
popl
mov
in
cmovae
cmpsl
arpl
xor
leave
cmc
mov
adc
data16
pop
jl
inc
sub
xlat
xchg
jle
in
xchg
ljmp
mov
fsts
addr16
lret
imul
sbb
jmp
pop
lea
mov
lods
jl
mov
pop
lret
sbb
cmpb
push
mov
xor
out
in
xor
mov
insb
fstpt
lea
add
iret
pop
out
pop
xchg
fistps
add
add
and
aas
mov
insl
jne
or
fsubrp
in
add
outsl
push
pop
jae
sbb
inc
push
push
mov
repz
xchg
lods
sub
outsl
pop
sbb
movsl
hlt
pop
test
adc
mov
cmp
sbb
in
in
mov
inc
adc
dec
push
pop
and
xor
mov
hlt
aas
arpl
test
or
and
rcr
fwait
std
pop
pop
cs
push
test
adc
fisttpl
pop
push
test
iret
pop
loop
ret
aas
adc
jge
cwtl
mov
insb
test
mov
icebp
pop
cld
out
and
iret
in
adc
lret
push
in
in
sti
or
mov
ficompl
addr16
pop
out
aas
lods
mov
out
add
add
mov
ss
add
pop
sbb
in
add
or
popa
jmp
push
outsl
cs
mov
pop
clc
aas
popa
add
out
mov
or
cli
pop
jae
outsl
outsb
and
call
out
in
pop
roll
sub
jg
xor
jae
cli
push
mov
fistps
cld
xchg
xchg
aam
bound
pop
pop
and
test
pop
fcmovbe
push
sub
repnz
in
gs
push
addr16
inc
out
stos
in
fwait
add
pop
cltd
imul
lret
mov
hlt
sti
in
sar
add
mov
lret
arpl
xlat
imulb
pop
xchg
clc
and
pusha
cmp
int
fldt
in
cld
mov
mov
in
lret
pop
dec
mov
dec
dec
repnz
mov
mov
mov
mov
cld
mov
or
insl
fisubrl
fidivrl
es
and
jecxz
pop
dec
cmpsl
repz
mov
lods
pop
incl
popa
subl
mov
testl
add
xchg
hlt
sub
sar
ss
rcl
fildl
mov
nop
dec
mov
sti
out
ficoms
sub
lock
xchg
add
push
loope
movsl
ret
lods
mov
add
shlb
inc
cmp
repnz
lods
mov
and
arpl
in
lret
outsl
push
jno
xchg
cld
and
push
ret
imul
ja
cmpsb
sbb
test
or
in
or
movsb
fnsave
add
cwtl
mov
adc
jp
notb
cmc
dec
mov
jno
xchg
pop
jnp
popa
add
rcll
std
pop
mov
or
cmp
push
mov
ljmp
sbb
jmp
jge
push
mov
jne
outsl
pop
mov
adc
xorl
mov
in
insb
dec
push
pop
sub
bound
add
pop
clc
test
mov
aas
std
mov
ss
lahf
push
add
mov
mov
in
xor
lock
insl
mov
mov
mov
in
jmp
notb
std
movl
jmp
dec
sti
cli
clc
mov
jge
aas
sbb
loope
pop
out
addr16
and
mov
adc
imul
testb
adc
jmp
lock
mov
dec
cli
inc
dec
in
std
inc
add
pop
std
push
push
pop
insl
push
sbb
or
dec
push
test
out
leave
pop
inc
adc
mov
outsl
daa
dec
adc
ds
add
adc
fadds
pushl
sub
cld
dec
icebp
dec
adc
xchg
test
inc
mov
pop
cld
add
inc
adc
sbb
dec
sbb
filds
fisttpl
jge
add
imul
mov
sbb
insl
push
sub
stos
jg
pop
and
add
test
shl
mov
rcl
or
add
sub
pop
pop
lahf
inc
push
push
call
iret
add
dec
arpl
inc
pop
pop
and
sbb
fisttps
mov
mov
mov
out
call
jge
pop
jge
or
inc
or
mov
cli
or
add
lock
sti
jle
jecxz
inc
or
testl
push
xchg
mov
iret
mov
cli
mov
mov
test
dec
lds
stc
insb
mov
mov
xor
cmp
cmp
jo
jno
daa
dec
pusha
insl
or
push
lret
jge
popa
jg
pop
roll
dec
mov
loope
add
decl
fcompl
pop
mov
pop
xchg
inc
push
test
je
clc
xchg
cmpb
aaa
cli
push
mov
push
add
sahf
addb
or
les
sub
or
decb
js
or
push
orl
daa
pop
clc
inc
push
cmpl
inc
and
sub
imul
outsb
fists
aas
add
pop
push
push
mov
pop
cmc
cld
mov
out
ja
pop
push
lahf
add
insl
push
pop
pop
push
mov
bound
and
daa
movsl
or
mov
aad
aas
sbb
aad
add
decl
in
jae
inc
inc
ds
jns
test
shr
lahf
xchg
arpl
decl
jg
ja
iret
dec
insl
fildl
lcall
sub
fwait
test
mov
ss
loop
pop
mov
repz
and
mov
add
out
dec
mov
std
push
shlb
xor
push
rolb
mov
stos
clc
clc
and
pop
fwait
sbb
pop
cmpsb
pop
add
sbb
mov
and
sbb
or
test
push
add
cmpl
int
pop
fildl
xor
push
sub
jo
cmpb
arpl
push
adc
arpl
div
xor
mov
fnstenv
loopne
cld
or
mov
add
push
pop
sarl
stc
jnp
push
mov
pop
test
cmc
lahf
dec
xor
out
push
dec
push
sbb
cld
rolb
sbb
out
push
jmp
nop
pop
add
cmp
das
or
jecxz
adc
jl
in
jl
push
push
test
cmpsl
stos
inc
sub
aad
outsl
sbb
mov
insl
sub
jno
mov
xlat
pop
shrl
add
imul
push
mov
pop
add
mov
popf
movsl
push
add
popa
adc
dec
add
push
xchg
jb
cld
in
ret
add
or
daa
adc
add
into
fsubs
jle
xor
pop
gs
pusha
and
jb
popa
int3
xor
jo
xchg
mov
jmp
loop
nop
dec
push
in
out
mov
or
mov
sub
adc
xchg
mov
inc
neg
clc
xor
stc
add
jle
and
test
in
xor
popa
and
scas
sbb
and
fdivr
xor
call
gs
lock
imul
mov
add
jge
cmp
push
shll
jle
mov
je
mov
daa
mov
test
stos
mov
sub
movsl
mov
insl
xchg
or
mov
sub
pop
movsb
sbb
pushl
mov
pop
xor
xchg
push
pop
adc
push
or
cwtl
adc
insb
pop
inc
jg
pop
cmp
outsl
fldl
scas
jp
or
xchg
mov
inc
adc
and
jbe
test
stc
filds
cmp
fbld
cmpl
inc
fmuls
dec
dec
leave
lcall
mov
jno
adc
cmc
out
push
adc
add
mov
mov
push
xor
leave
cltd
jns
push
adcl
pop
mov
subb
cmpl
and
pop
fs
loope
jnp
jg
add
inc
cmp
pop
mov
mov
jae
sub
add
call
jno
mov
scas
fisttpl
movsl
pop
es
sbb
push
adc
add
idivl
sub
push
mov
sbb
iret
and
dec
mov
add
pusha
std
cmp
out
jae
sbb
jmp
jg
pop
in
and
loope
popa
mov
mov
pop
dec
pop
dec
inc
cmp
mov
arpl
dec
pop
lcall
inc
and
mov
std
lahf
imul
clc
xchg
arpl
in
pop
leave
dec
cmp
mov
dec
and
adc
ja
fsub
cmp
icebp
push
and
mov
loop
mov
add
jg
jmp
sub
test
ja
mov
jo
adc
cmpsl
cmp
loope
jg
push
insl
and
loopne
lds
xlat
adc
out
roll
adc
flds
xor
sub
push
fdivr
dec
shll
push
push
arpl
incb
test
jno
pop
jg
hlt
inc
fistpll
movsl
jb
mov
cld
popf
andl
js
std
ja
in
in
cmpsb
mov
aam
push
push
ljmp
fcoms
test
or
insb
adc
mov
xor
outsb
jb
inc
lahf
add
in
dec
xchg
and
call
mov
pop
push
mov
push
out
int3
push
add
xchg
push
test
loopne
insl
aaa
out
cli
xor
scas
sti
push
fwait
mov
incb
loope
pop
fwait
insl
insb
add
push
test
push
push
dec
in
adc
aaa
pop
cmpb
push
push
push
loopne
loopne
jbe
std
cli
es
or
mov
repz
cmp
xor
xchg
push
cld
jno
push
dec
push
loope
xchg
cli
and
or
mov
insl
or
clc
into
xchg
inc
push
xchg
pop
enter
lret
xor
lock
add
fists
jno
and
add
xchg
scas
mov
enter
lret
outsl
fsubl
icebp
fisubl
pop
call
mov
dec
loopne
fbstp
jbe
loopne
arpl
adc
out
shll
mov
mov
pop
out
xor
adc
out
enter
jns
cmp
xchg
out
arpl
sbb
pop
in
cmp
cmp
inc
imul
dec
in
jnp
adc
imul
addr16
iret
push
xor
add
cmp
xchg
gs
in
mov
lretw
pop
fsubl
mov
or
dec
xlat
xor
aaa
dec
pop
andl
push
xor
shll
xor
xchg
lret
gs
out
gs
shlb
fldenv
lahf
lea
out
cs
lret
in
addr16
arpl
imul
lret
push
nop
push
daa
xchg
lret
lods
imul
inc
push
insb
mov
lret
in
jmp
imul
insl
in
data16
aad
mov
sub
dec
mov
ja
adcl
mov
stos
cmpsl
sahf
xchg
imul
fcmovne
jge
dec
test
adc
fs
jns
andb
push
ss
rcr
in
pusha
jnp
or
pop
sub
pop
fcmovnu
fldenvs
insb
imul
pop
jge
je
inc
dec
jle
sarl
cmpsb
imul
jb
addr16
push
push
punpckhwd
data16
bound
pop
jne
cltd
imul
sbb
lods
jecxz
sbb
es
cwtl
ficoml
add
sbb
xchg
sub
add
imul
rclb
icebp
pop
cmp
xchg
sbb
push
jne
pop
popf
leave
orb
lds
and
xor
mov
adc
xchg
add
fs
jb
pop
jbe
das
xor
popa
adc
das
mov
or
inc
bound
pop
pop
cmp
loope
popa
loopne
pop
mov
pop
daa
adc
in
mov
movsb
mov
inc
imul
mov
adc
add
mov
fs
dec
outsl
popa
outsl
pop
jo
inc
jno
fs
dec
jo
inc
sti
ret
insl
pusha
aas
xor
imul
shr
push
pushl
imul
jb
cmp
insb
dec
outsb
imul
neg
js
dec
outsb
jno
pusha
gs
insl
popa
pop
jno
out
inc
fs
out
imulb
imul
xchg
inc
dec
imul
pop
pusha
outsb
bound
arpl
mov
pop
popa
inc
push
and
imul
sbb
add
push
aas
nop
pop
push
imulb
mov
pop
fs
push
insb
pop
fists
pop
inc
dec
outsl
jmp
inc
cld
aas
outsl
pop
stos
arpl
gs
cmp
inc
pop
pop
push
arpl
jns
cmp
aas
imul
gs
data16
popa
add
add
popa
pop
outsb
std
mov
xor
dec
jb
push
insl
imul
pop
pop
clc
cmp
inc
add
popa
fisubl
adc
inc
push
gs
pop
bound
jnp
mov
pop
pusha
jae
insl
outsl
dec
jnp
imul
decl
jbe
fistpl
bound
pusha
jns
adc
outsl
decl
inc
pusha
rorl
popa
aas
pusha
test
mov
insl
dec
push
dec
mov
ljmp
inc
std
cmp
pop
jno
jb,pt
imul
stc
imul
data16
inc
dec
pop
insb
pop
test
je
outsl
fstpt
cmp
fs
loop
in
inc
mov
inc
cmp
stc
pop
lret
jb
pop
decl
cmp
outsb
pop
je
mov
jo
filds
insb
gs
push
addr16
insl
pop
loope
clc
push
xor
dec
inc
inc
dec
inc
ds
das
das
and
jo
mov
popa
sarb
dec
pop
test
sbb
fs
pop
repz
fidivl
daa
popa
arpl
ds
push
arpl
outsl
mov
mov
arpl
pop
pushf
push
insb
jl
mov
outsb
push
pop
inc
add
pop
inc
jbe
insb
insb
inc
fs
push
insl
insb
test
out
clc
inc
arpl
sbb
sub
pop
jg
dec
xor
std
or
shrl
and
jl
push
js
xor
je
push
mov
push
outsl
and
test
lcall
xchg
pusha
pop
sbb
mov
push
outsb
push
popfw
push
pop
xlat
mov
sar
jo
imull
clc
dec
dec
inc
dec
or
test
sub
daa
bound
mov
cmp
mov
int
pop
jae
clc
cmp
aas
arpl
jno
jne
or
adc
pop
pop
pop
std
and
aas
imulb
imul
aaa
sbb
clc
es
outsb
pop
cmp
xor
dec
inc
cmp
jg
inc
cmp
std
ljmp
popa
sarl
jb
ja
decl
icebp
mov
jno
pop
lds
mov
dec
mov
pop
arpl
pop
dec
pop
jg
imul
bound
test
inc
bound
pop
fildll
sbb
pop
popa
inc
pop
aad
clc
cmp
popa
fisttpl
mov
fildl
inc
xor
sub
inc
jmp
ds
dec
sub
sub
push
add
pushw
aad
js
push
pop
cmp
addr16
insl
arpl
insb
lcall
xchg
jg
mov
adc
das
inc
push
pop
push
insb
cmpsl
arpl
pop
dec
add
roll
gs
int3
imul
xchg
je
push
jno
inc
jno
mov
scas
insb
mov
dec
das
pop
shlb
imul
or
popa
pusha
outsl
and
mov
pop
inc
or
dec
fsub
mov
mov
inc
cmp
cld
rcrl
mov
cld
sub
pop
mov
sbb
pusha
sbb
cmp
outsb
fstpt
pop
ss
daa
shll
jb
cmp
cmp
clc
cmp
sub
inc
dec
inc
inc
cmp
aas
inc
cmp
add
cmp
pop
mov
lret
out
pop
in
test
cmp
push
lds
imul
and
pop
aas
cmp
imul
outsl
adc
cmp
and
fcomi
idivb
inc
outsb
daa
jo
cmp
jle
outsl
gs
push
daa
jo
pushaw
cmp
and
jo
or
push
inc
inc
cmp
fcmovnbe
jne
push
insl
pop
mov
mov
cmp
cmp
ds
cmp
idiv
filds
push
push
aas
sub
cmp
pop
ja
test
cmp
dec
cmp
add
xchg
in
imulb
and
push
add
xchg
outsl
fs
inc
dec
mov
daa
pop
mov
sti
addr16
cmp
push
ja
imul
insb
mov
loope
dec
cmp
pop
ds
cs
fisubrl
push
inc
cmp
ss
imul
das
cs
xchg
sbb
cmp
lock
fildl
sbb
in
or
pop
push
imul
hlt
lods
sub
push
cmp
bound
outsl
push
insl
outsb
pop
outsl
jb
scas
out
loopne
inc
cmp
ds
xlat
ds
addr16
dec
ds
xor
dec
inc
inc
inc
cmp
xchg
sub
jbe
xchg
sbb
add
shl
cmp
push
ja
aad
sub
pop
aas
xchg
or
mov
push
pop
pop
outsl
bound
rcrb
push
cmp
push
fcomi
mov
popa
pop
test
lock
cmp
sar
push
push
cmp
sub
pop
or
push
dec
movsl
push
inc
mov
dec
lea
and
sbb
std
inc
mov
outsl
sub
jo
out
lret
push
nop
in
dec
xchg
adc
dec
jo
cmp
mov
dec
jg
cmp
inc
inc
dec
inc
dec
out
stc
xchg
arpl
imul
das
inc
pop
jb
imul
cmp
jbe
pop
pop
push
aas
adc
inc
cmp
mov
jbe
mov
push
pop
loopne
add
cltd
outsl
mov
outsb
or
add
push
push
cli
in
data16
inc
lcall
inc
out
cmp
mov
sbb
popa
jl
sbb
enter
add
jo
adc
or
lahf
jo
mov
popa
jo
stos
shrb
or
outsl
clc
push
bound
add
dec
dec
dec
aas
dec
push
sub
pop
pop
aas
push
jnp
sub
add
push
fwait
mov
imul
pop
pop
pop
data16
subb
sti
and
jg
mov
data16
inc
dec
inc
xor
daa
pusha
in
push
mov
lcall
pop
out
pop
adcl
mov
stc
pop
sbb
jbe
jecxz
movsl
nop
jp
jge
decb
push
test
jle
jle
decb
push
insb
dec
dec
scas
push
outsb
adc
in
mov
pop
arpl
push
ss
cmpsb
pop
fucomp
subb
outsb
mov
push
push
insl
push
js
popf
lcall
leave
insb
fldpi
daa
lret
insl
mov
cld
outsl
das
cmp
dec
imul
std
incb
add
xchg
outsb
pop
loop
push
clc
inc
add
mov
imul
popa
arpl
aas
imul
jbe
push
pusha
imul
inc
pop
xor
sub
xlat
pop
xchg
adcl
xchg
popa
jae
jbe
add
push
fdivrs
inc
cmp
xchg
xchg
pop
jo
inc
mov
lret
dec
imul
inc
push
gs
xchg
mov
jne
push
gs
inc
repz
jb
bound
pop
push
jge
adc
leave
ficompl
fwait
cld
inc
jo
dec
sbbb
push
jbe
inc
jg
notl
pop
push
dec
sarl
push
push
jo
jb
push
pop
xor
outsl
and
mov
insw
ds
insl
popa
subl
mov
adc
callw
mov
outsl
pusha
xchg
pusha
mov
lea
aas
pop
insl
popa
pop
cltd
clc
fsubl
cmp
sbb
jo
shrb
sub
jb
mov
sub
pop
pusha
jmp
and
bswap
push
std
or
xchg
adc
sar
lahf
int3
mov
loopne
scas
mov
icebp
or
incb
aam
in
iret
lods
shlb
mov
mov
leave
jmp
ret
inc
leave
mov
mov
dec
mov
mov
int
into
btc
mov
arpl
mov
ja
iret
dec
incb
fisttpll
ret
shl
fnstenv
cld
mov
in
mov
ret
jmp
rclb
popf
mov
mov
mov
mov
mov
sahf
lods
mov
int
scas
mov
mov
fcmovb
mov
ret
mov
stc
xlat
stos
mov
cmpsb
mov
sahf
scas
mov
roll
lods
movsl
mov
mov
test
and
inc
inc
stos
enter
mov
int
xchg
jg
inc
lods
lret
xlat
mov
in
ror
incb
mov
cli
scas
aad
ljmp
mov
sarb
jg
call
test
mov
pop
repnz
in
mov
mov
mov
enter
xchg
psubw
mov
lods
mov
scas
dec
incb
mov
mov
mov
mov
cld
rol
scas
enter
lahf
int
rol
cli
mov
mov
clc
lods
hlt
ret
out
ret
cmpsb
mov
in
iret
out
mov
int
sub
in
mov
mov
mov
and
mov
mov
iret
mov
dec
out
mov
int3
shll
mov
pop
int3
icebp
lret
movsl
and
enter
leave
hlt
lret
int3
mov
inc
jle
aas
mov
lahf
ror
mov
ret
mov
ret
ret
fwait
enter
mov
stos
dec
mov
scas
cmpsl
and
nop
pop
mov
scas
test
outsl
or
jle
loope
mov
jle
psubw
icebp
leave
movsb
lods
scas
out
mov
scas
test
shl
mov
lahf
rcr
mov
in
repnz
loop
stos
mov
lods
scas
mov
enter
scas
test
dec
inc
jle
aas
mov
lods
rcll
bnd
lahf
scas
test
in
stos
cmpsl
enter
mov
mov
int
lahf
mov
mov
fld
repz
and
ret
test
adc
popa
jg
insl
outsl
fs
dec
mov
adc
or
mov
mov
sub
pop
jbe
and
fisubrl
push
sar
repnz
das
jg
cs
xor
dec
dec
dec
inc
and
jg
lret
mov
stc
std
mov
idiv
fsin
jo
lea
xor
sub
in
dec
jl
push
daa
jae
data16
mov
or
cltd
pop
cmp
cmp
outsl
dec
data16
pop
popf
cld
popa
std
es
or
insl
clc
xlat
arpl
addr16
stos
add
adc
jae
sbb
adc
call
and
cwtd
shrb
lcall
outsl
pop
and
and
pop
imul
sbb
int3
mov
push
push
mov
mov
pop
mov
ficoml
cmp
inc
add
pop
sbb
mov
pop
jno
cmp
loop
add
test
xor
or
lods
adc
push
pop
gs
pop
jge
push
inc
pusha
cmp
insb
lea
push
sbb
dec
pop
ss
mov
out
push
push
xlat
inc
aas
jo
pop
cld
lods
mov
inc
dec
orl
jo
dec
dec
test
mov
xchg
cld
push
jno
sbb
imul
and
fists
das
push
and
insl
out
push
inc
ds
adc
mov
inc
fistpl
push
mov
lahf
push
push
or
adc
fildl
push
sbb
sbb
dec
push
dec
sub
push
ds
cmc
push
or
jno
sbb
add
in
pop
mov
sub
or
adc
fildll
subb
pop
jns
sub
dec
dec
sub
add
and
add
das
mov
mov
or
and
sbb
or
daa
cs
or
pop
add
mov
dec
fs
sub
or
cmp
push
adcb
out
pop
imul
ret
inc
popa
bound
cmp
pop
xchg
dec
cld
incl
push
sbb
pop
inc
push
push
dec
sub
cmp
test
inc
sbb
xor
cmp
jg
imul
and
inc
outsl
insl
sub
arpl
mov
pop
mov
push
ja
es
push
push
add
mov
roll
je
aad
jo
inc
pop
jo
sub
ja
lea
mov
pop
in
out
insb
sub
call
pushl
outsl
insb
insl
or
sub
sub
sub
and
nop
xor
xchg
sub
fnstsw
pop
pop
push
jo
es
adc
or
ret
pop
sub
sub
pop
mov
mov
sti
into
pop
cmp
mov
ljmp
cmp
fimull
or
push
sub
push
pusha
xor
adc
shrb
jbe
inc
mov
mov
loope,pt
or
arpl
add
rcrl
aas
xor
xor
xor
insb
jne
arpl
pop
pop
mov
or
pop
xor
adc
xor
pop
das
pusha
sub
out
cli
inc
push
fistpll
imul
pop
pop
imul
es
pop
cmp
insb
cmpsl
cmp
cmpsl
ja
call
xor
dec
stc
pop
imul
fld
xor
dec
js
aaa
sbb
adc
les
add
pusha
mov
lret
cmpl
sub
pop
das
sub
and
pusha
sub
lea
mov
arpl
cmp
mov
and
cmp
and
test
das
repz
cmpsl
and
dec
fidivs
test
xor
sub
enter
xor
xchg
xchg
sbb
xor
mov
out
negl
pop
pop
jo
xchg
jae
jb
inc
ss
xor
lods
jae
je
sbb
push
push
shlb
imul
xchg
fcmovu
sbb
fdivrs
sbb
dec
dec
fs
pop
fs
dec
inc
pop
lea
pop
or
fwait
std
mov
repz
imul
dec
cmp
loope
jge
jb
popa
jb
rcll
adc
dec
imul
fdivs
lds
dec
jecxz
push
cmp
and
jmp
fs
inc
scas
movsl
das
imul
inc
inc
aas
xchg
push
mov
fisubl
mov
sarl
sbb
cmp
dec
mov
ja
mov
sbb
outsl
filds
mov
arpl
aas
fldenv
cmp
mov
inc
jg
outsb
push
daa
lahf
sbb
pop
pop
popa
dec
invd
cmp
mov
dec
imul
subb
add
je
insb
jae
push
pop
or
aas
aaa
insl
jbe
inc
sub
outsl
jecxz
pop
ret
pop
fdivs
div
aas
xor
hlt
in
push
jmp
adc
inc
pop
mov
dec
cmp
inc
mov
jne
imul
push
int
fcmovnb
cld
loope
and
aas
push
jg
mov
mov
arpl
sub
das
sub
filds
ds
inc
inc
inc
adc
jmp
inc
dec
push
dec
push
push
push
push
push
xchg
mov
push
pushaw
insl
mov
push
sub
shll
outsb
ja
js
push
stos
call
push
ds
jb
pop
cmp
arpl
adc
inc
cmp
push
mov
dec
dec
jg
aas
cmp
push
test
jo
jne
arpl
arpl
adc
jno
ds
gs
imul
imul
outsl
cmp
inc
aas
dec
inc
es
inc
aas
push
sti
inc
addr16
jg
sbb
cmp
cmp
imulb
popa
adc
jbe
sub
je
ja
xchg
adc
xor
jle
jmp
jne
inc
ds
push
aas
and
inc
pop
insl
daa
xor
rolb
inc
fnstenv
lock
popa
cmp
inc
cmp
sub
gs
scas
add
shr
and
stc
add
push
add
inc
out
mov
inc
or
pushf
bound
pop
add
jg
add
push
add
jae
sti
jg
out
aaa
arpl
mov
and
sub
daa
xor
or
and
push
push
jl
sub
push
cs
jo
dec
inc
add
addr16
inc
in
lea
fwait
pop
adc
popa
popa
callw
orb
mov
mov
jns
inc
sub
dec
outsb
out
cmpl
pop
jne
or
add
lods
sbb
or
dec
adc
inc
outsl
sub
push
mov
leave
cmp
testl
pop
cvtpi2ps
jg
lds
js
pop
xorb
or
push
enter
sub
push
pop
pop
je
sub
sub
pop
test
jp
pop
popf
sub
sub
push
inc
add
wbinvd
sub
sbb
sbb
cmp
call
das
dec
cs
sub
sub
sub
sub
incl
decl
sub
sub
fbstp
js
cwtl
cs
xor
sub
ljmp
add
sub
cs
das
dec
xor
xchg
sub
xor
xor
sub
xor
lcall
jge
mov
xor
xor
xor
in
xor
xor
sub
and
xor
sub
xchg
xor
xor
cs
xor
call
mov
add
aas
xor
ss
xor
mov
aaa
push
aaa
icebp
ljmp
aaa
lods
cmp
sbb
sbb
sub
ss
cmp
dec
cmp
ljmp
mov
cmp
cmp
cmp
cmp
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
cmpb
cmp
cmp
cmp
cmp
jg
cmp
xor
adc
sbb
cmp
mov
pop
decl
addr16
mov
and
xchg
adc
xor
xchg
mov
das
fnsave
fbstp
adc
xorl
xor
xor
cs
xor
call
jbe
test
mov
popf
xor
cs
xor
xor
ss
call
xor
ss
out
das
lock
xor
dec
xor
insb
xor
mov
xor
xor
stos
xor
xor
aaa
cmp
cltd
fidivl
fnstsw
call
test
aaa
aaa
sti
adc
and
push
mov
cmp
test
xchg
xor
cmp
cmp
cmp
cmp
pushl
cmp
cmp
xor
cmpb
mov
cmp
cmp
cmp
fnstsw
dec
ss
jb
addr16
mov
int3
cmp
cmp
and
call
pop
cmp
dec
cmp
mov
ds
cmp
lds
fstpt
movsl
inc
cmp
sub
sub
sub
jecxz
ljmp
inc
sub
test
sub
cs
sub
sbb
and
xor
inc
aaa
pop
sub
pop
adc
outsl
das
jnp
subl
cld
mov
call
xor
jle
adc
xor
sub
or
xor
test
stos
sub
xor
sub
jg
pop
jle
xor
lea
mov
shll
xor
sub
xor
loope
xor
addr16
movsb
xor
loop,pn
dec
repz
xor
xlat
xor
lea
xor
pushl
fidivs
sbb
xor
aaa
inc
cmp
pop
aaa
mov
jg
cmp
xor
call
aaa
cmp
cmp
cmp
xor
sbb
xor
inc
cmp
jge
xchg
cmp
xor
cmp
cmp
fnstsw
fildll
cmp
jno
xchg
cmp
cmp
in
pop
cld
in
xor
push
xor
ljmp
cmpb
cmp
in
cmp
pop
jae,pt
xorb
pop
cmp
cmp
aaa
lock
cmp
incl
dec
loope,pt
das
and
xor
sub
movsl
lea
xor
mov
sub
sub
hlt
das
lods
and
cs
lea
xor
pushl
sub
push
xor
sub
cs
das
dec
xor
jg
xchg
das
call
xor
sub
test
xor
sub
das
dec
xor
mov
xchg
sub
das
shlb
xor
xor
sub
xor
insl
test
xor
push
xor
loope
std
mov
cmpsl
aaa
clc
stos
xor
pusha
pop
push
cmp
aaa
scas
cmp
xor
mov
cmp
cmp
mov
add
cmp
cmp
pop
cmp
pop
cli
fstpt
cmp
cmp
cmp
dec
cmp
push
loopne
dec
mov
and
std
dec
daa
mov
xor
lods
xor
fbstp
loopne
lock
ljmp
cli
add
or
or
ss
aaa
cmp
inc
xor
outsb
aaa
call
xor
cmp
and
es
xor
mov
aaa
jbe
jge
fwait
xor
les
int
pop
pop
jle
pop
in
cmc
xor
ss
cmp
jg
filds
aaa
xchg
cmp
mov
cmp
cmp
adc
ss
repnz
inc
cmp
xor
cmp
jg
mov
cmp
inc
das
ret
xchg
cmp
mov
cmp
xor
cmp
cmp
push
dec
cmp
push
cmp
insl
sti
xchg
sub
pop
cmp
cmp
icebp
jg
iret
cmp
aaa
xor
sti
cmp
cmp
pop
ficompl
cmp
arpl
jmp
aaa
and
outsl
je
mov
aaa
arpl
jnp
mov
lcall
add
sbb
fdivr
pushl
dec
xor
jne
test
fwait
xor
cs
testl
or
xor
xchg
sub
jl
es
std
push
xchg
add
sub
or
jae
outsl
out
jg
xchg
inc
cs
or
pop
add
incl
xchg
je
add
dec
dec
pop
push
outsl
std
insl
sub
data16
popa
jb
pop
add
je
jno
jae
pusha
decl
cli
and
lret
shll
shl
das
jnp
mov
jb
jae
pop
push
imul
push
outsl
jg
outsl
push
outsl
popa
insl
sbb
arpl
add
fldt
add
mov
test
arpl
fs
and
jo
frstor
in
jae
arpl
arpl
imul
xlat
mov
imul
outsb
xor
pop
andb
mov
mov
add
jns
or
inc
insl
imul
jns
jo
and
push
jb
jns
jbe
dec
xor
xor
sub
push
gs
frstor
fldl
dec
popa
fmull
aas
jb
outsb
cmp
mov
and
outsl
outsb
imul
jae
faddl
imul
inc
adc
popa
gs
jg
bound
sti
addr16
gs
popa
push
ds
pop
outsl
mov
mov
jns
push
push
adc
mov
fldln2
jns
dec
jmp
inc
fs
imul
dec
add
mov
xor
push
outsb
je
inc
inc
mov
lods
mov
cmp
jb
adc
fcomp
jnp
inc
outsl
sub
cmp
push
or
push
inc
push
or
in
out
mov
sbb
dec
jae
mov
xor
lds
divps
or
push
or
fisubrl
mov
inc
jmp
outsl
dec
push
and
mov
push
sti
imul
out
shll
jne
dec
mov
imul
incl
fucomi
and
add
or
add
add
add
mov
inc
inc
push
pop
push
gs
addr16
push
fs
mov
sbb
fcmovnbe
add
adc
xor
xor
add
xor
add
ja
das
mov
push
pop
or
in
jnp
fcmovnu
daa
add
ja
outsl
add
repnz
ficomps
sbb
iret
cmp
pop
lcall
pusha
inc
repz
sbb
cmp
fistpl
into
add
cli
imul
sti
divb
or
push
add
dec
popa
lcall
xorl
add
pop
add
mov
mov
xchg
add
pushl
add
mov
in
add
and
rorl
xchg
cld
push
ret
dec
add
test
adcb
sub
iret
je
sbb
and
pusha
invd
sub
orl
call
aad
cmp
out
or
pusha
movsl
add
or
inc
dec
push
fs
nop
add
mov
add
pusha
sub
inc
xchg
pop
inc
add
incl
rolb
nop
add
xchg
inc
adc
das
sub
cltd
shlb
jns
repz
incl
mov
dec
add
add
add
aas
add
jg
sub
sti
ljmp
mov
add
add
push
add
jb
jbe
mov
add
add
add
add
mov
inc
jb
popa
je
inc
imul
outsb
addr16
sti
in
std
scas
or
gs
pushw
push
inc
insb
jne
push
add
insl
and
je
push
imul
gs
dec
push
add
mov
sar
jae
dec
popa
outsb
fs
imul
std
jb
jbe
inc
js
and
jo
outsb
leave
dec
popa
insl
inc
inc
or
jb
mulb
xlat
test
push
jb
arpl
outsb
or
fcomps
jne
outsl
dec
jae
test
jo
outsb
outsw
adc
fstpl
add
xchg
mov
pushf
insb
adc
adc
inc
mov
xchg
push
jns
and
gs
in
fistpl
jnp
push
xchg
jae
outsl
outsb
mov
sbb
fs
dec
outsl
popa
fs
out
fcmovbe
push
fstpt
mov
fldl
mov
fisttpll
adc
icebp
jbe
push
outsl
outsl
insb
in
xor
push
lock
ret
outsl
je
sub
cmp
pop
push
jl
mov
jmp
in
call
lcall
lcall
incl
or
call
leave
adc
mov
mov
fcomi
mov
decl
or
and
or
incl
mov
jp
call
and
incl
sbb
ljmp
insl
repz
and
inc
sub
push
push
jns
aaa
xor
jmp
call
adc
xchg
sbb
xchg
xorl
das
or
mov
xor
xchg
lock
push
mov
fistpl
push
adc
add
mov
fisttpl
test
jno
mov
insl
dec
add
mov
mov
cmp
movsl
dec
mov
mov
adc
lcall
or
push
andl
shrb
mov
cli
or
out
mov
inc
das
sbb
or
repnz
xor
lcall
fcomps
data16
gs
jo
pop
push
out
jb
adc
ud2
pop
je
stos
clc
wbinvd
pop
data16
or
mov
or
add
sub
and
mov
jb
insl
mov
jb
jae
arpl
outsb
ja
jge
or
jo
je
subb
xchg
insl
xorl
or
sti
icebp
out
push
insl
bound
xchg
ja
or
jbe
cmp
dec
imul
jns
jmp
ret
inc
inc
js
inc
jb
dec
aam
std
fmul
pop
jo
outsb
je
je
insl
mov
into
in
pop
push
jae
sbb
sbb
sbb
inc
outsb
sbb
cbtw
and
dec
je
sbb
jo
or
jne
mov
mov
push
out
push
movl
push
mov
push
dec
fs
or
ljmp
xchg
lret
fsubrl
pop
movsb
cmp
sbb
push
in
or
lods
imul
sub
inc
mov
add
sbb
pop
lods
jbe
jg
add
add
add
add
out
lock
or
adc
add
bswap
mov
out
add
xor
sbb
idivb
adc
jns
arpl
push
aaa
dec
inc
and
inc
add
pop
popa
push
cs
add
gs
nop
fists
dec
cwtl
pop
pusha
jb,pn
popa
je
mov
xchg
push
cs
ficomps
mov
fidivs
jae
or
repz
lock
fimuls
add
add
inc
mov
incl
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
