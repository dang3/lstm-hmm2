mov
leave
decl
inc
inc
add
nop
movl
incl
mov
push
movl
add
sti
jae
call
add
push
mov
fdivrs
inc
mov
call
imul
lret
sub
lea
or
sti
rep
sbb
push
adc
adc
and
inc
data16
fimuls
dec
pop
and
add
in
fstp
popa
mov
cwtl
jno
iret
mov
insl
pop
push
add
add
add
fcomp
jne
push
add
or
sti
lcall
inc
add
add
ret
mov
push
push
adc
inc
fstps
push
imul
lods
jl
mov
sub
je
mov
or
neg
in
add
inc
ret
lea
imulb
push
or
sbb
pusha
scas
sti
push
push
push
push
adc
xchg
mov
sarl
rclb
mov
call
popf
jne
arpl
mov
call
neg
sbb
add
mov
cmp
fldl
stos
test
insl
das
and
sarb
gs
movl
pop
sbb
ja
add
mov
or
fmull
fsubl
ret
jmp
fldz
cmp
add
dec
out
add
fsubrl
mov
aas
push
or
ret
pop
add
xchg
lahf
push
push
mov
and
test
int3
jl
or
push
xchg
mov
cld
lea
btc
mov
inc
dec
push
testb
decl
mov
dec
test
je
mov
lea
adc
push
xor
mov
add
add
xchg
pop
fs
or
jne
and
call
out
rol
or
dec
push
scas
mov
adcb
fsubrl
push
rclb
mov
orl
data16
sub
pop
in
ret
sbb
sub
insl
mov
add
adc
sbb
iret
sbb
cmp
add
int
mov
sbb
test
jne
sbb
lea
shr
push
ss
pusha
xor
in
sarl
scas
cmpw
jne
lret
push
pop
cmp
sbb
neg
add
or
insl
dec
jbe
sub
push
or
lcall
mov
pop
and
and
divl
test
push
push
clc
pop
ss
lock
sub
adc
mov
mov
mov
jbe
rclb
or
mov
cmp
mov
test
mov
or
popf
push
data16
jbe
add
adc
jecxz
add
xor
je
add
jl
mov
movsl
push
rorb
rep
stos
mov
sbb
aam
cmpsl
sbb
mov
mov
iret
push
loope
add
inc
mov
mov
push
scas
not
sub
stos
rorl
cmp
fidivrl
shr
rep
xor
loope
rep
out
push
scas
and
in
cs
out
lea
pop
dec
sbb
jo
push
sbb
aas
adc
sub
jne
push
sub
inc
xor
cmp
sub
adc
add
xor
or
add
dec
inc
and
mov
push
push
mov
adc
clc
pushl
push
imul
add
inc
rolb
cmp
inc
add
or
lcall
jl
lcall
adc
xlat
rcr
cld
jl
stc
stc
ja
int3
daa
in
add
mov
push
push
inc
fcoms
jmp
mov
sbb
mov
add
lcall
test
xchg
xor
or
lock
jno
in
cmp
clc
push
sbb
mov
sbb
cmp
add
mov
orb
xlat
jl
int
cmpl
fwait
insl
jbe
movlps
stos
push
lods
sub
ror
outsl
or
in
js
pop
inc
add
dec
mov
pop
lea
sete
mov
push
lea
mov
lea
insb
imul
sub
mov
pop
mov
cmp
mov
fcmovnb
push
push
popa
out
mov
jecxz
add
mov
sub
ds
adc
sub
mov
mov
adc
push
std
sub
fcmovb
pop
call
mov
call
or
cmp
push
stos
imulb
or
push
inc
repz
shld
lock
sbb
aad
cmp
leave
add
inc
incl
lea
mov
push
or
pushw
push
sbb
or
sub
shll
mov
push
adc
xchg
jo
cs
js
xor
loope
cmp
fstpt
adc
adc
pop
xchg
inc
pop
mov
mov
adc
in
pop
jb
lret
jns
popf
mov
fdivr
sbb
push
mov
xchg
cs
push
test
cltd
cwtl
outsb
in
fcoms
cmp
add
pop
push
fwait
sub
sub
and
mov
fimull
xchg
fs
or
mov
mov
xchg
lods
aad
mov
pushf
adc
mov
dec
movsl
lret
pop
sbb
lods
sbb
mov
dec
pop
mov
dec
jle
lea
pop
pushl
cmp
mov
adc
ret
testb
lcall
in
cmp
mov
jbe
testb
ret
je
mov
xor
jmp
push
mov
or
xchg
stos
push
adc
sub
or
or
leave
xor
or
dec
add
movb
in
insb
sbb
dec
mov
lea
dec
movsb
push
add
and
test
add
mov
dec
mov
push
dec
sar
cmpsb
push
popa
imul
lahf
inc
ljmp
ss
add
cmpb
jne
test
jle
jae
fldt
dec
jns
add
das
inc
outsl
xlat
push
insb
ljmp
jmp
into
ret
hlt
leave
mov
push
ja
mov
int
sbb
mov
sbb
mov
shll
sub
mov
mov
xor
jmp
and
add
add
iret
adc
mov
sub
imul
sub
cmp
jb
inc
out
pop
aas
sub
sub
bound
mov
adc
adc
cmp
mov
lret
lds
pop
inc
mov
jne
push
scas
push
inc
add
push
xor
xchg
cmpsl
push
ss
pushf
shll
push
mov
call
or
scas
jb
push
xchg
cli
push
add
xor
jl
bound
sahf
sbb
daa
push
dec
sbb
pop
jb
test
sti
push
sbb
es
adc
sbbb
out
ds
xchg
push
xchg
xor
push
fsts
pop
ret
cmp
sbb
xor
add
aam
sub
js
pushf
mov
fisttps
adc
add
pop
or
add
mov
out
nop
pop
cli
and
push
mov
cld
mov
adc
int
shlb
or
mov
or
imul
cmp
mov
push
xor
xchg
mov
and
cmp
adc
add
sbb
push
mov
lods
add
jnp
adc
push
lods
xchg
push
mov
or
ja
push
adc
ret
test
sbb
push
sub
call
jp
push
add
add
or
shrb
enter
xchg
xor
push
xchg
loopne
push
adc
sbb
add
andb
dec
pop
add
in
fimull
inc
mov
mov
cli
or
or
push
out
mov
cmpsb
jmp
mov
cmp
subb
aaa
mov
mov
notb
inc
push
sbb
push
imul
xor
in
test
fwait
arpl
loopne
fsubp
add
mov
jb
add
loopne
pop
xchg
ds
test
das
sbb
push
cmp
cmp
scas
adc
sarb
add
pop
mov
mov
add
out
sti
imul
aaa
or
push
sbb
adc
push
pop
pusha
clc
adc
insb
out
mov
xchg
dec
or
jl
scas
faddl
adc
js
scas
cmpsl
mov
sub
mov
sarl
outsb
xor
hlt
sbb
cmp
jne
sbb
sub
popf
shll
lcall
adcl
mov
sub
add
add
sbb
and
or
iret
mov
add
sub
sub
sbb
gs
add
or
xor
stos
push
sbb
xorl
and
movsb
sahf
xor
cmp
sbb
cmp
lods
into
push
xchg
in
js
aaa
push
cmp
imul
mov
cmp
aad
add
insl
insb
nop
mov
push
add
pop
lea
jmp
push
ss
movb
and
mov
pop
or
int3
mov
pop
aad
xchg
jmp
pusha
int3
insl
fstl
xchg
fs
sbb
fs
cs
xorl
dec
and
xor
loop
mov
rclb
mov
lock
mov
sub
sbb
hlt
lcall
xchg
mov
push
jmp
sarl
push
jecxz
dec
and
lds
or
add
mov
in
cmp
or
rol
testb
cmpl
enter
pop
add
push
xchg
mov
jecxz
adc
mov
adc
lods
testb
pop
cli
adc
shll
add
adc
rcrl
bound
mov
push
pusha
sub
sub
js
je
adc
fnstsw
jo
leave
mov
push
and
adc
jb
push
jp
dec
cmp
insb
fsubrl
mov
mov
cmp
movsb
jnp
notl
jne
cmpl
sbb
cmp
addr16
insb
mov
adc
jg
int
mul
push
mov
pop
and
and
fidivrl
push
push
sbb
fildll
sbb
ret
push
push
pop
mov
in
push
fdiv
clc
dec
pushf
xor
adc
jle
adc
shrl
inc
cltd
sub
mov
in
fistl
fwait
adc
push
fisubrs
aam
mov
fistpl
fs
mov
or
or
cmovno
movups
lds
sgdtl
or
xor
push
enter
nop
mov
or
inc
sbb
clc
test
pusha
pop
pushf
shll
and
sub
sub
cmpsb
adc
fcompl
pushf
cmp
sbb
adc
mov
bound
push
inc
jl
dec
mov
inc
mov
xchg
cmp
dec
call
xor
mov
mov
cmp
fwait
inc
xorl
xor
jns
dec
sahf
and
and
in
sub
sahf
adcl
dec
adc
and
or
lea
mov
add
pop
and
test
enter
xchg
push
call
jnp
pop
aam
push
add
mov
add
mov
lock
outsb
inc
nop
jno
jb
test
stc
or
cmp
cmp
add
out
ss
mov
mov
cs
and
push
std
cmp
cmp
mov
lret
add
pop
out
jne
add
or
mov
sub
shll
call
adc
lock
push
lods
push
lods
call
add
mov
pop
sub
sbb
and
inc
in
mov
test
ror
pop
xchg
or
push
bound
outsb
cld
cmp
inc
inc
xor
ss
cmp
arpl
sub
mov
sbb
add
lods
prefetch
pop
fidivs
pop
push
push
push
sti
jae
adc
lea
das
pushf
lret
out
add
repz
xor
insb
inc
movsl
jle
pop
mov
movb
into
sub
sub
invd
or
loope
push
ficoml
pop
sti
mov
pop
xchg
movsl
out
cmp
dec
adc
or
cmp
xchg
or
pop
int3
or
mov
outsb
mov
pop
out
lds
inc
push
push
int
xchg
push
or
add
sub
test
movsb
ljmp
aas
sbb
cmp
or
jl
pop
or
pop
jne
xor
or
xchg
je
ss
jecxz
push
jmp
inc
pop
pop
dec
xor
insl
jnp
aam
leave
jae
daa
jne
push
rolb
call
sti
mov
mov
add
mov
pop
mov
add
cmp
jb
dec
pop
mov
xchg
inc
cmp
jg
arpl
mov
lods
or
and
and
sub
fs
fcom
fs
shrb
int3
enter
fs
mov
test
fs
fs
mov
cmpb
fs
push
fs
pop
pop
push
fs
dec
inc
inc
fs
xor
fs
and
fs
adc
out
fs
rolb
inc
jl
lahf
iret
pushf
inc
mov
inc
lods
inc
fs
mov
mov
mov
rol
int3
enter
hlt
inc
aam
loopne
enter
call
xchg
mov
clc
cld
add
sub
call
pop
lods
jnp
aam
aad
pop
ret
push
mov
and
fistl
sub
cmpsl
pop
add
ret
push
add
xorb
add
ss
inc
xorl
mov
xor
mov
ljmp
mov
idivb
incl
call
fstpt
fmuls
or
xorl
or
loopne
xchg
mov
sbb
inc
mov
dec
sbb
or
sbb
xchg
jae
fcmovu
mov
lea
test
add
jbe
push
add
sbb
xor
sti
mov
outsb
xor
and
inc
or
add
or
repnz
jbe
aam
dec
das
jge
pusha
movsb
cld
inc
testb
in
movzwl
cli
out
aam
push
sub
jbe
jmp
push
pop
pusha
push
push
xlat
insl
pop
mov
push
push
imul
imul
aam
inc
in
mov
mov
mov
cld
and
add
or
lcall
lds
push
dec
out
outsl
add
das
mov
lea
add
sbb
mov
push
mov
sub
jl
dec
cld
test
mov
mov
or
ss
jmp
push
xor
pop
fsubr
push
xor
xor
jo
jb
mov
sbb
push
inc
lea
adc
popf
jecxz
mov
push
int3
add
std
adc
mov
dec
fdivr
aaa
inc
fiadds
or
dec
aas
and
in
or
add
inc
push
out
dec
add
dec
add
mov
mov
imul
insb
frstor
dec
add
and
xor
xor
daa
call
adc
sub
shll
nop
cmpsb
mov
mov
int3
mov
sbb
adc
pop
adc
pop
cs
or
or
sbb
in
adc
or
mov
mov
das
mov
add
fdivl
lret
in
adc
nop
xor
adc
add
lcall
das
dec
cmp
or
sub
addr16
sub
push
pop
in
jmp
jns
aaa
adc
addr16
movhps
shlb
xchg
pop
sbb
xchg
xlat
jne
mull
push
addl
scas
xlat
xor
lcall
xlat
insb
fwait
lock
or
icebp
testl
xlat
jne
or
test
jno
jbe
xlat
das
mov
pop
push
push
addr16
xlat
je
mov
movsl
arpl
fnstenv
adc
inc
adcl
mov
scas
arpl
sar
or
out
jne
xlat
mov
inc
aas
dec
lahf
imul
hlt
dec
out
cmpsb
imul
imul
fnstenvs
push
dec
adc
sub
lcall
add
dec
add
cmpsb
imul
mov
clc
dec
in
les
imul
xchg
add
and
inc
add
adc
jnp
mov
pop
inc
loope
or
cmpsl
nop
fsubp
das
inc
mov
aaa
pop
mov
shl
pop
mov
lods
add
pop
mov
adc
scas
pop
mov
scas
push
fs
pop
inc
push
xor
shll
cmp
xor
shrl
sub
sbb
fnstenvs
das
clc
pop
add
repnz
mov
enter
pop
fcoms
add
add
pop
sldt
insb
cs
and
and
das
pushf
xor
test
jmp
mov
test
jle
imul
imul
scas
jmp
adc
ss
xor
shrl
and
sbb
fnstenvs
xor
push
cwtl
imul
andb
and
fsubrl
pusha
fildll
cmpsl
add
and
inc
das
xor
inc
daa
inc
push
orb
push
leave
nop
nop
mov
mov
js
in
or
dec
cld
dec
or
scas
push
dec
loop
dec
es
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
cltd
dec
es
leave
fs
leave
leave
xor
xchg
leave
xor
aas
and
inc
push
inc
push
dec
xor
cs
insb
push
fs
fimuls
or
adc
lahf
incl
leave
icebp
les
inc
push
mov
std
stc
cli
cld
push
stc
out
out
idiv
std
add
clc
cmp
stc
sti
hlt
jg
inc
cld
or
or
mov
enter
ljmp
test
sbb
pusha
outsb
push
push
pop
imul
insb
insl
sbb
pop
insl
jae
pop
cld
jmp
data16
dec
dec
sbb
pop
bound
les
sbb
jg
imul
mov
pop
or
ret
mov
pop
out
out
adc
push
les
add
mov
or
outsl
mov
mov
mov
mov
cmpsb
imul
dec
aas
adc
add
adc
mov
sbb
sub
add
add
push
pushf
lcall
jmp
sbb
decb
push
jb
imul
sub
sbb
pop
call
std
or
pop
clc
dec
xchg
push
or
lock
pop
leave
mov
jo
sbb
add
adc
push
scas
nop
cld
sub
jb
lahf
in
dec
sti
jg
nop
out
dec
daa
add
pop
sub
pop
outsl
dec
shll
pop
testl
lret
mov
popa
pop
outsb
pop
cld
cmpsb
je
mov
push
shlb
pop
sbb
pusha
adc
or
std
jno
mov
outsl
pop
pushw
fs
lcall
sub
dec
dec
dec
dec
cs
dec
lcall
std
push
push
pop
add
outsb
add
cli
adc
repz
xor
mov
dec
push
clc
setnp
inc
stc
loope
dec
in
in
outsl
outsl
adc
loop
in
dec
cmp
jb
or
add
dec
out
dec
pop
test
enter
cli
jb
loop
dec
sbbl
mov
repnz
dec
divb
dec
push
cld
push
sahf
imul
push
mov
addb
cli
dec
int3
in
dec
cli
jno
ds
cli
push
dec
push
cli
adc
fsts
adc
mov
insb
sqrtps
pop
dec
xor
sbb
push
push
cs
ljmp
mov
jo
fists
dec
push
or
notl
mov
jbe
imul
dec
adc
jecxz
inc
dec
push
push
or
popa
cld
push
push
pop
pop
or
jecxz
ljmp
call
aaa
sub
xchg
xchg
out
cmpsl
pop
cmpsb
test
cmp
mov
jg
in
mov
adcl
mov
test
sti
paddb
xchg
pop
cmp
dec
arpl
sahf
and
outsb
add
mov
dec
insb
out
mov
dec
mov
mov
or
dec
mov
mov
in
xor
test
test
loop
outsl
aas
cwtl
dec
aas
jle
stc
push
mov
add
dec
inc
arpl
push
mov
sbb
imul
pop
pop
lds
jmp
or
dec
push
push
dec
xchg
sub
pop
push
pushl
sbb
addr16
stc
repnz
sarb
jge
jg
mov
pop
add
or
out
in
stc
lcall
and
xchg
jmp
dec
mov
sti
testl
xor
idivb
in
jae
int
std
dec
dec
cld
iret
or
adc
test
push
ljmp
in
fisttpl
xorb
push
adcl
outsb
clc
jbe
arpl
push
push
jecxz
add
in
jg
stc
in
mov
imul
sbb
xchg
lret
in
out
pop
cld
in
sbb
push
pop
pop
sarl
or
mov
popa
cmp
incl
insl
mull
add
or
push
dec
sbb
mov
in
mov
add
mov
test
jle
add
mov
adcl
clc
xor
add
shrb
out
jae
xorl
add
into
cmpb
rorb
call
sbbl
test
cmpsb
test
je
or
mov
cmpsb
mov
push
std
cli
aad
cmpb
in
divl
sbb
add
dec
fwait
sbb
sbb
gs
pop
loop
icebp
push
and
gs
std
incl
stc
adc
mov
inc
addr16
mov
push
dec
jecxz
inc
pop
ss
data16
sub
cld
dec
lock
in
push
js
fistpl
dec
fs
mov
jg
push
push
bound
pop
push
push
adc
lret
das
mov
inc
rcpps
sbb
sbb
lcall
jbe
icebp
aam
jg
push
insb
xor
adc
decl
add
outsl
or
arpl
add
jecxz
push
dec
popa
sub
mov
inc
rorl
xchg
push
gs
out
sub
mov
sbb
pop
lahf
outsb
int3
push
idiv
sbb
add
clc
std
or
pop
outsb
in
pop
dec
push
add
orb
mull
dec
stc
cmpsl
rorl
cmc
call
outsl
sbb
fstpl
push
jmp
hlt
fistpll
and
cmp
xchg
push
test
mov
push
xorl
push
outsb
and
imull
inc
insl
fbstp
push
or
pushl
shl
ja
test
mov
movsb
movsb
xchg
sbb
cltd
xchg
push
not
push
jecxz
jo
jge
push
outsb
push
xchg
mov
mov
push
xorb
aas
jecxz
arpl
arpl
add
mov
inc
mov
bound
popf
inc
std
stc
jge
and
xlat
imul
dec
cmpsb
ficomps
xor
loopne
mov
push
xchg
sbb
out
arpl
call
loope
insl
and
mov
adc
outsl
sbb
pop
or
push
push
jmp
xchg
pusha
lahf
xor
out
push
mov
jmp
jno
pusha
adc
cli
pavgw
sbb
push
push
outsl
or
inc
sub
std
add
stc
pushl
sub
and
in
dec
push
dec
dec
push
dec
hlt
mov
xor
cmc
cmp
lock
dec
adc
xchg
movaps
adc
push
push
push
push
inc
out
js
fwait
rorl
fnstcw
scas
call
jp
sbbb
sbb
mov
push
mov
push
mov
pop
fsubrs
dec
pop
lret
lret
fldt
popa
cli
cmp
iret
test
fdiv
ret
fistps
jnp
cltd
cmc
popa
sahf
jg
push
add
mov
push
or
std
cwtl
mov
dec
test
in
pop
jcxz
sbb
mov
clc
or
inc
jno
insl
pop
in
sbb
roll
mov
adc
xchg
test
push
mov
add
xor
popl
sub
sar
cmp
jmp
div
ja
and
jle
add
in
aaa
pop
insl
int
and
mov
xchg
and
push
dec
pop
insl
mov
add
mov
jp
or
repz
aaa
incb
pop
jae
xchg
sbb
pop
sbb
rclb
jb
arpl
movsl
push
mov
movsb
xchg
scas
aas
rolb
shrl
push
aaa
xchg
mov
call
xchg
lock
pusha
cmpsb
cmpsb
dec
dec
add
inc
mov
cld
cli
rorb
fld
inc
inc
loop
es
or
pop
das
or
dec
sbb
adc
sbb
jmp
mov
push
add
cmp
insb
loopne
mov
insb
mov
inc
sbb
sbb
push
fnstsw
test
movsl
movsl
test
inc
inc
pop
jnp
daa
test
lds
aaa
lock
shrl
xorl
push
pop
sarl
pop
adc
jp
push
dec
ljmp
test
test
movsl
incb
daa
jo
loopne
add
jle
cmp
pop
or
addr16
jg
cli
push
push
lds
loop
add
pop
ret
cmpsl
inc
je
adcb
jno
arpl
sbb
cmpsb
pop
aad
push
sti
fs
and
lcall
xchg
scas
lods
jns
jmp
cs
movsl
popa
cmpsl
outsb
call
jp
jns
mov
inc
out
ss
dec
add
test
sbb
jp
aaa
ss
jle
lcall
inc
jmp
testl
loop
xorl
jmp
out
inc
in
outsl
lcall
adc
in
out
jl
pop
insb
cmp
and
iret
decl
jo
mov
in
jg
add
insl
add
ds
mov
sbb
mov
inc
jecxz
jecxz,pt
xor
test
dec
inc
in
adc
jg
xor
push
pop
jge
clc
cli
pop
mov
and
cmp
jge
imul
jae
mov
pusha
out
std
cli
pop
gs
daa
inc
dec
arpl
loop
jg
push
jle
sbb
cmp
std
or
mov
pop
sub
hlt
scas
out
xor
jnp
dec
push
mov
cmp
roll
add
imul
push
lret
and
enter
or
jno
sub
in
pop
add
ret
pop
daa
outsb
add
out
mov
jns
std
jmp
fdivs
mov
pop
inc
push
clc
jge
pop
jg
fistpl
pop
jno
fsubs
sbb
sbbl
inc
out
mov
outsl
mov
mov
cmp
cmpsb
sbbb
push
cmc
push
mul
xchg
incl
mov
lock
rorl
lret
dec
test
in
cmp
negb
or
jno
dec
popf
enter
and
fiaddl
lock
xchg
dec
cmc
sbb
fistpll
repnz
hlt
loop
add
insl
out
insl
jecxz
lret
or
enter
adc
call
outsl
aaa
icebp
arpl
cmp
lock
mov
jle
mov
push
sarl
adc
mov
inc
stc
cmc
sub
dec
stc
dec
loope
mov
shrl
testb
int
ja
mov
popa
add
sub
out
dec
mov
and
add
aaa
pop
cs
fcomi
xor
notb
stc
dec
mov
jl
in
imul
lods
stos
or
pop
int3
loope
adc
mov
push
pop
icebp
test
shll
add
cmp
add
push
shlb
shl
mov
xchg
or
outsb
std
and
decl
pop
pop
mov
fbstp
or
mov
xchg
repnz
lret
in
jb
and
je
push
repnz
dec
push
inc
mov
push
fwait
cld
dec
jae
and
dec
pop
lret
in
xor
adcb
cmp
pop
cmc
jns
mov
popa
out
rcrl
pop
cld
jg
aad
call
inc
xchg
jne
ds
stc
je
in
dec
in
cmp
ds
call
das
pop
xor
jne
jge
repnz
decl
std
push
xchg
cli
aas
out
test
pusha
clc
idivl
clc
lahf
lcall
mov
xchg
xchg
pop
pop
pop
test
mov
jecxz
add
adc
jmp
xchg
cli
jb
insb
mov
sbb
fstpl
out
dec
rcll
jg
repz
bound
pop
push
pop
call
lods
enter
faddl
dec
orl
insl
mov
and
add
push
adc
clc
outsl
add
addr16
test
mov
cs
pushf
cmpl
jle
dec
sahf
loop
subl
jg
std
cmpl
mov
inc
add
addl
fistl
cmpl
dec
or
std
iret
stos
icebp
dec
jecxz
mov
fbld
popa
sarb
push
es
and
outsl
jno
out
loope
sar
test
inc
clc
shl
push
loope
std
xchg
xchg
fwait
ret
cmp
cwtl
ret
pop
andb
insl
add
and
imul
cmpl
loopne
mov
out
js
aaa
or
push
cmp
xchg
jle
stos
fisubrs
hlt
jne
sti
sbb
sub
add
add
orl
cld
dec
lahf
out
dec
test
sbb
out
xor
cmp
adc
or
cmp
push
push
adc
dec
pop
clc
roll
cmc
jl
mov
dec
push
mov
wbinvd
mov
sbb
incl
test
bound
ret
stc
jecxz
sub
jnp
add
or
cmp
lea
stos
bound
outsl
ljmp
lahf
jnp
add
les
cld
mov
jl
add
std
out
add
in
pop
popa
xchg
test
add
in
out
and
inc
sti
mov
or
push
push
mov
aaa
cs
mov
pop
add
loopne
clc
inc
jl
add
notl
xor
jo
aad
mov
jo
insl
or
jb
xchg
lret
and
inc
inc
test
clc
xor
pop
imul
out
jnp
or
outsb
or
mov
ds
outsl
cmp
cld
shl
sub
decl
push
pop
mov
add
mov
bound
jg
lds
inc
aaa
inc
cs
inc
pop
outsl
incb
inc
ret
cld
sti
and
hlt
add
add
orb
insl
or
adc
ret
test
dec
or
or
mov
negl
push
xchg
cld
imulb
cld
push
int
cmp
jp
std
mov
pop
xor
or
insl
cld
les
mov
xchg
mov
lea
fstl
sub
pop
push
popa
ficoml
sahf
xchg
sti
dec
mov
jle
add
rorl
jge
cli
sub
loopne
fwait
imul
lea
arpl
notl
mov
mov
stos
ja
xor
xchg
sti
inc
setle
jl
push
xor
jle
add
xor
xchg
not
gs
test
out
push
mov
adc
dec
xor
xchg
xor
nop
dec
repz
mov
jl
lods
cmp
cs
xchg
or
aam
dec
jecxz
cmp
das
push
sub
push
pop
add
cmovp
mov
rolb
outsb
fdiv
lock
jg
push
loope
sub
cmpsl
and
xor
fcmovnbe
dec
arpl
ds
das
sti
mov
ret
cmp
testb
in
xor
divl
add
outsl
int
add
sbb
dec
rorb
lcall
jmp
mov
push
icebp
mov
ret
dec
cmp
push
adc
loope
push
test
xchg
add
add
jle
loope
cs
std
lods
sahf
sbb
inc
out
bound
and
xor
jmp
sbb
mov
jns
dec
xchg
jecxz
mov
pop
push
in
cmp
std
xorl
inc
and
mov
mov
sbb
mov
fucomi
sbb
fstl
sti
sbb
filds
jnp
push
inc
test
pop
cmp
push
test
xchg
daa
lods
xor
xchg
xchg
ss
insl
adc
push
add
dec
push
or
push
fsub
decl
insl
add
fidivrl
subl
mov
lea
mov
cld
test
stos
mov
imul
iret
addb
ss
insl
sbb
fisttps
insl
repz
xlat
xchg
xchg
jge
pop
std
subb
outsl
ds
cmp
test
fbld
dec
add
or
or
pop
add
pop
sbb
lea
dec
stc
in
insl
jnp
push
mov
lcall
mov
mov
xchg
dec
pop
ljmp
outsb
std
add
inc
add
xchg
in
call
cli
outsl
dec
dec
adcb
xchg
xor
jb
cli
je
pop
fdivrp
jmp
in
jae
dec
loop
cmp
sbb
fdivr
adc
jae
xchg
pop
mov
add
add
rcrb
and
add
ss
pop
outsl
sbb
push
jecxz
pop
jmp
dec
sub
fistps
movl
sbb
push
ret
mov
cmp
dec
test
or
rorb
jge
cmp
mov
fists
or
add
jb
mov
stc
ret
insl
fisttpl
xor
push
mov
inc
add
pop
ja
ret
mov
pop
lods
jecxz
xor
shrl
les
jns
dec
add
mov
mov
cs
push
mov
out
in
pop
loope
mov
sub
xchg
ss
cs
movsl
or
fwait
icebp
xchg
mov
imul
fcomp
push
cmc
fistpll
faddl
push
push
xchg
clc
inc
ljmp
pop
xchg
in
cmp
add
jae
cwtl
std
in
xchg
inc
dec
pusha
fisttpl
pop
xchg
inc
adc
das
dec
xchg
int
adc
mov
push
jo
xor
or
sti
jecxz
fidivl
in
sbb
arpl
inc
push
inc
cmpsl
dec
sbb
pop
fcmovu
orb
out
test
push
in
orb
push
pop
fdivl
and
loop
mov
mov
mov
sub
add
dec
jecxz
adc
and
jnp
dec
adc
jg
incl
out
adcl
xlat
xor
orl
out
repz
pop
mov
adcb
and
loope
mov
push
dec
dec
add
pop
inc
add
rcll
call
pushl
sbbb
cld
pop
xor
or
mov
ss
sti
or
xor
push
xor
jg
mov
cmp
daa
cld
insb
adc
pop
inc
mov
add
jp
sbb
cli
sbb
je
popf
insb
cld
test
add
je
insl
inc
ljmp
adc
jecxz
mov
sbb
das
xorl
cmp
jle
adc
out
inc
cld
std
pop
or
inc
pop
repz
pushl
adc
push
test
jl
xor
pop
sbb
jno
loopne
incb
test
xor
push
pop
xor
xchg
xor
in
fwait
mov
mov
popl
jbe
pop
mov
lahf
sti
js
loopne
in
xchg
jl
aas
adc
inc
add
sbb
in
std
in
mov
das
pop
lret
test
xchg
pop
xchg
xchg
xchg
rorl
in
test
cld
jecxz
roll
movsl
push
xchg
lret
adc
outsb
xlat
dec
mov
jecxz
xor
cmp
lea
loop
pop
jns
pop
xchg
pop
xor
jno
sti
push
or
sbb
mov
test
jl
xchg
mov
sbb
jecxz
xor
sub
push
test
mov
sbb
fbstp
aad
push
sub
arpl
jecxz
arpl
in
sub
mov
mov
decl
test
inc
adc
scas
or
fldcw
xor
test
lcall
push
add
and
lcall
or
jno
jo
xchg
aaa
xchg
test
aas
sbb
xor
cmp
mov
stc
inc
cmp
rcll
lea
xchg
sub
sbb
jno
addr16
imul
mov
push
call
cs
pop
lods
or
add
xor
addl
bound
xchg
loop
dec
std
cmp
cmp
and
xor
jne
in
testb
xor
pop
outsb
lahf
jl
insb
mov
imul
jo
call
cmp
cmp
jo
lock
jmp
test
ds
test
imul
cwtl
sti
or
add
pop
mov
push
repz
ret
xchg
pop
adc
mov
imul
cmp
jb
jmp
sub
cmp
lds
xor
cld
notl
repz
or
push
mov
xor
ss
mov
pop
pop
lods
dec
loop
cld
iret
push
cmp
jmp
arpl
filds
mov
cld
clc
test
cmp
mov
les
push
pop
test
orl
add
push
jge
dec
or
shll
mov
mov
xor
outsb
add
cmp
mov
dec
cld
or
cmp
stc
pop
sbb
aad
sbb
arpl
imul
inc
imul
push
add
sbb
loope
cld
xor
jb
pop
mov
call
orl
daa
test
sub
mov
insl
add
push
xor
sbb
sub
or
insl
test
test
in
add
fwait
or
push
push
sub
or
jmp
inc
stc
mov
test
dec
jo
cmpb
xchg
dec
jmp
dec
adc
in
push
rorl
clc
mov
lea
pushf
std
outsb
pop
dec
lods
or
mov
movsl
cmp
push
orl
sub
insb
push
mov
out
out
sbb
sbb
out
mov
jg
decl
and
imul
popf
mov
mov
shll
movl
daa
or
pop
mov
or
dec
inc
push
out
or
adc
insl
cs
jg
jp
testb
jg
and
and
push
push
dec
out
cli
adc
xchg
mov
or
xlat
adc
test
sbb
leave
stc
jae
mov
push
in
fdivp
daa
dec
gs
cmpsl
mov
movsl
add
pop
sbb
push
xor
jae
imul
adc
stc
adc
pop
push
push
cli
jmp
jle
popa
dec
push
das
in
push
push
dec
push
sbb
test
pop
adc
inc
xchg
or
cli
shlb
sub
sbb
mov
xchg
repz
pop
push
push
stc
pop
cli
ljmp
jmp
add
or
decl
popf
mov
adc
mov
incl
dec
arpl
jmp
shlb
scas
ret
lea
mov
xchg
test
xorl
scas
cmp
outsl
mov
insb
mov
mov
ret
cmp
fistpl
mov
fbld
pop
andl
and
gs
testl
cmp
mov
mov
add
icebp
in
mov
sbb
xor
dec
sub
inc
mov
daa
out
test
xor
mov
hlt
inc
mov
ljmp
jg
and
lds
pop
sbb
sub
repz
pusha
addr16
das
adc
in
ljmp
mov
lret
into
mov
pop
cmp
add
rolb
and
scas
test
out
push
imul
pop
ljmp
sarb
cmpb
in
pop
cmp
test
roll
push
fucomi
push
inc
dec
lahf
add
sub
rorb
mov
push
out
outsl
push
mov
rcrl
xor
xchg
xor
pop
mov
jp
sub
mov
outsb
inc
jns
push
mov
int3
fcomip
xor
movsl
clc
mov
movsl
dec
in
imulb
cvtps2pi
cmp
shll
jb
cmp
sub
xchg
clc
sbb
mov
addb
sub
notb
test
jmp
cmp
add
cmp
loopne
jo
dec
sbb
inc
test
dec
dec
mov
mov
lods
cs
jge
dec
xchg
mov
jae
sti
inc
shl
ds
ret
sbb
dec
out
out
cs
in
jbe
pop
mov
pop
stc
dec
bound
lea
jns
hlt
aaa
xchg
out
adc
mov
push
jbe
push
mov
pop
sub
or
mov
xchg
jp
inc
pop
mov
les
ss
mov
loop
cs
out
jbe
outsl
add
out
mov
xor
aas
rcrl
stc
push
daa
stc
or
in
sub
cld
push
xor
std
mov
or
lds
pop
mov
icebp
rcrb
mov
ss
imulb
inc
add
dec
out
push
cmp
outsl
sub
jo
loopne
das
xchg
xor
out
addl
jb
test
imul
jg
push
fistl
outsl
jle
inc
xor
add
cli
test
mov
xacquire
jge
add
jecxz
or
subl
test
mov
mov
push
inc
xacquire
inc
in
imul
inc
out
adc
popf
loop
sti
out
push
or
add
aaa
sub
jae
mov
mov
int3
add
push
in
stc
outsl
and
jecxz
repz
bound
push
ret
push
pop
mov
fbld
ret
mov
pop
rorb
xor
pushf
sbb
lods
gs
test
fucomp
test
mov
adc
xchg
test
nop
mov
and
lret
dec
das
mov
dec
shlb
inc
lret
das
aaa
dec
fisubrl
or
popa
push
jae
add
stos
xor
jns
das
mov
sbbl
test
lods
mov
mov
fistpll
xchg
scas
xchg
jecxz
clc
adc
xor
stc
sbbl
mov
aaa
call
and
mov
jnp
add
mov
add
stos
mov
popa
pop
mov
std
iret
jle
or
xor
push
int
cmp
lahf
mov
xor
and
dec
lods
insl
ja
jecxz
daa
mov
stos
or
or
jg
cmovle
lahf
sub
sub
jg
mov
pusha
test
or
mov
fsubrp
adc
loopne
fcmovbe
xor
jae
loopne
mov
add
int
or
int
mov
leave
out
dec
add
sub
jle
lods
jnp
decl
inc
cmpl
mov
xlat
sub
insl
std
clc
push
ss
push
mov
outsl
gs
or
pop
cmc
lcall
test
jge
xor
or
test
stc
in
add
add
mov
fbld
rorb
lret
fildll
xchg
sarl
inc
jecxz
jl
fildl
xor
js
arpl
and
std
icebp
mov
mov
int
or
adc
lret
inc
inc
es
sbbb
dec
in
loope
or
push
jp
add
add
clc
pop
push
xor
subl
call
sub
jg
pop
movsl
fdivr
stos
or
add
or
mov
in
sti
data16
and
adc
or
arpl
mov
mov
pop
adc
push
inc
jnp
dec
push
push
add
lods
push
dec
and
fadds
mov
dec
mov
call
pop
add
mov
xchg
icebp
cltd
mov
pop
cmp
iret
iret
rcr
add
or
mulb
sbb
cmpb
in
ss
cmc
test
loopne
gs
or
pop
stos
jle
adc
sbb
push
mull
mov
clc
fs
pushf
mov
test
nop
inc
push
mov
es
pop
and
aaa
adc
and
mov
insb
imul
xor
xor
jnp
mov
sarl
test
incb
in
cmp
aaa
dec
dec
xchg
inc
xchg
mov
or
jno
popf
aaa
daa
mov
and
push
sbb
push
mov
push
sub
xchg
cmp
jp
fsubrs
dec
lahf
fisttps
adc
lds
adc
mov
ja
mov
clc
divb
mov
adc
jge
mov
repz
dec
insl
insl
flds
in
dec
cltd
jecxz
add
in
lock
inc
jg
jg
xor
cmp
sbb
daa
jae
push
or
xor
aad
xchg
cmp
jne
pushl
sbb
ja
push
sub
out
mov
les
pop
cmp
ret
das
popa
sbb
cmp
sbb
jecxz
std
cmp
sbb
insl
arpl
incb
sbb
dec
addr16
or
insb
jg
xor
dec
xor
cs
jnp
xlat
pushl
mov
call
push
add
jns
cmpb
cmp
adc
stos
lret
and
dec
sbb
pushf
adc
imul
cld
jnp
fsts
lods
std
mov
dec
pop
stos
ja
jbe
inc
cmp
outsl
stc
aas
and
jle
sbb
add
lock
out
pop
ja
gs
je
sbb
sti
add
dec
sbb
sbb
test
and
dec
pop
inc
jle
cmc
lea
jmp
outsl
pop
and
out
jp
fdivr
mov
nop
std
push
or
xchg
sub
dec
cli
ret
inc
outsl
aam
and
adc
inc
push
shl
decl
std
xor
int
cmp
pop
mov
ss
lahf
or
jno
add
push
sub
xchg
push
pop
push
push
jl
add
sarb
mov
add
js
and
mov
pop
mov
cmp
and
sub
out
test
cltd
or
inc
mov
dec
mov
xor
data16
daa
loop
daa
fldcw
mov
in
pop
push
mov
lods
mov
and
mov
sub
and
jecxz
icebp
xchg
rol
daa
jmp
add
sbb
sub
xchg
outsb
das
mov
mov
push
pop
adc
and
xchg
test
mov
pop
add
jge
pop
push
test
cld
out
jl
add
cld
jp
xchg
lock
jg
aaa
cmp
ret
pop
xchg
dec
adc
mov
jg
or
add
outsl
and
das
psubsw
lahf
cs
or
jnp
or
mov
addr16
cwtl
popf
xchg
mov
mov
xor
xor
aas
inc
dec
mov
hlt
push
sub
push
inc
test
xchg
lods
sbb
push
pop
dec
movsb
mov
les
sub
ror
or
push
mov
jae
std
dec
mov
insl
push
gs
filds
sub
push
movsl
xor
out
shl
std
das
mov
ss
loope
mov
divb
mov
and
add
inc
or
push
out
and
mov
rcrl
add
sti
sbb
adc
push
fildl
fsub
push
dec
enter
add
and
push
mov
clc
add
jp
outsb
daa
pop
scas
subl
inc
sub
insl
mov
shll
pop
js
jmp
mov
icebp
mov
fisubrl
sti
cmp
jno
adc
or
cwtl
loope
ret
xlat
inc
mov
idiv
std
cld
rclb
out
cmp
loop
inc
pop
xor
ja
std
data16
mov
aas
jecxz
adc
mov
int
sub
or
cmp
insb
mov
sub
popa
cld
fwait
ret
aaa
adc
jge
pop
pop
pop
test
sub
movsl
jg
sub
or
jp
incb
outsl
and
add
add
in
mov
sar
movups
sbb
addr16
jb
test
incb
dec
adc
mov
inc
shl
jae
incl
xchg
mov
loop
incb
fucomp
cmpsb
hlt
mov
call
iret
not
and
es
test
mov
and
repnz
mov
mov
cs
insb
stc
jnp
and
std
outsl
das
pop
pushf
or
push
out
loope
push
dec
insl
add
mov
dec
xchg
loope
jne
jecxz
or
ds
or
enter
cmp
add
std
dec
add
or
ljmp
inc
or
or
je
dec
mov
dec
imul
icebp
jnp
fldenvs
repnz
or
andl
stos
adc
push
jge
in
insb
dec
and
out
xchg
std
ror
outsb
jp
pusha
ret
ja
outsl
cmp
mov
lret
insb
xor
lods
cltd
adc
and
pop
bound
loop
sub
and
push
fsubr
xchg
xchg
dec
outsl
sub
stc
pop
sahf
adc
push
in
or
and
jns
jne
jp
fldt
cmp
aas
xchg
push
dec
jno
imul
push
and
and
push
imul
in
xor
inc
and
das
push
sbb
inc
jge
lret
push
mov
loopne,pn
incl
mov
push
out
cmp
cmpsb
int
je
xchg
mov
cmpsl
test
pop
push
add
xchg
hlt
sbbb
stos
cmp
jle
and
fs
ds
mov
rcll
stos
shll
lcall
stc
adcb
popf
jecxz
aas
pusha
mov
in
xchg
jne
dec
insl
xor
hlt
jg
xchg
test
jg
xchg
insb
dec
loop
fists
jmp
lods
or
add
cmp
rcrl
roll
xor
sti
or
cld
inc
xchg
std
push
repnz
add
mov
mov
lds
sub
popa
mov
sub
xor
pop
arpl
loope
xor
int
insb
stos
sub
cltd
adc
xchg
insl
mov
adc
jae
push
sarl
push
mov
mull
jmp
sub
mov
push
in
xchg
push
insl
lret
pop
sub
add
icebp
stos
pop
pop
dec
nop
mov
cmpsb
jle
syscall
cmpl
add
arpl
pop
push
loop
jg
mov
and
cld
push
push
push
xor
push
xchg
cmpsb
xor
insl
xor
int
jg
sbb
icebp
outsb
add
notb
inc
push
das
xchg
andl
push
pop
adc
insb
adc
jns
push
jle
push
sbb
sbb
dec
or
push
fistpl
xchg
pop
mov
test
fimuls
ret
dec
adc
push
add
sub
pcmpgtw
in
clc
in
das
adc
popf
or
imul
stos
lock
pusha
mov
mov
xor
mov
movl
arpl
push
jmp
jp
testb
shll
sub
aaa
in
addl
sbb
or
sbb
mov
pop
mov
jge
sub
pop
lahf
iret
mov
push
jne
fisttpll
push
clc
pop
shll
mov
mov
fistpl
mov
lock
popf
mov
mull
pop
dec
add
aam
loop
xchg
pop
call
shlb
add
stos
inc
inc
outsl
dec
sbb
sahf
ss
loop
push
mov
xchg
aas
negb
xchg
add
inc
mov
pop
clc
stos
dec
dec
in
sbb
pop
inc
dec
add
dec
push
ss
arpl
mov
xlat
stos
fwait
cmp
cld
mov
scas
pop
dec
cmc
or
popf
dec
sbb
mull
ds
addr16
sbb
mov
ja
sbb
das
dec
dec
lret
daa
cmpsb
adc
push
or
divl
add
mov
dec
lahf
clc
add
jge
cwtl
lods
cmp
sbb
mov
push
dec
out
mov
incl
mov
add
imul
sbb
pop
dec
mov
pop
or
popa
push
repz
orl
lcall
dec
cli
sbb
inc
cmc
xchg
sbb
arpl
bound
cmpl
inc
jge
leave
xchg
and
repnz
mov
add
add
xchg
das
pushf
sbb
shlb
aaa
adcl
push
stc
ret
lahf
add
ljmp
sbb
out
fistpll
iret
add
pop
arpl
adc
fninit
mov
out
js
ss
ficoml
adc
lret
scas
bound
xor
pop
js
dec
sub
lods
les
movsl
push
mov
push
movsb
add
ja
cmp
inc
jl
xchg
std
adc
dec
movb
mov
mov
int
mov
and
xchg
dec
xchg
aaa
lret
clc
sbb
aad
filds
pop
cltd
std
add
mov
jmp
divl
mov
gs
loopne
sbb
mov
adc
psrlw
dec
jecxz
sbb
daa
mov
mov
in
jo
cmpsl
cmpsb
push
loopne
mov
fwait
add
dec
pop
jle
jae
push
cmp
lret
mov
lock
divl
or
mov
fistl
fwait
dec
dec
add
inc
xchg
repnz
xor
cli
mov
push
addr16
out
sti
xor
scas
and
mov
xchg
popl
xor
xchg
mov
testb
jno
popa
ret
dec
data16
stc
xor
insl
rcl
ljmp
orl
popa
mov
adc
inc
sbb
dec
add
mov
push
sbb
fildl
dec
cmp
notb
adc
testl
xor
push
push
divb
arpl
std
mov
in
lahf
dec
test
adc
push
or
inc
cmc
test
jge
out
add
push
and
int
cmp
outsl
aad
lds
test
pushl
mov
ss
in
mov
pusha
ret
fs
mov
cli
xor
dec
aad
lret
add
xchg
bound
inc
aam
push
repz
fldt
push
jo
inc
test
xor
jmp
push
movsl
ret
test
sub
mov
shrl
call
je
lret
pop
mov
or
cmc
push
sub
sbb
mov
jae
cmp
mov
xlat
call
mov
mov
xchg
test
mov
push
dec
pop
fistps
jg
scas
xchg
std
outsb
std
lds
fmull
std
mov
xor
int
or
pop
adc
push
stos
inc
arpl
jle
out
fiadds
popf
syscall
or
hlt
repnz
stos
cli
scas
test
push
xchg
lock
test
imul
repnz
adc
add
pop
arpl
adc
daa
loopne
sbb
roll
xor
arpl
je
cmp
inc
shl
jmp
bound
orb
ds
pop
cmp
hlt
inc
mov
mov
pop
mov
roll
popf
cli
push
popa
sbb
add
ret
out
add
xchg
dec
mov
in
sti
push
dec
sahf
mov
and
icebp
pop
orl
jo
loope
mov
sbb
rclb
cs
mov
or
clc
ss
or
xchg
jmp
clc
icebp
pop
fchs
adc
out
add
cmp
push
std
aas
fwait
sbb
xchg
roll
add
ljmp
xor
movsl
mov
out
loopne
sbb
xor
xlat
mov
jae
xor
aam
or
nop
jecxz
jmp
jmp
pop
or
add
mov
mov
xor
enter
incl
leave
enter
mov
inc
cmp
inc
xor
aad
fs
mov
in
mov
in
mov
in
mov
in
mov
xor
push
adc
test
adc
ja
jb
push
or
inc
xor
push
or
adc
xchg
orl
popa
mov
mov
sub
iret
inc
jle
fldenv
mov
xlat
nop
xor
pmullw
insb
push
cltd
or
jno
data16
push
or
or
pop
jb
mov
xchg
mov
in
cmc
xchg
dec
adc
sub
cmpsb
nop
or
xchg
xor
lret
int
cld
xchg
sti
jecxz
adc
add
setae
cmc
scas
pop
loopne
inc
ret
sahf
inc
clc
add
adcb
lock
div
into
mov
push
sub
mov
in
loope
adc
daa
sarb
push
clc
dec
dec
daa
je
lahf
daa
push
mov
mov
decl
mov
dec
inc
push
imul
adc
aaa
shr
sub
and
roll
ret
sub
inc
fdivl
adcl
dec
jl
fldenv
dec
push
or
xchg
jns
jnp
add
sbb
add
mov
cld
das
jg
cli
dec
repz
push
pop
popf
pop
jmp
add
xor
incl
push
jns
dec
stc
mov
dec
addl
push
test
add
inc
or
test
and
lds
idivb
out
test
add
adc
aas
ss
jbe
add
push
add
add
jl
pop
std
mov
jecxz
or
push
xor
or
pop
push
sti
insl
inc
mov
push
inc
movsb
adc
xchg
sar
xchg
jg
or
clc
jo
sbb
cld
outsl
es
arpl
adc
mov
popa
sub
mov
add
jg
jnp
stc
inc
cmp
mov
adc
test
pop
data16
clc
pop
cli
sarl
aas
add
and
add
lahf
xor
add
inc
dec
dec
push
nop
pop
sub
cmp
nop
ds
daa
cmp
cmp
inc
xor
inc
in
das
mov
enter
test
mov
sbb
outsl
decb
ja
repnz
cld
adcb
sbb
fwait
ljmp
jp
add
dec
pop
mov
mov
outsl
ss
sub
jmp
jg
loope
mov
mov
lret
outsl
shlb
jecxz
into
stos
dec
arpl
mov
lret
cli
jecxz
inc
fisttpll
mov
push
xchg
or
jecxz
shlb
pop
mov
fcmovnb
pop
int
push
idivl
cmc
arpl
and
mov
dec
xor
cmc
testb
loope
mul
js
push
adc
aaa
pop
add
mov
cmp
imul
or
nop
popf
mov
hlt
cmp
arpl
daa
add
adc
popf
cmp
xchg
sub
and
hlt
imul
enter
stc
mov
lods
sbbb
adc
and
push
push
inc
xchg
adc
or
xchg
stos
fistpll
cmpsl
adc
cld
mov
mov
stc
pop
js
ret
dec
lods
out
test
xchg
lahf
in
xchg
jns
out
jae
lahf
fistps
mov
fs
daa
mov
imul
out
bts
pop
movsb
push
pop
jno
sbbb
cmpsb
jg
test
test
ret
andl
decl
adcb
popa
xchg
mov
add
inc
or
dec
jge
jb
aas
add
repz
addr16
inc
push
popa
mov
mov
gs
mov
cs
fs
jmp
adc
xchg
jmp
mov
call
cmp
addb
out
mov
dec
aaa
jge
jns
test
sbb
addr16
sub
cmpsl
dec
mov
xor
xchg
lahf
addl
or
xor
subb
mov
je
out
inc
inc
inc
clc
mov
loopne
popf
mov
add
mov
xchg
and
cmp
loope
cmc
add
inc
stc
ficoms
clc
bnd
jecxz
inc
in
aaa
test
in
dec
mov
jbe
or
or
mov
lea
add
push
add
pop
in
inc
loopne
test
shll
ds
sti
insb
jae
inc
jmp
sub
test
adc
stc
fbstp
dec
inc
sub
test
fildl
adc
adc
push
xchg
push
dec
jecxz
or
bound
cmp
sub
jne
inc
add
cmp
cmpsb
repz
sbb
or
repnz
adc
adc
pop
and
mov
les
lret
xchg
jo
or
inc
or
fwait
xchg
or
sbb
ds
mov
cltd
mov
divl
stc
jo
fistps
pop
cld
pop
jne
inc
xor
jg
sub
push
cmp
xrelease
insb
lock
pop
jg
call
sti
lret
add
daa
push
push
jnp
or
mov
mov
arpl
add
push
imul
add
cld
addr16
sub
dec
mov
mov
pop
icebp
rcll
mov
mov
add
arpl
pushl
or
pop
xor
or
stc
test
bound
call
sbb
mov
mov
call
aam
or
xchg
and
jo
push
mov
icebp
add
or
into
push
std
int
push
clc
iret
dec
in
clc
dec
dec
shrb
or
push
cltd
in
lcall
push
push
shll
insl
push
add
push
pusha
adc
xchg
mov
jmp
xchg
xor
cmp
leave
nop
fldcw
push
mov
cld
insl
mov
ds
xlat
fwait
cs
in
pop
push
mov
mov
shrb
mov
or
mov
pop
in
pop
loopne
or
ljmp
xchg
gs
mov
addr16
fs
xchg
int
test
test
bound
push
mov
ret
push
lcall
pminsw
addr16
imul
rcll
fwait
std
and
inc
lea
arpl
sbb
sub
add
dec
or
lcall
shlb
add
add
rorl
fnstsw
daa
pop
bound
ja
add
push
dec
push
sbb
cmp
mov
add
decl
pop
add
push
sub
jecxz
add
push
mov
imul
repz
lcall
mov
mov
push
mov
mov
sbb
or
adc
in
imul
leave
add
mov
adc
fsubrs
inc
ret
jp
lret
xchg
arpl
imul
add
pop
mov
mov
mov
aas
loopne
mov
dec
outsb
loop
lock
or
repz
sub
lret
int3
push
mov
imul
add
mov
pop
xchg
jg
ja
orl
jnp
push
sti
mov
stc
push
inc
pusha
incl
adc
add
cmp
not
mov
sarl
dec
rcrb
aad
xor
push
insl
lea
inc
push
pop
pusha
int
in
mov
jae
add
inc
push
jle
push
cmp
or
mov
sti
stos
cmp
aaa
clc
or
stc
inc
xor
or
insl
add
mov
addr16
add
push
mov
push
and
ljmp
dec
adc
dec
clc
sub
mov
mov
in
add
add
lcall
xor
clc
sub
jo
pusha
jae
arpl
add
lcall
jmp
fistpl
mov
repz
add
scas
ret
lock
inc
shrl
imulb
aaa
pop
mov
imul
gs
xor
les
lret
out
das
sbb
push
pusha
jmp
adc
mov
repnz
jo
loopne
add
arpl
pop
push
lods
inc
in
outsb
mov
adc
mov
lods
ljmp
ds
mov
lds
add
aaa
fistps
inc
sub
negb
mov
add
cli
xchg
popa
rcrl
adc
mov
sti
in
dec
outsb
std
pusha
rcll
das
push
pop
das
push
add
mov
or
push
xor
lock
xor
test
or
or
mov
mov
add
mov
rdtsc
shr
andb
aas
dec
fs
movsl
mov
data16
xor
pop
jmp
aas
mov
gs
cmpsb
or
lret
aas
mov
mov
mov
jo
push
in
add
lods
inc
jl
dec
sub
arpl
pop
es
sub
pop
hlt
aas
xchg
push
xchg
in
pop
and
in
add
pop
or
pushf
add
lods
cmp
push
stos
leave
mov
jg
ljmp
push
pop
and
mov
xor
pop
out
aas
data16
xchg
xor
mov
arpl
sbbb
add
sub
arpl
dec
cmpb
mov
gs
push
pop
es
aas
popa
add
pop
out
aas
or
push
xchg
in
aaa
jl
cltd
shll
mov
repnz
xchg
or
into
in
cmovno
sbb
fnstenv
mull
enter
add
pop
jmp
mov
call
add
mov
outsb
add
pop
and
rolb
insb
test
in
sti
std
sbb
inc
arpl
fs
pop
cmp
leave
mov
ret
pop
idivl
pop
incl
pusha
in
loope
frstor
cmc
pop
outsb
stc
int
and
in
cmc
fs
out
stos
cmp
es
out
xchg
insl
sti
xchg
inc
popa
sar
imul
xor
pop
repz
repnz
or
or
mov
arpl
iret
lock
outsb
add
pop
and
jo
dec
pop
rcll
mov
rcrb
add
data16
outsb
andb
mov
sbb
sar
mov
fwait
ljmp
decb
xor
clc
pushw
fsubs
cmp
inc
push
pop
icebp
mov
insb
pop
loop
mulb
loope
dec
insl
movsl
in
mov
mov
mov
and
lock
lret
pop
dec
mov
push
movswl
repnz
jns
imul
sub
inc
add
jne
es
aad
mov
repz
out
push
xchg
lods
push
insb
dec
mov
sbbb
or
pop
fdivp
inc
clc
jl
in
int3
dec
lret
in
stc
mov
sbb
stc
insl
mov
js
into
std
aaa
enter
enter
and
lods
repz
in
call
loope
add
sub
aaa
mov
ja
pop
dec
fimuls
lods
jns
cli
pop
push
test
gs
lods
inc
cmp
mov
clc
pop
aas
and
out
jmp
pop
enter
nop
stc
and
push
jmp
mov
or
in
insb
aas
ret
stc
add
fwait
repz
jp
cmc
dec
xchg
sbb
jg
push
push
pop
gs
aad
cld
sub
repnz
pop
push
mov
lods
push
dec
cmp
vmwrite
ljmp
leave
sbb
or
clc
leave
pop
cmpl
inc
dec
es
jmp
cmpsb
cmpb
xchg
sub
cld
pop
out
pusha
fninit
and
test
add
pop
imull
js
jne
adc
cld
mov
mov
lcall
xor
gs
dec
repz
test
adc
pop
jl
mov
rolb
je
div
sti
mov
jge
jg
fiaddl
pop
lock
push
nop
lea
lret
sti
or
adc
add
sbb
aas
dec
out
inc
add
xchg
aaa
aam
cli
pop
push
push
mov
pop
xchg
mov
mov
repnz
sbb
dec
gs
lock
es
adc
inc
test
sbb
mov
out
adc
jae
das
push
push
xchg
test
adc
dec
mov
xchg
repnz
aas
cld
popa
sbb
mov
xchg
cli
lcall
inc
push
sti
inc
sbb
orb
fisttpl
jmp
outsb
cs
cs
push
fucomi
lea
push
es
std
push
pop
std
cmp
add
jmp
push
in
cld
outsl
imul
inc
loope
pop
pop
lahf
adc
push
out
lret
or
call
push
popw
cs
or
push
and
std
movsl
push
mov
dec
mov
jecxz
dec
andb
sti
add
call
lret
push
mov
mov
mov
outsl
or
mov
test
add
call
cli
push
test
adcl
mov
xchg
mov
incb
mov
stc
xlat
jle
enter
push
lahf
insl
sarb
jp
cmp
mov
je
es
dec
arpl
fstl
in
cld
lods
loopne
add
jecxz
cmp
sub
inc
pop
addl
loop
push
jge
decl
mov
inc
pop
xchg
mov
pop
aas
add
fistpl
push
fstpt
push
lock
ja
pop
push
ret
das
adc
mov
aas
and
jg
ret
inc
aad
ljmp
push
xchg
push
test
pop
push
push
std
decl
ret
dec
sub
cld
aas
push
xchg
inc
xor
incl
mov
aaa
jmp
jb
pop
push
pop
mov
lcall
jecxz
lret
or
mov
sti
mov
adc
inc
pop
daa
and
movsl
or
mov
jbe
mov
push
cmp
aas
add
push
add
sti
or
xchg
lods
hlt
aaa
lahf
mov
bound
add
scas
addb
arpl
lods
int3
scas
mov
or
jae
pop
pop
les
sti
out
pop
mov
insb
adc
push
shlb
arpl
xlat
inc
jnp
loopne
pop
push
shll
xor
outsb
fdivs
add
les
hlt
jb
push
sti
sbb
push
mov
sbb
test
mov
test
inc
jge
mov
adc
xchg
jg
inc
mov
jg
push
imul
mov
or
mov
push
in
arpl
out
popa
sti
or
dec
cltd
xorl
pop
add
inc
jl
icebp
std
test
pop
stos
jnp
push
mov
add
adc
mov
push
ss
xchg
lret
inc
int
and
adc
imul
push
push
mov
pop
test
cs
add
test
out
or
mov
mov
pusha
out
clc
push
fnstcw
mov
jg
insb
scas
jne
ja
push
jo
bound
loop
bound
fnstenv
add
mov
add
addr16
test
cs
push
jae
push
add
dec
add
pop
loope
ret
push
xchg
stc
push
daa
in
pop
jb
jge
pop
cmp
hlt
lods
push
sub
jecxz
repnz
add
xchg
decb
mov
std
out
arpl
cmp
loope
das
add
arpl
push
mov
lods
insb
adc
pop
leave
add
fbstp
pop
push
mov
ja
xchg
mov
add
cli
das
subl
std
mov
cli
xor
ja
in
mov
mov
sub
pop
loopne
sbb
sbb
cli
fdiv
xor
jecxz
lahf
addr16
pop
sbbl
daa
mov
std
jl
add
sti
arpl
pop
mov
push
pop
dec
fs
pop
sbbb
in
in
mov
frstpm(287
std
jmp
mov
ja
cmpl
fsubr
or
inc
inc
dec
aad
and
incb
popf
std
and
dec
pop
cmpl
movlps
add
outsl
and
jg
xchg
mov
add
cmc
xchg
sbb
imul
loop
and
jns
clc
rolb
sbb
mov
push
loop
in
inc
loope
mov
dec
dec
dec
pop
mov
fisttps
testb
xchg
add
push
lret
pop
add
sub
insl
jnp
add
xchg
pop
mulb
adc
or
testl
fs
stc
cli
imul
int
outsb
jo
jmp
pop
imul
jl
lahf
imul
xor
out
enter
leave
arpl
pusha
cwtl
add
and
pop
or
and
arpl
outsl
insl
cltd
and
push
pop
dec
mov
loop
nop
and
push
pop
test
sub
add
movq
xchg
mov
jno
cld
cmp
sbb
sub
xchg
pop
xchg
addb
js
push
das
dec
jge
mov
adc
add
mov
xlat
stc
mov
arpl
inc
mov
pop
out
mov
pop
mov
out
rcrl
lods
hlt
roll
xchg
pop
push
pop
loop
mov
add
push
mov
inc
or
out
xchg
jo
jmp
addb
xchg
inc
add
add
jnp
std
add
inc
pusha
mov
jmp
sbb
sbbb
pushf
andl
xchg
adc
testl
mov
lahf
xchg
cmpl
or
stc
xor
insl
push
orb
xlat
std
add
add
lret
inc
jnp
add
in
or
sub
sbb
pop
push
mov
inc
test
dec
xchg
jno
mov
jne
sub
jg
xor
in
jle
mov
jnp
ljmp
pushf
cwtl
inc
insl
jno
push
push
dec
sbb
xchg
int3
test
push
dec
in
cli
fwait
jecxz
sub
push
dec
dec
in
mul
xorl
push
dec
adc
and
in
cmp
icebp
jb
jle
outsl
and
fists
fadd
jg
cli
sbb
add
jp
cli
outsl
or
and
repz
add
xor
inc
xor
or
add
popa
or
in
mov
push
cmp
mov
jg
mov
aad
xchg
in
lahf
push
shlb
out
stos
cmc
cli
fistpl
mov
mov
popf
loopne
mov
stos
into
sub
sub
mov
imul
scas
adc
in
aad
repnz
out
cmp
and
jge
jns
outsb
inc
jmp
fistpll
dec
insb
test
movsb
sub
add
xchg
jbe
pop
cs
lret
xchg
jae
je
jbe
jne
lret
insl
mov
daa
je
xor
ja
jb
mov
insb
jne
cmp
cs
lret
in
outsl
jb
jne
je
jb
pop
jo,pn
jb
jae
mov
jae
popf
daa
test
jne
mov
aas
adc
cmpsb
adc
jo
xlat
jno
jae
in
lcall
mov
xorl
pop
sahf
out
lahf
jne
jbe
jns
js
xchg
lret
in
je
ja
js
jp
jns
jb
pop
bnd
js
jbe
jnp
xchg
lret
in
out
inc
jns
jp
jl
imul
imul
insl
lcall
jnp
jp
jmp
rol
adc
lcall
jnp
iret
out
imul
jne
ret
addr16
mov
je
jbe
inc
jno
cmpsb
imul
ss
ja
dec
aaa
arpl
jbe
push
or
inc
jp
rcr
jbe
jmp
adc
aas
shll
xor
mov
xchg
or
pusha
jae
xor
mov
or
jb
mov
jne
repz
xchg
outsb
dec
or
cmp
inc
mull
aas
xchg
fstps
cmpsb
out
push
scas
dec
std
loop
sbb
mov
imul
cmp
add
dec
push
jnp
fs
push
xchg
mov
nop
xorl
mov
jo
and
leave
addb
enter
xchg
mov
xor
jns
jae
jae
ss
ja
dec
jo
imul
in
cmp
push
jo
ja
sbb
and
jo
inc
xchg
int
ret
test
jb
mov
jnp
leave
add
pusha
adc
jb
icebp
xchg
je
jg
iret
jbe
in
lcall
sub
xor
cmp
gs
outsl
lret
in
mov
jb
je
jae
mov
pop
jb
jae
jne
je
xor
mov
daa
pop
shll
push
inc
adc
dec
push
shll
rcrb
scas
jno
movsl
je
inc
call
js
mov
lret
or
lods
ja
jp
jns
fwait
mov
int
pop
jnp
mov
dec
jns
fistpll
jl
xor
in
jnp
ja
sbb
dec
pop
jo
adcl
or
sar
jbe
js
shll
ret
fwait
loope
adc
xchg
jp
jns
rcll
pop
sbb
addr16
jbe
jb
lahf
jbe
adc
jno
cmp
cmpsb
pop
dec
popa
je
cltd
je
lcall
jno
imul
xor
push
adc
add
iret
xor
xor
pop
push
js
shll
jae
and
lds
call
jbe
divb
push
push
jno
inc
jmp
sti
xchg
sti
push
pop
pop
ds
insl
push
addr16
jb
outsb
fs
arpl
das
std
cmp
push
std
lret
lcall
pop
imul
pop
pop
inc
gs
pop
cld
inc
pop
outsl
inc
ljmp
fistpl
dec
pusha
jne
dec
insb
pusha
pop
imul
bound
cli
outsl
decl
pusha
jb
insl
push
outsl
popa
inc
insl
insl
pop
cmp
outsb
pop
adc
lock
imul
in
idiv
jae
insl
bound
aas
imul
lahf
sub
inc
imul
mov
dec
jb
outsb
cld
dec
jno
outsl
cmp
push
jbe
pushl
pop
mov
insb
dec
outsl
push
test
sti
push
imul
arpl
outsl
bound
out
fs
pop
data16
fnstsw
push
filds
outsl
dec
imul
outsb
outsl
outsl
out
das
icebp
push
cli
inc
insb
pop
pop
inc
gs
insl
pop
push
ds
loope
in
pop
imul
inc
imul
in
in
addr16
push
mov
fisubs
aas
stc
sarl
mov
in
dec
ja
ja
xor
pop
pop
jb
jbe
push
mov
mov
arpl
std
push
jb
dec
gs
pusha
mov
stc
inc
bound
cmp
insb
pop
pop
outsl
loope
mov
mov
push
pop
inc
cmp
cmp
dec
pop
arpl
std
adc
dec
pop
inc
addr16
dec
mov
les
pop
insl
daa
insb
dec
pop
outsb
jb
insl
stc
insb
or
inc
sti
inc
push
pop
ret
fwait
jb
jbe
scas
pop
cmp
jo
arpl
gs
fstpt
test
imul
mov
lock
dec
imul
pop
outsl
insl
mov
mov
push
ficomps
bound
cmp
pop
inc
push
adc
imul
inc
inc
cs
daa
pop
fisttpl
iret
adc
jne
or
jne
jne
sarb
insl
xor
jns
loope
sbbb
pop
stos
pushl
gs
inc
data16
push
jb
clc
and
aaa
sbb
xchg
popa
arpl
std
insl
jle
insb
jo
sti
mov
push
pop
inc
or
ds
add
jnp
push
popa
push
adc
je
xor
xor
insl
pop
addr16
aas
imul
lods
std
arpl
dec
pop
push
popf
ja
xor
mov
bound
outsb
inc
dec
stc
push
iret
gs
outsl
adc
popa
insb
dec
fs
addr16
push
fs
and
push
jo
in
cltd
inc
adc
or
inc
pusha
inc
pop
fs
in
in
call
jo
imul
add
sti
push
dec
inc
dec
sub
sub
sub
fmull
pop
mov
cmp
jmp
in
arpl
jge
or
xor
mov
stc
sbb
sbb
cltd
out
dec
cmp
lock
addr16
insb
push
sub
sub
cmp
mov
imul
xor
ds
or
mov
imull
in
sti
dec
sub
cwtl
mov
loope
das
jo
ja
decl
or
lret
dec
pop
sub
cld
pushf
push
insl
mov
mov
popa
inc
pop
mov
inc
sbbb
insb
insb
pop
cmp
xor
pop
pusha
inc
pop
push
and
jbe
aas
fildl
inc
xor
sub
sti
aas
cmp
ds
cs
inc
pusha
pusha
imul
push
fisubrs
insb
clc
mov
mov
sub
xor
enter
fldt
popf
xchg
xlat
adc
pop
inc
push
notb
mov
iretw
std
fwait
sti
cmp
popa
inc
add
lcall
cwtl
inc
mov
inc
cld
push
std
inc
pop
insl
mov
test
jo
insl
mov
sbb
ret
push
aad
std
dec
das
outsl
xor
adc
push
adc
push
imul
and
ret
pop
push
cmp
data16
xlat
sti
inc
leave
pop
clc
push
sbb
jmp
add
imul
insl
sub
cld
mov
clc
push
cmp
sub
inc
daa
arpl
cmp
aaa
cmp
jne
push
imul
sti
cmp
test
mov
ds
cmp
cmp
add
outsb
jmp
cli
cmp
sub
and
bound
imul
cmp
arpl
sub
lret
pushl
cmp
es
ss
pop
fs
pop
pop
imul
sub
cmp
sub
push
popa
mov
daa
cli
inc
cmp
ljmp
xchg
cmp
push
cmp
mov
or
outsb
outsb
cmpb
insb
pop
inc
push
ja
aad
insl
pop
movsl
lods
imul
xor
cmp
sahf
cmp
cmp
cmp
push
push
cmp
inc
push
mov
cmp
jne
test
aas
push
pop
dec
sahf
xor
movsl
push
stc
ljmp
arpl
cmp
arpl
outsl
lods
add
push
mov
push
stos
ror
fisubrs
out
outsb
ds
dec
ja
sbb
jnp
adc
mov
lcall
dec
cmp
insb
push
sub
mov
clc
inc
inc
aaa
push
das
pop
add
push
fldcw
sub
sbb
movsl
cmp
pop
or
pop
mov
dec
test
xchg
daa
push
cmp
and
add
jb
ss
aaa
dec
shlb
mov
jo
pop
aaa
insl
pop
sub
mov
pop
adc
inc
stc
lahf
aaa
outsb
sbb
dec
cmp
xchg
daa
inc
insb
hlt
cmp
out
imul
cmp
cmp
ja
std
sbb
imul
pop
outsb
bound
out
pop
pushf
cmc
mov
dec
cmp
aaa
push
pop
clc
or
pop
sti
or
dec
aas
cmp
dec
dec
ds
jg
add
cld
dec
dec
xor
addr16
pop
mov
insl
ret
adc
push
scas
jno
xchg
std
inc
xchg
push
cs
test
imul
push
sbb
adc
push
and
inc
dec
xchg
mov
pop
aad
dec
out
cli
stc
imul
scas
dec
in
arpl
push
or
cmp
cmp
lods
decb
cltd
jno
cli
mov
mov
xor
mov
or
fs
imul
push
cmp
pop
pop
idivb
adc
scas
inc
add
sbb
pop
cmp
ds
xchg
inc
mov
jg
pop
ljmp
nop
cld
push
push
cld
jb
push
adc
or
cld
pop
inc
mov
mov
or
outsb
test
sbb
jo
insb
push
out
pop
pop
imul
pop
cmove
push
mov
clc
add
sbb
sbb
jg
pop
or
sbb
std
push
imul
cli
cwtl
cld
push
sbb
jo
pop
mov
xchg
add
inc
pop
dec
bt
cmp
inc
sub
mov
sub
add
sub
pop
cld
mov
gs
cld
mov
divl
sti
pop
pop
pop
push
sti
jge
stos
outsb
imul
inc
data16
js
inc
pop
cs
lret
pop
jnp
pop
xor
push
mov
mov
mov
mov
mov
lcall
scas
fildll
arpl
cld
or
outsb
jbe
push
push
sbb
movl
arpl
lods
and
inc
movsl
inc
or
add
xchg
sub
pushf
lahf
pop
pop
ds
js
insb
out
lret
jmp
insb
cmp
pop
jecxz
dec
fistps
push
stos
jne
jp
inc
push
cli
dec
pop
arpl
rol
inc
mov
fisubrl
push
ds
inc
pop
or
and
jg
pop
fnstcw
popf
pop
stc
or
testl
sbb
jecxz
fwait
cld
jnp
inc
jl
mov
outsl
fadd
sub
pop
jb
insb
push
push
or
sub
fs
push
insl
push
icebp
lods
aad
roll
fisttpll
push
popa
fidivrs
outsb
fldt
cmp
push
sub
mov
jae
push
sub
pop
das
packssdw
sub
push
imul
bound
sub
cld
sbb
cmp
mov
addr16
cmp
and
cmp
ret
sahf
xor
jmp
mov
stc
ffreep
mov
push
sub
pusha
pop
leave
and
pop
pop
adc
fcmovnu
xlat
sub
clc
rep
movl
movsl
out
into
fiaddl
mov
mov
adc
inc
dec
dec
inc
cmp
cli
icebp
inc
aaa
and
sti
sub
pop
pop
mov
adc
or
pop
and
aam
mov
mov
out
jno
sbb
and
push
mov
fistps
ss
in
mov
addr16
pop
mov
jo
inc
dec
sub
je
imul
push
outsl
inc
mov
sbb
rcrl
sub
outsb
das
push
lahf
pop
sub
andb
test
out
imul
push
imul
pusha
inc
ds
jb
lds
jno
jno
push
mov
imul
push
pop
addr16
inc
dec
cmp
mov
jmp
dec
dec
icebp
jb
push
mov
and
pop
push
jno
rcrl
mov
jne
pop
sbb
pop
sbb
pop
imulb
pop
push
out
dec
inc
scas
inc
inc
dec
inc
inc
mov
sbb
dec
push
dec
lahf
or
lods
scas
add
add
adc
fildl
inc
jmp
pop
inc
push
dec
dec
sub
sub
add
fstl
mov
shr
xor
dec
std
daa
add
push
loop
and
and
pop
cmp
outsl
sub
aad
fs
xor
decl
fwait
loope
pop
fs
add
and
or
adc
dec
outsb
adc
cmp
popa
imul
jne
sbb
je
or
js
sbb
adc
add
sbb
imul
adc
and
cmp
or
cmp
test
test
addr16
inc
pop
jle
cmp
fmulp
mov
notl
push
pop
loope
loopne
lods
sbb
dec
dec
popa
and
pusha
pop
aam
push
pop
js
xor
jae
sub
js
subl
pop
add
sub
push
ja
jecxz
pop
xor
jno
xor
imul
pop
fldt
or
test
mov
jbe
pop
xor
mov
pop
sbb
fldcw
pop
pushl
pop
pop
or
cmp
and
sub
xchg
es
sub
xor
pop
mov
loopne
pop
pop
dec
outsb
adc
adc
mov
imul
pop
mov
sub
sbb
pusha
push
cmp
dec
push
xor
or
in
push
xchg
adc
jl,pt
cmpsl
sub
adc
push
xor
shll
pop
jecxz
movw
adc
repnz
enter
mov
decl
adc
sub
jne
popa
pop
sub
aaa
ret
mov
sub
ret
or
xor
pop
sub
xchg
and
scas
lods
lea
pop
imul
imul
std
cmpsb
out
clc
outsl
pop
xor
imul
sbb
mov
mov
sbb
movsl
mov
push
xor
sbb
bound
jge
mov
lret
cmpl
sub
cmp
and
cmpb
sbb
mov
sub
mov
daa
sub
and
das
xor
cs
push
pop
xor
aaa
outsl
xor
cmp
inc
and
in
xchg
daa
sub
sub
das
sub
data16
inc
jo
xor
repz
pop
insl
negl
pop
pop
jo
xchg
mov
movsb
fcmovne
insb
sbb
xor
outsb
mov
sub
fstl
push
mov
sbb
test
sub
inc
les
mov
inc
out
dec
fs
es
dec
or
aas
jge
push
aam
fwait
cmp
adc
mov
push
aaa
or
jae
fisttpl
ret
jo
push
je
xchg
dec
dec
sarl
jno
dec
fisttpll
or
mov
shl
cmp
push
push
add
popa
dec
jb
adc
dec
jno
xchg
dec
fildl
andl
sarl
inc
and
outsb
loope
pop
push
call
ja
pushf
push
aaa
cs
inc
arpl
sarb
inc
mov
sub
xchg
filds
clc
addr16
jbe
fnstsw
pusha
jb
cmp
fs
dec
ja
aas
adc
push
das
inc
arpl
sub
xor
outsl
jne
pop
push
sbb
jg
je
pop
and
das
sub
popa
pop
push
mov
std
or
dec
dec
dec
cmp
addr16
fsubrs
push
outsl
ja
ljmp
jb
fisttpl
cmp
arpl
xor
pop
aas
data16
add
lods
shrl
shll
sub
cmp
inc
inc
or
ds
inc
inc
inc
dec
inc
dec
dec
dec
dec
lods
dec
push
push
push
push
push
pop
pop
popa
es
jbe
push
push
mov
jo
fucomip
inc
mov
and
daa
dec
dec
out
pop
insl
and
inc
pushw
cmc
inc
addr16
loop
cli
outsl
cmc
loopne
addr16
call
daa
cmp
jae
push
jnp
fsubs
arpl
adc
nop
lret
pop
push
push
inc
outsb
pop
add
lods
inc
cmp
inc
cmp
or
ljmp
dec
xchg
cmp
mov
popa
movsl
and
cmp
pop
push
jg
test
dec
jne
sub
outsl
adc
imul
or
dec
inc
sub
gs
cmp
push
ret
daa
loop
mov
push
bound
jae
jo
inc
roll
mov
jb
ds
lret
rclb
inc
jmp
std
push
call
aad
test
imul
imul
in
pusha
jo
std
std
das
std
add
js
fst
pushl
xor
sti
cltd
ds
push
in
or
orb
out
inc
add
push
shl
xchg
ja
sub
dec
xor
mov
jae
dec
in
pop
dec
insl
mov
xchg
test
xor
jns
jo
sub
je
in
inc
outsb
mov
dec
push
mov
ja
jbe
pop
popa
arpl
xchg
and
cmpb
adc
fs
sub
dec
arpl
jb
push
mov
mov
pusha
jecxz
cmp
dec
dec
pop
outsb
dec
in
filds
mov
mov
sub
shll
mov
cmp
mov
or
stc
inc
ljmp
sbb
xor
sub
sub
int3
sub
sub
mov
pushl
sub
cs
sub
mov
sub
bound
ljmp
xchg
sub
das
mov
lret
xor
cs
sub
xor
pop
clc
or
pushl
gs
je
jl
cs
push
das
and
daa
call
pusha
das
jae
ja
pushf
sub
into
xor
xor
sub
incl
cs
xor
xor
cs
sub
add
xor
pop
das
pop
xor
xor
sub
in
out
adc
xor
test
xchg
xor
xor
cwtl
movsl
xor
mov
xor
ss
in
xor
and
pop
xor
ss
cmp
xor
lcall
cmp
aaa
test
mov
cmp
cmp
pop
cmp
push
jg
jnp
test
xchg
aaa
xchg
cmp
cmp
aaa
iret
cmp
cmp
cmp
cmp
aaa
sti
sbb
xor
sub
push
sub
sub
nop
sub
sub
sub
sub
cs
fstpt
sub
jb
sbb
pcmpeqb
adc
inc
mov
mov
fldt
sbb
xchg
or
lea
xchg
xor
cld
xor
pushl
xor
xor
xor
adc
sbb
aaa
ss
xor
xor
xor
xor
loope
cld
sbb
jle
xor
ss
xor
mov
pop
mov
dec
bound
jne
jnp
xorb
pop
cmp
xchg
shlb
icebp
xor
cmp
mov
xchg
cmp
aaa
lds
cmp
xor
in
cmp
cmp
ss
cmp
cmp
cmp
cmp
ss
cmp
lds
clc
cmp
insl
aaa
mov
cmp
cmp
cmp
sub
decl
sub
sub
push
sub
xchg
sub
sub
cs
outsl
cld
mov
aad
sbb
cmp
push
cs
sub
sub
cs
sub
out
sub
das
das
cmp
inc
sub
jg
das
jno
jns
jl
xchg
sub
sub
icebp
sub
jg
ljmp
cmp
push
sub
push
sub
sub
das
mov
lds
jmp
xor
sub
add
cs
aaa
das
dec
sub
xor
das
lret
sub
xor
sbb
in
cs
xor
sub
xor
xor
push
xor
ljmp
imul
je
js
jg
mov
lcall
xor
mov
add
outsb
xor
mov
xor
cs
xor
fistps
pop
das
jns
mov
sbb
inc
xor
lea
scas
push
in
fistpll
xor
xor
xor
repnz
cmpsl
xor
xor
ss
mov
stos
xor
jmp
add
jg
cmp
ds
shlb
or
movsb
cmp
cmp
aaa
mov
fnstcw
ljmp
icebp
or
cmp
insl
cmp
cmp
inc
cmp
cmp
mov
pushl
mov
cmp
cmp
aaa
fidivrl
cmp
cmp
cmp
aaa
mov
cmpl
sub
sub
xchg
sub
pushl
mov
mov
sub
ret
sub
xlat
jnp
inc
dec
mov
or
or
jbe
scas
sub
mov
shrb
cmc
adc
sub
das
xor
jmp
jno
fsubrl
sub
cs
sbb
and
cmp
call
sub
mov
aad
fsubrs
cvttps2pi
xor
outsb
xor
mov
xchg
shrb
fbstp
std
xor
adc
xor
xor
push
movsl
movsl
jg
jae
xchg
popa
xor
das
lahf
negl
adc
sub
xor
xor
xor
xor
xor
and
test
gs
ja
mov
in
xor
xor
iret
ss
jmp
cmpsl
insl
cmp
cmp
ss
loope
mov
sbb
cmp
xchg
xchg
jg
cmp
outsb
cmp
cmp
jl
mov
mov
cmp
ljmp
scas
cmp
dec
pop
sub
fwait
sub
sub
mov
sub
sub
inc
sub
sub
sar
jg
xor
cmp
inc
cmp
pop
xor
cmp
jae
jle
mov
cmp
cmp
cmp
and
pop
clc
sub
push
cmp
mov
mov
sub
xor
cmp
cmp
pop
cmp
cli
in
cmp
ss
cmp
popf
cmp
jge
cmpb
cmp
ret
cmp
cmc
ss
sub
xor
dec
mov
addr16
cmp
aaa
cmpsl
cmp
cmp
jg
leave
cmp
cmp
cmp
aaa
out
cmp
cmp
pop
addr16
jo
or
add
sub
sub
pushf
sub
mov
sub
sub
or
sub
lcall
test
inc
sub
sub
test
sti
imulb
adc
pop
subb
das
push
sub
aaa
pop
clc
aaa
aad
sub
sti
cld
mov
insb
arpl
sbb
cs
push
arpl
jge
mov
stos
jg
mov
dec
mov
and
shrl
push
das
imul
loop
push
sbb
sub
sub
or
int3
cmp
xor
icebp
outsb
add
addr16
insl
gs
js
or
jg
pop
add
dec
dec
pop
pop
push
outsl
data16
popa
jb
pop
dec
imul
jb
jae
pop
push
imul
push
outsl
push
outsl
jg
lds
dec
adc
jne
fs
je
jge
outsb
sub
jb
jns
arpl
icebp
fsub
pop
cs
adc
addr16
and
cmp
dec
fcomp
data16
je
jbe
adc
outsb
imul
in
and
mov
imul
outsb
shlb
outsl
jo
pop
fs
jbe
imul
in
pop
push
or
insl
insl
ss
pop
jns
jo
push
sti
leave
pop
add
popa
jns
xor
mov
sub
push
les
dec
popa
hlt
push
mov
jne
cmp
jg
jbe
inc
add
ret
ja
outsb
imul
mov
aaa
js
outsb
pop
outsb
fldt
aas
inc
adc
popa
gs
std
mov
iret
mov
inc
jo
inc
gs
popa
push
fisttpl
gs
pop
inc
js
adc
push
push
adc
in
divb
adc
dec
cmc
jo
adc
jbe
data16
imul
add
jne
dec
dec
inc
xor
pop
push
mov
push
inc
inc
mov
lods
fstpt
jb
adc
mov
outsl
sub
cmp
pop
in
imul
push
jae
or
dec
pcmpeqw
jbe
dec
jae
xor
jae
pop
rcr
shll
movd
or
cmp
xchg
jns
insb
add
add
dec
sti
fidivrs
push
and
fs
daa
push
sti
imul
mull
xor
jae
and
or
xchg
pop
xor
jg
push
inc
jae
inc
addr16
inc
inc
push
dec
fs
inc
mov
fcomi
pushl
push
dec
push
imul
popa
add
jno
add
add
std
mov
xor
xor
jecxz
push
push
cltd
xchg
popl
enter
adc
out
ja
outsl
add
fwait
data16
js
adcl
adc
mov
fiadds
clc
idivb
lcall
pusha
inc
repz
fldt
jne
add
outsb
adc
popa
sbb
xor
mov
pop
psubd
and
fistpll
add
or
push
adc
mov
pop
fcoms
testb
add
or
add
fwait
in
inc
add
ljmp
in
lcall
mov
lret
sbb
rcl
aad
das
xchg
cmp
js
fs
xchg
jo
cmpsb
lds
clc
add
inc
stos
pop
out
aas
jns
aam
dec
mov
test
xchg
pop
addb
and
pushl
jp
mov
sub
xchg
mov
add
jb,pn
push
cmp
pop
adc
sub
inc
adc
decl
or
add
test
inc
loop
dec
push
in
add
push
and
sub
pop
push
adc
fadds
in
jmp
add
incl
rolb
nop
add
add
enter
sub
cltd
shlb
jns
add
iret
cld
pop
add
add
add
add
imul
jg
jg
sub
sub
adc
jae
mov
pop
mov
shll
push
add
jb
jbe
sbb
pop
sub
add
add
add
mov
push
or
in
das
add
je
jb
jbe
push
jns
gs
insb
jae
jb
outsb
ficoml
call
jb
fidivrs
add
cmovae
or
gs
xchg
sub
addr16
in
popf
or
gs
pushw
sub
adc
mov
andnps
and
push
imul
gs
mov
pop
sti
insb
dec
popa
jne
push
gs
js
arpl
mov
push
cld
push
outsl
outsl
insb
or
xor
push
mov
mov
imul
daa
inc
pop
fs
notl
jo
dec
popa
insl
push
inc
cs
jb
push
dec
push
jb
arpl
jae
dec
in
int
outsb
or
dec
fs
jle
push
jno
dec
push
dec
jne
dec
outsb
data16
mov
outsl
inc
xchg
and
jl
test
bound
adc
xchg
mov
imul
fwait
push
ud2
push
popa
imul
outsl
xchg
das
dec
bound
je
jmp
int
and
or
lods
arpl
xchg
imul
fs
dec
ret
imulb
fs
jno
fwait
jns
jns
mov
adc
push
outsl
adc
add
pop
ret
xchg
mov
xor
fcmovnu
movsb
fldenv
roll
jae
lods
pushl
int
sbb
cwtl
call
push
jmp
adc
pop
adc
pop
in
pushl
or
call
leave
adc
mov
decl
ljmp
mov
or
and
add
mov
jp
fstpt
add
or
and
incl
sbb
ljmp
or
insl
and
dec
out
sub
insl
aaa
push
out
dec
out
ud0
insl
fistl
dec
xchg
add
xor
cmp
mov
push
xor
adc
lock
fcomi
pop
or
icebp
push
testl
push
mov
mov
mov
push
push
dec
mov
mov
mov
adc
insl
inc
bound
arpl
call
cli
insl
mov
inc
das
dec
jns
sub
xor
addl
mov
frstor
or
push
jo
pop
push
insl
ljmp
pop
je
movntps
fimull
js
or
mov
cmp
sub
sub
popf
aaa
push
add
fwait
add
in
sbb
adc
sbb
jb
jae
arpl
outsb
jle
fnstenv
pop
jae
nop
or
insb
or
dec
out
cs
insl
bound
repz
or
jbe
inc
sbb
outsb
arpl
mov
aas
lods
inc
inc
js
inc
jb
dec
ror
mov
sub
data16
insl
mov
cmpsl
neg
fisubs
pop
push
jae
pop
aas
sbb
imul
push
ret
add
sbbb
ja
aaa
rorb
std
fdivs
out
addr16
jae
push
sbb
and
mov
fimull
fs
jb
fmul
je
icebp
subb
inc
gs
jae
or
lods
jle
or
pop
outsb
xchg
data16
push
outsl
push
jne
adc
lods
jmp
xchg
adc
jbe
fsts
push
mov
ja
jne
or
and
lds
push
in
jo
cmp
cmp
mov
inc
or
out
aaa
fmull
push
cmpsl
outsl
jb
popa
mov
sbb
pop
inc
cs
pop
add
add
in
std
inc
in
fadds
add
add
pop
ja
sidtl
add
xchg
fnsave
adc
xor
add
mov
addr16
adc
add
pop
jnp
cwtl
jge
add
jmp
or
xchg
or
aaa
rolb
repnz
and
jbe
mov
je
js
fldenv
je
and
xor
fildl
pusha
jb,pn
popa
push
push
setg
inc
cs
dec
inc
mov
lea
dec
jae
or
repz
fimuls
dec
lock
mov
rolb
add
add
incl
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
