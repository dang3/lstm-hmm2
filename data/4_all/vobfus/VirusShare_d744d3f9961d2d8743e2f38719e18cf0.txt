icebp
imul
add
add
add
call
in
in
or
leave
jmp
xchg
punpckhbw
mov
movl
call
push
add
fstpt
pop
mov
inc
lock
and
mov
mov
and
or
adc
xor
push
fnstsw
and
push
enter
test
outsb
imul
shlb
rorb
adc
jl
in
pop
sahf
insl
out
mov
lods
sbb
mov
mov
add
out
out
scas
lds
and
mov
and
mov
jnp
scas
sti
dec
pop
mov
sub
add
pop
movsb
call
neg
and
shlb
es
sbb
add
call
sbb
lea
leave
pop
add
adc
inc
out
jle
mov
mov
shlb
lea
jb
mov
xor
fistpll
clc
add
test
or
pop
xor
add
out
int
pop
pop
ret
xchg
je
cmp
xchg
fdiv
iret
std
jne
jmp
cmp
inc
cmp
fsubr
orb
jae
je
adc
mov
cmp
incl
jmp
scas
xor
sbb
add
or
ss
fistl
nop
aas
xor
ret
out
xchg
jg
push
das
mov
repnz
mov
enter
and
or
test
jne
xchg
je
out
nop
add
ja
adc
xor
test
je
out
jmp
in
lods
add
pop
or
or
dec
push
xor
ret
mov
or
mov
insb
cld
push
push
push
sub
hlt
sti
sbb
addl
mov
xor
jmp
dec
mov
sbb
mov
inc
cmp
in
je
mov
add
mov
shl
jne
jge
divl
sti
movzbl
mov
add
and
dec
or
fdivrs
jmp
nop
cmp
jbe
sahf
rorb
jmp
mov
jmp
mov
lea
cmp
js
mov
mov
add
and
cld
sti
pushl
add
inc
cmp
jbe
mov
and
mov
jg
inc
jmp
dec
or
iret
or
les
pop
pop
pop
and
nop
xchg
test
mov
and
jbe
mov
or
out
call
xchg
pop
ja
pop
xchg
add
adc
jns
sbb
js
inc
pop
test
ret
xor
mov
xchg
adc
and
inc
mov
mov
mov
or
dec
inc
jp
enter
inc
inc
repnz
dec
loopne
iret
or
push
adc
inc
pop
test
test
repnz
sub
or
mov
shr
adc
adc
or
sarb
daa
or
mov
mov
fisttps
mov
pop
movsb
xor
in
movsl
add
dec
add
jno
inc
unpckhps
and
pop
test
test
add
add
fildll
pushf
or
scas
and
and
jecxz
movsb
mov
xchg
pop
test
clc
mov
dec
mov
test
sub
xchg
mov
das
or
dec
mov
add
lock
inc
mov
jns
mov
push
add
repnz
rclb
call
inc
cmp
nop
inc
enter
in
adc
and
cmp
mov
test
int3
and
inc
pop
mov
fmul
enter
xor
test
repnz
inc
fcom
sub
mov
aad
das
inc
pop
test
fdivrs
nop
pop
and
fisubl
in
enter
fisttpll
jns
repnz
fisubs
loopne
pop
test
pop
and
sbb
jo
jp
enter
sbb
adc
movsb
insb
jmp
shr
in
and
inc
dec
push
mov
icebp
jb
in
mov
or
adc
mov
daa
inc
dec
test
clc
pop
stc
mov
and
inc
enter
std
fcoms
inc
das
repnz
inc
push
add
adc
add
in
inc
cmpl
pop
or
jne
mov
dec
sbb
div
stos
mov
cmpl
lea
fdivrp
add
cmp
fsubs
push
inc
mov
jne
mov
cld
incl
add
inc
xchg
jle
cmp
mov
push
mov
adc
test
test
cmp
sub
and
and
sbb
stos
fs
sbb
dec
inc
scas
xchg
and
mov
jle
loopne
inc
fcomps
mov
stos
sbb
repnz
daa
sbb
adc
adc
and
or
or
and
or
add
call
clc
loope
mov
jae
fdivrs
lods
sbb
mov
xchg
inc
push
push
mov
insb
das
leave
enter
sub
xchg
fisttpll
pop
sub
mov
add
cmpw
je
mov
mov
mov
pop
clc
inc
lea
mov
mov
out
lods
push
adc
push
or
inc
pop
lcall
sub
mov
push
cmp
jg
lea
mov
sub
inc
sub
js
and
mov
push
jmp
decl
mov
add
xor
adc
rclb
or
or
insb
sbb
lret
pop
in
xor
fdivrl
mov
sbb
out
orb
pop
jne
inc
add
mov
int
ftst
incb
es
lahf
fs
jecxz
jmp
mov
cmp
mov
cwtl
insb
aam
je
iret
cmp
cwtl
test
nop
add
addr16
push
outsl
std
xor
shr
xchg
adc
jl
push
adc
idivb
mov
xchg
xor
aam
ds
fidivs
xor
adc
sbb
in
aaa
jl
cwtl
mov
jmp
nop
pop
xor
xor
and
sbb
in
xorl
and
and
orl
or
pop
ss
and
add
and
pushf
pop
mov
xor
popf
pushf
pop
popf
xor
mov
les
xchg
mov
jbe
or
add
or
pop
sti
add
sarb
add
ret
es
cmp
or
adc
fnstsw
fdecstp
shrl
and
jne
mov
fstp
sti
push
jbe
jns
insb
js
cmp
or
in
popf
adcl
sbb
shrl
jmp
sbb
jmp
fildll
jg
test
mov
mov
mov
mov
mov
mov
jne
mov
mov
mov
aas
mov
sbb
js
xchg
push
and
jbe
insl
insl
fistpl
clc
stos
sub
and
in
fadds
aam
inc
push
enter
dec
call
jnp
or
inc
push
clc
inc
mov
inc
or
or
mov
in
add
mov
and
int3
add
and
loop
mov
int3
xor
addb
sub
add
pop
movl
add
fiadds
test
jne
mov
mov
imulb
mov
leave
jne
mov
rorb
nop
scas
mov
test
data16
sub
sub
mov
jge
jg
xor
lock
add
add
push
loopne
cli
sahf
fdivrs
sub
rorl
pop
add
hlt
fcomp
sahf
jne
cmpl
dec
jne
data16
mov
daa
push
addl
xor
fidivs
and
or
iret
push
adc
in
aas
xor
stc
adc
dec
cmp
lock
in
cmp
or
mov
pop
lock
das
mov
jne
pusha
divl
pusha
adc
lea
inc
mov
jge
push
in
jmp
sub
mov
mov
add
cmp
inc
mov
add
pusha
das
mov
scas
push
add
mov
add
cvttps2pi
mov
in
fmuls
or
push
test
and
ss
leave
xorl
mov
mov
sti
pushl
push
incb
xor
pxor
push
sub
sub
jne
unpcklps
jo
and
jp
aas
les
mov
jbe
jmp
mov
inc
add
adc
xor
jne
xchg
das
insb
mov
test
fnstcw
adc
mov
leave
jmp
xchg
dec
mov
add
mov
insb
rcr
add
push
xor
movsb
cmpsl
pop
pop
call
outsl
adc
out
xchg
xor
and
ja
xor
mov
je
adc
xchg
jmp
mov
adc
add
jne
jmp
cmp
adc
jne
or
push
and
sbb
push
testb
mov
mov
aam
test
or
and
inc
cwtl
push
mov
pop
and
jmp
jbe
fdivrs
mulb
mov
scas
sbb
arpl
iret
dec
add
sbb
shll
xlat
mov
test
sbbl
into
dec
pusha
test
jg
jmp
stos
testb
cmp
je
shl
dec
cmpb
cmpsl
insl
aaa
fcmovu
mov
sysret
cmpl
scas
clc
cmp
mov
inc
push
pop
repnz
les
push
mov
sti
int3
mov
sub
call
mov
mov
ret
sub
inc
rorl
repz
daa
roll
icebp
dec
push
cmp
int
daa
jne
xor
or
jae
movl
incl
push
sub
lock
push
dec
imul
outsb
lock
jne
mov
jmp
fistpll
mov
and
mov
sbb
and
ret
adc
out
lea
test
jae
mov
popl
push
in
ret
or
or
je
dec
dec
mov
pop
addl
mov
inc
lcall
mov
dec
push
mov
cltd
into
arpl
comiss
data16
shlb
xchg
and
jns
pop
daa
dec
orl
push
pop
push
pusha
insb
or
enter
pop
xor
and
xor
inc
xlat
cmp
xor
and
add
or
fwait
add
adc
lea
pop
jne
jb
incl
lds
adc
shrl
add
test
lods
mov
mov
inc
movsl
mov
push
push
jns
ljmp
arpl
jae
fs
insb
add
jbe
push
imul
mov
cld
insb
popa
jae
gs
outsb
je
insl
popa
add
add
popa
sub
bound
or
jne
je
insl
mov
mov
xor
cmp
add
and
or
outsl
mov
gs
push
cmp
or
arpl
cmp
xor
mov
outsl
push
data16
test
xor
pop
mov
ss
shlb
xor
fs
push
adc
xor
pop
data16
fs
sbb
popa
or
jae
popa
data16
adcb
popa
add
pop
and
mov
addr16
stos
mov
jne
xor
adc
popa
adc
mov
inc
and
add
xor
test
push
lods
pop
movsb
sbb
mov
mov
sbb
push
fisttps
adc
push
scas
jns
jb
icebp
push
inc
enter
ja
jb
sbb
sbb
push
adc
popa
lods
xor
and
push
push
adc
stos
xor
test
inc
enter
push
popa
aam
and
xor
or
dec
add
test
xor
and
jo
push
push
dec
add
popa
popa
in
adc
dec
popa
popa
adc
stos
and
ja
sub
loopne
add
adc
addb
or
add
jno
inc
orb
fs
or
popa
lcall
stc
jae
inc
dec
xor
mov
cmpsl
pop
add
test
popa
cmpsl
ss
adc
ss
popa
mov
adc
and
add
inc
add
js
scas
adcb
js
add
sub
test
ret
js
push
stos
and
push
jbe
nop
push
inc
enter
je
or
push
je
add
inc
or
push
jno
adc
jo
dec
leave
or
outsl
outsl
push
adcb
outsb
pop
add
insb
insb
test
or
push
rcll
imul
jb
addr16
adc
data16
adc
adc
jb
bound
mov
add
sub
and
add
mov
add
in
or
adcb
stos
add
mov
add
sub
and
and
addb
addb
sub
mov
and
add
add
or
and
enter
adc
enter
add
add
cmp
add
in
or
cmpsb
adcb
icebp
roll
inc
add
insl
gs
push
jmp
add
push
dec
inc
dec
xor
pop
push
je
push
jb
arpl
pushl
dec
push
inc
dec
dec
add
popa
jo
imul
arpl
mov
mov
je
or
pop
and
jne
insb
inc
insb
insb
ds
js
push
jb
add
adc
jb
add
sub
cmp
add
cs
add
adc
in
in
fidivrl
jo
gs
outsl
sub
pop
inc
mov
fstpl
push
jne
inc
and
cmp
and
bound
jae
fwait
movsl
mov
jp
outsl
data16
sub
add
xor
fstpt
arpl
xor
add
das
insb
imul
jbe
arpl
xor
or
push
fidivrs
addr16
popa
andl
faddp
test
jno
and
mov
insb
outsb
daa
fcomi
mov
lret
je
gs
and
mov
test
ficomps
inc
push
and
and
add
and
sub
lods
and
shlb
imul
sub
insl
or
push
data16
add
decl
inc
pop
inc
dec
dec
dec
inc
sub
dec
xor
sbb
loope
push
dec
push
sub
sub
test
adc
test
push
loopne
add
in
lods
in
pop
cwtl
and
add
dec
mov
add
push
sub
shll
mov
mov
or
add
xor
mov
or
sbb
xor
shll
pusha
push
jb
roll
xchg
mov
mov
and
and
add
adc
add
sahf
xchg
stos
add
add
add
or
dec
add
sarb
add
inc
or
sbb
sub
inc
and
mov
push
lods
push
push
add
in
mul
mov
les
fwait
cmp
push
inc
xor
call
adc
cmp
mov
cwtl
sbb
adc
jmp
dec
fbstp
jb
add
sub
lods
sbb
pop
cmp
pop
es
incl
push
sti
add
popf
out
in
lret
enter
and
ret
pop
aam
hlt
jnp
into
adc
sbb
lcall
cs
mov
bound
add
das
push
and
mov
test
call
inc
sahf
call
mov
popa
dec
adc
jns
daa
dec
push
je
xor
mov
inc
es
aad
adcl
dec
jp
test
dec
rcrl
mov
dec
sbbl
jo
pop
jns
jl
sbb
std
mov
mov
or
ja
push
sbb
xchg
xor
pop
adc
jnp
sbb
xchg
inc
jnp,pn
xor
ret
and
aas
call
in
call
push
inc
or
cmp
xchg
cmp
push
je
xchg
rclb
aas
stos
repnz
xchg
jmp
xor
cmp
push
pop
mov
repz
rol
xchg
pop
call
jne
jne
fcomps
push
xlat
or
cmpsb
pslld
gs
inc
cmp
add
jo
decl
add
shl
shll
mov
scas
orb
out
xor
inc
xchg
jp
push
int
pop
sub
dec
dec
insl
inc
and
mov
add
sbb
decl
inc
push
dec
ljmp
mov
movl
ljmp
xchg
lahf
sbb
and
ljmp
jo
push
in
or
xor
lret
xchg
sti
ljmp
cwtl
std
jmp
and
pop
cmpl
push
pop
ds
cli
out
jmp
cmp
jmp
jbe
decl
xchg
imul
test
jmp
into
xchg
ljmp
xchg
loop
sti
fmull
pop
mov
xchg
aam
sbb
xchg
lcall
leave
adc
ljmp
xor
ljmp
sbb
int
mov
fidivl
imul
icebp
sub
lea
or
ror
cmp
int3
scas
loop
fwait
negl
mov
add
jns
les
loopne
pushl
daa
divl
fs
iret
adc
aam
or
ficomps
and
add
decl
pop
repnz
rclb
outsb
dec
pop
adc
cmp
mov
shl
stos
cmpsb
out
pushl
sbb
xchg
xlat
insb
pop
mov
add
aam
arpl
and
mov
fisttpl
scas
sub
aas
or
jbe
pop
sub
mov
lret
fadds
lcall
adc
lcall
inc
mov
cmp
daa
sbb
popf
mov
add
add
cli
mov
jmp
jmp
fbld
fcmovbe
jae
jmp
push
or
bound
ds
arpl
mov
lcall
cmp
inc
jle
dec
and
std
sbb
lods
std
adc
daa
mov
lcall
nop
xchg
mov
mov
push
fwait
and
cmpsl
sbb
push
mov
pop
cmp
jo
dec
cmp
xlat
mov
xchg
test
add
sbb
cmp
dec
aam
fiaddl
out
incl
push
ss
or
decl
sbb
btrl
lods
jmp
sub
ljmp
pop
iret
stos
adc
add
aas
mov
pushl
repnz
scas
test
inc
aaa
jae
mov
push
xor
inc
jbe
pushl
call
fistps
add
adcb
pop
and
ret
dec
insl
loop
inc
orl
xor
xor
jmp
inc
test
ret
jg
add
xchg
test
mov
js
dec
sbb
jg
cli
sub
fists
fs
outsl
jo
add
cs
lcall
dec
shlb
or
stos
add
je
add
mov
sbb
mov
arpl
in
and
jmp
add
test
inc
and
cli
shrl
aam
sub
fbld
inc
jg
daa
test
xor
ss
ja
inc
xchg
add
orb
stos
dec
inc
jmp
sahf
cmpsl
or
push
outsl
incl
inc
imul
fs
lcall
int
jecxz
loop
cmp
pop
xlat
mov
int
out
mov
js
xchg
cmp
jb
adc
lcall
rcll
or
fnstenv
addl
cwtl
addl
leave
sbb
or
or
xchg
and
mov
push
or
mov
and
and
daa
arpl
jg
xor
push
inc
sbb
and
dec
dec
sbb
xor
decl
mov
ljmp
push
dec
dec
loop
sub
je
in
lcall
xor
in
and
stc
inc
dec
imul
pop
pop
cli
ljmp
nop
push
jg
les
je
ds
es
cli
mov
or
jmp
push
loop
cmp
adc
ss
cli
or
adc
ret
push
xchg
ljmp
and
int
pop
xchg
out
mov
fnstenv
cmp
mov
mov
lahf
pop
push
or
mov
sub
cs
call
ljmp
push
or
xor
pop
xchg
xor
mov
cmp
aas
pop
fimull
aad
in
pop
inc
insb
je
lods
add
mov
xchg
cmc
push
lods
int
outsb
daa
add
pushl
lods
test
imul
xor
sbb
sbb
pop
dec
je
or
xor
out
cmp
lock
insl
dec
test
add
call
lcall
sbb
imul
sbb
call
shlb
mov
mov
jg
and
inc
test
xchg
xorb
mov
xor
dec
jbe
cmc
and
outsl
std
decl
adc
notb
mov
mov
clc
adc
addr16
repnz
decl
imul
stos
jp
adc
xor
mov
xchg
clc
jmp
std
jg
add
and
pop
mov
cli
ss
jmp
and
pop
inc
lods
orb
scas
sahf
push
repnz
sub
mov
mov
outsl
pushl
pop
mov
add
sub
dec
xchg
sti
lea
lahf
stc
xor
inc
mov
mov
sub
in
jbe
decl
jnp
sub
les
and
mov
pop
stos
outsl
jge
mov
cwtl
sbb
pop
pushl
xor
cmpsb
mov
repnz
decl
cmpsb
icebp
xchg
inc
pushl
aaa
mov
cmc
jmp
insl
dec
fnstcw
sarl
xchg
lcall
add
push
js
add
jbe
cmp
mov
dec
sbb
aas
mov
decl
adc
movsb
in
adc
aas
push
xchg
lods
inc
call
mov
fsts
pop
pop
out
mov
loop
or
jp
or
sahf
sub
jg
dec
pop
call
pop
pop
xchg
add
mov
dec
ret
mov
ljmp
repz
das
fcmovnu
mov
test
xchg
scas
and
jmp
jl
in
cwtl
xchg
daa
push
jle
pop
loop
call
mov
cmpsl
jp
mov
int
mov
mov
shl
dec
push
int3
daa
dec
outsl
add
inc
xor
into
inc
mulb
or
dec
ss
add
jg
decl
stc
jns
sarl
dec
dec
in
outsl
dec
cltd
pop
cmc
pop
call
mov
pop
and
jp,pn
or
pop
out
mov
sub
js
or
outsb
push
ljmp
nop
push
lret
fimuls
out
imul
aaa
popa
aaa
pop
out
pop
cld
shlb
xchg
incl
push
cmp
lods
movsl
ss
jno
or
jb
or
cmp
cmpsb
into
dec
fisttpll
pop
inc
fisubl
jb
add
nop
scas
cmp
dec
pushl
dec
jmp
dec
adc
jmp
aad
jg
mov
xlat
lcall
jl
insl
sub
pusha
loopne
jo
test
movsl
mov
dec
cmp
call
sbb
xchg
rcll
repnz
xor
insb
jno
inc
xchg
decl
cld
xchg
shll
pusha
clc
daa
cmpsl
sbbb
lahf
inc
jmp
fwait
inc
jne
mov
ret
dec
dec
shrl
pop
mov
pushl
orl
loope
inc
jo
inc
pop
lea
inc
mov
jmp
cmp
cmp
popa
push
mov
adc
stos
push
out
call
jmp
mov
mov
mov
mov
out
jg
pop
xchg
lcall
mov
fs
pop
test
imul
sahf
es
insb
push
jmp
mov
sbbb
sbbl
add
lods
shlb
xchg
test
pop
sub
clc
ljmp
add
leave
test
insl
dec
in
pop
jo
push
mov
mov
xchg
push
ljmp
cmp
or
pop
je
divb
pushl
lret
mov
ds
inc
mov
fadd
into
std
adc
add
ljmp
nop
insl
sub
jae
or
add
icebp
and
and
mov
dec
insl
insl
sbb
lock
shrl
mov
inc
jg
xor
inc
call
mov
lods
shll
mov
mov
faddl
lock
insl
xlat
pop
nop
mov
pop
lret
adc
test
ss
repnz
jg
xchg
push
xchg
dec
jb
arpl
cld
outsl
lock
or
out
sbb
cld
jmp
loop
cltd
jns
aam
mov
adc
cmc
sbb
mov
std
incl
scas
data16
add
rorl
ret
out
lds
cmpsb
pop
cmp
repz
inc
xchg
sub
outsl
insl
hlt
sub
pop
mov
cmp
div
xchg
sub
push
incl
jno
mov
mov
or
inc
decl
xor
lds
aaa
dec
std
ljmp
incl
dec
xchg
mov
push
inc
push
adc
jo
lds
inc
cli
daa
pop
cmpsb
ja
mov
sarl
aaa
mov
das
aam
shrb
dec
mov
out
inc
jmp
imul
and
mov
ljmp
fs
mov
movsb
stos
mov
fwait
movsb
jns
mov
popf
jl
sbb
flds
std
jge
xorl
hlt
jb
jns
inc
lea
push
inc
ret
lahf
subl
xchg
je
cmpsl
dec
sbb
pop
scas
cmpsl
int
add
leave
out
jae
call
cli
sbb
sti
mov
insl
sub
ja
repz
jmp
flds
test
mov
cld
mov
fs
jg
xchg
push
push
push
jo
xchg
and
decl
push
int
jae
repnz
insl
add
adc
jcxz
movsl
cmp
cld
rolb
inc
push
push
mov
fnsave
mov
mov
lods
out
mov
pop
jne
push
es
or
insb
out
and
std
outsl
icebp
incl
or
lret
xchg
dec
test
pop
loopw
je
pop
pop
lcall
add
and
popa
out
imul
lcall
cld
std
aad
insb
and
testb
fnstsw
jle
ret
lea
mov
and
gs
and
push
mov
jmp
ret
scas
repnz
mov
cmpb
mov
bound
push
jg
mov
push
mov
sarl
decl
ret
daa
rcl
push
in
mov
icebp
call
dec
and
lcall
fldt
xchg
xchg
xchg
jb
jne
scas
sbb
fsubp
lods
mov
or
loope
inc
in
sbb
ljmp
cmp
icebp
nop
stos
or
jecxz
divl
das
pop
cmp
outsl
cld
lcall
mov
lahf
pop
xchg
fidivl
fildll
mov
jne
push
add
and
roll
adc
inc
arpl
ja
sahf
sbb
pop
jno
in
fiadds
es
dec
rcrl
dec
sub
call
fists
xchg
lahf
xor
enter
adc
scas
loope
jg
lahf
sub
arpl
stos
out
mov
aad
jbe
adc
add
hlt
push
fcmovnb
mov
std
jb
jmp
xchg
mov
fmul
push
mov
loopne
decl
iret
cltd
test
test
stos
pop
sub
imul
push
sbb
lcall
mov
repz
ds
pushf
adc
aam
dec
mov
xor
test
idiv
ljmp
gs
scas
dec
sbb
or
adc
sbb
outsl
lock
fst
aas
loopne
mov
lods
cmc
fldenv
adc
jnp
pop
push
ljmp
movsb
ret
bound
cli
cmp
push
pop
imulb
hlt
push
pop
xchg
ret
mov
jbe
aam
mov
orb
bswap
les
cmpsl
out
xchg
inc
ljmp
scas
jg
aad
pop
or
push
push
fdivrs
lods
mov
cmp
push
rorl
call
fistps
stos
stc
nop
jnp
mov
and
cli
mov
insb
scas
std
repz
shlb
xor
fs
out
jns
xchg
cli
pop
pop
xor
mov
ljmp
lcall
pop
and
scas
rcrl
mov
xor
and
lcall
xlat
xchg
pop
add
shr
cmc
insb
cwtl
add
test
sub
cwtl
push
pushl
inc
xor
dec
daa
xchg
and
test
in
inc
shr
mov
int3
clc
js
push
or
jg
lcall
mov
lods
in
stos
lds
and
aam
xor
or
pop
outsb
lds
rcrb
mov
pushf
add
ljmp
push
out
std
add
sub
xor
in
pop
ja
jg
mov
jmp
add
popf
and
aam
mov
cmp
ljmp
or
pop
dec
sbb
adc
inc
mov
scas
adc
loopne
mov
mov
jg
scas
loopne
arpl
sbb
or
mov
sbb
sahf
xchg
pop
dec
repnz
push
push
test
clc
in
dec
roll
inc
in
cmp
dec
inc
in
jno
xchg
nop
lahf
dec
jl
push
repnz
sbbb
or
shrb
jns
inc
pushl
lods
inc
fdivr
ds
mov
data16
inc
sti
add
cltd
or
lods
mov
stos
push
ds
jb,pt
mov
add
xor
mov
loop
incl
out
js
jmp
sahf
repz
fs
cmpsb
and
dec
and
lret
fadd
insl
outsl
hlt
dec
test
push
mov
cltd
mov
orl
jle
jg
fldl
fchs
or
imul
cmpsl
pop
inc
adc
pop
adc
call
mov
std
std
orl
popa
mov
xorl
es
inc
in
mov
out
inc
fwait
scas
inc
stos
pop
sbb
xor
cli
jmp
ljmp
ficoml
push
scas
fdivl
movsl
cmp
and
loope
incl
cld
push
ja
outsb
int
or
xchg
insl
push
je
xchg
xchg
sbb
xor
cld
mov
lahf
nop
mov
pop
popa
test
movsb
dec
lock
pop
jns
xchg
jmp
pop
arpl
jns
cmpsb
push
xchg
xor
xchg
insl
daa
insl
pop
inc
xchg
sbb
aad
xchg
bound
mov
jg
mov
mov
lods
pop
or
sub
fbld
bound
xchg
rcr
je
cld
mov
cmp
fildll
ss
mull
psadbw
repnz
das
hlt
pushl
jne
out
lret
or
dec
aaa
je
xor
lods
imul
push
lahf
and
lahf
jg
jmp
cld
fimuls
test
arpl
scas
call
push
aad
jmp
mov
pop
mov
mov
adc
push
lret
aas
and
sahf
push
out
call
in
out
xchg
nop
aas
ds
call
cwtl
test
stos
sub
icebp
fst
add
ljmp
adc
jmp
mov
dec
or
or
fwait
scas
sub
mov
or
cmpl
push
std
sbb
lret
inc
mov
loop
cld
dec
xchg
jg
jmp
cltd
mov
sbb
test
mov
addr16
pushl
adc
cmp
jmp
mov
inc
push
push
outsl
into
push
sub
aas
xor
xchg
cli
jg
mov
les
sarl
out
pushl
push
ds
dec
and
and
push
sub
scas
sbb
or
lcall
pushf
nop
sbb
xchg
sti
bnd
push
jge
aas
add
out
popa
js
call
xor
jge
aad
pushf
mov
fbld
mov
pusha
cli
imul
push
sbb
xchg
mov
xchg
fsubrs
sub
jae
xchg
sub
mov
rolb
adc
stos
incl
xchg
ja
push
insl
sub
mov
add
out
jecxz
adc
pushl
pop
sarl
mov
out
mov
add
fisubrl
and
or
mov
mov
test
jbe
cs
mov
mov
out
in
int3
or
loop
repnz
inc
mov
ret
in
mov
mov
mov
incl
mov
fwait
mov
inc
outsl
pop
mov
loop
and
mov
lcall
mov
sti
pop
in
inc
mov
out
add
inc
ljmp
stos
lea
ret
mov
lahf
mov
cld
call
repnz
out
push
test
popa
nop
push
out
fstpl
incl
mov
addr16
or
popa
xchg
addr16
or
pusha
mov
mov
imul
sti
sbb
push
ds
mov
or
pushf
int
inc
cmpsb
testb
push
call
clc
pop
test
dec
aad
mov
test
movsl
add
inc
inc
cwtl
test
xchg
mov
aam
inc
dec
cwtl
imul
adc
sbb
dec
test
dec
imul
jns
xor
jp
mov
xchg
and
pushl
in
mov
sbbb
aas
ficompl
test
outsl
out
int
mov
stc
gs
popa
lcall
jle
add
add
push
jmp
mov
push
cmp
adc
cwtl
mov
jmp
add
push
cli
gs
mov
sbb
pop
mov
cs
cmp
lcall
dec
ret
push
shrb
ss
imul
int
movsb
sbbb
xor
insb
or
jp
push
mov
and
call
das
sbbl
dec
imul
adc
jl
cmp
jg
test
incl
jp
ljmp
and
push
push
ljmp
lcall
imulb
imul
sbb
add
call
fistl
sbb
xlat
cmpsl
lods
cwtl
cmp
jg
mov
mov
sahf
popa
popf
ss
sahf
out
test
add
push
insb
andl
ljmp
mull
je
gs
mov
pop
lret
lods
lcall
add
mov
push
cmp
pop
mov
outsl
lock
int
sub
and
addr16
jmp
sbb
pop
or
mov
xor
call
sarl
pusha
or
divb
mov
xchg
incb
xchg
inc
and
dec
cmc
stos
insb
mov
jg
lahf
call
or
es
mov
lret
lcall
cmp
daa
scas
cmp
cmpsl
lea
in
int
int
aaa
push
out
jp
fildll
mov
stos
xor
adcb
jmp
inc
cmpsb
imul
fs
into
jne
test
je
cmp
mov
testl
hlt
repz
jno
push
icebp
mov
clc
iret
cli
sub
fisttpll
dec
ret
add
push
aam
sub
add
ljmp
dec
repnz
pop
sbb
out
mov
push
fsubrp
hlt
dec
jl
mov
sbb
cmp
push
pop
outsl
in
sbb
fdivr
mov
leave
push
ret
repnz
dec
mov
push
cmp
shll
scas
jge
xor
testl
dec
mov
insl
imul
in
push
dec
faddl
sub
cli
movsl
cmp
push
nop
mov
mov
fstpt
mov
addr16
lcall
xor
jle
push
fsubrs
xor
jmp
add
xorb
aaa
mov
mov
gs
ljmp
sarl
cmpsl
cltd
fucom
insl
pop
loop
mov
lds
adc
nop
mov
inc
in
xor
ffreep
ljmp
jb
in
cs
popf
imul
scas
push
sbb
adc
int3
jns
jae
inc
fsubl
inc
jle
icebp
orl
pushl
xor
sub
mov
cmp
adc
icebp
mov
incl
bnd
adc
inc
in
pop
ljmp
andnps
js
jo
sub
sarb
dec
test
incl
fiaddl
test
inc
int
inc
dec
sub
jb
add
ret
lahf
test
lcall
loop
and
std
movsb
xlat
jmp
das
faddp
pop
sub
bound
mov
adc
aaa
clc
push
addr16
nop
xor
es
jecxz
int3
shl
outsl
pop
loop
das
mov
aaa
cmp
jno
dec
mov
mov
imul
lods
jecxz
imul
mov
xchg
jmp
data16
jg
sbb
mov
fwait
jp
inc
xchg
jbe
mov
std
lahf
lods
test
inc
stos
outsl
push
or
dec
pop
or
je
hlt
bound
mov
mov
cmp
lret
cmp
fisttpl
mov
lahf
mov
roll
aaa
cli
pop
xchg
dec
xlat
jns
mov
lock
fucomip
icebp
not
jmp
xlat
call
sarl
rolb
add
sbb
test
into
xchg
fwait
sbb
decl
adc
xchg
rorb
xchg
cmc
aas
repz
inc
daa
test
lods
jge
sti
out
jg
sahf
scas
shll
popf
les
je
int
dec
sub
sbb
ljmp
mov
mov
mov
add
inc
rcl
cmpsb
xor
cli
call
clc
decl
adc
pop
xor
rorb
and
repz
push
and
sbb
mov
je
xchg
and
shl
mov
mov
inc
daa
std
jge
pop
cli
call
ja
and
test
aam
mov
jmp
clc
cmpsb
or
ret
inc
inc
out
int
out
sub
dec
jmp
fldcw
jg
enter
ret
sbb
cwtl
das
jl
mov
mov
sbb
jg
inc
das
dec
or
and
out
ret
xchg
cmp
movsl
rol
or
mov
pop
jp
incl
bound
ljmp
push
cmp
lcall
orl
lea
cmp
cmpsb
repnz
mov
jmp
xchg
ds
xchg
mov
xlat
inc
hlt
push
daa
int3
push
mov
and
jmp
stos
enter
mov
jle
or
vxorps
int
sub
add
push
aaa
push
aam
push
stc
ljmp
cmp
stos
ljmp
test
in
sub
out
mov
adc
xchg
cmp
mov
mov
outsb
sbb
icebp
mov
jle
cmpb
test
out
dec
inc
imul
sub
mov
rorl
inc
jns
ja
add
adc
mov
add
pusha
xchg
loop
nop
or
fbld
loope
rcr
dec
sbb
mov
lahf
jecxz
add
sbb
lods
mov
out
adc
mov
xor
pop
clc
incl
jmp
mov
pop
add
jo
jle
or
push
call
in
push
test
mov
or
out
adc
adc
out
mov
std
mov
cmc
movsl
jo
xchg
pop
xor
mov
xchg
cwtl
cltd
push
movsb
loope
jmp
lcall
push
mov
insl
xchg
jg
mov
adc
fidivs
pop
stos
xchg
out
push
cmp
and
insb
mov
testl
std
push
das
sub
ret
jg
ret
mov
sbbb
data16
jae
dec
scas
call
fstpt
push
jo
xchg
xchg
jo
les
mov
cmpsl
pop
push
cli
cmpsb
movsl
push
test
push
adc
decl
cltd
adc
nop
mov
pop
cmpl
jmp
pop
jge
cmp
ljmp
or
push
stos
adc
xchg
add
popa
mov
pop
jp
xor
dec
scas
mov
sub
mov
push
stc
mov
and
xor
mov
call
addr16
shlb
push
repz
or
mov
fsubrs
mov
call
incl
and
dec
mov
in
inc
stc
and
fdivs
inc
or
hlt
push
mov
call
cmc
mov
or
jge
inc
scas
popa
pusha
cld
jnp
lret
test
in
sub
and
enter
pop
cmp
cli
and
pushl
inc
mov
cmpsl
adc
add
arpl
sbbl
fcom
cmc
das
hlt
jmp
sti
aaa
negb
and
adc
iret
push
decl
inc
stos
jae
out
pop
jb
dec
adc
and
dec
in
out
inc
mov
in
mov
int3
cli
dec
mov
jecxz
ja
daa
mov
push
mov
pushl
fs
loopne
lds
sub
ljmp
ljmp
test
idiv
nop
cmp
fimull
adcb
lock
cli
dec
xchg
jne
ficompl
popf
mov
mov
adc
jbe
xchg
pop
xor
ret
lcall
xlat
sahf
cmpsb
cmp
cmp
jb
mov
imull
shlw
or
test
test
pushf
shlb
mov
sbb
popa
cmp
pop
flds
jg
pop
add
out
sub
mov
dec
stos
stos
mov
xor
or
mov
jmp
sbb
add
test
push
push
outsl
fwait
pushf
and
lcall
or
cmp
jp
and
or
sti
xchg
xorl
sbb
mov
dec
ja
mov
aam
mov
movsl
decl
mov
cmp
js
sbb
jb
je
dec
mov
cltd
popf
decl
xor
pusha
dec
test
push
xchg
into
out
loope
mov
js
mov
scas
ret
sti
push
jmp
jae
cmpsb
adc
ljmp
mov
ficomps
aad
or
inc
shlb
es
xchg
inc
push
jo
push
movsb
imul
mov
jl
adc
dec
cmp
incl
das
sub
aad
pop
dec
into
xchg
inc
out
xor
xor
inc
fidivrs
je
mov
push
insl
cmpsb
and
adc
mov
out
or
lock
aas
inc
xchg
dec
leave
bound
push
aad
lret
fnstsw
cmp
pusha
push
test
mov
mov
or
js
fdivrl
jecxz
aaa
and
pop
lcall
pop
std
std
les
mov
test
sub
sub
sbb
fucomi
xor
stc
ljmp
std
call
aam
femms
jl
push
add
mov
cmp
inc
andl
inc
psubb
movsl
jle
cld
and
pop
and
sbb
scas
mov
jns
andl
decl
xor
mov
dec
and
cmp
call
mov
mov
sbb
push
insb
pushf
sahf
sub
push
lods
pop
int
jno
or
mov
xchg
call
aam
push
cmpl
sarl
mov
loopne
clc
jmp
and
or
pop
outsl
pop
lock
cli
lods
iret
dec
add
dec
mov
xchg
dec
pop
push
mov
cli
mov
out
loop
mov
jg
out
lds
scas
loope
sarl
decl
mov
push
jns
scas
mov
sub
lcall
or
add
movsl
cmp
inc
lcall
sahf
mov
fisubrl
cmpsl
push
sbb
cwtl
imull
imul
push
xchg
clc
addr16
clc
sub
jo
ret
xor
decl
mov
sub
aad
lods
push
mov
push
jnp
lcall
subb
les
into
int3
testl
test
mov
and
ret
ds
decl
std
push
clc
mov
xchg
aas
pop
inc
push
iret
test
les
or
pop
call
push
iret
into
lcall
or
incl
mulps
xchg
bound
aas
or
scas
call
push
push
jbe
fsubrp
test
jo
mov
incl
movsl
loope
mov
addr16
nop
imul
jl
outsl
nop
jbe
pop
call
add
mov
push
out
jp
jno
mov
notl
std
jmp
cwtl
mov
jecxz
dec
and
add
add
fistpll
lcall
pushf
mov
and
out
imul
and
enter
jno
insl
sub
arpl
push
pushl
sub
xchg
or
mov
outsl
mov
cmp
mov
lock
pop
jb
iret
inc
mov
cmp
lock
call
dec
fdivrs
xchg
pop
lds
ljmp
clc
mov
popa
sbb
inc
sub
adc
mov
jb
sbb
push
inc
push
mov
repnz
ja
rclb
xor
mov
fldt
into
ja
rcl
adcb
push
std
fnsave
outsb
and
mov
jmp
push
fs
decl
xor
jl
pop
shll
sub
lods
stos
addl
mov
rcrl
adc
cmpsl
stc
in
mov
test
mov
cld
mov
jo
xlat
mov
push
cmp
adc
rcr
loop
orb
mov
inc
fcomps
call
decl
rcl
insb
push
push
lret
inc
ljmp
pop
jns
jo
jne
testb
stos
push
cmpsb
filds
test
mov
call
push
cmc
pop
stc
testl
out
loop
lcall
push
insb
lea
stos
mov
aaa
push
xor
fwait
pop
std
ret
inc
jg
sub
lahf
scas
jg
push
sbb
push
xchg
inc
adc
das
stc
lcall
lcall
xor
fwait
ja
xchg
in
sti
cli
push
sbb
call
addb
jb
lods
lret
enter
inc
jmp
mov
mov
outsl
jo
std
jecxz
xchg
add
xchg
out
add
test
pusha
xor
xchg
sbb
sarl
pop
push
jns
and
leave
jp
mov
dec
lcall
push
arpl
fiadds
nop
push
pushf
mov
fbld
cmp
popf
ljmp
inc
in
jns
or
imulb
into
mov
call
cmc
ds
std
add
jbe
dec
mov
ret
push
push
jne
call
jno
dec
sti
adc
int
aaa
sub
and
out
lcall
dec
fbld
rep
in
xor
jo
sarb
iret
jg
pushl
pop
mov
mov
mov
adc
jp
mov
call
xor
xchg
and
xchg
sbb
and
test
jbe
std
incl
mov
mov
jae
jne
xchg
cmp
inc
aam
mov
gs
in
mov
pop
pusha
sub
or
jae
xor
mov
repz
ljmp
pushf
icebp
sub
and
and
pop
xor
jmp
outsl
shrl
cli
mov
stos
lea
ss
cld
push
mov
sub
test
or
mov
decl
ficoms
push
and
adc
jecxz
and
xchg
jge
cmc
incl
mov
scas
outsb
fwait
sbb
xchg
push
or
push
ljmp
ret
pushl
xchg
fsubl
call
pop
sbbl
movsl
and
out
mov
dec
sbb
daa
xchg
jp
incl
subb
pop
add
dec
xor
jne
jb
jmp
cld
lods
push
jl
push
cmp
xchg
sbb
mov
mov
cmp
pusha
scas
loop
lcall
sub
inc
push
mov
lea
jge
pushf
into
daa
mov
jne
ljmp
or
sbb
dec
aaa
mov
cmp
and
mov
rcrb
es
das
js
test
mov
dec
sub
loope
cmp
subl
xchg
jmp
push
pop
sub
push
jl
iret
cli
sarl
xchg
fiadds
in
out
sahf
jae
ljmp
test
insb
add
fs
push
and
leave
addb
cltd
mov
inc
or
loop
ljmp
push
and
or
out
push
push
add
mov
and
pusha
pop
mov
pop
cmp
sbb
xchg
or
cli
mov
cmpsl
xor
inc
out
mov
push
add
andb
clc
xor
lahf
sub
fstl
sub
das
adc
loopne
jg
mov
cmp
ret
sub
cmpsb
outsl
cld
jmp
mov
cwtl
adc
daa
dec
mov
fnstsw
and
std
decl
jge
and
addl
fsubr
repz
inc
pop
and
imul
lcall
push
add
sbbb
mov
xchg
in
pop
or
jmp
mov
cmp
sub
xor
mov
clc
std
xchg
jno
inc
dec
loop
leave
pop
clc
mov
add
lds
fwait
and
mov
jg
incl
std
aas
jo
in
shrl
js
add
outsb
xchg
cmp
je
pushl
rcll
or
pop
leave
mov
mov
cmpsl
cmp
sarl
mov
outsl
xchg
nop
and
mov
or
sti
xchg
xor
test
call
enter
xchg
test
adc
js
dec
jg
mov
lret
adc
or
or
call
std
or
sub
mov
xchg
pushf
xchg
mov
xchg
inc
fcomip
jle
and
cmpb
or
and
jmp
or
fwait
out
sub
fwait
mov
outsl
std
adc
push
lret
add
jle
pop
sub
fcmovbe
xchg
or
jmp
aaa
sahf
adc
scas
dec
ljmp
inc
fsubrs
pop
xchg
xor
and
incl
pop
add
out
sbb
insl
inc
cmpsl
inc
xchg
popa
es
jecxz
inc
push
inc
test
mov
mov
data16
or
cmp
pop
mov
mov
fwait
add
sub
push
mov
ljmp
inc
mov
mov
jmp
add
pop
fidivl
stos
shl
pop
jl
sub
jg
pop
jae
inc
adc
dec
dec
xchg
repz
dec
inc
lods
and
mov
mov
mov
adc
pop
in
inc
ljmp
sbb
pop
lcall
xorb
shrl
sbb
ljmp
mov
movsb
or
push
push
mov
jne
and
rol
cld
push
xchg
and
mov
push
dec
pop
jmp
sbb
insb
test
add
decl
outsb
xchg
dec
fcomps
dec
add
cld
iret
aaa
pop
jge
mov
decl
aad
pusha
mov
bound
mov
mov
pop
aas
mov
mov
stc
rolb
mov
popa
mov
mov
ljmp
mov
insl
dec
push
fisubrs
mov
clc
call
lds
dec
xor
cs
sbb
notl
sbb
mov
mov
push
push
and
fldt
fxch
loopne
mov
lcall
imul
test
outsl
mov
xlat
add
imul
xchg
subl
adc
pop
sub
scas
repz
adc
rol
gs
add
pop
aam
mov
push
add
ja
out
mov
movsl
call
decl
dec
mov
shrb
aaa
test
mov
xor
push
jns
adc
in
add
push
js
pop
and
loope
out
mov
fnstsw
decl
pushl
xchg
and
push
jno
lret
jmp
mov
jns
subl
adc
pop
fsubp
and
into
sbb
lods
xchg
stos
jmp
and
mov
mov
sub
mov
ljmp
mov
xor
dec
mov
inc
xchg
and
pushl
adc
or
jp
es
sub
rcrl
dec
mov
jg
ljmp
adc
dec
daa
mov
cmp
ljmp
ja
mov
add
dec
decl
sub
jno
int
cwtl
fmuls
mov
jge
lcall
pop
inc
sbb
imul
sbb
repnz
xor
subb
jmp
shr
dec
call
xchg
adc
cmpsl
cmp
adc
or
add
out
insl
fwait
ljmp
insl
sub
rcll
das
ljmp
or
or
in
jg
or
mov
test
sub
fld
sub
decl
push
jg
mov
mov
out
mov
loopne
jle
mov
aaa
and
lcall
mov
outsl
inc
stos
shr
xchg
pop
shrl
dec
xchg
jecxz
mov
xchg
call
lret
imul
sbb
adc
mov
imul
incl
cmc
sub
jns
jmp
inc
xor
pop
dec
jl
popa
cmp
bound
gs
call
jno
push
lret
clc
xor
sub
xchg
dec
es
ljmp
sar
pushl
loope
rclb
imul
pop
push
push
pop
decl
mov
push
in
cmp
and
xchg
jp
into
xlat
scas
das
xchg
push
jno
call
mov
das
call
cmp
out
mov
mov
inc
mov
ja
add
push
cmp
call
pusha
out
int3
or
rcr
inc
lods
dec
add
in
mov
push
push
pushf
rcrb
ds
add
mov
lds
jl
arpl
lock
jge
xor
bound
pushl
cmp
cmp
sub
mov
insb
clc
pop
in
xchg
cmc
cmp
pop
xor
aaa
cli
pop
jp
mov
mov
je
subb
pop
mov
pop
pop
out
icebp
jne
rclb
mov
cmp
mov
mov
clc
sub
xor
jns
cmp
ret
nop
xchg
jmp
lret
pop
inc
loopne
loop
mov
pop
cmp
sbb
orl
add
rcll
shll
in
jae
jle
dec
mov
ss
fcom
rcl
sti
fwait
pop
test
shrl
fxch
pop
xorl
mov
cmp
pop
scas
int3
pop
sub
push
dec
js
std
popa
ja
lcall
movsb
fistpll
divb
mov
xchg
mov
clc
ret
xchg
and
mov
dec
std
incl
adc
inc
sbbb
jae
sub
test
mov
xchg
sbb
pop
stos
lahf
rorb
movsl
xchg
fists
call
mov
bnd
cmp
bnd
insb
jle
push
xor
lds
dec
ss
testl
repz
mov
ret
xchg
nop
add
nop
popa
mov
cmpsl
jg
add
aam
scas
mov
xchg
pop
push
sub
adc
sub
sbbl
sbb
hlt
push
popf
ja
and
hlt
mov
adc
out
into
xchg
sbb
cmp
movsl
repz
imul
push
idiv
das
jl
jmp
js
xlat
mov
sbb
aad
call
aas
inc
and
mov
shlb
shll
fstl
nop
cmpsl
aam
sbb
or
sub
jmp
jnp
add
pop
push
cwtl
lcall
pop
mov
jae
dec
dec
loope
int
insb
dec
insl
or
jbe
aas
or
loopne
clc
cli
add
daa
lods
fisttps
outsl
jg
jl
mov
fiaddl
pop
jnp
scas
pop
loopne
jg
inc
mov
jns
mov
popf
test
fimull
adc
push
or
pop
xchg
mov
repnz
jnp
sub
xor
incl
jae
mov
cmpsb
jb
xchg
pusha
cld
mov
pushl
in
pop
sar
repnz
mov
test
fnstcw
pop
les
decl
adcb
or
jne
xor
stos
movsl
rcrb
lcall
jns
insb
movsb
jnp
push
loope
lods
repz
fdivl
jne
adc
lcall
mov
addr16
icebp
mov
scas
and
jg
ljmp
sbb
jg
out
lods
ret
push
call
xlat
imul
lock
stos
cltd
inc
jg
push
repz
sub
lret
mov
sbb
sub
cmp
cltd
push
lcall
push
rcrl
nop
pop
imul
mov
movsl
xor
ss
cli
mov
repz
ljmp
shlb
dec
pop
mov
sub
fistpll
adc
push
push
nop
adc
aam
mov
call
pushl
imul
add
lock
xchg
mov
popa
jnp
pop
mov
mov
sar
aam
mov
mov
in
sub
ficomps
ret
push
lds
insb
push
jecxz
sar
jmp
mov
enter
and
nop
shl
pushl
clc
incl
stos
dec
adc
or
sti
mov
adc
xchg
cmp
notl
lea
lret
sti
jle
dec
repnz
sbb
mov
cmp
jo
in
mov
out
popa
in
mov
call
les
fnstsw
out
roll
mov
pushl
ja
mov
in
lods
mov
cld
outsb
adc
cmpsl
pop
cmp
mov
pop
sub
jb
sahf
push
fists
dec
fisttpl
scas
pushl
stos
rcll
fisttpll
dec
fdivrl
push
lcall
into
orb
fdivrs
cld
jecxz
ljmp
loopne
pop
ljmp
xor
call
push
sub
mov
repz
ljmp
inc
ljmp
jmp
outsb
outsb
lods
in
outsb
inc
cmp
cld
call
push
pop
sbb
add
std
mov
lds
aaa
pushf
sar
decl
addr16
rorb
out
push
out
andb
pop
das
ss
fdivl
stc
cmp
repz
jns
jne
call
jg
enter
loopne
inc
jge
jp
data16
pop
imulb
jno
test
xchg
or
call
cmp
ljmp
push
cwtl
into
sub
bound
decl
ja,pt
popf
ss
inc
mov
inc
cltd
bound
push
mov
out
cmp
scas
imull
dec
ljmp
xchg
cmp
out
lods
loope
jbe
dec
ja
cmpsb
ljmp
mov
push
add
sub
pop
lret
lea
sub
int3
add
or
shr
comiss
xchg
roll
decl
stos
icebp
iret
ret
mov
sub
sbb
out
xchg
add
sti
pop
rcll
std
pushl
jmp
rcrl
loop
mov
jo
sbb
push
pop
dec
jmp
imul
sbb
sbb
mov
mov
and
repz
fidivrs
xor
or
test
movsb
sar
dec
add
das
hlt
movsl
adc
daa
ret
jecxz
fidivrs
ljmp
and
and
sbbl
adc
ljmp
ljmp
push
xor
gs
or
repnz
in
in
es
mov
int3
aas
cmp
ret
mov
sbb
cld
ljmp
dec
cmp
out
icebp
test
in
insl
xchg
in
popa
pop
popa
std
sub
or
mov
fistps
push
lea
xor
push
cltd
cli
mov
test
xor
jae
pushf
in
leave
pusha
adcl
pop
sbb
lcall
inc
sub
movsl
in
movsl
adc
daa
cmp
xor
mov
insb
sub
shr
call
jbe
sub
pop
or
push
clc
push
xor
rorl
arpl
cltd
aas
mov
int
pop
cli
call
xor
std
shrl
push
pop
inc
lret
and
xor
add
sub
jb
loopne
and
daa
aaa
push
inc
les
mov
dec
and
lock
sub
xchg
adc
sti
aaa
rcrl
xlat
aaa
mov
pop
xor
test
pop
sub
sbb
lahf
gs
sar
jg
push
out
sbb
dec
lods
jge
pop
xor
cwtl
call
inc
push
ljmp
sti
push
test
lods
mov
pop
xor
clc
call
icebp
mov
sbbl
pop
dec
sub
add
pop
inc
sub
clc
lcall
shrb
sbb
fwait
xchg
loopne
outsl
in
and
pop
incl
incl
push
lds
inc
jb
mov
pop
mov
dec
shl
daa
xor
das
sahf
lds
jle
and
mov
jle
mov
sub
ljmp
sbb
push
mov
outsb
int3
lahf
or
je
fs
lds
inc
ss
repnz
pop
sbb
pop
shlb
jne
je
mov
subb
push
mov
pusha
movsb
stos
jb
addb
adc
jo,pn
rcrb
cmpsb
jae
inc
dec
in
sub
mov
shlb
outsl
popa
pop
mov
and
adc
fdivr
test
cmp
dec
arpl
sbb
push
sbb
jb
cld
in
cmp
into
pop
std
pop
push
cld
fldenv
cmp
in
add
or
mov
outsl
cmc
outsl
inc
mov
test
mov
mov
in
sub
pushl
lods
lods
xor
fwait
rorb
jg
or
pop
dec
mov
add
jg
pop
jbe
loope
xor
outsl
sarl
xchg
je
decb
or
call
and
sbb
aad
cmp
inc
jbe
fsubs
xchg
jmp
dec
xchg
test
adc
ljmp
and
dec
push
lcall
dec
push
scas
push
sbb
scas
xchg
cmc
ljmp
fdivrl
mov
mov
lods
scas
adc
add
jg
enter
xchg
mov
add
inc
lock
mov
jnp
shlb
jg
leave
cmc
into
sarb
push
loop
data16
mov
cmp
mov
lea
call
and
jg
cmp
cmp
jbe
mov
flds
mov
mov
inc
ret
mov
xlat
push
bound
nop
iret
fwait
xchg
pusha
int
xor
dec
jecxz
js
movsb
cmc
sbb
int
inc
cli
mov
ja
and
cwtl
in
sbb
jg
add
mov
scas
mov
adc
jne
mov
pop
pop
fucom
or
push
scas
call
rcll
mov
push
notl
ja
mov
scas
or
push
insb
or
pushl
rolb
push
mov
jp
cltd
ret
mov
push
jp
inc
pop
lcall
pop
sbb
rclb
dec
inc
sbb
and
cmp
mov
mov
rolb
and
mov
xor
adc
mov
pop
and
ja
mov
jno
xor
adcb
cld
inc
pop
lods
xchg
bound
inc
push
pop
js
lcall
inc
xchg
sbb
or
jae
ja
xlat
inc
xchg
or
ret
cli
or
inc
push
fstps
hlt
call
push
movsl
and
iret
xor
jae
lret
adc
mov
add
mov
ljmp
pusha
or
bound
fisubl
mov
sarb
push
push
xlat
dec
das
jmp
movsl
push
jp
scas
imul
stos
pop
movsl
loope
ljmp
cmc
adc
ret
sub
test
or
lock
cld
incl
mov
xor
cmp
mov
mov
and
jmp
outsl
mov
jae
arpl
cli
imul
pop
aas
add
ds
into
jecxz
sbb
lods
mov
std
decl
jmp
cmc
out
lock
jno
int3
fnstcw
in
xchg
dec
push
pop
xlat
dec
incb
xchg
outsb
mov
sbb
mov
outsl
hlt
pop
mov
dec
mov
into
das
mov
pop
clc
pop
sub
lret
repz
scas
std
aam
pushf
leave
add
jg
sti
lock
shrb
ret
ja
or
in
mov
loopne
pop
std
in
push
fnstsw
frstor
out
mov
cli
lods
ficoms
je
and
jmp
rcll
add
mov
sbb
push
sbb
xchg
ljmp
nop
mov
fmulp
xor
in
cmp
xchg
push
xchg
lret
mov
mov
insl
add
push
adc
aam
insl
jns
sub
ljmp
or
test
in
push
call
adc
mov
flds
hlt
pop
addr16
xchg
stos
fwait
cmpsl
push
call
psllw
scas
fdivrs
cmp
adc
cltd
call
mov
movsb
pop
jo
cmpsb
cmp
add
add
xchg
dec
push
adc
xchg
inc
incl
pop
dec
mov
mov
inc
gs
add
cmp
scas
les
call
movsl
ljmp
pop
out
jge
sbb
les
mov
call
decl
push
pusha
dec
dec
and
dec
out
sub
mov
repz
decl
sub
scas
test
cwtl
cltd
popa
add
out
fmul
and
sbb
mov
push
repnz
ds
pushl
pusha
pop
cmp
inc
or
pop
in
add
call
imull
dec
sub
sar
fmuls
test
or
jg
scas
notl
fucomip
movsl
addr16
jns
jo
inc
int
sarl
sbbb
add
mov
sbb
push
lret
lret
icebp
call
aas
fstpl
mov
push
pop
and
add
mov
inc
test
xlat
mov
mov
and
mov
stos
lcall
jb
clc
inc
clc
sbb
es
call
idiv
cs
scas
sbb
in
fmulp
outsl
aad
push
mov
daa
mov
ja
and
gs
dec
mov
lds
inc
call
adc
fiadds
js
sub
add
dec
xor
dec
sub
imul
sbb
push
sbb
fucomip
outsl
cmc
cs
sbb
and
fwait
icebp
jg
pop
cmp
sahf
sbb
sarl
arpl
cmp
mov
movsl
xor
pop
jae
fldenv
dec
cwtl
mov
pop
push
rcll
and
jle
outsl
cmc
sbb
push
std
lahf
mov
daa
imul
es
push
ja
add
cltd
pop
data16
fyl2x
std
xchg
jmp
cmp
movb
jle
int
mov
and
mov
mov
dec
fdivrs
inc
adc
int
lds
inc
aam
push
test
jmp
pop
incl
shll
mov
ret
cs
repnz
mov
inc
ds
bound
call
incl
aaa
push
rorl
dec
dec
xor
or
add
dec
cs
cmp
pusha
pop
pop
push
rcrl
nop
sub
int
xchg
shll
lock
sti
comiss
jg
movsl
test
cwtl
sti
sub
cli
in
lods
rcll
clc
jmp
ljmp
and
in
xchg
movsb
aad
cli
push
cmp
pop
and
test
mov
mov
fs
mov
into
sti
roll
inc
push
dec
jl
jo
lcall
sbb
or
xchg
add
sti
mov
sti
scas
sub
mov
decl
incl
in
adc
lcall
xchg
cmp
inc
xchg
xlat
add
mov
std
lcall
ret
pop
pop
push
movsl
xor
icebp
and
loope
dec
icebp
pushl
cld
inc
dec
insl
daa
and
mov
outsl
jb
es
pusha
icebp
ljmp
inc
in
push
aaa
adc
pop
sub
out
push
loop
daa
rcll
repnz
push
ljmp
sbb
jmp
inc
xor
cmp
stc
pop
ret
xor
repnz
sub
adcb
insl
leave
repnz
pushl
orl
mov
push
subb
jno
jne
int3
push
mov
fs
jmp
psrld
enter
mov
es
aam
imul
lds
sbb
popf
daa
lret
push
decl
shl
fldcw
mov
xor
push
push
add
leave
mov
pop
add
lcall
dec
mov
jp
push
add
pop
mov
clc
push
jg
sbb
hlt
pop
adc
jle
cltd
ds
sub
and
sbb
in
in
in
fldt
loopne
out
dec
jb
aaa
xchg
outsb
icebp
call
lods
xchg
cmp
mov
add
jae
ljmp
movsb
or
roll
lret
cmp
inc
pop
mov
lds
mov
add
sub
adc
sbb
out
xor
fidivs
inc
adc
shlb
shlb
xchg
and
dec
sub
push
pusha
inc
push
mov
fdivl
sbb
xchg
sub
xor
mov
notb
mov
cmp
sbb
pusha
mov
sbb
cltd
in
mov
ljmp
out
sub
sub
push
adc
imul
mov
incl
outsl
rclb
ljmp
mov
sahf
mov
xchg
out
or
loop
push
pop
dec
sbb
int
xchg
fisttpl
jbe
sbb
xchg
push
push
add
lret
mov
xchg
sub
pushl
mov
adc
out
xor
mov
dec
cltd
xor
pop
dec
pop
call
pop
mov
shr
mov
sub
add
cld
and
sub
or
cld
outsb
in
jae
lds
scas
incl
and
mov
jns
xor
xchg
adc
xchg
ds
pop
mov
sbb
pushf
incl
ficomps
push
dec
data16
in
mov
dec
aas
int
std
dec
and
mov
shlb
ljmp
mov
roll
call
dec
shlb
clc
outsl
xor
je
andl
or
dec
lods
daa
loope
leave
cmpsl
in
mov
mov
mov
ds
jg
xor
pop
sub
js
int3
loop
pushf
pop
jb
std
xor
mov
mov
decl
sbb
ss
addr16
mov
pop
aam
push
lock
jmp
jge
in
or
popf
sub
scas
hlt
mull
mov
sub
int
sahf
fucomi
data16
pop
and
sbb
es
jl
jl
es
in
push
mov
inc
aaa
lds
outsl
add
je
or
pop
fistpl
jmp
xor
mov
pop
test
stos
jge
sub
xor
xchg
test
jmp
adc
out
fmull
decl
popf
stos
sbb
jecxz,pn
and
sbb
fisttpl
push
jg
insl
push
lahf
lea
mov
jge
mov
jg
fists
cmpsl
jle
ret
adc
inc
push
mov
push
fs
ljmp
out
mov
xor
out
pop
stc
or
icebp
and
loop
pop
sbb
ljmp
int3
stc
aas
jno
cli
orl
cltd
ljmp
incl
leave
fdivrl
mov
in
imul
arpl
sahf
enter
mov
jg
call
aaa
push
pop
std
outsl
mov
pop
lea
dec
fs
lret
ja
loop
loop
outsl
cld
outsl
jl
mull
pop
mov
dec
dec
leave
add
push
cs
or
call
push
out
cmp
mov
push
jns
mov
fstps
adc
inc
stc
jmp
mov
xchg
mov
and
and
pop
test
mov
inc
push
xchg
cs
xor
in
sbb
push
adc
adc
movsl
lods
dec
sarb
aaa
clc
dec
int
jmp
sbb
mov
in
and
mov
mov
sbb
or
sbb
mov
mov
mov
sbb
lahf
enter
daa
and
outsb
cmp
push
xchg
clc
mov
lret
push
xor
gs
sub
pop
out
popa
dec
pop
clc
add
or
fsub
pop
dec
add
shll
xor
mov
test
fbld
push
outsl
cld
jmp
aaa
dec
adc
aad
mov
pop
sub
bnd
lcall
inc
add
dec
or
mov
stos
push
jno
scas
dec
cwtl
pushl
mov
lahf
push
mov
push
ljmp
and
in
jg
inc
dec
stos
add
es
test
add
adc
push
adc
jbe
sub
aam
imul
imul
xlat
popa
cmp
mov
xor
sub
fnsave
cld
jmp
xchg
xchg
inc
push
mov
cmc
dec
push
or
daa
pop
add
aad
hlt
decl
xchg
mov
in
or
push
or
jg
mov
rolb
loop
pop
xlat
into
aad
loopne
addr16
sahf
movsl
push
xchg
mov
int3
faddp
xchg
fwait
inc
cmp
push
lods
flds
fcmovu
jnp
call
cli
xor
pop
lret
insb
xor
into
xor
pushl
pop
mov
jmp
je
ret
xchg
mov
cmp
mov
pop
arpl
mov
ret
jb
mov
outsl
add
mov
sub
sub
das
int
push
jmp
sarl
mov
mov
decl
lods
fldt
mov
std
push
rcrl
imul
fiaddl
jb
xchg
jmp
dec
std
inc
test
aas
mov
sahf
sbb
hlt
pushl
ds
xor
int
and
mov
jmp
mov
add
lcall
mov
hlt
inc
push
add
test
xchg
add
loope
test
sub
jnp
lret
lcall
jg
and
fs
pop
inc
cmpsb
test
push
add
mov
cmp
jb
aad
jl
xchg
xchg
call
ret
cmp
fwait
jmp
dec
arpl
leave
daa
int
andl
dec
insl
cmc
idiv
lcall
xor
push
xchg
add
mov
mov
ffreep
add
dec
sub
dec
or
imul
sbb
incl
es
mov
daa
sub
pop
mov
mov
nop
or
cmpsl
sahf
pushl
sbb
popf
shl
mov
push
ret
rcll
negb
cs
insl
out
push
mov
data16
dec
popa
test
adc
insl
sub
and
mov
aas
inc
das
outsl
scas
ret
cmp
lahf
push
jle
clc
and
mov
scas
push
or
lock
inc
out
cmc
fcomps
pushl
push
int3
xchg
test
mov
push
add
jnp
rorl
dec
incl
lods
adc
scas
mov
inc
push
fwait
int3
movsb
cmpsb
sub
call
sub
ret
pusha
rolb
outsb
loope
incl
scas
lret
test
xor
mov
pop
nop
lcall
ret
repnz
adc
mov
test
movsl
mov
negb
inc
mov
cmc
ja
shrb
imul
js
pop
sti
iret
adc
into
addr16
js
lcall
jmp
jb
pusha
inc
mov
decl
mov
mov
cmp
shl
sbb
mov
popf
xchg
sbb
call
outsb
sub
xlat
pop
fwait
sbb
mov
cmc
aas
aad
enter
mov
pop
stos
mov
inc
xchg
sbb
rorl
outsl
mov
je
inc
inc
arpl
xor
stos
pop
mov
ljmp
aad
push
jae
mov
jecxz
cwtl
xchg
push
popa
out
mov
incl
nop
fdivs
fistpll
cmp
dec
sub
rcrl
sbb
jb
outsb
dec
or
jg
and
repz
popl
mov
repnz
jns
inc
dec
lahf
addb
jecxz
ds
push
movsb
stc
int3
mov
icebp
dec
je
fcoms
fistps
mov
mov
push
sub
jbe
loope
sbb
adcb
push
into
repz
cmp
push
pushf
pop
test
or
xchg
sub
jmp
enter
ret
adc
lcall
popf
nop
push
inc
pop
adc
insl
push
mov
xchg
mov
in
mov
xor
stos
pop
out
xchg
jecxz
lcall
mov
decl
mov
out
in
push
xor
not
outsl
aas
pop
jg
lahf
sub
mov
jo
jno
aaa
lock
call
stc
mov
mov
sub
imul
cmp
jbe
inc
sub
incl
xor
rcr
lods
or
lcall
inc
pop
stos
sub
popf
sahf
mov
neg
lcall
lcall
cmp
push
push
push
add
insl
cmp
dec
in
mov
cmp
pop
fnstsw
inc
ret
dec
jl
ljmp
pushf
enter
adc
xor
flds
push
pop
pop
sti
sbb
lcall
mov
out
rcll
test
adc
les
out
sbb
jg
sarl
aas
dec
xor
lahf
sub
movsb
or
jl
js
pop
mov
insl
jmp
std
decl
fnstenv
add
stos
jl
mov
out
mov
xchg
cmp
decl
or
pop
dec
and
arpl
ss
rorb
inc
test
daa
sub
jg
bound
jg
pop
sub
pop
sahf
lret
rorb
inc
call
mov
fisttps
clc
mov
insl
xchg
cwtl
mov
cli
incl
lds
sub
repz
sub
jmp
or
cli
lock
or
adc
pop
out
add
loopne
mov
fwait
data16
or
test
mov
call
ret
cmp
adc
stc
jge
xchg
xor
sarb
mov
jg
sbb
leave
sbb
shr
ss
sbb
inc
pop
fld
dec
adc
pop
push
pop
js
cmp
stos
arpl
jo
popa
mov
mov
push
and
cmp
or
xor
jbe
fdivrs
sbb
call
movl
test
dec
fnstenv
aaa
mov
and
dec
lods
push
pop
adc
and
decl
push
gs
loopne
jle
jl
inc
lret
call
or
fcom
mov
fisttpll
jge
or
call
leave
push
shrb
sub
enter
push
incl
ja
and
push
adc
jecxz
data16
pushl
clc
daa
insl
jns
rorb
mov
fistps
sahf
test
scas
xor
ret
inc
orb
and
xor
loop
inc
fiadds
push
lea
sbbl
inc
js
jecxz
gs
mov
jg
pop
pop
out
pop
and
jbe
jno
and
jp
stos
pop
inc
shlb
test
jg
icebp
or
ret
mov
int3
ficoml
jns
dec
aaa
cmp
icebp
xlat
pop
rorb
pushl
and
inc
rorl
push
add
pop
add
incl
mov
and
pop
sbb
xchg
pop
idiv
out
sub
scas
add
xchg
xor
mov
out
push
inc
idivb
cli
mov
mov
adc
xor
in
loope
inc
ror
pop
xchg
xor
mov
and
push
js
add
aas
out
xchg
jecxz
sarl
pop
sub
push
aam
iret
jl
cmp
incl
mov
rcll
imul
pushf
sar
mov
xor
les
pop
aad
data16
dec
jp,pt
into
push
je
inc
push
mov
xor
cmpb
out
dec
lods
sub
push
sub
cmpsb
out
sub
incl
mov
dec
xorl
cli
mov
gs
insb
mov
adc
xchg
nop
dec
xchg
push
inc
push
cmc
mov
jle
pop
jg
jno
or
in
jg
xchg
negl
push
push
or
mov
enter
mov
pop
lcall
dec
pop
cmp
xor
shll
pop
jl
int
test
pushl
cmp
xchg
pop
lods
mov
sub
mov
jg
decl
push
adc
shl
push
rclb
stc
dec
sbb
and
decl
dec
out
push
pushl
push
arpl
and
and
insb
and
decl
push
dec
shll
cmpsl
popa
sub
push
les
adc
push
fsts
pop
sub
jg
jo
jb
push
sar
loope
and
ja
jmp
cmpsl
arpl
mov
jns
lea
dec
fwait
mov
sub
lcall
ja
ret
jecxz
add
decl
cmp
xor
decl
and
add
sbb
jae
push
hlt
or
inc
mov
fistpl
das
icebp
aad
cmc
xlat
sub
inc
fisubl
jo
add
jb
out
sbb
jb
xchg
js
pushl
sar
xchg
mov
cli
push
add
xchg
popa
call
pushl
mov
loopne
movsb
call
mov
lock
pop
mov
or
lds
sbb
mov
rcll
mov
and
pop
scas
push
pushf
jg
cmp
gs
xchg
cli
pop
push
fcoml
mov
and
fstpl
pop
dec
mov
inc
call
outsl
rorb
lods
dec
dec
cwtl
mov
cmpsb
call
mov
cmc
aas
pop
dec
mov
push
lock
xlat
cld
push
adcb
stos
les
sbb
mov
xchg
mov
add
sub
and
push
inc
into
pop
and
das
xchg
das
cmp
lods
push
pop
xor
aad
cmc
and
rclb
das
inc
mov
dec
sahf
push
les
popf
add
bound
orl
inc
push
push
xchg
scas
int3
xor
lcall
xor
xor
loop
and
out
mov
fisttpll
xchg
mov
dec
mov
std
rcrb
mov
rcr
outsl
jae
jg
cwtl
mov
jmp
popf
cmpsl
push
fnstsw
push
es
mov
sub
mov
in
mov
test
jno
imul
jl
ret
xchg
fsub
fbld
fnsetpm(287
jb
imul
sub
lcall
lea
mov
jnp
xchg
arpl
js
in
mov
out
stos
mov
adcl
mov
jecxz
jo
pop
jle
mov
xchg
dec
sbb
out
movaps
xchg
jmp
lods
popa
mov
adc
dec
cmpsl
dec
cltd
mov
ror
mov
call
jl
push
or
xchg
lsl
clc
mov
sbb
push
stos
or
mov
dec
aaa
and
mov
xchg
push
jmp
mov
inc
jnp
addr16
sbb
out
adc
subl
je
cwtl
add
pop
add
in
cmp
out
or
movsb
pushl
push
add
push
add
add
mov
lods
pusha
and
pop
cmp
out
outsb
adc
ljmp
add
stos
adc
sarb
push
ror
sarl
decl
inc
mov
mov
daa
call
mov
mov
lret
test
mov
cmp
jb
test
mov
aam
pop
icebp
mov
sub
cmpb
sbb
mov
in
or
mov
sub
icebp
dec
jb
lret
das
std
mov
jl
and
gs
dec
pcmpgtd
cmp
inc
shr
pop
lcall
std
roll
scas
fnsave
popf
jne
out
lds
add
pop
mov
jmp
outsb
pop
dec
cmp
jo
push
mov
pop
pop
into
push
popf
ret
clc
js
aas
jl
push
jnp
fs
xchg
mov
sti
xor
lods
lcall
ljmp
xchg
pop
add
lods
popf
or
fwait
loopne
pusha
cmp
jbe
data16
jmp
add
mov
pop
mov
dec
movsb
mov
add
test
fsubrl
pop
lods
fdivs
jecxz
cmp
jg
xor
jmp
icebp
aad
daa
jo
mov
push
jbe
dec
lret
and
xchg
mov
das
lock
mov
cmp
inc
nop
and
fstpl
cli
mov
jmp
or
mov
sub
xor
sbb
add
shrb
push
xor
mov
mov
insb
shl
addr16
jg
dec
xchg
das
scas
xchg
pop
pop
pusha
sub
stos
pop
bound
scas
push
xor
and
mov
pop
pop
push
mov
rcrb
sbbl
jg
inc
rcrl
adc
aad
lock
add
ljmp
or
inc
sahf
cmp
pop
lds
push
cmp
mov
push
xor
rcl
imul
aam
ljmp
jne
add
jl
jecxz
mov
mov
push
inc
pop
jp
adc
ljmp
test
jmp
scas
in
adc
loopne
leave
sub
data16
jmp
iret
sub
sub
push
inc
clc
push
or
rcrl
hlt
out
push
in
popa
les
push
adc
xlat
and
sbb
repnz
call
mov
inc
inc
xor
inc
xlat
insb
sti
dec
pop
jmp
xor
inc
dec
jge
jl
outsl
cld
pop
jnp
pop
jno
jne
aas
ss
insl
popa
out
lcall
dec
push
lret
mov
hlt
test
sbb
adc
xlat
daa
cmp
adc
xchg
jg
outsl
lock
jo
sbbl
xchg
cli
rolb
inc
xor
incl
add
loop
adc
lods
mov
pop
sbb
xchg
adc
scas
sarl
incl
psubw
push
xchg
imul
sets
push
sub
insb
mov
jg
enter
mov
cmpsb
push
push
or
pop
and
cmp
fildl
hlt
shr
loop,pt
lea
orl
inc
mov
fsubp
pop
imul
mov
data16
fsubrl
xchg
mov
mov
mov
ljmp
cmpl
adc
les
xchg
or
push
ficomps
decl
dec
cmp
stos
clc
pop
and
jns
lret
mov
push
cmp
pop
es
xchg
mov
out
lret
mov
xchg
test
dec
push
out
mov
ljmp
push
pop
sub
push
mov
sbb
jg
loopne
pop
mov
mov
jp
out
jo
add
ljmp
xor
xor
mov
ret
sti
dec
push
jnp
pop
cmpsl
xchg
sbb
mov
hlt
lcall
inc
pop
dec
mov
sub
ret
mov
addr16
sub
aam
add
add
fcompl
sbb
les
add
mov
mov
cmp
mov
or
jmp
xchg
adc
int3
and
jo
fucomip
lcall
aad
mov
mov
add
pop
enter
jle
push
cli
lcall
mov
mov
jl
rclb
mov
fnstcw
sbb
adc
mov
nop
in
cmp
test
adc
lcall
adc
loope
xor
inc
loope
or
mov
push
insl
cltd
fnstsw
cmp
dec
ficoml
xor
lcall
mov
jo
ja
leave
call
imul
sub
cwtl
sti
mov
decl
dec
hlt
mov
sub
sub
lret
das
adc
outsl
pop
repz
nop
xor
data16
cmpsl
mov
out
aam
movsl
call
idiv
mov
cmc
inc
loop
sahf
pop
pop
cmp
es
mov
sbb
fstpl
pop
xchg
xlat
repnz
repnz
jne
sbb
decl
xor
sbb
in
inc
mov
cwtl
fmul
xor
mov
inc
lcall
xchg
test
xchg
loop
repnz
xchg
sub
cmp
call
ljmp
adc
dec
aad
jbe
adc
push
sbb
jnp
fsubs
mov
cs
jnp
cmp
xchg
jno
ret
xor
test
dec
sub
in
xchg
incl
leave
scas
pop
fisubrs
imul
push
pop
cwtl
iret
dec
xorb
decl
pop
leave
sbb
cmp
notb
ret
leave
cmc
dec
jle
dec
add
pushf
jg
cltd
leave
add
or
push
mov
pop
push
test
mov
adc
insb
sbb
jp
inc
lods
jae
push
loope
cli
sbb
or
mov
mov
cwtl
push
movsl
xor
into
cmc
lods
pop
call
fisubl
mov
xor
cmp
enter
pop
jg
adc
pop
pop
shlb
arpl
mov
cmc
xchg
push
jns
dec
incl
ljmp
loope
jno
ret
and
mov
outsl
in
inc
cmp
jg
mov
nop
add
movsb
jmp
test
fisttpl
pop
leave
jp
mov
push
repz
ljmp
adc
lds
mov
dec
or
ret
mov
or
mov
loop
call
imul
popa
xchg
fcoml
cmpsl
ss
pop
dec
or
jmp
pop
lret
mov
sbb
push
pop
enter
incl
stos
pop
iret
cwtl
pop
aam
inc
push
inc
adcl
mov
xor
popa
push
aam
xor
and
pop
pop
lock
call
fcomps
adc
xchg
mov
and
or
rol
jbe
rorb
loop
lcall
loopne
fsubs
cmpsl
sub
cmp
int
fcomps
inc
loopne
jmp
mov
xchg
or
xor
add
fdivrs
pushl
bound
xor
das
push
jno
push
mov
movsb
insl
push
push
sbb
aad
in
adc
test
test
pushl
inc
rolb
xlat
cmp
mov
fmuls
xchg
adc
cmp
jg
mov
push
std
call
shrb
sbbb
pop
fildl
mov
push
xchg
decl
cmpsl
add
into
sahf
cmp
mov
test
or
dec
add
mov
xchg
movsb
aam
in
repnz
insl
inc
cli
mov
clc
xor
or
int3
aaa
and
pop
call
push
ljmp
dec
imul
stos
dec
push
pop
push
test
lods
bound
sbb
jns
push
loop
pushf
and
sub
idiv
ja
mov
decl
jge
rcrl
add
and
lcall
and
jae
loopne
call
cmpsl
cmp
and
mov
jmp
lods
pop
sbb
xchg
aas
push
sbb
and
ds
mov
dec
pop
pop
movsb
mov
ss
pushl
and
cmp
lcall
sub
adc
pop
pop
clc
xchg
aam
fisubrs
inc
mov
out
sar
add
je
je
pop
outsb
lods
fidivl
push
or
xorl
sti
out
dec
popf
sar
lahf
add
sbb
mov
xchg
push
xchg
mov
enter
jg
in
insb
pop
cmpsb
cmp
lea
sub
push
sbb
ret
and
cltd
outsl
clc
incl
sub
push
repnz
pushl
adcb
or
xchg
fbld
pop
mov
cwtl
or
sub
xchg
insl
es
sahf
dec
mov
jmp
cld
xchg
and
aad
jae
jns
or
mov
repnz
je
cwtl
sub
jmp
push
jecxz
adc
divl
ret
cmp
ja
lea
cli
ljmp
aad
nop
mov
or
or
inc
imul
jo
dec
lods
mov
jg
jne
add
daa
roll
iret
push
mov
out
push
push
fucomp
jae
popf
xchg
clc
sub
jo
cmp
sbbb
call
cmp
push
arpl
pop
loope
pop
shrl
and
sub
stc
call
loopne
aam
adc
jno
and
pop
stos
icebp
pop
sub
rolb
add
mov
test
push
jmp
xchg
sub
mov
mov
lock
sbbb
sbb
popf
pop
jmp
jle
lcall
push
adc
ret
test
int
mov
sti
xor
dec
roll
stos
dec
movsb
push
addb
arpl
fstps
cld
ljmp
ret
rcr
popf
inc
lock
xor
fcmovu
mov
ss
xor
dec
cld
push
arpl
inc
cli
and
jbe
imul
jne
stos
sub
fnstsw
faddl
mov
mov
imul
scas
sbbl
xor
dec
push
adcb
mov
rclb
popa
xor
inc
xlat
pusha
jge
int3
mov
aam
pop
jmp
lods
adc
push
and
pop
push
jg
pop
out
loop
jmp
inc
outsl
int
mov
movsl
xlat
aaa
pop
mov
lcall
and
call
scas
mov
xor
xchg
fldt
insb
sbb
lds
aad
fsts
cmpsb
jae
out
push
jp
mov
fistpll
stos
mov
jl
mov
pop
call
lods
push
sbb
mov
pushl
mov
mov
loope
mov
jle
call
movsl
andb
push
test
pop
into
inc
fmul
jno
and
dec
sbb
mov
ret
mov
incl
xor
push
sbb
sub
dec
mov
or
pop
shl
xchg
pop
das
cld
lcall
fsubr
scas
arpl
aaa
add
inc
mov
dec
push
ljmp
shll
int
mov
in
loop
jns
jp
add
or
inc
inc
xor
ljmp
cmpsl
dec
aaa
xchg
outsb
std
mov
fstl
incl
xchg
mov
push
jg
test
cmpsb
mov
dec
mov
sbb
jg
lahf
cmp
mov
xor
or
fmull
leave
push
sbb
add
mov
cmp
push
pop
cmp
push
test
dec
addl
repnz
or
dec
add
call
dec
mov
cltd
call
outsb
xchg
sub
cmp
movzwl
inc
add
xlat
and
ljmp
mov
ret
scas
jge
dec
ret
mov
sbb
aaa
push
mov
lret
scas
and
aad
rcrb
add
imul
loop
mov
adc
ficoml
gs
jae
or
mov
sub
or
setno
mov
popa
leave
xchg
scas
imul
or
jb
mov
cmp
and
mov
xchg
and
cmp
arpl
leave
mov
inc
or
jmp
sbb
shlb
mov
push
sub
out
in
fistpl
lods
pop
pop
and
jl
jl
sub
jle
idiv
in
outsl
es
and
popf
sbb
push
in
fnsave
adc
and
fdivs
add
push
push
imulb
and
add
dec
xchg
nop
push
jo
xchg
cli
cmpsl
in
mov
scas
lahf
cmp
mov
cld
add
and
xlat
nop
fidivs
das
std
incl
outsb
lret
fdiv
in
pop
popa
lahf
popf
sti
lods
pop
insb
test
push
ljmp
inc
out
mov
mov
and
andl
xor
cli
loop
fisttps
jo
and
adc
and
or
ss
loope
inc
mov
jge
lcall
js
jb
mov
sub
sbb
push
test
orb
out
pop
sub
hlt
push
pop
js
mov
pop
scas
push
enter
lods
fsubp
and
sbb
mov
out
adc
hlt
decl
jmp
lods
or
cld
dec
fmul
or
stos
sbb
lahf
sti
hlt
incl
inc
rolb
mov
in
ja
or
fwait
push
mov
loopne
sub
sbb
sub
fmull
out
add
rcrl
in
jecxz
nop
push
inc
inc
aad
popf
or
sbb
mov
das
cld
lcall
in
cs
pop
in
adc
dec
repz
call
mov
and
xchg
repz
aaa
ljmp
roll
repz
movsl
pop
addr16
insl
fidivl
dec
cli
pop
pop
bound
cmpsl
sub
lahf
fwait
out
lods
fisttps
pop
stc
in
cmp
pop
sbb
arpl
jmp
jl
aam
cmp
mov
subl
iret
push
fwait
mov
pcmpgtd
loope
mov
mov
push
dec
pop
xchg
dec
jns
fiaddl
or
xchg
adc
out
mov
incl
and
mov
cmp
adc
pop
mov
rclb
int3
add
lds
cld
xchg
cli
icebp
push
mov
dec
or
adcl
popf
mov
ljmp
rcll
jae
ds
lahf
cwtl
ja
incl
and
inc
and
lea
pushl
inc
aad
push
adc
call
mov
jmp
and
mov
jnp
push
jno
das
icebp
and
jl
mov
ficoms
pop
scas
inc
call
mov
dec
fwait
inc
pop
push
fimuls
inc
clc
push
sbb
jno
xchg
les
jo
ds
andl
push
mov
and
ljmp
inc
mov
aad
pop
addr16
aas
outsl
cmp
dec
mov
cmpsb
fstl
push
js
repnz
pushf
loopne
jmp
mov
lcall
lods
outsb
cmp
jae
and
outsl
or
iret
insl
jne
shr
jg
jmp
pop
mov
cmp
sub
fimull
std
cld
test
mov
leave
nop
jne
mov
test
lahf
mov
jg
decl
and
mov
bound
and
xchg
call
inc
stc
add
mov
jge
dec
in
cmp
mov
jl
les
lcall
cmc
fiadds
or
outsb
ss
mov
pop
jmp
pop
cmp
adc
mov
push
lret
ljmp
dec
push
imul
inc
pop
add
dec
and
mov
sar
lahf
leave
dec
ljmp
call
mov
cmp
cli
jmp
pusha
shl
or
call
push
and
add
ljmp
scas
stos
sub
int
adc
loopne
cmp
dec
jns
jo
jp
jae
cmp
xchg
xchg
test
outsb
jmp
mov
insb
out
aas
fistl
inc
mov
and
add
aaa
std
clc
icebp
mov
addr16
ret
add
les
mov
or
mov
fucomi
pop
xchg
push
xlat
pop
lods
mov
jp
call
jne
mov
les
aam
add
into
ror
fwait
pop
lods
xor
cli
sbb
inc
push
and
int
sarl
mov
andb
cmp
fistpll
ljmp
lds
inc
inc
sti
insb
out
fildl
mov
mov
sahf
in
jg
fcoms
int3
lock
sarb
lcall
mov
or
sub
lahf
jle
inc
mov
call
add
cwtl
adcl
enter
sbb
sbb
pushl
mov
push
inc
es
jl
lcall
mov
gs
clc
pushl
fucomip
push
aas
jbe
lret
xor
sub
pushl
sub
fwait
popl
push
scas
aaa
icebp
sarl
das
sub
or
pop
out
mov
jne
lea
fistpl
jp
lahf
loopne
adc
and
pop
cmp
mov
lods
call
sbb
lcall
pop
inc
xchg
adc
inc
popf
lock
mov
fnsave
mov
incl
ljmp
adc
xchg
push
mov
shrb
xor
mov
test
mov
fisubl
or
jp
rep
sti
outsb
inc
sbb
ljmp
out
jo
adc
xchg
jno
inc
push
xchg
pusha
rcrb
out
sub
cli
add
add
jmp
nop
aaa
pusha
cmp
xchg
es
cmp
jnp
fsubr
mov
mov
sbbb
aas
jo
inc
jg
lods
push
sbb
adc
outsl
mov
mov
xor
fstps
push
jo
mov
incb
jmp
fadds
shll
mov
or
out
jg
pop
aam
adc
das
dec
pop
add
xchg
jbe
jb
push
ret
std
pop
xor
jmp
mov
fsubs
push
sub
sbb
jg
loopne
aaa
mov
pop
lcall
inc
les
lcall
incb
das
icebp
aaa
incb
popa
dec
inc
mov
incl
cmp
rcl
inc
mov
rcr
call
cli
and
iret
stc
and
incl
addr16
add
mov
aas
out
cs
das
outsl
hlt
stos
or
dec
dec
hlt
ljmp
fistpl
mov
pop
cmc
xor
adc
fcomp
pop
sbb
test
outsl
lahf
stc
inc
scas
adc
cmp
mov
and
pop
fists
push
dec
mov
clc
mov
push
lret
xlat
data16
cli
call
sbb
push
sbb
pop
ficompl
pusha
rorb
xchg
cli
lcall
sbb
xchg
aaa
popf
inc
shll
sub
sbb
test
arpl
pop
sahf
cmovle
lods
dec
rol
jl
adcb
pop
fbstp
fimuls
pusha
insl
xorb
and
cmp
pop
xchg
pop
mov
aas
icebp
int3
push
jae
dec
push
dec
int3
mov
bound
aad
mov
xor
cmpl
jne
lock
lcall
movsb
out
push
mov
std
shlb
in
xchg
mov
push
sarl
scas
push
mov
cmp
inc
mov
jbe
xchg
xchg
jg
adcb
inc
into
rcrb
and
sbb
pop
mov
aad
push
imul
ljmp
icebp
data16
imul
lret
pop
bound
dec
in
jmp
fldl2t
in
hlt
ljmp
jecxz
or
pop
pop
mov
mov
fisubrs
inc
push
mov
lret
cmp
push
sub
rcr
mov
ljmp
pushl
add
repnz
ficoml
ja
in
dec
cltd
ss
decl
add
and
push
mov
outsb
or
pop
jnp,pt
add
sub
jge
sbb
jns
cmpsl
insb
std
adc
ja
jg
jb
jne
mov
add
addr16
dec
cli
mov
adc
shll
mov
push
jmp
aam
sub
movsb
push
mov
push
fxch
lcall
inc
cmpb
sar
pushl
int3
add
add
stos
mov
ror
test
dec
or
push
jae
ljmp
out
sub
lods
sub
ds
ret
sub
stos
into
jg
adc
call
sub
insb
mov
rcll
lret
clc
pop
xchg
push
dec
lahf
test
inc
decl
daa
jnp
dec
pop
fptan
movsl
mov
rep
pushl
push
mov
mov
test
sbb
into
cmpl
ret
push
fwait
out
outsl
lods
sbb
in
and
outsl
hlt
negl
sbb
inc
mov
mov
mov
js
jnp
mov
xor
and
paddusw
cli
call
mov
jmp
mov
cmp
inc
dec
jne
inc
pusha
sub
pushl
push
stc
mov
pop
pop
test
stos
imul
lds
aaa
mov
fwait
lcall
mov
push
outsb
ljmp
sbb
sbb
or
imul
jno
das
movsl
dec
in
jnp
xchg
iret
jmp
xchg
subb
lock
adc
shrb
aad
orb
ljmp
dec
cmp
cmp
scas
mov
pop
adc
mov
add
loop
sub
sbb
rcr
push
xor
sub
incl
or
lea
push
mov
aas
push
cli
lcall
fists
popf
xorb
inc
adc
pushf
cmp
or
cltd
sbb
dec
sub
jp
movlhps
jns
mov
push
sbb
xor
mov
mov
test
fucomip
pop
cli
inc
lcall
shl
push
dec
leave
jno
lcall
ljmp
icebp
mov
scas
leave
decl
jecxz
outsl
push
sub
and
repz
orb
es
jns
xor
movsl
mov
out
push
mov
inc
push
setp
sbb
xchg
rclb
jo
sbb
jo
xchg
out
xchg
iret
sub
jmp
testl
xchg
call
aad
sub
or
add
jg
call
mov
into
shr
lods
scas
xchg
dec
mov
ret
xchg
sbb
iret
daa
fidivs
rol
call
nop
or
lahf
sbb
fidivrs
dec
jmp
pop
jno
mov
adc
stc
jl
rolb
and
xchg
fwait
add
fnstsw
pop
ljmp
mov
imul
cmpsb
cli
incl
sbb
fdivs
test
push
adc
addr16
jecxz
mov
in
ds
mov
add
push
xor
bswap
adc
decl
testl
les
or
fs
xchg
imul
out
mov
pop
xchg
mov
cld
inc
sbb
xor
inc
or
pop
jb
stos
incl
sti
xchg
call
mov
mov
xor
cmp
in
loopne
movswl
or
imul
cmpsl
negl
and
add
inc
or
lock
bound
jecxz
mov
popa
xor
pop
lret
mov
mov
lcall
or
in
ret
ljmp
adc
mov
fsubrp
cmp
decl
loopne
xlat
lret
dec
mov
lods
leave
mov
popf
push
xchg
das
int
pop
addr16
ljmp
jnp
shlb
cs
xlat
jno
cmc
std
pop
outsb
fists
iret
jno
jns
addl
nop
xor
jno
call
inc
sub
into
xchg
fwait
mov
arpl
xor
mov
pop
push
mov
and
outsb
inc
call
imul
jmp
push
addr16
movsl
repnz
ljmp
xchg
cmpb
inc
jmp
aaa
repnz
outsl
cmc
lea
push
xor
xor
outsb
push
call
movsl
mov
enter
mov
xchg
daa
movsb
xchg
incl
push
loop
pop
pop
pop
sub
jmp
das
js
clc
push
adc
pop
cli
adcl
fs
lret
mov
data16
mov
xchg
lock
jg
dec
push
jp
loopne
sub
movsb
into
pushf
lret
xor
pop
call
add
and
js
inc
ja
out
mov
movsb
es
call
data16
cmp
mov
testb
imul
loop
add
bound
js
jmp
mov
test
push
popf
mov
push
mov
xchg
adc
idiv
xchg
insb
out
cld
jg
test
mov
aas
fimuls
xor
jb
push
in
lcall
call
das
je
out
xor
gs
push
jo
int3
cli
add
cmc
jmp
fisttpll
inc
adc
fstpl
repnz
into
mov
or
icebp
pop
or
cmp
fwait
lahf
lods
pop
or
or
mov
and
inc
popa
cli
idiv
incl
push
sbb
mov
xchg
pop
jae
cmc
jne
pop
add
jge
fstps
xor
inc
ss
incl
stc
bound
xlat
dec
js
inc
dec
test
jp
xor
outsl
in
mov
notb
out
dec
sbb
cmp
out
dec
stc
sbb
ljmp
cltd
add
mov
pushf
stos
adc
mov
ret
lahf
jne
lcall
outsb
icebp
aam
outsl
leave
clc
mov
jg
sub
mov
pushl
shl
test
mov
lods
movsb
in
jmp
and
bound
sub
lahf
cli
mov
in
push
rsm
repnz
xchg
imul
test
stos
jl
ret
pop
clc
jle
mov
xor
int3
or
incl
pushl
jne
fdivs
fiadds
out
lcall
movsl
inc
es
cwtl
dec
add
imul
lock
stos
push
xchg
ljmp
sbb
mov
dec
jmp
mov
cld
push
xchg
pop
das
xor
sti
call
mov
pop
sub
testl
movsb
cld
jg
sub
push
mov
mov
dec
ds
ss
mov
mov
xchg
jmp
inc
pop
jg
xor
xchg
mov
insb
jle
das
fdivrl
mov
test
ret
pop
cs
pusha
fstpl
cmpsl
into
int3
movsl
pusha
ljmp
jb
pop
std
incl
cltd
mov
mov
xor
loopne
icebp
pop
xor
inc
adc
andb
cmp
pop
cli
ljmp
fimuls
int
outsb
in
and
dec
cmp
divb
jmp
push
ss
nop
add
nop
test
xor
inc
cmc
mov
clc
inc
daa
push
mov
icebp
mov
lcall
iret
cmpsb
cmp
sbb
test
push
sbb
sar
jg
int3
rorb
sbb
push
dec
out
int
rcll
dec
shll
sar
ja
push
cmp
roll
xchg
mov
inc
jmp
nop
ds
rcrl
dec
call
jl
out
pop
adc
dec
in
mov
xor
cmp
ljmp
mov
in
ljmp
decl
in
lds
shl
ffree
in
fidivl
cmpsl
jg
dec
cld
pop
clc
pop
mov
or
jno
and
push
ljmp
mov
adc
or
mov
decb
add
outsl
xchg
scas
xchg
and
cld
incl
jmp
sub
mov
mov
inc
sub
inc
sbb
decl
cmc
ds
xchg
dec
imul
into
jl
lock
hlt
push
pop
pop
lods
out
mov
jae
fdivrp
ljmp
add
add
popa
lock
outsb
movsb
add
mov
xchg
mov
pop
xchg
imul
addb
mov
leave
inc
aaa
pop
lods
in
and
gs
jg
mov
mov
mov
add
mov
lahf
xchg
pop
add
call
xor
xor
scas
movsb
pop
sbb
lock
out
test
in
test
push
and
out
fsub
adc
cwtl
push
add
sub
sti
mov
cmp
jno
daa
dec
fwait
data16
fdivrp
jg
xchg
mul
pop
mov
cmpsl
enter
mov
jg
inc
or
jge
mov
and
ljmp
adc
sub
jg
cltd
mov
lock
cvttps2pi
out
pushl
mov
and
mov
jmp
sbb
jns
xor
jbe
sub
sbb
inc
pushl
movsl
sbbb
pop
std
sarb
pop
pop
and
lcall
jg
loop
arpl
pop
cmp
inc
and
or
push
fimull
call
jmp
ret
add
pop
shrl
sub
ftst
add
pushf
orl
sbb
call
fldcw
mov
add
lcall
test
insl
daa
pop
stc
decl
decl
mov
jmp
sbb
sub
xor
mov
mov
icebp
pushl
movsb
inc
push
scas
jle
mov
mov
std
fstpt
shlb
sar
idivl
jg
dec
pop
sbb
mov
adc
jb
ljmp
icebp
inc
push
lock
add
push
fmull
sbb
cwtl
mov
cmp
loope
pop
mov
subb
shlb
pusha
mov
mov
aaa
mov
movsb
shrl
push
mov
in
test
adcl
ficoms
imul
inc
shld
dec
cmc
pushf
incb
mov
pop
inc
add
out
jno
in
push
in
mov
add
outsl
mov
sub
xchg
mov
xchg
inc
mull
fwait
cs
mov
xchg
ffree
mov
scas
push
loop
jg
sbb
mov
inc
loope
and
pop
ljmp
repz
jle
lods
jnp
sub
scas
cmp
scas
adc
insl
ds
inc
dec
inc
dec
repz
outsl
pop
adc
ljmp
mov
jnp
dec
lea
adcl
push
out
test
xor
cmp
jmp
les
cmpsl
bnd
adc
sub
int3
dec
mov
nop
mov
push
fiadds
pop
std
mov
mov
or
jle
mov
lods
mov
aad
xchg
xor
xor
push
lcall
and
out
inc
xor
xchg
or
push
push
shlb
cltd
in
jmp
mov
call
dec
dec
adc
jl
cltd
and
pop
sub
adc
sub
jl
and
leave
jb
fisttpl
mov
loopw
pushf
loopne
mov
fcom
enter
xchg
and
adc
dec
into
and
mov
xor
sub
jmp
call
push
sahf
pop
mov
lcall
add
cmp
add
jo
and
popf
aas
push
xchg
mov
xor
jmp
mov
adc
mov
loop
incb
jmp
sub
jl
movsb
jno
or
ds
imul
inc
daa
sar
arpl
fwait
inc
ss
xchg
out
xor
add
jg
in
jmp
lods
bound
inc
inc
cltd
pushf
repz
sti
mov
addb
xchg
jns
mov
xlat
push
push
test
pop
xchg
push
aas
sbb
mov
jg
jle
sbb
popa
movb
cmpsb
sbb
gs
jmp
add
sub
pop
push
push
fcoms
add
fildll
pmullw
mov
jb
mov
xchg
xor
cmp
subl
adc
mov
mov
movsl
fisubs
mov
fistl
jo
mov
add
inc
sbb
mov
pushl
xchg
cmp
out
rcrb
fisubrs
mov
add
jg
pop
pop
jnp
xchg
pushf
mov
inc
cs
ss
roll
test
cmp
jb
insb
jp
andb
ret
sub
loop
decl
mov
imul
sbb
repnz
push
ljmp
jmp
sub
cmovle
imull
jg
aaa
xchg
cmpsb
xchg
cld
mov
or
out
rorl
xor
jg
decl
inc
and
xor
mov
inc
or
test
and
clc
push
cmovne
in
jmp
xchg
push
in
cmc
add
mov
dec
outsl
std
cmp
xchg
cwtl
aas
adc
aad
jb
popa
push
lods
xor
adc
call
add
sub
or
pop
pop
loop
loope
ret
sbb
out
xor
repz
and
push
out
les
xchg
mov
xor
addb
lcall
xchg
pushf
sbb
add
leave
rcrl
cs
mov
push
or
adc
push
mov
out
mov
inc
adc
inc
pop
sub
sbb
push
pushl
lods
xchg
mov
jnp
clc
pop
andl
xor
test
stos
and
mov
pop
adc
inc
negl
aaa
clc
jmp
shlb
scas
dec
sti
adc
test
jmp
add
xchg
adc
add
call
call
cmp
cmp
std
cmp
push
stc
push
inc
jbe
data16
mov
mov
mov
nop
clc
pushf
sbb
sbb
lods
adc
add
mov
pop
jbe
xlat
add
xor
add
cltd
test
jb
pop
jae
rcl
repnz
int3
lcall
push
mov
popf
xchg
lock
fisubrl
call
lahf
ljmp
adcb
mov
incl
popa
fwait
pop
cs
lcall
cmpsl
repz
xchg
out
or
adc
lcall
icebp
in
inc
jae
mov
jno
pop
out
imul
insl
lea
aam
sbb
std
mov
jno
inc
jl
sbb
leave
sahf
push
xor
test
dec
inc
or
les
cmpsb
push
mov
pop
mov
and
mov
mov
mov
and
push
jg
jns
fists
out
call
aam
int
fistpl
push
add
push
lahf
incl
pop
xchg
pop
fldcw
out
sub
aaa
jp
call
fnstenv
xchg
sbb
xchg
sub
adcb
lcall
orl
cwtl
mov
or
mov
adc
stos
pop
jmp
or
stos
mov
out
aaa
clc
ljmp
aam
add
dec
sub
pop
test
push
cmp
pop
sub
stos
inc
xor
test
jmp
pop
fsubrl
fistpll
incl
test
fcomps
fucomp
cmp
call
jbe
xlat
sub
mov
sti
and
mov
bound
idivb
sub
incl
or
loope
inc
sub
test
test
push
negl
leave
loope
add
ss
mov
lods
cmc
arpl
xchg
cld
fucomip
jg
leave
mov
inc
sub
mov
out
imul
icebp
outsl
lock
ret
loopne
cmp
push
das
adc
fs
icebp
sub
push
pop
xchg
aad
push
loop
std
sbb
pusha
mov
movsb
add
jns
xor
mov
rol
or
imul
and
or
add
or
mov
call
xor
pop
cmpsb
gs
jle
loop
add
and
loope
adc
sbb
and
fistps
call
mov
xor
inc
xchg
adc
and
push
ds
iret
inc
pop
xor
mov
in
repz
mov
cmp
aad
add
sahf
adc
jmp
dec
sub
sbb
cmp
fcomi
jbe
push
inc
inc
fmuls
cmp
mov
jmp
push
push
sub
das
lods
dec
aam
ret
jne
dec
es
push
xor
pushl
daa
mov
outsl
xchg
cld
cld
int
push
push
push
repz
hlt
enter
or
cmp
call
das
std
push
inc
sbb
dec
stos
int
or
test
cmp
pop
cli
fistpll
shlb
jp
pusha
push
decl
ljmp
jnp
jl
sbb
lods
adc
push
pop
imul
xchg
adc
mov
ljmp
xor
pop
rorb
xchg
std
dec
jae
decl
rorb
jle
ljmp
inc
sbb
inc
std
je
cltd
mov
subl
int
xor
pop
cmp
mov
pop
jl,pt
aaa
push
mov
mov
push
xchg
cli
fmuls
lret
pushl
adc
jg
xchg
mov
cltd
movsb
jecxz
hlt
add
jae
dec
cld
inc
out
fildl
xchg
cs
xchg
jns
inc
mov
std
jmp
out
repnz
ljmp
xchg
aad
ja
xchg
loope
clc
jg
outsb
adc
sbb
jp
pop
inc
ret
sub
arpl
fsubrp
jg
lods
sti
and
imul
lods
mov
aas
imul
mov
iret
stos
mov
scas
mov
mov
ljmp
lea
sbb
xor
jecxz
sbb
pushl
push
jle
xchg
lock
movsl
leave
cltd
pop
adc
loop
mov
test
rorl
aad
dec
mov
inc
inc
stos
dec
mov
ffreep
cmpsb
shlb
movsb
xchg
dec
pusha
mov
int3
sbb
mov
lods
and
jmp
iret
xchg
cmp
add
cli
das
pop
mov
add
ss
push
cmp
jl
lret
rcrl
pop
out
jno
test
incl
out
mov
mov
jbe
inc
cmp
sbb
xlat
pop
sar
pushl
cs
in
nop
and
jne
adc
cmp
mov
push
movsl
xchg
clc
jmp
xchg
xor
jae
out
push
in
mov
inc
mov
std
cmp
out
jb
inc
aam
add
sub
sarb
aad
lods
lcall
sub
jo
xchg
shlb
rorl
out
mov
mov
jle
sar
incl
cmpsl
or
xchg
jnp
xchg
jg
stc
or
negl
or
mov
andl
popa
outsb
rol
push
stc
dec
enter
pushl
insl
xchg
sbb
cmpsb
lock
mov
mov
dec
imul
ud0
incl
mov
ret
movsl
cwtl
and
test
xchg
mov
push
inc
out
das
push
cld
mov
in
inc
call
xlat
sub
sti
mov
std
test
jns
sub
fstps
push
cmp
xchg
or
push
ret
push
xchg
fmulp
cmp
add
shrl
xor
sub
incl
fdivrs
mov
xlat
dec
ret
movsl
in
in
dec
out
decl
push
ds
push
dec
push
decl
mov
mov
out
sarl
inc
dec
xchg
aam
jg
pushl
xor
xlat
jno
popa
mov
lea
jg
jg
pop
imul
ror
cmp
mov
and
lods
xchg
movsl
jl
jae
xorb
xor
xchg
add
incl
mov
push
stos
pushf
cmc
daa
int3
push
pop
mov
pushl
cli
or
in
dec
mov
insb
mov
fildl
fldenv
mov
mov
test
aad
stc
call
cmp
filds
in
jg
icebp
inc
hlt
outsb
jl
xchg
mov
iret
push
ret
adc
cli
inc
cmp
sub
xor
paddb
sti
push
dec
adc
xor
cmp
mov
decl
es
aas
xorb
cmp
dec
into
push
mov
stos
lcall
inc
xor
add
insl
pop
adc
mov
decl
jg
cmp
fidivrl
ss
iret
ret
inc
push
pop
pop
andl
mov
xlat
mov
adc
les
xchg
ljmp
ja
cmp
xchg
add
out
mov
or
leave
or
push
dec
jg
rcl
mov
shrb
mov
xchg
sbb
shll
popf
leave
fcom
sahf
fbstp
lock
addr16
xchg
xchg
in
cmpsb
pop
dec
dec
xlat
imul
ljmp
movb
pop
add
in
sbb
ret
mov
negl
and
inc
sbb
mov
lods
call
xchg
ret
jp
cli
or
dec
movsl
jg
pop
cmp
cmp
sysexit
mov
nop
pop
aad
call
cmp
push
iret
cmc
cmp
shlb
inc
xchg
mov
inc
addb
pushl
stos
fildl
xlat
mov
imul
into
movsb
push
push
jg
dec
gs
div
aas
out
imul
out
pop
lss
repnz
lcall
jmp
loopne
std
dec
int3
mov
daa
loopne
aad
cmp
iret
testb
dec
insl
jmp
ljmp
int3
ds
clc
push
int
lods
mov
aam
xchg
xor
movsl
jmp
leave
shrb
jmp
std
test
dec
dec
xchg
ljmp
fnsave
pop
cmp
mov
dec
stc
iret
push
pop
cmp
loopne
xorl
and
sbbl
call
adc
insb
imul
push
xchg
adc
cmp
inc
sub
movsb
popf
movsb
xor
decl
mov
stos
add
stos
xchg
push
sub
cmp
jecxz
cli
jle
fcos
add
call
addr16
stos
sub
mov
enter
mov
fiadds
orb
jmp
push
das
jmp
popa
inc
lock
inc
pusha
add
jmp
dec
mov
pop
push
dec
sbbb
out
pushl
sar
xchg
dec
arpl
repnz
inc
push
jmp
push
hlt
dec
pop
aad
jecxz
and
jb
add
mov
sbb
mov
in
or
jg
imul
adc
rep
arpl
inc
cli
test
mov
test
lds
incl
out
testl
cmp
inc
popf
loop
aaa
xchg
rorl
jg
push
imul
mov
cwtl
fdivrl
xor
xchg
popa
jg
sarl
push
mov
sbb
and
sub
cmc
adc
and
int3
jno
loopne
add
push
xor
sub
test
jns
xlat
xor
cltd
jg
incl
shr
fcomps
push
add
mov
cmp
aad
incl
ja
cmp
xchg
adc
cwtl
sti
jecxz
shlb
ljmp
and
data16
inc
mov
sarb
jns
aaa
dec
call
loope
rorl
cmp
dec
rcll
push
pop
imul
cli
inc
push
ret
adc
jmp
pop
mov
push
push
out
push
adc
xor
push
push
lret
fcmovnu
xchg
mov
dec
ja
or
mov
jg
scas
add
addr16
pop
stos
xor
aaa
je
jmp
shr
pop
sub
fst
pop
mov
in
adcl
test
outsb
cmp
daa
cmpsl
pushl
mov
int3
lahf
pop
sub
mov
in
imull
loop
subb
lahf
rol
mov
movsb
lcall
lock
mov
cmpsb
orl
ljmp
jmp
ret
add
rorl
andl
sbb
repnz
or
sub
movsl
call
mov
cmpb
cli
push
enter
jmp
frndint
ljmp
mov
push
add
cmp
adc
cmp
fnsave
mov
std
ljmp
mov
pop
xchg
rcll
mov
stos
cmp
lea
lea
sub
dec
fidivrl
mov
dec
outsl
out
pop
xorb
mov
aad
adc
pop
and
add
mov
push
jae
and
decl
hlt
icebp
mov
mov
fdivl
inc
mov
scas
jg
jmp
and
sti
out
mov
test
dec
out
push
pop
xor
dec
dec
pop
in
mov
jg
inc
out
aaa
packuswb
inc
insl
add
push
xor
mov
jmp
xchg
clc
jmp
mov
sbb
sbb
incb
or
push
and
loopne
decb
or
fucomip
fsubr
loopne
mov
lock
shlb
mov
sub
mov
push
cmc
and
mov
lds
out
je
cli
or
vcvtsd2si
clc
sbb
loope
popf
cmp
jb
imul
ret
stc
or
push
or
movsb
cmp
loopne
imul
and
aas
xchg
mov
sub
mov
mov
imul
mov
cmp
mov
addr16
data16
lcall
adc
mov
pop
inc
mov
add
shl
xor
in
add
gs
mov
out
push
aas
cmp
mov
xor
dec
adc
pop
aaa
pushf
mov
fmul
inc
xor
cmp
clc
jecxz
adc
xchg
out
rcrb
mov
jl
popf
fstp
ljmp
jns
sbb
and
xchg
sarl
lahf
dec
or
mov
call
rolb
lock
push
out
xor
mov
lcall
test
add
data16
cld
inc
add
ljmp
jo
inc
iret
push
inc
cmp
aaa
leave
mov
daa
int
xorl
adc
incl
testb
stos
cmp
jmp
and
cs
shrb
push
int
push
cwtl
mov
mov
addl
mov
xchg
rol
iret
fcoms
jmp
xor
out
add
dec
mov
fistpl
inc
nop
pop
ljmp
test
mov
lcall
mov
jmp
rolb
int3
xchg
jnp
pop
test
lcall
icebp
or
sahf
xchg
loope
inc
out
mov
out
jecxz
cltd
add
and
js
cld
adc
adc
mov
lods
mov
xor
scas
pop
data16
mov
pop
inc
xor
frstor
push
xor
dec
add
add
fistpll
mov
je
add
add
mov
mov
das
cmc
decl
mov
pop
jne
lock
sbb
imul
stc
outsb
lcall
cld
mov
js
cmp
nop
inc
push
std
pop
xor
mov
cmp
push
or
lcall
call
mov
sub
push
push
xchg
cli
pop
push
xchg
pop
mov
push
mov
xlat
cwtl
jne
mov
mov
in
insb
push
scas
lret
and
sub
das
mov
addr16
sub
xchg
push
fsubrs
in
add
bound
pop
test
push
pop
imul
jnp
divb
decl
cmc
add
inc
pop
pop
add
push
enter
push
ljmp
cmc
add
xchg
jge
mov
jnp
push
mov
jae
fldenv
adc
outsl
push
call
add
jo
mov
jns
pop
call
vcvtps2pd
xor
cmp
adc
adc
mov
outsb
hlt
pushl
cmp
sub
mov
dec
std
incl
jge
shl
xchg
xchg
mov
out
jbe
mov
es
out
jle
xchg
fucomip
ljmp
fmul
jg
shlb
push
jmp
shll
stos
fistpll
fiaddl
ret
setne
jb
out
xor
mov
adc
decb
ret
clc
das
std
push
imul
imul
jmp
pushf
ss
cmpsb
cli
cmc
cmpsb
inc
jg
mov
shrb
test
pushl
dec
mov
cmp
sbb
pop
cli
pushl
cli
scas
out
fidivrl
pop
adc
push
and
popa
nop
xchg
sbb
dec
xchg
xchg
repz
cmpsl
inc
leave
fmull
add
jb
cltd
sub
push
imul
aaa
insb
lods
test
jp
mov
stos
fstl
call
or
cmp
ss
push
cmp
arpl
pop
xchg
or
call
mov
cmp
mov
das
and
aaa
add
movsb
fwait
add
fisubrs
xor
jg
decl
xchg
cld
sbb
push
les
xchg
or
or
lcall
cmp
aas
pop
lods
sti
lahf
daa
mov
mov
scas
andb
decl
mov
and
je
sbb
cmp
das
neg
jg
mov
stos
je
sub
jns
mov
aas
fcomps
lcall
inc
test
pop
cli
pushl
xchg
xchg
imul
add
lret
aaa
xchg
push
mov
lcall
jo
sub
loope
rcrb
addl
cmc
lcall
jl
fsub
shlb
mov
negb
lret
mov
nop
mov
bound
imul
test
or
xchg
xchg
imul
ljmp
addr16
inc
repz
xchg
stos
and
lods
cmpsb
lods
jle
xor
jg
xchg
aad
aam
mov
dec
xchg
fstpl
sub
adc
pop
xor
fidivrl
pushf
push
clc
cs
cli
dec
clc
and
dec
jg
inc
push
lea
mov
leave
ret
pop
adc
pop
mov
dec
stos
std
jmp
shll
push
inc
notl
ja
push
jg
lods
dec
icebp
std
xchg
mov
adc
ljmp
adc
dec
or
cmp
xlat
test
aas
aaa
int
sbb
and
call
int
xchg
fs
push
xchg
out
sub
jg
out
ret
test
lods
test
dec
jbe
loope
pop
dec
lods
ljmp
sbb
cs
in
scas
stc
in
sbb
pushf
pop
bound
mov
lods
xchg
jecxz
pushl
jecxz
jl
jmp
xor
mov
sub
mov
inc
adc
pop
aas
fwait
leave
outsb
gs
mov
adc
mov
out
inc
push
inc
mov
ret
inc
add
jmp
jb
negl
inc
push
addr16
add
arpl
ljmp
incl
and
je
ret
xor
cmpl
lahf
adc
jns
lock
movsb
imull
dec
mov
pop
add
stc
cltd
arpl
xchg
mov
or
push
les
xlat
fsts
sub
mov
jo
sbb
push
lret
insb
push
addr16
call
xor
cmpsl
dec
xor
int3
mov
cld
mov
test
inc
sub
ss
mov
out
hlt
mov
leave
mov
dec
enter
xchg
xchg
add
sbbb
sub
mov
call
in
xchg
clc
cmp
mov
sar
lcall
rorb
xchg
push
and
push
sbb
cmp
jmp
fldt
shrl
nop
jb
inc
sub
nop
xor
orl
mov
outsl
cmc
das
and
mov
hlt
sarl
cmp
dec
xchg
rol
mov
cmp
sub
add
pusha
sub
cmc
push
mov
subl
movl
inc
jbe
or
xor
call
mov
cmp
insb
push
js
aam
mov
mov
cmc
mov
push
add
pop
scas
lds
lret
push
mov
sub
lea
aaa
insl
ret
shlb
pop
stos
lret
jns
pop
mov
imul
pop
mov
insb
scas
pop
in
pop
xor
dec
ljmp
lock
jo
lahf
arpl
push
adc
add
fst
xchg
out
aaa
cli
call
lahf
lcall
test
fwait
mov
adc
pop
std
idiv
mov
iret
adc
pop
gs
and
add
mov
arpl
call
pop
fbld
mov
inc
add
add
mov
mov
daa
or
fisubrl
js
and
dec
leave
or
and
mov
mov
out
jb
mov
add
ds
mov
mov
loope
sub
jo
dec
movsl
popf
sbb
mov
pushl
pop
into
imul
shll
lret
imul
adc
adc
dec
push
data16
lods
jmp
jo
je
loop
outsl
fnstsw
add
cmp
or
dec
popa
or
sahf
push
mov
fldcw
jge
out
test
xor
add
outsb
and
call
les
sbb
das
inc
cwtl
adc
shll
cli
adc
xchg
mov
mov
jle
lock
std
push
cmp
mov
or
stos
push
test
ret
cmp
push
jle
xchg
sbb
orl
mov
mov
call
mov
outsl
sti
cli
adc
xor
adcb
xor
pop
sbb
lea
incl
gs
fdivl
pop
dec
loope
mov
xor
push
repz
arpl
pushl
movsl
inc
lds
pop
or
sbb
sbb
sbb
shrb
push
enter
inc
jb
mov
gs
pop
sub
daa
or
mov
inc
or
ljmp
gs
adc
jb
movsl
push
nop
sbb
lcall
push
pop
cld
jmp
fstps
fisttpll
clc
inc
mov
je
push
push
test
arpl
idiv
in
test
xlat
testl
call
mov
roll
dec
jge
mov
mov
out
push
call
xor
repnz
sub
insb
push
inc
dec
push
fwait
insl
ja
add
cld
decl
sbb
or
jnp
push
test
sbb
lcall
ret
out
mov
xchg
push
stos
xor
mov
mov
fisttps
and
scas
enter
mov
sbb
adc
mov
xor
jg
xor
mov
in
into
adc
outsl
cmp
loopne
fdivrp
decl
xlat
mov
mov
jo
loop
jo
mov
std
insb
clc
sbb
and
ret
into
jecxz
test
orl
push
push
mov
pop
and
cmc
jg
sub
mov
mov
xchg
jg
call
sbb
stos
lea
mov
adc
stos
ljmp
cltd
mov
imul
cmpsl
stos
cmp
enter
test
pop
std
jg
loop
mov
xchg
pop
lock
test
add
xchg
dec
cmpsl
push
lcall
test
test
add
mul
lret
mov
add
inc
ljmp
je
inc
jmp
xchg
dec
sti
push
in
jns
jnp
mov
lea
int3
lock
pop
push
lods
xlat
cmp
add
mov
fwait
aad
lds
inc
cld
es
mov
js
mov
push
repz
mov
mov
push
idivl
insb
into
or
or
xchg
loopne
je
xchg
xorb
xadd
inc
pop
ds
dec
sub
push
lock
popa
mov
mov
mov
jae
or
clc
push
xor
aam
cs
ds
lret
and
push
pop
mov
xchg
scas
mull
ljmp
loope
call
dec
xchg
sub
push
sbb
jecxz
ds
xchg
and
mov
test
addr16
or
cwtl
les
add
decl
test
jmp
into
lahf
lahf
push
iret
mov
ds
mov
or
jle
inc
jbe
sbb
lcall
mov
jge
fistps
xorl
aas
outsl
daa
xchg
xchg
pop
sub
mov
ret
xor
push
clc
in
int3
lds
fisubrl
push
cld
cli
lret
sbb
xor
mov
sbb
sub
pop
jns
inc
mov
mov
movsl
addl
adc
adcb
stos
mov
cmp
mov
cmpsl
lret
mov
aam
pop
jle
add
adc
adc
pop
stos
mov
sbbb
jae
sbb
sub
incl
out
push
push
xchg
jecxz
xchg
jg
fnstenv
stos
loop
aaa
lahf
mov
call
ljmp
sub
mov
sub
ret
jno
xor
ljmp
inc
imul
and
pop
add
dec
ficoml
add
mov
cmp
sbb
push
insb
inc
inc
shlb
sub
test
sbb
xor
or
xor
popa
mov
std
fdivl
jp
xchg
clc
fcoml
stos
adc
lods
out
popf
mov
jmp
inc
cwtl
push
lods
inc
pushl
mov
div
rorb
xor
mov
faddl
mov
pop
push
pop
jg
popa
dec
arpl
pushl
lods
adc
xchg
xchg
fwait
fs
jb
mov
orb
ljmp
cmp
mov
pop
push
ds
cmp
data16
call
js
test
cld
cmp
sub
imul
inc
adc
cwtl
or
lcall
stc
xchg
adc
xor
adc
pop
dec
add
imul
inc
lcall
std
pop
insl
out
arpl
sub
aam
flds
ljmp
das
mul
sbb
push
jge
gs
pop
lea
out
dec
scas
mov
sti
push
pusha
xchg
out
scas
dec
xor
jmp
add
pop
xchg
jo
mov
ss
das
out
call
dec
into
arpl
lea
gs
icebp
xor
xchg
jb
leave
adcb
push
incl
fstpt
dec
imul
inc
xor
mov
mov
inc
xor
in
add
pop
jmp
add
mov
mov
incl
in
xchg
lods
repz
xchg
lods
push
dec
ja
int3
loop
mov
aaa
clc
cmp
pop
outsl
sub
lock
in
popa
jae
xchg
outsl
adc
xchg
incl
sti
stos
mov
fisttpll
rcrl
imul
repz
mov
inc
ss
or
nop
mov
movsb
mov
call
cld
mov
andb
add
jne
sarb
cltd
repz
clc
mov
call
push
sahf
inc
jno
mov
hlt
xchg
ss
fiaddl
xchg
outsl
cld
add
xchg
inc
and
add
shll
push
ljmp
idivb
xorb
mov
mov
stos
call
lods
pop
negb
add
call
pop
xchg
sahf
movsb
lret
push
mov
mov
pushf
out
ret
dec
jnp
and
push
cmp
scas
je
or
aas
sahf
outsb
add
push
push
xchg
add
arpl
inc
pushl
mov
sub
loop
ljmp
jle
gs
jmp
out
mov
std
call
inc
inc
inc
or
push
cltd
jae
add
add
adc
mov
ret
lea
mov
pop
mov
adc
pushf
mov
mov
sub
iret
les
lahf
fsubrs
pop
lea
outsb
cmc
dec
xor
mov
test
pop
cld
jmp
hlt
jo
add
mov
inc
aas
enter
jmp
mov
call
dec
adc
mov
mov
jecxz
inc
test
push
ljmp
mov
cmpsl
loop
sub
ret
arpl
mov
mov
mov
rol
out
push
jg
scas
imul
decl
cmp
test
cmpsl
push
mov
inc
mov
adc
ljmp
mov
sub
into
clc
repnz
aaa
pop
push
jo
push
sub
pop
in
jo
mov
pushl
mov
push
int3
cmc
lods
mov
push
cmp
xchg
outsb
lock
iret
jg
jl
call
lods
push
push
sub
mov
fsubl
ljmp
repnz
movsb
les
jmp
cmp
mov
jne
call
lcall
cmp
popl
mov
mov
mov
outsl
lret
ret
outsl
add
imul
repnz
fwait
lock
sub
mov
or
les
inc
loopne
mov
and
call
lds
jge
call
sbb
jo
mov
sub
pop
call
jle
xchg
xchg
push
stos
mov
sub
jle
into
imul
cmp
stos
pop
mov
xchg
jnp
in
lret
mov
jae
xlat
ret
popa
mov
outsl
hlt
call
cmp
fidivrl
outsb
mov
bound
arpl
call
push
mov
pop
jge
mov
and
ljmp
outsb
push
add
cli
decl
cld
xor
rolb
jmp
lea
in
call
fdivrs
out
rol
imul
pop
jb
mov
sti
ljmp
jns
je
loop
inc
mov
mov
pushf
pop
cli
xorb
lahf
cmpxchg
mov
sbb
mov
sbb
lds
jno
iret
fidivs
sbb
imul
call
ja
sub
outsb
iret
adc
frstor
cltd
inc
xchg
shlb
scas
call
fisubrl
subb
mov
push
mov
pushf
addr16
xor
out
mov
lret
mov
lcall
xchg
inc
arpl
adc
in
outsb
ret
data16
mov
and
data16
jg
jmp
and
mov
pop
popa
ret
jl
mov
adc
pop
les
mov
add
popa
addr16
lcall
cwtl
sub
in
jl
or
fbstp
pop
push
jmp
in
mov
xor
pusha
mov
jg
or
movsl
pop
decl
dec
pop
arpl
add
adcb
test
int3
cli
lea
test
ret
xor
aas
add
ss
fstps
add
sub
sbb
fmuls
mov
lcall
xlat
js
je
push
ja
add
xor
mov
or
or
lcall
pop
aaa
out
addr16
incl
dec
or
add
pop
mov
push
xor
enter
pop
insl
adc
das
cmc
decl
lcall
inc
xchg
xor
adc
jno
xchg
jg
data16
sbb
sub
imul
mov
or
lcall
pusha
sbb
xor
lods
and
xchg
mov
ljmp
es
int
subl
jnp
addl
test
jg
add
call
jge
add
xorb
and
or
inc
push
dec
inc
out
stos
in
mov
cli
psubsw
test
mov
and
jg
or
iret
cmp
and
shlb
clc
or
push
mov
pop
decl
adc
pop
rclb
mov
stos
sub
cltd
jl
jo
jg
sti
enter
mov
xor
popf
out
xor
jp
xchg
add
cmp
push
es
scas
lock
decb
test
call
xchg
xchg
lea
std
add
xor
mov
cwtl
add
and
sbb
movsl
fcmovnb
mov
push
std
movsb
cwtl
clc
sbb
pop
xchg
scas
push
push
pop
movb
mov
jg
push
lods
fs
lds
push
imul
int
push
loop
call
xchg
mov
adc
and
dec
ljmp
rcrb
imul
xor
sub
inc
sbb
pop
mov
movsb
cmp
mov
call
loope
jbe
and
mov
xor
pop
out
xchg
pop
daa
das
add
out
imul
ret
xchg
ds
push
push
call
popa
sbb
mov
stos
jb
rolb
mov
loope
loop
sti
dec
push
das
cld
push
iret
xlat
arpl
adc
lcall
xchg
xchg
mov
xchg
lret
mov
mov
mov
stos
add
xchg
fldt
lahf
jmp
push
xor
ficoml
sti
mov
lret
sbb
lret
jmp
lcall
outsl
push
add
xor
jge
test
loop
cmp
cmc
xchg
clc
call
imul
push
mov
leave
pop
push
roll
outsl
mov
or
cwtl
pop
icebp
sub
pop
out
aad
push
cmc
inc
mov
jle
pop
cli
pop
out
je
and
pop
cli
sbb
idivl
gs
mov
jmp
adc
pop
dec
aad
jge
imul
addr16
lcall
aaa
not
lcall
inc
jmp
loopne
popa
fiaddl
fdivr
jmp
insl
icebp
daa
xor
or
loop
xorl
inc
jnp
cmp
nop
sub
and
pop
aad
sahf
test
xchg
aas
sbb
decl
sbbl
xchg
pushf
mov
imul
mov
jne
fisttps
cmpb
add
jp
and
outsb
in
es
outsb
sbb
adc
dec
dec
je
push
jmp
lods
fwait
sbb
fdivr
lock
insb
or
lea
outsl
js
adc
inc
sbb
lods
pop
enter
push
lcall
rclb
sti
or
mov
lock
cmpsl
enter
lods
in
jmp
das
fs
xlat
mov
add
push
out
cli
sahf
clc
daa
iret
dec
jno
inc
or
gs
pop
rcrl
insl
lock
cmpl
jmp
add
lock
fdivr
mov
insl
xor
gs
test
call
shll
out
add
test
loope
pop
outsb
push
mov
add
ljmp
leave
mov
daa
or
and
imul
jmp
ficoms
mov
test
jns
jo
and
pop
gs
cli
and
sub
pop
ret
adc
xchg
push
aas
jecxz
dec
sti
out
insl
cmpsl
add
sub
scas
fs
mov
cmp
in
dec
mov
adc
fdiv
ret
adc
into
aad
jge
push
sub
ljmp
mov
mov
mov
sub
out
lock
loopne
andb
rorl
add
add
jp
repz
inc
xchg
hlt
shrb
insb
pop
jle
ficomps
push
addr16
mov
ret
mov
jnp
push
cmp
pop
loopne
mov
mov
icebp
in
lods
push
pop
mov
mov
cmpb
jg
loope
ss
ljmp
inc
cmp
out
lea
insl
sub
aaa
mov
decl
push
loope
push
push
iret
mov
cli
sub
jp
sub
aad
rolb
cmp
xlat
xor
mov
jmp
sub
add
aad
fs
sahf
adc
fimull
add
cmp
adc
pop
mov
xchg
pusha
jbe
sti
or
das
ss
incl
repnz
mov
or
mov
shr
adc
call
mov
popa
and
cld
sub
xchg
mov
inc
pop
inc
inc
dec
jo
setns
mov
inc
xor
call
push
pop
cmp
es
sbb
iret
jnp
dec
dec
sub
or
mov
dec
pop
hlt
jb
xor
dec
pushf
xchg
xor
sub
lock
fisubs
loope
hlt
jmp
fdivr
gs
xchg
fxch
cs
jns
mov
ret
mov
lcall
xor
pop
pop
mov
pop
jmp
sbbl
dec
push
mov
fidivrl
fisttpll
clc
fisubrl
xor
gs
and
loope
sbbl
mov
fnsetpm(287
or
fnstsw
call
scas
push
pop
push
mov
mov
xor
pop
mov
jp
xchg
loopne
pop
gs
cwtl
lcall
les
pushf
repz
mov
inc
inc
decl
jmp
dec
sub
sub
fdivl
dec
add
enter
cli
and
adc
cli
ljmp
sahf
sbb
rorb
cmp
ljmp
push
mov
adc
push
shrl
cmp
dec
push
lea
mov
loop
jbe
call
cli
xchg
daa
jp
pop
pop
insl
lret
or
sub
insb
imul
decl
xor
or
shlb
adc
test
xor
push
hlt
ljmp
aaa
dec
cmp
pop
or
push
je
lods
cltd
mov
lcall
lods
imul
add
cmp
push
bound
xchg
jno
shlb
outsl
in
push
fsubr
jle
inc
insb
mov
lods
scas
pop
addr16
dec
sub
and
dec
sbb
lret
fucomi
jo
inc
xchg
sub
incl
pop
testl
xchg
inc
mov
movsl
jl
std
inc
daa
cs
jmp
mov
lcall
pushf
and
push
pop
xor
push
cli
pop
jg
call
mov
insb
mov
jnp
aad
push
rep
loopne
and
movsl
ljmp
idivb
fadds
pusha
mov
rcrb
push
xor
or
jp
cld
pushl
xchg
adc
out
movsb
cs
jae
cmp
sub
cmp
loopne
jo
lcall
loop
fs
mov
mov
mov
pop
sahf
decl
sti
mov
test
jbe
test
adc
cmpl
inc
dec
imul
mov
loopne
ret
jb
cwtl
cmp
cs
mov
cmp
add
or
push
decl
mulb
inc
repz
lea
sbbl
push
jecxz
decl
xchg
jle
pusha
jle
sbb
test
inc
adc
jg
push
mov
enter
xchg
adc
sbb
cs
jecxz
xchg
sbb
aaa
add
ret
js
cltd
bound
mov
outsl
pop
dec
mov
ror
icebp
pop
loopne
notb
and
sbb
jl
cltd
jg
js
clc
ljmp
stos
cli
imul
xchg
cld
pop
dec
and
pushf
cmp
ljmp
xchg
test
jge
or
jo
repz
fucom
jmp
dec
push
loopne
dec
adc
inc
insl
bound
inc
xchg
xchg
inc
js
mov
jo
dec
mov
mov
mov
std
imul
xor
sub
mov
sub
repnz
pushl
fiadds
addb
pop
movnti
or
xchg
fsts
cli
add
mov
mov
pushl
jmp
incl
loopne
shll
jb
and
or
insl
fsub
int
outsl
jmp
mov
call
adc
mov
jmp
xchg
sub
lahf
rolb
in
jmp
int3
ja
push
cltd
repz
and
cmc
inc
shl
popa
sbb
inc
push
incl
dec
cmc
dec
loop
and
pop
fimuls
mov
call
xchg
aam
fimuls
les
icebp
xchg
xchg
add
cld
nop
es
add
push
fwait
sbb
pop
popf
loop
push
push
std
insl
div
cmp
test
jp
in
and
clc
fwait
mov
popf
cmp
iret
mov
adc
ljmp
jl
fldl
adc
sti
bound
test
pop
rorb
ljmp
seto
inc
gs
filds
inc
jnp
pushl
adc
daa
pop
ja
and
adc
fsubl
xchg
cli
or
ljmp
lock
mov
mov
cmpsl
xchg
cmc
call
push
mov
and
xchg
pusha
mov
fucomip
mov
imul
dec
pop
pop
repz
adc
out
aaa
bnd
jg
or
pop
enter
loop
shrl
push
pusha
xchg
fwait
out
add
jmp
add
icebp
imul
sub
mov
scas
mov
int
fucomip
lea
js
adc
inc
incl
inc
cmpl
scas
inc
insl
xchg
pop
mov
mov
arpl
and
outsb
pop
jns
add
fsubs
xchg
inc
sub
mov
mov
add
sub
xchg
jne
lahf
into
xchg
mov
das
loop
sub
jl
mov
xchg
loopne
pushf
xor
repz
incl
cwtl
dec
xor
loope
jb
fistpll
popf
mov
bound
sar
pop
cli
call
jbe
add
sahf
fmul
adc
adc
outsb
js
mov
sub
jle
test
cmp
cmp
inc
cmp
into
dec
out
pop
and
jae
cld
call
mov
aam
lahf
inc
fadds
in
outsl
push
mov
in
bound
adc
push
ljmp
inc
loop
add
lahf
inc
mov
sub
ljmp
pop
sub
mov
mul
dec
shrl
mov
add
xchg
mov
dec
mov
movb
clc
ljmp
imul
pusha
loope
push
ss
dec
push
inc
roll
inc
mov
fbstp
mov
jo
jl
fisttpll
icebp
jg
jg
add
sahf
movsl
scas
dec
roll
or
sar
mov
sti
xor
pop
sbb
dec
fdiv
sbb
cs
hlt
decl
mov
or
icebp
ds
jg
xor
xor
ljmp
pop
das
sbb
cmpsb
inc
adc
outsb
cli
test
xchg
xor
lahf
inc
stc
mov
stos
push
mov
incl
cmp
inc
idivb
lods
pop
mov
lret
imul
dec
aas
call
cld
mov
clts
cmp
into
out
cmp
int3
sar
pushl
ljmp
push
cmp
lret
ja
insb
xor
std
pop
call
adc
add
inc
fucomp
dec
dec
inc
icebp
in
ljmp
jecxz
outsb
jb
jp
and
fcmovb
ret
aam
add
lret
test
dec
inc
push
cmp
cltd
jmp
sbb
sti
sbb
sbb
movsl
repnz
push
lahf
mov
in
imul
mov
push
imul
mov
push
xchg
and
sbb
cld
in
lret
cli
lcall
lahf
ja
mov
dec
outsl
sub
in
add
notb
mov
add
call
movlps
cmp
stc
cmp
fmuls
imul
ljmp
lcall
insb
out
sub
movsl
lret
jle
addr16
loopne
sar
insb
xlat
mov
add
aad
xor
sub
icebp
aaa
pop
and
cmp
insl
mov
shr
rcll
incl
std
test
mov
xor
lds
fs
adc
std
outsl
inc
jae
sub
xor
out
movb
pop
jge
scas
arpl
mov
lods
lcall
inc
adc
ret
fwait
mov
in
mov
call
cmc
adc
pop
mov
cmp
call
or
xor
pop
shrb
lea
mov
mov
push
in
mov
jo
jbe
dec
cmpsl
add
jbe
or
sar
push
lcall
fisttpll
pop
cmc
jne
inc
push
mov
dec
jecxz,pt
or
movsl
mov
mov
push
adc
mov
test
pushf
test
cmp
jb
lret
fs
testb
mov
mov
fidivl
iret
popa
notb
jg
rorb
fcomps
jmp
add
xchg
push
decl
cmp
js
cmp
scas
mov
in
sub
jp
sbb
inc
pop
pushl
ror
pop
aas
cmp
jnp
js
iret
test
mov
push
dec
cmp
adc
jnp
movsl
add
decl
jne
fs
scas
fldt
enter
push
mov
incl
repz
fsts
pop
imul
lods
dec
in
rclb
pop
test
mov
insb
mov
cmp
ja
fbld
push
jnp
orl
movsl
insl
loop
in
sub
dec
data16
pop
clc
movsl
jb
mov
jle
into
movsl
adc
dec
jo
xchg
ret
jle
dec
outsl
ja
and
pop
inc
addl
pushl
sub
sbb
push
jle
or
imul
sub
das
cmc
pop
inc
scas
and
pop
dec
mov
dec
stos
add
std
xchg
mov
or
pop
nop
mov
mov
jmp
mov
dec
inc
dec
mov
insb
dec
stos
mov
das
out
push
mov
call
cmp
or
sub
repnz
mov
out
add
cltd
dec
add
in
inc
fcmovnbe
mov
lret
mov
ljmp
jbe
les
test
insb
int3
mov
out
inc
dec
mov
sbb
cmpsb
arpl
fstpl
dec
xchg
sar
incl
cmp
out
sub
test
jge
mov
xchg
inc
in
clc
inc
clc
jmp
sbb
ficoml
adc
mov
and
fidivs
dec
ret
cmp
pop
adc
test
lcall
dec
cwtl
rcr
cltd
add
add
jmp
add
mov
fldcw
out
in
jecxz
mov
fildll
fucomip
or
pop
jns
popf
mov
sub
mov
push
sub
sbbl
mov
fsubrs
lahf
jg
cmpsb
int
pop
fsub
sub
mov
jnp
insl
push
mov
js
sarb
js
push
and
cltd
push
outsl
scas
sbb
xchg
jo
out
push
ja
lods
lock
clc
add
ljmp
stos
movsb
out
jp
icebp
icebp
jle
in
ja
add
les
sti
sub
mov
rcrb
xchg
jge
sub
sub
loop
mov
cmpsb
nop
cmp
xchg
call
aas
push
in
mov
stc
lds
stos
ja
mov
mov
call
aas
cmp
xchg
mov
int3
mov
sbb
into
cltd
inc
push
adc
xchg
incb
sub
ljmp
mov
popf
mov
cld
mov
jae
cmp
pop
adc
enter
rolb
lea
popa
add
mov
xor
mov
or
outsl
pop
jl
insl
outsl
add
add
and
push
pop
xlat
insb
or
fucomip
cs
adc
lret
fs
xorb
add
dec
jne
js
adc
push
shrb
scas
or
imul
or
outsl
jne
sbb
sar
add
insl
or
inc
or
popa
and
dec
outsl
fs
pop
fisubrl
add
dec
daa
idivl
push
jb
paddusw
hlt
push
je
pushf
jo
outsb
outsw
je
test
popa
or
in
sbb
dec
jo
outsb
rcr
fcomp
push
inc
push
outsb
push
jo
int
or
sbb
push
add
outsb
push
or
fwait
test
sbb
dec
adc
sbb
fldt
addr16
jo
jno
sub
pop
mov
insl
fisubl
jae
popa
jo
adc
ficoms
je
jo
push
fwait
xor
push
or
pop
mov
mov
push
cmp
outsl
int
dec
jle
popa
je
adc
fimuls
in
aas
insl
arpl
sbb
cwtl
xchg
nop
dec
aaa
popa
gs
fstpl
push
inc
mov
push
decl
jecxz
fisttpll
loopne
lsl
add
cmp
push
addb
ja
xchg
add
jo
lds
push
and
jmp
add
and
fwait
mov
add
inc
shr
dec
cmp
pop
pop
lahf
sbb
pop
add
push
nop
cs
fcoms
jmp
and
pusha
cs
je
or
xor
test
push
daa
inc
mov
and
out
addb
lahf
into
icebp
pusha
inc
bound
push
xchg
insl
dec
ds
dec
imul
and
loopne
lcall
daa
xor
dec
add
imul
add
add
add
add
inc
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
