fdivrp
fdivr
and
xchg
add
cmpsb
flds
add
dec
add
add
and
pusha
call
in
in
or
leave
jmp
xchg
punpckhbw
mov
or
add
push
adc
call
push
ja
out
mov
xor
lea
movl
and
jnp
ficoml
mov
add
mov
mov
or
hlt
push
or
xor
mov
jne
or
xor
mov
fucomip
and
pop
xor
add
mov
mov
mov
and
mov
mov
sub
mov
sub
xchg
out
sub
xor
ja
or
jmp
es
std
mov
fstpl
mov
pop
mov
add
lea
in
add
out
mov
jnp
mov
mov
shlb
lea
dec
testl
xor
or
jge
cmp
je
test
insb
inc
add
pop
pop
ret
xchg
je
cmp
xchg
jge
fsubrl
loope
mov
add
cmp
push
enter
je
push
je
pusha
mov
jbe
sarb
scas
orl
add
or
mov
outsb
xor
nop
aas
xor
xor
jg
push
jnp
pop
lods
das
sbb
inc
push
xchg
and
or
arpl
jb
je
out
nop
add
aaa
popa
adc
xor
test
je
out
leave
mov
lods
add
push
jmp
pop
or
sbb
sub
loop
or
imul
divb
mov
jmp
dec
or
in
bndstx
push
push
push
sub
hlt
sti
xorl
addl
mov
xor
jmp
dec
mov
sbb
mov
inc
cmp
sti
je
mov
add
mov
shl
jne
std
ffree
jge
movzbl
mov
add
and
dec
or
fsubp
inc
jmp
nop
cmp
jbe
sahf
rorb
lea
mov
jmp
mov
lea
outsl
mov
lahf
cmp
mov
mov
add
and
and
jg
add
inc
cmp
jbe
mov
and
fisttps
addb
dec
or
iret
inc
loope
sbb
pop
pop
pop
and
andb
mov
add
or
dec
or
and
push
lret
sbbl
cmp
scas
lret
das
js
pop
jl
inc
cs
bound
in
xchg
leave
in
inc
fsubs
add
add
add
insb
adc
in
push
insb
das
pop
adc
or
out
inc
push
and
pop
outsb
xor
inc
adc
aas
and
popa
inc
and
fildll
inc
or
pop
lods
adc
pop
inc
xchg
lea
mov
fisttps
cmp
out
adc
or
xchg
das
and
sbbb
fmuls
dec
pop
push
jbe
js
repnz
inc
pusha
jnp
jle
nop
pop
adc
inc
enter
mov
nop
pop
and
mov
inc
jae
add
mov
lea
mov
inc
or
div
stos
mov
xchg
cmp
cmp
je
lea
orl
or
outsl
add
push
inc
lcall
lock
test
pop
test
inc
xchg
inc
in
addr16
call
mov
mull
lods
sub
enter
push
mov
add
fs
sbb
or
or
mov
rorb
mov
mov
stos
sbb
jb
mov
pop
adc
movups
adc
mov
inc
jo
leave
call
xchg
pop
les
mov
fcoms
mov
dec
inc
sbb
push
push
mov
mov
in
and
push
or
cmp
les
jp
add
fcomps
les
mulb
test
clc
cld
rcr
add
mov
mov
out
lods
push
adc
push
or
inc
pop
lcall
sub
mov
push
cmp
jg
lea
mov
sub
inc
sub
js
and
outsl
adc
popa
push
rclb
mov
jl
and
call
bound
inc
xchg
mov
push
cs
and
pop
movsb
xchg
insl
addl
lret
pop
jbe
test
sbb
inc
cmp
loopne
mov
int
jg
in
inc
in
lahf
sbb
pop
jecxz
inc
insb
orb
mov
mov
je
jl
ret
xor
cwtl
push
int3
pushf
cmp
outsl
std
adc
sbb
cmc
decb
and
sarb
fninit
insl
mov
xchg
xor
aam
sub
fidivs
xor
adc
adc
lock
mov
nop
inc
push
fldcw
nop
nop
pop
xor
pop
sbb
sbb
cld
mov
nop
xchg
daa
sub
push
sbb
and
lret
fists
mov
add
push
pushf
pushf
pop
mov
xor
pop
test
test
call
mov
hlt
push
pop
sti
mov
test
je
orl
sarb
add
push
sub
push
add
in
jbe
push
or
mov
imul
and
shrl
jne
jg
and
jne
aas
subb
jbe,pt
out
jbe
jns
insb
js
cmp
or
push
or
pop
ret
subb
sarl
sbb
jmp
in
dec
iret
dec
test
mov
mov
mov
mov
mov
mov
jne
mov
push
jmp
mov
mov
aas
mov
sbb
or
sbb
lods
insl
fwait
pop
cmp
sub
and
in
fbld
adcl
rcll
push
enter
jnp
sbb
fldenv
call
xchg
in
inc
or
sbb
pop
xor
in
loope
les
inc
lock
or
sbb
sub
mov
mov
mov
adcb
movl
push
or
cs
pushl
mov
or
decl
leave
jne
mov
mov
xor
xchg
test
sub
mov
mov
xor
lock
add
add
sahf
in
mov
cli
stos
sub
shrl
test
outsl
inc
dec
pop
add
mov
dec
outsb
mov
hlt
jne
daa
push
addl
cmp
jmp
pop
cmp
je
add
je
sub
stc
fidivs
in
aas
adc
dec
in
cmp
pusha
cmp
pop
mov
movzbl
ja
lock
lock
das
mov
jne
pusha
adc
jge
test
mov
sahf
jmp
orl
cmp
clc
inc
mov
ja
add
or
sahf
pushl
add
call
jmp
inc
lret
pop
mov
rolb
sub
add
fcmovnu
mov
adc
popa
arpl
leave
xorl
cmp
mov
pushl
xor
setnp
push
sub
sub
jne
movups
iret
push
inc
orl
fistpl
jg
add
adc
xor
jne
testl
or
nop
lea
je
sha1msg1
xor
dec
insl
pushl
mov
pop
shlb
push
sub
inc
xor
pop
imul
inc
movsb
cmpsl
sub
mov
cli
or
cmpsl
or
mov
and
mov
je
adc
fists
jne
jmp
cmp
test
insl
loope
ror
roll
add
jne
jmp
mov
insb
fisttpl
cmp
or
sbb
push
std
mov
pusha
pop
repnz
and
inc
rolb
mov
sarb
jp
jne
push
nop
ret
and
es
mov
pop
xchg
sub
popa
scas
jnp
popa
cld
ret
push
jmp
jo
je
popa
jne
jg
inc
inc
loope
mov
dec
mov
dec
rcl
out
shll
mov
mov
daa
pop
scas
test
movsb
jmp
lahf
sarb
rcrb
mov
push
into
dec
pusha
jmp
stos
testb
ja
push
cmp
je
shl
dec
cmpb
cmpsl
mov
sysret
andl
lea
and
inc
push
rolb
enter
les
jp
inc
sti
int3
mov
mov
je
pop
lret
ret
sub
mov
shlb
int
cmp
imul
aam
into
sub
dec
jg
xchg
jp
mov
add
movl
cmp
jecxz
icebp
dec
add
push
dec
loopne
jnp
lea
jmp
fisttps
fisubl
lret
sbb
inc
mov
rolb
inc
mov
icebp
out
lea
in
popa
mov
add
push
mov
inc
mov
adc
addl
js
rorl
pop
adc
push
mov
dec
push
mov
test
das
in
add
xor
mov
daa
dec
push
pop
fs
inc
push
push
pusha
insb
nop
inc
push
sbb
fs
js
inc
push
mov
cmp
inc
push
sbb
add
xchg
adc
test
ja
hlt
dec
jne
sub
add
xchg
popa
test
imul
xchg
imul
test
sub
adc
jg
subb
arpl
jae
fs
insb
add
iret
decl
pop
push
imul
popa
jae
gs
imul
jne
jg
outsl
sbb
push
and
xor
pop
xor
ss
fstpt
or
gs
jb
es
and
mov
fists
inc
ss
gs
aaa
sub
push
mov
inc
inc
or
gs
pop
inc
adc
sti
pushl
mov
xor
push
or
ss
and
fnsave
xor
fs
pop
inc
inc
add
fisubrl
xor
pop
push
ss
lahf
cmp
ljmp
arpl
outsb
popa
or
and
ja
je
jg
decl
outsl
bound
jo
outsl
fs
je
adc
arpl
mov
imul
and
adc
jbe
ljmp
inc
push
and
dec
push
push
dec
dec
push
aaa
dec
inc
add
idivb
dec
push
inc
push
or
push
push
and
inc
and
inc
dec
push
pop
lods
std
dec
inc
push
push
dec
sub
inc
and
inc
inc
dec
inc
jne
mov
inc
push
inc
push
push
sub
cmp
sti
lcall
das
push
push
shlb
inc
inc
inc
dec
or
inc
sbb
inc
arpl
mov
and
dec
push
and
test
insl
sub
xchg
pop
loope
and
popa
or
outsb
je
fisttpl
xchg
jae
jo
cld
bound
and
jb
in
lahf
in
sbb
jne
ja
and
loope
outsb
imul
push
out
and
je
sub
or
fs
jb
jne
int
adc
gs
popa
push
and
leave
outsl
insb
push
inc
imul
mov
insb
push
mov
popa
addb
add
xor
dec
mov
sub
fstpt
jmp
and
and
sub
add
push
adc
cli
inc
add
sub
out
lret
and
and
mov
cltd
inc
movaps
sbb
cmp
and
add
dec
movsl
aaa
xlat
sbb
sbb
mov
mulb
addr16
add
jno
or
aad
mov
xchg
cltd
imul
add
push
ja
lods
outsl
imul
or
in
sbb
ss
push
inc
sub
mov
pushl
dec
inc
sub
push
push
pop
inc
inc
dec
es
add
in
in
sub
pop
es
add
and
add
mov
push
add
fs
and
add
and
push
jb
insb
add
jmp
mov
add
insb
push
add
push
jp
popa
jp
xor
jge
push
insb
push
push
add
ret
int
add
or
sub
or
test
add
or
xor
adc
movsl
dec
and
xchg
rcrb
inc
pop
jg
gs
outsb
fs
test
push
les
xchg
rorb
insb
insb
lcall
pop
and
jge
jne
arpl
outsb
gs
sarl
jb
and
dec
inc
push
push
faddl
inc
push
cmp
push
andb
movsb
or
mov
inc
push
aas
push
dec
sbb
fstl
mov
inc
xchg
mov
stos
inc
xchg
testl
adc
add
inc
lds
mov
add
mov
inc
jns
add
or
stos
mov
sbb
push
or
stos
sub
sub
sbb
push
add
mov
jb
inc
xorb
inc
add
rcll
inc
sbb
stc
testl
test
add
push
sti
jp
std
decl
add
push
imul
insb
insb
outsl
arpl
add
push
jb
je
es
gs
outsl
jb
add
je
push
in
inc
outsl
outsb
sbb
and
lods
aam
sbb
push
gs
rorl
push
dec
pop
mov
xor
pop
push
and
jb
push
jae
aam
mov
aaa
push
inc
dec
dec
cmp
push
aaa
adc
add
push
mov
insl
ja
cs
add
push
imul
mov
sub
pop
xchg
push
xchg
outsb
outsl
adc
jns
sub
jb
es
lret
outsl
add
jp
jb
bound
sub
add
add
arpl
das
mov
arpl
das
arpl
imul
in
xor
or
insl
xchg
sub
insl
insb
jnp
sub
xor
and
repnz
outsb
daa
je
jmp
jmp
stos
fucom
outsb
popa
stos
out
inc
inc
inc
push
and
ficoms
cmp
and
shlb
xorl
movsb
and
imul
sub
and
lds
sub
or
push
enter
add
inc
pop
test
inc
dec
dec
dec
inc
sub
dec
xor
sbb
sub
push
push
test
test
pop
leave
sub
mov
mov
int
or
mov
dec
shll
into
fsubrp
add
push
sub
pop
cmpsb
imul
ja
int3
mov
fmull
in
add
or
sbb
xor
inc
cmpsb
imul
jns
jl
mov
push
add
add
gs
adc
sub
dec
push
add
adc
into
int3
add
add
or
dec
add
mov
add
or
dec
pop
nop
push
pop
ss
add
mov
inc
loopne
push
pop
mov
int
mov
stos
das
push
push
jb
insl
fs
adc
outsb
outsl
je
call
and
and
fs
sti
psadbw
mov
or
repnz
jp
addr16
jns
mov
cmp
cmp
cmp
fs
inc
inc
cmp
jp
add
imul
mov
dec
dec
add
mov
push
and
add
and
mov
or
sub
adc
in
in
imul
add
mov
sub
mov
aaa
add
insb
iret
out
sub
push
push
aaa
pop
outsl
gs
fistpl
aaa
js
add
je
ss
xchg
jl
xor
jae
xorl
xchg
andb
in
adc
daa
nop
add
jg
jge
and
fxch
or
sti
add
sub
idiv
outsb
push
shrb
jae
arpl
cmp
inc
cs
out
cmp
xor
divb
push
inc
jb
pop
cmpsb
jmp
mov
add
pop
bndstx
addr16
jg
lcall
arpl
adc
decb
inc
inc
push
inc
push
dec
xor
or
inc
xor
dec
or
cs
mov
inc
push
push
pop
adc
dec
pop
addl
outsb
jg
std
jnp
fnsave
in
add
ja
outsl
xorps
in
mov
or
jae
jb
sti
decl
xor
xchg
test
cmpb
xlat
fwait
insb
xchg
lret
in
push
fs
scas
outsb
lods
pop
mov
xor
add
nop
jl
pop
jle
sbb
xchg
test
cmpl
or
jl
das
fnstenv
lret
insl
cltd
lcall
aas
jnp
push
mov
adc
mov
cmpb
jbe
sahf
jl
or
or
out
ret
jg
dec
jecxz
add
adcb
add
mov
dec
jp
push
sti
add
and
fcomps
sbb
pop
sub
xor
sub
fcmovne
nop
fnstsw
xor
sub
and
cmp
add
cmp
int
mov
fwait
add
jae
xchg
mov
insb
fs
dec
or
ja
mov
xchg
jae
or
out
and
fs
scas
scas
jmp
in
inc
arpl
mov
mov
or
xor
imul
testb
push
add
gs
mov
sub
jne
push
incl
ljmp
add
jbe
inc
sub
outsb
sbb
fisttpl
inc
sub
pop
jo
outsl
jb
outsl
adc
xlat
addr16
jo
xor
sti
xchg
add
je
jne
pop
inc
add
dec
fsub
mov
sub
inc
aaa
or
enter
and
jb
pop
outsb
sbb
jmp
and
cmp
add
sub
loope
add
popw
jo
gs
imul
out
jo
orl
mov
xor
imul
imul
sbb
daa
jb
stc
xor
fldenv
inc
pop
and
inc
sti
pop
idivl
insb
sub
push
lds
jae
jbe
jns
fldl
and
and
iret
inc
arpl
mov
jmp
outsl
cmp
ja
dec
test
imul
shrl
loope
mov
mov
pop
insl
outsb
sub
loop
ljmp
xor
mov
xor
add
stc
insb
push
and
jmp
popa
cmp
add
sub
cmp
sub
aaa
dec
dec
cwtl
xchg
outsl
insl
shrl
mov
dec
dec
int
sbb
in
popa
push
cmc
or
stc
inc
cwtl
adc
inc
mov
or
lock
stc
jg
mov
push
dec
sbb
divb
rcrl
adcl
or
movsl
fisttpll
jl
inc
fwait
jae
outsb
xlat
mov
fs
pop
sbb
mov
inc
mov
fwait
sub
dec
insl
in
jmp
inc
lgdtl
cmp
pop
inc
add
and
push
add
or
inc
adc
sbb
mov
stos
lods
rcl
xor
data16
push
xor
adc
push
ret
push
dec
pop
jns
sub
pop
xchg
jg
and
sub
das
arpl
or
inc
sbb
jecxz
imul
rcl
sub
push
jns
cwtl
xor
lahf
push
pop
out
add
xchg
popf
outsb
mov
pop
jae
pop
dec
jo
and
pop
adc
test
mov
add
lret
test
dec
dec
jae
pusha
cmp
sbb
or
pop
inc
pop
fucom
mov
xor
pop
xor
insl
sub
filds
add
adc
xchg
das
sub
mov
outsl
inc
dec
mov
xchg
pushf
daa
inc
inc
enter
xchg
inc
daa
inc
fs
pop
xor
dec
enter
push
pop
out
sub
fwait
inc
cwtl
inc
cmp
orl
push
arpl
outsl
push
sbb
xchg
adc
rdpmc
or
ret
mov
ret
leave
sub
push
jmp
insl
andl
divl
pop
mov
adc
pop
lea
jne
sti
jmp
or
incl
push
push
inc
push
lea
mov
decl
mov
cs
arpl
popa
arpl
bound
inc
decl
mov
push
mov
xor
cmp
jne
mov
sub
push
add
push
mov
mov
data16
mov
inc
inc
inc
out
mov
dec
and
cmpl
pop
sub
mov
and
pop
pop
jnp
pop
ret
add
or
cmp
fidivrs
je
inc
cmp
je
cmp
jne
adc
fstpt
shlb
into
push
pop
cmp
mov
add
push
call
notb
jbe
ret
push
push
mov
lea
xchg
fcomi
add
jl
jmp
push
lea
push
call
jbe
pop
pop
lea
or
out
bound
pop
jmp
loop
fldl
jl
movsl
loopne
ficomps
xchg
mov
inc
cld
leave
lea
jmp
stos
add
push
clc
mov
bt
scas
pop
je
adc
push
mov
jmp
fadd
mov
fstpl
dec
inc
cld
aas
movzwl
and
loopne
jmp
gs
popa
and
int
add
mov
call
mov
call
xor
mov
adc
test
arpl
jl
enter
push
sub
ds
jmp
mov
in
push
push
cwtl
sbb
test
add
push
push
sbb
cld
push
push
xor
testl
pop
clc
mov
or
cld
mov
inc
clc
enter
idiv
sbb
loope
and
je
cmp
pop
cmp
jne
cmp
je
or
sub
push
mov
jecxz
lcall
xor
inc
jne
xchg
scas
xor
outsb
sbb
cmp
ret
jmp
frstor
jmp
mov
cld
repz
cld
incl
cmp
push
inc
inc
inc
inc
cld
mov
mov
xor
jg
imul
fmuls
lea
mov
shr
testb
lea
mov
shl
ret
rep
mov
sbb
rep
or
imul
or
dec
call
ficompl
out
mov
push
clc
jge
movsb
sub
je
pusha
add
dec
pop
cmpsb
mov
pop
push
sub
adc
jne
mov
mov
adc
jbe
adc
je
push
divl
jmp
jo
das
sbb
or
jp
cmp
jge
and
cmp
or
ret
inc
clc
movsl
push
pop
leave
ret
mov
dec
leave
sbb
cld
dec
clc
cld
lock
and
sbb
shll
cld
pop
inc
cmp
push
sub
mov
loope
mov
jne
shlb
mov
or
lcall
mov
and
mull
add
push
push
jne
sbb
idivl
ja
neg
cs
es
clc
jmp
enter
in
pop
and
lea
sbb
movsl
or
fisttpl
adc
ljmp
loope
scas
pusha
mov
add
fstpt
mov
dec
enter
xchg
fidivl
xlat
jb
mov
add
jbe
adc
jbe
je
fdivrs
mov
sub
shll
xchg
test
adc
iret
repz
cmp
sbb
sar
and
mov
adc
push
fwait
sub
jne
cmp
mov
rclb
or
jmp
mov
or
lock
loopne
sub
jae
push
je
pop
push
sbb
in
push
add
sub
mov
hlt
and
hlt
adc
lods
jge
mov
jmp
cmp
jg
mov
test
adc
lock
push
jne
push
mov
push
push
dec
dec
push
mov
sbb
movzbl
adc
push
fbld
mov
dec
decb
pushl
adc
dec
mov
out
enter
xorb
mov
and
mov
adc
and
aaa
out
pusha
or
add
inc
rorl
inc
cld
neg
push
sbb
push
jecxz
sarl
push
push
push
add
push
roll
cmp
inc
mov
fsts
push
pop
js
shrb
jmp
callw
xor
inc
or
xchg
loopne
xor
pop
movl
fcompl
add
add
ficoml
leave
int
and
fnstenv
sbb
or
dec
push
cmp
ret
push
nop
pop
push
jmp
add
push
cli
scas
add
xor
inc
push
push
mov
ljmp
lahf
mov
ret
mov
lea
mov
cmp
add
xchg
ret
inc
jmp
outsl
insl
jae
or
pop
jne
push
add
fimull
std
push
xlat
mov
adc
push
inc
cmp
jl
jmp
aas
rcr
jmp
xor
dec
mov
sbb
adc
popf
or
inc
ss
dec
out
or
sti
iret
jo
add
jno
jne
push
add
add
push
fdivr
xor
test
push
adc
mov
mov
outsl
aad
pop
pop
sub
sbb
sub
jl
sbb
mov
xor
call
sbb
movsl
or
mov
enter
pop
repz
add
mov
add
sub
adc
mov
je
mov
lds
xor
or
jge
mov
adc
push
push
or
mov
sti
push
das
jne
inc
je
jnp
push
jmp
sbb
sbb
fadd
outsb
shll
add
adc
add
movsl
inc
pop
add
add
ret
hlt
jp
xor
loop
jne
push
mov
inc
mov
sbb
nop
add
or
lds
repz
call
lods
ds
mov
push
aas
js
pop
mov
in
adc
int
add
inc
adc
xchg
lret
out
and
and
fadd
imul
and
dec
push
test
data16
aam
add
fsubl
data16
adc
push
loop
out
lahf
int
ljmp
jecxz
mov
scas
xchg
adc
or
or
xchg
jl
lret
mov
inc
sub
cwtl
or
idivb
popa
daa
mov
aad
int3
test
divl
or
cmp
xor
js
nop
jl
cmp
push
or
mov
and
xor
lods
dec
cmp
sbb
push
pop
rcll
daa
aaa
lret
pop
pop
loopne
mov
push
push
cwtl
movsb
jge
mov
ljmp
mov
push
jmp
jns
in
lods
jle,pt
std
std
scas
adc
pop
mov
jecxz
jnp
dec
leave
push
test
ret
jmp
test
sub
add
add
rcrb
out
push
sbb
fldl
pop
or
arpl
mov
mov
pusha
xchg
mov
fsubrs
sbb
mov
inc
js
jae
add
xor
icebp
jmp
es
xchg
outsl
xor
rcrb
sub
push
lods
pop
and
lock
cmpl
fdivr
push
clc
imul
ss
pop
or
push
mov
or
imul
xorb
adc
or
pop
pop
inc
popa
mov
mov
sbb
mov
test
adc
lret
je
pop
dec
aaa
jmp
push
js
sbb
push
xor
cmc
rclb
ljmp
js
inc
mov
int3
pop
sbb
lret
sub
pop
ret
insl
mov
test
jno
push
xor
add
cmp
and
pop
xchg
outsl
aas
sbb
int3
call
push
mov
xchg
sbb
jle
xor
sub
jecxz
add
add
hlt
or
andl
or
test
je
xchg
popa
cld
lock
lock
es
cmp
and
cmp
or
jmp
cmp
test
pusha
push
xorl
movsbl
add
popf
mov
scas
inc
faddl
in
mov
imul
out
push
push
in
jae
in
stc
incl
out
push
sti
es
mov
pushf
mov
inc
addb
add
xlat
dec
pop
dec
lcall
push
cmpl
adc
xor
pop
xor
in
mov
outsl
pop
out
add
notl
stc
mov
and
clc
sub
mov
dec
jb
push
dec
sub
test
dec
inc
sbb
dec
pop
mov
xchg
in
lods
fldl
test
sahf
add
mov
or
pop
call
xchg
adc
test
sbb
cs
sub
or
or
inc
adc
jae
add
adc
sub
pop
jb
sbb
hlt
inc
jbe
or
inc
pop
push
sub
clc
mov
xchg
sbb
in
je
in
sub
daa
xor
add
fmuls
push
xchg
call
xchg
cmp
mov
pop
cmp
into
imul
jne
push
sub
xor
movsl
fimull
lock
xor
fldenv
andl
push
xor
movb
out
fistl
dec
mov
add
xchg
mov
or
roll
ret
jmp
push
loop
mov
iret
jns
aam
xchg
rcrb
mov
jp
test
in
inc
mov
mov
fwait
mov
popl
sub
fldenv
add
in
cmp
daa
mov
leave
push
mov
cld
xor
or
int3
mov
mov
xor
cld
adc
cmpsb
fadds
test
or
std
in
inc
and
daa
cwtl
push
insb
xor
inc
add
inc
pop
pop
mov
in
jo
xor
imul
add
dec
ss
add
ss
xor
xorb
aaa
mov
cmp
lret
sub
mov
es
xor
shll
pop
dec
fstp
data16
xor
cmp
mov
shlb
shll
jo
xor
ss
xlat
pop
rolb
call
pop
negl
xor
push
out
xor
mov
lcall
xor
mov
ja
adc
cld
shll
adc
fwait
rolb
fdivrl
scas
xor
xor
outsl
jae
popa
or
jo
je
and
pop
popa
outsl
add
jo
movsl
or
outsb
sbb
add
jae
push
or
jo
loopne
adc
add
push
add
pop
fcoml
push
add
out
xchg
sub
scas
adc
mov
adc
adc
add
inc
test
or
push
popa
insb
jne
inc
js
out
adc
pop
jbe
cltd
adc
fimuls
addps
and
jge
inc
mov
neg
mov
imul
xchg
sbb
psubsw
pop
js
or
jae
imul
adc
dec
imul
str
xor
add
clc
fiaddl
ficoms
imul
inc
jb
jb
sub
pop
cmp
inc
inc
daa
push
pop
mov
add
dec
popa
sti
int3
adc
mov
mov
pop
push
lods
dec
or
insb
outsl
jnp
or
dec
sub
or
jns
pushf
test
movsl
adc
jb
sub
pop
jmp
divb
in
push
cmp
lsl
adc
add
mov
inc
add
adc
aam
lea
xchg
cmp
inc
das
mov
mov
insb
jmp
rclb
lods
lods
inc
rcr
insl
jmp
add
dec
test
adc
ds
dec
pop
cmp
loope
inc
mov
sarb
gs
insl
jnp
testl
push
pop
insl
enter
adc
push
outsb
push
fs
jo
pop
jo
sbb
test
pusha
adc
and
out
daa
jb
push
mov
add
pop
jae
clc
cmp
mov
testb
fs
adc
push
jno
sub
outsl
mov
sti
enter
add
subb
rorl
aaa
stos
out
dec
iret
sub
push
inc
mov
adc
jb
mov
or
fdivs
pop
loopne
flds
iret
xor
sub
and
xchg
outsb
and
and
leave
gs
inc
cmp
push
pushf
add
lock
pop
adc
pop
inc
add
pop
add
dec
jg
add
addl
cmp
movsl
xchg
incb
pop
aas
inc
fisubs
jmp
add
add
add
loop
dec
and
add
pop
outsb
mov
cmp
fdivs
insl
add
pop
push
call
outsl
pop
jecxz
shlb
adcl
cmp
sub
int3
mov
push
jnp
flds
add
arpl
pusha
andl
push
jb
subl
popf
arpl
inc
mov
bound
and
inc
outsb
and
add
add
dec
shlb
adc
mov
sub
add
subb
cmp
xor
or
and
or
popa
adc
xchg
insb
adc
inc
aas
fisubs
add
dec
jns
out
ret
imul
outsl
jns
adc
add
in
push
or
inc
jae
add
xor
jbe
cs
or
dec
sub
out
mov
das
outsb
ret
push
and
jae
movsl
adc
mov
mov
inc
sarl
push
jbe
je
add
imul
adc
sarl
ret
je
inc
xor
icebp
sahf
and
mov
movb
insb
mov
mov
iret
andb
ja
aas
mov
mov
lcall
aas
repz
stc
js
idiv
call
xor
dec
xor
jae
jp
mov
xchg
xor
xor
xor
call
xor
xor
xor
xor
xor
add
inc
xor
xorb
fwait
xor
xor
xor
xor
xor
lret
decl
xor
pop
xor
loop
js
xchg
ss
aaa
pop
aaa
jo
mov
pushl
shll
sbb
inc
cmp
pop
cmp
xchg
das
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
cmpsl
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmpl
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
xchg
mov
cmp
cs
imul
xchg
mov
lcall
ds
ds
inc
aas
dec
mov
aas
pop
aas
ja
test
aas
popf
aas
aas
int
fstpt
loop
hlt
adc
loope
pop
or
xor
xor
xor
xor
pop
xor
ja
mov
out
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
xor
dec
mov
ljmp
add
jmp
sbbb
shl
add
adc
cli
decl
jbe
imul
xchg
lret
jecxz
add
push
out
adc
decl
insb
popa
ss
hlt
xchg
cmp
mov
xchg
movsl
aam
mov
adc
lret
in
enter
sub
in
and
inc
clc
push
fs
xor
popf
mov
jl
cwtl
sti
in
jp
mov
popa
orb
decl
fucomip
in
fstl
add
mov
or
mov
pop
jbe
sbb
pushf
inc
cli
pushl
shr
cmp
ret
ds
js
pop
inc
and
inc
aaa
jbe
xchg
cwtl
add
jmp
adc
dec
test
jg
jmp
cli
cmpsb
mov
pop
leave
les
movsl
sub
and
or
pop
add
call
mov
arpl
rorl
repnz
jl
push
pop
lret
scas
decl
std
cmp
cmp
lret
sub
les
pusha
push
adc
cmc
pushl
pop
repz
and
mov
xchg
call
cmpsl
dec
push
out
arpl
or
out
xchg
mov
scas
iret
jae
je
pop
pop
aas
cwtl
popf
ja
enter
push
movsb
jmp
lcall
sub
mov
xor
pop
cmc
movsb
xlat
int
and
xor
in
xchg
call
sub
pushl
aas
push
ja
xlat
pop
push
out
idivb
mov
fs
repnz
ror
daa
in
sbb
lcall
jns
jge
insl
lcall
cmc
iret
aaa
mov
push
clc
sbb
insb
sbb
add
testl
fiadds
and
mov
scas
fbld
sbb
fiadds
scas
mov
sbb
dec
call
mov
pop
xchg
out
loope
rdtsc
test
out
jnp
cwtl
pop
stos
push
ja
inc
hlt
push
call
add
cmc
sti
cmp
push
xor
xcrypt-cfb
cmpsl
out
sbb
decl
push
fs
and
aam
shlb
sar
jnp
lods
cli
sti
stc
or
mov
push
jae
mov
sub
cwtl
push
jae
jecxz
call
jmp
sbb
jbe
xchg
jns
adc
call
pop
out
fcomi
std
xor
daa
mov
repnz
sysexit
call
test
adc
cld
and
decl
frstor
inc
xchg
push
push
cs
push
cld
xchg
xor
inc
fsts
incl
cltd
cmp
cmpb
pop
outsl
dec
push
cmpsb
add
push
aad
push
fwait
cmp
dec
cmp
mov
add
leave
pop
dec
push
cmp
outsl
add
fs
mov
cltd
mov
das
xchg
sbbb
fdivrp
call
imul
test
cld
pop
cmpl
insl
pop
xor
decl
clc
sbb
xor
fdiv
mov
out
mov
ljmp
jecxz
push
pop
lcall
sub
inc
and
fucomi
sbb
xor
xlat
xchg
clc
or
push
mov
adc
pushl
xchg
mov
stc
fstpl
outsb
enter
repz
data16
lock
insb
pop
sti
fyl2xp1
jle
pushf
fistpll
mov
jo
int
inc
sti
lods
push
in
cmp
pop
cmp
xchg
xor
push
jno
add
jbe
decl
add
add
nop
push
inc
aas
cmc
xchg
aad
idivb
xchg
lea
sti
aad
xchg
dec
mov
shll
cmp
addb
push
cmp
mov
in
mov
sti
lret
jp
test
cwtl
es
decl
jmp
test
sbb
push
dec
push
xchg
jl
mov
test
mov
ljmp
std
dec
push
mov
fldt
inc
adc
push
or
fimull
or
mov
fists
addr16
jae
lahf
xchg
xchg
gs
pusha
add
cli
call
dec
not
inc
mov
das
sub
mov
inc
hlt
sahf
cmp
decl
mov
cmpsl
sbb
inc
cmpl
and
test
pop
dec
inc
jp
nop
xchg
call
xchg
sti
scas
lcall
test
icebp
jno
add
aas
push
sub
imul
testb
cmpsl
mov
pop
pop
sbb
decl
pop
pop
jb
jle
dec
movsb
aad
push
push
fidivl
add
and
test
push
xchg
jg
aad
ljmp
fsubl
or
hlt
lcall
inc
push
call
inc
mov
test
insb
sub
sub
insl
adc
adc
xchg
add
aam
ror
cmc
lea
jmp
push
dec
std
lcall
sbb
jg
out
loopne
dec
cltd
fs
pop
repz
inc
insl
mov
enter
pop
cmp
lcall
repz
pushf
dec
orb
or
andl
pushf
ja
push
cmc
test
repnz
pop
mov
adc
pushf
sbb
insl
ss
jg
pop
pop
rcll
push
das
pushf
inc
outsl
add
ret
aaa
xchg
addl
hlt
adc
mov
in
or
idivl
adc
sub
push
push
loopne
push
arpl
dec
imul
outsl
outsb
scas
adc
xor
testb
add
incl
ljmp
pop
shrb
mov
orb
das
ljmp
daa
in
stos
push
jne
adc
fbstp
add
insl
gs
movl
jle
push
shlb
jb
mov
pop
pushf
and
jne
loop
or
decl
sub
insl
inc
mov
ljmp
fimull
nop
inc
pop
push
dec
mov
jg
jmp
mov
test
or
jl
or
sti
inc
adc
cmpsb
movsb
and
cmp
sbb
lds
fs
iret
enter
incl
jmp
push
mov
adc
and
sbb
mov
jnp
push
insb
push
mov
sar
mov
dec
and
in
inc
jl
je
test
pop
sub
pushl
ja
adc
xor
jmp
ss
mov
movsl
mov
push
push
frstor
xbegin
inc
in
aad
dec
je
jp
movb
sub
xor
inc
push
fs
jmp
and
jle
dec
mov
push
xlat
push
std
jl
jo
push
dec
pop
cltd
or
incl
shrb
stos
lods
iret
scas
in
outsl
insb
jno
test
mov
out
pop
mov
inc
js
jge
xor
sub
cmc
stos
les
dec
sbb
ljmp
push
lock
mov
sub
dec
push
push
ss
xchg
cs
ljmp
repnz
sahf
xchg
inc
push
mov
repz
add
mov
ljmp
mov
incl
sub
lahf
and
xor
loop
fistpll
or
popf
dec
inc
cmp
ljmp
ljmp
std
insb
js
scas
out
push
xlat
adc
inc
rol
mov
cmp
jge
fstpl
jmp
dec
outsl
jmp
push
add
xchg
dec
lds
insb
mov
call
lock
in
aam
stos
sub
push
push
inc
or
aaa
inc
fidivs
ljmp
loop
das
loopne
push
mov
or
flds
jecxz
das
mov
push
insb
fsubl
insl
xor
hlt
and
imul
push
sub
dec
push
jmp
je
das
jmp
ror
aas
jne
and
mov
fcom
and
popf
dec
cmp
pop
adc
repz
pop
addr16
out
cmp
incl
sub
pop
movsl
or
mov
fbld
fnstenv
and
cld
xchg
into
rorb
push
mov
fadds
xchg
jp
gs
neg
jns
lcall
rolb
or
lds
fnstcw
push
flds
mov
add
dec
cwtl
test
jb
sbb
jl
loopne
inc
or
jbe
inc
sub
fbld
leave
int3
outsl
and
aaa
xchg
and
cmpsb
xor
jg
pusha
icebp
aam
cmp
lock
xchg
divb
in
mov
stc
sbb
jns
sub
movsl
add
mov
sub
jge
jns
test
jmp
mull
xchg
jg
stos
xor
inc
mov
fscale
lcall
xor
aas
and
mov
in
insl
push
pop
mov
pop
xchg
xchg
pusha
mov
imull
mov
xor
stos
dec
call
inc
fiadds
mov
lods
ficomps
inc
addr16
jns
pushf
out
add
push
repz
jbe
or
inc
inc
or
jp
inc
aam
dec
mov
pop
fwait
movsl
adc
test
subb
icebp
call
les
leave
shl
xor
flds
data16
fimuls
aad
push
pushf
ljmp
into
jge
inc
sbb
push
sbb
lret
mov
push
inc
lea
daa
jns
in
fnstsw
lcall
push
push
dec
pop
mov
jae
fcmovnu
pushf
push
jmp
mov
adc
sub
cmp
gs
push
jl
or
xor
jmp
push
repz
fistpl
jmp
mov
pop
cmp
mov
pushl
clc
cmp
and
jae
stc
sub
in
fdivp
insl
cmp
roll
repnz
call
fsubrs
and
cltd
sub
pop
daa
mov
ljmp
inc
push
outsb
outsb
push
icebp
lret
xchg
aad
or
addr16
pop
add
jbe
jne
adc
sbb
nop
jo
xchg
cmpsl
pop
test
into
mov
sub
inc
arpl
pop
inc
push
ljmp
std
call
and
sbb
xorl
cmp
fstl
push
lds
dec
xchg
and
stc
push
xor
adc
push
daa
mov
jg
inc
enter
pop
adc
scas
notl
loope
adc
into
sbbb
xlat
dec
jmp
ja
ret
rclb
and
add
shlb
aam
add
lea
loope
adc
cltd
cmp
push
hlt
ljmp
push
or
iret
xchg
xchg
mov
in
rcrl
loop
std
das
pop
jns
mov
cmp
mov
incl
hlt
jo
jmp
hlt
lea
and
jns
jns
lcall
jg
test
daa
jb
out
insl
hlt
sub
dec
inc
mov
or
jg
pushl
loop
mov
mov
jg
pop
mov
fucomip
leave
cltd
les
ss
sbb
add
call
mov
ret
jg
or
insl
pop
loope
sbb
leave
hlt
sbb
fwait
ret
scas
inc
ret
mov
lcall
sub
shll
nop
cmpxchg
clc
lcall
xchg
pop
xor
jmp
jge
xchg
jbe
cli
into
fisubrl
jge
incl
mov
lahf
push
in
push
adc
xchg
inc
mov
push
call
mov
xchg
mov
cmc
cmp
push
mov
dec
push
mov
lcall
rcrl
push
sbb
mov
shlb
mov
mov
rcrb
sbb
mov
adc
aaa
and
fisttps
ds
pcmpeqb
push
mov
clc
dec
cld
jne
rcrb
mov
mov
lods
jg
jmp
xor
jns
add
popa
data16
in
pop
and
aas
bound
in
outsl
incl
popa
ljmp
lods
push
daa
cmp
pop
testl
fiadds
ljmp
jp
call
movsl
pushf
je
rcr
outsb
cli
jg
sbb
sub
ljmp
xchg
dec
jge
xor
sbb
sub
iret
insb
call
repz
pop
or
mov
fists
mov
lret
push
dec
jg
ret
mov
jae
xchg
je
lcall
jge
in
repz
das
je
pop
and
mov
fld
pop
les
movsb
stos
jg
call
scas
mov
dec
mov
mov
std
fistpll
imul
mov
orb
push
sti
std
mov
mov
daa
loopne
jns
dec
push
pop
popa
imul
decl
fs
mov
inc
pop
add
pusha
dec
jnp
mov
aad
icebp
jl
push
push
mov
fs
xchg
aaa
mov
lcall
lds
daa
sbb
insl
shll
aam
mov
xor
pop
std
lea
and
ret
stc
in
mov
sti
and
lcall
adc
sub
ss
sbbl
fstpt
cmc
jp
pop
sbb
pop
push
and
imul
cli
fldt
pop
cmpsb
and
and
xor
dec
jo
ret
iret
insb
cld
inc
in
ljmp
sub
stos
xchg
sbb
pmaddwd
cltd
inc
sbb
and
sub
out
pop
std
pop
call
lcall
in
aaa
sub
cld
test
or
sbb
lcall
decl
xchg
call
cmp
sub
roll
bound
dec
test
adc
mov
decl
orb
add
cmp
lods
bnd
mov
call
fistps
xor
popf
pop
dec
sti
mov
lods
pop
mov
jg
lcall
jo
outsb
lea
clc
and
popa
icebp
cmc
test
lcall
cmpsb
cmp
add
mov
xlat
cld
and
push
xchg
test
fbstp
repnz
js
clc
mov
push
out
mov
std
call
and
pop
adc
sub
add
push
test
shll
or
fucomip
das
out
test
push
jp
insl
inc
call
or
xchg
cli
incl
popf
fmull
fiadds
call
mov
ret
mov
popa
push
subl
xchg
dec
repz
cmpsl
test
loope
pop
dec
mov
mov
and
jns
imul
pop
cvtps2pi
xchg
loope
dec
fstpl
mov
inc
sub
or
add
mov
dec
popa
ror
mov
and
xchg
and
aad
loop
outsl
mov
fidivl
dec
push
and
or
mov
xlat
daa
xchg
mov
icebp
mov
sarb
loope
cmc
call
mull
add
adc
mov
add
mov
sahf
fists
lret
cmpsl
icebp
push
inc
sub
or
inc
or
outsl
inc
rol
outsb
mov
rorb
in
push
cmp
cwtl
xlat
loopne
sbb
rcll
lret
jb
ljmp
pop
std
push
test
dec
cmp
xchg
sub
sarb
stos
push
in
mov
aad
call
xor
mov
lret
loopne
xor
in
insb
mov
mov
sub
shrb
pop
dec
cmpsl
sbb
mov
jl
mov
ljmp
hlt
cli
int3
sbb
es
test
loop
dec
mov
jmp
outsb
cmp
inc
or
pop
movsl
cld
iret
jmp
xor
dec
sbb
mov
lcall
das
or
xlat
mov
or
aaa
icebp
call
pushl
pop
shrl
ja
movsl
jae
mov
lock
cmp
decl
mov
and
dec
add
cmpsl
xor
mov
fistps
add
incl
sti
pop
iret
pop
cmp
inc
mov
std
sbb
jge
dec
lods
adc
mov
inc
insl
aaa
lea
jg
rol
pusha
test
ret
out
int3
outsb
fwait
andl
clc
call
lods
xchg
ljmp
cltd
shl
sahf
mov
in
decl
sbbl
jl
push
sbb
push
enter
push
jg
lods
hlt
jnp
cli
movsb
xlat
sahf
mov
push
out
push
inc
sbb
shll
lret
stos
mov
xor
dec
cli
idivl
outsl
cmp
or
rolb
icebp
jmp
test
shlb
outsl
outsl
mov
pushl
inc
xchg
rolb
movsl
aam
lcall
push
xlat
inc
roll
mov
cltd
lcall
ss
lcall
cmp
in
dec
sti
icebp
dec
loopne
int
or
adc
jnp
jae
add
loopne
lcall
cmp
xor
xorl
arpl
jmp
adc
inc
cmp
xlat
in
rcl
lds
in
jp
mov
xchg
std
jp
loop
jg
inc
mov
addr16
movsb
out
je
loopne
push
ljmp
pop
cmp
fs
iret
stos
adc
mov
add
lods
jl
push
mov
nop
ja
or
mov
jnp
outsb
fcomps
or
push
loope
cmpsb
imul
dec
mov
pop
decl
mov
mov
sti
fidivrs
jo
push
stos
mov
push
decl
fnstenv
fadds
cmp
dec
jp
dec
lock
addb
add
mov
cmp
ret
inc
jmp
mov
ljmp
jb
nop
sbb
mov
mov
fbld
and
jmp
xor
jns
call
xor
xchg
jmp
mov
cld
jecxz
xchg
xor
sbb
lcall
les
std
dec
ss
cmp
adc
inc
sti
mov
jo
xorb
dec
mov
test
decl
movl
lds
mov
and
scas
icebp
jmp
daa
clc
add
and
pop
fdivl
dec
ss
pop
lods
jb
negl
dec
ret
fcmovne
pop
push
mov
cmpsb
xor
jg
addb
push
pusha
sub
push
aad
inc
pop
jmp
fcomi
lcall
repnz
movsb
loop
pop
push
adc
and
jecxz
push
mov
je
sarb
fistpll
mov
mov
cli
movsl
fisttpl
cmp
je,pt
ljmp
mov
push
and
mov
jp
daa
inc
xchg
mov
ja
nop
mov
mov
mov
pop
nop
mov
decl
jecxz
stos
repnz
int
and
xchg
imulb
in
and
jmp
js
data16
mov
push
jo
pop
mov
jmp
push
add
jmp
cli
aas
inc
pop
xor
pop
addl
bound
addb
or
std
outsl
jge
pop
je
sbb
adc
jno
xor
mov
decl
cld
sub
loopne
jecxz
ljmp
outsl
test
jge
mov
jg
mov
aad
cmp
in
add
cli
dec
inc
dec
insl
or
ss
fdivrp
ljmp
stos
enter
shll
orb
sahf
mov
push
adc
fldenv
pop
xor
movsb
scas
enter
xchg
mov
hlt
pop
addr16
outsb
inc
in
fistpl
add
in
push
aas
sbb
mov
loope
ja
push
movzbl
cs
add
call
mov
ja
lods
push
cmpsb
pop
cltd
push
sub
xchg
or
sti
lock
sbb
decb
dec
mov
ja
xchg
ljmp
and
xor
addb
jno
jge
mov
out
pop
jg
test
xchg
mov
dec
sub
jne
pop
mov
jnp
lret
dec
cwtl
mov
fucomip
cld
push
ljmp
cmp
push
xor
cmp
mov
bound
inc
add
push
mov
mov
push
std
mov
or
lret
cmp
jge
mov
test
arpl
shrl
jmp
clc
popa
mov
pushl
aam
mov
push
inc
and
jmp
pop
add
pop
jg
aad
mov
popf
jecxz
mov
in
lods
inc
mov
outsb
mov
movsl
cmp
dec
aaa
addl
sarb
inc
test
jg
jb
push
data16
cs
aaa
pop
adc
js
out
jle
movsl
das
icebp
jmp
adc
test
inc
fstp
popf
aas
adc
decl
negl
jns
shrb
dec
cwtl
xchg
or
push
mov
xchg
add
jmp
cwtl
and
jg
in
add
jne
adc
mov
shr
xchg
push
mov
cmp
insb
adc
sbb
int
or
sub
icebp
and
push
mov
iret
pop
xor
sub
xchg
es
inc
dec
shll
xchg
ret
cmp
sarb
jbe
je
inc
lret
ja
jg
mov
ljmp
notl
imul
fbld
out
cmpsb
les
cmp
pushl
cli
incl
out
lret
mov
pop
jbe
inc
leave
sub
pusha
mov
stc
inc
push
inc
and
decl
cmpsl
adc
faddl
ljmp
jmp
push
stc
xchg
cmp
fnstsw
inc
inc
enter
sub
enter
jo
adc
sub
jg
adc
fcoml
xchg
stos
loop
xchg
adc
sar
jg
jmp
pusha
adc
xchg
cld
call
pop
adc
sub
adc
sbb
inc
ljmp
dec
popa
add
lods
or
mov
daa
ret
mov
decl
push
lret
hlt
add
xor
sub
dec
mov
mov
bound
aad
mov
push
das
je
cmp
fistl
inc
lahf
adc
sbb
ja
lcall
jno
inc
and
pop
cmp
decl
push
int3
jle
outsl
add
and
push
dec
mov
mov
xchg
pop
ljmp
xchg
cwtl
or
push
inc
adc
das
icebp
das
idivl
mov
xor
rolb
push
aad
idiv
movsl
call
repz
xchg
into
mulb
fucomi
mov
inc
cmp
mov
pushl
xor
fnstsw
mov
dec
scas
jmp
lcall
and
fsubl
inc
imul
push
lahf
fsubs
call
mov
jle
ja
pop
sub
call
push
repnz
mov
mov
fwait
xchg
arpl
lea
or
testb
stos
add
jg
data16
inc
outsb
repz
iret
xlat
inc
cmc
sub
xchg
sbbl
lock
in
popf
cmpsb
jle
jo
in
jae
cltd
or
hlt
or
out
iret
repz
push
fistl
mov
adc
das
mov
imul
push
clc
movsl
data16
inc
jno
add
pop
loopne
or
not
xchg
jbe
push
and
cmp
mov
leave
std
jg
lea
add
mov
pop
fbld
sbb
push
in
outsb
insb
adc
ljmp
es
push
mov
test
push
cmp
std
andb
cli
dec
dec
fwait
jae
aad
ret
xchg
les
pushl
jno
cs
scas
mov
mov
mov
xor
mov
add
adc
test
orl
jle
outsb
in
ret
call
sarl
jg
jg
lcall
pop
jb
pop
sbb
push
stc
jae
cltd
or
mov
mov
pushl
xor
push
push
ficoml
leave
inc
mov
call
add
into
addr16
and
mov
jecxz
call
pop
stc
pop
sbb
in
push
shlb
xor
data16
mov
jg
xchg
clc
mov
mov
sbb
xor
pop
mov
mov
jbe
sbb
sbb
out
inc
loop
stc
outsb
ljmp
dec
fstpt
loop
imul
loope
mov
imul
adc
xchg
xchg
ja
pop
push
stc
sub
cld
push
sub
cli
jg
mov
mov
lcall
mov
imul
call
and
mov
cmc
pop
out
cwtl
cld
imul
mov
mov
pushl
rcrl
lock
mov
add
jmp
push
add
mov
cmp
push
mov
frstor
add
jg
call
out
push
rcll
cmp
outsb
fistpl
sbb
lret
push
das
pop
cli
decl
cltd
push
daa
sbb
sub
decb
test
jg
das
cld
test
push
outsl
xchg
cmp
sub
and
inc
mov
ljmp
mov
fs
rcll
sbb
cltd
hlt
addr16
xchg
jl
popf
les
or
fistpll
add
xchg
ret
fs
out
incl
pop
pop
xor
dec
xor
push
js
and
jne
push
add
or
js
dec
mov
in
pushf
mov
ljmp
xchg
repnz
xchg
adc
pmaddwd
cmc
fisttps
inc
cltd
mov
shlb
clc
mov
test
pusha
mov
pushl
test
jge
xor
leave
mov
pop
sbb
jno
or
jg
sub
sbb
jo
adc
add
fwait
icebp
pop
jg
sub
rclb
hlt
jnp
shl
jnp
mov
mov
outsl
mov
jge
ja
aaa
hlt
xchg
int3
xor
adc
and
jle
mov
call
xchg
sub
std
lahf
cs
mov
inc
fldt
pop
rcrl
sbb
jg
cmp
mov
cmp
frstor
and
lock
pop
add
sbb
std
fs
or
stc
and
insl
pop
pop
ljmp
mov
inc
lea
add
les
in
jg
push
mov
sub
add
movsb
sbb
dec
leave
push
cmp
idivl
mov
lret
add
lcall
mov
inc
push
leave
pop
dec
test
mov
pop
inc
mov
shlb
sub
fmull
sar
testl
lret
xchg
sbb
dec
cld
sub
inc
shll
inc
fldenv
mov
js
das
cld
pop
incb
pop
jae
je
dec
adc
mov
loop
jbe
mov
test
stc
mov
std
pop
cmc
dec
dec
push
jmp
aam
test
push
scas
xchg
sahf
mov
or
cmp
jno
sbbl
and
inc
loope
hlt
ljmp
cmp
aam
lea
add
push
ljmp
test
inc
das
jl
ds
cmpsl
or
or
clc
ficomps
mov
xor
jae
cwtl
sub
pop
mov
and
andb
icebp
sbb
xorl
push
fs
pop
sbb
sub
mov
cmp
push
cltd
mov
mov
add
push
cmpsb
xor
iret
push
xchg
jecxz
lret
mov
inc
insb
sub
sbb
jp
inc
out
int
lret
lcall
loop
or
aaa
dec
imul
sub
stc
cwtl
push
xchg
add
sub
jle
arpl
adc
aam
sbb
dec
aas
fcoml
push
fcmovnb
sahf
out
jg
jmp
ds
jp
sub
rorb
loopne
dec
movsl
mov
popa
js
incl
std
ret
stos
add
sbb
ds
lcall
add
loop
repz
and
iret
sarb
pop
mov
inc
subl
int
shrl
xchg
stc
test
xor
xor
jl
mov
pop
xchg
xchg
lahf
testl
jl
sub
stc
das
lock
jmp
jg
jne
mov
int
or
push
imul
mov
mov
and
mov
dec
jo
sbb
imull
push
dec
add
jle
jge
test
pusha
cmpsb
daa
cmpsb
orl
push
jns
loop
pusha
push
lretw
dec
pop
or
xor
or
and
in
inc
lcall
adc
mov
dec
jl
push
outsb
incl
mov
mov
and
add
lret
adc
pop
clc
ljmp
xor
lods
pop
sti
lret
loope
mov
sub
pushl
roll
arpl
adc
ja,pn
pop
icebp
xor
adcl
xchg
icebp
in
ljmp
sub
lock
outsl
xor
pop
imulb
xchg
jnp
inc
and
test
enter
test
stc
and
lods
test
pop
es
and
and
clc
stc
push
scas
jl
pop
mov
push
pop
mov
inc
enter
mov
xchg
push
mov
loope
imulb
rcll
xchg
int
lcall
xor
ss
mov
pusha
sbb
mov
lret
fucom
cwtl
call
mov
push
in
outsb
inc
jb
popf
mov
fs
pop
add
push
cs
incl
xor
xchg
and
push
ss
mov
aad
jo
mov
loop
lcall
mov
lock
mov
aaa
add
fsub
iret
ljmp
das
jmp
arpl
ja
lods
jne
jns
mul
xchg
mov
clc
subb
shl
mov
add
icebp
jmp
fisubrs
sahf
addl
jmp
sub
mov
imul
cmpsl
sbbb
call
or
cli
in
pop
insb
insb
pop
clc
pushf
nop
adc
mov
pusha
dec
gs
bound
mov
mov
jb
lods
jp
movsb
lret
dec
jg
fldl
in
push
daa
lahf
inc
scas
mov
stos
repz
push
inc
cmpsb
shlb
clc
movsl
lcall
icebp
mov
leave
pop
mov
in
inc
add
shlb
fsincos
mov
int3
dec
orb
mov
fdivrl
cmpsl
push
sub
stc
outsl
into
jae
enter
insb
fs
lods
sbb
xcrypt-ofb
cmpsl
jmp
push
mov
jg
or
scas
add
stos
frstor
dec
mov
mov
call
call
cmp
and
cld
daa
xchg
mov
mov
cmpl
cmp
push
outsl
test
pop
aad
push
xchg
cwtl
test
dec
ljmp
xor
sub
sub
mov
xchg
inc
mov
mov
out
cmp
decl
mov
aam
hlt
sub
outsl
fidivrs
inc
fidivs
movsl
push
mulb
jbe
mov
addl
cmp
mov
xchg
rolb
ljmp
jbe
lret
sbb
test
adc
inc
sub
movl
aaa
std
out
sahf
out
iret
jle
add
mov
pop
test
stc
xchg
hlt
gs
cmp
scas
sarb
xchg
in
push
call
or
into
outsb
roll
fwait
mov
mov
test
test
jg
incl
dec
sub
add
out
xor
call
imul
push
enter
lcall
adcb
xchg
adc
ljmp
hlt
ds
in
pop
std
mov
pusha
pop
insl
cwtl
mov
mov
and
mov
pop
jle
mov
subl
add
jbe
call
jp
imul
in
push
cli
push
inc
xchg
aad
jl
and
sbb
movsb
das
cmc
add
pop
jg
cmpsl
and
jae
imul
cmp
ljmp
sahf
sub
sub
stc
outsl
cmp
jns
outsl
out
fsubrs
sub
mov
adc
mov
push
lods
xchg
push
inc
cmpsb
imul
add
pushf
jle
repnz
loopne
cmc
js
movsl
inc
mov
stc
bound
jmp
pop
xor
sub
sbb
mov
and
add
adc
mov
ljmp
lock
push
jns
and
sub
insl
dec
dec
mov
sahf
mov
lcall
sub
xor
or
xor
gs
mov
pop
scas
xchg
and
pushf
repz
xor
decl
es
dec
mov
sbb
ds
ds
mov
andl
ror
push
sbb
enter
adc
mov
jl
cwtl
push
and
sbb
test
jecxz
inc
pushf
cmc
xor
call
cmp
fs
mov
popa
insl
add
mov
lret
sahf
lods
lods
inc
insb
dec
and
cmp
mov
icebp
adc
das
aad
test
out
and
fchs
sbb
push
jmp
and
xorl
inc
in
sbb
fdivr
call
xchg
dec
add
scas
leave
dec
pusha
add
inc
cli
push
add
mov
imul
jae
je
js
repz
mov
arpl
mov
call
call
pushf
add
imul
mov
jmp
call
mov
push
movsb
clc
shrb
pop
int3
mov
push
aas
sub
fdivl
adc
adc
arpl
dec
mov
hlt
cmp
pop
cmp
hlt
movsl
out
rcrl
loop
stos
xchg
icebp
jns
dec
stos
xchg
xor
scas
sbb
test
jmp
jmp
sub
jge
add
push
push
mov
sub
jg
rcrb
and
jae
xor
lret
adc
stos
jl
popa
or
aaa
incb
out
sbb
push
sbbb
push
sbb
mov
ljmp
outsb
bound
adc
lods
ljmp
andl
stc
mov
cltd
enter
jmp
xchg
repz
sarl
in
or
call
cmpsb
repnz
push
push
outsl
aaa
fcoms
vpcmpeqd
test
sub
daa
xor
incl
out
mov
and
cli
in
loop
mov
mov
fmuls
shrb
aaa
jae
mov
mov
scas
mov
jnp
rolb
outsb
xor
cmp
gs
and
xchg
mov
xor
xor
sbb
repz
fsts
push
sar
mov
or
ret
dec
sbb
lock
loopne
std
aas
jo,pt
xor
jl
mul
das
jl
call
fisttpll
bound
cmp
sbbb
push
cmpb
loopne
lahf
jb
out
push
jmp
daa
xor
call
pop
jmp
cmpsl
enter
ds
fisttpll
jle
movsl
mov
sub
ss
jmp
mov
pop
leave
or
icebp
sbb
data16
cmp
repz
jno
lock
mov
jp
jl
mov
pushf
jnp
pushf
push
dec
stc
das
stos
fnstenv
in
cmp
push
lcall
jb
int
mov
mov
pop
leave
inc
icebp
jmp
ret
jno
push
cmp
cld
inc
int
incl
mov
adc
jg
das
out
or
cmp
mov
movsb
lret
jmp
fsubrl
test
mov
mov
xlat
test
jg
daa
xor
push
xor
pop
jo
imul
loop
idiv
xchg
cli
jmp
push
fdivrs
add
in
sub
lods
outsl
push
or
pop
mov
cmp
mov
rcrl
pop
int3
mov
stos
scas
gs
mov
mov
fimuls
sbb
mov
lods
mov
loope
adc
clc
es
push
scas
pop
sub
or
push
sbb
push
jecxz
xchg
fbstp
push
push
fdivp
xchg
sahf
out
enter
sarb
icebp
call
mov
adc
push
gs
xchg
add
insb
mov
cltd
add
cmpsb
sbb
roll
mov
xlat
shrd
ss
shll
fidivs
mov
mov
xchg
mov
sti
les
sti
jcxz
jmp
mov
pushl
jo
jbe
dec
or
cmp
fucom
jg
popl
cmp
sti
or
sti
lods
mov
rcrb
loop
push
imul
push
mov
jg
mov
sbb
aaa
mov
lret
bound
popa
pop
push
fwait
cmp
js
fwait
out
xor
popf
cltd
fistpll
mov
mov
sbb
aaa
cli
lcall
call
pop
sbb
scas
ret
and
cwtl
insb
mov
cmp
sub
adc
xchg
sub
outsl
cwtl
adc
jle
lods
pop
pusha
cmp
ss
lcall
or
xor
pop
inc
out
jmp
out
ret
push
add
call
mov
arpl
ss
in
test
loopne
aas
stos
in
and
jmp
jg
pushl
lds
cmc
jne
xor
xchg
cmp
je
sub
pop
fistps
push
adc
decl
pop
iret
mov
dec
cmp
sub
lcall
cmp
repnz
sub
and
mov
aaa
repz
call
call
jo
jnp
addl
pushl
daa
jbe
xchg
inc
sbb
dec
push
cmp
mov
shufps
insl
xchg
sbb
cmpsl
mov
sahf
mov
std
mov
icebp
popf
shlb
and
movsb
sti
xchg
test
inc
fwait
and
xor
sbb
jecxz
dec
mov
jbe
pop
mov
and
test
xlat
pushw
scas
push
jp
mov
scas
test
incl
es
in
dec
push
ja
inc
ret
mov
inc
mov
push
test
and
clc
lcall
mov
push
cmp
mov
add
jg
lret
add
adc
or
lret
or
xor
std
ljmp
jge
sbbb
sub
adcl
bound
cld
sbb
sbb
in
mov
scas
movsb
repnz
fimull
lcall
aas
cs
sub
fadd
mov
adc
fnstcw
inc
in
lea
incl
jecxz
add
pop
xlat
xchg
sub
inc
leave
outsb
or
and
mov
jmp
shll
inc
push
and
inc
clc
insl
xchg
xchg
imul
adc
xor
sti
fnstsw
sbb
sub
and
xchg
cmp
mov
inc
mov
mov
add
lret
test
decl
popf
xor
std
call
add
cmp
jb
lock
call
daa
and
in
dec
jp
je
sbb
out
jb
fistpl
femms
out
xchg
mov
or
pushl
sbb
xchg
cmpb
dec
sbb
sahf
sbbl
mov
dec
popf
sub
add
jae
xor
xchg
ror
pop
jo
into
hlt
outsl
cmc
mov
mov
cmc
mov
test
loopne
bnd
loopne
ljmp
mov
cmc
sub
jb
jl
out
vucomiss
jo
push
call
mov
inc
mov
test
jno
decl
cltd
xchg
adc
and
sbb
cmp
pop
aas
in
dec
cltd
scas
dec
add
jmp
popa
sub
mov
push
mov
inc
pop
clc
mov
stos
mov
or
popf
outsb
in
jne
mov
mov
jmp
jns
bound
xlat
das
aas
lds
call
ljmp
out
inc
mov
jnp
mov
mov
lock
hlt
decl
xchg
fnstcw
test
loope
aas
std
jge
inc
das
or
mov
xor
inc
dec
dec
jge
mov
jne
aas
pop
paddq
pop
or
or
outsl
loopne
call
into
push
push
ss
jns
cmpl
or
dec
pop
mov
je
test
xchg
jmp
sarb
jo
cwtl
xchg
cli
cmp
jae
pop
lods
mov
lods
jl
aaa
lret
mov
test
call
push
xor
sub
int
sti
sbb
xchg
inc
dec
sti
xor
cmp
scas
cld
hlt
call
push
xor
dec
jne
push
mov
cld
xor
das
inc
ljmp
ljmp
pop
xchg
sbb
es
mov
sub
pop
imul
jge
jnp
mov
sahf
mov
sbb
xchg
pushl
ljmp
push
cli
lret
mov
or
gs
add
call
mov
mov
sbb
pop
jne
shlb
jae
sbb
fsincos
mov
decb
or
sub
loopne
mov
mov
cmp
sub
xchg
in
jg
pop
add
jo
push
jae
dec
jb
test
out
adcb
lcall
ds
outsl
es
outsl
bound
sbb
jg
lods
fs
xor
lret
inc
add
movsb
mov
decl
mov
sar
clc
jmp
push
and
inc
ss
sbb
fsubp
jb
xchg
jg
das
add
mov
ret
pop
cmc
mov
mov
pop
dec
pop
lea
jg
mov
dec
stc
cmp
incb
jecxz
scas
xchg
std
lcall
incl
insb
mov
fs
jmp
mov
fbld
jns
cmpsb
mov
dec
fisubl
mov
fadds
call
outsb
adc
notb
call
jmp
fcom
or
xchg
push
shrb
or
call
fisttps
mov
or
push
cli
aad
ljmp
std
shlb
shr
mov
mov
xor
dec
decl
cmc
js
out
pandn
cmp
aaa
in
xor
out
push
mov
mov
sbb
dec
jl
lahf
adc
test
mov
adc
push
lock
cld
or
ss
scas
fs
insw
repnz
ljmp
shrl
or
out
imul
dec
push
cmp
imul
incl
add
mov
dec
jnp
mov
push
pop
dec
adc
call
cli
aas
fsubrs
jne
scas
into
mov
imul
push
dec
pop
inc
pusha
fs
jg
incl
int3
push
int
xor
inc
ficoml
ds
cmp
jmp
push
lret
lcall
pusha
mov
push
add
cwtl
sub
xor
outsl
or
sbb
in
xchg
jg
call
cmpsb
iret
test
lock
jecxz
mov
data16
shrl
jg
and
insl
xchg
fmuls
dec
stos
fiadds
dec
mov
cli
xor
ljmp
xchg
xor
leave
gs
and
or
imul
ljmp
lds
pop
mov
ljmp
adc
jg
jne
mov
dec
in
lock
push
sub
ss
test
ret
inc
call
inc
fcmove
push
loope
cmc
fadd
out
mov
out
jg
movsl
or
int3
stc
xor
fimull
jg
ljmp
mov
sbb
fcmovbe
ja
xor
test
lcall
inc
or
shl
lock
mov
punpckhwd
sub
fnstsw
lahf
cmp
stos
push
xor
fsin
imul
lret
sub
add
mov
les
pop
mov
aad
push
sub
and
std
jg
jnp
idivb
int3
inc
xchg
dec
imul
xchg
clc
sbb
mov
das
dec
push
sbb
mov
jecxz
xchg
gs
iret
mov
iret
scas
mov
aas
jle
pushl
fwait
pop
sbb
and
std
pop
sub
stos
sti
xchg
rclb
cltd
pop
jmp
pop
jmp
mov
xchg
pop
push
lds
loope
fnstsw
decl
xchg
push
loop
mov
cmp
outsb
aad
inc
adc
imul
lcall
inc
roll
into
inc
icebp
nop
adc
mov
hlt
cmpsl
loopne
nop
lds
sub
rolb
xchg
lahf
cwtl
inc
mov
mov
sub
pop
sub
cmpsb
loop
sahf
jno
mov
cmpsb
inc
jnp
inc
jg
lcall
lcall
dec
xchg
cmpsl
add
cmp
sbb
test
and
ja
push
mov
icebp
and
in
leave
jmp
hlt
out
inc
jg
and
cmp
mov
lock
pop
xor
incl
pop
pop
aad
lcall
aas
xor
or
add
add
repnz
clc
scas
decl
xor
fmuls
and
lcall
clc
sbb
fucomip
jmp
jecxz
ljmp
mov
inc
in
push
gs
aaa
decb
jmp
sahf
or
fildl
les
addr16
jb
lock
pop
mov
sub
pushl
mov
rcrb
js
movsb
stc
out
cmp
arpl
cmp
jmp
ficompl
pushf
aaa
lods
test
pop
cli
in
xor
loopne
inc
jecxz
sti
add
xchg
mov
pop
push
out
mov
pop
lcall
push
cltd
stos
mov
adc
stos
mov
cmp
pop
sbb
shl
jg
call
insl
aas
pavgw
sbb
cwtl
add
into
leave
dec
mov
std
ljmp
imul
shlb
push
lds
xor
inc
call
lock
sbb
inc
push
orb
push
aas
cmc
jb
sub
shlb
ljmp
pop
mov
into
dec
jmp
es
fs
arpl
enter
rolb
in
push
testb
xchg
push
inc
repz
mov
pop
mov
out
rcl
hlt
lret
pop
test
test
mov
and
movsb
leave
stos
dec
mov
mov
xchg
lock
jmp
out
mov
add
mov
jge
or
jmp
adc
mov
sub
iret
fstpt
pop
hlt
add
lret
sbb
inc
or
scas
push
cmpsb
inc
push
lea
fs
clc
inc
shlb
fs
mov
add
or
cli
sub
cmp
xchg
mov
inc
movsb
movsl
mov
pop
fisttpll
sub
mov
xlat
inc
sbb
jne
xor
pop
fcomps
mov
cmpsl
lret
push
int
lcall
adc
sbb
out
rorb
addr16
jns
jge
aaa
and
ja
ficoml
hlt
add
insl
roll
stos
jmp
test
repz
fpatan
cmc
push
inc
aaa
call
cltd
fcoml
nop
ja
push
stos
test
and
sti
mov
or
xor
shrb
sbb
or
mov
into
push
loopne
and
movsl
cmp
and
aaa
mov
lcall
in
imul
push
adc
fdivrs
push
jb
push
sar
jns
cmp
cmp
mov
mov
inc
pop
scas
push
fs
pushl
jmp
push
leave
xor
push
push
or
lcall
movsl
hlt
insl
out
jge
lahf
movsl
jg
mov
cmpps
push
jno
stos
jne
dec
es
dec
push
ret
out
push
cwtl
push
xor
movb
jmp
jmp
pop
xchg
stc
insl
lea
sub
pop
cmp
xchg
in
jg
lea
pop
cmp
push
mov
insb
dec
test
sub
fisttps
fsubl
and
insl
pop
push
dec
lahf
insl
fsubl
jg
inc
mov
cmp
stos
inc
aas
mov
les
decl
mov
jge
pop
lcall
aaa
and
into
mov
push
clc
outsl
hlt
push
rol
jbe
dec
rorb
push
fstpt
pop
cmp
shl
out
in
mov
imul
add
push
jmp
mov
gs
in
lret
mov
subl
out
inc
jecxz
ljmp
fists
add
das
sbb
pop
fst
rcrb
mov
fstp
cs
push
aas
fnstenv
jp
push
enter
aaa
inc
jbe
sbb
or
mov
aas
inc
sbb
frstor
cmp
fists
mov
push
lds
inc
mov
mov
jmp
jmp
xchg
ljmp
cli
mov
gs
stos
mov
pop
imul
outsb
lock
adc
sbb
cmp
in
es
inc
inc
dec
pushl
test
sbb
repnz
fistpll
out
lea
js
cmpsl
stos
clc
out
inc
call
mov
pusha
pop
sbb
inc
push
cwtl
fdiv
andb
mov
loopne
insl
filds
insl
push
fisubs
scas
inc
lcall
mov
mov
in
pop
dec
cld
jne
push
mov
jmp
shl
add
ss
insb
mov
and
sub
cli
xor
sbb
xchg
mov
in
incl
or
sbb
cmp
es
push
jle
jno
or
xchg
push
and
incl
dec
dec
jge
mov
cmp
clc
xor
push
pop
sbb
je
push
shr
ljmp
cmp
xor
ja
mov
mov
imul
inc
decl
pop
sbb
dec
pop
xchg
scas
and
jle
fiaddl
cld
inc
mov
mov
sub
int
and
lcall
out
jb
xchg
add
aaa
push
pop
dec
add
fstpl
push
fsubp
mov
cmp
fistpl
pop
loop
dec
sub
cwtl
push
clc
push
fmuls
clc
mov
jmp
xor
ja
xchg
inc
dec
inc
adc
add
enter
jmp
adc
repnz
lods
incl
sub
idivb
mov
xchg
push
mov
add
push
mov
mov
movsb
pop
loop
and
cmp
ljmp
out
leave
pop
data16
sub
add
rcrl
hlt
cld
pop
cli
jg
arpl
mov
enter
pop
cmp
es
cmpsb
jb
lcall
repz
cs
inc
arpl
aas
sbb
lret
fldenv
into
mov
pop
xchg
and
mov
pushl
out
divl
push
cmp
add
lret
cli
arpl
popa
fcmovbe
xchg
popf
sbb
repnz
repz
lcall
cmp
sbb
lea
jg
incl
ds
bound
fstps
test
jo
hlt
sbb
jmp
js
mov
mov
sbb
stc
jecxz
mov
sahf
shr
push
or
ud0
adcl
push
sub
dec
int3
in
mov
call
fidivs
inc
add
cmpsb
or
xchg
jns
je
push
add
aaa
xor
decl
mov
out
jg
cmc
testb
aam
or
sar
pushl
dec
cmp
gs
ret
mov
push
xlat
call
jmp
adc
sbb
pop
mov
dec
add
dec
xor
lcall
mov
lcall
andb
mov
icebp
push
cmc
push
sub
out
and
lret
xor
sarl
pushl
outsl
data16
in
stc
fiaddl
xor
inc
sub
incl
scas
popf
jg
repnz
orb
xor
jecxz,pn
leave
inc
jle
imul
push
xchg
in
pop
mov
insb
mov
fs
mov
jb
inc
pop
bound
or
pop
out
popf
mov
pop
sarb
clc
push
mov
lock
mov
out
sub
jbe
cmp
clc
ret
jno
shlb
andb
rolb
shrd
pop
rcl
fidivl
loop
adc
add
push
xor
push
or
mov
cmp
das
icebp
incl
xchg
fsub
jl
shlb
and
ljmpw
pop
jle
push
lcall
mov
inc
clc
inc
lods
inc
aam
sub
test
pop
mov
mov
outsl
sub
adc
mov
lret
jl
cld
fwait
mov
call
test
lock
jp
and
or
xor
outsb
ljmp
outsl
lret
pushf
out
dec
lea
popa
push
mov
xchg
pop
std
mov
cmc
mov
mov
pushl
loopne
cld
cmpsl
faddp
push
mov
push
fisubrl
bound
mov
cmp
jp
push
add
sub
shrl
incl
cmpb
jmp
mov
lret
iret
sbb
call
mov
in
mov
mov
mov
mov
fucomip
popa
mov
or
mov
subb
mov
test
dec
xchg
jne
insl
mov
pop
jne
mov
mov
or
outsb
mov
lret
incl
daa
mov
dec
arpl
xchg
push
int3
divb
push
sub
int3
test
or
xchg
negb
sbb
loop
lds
pusha
jns
dec
out
sub
in
push
into
fstp
fsubrl
mov
cmpsb
mov
ret
add
out
jl
cmpsb
dec
adc
xchg
fucomip
jo
pusha
push
daa
push
mov
sbb
mov
and
add
das
hlt
mov
pusha
mov
mov
stc
lea
clc
or
cmp
outsb
addb
test
incl
stos
imul
das
aaa
scas
ds
and
mov
aaa
cli
jg
inc
loop
push
stc
imul
xor
xor
inc
addr16
das
cmc
jnp
jp
ss
movsl
lea
lods
dec
fcmovb
or
idiv
pushl
sbb
test
lahf
ja
fmuls
popa
and
icebp
sahf
mov
data16
incl
push
inc
pop
fidivl
jl
mov
mov
scas
das
lahf
mov
incl
mov
fidivrl
mov
adc
lea
lds
incl
out
add
xor
int3
sub
mov
inc
call
cmp
mov
sub
shll
icebp
fcoms
shlb
push
das
add
inc
or
lods
popf
push
adc
cmpsl
ss
and
cli
hlt
mov
add
test
dec
bound
cmp
sub
jae
outsb
push
fwait
pop
pop
lahf
mov
push
bswap
mov
jg
rol
mov
cmp
divb
or
mov
pop
sar
inc
push
stos
push
jne
push
cld
adc
xor
jb
or
cmpsb
cmp
outsb
std
clc
enter
insl
cs
jae
cmp
or
bound
ret
jle
cli
je
mov
aam
xchg
jae
scas
idivb
mov
cmpsl
in
loope
hlt
call
mov
inc
jne
cs
ds
add
mov
sahf
div
clc
add
pop
std
and
pop
sahf
sti
movl
push
outsl
hlt
pushl
adc
mov
push
and
xchg
das
mov
dec
inc
stos
jmp
imul
repnz
pushf
in
or
xchg
iret
pop
inc
push
xor
mov
pop
cli
pop
scas
mov
pop
loope
mov
pop
add
test
cmpsb
xchg
sahf
pop
mov
test
inc
cmp
ljmp
stos
hlt
hlt
lods
das
clc
lcall
xor
push
jnp
or
mov
icebp
cmovl
and
push
lcall
scas
inc
inc
or
pop
fwait
push
arpl
lcall
cmpsl
lods
pop
fsubs
mov
int3
pop
std
outsl
clc
fbld
loop
aad
dec
mov
jg
test
dec
mov
mov
adcl
scas
inc
mov
adc
repnz
xlat
mov
pop
xor
sar
lcall
aam
mov
in
fcomps
dec
mov
int3
cmp
pop
into
push
les
int3
add
ljmp
xchg
stc
jecxz
sub
test
mov
sarb
or
pop
mov
mov
and
mov
call
stos
hlt
mov
inc
and
les
xorb
dec
cmp
in
bound
pushf
cmp
mov
add
mov
sbbb
outsl
icebp
call
mov
sbb
mov
adc
adc
mov
dec
mov
xchg
push
jb
sub
lcall
mov
fistpll
fnstcw
xchg
pop
clc
pushl
call
stc
xor
mov
mov
das
cld
incl
inc
push
mov
loop
and
sahf
imul
push
mov
xor
mov
dec
push
inc
xchg
lahf
cmpsb
mov
add
sub
cwtl
xchg
movsb
sahf
xchg
int3
mov
pusha
mov
loopne
pop
ja
sbb
mov
jmp
inc
nop
ret
imul
mov
cmp
jg
xchg
lods
js
insl
arpl
jl
adc
jmp
push
cld
push
xchg
dec
cmp
aaa
or
sahf
sub
fdivrp
push
das
sub
loopne
outsl
sti
pushf
fisubrl
sbb
cmp
addr16
std
ficompl
sbb
ds
movsb
or
push
mov
faddl
aaa
cmp
push
cmp
pusha
push
and
lahf
push
icebp
pop
cwtl
adc
cmpsl
jg
jge
jp
or
sbbl
rolb
lret
fmul
inc
add
inc
decl
xchg
test
and
cmp
xchg
test
clc
roll
add
out
and
and
clc
dec
cli
ficompl
xchg
fmul
ret
pop
clc
lcall
mov
pop
loopne
fcompl
mov
and
iret
cltd
mov
cmp
fucomip
pushl
jb
call
lock
leave
jo
test
lret
mov
jg
loopne
fdivrs
sub
lcall
popf
ss
or
ljmp
iret
and
xchg
jecxz
jl
aad
das
adc
aam
imul
pop
jns
ret
jns
std
pushf
mov
inc
inc
mov
cli
sahf
outsb
add
loop
call
jl
add
sub
in
xchg
aad
and
ja
popf
jle
pop
ljmp
ss
push
pushf
dec
test
jnp
stc
ja
mov
loop
decl
cld
mov
xchg
stc
jl
jp
int
mov
and
mov
loope
movsl
das
or
pop
cli
incl
cmp
in
add
in
pop
mov
cs
test
push
sbb
jge
lods
push
mov
mov
cmpsl
dec
fildll
mov
cmp
mov
jp
cmp
xchg
jge
cld
hlt
cwtl
or
lods
xchg
add
mov
decl
cwtl
dec
inc
mov
fisttpl
xor
pop
lea
dec
pop
call
adcb
pushf
add
inc
lea
test
nop
mov
call
dec
in
gs
lods
enter
adc
mov
imul
xor
jne
pop
shrl
sbb
call
jecxz
push
jb
sbb
push
sahf
ja
pop
pop
dec
push
popa
lds
inc
cwtl
in
lret
call
shrb
mov
sbb
scas
adc
mov
sub
fisubrl
mov
mov
dec
movsb
std
enter
popa
outsl
adc
icebp
jne
enter
push
lods
hlt
lahf
inc
call
mov
bound
sbb
fwait
test
pop
xchg
xchg
ss
pusha
xor
jmp
jmp
arpl
ds
lahf
insb
dec
and
push
ja
aas
jl
ljmp
idivl
jae
xchg
shl
add
aad
cmc
jle
pop
loopne
jmp
push
jne
fldenv
pop
cmp
mov
jmp
sub
popf
jne
loopne
adc
call
iret
adc
push
in
ret
sub
jle
sub
aad
decl
ljmp
fstp
push
lret
mov
call
std
pop
dec
adc
push
insl
pushf
test
fcmovbe
sub
push
sub
mov
outsb
push
rcr
aas
push
pop
iret
dec
lock
test
mov
mov
jbe
ret
fs
push
push
mov
lcall
inc
dec
arpl
mov
enter
lds
push
cwtl
cmp
orl
push
and
nop
cmpsb
out
jae
add
lods
pop
fisubrl
cmpsb
mov
ljmp
cli
cli
int3
lret
push
jg
ret
cs
mov
stos
sar
adc
loop
dec
pop
xchg
popa
jb
xchg
mov
adc
incl
mov
mov
push
insb
xlat
lock
jp
pop
clc
jmp
jmp
stos
fstpt
test
pop
mov
pop
ret
scas
movaps
xchg
std
ljmp
mov
sbb
sub
jge
dec
jo
pop
push
and
je
inc
rep
jg
pop
xor
xchg
popa
mov
call
xchg
loop
cltd
xchg
aam
insl
xor
jb
sar
push
pop
sub
rcll
fists
mov
pusha
jnp
popa
sub
lea
nopl
int
pop
enter
jne
mov
inc
clc
ljmp
sub
push
inc
adc
sub
fs
and
dec
push
lock
jno
mov
inc
sarl
cmpsw
mov
jle
add
mov
insb
push
mov
mull
push
pop
xor
xor
fmull
jg
addr16
jge
call
decl
xlat
push
adc
insl
les
orb
or
mov
ljmp
out
insl
sbb
and
and
mov
mov
pop
ja
mov
pop
push
jo
dec
lahf
inc
loop
push
test
adc
pop
xor
inc
lock
enter
shll
lahf
sti
loopne
add
ret
outsl
xchg
clc
cmp
movsb
imul
mov
pushl
and
mov
ljmp
xlat
mov
mov
jmp
and
loopne
mull
dec
shlb
and
sbb
js
cmpsb
mov
inc
sti
repnz
lods
jl
dec
adc
sbb
or
stos
jg
pushl
mov
pop
imul
cmpsl
sbb
pop
iret
or
add
leave
jno
fisubrl
stos
push
leave
cmc
aam
dec
filds
pop
and
pop
in
pop
aam
out
or
mov
jbe
ret
das
cld
incl
fstps
or
or
das
je
std
imul
mov
dec
pop
decb
push
mov
daa
sub
int3
int
jne
xchg
mov
cmp
call
cli
movsb
ret
sti
movsl
inc
fs
mov
pop
xor
ljmp
std
cli
adc
cld
cmp
and
xchg
decl
xor
jns
adc
lea
jns
dec
mov
incl
inc
push
jb
sahf
rcrb
sub
sbb
lcall
repnz
push
mov
fdivs
mov
sub
subl
das
push
jge
call
dec
lea
sbb
subl
push
sbb
push
enter
test
inc
pop
cltd
dec
dec
out
and
ret
cmp
out
mov
out
adc
jmp
cmc
ljmp
mov
daa
out
mov
xchg
cmpsb
gs
mov
xchg
cmp
mov
mov
push
shll
imul
dec
imulb
hlt
dec
decl
je
mov
lret
add
sti
cwtl
mov
push
scas
int3
add
mov
xor
or
loop
aas
jle
ret
mov
fildll
dec
pop
pop
aas
lods
xlat
xchg
test
pop
inc
ficomps
iret
mov
jmp
iret
cld
ret
push
or
xchg
test
mov
cwtl
jns
pop
jo
lods
sub
popf
inc
outsl
push
ret
in
imul
out
inc
leave
and
cld
ja
ret
inc
lret
test
js
pop
pop
aam
adc
dec
pop
adc
int
leave
lds
insb
lcall
cli
xchg
lcall
and
sbb
jbe
adc
fdivrp
ror
cmp
insl
insl
insl
xor
push
ss
adc
aaa
clc
push
pop
pop
imull
mov
bound
test
test
mov
mov
les
jmp
pushf
cmpsl
mov
cmp
std
or
test
cld
fimull
xchg
outsb
add
imull
movsl
mov
mov
out
enter
mov
test
jns
push
std
scas
cmp
or
mov
outsl
pop
ja
dec
xchg
add
inc
enter
int3
loop
aas
xchg
mov
cld
incl
cmp
in
in
cmpl
xchg
push
or
cld
pushl
fs
insl
adc
imul
sub
cmp
gs
hlt
adc
pop
je
adc
fwait
fs
add
dec
sub
adc
idiv
cmpsl
pop
sub
xorb
push
test
inc
insb
pop
mov
outsb
movsb
add
fists
enter
das
pop
mov
rorb
dec
decl
or
add
shrb
sbb
cwtl
adc
repz
mov
insl
test
out
mov
sar
mov
xchg
dec
pop
sti
subb
loopne
cmp
push
add
incl
ja
jns
rclb
mov
ret
sbb
je
imul
andl
pop
cmp
out
outsb
sti
cmp
fisubs
pop
mov
jp
fstpl
pusha
and
pop
and
daa
push
lds
imul
sbb
out
dec
out
mov
fildl
xchg
jl
shrb
sbb
mov
adc
dec
xchg
incl
sbb
cmp
shr
sub
and
mov
insb
mov
incl
fbld
lahf
fs
lock
adc
testb
jne
pop
loopne
popf
gs
les
lret
loopne
jmp
and
leave
xchg
out
inc
sub
shlb
stos
adc
into
ljmp
cmp
push
cmpl
mov
jl
out
mov
add
push
lret
out
cmp
sbb
nop
outsb
jb
into
xorb
push
pop
in
iret
hlt
or
call
jmp
add
pop
push
xor
mov
and
jecxz
jmp
cltd
mov
mov
fstps
stc
cmp
pushl
gs
inc
xchg
mov
scas
incl
cmp
aas
mov
sub
roll
pop
fwait
cmp
lret
sbb
mov
std
fsub
add
stos
inc
xchg
shrd
jmp
fidivrl
jno
mov
pushf
cmp
cld
cli
jmp
push
sbb
dec
mov
lods
xor
dec
and
testl
cmpsl
inc
or
lcall
jge
mov
movsl
fwait
lret
lcall
ds
jnp
icebp
sub
test
add
push
push
sbb
movsl
insb
popa
xor
fmull
daa
fucomip
decl
push
dec
ficoms
in
in
stos
pop
lds
or
jg
negb
xor
mov
pushl
ror
sbb
je
xchg
dec
pop
xchg
lods
ljmp
in
xchg
and
sub
arpl
outsl
jne
push
aas
mov
mov
add
dec
push
and
lret
add
push
mov
scas
out
mov
mov
jmp
lcall
cld
call
mov
cmp
mov
or
jno
jp
imul
test
pushl
xorb
xchg
cmp
jg
cwtl
ud0
lcall
sbb
enter
cmc
ret
ljmp
leave
cs
cltd
icebp
pop
lods
xchg
test
ljmp
mov
push
sarl
filds
and
insl
inc
fstpt
lcall
sbb
sbb
push
rorb
stos
sahf
movsl
repz
aad
repnz
addr16
test
pop
notl
jmp
ret
xor
daa
inc
mov
mov
mov
push
or
rclb
jmp
xchg
nop
insl
ds
adc
mov
in
sbbl
pushl
sahf
std
rcr
sub
dec
push
push
sbb
arpl
and
mov
fsubrp
jb
mov
xchg
out
inc
sub
mov
cmp
or
incl
in
insb
push
or
lods
pop
cmp
dec
xchg
cmpl
scas
lret
sbb
xor
aaa
and
xchg
sti
mov
cld
outsb
loope
jle
inc
fs
imul
jne
jge
mov
je
adc
pop
mov
test
lea
sbb
ljmp
clc
jp
xchg
in
addr16
and
stos
xchg
decl
pusha
push
sub
lds
fidivl
scas
push
dec
add
scas
mov
jl
repz
lcall
ljmp
lcall
out
cmp
cld
leave
in
loopne
dec
sub
movsb
hlt
decl
aam
outsb
in
cmp
jno
andb
dec
adc
das
mov
pop
pop
xchg
add
xchg
clc
into
jns
and
orb
mov
mov
imul
inc
mov
mov
leave
mov
mov
popa
push
push
gs
mov
leave
shll
and
pop
pop
decl
lcall
je
icebp
je
mov
mov
push
test
mov
imul
test
push
lahf
sub
lahf
mov
mov
movsb
mov
insb
mov
pop
loopne
fs
mov
adc
loope
inc
ljmp
jl
push
xor
cmp
cmp
ret
xchg
ja
movsl
aam
mov
mov
pushl
sahf
mov
call
mov
lahf
out
imul
add
xchg
mov
out
ret
sar
push
lcall
sub
scas
fistl
testl
aas
push
scas
dec
sub
sbb
dec
daa
inc
push
in
add
inc
lods
xchg
rcll
loope
nop
or
dec
pop
mov
and
or
icebp
sarb
test
rcrb
add
ljmp
mov
sbb
daa
dec
push
sbb
repnz
sbb
mov
imul
loopne
mov
cld
std
dec
ja
add
lcall
jne
btc
xchg
popa
inc
call
sbb
orb
pop
and
dec
dec
mov
incl
incl
andb
out
insb
xor
lock
call
call
push
inc
ljmp
ret
and
mov
sub
int3
movsl
mov
in
shrb
outsb
call
arpl
mov
repz
mov
mov
jecxz
inc
mov
xor
scas
imul
stos
cmp
sti
jle
mov
pop
mov
inc
outsl
pop
insb
sbb
mov
jo
mov
clc
rcl
test
push
faddl
pop
xor
push
shll
cmc
jmp
scas
adc
add
mov
dec
mov
int
mov
es
and
aaa
cli
jmp
cmc
mov
fists
jo
aas
mov
cmp
sbb
call
pop
inc
ret
imul
fsubs
add
xchg
ljmp
lock
nop
imul
pop
cmp
daa
ds
fnstenv
cli
ljmp
mov
xchg
mov
xchg
jmp
fistpll
inc
push
mov
and
xor
dec
mov
ljmp
mov
push
lods
xchg
mov
movb
ss
mov
cli
call
cmp
js
sti
fwait
sub
dec
leave
lods
fucom
pop
cld
add
cs
fstpl
sarl
fildll
inc
stos
mov
cmp
das
pop
cld
pop
mov
mov
imul
jnp
push
imul
jmp
xchg
mov
arpl
mov
insl
pop
insb
cli
xor
into
cs
xchg
adc
outsl
mov
dec
out
sub
lcall
loope
pushl
mov
add
movsb
xchg
xor
sahf
cmpsb
sbb
test
cmp
mov
pushl
sbb
mov
xchg
or
adc
jp
scas
sub
mov
dec
std
fsubrl
mov
int3
enter
stos
or
mov
xchg
jns
inc
cmp
inc
or
test
dec
ds
stc
daa
mov
push
es
std
sarl
ret
mov
pop
inc
adcl
arpl
adc
dec
jne
push
mov
push
sbb
incl
xchg
sbb
dec
fsts
xchg
push
fnstcw
std
adc
filds
cli
std
leave
xlat
xor
xor
pop
scas
xor
mov
decl
call
and
sarl
sbb
cmpsl
lea
ljmp
sbb
push
repz
push
or
mov
sub
gs
pop
jg
in
arpl
mov
je
cmp
call
pop
stc
dec
xor
inc
mov
cwtl
stos
cmp
pushf
jl
xchg
jg
jmp
orb
ss
leave
test
lcall
push
jge
ljmp
popa
add
jae
shlb
mov
and
ja
fcoml
cmpsl
push
mov
pop
fcomps
negb
sbbb
and
mov
jbe
push
insl
ss
fdivp
inc
fisubrl
push
jg
sbb
push
flds
jo
jns
add
and
les
outsl
lcall
xchg
jge
popa
in
inc
and
add
rolb
mov
pop
jl
cmp
test
ljmp
stc
loop
jnp
fiaddl
imul
push
adc
dec
push
xor
pushl
sbb
out
push
jae
inc
in
or
and
mov
gs
xchg
ss
repz
xor
pop
cld
fisttps
je
and
std
repnz
hlt
xchg
inc
xor
ljmp
aad
aam
cli
lds
mov
dec
cld
pop
xor
sub
mov
cmc
hlt
mov
and
inc
sbb
mov
out
push
fmuls
std
push
mov
mov
pop
and
adc
mov
addr16
out
fsubrs
mov
in
outsb
loope
mov
dec
mov
hlt
out
cltd
sub
inc
int
outsl
icebp
ljmp
xlat
jo
iret
xchg
or
lds
push
mov
push
cwtl
outsl
lods
incb
scas
xor
adc
into
sbbb
incl
sahf
cmpb
xchg
icebp
xchg
jne
xorb
js
xor
cmp
fsubrp
daa
pop
pop
jns
mov
mov
add
ja
jg
ljmp
xchg
stos
loopne
int3
ret
sub
dec
fsts
insb
les
dec
cld
aaa
inc
dec
and
notl
mov
lcall
cwtl
outsb
fwait
mov
xchg
in
and
test
push
insl
inc
pusha
hlt
xlat
ss
inc
push
sahf
insl
pushf
push
adc
and
mov
sbb
lock
push
mov
push
in
push
adc
cmp
dec
lcall
int3
fistpll
pop
adc
jns
sub
cmpsl
arpl
pop
loopne
outsl
xor
les
orl
std
and
ljmp
lret
ja
pusha
mov
adc
jbe
sbb
adc
ret
test
dec
ljmp
test
push
imul
sbb
es
jg
jmp
lock
push
lcall
sub
scas
data16
stc
das
cmpb
ret
mov
push
scas
iret
ficomps
cmp
je
int
mov
sbb
mov
aad
pushf
dec
push
outsl
movsl
cltd
data16
dec
aam
cmp
lods
in
jp
loope
imul
jecxz
add
cmc
call
push
inc
inc
adc
or
into
es
mov
mov
add
ljmp
mov
push
cwtl
xor
add
ficompl
call
mov
ja
lods
inc
stos
cs
leave
pusha
or
icebp
nop
jp
outsl
enter
cmp
push
mov
inc
dec
mov
push
in
fcomp
cmc
sbb
addb
dec
icebp
mov
ljmp
jne
arpl
shrb
xor
call
idiv
jmp
cmp
dec
ss
call
mov
in
aad
mov
dec
dec
inc
mov
call
sahf
loope
inc
test
jg
outsb
ds
add
out
ljmp
adc
ret
lret
cli
sbb
jecxz
jmp
test
mov
or
test
sub
pop
loop
dec
stc
in
lcall
jbe
cmpl
loop
sub
call
int3
stos
xchg
mov
test
jle
inc
pop
xchg
imul
sub
in
pop
pop
aaa
pop
mov
pop
call
icebp
lret
dec
mov
lods
scas
es
and
mov
bound
sbb
call
xor
sar
push
jg
lock
loope
flds
push
xchg
nop
xchg
movsb
inc
xchg
lret
jmp
ljmp
jecxz
stos
loopne
xchg
mov
rcll
dec
mov
xchg
daa
xchg
xchg
in
sub
fiaddl
xchg
or
in
mov
mov
push
cmpl
cli
pushf
out
pushl
clc
lcall
xlat
add
loopne
out
pop
push
cmp
lods
push
aaa
lcall
stos
fcos
mov
incl
jns
jmp
sub
dec
adc
ficoms
lret
ss
sti
push
cld
or
int3
inc
jae
push
mov
mov
mov
gs
lods
sub
push
and
pop
insl
push
flds
imul
and
push
push
ja
and
divb
inc
mov
sti
mov
mov
pop
jo
mov
push
xchg
and
imul
or
jae
mov
sbb
dec
movsl
inc
sbb
xor
sbbl
je
popf
je
cmpsl
inc
mov
jg
call
adc
scas
xor
push
inc
push
push
inc
add
and
movsl
or
push
sbb
or
frstor
push
jmp
jle
das
popf
jne
mov
pop
movsl
mov
sbb
out
inc
jne
lcall
jne
in
notl
test
pop
dec
jmp
cld
dec
jecxz
aad
decl
mov
pop
and
sbb
sahf
outsl
bound
pop
jnp
pop
jp
jmp
jo
nop
mov
xlat
jno
dec
mov
adc
mov
incl
std
xchg
push
notrack
and
ret
adc
pop
inc
sbb
incl
ret
mov
test
sub
jae
sub
mul
fucomip
jmp
movsb
push
push
fstl
loopne
repnz
lcall
repnz
js
dec
ret
movb
mov
inc
or
xchg
xchg
inc
arpl
push
mov
lcall
adc
addr16
cmp
push
push
push
push
pusha
mov
in
lea
jbe
and
pop
imul
cmp
fistpl
std
push
sbb
jge
repz
dec
cld
mov
xor
test
fidivs
outsb
pop
fcmovnu
jg
das
hlt
std
dec
mov
sbb
sub
and
add
dec
call
mov
clc
cld
cltd
xchg
insb
inc
imul
in
out
mov
mov
lods
dec
pop
xchg
cmc
mov
call
xchg
add
sub
int
stos
pop
sahf
imul
incl
icebp
push
loopne
mov
mov
inc
mov
xchg
inc
cmpsl
sub
mov
out
sbb
cmpsl
mov
ret
int
mov
mov
in
outsb
push
int
adcl
lea
push
xchg
mov
jmp
arpl
rcrb
loope
movsb
dec
mov
cmc
fcos
test
xchg
lods
out
pop
data16
mov
cmc
sub
andl
mov
jg
jmp
int
adc
stc
jecxz
lock
in
inc
pop
das
cld
pushl
pop
sbb
sub
adc
fiadds
cmp
ja
or
xchg
in
xchg
and
inc
sub
and
pop
movsb
xor
pushl
sbb
jl
push
testb
mull
cmp
aaa
arpl
lcall
dec
push
push
lock
imul
test
mov
outsl
cld
xchg
or
in
sbb
aad
enter
sbb
inc
and
movsb
incb
xor
cmp
or
outsb
mov
xchg
nop
ret
lret
adc
cmpsb
adcl
rol
test
mov
and
aad
inc
push
dec
sub
loop
pushl
push
cmp
xchg
adc
fucomp
xor
int
adc
popa
push
loope
mov
pop
xor
inc
js
xor
shrb
out
or
ljmp
mov
mov
mov
xchg
mov
or
add
sbb
lds
inc
cmpsb
inc
pop
xchg
jg
inc
sbb
xchg
sbb
lods
sbb
sti
das
sahf
or
mov
or
add
mov
dec
jns
sarb
sahf
jg
ljmp
dec
in
jg
push
jg
popa
push
jo
inc
clc
aam
mov
cmpsb
movsb
ja
mov
mov
sahf
xchg
xlat
sub
add
fbld
insl
or
scas
insb
pop
sbb
jne
jnp
xchg
mov
adc
jg
decl
loopne
arpl
jae
les
fs
dec
mov
pop
pop
jle
insb
xlat
fstpt
imul
notb
mov
insb
mov
inc
imul
adc
sbb
cbtw
xchg
push
lods
enter
push
out
mov
pop
jne
incl
mov
std
add
xor
mov
and
cltd
lods
jns
call
ljmp
sub
fistl
cwtl
pop
lret
cmpsl
mov
test
in
pop
decl
push
mov
jg
andl
sti
lds
mov
pop
adc
fiadds
sahf
out
mov
sbbb
push
jmp
enter
jecxz
cmpb
add
jecxz
inc
imul
dec
push
or
mov
pop
mov
mov
jmp
outsl
lea
lret
inc
pop
gs
mov
add
clc
sub
push
mov
and
and
ja
negl
decl
loop
dec
clc
bound
imul
xor
in
incl
aad
movb
out
scas
sbb
xchg
mov
loopne
adc
push
call
out
shlb
sbb
jmp
sti
xor
lds
xor
adc
mov
and
inc
pop
mov
mov
adc
stos
imulb
subb
or
and
pushl
cmp
xchg
scas
cmpsb
pop
lock
out
or
xor
xchg
lods
fstps
lds
testl
jg
push
pop
mov
jno
sbb
jmp
insb
push
mov
movsl
xchg
jmp
or
sbb
mov
xchg
inc
into
push
pop
add
lds
decl
fdivrp
push
push
dec
cmpsl
repz
dec
mov
aas
in
and
lret
xor
add
jg
jg
push
mov
cli
mov
test
jp
mov
ret
cld
mov
int
lods
dec
inc
rcl
negl
dec
cld
repz
xor
jl
sub
popa
sahf
movsb
sbb
cmc
cmpsb
daa
mov
ds
lcall
inc
popa
movsl
cmp
mov
push
sbb
xlat
outsb
inc
hlt
call
ret
cmp
scas
cmc
loop
sahf
movsl
pop
popf
aad
xchg
fdivr
mov
jl
jp
add
movsl
jp
lock
mov
push
test
hlt
lcall
stos
fidivrl
mov
sub
lret
mov
icebp
mov
das
std
pop
xor
cmp
mov
sar
mov
cmp
cmp
push
pop
push
mov
pop
dec
into
mov
mov
or
dec
mov
leave
jb
inc
pop
push
jbe
and
scas
sub
push
leave
sub
xchg
mov
mov
inc
push
lds
add
ja
test
aad
js
mov
sub
fbld
mov
mov
mov
mov
cmp
pop
or
lods
push
pop
jae
or
incl
leave
outsb
add
jae
push
stc
add
xor
mov
push
or
xor
add
test
adc
fwait
mov
lcall
push
pop
lods
out
push
loopne
nop
push
andl
inc
pushl
mov
xor
test
jle
imul
bound
insb
aam
pop
cld
call
pop
adc
shl
xor
sbb
test
pop
sbb
xchg
adc
jns
mov
add
jmp
sub
lods
dec
cmp
sbb
scas
out
pop
test
into
jmp
data16
jg
jg
inc
pop
fimuls
xchg
mov
mov
ret
iret
or
fisubl
subb
dec
jbe
add
sub
xchg
in
inc
popf
jmp
je
xlat
loop
pop
cli
loop
jb
int
enter
sarl
or
imul
pop
ds
test
rolb
test
mov
jle
iret
insl
loope
sti
jp
adc
hlt
jecxz
in
into
jle
xchg
adc
sahf
cli
jne
pop
loop
inc
push
push
sub
mov
jle
fisubrs
xchg
decl
std
das
clc
and
in
sbb
orb
mov
xchg
xor
loopne
or
xchg
out
aaa
push
pop
add
repnz
push
jmp
pop
hlt
pushl
pop
inc
aam
push
popa
aas
dec
aas
aam
inc
jbe
sbb
cmpsb
lret
dec
dec
lahf
ror
add
ret
add
push
loopne
jb
push
sub
sti
lds
scas
adc
rcr
xchg
jmp
arpl
or
xchg
loop
loop
or
mov
pop
fldenv
fs
call
xchg
mov
shl
pop
test
dec
and
mov
xchg
push
shll
xorb
cli
pop
sub
das
les
outsl
cwtl
dec
int3
pusha
xor
sbb
incl
cmp
inc
and
and
mov
jmp
add
imul
cwtl
push
lods
xor
decl
js
push
mov
sahf
sbb
xlat
or
lcall
inc
lret
lock
repnz
je
repnz
cltd
sahf
sub
decl
outsl
cmpsb
push
mull
pop
jno
shlb
lods
and
mov
adc
push
and
ljmp
roll
push
jo
sbb
or
addb
lcall
xchg
mov
fisubrs
mov
les
repz
nop
test
cmp
cmc
arpl
seto
jl
aad
and
xor
pop
fdivr
inc
int
mov
lock
cmp
inc
mov
mov
inc
mov
vmaxss
lcall
add
clc
jl
pop
inc
sbb
xchg
and
xor
push
ljmp
xchg
mov
loopne
pop
cmc
or
mov
lods
push
sbb
mov
mov
cmp
sahf
mov
pop
hlt
out
xchg
sarb
int
cwtl
test
fmull
call
daa
and
mov
jp
mov
and
ljmp
dec
imul
testl
ret
shlb
popa
cld
mov
jae
mov
mov
mov
push
rorb
decl
jne
in
addl
jnp
in
stos
xor
sub
mov
data16
out
in
xor
mov
pop
mov
pop
das
cld
fucomip
ja
sbb
test
dec
push
mov
jb
push
clc
shrb
imul
sbb
sahf
je
jno
adc
add
dec
aas
cmp
pushl
clc
shl
fldenv
mov
lcall
jbe
pusha
cmc
iret
sub
adc
incl
stc
hlt
mov
ss
dec
inc
mov
jl
fistps
sbb
rcrl
pusha
pop
inc
repnz
mov
in
dec
sbb
loop
mov
or
mov
pushl
jmp
lret
movsl
sub
jno
rorb
mov
outsb
mov
aaa
sbbb
xchg
xchg
decl
je
xor
mov
dec
mov
push
xor
fsts
jb
in
lods
in
jmp
clc
sbb
in
test
dec
dec
mov
outsl
pushl
adc
aad
outsb
out
imull
mov
arpl
or
ljmp
movsl
lahf
hlt
cmp
iret
mov
jae
pop
lods
in
incl
mov
scas
add
mov
iret
xor
push
adc
push
and
jne
push
into
jbe
lcall
jo
mov
dec
ljmp
std
jne
in
adc
adc
push
sbb
mov
adc
sbb
dec
out
nop
imul
shlb
push
cld
pop
pop
lret
xchg
and
mov
ljmp
call
arpl
add
sarb
sub
out
xchg
mov
xor
cld
es
add
int
xor
mov
movsl
jne
jmp
mov
adc
adc
movsb
push
mov
mov
cld
pop
and
sbb
call
sti
fnsave
and
leave
leave
orw
and
adc
das
cmc
jmp
les
jb
in
cmp
fs
dec
fwait
pop
mov
jns
call
incb
and
pop
stos
and
push
jno
xchg
or
mov
xchg
xor
inc
lods
lahf
fmuls
xor
add
loopne
mov
shlb
shl
mov
cmp
or
shl
fbld
mov
adc
cld
or
pop
or
pop
and
outsb
ret
leave
add
stos
inc
sub
stc
push
mov
out
scas
jmp
jo
out
jg
std
pusha
outsl
add
sub
call
jb
mov
bnd
mov
xor
cld
mov
push
xchg
mov
xchg
pop
inc
jg
je
out
sbb
jl
dec
and
xor
stc
clc
mov
push
imul
cmp
mov
dec
push
sbb
inc
cmp
mov
pushf
mov
js
dec
lcall
fistpll
xchg
mov
ljmp
sbb
negl
ljmp
mov
clc
or
add
pop
mov
xchg
dec
xor
push
test
jg
enter
mov
sahf
push
cmp
mov
cmp
mov
jno
xlat
inc
pop
inc
adc
shl
adc
fnstsw
xchg
cli
scas
xchg
xchg
sub
inc
dec
push
scas
lcall
cmp
cli
pop
xor
ja
test
dec
xor
mov
fwait
daa
add
pop
insb
or
mov
and
shl
mov
call
lret
dec
outsl
inc
mov
dec
adcb
scas
pushl
scas
flds
sub
mov
loopne
push
lock
dec
imul
out
cmp
fsub
pop
cmp
imul
dec
daa
movsl
hlt
movb
or
sub
sbb
sti
in
faddl
icebp
push
pop
push
sti
ljmp
push
scas
pushf
in
push
push
inc
test
mov
repz
cmp
push
out
mov
sub
push
pop
std
jl
mov
mov
xchg
and
mov
add
icebp
and
decl
inc
nop
adc
add
sub
jg
cmpsb
cmc
cs
add
call
lcall
ljmp
mov
enter
dec
dec
xor
shrb
pop
jmp
cli
decl
pushf
jg
xor
cli
ret
imul
inc
sahf
jbe
lock
mov
stos
sti
int
pop
push
out
loope
sub
ljmp
std
stos
es
ret
jge
ja
add
or
sub
adc
movsl
decl
xchg
popa
push
push
pusha
loopne
incb
adc
movsb
repz
add
add
and
les
pop
loop
push
jbe
arpl
sahf
mov
fsubp
repz
mov
test
shrl
sbb
enter
push
mov
fidivl
fcoms
cmp
pop
clc
add
jo
popa
mov
nop
shrb
pushf
imul
sti
gs
cmp
or
pop
test
std
mov
aaa
int
xchg
call
jmp
hlt
xor
enter
cmp
dec
and
mov
inc
cmp
jp
pushl
test
gs
sub
fstpt
pop
call
xchg
or
es
sar
jmp
pop
push
nop
xor
clc
mov
mov
repz
dec
sub
scas
ss
ficoml
inc
sub
inc
push
xchg
sbb
jecxz
dec
pushf
cmp
call
pop
mov
je
dec
fldl
mov
jb
adc
testl
or
call
cmp
xchg
mov
inc
lcall
aad
pop
xchg
pop
int3
call
jecxz
lea
and
roll
cmp
xchg
lock
jg
push
cli
cmp
jp
cmp
jns
fcmove
js
jg
fdivrs
incl
idivb
mov
lcall
dec
cmp
pop
mov
mov
ljmp
sub
mov
lcall
fisubrl
clc
insl
iret
xchg
mov
push
sti
and
pushl
fisttps
jb
xor
std
je
inc
mov
ds
pushl
stos
pop
cs
cmp
and
lods
sub
je
es
lock
mov
enter
int3
or
push
or
decl
popf
xchg
icebp
pop
aam
or
enter
pop
xor
decl
xor
call
fsubs
je
add
scas
decl
pop
arpl
jns
mov
and
test
pop
and
das
icebp
and
xchg
arpl
sbb
movsb
cmp
xchg
imul
mov
or
out
xchg
mov
out
dec
mov
loopne
pop
sti
rcll
scas
and
andl
xchg
inc
pushf
insb
movsb
ljmp
fnstsw
xor
cmp
scas
inc
lea
xor
sbb
adc
sbb
sub
jne
fildll
scas
jp
mov
jae
aad
shlb
add
ret
arpl
incl
lock
xchg
sbb
ljmp
push
loope
movsb
ret
pushl
adc
cmp
ficomps
push
sar
mov
inc
jg
leave
push
inc
push
mov
inc
mov
scas
or
add
dec
or
pop
cmc
call
ret
cmp
mul
xchg
mov
std
ds
xchg
ds
push
mov
jns
int3
xor
das
xor
clc
daa
mov
stos
xchg
xor
xchg
das
pop
ret
lods
lcall
jno
mov
aad
cs
xchg
xchg
fdivl
arpl
xor
or
cmp
push
pop
in
sahf
push
adc
arpl
mov
sub
add
mov
sbb
into
jge
cmp
mov
roll
cli
int3
ja
or
mov
stos
and
cmpsl
rdtsc
inc
ficoml
cmpsb
push
push
stos
fsubrs
mov
loopne
cmc
ljmp
xor
jle
mov
or
dec
arpl
repnz
lcall
cmc
jns
pop
inc
movsl
int
pop
mov
hlt
lods
xor
popa
leave
sbb
fcmovnu
push
lcall
dec
in
loop
and
sbb
or
ja
or
push
jns
sbb
jmp
add
jg
ror
loopne
in
lahf
cmp
ljmp
mov
stc
xchg
pop
in
xorb
ficomps
outsb
xorb
gs
js
push
cmp
sbb
ja
mov
jo
int3
fidivrs
lock
cltd
dec
xchg
mov
decl
adc
cmc
push
enter
sub
cmp
pushl
ficompl
xchg
je
or
jne
adc
ss
cmp
int
divb
loope
incl
xor
mov
rorl
rclb
cmpsl
mov
lret
rcrl
sub
call
push
mov
lret
scas
int
out
repz
jo
out
xchg
out
inc
ljmp
int
or
inc
int3
mov
es
jle
ja
adcb
jg
shr
xorl
add
push
les
lret
push
jno
dec
inc
data16
mov
outsl
data16
xorl
in
jg
pop
mov
sub
sub
add
add
push
mov
repnz
xchg
lea
inc
in
cmp
mov
ljmp
or
repnz
fwait
or
jns
mov
pop
xchg
or
push
fcomip
addr16
jo
das
into
cmpsb
js
xor
mov
or
sub
decl
pushl
test
filds
push
fidivs
or
pop
jmp
call
mov
inc
push
test
rcr
xchg
mov
sub
dec
out
iret
daa
pop
incb
mov
jg
test
lods
adc
adc
mov
in
cmpsb
sub
popf
aam
out
imul
ret
fldcw
cmp
scas
push
jmp
jg
xchg
cltd
dec
dec
push
or
sbb
sub
and
loop
adc
adc
mov
cmp
and
lcall
mov
outsl
in
fcomps
fdivrl
imul
incb
sbb
push
icebp
xor
xchg
lahf
inc
jmp
fwait
test
fucomip
incl
adc
pop
repz
pop
fldt
pop
adc
pop
call
inc
mov
pop
xchg
push
decl
pmovmskb
mov
mov
jo
mov
pop
pop
adc
cli
movsl
dec
popa
popa
xlat
rcrb
jnp
in
dec
mov
icebp
mov
dec
mov
ljmp
cld
xchg
and
mov
xor
fistpl
pop
add
jnp
loopne
sar
xor
or
push
mov
in
or
ret
int
lcall
pusha
and
mov
fwait
push
pop
out
fisttpl
aas
clc
inc
lret
inc
or
cmc
lcall
mov
and
jecxz
mov
imul
and
jp
xchg
gs
lods
or
js
mov
mov
call
push
rcrl
movsl
dec
imul
mov
popa
cmpsl
inc
pop
sub
sbb
into
cwtl
mov
xor
cmp
fldcw
xchg
jge
push
mov
mov
and
mov
incl
imul
and
fcoml
out
out
xchg
jmp
lret
xchg
popf
lret
pop
pop
aaa
cli
incl
aaa
cmc
jb
push
dec
stos
and
testl
cld
mov
pop
jno
pop
cmp
sarb
mov
movsb
cmp
push
jle
dec
bound
push
popa
xor
popa
pop
imul
pop
push
inc
rol
lahf
insb
ret
push
or
or
jl
cmp
pushl
mull
scas
movsl
cwtl
sbb
lods
jo
call
xlat
sub
xchg
incl
mov
and
lcall
xor
sub
adc
pop
xchg
mov
neg
inc
pop
or
sub
aad
imul
call
add
push
push
dec
insl
xchg
cmp
adc
int
aas
adc
sub
popa
xor
sub
lods
push
stos
mov
jno
lds
cltd
mov
jae
das
cld
aaa
cli
mov
inc
std
out
loop
mov
movsl
push
push
xor
jg
decl
push
cltd
or
xor
cld
push
nop
jo
jns
jbe
lods
jmp
jns
test
jl
push
fs
cmp
xchg
call
ljmp
lahf
out
mov
mov
pop
mov
call
xchg
mov
jmp
insl
mov
pop
rcll
cltd
xchg
inc
jns
lock
incl
lahf
push
insl
push
aam
add
add
mov
jne
adc
pop
cmp
ror
xlat
rclb
sar
and
fs
push
mov
xchg
incl
into
lret
push
sbbb
sbb
fnstenv
mov
jmp
sbb
shrb
xor
sub
iret
subps
test
jmp
mov
les
arpl
cmpsb
jmp
push
cmpsb
pop
ret
push
incl
ljmp
add
mov
addl
jne
adc
dec
and
or
pop
in
sub
mov
in
mov
adc
aaa
xor
jmp
jmp
mov
lret
jmp
call
pushl
les
cltd
fcmovne
pop
mov
xor
js
fstps
jmp
inc
into
mov
ret
jns
and
shl
shll
cli
cmp
jmp
xor
sbb
js
mov
jb
lods
das
cmc
aaa
mov
call
and
xor
cmpl
lahf
in
jg
cltd
enter
call
pop
push
dec
push
leave
push
call
mov
ljmp
cs
shrl
stos
mov
mov
pushl
popa
lahf
xchg
movsl
into
std
mov
push
cltd
jg
decl
add
bound
xor
mov
sub
aaa
lcall
adc
cmp
mov
rol
lret
loop
rcrb
das
lock
lcall
pushf
push
push
outsl
outsl
sub
sub
push
rorl
out
lret
call
ljmp
fmul
ret
enter
pop
or
incl
cmp
sub
sub
jg
push
sbb
xor
xchg
mov
popa
pop
pop
ud0
ljmp
in
mov
sub
dec
aaa
dec
adc
idivb
push
aad
js
lcall
enter
add
ret
jl
cmp
call
addl
cmp
sbb
mov
mov
repz
add
cli
call
and
pusha
fsubs
sbb
es
incl
push
loop
or
sahf
sub
insb
xor
test
incl
or
xchg
sub
gs
jae
iret
mov
dec
sahf
and
iret
outsl
int
rolb
ljmp
mov
adc
jp
out
cmp
lcall
stos
cmpsl
call
push
push
incl
test
in
je
mov
xor
ljmp
stos
out
and
mov
add
fsubr
ret
and
call
jecxz
pop
add
fs
dec
cmp
cmpsl
sbb
fidivrl
sub
mov
cwtl
pop
dec
imul
mov
mov
cli
addr16
pop
and
dec
test
pop
es
insb
jo
xchg
enter
sub
xchg
push
cmp
inc
fistps
dec
call
mov
std
add
lret
jne
jb
outsb
dec
dec
or
incl
pop
dec
dec
ja
lods
jb
mov
int
lock
cmp
jg
xchg
jg
adc
jns
incl
ret
mov
mov
cmpsb
mov
inc
jl
dec
testb
cmpsl
sti
pop
adc
incl
sahf
cmp
setg
jb
and
and
sub
jb
daa
or
dec
pusha
dec
inc
mov
push
jmp
jge
popa
jno
xor
or
mov
lea
gs
fwait
adc
incl
lods
add
and
lods
cs
xchg
fistl
adc
movsb
roll
xchg
sarl
lret
jbe
sub
mov
fdivs
inc
xchg
inc
dec
xor
insl
jl
clc
das
icebp
dec
lea
mov
inc
jae
mov
js
loop
clc
mov
les
mov
cmp
out
inc
cmp
aas
sbb
push
sub
xor
pop
mov
or
inc
pop
cmc
inc
test
call
adc
fcmovb
and
sbb
in
addr16
dec
and
testl
pop
pop
scas
mov
popa
hlt
jnp
lds
pop
cmp
adc
mov
pushl
mov
push
pusha
mov
push
sub
int3
scas
mov
xorb
les
std
jmp
insl
aad
loop
stos
add
into
loop
or
gs
or
xchg
fidivl
jmp
fsts
cmpsb
mov
fwait
pop
jne
lods
fimuls
std
call
mov
pushf
pop
push
outsl
pop
stos
pop
mov
rorb
loop
sub
mov
push
dec
xchg
test
jg
jle
cli
cmp
xchg
dec
push
jecxz
int
xchg
mov
push
mov
adc
lods
lods
jg
incl
imul
cmp
jle
mov
sub
imul
stos
xchg
inc
icebp
cmc
sbb
adc
inc
subb
ljmp
jno
cwtl
subl
outsl
ss
fldcw
and
adc
shlb
pushf
scas
test
cmp
das
icebp
sub
lcall
xor
jmp
cmp
dec
jb
cmp
dec
dec
nop
pop
xchg
adc
mov
popf
pop
int3
pop
int3
jae
movsl
dec
mov
test
lret
lret
add
and
repnz
jmp
inc
mov
or
lods
inc
lahf
pop
ja
jle
inc
mov
decb
sub
ds
jl
push
test
pop
std
dec
xchg
aam
gs
push
mov
adc
push
cmpsb
mov
fstps
dec
adc
inc
test
xchg
push
add
ljmp
dec
cmp
adc
jb
dec
and
cld
dec
leave
cmp
and
mov
aam
sti
mov
dec
dec
adc
mov
imul
inc
xbegin
notl
fidivs
popf
mov
pop
inc
sti
mov
xor
push
pop
add
pop
and
dec
jle
dec
repz
fwait
mov
jo
xor
out
ret
decl
jmp
dec
dec
in
mov
lret
cmp
cmp
psubq
ds
pusha
daa
call
adc
lods
add
jp
sub
std
xor
xchg
jo
icebp
mov
lcall
jns
into
or
arpl
std
xchg
call
movsl
sbb
decl
outsl
imul
aad
cmp
das
out
and
and
imul
jg
stc
push
fs
fidivrl
dec
fists
loop
add
xchg
call
inc
test
xor
cmpsb
jbe
jge
add
and
into
mov
cmp
rclb
rclb
mov
sub
pop
add
cmp
in
jmp
shlb
test
cmpsb
mov
lods
aaa
es
dec
cs
xchg
sbb
pop
jnp
mov
adc
push
int
dec
mov
shr
xor
dec
std
pop
orb
mov
mov
jmp
inc
xor
and
push
jl
and
lea
mov
fmull
mov
push
shrb
cmc
mov
outsl
sub
cmp
std
or
mov
cmc
mov
dec
fbstp
sbbb
fnstsw
aad
enter
jb
punpckhwd
das
leave
push
mov
outsl
push
cvtdq2ps
aas
and
gs
jne
and
out
outsb
adc
jg
cmp
push
dec
pusha
push
cmc
xorl
cmp
lods
mov
jmp
xorl
mov
adc
insb
sahf
call
push
cli
push
xchg
test
adcb
sarl
mov
cmp
das
cmp
fstpl
jmp
nop
sbb
lods
cmc
loope
or
insl
clc
ret
hlt
mov
data16
mov
outsl
sbbl
sbb
call
mov
push
out
mov
push
in
call
movsl
mov
shrl
push
in
lret
add
test
jnp
mov
jmp
ret
xchg
sub
add
xchg
imul
fisttpl
xchg
jo
scas
inc
inc
mov
and
ljmp
mov
push
adc
and
add
fstpt
fldt
push
mov
add
dec
pop
mov
scas
cmp
mov
incl
pop
sbb
add
sub
push
aad
into
mov
ljmp
sarl
push
push
xchg
mov
js
sbb
cwtl
jl
pop
sub
jg
out
dec
jp
std
adc
mov
in
jbe
roll
adc
or
ljmp
or
cmp
push
iret
jae
mov
mov
dec
imul
dec
std
mov
imul
incl
push
inc
sahf
ja
clc
adcb
call
jno
inc
and
out
jo
fstpt
push
lcall
mov
cs
out
stos
repz
xchg
xor
and
addr16
ljmp
sub
into
mov
leave
cwtl
mov
icebp
and
push
pop
cmp
mov
stos
cmc
sahf
push
pushl
jno
adc
adc
push
lods
push
push
pop
scas
movsb
and
ja
cli
push
mov
mov
xor
push
sti
jb
dec
xchg
stos
jg
aaa
jg
loope
sti
test
xchg
cli
jo
orl
ret
inc
negb
adc
inc
int3
mov
adc
mov
mov
rolb
mov
mov
aaa
pop
inc
nop
ljmp
cli
mov
gs
stc
ljmp
das
orl
inc
std
cld
and
xlat
cmp
pop
fwait
lcall
std
lcall
or
iret
xchg
scas
lods
xorb
dec
xor
outsl
mov
pushf
jbe
fldl
push
js
add
inc
xor
daa
add
lcall
mov
ljmp
mov
dec
sub
popf
ljmp
movsl
hlt
out
aam
push
push
jp
sub
sub
xor
das
jns
pop
cltd
pushf
mov
call
sub
je
mov
cmp
dec
cmpsl
mov
movntps
push
inc
push
js
xchg
fcoms
push
into
xchg
inc
ss
mov
in
cmc
sub
lods
cmc
fisttpll
jecxz
mov
inc
in
out
mov
ljmp
dec
ss
jne
aaa
xchg
je
pop
pop
xchg
jne
addb
inc
jg
out
cmp
lret
or
cmp
sti
scas
into
call
mov
jbe
add
test
lods
mov
jg
decl
fwait
scas
cmpb
adc
das
mov
lock
into
jmp
mov
add
push
movsl
dec
push
cmc
xchg
out
les
xor
scas
hlt
pop
clc
sbb
push
or
add
mov
imul
pop
jecxz
lret
push
pop
and
shlb
test
push
pop
outsl
fcos
jmp
mov
fistpl
negb
lret
mov
sarl
scas
sub
das
dec
mov
shll
aaa
daa
push
and
dec
or
in
ficoms
mov
insb
call
xchg
sbb
mov
movsb
sbb
mov
std
push
ljmp
std
cli
push
xchg
out
push
rol
fucompp
adc
outsl
out
jmp
xor
mov
je
mov
nop
stos
lea
mov
or
jmp
mov
mov
add
push
cmpb
out
push
or
cmp
xor
ja
and
xlat
pop
incl
jmp
out
xchg
lret
je
test
inc
push
jle
mov
call
adc
mov
jecxz
aas
out
outsb
or
in
imul
out
movsl
out
jbe
pop
pop
or
repnz
leave
pushf
fisttpl
cmp
mov
lods
push
and
sbb
cmp
ds
sbb
enter
pop
shl
pop
and
incl
clc
daa
mov
out
mov
inc
mov
mov
mov
incl
and
test
nop
xchg
inc
dec
cltd
mov
das
ss
sub
ljmp
cmp
pop
lods
mov
dec
mov
xlat
movsb
pop
cmp
ffreep
cmp
sub
pop
fsubrs
lds
cmpsb
jle
mov
int3
mov
fwait
inc
sbb
incl
lret
jle
or
or
je
mov
push
mov
outsl
dec
pop
fsubrl
push
mov
stos
pop
jae
add
lock
ss
and
jmp
xor
sahf
nop
test
inc
std
mov
repz
cmp
pop
outsb
mov
pushl
jle
lea
cmpsl
out
jmp
out
pop
dec
imul
loopne
mov
dec
out
daa
mov
movsl
pop
sbb
xchg
test
jg
iret
dec
pop
bound
adcl
add
shrl
jg
decl
jecxz
std
out
insb
jecxz
nop
push
sub
das
lcall
lock
fs
aas
addb
jp
or
lcall
in
jl
inc
pop
iret
mov
lods
pop
dec
icebp
push
lock
adc
ljmp
jg
jns
cwtl
mov
test
or
cmp
inc
push
ljmp
push
je
dec
or
in
pushl
sub
mov
mov
scas
mov
push
sub
and
or
cli
lcall
out
imul
mov
mov
ficompl
das
std
jmp
inc
jno
mov
mov
test
xchg
mov
stc
cs
scas
add
mov
incl
or
lahf
fdivs
jmp
popf
push
push
stos
sbbb
add
or
jg
test
mov
jno
bound
mov
jmp
js
adc
and
inc
scas
and
and
pop
stos
incl
xchg
xchg
outsl
fs
push
mov
or
push
sbb
into
inc
cwtl
sub
idivb
call
movsb
arpl
sub
lods
push
ljmp
cmp
loop
sub
pop
jnp
mov
adc
cmp
mov
mov
jmp
cmpsb
mov
inc
maskmovq
notl
js
xor
xor
es
lcall
cmp
mov
les
or
jge
std
cmpsb
push
xor
cmc
inc
sub
js
and
xor
aas
enter
mov
call
mov
idivb
divl
scas
or
lcall
call
cli
jne
sub
icebp
sti
mov
mov
add
jp
and
sbb
cs
sub
adc
and
push
enter
pop
push
xchg
sub
add
stos
xor
jo
mov
pushl
popa
inc
fsubp
jl
mov
sbb
cmp
insb
push
cmp
lcall
imul
xchg
stos
add
xchg
sbb
repnz
sbb
mov
xor
decl
cld
and
sahf
or
pop
xchg
mov
push
pusha
lds
mov
cli
rolb
fldcw
push
cli
jmp
or
jne
sub
lcall
dec
insl
int3
imul
sahf
cmp
pushl
fmuls
fnsave
cwtl
xchg
out
xor
xlat
and
pushl
or
dec
mov
add
mov
jmp
adc
sbb
sarb
nop
jo
xchg
inc
or
data16
repz
inc
leave
sar
decl
addr16
lret
enter
push
inc
adc
mov
xchg
xchg
xor
ljmp
or
cld
lcall
scas
sbb
or
push
cmp
jns
mov
inc
stos
inc
mov
jle
cmp
fcomp
aas
jecxz
jg
pop
push
dec
inc
pop
sub
test
cmpsb
lret
add
call
jg
outsb
lock
add
fnstsw
add
push
sub
mov
mov
inc
std
fcmovnbe
jno
pop
std
xor
push
cltd
mov
ljmp
imul
mov
scas
in
rcrb
adc
fists
lret
decl
inc
inc
push
pop
outsb
jmp
push
inc
fwait
pusha
mov
mov
dec
ljmp
and
jnp
mov
mov
adc
scas
jbe
mov
sbb
decl
fbld
pop
es
mov
aas
in
xor
pop
adc
movsl
jmp
sub
xor
xor
iret
gs
sbb
out
mov
or
divl
mov
mov
inc
pusha
insl
cs
adc
int
ss
and
mov
loope
mov
mov
adc
jbe
mov
sbb
push
lcall
ficomps
push
mov
push
iret
stos
jnp
jmp
sub
jecxz
inc
and
orl
ret
imul
xchg
call
cli
incl
mov
test
cwtl
jecxz
inc
jl
rcrl
ljmp
das
jmp
shll
inc
iret
lret
aam
mov
jmp
cmp
ljmp
fs
xor
and
adc
xor
mov
out
mov
pushf
lods
jne
jl
or
decl
inc
repnz
xchg
rclb
sbb
sub
je
jp
out
jmp
and
scas
insb
jp
pusha
dec
mov
lea
scas
mov
and
incb
pushl
push
sub
xor
push
dec
adc
push
or
jne
test
scas
mov
testb
fnstenv
cli
mov
jg
into
dec
inc
lret
adc
lahf
dec
push
cmc
jae
enter
adc
out
cmpsl
mov
mov
mov
pop
idivl
fwait
push
xor
push
in
mov
in
mov
jge
ja
jmp
and
repz
adc
lcall
cmc
lods
aaa
lock
std
jmp
pop
loope
fisttps
xor
repz
cld
jg
and
sbb
fstpt
dec
popf
and
imul
push
outsb
push
arpl
mov
mov
or
push
incl
lcall
enter
dec
ret
push
cmpsl
fwait
sbbl
call
clc
jge
or
imull
out
mov
sti
lea
fdivrl
repnz
jg
sub
fwait
mov
imulb
test
sub
xchg
cmp
leave
add
push
mov
push
mov
sub
fcmovnu
stc
jecxz
mov
or
in
xchg
loop
lcall
xchg
mov
jne
mov
hlt
fmul
xor
dec
orl
and
xchg
rol
cmpsl
mov
ljmp
std
dec
cld
xchg
lret
push
add
roll
loope
std
movsb
sti
adc
mov
ljmp
je
xchg
xlat
jl
jp
scas
test
nop
sub
bnd
ljmp
aad
pop
clc
inc
movsb
addr16
push
push
int
xchg
mov
add
add
sub
or
and
xor
mov
push
out
cli
inc
incl
mov
push
and
subl
sbb
aas
mov
call
insb
cwtl
inc
cmp
xchg
cli
mov
dec
aad
xor
outsb
jne
addr16
or
cmp
call
loopne
jecxz
pop
ret
or
add
xchg
or
push
push
call
arpl
sbb
push
addr16
fisubl
ret
ud0
pushl
sar
mov
ret
xchg
cmp
mov
mov
mov
ljmp
xor
dec
fstl
rorl
aam
xchg
fimull
shlb
adc
fisttps
or
xchg
stos
ja
cmpsl
aas
inc
xchg
icebp
test
dec
pusha
mov
mov
mov
cmp
adcb
cld
xchg
fistpll
rclb
test
inc
mov
mov
loop
cmp
cmp
jmp
cwtl
jmp
jmp
sub
cli
lds
pop
jne
mov
andl
jae
cltd
mov
xchg
ret
cmc
lcall
push
or
xchg
jnp
cmc
or
sbb
loopne
popa
mov
cli
jmp
icebp
jle
or
inc
imul
jns
in
mov
lcall
inc
cmp
jnp
lds
andb
lea
test
sbb
push
add
sbbl
xchg
cs
ja
ds
adcb
sub
push
lahf
je
scas
insl
test
incl
call
je
fisttpl
pop
xchg
test
std
roll
sub
rorb
pop
cli
lcall
pusha
sub
jb
out
dec
adc
mov
outsl
mov
push
clc
decl
cmp
push
jns
xchg
mov
add
and
aaa
stos
xchg
in
aaa
rcr
jae
and
cmpsl
fld
popf
pop
pushl
clc
pop
mov
popa
pushf
test
fxch
int
jecxz
xor
xor
or
cmp
incl
cmp
mov
aad
xchg
arpl
xchg
cmp
sbb
aaa
mov
xchg
enter
jmp
daa
mov
jp
cli
shrl
icebp
lds
sbb
pop
cmp
mov
loopne
fsubrl
jmp
cld
jg
stos
jg
xchg
outsl
test
insb
loop
push
sbb
mov
call
lcall
call
rolb
roll
call
dec
int
inc
cli
outsb
loope
lret
and
std
ljmp
adcl
cmpsl
mov
test
hlt
aam
jbe
decl
sti
loopne
sbb
adc
addl
addr16
adc
xchg
aad
lea
lret
notb
js
xchg
lcall
shr
fidivs
out
icebp
dec
mov
fwait
in
and
les
in
enter
mov
push
test
jl
incl
std
pop
jnp
daa
fs
adc
fisubrs
iret
scas
adc
jae
mov
dec
adc
xchg
cmp
adc
xchg
loop
les
inc
int3
das
or
and
xchg
sub
into
sti
jmp
push
std
xchg
sbb
bound
add
rorl
adc
jg
stos
sbb
std
lods
or
inc
jne
shrl
pop
sti
ret
cltd
jb
cli
inc
test
inc
shll
ljmp
inc
and
setge
rorl
inc
sar
test
test
push
sbb
pop
and
dec
add
std
ljmp
out
dec
push
cmpsb
rorl
nop
mov
decl
dec
lds
xor
stos
push
sub
aad
mov
sti
or
sbbb
testb
inc
pop
repz
dec
mov
rcll
jbe
cli
add
pushl
mov
add
sub
or
mov
ret
lock
pop
scas
andl
pop
sbb
inc
push
xor
jle
sbb
mov
iret
push
push
mov
dec
mov
push
lds
mov
mov
inc
xlat
mov
lock
bound
mov
inc
xchg
out
inc
cltd
mov
imul
ds
add
notb
push
std
inc
pop
out
pop
mov
mov
addl
jl
mov
or
mov
cmp
adc
cmpsb
sbb
xchg
pushl
loope
jbe
mov
xlat
cmpsb
pop
mov
loopne
aad
xor
push
dec
shl
push
push
popa
ret
call
cltd
dec
and
inc
ds
mov
les
andl
dec
xor
lds
sub
mov
pop
mov
ftst
aam
xor
pop
mov
dec
jae
adc
cltd
jnp
pop
mov
mov
in
ds
sub
dec
pop
lea
fs
decl
int3
out
nop
dec
or
dec
pushf
leave
decl
fwait
inc
push
adc
mov
repz
sub
roll
mov
jmp
or
in
or
movsl
add
fsubrs
xor
ljmp
lds
loop
pushl
lock
push
cmp
jbe
hlt
xchg
mov
stos
pop
xchg
sti
dec
and
adc
cmp
sbb
or
mov
xchg
inc
rcrb
sti
leave
mov
xchg
xchg
test
mov
lahf
add
call
pop
js
and
mul
push
pop
cmpsb
icebp
inc
ss
push
outsb
fidivrl
sbb
push
clc
fucomip
fldcw
sbbb
cmp
add
mov
xor
inc
pushl
subl
cld
mov
xchg
mov
add
pushl
mov
into
mov
xlat
pop
mov
fbld
mov
cmp
cmpsl
adc
pop
cli
call
cltd
xchg
sbb
fidivrs
push
out
repz
cmpsb
add
push
lret
loopne
xor
lcall
in
jbe
inc
imul
fdiv
inc
daa
test
out
xchg
popl
mov
insl
rclb
les
and
lcall
decl
pop
sub
add
cmp
mov
push
adc
cmp
emms
cmpsb
incl
and
xchg
lds
fidivl
gs
jno
fists
mov
mov
lcall
std
lcall
fwait
repnz
lahf
pop
rcrl
sbb
mov
mov
call
call
mov
push
in
push
mov
iret
add
push
pop
call
in
test
push
mov
shl
decl
mov
ret
in
rcrl
mov
incl
mov
dec
movsl
sbb
cmovno
sbb
pop
cmp
adc
call
call
jns
and
or
jmp
jno
or
enter
mov
cli
jg
decl
lods
jge
fwait
sbb
sub
loop,pn
daa
fcompl
lcall
cltd
and
fcompl
jno
jnp
insb
nop
and
mov
inc
pop
inc
push
scas
lods
mov
xor
xchg
adc
mov
pop
fistl
push
jg
sub
pop
dec
mov
sbb
adc
xlat
xor
jg
inc
sub
cltd
or
fnstcw
pop
mov
mov
clc
pop
jp
outsl
add
ljmp
lock
xchg
cltd
mov
int
mov
dec
imul
ss
lock
inc
dec
sarl
and
imull
sbb
xchg
lahf
enter
pop
test
cld
or
sub
gs
popf
pop
and
aad
movsl
dec
out
hlt
push
mov
enter
call
shl
shlb
fcomip
xchg
pop
sbb
in
inc
jle
icebp
setbe
loop
cmpsb
pushl
loope
incl
cmp
push
jae
xor
mov
fisubs
dec
jb
jg
into
nop
out
or
stos
mov
testl
push
movsl
jle
adc
les
lcall
mov
or
and
pop
jnp
test
cmp
sbb
push
pop
lods
popa
mov
mov
push
jg
lods
lods
jo
clc
inc
add
xchg
inc
jmp
pop
dec
loopne
jg
das
int
fcoml
je
push
je
mov
mov
mov
pusha
jle
add
mov
jle
jg
imul
pop
sahf
repz
subb
jg
lods
push
scas
bound
mov
lret
cmp
mov
cmpsb
movsl
jecxz
jmp
inc
sbb
clc
stc
lahf
jae
sbb
aam
adc
jmp
insb
mov
pushl
stos
hlt
cmp
adc
fbstp
xchg
pop
loope,pn
sub
mov
aam
ficompl
jbe
mov
loop
loop
mov
xchg
add
call
xor
sub
push
shll
mov
div
jg
jmp
inc
fldt
add
jle
lcall
icebp
fstpl
mov
dec
jge
fwait
jb
test
test
ljmp
inc
mov
ljmp
cmp
loope
inc
mov
or
cmp
cmpsb
and
iret
aaa
xchg
jmp
cld
decl
mov
pop
sub
cmp
push
cmpb
pop
je
aam
por
imul
xchg
mov
cmpb
add
addr16
mov
mov
daa
dec
das
lods
scas
setl
and
loopne
ljmp
pop
shll
jne
pop
jne
lods
sbb
stos
xchg
jae
adc
sub
sub
fdivs
out
cli
ljmp
sub
and
in
jmp
and
bswap
xchg
sub
adc
iret
xor
sti
call
jno
les
gs
cmp
xchg
cs
pop
jle
pop
ror
mov
pop
pusha
cmp
lret
jno
mov
and
sbb
pop
std
enter
inc
test
mov
or
sbb
ja
xor
mov
cmp
sarl
insb
arpl
sub
adc
cmp
fildll
dec
stc
test
mov
mov
in
mov
jge
loop
in
cld
in
stc
push
add
cmpsb
mov
insl
cmp
jno
repnz
jbe
mov
jg
pop
in
ffreep
out
jle
cmp
mov
iret
loopne
call
clc
lcall
lock
push
xor
sbb
leave
out
stc
daa
out
idiv
jg
lcall
adc
jo
xchg
jmp
pop
cld
xchg
jmp
or
pop
inc
sbb
insl
sbb
mov
std
adc
nop
mov
push
decl
dec
inc
fmull
mov
repnz
sti
mov
jae
gs
or
mov
jl
cli
push
repz
jmp
jge
cmpb
mov
and
ja
xor
sub
cli
test
or
mov
call
loopne
dec
mov
out
movsl
inc
mov
inc
out
imul
pop
sbb
call
jae
daa
orb
imul
in
cmp
cld
pushl
pushf
movzwl
adc
lret
fdivrl
sbb
int
decl
jns
pop
subb
cs
out
xchg
bound
add
xor
insl
int3
lds
sar
decl
data16
shll
roll
cltd
out
fildll
jo
xor
add
lock
jecxz
mov
cmp
and
jecxz
dec
lds
mov
inc
or
add
ja
test
int3
enter
xchg
and
ljmp
dec
pop
test
mov
cld
inc
cs
loope
pop
pop
dec
pop
jl
xor
mov
cmc
movsb
mov
sub
and
dec
mov
jg
and
movb
inc
loop
insl
popa
sub
pushl
in
add
xor
pop
roll
sub
nop
push
xchg
cltd
adc
jg
sbb
xlat
or
shll
cld
adc
incl
sbb
lds
gs
cmc
xorl
jnp
mov
decl
std
arpl
shlb
add
sub
mov
decl
shlb
sub
pop
aas
in
and
lahf
push
inc
cmpsl
ret
incl
pushl
pop
xchg
gs
and
cli
stc
push
cld
push
xchg
mov
aaa
cmpsl
pushf
out
cmpsl
push
das
clc
popa
and
sarb
jg
out
jnp
aad
insb
and
or
or
mov
scas
mov
icebp
cld
pop
xchg
out
pushl
ljmp
inc
in
xor
enter
mov
fsubs
cmp
outsl
incl
je
les
and
rolb
xchg
sar
mov
hlt
fcmovnbe
sarl
add
call
sub
mov
ja
sbb
cmp
fdivrp
daa
sbb
clc
xor
mulb
or
movsl
dec
mov
or
adc
push
iret
pop
fsubl
fucomip
inc
jg
adc
dec
fdivs
pop
sub
scas
xor
xchg
push
jnp
stos
imull
imul
push
nop
xchg
push
adc
stc
data16
pop
test
pop
mov
loop
shrl
js
decl
cld
test
subb
call
add
repnz
jmp
xchg
arpl
dec
lahf
mov
addb
lret
and
in
adc
or
adc
pop
out
mov
and
dec
pop
cmp
lcall
sub
movsl
unpckhps
jmp
pop
xorl
mov
adc
push
icebp
sbb
xor
xor
dec
adc
adc
rorl
pop
pop
loop
stc
mov
cmp
cmp
fs
sub
addr16
rcll
pusha
aas
out
dec
xor
ds
int3
dec
jb
or
outsl
mov
sbbb
mov
test
into
xchg
outsl
add
das
lock
mov
cmp
push
mov
mov
jns
fldt
push
ljmp
fadds
test
scas
sbb
mov
adc
mov
sbb
inc
mov
movsb
mov
and
lret
movsl
into
cmpsl
push
jmp
clc
xor
or
xchg
push
int
imul
xchg
push
add
jle
cmpsb
jg
jmp
ss
cli
push
std
inc
and
rcl
mov
jg
in
xchg
clc
pusha
icebp
ljmp
sbb
cld
stos
xlat
pop
out
jg
mov
add
lea
call
scas
lods
aas
jg
stc
or
daa
xchg
out
mov
xchg
fwait
jae
jmp
int3
add
in
ds
push
jmp
loopne
js
add
outsb
leave
insl
cmpsb
jg
xor
les
fwait
push
sbb
cmp
in
push
or
in
add
push
jecxz
pop
daa
gs
mov
insl
in
add
jnp
jmp
jno
lret
fmuls
sbb
lret
pushl
pusha
call
stos
mov
dec
mov
fwait
call
push
push
stc
jae
ljmp
mov
cli
cmp
jecxz
xchg
jl
xchg
leave
gs
jmp
sub
pop
mov
cmc
ja
ss
daa
xor
lock
jns
cs
xor
int3
lods
jg
pop
jne
or
test
push
popa
mov
cwtl
fisubs
sarb
mov
std
ljmp
lcall
scas
cltd
je
dec
pop
lret
in
xor
outsl
add
mov
lods
loopne
paddsb
lods
test
hlt
rcrb
xor
and
mov
inc
adc
ljmp
mov
sub
out
das
test
xor
mov
xchg
mov
out
stc
pop
inc
lea
mov
out
xor
repnz
lcall
iret
mov
mov
movsl
in
std
mov
cmpsb
push
cmpb
pop
negl
fucomip
sub
pop
insb
jle
daa
pop
rcll
mov
sub
dec
sub
mov
movsb
sahf
mov
cmc
je
cs
sarl
outsl
and
les
daa
xlat
lcall
cld
lcall
imul
sbb
pop
subl
cmpsb
mov
sti
outsb
cmc
ljmp
add
dec
fs
divl
and
inc
cli
ljmp
mov
jmp
pusha
push
shrl
stos
fcompl
pop
cld
ret
fidivrl
clc
ret
jg
fs
sub
int3
jl
jecxz
lods
sqrtps
aad
rorb
adc
xor
and
sub
ljmp
push
popf
jns
imul
mov
adc
mov
lods
push
call
cli
dec
gs
mov
out
jns
or
sbb
inc
out
jmp
mov
jp
and
fildll
inc
stos
mov
scas
nop
nop
jne
add
jg
pop
ljmp
fsincos
shl
lahf
dec
push
sbb
mov
stos
push
jmp
mov
nop
or
cmpsb
pop
xchg
mov
sub
mov
sahf
xor
and
pop
leave
push
in
std
mov
xchg
in
push
ljmp
stos
xchg
dec
pusha
sti
bound
mov
adc
sub
das
xchg
fcmovb
ljmp
dec
or
or
add
xchg
mov
std
decl
cld
cmp
insl
leave
mov
stos
add
jg
xor
inc
sbb
mov
mov
add
xchg
dec
push
mov
ljmp
xor
fsubrl
test
adc
xor
das
hlt
ljmp
mov
xchg
cmp
stos
or
out
jg
pushl
inc
xchg
lock
add
pop
out
or
xchg
fwait
adc
inc
ljmp
decl
mov
mov
adc
bound
inc
sti
and
add
call
leave
aaa
mov
lret
sub
xor
cmp
cwtl
test
mov
fnop
cmp
pop
cmp
inc
push
aad
call
mov
shrb
jp
push
mov
mov
or
and
add
pop
mov
lcall
clc
sub
fucomip
push
or
mov
cld
mov
push
outsl
gs
push
sub
inc
in
jb
mov
mov
je
xchg
mov
xor
sbb
mov
jg
fwait
into
sbb
loope
mov
inc
ret
add
sub
pop
cld
mov
arpl
outsl
shrl
outsl
hlt
mov
mov
rcl
jle
jae,pt
add
hlt
ficomps
fisubs
inc
sbb
push
mov
cmp
in
inc
mov
aam
push
xlat
or
cwtl
imul
decl
jnp
cmp
sub
popf
push
lods
lods
loope
or
call
mov
sub
repz
jbe
adc
cmp
jg
pop
imul
sti
inc
and
rcr
adc
cld
ret
lock
cli
movsb
push
scas
push
inc
inc
sarb
mov
add
test
clc
incl
div
inc
sti
xor
xor
decl
loope
push
jbe
repz
sbb
sahf
and
popa
mov
push
pushl
sbb
dec
push
and
or
adc
inc
mov
mov
lret
xchg
push
jg
hlt
cmp
mov
insb
jb
sub
adc
xchg
in
mov
leave
jg
std
or
test
push
xchg
sub
pop
jg
xorl
in
enter
call
popf
jecxz
mov
cmp
icebp
out
pop
jge
adc
ljmp
out
inc
pop
xor
shrb
push
dec
decl
jl
bound
mov
cmp
movsl
add
cmp
mov
push
pop
fildll
decl
aam
and
and
push
rorb
enter
inc
xchg
pop
and
push
lock
call
sub
hlt
mov
clc
inc
push
outsl
fldl
std
mov
ljmp
test
push
sub
ss
and
rolb
fnstsw
fcomps
std
cmp
fwait
mov
cwtl
loopne
scas
sub
sub
movups
inc
push
cmp
mov
jecxz
rorb
cmp
cmp
push
into
int
sbb
xor
push
and
adc
add
mov
pand
cli
dec
lret
clc
and
adc
mov
adc
xchg
lret
inc
pop
mov
jg
call
xchg
ljmp
or
subb
inc
mov
jg
jmp
sub
mov
popf
shll
jae
cmpsb
or
lods
add
mov
out
ljmp
inc
sbb
daa
stos
mov
add
jp
inc
into
aaa
cmp
data16
pop
dec
push
adc
inc
ljmp
fnstsw
or
insb
push
dec
push
jae
pop
test
jnp
ss
ss
js
push
fdivl
divb
jno
pop
or
lcall
xor
loopne,pn
xchg
inc
arpl
dec
jmp
inc
test
lcall
lock
cmp
sti
pop
xor
xorb
js
lcall
dec
jp
mov
gs
or
imul
dec
and
sti
dec
push
imul
push
repnz
mov
mov
dec
jmp
and
lcall
ljmp
inc
pop
addr16
sidtl
cmp
dec
jl
xorb
test
or
sub
pop
test
lahf
xor
cmp
out
enter
enter
jecxz
or
imull
cmp
and
call
cmp
jnp
das
aam
cs
test
jo
cmp
dec
push
incl
cltd
fimull
popa
or
adcl
aad
mov
push
fwait
push
lods
push
adc
std
xchg
inc
sub
or
pcmpgtd
arpl
jno
call
ljmp
sbb
jecxz
push
stos
sbb
bound
xchg
adc
pushl
js
xlat
imul
mov
mov
xor
daa
decl
mov
inc
stos
cmpsl
inc
or
dec
loop
aam
inc
dec
jns
cs
in
incl
mov
icebp
cmp
mull
std
xchg
xchg
rcrb
add
jmp
jg
and
xchg
es
test
push
add
push
xchg
pop
mov
lds
mov
jle
jns
add
mov
mov
xlat
ja
fisubs
mov
sub
jnp
ljmp
push
gs
sbb
repnz
out
out
sbb
fistl
push
data16
or
nop
stos
call
subb
push
pop
cwtl
jge
cmp
outsl
pop
sbb
int3
pop
icebp
ja
cmpsb
dec
jns
and
mov
pop
adc
movsl
inc
lahf
test
push
pop
mov
lcall
lods
outsb
mov
mov
das
jb
ja
dec
mov
xor
mov
gs
mov
mov
sub
mov
mov
jbe
fsubl
adc
out
cli
jg
cmpsl
lods
imul
iret
out
jbe
repnz
add
pop
mov
sub
xor
shl
jl
shr
aaa
xchg
mov
jne
test
bound
and
call
xchg
adc
test
mov
lcall
pop
sub
xor
and
les
lcall
add
xlat
jbe
mov
adcb
ret
popa
stos
cmp
subb
std
incl
adc
cmp
js
mov
pop
je
cmp
inc
fcoml
pop
idiv
lcall
cmp
jns
push
and
cwtl
je
fdivrp
fdivr
and
xchg
add
cmpsb
flds
add
dec
add
add
and
pusha
call
in
in
or
leave
jmp
xchg
punpckhbw
mov
or
add
push
adc
call
push
ja
out
mov
xor
lea
movl
and
jnp
ficoml
mov
add
mov
mov
or
hlt
push
or
xor
mov
jne
or
xor
mov
fucomip
and
pop
xor
add
mov
mov
mov
and
mov
mov
sub
mov
sub
xchg
out
sub
xor
ja
or
jmp
es
std
mov
fstpl
mov
pop
mov
add
lea
in
add
out
mov
jnp
mov
mov
shlb
lea
dec
testl
xor
or
jge
cmp
je
test
insb
inc
add
pop
pop
ret
xchg
je
cmp
xchg
jge
fsubrl
loope
mov
add
cmp
push
enter
je
push
je
pusha
mov
jbe
sarb
scas
orl
add
or
mov
outsb
xor
nop
aas
xor
xor
jg
push
jnp
pop
lods
das
sbb
inc
push
xchg
and
or
arpl
jb
je
out
nop
add
aaa
popa
adc
xor
test
je
out
leave
mov
lods
add
push
jmp
pop
or
sbb
sub
loop
or
imul
divb
mov
jmp
dec
or
in
bndstx
push
push
push
sub
hlt
sti
xorl
addl
mov
xor
jmp
dec
mov
sbb
mov
inc
cmp
sti
je
mov
add
mov
shl
jne
std
ffree
jge
movzbl
mov
add
and
dec
or
fsubp
inc
jmp
nop
cmp
jbe
sahf
rorb
lea
mov
jmp
mov
lea
outsl
mov
lahf
cmp
mov
mov
add
and
and
jg
add
inc
cmp
jbe
mov
and
fisttps
addb
dec
or
iret
inc
loope
sbb
pop
pop
pop
and
andb
mov
add
or
dec
or
and
push
lret
sbbl
cmp
scas
lret
das
js
pop
jl
inc
cs
bound
in
xchg
leave
in
inc
fsubs
add
add
add
insb
adc
in
push
insb
das
pop
adc
or
out
inc
push
and
pop
outsb
xor
inc
adc
aas
and
popa
inc
and
fildll
inc
or
pop
lods
adc
pop
inc
xchg
lea
mov
fisttps
cmp
out
adc
or
xchg
das
and
sbbb
fmuls
dec
pop
push
jbe
js
repnz
inc
pusha
jnp
jle
nop
pop
adc
inc
enter
mov
nop
pop
and
mov
inc
jae
add
mov
lea
mov
inc
or
div
stos
mov
xchg
cmp
cmp
je
lea
orl
or
outsl
add
push
inc
lcall
lock
test
pop
test
inc
xchg
inc
in
addr16
call
mov
mull
lods
sub
enter
push
mov
add
fs
sbb
or
or
mov
rorb
mov
mov
stos
sbb
jb
mov
pop
adc
movups
adc
mov
inc
jo
leave
call
xchg
pop
les
mov
fcoms
mov
dec
inc
sbb
push
push
mov
mov
in
and
push
or
cmp
les
jp
add
fcomps
les
mulb
test
clc
cld
rcr
add
mov
mov
out
lods
push
adc
push
or
inc
pop
lcall
sub
mov
push
cmp
jg
lea
mov
sub
inc
sub
js
and
outsl
adc
popa
push
rclb
mov
jl
and
call
bound
inc
xchg
mov
push
cs
and
pop
movsb
xchg
insl
addl
lret
pop
jbe
test
sbb
inc
cmp
loopne
mov
int
jg
in
inc
in
lahf
sbb
pop
jecxz
inc
insb
orb
mov
mov
je
jl
ret
xor
cwtl
push
int3
pushf
cmp
outsl
std
adc
sbb
cmc
decb
and
sarb
fninit
insl
mov
xchg
xor
aam
sub
fidivs
xor
adc
adc
lock
mov
nop
inc
push
fldcw
nop
nop
pop
xor
pop
sbb
sbb
cld
mov
nop
xchg
daa
sub
push
sbb
and
lret
fists
mov
add
push
pushf
pushf
pop
mov
xor
pop
test
test
call
mov
hlt
push
pop
sti
mov
test
je
orl
sarb
add
push
sub
push
add
in
jbe
push
or
mov
imul
and
shrl
jne
jg
and
jne
aas
subb
jbe,pt
out
jbe
jns
insb
js
cmp
or
push
or
pop
ret
subb
sarl
sbb
jmp
in
dec
iret
dec
test
mov
mov
mov
mov
mov
mov
jne
mov
push
jmp
mov
mov
aas
mov
sbb
or
sbb
lods
insl
fwait
pop
cmp
sub
and
in
fbld
adcl
rcll
push
enter
jnp
sbb
fldenv
call
xchg
in
inc
or
sbb
pop
xor
in
loope
les
inc
lock
or
sbb
sub
mov
mov
mov
adcb
movl
push
or
cs
pushl
mov
or
decl
leave
jne
mov
mov
xor
xchg
test
sub
mov
mov
xor
lock
add
add
sahf
in
mov
cli
stos
sub
shrl
test
outsl
inc
dec
pop
add
mov
dec
outsb
mov
hlt
jne
daa
push
addl
cmp
jmp
pop
cmp
je
add
je
sub
stc
fidivs
in
aas
adc
dec
in
cmp
pusha
cmp
pop
mov
movzbl
ja
lock
lock
das
mov
jne
pusha
adc
jge
test
mov
sahf
jmp
orl
cmp
clc
inc
mov
ja
add
or
sahf
pushl
add
call
jmp
inc
lret
pop
mov
rolb
sub
add
fcmovnu
mov
adc
popa
arpl
leave
xorl
cmp
mov
pushl
xor
setnp
push
sub
sub
jne
movups
iret
push
inc
orl
fistpl
jg
add
adc
xor
jne
testl
or
nop
lea
je
sha1msg1
xor
dec
insl
pushl
mov
pop
shlb
push
sub
inc
xor
pop
imul
inc
movsb
cmpsl
sub
mov
cli
or
cmpsl
or
mov
and
mov
je
adc
fists
jne
jmp
cmp
test
insl
loope
ror
roll
add
jne
jmp
mov
insb
fisttpl
cmp
or
sbb
push
std
mov
pusha
pop
repnz
and
inc
rolb
mov
sarb
jp
jne
push
nop
ret
and
es
mov
pop
xchg
sub
popa
scas
jnp
popa
cld
ret
push
jmp
jo
je
popa
jne
jg
inc
inc
loope
mov
dec
mov
dec
rcl
out
shll
mov
mov
daa
pop
scas
test
movsb
jmp
lahf
sarb
rcrb
mov
push
into
dec
pusha
jmp
stos
testb
ja
push
cmp
je
shl
dec
cmpb
cmpsl
mov
sysret
andl
lea
and
inc
push
rolb
enter
les
jp
inc
sti
int3
mov
mov
je
pop
lret
ret
sub
mov
shlb
int
cmp
imul
aam
into
sub
dec
jg
xchg
jp
mov
add
movl
cmp
jecxz
icebp
dec
add
push
dec
loopne
jnp
lea
jmp
fisttps
fisubl
lret
sbb
inc
mov
rolb
inc
mov
icebp
out
lea
in
popa
mov
add
push
mov
inc
mov
adc
addl
js
rorl
pop
adc
push
mov
dec
push
mov
test
das
in
add
xor
mov
daa
dec
push
pop
fs
inc
push
push
pusha
insb
nop
inc
push
sbb
fs
js
inc
push
mov
cmp
inc
push
sbb
add
xchg
adc
test
ja
hlt
dec
jne
sub
add
xchg
popa
test
imul
xchg
imul
test
sub
adc
jg
subb
arpl
jae
fs
insb
add
iret
decl
pop
push
imul
popa
jae
gs
imul
jne
jg
outsl
sbb
push
and
xor
pop
xor
ss
fstpt
or
gs
jb
es
and
mov
fists
inc
ss
gs
aaa
sub
push
mov
inc
inc
or
gs
pop
inc
adc
sti
pushl
mov
xor
push
or
ss
and
fnsave
xor
fs
pop
inc
inc
add
fisubrl
xor
pop
push
ss
lahf
cmp
ljmp
arpl
outsb
popa
or
and
ja
je
jg
decl
outsl
bound
jo
outsl
fs
je
adc
arpl
mov
imul
and
adc
jbe
ljmp
inc
push
and
dec
push
push
dec
dec
push
aaa
dec
inc
add
idivb
dec
push
inc
push
or
push
push
and
inc
and
inc
dec
push
pop
lods
std
dec
inc
push
push
dec
sub
inc
and
inc
inc
dec
inc
jne
mov
inc
push
inc
push
push
sub
cmp
sti
lcall
das
push
push
shlb
inc
inc
inc
dec
or
inc
sbb
inc
arpl
mov
and
dec
push
and
test
insl
sub
xchg
pop
loope
and
popa
or
outsb
je
fisttpl
xchg
jae
jo
cld
bound
and
jb
in
lahf
in
sbb
jne
ja
and
loope
outsb
imul
push
out
and
je
sub
or
fs
jb
jne
int
adc
gs
popa
push
and
leave
outsl
insb
push
inc
imul
mov
insb
push
mov
popa
addb
add
xor
dec
mov
sub
fstpt
jmp
and
and
sub
add
push
adc
cli
inc
add
sub
out
lret
and
and
mov
cltd
inc
movaps
sbb
cmp
and
add
dec
movsl
aaa
xlat
sbb
sbb
mov
mulb
addr16
add
jno
or
aad
mov
xchg
cltd
imul
add
push
ja
lods
outsl
imul
or
in
sbb
ss
push
inc
sub
mov
pushl
dec
inc
sub
push
push
pop
inc
inc
dec
es
add
in
in
sub
pop
es
add
and
add
mov
push
add
fs
and
add
and
push
jb
insb
add
jmp
mov
add
insb
push
add
push
jp
popa
jp
xor
jge
push
insb
push
push
add
ret
int
add
or
sub
or
test
add
or
xor
adc
movsl
dec
and
xchg
rcrb
inc
pop
jg
gs
outsb
fs
test
push
les
xchg
rorb
insb
insb
lcall
pop
and
jge
jne
arpl
outsb
gs
sarl
jb
and
dec
inc
push
push
faddl
inc
push
cmp
push
andb
movsb
or
mov
inc
push
aas
push
dec
sbb
fstl
mov
inc
xchg
mov
stos
inc
xchg
testl
adc
add
inc
lds
mov
add
mov
inc
jns
add
or
stos
mov
sbb
push
or
stos
sub
sub
sbb
push
add
mov
jb
inc
xorb
inc
add
rcll
inc
sbb
stc
testl
test
add
push
sti
jp
std
decl
add
push
imul
insb
insb
outsl
arpl
add
push
jb
je
es
gs
outsl
jb
add
je
push
in
inc
outsl
outsb
sbb
and
lods
aam
sbb
push
gs
rorl
push
dec
pop
mov
xor
pop
push
and
jb
push
jae
aam
mov
aaa
push
inc
dec
dec
cmp
push
aaa
adc
add
push
mov
insl
ja
cs
add
push
imul
mov
sub
pop
xchg
push
xchg
outsb
outsl
adc
jns
sub
jb
es
lret
outsl
add
jp
jb
bound
sub
add
add
arpl
das
mov
arpl
das
arpl
imul
in
xor
or
insl
xchg
sub
insl
insb
jnp
sub
xor
and
repnz
outsb
daa
je
jmp
jmp
stos
fucom
outsb
popa
stos
out
inc
inc
inc
push
and
ficoms
cmp
and
shlb
xorl
movsb
and
imul
sub
and
lds
sub
or
push
enter
add
inc
pop
test
inc
dec
dec
dec
inc
sub
dec
xor
sbb
sub
push
push
test
test
pop
leave
sub
mov
mov
int
or
mov
dec
shll
into
fsubrp
add
push
sub
pop
cmpsb
imul
ja
int3
mov
fmull
in
add
or
sbb
xor
inc
cmpsb
imul
jns
jl
mov
push
add
add
gs
adc
sub
dec
push
add
adc
into
int3
add
add
or
dec
add
mov
add
or
dec
pop
nop
push
pop
ss
add
mov
inc
loopne
push
pop
mov
int
mov
stos
das
push
push
jb
insl
fs
adc
outsb
outsl
je
call
and
and
fs
sti
psadbw
mov
or
repnz
jp
addr16
jns
mov
cmp
cmp
cmp
fs
inc
inc
cmp
jp
add
imul
mov
dec
dec
add
mov
push
and
add
and
mov
or
sub
adc
in
in
imul
add
mov
sub
mov
aaa
add
insb
iret
out
sub
push
push
aaa
pop
outsl
gs
fistpl
aaa
js
add
je
ss
xchg
jl
xor
jae
xorl
xchg
andb
in
adc
daa
nop
add
jg
jge
and
fxch
or
sti
add
sub
idiv
outsb
push
shrb
jae
arpl
cmp
inc
cs
out
cmp
xor
divb
push
inc
jb
pop
cmpsb
jmp
mov
add
pop
bndstx
addr16
jg
lcall
arpl
adc
decb
inc
inc
push
inc
push
dec
xor
or
inc
xor
dec
or
cs
mov
inc
push
push
pop
adc
dec
pop
addl
outsb
jg
std
jnp
fnsave
in
add
ja
outsl
xorps
in
mov
or
jae
jb
sti
decl
xor
xchg
test
cmpb
xlat
fwait
insb
xchg
lret
in
push
fs
scas
outsb
lods
pop
mov
xor
add
nop
jl
pop
jle
sbb
xchg
test
cmpl
or
jl
das
fnstenv
lret
insl
cltd
lcall
aas
jnp
push
mov
adc
mov
cmpb
jbe
sahf
jl
or
or
out
ret
jg
dec
jecxz
add
adcb
add
mov
dec
jp
push
sti
add
and
fcomps
sbb
pop
sub
xor
sub
fcmovne
nop
fnstsw
xor
sub
and
cmp
add
cmp
int
mov
fwait
add
jae
xchg
mov
insb
fs
dec
or
ja
mov
xchg
jae
or
out
and
fs
scas
scas
jmp
in
inc
arpl
mov
mov
or
xor
imul
testb
push
add
gs
mov
sub
jne
push
incl
ljmp
add
jbe
inc
sub
outsb
sbb
fisttpl
inc
sub
pop
jo
outsl
jb
outsl
adc
xlat
addr16
jo
xor
sti
xchg
add
je
jne
pop
inc
add
dec
fsub
mov
sub
inc
aaa
or
enter
and
jb
pop
outsb
sbb
jmp
and
cmp
add
sub
loope
add
popw
jo
gs
imul
out
jo
orl
mov
xor
imul
imul
sbb
daa
jb
stc
xor
fldenv
inc
pop
and
inc
sti
pop
idivl
insb
sub
push
lds
jae
jbe
jns
fldl
and
and
iret
inc
arpl
mov
jmp
outsl
cmp
ja
dec
test
imul
shrl
loope
mov
mov
pop
insl
outsb
sub
loop
ljmp
xor
mov
xor
add
stc
insb
push
and
jmp
popa
cmp
add
sub
cmp
sub
aaa
dec
dec
cwtl
xchg
outsl
insl
shrl
mov
dec
dec
int
sbb
in
popa
push
cmc
or
stc
inc
cwtl
adc
inc
mov
or
lock
stc
jg
mov
push
dec
sbb
divb
rcrl
adcl
or
movsl
fisttpll
jl
inc
fwait
jae
outsb
xlat
mov
fs
pop
sbb
mov
inc
mov
fwait
sub
dec
insl
in
jmp
inc
lgdtl
cmp
pop
inc
add
and
push
add
or
inc
adc
sbb
mov
stos
lods
rcl
xor
data16
push
xor
adc
push
ret
push
dec
pop
jns
sub
pop
xchg
jg
and
sub
das
arpl
or
inc
sbb
jecxz
imul
rcl
sub
push
jns
cwtl
xor
lahf
push
pop
out
add
xchg
popf
outsb
mov
pop
jae
pop
dec
jo
and
pop
adc
test
mov
add
lret
test
dec
dec
jae
pusha
cmp
sbb
or
pop
inc
pop
fucom
mov
xor
pop
xor
insl
sub
filds
add
adc
xchg
das
sub
mov
outsl
inc
dec
mov
xchg
pushf
daa
inc
inc
enter
xchg
inc
daa
inc
fs
pop
xor
dec
enter
push
pop
out
sub
fwait
inc
cwtl
inc
cmp
orl
push
arpl
outsl
push
sbb
xchg
adc
rdpmc
or
ret
mov
ret
leave
sub
push
jmp
insl
andl
divl
pop
mov
adc
pop
lea
jne
sti
jmp
or
incl
push
push
inc
push
lea
mov
decl
mov
cs
arpl
popa
arpl
bound
inc
decl
mov
push
mov
xor
cmp
jne
mov
sub
push
add
push
mov
mov
data16
mov
inc
inc
inc
out
mov
dec
and
cmpl
pop
sub
mov
and
pop
pop
jnp
pop
ret
add
or
cmp
fidivrs
je
inc
cmp
je
cmp
jne
adc
fstpt
shlb
into
push
pop
cmp
mov
add
push
call
notb
jbe
ret
push
push
mov
lea
xchg
fcomi
add
jl
jmp
push
lea
push
call
jbe
pop
pop
lea
or
out
bound
pop
jmp
loop
fldl
jl
movsl
loopne
ficomps
xchg
mov
inc
cld
leave
lea
jmp
stos
add
push
clc
mov
bt
scas
pop
je
adc
push
mov
jmp
fadd
mov
fstpl
dec
inc
cld
aas
movzwl
and
loopne
jmp
gs
popa
and
int
add
mov
call
mov
call
xor
mov
adc
test
arpl
jl
enter
push
sub
ds
jmp
mov
in
push
push
cwtl
sbb
test
add
push
push
sbb
cld
push
push
xor
testl
pop
clc
mov
or
cld
mov
inc
clc
enter
idiv
sbb
loope
and
je
cmp
pop
cmp
jne
cmp
je
or
sub
push
mov
jecxz
lcall
xor
inc
jne
xchg
scas
xor
outsb
sbb
cmp
ret
jmp
frstor
jmp
mov
cld
repz
cld
incl
cmp
push
inc
inc
inc
inc
cld
mov
mov
xor
jg
imul
fmuls
lea
mov
shr
testb
lea
mov
shl
ret
rep
mov
sbb
rep
or
imul
or
dec
call
ficompl
out
mov
push
clc
jge
movsb
sub
je
pusha
add
dec
pop
cmpsb
mov
pop
push
sub
adc
jne
mov
mov
adc
jbe
adc
je
push
divl
jmp
jo
das
sbb
or
jp
cmp
jge
and
cmp
or
ret
inc
clc
movsl
push
pop
leave
ret
mov
dec
leave
sbb
cld
dec
clc
cld
lock
and
sbb
shll
cld
pop
inc
cmp
push
sub
mov
loope
mov
jne
shlb
mov
or
lcall
mov
and
mull
add
push
push
jne
sbb
idivl
ja
neg
cs
es
clc
jmp
enter
in
pop
and
lea
sbb
movsl
or
fisttpl
adc
ljmp
loope
scas
pusha
mov
add
fstpt
mov
dec
enter
xchg
fidivl
xlat
jb
mov
add
jbe
adc
jbe
je
fdivrs
mov
sub
shll
xchg
test
adc
iret
repz
cmp
sbb
sar
and
mov
adc
push
fwait
sub
jne
cmp
mov
rclb
or
jmp
mov
or
lock
loopne
sub
jae
push
je
pop
push
sbb
in
push
add
sub
mov
hlt
and
hlt
adc
lods
jge
mov
jmp
cmp
jg
mov
test
adc
lock
push
jne
push
mov
push
push
dec
dec
push
mov
sbb
movzbl
adc
push
fbld
mov
dec
decb
pushl
adc
dec
mov
out
enter
xorb
mov
and
mov
adc
and
aaa
out
pusha
or
add
inc
rorl
inc
cld
neg
push
sbb
push
jecxz
sarl
push
push
push
add
push
roll
cmp
inc
mov
fsts
push
pop
js
shrb
jmp
callw
xor
inc
or
xchg
loopne
xor
pop
movl
fcompl
add
add
ficoml
leave
int
and
fnstenv
sbb
or
dec
push
cmp
ret
push
nop
pop
push
jmp
add
push
cli
scas
add
xor
inc
push
push
mov
ljmp
lahf
mov
ret
mov
lea
mov
cmp
add
xchg
ret
inc
jmp
outsl
insl
jae
or
pop
jne
push
add
fimull
std
push
xlat
mov
adc
push
inc
cmp
jl
jmp
aas
rcr
jmp
xor
dec
mov
sbb
adc
popf
or
inc
ss
dec
out
or
sti
iret
jo
add
jno
jne
push
add
add
push
fdivr
xor
test
push
adc
mov
mov
outsl
aad
pop
pop
sub
sbb
sub
jl
sbb
mov
xor
call
sbb
movsl
or
mov
enter
pop
repz
add
mov
add
sub
adc
mov
je
mov
lds
xor
or
jge
mov
adc
push
push
or
mov
sti
push
das
jne
inc
je
jnp
push
jmp
sbb
sbb
fadd
outsb
shll
add
adc
add
movsl
inc
pop
add
add
ret
hlt
jp
xor
loop
jne
push
mov
inc
mov
sbb
nop
add
or
lds
repz
call
lods
ds
mov
push
aas
js
pop
mov
in
adc
int
add
inc
adc
xchg
lret
out
and
and
fadd
imul
and
dec
push
test
data16
aam
add
fsubl
data16
adc
push
loop
out
lahf
int
ljmp
jecxz
mov
scas
xchg
adc
or
or
xchg
jl
lret
mov
inc
sub
cwtl
or
idivb
popa
daa
mov
aad
int3
test
divl
or
cmp
xor
js
nop
jl
cmp
push
or
mov
and
xor
lods
dec
cmp
sbb
push
pop
rcll
daa
aaa
lret
pop
pop
loopne
mov
push
push
cwtl
movsb
jge
mov
ljmp
mov
push
jmp
jns
in
lods
jle,pt
std
std
scas
adc
pop
mov
jecxz
jnp
dec
leave
push
test
ret
jmp
test
sub
add
add
rcrb
out
push
sbb
fldl
pop
or
arpl
mov
mov
pusha
xchg
mov
fsubrs
sbb
mov
inc
js
jae
add
xor
icebp
jmp
es
xchg
outsl
xor
rcrb
sub
push
lods
pop
and
lock
cmpl
fdivr
push
clc
imul
ss
pop
or
push
mov
or
imul
xorb
adc
or
pop
pop
inc
popa
mov
mov
sbb
mov
test
adc
lret
je
pop
dec
aaa
jmp
push
js
sbb
push
xor
cmc
rclb
ljmp
js
inc
mov
int3
pop
sbb
lret
sub
pop
ret
insl
mov
test
jno
push
xor
add
cmp
and
pop
xchg
outsl
aas
sbb
int3
call
push
mov
xchg
sbb
jle
xor
sub
jecxz
add
add
hlt
or
andl
or
test
je
xchg
popa
cld
lock
lock
es
cmp
and
cmp
or
jmp
cmp
test
pusha
push
xorl
movsbl
add
popf
mov
scas
inc
faddl
in
mov
imul
out
push
push
in
jae
in
stc
incl
out
push
sti
es
mov
pushf
mov
inc
addb
add
xlat
dec
pop
dec
lcall
push
cmpl
adc
xor
pop
xor
in
mov
outsl
pop
out
add
notl
stc
mov
and
clc
sub
mov
dec
jb
push
dec
sub
test
dec
inc
sbb
dec
pop
mov
xchg
in
lods
fldl
test
sahf
add
mov
or
pop
call
xchg
adc
test
sbb
cs
sub
or
or
inc
adc
jae
add
adc
sub
pop
jb
sbb
hlt
inc
jbe
or
inc
pop
push
sub
clc
mov
xchg
sbb
in
je
in
sub
daa
xor
add
fmuls
push
xchg
call
xchg
cmp
mov
pop
cmp
into
imul
jne
push
sub
xor
movsl
fimull
lock
xor
fldenv
andl
push
xor
movb
out
fistl
dec
mov
add
xchg
mov
or
roll
ret
jmp
push
loop
mov
iret
jns
aam
xchg
rcrb
mov
jp
test
in
inc
mov
mov
fwait
mov
popl
sub
fldenv
add
in
cmp
daa
mov
leave
push
mov
cld
xor
or
int3
mov
mov
xor
cld
adc
cmpsb
fadds
test
or
std
in
inc
and
daa
cwtl
push
insb
xor
inc
add
inc
pop
pop
mov
in
jo
xor
imul
add
dec
ss
add
ss
xor
xorb
aaa
mov
cmp
lret
sub
mov
es
xor
shll
pop
dec
fstp
data16
xor
cmp
mov
shlb
shll
jo
xor
ss
xlat
pop
rolb
call
pop
negl
xor
push
out
xor
mov
lcall
xor
mov
ja
adc
cld
shll
adc
fwait
rolb
fdivrl
scas
xor
xor
outsl
jae
popa
or
jo
je
and
pop
popa
outsl
add
jo
movsl
or
outsb
sbb
add
jae
push
or
jo
loopne
adc
add
push
add
pop
fcoml
push
add
out
xchg
sub
scas
adc
mov
adc
adc
add
inc
test
or
push
popa
insb
jne
inc
js
out
adc
pop
jbe
cltd
adc
fimuls
addps
and
jge
inc
mov
neg
mov
imul
xchg
sbb
psubsw
pop
js
or
jae
imul
adc
dec
imul
str
xor
add
clc
fiaddl
ficoms
imul
inc
jb
jb
sub
pop
cmp
inc
inc
daa
push
pop
mov
add
dec
popa
sti
int3
adc
mov
mov
pop
push
lods
dec
or
insb
outsl
jnp
or
dec
sub
or
jns
pushf
test
movsl
adc
jb
sub
pop
jmp
divb
in
push
cmp
lsl
adc
add
mov
inc
add
adc
aam
lea
xchg
cmp
inc
das
mov
mov
insb
jmp
rclb
lods
lods
inc
rcr
insl
jmp
add
dec
test
adc
ds
dec
pop
cmp
loope
inc
mov
sarb
gs
insl
jnp
testl
push
pop
insl
enter
adc
push
outsb
push
fs
jo
pop
jo
sbb
test
pusha
adc
and
out
daa
jb
push
mov
add
pop
jae
clc
cmp
mov
testb
fs
adc
push
jno
sub
outsl
mov
sti
enter
add
subb
rorl
aaa
stos
out
dec
iret
sub
push
inc
mov
adc
jb
mov
or
fdivs
pop
loopne
flds
iret
xor
sub
and
xchg
outsb
and
and
leave
gs
inc
cmp
push
pushf
add
lock
pop
adc
pop
inc
add
pop
add
dec
jg
add
addl
cmp
movsl
xchg
incb
pop
aas
inc
fisubs
jmp
add
add
add
loop
dec
and
add
pop
outsb
mov
cmp
fdivs
insl
add
pop
push
call
outsl
pop
jecxz
shlb
adcl
cmp
sub
int3
mov
push
jnp
flds
add
arpl
pusha
andl
push
jb
subl
popf
arpl
inc
mov
bound
and
inc
outsb
and
add
add
dec
shlb
adc
mov
sub
add
subb
cmp
xor
or
and
or
popa
adc
xchg
insb
adc
inc
aas
fisubs
add
dec
jns
out
ret
imul
outsl
jns
adc
add
in
push
or
inc
jae
add
xor
jbe
cs
or
dec
sub
out
mov
das
outsb
ret
push
and
jae
movsl
adc
mov
mov
inc
sarl
push
jbe
je
add
imul
adc
sarl
ret
je
inc
xor
icebp
sahf
and
mov
movb
insb
mov
mov
iret
andb
ja
aas
mov
mov
lcall
aas
repz
stc
js
idiv
call
xor
dec
xor
jae
jp
mov
xchg
xor
xor
xor
call
xor
xor
xor
xor
xor
add
inc
xor
xorb
fwait
xor
xor
xor
xor
xor
lret
decl
xor
pop
xor
loop
js
xchg
ss
aaa
pop
aaa
jo
mov
pushl
shll
sbb
inc
cmp
pop
cmp
xchg
das
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
cmpsl
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmpl
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
js
xchg
mov
cmp
cs
imul
xchg
mov
lcall
ds
ds
inc
aas
dec
mov
aas
pop
aas
ja
test
aas
popf
aas
aas
int
fstpt
loop
hlt
adc
loope
pop
or
xor
xor
xor
xor
pop
xor
ja
mov
out
xor
xor
xor
xor
xor
xor
xor
xor
add
sub
xor
dec
mov
ljmp
add
jmp
sbbb
shl
add
adc
cli
decl
jbe
imul
xchg
lret
jecxz
add
push
out
adc
decl
insb
popa
ss
hlt
xchg
cmp
mov
xchg
movsl
aam
mov
adc
lret
in
enter
sub
in
and
inc
clc
push
fs
xor
popf
mov
jl
cwtl
sti
in
jp
mov
popa
orb
decl
fucomip
in
fstl
add
mov
or
mov
pop
jbe
sbb
pushf
inc
cli
pushl
shr
cmp
ret
ds
js
pop
inc
and
inc
aaa
jbe
xchg
cwtl
add
jmp
adc
dec
test
jg
jmp
cli
cmpsb
mov
pop
leave
les
movsl
sub
and
or
pop
add
call
mov
arpl
rorl
repnz
jl
push
pop
lret
scas
decl
std
cmp
cmp
lret
sub
les
pusha
push
adc
cmc
pushl
pop
repz
and
mov
xchg
call
cmpsl
dec
push
out
arpl
or
out
xchg
mov
scas
iret
jae
je
pop
pop
aas
cwtl
popf
ja
enter
push
movsb
jmp
lcall
sub
mov
xor
pop
cmc
movsb
xlat
int
and
xor
in
xchg
call
sub
pushl
aas
push
ja
xlat
pop
push
out
idivb
mov
fs
repnz
ror
daa
in
sbb
lcall
jns
jge
insl
lcall
cmc
iret
aaa
mov
push
clc
sbb
insb
sbb
add
testl
fiadds
and
mov
scas
fbld
sbb
fiadds
scas
mov
sbb
dec
call
mov
pop
xchg
out
loope
rdtsc
test
out
jnp
cwtl
pop
stos
push
ja
inc
hlt
push
call
add
cmc
sti
cmp
push
xor
xcrypt-cfb
cmpsl
out
sbb
decl
push
fs
and
aam
shlb
sar
jnp
lods
cli
sti
stc
or
mov
push
jae
mov
sub
cwtl
push
jae
jecxz
call
jmp
sbb
jbe
xchg
jns
adc
call
pop
out
fcomi
std
xor
daa
mov
repnz
sysexit
call
test
adc
cld
and
decl
frstor
inc
xchg
push
push
cs
push
cld
xchg
xor
inc
fsts
incl
cltd
cmp
cmpb
pop
outsl
dec
push
cmpsb
add
push
aad
push
fwait
cmp
dec
cmp
mov
add
leave
pop
dec
push
cmp
outsl
add
fs
mov
cltd
mov
das
xchg
sbbb
fdivrp
call
imul
test
cld
pop
cmpl
insl
pop
xor
decl
clc
sbb
xor
fdiv
mov
out
mov
ljmp
jecxz
push
pop
lcall
sub
inc
and
fucomi
sbb
xor
xlat
xchg
clc
or
push
mov
adc
pushl
xchg
mov
stc
fstpl
outsb
enter
repz
data16
lock
insb
pop
sti
fyl2xp1
jle
pushf
fistpll
mov
jo
int
inc
sti
lods
push
in
cmp
pop
cmp
xchg
xor
push
jno
add
jbe
decl
add
add
nop
push
inc
aas
cmc
xchg
aad
idivb
xchg
lea
sti
aad
xchg
dec
mov
shll
cmp
addb
push
cmp
mov
in
mov
sti
lret
jp
test
cwtl
es
decl
jmp
test
sbb
push
dec
push
xchg
jl
mov
test
mov
ljmp
std
dec
push
mov
fldt
inc
adc
push
or
fimull
or
mov
fists
addr16
jae
lahf
xchg
xchg
gs
pusha
add
cli
call
dec
not
inc
mov
das
sub
mov
inc
hlt
sahf
cmp
decl
mov
cmpsl
sbb
inc
cmpl
and
test
pop
dec
inc
jp
nop
xchg
call
xchg
sti
scas
lcall
test
icebp
jno
add
aas
push
sub
imul
testb
cmpsl
mov
pop
pop
sbb
decl
pop
pop
jb
jle
dec
movsb
aad
push
push
fidivl
add
and
test
push
xchg
jg
aad
ljmp
fsubl
or
hlt
lcall
inc
push
call
inc
mov
test
insb
sub
sub
insl
adc
adc
xchg
add
aam
ror
cmc
lea
jmp
push
dec
std
lcall
sbb
jg
out
loopne
dec
cltd
fs
pop
repz
inc
insl
mov
enter
pop
cmp
lcall
repz
pushf
dec
orb
or
andl
pushf
ja
push
cmc
test
repnz
pop
mov
adc
pushf
sbb
insl
ss
jg
pop
pop
rcll
push
das
pushf
inc
outsl
add
ret
aaa
xchg
addl
hlt
adc
mov
in
or
idivl
adc
sub
push
push
loopne
push
arpl
dec
imul
outsl
outsb
scas
adc
xor
testb
add
incl
ljmp
pop
shrb
mov
orb
das
ljmp
daa
in
stos
push
jne
adc
fbstp
add
insl
gs
movl
jle
push
shlb
jb
mov
pop
pushf
and
jne
loop
or
decl
sub
insl
inc
mov
ljmp
fimull
nop
inc
pop
push
dec
mov
jg
jmp
mov
test
or
jl
or
sti
inc
adc
cmpsb
movsb
and
cmp
sbb
lds
fs
iret
enter
incl
jmp
push
mov
adc
and
sbb
mov
jnp
push
insb
push
mov
sar
mov
dec
and
in
inc
jl
je
test
pop
sub
pushl
ja
adc
xor
jmp
ss
mov
movsl
mov
push
push
frstor
xbegin
inc
in
aad
dec
je
jp
movb
sub
xor
inc
push
fs
jmp
and
jle
dec
mov
push
xlat
push
std
jl
jo
push
dec
pop
cltd
or
incl
shrb
stos
lods
iret
scas
in
outsl
insb
jno
test
mov
out
pop
mov
inc
js
jge
xor
sub
cmc
stos
les
dec
sbb
ljmp
push
lock
mov
sub
dec
push
push
ss
xchg
cs
ljmp
repnz
sahf
xchg
inc
push
mov
repz
add
mov
ljmp
mov
incl
sub
lahf
and
xor
loop
fistpll
or
popf
dec
inc
cmp
ljmp
ljmp
std
insb
js
scas
out
push
xlat
adc
inc
rol
mov
cmp
jge
fstpl
jmp
dec
outsl
jmp
push
add
xchg
dec
lds
insb
mov
call
lock
in
aam
stos
sub
push
push
inc
or
aaa
inc
fidivs
ljmp
loop
das
loopne
push
mov
or
flds
jecxz
das
mov
push
insb
fsubl
insl
xor
hlt
and
imul
push
sub
dec
push
jmp
je
das
jmp
ror
aas
jne
and
mov
fcom
and
popf
dec
cmp
pop
adc
repz
pop
addr16
out
cmp
incl
sub
pop
movsl
or
mov
fbld
fnstenv
and
cld
xchg
into
rorb
push
mov
fadds
xchg
jp
gs
neg
jns
lcall
rolb
or
lds
fnstcw
push
flds
mov
add
dec
cwtl
test
jb
sbb
jl
loopne
inc
or
jbe
inc
sub
fbld
leave
int3
outsl
and
aaa
xchg
and
cmpsb
xor
jg
pusha
icebp
aam
cmp
lock
xchg
divb
in
mov
stc
sbb
jns
sub
movsl
add
mov
sub
jge
jns
test
jmp
mull
xchg
jg
stos
xor
inc
mov
fscale
lcall
xor
aas
and
mov
in
insl
push
pop
mov
pop
xchg
xchg
pusha
mov
imull
mov
xor
stos
dec
call
inc
fiadds
mov
lods
ficomps
inc
addr16
jns
pushf
out
add
push
repz
jbe
or
inc
inc
or
jp
inc
aam
dec
mov
pop
fwait
movsl
adc
test
subb
icebp
call
les
leave
shl
xor
flds
data16
fimuls
aad
push
pushf
ljmp
into
jge
inc
sbb
push
sbb
lret
mov
push
inc
lea
daa
jns
in
fnstsw
lcall
push
push
dec
pop
mov
jae
fcmovnu
pushf
push
jmp
mov
adc
sub
cmp
gs
push
jl
or
xor
jmp
push
repz
fistpl
jmp
mov
pop
cmp
mov
pushl
clc
cmp
and
jae
stc
sub
in
fdivp
insl
cmp
roll
repnz
call
fsubrs
and
cltd
sub
pop
daa
mov
ljmp
inc
push
outsb
outsb
push
icebp
lret
xchg
aad
or
addr16
pop
add
jbe
jne
adc
sbb
nop
jo
xchg
cmpsl
pop
test
into
mov
sub
inc
arpl
pop
inc
push
ljmp
std
call
and
sbb
xorl
cmp
fstl
push
lds
dec
xchg
and
stc
push
xor
adc
push
daa
mov
jg
inc
enter
pop
adc
scas
notl
loope
adc
into
sbbb
xlat
dec
jmp
ja
ret
rclb
and
add
shlb
aam
add
lea
loope
adc
cltd
cmp
push
hlt
ljmp
push
or
iret
xchg
xchg
mov
in
rcrl
loop
std
das
pop
jns
mov
cmp
mov
incl
hlt
jo
jmp
hlt
lea
and
jns
jns
lcall
jg
test
daa
jb
out
insl
hlt
sub
dec
inc
mov
or
jg
pushl
loop
mov
mov
jg
pop
mov
fucomip
leave
cltd
les
ss
sbb
add
call
mov
ret
jg
or
insl
pop
loope
sbb
leave
hlt
sbb
fwait
ret
scas
inc
ret
mov
lcall
sub
shll
nop
cmpxchg
clc
lcall
xchg
pop
xor
jmp
jge
xchg
jbe
cli
into
fisubrl
jge
incl
mov
lahf
push
in
push
adc
xchg
inc
mov
push
call
mov
xchg
mov
cmc
cmp
push
mov
dec
push
mov
lcall
rcrl
push
sbb
mov
shlb
mov
mov
rcrb
sbb
mov
adc
aaa
and
fisttps
ds
pcmpeqb
push
mov
clc
dec
cld
jne
rcrb
mov
mov
lods
jg
jmp
xor
jns
add
popa
data16
in
pop
and
aas
bound
in
outsl
incl
popa
ljmp
lods
push
daa
cmp
pop
testl
fiadds
ljmp
jp
call
movsl
pushf
je
rcr
outsb
cli
jg
sbb
sub
ljmp
xchg
dec
jge
xor
sbb
sub
iret
insb
call
repz
pop
or
mov
fists
mov
lret
push
dec
jg
ret
mov
jae
xchg
je
lcall
jge
in
repz
das
je
pop
and
mov
fld
pop
les
movsb
stos
jg
call
scas
mov
dec
mov
mov
std
fistpll
imul
mov
orb
push
sti
std
mov
mov
daa
loopne
jns
dec
push
pop
popa
imul
decl
fs
mov
inc
pop
add
pusha
dec
jnp
mov
aad
icebp
jl
push
push
mov
fs
xchg
aaa
mov
lcall
lds
daa
sbb
insl
shll
aam
mov
xor
pop
std
lea
and
ret
stc
in
mov
sti
and
lcall
adc
sub
ss
sbbl
fstpt
cmc
jp
pop
sbb
pop
push
and
imul
cli
fldt
pop
cmpsb
and
and
xor
dec
jo
ret
iret
insb
cld
inc
in
ljmp
sub
stos
xchg
sbb
pmaddwd
cltd
inc
sbb
and
sub
out
pop
std
pop
call
lcall
in
aaa
sub
cld
test
or
sbb
lcall
decl
xchg
call
cmp
sub
roll
bound
dec
test
adc
mov
decl
orb
add
cmp
lods
bnd
mov
call
fistps
xor
popf
pop
dec
sti
mov
lods
pop
mov
jg
lcall
jo
outsb
lea
clc
and
popa
icebp
cmc
test
lcall
cmpsb
cmp
add
mov
xlat
cld
and
push
xchg
test
fbstp
repnz
js
clc
mov
push
out
mov
std
call
and
pop
adc
sub
add
push
test
shll
or
fucomip
das
out
test
push
jp
insl
inc
call
or
xchg
cli
incl
popf
fmull
fiadds
call
mov
ret
mov
popa
push
subl
xchg
dec
repz
cmpsl
test
loope
pop
dec
mov
mov
and
jns
imul
pop
cvtps2pi
xchg
loope
dec
fstpl
mov
inc
sub
or
add
mov
dec
popa
ror
mov
and
xchg
and
aad
loop
outsl
mov
fidivl
dec
push
and
or
mov
xlat
daa
xchg
mov
icebp
mov
sarb
loope
cmc
call
mull
add
adc
mov
add
mov
sahf
fists
lret
cmpsl
icebp
push
inc
sub
or
inc
or
outsl
inc
rol
outsb
mov
rorb
in
push
cmp
cwtl
xlat
loopne
sbb
rcll
lret
jb
ljmp
pop
std
push
test
dec
cmp
xchg
sub
sarb
stos
push
in
mov
aad
call
xor
mov
lret
loopne
xor
in
insb
mov
mov
sub
shrb
pop
dec
cmpsl
sbb
mov
jl
mov
ljmp
hlt
cli
int3
sbb
es
test
loop
dec
mov
jmp
outsb
cmp
inc
or
pop
movsl
cld
iret
jmp
xor
dec
sbb
mov
lcall
das
or
xlat
mov
or
aaa
icebp
call
pushl
pop
shrl
ja
movsl
jae
mov
lock
cmp
decl
mov
and
dec
add
cmpsl
xor
mov
fistps
add
incl
sti
pop
iret
pop
cmp
inc
mov
std
sbb
jge
dec
lods
adc
mov
inc
insl
aaa
lea
jg
rol
pusha
test
ret
out
int3
outsb
fwait
andl
clc
call
lods
xchg
ljmp
cltd
shl
sahf
mov
in
decl
sbbl
jl
push
sbb
push
enter
push
jg
lods
hlt
jnp
cli
movsb
xlat
sahf
mov
push
out
push
inc
sbb
shll
lret
stos
mov
xor
dec
cli
idivl
outsl
cmp
or
rolb
icebp
jmp
test
shlb
outsl
outsl
mov
pushl
inc
xchg
rolb
movsl
aam
lcall
push
xlat
inc
roll
mov
cltd
lcall
ss
lcall
cmp
in
dec
sti
icebp
dec
loopne
int
or
adc
jnp
jae
add
loopne
lcall
cmp
xor
xorl
arpl
jmp
adc
inc
cmp
xlat
in
rcl
lds
in
jp
mov
xchg
std
jp
loop
jg
inc
mov
addr16
movsb
out
je
loopne
push
ljmp
pop
cmp
fs
iret
stos
adc
mov
add
lods
jl
push
mov
nop
ja
or
mov
jnp
outsb
fcomps
or
push
loope
cmpsb
imul
dec
mov
pop
decl
mov
mov
sti
fidivrs
jo
push
stos
mov
push
decl
fnstenv
fadds
cmp
dec
jp
dec
lock
addb
add
mov
cmp
ret
inc
jmp
mov
ljmp
jb
nop
sbb
mov
mov
fbld
and
jmp
xor
jns
call
xor
xchg
jmp
mov
cld
jecxz
xchg
xor
sbb
lcall
les
std
dec
ss
cmp
adc
inc
sti
mov
jo
xorb
dec
mov
test
decl
movl
lds
mov
and
scas
icebp
jmp
daa
clc
add
and
pop
fdivl
dec
ss
pop
lods
jb
negl
dec
ret
fcmovne
pop
push
mov
cmpsb
xor
jg
addb
push
pusha
sub
push
aad
inc
pop
jmp
fcomi
lcall
repnz
movsb
loop
pop
push
adc
and
jecxz
push
mov
je
sarb
fistpll
mov
mov
cli
movsl
fisttpl
cmp
je,pt
ljmp
mov
push
and
mov
jp
daa
inc
xchg
mov
ja
nop
mov
mov
mov
pop
nop
mov
decl
jecxz
stos
repnz
int
and
xchg
imulb
in
and
jmp
js
data16
mov
push
jo
pop
mov
jmp
push
add
jmp
cli
aas
inc
pop
xor
pop
addl
bound
addb
or
std
outsl
jge
pop
je
sbb
adc
jno
xor
mov
decl
cld
sub
loopne
jecxz
ljmp
outsl
test
jge
mov
jg
mov
aad
cmp
in
add
cli
dec
inc
dec
insl
or
ss
fdivrp
ljmp
stos
enter
shll
orb
sahf
mov
push
adc
fldenv
pop
xor
movsb
scas
enter
xchg
mov
hlt
pop
addr16
outsb
inc
in
fistpl
add
in
push
aas
sbb
mov
loope
ja
push
movzbl
cs
add
call
mov
ja
lods
push
cmpsb
pop
cltd
push
sub
xchg
or
sti
lock
sbb
decb
dec
mov
ja
xchg
ljmp
and
xor
addb
jno
jge
mov
out
pop
jg
test
xchg
mov
dec
sub
jne
pop
mov
jnp
lret
dec
cwtl
mov
fucomip
cld
push
ljmp
cmp
push
xor
cmp
mov
bound
inc
add
push
mov
mov
push
std
mov
or
lret
cmp
jge
mov
test
arpl
shrl
jmp
clc
popa
mov
pushl
aam
mov
push
inc
and
jmp
pop
add
pop
jg
aad
mov
popf
jecxz
mov
in
lods
inc
mov
outsb
mov
movsl
cmp
dec
aaa
addl
sarb
inc
test
jg
jb
push
data16
cs
aaa
pop
adc
js
out
jle
movsl
das
icebp
jmp
adc
test
inc
fstp
popf
aas
adc
decl
negl
jns
shrb
dec
cwtl
xchg
or
push
mov
xchg
add
jmp
cwtl
and
jg
in
add
jne
adc
mov
shr
xchg
push
mov
cmp
insb
adc
sbb
int
or
sub
icebp
and
push
mov
iret
pop
xor
sub
xchg
es
inc
dec
shll
xchg
ret
cmp
sarb
jbe
je
inc
lret
ja
jg
mov
ljmp
notl
imul
fbld
out
cmpsb
les
cmp
pushl
cli
incl
out
lret
mov
pop
jbe
inc
leave
sub
pusha
mov
stc
inc
push
inc
and
decl
cmpsl
adc
faddl
ljmp
jmp
push
stc
xchg
cmp
fnstsw
inc
inc
enter
sub
enter
jo
adc
sub
jg
adc
fcoml
xchg
stos
loop
xchg
adc
sar
jg
jmp
pusha
adc
xchg
cld
call
pop
adc
sub
adc
sbb
inc
ljmp
dec
popa
add
lods
or
mov
daa
ret
mov
decl
push
lret
hlt
add
xor
sub
dec
mov
mov
bound
aad
mov
push
das
je
cmp
fistl
inc
lahf
adc
sbb
ja
lcall
jno
inc
and
pop
cmp
decl
push
int3
jle
outsl
add
and
push
dec
mov
mov
xchg
pop
ljmp
xchg
cwtl
or
push
inc
adc
das
icebp
das
idivl
mov
xor
rolb
push
aad
idiv
movsl
call
repz
xchg
into
mulb
fucomi
mov
inc
cmp
mov
pushl
xor
fnstsw
mov
dec
scas
jmp
lcall
and
fsubl
inc
imul
push
lahf
fsubs
call
mov
jle
ja
pop
sub
call
push
repnz
mov
mov
fwait
xchg
arpl
lea
or
testb
stos
add
jg
data16
inc
outsb
repz
iret
xlat
inc
cmc
sub
xchg
sbbl
lock
in
popf
cmpsb
jle
jo
in
jae
cltd
or
hlt
or
out
iret
repz
push
fistl
mov
adc
das
mov
imul
push
clc
movsl
data16
inc
jno
add
pop
loopne
or
not
xchg
jbe
push
and
cmp
mov
leave
std
jg
lea
add
mov
pop
fbld
sbb
push
in
outsb
insb
adc
ljmp
es
push
mov
test
push
cmp
std
andb
cli
dec
dec
fwait
jae
aad
ret
xchg
les
pushl
jno
cs
scas
mov
mov
mov
xor
mov
add
adc
test
orl
jle
outsb
in
ret
call
sarl
jg
jg
lcall
pop
jb
pop
sbb
push
stc
jae
cltd
or
mov
mov
pushl
xor
push
push
ficoml
leave
inc
mov
call
add
into
addr16
and
mov
jecxz
call
pop
stc
pop
sbb
in
push
shlb
xor
data16
mov
jg
xchg
clc
mov
mov
sbb
xor
pop
mov
mov
jbe
sbb
sbb
out
inc
loop
stc
outsb
ljmp
dec
fstpt
loop
imul
loope
mov
imul
adc
xchg
xchg
ja
pop
push
stc
sub
cld
push
sub
cli
jg
mov
mov
lcall
mov
imul
call
and
mov
cmc
pop
out
cwtl
cld
imul
mov
mov
pushl
rcrl
lock
mov
add
jmp
push
add
mov
cmp
push
mov
frstor
add
jg
call
out
push
rcll
cmp
outsb
fistpl
sbb
lret
push
das
pop
cli
decl
cltd
push
daa
sbb
sub
decb
test
jg
das
cld
test
push
outsl
xchg
cmp
sub
and
inc
mov
ljmp
mov
fs
rcll
sbb
cltd
hlt
addr16
xchg
jl
popf
les
or
fistpll
add
xchg
ret
fs
out
incl
pop
pop
xor
dec
xor
push
js
and
jne
push
add
or
js
dec
mov
in
pushf
mov
ljmp
xchg
repnz
xchg
adc
pmaddwd
cmc
fisttps
inc
cltd
mov
shlb
clc
mov
test
pusha
mov
pushl
test
jge
xor
leave
mov
pop
sbb
jno
or
jg
sub
sbb
jo
adc
add
fwait
icebp
pop
jg
sub
rclb
hlt
jnp
shl
jnp
mov
mov
outsl
mov
jge
ja
aaa
hlt
xchg
int3
xor
adc
and
jle
mov
call
xchg
sub
std
lahf
cs
mov
inc
fldt
pop
rcrl
sbb
jg
cmp
mov
cmp
frstor
and
lock
pop
add
sbb
std
fs
or
stc
and
insl
pop
pop
ljmp
mov
inc
lea
add
les
in
jg
push
mov
sub
add
movsb
sbb
dec
leave
push
cmp
idivl
mov
lret
add
lcall
mov
inc
push
leave
pop
dec
test
mov
pop
inc
mov
shlb
sub
fmull
sar
testl
lret
xchg
sbb
dec
cld
sub
inc
shll
inc
fldenv
mov
js
das
cld
pop
incb
pop
jae
je
dec
adc
mov
loop
jbe
mov
test
stc
mov
std
pop
cmc
dec
dec
push
jmp
aam
test
push
scas
xchg
sahf
mov
or
cmp
jno
sbbl
and
inc
loope
hlt
ljmp
cmp
aam
lea
add
push
ljmp
test
inc
das
jl
ds
cmpsl
or
or
clc
ficomps
mov
xor
jae
cwtl
sub
pop
mov
and
andb
icebp
sbb
xorl
push
fs
pop
sbb
sub
mov
cmp
push
cltd
mov
mov
add
push
cmpsb
xor
iret
push
xchg
jecxz
lret
mov
inc
insb
sub
sbb
jp
inc
out
int
lret
lcall
loop
or
aaa
dec
imul
sub
stc
cwtl
push
xchg
add
sub
jle
arpl
adc
aam
sbb
dec
aas
fcoml
push
fcmovnb
sahf
out
jg
jmp
ds
jp
sub
rorb
loopne
dec
movsl
mov
popa
js
incl
std
ret
stos
add
sbb
ds
lcall
add
loop
repz
and
iret
sarb
pop
mov
inc
subl
int
shrl
xchg
stc
test
xor
xor
jl
mov
pop
xchg
xchg
lahf
testl
jl
sub
stc
das
lock
jmp
jg
jne
mov
int
or
push
imul
mov
mov
and
mov
dec
jo
sbb
imull
push
dec
add
jle
jge
test
pusha
cmpsb
daa
cmpsb
orl
push
jns
loop
pusha
push
lretw
dec
pop
or
xor
or
and
in
inc
lcall
adc
mov
dec
jl
push
outsb
incl
mov
mov
and
add
lret
adc
pop
clc
ljmp
xor
lods
pop
sti
lret
loope
mov
sub
pushl
roll
arpl
adc
ja,pn
pop
icebp
xor
adcl
xchg
icebp
in
ljmp
sub
lock
outsl
xor
pop
imulb
xchg
jnp
inc
and
test
enter
test
stc
and
lods
test
pop
es
and
and
clc
stc
push
scas
jl
pop
mov
push
pop
mov
inc
enter
mov
xchg
push
mov
loope
imulb
rcll
xchg
int
lcall
xor
ss
mov
pusha
sbb
mov
lret
fucom
cwtl
call
mov
push
in
outsb
inc
jb
popf
mov
fs
pop
add
push
cs
incl
xor
xchg
and
push
ss
mov
aad
jo
mov
loop
lcall
mov
lock
mov
aaa
add
fsub
iret
ljmp
das
jmp
arpl
ja
lods
jne
jns
mul
xchg
mov
clc
subb
shl
mov
add
icebp
jmp
fisubrs
sahf
addl
jmp
sub
mov
imul
cmpsl
sbbb
call
or
cli
in
pop
insb
insb
pop
clc
pushf
nop
adc
mov
pusha
dec
gs
bound
mov
mov
jb
lods
jp
movsb
lret
dec
jg
fldl
in
push
daa
lahf
inc
scas
mov
stos
repz
push
inc
cmpsb
shlb
clc
movsl
lcall
icebp
mov
leave
pop
mov
in
inc
add
shlb
fsincos
mov
int3
dec
orb
mov
fdivrl
cmpsl
push
sub
stc
outsl
into
jae
enter
insb
fs
lods
sbb
xcrypt-ofb
cmpsl
jmp
push
mov
jg
or
scas
add
stos
frstor
dec
mov
mov
call
call
cmp
and
cld
daa
xchg
mov
mov
cmpl
cmp
push
outsl
test
pop
aad
push
xchg
cwtl
test
dec
ljmp
xor
sub
sub
mov
xchg
inc
mov
mov
out
cmp
decl
mov
aam
hlt
sub
outsl
fidivrs
inc
fidivs
movsl
push
mulb
jbe
mov
addl
cmp
mov
xchg
rolb
ljmp
jbe
lret
sbb
test
adc
inc
sub
movl
aaa
std
out
sahf
out
iret
jle
add
mov
pop
test
stc
xchg
hlt
gs
cmp
scas
sarb
xchg
in
push
call
or
into
outsb
roll
fwait
mov
mov
test
test
jg
incl
dec
sub
add
out
xor
call
imul
push
enter
lcall
adcb
xchg
adc
ljmp
hlt
ds
in
pop
std
mov
pusha
pop
insl
cwtl
mov
mov
and
mov
pop
jle
mov
subl
add
jbe
call
jp
imul
in
push
cli
push
inc
xchg
aad
jl
and
sbb
movsb
das
cmc
add
pop
jg
cmpsl
and
jae
imul
cmp
ljmp
sahf
sub
sub
stc
outsl
cmp
jns
outsl
out
fsubrs
sub
mov
adc
mov
push
lods
xchg
push
inc
cmpsb
imul
add
pushf
jle
repnz
loopne
cmc
js
movsl
inc
mov
stc
bound
jmp
pop
xor
sub
sbb
mov
and
add
adc
mov
ljmp
lock
push
jns
and
sub
insl
dec
dec
mov
sahf
mov
lcall
sub
xor
or
xor
gs
mov
pop
scas
xchg
and
pushf
repz
xor
decl
es
dec
mov
sbb
ds
ds
mov
andl
ror
push
sbb
enter
adc
mov
jl
cwtl
push
and
sbb
test
jecxz
inc
pushf
cmc
xor
call
cmp
fs
mov
popa
insl
add
mov
lret
sahf
lods
lods
inc
insb
dec
and
cmp
mov
icebp
adc
das
aad
test
out
and
fchs
sbb
push
jmp
and
xorl
inc
in
sbb
fdivr
call
xchg
dec
add
scas
leave
dec
pusha
add
inc
cli
push
add
mov
imul
jae
je
js
repz
mov
arpl
mov
call
call
pushf
add
imul
mov
jmp
call
mov
push
movsb
clc
shrb
pop
int3
mov
push
aas
sub
fdivl
adc
adc
arpl
dec
mov
hlt
cmp
pop
cmp
hlt
movsl
out
rcrl
loop
stos
xchg
icebp
jns
dec
stos
xchg
xor
scas
sbb
test
jmp
jmp
sub
jge
add
push
push
mov
sub
jg
rcrb
and
jae
xor
lret
adc
stos
jl
popa
or
aaa
incb
out
sbb
push
sbbb
push
sbb
mov
ljmp
outsb
bound
adc
lods
ljmp
andl
stc
mov
cltd
enter
jmp
xchg
repz
sarl
in
or
call
cmpsb
repnz
push
push
outsl
aaa
fcoms
vpcmpeqd
test
sub
daa
xor
incl
out
mov
and
cli
in
loop
mov
mov
fmuls
shrb
aaa
jae
mov
mov
scas
mov
jnp
rolb
outsb
xor
cmp
gs
and
xchg
mov
xor
xor
sbb
repz
fsts
push
sar
mov
or
ret
dec
sbb
lock
loopne
std
aas
jo,pt
xor
jl
mul
das
jl
call
fisttpll
bound
cmp
sbbb
push
cmpb
loopne
lahf
jb
out
push
jmp
daa
xor
call
pop
jmp
cmpsl
enter
ds
fisttpll
jle
movsl
mov
sub
ss
jmp
mov
pop
leave
or
icebp
sbb
data16
cmp
repz
jno
lock
mov
jp
jl
mov
pushf
jnp
pushf
push
dec
stc
das
stos
fnstenv
in
cmp
push
lcall
jb
int
mov
mov
pop
leave
inc
icebp
jmp
ret
jno
push
cmp
cld
inc
int
incl
mov
adc
jg
das
out
or
cmp
mov
movsb
lret
jmp
fsubrl
test
mov
mov
xlat
test
jg
daa
xor
push
xor
pop
jo
imul
loop
idiv
xchg
cli
jmp
push
fdivrs
add
in
sub
lods
outsl
push
or
pop
mov
cmp
mov
rcrl
pop
int3
mov
stos
scas
gs
mov
mov
fimuls
sbb
mov
lods
mov
loope
adc
clc
es
push
scas
pop
sub
or
push
sbb
push
jecxz
xchg
fbstp
push
push
fdivp
xchg
sahf
out
enter
sarb
icebp
call
mov
adc
push
gs
xchg
add
insb
mov
cltd
add
cmpsb
sbb
roll
mov
xlat
shrd
ss
shll
fidivs
mov
mov
xchg
mov
sti
les
sti
jcxz
jmp
mov
pushl
jo
jbe
dec
or
cmp
fucom
jg
popl
cmp
sti
or
sti
lods
mov
rcrb
loop
push
imul
push
mov
jg
mov
sbb
aaa
mov
lret
bound
popa
pop
push
fwait
cmp
js
fwait
out
xor
popf
cltd
fistpll
mov
mov
sbb
aaa
cli
lcall
call
pop
sbb
scas
ret
and
cwtl
insb
mov
cmp
sub
adc
xchg
sub
outsl
cwtl
adc
jle
lods
pop
pusha
cmp
ss
lcall
or
xor
pop
inc
out
jmp
out
ret
push
add
call
mov
arpl
ss
in
test
loopne
aas
stos
in
and
jmp
jg
pushl
lds
cmc
jne
xor
xchg
cmp
je
sub
pop
fistps
push
adc
decl
pop
iret
mov
dec
cmp
sub
lcall
cmp
repnz
sub
and
mov
aaa
repz
call
call
jo
jnp
addl
pushl
daa
jbe
xchg
inc
sbb
dec
push
cmp
mov
shufps
insl
xchg
sbb
cmpsl
mov
sahf
mov
std
mov
icebp
popf
shlb
and
movsb
sti
xchg
test
inc
fwait
and
xor
sbb
jecxz
dec
mov
jbe
pop
mov
and
test
xlat
pushw
scas
push
jp
mov
scas
test
incl
es
in
dec
push
ja
inc
ret
mov
inc
mov
push
test
and
clc
lcall
mov
push
cmp
mov
add
jg
lret
add
adc
or
lret
or
xor
std
ljmp
jge
sbbb
sub
adcl
bound
cld
sbb
sbb
in
mov
scas
movsb
repnz
fimull
lcall
aas
cs
sub
fadd
mov
adc
fnstcw
inc
in
lea
incl
jecxz
add
pop
xlat
xchg
sub
inc
leave
outsb
or
and
mov
jmp
shll
inc
push
and
inc
clc
insl
xchg
xchg
imul
adc
xor
sti
fnstsw
sbb
sub
and
xchg
cmp
mov
inc
mov
mov
add
lret
test
decl
popf
xor
std
call
add
cmp
jb
lock
call
daa
and
in
dec
jp
je
sbb
out
jb
fistpl
femms
out
xchg
mov
or
pushl
sbb
xchg
cmpb
dec
sbb
sahf
sbbl
mov
dec
popf
sub
add
jae
xor
xchg
ror
pop
jo
into
hlt
outsl
cmc
mov
mov
cmc
mov
test
loopne
bnd
loopne
ljmp
mov
cmc
sub
jb
jl
out
vucomiss
jo
push
call
mov
inc
mov
test
jno
decl
cltd
xchg
adc
and
sbb
cmp
pop
aas
in
dec
cltd
scas
dec
add
jmp
popa
sub
mov
push
mov
inc
pop
clc
mov
stos
mov
or
popf
outsb
in
jne
mov
mov
jmp
jns
bound
xlat
das
aas
lds
call
ljmp
out
inc
mov
jnp
mov
mov
lock
hlt
decl
xchg
fnstcw
test
loope
aas
std
jge
inc
das
or
mov
xor
inc
dec
dec
jge
mov
jne
aas
pop
paddq
pop
or
or
outsl
loopne
call
into
push
push
ss
jns
cmpl
or
dec
pop
mov
je
test
xchg
jmp
sarb
jo
cwtl
xchg
cli
cmp
jae
pop
lods
mov
lods
jl
aaa
lret
mov
test
call
push
xor
sub
int
sti
sbb
xchg
inc
dec
sti
xor
cmp
scas
cld
hlt
call
push
xor
dec
jne
push
mov
cld
xor
das
inc
ljmp
ljmp
pop
xchg
sbb
es
mov
sub
pop
imul
jge
jnp
mov
sahf
mov
sbb
xchg
pushl
ljmp
push
cli
lret
mov
or
gs
add
call
mov
mov
sbb
pop
jne
shlb
jae
sbb
fsincos
mov
decb
or
sub
loopne
mov
mov
cmp
sub
xchg
in
jg
pop
add
jo
push
jae
dec
jb
test
out
adcb
lcall
ds
outsl
es
outsl
bound
sbb
jg
lods
fs
xor
lret
inc
add
movsb
mov
decl
mov
sar
clc
jmp
push
and
inc
ss
sbb
fsubp
jb
xchg
jg
das
add
mov
ret
pop
cmc
mov
mov
pop
dec
pop
lea
jg
mov
dec
stc
cmp
incb
jecxz
scas
xchg
std
lcall
incl
insb
mov
fs
jmp
mov
fbld
jns
cmpsb
mov
dec
fisubl
mov
fadds
call
outsb
adc
notb
call
jmp
fcom
or
xchg
push
shrb
or
call
fisttps
mov
or
push
cli
aad
ljmp
std
shlb
shr
mov
mov
xor
dec
decl
cmc
js
out
pandn
cmp
aaa
in
xor
out
push
mov
mov
sbb
dec
jl
lahf
adc
test
mov
adc
push
lock
cld
or
ss
scas
fs
insw
repnz
ljmp
shrl
or
out
imul
dec
push
cmp
imul
incl
add
mov
dec
jnp
mov
push
pop
dec
adc
call
cli
aas
fsubrs
jne
scas
into
mov
imul
push
dec
pop
inc
pusha
fs
jg
incl
int3
push
int
xor
inc
ficoml
ds
cmp
jmp
push
lret
lcall
pusha
mov
push
add
cwtl
sub
xor
outsl
or
sbb
in
xchg
jg
call
cmpsb
iret
test
lock
jecxz
mov
data16
shrl
jg
and
insl
xchg
fmuls
dec
stos
fiadds
dec
mov
cli
xor
ljmp
xchg
xor
leave
gs
and
or
imul
ljmp
lds
pop
mov
ljmp
adc
jg
jne
mov
dec
in
lock
push
sub
ss
test
ret
inc
call
inc
fcmove
push
loope
cmc
fadd
out
mov
out
jg
movsl
or
int3
stc
xor
fimull
jg
ljmp
mov
sbb
fcmovbe
ja
xor
test
lcall
inc
or
shl
lock
mov
punpckhwd
sub
fnstsw
lahf
cmp
stos
push
xor
fsin
imul
lret
sub
add
mov
les
pop
mov
aad
push
sub
and
std
jg
jnp
idivb
int3
inc
xchg
dec
imul
xchg
clc
sbb
mov
das
dec
push
sbb
mov
jecxz
xchg
gs
iret
mov
iret
scas
mov
aas
jle
pushl
fwait
pop
sbb
and
std
pop
sub
stos
sti
xchg
rclb
cltd
pop
jmp
pop
jmp
mov
xchg
pop
push
lds
loope
fnstsw
decl
xchg
push
loop
mov
cmp
outsb
aad
inc
adc
imul
lcall
inc
roll
into
inc
icebp
nop
adc
mov
hlt
cmpsl
loopne
nop
lds
sub
rolb
xchg
lahf
cwtl
inc
mov
mov
sub
pop
sub
cmpsb
loop
sahf
jno
mov
cmpsb
inc
jnp
inc
jg
lcall
lcall
dec
xchg
cmpsl
add
cmp
sbb
test
and
ja
push
mov
icebp
and
in
leave
jmp
hlt
out
inc
jg
and
cmp
mov
lock
pop
xor
incl
pop
pop
aad
lcall
aas
xor
or
add
add
repnz
clc
scas
decl
xor
fmuls
and
lcall
clc
sbb
fucomip
jmp
jecxz
ljmp
mov
inc
in
push
gs
aaa
decb
jmp
sahf
or
fildl
les
addr16
jb
lock
pop
mov
sub
pushl
mov
rcrb
js
movsb
stc
out
cmp
arpl
cmp
jmp
ficompl
pushf
aaa
lods
test
pop
cli
in
xor
loopne
inc
jecxz
sti
add
xchg
mov
pop
push
out
mov
pop
lcall
push
cltd
stos
mov
adc
stos
mov
cmp
pop
sbb
shl
jg
call
insl
aas
pavgw
sbb
cwtl
add
into
leave
dec
mov
std
ljmp
imul
shlb
push
lds
xor
inc
call
lock
sbb
inc
push
orb
push
aas
cmc
jb
sub
shlb
ljmp
pop
mov
into
dec
jmp
es
fs
arpl
enter
rolb
in
push
testb
xchg
push
inc
repz
mov
pop
mov
out
rcl
hlt
lret
pop
test
test
mov
and
movsb
leave
stos
dec
mov
mov
xchg
lock
jmp
out
mov
add
mov
jge
or
jmp
adc
mov
sub
iret
fstpt
pop
hlt
add
lret
sbb
inc
or
scas
push
cmpsb
inc
push
lea
fs
clc
inc
shlb
fs
mov
add
or
cli
sub
cmp
xchg
mov
inc
movsb
movsl
mov
pop
fisttpll
sub
mov
xlat
inc
sbb
jne
xor
pop
fcomps
mov
cmpsl
lret
push
int
lcall
adc
sbb
out
rorb
addr16
jns
jge
aaa
and
ja
ficoml
hlt
add
insl
roll
stos
jmp
test
repz
fpatan
cmc
push
inc
aaa
call
cltd
fcoml
nop
ja
push
stos
test
and
sti
mov
or
xor
shrb
sbb
or
mov
into
push
loopne
and
movsl
cmp
and
aaa
mov
lcall
in
imul
push
adc
fdivrs
push
jb
push
sar
jns
cmp
cmp
mov
mov
inc
pop
scas
push
fs
pushl
jmp
push
leave
xor
push
push
or
lcall
movsl
hlt
insl
out
jge
lahf
movsl
jg
mov
cmpps
push
jno
stos
jne
dec
es
dec
push
ret
out
push
cwtl
push
xor
movb
jmp
jmp
pop
xchg
stc
insl
lea
sub
pop
cmp
xchg
in
jg
lea
pop
cmp
push
mov
insb
dec
test
sub
fisttps
fsubl
and
insl
pop
push
dec
lahf
insl
fsubl
jg
inc
mov
cmp
stos
inc
aas
mov
les
decl
mov
jge
pop
lcall
aaa
and
into
mov
push
clc
outsl
hlt
push
rol
jbe
dec
rorb
push
fstpt
pop
cmp
shl
out
in
mov
imul
add
push
jmp
mov
gs
in
lret
mov
subl
out
inc
jecxz
ljmp
fists
add
das
sbb
pop
fst
rcrb
mov
fstp
cs
push
aas
fnstenv
jp
push
enter
aaa
inc
jbe
sbb
or
mov
aas
inc
sbb
frstor
cmp
fists
mov
push
lds
inc
mov
mov
jmp
jmp
xchg
ljmp
cli
mov
gs
stos
mov
pop
imul
outsb
lock
adc
sbb
cmp
in
es
inc
inc
dec
pushl
test
sbb
repnz
fistpll
out
lea
js
cmpsl
stos
clc
out
inc
call
mov
pusha
pop
sbb
inc
push
cwtl
fdiv
andb
mov
loopne
insl
filds
insl
push
fisubs
scas
inc
lcall
mov
mov
in
pop
dec
cld
jne
push
mov
jmp
shl
add
ss
insb
mov
and
sub
cli
xor
sbb
xchg
mov
in
incl
or
sbb
cmp
es
push
jle
jno
or
xchg
push
and
incl
dec
dec
jge
mov
cmp
clc
xor
push
pop
sbb
je
push
shr
ljmp
cmp
xor
ja
mov
mov
imul
inc
decl
pop
sbb
dec
pop
xchg
scas
and
jle
fiaddl
cld
inc
mov
mov
sub
int
and
lcall
out
jb
xchg
add
aaa
push
pop
dec
add
fstpl
push
fsubp
mov
cmp
fistpl
pop
loop
dec
sub
cwtl
push
clc
push
fmuls
clc
mov
jmp
xor
ja
xchg
inc
dec
inc
adc
add
enter
jmp
adc
repnz
lods
incl
sub
idivb
mov
xchg
push
mov
add
push
mov
mov
movsb
pop
loop
and
cmp
ljmp
out
leave
pop
data16
sub
add
rcrl
hlt
cld
pop
cli
jg
arpl
mov
enter
pop
cmp
es
cmpsb
jb
lcall
repz
cs
inc
arpl
aas
sbb
lret
fldenv
into
mov
pop
xchg
and
mov
pushl
out
divl
push
cmp
add
lret
cli
arpl
popa
fcmovbe
xchg
popf
sbb
repnz
repz
lcall
cmp
sbb
lea
jg
incl
ds
bound
fstps
test
jo
hlt
sbb
jmp
js
mov
mov
sbb
stc
jecxz
mov
sahf
shr
push
or
ud0
adcl
push
sub
dec
int3
in
mov
call
fidivs
inc
add
cmpsb
or
xchg
jns
je
push
add
aaa
xor
decl
mov
out
jg
cmc
testb
aam
or
sar
pushl
dec
cmp
gs
ret
mov
push
xlat
call
jmp
adc
sbb
pop
mov
dec
add
dec
xor
lcall
mov
lcall
andb
mov
icebp
push
cmc
push
sub
out
and
lret
xor
sarl
pushl
outsl
data16
in
stc
fiaddl
xor
inc
sub
incl
scas
popf
jg
repnz
orb
xor
jecxz,pn
leave
inc
jle
imul
push
xchg
in
pop
mov
insb
mov
fs
mov
jb
inc
pop
bound
or
pop
out
popf
mov
pop
sarb
clc
push
mov
lock
mov
out
sub
jbe
cmp
clc
ret
jno
shlb
andb
rolb
shrd
pop
rcl
fidivl
loop
adc
add
push
xor
push
or
mov
cmp
das
icebp
incl
xchg
fsub
jl
shlb
and
ljmpw
pop
jle
push
lcall
mov
inc
clc
inc
lods
inc
aam
sub
test
pop
mov
mov
outsl
sub
adc
mov
lret
jl
cld
fwait
mov
call
test
lock
jp
and
or
xor
outsb
ljmp
outsl
lret
pushf
out
dec
lea
popa
push
mov
xchg
pop
std
mov
cmc
mov
mov
pushl
loopne
cld
cmpsl
faddp
push
mov
push
fisubrl
bound
mov
cmp
jp
push
add
sub
shrl
incl
cmpb
jmp
mov
lret
iret
sbb
call
mov
in
mov
mov
mov
mov
fucomip
popa
mov
or
mov
subb
mov
test
dec
xchg
jne
insl
mov
pop
jne
mov
mov
or
outsb
mov
lret
incl
daa
mov
dec
arpl
xchg
push
int3
divb
push
sub
int3
test
or
xchg
negb
sbb
loop
lds
pusha
jns
dec
out
sub
in
push
into
fstp
fsubrl
mov
cmpsb
mov
ret
add
out
jl
cmpsb
dec
adc
xchg
fucomip
jo
pusha
push
daa
push
mov
sbb
mov
and
add
das
hlt
mov
pusha
mov
mov
stc
lea
clc
or
cmp
outsb
addb
test
incl
stos
imul
das
aaa
scas
ds
and
mov
aaa
cli
jg
inc
loop
push
stc
imul
xor
xor
inc
addr16
das
cmc
jnp
jp
ss
movsl
lea
lods
dec
fcmovb
or
idiv
pushl
sbb
test
lahf
ja
fmuls
popa
and
icebp
sahf
mov
data16
incl
push
inc
pop
fidivl
jl
mov
mov
scas
das
lahf
mov
incl
mov
fidivrl
mov
adc
lea
lds
incl
out
add
xor
int3
sub
mov
inc
call
cmp
mov
sub
shll
icebp
fcoms
shlb
push
das
add
inc
or
lods
popf
push
adc
cmpsl
ss
and
cli
hlt
mov
add
test
dec
bound
cmp
sub
jae
outsb
push
fwait
pop
pop
lahf
mov
push
bswap
mov
jg
rol
mov
cmp
divb
or
mov
pop
sar
inc
push
stos
push
jne
push
cld
adc
xor
jb
or
cmpsb
cmp
outsb
std
clc
enter
insl
cs
jae
cmp
or
bound
ret
jle
cli
je
mov
aam
xchg
jae
scas
idivb
mov
cmpsl
in
loope
hlt
call
mov
inc
jne
cs
ds
add
mov
sahf
div
clc
add
pop
std
and
pop
sahf
sti
movl
push
outsl
hlt
pushl
adc
mov
push
and
xchg
das
mov
dec
inc
stos
jmp
imul
repnz
pushf
in
or
xchg
iret
pop
inc
push
xor
mov
pop
cli
pop
scas
mov
pop
loope
mov
pop
add
test
cmpsb
xchg
sahf
pop
mov
test
inc
cmp
ljmp
stos
hlt
hlt
lods
das
clc
lcall
xor
push
jnp
or
mov
icebp
cmovl
and
push
lcall
scas
inc
inc
or
pop
fwait
push
arpl
lcall
cmpsl
lods
pop
fsubs
mov
int3
pop
std
outsl
clc
fbld
loop
aad
dec
mov
jg
test
dec
mov
mov
adcl
scas
inc
mov
adc
repnz
xlat
mov
pop
xor
sar
lcall
aam
mov
in
fcomps
dec
mov
int3
cmp
pop
into
push
les
int3
add
ljmp
xchg
stc
jecxz
sub
test
mov
sarb
or
pop
mov
mov
and
mov
call
stos
hlt
mov
inc
and
les
xorb
dec
cmp
in
bound
pushf
cmp
mov
add
mov
sbbb
outsl
icebp
call
mov
sbb
mov
adc
adc
mov
dec
mov
xchg
push
jb
sub
lcall
mov
fistpll
fnstcw
xchg
pop
clc
pushl
call
stc
xor
mov
mov
das
cld
incl
inc
push
mov
loop
and
sahf
imul
push
mov
xor
mov
dec
push
inc
xchg
lahf
cmpsb
mov
add
sub
cwtl
xchg
movsb
sahf
xchg
int3
mov
pusha
mov
loopne
pop
ja
sbb
mov
jmp
inc
nop
ret
imul
mov
cmp
jg
xchg
lods
js
insl
arpl
jl
adc
jmp
push
cld
push
xchg
dec
cmp
aaa
or
sahf
sub
fdivrp
push
das
sub
loopne
outsl
sti
pushf
fisubrl
sbb
cmp
addr16
std
ficompl
sbb
ds
movsb
or
push
mov
faddl
aaa
cmp
push
cmp
pusha
push
and
lahf
push
icebp
pop
cwtl
adc
cmpsl
jg
jge
jp
or
sbbl
rolb
lret
fmul
inc
add
inc
decl
xchg
test
and
cmp
xchg
test
clc
roll
add
out
and
and
clc
dec
cli
ficompl
xchg
fmul
ret
pop
clc
lcall
mov
pop
loopne
fcompl
mov
and
iret
cltd
mov
cmp
fucomip
pushl
jb
call
lock
leave
jo
test
lret
mov
jg
loopne
fdivrs
sub
lcall
popf
ss
or
ljmp
iret
and
xchg
jecxz
jl
aad
das
adc
aam
imul
pop
jns
ret
jns
std
pushf
mov
inc
inc
mov
cli
sahf
outsb
add
loop
call
jl
add
sub
in
xchg
aad
and
ja
popf
jle
pop
ljmp
ss
push
pushf
dec
test
jnp
stc
ja
mov
loop
decl
cld
mov
xchg
stc
jl
jp
int
mov
and
mov
loope
movsl
das
or
pop
cli
incl
cmp
in
add
in
pop
mov
cs
test
push
sbb
jge
lods
push
mov
mov
cmpsl
dec
fildll
mov
cmp
mov
jp
cmp
xchg
jge
cld
hlt
cwtl
or
lods
xchg
add
mov
decl
cwtl
dec
inc
mov
fisttpl
xor
pop
lea
dec
pop
call
adcb
pushf
add
inc
lea
test
nop
mov
call
dec
in
gs
lods
enter
adc
mov
imul
xor
jne
pop
shrl
sbb
call
jecxz
push
jb
sbb
push
sahf
ja
pop
pop
dec
push
popa
lds
inc
cwtl
in
lret
call
shrb
mov
sbb
scas
adc
mov
sub
fisubrl
mov
mov
dec
movsb
std
enter
popa
outsl
adc
icebp
jne
enter
push
lods
hlt
lahf
inc
call
mov
bound
sbb
fwait
test
pop
xchg
xchg
ss
pusha
xor
jmp
jmp
arpl
ds
lahf
insb
dec
and
push
ja
aas
jl
ljmp
idivl
jae
xchg
shl
add
aad
cmc
jle
pop
loopne
jmp
push
jne
fldenv
pop
cmp
mov
jmp
sub
popf
jne
loopne
adc
call
iret
adc
push
in
ret
sub
jle
sub
aad
decl
ljmp
fstp
push
lret
mov
call
std
pop
dec
adc
push
insl
pushf
test
fcmovbe
sub
push
sub
mov
outsb
push
rcr
aas
push
pop
iret
dec
lock
test
mov
mov
jbe
ret
fs
push
push
mov
lcall
inc
dec
arpl
mov
enter
lds
push
cwtl
cmp
orl
push
and
nop
cmpsb
out
jae
add
lods
pop
fisubrl
cmpsb
mov
ljmp
cli
cli
int3
lret
push
jg
ret
cs
mov
stos
sar
adc
loop
dec
pop
xchg
popa
jb
xchg
mov
adc
incl
mov
mov
push
insb
xlat
lock
jp
pop
clc
jmp
jmp
stos
fstpt
test
pop
mov
pop
ret
scas
movaps
xchg
std
ljmp
mov
sbb
sub
jge
dec
jo
pop
push
and
je
inc
rep
jg
pop
xor
xchg
popa
mov
call
xchg
loop
cltd
xchg
aam
insl
xor
jb
sar
push
pop
sub
rcll
fists
mov
pusha
jnp
popa
sub
lea
nopl
int
pop
enter
jne
mov
inc
clc
ljmp
sub
push
inc
adc
sub
fs
and
dec
push
lock
jno
mov
inc
sarl
cmpsw
mov
jle
add
mov
insb
push
mov
mull
push
pop
xor
xor
fmull
jg
addr16
jge
call
decl
xlat
push
adc
insl
les
orb
or
mov
ljmp
out
insl
sbb
and
and
mov
mov
pop
ja
mov
pop
push
jo
dec
lahf
inc
loop
push
test
adc
pop
xor
inc
lock
enter
shll
lahf
sti
loopne
add
ret
outsl
xchg
clc
cmp
movsb
imul
mov
pushl
and
mov
ljmp
xlat
mov
mov
jmp
and
loopne
mull
dec
shlb
and
sbb
js
cmpsb
mov
inc
sti
repnz
lods
jl
dec
adc
sbb
or
stos
jg
pushl
mov
pop
imul
cmpsl
sbb
pop
iret
or
add
leave
jno
fisubrl
stos
push
leave
cmc
aam
dec
filds
pop
and
pop
in
pop
aam
out
or
mov
jbe
ret
das
cld
incl
fstps
or
or
das
je
std
imul
mov
dec
pop
decb
push
mov
daa
sub
int3
int
jne
xchg
mov
cmp
call
cli
movsb
ret
sti
movsl
inc
fs
mov
pop
xor
ljmp
std
cli
adc
cld
cmp
and
xchg
decl
xor
jns
adc
lea
jns
dec
mov
incl
inc
push
jb
sahf
rcrb
sub
sbb
lcall
repnz
push
mov
fdivs
mov
sub
subl
das
push
jge
call
dec
lea
sbb
subl
push
sbb
push
enter
test
inc
pop
cltd
dec
dec
out
and
ret
cmp
out
mov
out
adc
jmp
cmc
ljmp
mov
daa
out
mov
xchg
cmpsb
gs
mov
xchg
cmp
mov
mov
push
shll
imul
dec
imulb
hlt
dec
decl
je
mov
lret
add
sti
cwtl
mov
push
scas
int3
add
mov
xor
or
loop
aas
jle
ret
mov
fildll
dec
pop
pop
aas
lods
xlat
xchg
test
pop
inc
ficomps
iret
mov
jmp
iret
cld
ret
push
or
xchg
test
mov
cwtl
jns
pop
jo
lods
sub
popf
inc
outsl
push
ret
in
imul
out
inc
leave
and
cld
ja
ret
inc
lret
test
js
pop
pop
aam
adc
dec
pop
adc
int
leave
lds
insb
lcall
cli
xchg
lcall
and
sbb
jbe
adc
fdivrp
ror
cmp
insl
insl
insl
xor
push
ss
adc
aaa
clc
push
pop
pop
imull
mov
bound
test
test
mov
mov
les
jmp
pushf
cmpsl
mov
cmp
std
or
test
cld
fimull
xchg
outsb
add
imull
movsl
mov
mov
out
enter
mov
test
jns
push
std
scas
cmp
or
mov
outsl
pop
ja
dec
xchg
add
inc
enter
int3
loop
aas
xchg
mov
cld
incl
cmp
in
in
cmpl
xchg
push
or
cld
pushl
fs
insl
adc
imul
sub
cmp
gs
hlt
adc
pop
je
adc
fwait
fs
add
dec
sub
adc
idiv
cmpsl
pop
sub
xorb
push
test
inc
insb
pop
mov
outsb
movsb
add
fists
enter
das
pop
mov
rorb
dec
decl
or
add
shrb
sbb
cwtl
adc
repz
mov
insl
test
out
mov
sar
mov
xchg
dec
pop
sti
subb
loopne
cmp
push
add
incl
ja
jns
rclb
mov
ret
sbb
je
imul
andl
pop
cmp
out
outsb
sti
cmp
fisubs
pop
mov
jp
fstpl
pusha
and
pop
and
daa
push
lds
imul
sbb
out
dec
out
mov
fildl
xchg
jl
shrb
sbb
mov
adc
dec
xchg
incl
sbb
cmp
shr
sub
and
mov
insb
mov
incl
fbld
lahf
fs
lock
adc
testb
jne
pop
loopne
popf
gs
les
lret
loopne
jmp
and
leave
xchg
out
inc
sub
shlb
stos
adc
into
ljmp
cmp
push
cmpl
mov
jl
out
mov
add
push
lret
out
cmp
sbb
nop
outsb
jb
into
xorb
push
pop
in
iret
hlt
or
call
jmp
add
pop
push
xor
mov
and
jecxz
jmp
cltd
mov
mov
fstps
stc
cmp
pushl
gs
inc
xchg
mov
scas
incl
cmp
aas
mov
sub
roll
pop
fwait
cmp
lret
sbb
mov
std
fsub
add
stos
inc
xchg
shrd
jmp
fidivrl
jno
mov
pushf
cmp
cld
cli
jmp
push
sbb
dec
mov
lods
xor
dec
and
testl
cmpsl
inc
or
lcall
jge
mov
movsl
fwait
lret
lcall
ds
jnp
icebp
sub
test
add
push
push
sbb
movsl
insb
popa
xor
fmull
daa
fucomip
decl
push
dec
ficoms
in
in
stos
pop
lds
or
jg
negb
xor
mov
pushl
ror
sbb
je
xchg
dec
pop
xchg
lods
ljmp
in
xchg
and
sub
arpl
outsl
jne
push
aas
mov
mov
add
dec
push
and
lret
add
push
mov
scas
out
mov
mov
jmp
lcall
cld
call
mov
cmp
mov
or
jno
jp
imul
test
pushl
xorb
xchg
cmp
jg
cwtl
ud0
lcall
sbb
enter
cmc
ret
ljmp
leave
cs
cltd
icebp
pop
lods
xchg
test
ljmp
mov
push
sarl
filds
and
insl
inc
fstpt
lcall
sbb
sbb
push
rorb
stos
sahf
movsl
repz
aad
repnz
addr16
test
pop
notl
jmp
ret
xor
daa
inc
mov
mov
mov
push
or
rclb
jmp
xchg
nop
insl
ds
adc
mov
in
sbbl
pushl
sahf
std
rcr
sub
dec
push
push
sbb
arpl
and
mov
fsubrp
jb
mov
xchg
out
inc
sub
mov
cmp
or
incl
in
insb
push
or
lods
pop
cmp
dec
xchg
cmpl
scas
lret
sbb
xor
aaa
and
xchg
sti
mov
cld
outsb
loope
jle
inc
fs
imul
jne
jge
mov
je
adc
pop
mov
test
lea
sbb
ljmp
clc
jp
xchg
in
addr16
and
stos
xchg
decl
pusha
push
sub
lds
fidivl
scas
push
dec
add
scas
mov
jl
repz
lcall
ljmp
lcall
out
cmp
cld
leave
in
loopne
dec
sub
movsb
hlt
decl
aam
outsb
in
cmp
jno
andb
dec
adc
das
mov
pop
pop
xchg
add
xchg
clc
into
jns
and
orb
mov
mov
imul
inc
mov
mov
leave
mov
mov
popa
push
push
gs
mov
leave
shll
and
pop
pop
decl
lcall
je
icebp
je
mov
mov
push
test
mov
imul
test
push
lahf
sub
lahf
mov
mov
movsb
mov
insb
mov
pop
loopne
fs
mov
adc
loope
inc
ljmp
jl
push
xor
cmp
cmp
ret
xchg
ja
movsl
aam
mov
mov
pushl
sahf
mov
call
mov
lahf
out
imul
add
xchg
mov
out
ret
sar
push
lcall
sub
scas
fistl
testl
aas
push
scas
dec
sub
sbb
dec
daa
inc
push
in
add
inc
lods
xchg
rcll
loope
nop
or
dec
pop
mov
and
or
icebp
sarb
test
rcrb
add
ljmp
mov
sbb
daa
dec
push
sbb
repnz
sbb
mov
imul
loopne
mov
cld
std
dec
ja
add
lcall
jne
btc
xchg
popa
inc
call
sbb
orb
pop
and
dec
dec
mov
incl
incl
andb
out
insb
xor
lock
call
call
push
inc
ljmp
ret
and
mov
sub
int3
movsl
mov
in
shrb
outsb
call
arpl
mov
repz
mov
mov
jecxz
inc
mov
xor
scas
imul
stos
cmp
sti
jle
mov
pop
mov
inc
outsl
pop
insb
sbb
mov
jo
mov
clc
rcl
test
push
faddl
pop
xor
push
shll
cmc
jmp
scas
adc
add
mov
dec
mov
int
mov
es
and
aaa
cli
jmp
cmc
mov
fists
jo
aas
mov
cmp
sbb
call
pop
inc
ret
imul
fsubs
add
xchg
ljmp
lock
nop
imul
pop
cmp
daa
ds
fnstenv
cli
ljmp
mov
xchg
mov
xchg
jmp
fistpll
inc
push
mov
and
xor
dec
mov
ljmp
mov
push
lods
xchg
mov
movb
ss
mov
cli
call
cmp
js
sti
fwait
sub
dec
leave
lods
fucom
pop
cld
add
cs
fstpl
sarl
fildll
inc
stos
mov
cmp
das
pop
cld
pop
mov
mov
imul
jnp
push
imul
jmp
xchg
mov
arpl
mov
insl
pop
insb
cli
xor
into
cs
xchg
adc
outsl
mov
dec
out
sub
lcall
loope
pushl
mov
add
movsb
xchg
xor
sahf
cmpsb
sbb
test
cmp
mov
pushl
sbb
mov
xchg
or
adc
jp
scas
sub
mov
dec
std
fsubrl
mov
int3
enter
stos
or
mov
xchg
jns
inc
cmp
inc
or
test
dec
ds
stc
daa
mov
push
es
std
sarl
ret
mov
pop
inc
adcl
arpl
adc
dec
jne
push
mov
push
sbb
incl
xchg
sbb
dec
fsts
xchg
push
fnstcw
std
adc
filds
cli
std
leave
xlat
xor
xor
pop
scas
xor
mov
decl
call
and
sarl
sbb
cmpsl
lea
ljmp
sbb
push
repz
push
or
mov
sub
gs
pop
jg
in
arpl
mov
je
cmp
call
pop
stc
dec
xor
inc
mov
cwtl
stos
cmp
pushf
jl
xchg
jg
jmp
orb
ss
leave
test
lcall
push
jge
ljmp
popa
add
jae
shlb
mov
and
ja
fcoml
cmpsl
push
mov
pop
fcomps
negb
sbbb
and
mov
jbe
push
insl
ss
fdivp
inc
fisubrl
push
jg
sbb
push
flds
jo
jns
add
and
les
outsl
lcall
xchg
jge
popa
in
inc
and
add
rolb
mov
pop
jl
cmp
test
ljmp
stc
loop
jnp
fiaddl
imul
push
adc
dec
push
xor
pushl
sbb
out
push
jae
inc
in
or
and
mov
gs
xchg
ss
repz
xor
pop
cld
fisttps
je
and
std
repnz
hlt
xchg
inc
xor
ljmp
aad
aam
cli
lds
mov
dec
cld
pop
xor
sub
mov
cmc
hlt
mov
and
inc
sbb
mov
out
push
fmuls
std
push
mov
mov
pop
and
adc
mov
addr16
out
fsubrs
mov
in
outsb
loope
mov
dec
mov
hlt
out
cltd
sub
inc
int
outsl
icebp
ljmp
xlat
jo
iret
xchg
or
lds
push
mov
push
cwtl
outsl
lods
incb
scas
xor
adc
into
sbbb
incl
sahf
cmpb
xchg
icebp
xchg
jne
xorb
js
xor
cmp
fsubrp
daa
pop
pop
jns
mov
mov
add
ja
jg
ljmp
xchg
stos
loopne
int3
ret
sub
dec
fsts
insb
les
dec
cld
aaa
inc
dec
and
notl
mov
lcall
cwtl
outsb
fwait
mov
xchg
in
and
test
push
insl
inc
pusha
hlt
xlat
ss
inc
push
sahf
insl
pushf
push
adc
and
mov
sbb
lock
push
mov
push
in
push
adc
cmp
dec
lcall
int3
fistpll
pop
adc
jns
sub
cmpsl
arpl
pop
loopne
outsl
xor
les
orl
std
and
ljmp
lret
ja
pusha
mov
adc
jbe
sbb
adc
ret
test
dec
ljmp
test
push
imul
sbb
es
jg
jmp
lock
push
lcall
sub
scas
data16
stc
das
cmpb
ret
mov
push
scas
iret
ficomps
cmp
je
int
mov
sbb
mov
aad
pushf
dec
push
outsl
movsl
cltd
data16
dec
aam
cmp
lods
in
jp
loope
imul
jecxz
add
cmc
call
push
inc
inc
adc
or
into
es
mov
mov
add
ljmp
mov
push
cwtl
xor
add
ficompl
call
mov
ja
lods
inc
stos
cs
leave
pusha
or
icebp
nop
jp
outsl
enter
cmp
push
mov
inc
dec
mov
push
in
fcomp
cmc
sbb
addb
dec
icebp
mov
ljmp
jne
arpl
shrb
xor
call
idiv
jmp
cmp
dec
ss
call
mov
in
aad
mov
dec
dec
inc
mov
call
sahf
loope
inc
test
jg
outsb
ds
add
out
ljmp
adc
ret
lret
cli
sbb
jecxz
jmp
test
mov
or
test
sub
pop
loop
dec
stc
in
lcall
jbe
cmpl
loop
sub
call
int3
stos
xchg
mov
test
jle
inc
pop
xchg
imul
sub
in
pop
pop
aaa
pop
mov
pop
call
icebp
lret
dec
mov
lods
scas
es
and
mov
bound
sbb
call
xor
sar
push
jg
lock
loope
flds
push
xchg
nop
xchg
movsb
inc
xchg
lret
jmp
ljmp
jecxz
stos
loopne
xchg
mov
rcll
dec
mov
xchg
daa
xchg
xchg
in
sub
fiaddl
xchg
or
in
mov
mov
push
cmpl
cli
pushf
out
pushl
clc
lcall
xlat
add
loopne
out
pop
push
cmp
lods
push
aaa
lcall
stos
fcos
mov
incl
jns
jmp
sub
dec
adc
ficoms
lret
ss
sti
push
cld
or
int3
inc
jae
push
mov
mov
mov
gs
lods
sub
push
and
pop
insl
push
flds
imul
and
push
push
ja
and
divb
inc
mov
sti
mov
mov
pop
jo
mov
push
xchg
and
imul
or
jae
mov
sbb
dec
movsl
inc
sbb
xor
sbbl
je
popf
je
cmpsl
inc
mov
jg
call
adc
scas
xor
push
inc
push
push
inc
add
and
movsl
or
push
sbb
or
frstor
push
jmp
jle
das
popf
jne
mov
pop
movsl
mov
sbb
out
inc
jne
lcall
jne
in
notl
test
pop
dec
jmp
cld
dec
jecxz
aad
decl
mov
pop
and
sbb
sahf
outsl
bound
pop
jnp
pop
jp
jmp
jo
nop
mov
xlat
jno
dec
mov
adc
mov
incl
std
xchg
push
notrack
and
ret
adc
pop
inc
sbb
incl
ret
mov
test
sub
jae
sub
mul
fucomip
jmp
movsb
push
push
fstl
loopne
repnz
lcall
repnz
js
dec
ret
movb
mov
inc
or
xchg
xchg
inc
arpl
push
mov
lcall
adc
addr16
cmp
push
push
push
push
pusha
mov
in
lea
jbe
and
pop
imul
cmp
fistpl
std
push
sbb
jge
repz
dec
cld
mov
xor
test
fidivs
outsb
pop
fcmovnu
jg
das
hlt
std
dec
mov
sbb
sub
and
add
dec
call
mov
clc
cld
cltd
xchg
insb
inc
imul
in
out
mov
mov
lods
dec
pop
xchg
cmc
mov
call
xchg
add
sub
int
stos
pop
sahf
imul
incl
icebp
push
loopne
mov
mov
inc
mov
xchg
inc
cmpsl
sub
mov
out
sbb
cmpsl
mov
ret
int
mov
mov
in
outsb
push
int
adcl
lea
push
xchg
mov
jmp
arpl
rcrb
loope
movsb
dec
mov
cmc
fcos
test
xchg
lods
out
pop
data16
mov
cmc
sub
andl
mov
jg
jmp
int
adc
stc
jecxz
lock
in
inc
pop
das
cld
pushl
pop
sbb
sub
adc
fiadds
cmp
ja
or
xchg
in
xchg
and
inc
sub
and
pop
movsb
xor
pushl
sbb
jl
push
testb
mull
cmp
aaa
arpl
lcall
dec
push
push
lock
imul
test
mov
outsl
cld
xchg
or
in
sbb
aad
enter
sbb
inc
and
movsb
incb
xor
cmp
or
outsb
mov
xchg
nop
ret
lret
adc
cmpsb
adcl
rol
test
mov
and
aad
inc
push
dec
sub
loop
pushl
push
cmp
xchg
adc
fucomp
xor
int
adc
popa
push
loope
mov
pop
xor
inc
js
xor
shrb
out
or
ljmp
mov
mov
mov
xchg
mov
or
add
sbb
lds
inc
cmpsb
inc
pop
xchg
jg
inc
sbb
xchg
sbb
lods
sbb
sti
das
sahf
or
mov
or
add
mov
dec
jns
sarb
sahf
jg
ljmp
dec
in
jg
push
jg
popa
push
jo
inc
clc
aam
mov
cmpsb
movsb
ja
mov
mov
sahf
xchg
xlat
sub
add
fbld
insl
or
scas
insb
pop
sbb
jne
jnp
xchg
mov
adc
jg
decl
loopne
arpl
jae
les
fs
dec
mov
pop
pop
jle
insb
xlat
fstpt
imul
notb
mov
insb
mov
inc
imul
adc
sbb
cbtw
xchg
push
lods
enter
push
out
mov
pop
jne
incl
mov
std
add
xor
mov
and
cltd
lods
jns
call
ljmp
sub
fistl
cwtl
pop
lret
cmpsl
mov
test
in
pop
decl
push
mov
jg
andl
sti
lds
mov
pop
adc
fiadds
sahf
out
mov
sbbb
push
jmp
enter
jecxz
cmpb
add
jecxz
inc
imul
dec
push
or
mov
pop
mov
mov
jmp
outsl
lea
lret
inc
pop
gs
mov
add
clc
sub
push
mov
and
and
ja
negl
decl
loop
dec
clc
bound
imul
xor
in
incl
aad
movb
out
scas
sbb
xchg
mov
loopne
adc
push
call
out
shlb
sbb
jmp
sti
xor
lds
xor
adc
mov
and
inc
pop
mov
mov
adc
stos
imulb
subb
or
and
pushl
cmp
xchg
scas
cmpsb
pop
lock
out
or
xor
xchg
lods
fstps
lds
testl
jg
push
pop
mov
jno
sbb
jmp
insb
push
mov
movsl
xchg
jmp
or
sbb
mov
xchg
inc
into
push
pop
add
lds
decl
fdivrp
push
push
dec
cmpsl
repz
dec
mov
aas
in
and
lret
xor
add
jg
jg
push
mov
cli
mov
test
jp
mov
ret
cld
mov
int
lods
dec
inc
rcl
negl
dec
cld
repz
xor
jl
sub
popa
sahf
movsb
sbb
cmc
cmpsb
daa
mov
ds
lcall
inc
popa
movsl
cmp
mov
push
sbb
xlat
outsb
inc
hlt
call
ret
cmp
scas
cmc
loop
sahf
movsl
pop
popf
aad
xchg
fdivr
mov
jl
jp
add
movsl
jp
lock
mov
push
test
hlt
lcall
stos
fidivrl
mov
sub
lret
mov
icebp
mov
das
std
pop
xor
cmp
mov
sar
mov
cmp
cmp
push
pop
push
mov
pop
dec
into
mov
mov
or
dec
mov
leave
jb
inc
pop
push
jbe
and
scas
sub
push
leave
sub
xchg
mov
mov
inc
push
lds
add
ja
test
aad
js
mov
sub
fbld
mov
mov
mov
mov
cmp
pop
or
lods
push
pop
jae
or
incl
leave
outsb
add
jae
push
stc
add
xor
mov
push
or
xor
add
test
adc
fwait
mov
lcall
push
pop
lods
out
push
loopne
nop
push
andl
inc
pushl
mov
xor
test
jle
imul
bound
insb
aam
pop
cld
call
pop
adc
shl
xor
sbb
test
pop
sbb
xchg
adc
jns
mov
add
jmp
sub
lods
dec
cmp
sbb
scas
out
pop
test
into
jmp
data16
jg
jg
inc
pop
fimuls
xchg
mov
mov
ret
iret
or
fisubl
subb
dec
jbe
add
sub
xchg
in
inc
popf
jmp
je
xlat
loop
pop
cli
loop
jb
int
enter
sarl
or
imul
pop
ds
test
rolb
test
mov
jle
iret
insl
loope
sti
jp
adc
hlt
jecxz
in
into
jle
xchg
adc
sahf
cli
jne
pop
loop
inc
push
push
sub
mov
jle
fisubrs
xchg
decl
std
das
clc
and
in
sbb
orb
mov
xchg
xor
loopne
or
xchg
out
aaa
push
pop
add
repnz
push
jmp
pop
hlt
pushl
pop
inc
aam
push
popa
aas
dec
aas
aam
inc
jbe
sbb
cmpsb
lret
dec
dec
lahf
ror
add
ret
add
push
loopne
jb
push
sub
sti
lds
scas
adc
rcr
xchg
jmp
arpl
or
xchg
loop
loop
or
mov
pop
fldenv
fs
call
xchg
mov
shl
pop
test
dec
and
mov
xchg
push
shll
xorb
cli
pop
sub
das
les
outsl
cwtl
dec
int3
pusha
xor
sbb
incl
cmp
inc
and
and
mov
jmp
add
imul
cwtl
push
lods
xor
decl
js
push
mov
sahf
sbb
xlat
or
lcall
inc
lret
lock
repnz
je
repnz
cltd
sahf
sub
decl
outsl
cmpsb
push
mull
pop
jno
shlb
lods
and
mov
adc
push
and
ljmp
roll
push
jo
sbb
or
addb
lcall
xchg
mov
fisubrs
mov
les
repz
nop
test
cmp
cmc
arpl
seto
jl
aad
and
xor
pop
fdivr
inc
int
mov
lock
cmp
inc
mov
mov
inc
mov
vmaxss
lcall
add
clc
jl
pop
inc
sbb
xchg
and
xor
push
ljmp
xchg
mov
loopne
pop
cmc
or
mov
lods
push
sbb
mov
mov
cmp
sahf
mov
pop
hlt
out
xchg
sarb
int
cwtl
test
fmull
call
daa
and
mov
jp
mov
and
ljmp
dec
imul
testl
ret
shlb
popa
cld
mov
jae
mov
mov
mov
push
rorb
decl
jne
in
addl
jnp
in
stos
xor
sub
mov
data16
out
in
xor
mov
pop
mov
pop
das
cld
fucomip
ja
sbb
test
dec
push
mov
jb
push
clc
shrb
imul
sbb
sahf
je
jno
adc
add
dec
aas
cmp
pushl
clc
shl
fldenv
mov
lcall
jbe
pusha
cmc
iret
sub
adc
incl
stc
hlt
mov
ss
dec
inc
mov
jl
fistps
sbb
rcrl
pusha
pop
inc
repnz
mov
in
dec
sbb
loop
mov
or
mov
pushl
jmp
lret
movsl
sub
jno
rorb
mov
outsb
mov
aaa
sbbb
xchg
xchg
decl
je
xor
mov
dec
mov
push
xor
fsts
jb
in
lods
in
jmp
clc
sbb
in
test
dec
dec
mov
outsl
pushl
adc
aad
outsb
out
imull
mov
arpl
or
ljmp
movsl
lahf
hlt
cmp
iret
mov
jae
pop
lods
in
incl
mov
scas
add
mov
iret
xor
push
adc
push
and
jne
push
into
jbe
lcall
jo
mov
dec
ljmp
std
jne
in
adc
adc
push
sbb
mov
adc
sbb
dec
out
nop
imul
shlb
push
cld
pop
pop
lret
xchg
and
mov
ljmp
call
arpl
add
sarb
sub
out
xchg
mov
xor
cld
es
add
int
xor
mov
movsl
jne
jmp
mov
adc
adc
movsb
push
mov
mov
cld
pop
and
sbb
call
sti
fnsave
and
leave
leave
orw
and
adc
das
cmc
jmp
les
jb
in
cmp
fs
dec
fwait
pop
mov
jns
call
incb
and
pop
stos
and
push
jno
xchg
or
mov
xchg
xor
inc
lods
lahf
fmuls
xor
add
loopne
mov
shlb
shl
mov
cmp
or
shl
fbld
mov
adc
cld
or
pop
or
pop
and
outsb
ret
leave
add
stos
inc
sub
stc
push
mov
out
scas
jmp
jo
out
jg
std
pusha
outsl
add
sub
call
jb
mov
bnd
mov
xor
cld
mov
push
xchg
mov
xchg
pop
inc
jg
je
out
sbb
jl
dec
and
xor
stc
clc
mov
push
imul
cmp
mov
dec
push
sbb
inc
cmp
mov
pushf
mov
js
dec
lcall
fistpll
xchg
mov
ljmp
sbb
negl
ljmp
mov
clc
or
add
pop
mov
xchg
dec
xor
push
test
jg
enter
mov
sahf
push
cmp
mov
cmp
mov
jno
xlat
inc
pop
inc
adc
shl
adc
fnstsw
xchg
cli
scas
xchg
xchg
sub
inc
dec
push
scas
lcall
cmp
cli
pop
xor
ja
test
dec
xor
mov
fwait
daa
add
pop
insb
or
mov
and
shl
mov
call
lret
dec
outsl
inc
mov
dec
adcb
scas
pushl
scas
flds
sub
mov
loopne
push
lock
dec
imul
out
cmp
fsub
pop
cmp
imul
dec
daa
movsl
hlt
movb
or
sub
sbb
sti
in
faddl
icebp
push
pop
push
sti
ljmp
push
scas
pushf
in
push
push
inc
test
mov
repz
cmp
push
out
mov
sub
push
pop
std
jl
mov
mov
xchg
and
mov
add
icebp
and
decl
inc
nop
adc
add
sub
jg
cmpsb
cmc
cs
add
call
lcall
ljmp
mov
enter
dec
dec
xor
shrb
pop
jmp
cli
decl
pushf
jg
xor
cli
ret
imul
inc
sahf
jbe
lock
mov
stos
sti
int
pop
push
out
loope
sub
ljmp
std
stos
es
ret
jge
ja
add
or
sub
adc
movsl
decl
xchg
popa
push
push
pusha
loopne
incb
adc
movsb
repz
add
add
and
les
pop
loop
push
jbe
arpl
sahf
mov
fsubp
repz
mov
test
shrl
sbb
enter
push
mov
fidivl
fcoms
cmp
pop
clc
add
jo
popa
mov
nop
shrb
pushf
imul
sti
gs
cmp
or
pop
test
std
mov
aaa
int
xchg
call
jmp
hlt
xor
enter
cmp
dec
and
mov
inc
cmp
jp
pushl
test
gs
sub
fstpt
pop
call
xchg
or
es
sar
jmp
pop
push
nop
xor
clc
mov
mov
repz
dec
sub
scas
ss
ficoml
inc
sub
inc
push
xchg
sbb
jecxz
dec
pushf
cmp
call
pop
mov
je
dec
fldl
mov
jb
adc
testl
or
call
cmp
xchg
mov
inc
lcall
aad
pop
xchg
pop
int3
call
jecxz
lea
and
roll
cmp
xchg
lock
jg
push
cli
cmp
jp
cmp
jns
fcmove
js
jg
fdivrs
incl
idivb
mov
lcall
dec
cmp
pop
mov
mov
ljmp
sub
mov
lcall
fisubrl
clc
insl
iret
xchg
mov
push
sti
and
pushl
fisttps
jb
xor
std
je
inc
mov
ds
pushl
stos
pop
cs
cmp
and
lods
sub
je
es
lock
mov
enter
int3
or
push
or
decl
popf
xchg
icebp
pop
aam
or
enter
pop
xor
decl
xor
call
fsubs
je
add
scas
decl
pop
arpl
jns
mov
and
test
pop
and
das
icebp
and
xchg
arpl
sbb
movsb
cmp
xchg
imul
mov
or
out
xchg
mov
out
dec
mov
loopne
pop
sti
rcll
scas
and
andl
xchg
inc
pushf
insb
movsb
ljmp
fnstsw
xor
cmp
scas
inc
lea
xor
sbb
adc
sbb
sub
jne
fildll
scas
jp
mov
jae
aad
shlb
add
ret
arpl
incl
lock
xchg
sbb
ljmp
push
loope
movsb
ret
pushl
adc
cmp
ficomps
push
sar
mov
inc
jg
leave
push
inc
push
mov
inc
mov
scas
or
add
dec
or
pop
cmc
call
ret
cmp
mul
xchg
mov
std
ds
xchg
ds
push
mov
jns
int3
xor
das
xor
clc
daa
mov
stos
xchg
xor
xchg
das
pop
ret
lods
lcall
jno
mov
aad
cs
xchg
xchg
fdivl
arpl
xor
or
cmp
push
pop
in
sahf
push
adc
arpl
mov
sub
add
mov
sbb
into
jge
cmp
mov
roll
cli
int3
ja
or
mov
stos
and
cmpsl
rdtsc
inc
ficoml
cmpsb
push
push
stos
fsubrs
mov
loopne
cmc
ljmp
xor
jle
mov
or
dec
arpl
repnz
lcall
cmc
jns
pop
inc
movsl
int
pop
mov
hlt
lods
xor
popa
leave
sbb
fcmovnu
push
lcall
dec
in
loop
and
sbb
or
ja
or
push
jns
sbb
jmp
add
jg
ror
loopne
in
lahf
cmp
ljmp
mov
stc
xchg
pop
in
xorb
ficomps
outsb
xorb
gs
js
push
cmp
sbb
ja
mov
jo
int3
fidivrs
lock
cltd
dec
xchg
mov
decl
adc
cmc
push
enter
sub
cmp
pushl
ficompl
xchg
je
or
jne
adc
ss
cmp
int
divb
loope
incl
xor
mov
rorl
rclb
cmpsl
mov
lret
rcrl
sub
call
push
mov
lret
scas
int
out
repz
jo
out
xchg
out
inc
ljmp
int
or
inc
int3
mov
es
jle
ja
adcb
jg
shr
xorl
add
push
les
lret
push
jno
dec
inc
data16
mov
outsl
data16
xorl
in
jg
pop
mov
sub
sub
add
add
push
mov
repnz
xchg
lea
inc
in
cmp
mov
ljmp
or
repnz
fwait
or
jns
mov
pop
xchg
or
push
fcomip
addr16
jo
das
into
cmpsb
js
xor
mov
or
sub
decl
pushl
test
filds
push
fidivs
or
pop
jmp
call
mov
inc
push
test
rcr
xchg
mov
sub
dec
out
iret
daa
pop
incb
mov
jg
test
lods
adc
adc
mov
in
cmpsb
sub
popf
aam
out
imul
ret
fldcw
cmp
scas
push
jmp
jg
xchg
cltd
dec
dec
push
or
sbb
sub
and
loop
adc
adc
mov
cmp
and
lcall
mov
outsl
in
fcomps
fdivrl
imul
incb
sbb
push
icebp
xor
xchg
lahf
inc
jmp
fwait
test
fucomip
incl
adc
pop
repz
pop
fldt
pop
adc
pop
call
inc
mov
pop
xchg
push
decl
pmovmskb
mov
mov
jo
mov
pop
pop
adc
cli
movsl
dec
popa
popa
xlat
rcrb
jnp
in
dec
mov
icebp
mov
dec
mov
ljmp
cld
xchg
and
mov
xor
fistpl
pop
add
jnp
loopne
sar
xor
or
push
mov
in
or
ret
int
lcall
pusha
and
mov
fwait
push
pop
out
fisttpl
aas
clc
inc
lret
inc
or
cmc
lcall
mov
and
jecxz
mov
imul
and
jp
xchg
gs
lods
or
js
mov
mov
call
push
rcrl
movsl
dec
imul
mov
popa
cmpsl
inc
pop
sub
sbb
into
cwtl
mov
xor
cmp
fldcw
xchg
jge
push
mov
mov
and
mov
incl
imul
and
fcoml
out
out
xchg
jmp
lret
xchg
popf
lret
pop
pop
aaa
cli
incl
aaa
cmc
jb
push
dec
stos
and
testl
cld
mov
pop
jno
pop
cmp
sarb
mov
movsb
cmp
push
jle
dec
bound
push
popa
xor
popa
pop
imul
pop
push
inc
rol
lahf
insb
ret
push
or
or
jl
cmp
pushl
mull
scas
movsl
cwtl
sbb
lods
jo
call
xlat
sub
xchg
incl
mov
and
lcall
xor
sub
adc
pop
xchg
mov
neg
inc
pop
or
sub
aad
imul
call
add
push
push
dec
insl
xchg
cmp
adc
int
aas
adc
sub
popa
xor
sub
lods
push
stos
mov
jno
lds
cltd
mov
jae
das
cld
aaa
cli
mov
inc
std
out
loop
mov
movsl
push
push
xor
jg
decl
push
cltd
or
xor
cld
push
nop
jo
jns
jbe
lods
jmp
jns
test
jl
push
fs
cmp
xchg
call
ljmp
lahf
out
mov
mov
pop
mov
call
xchg
mov
jmp
insl
mov
pop
rcll
cltd
xchg
inc
jns
lock
incl
lahf
push
insl
push
aam
add
add
mov
jne
adc
pop
cmp
ror
xlat
rclb
sar
and
fs
push
mov
xchg
incl
into
lret
push
sbbb
sbb
fnstenv
mov
jmp
sbb
shrb
xor
sub
iret
subps
test
jmp
mov
les
arpl
cmpsb
jmp
push
cmpsb
pop
ret
push
incl
ljmp
add
mov
addl
jne
adc
dec
and
or
pop
in
sub
mov
in
mov
adc
aaa
xor
jmp
jmp
mov
lret
jmp
call
pushl
les
cltd
fcmovne
pop
mov
xor
js
fstps
jmp
inc
into
mov
ret
jns
and
shl
shll
cli
cmp
jmp
xor
sbb
js
mov
jb
lods
das
cmc
aaa
mov
call
and
xor
cmpl
lahf
in
jg
cltd
enter
call
pop
push
dec
push
leave
push
call
mov
ljmp
cs
shrl
stos
mov
mov
pushl
popa
lahf
xchg
movsl
into
std
mov
push
cltd
jg
decl
add
bound
xor
mov
sub
aaa
lcall
adc
cmp
mov
rol
lret
loop
rcrb
das
lock
lcall
pushf
push
push
outsl
outsl
sub
sub
push
rorl
out
lret
call
ljmp
fmul
ret
enter
pop
or
incl
cmp
sub
sub
jg
push
sbb
xor
xchg
mov
popa
pop
pop
ud0
ljmp
in
mov
sub
dec
aaa
dec
adc
idivb
push
aad
js
lcall
enter
add
ret
jl
cmp
call
addl
cmp
sbb
mov
mov
repz
add
cli
call
and
pusha
fsubs
sbb
es
incl
push
loop
or
sahf
sub
insb
xor
test
incl
or
xchg
sub
gs
jae
iret
mov
dec
sahf
and
iret
outsl
int
rolb
ljmp
mov
adc
jp
out
cmp
lcall
stos
cmpsl
call
push
push
incl
test
in
je
mov
xor
ljmp
stos
out
and
mov
add
fsubr
ret
and
call
jecxz
pop
add
fs
dec
cmp
cmpsl
sbb
fidivrl
sub
mov
cwtl
pop
dec
imul
mov
mov
cli
addr16
pop
and
dec
test
pop
es
insb
jo
xchg
enter
sub
xchg
push
cmp
inc
fistps
dec
call
mov
std
add
lret
jne
jb
outsb
dec
dec
or
incl
pop
dec
dec
ja
lods
jb
mov
int
lock
cmp
jg
xchg
jg
adc
jns
incl
ret
mov
mov
cmpsb
mov
inc
jl
dec
testb
cmpsl
sti
pop
adc
incl
sahf
cmp
setg
jb
and
and
sub
jb
daa
or
dec
pusha
dec
inc
mov
push
jmp
jge
popa
jno
xor
or
mov
lea
gs
fwait
adc
incl
lods
add
and
lods
cs
xchg
fistl
adc
movsb
roll
xchg
sarl
lret
jbe
sub
mov
fdivs
inc
xchg
inc
dec
xor
insl
jl
clc
das
icebp
dec
lea
mov
inc
jae
mov
js
loop
clc
mov
les
mov
cmp
out
inc
cmp
aas
sbb
push
sub
xor
pop
mov
or
inc
pop
cmc
inc
test
call
adc
fcmovb
and
sbb
in
addr16
dec
and
testl
pop
pop
scas
mov
popa
hlt
jnp
lds
pop
cmp
adc
mov
pushl
mov
push
pusha
mov
push
sub
int3
scas
mov
xorb
les
std
jmp
insl
aad
loop
stos
add
into
loop
or
gs
or
xchg
fidivl
jmp
fsts
cmpsb
mov
fwait
pop
jne
lods
fimuls
std
call
mov
pushf
pop
push
outsl
pop
stos
pop
mov
rorb
loop
sub
mov
push
dec
xchg
test
jg
jle
cli
cmp
xchg
dec
push
jecxz
int
xchg
mov
push
mov
adc
lods
lods
jg
incl
imul
cmp
jle
mov
sub
imul
stos
xchg
inc
icebp
cmc
sbb
adc
inc
subb
ljmp
jno
cwtl
subl
outsl
ss
fldcw
and
adc
shlb
pushf
scas
test
cmp
das
icebp
sub
lcall
xor
jmp
cmp
dec
jb
cmp
dec
dec
nop
pop
xchg
adc
mov
popf
pop
int3
pop
int3
jae
movsl
dec
mov
test
lret
lret
add
and
repnz
jmp
inc
mov
or
lods
inc
lahf
pop
ja
jle
inc
mov
decb
sub
ds
jl
push
test
pop
std
dec
xchg
aam
gs
push
mov
adc
push
cmpsb
mov
fstps
dec
adc
inc
test
xchg
push
add
ljmp
dec
cmp
adc
jb
dec
and
cld
dec
leave
cmp
and
mov
aam
sti
mov
dec
dec
adc
mov
imul
inc
xbegin
notl
fidivs
popf
mov
pop
inc
sti
mov
xor
push
pop
add
pop
and
dec
jle
dec
repz
fwait
mov
jo
xor
out
ret
decl
jmp
dec
dec
in
mov
lret
cmp
cmp
psubq
ds
pusha
daa
call
adc
lods
add
jp
sub
std
xor
xchg
jo
icebp
mov
lcall
jns
into
or
arpl
std
xchg
call
movsl
sbb
decl
outsl
imul
aad
cmp
das
out
and
and
imul
jg
stc
push
fs
fidivrl
dec
fists
loop
add
xchg
call
inc
test
xor
cmpsb
jbe
jge
add
and
into
mov
cmp
rclb
rclb
mov
sub
pop
add
cmp
in
jmp
shlb
test
cmpsb
mov
lods
aaa
es
dec
cs
xchg
sbb
pop
jnp
mov
adc
push
int
dec
mov
shr
xor
dec
std
pop
orb
mov
mov
jmp
inc
xor
and
push
jl
and
lea
mov
fmull
mov
push
shrb
cmc
mov
outsl
sub
cmp
std
or
mov
cmc
mov
dec
fbstp
sbbb
fnstsw
aad
enter
jb
punpckhwd
das
leave
push
mov
outsl
push
cvtdq2ps
aas
and
gs
jne
and
out
outsb
adc
jg
cmp
push
dec
pusha
push
cmc
xorl
cmp
lods
mov
jmp
xorl
mov
adc
insb
sahf
call
push
cli
push
xchg
test
adcb
sarl
mov
cmp
das
cmp
fstpl
jmp
nop
sbb
lods
cmc
loope
or
insl
clc
ret
hlt
mov
data16
mov
outsl
sbbl
sbb
call
mov
push
out
mov
push
in
call
movsl
mov
shrl
push
in
lret
add
test
jnp
mov
jmp
ret
xchg
sub
add
xchg
imul
fisttpl
xchg
jo
scas
inc
inc
mov
and
ljmp
mov
push
adc
and
add
fstpt
fldt
push
mov
add
dec
pop
mov
scas
cmp
mov
incl
pop
sbb
add
sub
push
aad
into
mov
ljmp
sarl
push
push
xchg
mov
js
sbb
cwtl
jl
pop
sub
jg
out
dec
jp
std
adc
mov
in
jbe
roll
adc
or
ljmp
or
cmp
push
iret
jae
mov
mov
dec
imul
dec
std
mov
imul
incl
push
inc
sahf
ja
clc
adcb
call
jno
inc
and
out
jo
fstpt
push
lcall
mov
cs
out
stos
repz
xchg
xor
and
addr16
ljmp
sub
into
mov
leave
cwtl
mov
icebp
and
push
pop
cmp
mov
stos
cmc
sahf
push
pushl
jno
adc
adc
push
lods
push
push
pop
scas
movsb
and
ja
cli
push
mov
mov
xor
push
sti
jb
dec
xchg
stos
jg
aaa
jg
loope
sti
test
xchg
cli
jo
orl
ret
inc
negb
adc
inc
int3
mov
adc
mov
mov
rolb
mov
mov
aaa
pop
inc
nop
ljmp
cli
mov
gs
stc
ljmp
das
orl
inc
std
cld
and
xlat
cmp
pop
fwait
lcall
std
lcall
or
iret
xchg
scas
lods
xorb
dec
xor
outsl
mov
pushf
jbe
fldl
push
js
add
inc
xor
daa
add
lcall
mov
ljmp
mov
dec
sub
popf
ljmp
movsl
hlt
out
aam
push
push
jp
sub
sub
xor
das
jns
pop
cltd
pushf
mov
call
sub
je
mov
cmp
dec
cmpsl
mov
movntps
push
inc
push
js
xchg
fcoms
push
into
xchg
inc
ss
mov
in
cmc
sub
lods
cmc
fisttpll
jecxz
mov
inc
in
out
mov
ljmp
dec
ss
jne
aaa
xchg
je
pop
pop
xchg
jne
addb
inc
jg
out
cmp
lret
or
cmp
sti
scas
into
call
mov
jbe
add
test
lods
mov
jg
decl
fwait
scas
cmpb
adc
das
mov
lock
into
jmp
mov
add
push
movsl
dec
push
cmc
xchg
out
les
xor
scas
hlt
pop
clc
sbb
push
or
add
mov
imul
pop
jecxz
lret
push
pop
and
shlb
test
push
pop
outsl
fcos
jmp
mov
fistpl
negb
lret
mov
sarl
scas
sub
das
dec
mov
shll
aaa
daa
push
and
dec
or
in
ficoms
mov
insb
call
xchg
sbb
mov
movsb
sbb
mov
std
push
ljmp
std
cli
push
xchg
out
push
rol
fucompp
adc
outsl
out
jmp
xor
mov
je
mov
nop
stos
lea
mov
or
jmp
mov
mov
add
push
cmpb
out
push
or
cmp
xor
ja
and
xlat
pop
incl
jmp
out
xchg
lret
je
test
inc
push
jle
mov
call
adc
mov
jecxz
aas
out
outsb
or
in
imul
out
movsl
out
jbe
pop
pop
or
repnz
leave
pushf
fisttpl
cmp
mov
lods
push
and
sbb
cmp
ds
sbb
enter
pop
shl
pop
and
incl
clc
daa
mov
out
mov
inc
mov
mov
mov
incl
and
test
nop
xchg
inc
dec
cltd
mov
das
ss
sub
ljmp
cmp
pop
lods
mov
dec
mov
xlat
movsb
pop
cmp
ffreep
cmp
sub
pop
fsubrs
lds
cmpsb
jle
mov
int3
mov
fwait
inc
sbb
incl
lret
jle
or
or
je
mov
push
mov
outsl
dec
pop
fsubrl
push
mov
stos
pop
jae
add
lock
ss
and
jmp
xor
sahf
nop
test
inc
std
mov
repz
cmp
pop
outsb
mov
pushl
jle
lea
cmpsl
out
jmp
out
pop
dec
imul
loopne
mov
dec
out
daa
mov
movsl
pop
sbb
xchg
test
jg
iret
dec
pop
bound
adcl
add
shrl
jg
decl
jecxz
std
out
insb
jecxz
nop
push
sub
das
lcall
lock
fs
aas
addb
jp
or
lcall
in
jl
inc
pop
iret
mov
lods
pop
dec
icebp
push
lock
adc
ljmp
jg
jns
cwtl
mov
test
or
cmp
inc
push
ljmp
push
je
dec
or
in
pushl
sub
mov
mov
scas
mov
push
sub
and
or
cli
lcall
out
imul
mov
mov
ficompl
das
std
jmp
inc
jno
mov
mov
test
xchg
mov
stc
cs
scas
add
mov
incl
or
lahf
fdivs
jmp
popf
push
push
stos
sbbb
add
or
jg
test
mov
jno
bound
mov
jmp
js
adc
and
inc
scas
and
and
pop
stos
incl
xchg
xchg
outsl
fs
push
mov
or
push
sbb
into
inc
cwtl
sub
idivb
call
movsb
arpl
sub
lods
push
ljmp
cmp
loop
sub
pop
jnp
mov
adc
cmp
mov
mov
jmp
cmpsb
mov
inc
maskmovq
notl
js
xor
xor
es
lcall
cmp
mov
les
or
jge
std
cmpsb
push
xor
cmc
inc
sub
js
and
xor
aas
enter
mov
call
mov
idivb
divl
scas
or
lcall
call
cli
jne
sub
icebp
sti
mov
mov
add
jp
and
sbb
cs
sub
adc
and
push
enter
pop
push
xchg
sub
add
stos
xor
jo
mov
pushl
popa
inc
fsubp
jl
mov
sbb
cmp
insb
push
cmp
lcall
imul
xchg
stos
add
xchg
sbb
repnz
sbb
mov
xor
decl
cld
and
sahf
or
pop
xchg
mov
push
pusha
lds
mov
cli
rolb
fldcw
push
cli
jmp
or
jne
sub
lcall
dec
insl
int3
imul
sahf
cmp
pushl
fmuls
fnsave
cwtl
xchg
out
xor
xlat
and
pushl
or
dec
mov
add
mov
jmp
adc
sbb
sarb
nop
jo
xchg
inc
or
data16
repz
inc
leave
sar
decl
addr16
lret
enter
push
inc
adc
mov
xchg
xchg
xor
ljmp
or
cld
lcall
scas
sbb
or
push
cmp
jns
mov
inc
stos
inc
mov
jle
cmp
fcomp
aas
jecxz
jg
pop
push
dec
inc
pop
sub
test
cmpsb
lret
add
call
jg
outsb
lock
add
fnstsw
add
push
sub
mov
mov
inc
std
fcmovnbe
jno
pop
std
xor
push
cltd
mov
ljmp
imul
mov
scas
in
rcrb
adc
fists
lret
decl
inc
inc
push
pop
outsb
jmp
push
inc
fwait
pusha
mov
mov
dec
ljmp
and
jnp
mov
mov
adc
scas
jbe
mov
sbb
decl
fbld
pop
es
mov
aas
in
xor
pop
adc
movsl
jmp
sub
xor
xor
iret
gs
sbb
out
mov
or
divl
mov
mov
inc
pusha
insl
cs
adc
int
ss
and
mov
loope
mov
mov
adc
jbe
mov
sbb
push
lcall
ficomps
push
mov
push
iret
stos
jnp
jmp
sub
jecxz
inc
and
orl
ret
imul
xchg
call
cli
incl
mov
test
cwtl
jecxz
inc
jl
rcrl
ljmp
das
jmp
shll
inc
iret
lret
aam
mov
jmp
cmp
ljmp
fs
xor
and
adc
xor
mov
out
mov
pushf
lods
jne
jl
or
decl
inc
repnz
xchg
rclb
sbb
sub
je
jp
out
jmp
and
scas
insb
jp
pusha
dec
mov
lea
scas
mov
and
incb
pushl
push
sub
xor
push
dec
adc
push
or
jne
test
scas
mov
testb
fnstenv
cli
mov
jg
into
dec
inc
lret
adc
lahf
dec
push
cmc
jae
enter
adc
out
cmpsl
mov
mov
mov
pop
idivl
fwait
push
xor
push
in
mov
in
mov
jge
ja
jmp
and
repz
adc
lcall
cmc
lods
aaa
lock
std
jmp
pop
loope
fisttps
xor
repz
cld
jg
and
sbb
fstpt
dec
popf
and
imul
push
outsb
push
arpl
mov
mov
or
push
incl
lcall
enter
dec
ret
push
cmpsl
fwait
sbbl
call
clc
jge
or
imull
out
mov
sti
lea
fdivrl
repnz
jg
sub
fwait
mov
imulb
test
sub
xchg
cmp
leave
add
push
mov
push
mov
sub
fcmovnu
stc
jecxz
mov
or
in
xchg
loop
lcall
xchg
mov
jne
mov
hlt
fmul
xor
dec
orl
and
xchg
rol
cmpsl
mov
ljmp
std
dec
cld
xchg
lret
push
add
roll
loope
std
movsb
sti
adc
mov
ljmp
je
xchg
xlat
jl
jp
scas
test
nop
sub
bnd
ljmp
aad
pop
clc
inc
movsb
addr16
push
push
int
xchg
mov
add
add
sub
or
and
xor
mov
push
out
cli
inc
incl
mov
push
and
subl
sbb
aas
mov
call
insb
cwtl
inc
cmp
xchg
cli
mov
dec
aad
xor
outsb
jne
addr16
or
cmp
call
loopne
jecxz
pop
ret
or
add
xchg
or
push
push
call
arpl
sbb
push
addr16
fisubl
ret
ud0
pushl
sar
mov
ret
xchg
cmp
mov
mov
mov
ljmp
xor
dec
fstl
rorl
aam
xchg
fimull
shlb
adc
fisttps
or
xchg
stos
ja
cmpsl
aas
inc
xchg
icebp
test
dec
pusha
mov
mov
mov
cmp
adcb
cld
xchg
fistpll
rclb
test
inc
mov
mov
loop
cmp
cmp
jmp
cwtl
jmp
jmp
sub
cli
lds
pop
jne
mov
andl
jae
cltd
mov
xchg
ret
cmc
lcall
push
or
xchg
jnp
cmc
or
sbb
loopne
popa
mov
cli
jmp
icebp
jle
or
inc
imul
jns
in
mov
lcall
inc
cmp
jnp
lds
andb
lea
test
sbb
push
add
sbbl
xchg
cs
ja
ds
adcb
sub
push
lahf
je
scas
insl
test
incl
call
je
fisttpl
pop
xchg
test
std
roll
sub
rorb
pop
cli
lcall
pusha
sub
jb
out
dec
adc
mov
outsl
mov
push
clc
decl
cmp
push
jns
xchg
mov
add
and
aaa
stos
xchg
in
aaa
rcr
jae
and
cmpsl
fld
popf
pop
pushl
clc
pop
mov
popa
pushf
test
fxch
int
jecxz
xor
xor
or
cmp
incl
cmp
mov
aad
xchg
arpl
xchg
cmp
sbb
aaa
mov
xchg
enter
jmp
daa
mov
jp
cli
shrl
icebp
lds
sbb
pop
cmp
mov
loopne
fsubrl
jmp
cld
jg
stos
jg
xchg
outsl
test
insb
loop
push
sbb
mov
call
lcall
call
rolb
roll
call
dec
int
inc
cli
outsb
loope
lret
and
std
ljmp
adcl
cmpsl
mov
test
hlt
aam
jbe
decl
sti
loopne
sbb
adc
addl
addr16
adc
xchg
aad
lea
lret
notb
js
xchg
lcall
shr
fidivs
out
icebp
dec
mov
fwait
in
and
les
in
enter
mov
push
test
jl
incl
std
pop
jnp
daa
fs
adc
fisubrs
iret
scas
adc
jae
mov
dec
adc
xchg
cmp
adc
xchg
loop
les
inc
int3
das
or
and
xchg
sub
into
sti
jmp
push
std
xchg
sbb
bound
add
rorl
adc
jg
stos
sbb
std
lods
or
inc
jne
shrl
pop
sti
ret
cltd
jb
cli
inc
test
inc
shll
ljmp
inc
and
setge
rorl
inc
sar
test
test
push
sbb
pop
and
dec
add
std
ljmp
out
dec
push
cmpsb
rorl
nop
mov
decl
dec
lds
xor
stos
push
sub
aad
mov
sti
or
sbbb
testb
inc
pop
repz
dec
mov
rcll
jbe
cli
add
pushl
mov
add
sub
or
mov
ret
lock
pop
scas
andl
pop
sbb
inc
push
xor
jle
sbb
mov
iret
push
push
mov
dec
mov
push
lds
mov
mov
inc
xlat
mov
lock
bound
mov
inc
xchg
out
inc
cltd
mov
imul
ds
add
notb
push
std
inc
pop
out
pop
mov
mov
addl
jl
mov
or
mov
cmp
adc
cmpsb
sbb
xchg
pushl
loope
jbe
mov
xlat
cmpsb
pop
mov
loopne
aad
xor
push
dec
shl
push
push
popa
ret
call
cltd
dec
and
inc
ds
mov
les
andl
dec
xor
lds
sub
mov
pop
mov
ftst
aam
xor
pop
mov
dec
jae
adc
cltd
jnp
pop
mov
mov
in
ds
sub
dec
pop
lea
fs
decl
int3
out
nop
dec
or
dec
pushf
leave
decl
fwait
inc
push
adc
mov
repz
sub
roll
mov
jmp
or
in
or
movsl
add
fsubrs
xor
ljmp
lds
loop
pushl
lock
push
cmp
jbe
hlt
xchg
mov
stos
pop
xchg
sti
dec
and
adc
cmp
sbb
or
mov
xchg
inc
rcrb
sti
leave
mov
xchg
xchg
test
mov
lahf
add
call
pop
js
and
mul
push
pop
cmpsb
icebp
inc
ss
push
outsb
fidivrl
sbb
push
clc
fucomip
fldcw
sbbb
cmp
add
mov
xor
inc
pushl
subl
cld
mov
xchg
mov
add
pushl
mov
into
mov
xlat
pop
mov
fbld
mov
cmp
cmpsl
adc
pop
cli
call
cltd
xchg
sbb
fidivrs
push
out
repz
cmpsb
add
push
lret
loopne
xor
lcall
in
jbe
inc
imul
fdiv
inc
daa
test
out
xchg
popl
mov
insl
rclb
les
and
lcall
decl
pop
sub
add
cmp
mov
push
adc
cmp
emms
cmpsb
incl
and
xchg
lds
fidivl
gs
jno
fists
mov
mov
lcall
std
lcall
fwait
repnz
lahf
pop
rcrl
sbb
mov
mov
call
call
mov
push
in
push
mov
iret
add
push
pop
call
in
test
push
mov
shl
decl
mov
ret
in
rcrl
mov
incl
mov
dec
movsl
sbb
cmovno
sbb
pop
cmp
adc
call
call
jns
and
or
jmp
jno
or
enter
mov
cli
jg
decl
lods
jge
fwait
sbb
sub
loop,pn
daa
fcompl
lcall
cltd
and
fcompl
jno
jnp
insb
nop
and
mov
inc
pop
inc
push
scas
lods
mov
xor
xchg
adc
mov
pop
fistl
push
jg
sub
pop
dec
mov
sbb
adc
xlat
xor
jg
inc
sub
cltd
or
fnstcw
pop
mov
mov
clc
pop
jp
outsl
add
ljmp
lock
xchg
cltd
mov
int
mov
dec
imul
ss
lock
inc
dec
sarl
and
imull
sbb
xchg
lahf
enter
pop
test
cld
or
sub
gs
popf
pop
and
aad
movsl
dec
out
hlt
push
mov
enter
call
shl
shlb
fcomip
xchg
pop
sbb
in
inc
jle
icebp
setbe
loop
cmpsb
pushl
loope
incl
cmp
push
jae
xor
mov
fisubs
dec
jb
jg
into
nop
out
or
stos
mov
testl
push
movsl
jle
adc
les
lcall
mov
or
and
pop
jnp
test
cmp
sbb
push
pop
lods
popa
mov
mov
push
jg
lods
lods
jo
clc
inc
add
xchg
inc
jmp
pop
dec
loopne
jg
das
int
fcoml
je
push
je
mov
mov
mov
pusha
jle
add
mov
jle
jg
imul
pop
sahf
repz
subb
jg
lods
push
scas
bound
mov
lret
cmp
mov
cmpsb
movsl
jecxz
jmp
inc
sbb
clc
stc
lahf
jae
sbb
aam
adc
jmp
insb
mov
pushl
stos
hlt
cmp
adc
fbstp
xchg
pop
loope,pn
sub
mov
aam
ficompl
jbe
mov
loop
loop
mov
xchg
add
call
xor
sub
push
shll
mov
div
jg
jmp
inc
fldt
add
jle
lcall
icebp
fstpl
mov
dec
jge
fwait
jb
test
test
ljmp
inc
mov
ljmp
cmp
loope
inc
mov
or
cmp
cmpsb
and
iret
aaa
xchg
jmp
cld
decl
mov
pop
sub
cmp
push
cmpb
pop
je
aam
por
imul
xchg
mov
cmpb
add
addr16
mov
mov
daa
dec
das
lods
scas
setl
and
loopne
ljmp
pop
shll
jne
pop
jne
lods
sbb
stos
xchg
jae
adc
sub
sub
fdivs
out
cli
ljmp
sub
and
in
jmp
and
bswap
xchg
sub
adc
iret
xor
sti
call
jno
les
gs
cmp
xchg
cs
pop
jle
pop
ror
mov
pop
pusha
cmp
lret
jno
mov
and
sbb
pop
std
enter
inc
test
mov
or
sbb
ja
xor
mov
cmp
sarl
insb
arpl
sub
adc
cmp
fildll
dec
stc
test
mov
mov
in
mov
jge
loop
in
cld
in
stc
push
add
cmpsb
mov
insl
cmp
jno
repnz
jbe
mov
jg
pop
in
ffreep
out
jle
cmp
mov
iret
loopne
call
clc
lcall
lock
push
xor
sbb
leave
out
stc
daa
out
idiv
jg
lcall
adc
jo
xchg
jmp
pop
cld
xchg
jmp
or
pop
inc
sbb
insl
sbb
mov
std
adc
nop
mov
push
decl
dec
inc
fmull
mov
repnz
sti
mov
jae
gs
or
mov
jl
cli
push
repz
jmp
jge
cmpb
mov
and
ja
xor
sub
cli
test
or
mov
call
loopne
dec
mov
out
movsl
inc
mov
inc
out
imul
pop
sbb
call
jae
daa
orb
imul
in
cmp
cld
pushl
pushf
movzwl
adc
lret
fdivrl
sbb
int
decl
jns
pop
subb
cs
out
xchg
bound
add
xor
insl
int3
lds
sar
decl
data16
shll
roll
cltd
out
fildll
jo
xor
add
lock
jecxz
mov
cmp
and
jecxz
dec
lds
mov
inc
or
add
ja
test
int3
enter
xchg
and
ljmp
dec
pop
test
mov
cld
inc
cs
loope
pop
pop
dec
pop
jl
xor
mov
cmc
movsb
mov
sub
and
dec
mov
jg
and
movb
inc
loop
insl
popa
sub
pushl
in
add
xor
pop
roll
sub
nop
push
xchg
cltd
adc
jg
sbb
xlat
or
shll
cld
adc
incl
sbb
lds
gs
cmc
xorl
jnp
mov
decl
std
arpl
shlb
add
sub
mov
decl
shlb
sub
pop
aas
in
and
lahf
push
inc
cmpsl
ret
incl
pushl
pop
xchg
gs
and
cli
stc
push
cld
push
xchg
mov
aaa
cmpsl
pushf
out
cmpsl
push
das
clc
popa
and
sarb
jg
out
jnp
aad
insb
and
or
or
mov
scas
mov
icebp
cld
pop
xchg
out
pushl
ljmp
inc
in
xor
enter
mov
fsubs
cmp
outsl
incl
je
les
and
rolb
xchg
sar
mov
hlt
fcmovnbe
sarl
add
call
sub
mov
ja
sbb
cmp
fdivrp
daa
sbb
clc
xor
mulb
or
movsl
dec
mov
or
adc
push
iret
pop
fsubl
fucomip
inc
jg
adc
dec
fdivs
pop
sub
scas
xor
xchg
push
jnp
stos
imull
imul
push
nop
xchg
push
adc
stc
data16
pop
test
pop
mov
loop
shrl
js
decl
cld
test
subb
call
add
repnz
jmp
xchg
arpl
dec
lahf
mov
addb
lret
and
in
adc
or
adc
pop
out
mov
and
dec
pop
cmp
lcall
sub
movsl
unpckhps
jmp
pop
xorl
mov
adc
push
icebp
sbb
xor
xor
dec
adc
adc
rorl
pop
pop
loop
stc
mov
cmp
cmp
fs
sub
addr16
rcll
pusha
aas
out
dec
xor
ds
int3
dec
jb
or
outsl
mov
sbbb
mov
test
into
xchg
outsl
add
das
lock
mov
cmp
push
mov
mov
jns
fldt
push
ljmp
fadds
test
scas
sbb
mov
adc
mov
sbb
inc
mov
movsb
mov
and
lret
movsl
into
cmpsl
push
jmp
clc
xor
or
xchg
push
int
imul
xchg
push
add
jle
cmpsb
jg
jmp
ss
cli
push
std
inc
and
rcl
mov
jg
in
xchg
clc
pusha
icebp
ljmp
sbb
cld
stos
xlat
pop
out
jg
mov
add
lea
call
scas
lods
aas
jg
stc
or
daa
xchg
out
mov
xchg
fwait
jae
jmp
int3
add
in
ds
push
jmp
loopne
js
add
outsb
leave
insl
cmpsb
jg
xor
les
fwait
push
sbb
cmp
in
push
or
in
add
push
jecxz
pop
daa
gs
mov
insl
in
add
jnp
jmp
jno
lret
fmuls
sbb
lret
pushl
pusha
call
stos
mov
dec
mov
fwait
call
push
push
stc
jae
ljmp
mov
cli
cmp
jecxz
xchg
jl
xchg
leave
gs
jmp
sub
pop
mov
cmc
ja
ss
daa
xor
lock
jns
cs
xor
int3
lods
jg
pop
jne
or
test
push
popa
mov
cwtl
fisubs
sarb
mov
std
ljmp
lcall
scas
cltd
je
dec
pop
lret
in
xor
outsl
add
mov
lods
loopne
paddsb
lods
test
hlt
rcrb
xor
and
mov
inc
adc
ljmp
mov
sub
out
das
test
xor
mov
xchg
mov
out
stc
pop
inc
lea
mov
out
xor
repnz
lcall
iret
mov
mov
movsl
in
std
mov
cmpsb
push
cmpb
pop
negl
fucomip
sub
pop
insb
jle
daa
pop
rcll
mov
sub
dec
sub
mov
movsb
sahf
mov
cmc
je
cs
sarl
outsl
and
les
daa
xlat
lcall
cld
lcall
imul
sbb
pop
subl
cmpsb
mov
sti
outsb
cmc
ljmp
add
dec
fs
divl
and
inc
cli
ljmp
mov
jmp
pusha
push
shrl
stos
fcompl
pop
cld
ret
fidivrl
clc
ret
jg
fs
sub
int3
jl
jecxz
lods
sqrtps
aad
rorb
adc
xor
and
sub
ljmp
push
popf
jns
imul
mov
adc
mov
lods
push
call
cli
dec
gs
mov
out
jns
or
sbb
inc
out
jmp
mov
jp
and
fildll
inc
stos
mov
scas
nop
nop
jne
add
jg
pop
ljmp
fsincos
shl
lahf
dec
push
sbb
mov
stos
push
jmp
mov
nop
or
cmpsb
pop
xchg
mov
sub
mov
sahf
xor
and
pop
leave
push
in
std
mov
xchg
in
push
ljmp
stos
xchg
dec
pusha
sti
bound
mov
adc
sub
das
xchg
fcmovb
ljmp
dec
or
or
add
xchg
mov
std
decl
cld
cmp
insl
leave
mov
stos
add
jg
xor
inc
sbb
mov
mov
add
xchg
dec
push
mov
ljmp
xor
fsubrl
test
adc
xor
das
hlt
ljmp
mov
xchg
cmp
stos
or
out
jg
pushl
inc
xchg
lock
add
pop
out
or
xchg
fwait
adc
inc
ljmp
decl
mov
mov
adc
bound
inc
sti
and
add
call
leave
aaa
mov
lret
sub
xor
cmp
cwtl
test
mov
fnop
cmp
pop
cmp
inc
push
aad
call
mov
shrb
jp
push
mov
mov
or
and
add
pop
mov
lcall
clc
sub
fucomip
push
or
mov
cld
mov
push
outsl
gs
push
sub
inc
in
jb
mov
mov
je
xchg
mov
xor
sbb
mov
jg
fwait
into
sbb
loope
mov
inc
ret
add
sub
pop
cld
mov
arpl
outsl
shrl
outsl
hlt
mov
mov
rcl
jle
jae,pt
add
hlt
ficomps
fisubs
inc
sbb
push
mov
cmp
in
inc
mov
aam
push
xlat
or
cwtl
imul
decl
jnp
cmp
sub
popf
push
lods
lods
loope
or
call
mov
sub
repz
jbe
adc
cmp
jg
pop
imul
sti
inc
and
rcr
adc
cld
ret
lock
cli
movsb
push
scas
push
inc
inc
sarb
mov
add
test
clc
incl
div
inc
sti
xor
xor
decl
loope
push
jbe
repz
sbb
sahf
and
popa
mov
push
pushl
sbb
dec
push
and
or
adc
inc
mov
mov
lret
xchg
push
jg
hlt
cmp
mov
insb
jb
sub
adc
xchg
in
mov
leave
jg
std
or
test
push
xchg
sub
pop
jg
xorl
in
enter
call
popf
jecxz
mov
cmp
icebp
out
pop
jge
adc
ljmp
out
inc
pop
xor
shrb
push
dec
decl
jl
bound
mov
cmp
movsl
add
cmp
mov
push
pop
fildll
decl
aam
and
and
push
rorb
enter
inc
xchg
pop
and
push
lock
call
sub
hlt
mov
clc
inc
push
outsl
fldl
std
mov
ljmp
test
push
sub
ss
and
rolb
fnstsw
fcomps
std
cmp
fwait
mov
cwtl
loopne
scas
sub
sub
movups
inc
push
cmp
mov
jecxz
rorb
cmp
cmp
push
into
int
sbb
xor
push
and
adc
add
mov
pand
cli
dec
lret
clc
and
adc
mov
adc
xchg
lret
inc
pop
mov
jg
call
xchg
ljmp
or
subb
inc
mov
jg
jmp
sub
mov
popf
shll
jae
cmpsb
or
lods
add
mov
out
ljmp
inc
sbb
daa
stos
mov
add
jp
inc
into
aaa
cmp
data16
pop
dec
push
adc
inc
ljmp
fnstsw
or
insb
push
dec
push
jae
pop
test
jnp
ss
ss
js
push
fdivl
divb
jno
pop
or
lcall
xor
loopne,pn
xchg
inc
arpl
dec
jmp
inc
test
lcall
lock
cmp
sti
pop
xor
xorb
js
lcall
dec
jp
mov
gs
or
imul
dec
and
sti
dec
push
imul
push
repnz
mov
mov
dec
jmp
and
lcall
ljmp
inc
pop
addr16
sidtl
cmp
dec
jl
xorb
test
or
sub
pop
test
lahf
xor
cmp
out
enter
enter
jecxz
or
imull
cmp
and
call
cmp
jnp
das
aam
cs
test
jo
cmp
dec
push
incl
cltd
fimull
popa
or
adcl
aad
mov
push
fwait
push
lods
push
adc
std
xchg
inc
sub
or
pcmpgtd
arpl
jno
call
ljmp
sbb
jecxz
push
stos
sbb
bound
xchg
adc
pushl
js
xlat
imul
mov
mov
xor
daa
decl
mov
inc
stos
cmpsl
inc
or
dec
loop
aam
inc
dec
jns
cs
in
incl
mov
icebp
cmp
mull
std
xchg
xchg
rcrb
add
jmp
jg
and
xchg
es
test
push
add
push
xchg
pop
mov
lds
mov
jle
jns
add
mov
mov
xlat
ja
fisubs
mov
sub
jnp
ljmp
push
gs
sbb
repnz
out
out
sbb
fistl
push
data16
or
nop
stos
call
subb
push
pop
cwtl
jge
cmp
outsl
pop
sbb
int3
pop
icebp
ja
cmpsb
dec
jns
and
mov
pop
adc
movsl
inc
lahf
test
push
pop
mov
lcall
lods
outsb
mov
mov
das
jb
ja
dec
mov
xor
mov
gs
mov
mov
sub
mov
mov
jbe
fsubl
adc
out
cli
jg
cmpsl
lods
imul
iret
out
jbe
repnz
add
pop
mov
sub
xor
shl
jl
shr
aaa
xchg
mov
jne
test
bound
and
call
xchg
adc
test
mov
lcall
pop
sub
xor
and
les
lcall
add
xlat
jbe
mov
adcb
ret
popa
stos
cmp
subb
std
incl
adc
cmp
js
mov
pop
je
cmp
inc
fcoml
pop
idiv
lcall
cmp
jns
push
and
cwtl
je
fisttpll
cltd
popf
ljmp
std
decl
xchg
xchg
ficoml
mov
inc
outsb
add
iret
adc
push
or
dec
adc
in
loop
add
stos
jmp
fimull
out
nop
je
into
xchg
push
lcall
jmp
push
loopne
xorl
and
fucom
lret
sbb
push
xchg
mov
pushl
dec
or
clc
adc
xor
stc
push
lcall
adc
pushl
ret
xchg
push
inc
lret
mov
xchg
mov
pop
mov
jg
es
out
pop
lret
jp
icebp
or
cmp
aad
imul
jmp
lret
loop
or
jp
mov
inc
push
decl
aaa
sub
sbbl
or
ja
xchg
dec
in
in
scas
jecxz
test
cld
push
scas
mov
pop
loopne
xchg
out
adc
mov
fsub
cwtl
stos
pand
jg
in
in
dec
inc
jne
inc
adc
jle
outsb
sbb
outsl
or
ljmp
sub
out
sbb
ds
xor
push
ljmp
lds
call
call
fwait
popa
sbbl
dec
popf
or
imul
ds
add
shll
push
rcl
lret
inc
or
in
bound
aas
pop
cwtl
gs
adc
es
in
xor
pop
clc
lods
cmp
pop
pushl
aas
ret
adc
mov
mov
lods
push
pushf
pop
mov
pushl
in
fldt
sub
inc
int3
das
cld
maskmovq
negl
or
sbb
sar
ljmp
packuswb
pop
call
mov
jmp
idiv
ljmp
pop
dec
adc
fdivs
xor
repnz
imul
in
sbb
outsl
icebp
rol
dec
jge
xor
shlb
jmp
mov
add
inc
jnp
ret
xchg
inc
cltd
sub
popf
sub
xchg
pop
call
fisttpl
test
repnz
fnsave
outsl
or
lret
cmc
add
or
imul
mov
sub
mov
adc
mov
dec
pop
clc
cmpsb
push
lea
mov
and
adc
pushl
ret
xchg
cmp
fwait
je
shl
inc
xchg
lods
mov
call
mov
add
lahf
lods
sbb
add
lcall
shll
fwait
jmp
outsl
mov
fcmovbe
repnz
ss
mov
in
call
loop
mov
fidivrl
xchg
inc
sub
ror
stos
pop
mov
pushl
stc
sar
stos
icebp
repnz
jl
jo
gs
xchg
add
test
xchg
aas
dec
fucomip
jl
aas
push
inc
pop
cmp
stc
cmp
fistpll
fimull
in
or
stos
dec
arpl
lods
adc
pusha
push
dec
xor
lods
xchg
ror
sub
xchg
clc
decl
jecxz
mov
pop
sub
std
mov
jne
test
xor
ret
es
fsts
sub
pop
adc
ffreep
dec
xlat
mov
mov
lret
sbb
es
clc
decl
and
sub
cmp
lea
sub
cmp
cld
call
dec
inc
test
ret
into
scas
mov
mov
cmc
nop
fbld
pop
mov
xor
popf
cmpsb
into
push
out
ret
arpl
jmp
xlat
mov
int
push
call
jecxz
fildl
sbb
aaa
pop
add
mov
ljmp
lock
add
mov
lret
repz
stos
and
cmc
xlat
mov
jne
xor
imul
out
mov
in
cmp
mov
pusha
outsb
data16
scas
lds
in
jne
faddp
lcall
adc
cs
fs
cmpsl
repz
into
cwtl
mov
shrl
mov
es
jmp
repz
fdiv
repnz
xlat
mov
pop
movl
test
pop
push
inc
aaa
sub
mul
jmp
repnz
jns
sbb
icebp
fisubl
adc
out
dec
and
sub
push
pop
fcos
aaa
and
push
test
lahf
int3
pushf
push
pop
loopne
je
cmp
int3
mov
sbb
pop
sbb
mov
out
pop
shll
sbb
outsl
jbe
outsb
and
stos
testb
jno
sub
int
add
xor
jg
movsl
or
clc
dec
inc
xlat
add
sbb
push
sub
pop
pushl
sarb
cmpl
loope
out
xchg
xchg
push
xchg
roll
or
pop
mov
lcall
mov
cmc
movb
das
add
imul
fs
sar
jg
stos
xchg
or
cli
cmpsl
sahf
dec
add
loopne
sbb
mov
lret
out
jg
lods
adc
push
je
push
lods
mov
mov
inc
mov
jl
jge
sub
mov
in
mov
jmp
xor
or
lods
scas
cmp
pop
jg
jmp
cmp
lret
jge
pushf
mov
mov
cmp
cld
ljmp
movsl
ret
and
xchg
jmp
test
sarb
repnz
cwtl
mov
insl
mov
pop
xchg
xchg
inc
clc
pop
bound
adc
call
jbe
cli
dec
mov
cmp
mov
shl
pop
push
outsl
add
add
fdivrp
pushl
js
push
loopne
sub
xchg
mov
add
popf
jl
stc
out
add
movb
jns
scas
xchg
bound
imul
ljmp
je
inc
xlat
push
cltd
xlat
fmul
sub
sbb
mov
pusha
sub
mov
mov
pop
repz
roll
call
dec
mov
sahf
mov
mov
mov
push
sub
enter
push
flds
fbld
leave
ret
adc
push
add
ss
filds
cltd
jo
mov
lahf
mov
sub
mov
cld
das
std
cltd
push
sub
add
sub
aad
testb
sub
sbb
popf
mov
xchg
and
out
js
and
jle
ljmp
dec
aaa
push
adc
imul
in
ljmp
std
fiaddl
jle
jecxz
loopne
jle
stos
pop
cmp
das
addr16
bound
mov
pushl
js
lcall
or
cli
sbb
mov
sahf
gs
aas
lcall
adc
mov
cmpl
mov
clc
ljmp
or
out
test
fsub
lcall
jbe
or
add
enter
xlat
adc
enter
enter
rolb
lea
or
insb
or
add
add
imul
and
push
iret
insb
inc
add
add
add
lds
add
add
inc
or
adc
js
inc
js
push
sbb
adc
add
and
jne
mov
push
fistps
dec
push
sbb
sub
mov
dec
adc
pop
sub
js
shll
add
clc
pop
sbb
push
je
mov
data16
popf
je
outsl
popa
or
sbbb
imul
push
add
add
inc
push
rcrl
shlb
out
add
mov
cmp
sub
dec
mov
pop
pop
addr16
pushf
addr16
jo
imul
jno
sub
or
mov
popa
jo
add
mov
andps
addr16
pop
pop
mov
jnp
out
aaa
push
cmp
outsl
lcall
adc
mov
jl
in
pop
gs
arpl
jae
subb
xor
dec
aaa
popa
fwait
inc
outsl
stc
jg
add
ret
push
add
dec
inc
icebp
pop
lsl
add
cmp
fistps
outsl
sbb
add
adc
adc
and
pushf
jmp
or
add
and
add
jnp
add
xchg
push
add
or
cs
shl
rorl
adc
ret
jl
enter
ss
add
pop
dec
jae
push
cmp
sub
sbb
mov
daa
pusha
inc
bound
or
mov
nop
cmpsb
sbb
mov
push
jo
pop
inc
or
imul
cmp
xchg
add
add
add
add
add
add
add
add
adc
mov
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
