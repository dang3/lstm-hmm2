mov
adc
jg
pop
xchg
jb
push
outsb
stos
ret
dec
ficomps
mov
xchg
or
xor
pop
insl
inc
cwtl
into
cli
insb
push
stos
pop
adc
nop
dec
mov
push
dec
cmpsl
lods
sub
out
mov
add
sbb
sarb
sti
test
sub
and
das
scas
dec
lea
ljmp
pop
rorb
or
pop
xchg
mov
cmpsb
ja
insb
sbbb
ficompl
movsb
mov
xor
sbb
add
nop
rcll
test
out
mov
xchg
jnp
lods
sbb
stos
inc
sbb
jp
cmp
addl
test
loopne
cmp
mov
mov
shl
mov
adc
das
bound
cmp
adcl
in
mov
fstenv
dec
jo
les
lret
cli
xor
xchg
fidivs
cld
data16
xchg
mov
and
push
pop
add
dec
mov
add
loope
loope
pop
les
imul
push
daa
lods
xchg
mov
xor
pop
outsl
pop
cmc
lock
lods
inc
mov
stos
cld
dec
lea
push
jnp
xchg
xor
data16
inc
enter
mov
mov
mov
sub
push
cmp
jnp
popf
pushf
add
mov
push
scas
or
sbb
xor
xor
sbb
enter
pusha
out
xor
push
mov
les
lret
or
adc
pop
or
out
sbb
fnsave
movmskps
xchg
insl
fbld
mov
int3
push
lock
ja
cmp
nop
cmc
pop
jbe
fmuls
jb
mov
out
sub
xor
mov
mov
gs
xor
lahf
mov
mov
loopne
int
imul
aad
ss
cmp
dec
xchg
push
and
mov
lods
add
xchg
adc
xor
jae
test
into
inc
lret
loope
ja
push
push
out
ret
sti
jne
push
push
xchg
gs
repz
aam
sub
scas
jb
adc
jnp
xor
cmpsb
enter
xor
movsb
shrl
int3
xlat
push
add
adc
xor
lock
sbb
cmp
adc
pop
ret
fsubrs
dec
push
push
mov
jnp
outsb
adc
fwait
adc
cmpsl
mov
aas
scas
jmp
repnz
dec
bound
jl
incl
push
pusha
xchg
jmp
js
xchg
insb
or
mov
dec
xor
in
jp
les
adc
cmpsl
les
cltd
sbb
arpl
outsl
leave
mov
fyl2x
in
jbe
add
rcrb
cmpb
imul
hlt
add
arpl
push
mov
xchg
cli
sbb
adc
push
mov
cmp
pop
cmc
pop
inc
or
out
js
testl
addr16
push
outsb
jnp
ret
popa
call
ds
xchg
inc
leave
pusha
push
in
push
pushf
imul
xchg
das
lods
cmpsl
stos
bound
jae
adc
inc
inc
les
sub
int
ljmp
loop
test
ja
cmp
jg
xor
push
imul
push
sti
adc
out
sbb
inc
fsubr
mov
xchg
jmp
in
mov
mov
cld
pop
xor
subl
push
cmc
push
lcall
stos
loop
jmp
cmp
test
xchg
lds
and
dec
inc
add
mov
pop
icebp
mov
scas
pop
xchg
mov
sarl
mulb
popf
cs
data16
repz
int3
insl
adc
stos
pop
in
hlt
aas
and
daa
jo
cmp
in
rolb
or
fisubrs
adc
mov
adc
lcall
push
lea
ljmp
cmp
push
adc
call
ret
xchg
clc
loop
push
xor
shr
cli
push
stos
cmp
add
sti
jl
and
lods
pop
inc
test
mov
sub
ret
je
sarl
arpl
sub
xchg
popa
subb
jmp
add
pop
and
cltd
dec
pop
mov
pop
insb
inc
mov
fnstcw
inc
inc
ret
cmp
jnp
outsl
inc
dec
cmpsl
xchg
xor
jns
ds
jae
mov
je
xchg
add
sbb
pop
sti
push
lcall
jbe
sti
pop
cmp
fstps
out
push
cmp
into
test
in
stos
xchg
jge
pop
mov
in
add
push
es
into
cmp
addl
xchg
cmp
cmp
stos
inc
xchg
push
aas
repz
ss
jns
jmp
xchg
pop
xchg
ljmp
cmp
sti
bound
outsl
shll
and
pop
jg
imul
adc
sti
das
cmp
les
jo
ljmp
pop
add
bound
fidivs
in
imul
and
shlb
cs
hlt
ret
aad
iret
or
stos
stos
add
xchg
scas
aam
pop
xchg
nop
aas
rolb
jmp
pop
jno
rolb
dec
repz
andb
mov
and
cmc
xor
adcb
xchg
out
aas
les
push
jecxz
and
xchg
jae
mov
jno
sbb
movsl
filds
jbe
jg
jae
or
outsl
push
ss
ljmp
sti
xlat
jno
cwtl
sarb
rcrl
scas
in
sub
xor
xor
ss
mov
mov
repz
xor
fiadds
push
fstpt
lahf
pusha
mov
pop
leave
loope
jg
sbb
das
push
push
sbb
shlb
gs
int
push
pop
aam
es
ljmp
cmp
orl
push
pop
pop
push
aas
inc
pop
mov
and
mov
ss
les
mov
xchg
xor
add
sbb
jp
mov
or
add
xchg
cld
inc
adc
ss
adc
sub
cwtl
pop
add
fs
lods
xchg
inc
push
ja
pop
cwtl
icebp
pop
mov
mov
xor
add
ret
sbb
dec
lock
push
popa
push
jns
dec
jns
fwait
mov
push
sub
or
loop
push
ljmp
push
cltd
mov
fstl
xor
dec
push
xchg
test
rorl
test
stos
xchg
movsl
enter
inc
mov
gs
and
sbb
orl
push
xor
repnz
pop
mov
mov
fldcw
mov
dec
push
push
cmp
scas
adc
adc
inc
in
cmp
in
add
adc
sub
leave
test
out
rclb
imul
movsl
shll
push
sbb
les
sub
lods
rcrb
shlb
push
lahf
inc
mov
or
test
xchg
movsl
fsts
ret
cmp
mov
aad
jae
pop
push
jge
ror
xor
outsb
dec
loope
sub
test
xor
sub
fcoml
fld
jb
mov
fwait
jp
pushf
ret
push
inc
outsb
xchg
jg
cmc
and
xchg
jnp
into
inc
and
test
push
mov
jge
push
enter
pop
mov
mov
ja
push
addr16
bnd
data16
inc
test
sbb
rorb
jl
pop
or
cmp
jecxz
int
jo
lds
lcall
andl
mov
xchg
sti
inc
jmp
aad
es
sub
test
adc
adc
ret
xor
or
lods
les
lds
dec
mov
test
cwtl
xor
arpl
inc
and
cmp
xor
add
lcall
imul
jns
dec
sub
test
mov
scas
cmc
xchg
mov
xchg
orl
push
mov
sbb
inc
sub
jns
mov
dec
fucomp
shll
ror
shrl
mov
ja
inc
mov
es
fimuls
lcall
repz
mov
scas
mov
ret
or
mov
shrl
jbe
or
aam
ficompl
add
shr
mov
mov
inc
fcmovb
les
adcb
mov
dec
sti
dec
stos
mov
jp
and
lds
insl
push
out
fiaddl
out
mov
mov
and
mov
cld
insb
xor
subl
xchg
cld
dec
mov
jbe
movsl
cmc
arpl
pop
scas
out
insl
inc
pusha
pop
addr16
mov
xor
jg
pushf
xchg
aaa
les
aaa
in
loop
or
in
mov
jmp
cmp
icebp
imul
addb
or
fstpl
imul
push
inc
jns
adc
movsl
inc
fmull
or
mov
popa
mov
shrl
sbb
test
aad
out
cmp
test
add
jge
pop
subb
push
and
push
stc
aaa
out
sub
or
dec
sti
and
loopne
addr16
ret
or
lods
cmp
push
andl
sub
lcall
add
mov
flds
xlat
mov
and
in
push
xchg
xchg
xor
leave
sbb
rcrb
pop
mov
jmp
xchg
mov
jmp
subb
data16
data16
pusha
mov
cmp
jo
js
pop
mov
push
lahf
aad
rcrb
in
push
sbb
cmp
or
rol
fsubrs
mov
add
sahf
fwait
push
jno
xor
cmp
test
xor
jnp
pop
add
xchg
dec
int
mov
dec
cmc
and
sbb
ret
in
imul
pop
mov
jbe
cltd
imul
out
fisubrs
bound
outsl
test
mov
out
bound
push
mov
sub
mov
daa
cwtl
xchg
mov
jnp
aam
adc
jno
sbb
xchg
jne
mov
flds
aas
bound
fsubr
add
punpcklbw
mov
jle
add
jge
negl
cmpsl
addr16
or
jge
dec
push
aam
test
add
push
aad
push
pop
xor
mov
pop
fmuls
xor
loop
scas
mov
nop
repz
movsb
mov
subb
scas
shlb
rcr
mov
enter
mov
cmc
cmc
fdiv
jl
pinsrw
jb
or
cmpsl
xchg
fstps
bound
sub
fldcw
xor
mov
in
sbb
lcall
mov
xchg
int
pop
ror
mov
add
nop
std
sbb
push
and
mov
jmp
lahf
shll
mov
loopne
pop
in
in
push
mov
push
js,pt
mov
dec
gs
mov
pop
mov
sub
pop
dec
or
add
and
sub
rorb
orps
insb
lret
mov
std
or
and
mov
or
add
cmp
clc
dec
mov
test
call
scas
inc
sbb
js
or
mov
sub
clc
out
pop
push
add
push
and
push
outsb
jo
pop
adc
test
push
cmp
ret
stos
cmp
mov
inc
push
xor
xor
mov
or
xor
fbld
and
in
roll
jg
push
cmp
xor
mov
sahf
lahf
or
jmp
or
adc
sbb
int
push
jno
xchg
jecxz
or
cmp
sbb
jo
mov
mov
xlat
subb
rorl
mov
push
js
cmp
mov
mov
dec
jg
cmp
cmp
cmp
test
sbb
loop
mov
cmp
adc
add
sub
int
int
push
xchg
jl
out
bound
ror
lret
xor
jmp
or
sbb
rcr
xlat
push
out
adc
arpl
rcr
sbb
xor
sub
mov
loope
xchg
mov
imul
xlat
xchg
xor
jle
sti
and
into
mov
jno
mov
pop
sarb
mov
jae
push
pop
std
movsb
insb
int3
dec
and
mov
sbb
test
loop
sub
enter
inc
xchg
and
xor
stos
fldcw
cld
stos
inc
sbb
cmp
xchg
mov
jl
movsl
lea
sub
xchg
xchg
stos
sbb
pop
lcall
push
cld
jmp
in
fnstsw
cmp
fidivrl
xchg
mov
sahf
push
pusha
pop
fldenv
sbbb
push
adc
in
nop
adc
push
inc
xchg
es
push
mov
outsb
mov
aam
and
pop
scas
pop
and
cmp
gs
and
into
ret
xorl
pop
int3
iret
xor
insb
cmp
sub
into
cmpsb
adc
int
sbb
negl
stc
lret
outsl
and
in
add
lods
sarl
xchg
lahf
sub
pop
divb
jo
mov
push
cmp
popa
xor
stos
loop
icebp
mov
ss
pop
cwtl
mov
fbld
jp
cwtl
iret
clc
mov
outsl
cmp
push
jne
xchg
faddp
pop
je
fidivrs
movsb
loop
dec
aad
mov
sbb
and
mov
push
jle
out
test
and
inc
mov
mov
lcall
xor
movsb
sub
push
outsb
outsl
stos
xor
in
les
inc
xor
scas
shrl
add
add
pop
cwtl
xor
pop
dec
pop
icebp
lock
imul
sarb
and
aad
adc
popf
sbb
push
mov
jbe
adc
fistpl
imul
fidivrl
cmp
insl
jno
cmp
pop
jl
dec
pop
icebp
std
adc
dec
stos
imul
mov
out
cltd
jbe
sub
mov
and
iret
decb
adc
sub
es
iret
adc
popa
push
sbb
xchg
xor
jp
dec
cmpsl
insb
or
test
shl
push
aam
aas
in
push
sbb
pop
jbe
ljmp
mov
stc
call
cli
sub
rorb
xor
xchg
cmpsl
mov
push
or
mov
clc
or
icebp
outsb
repz
call
jno
repnz
arpl
cmp
sbb
jnp
xchg
sbb
cli
mov
mov
and
daa
shl
nop
outsb
ret
mov
cmpb
add
and
shlb
and
xchg
out
adc
sbb
xchg
scas
inc
xchg
lock
lcall
subb
and
add
lret
mov
fimull
push
jns
divl
mov
into
pop
shll
xchg
cltd
lods
iret
addr16
in
or
adc
mov
inc
xor
inc
sbb
aas
outsl
sbb
mov
cmp
aaa
pop
xchg
or
int3
test
test
pop
xchg
jle
mov
arpl
mov
sub
aam
dec
jnp
jbe,pn
adc
aam
movsl
sbb
call
xchg
inc
fildl
fsts
mov
ss
sbb
iret
rorl
in
in
out
sub
and
inc
xor
mov
mov
into
fadds
roll
xchg
ret
add
add
jl
inc
cld
mov
and
movsl
pop
push
out
sahf
sbb
inc
lcall
pop
scas
and
dec
clc
jg
lret
lret
bound
adc
xor
cs
pop
cmp
sbb
loopne
rcll
aam
movsl
or
cltd
fwait
jge
mov
mov
push
lea
fsubl
mov
ljmp
mov
add
and
jecxz
mov
xchg
into
pop
les
push
jl
cltd
and
pop
jl
fs
inc
or
mov
pop
jb
incl
mov
dec
mov
mov
in
cmp
lahf
enter
icebp
std
leave
or
outsb
mov
xchg
fiadds
push
or
push
xchg
fdivrs
xchg
shlb
incb
movsl
cwtl
dec
enter
mov
jo
mov
xor
in
lcall
mov
scas
ss
adc
and
or
fsubl
mov
cmpsb
mov
shlb
gs
fadds
add
int3
bound
test
in
imul
sbb
push
cmp
stos
loopne
mov
cmpsb
sti
dec
push
sub
adc
jmp
imul
xor
mov
dec
leave
popf
dec
sbb
pop
out
fucom
mov
stos
mov
hlt
insb
push
sub
loopne
xchg
push
rcrl
je
sub
jge
dec
std
push
adc
dec
inc
xchg
into
add
cmc
jne,pt
mov
and
mov
xor
fnstsw
ljmp
in
mov
aam
inc
insl
mov
fistpll
dec
xor
mov
imul
sahf
in
and
sbb
pop
adc
pop
and
mov
addl
dec
inc
xor
lret
lods
in
fmul
and
sub
mov
aaa
mov
loope
ror
cmp
push
shl
js
ret
sahf
push
cmpsb
mov
xchg
push
subl
dec
xchg
dec
pop
xchg
pop
xchg
mov
pop
jg
push
imul
and
movsb
mov
jo
mov
xchg
sbb
rcl
in
adc
jns
mov
and
insl
icebp
jg
fsubrl
inc
imul
cmp
hlt
mov
or
fcoml
sbbl
push
shll
cmp
or
cmp
mov
aad
nop
inc
cmp
sub
mov
jno
jg
adc
add
test
xchg
out
mov
jo
push
mov
movsb
int3
cmp
shrl
outsb
mov
or
add
clc
adc
shl
inc
divl
iret
dec
mov
nop
fs
divb
rol
mov
insl
jge
mov
in
add
mov
fdivrl
popa
cli
mov
fdivrp
cmp
sbb
sahf
insb
inc
push
aaa
loop
mov
shlb
push
gs
js
cmpsb
addr16
lods
dec
jnp
shrb
push
dec
push
das
sti
push
adc
call
pusha
add
popa
jmp
repz
repz
fcoms
in
adc
jo
add
xor
sub
sbb
aam
dec
addb
cmc
gs
xchg
iret
outsl
loop
fnstenv
mov
lcall
dec
movsb
push
xor
xchg
mov
pop
or
call
lds
pushf
jge
add
fs
lret
mov
pusha
arpl
inc
nop
int
sbb
add
mov
adc
es
and
fstps
std
std
dec
or
sahf
xchg
fwait
xor
das
xor
jecxz
int3
pop
adc
adc
or
xchg
push
and
pop
psadbw
add
popa
add
add
jns
ljmp
mov
xor
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
add
jmp
add
add
out
loop
rcr
add
add
add
add
add
add
orb
add
mov
add
add
add
addb
adc
add
add
call
add
add
add
addb
add
sbb
add
xor
add
dec
add
addb
add
pusha
add
addb
add
js
add
nop
add
orb
add
test
add
rolb
orb
add
fadds
add
lock
orb
add
and
add
cmp
add
push
add
addb
add
out
loop
rcr
add
add
add
add
add
add
out
loop
rcr
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
js
add
add
add
mov
add
add
add
out
loop
rcr
add
add
add
add
add
add
add
push
loop
rcr
add
add
add
add
add
xor
add
add
and
add
call
add
add
add
add
cmp
add
lock
sub
add
sbb
add
add
add
add
add
dec
add
test
add
push
push
add
xor
add
add
cwtl
arpl
add
add
add
add
add
add
test
add
call
pop
add
xor
add
and
add
add
add
inc
mov
add
call
or
add
add
push
add
add
add
add
fildl
add
add
add
add
add
faddl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
js
add
add
add
add
mov
add
add
inc
add
cmp
add
je
add
add
sldt
add
add
add
add
popl
add
add
pop
add
add
cmp
add
add
add
or
mov
mov
add
add
add
add
jnp
mov
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
add
or
add
sti
mov
fwait
fwait
cmp
add
add
mov
inc
daa
mov
add
xor
add
add
add
aaa
add
add
mov
add
add
add
pop
fwait
nop
add
add
add
pop
mov
add
or
add
add
cmp
add
add
mov
add
popa
xor
mov
add
add
add
jae
add
add
cmp
add
jno
jns
add
add
add
adc
add
add
pop
mov
add
add
addb
add
add
add
pop
add
add
add
push
xor
xor
add
add
sub
add
xor
add
mov
add
or
add
cmp
add
add
add
mov
pop
adc
ja
mov
add
add
cmp
add
or
add
mov
add
pop
cmp
add
add
jo
add
add
jo
add
sti
mov
pop
ja
mov
jo
add
add
add
add
mov
add
mov
add
mov
add
add
add
adc
pop
jno
mov
add
add
add
add
mov
jne
cmp
add
add
mov
add
add
pop
add
mov
mov
pop
push
adc
pop
add
add
xor
popa
mov
add
add
or
add
repz
push
cmp
and
mov
add
add
add
or
ja
mov
cmp
or
add
add
mov
mov
or
add
add
mov
pusha
add
cmp
add
add
addb
add
add
ud0
mov
xor
add
or
add
mov
mov
xor
add
jnp
add
cmp
clc
clc
mov
xchg
xchg
nop
add
pop
or
mov
mov
cltd
mov
pop
jae
mov
sbb
clc
mov
mov
fwait
jo
add
add
mov
mov
mov
mov
add
pop
add
add
mov
add
aaa
mov
mov
add
add
jo
jne
xor
add
add
add
xor
mov
add
add
add
add
je
add
add
add
adc
add
add
add
add
xor
fwait
addb
add
inc
mov
or
mov
or
add
add
js
add
add
add
push
incl
add
jmp
incl
add
inc
jg
add
inc
aas
incl
add
incl
incl
ud0
add
sti
incl
pop
incl
add
repz
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
incl
add
incl
add
add
add
add
add
jg
add
inc
add
add
add
pusha
add
add
add
cld
jo
add
aas
add
cld
clc
add
add
add
cld
clc
add
add
add
clc
cld
add
add
add
clc
incb
add
pop
add
clc
incb
add
sldt
icebp
incl
add
sldt
icebp
incl
add
inc
add
sldt
icebp
inc
add
sldt
icebp
jmp
add
pop
add
loope
lock
pop
add
loope
lock
pop
add
loope
clc
add
pop
add
loope
cld
add
pop
add
loope
cld
add
pop
add
loope
clc
add
pop
add
jecxz
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
xor
incl
add
add
loopne
incl
add
ret
inc
jg
add
incl
incb
incl
add
clc
pop
incl
add
jmp
aas
incl
add
inc
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
aaa
add
add
mov
add
add
add
je
add
addb
add
add
add
xor
adc
add
or
mov
fwait
mov
add
add
mov
addb
add
add
add
aaa
cmp
xor
add
add
xor
mov
add
add
add
add
add
mov
push
add
jnp
add
mov
add
add
add
cmp
addb
mov
xor
add
add
xor
pop
add
mov
add
xor
add
add
mov
cmp
add
add
or
jns
add
add
add
jnp
add
add
add
mov
cmp
add
add
add
adc
mov
and
add
xor
add
add
popa
ja
mov
add
add
add
add
xchg
mov
add
add
add
add
clc
js
mov
add
add
add
ud0
add
add
mov
mov
add
jo
mov
mov
add
mov
mov
mov
add
add
mov
add
mov
jnp
nop
add
add
add
push
addb
add
jo
add
add
add
or
add
pop
sbb
add
cmp
jae
addb
add
jno
out
inc
incl
incl
jg
js
jg
add
aas
cld
add
pop
cld
add
pop
clc
add
pop
cli
add
psllq
add
repz
maskmovq
testl
add
out
add
out
add
xbegin
add
iret
cld
add
iret
cld
add
iret
clc
add
iret
add
add
add
add
add
xadd
add
pop
sar
jg
decl
cld
pop
push
ljmp
add
add
add
add
add
add
add
add
add
and
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
jo
or
or
mov
add
cmp
xchg
add
add
addb
xor
mov
mov
jnp
add
adc
jo
add
add
or
mov
add
add
push
pop
nop
add
add
add
cmp
add
jnp
add
pop
mov
add
or
add
add
add
xor
add
add
mov
add
add
jne
mov
inc
jae
add
add
add
ja
mov
cmp
pop
xor
add
js
addb
add
mov
cmp
mov
mov
cmp
aaa
mov
add
add
ja
ja
jo
mov
add
jo
add
cmp
or
addb
add
add
add
pop
pop
add
add
add
std
incl
clc
jg
push
aas
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
filds
add
ffreep
add
lahf
loopne
add
add
addb
add
add
add
clc
incl
jmp
incl
decl
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
pop
add
add
add
add
add
add
addb
adc
mov
add
mov
xor
add
jo
mov
add
add
mov
cmp
add
add
adc
mov
jae
add
add
jnp
sub
js
adc
add
decl
xor
addb
adc
mov
add
jns
add
add
add
add
add
mov
add
testl
add
loopne
add
rolb
add
rolb
add
fadds
add
mov
add
add
add
add
sldt
aas
add
cld
jg
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
adc
pop
adc
push
or
sbb
adc
sbb
es
or
and
pop
push
add
pop
and
push
sbb
add
sbb
and
sub
add
sub
push
and
xor
add
sub
add
sub
add
xor
add
xor
add
lldt
adc
dec
sub
add
aas
add
sub
push
xor
add
cmp
sub
inc
add
cmp
inc
dec
add
dec
pop
add
inc
pop
add
pop
add
inc
dec
add
dec
push
add
inc
push
add
push
pop
add
imul
push
popa
add
inc
jns
pop
push
jnp
das
dec
pusha
add
add
push
data16
pusha
outsl
add
fs
adc
add
jb
add
jae
add
dec
add
add
add
push
add
inc
add
add
arpl
inc
pop
je
push
pop
jo
dec
arpl
push
data16
add
jne
push
imul
fs
jbe
ja
je
xchg
cmpb
push
mov
add
add
push
lcall
push
test
pop
ja
add
bound
add
push
mov
add
push
movsb
add
jle
add
mov
push
jl
add
inc
lds
pop
pop
ret
add
dec
roll
add
add
lretw
add
jp
add
push
add
insl
fildl
add
add
jbe
add
lds
sub
add
les
xor
rolb
add
add
js
add
jecxz
add
add
jnp
add
xchg
add
cwtl
cmpsb
add
cwtl
mov
add
stos
mov
xor
xchg
add
xchg
add
popf
add
cmpsb
add
mov
add
lods
add
mov
add
mov
add
add
enter
les
add
test
add
sbb
aaa
mov
add
nop
filds
xor
fiaddl
adc
ret
add
mov
enter
in
add
mov
add
xchg
in
add
nop
in
add
mov
add
xchg
sti
add
mov
std
add
cmpsb
incl
add
testb
mov
int3
add
int
dec
lcall
pop
xchg
xlat
add
iret
add
add
rolb
inc
mov
fldl
dec
mov
in
leave
add
int3
add
rcr
add
filds
add
in
pop
shl
push
fchs
add
fucom
add
sti
add
fdivr
add
lret
ljmp
testb
jecxz
add
cli
add
sti
std
add
cld
std
add
loop
add
incl
ss
add
cld
incb
cmp
incb
push
add
in
add
in
push
shl
add
jecxz
arpl
out
ja
out
inc
loop
add
incb
pop
sti
incb
push
jmp
add
incb
jns
incb
xchg
addl
xchg
lahf
add
cltd
mov
add
mov
mov
cwtl
test
mov
add
mov
add
into
add
rcl
lcall
add
roll
mov
rcl
add
shl
add
loope
add
ljmp
xchg
incb
xchg
std
incb
cmpsb
call
call
add
lret
roll
lret
fsub
add
call
in
out
add
in
repz
incb
aam
std
add
out
add
out
icebp
add
std
std
add
incl
jl
add
push
xchg
add
add
add
add
xchg
sahf
add
add
add
cs
mov
add
cmp
add
add
add
add
pop
add
add
add
bound
add
add
rcrb
pop
add
add
add
or
add
icebp
testl
add
add
add
pop
push
add
add
add
add
insb
mov
add
out
jmp
out
icebp
lock
mov
test
pusha
gs
xchg
imul
add
add
out
out
into
int
sarb
fwait
fwait
cltd
cltd
xchg
xchg
xchg
xchg
data16
add
cmp
or
int
into
lret
mov
mov
mov
cltd
cltd
xchg
xchg
xchg
xchg
imul
add
nop
leave
leave
lret
sarb
mov
mov
fwait
cltd
xchg
xchg
xchg
xchg
xchg
gs
add
adc
or
sub
mov
mov
mov
mov
mov
fwait
cltd
cltd
xchg
xchg
insb
gs
add
loope
add
add
or
mov
adc
or
add
add
sbb
adc
push
add
add
add
add
add
ja
mov
or
add
add
add
add
add
push
xchg
arpl
add
add
add
add
mov
add
add
add
add
sbb
and
add
sub
add
add
and
adc
add
add
add
add
add
pop
xorb
add
add
add
add
dec
mov
add
add
add
add
adc
sbb
add
arpl
add
add
add
add
jae
add
add
add
adc
and
sub
xor
add
add
add
add
add
or
xor
add
add
add
and
sub
add
popa
add
inc
pop
mov
add
and
add
add
and
mov
add
add
add
xchg
insb
gs
add
adc
ret
add
add
add
add
add
add
add
mov
add
add
add
sub
add
cmp
add
jae
add
add
add
add
add
add
add
stos
rol
mov
add
pop
sub
add
subl
add
add
add
add
add
add
add
add
add
mov
lea
add
or
add
gs
add
add
inc
add
add
add
add
adc
add
add
xor
into
lret
push
add
add
add
fwait
gs
adc
mov
add
add
add
add
add
add
or
mov
add
add
cmp
cmp
inc
mov
imul
add
add
add
add
fadds
or
or
into
lret
pop
add
pop
cmp
cmp
cmp
add
mov
add
add
push
push
push
push
into
out
into
leave
mov
sub
sub
sub
add
add
add
jp
jae
add
and
and
xor
mov
add
and
add
add
add
inc
add
add
cmc
xor
out
into
leave
mov
push
push
adc
jle
arpl
add
add
add
sub
lods
movb
loop
pop
pop
pop
pop
jns
out
int
mov
pop
push
or
arpl
add
add
add
add
mov
add
add
rcl
rcl
jp
out
int
mov
mov
or
add
aas
insb
arpl
add
add
add
add
mov
add
add
fcmovu
shr
into
lret
mov
pop
add
add
imul
add
add
add
add
mov
add
add
std
in
jecxz
fcmovbe
in
lret
mov
movsl
add
add
arpl
push
add
add
add
add
mov
add
loope
in
in
repnz
sti
stc
stc
div
jecxz
fxch
mov
jge
add
pop
push
add
add
add
adc
add
add
xor
into
out
repnz
cli
cli
div
fistpll
xchg
sahf
mov
pop
push
add
add
add
cmp
mov
lds
add
xor
into
out
repz
sti
repz
jecxz
loopne
mov
xchg
xchg
xchg
outsl
imul
pop
pop
add
add
add
iret
sbb
mov
add
mov
out
cli
cli
sti
repz
repz
imul
addr16
add
add
add
adc
mov
cwtl
cwtl
scas
mov
out
repz
sti
repz
jmp
cltd
xchg
xchg
outsb
imul
add
add
add
add
adc
add
add
or
pop
cld
cld
cld
std
hlt
jg
xchg
xchg
outsb
outsb
fs
add
sbb
cmp
pop
xor
add
add
add
add
pop
add
aas
push
dec
xchg
lcall
inc
inc
aam
rolb
add
pop
push
dec
xchg
xchg
xchg
xchg
fldl
add
rcr
rolb
add
add
adc
test
pop
pop
push
xchg
xchg
xchg
fisubs
dec
xchg
add
xchg
xchg
cltd
xchg
xchg
xchg
fldl
add
add
adc
pop
cmpsl
xlat
inc
sub
add
push
incl
add
jmp
incl
add
inc
jg
add
inc
aas
incl
add
incl
incl
ud0
add
sti
incl
pop
incl
add
repz
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
incl
add
incl
add
add
add
add
add
jg
add
inc
add
add
add
pusha
add
add
add
cld
jo
add
aas
add
cld
clc
add
add
add
cld
clc
add
add
add
clc
cld
add
add
add
clc
incb
add
pop
add
clc
incb
add
sldt
icebp
incl
add
sldt
icebp
incl
add
inc
add
sldt
icebp
inc
add
sldt
icebp
jmp
add
pop
add
loope
lock
pop
add
loope
lock
pop
add
loope
clc
add
pop
add
loope
cld
add
pop
add
loope
cld
add
pop
add
loope
clc
add
pop
add
jecxz
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
xor
incl
add
add
loopne
incl
add
ret
inc
jg
add
incl
incb
incl
add
clc
pop
incl
add
jmp
aas
incl
add
inc
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
adc
pop
add
or
add
add
add
pop
adc
add
add
movlps
add
sbb
or
sbb
adc
adc
add
adc
add
adc
push
adc
add
pop
sbb
add
sbb
add
prefetch
cmp
add
pop
sub
pop
sbb
add
and
add
sub
add
cmp
add
aaa
add
and
and
xor
add
xor
inc
add
inc
add
aas
push
add
xor
daa
cmp
cmp
or
dec
pop
add
push
pop
add
push
pop
add
inc
dec
add
inc
dec
add
dec
add
inc
push
add
pop
data16
inc
pusha
add
pop
arpl
sub
add
popa
jae
add
add
je
add
jae
add
add
add
pop
add
pop
add
arpl
push
pop
bound
dec
bound
dec
addr16
push
gs
popa
popa
pusha
add
jnp
jnp
jl
xchg
xorl
add
add
pop
xchg
add
jnp
add
pusha
cwtl
add
jns
add
imul
and
mov
add
mov
add
add
push
ret
add
pop
xlat
add
addr16
push
movl
add
add
jb
add
jo
add
je
add
jl
add
insb
jmp
add
jnp
add
jge
add
jp
add
jge
add
orl
add
xchg
add
pushf
lods
add
pushf
cmpsl
add
xchg
add
xchg
mov
add
mov
adc
stos
add
test
mov
add
mov
pop
orl
add
mov
push
mov
add
scas
add
stos
add
add
add
mov
add
adc
add
xchg
roll
xor
movl
das
mov
out
add
in
add
repnz
xchg
add
mov
add
fwait
repnz
cltd
repz
xchg
stc
add
lcall
sub
add
cwtl
repz
mov
incb
add
incl
add
clc
add
rolb
xchg
ret
add
add
add
faddl
dec
xchg
loope
jl
out
add
lock
ror
sbb
fildl
add
jmp
or
call
add
incl
add
incl
or
incl
add
incl
or
sti
add
fcos
add
add
jmp
jmp
add
out
add
jmp
add
sti
std
add
cli
incb
xor
out
sub
incl
sub
incl
and
incl
sub
incl
xor
incl
push
ret
rolb
jp
roll
jb
in
jp
in
push
jecxz
add
std
add
stc
add
add
incl
pop
sti
incl
js
in
add
incl
insl
incl
jle
cli
add
incl
jge
incl
mov
mov
test
xchg
add
popf
test
add
mov
add
mov
add
mov
ret
int3
xlat
add
ror
cmpsb
ret
roll
mov
rolb
mov
fucomi
add
out
lock
incb
stos
in
add
incl
mov
std
add
leave
rolb
lret
add
fucom
add
incl
incb
jmp
std
std
add
incb
incl
add
add
add
andps
add
add
add
pop
mov
dec
pop
add
sahf
ficoml
add
xchg
lods
add
add
add
add
in
hlt
repz
jne
push
dec
dec
dec
xchg
data16
mov
fyl2x
rol
mov
mov
lock
xchg
rcl
leave
mov
movsl
mov
stos
add
add
and
enter
jo
jae
je
jb
mov
add
lret
aas
add
ret
or
add
pop
or
add
jns
and
add
imul
mov
add
add
or
sbb
add
arpl
add
add
add
add
add
or
add
scas
rol
add
add
add
and
cmp
sub
add
add
mov
add
add
and
xor
xchg
popa
cmp
add
add
add
rol
cmp
add
or
xchg
popa
mov
add
add
add
add
add
add
add
insl
mov
add
and
xor
add
add
sbb
add
mov
enter
add
add
inc
cmpsl
pushaw
add
add
add
or
add
loopne
add
and
add
add
inc
inc
test
add
add
into
add
add
add
add
sbb
fadd
outsl
add
inc
inc
inc
jle
popa
stos
add
add
dec
das
aam
add
add
add
add
push
sub
lret
mov
xor
pusha
test
inc
cmp
add
add
add
aaa
inc
dec
inc
out
fld
mov
xor
add
sbb
add
ljmp
mov
sbb
add
add
add
out
loope
call
sbb
add
add
add
std
clc
mul
loope
iret
mov
jbe
add
pop
add
add
and
add
add
rcr
cmc
cli
sti
cld
sti
clc
in
iret
mov
fwait
push
push
pusha
pop
pop
add
add
dec
jno
int
add
shl
idiv
cld
std
sti
div
jmp
mov
cwtl
imul
add
dec
push
push
mov
xor
xlat
idiv
cld
std
sti
div
ljmp
test
add
xor
add
add
add
inc
fneni(8087
ljmp
push
add
dec
inc
fisttpll
daa
addb
add
add
add
in
inc
ss
cwtl
lods
add
aaa
push
fwait
mov
add
jle
xchg
lcall
jge
inc
fiadds
add
add
out
inc
incl
incl
jg
js
jg
add
aas
cld
add
pop
cld
add
pop
clc
add
pop
cli
add
psllq
add
repz
maskmovq
testl
add
out
add
out
add
xbegin
add
iret
cld
add
iret
cld
add
iret
clc
add
iret
add
add
add
add
add
xadd
add
pop
sar
jg
decl
cld
pop
push
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
push
or
add
push
push
add
add
push
add
or
pop
push
adc
add
or
add
sbb
movups
add
adc
adc
add
pop
sbb
adc
sbb
add
sbb
add
or
or
and
add
push
and
add
add
and
add
das
add
sub
xor
add
aaa
add
cmp
pop
xor
add
and
add
xor
add
sub
cmp
sub
cmp
sub
add
xor
add
cmp
sub
dec
add
cmp
cmp
inc
cmp
push
add
inc
dec
add
inc
pop
add
push
add
dec
pop
add
pop
imul
inc
jp
add
add
dec
insl
add
fs
add
add
jl
or
add
popa
push
das
outsb
jb
and
add
add
push
add
pop
add
data16
push
pop
outsl
add
push
push
outsl
add
jp
data16
add
jle
xchg
xorl
push
pop
xchg
add
popa
lea
add
add
mov
lea
or
add
outsb
xchg
add
jno
add
data16
cmp
jl
add
jno
add
mov
sbb
add
jae
add
addb
jns
add
xchg
outsb
jl
add
push
int
add
add
pop
aad
add
add
movl
add
add
add
imul
add
je
add
jl
add
ja
add
jge
add
jne
add
jbe
add
jge
add
jno
add
jge
add
test
add
sbbl
mov
add
test
add
mov
mov
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
cltd
add
xchg
add
rolb
and
test
ret
add
mov
loop
push
test
add
sub
pop
in
add
jmp
add
cli
add
xchg
repnz
lahf
std
add
xchg
stc
add
cwtl
out
cmp
loop
or
incb
add
incb
and
loop
dec
xchg
into
add
add
flds
dec
mov
les
jg
fiaddl
jnp
filds
push
xchg
jecxz
pop
mov
out
add
repnz
add
loop
or
loopne
push
sti
add
leave
incb
add
incb
add
incb
pop
add
ljmp
fdivr
add
fdiv
add
jmp
add
idiv
add
clc
cli
add
incb
or
incl
sbb
std
incb
pop
incl
daa
incb
sub
incl
cmp
incb
dec
lret
fadds
push
enter
ret
jg
loopne
push
jmp
incb
inc
incb
push
cmc
testb
cmc
incl
pop
hlt
stc
add
incb
push
incb
pop
incb
arpl
hlt
add
lock
cld
add
cld
add
lahf
cmpsl
add
movsl
mov
xchg
mov
add
mov
add
mov
fldl
mov
movb
ret
iret
add
ret
enter
flds
scas
faddl
mov
call
loop
popf
in
add
repnz
incb
mov
cld
incb
rcr
loope
lret
add
out
in
add
incb
lret
add
hlt
cmc
add
idiv
add
in
out
add
repz
add
incb
in
incb
lock
testb
incl
add
pop
add
xor
add
add
add
add
add
add
add
or
add
jo
add
icebp
in
jmp
out
aad
lahf
sahf
xchg
xchg
xchg
jbe
add
mov
lcall
add
add
add
adc
jp
push
push
pop
pop
push
popa
jbe
add
add
add
add
ret
mov
or
add
adc
ja
add
add
add
test
add
add
add
push
pop
sub
mov
add
add
add
add
rcll
add
xor
pop
jo
add
add
add
add
aaa
add
inc
add
es
pop
ja
add
add
dec
enter
add
add
adc
sub
add
add
and
add
add
sbb
add
inc
dec
xchg
insb
add
add
and
add
add
add
sbb
inc
lock
pop
xor
mov
add
add
add
add
add
dec
test
sub
lea
add
add
add
add
add
add
mov
pop
sbb
bound
add
cli
jecxz
mov
add
loop
add
add
add
rcr
repnz
stc
hlt
loope
mov
imul
mov
std
imul
out
mov
add
add
add
jge
jle
ds
repz
clc
call
lods
add
add
add
add
dec
inc
das
dec
dec
dec
data16
ss
scas
add
add
filds
add
add
add
add
add
add
std
incl
clc
jg
push
aas
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
filds
add
ffreep
add
lahf
loopne
add
add
addb
add
add
add
clc
incl
jmp
incl
decl
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
push
add
or
str
or
sbb
sbb
adc
add
adc
add
sbb
add
and
or
sub
add
add
and
add
sub
add
sub
add
xor
add
sub
or
inc
add
inc
add
inc
add
pop
add
dec
pop
add
dec
push
add
dec
pop
add
push
pop
add
dec
push
add
add
dec
push
pop
push
arpl
push
dec
jl
sub
add
pusha
add
outsl
js
adc
add
arpl
inc
dec
push
add
pop
add
popa
add
outsb
add
jns
mov
add
push
xchg
add
fs
add
pop
scas
add
imul
add
cltd
add
xchg
add
push
int3
add
pop
into
add
push
add
jae
add
jg
add
jbe
add
jecxz
pop
jl
add
jl
add
lcall
push
addb
jne
xchg
ja
mov
js
lea
bound
mov
bound
les
and
faddl
sbb
mov
add
mov
cmc
add
xchg
icebp
add
scas
incb
add
std
add
flds
pop
fldl
addr16
flds
jbe
filds
push
mov
call
add
sar
add
incl
or
icebp
add
incl
sbb
in
add
ljmp
cs
incb
push
add
call
add
incl
pop
incl
push
incl
jnp
cld
add
xchg
mov
add
mov
les
mov
lret
add
sbb
std
add
in
add
xlat
faddl
enter
shl
jmp
sar
incb
loope
incl
in
incl
call
add
add
incl
add
add
add
jge
add
dec
adc
xor
add
add
add
insb
imul
push
push
add
add
add
sbb
pop
bound
and
and
xor
add
add
add
pop
inc
add
add
add
add
inc
add
pop
adc
add
add
ja
add
add
sbb
or
add
or
arpl
pop
sub
add
and
add
add
insl
pop
adc
sbb
add
je
dec
add
cmp
add
jg
jle
imul
sub
dec
fs
cmpb
inc
cmp
add
inc
sbb
sub
outsb
dec
push
aaa
cmp
add
add
push
add
add
mov
add
testl
add
loopne
add
rolb
add
rolb
add
fadds
add
mov
add
add
add
add
sldt
aas
add
cld
jg
add
add
add
add
add
add
add
sbb
add
add
add
add
dec
xchg
add
addr16
push
push
or
loopne
lahf
cmpsl
scas
sbb
push
push
add
dec
jle
testb
add
add
pop
push
sbb
or
add
add
add
jne
mov
sbb
fiaddl
imul
or
or
add
add
add
add
push
lcall
add
add
adc
or
push
add
add
add
add
add
or
jb
add
add
add
repnz
add
nop
mov
or
push
add
sbb
add
sub
add
mov
repnz
in
imul
push
push
adc
push
or
add
add
add
add
add
add
add
add
add
add
pop
fiadds
add
lods
jmp
mov
fidivl
shrb
shlb
call
out
xchg
in
and
je
out
pop
shr
adc
or
add
add
add
add
add
add
add
add
ja
je
std
std
jnp
incl
call
jns
ljmp
call
aas
idiv
sub
lcall
out
push
in
add
incl
fdivr
add
incl
mov
add
xchg
cli
add
add
jne
push
jo
add
out
dec
dec
dec
dec
daa
imul
outsl
insl
lcall
decb
cmp
sbb
decb
incl
in
add
incb
fdivr
add
incb
ret
incb
mov
add
add
add
add
add
add
mov
xor
and
cs
dec
decl
decl
call
aas
pushl
ljmp
cld
lcall
decl
icebp
incl
incl
jecxz
add
incl
int
add
incl
mov
add
add
sub
jnp
add
adc
int
add
inc
loope
push
xor
sbb
es
sbb
inc
xor
divb
xor
cmp
jmp
sbb
icebp
push
in
or
icebp
add
repnz
repz
repz
cmc
add
testl
stc
or
or
or
add
add
lcall
add
or
adc
xor
sbb
sub
call
adc
sbb
sub
and
adc
movups
adc
and
sub
sub
das
sub
and
inc
daa
nop
filds
jns
add
and
add
test
aas
popf
test
add
add
add
adc
mov
sbb
decb
decb
jnp
adc
sub
or
add
or
add
add
add
add
add
adc
push
sbb
push
adc
add
add
add
push
add
add
add
jb
movsl
push
fchs
add
add
mov
add
add
add
add
add
adc
sbb
fsubp
adc
decl
decl
incl
pop
pop
sbb
add
or
add
add
push
adc
or
adc
pop
push
pop
and
sbb
add
xor
cmp
xchg
add
add
push
mov
add
add
in
add
add
add
cmp
add
add
add
add
add
add
add
adc
add
incb
incl
out
pop
sub
or
add
add
add
add
add
add
or
adc
sbb
es
das
and
xor
adc
or
or
fiaddl
jns
add
or
jne
popf
add
push
add
add
add
add
add
add
add
add
add
add
add
jnp
add
incb
incb
incl
decb
int
add
or
add
add
add
add
add
add
add
adc
sbb
sub
xor
aaa
inc
pop
or
jnp
add
je
add
sbb
ret
add
add
add
add
or
mov
push
incl
incl
std
incl
movsl
add
add
add
push
pop
or
sub
sub
cmp
cmp
aas
dec
sub
cmp
pop
insl
add
add
add
push
roll
add
or
add
pop
jb
add
add
add
add
add
add
add
add
and
jecxz
ud0
push
incb
decb
fs
add
add
add
add
add
add
add
add
add
and
xor
cmp
cmp
pop
xor
xor
mov
add
add
push
push
add
add
js
xor
add
and
add
add
add
add
add
add
push
dec
push
add
lcall
sbb
decb
incl
hlt
cld
or
add
add
add
add
add
add
add
add
adc
aaa
cmp
aas
dec
aas
inc
push
and
add
add
sbb
jecxz
jae
add
add
and
add
dec
add
or
add
add
test
jmp
call
clc
or
add
add
add
cmp
xor
inc
add
add
pop
dec
lcall
loopne
outsb
fildl
add
add
sahf
lods
js
in
mov
add
add
add
add
add
add
add
push
add
xlat
cmp
cmp
sbb
incb
lret
sbb
add
add
add
add
add
add
sub
aaa
ds
dec
pop
pop
or
add
aaa
cmp
bound
add
outsl
fcompl
rolb
add
add
add
rcr
add
add
js
add
add
add
add
add
add
add
add
cmp
out
negb
decl
xor
call
lods
int3
or
or
add
add
add
add
pop
sbb
add
sub
push
pop
popa
push
pop
data16
mov
jbe
add
sub
dec
arpl
push
or
add
sub
add
add
popa
jl
std
insb
lcall
ds
incl
in
pop
ja
add
add
add
add
adc
dec
push
pop
dec
push
arpl
mov
mov
add
add
push
pop
ret
adc
push
out
clc
add
or
add
add
add
add
push
add
adc
popa
ljmp
repz
fdivr
and
add
add
add
add
add
or
dec
push
dec
push
pop
dec
push
pop
dec
push
pop
popa
push
and
loop
outsb
faddl
pusha
int
add
add
add
dec
pop
adc
ljmp
add
add
or
or
add
sub
adc
inc
in
xchg
jp
lcall
decb
out
bswap
repnz
add
add
ss
dec
push
inc
dec
push
inc
dec
push
inc
dec
push
dec
push
addr16
in
add
add
data16
add
add
je
daa
aam
push
imul
ss
cmp
sub
sub
bound
pushl
aas
idiv
add
lcall
shl
sbb
add
add
and
cmp
dec
cmp
cmp
dec
cmp
inc
mov
add
fadds
add
ja
xchg
add
add
xchg
mov
add
das
dec
pusha
and
dec
sub
push
xor
xor
pop
xor
test
pushf
incl
pop
out
incl
xor
adc
inc
xor
inc
xor
inc
sub
inc
sub
dec
dec
movsb
enter
add
add
push
roll
add
outsb
add
add
mov
push
aam
add
add
fsubp
inc
push
push
pop
outsb
push
pusha
jno
pop
jo
popa
jo
cwtl
jns
decb
incl
in
add
incl
mov
xor
and
xor
sub
mov
xchg
add
add
push
test
add
sub
add
add
iret
fsubl
out
add
subb
jp
outsb
js
imul
hlt
stc
xchg
ljmp
jmp
in
incl
fdivr
or
std
dec
jbe
sbb
adc
sub
and
adc
inc
ja
add
add
xor
les
add
adc
add
ljmp
add
sahf
mov
mov
mov
jle
cltd
subl
icebp
incb
and
cli
inc
pop
jo
push
and
add
add
inc
pop
js
ja
add
add
pop
pop
mov
add
add
add
hlt
jp
out
repnz
stc
stos
mov
stos
mov
cmpsb
mov
fwait
cmpsl
mov
lcall
lcall
jmp
loop
add
incl
cmp
out
and
cmp
add
add
add
add
cmp
add
add
push
roll
dec
mov
add
or
hlt
stc
sbb
add
jmp
hlt
vaddsubpd
enter
int
mov
xchg
mov
pop
repz
ss
add
incb
incb
mov
push
push
adc
add
add
add
inc
inc
add
xlat
add
inc
mov
add
or
or
sbb
push
clc
sti
add
mov
repz
hlt
xchg
out
mull
sti
mov
aam
call
f2xm1
cmc
in
repz
call
mov
mov
mov
pusha
out
std
aaa
jecxz
push
incb
mov
add
add
add
or
jnp
push
add
add
add
sub
sub
sub
idiv
jg
jecxz
add
add
dec
push
add
add
incl
lcall
cmp
pushl
call
inc
call
jmp
jmp
jmp
dec
dec
jmp
mov
mov
xor
incl
mov
add
int3
aaa
mov
add
add
add
add
add
add
pop
push
pop
ds
inc
or
repz
rcr
int3
jecxz
add
add
add
xor
add
add
pop
push
idiv
or
and
incl
pusha
jg
lcall
dec
jmp
out
icebp
ljmp
std
inc
mov
rclb
or
incb
mov
add
add
add
add
add
add
add
add
add
test
add
add
incb
in
adc
add
add
push
imul
adc
incl
arpl
incb
mov
jmp
repnz
cmc
jmp
sar
mov
cli
mov
sarl
lds
clc
add
add
je
add
add
add
dec
lret
es
ret
imul
add
add
or
add
add
xor
xchg
or
incl
in
add
add
add
jecxz
mov
push
ret
loop
iret
loop
out
popf
sti
mov
jmp
push
push
jmp
call
mov
ljmp
shlb
adc
xchg
std
add
add
add
add
xor
rolb
add
pop
add
add
add
add
add
pop
push
adc
adc
push
popa
sbb
ljmp
add
add
add
add
add
add
add
push
pop
dec
dec
dec
jnp
subb
loope
out
jmp
call
aam
mov
xchg
lahf
test
mov
add
add
add
push
insl
loope
add
push
imul
sbb
or
xor
xor
dec
dec
push
push
push
dec
dec
dec
sub
jo
cmpsb
add
xor
add
add
add
add
add
add
add
add
add
add
push
or
push
and
mov
add
add
add
insb
sub
cmp
push
lea
xchg
sbb
add
sbb
jecxz
mov
add
add
je
pop
popa
mov
movsl
nop
nop
nop
fs
das
das
or
sub
add
add
mov
sub
add
or
jmp
mov
add
sbbl
jb
xor
dec
sub
sub
bound
mov
add
sub
aaa
es
add
pop
in
popf
ror
cmp
push
addl
add
add
loopne
xchg
jmp
lahf
cld
add
adc
in
add
cmp
add
or
sub
pop
push
jnp
jle
lods
fldl
add
add
jle
dec
push
pop
ja
xchg
push
incl
add
jmp
incl
add
inc
jg
add
inc
aas
incl
add
incl
incl
ud0
add
sti
incl
pop
incl
add
repz
jmp
add
add
add
jmp
add
add
add
inc
add
add
add
inc
add
add
add
incl
add
incl
add
add
add
add
add
jg
add
inc
add
add
add
pusha
add
add
add
cld
jo
add
aas
add
cld
clc
add
add
add
cld
clc
add
add
add
clc
cld
add
add
add
clc
incb
add
pop
add
clc
incb
add
sldt
icebp
incl
add
sldt
icebp
incl
add
inc
add
sldt
icebp
inc
add
sldt
icebp
jmp
add
pop
add
loope
lock
pop
add
loope
lock
pop
add
loope
clc
add
pop
add
loope
cld
add
pop
add
loope
cld
add
pop
add
loope
clc
add
pop
add
jecxz
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
lock
xor
incl
add
add
loopne
incl
add
ret
inc
jg
add
incl
incb
incl
add
clc
pop
incl
add
jmp
aas
incl
add
inc
incl
add
add
add
add
add
add
add
sbb
add
add
add
add
push
mov
add
push
pop
sbb
jno
pop
xchg
ret
add
adc
add
push
or
jo
xor
xchg
xorl
or
add
add
add
nopl
jle
sub
mov
adc
pop
push
add
pop
add
dec
xchg
loope
pushf
out
lock
add
mov
in
in
cltd
fucomi
sub
pusha
test
pop
xchg
push
xchg
dec
test
sub
add
mov
jle
incl
jmp
decl
ljmp
call
out
add
incl
fcos
add
incl
mov
add
mov
add
push
jo
lahf
out
lock
dec
and
mov
push
call
cmp
ljmp
cli
call
incl
in
add
incl
incl
mov
add
add
insb
mov
add
sub
mov
or
push
adc
in
sub
ljmp
lcall
mov
popf
scas
or
adc
mov
xchg
mov
jg
sbb
in
push
add
add
shll
jl
add
or
sti
cld
sbb
decl
hlt
notb
push
pop
adc
sub
or
add
adc
add
add
or
sbb
push
adc
sbb
adc
add
push
cmpsb
mov
add
sub
aas
add
add
add
add
adc
or
incl
xor
push
pop
add
pop
adc
adc
pop
sbb
sbb
sub
add
sub
add
sub
pusha
jp
cmp
loopne
add
add
add
add
add
add
or
enter
add
decl
mov
add
sub
and
sub
push
ja
jns
add
or
jmp
add
add
add
add
add
add
add
pop
and
jmp
add
xchg
sbb
sub
inc
cmp
sub
out
jb
add
inc
pop
pusha
add
pop
push
std
call
decb
popa
jae
push
movlps
cmp
inc
push
push
and
adc
adc
mov
add
xchg
add
dec
bound
movsl
scas
add
add
add
add
add
add
jmp
cld
or
push
add
ds
xor
cmp
aaa
xchg
roll
jbe
or
add
adc
es
add
push
add
add
add
add
or
rcr
dec
pushl
decl
sub
add
add
add
and
sub
dec
cwtl
rolb
loop
imul
add
or
cmp
ljmp
xchg
movsb
lods
add
hlt
stc
gs
pushl
clc
decl
mov
pop
or
add
add
add
push
sbb
push
pusha
push
cwtl
stos
add
add
add
aaa
push
jecxz
add
add
adc
sbb
mov
ljmp
lcall
jmp
sbb
cmpsl
add
add
add
inc
dec
push
inc
dec
pop
inc
dec
pop
pop
adcb
fstpt
faddl
add
add
add
loop
sbb
cmp
sub
push
ret
rorb
incl
loope
and
add
inc
dec
cmp
ss
push
gs
fwait
repnz
push
roll
add
add
dec
push
add
add
rcr
loop
dec
popa
inc
push
push
addr16
out
repz
ljmp
lock
aad
and
daa
das
cmp
das
cmp
sub
aaa
inc
push
setns
add
cmp
add
add
sub
add
mov
jb
mov
mov
pop
clc
incl
loopne
pop
mov
or
and
pop
and
push
movl
add
add
add
add
add
mov
add
add
std
std
scas
mov
lahf
test
mov
xlat
jo
ljmp
out
add
ljmp
mov
add
add
add
sub
push
push
ret
add
add
lods
mov
add
cld
std
push
stc
cli
lret
rcr
lret
mov
jge
out
inc
out
add
cmp
add
add
jno
add
add
and
and
mov
add
stos
add
jmp
call
jl
jmp
fdivr
jmp
call
dec
mov
mov
loope
or
incl
test
xor
sub
test
push
aad
inc
ret
popa
popa
pusha
adc
shl
jb
pushf
add
add
mov
lcall
incl
call
in
push
mov
shll
in
int
add
add
add
add
add
add
jns
jnp
pop
sbb
fsub
or
out
pop
data16
pop
iret
jmp
fucomp
jle
cli
mov
call
out
push
call
pushl
ljmp
or
clc
add
insl
in
add
fistl
fadds
add
dec
push
add
add
push
and
arpl
mov
add
adc
add
add
add
add
sub
sub
pop
test
mov
rcl
test
sub
add
daa
jge
add
jp
pop
popa
nop
nop
xchg
jge
jge
inc
dec
or
inc
jo
mov
jnp
cltd
and
add
sub
add
xchg
inc
push
pop
and
mov
add
add
xor
adc
add
add
push
sbbb
in
adc
add
add
mov
cmp
pop
xchg
add
out
inc
incl
incl
jg
js
jg
add
aas
cld
add
pop
cld
add
pop
clc
add
pop
cli
add
psllq
add
repz
maskmovq
testl
add
out
add
out
add
xbegin
add
iret
cld
add
iret
cld
add
iret
clc
add
iret
add
add
add
add
add
xadd
add
pop
sar
jg
decl
cld
pop
push
ljmp
add
add
add
add
add
add
add
add
add
add
push
add
add
push
push
push
and
aas
sub
push
jle
jle
cmp
or
and
insl
test
stos
loope
add
add
loop
add
add
nop
sub
pop
xor
sub
dec
mov
jp
jbe
call
add
mov
mov
leave
leave
adc
outsl
push
rcr
es
cmpsl
movl
mov
sbb
mov
add
add
cwtl
inc
insb
insl
dec
ret
repnz
cld
cld
das
sbb
rolb
lret
lret
int3
push
jle
push
jne
pop
jb
jbe
fildl
add
add
xchg
sbb
cmp
mov
div
adc
jae
push
arpl
dec
pusha
or
adc
adc
adc
adc
inc
mov
add
mov
jnp
or
or
ds
adc
mov
add
add
and
sbb
mov
sbb
sbb
push
sbb
and
insb
mov
add
add
add
add
add
sub
adc
and
mov
xchg
cwtl
add
sub
push
add
or
push
push
and
aaa
dec
adc
dec
xchg
aam
add
mov
add
add
add
mov
xor
sbb
add
or
or
aad
js
add
sub
add
or
daa
sub
xor
adc
ds
faddl
add
aad
imul
sub
add
or
and
aam
outsb
add
sub
add
cs
aaa
push
addr16
fadds
insl
jb
add
push
sbb
mov
movsl
scas
mulps
or
push
sbb
daa
sub
cmp
mov
sahf
faddl
add
add
stos
add
adc
and
adc
sbb
loop
loopne
and
sub
sub
dec
push
pop
xor
lret
inc
flds
jl
cltd
gs
mov
add
mov
insb
sub
arpl
mov
rcr
adc
es
sub
nop
sub
jle
add
xchg
push
xchg
pushf
add
sbbl
jae
lret
popa
fucomip
and
call
inc
push
and
xor
imul
add
add
push
mov
jecxz
mov
mov
iret
faddl
ljmp
mov
or
adc
or
add
mov
pushf
add
add
cld
std
out
repz
loope
mov
lret
aam
fucomip
and
ret
insb
push
dec
orb
mov
pop
test
jge
in
in
repnz
std
fscale
std
loopne
stc
out
icebp
rcl
mov
fildll
shl
mov
adc
scas
sbb
and
iret
add
xor
mov
mov
and
out
out
negl
loop
jmp
inc
lock
lcall
mov
push
jo
xor
addr16
flds
add
add
ja
push
cmp
ja
or
jle
je
inc
jnp
pusha
test
lods
mov
into
fwait
mov
jp
mov
popf
jmp
movsb
lock
in
ja
jg
mov
jle
jno
popl
add
mov
test
outsl
xchg
lods
push
xchg
rorl
insb
mov
add
xchg
sub
mov
cltd
fiadds
add
add
iret
xchg
ret
xchg
pop
xchg
mov
stc
incl
clc
jg
push
aas
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
lahf
addb
lahf
rolb
lahf
rolb
lahf
add
add
add
rolb
add
inc
jg
push
incl
jmp
incl
incl
add
adc
add
and
add
add
sbb
add
add
add
add
jnp
add
or
push
pop
cltd
rolb
add
add
add
add
add
add
xchg
or
add
ja
filds
add
mov
clc
testl
add
hlt
add
and
add
imul
mov
jmp
adc
or
adc
adc
stos
pop
cltd
faddl
add
add
mov
sub
or
in
pop
lods
scas
add
add
push
sbb
pop
adc
add
popa
mov
add
add
xchg
pop
or
add
or
out
push
jns
add
or
adc
ss
and
dec
or
movl
add
add
add
add
add
add
push
pop
pusha
add
sub
in
or
pop
pop
or
dec
sbb
jl
fadds
add
add
add
mov
add
add
sub
dec
rcr
cmp
icebp
or
aaa
push
sbb
push
pop
daa
xchg
add
add
add
js
add
add
enter
pop
dec
adcb
shlb
inc
das
aaa
inc
es
inc
mov
add
add
add
sub
jns
add
iret
aam
xchg
movsb
mov
sbb
lret
or
xor
add
add
add
sub
addb
add
add
lods
jmp
mov
std
aam
loop
stc
lret
fsubp
mov
pop
call
pop
mov
push
xchg
jo,pn
add
add
add
inc
insl
jae
test
and
add
mov
fcmovbe
out
out
loope
cli
mov
aad
test
ss
andl
add
cmp
dec
addb
push
ja
jp
movsl
mov
cs
fstpt
popf
lock
add
pop
xchg
add
add
mov
mov
add
testl
add
loopne
add
rolb
add
add
add
add
add
add
mov
add
add
sldt
aas
add
cld
jg
add
add
add
add
add
add
add
and
add
add
andb
add
std
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
adc
or
adc
or
adc
xor
or
pusha
je
sub
pop
and
fwait
rclb
jp
add
add
adc
add
adc
cmp
adc
and
add
cmp
add
or
xor
add
push
or
or
test
jmp
aas
imul
or
sub
push
add
dec
add
sysexit
add
add
add
mov
or
decl
add
decb
dec
jle
add
mov
and
sub
pop
dec
add
adc
add
push
cmp
sbb
decl
add
incl
add
incl
jne
add
xlat
out
bound
add
jae
popa
dec
cmp
xor
or
pop
or
decl
add
incb
add
incl
add
incb
push
lcall
jge
in
add
sarl
js
jle
test
fsts
adc
xor
or
push
add
incb
add
incl
add
incb
push
or
add
incb
sub
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
add
mov
in
jmp
adc
pop
pop
add
add
add
add
add
add
add
add
add
push
and
push
pop
pop
push
jle
outsl
fildl
ud0
or
push
add
add
add
add
add
add
add
add
add
add
in
incl
jge
incl
insl
aam
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
aas
inc
add
xchg
iret
int
movsb
lock
jno
push
and
pop
sbb
and
or
adc
adc
sbb
and
pop
sub
pop
imul
pop
mov
stos
sub
and
push
adc
push
decl
add
incb
add
incb
add
incl
add
incb
add
incl
add
incb
dec
lcall
js
incb
int3
mov
add
add
add
add
add
add
add
add
add
add
or
mov
add
jle
sti
std
cltd
into
int
xchg
sarl
mov
sarl
lret
mov
xchg
out
mov
insl
fsub
mov
inc
shr
mov
adc
mov
incb
enter
leave
incl
jg
incb
jbe
incl
outsb
incb
js
incb
sub
add
incb
outsb
fdivr
add
dec
add
add
add
add
add
add
add
add
add
add
dec
insl
jno
jo
filds
jne
rcrl
mov
je
jo
std
jnp
incl
call
jns
ljmp
call
aas
idiv
ljmp
out
lcall
out
incl
in
incl
incl
fdivr
incl
iret
incl
mov
incl
lods
incl
mov
cli
incl
mov
incl
test
incl
jl
incl
jne
incl
pop
lret
loope
pusha
lret
or
add
add
add
add
add
add
add
add
and
ja
into
add
fmull
push
jmp
dec
decl
es
imul
ljmp
outsl
insl
lcall
decb
cmp
cmc
sbb
decb
incl
in
incb
loop
incb
fdivr
incl
int
incb
ret
incb
mov
incb
mov
cli
incb
nop
cmc
incb
xchg
incl
jg
incb
js
incb
outsl
fdivrp
add
js
add
add
add
add
add
add
add
add
test
pop
rcr
add
jp
mov
sbb
xor
and
inc
sub
call
dec
decl
decl
call
aas
pushl
ljmp
cld
lcall
decl
icebp
incl
jmp
incl
fdivr
incl
int
incl
add
incl
movsl
incl
pushf
cld
incl
xchg
idiv
add
in
incl
jnp
incl
jae
incl
pop
leave
jmp
pop
rcll
add
add
add
add
add
add
xor
add
add
add
rcll
xor
in
push
xor
sbb
pop
es
sbb
cmp
inc
xor
idiv
xor
xor
cmp
jmp
sbb
call
lock
loope
incb
repnz
fdiv
incb
repz
idiv
pop
enter
ret
or
cli
decl
test
decb
mov
hlt
decl
mov
incb
jge
incb
jbe
incl
outsb
fdivr
add
ja
add
add
add
add
add
add
test
add
add
dec
mov
lea
ret
leave
decl
add
call
or
adc
xor
lcall
sub
call
adc
pop
lcall
sub
sbb
daa
adc
decl
adc
decb
call
adc
sub
and
sub
sub
xor
das
sub
and
pushl
inc
inc
daa
nop
add
incl
jno
incb
pop
rcr
pop
mov
add
add
add
cmp
cmp
stos
and
movsl
mov
and
adc
add
add
push
add
or
adc
lods
mov
adc
sbb
decb
decb
jnp
call
daa
sub
incb
or
adc
add
or
add
add
add
add
add
or
add
push
adc
decl
push
sbb
adc
adc
add
add
add
add
ds
out
add
incb
imul
dec
add
add
add
add
sub
lea
add
add
bound
push
fchs
pushl
jo
add
add
add
add
add
add
pop
add
or
add
adc
sbb
adc
jecxz
adc
decl
decl
incl
push
pop
incl
sbb
incl
or
incl
add
incl
add
incl
add
incl
add
decl
push
adc
or
sbb
adc
pop
call
pop
and
sbb
sub
incl
add
pushl
cmp
decl
xchg
incl
ja
incl
jo
incl
push
mov
add
imul
jecxz
icebp
sub
adc
cmp
add
add
add
add
add
add
add
add
add
add
adc
sti
incl
incb
incl
out
incb
cs
add
add
incb
add
incb
add
incl
add
incb
add
incb
or
adc
and
sbb
lcall
das
and
xor
call
adc
decb
or
xor
add
incb
jno
incb
pop
ret
pop
ret
add
add
dec
pop
cltd
add
and
fildll
add
add
sub
imul
push
pop
stc
add
add
add
add
add
add
add
add
add
add
xchg
add
incb
incb
incl
decb
int
incb
or
incb
add
incb
add
incl
add
incb
add
incb
add
call
adc
jmp
das
cmp
das
xor
xor
inc
incb
or
cmp
incl
jl
incb
je
incb
insl
fcos
add
pop
sbb
and
in
add
shlb
add
add
pop
addr16
add
incl
add
incl
add
incl
add
incl
push
or
or
incl
incl
incl
std
incl
movsl
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pop
or
and
das
cmp
pushl
aas
dec
ljmp
xor
cmp
incl
jge
incl
ja
incl
jo
incl
push
mov
add
dec
pop
pop
add
or
daa
mov
add
and
add
inc
dec
mov
add
add
add
add
add
add
add
add
add
and
add
jmp
ud0
decl
incb
cld
decl
fs
add
add
add
add
add
add
add
add
add
add
add
add
and
pushl
xor
inc
cmp
cmp
adc
xor
xor
or
loop
add
incl
pop
ret
pop
roll
add
add
xor
mov
xor
out
sbb
add
add
dec
pop
sbb
and
incl
add
incb
add
incb
add
incl
add
incb
dec
push
incb
lcall
sbb
decb
incl
hlt
cld
decb
push
outsb
incb
add
incl
add
incb
add
incb
add
incl
add
adc
sbb
aaa
cmp
cmp
dec
aas
inc
push
jmp
es
add
pop
sbb
xor
jp
incb
jae
incl
arpl
std
add
xor
add
add
inc
push
adc
jno
lcall
rcr
les
add
add
push
imul
add
incl
add
incl
add
incl
add
incl
add
incl
test
ljmp
jmp
call
out
decl
add
incl
add
incl
add
incl
add
incl
add
cmp
push
pushl
inc
incl
add
incl
dec
pop
decl
iret
incl
jnp
incl
je
incl
outsb
pop
pop
mov
adc
inc
add
add
add
rclb
xor
xchg
add
add
add
add
add
add
add
add
add
add
add
push
incl
xlat
cmp
cmp
sbb
incb
lret
or
add
incb
add
incl
add
incb
add
ljmp
cs
ds
dec
incb
pop
or
add
add
aaa
cmp
jmpw
mov
incb
je
incl
outsl
fdivr
or
test
add
add
aaa
inc
addb
add
add
sbb
add
mov
into
add
lods
mov
sub
into
add
add
add
add
add
add
add
add
add
add
add
cmp
sbb
idiv
pop
decl
xor
out
call
lods
int3
decb
or
add
add
add
add
add
add
pop
sbb
incb
add
jmp
sub
push
pop
popa
push
pop
pushw
mov
incb
jbe
incl
outsl
fdivr
push
pop
rcr
pop
mov
add
cmp
incl
icebp
cli
sbb
add
incl
cld
cld
pop
decl
mov
and
add
add
add
add
add
add
add
add
add
add
push
popa
jl
dec
std
ljmp
lcall
ds
incl
in
lcall
ja
incl
add
incl
add
incl
add
incl
add
incl
add
call
adc
pusha
decl
pop
decl
arpl
jb
mov
or
loop
add
incl
pop
ret
rclb
add
push
cmp
add
pop
out
add
cmp
add
clc
sti
pop
rcl
incb
incb
decb
decl
mov
insb
add
push
incb
add
incb
add
incb
add
incl
add
daa
adc
jp
popa
ljmp
repz
incb
fdivr
and
incl
add
incb
add
incl
add
decb
or
inc
dec
push
decl
pop
decb
pop
decb
jmp
jbe
and
jbe
incl
outsb
fdivr
add
sbb
cmp
add
add
cmp
add
add
add
decb
fucomi
repz
fmull
add
add
incl
incb
decb
decb
call
adc
std
std
sbb
xchg
scas
add
or
add
incb
cvtps2pi
add
incb
adc
inc
incl
xchg
jp
lcall
decb
out
decb
into
bnd
xor
add
add
add
sub
incb
incl
push
incb
incb
push
decl
cmp
in
incb
jnp
incl
insb
fdivr
add
and
popa
push
xor
add
add
add
or
in
incl
decl
call
call
lcall
repz
cli
xor
push
gs
sbb
decl
sbb
cmp
sbb
inc
lcall
sub
and
jg
std
call
aas
idiv
incl
loope
lcall
shl
pop
sbb
incl
add
jmp
and
cmp
inc
dec
cmp
cmp
dec
cmp
incl
fdivrp
add
fdivr
add
call
pop
mov
or
pop
das
cmp
incb
xchg
mov
lret
add
incb
decl
decb
adc
adc
lcall
and
es
ljmp
xlat
out
bound
inc
pop
stc
and
dec
ljmp
cmp
inc
pop
xor
pop
pushl
inc
pop
decb
mov
incl
std
pop
out
incl
xor
or
adc
cmp
pushl
cmp
aaa
inc
sub
inc
ljmp
ss
decb
incb
mov
incl
push
incb
xlat
sbb
movsl
add
add
incb
mov
decb
fdivs
incb
decl
decb
adc
sbb
lcall
daa
das
pushl
aas
mov
aad
inc
push
push
decb
outsb
push
pusha
jno
push
pop
jo
dec
popa
jo
jbe
out
cwtl
jns
decb
incl
in
incb
sar
incl
mov
sub
cmp
and
sub
lcall
sub
dec
mov
add
add
sbb
ret
add
add
add
incl
iret
fdivr
or
fldenv
incl
decl
call
lcall
ljmp
pushl
incl
decl
call
mov
shll
ljmp
pushl
mov
outsb
js
ljmp
cmp
adcb
xchg
ljmp
jmp
in
incl
fdivr
decl
std
decl
mov
sbb
notrack
sbb
decl
push
and
push
adc
incl
xchg
incl
sub
add
incl
pop
aad
adc
add
add
inc
or
movlhps
add
add
add
ljmp
add
add
incb
decl
adc
sbb
and
ljmp
xor
decl
push
idiv
cld
jnp
lods
mov
decb
mov
jle
cltd
incl
std
jae
decl
incb
int3
and
cli
incb
jo
add
and
add
adc
incl
add
incb
js
add
incl
fsin
add
decb
push
mov
add
add
add
xor
add
add
incl
hlt
decl
mov
mov
add
add
incl
call
call
lcall
jmp
pushl
cmp
call
jmp
ljmp
jp
cmc
imull
test
mov
jmp
cmpsl
mov
mov
loope
jns
lcall
jmp
loop
incl
sar
incl
cmp
out
jmp
cmp
add
push
incl
add
incl
add
cmp
incl
insl
loopne
add
add
incl
dec
mov
or
add
add
aas
push
xor
add
incl
or
or
stc
decb
addl
add
clc
cli
cli
paddd
sbb
and
sub
pushl
incb
push
lcall
insl
jp
incl
out
repnz
leave
sar
ret
mov
mov
mov
xchg
mov
repz
ss
incl
incb
incb
mov
sar
push
push
adc
add
add
add
add
ss
inc
incb
pop
xlat
incb
push
sar
add
sub
sbb
add
add
xor
or
add
and
push
clc
sti
decb
mov
add
xchg
mov
adc
popa
loopne
mov
jbe
cmc
rolb
cli
leave
stos
clc
cld
into
mov
xlat
frstpm(287
fsubrp
jecxz
lock
in
repz
call
sar
mov
lods
mov
lcall
aaa
jecxz
decl
incb
mov
incl
cwtl
push
test
decl
or
dec
push
loopne
add
incb
push
sar
add
pushl
jo
and
add
add
inc
push
push
sub
sub
push
sub
adc
cli
decl
cmpsb
lret
add
add
inc
push
pop
or
sub
add
incl
incl
lcall
cmp
pushl
call
inc
call
jmp
jmp
jmp
dec
dec
jmp
into
pushl
scas
incl
loop
decl
aam
incl
mov
incl
xchg
decl
idiv
inc
int3
pushl
mov
incl
outsb
in
add
incl
push
incl
dec
sar
add
incl
ret
and
adc
push
pop
ds
inc
decb
out
incb
mov
into
nop
or
xor
pop
push
jecxz
add
incl
pop
push
add
decb
and
incl
pusha
jg
lcall
dec
jmp
out
icebp
ljmp
mov
mov
mov
call
enter
sar
incb
mov
incl
xchg
std
incb
xor
add
incl
outsl
call
incb
pop
add
incb
dec
sar
add
incl
mov
add
push
fs
test
aas
incb
mov
incl
cli
incb
in
std
add
out
add
sbb
add
add
add
incb
jmp
adc
incl
arpl
incb
mov
jmp
repnz
cmc
jmp
sar
mov
idiv
mov
sar
mov
lods
clc
incb
mov
incb
popf
incl
mov
incb
jg
incb
je
incl
addr16
add
incb
push
add
adc
pop
mov
adc
add
add
xchg
mov
or
incl
add
incl
daa
xor
add
xchg
decl
std
incl
in
incl
addr16
add
incl
ret
jecxz
add
loop
push
ret
loop
xor
loop
imul
lcall
call
jmp
push
push
jmp
call
mov
std
ljmp
mov
jmp
mov
idiv
add
std
incl
jle
incl
outsl
out
incl
addr16
int3
loope
addr16
xor
or
add
add
popf
adc
pop
incb
add
incb
add
incb
add
incl
pop
push
adc
adc
push
push
popa
lcall
movsb
mov
adc
cmc
incl
cmc
incb
and
incb
add
incb
add
incl
add
incb
add
incb
add
lcall
push
pop
decb
dec
jnp
cmp
lods
mov
into
rcl
loope
out
out
jmp
loop
jmp
out
enter
scas
mov
xchg
lahf
test
and
xchg
std
incb
jle
incb
jne
incl
outsl
repnz
and
shll
daa
jo
add
add
add
sub
mov
or
cmc
or
or
xor
xor
dec
dec
dec
push
push
push
decl
dec
sub
pusha
jo
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incb
push
or
or
and
sub
iret
push
mov
xchg
mov
sbb
out
sub
cmp
sbb
incl
xchg
sbb
std
incb
jp
adc
repnz
mov
test
sbb
add
add
xor
push
or
inc
push
push
pop
pusha
cld
mov
movsl
movsl
call
fs
das
das
incl
ds
insb
add
inc
pop
cmp
inc
pop
cmp
pop
cmp
inc
push
cmp
dec
pop
cmp
push
jae
sub
addr16
push
jg
sub
sub
xchg
incl
mov
incl
xchg
decl
jmp
xor
loopne
xor
pop
imul
mov
mov
and
dec
mov
inc
jb
pop
sub
sub
sbb
incb
xchg
incb
mov
incl
xor
and
loop
pusha
orl
dec
inc
arpl
inc
jno
jbe
das
xor
es
lods
incl
xchg
std
incb
adc
fbld
mov
add
add
add
mov
add
test
adc
cmp
test
incl
xchg
incl
xchg
std
jmp
mov
iret
aaa
lcall
es
arpl
sub
lcall
xchg
jmp
add
incb
cwtl
std
decb
lcall
cmp
insl
jg
cmp
add
or
lcall
sub
pop
push
jnp
sub
stc
xor
rol
xor
call
add
mov
lea
push
pop
leave
daa
inc
dec
lock
push
lods
push
adcb
dec
add
add
add
inc
add
add
inc
pop
incl
add
incl
incl
ud0
add
incb
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
loopne
add
add
add
loop
add
add
add
cld
add
add
pop
add
cld
pusha
add
add
add
clc
jo
add
pop
add
clc
jo
add
sldt
clc
js
add
sldt
lock
add
add
add
lock
add
sldt
lock
add
add
add
lock
add
add
add
loopne
add
add
add
loopne
add
add
add
loope
add
add
add
rol
add
pop
add
loope
add
add
add
loope
add
add
add
rol
add
add
add
rolb
add
add
shl
add
add
add
loopne
add
add
add
rolb
add
add
rolb
add
add
add
add
add
add
add
add
add
sldt
rolb
add
jg
add
add
add
incl
add
add
add
incl
add
add
cmpb
add
inc
incl
jg
add
cld
add
incl
add
jmp
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
std
stc
add
std
cli
add
add
add
add
add
add
add
add
add
add
add
pop
or
sub
or
dec
pusha
jbe
pop
xchg
mov
add
add
add
ja
add
pop
or
push
inc
add
inc
push
pop
sbb
sbb
or
push
incl
pop
mov
adc
pop
dec
add
adc
add
add
add
jo
inc
xor
call
pop
add
incl
push
or
add
incl
js
rolb
mov
add
addl
pop
push
enter
call
add
incl
add
incl
nop
add
incl
jbe
aad
outsl
iret
adc
add
add
add
add
add
add
add
add
and
add
mov
xchg
xchg
aaa
or
or
add
add
add
add
add
add
adc
sbb
bound
insl
push
or
incl
add
incl
add
incl
add
incl
xor
add
incl
insl
mov
data16
add
add
add
add
add
add
add
scas
add
aam
push
xchg
in
out
out
mov
jns
pushf
lcall
movsb
mov
subl
fadds
and
mov
incl
pop
xchg
add
incl
dec
test
add
in
add
insl
add
add
add
add
add
add
cmp
aam
adc
outsl
mov
jle
incl
jmp
decl
ljmp
call
out
incl
loope
incl
fcos
incl
ret
incl
mov
incl
movsb
incl
xchg
clc
incl
mov
incl
jnp
incl
push
lds
add
add
add
add
or
lret
add
in
xor
dec
and
push
mov
call
call
cmp
ljmp
cli
call
jmp
incl
in
incl
incl
incl
mov
incl
cltd
cli
incl
mov
incl
sub
add
add
xchg
add
add
add
add
inc
arpl
dec
mov
scas
notb
adc
pushl
in
ljmp
ljmp
lcall
scas
mov
decl
popf
scas
decl
cwtl
mov
or
xchg
mov
lcall
xchg
mov
jmp
jg
lcall
jns
incl
arpl
testb
mov
add
sbb
cmp
mov
out
pop
add
call
or
call
sti
cld
lcall
decl
hlt
idiv
adc
call
and
incl
or
incl
add
incl
add
incl
add
incl
or
call
push
adc
lcall
sbb
call
xchg
incl
jb
incl
pop
mov
add
add
add
insb
jg
or
mov
xor
cmpsl
cmp
and
in
add
incl
add
push
add
call
orl
or
incl
sub
incl
push
pop
incl
add
incl
add
incl
add
decl
pop
adc
adc
pop
call
sbb
lcall
push
sub
add
add
sub
incl
jbe
incl
pop
xlat
adc
dec
stos
pop
into
fcmovnbe
add
add
sub
inc
add
push
cld
add
add
add
add
add
decl
ror
add
incl
decl
mov
or
add
add
add
add
add
add
add
sbb
jmp
xor
jmp
and
sub
incl
jns
incl
imul
add
das
pop
push
arpl
push
aas
dec
negl
rcr
xchg
pop
inc
push
xchg
add
incl
add
incl
add
incl
pop
and
add
out
decl
incl
test
incl
add
incl
add
incl
add
lcall
push
sub
sub
cmp
cmp
ljmp
jge
incl
jb
incl
pop
sarl
add
adc
dec
push
outsb
jbe
push
aad
and
pusha
add
add
add
add
add
add
add
add
pop
decl
std
call
cld
decl
popa
jae
add
add
add
add
add
add
push
pushl
cmp
cmp
and
call
adc
sbb
in
add
add
rolb
add
or
das
mov
and
add
push
dec
pop
and
adc
lock
add
add
add
add
add
add
jmp
repnz
decl
aas
push
incl
add
incl
add
incl
add
cmp
dec
pushl
xor
add
cmp
pushl
xchg
sar
add
incl
arpl
testl
add
add
dec
pop
add
adc
lock
roll
xchg
mov
add
xchg
pop
add
push
incb
add
incl
add
incl
or
sbb
dec
pushl
decl
and
incl
add
incl
add
jmp
and
push
ljmp
sub
decl
sar
ja
incl
imul
or
add
add
inc
push
xor
or
decl
out
div
testl
stc
stc
cli
or
jle
add
add
add
add
add
add
decl
stc
jmp
pushl
clc
decl
mov
incl
or
incl
add
incl
add
call
sbb
decl
pusha
call
stos
incl
and
add
decl
pop
mov
add
sub
outsl
add
aaa
decl
xlat
out
incl
decl
call
icebp
idiv
and
add
incl
or
incl
adc
lcall
jns
decl
lcall
jmp
lcall
cmpsl
incl
add
incl
add
incl
push
incl
pop
incl
pop
lcall
xchg
incl
xchg
in
incl
insb
adc
nop
add
sub
or
loope
incl
decl
call
call
lcall
xlat
loop
push
sbb
cmp
sbb
inc
jmp
xor
push
ret
sar
lcall
incl
loope
jmp
add
cmp
cmp
pushl
cmp
call
je
add
maxps
mov
add
add
and
add
or
fdivrl
add
add
add
add
decl
decl
call
jmp
ljmp
pushl
mov
into
xchg
cmp
inc
push
push
decl
js
mov
repz
jge
ljmp
lock
decl
aad
jmp
inc
dec
jmp
das
cmp
daa
das
cmp
and
aaa
pushl
inc
push
decl
cltd
repz
addr16
adc
rolb
add
add
push
sbb
add
fldcw
add
add
add
add
decl
call
lcall
pushl
incl
call
mov
shlb
mov
ja
pushl
mov
je
lods
decl
clc
incl
loopne
call
mov
pop
decl
and
decl
xchg
out
add
decl
ret
in
or
adc
add
add
pop
decl
jmp
pushl
incl
call
ljmp
cld
std
test
mov
lahf
test
test
pushl
ljmp
out
incl
leave
ljmp
mov
daa
incl
add
add
pop
ljmp
adc
incl
dec
ret
jno
add
add
add
or
and
pop
lods
mov
or
add
add
add
jecxz
jmp
in
hlt
divl
in
repnz
inc
out
cmc
clc
push
repz
sti
fs
std
ja
decl
repz
stc
mov
lret
mov
ret
test
jge
out
incl
incl
mov
mov
add
add
add
add
daa
jno
incl
pop
incl
dec
ret
xor
adc
add
add
add
add
dec
and
and
adc
rcll
add
add
add
add
pushf
stos
std
add
jmp
call
jl
jmp
fdivr
jmp
call
dec
pushl
mov
incl
decl
iret
incl
test
cld
pushl
jae
ljmp
test
incl
push
aad
add
jb,pt
sbb
add
add
add
add
aas
push
dec
popa
popa
pusha
call
pushf
cmpsl
incl
lret
jecxz
push
scas
iret
mov
aas
push
nop
add
add
add
ljmp
lcall
incl
call
in
push
mov
leave
sar
cmpsb
ret
sar
jb
in
push
int
incl
cmpsb
incl
mov
incl
jp
incl
imul
add
incl
push
aad
add
incl
mov
add
add
add
jns
jns
jnp
add
sbb
incl
fsub
decl
incl
pop
incw
xchg
incl
iret
jmp
aaa
fucomp
jle
cli
pushl
out
push
call
pushl
in
pushl
lods
mov
or
clc
incl
pushf
incl
jg
incl
insl
in
incl
pop
sbb
int3
ret
and
push
sub
bound
inc
jmp
add
incl
sbb
jmp
arpl
push
mov
leave
incl
incl
add
incl
add
incl
add
ljmp
sub
lcall
pop
incl
mov
out
vpaddusb
test
pushf
ljmp
fwait
out
add
idiv
adc
call
xor
push
adc
push
push
push
sub
aaa
test
nop
nop
xchg
jge
jge
aas
inc
dec
decl
das
inc
std
add
cmp
push
xor
jp
xor
jp
cmp
and
test
mov
inc
pusha
incl
sub
adc
in
ljmp
fimull
das
pop
outsb
push
dec
imul
xchg
mov
les
add
add
imul
inc
pusha
incl
mov
incl
xchg
std
and
loope
cmp
pop
out
adc
incl
xchg
stc
decl
bnd
sub
js
and
pop
jb
pop
jl
or
in
decl
xchg
icebp
mull
cwtl
jmp
sbb
add
add
xchg
cmpsb
and
push
pop
mov
xor
fisttpll
jo
dec
mov
or
cld
rolb
incl
incb
jg
add
aas
rolb
aas
rolb
pop
rolb
pop
rolb
xadd
add
rolb
add
repnz
pop
jecxz
add
jecxz
add
jecxz
add
ret
addb
movl
add
movb
add
add
add
add
add
add
add
add
add
add
pop
rolb
jg
aas
add
incb
push
ud0
loopne
ljmp
add
add
add
add
add
add
add
add
add
add
add
scas
aad
add
add
add
add
add
push
or
and
xor
cmp
xor
add
or
adc
gs
adc
or
add
add
incb
mov
sldt
add
popa
insl
add
dec
mov
or
add
add
add
add
incb
jns
les
push
or
add
add
add
add
adc
mov
or
dec
dec
or
or
adc
sbb
sub
pop
arpl
sbb
or
pop
add
incb
add
incl
pop
ud0
jae
incb
insl
mov
add
add
add
add
add
add
dec
addb
or
in
mov
fcompp
mov
loopne
in
jmp
fisttps
fisubs
fdiv
loop
mov
loop
add
loop
add
in
add
dec
add
add
sbb
rcr
and
inc
dec
push
cmc
idiv
pop
push
cmp
sbb
jmp
incb
leave
incb
mov
incb
lahf
std
incb
repz
jge
incb
data16
add
add
add
add
add
add
shlb
sbb
outsb
jb
daa
sub
call
mov
decl
js
decb
jo
decl
jno
adc
outsb
xchg
call
popa
sbb
incl
je
incl
push
mov
add
sub
mov
sbb
sbb
call
push
add
stos
adc
decl
decl
xor
add
push
incb
add
incl
add
incb
push
adc
decl
adc
sbb
das
incl
jl
incl
popa
leave
mov
adc
mov
int
push
pop
imul
pop
std
add
add
add
adc
or
loopne
add
incb
mov
add
add
add
add
add
or
adc
sbb
sub
sbb
sbb
sar
add
std
add
sbb
add
add
pop
imul
sub
shrl
add
add
sbb
inc
mov
add
incl
add
incb
cmp
pop
clc
cli
decl
incl
add
add
add
add
add
sub
pushl
cmp
sub
fs
incl
je
incb
pop
mov
add
xor
outsb
or
mov
add
pop
insb
pop
or
sub
add
add
add
add
add
jl
pop
call
cld
incb
pop
imul
add
incb
add
jmp
and
cmp
decb
or
pushl
data16
add
incb
test
add
add
push
daa
scas
or
lret
mov
insl
mov
repnz
add
add
add
pop
mov
sbb
stc
decl
xor
incb
add
call
adc
sub
xor
incl
jle
incb
add
adc
add
sub
or
out
cli
cli
cli
add
decb
cwtl
test
add
add
add
pop
incb
sbb
push
jmp
adc
loop
or
add
sbb
push
decb
pop
pop
outsl
decb
jmp
add
std
imul
add
add
or
add
aaa
decb
loop
add
add
sti
sti
sti
add
decl
call
sbb
mov
adc
decl
data16
mov
incl
adc
or
xor
inc
incb
push
aas
dec
pop
jmp
mov
fcos
and
cmp
add
add
add
add
xor
dec
add
decb
add
add
incb
decb
sbb
daa
cmc
clc
cli
inc
push
gs
cmp
push
data16
push
incb
ljmp
and
das
sub
cmp
and
data16
sbb
pop
push
daa
xor
insb
jb
or
rorb
add
add
decb
call
jmp
aaa
decl
out
cmpb
jge
xchg
jbe
xchg
decl
cmc
incl
sar
pushl
jno
decb
mov
add
sbb
and
incb
pusha
xlat
call
pop
mov
add
add
add
cmp
lods
rolb
add
add
sti
cld
or
lcall
ljmp
incb
jmp
jp
out
shll
mov
insl
hlt
cld
call
decl
sti
pop
cmp
add
add
push
pop
xchg
incb
pop
aad
sbb
xchg
add
add
add
add
xor
adc
inc
add
add
dec
insb
ja
xor
lret
repz
fisubrs
cld
loop
cld
out
in
loope
out
fdivp
stc
dec
out
mov
mov
and
incb
mov
pop
in
and
adc
incb
push
aam
push
pop
mov
add
add
add
fs
jl
incb
shr
fldl
scas
xchg
add
or
decl
idiv
call
decb
jmp
inc
mov
lret
fcos
cmp
ljmp
mov
incl
jno
incl
pop
add
popa
mov
add
add
add
mov
add
cwtl
decl
mov
decl
jle
call
loope
call
hlt
cmc
cli
scas
fdivr
xchg
movsl
mov
xor
incb
jno
cld
pop
insb
fnstcw
inc
ja
adc
add
add
xor
sub
lret
push
push
outsl
sub
incb
sbb
sub
fwait
adc
sub
daa
dec
popa
andb
pop
sub
cli
pop
jl
adc
in
aaa
test
sub
add
add
bound
mov
adcl
add
add
pop
insb
jae
aas
push
cld
push
test
adc
loop
sub
jge
xor
or
mov
add
repnz
and
fimuls
inc
xchg
stos
adc
pusha
lods
sbb
pop
jno
cmp
fisubs
add
add
add
add
lock
add
loopne
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
addb
add
add
add
lock
incl
incl
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
add
push
adc
xor
add
and
add
add
add
add
cmp
aas
mov
add
add
cmp
add
scas
add
add
add
add
add
add
cltd
sbb
dec
dec
inc
ds
pop
inc
dec
test
rorl
xor
add
inc
incl
pop
scas
incl
imul
add
add
sub
dec
add
mov
pop
cltd
lcall
ljmp
out
incl
into
incl
scas
incl
nop
cmc
incl
jbe
sti
add
sub
add
add
push
pop
add
xchg
mov
clc
sbb
adc
lcall
jb
incl
push
arpl
or
call
dec
push
adc
call
imul
add
xchg
pop
add
add
pop
and
or
icebp
incl
mov
incl
add
incl
add
decl
push
sbb
and
lcall
fdiv
add
or
add
add
add
add
inc
dec
pop
adc
add
adc
add
incl
push
pop
decl
incl
add
decl
or
pushl
cmp
es
incl
jl
incl
push
mov
adc
inc
imul
enter
add
dec
jo
or
es
add
add
adc
decl
dec
pop
incl
add
jmp
ljmp
xor
jmp
xchg
incl
popa
lds
add
add
sub
pop
add
add
cld
cld
cld
pop
rcr
or
sbb
add
sub
push
pushl
in
decl
es
decl
pop
ljmp
mov
decl
data16
add
fmuls
mov
fadds
call
jmp
cmpsl
mov
test
cmp
stc
cld
call
ret
and
jmp
jbe
decl
fs
loopne
add
add
daa
xor
push
push
cli
or
filds
lcall
pushl
call
mov
mov
incl
lcall
or
jl
add
stc
and
add
sub
decl
mov
push
js
out
xchg
stc
cld
lods
std
mov
shl
jmp
mov
jmp
call
lcall
fs
call
push
xchg
incl
push
int3
sub
ja
adc
inc
sbb
arpl
add
enter
push
pushl
ljmp
loope
jmp
pushl
mov
std
incl
jl
incl
popa
pop
pop
lds
sub
sub
and
sub
call
dec
pop
incb
push
sbb
mov
jb
pushf
popf
insb
orl
jle,pn
pop
xor
pop
adc
inc
add
jg
sub
add
add
add
add
je
push
sub
or
sar
and
cwtl
add
add
add
bound
and
mov
arpl
xchg
cmp
add
cld
pop
add
incb
add
addb
add
add
add
add
add
add
add
add
add
add
add
sldt
clc
aas
add
add
add
adc
xor
adc
add
add
push
add
and
add
add
call
add
sbb
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
add
add
add
add
sbb
add
add
add
push
add
pop
add
adc
add
add
add
add
or
xor
add
add
sbb
test
add
or
and
add
add
sbb
test
add
or
sbb
add
add
sbb
dec
pop
add
or
adc
add
add
sbb
push
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
adc
add
add
add
add
adc
add
enter
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
add
je
jae
add
xor
xor
xor
xor
add
add
sub
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
data16
je
popa
add
add
or
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
add
add
add
add
insb
add
outsl
add
jns
jb
imul
je
add
xor
xor
xor
xor
add
add
xor
add
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
je
dec
add
insl
add
add
add
xor
xor
xor
xor
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
xor
xor
xor
xor
add
js
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
sldt
add
lret
pop
cltd
mov
jle
jle
or
xor
adc
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
add
xor
clc
mov
add
add
mov
add
xor
js
xor
xchg
xor
stos
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
jb
gs
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
imul
insb
add
gs
insb
xor
cs
insb
add
jb
imul
add
jbe
jbe
xor
fs
insb
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
add
imul
jae
add
dec
outsl
popa
fs
imul
add
add
jae
popa
addr16
outsl
js
add
add
addr16
insb
outsl
jae
dec
gs
add
push
jns
inc
jb
gs
je
imul
jb
popa
je
inc
outsl
outsb
je
add
add
gs
insb
inc
js
arpl
gs
add
add
je
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
je
inc
popa
insb
insb
inc
outsb
imul
add
lods
cmp
pop
add
movb
iret
and
add
imul
pop
imulb
in
das
mov
loope
dec
add
loope
add
adc
add
push
mov
cmp
and
push
mov
sub
adc
gs
jl
pop
jnp
pushf
cwtl
mov
cli
and
and
sbb
test
jbe
push
add
rclb
and
sbb
sbb
or
mov
sbb
xor
stc
loopne
cmp
mov
adc
sbb
jne
push
add
clc
scas
fldz
lock
adc
xor
and
sub
cmpsb
adc
lret
pusha
push
stos
std
mov
fstpt
pop
cmpb
iret
sbb
test
or
cmp
fs
inc
sub
xchg
inc
lret
in
dec
incl
addb
cmp
cmp
add
pop
sysret
lcall
mov
loopne
loope
mov
sbb
mov
mov
int
jge
addr16
or
jae
and
outsl
xor
daa
jne
je
bound
decl
outsb
cltd
push
fs
rcll
shlb
xor
sub
push
arpl
push
or
add
pop
inc
sub
loopne
mov
mov
push
addr16
xchg
das
or
adc
or
aaa
add
mov
das
or
push
arpl
fxch
adc
adc
xchg
inc
xor
adc
outsb
das
mov
cld
dec
clc
mov
inc
or
call
in
inc
add
and
test
inc
inc
jb
mov
cld
fs
xchg
push
add
push
lea
lret
rorb
sbb
shrb
fs
je
test
mov
sub
inc
mov
and
sub
and
in
sub
push
jb,pn
insb
and
cmpsb
and
lock
decb
je
jae
dec
fs
insb
jge
dec
js
sbb
adc
push
mov
in
add
adc
add
inc
outsl
inc
insb
gs
outsb
add
dec
adc
add
jae
add
push
mov
lds
rol
push
and
das
or
inc
xor
push
add
add
rolb
outsb
je
pop
addr16
push
lea
sub
jo
adc
jns
sub
test
push
outsl
jb
fs
mov
cmpsb
fs
add
nop
mov
or
sbb
jb
addr16
nop
nop
adc
push
push
mov
add
rolb
out
dec
data16
pop
or
mov
xor
mov
push
dec
bound
arpl
repnz
adc
adcl
daa
dec
dec
stc
jb
popaw
arpl
mov
dec
xor
inc
cs
int3
addl
clc
jmp
mov
pop
out
int3
mov
mov
xor
mov
xor
je
hlt
sbb
or
fs
cmp
adc
adc
mov
dec
sub
rolb
and
or
pop
enter
jb
cmp
sub
sub
inc
and
dec
xchg
sbb
adc
or
loop
mov
call
fcoms
pop
lds
lods
sbb
cmpsl
and
xor
nop
cltd
or
sbb
or
sub
je
enter
jb
cmp
or
enter
push
mov
add
je
nopl
mov
cmp
pop
jmp
adc
xor
cmpsb
or
and
sub
and
sbb
adc
push
push
sbb
ds
add
push
ds
enter
jne
xor
pop
pop
lret
aad
add
or
rorb
lea
rcrb
sbb
push
add
cli
fs
out
iret
adc
push
pop
nop
in
mov
hlt
pop
je
repnz
test
dec
pusha
mov
mov
or
push
add
or
adc
bound
adc
push
adc
mov
sbb
push
mov
push
push
push
adc
cmp
mov
jl
andnps
icebp
out
and
call
add
sbb
scas
nop
cli
cmp
icebp
push
or
fwait
or
ret
nop
adc
call
inc
mov
or
add
jmp
add
or
and
pop
sbb
pop
rcr
cmp
jne
loop
ret
sub
test
pop
pop
pop
adc
mov
xor
cltd
cmp
jb
ror
add
insb
call
int
bound
add
or
jnp
sub
bound
jp
xor
iret
pop
and
adc
cli
sub
jmp
sub
test
scas
and
stc
outsl
jl
sti
cmp
arpl
xchg
jmp
xchg
cmp
xor
nop
push
xchg
mov
enter
incb
jge
mov
jb
jbe
out
cwtl
xchg
add
daa
add
jns
xchg
rclb
test
je
adc
sbb
dec
adcb
mov
sbb
fwait
dec
das
stc
push
adcb
dec
mov
push
dec
add
popa
push
scas
push
mov
sub
bound
mov
and
adc
scas
inc
jo
in
movsb
dec
adc
in
jecxz
or
mov
scas
push
mov
sbb
add
out
cmp
dec
and
push
repz
jae
xchg
out
ja
leave
movb
jnp
jnp
std
std
je
push
push
jbe
imul
jne
test
movl
sub
cmpsl
pushaw
add
sbb
cmpl
sbb
or
adc
sbb
adc
sub
hlt
mov
ljmp
add
and
loop
inc
or
or
mov
cmp
pop
cmp
or
add
xchg
pcmpeqd
mov
std
push
mov
test
mov
subl
pop
mov
test
xor
or
mov
xchg
xor
dec
mov
adcb
jmp
jmp
push
clc
sub
push
inc
test
jbe
sti
mov
std
stos
sbb
addl
or
inc
dec
gs
inc
cmp
mov
sub
aas
xchg
data16
aam
xor
cld
or
and
call
ja
je
inc
aaa
dec
push
xor
leave
inc
stos
call
and
int3
mov
xchg
arpl
cmp
pop
movsl
and
push
call
jns
aaa
cmpsl
adc
test
cmp
je
dec
push
adc
cmc
add
jle
fisubrl
lods
xchg
push
sub
lret
andb
mov
or
sub
xchg
xor
jne
push
dec
mov
rorb
jmp
or
orb
pushw
pop
dec
pop
jmp
imul
cmp
dec
push
sbb
jp
and
cmp
test
adc
sub
test
dec
rclb
sub
stc
xor
lea
sbb
jecxz
add
add
orb
fidivs
pushl
xor
rorl
and
dec
dec
mov
test
je
mov
ret
mov
imul
movsl
adc
notb
repnz
adc
push
jnp
pop
mov
lea
in
mov
sbb
xor
mov
push
sub
mov
dec
shlb
jle
and
stos
sub
popa
adc
sahf
mov
and
test
int3
xchg
mov
mov
inc
push
xor
pusha
rolb
mov
or
daa
xchg
movb
mov
add
xchg
xchg
sub
mov
aaa
push
dec
iret
xchg
or
or
out
test
andb
mov
xor
xchg
cmp
aad
cmp
mov
daa
add
mov
dec
mov
je
xorl
inc
sbb
pop
add
ja
cwtl
jl
or
in
fistpl
loopne
cmp
or
adc
dec
or
jg
loopne
pop
add
rcrl
call
jmp
pop
and
sbbl
sub
hlt
fisttps
imul
sub
jmp
adc
in
shll
fisttpll
movhps
sbb
inc
in
test
mov
xchg
ljmp
sbb
mov
adc
movl
call
mov
or
inc
or
or
incl
rolb
loop
jecxz
or
add
push
sub
outsb
or
jl
xchg
lret
sub
adc
or
and
sub
inc
dec
fs
and
je
sub
fidivl
subb
mov
mov
jmp
testb
cli
and
or
cmp
pop
push
push
mov
repz
fs
xor
add
mov
pop
jmp
sti
fadds
and
add
addr16
pop
xor
inc
or
pop
andl
movsb
mov
xchg
dec
or
mov
sbb
adc
cmpsl
orb
call
aaa
sub
push
jg
aad
pushf
jl
cli
jmp
add
je
ret
or
adc
jns
inc
stos
adc
insb
pop
and
aad
movl
add
or
call
jl,pn
pop
push
ret
mov
or
dec
push
mov
push
or
mov
push
add
sub
jge
sbb
cmp
mov
cmp
adc
or
es
lahf
add
jmp
sar
inc
sub
pop
jg
sub
cmp
jl
xchg
push
inc
stos
adc
add
xor
mov
cmp
or
dec
fwait
inc
pop
jmp
sub
rorl
adc
pop
xchg
xor
sysenter
movlps
lea
and
cld
cld
call
dec
or
sub
push
jbe
rorl
push
add
cmp
xorl
sub
add
fisubs
repz
test
nop
pop
jae
shll
pop
xchg
xchg
int
jno
js
outsl
mull
andl
and
adc
shl
sahf
aam
icebp
adc
lea
dec
mov
sub
inc
add
pop
and
mov
bound
lea
mov
nop
pusha
xchg
adc
push
mov
cmp
push
lea
adcb
cwtl
jbe
mov
xchg
pushf
test
dec
mov
int3
stc
adc
or
test
mov
jnp
xchg
xlat
xor
mov
lods
inc
sub
jle
out
shr
arpl
jb
adc
aad
gs
sbb
jmp
cmp
or
rcl
sub
add
sub
lods
icebp
push
int3
and
out
rep
xor
cmc
mov
inc
or
and
xchg
mov
sub
mov
dec
cmp
or
leave
pop
insb
in
stos
push
data16
xchg
das
shlb
dec
push
push
mov
je
or
clc
and
jle
nop
mov
xchg
jp
leave
push
push
xor
ret
pop
ja
xchg
sti
ficoml
add
xchg
in
push
mov
and
sub
ret
scas
adc
pop
shlb
sahf
sub
pop
imul
jl
hlt
jmp
stc
lret
sub
popl
mov
insb
cmpl
mov
sbb
mov
adc
sbb
sub
or
xchg
lcall
jge
xor
inc
gs
ret
and
push
push
mov
test
fs
xchg
adc
ficoms
clc
or
pop
jb
pop
jmp
adc
mov
push
push
test
sub
inc
adc
sbb
xor
decl
mov
push
inc
add
pop
je
mov
outsb
mov
jne
imul
pop
in
inc
aas
and
dec
dec
sub
cmp
sbb
xchg
mov
scas
push
ja
loop
or
cmp
nop
jno
push
inc
sbb
mov
jle
lcall
fmull
add
and
cli
add
cld
or
mov
js
pop
or
push
or
and
adc
cmp
mov
imul
in
and
inc
mov
adc
pop
jle
adc
icebp
ret
movl
mov
adc
inc
sbb
out
dec
adc
fsubr
jmp
add
jne
orl
adc
cltd
sahf
mov
jge
nop
pop
enter
imul
popf
lahf
test
push
inc
fiadds
rcrb
test
add
dec
pop
movups
mov
mov
push
adc
inc
sti
mov
jl
lret
push
sbb
sub
adc
pop
xor
add
and
cmp
aad
xchg
fbld
ret
jmp
das
push
cmp
lds
push
scas
ds
loopne
in
sub
test
shll
dec
rorb
out
cmp
xor
loop
andps
and
fsub
jge
dec
test
or
sbb
jmp
cmpsl
lods
jl
movsb
lret
repnz
adc
jns
or
add
icebp
dec
mov
daa
ficoms
outsl
sbb
jmp
lcall
or
pushf
outsb
les
cmp
or
push
inc
add
xchg
call
sahf
nop
push
adc
inc
daa
stc
sub
jle
call
test
sbb
add
shlb
inc
out
nop
and
outsb
orb
leave
je
xchg
cwtl
add
push
mov
and
xor
sbb
add
nop
push
jmp
movsb
inc
xor
sub
add
or
out
and
lcall
push
mov
ret
inc
loope
and
inc
add
nop
mov
sbb
mov
pop
or
lcall
clc
repnz
sbb
cmpsl
aas
iret
int3
add
dec
jecxz
adc
sahf
adc
adc
push
test
cmp
dec
ja
sbb
ret
lea
pop
sub
adc
xchg
and
jmp
push
push
push
cltd
in
and
inc
pop
jne
lock
and
mov
and
xorps
rclb
or
or
je
nop
add
cmp
jg
sub
dec
inc
outsl
push
jl
faddp
cli
add
mov
inc
rep
push
jmp
mov
xor
mov
mov
cld
call
adc
add
nop
lods
hlt
pusha
cli
rorb
ret
xor
sbb
xchg
xlat
add
je
das
add
xchg
fmuls
cld
cmp
sbb
push
std
sbb
pushw
movl
push
ret
or
mov
pop
movsb
sbb
xor
jb
inc
jp
add
and
mov
loop
sub
orps
pop
adc
adc
jl
or
je
add
fwait
orw
inc
insb
ffreep
and
xchg
sub
pop
and
nop
fwait
orb
rclb
push
enter
xor
je
mov
jecxz
sar
or
xor
or
jmp
push
cmc
mov
test
jno
loop
shlb
and
jge
dec
add
call
mov
and
mov
xor
mov
add
das
or
arpl
loope
mov
data16
jne
sbb
lock
and
and
je
test
push
jmp
adc
dec
dec
sub
mov
mov
sbb
lret
loope
rorb
and
xlat
shl
call
jb
rorb
inc
test
add
ret
ljmp
add
cmp
jne
dec
mov
testb
jae
leave
sbb
add
or
dec
inc
loop
push
push
inc
add
pop
fadds
je
add
das
cmp
adc
std
mov
push
or
sbb
mov
adc
call
shr
loopne
mov
add
rcll
shr
jno
repnz
inc
dec
and
or
cmp
dec
sbb
push
stc
mov
mov
cmp
jne
dec
mov
dec
pop
and
add
popf
sub
test
mov
xor
data16
shll
or
stos
adc
stos
pop
adc
xor
imul
mov
cs
dec
daa
insb
cmp
xor
lea
sbb
mov
sub
inc
movsl
add
je
mov
push
ja
bound
sub
pop
or
js
pop
addps
push
add
sub
or
call
add
sub
pop
or
cmp
inc
and
xchg
fcomps
or
out
int
or
aam
push
jmp
call
jle
js
pop
sub
sbb
lds
pushf
mov
sub
sbb
and
jbe
or
adc
add
or
push
adc
push
or
mov
jge
mov
mov
lods
cld
test
stc
add
push
or
inc
mov
sbb
repz
xor
add
xor
sti
call
lock
ret
out
iret
xchg
flds
cmpb
ffreep
jecxz
add
fiaddl
loopne
ja
dec
mov
icebp
and
shl
inc
fadds
mov
shl
push
or
cwtl
push
clc
add
push
push
and
mov
pop
jmp
stos
dec
mov
mov
leave
xor
cmpsb
push
dec
pushf
add
jo
in
push
jl
je
mov
cmp
mov
cwtl
jle
pop
xchg
push
fldt
fsubrp
call
push
or
je
sbb
das
xor
bound
inc
xlat
sbb
push
nop
push
mov
inc
scas
inc
adc
or
xchg
xor
ret
xchg
sbb
inc
pop
stc
jmp
fstp
shrl
mov
out
das
int3
sbb
cmp
or
aas
loope
add
enter
cli
or
pushf
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
or
mov
inc
mov
aam
mov
bound
sub
test
hlt
and
mov
mov
test
add
leave
sbb
mov
lds
mov
call
or
inc
call
mov
and
vmovsd
js
inc
add
xlat
fadds
nop
add
dec
add
push
in
int3
into
sbb
ret
xchg
push
pop
fsts
enter
nop
mov
scas
push
add
hlt
daa
lret
into
jp
add
aas
cmpl
xlat
pop
mov
dec
addr16
leave
repnz
call
inc
xchg
mov
pop
test
lds
iret
lcall
dec
pop
js
shlb
push
stos
mov
cmp
jmp
xchg
test
stos
add
out
sub
inc
imul
divl
loopne
add
leave
cmp
call
and
movsl
add
push
add
das
push
sbb
es
jecxz
repnz
test
nop
jo
sbb
add
stos
clc
scas
adc
lds
pushf
mov
int
mov
repnz
aam
imul
loope
dec
jp
iret
inc
bound
add
push
cmpsb
scas
push
sbb
mov
addl
xchg
cmp
add
in
cmp
add
mov
movsl
mov
popa
out
pushf
sbb
pop
mov
fildl
addr16
repz
mov
addb
fwait
xchg
and
les
lock
xor
ret
push
push
loope
xor
push
mov
clc
pop
jne
clc
add
loope
mov
add
cmp
mov
pop
inc
dec
nop
mov
adc
mov
shr
mov
jae
ss
push
push
or
or
inc
ja
testl
xor
xor
pusha
or
xchg
ret
ja
push
or
push
mov
repnz
test
xor
push
out
sub
in
push
mov
jp
pop
mov
lods
cs
aas
or
ret
dec
mov
dec
or
push
dec
inc
push
push
inc
push
add
inc
outsl
jb
popa
outsb
js
cmp
jo
imul
inc
push
push
pop
dec
popa
jae
push
inc
insb
jne
or
daa
jecxz
xor
jns
mov
enter
loopne
aam
add
mov
inc
rep
xor
adc
rcrb
je
mov
dec
cld
jne
cmpsl
cmpl
out
clc
add
scas
or
inc
mov
sub
inc
fcoml
imul
call
pop
nopl
rcrb
and
arpl
jns
add
cmp
test
or
xor
or
pslld
mov
or
lret
push
sbb
jo
jecxz
mov
fwait
or
push
cld
cmp
mov
fdivs
rclb
pop
and
adc
imul
add
daa
pop
faddl
jmp
cmp
jle
repnz
add
jae
cmp
ds
add
mov
sub
sbb
fnstsw
adc
popf
xor
scas
push
ss
jp
sbb
call
fsubs
jmp
xchg
inc
stc
inc
lahf
pushl
mov
cmpxchg
push
add
popa
aaa
add
add
addb
inc
sbb
leave
jns
movsb
jl
mov
lods
pop
sbb
mov
movsl
jmp
aam
inc
daa
dec
je,pt
xchg
inc
adc
add
add
mov
testb
call
lea
ret
inc
push
addr16
sbb
stos
insb
xor
xchg
ret
cltd
pop
inc
mov
dec
push
push
mov
inc
sbbl
mov
and
sti
jl
xor
xor
jb
fnsave
hlt
mov
aas
sbb
lea
dec
adc
leave
add
jl
addb
sub
sbb
js
add
mov
mov
cmp
ret
push
mov
add
or
nop
push
xchg
loope
inc
data16
sub
adc
add
repnz
adc
pop
and
dec
pop
pop
shrb
ret
je
cld
jbe
hlt
push
nop
int3
mov
sub
add
pop
shll
fsubr
dec
sbb
sbb
lock
jne
pop
sbb
adc
test
mov
mov
adc
xor
or
add
rol
push
fwait
push
add
add
fnstsw
mov
movsb
pushf
leave
mov
dec
cmp
adc
lock
cmp
or
dec
jne
and
jmp
fstl
mov
add
xor
inc
jecxz
out
or
inc
pop
add
xor
mov
sbb
push
insb
adc
mov
fisubs
and
jo
or
push
mov
push
inc
aas
enter
popl
xor
jl
sub
mov
je
pop
jmp
push
ja
aas
call
in
dec
mov
push
push
push
push
pusha
jb
dec
add
hlt
xor
pusha
sub
fs
mov
mov
inc
imul
xchg
xor
pusha
pop
or
sbb
jmp
mov
or
mov
push
mov
pop
pop
lods
fisttpll
sub
cwtl
sbbl
or
cld
mov
push
pop
adcb
xor
cmpb
adc
sub
sbb
in
push
ljmp
adc
leave
addl
push
or
push
push
cmp
or
pop
push
loopne
sbb
or
sub
ret
push
xchg
adc
das
add
mov
cmpb
xor
ss
jne
pop
movsbl
clc
clc
lahf
test
mov
mov
imul
mov
pop
pop
lds
jno
adc
and
test
sub
adc
mov
ror
hlt
or
jae
mov
adc
add
cmpl
push
add
pop
call
adc
popa
add
push
jmp
and
dec
mov
shrl
cmpl
push
je
call
fwait
xor
xorl
inc
ja
and
aas
mov
cmp
fidivrs
mov
lret
xor
call
push
cmp
xor
out
pop
cmp
loopne
add
add
xor
sub
sub
repz
mov
fstpl
push
mov
sub
int3
test
outsl
or
stc
cmp
inc
mov
adc
ja
hlt
sub
inc
jecxz
lods
push
icebp
or
mov
jmp
cs
xor
outsl
test
inc
or
push
add
mov
scas
ja
xchg
sub
or
add
add
dec
lds
out
xchg
mov
push
add
cmp
dec
cltd
jne
fs
push
cmp
xchg
ret
sbb
call
pop
mov
jg
or
jne
push
mov
aam
and
or
inc
pushl
xchg
push
jb
xchg
nop
lahf
mov
mov
insl
nop
xchg
push
and
pop
mov
test
jecxz
or
xchg
add
mov
and
or
movl
fisttps
call
mov
cmp
xchg
xchg
clc
fmul
sbb
jb
add
push
push
push
push
fimuls
icebp
pop
dec
cmp
iret
push
ret
shll
mov
mov
xchg
mov
pusha
add
dec
cld
push
popf
cmp
sarb
pop
adc
mov
jnp
lea
pop
push
fs
je
inc
mov
adc
call
ret
xor
popa
pop
sub
sbb
add
ret
lahf
fwait
inc
scas
dec
xor
aaa
cmp
sub
pop
repnz
sub
mov
mov
cmp
pusha
sbb
jno
inc
aas
sub
mov
push
sub
cmp
inc
popa
adc
and
cmp
std
inc
comiss
push
sub
fisttpll
mov
mov
ds
and
iret
xor
and
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
loop
cld
or
mov
push
or
lds
pop
bound
and
mov
lea
jno
dec
cmp
lret
dec
test
sub
cld
int3
rcll
nop
or
je
pushf
orl
pop
mov
test
cld
mov
add
dec
leave
or
fldenv
push
pop
jmp
dec
add
inc
hlt
andb
in
xor
fldt
mov
and
cwtl
sbb
cmp
sahf
xchg
cmp
jp
or
cmp
xor
and
subl
cs
dec
pop
push
or
jo
push
mov
test
jle
ja
ret
xor
inc
dec
lcall
xor
jmp
enter
pop
xor
add
ss
ret
nop
movsb
pusha
sub
xchg
xor
jg
test
cmp
jle
sbb
sbb
shrl
in
movsl
pusha
jno
mov
jge
mov
movsl
popl
push
and
inc
push
mov
push
dec
sub
or
das
jge
xorl
mov
mov
mov
repnz
and
stc
mov
pop
and
adc
pop
cmp
jge
jmp
mov
xor
push
mov
dec
dec
aam
adc
cmp
sbb
push
les
pop
add
cmp
dec
orps
aam
xchg
mov
or
mov
sbb
pushl
inc
push
push
add
enter
sub
or
in
adc
pop
pop
and
repz
or
sub
push
jecxz
sbb
inc
push
inc
out
int3
mov
cmp
fdivl
mov
loop
jo
cmpsl
mov
sbb
sub
mov
cltd
idiv
add
aam
add
mov
and
mov
dec
jo
in
adc
mov
loopne
mov
cmp
fsts
call
inc
out
mov
mov
maskmovq
sbb
sbb
outsl
or
pushl
push
and
aaa
xchg
lds
pop
push
js
dec
in
push
push
adcw
adc
push
sub
std
rorl
cmp
fcompl
push
sub
daa
mov
or
jecxz
push
sbb
shlb
push
cltd
adc
xchg
dec
mov
or
push
mov
or
jnp
jbe
push
cmpl
and
rol
imul
mov
jne
cmpsb
push
add
jnp
adc
sub
dec
ljmp
popa
insl
add
aas
xchg
enter
es
or
insb
sub
das
jbe
cwtl
mov
adc
push
push
mov
cmp
add
or
push
inc
mov
movsl
out
das
and
jne
push
je
xchg
mov
cmp
popf
and
or
add
sti
xor
push
cltd
loopne
dec
iret
call
push
mov
mov
fsts
or
push
or
dec
xor
adc
mov
pop
stc
fisubrs
pop
push
adc
mov
inc
or
sub
push
fstps
or
mov
or
pop
mov
iret
or
push
push
cmp
mov
cmp
sub
sbb
push
or
push
mov
push
push
push
call
xchg
sbb
mov
adc
jbe
dec
orb
jl
xor
pop
push
lea
dec
jg
ljmp
adc
sbb
add
sub
pmaxub
ficoml
int3
push
and
inc
das
jg
add
cld
call
push
pop
sbb
aam
mov
js
push
xchg
dec
enter
mov
cld
mov
push
sub
adc
ja
xchg
or
add
mov
adcl
jmp
xor
jecxz
inc
int
or
clc
cwtl
stc
cmc
lock
lock
popf
sti
fdivrs
cmp
lods
xchg
xchg
adc
inc
xchg
je
push
adc
pop
adc
js
out
push
popa
fsts
les
sbb
fstps
test
fs
add
decl
cltd
jge
push
dec
push
push
mov
mov
divl
lahf
inc
aaa
jl
cmp
call
insb
sbb
pop
sar
dec
cmp
xor
xor
sti
dec
adc
and
nop
scas
adc
xor
movsb
subl
push
and
or
je
or
call
sbb
inc
jns
mov
pop
sub
jmp
xor
sub
insb
and
pop
pop
rorl
push
mov
in
add
pop
cmp
and
or
cmp
mov
inc
dec
test
stos
push
repnz
mov
rcrl
add
aam
sbb
sub
add
sub
add
test
sar
sbb
daa
sbb
push
adc
fnstcw
or
xchg
mov
pop
add
add
inc
cld
repnz
aas
incb
std
dec
jl
les
popa
add
cmp
inc
lret
xor
adcl
adc
inc
inc
dec
pop
lods
push
and
sub
xor
mov
adc
mov
cld
pop
or
adc
jmp
arpl
sbb
inc
add
fmuls
sub
arpl
add
sbb
pop
nop
aas
jae
dec
clc
call
lret
or
mov
movsl
nop
insb
les
xchg
adc
cli
je
cmp
sub
jle
inc
cld
dec
jmp
test
push
or
xchg
cmp
jne
cwtl
sub
in
int
pop
call
cld
pop
mov
aaa
add
dec
jmp
xchg
insb
sahf
push
mov
leave
repnz
add
dec
mov
jne
dec
xchg
js
or
sub
xchg
dec
xor
xchg
pop
lea
xchg
jmp
cmpsl
xor
mov
das
inc
push
ljmp
mov
dec
jp
and
pop
and
or
adc
sub
push
lret
jae
fdivs
and
sbb
xlat
push
jmp
push
inc
aam
push
clc
inc
xchg
inc
ret
les
outsb
add
sub
gs
push
fdivs
push
jg
mov
adc
stos
imul
jae
and
inc
adc
mov
enter
cmp
xor
sub
add
dec
jl
cmp
jge
and
push
sbb
pop
and
int
hlt
xor
call
out
adc
or
les
mov
adc
mov
add
dec
jl
xor
add
and
icebp
xchg
data16
stc
add
pop
movsb
push
xchg
push
dec
push
or
cli
dec
loopne
aaa
xchg
xchg
push
cltd
push
nop
dec
mov
push
xchg
add
dec
jge
lea
xlat
adc
imul
jge
ljmp
ret
addb
adc
test
cmp
add
jmp
loop
fcmovbe
sbb
inc
lahf
xor
push
mov
sub
orb
mov
inc
lds
nop
leave
adc
dec
out
inc
mov
bound
jge
clc
mov
loop
rcrb
jle
inc
je
scas
and
sbb
mov
loopne
pushf
sbb
or
loopne
jmp
nop
js
dec
mov
mov
cmp
cs
xchg
mov
sbb
jle
mov
xor
mov
dec
lahf
test
sub
addr16
stos
push
sub
imul
rcrl
mov
and
daa
pop
outsb
pop
leave
and
cmp
pop
sub
sub
push
sub
push
cmp
xchg
xchg
mov
mov
ret
arpl
dec
pop
jae
jno
jmp
dec
inc
loop
cmp
pop
and
and
adc
add
and
inc
xchg
inc
js
ss
mov
sub
dec
cmc
popf
pop
call
incb
dec
add
xchg
mov
add
les
jp
xchg
icebp
ja
pinsrw
cmp
jl
add
sub
fsin
dec
mov
jle
push
mov
add
fdivrs
add
dec
pop
xchg
sbb
add
ret
jge
push
js
mov
or
pop
sbb
sub
fmuls
mov
mov
subb
in
and
lds
mov
adc
xchg
into
hlt
out
fbld
lds
leave
xchg
xlat
and
and
xor
jl
push
xor
lcall
mov
lea
jns
and
fisubrl
rcrb
sbb
push
push
into
bound
xor
pop
pop
mov
dec
and
add
dec
jne
repnz
lret
icebp
mov
pop
cmp
inc
pop
pop
jp
inc
js
je
xchg
push
ret
xor
sbb
icebp
cmp
pop
fs
and
push
adc
pop
sbb
or
jmp
pop
jne
mov
mov
loope
and
or
fucomi
pop
dec
and
ret
jmp
mov
or
jecxz
clc
dec
and
add
scas
pop
or
psubw
cmp
mov
dec
push
push
dec
call
dec
add
les
push
jl
cmp
lea
hlt
popa
dec
fcmovne
xchg
xchg
mov
mov
lahf
xchg
test
in
stos
scas
and
cmp
in
cmpsb
cltd
mov
dec
inc
std
cwtl
adcl
dec
jo
pushf
mov
xlat
xor
xor
or
ljmp
mov
inc
xchg
jne
adc
je
clc
hlt
fisubs
fstps
fdivs
xchg
push
dec
pop
sbb
jle
add
and
mov
sub
mov
orl
xor
leave
mov
sar
int3
testl
sub
popa
adcl
fsubl
cmpsl
pop
test
ljmp
mov
nop
ret
inc
hlt
lods
mov
loopne
stos
adc
cmp
popf
xor
arpl
inc
xchg
sub
mov
cmpb
in
les
lods
stc
and
push
mov
clc
push
mov
dec
fdivrl
jl
push
dec
pop
sbb
into
adc
sub
addr16
mov
jo
mov
xor
pop
xor
cmp
je
call
or
and
or
clc
dec
clc
psubw
loop
shll
push
shrb
lcall
cmc
nop
push
or
or
adc
out
jmp
push
jmp
xchg
push
cmp
or
fadds
pop
aam
cmp
cmpsb
sbb
filds
adc
mov
aaa
movsl
push
lock
or
jmp
push
inc
test
adc
mov
call
repnz
js
cmp
in
loopne
push
dec
out
xchg
in
and
pop
adc
pop
sub
xor
mov
jmp
stc
add
jg
or
fucomip
cmp
sti
or
sbb
ja
xor
sub
and
repz
pop
inc
adc
push
das
inc
inc
test
inc
popa
jmp
inc
inc
sub
sbb
push
cmp
adc
adc
jmp
or
mov
mov
inc
xchg
adc
sbb
movsb
divl
add
outsl
imul
push
add
add
sarl
ret
in
fwait
mov
stos
mov
or
or
cmp
aam
das
xor
jo
push
xor
mov
adc
push
xchg
es
daa
push
popa
clc
xor
mov
xchg
mov
and
dec
cmp
adc
inc
nop
adc
stc
hlt
inc
sbb
or
nop
and
inc
sbbb
cmp
mov
add
js
inc
arpl
dec
pop
pop
inc
push
lea
inc
or
addl
icebp
aam
fwait
dec
adc
test
lret
ljmp
nop
mov
shrb
adc
maskmovq
divl
popa
test
and
roll
push
scas
sub
jmp
dec
inc
cmp
jmp
mov
or
sub
sub
dec
dec
cltd
adc
add
pushl
inc
add
es
inc
cmp
sar
dec
stc
push
lds
xor
cmp
je
cmp
sub
sub
pop
push
inc
adc
bound
ljmp
jns
adc
in
push
cwtl
dec
inc
mov
xchg
lahf
inc
enter
pop
movsb
and
movsl
into
sub
push
or
cmp
dec
cmc
push
add
mov
push
jbe
mov
rcr
into
push
cmpsl
xchg
leave
pop
fldenv
xchg
inc
fmul
ja
cs
leave
cltd
les
ja
pushf
hlt
inc
pop
inc
and
adc
dec
xor
adc
jge
mov
jns
pop
fs
or
pop
dec
and
lret
ret
dec
push
movsl
dec
adc
imulb
dec
add
or
jne
rcl
popa
lock
rcrl
adc
neg
xchg
xchg
sbb
iret
add
sbb
inc
loop
xlat
int
xchg
jmp
jb
sbb
shl
popf
rcrb
out
jb
and
sub
sbb
inc
add
ret
mov
cmp
outsl
out
repz
jle
cmp
nop
jl
pop
mov
enter
push
mov
jle
xchg
std
repnz
lret
or
add
sub
inc
lock
or
push
or
sub
outsb
dec
sbbl
dec
push
orl
mov
or
add
mov
and
push
call
pop
cmc
sbb
xor
pop
fimull
pop
fldenv
lret
sbb
adc
jmp
pusha
ret
or
enter
push
adc
and
push
sbb
or
clc
and
out
xor
jno
or
lcall
jmp
incb
andl
jmp
jg
mov
cltd
sbb
js
adc
movsb
adc
mov
imul
or
cs
add
dec
and
push
out
or
shll
xchg
dec
rolb
jmp
shll
scas
rcll
and
dec
loop
fsts
test
jg
clc
out
or
adc
xor
shlb
add
adc
rorb
shr
ljmp
add
or
fcom
pop
ljmp
loop
xchg
cmpsl
mov
dec
mov
cmp
xor
gs
fs
mov
push
test
and
in
lds
pop
xchg
push
sbb
jg
or
pop
mov
enter
cmp
or
scas
jmp
sbb
loopne
mov
sbb
xchg
mov
adc
mov
lcall
xor
add
insl
call
mov
loope
cmp
loope
push
dec
pop
or
or
jne
xor
jge
and
mov
das
add
xchg
pop
or
push
iret
sbbl
stc
subl
or
adc
push
cli
in
fmull
or
inc
sub
pop
mov
dec
in
push
das
ror
adc
lods
popa
into
dec
mov
pop
test
sub
pusha
xchg
movl
xchg
sub
lock
js
xchg
in
fiaddl
ret
cmpsb
push
add
cs
dec
dec
nop
cmp
jl
inc
mov
divl
pop
ret
ret
scas
mov
xchg
dec
jne
lret
and
sbb
inc
push
andl
pop
loop
and
lock
jne
fisttpll
add
and
adc
push
test
fs
pop
testb
mov
adc
inc
push
fwait
sbb
leave
adc
adc
adc
push
push
push
cmp
lret
enter
pop
les
test
dec
inc
jl
in
sbb
push
jmp
popa
jns
add
xchg
push
movsl
xchg
push
rol
inc
sbb
call
jo
les
push
test
jnp
jne
sub
add
mov
or
mov
xchg
and
adc
fidivs
mov
js
dec
pop
mov
dec
adc
scas
sbb
or
or
push
sub
out
outsl
adc
into
jecxz
jmp
pop
inc
dec
mov
adc
pop
jne
test
test
and
or
pop
pusha
icebp
cmpsl
push
mov
push
pop
xor
mov
and
das
lods
lods
hlt
mov
ja
sarl
or
lahf
adc
test
or
cmc
dec
cwtl
cli
cmpb
loop
or
add
adc
call
cmpb
jge
and
adc
mov
mov
jbe
sub
sub
lea
push
pop
push
mov
sub
inc
rolb
roll
cmp
lahf
mov
push
push
xor
sbb
and
cmpsb
in
andl
adc
ds
or
push
add
ret
orb
movb
movntps
ret
dec
xchg
xchg
dec
fstpt
leave
inc
push
add
test
cmpsl
push
daa
movsb
xchg
ficomps
gs
pusha
insb
xor
cs
fs
dec
outsl
outsb
addr16
popa
fsubrl
call
adc
mov
mov
jecxz
outsl
push
int3
cmp
ss
out
and
xor
sbb
mov
inc
daa
or
fxch
push
and
in
cmp
lea
push
cmp
mov
adc
call
adc
nop
xchg
or
cs
mov
fstps
mov
sub
stos
inc
and
push
sub
push
dec
sub
and
and
lds
popa
xor
add
add
mov
and
testb
mov
arpl
xor
fists
xchg
and
add
cmp
push
inc
adc
fdivs
or
mov
andl
movaps
xchg
add
pop
push
mov
mov
jns
je
sbb
shl
push
mov
pop
or
or
jge
es
push
int3
sbb
outsl
data16
popa
jb
aas
lret
push
aas
arpl
jae
xor
lods
aas
cltd
push
mov
dec
or
cmp
mov
jp
mov
mov
and
lret
incb
jo,pt
and
leave
pop
jns
cs
mov
orl
data16
icebp
incb
sub
add
je
sti
xor
xchg
pop
pop
adc
mov
inc
pop
cmp
arpl
mov
xor
xchg
inc
mov
cs
push
cld
ss
jae
push
mov
push
iret
xchg
dec
or
pop
test
call
out
lcall
cmp
decl
mov
sub
daa
jne
adc
sub
ljmp
xor
cld
add
lret
sub
rcrl
or
pusha
out
xlat
inc
lods
in
mov
test
bound
inc
adc
xchg
fidivs
ss
mov
ret
setae
inc
dec
add
aaa
pop
call
divl
and
ret
clc
nop
or
pop
or
subb
jbe
xchg
and
imul
stos
cmp
and
inc
jo
sbb
or
sti
push
into
call
lea
stc
pop
and
jp
ja
repnz
lahf
xchg
movl
movsb
sbb
cmp
dec
inc
cmp
push
ja
mov
inc
jmp
sub
xor
pop
cld
ja
add
shr
or
adc
sbb
or
sbb
out
out
cmpsb
loop
inc
lret
add
fisubs
adc
es
shlb
inc
add
add
push
mov
jbe
push
xor
inc
and
scas
test
add
cmp
ret
inc
hlt
inc
fdiv
test
xor
push
fnstsw
mov
add
jmp
adc
fiaddl
and
ss
test
inc
adc
and
mov
inc
testb
xorb
or
sbb
cmp
loope
and
je
aas
mov
add
in
aaa
sti
push
jne
inc
mov
int
popf
in
roll
push
or
mov
mov
int3
dec
dec
jbe
pop
mov
adcl
adc
inc
popf
jae
or
mov
or
cmp
xchg
inc
and
pop
sub
ret
xor
xor
adc
addr16
out
push
jne
test
push
jb
in
and
je
cwtl
nop
push
push
mov
or
fbld
jbe
dec
or
sub
xchg
adc
pop
push
lods
js
lea
or
mov
adc
inc
and
push
pop
pop
in
push
cld
mov
or
cmp
jp
rclb
mov
in
ret
adc
pop
pop
mov
pop
mov
sub
push
popf
test
jb,pn
rorb
adc
movsb
xchg
cmp
pop
xchg
add
roll
and
cmp
dec
test
mov
and
cmp
rorl
imul
mov
push
xchg
fisubrl
cld
imul
xchg
add
sub
int
std
popf
pop
add
cmp
dec
pop
out
iret
push
mov
das
out
push
or
push
jl
das
fbstp
inc
aam
imul
sarb
sub
pop
lea
adc
mov
mov
push
aaa
adcb
lods
fcomi
aam
mov
pop
je
xchg
or
cmp
jmp
or
add
and
push
and
mov
mov
cmpsl
add
inc
sti
repnz
inc
sub
dec
clc
and
rolb
mov
inc
add
in
adc
cmp
out
adc
sbb
js
cmc
ljmp
call
popf
nop
push
rclb
clc
in
mov
push
mov
shlb
rorl
call
mov
pop
adc
shrl
aas
inc
add
dec
call
add
fs
sarb
es
int3
push
jmp
adc
or
aam
mov
lods
out
mov
and
pop
xchg
pusha
arpl
or
or
lea
cmpl
ret
adc
add
jmp
and
dec
adc
mov
sarb
adc
dec
bound
pop
arpl
mov
and
or
push
sub
insl
mov
aam
xlat
test
push
lahf
sbb
adcl
mov
mov
leave
jne
jmp
popa
add
ret
pop
jg
xchg
add
mov
fcmovne
enter
jg
test
or
or
add
push
push
bound
jmp
aaa
or
xchg
cmpsl
inc
fsubr
or
adc
sbbl
lds
xlat
xor
lea
adc
dec
xchg
mov
sbb
add
cmpsl
xor
push
push
sub
adc
ret
inc
aas
push
dec
dec
mov
dec
mov
mov
cmp
in
aas
dec
jecxz
or
imul
enter
cmpsl
jl
cmp
dec
mov
sti
lods
push
cmp
je
mov
and
cmp
pop
pop
fstl
mov
js
push
sub
xor
add
cs
add
pop
and
or
push
gs
jge
push
scas
xchg
push
or
adc
mov
push
inc
push
inc
sti
in
jae
jbe
cmp
je
dec
divl
push
popa
mov
jbe
aas
inc
dec
cmp
or
push
lds
sbb
push
xorb
sub
or
xor
jg
cmp
cmp
pop
js
test
pop
inc
xchg
jg
ja
nop
adc
sbbb
ljmp
push
inc
cltd
out
push
je
mov
cli
sahf
or
add
cld
mov
fnsave
or
mov
dec
test
sbb
or
and
enter
jb
cmp
inc
mov
and
sub
and
inc
sbb
adc
inc
sbb
inc
scas
test
out
and
call
nop
or
sub
les
xor
dec
or
mov
and
xchg
aam
int3
in
jb
cmp
test
mov
in
jb
cmp
mov
and
enter
jb
cmp
xor
inc
xor
sub
adc
or
add
cld
inc
mov
enter
jb
cmp
sbb
mov
sbb
mov
and
in
jb
cmp
and
enter
lahf
cld
mov
cltd
dec
push
inc
movsb
jb
cmp
test
in
dec
mov
inc
xor
sub
enter
les
in
hlt
cltd
or
sbb
mov
and
xchg
int3
enter
jb
cmp
and
in
jb
cmp
push
pop
xchg
push
enter
jb
cmp
sbb
mov
and
xchg
adc
or
adc
clc
lahf
lock
sbb
mov
and
xchg
enter
mov
jb
cmp
mov
adcb
jb
cmp
push
mov
and
enter
jb
cmp
adc
inc
or
add
cld
sahf
outsl
adc
xor
loopne
or
movsb
xchg
pushf
enter
fisttps
repnz
cmp
jmp
hlt
xchg
in
enter
jb
cmp
sbb
mov
clc
push
lahf
stc
mov
adc
mov
or
and
jo
mov
sub
adc
cmp
push
mov
and
fiadds
mov
inc
lods
and
mov
jnp
icebp
push
pop
and
dec
enter
jg
sbb
pop
in
jb
cmp
push
dec
enter
jb
cmp
imul
fsubrp
push
fists
push
jb
in
jle
or
sbb
mov
and
xchg
loopne
fsub
shlb
cmp
jb
cmp
cmp
cmp
and
mov
cmp
mov
and
enter
or
or
sahf
xor
sbb
cltd
or
sbb
mov
sbb
mov
and
in
jb
cmp
jo
mov
push
in
or
ret
xor
mov
shlb
push
adc
jecxz
and
mov
hlt
inc
pop
inc
repz
nop
or
aad
xchg
dec
pop
adc
mov
or
sub
push
enter
push
cli
das
mov
sbb
mov
cmp
stc
push
popf
pusha
adc
mov
or
jmp
out
negb
push
mov
loope
sti
aas
push
inc
insl
adc
mov
test
inc
or
dec
loopne
in
adc
mov
orb
call
add
shrl
and
adc
mov
and
dec
sub
call
push
daa
jbe
inc
ret
nop
mov
in
push
push
scas
clc
and
jecxz,pt
mov
jl
inc
push
mov
or
cltd
bound
or
jecxz
and
cld
js
std
lods
psubb
clc
pop
scas
or
pop
in
sbb
iret
hlt
int3
add
sbb
xor
scas
and
aas
pushf
and
pop
enter
ja
movl
popa
addr16
jns
push
push
push
dec
inc
cs
adc
daa
outsl
bound
xchg
dec
dec
mov
cld
stos
adc
push
pusha
inc
dec
push
jge
shrl
xor
dec
inc
es
pop
dec
dec
inc
stos
sbb
insb
dec
and
pushf
inc
jnp
jl
jl
xchg
lock
push
or
icebp
xchg
repnz
jb
cmp
sbb
mov
and
xchg
cli
enter
jb
cmp
sbb
loope
inc
loop
jecxz
in
in
out
out
call
jmp
gs
or
cmp
sbb
mov
and
xchg
ror
shl
shll
cmp
sbb
fmuls
xchg
fcmovne
fsub
fnsave
cmp
sbb
mov
and
xchg
ret
enter
jb
cmp
sbb
mov
and
xchg
lret
enter
jb
cmp
sbb
mov
and
in
jb
cmp
mov
enter
jb
cmp
mov
enter
jb
cmp
test
enter
jb
sub
adc
mov
inc
or
lds
jg
fwait
or
test
jp
lret
pop
add
adc
inc
js
gs
add
jg
fisubrs
mov
jle
addb
inc
bound
jb
nop
loopne
testb
mov
pusha
push
inc
dec
adc
popa
jo
mov
cmp
scas
pop
inc
cmp
xor
sbb
jne
ret
gs
test
scas
pop
fs
jne
or
or
outsb
mov
mov
lock
or
xlat
or
sub
cmpl
les
sub
pusha
fldcw
adc
cmp
orb
inc
inc
imul
outsl
nop
push
pop
pop
mov
sbb
popa
outsb
addr16
scas
pop
fs
leave
or
or
mov
outsl
ja
and
popf
fs
dec
mov
nop
fs
in
mov
rolb
sbb
fs
jo
mov
fisubs
shlb
adc
sbb
push
inc
insb
lods
jnp
and
or
push
fs
adc
les
punpcklbw
xchg
test
test
lcall
pop
inc
ljmp
pop
mov
sbb
outsl
sarb
fdivrs
int3
ljmp
jae
push
mov
insb
popa
xchg
mov
mov
inc
iret
sub
push
jb
jns
mov
scas
pop
fs
cmp
push
inc
stos
add
arpl
adcl
and
je
sbb
inc
xchg
aam
enter
js
enter
testb
push
enter
and
test
xchg
outsl
lea
mov
es
fsts
jb
jae
test
pop
idivb
inc
pop
and
pop
in
ret
cmpsb
push
lea
mov
inc
xchg
daa
data16
orl
and
adc
test
mov
inc
sbb
xchg
jo
xor
adc
push
inc
int
insl
stos
push
push
gs
outsb
xor
inc
or
sbb
or
sbb
outsb
and
cltd
adc
push
cs
and
icebp
inc
mov
mov
add
sub
das
fsubl
int3
int3
sub
adc
call
push
inc
outsl
pushf
mov
inc
adc
fnstcw
adc
jb
popa
fs
sbb
jne
faddl
int3
add
jmp
or
jmp
popf
inc
rcll
adc
push
mov
int3
push
roll
xchg
mov
mov
adc
push
mov
adc
sbb
add
jno
cmp
sub
les
push
or
loopne
add
mov
int3
pop
adc
pusha
in
enter
or
insb
add
pop
imul
loop
push
outsb
std
adc
push
jbe
jp
lret
out
dec
lods
imul
shr
div
xchg
ret
into
mov
add
dec
adc
test
std
cld
pop
lret
mov
mov
outsl
outsb
repnz
ret
xchg
icebp
inc
dec
adc
and
stos
dec
hlt
je
jnp
aad
dec
aad
mov
stos
lds
mov
push
mov
lcall
cmpsl
aaa
inc
dec
adc
ret
mov
rolb
lds
jne
fs
sub
inc
nop
pop
and
push
inc
lcall
mov
ja
push
faddl
jbe
in
shll
je
movzbl
cmp
push
dec
test
xor
xchg
loop
mov
cmpsl
ss
pop
push
in
add
inc
push
scas
push
pusha
sub
int
pop
xchg
lea
mov
sbb
je
loop
cltd
push
xlat
out
inc
je
ret
mov
popf
out
orb
enter
daa
fildl
push
and
repnz
xor
nop
hlt
or
push
fcoms
xchg
shlb
and
jmp
sti
sub
ret
out
and
pop
jbe
xor
fbstp
cmp
add
sub
inc
repz
dec
ds
push
inc
fdivl
mov
test
sub
out
dec
iret
mov
or
sbb
cmp
xchg
or
or
jg
pop
lahf
lds
stos
push
pushf
adc
popa
cmpsb
sub
das
sub
inc
mov
sti
ds
jg
mov
lods
leave
lock
iret
push
push
into
js
in
daa
repnz
cmpsl
js
rorl
push
push
out
add
jbe
arpl
or
idiv
jmp
popa
jns
dec
xchg
push
andb
aad
xchg
fistl
dec
insb
adc
xor
test
add
cmc
push
adc
dec
mov
adc
cmp
scas
ljmp
mov
inc
jl
push
pop
andb
and
rcll
or
sbb
dec
sub
adc
add
into
sub
inc
xchg
jo
icebp
mov
ds
je
aaa
pop
js
push
bound
cmp
sbb
sub
les
inc
jne
lea
aad
and
imul
mov
mov
and
mov
movsl
mov
bound
pop
mov
jle
je
mov
mov
sub
cmp
cmp
jbe
jne
pop
or
aas
inc
test
adc
and
push
testb
sbb
add
mov
xorl
rol
fdivs
lret
xor
mov
adc
jno
add
outsl
xchg
sbb
jmp
fistps
adc
mov
sbb
movsb
xchg
outsb
insb
adc
jmp
popl
out
inc
or
lea
adc
cmp
xchg
fstps
adc
sub
fwait
xlat
sbb
mov
outsl
pop
data16
enter
inc
lods
mov
test
cmpsb
xchg
xchg
lods
aas
xchg
aaa
nop
cmp
enter
add
sub
jb
cmpsl
jg
adc
add
dec
sbb
add
mov
notrack
fldenv
mov
bound
and
incb
jae
inc
dec
jne
mov
mov
mov
or
hlt
pop
or
sarb
fsubr
mov
sub
ret
fisttpl
add
div
cmp
xchg
cmp
adc
pop
mov
push
jne
push
pop
pop
sub
inc
lret
add
cmp
jmp
add
dec
jne
fs
cltd
sbb
xchg
mov
add
add
push
and
movsb
sub
push
lods
add
sbb
dec
add
in
shr
popa
aas
push
ja
mov
pushf
jl
ss
push
mov
cmp
adc
leave
push
lds
repnz
sbb
inc
lea
imul
push
pop
xorb
cltd
orb
and
push
imull
xchg
call
data16
cwtl
inc
sahf
push
xchg
or
add
cmp
data16
or
into
jge
sub
mov
and
sbb
xchg
jg
pop
add
and
pusha
pop
fadd
faddp
stos
test
hlt
jecxz
repz
outsb
fnsave
fdivl
add
mov
jmp
pop
loope
push
add
fcom
fstsw
sahf
jae
jmp
jl
add
ffree
cmp
cmp
adc
pop
incl
and
push
xchg
add
sub
push
inc
xor
xchg
mov
movb
sub
loopne
pushf
leave
sbb
xor
movb
adc
fsub
loope
and
dec
int3
and
or
sarl
dec
cmpsb
roll
push
andb
call
shlb
pop
mov
nop
nop
sub
sub
push
mov
in
mov
enter
sub
stc
jnp
mov
pop
lods
jns
pop
lock
sub
or
test
mov
iret
jg
inc
bound
mov
fidivl
aaa
dec
xor
fcmovnb
cmp
mov
pop
mov
mov
and
dec
jb
push
add
popa
mov
push
mov
adc
sub
add
adc
call
add
xchg
fstpt
nop
cmp
inc
mov
nop
inc
shrb
mov
and
push
ljmp
movb
xchg
repnz
jl
inc
mov
adc
xchg
cmp
test
xchg
mov
mov
int3
sub
mov
xor
sub
lock
pop
fldt
fcomps
inc
xor
xchg
add
dec
sbb
xor
push
dec
test
xor
movb
into
and
push
stc
push
and
lret
sub
imulb
rclb
adc
cltd
or
adc
icebp
subl
sub
repnz
adc
nop
sub
jb
adc
sub
and
inc
nop
xchg
nop
cmp
xor
cmp
dec
inc
out
xor
clc
or
mov
loopne
add
ja
xchg
and
jge
dec
xor
add
pop
roll
and
add
push
mov
lea
repz
mov
call
add
pop
cltd
adc
insl
dec
hlt
aas
mov
into
idivb
test
or
jnp
cwtl
adc
and
cld
xchg
push
xlat
insb
test
sbb
mov
clc
adc
xchg
rclb
lods
or
push
cltd
je
mov
push
cld
out
xor
or
add
int
lea
mov
pop
add
mov
je
enter
negb
or
jne
ja
mov
enter
fwait
inc
xor
or
test
call
sub
jmp
mov
inc
add
adc
push
clc
loop
xlat
ret
push
inc
adc
in
xor
je
repnz
push
xor
mov
pop
sub
push
out
bound
pop
notrack
aaa
sbb
lahf
pop
push
push
xlat
dec
ret
dec
push
inc
cli
jg
jl
sahf
mov
fdivs
jl
cmp
add
jne
push
mov
mov
jmp
pop
xlat
cld
mov
push
orl
dec
jmp
in
jl
test
add
ret
aam
mov
lcall
and
dec
loop
into
push
lret
pop
insb
xor
inc
xchg
add
mov
mov
push
cli
or
mov
or
inc
and
sbb
mov
sub
sbb
add
adc
inc
push
pop
bound
sbb
dec
dec
adc
xor
xchg
scas
mov
push
or
stc
xchg
dec
out
pop
and
cmp
pop
adc
mov
sub
sbb
and
add
dec
fs
or
mov
adc
in
sub
add
mov
in
in
sbb
cld
outsl
cmp
lods
cs
mov
mov
lock
dec
inc
jb
adc
pop
sub
ret
nop
mov
cmp
mov
enter
push
mov
lcall
addr16
test
es
sar
aas
out
mov
sar
jmp
mov
pop
ret
popl
sub
dec
cs
divb
sub
sub
pop
pop
out
or
xlat
bound
sub
sub
push
pop
mov
jns
dec
test
iret
push
inc
je
pop
mov
xor
cmpsb
mov
lret
pop
rcl
mov
je
and
mov
cli
xchg
jmp
inc
ljmp
nop
fcompl
or
push
pop
sub
das
dec
insb
push
xchg
pop
lods
jmp
cmpsl
add
push
inc
ljmp
jmp
repnz
nop
mov
push
mov
push
fists
push
sub
jbe
push
aas
lea
and
lods
sbbl
xor
pop
sti
shl
dec
loope
ljmp
jle
insb
int
sub
dec
cwtl
or
mov
sbb
push
mov
das
xchg
fdivrp
int3
dec
rcrl
jns
inc
and
cltd
and
lods
pop
cwtl
or
sbb
mov
in
scas
add
jbe
mov
rorl
fcmovne
add
jne
fnstcw
je
push
inc
aaa
add
cmp
aam
adc
push
push
pop
jg
add
jo
dec
jnp
mov
sub
add
movsb
sbb
pcmpeqb
sbb
call
pop
ljmp
shll
cmpsb
sbb
xchg
push
mov
inc
xchg
xor
inc
inc
xor
jmp
jge
clc
or
enter
in
dec
outsb
or
lods
cmp
enter
es
repz
sub
jmp
das
repnz
sarl
call
sub
fsubrl
cmp
and
lods
jmp
adc
mov
mov
daa
mov
fcoml
popa
or
sub
jae
push
fildl
or
push
dec
sarl
or
and
stos
xchg
push
ret
jge
xor
push
jmp
pop
rcll
sahf
jmp
cmp
popf
rolb
xor
push
cmp
imul
movzbl
xor
ret
incl
adcb
push
dec
push
cmp
jg
push
mov
decb
jl
cli
into
es
je
mov
fisttps
and
jae
enter
jne
lea
fisubs
pushf
push
add
and
xor
xchg
or
mov
mov
xchg
xchg
jns
out
and
or
xchg
push
sbb
inc
adc
ss
popf
rcll
or
sahf
loop
push
push
aam
lea
fdivrl
jmp
mov
push
dec
leave
and
loopne
paddb
push
adcl
adc
lret
pop
mov
adc
je
pop
stc
push
popl
adc
movsb
punpckldq
cmpl
jbe
jns
push
imul
dec
xor
dec
and
popa
rep
and
enter
mov
fldl
jne
cld
and
test
ja
jle
cld
sbb
pop
jp
cld
jle
test
mov
inc
pop
cmp
fdivl
loope
ficoml
xchg
out
lcall
inc
push
jle
pop
stc
loope
pop
inc
push
add
decb
in
mov
das
jmp
ret
jecxz
or
mov
int
je
aas
lcall
nop
add
inc
aas
adc
add
enter
mov
add
mov
cmp
jbe
cmp
jmp
sub
int3
daa
adc
adc
adc
mov
out
shlb
lcall
iret
and
pop
arpl
xchg
ret
inc
xor
add
enter
cmpsb
rcrb
or
sahf
int3
dec
push
daa
xchg
idivb
and
movb
push
ja
inc
sarb
mov
adc
dec
ret
xchg
xchg
pop
push
mov
inc
ja
inc
cli
in
xor
daa
inc
inc
and
adc
inc
xchg
xchg
call
add
std
adc
xchg
ror
dec
shrb
test
cmp
es
cmp
clc
insb
add
lea
mov
jmp
es
and
ret
inc
jmp
add
stos
sti
call
adc
inc
cmp
or
lea
xchg
xchg
dec
push
out
jo
add
outsl
movsb
jmp
cmpsb
adc
nop
inc
cltd
adc
and
add
lea
add
cld
and
es
push
sbb
mov
xchg
jae
iret
xchg
adc
lods
sarl
jnp
push
xchg
les
pop
and
xor
mov
jbe
jae
adc
cmp
stos
dec
jne
xchg
ja
mov
test
add
and
pop
cld
aas
mov
and
cmp
pop
call
mov
add
sub
ficoml
in
orl
sub
loopne
jne
sub
in
repnz
jge
sub
movsw
push
jp
xchg
xchg
jmp
sub
jb
inc
inc
sbb
mov
and
mov
test
pop
jmp
sti
pop
push
xchg
dec
cmpsb
jnp
adc
int3
and
loopne
inc
add
int3
sbb
sub
mov
adc
sbb
test
jb
stc
jno
lcall
sub
sub
and
ss
mov
mov
mov
mov
cmp
sbb
outsl
sbb
mov
insb
inc
mov
mov
adc
dec
les
cwtl
bound
inc
sub
or
and
adc
mov
bound
ds
in
decb
push
call
rorl
test
lds
jecxz
stos
mov
xchg
mov
pop
andl
jae
in
imul
mov
aam
lcall
cs
out
shr
sbb
mov
pop
dec
jne
dec
mov
mov
and
outsl
mov
push
clc
push
inc
fbld
pop
and
inc
outsl
ds
adc
bound
ss
inc
mov
adc
cmp
pop
pushf
rclb
stos
or
cs
js
jge
mov
neg
cmc
fmuls
in
je
mov
stos
xchg
push
mov
xor
mov
insb
outsl
pop
orb
inc
pop
dec
sub
mov
outsb
daa
add
cmp
loopne
pop
pop
mov
push
aam
testb
stc
and
mov
sti
lock
test
stc
push
adc
lret
repnz
outsb
in
sbb
mov
mov
pop
les
mov
jle
inc
xchg
jbe
push
orb
dec
add
add
call
cld
mov
sub
add
sbb
or
sub
and
mov
sub
sub
add
sbbl
ja
out
jb
cmp
pop
sbb
adc
or
cld
lock
jmp
aaa
xchg
xchg
or
les
stos
add
inc
xchg
inc
mov
fidivl
xchg
add
jmp
cmp
mov
cmp
jg
orl
std
jl
es
stos
cmpb
cmp
fstps
repz
mov
inc
lea
loop
inc
or
mov
lds
stos
or
pop
inc
clc
mov
pushf
inc
push
daa
pop
push
and
xor
gs
test
sub
les
sub
pop
add
mov
mov
in
mov
lret
or
mov
cmpl
mov
pop
xchg
bound
jmp
sub
add
enter
testb
mov
inc
push
inc
dec
je
dec
sub
mov
ret
and
divb
add
call
lods
sahf
and
sbb
in
inc
sub
das
jns,pt
test
jb
adc
or
cld
cmovo
push
lret
cwtl
mov
xor
cltd
stos
sbb
aas
dec
movsl
mov
cmp
je
push
push
fldenv
mov
test
ret
imul
inc
loop
ret
push
mov
loop
test
and
sub
dec
fisttpl
shll
jle
jmp
sub
sub
test
sbb
fimull
dec
shrb
sub
add
jle,pn
cmp
and
push
add
sub
sub
xchg
or
loopne
std
or
test
test
xor
adc
and
mov
aad
cs
mov
jne
sbb
inc
push
fs
adc
call
jle
lods
add
sbb
das
adc
aas
add
adc
or
clc
xchg
inc
loope
and
dec
add
fabs
movsb
mov
and
and
mov
fldt
xchg
mov
je
or
mov
lcall
loope
add
or
sub
xor
add
bsf
jno
ds
shrb
or
rorl
push
mov
dec
add
cmp
jae
cmpb
cld
and
add
or
add
ja
jmp
movw
gs
and
xor
je
inc
cld
push
or
fadd
ljmp
add
je
out
xchg
lret
lcall
mov
add
mov
mov
das
or
jns
cmp
inc
mov
test
or
outsb
mov
add
mov
jg
cmpsl
sbb
jae
repnz
add
and
int3
push
in
fildll
cli
mov
and
pop
sbb
imul
add
sbb
sbbb
inc
or
aad
push
pop
iret
pop
and
jne
dec
rcll
cwtl
mov
movsl
and
and
lret
inc
ljmp
or
enter
or
mov
jmp
inc
fmull
mov
nop
sub
lea
mov
flds
movsb
stos
icebp
leave
stc
mov
shll
ljmp
xlat
or
sub
xchg
in
sub
mov
push
cmp
bound
inc
push
pop
or
icebp
je
es
fistpll
and
mov
inc
lods
dec
xorb
shr
rol
sbbl
jb
push
add
loopne
xor
jmp
test
mov
stos
icebp
filds
and
nop
addr16
push
and
popa
ret
or
cld
sub
cld
or
jae
fimull
into
push
adc
jmp
sbb
mov
cld
daa
mov
dec
xchg
and
jns
cmp
push
nop
subl
jb
sbb
add
pusha
shlb
or
xchg
xor
mov
ret
push
pop
imul
mov
icebp
or
sub
pop
stos
sbb
ljmp
mov
and
push
fwait
jnp
or
mov
js
add
fldl
or
inc
scas
cmpsl
test
mov
adc
jmp
or
sub
add
dec
pop
clc
je
or
daa
mov
iret
arpl
jae
sbb
inc
and
pop
inc
cld
das
add
loope
pusha
xor
das
out
ss
dec
rcrb
addl
push
inc
shr
and
leave
dec
fildl
mov
push
sbb
push
pop
jecxz
dec
inc
or
movsb
dec
jne
test
inc
dec
data16
loopne
iret
xchg
in
and
xchg
hlt
mov
mov
add
clc
pop
cmp
sbb
hlt
mov
pushl
push
popa
or
hlt
call
popa
dec
mov
negb
cmp
imul
cld
add
ja
ficompl
les
adc
enter
and
lods
and
and
test
adc
div
mov
mov
icebp
and
xchg
xor
sbb
cld
cmp
push
fiadds
jg
mov
cmpsb
popa
lea
int3
xor
dec
lock
pop
stc
cmpb
jb
outsl
push
inc
daa
ja
push
sub
js
or
lock
sbb
movl
dec
nop
adc
mov
incb
jne
shrb
mov
imul
shr
mov
ja
repnz
inc
sbb
int3
or
jne
test
rolb
cmpsl
les
clc
pop
mov
mov
roll
pop
pop
xchg
inc
faddl
mov
mov
dec
xchg
or
mov
dec
in
test
jg
push
fidivs
loope
and
xor
hlt
sbb
add
jmp
rolb
daa
inc
jo
je
xchg
pusha
js
stc
sbb
cmp
pop
jl
or
inc
xor
push
add
sbb
ret
dec
push
enter
xchg
fsubrl
mov
jmp
sub
imul
and
fsubrs
loop
mov
xchg
sub
loopne
jns
inc
inc
cs
insb
sub
pop
mov
cs
jmp
ret
movsl
inc
and
jp
mov
mov
push
repnz
arpl
adc
fs
jmp
ja
sub
sbb
or
push
hlt
das
dec
ret
mov
lret
jo
stos
cmp
push
or
fcoms
pop
aas
sarl
cltd
mov
xor
stc
cwtl
inc
imul
xchg
bound
pusha
xchg
call
or
xor
orl
ret
mov
sbb
test
loopne
inc
outsl
sub
pop
dec
es
movhps
pop
repnz
and
jecxz
sbb
adc
dec
leave
and
or
push
push
dec
inc
adc
mov
mov
cltd
cld
lcall
adc
mov
sbb
cld
daa
push
fidivl
lret
mov
add
fcomps
mov
sbb
pop
mov
sub
icebp
js
push
push
xor
popa
fucom
das
add
and
in
push
testl
lock
mov
test
inc
test
xor
sub
mov
xlat
cmpl
sti
je
mov
mov
inc
hlt
mov
push
push
cmpb
jne
adc
inc
cwtl
aaa
jo
push
pushf
sbb
sub
dec
or
call
movb
shll
jecxz
xor
pop
sub
push
aas
inc
out
call
push
and
aas
xchg
jecxz
int3
inc
call
push
push
inc
leave
mov
mov
bound
adc
mov
xor
enter
in
dec
or
mov
sbb
and
mov
insl
call
push
in
sub
mov
and
in
push
mov
les
test
xchg
inc
sub
pop
dec
aas
jecxz
adc
sub
push
and
or
pop
jnp
push
add
shrl
gs
in
out
sbbl
add
movsl
fbstp
adc
iret
add
fistps
cmp
cmp
lods
lcall
xor
jne
lds
sbb
mov
inc
repnz
cmp
xchg
les
add
decl
stc
lahf
loop
insb
add
lahf
sti
jo
ret
push
push
mov
jg
pmulhw
adc
or
jbe
or
jb
jne
add
cmp
fcoml
push
xchg
inc
inc
enter
add
bound
mov
jns
ret
call
xchg
loopne
fcoms
mov
fcompl
jb
pop
and
adc
pop
lea
call
cltd
out
sub
adc
and
xchg
mov
or
mov
and
scas
scas
mov
adc
sub
inc
mov
ficoml
lahf
orl
xchg
mov
push
add
lahf
mov
jnp
in
and
jne
lock
dec
ljmp
push
push
add
ja
mov
and
test
add
or
ret
rorb
or
add
push
and
or
add
fidivrs
dec
mov
movsl
and
mov
mov
orl
push
dec
imul
xchg
mov
dec
hlt
cwtl
sub
add
jnp
add
mov
cwtl
int
mov
and
dec
dec
es
adc
call
repz
sub
stos
aaa
enter
dec
flds
mov
jmp
xor
hlt
mov
test
xchg
sbb
fsub
lret
test
sbb
or
fwait
dec
or
insl
jmp
movsl
jnp
ja
imul
inc
test
pop
xor
sarb
daa
adc
mov
fwait
lods
adc
xchg
cmp
adc
loope
jne
jmp
cli
js
mov
lock
ret
pusha
orl
loopne
and
or
inc
por
jl
or
adc
popa
rcll
sbbb
bound
xchg
xchg
data16
mov
popa
adc
lea
jne
and
jmp
pusha
push
loope
xor
mov
loope
test
lds
sub
xchg
iret
push
push
in
or
or
lock
out
jbe
add
adc
in
xor
or
pop
in
out
es
jo
cli
in
mov
xor
call
or
xor
out
bound
xchg
jge
movsb
das
xchg
and
in
push
and
push
sub
mov
dec
das
insb
push
jne
cmc
nop
cs
inc
cwtl
test
and
popa
dec
dec
test
inc
add
add
add
dec
mov
jae
out
pushf
mov
mov
adc
mov
jmp
test
dec
int
jle
jl
adc
sub
cli
sti
pushf
call
push
fwait
fs
call
adc
cwtl
pop
xor
or
out
rolb
cwtl
dec
mov
add
and
sub
sub
ja
and
lock
lcall
or
add
frstor
mov
jns
hlt
inc
aam
push
mov
xlat
inc
cmpsl
push
scas
inc
cmpb
rclb
jmp
and
in
rorl
mov
sub
scas
pushf
fadds
dec
das
push
idivl
lea
mov
add
or
pop
daa
xor
mov
add
inc
dec
ret
cmp
ljmp
mov
xchg
lcall
pusha
sub
das
sbb
mov
aaa
das
lret
pop
jo
popf
insb
add
push
mov
and
je
mov
fisubs
push
push
shrb
divl
or
fwait
outsl
mov
jmp
mov
add
lea
enter
pop
mov
ljmp
mov
mov
add
sub
jae
das
inc
stos
dec
daa
into
dec
pop
cmp
sub
fadds
pop
push
mov
mov
imul
dec
loope
icebp
inc
pop
mov
les
test
shrl
xor
push
push
cmp
xchg
adc
push
push
pop
cmp
xor
jne
and
push
mov
inc
pop
pop
push
mov
push
mov
popa
xor
out
and
dec
pop
jl
rolb
add
and
idiv
imul
lret
gs
inc
lcall
je
dec
mov
push
jecxz
loopne
jmp
cmp
push
dec
push
xchg
outsl
js
push
inc
pusha
pop
clc
jle
in
f2xm1
dec
and
jmp
rolb
subb
push
addr16
sbb
addr16
orb
inc
lahf
dec
jl
cs
mov
mov
call
clc
mov
push
mov
or
add
sub
add
pop
icebp
xchg
shrl
addl
fs
imull
inc
filds
imul
push
fcoms
pop
movlps
and
arpl
lods
jl
fs
cltd
xor
jb
bound
sbb
mov
imul
sti
fmuls
cmp
push
adc
pop
xchg
adc
push
decl
xor
add
pop
inc
fs
or
pop
scas
es
loopne
in
stos
mov
loop
adc
xor
loope
or
call
leave
cwtl
iret
cmp
dec
fdecstp
aad
add
int3
push
adc
dec
xor
in
xchg
xchg
jge
or
pop
inc
inc
lret
lea
sahf
aaa
test
jo
sbb
adc
adcb
rcl
and
jle
mov
mov
ret
mov
cs
xor
adcl
mov
add
ljmp
into
adc
lock
push
mov
inc
imulb
lcall
mov
mov
jmp
jge
fs
inc
in
jmp
cltd
sbb
or
mov
and
cmc
pop
mov
das
call
sbb
lock
push
push
scas
daa
push
decl
clc
jmp
cmpb
xor
sub
aad
sbb
push
add
sub
or
sub
or
mov
jns
sbb
jbe
cmp
cmp
jle
frstor
les
int
mov
nop
testb
push
adc
and
mov
outsb
nop
or
fs
mov
pushf
and
or
cmp
mov
sbb
sub
adc
mov
or
jne
ret
mov
push
inc
sbb
outsb
adc
or
sbb
jo
sub
push
fsub
sbb
sub
dec
test
cli
pop
push
out
adc
loop
push
xor
movsl
bound
add
jb
mov
pop
sub
gs
es
mov
or
add
shr
ja
aas
and
add
inc
sub
je
add
adc
sub
and
add
mov
or
pop
lds
mov
out
pop
clc
and
dec
popf
gs
and
or
or
dec
mov
es
and
add
test
test
fistpll
inc
je
nop
sbb
ret
adc
cmp
loope
data16
sbb
ja
popa
jne
and
js
sti
add
shll
add
loopne
adc
or
jae
fdivrl
pop
push
mov
mov
mov
fcompl
movsb
sub
xchg
into
in
lods
test
xor
daa
cmp
rcrl
mov
xor
leave
mov
call
lock
fwait
cmp
cmp
xlat
adc
adc
add
arpl
out
mov
adc
bound
jmp
cmp
adc
fstpl
lds
pop
jb
inc
paddusb
or
fwait
jmp
or
mov
push
fcmovne
hlt
pop
subl
lahf
push
push
das
fldcw
xor
jmp
je
add
add
sub
jb
ret
je
mov
mov
add
pop
stc
int3
nop
dec
pop
mov
push
pushf
push
and
adc
adc
fstps
or
and
sub
cltd
mov
fadds
and
mov
bound
jo
mov
pop
push
fisttpl
xor
jo
xor
leave
cmpsl
idivl
mov
mov
adc
adc
stos
je
es
push
push
add
lret
adc
adc
xor
mov
fmull
push
sub
daa
mov
dec
clc
inc
add
dec
call
push
jae
push
mov
and
or
mov
inc
adcl
rclb
scas
popa
adc
sub
pop
pop
add
mov
xor
xor
mov
adc
cmp
sbb
insb
cmp
cmc
pushf
sub
mov
and
push
pop
imul
sub
mulb
pop
xor
cmp
sub
xchg
stos
or
or
inc
mov
pop
outsb
jl
push
jge
adc
movsb
cmp
sub
inc
insb
decl
scas
lods
orb
pop
mov
in
sti
loope
int3
or
aam
ja
sbb
fmulp
jno
and
aas
mov
fdivrl
and
insl
xlat
js
shrb
aam
cmp
std
enter
cmp
xor
shlb
or
shrb
push
add
jne
push
add
adc
shrb
xchg
icebp
push
out
cmc
push
mov
into
mov
jp
mov
xor
inc
pop
adc
dec
or
push
inc
ret
add
mov
or
xor
js
sub
cmp
aas
and
push
fsubs
mov
lret
aaa
or
add
ret
aaa
lods
inc
push
add
jae
pop
loopne
mov
mov
rorl
mov
lock
push
push
add
jmp
sbb
lea
mov
xor
dec
mov
por
sub
les
adc
ret
add
push
fimull
inc
dec
mov
cmc
popa
pop
je
add
nop
aaa
pop
mov
test
mov
xchg
pushf
frstor
add
add
aas
aad
mov
fistpl
cmc
lods
nop
movsl
test
ret
jno
push
adc
pushf
mov
add
mov
add
pushf
std
fiaddl
shl
scas
and
fwait
and
sbb
das
jne
imul
pusha
and
std
ja
push
aam
inc
enter
and
mov
dec
xchg
inc
jmp
sub
and
add
mov
inc
and
inc
incb
add
jbe
popf
mov
in
aam
or
xchg
pop
and
in
sub
and
out
ret
jno
cmpsl
clc
jae
into
lahf
inc
lods
add
dec
cs
in
rolb
aaa
loop
cld
and
inc
push
add
pop
stc
dec
xchg
inc
push
xchg
hlt
dec
mov
and
mov
addr16
mov
es
mov
push
sub
and
cli
popf
push
rorb
enter
sub
ds
push
sbb
push
add
or
mov
dec
or
call
loopne
sub
stos
adc
dec
inc
push
aam
sbb
loop
push
or
int
popw
mov
push
pop
pop
or
pusha
dec
lock
ja
add
roll
sbb
incb
xchg
repz
add
test
mov
push
lods
push
cmpsl
out
sahf
jo
stos
cmp
sub
cmp
dec
out
push
inc
add
in
rorl
fstpt
mov
push
clc
pop
pop
inc
lods
leave
inc
dec
rclb
jmp
and
or
lods
jns
sbb
cmc
insl
outsl
mov
pop
lea
push
pop
mov
fldt
pop
and
das
pop
bound
xor
pop
pop
jmp
dec
push
das
rclb
and
std
cs
lods
sbb
mov
or
jecxz
hlt
int3
das
or
xor
lahf
jbe
inc
xor
call
fiadds
jg
add
push
jg
cmp
jne
push
pop
adc
push
out
add
dec
addb
jmp
mov
pop
movb
push
or
loop
movb
jo
pop
dec
pop
push
orb
testb
loope
cs
adc
or
dec
addb
push
jb
jmp
loope
cwtl
sub
js
sub
pushf
and
jle
inc
lea
dec
cmp
flds
pop
adc
es
and
imul
fadds
cld
mov
aad
clc
ds
int3
lret
mov
shrb
popf
add
loope
jbe
push
lock
jge
add
xchg
fsub
lret
xchg
add
loopne
cmp
sub
push
cli
push
xchg
out
xchg
xchg
fdivs
or
das
aad
loopne
adc
icebp
loop
adc
mov
scas
push
fildll
mov
xchg
dec
arpl
inc
sbb
leave
sbb
fsubs
and
jnp
insb
xchg
mul
les
push
mov
and
jmp
sbb
nop
aaa
cld
inc
xchg
mul
les
jmp
das
and
andl
add
fwait
add
push
add
or
or
or
or
pop
nop
jecxz
pop
ja
mov
jle
test
jne
sub
jl
adc
lods
sbb
iret
xlat
or
rcrl
andl
adc
adc
and
movsb
push
or
push
flds
int3
cli
jge
lock
testl
popa
push
cmpsb
dec
in
clc
je
data16
mov
and
xchg
ucomiss
mov
fs
call
mov
les
leave
sub
enter
adc
mov
push
or
fs
xor
mov
push
cld
mov
lret
test
pop
jmp
cmpsb
xchg
inc
xchg
and
and
les
insb
sbb
nop
mov
xchg
adc
xlat
push
mov
xchg
mov
mov
cmpsl
icebp
aad
out
cmpsb
mov
loop
fcomps
cld
push
rolb
ljmp
adc
jae
mov
push
inc
bswap
cmc
lods
fwait
push
xor
fs
mov
inc
cld
subb
stc
in
lcall
out
mov
outsl
lea
les
mov
and
in
mov
xchg
mov
or
mov
push
pushf
pop
imulb
mov
pop
cmp
jnp
cmpb
cmpsl
sub
stos
pusha
sbb
or
loopne
sbb
cmp
mov
cmc
fs
or
lods
je
cwtl
xlat
test
mov
or
push
or
mov
add
ss
inc
inc
pushf
js
and
popf
push
sbb
or
fdivrs
mov
cmp
rcll
test
or
dec
popa
shrl
mov
adc
fdivl
or
loopne
adc
adc
pop
cwtl
in
jmp
mov
call
rcrb
and
push
push
sub
add
or
jne
or
mov
jo
jnp
inc
sar
xchg
mov
xchg
jnp
and
dec
adc
cmp
cmp
jo
jae
out
xchg
nop
adc
pop
lock
push
sahf
xor
and
add
pop
inc
in
push
push
mov
jle
or
std
addr16
push
and
in
dec
outsb
in
sbb
dec
jp
mov
xor
or
mov
add
data16
pusha
hlt
call
jne
mov
jmp
sbb
repz
clc
popf
add
mov
and
jb
jmp
es
add
or
inc
jg
insb
add
mov
jo
in
cmp
mov
pop
pop
sub
push
test
sub
iret
clc
hlt
lds
leave
bound
pop
test
shl
enter
lock
lcall
sbb
scas
cmp
jle
mov
lods
pop
pop
das
xchg
fildl
sub
and
push
add
and
dec
or
xor
sub
inc
sti
inc
arpl
jge
cli
cld
nop
je
fnstcw
cmp
and
push
or
inc
dec
in
push
ret
jge
call
mov
dec
xor
jns
or
dec
hlt
mov
ljmp
dec
repz
and
cld
dec
mov
jg
sbb
lock
cs
lahf
adc
roll
jae
add
loopne,pn
jg
or
idivl
inc
jmp
or
or
push
fnstenv
xchg
push
ds
inc
or
mov
jge
or
mov
or
add
ret
stos
sub
mov
adc
out
imul
push
inc
je
inc
mov
mov
inc
adc
push
jo
shl
push
add
and
push
shr
adc
adc
cmp
clc
pop
push
and
adc
mov
shl
leave
nop
pop
mov
pop
cmpsb
ret
movsl
adc
dec
mov
gs
adc
mov
xchg
jg
jge
cwtl
pop
cmp
sar
std
inc
sub
cld
xchg
icebp
rorl
fbld
lcall
shr
pop
lcall
je
je
popf
adc
adc
jmp
stos
pop
inc
adc
sbb
orb
mov
or
pop
xchg
les
sbbb
test
xlat
mov
in
mov
lahf
jb
cltd
adc
clc
ficoml
aad
xchg
xchg
arpl
dec
lods
loopne
sub
mov
or
je
mov
push
cmp
daa
mov
push
jecxz
add
mov
pushl
adc
jbe
test
rclb
shr
repnz
pop
xchg
lock
pop
fs
hlt
inc
cmpsb
adc
sbb
repnz
gs
jecxz
test
stos
adc
mov
xlat
lcall
in
cmp
inc
fsubrs
mov
outsl
or
push
insb
nop
stc
mov
hlt
and
hlt
xor
sub
rcrb
adc
ficoml
loope
inc
lds
incl
add
add
jb
inc
jb
sub
popf
mov
push
in
mov
push
mov
sub
jb
adc
inc
sbb
push
and
stos
int
push
int3
lret
jne
ljmp
or
jmp
add
pop
data16
cwtl
call
pop
cs
sbb
out
xchg
dec
shrb
cli
sub
add
fs
daa
or
add
add
adc
enter
dec
mov
sub
add
jmp
dec
or
mov
movsb
cltd
dec
mov
cmp
roll
test
arpl
movb
push
xchg
sbb
adc
xchg
mov
jp
push
call
xchg
ret
mov
or
sbb
mov
xchg
call
inc
inc
cmp
lea
push
inc
mov
test
add
pusha
je
add
cmpw
cwtl
xchg
rorl
sbb
sbbl
xchg
add
imul
sub
rorb
mov
pushf
pusha
lea
lret
adc
jne
stc
push
xchg
fsub
or
call
mov
popa
mov
movsb
or
add
xor
mov
aas
and
push
lock
mov
adc
in
fwait
mov
sub
xor
repz
in
sbb
cmp
mov
cpuid
mov
dec
mov
mov
test
mov
mov
dec
push
in
and
inc
in
mov
sbb
faddl
and
xor
faddl
xchg
rol
mov
loopne
mov
sbb
aam
fdivrs
sarl
mov
xchg
sbb
push
sarb
andl
int3
mov
jae
xchg
hlt
or
enter
push
push
cld
repz
out
add
cmp
sete
les
enter
push
and
jmp
and
bound
mov
call
out
push
cmp
push
dec
mov
xchg
mov
aad
and
push
xlat
frstor
adc
mov
aas
lret
pop
dec
test
repnz
and
fs
call
and
mov
loopne
add
insl
or
jo
dec
adc
and
iret
mov
sub
and
orl
xor
into
sub
jae
xchg
fcmovne
mov
sbb
jbe
inc
out
testb
int3
push
add
fsubrp
dec
or
jmp
out
mov
xlat
cltd
or
dec
adc
mov
or
jne
aam
imul
fcoms
stos
mov
les
adc
push
mov
xchg
cltd
les
add
adcb
dec
sar
cmp
sub
push
in
ljmp
clc
movl
xchg
out
mov
jmp
fdivrl
inc
dec
call
pop
fists
cmpl
xor
xchg
cmp
jns
pusha
clc
xchg
sub
repnz
mov
insb
mov
add
popa
fwait
adc
sub
ret
or
push
pop
fcmovb
popf
mov
bnd
jge
adc
cmpsl
faddl
inc
adcb
rcrb
ds
sbb
lret
inc
repz
push
mov
stc
rorb
daa
jne
jb
add
jmp
fs
fmull
aam
out
clc
lcall
in
inc
jnp
jl
mov
pop
or
mov
dec
push
sub
inc
imul
push
jo
popa
arpl
inc
js
hlt
jp
xchg
lock
dec
jne
ds
adc
adc
mov
push
xor
gs
or
pop
add
lods
mov
sbb
repnz
cmp
adc
adc
out
and
pop
pop
daa
mov
push
int3
pop
jb
nop
dec
sti
add
push
xor
decl
and
pop
pop
inc
lock
push
les
int3
add
mov
push
daa
in
mov
add
add
pop
in
pop
repnz
jecxz
adc
fidivs
dec
lret
jbe
mov
jg
popa
add
add
jno
shlb
adc
pop
insl
mov
inc
cs
xchg
dec
addr16
push
arpl
emms
shlb
push
or
sbb
outsl
fldl
orl
and
lea
mov
cmp
mov
and
xlat
sub
imul
inc
sbb
xchg
rolb
and
jmp
add
jg
adc
add
dec
sbb
mov
mov
test
mov
pop
adc
rol
scas
ss
and
call
inc
movb
inc
mov
bound
or
stos
mov
push
push
sbb
push
arpl
enter
sbb
mov
je
xchg
test
outsl
sub
mov
xchg
lods
hlt
or
xchg
ret
flds
call
sbb
adc
pop
fnstsw
fstps
sbb
xchg
inc
and
push
cmp
pop
orl
add
xor
sub
cmp
sete
push
sbb
dec
in
daa
push
push
aam
inc
inc
pusha
cmp
jnp
mov
dec
rolb
loope
pop
dec
add
fildll
stos
les
cmp
and
cli
lret
lock
rclb
inc
or
mov
fsubrs
add
jne
cmpsb
add
aam
fs
les
insb
dec
add
stos
xor
into
mov
cltd
in
mov
fimuls
dec
mov
xor
test
mov
cmp
shr
test
jp
and
mov
pop
mov
pop
cmpsb
sbb
adc
int
and
pop
nop
jp
das
mov
xchg
fsubl
push
lods
lds
cmp
cmc
push
add
jg
mov
jecxz
adc
loope
adc
rcrl
lahf
jmp
and
in
adc
dec
adc
in
and
adc
fistl
and
hlt
je
inc
outsl
inc
loope
sbb
sub
dec
gs
jmp
xor
sbb
adc
mov
pop
cmpsb
test
adc
or
popa
das
adc
movsl
push
mov
repz
lods
push
leave
mov
out
and
fisttpll
ret
and
ret
rorb
adc
and
mov
xchg
adc
and
in
jmp
in
clc
dec
fmull
xor
ja
mov
adc
xchg
adc
shlb
inc
adc
or
hlt
jno
mov
xor
fmull
cltd
test
insb
adc
cld
mov
adc
orl
test
and
imul
imul
ret
bound
sbb
xor
inc
add
and
lock
cltd
and
adc
cltd
or
adc
adc
sarb
dec
dec
or
mov
rorb
mov
or
adc
cmp
adc
push
enter
pushf
add
adc
xor
adc
sbb
enter
sbb
fdivrs
inc
je
rolb
and
or
mov
add
add
les
shlb
fdivs
and
and
sub
cld
test
mov
sub
xor
test
mov
mov
mov
cmpsb
pusha
inc
cwtl
call
xchg
je
push
xor
jo
add
pop
jmp
cmp
dec
push
mov
sub
mov
cmp
leave
sub
mov
adc
fstps
adc
les
mov
adc
dec
and
dec
cmpl
jle
inc
sub
mov
test
aas
push
sub
xchg
or
test
inc
test
xchg
movsb
scas
or
enter
or
nop
test
jmp
out
pop
inc
aam
inc
jecxz
cmp
rclb
sub
add
repz
cmp
or
subl
ljmp
out
enter
cmpb
inc
popa
mov
test
xor
adc
dec
jae
ja
out
or
js
add
lods
repz
mov
lahf
movsb
or
push
pop
push
jge
bnd
add
data16
pop
scas
or
mov
out
movsl
lods
adc
xor
mov
or
inc
adc
push
mov
mov
cltd
lret
mov
push
je
aaa
addr16
adc
xrelease
pop
pusha
sbb
adc
mov
hlt
cs
inc
sahf
fisubrl
inc
sub
cli
xchg
mov
pop
loop
cmc
sbb
insl
aam
sarb
sbb
ret
sbb
sub
leave
out
in
test
cmp
out
xchg
mov
sbb
mov
mov
jg
les
clc
adc
loop
mov
inc
xor
sbb
adc
add
outsl
mov
je
push
gs
mov
test
loopne
movsl
jo
mov
push
cmpsl
je
sbb
clc
gs
pop
mov
test
adc
fwait
mov
push
and
clc
fmull
jmp
cld
pop
repnz
test
mov
mov
adc
repnz
jl
rorb
add
bound
ret
int3
sbb
call
out
mov
js
adc
in
add
test
fld
sub
hlt
dec
mov
push
and
pushf
push
and
inc
lods
mov
les
mov
jno
push
jnp
adc
loop
sbb
fmull
in
inc
fsubs
xor
in
loop
sbb
loopne
or
pop
push
sti
mov
sbb
sbb
cmp
in
sub
lods
inc
sub
testb
lock
push
rclb
dec
push
and
mov
mov
fs
insb
sbb
cld
js
pop
cli
add
jne
call
xor
push
jns
jo
xchg
unpcklps
stos
sbb
outsl
push
je
inc
jno
xchg
push
jne
xlat
stos
adc
inc
or
adc
sahf
outsl
popa
mov
or
scas
adc
pop
outsl
mov
or
ds
outsl
push
push
je
test
cmp
inc
mulb
adc
ds
rcr
push
and
inc
jae
or
adc
cmp
mov
push
and
and
call
dec
mov
or
sar
test
jmp
push
or
arpl
test
or
jnp
inc
mov
rcrb
sbb
sti
jmp
loopne
xchg
cld
stos
mov
pop
inc
add
dec
xor
adc
push
cld
xor
pop
test
mov
int3
sub
add
xchg
and
adc
or
adc
or
and
push
nop
lods
lret
sbb
mov
sub
adc
push
into
jae
rorl
and
jnp
add
std
lods
int3
das
clc
xchg
push
mov
inc
pop
imul
mov
fs
mov
aad
cld
xor
testb
jle
pop
inc
adc
clc
push
inc
mov
inc
aad
dec
data16
testb
inc
out
fs
adc
sbb
jle
inc
sub
mov
sbb
leave
gs
sub
pop
fs
sbb
jns
out
imul
mov
enter
inc
fbld
jae
sbb
adc
mov
adc
add
pop
fs
in
cmp
int3
mov
loop
shrl
sbb
jle
inc
xor
pop
cld
jo
arpl
fs
adc
jo
arpl
in
jnp
and
mov
cld
push
push
sbb
jne
in
jb
xchg
mov
or
inc
jmp
popa
inc
dec
sub
sub
push
cmp
or
in
mov
pop
push
call
pop
sbb
pop
hlt
xchg
test
dec
add
add
add
push
mov
sti
rcrb
cmp
mov
in
loopne
dec
xchg
jge
adc
lods
out
adc
mov
inc
lock
add
sbb
add
insb
les
call
fsubrs
decb
pop
mov
bound
enter
sub
and
inc
clc
mov
fadds
adc
jmp
push
test
call
add
dec
sub
push
sub
clc
idiv
insb
mov
add
xor
or
dec
je
dec
push
cmove
push
mov
call
sbb
pop
add
sub
and
div
xchg
adc
mov
mov
sbb
cld
out
scas
xor
clc
mov
mov
xor
in
shrl
int3
mov
ret
test
dec
es
cld
rorb
mov
adc
push
loopne
out
test
cmp
adc
mov
mov
sub
and
int3
cmp
jmp
push
repnz
xor
int3
mov
aam
mov
push
adcb
fcoms
fsubrl
rol
jne
bound
clc
xchg
aas
pop
loop
fstps
loopne
or
cmpsb
lret
fidivrs
movsl
cli
sbb
jg
sub
xor
dec
jmp
sahf
lea
adcl
or
ret
call
test
testl
jge
outsb
or
aad
mov
adc
inc
call
xor
push
and
ret
cwtl
and
test
rorb
and
shlb
xor
into
insb
adc
pop
mov
xor
in
pop
fsubl
decb
filds
out
mov
sbb
shrl
sub
cmp
lcall
or
lahf
ret
rclb
add
inc
jge
mov
hlt
or
test
mov
fldcw
cmpb
cmp
and
jg
ja
dec
shr
ja
ja
push
mov
push
dec
call
pop
testl
and
mov
adc
testb
and
in
testb
das
rcll
push
mov
hlt
fs
cmp
test
and
lret
xor
xchg
and
and
adc
pcmpgtb
popf
push
pop
clc
popl
jl
inc
xor
lea
cmp
and
mov
add
sbb
cmp
mov
lea
test
xchg
das
cmpsb
and
arpl
adcl
inc
and
jae
mov
inc
mov
jbe
sbb
and
stos
fnstenv
movsl
or
rorb
lcall
pop
dec
inc
sub
stos
je
adc
ja
aaa
jb
pop
in
insb
jl
xchg
imul
add
push
ret
out
jne
sub
int3
cmpsl
ficomps
sbb
lock
or
jmp
sbb
jne
xor
push
jmp
sub
mov
lcall
cli
and
jmp
scas
and
xchg
push
add
add
and
cmp
jmp
pop
mov
je
sbb
pushf
daa
fwait
dec
jl
scas
mov
nop
push
xor
clc
iret
inc
mov
cld
jg
enter
xchg
fisubl
testb
xchg
dec
add
or
fs
and
inc
sbb
push
lods
and
add
or
and
jns
or
or
mov
outsb
subl
or
pop
cmpsl
jae
daa
es
jbe
xchg
cltd
subl
inc
mov
ss
test
inc
and
popa
pusha
push
xor
enter
xor
call
lahf
sbb
and
adc
incb
xor
mov
cli
inc
je
stos
bound
cld
adc
into
arpl
les
or
push
push
push
cmp
jmp
adc
leave
or
or
pop
and
or
fs
fsubr
sub
sub
mov
scas
xchg
cmp
inc
adc
pop
adc
inc
insb
xor
jmp
leave
and
or
push
test
sbb
popa
sub
or
jnp
pop
mov
repz
movsb
scas
sbb
push
push
and
sbb
std
mov
inc
roll
push
cmp
mov
daa
lock
jb
lods
es
sub
inc
push
nop
movsl
push
and
add
sbb
add
and
mov
push
push
push
adc
push
pop
stc
sbb
scas
je
repz
sahf
pop
movsl
and
cld
cs
mov
dec
pop
movsl
or
out
mov
inc
dec
mov
fcomps
mov
bound
sysenter
and
inc
xlat
push
call
orb
sbb
lret
jg
icebp
jne
push
jb
mov
xor
xlat
xor
mov
inc
lcall
adc
xor
pop
sub
xchg
enter
push
cmp
and
mov
iret
sub
mov
mov
or
adc
push
sub
push
icebp
push
push
sbb
push
and
int3
jmp
cmpsb
inc
adc
mov
inc
lret
movsb
pop
add
cmp
jne
xor
cmp
jne
sub
cmp
test
popf
push
xchg
dec
shll
sub
adc
adc
xchg
dec
and
jbe
mov
inc
pop
adc
je
in
sub
pop
imul
push
mov
adc
and
push
cmp
cmp
or
cmpb
adc
rcl
dec
imul
or
or
jmp
test
sbb
mov
inc
inc
cwtl
sub
or
and
add
cld
fcos
mov
and
inc
ret
adc
fisttpll
xor
cmp
into
push
sub
xor
mov
dec
push
pop
push
add
test
sbb
jecxz
cmp
push
iret
mov
or
jp
and
push
nop
mov
in
and
call
add
sub
and
repz
cmp
aas
add
cs
lds
je
dec
js
nop
sbb
cmpsl
and
cmp
xor
inc
add
test
mov
push
push
mov
push
push
dec
in
outsl
mov
mov
mov
or
jg
add
jg
sub
xor
clc
jle
jo
cld
pop
mov
popf
es
mov
sub
clc
xchg
lcall
test
lods
cmpsl
rcr
std
ja
and
adc
push
add
adc
mov
data16
push
pop
sahf
popa
iret
jne
mov
dec
sahf
icebp
sbb
xchg
imul
xchg
lret
insl
xor
mov
mov
xlat
cltd
xor
hlt
mov
mov
imul
sti
leave
enter
mov
fld
mov
sbb
pop
or
add
add
std
icebp
add
mul
mov
popa
sbb
stos
xchg
xor
shlb
mov
xor
push
or
adc
sub
adc
ja
cwtl
mov
test
sbb
adc
add
mov
xchg
or
and
inc
sti
sub
leave
dec
mov
or
lds
orb
inc
or
and
mov
push
sar
cmp
dec
pop
ret
jge
jle
pop
fisttpll
mov
fdivs
sti
push
call
mov
and
or
fwait
push
xor
and
call
bound
push
movsb
lcall
mov
mov
rcr
add
push
or
add
and
dec
clc
and
mov
add
jmp
sbb
or
add
and
dec
jnp
sahf
inc
and
scas
sbb
cmp
add
cltd
sub
or
adc
and
sbb
ror
inc
and
out
aad
mov
dec
mov
jo
sub
pop
xchg
dec
and
rolb
cmp
inc
mov
jmp
push
enter
sub
or
push
add
xchg
test
jmp
mov
add
sbb
and
inc
divl
or
jmp
mov
or
xchg
push
call
jmp
pushf
xor
inc
sbb
popf
pop
and
addl
jle
mov
mov
andb
mov
sub
cs
pop
dec
pop
jge
repnz
leave
xor
testl
jecxz
xor
mov
inc
xchg
jns
leave
fs
or
jmp
test
mov
movb
mov
cmp
pop
mov
je
sub
sbbl
mov
and
ret
jmp
repnz
imul
adc
mov
les
and
add
add
gs
add
sub
pop
and
dec
outsl
xchg
js
lret
push
sub
add
xchg
dec
shlb
les
sbb
mov
in
mov
addb
adc
and
sub
hlt
and
sbb
xchg
std
addl
xor
dec
push
xchg
pop
inc
aam
cmpsl
out
xchg
adc
fmull
bound
test
xchg
pop
jbe
and
adc
repnz
push
push
push
sbb
fs
or
jle
dec
adc
insb
adc
inc
shlb
in
push
insb
adc
adc
inc
or
sbb
xchg
adc
inc
cmc
psubsb
adc
inc
pop
call
test
sbb
das
xadd
sbb
cltd
xchg
push
or
sub
sub
adc
mov
ja
cs
aaa
enter
adc
rcrb
sbb
aam
dec
xchg
mov
test
pop
pop
jecxz
push
jp
in
xchg
push
hlt
int3
test
hlt
jmp
adc
clc
mov
mov
call
pop
hlt
push
inc
mov
cltd
mov
jmp
push
or
or
rolb
pop
iret
loope
or
xor
rcrb
mov
inc
sub
ja
cld
popf
rol
jecxz
push
xchg
dec
in
jae
shr
loope
push
stc
cmp
pop
popf
sbb
scas
movsb
popf
fldcw
arpl
lods
dec
add
mov
insb
lock
ja
sub
fucomip
sub
lea
jno
or
sbb
gs
imul
stc
push
std
bound
fld
dec
jns
imul
and
lret
sbb
inc
pop
mov
or
inc
in
add
sbb
call
sti
adc
inc
rolb
adc
add
xchg
andl
inc
stos
mov
cwtl
jge
test
jmp
adc
and
pop
rcrl
and
nop
lock
adc
xlat
adc
popf
ficomps
push
and
fcmovbe
enter
call
push
adc
sub
mov
test
into
je
lods
push
data16
or
or
xchg
push
jne
test
sub
mov
les
adc
push
inc
test
pop
and
and
scas
sbb
enter
lock
sub
cmp
ds
and
push
or
movsl
adc
mov
push
mov
push
ljmp
mov
jl
fisttps
repnz
xchg
xor
inc
adc
rcll
jmp
lret
adc
fisttpll
in
jb
inc
testl
jmp
daa
icebp
test
sbb
mov
mov
and
enter
jo
mov
pop
jmp
mov
fdivr
loop
and
pop
inc
test
sarb
cmp
mov
pop
pop
jmp
inc
lock
xchg
mov
push
cs
pop
push
rcrb
out
adc
adc
out
les
and
lock
pop
pop
inc
or
xor
aam
and
mov
mov
movsb
and
out
cmp
sub
pop
xchg
and
test
jnp
inc
mov
aas
mov
test
in
lods
xlat
lcall
jp
sbb
ja
xchg
movsb
mov
dec
lock
lea
movsl
adc
mov
adc
dec
loopne
jmp
xchg
pop
mov
jl
xor
push
push
or
lock
and
inc
and
imul
out
push
add
mov
sbb
adc
call
das
mov
adc
cld
stos
jmp
push
repz
jb
popl
cwtl
xchg
pop
dec
cs
test
in
adcl
add
xor
add
dec
dec
xchg
jge
xchg
inc
stos
sbb
mov
inc
or
add
int3
sub
or
mov
adc
sub
mov
lcall
popa
jnp
cs
cli
sub
sbb
lret
mov
mov
pop
pop
dec
mov
push
push
scas
lahf
adc
or
js
mov
mov
mov
out
pop
stos
mov
scas
std
cli
and
xchg
sbb
out
mov
cwtl
mov
sbb
testl
sub
xchg
cli
ret
mov
cmp
jmp
ds
mov
sub
jl
add
jp
fwait
jmp
or
add
pop
sub
or
stc
pop
or
inc
lret
mov
nop
popa
in
pop
cmp
unpcklps
ja
mov
call
mov
or
inc
in
xor
adcl
xchg
call
push
xchg
adc
pop
enter
lcall
sbb
ret
xchg
fisubl
in
inc
adc
lods
mov
adc
add
and
dec
pusha
xchg
jne
xchg
stc
movaps
add
jl
cmpsb
sbb
and
fbld
outsb
adc
or
fnsetpm(287
fnstcw
sbbl
add
imul
lods
and
dec
inc
sbb
and
imul
movsbl
dec
sub
adc
mov
inc
fildll
sbb
cmp
mov
inc
pushf
adc
inc
mov
xor
je
inc
push
adc
add
popa
sbb
or
mov
lahf
inc
mov
movsl
and
xlat
sub
test
out
sub
adc
and
dec
inc
lods
in
jno
fisttpl
and
imul
push
push
and
fildll
pop
mov
sub
sti
push
inc
mov
adc
adc
cmp
imul
les
xor
jmp
movsb
rorl
and
mov
repnz
sbb
outsl
mulb
xor
adc
push
add
jno
aas
aam
fildl
shrl
inc
or
adc
div
mov
es
ror
add
add
or
push
in
bswap
js
push
inc
mov
loope
repz
sub
insb
lcall
and
mov
pand
movsb
and
jno
hlt
fildl
push
and
mov
shr
js
xchg
loop
adc
pusha
sub
xchg
pop
lock
pop
xchg
dec
mov
inc
or
xchg
ja
adc
fstps
sbb
inc
mov
add
and
lods
jbe
pop
jg
mov
call
sbb
mov
push
jmp
test
pop
mov
mov
sbb
push
test
pop
pop
rolb
imul
jae
adc
mov
xor
cmp
jecxz
pop
movsl
xor
subb
ret
xor
adc
and
jmp
lock
fsubrl
push
jbe
dec
sbb
cmp
inc
pop
imul
stos
xor
shll
std
mov
jns
or
adc
xor
xlat
fnstsw
lcall
xchg
outsl
enter
orl
es
js
ds
and
inc
or
or
cltd
jo
stc
dec
adc
test
and
adc
sub
mov
sub
dec
pop
das
jo
lds
out
nop
in
or
dec
jnp
ret
xchg
push
rcrb
and
and
lds
pop
and
sub
lds
test
lds
xor
pop
pop
call
hlt
scas
and
outsb
int3
dec
sub
lret
and
dec
fs
inc
pop
mov
andb
sbb
or
enter
and
movaps
xchg
or
add
and
jle
mov
lds
imul
lahf
movsb
mov
loope
sub
xchg
pop
enter
jns
cmp
mov
sub
lods
sahf
aas
js
lret
dec
xor
bnd
hlt
cs
loop
xor
pop
xchg
das
cmpsb
andl
dec
movsb
mov
pop
adc
adc
stc
mov
jmp
and
and
lret
push
fildll
or
jno
sbb
push
jbe
fildll
xchg
mov
xchg
adc
je
or
inc
fcoms
addr16
les
inc
fistpll
cwtl
inc
or
aad
fildll
jns
sbb
mov
pop
xchg
or
mov
mov
mov
adc
sbb
sbb
add
and
dec
inc
xchg
popa
and
cs
push
movsb
cs
mov
movsl
jbe
jecxz
adc
or
inc
repz
jp
pop
in
je
and
stos
sub
pop
test
insl
pop
xor
nop
adc
imul
mov
movsl
repnz
xlat
sub
sub
inc
lret
xchg
mov
ret
add
sbb
mov
mov
inc
int
mov
ljmp
and
mov
ret
jb
scas
sub
je
mov
fidivs
sbb
test
jmp
push
fnstenv
pop
mov
jmp
xchg
fisttpl
and
lock
sub
sub
mov
mov
mov
xor
mov
mov
les
dec
jg
hlt
decl
mov
and
cmp
rclb
sub
rorl
popa
mov
mov
push
mov
clc
and
pop
cld
in
dec
adcb
cmp
je
and
hlt
out
in
aaa
mov
jp
jnp
popa
test
cmp
mov
xlat
pusha
mov
xchg
dec
lea
sbb
or
or
xor
cmpsl
and
adc
outsl
or
test
stc
adc
in
adc
nop
mov
lds
inc
ljmp
sahf
mov
nop
cmp
cmp
sbb
xor
test
jb
mov
push
rcll
sahf
jg
dec
shrl
add
add
adc
or
push
mov
xchg
aad
pushf
push
out
jb
mov
xchg
mov
inc
sti
xorb
je
push
test
cmp
and
mov
xor
hlt
aad
and
or
jp
cwtl
andl
shlb
mov
jle
xlat
inc
or
roll
add
fldenv
cmp
popa
inc
jl
mov
inc
adc
or
mov
sbb
ljmp
sbb
xchg
mov
mov
iret
rorb
in
iret
aaa
inc
and
je
sub
dec
push
jo
faddl
clc
lcall
out
xor
mov
js
xchg
sub
jmp
fwait
jg
and
lock
push
push
or
sti
mov
hlt
iret
jge
sbb
fbld
push
push
adcl
gs
push
lret
mov
push
mov
dec
push
lods
mov
push
and
sub
data16
or
das
push
fmuls
mov
cld
daa
aam
push
sbb
mov
rolb
cmp
in
test
xor
push
inc
mov
inc
push
mov
je
enter
cmp
addr16
xchg
out
fisubrs
sub
mov
xor
and
add
in
insl
inc
add
dec
add
int3
sbb
or
mov
pop
inc
jle
and
enter
add
lods
sub
out
add
and
or
mov
and
sbb
lahf
adc
mov
lds
xchg
mov
and
xchg
es
push
adc
jmp
inc
aam
lahf
test
call
movsb
addr16
mov
inc
iret
jle
jmp
pushf
lds
cwtl
xor
aaa
sbb
dec
push
mov
cmp
nop
cmpsb
sbb
or
dec
push
shl
ds
aam
test
pop
dec
push
or
adc
mov
mov
daa
mov
movsb
in
cmp
add
sbb
xchg
stc
push
dec
mov
sub
push
int3
push
xchg
pop
dec
mov
jno
pop
inc
or
gs
aad
xchg
mov
test
mov
insl
call
add
mov
mov
in
repnz
or
stc
inc
clc
loopne
push
sbb
imul
adc
inc
and
xchg
lahf
hlt
pop
push
test
aas
inc
test
or
and
or
mov
cmp
loope
dec
cmp
mov
adcl
inc
movsl
mov
inc
add
and
inc
pop
inc
or
cltd
pop
sbb
adc
adc
jns
xchg
enter
lret
add
cwtl
jp
mov
lahf
cmp
test
jecxz
lcall
xchg
sub
cmp
pop
sub
cmp
pop
sub
cmp
pop
sub
cmp
sbb
cmc
les
jo
adc
sbb
inc
sbb
es
fdivrl
mov
in
pop
xchg
fmull
mov
inc
sbb
aam
les
and
movsl
xchg
sbb
sarb
call
cmp
jmp
cmp
sbb
je
filds
jp
mov
popf
sbb
lahf
jmp
test
cmp
inc
or
add
fstpl
cli
or
dec
add
dec
pop
xchg
jnp
lcall
je
add
xor
in
add
sbb
or
bound
js
mov
lahf
adc
sbb
mov
pop
and
fstpl
dec
cmp
mov
fisubs
dec
cmp
sub
sub
jno
cmp
jmp
imul
imul
imul
sbb
cwtl
js
and
in
cmp
icebp
ret
cmp
nop
cltd
dec
outsl
push
rclb
cmp
es
adc
aaa
mov
jne
add
and
mov
xchg
aam
loop
leave
test
sub
les
dec
sub
mov
das
xchg
dec
sti
xor
push
iret
pop
or
daa
ret
and
pop
push
sahf
fadds
dec
cmp
leave
inc
lahf
add
xor
dec
out
or
shll
fisttpll
into
push
out
aas
punpcklbw
sub
mov
jmp
dec
aaa
pop
mov
jns
js
jnp
xor
pop
pop
pop
mov
inc
outsb
and
dec
aas
stos
and
ds
mov
not
scas
les
cmp
rol
dec
inc
addb
push
test
or
inc
int
dec
mov
mov
add
pop
ret
adc
icebp
inc
xorb
inc
xchg
cltd
push
insl
mov
dec
enter
lods
mov
dec
pop
inc
or
add
jl
push
xchg
je
inc
testw
mov
mov
xchg
pusha
add
cmp
adc
push
xchg
lock
pop
jmp
pop
data16
mov
pop
pop
jnp
mov
add
sbb
stos
mov
addr16
jae
cld
clc
jb
inc
mov
inc
out
add
inc
pop
xchg
mov
jns
sbb
adc
sbb
adc
sbb
add
and
and
mov
jmp
xchg
imul
or
pushf
gs
jge
enter
pop
inc
dec
addr16
add
dec
sub
push
pop
inc
test
or
sar
lahf
jb
cmp
jbe
int
ret
fnsave
fwait
cmc
out
mov
pop
hlt
push
fistpll
mov
inc
adc
adc
in
or
add
jmp
mov
sub
test
xor
jns
push
push
gs
cmp
mov
adc
leave
pop
push
test
test
jns
mov
jecxz
and
sti
adc
adc
push
test
jne,pt
xchg
mov
jle
in
idivl
cmpsb
loop
rorb
pop
jle
into
mov
shlb
or
jmp
push
add
xchg
cmp
shll
jbe
js
lret
out
cmp
iret
adc
fisttpl
pop
mov
dec
or
lea
cmpsl
push
xor
cmp
xchg
or
cli
or
lcall
dec
or
mov
adc
mov
push
add
je
jae
jae
rcll
jb
jmp
add
cmp
or
lret
jmp
cmp
ret
test
mov
adc
push
inc
subb
mov
pop
push
push
jnp
mov
lea
jmp
inc
mov
das
in
pop
jnp
test
sbb
enter
adc
inc
sub
and
sbb
push
xchg
sbb
push
inc
lret
stc
or
leave
push
int
testb
shl
xchg
mov
fdivl
scas
shr
inc
xchg
mov
jne
pop
mov
mov
lret
addl
jle
cmp
mov
fdivr
or
push
adc
sub
gs
cmp
fildll
push
or
fcompp
sbb
push
adc
pop
jae
sub
lods
push
ret
rolb
and
xchg
ret
clc
and
or
adc
testl
imul
push
addr16
leave
jne
sub
fsubrp
out
lock
xchg
mov
inc
sub
inc
and
sub
test
ret
pop
leave
push
lret
imul
and
mov
adc
xchg
jge
test
mov
inc
mov
adc
pop
and
dec
mov
movsl
sub
push
inc
dec
dec
cmp
fisttps
mov
adc
jnp
data16
mov
or
ljmp
cmpsb
or
xchg
scas
cmp
cmpsl
push
sub
bound
xor
cli
sbb
outsl
jnp
loop
push
dec
mov
push
out
xchg
push
and
out
inc
ret
or
fstpl
popa
mov
adc
sub
ficoms
ljmp
mov
mov
testl
stos
and
out
push
cmpl
hlt
mov
mov
das
xor
daa
pusha
in
xchg
jecxz
jbe
dec
add
inc
sbb
das
std
or
cwtl
mov
jmp
push
sub
xor
inc
setnp
cmp
je
jnp
fmul
in
lret
push
movsb
adcl
and
pop
mov
cwtl
lcall
cld
xlat
and
es
cmp
mov
adc
in
or
xor
aam
inc
and
sahf
filds
mov
test
and
mov
jno
xchg
pusha
cld
movsl
mov
popf
dec
ret
xor
insb
or
scas
mov
push
jg
push
int
clc
mov
lods
jecxz
adc
mov
enter
jbe
dec
xchg
inc
lock
jg
lods
dec
mov
mov
inc
je
ja
les
cmp
repnz
lea
adc
pop
dec
lds
test
mov
jae
mov
jmp
mov
aaa
in
out
xchg
mov
shlb
jg
imul
movsl
jnp
cmpsl
mov
bound
jle
arpl
cli
push
fistpll
imul
mov
cmp
enter
or
dec
sub
push
cmp
aaa
inc
jmp
inc
inc
adc
inc
and
shlb
adc
out
inc
nop
pop
fsub
mov
imul
or
xchg
hlt
popf
dec
pop
adc
mov
jns
daa
pop
lcall
insl
jo
jns
add
cmc
cs
adc
enter
insl
popa
and
mov
cmpsl
pop
dec
mov
inc
insb
jo
scas
adc
inc
outsl
jne
push
pop
inc
inc
divl
in
arpl
daa
test
xor
dec
cmpsl
mov
mov
enter
nop
mov
jmp
sub
adc
jmp
pop
jae
push
jecxz
icebp
outsl
ja
push
or
imul
and
push
inc
call
mov
into
mov
and
enter
inc
fs
dec
outsl
adc
adc
add
adc
test
mov
popf
out
fstpl
adc
sbb
and
clc
mov
dec
mov
adc
or
shrl
jmp
lea
je
cli
pop
shr
mov
ja
mov
dec
cli
xor
push
adc
roll
mov
cmpsl
gs
xchg
adc
in
iret
xchg
sub
mov
nop
and
inc
mov
les
adc
push
and
cmp
test
in
lock
xchg
and
adc
inc
enter
std
pop
les
dec
and
sub
hlt
mov
push
cmp
pop
inc
and
pop
inc
cmc
jns
sub
sti
and
and
sub
enter
pop
add
ss
je
stc
cwtl
leave
pop
bound
or
xchg
add
pop
pop
adc
cmp
cltd
sbb
inc
pop
sar
or
push
or
stc
mov
movsl
jmp
and
aam
jno
push
pop
dec
mov
das
push
les
inc
jbe
push
ja
pop
mov
sub
adc
imul
mov
loopne
fs
fisubrs
mov
js
push
sbb
ret
add
inc
cmpb
add
jl
ja
dec
adc
out
push
sarb
or
push
mov
dec
nop
push
sbb
gs
into
in
insl
pop
sub
in
mov
cmp
setne
cmpsb
cli
push
pop
mov
mov
or
adc
lods
push
or
mov
das
inc
dec
test
clc
test
xchg
or
inc
dec
pop
pop
ret
pop
or
cmp
mov
add
xor
jmp
loope
mov
aad
and
sub
or
call
jo
pop
pop
sub
push
mov
test
scas
sub
orl
jl
push
inc
ss
cmp
adc
and
jb
dec
pop
push
dec
test
popa
lret
addr16
comiss
call
sbb
push
aas
in
rclb
ficoms
jg
xchg
into
push
dec
jns
jle
xor
pop
das
ljmp
icebp
mov
jbe
or
je
js
test
adc
mov
clc
inc
rcrl
cld
call
out
and
mov
data16
fdivrl
push
mov
or
dec
movsb
xchg
pop
inc
adc
repz
lds
subl
std
adc
mov
les
pop
pop
jg
mov
fldcw
mov
jg
shl
push
int
or
test
dec
rolb
mov
lahf
das
cld
fdivl
jo
pop
xchg
jp
mov
out
mov
jp
mov
or
call
fmuls
mov
dec
loop
bswap
or
shll
mov
test
and
lcall
pop
stos
popa
in
ljmp
stc
pop
rorb
stos
lods
les
cmpl
sub
std
jb
sbb
ud0
jbe
sbb
cmp
jns
add
repz
and
push
adc
adc
ret
dec
cmp
test
mov
push
cmpl
or
gs
xchg
jno
dec
pusha
fisttpl
clc
pushf
mov
jb
dec
push
dec
adc
jl
sub
jne
test
or
mov
inc
xor
lods
mov
add
sbb
lea
int
adc
dec
aaa
stos
mov
mov
mov
xor
push
inc
dec
jne
mov
les
cmp
and
xchg
fmull
dec
hlt
aas
dec
adc
xor
enter
and
leave
jne
int3
popa
mov
jo
test
adc
lods
push
clc
mov
xor
mov
cmp
xchg
fmull
lret
aam
pop
sbb
bound
add
dec
cmp
std
mov
pop
inc
in
add
cld
add
enter
and
pushf
inc
or
cmpl
pop
or
mov
and
or
inc
cmp
enter
test
jecxz
stos
and
xor
xlat
add
call
xchg
enter
jb
cmp
xchg
and
in
jb
cmp
lahf
and
in
jb
cmp
xchg
mov
mov
cmp
and
jno
jb
in
add
arpl
inc
inc
fadd
les
and
sbb
pop
mov
mov
lods
push
push
jb
jo
test
scas
divl
lret
xchg
xchg
hlt
mov
rorl
stos
loop
adc
or
mov
fbstp
bound
or
adc
inc
inc
and
sbb
mov
and
sub
outsl
pop
insb
cmp
add
and
push
test
mov
xchg
mov
pop
lahf
pop
out
sbb
std
gs
aam
pop
sbb
push
jp
xlat
lahf
inc
cltd
mov
test
pop
mov
ds
mov
fmull
xchg
lea
std
in
xor
ficoml
popa
insb
cmpb
dec
push
dec
loop
adc
imul
or
xor
mov
mov
repnz
setne
movsl
loop
loopne
pusha
inc
movsb
pop
lods
mov
or
xor
imul
sbb
jo
or
sti
add
inc
add
dec
xchg
inc
hlt
pop
jp
cmc
ds
mov
inc
data16
rorl
out
dec
out
ret
add
sbb
lea
cli
jl
pop
gs
push
mov
pop
movups
xor
test
loope
dec
cld
icebp
jmp
push
xor
add
add
clc
jle
jo
mov
jl
cmpb
cli
addr16
mov
add
xor
jne
lock
loope
movsb
mov
enter
add
inc
outsl
sub
sbb
dec
pop
adcb
daa
add
mov
or
pushf
cwtl
sub
push
xor
cmc
pop
push
mov
or
or
add
mov
mov
pop
sbb
jmp
mov
dec
add
sbb
mov
rorb
xchg
jp
outsl
loop
test
out
sbb
test
push
out
imul
sbb
pop
test
test
xchg
pusha
addr16
hlt
adc
mov
pop
mov
es
scas
push
xchg
push
and
rolb
xchg
dec
push
xlat
test
xchg
dec
push
or
stos
cld
dec
stos
mov
inc
addb
sbb
sbb
mov
andl
mov
sub
sbb
jmp
xchg
ss
lahf
nop
inc
dec
or
test
cmpb
clc
push
adc
or
mov
in
inc
jle
mov
mov
lea
aas
sbb
pop
je
scas
lods
xor
enter
mov
jp
pop
or
ja
jmp
jle
sbb
add
rorl
inc
cmp
push
add
adc
jae
mov
scas
push
js
ds
movsb
outsb
pop
mov
cs
call
mov
out
ds
cwtl
sbb
push
add
andl
mov
hlt
ja
lock
or
or
jb
xor
add
call
adcl
mov
ss
xchg
jnp
mov
add
pop
fs
mov
das
mov
imul
test
cmp
cmp
pop
aam
dec
xor
or
clc
dec
loopne
pop
into
and
rorb
cmp
mov
xor
mov
int3
call
xchg
nop
repz
cmp
xchg
imul
sbb
int3
jo
mov
pop
dec
aaa
sahf
mov
pop
add
outsl
call
insl
sub
rol
push
add
adc
xchg
add
mov
call
push
addb
rorl
xchg
cmp
shrb
out
test
cltd
mov
lcall
xor
rcrb
sub
xlat
and
jecxz
sbb
bound
das
imul
push
pop
push
sub
push
or
rorl
or
dec
je
add
sbb
push
mov
add
orl
sbb
sbb
loop
add
adc
adc
push
mov
xor
fistl
mov
dec
sti
loop
ret
inc
adc
cmp
or
enter
pop
stos
lret
cmp
and
pop
xchg
mov
out
jmp
sub
insl
push
shr
leave
loopne
mov
jne
nop
sbb
or
adc
int3
mov
cmp
repz
and
flds
jmp
mov
insb
mov
out
or
xor
mov
dec
adc
or
sbbl
push
pop
notb
hlt
jge
add
cmp
mov
insl
dec
call
or
jmp
push
mov
mov
xor
jae
jmp
pop
or
ds
sub
jecxz
cmp
lret
cmp
pop
int3
adc
xor
iret
scas
test
sub
dec
icebp
pop
pop
or
inc
leave
loop
jno
addl
test
lsl
pop
out
fcomps
cmpsb
cmp
ja
popa
mov
mov
mov
and
inc
flds
ljmp
pop
fisttpll
dec
fisttps
push
xchg
adc
aaa
adc
mov
cs
fcomps
xor
push
jo
sub
sub
pusha
dec
cwtl
inc
or
mov
add
add
rclb
out
add
push
inc
adc
or
scas
and
inc
sub
adc
sub
orb
add
or
push
dec
sbb
xor
divps
ljmp
push
mov
jnp
sub
inc
sbb
xchg
cltd
mov
or
adc
and
outsl
add
inc
fldt
fstps
nop
adc
pop
fucomp
pop
sbb
inc
pop
mov
lods
and
fistpll
cs
insb
jo
movsb
adc
mov
add
add
fcoml
mov
and
jge
out
xchg
lret
and
mov
jo
int3
dec
lcall
imul
sbb
cld
dec
call
push
outsl
int
pop
sub
fs
adc
out
add
or
mov
xchg
adc
dec
nop
test
push
cmp
mov
dec
cwtl
jnp
xchg
fneni(8087
and
add
cld
lea
and
dec
xchg
and
pop
add
pop
jo
add
sub
adc
bound
mov
test
pop
test
ret
and
sub
fs
loopne
dec
pop
inc
add
jno
add
xor
cmp
aaa
inc
ss
adc
sbb
mov
mov
dec
out
or
jb
inc
je
add
jg
xchg
pushf
movsb
dec
pop
xor
ja
aad
xchg
pop
sub
xor
add
mov
pop
push
pop
push
outsl
das
sbbl
mov
adc
je
add
mov
sub
mov
pop
aam
xor
mov
mov
icebp
stos
mov
jge
xchg
jge
pop
xor
jb
sbb
push
mov
test
push
or
push
into
aad
xor
mov
sbbb
jae
dec
inc
pop
mov
dec
pusha
ljmp
push
and
dec
fcomps
xor
push
or
je
addr16
pop
inc
cwtl
push
dec
dec
adc
and
bound
jne
push
mov
or
hlt
call
leave
push
push
insl
mov
test
cmp
roll
enter
dec
mov
push
aam
imul
data16
test
lret
rolb
gs
dec
jne
xchg
imul
dec
push
inc
jae
cmp
mov
out
jge
rcrb
in
mov
scas
repnz
and
or
push
outsl
push
inc
sbb
adc
dec
test
cmc
out
loope
outsl
push
je
gs
jns
outsl
or
xchg
jo
add
xor
push
xchg
nop
xor
cmp
inc
lahf
cmpsb
add
push
or
in
jb
inc
cmovbe
adc
adc
adc
call
or
push
not
mov
nop
adc
or
or
dec
gs
inc
outsl
test
cmpsl
out
xlat
enter
push
jne
inc
sbb
jns
mov
push
add
fmull
jns
mov
cmp
insl
push
mov
cmp
stc
into
jge
aad
insb
xor
fmuls
sub
inc
jbe
gs
or
push
push
adc
jge
push
lret
notl
leave
mov
out
add
jne
jmp
or
mov
inc
imul
jbe
cmp
mov
jne
lods
adc
inc
inc
imul
aas
xchg
pushf
enter
or
or
clc
mov
xlat
outsb
test
push
ja
pop
dec
inc
dec
adc
or
jb
pop
test
xchg
test
add
scas
push
or
das
dec
push
nop
or
hlt
loopne
xchg
mov
jb
daa
bound
pop
pop
fstps
icebp
push
inc
arpl
dec
lock
lea
testb
aam
push
or
pop
and
adc
out
xchg
push
mov
pop
mov
pop
fs
andb
nop
shrb
adc
inc
adc
jp
adc
jp
and
enter
jo
in
xchg
and
mov
adc
mov
faddp
dec
int
leave
xor
or
mov
out
das
adc
adc
cwtl
mov
or
jnp
sub
mov
aas
and
pusha
cmpsb
fs
sbb
inc
add
enter
and
or
add
enter
scas
adc
test
xchg
and
add
dec
jl
je
adc
or
stos
adc
test
clc
adc
add
inc
stos
cld
rcrb
adc
push
adc
and
mov
inc
jo
add
push
push
fsubrl
pusha
or
adc
sti
lahf
stos
fcomp
sbb
int3
loop
int3
jns
or
jo
jl
inc
fsubrs
leave
in
dec
sbb
add
pop
jge
inc
cmp
jnp
sub
inc
lods
stc
sub
adc
adc
popaw
cwtl
ficoml
out
nop
je
pop
sbb
cmp
jo
lahf
or
nop
in
scas
movsb
mov
jle
push
or
sbb
sub
or
scas
or
clc
mov
add
scas
pop
rorb
lods
xchg
mov
xor
andps
cli
insb
les
mov
adc
mov
xor
pop
vcomiss
test
int3
adc
jg
mov
push
sbb
xchg
xchg
arpl
insb
mov
fisttps
je
sub
adc
repnz
pop
test
adc
adc
xchg
sti
xor
inc
and
or
inc
insb
or
pop
adc
adc
jg
loop
xchg
adc
sbb
pop
jle
aam
add
fmul
and
pop
pop
xchg
push
movsb
nop
nop
inc
subb
sbb
cmpsb
inc
add
mov
and
xor
jo
adcl
cmp
cmpsb
add
scas
cmp
and
outsl
jo
and
in
mov
or
cmp
fs
sub
mov
icebp
loopne
sbb
fs
mov
loop
adc
mov
cld
or
xor
cmpl
sub
or
jl
ret
push
test
and
bound
sbb
adcb
nop
mov
cmp
mov
fcoms
or
and
imul
xchg
adc
call
lcall
mov
or
pushf
daa
and
inc
subb
mov
adc
andb
loope
ret
push
lds
mov
mov
push
xor
and
sbb
in
or
ret
adc
xor
mov
lock
pop
les
in
lds
sbb
or
adc
shlb
data16
xchg
or
mov
daa
push
je
loopne
pop
adc
cmp
mov
faddp
rolb
fdivrl
leave
pop
orb
cwtl
and
test
lret
or
pop
push
xor
test
mov
xor
lock
fmul
or
or
jo
adc
outsb
fs
jnp
and
and
inc
fimull
adc
adc
in
aam
mov
and
mov
out
xor
stos
mov
inc
jl
mov
lods
adc
les
daa
jl
mov
sar
or
jp
add
or
sbb
xor
sub
jl
andps
mov
pushf
in
or
or
in
insb
adc
ss
sbb
and
fsubrl
and
dec
push
xlat
popf
std
ljmp
adc
enter
mov
rolb
push
adc
insl
dec
jnp
mov
xchg
inc
movsl
in
or
pop
gs
xor
adc
mov
xchg
nop
jo
xchg
sbb
insb
cmp
clc
or
or
inc
je
mov
cmp
dec
adcb
push
lock
sbb
stc
add
xchg
inc
or
push
cs
ret
imul
rcl
call
mov
rolb
rcr
sub
jo
push
xchg
sub
xchg
sbb
loopne
adc
cwtl
xor
or
add
std
add
adc
stc
add
enter
push
jp
orb
adcb
icebp
mov
and
adc
les
inc
pop
adc
sbb
stc
call
jp
sbb
inc
inc
push
adc
pop
inc
push
dec
mov
aas
les
inc
inc
cmp
inc
sbb
subb
mov
sbb
out
test
pop
fcomps
je
or
mov
sub
cwtl
mov
ret
pushf
inc
dec
inc
les
stc
jecxz
dec
and
test
shll
ret
xor
imul
arpl
jp
and
inc
sub
pop
and
aam
shlb
cmpsb
xchg
or
mov
adc
and
push
movsb
cmp
loop
in
pop
inc
popl
int
dec
addb
or
out
dec
out
addr16
sbb
call
adc
test
insl
inc
sbbb
or
js
inc
sbb
jl
adc
sbb
cltd
jns
sbb
cs
pusha
inc
jo
int3
cli
pop
adc
add
jp
jl
jle
jle
jle
jg
jle
pop
repnz
icebp
iret
lock
xor
xchg
push
and
adc
sbb
data16
dec
shll
and
inc
sub
leave
and
sbb
push
nop
in
sub
adc
sub
jp
lcall
imul
adc
pop
push
fimuls
decl
add
pop
push
and
add
lahf
and
mov
xor
in
js
ss
dec
enter
sbb
sbb
adc
adc
aam
arpl
sbb
push
in
mov
arpl
imul
jns
imul
pop
fcomps
mov
mov
loopne
aaa
mov
xor
cmp
shlb
mov
xchg
adc
push
sbb
adc
mov
lods
sbb
and
cmpsb
xchg
add
dec
test
dec
fs
mov
popa
jo
mov
jns
dec
add
jno
dec
aad
mov
mov
icebp
bound
xor
push
push
jle
gs
out
jecxz
xchg
mov
fwait
mov
pop
xlat
sbb
cmp
jne
push
clc
add
je
ja
fcoms
jae
cmp
sub
add
add
pop
cmp
xorb
aaa
and
mov
ret
in
and
addr16
jb
sub
mov
pop
mov
and
sub
adc
or
pop
jae
add
xchg
add
jne
mov
jne
mov
xor
test
or
dec
pop
cmp
nop
jle
xchg
in
sub
pop
je
test
inc
or
adc
jmp
xchg
lret
popa
lds
sub
nop
sbbl
xchg
inc
cltd
addb
out
xchg
js
movsb
push
inc
fcomp
leave
cld
jne
xor
xor
jo
adc
push
outsb
nop
adc
add
in
push
sub
decl
mov
and
in
jp
or
inc
bound
push
adcl
mov
fiadds
mov
int
jle
cli
std
inc
add
pop
pushf
and
jle
jns
loope
push
or
cmp
test
lods
imul
movsb
xchg
call
jb
and
and
add
int
inc
arpl
inc
inc
insb
loop
movb
fstl
push
push
adc
mov
dec
cmp
lods
push
cld
ljmp
or
push
pop
or
and
inc
test
push
push
arpl
mov
push
inc
dec
in
rorl
add
pushf
repnz
fadds
cmc
adc
das
dec
and
out
ss
test
xor
enter
dec
or
je
bound
xor
test
aam
jno
lods
in
negl
push
lds
cwtl
add
setge
lods
add
fimull
xchg
adc
cmp
out
fwait
adc
and
inc
inc
push
mov
lcall
and
repnz
or
dec
adcb
std
push
mov
xchg
ret
xor
xor
xor
dec
ffree
enter
fcmovu
pop
xor
stc
aaa
ss
in
inc
push
aad
mov
pop
jmp
jle
add
xor
mov
mov
mov
cltd
pushf
int3
or
in
mov
inc
adc
lea
imul
inc
popf
sbb
push
mov
mov
out
repz
inc
push
lods
push
pop
aaa
daa
out
lds
push
jl
inc
lcall
sub
push
dec
jne
sub
cmp
xor
xor
add
jecxz
and
dec
push
push
pop
xlat
mov
inc
inc
ret
ljmp
sbb
inc
lock
popa
cmpb
xchg
xchg
xchg
iret
cmpsl
frstor
faddp
insl
sub
clc
loop
or
clc
and
mov
jnp
roll
loop
ds
sti
add
cmp
cmp
sub
pop
in
inc
adcb
sub
call
pop
mov
mov
shr
xor
xor
std
clc
sti
and
pop
xchg
sbb
pop
xlat
jp
fbld
adc
inc
cmc
int3
or
inc
cmp
call
rorb
out
cmpb
push
lods
inc
push
pop
inc
lods
sbb
in
lahf
es
jns
cmp
jne
sub
xchg
sub
push
inc
bnd
cmp
sbb
popa
jle
ret
imul
ds
pop
inc
dec
cmp
test
pop
call
mov
test
jb
mov
ficoml
sub
cmp
pop
push
dec
or
iret
test
jmp
adc
or
mov
pop
movsl
and
xor
sub
cmpl
jne
sub
xchg
sub
movsb
xchg
hlt
jge
inc
call
imul
or
lods
push
jmp
test
dec
dec
dec
add
pop
jle
xchg
or
inc
jmp
or
call
jmp
mov
stos
in
or
scas
xor
loopne
shrb
cmpb
je
dec
sub
push
cmpb
inc
test
push
mov
das
push
push
mov
out
adc
and
movsb
pop
push
stc
jnp
add
cmp
cwtl
std
adc
xchg
sub
lods
je
imul
ja
mov
and
fcmovbe
pop
ds
xchg
push
insb
mov
and
mov
mov
int3
jle
inc
cwtl
pushf
xchg
pop
jmp
jg
inc
popa
inc
mov
or
or
jae
mov
cwtl
aas
mov
mov
movsb
lret
push
cltd
test
cmp
sbb
sbb
int
pushf
daa
jbe
mov
dec
idivb
pop
jnp
and
cltd
sub
push
sbb
cmp
mov
je
sbb
xchg
int3
adc
movsb
mov
jbe
push
ror
jo
out
jecxz
jp
dec
jl
dec
ret
adc
cmp
dec
icebp
orl
into
push
or
aam
dec
scas
je
js
fiadds
pop
pop
dec
inc
xchg
in
scas
fsubrs
cmp
pop
adc
test
or
ret
jle
sbb
fcmovu
dec
add
dec
xorl
ss
repz
cli
xchg
dec
xchg
aad
test
in
lcall
ret
and
fwait
cmc
sahf
cwtl
mov
cld
and
mov
or
test
mov
cmp
inc
mov
shrl
fldenv
sub
sbb
adc
aam
xor
mov
enter
or
cld
jne
or
xchg
add
lea
mov
add
fmull
mov
cmpsl
sub
xor
ret
out
xor
jae
and
inc
push
inc
jmp
clc
adc
pop
sbb
out
orl
out
push
pusha
cld
andl
movsl
xchg
mov
mov
mov
or
adc
sbb
pop
and
adc
fadds
adc
jmp
js
xchg
loope
pop
sub
adc
inc
sbb
adc
sti
pop
push
call
mov
fs
test
or
or
data16
xchg
and
popf
mov
and
rcrb
or
mov
test
cs
jb
dec
dec
push
xor
mov
lds
ss
sahf
ljmp
jbe
xor
push
inc
enter
add
jmp
sub
and
cwtl
outsl
lods
sub
sbb
mov
adc
nop
or
sub
and
push
leave
pop
faddl
sub
fisubrs
ret
repz
das
adc
mul
jns
lret
gs
mov
xchg
dec
xor
jne
sbb
add
mov
dec
cld
int
mov
and
lahf
cmpsl
loope
cmp
push
loope
in
jo
lock
popf
adc
sub
popf
dec
inc
xchg
imul
push
dec
mov
dec
and
roll
in
xchg
xchg
jae
stos
mov
fs
push
bound
and
lods
sahf
and
addr16
and
adc
shlb
push
inc
sbb
cmpb
add
push
jg
jl
insl
call
loope
or
mov
mov
fs
popf
add
and
sbb
push
repz
and
leave
fildll
lahf
jge
mov
inc
mov
mov
repnz
dec
adcl
sbb
cmp
enter
clc
xchg
js
mov
mov
xchg
jge
pusha
cld
movsl
push
mov
push
test
mov
movsl
xchg
adc
mov
push
enter
test
xor
sub
iret
scas
add
call
sub
hlt
adc
loope
or
hlt
stos
sub
adc
push
and
or
lock
and
pop
pop
out
push
cmpsb
sbb
push
add
or
mov
and
pop
leave
mov
incl
and
clc
mov
test
mov
xor
out
push
or
mov
lods
mov
imul
add
cmp
mov
lahf
and
xor
sub
das
inc
stos
mov
adc
jae
ja
clc
cs
lcall
mov
push
inc
sub
stc
test
or
sbb
xchg
enter
add
lea
mov
inc
in
ljmp
inc
add
mov
mov
pop
xchg
push
mov
and
jo
sbb
les
jb
popf
push
xchg
mov
nop
mov
adc
push
mov
cs
iret
ret
addr16
imul
or
dec
jb
cmp
out
mov
lods
psadbw
and
addb
jle
ror
leave
jns
in
shrl
push
sub
adc
dec
or
push
add
or
shrl
imul
sub
cmp
jge
dec
pop
add
adc
jne
fstpl
jb
leave
loope
shll
jle
xchg
mov
push
mov
pop
andb
pop
popa
rorb
dec
repnz
pushf
mov
je
imul
xlat
or
imul
xchg
xchg
or
lret
int
fstpl
mov
push
dec
rclb
dec
cs
inc
mov
clc
je
mov
xor
adcb
hlt
scas
mov
add
sbb
mov
dec
sbbl
loopne
cmovge
dec
addb
loopne
dec
sbb
pusha
xchg
stos
sarb
jle
mov
sbb
scas
dec
push
push
mov
mov
pop
shl
aas
jmp
clc
pop
push
filds
sub
jg
dec
rcl
mov
jne
loopne
inc
sbb
les
sarl
mov
movsb
rcrb
int
mov
jg
adc
lea
xor
je
and
jg
out
push
pop
lds
mov
xchg
mov
cmpsl
addr16
cmp
jae
imul
cmpsl
sub
xchg
adcb
add
out
fwait
mov
pop
lea
insb
jne
lea
cmpb
or
cwtl
jne
mov
dec
sub
cmp
adc
cmovae
pop
fs
ret
data16
jno
lret
test
outsl
and
scas
push
sub
dec
adc
subl
cltd
arpl
test
sub
popf
ss
lret
xchg
roll
xchg
aaa
popf
aaa
pusha
ret
aad
dec
add
mov
leave
enter
mov
add
sar
shll
or
negb
dec
push
jge
nop
push
imul
xlat
pop
mov
pop
pop
sar
mov
stos
out
cmp
push
iret
call
out
je
imul
xchg
add
pop
ss
jg
loope
xchg
xchg
out
inc
or
sub
fsts
mov
mov
aad
das
inc
sbb
std
mov
cmp
scas
jle
add
sbb
cmp
xchg
mov
inc
jl
push
push
inc
and
add
pop
jmp
ret
xchg
addl
fisubs
mov
loopne
jnp
pusha
nop
in
mov
dec
inc
mov
not
decl
or
pop
add
adc
je
femms
cmp
aam
pop
add
push
ret
pushf
xlat
jb
xchg
adc
test
mov
jne
xor
jmp
inc
add
jne
inc
decl
in
mov
jno
imul
jp
sub
cmpsb
or
xchg
dec
cmp
mov
sbb
mov
inc
stos
xchg
mov
je
fdivrs
in
adc
stos
inc
xchg
repnz
jle
inc
lock
outsl
cmp
sub
inc
rorb
into
dec
ret
mov
pop
les
mov
imul
mov
push
fstl
cli
test
add
cli
mov
mov
daa
das
fistps
sbb
addps
enter
icebp
cmp
fisubrs
jp
lds
bound
dec
push
out
pushf
sub
cmpb
adcb
and
mov
pop
jmp
arpl
fsubl
or
cmpsl
pop
les
lods
jp
and
push
dec
clc
int3
mov
mov
lahf
mov
fs
sub
and
or
pop
mov
inc
negb
cmp
rcll
lods
mov
out
addr16
daa
pop
sub
push
mov
test
call
jge
and
jmp
fprem
test
lods
xchg
into
shl
das
lret
xchg
inc
push
out
adc
mov
lods
cmp
js
add
inc
rcll
mov
adc
enter
mov
fcmovbe
inc
sbb
mov
or
cmpl
test
jmp
cmpsb
test
sub
push
mov
jle
xchg
xchg
enter
lret
xchg
repz
and
icebp
xor
push
out
das
in
cmp
xor
call
or
push
jge
roll
or
es
dec
rcll
scas
mov
sbb
popf
add
in
lcall
int3
scas
adc
data16
push
and
pop
shl
pop
mov
cmp
lock
cmpsb
adc
cmpsl
push
xor
clc
imul
mov
fsubs
sbb
jno
push
mov
leave
into
add
stos
push
mov
pop
aad
hlt
js
dec
dec
add
aad
mov
dec
aam
lcall
sub
sbb
and
cmpsl
movsb
imul
and
inc
push
lret
push
imul
or
sbb
adc
cmp
or
shll
fs
xor
sub
jno
xor
pop
or
and
loopne
mov
inc
jb
mov
sarb
jg
iret
dec
push
mov
mov
mov
mov
mov
pop
and
mov
pop
mov
mov
outsb
or
scas
xchg
flds
sti
inc
mov
fisubl
sub
mov
daa
jmp
dec
iret
lods
push
int3
dec
pop
pusha
jnp
jg
push
and
testb
mov
jb
jl
or
call
pop
je
adc
leave
out
jecxz
jnp
movsl
push
dec
or
dec
movb
pop
shrb
loopne
aad
icebp
mov
cmp
clc
jno
mov
sbb
std
cmpsl
fldenv
in
jp
mov
cs
das
cmpsb
in
cmc
add
pop
andl
mov
cli
pop
test
and
cmc
fistpl
dec
mov
xor
jno
scas
in
das
push
adc
fwait
jmp
sub
xor
shr
cld
movsb
xchg
cmc
call
mov
mov
aas
sub
jns
test
call
movsl
mov
arpl
jg
stc
jg
pop
ret
ficoms
mov
inc
jmp
andl
aam
aaa
inc
in
mov
cwtl
mov
pop
jne
mov
xorl
cld
inc
adc
push
sbb
jne
inc
sbb
cmp
sbb
cmc
xchg
jl
push
xchg
clc
inc
sti
xchg
and
inc
adc
cmp
out
dec
ljmp
adc
jae
jg
iret
leave
jbe
dec
cltd
enter
and
mov
and
mov
dec
les
lods
rcr
cmp
push
mov
test
rclb
adc
mov
xchg
sub
mov
pop
jmp
cmpsl
ret
sub
or
sbb
je
xor
add
mov
shlb
jmp
push
xor
dec
in
orb
jp
or
xor
jmp
jno
xor
pop
ret
std
daa
lea
adc
xor
ret
jl
inc
mov
insb
iret
jl
sbb
out
mov
mov
jmp
int
shll
sbb
pusha
xchg
pop
sub
stc
cli
fcoms
iret
sub
and
pop
int
es
mov
mov
inc
icebp
mov
loop
push
push
clc
jns
lock
jg
sub
dec
das
push
arpl
mov
daa
negl
enter
mov
push
gs
jmp
pop
pop
stos
mov
dec
mov
lods
test
xor
lock
and
mov
rclb
xchg
add
repz
inc
rcll
inc
adc
mov
add
inc
mov
mov
in
adc
loop
dec
cli
pushf
scas
xor
fs
mov
call
add
scas
mov
test
clc
call
xorb
jmp
adc
jb
mov
pop
sub
mov
push
or
or
jb
mov
or
adc
stos
pop
cli
je
call
cld
ljmp
lods
cmpsl
lret
and
lahf
pop
and
or
stos
pop
movsl
clc
mov
jne
or
pop
xor
jge
push
and
iret
xor
push
mov
call
cltd
shll
adc
cmp
pop
rep
mov
cmpsb
adc
sbb
das
repz
movsb
mov
push
popf
fiaddl
xchg
or
test
xchg
sbbb
adc
mov
pusha
shrl
push
xor
fwait
lea
mov
pop
sahf
push
dec
and
in
lahf
and
xchg
loop
fwait
inc
ljmp
xor
out
fimull
lock
dec
mov
sbb
jg
test
jne
cld
in
mov
pop
dec
push
jnp
sub
iret
out
int3
mov
fnstenv
jo
leave
mov
int3
call
xchg
mov
xor
jo
or
mov
xchg
jne
cmpsl
xor
mov
sub
dec
mov
jmp
push
or
pop
push
lods
and
fdivr
add
shr
cmpsb
dec
inc
pop
sub
push
outsl
popf
rcll
rcrb
and
sbb
dec
outsb
add
pop
bound
push
and
sarl
pop
push
mov
add
jnp
push
fucom
insb
scas
int3
stc
cld
xchg
and
sub
fs
loope
cmpsb
cmp
cld
sub
or
int
repz
mov
je
call
mov
xchg
or
cli
je
nop
addr16
mov
xchg
xchg
mov
jae
pop
jmp
adc
or
inc
and
jge
push
outsb
cmp
cli
cwtl
adc
xchg
inc
into
mov
enter
pop
sub
test
inc
mov
jge
fs
mov
movsl
filds
and
dec
jb
push
cmp
cmpsb
enter
cmp
out
and
pop
pop
mov
cmpsb
mov
and
push
xlat
mov
leave
push
push
sbb
mov
push
call
fiadds
xor
insb
xchg
lret
mov
or
cmp
xorb
mov
mov
adc
cmpsb
call
rcrl
lea
repnz
js
sub
enter
push
mov
mov
hlt
into
in
pop
sub
fists
je
pop
mov
insb
sbb
clc
or
dec
push
mov
jae
loop
mov
dec
daa
fldt
adc
ficoms
or
adc
sub
mov
push
movsl
call
dec
sub
je
push
fimuls
mov
lret
clc
jmp
popf
bound
mov
jb
cmp
adc
mov
push
fists
mov
jp
cld
xchg
cwtl
xchg
push
fwait
adc
mov
sarb
jnp
addr16
aaa
out
push
enter
mov
mov
or
dec
je
adc
aaa
pushf
fimull
mov
aad
push
and
bound
jge
sub
push
scas
xchg
mov
pop
out
test
pop
mov
test
sub
shrb
jb
in
daa
sbb
cmp
and
imul
mov
sub
addb
xchg
stos
incl
fs
or
aaa
jp
shrl
ja
pop
and
imul
loop
shrl
addl
mov
xchg
in
out
xlat
adc
mov
sbb
out
fstpl
adc
inc
xchg
std
imul
testb
add
pop
sub
call
std
add
and
inc
and
pop
push
test
mov
jne
testb
orb
mov
lret
inc
push
and
mov
fisubl
repz
cmp
jnp
aaa
sbb
jg
mov
sbb
push
and
or
add
test
mov
or
roll
adc
adc
mov
push
dec
sub
mov
cmp
rclb
push
and
xchg
adc
subb
out
push
xchg
mov
enter
mov
sub
add
jmp
mov
jmp
adc
and
mov
lods
mov
into
lea
push
rcrb
and
cmpsb
inc
and
dec
xchg
enter
shll
jne
add
mov
adc
test
sbbl
inc
sub
xor
repnz
shrb
xor
add
les
inc
or
pop
lds
or
adc
or
xchg
push
in
lods
push
in
outsl
sbb
sub
xchg
pop
or
pop
pop
test
or
incl
jmp
mov
daa
or
pop
std
xor
dec
int
gs
sub
dec
cld
cli
mov
or
arpl
aas
repz
push
or
jmp
mov
fcmovb
dec
loope
push
sbb
add
jmp
or
imull
and
or
jg
das
pop
dec
push
repz
jle
shll
xor
scas
adc
data16
push
fisttpll
fnstsw
or
mov
outsb
add
mov
sbb
repnz
mov
sar
cmp
mov
pushf
pop
gs
push
cld
dec
aam
push
sbb
scas
addb
dec
test
repz
shll
lock
jae
xor
add
mov
mov
jnp
aad
pop
mov
push
nop
jbe
sbb
icebp
sub
test
repnz
or
dec
sub
dec
mov
shl
sti
ret
pop
aam
data16
jle
dec
push
cltd
sub
test
cmpsl
les
inc
mov
fldl
xchg
out
cmpsl
cwtl
lret
mov
jne
jmp
add
shr
inc
add
mov
sub
mov
or
mov
push
jg
cmp
pop
jl
lea
int3
dec
cmp
pop
lock
mov
or
mov
push
inc
dec
sbb
mov
clc
jle
adc
and
and
or
jl
aam
pop
jl
pusha
shl
lea
sbb
in
cmp
sbb
adc
inc
test
es
or
push
push
jmp
es
lret
push
dec
dec
mov
mov
dec
mov
jl
mov
addb
andb
mov
mov
and
inc
jle
mov
inc
pop
lods
cmp
mov
repz
dec
mov
outsl
mulb
movq
mov
and
int3
inc
lock
fsubs
pop
add
or
adc
aad
sub
add
xchg
sbb
xor
inc
fs
mov
pop
loop
xchg
push
roll
subl
jb
jmp
jl
mov
or
jbe
es
pop
mov
or
inc
cmovle
test
jne
mov
imull
test
std
xchg
mov
test
xchg
sahf
cmp
cwtd
das
out
cmp
ljmp
imul
jmp
mov
test
cmpl
mov
jbe
add
call
aad
out
xchg
mov
lds
stos
cmp
xchg
add
popa
cmp
push
jmp
pusha
inc
cltd
push
or
push
out
js
je
jns
ss
sub
loopne
adc
inc
arpl
loopne
mov
pop
or
loop
or
pop
dec
mov
mov
pop
ja
repnz
jne
sbb
xor
inc
adc
pushf
ror
pop
xchg
cwtl
in
hlt
adc
mov
leave
or
xchg
addr16
aas
dec
mov
imul
cmc
push
and
lock
jbe
push
decb
movl
push
sub
aas
ficomps
or
js
push
jmp
lret
aaa
cltd
call
inc
or
dec
add
jmp
lea
sti
daa
mov
leave
clc
add
cltd
sub
pop
sbb
mov
jg
jg
mov
pop
cwtl
push
gs
daa
ja
dec
xchg
notl
insb
xchg
rol
rcll
cwtl
fistl
mov
jge
cmp
mov
pop
sub
cwtl
cli
and
add
imul
dec
int
leave
hlt
and
cmp
test
loope
int
iret
aaa
xchg
decb
ret
add
fnclex
jb
add
clc
iret
sbb
and
xchg
cmp
das
test
mov
or
enter
shll
jae
sub
rcrl
xchg
mov
xchg
bound
fcoml
mov
or
imul
inc
push
ret
cld
scas
int3
pop
fdivr
sub
out
add
call
sbb
test
popf
out
sub
test
push
xorw
lret
loope
leave
mov
and
lea
dec
mov
pop
popa
int3
pop
int3
test
pop
out
cli
push
repnz
pusha
sbb
in
int
loop
pop
sahf
adc
and
xchg
rolb
xchg
jbe
inc
cli
xchg
shll
arpl
xor
adc
xchg
aaa
sub
fmull
mov
cmp
fdivrl
fcmovnb
shrl
and
and
out
add
and
mov
adc
mov
ja
mov
jae
sub
mov
into
es
cmpsb
movsb
push
push
add
in
inc
xor
jae
pop
cld
scas
inc
iret
add
jmp
or
jmp
or
adc
or
add
sbb
pop
mov
outsl
hlt
lahf
out
loopne
mov
or
and
fstpl
in
mov
mov
loopne
mov
call
jae
lahf
rcrb
xor
add
int
pop
xchg
dec
subb
out
cmpsb
jg
inc
jecxz
notl
jge
stos
adc
xor
mov
jo
xchg
xor
or
testl
pop
fmulp
cmp
loope
loopne
daa
sar
push
adc
cmp
push
lds
or
insb
adc
cmp
inc
cmpsb
adc
or
push
adc
shrl
nop
push
es
sbb
adc
or
jecxz
push
mov
jne
or
outsl
push
pop
shl
leave
icebp
jg
xchg
mov
mov
xor
push
and
dec
add
cmp
aad
xchg
or
clc
out
sub
aad
es
push
and
or
cmp
mov
dec
rol
push
cmp
mov
pop
mov
sbb
adc
test
xchg
lods
xchg
dec
mov
adc
cmp
push
hlt
sti
pop
dec
rorb
rorb
dec
leave
repnz
cmp
roll
add
adc
jb
and
mov
xor
test
jle
adc
movsl
cmp
and
shlb
pop
inc
imul
js
fisttps
or
pop
loope
lahf
add
js
das
fcoml
mov
mov
lods
and
sbb
push
jnp
shrb
xchg
inc
xchg
mov
das
sbb
sbb
aam
push
add
or
push
sub
mov
aad
sti
cmp
xchg
test
push
jmp
cmp
js
jne
shlb
aam
cld
cld
xchg
in
roll
je
mov
cld
pop
and
nop
repz
mov
ret
add
fisubs
mov
rcr
iret
fcompl
ja
fsubrp
sub
cs
jne
ret
call
and
add
lea
mov
inc
xchg
sbb
mov
arpl
xchg
je
rcll
inc
or
test
sbb
jle
lock
popf
out
jno
loope
cs
cmp
rolb
pop
hlt
inc
dec
loope
add
push
rcll
push
lock
repnz
in
imul
xchg
fstl
push
movsl
out
push
jmp
outsb
addr16
jmp
mov
adc
add
in
ljmp
js
das
daa
daa
add
mov
roll
add
xor
sub
mov
pop
jge
mov
lret
js
stos
cltd
es
test
cmc
pop
cld
cwtl
dec
stos
frstor
roll
xchg
adc
mov
inc
cmp
inc
jb
cld
xchg
push
dec
out
xchg
jge
clc
jb
sarb
dec
inc
rcr
sti
imul
insb
jg
das
and
adc
jg
add
mov
lahf
faddl
sbb
cld
imulb
jmp
jns
imul
js
pushf
loopne
unpckhps
sub
je
inc
adc
repnz
pop
repz
add
decl
push
or
dec
scas
jae
mov
or
repz
or
stos
mov
repnz
imul
rol
xchg
stc
test
andw
pushl
inc
mov
fld
test
dec
mov
nop
loopne
mov
push
shlb
lret
push
cmp
xchg
mov
fldcw
mov
inc
add
les
or
insl
test
pop
sub
push
adc
jnp
sbb
inc
push
jg
sub
mov
cmpsl
leave
dec
pop
pop
mov
in
and
push
and
ficoml
cvtps2pd
sbb
test
xchg
pop
rcrl
or
sub
popa
adc
mov
ja
outsl
out
fwait
shll
and
sbbl
roll
cli
adc
mov
mov
mov
pop
mov
fsubrs
in
les
cmp
stos
push
mov
sbb
lds
xlat
jo
sub
pop
dec
mov
movsb
and
inc
adc
push
fdivrs
xor
fst
outsb
fldl
push
xchg
je
rorb
xor
sbb
adc
or
sbb
dec
fildll
cmc
subl
inc
js
mov
add
aad
or
or
sarl
jno
adc
movsb
cmp
hlt
sbb
push
pop
jno
mov
fisttpl
fs
mov
inc
int
mov
int
clc
decl
lahf
ljmp
adc
or
dec
jb
adc
mov
push
movsb
call
lret
lea
add
dec
mov
subl
and
jmp
and
stos
xchg
fdivrs
and
push
mov
inc
inc
cmp
cmpsb
cmp
add
pop
add
sub
in
dec
mov
or
cmp
jne
nop
adc
lock
mov
psrld
sub
mov
fstpl
lds
lds
fsubrp
imul
int3
push
xchg
test
jl
cld
push
imulb
dec
std
pop
leave
fcomps
push
adc
fs
mov
inc
rclb
aaa
xchg
jnp
xchg
jp
sbb
xor
or
push
mov
leave
pop
sub
sbb
leave
adc
add
xlat
sbb
inc
into
pusha
aaa
jne
les
fisubs
mov
mov
fsubr
sbb
pop
roll
adc
mov
and
pusha
push
jge
xchg
daa
and
les
push
xchg
imul
dec
inc
inc
xor
ljmp
xchg
lods
xchg
or
std
fwait
or
in
inc
mov
xor
mov
sub
es
inc
fcoms
or
xchg
imul
or
pushl
dec
out
loopne
inc
ljmp
jnp
jb
mov
mov
or
jb
clc
inc
inc
inc
or
jbe
scas
inc
fs
fsubr
sbb
mov
sti
sbbb
inc
dec
cltd
aas
nop
jne
repnz
aaa
into
fbstp
mov
sbb
inc
jmp
mov
js
cltd
ja
repz
push
cmp
cli
movl
decb
lret
jmp
jne
pop
rorb
jne
dec
pop
scas
popf
call
dec
jb
xchg
mov
stc
pop
adc
push
ja
xor
push
ret
cmp
or
pop
mov
aas
loopne
in
test
cmp
and
inc
loopne
aas
push
dec
xor
mov
xchg
mov
arpl
shrb
aas
jne
dec
testl
roll
add
in
push
fiadds
mov
mov
divl
push
inc
je
pop
sub
adc
mov
sub
repz
mov
cld
xor
movsb
out
test
out
mov
pop
dec
mov
adc
mov
jl
xor
adc
xchg
cli
sub
mov
sub
cmp
mov
xchg
sbb
daa
cli
inc
pusha
jae
inc
movsl
pop
mov
std
popf
jge
psubb
inc
inc
shll
shrl
xorb
lods
jne
lock
pop
std
out
adc
in
addb
jge
shlb
push
cmp
data16
lea
pop
mov
pushw
push
jmp
cwtl
sub
shr
and
sub
iret
ret
pop
cmpsb
push
add
inc
les
mov
mov
insl
call
fdivrs
cmp
arpl
xor
add
push
std
mov
sahf
fs
leave
jle
or
cmp
add
clc
xchg
push
int
dec
sub
mov
jecxz
addr16
mov
aaa
sbb
pop
jb
repnz
adc
es
adc
push
in
inc
xchg
and
add
mov
xchg
dec
mov
xor
insb
rcrl
lret
in
mov
lds
inc
testl
mov
push
add
and
inc
jb
scas
adc
sub
addb
ror
inc
jmp
jge
popa
mov
sub
mov
sub
and
push
xor
jne
sub
pop
xchg
adc
in
mov
mov
scas
cmpb
lcall
mov
test
pop
dec
or
in
test
or
repz
mov
jecxz
mov
or
jno
push
adc
pushf
xchg
dec
adc
mov
shl
fmuls
mov
fisttpl
outsb
adc
mov
sbb
adc
mov
mov
and
out
cld
lock
repz
out
cli
sbb
leave
push
negl
fs
and
call
imul
ja
sub
arpl
or
jb
adc
out
out
leave
fidivrs
insb
push
not
add
arpl
cltd
daa
jmp
cwtl
mov
mov
sbb
test
jne
add
mov
mov
adc
push
mov
shll
inc
pop
adc
faddp
push
xlat
inc
push
pop
dec
or
jmp
mov
out
mov
popa
mov
dec
add
imul
enterw
sbb
std
push
mov
xchg
nop
adc
xor
int
data16
and
mov
inc
lods
push
lret
fs
fs
dec
jmp
dec
sbb
jb
lret
sub
dec
xlat
jb
pop
inc
add
adc
fcoml
xchg
push
fdiv
dec
bound
out
daa
xor
adc
cli
into
cld
xor
fisttpll
loop
mov
repz
inc
xor
dec
jne
iret
inc
xor
iret
mov
xchg
out
bound
rcrl
ret
shrl
pop
pop
pushf
mov
je
or
and
or
fildll
xchg
push
mov
cmc
add
sti
xor
add
stos
enter
xor
mov
sbb
sub
xor
adc
fyl2xp1
or
aas
orl
nop
adc
and
jge
jne
test
mov
lds
aam
mov
enter
mov
xor
or
mov
rcll
outsb
xchg
cli
sub
sti
je
dec
inc
pcmpgtb
and
andl
jno
or
xchg
or
out
add
pop
jmp
push
test
adc
pop
sbb
xchg
out
pushf
rcll
xchg
push
xchg
mov
inc
mov
ja
or
add
shlb
dec
push
xor
or
ljmp
and
or
mov
add
sub
jle
cmp
shlb
cs
lock
sbb
and
pop
sarl
mov
test
movsb
dec
mov
push
dec
or
subl
or
jmp
jne
adc
mov
cmpsl
xor
repnz
outsl
push
movsl
inc
mov
insb
imul
movzbl
xor
dec
mov
mov
cmpsl
clc
dec
inc
or
add
mov
mov
xor
lock
jne
sbb
addr16
imulb
inc
nop
sbb
pop
dec
pop
mov
mov
push
push
in
push
xchg
in
mov
ss
xlat
xor
inc
fdivr
gs
pop
cmp
sub
in
sub
sub
les
stos
lret
mov
jo
mov
loopne
or
jmp
and
in
call
out
dec
mov
aas
mov
mov
add
ret
mov
in
repnz
mov
cmp
adc
push
inc
mov
and
outsl
fimull
mov
jp
jge
out
or
lods
inc
hlt
sub
and
sbb
sar
test
test
in
int3
cltd
or
sti
ja
test
inc
jbe
push
sbb
jne,pn
xor
mov
xlat
pop
dec
ror
inc
imul
jo
lcall
dec
subb
rorb
aas
rorl
pop
std
cltd
xchg
or
mov
int
inc
cld
jnp
dec
inc
into
lahf
loopne
repnz
xchg
inc
sbb
and
sbb
imul
in
jmp
fs
pop
daa
push
enter
jo
je
pop
pop
arpl
sbb
jecxz
movsb
mov
mov
movsl
mov
sub
xor
mov
cltd
xor
js
dec
mov
sub
push
pop
xchg
out
xchg
mov
cmp
rclb
movsl
movsl
pop
push
inc
cmc
pop
nop
scas
jecxz
pop
ljmp
ljmp
gs
push
pop
xchg
aaa
divl
sbb
push
cmp
jnp
shll
mov
xor
outsl
pop
xchg
push
rcrb
pop
ja
test
cmpsl
hlt
xchg
jl
dec
sbb
imul
and
xchg
dec
pop
orb
test
or
lods
sub
lret
rolb
mov
cli
jmp
cmpsl
frstor
xor
jmp
aas
sub
daa
sbb
clc
mov
test
mov
push
and
cmp
mov
bound
test
aas
inc
repz
fldl
adc
ret
pop
sub
jge
or
dec
shrb
jne
mov
or
add
adc
aam
scas
mov
or
and
push
repnz
add
repz
push
or
repnz
jl
mov
mov
cld
movsl
clc
pop
xor
mov
fwait
inc
loop
daa
or
lcall
scas
fsubs
gs
sbb
and
popf
shll
fcoml
mov
jae
bound
loopne
addr16
dec
mov
faddl
adc
aad
dec
ja
incb
sbb
jmp
outsb
call
and
lods
push
ror
mov
cmc
xchg
fidivrl
in
dec
out
cwtl
sub
loop
pop
dec
outsb
dec
call
mov
push
aas
gs
enter
add
xor
insb
fwait
stos
daa
sub
test
adc
jecxz,pt
out
and
jns
push
push
inc
cmp
leave
movsb
or
pop
adc
mov
aam
or
fcompl
lret
negl
lcall
dec
ret
notb
or
and
adc
leave
cld
fnsave
div
les
mov
dec
adc
movsb
divl
and
je
in
mov
aaa
aam
mov
sarl
inc
notb
imul
out
lret
call
xchg
ret
or
rcr
es
lods
jmp
push
xor
call
sub
sub
jmp
sbb
pop
mov
sbb
pop
inc
or
xor
or
cmp
xor
adc
pop
js
das
cmp
push
xor
daa
popf
insb
mov
pop
mov
xor
je
or
or
add
sahf
repz
ja
xlat
sbb
ss
push
mov
inc
xor
jmp
dec
in
jbe
dec
xor
les
cmpsl
adc
test
jecxz
or
and
pop
or
sub
jno
mov
xor
dec
and
mov
test
cli
mov
jae
xor
adc
out
mov
test
or
movsl
imul
lods
push
fildll
and
pop
and
mov
lret
inc
aaa
notb
call
sub
popf
xchg
mov
push
jmp
out
fwait
push
inc
xchg
mull
pop
inc
dec
hlt
cs
mov
lods
imulb
into
mov
sarb
cmpsl
pop
jge
hlt
imul
div
rcll
in
cmp
or
fwait
ret
xchg
je
outsl
jle
xor
cmc
dec
pop
dec
xchg
movsb
and
loope
movsl
push
ja
loopne
or
jecxz
adc
in
inc
fcomip
cmp
lea
rclb
div
outsl
inc
and
add
je
mov
or
pop
adc
lahf
into
jmp
std
ss
mov
cld
pop
adc
add
je
imul
scas
push
cs
and
movl
pop
jmp
pop
cld
nop
shl
movsb
dec
cld
test
mov
fists
inc
mov
clc
sbb
pop
cmp
enter
xor
or
hlt
out
rcrb
ja
fsts
adc
mov
test
inc
andb
rcll
shrl
ror
xchg
mov
sub
or
pop
mov
mov
test
mov
dec
incb
das
in
dec
mov
xchg
lret
loop
test
jmp
mov
nop
test
cld
jmp
fiaddl
divb
jge
pop
push
fistpll
ffreep
inc
sbb
js
mov
lds
mov
lods
out
and
stc
sbb
lock
push
mov
pop
iret
cltd
jl
bound
adc
dec
in
nop
pop
sbbl
adc
dec
mov
sbb
sbb
mov
mov
adc
add
bound
or
sbb
in
push
or
fstps
add
or
bound
das
adc
movsb
shll
sahf
sbb
mov
or
arpl
inc
push
or
mov
icebp
sub
mov
push
or
xchg
sub
cmp
mov
rclb
subl
push
jmp
js
cld
cltd
cltd
bnd
movsl
jle
push
and
or
jl
xchg
pop
xchg
mov
pop
jl
pop
ja
hlt
arpl
dec
or
stos
xchg
outsl
cmp
cld
adc
out
cmp
mov
pop
loop
hlt
sub
daa
dec
std
clc
xchg
stc
sub
or
jg
mov
stos
aad
bound
daa
inc
imul
mov
cmp
and
cltd
lods
xchg
inc
call
push
lea
push
push
mov
push
out
test
clc
jmp
jnp
outsl
inc
adc
std
mov
fcomp
fdivrl
orl
dec
orl
std
cmp
repnz
or
ds
inc
sub
mov
xchg
sbb
dec
rolb
cs
in
outsb
test
push
or
and
bound
nop
sub
and
xchg
fisubrs
xchg
mov
popf
jae
dec
jne
ss
das
xchg
sti
cmc
gs
sub
inc
or
mov
mov
pop
jg
popf
jns
dec
jge
nop
sub
dec
out
roll
push
dec
or
clc
repz
fs
daa
sbb
call
lock
test
and
mov
pop
cltd
lds
push
mov
fisubs
inc
mov
sub
testb
imul
cmp
clc
mov
or
clc
imul
shr
pushf
push
pushf
mov
inc
sub
jno
push
add
mov
outsb
dec
loopne
mov
xor
roll
mov
lahf
add
mov
arpl
mov
adc
out
mov
inc
pop
sub
dec
mov
xor
add
push
sub
cmpsb
daa
add
cmp
dec
jb
xorb
mov
imul
xchg
mov
dec
add
mov
xor
aam
call
and
or
cmp
cs
sbb
push
add
jnp
das
cmp
sbb
mov
cld
adc
sbb
fwait
xor
js
pop
fadd
lds
inc
sub
movl
inc
pop
xchg
test
movsb
repnz
inc
xor
sub
jb
sub
push
push
call
ret
inc
adc
and
and
cltd
jns
push
stos
mov
sub
ret
jle
or
adc
decb
imul
dec
sub
loopne,pn
dec
pop
pop
in
loope
clc
add
adc
pop
inc
xor
hlt
test
leave
je
mov
les
adc
das
or
sub
mov
sbb
bound
repz
popf
gs
movsl
repz
add
inc
lods
sbb
sbb
jg
mov
repnz
push
adc
jb
stos
sub
inc
mov
movl
and
inc
dec
or
pushf
and
xchg
dec
dec
push
jecxz
movaps
push
mov
rorb
or
inc
repz
mov
icebp
outsl
add
dec
adc
or
adc
mov
stc
out
or
cmpsl
test
adc
int
pushf
ds
pop
movsb
jb
sbb
adc
cwtl
orb
sub
aad
or
lock
add
inc
xchg
cld
xchg
and
test
jno
adc
sahf
inc
xchg
stc
jbe
stc
push
iret
and
push
clc
out
jnp
mov
lds
lods
popa
bound
icebp
cmp
cld
mov
push
divb
pushf
add
jns
fs
and
enter
or
in
movsl
sbb
fsts
sbb
out
lods
or
fstps
bound
adc
dec
xlat
loop
mov
xlat
in
push
jne
inc
loopne
push
je
dec
and
in
stos
jne
aaa
push
inc
pop
loop
leave
clc
jp
imul
sbb
movaps
adc
mov
add
mov
mov
scas
and
mov
outsl
gs
or
pop
rcrb
dec
adc
xchg
sahf
push
in
inc
dec
ljmp
push
ja
cltd
addr16
add
inc
call
mov
in
mov
clc
cmpsl
add
pusha
sbb
xchg
inc
arpl
pushf
xchg
hlt
inc
or
xchg
addr16
add
lea
nop
ror
int3
dec
lds
mov
xchg
fadd
sbbb
jg
fwait
mov
mov
inc
xorl
push
mov
or
inc
jg
xor
divl
adc
test
mov
xchg
jg
in
dec
daa
or
adc
push
jmp
xchg
add
orb
jmp
into
or
iret
je
push
nop
and
popf
xor
jge
and
push
sbb
cmc
out
cmp
iret
inc
cmp
test
dec
cmp
xchg
mov
cmpb
outsb
jb
pusha
cmp
cmpsb
mov
push
or
cmp
cmp
movsl
adc
adc
xchg
mov
aam
aaa
repnz
inc
sbb
push
das
inc
loop
adc
jmp
push
xchg
push
mov
je
pop
and
movups
adc
inc
es
cmp
adc
add
cmc
inc
nop
adc
sub
loopne
mov
xchg
outsl
jae
mov
push
imul
adc
adc
insb
dec
decl
mov
dec
pop
lock
dec
inc
es
lds
mov
jbe
push
ret
push
jp
sub
jne
inc
clc
das
fnstsw
xor
in
add
sub
or
or
repz
and
int
cld
adc
call
in
adc
insb
dec
mov
xor
xor
cmp
cmp
cmp
rclb
mov
out
test
sahf
movsl
imul
xchg
xchg
adc
mov
dec
mov
xchg
mov
gs
mov
xor
sti
pop
icebp
sub
cltd
adc
jne
jnp
xor
mov
out
add
jno
fs
out
std
sbb
add
cli
push
inc
adc
mov
cmp
mov
ja
outsl
movsl
mov
xor
inc
mov
cwtl
cmp
or
mov
sub
mov
xor
inc
sub
mov
mov
inc
test
xchg
inc
sbb
repz
je
jmp
clc
leave
push
push
sbb
les
mov
add
sbb
hlt
pop
int
addl
and
fnstsw
xor
sbb
cmp
adc
mov
sbb
hlt
or
pop
xor
inc
and
adc
movsl
push
jl
insb
jp
loope
lcall
mov
xchg
nop
shll
dec
test
xchg
mov
fbld
jg
inc
sub
or
lock
lea
fistps
divb
lea
insb
pop
mov
test
cmp
test
test
lahf
fcomps
fstpl
jb
adc
dec
lock
pop
xchg
ljmp
mov
lahf
push
lcall
pop
out
bound
push
sbb
imul
inc
dec
jle
jno
cmpsb
mov
lods
and
ljmp
movsl
jbe
push
divb
iret
adc
mov
push
pop
pop
xchg
mov
jg
fcoms
stc
xlat
xchg
jecxz
adc
pop
std
or
cmpb
leave
test
lock
fsubrs
cmp
das
std
addr16
je
cmp
dec
pop
imul
cmp
pop
inc
popa
fistl
mov
fisubl
push
insl
mov
scas
cmp
jmp
sbb
sbb
adc
into
pop
pop
xor
cmp
ja
add
pop
pop
and
bound
cmp
ljmp
mov
mov
inc
add
pop
adc
mov
imul
and
cmp
push
xor
xchg
or
ret
sahf
aaa
dec
or
lods
ret
pop
daa
cmp
push
mov
mov
popa
add
cmp
jne
std
imulb
xchg
call
mov
sti
loope
andl
fists
sub
or
scas
dec
aam
push
mov
lcall
imul
and
push
test
pop
mov
cmp
or
pop
test
mov
add
aaa
mov
scas
andnps
stos
and
dec
mov
je
xchg
cld
stc
mov
and
jl
and
sbb
int3
test
mov
out
dec
fcompl
test
xor
fstps
fs
xchg
bound
cmc
mov
mov
cld
jo
shll
jne
and
inc
adc
cld
pop
xchg
sbb
and
pushl
mov
xor
insl
fs
scas
jl
lds
leave
pop
div
imul
sub
into
and
adc
and
push
xorb
hlt
sub
push
adc
cltd
add
lea
insl
or
loop
and
inc
or
jo
add
outsl
repnz
adc
lock
hlt
popf
fstl
loopne
mov
inc
fsubl
out
xchg
imul
pop
push
nop
pop
push
cmp
cmpsl
stc
jne
mov
stc
faddl
roll
adcb
movsb
xor
push
cmp
push
mov
das
adc
into
lock
jg
mov
adc
mov
sbb
sbb
push
or
xchg
dec
je
jl
jo
pushf
push
dec
xlat
or
pop
in
sub
in
jge
rorb
pop
enter
or
je
lret
ja
push
std
xchg
or
or
mov
movsb
jmp
cli
inc
repnz
test
lds
filds
jne
dec
adc
sub
xor
xchg
clc
xor
movsb
leave
jg
sub
pop
mov
lds
adc
inc
xchg
xchg
sub
xchg
pop
add
jge
push
mov
cmp
add
inc
inc
xor
sub
inc
pop
and
inc
mov
sub
or
dec
push
stos
data16
or
adc
movsb
mull
cmpsb
mov
add
sub
mov
pop
das
cmp
shlb
or
cli
loop
ror
in
sbbb
adc
cmp
lcall
add
mov
shll
test
mov
and
jne
adc
xchg
divl
cs
loop
xlat
repz
sahf
lock
inc
test
dec
out
and
leave
into
fdiv
inc
adc
add
ds
lcall
add
popf
lahf
add
inc
mov
jns
xchg
fimuls
push
sub
loop
sbb
jne
test
add
cmp
sarl
pop
mov
test
gs
es
sub
test
add
sbb
rcl
ret
mov
mov
mov
jne
mov
or
cs
jae
jmp
jl
int
xor
inc
stos
cmc
or
int
cmpsl
pop
mov
ret
movl
sub
ljmp
popf
test
dec
sub
dec
adc
loop
ja
xchg
pushl
cmpsl
push
jnp
lcall
adc
xchg
je
push
mov
xchg
mov
sbb
daa
xor
popf
stc
nop
lock
imul
cmp
cmp
sbb
pop
cmp
mov
mov
mov
rolb
jnp
add
push
jne
mov
sar
sbb
inc
sbb
xor
sbb
hlt
pop
psubd
sub
push
add
push
ret
stos
xchg
jbe
inc
arpl
int3
jnp
jmp
mov
or
fs
imul
lcall
cmp
xchg
add
or
cmp
das
sbb
push
pop
mov
inc
movhps
mov
cs
ds
pop
sbb
test
mov
sti
ja
lret
inc
aam
or
mov
cmpsl
mov
mov
or
cmp
jne
repz
cwtl
xor
aad
xor
add
and
mov
push
sub
lds
ret
cmp
insl
sub
cli
pop
stos
mov
popf
in
push
shll
out
add
jecxz
fcmovu
insb
ljmp
jo
add
lret
push
push
lods
jl
hlt
sbb
cmpsl
mov
js
xor
cmp
dec
sbb
call
shlb
or
notl
cmp
in
scas
mov
scas
sub
dec
mov
aam
test
lcall
sbb
jmp
dec
cmp
push
inc
sbb
adc
gs
jmp
repnz
out
loope
dec
sbb
shll
xlat
dec
cmp
xor
inc
hlt
dec
in
sbb
lret
clc
insb
daa
lods
push
mov
vmread
xor
lea
mov
and
mov
psubsw
loope
push
inc
sub
insl
in
gs
addr16
outsl
nop
movsb
mov
pop
mov
test
insb
int3
stos
cmp
pop
lea
adc
push
adc
mov
mov
enter
xchg
and
test
adc
or
xor
mov
or
lahf
inc
mov
jns
daa
adc
xchg
adc
pop
xor
jnp
cmpsb
or
lea
add
lahf
adc
mov
daa
fwait
or
pop
cmp
adc
xlat
nop
sub
ja
mov
or
inc
sbb
adc
adc
and
pop
sbb
lds
lods
push
mov
sbb
push
int3
aas
enter
in
mov
adc
cmp
out
jp
inc
aaa
dec
adc
xchg
loop
dec
rolb
pop
jg
add
add
push
nop
or
jne
and
and
lcall
and
sub
xchg
mov
adc
xchg
inc
inc
jmp
push
mov
and
jne
imul
or
je
sbb
pop
mov
xchg
rorb
hlt
call
lea
cmp
fs
and
and
negl
sarb
mov
sbb
sub
xchg
icebp
lock
fstpt
inc
arpl
mov
stos
jl
clc
and
sbb
iret
icebp
inc
sbb
jo
lss
rcr
cli
or
cmp
or
xchg
fsubl
pushf
lret
push
lret
cmp
cld
jl
mov
dec
dec
fs
adc
mov
mov
adc
test
pop
jae,pn
sbb
enter
sub
stos
pop
and
jge
sub
jbe
jbe
lock
cmp
loop
adc
and
xchg
call
adc
xor
call
sahf
popf
and
sbb
shrb
in
fwait
mov
movsl
push
shrb
lock
cmp
loopne
pushf
xlat
insl
fsubr
dec
cmpsl
cld
mov
jno
xchg
and
cmpsl
cld
cmp
sbb
lahf
inc
xor
adc
or
rclb
dec
and
out
inc
stc
ds
xor
test
dec
inc
dec
shlb
aam
mov
in
push
repnz
xlat
xchg
or
gs
testb
and
subb
dec
mov
test
mov
sarb
movsb
pop
xchg
in
daa
pop
dec
outsb
mov
cmp
mov
fidivl
popa
rclb
jmp
mov
lahf
stc
xchg
cmovnp
lods
push
sub
dec
push
or
jmp
test
jno
rcl
rclb
in
stc
dec
cltd
pop
xchg
sub
inc
and
fcoml
std
mov
test
aas
dec
out
sub
clc
fwait
cmp
out
and
and
push
add
cmp
jge
push
clc
cltd
xchg
mov
push
jnp
xor
aam
das
mov
push
fisttps
test
dec
jg
std
cli
jg
outsl
add
js
leave
pop
outsb
cld
out
dec
out
push
sbb
adc
mov
xchg
dec
sbb
or
pop
xorb
jo
repz
daa
insb
or
and
mov
inc
push
or
pop
or
and
push
mov
loope
push
and
rcll
adc
sbb
mov
and
or
pop
pop
nop
movsb
or
or
adc
push
inc
or
dec
ret
cmp
adc
dec
lods
xchg
cwtl
out
and
rorl
mov
out
sbb
jge
mov
mov
bound
js
mov
push
std
mov
ds
aas
push
inc
pop
dec
lods
ja
or
cld
lds
out
orb
cmpsb
jb
and
subb
mov
jne
popa
mov
rorb
pop
fisubs
mov
leave
or
push
or
sbb
adc
or
jb
pop
imul
adc
pop
sti
cmp
dec
dec
sub
add
imul
stc
xchg
call
sbb
inc
loopne
outsl
les
pop
mov
cmp
xlat
fs
cmp
adc
jb
inc
adc
add
sub
xchg
decl
movsl
xor
mov
pushl
adc
sti
adc
mov
ret
mov
roll
push
push
sub
loop
mov
pusha
xor
xor
fdivrs
fsubrs
lahf
fildl
lock
outsb
repz
out
int
fnstsw
in
dec
inc
leave
jge
je
cmp
hlt
push
inc
and
sbb
jnp
sbb
fs
sbb
inc
sbbl
aad
xor
cmp
ljmp
jne
dec
sub
int
sub
inc
jmp
scas
fistpl
daa
push
inc
mov
hlt
and
sub
in
lret
lods
pushf
xchg
mov
jne
xor
pop
push
adc
sub
sbb
sbb
adc
add
or
push
sub
sub
dec
lock
xchg
xchg
xlat
adc
mov
cmc
cmp
jne
mov
ret
roll
pop
div
popf
into
les
mov
adc
dec
xchg
jmp
mov
rolb
stos
inc
push
xchg
call
pop
scas
mov
mov
test
mov
bound
sub
sbb
sbb
cmpl
call
imul
ja
es
sbb
test
inc
jne
add
pushf
or
mov
gs
push
shll
pop
sub
jmp
mov
popa
pop
inc
lods
movsl
test
add
loopne
adc
mov
ret
and
xor
or
or
inc
or
dec
mov
mov
inc
xchg
idivl
lods
push
xchg
mov
mov
cmp
cs
stos
dec
scas
add
setge
and
jmp
aam
loopne
push
sti
mov
sarb
cmp
mov
rorb
jne
movb
data16
daa
or
sub
rorb
pop
adc
sbbl
and
push
dec
add
fwait
incl
jecxz
push
and
fwait
or
outsb
dec
mov
imul
pop
ret
test
and
and
or
mov
bound
pop
fwait
mov
xchg
dec
enter
pop
mov
add
and
mov
fbld
add
sub
push
mov
sub
ja
sbb
fnstcw
sub
call
push
or
arpl
mov
icebp
shrb
sub
jae
lret
lds
nop
mov
inc
mov
psraw
outsl
jno
movsl
push
cltd
shlb
lcall
ss
pop
fbld
sti
or
or
mov
jno
dec
jge
dec
cmp
push
adcb
bts
popf
outsl
shr
mov
dec
dec
pop
negl
xor
orl
mov
xor
shll
js
sbb
sbb
sbb
sub
pop
sub
mov
or
out
sbb
movl
rclb
repnz
daa
or
adc
mov
sahf
pusha
out
dec
cmc
cmpsb
ret
and
in
push
xor
das
movl
push
mov
jge
pop
inc
decb
lods
or
adcb
scas
inc
cs
push
into
enter
cli
inc
pop
dec
or
pop
mov
or
popa
xchg
or
inc
and
and
lock
pop
shll
clc
sbb
mov
ret
and
aam
cli
inc
or
shlb
xor
aaa
and
jmp
sbb
mov
pop
adc
leave
mov
push
js
xchg
loope
jo
dec
aad
adc
popf
fisttpl
and
xchg
adc
sbb
dec
in
loope,pn
aas
into
cwtl
adc
or
jb
mov
data16
jne
rorb
lret
adc
mov
es
inc
mov
mov
mov
jno
dec
shlb
lods
xchg
add
fdivrs
and
ficompl
cld
inc
push
push
outsl
sub
mov
push
cmp
inc
hlt
push
push
xor
sub
and
cmp
xchg
cmp
mov
mov
cmp
test
inc
decb
inc
and
mov
mov
jo
jg
pop
xchg
out
xchg
or
mov
frndint
and
lock
jae
test
lret
cmp
pop
daa
nop
cltd
fnsave
and
sub
inc
fildl
mov
sub
cmp
cmp
push
push
inc
push
out
dec
sbb
cmp
test
stos
pop
sbb
inc
test
shll
jns
dec
ljmp
push
push
mov
and
inc
and
lock
into
mov
xor
hlt
pop
mov
or
xor
inc
in
daa
fists
and
fsubrp
push
jg
cwtl
inc
pop
mov
push
inc
dec
mov
jg
int3
and
and
pop
outsl
out
imul
xor
mov
das
aam
mov
mulps
mov
jmp
mov
xchg
mov
setl
mov
loop
pop
fbstp
imul
lods
lret
sbb
scas
push
in
data16
xchg
loop
ja
inc
push
out
dec
aas
sbb
xor
mov
jp
and
idivb
loopne
cmp
xor
pop
dec
mov
xlat
stos
data16
lret
push
lea
cwtl
pop
jle
jp
insb
inc
fisubrl
push
dec
push
into
jmp
push
repz
sub
dec
loopne
mov
testl
int3
fwait
pop
daa
and
adc
ljmp
xchg
xchg
ja
dec
jp
push
cwtl
lods
jge
dec
aam
adc
jp
xor
add
cmp
mov
pop
dec
mov
mov
mov
nopl
ret
mov
inc
sub
imul
sbb
sub
inc
sub
test
jge
and
jne
bnd
jnp
sub
xlat
jns
in
and
push
rorb
push
inc
and
jmp
int
das
mov
outsl
aad
and
mov
mov
dec
and
or
or
aam
jne
jo
push
push
hlt
imul
sub
fdivl
or
test
sbb
adc
out
sbb
cmp
daa
je
mov
or
jl
ja
or
mov
out
and
dec
cmc
sub
jne
shlb
and
cs
jae
push
jg
clc
adc
xor
stos
dec
jno
leave
xlat
fs
dec
jmp
rorb
and
cvtps2pi
adc
lea
xchg
dec
mov
rcrl
sub
or
ja
nop
into
int
mov
mov
xchg
push
mov
inc
cli
pop
dec
dec
idivb
pop
push
jle
ss
sbb
jne
in
dec
or
inc
inc
pop
rorl
sbb
push
push
cmp
lods
sti
ss
sub
into
or
out
mov
mov
xchg
mov
sbb
icebp
cmp
inc
cmp
cmp
push
ljmp
insb
mov
adc
push
sub
data16
adc
xor
adc
dec
pop
jmp
lcall
inc
xor
jp
test
xor
cmpsl
mov
push
push
inc
mov
rcr
or
mov
adc
shlb
daa
inc
or
pusha
dec
adc
mov
loopne
xor
test
cmp
scas
xor
jne
mov
stc
cwtl
inc
xor
call
loopne
add
lods
loope
mov
scas
cld
push
out
in
push
push
jge
arpl
add
push
hlt
adc
clc
in
fidivrs
mov
jl
xor
add
inc
sub
in
cmc
int
mov
push
xchg
dec
out
adc
push
or
or
sbb
jnp
mov
in
mov
push
inc
stos
adc
int
jg
adc
push
mov
gs
adc
dec
out
popf
bound
lret
fcoms
xor
and
cwtl
call
into
push
in
sbb
inc
loopne
inc
in
hlt
add
inc
cmp
popa
aaa
adc
cmp
adc
jo
loope
sbb
mov
adc
xor
inc
jmp
xchg
bswap
inc
pop
mov
xlat
jne
cld
jle
hlt
jle
xchg
fnstsw
mov
dec
or
cltd
dec
cmpsl
pop
mov
cmp
clc
xor
ret
sub
test
mov
fdivrs
sbb
dec
push
cld
insb
leave
or
xor
fmul
lods
fcompl
jbe
dec
in
xor
and
push
and
adc
xchg
mov
repz
mov
adc
xor
xchg
jecxz
decl
xchg
push
and
movsb
les
cmp
sarl
sbb
into
lock
adc
dec
mov
mov
test
push
mov
push
sub
es
xchg
push
scas
je,pn
ret
mov
cs
mov
scas
aaa
xchg
iret
jl
or
sbb
popa
xchg
idivb
jecxz
lahf
sbb
or
movl
int
cs
movsb
cmp
mov
add
and
and
fs
movsb
scas
stc
mov
not
outsl
pop
cltd
cli
cmp
jne
pushf
adc
pop
pusha
std
jg
jne
inc
xchg
aam
jo
xchg
xchg
into
and
pop
out
test
rcrl
ja
mov
lea
je
xor
adc
mov
add
adc
fidivrs
in
sbb
aas
rorb
int3
and
arpl
mov
mov
push
lea
mov
lret
jg
adc
xchg
test
lea
add
mov
inc
divps
movb
pushf
push
and
adc
add
or
or
cmp
jl
mov
pop
call
fidivl
adc
mov
xchg
xchg
inc
push
add
fcoml
je
insb
jae
or
outsl
ja
lock
fsub
or
or
outsl
int
adc
test
addr16
rolb
or
jo
fdiv
pop
lret
and
inc
call
aam
pop
sub
push
xor
addb
nop
sub
adc
sub
dec
call
and
mov
mov
jns
xor
imul
sub
add
cld
mov
lret
mov
inc
je
arpl
dec
xor
mov
adc
xchg
add
jge
mov
mov
out
xor
mov
fcomps
push
or
adc
push
xor
xor
mov
rcrl
ret
sbb
imul
push
fists
pop
ljmp
aaa
imul
cmpsl
mov
sub
jae
call
xchg
mov
adc
inc
adc
js
rolb
call
dec
bound
push
push
pop
cmp
mov
fwait
xchg
and
jnp
pop
lcall
cmp
xchg
and
imul
and
xchg
inc
jno
pop
inc
ret
xchg
test
dec
cmp
rorb
test
and
insb
inc
add
imul
push
gs
push
decb
and
dec
adc
dec
and
mov
cmp
cmp
or
dec
add
es
mov
or
pop
push
inc
imul
xlat
test
mov
inc
adc
icebp
dec
test
rclb
or
or
and
lock
aaa
or
ret
xor
xchg
je
push
orb
loopne
inc
in
fsubl
adc
adc
inc
arpl
or
insb
outsl
loope
pop
shll
call
aam
and
jl
adc
in
add
imul
cmp
push
adc
jae
pusha
sbb
pusha
icebp
lods
xchg
inc
rcrb
pushf
inc
sub
cmpb
mov
ds
push
mov
or
or
push
in
mov
ret
aas
or
lock
frstor
test
inc
xchg
lods
xchg
mov
mov
adc
push
push
int3
sbb
pusha
mov
mov
and
inc
inc
loope
inc
or
xchg
inc
ja
pop
sbb
push
lods
mov
in
aam
test
cmp
or
jl
xchg
and
mov
mov
icebp
push
inc
mov
pop
jo
lahf
mov
loopne
xor
mov
and
fs
or
mov
or
push
fildll
sbb
enter
xchg
pop
xor
mov
icebp
cltd
and
xchg
or
call
xor
mov
lock
sbb
xor
rolb
mov
sbb
jg
enter
aam
xor
mov
hlt
adc
cld
les
add
or
mov
les
inc
xorl
adc
push
adc
pop
and
push
mov
cld
xor
dec
xchg
test
pop
sbb
add
fs
mov
cwtl
mov
jmp
push
xor
aam
cmpl
mov
iret
stos
add
pop
ja
jge
cmp
mov
mov
lahf
and
dec
stos
xchg
mov
dec
sbbb
and
and
xchg
inc
adc
inc
and
push
lods
dec
and
rclb
xchg
popa
mov
icebp
push
mov
test
stos
enter
leave
cmpsb
or
or
shr
push
add
mov
sbb
xor
push
inc
jne
fdivrl
add
sbb
sbb
inc
inc
dec
sbb
cmp
push
push
fisttpl
stos
add
into
shr
insb
sbb
mov
and
fsubrp
int
in
mov
mov
in
clc
inc
jne
icebp
aas
adc
mov
xchg
mov
sbb
xchg
lahf
cld
sbb
push
les
call
es
divb
addr16
lods
iret
cmp
jg
mov
mov
lea
inc
push
push
call
ret
push
rcrl
or
dec
jne
loope
push
inc
fs
imul
repz
mov
or
xchg
shr
int3
aaa
jl
jl
neg
js
out
testb
jae
out
iret
mov
and
or
dec
sub
or
push
sbb
into
fisubs
or
sbb
adc
mov
lea
xor
inc
int3
sbb
jp
in
or
scas
rol
adc
lods
xorb
adc
push
mov
adc
dec
shrb
pop
ljmp
jns
jns
xchg
dec
stos
xlat
out
and
or
xchg
jb
push
mov
cld
lods
sahf
mov
mov
out
cmp
daa
or
fldl
ljmp
and
sbb
popa
negb
inc
mov
sub
call
xor
sarb
jg
mov
and
cwtl
dec
lods
jmp
jne
fists
scas
add
xlat
test
xor
pop
lock
adc
jmp
mov
mov
mov
cld
adc
addr16
or
sub
jb
pop
jns
outsb
or
push
cmp
pop
xor
jo
mov
arpl
out
jmp
or
aas
jae
mov
es
jl,pn
je
jg
adc
pop
and
outsl
imull
push
jae
cli
mov
sub
push
imul
jmp
cmp
lcall
repnz
and
jns
xchg
push
or
add
dec
dec
push
push
push
outsl
cld
cld
fidivs
xlat
sub
jge
inc
stos
into
je
push
stc
jl
sahf
pop
loope
add
out
xor
mov
les
stos
fldcw
inc
lods
inc
pop
jae
les
cmp
lock
jmp
fildl
adc
or
addr16
mov
lahf
fistps
daa
mov
fsubl
adc
lods
loopne
fsts
push
fs
sti
cltd
pop
xchg
adc
frstor
push
and
lahf
test
call
fbstp
ficoml
unpcklps
imul
les
rolb
mov
cld
out
cld
loopne
sbb
jae
imul
lods
jns
cmp
addr16
pop
pop
push
sti
or
xor
cmp
stos
gs
and
xchg
call
mov
cltd
int3
test
push
cmpsl
and
pop
inc
pop
stos
test
jmp
out
dec
jle
mov
lret
mov
call
dec
out
mov
call
mov
add
dec
cmc
xor
adc
cs
and
jge
xor
xor
push
daa
nop
je
dec
fistpl
xchg
push
stos
xchg
or
nop
in
mov
push
cmpsl
flds
adc
mov
fstps
or
sbbb
sub
adc
jl
push
mov
pop
dec
push
int
pop
sub
sub
lahf
data16
push
out
outsl
push
addr16
push
mov
adc
add
xchg
test
push
xchg
sub
xchg
repz
sub
dec
leave
xchg
lock
push
mov
sbb
aad
into
nop
lock
pushf
idiv
test
ljmp
pusha
or
cs
add
out
jmp
in
mov
call
dec
or
cmp
push
adc
cmp
and
popa
fs
and
adc
jne
sub
sbb
fstpl
pop
je
jae
jo
fwait
jb
std
cmp
mov
pop
jmp
sub
out
mov
sbb
push
push
movsb
nop
push
mov
movsl
sub
call
and
shl
add
jmp
popf
fcmovnb
rcrb
pop
sbb
sbb
cltd
neg
add
xor
out
jl
addr16
rorb
cwtl
or
dec
bound
push
adc
daa
sar
fnstcw
dec
sub
inc
sub
icebp
push
mov
jl
or
aaa
inc
inc
pop
pop
dec
sarl
adc
inc
jnp
adc
jae
xor
inc
jbe
pop
jns
lods
push
nop
lret
aam
das
hlt
push
push
test
pusha
xor
fisubs
cmp
push
inc
sub
mov
clc
pop
or
pop
stc
mov
and
and
cld
mov
lea
rcll
adc
dec
hlt
cmpsb
ror
and
xor
jmp
jb
jne
sub
addr16
adcb
daa
adc
incb
jle
pop
sbb
ss
nop
mov
xchg
or
push
pusha
das
add
lahf
stc
mov
in
cwtl
test
pop
jmp
das
mov
and
in
cmp
jne
pop
inc
or
jle
mov
adc
sbb
clc
cmp
adc
or
fnsave
int3
sub
sti
pop
stos
lea
or
or
add
dec
dec
inc
inc
inc
inc
and
cs
jmp
ds
push
icebp
and
filds
push
jl
scas
sbb
popa
dec
fidivrs
cmp
call
push
dec
adc
push
mov
or
dec
in
jne
int3
dec
and
pop
mov
inc
test
push
dec
xchg
fs
repnz
add
cmpsl
xor
push
out
insb
aaa
leave
jmp
cmp
add
test
pushf
mov
loop
dec
pop
mov
lret
outsl
rcrl
xchg
and
adc
lsl
shrb
and
add
xchg
insb
stos
mov
aaa
loop
sbb
and
fstps
add
pushl
cmp
adc
loop
xchg
subb
or
jp
sub
aas
jnp
sub
in
out
dec
sub
fimuls
sub
xchg
leave
xchg
sbb
data16
jg
push
jp
or
cmp
dec
sub
lahf
adc
xlat
mov
arpl
mov
dec
or
pop
adc
lods
imul
dec
hlt
cmpsl
push
mov
shr
imul
inc
push
lea
or
push
xlat
hlt
inc
jb
or
pop
lret
xchg
pop
push
dec
push
dec
int
add
push
subl
hlt
fs
cmpb
shlb
pcmpgtb
push
les
imul
repnz
pop
fadd
jnp
les
std
push
loopne
xlat
icebp
leave
cmpsb
mov
gs
sarl
int3
mov
xlat
sub
notb
dec
int
nop
cmp
inc
sub
inc
inc
adc
push
xchg
in
push
daa
pop
pop
adc
and
cmc
nop
jmp
enter
jmp
les
das
bnd
jle
jmp
and
and
pop
lcall
mov
outsb
filds
faddl
inc
mov
push
idivb
jg
nop
cltd
pop
cmp
jge
or
gs
imul
clc
mov
rclb
fcmovnu
push
and
sub
int3
xor
sarl
ljmp
and
pop
push
jns
adc
mov
mov
dec
stos
dec
int
mov
dec
sub
subl
and
dec
jns
xchg
mov
lods
insl
decl
int3
cmpsl
pop
sub
and
mov
sub
call
xor
sub
xor
adc
sub
sub
fisttpll
call
lock
mov
pop
dec
jne
mov
sub
das
enter
imul
cmp
je
cmp
sub
and
mov
mov
xchg
dec
or
adc
and
push
mov
fisttpl
dec
sbb
popa
adcb
xor
mov
push
or
jns
dec
sbb
sbb
jne
or
out
jmp
xor
mov
lahf
push
test
ds
dec
int
in
sbb
mov
pop
aaa
lock
cmpsb
or
enter
sub
xor
lods
or
aam
shlb
sub
adc
test
dec
cmp
xor
inc
dec
xor
js
pop
stos
inc
mov
and
lods
sub
movsl
xchg
and
push
pop
add
sbb
adc
adc
popf
mulb
or
xchg
and
jge
ljmp
ljmp
pop
lret
je
or
push
daa
sbb
sub
cmp
cmp
in
jmp
jecxz
sub
jle
sbb
adc
outsl
xchg
inc
leave
xchg
xchg
ret
mov
lock
stos
push
sbb
dec
jle
fistps
pusha
loopne
adcb
into
mov
mov
loopne
inc
sub
push
or
subl
cs
in
inc
dec
into
sub
sbb
and
jns
iret
sti
test
xchg
xchg
add
scas
pop
push
je
decb
push
pop
sub
in
sbb
adc
inc
in
sbb
dec
repz
inc
ljmp
jne
dec
sahf
push
inc
mov
and
call
add
push
mov
jle
add
fstpt
ret
jg
fisubl
adc
sub
jg
push
adc
lods
pop
les
lahf
add
sbb
icebp
iret
lea
sub
xchg
mov
xchg
sbb
loop
call
and
add
ljmp
movlps
inc
rcrl
adc
adc
push
sub
fdivl
into
roll
iret
gs
fsubrl
jge
push
je
push
mov
pop
inc
sub
xchg
and
sbb
xor
cmp
mov
lret
jmp
aam
movsb
lods
inc
shrl
jmp
sahf
push
adc
shlb
dec
or
je
popa
fcomps
sub
imul
lret
cs
cmc
jno
xor
mov
jae
popf
in
sub
in
jo
in
mov
mov
jl
mov
ljmp
gs
pushf
lahf
or
orb
cltd
cmpsl
hlt
and
mov
inc
mov
mov
imul
xchg
xchg
and
mov
xchg
cwtl
jp
and
inc
pusha
mov
test
mov
cwtl
cmp
jmp
push
inc
mov
enter
add
test
dec
mov
adc
out
fdivrs
cltd
ljmp
bound
xchg
pushf
test
nop
and
push
pop
int
leave
dec
mov
dec
mov
and
movsl
ja
or
push
jge
pop
bound
inc
popa
outsb
sub
imul
mov
enter
push
sbb
jne
int3
push
fs
inc
sbb
jae
insb
pop
jns
rcr
stos
js
iret
dec
imul
and
das
aaa
insl
addr16
jne
push
mov
jge
pop
jbe
in
pop
fisubl
xor
pop
add
test
mov
movsl
in
push
lods
cmp
pop
inc
or
or
lea
or
push
pop
lea
push
orb
rcl
xchg
xor
adc
rcl
jge
push
sahf
jnp
adc
pop
xor
je
andb
aas
test
sub
lcall
jno
ja
add
mov
sub
popf
aam
push
push
add
das
sub
cmp
push
or
daa
push
nop
sbb
mov
cmp
xor
add
sub
repnz
or
or
sbb
lea
sub
jo
jae
fistpl
jo
imulb
adc
jge
rorl
jae
mov
mov
jle
xchg
sbb
lret
lea
insl
pop
jnp
mov
aas
movb
addb
cmp
inc
stos
sbb
rorl
inc
pop
push
test
cmp
negb
jg
mov
sbb
mov
repz
add
lods
rorb
shr
cltd
and
fdivs
jne
xor
adc
add
lock
pop
mov
mov
pop
test
push
fwait
or
or
sbb
ret
inc
inc
jne
lret
mov
push
sbbl
out
lock
jo
int3
jbe
in
and
subl
mov
push
cmc
call
dec
mov
into
push
inc
pop
add
dec
or
push
rcrb
adc
cmp
aaa
leave
dec
or
xor
into
and
add
mov
lea
mov
pop
mov
stc
enter
testl
push
shll
cmp
mov
in
add
sbb
dec
ror
cmp
xchg
add
dec
ror
and
sbbb
lods
mov
leave
cmp
lock
ret
adc
xchg
adc
enter
sbb
xchg
xor
shrl
sbb
xchg
and
shll
mov
hlt
inc
cmp
inc
cmp
popl
inc
jnp
dec
and
mov
popf
sub
xchg
stos
xchg
mov
enter
mov
adc
iret
or
inc
jo
lret
sbb
jo
nop
pusha
push
mov
and
popl
les
jo
je
mov
inc
jl
mov
pushf
and
mov
test
in
test
and
clc
xor
and
push
xchg
xchg
lods
xchg
fs
jnp
pushf
mov
scas
int
fisttpll
out
mov
fmul
sbb
and
mov
cltd
rcll
ja
pop
xchg
xchg
test
or
sbb
dec
dec
fimull
push
popf
lods
and
ret
jmp
mov
xchg
and
lds
mov
pop
jge
je
imul
and
call
enter
ret
test
or
enter
sub
rclb
aam
and
pop
inc
fdivrl
lock
test
lods
and
call
xchg
aad
mov
adc
lret
cmpsb
inc
xchg
xor
hlt
mov
int
scas
sub
pop
inc
lds
mov
mov
xor
and
lea
test
lds
mov
and
lea
sbb
stos
push
ss
js
popl
mov
js
popl
mov
inc
adc
sbb
outsb
xor
sub
xor
xor
enter
cmp
lds
jno
bswap
hlt
call
dec
call
or
adc
or
adc
loopne
leave
add
dec
stc
or
inc
or
and
mov
xor
repz
pop
cld
mov
movsb
pop
dec
cmc
sub
xchg
adc
lea
addr16
and
or
orl
incb
or
xor
push
jbe
ret
pop
shl
lock
insb
and
loopne
addl
inc
add
popf
insb
lahf
rorl
mov
mov
mov
cs
add
loop
mov
add
xlat
xor
and
cmpsl
imul
js
push
adc
inc
push
add
add
iret
xor
and
aam
repnz
in
cmp
ds
lcall
ret
mov
pop
pop
and
in
add
pand
and
lods
out
icebp
shrl
xlat
and
call
into
es
cmp
xor
cmp
scas
adc
jl
enter
xchg
adc
and
pusha
adc
test
inc
sbb
inc
xchg
inc
std
jb
xor
cmp
cwtl
subb
xor
cmp
sub
cmp
sub
cmp
and
pusha
and
nop
imul
cwtl
std
sbb
lea
cmp
jns
or
mov
push
test
add
mov
fs
mov
rol
inc
or
and
andl
push
enter
adc
fs
daa
mov
add
pop
adc
add
adc
jb
or
inc
add
cmp
adcl
adc
enter
out
ret
adc
and
pop
out
loope
mov
aaa
ret
sbb
lea
cmp
sbb
xor
cmp
mov
fdivr
mov
sbb
flds
outsl
inc
and
popa
mov
cmp
and
inc
es
and
rolb
xchg
mov
xchg
mov
xchg
dec
or
mov
popa
popf
insl
enter
hlt
and
xchg
dec
mov
test
or
pop
xor
adc
or
movsb
in
cmp
neg
inc
dec
and
pusha
dec
mov
shll
mov
jle
sub
test
adc
mov
test
and
aam
sbb
add
and
cmp
aam
mov
shl
sbb
xchg
cmp
gs
lods
les
sbb
mov
fistpll
and
hlt
inc
push
and
xor
rcr
xchg
jmp
sub
or
xchg
lds
adc
xchg
stos
ja
inc
adc
xor
leave
mov
cmp
into
enter
ret
pop
pop
cmp
add
int3
or
jb
or
out
jmp
add
rcll
pop
test
jle
test
xchg
cmp
loopne
sub
and
arpl
lret
xor
add
adc
dec
jb
ss
cmpb
xchg
sub
xor
or
sub
and
xchg
adc
xchg
ret
pop
pop
xor
mov
inc
jmp
or
test
imul
mov
ret
movsl
jno
xchg
adc
adc
add
and
or
fdivrl
xor
les
add
daa
dec
mov
add
mov
mov
pop
clc
add
xchg
xor
cmc
or
movl
xor
push
fcmove
push
les
dec
or
subl
xor
or
es
sbb
lods
push
es
adc
pop
and
nop
sbb
pop
cmp
and
nop
and
or
and
and
cmp
and
nop
xor
push
cmp
and
nop
cmp
or
cmp
mov
mov
jmp
adc
cmp
sarl
insl
movb
into
xchg
xchg
or
roll
mov
jmp
push
and
lahf
sbb
cmp
xchg
pop
sub
pmulhuw
sub
pop
mov
and
enter
sub
or
js
adc
sub
or
or
lret
or
add
add
or
xor
xorl
aas
adcl
ss
leave
aaa
into
adc
add
cwtl
push
cmpsb
test
shlb
fidivs
add
add
xchg
pop
lcall
imul
pop
lcall
or
xchg
and
add
pop
adc
push
lock
sbb
or
fsubl
inc
or
aas
sub
into
mov
adc
xchg
adc
sbb
mov
and
test
cltd
push
dec
xchg
mov
movsl
and
push
sbb
std
cwtl
or
xchg
test
sbb
in
dec
mov
jge
sub
dec
rclb
inc
push
aas
xchg
cmpsl
xchg
mov
repnz
sbb
dec
xchg
inc
jns
or
sbb
add
push
lahf
xchg
cmp
leave
sbb
xchg
adc
popf
fisubs
xor
into
xchg
dec
std
push
test
dec
xor
mov
lret
xchg
xor
dec
xchg
and
push
incb
and
mov
xor
xchg
xchg
sbb
xor
in
and
lahf
xchg
inc
inc
xchg
add
or
mov
xchg
stc
sub
or
nop
sbb
or
cmp
lret
xchg
xor
sbb
in
pop
pop
je
ljmp
mov
incl
mov
inc
test
push
sbb
lods
adc
push
inc
lahf
lret
scas
mov
in
dec
scas
rcrl
dec
rclb
hlt
xchg
jbe
dec
xchg
push
nop
push
add
in
paddq
push
pop
xchg
cmp
or
aad
test
and
nop
sub
push
cli
dec
inc
popf
xchg
push
rolb
rolb
rorl
or
popf
pop
and
dec
push
daa
jns
or
xor
sbb
pop
push
mov
rclb
xchg
xchg
fimuls
lahf
xchg
cli
movsl
or
aas
xchg
cmp
xchg
pop
aas
xchg
cmpsl
xchg
inc
jo
dec
xchg
adc
push
push
std
and
xstore-rng
cmpsl
xchg
loop
pop
and
or
push
repz
jo
lahf
add
sbb
sub
cmp
jmp
mov
mov
jno
fidivl
xchg
fiadds
dec
xchg
mov
xchg
xchg
cmp
jmp
or
inc
xchg
jmp
xchg
push
or
push
pop
xchg
xor
lods
xor
daa
in
jl
add
sahf
pop
aaa
xor
push
imul
dec
pushf
test
jge
jae
xchg
push
sahf
xchg
jmp
jp
xchg
or
js
repnz
test
and
sub
add
sub
push
xchg
add
push
xchg
or
mov
inc
xchg
stos
dec
inc
jo
dec
xchg
les
xor
sbb
sahf
sub
inc
loop
ucomiss
cmp
or
cli
xlat
fldenv
push
xchg
xor
sub
sahf
fisttpl
ret
add
pop
mov
push
pop
pop
dec
sub
inc
or
mov
mov
psrld
or
cli
or
inc
sub
xchg
push
jecxz
adc
sbb
xchg
popa
mov
cld
jle
xor
pop
ret
cs
mov
xchg
aam
mov
push
aam
sbb
and
mov
or
add
das
and
cmp
dec
push
int3
lock
shrb
mov
and
ja
push
inc
mov
icebp
mov
mov
loop
das
sub
test
adc
clc
jb
mov
lret
push
adc
fiaddl
call
std
mov
mov
mov
pop
rdmsr
adc
fadds
add
cmp
cli
aaa
rorb
inc
jl
lods
mov
insb
inc
mov
pop
push
push
rorb
and
pop
test
sub
xor
jnp
je
repz
adc
fadds
and
add
inc
stos
test
lret
das
fistpl
or
orb
jmp
addl
lea
jmp
fidivrs
enter
bound
adc
adc
lods
add
jno
and
xor
add
loope
jo
and
or
adc
or
adc
or
dec
add
adc
sbb
mov
int3
cmp
add
mov
adc
xor
or
or
and
sbb
or
and
adc
mov
push
int3
cmp
xchg
mov
and
adc
or
adc
dec
jmp
jp
mov
sbb
adc
popa
les
fldl
mov
ret
add
adc
icebp
adc
pop
daa
jmp
jnp
mov
mov
push
int3
cmp
xchg
mov
jo
inc
sbb
and
add
xchg
jmp
jns
or
or
adc
fisttpll
mov
push
sbb
jns
add
je
pop
mov
jnp
adc
or
push
inc
cmp
push
lods
add
pop
repz
pop
adcl
pop
in
sub
add
stos
mov
add
push
xchg
adc
add
adc
mov
adcb
push
fcompl
mov
xchg
pop
jbe
inc
add
adc
xchg
out
push
fmuls
or
popf
rorl
fmuls
int3
mov
push
add
and
add
dec
push
pusha
pop
add
pop
push
pusha
pop
add
jbe
pusha
pusha
add
cwtl
push
pusha
fs
test
pusha
push
mov
pop
subb
pop
mov
add
jns
push
inc
je
inc
xchg
and
add
sub
jl
add
stos
repnz
nop
mov
test
or
test
cmp
sbb
lret
pop
repz
add
in
push
xchg
test
add
push
mov
mov
jae
or
push
jns
outsb
enter
mov
push
pop
test
push
add
in
push
lods
fld
cmpsb
loop
sub
xchg
lret
and
cmp
or
data16
add
mov
sub
lods
test
mov
fnstenv
push
shll
scas
enter
xor
nop
mov
adc
mov
shll
or
insb
aaa
push
push
fxch
or
dec
daa
stos
mov
adc
push
shlb
mov
sbb
cmp
dec
stos
mov
sub
rclb
dec
lret
pop
push
fsubl
rep
cs
push
out
orb
subl
add
or
enter
in
orl
mov
mov
hlt
add
insb
push
movsb
sub
clc
test
mull
cld
or
adc
mov
movl
adcl
mov
xchg
rcrl
out
mov
add
jle
push
inc
sbb
mov
subb
adc
cmp
and
jb
movsl
dec
cmc
cmp
adc
push
push
push
jg
adc
add
pop
andl
stos
push
sbb
loopne
sbb
inc
pop
inc
sbb
xchg
int3
clc
adc
ljmp
dec
sub
and
jl
lock
xor
sti
shrd
in
fdiv
xlat
jnp
sbb
add
dec
push
repz
pop
sub
push
xchg
shr
push
repnz
outsb
push
jge
xchg
ja
dec
adc
add
mov
mov
add
or
sahf
sub
pop
jne
xor
and
loopne
push
or
add
mov
in
movsb
jns
push
mov
and
orb
jmp
cltd
cmpsb
pop
push
adc
mov
fidivrl
arpl
xchg
mov
mov
or
std
sbb
fnsave
and
repz
adc
adc
dec
lret
adc
ljmp
adc
cmp
pushf
dec
mov
icebp
shrb
mov
cwtl
push
cmp
jb
sbb
les
inc
lcall
lahf
xor
or
xor
pop
popa
add
into
adcl
adc
cwtl
les
mov
test
inc
mov
bound
or
add
int
out
and
std
lahf
mov
sub
mov
sbb
mov
sbbb
aaa
daa
inc
test
xchg
mov
or
les
lods
sbb
mov
adc
movsb
mov
adcb
jne
aas
mov
mov
lods
les
andb
test
adc
or
addb
mov
mov
cld
bound
cwtl
cmp
and
sbb
or
fisttps
ret
xor
sbbb
mov
and
mov
adc
mov
mov
out
dec
test
add
jno
sbb
inc
nop
bound
adc
jne
add
adc
mov
mov
sub
jns
adc
sub
sbb
xchg
test
jb
inc
mov
addb
les
sub
add
dec
out
pop
sbb
mov
push
aam
out
and
adc
or
adc
daa
movsb
cmpsl
cwtl
bound
sub
pop
cmpsl
sub
sbb
inc
andb
mov
xor
add
scas
cmp
mov
icebp
xlat
sub
sub
cmpsl
cwtl
push
movsb
or
adc
pushf
cmpsl
cwtl
rorb
add
sub
sbb
xor
mov
sub
add
add
gs
sbb
mov
pop
push
lods
dec
sub
cwtl
adc
nop
sahf
popa
inc
pushf
xor
ds
inc
xchg
sahf
popa
mov
mov
cmp
push
std
leave
jle
sub
in
add
mov
pop
test
mov
dec
adc
adc
inc
dec
cmpsb
lahf
dec
jnp
loope
inc
or
mov
in
lahf
insb
aas
sahf
pop
test
jl
push
fstps
pop
add
aad
mov
dec
jnp
loope
inc
or
mov
outsl
mov
daa
repz
mov
test
adc
add
mov
push
cmp
std
pop
xchg
ficomps
sbb
nop
or
and
je
xor
mov
and
push
sub
add
es
negl
adc
test
inc
xchg
mov
or
dec
icebp
sahf
test
stos
fs
movsb
dec
test
inc
xchg
mov
mov
adc
stos
jnp
fisttps
aad
push
and
stos
xor
inc
add
aad
mov
mov
clc
push
inc
dec
mov
dec
jp
xor
pushf
sbb
sub
jo
aaa
dec
test
cwtl
adc
xor
pop
pop
lock
out
sarl
sub
dec
cltd
scas
hlt
xchg
ljmp
and
sahf
jl
ret
adc
jp
sbb
les
mov
sub
lret
adc
scas
pop
xor
subl
lock
push
test
pushf
adc
les
stos
fbld
or
out
mov
push
push
or
test
enter
adc
mov
sbb
fstpt
fisttps
pop
push
push
and
aam
aas
and
sti
cwtl
mov
sbbl
mov
fcoml
in
and
mov
mov
ret
adc
fchs
sbb
test
ret
cmp
mov
test
mov
pop
lret
bound
add
cmpsl
or
fimuls
mov
lock
add
addb
pop
mov
clc
push
inc
pop
mov
and
adc
xorl
fs
sbbl
inc
cmpsb
mov
add
cld
adc
rolb
mulb
jnp
loope
pop
or
icebp
or
call
es
leave
pop
add
mov
lds
mov
adc
add
sub
pop
pop
jmp
clc
push
inc
pop
mov
cmp
inc
aas
sbb
fists
mov
popf
pop
mov
dec
jnp
loope
pop
or
icebp
or
arpl
out
testl
sti
and
xor
sub
test
ja
cmp
cltd
xchg
cmp
popa
sub
mov
xor
inc
out
in
inc
add
mov
mov
cmp
iret
cmp
add
xor
xlat
xchg
fimuls
mov
and
inc
andl
aam
add
and
jge
dec
mov
xor
add
sbb
push
dec
mov
jge
push
mov
xchg
clc
rolb
mov
ret
adc
fstps
pop
test
xor
arpl
out
mov
push
testb
add
push
out
add
call
jmp
inc
push
loopne
or
and
insb
adcl
stos
fldcw
shrb
adc
mov
and
and
push
sub
loope
insb
or
mov
add
sarl
out
testl
mov
or
scas
fsts
les
adc
mov
push
adc
xor
cmc
inc
outsl
mov
and
jmp
fists
mov
mov
push
inc
mov
pushf
and
sub
jnp
jnp
loope
jb
test
mov
inc
movsb
add
pop
leave
lds
ljmp
mov
adc
lods
and
add
mov
adc
fs
mov
cltd
inc
sarb
jae
arpl
cs
dec
jnp
loope
jne
test
shrl
mov
mov
mov
out
enter
ret
mov
cld
adc
stos
xchg
fimuls
mov
and
adc
andl
mov
test
sub
pop
lds
or
stos
lock
fimuls
mov
jbe
inc
faddl
cmp
cli
fs
testl
mov
and
push
arpl
das
mov
dec
jnp
loope
jge
test
enter
ds
in
test
jmp
neg
leave
out
mov
jle
fcmove
adc
hlt
add
jg
jl
mov
or
push
and
pop
fs
cld
adc
push
and
xchg
sti
pop
daa
mov
test
int3
adc
add
add
ljmp
imul
scas
mov
xchg
inc
or
add
and
push
mov
lods
add
into
or
sub
inc
adc
add
inc
xor
jge
aas
mov
ficoms
fstps
dec
inc
sbb
add
lock
jg
jge
dec
mov
and
push
inc
roll
sahf
and
jb
add
addr16
rorl
push
and
pop
sub
inc
sub
add
mov
arpl
cmpsl
mov
adc
xchg
lret
inc
xor
add
cmpb
cwtl
aas
pop
adc
mov
mov
test
aam
in
cmp
sbb
in
pop
xor
mov
and
mov
test
inc
mov
jge
and
cmc
ja
sub
inc
cmp
adc
dec
pop
xchg
mov
inc
add
lret
jno
ficoms
fsts
push
test
mov
or
mov
fsts
pop
sbb
dec
or
addr16
mov
testb
add
mov
fsubl
and
testb
insb
add
jle
cld
add
and
push
xchg
fstl
je
in
cli
cmp
stos
outsl
lret
pop
fsubl
adcb
xchg
js
jl
pop
pop
inc
dec
orb
mov
push
and
or
adc
rep
es
aad
loope
lods
push
pop
fstpt
loope
repz
xor
adc
ficoms
adc
add
inc
mov
out
mov
or
jg
jo
cmp
inc
orb
mov
jno
sbb
inc
mov
mov
out
ja
rcrb
or
cmp
inc
fistpll
jmp
xor
cmp
add
or
push
insl
pop
jl
pop
out
inc
adcb
mov
ja
int3
push
mov
push
add
repz
push
orl
scas
mov
or
xchg
clc
sub
adc
sbb
sbb
insb
shlb
imul
insb
pop
add
xor
jo
imul
scas
int3
cmpl
push
cmp
adc
mov
sahf
fadds
lret
mov
jl
aad
or
sub
xorb
fstl
and
testl
das
and
fmuls
inc
or
xchg
cmp
and
fs
and
cs
movsb
and
dec
sbb
sbb
mov
push
adc
testb
or
nop
xor
sbb
add
cmp
jne
loop
fstl
pop
add
or
fiaddl
orl
or
and
or
jne
cwtl
ljmp
inc
inc
or
xor
pop
mov
inc
cmp
xor
fucom
add
push
adc
fisubrl
out
xor
inc
adc
arpl
add
cmc
add
push
inc
cmp
fsubrp
je
jle
out
push
lss
sub
mov
jbe
iret
add
pushf
inc
add
dec
push
xor
pop
filds
xchg
inc
adc
xchg
mov
and
inc
mov
imul
nop
pop
gs
jl
mov
cs
and
insl
test
sti
sub
movzbl
add
sbb
aam
and
mov
jmp
adc
and
mov
push
clc
adc
mov
sub
lcall
add
sub
jno
push
mov
add
ret
mov
fisttps
ljmp
and
jbe
sub
push
ljmp
inc
iret
enter
xchg
movl
and
fimull
mov
jl
popf
test
jg
mov
jne
or
cmp
flds
arpl
push
pop
shll
or
dec
pop
adc
adc
inc
sbb
sub
xor
in
add
sbb
pushf
test
or
ds
outsl
mov
mov
lea
ret
adc
cmp
ror
fmull
inc
sub
cld
inc
inc
addr16
adc
les
les
or
adc
enter
jl
clc
and
dec
dec
sbb
add
enter
sbb
adc
testl
pusha
imul
pusha
arpl
or
push
fs
gs
pop
mov
push
sbb
loopne
pop
push
inc
add
push
sbb
mov
inc
mov
andl
aam
mov
pop
or
inc
and
and
mov
and
aam
ret
sbb
loopne
insb
or
or
fs
or
lock
sbb
mov
xchg
or
dec
sub
aam
mov
fists
push
loop
dec
test
loop
push
xor
gs
jbe
mov
mov
bound
or
je
aam
jbe
lock
adc
notl
test
push
jle
adc
mov
in
int3
sbb
push
dec
fdivrs
pop
clc
je
nop
or
adcb
pop
clc
adc
aam
adc
sbb
cwtl
ja
aam
inc
xchg
nop
inc
ja
inc
inc
push
aam
and
mov
pop
loopne
xor
in
movsl
sbb
rclb
lock
inc
inc
and
or
cmpsl
cld
mov
jno
mov
cld
test
xchg
cmpsl
aam
dec
enter
cmpsl
lock
inc
push
pop
push
jb
jo
rcl
pusha
add
add
adcl
sub
das
inc
jge
adcb
roll
add
leave
je
xchg
mov
mov
lea
pop
std
aad
subl
or
inc
jo,pt
jbe
jge
jne
andl
dec
inc
xchg
push
rol
movsl
push
std
cmpsb
data16
ret
inc
movzbl
mov
xchg
sbb
xlat
dec
js
push
and
mov
and
push
cmp
push
int
xor
cmc
jecxz
sbb
cmp
fbstp
adc
xor
xor
add
out
sbb
aaa
mov
das
jle
add
dec
aas
push
mov
inc
xor
cld
and
inc
sbb
cmp
decl
and
test
inc
outsb
aaa
fcoms
out
inc
dec
adc
xor
repz
sbb
inc
dec
jmp
adc
mov
fidivl
das
movsl
dec
inc
aas
mov
add
or
inc
das
or
dec
pop
rcrl
cmp
or
mov
cmp
ret
fimull
mov
les
out
daa
mov
add
std
adc
aad
loop
shrb
push
mov
dec
psraw
cmpxchg
dec
or
test
in
mov
dec
in
loop
dec
in
push
rcl
xor
and
and
cmovs
pop
stc
push
je
in
pushf
adc
jp
add
sbb
adc
test
and
and
sbb
push
inc
sbb
mov
and
fs
jae
les
adc
push
adc
dec
push
pop
push
xchg
dec
movsb
pusha
das
cs
aas
lea
sbb
add
int3
roll
dec
test
aas
and
pushf
dec
xchg
lret
dec
xchg
cli
or
pusha
sbb
mov
dec
jle
push
mov
dec
cmpxchg
dec
or
mov
mov
inc
adc
xchg
test
mov
lock
push
xchg
outsl
push
xchg
sahf
push
test
mov
movsb
sub
lea
adc
push
sti
adc
sti
adc
mov
push
push
jle
enter
ret
pop
bound
pop
loopne
in
lea
in
xchg
push
psrlq
ret
pop
idivl
test
push
das
pushf
adc
iret
or
testl
push
adc
push
sti
sub
fdivrs
and
adc
cld
sub
bound
push
pop
les
dec
lea
inc
mov
dec
and
mulb
jg
mulb
scas
push
jl
pusha
mov
or
cmc
push
push
les
les
push
mov
and
mov
das
push
cmpxchg
or
mov
movsb
push
movsl
push
xchg
test
and
cld
and
pop
mulb
ss
jl
rorb
adc
jge
inc
mov
jb
push
inc
mov
mov
and
mov
adc
pop
pop
mov
inc
fcoms
aas
xor
sbb
add
inc
cmp
xrelease
fisttpll
int3
sub
pop
jg
negb
mov
pop
std
or
pop
jge
icebp
int3
pop
and
es
pop
decb
cmpxchg
pop
or
xor
lods
inc
pop
in
jmp
pop
or
or
lods
ds
pop
in
insl
inc
pop
in
pushf
inc
pop
mov
adc
pop
sti
adc
sti
adc
les
sub
out
cmpsl
fdiv
sbb
pop
mov
pop
xor
gs
aas
fadds
mov
adc
pusha
sti
adc
pusha
scas
les
push
jbe
les
popa
sub
dec
bound
mov
bound
mov
bound
in
repz
bound
inc
arpl
test
mov
sub
fdivr
and
fs
shlb
fs
add
gs
imul
mov
xchg
push
test
dec
add
mov
shl
add
mov
cmpsw
xchg
sbb
jle
aas
cmp
xor
add
scas
adc
add
mov
mov
fdivs
inc
dec
and
hlt
mov
bound
mov
jne
fsubrs
inc
pop
inc
mov
das
inc
fnsave
jne
jle
lods
movq
lea
fbstp
cmp
loope
leave
mov
xor
enter
pop
clc
xor
dec
mov
lahf
pop
outsl
push
mov
cli
mov
add
mov
or
jmp
enter
push
popf
loope
or
mov
and
mov
push
jmp
fwait
sbb
in
jge
cld
lea
data16
mov
aas
mov
xchg
inc
inc
inc
cmp
jle
add
fisttps
jne
fwait
pop
jmp
daa
cmp
fs
add
or
adc
inc
leave
mov
sub
inc
cmpsl
dec
bswap
push
int
lret
test
into
enter
inc
nop
lock
loope
mov
cmp
cli
addl
or
rorl
cvtpi2ps
in
cli
cmpsl
pop
aad
sbb
js
xor
add
jmp
sub
jmp
dec
sar
jns
cmpl
pop
dec
sub
dec
call
test
inc
fwait
fs
adc
and
nop
lret
sbb
or
iret
inc
mov
dec
sub
popf
ret
ljmp
ds
mov
adc
dec
lock
fcoms
sub
dec
mov
rclb
mov
inc
das
shl
cmpsb
push
dec
lods
and
ret
mov
adc
mov
jno
sahf
and
enter
sub
inc
sub
push
leave
test
mov
push
ret
pop
cwtl
push
lea
call
mov
jno
inc
loopne
or
int3
fstp
dec
pop
ret
cmp
js
mov
push
cmp
js
js
out
sti
in
cmc
dec
outsl
mov
and
jmp
scas
mov
adc
fnstenv
std
jb
jge
adcb
jle
int3
cwtl
daa
mov
push
je
or
push
add
adc
cmp
fadds
cmp
lea
xor
push
mov
pushl
sbb
xorb
push
cmp
or
lea
add
jns
jno
aam
cmp
mov
call
cwtl
inc
push
movl
ljmp
imul
lahf
imul
into
imul
lcall
icebp
or
add
or
xchg
insb
xchg
shrb
insb
lret
sbb
cltd
mov
out
push
mov
jge
cwtl
insl
jge
insl
push
lret
test
cmp
lods
add
lea
sbbl
push
inc
repz
cmp
mov
mov
inc
icebp
dec
mov
push
inc
or
and
sbb
mov
stos
mov
jmp
and
lret
inc
inc
add
jns
das
scas
xor
sahf
jo
or
or
dec
ljmp
aad
insl
pop
mov
jae
call
scas
lods
mov
jb
pop
mov
pusha
test
mov
aaa
or
arpl
cmp
sbb
xchg
jo
ret
and
sub
jg
pop
adc
push
xchg
xor
loopne
sub
mov
aad
out
cltd
inc
sub
mov
loopne
push
pop
cld
pushf
mov
idivl
mov
mov
or
repnz
inc
or
scas
sarb
jle
lea
lock
adc
inc
mov
jno
add
sarb
mov
mov
add
loopne
and
stc
cmp
dec
mov
xor
adcb
ret
xchg
ss
mov
sti
pop
sub
lret
xchg
sbb
inc
call
or
push
test
stc
ret
mov
pop
lods
sahf
push
ret
inc
jno
sarl
xchg
xchg
push
xchg
xchg
movsb
xor
and
push
int
movsb
subl
mov
in
pop
lret
subb
push
cmc
lods
xor
pop
hlt
movb
adc
mov
and
pusha
mov
push
inc
call
jns
outsb
lea
inc
dec
or
movsl
lods
dec
push
xchg
xchg
std
stos
mov
pop
adc
xor
mov
mov
mov
aas
xchg
mov
mov
xor
inc
dec
dec
shrb
sbb
cmp
mov
jp
sub
push
push
push
jne
push
je
adc
cmp
and
sbb
mov
and
pop
jns
enter
sub
push
std
or
or
sbb
repnz
das
xchg
mov
inc
je
mov
je
mov
je
test
sbb
mov
jne
mov
jne
mov
sub
pop
push
or
sub
hlt
sbb
and
dec
jbe
in
xor
and
pop
adc
or
adc
adc
inc
or
push
sarb
sub
sti
stc
les
std
or
ret
mov
fwait
shrl
jl
test
loope
and
jbe
and
jbe
and
ja
and
ja
and
int3
clc
add
fsubp
icebp
aas
js
loope
js
mov
js
mov
js
in
adc
jns
inc
inc
jns
jbe
jns
movsl
inc
jns
adc
jns
adc
jp
adc
sti
adc
scas
ficoms
stos
sub
fdivr
and
jnp
das
push
jnp
loope
and
loop
jnp
gs
aas
fadds
scas
test
les
jl
les
jge
mov
jge
mov
jge
mov
jge
in
and
jle
push
inc
jle
xchg
in
mov
jle
adc
jle
adc
jg
adc
sti
adc
jg
les
cmpb
cmpb
subb
lods
sbbb
fistps
pop
bound
inc
test
jge
out
jge
adc
sahf
mov
xor
or
loop
pop
fs
pop
add
cmp
cld
xchg
push
add
push
adc
push
in
push
sbb
cmp
push
adc
mov
xor
cmpxchg
sbbl
cld
orl
sub
cmpxchg
cmpxchg
test
out
int3
jg
daa
test
push
test
mov
lea
test
loope
xchg
test
push
test
ds
xlat
xchg
les
xchg
mov
xchg
addb
fiadds
sbb
mov
adc
mov
adc
mov
adc
sti
adc
mov
adc
mov
adc
scas
les
fdivrs
mov
mov
xor
gs
fadds
mov
adc
mov
adc
mov
les
les
lea
mov
mov
mov
mov
mov
mov
mov
mov
lods
pop
std
jp
push
sub
push
adc
aaa
adc
jp
or
jmp
add
repz
push
gs
repz
adc
sti
adc
sti
adc
nop
cli
adc
adc
int3
cld
das
pop
xchg
mov
pop
ret
pop
bound
adc
pop
mov
xchg
pop
bound
xchg
lea
xchg
xchg
push
xchg
xchg
adcl
push
push
std
fdivr
sub
xchg
in
pop
pop
xchg
sub
mov
popa
aas
jae
xchg
in
mov
out
stc
jge
or
aad
lods
loope
push
clc
or
sub
push
xchg
sbb
mov
cmpxchg
xchg
or
sub
lods
pop
inc
xchg
in
mov
in
mov
add
sti
adc
adc
cwtl
push
or
cltd
les
sub
in
fadd
adc
pop
bound
stc
jge
or
lcall
sbb
jo
lahf
cli
nop
daa
mov
jno
pop
movsb
out
adc
xor
dec
jle
mov
jns
fs
scas
clc
mov
clc
scas
in
mov
or
jmp
js
fimull
xor
fldenv
and
xor
outsl
inc
add
pop
daa
shr
test
shl
cli
inc
add
adc
sub
and
ss
xor
sub
inc
sbb
jne
push
je
sbb
out
cmp
jge
shrb
cmp
and
dec
mov
mov
lsl
mov
xor
add
pop
pop
mulb
pop
cli
lret
movsl
adc
pushf
pop
and
adc
and
std
ficomps
aas
jg
iret
enter
add
sbb
push
push
ljmp
mov
push
mov
push
or
push
add
add
cmp
jl
mov
sub
lock
jle
jb
je
jbe
js
pop
dec
mov
jae
cmp
mov
adc
nop
inc
jne
pop
sbb
add
in
mov
js
imul
jmp
push
sub
mov
cld
mov
test
xchg
push
inc
add
in
xorl
add
mov
or
jo
test
add
lret
or
aaa
icebp
test
push
outsl
mov
mov
inc
lahf
in
add
in
xor
ljmp
mov
sti
adc
mov
xor
test
aas
mov
or
and
addr16
adc
arpl
push
sbb
popfw
or
mov
jnp
sbb
pop
hlt
fisubs
sub
in
mov
xchg
andl
shl
mov
xchg
dec
mov
sarb
int3
loope
movsb
cmpxchg
cmp
ja
xchg
movsb
sbb
repz
fadd
and
imul
pop
cli
movsl
adc
pop
je
xchg
mov
cmpsb
test
sbb
loop
cmpsl
pop
bound
pop
bound
cmpsl
lea
test
fcoms
xchg
subb
push
push
cld
fdivr
sub
in
pop
dec
test
inc
test
in
add
in
xor
mov
adc
cld
daa
or
push
stos
push
and
mulb
loop
pop
mov
lods
aad
pop
lods
jge
mov
outsl
or
jge
arpl
pop
dec
leave
fstpt
mov
mov
ret
pop
pop
push
fdiv
scas
xchg
es
xchg
push
scas
xchg
test
scas
cld
and
scas
mulb
sub
mov
inc
jle
pop
inc
js
pop
ret
pop
xlat
mov
bound
mov
dec
enter
je
jge
mov
mov
or
mov
or
jge
outsl
mov
mov
mov
bound
mov
bound
pop
bound
adc
pop
lock
fsub
pop
mov
mov
mov
sub
mov
mov
mov
mov
lahf
fadd
es
jno
pop
sbb
addl
iret
loope
jg
test
inc
mov
and
mulb
cmpsl
mov
and
mov
mov
mov
jge
scas
mov
xor
bound
pop
bound
mov
pop
bound
mov
adc
pop
fmuls
loope
mov
sub
mov
fistps
pop
push
push
inc
push
mov
pop
outsl
or
jmp
push
and
test
sub
sbb
mov
mov
sti
and
fisttpl
pop
inc
add
xor
stos
and
mov
inc
mov
in
mov
mov
ljmp
mov
sti
adc
push
push
push
adc
out
dec
das
mov
jl
out
sbb
add
or
shrl
jno
lea
sub
pop
mov
jbe
sar
xchg
pushf
aas
pushf
jecxz
out
idivl
jg
ret
clc
ret
ret
ret
ret
ret
ret
imul
and
pop
adc
scas
and
cld
inc
clc
les
les
lds
mov
push
lds
xchg
push
lds
loop
pop
sub
xor
jg
ret
lea
aas
sahf
popa
cld
repz
enter
psrad
pop
enter
xor
leave
jg
leave
scas
mov
xlat
adc
and
cld
inc
lret
lret
lret
xchg
lret
or
lret
lea
psrad
pop
int3
push
jmp
xor
mov
nop
rclb
pop
aas
and
repz
add
sub
inc
inc
dec
std
pop
lods
xor
xor
mov
xchg
in
dec
jp
dec
pop
xchg
hlt
in
cmp
jg
mov
push
sahf
shlb
cmp
cmp
divb
mov
xor
hlt
test
mov
sbbb
mov
or
mov
add
bswap
push
xor
in
pushf
mov
and
in
adc
cs
ret
cmp
test
xchg
pop
les
jl
lea
jg
mov
popf
xchg
aad
xchg
mov
mov
fwait
xchg
loopne
mov
sub
daa
xchg
lcall
push
adc
jne
jnp
mov
test
loopne
mov
push
leave
mov
cmp
add
sub
add
test
mov
test
xor
adc
xlat
or
mov
inc
mov
test
in
adc
iret
inc
mov
cli
xlat
sbb
mov
adc
adc
or
test
pop
test
mov
int3
push
movsb
lods
enter
xchg
pop
pop
rcrb
xor
sub
mov
dec
adc
sub
xor
add
and
adc
and
inc
dec
pop
adc
clc
adc
int3
sbb
mov
cmp
pushf
bound
xor
jno
mov
add
or
push
sbb
pop
popa
outsb
mov
jo
or
je
sbb
insb
hlt
iret
adc
ss
arpl
push
jo
popa
popf
pushl
mov
inc
lods
shrb
das
test
add
dec
fcoms
add
inc
inc
inc
dec
stc
bound
shrb
cmpsb
mov
jnp
push
push
mov
movsb
lods
mov
adc
inc
cwtl
mov
arpl
xor
sub
and
add
push
pushf
mov
push
std
into
xchg
dec
jge
cmp
xchg
popa
insl
mov
push
movsb
dec
lea
mov
adc
jne
sbb
clc
lds
or
insb
jp
push
cs
add
add
addr16
adc
scas
insb
mov
cmpl
insl
sahf
sub
cmpb
pop
dec
imul
insl
jbe
xchg
dec
jo
fimuls
sbb
arpl
mov
enter
jae
out
bound
xor
jle
imul
mov
mov
mov
cwtl
adc
stc
push
stos
jmp
fwait
cmp
test
jae
ss
je
cmp
sbb
dec
iret
outsl
xchg
fwait
xchg
inc
jb
in
mov
adc
ds
movsl
daa
push
cmp
test
xchg
or
adc
divl
pop
fistps
stos
addb
adc
aaa
dec
cmp
mov
add
push
add
scas
mov
scas
push
adc
fcoms
inc
ljmp
pop
clc
add
push
push
push
jns
pop
push
lcall
mov
sub
mov
xor
inc
insb
and
js
adc
dec
addr16
xchg
insl
dec
or
xchg
stc
lods
jle
inc
iret
and
add
xchg
mov
test
cld
add
ljmp
inc
jae
or
inc
popa
pop
mov
adc
push
lock
lods
imul
push
pop
add
dec
cmp
xchg
nop
mov
push
bnd
inc
and
xchg
fcompl
mov
cwtl
pop
cwtl
jns
add
pusha
jno
pop
or
push
out
es
mov
push
mov
jb
pop
push
cmc
leave
add
ja
inc
cmpsl
pop
jmp
adc
in
stc
lock
loop
mov
cmpb
inc
test
jo
mov
adc
cwtl
mov
push
mov
call
les
sub
or
insb
and
lret
rclb
call
xor
outsb
lods
pop
jp
test
xchg
call
divb
mov
inc
or
jmp
xchg
daa
jne
add
jne
add
mov
scas
sub
lcall
nop
jb
mull
mov
cwtl
fsubrl
aad
sub
cmp
jge
cmpsl
cmp
bound
arpl
inc
cwtl
and
dec
jmp
lock
sbb
push
sbb
sbb
adc
sbb
imul
not
push
fs
stos
mov
push
test
sub
sbb
das
test
sbb
sbb
adcb
pop
lock
jbe
decl
pop
iret
adc
rclb
mov
sub
or
or
or
push
lea
call
cmp
popf
xlat
mov
push
pop
xor
cmp
push
push
sbb
repz
lret
test
test
adc
mov
mov
mov
stos
adc
lds
gs
sbb
mov
loop
push
inc
rol
xor
mov
repnz
jb
jle
sbb
push
adc
dec
add
push
adc
ljmp
add
adc
push
das
adc
push
sub
or
mov
cli
std
mov
sub
sbb
add
jno
ds
orl
mov
inc
pop
hlt
dec
loopne
data16
xor
push
test
andl
inc
dec
das
inc
push
push
pop
iret
stos
and
cmp
loop
int
and
dec
data16
fstpt
fidivrl
push
test
push
add
dec
mov
adc
xchg
sti
mov
and
sbb
sbb
lock
cmp
jle
jge
fisttps
jne
rclb
push
outsb
daa
jge
and
push
xchg
sbb
in
and
jae
stc
out
aas
pop
or
adc
dec
xchg
je
leave
scas
fidivl
jnp
fidivl
or
mov
jbe
fwait
sub
or
add
sbb
mov
jmp
lea
add
jbe,pt
shll
test
ficompl
sub
jge
mov
lock
insl
adc
je
sahf
arpl
mov
fisttps
and
rcrb
sub
and
divl
pop
sbb
dec
sbb
psrld
xor
or
pop
or
or
mov
into
lock
insb
adc
xor
push
in
daa
pop
mov
pop
inc
das
call
xchg
ljmp
rorb
lock
push
sub
arpl
sub
xor
sub
shlb
push
cmp
jae
xchg
lock
imul
push
int
movb
in
lea
inc
adc
sub
jl
dec
jle
pop
xor
cmp
inc
dec
add
mov
fstpt
inc
and
mov
daa
mov
jne
js
xchg
add
lahf
add
xor
xor
jbe
xchg
xchg
mov
mov
jne
in
jg
popl
sub
jns
push
cli
dec
adc
sub
popa
sub
fwait
lret
pop
cwtl
fstl
or
dec
xchg
cltd
xor
pop
popf
mov
mov
inc
push
pop
lcall
or
dec
mov
out
inc
push
xor
arpl
hlt
fdivl
adc
sub
cmp
xlat
daa
and
mov
pop
out
sub
or
mov
mov
pop
pusha
rcrl
dec
adc
int
fidivrl
mov
sub
xlat
dec
pop
cmpsb
or
ficoml
and
leave
inc
jno
adc
mov
dec
cmp
jl
xchg
movl
and
and
sbb
push
sbb
and
push
pop
jg
xor
adcb
pop
aaa
shrl
cltd
add
cli
mov
popf
pushl
mov
jg
pushf
add
clc
add
ds
xor
cmpw
add
push
lret
mov
cmp
push
cmp
xor
sbb
sbb
inc
decb
push
sub
push
push
out
loop
adc
ret
and
inc
add
mov
stos
in
mull
mov
pop
push
pop
mov
dec
mov
mov
mov
repnz
xchg
pop
mov
mov
mov
adc
test
push
in
inc
fldt
mov
adc
push
daa
add
dec
push
sub
enter
push
leave
dec
bound
sbb
dec
sub
rol
icebp
dec
sbb
or
ljmp
push
and
inc
push
dec
test
rcrb
xchg
jno
mov
sub
stc
les
js
mov
out
cmp
cmp
dec
add
mov
inc
decl
mov
mov
inc
sub
sub
test
xchg
xor
xchg
das
adc
sbb
inc
mov
mov
int
loopne
pop
out
daa
push
js
adcl
jo
pop
dec
clc
inc
mov
inc
les
mov
and
es
mov
inc
and
pop
inc
cld
call
fs
adc
sub
jg
cmp
inc
sub
lock
clc
jns
sbb
mov
push
pop
add
pop
jne
pop
mov
shl
push
repz
push
sbb
mov
fs
sub
mov
ja
daa
and
lret
push
in
xchg
add
cmp
mov
mov
repnz
mov
sub
jno
push
dec
sbb
add
sub
out
and
test
adc
and
sub
cmpsl
test
add
adc
push
adc
xor
in
pop
adc
ret
movsl
and
popf
popf
pusha
mov
fldenv
ja
cwtl
jmp
xor
add
xor
add
arpl
test
ficoms
or
push
in
push
sahf
dec
fsubrs
and
add
push
inc
sbb
xchg
adc
mov
sbb
movsl
lahf
lods
cmpsl
xchg
movb
es
xor
loope
or
mov
test
and
jmp
push
or
push
and
lock
mov
mov
ja
and
test
cld
sahf
movsl
adc
loop
adc
inc
jo
pop
jnp
push
cmp
pop
scas
push
repz
imul
cmp
nop
test
and
lea
sub
xchg
out
xchg
movsb
cmpsl
sbb
push
or
lea
and
xor
jbe
bound
ret
cs
adc
mov
dec
loopne
jle
jl
stc
int3
inc
ret
mov
mov
push
xchg
ljmp
sub
popa
popa
or
xor
out
add
or
cmp
xchg
pop
cltd
out
jns
cs
pop
lods
jmp
ret
push
pop
pop
mov
and
out
jmp
or
sub
imul
test
into
pop
ffreep
sahf
addr16
stc
fwait
push
xor
push
add
enter
enter
cmp
mov
and
push
les
dec
inc
shlb
or
xor
xchg
xchg
mov
mov
adc
and
cld
inc
add
mov
fs
adc
inc
sub
les
mov
dec
and
dec
push
pop
faddl
movb
dec
add
ret
ja
andb
or
sub
or
jmp
dec
frstor
sarb
add
stos
xor
mov
movq
add
inc
or
xor
adc
mov
adc
xor
xor
rcrl
xchg
jbe
dec
inc
in
cmp
lods
es
jno
mov
roll
out
out
arpl
fidivl
and
ror
push
imull
clc
or
add
lods
or
add
lret
addb
mov
and
test
pop
inc
xor
call
enter
lea
pop
mov
push
inc
mov
mov
arpl
ja
sub
inc
xchg
test
pop
test
sub
adc
cmp
cmp
shrl
or
mov
scas
stos
push
adc
adc
adc
xchg
stos
negb
rclb
enter
dec
xchg
or
mov
sarb
bnd
int3
movsl
or
mov
add
lahf
sub
or
jmp
fisubrl
das
push
xor
outsb
or
pop
ret
mov
fstpl
clc
or
adc
lods
fldl
jl
jbe
jle
les
xchg
xor
test
or
inc
cmp
loope
clc
push
add
js
push
mov
testb
in
ds
mov
pop
mov
fisubl
lret
mov
paddusb
les
inc
cwtl
jns
pop
test
add
push
dec
push
hlt
std
and
cmp
sub
mov
in
test
cld
sbb
pop
lret
lret
push
nop
mov
mov
add
addb
leave
mov
aas
gs
sbb
or
jmp
sbb
mov
xor
and
rorb
xor
mov
repz
sbb
adc
les
mov
mov
or
in
dec
adc
xchg
iret
outsb
push
stos
pop
jo
xchg
loopne
jns
add
stc
arpl
cltd
sub
movsb
mov
mov
movsb
lods
ret
lea
dec
add
pop
sbb
xor
xchg
shlb
jg
popa
pop
sbb
inc
sub
ret
jmp
clc
je
test
push
mov
jbe
xor
xor
xchg
cs
add
arpl
dec
lds
call
out
ljmp
cmc
ja
adc
rcll
inc
repz
aam
pop
inc
stc
adc
or
aas
xchg
shl
dec
dec
cwtl
ljmp
jmp
outsl
decl
jns
sub
lret
icebp
rcrl
sub
call
clc
add
rolb
iret
pop
jae
mov
cld
into
subl
dec
adcb
dec
dec
aam
jecxz
popa
enter
xor
std
xchg
inc
loopne
mov
repz
scas
sub
lds
adc
push
incb
jbe
addl
ja
mov
scas
movsb
mov
jo
jmp
into
push
mov
sti
popf
sti
cmp
imull
jecxz
inc
jmp
bound
sbb
repz
fsubl
ljmp
add
dec
imul
into
sub
inc
les
into
sub
jbe
push
push
or
dec
adc
adc
or
cmp
aas
jle
sub
cmpsl
fidivs
cli
fstpt
and
bound
jo
jne
adc
add
add
sub
shr
outsl
nopl
iret
imul
xor
sbb
daa
or
add
add
mov
lea
movl
xor
jl
loop
aad
lea
or
inc
adc
and
sbb
insb
dec
or
not
and
xchg
pop
push
xor
jmp
stos
xor
sub
icebp
push
push
es
adc
mov
mov
inc
inc
std
and
mov
test
outsb
add
push
and
jbe
and
shr
dec
mov
jae
sbb
jmp
mov
repz
pop
push
ret
adc
mov
adc
in
cvtps2pd
andb
test
mov
lods
inc
push
mov
lahf
gs
xchg
jge
je
jb
in
dec
push
cmpsb
push
ds
dec
push
pop
mov
jmp
cs
call
and
fsubrs
adc
adc
xchg
add
lds
xchg
push
cmpb
jne
add
dec
adc
insl
movsl
in
in
push
push
imul
js
pushf
xor
add
dec
shr
mov
nop
mov
cmp
adc
jae
inc
call
mov
jmp
push
into
and
mov
lock
bt
jae
inc
test
test
push
push
mov
jns
orl
mov
xor
inc
adc
adc
sub
cmp
pop
adc
cmc
mov
and
shlb
pop
sub
pop
cmp
inc
fisubrl
pop
in
enter
scas
and
ret
or
inc
imul
fbld
in
or
imul
adc
rcr
and
or
and
adc
inc
sub
add
push
dec
inc
mov
test
inc
cwtl
xor
lea
adc
dec
lret
sbb
push
add
jp
jb
jb
nop
outsb
dec
inc
inc
test
push
aaa
aam
pushf
push
adc
and
and
xor
sub
iret
mov
mov
push
jmp
lea
mov
and
daa
repnz
add
cmp
ja
xchg
ffreep
jg
nop
rorb
mov
out
adc
imulb
mov
dec
pop
repz
add
sbb
es
iret
and
cmp
jne
cltd
adc
test
jb
inc
mov
dec
xor
sbb
mov
push
mov
sub
or
inc
or
push
and
adc
repnz
ret
xor
jmp
mov
jbe
mov
cmpb
subl
adc
stos
xor
jae
mov
adc
and
push
adc
jecxz
cmp
xorl
repnz
xor
cmp
mov
js
cs
dec
rclb
mov
lret
jns
sub
xchg
das
fmull
push
mov
inc
cmp
aam
pop
lea
aaa
call
pusha
adc
mov
sub
jbe
fisubrl
dec
icebp
jbe
pop
enter
dec
sahf
lods
bound
les
sub
outsl
adc
push
mov
dec
jmp
cld
pop
rep
pop
jle
push
mov
movsl
pop
inc
or
je
not
jl
std
fisubs
xor
je
mov
lret
pusha
rol
pop
and
dec
int
add
sbb
das
and
lea
loop
mov
fs
lea
adc
cmp
jne
shr
jae
sub
adc
add
push
orb
mov
or
or
sub
xchg
aad
jle
xchg
sbb
jbe
ja
ret
and
inc
test
inc
push
dec
xor
lret
call
mov
sbb
xchg
test
andb
adc
leave
mov
adc
popa
inc
push
mov
mov
push
push
inc
leave
test
sub
mov
dec
add
lea
fdivl
xor
mov
nop
or
aad
adc
and
pop
shll
enter
out
pop
inc
push
sub
dec
mov
pop
dec
int3
and
outsb
shll
push
push
xchg
and
mov
dec
sub
inc
nop
outsl
jge
adc
popa
add
sub
xor
mov
or
jne
ret
mov
out
pop
pushf
fildl
nop
pop
and
jp
sete
or
loopne
mov
jno
mov
inc
shrl
xor
out
jbe
pop
lret
pushf
movl
shl
popa
or
jbe
push
push
test
adc
rclb
xchg
test
sub
or
add
adc
loop
jmp
hlt
cmpl
sub
mov
rcrb
das
mov
cmp
jge
adc
adc
push
lcall
adc
stos
push
push
mov
jmp
inc
sub
sub
pop
dec
hlt
cmp
jb
add
call
test
and
jbe
adc
addr16
jmp
scas
cmp
xor
inc
xchg
xchg
add
int
mov
adcl
sub
pop
add
cltd
ds
dec
es
xchg
pop
jmp
sbbb
inc
inc
sbb
pop
jmp
sbb
sbb
mov
sbb
xchg
inc
movsl
jmp
xchg
jo
mov
test
test
add
or
movsl
and
les
dec
sbb
fildl
cmpsb
mov
mov
pavgw
fwait
movl
pop
lods
jge
lahf
xchg
cwtl
xor
pop
jae
sub
xor
loope
push
pusha
or
jl
rcr
cmp
xchg
iret
lock
add
jae
add
add
je
shl
jmp
add
aaa
adc
sub
push
movzbl
in
ret
mov
decl
rclb
jmp
test
jnp
fldcw
push
cmp
push
push
lea
std
in
cmp
xchg
mov
push
add
xchg
rcrb
mov
fcomp
or
popa
push
arpl
fidivs
outsl
sub
or
xor
ret
nop
scas
rcll
sbb
xchg
movl
stc
xchg
adc
dec
sbb
add
repz
push
loop
in
jne
inc
scas
pop
mov
dec
adc
je
push
jns
loope
lods
push
pop
push
mov
xchg
mov
adc
ret
push
data16
xchg
xor
cmpsl
adc
or
sub
adc
cmpl
dec
push
insl
pop
dec
loopne
add
lret
mov
jp
test
push
sbb
xchg
adc
adc
lret
jecxz
xchg
pop
sbb
xchg
adcb
divb
je
jmp
push
mov
test
pop
jne
sar
fstps
push
fdivr
repnz
movl
and
adc
cmp
test
pop
dec
add
ds
xlat
stos
movb
std
mov
cmc
lret
cld
roll
add
xor
dec
je
adc
pop
pop
sbb
movsl
js
pop
add
mov
in
adc
loopne
push
cmp
je
xor
mov
jne
pop
rorb
out
mov
mov
shll
ss
ror
adc
ret
lea
mov
data16
and
mov
enter
call
lock
xchg
lret
sbb
cmp
je
push
push
xchg
cld
and
lods
adc
and
sub
fdivrs
jge
inc
out
and
sub
jns
in
xchg
ffreep
shrb
icebp
sarb
lods
loop
mov
stos
roll
or
in
pop
push
push
pop
sub
pop
jnp
push
lahf
loope
sub
inc
mov
jns
imul
sub
mov
push
jae
sub
xchg
sub
clc
add
xchg
or
repnz
mov
test
jne
push
shr
loop
pop
lret
loopne
lods
pop
sub
push
hlt
or
daa
test
ret
mov
je
mov
jg
jmp
sub
jle
adc
test
cmpl
lock
or
cmp
adc
cmp
sub
add
push
pop
push
rolb
jle
subl
decl
sub
movhlps
mov
inc
sbb
test
cmp
dec
jae
add
neg
jmp
xlat
dec
pop
js
xchg
test
sub
js
pop
and
rol
xchg
int
imul
cmp
out
dec
xchg
mov
int3
or
dec
je
dec
cmpsb
loopne
cmp
fists
adc
lahf
jbe
jne
loopne
jbe
cltd
mov
clts
push
inc
dec
jne
js
stos
mov
jae
dec
fisttpll
sbb
ficoms
cwtl
sahf
fidivrl
sub
or
sub
and
filds
add
jae
test
jmp
repnz
pop
cmpsb
loope
xchg
rolb
fldenv
lds
aad
test
iret
mov
mov
jo
sub
fnstcw
mov
mov
push
jbe
jo
popa
sub
push
fs
aas
dec
jne
mov
sub
jae
and
scas
dec
lock
jae
mov
pusha
fwait
xor
or
push
test
fisttps
mov
ret
loop
add
add
push
cld
mov
adc
add
cmp
cmp
push
mov
xchg
loopne
push
fisttpl
fildll
repnz
out
test
repnz
aad
mov
pop
pop
pop
pop
int
out
testl
call
jecxz
jmp
std
imul
movsl
and
adc
inc
iret
jg
cmc
add
push
shl
adc
dec
cli
jb
sbb
out
test
mov
cli
push
push
dec
sub
sbb
jo
out
nop
and
pop
push
or
aam
and
dec
clc
imul
dec
cltd
jecxz
fs
dec
lea
inc
andb
add
lret
adc
xor
dec
popa
sbb
pop
shr
aad
adc
shl
xor
rcrl
loopne
andb
mov
vmovaps
stos
ds
push
sbb
dec
call
rcrb
mov
add
dec
call
sub
jnp
lock
inc
lret
xchg
cmp
mov
int3
daa
mov
jmp
lods
push
pushf
xor
test
pop
push
test
add
pop
and
test
rorl
push
aad
inc
cmp
mov
sub
or
pop
and
pushl
push
and
dec
xchg
int
dec
ret
ja,pn
or
divl
pushf
outsb
add
dec
and
xchg
jecxz
cmp
aam
mov
sbb
and
mov
xchg
hlt
shrb
adc
pop
dec
sub
xchg
adc
add
in
cmp
jbe
rorl
popa
sbb
adc
mov
in
mov
jge
mov
rcl
or
mov
rolb
in
not
loop
inc
lahf
sbb
repz
je
pop
xchg
dec
add
dec
in
psubusw
jge
mov
jp
push
xor
push
jbe
addr16
dec
orl
or
or
inc
jge
call
roll
call
pusha
test
push
xor
sarb
repz
clc
add
xchg
xchg
xchg
pop
dec
lahf
into
aad
popa
adc
popa
xchg
pop
push
dec
sbb
dec
sub
push
push
sbb
adc
mov
xchg
xchg
in
adc
inc
or
mov
dec
lock
jmp
push
cld
mov
pop
adc
push
xlat
enter
dec
ret
and
into
inc
and
add
sub
loop
or
push
mov
fnstenv
jno
sub
pop
andl
in
dec
push
xchg
rorb
push
call
loopne
rcll
dec
xor
xor
outsb
dec
int3
test
dec
add
call
mov
and
xchg
jb
enter
int3
enter
add
inc
les
pop
popf
cmp
jp
mov
cmp
jecxz
push
nop
fs
adc
fcompl
loopne
dec
mov
add
loope
mov
scas
pop
jge
jne
gs
or
inc
les
sub
ds
mov
nop
adc
mov
scas
jb
and
adc
sub
jne
jne
in
or
loopne
cmpsl
aas
insl
ja
jae
movsb
das
cmp
inc
cmp
adc
push
lock
jle
push
jle
loope
imul
subl
lahf
dec
popa
packuswb
divb
and
sub
aam
mov
in
pop
flds
pop
shr
pop
mov
sub
inc
loop
mov
and
cmp
add
cmovns
in
clc
push
mov
dec
pop
rorl
iret
sub
int3
clc
insl
dec
jmp
lods
adc
shll
pop
pop
pop
jecxz
aas
xchg
add
fcoml
cs
sarl
pop
dec
jo
jg
inc
stos
jb
or
xchg
push
pop
rclb
pop
push
sbb
push
jge
jp
sysenter
test
push
add
jne
jnp
ss
or
add
lea
add
mov
pop
repz
mov
adc
adc
add
sbb
sbb
sbb
xchg
push
movsl
inc
sub
adc
push
fdivrs
int3
mov
mov
ror
pushf
faddl
jge
push
sub
jb
or
inc
xor
xor
jmp
add
stos
inc
scas
mov
adc
add
orb
das
es
push
adc
sahf
pop
xor
add
sub
add
or
mov
or
and
push
shlb
dec
mov
push
push
js
outsb
mov
adc
jmp
insl
sub
inc
dec
add
loopne
int
cmp
and
adc
adc
sub
adc
in
mov
mov
xor
shr
in
fiadds
popf
inc
nop
and
lea
hlt
jmp
loopne
push
jmp
lock
into
leave
cmp
adc
xchg
xor
rcrl
mov
inc
test
add
inc
popa
popf
pop
xchg
nop
mov
jmp
sarl
insl
xor
sub
orb
call
clc
ret
and
add
inc
jmp
and
pusha
and
dec
stos
aam
sub
add
add
jmp
cmp
jbe
ret
add
test
jle
sub
hlt
mov
cwtl
scas
dec
call
and
stos
sub
inc
mov
shrl
inc
and
call
clc
je
or
in
or
sub
pop
mov
fs
jo
inc
xlat
aas
je
mov
cs
fcoms
push
nop
sub
ljmp
loopne
in
imul
mov
and
adc
loop
in
mov
enter
fsubr
jnp
les
cmp
adc
jno
ret
pop
divl
xor
adc
jle
sbb
add
xchg
or
cmp
mov
notb
push
or
repnz
sub
popa
loop
jp
ficoms
and
lock
adc
mov
sub
outsb
in
repnz
mov
into
lea
push
ljmp
ljmp
sar
cmc
cltd
adc
mov
ret
add
not
aaa
adc
or
add
out
push
out
push
jmp
out
mov
sbb
movsl
mov
lds
inc
mov
and
mov
mov
inc
dec
jne
jmp
and
cmp
inc
adc
or
insb
pop
or
jbe
sub
sbb
notb
xor
pop
loop
xchg
and
inc
xchg
add
js
daa
jne
addr16
jmp
and
mov
sub
pop
je
and
jb
ret
adc
lea
or
scas
inc
dec
cmp
push
add
mov
inc
jmp
movsl
mov
jle
mov
xor
inc
add
flds
sbb
adc
push
lcall
inc
stos
xor
add
push
ljmp
pop
push
sbb
bound
pop
cmp
jg
lock
test
movsb
inc
mov
xchg
adc
push
rorb
cmp
iret
out
xor
or
jge
fsubs
cld
jle
sbb
jl
xor
mov
xor
aad
cmp
sbb
mov
dec
add
jne
jle
pop
gs
mov
out
adc
cld
or
dec
lock
insb
jmp
pop
and
mov
pushf
xor
push
lock
repz
iret
dec
movsb
nop
xor
jl
add
sbb
xor
sbb
popa
sub
or
xlat
out
xor
and
sbb
mov
or
dec
adc
fcomps
xor
add
shll
jmp
sub
adc
mov
pop
imul
insb
push
xchg
and
mov
sub
into
push
xchg
dec
inc
mov
push
lcall
js
pop
call
mov
add
push
outsl
jne
sbb
inc
or
xor
sub
pushf
dec
push
outsb
and
stos
test
or
cmp
or
in
dec
icebp
out
mov
and
push
mov
add
iret
bound
push
xchg
sub
mov
cmp
cwtl
repnz
xor
adc
xchg
cmp
loopne
lea
push
xor
les
int3
xchg
cmpsb
nop
mov
pop
jbe
or
dec
cpuid
imul
and
gs
sub
pop
mov
jge
jns
push
and
and
mov
je
in
aaa
push
and
loope
adc
sbb
jp
mov
push
xchg
icebp
add
sbb
and
jp
les
cs
and
mov
mov
and
xchg
test
bound
ljmp
add
jbe
inc
xor
loop
frstor
cmp
pop
xor
push
pop
mov
sbb
ret
dec
or
pop
adc
jno
xor
sbb
je
fcomip
aas
lods
inc
lock
push
adc
enter
dec
or
sub
sbb
pusha
sub
and
jo
sbb
xchg
inc
mov
mov
sub
mov
xchg
and
lret
dec
xor
out
mov
xchg
mov
ret
mov
les
add
bound
test
arpl
xor
ss
pop
lods
arpl
jle
out
cmp
sub
jle
pop
mov
xorb
call
dec
adc
add
pop
faddl
or
inc
jne
fcmovnbe
push
inc
call
mov
ja
jmp
adc
cmpb
loope
cltd
or
push
cmc
and
mov
add
mov
push
mov
insl
cld
sub
dec
push
dec
jbe
sub
add
mov
and
shrl
daa
add
pusha
inc
daa
pop
call
sub
out
mov
xor
shlb
or
cmpl
cwtl
and
mov
xchg
bound
divl
in
xor
hlt
sub
cltd
xchg
pusha
pop
sti
mov
into
or
sbb
add
ds
lcall
push
cli
and
repz
icebp
cmp
jbe
push
and
and
dec
clc
sbb
sbb
or
xchg
call
sbb
bsr
adc
divb
pop
jns
push
xchg
das
dec
mov
data16
xor
dec
or
or
sbb
call
jg
test
shrl
loop
inc
fs
loope
es
and
lea
repz
xchg
or
movzwl
xchg
inc
es
decb
hlt
int
inc
test
fstpl
fwait
mov
cs
pushl
jne
push
or
test
pop
leave
pop
cmpsl
dec
das
xorb
je
test
cmp
cli
std
sub
and
jle
inc
js
sub
das
mov
cltd
inc
adc
adc
call
xchg
mov
test
scas
sub
fnstsw
or
pop
aas
rorl
sbb
icebp
push
jns
adc
and
jne
xor
push
mov
push
add
add
ret
inc
xlat
push
adc
mov
jl
and
movups
test
inc
aas
xor
or
xlat
sbb
dec
repnz
sub
add
adc
add
adc
shrb
xor
inc
or
pushf
adc
or
addr16
pop
push
imul
or
and
jl
inc
or
test
insb
bound
sub
inc
inc
ret
jb
and
sbb
inc
or
jl
or
aad
lods
push
or
out
xchg
jl
jb
lea
sub
daa
jb
scas
xchg
test
cmp
lahf
push
popa
nop
or
imul
push
clc
inc
test
dec
imul
push
jbe
push
dec
outsb
lods
or
and
mov
jge
xchg
gs
jb
lods
sub
pop
xchg
imul
cmp
mov
inc
pop
iret
dec
mov
outsl
and
jbe
js
dec
xchg
and
adc
xchg
fwait
popf
pop
scas
adc
sub
push
pusha
enter
dec
cmpsl
mov
sub
imul
xchg
push
inc
dec
lahf
popa
nop
or
sub
and
inc
cmp
inc
popa
insl
bound
push
adc
out
push
dec
sbb
add
inc
xchg
mov
aad
inc
and
je
or
mov
dec
lahf
pop
dec
imul
inc
dec
sub
lock
xchg
ret
sbb
sbb
rcrl
jecxz
or
enter
icebp
dec
and
filds
jb
popa
je
push
dec
sub
sbb
push
mov
jmp
outsb
push
bound
pop
fs
cmp
add
insl
andb
out
adc
dec
in
xor
das
xchg
push
add
stos
dec
pop
push
push
inc
loopne
sbb
pop
inc
and
jne
or
pop
inc
inc
xchg
sbb
pop
mov
sub
inc
sbb
sbb
sbb
or
test
cmp
push
inc
push
lahf
pop
dec
imul
inc
jecxz
jl
push
push
mov
in
cmpl
inc
push
cmp
insb
inc
nop
sub
outsl
and
insb
lret
push
lods
sub
inc
inc
dec
lahf
pop
push
imul
jnp
dec
gs
mov
cld
mov
cmp
test
addr16
inc
push
lret
sub
insl
leave
movsb
jns
mov
push
xor
push
xchg
test
cmp
and
test
inc
in
sbb
push
push
sub
dec
imul
rcrl
mov
inc
push
fists
dec
sub
dec
outsl
cmpsb
jne
or
mov
dec
dec
jae
sbb
push
or
and
pop
push
cs
daa
push
dec
xor
dec
xchg
lods
pop
jecxz
push
pop
mov
push
out
push
dec
sub
add
push
sbb
sbb
adc
dec
dec
push
mov
and
inc
inc
cmp
test
dec
push
jae
sbb
enter
sbb
int3
adc
inc
push
dec
push
sub
mov
xchg
shrb
push
test
popa
cmc
pop
aad
test
dec
dec
push
jl
inc
scas
push
lret
lahf
and
dec
push
sbb
sbb
and
popa
mull
icebp
dec
dec
push
imul
popa
jp
imul
sbb
and
iret
popl
jl
es
adc
xchg
dec
inc
inc
cltd
sbb
sub
gs
push
xchg
jne
mov
and
mov
jns
ret
int
pop
movsb
and
xchg
mov
adc
dec
inc
out
push
dec
jl
push
je
imul
and
jae
fsubrs
outsl
test
sbb
add
bound
dec
push
pop
sub
push
test
outsb
jae
or
test
dec
test
pusha
je
loope
outsb
data16
dec
push
cmp
lock
dec
gs
push
or
addr16
push
dec
pop
sub
dec
dec
popa
insl
outsl
or
sub
dec
dec
sbb
inc
sti
dec
test
test
dec
cltd
sbb
ficompl
aas
jns
xchg
sbb
dec
pop
xchg
sbb
sub
adc
jmp
jns
mulb
mov
je
addb
dec
mov
mov
gs
inc
push
outsl
sub
pop
jns
negb
shlb
sub
inc
adc
sbb
addr16
stc
dec
dec
inc
je
pop
stos
into
xchg
addr16
dec
sub
leave
lds
mov
dec
push
inc
cmovg
pusha
dec
pop
gs
insb
in
cmp
mov
mov
pop
shrl
dec
jnp
inc
push
sbb
popa
insb
fmull
pop
lcall
mov
fisubs
pop
test
dec
push
inc
aam
pop
sti
and
dec
inc
sbb
sbb
popa
in
jns
push
and
mov
shl
xchg
rcr
dec
dec
xchg
push
test
push
inc
dec
lahf
pop
inc
imul
xchg
scas
test
xchg
inc
movsb
cmp
jns
push
nop
pop
repz
in
sub
jne
sub
mov
in
sub
jo
stos
outsb
out
sub
dec
fists
test
outsl
jns
mov
dec
xor
or
adc
adc
xorb
adc
test
push
imul
adc
or
push
pop
push
inc
xchg
sbb
test
insl
mov
push
imul
jo
sub
sbb
and
int3
sbb
sub
and
xchg
adc
les
or
push
popa
jne
xor
dec
inc
movsl
pop
js
push
cmpsl
test
sbb
test
bound
and
inc
mov
bound
mov
je
test
xchg
imul
cmp
inc
bound
das
inc
mov
and
and
xlat
mov
loopne
dec
repz
in
cmp
gs
outsb
enter
and
or
add
pop
inc
inc
cltd
sbb
or
push
mov
push
out
xchg
push
fsub
mov
adc
mov
cmp
pop
ja
ja
sahf
lods
inc
inc
iret
push
mov
mov
push
imul
dec
sbb
sbb
push
aad
adc
push
and
xchg
lret
insb
sub
ja
test
xchg
sbb
shlb
push
imul
insb
bound
clc
inc
sti
and
fcmovnbe
and
dec
cmp
pop
lret
stos
nop
in
xor
jge
add
jg
push
imul
xchg
mov
push
jecxz
in
sub
gs
cmp
ds
add
adc
mov
push
dec
push
jl
dec
lret
mov
push
imul
inc
iret
test
xor
dec
cmpsb
or
cmpsl
inc
insl
int
cli
jae
bound
sbb
push
sti
sub
cmp
pop
in
jno
js
loop
push
clc
push
mov
push
sbb
xlat
inc
je
ret
adc
out
push
inc
rolb
and
push
fsts
hlt
clc
jp
bound
push
pop
xchg
sbb
lock
push
inc
idivb
pop
push
mov
scas
sbb
gs
jp
sub
dec
jnp
loop
ret
pop
gs
xchg
push
sbb
lock
insl
arpl
xchg
test
shlb
jmp
inc
rorb
nop
nop
adc
push
cwtl
data16
aam
jae
xchg
dec
adc
ret
inc
or
rorl
shlb
mov
dec
add
and
arpl
xlat
add
mov
xchg
call
xchg
pusha
inc
lock
add
cmp
lock
mov
repnz
xor
mov
adc
out
adc
call
shr
and
clc
rol
mov
push
cmp
iret
sub
push
xor
xor
or
mov
sbb
pop
jns
add
sbbb
mov
and
call
notl
jae
lret
loopne
jne
cmp
je
lds
cmc
mov
mov
mov
inc
decl
dec
hlt
jne
fists
incb
daa
push
mov
loopne
arpl
loop
pushf
dec
jbe
sub
add
dec
call
inc
mov
pmuludq
xchg
or
call
xchg
push
in
sbb
adc
sub
sbb
cmp
sbb
mov
push
add
add
mov
shlw
jnp
jle
or
stos
push
loop
loop
push
lcall
xchg
cmp
inc
mov
jecxz
nop
cld
sub
or
jne
adc
pop
data16
sbb
fldl
cld
in
and
call
xchg
sti
cmp
lds
out
dec
sbb
and
or
dec
insb
into
push
test
inc
and
fwait
inc
les
sub
mov
push
jbe
pop
jg
cmpsl
rol
add
sti
repnz
push
inc
js
cmpsl
fidivrs
inc
push
cmpsl
adc
add
aas
push
xor
inc
or
adc
lahf
shl
sbb
add
and
pop
out
filds
mov
or
inc
inc
adc
sub
dec
xor
adc
adc
mov
cld
cmp
pop
inc
add
imul
loope
dec
push
push
test
adc
ret
and
sbb
add
dec
dec
dec
push
push
push
adc
push
add
pop
pop
pop
inc
popa
sub
lods
pop
mov
pop
push
mov
adc
jns
inc
push
dec
pop
sbb
pushf
ret
mov
xor
push
and
dec
mov
icebp
inc
xchg
adc
cmp
dec
mov
pop
or
xchg
loop
mov
adc
pushf
inc
dec
dec
inc
dec
dec
dec
dec
hlt
cli
int3
mov
push
insl
outsb
outsl
add
jb
je
jbe
adc
jp
sub
sub
insb
scas
add
pop
push
sub
or
xchg
fsubrs
sti
jne
lret
sbb
and
je
fldt
sub
jl
push
hlt
push
sub
adc
pop
fdiv
and
push
jl
cltd
jmp
shll
loop
xorb
mov
adc
inc
push
lcall
cmp
push
imul
decl
mov
cmpsl
cld
ds
es
jecxz
sarl
movsl
push
aad
pop
xchg
mov
cmpb
xor
and
sti
xor
arpl
cmpsl
or
addr16
adc
imul
movsl
xor
xor
mov
inc
xchg
mov
sbb
jns
mov
cmpsl
or
test
and
push
dec
sbb
invd
fs
and
xorb
adc
subb
cmp
daa
les
xor
adc
xchg
outsl
mov
push
sbbl
lret
gs
rclb
or
or
ret
jb
add
inc
inc
sbbl
cmp
mulb
lods
sub
popa
lock
inc
and
mov
test
xor
test
pop
sbb
test
pop
mov
add
pop
pop
dec
lea
or
xor
mov
adc
mov
push
loope
rorb
mov
in
stos
les
adc
mov
dec
shlb
pop
sbb
or
adc
and
mov
std
sbb
xor
xor
inc
test
and
mov
call
lcall
in
shrl
ds
pop
push
inc
adc
sub
dec
pop
int
lret
or
push
outsb
adc
sub
or
jae
sti
mov
test
mov
lahf
add
jno
cmpsb
xchg
lahf
jb
nop
mov
or
push
imul
mov
add
sbb
sub
push
test
call
mov
push
jnp
out
mov
mov
jp
sbb
fidivrl
hlt
rorb
aam
test
mov
adc
sub
add
push
sbb
int3
or
cmp
ffreep
enter
mov
test
push
cmp
dec
and
cmp
ret
add
fbld
jmp
or
repz
mov
or
push
shrb
adc
push
enter
xor
mov
sbb
xorl
shll
add
cmp
addr16
xor
pop
test
je
mov
rorl
call
lret
and
cmp
xchg
xor
xchg
xchg
mov
subl
fisttps
test
imul
add
adc
xchg
and
push
pop
push
inc
add
jmp
adc
jl
pop
inc
mov
or
and
mov
shll
rcl
push
or
and
insb
add
pop
push
adc
js
jo
adc
inc
push
dec
add
push
cwtl
les
sbb
inc
cmp
jae
fists
cwtl
sub
pop
testl
mov
mov
xchg
add
aas
and
xor
sbb
jmp
in
rcll
jg
fsubs
sarb
out
pop
fldt
adc
nop
cmp
pop
test
enter
cmpsb
pop
xor
dec
hlt
in
push
xchg
add
aad
and
adc
hlt
push
enter
add
fstpl
mov
mov
mov
movsb
jb
fstps
fistps
test
add
add
sbb
test
push
and
xor
cmc
adc
mov
fisttpll
adc
shlb
push
and
rclb
lret
and
daa
call
and
adc
push
mov
mov
push
mov
cwtl
es
sub
setg
xchg
or
imul
sbb
and
add
push
adc
out
loop
xchg
mov
insb
xor
cmpsb
mov
xchg
adc
imul
or
pusha
mov
sbb
xchg
fwait
sub
mov
pop
in
pop
xor
mull
repz
adc
fisubrs
fcomps
sub
mov
push
mov
mov
inc
sbb
clc
rolb
sbb
je
pop
adc
enter
inc
and
mov
jmp
jp
shll
add
icebp
push
mov
add
sbb
test
push
imul
adc
inc
jl
shlb
add
mov
jo
scas
addl
notl
push
jge
call
mov
xor
mov
cmpb
iret
out
cwtl
add
dec
mov
cmp
sub
sbb
mov
out
addl
lds
jmp
je
add
inc
or
mov
stc
add
out
push
sbb
loop
add
movsb
or
iret
mov
add
mov
add
sub
add
enter
hlt
mov
xlat
repnz
xor
cmp
mov
sub
jg
mov
sub
and
fs
xchg
inc
and
mov
and
add
cmp
jge
cmpl
or
shr
cmp
pop
in
add
add
cmp
mov
add
adc
lret
insb
and
dec
add
negl
mov
dec
cmp
pop
add
mov
xchg
adc
pop
hlt
mov
orb
mov
test
sbb
lock
inc
cmp
mov
or
mov
adc
bound
dec
es
ror
or
jecxz
mov
add
push
movsl
es
cwtl
stos
cwtl
sub
mov
xor
add
mov
insb
leave
cltd
lret
movsl
xchg
add
xchg
clc
mov
pop
ret
mov
adc
add
sub
push
adc
jg
xor
xor
div
pop
int3
add
orl
jno
inc
dec
and
sub
xchg
stos
adc
mov
cwtl
lret
add
out
mov
mov
psllq
xchg
loopne
out
sbb
jns
add
push
out
stc
mov
hlt
in
cmp
cmpsb
xor
pop
or
repnz
pop
sbb
pop
adc
mov
add
adc
pop
out
push
aad
push
cmp
push
imull
and
sbb
repnz
add
hlt
movsb
mov
inc
cmp
sbb
stos
push
daa
mov
dec
add
inc
inc
rorl
std
in
add
fcmovne
js
rolb
ljmp
cmpl
roll
jno
fwait
dec
sub
and
pop
divb
cltd
adc
jl
hlt
gs
mov
data16
in
add
push
xchg
and
jnp
or
dec
or
xor
mov
jmp
push
addr16
stos
aas
sub
sbb
mov
inc
pop
pop
push
rolb
add
iret
out
add
add
in
pop
lds
idivb
jl
mov
inc
adc
or
cmpsl
sbb
enter
cld
add
mov
cmpsl
cmp
jmp
divl
test
push
xchg
call
out
pusha
cwtl
pop
cltd
loopne
pop
movsl
leave
pop
ss
cs
ret
pusha
add
lahf
xchg
and
insl
cwtl
hlt
cmp
out
fld
popa
pop
mov
ja
icebp
sti
add
xor
pop
pusha
xchg
lods
add
insb
sub
ret
mov
lea
add
pop
test
dec
scas
add
sbb
cmc
cmpsb
dec
adc
stos
push
jp
out
nop
sub
in
aas
fst
pop
jbe
jno
dec
test
jmp
aaa
add
add
mov
jne
xchg
std
mov
push
add
pop
mov
bound
in
mov
rcrb
dec
jl
or
mov
int
mov
push
add
les
mov
ss
inc
mov
add
loopne
out
pop
add
lds
mov
mov
cmpsb
adc
repz
add
push
fdivs
incl
sub
push
arpl
push
leave
ja
pop
ss
in
or
add
mov
jnp
or
mov
out
adcl
fwait
cmp
aaa
das
pop
loopne
test
sub
add
pop
clc
cmp
mov
pop
pop
jne
popf
add
shlb
push
js
add
and
pop
shrb
pop
mov
out
cmp
dec
movb
xor
or
popa
xlat
pop
cmp
imul
add
popf
sbbb
insl
add
aad
add
sub
pop
pop
cld
lcall
popa
xchg
add
add
hlt
or
cmp
rorb
sti
enter
scas
rolb
stos
add
cmp
add
push
sahf
lods
add
xor
popa
add
mov
hlt
adc
add
and
pop
jmp
mov
xchg
mov
push
pop
es
lahf
xchg
lods
jnp
fstl
pop
lcall
mov
loopne
sbb
mov
leave
dec
jge
dec
and
aaa
and
add
popa
xor
mov
push
add
les
pop
add
jns
rcrl
pop
push
push
and
loop
xor
xchg
das
add
jb
loop
sbb
lock
xchg
mov
add
fsubr
roll
into
add
mov
repnz
imul
add
dec
mov
in
clc
and
sbb
pushf
cmpsb
les
movb
inc
insb
adc
lods
mov
add
pop
or
add
adc
push
sbb
enter
loopne
add
sbb
mov
sbb
jge
add
ror
inc
loope
pop
sti
repnz
mov
adc
clc
loopne
scas
andl
cld
je
sahf
iret
lret
popl
inc
sbb
aas
orb
mov
mov
popf
nop
stos
movb
fninit
inc
es
outsb
xor
push
pop
pop
test
ret
add
pop
xlat
in
stc
or
xor
add
lcall
shll
xorb
mov
popa
mov
call
pop
or
jbe
sub
bound
enter
cmovns
push
and
add
add
setnp
mov
lea
xor
jp
je
js
and
mov
mov
les
xlat
stos
jbe
sbb
stc
add
xchg
pop
imul
dec
adc
add
out
or
int
in
add
xlat
dec
mov
add
pop
nop
mov
leave
dec
mov
ficoml
xchg
icebp
cmc
xlat
rcrb
jmp
clc
lret
adc
pop
sbb
hlt
xlat
int3
and
daa
repnz
arpl
jno
jge
pop
shll
or
jo
les
xchg
pop
aas
clc
pusha
cs
repnz
sbb
gs
xchg
xchg
add
xchg
hlt
mov
ja
pop
push
lret
and
mov
fcoml
sub
movsb
pop
xchg
jnp
mov
out
jmp
xchg
mov
out
add
bound
loopne
insb
and
mov
xchg
push
adc
jo
xchg
add
xchg
adc
jmp
bound
lods
push
xlat
xchg
test
or
movsl
sub
or
test
inc
mov
inc
xchg
push
xchg
stos
xchg
adc
mov
clc
mov
xchg
dec
test
inc
loopne
shll
scas
dec
jne
aam
add
or
dec
mov
popf
movsl
loope
ljmp
lret
lret
and
scas
test
mov
mov
or
test
or
jl
cltd
mov
push
add
daa
mov
adc
mov
sub
sbb
mov
in
sbb
cmp
enter
loope
mov
pop
add
mov
cmp
sbb
int
jp
nop
jl
dec
inc
inc
clc
in
lods
jo
lods
dec
lock
lock
icebp
and
repnz
pop
lret
jo
mov
aam
pop
ror
dec
or
add
out
sbb
push
rolb
test
mov
out
dec
out
sbb
xlat
sub
cld
fstps
mov
sbbb
inc
push
pop
adc
js
das
mov
imull
xchg
push
xchg
cli
fbstp
xchg
pop
sub
sbb
or
jae
shrl
cmp
add
adc
mov
and
fsts
jmp
imul
cmp
adc
adc
dec
dec
pop
push
inc
push
jmp
lods
push
ss
jge
push
xor
push
push
sub
cmp
imul
or
jae
push
inc
sbb
fs
inc
xor
or
pop
xor
faddl
sub
pop
idiv
call
jb
gs
jbe
cmpsl
pop
addb
inc
aas
push
jns
inc
and
scas
inc
adc
inc
jecxz
aaa
jb
push
or
cmp
adc
push
test
push
sbb
dec
sub
scas
rcll
sbb
push
inc
push
push
dec
sar
in
push
or
inc
movsb
insb
nop
or
test
fwait
dec
shrl
push
cmpsb
jbe,pt
jg
xchg
fs
cmp
xchg
in
sbb
ss
test
inc
int
dec
xor
es
pop
xchg
xlat
push
clc
aam
aas
sub
pop
js
push
pop
movsb
ficompl
rcrb
stos
sub
jb
sti
pushl
dec
scas
mov
adc
mov
outsl
dec
mov
call
out
inc
mov
out
mov
sub
pop
leave
xor
and
gs
cmp
jge
xchg
aam
inc
jl
dec
clc
lods
or
ds
mov
stc
bswap
push
and
inc
inc
xor
repnz
cmc
dec
dec
dec
pop
mov
push
movsl
cmp
dec
xchg
dec
call
cmc
cmp
cmpsl
scas
repz
sbb
add
sarb
or
inc
movsb
movsb
xchg
pop
pop
mov
xlat
into
andb
dec
xchg
add
fwait
mov
pop
inc
add
loop
fs
sub
outsb
movsb
push
sub
sub
pushf
and
dec
lret
sbb
or
imul
pop
xchg
adc
cmp
pop
dec
sub
and
cmpsl
mov
mov
inc
jne
cmc
fdivrp
pop
in
push
das
inc
cmpsl
inc
push
popf
push
xor
pop
in
jb
dec
inc
insb
rclb
sub
push
lock
dec
frstor
xor
and
iret
adc
repnz
push
sub
enter
pusha
and
dec
xchg
fmul
nop
sub
pusha
jle
dec
out
in
mov
movsb
outsb
outsb
cmp
mov
mov
loope
pop
in
push
fs
xor
push
adc
and
pop
xchg
cmp
cmp
fs
adc
pop
push
sar
pop
pusha
push
rorb
push
xor
jle
leave
adc
aam
sub
add
inc
ss
shlb
dec
xor
imul
arpl
xor
imul
sub
mov
dec
and
or
dec
adc
pop
nop
dec
mov
movsb
cmp
mov
bound
push
mov
fs
cli
mov
cmpb
aad
in
pop
inc
inc
pop
dec
test
dec
mov
and
inc
adc
test
rcl
dec
pusha
movsl
sub
inc
push
das
pop
dec
gs
mov
popa
cmc
mov
lods
test
cmpsl
je
lcall
mov
pop
cmp
lods
mov
repnz
testl
sbb
jae
loope
mov
js
lds
arpl
lea
xor
cmpsb
push
sub
pop
loop
aad
in
cmpsb
sbb
mov
xor
fwait
int
push
jnp
inc
pop
fiaddl
or
fidivrs
lea
lods
cld
test
ss
cld
lods
or
jns
push
cmp
xchg
dec
rcll
idivl
pop
fs
mov
das
xchg
sbb
mov
js
sub
rclb
jmp
loope
sbb
das
fs
nop
clc
sub
fs
pop
cwtl
xchg
es
lods
push
into
push
imul
adc
jnp
inc
push
mov
cmpsb
sub
pop
push
bound
gs
mov
or
or
lds
inc
inc
xchg
mov
jl
push
insb
scas
test
push
push
fistpll
dec
pop
negl
ficoml
lcall
pop
lea
xchg
int
bound
cmpsb
mov
test
js
mov
aas
repz
movsb
lods
inc
cmp
jmp
scas
inc
repnz
repnz
testb
fs
cmp
out
insl
test
cmp
out
mov
repnz
out
rorl
sub
and
jb
push
mov
adc
push
mov
jecxz
loop
movsb
cmp
into
inc
sub
cmpsl
mov
nop
les
push
pusha
stos
jl
push
aam
sbb
je
sarb
xor
fs
inc
cmp
addr16
test
push
les
push
lods
sti
int3
lahf
xlat
xlat
xchg
jmp
pop
xchg
mov
aad
in
js
mov
adc
imul
lret
das
adc
cmpsl
and
sub
pop
and
sbb
xchg
and
icebp
leave
flds
cmp
in
fdivrl
fsubrl
cmp
das
cmp
dec
int
push
idivb
test
ret
je
lahf
inc
mov
test
xchg
ss
xor
dec
test
push
scas
pop
dec
mov
das
adc
icebp
ret
imul
call
push
xchg
hlt
test
mov
je
pop
sub
cmp
ljmp
je
mov
add
push
test
pop
hlt
repz
sub
push
and
add
mov
mov
repnz
mov
push
test
jl
movsl
mov
iret
adc
xlat
lcall
jmp
scas
xchg
lret
pusha
hlt
popl
xchg
mov
and
fs
adc
mov
cwtl
xchg
cmp
stos
pop
fwait
loopne
cmp
stos
lods
popf
inc
scas
push
stos
mov
hlt
mov
stos
lods
mov
push
std
js
push
movsb
lret
aam
mov
push
and
cld
in
pop
inc
sub
lds
lahf
leave
push
cmp
push
mov
mov
aam
xor
cmpsl
call
mov
cwtl
in
dec
rep
pop
pop
mov
std
scas
mov
mov
aaa
xor
mov
inc
fidivrl
adc
pop
shrb
and
push
aas
pusha
inc
insb
notb
lods
cli
pop
insb
xchg
push
mov
hlt
aas
imul
fisubs
pop
mov
lret
xchg
cs
mov
aas
stos
push
loopne
jecxz
cmc
outsb
je
das
fistl
in
lods
in
es
movsl
out
in
inc
xlat
lcall
mov
xor
mov
xchg
repz
jle
pop
cmp
mov
sub
xlat
test
testb
lcall
repnz
pushf
dec
shrl
dec
push
xlat
fwait
sti
xchg
enter
lods
sub
test
idivb
fcomps
jmp
repz
jecxz
cmpsb
enter
mov
fcomp
push
xchg
mov
repnz
mov
js
xchg
or
mov
or
dec
jle
jl
jns
lret
rol
call
push
sti
cld
jae
lock
xchg
clc
jl
pop
in
xchg
in
jo
mov
dec
lahf
clc
scas
xchg
sbb
clc
cld
mov
je
mov
cld
xchg
into
and
jnp
pop
aas
es
shrb
sub
mov
xlat
fisubrl
sarb
je
pop
xlat
iret
xor
sbb
outsl
cmp
push
sbb
jl
in
jp
mov
push
sub
lds
imul
aas
pop
mov
cmp
mov
cmpsl
insl
push
in
loopne
repz
xchg
fnstsw
xchg
lret
dec
dec
aas
mov
enter
sub
fisubrs
lea
inc
push
pop
push
idivb
inc
in
outsl
sub
iret
pop
jo
push
mov
push
les
jmp
in
fs
mov
adc
dec
mov
ljmp
push
test
fadd
sbb
movsb
and
ljmp
pop
mov
push
and
dec
pusha
mov
outsb
mov
pop
jle
andb
pop
int3
testb
in
aaa
pop
enter
popf
dec
enter
in
dec
mov
sub
push
rclb
fcoml
pusha
mov
pop
shrl
mov
jne
mov
dec
mov
fs
adc
xchg
sbb
aam
pop
and
mov
push
sub
cmpsl
lods
hlt
sub
sub
test
dec
imul
test
dec
cmpsl
movsb
loop
mov
popf
inc
mov
xor
stos
dec
cmpsl
pushf
hlt
push
push
js
sub
jne
cwtl
dec
jo
aam
pop
adc
je
dec
mov
shrl
je
aam
push
mov
nop
dec
sbb
in
das
mov
mov
sbb
dec
mov
mov
push
hlt
ljmp
adc
mov
enter
adcb
jl
push
cmp
sub
cmp
ljmp
jne
je
fidivl
je
and
cmp
and
xchg
cmpsl
push
insb
aam
fs
push
insb
icebp
adc
dec
mov
cmp
dec
aam
incb
movsl
mov
popf
inc
pusha
rclb
dec
jne
pusha
push
sbb
ljmp
lock
and
inc
pop
jb
sub
les
pop
jae
ljmp
arpl
sub
mov
sub
xchg
outsl
mov
cmp
mov
mov
lds
or
dec
pop
xchg
mov
pusha
mov
adc
inc
inc
xor
and
or
jns
cmp
fcoml
xchg
push
stos
insb
jnp
pop
sti
push
nop
sub
pop
mov
je
addr16
outsl
mov
inc
mov
cwtl
inc
enter
addr16
adc
sub
and
ja
jo
jne
outsb
enter
push
imul
dec
push
iret
lahf
fsts
jne
adc
outsb
mov
jo
jne
je
pop
in
das
loop
gs
gs
addr16
inc
imulb
daa
adc
dec
movsl
stos
les
stos
int
lret
mov
hlt
mov
adc
in
rcl
scas
xor
outsb
mov
push
outsb
lods
xchg
stos
aaa
lock
xlat
or
xchg
pop
pop
add
js
and
call
fdivrs
and
mov
jne
mov
les
fisubl
push
sub
jmp
cmp
or
jg
sub
movsb
mov
push
xchg
outsb
dec
ljmp
inc
mov
jmp
push
mov
cli
xor
or
inc
sub
mov
sub
fdivs
jno
dec
and
inc
pop
push
sub
push
popf
sub
imul
jae
les
sbb
adc
or
shrb
mov
pop
dec
pop
sub
jno
lret
jne
loopne
mov
out
ss
out
and
outsb
jecxz
pop
inc
adc
sub
mov
push
stos
and
jl
add
xchg
nop
cmp
xor
push
dec
enter
push
jb
push
xor
insl
inc
mov
leave
push
or
sub
outsb
push
outsb
fs
lret
adc
push
mov
pop
mov
sahf
xor
iret
nop
mov
popa
dec
and
push
cmpsb
lods
lret
arpl
test
xor
mov
jno
sahf
add
fisubrl
sahf
xchg
mov
dec
pop
sbb
dec
sub
pop
mov
shlb
cmp
sbb
les
xor
mov
mov
pop
inc
movsl
jo
jne
aam
imul
rcl
out
in
push
sub
lret
es
push
xor
mov
mov
sbb
das
je
outsl
or
mov
push
insl
inc
xchg
je
jl
push
xchg
mov
xlat
adc
mov
test
mov
pop
sub
out
lret
sub
sbb
push
mov
lret
mov
push
inc
rcl
hlt
sub
pop
in
int3
mov
nop
jb
shlb
jb
enter
sub
test
jp
icebp
mov
xchg
fadds
push
adc
sub
mov
loope
jne
js
xchg
xor
nop
mov
mov
movsb
sub
rcr
mov
mov
movsl
mov
adc
and
push
mov
leave
test
rolb
inc
mov
mov
adc
in
lret
xchg
lds
sub
int3
pop
lods
aad
sub
push
sub
xorb
adc
in
and
jp
nop
mov
pop
mov
cwtl
xchg
jmp
inc
fcmovnbe
push
insb
xchg
add
jne
mov
dec
pop
mov
jne
mov
in
jmp
xchg
and
pusha
adc
in
mov
pop
std
sub
pop
pop
fs
aam
sti
cmp
mov
rcr
push
repnz
leave
inc
inc
adc
test
popa
mov
pop
pushf
scas
fiadds
fcomp
inc
enter
cmp
lods
pop
in
test
lds
or
jle
pop
sub
xchg
mov
pop
cld
in
mov
cld
cmp
push
aaa
cmp
adc
clc
int3
and
cmp
int3
push
mov
or
sbb
rclb
and
and
xchg
cmp
imul
add
jne
sub
pushf
je
imul
adc
sub
sub
push
in
ljmp
jge
shrb
pusha
movsb
jns
sub
pop
lods
mov
inc
xchg
gs
sbb
pop
enter
mov
das
pushf
and
jb
repnz
ja
test
inc
adc
sub
outsl
xor
je
pop
imul
pop
cltd
mov
mov
jb
shlb
movsl
inc
cmp
xchg
mov
jne
sub
sbb
gs
mov
push
inc
or
xchg
leave
test
and
nop
cmp
dec
sahf
or
push
mov
imul
or
into
xchg
incb
in
mov
cmp
mov
rclb
scas
je
dec
sub
or
mov
sub
fadds
call
or
xor
jae
add
or
adc
loopne
loopne
loopne
nop
push
int
pop
xchg
xor
aaa
dec
loopne
xor
adc
sub
inc
lret
and
dec
push
adc
scas
and
jle
xor
repnz
in
sub
xor
and
jle
aaa
mov
or
cmp
in
sub
and
and
push
push
xor
adc
xor
xor
xor
xor
in
das
enter
xor
andl
les
sub
outsl
push
sub
cmp
outsb
and
mov
mov
je
and
call
push
repnz
in
cmp
xor
nop
xor
and
ss
ss
repnz
pop
in
cmp
cmp
cmp
and
jle
sub
mov
in
push
pop
push
into
push
mov
or
xor
xor
xor
and
inc
xor
ss
cmp
push
leave
inc
dec
inc
pop
push
inc
push
inc
xchg
sahf
icebp
push
pop
sub
je
lods
mov
adc
xlat
sub
sub
sub
pop
clc
xchg
dec
mov
fs
jno
mov
inc
mov
loop
xchg
and
inc
inc
and
fs
jo
inc
push
dec
aad
and
pop
ljmp
and
adc
and
dec
dec
rorb
jl
inc
cmp
adc
dec
jns
or
cmp
outsl
cmp
jne
insl
cmp
outsb
cmp
xor
push
xor
jb
addr16
popa
pop
adc
imul
xor
sub
sbb
add
and
fwait
inc
gs
imul
jmp
add
imul
dec
push
jae
outsl
adc
sub
inc
pop
push
repnz
dec
dec
mov
or
lcall
hlt
int3
jo
insb
cmpsb
mov
popa
imul
or
cmp
add
cmp
outsl
add
repnz
push
mov
outsb
push
jns
gs
movsl
mov
dec
push
adc
jl
je
arpl
fs
mov
outsb
addr16
xchg
int3
pop
imul
nop
lods
movsb
test
stos
mov
or
cmp
sbb
add
cmp
adc
fdivs
xchg
imul
push
dec
sbb
faddp
pop
pop
lret
mov
test
add
inc
lcall
popf
dec
add
mov
mov
adc
mov
sub
adc
jns
les
in
push
in
or
inc
sub
sbb
frstor
jo
xor
dec
and
inc
and
lock
and
insb
xchg
and
cmp
mov
adc
test
adc
mov
adc
push
addr16
push
les
adc
test
arpl
add
adc
add
push
sbb
adc
in
adc
adcl
pop
and
and
pop
js
je
adc
add
inc
cmp
add
addb
or
mov
imul
jl
xor
push
and
and
add
addl
mov
adc
pop
and
dec
inc
sub
inc
dec
add
rorb
fadds
mov
cwtl
inc
add
dec
pusha
jo
xor
inc
orl
fdivrl
or
add
inc
aam
or
mov
pushf
cmp
mov
andb
adc
add
cmp
inc
adc
rol
hlt
xor
xor
in
or
xor
cwtl
and
xor
das
add
pop
fldt
rcll
adc
clc
sub
mov
sub
add
movsb
sub
rcll
mov
and
insb
es
jnp
push
and
and
mov
and
add
loopne
add
inc
les
or
test
or
jp
mov
sbb
mov
jl
inc
sbb
and
add
pop
mov
pop
sub
lock
cli
add
xor
push
popf
or
adc
inc
dec
and
insb
loop
mov
sbb
cmp
and
inc
lods
or
xor
call
mov
je
push
pop
xor
mov
mov
ja
insb
xor
cs
fsubl
in
jg
mov
mov
insb
adc
inc
js
or
fsubs
add
nop
mov
rorl
call
sti
mov
lret
call
jb
pushf
cltd
or
and
lds
rcl
repz
leave
call
in
insb
and
or
dec
jb
cmp
xor
inc
sub
and
sbb
adc
or
add
cld
mov
out
daa
lock
push
pop
add
cld
call
mov
stc
sbb
push
js
pop
xchg
pop
add
push
xchg
ret
enter
dec
mov
bswap
pop
pop
lret
sbb
inc
sub
scas
push
shrb
movsb
mov
movsb
xchg
outsb
or
lods
nop
or
push
aam
leave
mull
test
je
push
in
adc
jmp
inc
into
adc
hlt
push
movsl
adcb
dec
dec
and
leave
out
adc
adc
in
sbb
mov
pop
mov
cmp
and
push
repnz
push
and
mov
test
inc
shl
insl
or
daa
cmpsl
mov
sub
aas
mov
sub
setne
pop
lahf
hlt
xor
es
mov
call
cld
test
pop
cld
mov
dec
sub
jo
dec
lock
push
popa
pushf
int3
bound
mov
and
loope
add
pop
or
dec
incb
sub
dec
sub
push
xchg
mov
mov
cltd
in
pop
mov
xchg
xor
test
pop
adc
call
ss
in
mov
push
test
cmp
rcll
fcoms
cmp
or
xchg
or
jbe
adc
xor
xor
xorb
prefetchw
jne
pop
outsl
lods
cs
insb
cmp
adc
bound
daa
mov
movsl
xor
jecxz
push
push
push
pop
add
stc
nop
cltd
insb
in
and
inc
in
sub
cmp
inc
or
jne
inc
jbe
ja
pop
and
inc
inc
xchg
mov
xor
jb
and
inc
test
and
dec
add
cmp
outsl
in
hlt
jnp
inc
and
mov
adc
or
push
sub
pop
lcall
sbb
pop
xor
sbb
push
xor
pushf
or
adc
or
dec
fucomp
ret
call
stos
mov
and
inc
and
sub
add
cmp
dec
and
mov
add
je
imul
out
popa
lea
lock
mov
ret
cmp
mov
xchg
test
decb
add
aam
or
adc
and
sub
xchg
or
sbb
test
cmpl
dec
pop
xor
add
dec
adc
sbb
and
mov
call
sbb
mov
movb
cs
loope
call
scas
or
sub
or
mov
xchg
imul
pop
imul
jl
repz
pop
mov
adc
fs
adc
addl
test
mov
addr16
dec
test
mov
lea
mov
nop
push
adc
or
mov
push
xchg
mov
repz
xlat
int
dec
jg
mov
fs
cld
repnz
push
mov
sub
add
sbb
pop
outsl
mov
push
pop
dec
inc
push
sbb
sub
push
mov
fs
test
adc
cmp
mov
and
fs
adc
test
mov
add
lds
xchg
scas
leave
mov
cmc
push
imul
jp
arpl
mov
data16
out
push
push
xor
lea
sub
xchg
popa
jle
sbb
std
lock
fistpll
out
push
adc
jns
mov
imul
jns
leave
pop
pushf
cwtl
sti
cmp
in
xchg
lea
and
push
arpl
orl
sbb
cmp
sub
test
lea
adc
sbb
xor
push
call
pop
stos
sti
sub
mov
push
data16
fs
push
pop
inc
dec
loopne
inc
adc
add
and
inc
jmp
cwtl
or
xchg
je
push
inc
stc
or
rcll
cmp
add
jl
jge
loop
pop
mov
adc
jbe
inc
bound
mov
fwait
inc
lock
add
mov
add
mov
sub
fadds
test
add
rorb
dec
inc
mov
rclb
call
insl
lahf
add
dec
push
add
jg
adc
in
xchg
push
or
and
adc
mov
push
cmp
or
add
push
xchg
cmp
add
jp
dec
in
or
movsb
push
fwait
inc
gs
mov
adc
test
or
and
and
sub
cmpsb
in
pop
jne,pn
rorb
addl
push
ss
test
or
and
cmpw
loop
xchg
push
repnz
add
jg
jo
mov
nop
mov
dec
cmpsb
cwtl
jmp
xchg
jae
inc
and
or
lds
inc
or
adc
and
adc
enter
pop
mov
add
add
insb
dec
adc
loopne
pop
sbb
adc
adcl
adc
rorl
dec
sbb
in
or
mov
pop
jg
xchg
dec
add
mov
mov
jne
push
mov
add
adc
icebp
jge
xor
faddl
orl
jne
repnz
cmpsl
stos
andl
or
add
jb
subl
mov
pop
cmp
mov
inc
je
dec
add
dec
mov
pop
or
sahf
adc
sub
mov
push
lds
addb
or
xchg
aad
dec
dec
cmp
jg
jg
ja
mov
rcll
jecxz
inc
sbb
loopne
sub
movlps
adcb
aad
dec
out
cmp
fistps
mov
adc
mov
lods
push
mov
adcb
popa
jns
inc
cmpsb
push
ljmp
rcrl
xchg
and
sub
lock
in
in
icebp
shrb
imul
xchg
dec
hlt
inc
icebp
sub
gs
sub
mov
xor
push
call
inc
push
inc
xlat
and
rolb
cs
or
aad
inc
mov
mov
mov
std
jae
jp
out
push
inc
addr16
lock
inc
add
es
cmp
or
push
popa
mov
repz
hlt
cltd
jg
xchg
data16
push
cmp
or
and
jg
pop
push
add
inc
mov
sti
cmp
ret
mov
ret
jae
adc
nop
icebp
dec
orl
jne
cmpb
jbe
ds
xor
cli
imul
pushf
jmp
ret
das
jnp
stos
out
push
loope
adc
das
call
lcall
addl
push
cmp
jo
sub
push
push
out
cwtl
mov
mov
out
xchg
fmull
dec
fucom
mov
std
fidivrl
cli
jge
sahf
test
mov
sbb
mov
test
or
xor
inc
adc
lock
mov
cmp
daa
push
adc
inc
or
adc
mov
cld
or
in
sub
lds
not
test
sub
mov
xchg
sarl
addr16
daa
xchg
pushf
inc
rolb
or
jo
out
movzbl
pusha
add
leave
js
and
ret
cmp
jne
and
test
icebp
sub
cmp
add
ja
pushl
mov
ss
push
add
jmp
rcrb
pushf
jg
push
adc
add
jg
out
push
movsb
and
mov
mov
cld
mov
or
dec
out
stc
shrl
sbb
push
push
xorl
or
or
lds
add
rclb
mov
xchg
gs
out
or
sbb
mov
push
rcrb
cmp
xchg
or
mov
xor
mov
outsb
mov
in
push
imul
cwtl
adc
pushl
out
inc
fs
mov
inc
inc
enter
mov
mov
add
pop
and
and
movsl
adc
and
pop
pop
fldl
push
push
fildll
mov
push
cmpsb
push
in
push
add
cmp
dec
adc
call
add
sbb
out
flds
scas
sbb
and
or
xor
adc
pop
sbb
icebp
mov
push
call
push
and
push
lds
inc
mov
inc
or
inc
add
lds
loopne
rolb
testb
dec
cmp
and
and
jp
pop
ret
sub
xchg
xor
push
mov
outsl
or
dec
popf
imulb
add
jns
sub
xchg
test
ret
push
lcall
mov
add
ret
inc
lock
mov
xor
or
jae
add
mov
mov
insl
pop
sub
dec
mov
or
lock
mov
jo
test
je
mov
pop
push
insb
sub
js
xchg
ljmp
hlt
mov
or
add
xchg
incl
mov
les
xor
xor
pop
mov
mov
inc
inc
mov
into
pop
jns
iret
adc
jg
mov
and
std
ds
xor
adc
add
adc
adc
jg
cmp
fs
imul
pop
or
add
add
cmp
jbe
push
pop
cmp
jmp
mov
popf
mov
stc
mov
call
xchg
adc
add
dec
testb
sub
pop
iret
mov
jmp
popf
cld
adc
lret
jnp
nop
aas
mov
pop
cmp
xchg
in
cmp
xchg
movsb
mov
jo
push
cmpl
or
sahf
icebp
lret
imul
jmp
sub
add
ret
loop
out
gs
mov
mov
jmp
sbb
popa
aam
jecxz
lret
fldpi
xor
sti
scas
add
mov
test
jecxz
push
jl
dec
push
and
inc
fcoms
cmpsl
add
pop
and
outsl
lods
xor
push
rcrb
xchg
dec
pop
fwait
mov
xor
or
cmp
into
pushl
frstor
and
inc
ds
push
sbb
pop
ja
cmp
cmp
call
out
xchg
movsb
je
push
mov
pop
shl
jg
shlb
sub
aas
idiv
push
and
add
and
sub
cmp
cs
imul
pop
pusha
jnp
jge
sahf
inc
or
or
and
xchg
and
mov
test
adc
and
push
inc
jo
mov
hlt
sbb
mov
xchg
outsl
add
pop
add
data16
jmp
pusha
adc
jmp
ds
cmp
inc
movzbl
pop
add
aaa
data16
ss
shll
add
sub
jo
dec
and
call
inc
and
shll
cld
nop
jo
dec
pop
loop
ret
loopne
jmp
cmpsl
dec
lret
shl
not
movzwl
sub
mov
lret
dec
and
or
xor
xchg
add
addb
jmp
je
and
push
xchg
ret
stos
mov
and
nop
push
imul
xchg
jmp
xchg
pcmpeqw
imul
rolb
daa
cltd
fbld
jge
push
or
movl
mov
in
out
shlb
ret
test
pop
inc
insb
mov
cmp
adc
mov
sub
mov
cmpb
in
adc
jae
cmpl
cmp
adc
jb
pushf
lock
xchg
setl
or
jns
jne
movsl
sbb
inc
jmp
movsl
stos
add
cmp
test
lea
stc
stos
add
loopne
push
sti
mov
push
dec
adc
bound
mov
mov
add
mov
sbb
notl
xor
xor
adc
add
cmp
cmpl
aam
push
adc
push
lcall
xorl
fwait
mov
push
hlt
add
cmp
leave
xchg
sarb
clc
dec
sub
sub
jae
xor
cmpsl
and
add
popf
push
push
cli
cmp
inc
mov
mov
or
rorl
adc
adc
dec
in
into
rorl
adc
cmpsl
cmp
stos
or
or
and
repnz
push
mov
or
test
jl
fcmovbe
adc
orl
popa
jg
xchg
add
mov
cmp
inc
sbb
loope
popf
add
lret
add
dec
push
mov
add
cmp
xor
rorl
sbb
adc
jmp
xchg
fimull
ldmxcsr
jbe
stos
fwait
or
lret
jl
jo
fisttpl
and
sub
aas
and
iret
mov
xchg
rcll
jb
xor
gs
cwtl
jmp
or
sbb
pop
mov
test
add
pop
add
cwtl
or
mov
and
daa
sub
dec
ja
stos
test
mov
outsb
movsl
lahf
or
add
xchg
fadd
pop
lods
sub
test
mov
rorl
inc
pop
add
inc
inc
loope
cmp
clc
push
lahf
cmp
cmpsb
adc
lea
inc
push
push
pop
addr16
clc
jae
push
xchg
push
push
pop
and
pop
add
or
mov
pop
gs
clc
adc
and
or
mov
mov
sti
gs
mov
pop
lods
sub
adc
lahf
xlat
ss
cmp
inc
push
adc
movsl
ljmp
inc
lods
jge
add
xchg
and
adc
xchg
add
push
fbstp
and
jmp
movsb
jecxz
sbb
push
lock
ret
je
push
sar
push
cmpsb
push
or
lock
fisubrl
testl
jns
adc
pop
es
cwtl
xchg
dec
sub
cld
mov
or
pop
lret
jmp
xchg
adc
cltd
sub
mov
jg
pushf
push
adc
sahf
and
repz
dec
push
xchg
jle
inc
and
dec
push
jnp
pop
adc
arpl
xchg
stos
and
xor
jge
adc
pop
or
adc
inc
lods
test
addl
and
and
call
ficompl
pop
adc
pop
nop
stos
inc
mov
xchg
jle
xchg
lods
gs
mov
lock
jnp
std
and
daa
mov
cmp
sub
mov
lea
push
push
pop
push
cmovbe
fwait
inc
jmp
cmp
out
jp
fisttpl
jmp
test
cmpsl
insb
orb
inc
inc
or
xor
add
lods
sub
adcb
adc
push
xchg
loope
mov
popa
pushf
inc
xor
jns
imul
push
or
xor
dec
pop
scas
adc
mov
fwait
or
add
mov
dec
mov
iret
unpcklps
adc
ret
mov
in
and
nop
or
and
inc
or
dec
rorl
loopne
dec
adc
dec
xchg
add
je
push
aad
das
adc
mov
test
enter
sub
in
inc
inc
or
subb
mov
ret
or
idiv
enter
pushf
push
lods
scas
xchg
pop
push
jne
adc
mov
xchg
mov
enter
or
mov
scas
jns
repnz
adc
aas
mov
cmp
jne
call
add
push
lds
dec
in
loop
dec
cmp
and
mov
seta
add
mov
mov
ficoms
popa
in
jp
jg
or
mov
or
pusha
xchg
xchg
sbb
and
pop
dec
mov
shrb
sahf
or
inc
mov
mov
xchg
xchg
push
push
push
cmp
imul
cmp
jle
sbb
enter
loopne
or
shlb
gs
movsl
adc
adc
push
loopne
and
adc
inc
les
push
mov
nop
lahf
cmpsl
dec
mov
push
shll
mov
mov
mov
inc
icebp
pop
adc
std
mov
and
pop
lcall
dec
adc
xor
loopne
cmpb
or
sti
cwtl
test
jmp
pop
mov
fdivs
mov
rorl
adc
sub
mov
or
dec
mov
xor
aaa
cmp
push
inc
pop
sbb
sbb
mov
cmpsl
ds
stos
in
mov
in
sar
jne
push
cmpw
je
jmp
mov
push
xor
loope
and
movsl
xchg
rorb
inc
or
cmp
std
cmpsb
add
test
aas
adc
rcrl
scas
cmpsl
lds
push
pop
push
mov
pusha
enter
mov
mov
adc
xchg
pop
add
mov
movl
xchg
sub
jb
inc
add
jmp
imul
sbb
notl
push
and
or
push
dec
shll
lret
mov
dec
scas
cwtl
enter
shl
or
adc
jo
stos
mov
mov
das
fists
enter
mov
dec
or
add
ror
popf
pop
inc
fdivrs
lea
dec
call
bound
inc
mov
outsl
dec
jmp
cld
inc
inc
mov
inc
add
loope
mov
test
inc
and
out
dec
cmc
rcrb
outsb
test
fdivl
adc
add
push
sbb
fsubrl
or
js
rolb
jo
add
inc
push
gs
inc
cmpsl
or
sub
sub
inc
pop
and
mov
lds
xchg
add
mov
js
das
or
enter
shlb
cmpsl
add
cmpb
lahf
sbb
mov
rorl
enter
adc
inc
adc
sbb
add
push
fs
pop
lret
std
jb
aaa
adc
mov
cmp
add
ffree
sub
jo
mov
xchg
mov
sbb
sbb
daa
inc
movsb
mov
nop
mov
sbb
jne
push
movsb
lock
call
jl
movsb
into
das
mov
cmp
jge
cmp
xor
mov
out
sahf
pop
dec
xor
or
cmp
or
data16
or
imul
roll
cwtl
nop
adc
je
adc
sub
insb
out
cli
cmp
je
in
aas
pop
pop
cltd
or
jle
in
mov
mov
lcall
movsb
nop
rcll
or
into
imul
aad
addb
stos
dec
repz
mov
push
push
insb
mov
pop
inc
lods
xchg
add
mov
xchg
inc
jmp
jg
cmp
call
xor
jae
mov
cmpl
pop
cmc
test
mov
pushl
les
hlt
fwait
scas
inc
and
out
mov
and
test
mov
pop
mov
lods
ljmp
adc
shlb
fwait
and
and
push
push
repnz
dec
cmp
inc
sub
mov
scas
or
or
cmp
or
jmp
mov
enter
cmp
dec
mov
lcall
mov
int
test
lock
test
ljmp
mov
jp
push
fwait
scas
dec
sbb
and
repz
sbb
call
je
int3
and
aaa
scas
cs
jge
jns
add
outsb
mov
pop
test
xchg
es
stos
and
dec
dec
fmuls
pop
mov
insl
sbb
ss
add
lods
mov
dec
xchg
adc
loopne
lret
popf
mov
xor
sub
inc
and
pusha
addl
iret
or
imul
mov
jo
vandps
sbb
cmp
or
add
flds
pop
dec
orb
je
mov
daa
ss
test
ss
or
xor
sbb
imul
jmp
loopne
jns
inc
notb
scas
mov
mov
insb
mov
push
shl
or
adc
push
and
enter
ret
mov
mov
lcall
shrb
sub
cwtl
sub
sarb
or
xchg
add
inc
jne
pop
ret
das
dec
mov
imul
outsl
mov
repz
mov
cs
xor
dec
jle
adc
loop
xor
and
mov
mov
dec
xchg
and
paddsb
dec
fsubl
lock
nop
xchg
mov
mov
push
push
les
mov
in
push
fld1
popa
or
cmp
adc
rolb
cmpb
mov
loope
adc
mov
adc
mov
cld
lea
cwtl
mov
rclb
adc
insb
ret
mov
or
popa
adc
mov
and
xorl
add
pop
cmc
add
mov
mov
push
sarb
push
shrl
jnp
mov
pop
sahf
adc
addl
push
pop
gs
mov
dec
rorb
sarb
fmuls
mov
adc
iret
inc
or
mov
cltd
adc
adc
or
sbb
sub
add
rolb
divb
jne
arpl
mov
std
decl
and
add
ret
cltd
push
inc
call
aad
push
lock
pop
sub
xchg
daa
xchg
mov
orb
ret
adc
sbb
int3
fbld
inc
loope
rcrb
adcb
jb
add
fsubs
pusha
enter
jmp
xor
in
or
add
jno
loope
enter
xor
xchg
sub
fsubrs
jns
push
jmp
adc
ljmp
sarl
and
test
or
test
aam
sbb
adc
mov
dec
adc
adc
fstps
and
pushl
add
adcb
xor
mov
push
and
dec
xor
in
xor
sbb
fnstsw
adc
push
fstl
outsl
insb
aas
xchg
jb
or
scas
push
jmp
test
mov
or
sbb
hlt
js
xchg
pop
and
jb
or
jb
dec
cmpsb
jle
sub
testb
cs
mov
shrl
les
les
sub
adc
mov
xchg
daa
out
jmp
in
xchg
sbb
loop
dec
inc
push
or
xor
or
push
hlt
and
les
jnp
mov
cmovb
jecxz
xor
push
inc
mov
in
lds
sub
dec
js
xchg
lahf
pop
jg
sbb
negl
add
das
inc
lds
xor
jl
mov
mov
hlt
mov
aaa
int3
lods
or
jne
lock
repnz
and
push
jle
dec
mov
push
inc
adc
mov
cmpsb
adc
clc
xor
mov
add
dec
inc
les
or
or
and
repnz
sbb
jecxz
push
push
mov
adc
mov
add
pushf
clc
pop
push
cmp
sub
pop
push
push
inc
aaa
mov
fwait
hlt
repnz
adc
hlt
repnz
inc
push
lahf
push
xor
add
add
and
sub
add
mov
psubsb
xor
add
and
adc
xor
cmpl
cmpsl
mov
dec
in
xchg
mov
or
and
pushl
call
mov
test
cmpl
cmp
aaa
shll
sub
and
jmp
adc
adc
pusha
cmp
sete
aaa
cmp
pushf
cmp
dec
xchg
jmp
nop
pop
or
jae
or
ljmp
mov
ljmp
push
mov
fsubl
inc
dec
enter
xor
rcr
sub
je
adc
or
and
in
mov
push
cmp
jl
push
cmp
cmp
mov
out
test
cmp
and
pop
inc
lock
popa
rcrb
and
push
daa
push
enter
xchg
mov
dec
mov
cmpl
adcb
mov
lods
ja
enter
imul
push
leave
dec
mov
adc
test
call
push
push
sbb
lret
and
cmp
mov
push
sub
or
or
cmp
test
sbb
and
add
test
ljmp
dec
push
or
arpl
ljmp
aas
aam
push
mov
or
sti
imul
outsl
adc
hlt
cmpl
sbb
xor
hlt
mov
je
lods
popa
mov
in
ret
fcomps
enter
or
fcomps
jae
dec
jl
adc
push
daa
and
xor
adc
int
inc
or
add
pusha
movl
add
xor
das
aam
pop
loope
pop
shl
clc
inc
out
cmp
gs
stos
cld
add
add
mov
sub
push
push
add
lret
xchg
dec
addr16
cli
mov
repz
test
pop
xchg
adcl
cltd
cli
add
or
cmp
rol
pop
sub
or
add
mov
dec
mov
mov
push
arpl
sub
fldl
jb
les
and
aaa
cs
addb
push
xchg
xchg
cmp
push
in
mov
lcall
xchg
movswl
inc
or
inc
test
ret
inc
scas
clc
add
push
mov
mov
aaa
xchg
pop
push
pop
out
ja
mov
or
rcrb
jbe
mov
add
dec
push
test
jl
inc
cli
test
add
sbb
xchg
xchg
add
dec
mov
or
ljmp
dec
fistpll
popa
adc
call
stos
cmp
or
inc
loopne
jnp
test
sbbb
jne
and
int3
mov
xchg
lock
and
in
js
mov
out
mov
les
int
in
ja
xchg
and
mov
xchg
stos
popf
jge
sarl
sar
push
jmp
push
in
loopne
sub
icebp
lret
cmp
jae
push
cmp
jne
mov
and
adc
lea
lock
mov
adc
aas
shr
mov
les
icebp
rdmsr
flds
nop
xchg
fsubs
sti
sub
dec
loopne
dec
ret
xchg
scas
push
in
inc
push
jbe
out
push
jmp
sbb
mov
das
push
data16
pop
bound
fsubrl
and
push
pop
sub
fsubs
mov
lods
bound
dec
sarl
fsubrs
imul
lods
lock
sub
jl
insl
in
add
jl
and
mov
mov
arpl
mov
fadds
mov
imul
pop
and
sbb
push
inc
scas
outsb
inc
and
xchg
test
pusha
mov
stc
adc
je
leave
nop
mov
ret
mov
or
adc
or
inc
or
mov
lahf
mov
iret
mov
mov
in
jo
cs
adc
sarb
mov
sub
and
pop
cmp
adc
in
hlt
mov
pop
jns
jl
ss
hlt
fmull
push
inc
jp
test
fwait
pusha
and
sbb
pushf
ss
pop
and
push
or
mov
mov
fs
inc
push
adc
push
push
idiv
lcall
subl
into
idivb
xor
movsl
ds
dec
xchg
and
testb
iret
push
shlb
add
inc
lock
push
push
lock
das
nop
in
dec
popf
pushf
stc
subb
push
or
sbb
or
lret
ss
lods
in
repz
mov
rorl
and
leave
push
roll
sbb
inc
sbb
xor
push
pop
xchg
inc
lea
cmovp
mov
add
sub
xchg
sbb
pushf
out
fnsave
lret
flds
push
push
imul
in
shlb
ljmp
xlat
sbb
adc
icebp
mov
push
or
pop
fxch
xor
push
push
fs
or
dec
add
fisttpl
sub
xlat
inc
mov
sbb
xchg
xchg
jne
loopne
push
inc
or
lret
int
rcll
inc
out
int
xor
mov
sbb
ret
dec
divb
stos
bound
push
pop
mov
and
pop
sub
and
xchg
les
xor
aad
and
inc
and
jmp
adc
mov
fisubs
xchg
mov
mov
in
popf
add
cmp
xchg
dec
sub
jae
push
cmp
jge
xchg
cmp
ss
daa
jae
and
popf
bound
xchg
or
rolb
sbb
mov
sbb
daa
jmp
ja
add
adcb
add
dec
inc
imul
mov
lods
aas
lods
pop
das
hlt
xchg
clc
stc
push
cld
js
repnz
aam
pop
fiaddl
sub
pop
daa
movsl
cmc
ficomps
daa
fcmovnu
sbb
incb
les
stos
lods
add
or
out
mov
mov
push
clc
cmpsb
js
add
lock
les
jne
xchg
push
neg
push
add
les
out
dec
es
imul
fildll
jmp
add
pop
in
std
lcall
lods
mov
jae
mov
jmp
les
jb
out
and
out
scas
pop
push
fistpll
dec
dec
loop
adc
mov
fmull
mov
mov
data16
push
xchg
rcll
cmpsl
dec
and
adc
inc
jmp
push
dec
clc
add
data16
ljmp
jecxz
lret
dec
push
cmp
lds
adc
sbb
cmp
insl
scas
cmp
dec
hlt
fwait
sbb
hlt
movsb
sub
adc
mov
sbb
adc
cwtl
pop
repnz
and
xchg
inc
movsl
jge
call
dec
iret
pop
sub
jl
mov
cmp
and
pushf
push
loop
fsts
inc
leave
ljmp
decb
dec
aaa
inc
cli
jne
sbb
and
add
stc
jecxz
mov
adc
mov
jno
jb
xchg
pop
out
cmpsl
cpuid
jb
jmp
inc
flds
stos
sub
push
xchg
jle
mov
inc
loopne
daa
adc
sahf
leave
clc
stc
mov
inc
dec
jne
mov
add
mov
je
dec
sub
pusha
mov
xchg
stc
leave
inc
cwtl
hlt
xchg
and
aas
fistl
sbb
sub
mov
sub
sbb
pop
pop
scas
call
add
andb
lahf
rclb
mov
ret
mov
ja
lock
je
mov
je
pop
popa
neg
call
push
adc
loop
add
jb
jmp
add
sti
mov
sbb
fsubl
push
pop
ret
add
cmp
or
gs
push
sub
mov
jne
mov
jmp
sbb
push
sub
mov
sbb
inc
add
xor
and
inc
jbe
sub
movsl
int3
jno
call
mov
fsubrs
out
nop
lods
dec
neg
cmpb
cmp
add
sbb
shr
aas
xor
xchg
adc
jl
or
or
repnz
insl
sti
out
sahf
pop
das
jge
mov
push
cmpsb
mov
sbb
in
cmp
jmp
sbb
jecxz
es
cmp
mov
and
std
sbb
adcb
add
insb
mov
pop
daa
ret
les
shll
inc
xchg
andl
and
pop
inc
lahf
mov
sub
daa
mov
enter
cld
lcall
in
stos
sub
push
add
cmp
jge
lock
ret
mov
xor
fisubrl
mov
lret
shrl
xor
fcoms
in
dec
inc
insb
and
cmp
and
loopne
das
mov
lret
jbe
out
mov
add
jae
outsl
jne
fs
fwait
xor
ljmp
pop
inc
into
fs
cmp
imul
sub
movsl
pusha
in
xor
jmp
hlt
or
shll
test
lret
shll
fucomip
sub
xchg
movsb
cli
sub
test
fs
inc
into
cmp
jne
lahf
imul
inc
xchg
stc
fists
dec
mov
lret
daa
je
aaa
sbb
cmp
je
sbb
mov
add
mov
xor
xchg
fisttpl
sbb
inc
inc
cmp
ljmp
sub
push
sub
popa
nop
sbb
inc
xchg
inc
das
push
dec
sub
loop
outsb
dec
pop
pop
stos
daa
lahf
jnp
lds
jo
push
test
pushf
fcmovnb
ljmp
es
popaw
push
decb
fildll
mov
push
call
lcall
sbb
add
pop
filds
mov
dec
movlps
jle
xchg
stc
add
cmp
and
dec
mov
mov
scas
pop
adc
xor
mov
loopne
mov
shrb
mov
scas
loopne
shlb
aas
or
loopne
nop
shl
and
sbb
jnp
mov
sub
adc
cmp
js
out
shr
mov
pop
mov
mov
jns
dec
loopne
cmpsl
adc
inc
dec
push
cmp
xlat
and
and
jecxz
push
dec
adc
popf
add
jmp
ljmp
inc
hlt
int
xlat
sub
pop
fs
in
cmp
cmp
pop
out
and
outsb
call
mov
loop
das
mov
out
jl
mov
cmp
fisttpl
pushf
sbb
out
mov
sub
push
sbb
sub
inc
dec
jne
lret
mov
add
fwait
ret
loop
mov
jl
xchg
mov
int3
test
nop
xlat
in
mov
sbb
cmovbe
shll
mov
cld
daa
notl
mov
mov
shrb
xchg
adc
inc
add
iret
cmp
outsb
or
pop
or
mov
mov
xchg
adc
in
in
andb
inc
test
jo
sub
add
mov
push
movsl
mov
repnz
test
daa
pop
adc
jle
mov
xchg
loop
aas
daa
adc
pop
clc
jp
mov
push
push
in
xchg
dec
mov
inc
nop
outsl
jae
jmp
in
repnz
pop
dec
sub
push
and
dec
imul
sbbb
clc
mov
mov
dec
mov
push
das
or
or
inc
ret
mov
dec
enter
and
inc
stc
dec
clc
arpl
les
rcr
pop
sahf
into
add
in
outsb
adc
mov
or
fwait
inc
std
aad
in
call
mov
je
sub
dec
repz
adc
sub
cwtl
dec
jmp
adc
setg
mov
imul
das
or
int3
or
jae
mov
out
shll
out
into
in
dec
lret
dec
or
js
mov
jl
pushf
fcoml
xor
add
movb
aam
gs
push
cmp
inc
xor
enter
sub
xchg
lcall
or
cltd
shll
int3
out
mov
mov
mov
mov
in
mov
mov
jae
mov
lcall
xchg
push
notb
lds
push
inc
rcrl
xor
and
into
mov
mov
out
and
mov
lods
ficoml
data16
call
xchg
ss
inc
pop
aam
xchg
pop
add
add
xchg
xchg
mov
pop
enter
shr
sub
xchg
repz
lahf
sbb
adc
xor
popf
addb
dec
jmp
adc
jb
jne
repz
mov
xchg
rcrb
cmpsl
cli
aas
pop
jecxz
dec
lods
sub
or
in
imul
mov
adc
mov
jl
jnp
and
pusha
mov
inc
xor
popf
push
mov
jmpw
fs
repnz
adc
in
ja
loope
push
add
and
in
sti
es
inc
xlat
stc
jecxz
sarl
frstors
sbb
sbb
add
or
add
enter
andl
adc
cld
sbb
xchg
clc
push
fcoml
mov
iret
jmp
icebp
push
daa
imul
mov
xor
cmp
jno
sub
pop
xchg
sub
imul
mov
pop
nop
rcrl
xchg
daa
xor
cld
js
addl
cmpsl
dec
dec
rcrb
xlat
fwait
das
adc
inc
pop
outsb
add
push
inc
enter
aad
cwtl
movsb
sub
adc
xchg
loope
aas
cmp
cmp
cmpsl
in
test
mov
mov
inc
out
dec
dec
jne
or
fcmovnb
sub
ret
fisttpll
cmp
mov
or
and
push
ljmp
adc
mov
popf
sahf
movsl
pop
fwait
rcll
arpl
mov
push
pop
lods
pop
push
in
sub
jmp
outsb
dec
jns
and
xchg
sub
sbbb
fcoml
cwtl
ror
cld
leave
xchg
mov
or
imul
jo
in
icebp
sbb
dec
int3
dec
sti
lret
add
repz
xchg
dec
js
in
xchg
clc
jmp
dec
dec
push
cmp
push
call
ret
and
bound
push
notb
add
jne
nop
movsl
or
leave
and
adc
pop
push
cwtl
pop
iret
loopne
pop
out
ljmp
loop
sbb
push
lock
movsl
in
and
or
pop
decl
arpl
popa
and
cld
in
mov
out
icebp
mov
jne
inc
and
out
leave
stc
int
and
sub
cmpl
lds
adc
dec
insb
lea
nop
sub
lahf
or
test
clc
mov
cmp
jb
cmp
sub
push
cmpsb
mov
test
imul
daa
inc
dec
add
addr16
repz
scas
cmc
fiaddl
lods
ljmp
mov
ds
cmp
mov
cs
data16
test
ret
or
or
pushf
cmp
fwait
int3
bound
insl
push
out
mov
push
lcall
icebp
iret
inc
fs
xor
push
mov
ss
sbb
icebp
sub
dec
mov
testb
jne
data16
sub
inc
push
loope
out
roll
out
cmp
and
adc
or
cmp
test
orb
mov
cmp
enter
js
mov
test
ja
sbb
mov
xchg
or
in
push
lock
in
cld
shl
repnz
cmp
inc
lods
lock
cld
inc
repnz
dec
mov
lods
cld
pop
pusha
enter
adc
push
or
pusha
dec
cmp
insl
sbb
aas
push
push
jge
jb
push
jo
in
xchg
les
repz
push
rcrb
dec
cmp
outsl
inc
ds
adc
dec
push
mov
xlat
add
push
dec
and
xchg
xchg
jmp
push
fimuls
cmp
in
cmpsb
xchg
sbb
push
clc
stc
mov
pop
pop
inc
repz
loop
lcall
leave
jl
leave
cli
imull
add
inc
adc
je
lahf
out
daa
inc
out
add
push
or
pop
adc
xchg
call
xchg
xlat
or
lock
jmp
sbb
jmp
aad
out
xchg
mov
jp
push
jnp
jmp
mov
imul
pop
or
ja
and
dec
faddl
fldl
inc
push
idivb
lock
lods
nop
sub
pop
mov
add
inc
incb
jmp
fcmovnb
insl
or
and
sub
cmp
xchg
xchg
push
je
repnz
push
pop
notl
enter
jge
test
scas
in
popf
inc
cmp
push
cmpsb
bound
jbe
dec
es
cld
inc
dec
fisubl
sbb
jae
cmp
decl
icebp
adc
aas
mov
sbb
sbbb
cmp
jmp
sub
int3
jmp
sbb
and
cmc
adc
jo
icebp
xchg
loopne
or
lods
dec
push
in
shr
dec
pushf
push
lock
dec
cmc
or
inc
inc
dec
push
ret
adc
sbbl
inc
int3
pop
inc
jmp
inc
or
pop
cmpl
pop
add
mov
or
test
fstl
leave
in
shl
nop
lds
incb
inc
xchg
mov
enter
sub
int
sbb
test
jbe
pop
push
lret
rcrb
or
ds
mov
jp
outsb
push
dec
sub
jae
dec
movl
das
hlt
mov
sub
sub
adc
in
ja
std
mov
int3
rclb
orl
jge
ret
mov
lea
call
dec
pop
pop
push
inc
je
mov
mov
sbb
sti
or
jge
mov
insb
add
pop
je
inc
mov
mov
es
jns
mov
sbb
dec
arpl
inc
jmp
shrb
push
jne
pop
xchg
pusha
leave
add
or
dec
jecxz
xacquire
sbb
mov
mov
xor
bound
and
mov
sub
iret
cli
fistpl
into
push
pop
jae
lcall
cs
dec
cmp
dec
push
jae
or
mov
es
into
arpl
ret
mov
sbb
dec
push
push
sbb
sbb
jne
push
push
lea
jo
bound
call
rorl
xor
mov
in
arpl
and
inc
sar
jge
inc
cmpsb
xor
cmp
xor
pop
dec
push
push
cwtl
xchg
clc
lods
sub
loop
push
pop
adc
and
jmpw
lcall
jl
sar
js
sbb
xchg
stos
adc
js
push
add
mov
add
add
mov
mov
lea
xchg
int
mov
add
inc
push
push
clc
push
or
pop
jl
xor
clc
outsb
mov
xchg
lock
ljmp
sbb
and
xor
cmp
rorl
xchg
stc
and
cmp
lods
ja
popf
or
dec
das
stc
xchg
sub
jp
xor
xor
push
mov
sub
arpl
dec
add
aam
and
roll
mov
in
in
push
mov
pop
mov
or
into
xor
cmp
or
sub
test
into
sahf
shlb
adc
cmp
sub
jl
add
dec
inc
xchg
les
pop
mov
es
cs
outsb
inc
sbb
scas
and
add
cmp
mov
fildl
bound
sti
push
pushf
mull
daa
cmp
shl
jp
dec
daa
dec
sbb
adc
movsb
fcoms
push
cld
lods
add
call
pop
pop
mov
sbb
pop
and
out
loop
push
lea
push
adc
aam
leave
out
xchg
mov
inc
cmp
sub
lcall
add
adc
adc
pop
adc
mov
mov
pop
pop
cwtl
dec
fnstcw
and
pop
pop
sbb
rorl
lock
cs
cmpsl
mov
jne
adc
iret
mov
pop
mov
push
nop
loopne
shlb
and
add
pop
adc
pop
icebp
int
imul
out
rcrl
sarb
imul
adc
mov
loopne
push
sbbl
cmp
test
mov
cmpsl
out
or
cmp
and
repnz
inc
ds
xchg
daa
je
mov
and
or
imul
push
sub
rep
jle
xchg
sub
fimuls
jmp
xchg
daa
push
loopne
int
das
outsb
add
call
push
loopne
xlat
loopne
push
inc
int3
add
ss
and
enter
outsb
and
jo
arpl
imul
jb
add
sub
and
data16
insl
and
sbb
ret
into
xor
adc
cmp
jge
sub
mov
cmc
jg
sub
push
cmp
xchg
addr16
sub
and
andb
add
dec
pop
fsubrl
and
imul
or
das
mov
push
sbb
dec
daa
inc
pop
cmp
jp
xor
or
mov
cmpsb
aas
pop
neg
sti
push
mov
pushl
adc
cmp
adc
sub
outsb
aad
inc
mov
imul
dec
mov
jmp
xchg
sub
cld
inc
test
mov
add
ss
jne
inc
rol
or
jge
mov
jg
fmul
mov
add
nop
mul
push
setge
xchg
ja
dec
jmp
lcall
cltd
lcall
adc
pop
insb
and
gs
mov
mov
push
je
jae
adc
ss
xor
jp
imul
sub
cwtl
leave
mov
or
jge
mov
mov
test
add
dec
push
sub
sub
push
xchg
and
test
mov
sub
clc
scas
adc
sub
movsb
xchg
add
dec
mov
push
or
call
in
or
jno
or
lock
dec
pusha
test
mov
jl
aaa
add
sub
pusha
je
push
push
cwtl
scas
addr16
sbb
pop
gs
cmp
or
xchg
sub
jns
xor
test
jle
bsf
dec
jne
xchg
pop
xor
rcl
clc
xorl
loop
mov
push
mov
addb
xor
cld
jae
or
loopne
pop
mov
push
sub
lods
addb
pop
pop
push
ret
cmp
mov
into
ret
rcrb
rcr
adc
lcall
add
addr16
lock
push
loop
pop
jno
cmp
jmp
testb
je
mov
mov
and
xor
push
movsl
push
or
jno
dec
xor
dec
push
mov
xor
jbe
rolb
out
inc
sbb
sbb
pop
push
js
mov
xor
scas
shrl
xlat
add
repz
rorl
push
push
mov
les
or
movsb
clc
add
adc
nop
dec
outsb
test
shlb
mov
xor
push
sahf
mov
scas
lcall
fldt
mov
and
repnz
repz
in
xlat
push
pop
lock
push
clc
sub
jmp
pop
lret
jne
pusha
jecxz
cmp
adc
ja
mov
rclb
call
dec
in
in
in
mov
in
stos
iret
fisttps
mov
add
xchg
pop
loopne
adc
adc
insb
dec
movups
pop
test
sub
sbb
in
stos
sarl
mov
les
cmp
adc
sub
xchg
mov
mov
cmp
or
adc
test
push
mov
orl
push
out
cwtl
es
bound
push
mov
xor
mov
je
fwait
shlb
test
mov
popa
jmp
push
nop
push
rcl
stos
pop
xchg
mov
stos
pop
push
push
cld
mov
test
xor
ret
or
or
dec
test
push
movsl
push
dec
cs
adc
pop
in
mov
mov
bound
pop
ss
jp
pop
inc
jo
jecxz
sbb
fistpl
cmpsb
test
insl
or
xchg
dec
shlb
ret
and
or
outsl
sub
push
dec
nop
and
xchg
test
out
xor
stos
cmp
mov
arpl
mov
jbe
xor
dec
mov
aas
aas
add
loop
inc
ret
jge
sbb
es
pop
in
fptan
cmc
push
inc
mov
lock
mov
test
movsl
mov
inc
mov
popf
pop
lea
int3
daa
lock
push
lret
scas
add
adc
ret
jae
mov
inc
dec
idivb
push
stc
or
repnz
imulb
sub
mov
ljmp
pop
cmp
push
fsubp
outsl
push
iret
sbb
hlt
or
and
mov
adc
pop
adc
inc
mull
adc
cmp
xor
cltd
dec
adc
popf
ljmp
rcrb
mov
or
jo
mov
or
inc
dec
pushf
xchg
lcall
bound
push
inc
ret
mov
mov
xchg
cwtl
adc
xor
cli
jae
cwtl
inc
int3
mov
test
push
inc
pop
repnz
add
sti
pusha
insb
fs
or
pop
or
in
push
das
repnz
inc
mov
or
mov
or
test
popf
cli
pop
mov
adc
jp
popa
push
fs
mov
xor
jmp
xor
jmp
mov
inc
ds
push
lods
movl
dec
rol
cmp
inc
ja
or
fmull
push
pop
ljmp
les
ds
push
sbb
push
sub
loop
sub
pop
cmc
testb
sbb
xchg
sub
adcb
daa
nop
fnsave
push
push
adc
insl
inc
adc
icebp
or
popa
in
and
push
jecxz
cld
es
loope
aam
mov
cs
loopne
fcomip
inc
mov
in
inc
add
dec
sbb
cli
sub
call
aad
loope
sub
hlt
mov
push
push
sub
lock
hlt
negl
jae
mov
adc
jne
add
fistpll
xchg
adc
xchg
sti
dec
and
push
into
jmp
pusha
push
sub
cmpsb
push
xchg
js
xor
or
mov
sbb
jp
cld
lret
lret
adc
js
data16
jmp
imul
insb
push
std
xor
inc
clc
sti
lahf
in
pop
das
enter
push
add
imul
mov
dec
jne
pop
prefetch
rorl
mov
mov
add
xlat
insl
mov
rcrb
jno
fcomps
lahf
sbb
jg
push
mov
orl
mov
add
dec
jne
sub
push
xchg
pop
cwtl
clc
mov
and
pusha
xchg
xor
xchg
xchg
pushf
notl
pop
lods
push
or
gs
or
adc
leave
sub
cmp
push
jne
cli
adc
adc
cli
inc
add
cmpl
or
add
mov
iret
sti
xor
jb
imul
mov
xor
push
nop
xor
insl
and
push
das
lret
sahf
enter
push
movsl
cmp
int3
shrl
mov
inc
in
and
inc
adc
test
sub
aam
dec
cmp
lea
push
lods
fmuls
xor
mov
mov
bound
es
add
test
jo
inc
and
orb
push
hlt
pop
repnz
mov
aas
mov
mov
pop
add
mov
add
mov
insb
xchg
and
enter
fwait
out
mov
lea
adc
push
ljmp
sarl
jg
push
pop
jmp
sub
sub
push
xchg
xchg
push
pop
outsl
lea
push
sub
ljmp
or
xchg
jno
mov
jbe
sub
mov
outsl
fisttpll
add
lea
add
xor
pop
and
sub
lret
push
jo
pop
cld
push
or
test
push
push
mov
stc
sub
orl
jp
ljmp
pushf
sbb
ret
mov
xlat
inc
rolb
and
pop
in
lea
dec
cmp
movsb
ja
xchg
lret
in
mov
push
mov
mov
les
rol
jecxz
mov
push
inc
xlat
sbb
push
mov
and
xchg
lret
mov
aas
mov
add
or
dec
dec
mov
dec
jne
sub
or
aad
addr16
mov
pop
push
leave
push
inc
or
js
fcoml
sbb
pop
test
jp
das
mov
scas
adc
sub
mov
add
add
jne
cli
add
loop
lcall
xlat
into
xchg
xor
mov
or
dec
andb
pop
fsubp
scas
loopne
jo
sbb
push
aas
add
sub
dec
mov
repnz
sub
cltd
sbb
leave
mov
mov
inc
notb
test
inc
push
dec
scas
mov
pop
inc
inc
scas
mov
push
jmp
jne
enter
push
loopne
cltd
jmp
jle
xorb
push
xor
or
imul
xor
testl
sbb
and
inc
sub
push
fisubs
sub
mov
xchg
cmp
push
dec
mov
and
push
aam
cmpsl
jnp
push
incl
out
fisttpll
jmp
push
imul
loop
int3
outsl
lret
adc
mov
and
sbb
popf
fstpt
mov
push
and
pop
sbb
pop
out
les
je
in
sub
sub
fs
xchg
je
popa
pop
ja
lock
jae
gs
mov
xor
pop
sbbb
pop
loopne
jb
outsb
sbb
jmp
fwait
les
pop
mov
fadd
repnz
bound
or
lret
push
adc
js
or
add
push
gs
dec
outsb
outsw
in
insl
popf
hlt
adc
xchg
push
jmp
xor
cmp
jp
pop
test
lock
dec
mov
insb
push
cwtl
test
push
mov
ret
mov
nop
or
inc
sbb
sbb
mov
and
lea
cld
and
pop
mov
pop
les
je
and
push
popf
scas
sub
pop
lret
mov
nop
movsb
adc
and
cmp
jb
je
push
lods
les
aad
mov
rolb
xchg
loope
aas
sub
xchg
mov
rorb
xor
cmp
and
sbb
cmpsb
sbb
arpl
in
imul
test
test
jno
xchg
and
adc
mov
icebp
xchg
push
push
fadds
cmp
repnz
pop
add
dec
pop
fsubl
cltd
movl
or
jl
in
and
sbb
rcrb
cmp
bound
inc
add
rcrl
pop
mov
xchg
fbstp
inc
pop
and
inc
sbb
f2xm1
push
shrb
adc
mov
mov
lods
cmp
imul
pushf
add
cmc
ss
sbb
pushf
nop
fldcw
movsb
mov
imul
dec
jmp
adc
and
aam
adc
nopl
cs
lar
mov
cmp
aam
mov
sub
add
inc
push
pop
add
psraw
dec
mov
jns
test
leave
or
mov
adc
and
scas
jo
or
dec
sbb
cltd
adc
mov
call
fadds
or
fwait
adc
int
fisttps
cmp
in
pusha
outsl
dec
aam
adc
fisttpl
xchg
lock
imul
hlt
sahf
push
push
out
int3
adc
pop
enter
push
cmp
enter
lret
push
mov
xor
imul
xor
or
sbb
sbb
and
and
sub
xchg
xor
cmp
cmp
test
inc
jb
cmp
inc
cs
and
insb
daa
mov
push
mov
add
mov
ret
fildl
repnz
adc
in
mov
adc
call
or
in
dec
repnz
push
nop
sub
les
cmpsl
in
pop
or
pop
dec
cld
sahf
cs
pop
xchg
sub
int
sti
lock
aad
imul
fdivrs
orb
pushl
popf
xor
xchg
dec
js
loopne
mov
add
xor
cmp
decb
cmp
shr
adc
aam
inc
sub
jp
test
add
cmp
or
push
sbb
sub
xchg
lds
add
aam
sub
xchg
mov
fs
add
ja
adc
jmp
adc
insl
mov
enter
or
inc
sub
mov
xchg
es
push
cmc
add
out
adc
xor
stos
and
in
insb
nop
test
add
pop
aam
enter
sbb
test
and
icebp
add
push
cmc
or
xchg
loope
sub
adc
jo
or
inc
test
or
sbbb
adc
xchg
aas
and
enter
and
and
lret
jg
push
stos
and
in
insb
pusha
lea
ret
and
enter
xor
or
enter
xor
testl
dec
outsl
push
stos
and
in
insb
dec
lea
ret
and
enter
xor
or
das
sbb
les
mov
dec
sub
filds
pop
pop
jge
cwtl
rclb
inc
inc
fmull
inc
dec
jo
and
pop
add
subb
lcall
sub
es
aas
xor
and
sub
add
cmpl
dec
clc
jmp
xor
or
mov
adc
call
mov
or
xor
loop
lea
mov
mov
cmp
xor
add
rolb
sub
call
cmp
inc
mov
pop
mov
and
lret
and
add
scas
add
and
scas
orb
test
jmp
and
enter
ret
ljmp
fwait
adc
xchg
roll
or
aam
fsubl
dec
aad
mov
imul
push
xchg
inc
je
jns
jmp
adc
mov
dec
xchg
sbb
dec
lea
xchg
and
inc
mov
or
mov
adc
pop
xor
daa
add
movsl
pop
and
and
or
push
push
mov
cmp
clc
adc
add
add
dec
adc
xlat
aad
cmp
pop
adc
push
mov
and
push
rolb
cmp
mov
xchg
or
sbb
call
jmp
xor
mov
push
call
inc
or
pop
xchg
sbb
adc
or
sub
hlt
iret
imul
test
cmpsl
mov
xchg
stos
leave
inc
dec
sub
adc
mov
add
fs
push
sbb
sub
inc
es
rolb
add
mov
sub
cmpl
cwtl
repz
fildll
mov
xor
xor
ret
push
sub
rclb
subl
add
sub
push
adc
arpl
call
fs
test
adc
add
sub
mov
push
or
add
jle
int3
jne
arpl
and
addb
dec
jb
push
das
imul
jecxz
xchg
ljmp
inc
fcoml
adc
inc
pop
aam
xor
sbb
and
xor
hlt
cltd
call
xor
clc
fs
push
xor
ja
xlat
ret
pop
les
aam
aas
xchg
jne
xor
inc
and
pop
xor
push
cmpsl
clc
sub
mov
sbb
pop
add
mov
fistps
sub
dec
mov
jnp
imul
jnp
fs
jmp
push
add
ja
cld
neg
int
clc
or
inc
push
popa
or
adc
ss
lods
push
xchg
jne
les
add
sub
imul
and
xchg
xor
ret
aam
jne
inc
imul
popf
cmp
subb
xchg
xor
mov
add
inc
and
adc
aam
inc
adc
xchg
inc
sub
sbb
push
cmp
mov
mov
sub
ret
push
push
lock
xor
cmp
test
mov
xchg
and
adcb
sub
and
pop
jae
adc
and
ret
nop
scas
ret
push
xchg
jnp
enter
jb
cmp
pusha
mov
and
arpl
fs
jb
cmp
repnz
push
inc
imul
xchg
insl
enter
jb
cmp
push
mov
and
enter
jb
cmp
pop
mov
and
enter
jb
cmp
inc
mov
and
enter
jb
cmp
dec
mov
and
fisubs
in
jb
cmp
sbb
mov
and
xchg
aaa
enter
jb
cmp
sbb
mov
and
xchg
aas
enter
jb
cmp
sbb
mov
and
xchg
daa
enter
jb
cmp
sbb
mov
cmp
dec
call
and
dec
or
push
inc
cmp
shlb
lret
push
incl
mov
stos
and
lea
int
jg
xor
cmovne
pushl
xchg
inc
jb
ja
push
mov
enter
aad
out
jns
les
push
inc
sbb
je
jp
arpl
jae
test
xor
data16
mov
je
adc
xlat
pop
fwait
jnp
xor
push
inc
lret
js
or
xor
push
inc
jmp
test
xor
lods
hlt
xchg
and
adc
into
push
dec
jns
adc
add
sbb
or
data16
or
pop
and
or
out
or
scas
sbb
bound
jne
jnp
movsb
push
insb
aaa
or
dec
xor
test
outsb
xchg
addr16
push
orb
xchg
push
adc
add
dec
or
pop
int
inc
jle
lds
jnp
jnp
stos
jecxz
cld
push
in
push
push
and
or
xor
add
insb
popa
arpl
xor
push
pop
je
mov
sub
cli
push
addl
mov
mov
xchg
and
imul
sbb
or
push
dec
dec
or
and
dec
or
jecxz
popa
mov
cmpsl
cmp
test
adc
or
jne
sub
les
inc
movsb
xor
int
pop
add
adc
imul
int
push
fsub
mov
or
inc
inc
lahf
or
inc
adc
cmp
cmpsl
pop
sub
push
or
loope
xor
loopne
xchg
adc
cltd
sbb
push
mov
and
clc
or
testl
andps
mov
inc
pusha
pop
scas
adc
xlat
rcrb
mov
jno
dec
dec
mov
imul
add
mov
cmpsl
inc
rcr
sahf
xchg
jo
scas
adc
rclb
inc
push
xor
mov
movsl
adc
and
rol
aam
mov
push
bnd
mov
mov
or
in
add
push
pop
or
inc
push
nop
jmp
rcrb
fs
or
fnsave
int3
das
mov
sub
mov
insb
dec
stos
mov
sub
add
imul
dec
cmp
dec
fisubrl
add
dec
adc
xchg
std
cmp
out
shlb
pusha
rclb
inc
push
xor
pop
push
or
sbb
fwait
push
adc
mov
jl
fadds
enter
es
mov
push
or
push
push
inc
inc
and
or
loope
dec
inc
call
popa
xchg
mov
dec
add
cld
mov
adc
mov
xor
and
pop
adcb
pusha
mov
ss
add
ss
and
sub
les
sbb
mov
nop
inc
push
pop
fwait
or
add
jo
adc
or
lds
sub
sbb
pop
inc
and
dec
les
xorb
movsb
mov
inc
cwtl
pop
mov
push
inc
mov
pop
andl
sbb
adc
push
inc
popa
jo
push
jae
repnz
adcb
test
fcompl
ss
xchg
push
xchg
push
mov
mov
int3
sbb
pop
or
xor
movsl
push
inc
pop
sub
sub
lods
inc
shlb
pop
lds
aam
dec
cmp
push
hlt
cwtl
inc
gs
js
out
cmp
or
pop
xchg
dec
pop
mov
adc
jmp
or
push
sti
dec
dec
jge
jbe
je
xchg
push
in
in
inc
add
push
popa
jo
add
arpl
inc
mov
add
jns
pop
and
push
fsubs
dec
jae
cmp
inc
jne
sbb
outsb
adc
push
jecxz
sahf
mov
add
dec
jae
push
ja
call
inc
cmpsb
xchg
insb
pop
sub
nop
int3
add
push
jo
in
push
xchg
mov
aas
fmuls
and
pusha
push
or
jmp
test
and
mov
cmpsb
xchg
or
mov
adc
int
mov
sbb
dec
pusha
sbb
aaa
cmp
mov
sbb
ret
cld
lods
jae
sbb
in
ss
jl
pop
mov
loop
jo
shlb
sub
inc
lods
or
sbb
adc
loop
inc
cwtl
or
lods
xchg
adc
jbe
or
push
xor
jno
cmp
in
cmp
mov
or
mov
pop
je
daa
rolb
sbb
xor
loope
or
scas
cmp
push
cli
push
cmc
sbb
xchg
or
dec
push
mov
xor
add
mov
sbb
sbb
push
sbb
dec
sub
scas
sbb
or
xor
push
sahf
hlt
and
inc
add
in
roll
je
push
jne
test
sbb
pop
adc
xchg
sub
rcr
cmp
dec
or
push
dec
push
adc
pop
or
and
jp
adc
popa
mov
jl
and
or
sub
es
bound
push
cmp
adc
popa
add
inc
xor
iret
xor
and
iret
nop
les
xchg
mov
rcrb
xorl
xor
adc
adc
xchg
adc
add
mov
rclb
adc
and
lock
xchg
inc
icebp
adcb
cld
nop
add
xchg
adc
push
inc
imul
pusha
mov
ds
adc
dec
dec
cmp
scas
add
jae
add
adc
popf
adc
test
or
or
dec
mov
push
scas
cmp
add
sbbb
or
lods
adc
sub
and
mov
mov
or
inc
pop
mov
dec
icebp
enter
sub
dec
mov
jl
or
dec
arpl
fadds
adc
test
xor
inc
rcl
js
mov
mov
test
addr16
inc
out
iret
nop
jl
enter
gs
or
or
sbb
and
mov
mov
fmuls
inc
in
add
adc
ret
das
ss
scas
add
in
daa
push
test
ret
nop
or
lahf
dec
nop
and
and
push
cltd
jo
adc
sbb
jae
sub
stc
repnz
xor
shlb
add
jne
sub
enter
mov
lea
push
cmp
outsl
test
sub
arpl
push
pop
pop
mov
xchg
xor
or
repz
shr
je
scas
lods
push
orb
push
ja
xchg
sbb
add
adc
jge
xchg
jmp
fiadds
push
cld
cwtl
mov
sbb
or
jmp
mov
dec
and
jnp
test
shll
mov
sbb
jle
gs
cli
int
fsts
stos
adc
xor
adc
or
ss
sub
pop
lret
mov
sbb
clc
std
data16
incl
inc
inc
or
mov
aad
and
cld
jge
and
inc
leave
pop
inc
inc
and
mov
lock
mov
mov
xchg
repnz
push
je
mov
cmp
jne
or
popf
jmp
pop
ret
cmp
lds
adc
xchg
mov
inc
or
xchg
dec
or
jbe
mov
in
addr16
and
xor
xor
jnp
adc
and
call
push
jae
das
je
jbe
jns
inc
push
bound
mov
xchg
sarl
cwtl
pop
icebp
popf
sbb
adc
mov
bswap
sti
je
mov
lods
jle
push
imul
repnz
cmp
addr16
rorb
subl
daa
pop
add
or
je
adc
sub
cmpl
and
or
lret
jno
or
xchg
mov
cmp
mov
call
jns
fsubrl
push
stos
gs
mov
adc
mov
mov
mov
add
mov
inc
pop
aaa
sub
nop
lods
or
mov
fbld
push
pop
aad
push
popf
dec
xchg
push
dec
cmp
adc
pushf
add
in
push
xor
sub
and
jb
insl
cmc
sahf
pop
shrl
stos
mov
or
cmp
imul
and
idivl
inc
pop
push
jo
jo
outsl
in
and
sub
adc
test
cmpsl
xor
push
imul
adc
push
and
imul
mov
push
and
or
incb
sbb
imul
mov
add
mov
jns
cmp
adcb
xchg
pop
push
cmp
inc
dec
popa
insl
xchg
and
dec
mov
fstpt
pop
mov
mov
ja
ja
push
insb
mov
pop
inc
lods
sub
xor
push
pop
imul
int
sets
stos
scas
push
add
inc
je
inc
push
pcmpeqb
fstp
gs
mov
dec
dec
sbb
and
lahf
sbb
or
mov
sub
scas
nop
adc
pop
adc
and
pop
rclb
and
dec
lahf
mov
jnp
mov
lcall
xor
adc
sub
outsl
repnz
pushf
in
inc
adc
jp
push
xchg
push
sarb
mov
adc
jns
dec
and
outsl
inc
imul
push
push
fmull
jo
fwait
sbb
and
mov
add
js
or
dec
push
cwtl
and
pop
fisubl
inc
sub
loope
mov
enter
dec
sub
adc
sbb
pop
jmp
test
imul
nop
mov
and
or
cmp
call
cmp
pop
mov
push
out
xor
jl
inc
dec
push
dec
sbb
push
into
inc
push
adc
or
dec
push
sbb
adc
clc
pop
or
dec
dec
xor
xor
adc
dec
dec
jle
je
out
dec
pusha
cwtl
and
inc
push
or
and
mov
js
inc
xor
xor
mov
mov
dec
dec
inc
into
and
lds
jl
inc
std
div
dec
cmpl
dec
mov
fcomip
mov
fs
sbb
xchg
or
sbb
inc
and
sbb
pusha
aas
aas
push
enter
punpcklbw
or
test
pop
loope
push
push
and
cmp
push
enter
cli
dec
test
imul
nop
adc
fwait
jmp
insl
inc
jns
sti
sbb
inc
inc
rep
pop
mov
push
test
cmp
call
jl
fsubs
in
adc
xchg
inc
orb
sarl
sbb
test
or
mov
adc
xor
mov
push
pop
mov
lea
je
jnp
dec
sbb
inc
jmp
mov
inc
or
mov
sbb
sbb
paddd
mov
movb
jmp
or
rorb
inc
pop
mov
mov
addr16
or
rcl
int
fs
pushl
mov
sbb
cs
aam
inc
lahf
push
xor
mov
cmpsl
popa
cmp
cmpl
repnz
or
mov
xor
fstpt
int3
sahf
sub
ret
mov
or
sbb
sahf
lds
ljmp
cli
push
push
sbb
insb
inc
pop
lds
sbb
inc
lret
cmp
xlat
push
into
xchg
adc
lret
mov
loop
mov
movsb
sbb
xchg
out
push
mov
add
or
orb
movsl
movsb
sub
lret
mov
jbe
dec
or
push
or
or
movsb
push
fs
daa
mov
scas
and
push
mov
outsl
sub
adc
movaps
mov
in
sub
sbb
xlat
dec
adc
int3
fld
mov
shll
inc
sbb
cmp
add
fisubrs
push
sbb
add
push
mov
aad
or
adc
xlat
lea
mov
sbb
mov
jge
repz
mov
inc
push
inc
fistpl
nop
loope
mov
sbb
cmp
sbb
loope
xchg
or
daa
mov
loope
sub
push
or
jmp
sub
add
or
or
mov
mov
adc
cs
out
adc
and
cli
loop
movsb
out
cltd
idivb
scas
sub
out
ret
sbb
adc
mov
xor
scas
jb
nop
sub
and
or
push
mov
repnz
add
xchg
in
out
sub
lods
pop
xchg
or
into
jmp
mov
insb
data16
mov
dec
jb
orl
push
sbb
dec
aaa
pop
out
pop
push
inc
negl
scas
sub
dec
mov
push
jo
ficoml
pop
add
add
mov
mov
lcall
and
pop
jmp
repz
mov
mov
push
les
movsl
xchg
jle
inc
add
mov
push
or
inc
xor
push
adc
mov
inc
das
stc
lods
add
mov
add
xor
lahf
push
adc
inc
mov
jecxz
cmp
in
mov
pmulhuw
push
sub
push
cmp
in
adc
bound
pop
es
lock
mov
repz
in
and
aad
inc
int
arpl
into
jne
loopne
loopne
push
clc
jne
rcll
mov
sbb
mov
repnz
xchg
ljmp
sbb
lock
cwtl
scas
shll
in
or
sub
nop
mov
inc
pop
or
hlt
adc
xchg
lods
mov
xchg
cwtl
xchg
sbb
movsb
mov
or
cltd
or
cmovg
inc
or
dec
int3
mov
sarb
enter
nop
ss
js
or
les
sub
inc
push
insl
mov
les
mov
sub
and
push
les
stc
imul
test
push
mov
mov
enter
dec
mov
movb
movsb
js
push
inc
lock
mov
push
lock
rorb
dec
push
into
sub
leave
jnp
popf
es
loop
and
insb
dec
sbb
mov
ss
loope
xchg
cmpsl
in
rolb
sub
jb
je
jmp
adc
lock
sbb
out
jecxz
push
and
pusha
call
mov
gs
stos
and
mov
push
dec
nop
fdiv
shlb
mov
inc
sbb
nop
sbb
or
dec
add
aas
adc
test
popl
sub
push
mov
aas
enter
or
jle
movl
dec
sti
jmp
inc
popl
adc
lds
sub
inc
ss
pop
rorl
divl
mov
mov
int3
iret
das
inc
fwait
cmp
dec
nop
cltd
jl
and
lret
sub
adc
push
jmp
orl
lock
pop
gs
mov
jge
mov
sub
insb
outsl
ret
sbb
test
fisubrl
outsl
adcl
fwait
add
invd
mov
or
or
aam
insb
push
push
fdivl
loop
sahf
xchg
push
pop
rclb
dec
sbb
and
sti
pop
test
pop
adc
jbe
add
cmc
in
lods
jl
pop
cli
inc
inc
cmpb
sub
ja
les
out
dec
sti
icebp
dec
push
dec
sub
ret
adc
dec
and
jg
aam
and
sub
shll
pop
and
adc
stos
lret
scas
cmp
ljmp
push
xchg
pop
mov
mov
clc
rcr
jno
xchg
or
inc
sub
pop
aam
aaa
dec
or
inc
mov
push
xchg
adc
push
inc
mov
mov
xor
jo
jle
leave
in
in
dec
or
scas
cmp
push
pop
in
test
pusha
cltd
mov
push
sub
adc
inc
push
add
push
push
inc
xor
dec
les
pop
push
arpl
or
les
pushw
jae
cltd
sbb
lahf
jae
sub
push
adc
push
mov
cmp
pop
test
add
inc
push
xorb
cmpsl
fwait
push
mov
cmpl
pop
je
js
stos
lds
jl
jne
mov
mov
decl
and
or
and
sti
dec
add
clc
dec
push
bound
push
jge
jmp
mov
das
inc
sbb
outsb
mov
rcrl
mov
js
or
jge
inc
push
push
mov
inc
add
xor
xor
ljmp
lret
push
jns
sahf
dec
sub
push
lcall
sbb
inc
pushf
movsl
mov
sbb
jnp
daa
pop
cmp
mov
sbb
xchg
jg
mov
jbe
insl
mov
fldl
and
enter
rorl
cmp
in
mov
adc
fnstcw
sub
mov
or
lea
jns
push
adc
jnp
lock
fwait
pusha
loop
pop
lds
pop
lods
lods
pushf
inc
pop
xchg
xor
xor
ret
outsl
fsts
enter
cmp
mov
testb
inc
not
and
mov
cmp
je
aaa
mov
mov
dec
sbb
ficoml
push
push
or
hlt
xchg
and
pop
cmp
lock
ret
mulb
call
xor
mov
and
andb
test
loope
incb
lcall
sub
lock
or
shll
jp
xor
je
push
testb
adc
jle
add
pop
daa
or
mov
inc
mov
testb
rorl
add
aaa
or
or
push
pop
out
pop
xchg
cmp
push
inc
xor
addb
sub
subl
or
cli
inc
add
aam
sub
adc
inc
lds
lock
sbb
movsl
xor
retw
push
pop
dec
dec
or
popa
ret
movsl
or
adc
es
push
mov
insb
xchg
div
cwtl
je
adc
cmc
inc
int3
or
add
test
mov
adc
mov
and
inc
and
inc
in
xor
sbb
inc
das
test
or
mov
xchg
rcll
fiaddl
inc
jb
clc
add
jae
dec
out
mov
xor
pushf
scas
mov
in
pusha
std
xchg
ret
lods
pop
sub
test
popa
mov
push
call
push
lret
clc
push
mov
push
sbb
adc
push
xlat
jmp
mov
adc
scas
mov
push
inc
adc
push
inc
pushf
mov
add
add
mov
cmp
js
mov
adc
push
dec
imul
mov
mov
std
arpl
xlat
xchg
jo
push
in
xor
pushl
inc
bound
xchg
scas
adc
icebp
je
xchg
lahf
jno
cltd
hlt
jecxz,pn
inc
lock
les
jae
loope
jnp
dec
gs
mov
rep
cmp
pop
loope
insb
andl
repz
fsts
cwtl
sub
or
pop
psubq
sub
xchg
pop
in
inc
push
aam
sarb
loope
dec
js
adc
mov
adc
into
cli
lods
outsb
mov
mov
call
or
fs
out
fdivrp
jmp
dec
fists
leave
or
cmc
add
mov
loopne
fcompl
shr
je
nop
divb
clc
clc
inc
lahf
call
cmp
sbb
loopne
xchg
xor
sub
adc
lahf
push
orl
push
add
repnz
ret
push
jge
pcmpgtb
mov
push
stos
pusha
cmp
insl
jo
push
sub
and
and
mov
clc
jns
mov
sub
jge
shll
dec
inc
sbb
fbstp
sahf
xchg
lock
push
mov
les
xchg
test
nop
adc
add
jmp
jmp
mov
mov
adc
and
ficompl
sbb
sub
inc
inc
lods
sbb
and
lock
lods
rcrl
jle
mov
aam
mov
test
push
push
and
imul
out
jbe
int
xchg
test
in
popf
das
dec
adcb
pop
punpckhdq
fisttpl
mov
push
pop
testl
ds
push
lea
data16
push
add
mov
mov
or
add
jecxz
fmuls
movb
pop
dec
test
jne
xchg
inc
cltd
filds
and
xchg
cmp
fnstcw
adc
push
mov
add
pop
fcompl
push
push
mov
mov
inc
inc
dec
jne
js
and
jge
sub
mov
pop
push
jae
test
push
xor
lods
in
and
pop
pop
jmp
mov
dec
call
stos
into
rclb
imul
pusha
xchg
adc
outsb
mov
enter
mov
or
dec
jns
jmp
push
xor
mov
leave
jecxz
sub
sbb
or
ret
mov
xor
mov
sti
or
test
cmp
add
cli
and
cld
adc
mov
xchg
sub
push
aad
and
mov
adc
mov
lea
add
or
aas
inc
jecxz
cmp
rolb
jne
dec
inc
lahf
and
add
sub
stos
push
nop
and
movzwl
lea
sub
push
inc
in
insb
sbb
shll
adc
jmp
sub
xchg
into
sbb
sub
fcoml
mov
xlat
js
lea
movsl
push
push
adc
clc
mov
lds
and
andb
add
testl
push
addl
jl
lea
cmpsb
stc
fwait
pushf
or
lret
xlat
outsl
pusha
add
sbb
mov
xchg
and
adc
mov
mov
inc
mov
xor
stos
or
pop
cmp
bound
clc
filds
cltd
dec
cmp
mov
add
outsb
xor
jmp
nop
sub
ret
sarl
out
dec
sbb
in
sub
adc
sub
mov
inc
push
sbb
push
add
call
xor
inc
xchg
add
idivl
out
out
inc
mov
push
push
push
push
imul
and
cmp
inc
dec
push
sti
es
pushf
test
bound
in
pop
mov
je
jne
inc
adc
push
push
push
out
xor
stos
xor
push
mov
imull
sbb
cmp
push
sub
add
dec
lock
xchg
and
imul
or
mov
xor
ret
retw
and
out
push
inc
scas
fs
push
roll
mov
push
inc
push
lock
mov
push
add
inc
hlt
mov
mov
stc
test
mov
xchg
pop
iret
nop
sub
aad
movl
enter
mov
aam
mov
clc
insb
xchg
mov
pop
cld
push
pop
aam
adc
icebp
mov
or
xchg
add
pop
mov
repz
cltd
mov
je
push
imull
mov
jno
lret
adc
mov
ljmp
stc
pop
cltd
push
sbb
out
lcall
cmpsb
cvtdq2ps
int
sbb
inc
lahf
imul
ret
and
sahf
cmp
es
pop
add
icebp
jl
jno
or
mov
test
xchg
jle
cmp
into
ljmp
nop
jne
movsl
mov
aad
fiaddl
stos
rcl
cmp
scas
popa
loopne
outsb
loop
sti
inc
xchg
dec
in
cmp
mov
sbb
aam
dec
xlat
lret
scas
loop
mov
or
sub
push
lahf
lods
push
out
pop
fadds
cmp
shrl
dec
add
dec
push
rcrl
scas
push
call
or
or
in
push
jmp
mov
push
rcl
movsl
xchg
mov
insb
inc
fsubrs
imul
pusha
out
aaa
pop
cltd
pop
adc
or
hlt
push
dec
call
inc
ret
add
jg
add
push
xor
lea
int3
mov
pop
dec
add
call
testl
rcll
or
push
pop
inc
adc
rcrb
pop
lret
lods
pushf
arpl
cltd
pop
sub
push
cli
cmp
add
mov
mov
adc
push
pop
aam
rorl
sbb
enter
jo
and
xchg
fsubr
mov
inc
enter
test
int3
xor
inc
dec
mov
mov
sbb
insl
mov
push
mov
cmp
ret
adc
call
std
sbb
push
mov
lahf
xor
repz
push
test
pop
imul
int3
push
xor
jb
enter
pusha
mov
mov
int3
icebp
lret
mov
mov
test
cmp
daa
push
xchg
outsb
mov
sbb
test
lret
and
nop
mov
mov
adc
scas
mov
mov
inc
xchg
in
scas
fisttpl
sub
leave
mov
jo
adc
fmuls
or
and
cmp
jl
mulb
jb
lods
aad
out
pop
push
and
sbb
dec
push
gs
out
xor
cli
add
inc
jl
xchg
cmp
sub
jle
or
or
imul
mov
mov
movl
push
add
sub
xlat
adc
orl
mov
push
filds
std
push
add
mov
inc
push
and
sbb
and
mov
cmpsl
imull
lods
test
xor
mov
and
add
xchg
jo
dec
adc
and
rorb
inc
int3
enter
adc
dec
adc
das
push
pop
push
sbb
mov
inc
inc
iret
in
rcll
inc
out
push
adc
psubusb
orl
pop
push
adc
xchg
jnp
mov
jmp
rol
mov
dec
mov
xchg
nop
inc
xchg
arpl
daa
ja
mov
push
jo
lds
popf
in
or
test
xchg
insb
xor
out
in
insb
out
xor
xor
push
test
pop
setne
cld
sbb
lods
cltd
pop
aam
sub
or
in
adc
repnz
fcomip
sbb
test
fs
add
nop
enter
pop
gs
adc
xchg
or
and
push
sub
les
pop
or
clc
or
jae
add
fmul
xchg
xor
test
add
stos
adc
and
sub
out
pushf
mov
pop
jb
cmp
clc
push
out
jecxz
stos
cmc
fnstcw
cs
push
in
leave
loopne
aam
jne
mov
cmp
inc
mov
es
shr
adc
test
or
add
pop
xchg
cmp
in
xchg
mov
xchg
movl
fiaddl
popa
sub
add
push
lods
or
add
enter
mov
scas
scas
mov
jl
push
popa
jno
lods
mov
call
fldcw
fcompl
lods
push
cli
fdivr
cmc
in
pop
or
lds
inc
jb
cmp
mov
test
enter
mov
sub
add
pop
inc
adc
lret
adc
stos
fprem
cmp
loopne
cmp
and
ret
jle
push
adc
adc
mov
sub
mov
fisttps
aaa
dec
or
pop
repnz
sub
push
rcrl
cs
fildl
and
push
sbb
mov
lock
cli
dec
mov
inc
dec
push
rorl
add
je
inc
mov
imul
xchg
fisttps
les
js
mov
test
jbe
push
test
std
pop
lret
or
sub
and
push
fdivrl
jne
xor
pusha
jns
test
shl
in
out
jae
sub
jne
push
jno
sub
push
inc
daa
mov
inc
es
out
xchg
mov
or
cmp
jne
mov
ljmp
jbe
dec
lock
mov
inc
mov
inc
jne
hlt
ja
sub
dec
sbb
pop
popf
daa
das
nop
jecxz
and
scas
mov
adcb
adc
ret
push
movsb
jne
push
push
or
stos
jne
mov
mov
pop
sbb
adc
shrl
sbb
pop
shl
push
lret
push
push
pop
jl
mov
jbe
fs
sub
inc
jbe
scas
mov
or
push
and
shlb
js
pop
pusha
ret
or
inc
movsb
dec
inc
cmp
cmp
add
ret
xchg
aam
jmp
enter
adc
pop
dec
jl
sub
inc
sbb
adcl
lods
jo
sti
cs
dec
addb
pop
xchg
cmp
jmp
sarb
pop
js
or
insb
add
mov
adc
repnz
xchg
xchg
mov
or
repnz
in
mov
lods
stos
dec
adc
fdivrp
push
mov
push
aad
test
add
ja
data16
gs
arpl
ret
jo
jb
xchg
out
adc
dec
test
jl
inc
xchg
push
jnp
jl
bound
xchg
inc
sahf
dec
jne
out
xchg
cld
mov
cmp
mov
sub
js
push
and
mov
test
push
insl
mov
add
loop
pop
cli
sbb
sbb
push
clc
adc
adc
add
or
jns
pop
in
leave
jmp
popf
or
mov
sbb
cmp
jl
sub
cmc
push
xor
xchg
dec
push
adc
inc
mov
ljmp
pushl
test
sub
xchg
xchg
clc
lods
cs
sub
adc
sbb
xor
pop
xor
adc
insb
imul
mov
lods
push
xchg
jp
sti
xchg
rolb
es
outsb
or
les
cmp
imul
pop
sub
int3
ljmp
frstor
and
inc
stos
jp
sbb
jb
or
mov
sbb
cmp
test
push
in
xchg
mov
cmpl
jne
movsb
cld
mov
int
push
push
mov
add
pushf
jns
imull
xchg
cmp
dec
outsb
cmp
or
xchg
nop
insl
adc
xchg
pop
mov
je
out
fldenv
and
cmp
or
mov
jge
dec
jmp
mov
lds
and
xor
inc
inc
mov
dec
rorl
fidivrs
xchg
push
dec
jmp
sahf
or
aam
loopne
adc
xorb
and
inc
cld
mov
mov
pop
ljmp
cwtl
adc
out
xchg
repz
test
mov
mov
cld
leave
sarl
add
pop
mov
pop
sti
arpl
adc
cmpsl
xchg
mov
push
adc
nop
sbb
popa
jmp
adc
stos
jge
aad
pop
fistpl
push
mov
test
sub
mov
fimuls
add
rclb
push
sbb
xlat
sbb
push
stc
loopne
jne
data16
mov
adc
pop
pop
mov
push
jmp
fistpl
in
adc
xchg
pop
iretw
mov
pop
jnp
jb
cmp
daa
into
call
and
imul
loop
jg
pop
mov
jnp
int
sbb
dec
pminsw
inc
mov
xor
or
and
int3
push
add
jle
movsl
fidivrl
mov
xor
push
popf
repz
jg
lea
adc
mov
and
sbb
pop
inc
jmp
or
mov
aas
loop
pop
loope
push
rcrb
or
inc
mov
lds
push
mov
lds
sbb
add
jmp
xchg
sbb
fsubrp
add
or
cmp
jo
daa
insl
sbb
scas
mov
cmp
add
mov
or
dec
and
xor
inc
push
push
lods
in
and
push
jne
pop
jae
ds
sbbb
loope
inc
hlt
xchg
fimull
mov
flds
rcl
lcall
insl
in
sub
js
push
cmpsl
xor
xchg
sarb
lock
sub
into
or
lcall
clc
inc
sub
aas
je
mov
adc
adc
add
lret
loop
adc
dec
and
push
push
sub
sub
inc
out
dec
adc
lock
pop
cltd
pop
sub
mov
test
push
or
das
test
cwtl
mov
or
jle
jmp
dec
xchg
jl
inc
fadd
or
push
xor
aad
sub
xchg
pop
push
mov
cmp
rolb
dec
lea
pop
xchg
in
lea
add
adc
push
int
mov
inc
jg
adc
and
adc
loopne
sub
lret
nop
lret
fildll
add
jecxz
cmc
data16
adc
daa
or
add
and
xor
popf
test
lcall
adc
push
jmp
adc
push
mov
fmuls
push
mov
jnp
inc
inc
mov
inc
mov
cmp
push
or
aad
sub
fisttpll
sbb
mov
adc
dec
int
cmp
hlt
sbb
lret
sub
rolb
lock
xor
cmp
or
fnsave
inc
jge
pop
sbb
jmp
pop
ja
adc
inc
arpl
mov
enter
jns
pop
scas
inc
xor
lahf
dec
lret
out
int
daa
push
aam
add
pop
pop
xchg
loop
or
insl
adc
jmp
dec
popf
iret
add
fsubrl
mov
loop
lea
xchg
aam
push
fs
jne
push
mov
shlb
dec
inc
je
mov
outsl
push
lahf
imul
mov
mov
shl
repnz
cmp
data16
sub
mov
popa
add
lods
mov
add
mov
movsl
lds
pop
cld
mov
sbb
inc
mov
xor
mov
jl
pop
sub
out
arpl
mov
lea
push
sub
push
lods
test
or
mov
xchg
or
add
xlat
int
lcall
test
mov
xchg
repnz
out
subl
inc
mov
fildl
fwait
sub
mov
data16
pop
cmc
cmpsl
cs
fldcw
mov
mov
sarw
or
sub
mov
sub
sbb
push
out
push
adc
mov
rorb
mov
into
fstl
daa
inc
jl
call
lea
sti
lahf
dec
fs
push
and
enter
mov
xchg
or
pop
dec
pop
and
push
cli
scas
jg
mov
xchg
clc
aam
jg
cmp
shlb
jno
xchg
xchg
sbb
movsb
sti
mov
out
and
jae
or
rorl
cmp
mov
lods
sbb
ja
add
cwtl
pop
filds
les
xor
push
sub
mov
cmp
mov
loope
sub
adc
push
call
sti
popf
sbb
shrl
and
adc
rclb
rolb
mov
jmp
mov
arpl
test
pop
mov
cmp
sbb
sbb
mov
hlt
jns
cs
and
cmp
mov
pop
adc
std
fidivl
cmp
sbb
or
ds
fstps
and
push
mov
aaa
xchg
ja
push
test
testl
push
xchg
push
cmp
loop
or
fdivrl
push
test
adc
subb
jne
xchg
pop
mov
rcr
dec
fsubs
les
pop
shr
push
push
add
add
fwait
xchg
dec
and
rorl
je
das
enter
sbb
out
dec
or
les
adc
sti
les
aam
and
test
jg
pop
mov
cmpl
insl
xchg
in
mov
mov
jbe
add
or
jle
ret
push
loope
adc
cmc
out
sub
jmp
test
sub
clc
xchg
out
fs
dec
jo
ret
stos
mov
lds
sub
adc
jl
ss
sbb
jnp
ret
out
xor
or
pushf
stos
das
je
mov
sti
push
sub
pop
int3
pop
mov
data16
jmp
imul
pop
adc
adc
lret
outsl
das
add
imul
inc
adc
ljmp
push
pop
mov
pop
inc
mov
mov
fs
dec
or
cmp
das
dec
adc
dec
jae
xchg
dec
sub
push
dec
sub
and
aam
jge
jle
mov
push
cmp
fisubrs
xor
pop
aad
clc
mov
pusha
repz
mov
shr
or
cwtl
jmp
repnz
mov
loope
insb
inc
xchg
dec
xchg
jmp
sub
sti
scas
lret
sbb
jp
push
loope
mov
data16
pop
stos
mov
mov
jns
sbb
and
lods
test
and
test
mov
in
xor
cld
in
adc
sub
adc
aaa
jge
int
out
mov
mov
mov
daa
pop
mov
mov
and
dec
xorl
and
cmp
push
lret
aaa
push
inc
mov
xchg
ret
mov
mov
xchg
push
hlt
popa
pop
decl
cld
test
ret
in
push
lea
nop
jl
fildl
mov
push
push
mov
lds
es
movb
push
inc
push
sub
sub
cmp
sub
sahf
cmpsl
in
push
fidivrl
pop
scas
dec
push
int
inc
push
dec
add
cmpb
addl
xchg
mov
test
lods
test
loopne
aad
cwtl
pop
pop
ficoml
mov
inc
or
ret
push
mov
stc
ds
jnp
call
push
lret
fwait
cmp
out
int3
jbe
scas
jle
nop
dec
jp
mov
rolb
nop
sub
cli
pop
pop
xchg
adc
repnz
sub
addb
adc
cmp
and
pop
orps
pop
jmp
jl
scas
fcoms
adc
lods
xchg
fs
xchg
sub
sub
jae
pusha
ret
icebp
test
xchg
das
mov
repz
nop
xlat
or
inc
sub
jnp
mov
rorl
jne
int3
mov
cmp
std
insb
repnz
jbe
pop
fbld
fsubrl
das
xor
ljmp
mov
or
push
cmp
adc
push
pop
dec
dec
or
inc
pop
adc
stc
repnz
rclb
test
test
xchg
mov
lret
cmp
sti
or
xchg
mov
cmpw
mov
xchg
adc
lea
ror
daa
jle
and
xchg
jp
fidivl
test
dec
push
mov
inc
xchg
test
push
jecxz
inc
shrl
cmp
inc
xchg
adc
mov
frstor
and
add
je
outsb
cmp
and
push
es
jp
aas
pop
out
clc
dec
ret
loopne
adc
loope
sbb
and
adc
in
or
aam
sub
jmp
and
je
or
ficoml
and
adc
adc
inc
jne
add
add
adc
add
sub
lea
scas
xor
or
push
je
push
cmp
sbb
movsl
clc
and
jne
aam
int3
in
push
mov
rolb
enter
jae
adc
cmpsb
cmpsb
push
push
adc
inc
adc
add
mov
fs
pop
es
xchg
jecxz
mov
mov
and
aas
push
call
cli
lcall
or
push
xchg
inc
inc
xchg
xchg
or
dec
orb
clc
adc
inc
xchg
es
push
cmp
push
mov
mov
lahf
sbb
mov
cltd
popa
dec
mov
inc
js
andl
cmp
stos
lret
repz
and
or
sub
out
sub
or
insb
adc
adc
mov
bound
popf
fnstenv
fiaddl
aam
hlt
rcrb
fimull
je
pop
fstl
mov
mov
pop
lahf
into
sub
mov
imul
stc
cmp
sbb
push
das
test
fs
cmp
push
clc
adc
rclb
or
jecxz
push
adc
pop
xchg
sbb
stos
sub
ret
mov
jno
fidivrl
mov
jne
xor
dec
pop
pop
cmp
loope
jne
movsl
out
iret
subb
pop
sub
dec
xor
outsl
les
ja
add
jecxz
test
xchg
and
ror
jmp
in
xchg
movsb
jne
mov
or
lcall
inc
mov
sbb
jl
stc
repnz
js
cmpsb
pop
js
mov
dec
push
xchg
mov
es
push
dec
sub
imul
push
mov
lcall
mov
or
leave
push
mov
nop
leave
adc
imul
mov
ds
es
std
lea
add
mov
loopne
mov
jmp
lahf
push
cmp
cmpsb
xacquire
mov
lcall
inc
dec
sub
outsl
jmp
sbb
fmuls
sub
lahf
add
and
pop
loopne
outsb
leave
cmp
cmpsl
mov
arpl
call
xchg
push
mov
inc
cwtl
gs
cmp
cwtl
dec
pop
lret
in
int3
cmp
or
jecxz
nop
mov
pop
shll
sahf
xchg
sbb
das
hlt
adc
inc
add
xchg
jb
test
js
inc
js
xchg
enter
ret
lods
iret
and
clc
adc
mov
dec
fs
inc
inc
xchg
xchg
aad
out
xor
cs
mov
mov
sub
push
out
rcl
aas
dec
pop
dec
jno
adc
cmp
nop
mov
in
rorl
sub
icebp
loopne
push
outsb
cltd
sub
adc
adc
movsb
cmpsb
mov
lret
call
pop
and
pop
xchg
xchg
mov
mov
in
sub
dec
adc
sub
xor
stc
cmp
jmp
gs
mov
loop
ja
pop
repnz
add
xchg
push
cmpsl
and
cmp
out
movlps
dec
test
call
fisttpl
cmpsb
xor
fwait
jns
insl
dec
bound
mov
mov
push
scas
sbbb
push
adc
sbb
ret
out
pop
xchg
pop
push
cmpsb
or
int
roll
out
lcall
dec
xor
jb
jbe
sbb
jp
mov
inc
sbb
push
ja
push
hlt
lds
xchg
and
dec
sub
ja
cmpb
loope
lods
dec
test
xlat
mov
icebp
repz
adc
sub
addr16
and
leave
cmpsl
adc
xor
mov
and
js
pushf
test
arpl
jg
sbb
loopne
lret
jns
loop
jle
mov
adc
push
adc
cmp
lds
imul
fisubrl
mov
out
mov
pushf
and
dec
cs
sbb
sub
adc
sti
into
stc
dec
cli
sub
movsb
mov
fisttps
mov
jp
and
xchg
bound
out
mov
xor
jbe
clc
push
mov
or
in
mov
je
lahf
pop
jmp
lea
mov
sbb
mov
aad
jmp
out
clc
xchg
inc
mov
cmp
movsl
ds
xchg
adc
popf
jnp
mov
cmp
add
lcall
xor
aad
stos
sub
fcomps
lock
xor
pop
inc
push
add
jg
add
jle
sub
sbb
pop
pusha
in
adc
sbb
scas
fcomps
scas
xor
and
clc
clc
repnz
or
jg
cmp
les
add
mov
jle
and
les
push
shr
pop
adc
pop
outsl
ljmp
imul
aad
cld
jg
mov
dec
sub
pop
jl
xchg
or
add
jae
addr16
push
xor
lds
push
repz
or
int3
stos
xor
dec
sbb
pop
xchg
cmc
xchg
push
bound
in
adc
mov
or
test
mov
push
xchg
in
xor
je
xor
out
and
pop
push
sti
sti
inc
arpl
add
pop
and
jl
shrl
addl
cmp
mov
in
inc
inc
sbb
es
and
push
xor
add
pop
pusha
shr
aaa
push
mov
out
fnsave
jl
fidivrl
bswap
pop
xchg
in
iret
mov
inc
and
mov
dec
mov
cwtl
ja
xchg
inc
fs
mov
push
jge
adc
imul
idivl
adcl
or
imul
pop
jno
les
adc
push
test
sti
test
and
movsl
mov
jae
das
and
int
lods
sub
stos
inc
mov
addl
mov
push
or
dec
mov
inc
cltd
cli
sub
cs
or
and
lea
addr16
pop
aas
or
jno
sbb
push
xor
in
xor
cmp
sbb
xlat
in
mov
enter
arpl
gs
or
repnz
je
ja
adc
jne
mov
push
sbb
or
inc
mov
or
add
repz
pop
sub
mov
jne
push
and
sbb
rcrb
adc
add
movhlps
xchg
xlat
mov
cwtl
mov
lret
xor
rcrl
pop
into
lods
or
cwtl
pop
fwait
mov
jb
js
das
daa
push
fs
and
fs
push
xchg
movsl
sbb
cmp
dec
mov
mov
sub
rcll
rorl
imul
int
outsb
xlat
rclb
or
add
mov
or
or
jno
pop
loope
xchg
sbb
mov
aad
ljmp
es
cmp
dec
jae
bnd
xchg
bound
dec
inc
popa
add
hlt
lock
out
pop
lods
call
pop
imul
lret
push
inc
sar
sub
jmp
outsl
sarb
dec
lcall
loopne
xchg
mov
lcall
sbb
fldl
mov
stc
sahf
sub
and
adc
xor
or
and
imul
mov
push
adc
adc
or
ret
pop
xchg
rcll
xor
popf
or
daa
jns
xchg
push
stc
aad
sub
test
adc
test
imul
push
jne
insl
sub
sub
call
fs
fstl
push
iret
cwtl
mov
push
out
jb
push
xchg
or
loop
loopne
push
sub
imul
cmp
mov
mov
sahf
int
or
adc
cltd
inc
or
inc
xor
cld
dec
mov
push
in
fld
cmp
add
test
ficoml
xor
fwait
inc
jg
push
and
pop
les
sub
and
xchg
mov
inc
dec
je
out
div
dec
out
sub
inc
inc
repz
mov
shrb
pop
xchg
iret
aad
popa
inc
out
movsl
outsb
cmp
push
jo
adc
cmp
lock
int3
outsl
les
mov
ret
lret
jo
adc
ss
leave
adc
daa
jno
mov
fcoml
inc
clc
ror
mov
mov
cmpsl
sahf
scas
lret
jno
xor
repz
dec
leave
mov
cmpsb
push
xor
push
cmc
mov
jbe
inc
psllw
repz
and
les
in
icebp
clc
jecxz
rolb
or
movsl
jp
mov
popa
push
jg
int
fsubp
daa
or
lods
gs
mov
sub
loope
lods
stos
adc
push
orb
inc
dec
sarb
dec
arpl
pop
les
insl
sbb
mov
mov
mov
rcl
adc
ret
sub
jmp
dec
push
xchg
es
call
sub
adc
cmp
or
xchg
test
gs
insb
call
jne
shll
push
sti
inc
push
xchg
adc
adc
add
mov
mov
dec
push
jae
mov
mov
sbb
test
xchg
leave
push
cli
test
xchg
mov
add
push
push
in
nop
add
cmp
fs
in
add
or
je
push
push
test
jne
stos
or
push
icebp
and
push
loop
aaa
sbb
pop
mov
in
or
dec
mov
jbe
and
cmp
ret
xor
lds
xor
mov
test
outsb
pop
in
mov
int
imul
mov
sub
jle
or
sbb
mov
lock
cli
dec
fst
inc
push
in
lret
pop
push
mov
sti
stos
cmp
dec
lahf
jo
add
or
cmp
mov
imul
dec
push
push
in
cmp
das
push
lea
mov
scas
push
mov
add
adc
xchg
aam
leavew
in
inc
and
sub
xchg
sti
test
or
int3
sub
subb
and
sub
push
dec
add
push
int
out
nop
dec
adc
loopne
mov
int
xchg
push
int3
mov
mov
lods
jb
mov
push
sarb
std
and
jns
jp
pop
lret
sub
add
in
movsb
jb
out
xor
xor
sub
and
pop
add
ja
add
push
or
negl
xor
sbb
pop
fwait
dec
cld
fwait
mov
jmp
jp
dec
imul
xchg
fcoms
test
sbb
add
xchg
push
enter
enter
mov
cmpl
mov
or
inc
movsl
fcomps
push
out
fstps
mov
mov
hlt
mov
es
test
and
scas
cwtl
vcvtsi2sd
aam
arpl
cmpl
mov
bound
sub
pop
cmpsb
lcall
inc
mov
jp
sub
jle
push
push
mov
push
out
pop
add
or
jmp
push
push
jecxz
adc
sti
rcrl
sub
fcoms
jmp
sbb
xor
mov
push
pop
xor
outsl
rorb
xor
lods
sub
je
out
out
inc
push
jmp
cmpsl
xor
daa
jge
int3
jo
xchg
mov
scas
xchg
cmpb
mov
jle
and
and
movsb
pop
sbb
cmp
pop
or
mov
push
cmp
test
jne
mov
inc
insl
or
jns
add
and
sbb
ss
xchg
adc
sub
push
dec
push
mov
cmp
mov
jo
int3
sub
lret
inc
jmp
inc
sbb
push
adc
mov
mov
adc
mov
fs
lea
dec
ret
pop
mov
add
jns
shl
loopne
inc
jmp
push
jge
jnp
or
in
adcl
jmp
push
sub
adc
leave
movsb
cs
sub
and
sub
movb
and
push
in
ret
mov
push
push
pop
inc
pop
sbb
mov
lea
xor
das
or
mov
xchg
sahf
pop
mov
cmpsl
push
icebp
int3
or
pop
ret
xchg
shrb
inc
adc
add
jg
repz
dec
shl
inc
add
xlat
xchg
lock
mov
sti
into
movsb
mov
jnp
xchg
inc
xchg
adc
test
mov
cmpsb
insb
mov
sub
scas
sbb
mov
sub
les
je
push
test
sbb
pusha
xor
dec
add
test
cmp
insb
repnz
scas
sbb
or
les
mov
pop
pusha
das
test
pop
push
imul
movsb
ljmp
nop
sbb
add
pop
xor
mov
ret
es
pop
lock
and
xchg
in
push
test
int
mov
cld
out
fmuls
insb
xchg
in
push
xchg
add
pop
jle
jmp
fsubrl
popf
or
sbb
push
lea
js
dec
or
lds
je
xchg
repz
in
and
je
mov
pop
adc
xchg
fmuls
repz
cmp
cwtl
test
pushf
mov
popf
mov
insb
mov
xor
mov
add
xchg
jnp
pop
or
sub
in
sbb
xchg
cmpl
rorl
jnp
mov
cmp
inc
and
mov
cmp
push
ss
pop
and
push
sub
rclb
jp
or
jge
or
fisubrs
mov
cmp
pop
aam
pop
sbb
popa
pop
aad
or
rcrb
inc
mov
daa
cmpsb
xchg
out
push
test
pop
mov
inc
xchg
or
nop
xor
pop
int3
dec
js
xchg
pop
dec
push
pop
mov
sbb
or
mov
and
sub
adcl
and
and
mov
test
rclb
je
cmp
cmp
jo
loopne
mov
sub
push
and
push
inc
or
add
bnd
jge
rclb
in
cmp
or
out
inc
add
shll
aam
xchg
sub
fsubs
jecxz
push
jbe
push
fucomip
bound
mov
bound
jmp
cmp
add
es
xchg
lcall
hlt
daa
pop
jmp
mov
fidivl
push
pushf
mov
ret
push
lods
or
movb
add
mov
add
mov
xchg
out
loop
fbstp
push
mov
mov
mov
sbb
sti
xchg
inc
not
inc
dec
imul
or
sub
dec
stos
cmp
jp
mov
mov
mov
les
out
mov
push
fxch
inc
test
mov
cmp
push
aas
jp
cmpb
and
sub
dec
stos
fbstp
jp
adc
push
out
fs
or
dec
hlt
push
hlt
mov
inc
and
xchg
pop
xchg
mov
push
xor
repz
dec
mov
add
jg,pt
sbb
mov
jmp
mov
pop
imull
cli
push
femms
jbe
xchg
in
push
movzwl
inc
cmp
xor
sarb
daa
dec
lods
and
hlt
xor
add
jne
inc
xor
sbb
adc
cmp
dec
xorb
icebp
and
push
mov
dec
outsb
cli
mov
xor
rorb
adc
adc
imul
outsb
sub
sahf
in
cmp
pop
sub
int3
mov
xchg
int3
and
inc
push
lea
clc
mov
test
out
cwtl
sti
mov
dec
or
pop
and
push
push
dec
mov
inc
bnd
or
and
pop
movsb
fmuls
push
fcomip
cmp
xchg
test
mov
dec
and
jns
jecxz
lock
xor
mov
inc
xchg
mov
sub
std
xchg
js
jg
les
jecxz
sar
mov
pusha
push
mov
mov
mov
or
daa
nop
dec
pop
add
and
dec
mov
popa
mov
aam
or
mov
ds
aam
test
mov
dec
hlt
les
add
add
pop
and
xor
ret
jbe
cmp
push
je
pop
or
mov
sti
add
add
addr16
mov
add
jne
mov
mov
movsl
add
or
push
cld
add
mov
cmpsb
inc
push
subb
push
outsl
adcl
scas
bound
cmp
or
and
push
movb
pop
je
pop
cmp
gs
sub
mov
std
pop
pop
xor
sarl
daa
scas
fidivrs
sarb
or
adc
cmp
jne
ljmp
push
repnz
bound
cmp
pop
es
push
xor
jae
ret
lret
and
enter
inc
jmp
fiadds
pop
mov
mov
insl
popf
outsb
lods
push
mov
rolb
fimull
jnp
and
mov
movsl
aaa
inc
cmp
pop
jg
xchg
sub
pop
dec
mov
adc
mov
es
aad
scas
les
sbb
dec
push
or
sub
push
out
mov
ja
out
in
mov
fldt
and
add
incb
and
jg
add
cmp
jne
mov
decl
aaa
push
add
sti
or
jbe
decb
lods
push
xchg
test
test
stos
pop
mov
dec
shlb
test
mov
pop
hlt
in
mov
mov
mov
cli
cmp
jne
out
in
jmp
in
push
and
das
fsubs
ret
stos
or
shlb
mov
js
cs
cmp
mov
daa
jne
sub
sbb
and
xchg
sub
mov
fistps
jb
mov
nop
fs
int
imul
adc
fisttpll
add
mov
adc
std
mov
fistps
xor
adc
mov
inc
inc
jbe
sti
lods
add
adc
or
enter
mov
dec
or
test
and
push
cmp
xchg
and
lods
andb
sub
mov
das
xor
and
cmp
mov
inc
mov
xor
test
pop
lcall
sub
mov
mov
das
ja
xor
mov
and
xor
ja
mov
sbb
xchg
pushf
inc
sbb
prefetch
scas
or
arpl
and
xchg
cld
cmpxchg
pop
shll
mov
lods
sub
or
or
je
aad
popf
jge
mov
mov
xor
xor
adc
inc
jne
outsl
insl
inc
sbb
aad
ficoms
mov
dec
push
js
cmp
repnz
sbb
in
inc
sbb
jns
adc
das
imul
fdivrs
add
inc
or
in
xchg
push
enter
jno
adc
sub
xlat
sbb
inc
imul
cmp
cmp
sarl
sar
jle
mov
andps
inc
js
or
dec
call
out
and
and
push
test
or
push
inc
out
rcl
mov
add
popa
fstpt
fisttps
mov
int3
push
jns
xor
dec
imul
adc
xchg
mov
mov
mov
popa
push
inc
lds
cmp
or
lods
ret
jmp
jo
and
xor
adc
test
nop
dec
jno
repnz
pop
adc
mov
stc
dec
mov
pop
cli
call
xchg
adc
adc
outsl
lods
mov
push
mov
push
pop
mov
or
push
cmpl
adc
adc
mov
xlat
sub
sub
jno
pop
push
add
jno
inc
and
mov
pop
daa
sti
fucomp
imul
test
rorb
jge
or
clc
mov
inc
push
movsl
jl
sub
fistps
add
repz
xchg
sarb
inc
subb
movups
sbb
inc
cmp
sub
mov
repnz
addl
mov
call
call
jmp
into
scas
mov
cld
mov
xchg
lock
nop
lds
and
dec
and
pop
push
dec
mov
and
hlt
js
es
rorl
mov
js
dec
pop
test
enter
shlb
xchg
dec
mov
dec
in
inc
jmp
xlat
das
jle
add
sbb
adc
sbb
xchg
inc
and
in
es
sub
jne
mov
repnz
mov
mov
addb
stc
sub
push
testb
jne
test
mov
xchg
aam
aam
data16
push
or
movsb
inc
lret
mov
hlt
sbb
and
test
mov
lea
psubw
jg
xor
addr16
jne
fistps
add
or
mov
push
cmc
adc
push
sbb
push
adc
les
pop
pushf
cmp
xchg
adc
push
sub
aam
sub
or
gs
test
out
xchg
stos
mov
xchg
stos
mov
xchg
inc
enter
mov
and
repz
addr16
dec
jne
stos
fildl
mov
push
dec
test
leave
data16
rcrl
or
into
and
pop
ret
imul
inc
loopne
pushf
enter
adc
add
inc
bound
fnsave
mov
xchg
sbb
jb
icebp
test
loopne
fnstcw
lret
fwait
popa
out
push
push
mov
shrl
adc
push
dec
adc
ret
xchg
fs
daa
inc
sbb
scas
xchg
sub
push
jne
inc
dec
sub
sub
mov
mul
or
add
mov
stos
inc
cmp
xor
dec
pop
and
dec
andb
fwait
sbb
in
xor
fdivs
cmc
xchg
sti
popf
jns
ljmp
addr16
mov
dec
dec
xor
add
mov
add
mov
int
dec
lahf
movsl
out
xchg
lcall
pop
cmp
cli
out
lcall
dec
gs
mov
int3
adcb
std
or
in
xor
lock
enter
in
inc
xchg
inc
cmpsl
push
loopne
out
jmp
popa
pop
jg
or
fldenv
lret
xlat
push
out
loopne
shll
popa
push
mov
int3
adc
pop
bound
outsl
dec
lock
push
lret
dec
push
cltd
imul
cmpsb
adc
pusha
jne
mov
jmp
fwait
and
inc
cmp
inc
dec
push
lds
or
pop
in
cmpsb
aad
pop
into
ljmp
adc
pushf
and
or
test
push
xchg
jg
jno
negl
lret
test
mov
imul
mov
sub
or
cmp
xchg
adc
sbb
mov
test
mov
mov
fwait
mov
push
mov
mov
int3
jp
js
xor
sub
lock
inc
and
test
fdivrs
mov
ret
call
push
inc
int
sub
inc
imul
ret
and
int
cld
lcall
lcall
push
aad
xchg
lods
mov
or
data16
enter
adc
sbbl
mov
sti
movl
fstpt
mov
inc
or
push
or
sbb
or
fdivl
lods
mov
jae
xchg
cli
stos
mov
jns
pop
pop
sbb
into
cmp
or
setae
jb
push
push
sub
push
jg
xchg
sbb
outsb
mov
jle
lcall
shrb
cwtl
shll
pop
mov
adc
jae
addr16
mov
push
iret
xor
adc
decl
test
jno
sbb
xor
leave
lods
jbe
pusha
call
adcl
lods
nop
scas
and
xchg
sbb
sahf
test
push
adc
out
xchg
scas
jno
cmp
xchg
sub
das
jge
inc
loopne
or
or
push
push
call
dec
xchg
test
push
sub
adc
test
mov
inc
sarb
fadds
das
pusha
mov
dec
notb
push
mov
std
or
rolb
push
and
sahf
mov
jmp
insb
mov
test
enter
or
adc
les
ja
rorb
and
fs
sub
inc
cltd
popf
pop
xchg
add
incl
inc
out
call
push
add
push
or
pop
aas
inc
gs
cli
and
push
xor
jo
ja
cmp
inc
outsb
pop
or
pop
in
and
test
ja
push
or
push
aad
fs
out
nop
mov
adc
jne
in
inc
lds
mov
xor
and
rclb
or
mov
out
or
cld
jg
dec
add
xchg
xchg
aam
sbb
add
sub
mov
adc
sbb
xor
sbb
cmp
push
in
jle
call
in
movsb
push
push
lock
and
adc
mov
into
adc
mov
inc
or
xor
sbb
inc
sbb
sbb
and
sub
xor
xor
inc
cmp
cmp
inc
lahf
arpl
dec
mov
bound
sbb
pusha
and
mov
bound
sbb
andb
adc
bound
scas
enter
lods
test
dec
jnp
cmp
mov
and
les
cmpl
lods
arpl
add
mov
jle
mov
inc
jo
repnz
mov
adcb
mov
sbb
mov
in
xor
cmp
lock
mov
push
inc
clc
and
inc
cld
daa
mov
clts
or
inc
cld
cmpsl
and
add
adc
fptan
or
sub
and
inc
mov
inc
push
push
mov
inc
js
sbb
inc
mov
push
mov
inc
shrb
test
mov
inc
in
push
xchg
cmp
and
adc
xor
inc
or
xor
dec
and
and
or
push
mov
lea
pop
mov
inc
fs
dec
rorb
rcr
and
adc
and
sub
jl
cmp
and
adc
mov
mov
nop
test
mov
inc
hlt
mov
sub
pop
in
lret
fwait
push
xorb
sbb
gs
movsl
nop
jecxz
jo
outsb
push
push
push
ds
pop
stos
push
jle
mov
jb
ja
pmaxsw
scas
xor
mov
out
sbb
mov
push
mov
push
popa
jb
pop
push
xchg
adc
mov
inc
repnz
fnsave
aas
adc
ja
fneni(8087
dec
icebp
mov
enter
negb
test
mov
cmp
inc
andl
adc
inc
inc
push
sub
jno
jns
jl
jae
inc
sbb
sbb
dec
mov
fs
adc
mov
outsl
inc
clc
xchg
icebp
push
enter
pop
repnz
call
cld
inc
adc
dec
movsl
sbb
jae
fs
in
pop
inc
push
sub
fsts
push
add
mov
push
cmp
dec
test
mov
adc
jmp
xlat
sbb
inc
out
inc
adc
not
adc
das
inc
adc
mov
mov
cmpsl
adc
jge
cmp
shlb
inc
mov
jne
jb
and
nop
sbb
and
fs
and
adcb
mov
inc
dec
jle
inc
pop
sbb
rolb
jmp
jno
dec
test
push
xor
lcall
cwtl
cli
jbe
sbb
adc
aaa
or
imul
inc
add
xor
je
push
xor
dec
rorb
fcmovnb
add
repnz
adc
mov
imul
mov
cli
or
add
cmp
and
in
repz
enter
fidivrl
stc
je
stc
sub
mov
cmp
fstl
sbb
xor
loop
xor
cmp
enter
or
mov
adc
cmp
movsl
adc
or
sub
mov
mov
inc
push
jl
stc
or
dec
lahf
and
rorb
pop
push
adc
lods
mov
pop
sbb
int3
sub
adc
addb
int3
sub
or
ret
inc
inc
or
xchg
rcll
les
iret
pusha
mov
incb
xor
adc
xchg
push
aad
call
or
pop
inc
pop
testl
sub
push
or
shlb
dec
or
cs
out
rolb
dec
outsb
xchg
inc
add
push
pop
and
xlat
sbb
inc
icebp
inc
fsubl
and
add
dec
les
push
mov
inc
xlat
lds
outsb
dec
and
sbb
pop
adc
or
cmp
sbbl
pop
mov
js
jle
add
or
xchg
scas
testb
jnp
scas
pop
pop
mov
std
push
fistps
cs
xor
push
test
or
xor
dec
sub
test
xchg
out
lods
pop
push
rcrl
or
stos
jl
mov
or
adc
push
movsb
out
sub
test
mov
cmpsb
xor
enter
sbb
mov
aam
xor
inc
cmp
je
push
call
push
xchg
pop
clc
or
rcrb
pop
iret
adc
adc
ja
xchg
pop
push
data16
and
cmpsl
push
sub
fimuls
icebp
loopne
clc
mov
push
repnz
sub
shl
insb
inc
fisttpl
loop
insl
incb
and
sub
lods
icebp
dec
outsb
setnp
lods
das
lds
imul
add
fildll
lods
shlb
dec
test
mov
mov
and
push
or
jo
dec
int3
addr16
rol
lea
mov
or
cmp
jne
test
and
push
adc
xor
xor
scas
cmpsb
ja
sti
fs
add
or
out
jbe
inc
clc
loope
cmp
push
jecxz
test
loop
cld
add
cs
inc
xor
rcrb
fadd
xor
out
sub
popa
ret
lcall
xor
add
adc
or
and
int
sbb
dec
jo
cmp
xor
xor
or
enter
outsb
lret
lea
or
add
sbb
orl
add
or
dec
adc
adc
hlt
sbb
sbb
shlb
loope
pop
in
mov
jno
and
or
mov
xor
clc
in
add
mov
addl
xor
or
repnz
xor
or
pusha
cld
lock
sub
mov
gs
popa
addr16
dec
inc
pop
cmpsl
adc
xchg
push
pop
mov
idivb
sub
push
inc
les
sarl
fstl
mov
je
std
in
int
adc
loopne
and
repz
add
imul
es
sub
je
icebp
xor
test
sbb
cmp
xchg
pop
ds
add
aaa
iret
test
push
flds
sbb
stos
mov
aaa
mov
out
imul
xchg
js
mov
fninit
dec
in
jne
mov
mov
dec
mov
cli
cwtl
cmpsb
inc
pop
push
push
mov
gs
nop
in
add
stos
popa
push
rol
fsubp
sub
pop
scas
jno
rcrl
loop
jge
jae
jbe
movl
popa
in
mov
and
push
mov
and
inc
mov
push
cmp
shl
or
push
ret
lods
pop
imul
std
out
test
mov
out
add
or
add
es
cltd
das
std
pushf
nop
adc
add
mov
sub
push
pop
mov
inc
xchg
std
adc
add
pop
enter
push
pop
inc
adc
lret
call
pop
sbb
push
add
loope
sbb
xchg
icebp
mov
add
clc
pop
cli
xchg
jg
adc
scas
mov
adc
sbb
rorb
push
push
and
call
mov
aam
outsl
sub
pushf
adc
or
add
adc
pop
movsl
inc
jle,pn
mov
mov
mov
enter
adc
sub
and
aam
fcoms
fdivl
loopne
xchg
mov
inc
aam
andl
js
out
pop
mov
cmp
in
or
xlat
jno
jns
and
xor
dec
fdivl
and
or
sbb
aas
pop
xlat
dec
sbb
outsl
sub
dec
dec
aad
xchg
daa
fsubp
pop
arpl
or
outsb
mov
inc
bound
inc
push
test
cmp
xor
inc
gs
inc
insb
mov
clc
sbb
outsl
push
lret
or
or
ret
mov
scas
pop
push
sub
nop
xchg
int3
inc
icebp
add
cbtw
add
mov
jnp
or
or
or
lods
loope
add
xlat
stos
mov
sub
xor
sbb
adc
pop
cwtl
cmp
int
push
xor
push
hlt
adc
subb
or
mov
sbb
or
xor
pusha
ja
jg
scas
ss
rcrb
push
push
adc
in
cmp
xor
cs
mov
xor
pusha
fstpt
movl
ja
pop
and
shlb
loopne,pt
dec
pop
lods
sahf
mov
dec
mov
ds
pop
or
push
sbb
pushf
into
cs
mov
stos
fldenv
mov
rorb
fs
push
mov
stc
sub
subb
add
add
cwtl
cmp
dec
shrd
dec
pop
jae
push
cmpsb
lret
movsl
push
sub
adc
add
or
daa
pop
xchg
xchg
push
and
cmpsb
jae
sub
mov
mov
or
pcmpeqw
push
js
sub
cmp
and
mov
aaa
pop
sub
inc
in
mov
adc
and
loop
push
add
inc
inc
mov
mov
adc
ljmp
add
outsl
leave
in
fnstsw
mov
sahf
push
jnp
nop
or
add
aam
push
fsubl
in
shl
sbb
ljmp
dec
cmc
xchg
sub
mov
or
dec
fld
adc
std
stc
and
mov
cwtl
out
lahf
add
mov
arpl
pop
jmp
push
inc
pushf
and
insl
daa
lods
push
sbb
adc
std
dec
cmc
mov
or
mov
sahf
and
and
mov
push
add
push
or
cmpb
imul
ret
imul
push
and
mov
ret
pop
mov
inc
inc
mov
clc
xrelease
cwtl
fs
arpl
adc
xchg
dec
push
mov
mov
adc
dec
sub
xchg
sub
cwtl
call
and
enter
out
xchg
jle
fidivl
adc
fs
dec
stos
mov
test
mov
rcrb
xor
xchg
fwait
mov
or
cmp
push
mov
add
adc
pcmpgtd
adc
add
and
cmp
dec
ret
fxch
enter
jns
mov
mov
lds
sub
dec
push
hlt
sbb
mov
loope
and
push
popf
lret
sub
adc
orb
add
pop
ret
jne
inc
sahf
sbb
pop
ret
pusha
jle
mov
aam
inc
xchg
or
push
fdivr
outsb
in
mov
add
and
or
jne
sbb
and
mov
cmpsb
rol
sub
in
inc
mov
or
pop
cmc
xor
inc
add
and
fdivrl
adc
xchg
or
or
call
mov
mov
std
mov
pop
adc
mov
adc
neg
mov
out
nop
int
adc
inc
fdivs
inc
inc
or
shrl
negb
sbb
jge
inc
dec
add
mov
in
in
mov
test
mov
std
adc
les
leave
dec
lret
jg
add
adc
push
inc
cmpsb
mov
push
xlat
pop
ret
and
pop
aad
push
jecxz
push
neg
inc
dec
pmulhuw
pop
adc
stos
aam
stos
rol
xor
sub
pop
ret
sub
xor
dec
iret
cs
fimull
or
push
inc
popa
andb
lock
fs
pop
fs
addr16
push
test
test
popa
arpl
push
push
in
pop
jns
je
and
add
test
leave
jo
lds
movsl
sbb
sbb
rorl
and
pusha
sub
xchg
pop
adc
sbb
push
mov
mov
in
fs
pop
adc
pushf
and
test
cld
xlat
push
inc
insb
xor
sbb
lcall
sbb
adc
data16
cmp
hlt
mov
inc
popa
mov
pop
imul
inc
inc
nop
sbbl
mov
jmp
jne
xchg
loope
mov
sub
mov
pop
or
xlat
and
add
out
shll
or
mov
xor
fildll
or
push
daa
jno
loop
or
or
or
inc
insb
jle
repnz
arpl
xbegin
jae
icebp
jae
lock
rcrb
psubq
repz
dec
cmp
add
cmp
mov
and
xchg
loop
sbb
inc
adc
sbb
or
mov
cmp
js
inc
add
ss
xor
mov
insb
and
mov
push
adc
sub
cmp
orb
int3
jmp
add
mov
adc
add
or
fisubrl
fs
dec
push
test
push
pop
or
inc
cmp
pop
pop
pop
and
int
xchg
pop
pop
test
mov
or
inc
add
clc
aam
inc
popa
sub
and
adc
scas
inc
outsb
arpl
jb
and
xor
add
je
or
and
jp
cmp
xchg
or
out
mov
fwait
pop
daa
out
adc
and
int3
roll
mov
xor
adc
adc
in
push
fidivrs
mov
push
inc
lcall
lods
mov
je
push
dec
out
fstl
icebp
dec
test
aaa
xchg
fst
jnp
dec
lcall
or
push
leave
pop
dec
mov
xor
xchg
adc
xchg
daa
mov
jo
cmp
inc
sbb
dec
mov
push
inc
shlb
and
pop
es
shl
pop
add
jae
movsl
roll
or
pop
sbb
dec
mov
jo
and
enter
sub
adc
sbb
or
xlat
aaa
dec
lock
dec
and
cmp
xor
xchg
or
jae
sbb
or
fs
mov
mov
sbb
mov
sbb
rolb
ja
aam
fsubrs
xchg
repnz
push
rorb
xchg
inc
dec
loopne
movsb
jl
loopne
mov
dec
push
mov
test
mov
test
movsb
jl
movsl
and
push
lock
mulb
xor
or
add
sub
jge
subb
in
or
cmp
adc
in
test
call
inc
daa
divl
lods
adc
pop
dec
cmovns
pusha
push
xchg
and
das
les
sub
mov
pop
mov
lahf
pop
or
xor
add
push
pop
addr16
xchg
add
sahf
test
fcmove
lcall
adc
scas
and
push
push
xchg
mov
sbb
jne
repnz
int
inc
adc
sahf
adc
jecxz
dec
lock
xor
and
es
sub
pop
or
cli
in
mov
jge
stos
jo
add
jb
cld
mov
popf
mov
push
sbb
xor
jl
mov
pop
pop
pop
inc
into
bound
add
jnp
xchg
cli
rcrl
daa
pop
sbb
sbb
scas
dec
pop
and
inc
push
pop
inc
pop
inc
cwtl
mov
push
or
or
pop
and
push
pop
inc
pop
in
adc
and
mov
or
cmp
dec
cmp
out
lcall
mov
and
jbe
sub
sub
mov
int3
shll
jecxz
sbb
or
popa
hlt
sti
fistps
rorb
pop
pop
nop
mov
mov
cwtl
xor
xor
pop
or
movsl
rcll
dec
je
adc
sbb
je
sahf
orl
ffree
lret
or
hlt
test
outsb
and
sub
inc
push
dec
insb
fs
in
rol
mov
or
les
or
push
xor
dec
aam
cmpsb
or
jmp
sbb
popa
push
scas
fdivrs
or
push
push
or
or
mov
addr16
mov
xlat
pop
cmp
test
nop
fdivr
outsl
or
and
adc
cltd
sbb
inc
ret
test
fiadds
lahf
adc
mov
xchg
mov
pusha
mov
xchg
les
cmpsb
imul
adc
or
frstor
xchg
rclb
and
xchg
testb
dec
and
jbe
add
in
in
popa
insb
and
lcall
jl
lock
adc
cld
incl
ret
or
push
and
add
jmp
inc
cwtl
push
and
and
pusha
iret
xor
adc
jl
test
adc
cmp
push
lea
xor
icebp
inc
adc
mov
push
das
enter
sbb
mov
arpl
xchg
mov
cld
clc
mov
sbb
pop
cmp
cld
popf
adc
hlt
lret
pushf
mov
or
es
leave
bound
or
push
out
nop
hlt
mov
adc
xor
adc
jo
dec
or
out
or
std
add
pop
cld
jecxz
mov
pop
xor
shl
push
inc
or
xchg
cmc
scas
push
rcr
cmp
inc
and
cmp
call
adc
inc
mov
add
fsubs
repz
popl
ss
cld
inc
dec
adc
cmovge
cli
nop
in
imull
clc
int
push
pusha
jnp
sub
das
inc
adc
adc
or
jb
push
sbb
sbb
cs
push
incl
inc
add
jg
inc
and
sub
or
cmp
fs
fdivrs
mov
arpl
adc
add
les
mov
out
lahf
or
adc
daa
jge
ljmp
out
mov
sub
mov
insb
push
hlt
mov
int
add
mov
pop
mov
cmp
inc
dec
mov
xchg
or
push
pop
mov
pusha
js
push
xchg
inc
xchg
inc
lret
movsl
iret
cmc
insb
dec
or
xchg
daa
inc
mov
adc
scas
aaa
push
mov
iret
loope
dec
sub
loop
push
imul
sub
add
sbb
out
jle
jmp
rol
mov
xchg
jo
sub
je
into
or
test
mov
jl
gs
mov
and
js
hlt
jg
inc
aad
rol
lahf
jg
push
mov
or
jb
mov
sbb
pop
add
shll
testl
jmp
movsl
sbb
rolb
push
sar
push
cmp
mov
push
or
inc
mov
push
incb
fisubs
mov
imul
and
xchg
int
je
mov
jle
xor
dec
hlt
xchg
cmp
and
movsb
push
mov
cmp
inc
adc
aaa
les
inc
cmpsb
and
aas
mov
arpl
pop
xor
mov
das
stos
dec
xor
mov
repnz
stos
loop
enter
inc
call
inc
cmp
dec
inc
push
je
inc
or
popf
adc
adc
jnp
and
xorb
adc
or
test
and
or
mov
pop
sbb
je
test
jle
jbe
cmp
aaa
fstpt
inc
adc
adc
stc
fstpl
fwait
cmp
sbb
mov
fwait
faddl
adc
or
arpl
fmull
lock
movsl
adc
sbb
pop
daa
subb
outsb
adc
pop
loope
pusha
cmpsb
jge
xchg
mov
mov
rclb
adc
push
cli
push
shlb
sub
call
cld
out
inc
movsl
sbb
je
mov
addr16
jmp
pop
mov
dec
outsl
cmpsb
push
adc
dec
iret
jmp
sbb
cmpb
sti
enter
imul
xchg
cli
push
inc
cmp
and
mov
add
push
in
mov
pop
sahf
or
popf
mov
dec
jp
arpl
nop
pop
movsb
lret
in
ja
sub
aad
test
jo
or
add
jns
inc
sbb
jne
jae
jp
outsl
cmpb
imul
pop
add
call
add
mov
inc
scas
xchg
addl
mov
pop
jl
lea
add
or
push
push
adc
pop
or
pop
add
ret
pop
cli
clc
enter
mov
adc
and
test
add
arpl
or
mov
mov
add
jns
xchg
xlat
mov
inc
je
lret
mov
es
cmp
or
add
das
sti
dec
ret
xchg
pop
arpl
and
mov
sbb
js
cmpsl
xlat
xchg
mov
add
bound
fs
pop
sub
gs
sub
inc
repnz
or
cmp
cli
xchg
insb
pushf
sub
jmp
cmp
mov
fisttpll
sti
inc
sbb
clc
dec
ja
leave
jne
lahf
pop
push
daa
jg
aam
dec
jmp
and
cmp
cli
push
enter
dec
dec
or
push
or
fs
add
setbe
jl
sbb
xchg
lods
enter
sbb
jne
xchg
lahf
jbe
dec
dec
cmpsl
dec
pushf
add
jl
xchg
lock
gs
add
xchg
pop
ds
subl
jmp
add
or
xor
push
xor
stc
inc
imul
adc
mov
jo,pt
push
imul
sbb
imul
test
inc
pop
inc
push
inc
imul
inc
cmp
or
clc
movsl
dec
xor
stos
rol
push
fadds
movsl
aaa
rorl
fiaddl
insb
mov
add
pop
sbb
fimull
in
fmull
inc
or
outsl
xchg
outsb
fs
jmp
push
lcall
imul
inc
inc
rolb
mov
sarb
idivl
clc
dec
xor
inc
fdivs
pop
push
lea
dec
stc
xor
scas
repnz
fsubrp
mov
sbbl
dec
mov
inc
push
ljmp
dec
push
or
jecxz
mov
insl
ret
mov
and
push
notl
or
jnp
ret
jo
movsl
stos
enter
and
aam
push
iret
mov
jne
jne
inc
nop
xor
push
hlt
adc
jmp
mov
test
mov
and
xchg
test
or
mov
xchg
and
and
or
insb
fs
jmp
and
or
cmpsl
dec
pop
push
pop
push
sub
sbbl
clc
xchg
add
das
mov
aaa
mov
cmp
call
xor
sub
xor
xchg
push
push
cltd
or
sbb
sub
cmp
pop
add
hlt
fs
sub
push
dec
push
insb
orl
ds
pop
fwait
mov
enter
jmp
push
ficompl
call
pop
cs
cmp
nop
and
js
pop
dec
add
inc
dec
scas
cmpsb
aad
sbb
movsb
jmp
enter
add
dec
ds
ficoml
push
push
jae
mov
iret
xor
cld
cld
mov
cmpsl
add
popf
stos
outsl
xlat
dec
test
jo
cmp
dec
aas
inc
pop
jb
cmp
negb
insl
pop
test
sbb
xchg
push
xor
jmp
cmc
test
in
add
sub
sub
inc
cmp
and
jae
sahf
fs
inc
cmpb
cmp
sbb
sub
push
and
rclb
cld
mov
inc
mov
dec
lret
movsb
add
mov
jnp
data16
mov
mov
mov
dec
lret
pop
lods
dec
dec
push
sub
cmp
cmp
adc
lahf
cld
in
adc
leave
sub
mov
fldl
xchg
push
push
pop
inc
sbb
leave
adc
shlb
sar
push
mov
sub
push
push
ja
xchg
and
pop
pop
push
sub
sbb
push
cmp
mov
shl
or
sbb
pop
scas
test
or
add
pop
leave
pop
into
xchg
xor
push
push
or
pop
and
insl
cmp
inc
adc
sbb
movsl
les
adc
add
andl
mov
and
cld
aad
mov
sahf
fs
icebp
enter
jo
push
lret
movb
negb
adc
xchg
cmpb
movl
hlt
enter
fdivl
adc
dec
push
cltd
mov
ret
jge
fcmovnu
dec
mov
push
jmp
mov
dec
enter
je
add
adc
movlps
xchg
adc
dec
sarl
adc
shrb
lds
je
hlt
sub
mov
xor
aas
lock
jmp
test
and
sub
add
xor
pop
test
hlt
cmp
xlat
pop
mull
addr16
in
mov
mov
adc
dec
cmp
sub
push
adc
inc
or
test
pop
xor
pop
mov
shl
dec
ss
adc
fcmovne
xchg
ret
inc
call
adc
lods
and
repz
adcl
mov
mov
mov
bound
xchg
sbb
inc
sbb
enter
inc
dec
mov
or
and
clc
adc
icebp
cmp
mov
pusha
ja
int
repz
inc
mov
mov
push
push
mov
pop
sub
adc
or
sub
imul
ret
inc
lcall
pop
or
inc
sbb
clc
push
and
test
and
mov
daa
stc
push
dec
push
jmp
adc
stos
cltd
adc
sub
mov
xor
mov
dec
cmp
sbb
adc
xchg
cmp
mov
arpl
sub
inc
adc
xchg
andl
mov
les
sub
sbb
rcrl
rclb
fsubrl
cs
xchg
pop
stos
int3
cmpb
ret
sarl
fwait
adc
mov
inc
popf
ja
mov
jo
xor
subb
inc
pop
or
enter
jne
or
and
mov
push
mov
dec
mov
push
lock
jmp
or
sbb
adc
into
add
xchg
pop
jecxz
dec
add
dec
inc
loop
sub
aad
movsl
mov
dec
xor
mov
in
pop
pop
jle
jmp
arpl
daa
outsl
adc
nop
dec
xor
nop
dec
sub
mov
dec
popf
rorl
outsl
or
pop
les
cli
jp
outsb
shlb
movsl
mov
in
gs
sub
pop
punpckldq
arpl
lret
xlat
sbb
call
mov
dec
lods
sbb
jmp
stos
lgs
movb
fistl
and
fstl
adcb
dec
or
inc
adc
enter
jb
cmp
sbb
mov
and
xchg
pop
fsubl
xchg
add
add
add
cmp
pop
and
xchg
or
or
or
cmp
movups
decb
repz
sbb
mov
and
xchg
clc
enter
jb
cmp
sbb
mov
sbb
mov
and
dec
das
jl
sub
mov
icebp
inc
xchg
adc
adc
nop
pop
and
inc
outsb
orb
push
push
inc
jo
enter
fcoms
pusha
adc
and
dec
enter
rolb
inc
adc
xchg
xor
mov
and
nop
and
dec
mov
or
test
mov
push
adc
lock
pusha
call
pop
cltd
loopne
push
adc
and
dec
inc
rolb
enter
rorb
mov
and
mov
and
inc
nop
ret
inc
clc
insl
or
adc
imul
loop
adc
les
icebp
pop
mov
adcb
sbb
inc
add
mov
das
decl
jg
cld
js
cmp
enter
xor
hlt
sub
mov
nop
std
test
aam
cld
adc
jb
jecxz
or
adc
nop
jmp
das
cld
stc
and
sbb
das
cld
stc
mov
jo
inc
mov
mov
mov
inc
fcoms
jae
xor
xor
lret
pop
xchg
sub
adc
test
das
sti
xor
mov
mov
dec
movsb
dec
push
nop
mov
jne
pop
enter
iret
jmp
imul
cmp
add
or
lds
subl
sbb
jg
mov
add
sti
repnz
inc
cmp
push
sbb
push
pop
cs
and
fdivs
lods
lods
sub
add
and
ret
inc
cmp
or
sbb
xor
or
je
mov
mov
cwtl
xor
or
insb
inc
sub
xchg
leave
push
or
or
mov
or
or
aas
pop
movsb
dec
data16
xchg
addl
jne
cmpsl
pop
jae
mov
mov
sbb
xchg
inc
and
daa
rorb
mov
inc
or
pop
or
adc
arpl
and
inc
aam
sub
add
dec
cld
and
lods
sbb
jle
shlb
xor
sbb
mov
les
xchg
adc
xor
push
fdivrs
or
rolb
aam
fmul
or
sbb
push
jg
pop
mov
push
ljmp
nop
fcomps
loopne
fcompl
fs
mov
mov
inc
sbb
mov
inc
mulb
sbb
decl
adc
adc
add
add
sbb
push
rorl
sub
jecxz
lock
ftst
xlat
call
shl
jmp
or
dec
hlt
les
sub
or
cmp
inc
inc
fmuls
in
push
push
xor
cmp
fsubl
or
push
adc
adc
and
jmp
dec
outsb
mov
sbbb
jne
xchg
or
cwtl
xchg
lods
loop
jb
adc
cmp
orb
adcl
adc
push
jo
stos
cld
or
rcrb
inc
jo
pop
xchg
inc
cmp
push
push
inc
imul
in
push
test
ds
adc
fcomp
dec
jo
xchg
pushf
daa
mov
mov
das
xchg
in
movsb
scas
cmp
xor
or
popa
jo
negb
adc
cmp
loope
and
lcall
dec
in
cmp
jns
jnp
push
test
lock
mov
dec
fmull
pop
inc
mov
sub
out
pop
push
xchg
outsl
and
jl
dec
cmp
inc
scas
int3
xchg
nop
lret
pushf
popf
and
add
les
pop
movsl
dec
fs
xchg
in
fisttps
sbb
dec
mov
repnz
jnp
push
pushf
sub
xchg
jmp
and
inc
push
xchg
add
sub
pop
daa
pop
push
outsl
leave
inc
ficomps
test
mov
push
inc
and
mov
daa
pop
cmpb
shrb
push
push
gs
adc
adc
xchg
out
dec
inc
movsb
and
lods
pop
sbb
pusha
or
pop
sbbb
mov
dec
sahf
cwtl
push
or
test
shrb
sbb
je
sbb
stos
orb
pushf
pop
push
or
inc
pop
sub
lret
push
or
sahf
rcrl
mov
mov
frstor
jo
and
mov
loope
nop
gs
and
dec
in
add
xor
push
jbe
pop
enter
mov
jbe
cli
cld
xor
xchg
dec
int3
test
lahf
shr
mov
scas
push
pop
pop
shlb
mov
jnp
or
subl
mov
or
jl
mov
pop
scas
inc
popa
or
lea
dec
sub
pushf
mov
sbb
pcmpgtd
outsl
xchg
repz
push
xchg
nop
mov
pop
push
leave
insl
push
pop
dec
or
dec
mov
sub
call
inc
adc
rolb
inc
repnz
rcrb
jo
cmp
mov
mov
push
pop
je
and
ljmp
dec
orl
lahf
inc
or
mov
imul
sbb
and
mov
cli
xchg
lret
push
push
int
fsubl
and
dec
or
or
xchg
ret
jmp
nop
sub
mov
mov
aaa
inc
and
cltd
dec
xchg
jl
push
dec
and
ror
cmp
scas
or
sarl
cs
mov
faddl
dec
adcb
fcompl
mov
or
inc
xchg
or
push
inc
cmp
add
out
cmpl
lret
mov
sbb
daa
jge
cwtl
test
xor
sbb
mov
sbb
mov
mov
adc
pop
out
lock
psubq
mov
outsb
or
rcl
or
call
mov
adc
adcb
pop
lea
jp
dec
dec
pushf
mov
in
or
sbb
jne
mov
rcr
dec
mov
inc
mov
cmc
sub
inc
or
sub
ret
xor
addr16
and
pop
stos
rep
pop
ret
out
dec
inc
push
dec
and
adc
aas
pop
xchg
movsl
lret
add
sbb
les
add
add
add
push
sbb
push
js
cmp
and
add
mov
fadds
sbb
enter
jbe
sahf
out
in
push
cwtl
adc
push
add
repz
push
dec
lods
popf
add
pop
addb
decl
test
and
and
adc
mov
xor
mov
aaa
scas
sub
cmp
xor
sbb
daa
fst
inc
sub
or
sub
scas
arpl
inc
rcl
cwtl
or
pop
in
iret
xchg
jae
dec
pop
les
pop
adc
jle
out
inc
lcall
dec
aas
cmp
mov
cmp
pop
adc
jl
sbb
cltd
enter
mov
inc
imul
movsb
sbb
ret
imul
mov
push
dec
daa
sub
jb
je
dec
out
add
jae
sub
outsl
jl
js
shll
in
dec
lods
je
insb
cmp
sub
or
dec
sbb
xchg
inc
add
push
sbb
lcall
add
jmp
xor
xchg
insl
and
addl
or
mov
psrlw
jnp
or
sbb
insb
or
jecxz
xchg
cmpsl
or
cmp
pusha
lds
into
dec
shl
outsl
or
hlt
add
mov
xor
ret
jae
push
das
mov
push
cmc
or
xlat
insb
or
test
mov
in
adc
pop
sbb
lea
cmpb
jp
aaa
popa
das
cs
imull
in
data16
cmp
inc
aam
imul
mov
cmp
pop
adcl
cmp
sub
dec
sbb
and
pop
movsl
mov
ret
push
and
jae
push
jmp
sub
in
test
and
mov
insl
aam
cmp
jle
dec
sub
ret
push
xchg
and
xor
sub
lret
fdivs
xchg
jmp
ss
test
cs
jle
mov
out
xchg
adc
cmc
clc
add
add
aam
fnstenv
jns
jmp
sub
lret
scas
pop
adc
out
orl
cmp
in
xchg
pop
popa
call
lcall
adc
jg
sarl
ret
mov
sub
adc
sbb
cmc
call
jb
inc
shlb
lcall
or
dec
enter
mov
add
push
cli
pop
adc
in
jp
add
jmp
jb
cmpsl
xorl
sbb
cmc
push
pop
out
xlat
jl
sti
std
ret
jb
outsb
or
dec
sub
inc
and
cmpsb
push
or
add
cmp
bound
jne
ja
fists
aaa
adc
cmpsl
mov
add
dec
lahf
mov
jo
inc
push
mov
add
test
mov
pop
cmp
and
adc
jge
movsl
add
inc
hlt
andb
or
jne
jle
sti
aam
out
push
jae
iret
dec
pop
or
aam
sbb
sbb
mov
clc
mov
stos
push
adc
adc
cmp
clc
jmp
movsl
daa
jp
jae
movsb
inc
jmp
into
mov
loopne
push
leave
cwtl
adc
and
outsb
clc
jle
push
fidivrs
sbb
xchg
lock
or
clc
add
or
sub
push
dec
leave
add
mov
int
arpl
sti
call
xchg
je
sahf
add
cmp
stc
mov
pop
aam
inc
jmp
dec
pop
daa
mov
and
lock
push
inc
mov
dec
les
sub
add
mov
or
push
xor
pop
in
in
dec
out
pop
out
and
mov
fdivs
sub
xor
xchg
pop
xor
sub
popf
rcrl
sub
inc
push
cmp
lret
stc
addb
mov
addl
sub
inc
fdivs
sub
out
gs
sbb
adc
call
ss
jmp
mov
sub
adc
mov
add
mov
sbb
jmp
xchg
lret
adc
and
stos
jmp
dec
iret
aad
sahf
imul
xchg
mov
dec
cltd
xchg
dec
mov
jl
mov
loopne
jge
das
push
lret
push
push
inc
adc
test
aas
loop
jmp
inc
aam
and
adc
add
jb
je
push
and
or
jmp
dec
mov
push
add
cmp
pop
imul
insb
loopne
xor
adc
or
es
test
dec
lods
sbb
push
in
adc
fcoml
mov
movsb
cmp
add
push
jl
and
jbe
mull
adc
sarb
or
and
fs
push
adc
inc
dec
or
and
xchg
cmc
mov
lcall
mov
loop
hlt
jmp
cmp
int3
cli
fwait
and
push
mov
or
lds
hlt
dec
adc
inc
jmp
sub
hlt
ret
mov
and
iret
hlt
adc
dec
mov
mov
jns
inc
dec
and
pop
jno
mov
xorl
jecxz
sbb
xor
js
jae
mov
mov
add
xchg
cmp
clc
xlat
clc
ds
and
sbb
dec
add
push
mov
clc
leave
push
lods
jle
dec
addb
jge
sahf
push
sub
test
call
cwtl
sub
pushf
out
mov
hlt
and
inc
and
push
xor
push
sbbb
inc
sub
shll
lret
push
xchg
push
repz
out
or
int3
inc
pop
inc
sbb
lea
sbb
subl
adc
movsl
dec
push
jmp
push
js
mov
test
mov
xor
imul
xchg
insb
in
mov
ret
inc
ja
cmpsb
jns
das
test
jp
xchg
sub
scas
sub
and
iret
xorl
icebp
or
pop
or
push
push
push
dec
je
in
xlat
add
sbb
pop
xchg
push
loopne
testl
push
jecxz
jns
jmp
repnz
xlat
or
or
inc
mov
cltd
adc
or
jne
cmp
and
js
dec
add
lea
aad
dec
test
daa
jne
xor
fmuls
pop
out
push
push
lahf
stos
and
pop
lret
and
cmp
and
pop
dec
push
inc
jne
sarb
push
lret
jmp
sbb
cmpl
and
inc
adc
sub
cmp
adc
sub
or
insb
fs
nop
fistps
in
sub
clc
xchg
stc
mov
xchg
xor
jl
and
test
inc
js
ljmp
push
dec
sbb
dec
movl
jge
pop
dec
inc
or
dec
dec
sub
movsl
jo
jne
mov
xchg
aam
or
push
rcll
mull
cmp
cmp
pop
sub
movsl
das
mov
adc
dec
or
jmp
daa
pop
nop
and
or
push
loope
shrb
xchg
imul
mov
pop
dec
mov
jge
mov
xor
dec
or
and
jecxz
inc
lret
xchg
roll
aas
xor
sub
or
mov
out
mov
dec
jns
aas
test
sbb
push
cld
or
mov
cld
xor
repnz
push
inc
inc
cmp
stos
push
pop
sti
int3
scas
push
sub
push
dec
bound
call
clc
mov
filds
fdivrs
lock
pop
repz
mov
fnsave
adc
mov
sbb
test
pop
pop
push
fcompl
xchg
cmp
sahf
in
jmp
xchg
inc
repz
imul
mov
xchg
sub
mov
mov
adc
sbb
push
pop
pop
sub
into
mov
cwtl
or
jno
jmp
adc
mov
incb
dec
add
test
mov
jge
idiv
cmc
push
ljmp
dec
xor
add
add
lea
je
pop
mov
xor
jl
and
xchg
pop
mov
xor
xchg
mov
and
xor
je
push
or
cmovs
pop
jle
lods
and
std
cmpl
outsb
sbbb
std
inc
cmpsb
pop
mov
lds
inc
movsl
sbb
scas
stos
xchg
test
sub
lods
adc
add
inc
scas
mull
or
push
or
sub
lds
das
cmp
xchg
mov
icebp
adc
movsb
push
inc
add
nop
shlb
xor
sbb
mov
sbb
mov
xor
add
pop
cmp
jbe
out
and
cmp
daa
je
loop
push
cmp
mov
mov
js
mov
xor
add
sbb
lret
js
jne
je
js
add
call
mov
sub
mov
sahf
inc
jo
dec
push
jae
or
ljmp
sarb
sbb
push
dec
add
inc
adc
pop
dec
call
lds
and
dec
roll
test
xor
jae
pop
loop
mov
adc
or
push
nop
and
js
mov
test
js
sub
or
xorb
mov
aas
incl
adcb
jb
iret
mov
and
xchg
xor
or
imul
ljmp
jo
jae
xchg
push
xor
nop
jo
sbb
jp
push
xchg
jns
imul
lods
ret
add
cmc
nop
sbb
cli
jb
or
mov
mov
cmp
int3
adc
addb
cmp
stos
hlt
push
dec
push
into
dec
jmp
dec
iret
mov
xor
fisubrl
jbe
imul
push
scas
mov
or
aas
inc
ja
scas
jmp
loope
adc
jecxz
loope
popf
js
mov
pushf
lret
cmpb
pop
subl
and
cmpsb
dec
sahf
imul
sub
and
or
movsb
mov
jns
jb
insb
and
mov
fisubs
push
popa
out
dec
or
and
xchg
ret
adc
sbb
add
call
xor
movsb
push
xchg
xor
dec
and
jne
adc
inc
jae
aas
adc
cmp
mov
repnz
lcall
aaa
push
subb
jp
push
push
xor
ret
lahf
fwait
cmpsb
shlb
xchg
or
mov
pop
jl
xchg
scas
fbld
pop
repz
jo
mov
jbe
lods
loopne
dec
or
pop
mov
call
push
stos
test
mov
sub
lcall
mov
insb
push
insb
mov
adc
aas
sbb
pop
inc
test
or
pop
call
mov
sub
inc
into
cmp
decb
sbb
push
sbb
push
xlat
nop
inc
or
mov
xor
xchg
pop
icebp
pop
pusha
mov
mov
cmp
stc
jl
jl
add
lret
jne
stc
js
or
jp
test
sbb
enter
mov
xor
mov
sbbb
cmp
sub
and
xor
in
sbb
mov
inc
mov
sbb
daa
cmp
les
inc
test
sbb
jp
fistps
fiaddl
cmc
dec
pusha
daa
inc
jno
loop
inc
adc
cwtl
int3
dec
adc
dec
mov
dec
pop
inc
adc
mov
sahf
cmp
fbstp
out
inc
js
inc
xchg
les
sarl
push
jecxz
es
repz
push
xchg
push
mov
sbb
adc
mov
sub
jo
fcompl
add
sub
xorb
sub
adc
sahf
adc
js
push
subl
and
add
and
inc
xchg
mov
inc
lods
adc
fstl
rclb
dec
scas
int3
push
dec
repnz
mov
mov
jle
movsb
add
sbb
arpl
jbe
pop
inc
sub
or
pop
jae
leave
jle
bound
sub
or
lahf
nop
xchg
jmp
insl
in
push
xchg
clc
xor
f2xm1
inc
add
inc
push
xor
dec
mov
sbb
push
je
cmpsl
vmread
push
push
push
sub
adc
xchg
insl
stc
rorl
nop
aaa
add
or
adc
movsl
fimull
or
push
test
inc
xor
mov
add
inc
xchg
mov
cmp
int3
adc
sub
lahf
fadds
mov
insb
mov
jo
je
sub
cwtl
mov
adc
or
aad
mov
pop
movsl
sbb
inc
mov
hlt
mov
movsb
ljmp
leave
jae
push
in
dec
imul
sbb
mov
fstps
or
mov
rolb
jge
add
xchg
cmp
daa
xchg
adc
push
movsb
lock
enter
jne
mov
stos
std
fmull
cmp
sub
mov
adc
leave
and
pop
dec
les
pop
popf
adc
push
dec
or
dec
mov
jns
xchg
mov
les
mov
adc
cmp
fisubs
fnstcw
test
adcb
fdivs
sbb
hlt
js
pusha
test
jne
and
les
cwtl
cmp
data16
jl
loope
adc
or
jp
mov
and
or
cmp
or
fidivrl
pop
xchg
sbb
xlat
pop
test
leave
clc
mov
and
xor
adc
mov
mov
push
dec
push
inc
and
mov
das
push
aas
dec
pop
pop
inc
mov
and
mov
cs
push
sarl
or
inc
mov
loope
dec
pop
adc
sub
push
jl
rclb
inc
jae
xor
pop
sbb
fdiv
adc
mov
insb
popl
lahf
insb
mov
test
addb
or
cwtl
mov
clc
inc
adcl
lahf
fs
dec
dec
in
jle
push
push
and
jl
inc
orl
mov
xchg
stos
push
fistpl
ljmp
and
jg
or
or
mov
pushf
mov
testl
xor
inc
dec
push
xor
push
aas
mov
adc
pusha
cmp
lods
sub
inc
scas
inc
xchg
test
daa
or
test
lock
cmp
or
xchg
fs
aas
mov
jo
in
pop
jns
mov
rorb
jle
push
shlb
push
dec
dec
imul
dec
leave
je
sub
shll
add
ss
cwtl
dec
xchg
push
xchg
mov
dec
cmp
pop
adc
inc
xchg
sub
cmp
and
pop
inc
xor
sbbl
ret
jl
jge
or
repnz
mov
adc
loopne
add
rcrb
mov
pop
or
lock
pop
stc
and
pusha
push
adc
xlat
je
and
mov
adc
repnz
push
nop
mov
xchg
or
jns
pop
jae
daa
and
pop
inc
or
or
mov
call
xchg
jb
mov
inc
push
jo
mov
cmpsl
sti
nop
fsubrs
mov
lock
adc
dec
or
pop
inc
fdivr
jge
inc
sbb
adc
sbb
fcomps
rclb
dec
outsl
sahf
fmul
shlb
inc
jmp
inc
cmp
or
or
andps
in
pop
test
je
inc
ret
rclb
lcall
and
inc
jecxz
push
sub
jp
fdivl
and
sbb
sub
adc
and
sub
add
dec
and
push
push
jle
clc
adc
lock
push
push
xchg
aaa
sbb
jae
pop
pop
mov
inc
sbb
outsl
mov
and
or
stos
out
dec
mov
std
cld
shrb
lea
sti
dec
inc
cmpsb
js
mov
or
sbb
imul
push
sbb
pop
aas
inc
adcl
rclb
pop
cmc
add
pushf
js
scas
jo
cmpb
sbb
xor
orb
adc
or
mov
stos
inc
in
mov
mov
push
xchg
lret
fists
and
xorb
sbb
push
repnz
xchg
add
add
or
push
repz
sub
mov
xchg
or
jne
jmp
std
lock
sahf
adc
faddp
adc
inc
or
scas
mulb
jbe
jne
rolb
shlb
imul
add
dec
and
shl
test
push
or
jl
and
or
test
jg
cmp
jl
pop
jae
adc
pop
lock
inc
mov
push
or
dec
add
inc
dec
dec
jge
sbb
clc
jle
mov
xor
and
ret
jl
jge
add
push
faddl
push
sbb
or
or
jecxz
and
nop
cmpsl
or
jae
fcoms
inc
sbb
sbb
push
dec
jle
xchg
push
xchg
adc
or
aam
jne
pop
or
scas
dec
push
jne
pushf
jmp
cli
mov
add
jne
jo
loope
rolb
cmp
pusha
iret
test
icebp
dec
inc
mov
sub
xor
mov
aas
adcb
mov
subl
xchg
sar
int3
dec
test
loop
sahf
sbb
cmp
je
jb
scas
sub
cwtl
mov
repnz
push
das
rcrl
jne
xor
movsb
sub
and
frstor
cld
popf
js
repz
cmp
xchg
rclb
fisttpl
leave
push
xchg
js
fnsave
mov
mov
fbld
mov
int3
ljmp
mov
clc
rorb
stos
cmpsl
fcmovnbe
test
add
xor
and
ret
sahf
ret
subl
fsubs
cmpsl
add
jge
mov
xchg
adc
popf
fwait
add
stos
mov
mov
inc
mov
mov
je
jl
lock
mul
enter
fsts
xchg
xchg
push
xor
mov
daa
adcl
aam
jle
xorb
mov
mov
scas
in
xor
xchg
pop
mov
xor
or
and
sbb
jg
xor
jg
clc
test
mov
notl
or
dec
cmp
movsb
ret
inc
mov
ret
mov
testl
lret
jns
dec
sbb
aad
adc
iret
ja
mov
mov
fstl
enter
jle
mov
and
sub
pop
lods
xchg
push
mov
ret
movsl
push
xchg
scas
mov
dec
loop
sbb
mov
ljmp
mov
daa
test
add
pop
inc
repz
clc
in
push
negl
dec
cmpl
stos
dec
xchg
and
push
push
mov
shll
sbb
mov
jne
adc
int
pusha
call
jmp
fisubl
insb
mov
add
xchg
out
stc
out
in
jo
add
popa
popf
fldenv
push
sti
mov
clc
add
dec
xor
in
mov
cmp
sbb
dec
sub
cmp
mov
bound
or
imul
push
adc
ds
inc
adc
adc
mov
inc
scas
and
psadbw
fmuls
xchg
push
in
sbb
or
adc
call
je
movsl
push
adc
test
jle
xchg
mov
bound
dec
sbb
or
dec
cmc
mov
movsbl
mov
out
adcb
je
sub
insb
xchg
sbb
inc
cmp
mov
dec
jmp
adc
xor
jne
xchg
pop
and
push
cmp
mov
mov
sub
pop
sbb
adc
ret
xchg
loope
and
stos
add
into
or
lds
inc
xchg
dec
sub
push
lret
jl
and
out
pop
and
movsl
lret
test
dec
es
lahf
je
sub
adc
and
cmpsl
adc
sbb
inc
movsl
icebp
or
jle
ljmp
sub
push
mov
and
mov
mov
push
lahf
imulb
mov
dec
xchg
mov
pop
sub
push
nop
sub
lcall
subb
cmc
xchg
or
add
cmp
ret
sbb
sbb
cld
adc
mov
leave
out
out
xor
push
std
and
inc
call
pop
add
mov
nop
mov
sbbl
pop
and
adc
mov
in
and
xlat
and
daa
pop
ja
inc
into
mov
cmc
adc
stos
notb
pop
xchg
pop
mov
jne
aam
rclb
sub
sti
jae
inc
je
xchg
inc
test
cmpb
scas
push
push
push
xor
inc
cmp
and
fdivr
mov
cmc
sub
dec
push
popf
fdiv
lea
and
push
cmc
push
mov
cmp
mov
pop
inc
call
popa
dec
lcall
and
bound
enter
clc
adc
push
push
sahf
sub
test
cltd
sbb
shll
lcall
fisttpll
inc
sbb
in
jno
fs
daa
inc
in
lds
jmp
bound
jl
jae
push
cmc
ret
data16
int
and
xchg
jecxz
hlt
adc
adc
iret
adc
sub
push
into
jmp
ret
xchg
mov
mov
pop
jno
jp
into
mov
sub
cmp
xor
jae
pop
xchg
in
jae
or
and
xchg
inc
or
scas
cmp
xchg
push
test
icebp
pushf
pop
or
pop
and
imul
push
adc
xor
or
hlt
shrd
adc
xchg
or
pusha
and
adc
inc
or
inc
in
pop
nop
xor
adc
push
push
out
movsb
into
add
incl
dec
jg
adc
pusha
mov
fcoms
mov
and
mov
js
or
adc
jl
and
jge
call
jp
cld
in
fdivs
fdivrs
insl
loopne
fadds
push
adc
jle
iret
or
and
mov
and
jl
frstor
or
jnp
adc
add
cmp
mov
add
xchg
jl
ret
add
dec
movsb
pop
push
add
dec
popa
js
outsl
or
sbb
imul
je
cmp
cwtl
and
or
cmpsl
cltd
cld
or
adc
push
xor
adc
js
pushf
movsl
adc
push
cwtl
test
jle
mov
inc
or
or
mov
jmp
inc
mov
adc
jg
test
or
pushf
movsb
sbb
cmp
lock
lcall
mov
mov
mov
sub
cmove
push
jl
lret
stc
rcrb
mov
adc
sbb
mov
aam
lret
ja
lret
adc
adc
dec
mov
test
sbb
mov
and
aas
adcb
call
sbbb
sbb
jle
cmp
or
mov
xchg
gs
js
pop
cmove
push
adc
pushf
sub
sbb
push
push
iret
add
inc
sub
movsl
xchg
test
xorl
adc
push
add
cs
test
mov
add
add
jmp
xchg
or
jns
rcl
loopne
fxch
adc
push
pushl
pop
dec
jne
shll
movsb
hlt
and
add
out
fwait
lods
std
shll
jl
sub
repnz
or
adc
sub
or
jnp
dec
add
push
leave
inc
jo
les
lock
push
sbb
js
add
repz
lds
or
inc
adc
imul
xchg
xchg
dec
lock
movsb
xchg
sarb
inc
jbe
mov
les
popa
in
cltd
loop
adc
fwait
inc
les
pop
adc
or
adc
mov
iret
or
or
sarb
fildll
or
add
or
leave
mov
adc
xor
xchg
pop
and
movsb
inc
int3
aam
enter
loopne
mov
je,pn
jbe
push
dec
mov
je
vmwrite
push
xor
mov
mov
mov
in
pop
jge
scas
aas
scas
aas
fnstsw
fdivrl
lods
aas
sarl
fnstcw
lods
sbb
cmpb
and
ss
lds
bound
mov
push
mov
icebp
xchg
and
mov
pop
mov
adc
test
or
data16
xor
inc
push
mov
mov
setne
daa
jne
dec
add
push
and
mov
out
adc
and
sub
mov
test
cmp
cmp
les
mov
rcrb
jg
dec
insb
lods
xchg
xlat
stos
sub
add
or
aas
or
bound
mov
adc
arpl
adc
jle
or
push
sub
inc
imul
pop
nop
and
push
cld
daa
clc
push
test
in
icebp
push
or
repnz
sbb
inc
repnz
push
and
sarb
or
daa
aam
in
cmp
movsb
js
push
insb
adc
and
sbbl
add
inc
insb
sbb
aam
pop
jo
xchg
mov
inc
inc
in
lods
and
inc
mov
lods
lock
sbb
mov
popf
adc
or
mov
hlt
xbegin
fstpt
or
fimull
push
dec
lret
hlt
test
inc
ror
or
lea
dec
or
dec
aam
push
xor
pop
adc
push
inc
xchg
jmp
test
and
jl
push
push
inc
and
and
jg
lock
push
mov
sub
xlat
sbb
setge
scas
aam
ffree
test
inc
js
pop
rcr
dec
sub
negb
std
and
stos
das
mov
inc
js
roll
sub
dec
loope
sbb
mov
add
es
xor
fistpll
dec
lods
insb
les
addb
push
cli
popa
repz
push
pusha
cli
jne
mov
imul
sub
and
sub
repnz
je
dec
aad
mov
sbb
sbb
bound
fidivs
xchg
and
ljmp
push
jge
rcr
pop
push
mov
push
inc
dec
inc
hlt
push
add
inc
push
dec
add
xchg
cmp
gs
and
icebp
mov
inc
and
mov
pop
adc
and
daa
test
sub
repnz
sub
in
pop
jno
mov
adc
mov
dec
push
mov
aam
or
push
shl
jo
or
and
int3
adc
nop
mov
adc
and
push
dec
jae
sub
js
inc
lea
addb
adc
or
lods
int
call
add
sub
scas
dec
jbe
cmc
and
fs
mov
std
mov
leave
jae
xchg
xor
add
adc
and
xchg
and
cld
insb
adc
or
lods
push
sub
movsb
testl
xor
dec
cmc
leave
or
xor
jb
xor
sbbb
int
push
movsb
adc
hlt
and
adc
in
call
test
mov
adc
fs
or
mov
pusha
les
xor
or
bound
ret
loopne
hlt
or
sbb
and
and
add
cltd
or
adc
mov
adc
nop
test
xor
cmpb
mov
push
adc
pop
mov
int3
ret
jae
nop
fsubrs
pop
sbb
add
dec
inc
mov
mov
mov
mov
cmpsb
rorb
mov
js
les
int3
pop
int3
and
adc
pop
mov
cmc
pop
xchg
inc
cmp
push
les
add
ret
sbb
push
mov
cmp
les
pop
inc
or
sbb
pop
mov
cwtl
or
sbb
lods
mov
lods
inc
pop
xor
adc
loope
cltd
cltd
jo
add
sbb
or
pop
out
push
mov
nop
mov
mov
inc
mov
jl
adcb
ret
adc
xor
and
cmpsb
js
mov
es
shr
mov
push
pop
pop
movsl
and
cld
and
das
pop
jbe
loopne
hlt
jbe
cmp
imul
lret
inc
dec
adc
shr
fcoms
dec
je
mov
jge
mov
lock
or
call
cmp
sbb
pop
inc
xor
sti
aaa
dec
pop
incl
pop
pop
imul
scas
mov
aam
imul
mov
dec
into
sbb
add
xor
mov
dec
cmp
jg
mov
das
xchg
add
test
xchg
mov
in
mov
mov
fsubp
and
or
loope
or
cmpb
movl
fs
push
and
or
and
imul
std
xlat
adc
jno
pop
mov
sub
sbb
jle
jns
dec
add
movsl
lods
imul
cmc
stc
ret
pop
ljmp
and
bound
mov
enter
aad
jmp
icebp
out
xchg
lds
pushf
loope
sahf
pop
lock
or
and
setle
sarl
dec
sti
sbb
jo
pop
lock
push
lods
shl
sbb
fsub
call
and
lahf
fimuls
rorb
jmp
outsl
push
adc
push
das
xlat
gs
mov
add
jge
addr16
mov
mov
aam
adc
pop
cmc
ljmp
stc
mov
test
mov
ds
and
push
adc
rorb
sub
mov
and
das
rcll
dec
lret
daa
andb
lret
cmp
add
adc
and
push
jle
loope
jp
or
dec
test
clc
jnp
jge
popa
dec
dec
mov
addb
mov
ficoms
xchg
push
xor
cli
iret
dec
inc
cld
dec
mov
xor
inc
add
les
cmpl
jle
inc
dec
jne
jmp
xor
stos
sarl
ret
dec
hlt
inc
cmp
negl
add
add
insl
adc
repnz
dec
stos
xor
out
lea
or
adc
inc
movsb
addr16
bnd
inc
int
xor
fists
ja
dec
xchg
iret
cli
lcall
mov
call
adc
inc
cmp
bound
test
inc
or
xchg
inc
push
cmp
ljmp
xchg
adc
adc
xor
imul
movsb
shrb
gs
fwait
das
and
aad
and
js
mov
xchg
arpl
imul
scas
je
sarl
test
push
jl
loopne
or
leave
jle
cmp
and
push
jl
jo
je
daa
push
bound
adcl
sub
jg
sbb
cmp
xchg
cmpsb
jne
adc
je
cmp
nop
mov
dec
mov
or
adc
or
call
and
or
adc
push
fsub
adc
dec
push
dec
mov
stos
and
jo
adc
xchg
pop
ja
adc
sbb
test
movsb
or
dec
scas
dec
aam
shll
loop
sub
xchg
sbb
orl
daa
or
loop
cld
cmpsl
notl
movsl
sub
incb
sbb
cmpsl
xchg
mov
sub
test
cld
sub
xchg
scas
clc
sub
mov
mov
adc
fstpt
mov
imul
movsl
push
outsb
popf
lds
daa
stc
ja
rclb
jle
lret
cmp
js
xchg
shll
jne
pop
sub
xchg
jmp
in
add
movl
mov
jg
jne
mov
and
pop
inc
xor
xchg
mov
mov
hlt
mov
lret
cltd
aas
rclb
sahf
scas
mov
pop
lahf
in
int3
lds
mov
sbb
inc
xor
xchg
sbb
mov
repz
enter
sahf
bound
test
cmp
adc
xchg
dec
adc
cmc
dec
jl
mov
sbb
cwtl
leave
dec
adc
sarb
movl
adc
adc
shr
outsl
push
enter
fs
jmp
cmp
fidivs
xchg
iret
mov
mov
pop
mov
jg
jmp
popf
sbb
insl
inc
mov
shll
cmp
push
mov
mov
push
sahf
xor
push
lds
mov
dec
nop
scas
mov
add
in
enter
xor
in
loopne
jns
cmp
xor
int3
adc
jl
xchg
adc
in
mov
mov
xor
cmp
adc
shlb
adc
xor
mov
cwtl
mov
adc
bound
inc
adc
std
das
in
cmpsb
andb
push
inc
xor
lret
enter
in
lock
mov
cmp
xchg
add
lret
scas
push
enter
cltd
mov
emms
xchg
jmp
pushf
or
sub
dec
daa
stos
dec
inc
and
sub
jmp
out
cmp
jnp
mov
into
inc
out
out
jle
dec
mov
and
aaa
cs
dec
lcall
cmp
cmp
adcb
mov
in
mov
nop
mov
nop
int3
mov
lcall
inc
adc
cwtl
dec
mov
pop
xor
adc
mov
inc
outsb
repnz
inc
lds
dec
jne
xchg
dec
ljmp
movsb
lret
hlt
adc
mov
push
adc
ja
into
sub
mov
jbe
inc
idivl
push
fdivr
push
mov
int
mov
sbb
cltd
repz
nop
orl
push
lcall
js
or
sub
sti
mov
adc
mov
and
jne
xchg
arpl
js
dec
int
and
xor
shrb
subb
mov
xchg
push
stc
push
pop
cmp
push
inc
inc
jp
les
jle
pop
daa
mov
inc
push
test
js
mov
sbb
jb
ret
inc
sub
jno
lret
cmpsb
adc
add
fdivs
pop
sub
lds
arpl
cli
adc
pop
push
ljmp
xchg
push
in
and
gs
or
dec
cmp
je
xchg
pop
ja
test
movsb
jae
sbb
inc
dec
les
leave
pop
add
adc
add
jle
lcall
jg
cmp
mov
dec
and
mov
mov
mov
lods
cmp
je
mov
or
fs
jne
sbb
add
notrack
xor
pop
and
dec
sub
and
mov
in
and
repnz
or
and
cs
mov
mov
test
xor
imul
and
out
sbb
xor
addr16
inc
lret
mov
dec
xorl
mov
dec
jns
ljmp
and
jnp
sbb
sbb
adc
adc
test
rorb
ja
jne
cltd
jnp
push
repz
out
dec
sub
fdivr
adcl
test
je
push
iret
inc
call
sub
pop
mov
and
je
inc
out
or
cwtl
push
push
addl
add
add
xor
sub
sub
xchg
inc
jno
sub
inc
adc
je
jmp
loop
dec
and
adc
lds
jg
test
lea
sahf
call
insl
pusha
sahf
adc
jno
adc
and
sbb
cmp
and
jl
dec
sbb
xor
aaa
sbb
and
add
push
movsb
movsb
and
jge
stc
arpl
ret
insb
fwait
lock
stc
jne
je
or
inc
cmp
push
push
cmp
test
leave
adc
mov
dec
nop
xor
je,pt
inc
lahf
xchg
call
in
lods
das
jg
mov
add
test
enter
int
imul
and
cmpsl
stc
pop
inc
inc
and
cmp
aas
ret
xchg
adc
js
sub
or
inc
movsb
je
push
xchg
add
mov
mov
dec
push
lods
inc
out
jnp
push
aad
loopne
movsb
adcl
or
clc
mov
out
lock
test
jge
or
dec
push
mov
pop
xor
out
pop
sub
test
jno
xor
cmpsl
add
push
mov
fildl
fldenv
pusha
lcall
push
sbb
jecxz
loop
cmc
icebp
sti
lret
jg
pop
lcall
adc
popf
mov
jp
mov
insb
xchg
jecxz
test
outsb
sub
push
pop
into
sub
add
xor
int3
mov
inc
mov
and
sub
icebp
and
push
or
test
and
nop
pop
mov
test
inc
repnz
repnz
inc
cld
test
add
cmc
cmp
add
dec
nop
dec
ds
mov
inc
test
sbb
lret
jae
aaa
jmp
inc
ficompl
jge
mov
scas
fisttps
and
rolb
int3
mov
mov
push
and
sub
add
mov
cmp
je
test
sbb
mov
dec
pop
test
loopne
int3
mov
mov
sub
shll
mov
inc
or
and
jge
or
push
shr
jge
mov
inc
gs
pop
jb
icebp
mov
sub
outsl
ljmp
and
dec
or
jne
pop
test
lret
push
inc
sub
xchg
aaa
arpl
push
popf
xchg
jns
or
enter
jmp
pop
xor
in
jge
in
movsb
mov
aas
mov
mov
sbb
js
pushl
movsl
or
mov
pusha
push
cmp
rolb
add
jmp
xor
adc
xor
xchg
pop
and
es
pop
cld
push
jge
orb
mov
dec
cld
lret
aam
hlt
enter
dec
les
repz
adcl
inc
dec
or
inc
xchg
push
sbb
das
adcb
shrb
pop
dec
aam
test
and
xor
push
xchg
inc
in
push
jmp
sbb
mov
int
jp
pusha
in
inc
xor
and
xor
sub
push
dec
in
adc
fmul
rorb
push
inc
mov
out
xchg
fs
sbb
mov
push
loopne
test
add
inc
je
or
leave
hlt
loopne
and
js
mov
cwtl
jg
repnz
push
popa
daa
int3
push
sbb
adc
add
int3
or
aam
push
and
sbb
add
stos
int3
insl
call
and
sub
hlt
aam
sarl
movsl
dec
and
cmp
dec
push
lock
push
sbb
or
inc
adc
or
add
pop
ljmp
imul
subb
fs
dec
in
dec
jmp
cmpsb
out
popf
push
fwait
je
pop
and
int3
test
jb
popf
movsb
sbb
or
add
dec
in
pop
dec
out
in
shll
jmp
pop
test
rorb
aam
lcall
ljmp
pop
mov
movsb
jmp
int3
pop
in
mov
lock
push
imul
push
mov
in
push
shl
shll
cwtl
das
adc
sbb
and
imul
lods
and
mov
add
test
adc
dec
fdivs
nop
out
outsb
test
in
rclb
fwait
xchg
stos
mov
ret
test
inc
add
xchg
mov
inc
lock
sub
loopne
adc
sbb
push
and
gs
les
push
loopne
add
nop
sbb
inc
or
and
or
adc
or
push
sbb
cmc
push
ljmp
ficoml
sbb
enter
cltd
push
and
pop
mov
mov
mov
test
leave
pop
dec
mov
call
cmp
sbb
xchg
test
pop
cmp
fsubrs
call
mov
adc
mov
shrl
aaa
fsub
clc
stos
mov
mov
inc
in
int
inc
and
aam
fwait
dec
stos
sub
xchg
call
das
mov
das
push
das
pop
lret
inc
fs
dec
pop
and
rclb
jle
int3
pop
dec
shrl
daa
ja
mov
dec
adc
cmp
xchg
mov
sub
ds
mov
dec
mov
scas
cwtl
inc
jne
lcall
jle
ljmp
je
cld
ja
cmc
lock
stos
lret
cmpsb
xchg
dec
or
xchg
call
sbb
inc
and
jmp
push
pop
arpl
mov
pusha
das
jnp
push
inc
inc
mov
xchg
mov
stos
or
xor
out
cmp
cmp
sub
or
xchg
sbb
push
dec
push
test
or
fwait
push
ret
cmp
mov
lock
dec
xchg
jbe
dec
mov
in
sahf
sbb
pop
jo
cmpl
enter
inc
or
and
add
clc
pop
xchg
lods
lock
sub
inc
clc
and
and
mov
xor
mov
mov
xchg
test
pop
loop
push
xchg
xchg
pop
fwait
pop
mov
push
mov
cmpsb
daa
ret
repnz
or
push
and
sahf
or
pop
out
pop
les
scas
pushf
xlat
mov
jl
ja
in
js
push
adc
je
cld
test
mov
fcmovu
dec
daa
aam
lods
inc
nop
cmp
cs
cmp
cmp
push
mov
and
xor
inc
xchg
dec
loop
sbb
nop
mov
out
pop
adc
xor
push
xchg
mov
rcll
and
sub
andb
adc
mov
or
or
int3
inc
mov
adc
jb
xchg
into
loopne
sub
rcll
jo
xor
ret
and
add
or
pminsw
movsb
pop
leave
fwait
inc
sbb
dec
or
mov
mov
adc
dec
or
xor
push
test
adc
jb
push
sub
std
in
dec
cvtpi2ps
daa
mov
bound
je
orl
inc
cmp
adc
out
jb
pop
add
scas
testb
jae
jno
xor
stos
gs
jbe
dec
and
adc
sbb
xchg
lds
push
xchg
outsb
insl
and
jo
call
xor
inc
aam
sub
andl
notb
adc
int3
fisubl
adc
push
jo
or
xchg
ret
inc
push
xchg
sub
cwtl
adc
fsts
fistpll
push
repnz
in
sub
fsubr
sbb
push
inc
sub
shrb
sub
and
lea
mov
xchg
mov
pop
mov
inc
xchg
push
in
xor
adc
fmulp
push
and
sbb
mov
push
mov
mov
loope
push
or
inc
sbb
cmp
inc
or
adc
xchg
pop
mov
push
nop
xor
sbb
sub
sbb
leave
rorb
xor
sub
sbb
es
inc
in
or
adc
mov
xchg
sub
sub
mov
jae
pop
es
inc
inc
cli
inc
pushf
scas
xor
and
sbb
push
aaa
xchg
mov
or
test
fisubrs
jb
out
fstpl
sub
es
pop
mov
or
out
repnz
scas
in
jne
or
or
jmp
sub
adc
sbb
and
mov
dec
clc
cld
sbb
hlt
cmp
cmc
xor
mov
arpl
repnz
mov
and
mov
mov
popf
push
in
or
aaa
jbe
push
cmpsb
or
sahf
pop
cmp
xchg
push
mov
popf
call
mov
es
mov
mov
aam
dec
fs
mov
cwtl
push
pop
out
ret
sbb
push
adc
push
xchg
ret
sbb
inc
adc
push
arpl
sbb
sub
xchg
fmuls
push
test
js
and
adc
fidivl
in
push
cli
inc
cmc
dec
mov
cs
jne
or
sub
sub
push
and
xchg
xchg
cmp
fs
xor
pop
xchg
mov
bound
movl
mov
fwait
xchg
dec
inc
scas
cmp
dec
or
push
fs
insb
jb
xor
jmp
dec
inc
js
add
xchg
adc
inc
repnz
add
je
sub
dec
jmp
add
ja
sub
stc
pop
popf
or
push
pop
cmp
pop
push
sbb
outsl
jno
imul
jae
or
jbe
test
xor
push
dec
pop
scas
pushf
stos
je
add
push
lds
sub
push
xchg
inc
out
pop
inc
movsl
mov
adc
adcb
shrd
movsb
cmp
xchg
and
xor
mov
lea
lret
add
ja
add
js
inc
or
adc
and
push
adcl
inc
xchg
enter
cmpl
mov
sbb
push
and
mov
adc
inc
sub
cmp
or
pshufw
cmp
daa
push
adc
pop
dec
inc
negl
lods
insb
leave
fadds
daa
push
mov
dec
dec
add
pop
aam
subl
dec
sub
pop
and
sti
jmp
pop
pop
or
push
adc
push
es
stos
cmp
or
mov
insb
mov
mov
adcb
jne
jns
add
mov
adc
adc
mov
or
cmp
mov
adc
mov
dec
divb
and
por
xor
mull
sbb
dec
sbb
addl
sbb
and
mov
or
lods
sbb
mov
mov
das
cwtl
or
leave
lahf
incb
call
cmpsl
sbb
nop
mov
jo
sub
sub
ljmp
sbb
sarl
mov
mov
inc
jo
rcll
test
pushf
mov
jg
mov
cmp
mov
dec
fisubrs
les
lret
cwtl
pop
xchg
imul
es
xor
imul
out
iret
mov
cmp
hlt
jg
iret
mov
sub
data16
sub
adc
xchg
pop
mov
ret
sub
arpl
pop
sub
or
mov
cmp
insb
mov
testb
imul
shrb
xor
sub
and
jg
push
icebp
aas
fsts
adc
lods
sbb
add
cli
cmp
es
and
sub
repnz
xlat
mov
push
jmp
and
call
push
insb
scas
mov
xchg
mov
pop
adc
pop
mov
adc
jecxz
out
and
sbb
jne
push
fsubrl
std
and
xchg
fbld
cmp
or
jge
cmpsb
xchg
pop
push
xor
scas
cmp
scas
sbb
out
xor
xor
dec
and
mov
push
cld
gs
cmp
jnp
jno
push
ljmp
push
adc
popf
test
in
in
or
hlt
rclb
scas
out
out
int
mov
pop
fsubrl
dec
gs
popa
icebp
lahf
jl
adc
xchg
je
lahf
adcl
enter
cmp
jnp
jnp
loopne
ret
out
xchg
xor
mov
adc
and
int3
jo
mov
data16
xchg
dec
jae
inc
jne
sub
fsubs
lock
push
imul
movsb
cmpsb
adc
and
push
imul
aam
and
scas
or
and
xchg
andb
mov
inc
or
inc
mov
popf
xor
dec
sub
test
cld
push
fwait
xor
jp
dec
mov
fisubs
jne
out
popa
lcall
push
jmp
adc
fucomip
mov
in
or
adc
je
jmp
sbb
xchg
or
fs
les
pop
adc
push
mov
and
adc
adc
or
stc
xor
stc
pop
dec
adc
inc
adc
inc
dec
sarb
jle
and
sub
sub
pop
pop
hlt
in
mov
je
bound
and
and
inc
add
mov
scas
push
jbe
aad
js
jb
adc
sub
inc
jo
cli
sub
lcall
mov
in
int3
enter
adc
sub
int3
inc
sub
and
pop
popa
inc
add
add
or
les
adc
out
cmp
xchg
push
loope
jl
shr
mov
repnz
push
aam
lret
push
mov
pop
rcll
test
mov
loopne
jmp
mov
popa
fdivs
int3
pop
xor
sbb
incb
popf
and
mov
gs
repz
or
mov
sbb
add
push
jnp
push
pop
call
or
inc
adc
add
aam
add
je
push
adc
aaa
adc
adc
xchg
and
xchg
lods
jp
and
sahf
movups
aam
lret
mov
ljmp
lds
hlt
decl
test
mov
orl
sub
pop
in
out
or
add
idivb
outsb
add
sahf
push
or
inc
add
dec
jle
lret
dec
stos
inc
and
jle
add
or
add
les
fildl
fs
inc
shl
cs
add
clc
xor
mov
xchg
jg
inc
mov
or
adc
in
or
sub
aaa
jnp
mov
shr
mov
cmp
addl
enter
loopne
add
fsubrl
scas
mov
or
adc
and
dec
pusha
addb
call
lods
daa
or
pushf
jg
xor
pop
and
aas
nop
pop
jae
xchg
cs
adc
sub
or
and
ficoms
adc
out
jo
and
xor
inc
add
and
pop
sbb
inc
xchg
cmp
cmc
dec
loop
lahf
cmp
and
adc
pop
jno
or
inc
das
fisubrs
sub
lret
scas
jb
into
mov
test
add
std
mov
int3
arpl
inc
or
dec
je
and
dec
add
push
jb
and
cltd
sahf
movsl
pop
sahf
lahf
inc
pushf
jle
add
push
xchg
xchg
call
mov
addr16
test
cmp
mov
bnd
lahf
pop
testl
es
loopne
pop
loopne
push
adc
es
or
inc
call
imul
shlb
add
cmp
mov
js
pop
mov
mov
sbb
inc
leave
add
pop
mov
and
lea
xchg
xchg
inc
lock
inc
add
and
add
add
xchg
push
inc
out
jge
aam
stos
mov
adc
cmp
pusha
pop
movsb
xchg
ja
out
inc
and
or
lahf
jno
add
testb
or
xchg
cwtl
mov
leave
jne
leave
inc
adcb
jmp
dec
mov
mov
xchg
dec
mov
inc
test
aad
dec
and
dec
cmp
dec
mov
in
movl
xchg
mov
adc
mov
xchg
sub
adc
xchg
shlb
orb
sti
divl
cltd
adc
js
dec
sub
xchg
add
test
call
sub
add
fs
cltd
and
pop
std
ret
mov
or
bound
stos
dec
xchg
mov
adc
or
jg
cmp
ret
xor
and
xor
movsl
and
cmc
mov
dec
bound
xor
cli
jmp
mov
rcrb
or
out
stos
mov
fdivrl
in
and
mov
pop
gs
push
and
adc
cmp
push
jge
inc
in
scas
enter
pop
es
or
add
xchg
mov
dec
push
and
mov
inc
add
test
pop
sub
add
mov
jne
dec
pop
jo
push
ja
mov
add
push
jmp
mov
mov
mov
sbbl
or
push
dec
add
int
sub
outsl
enter
mov
repz
scas
adc
xlat
push
les
movsl
mov
aad
lea
testb
and
add
sbb
push
out
std
xor
ds
inc
or
inc
xchg
mov
jg
lea
sub
or
dec
push
pop
xor
test
sbb
push
int
adc
mov
xlat
cmpb
and
decl
or
fisubs
inc
cld
lea
sbb
lahf
orl
jmp
cmp
test
jns
call
jae
push
repnz
pop
adc
cmpsl
repnz
movsb
pop
dec
inc
jb
adc
dec
and
mov
inc
lds
jne
pop
test
mov
int3
hlt
call
into
divb
xchg
cli
cmpsb
aaa
js
dec
or
push
add
inc
out
mov
or
mov
jmp
mov
jnp
xchg
ja
push
xor
aas
mov
shll
shrl
add
adc
dec
je
push
adc
adc
push
fldcw
or
or
add
xchg
inc
or
push
negb
cmp
mov
mov
or
enter
call
sbb
pop
cmc
push
and
dec
adc
xlat
data16
dec
adc
jp
push
mov
cmc
mov
pop
xor
or
cwtl
pop
xchg
xchg
sub
or
out
push
push
sub
shlb
jne
pop
sbb
xchg
adc
and
mov
insl
add
adc
mov
mov
sub
daa
fsubrp
push
movsl
sub
sbb
sub
mov
inc
in
or
jno
or
mov
mov
and
dec
add
sbb
jne
inc
leave
sbb
push
into
or
fistpll
push
pop
dec
test
sub
and
jmp
andb
push
shl
xor
imul
pop
jne
popf
scas
stc
pop
pop
mov
add
or
cmp
xchg
mov
ret
mov
adc
cmp
sub
push
mov
inc
lea
push
or
adc
rorb
les
mov
cli
lret
out
xchg
in
repnz
xchg
out
fsubs
fcomps
testb
dec
mov
and
add
push
push
cli
lcall
dec
ja
leave
cmp
int
aas
push
xor
mov
jle
sbbb
pop
push
pop
rolb
test
aam
sahf
jb
pop
aad
and
add
in
cltd
fs
loop
adc
in
inc
loopne
mov
bound
insb
decl
pusha
in
or
mov
cmp
fs
cmp
mov
push
mov
mov
or
push
pop
mov
or
shlb
and
adc
sub
leave
inc
push
mov
jle
jb
movsb
lret
sbb
ja
inc
jno
inc
int3
xor
enter
lds
and
mov
daa
insb
ret
adc
and
xchg
shrb
cs
lea
sub
jne
and
sub
pop
aas
xchg
xchg
popa
sub
adc
sarl
dec
imul
aam
hlt
out
mov
dec
fcoms
mov
push
mov
insb
imul
lea
stos
fs
test
dec
push
cmp
lods
push
fs
mov
xor
xchg
lock
lods
dec
je
or
cmp
and
xchg
xor
sbb
or
adc
mov
xchg
mov
sub
and
add
test
fwait
pop
adc
cmp
pop
mov
inc
push
lcall
in
jmp
in
push
subl
cmovae
test
jne
fwait
daa
jo
std
das
pop
loop
je
jb
xchg
push
adc
pop
and
jo,pt
push
inc
or
push
xor
xchg
inc
xor
xchg
ret
cwtl
sub
scas
lock
or
in
movsl
test
adc
lods
test
xchg
push
mov
and
dec
xchg
xlat
or
sbbb
mov
sbb
inc
push
or
mov
jl
sub
or
push
push
ja
fwait
icebp
dec
lcall
inc
lock
je
pop
aaa
xlat
stos
jno
aaa
push
lahf
loop
sti
mov
jns
inc
sarl
pop
jle
mov
dec
daa
je
ja
mov
and
xlat
or
add
jle
clc
dec
and
push
or
dec
aaa
jmp
dec
sub
push
std
mov
jb
test
mov
sti
loop
nop
sub
and
lock
lea
push
mov
incl
push
sbb
mov
jae
test
pushf
pop
pop
test
sub
mov
pop
inc
out
jns
scas
int
push
sbb
push
sbb
adc
add
sbb
addr16
std
les
rcr
in
or
fcmovu
mov
push
in
dec
sti
jmp
and
mov
daa
sbb
xchg
pushf
ficoms
imul
push
insl
icebp
adc
sub
adc
sub
cmp
and
sbb
dec
mov
mov
mov
mov
xor
je
mov
mov
jmp
or
adc
popf
popf
pop
mov
ret
push
das
jae
js
mov
cmp
xor
mov
lahf
cmp
jmp
inc
sbb
add
ljmp
cmp
lock
lods
adc
inc
push
or
mov
or
sti
or
or
pop
mov
xchg
dec
pop
dec
or
cmp
mov
xchg
push
lds
mov
bound
xor
cmp
xchg
jae
ds
mov
jbe
jmp
inc
adcl
sub
mov
or
sub
inc
push
push
icebp
push
xor
pushf
push
sub
cmp
movsb
bound
adc
mov
adc
mov
jns
dec
loope
adc
push
mov
xchg
cmpsb
sub
adc
mov
mov
divl
daa
ret
push
inc
cmp
ss
pop
das
mov
cmc
in
loopne
pop
xchg
sbb
mov
dec
push
in
sub
dec
enter
jl
hlt
cmp
pop
rolb
and
inc
dec
call
shll
and
addb
xchg
mov
pop
push
add
or
or
or
jecxz
lods
xchg
or
mov
test
add
or
testb
sub
jae
je
test
pop
test
add
inc
add
mov
ja
call
inc
mov
ljmp
aam
cmc
sti
jmp
mov
sbb
movsl
subl
sbb
test
out
xchg
arpl
pop
dec
xchg
or
test
and
xchg
and
jmp
int
test
int3
aad
mov
data16
inc
sarl
aam
movl
stc
fsubl
or
mov
repz
jp
sub
movsb
xchg
add
subb
jne
adc
repz
sarb
loope
mov
fidivl
sub
loop
js
inc
add
adc
xor
push
adc
fstps
xor
or
rcl
pop
into
aaa
imul
jge
xchg
adc
pop
test
mov
shrb
popa
nop
imul
loopne
jg
sbb
push
xchg
jp
or
push
push
inc
int3
xor
in
in
mov
mov
or
push
jno
add
and
jb
and
daa
adc
mov
and
hlt
mov
or
jne
push
cmp
and
cltd
outsl
pop
push
xor
cmp
in
and
cltd
xchg
repz
cmpl
gs
xchg
push
sbb
dec
push
mov
cwtl
cmpb
push
mov
sub
or
test
inc
into
or
loopne
movswl
or
shll
cmp
fldl
pop
adc
fcmovb
jae
xchg
adc
jge
mov
jmp
xor
je
push
aaa
fdivrs
stc
and
insl
jb
scas
imul
push
and
or
sub
xchg
insb
cs
pop
pushf
add
out
inc
sbb
jmp
outsb
daa
mov
push
out
jno
jmp
dec
xlat
inc
test
or
into
add
cmpsl
jnp
jl
lea
push
bound
pop
cmp
push
mov
xchg
mov
movl
pop
in
cld
adcb
scas
sbb
rcll
dec
test
jg
dec
push
les
and
sub
xor
test
jecxz
ja
cltd
enter
cmc
add
hlt
sbb
adc
lock
dec
pop
cld
mov
shrl
clc
add
test
jne
lds
dec
xlat
jmp
sub
xor
cmp
inc
mov
movsb
push
and
dec
push
enter
aam
setne
or
into
adc
mov
int
and
jnp
out
inc
xchg
hlt
popa
icebp
lock
xor
psllq
sbb
and
push
popa
leave
mul
xchg
enter
jmp
cmc
mov
in
add
clc
sbb
lock
cmp
paddq
outsl
test
std
insb
fstl
mov
inc
mov
sub
jae
jle
or
mov
pop
push
out
dec
sub
push
push
das
sub
fs
dec
xor
lret
sub
mov
jle
ficompl
dec
faddp
imul
xchg
lret
aad
xchg
jecxz
cmp
adc
std
cli
and
pushf
loopne
inc
jp
adcl
sub
mov
pop
rorl
jae
mov
mov
sbb
stos
fs
xor
inc
stos
gs
dec
and
inc
sbb
push
pop
add
jmp
xchg
mov
movsl
mov
jmp
movsb
nop
push
sbb
inc
xor
insb
push
sbb
mov
daa
aad
mov
fsts
mov
test
shrb
mov
push
sbb
ret
sbb
or
push
cmp
and
dec
and
pop
cmc
mov
or
dec
cli
out
add
stc
or
nop
cli
leave
sbb
lea
jmp
xchg
clc
imul
movsl
and
sub
mov
inc
mov
shrl
popf
mov
lods
fadds
outsl
inc
mull
sub
repnz
lahf
or
testl
lret
in
sub
mov
negl
hlt
fsubl
negb
and
mov
lods
mov
sub
fcom
xor
inc
xor
pop
rcrb
lds
dec
and
ret
div
xor
sub
scas
lods
dec
in
jecxz
sub
push
xchg
mov
sbb
in
or
fists
dec
stos
lea
mov
leave
push
fcom
mov
mov
bound
jns
adc
mov
hlt
movsb
push
inc
push
and
shll
call
jecxz
sbb
aas
inc
call
xchg
adc
mov
inc
jp
xchg
and
sub
push
call
stc
push
and
fwait
test
sub
lods
push
ds
into
das
or
inc
loope
xchg
test
sbb
xchg
cld
lock
in
arpl
inc
incl
inc
cmc
mov
int
sub
xchg
inc
je
stos
fs
and
aad
mov
loopne
negb
fsubrl
addl
daa
jge
sbb
mov
fdivrs
cmp
push
and
lret
mov
dec
lods
push
jp
divb
andl
push
xchg
xchg
dec
pusha
leave
rcll
outsb
test
gs
add
icebp
pop
test
jmp
xor
mov
sbb
js
aaa
lcall
sbb
lods
ret
sarb
jl
ret
push
fidivs
xchg
add
ljmp
sbb
mov
push
loope
mov
jnp
mov
add
lds
lret
mov
adc
pop
rclb
mov
test
and
adcb
sahf
push
pxor
pop
lods
aam
out
xchg
popf
push
push
adc
cmp
xor
jle
mov
movsl
push
loop
xchg
scas
push
inc
popf
les
call
repnz
inc
loop
enter
addr16
add
fs
repz
insl
test
les
push
sbb
hlt
mov
mov
xor
sti
jle
in
dec
mov
je
mov
cmp
sub
push
out
int
jl
mov
popf
sbb
push
cs
lods
cmp
push
adc
movsb
mov
pop
pop
mov
outsl
loopne
mov
xchg
sub
cmc
das
icebp
rcrb
dec
sti
push
ret
push
sbb
cmp
clc
shl
ds
dec
popa
sub
cmpb
add
les
jg
fiadds
inc
mov
push
mov
enter
dec
inc
cmp
mov
int3
std
or
add
repz
or
inc
mov
push
pop
call
xchg
out
popl
or
add
lods
push
add
clc
jp
add
inc
and
sarl
je
aas
xchg
inc
stos
jecxz
iret
jmp
das
mov
or
push
mov
imul
or
lock
or
dec
fnsave
loope
dec
subb
xor
jmp
outsb
dec
clc
mov
xchg
hlt
sbb
mov
pop
pop
push
and
mov
ja
mov
mov
pop
iret
cltd
and
divb
jnp
jp
popa
les
and
xchg
fsubrl
inc
sarb
es
xchg
push
inc
lods
pop
jno
je
jge
cld
fs
sub
and
adc
gs
mov
mov
and
outsb
sub
and
mov
int3
sub
jns
adc
je
or
out
xlat
lahf
out
sahf
adc
int3
jmp
mov
inc
pusha
sbb
xor
mov
cmpb
dec
cmc
and
fisubrs
jecxz
pop
xchg
push
adc
out
popf
mov
or
inc
inc
jle
dec
adc
cli
jae
dec
mov
jnp
sbb
test
subb
xchg
pop
lgs
adc
pop
nop
test
xchg
jnp
in
rorb
mov
clc
mov
inc
push
adc
andl
xor
in
cmp
aam
adc
jae
sbb
cli
repnz
xor
xor
sub
adc
mov
xor
push
push
repnz
push
or
and
sub
jae
lea
inc
push
ret
adc
add
mov
inc
invd
add
adc
sub
sbb
cmp
pop
mov
adc
and
lock
and
dec
xchg
out
adc
ss
add
pop
fnstsw
fcoms
in
xor
jmp
push
pop
cmp
dec
push
push
sub
leave
adc
and
sub
push
adc
fisttpll
or
jecxz
adc
push
inc
pop
xchg
aad
test
lahf
adc
les
adc
fiadds
cmp
cmp
mov
adc
add
mov
pusha
and
push
incb
dec
push
cwtl
out
jnp
xchg
clc
inc
or
sbb
rcrl
call
lcall
arpl
push
sbb
sub
dec
push
shrb
iret
lahf
or
push
les
cs
dec
movsb
popa
jmp
jne
mov
xor
popf
jle
insb
adc
nop
pop
mov
mov
sub
jae
adc
scas
xchg
push
push
push
mov
cmp
push
test
push
cmp
cs
jae
hlt
inc
dec
hlt
sub
sub
cmc
ljmp
test
xor
push
faddl
or
int
cmp
xchg
fdivrl
jp
movsb
mov
dec
cmp
xor
adc
aam
sub
testb
jns
cmpsl
inc
rcll
inc
add
les
mov
dec
call
mov
je
mov
pop
mov
push
test
sbb
push
adc
mov
mov
adc
cmpb
int3
or
sarb
cmp
pop
fs
pop
xchg
mov
inc
popf
icebp
mov
test
or
in
adc
mov
xor
notb
push
xchg
sbb
ret
push
fs
sete
call
daa
pop
sbb
sub
jb
lds
inc
nop
jl
orb
push
push
dec
ds
xchg
and
xchg
ret
pop
aaa
and
pop
pusha
stos
pop
add
adc
sarb
pop
add
dec
movsb
and
imul
and
xchg
dec
les
sti
lret
mov
lcall
mov
push
dec
xor
mov
sar
jmp
push
rol
out
out
imul
popa
test
sahf
and
or
arpl
mov
lcall
jg
adc
cltd
in
sub
fcoms
filds
mov
lds
mov
mov
mov
xchg
stos
pushf
loopne
test
loop
cmpsb
or
jecxz
lret
push
push
inc
push
cmp
cwtl
and
add
or
adc
lret
shlb
xchg
or
je
jle
out
nop
xchg
add
sub
adc
jne
rol
ljmp
jne
or
inc
notb
dec
faddl
xchg
testl
lret
hlt
ret
xchg
or
sbb
rol
xor
adc
sub
adc
flds
lret
ljmp
or
inc
testl
stos
loop
push
test
pop
dec
inc
mov
xchg
stos
mov
dec
push
or
add
out
mov
cmp
mov
jmp
mov
lret
xchg
inc
adc
push
cli
push
push
pop
sub
hlt
jae
mov
xchg
dec
and
or
dec
ss
jo
mov
mov
mov
movsl
insl
xor
adcb
or
dec
test
dec
movsb
xchg
add
cwtl
add
ljmp
push
loop
xchg
fildll
jl
js
adc
or
and
in
and
xchg
mov
cmp
adc
cmpb
xchg
dec
sarl
dec
push
fsubl
in
daa
jns
imul
mov
insl
popf
idivb
and
mov
mov
add
mov
or
gs
xor
dec
ret
or
pop
xchg
lock
xchg
in
pop
lds
cmp
pusha
or
xchg
cltd
push
lahf
jge
xchg
pop
stos
cltd
test
sbb
js
pop
jns
add
outsb
sub
fmuls
mov
mov
inc
dec
jg
and
adc
or
push
adc
sub
inc
add
scas
mov
imul
push
push
xor
mov
push
aad
sbb
push
push
cs
adc
das
sbb
pushf
jmp
jge
jge
ret
jmp
movsb
sbb
sub
xor
adc
xor
mov
xor
mov
and
test
jg
mov
nop
adc
mov
xchg
lock
leave
mov
sub
sbb
jbe
es
push
jg
cs
fwait
and
push
jecxz
adc
push
xchg
push
popf
push
orb
ficoms
sub
lea
mov
cmp
nop
insb
xchg
jae
xor
cld
mov
aad
lods
xchg
sbb
pop
adc
add
add
pop
xchg
mulps
sti
rclb
sbb
fistps
jae
into
adcb
lods
and
xchg
or
inc
loop
cvtps2pi
jne
mov
sub
lret
mov
inc
out
dec
cli
enter
adc
jle
add
xor
jle
xor
cmp
push
push
movsb
mov
fstl
lds
sub
mul
roll
dec
xchg
cld
xorb
inc
mov
mov
sub
jg
sub
rolb
test
sub
jg
dec
dec
clc
xlat
nop
rorb
jne
repnz
les
mov
xchg
lods
dec
cli
mov
mov
outsb
jb
mov
add
jl
int3
sbb
sahf
jp
aam
sahf
roll
jmp
add
xchg
or
ret
add
cmp
mov
lock
test
sbb
sbb
inc
push
rorl
out
mov
add
dec
nop
adc
adc
aam
push
adc
mov
mov
and
push
stos
mov
ja
jns
nop
dec
xor
out
adc
add
sub
fisttpl
mov
test
stc
scas
out
adc
mov
or
pop
or
sbb
sbb
in
push
adc
dec
idivb
ret
mov
and
addr16
mov
xor
push
repz
xchg
and
shl
or
int
in
enter
sbb
leave
mov
pusha
push
in
mov
cmpb
jno
addr16
orb
mov
sbb
int
dec
in
nop
inc
imul
push
dec
pop
popf
mov
lea
bnd
mov
movsl
push
clc
adc
jmp
loopne
mov
xor
test
inc
das
ds
imul
adc
movb
in
sbb
mov
ljmp
mov
dec
mov
fidivrl
pop
jnp
mov
or
rcll
fiaddl
jle
and
bound
lret
mov
cwtl
jns
lea
xor
stos
lods
xlat
mov
shr
adc
hlt
pop
icebp
xlat
shlb
fildl
push
push
pop
out
fs
aam
rorl
fildl
decb
stc
bound
fdivrs
mov
mov
aad
jmp
and
xchg
mov
and
dec
xor
mov
push
dec
dec
adc
mov
in
or
repnz
xchg
sub
cmc
clc
lcall
notb
hlt
fisttps
mov
out
mov
and
incl
and
mov
push
sub
sub
lock
cmp
sub
jle
mul
in
movl
inc
mov
nop
sub
subb
fcoml
hlt
cmp
les
test
xchg
and
xchg
sub
pop
dec
xor
stos
into
jae
leave
int
mov
out
push
sbb
fisttpll
mov
cmp
cmp
fdivrs
dec
cmp
in
push
nop
adc
adc
sti
sub
arpl
loop
insb
inc
stc
sub
sub
getsec
xchg
push
mov
xchg
jg
adc
clc
or
fdivrl
int3
loop
ljmp
adc
jecxz
pop
inc
inc
sub
and
adc
xchg
fiaddl
adc
dec
subl
ljmp
sub
mov
fists
push
jmp
lock
popf
jno
dec
jne
xor
cmp
jle
scas
dec
cld
sbb
shlb
jmp
stc
out
enter
adc
sti
mov
pop
pop
sbb
push
pop
jbe
into
xor
mov
sub
nop
add
inc
or
inc
clc
and
xchg
sub
mov
sub
ds
jo
lahf
pop
cmp
and
in
push
adc
cli
fdivs
inc
imul
dec
not
lahf
adc
aaa
inc
or
ss
mov
push
and
in
js
ret
cmp
and
rorb
scas
push
xor
mov
xor
in
das
jbe
imul
ja
test
in
das
scas
je
mov
pushf
ffree
dec
cmpsl
out
das
insb
lcall
jle
shrl
pusha
sbb
xor
out
mov
out
pop
sub
push
stos
and
sub
adc
and
imul
adc
in
mov
fistpll
pop
cld
scas
push
mov
ret
loopne
and
dec
xchg
push
js
in
test
xchg
std
dec
adc
mov
stc
dec
jp
sbb
or
movsl
nop
in
test
mov
ss
daa
std
adc
lock
inc
loopne
repz
inc
ret
pop
sub
movsl
xchg
fdivl
and
xchg
in
fwait
push
mov
push
xchg
cmpsl
pop
enter
stos
lret
stc
sub
nop
push
popf
inc
enter
adc
je
adc
int3
mov
pop
jnp
xchg
loop
adc
cmp
lods
roll
inc
call
pop
lods
adc
pop
and
imul
push
cmp
push
test
xchg
lods
and
fiadds
notb
and
jle
mov
js
outsl
lret
push
sbb
in
test
xchg
adc
push
aam
cvtdq2ps
or
mov
add
pop
aas
and
sub
dec
pop
and
add
jo
jnp
pop
mov
mov
and
sbb
dec
cltd
or
pop
jns
dec
movsl
sbb
mov
add
jg
or
jmp
decl
push
jmp
loopne
hlt
pop
mov
mov
fwait
mov
test
pop
cmp
sti
je
adc
into
bound
or
sub
mov
aam
cmpl
xor
aas
cmp
jbe
xor
out
pop
sub
mov
cmp
xor
xor
icebp
cmp
add
lea
insl
mov
add
test
jle
push
pop
cmp
mov
jmp
and
in
sub
jl
and
lea
jge
inc
mov
and
loope
ds
mov
xorl
push
mov
les
push
aad
out
add
bt
jae
nop
sbb
pushf
imul
outsb
test
scas
shll
push
adc
int3
xchg
pop
jb
push
push
lock
mov
lret
inc
mov
roll
icebp
adc
pushf
xchg
movsb
mov
adc
icebp
repnz
clc
ja
inc
nop
push
mov
adc
movsl
stos
mov
and
outsl
jb
pop
in
call
cmp
pop
stos
cmp
cmp
adc
and
and
jno
mov
or
sbb
inc
and
add
sbb
lea
pop
lcall
les
movsl
sbb
xchg
and
xchg
sbb
roll
sub
xchg
ret
inc
mov
imul
clc
or
mov
testb
maskmovq
notl
push
fwait
mov
aam
adc
mov
xor
sub
push
out
insl
shr
push
das
stc
mov
out
and
push
cld
xchg
idiv
iret
dec
adc
inc
xor
adc
pop
or
adc
aad
jo
movsb
and
stos
fs
aas
dec
inc
loopne
push
pop
fistl
dec
cmpsl
mov
jae
mov
sub
out
xchg
gs
dec
cs
mov
call
fcoml
pop
addr16
or
push
aaa
jmp
stc
repz
mov
and
shll
jl
pop
adc
push
jp
pop
test
mov
or
sub
jns
push
push
sbb
in
cmp
mov
push
and
and
jge
or
xor
movsl
inc
lret
loope
xchg
int3
neg
imul
mov
lea
dec
and
repnz
mov
dec
adc
add
std
addr16
pop
jl
sbb
adc
sbb
adc
and
out
and
or
and
adcl
jmp
sbb
jae
int3
into
icebp
or
jmp
or
jecxz
push
iret
or
inc
push
mov
or
out
int3
push
test
pop
xchg
or
sub
dec
adc
cmp
lods
jecxz
sub
pop
or
je
adc
xor
cld
sbb
pop
movsb
aam
and
ret
test
jmp
jmp
call
scas
lcall
test
stos
mov
pop
xlat
inc
add
push
push
enter
cmp
jae
xchg
mov
gs
mov
fs
inc
jbe
clc
mov
cli
add
stc
mov
clc
sbb
cmp
daa
sub
add
and
pop
mov
push
mov
cmpl
push
pop
or
adc
adc
loop
add
or
insb
gs
mov
push
sahf
dec
xor
in
sahf
sarb
loope
scas
cmp
js
mov
xor
push
push
arpl
lret
inc
pop
ds
cld
mov
int3
sub
nop
fcoms
dec
jne
test
and
and
xor
inc
pushf
and
fnsave
aad
mov
inc
rcr
mov
clc
or
jle
sbb
add
popf
mov
pusha
sbb
jp
mov
inc
test
or
xchg
je
sub
dec
andl
sbb
cld
jns
stos
mov
mov
lret
xor
scas
shrl
jle
test
subb
adc
push
xlat
mov
outsl
xchg
gs
out
sub
mov
fsts
insb
sub
add
cmpsl
in
mov
je
push
bound
sub
push
add
add
push
adc
and
cmp
std
xchg
dec
test
jbe
cmpsl
lock
cs
stos
jnp
and
out
push
or
push
cmc
xor
xor
aaa
dec
jb
adc
pop
jmp
mov
lcall
pop
outsl
lock
xchg
cltd
gs
sti
adc
push
inc
xchg
add
out
mov
pop
mov
add
loop
sub
cmpb
dec
push
xor
mov
dec
sbb
es
cld
mov
loope
or
frstor
xchg
cmp
add
sub
inc
decl
loop
adc
cs
in
jl
outsb
popf
jno
out
je
js
dec
mov
mov
cmp
dec
pop
mov
add
mov
dec
push
push
jne
sbb
je
js
jo
addr16
mov
mov
ret
lods
mov
push
gs
imul
push
js
jmp
inc
inc
mov
inc
test
test
push
repnz
push
mov
push
push
rclb
or
dec
in
sub
pop
xchg
fnstcw
push
xchg
sbb
cltd
dec
test
add
mov
pop
mov
loop
sbb
jno
jmp
sbb
insb
cmp
cs
xor
pop
test
adc
rcl
lock
mov
scas
aad
roll
cmp
push
cmp
sbb
xor
repz
nop
or
test
mov
imul
adc
je
in
pop
cmpsl
arpl
or
lea
adc
cld
sti
leave
fcmovnbe
jg
push
adc
sti
mov
dec
mov
xor
decb
push
scas
hlt
xchg
sbb
push
out
mov
sti
jge
cmp
imul
push
adc
xlat
jecxz
out
sub
adc
ret
and
stos
pop
push
mov
cmp
xor
mov
lods
sti
lcall
add
inc
das
cli
pop
ja
sub
dec
sbb
or
inc
lock
adc
and
repz
pop
cld
jl
in
fadd
cmpb
test
dec
add
mov
or
jecxz
je
mov
xchg
push
daa
push
ljmp
mov
mov
daa
mov
adc
inc
push
inc
mov
ret
dec
jmp
in
lods
jl
imul
xor
xchg
and
scas
push
imul
adc
jo
jne
mov
je
push
jno
add
imul
xchg
ret
push
dec
out
fnstcw
add
push
popa
jl
int3
xchg
sub
mov
pop
scas
and
mov
xor
jge
mulb
lods
daa
or
dec
adc
or
mov
dec
mov
and
mov
stos
push
bound
dec
pusha
divps
icebp
out
pop
adc
lret
lahf
and
rorb
xchg
aaa
push
rclb
mov
jnp
dec
sahf
push
push
inc
adc
cmp
cmp
stc
jl
sub
and
jns
imul
bound
fucomp
cwtl
outsb
mov
sahf
rclb
sub
or
movsb
out
jp
adc
mov
sarb
test
dec
or
ja
pop
xor
adc
jnp
pop
sub
push
and
adc
sub
jge
or
fbld
cld
cmp
push
mov
sbb
mov
stos
and
xor
and
imul
inc
push
cld
inc
jge
xor
inc
and
push
sub
sub
adc
inc
fs
sbb
inc
xor
and
inc
and
inc
sub
and
loop
mov
nop
popf
jae
sub
add
xchg
or
js
cmp
pop
icebp
sarl
lods
xchg
scas
adc
cmp
and
fucomi
jne
adc
aad
push
dec
add
add
sbb
mov
out
inc
lret
fs
jnp
push
out
jae
and
mov
mov
nop
dec
jle
lret
cmc
and
mov
icebp
dec
nop
mov
jo
inc
mov
sub
cmp
xor
das
aam
dec
mov
js
mov
cmp
dec
stc
shrb
dec
jp
into
stos
mov
clc
fidivs
fistpll
inc
xchg
dec
mov
lds
pop
dec
push
sbb
push
adc
jmp
sub
dec
shll
dec
sahf
dec
inc
cmp
out
mov
bound
pop
xor
cld
sqrtps
ljmp
or
push
test
aas
sub
sbb
dec
and
lcall
sub
outsl
pop
adc
jne
dec
int
out
jnp
inc
lock
rclb
popf
pop
xchg
decl
loop
aaa
scas
pop
mov
lods
pop
or
stc
cmp
or
dec
and
mov
jecxz
push
adc
and
shrl
test
cmp
cmp
adc
clc
add
lea
popa
mov
imul
add
mov
in
xor
call
mov
loopne
inc
push
push
cmp
pop
or
daa
fmull
ret
clc
xor
mov
jne
cmc
cmp
jg
mov
leave
or
inc
mov
pop
fistpl
jl
imul
cld
push
in
mov
cmpsb
ret
add
in
jnp
jg
xlat
or
mov
mov
ror
or
mov
imul
xor
mov
mov
pusha
cmp
sub
pop
mov
add
adc
pop
inc
and
jl
rcrl
or
pop
inc
test
sub
mov
daa
ja
in
or
or
mov
or
or
push
mov
jb
imul
xor
mov
and
loop
js
test
xor
jns
dec
xor
xor
sub
and
add
pushf
arpl
insb
sbb
or
or
adc
inc
fisubl
fs
or
push
jo
jb
sbb
dec
popa
xchg
fs
adc
xor
cmp
js
ja
adc
gs
jo
mov
or
mov
push
pop
mov
arpl
adc
insb
imul
push
xchg
outsb
sub
or
push
orl
and
dec
push
adc
jb
mov
sub
adc
in
push
jo
mov
xor
xchg
xor
dec
sub
sbb
ss
or
jl
outsl
adc
and
shld
lock
adc
add
adc
add
xchg
fwait
enter
inc
dec
xchg
insl
sub
and
or
and
cmp
inc
das
stos
pop
in
mov
and
daa
xlat
and
pop
jne
sbb
and
add
pushf
stos
mov
je
mov
mov
mov
inc
bound
or
jg
lcall
imul
stos
jb
insb
add
sarb
mov
inc
jo
inc
add
sti
sbb
in
inc
hlt
xor
movsb
xchg
popf
adc
dec
in
or
hlt
cli
hlt
xchg
sar
lods
push
and
or
adcl
push
and
aam
jmp
dec
pushf
nop
hlt
xchg
inc
mov
xor
or
shrb
nop
dec
in
or
icebp
or
mov
popf
dec
or
clc
xchg
icebp
nop
int3
jbe
bound
je
dec
jne
scas
movsb
push
pmulhw
les
mov
das
aam
scas
movsl
mov
jnp
mov
dec
and
scas
pushf
mov
jne
and
out
lds
pop
mov
pop
mov
or
inc
int
push
inc
xor
pop
ja
into
mov
jge
in
loopne
adc
sbb
enter
sub
sub
xorb
inc
dec
add
and
add
cld
aas
ficomps
xor
and
adc
mov
inc
pop
mov
rorb
loopne
sub
or
pop
test
add
pop
jne
cwtl
mov
jmp
addr16
sub
cmpsl
cmp
sarb
jge
or
jne
sbb
loopne
cmp
fs
call
inc
cmp
push
popa
jns
or
or
dec
enter
or
adc
and
xchg
sbb
setne
inc
pushf
pop
mov
ja
jns
inc
xchg
pop
xchg
movzwl
add
push
push
pop
or
or
or
or
or
or
inc
adc
mov
adc
and
dec
adc
inc
sbb
mov
adc
and
inc
sbb
add
and
jp
or
dec
mov
inc
icebp
add
adc
inc
dec
push
xchg
push
fwait
mov
fists
cld
or
mov
inc
and
dec
fs
jb
addb
stos
adc
mov
or
push
add
lcall
xchg
add
push
test
frstor
or
xchg
or
out
adc
or
inc
push
leave
or
inc
push
and
mov
push
inc
adc
sub
adc
xor
inc
adc
xor
adc
cmp
inc
adc
cmp
adc
push
and
and
inc
sbb
dec
in
and
inc
sbb
push
in
and
inc
sbb
pop
in
and
jmp
and
imul
arpl
mov
and
adc
and
or
and
dec
daa
mov
push
roll
test
movhps
sbb
imul
inc
or
mov
rorl
test
flds
adc
jne
cwtl
jge
add
scas
lods
movsl
pop
loope
js
lahf
mov
test
popa
cmovo
pop
das
push
inc
xor
clc
push
add
cmp
mov
add
cli
in
add
or
decl
repz
sub
sbb
aad
jmp
adc
imul
mov
push
andb
clc
and
cmc
in
ja
fs
in
dec
fadd
rolb
lret
es
dec
and
adc
sbb
call
and
dec
adc
repnz
out
xor
repnz
dec
or
add
mov
das
mov
mov
js
mov
adc
and
push
leave
or
adc
lcall
shr
or
sti
mov
lods
pusha
dec
xor
into
adc
sub
sub
loopne
xor
sbb
nop
stos
pop
sub
add
push
sub
push
sbb
in
dec
addr16
adc
cmpsb
inc
dec
out
push
add
mov
and
mov
or
push
je
sbb
add
push
cmc
loop
fdecstp
imul
push
insb
push
outsl
jo
or
push
adc
adc
and
jo
nop
mov
mov
sbb
dec
sbb
pusha
mov
dec
mov
sarb
and
jmp
test
inc
xchg
loope
inc
jg
loopne
sbb
aaa
popa
ss
push
leave
push
jg
fmull
inc
dec
fcoms
subl
sub
jne
or
pop
jp
movsb
or
pop
adc
jmp
test
cld
sbb
inc
test
mov
dec
pushf
inc
cli
icebp
push
push
dec
std
nop
movsb
fcoms
or
or
inc
or
daa
ljmp
loope
add
cmc
pushl
les
insl
aad
pop
orl
movsl
pushl
popf
incb
mov
xor
xor
inc
push
adc
cmp
stos
jmp
adc
adc
adc
mov
call
dec
lock
inc
outsl
arpl
imul
sub
sbb
mov
loop
adc
cld
lahf
push
sbb
dec
jg
hlt
clc
sbb
push
jno
add
and
push
les
inc
inc
arpl
xchg
inc
popf
scas
cmp
jno
pop
xchg
pop
mov
dec
in
xor
xchg
mov
and
imul
cmp
and
stc
cwtl
icebp
and
inc
and
subb
push
inc
sbb
jge
fwait
icebp
and
mov
pop
jle
pop
adc
lods
lods
and
push
push
daa
or
sub
sub
sub
sub
mov
push
and
inc
in
add
js
xchg
repnz
push
jb
imul
xor
enter
pop
sahf
sbb
or
fs
inc
daa
adc
addr16
cmp
repnz
jo
xor
or
sbb
jg
and
lret
mov
fcompl
mov
lds
and
adc
data16
testb
scas
mov
push
xchg
loopne
adc
inc
mov
jl
aam
lock
cmp
scas
pop
push
ret
inc
pop
imul
inc
js
or
mov
or
inc
ffreep
pop
inc
cwtl
fnstenv
aam
or
add
push
mov
pushw
or
push
js
push
adc
mov
cmp
or
clc
inc
mov
mov
inc
add
jnp
sub
and
adc
adc
add
in
inc
movsb
push
dec
xchg
insb
push
or
js
popa
bound
xor
add
ja
rorl
jl
cmpsb
push
dec
aaa
cmp
jae
decl
or
dec
cwtl
push
imul
sbb
sti
out
loope
push
aas
inc
xor
or
call
adc
loope
and
repnz
or
jnp
mov
dec
xchg
mov
dec
inc
bound
pop
jne
pop
dec
pushf
mov
mov
or
pop
pop
mov
addb
dec
loop
es
mov
inc
mov
cmp
cmc
mov
pop
adc
scas
or
cld
mov
and
adc
sub
mov
mov
scas
cwtl
fcomps
mov
cld
sbb
cwtl
mov
cli
repnz
xchg
or
pop
lock
pusha
xor
mov
pop
xchg
fadds
insb
sub
adc
add
pop
pop
cmp
dec
mov
dec
push
stos
insl
or
mov
pop
sbb
or
aad
jge
shll
adc
pushf
and
cld
jae
test
push
dec
int3
inc
rorb
ds
test
dec
aas
adc
mov
jmp
movsb
push
lods
pop
dec
enter
pop
inc
xlat
sahf
or
mov
mov
add
push
dec
or
int3
dec
push
dec
add
enter
jo
dec
sub
mov
xor
or
and
push
movsb
adc
mov
mov
dec
shrl
or
movsl
push
mov
jp
into
clc
repnz
mov
notl
sub
aam
push
adc
fmull
jg
adc
pop
jmp
adc
sbb
adc
lock
adc
sub
mov
or
jo
cwtl
push
dec
lods
jl
pop
icebp
pop
gs
in
sub
mov
inc
les
and
add
sarb
sbb
mov
shlb
popf
dec
jns
xchg
adc
cmp
pop
pop
ficoml
test
rolb
aam
cmp
mov
mov
das
je
push
pop
pinsrw
sbb
fcompl
rorb
addb
clc
xor
dec
xor
lea
xchg
or
xor
adc
or
jns
or
dec
dec
aad
xchg
imul
js
ljmp
jp
mov
repnz
adc
xor
lods
data16
dec
int3
scas
mov
cs
adc
punpckhwd
stc
adc
stos
jge
iret
adc
xor
lods
int3
adc
popa
jne
je
push
jle
adc
adc
adc
xchg
push
mov
dec
aaa
repnz
mov
shll
push
gs
and
cmp
out
enter
pushl
jns
push
and
imul
dec
incw
sbb
dec
jb
cmp
aas
insb
and
imul
and
add
cmp
outsl
sbb
and
lds
test
mov
push
and
mov
sub
es
ffree
pop
dec
and
daa
dec
sub
enter
sub
push
roll
je
push
mov
je
xchg
xchg
sub
in
test
mov
es
jb
cmp
dec
call
and
xor
das
aas
dec
and
inc
sub
push
push
nop
das
mov
add
mov
jnp
push
inc
outsb
xor
jmp
ret
das
pop
call
adc
jns
scas
adc
inc
mov
dec
cmpb
or
mov
popf
and
xor
dec
sub
mov
inc
mov
int3
gs
aad
bound
push
sbb
inc
cmpsb
int3
push
pop
adc
and
mov
aad
mov
aam
push
cmp
stos
or
mov
popa
mov
mov
adc
add
jge
mov
divl
add
dec
adc
pop
sti
insb
cltd
xor
push
push
stos
shl
nop
add
cld
push
or
adc
jne
mov
lock
xor
mov
decl
lea
mov
pop
out
and
push
push
lods
sbb
ljmp
push
cmc
das
cld
mov
movsb
jmp
iret
out
rorl
rcll
sub
scas
mov
push
ljmp
adc
stos
mov
xor
or
outsb
cmp
pop
mov
xor
stos
mov
ret
out
push
inc
fildll
imul
and
fisttpl
xlat
dec
rcll
mov
inc
repz
jmp
or
xchg
aas
inc
ret
das
lcall
mov
mov
adc
push
movsb
sub
add
push
pushf
inc
adc
mov
rcl
sbbb
ret
in
jmp
mov
dec
or
mov
insl
jecxz
les
stos
in
adc
dec
std
mov
jmp
incl
out
enter
push
mov
jecxz
lea
dec
ljmp
sub
jmp
or
adc
cwtl
aad
mov
pop
in
xchg
inc
cltd
push
xchg
dec
repnz
inc
xchg
adc
aas
sbb
sub
or
inc
loope
fldenv
push
push
lea
arpl
movsl
jg
dec
mov
loop
dec
mov
sub
mov
aaa
jge
xchg
jl
or
mov
pop
mov
movsl
loop
push
dec
adc
js
out
push
negb
and
xor
lea
mov
mov
cwtl
mov
cld
sti
dec
adc
scas
fwait
cmp
sti
fdiv
cli
mov
cmp
jp
mov
pop
xchg
mov
pop
jnp
or
iret
xor
lds
mov
pop
xor
pop
hlt
cli
fdivl
xchg
pop
sbb
dec
adc
mov
mov
mov
stc
push
clc
cmp
xor
inc
adc
jns
adc
mov
cmc
and
inc
lds
dec
cmp
mov
sbb
and
inc
xchg
pop
mov
push
fbld
sub
stos
aaa
fcmovu
jae
or
nop
xchg
jp
in
jg
sti
mov
es
mov
pop
repnz
rolb
popf
push
cs
dec
lcall
pusha
add
lds
popa
xor
add
pop
lcall
fsubrs
adc
sub
hlt
sahf
arpl
cld
enter
cmpxchg
and
push
adc
inc
xchg
scas
and
pop
aam
ljmp
jne
xchg
pop
xchg
icebp
nop
cs
xchg
scas
lock
loope
or
dec
push
xor
push
aam
dec
scas
or
sbb
adc
iret
inc
mov
addl
nop
outsb
and
outsl
shlb
call
jno
mov
or
adc
dec
sbb
add
jle
adc
insl
fs
or
cmpsl
jne
ljmp
dec
mov
repnz
adc
xchg
push
mov
and
jp
sbb
loop,pt
and
pop
mov
mov
push
mov
xor
ss
dec
xchg
in
jge
add
inc
adc
repnz
and
push
xchg
je
mov
enter
jle
daa
pop
in
sbbb
faddp
fistpll
cmp
push
icebp
ja
add
or
push
dec
ljmp
ret
pop
adc
dec
mov
insb
mov
nop
xchg
mov
cmp
xchg
testb
fisubs
jmp
push
sub
mov
xchg
and
je
and
stos
sahf
xor
movq
pushf
cmc
subb
sub
outsb
ja
repnz
xchg
outsl
sbb
cmp
mov
inc
dec
nop
mov
push
sub
out
cmp
jbe
dec
sbb
push
cwtl
sar
ss
test
sub
cltd
cmp
sub
cmp
mov
in
adc
inc
mov
dec
adc
lcall
dec
ja
in
adc
jns
mov
sti
scas
fucomi
xchg
ja
mov
jl
js
xchg
dec
jbe
inc
inc
je
pop
fucom
jg
cmp
inc
cmp
jns
or
sbb
das
ja
dec
dec
test
testl
xor
xchg
pop
adc
adc
repz
test
lahf
adc
push
repnz
fs
or
add
hlt
ss
nop
add
xchg
mov
mov
mov
aad
push
and
mov
inc
xchg
adc
and
cmp
mov
pushl
sbb
enter
adc
inc
jo
mov
sahf
adc
sbb
xor
int
sbb
int
and
sbb
mov
jns
xchg
popa
mov
cmp
dec
movsl
or
or
les
dec
push
adcl
dec
push
aad
test
aad
test
sbb
test
adc
push
push
js
icebp
repz
add
cmpsb
call
testb
push
mov
movsl
out
testb
cwtl
sbb
cmc
and
mov
cmovns
pop
pop
cmp
xor
jp
add
xor
mov
test
jle
cmpsb
fistl
push
xchg
stos
idivl
inc
sub
fisttpl
cmp
add
jno
adc
cld
decl
jns
imul
in
pop
adc
or
int3
movsl
push
adc
cmpsl
sbb
loope
out
arpl
and
xor
and
add
jge
jg
dec
mov
or
add
jmp
mov
or
aaa
nop
sahf
leave
push
inc
cmp
movsb
aad
pop
cmpsb
push
mov
lea
lcall
call
cs
pusha
test
cld
inc
add
inc
cld
fisubs
clc
add
fcoms
xchg
call
les
inc
and
ss
aam
xchg
jno
sbb
push
ja
cli
popa
inc
add
jnp
sbb
rorb
repnz
and
mov
les
adc
adc
and
adc
bswap
adc
and
adc
xor
mov
xchg
fstpl
and
inc
sbb
dec
push
sub
xchg
adc
mov
js
sahf
jo
fadds
cmp
pop
cmp
gs
inc
loopne
mov
movsl
andl
mov
addl
jbe
mov
pop
cmpsb
and
ret
and
movb
inc
es
test
push
iret
xor
aaa
je
mov
and
lret
mov
or
mov
xor
xchg
pop
sub
push
ucomiss
int
mov
aam
mov
mov
mov
lods
rcll
push
pop
push
sbb
mov
jg
js
sub
mov
mov
int3
je
nop
cmpsb
pop
sub
push
jns
xor
adc
mov
jbe
inc
clc
rorl
in
and
xchg
adc
and
mov
outsl
sbb
push
xlat
adc
pushl
je
cmp
out
cmp
sbb
shl
test
shrl
iret
sar
xlat
jle
jmp
shl
lcall
bound
pop
jns
or
add
out
adc
fidivl
push
jo
xchg
call
das
xlat
push
sahf
cld
les
rcll
sub
and
xchg
pop
cwtl
ljmp
pop
jmp
loopne
add
dec
push
mov
pop
or
fcmovnb
dec
loop
mov
shrl
sub
mulb
inc
push
aam
adc
or
rcrb
addb
movb
daa
xchg
or
push
pushf
js
adc
push
add
jne
mov
and
iret
jbe
pop
fdivrs
xchg
adc
lods
outsl
mov
cli
mov
pop
std
out
cltd
enter
and
mov
js
test
inc
movsb
cmp
shl
inc
sbb
pop
dec
add
mov
test
mov
dec
pop
lds
push
push
scas
fs
stos
cltd
daa
hlt
data16
int3
inc
adc
push
cmp
mov
sub
shrb
inc
test
ljmp
mov
enter
dec
lea
adc
ret
je
fisttpl
fs
inc
inc
mov
aam
inc
push
bound
insb
daa
jl
xlat
inc
push
mov
gs
lea
dec
pop
dec
cmpsl
das
out
cmp
lds
sbb
sub
mov
dec
dec
push
push
mov
outsl
fimull
fiaddl
mov
pop
lahf
fsubl
int
jns
shr
push
jle
addr16
clc
and
fwait
xor
add
push
xchg
popf
shlb
ficomps
xchg
ficoms
loopne
call
push
rcrb
leave
mov
aad
pushf
pop
sbb
lahf
push
shrb
jb
nop
push
out
and
dec
adc
lea
pop
dec
and
or
leave
dec
cmp
jne
mov
push
mov
fdivrl
pop
jmp
dec
push
or
inc
mov
or
fdiv
dec
add
jp
cmp
inc
inc
push
faddp
nop
dec
stos
iret
mov
push
sahf
out
dec
loopne
fs
jecxz
icebp
jmp
imul
test
out
pop
popa
dec
mov
and
out
daa
test
inc
in
push
dec
cs
jo
loope
mov
in
and
dec
testl
mov
mov
inc
repz
and
mov
je
lahf
jbe
adc
jle
or
insb
cmp
shll
add
ret
and
cmp
sub
mov
or
pop
testb
ret
jp
push
adc
inc
adc
sbb
jp
call
adc
push
dec
sbb
int
mov
or
pushl
push
xor
mov
mov
push
and
sub
and
insl
out
xchg
mov
roll
pop
push
inc
je
push
push
xor
push
sub
stos
cmp
push
xchg
or
push
or
push
bound
fstpl
xchg
xchg
xchg
and
and
and
es
pop
dec
adcl
mov
push
push
orl
jmp
into
data16
std
es
test
or
call
pop
sbb
pushl
and
ds
add
xchg
pop
insb
mov
mov
fcomip
adc
movsl
rcll
add
xchg
scas
xor
pop
sbb
mov
sbb
xchg
pusha
loop
dec
add
sbb
sbb
cld
add
mov
pop
adc
mov
aas
nop
mov
and
cli
xchg
popf
fmull
fs
dec
sub
stos
push
inc
xor
mov
shl
and
push
dec
mov
dec
cs
test
and
out
inc
repnz
mov
push
enter
xlat
cmp
pushf
push
leave
add
dec
popf
mov
repz
aas
mov
icebp
enter
test
or
mov
sbb
std
out
mov
jg
xchg
inc
or
mov
addl
mov
mov
add
mov
cmp
push
pop
inc
adc
mov
out
adc
pusha
dec
lods
scas
clc
mov
or
push
sti
lret
dec
or
shrl
push
in
mov
cmpl
aaa
sub
adc
mov
or
push
xchg
shr
ja
or
loop
mov
push
inc
dec
jae
outsl
jmp
adc
push
push
sbb
das
bound
push
dec
add
lods
inc
push
jle
inc
inc
sbb
out
popf
dec
jg
dec
sahf
or
xchg
inc
xchg
mov
and
lock
jg
mov
adc
add
dec
add
mov
in
dec
mov
dec
lds
cwtl
shr
mov
mov
test
or
out
cmp
fsts
add
ds
inc
or
jle
mov
ret
dec
js
pop
mov
mov
jne
push
push
push
inc
shll
push
cmp
sub
or
ja
sarl
scas
mov
mov
pop
leave
add
and
jne
call
adc
add
pop
mov
xchg
je
or
xchg
mov
push
test
sub
and
sti
pop
xor
out
lret
test
jmp
dec
out
and
sub
js
loope
pop
test
ds
jle
imul
add
cmp
dec
aad
mov
data16
lock
leave
mov
and
ret
mov
fcmove
mov
jge
test
push
xchg
inc
sub
mov
inc
or
test
and
loop
mov
in
test
mov
sub
xchg
push
jecxz
and
call
mov
mov
mov
and
inc
push
and
sub
daa
cmp
mov
std
sarl
cld
jno
and
inc
cs
shl
in
xchg
or
jnp
add
cmp
sbb
add
mov
xor
mov
push
push
jb
cmp
inc
mov
bound
aas
and
inc
pop
or
clc
xchg
jne
cs
scas
sub
push
out
arpl
movaps
mov
dec
adc
adc
notl
xchg
adc
inc
cmp
jmp
std
insl
cwtl
mov
insb
push
push
daa
jmp
cmc
xchg
fs
fdivrp
cmpsl
cmc
xor
cmp
dec
push
push
xorb
mov
xor
fdivrp
dec
ljmp
mov
ficoml
cld
xor
ds
and
nop
sub
dec
test
and
divb
jmp
in
jno
sbb
lock
push
cmpb
pop
pop
and
jge
lret
mov
jnp
addr16
mov
jecxz
and
fwait
sbb
repz
jmp
fwait
imul
test
push
inc
jne
push
sub
int
and
jmp
adc
mov
rolb
pop
inc
jo
mov
mov
xchg
adc
cmp
or
xor
dec
or
mov
sub
nop
fucompp
outsl
xor
xchg
fcompl
dec
adc
fldenv
dec
adc
or
pop
mov
add
repnz
cmpb
mov
je
pop
jmp
out
fs
pop
xor
shlb
loope
jne
mov
or
dec
es
imul
sub
incl
or
mov
stos
inc
outsb
add
push
jmp
pop
dec
adc
xor
lods
jmp
jg
jg
fisttps
dec
mov
sub
adc
cmp
sbb
stos
cmp
xchg
mov
xchg
pop
pop
or
or
loopne
testb
mov
adc
out
jns
add
inc
xor
xor
nop
inc
and
adc
and
and
cmpsl
lds
cmpsl
push
rcl
sub
dec
inc
jge
cmp
jno
ljmp
ja
sub
or
jge
mov
movb
pop
cmpsl
mov
inc
scas
pop
mov
popa
std
add
inc
dec
mov
aaa
inc
sub
xor
or
xchg
shll
jns
mov
movl
pop
movsb
jecxz
pushf
dec
mov
or
ja
xchg
sub
and
repnz
pop
push
jns
popa
inc
je
movsb
sbb
icebp
orl
push
push
in
sbb
dec
sbb
into
pop
cmp
das
aam
ret
es
pop
lahf
aam
mov
jne
pop
push
mov
cltd
and
stc
mov
xchg
lods
aad
into
xchg
cli
mov
sub
mov
jmp
xchg
cld
std
aas
repz
pop
mov
outsb
not
and
jno
add
xchg
mov
cli
insb
test
push
cmp
cli
cmp
fidivl
outsb
out
and
sub
daa
or
jns
outsb
pop
inc
mov
int3
push
mov
nop
shll
mov
aam
adc
add
movb
jg
push
lret
lcall
mov
dec
out
xchg
mov
shrl
or
push
or
int
nop
pop
xchg
movsb
rolb
dec
sub
call
cmp
dec
pushf
xor
in
mov
lret
movb
pop
sub
adc
lock
jmp
or
not
pop
xchg
js
jge
add
lret
cmpsl
pop
mov
and
dec
mov
add
xor
cmp
fs
fsubrl
insl
std
add
movl
and
addr16
jp
js
std
or
rcl
push
inc
inc
and
icebp
rcpps
mov
push
pop
xorb
dec
hlt
mov
gs
sub
jg
addr16
insb
das
dec
fisubs
outsl
xor
dec
mov
call
cmp
add
xor
cmp
lds
repnz
ud2
mov
cmp
loopne
add
push
nop
ret
lds
mov
push
cmpsl
lea
adc
nop
and
inc
mov
cmp
adc
push
mov
push
dec
cmc
test
push
add
je
jno
xchg
sub
call
dec
fcompl
and
jbe
dec
adc
loopne
xor
lods
daa
pop
hlt
pop
push
or
add
daa
pop
insw
repnz
cmp
bound
pop
je
push
inc
popf
pop
mov
dec
or
shlb
jle
fsts
cld
mov
jl
icebp
aas
cmp
mov
pusha
loop
test
push
in
cwtl
add
pop
or
or
push
or
push
xor
mov
imul
push
ja
je
sub
hlt
hlt
lret
das
out
adc
jbe
jo
popa
inc
inc
enter
fnsave
enter
dec
decb
loop
test
fcoml
adc
sub
inc
ret
cmc
or
pop
jns
mov
loop
sub
stos
pop
add
aaa
sub
test
lcall
xchg
aad
hlt
les
scas
lods
fdivr
dec
push
jl
and
inc
jl
lods
fstpl
in
sub
addl
loopne
lahf
pop
aam
or
pop
mov
adc
lret
pop
xor
dec
or
pop
and
xchg
inc
xchg
iret
pop
sbb
mov
dec
xchg
stos
aad
push
cmc
or
push
movsl
mov
enter
pop
and
insl
jne
jge
test
and
push
adc
xchg
cld
mov
pop
or
adc
jns
cmp
leave
xor
mov
fs
or
mov
add
enter
mov
das
dec
outsl
xlat
xor
add
and
adc
or
push
push
push
adc
mov
mov
fdivl
inc
gs
push
or
dec
test
jne
andl
sbb
cltd
loope
out
mov
adc
or
push
cltd
scas
and
jne
pusha
cmp
add
sub
and
adc
movsb
cli
push
cld
rorb
dec
cmp
inc
aas
in
shrb
xchg
clc
das
mov
inc
in
pop
lret
adc
in
or
adc
lods
adc
cmp
adc
lods
pop
nop
lret
outsb
dec
and
dec
ret
push
sub
dec
enter
pop
das
in
adc
dec
xchg
sbb
dec
mov
inc
cltd
lahf
stc
xchg
pop
push
data16
jmp
cmp
in
jnp
adc
cmp
jmp
cmc
lock
pop
cmp
cmp
push
pop
xor
jg
dec
push
das
je
out
xchg
xchg
mov
sbb
pop
stos
jno
cmp
add
pop
fcoms
jg
addr16
stos
adc
cmp
add
and
mov
pop
rcrl
push
sysenter
or
leave
jae
push
das
sub
stc
shlb
xchg
jl
cld
xchg
imulb
pop
test
inc
sbb
dec
notb
bound
mov
push
mov
xchg
adc
repz
inc
mov
cwtl
hlt
sub
call
push
xor
xchg
adc
loop
pop
lea
jb
push
hlt
push
dec
sbb
cmp
xchg
push
dec
add
adc
push
push
out
adc
add
mov
in
test
call
adc
sub
cwtl
and
xor
clc
int3
sbb
jg
fisttps
dec
dec
mov
sbb
push
or
movb
xchg
xchg
sbb
push
mov
mov
adc
xchg
xchg
inc
or
stos
cwtl
dec
mov
mov
lods
xor
sbb
xlat
or
adc
add
add
add
lea
and
movsb
add
push
cmp
mov
aaa
movb
rorl
nop
inc
enter
mov
xchg
or
imul
pop
gs
push
das
mov
aaa
adc
mov
fidivrs
daa
cli
inc
xor
repnz
jbe
pop
stc
xchg
in
add
insl
jo
inc
nop
cmc
loop
xchg
clc
sbb
and
imul
or
jns
movlps
imul
lods
bound
clc
shl
lret
xchg
insl
cmpsb
testl
out
repz
xchg
and
add
push
push
inc
sbb
aaa
sbb
nop
xchg
xchg
pop
xchg
aam
push
lock
popf
insb
mov
mov
xchg
sysenter
xchg
in
cmpl
and
push
sbb
add
or
xor
ja
jne
dec
mov
call
fistpl
mov
inc
xchg
inc
inc
push
push
lock
push
mov
dec
mov
lea
push
das
shlb
dec
or
adc
jge
scas
cmc
sbb
lock
stc
xor
mulb
insb
adc
mov
pop
lods
dec
hlt
lds
mov
imul
or
clc
stos
dec
push
adc
xor
adc
stos
pop
and
nop
sbbl
xor
pop
xor
dec
push
pop
add
dec
dec
inc
dec
push
ret
out
or
scas
sbb
rorb
mov
xor
loop
ret
adc
inc
or
or
mov
call
push
filds
mov
ljmp
fidivrs
call
andb
hlt
rcrb
cmp
jne
mov
add
out
sbb
call
cmp
jle
add
cmp
mov
out
repz
insl
push
pop
imul
and
out
or
sarl
pop
jmp
in
pop
cmpb
xchg
sbb
rolb
lea
inc
fsts
fwait
addr16
divl
add
push
or
adc
jae
dec
aad
std
jae
bnd
popa
int3
cmc
outsb
push
push
xor
popf
fadds
bound
sbb
jbe
xchg
imul
inc
xchg
outsb
jl
ficomps
mov
mov
cli
sub
je
outsb
pop
pop
popa
test
outsl
push
and
cmp
or
adc
test
adc
mov
adc
test
stc
mov
outsl
out
movsl
dec
and
inc
subl
cmp
or
push
test
mov
sbb
mov
cmc
jo
out
mov
pop
or
jo
pop
cwtl
js
mov
adc
and
adc
pusha
test
lods
mov
test
lock
stc
or
xor
enter
xor
imul
out
leave
repnz
fadd
jns
rorl
aam
mov
or
cs
push
pop
ljmp
rclb
sbb
lret
cli
adc
lock
movb
dec
cmp
add
pushl
rorb
dec
add
je
outsl
jb
mov
and
mov
adc
cltd
cmp
and
mov
and
or
or
jno
stc
mov
inc
lock
add
stc
in
jmp
sbb
add
sub
int3
and
sbb
mov
or
mov
add
cwtl
jb
lock
jae
adc
xor
jnp
lock
ret
lods
add
lea
xchg
xorb
push
data16
lock
cld
movaps
xchg
lahf
or
mov
or
or
inc
shlb
in
mov
stos
pop
std
roll
sbb
insb
push
decb
xchg
mov
ja
cld
mov
pop
or
fildll
jo
in
sahf
xchg
ja
inc
das
cld
jbe
sbb
lock
jns
cmp
sub
das
icebp
and
loopne
and
jle
fwait
adc
lret
fs
jl
add
in
leave
aam
or
adc
pop
pop
adc
jno
popa
sarl
clc
int
loope
jne
adc
dec
popf
sbb
test
pop
push
lods
mov
or
lret
jno
and
cs
sub
pushf
sub
sub
push
cwtl
out
loop
jmp
into
or
xchg
ja
sub
push
mov
ja
mov
lods
inc
adc
mov
jecxz
loop
adc
jns
or
cs
ja
and
pop
lods
dec
enter
or
in
cld
or
call
inc
test
push
pushf
cwtl
xchg
ja
pop
adc
dec
psubd
daa
xor
xor
decl
call
mov
das
mov
push
adc
in
xor
out
sahf
nop
int3
js
sbb
call
je
ds
inc
cmp
jl
sub
mov
cld
jge
adc
sub
or
jnp
lahf
pushf
ds
xor
rclb
rorb
fmull
or
xchg
pop
test
jo
jnp
test
add
push
leave
push
rclb
or
jg
pop
movsl
xchg
ja
push
jle
or
add
js
pop
lods
jg
push
daa
seto
mov
hlt
cmp
out
and
xorl
mov
inc
movsb
jl
xor
push
pop
sbb
or
or
jg
bnd
sbb
je
js
jg
flds
lret
test
pop
ds
lock
scas
xor
lea
jle
pop
leave
pop
ja
cmpsb
adc
sub
sub
rcll
pop
and
mov
mov
sbb
repnz
sbb
leave
push
inc
pop
out
cmp
ret
sar
je
dec
mov
aad
mov
mull
popa
into
inc
or
add
ljmp
add
push
xchg
and
xor
ljmp
mov
pop
and
shrl
adc
sub
aas
xor
daa
and
cli
fisubrl
adc
scas
fwait
push
adc
scas
mov
and
push
push
lret
clc
das
inc
std
adc
test
push
mov
add
push
movsl
jg
ds
mov
and
mov
and
mov
daa
fnstsw
pop
or
in
jbe
out
repz
mov
mov
cmp
shrb
jp
mov
stos
ss
mov
int
and
adc
jmp
mov
fistpll
scas
dec
mov
push
es
push
jno
xor
xor
mov
and
adc
fadds
inc
xchg
shll
and
cmp
jne
int
cmp
add
cmp
in
xchg
push
rorl
sahf
jmp
adc
add
into
lea
icebp
scas
jb
mov
lahf
shlb
inc
popf
cmc
sbb
inc
add
push
scas
xor
adc
bound
cwtl
mov
dec
das
jne
jns
pop
sub
jae
adc
in
xchg
cmpsl
cwtl
add
mov
or
rcrb
sti
cmp
repnz
imul
out
push
xchg
sti
fsubs
pop
mov
inc
mov
push
or
andb
cmp
cmpl
pop
cltd
jp
aad
sarl
and
sub
mov
lods
mov
xchg
mov
data16
dec
imull
mov
inc
push
enter
in
mov
fs
adc
xchg
ljmp
fsubrl
das
aad
add
add
xchg
pop
repnz
mov
dec
xor
cwtl
pop
out
jnp
pushf
or
cmp
mov
insb
pop
pop
and
xchg
sub
sysexit
andl
push
cmp
icebp
imul
push
repz
inc
cmp
sub
inc
ja
stos
aad
pop
in
sbb
test
xchg
mov
sti
mov
jae
inc
push
inc
mov
hlt
lock
inc
push
jae
cmpl
jae
dec
sbb
sahf
inc
add
push
or
popf
loop
dec
les
xor
inc
sub
sub
shll
jne
mov
mov
xchg
pop
sub
sub
inc
dec
cld
and
mov
popa
inc
daa
imul
adc
pop
pop
dec
cmp
fmull
push
daa
push
lcall
leave
jl
loope
js
xorb
xor
inc
negb
aad
xchg
and
imul
sub
or
jae
inc
mov
pop
in
push
dec
fimull
xchg
pop
je
xorl
outsl
pop
xchg
jle
outsl
mov
mov
iret
inc
pop
fdivrs
pop
je
and
call
shrb
cmp
inc
dec
stos
xor
mov
mov
cmp
sub
xlat
scas
fistpll
imul
test
and
inc
push
dec
pop
xor
stc
push
pop
aas
mov
mov
jmp
sbb
sti
inc
movb
cmpl
push
and
jle
icebp
pop
loopne
cmp
xor
mov
loope
nop
pop
nop
pop
test
aam
je
insl
xchg
stc
fs
dec
jo
movsb
mov
fidivrl
mov
lahf
sbb
inc
push
pop
cld
add
pusha
mov
movsb
sbb
rolb
ljmp
pop
xchg
and
push
call
mov
mov
je
pop
out
sub
jnp
pop
lret
mov
test
inc
xchg
sub
and
fildl
xchg
push
mov
cltd
cmp
xor
jmp
loopne
cmp
je
loope
xchg
dec
mov
lock
into
jne
or
mov
out
jmp
sub
sbb
mov
mov
xor
fistpl
mov
or
or
movsb
fwait
lods
mov
push
cmpb
dec
lods
cmc
jge
xor
outsb
sub
pop
and
imul
insb
test
repnz
inc
or
stc
sti
imul
int3
mov
jno
jb
sbb
nop
adc
push
faddl
sub
sub
das
mov
lret
sub
lret
mov
jg
hlt
mov
push
data16
mov
sahf
int3
adc
mov
pop
xchg
jge
insl
and
cli
enter
scas
popa
sti
and
push
aam
dec
jl
testb
pop
hlt
stos
cmpsb
fs
das
cmc
xchg
lcall
enter
or
leave
adcb
ljmp
js
xchg
xchg
xchg
push
xchg
adc
xchg
fstl
fdivs
mov
adc
fwait
pop
int3
jns
or
inc
popa
push
dec
outsb
xchg
add
inc
jmp
or
imul
cli
shld
stc
arpl
jne
jae
push
xor
cmp
xor
inc
push
xchg
aas
push
cli
adc
add
loop
pop
je
cwtl
pop
adc
addb
mov
stos
lods
jb
stos
fsts
add
sbb
orl
outsb
or
push
into
loop
mov
in
and
add
pop
sub
cmp
popf
adc
inc
pop
dec
enter
and
add
xchg
and
stc
and
or
jb
mov
orb
push
loop
push
idivb
mov
sub
mov
add
xor
inc
push
or
dec
shlb
push
adc
imul
xor
inc
int3
push
dec
push
xchg
pop
xor
mov
pop
pop
push
insl
outsl
adc
inc
xor
mov
fs
add
push
movsb
out
fs
fdivrs
std
lcall
stc
or
insl
bound
je
lcall
int
repz
daa
mov
scas
leave
mov
inc
xor
pusha
outsl
ja
cld
popa
cmpsb
xchg
jno
test
or
mov
dec
dec
xchg
lods
mull
popa
js
xchg
pop
and
sbb
out
dec
push
adc
and
in
inc
inc
in
insb
inc
mov
jecxz
cli
mov
call
je
xchg
mov
mov
push
jbe
nop
push
inc
mov
dec
cmp
pop
add
cmp
shlb
and
or
or
and
and
in
mov
sbb
jbe
js
xchg
aaa
push
popa
xchg
mov
popa
or
ljmp
mov
gs
inc
jp
leave
inc
sub
cmp
and
fimull
stc
add
push
inc
pop
in
or
mov
aas
sub
inc
or
push
push
popf
xchg
cmp
or
pop
test
unpcklps
or
or
push
mov
cwtl
addr16
mov
push
and
xchg
mov
add
or
shll
jb
jno
imul
inc
push
ljmp
int3
inc
std
das
mov
dec
xor
loope
es
fs
or
test
adc
add
loope
int
cmp
cmpsb
add
scas
cmp
insb
pop
leave
xchg
mov
or
xchg
xor
data16
or
push
stos
or
xor
adc
inc
jns,pn
inc
ds
inc
add
je
mov
and
mov
jns
js
insl
mov
xor
pop
data16
push
cwtl
cmpsb
insb
push
xor
addb
movsl
push
mov
dec
or
dec
xor
mov
add
xchg
cwtl
add
or
outsl
xor
scas
inc
or
xchg
sub
or
adc
ljmp
or
mov
push
cmova
inc
fisubs
adc
cltd
dec
adc
dec
ja
inc
adc
lret
sbb
inc
sahf
sbb
in
or
fs
pop
mov
push
jb
stc
lods
sti
xor
adc
pop
or
in
xchg
mov
les
push
cmp
xchg
pop
mov
rolb
jecxz
sub
and
fildl
push
pusha
adc
or
mov
test
adcb
inc
test
push
gs
mov
mov
popa
cmovs
or
adc
push
test
int3
pop
or
xchg
dec
jne
adc
pop
push
push
dec
bound
mov
movd
sub
inc
push
mov
nop
mov
jb
dec
dec
xchg
test
sub
mov
adc
nop
push
inc
adc
test
movsb
xor
add
jae
push
push
push
imul
mov
fsubrl
mov
and
adc
cld
and
push
cmp
insl
insl
sbb
add
repnz
cmp
and
jmp
arpl
sub
mov
xor
or
xor
xchg
sub
sub
int3
push
xchg
adc
clc
add
les
rclb
sar
and
dec
out
pop
inc
ret
mov
inc
sbb
adc
or
cmp
int
xor
out
mov
jbe
movsb
lret
inc
cwtl
lret
inc
or
mov
and
add
in
adc
pop
in
mov
pop
and
add
in
clc
jl
test
repnz
or
popa
mov
sub
out
sub
int
ds
dec
test
idivl
dec
xor
mov
push
daa
push
aaa
push
orl
add
leave
and
pop
xor
sarb
cld
sbb
and
add
adc
push
mov
lret
hlt
mov
cmc
call
add
add
lcall
sbb
iret
sub
cmp
decl
in
mov
leave
mov
fsts
lahf
lods
lahf
rcll
in
int
int3
aas
stos
aas
leave
adc
out
xor
aam
insb
and
mov
and
inc
mov
and
ljmp
adc
inc
or
testb
add
sbb
mov
mov
fdivs
sbb
adc
add
adc
and
adc
fnsave
push
or
xor
enter
lods
cltd
popa
mov
sub
pop
in
or
cmpsb
push
mov
or
enter
sub
adc
dec
ss
xchg
test
test
add
call
pop
dec
mov
js
dec
shrb
adc
adc
and
inc
cmp
insb
sub
push
xchg
adc
call
scas
call
test
xchg
push
or
and
pop
pushf
push
mov
pop
push
or
mov
lods
mov
sahf
ja
or
pop
in
loope
jle
xchg
rorb
dec
and
or
or
sbb
lgs
dec
loope
aam
sti
adc
inc
mov
outsl
mov
repnz
in
or
loop
in
mov
xchg
mov
xor
jecxz
adc
pop
test
mov
adc
sub
and
dec
xchg
push
adc
mov
dec
popf
sub
xchg
nop
inc
jo
xchg
ja
movl
fs
std
out
clc
cmc
push
outsb
adc
and
dec
mov
leave
and
bound
push
scas
xchg
ja
ss
cmp
cmp
mov
mov
sbb
popf
mov
std
xor
sbb
mov
add
add
call
sub
adc
repz
repnz
adc
pusha
dec
test
dec
in
sub
mov
inc
inc
cmpsl
inc
and
xchg
push
icebp
and
push
push
mov
lods
adc
dec
ljmp
lahf
addb
push
pop
imul
push
inc
test
inc
jp
sti
adc
xor
gs
inc
movsl
in
sub
out
jecxz
jge
add
lods
dec
jle
sbb
sub
hlt
inc
pop
and
sbb
pop
or
addl
push
aad
push
adc
or
pop
shr
sub
mov
stc
sbb
mov
or
inc
push
and
dec
xor
pop
sub
dec
mov
aas
add
scas
jl
repz
pop
jbe
pop
cwtl
dec
jo
jb
inc
movsb
fisubrl
sub
cld
xor
aas
scas
scas
xchg
cs
dec
insb
fs
movsl
mov
int
jb
imul
lods
push
sbb
div
jb
inc
jmp
push
xor
xchg
mov
movsl
jnp
xor
push
push
imul
stc
adc
push
jp
xor
xchg
pop
xchg
fdivrl
xor
fwait
xor
and
inc
xor
adc
call
and
inc
daa
addr16
loop
dec
cmp
loopne
xlat
mov
std
mov
sbb
mov
cmp
test
jne
push
gs
xchg
enter
pop
test
int3
inc
sub
mov
push
call
and
jp
bound
aad
fnsave
loopne
mov
xchg
add
pop
and
adc
std
getsec
mov
mov
dec
outsb
pushf
cs
xchg
mov
cmp
lods
cmp
lock
mov
das
push
in
jp
es
ds
aad
pop
dec
insl
fnstcw
dec
and
das
or
mov
and
inc
mov
xchg
enter
adcl
adc
cltd
xchg
scas
aas
arpl
sbb
cmc
movsl
insb
jle
loopne
mov
xchg
pop
dec
jb
and
scas
cmp
and
dec
pushf
inc
sbb
dec
gs
sahf
outsl
jns
and
cs
repz
orb
daa
jnp
dec
fnstenv
mov
dec
mov
mov
cwtl
jo
mov
mov
sub
div
and
mov
repnz
testl
jnp
inc
mov
ficoml
shlb
dec
adc
insl
pop
das
adc
and
mov
xchg
repnz
ja
mov
js
xor
test
movsl
fcomip
sub
mov
call
mov
push
mov
xchg
xchg
cmp
and
and
lds
lcall
inc
inc
or
xchg
push
scas
pushf
push
jae
call
inc
inc
sarb
pop
push
push
daa
nop
pushf
nop
sub
mov
push
loopne
lea
push
xor
mov
addb
push
popa
jge
dec
clc
pop
dec
sar
rorl
fdivrs
xchg
mov
jo
inc
or
je
or
mov
jo
push
push
and
stc
pop
sbb
lock
inc
push
mov
mov
rcr
cmpsb
nop
lds
mov
mov
mov
addr16
dec
jnp
cmp
and
pop
mov
mov
popf
cmp
mov
or
loopne
cmp
and
inc
and
test
hlt
rorb
mov
cmp
pop
adc
ljmp
cld
or
mov
and
jne
mov
int3
das
lea
movsb
sub
into
sbb
push
mov
adcb
lods
dec
stc
repnz
mov
pop
push
sahf
mov
or
mov
seto
mov
or
or
gs
lods
dec
mov
movsl
into
sbb
mulb
mov
test
jo
and
inc
push
leave
test
add
cltd
or
mov
inc
jo
cmp
popa
movsl
and
adc
or
test
cmpsl
aam
imul
repnz
inc
or
outsl
shr
lret
sbb
ffreep
pop
push
inc
and
in
aaa
mov
sarl
xor
mov
push
lea
je
xor
or
xor
push
lock
or
and
enter
stos
mov
or
sbb
ss
push
xchg
repz
adc
mov
fstpl
or
mov
xchg
pop
adc
mov
aas
ret
pop
roll
xlat
jno
adc
push
gs
aaa
cmp
xor
test
add
cmpsb
adc
mov
adc
call
insl
inc
mov
mov
jae
mov
pop
or
sub
xor
push
adc
push
jge
cwtl
inc
xchg
pop
loopne
pusha
jmp
add
xchg
fidivs
or
test
loope
and
mov
mov
jne
aad
add
pop
rcrl
rolb
inc
nop
ss
mov
test
or
cmpl
sub
mov
sbb
pop
cwtl
test
nop
or
or
cmpsl
sbb
mov
xchg
pusha
out
gs
movzwl
cmp
jmp
sub
inc
rclb
or
dec
xchg
sbb
adc
adcb
pop
inc
add
aad
jg
loopne
call
adc
movb
mov
or
test
int3
mov
pop
dec
pop
mov
cmp
pop
or
push
or
mov
test
jb
mov
sbb
push
out
lds
cmp
fisubl
and
and
and
push
inc
loopne
xchg
pop
insb
jo
jne
or
or
mov
clc
fadd
dec
xor
sbb
test
mov
or
mov
xor
and
xor
cs
rorb
or
callw
pop
add
cli
mov
push
and
add
adc
and
cmp
int3
and
inc
adc
adc
adc
add
and
pop
dec
xchg
jnp
leave
pop
sahf
out
and
js
call
dec
jmp
fistpll
xchg
xlat
ss
dec
dec
pop
dec
lods
daa
loope
stos
sub
dec
movsb
out
adc
sub
test
push
idivl
shrb
or
add
div
and
pop
out
jg
neg
inc
stos
shr
and
jne
cmc
inc
jp
adc
mov
mov
hlt
mov
daa
ja
inc
inc
loopne
xchg
pop
ds
pop
add
sbb
jo
jmp
and
xchg
sub
inc
mull
and
int3
sbb
ja
push
and
mov
inc
add
cmp
sbb
adc
decl
jmp
jg
je
inc
pop
daa
xor
divl
into
mov
push
scas
dec
add
adc
lret
cmpsb
or
dec
or
sarl
or
mov
clc
addl
cmp
mov
clc
cmpsl
in
or
sbb
test
adc
adc
sub
push
mov
pop
ret
jb
inc
add
cmp
decl
adc
and
popa
mov
add
sub
or
push
fildll
push
dec
subps
fidivrl
mov
mov
or
xor
sub
cmc
jo
dec
add
dec
test
jb
enterw
mov
and
sbb
adcb
push
pop
add
out
or
test
mov
je
je
xchg
inc
dec
jge
sti
xchg
frstor
xchg
push
or
cmp
and
js
mov
push
pop
dec
jge
xchg
inc
or
lahf
add
pop
jmp
pop
push
adc
dec
xchg
pop
ret
imul
adc
inc
inc
sbb
test
jl
xchg
or
out
sub
inc
mov
pop
and
mov
inc
shr
mov
repz
cmp
cmp
loope
fs
cmp
jmp
mov
mov
push
into
push
sti
sub
data16
loopne
adc
cmp
sbb
stos
lea
sub
neg
jmp
cmpsb
xor
jne
ret
sbb
cld
pop
xchg
mov
dec
cli
jge
mov
xchg
test
mov
fbld
inc
or
mov
out
lods
or
jnp
adc
jmp
and
and
push
push
mov
inc
or
setl
xlat
inc
hlt
push
movl
call
and
inc
orb
fldenv
jo
sarb
push
push
push
xchg
push
mov
sub
cmc
addr16
xchg
lock
loop
cltd
test
xor
sahf
inc
add
mov
add
lea
cwtl
xor
sub
inc
aam
pop
xor
ret
imul
inc
cltd
and
stc
push
dec
aam
and
inc
add
and
cltd
xor
dec
cmp
mov
ss
dec
or
pop
stos
sub
jle
adc
mov
stos
out
sub
pop
add
and
ret
mov
shr
fcmovne
xor
xchg
jo
push
loop
jl
pop
call
sub
dec
insb
dec
fwait
adc
push
jne
pop
mov
adc
and
es
adc
dec
scas
frstor
imul
gs
add
mov
push
sbb
adcl
dec
jg
arpl
adc
push
nop
add
or
pop
fbstp
and
inc
jmp
push
or
mov
sti
xor
mov
mov
dec
mov
test
imul
stos
mov
dec
lahf
aam
shlb
sbb
xchg
push
pop
or
test
push
ret
and
mov
push
adc
fsubrs
sub
inc
and
push
ror
adc
leave
jge
jl
ja
dec
dec
and
ja
repnz
pop
jmp
dec
inc
scas
mov
mov
mov
arpl
cwtl
mov
inc
cs
add
dec
in
pop
in
add
mov
sub
ret
or
inc
sub
or
dec
and
pusha
add
push
sub
adc
pusha
mov
call
fcomp
fcom
lahf
incl
pop
add
mov
nop
sbb
cmp
sarb
loopne
push
or
and
adc
call
aas
or
je
inc
pop
sbb
das
sub
fildll
stc
xchg
test
jle
and
enter
sbb
inc
adc
out
or
mov
sub
sub
mov
repnz
aam
sbb
dec
out
push
movsl
push
mov
mov
sub
movsb
pop
xor
mov
push
add
je
sbb
arpl
xor
mov
jns
lock
dec
adc
sarb
push
inc
movb
add
sbb
cmp
jo
lret
sub
jle
or
add
add
add
sti
mov
push
or
mov
xor
nop
aam
push
pop
sbb
sbb
add
lahf
ret
add
js
pop
xchg
push
sbb
aam
cmp
mov
xor
mov
sbb
stos
fs
cs
and
out
inc
lea
adc
pop
cltd
fs
nop
jns
mov
and
jae
orl
push
sub
cmp
pop
mov
pop
cmp
sbb
pop
psubsw
out
int3
adc
or
adc
and
jmp
mov
hlt
dec
repz
sub
out
and
repnz
pushf
ds
sti
add
in
push
add
decl
sub
int3
inc
mov
cs
mov
xchg
lret
mov
add
rorb
push
pop
mov
int3
adc
xor
nop
lret
popa
xor
or
in
movsb
sti
xchg
stos
xchg
jne
mov
push
jno
das
shlb
bound
push
push
icebp
or
cltd
pusha
ds
repnz
pop
test
or
xchg
push
or
cs
xchg
mov
nop
mov
cwtl
mov
and
add
sub
dec
push
repnz
and
lcall
or
sub
lods
pop
out
xor
enter
xor
mov
inc
push
je
nop
adc
cmpsl
adcb
mov
xor
mov
xlat
jmp
fdivr
test
in
rcll
cmp
iret
push
scas
test
fisubrl
arpl
sub
shr
mov
sub
adc
or
push
das
pop
lock
dec
add
push
loopne
call
scas
or
fdivs
adc
sub
push
or
sub
test
test
dec
lahf
mov
mov
pusha
lods
shrb
adc
and
push
iret
mov
xchg
or
sub
sub
dec
or
cmp
inc
or
fsubr
sub
lods
in
dec
adc
std
gs
mov
sbb
pop
jne
cli
push
daa
mov
inc
mov
sbb
push
jecxz
push
data16
add
call
and
xchg
mov
adc
pop
inc
sub
cmp
or
and
gs
dec
mov
jns
cmp
jnp
out
int
outsl
andb
xchg
js
pop
or
inc
cmp
call
cmc
cmp
loopne
ljmp
push
jge
out
dec
inc
push
rcrb
inc
std
or
pmaddwd
and
mov
mov
push
sbb
pop
adc
jns
fildl
sub
push
or
sub
aaa
mov
jns
out
xchg
int3
roll
mov
outsl
or
lds
jge
push
mov
out
sbb
sub
pop
inc
pop
mov
shrl
rcr
pop
test
and
pop
inc
mov
or
cmpsb
push
mov
or
pushf
mov
cmp
pop
loope
inc
or
pop
lods
jp
cmp
jge
adc
adc
shrl
imul
call
pop
jne
sub
push
adc
push
mov
mov
enter
jno
stos
or
shlb
ja
sub
lods
and
cwtl
fldenv
daa
jle
sub
fcoms
adcb
add
mov
les
imul
std
inc
shr
subl
jmp
mov
fcmovnb
movsb
mov
jmp
adc
mov
scas
lret
out
sbb
cltd
test
and
out
mov
mov
push
inc
imul
imul
imul
dec
das
jns
or
movsb
mov
sub
and
or
mov
push
jns
imul
adc
mov
adc
jg
inc
daa
sbb
sbb
fisubrl
or
fsubr
xchg
inc
xor
decb
add
push
cmp
push
jno
insb
push
hlt
xchg
mov
push
sbb
insl
mov
iret
push
dec
mov
mov
jbe
mov
je
cltd
xor
scas
push
add
mov
in
sub
fists
test
cli
or
inc
fnstenv
and
adc
dec
das
pop
popf
and
and
mov
sub
pushf
adc
dec
cmp
mov
fdivrl
addb
test
pop
push
dec
inc
daa
aas
jmp
add
xchg
lock
inc
pop
add
dec
dec
cmpsb
stc
call
xchg
xchg
and
mov
lret
adc
into
int
scas
mov
and
cmpb
mov
insl
add
sbb
pop
repz
sahf
jnp
iret
daa
sub
pop
and
pop
shll
mov
xor
or
orl
mov
jecxz
andb
rol
stos
sub
aam
mov
das
mov
adc
test
jmp
cmpb
jo
xor
inc
ret
loope
test
mov
push
inc
sbb
push
xor
addl
sub
add
pop
adc
mov
jl
pop
inc
call
or
subl
jbe
outsl
sub
sbb
inc
or
cwtl
xor
mov
pop
dec
sub
pop
lret
xor
imul
stos
divb
jbe
pop
and
pop
mov
test
addl
aas
pop
mov
in
stc
loope
aam
hlt
mov
pop
inc
stos
mov
setp
lds
mov
jecxz
adc
cmpl
mov
push
repnz
mov
jp
and
out
test
add
clc
icebp
fs
lods
idivl
mov
mov
shrb
leave
and
and
and
outsl
jb
push
ja
aad
repz
imul
mov
sub
das
clc
movzbl
mov
fildll
ret
arpl
in
or
aad
lret
ljmp
stos
jmp
inc
imul
dec
mov
pop
jmp
repnz
dec
mov
das
add
testb
or
xchg
push
xchg
pop
xor
mov
and
in
cs
pop
jl
cmp
jmp
jne
outsb
imul
xchg
testb
repz
push
and
dec
testb
mov
pop
sbb
cmpsl
fisubl
adc
sub
scas
xorl
mov
lock
xchg
push
adc
adc
dec
dec
ds
pop
adc
xorl
cmp
jle
mulb
or
fs
lahf
into
fs
in
scas
inc
inc
test
je
sbb
mov
dec
lds
cmp
movsb
sbb
and
and
pusha
loop
sub
jge
iret
xchg
std
stc
hlt
out
or
xor
sahf
aam
mov
xchg
cld
push
insb
movsl
or
jo
push
xor
xchg
lods
mov
xchg
cmovae
decl
rorl
jo
and
cwtl
pop
adc
or
sub
pushl
sub
je
mov
sahf
push
divb
inc
add
push
pop
push
and
pop
xor
xlat
shl
sahf
cmp
mov
in
test
enter
out
or
mov
pushf
roll
pop
ds
pop
push
out
sub
or
clc
enter
and
mov
inc
cli
add
orb
and
lahf
loope
push
or
subl
out
mov
out
mov
pop
mov
add
das
jle
inc
cmp
fstpl
mov
cmp
leave
mov
lods
loope
add
pop
call
mov
dec
pop
xor
xor
and
xchg
sti
mov
xor
cmp
and
mov
push
sbb
xchg
add
aaa
in
add
cmpsl
or
inc
or
gs
mov
adc
adc
outsb
outsl
jb
gs
jnp
cli
cwtl
sbb
std
in
add
inc
mov
sub
fsubs
lahf
fimuls
push
fisubrl
dec
ja
cltd
jo
pop
add
js
jae
rcrb
inc
sbb
int
mov
aam
sub
cs
adc
fistl
sub
sarl
jns
fldl
jno
das
mov
mov
push
adc
push
pop
dec
push
xlat
mov
das
push
test
push
xchg
inc
xor
cmpb
cmp
pop
jbe
and
and
por
jnp
and
add
jecxz
popa
dec
test
cmpb
nop
inc
cmpl
js
fistps
js
push
cmp
dec
cmp
push
int
adc
leave
hlt
sub
push
out
stos
das
cmp
jae
movsl
add
xchg
xor
ljmp
and
xchg
push
xor
mov
mov
pop
jnp
mov
scas
mov
sbb
and
xchg
pop
xchg
in
mov
mov
in
pop
sub
pop
dec
push
inc
cs
inc
or
jb
adc
cmp
rclb
pushl
jecxz
insl
cli
insl
aam
mov
mov
inc
pop
pop
dec
or
dec
popf
or
ja
clc
mov
xor
cmp
icebp
inc
jne
sub
xchg
out
sahf
push
in
dec
or
jne
pop
xlat
sbb
popf
and
jne
cwtl
fstps
lock
leave
fisttpll
adc
adc
adc
out
inc
cs
int
sub
sarb
push
pop
mov
rcrl
adc
or
sbb
sbb
aaa
push
and
sbb
mov
outsl
cmp
or
frstpm(287
movb
jne
bound
cmp
pusha
mov
test
cmpl
pop
pop
repnz
mov
xor
push
or
mov
rorl
inc
xor
or
xor
xor
insb
inc
fdivrl
and
mov
xchg
and
pop
std
push
jbe
mov
push
inc
or
lods
mov
or
cmp
lods
test
adc
sbb
in
lods
pop
movsb
mov
jge
int
or
xchg
jne
xchg
js
or
and
sbb
pop
xchg
movsb
sti
sub
adc
test
stos
sub
mov
call
loopne
arpl
scas
mov
insl
jp
jae
popf
out
test
push
cvtps2pd
mov
xchg
bound
add
mov
adc
in
divl
sub
into
test
mov
cli
inc
jg
and
test
ja
ret
ljmp
and
push
add
push
dec
xchg
jmp
sub
xor
test
cmpb
lret
arpl
jge
pop
leave
test
stos
movsl
sbb
jmp
jne
sbb
call
sub
or
stos
push
or
sbb
divb
adc
pop
lret
cltd
push
fstl
pop
jmp
sbb
mov
mov
xlat
test
sbb
test
mov
out
cld
jae
xor
inc
adc
fistpll
mov
sarl
sub
jae
cmpsb
ret
inc
sub
add
orl
jno
sub
sub
jg
insb
mov
sub
es
xchg
call
cltd
cmpl
jmp
sub
or
push
jnp
mov
push
or
adc
cwtl
inc
nop
push
mov
ret
rcrb
ret
sbb
in
mov
sbb
sbb
hlt
call
daa
nop
mov
xor
in
dec
adc
jmp
adc
mov
es
mov
daa
std
xchg
pop
in
sub
js
fisubrs
inc
pop
jp
fcomip
jae
or
movsb
js
inc
add
clc
out
cmp
dec
mov
lock
sbb
outsl
adc
lea
or
or
cmp
les
mov
mov
ss
inc
loope
mov
cs
and
lock
push
push
xchg
jne
sub
and
inc
and
xor
or
xchg
mov
orb
mov
lahf
gs
bound
add
loope
or
mov
jge
adc
pop
push
add
inc
call
mov
and
call
and
push
jbe
adc
pop
dec
jb
mov
pop
xchg
call
cwtl
mov
mov
adc
sbb
sub
jns
xor
leave
jl
cs
and
add
scas
std
xor
rorb
jmp
gs
popf
pop
inc
notb
cs
sub
and
addr16
sub
mov
push
or
push
movsb
mov
push
inc
dec
mov
stc
mov
addl
pusha
nop
test
pop
sub
int3
cmovbe
push
int3
cmp
xor
lret
ret
cmpl
cmp
sub
mov
inc
and
cmp
xchg
aam
and
imul
dec
mov
inc
imul
jle
mov
nop
lahf
or
sbb
int
fstps
jae
outsl
out
stc
pop
vmaxsd
jecxz
movsb
int
pusha
adc
jmp
fisttps
dec
ja
fmull
mov
sub
push
imul
ret
inc
push
in
xchg
jle
sub
push
adc
rclb
pop
add
jle
mov
push
bound
jb
push
push
mov
or
pop
mov
jle
call
pop
and
dec
arpl
or
mov
scas
xchg
cmpsb
aas
push
push
sbb
in
js
mov
fistl
test
lret
in
or
pop
lcall
mov
jne
jno
test
and
insb
dec
js
pusha
daa
je
mulb
rorl
and
mov
fwait
les
inc
pop
xchg
adc
or
insb
push
mov
jmp
imul
and
jl
pop
jle
inc
je
and
mov
int3
push
das
pop
pop
negl
sub
ret
mov
pop
push
inc
push
cmp
fs
stos
testl
xor
mov
mov
aaa
adc
je
je
cmp
jne
dec
sbb
jp
mov
xor
jns
adc
mov
and
mov
call
lock
sbb
push
lock
push
adc
out
push
and
push
xchg
sbbl
push
jg
sbb
cli
mov
or
test
dec
and
aaa
sbb
pop
mov
pop
in
enter
scas
sub
xchg
inc
dec
jmp
adc
test
xor
leave
jle
cmp
adc
sub
stos
popa
and
jp
lods
fwait
push
or
mov
jl
pop
cli
push
mov
repz
sub
or
gs
mov
ret
mov
sub
push
adc
or
js
mov
jmp
xchg
push
mov
jg,pn
or
ljmp
xchg
add
mov
nop
dec
repnz
mov
sahf
mov
fidivrs
pop
push
out
mov
pop
push
mov
mov
push
clc
lret
test
jne
sub
adc
sahf
and
insl
push
adc
xor
adc
mov
xor
push
jb
in
das
lods
push
ficomps
dec
aaa
rcll
push
or
xchg
xchg
or
sarb
lret
sub
mov
test
mov
cld
cli
sbb
es
sbb
gs
push
ret
push
push
cmc
dec
mov
orb
fmull
fimull
inc
adc
lahf
clc
fidivl
dec
or
jae
cmp
adc
inc
mov
xchg
test
nop
cmp
das
rcll
and
pop
lahf
movl
fsts
push
movsb
rcl
jo
add
cld
fnsave
inc
out
push
inc
adc
fdivs
outsl
hlt
add
pop
loope
lock
or
inc
xlat
clc
jle
xchg
dec
addl
aam
scas
or
jne
jne
mov
and
rcll
mov
inc
pop
lods
pop
adc
repnz
stos
xchg
daa
les
mov
push
cs
xor
push
subb
pop
fisubl
jne
arpl
cmpsb
aas
xchg
je
push
mov
mov
ds
inc
test
fimuls
sub
sub
cmpsl
xor
push
nopl
int
cmp
mov
mov
jno
pop
test
stos
cld
jmp
shlb
or
imul
and
cmp
add
and
adc
xchg
sub
pop
cltd
sti
and
cmp
or
movsl
dec
arpl
in
add
cmp
or
lods
push
int3
xlat
mov
sbb
ret
mov
std
lds
inc
jge
daa
push
jo
sub
sarb
repz
sbb
xor
sti
gs
cmp
or
mov
ss
nop
adc
jnp
adc
and
rcrb
dec
cli
mov
das
push
movsb
jb
xchg
xchg
cmc
mov
mov
sub
mov
and
cmpsb
and
and
loopne
scas
scas
loop
popf
lods
pop
adc
fmuls
or
inc
cmpl
xchg
and
and
movsl
adc
inc
call
and
and
add
and
mov
popf
outsb
out
pushf
sub
lcall
adc
and
push
lahf
pusha
in
mov
adc
cmp
jne
stc
mov
sbb
push
jns
xor
add
clc
cmpsb
lea
inc
inc
cmp
xor
icebp
jne
aas
adc
sub
imul
test
push
adc
jae
sub
ja
lds
push
in
pop
jge
sub
dec
sub
and
test
push
test
or
jle
in
jp
sahf
pop
adc
dec
sahf
xor
neg
shll
insb
push
xchg
lret
jns
lds
xchg
jge
pop
lods
sbb
xchg
or
aas
push
cmc
push
out
sub
push
or
rcrl
mov
xchg
nop
dec
test
mov
pop
xchg
mov
or
enter
sub
test
inc
lcall
add
adc
sbb
push
push
sub
enter
andb
or
add
orl
pop
adc
mov
push
mov
ljmp
adc
inc
cs
dec
add
and
add
jb
add
xchg
xchg
int3
push
push
or
push
orb
test
mov
mov
mov
mov
and
sub
aad
fstpl
or
cmp
movaps
test
loop
int3
enter
pop
sub
push
movsb
stos
loope
adc
jl
lds
jmp
dec
xadd
jo
push
les
pop
mov
sbb
push
push
fwait
xor
imul
add
push
out
jecxz
nop
sub
or
sub
jnp
fcomps
sub
ret
xchg
add
mov
cmpsb
sub
inc
repnz
sub
add
outsl
sbb
mov
sbb
sbb
test
cwtl
or
adc
sub
or
and
sbb
or
sbb
aas
jmp
add
mov
mov
inc
mov
rorl
adc
hlt
pop
push
cmp
cmp
or
pop
xchg
ja
data16
jp
or
sbb
mov
pushf
lret
stos
decl
lret
mov
int3
mov
hlt
mov
dec
sub
pushf
xor
mov
push
iret
xchg
and
aaa
leave
jnp
dec
xchg
or
push
push
ljmp
daa
das
and
and
sbb
xchg
pop
filds
sub
rcrl
ds
dec
out
daa
dec
push
xchg
ds
inc
or
cmc
in
cmp
xchg
push
dec
jbe
adc
mov
push
cmp
push
jne
daa
lea
ret
push
or
pop
fcoml
inc
mov
mov
or
xchg
or
adc
jmp
call
in
sbb
lock
hlt
add
clc
or
or
ds
out
mov
stc
mov
sarl
jmp
lahf
repnz
fstpt
add
in
inc
movsl
adc
scas
int
das
int3
jnp
lds
test
in
test
push
cwtl
push
mov
jne
enter
push
dec
lcall
and
in
jmp
arpl
or
add
sbb
fnstcw
ret
pushf
sbb
inc
lret
pop
faddl
pop
loop
dec
and
cmp
test
inc
inc
fisttps
pushf
jnp
fdivs
cmp
jp
mov
ret
mov
cmp
sbb
negl
das
cld
lret
mov
pop
out
pop
fdivl
rcll
xchg
and
scas
jmp
pop
sbb
xor
mov
sbb
js
cmpsl
test
jge
push
cs
mov
adc
popf
negl
clc
xor
out
add
jno
mov
cmp
jge
push
dec
xor
or
cmc
dec
xor
cmpsl
sbb
mov
push
fs
or
push
xchg
xlat
xchg
les
mov
pop
iret
xor
cli
enter
repz
sub
cmp
push
jg
mov
or
lods
rcl
dec
insb
mov
lods
xor
jl
rorb
add
mov
shll
dec
das
js
call
cltd
or
js
mov
ficoml
fwait
add
mov
sub
adc
pop
test
and
push
mov
mov
mov
lock
jmp
adc
push
mov
jnp
mov
inc
pop
xchg
add
fidivs
sub
add
xrelease
sbb
mov
xor
mov
sbb
addr16
jbe
xchg
mov
fstps
das
xchg
adc
sub
movl
and
and
or
je
repz
repz
rolb
mov
mov
add
ficoml
cmp
sbb
lock
xor
sub
cmp
and
mov
or
ret
mov
mov
insl
aaa
cmpl
sti
inc
sbb
movsl
dec
dec
mov
or
xchg
dec
pop
aaa
inc
arpl
or
repz
xchg
sub
sbb
subl
xchg
add
sbb
imul
push
lcall
push
xchg
push
mov
in
xchg
or
jns
xchg
fldl
dec
push
push
inc
inc
in
imul
jno
cmpb
dec
test
and
xor
je
xchg
jg
xor
mov
dec
xor
std
outsb
add
shlb
in
xor
stc
and
sahf
mov
aas
fisubs
jae
inc
adc
daa
or
pop
inc
leave
out
fsts
cmp
xchg
dec
pop
pushf
retw
cs
test
movsb
mov
and
data16
icebp
filds
mov
nop
dec
xor
add
mov
mov
sarl
popf
sahf
lcall
and
imul
repz
lock
sbb
mov
subl
sti
das
call
scas
mov
or
cmc
pushf
rcrb
dec
cmpsl
decl
bound
decb
cmp
add
push
and
and
xchg
or
into
adcl
adc
or
adc
in
inc
push
addr16
jl
lock
stc
sbb
sub
and
stos
xchg
cmp
jno
or
jge
or
into
xor
jecxz
or
pop
stos
fdivrs
jl
pop
add
mov
and
jp
test
jne
mov
jmp
xlat
cmp
popf
lock
push
pop
nop
sahf
inc
adcb
mov
mov
dec
sub
mov
pop
or
mov
pop
into
mov
aas
lods
pop
xchg
mov
xchg
or
or
repnz
pop
mov
rol
scas
frstor
ljmp
daa
loope
lret
lock
adc
stc
enter
cltd
loope
xor
stos
lea
xor
stos
cld
adc
pop
xor
sub
add
test
adc
mov
jo
popf
fstl
jle
push
inc
dec
addl
pop
or
xor
sub
adc
mov
or
daa
lock
sbb
roll
jmp
cmpsl
dec
popa
jne
push
dec
cmp
addr16
mov
nop
xor
rorb
add
nop
dec
fsubrs
dec
into
jae
jne
push
xor
push
pop
jne
push
inc
cmpl
fmulp
cmp
data16
push
jmp
icebp
cmp
dec
jl
push
sub
out
icebp
pop
and
daa
popa
push
outsl
mov
cmpl
aam
fadds
xor
mov
mov
lea
pop
sbb
dec
pop
or
int
aas
and
inc
arpl
xor
lock
add
xor
add
loope
adc
or
lds
push
sbb
call
lods
dec
mov
sbb
dec
adc
or
jo
insl
or
mov
je
xor
lahf
push
outsb
sbb
fs
cmp
xorl
and
loopne
movzwl
jae
ds
adc
or
add
insb
xchg
add
call
xchg
cmpsl
adc
mov
sti
dec
sbb
cwtl
inc
pop
rcl
or
xor
push
movsl
lret
repnz
imul
mov
push
ss
je
cwtl
mov
xchg
add
call
add
fsubrs
popa
push
mov
sbb
rorb
lock
push
jae
inc
xchg
in
inc
push
or
pop
fcoml
stos
cmp
fldenv
fidivl
ret
in
out
pop
cs
jmp
cmpb
sbb
lock
pop
mov
inc
aaa
dec
fcoml
cmpsl
adc
movl
adc
mov
pop
cmp
mov
je
sub
or
push
or
sub
adc
loope
lods
out
arpl
or
je
push
fucomi
mov
pop
xor
xchg
or
pop
sub
pop
push
jmp
lahf
dec
movsl
mov
movsl
jg
and
adc
sbb
or
insl
jne
sahf
dec
sub
xlat
mov
lods
inc
test
jb
inc
and
insb
adc
xchg
out
lret
xchg
xchg
mov
and
mov
cmpsb
mov
cmp
jge
call
shrb
dec
and
loopne
add
popa
mov
and
shlb
push
push
push
fimull
dec
clc
xorl
sbb
neg
data16
call
insb
mov
xor
xchg
jnp
and
sahf
inc
adc
jmp
dec
or
push
pop
mov
dec
or
inc
sbb
or
leave
sbb
pop
pop
stc
rorb
push
add
or
inc
add
push
adc
push
inc
mov
scas
fbstp
cmp
movb
addl
xor
mov
mov
daa
jno
fdivrl
jne
jae
jno
add
ficompl
jne
scas
or
js
mov
leave
adc
std
dec
fsubr
jl
sub
jmp
jmp
push
sub
xlat
lods
sbb
clc
add
idivl
out
sbb
mov
lahf
jmp
ficoms
les
lock
and
cld
push
ds
xor
xor
sub
cmpl
hlt
or
adc
dec
lods
movb
push
or
jge
pop
jne
add
in
mov
call
lahf
sbb
jmp
movsb
sub
mov
xor
andl
mov
js
clc
pop
lods
das
scas
sub
cs
lcall
mov
dec
mov
xchg
inc
fldl
lea
sbb
nop
xor
add
add
pop
add
sub
adc
or
inc
and
and
dec
sbb
push
outsb
rcl
sbb
cmp
sti
cmp
xor
sub
push
jno
and
cmp
add
icebp
mov
cmp
sub
xor
enter
xchg
lock
xorb
ja
ror
in
or
jo
out
dec
adc
fsubrl
mov
aas
out
jmp
test
and
loopne
or
lock
scas
dec
xor
lds
clc
leave
aam
bound
adcb
aad
jge
push
pop
and
movsb
sub
mov
das
jno
dec
adc
popf
pop
mulb
sbb
stos
add
or
inc
popa
adc
stc
in
adc
cmp
addr16
adc
ds
daa
add
pop
setge
ss
mov
movsl
notl
inc
mov
imul
rclb
or
or
add
pop
xor
xchg
ss
cltd
popf
das
pushl
inc
xchg
mov
mov
std
stos
dec
mov
cmp
mov
lahf
popa
pop
dec
rclb
xor
in
pushl
dec
push
pop
xchg
in
lret
les
clc
push
xchg
add
pushf
add
cli
ret
scas
push
add
and
xor
push
into
mov
test
pop
cmp
jnp
aaa
adc
sub
sar
jnp
int
adc
out
das
inc
dec
popa
out
adc
xor
aaa
mov
mov
inc
xchg
xor
fdivrl
cmp
outsb
or
dec
lret
dec
bswap
test
push
dec
adc
nop
push
jmp
lret
inc
pop
pop
pop
ret
ljmp
jle
push
inc
test
jne
pop
int3
push
pop
adc
inc
out
jno
adc
adc
xor
pop
mov
es
inc
cwtl
adc
inc
inc
mov
shll
add
enter
jae
cmp
mov
adc
pop
sbb
ss
arpl
cmovnp
adc
push
dec
lahf
sub
push
pop
and
cwtl
shl
adc
ret
stos
call
and
fsubs
lods
push
daa
xchg
sbb
dec
add
in
repnz
ret
and
fldcw
mov
pop
or
movsl
xchg
jecxz
or
and
je
push
mov
loope
outsl
and
stc
adc
mov
mov
mov
test
sub
push
nop
inc
sbbb
sub
leave
gs
cmp
sti
or
jle
jg
mov
js
xchg
in
cmc
scas
decb
xor
pop
inc
xor
xor
and
cmpl
ljmp
int3
dec
in
sahf
out
pop
cmc
inc
clc
movsl
imul
mov
pop
xchg
adc
jge
push
dec
jmp
inc
aam
xor
add
inc
sahf
cmpsb
push
cmp
and
push
push
inc
cld
inc
in
int
cmp
ljmp
xchg
jge
addl
jg
add
mov
push
repz
testl
adc
inc
jmp
mov
dec
jb
xchg
adc
pop
fisttpl
xchg
ss
or
add
dec
dec
out
jno
cmpb
je
in
adc
movsl
sub
dec
imul
pop
add
rcl
pop
in
lods
movb
sub
cmp
loope
lea
cmp
mov
push
mov
jbe
dec
mov
and
lock
out
icebp
jg
mov
mov
pop
pushf
js
cwtl
xchg
notl
and
cli
into
int3
push
jge
inc
add
jae
and
adc
add
sbb
imul
test
bound
dec
das
mov
pop
adc
into
mov
and
and
out
lods
int3
rorl
sbb
and
or
push
mov
dec
shl
adc
dec
cld
mov
add
xor
pop
addl
jae
clc
mov
cmp
dec
push
daa
loopne
cmp
bnd
insb
add
dec
or
jne
ljmp
test
or
push
stos
mov
shrb
call
inc
adc
pop
pop
popf
push
push
mov
ljmp
iret
sbb
xlat
sbb
xor
int
add
xlat
adc
js
cmp
lret
fnstcw
sbb
xchg
cmc
dec
pop
out
popf
dec
or
mov
xchg
outsl
dec
loopne,pn
mov
lods
mov
hlt
js
lea
call
bound
mov
in
dec
adc
mov
adc
sub
or
fcompp
inc
test
or
adc
out
ret
dec
or
sub
es
inc
add
out
je
xor
sbb
in
jp
mov
aaa
adc
pushl
outsb
and
xchg
sbb
jmp
dec
sub
pop
cwtl
xor
xor
sub
xchg
add
and
mov
rcl
inc
test
ret
mov
js
daa
jge
inc
sbb
mov
mov
cltd
and
jne
fwait
clc
sarl
add
sbb
add
lods
js
lahf
rcll
inc
ret
jne
je
inc
fs
mov
add
xchg
mov
ja
pop
xor
dec
or
mov
sbb
call
daa
mov
jno
dec
fs
cli
je
sti
add
xor
xchg
movb
push
lds
mov
xchg
xor
xchg
test
loope
outsb
ss
dec
nop
jmp
shrb
adc
daa
jge
mov
imul
leave
das
jne
pop
icebp
nop
cmp
and
mov
or
inc
repz
lods
push
pop
mov
aam
lods
pop
cmp
inc
leave
adc
sub
and
inc
adc
mov
ja
repnz
push
dec
clc
lds
jb
ds
xor
pop
sub
push
imul
push
lods
sub
ljmp
sti
push
inc
sti
mov
lahf
arpl
cmc
xor
lock
and
stc
cmp
sub
xchg
mov
faddp
pop
jno
or
jmp
and
and
inc
out
mov
fcoms
cli
cmpsb
daa
pop
cld
jne
inc
and
push
imul
push
pop
in
adc
push
nop
out
push
sub
push
fildl
dec
mov
cmp
jl
jge
outsl
xchg
mov
scas
or
xchg
test
push
push
out
gs
dec
in
and
lret
fidivrs
pop
ret
shr
inc
mov
push
sbb
mov
inc
scas
sub
addr16
dec
and
cmp
mov
mov
fists
test
jecxz
pop
xchg
inc
stos
cmp
mov
cmp
mov
or
mov
pop
push
pop
testl
push
fistpll
addr16
sbb
push
or
pop
push
cmp
cmpsb
hlt
out
in
xchg
cmc
mov
adc
and
push
outsb
push
fidivrs
pop
sub
cmp
je
mov
movsl
icebp
negl
ret
sub
sbb
inc
in
xor
adc
lds
sub
or
loope
xchg
test
xor
and
je
ret
cld
bnd
orl
rcr
jb
lcall
push
or
mov
mov
add
add
outsb
or
inc
push
int
pop
jnp
fiaddl
mov
cli
bound
icebp
dec
pop
xchg
insl
movsb
jne
outsb
jecxz
cmpsl
sbb
inc
scas
push
sarl
jge
sub
mov
daa
adc
cmpl
push
hlt
mov
push
sub
je
or
add
rorl
test
inc
ss
lahf
jl
cmpsl
push
mov
and
push
les
adc
xchg
lcall
orb
hlt
mov
xchg
lods
xor
lea
lret
pop
push
push
fdivrl
mov
mov
in
mov
mov
push
push
mov
rcrl
sahf
int3
mov
das
mov
xchg
dec
mov
push
pop
call
jne
pop
cmp
xchg
dec
jmp
sub
mov
pop
loopne
add
inc
jge
je
and
pop
pop
insl
jle
push
fisubs
imul
lock
shrb
lods
dec
pop
fcoml
call
lock
lods
int3
dec
mov
jge
pop
jnp
sbb
mov
mov
sbb
adc
int3
adc
adc
dec
mov
mov
dec
stos
rcr
mov
decb
imul
ret
xchg
repz
xor
push
fwait
adc
test
pop
push
outsl
or
mov
push
inc
cld
repnz
ss
sbb
cmovs
or
or
cmc
cwtl
in
fwait
jo
xlat
mov
and
scas
ja
add
sub
enter
rorl
dec
or
xor
rcr
add
sub
repnz
notb
cmp
xor
sbb
dec
call
and
dec
sbb
mov
sti
cmp
scas
divl
xor
mov
sbb
inc
or
ror
mov
push
xchg
fsubs
filds
or
add
mov
pop
push
mov
dec
push
push
loop
cmp
jl
arpl
pusha
pop
mov
jae
cmp
mov
adc
adc
mov
mov
or
jne
xor
fcomi
js
sub
pop
pop
adc
ror
fcomps
pop
mov
or
or
in
jb
cmp
jl
dec
pop
or
std
xor
add
jle
pop
xlat
mov
in
daa
or
or
adc
adc
dec
in
and
jmp
ret
dec
mov
adc
mov
inc
or
dec
jns
mov
out
adc
lret
mov
push
in
add
push
sub
xchg
adc
mov
in
xchg
ljmp
adc
inc
push
mov
jmp
gs
loope
jp
xchg
inc
fs
jo
pop
nop
xchg
loop
sbb
lahf
flds
lahf
aaa
repz
xchg
lea
lahf
adc
imul
test
mov
dec
jmp
mov
push
push
gs
push
cltd
xor
sbb
push
or
push
inc
sbb
inc
pusha
mov
mov
sti
out
xor
hlt
jle
jmp
loope
cmp
andl
push
sub
das
mov
cmp
out
push
inc
add
add
pushl
pop
mov
clc
pop
mov
stos
and
dec
pusha
arpl
or
je
mov
lock
add
das
mov
repz
data16
or
push
add
ret
push
stos
sub
sub
repz
leave
add
notl
push
test
xchg
mov
mov
push
push
pushf
fs
pop
out
or
mov
es
pop
aad
jo
mov
pop
fdivrl
jno
pusha
add
jo
repz
xchg
or
popa
insl
mov
or
dec
enter
fst
test
movsl
loopne
inc
xor
pop
sarb
pop
dec
fistps
stc
addl
xor
push
lock
hlt
fdiv
jle
sarb
enter
test
rcrl
movsb
mov
in
test
or
mov
lods
xchg
call
fs
lods
mov
pop
jb
sbbl
movl
jbe
stc
sbb
dec
shl
addb
dec
cmp
cmpsl
jg
adc
pop
or
mov
mov
mov
push
fs
jns
sub
mov
imul
addb
lock
cmp
xor
nop
push
call
adc
mov
mov
int3
scas
fstl
inc
jne
sub
out
rcrb
and
popa
shll
in
add
cmp
jo
dec
push
and
lods
out
sub
pop
sub
or
inc
push
cmp
sub
data16
es
ret
add
mov
in
or
cmpl
mov
mov
mov
and
std
in
pusha
or
sahf
pushf
stc
or
or
cmp
fldl
test
notb
cmc
je
repz
sub
push
and
mov
rorl
cmp
sbb
aad
adc
push
cmp
mov
inc
add
jnp
jne
mov
notb
movsl
mov
mov
xchg
pop
pop
clc
cmp
cmp
mov
pop
xor
daa
jmp
cli
ret
xchg
jg
pop
push
push
and
add
mov
and
add
pop
out
cmpsb
push
fsubl
and
bound
sbb
sbb
push
xchg
xchg
or
mov
sub
ja
loope
pusha
mov
bound
xchg
in
fstps
push
xor
push
fs
cmp
les
insb
das
and
adc
and
add
or
adc
dec
mov
add
push
or
cmp
mov
xor
sub
mov
xor
lret
in
and
mov
or
inc
and
pop
mov
inc
mov
pop
mov
sbb
stc
inc
or
cli
es
loop
jo
incw
adc
clc
inc
jne
push
testb
ds
daa
data16
lock
mov
gs
mov
and
lret
jl
or
jmp
mov
inc
cmp
setg
mov
mov
mov
aaa
dec
insl
sbb
lahf
pusha
cmp
setl
es
inc
sbbl
std
pop
push
pop
jg
sbb
popa
icebp
jbe
je
bound
xor
and
mov
and
lock
int3
test
mov
mov
jl
cltd
dec
dec
dec
push
cmp
sub
outsb
add
and
fidivs
sbb
sub
clc
or
add
push
lahf
fsts
popa
lock
dec
push
imul
hlt
lahf
fidivrs
push
or
adc
and
inc
dec
and
lock
lret
out
in
sub
pop
push
inc
add
rclb
in
pop
and
daa
rcll
fmuls
leave
inc
imul
mov
hlt
sub
scas
sbb
push
xchg
daa
je
inc
inc
mov
adc
xchg
mov
nop
repnz
sbb
int3
xor
fisttpll
out
and
dec
pop
sub
and
adc
inc
pop
or
xor
sub
or
add
xor
call
inc
and
lcall
mov
adc
aam
inc
inc
and
mov
dec
aad
es
or
pop
bound
mov
lcall
push
adc
push
decl
cmp
rorb
cmp
mov
cmpsl
or
int3
jg
push
lock
rolb
xlat
test
fsubr
mov
popa
sub
mov
lahf
xchg
in
cmp
ljmp
hlt
test
dec
cli
mov
clc
cmp
iret
lahf
xor
mov
in
adc
xlat
sbb
inc
cld
dec
jne
lcall
lds
sbb
xchg
dec
push
mov
pop
aaa
and
test
sub
dec
cmp
int3
xor
cmpsb
aad
dec
dec
sbb
adc
nopl
daa
xor
push
mov
loopne
mov
cld
hlt
hlt
mov
call
dec
addr16
sub
or
dec
out
test
fs
adc
sub
test
add
add
dec
sbbb
push
xchg
std
mov
aad
fisubrs
push
ret
or
jmp
adc
jecxz
dec
or
stos
int
lea
lahf
adc
dec
in
ljmp
push
sub
jl
cltd
mov
jmp
lret
hlt
and
inc
add
mov
pop
mov
add
and
aas
add
jle
daa
push
xchg
cs
ljmp
fildll
pop
shr
cli
xor
lds
sbb
repnz
dec
lds
test
sub
adc
ss
mov
mov
mov
les
test
mov
mov
adc
les
ja
xchg
rcr
pop
sbb
int
out
adc
add
push
int3
daa
aaa
sahf
push
mov
jae
or
ret
mov
stc
inc
stc
stc
or
jle
sub
xchg
and
jl
adc
dec
xor
jnp
shll
in
call
bound
or
sbb
push
mov
mov
imul
adc
enter
mov
sbb
lea
adc
dec
dec
pop
adc
push
pop
or
bound
scas
inc
cs
mov
aaa
mov
sbb
and
add
mov
or
or
ret
sub
inc
jp
xchg
cld
dec
pushf
in
xor
jl
scas
xchg
inc
pop
test
inc
xor
xlat
rorl
and
nop
dec
ficoml
jno
lcall
daa
push
leave
cmp
das
adc
mov
xchg
les
mov
std
rol
cld
and
jns
std
rolb
push
dec
cmp
pop
ja
cwtl
aaa
pextrw
js
sub
repz
nop
cmp
movb
jbe
sar
les
push
cmpsb
fsubl
xchg
cltd
and
int3
or
push
js
hlt
push
xchg
sbb
add
les
dec
daa
cmpsb
cmove
push
scas
int3
cwtl
sub
jl
sahf
in
cmp
jmp
pop
lods
cmpsl
inc
jle
sub
aas
dec
dec
mov
adc
xor
pusha
pop
adc
pop
inc
out
push
adc
aam
rorl
push
add
pusha
push
nop
scas
pop
push
add
mov
inc
mov
scas
dec
int
es
lock
subl
mov
or
cmp
dec
or
mov
xor
ds
sti
test
inc
dec
dec
leave
inc
push
out
out
pop
mov
test
push
int
nop
std
xor
sbb
sbb
sbb
push
das
inc
or
lret
mov
dec
imul
sub
push
xchg
std
nop
mov
daa
mov
lcall
popf
imulb
and
push
push
and
add
xor
add
sub
mov
mov
add
sub
push
adc
cmpl
cmp
std
cmpsl
fists
addl
test
iret
sahf
aam
or
or
dec
sub
adc
jb
cmc
ficompl
sahf
inc
xchg
xchg
movsl
jbe
sub
lods
sbb
push
push
or
sub
mov
inc
inc
mov
mov
lea
ret
dec
mov
xchg
jns
lods
mov
cmp
lea
or
les
xchg
xor
loop
jge
fistpll
inc
repnz
jg
mov
je
es
dec
mov
cmpsb
out
rorl
inc
outsb
or
mov
movsb
sub
leave
or
ja
mov
and
push
repnz
adc
testl
fcomip
jo
mov
adc
dec
sub
dec
aam
ss
lahf
in
push
mov
inc
jne
add
sub
or
mov
push
push
fs
dec
aas
idivb
rorb
push
dec
pop
insb
mov
out
jbe
jp
lds
mov
jmp
test
std
push
xlat
lock
into
adc
push
out
mov
cmp
and
pop
daa
je
sub
inc
call
or
rolb
push
insb
add
in
dec
mov
ja
pop
push
mov
cli
out
dec
pop
stos
popf
xchg
sub
and
xchg
jmp
dec
xorl
xchg
sub
imull
cmp
pop
sti
adc
xchg
and
lock
push
in
push
test
pop
xchg
out
jbe
xor
scas
mov
inc
sub
add
jnp
pop
mov
xlat
dec
xor
adc
aad
jle
scas
ja
insb
pop
inc
xchg
push
ja
push
or
jne
inc
and
in
or
loope
nop
pop
mov
or
in
xchg
call
inc
sbb
sbb
mov
adc
adc
and
jne
mov
adc
cmpsb
aaa
mov
adc
adcb
adc
insb
sbb
in
sbb
pop
negl
xor
xchg
sbb
jge
xor
call
call
sbb
pop
add
xor
xor
jne
xlat
adc
shrb
sub
inc
and
add
push
or
fbstp
mov
les
ss
add
cmp
repz
dec
cmp
cwtl
dec
lods
pusha
mov
ret
lahf
pop
push
jb
xchg
daa
and
das
shll
sub
out
adc
inc
sub
xchg
daa
xor
pushf
jmp
cmp
push
addr16
xor
mov
adc
adc
mov
push
mov
add
pop
mov
inc
dec
push
test
rorl
outsb
xor
sbb
mov
xor
scas
add
inc
add
push
push
and
push
adc
xchg
mov
out
les
xchg
sub
or
push
sub
cs
enter
fidivs
jp
inc
adc
and
and
sub
enter
jbe
cmp
adc
test
xor
cmp
dec
sub
stos
sti
ret
sub
cmc
mov
ja
shl
adcl
sub
sbb
icebp
gs
and
call
test
and
insl
sbb
andb
mov
sub
add
shl
loop
int3
mov
xchg
cmc
xchg
out
or
out
ret
por
jns
aas
and
sub
out
or
or
pop
sbb
mov
rcrb
mov
fs
shrl
das
inc
adc
cmpsl
faddl
mov
adc
jno
mov
or
mov
rolb
xor
in
ret
aaa
lcall
mov
ja
mov
adc
movsb
mov
lods
mov
fs
and
out
push
sub
sbb
and
jne
pop
and
sbb
lods
ret
das
dec
sbb
movsb
call
xchg
outsb
out
xorl
adc
cmp
sbb
add
lahf
add
xor
push
ficomps
push
cmpb
pop
and
loope
xor
add
xorb
popf
cwtl
mov
inc
sub
push
enter
dec
pusha
and
repz
rclb
lds
je
or
pop
jo
mov
popa
call
push
sub
mov
test
jp
and
cmp
icebp
mov
or
sub
lahf
repz
cmp
imul
adcl
loope
push
movsb
adc
out
movb
xchg
jg
stc
mov
inc
scas
push
add
adc
mov
aas
cmp
add
adc
enter
imulb
push
jns
sbb
xchg
outsb
test
sarb
lods
movsl
mov
sti
push
mov
aam
les
mov
data16
arpl
jmp
sbb
ud0
aam
and
cmpsl
sub
cmp
add
cmp
add
data16
pop
mov
shlb
push
pop
jmp
xor
out
mov
adc
xlat
int3
ljmp
pop
sub
ss
cmp
adc
fnsave
in
and
repz
adc
mov
lret
adc
lods
adc
or
jbe
insb
je
jae
xor
out
rsqrtps
jb
divb
inc
cwtl
mov
mov
fidivrl
sub
or
inc
xchg
xchg
in
lods
or
push
pop
int
aas
xchg
dec
cmpl
cmc
pop
push
dec
dec
neg
in
push
orl
cmp
inc
repz
int3
inc
dec
outsb
push
or
and
and
stos
fldenv
in
or
and
jne
adc
push
adc
sbb
mov
mov
sbb
inc
mov
test
add
adc
loop
adc
or
test
or
int
add
or
or
rcr
mov
leave
lds
sti
call
xchg
movhps
rcll
adc
sub
mov
mov
push
add
sbb
and
and
pop
xchg
push
pop
cmp
ljmp
adc
dec
arpl
and
scas
lea
xor
and
imul
mov
enter
jl
xchg
jmp
jg
xchg
mov
fiaddl
push
aad
je
mov
dec
inc
sub
int3
hlt
dec
stos
and
mov
stc
push
xchg
sub
jmp
sub
in
or
jbe
add
dec
std
pop
mov
lods
and
call
pop
mov
or
movsl
gs
cmp
xor
loop
insb
and
clc
sbbb
jae
adc
fistps
dec
and
mov
out
scas
xchg
push
jb
or
adc
cmp
push
sub
sbb
test
dec
ret
sbb
mov
pop
hlt
and
inc
clc
call
out
adc
in
shl
cmp
call
add
sub
push
add
push
cmc
dec
rorb
xor
sub
mov
jne
das
test
orb
cli
loopne
add
xchg
mov
bound
push
fdivr
fcmovnbe
in
and
pusha
add
mov
jg
stos
add
jb
aad
sub
inc
sub
in
gs
mov
pop
mov
and
js
adc
pop
icebp
mov
or
mov
cmp
xchg
sbb
bound
imul
jne
lds
data16
xchg
mov
sub
fdivrs
sti
leave
push
inc
xchg
je
adc
sub
mov
and
sbb
adc
addr16
mov
and
ret
pop
fcoml
in
rcll
sbb
mov
xor
mov
mov
inc
pusha
and
pop
push
lea
daa
sub
xchg
mov
lods
rclb
decl
or
dec
adc
and
icebp
jmp
push
xor
pop
sbb
sbb
dec
sub
call
ret
out
cmpsb
adc
data16
jne
rorl
jmp
sbb
dec
jne
fldenv
out
dec
xor
push
mov
jge
test
inc
push
adc
repnz
bound
push
es
addr16
shlb
adc
push
mov
xchg
or
rorb
jl
imul
popf
adc
mov
jl
cmp
les
insb
loop
push
xor
xchg
pop
std
in
hlt
push
lea
or
fldenv
or
mov
hlt
jno
cmp
or
mov
fnstcw
push
xchg
dec
in
mov
lods
cmp
enter
call
add
rorl
sbb
push
rcrb
les
test
fnstsw
push
push
adc
and
in
bnd
xchg
in
mulb
push
xor
mov
jb
loop
xor
push
xor
fildll
rorl
inc
mov
xchg
nop
mov
or
sub
negl
in
jg
cld
icebp
mov
lods
out
aas
add
test
dec
cmp
dec
mov
mov
movsl
loop
xor
in
lret
mov
cli
scas
jo
loope
or
stos
push
lea
jbe
jno
fs
bswap
aaa
add
std
xchg
inc
bound
push
test
insl
sbb
pusha
lret
sbb
insb
push
jg
clc
mov
leave
hlt
das
add
je
pop
fcoml
cmp
sub
cmp
lds
shr
sub
mov
push
lea
jge
fstps
xchg
push
or
mov
repnz
sbb
mov
hlt
ret
lock
movsl
dec
sub
xor
sub
mov
sarb
jne
orb
push
push
fisubs
test
dec
and
stc
aam
lods
cmpsb
adc
mov
cmp
push
xor
cmc
lock
les
mov
test
inc
dec
aam
xchg
and
push
jo
aaa
xor
xor
mov
jbe
or
lock
cmp
cmp
mov
lahf
adc
mov
push
push
outsb
sub
call
stos
xor
subb
dec
push
mov
je
out
enter
cmp
fnsave
call
popf
shl
and
int
jbe
jmp
and
xchg
hlt
mov
lods
cmp
lods
out
je
sahf
ret
cmpsl
sbb
ljmp
call
mov
test
mov
jmp
clc
sbbl
xchg
mov
fs
jmp
jb
dec
push
out
or
mov
jmp
push
jae
imul
adc
adc
or
in
and
adc
pop
fwait
mov
mov
mov
clc
out
fistl
jne
push
jnp
je
orl
roll
push
cmp
jne
adc
testb
loope
dec
mov
jp
xchg
pop
pop
mov
loopne
jbe
out
push
idivl
fadd
in
ds
xor
push
popf
dec
mov
mov
jne
or
cmp
movsb
jecxz
cmp
mov
mov
mov
or
add
push
xchg
sti
mov
and
inc
jg
pop
jle
dec
repz
lret
stc
leave
add
in
cmp
jne
test
push
call
jmp
enter
hlt
push
pop
mov
mov
push
xchg
pop
cmp
mov
xlat
inc
inc
lcall
cs
sub
sbb
xchg
repz
and
xor
mov
out
push
push
stos
lret
xor
call
negb
je
lea
fcmovne
and
mov
push
adc
push
ret
inc
js
dec
push
dec
sti
cld
std
sbb
std
test
inc
dec
push
and
lret
pop
xchg
mov
mov
dec
or
leave
cmp
jne
ret
or
cmp
add
xchg
sbb
call
mov
and
outsb
and
sahf
cmpsb
pushf
fs
mov
fisttpll
add
and
shl
mov
imul
fs
or
test
repz
xchg
xchg
stc
mov
push
jae
add
fisttpll
mov
loop
ds
mov
movsb
in
ja
jp
mov
lahf
lea
adc
push
imul
sbb
adc
xor
jg
and
popf
jg
pop
add
mov
xor
xchg
rolb
pop
ljmp
scas
mov
push
je
add
adc
scas
lea
jp
mov
movsb
jge
stos
pusha
jmp
mov
pop
pusha
jne
lods
dec
imul
push
add
push
jge
xor
movb
xchg
or
pop
scas
in
mov
js
jge
dec
cwtl
mov
mov
daa
cmpl
and
mov
and
add
cmc
push
lcall
mov
jge
mov
xchg
push
loop
push
aad
daa
movsb
jns
mov
adc
push
notb
fstl
jmp
cltd
outsb
js
inc
pop
pop
dec
pop
ljmp
xor
inc
cld
adc
fldenv
jbe
lcall
sub
sbb
pop
int
xchg
dec
mov
inc
movsb
push
cmp
pop
repz
xchg
enter
call
das
sub
push
add
fdivs
pushf
imul
sbb
pop
cmpsb
inc
sub
mov
daa
xor
jmp
xchg
push
add
aas
repz
mov
fs
ja
mov
movsb
cmp
stos
xchg
frstor
repz
ja
sbb
fadds
femms
add
dec
inc
loop
inc
insb
dec
repz
ret
loop
test
mov
call
adc
xor
add
push
add
or
and
sbb
push
sarb
ret
cmp
movsb
xchg
xlat
and
jle
or
sub
jle
dec
inc
lds
in
repz
pop
xchg
ljmp
adc
dec
jl
fdivrl
popf
cmc
xchg
xchg
push
icebp
inc
imul
imul
add
mov
adc
incl
jle
push
sub
sub
and
in
or
fsubr
bound
pop
stos
mov
inc
dec
imul
pop
jmp
or
rorl
xor
xor
cmpsl
fmuls
or
mov
fdivs
xchg
cld
adc
mov
inc
adcb
es
dec
add
jle
or
jne
inc
enter
pop
adc
decb
shll
push
clc
enter
push
adc
movsl
mov
and
mov
pusha
sbb
inc
mov
dec
pop
and
dec
dec
or
add
inc
enter
xchg
or
imul
popa
pushf
pushf
outsl
in
push
into
sbb
sarb
inc
or
test
fcmovnu
inc
and
inc
clc
lods
es
adc
mov
pop
add
out
daa
outsb
xlat
jne
mov
mov
xchg
xor
or
sbb
ds
sub
repz
in
mov
pop
jo
jmp
sbb
lea
les
fwait
cli
daa
pop
jno
cmp
es
xor
push
push
bound
xchg
js
xor
hlt
pop
xchg
ja
push
out
fld
sahf
hlt
enter
or
int3
lea
xchg
sbb
jecxz
or
or
popf
inc
mov
shrb
gs
aam
test
adc
push
inc
ret
jg
mov
add
cmpb
ljmp
mov
add
xchg
sub
xchg
xor
test
xchg
lret
jne
xchg
mov
mov
and
test
call
adc
mov
cmp
fmull
cmp
ficoms
stc
xor
adc
xor
ficomps
adc
push
cli
rclb
sub
pop
adc
xchg
xchg
pop
mov
adc
push
insb
or
jo
bound
icebp
in
mov
mov
adcb
imul
push
jg
xchg
or
dec
inc
jmp
mov
lret
push
lds
sub
dec
testl
adc
xchg
fcoml
pop
inc
cwtl
mov
out
mov
xor
and
bswap
xchg
lods
push
dec
rdtsc
jmp
pop
push
push
cmp
movsb
test
jne
push
pop
or
mov
adc
sti
jne
sbbb
dec
and
js
jne
jle
push
leave
lods
or
dec
push
and
outsb
inc
cmp
loop
test
xchg
sbb
lds
cmp
fcmovb
jne
scas
imull
sbb
push
adc
rsm
push
je
push
push
inc
icebp
repz
jne
in
movsl
mov
xlat
icebp
orb
pop
ret
dec
mov
lds
pop
fs
mov
fimull
fadds
push
jg
js
push
sub
jae
gs
insb
popf
jnp
xchg
fisttps
cli
mov
aas
inc
icebp
stc
in
jne
push
fcoms
fldl
loop
ret
inc
add
xor
in
ret
mov
dec
orb
fs
xor
jmp
out
gs
ja,pn
or
add
sub
sub
mov
cltd
pop
frstpm(287
cmpsl
shlb
or
pop
xchg
add
dec
lea
das
mov
or
sub
jmp
pop
mov
inc
pavgw
dec
enter
mov
imul
ljmp
dec
push
pop
add
sbb
sbb
sbb
dec
out
jg
or
dec
cld
movsb
jecxz
adc
jmp
jo
mov
add
or
ja
sbb
push
mov
popa
and
pop
fs
scas
dec
rorb
adc
cmp
push
xchg
or
stos
mov
xor
adc
loop
roll
insl
outsl
call
or
push
jge
mov
jns
push
jb
js
push
imul
in
sbb
mov
aaa
add
gs
adcb
dec
js
js
adc
or
xchg
pop
jecxz
dec
sbb
pop
or
sub
xorb
icebp
loopne
mov
push
pop
jno
call
xor
pop
inc
dec
sbb
cld
adc
cmp
inc
shlb
pusha
pushf
lret
cli
adc
ja
and
lock
and
sarb
mov
imul
filds
fildl
sbb
or
and
or
mov
and
lods
je
aas
nop
cmp
inc
xor
push
xor
xor
xlat
pop
imul
ljmp
int3
leave
test
ja
in
inc
pop
xor
or
into
je
jmp
out
lea
lahf
mov
cltd
mov
ja
jo
add
adc
xlat
inc
jg
dec
popf
shll
xchg
pop
fstp
nop
pop
xchg
icebp
loopne
cltd
dec
adc
push
leave
pop
xchg
xchg
add
jl
cmp
push
jo
xor
jge
stc
ljmp
inc
cmp
mov
enter
outsl
or
fnstenv
inc
and
cli
call
popf
push
mov
pushf
gs
mov
pop
cmpl
and
or
jne
cmp
test
notb
push
int
sub
adc
jecxz
pushf
pop
out
inc
pop
xor
xlat
add
iret
or
xchg
cmovo
push
hlt
aaa
les
loope
cld
imul
lret
or
ljmp
sub
testb
push
std
lcall
js
xchg
pop
and
in
jns
mov
add
push
push
sbb
int3
mov
shlb
jp
pop
push
mov
push
jle
jl
xchg
jns
sbb
dec
xor
pop
std
mov
cmp
xor
xor
mov
mov
lods
das
jg
outsl
inc
pop
out
xor
cmp
in
mov
outsl
inc
dec
mov
mov
rolb
push
mov
lret
rorb
pop
mov
les
ja
add
and
xor
stos
test
push
fs
in
lock
cmpsl
push
sarl
je
scas
frstor
cmp
das
inc
scas
and
pop
cwtl
fs
imul
sub
sahf
add
fisttpll
adc
lahf
jne
add
addb
push
xchg
lock
sub
cmpsl
push
push
mov
cmp
es
in
lock
or
jge
les
jb
pop
and
sarl
xchg
sub
dec
push
js
push
xchg
addr16
push
push
subl
xchg
pop
out
arpl
fisubs
inc
push
xchg
mov
sub
sbb
push
dec
adc
dec
push
jmp
xor
js
push
test
mov
cmp
jae
aam
jmp
and
int3
mov
ret
inc
lock
dec
popl
mov
lret
push
and
lock
or
add
imulb
and
push
arpl
sti
test
cmp
cmp
je
js
xchg
ss
inc
jecxz
call
dec
sbb
cmp
and
xchg
mov
push
xor
test
xor
cmp
mov
and
lea
push
jbe
dec
inc
mov
cmp
push
out
aam
les
push
mov
inc
inc
sahf
in
sub
push
shll
xchg
hlt
mov
push
and
add
dec
es
fs
push
hlt
or
push
and
mov
rcrb
sub
push
add
in
sbb
stc
jecxz
dec
or
das
mov
pop
call
sub
fwait
xchg
lcall
xchg
jmp
shr
insb
icebp
addr16
or
ds
inc
cmp
lock
bound
and
pop
push
push
cltd
xor
or
mov
and
mov
xchg
dec
xchg
cmpsb
mov
mov
pop
mov
add
xchg
movsb
es
adc
sub
idivb
addb
dec
sti
popf
or
or
lods
lea
sbb
loope
jns
inc
mov
add
or
xor
cld
sub
sub
jmp
jnp
mov
mov
mov
and
bound
je
int3
adc
mov
and
idivl
mov
xchg
push
daa
jmp
rorl
ja
and
cmp
cmp
not
mov
push
mov
adc
mov
in
adc
jp
add
and
xor
fs
push
in
test
push
fwait
and
pop
loop
std
mov
aad
and
adc
dec
shll
dec
and
hlt
cmpsb
jp
dec
dec
pop
jmp
loopne
jmp
or
adc
clc
or
stos
dec
mov
xchg
cld
adc
inc
sub
dec
push
sbb
mov
les
sub
inc
test
in
into
lahf
jne
leave
sbb
nop
cmpsl
mov
dec
mov
push
lret
dec
cmpsb
int3
pop
dec
xchg
test
pop
lcall
aad
pop
xchg
fsubl
mov
pop
cld
stos
push
push
xor
fildl
add
fbstp
cmpsl
push
fs
stc
pop
imul
dec
leave
jg
cmp
ret
movsb
loopne
call
std
cmp
mov
das
in
push
cmp
out
scas
shlb
sbb
mov
cmp
and
sbb
dec
stos
jns
cs
inc
in
inc
adc
jg
shr
mov
into
jo
inc
jne
enter
fcomp
ret
mov
inc
mov
stc
inc
iret
je
cmpl
xor
inc
push
jne
cltd
repnz
mov
fcmovnu
or
adc
dec
insb
push
mov
jmp
cmc
pop
mov
dec
cmpsl
adc
jecxz
push
sahf
sbb
pop
mov
mov
ret
out
inc
mov
cmpsl
pop
and
movsl
sbb
and
pop
dec
mov
jnp
cmp
jl
xchg
or
add
imul
pop
iret
pop
xchg
popa
jl
in
cmp
add
push
mov
imul
fadd
sarl
jnp
or
hlt
adc
stc
ljmp
aad
popf
pop
xchg
mov
xchg
scas
add
lcall
fs
addr16
filds
movsb
and
cmp
out
jmp
adc
or
fnstsw
cltd
and
push
xchg
sbb
leave
cmpb
pop
data16
fstpt
adc
and
jne
pop
xchg
sbb
jne
push
mov
xchg
jbe
pop
push
idivb
jno
adc
mov
xchg
mov
int
in
or
push
jecxz
sub
or
pop
inc
add
dec
test
dec
mov
pop
or
mov
cmp
daa
adc
mov
or
xchg
push
dec
test
pop
sub
pop
mov
xchg
sarl
mov
mov
js
das
lds
jg
pop
xchg
jge
jecxz,pt
and
jecxz
pop
daa
sub
pop
inc
xchg
sbb
sbb
lahf
xlat
pop
lods
adc
loope
sub
bound
or
cmp
mov
cmp
cmpl
outsl
enter
outsb
int
sub
or
xchg
loopne
dec
mov
imul
cs
and
xlat
sbb
outsl
movsb
ret
in
mov
insb
sbb
test
xor
mov
mov
adc
in
sbb
sbb
repz
bound
dec
popf
movsl
ss
xlat
popf
pop
jae
imul
dec
mov
hlt
push
lcall
orb
idiv
xchg
stc
pop
psubsb
call
call
ret
je
sub
xor
mov
lcall
sub
inc
andl
mov
xlat
pop
sbb
adc
xor
clc
jno
cmp
jne
pop
xchg
rcrb
jae
int
inc
enter
pop
adc
mov
aas
incl
in
dec
jne
int3
sbb
adc
rcll
cmp
fldl
lcall
xchg
loopne
enter
jo
pop
arpl
dec
leave
mov
cld
jnp
fdivrl
push
shll
or
test
sub
andb
mov
add
sub
test
call
sbb
adc
jo
sbb
push
mov
loop
dec
sub
or
sub
lret
pop
and
pop
fildl
adc
out
mov
lock
add
dec
cmpb
add
nop
dec
cmp
out
ds
es
pop
out
or
adc
dec
sete
xorb
push
jo
and
dec
cli
xor
cltd
lods
pop
or
jne
mov
inc
ret
lret
push
add
or
fcomps
inc
stos
mov
icebp
push
mov
mov
mov
daa
fucomip
cmc
test
adc
sbb
and
jecxz
push
mov
loope
dec
cli
inc
add
rorb
sbb
xorb
dec
jne
adc
les
daa
sbb
lds
or
cmp
push
stc
fadds
in
pop
cmp
xor
sbb
sbb
push
add
push
or
and
push
clc
or
rorb
xor
jnp
cld
adc
test
lret
je
idiv
dec
test
loope
jb
out
fisubrs
call
add
mov
jmp
cmp
sbb
lret
int3
sub
mov
gs
imul
xchg
insl
xor
xor
and
push
jb
scas
mov
incl
ret
push
std
push
fnstcw
lret
je
or
in
call
jle
pop
loope
jg
xchg
lods
cltd
push
shl
fsub
mov
pop
lods
stos
into
mov
pop
mov
dec
stc
mov
xor
jb
and
cld
test
or
outsb
pop
shll
xor
inc
or
inc
clc
or
out
jae
mov
bound
ss
mov
adc
push
push
add
cld
mov
adc
jmpw
stos
inc
add
outsl
jne
jecxz
or
xchg
movl
imul
imul
cmpsb
mov
mov
adc
xor
xor
add
repnz
addr16
jp
ss
test
or
xor
std
sbb
mov
dec
call
xor
fcomps
sub
push
inc
fs
mov
cmpsl
fistpl
lcall
dec
and
xchg
or
sbb
fwait
in
or
mov
dec
jge
mov
jmp
adc
outsb
in
mov
xor
adc
insb
adc
repz
sub
or
jae
mov
or
mov
mov
push
imull
lock
inc
or
mov
push
mov
fsubl
inc
sbb
mov
inc
out
fbld
push
jl
sbb
or
js
lea
or
jge
xchg
xor
adc
or
jno
or
hlt
dec
rorb
jg
jmp
push
enter
xchg
xor
jmp
shrl
cmp
push
aam
enter
and
mov
rclb
cmpsl
or
mov
test
lods
and
adc
mov
dec
movsb
and
mov
mov
or
inc
jb
mov
shrl
sub
or
push
sahf
dec
sahf
in
aam
xchg
cmovne
sub
pop
push
jmp
mov
movsl
mov
outsl
lods
mov
sub
incl
aam
jl
sbb
inc
adc
movsl
inc
and
adc
mov
dec
je
imul
adc
nop
mov
add
xchg
xorl
dec
jbe
jge
and
scas
xchg
nop
push
pop
xor
adc
in
and
dec
daa
add
push
movl
or
jecxz
int3
cmp
inc
lahf
call
lds
out
push
je
out
enter
test
or
push
dec
dec
mov
adc
adc
or
je
and
cmp
mov
mov
add
stos
cmpsb
or
inc
xor
fdivrl
push
mov
mov
jns
pop
inc
add
xchg
es
push
inc
cltd
aaa
in
push
das
adc
sbb
test
cmpsb
blcs
push
popa
and
and
push
jne
xor
sub
loop
nop
inc
and
gs
test
clc
adc
pop
add
lods
repnz
rorl
sbb
xchg
or
out
loope
mov
cli
inc
loope
movsl
dec
cmp
xor
pop
dec
stc
pop
rorl
sbb
adc
cwtl
sbb
xchg
adc
mov
and
xchg
pop
mov
push
jno
outsb
and
clc
mov
movsb
dec
call
aam
js
cmp
subb
hlt
or
mov
add
pop
movsb
or
xor
and
xchg
add
dec
lahf
lock
and
push
pushf
adc
mov
sub
fisttpll
rol
popa
mov
test
sub
or
fsubr
test
cmp
dec
mov
add
andl
xchg
add
sbbl
mov
add
addr16
mov
inc
clc
mov
hlt
mov
test
inc
push
mov
loopne
in
aam
in
and
inc
adc
mov
stc
and
pop
es
or
adc
call
add
push
out
aam
out
lods
cld
rorl
add
sarl
rorl
inc
xor
movb
push
mov
pop
dec
sub
and
aaa
or
sbb
sbb
xchg
or
dec
insb
imul
mov
adc
sbb
int
push
adc
push
cmp
es
sbb
sub
jmp
adc
mov
in
jae
push
mov
enter
in
adc
adc
sub
mov
fsubs
and
in
mov
or
jo
nop
mov
sub
in
adc
pop
jp
pop
xchg
sub
dec
mov
adc
and
jbe
add
or
pop
sbb
lds
or
aaa
mov
leave
aaa
imul
sub
imul
loopne
push
or
cmpsb
test
inc
push
popf
gs
imul
pop
and
imul
fcomps
js
in
inc
inc
adc
test
mov
or
add
shll
test
xor
or
lds
mov
inc
adc
int3
or
adc
lret
or
gs
mov
adc
xchg
xor
xor
cmp
inc
inc
inc
inc
inc
add
dec
dec
dec
dec
dec
dec
add
push
push
push
push
push
push
pop
push
push
pop
pop
pop
or
sub
clc
fidivs
adc
jmp
aam
and
adc
scas
xchg
add
pop
cmp
xlat
repz
ljmp
fsts
outsl
test
and
xchg
and
dec
fdivl
std
mov
xor
stc
cwtl
pop
jne
sbb
add
aaa
and
add
movsl
dec
cld
test
xchg
jo
ljmp
aam
shl
xchg
mov
xor
xor
mov
pop
out
lcall
mov
push
push
pop
mov
and
das
lock
sub
in
loopne
movsl
xor
jo
stos
fcomip
add
enter
ret
jo
jmp
pop
clc
inc
jge
enter
shll
xchg
fs
adc
or
add
mov
stos
xchg
sbb
xchg
rclb
xchg
lods
push
adc
in
dec
push
or
push
inc
aam
add
cmpsb
inc
push
dec
sbb
adc
imul
ret
mov
jmp
push
adc
inc
out
ljmp
outsl
lahf
test
pop
hlt
stos
std
mov
dec
mov
xlat
xchg
aam
mov
and
add
add
jg
or
jae
sub
or
daa
inc
bound
inc
andb
dec
sbb
and
cli
stc
movsl
cmpsl
dec
repz
je
pop
lahf
pop
sbbb
or
push
outsl
mov
sub
or
pop
cmp
jl
sbb
push
xchg
ror
inc
sbb
inc
pop
mov
dec
and
add
push
or
dec
jg
loopne
xor
mov
jg
bound
in
popa
push
fstl
insl
mov
or
lea
mov
or
iret
xor
mov
adc
jmp
scas
and
movsb
dec
clc
inc
outsl
imul
into
aam
add
or
jmp
inc
frstor
add
fcoms
push
and
add
scas
std
and
cld
or
mov
arpl
mov
js
movsb
adc
and
sbb
hlt
pop
stos
adc
sub
cmovns
mov
lods
mov
inc
aas
mov
ja
fistpl
sbb
pop
xlat
add
arpl
ret
jnp
dec
call
dec
hlt
fstpl
xchg
imul
or
call
mov
sar
mov
cli
push
inc
lock
jo
adc
rorl
jne
push
cmp
jle
clc
jmp
fs
in
and
jmp
xchg
push
jbe
int3
xor
or
pop
adc
push
call
pop
xor
jmp
fnstsw
ss
inc
in
js
hlt
sbb
gs
sbb
cmp
jbe
sbb
in
insb
adc
add
ljmp
decl
inc
imul
call
and
mov
or
push
sbb
cmp
dec
sarb
mov
fs
and
xlat
and
imul
lock
pop
imul
push
xor
fsubl
jb
xor
push
cmp
push
rclb
inc
push
test
mov
clc
push
jl
enter
or
xor
xor
sub
and
adc
inc
insb
sbb
mov
aas
cmp
scas
jo
outsl
xor
and
imul
adc
andl
pop
push
xchg
insb
pusha
movsb
out
push
xchg
push
loop
ds
push
and
nop
sti
orb
dec
scas
jne
sti
mov
sbb
insb
xchg
test
std
sbbl
scas
mov
xchg
inc
sub
popa
roll
and
sub
cmova
xor
mov
sbb
cmp
out
sub
fs
and
fists
mov
nop
inc
loop
mov
push
test
inc
les
dec
adc
dec
nop
dec
ficomps
adc
lods
mov
add
cmp
cmp
push
cmp
call
xlat
popf
pop
push
inc
xchg
pop
stos
std
push
loop
xor
test
or
mov
mov
dec
test
xor
pop
cwtl
stos
es
and
jmp
xchg
mov
mov
out
xor
enter
cli
add
adc
repnz
test
imul
popfw
xor
ror
mov
xor
sub
loope
dec
outsb
fisubs
and
lret
roll
imul
fwait
imul
or
dec
jo
imul
pop
push
sbbb
out
js
daa
push
xor
jecxz
or
pop
incl
inc
fucomi
dec
xchg
pop
xor
inc
mov
aam
subl
mov
decl
mov
shl
add
inc
pusha
cmp
fwait
sub
mov
ljmp
sub
clc
or
addb
stc
movl
lret
aas
ret
inc
lcall
notb
jne
daa
pop
push
nop
xchg
jnp
push
mov
pushf
inc
imul
xor
imul
test
in
sub
pop
leave
xchg
or
ret
adc
cmp
insb
es
sbb
push
iret
mov
inc
inc
xor
aaa
push
cltd
or
adc
roll
xlat
dec
and
add
pop
fisttpl
push
jmp
push
adc
in
adc
push
jmp
mov
jmp
mov
and
mov
and
cmp
jmp
lcall
inc
ja
or
adc
mov
je
loop
test
daa
jmp
int3
mov
arpl
call
or
sub
iret
mov
push
cbtw
roll
call
dec
scas
lret
testb
stos
in
and
push
stc
mov
or
inc
inc
movsl
sbb
or
or
js
sti
mov
mov
enter
test
and
jmp
stos
daa
iret
insl
jae
sub
and
test
dec
insb
ret
loopne
push
negb
test
das
sub
rclb
and
andb
insb
cmp
or
pop
stc
cmp
push
mov
push
fsubrs
ja
pop
dec
outsl
mov
je
xor
add
cmp
xor
dec
cmp
and
jne
adc
test
jmp
insb
js
adc
lds
add
mov
std
imul
xchg
shll
xor
dec
push
scas
and
adc
inc
pop
test
push
mov
dec
adc
int3
call
jge
add
into
dec
jo
loop
sahf
push
inc
cmp
fs
jmp
pop
inc
stos
ja
shl
cmp
ss
push
xchg
clc
push
mov
outsb
pop
pusha
lock
xor
in
cmp
jge
cli
aad
fiadds
cmp
jae
mov
ret
xchg
add
jbe
or
and
ret
pop
push
bound
fidivrs
pop
inc
inc
mov
mov
lods
and
mov
fldenv
or
test
mov
lods
ss
and
cld
popf
dec
das
stc
push
test
mov
pushf
in
pop
stos
test
mov
repz
and
xlat
xchg
xor
scas
dec
xor
fsubs
jmp
cwtl
dec
sbb
jecxz
lret
lret
add
outsb
fsubrl
ja
clc
hlt
jne
push
and
sbb
addl
mov
test
je
and
stos
adc
fnsave
mov
lods
mov
jge
jge
mov
jno
pop
and
sbb
in
lahf
add
or
mov
mov
push
jmp
inc
adc
in
dec
ret
xor
sbb
sub
mov
add
or
add
aam
xchg
loope
mov
dec
push
add
fstl
int
cmp
dec
mov
jp
pop
inc
call
mov
addb
adc
mov
bound
iret
adc
mov
mov
lret
test
jns
jmp
sub
xor
mov
mov
inc
dec
test
pop
cld
test
lock
je
je
lcall
mov
ljmp
fs
or
popf
lds
out
cltd
push
out
xchg
adc
pop
lods
jg
or
je
sub
mov
push
mov
and
inc
jmp
stos
inc
pop
pop
adc
xor
xlat
adc
test
stos
adc
rol
movb
adc
mov
or
test
mov
mov
adc
das
rcrl
cmp
loope
mov
push
or
enter
mov
sub
jg
imull
inc
clc
cld
dec
jne
pop
xchg
add
lret
dec
popf
rclb
into
pop
xchg
jmp
adc
adc
repz
or
dec
jecxz
cmp
sbb
jo
loop
and
testb
mov
adc
fisttpl
sbb
movl
xor
or
mov
dec
xchg
xchg
add
rclb
mov
jbe
or
push
rolb
xor
icebp
clc
sbb
pop
adc
jmp
sub
add
pushf
mov
push
cld
mov
sbb
or
push
and
ficomps
jl
mov
mov
xor
int3
ud2
call
rclb
and
loop
and
inc
adc
hlt
imul
dec
dec
inc
and
push
hlt
daa
and
pop
inc
add
mov
and
mov
push
xchg
sub
dec
or
cmp
mov
xor
scas
dec
add
push
cmp
lcall
inc
inc
lea
push
int
mov
sub
mov
mov
xchg
iret
dec
fs
sbb
adc
xor
cwtl
mov
sub
clc
jno
daa
sub
jl
push
ja
cld
inc
push
push
sub
pop
lock
fists
scas
dec
mov
or
ss
pop
mov
stc
out
out
rcrl
xchg
mov
sub
cmp
sub
push
push
ss
mov
lea
xor
hlt
sbb
or
xchg
hlt
push
push
xor
hlt
lcall
and
movsb
add
cmp
cli
and
decl
push
dec
jns
pop
cmp
mov
mov
sbb
and
lock
and
pop
andl
inc
xchg
adc
pushf
cmpb
push
mov
sub
mov
rol
test
lock
jmp
adc
movsb
and
mov
dec
mov
mov
sub
lret
push
dec
and
ja
aas
outsb
dec
pushf
sub
adc
movsl
jb
xlat
sub
loopne
jo
and
dec
inc
add
xor
icebp
add
cmp
pushf
and
inc
jne
sbb
or
leave
adc
iret
pop
sbb
jl
sub
enter
leave
dec
sub
add
in
inc
orl
mov
daa
and
sub
mov
lret
ret
inc
xlat
ja
pushf
or
int3
bound
xchg
jg
call
mov
adc
inc
test
dec
in
data16
jg
pop
ret
in
cli
jg
sub
add
sbb
xor
popf
push
test
pop
pusha
rclb
push
sub
dec
xchg
call
bound
sbb
pop
dec
iret
sub
adc
mov
clc
lea
xchg
dec
dec
in
jge
bound
idivb
jl
dec
je
or
cmp
lods
testb
and
dec
ds
cmp
adc
mov
pop
in
cmpsl
xchg
adc
sub
push
or
sahf
and
repz
call
push
clc
adc
enter
add
adc
es
cmp
and
or
and
pop
pop
arpl
push
xchg
fnstsw
mov
mov
ret
pop
xchg
rcrl
sub
scas
mov
inc
notb
cld
sbb
sub
rcll
xor
lret
mov
sti
test
sub
sbb
adc
shll
or
sbb
pop
testb
push
in
hlt
movsl
enter
loope
push
pop
mov
out
leave
inc
xor
pusha
aam
xor
xor
sub
add
popf
mov
loopne
mov
push
fdivrs
mov
clc
jb
push
rorb
pop
inc
nop
pop
shl
or
jg
mov
je
andb
cmp
jg
or
loopne
rol
or
mov
mov
and
ret
push
jle
stc
push
and
inc
addl
pop
dec
enter
adc
sub
push
mov
inc
mov
sub
je
inc
adc
pop
pop
dec
xor
pop
adc
adc
push
nop
test
xchg
test
xchg
lods
rcl
movsb
cs
fs
add
mov
hlt
cmpl
js
adc
and
or
imul
aaa
std
inc
pop
ret
pop
lahf
pop
rorb
test
scas
mov
jmp
xchg
jne
fs
push
mov
push
mov
imul
push
sub
lret
adc
sahf
dec
sar
sbb
xor
cltd
fmuls
mov
add
popl
push
mov
dec
insb
pusha
aad
jecxz
hlt
addb
fcompl
dec
or
pop
mov
and
mov
jg
stc
add
test
jne
outsl
mov
test
or
add
or
xor
test
es
test
jne
pop
dec
jbe
pop
mov
and
sbb
push
addr16
cltd
inc
push
daa
add
dec
or
addl
popa
xor
call
sbb
cmp
mov
or
pop
pusha
movsb
in
divl
jg
in
cwtl
xor
jp
push
inc
pop
push
or
mov
enter
addr16
or
mov
ret
push
push
xchg
dec
stos
bound
out
iret
mov
pop
and
add
adc
mov
sti
adc
roll
xchg
mov
leave
sahf
and
sbb
push
outsl
andb
arpl
shrl
mov
jl
add
push
dec
sbbl
dec
or
ret
fst
push
adc
and
jne
push
cmp
cli
jb
sub
add
inc
cmp
ret
nop
lods
jp
push
popa
jne
xor
sub
insl
push
data16
cmp
pop
aaa
mov
jle
jp
dec
daa
out
dec
repnz
test
adc
mov
inc
push
sub
or
pushw
scas
shll
movsl
mov
lods
fst
and
test
je
sbb
adc
mov
imul
or
and
and
jnp
inc
int
cmp
adc
or
je
dec
inc
adc
clc
push
sbb
pop
mov
aas
or
push
rorl
inc
jle
sar
int3
adc
adc
mov
daa
inc
or
xchg
push
das
jnp
push
xor
inc
pop
sub
xor
data16
mov
fnstsw
xor
test
lock
jne,pt
xor
outsb
and
or
lret
mov
rorl
ret
dec
dec
inc
hlt
mov
frstor
lock
dec
jmp
cmpsl
pop
ljmp
pop
ret
stc
xor
cmp
lods
mov
rclb
adc
test
ljmp
int3
jle
jb
xchg
pop
xchg
shlb
out
sub
inc
je
lcall
xor
test
adc
or
push
dec
adc
movb
outsb
pmaxub
out
xchg
xchg
aam
cs
aad
cmp
call
lret
adcb
ret
aam
leave
pandn
add
dec
test
jl
xchg
lcall
hlt
aad
movsb
dec
movsb
ss
out
push
adc
rcll
and
mov
test
xor
into
out
fldl
xor
in
sahf
push
jp
xor
dec
leave
jmp
push
pop
push
mov
push
inc
mov
scas
je
loop
dec
sarb
adc
sub
mov
jl
jbe
clc
movsb
or
cmpsl
xchg
popf
repnz
gs
adc
je
sbb
nop
je
loop
jnp
add
mov
jb
sbb
mov
xchg
in
or
sbb
sbb
jg
push
sub
cmc
mov
xchg
sub
adc
inc
push
cmp
mov
jne
out
push
je
or
std
loop
xchg
sbb
in
dec
push
lods
xor
mov
push
out
inc
adc
scas
hlt
xchg
xchg
ja
dec
lret
enter
cmpsl
adc
out
pushf
aas
into
sti
cltd
shlb
sub
aad
add
push
ret
xor
sub
loop
push
imul
daa
adc
inc
sbbb
push
repz
xchg
call
fcompl
and
push
xchg
or
cmp
or
dec
mov
pop
jae
stos
ficoms
pop
je
arpl
xchg
test
xchg
mov
test
push
push
iret
insl
adc
inc
and
and
cmpsl
bound
dec
inc
fmull
hlt
pop
out
mov
adc
cmp
jge
or
xchg
jbe
inc
movsb
cmpsl
or
enter
sarb
nop
in
sub
aam
xor
fwait
arpl
imul
sub
stos
sub
adc
ljmp
fsubs
cmpl
xchg
jb
imul
call
xlat
shll
lret
into
sbb
aas
add
jmp
ds
inc
sbb
cmp
ret
jne
xor
je
or
or
pop
sub
popf
mov
inc
rcl
out
mov
int
xchg
sti
leave
repz
cmpb
xchg
xchg
sbb
jle
shrl
push
fs
mov
xchg
add
adc
jns
adc
xchg
mov
mov
jbe
mov
insb
jns
adc
or
in
xchg
sahf
jl
or
mov
aas
dec
push
insb
mov
lcall
les
fists
sbb
data16
pop
push
divl
call
push
xorl
xchg
push
xchg
and
push
or
mov
xchg
add
mov
push
pop
inc
adc
inc
and
idivl
jo
adc
cmp
sub
fidivl
dec
movsb
xor
xor
sbb
and
jg
sub
cmp
enter
cmp
inc
aas
mov
and
je
jne
push
imul
push
mov
adc
inc
xchg
jge
dec
and
mov
mov
pop
dec
rclb
mov
das
xor
iret
jno
cmp
fstp
cltd
add
push
cld
jle
cmpsb
adc
scas
popf
inc
push
push
std
inc
pop
sti
push
jmp
adc
push
in
bound
dec
jl
cmp
pop
sahf
jno
cmp
ret
dec
xor
mov
jmp
dec
push
add
scas
jecxz
lods
fdiv
inc
nop
mov
sub
and
nop
cmp
shll
pushf
sbb
adc
andl
xchg
scas
gs
jmp
jl
mov
shll
lahf
mov
icebp
pop
xor
adc
push
push
neg
ljmp
sarl
leave
jne
clc
hlt
adc
outsb
mov
or
dec
scas
insb
dec
push
inc
lods
xchg
mov
jle
mov
push
mov
lds
jns
shll
test
je
inc
dec
jne
clc
aas
repz
sub
push
sub
cmp
add
mov
and
jle
bound
adc
inc
pop
lock
add
mov
push
lock
push
or
sbb
mov
loope
push
fmull
jmp
aaa
pushl
daa
test
adc
and
andl
cmp
pop
lods
test
and
imul
in
adc
mov
pop
sub
jb
mov
add
aam
rolb
int3
add
add
stc
cmc
out
cmp
dec
jmp
mov
movb
test
adcb
jne
mov
les
or
pop
call
cmp
dec
lret
push
in
add
insl
enter
pop
pop
mov
and
loopne
clc
mov
jmp
pop
jno
push
enter
cmp
stos
adc
xlat
movsb
inc
add
mov
cmp
imul
inc
das
orb
outsl
sbb
aam
adc
push
mov
cmc
mov
das
dec
dec
xor
fs
cltd
or
jg
pop
push
mov
cmp
xchg
dec
jp
movsl
xor
je
sbb
insb
mov
out
insb
cld
je
and
enter
jmp
aam
les
movsb
dec
pop
data16
cmp
stc
in
jcxz
loopne
inc
mov
loope
insb
and
lea
sbb
or
ja
imul
rorb
and
pop
and
add
bound
mov
call
dec
jb
mov
inc
je
ja
inc
push
shld
fwait
xor
cmp
jp
mov
rolb
in
aaa
push
mov
xchg
loop
pop
dec
jmp
push
inc
outsb
xor
mov
or
rorb
push
cmp
loopne
adc
test
in
std
sub
test
sub
xchg
dec
clc
mov
lahf
and
jo
fneni(8087
mov
ja
or
mov
dec
mov
xchg
jo
scas
iret
xchg
sbbb
mov
loop
lahf
ret
inc
push
sbb
sub
cmpsl
adc
dec
aas
xchg
mov
or
sbb
lds
mov
push
adc
pushf
imul
and
jnp
push
sbb
push
mov
push
mov
xor
or
xchg
mov
dec
mov
jb
bound
jne
into
mov
mov
pop
out
and
or
imul
jne
sub
int3
cli
add
lahf
cwtl
xchg
daa
out
fisttpl
into
mov
sub
loopne
cmp
int
add
push
cmp
fsts
mov
push
movsb
cmpsl
sbb
jmp
nop
mov
outsb
movsl
loope
or
inc
sbb
or
call
out
xchg
lock
or
sub
sub
jl
aas
inc
sub
pusha
sub
mov
fs
adc
inc
rcl
jmp
mov
sub
ret
pop
cmp
inc
loopne
push
subb
in
inc
and
ja
sahf
ret
xchg
mov
push
sbb
and
add
fbld
jl
ret
aaa
dec
mov
adc
jne
mov
jl
cmp
popa
loope
inc
cmp
add
pop
cmpl
and
mov
sbb
loop
or
inc
enter
inc
cmp
movl
stc
sti
leave
mov
inc
in
push
xchg
negl
jge
xchg
cmp
xlat
cwtl
cli
pop
jo
iret
sbb
push
mov
mov
xor
in
cmp
mov
pop
sbb
mov
ja
int
push
xor
add
inc
mov
loopne
idivl
mov
std
ljmp
and
xchg
push
pop
fs
stc
jne
mov
or
ret
test
pop
push
nop
push
sub
mov
mov
fwait
or
mov
add
ret
pop
shll
or
mov
adc
mov
scas
sub
stc
or
mov
rcrb
ret
push
xlat
jno
add
and
jne
inc
test
lock
push
cs
jne
fucomip
adc
sub
js
cmc
enter
mov
fs
jnp
lods
pop
push
pop
mov
push
ljmp
cli
jp
mov
imul
or
mov
xor
mov
mov
adc
jmp
ret
dec
xor
test
push
cmpl
cmc
mov
out
adc
scas
sub
sarb
xchg
xor
lock
fimuls
or
xlat
in
movsl
dec
inc
testb
cli
add
jge
mov
test
lret
or
mov
js
pop
testb
inc
lret
out
lret
cmp
mov
pop
stos
cmp
lods
gs
sub
cld
pop
pop
and
adc
jge
out
les
hlt
xchg
inc
or
les
repnz
movsb
test
test
jle
mov
hlt
nop
js
negb
lret
pop
fs
xor
or
mov
call
and
and
add
mov
fdivr
pop
mov
mov
mov
outsl
push
push
outsl
cwtl
ja
add
mov
add
jmp
mov
in
add
mov
mov
test
sbb
mov
push
out
ljmp
mov
or
mov
sbb
push
xchg
pop
mov
add
jg
in
jmp
inc
mov
xchg
jmp
jo
cli
mov
insb
sub
pop
add
cli
dec
push
je
lret
cmc
adc
test
mov
test
and
insb
adc
testb
je
or
idivb
popf
out
xor
push
test
loope
repz
sub
repz
mov
inc
pop
pop
stos
popa
test
insb
out
inc
scas
fbld
jge
add
sub
xor
push
fadd
out
enter
push
pop
out
repz
jb
loope
stos
aad
or
das
mov
mov
mov
stos
jmp
ljmp
pop
pop
sub
and
ja
pushf
mov
xchg
adc
xchg
fsubl
sub
xchg
call
mov
sub
pop
ljmp
jo
pusha
pusha
movsl
cli
add
rolb
inc
xor
mov
adc
add
and
lcall
movsl
stc
pop
bound
jae
imul
jp
mov
lods
hlt
mov
push
sbb
jge
cmpsb
pop
or
and
sti
push
sbb
js
push
sub
push
cld
mov
cld
std
das
inc
into
and
push
mov
loopne
jmp
sub
push
ret
mov
movb
inc
or
nop
add
mov
jge
negb
clc
jb
sti
cmp
addr16
mov
mov
sbbl
adc
or
dec
lods
incl
sub
sbb
sub
xchg
jle
pushl
je
jno
or
sbb
push
hlt
or
mov
or
mov
adc
scas
push
adc
mov
arpl
loop
das
xor
arpl
push
inc
int3
lds
or
push
or
les
lds
jl
addr16
mov
lods
sbb
inc
faddl
pop
mov
cmp
push
scas
dec
sbb
dec
sbb
inc
push
xchg
or
and
mov
out
scas
outsb
xor
mov
jbe
jmp
in
das
pop
pop
xchg
jg
fcmovnu
in
xor
jne
lods
inc
or
or
mov
test
xlat
repnz
rcl
inc
sub
dec
pop
push
scas
jae
and
xchg
jle
stos
sub
dec
cmp
push
and
sub
pop
int
cmp
cmp
dec
push
pop
dec
cli
int3
push
pop
dec
mov
xor
mov
shrl
in
rcll
adc
push
sti
xor
or
out
mov
xchg
push
mov
xor
stos
push
sbb
push
sub
push
test
mov
xor
std
orl
pushf
adc
or
rclb
int
sub
divb
inc
icebp
push
sbb
jns
outsb
mov
adc
loop
rcrb
cs
push
and
in
cmp
hlt
clc
test
or
imul
jl
in
stos
loopne
inc
dec
xor
sbb
mov
cmp
mov
mov
xchg
ljmp
cmp
pusha
cli
gs
push
mov
mov
in
or
push
clc
pop
cmp
nop
ja
or
push
test
mov
inc
or
add
scas
and
add
add
movl
ljmp
jmp
ucomiss
sbb
lock
dec
fs
adc
pop
pop
addb
push
xor
or
in
push
sbb
call
push
jb
pop
dec
dec
inc
inc
jns
xchg
inc
jno
jmp
mov
dec
adc
or
jnp
or
call
sbb
sbb
add
adc
sbb
es
lcall
fdivrl
inc
imul
dec
stos
mov
lds
rclb
and
mov
xor
xor
xlat
xchg
fnstenv
fstl
push
pop
enter
push
test
xchg
push
mov
mov
xchg
adc
mov
add
test
out
jmp
push
jns
and
or
lods
xchg
pop
cmc
mov
jo
je
pop
push
movb
inc
lods
xchg
and
sub
push
xor
call
push
mov
call
test
jle
cmp
mov
push
cwtl
enter
xchg
out
int3
subl
lods
fs
add
cmp
inc
fs
clc
xchg
insl
mov
cmp
and
adc
ret
movsb
and
cmp
adc
pop
cmp
inc
adc
mov
nop
xchg
subb
or
push
pusha
je
pop
scas
xchg
ret
adc
jnp
int3
int
sbb
or
pop
imul
and
jmp
stos
sbbl
ret
scas
lret
int3
nop
cmp
push
jne
sbb
cmp
cmp
and
cmp
icebp
pop
cmp
popa
shl
cmpsl
jl
push
sub
ja
cmp
stc
add
mov
inc
mov
cmpsl
adc
rorb
cmc
repnz
push
and
les
cmp
xorb
dec
lds
je
push
xor
sub
jmp
sub
inc
sub
add
pop
add
sbb
mov
mov
js
jl
dec
pop
mov
xor
loope
mov
xor
loop
imul
in
jmp
imul
add
into
inc
or
mov
push
sub
inc
loopne
adc
pop
or
xchg
sbb
xor
shlb
repz
mov
and
jne
movsb
std
jns
les
mov
adc
xchg
frndint
mov
dec
fistl
addl
push
loopne
inc
or
xchg
test
lods
movsl
gs
les
adc
and
adc
enter
sbb
aas
push
hlt
adc
rcrl
es
insb
push
sub
test
mov
add
test
mov
push
inc
sbb
cs
fwait
xor
sbb
inc
xor
pop
cmpsl
add
fdiv
jg
or
lcall
mov
inc
in
or
dec
pop
fdivrl
mov
stc
js
push
push
sbb
inc
pop
mov
out
fadd
in
xchg
inc
out
fsub
sbb
out
jl
jns
mov
aaa
adc
inc
dec
fdivrl
or
inc
sbb
adc
mov
inc
fdiv
cli
xlat
into
movsl
pop
adc
cltd
movb
in
adc
dec
enter
push
jp
and
push
in
and
fiadds
gs
out
test
lahf
and
out
into
lock
mov
xchg
cmp
jbe
out
aam
jae
out
sbb
test
dec
dec
dec
sbb
dec
ds
push
into
je
push
daa
popa
notb
add
mov
add
push
leave
test
in
jb
jecxz
inc
xchg
enter
fdiv
sarl
std
jmp
movsb
xchg
nop
add
jae
add
addb
mov
call
xchg
sub
sti
inc
repnz
je
pop
pop
cli
imul
pop
mov
loopne
mov
mov
cmp
in
jb
lds
pop
mov
xor
mov
das
adc
sbb
push
test
stc
or
or
or
fimuls
push
push
mov
adc
inc
jo
aaa
sahf
add
lea
mov
add
mov
adc
xor
inc
adc
dec
xchg
jns
ss
xchg
dec
sub
mov
jmp
cmp
and
pop
xor
cmp
loop
mov
xlat
xor
int3
sub
clc
scas
xchg
test
pop
ficomps
pop
ljmp
aas
mov
mov
addb
dec
cmp
ljmp
push
scas
pop
xchg
addr16
sub
mov
pop
dec
pop
pusha
or
xlat
and
push
mov
in
add
imul
call
jo
insl
nop
fstpl
push
push
push
lods
ja
arpl
insb
sbbb
jne
insb
popf
push
and
cmc
cltd
mov
add
test
ror
ljmp
lcall
loopne
xlat
jns
inc
call
imul
ja
fisttpl
mov
cmp
std
movsl
popa
adc
int3
or
and
or
and
pop
sbb
lods
inc
mov
pop
cmc
push
push
or
inc
xor
and
insl
sbb
add
and
inc
sbb
pop
xchg
pop
hlt
mov
scas
pop
mov
into
rcrb
in
dec
xchg
loop
push
jmp
pop
lret
loop
filds
xor
or
cmp
jne
dec
lret
stc
add
cmp
jle
sub
fcoms
popf
sbb
dec
sbb
add
add
xchg
adc
ja
push
aas
jmp
jle
mov
and
cmp
jle
test
ljmp
inc
int
sti
jl
cmp
push
push
call
cmp
and
xchg
in
mov
bndldx
or
push
adc
ret
xchg
loopne
jne
fadds
int3
dec
sbb
stos
mov
push
jp
pop
and
sub
or
insb
ljmp
mov
or
adc
or
shlb
pop
and
sbb
and
jb
dec
and
adc
sub
inc
hlt
js
mov
inc
in
xor
xor
sub
in
fs
loopne
and
fcoml
and
add
es
inc
aam
enter
dec
adc
adc
or
xchg
int3
adc
jecxz
dec
pop
push
xchg
les
enter
inc
inc
mov
jg
inc
call
xor
mov
mov
xorl
jae
mov
enter
int3
inc
jmp
add
popf
jne
xchg
xchg
loop
outsl
lcall
andb
mov
mov
jb
xor
or
test
inc
enter
test
add
push
mov
push
gs
loop
push
jae
mov
push
add
jae
lcall
aam
xor
push
push
std
xchg
push
inc
mov
repz
or
sub
addr16
push
jnp
pop
or
mov
imul
ljmp
lahf
cltd
std
movb
nop
js
divl
pushf
and
push
adc
or
sti
xor
icebp
cltd
sbb
adc
les
or
aam
jle
inc
lods
mov
js
jle
xor
sub
push
iret
movsb
jecxz
and
push
mov
test
test
pusha
xor
push
push
inc
popa
sub
lahf
and
fs
cmpsl
sbb
adc
loopne
and
inc
inc
ficoms
out
or
sbb
adc
decb
push
dec
rcrb
mov
xchg
iret
iret
dec
push
les
adc
dec
sbb
nop
and
rorl
sbb
or
add
mov
adc
mov
cwtl
dec
adc
pop
adc
inc
xor
cmpsb
mov
popf
dec
icebp
push
pop
adc
iret
dec
xchg
movsb
cmp
les
or
adc
popa
add
pop
sarb
lods
adc
xor
inc
jp
or
dec
xlat
shr
mov
add
lret
cmp
xor
push
jne
mov
fs
pop
adc
leave
add
sbb
cld
sar
sub
jne
jl
dec
xor
icebp
sbb
mov
nop
xor
out
jmp
xor
pusha
mov
jl
js
icebp
or
icebp
loop
clc
cltd
push
fmuls
sbb
pop
add
daa
jg
cld
data16
cwtl
icebp
push
adc
xchg
out
sub
nop
jecxz
mov
jne
pop
mov
mov
mov
mov
lods
sahf
adc
fs
insb
gs
and
inc
or
fld1
push
movsl
mov
xor
sub
or
mov
sub
lret
or
jns
xchg
or
push
popf
pop
gs
jbe
or
sub
pop
aam
mov
fsubs
cltd
push
xor
std
imul
pop
xchg
js
ss
mov
popa
bound
sti
inc
and
lcall
data16
xor
or
ret
inc
test
test
or
xchg
mov
add
and
push
xchg
in
pop
or
aad
dec
adc
sahf
int3
sub
cs
or
jae
cmp
test
push
daa
push
inc
scas
add
adc
loop
mov
inc
mov
mov
add
add
sbb
push
adc
adc
mov
sbb
mov
jl
push
shll
push
or
cli
lods
cltd
fcoml
or
push
js
xor
sbb
fsts
or
and
adc
add
sar
inc
mov
js
inc
dec
inc
adc
rcrb
push
enter
test
imulb
and
imul
ss
int3
pop
pop
test
cmpsl
mov
ljmp
jmp
aad
xor
js
mov
jl
rcrb
arpl
inc
mov
gs
jns
cmp
add
cmp
push
mov
push
adc
dec
push
or
jmp
ljmp
mov
stos
mov
cmp
out
inc
cmp
push
pop
jle
sti
mov
popf
pushw
xchg
sbb
bound
insl
test
push
jo
adc
rorl
adc
jae
or
call
dec
cli
leave
push
test
or
call
hlt
add
push
inc
inc
push
nop
cmpsl
mov
loop
cmpsl
loop
fldenv
call
rorl
mov
hlt
jp
push
mov
cmpsb
ret
imulb
pop
xchg
clc
jmp
ja
addr16
test
add
ja
jne
mov
icebp
into
or
iret
or
adc
test
cmp
fistpl
lock
cmpsb
lds
or
ds
or
es
and
pop
or
push
mov
ret
cmc
bound
sbb
mov
mov
sbb
scas
ljmp
scas
je
ficoml
test
test
xchg
push
scas
out
mov
jo
pop
push
aad
mov
add
add
fmuls
js
and
dec
and
loopne
add
imul
and
pop
xor
xor
scas
loop
xchg
mov
jae
aam
loope
fstl
push
sahf
mov
push
jo
or
sbb
mov
adc
in
in
push
in
pop
rcrl
call
jecxz
sbb
xchg
and
popa
dec
cmp
sbb
sbb
sub
les
and
out
stc
sbb
je
jne
xchg
or
repnz
sbb
and
mov
inc
cmp
or
xor
pusha
inc
jnp
cmp
and
dec
lret
dec
add
iret
add
push
dec
or
add
cmp
cmp
or
or
dec
or
or
adc
adc
sbb
cmp
cmp
cmp
fists
js
cld
je
jmp
ljmp
stc
out
in
in
jecxz
loop
loope
loopne
fdivrp
fdivr
fyl2xp1
fdivr
xlat
stc
stc
aad
aam
sar
sarb
decl
iret
iret
clc
leave
into
xlat
cli
pushf
jle
pop
lret
lds
sbb
sbb
and
sbb
nop
pop
call
fmuls
or
inc
inc
sar
mov
inc
cmpl
loopne
test
pop
xor
or
inc
lods
inc
or
cmp
or
dec
or
fists
and
je
ss
mov
xor
xor
push
dec
adc
dec
and
int3
or
les
movsb
or
adc
xor
xor
sub
arpl
int3
sbb
aam
movsl
call
rcrb
addb
or
mov
sub
lock
xor
or
sbb
imul
mov
psubsw
into
cmc
leave
fisttps
insb
clc
mov
mov
add
test
pop
dec
mov
or
int3
jo,pt
in
mov
popf
pop
sbb
xchg
daa
push
int3
int
jne
mov
outsb
mov
cmp
inc
sub
insl
ds
xor
pushf
mov
and
repz
jne
iret
push
xor
or
jecxz
jle
and
loop
mov
xchg
xchg
dec
inc
das
or
inc
pop
ja
into
fs
dec
addr16
dec
mov
push
sarb
loop
cmp
and
mov
loop
inc
push
or
dec
jg
cmp
adc
adc
adc
inc
pop
jle
adc
dec
xor
dec
insl
gs
inc
or
or
insl
inc
xlat
jae
dec
jge
adc
mov
dec
nop
pop
outsb
or
xchg
pop
inc
test
xor
push
push
ja
sbb
cmpsb
jb
rcpps
je
sbb
xchg
inc
push
xchg
jns
addl
addr16
or
rolb
and
aas
adc
scas
loop
shlb
cmp
or
or
pop
fiaddl
jecxz
bound
mov
fnsave
je
or
popa
mov
cmp
xlat
jne
nop
fmuls
or
inc
fs
in
xor
and
sub
or
and
sub
sbb
in
or
inc
jae
add
dec
pop
dec
fidivrl
xor
sub
movsl
xor
push
imul
ja
push
sub
js
push
add
jle
enter
dec
jmp
inc
mov
lods
xor
jns
sbb
stos
dec
pusha
push
add
jo
mov
bound
jno
in
aam
fcomps
jl
adc
adc
repnz
fnstenv
in
loopne
ja
add
jo,pt
inc
in
dec
loop
xchg
and
adc
push
add
arpl
or
fcomps
decb
leave
nop
and
jl
popa
pusha
dec
rorb
push
adc
dec
adc
movsb
adc
mov
mov
sbb
push
lret
loopne
add
filds
cmp
cmp
out
cs
xchg
orl
push
test
jo
jo
jo
pop
pop
mov
dec
jnp
aaa
mov
xchg
add
in
or
lahf
setg
lahf
adc
sbb
jo
jle
jle
jle
jle
loopne
jb
je
jbe
js
jle
jle
je
jbe
dec
cmp
jle
add
jp
in
cmp
cmp
cmp
ret
aas
ret
aas
sarb
daa
mov
mov
in
loopne
mov
pop
mov
lahf
mov
mov
mov
and
jb
xor
push
mov
or
sub
push
and
mov
add
push
inc
fdivrl
outsb
jle
xchg
bound
mov
pop
orb
adcl
je
or
and
test
or
addl
roll
jbe
push
and
jns
test
movsb
and
popa
or
adc
mov
cltd
mov
sbb
mov
rclb
or
mov
mov
faddl
xchg
or
aaa
xor
test
fnstcw
mov
pushf
sub
orb
sbb
mov
mov
or
js
inc
jns
int3
adc
pop
mov
jns
and
mov
xor
hlt
sbb
leave
jle
add
dec
movl
pusha
mov
pop
sbb
sbb
clc
xlat
inc
iret
out
call
fmull
adc
lds
sub
in
call
lahf
cwtl
aad
adc
jl
add
mov
cltd
fdiv
rol
loop
mov
pop
lock
mov
sbb
mov
inc
jb
popa
jo
imul
sub
adc
ljmp
data16
loopne
dec
or
lret
inc
lods
repnz
imul
daa
or
cld
fbld
cmp
or
xor
xor
stos
lea
push
aam
mov
adc
call
imull
jmp
je
in
adc
or
pop
add
or
adc
sub
les
pop
jecxz
adc
test
cwtl
movsl
sbb
xchg
movsb
sub
add
mov
add
xchg
jo
test
dec
or
xchg
nop
mov
inc
push
pop
adc
fadd
in
js
push
in
adc
enter
sbb
inc
dec
adcb
lcall
dec
mov
nop
sub
adc
addl
mov
mov
inc
orb
mov
test
mov
push
enter
mov
adc
cmp
or
inc
and
xchg
ret
test
or
mov
mov
push
and
imul
jae
cmp
inc
fwait
add
daa
or
enter
and
stos
aam
xchg
jbe
icebp
or
in
jle
cli
stc
in
clc
push
sub
adc
cltd
js
inc
push
or
or
add
or
add
test
pop
or
sub
cs
sti
sub
gs
xor
mov
and
shr
dec
xchg
push
dec
mov
pop
inc
pop
loope
xor
orl
jmp
or
adc
lahf
or
or
xor
adc
sbb
and
and
jmp
arpl
jmp
push
or
shll
int3
and
lock
sub
loopne
in
in
dec
cmc
cltd
add
setno
sbb
sub
mov
and
cmp
push
xorb
sbb
and
lock
fsubl
inc
js
and
adc
pop
pop
nop
dec
jno
repnz
in
or
mov
and
rorl
les
xor
sbb
add
mov
movsb
ret
into
mov
repz
mov
mov
xlat
mov
aas
xor
adc
in
or
call
test
das
sub
js
fbld
mov
cmp
cld
repnz
sbb
call
jp
repz
xchg
inc
adc
test
dec
cmpb
xor
push
outsl
dec
popf
popa
lret
clc
fists
hlt
add
mov
clc
repnz
add
in
add
push
jmp
pop
jns
ret
mov
add
lea
mov
test
mov
rorl
xchg
lock
inc
incl
mov
sbb
shrl
loop
call
xor
loopne
pushl
and
push
push
and
sub
nop
mov
mov
add
pop
adc
push
call
call
sbb
cmp
add
jg
or
in
mov
sub
xor
lahf
jbe
int
cmc
idivb
imul
xor
mov
cmp
cld
fimull
idiv
xchg
and
mov
push
adc
push
xlat
lret
jae
or
das
pop
mov
sbb
push
testb
push
push
push
mov
fnsave
stos
dec
call
pop
dec
add
adc
inc
dec
stos
sub
inc
push
jno
movsl
adc
insl
das
stos
jbe
and
in
push
movsb
inc
push
or
xchg
sub
push
flds
test
sub
xchg
push
push
jo
inc
adc
or
inc
insb
popa
mov
push
xor
iret
push
dec
adc
test
jo
push
or
imul
rcl
inc
mov
imul
jo
cld
ficomps
lea
dec
pop
jb
clc
jecxz
test
cmp
nop
fists
pop
call
adc
adc
outsb
adc
out
dec
mov
std
xor
jmp
ret
dec
mov
cmp
add
bound
loopne
push
add
mov
cmove
adc
cmp
inc
test
and
adc
mov
xor
inc
daa
or
pop
mov
ljmp
cmp
loopne
adc
das
sub
cmp
jle
movsb
into
adc
adc
das
sub
push
mov
mov
and
das
scas
and
clc
mulb
adc
and
dec
xchg
or
add
je
mov
movsb
push
lods
mov
or
rcrb
add
loop
and
or
jl
bound
mul
xchg
mov
sbb
inc
mov
jl
sub
in
imul
push
gs
jg
pop
add
push
in
lahf
sub
clc
les
decl
and
push
lret
aam
scas
mov
pop
mov
sbbb
sarb
out
mov
mov
jbe
push
ja
mov
sbb
cmpsl
clc
jg
call
mov
dec
jne
ja
pop
push
ss
jmp
lret
jb
cmp
addr16
int3
test
or
negb
push
or
add
filds
add
sahf
pop
dec
int
dec
push
mov
pushf
or
cmp
adc
pushf
or
cmp
and
shrb
pushf
or
rcr
add
mov
cmpsb
adc
jo
jl
imul
cmp
push
js
and
sbb
aaa
sub
mov
js
daa
leave
inc
leave
fisttpll
jbe
test
loopne
push
sbb
sbb
mov
arpl
or
push
inc
jmp
mov
jmp
ja
test
inc
jmp
scas
cld
test
aam
inc
sub
test
jmp
mov
adc
dec
mov
mov
repz
jne
aaa
mov
or
daa
sub
push
xchg
dec
adc
jne
jg
push
sbb
out
xchg
pushf
adc
roll
xor
xor
dec
mov
pusha
outsl
shrb
mov
jmp
or
in
lods
cmp
sbb
cli
dec
push
mov
and
push
pop
mov
and
cld
push
pop
sub
ret
dec
mov
adc
sbb
push
fists
into
cmp
out
mov
into
mov
mov
cmp
pushf
push
push
mov
inc
loope
push
sub
cmp
fnstsw
cmpsl
loop
pop
clc
cmpsl
pop
mov
mov
adc
dec
fists
jp
push
inc
fcompl
jmp
pop
in
cltd
inc
xor
jp
inc
lcall
cmpsl
cwtl
inc
cvtdq2ps
push
or
adc
insb
inc
and
imul
in
cld
sub
inc
jo
and
sub
xor
movsl
cmc
and
outsb
idiv
sub
push
dec
push
jmp
inc
stc
adc
out
out
pop
xchg
cmc
pushf
sub
icebp
xchg
mov
mov
jno
andl
push
iret
arpl
mov
sbb
push
lea
inc
jae
movsw
add
inc
pop
into
sbb
dec
inc
stc
out
push
jae
aam
insl
mov
and
dec
cmc
into
loopne
stos
jg
bound
gs
push
ret
stos
or
and
ljmp
xchg
push
inc
inc
mov
rcrb
jnp
dec
sub
dec
adc
nop
cmp
add
push
and
daa
ret
adc
les
xchg
dec
rorb
and
out
mov
push
cltd
movsl
std
cmp
and
daa
fmull
inc
fisubrl
aam
sahf
mov
insb
adcb
jnp
jecxz
cmp
add
mov
imul
xchg
ja
push
imul
dec
push
or
add
cmp
jo
movb
adc
jmp
aam
mov
sub
imul
pop
adc
mov
mull
add
sub
subl
xchg
rol
fidivs
les
decb
mov
dec
mov
jae
aam
lods
aad
xor
mov
sub
mov
xchg
and
fs
xchg
inc
pop
pushl
lock
fsts
das
lock
sbb
push
jo
jmp
sub
dec
cmp
je
adc
and
or
clc
push
test
cli
push
frstor
sti
or
fildll
push
inc
pop
sbb
bound
push
scas
fistl
and
dec
mov
dec
xchg
push
mov
dec
notl
adc
push
add
mov
je
sbb
jae
addb
cmp
je
fwait
aam
stos
inc
faddl
mov
imul
inc
and
div
into
lret
lret
jne
push
sarb
push
sub
fadds
inc
or
fiadds
call
jbe
imulb
add
jge
popf
test
push
dec
call
adc
and
xor
lcall
imul
inc
inc
push
jg
aaa
pop
mov
jecxz
lock
jg
imulb
out
jb
xchg
jp
mov
and
push
imulb
lock
xor
cs
or
dec
jle
inc
mov
cmp
fldcw
in
icebp
jne
add
fmuls
in
cwtl
dec
out
mov
adc
lock
sub
sbb
inc
xor
icebp
mov
mov
call
bound
dec
push
ffreep
popa
cmp
push
lahf
push
cwtl
pop
dec
orl
xchg
or
dec
mov
push
and
cwtl
lahf
jp
lret
adc
ljmp
popa
in
dec
adc
xor
add
push
pop
ret
ret
cmp
rclb
mov
call
in
iret
sbb
pushf
fxtract
or
add
cmpb
xchg
sarl
clc
adc
jmp
push
push
movsl
aam
into
lock
xchg
fadds
dec
push
fsubrl
cmp
mov
fadds
and
push
push
ret
jmp
ret
add
jb
pop
xchg
push
out
ror
call
arpl
cs
jne
push
js
pop
pusha
ret
jmp
ret
jne
xor
test
pop
mov
push
mov
xlat
repnz
add
xor
push
ret
mov
cmc
and
sti
sub
pop
adc
jp
pop
adc
inc
in
push
cmpsl
dec
sub
mov
or
pop
xchg
shll
xor
aad
push
adc
inc
cmp
dec
cmpsl
mov
sub
xchg
push
int
push
xor
fistpl
xchg
sbb
add
cmp
js
inc
mov
and
sub
xchg
clc
mov
xchg
aas
mov
or
aam
add
repz
das
stos
sub
loop
test
sub
pop
xchg
out
arpl
sbb
aam
mov
pushf
mov
add
push
mov
mov
ret
stc
inc
dec
push
les
ret
adc
dec
push
js
xchg
cwtl
sub
inc
sub
int
loope
jne
push
add
mov
dec
inc
add
sbb
add
cmp
je
mov
jae
jecxz
or
and
out
add
sbb
and
push
push
or
xor
adc
push
push
add
or
jg
aaa
inc
mov
arpl
js
adc
test
lds
jecxz
aad
data16
push
adc
or
sbb
xchg
ret
test
loop
mov
ljmp
push
push
addl
testb
inc
inc
mov
mov
sti
popf
mov
test
js
fwait
scas
sbb
mov
jmp
sti
nop
push
pop
adc
daa
lahf
sub
or
fwait
or
mov
std
pop
out
adc
push
cli
mov
jmp
movsl
stos
add
in
out
jmp
mov
dec
jecxz
pop
and
sub
pop
fdivs
dec
cltd
add
inc
push
jmp
cltd
sub
pushl
xchg
adc
mov
js
sbb
pop
sahf
out
mov
mov
xchg
mov
dec
imul
sub
xor
pop
dec
in
sub
pop
xchg
xor
movsl
out
shl
add
xor
call
adcb
jmp
add
or
scas
movsb
mov
mov
cmc
cld
and
cmp
jmp
test
lea
push
js
enter
test
jle
data16
adc
mov
fisttpl
lret
faddl
mov
stc
fstpl
push
fwait
jmp
xchg
and
add
jle
and
cmp
mov
sub
pop
sub
mov
and
adc
adc
sbb
adc
or
add
pop
dec
push
dec
xor
or
in
dec
and
dec
xchg
sbb
adc
and
inc
imul
loopne
hlt
pop
fidivl
jne
call
ficoml
iret
lods
inc
cmpb
lock
mov
pusha
jne
pop
pop
push
rorl
jmp
daa
add
and
pop
push
xchg
dec
ret
add
adc
dec
and
push
sub
inc
and
inc
repnz
mov
jo
cmp
adc
cli
mov
jmp
sub
insl
xor
sub
push
xchg
cmpsl
inc
jne
inc
dec
jmp
sub
fstpt
push
icebp
sub
pop
push
dec
adc
jg
jne
push
push
add
add
ds
inc
flds
add
inc
mov
call
or
in
xorl
std
mov
mov
push
mov
pop
sarl
ljmp
je
push
sub
jne
mov
push
loop
push
push
imul
sbb
scas
dec
sbb
push
loope
or
arpl
scas
fcom
sahf
hlt
lahf
pop
loopne
inc
in
pop
jne
sub
mov
add
push
push
std
cmpsl
incl
dec
mov
or
sub
aam
data16
add
orb
mov
test
xchg
pop
jns
pop
cltd
arpl
cmp
add
rorb
sub
dec
adc
adc
push
testb
cli
jmp
cltd
adc
adc
or
cmp
iret
sbb
push
adc
xor
pop
pop
in
adc
xor
xorl
ret
dec
cwtl
rcll
nop
inc
and
push
cmp
fcmovbe
in
mov
gs
xchg
repnz
or
xor
or
jne
sub
xchg
jbe
jbe
cs
mov
sub
and
push
or
dec
lret
push
adc
movsb
cmpsb
mulb
push
ljmp
or
ret
cmpsl
sub
test
mov
lea
idivb
mov
mov
push
jge
mov
add
sbb
adc
adc
mov
mov
or
adc
sub
movsb
mov
pop
xor
lea
sub
cmpsl
pop
bound
dec
dec
enter
sbb
sub
push
mov
xchg
cmc
shlb
adc
mov
shl
cs
jg
sub
into
sarl
and
cmc
push
cmp
add
lds
pop
insb
ds
movsb
fld
mov
in
ja
clc
cmp
pop
std
jmp
aam
loop
lret
add
in
out
jge
pop
pop
pop
in
in
pop
movsl
xchg
xchg
pop
popf
mov
subb
push
movsl
pop
mov
fmull
lock
fwait
xchg
mov
dec
test
push
sub
and
insb
dec
hlt
xlat
push
js
xor
mov
cmp
adc
push
add
ds
push
out
and
add
fwait
xor
dec
inc
scas
into
xchg
inc
popa
dec
hlt
jne
pop
and
sbb
test
mov
test
in
sarb
mov
cmp
or
xchg
fstpl
dec
jbe
mov
lds
scas
insb
mov
stos
pop
jbe
loope
dec
add
outsb
mov
mov
push
add
es
pop
cmpsl
stc
and
adc
das
mov
add
jl
call
lea
or
repz
decl
mov
inc
mov
jne
sbb
or
int3
mov
adc
pop
lods
xchg
push
push
daa
aas
and
dec
and
inc
inc
lret
and
or
lcall
sub
cmc
or
or
sbb
and
nop
sub
or
push
add
xchg
xchg
arpl
js
mov
jae
xor
add
push
daa
ret
cmc
xchg
call
je
push
and
pop
or
or
add
or
jns
push
jb
cmc
mov
mov
call
or
dec
cwtl
hlt
rolb
jmp
cmp
or
jno
or
xchg
jo
sbb
data16
jle
ret
and
adc
aaa
or
inc
jp
aas
jbe
test
pop
testl
xor
inc
imul
jmp
test
out
in
inc
or
push
sbb
and
fstl
stc
call
out
pop
repz
add
inc
adc
lret
mov
ljmp
in
addb
cmp
sub
or
aam
or
rorb
or
jmp
sub
imul
in
mov
cmpl
out
or
jnp
xlat
xchg
bound
xor
jnp
inc
insb
adc
sar
jns
and
pusha
xchg
decb
pop
adc
or
scas
clc
jl
out
xchg
jecxz
fiadds
push
sub
xor
xor
push
jg
adc
jmp
xchg
jns
negb
push
and
sbb
pop
pusha
pop
cmp
xchg
jl
and
shll
jbe
push
icebp
and
setb
mov
andb
pop
jae
jb
push
fs
das
aam
rsqrtps
nop
xchg
fcoml
cld
and
cmp
ret
fiadds
dec
std
cmc
cmp
sbb
xchg
jne
aaa
push
push
js
xchg
push
adc
jge
loopne
cmp
xchg
cmp
bound
mov
adc
scas
adc
and
shl
mov
pop
roll
fmuls
dec
or
mov
testb
mov
pop
fcoms
call
call
mov
popa
outsb
mov
or
or
popa
sbb
sbb
jo
popa
cmp
fcoml
enter
pop
and
cmp
popw
pusha
or
pusha
dec
jp
jmp
sti
popf
jp
mov
notb
loopne
mov
stos
pushf
std
stc
mov
std
sub
xlat
call
xchg
lods
fists
cmp
jecxz
pop
and
push
push
mov
je
mov
or
push
inc
insb
popf
sbb
adc
fs
outsb
xchg
push
mov
lods
xchg
hlt
sub
or
imul
inc
je
lods
xchg
hlt
mov
test
xchg
stos
mov
call
jge
pop
dec
lds
rolb
fstps
adc
mov
xor
add
nop
pop
push
push
call
enter
jl
inc
jl
push
sbb
mov
dec
fcomps
xchg
cld
mov
pop
insb
in
or
or
adc
adc
or
xor
inc
push
insb
test
xchg
cmpl
jg
xor
das
fbstp
insb
cmp
jge
cli
inc
inc
dec
mov
mov
ret
pop
or
mov
daa
mov
data16
enter
call
sub
lret
mov
out
sub
push
xchg
ret
dec
dec
push
or
jle
bound
xlat
loop
adc
andl
push
imull
enter
jge
les
mov
enter
pop
and
test
testl
xchg
jmp
sbb
pushf
adc
cmp
clc
jnp
cwtl
adc
push
inc
loop
les
or
je
dec
les
dec
cmp
dec
nop
adc
cmpsb
push
xchg
jo
jne
or
jg
xlat
pop
mov
mov
nop
clc
dec
sub
adc
xchg
rolb
std
ss
cs
mov
cmp
pop
sub
adc
push
inc
dec
push
or
dec
jnp
lahf
pop
mov
fildll
mov
pop
je
jmp
outsb
sbb
lea
leave
push
or
arpl
and
jb
das
inc
xor
jnp
xchg
faddl
dec
aad
push
sahf
adc
adc
mov
push
push
push
jnp
insl
adc
inc
in
dec
inc
out
inc
decb
cmp
data16
inc
adc
test
inc
iret
dec
mov
xchg
cli
mov
jle
lock
jecxz
push
inc
data16
popl
movsb
incl
popf
inc
hlt
xchg
xchg
or
jmp
ret
add
sbb
or
mov
pop
inc
mov
push
push
inc
mov
das
pushl
adc
add
out
mov
mov
adc
clc
imul
sti
pop
roll
cli
push
stos
xchg
sbb
and
ds
and
inc
xor
clc
cli
xchg
push
or
fsts
dec
sub
mov
sbb
jg
add
mov
dec
xchg
mov
sub
xorb
cwtl
or
and
lret
push
inc
es
add
xchg
dec
es
dec
loop
popf
and
or
out
je
imul
xchg
inc
scas
mov
cli
jbe
push
pop
jno
outsl
xor
imul
xor
sbb
sti
call
push
push
jbe
dec
add
dec
push
cs
xorl
pop
orb
jno
fmul
std
clc
and
shrb
push
xor
xor
std
jns
imul
push
mov
ds
pusha
mov
lcall
bound
fs
cmp
mov
aaa
xchg
mov
inc
sub
repz
ljmp
int3
cld
mov
cmpsl
fisttpll
pop
dec
andb
movsl
aam
cmpsb
fmuls
pop
fsubp
out
push
sti
imul
mov
add
adc
adc
jnp
js
loop
inc
sub
pop
jbe
pop
add
push
pop
lds
int
xchg
mov
xor
mov
or
inc
dec
sahf
sub
xchg
xlat
mov
jne
test
lret
jbe
jno
cmc
int3
idivl
pop
and
mov
sub
aaa
xor
sbb
pop
mov
cmc
cmp
and
pop
xor
in
bound
clc
or
repz
mov
dec
mov
mov
xchg
or
lock
popf
or
add
or
mov
mov
adc
les
ja
testb
sti
inc
mov
sub
sub
les
mov
push
adc
mov
pushl
cld
gs
in
jne
push
lock
push
xchg
shlb
jl
shlb
mov
out
jae
inc
fistpll
lock
sub
scas
test
lret
mov
daa
loop,pt
xchg
jmp
xor
dec
daa
aaa
outsb
pop
popf
xchg
jo
lock
cmc
fdivrl
cmp
test
into
je
mov
rcrb
mov
mov
push
push
or
fldenv
mov
outsb
adc
sbb
shlb
xor
pop
pop
pop
or
cmpsb
push
mov
push
xor
test
aam
cs
sbb
dec
or
push
sbb
sub
nop
or
loop
jbe
mov
add
test
xor
mov
addr16
inc
or
dec
repz
pushf
test
int
dec
sbb
mov
and
adc
cmp
adc
inc
xchg
and
ss
sbb
jns
cmovo
and
pop
les
mov
adc
and
or
sti
imul
mov
pop
and
pop
pop
or
or
hlt
push
adc
cmp
pop
ret
ja
outsl
jmp
adc
inc
push
mov
mov
mov
test
shlb
mov
adc
push
add
bound
loop
xor
xchg
mov
in
ljmp
push
or
cmp
inc
test
cld
sub
popa
dec
inc
dec
and
adc
dec
pop
jnp
xchg
mov
rcr
jb
fwait
jl
xchg
mov
fisubrs
ficoml
lods
rol
jp
sbb
mov
or
adc
and
dec
cmpsl
sbb
inc
clc
cmp
je
xchg
dec
xchg
int
mov
das
sti
xor
pop
jns
imul
add
je
adc
roll
or
pop
nop
test
jge
push
or
sub
in
pop
dec
and
test
adc
dec
pop
mov
jl
push
insl
mov
xchg
xlat
push
aam
int
je
lods
xchg
xor
dec
stos
je
scas
mov
jnp
scas
mov
or
dec
inc
rclb
xchg
cmp
cmpb
adc
cmpsl
xlat
dec
out
fs
in
xchg
pop
pushl
and
pop
inc
les
push
pop
xor
adc
pusha
mov
cmp
jb
aam
xor
add
shrl
dec
icebp
cmp
jmp
push
orb
mov
dec
jecxz
adc
mov
sbb
pop
add
gs
je
mov
aas
mov
xchg
mov
repz
adc
cwtl
pop
je
push
mov
xchg
fistl
shlb
mov
mov
lea
sbb
test
pop
and
and
or
stc
adc
push
jo
xor
pop
les
cmp
daa
fcoms
or
push
pusha
sbb
push
xor
js
dec
mov
in
push
sbb
mov
mov
pop
neg
out
mov
shlb
call
fcoms
pop
add
das
dec
jmp
in
sub
and
ret
fistpll
leave
push
xor
aam
insb
mov
mov
fwait
adc
adc
jl
stos
ret
mov
jns
xchg
sbb
je
jb
xchg
jne
scas
inc
jnp
dec
mov
push
arpl
movsbl
add
cmpsl
fwait
add
dec
or
leave
je
inc
push
adc
xchg
push
inc
push
or
call
push
rorb
ret
sahf
mov
inc
call
mov
mov
int3
je
push
inc
aad
mov
sbb
dec
jg
adc
add
jmp
jnp
jmp
or
push
adc
jge
inc
not
xchg
cmp
mov
push
inc
jge
pop
notb
jle
ss
jbe
cmp
inc
xlat
test
mov
jle
inc
inc
cmpsb
push
jae
add
test
cli
xor
cmp
stos
xchg
jne
popa
mov
cmp
cmpsl
push
jmp
cmp
push
or
jge
pusha
mov
adcb
pusha
div
pop
adc
mov
pop
bound
test
push
cmpb
jne
and
lahf
loope
push
and
mov
daa
ja
out
xchg
mov
nop
xchg
and
aad
dec
mov
xchg
mov
adc
pop
push
subb
adc
enter
and
cmpsb
dec
pop
add
inc
cmp
mov
inc
or
testl
dec
into
fsts
push
mov
loope
test
stos
dec
add
xlat
inc
mov
or
or
cmpsb
sub
ret
imul
inc
leave
sub
clc
mov
push
dec
inc
ret
sub
add
push
push
xor
cli
enter
cmc
push
ljmp
dec
cmc
adc
dec
popa
cmp
mov
nop
int
adc
dec
es
mov
stos
cld
aam
pop
test
les
and
fs
scas
inc
xor
and
mov
xchg
push
test
dec
bound
subb
xchg
add
xchg
movb
ret
sbb
or
mov
stos
or
jne
sub
mov
xor
jp
div
jno
stc
lods
sbb
nop
ficoms
sbb
jecxz
or
cli
int
jo
add
cmp
movsl
xchg
test
mov
dec
pop
sub
sbb
cmp
inc
xor
and
inc
mov
pop
push
mov
or
leave
sbb
add
dec
adc
push
ja
repnz
cmp
or
movsl
pop
dec
in
pop
fldl
xchg
in
sub
or
in
insb
xchg
push
mov
jge
fcoms
push
mov
loop
sbb
pop
das
call
cltd
push
fisubrl
aam
out
icebp
test
cmpb
insl
movsb
mov
sahf
inc
xchg
clc
or
ret
and
add
mov
rolb
loope
sbb
fwait
cmp
sub
adc
fwait
lea
inc
dec
imul
push
xchg
ja
or
jle
mov
push
lea
int3
adc
jmp
dec
and
pushf
mov
int
jl
sbb
outsl
or
dec
pop
jle
cmp
push
daa
jne
int3
mov
push
jo
rorb
stos
mov
stos
mov
add
xchg
sbb
dec
push
call
ret
pop
mov
cmp
dec
mov
push
mov
mov
push
jae
inc
cmpb
jne
enter
jmp
test
setl
fisubrl
orl
in
mov
out
sub
pop
sub
or
ficoms
xchg
xchg
test
loope
mov
jmp
push
mov
mov
pop
ffree
cmp
jge
xchg
mov
out
loop
xchg
xor
lea
mov
rolb
inc
mov
in
popf
or
aas
test
mov
aam
pop
sbb
ficomps
dec
or
lods
insb
mov
sub
iret
fisubrl
and
push
add
pop
jmp
ficompl
or
sbb
xchg
inc
outsb
lret
sub
cmp
jne
inc
dec
xchg
in
cltd
ds
fldt
test
lock
bnd
sub
es
cmp
jge
push
clc
add
xchg
cmp
and
sub
aas
push
fisubl
pop
lods
and
inc
and
imul
inc
test
push
xchg
sbb
mov
inc
hlt
mov
mov
inc
pop
mov
inc
out
call
idiv
mov
add
je
hlt
sahf
push
cli
and
outsl
or
jne
jge
out
enter
mov
sub
sbb
xchg
iret
pop
xor
jo
inc
cmp
jbe
ds
inc
subb
pop
je
jmp
decb
add
test
dec
lds
rorl
bound
mov
inc
xchg
jae
adc
and
xor
mov
jmp
movsl
sbb
and
arpl
xor
leave
aad
in
sbb
sub
test
sbb
sub
xor
cmp
push
sub
in
incl
adc
add
scas
ljmp
push
jmp
mov
mov
stc
addr16
jmp
leave
int3
loopne
sar
pushf
cmp
faddl
push
stos
cmpsb
xlat
inc
and
lret
daa
sbb
inc
mov
push
pop
cmpsb
push
push
inc
js
in
rclb
lea
ljmp
adc
cwtl
rcrb
sti
jmp
xor
mov
gs
mov
sub
negb
test
test
adc
call
cmpsl
or
ss
push
xchg
push
dec
or
inc
subb
or
xchg
fwait
sbb
jns
loope
push
movsl
adc
dec
sub
test
push
lea
cwtl
jne
ret
push
add
jo
cmp
sub
mov
mov
pop
mov
int
or
test
jmp
aas
sti
mov
push
jmp
xchg
clc
negb
sub
fistl
in
in
and
xor
mov
adc
iret
int
jnp
push
mov
loopne
xchg
inc
and
test
mov
pop
inc
inc
push
call
cld
je
adc
add
dec
jmp
lds
pusha
imul
jle
pop
add
jae
adc
aaa
or
dec
roll
and
shlb
shll
jmp
loope
sub
pop
mov
sub
jae
std
push
push
fbld
or
aad
in
or
stc
add
push
xor
push
or
dec
ja
sub
fcomip
xchg
push
idiv
push
xchg
sbb
mov
and
sub
iret
repz
jl
clc
aas
pop
add
pop
push
pop
adc
cmp
sbb
add
mov
push
xchg
adc
je
jge
cmp
mov
shlb
push
aaa
test
jns
unpcklps
adc
test
sub
adc
or
or
or
lcall
outsl
push
xchg
cmpl
cwtl
adc
dec
lahf
or
adc
arpl
or
sub
loope
enter
pop
pop
popa
test
clc
jmp
adc
outsl
and
push
lea
repnz
xchg
ja
dec
pop
push
mov
sub
xchg
or
xchg
xor
lea
lods
pop
sub
mov
es
ljmp
dec
adc
dec
mov
dec
lahf
sub
push
inc
adcb
add
pop
js
adc
mov
jmp
and
je
sub
gs
inc
or
mov
outsl
or
inc
stos
and
incl
or
or
dec
icebp
pop
das
jns
bound
sub
lea
xchg
adc
es
or
pop
int3
mov
sbb
orb
cmp
push
and
jb
dec
aas
inc
mov
cmp
aaa
mov
mov
inc
rol
fcoml
das
xor
inc
jo
jns
inc
cmp
jmp
inc
ret
lods
jb
or
xchg
add
sub
push
sub
mov
mov
fs
int
nop
push
aaa
or
sub
insl
adc
fwait
xor
pop
dec
add
or
in
ret
jmp
add
add
jle
push
out
out
ja
inc
inc
cmpb
sahf
insb
or
popa
out
aas
cmp
jne
out
mov
and
add
and
jg
pop
xchg
clc
or
retw
add
sub
test
and
and
aam
dec
test
mov
dec
add
call
jmp
pop
das
dec
fldl
out
bound
push
sub
addr16
imul
dec
jo
mov
daa
mov
mov
adcb
icebp
das
mulb
aas
mov
add
push
xor
jae
and
xchg
stc
and
int
pop
xchg
sub
mov
jmp
fdivs
or
fcmovnbe
add
xor
call
push
push
mov
and
push
mov
ss
adc
stc
lcall
lock
push
notl
xchg
test
push
mov
dec
jg
jecxz
add
mov
sub
cs
inc
mov
jb
sub
out
adc
or
sti
xchg
repnz
scas
cmpsb
mov
cmp
out
das
in
dec
scas
inc
cmp
sub
push
mov
xor
test
push
clc
dec
mov
xchg
pop
xchg
xor
sub
inc
push
inc
cltd
cmpw
cmp
or
dec
adc
mov
adc
outsb
xchg
stos
icebp
aas
inc
xor
les
jmp
pop
aad
sub
mov
or
daa
jb
imulb
lahf
call
call
jno
dec
rcrb
xchg
imul
mov
pop
add
dec
adcb
das
mov
and
dec
repnz
pop
push
js
sbb
sub
sbb
ljmp
inc
mov
xor
jmp
push
stos
mov
xchg
inc
mov
pop
mov
adc
mov
ds
adc
sbb
aam
cmp
out
sub
dec
sbb
lods
pop
pop
and
push
je
jmp
mov
fs
shl
mov
cmp
or
mov
bound
adc
test
mov
mov
lods
inc
mov
or
sahf
dec
cmpsb
rcll
pop
and
sbb
mov
sbb
loope
lret
push
dec
es
mov
cmpl
pop
popa
and
push
movsb
mov
ljmp
scas
es
test
dec
or
pop
jno
es
jns
sbb
pop
out
loopne
pop
inc
and
pop
pop
jno
inc
call
fsubs
xor
jne
push
std
dec
jmp
jne
adc
sub
lret
je
push
fsubrl
lret
jmp
xchg
xchg
rorb
xchg
xor
cmp
je
add
and
jl
add
mov
dec
sub
jne
sbb
movb
mov
push
mov
push
add
leave
xor
or
negb
pop
xchg
sbb
mov
dec
repnz
rol
push
lcall
ret
adc
das
mov
inc
scas
sub
negl
jle
xchg
je
push
imul
dec
jge
add
mov
push
jmp
sub
mov
xchg
xchg
and
mov
jg
inc
adc
sub
cmpsl
pop
and
mov
push
add
sbb
adc
cmpl
or
sbb
stos
push
call
and
push
xor
or
push
popf
ja
push
ret
fisubrl
daa
in
test
imul
cmpl
test
or
or
jo
sub
roll
movsb
sbb
or
mov
bound
jge
xchg
hlt
dec
jp
fbld
aam
jae
xchg
push
add
dec
push
mov
xchg
lds
loop
loop
mov
push
push
cmp
mov
xchg
out
stos
loopne
gs
shlb
rclb
jl
mov
and
push
pop
rorl
mov
adc
pop
jl
daa
xchg
psrlq
jbe
pop
sub
add
push
pop
cmp
lret
and
inc
cmpsb
enter
jbe
mov
pop
ret
loop
rcrb
repnz
stos
es
xchg
pusha
push
in
inc
xor
jns
xchg
pop
dec
pop
pop
or
clc
jmp
stos
pop
out
je
adc
or
shl
jge
dec
lock
add
call
xor
or
push
push
dec
adc
daa
xchg
mov
xchg
mov
loop
mov
cld
lea
pushf
pusha
or
inc
or
jle
xor
clc
inc
adc
pop
xchg
pop
fnstenv
inc
shrl
jb
call
inc
mov
xchg
loopne
dec
test
or
dec
push
scas
pop
testl
cld
cs
mov
sub
das
rcrb
pop
idivb
cld
test
xchg
pop
adc
sbb
dec
jmp
cld
push
lret
mov
lods
lret
fcom
sub
movsl
push
iret
daa
jg
imul
ljmp
stos
je
mov
push
xchg
stos
ficomps
std
jg
orb
sub
hlt
adc
adc
push
xchg
stos
int3
movsl
arpl
sbb
adc
popa
movsb
push
cmp
mov
cwtl
xor
andl
lea
mov
mov
daa
xchg
std
jne
inc
lahf
and
inc
cmp
lret
into
bnd
inc
dec
idiv
jbe
in
sub
cmp
jne
pop
les
jle
jns
outsb
movsl
adc
daa
insb
push
cmp
sahf
dec
enter
insb
repnz
jne
or
insb
sbb
scas
lret
inc
pop
jb
push
adc
jbe
rclb
rcrl
repnz
dec
sub
lea
push
adc
iret
imul
cmc
cmp
mov
and
loope
and
lcall
popf
test
inc
pop
push
push
std
cwtl
xor
add
fcompl
fnstsw
xor
test
dec
jne
scas
repz
out
jns
xorl
js
fadds
add
cmp
fiadds
pop
jmp
and
jl
sbb
cli
adc
loopne
mov
lods
lock
fwait
divl
sbb
adc
insb
aam
pop
and
jl
xor
movsb
pop
mov
mov
push
sarl
adc
out
movl
rorl
cltd
out
xlat
add
ja
fsub
sub
sbb
add
push
push
push
xchg
mov
mov
pop
push
cmc
push
xor
or
outsl
idivl
lret
fs
movsb
mov
xchg
pop
sbb
pop
sbb
jmp
test
add
pushf
add
ds
mov
push
adc
xlat
adc
and
pop
jmp
push
aad
clc
insb
ds
mov
add
cmp
adc
pop
and
pop
jle
int3
cmp
mov
or
sub
test
dec
aad
cli
jmp
dec
aam
jle
jle
addl
inc
jmp
mov
rolb
push
or
push
push
fsubrl
jne
bound
and
sub
mov
gs
adc
or
jl
jne
insb
sbb
mov
jnp
decl
mov
mov
push
mov
mov
push
hlt
cwtl
imul
popf
push
fiadds
inc
add
test
dec
sub
pop
mov
shlb
stc
dec
lret
adc
and
xor
and
xor
dec
sahf
add
inc
je
cmp
insl
clc
inc
sbb
pop
clc
mov
mov
and
leave
lcall
ja
cmp
push
mov
cld
sbb
dec
xchg
leave
aad
add
fsubl
cmpsb
dec
cmpl
mov
sub
push
in
das
xchg
and
push
jbe
subl
jns
pop
mov
test
test
pop
adc
lea
and
sbb
mov
inc
pop
dec
pop
push
js
pop
add
lret
arpl
add
fs
pushw
jle
pop
lds
dec
fmull
jmp
push
push
push
lock
fmuls
testl
push
or
sbb
testl
stos
mov
js
and
ljmp
inc
and
or
xchg
lods
sbb
push
pop
or
sub
in
dec
sbb
aam
call
dec
push
cld
sub
jne
ret
fs
mov
repnz
stc
jle
or
repnz
sub
test
push
push
push
adc
jmp
mov
push
subb
mov
fadd
cmp
xchg
and
sub
fs
mov
pusha
cmp
xor
cmp
test
enter
cmpsl
jl
adc
cmp
sbb
lock
push
hlt
xor
cmc
ret
or
or
add
jnp
mov
inc
mov
incl
outsl
psubusw
lds
push
sub
sahf
ret
cmp
and
mov
inc
cld
int3
adc
inc
pop
sub
mov
inc
mov
orl
push
ja
mov
rcll
or
cltd
adc
or
adc
cltd
adc
movsl
or
in
cmp
enter
loop
ds
cmp
dec
cld
xchg
xchg
dec
jmp
scas
aad
nop
mov
loopne
or
leave
sti
xchg
push
xchg
aam
xchg
pop
pop
out
pop
mov
cmp
pop
je
imul
mov
inc
stos
pop
pop
cmp
int
in
push
mov
and
in
and
pop
mov
sbb
lods
mov
aam
enter
int3
leave
or
pop
xchg
mov
push
inc
hlt
inc
dec
jg
sub
je
dec
or
mov
dec
inc
adcb
mov
loopne
rorb
dec
sbb
hlt
jmp
cwtl
inc
jne
test
movsb
push
mov
sub
int3
aaa
sub
fldenv
or
add
xchg
or
mov
xchg
xchg
dec
sbb
lock
add
xor
sbb
adcl
std
int3
mov
cld
testl
fucomp
and
les
ss
roll
fcmovb
sub
or
aad
std
cltd
add
sbb
or
les
add
jne
and
inc
add
in
ret
icebp
xchg
bound
dec
xor
push
icebp
or
mov
xor
dec
cmp
gs
arpl
xchg
test
or
adc
or
push
push
adc
sbb
adc
xchg
or
mov
mov
sub
sbb
in
add
aad
jno
sub
xchg
jmp
cltd
lods
jno
cmpsl
push
pop
inc
xor
call
sub
rorb
dec
fs
xlat
movsl
sbb
adc
sbb
movsb
push
sub
and
sub
pusha
pop
push
xlat
inc
rol
and
mov
andl
and
xchg
xchg
sarl
push
push
or
jg
int3
or
sbb
enter
inc
jb
cwtl
dec
in
out
sbb
adc
or
add
mov
xorb
adc
xor
jmp
adc
adc
cmovp
sahf
pusha
test
out
mov
cmpl
inc
sbb
sbb
ja
clc
sbb
das
and
sub
hlt
or
cmp
ficoml
ja
fisttpl
push
cld
sub
xchg
scas
xchg
stc
pushf
xchg
inc
clc
scas
fldl
dec
xchg
dec
xor
mov
js
jg
in
mov
and
xchg
push
adc
je
enter
or
dec
adc
jg
xor
and
call
ds
clc
xchg
adc
outsl
lret
fs
mov
add
clc
jne
sbb
lods
lret
push
pop
hlt
or
sbb
mov
movsl
addr16
push
sbb
mov
push
jne
xchg
insl
mov
add
jge
sbb
adc
out
test
or
xor
mov
sbb
mov
push
cld
cmp
popa
xchg
negl
scas
stos
loope
pop
lock
push
repnz
ja
aad
bound
je
jmp
jecxz
mov
enter
aam
dec
add
dec
inc
sbb
pop
in
cld
xor
jno
add
mov
push
dec
or
out
cwtl
iret
jl,pt
jns
out
sbb
push
sbb
iret
mov
out
cld
or
push
pop
popf
aad
cmp
push
out
adc
test
adc
sub
or
push
cmp
icebp
stos
push
or
mov
call
inc
out
pop
add
push
xchg
nop
pusha
push
out
jnp
iret
orb
mov
inc
jo
adc
jne
xchg
shl
ret
mov
hlt
push
pop
in
push
pushf
leave
std
stos
and
lods
pop
mov
movsb
and
inc
sti
movsb
fs
mov
dec
movsb
jmp
pop
mov
sub
imul
mov
xchg
out
inc
jg
sarl
mov
out
test
sbb
testl
or
mov
cs
dec
idivb
aam
lea
or
mov
mov
cmp
jne
push
push
cs
rcl
xchg
int
outsb
mov
pop
or
jne
cltd
sub
aaa
pusha
int
mov
dec
fcoml
mov
cmp
inc
push
jmp
lahf
mov
imul
stos
pushf
sbb
sbb
jg
std
gs
clc
fisubs
les
fildll
dec
push
into
xchg
mov
mov
into
inc
push
jg
xchg
inc
xor
mov
adc
clc
mov
mov
or
notb
test
adc
sbb
xchg
add
sbb
cwtl
xchg
jae
scas
iret
fs
dec
movsb
xor
dec
movsl
dec
pushf
sub
imul
dec
pusha
dec
clc
mov
push
sti
repz
into
mov
sbb
adc
dec
cmp
mov
sahf
push
insl
dec
sarl
sbb
loop
and
loop
adc
adc
repnz
mov
push
mov
sbb
add
cmp
sub
and
inc
mov
shll
adc
iret
pop
jmp
lds
pop
cmp
pop
mov
rcrb
and
sub
mov
cmp
push
rcll
test
jno
cmp
idivl
das
repnz
xchg
movhps
rcll
pushf
jmp
push
push
cmp
xchg
je
adc
and
pushf
in
daa
pop
scas
sub
push
ljmp
cmc
adc
dec
sub
popf
andb
xchg
inc
cmp
dec
push
call
add
or
pop
pusha
movsl
add
cmpl
nop
or
lock
call
adc
cmc
je
pop
pop
inc
jnp
lea
push
dec
push
sti
lcall
adc
and
std
sbb
push
or
ljmp
nop
pop
and
or
sti
and
jmp
orl
sub
in
dec
repnz
dec
inc
adc
sub
pop
pop
rcrb
orl
sbb
xchg
pushl
adc
adc
or
dec
adc
ret
orl
out
es
movl
push
jb
and
push
xchg
pusha
xchg
add
orl
psubd
push
stos
pop
pop
xchg
daa
push
adc
or
adc
fisubs
inc
or
adc
adc
dec
pop
sbb
jle
dec
incb
cmp
dec
sti
mov
pop
xorl
andl
cmp
lds
ficoml
test
imul
inc
or
aaa
sub
or
inc
imul
pop
pop
add
jg
xchg
mov
xchg
push
push
xchg
or
cltd
inc
pusha
xchg
mov
or
jge
jne
testb
addl
mov
jg
fs
ret
pusha
ljmp
push
fiaddl
bound
or
mov
adc
adc
in
inc
pushf
mov
adc
dec
cmp
and
jns
mov
or
cmpl
aad
sbb
dec
sub
adc
mov
and
push
xchg
mov
ljmp
jp
and
fldt
xor
mov
and
xor
lock
or
and
fwait
adc
in
push
sar
xchg
xlat
stos
aam
xchg
sub
push
push
enter
sub
outsl
adc
les
aaa
test
inc
lods
iret
adc
test
mov
sub
scas
dec
jecxz
or
mov
sbb
mov
adc
cs
or
test
insl
or
lock
nop
lea
pop
test
or
xor
adc
push
fisttps
pop
clc
adcl
push
inc
aaa
fwait
popa
jns
sub
push
cmp
mov
scas
rorb
pop
bound
movsb
pop
add
cmp
pop
push
lods
xchg
mov
and
mov
data16
add
push
dec
or
lret
fsubrs
mov
cmp
sub
sub
and
scas
cmp
add
pop
mov
inc
add
lods
sub
inc
repnz
aaa
nop
or
mov
inc
dec
scas
mov
pop
xor
sbb
fstpl
popa
xchg
mov
inc
out
inc
mov
and
gs
sub
imul
adcb
inc
mov
mov
lods
sub
jmp
lea
add
xchg
mov
mov
cmp
sub
lcall
leave
cli
cmp
sub
jns
bound
aaa
popa
arpl
adc
xchg
lret
arpl
sub
add
pop
ja
sub
adc
mov
push
jp
dec
faddp
lret
push
lods
jb
jbe
loope
es
ficoms
addb
adc
ret
and
lods
movsb
mov
imul
adc
and
push
cld
push
jmp
cmpb
rorl
ret
popf
call
ret
adc
dec
jne
xchg
fsts
ret
mov
sti
dec
pop
adc
loopne
mov
js
and
stc
push
sbb
sub
pop
ljmp
nop
cmpl
pushf
sub
or
leave
push
cli
call
dec
addb
test
loop
sub
jmp
lcall
jb
or
imul
dec
loope
mov
or
sti
leave
ftst
xor
lret
arpl
pusha
lods
inc
mov
dec
jmp
mov
inc
dec
test
mov
movsl
cmp
int3
xchg
push
push
cmp
adc
nop
adc
test
sub
mov
addr16
lcall
popf
adcb
hlt
xor
pop
pushf
jmp
push
clc
fbld
fcom
dec
into
pop
sub
js
fsubrl
mov
idiv
xorl
fildll
sbb
nop
icebp
js
push
mov
je
jo
mov
xor
inc
push
mov
push
cltd
bound
pop
cli
jb
xlat
pop
aam
sub
or
mov
inc
jle
shrl
fs
fiaddl
push
loopne
adc
dec
adc
xor
dec
je
push
and
fsubl
out
sbb
cmp
sbb
je
cli
filds
push
std
mov
lods
out
loope
sbb
stos
pusha
roll
dec
inc
jbe
shlb
push
outsb
xlat
add
pushl
jg
popf
fsubrs
and
xchg
repnz
and
neg
shlb
dec
jge
std
or
and
stc
adc
jge
xchg
push
or
push
test
add
cli
sub
mov
mov
push
adc
stos
imul
ret
repz
pop
cmpsl
loop
aad
mov
cmpl
lret
sub
jl
sar
xchg
je
dec
or
cmp
ss
xchg
sub
daa
mov
inc
cwtl
mov
mov
sbbl
rorl
subb
pop
into
loop
mov
xor
push
sub
xor
sahf
lods
or
jmp
in
mull
das
ret
pop
dec
cs
push
push
mov
mov
fldcw
push
mov
or
xchg
push
cmp
sbb
call
dec
sbb
imul
pop
leave
jo
imul
aad
adc
and
and
pop
dec
mov
cmp
rclb
push
and
popf
sarl
cmp
ja
mov
jbe
test
test
lret
stc
ljmp
add
and
push
add
test
fwait
cmp
jo
and
pop
push
lcall
dec
pop
mov
inc
ljmp
sbb
mov
push
pusha
imul
add
nop
scas
and
cmp
call
jnp
and
push
xor
jecxz
add
xlat
fnstsw
lret
dec
in
or
shrl
inc
add
sub
adc
or
shlb
imul
push
mov
inc
jns
fwait
push
inc
sbb
and
xchg
sbb
push
mov
sbb
add
aas
sub
cmp
sti
jmp
sub
pop
sahf
mov
push
repz
inc
pop
push
insl
scas
push
and
movsl
jne
scas
jge
jp
aaa
sub
fstl
dec
in
loope
mov
inc
fwait
fwait
or
inc
add
pop
pop
cmpsl
push
mov
mov
jmp
mov
jne
loope
mov
push
cmp
or
xchg
dec
rcl
cmpsl
les
daa
push
lock
out
dec
add
cwtl
sub
jmp
push
lcall
dec
or
aaa
xor
adc
jmp
int3
mov
jle
fimuls
mov
les
pop
fs
jne
cld
jne
sbb
dec
jne
test
pop
icebp
into
mov
gs
and
xchg
pop
xchg
sti
insb
sbb
lret
xchg
adc
loope
addr16
mov
lcall
jno
pop
push
mov
adc
cmp
cmpb
jb
push
add
xor
lods
xchg
cmp
aad
dec
and
ret
xor
jmp
frstor
push
shlb
xchg
lea
xlat
pop
pushf
jns
rcll
icebp
das
movsl
sub
add
andb
divl
pusha
dec
and
dec
jle
xor
adc
jecxz
fistps
fwait
push
aas
xor
testl
push
int
push
icebp
out
pusha
pextrw
testb
repz
inc
push
adc
mov
mov
fisubl
fwait
jg
xchg
jmp
adc
inc
in
and
mov
out
xor
inc
xchg
lds
xor
cmp
mov
mov
fnsave
lcall
dec
fs
mov
jno
push
and
pop
mov
and
xchg
lcall
cwtl
dec
jnp
adc
dec
in
cmp
xchg
push
enter
inc
js
popf
hlt
cli
dec
ja
lods
mov
aam
jg
jecxz
ja
fs
out
pop
dec
or
int3
mov
clc
out
cmpsb
jmp
pop
jge,pn
or
and
dec
and
lods
or
dec
add
dec
cmpsl
popa
daa
rolb
push
lahf
jbe
dec
sbb
mov
add
lcall
inc
dec
repnz
adc
test
or
and
xchg
sbb
cmp
lock
mov
mov
lahf
push
arpl
pop
dec
inc
pop
mov
icebp
sub
lock
sbb
std
and
push
dec
xchg
testb
ja
mov
sub
das
xor
cmp
popa
fs
pop
add
push
ljmp
xchg
cmp
lret
sub
sbb
addr16
in
mov
out
pop
xlat
insb
psubq
shrb
mov
add
xchg
push
daa
mov
sub
inc
arpl
cmp
stos
cwtl
lds
sbb
and
int3
xchg
sbb
adc
and
xchg
xchg
mov
jb
je
je
inc
or
fs
pop
push
pop
jns
cs
je
mov
inc
fwait
dec
pop
daa
xlat
pop
cmc
repz
das
and
sbb
fidivl
add
mov
aad
ret
mov
and
dec
es
call
xchg
add
and
popf
inc
cmp
xchg
stos
mov
in
and
lret
inc
iret
jge
pop
jnp
shlb
les
add
ss
lret
cmp
lds
test
lea
push
mov
shr
dec
out
adc
cmpb
xchg
adc
ss
push
or
mov
dec
adc
cmp
call
mov
adc
push
xchg
adc
sub
or
add
bound
sbb
pop
lahf
inc
sbb
sub
mov
pop
xor
jns
lret
pop
js
mov
push
or
xor
jne
push
push
adc
push
adc
mov
inc
nop
subl
jl
push
add
cmp
add
lods
mov
push
fs
in
pusha
mov
cmp
and
sahf
xchg
adc
jne
pop
lret
call
mov
js
mov
ds
inc
movsl
sti
or
ret
mov
cmc
push
dec
call
incl
jno
test
sub
jnp
cld
pop
paddd
mov
lsl
inc
cmpw
xchg
push
aam
aam
inc
sub
mov
xchg
stos
mov
ss
push
mov
addr16
dec
sbb
and
cmpsb
xchg
sub
lahf
push
xchg
and
addl
sbb
cmp
js
mov
movsb
out
mov
or
test
movsl
fnstcw
and
push
cld
jmp
xchg
sti
enter
bound
and
mov
inc
inc
je
fwait
adc
popa
test
xchg
inc
and
jl
dec
sbb
sbb
cmp
pop
mov
dec
mov
iret
fldenv
lahf
mov
sbb
ljmp
xor
mov
mov
xchg
mov
sub
fwait
lods
clc
orps
cs
out
dec
sbb
pop
aam
cli
repz
mov
les
rorb
and
lea
int3
lret
enter
jns
imul
fistps
or
loope
cmp
cmp
jl
pop
xchg
mov
pop
cmc
xchg
cltd
rcll
stos
cmp
leave
pop
jge
push
mov
xor
mov
push
cli
into
es
pop
dec
mov
adc
and
xchg
mov
out
mov
ret
mov
mov
xchg
jp
iret
and
or
dec
adc
loope
sbb
je
int
sub
push
stos
pop
lock
mov
daa
pop
mov
js
push
cltd
inc
or
jb
fstl
je
fs
and
mov
maxps
movsl
xor
enter
ret
xchg
fsts
ret
push
dec
add
xor
adc
sbb
fcom
xchg
mov
fadd
lock
fnstenv
and
jle
rcr
mov
push
dec
out
lahf
jne
dec
mov
and
cmp
mov
xor
daa
adc
mov
and
sar
push
add
pop
push
dec
mov
push
psubusw
aad
push
mov
imul
mov
lcall
sub
lahf
ja
je
mov
pop
mov
rcl
xor
push
nop
gs
push
or
aaa
subl
js
dec
adc
sti
xor
xor
sbb
jb
mov
mov
stos
jnp
pushf
fstpl
or
pop
pusha
mov
jbe
sub
ljmp
add
adcb
nop
xor
dec
cld
xchg
pop
push
leave
jbe
pop
jbe
xchg
cmp
push
cmp
imul
pop
inc
andb
and
xor
push
pop
jne
hlt
mov
push
or
sub
sarb
jl
and
mov
xchg
sbb
rclb
sbb
jnp
add
gs
xchg
sub
mov
addr16
fisubl
jno
cmp
mov
push
test
or
stos
lea
aad
aam
fsubrs
inc
jge
push
adc
andb
js
inc
cmp
call
cmp
xchg
mov
scas
lret
faddl
sahf
repnz
push
mov
das
cltd
imul
jp
pusha
cmc
push
mov
inc
push
mov
mov
sub
cmpsl
sbb
push
lret
loop
inc
lea
lea
xlat
mov
vmovdqu
cmc
test
pop
repnz
movsb
fs
mov
iret
dec
push
call
or
mov
in
xor
push
jb
or
hlt
sbb
nop
mov
hlt
stos
fcmovne
inc
and
mov
and
and
sarb
sbb
dec
mov
mov
xchg
aam
mov
and
mov
cmpb
movsb
adc
jae
jp
nop
cwtl
ret
loope
lret
mov
lock
dec
cmpsl
sbb
mov
pop
jns
dec
jge
xchg
fs
std
pushf
lret
adc
jmp
aam
sub
and
mov
xchg
inc
mov
jbe
xor
jl
mov
fisttps
cli
push
repz
xor
or
test
jae
js
and
or
in
scas
xor
jne
sti
outsl
sub
insb
insl
adc
pop
inc
mov
clc
mov
dec
mov
jp
dec
pop
repnz
fstps
pop
outsb
adc
push
scas
in
adc
stos
dec
mov
pop
dec
add
add
and
xor
push
or
xor
cld
mov
pop
lahf
push
xchg
add
adc
pop
xor
test
sbb
dec
xchg
jmp
decl
fcompl
inc
or
xchg
inc
lahf
xor
jnp
sub
data16
rcrl
mov
ss
test
and
sbb
sub
or
or
inc
fnstenv
data16
int
sub
pop
add
cli
or
jg
adc
cld
and
xor
dec
pop
shrb
ret
int3
stos
icebp
pop
pop
mov
stos
mov
pop
or
cmp
adc
fsubrs
cwtl
es
cmp
push
cld
stos
mov
adc
adc
cmp
pop
idiv
jp
lret
ret
or
les
inc
rorl
fwait
pop
push
jge
cmp
negl
jg
jns
xor
adc
cmp
push
pop
jge
xchg
push
inc
fisubl
or
pop
cld
dec
shll
adc
daa
inc
pop
adc
pop
insb
xorb
jl
pop
subb
fcompl
adc
dec
inc
pop
xchg
mov
or
sub
adc
adc
inc
addr16
movsb
dec
nop
mov
jo
cltd
aas
inc
inc
test
xchg
in
sti
ss
lds
dec
xchg
inc
jle
fld
or
scas
enter
aad
and
popf
ja
arpl
rolb
push
mov
and
pop
dec
pop
mov
push
inc
sbb
imul
push
jp
je
ds
mov
mov
sub
push
and
mov
icebp
and
movsl
lret
rclb
ds
mov
jp
adc
cmpsl
repz
pop
test
jmp
push
inc
mov
movsl
add
xor
lcall
nop
cmpsl
sarb
mov
add
add
dec
je
jmp
cmp
mov
lret
gs
shrl
cli
lret
out
mov
pop
in
push
jne
jnp
xlat
lcall
mov
push
xor
cmpsb
insb
inc
mov
or
mov
ljmp
imul
push
arpl
out
fsubs
mov
insl
lds
scas
movsb
mov
mov
mov
xchg
inc
mov
jg
pop
sti
adc
gs
jb
sbb
ljmp
inc
mov
ljmp
mov
inc
xchg
testb
cmp
or
pop
dec
jp
popa
and
jb
pusha
push
scas
dec
add
cs
push
mov
xor
xor
add
clc
sbb
je
out
call
or
pop
add
sub
and
shlb
imul
aad
outsb
out
sbb
adc
fimuls
add
sbb
push
push
pop
push
xor
jne
inc
or
loope
clc
sub
or
popf
push
xchg
cmp
rorl
out
cmp
mov
pop
movsl
les
add
out
and
add
sbb
jmp
xchg
adc
push
or
icebp
sbb
mov
push
inc
push
and
cmp
test
jno
or
mov
inc
inc
push
js
mov
pusha
xor
sub
xchg
mov
inc
dec
and
pop
das
and
mov
imul
or
sbb
or
pop
rorl
mov
sub
mov
mov
jb
push
call
popa
cld
aas
icebp
jmp
outsl
repz
and
fstpl
arpl
stos
fsubrl
cmc
cmp
lret
imul
dec
jnp
in
xchg
jmp
cli
add
jle
repnz
sar
aad
jns
sbb
mov
dec
lock
mov
aam
icebp
mov
mov
dec
into
mov
filds
cmp
repz
test
iret
add
pop
xchg
or
ja
out
sub
mov
push
inc
prefetcht2
dec
pop
into
mov
rorl
test
movsb
out
mov
push
jge
orb
gs
fs
mov
jmp
and
mov
stos
mov
xor
pop
in
movsb
aad
pushf
pop
fdivrs
in
jne
pop
jns
inc
inc
fwait
lea
aam
xor
pop
shlb
dec
mov
add
pop
xchg
pusha
inc
dec
jne
iret
movsl
jg
stos
gs
fsts
jl
ret
xchg
rolb
jbe
push
inc
mov
cwtl
int3
pop
add
ja
imul
inc
or
lock
mov
xor
fbstp
push
pop
mov
es
test
aam
dec
cmp
sbb
nop
jge
lea
imul
sub
xchg
adc
ss
and
test
push
into
je
int
and
jp
je
sub
dec
and
dec
mov
mov
loop
or
addr16
call
movsb
mov
mov
mov
pop
add
add
push
push
bound
sub
or
adc
outsb
dec
std
sbb
jmp
scas
cmovne
cs
inc
jp
lcall
rcl
nop
xor
scas
fnstsw
cmpsb
push
dec
adc
xchg
mov
pop
mov
pop
pushf
or
jbe
lret
sbb
mov
stos
popf
lcall
fistps
lcall
add
loop
dec
lock
fistps
pop
pop
pop
mov
inc
movsl
mov
int
push
push
mov
imul
add
inc
imul
std
xor
out
sub
sub
and
xchg
push
xchg
jne
call
mov
bound
into
and
loop
xchg
push
shlb
inc
leave
movhps
jmp
jle
int
mov
or
mov
push
sarb
es
add
call
adc
mov
inc
clc
ljmp
mov
mov
imul
test
adc
fs
mov
lock
add
sbb
cmp
rclb
stos
addr16
jle
dec
or
repnz
sub
mov
sub
ficoml
stc
test
dec
mov
dec
lret
jecxz
adc
add
dec
xor
jo
push
push
repz
cmp
arpl
adcl
nop
insb
and
mov
outsb
jecxz
lret
cmp
pop
fmuls
test
daa
push
mov
xor
dec
xor
adc
pop
mov
adc
xor
xor
xchg
or
cli
loop
shll
mov
add
mov
ds
xor
data16
popa
xor
cmp
outsb
loop
addr16
mov
mov
xlat
fsubrs
xchg
lret
mov
sub
mov
pop
rorb
in
cwtl
cltd
fistl
add
lret
mov
mov
fwait
es
out
loopne
add
push
dec
sbb
sub
pop
loope
jne
mov
dec
ret
cmpsl
xorl
pop
adc
mov
pop
shl
push
jp
repz
mov
jo
xchg
test
fs
lahf
int3
cmpb
cmp
jae
popa
je
das
les
mov
movsl
fdivr
or
or
imul
sub
adc
push
mov
pop
adc
xchg
mov
scas
movaps
sub
inc
dec
or
pop
test
stc
mov
or
pushf
or
or
push
add
or
inc
mov
mov
jl
iret
insl
rcr
jle
shrl
jbe
arpl
rcrb
mov
adc
jno
mov
sub
hlt
std
mov
mull
mov
ds
movsl
scas
hlt
push
cld
scas
push
ficompl
test
data16
pop
xchg
int
outsb
lock
sub
imul
mov
pop
cmc
push
sbb
pop
or
or
xchg
and
cmp
push
adc
in
out
or
mov
clc
jmp
add
xor
mov
mov
in
sti
jle
dec
pushf
es
mov
pop
out
lret
hlt
pop
repz
adc
rcll
mov
movsb
loopne
inc
pop
xchg
pop
les
xlat
jnp
lods
fsubl
das
sub
jo
mov
xchg
ja
aaa
jl
mov
insl
adc
mov
mov
cmc
mov
mov
cmp
add
cmp
or
icebp
jge
loop
mov
sub
adc
pop
jp
jae
imul
gs
sub
pop
sti
sub
aas
hlt
sti
inc
dec
je
stos
sub
pop
push
test
jmp
pop
mov
out
adc
mov
or
or
mov
xchg
int
push
movsb
int3
cmp
sbb
dec
xor
xorb
add
adc
pop
dec
cmp
mov
jmp
xorl
imul
out
pop
mov
dec
mov
or
xchg
mov
repz
gs
aaa
inc
add
stos
sub
push
subl
repnz
push
pusha
in
or
fcmovne
add
jle
sbb
sub
adc
or
inc
or
mov
in
sahf
jecxz
inc
inc
inc
lcall
or
jb
rclb
faddl
int3
adc
or
test
pop
xchg
sub
jl
roll
or
jno
leave
fcompl
mov
adc
scas
inc
add
mov
lret
dec
mov
sti
add
sub
jb
roll
roll
cmpsb
or
add
push
movb
outsl
push
or
popa
and
add
mov
jne
pop
adc
jge
int
bt
push
sbb
sub
aam
sub
jmp
or
imul
icebp
mov
mov
xor
inc
sbb
aaa
clc
cs
leave
mov
jae
push
dec
fisttps
mov
and
mov
pop
aas
add
sub
fwait
rcr
dec
adcb
pop
pop
cmpsb
mov
adc
or
or
adc
adc
loopne
mov
jle
mov
push
sbb
sub
push
adc
fdivrl
lods
sbb
ljmp
cmc
rcrb
push
mov
shlb
or
fsts
jle
push
or
out
dec
rorb
xor
xor
aam
rcrb
in
rcll
inc
dec
add
cli
push
call
das
sbb
jle
sbb
inc
pop
rclb
cmp
cmc
or
xor
nop
cmp
and
fidivs
fs
pop
test
es
fadds
enter
or
inc
and
mov
fs
mov
mov
les
jl
xchg
add
xchg
popf
int3
add
stc
lahf
idiv
jmp
sub
scas
pop
aas
mov
fdiv
mov
cs
mov
mov
adc
subl
sbb
pop
cmp
fistpll
inc
mov
cmpsl
bound
adc
inc
ret
mov
lahf
lock
cmp
push
xchg
jle
outsb
les
out
and
mov
jnp
test
cmc
lcall
mov
push
add
fs
mov
inc
lea
aad
or
enter
or
dec
mov
xchg
fwait
jg
jns
mov
daa
inc
in
dec
push
fildll
stos
aad
scas
popl
adc
add
cmp
movsl
enter
imul
or
inc
fdivr
ror
addb
xchg
cmp
rorb
loop
push
cmp
lahf
lock
dec
xchg
xlat
out
ja
insl
in
adc
sub
sahf
dec
fwait
stc
in
lods
sub
sbb
bnd
imul
and
jle
es
add
inc
dec
or
cmp
enter
add
cli
mov
loop
xchg
xchg
sub
xor
ret
sub
inc
adc
and
fs
or
adc
mov
inc
add
and
adc
mov
jmp
cmp
mov
jb
fistps
sub
cmp
movups
leave
aad
jbe
add
cmp
pushf
sub
mov
dec
lcall
push
fimull
jg
sbbl
pop
fsubrs
sub
dec
push
enter
mov
sbb
sub
sbbl
rorb
jnp
je
sub
or
pop
add
cs
or
subl
ret
test
dec
mov
popl
sub
xlat
push
mov
mov
sub
std
or
adc
push
xchg
int
add
mov
cld
fidivl
push
pushf
sub
fmuls
je
dec
mov
adc
sbb
movsl
add
inc
insb
and
aaa
xor
add
cmp
lret
pop
fsts
stos
inc
sbb
sbb
cwtl
pop
push
insb
adc
xchg
lea
ds
ds
aam
lar
fmuls
and
add
or
fcomip
push
and
and
adc
movzbl
lcall
or
adc
movsl
adc
xor
je
sub
test
jne
hlt
scas
mov
xor
sbb
and
fadds
jle
push
ljmp
sti
cmp
sbb
mov
inc
jmp
testl
jb
clc
dec
lcall
and
pop
bound
ret
inc
jecxz
cmp
cli
lods
cli
mov
mov
and
sarl
jp
lret
push
push
cmpsl
movsl
jnp
jle
pop
inc
or
pop
stos
dec
push
stos
pop
mov
repnz
push
sub
mov
mov
in
or
add
cmp
or
xchg
insb
pop
sbb
daa
rcrl
inc
or
or
mov
scas
and
jmp
sub
aam
test
mov
mov
jb
nop
ja
or
mov
jmp
or
maxps
and
cmpsl
jle
sub
rorb
adc
cmp
adc
das
cli
cmp
cmp
in
jne
jnp
mov
sahf
es
fadd
xchg
push
adc
leave
ja
mov
mov
lahf
dec
pop
add
or
add
mov
xchg
icebp
lock
mov
mov
xchg
cmc
or
inc
in
mov
and
leave
jno
push
out
sub
outsl
in
cmp
push
mov
pop
test
mov
add
mov
fisubrl
xchg
and
enter
cmpl
adc
fwait
cs
adc
jbe
mov
into
mov
loopne
test
xchg
mov
iret
mov
mov
out
cwtl
mov
rclb
pop
xor
xchg
int3
pusha
shl
mov
pop
add
shl
repz
cmp
test
pop
out
push
addl
or
rolb
adc
sbbl
inc
mov
add
xchg
lock
inc
lret
decl
in
icebp
mov
inc
in
xlat
scas
sub
inc
pop
add
xchg
enter
dec
fldl
loopne
je
inc
adc
and
sarb
mov
adc
adc
add
pushl
fidivl
add
das
or
cmp
shrb
pop
loop
dec
test
fisttps
dec
jmp
add
test
stos
lret
in
and
push
sti
dec
inc
rolb
out
call
jecxz
cmp
ljmp
add
adc
movsl
push
xchg
loop
dec
scas
aad
js
bnd
jns
fstps
mov
movb
jno
jge
cltd
xchg
arpl
fsubrs
add
out
and
lcall
add
adc
adc
loope
cltd
mov
and
and
sub
pop
xchg
cmpb
jmp
adc
movsb
xchg
xchg
cmp
sub
hlt
jle
xchg
gs
push
jl
push
jl
gs
dec
pop
dec
out
push
or
and
push
inc
xor
inc
bound
cli
repnz
jno
adc
fcomip
inc
pop
cmp
jge
push
cmp
shlb
lcall
adc
insb
sbb
clc
xor
and
imul
or
fldl
inc
sub
inc
test
xlat
dec
mov
dec
push
pusha
sub
fs
pop
jl
and
cli
xor
push
data16
xlat
ret
out
jecxz
fisttpl
dec
lock
mov
out
dec
pop
out
fildl
push
call
std
cmc
sub
insl
pop
mov
push
test
inc
pop
or
pop
das
inc
pushf
or
aam
mov
in
jl
mov
or
aad
ret
enter
repz
lret
pop
pop
cmp
lock
push
setns
jnp
xor
push
daa
pop
aas
cmc
push
jo
push
data16
push
inc
fmull
pop
pop
and
les
jecxz
fwait
inc
xlat
mov
mov
subl
adc
xchg
cmp
shl
xchg
mov
and
push
pushl
scas
add
push
in
sub
sbb
adc
jnp
cmp
outsl
xor
lret
adc
call
scas
jnp
call
rorb
add
sub
add
inc
aam
roll
lods
test
push
mov
dec
cmpsl
push
lret
repnz
mov
xor
out
icebp
andl
mov
pop
add
shrb
mov
call
add
cmp
out
sti
je
out
lods
loopne
es
jge
mov
pop
out
or
gs
cmp
out
inc
pop
push
or
andl
xor
xchg
in
add
out
or
shl
or
xchg
arpl
push
cmpb
push
mov
movsb
pushf
leave
mov
jns
inc
cmp
daa
ret
jecxz
push
xchg
push
js
dec
mov
push
pop
insb
gs
xlat
and
xchg
scas
mov
add
ret
fisttps
sarl
pop
cmp
ja
push
xor
xor
lahf
sbb
pop
imul
pop
stc
inc
insb
cmp
mov
mov
fistl
pusha
jp
call
aad
bound
popa
setb
xor
insl
mov
sub
imul
and
rolb
pop
ror
popf
cmc
ss
jmp
in
imul
sub
dec
aad
cmp
aaa
out
push
inc
sub
es
push
outsl
adc
scas
fwait
inc
dec
out
loope
cs
mov
push
inc
inc
lret
or
outsb
jne
mov
sub
xchg
std
pshufw
std
xchg
in
call
loop
xchg
lods
leave
mov
xchg
dec
lods
jmp
rcr
test
sub
dec
cli
pop
or
mov
repz
inc
pop
es
js
dec
inc
popa
sub
and
pop
and
pusha
dec
pop
or
jge
pop
shll
stos
push
shlb
jp
les
cli
sbb
cmp
xor
sub
stc
jge
push
in
cmp
pop
or
inc
adc
xchg
and
fisttps
jns
rcll
push
or
adc
xor
and
push
cmc
add
and
aaa
push
gs
jne
lock
neg
out
aaa
daa
inc
lahf
dec
call
mov
cmp
hlt
mov
inc
call
andl
jne
mov
adc
leave
inc
cmp
jle
ja
mov
fisubs
add
cmpsl
pop
in
mov
sbb
gs
cmp
dec
sbb
dec
cmpsb
jns
ds
ret
jno
hlt
aam
push
push
inc
adc
lea
or
popf
loope
or
shr
scas
leave
add
cwtl
dec
mov
lret
cli
pusha
inc
lcall
fidivs
test
jne
stos
in
inc
mov
mov
lret
push
in
jle
mov
dec
jg
mov
test
adc
adc
adc
inc
mov
ret
adc
jle
in
jg
nop
iret
orps
repnz
xchg
arpl
push
xor
adc
lock
inc
adc
adc
and
out
push
jae
clc
and
andl
xchg
xchg
pop
test
aad
xor
scas
xchg
ljmp
mul
lcall
adc
rcpps
outsb
jne
sub
aaa
sub
or
adc
sbb
dec
adc
fdivrs
xor
sub
push
or
push
in
mov
sub
inc
pop
in
and
sub
pop
push
daa
xor
out
popa
inc
cmp
adc
adc
adc
jp
jbe
pop
sub
sbb
dec
jecxz
adc
mov
repz
mov
test
scas
and
or
mov
incl
jno
mov
stos
sub
addr16
adc
and
push
adc
push
shrb
cmpl
and
out
sbb
nop
pushf
xor
lods
mov
ja
movsl
fstpl
andl
pusha
adc
push
push
and
sub
sub
or
xchg
jo
push
shrb
sub
jp
xor
mov
mov
push
and
adcl
sbb
push
je
test
push
adc
clc
jge
lcall
aad
dec
push
fnstenv
push
lock
pop
pop
test
lds
push
xor
shlb
sbb
adc
inc
mov
movsl
pushl
xor
loopne
adc
pop
xor
mov
out
dec
and
fistl
adc
or
sub
aam
or
mov
push
pop
testl
and
jne
aas
mov
jl
xor
je
and
adc
adc
xor
pop
leave
pop
mov
int3
shlb
dec
pop
push
jg
xor
mov
pusha
xchg
movsl
js
adc
sbb
popa
jp
aam
jmp
popa
daa
dec
hlt
cld
das
imul
and
and
dec
add
idivb
mov
dec
jo
adc
sbb
nop
std
pop
pop
fisttpll
je
add
dec
sbb
enter
out
dec
ja
cltd
xor
mov
pop
jmp
enter
or
xchg
ret
xchg
xchg
cmpsl
test
cmp
into
mov
dec
clc
xor
jno
dec
lods
jg
sub
or
rorl
stos
mov
stos
mov
jp
push
mov
dec
cmp
cmp
xor
mov
add
cmc
adc
dec
icebp
pop
cmp
mov
jns
imul
pop
mov
jmp
xor
xor
pop
xchg
sbb
mov
mov
cmc
mov
call
inc
add
aas
add
ja
ret
or
inc
insb
cmp
dec
jl
js
jg
or
ret
stos
lea
adc
inc
scas
daa
xchg
mov
test
fwait
pop
iret
or
iret
mov
jo
inc
add
mov
pop
int3
sub
repz
mov
das
pop
fisttpll
jge
push
xor
inc
lods
inc
dec
clc
fnsave
lea
hlt
scas
inc
sbb
push
xlat
jb
xchg
dec
or
shlb
faddp
jmp
fs
adc
sbb
xchg
icebp
call
push
cld
mov
pop
jmp
bound
push
adc
inc
mov
mov
adc
cld
in
lahf
push
negl
hlt
call
push
pop
std
push
pop
mov
sub
fsubrs
je
in
or
sti
adc
adc
clc
les
ret
inc
adc
cltd
sahf
std
sti
testl
sub
pop
bound
cmpb
pop
sbb
mov
pop
jmp
or
ret
push
es
clc
jp
rclb
push
dec
out
loopne
pusha
push
lea
xchg
aam
iret
outsl
dec
pop
mov
dec
adc
pop
jbe
pop
repnz
int
mov
push
or
mov
mov
stos
aam
add
sub
stos
mov
test
xchg
arpl
xchg
mov
ds
orb
xor
adc
jnp
shll
inc
adc
jmp
push
mov
movsl
dec
ss
outsb
mov
mov
pop
mov
push
add
cmova
xchg
lret
dec
leave
ljmp
jmp
stos
call
test
cmp
dec
sbb
xlat
scas
xor
stos
adc
push
jmp
xor
notl
jno
and
daa
adc
fcoml
cli
jmp
into
ss
push
fdivr
or
mov
in
xorl
call
dec
daa
inc
sbb
add
dec
enter
bound
aas
jne
ja
mov
push
pop
in
orb
inc
sbb
sub
mov
and
insb
mov
xor
data16
addl
mov
ret
and
ja
sub
push
inc
stos
in
in
sbb
or
std
and
jns
sti
ficoml
cmp
mov
into
pop
je
iret
push
xchg
adc
ljmp
jmp
fst
adc
test
inc
sbb
mov
mov
dec
mov
pop
adc
fnstcw
mov
pop
adc
test
les
xchg
mov
pop
sbb
pop
stos
sahf
bts
xchg
inc
dec
mov
jmp
and
lock
hlt
fdivrs
adc
pop
mov
sbb
mov
xchg
cmp
mov
inc
pushf
stc
out
bound
stc
cs
xor
in
ret
mov
push
lock
adc
cli
xor
jmp
dec
add
jne
js
sub
flds
dec
dec
repz
xor
sbb
mov
lret
mov
push
movsb
mov
inc
sbb
mov
add
cmp
and
outsl
int
sbb
push
sarb
mov
xchg
rcr
dec
out
or
adc
dec
mov
xchg
adcb
lods
dec
sub
mov
mov
lods
in
dec
sub
testl
dec
jle
enter
inc
add
outsb
or
push
jle
jmp
cmpsl
jnp
fdivrl
ret
out
and
pop
aam
scas
pushf
pop
and
push
pop
pop
sub
adc
pop
popa
sub
push
adc
cmp
push
xchg
push
leave
in
mov
test
xor
dec
pop
cld
aad
adc
ljmp
push
in
jecxz
cltd
cmc
mov
mov
repz
and
adc
mov
add
push
or
in
mov
add
adc
mov
dec
push
mov
dec
movsl
mov
mov
jmp
sub
sub
push
mov
sub
push
adc
cmp
jp
test
xor
lea
cmpsl
dec
lods
pushf
nop
mov
sub
ss
adc
dec
dec
cld
cmp
dec
adc
leave
aam
jae
fsubs
jo
in
push
lea
call
mov
enter
sarl
rorb
ja
jne
mov
mov
jg
inc
das
aaa
divb
sub
mov
and
sbb
xchg
cli
push
xchg
xor
jecxz
mov
sub
jo
xchg
call
push
in
jns
aas
addl
dec
mov
leave
and
and
push
adc
cmp
push
and
inc
adc
mov
pop
scas
lahf
and
movsb
in
sub
jmp
lahf
jno
daa
push
leave
cwtl
inc
jle
push
push
jne
lea
mov
in
mov
jmp
inc
push
adc
mov
xor
ljmp
lahf
xor
subl
or
jmp
inc
pop
loope
popa
clc
add
test
sbb
daa
jno
in
or
sub
fistpll
mov
test
in
jg
xchg
add
js
loopne
add
sub
add
addr16
test
loopne
out
jne
in
xchg
nop
pop
mov
inc
cmp
pop
pop
sbb
push
cs
pusha
lds
int3
dec
adc
inc
sbbb
fbld
movq
inc
addr16
xchg
or
cmpsb
and
fs
popa
lret
dec
dec
adc
adc
mov
push
push
inc
imul
inc
inc
add
call
cmpsb
sbb
push
sub
sbb
loopne
add
add
mov
and
or
push
xchg
popa
dec
xchg
lahf
cmp
adc
sub
pop
sbb
xlat
fs
add
mov
add
inc
fidivl
add
sahf
loope
push
hlt
call
cwtl
stos
loop
leave
in
pop
mov
or
and
dec
inc
push
lods
mov
adc
or
ret
push
and
aam
out
je
movsb
test
nop
adc
and
mov
push
movsb
cmp
data16
jae
xor
xor
cs
cmpsl
cmpsl
dec
lods
mov
pop
arpl
inc
inc
add
sub
rcll
mov
dec
or
mul
push
lea
ret
stos
lock
enter
call
push
test
mov
push
adc
cld
into
lret
adc
push
clc
imul
add
mov
popf
popa
push
cmc
test
dec
and
aad
mov
xchg
clc
cmpsb
fs
xchg
je
mov
incl
incl
jge
aad
mov
sbb
std
aad
xor
subb
adc
xor
push
aam
outsl
sbbl
xchg
push
decb
add
mov
in
add
jmp
adc
sbb
aas
and
dec
lret
mov
or
jns
or
or
roll
jns
adc
or
xor
rcrb
pop
sub
scas
orl
cld
jl
outsl
sbb
iret
pop
data16
xchg
inc
clc
ret
pop
push
cmp
push
dec
das
shr
mov
pop
mov
shlb
adc
hlt
and
sti
sub
mov
sub
or
push
cmp
sbb
sub
les
pop
push
xchg
or
sbb
pop
xor
pop
sub
mov
xchg
pop
dec
leave
push
add
cmc
adc
adc
movb
mov
push
add
mov
dec
popa
out
cmp
mov
mov
lahf
outsl
std
nop
stos
mov
push
inc
pop
popf
push
adc
cld
mov
or
hlt
cmpsl
fadds
push
sti
or
hlt
pop
fisubl
mov
rorb
movb
adc
mov
add
jnp
mov
and
je
mov
out
adcl
jno
js
stos
loop
lcall
mov
push
push
pop
push
clc
jae
imul
or
jl
pop
nop
add
test
cmpsl
push
sub
inc
pop
cmp
jle
test
jl
inc
or
ret
or
lods
and
push
gs
jbe
inc
adc
adc
aaa
pop
cli
or
je
mov
shld
es
xchg
mov
shll
xor
cli
push
xchg
fs
add
or
rep
lcall
sub
sbb
sub
mov
lock
jo
xchg
call
cmpsl
xchg
nop
mov
ja
cmp
xor
mov
or
mov
int
push
inc
movsl
xchg
aam
inc
call
xchg
dec
jg
fcoms
lea
inc
mov
cmp
xor
add
add
ss
pop
add
adc
lret
or
sbb
xor
inc
lods
mov
push
push
mov
mov
fstps
adc
push
test
inc
pop
lret
push
out
out
or
insl
pop
rolb
push
push
out
mov
fildl
fmull
das
call
pop
mov
das
cld
pop
hlt
out
mov
out
jmp
ret
aaa
and
mov
movsl
call
cld
jns
adc
sub
dec
dec
lret
mov
dec
push
ljmp
popf
jbe
jb
int
adc
xchg
xchg
push
sbb
pop
movsb
mov
push
xor
dec
scas
inc
add
or
or
mov
lret
sub
or
in
mov
js
push
pop
jo
js
xchg
push
mov
mov
mov
lret
out
xchg
inc
imulb
xor
imul
adc
pop
cmpsl
inc
enter
lock
lahf
push
cmp
ja
lahf
hlt
repz
push
jmp
hlt
or
xchg
push
movsl
and
cmp
sub
cmc
enter
jmp
mov
push
xchg
leave
or
push
mov
push
adc
mov
fcoms
sub
daa
jbe
sub
xor
repnz
sahf
fs
jae
cmp
jne
cmpsb
adc
pushf
ds
mov
adc
outsb
xchg
mov
mov
inc
pop
mov
ljmp
pop
test
data16
enter
or
int
sub
shlb
mov
orb
adc
xchg
push
push
mov
push
push
dec
lcall
out
and
lea
cmpsl
push
push
mov
lock
push
push
push
jg
push
das
inc
pop
adc
push
mov
inc
ret
jns
dec
pop
mov
dec
mov
pop
call
call
mov
jne
cmp
dec
dec
push
push
ret
pop
push
or
xchg
fs
mov
nop
xchg
in
add
popf
ja
adc
cmp
mov
push
jb
nop
sub
dec
in
mov
in
push
xchg
jno
mov
jne
mov
insb
inc
shll
xchg
dec
mov
ret
add
xchg
es
xchg
lcall
push
je
sub
inc
xor
push
inc
adc
mov
push
push
mov
sbb
xchg
jl
insb
and
xchg
mov
sub
xor
leave
mov
lock
xchg
in
lret
or
push
sub
push
xor
jg
push
fdivs
cld
je
xor
fxch
repnz
and
mov
pop
xlat
repz
jle
mov
jae
popa
xor
push
sahf
sbb
mov
mov
in
sahf
cmp
dec
ret
in
and
push
mov
jo
je
xchg
in
xorb
lds
mov
add
push
jecxz
inc
pop
imul
lahf
inc
pushf
add
mov
daa
cmc
sbb
fdivrl
xchg
push
mov
addr16
lods
movsl
xchg
in
jge
or
mov
lock
cmp
adc
rcll
mov
jmp
in
push
sbb
pusha
sub
jg
mov
cmp
std
and
and
cmpsl
fiaddl
test
pop
adc
mov
stos
les
lret
insl
cmpl
cld
push
xor
adc
push
movsl
jne
pop
daa
sub
ret
and
pop
cs
imul
and
lds
and
sti
loopne
and
adc
aaa
adc
fcomps
add
or
rorb
scas
movsl
popf
and
test
out
lock
outsl
das
mov
and
rcll
jge
jnp
jbe
mov
ror
adc
add
mov
scas
jmp
cmpsl
sbb
les
or
fs
scas
inc
arpl
push
mov
add
aaa
pop
inc
push
dec
call
xchg
mov
repnz
pop
arpl
jns
dec
push
cs
mov
pushf
dec
loopne
inc
cmp
inc
rolb
ja
mov
mov
add
push
fistl
mov
das
xchg
stos
adc
mov
popf
ds
cli
and
pop
int3
push
pusha
mov
out
lret
add
push
outsb
jl
in
mov
nop
push
push
jne
call
sbb
xor
inc
add
std
jg
sbb
rcrb
xor
jge
in
pop
xlat
dec
loop
adc
cvtpi2ps
rcl
lea
sbb
sub
addr16
cs
push
jmp
sub
lock
mov
subb
mov
add
orb
cmp
mov
xor
add
xor
call
cmp
pusha
jno
pop
add
orb
mov
js
mov
nop
or
and
cmpsb
or
int
or
pop
mov
lahf
dec
ja
jge
mov
mov
or
sub
stos
adc
inc
push
loop,pn
adc
icebp
stc
sbb
hlt
test
adc
inc
xchg
jne
cmp
fwait
push
or
cmp
inc
dec
push
test
cmp
ret
adc
mov
push
xlat
xchg
fwait
sti
xor
sbb
xor
and
pop
aad
dec
lock
imul
adc
leave
incl
and
cmp
scas
mov
adc
mov
cld
call
pop
lcall
cmp
hlt
pop
gs
loop
adc
cmp
dec
aam
out
mov
pop
dec
mov
ja
inc
daa
mov
ljmp
mov
xchg
insl
add
xchg
sub
xchg
fsubl
sbb
mov
add
adc
ljmp
inc
adc
mov
push
pop
loop
sbb
or
xor
xchg
in
push
xchg
inc
mov
jne
adc
push
or
filds
nop
into
sbb
fnstcw
mov
push
or
mov
jbe
dec
test
inc
aaa
mov
in
inc
or
push
in
or
push
and
icebp
jp
or
dec
cwtl
mov
push
adcb
xor
sbb
jne
les
jmp
scas
gs
movsl
sarl
and
bound
or
mov
ds
popa
push
add
mov
jbe
scas
pop
repz
or
stos
popa
scas
jge
dec
adc
popf
push
xchg
aad
int
dec
fmull
inc
push
or
or
fnsave
xor
mov
scas
or
lcall
or
je
insl
dec
fsubr
and
xor
out
cli
inc
std
fstpt
test
push
cmp
fstpt
sub
xchg
sub
adc
push
fs
sar
aaa
lea
inc
dec
adc
and
or
jae
leave
nop/reserved
cmp
add
pop
scas
mov
push
lock
pop
jmp
jmp
lock
xchg
jg
sub
es
pop
or
addr16
jmp
pop
cmp
or
sbb
adc
bound
mov
push
mov
sbb
adc
test
fnsave
cmpsb
xor
pop
sbb
and
push
sbb
mov
adc
sub
push
inc
pusha
dec
sbb
mov
sbb
popa
push
je
out
loope
fwait
int3
sub
sti
popa
cmp
sbb
dec
inc
sbb
mov
ds
add
adc
sub
adc
pop
adc
repnz
inc
pop
and
pop
repnz
adc
and
mov
dec
adc
dec
mov
mov
jecxz
add
inc
push
xor
add
dec
loop
lret
sbb
ret
rcr
dec
movl
das
cs
es
sbb
inc
gs
int
or
push
cmc
dec
popa
jae
adc
and
mov
jae
xlat
push
inc
shlb
sbb
jo
jo
pop
adc
sub
jae
ficoms
pop
cli
mov
inc
sub
inc
je
sbb
xchg
jb
fs
aaa
dec
xor
dec
outsl
inc
sub
adc
xorb
sbb
push
mov
sahf
or
jl
and
lret
inc
mov
add
lret
mov
mov
xchg
rcl
xchg
add
push
push
push
inc
mov
lods
sub
fnstcw
xchg
add
adc
das
cwtl
xor
cmp
outsl
cmp
or
xor
adc
mov
stos
adc
adc
ret
imul
fs
cmp
addb
sub
sbb
icebp
dec
cmp
dec
jg
jmp
popf
movsl
or
aam
fstpl
dec
or
mov
data16
dec
and
xchg
popa
cmp
inc
int
idiv
nop
sub
loop
mov
or
scas
sbb
pop
sbb
mov
push
pop
and
ljmp
fbstp
xor
mov
hlt
into
xor
leave
mov
cmp
pusha
dec
push
addr16
mov
and
in
sub
in
call
js
mulb
clc
sub
lock
pop
adc
pop
or
or
fs
sub
adc
addr16
into
jecxz
add
jp
jnp
add
int3
adc
ret
or
add
repnz
dec
push
mov
add
add
in
inc
test
movsb
inc
xchg
adc
sub
mov
xor
in
xchg
mov
mov
ret
lock
movsl
loop
pusha
out
clc
ficoms
sbb
imul
pop
adc
call
push
pop
mov
dec
ljmp
or
cmp
inc
outsb
les
ret
into
scas
loope
test
mov
inc
inc
in
jne
and
sbb
jne
add
cmp
outsb
loope
stos
scas
das
push
cld
push
sub
sbb
mov
jne
popa
adc
push
or
adc
jnp
push
subl
aad
cli
test
aaa
rorl
push
jbe
fsubl
enter
jo
cmp
or
nop
push
mov
mov
adc
cmp
stos
and
stos
inc
xchg
jnp
inc
rorb
nop
or
push
push
or
popf
push
imul
sub
adc
jns
insb
cmp
or
jg
or
jae
jmp
sarb
jmp
outsl
or
adc
or
mov
fs
pushf
adc
iret
xchg
fmuls
scas
sub
das
mov
inc
push
int
sarb
push
jo
pop
out
xor
ljmp
fistpl
rorb
rcrb
pop
sub
jne
xchg
push
iret
fcoms
jl
imul
jp
xor
orl
sub
sub
push
or
int3
mov
pop
push
xorb
rcrb
add
adc
mov
xor
mov
mov
xor
les
shl
mov
enter
movsb
xchg
lods
pop
imul
sbb
jg
test
or
xor
aaa
or
js
sub
xchg
ljmp
cwtl
cmp
push
xchg
inc
aam
arpl
mov
mov
or
lds
adc
jle
jne
adc
filds
addb
test
xchg
stos
cmpsl
mov
sub
and
xchg
or
fucom
mov
xchg
inc
and
adc
stos
mov
jl
insb
jle
mov
mov
cld
push
xchg
jo
fs
xchg
dec
xor
nop
divl
cltd
sbb
cmp
clc
sub
cltd
adc
or
cltd
dec
adc
enter
or
xchg
or
das
cmp
and
mov
fdivr
fs
push
ja
sub
inc
stos
cmpsl
call
adc
mov
test
cs
pop
loopne
cwtl
jmp
xor
pop
adc
gs
mov
push
call
les
in
adc
sub
mov
rorb
mov
xchg
sbb
and
inc
cmp
inc
pushf
js
test
and
aas
or
test
xor
scas
fwait
in
or
add
inc
sbb
and
cli
jno
lcall
movsl
adc
and
push
cli
pop
push
sbb
push
push
jo
sub
sbb
in
mov
add
scas
in
and
xor
jo
icebp
pop
jo
adc
gs
in
mov
and
sbb
mov
in
in
mov
fstps
or
outsl
lds
xchg
mov
or
hlt
add
call
and
inc
adc
push
enter
pop
xchg
enter
pop
and
sti
and
pop
lock
test
je
nop
loopne
enter
fmull
fiadds
jmp
lock
lods
mov
pop
inc
sti
loope
sti
sbb
sbb
mov
jmp
sub
int3
fs
sarb
adc
in
fdivrs
test
hlt
in
pop
adc
rorl
sbb
jmp
cwtl
mov
sub
scas
loop
hlt
push
lock
dec
jl
orl
repz
popa
push
bound
or
xor
or
lods
pop
stos
adc
xor
dec
cltd
sbb
adc
pop
mov
pop
push
int3
and
in
push
mov
dec
mov
xor
inc
xor
mov
cmp
mov
cmpl
add
lea
call
in
std
or
push
stos
dec
xchg
mov
nop
xchg
cmpsl
fmuls
arpl
or
sbb
mov
mov
ljmp
mov
call
neg
leave
pop
imul
inc
imul
dec
lea
or
rclb
cmp
shll
clc
cmp
cmp
mov
push
stc
inc
jmp
aad
decb
adc
and
push
movsb
or
insl
subl
icebp
sbb
jb
mov
lahf
and
cmp
inc
dec
mov
push
loop
loopne
inc
dec
enter
stos
adc
push
and
push
in
bound
sbb
jl
inc
push
in
mov
loope
in
sbb
or
ja
dec
lds
mov
bound
pop
xchg
mov
fndisi(8087
mov
dec
sub
les
pop
mov
xlat
popf
fnstenv
out
mov
outsb
loopne
adc
daa
and
cmp
lds
xor
cmp
xor
and
imul
sub
inc
adc
call
jecxz
pop
and
packsswb
cs
loop
pop
push
jle
dec
idivb
cmp
lret
call
adc
andb
popa
in
mov
les
out
sub
inc
adc
push
add
jmp
xlat
jb
cmpsb
ret
es
out
xlat
jno
ficoml
mov
or
dec
dec
jp
test
dec
xchg
movsb
jecxz
xor
dec
dec
jmp
sub
mov
push
lret
push
sbb
test
cmp
test
loopne
inc
and
and
test
lock
fwait
inc
loopne
inc
hlt
lahf
inc
lods
lahf
dec
mov
cmp
push
dec
xchg
test
ret
lods
inc
xlat
and
aaa
jecxz
push
testl
pop
imul
in
sub
and
mov
dec
imul
repnz
mov
ss
sub
sbb
push
in
dec
insl
push
mov
mov
in
and
adc
jae
pop
sub
pop
mov
shr
fdivrs
and
pop
xchg
xchg
mov
mov
fst
add
inc
stos
cmp
fadds
xchg
ljmp
or
cmp
in
jmp
sbb
mov
fxam
adc
adc
mov
or
inc
rcrb
sbb
das
out
push
ret
adc
aaa
ret
out
std
inc
adc
je
mov
xrelease
cmp
or
fsubr
cmp
xchg
pop
dec
add
adc
mov
insb
xchg
ja
repz
xor
adc
ret
std
in
or
jg
push
bound
xor
mov
mov
or
adcl
test
jmp
pop
outsl
andl
imul
repnz
cld
pushl
jp
fisubrs
out
jge
movsb
pop
lea
cwtl
sub
cmp
rcll
outsb
push
out
lret
add
pop
cmc
movsb
dec
test
lcall
leave
bound
fcmovbe
adc
xchg
stos
lret
push
cmc
jmp
jl
xchg
xchg
stc
addr16
mov
ljmp
orb
pop
pop
movsb
xchg
add
fsubrs
jge
ret
mov
pusha
lea
pop
bnd
mov
cmpsl
jp
lahf
fcompl
js
jge
loope
in
adc
xor
adc
pop
imul
adc
out
pop
cltd
lods
loopne
and
inc
mov
or
mov
mov
jge
in
in
sbb
dec
jecxz
cld
repnz
dec
fisubs
adc
xchg
jo
and
cmc
jo
or
out
xor
scas
mov
loopne
lds
or
mov
mull
hlt
mov
into
cmp
les
clc
cmp
inc
jno
cmp
jp
scas
test
filds
xchg
dec
mov
xchg
jp
jae
sbb
adc
mov
mov
iret
and
movsl
clc
jmp
stc
js
test
fwait
in
les
in
mov
or
cwtl
sti
bnd
enter
sbb
adc
xor
out
andb
and
cmp
jne
inc
sub
sub
xchg
sub
sbb
sbb
xchg
sbb
and
cmp
cld
mov
popf
ss
sub
arpl
sbb
gs
add
inc
sub
jl
test
sub
adc
cmp
and
or
mov
adc
js
dec
cwtl
mov
sub
cmp
loopne
inc
inc
fstps
or
add
xorl
int3
xchg
or
and
inc
in
and
out
in
data16
push
or
mov
and
mov
dec
jl
and
push
inc
fs
push
jb
jae
popf
xchg
idivb
cltd
lea
push
add
nop
dec
mov
push
lcall
and
add
shlb
dec
or
incl
push
bound
mov
inc
insb
lcall
lock
pushf
push
ret
frstor
mov
popa
and
and
imul
insl
add
scas
push
es
jne
and
and
xor
and
and
sbb
xorb
mov
rclb
mov
dec
inc
arpl
cmp
add
sbb
outsb
jnp
jb
xchg
in
dec
test
pop
add
std
rorb
xchg
lret
aaa
xchg
cmp
or
and
and
and
fistpl
dec
fdivl
imul
lea
adc
int3
cmp
dec
repnz
inc
lea
jg
pop
rorb
xchg
xor
dec
lock
addl
adc
mov
fcoms
sbb
ficoml
fmuls
lds
or
insl
cli
rcrl
movsl
rcr
gs
lea
nop
cmp
je
insb
xor
ss
or
add
xchg
inc
test
stos
enter
sbb
movsl
or
jno
sbb
dec
mov
roll
push
in
dec
sub
and
sbb
jno
sahf
mov
push
ret
sbb
dec
mov
cmp
repz
push
pop
lret
pop
or
aam
and
adc
cmp
mov
addr16
push
rclb
mov
mov
lcall
pop
icebp
xchg
lcall
test
dec
popa
int3
or
mov
cmovo
xlat
dec
outsb
addr16
push
test
and
and
cmp
inc
dec
ja
lret
mov
push
xchg
and
int3
adc
cmp
sub
dec
sub
loop
inc
rclb
sub
add
nop
sbb
inc
es
enter
invd
hlt
lcall
dec
lods
xchg
sub
ja
mov
sub
call
pop
lcall
mov
xlat
inc
mov
test
bound
outsl
xchg
adc
adc
out
movsl
pop
sub
add
ds
xor
insl
add
popa
fs
outsb
sub
gs
vpmacsdql
push
mov
mov
xchg
push
jb
imul
and
movsb
add
xchg
mov
imul
test
dec
sub
repz
gs
push
and
pop
into
mov
scas
in
add
jae
shrl
sbb
loop
push
aam
push
add
add
aam
int3
jecxz
pusha
mov
imul
xor
mov
xor
pushf
pushf
orl
xor
insl
outsb
push
inc
adc
fadds
call
jmp
movsl
es
xlat
dec
lock
lods
and
cmpsb
mov
xlat
xchg
outsl
mov
inc
int
dec
inc
lock
and
cs
repnz
cltd
mov
sarb
inc
push
fbstp
and
pop
and
cmp
inc
js
je
push
mov
je
lods
and
jns
sbb
loopne
dec
stc
cmp
or
dec
or
jnp
or
and
or
sbb
inc
shlb
xchg
sbb
inc
push
jle
mov
fcomps
in
sub
dec
loopne
dec
stc
inc
rorl
mov
mov
and
pushf
ljmp
xchg
in
adc
out
and
push
xchg
inc
movsl
inc
push
pop
dec
rorl
inc
or
cmp
dec
inc
cmpsl
hlt
mov
sbb
or
or
jo
out
sbb
sub
sbbb
or
in
sbb
and
or
xor
xchg
or
xor
and
loop
mov
arpl
fsub
pusha
cmpl
in
adc
xor
in
adc
or
insb
fadds
les
pop
mov
test
aam
dec
psllq
insl
outsl
cld
mov
jae
inc
pop
jns
or
and
add
repz
repnz
mov
movsl
adc
mov
xor
pop
pushf
and
in
movsb
and
dec
sahf
in
and
dec
inc
jnp
inc
xor
and
dec
sbb
loope
inc
icebp
insb
jo
xchg
sbb
aam
or
or
xchg
sbb
and
push
gs
insl
pop
dec
test
mov
lea
inc
inc
jns
mull
or
sub
inc
cmp
or
clc
inc
inc
dec
scas
test
aaa
push
mov
adc
push
or
sti
xor
cmp
jae
nop
incl
rcr
or
insl
js
mov
xlat
adc
and
call
sbb
jmp
adc
iret
enter
inc
push
in
pop
in
mov
push
adc
scas
and
push
inc
sbb
sbb
enter
adc
jns
shll
and
das
test
push
mov
repnz
and
and
and
daa
test
shl
sub
sub
cmp
and
sub
mov
mov
mov
stc
sub
stos
scas
movsb
mov
mov
xchg
imul
inc
rorl
js
das
orb
and
xlat
sbb
inc
lret
shld
mov
push
ficoms
scas
push
or
mov
fsubs
insb
sbb
pop
inc
cs
sub
ret
dec
sbb
cmp
pusha
test
dec
ja
call
movzwl
cmp
arpl
aaa
xor
or
movsl
nop
add
lret
je
int3
and
push
call
and
sub
dec
mov
and
insb
add
pop
jns
dec
sub
mov
jecxz
xor
dec
rorl
adc
adc
int3
test
adc
mov
fstl
adc
loopne
pop
adc
dec
xor
push
adc
testl
lods
fsubrs
mov
mov
repnz
dec
mov
dec
lock
add
or
push
or
lds
mov
mov
loope
adc
dec
aas
shll
je
adc
adc
add
jmp
lock
subl
stc
push
xchg
iret
call
adc
or
dec
vpmulhuw
mov
add
cmp
ror
push
mov
push
inc
arpl
adc
in
cmp
cld
pop
xchg
and
dec
xor
push
adc
fs
push
cmp
mov
push
add
outsl
jne
xchg
test
sahf
iret
shrl
xchg
imul
enter
lods
repnz
or
sub
mov
push
nop
sub
mov
repnz
fs
enter
daa
adcb
stc
cs
push
or
js
xchg
repnz
mov
cmpsl
pop
add
pusha
mov
fcomps
xchg
xchg
fcom
sbb
adc
lods
sbb
lods
or
mov
ret
sub
fisubs
int3
push
dec
mov
jl
stos
pop
or
or
pop
inc
push
test
adc
mov
test
movsb
jo
sahf
ds
call
pop
cmp
in
xchg
nop
and
pop
xchg
adc
xor
dec
inc
and
sbb
xor
hlt
cmp
sbb
cmp
out
mov
lods
loope
push
push
xor
fs
or
inc
jge
js
adc
pusha
xor
lods
adc
sti
dec
iret
adc
mov
sbb
and
fstl
sbb
jl
dec
and
aas
or
sub
sub
inc
mov
shll
sbb
pop
pop
push
cltd
in
or
mov
adc
adc
sub
imul
pop
or
pop
push
inc
mov
adc
mov
jb
sub
sbb
jle
or
iret
aam
or
cmp
sub
imul
and
test
cld
jp
mov
cs
jl
pop
cli
dec
aas
lock
les
rorb
mov
xor
add
sbb
fldcw
jns
or
cmp
bnd
jle
and
mov
leave
and
sarb
jns
or
sub
out
lods
lea
dec
fstps
mov
pop
or
sbb
pop
dec
sbb
sub
ds
mov
push
xchg
sub
pop
sub
and
jmp
or
mov
jle
das
in
xor
pop
mov
pop
xchg
xor
movsb
jl
lahf
movsb
in
push
lea
les
sbb
fcom
xchg
insl
jnp
xor
jne
testb
or
mov
movsl
andl
jne
adc
xchg
es
outsl
loop
adc
aaa
cmp
add
movsl
pusha
cmc
adc
in
adc
push
mov
mov
ret
jle
or
lcall
ss
add
in
xchg
sbb
xchg
add
mov
push
push
sub
test
stos
cmp
and
dec
mov
xor
rolb
cmp
fadds
xchg
mov
mov
adc
aad
mov
in
loop
cmp
ds
dec
or
xchg
hlt
scas
mov
imul
jns
cmpsl
test
sbb
mov
sub
sub
or
mov
mov
or
lods
xchg
dec
ds
mov
daa
mov
cli
les
push
int3
pop
adc
mov
daa
nop
movsl
cmpsl
sbb
sub
mov
inc
lock
sbb
sub
inc
fcmovne
sbb
mov
fisttps
add
sbb
sub
out
cmp
mov
jo
push
xchg
sbb
push
push
push
inc
cmpsb
cld
test
jmp
in
or
aam
sbb
pop
inc
popf
enter
or
sbb
xor
mov
mov
ja
in
addr16
add
mov
cmp
or
mov
pop
cmp
sub
test
clc
hlt
shll
imul
mov
jp
and
lret
ficomps
cs
add
pop
fcmovbe
nop
mov
dec
mov
cmpb
or
stc
nop
dec
je
pop
cwtl
shlb
out
sbb
rcrb
mov
movsl
inc
lret
mov
adc
push
add
sbb
jo
or
inc
inc
push
loop
mov
adc
pop
xor
in
xchg
clc
pop
fisttpl
pop
clc
pop
es
mov
adc
add
jg
in
pop
pop
or
inc
xchg
or
or
sbb
jnp
or
lea
mov
lret
cli
mov
scas
push
inc
test
adcb
cmp
xchg
out
dec
cmp
out
or
inc
lea
mov
push
aam
inc
fcomps
loopne
repz
adc
add
movsb
and
inc
adc
xor
repnz
or
cmp
push
popa
popa
xchg
xchg
cmp
outsb
jno
scas
nop
rorb
jmp
fxch
or
and
inc
push
or
dec
sbb
rorl
enter
inc
icebp
scas
mov
or
dec
loope
inc
sbb
jns
or
jp
lea
cli
adc
shrb
adc
daa
and
inc
das
dec
mov
jg
int
adc
inc
test
push
lds
xor
cmp
and
es
ret
push
and
adc
sahf
adc
pusha
loopne
cmpsb
or
cli
es
hlt
mov
inc
xchg
pop
jmp
cmp
in
loop
movsb
stos
call
pop
orl
sbb
pop
sbb
mov
and
xlat
sbb
movsl
jmp
data16
lods
std
lahf
js
and
inc
and
xlat
and
or
push
test
mov
roll
loope
shrb
push
cli
push
xlat
push
and
sub
fs
loope
repnz
push
dec
imul
insb
in
movsl
movsl
jbe
stos
add
pop
or
lret
mov
and
pusha
jmp
add
jl
cmp
xor
lds
lahf
mov
stos
out
sub
inc
sub
dec
xor
imul
push
mov
mov
xlat
mov
je
xchg
push
adc
cmp
adc
xor
mov
dec
or
inc
and
insb
push
outsl
dec
cmp
mov
xor
or
mov
pop
cmp
push
jmp
movsl
aas
pop
sbb
outsl
adc
call
pop
clc
pop
cmp
mov
popa
pop
inc
and
pop
xor
cmp
fcomps
and
stc
movsl
or
dec
and
dec
xchg
cltd
xor
sub
mov
jnp
xchg
xor
xchg
push
push
jnp
sbb
sub
idivb
jp
pushf
inc
xor
cmc
mov
nop
and
sbb
cmpsl
mov
mov
adc
out
xlat
push
std
xor
movsl
or
pop
insl
pop
rcll
dec
cmp
or
mov
and
iret
pop
dec
std
mov
sub
jae
imulb
pop
push
pop
inc
sub
sti
xor
loope
sub
mov
mov
hlt
cli
fnstenv
or
adc
add
sub
or
mov
sbb
pop
add
jnp
ds
jb
sbb
data16
and
es
or
sarb
addb
jne
or
ret
push
in
mov
mov
jge
inc
adc
add
lds
inc
or
xor
sub
lds
mov
cld
pop
rclb
and
mov
mov
sbbl
inc
cmp
shlb
sbb
adc
sub
sub
daa
and
dec
fldl2e
mov
dec
mov
inc
xor
dec
jnp
xor
test
data16
cld
dec
es
push
dec
or
sub
cmp
jg
adc
mov
int
dec
pop
jmp
sub
fnstenv
dec
ss
sub
and
sbb
mov
cld
ss
idivl
enter
test
xor
stos
fisubl
pop
stos
insb
adc
movsl
stos
or
inc
xchg
push
lea
sub
punpckldq
push
add
aaa
movsl
rol
fldl
fs
adc
inc
and
jg
ds
pusha
xor
adc
cmp
test
in
outsl
fisubs
jmp
and
jmp
adc
mov
iret
dec
cli
int3
std
imul
add
mov
mov
mov
jle
xchg
data16
inc
lcall
dec
fldt
loopne
and
sub
or
aad
les
push
xchg
push
sub
leave
mov
inc
push
cmp
pop
cs
pop
push
xor
dec
jnp
or
lea
pop
sub
jecxz
les
les
enter
cmp
out
lods
adc
mov
push
push
enter
imul
fnsave
and
and
scas
mov
pop
jle
pop
mov
clc
mov
dec
xchg
or
nop
imul
jl
ljmp
pop
xchg
cmp
jmp
fnop
inc
dec
sub
adc
dec
lock
or
jns
adc
popa
sbb
rcrl
cld
push
fsubs
inc
hlt
sub
gs
stc
dec
fdivr
and
mov
mov
sti
lcall
or
add
sbb
add
or
or
mov
fcom
enter
sbb
add
or
sbb
and
in
std
add
add
fwait
es
int3
cmp
loope
add
les
aam
mov
jnp
iret
xor
enter
and
inc
rcl
sbb
fs
jmp
andb
push
mov
sub
push
add
push
dec
push
sub
bound
mov
mov
cmp
pop
leave
push
hlt
les
fcomp
lahf
fsubl
imull
lods
dec
cmc
cmp
lahf
lahf
inc
mov
pop
jmp
incb
movsl
xor
bound
xchg
loope
and
push
inc
popa
mov
daa
nop
mov
dec
fsubrl
pop
add
adc
inc
out
pop
sub
xor
dec
fs
dec
push
test
mov
dec
out
push
mov
lock
sbb
sbb
aam
jle
sbb
cmp
or
pushf
lock
xchg
dec
mov
jbe
lea
hlt
cs
dec
ds
ds
sub
sahf
in
push
mov
icebp
add
xor
pop
jmp
mov
enter
jo
xchg
repnz
out
test
mov
cmpsl
push
push
mov
cmp
or
mov
rorl
aas
popf
dec
add
cli
aas
inc
dec
enter
fs
cmp
mov
arpl
decb
mov
jl
pusha
xchg
aas
xchg
in
aam
lods
inc
adc
cltd
sbb
daa
lock
fcmovnb
shr
cmc
and
add
dec
dec
out
mov
add
arpl
pop
shlb
cmp
dec
or
loop
mov
push
push
inc
in
sub
adc
inc
in
icebp
test
and
cmp
jno
cltd
ja
or
nop
cmp
cmp
push
lock
int3
sbb
or
clc
sbb
mov
inc
enter
and
dec
dec
test
or
mov
add
xor
and
xor
rolb
pop
xchg
adc
sub
inc
enter
pop
scas
xor
les
fsubl
das
rorb
out
es
pop
mov
daa
test
xor
sbb
xor
je
inc
push
insb
pop
or
pop
fs
addr16
and
or
mov
mov
mov
fs
adc
adc
inc
out
gs
test
cwtl
or
test
in
loope
inc
push
xor
std
pushf
or
or
pop
add
cmovbe
fcoms
sbbl
dec
bound
sbb
push
pop
mov
inc
cmp
outsb
hlt
and
pop
sbb
add
pop
pop
repnz
dec
clc
pushl
dec
or
or
mov
test
inc
inc
lods
adc
xor
test
cwtl
inc
and
cmp
scas
jo
adc
pop
adc
jb
push
mov
push
adc
negl
stc
mov
push
loope
pop
mov
mov
loopne
adc
adc
lock
adc
lock
mov
jo
fistpl
adc
adc
outsl
pop
std
movsb
sub
sub
ficompl
push
cmpsl
pop
cwtl
and
push
fs
and
pusha
mov
outsl
cwtl
and
xchg
pop
adc
cmpsl
mov
xchg
mov
rorl
jae
ds
ror
push
adc
inc
pop
mov
dec
sbb
in
adc
push
inc
jne
xor
and
out
inc
and
lods
lds
scas
adc
fstl
push
xchg
mov
mov
out
imul
or
sub
xlat
call
daa
sub
cs
mov
into
outsb
rolb
push
mov
add
dec
jp
cs
xor
xor
xchg
enter
xor
inc
dec
inc
imul
pop
and
push
ja
adc
dec
fsubl
mov
lret
ss
push
nop
aaa
mov
cmp
pop
mov
or
cs
aas
stc
add
mov
adc
cli
cs
out
aas
jg
inc
lds
jg
in
xchg
and
fucomp
jnp
testl
sbbb
add
add
inc
mov
std
cltd
mov
pop
cmp
in
sbb
inc
and
test
jbe
aam
mov
adc
mov
push
add
addr16
add
inc
rclb
cwtl
aam
xchg
test
pop
add
lahf
add
movl
aam
dec
push
adc
sbb
inc
cli
test
pop
mov
mov
lds
mov
mov
sub
cmp
jmp
clc
imul
ja
push
adcl
loop
xor
es
inc
xchg
xor
out
and
adcl
loopne
arpl
jle
fcomip
jl
icebp
sub
or
sbb
cli
add
sub
imul
sbb
push
ret
push
xchg
xchg
push
enter
inc
loope
mov
bound
test
lds
mov
cmp
or
sti
decl
push
adc
aad
movsb
push
push
inc
mov
and
push
hlt
add
lods
aaa
mov
cmc
ret
mov
mov
iret
inc
fdivp
dec
stc
dec
adc
push
negl
mov
mov
sbb
cvtps2pd
fdivs
mov
lret
jl
inc
push
push
out
mov
fcom
aam
test
push
cmpsl
pushf
pop
pop
gs
jae
push
or
sbb
cmp
gs
dec
dec
or
xchg
inc
mov
lret
adc
or
inc
xor
jb
je
adc
cmp
xor
xchg
push
push
or
test
push
rorl
adc
adc
hlt
push
dec
jp
stos
adc
in
rclb
insb
dec
sub
mov
or
mov
adc
inc
popa
movsl
add
xor
or
jne
mov
xor
adc
or
pop
and
dec
push
xchg
add
cmp
adc
cld
lds
clc
dec
or
and
jmp
push
pusha
and
or
and
mov
dec
push
insb
pop
and
imul
testl
movsb
mov
das
jns
xchg
and
rol
push
pusha
imul
fstl
pop
les
and
jnp
les
ficoml
les
mov
das
jmp
cmp
sti
dec
gs
fsubrs
or
xlat
jmp
cli
xlat
xlat
into
loope
pop
push
or
stc
mov
push
xor
mov
sbb
mov
mov
mov
mov
jl
sbb
enter
ficoml
sub
rolb
rclb
pusha
sub
test
fsubrl
fisttps
mov
dec
sti
sahf
mov
mov
or
jmp
xchg
jo
je
inc
pop
mov
fwait
mov
adc
sbb
cmp
xchg
fdivs
fadd
in
mov
and
bound
fidivrl
and
pop
or
les
inc
les
dec
lds
mov
jg
int
cs
insb
pop
aad
sub
movsb
lret
cmp
cwtl
and
inc
pop
mov
loop
pop
add
and
pushf
mov
dec
icebp
cmp
insb
loope
and
jecxz
ret
dec
push
pop
clc
in
inc
call
inc
pushf
nop
mov
mov
xor
ret
or
test
shrb
push
mov
add
mov
and
pop
push
int3
push
xor
popa
or
xor
mov
fadds
or
insl
nop
adc
pop
cmovs
xchg
mov
xchg
mov
jae
or
das
sub
xor
pop
mov
push
pop
jecxz
cmp
aam
in
mov
pop
call
dec
in
and
pushf
add
inc
push
cmp
gs
inc
popa
dec
lds
add
push
pop
mov
adc
imul
call
dec
fsubr
and
fbld
in
push
dec
clc
stos
mov
repnz
pop
test
imul
xchg
ljmp
mov
dec
fldz
xor
movsb
sti
pop
test
mov
mov
fadds
mov
add
mov
lea
jg
mov
test
rolb
je
aad
dec
test
dec
hlt
jmp
aaa
js
dec
mov
jmp
add
call
sahf
push
pop
adc
adc
aas
mov
in
and
fadd
in
ss
cld
fdivl
and
jg
arpl
andb
mov
jo
pop
je
arpl
aam
sub
mov
sahf
add
cmp
in
push
cmc
rolb
repz
cmp
cmp
test
insb
dec
ljmp
or
cmpsb
pop
adc
pop
pop
sub
fsubs
jmp
es
jns
mov
sbb
cmc
mov
pop
xchg
adc
push
loop
jne
inc
xor
decl
insb
stos
mov
enter
mov
shlb
sbb
je
sub
pop
dec
aam
cmpsl
push
orb
ss
or
adc
or
add
push
fld
mov
mov
hlt
test
mov
push
jg
mov
pop
mov
clc
hlt
mov
jmp
das
lea
ljmp
in
and
inc
sbb
xor
adc
loopne
ret
xchg
adc
push
jge
mov
or
jmp
sbb
sub
xor
sbb
pop
movsl
pop
test
in
outsl
sub
je
mov
rorl
rclb
scas
mov
out
xchg
push
xor
dec
pop
andl
pop
sbb
add
clc
test
scas
or
and
inc
and
shll
mov
jne
xchg
insl
and
enter
in
leave
mov
mov
sbb
dec
test
sub
jp
je
stos
pusha
sub
arpl
cli
popaw
inc
push
jp
pop
outsl
pop
push
jmp
bound
push
push
fisttps
mov
test
adc
cltd
sbb
jle
and
call
inc
mov
repnz
cmp
cld
scas
lret
and
popf
mov
jno
mov
test
adc
mov
stos
push
sbb
or
sbb
mov
mov
fs
test
test
mov
hlt
dec
cmp
stc
mov
scas
shl
sub
mov
adc
push
gs
ja
push
aas
imul
cmp
sbb
pop
and
xor
mov
ljmp
mov
ja
movsb
mov
outsb
repz
aam
mov
mov
dec
in
add
cmpsl
sub
jg
cmp
or
add
mov
lods
push
sbb
inc
cmp
xchg
sbb
and
sub
and
stos
mov
xlat
jmp
or
and
pop
cmc
iret
out
jns
push
jle
lea
jge
inc
in
xchg
into
sub
mov
fists
cltd
in
mov
xor
hlt
inc
push
push
in
loope
dec
add
xchg
cli
mov
into
xor
rolb
adc
jge
lcall
cltd
sti
push
push
push
push
in
cwtl
sub
pop
ret
repz
and
cmp
cmp
adc
sbb
dec
or
sbb
push
sbb
ja
daa
stos
and
xchg
inc
pop
sti
adc
mov
sub
sub
aad
adcl
sub
fs
sti
xor
push
adc
mov
and
in
and
sub
scas
push
jnp
add
push
push
stos
sbb
es
or
push
inc
stos
cmc
mov
jne
mov
mov
jg
aam
les
cmpsl
and
orl
sub
repz
and
cmp
mov
adc
xchg
inc
gs
jb
gs
scas
nop
cmp
adc
cmp
je
push
push
pop
test
imul
push
sbb
enter
jnp
or
gs
mov
scas
push
loope
adc
in
pop
call
mov
nop
mov
jg
pop
out
jle
fs
gs
jbe
call
sbb
loopne
jmp
lahf
jo
pop
mov
mov
sub
pop
inc
jle
aad
mov
mov
rcl
in
dec
and
pop
pop
repz
cmpsl
push
cs
push
mul
sub
mov
movl
and
js
cmpl
cmp
push
jp
fisubl
out
sub
jle
pop
jne
sub
inc
xorl
pop
lds
cmpsb
in
adc
adc
mov
loopne
mov
das
iret
popa
pop
pushf
movb
cmpl
movsb
pop
lods
mov
sbb
psubsw
pop
xchg
mov
jnp
repnz
sbb
movb
pop
dec
ja
popf
lahf
sbb
push
int3
js
xchg
adc
call
xor
mov
jne
jg
pop
or
jbe
addr16
xor
jle
mov
daa
mov
cmpl
daa
jne
sbb
clc
mov
jnp
mov
sub
jne
push
push
adc
test
push
hlt
xchg
and
or
cltd
dec
cmp
sub
adc
xor
iret
int3
mov
mov
push
gs
sarb
mov
dec
pop
scas
and
mov
sub
rolb
sub
ljmp
fidivrl
pop
pop
stc
mov
push
mov
in
mov
mov
push
mov
cwtl
ss
std
sub
pop
pop
or
xor
xor
ret
mov
stos
dec
mov
mov
xor
dec
jne
scas
pop
or
dec
xchg
jne
ret
push
add
push
sbb
jl
testl
dec
or
scas
pop
push
push
add
or
jne
sbbl
xchg
in
mov
push
add
imul
or
xchg
cli
mov
mov
cld
mov
movsb
xchg
dec
imul
js
jo
push
lcall
insb
pop
mov
movsl
orl
js
jae
cs
dec
adc
cmc
mov
out
inc
and
and
xor
sbb
sub
mov
shlb
push
cmp
sbb
call
shlb
sub
aam
adc
test
loopne
cmp
shlb
jno
xchg
ret
mov
mov
repnz
adc
in
xchg
sbb
or
fdivrs
in
aad
imul
xor
jge
pusha
cmp
mov
push
or
push
pushf
or
inc
mov
insl
shll
add
mov
leave
mov
movsb
or
or
xchg
stos
ret
push
mov
std
loop
je
inc
add
sub
fisubl
enter
cmpsl
sbb
and
mov
cwtl
jecxz
dec
xchg
push
and
test
shl
mov
push
orl
xor
adc
std
sbb
cmp
pop
gs
cmpsb
jne
add
mov
xchg
jnp
inc
mov
popf
shlb
movzwl
lods
rcrb
rcl
cmpsl
loope
aad
cmc
repz
out
xor
movb
push
call
ret
jne
add
jmp
push
jnp
and
jge
mov
je
lods
and
dec
jne
push
mov
test
mov
inc
mov
pop
nop
cmpsl
add
cmp
jg
or
fs
sbb
sbb
ss
es
sbb
or
add
sub
jb
fyl2xp1
fstps
fstps
xchg
jmp
push
hlt
in
outsl
and
mov
sub
repnz
ss
or
ljmp
fstl
stc
ret
int3
pop
testb
jmp
je
push
adc
mov
jge
xchg
pushl
rol
and
nop
inc
and
push
cmc
call
addb
push
addb
push
loopne
js
sbb
push
or
pop
pop
mov
test
mov
push
orb
cmc
adc
sub
lcall
shll
xchg
mov
jns
cmp
jl
arpl
pop
es
adc
sub
dec
repnz
adc
sti
testl
in
lods
adc
xor
out
or
mov
subl
enter
pop
stc
push
cltd
mov
loop
sarb
sti
add
ss
push
mov
add
clc
add
sub
sub
or
add
or
xchg
dec
rcrb
mov
add
and
dec
inc
cmp
jle
xchg
in
mov
std
aad
pop
gs
sub
cmpsb
push
mov
xchg
mov
jno
jb
mov
sbb
fidivs
pushl
or
jno
push
pop
scas
xor
and
lret
mov
shl
scas
cltd
stos
sub
xchg
pop
pop
and
cmp
jg
fsubr
pop
sbb
sub
mov
data16
repz
adc
icebp
outsb
push
pushf
stos
jecxz
sub
add
xor
leave
imul
dec
dec
int3
adc
cmp
xor
sub
and
adc
dec
lret
test
inc
or
cmc
lret
push
test
sbb
movups
mov
push
inc
push
dec
pop
sub
push
imull
and
outsl
push
xchg
push
les
pop
hlt
mov
in
int3
or
shlb
dec
mov
enter
add
push
repnz
loop
xrelease
jnp
push
fcoms
or
cmp
jbe
sti
sbb
cs
push
sub
repz
jne
push
cld
cmp
imul
cmp
push
jns
arpl
pop
je
push
dec
out
xor
inc
sub
jg
fs
sub
and
ds
adc
cs
and
data16
mov
and
jmp
aas
xchg
push
and
fdivr
mov
push
mov
and
push
jne
shrb
js
or
or
cmp
sti
mov
mov
pusha
cwtl
add
pusha
ljmp
test
push
ds
jo
and
in
push
lods
inc
andl
ja
or
mov
addr16
outsb
jns
cwtl
xor
jnp
add
push
movsb
pcmpeqb
test
add
das
stos
bound
pop
push
fdivrl
and
dec
inc
in
mov
adc
and
ja
inc
or
les
xor
fwait
dec
mov
xor
and
xor
daa
sbb
gs
jnp
sbb
xor
popf
lods
imul
cmp
or
in
je
mov
enter
imul
lock
push
push
test
or
lods
jle
pushf
mov
notb
inc
pop
cmp
sub
push
sub
dec
jmp
cs
pop
xchg
lret
movsl
movsb
les
jns
xor
push
inc
lcall
sbb
mov
jne
sub
cwtl
and
xchg
cmpsb
repnz
pushf
mov
mov
push
aam
adc
cld
sub
jns
xor
jecxz
cmpsl
lret
cld
lret
out
push
idivl
sbb
xchg
sub
in
sti
mov
jns
insb
lods
jne
mov
inc
pop
enter
rol
sbb
push
lea
xor
push
pop
inc
fsubl
and
cmp
stos
cltd
pop
call
aas
les
test
ss
adc
adc
dec
scas
push
int3
sub
ficompl
jnp
sbb
or
cmpb
bound
testb
sbb
std
or
or
or
jle
pop
or
jns
cmpl
test
icebp
loope
dec
push
mov
add
adc
or
jne
xor
mov
adc
insb
or
repnz
daa
mov
aas
pop
fwait
mov
jne
push
fs
pusha
ret
xchg
lods
hlt
sbb
xor
imul
inc
jne
pushl
hlt
push
call
pop
iret
sbb
pop
or
jnp
jl
mov
popf
sbb
out
mov
cs
mov
xor
push
imul
je
dec
subl
subb
test
hlt
idivl
jmp
enter
push
fs
sbb
mov
cmc
incl
mov
imul
adc
jg
add
push
adc
rorb
add
mov
mov
adc
and
jo
lods
jg
enter
enter
xor
or
setne
mov
jg
inc
out
bound
mov
pop
inc
sub
cmp
mov
js
ficoml
push
cmp
jg
mov
inc
add
mov
xor
jecxz
mov
in
repnz
repnz
test
xchg
outsl
lock
movb
add
push
in
add
addl
mov
call
test
arpl
fdivrl
lds
xlat
cli
decl
xor
dec
lret
leave
popw
dec
fldcw
ljmp
adc
dec
sub
push
sub
jle
into
mov
dec
or
sub
dec
jne
sbb
mov
jmp
and
inc
insl
ret
push
sahf
or
add
sbb
jbe
add
dec
mov
pop
out
inc
fs
sub
xor
jge
mov
outsl
mov
push
mov
dec
pop
mov
and
fstl
or
ret
dec
jns
push
sub
dec
mov
test
cmp
adcl
popf
push
push
mov
pusha
mov
lock
out
or
cwtl
push
or
orl
sub
fcmovne
sbb
and
mov
mov
mov
xchg
inc
push
push
dec
cmpsb
lock
xchg
fisubs
lds
cwtl
lret
inc
xor
sbb
faddl
or
or
pop
lcall
push
push
fcmovu
rcl
cld
or
jns
pop
xor
pop
mov
scas
rorl
jnp
inc
fisubs
bound
push
add
movl
rolb
jnp
sti
mov
mov
and
push
dec
rcrb
sub
jne
push
icebp
fisubrs
xchg
push
mov
adc
add
js
jg
adc
cmp
sbb
cli
icebp
xchg
fildl
lret
add
bound
jnp
imul
sbb
cld
mov
movsl
or
add
sbb
mov
pop
sbb
sbb
int
lcall
adc
jle
or
mov
mov
fimull
sbb
jmp
cmp
bnd
jmp
add
mov
mov
sub
rolb
in
adc
mov
ret
or
ljmp
gs
inc
addl
jo
mov
addl
or
xor
jg
repz
sub
adc
lret
cmpsb
dec
sar
test
mov
fnstenv
imul
jbe
push
mov
inc
mov
fisubrs
cmp
dec
stos
jp
jmp
dec
pop
stc
popa
xor
mov
or
test
jecxz
cltd
into
add
or
push
enter
cmp
bound
add
je
pop
jecxz
out
xchg
sti
inc
mov
mov
pop
push
stos
fdivrs
cmp
pusha
sbb
mov
push
or
adc
cmp
inc
movsl
jne
popf
push
dec
nop
adc
lcall
xchg
clc
in
int
or
ret
mov
cmp
fdivrs
test
cmp
jmp
or
jo
hlt
mov
orl
popf
xchg
in
mov
adc
or
aam
jge
jl
cld
int
repz
mov
mov
jl
inc
or
mov
and
fucomp
icebp
pop
xchg
cli
pusha
jb
les
mov
push
cltd
pop
adc
jns
push
fcoml
loopne
in
cmp
test
out
xchg
arpl
bound
vaddsubps
outsb
jns
mov
aas
leave
xchg
add
push
scas
or
push
inc
test
xchg
jmp
fs
push
dec
test
push
mov
fnsave
sbb
sub
add
lods
aad
mov
add
inc
sub
dec
sbb
test
dec
out
call
stos
dec
sti
stos
aam
sub
sti
fidivrl
in
fdivs
push
mov
mov
std
mov
call
shlb
mov
or
push
or
dec
sbb
xor
fs
mov
andl
repz
popf
test
sbb
push
jmp
jl
mov
push
sahf
fcoms
xchg
loopne
insb
mov
inc
sbb
je
ja
ret
inc
push
jne
and
div
jp
or
adc
aas
addr16
jp
cmpsl
loop
pop
repz
inc
xchg
adc
jg
lcall
call
pop
cld
push
nop
test
call
orb
sub
push
mov
aad
dec
jnp
add
ja
repnz
sub
inc
mov
push
adc
ljmp
mov
and
ljmp
stos
je
test
addb
out
jmp
movb
and
adc
add
arpl
jne
pop
inc
stos
push
shll
mov
xorb
fmuls
js
xchg
or
fwait
and
jb
mov
jb
and
pop
daa
icebp
in
sar
ljmp
shl
and
push
mov
jne
push
and
xlat
jns
or
sbb
enter
mov
rcr
dec
adc
cmpl
fs
nop
mov
xchg
test
int3
push
and
push
test
lahf
andl
cld
in
mov
adc
adc
push
ret
or
push
loope
gs
leave
subb
mov
lods
mov
cltd
sbb
jmp
xchg
icebp
inc
je
pusha
bound
mov
mov
and
pop
lods
cld
aam
sbb
lret
andl
test
test
jo
cmp
mov
xchg
cmp
sub
mov
inc
cmp
pop
sbb
jo
dec
mov
shr
or
sub
cmp
into
sbb
enter
jo
inc
ljmp
inc
jo
inc
xchg
outsl
dec
adc
enter
fs
fs
loopne
pushf
pop
movsl
sbb
inc
add
sub
cwtl
repnz
jns
and
adc
movsl
daa
into
cmc
and
mov
loopne
mov
xor
jbe
pop
mov
mov
clc
add
add
mov
xor
mov
cmpsl
test
sub
fidivl
in
adc
mov
mov
mov
ljmp
pop
cli
into
pop
pop
jg
mov
je
push
push
cmp
xchg
mul
in
jmp
aas
test
cld
inc
nop
inc
or
xor
sbb
cmp
dec
pop
and
and
lea
cli
js
xor
sub
lahf
fcmovne
fs
stc
in
std
cmp
inc
mov
inc
and
xor
movsl
scas
into
xchg
addr16
aam
inc
jmp
cli
sti
pop
je
out
mov
jge
mov
int3
into
jnp
int
inc
inc
mov
mov
push
inc
push
cld
xor
cli
sub
mov
push
bound
adc
add
outsl
push
daa
pop
aaa
sub
outsl
mov
pop
adc
insl
subb
or
mov
pop
push
push
jno
loopne
push
cmp
rorl
jp
push
mov
cmp
xor
daa
inc
das
xor
sub
pop
add
and
cmp
mov
sbb
in
loopne
cld
pop
in
lods
xor
outsl
adc
mov
mov
push
jb
decl
lock
ror
lea
cmpsb
and
repnz
negl
push
xorl
inc
aaa
push
dec
ret
or
inc
out
mov
dec
mov
les
xchg
dec
stc
sub
and
add
or
scas
int3
mov
jb
lret
outsl
ds
cmpsl
in
add
rcll
and
jmp
inc
or
dec
mov
out
dec
cmpsl
cmpsb
jl
sbb
inc
inc
dec
outsb
add
push
add
inc
int3
pop
andl
sub
dec
adc
sbb
or
mov
and
xchg
fsts
test
or
push
mov
add
push
cmp
je
or
aad
add
aad
loop
cwtl
xchg
cmpl
jge
jno
and
jecxz
cmp
je
sbb
dec
cmp
ret
lods
and
add
ret
push
and
cmp
sub
or
or
add
xor
cmp
aas
xor
sub
adc
pop
adc
xchg
adc
jmp
mov
mov
mov
mov
repz
mov
or
xchg
in
mov
clc
xchg
inc
fs
xchg
mov
pop
cmp
inc
mov
shr
jo
jl
pop
adc
clc
mov
jns
adc
jl
scas
mov
test
stc
loop
dec
mov
fsts
or
push
pop
gs
mov
hlt
xchg
dec
bound
xor
dec
xchg
push
dec
cmp
dec
jecxz
fisttps
xor
push
lods
cmp
cmp
xchg
xor
cli
mov
inc
and
cmp
and
imul
jl
cmpl
lods
or
repz
adc
popa
add
and
mov
stos
adc
pop
sbb
cmp
mov
or
aaa
push
pop
lds
loopne
pop
push
cltd
into
pop
popf
pop
push
jp
dec
into
and
xor
inc
push
lods
or
push
es
inc
pop
xorb
xor
pushf
and
ret
imul
and
mov
in
movsb
xchg
insl
daa
aaa
adc
xlat
dec
bound
inc
stc
and
xadd
xchg
dec
jnp
xchg
xchg
cmp
or
xchg
lock
ret
mov
xor
testb
or
in
adc
cmpsb
sbb
jo
cmp
push
mov
ficoms
mov
mov
stos
and
xchg
inc
cmp
push
movb
jmp
jne
inc
fists
xor
cmp
pop
xchg
mov
pusha
mov
les
je
cmp
pop
nop
rcrb
test
pop
cmc
sahf
cld
xchg
cs
xor
nop
popf
pop
call
jne
pop
jns
dec
dec
pop
dec
jae
xchg
adc
dec
inc
xor
lds
mov
sub
jle
es
add
add
push
push
pop
cmp
sub
ljmp
clc
les
cmp
rcrb
jp
adc
sbb
jmp
sahf
fisubrl
push
scas
pop
push
jle
or
cmp
or
rorb
and
pop
mov
push
mov
mov
jb
fcomi
jne
and
call
and
aas
sub
enter
rcrl
xchg
xchg
pop
xor
pushf
sub
mov
lahf
adc
sub
dec
add
movl
cmp
push
dec
daa
call
adc
je
inc
pop
and
fsubrl
or
cmpsl
pop
add
mov
fwait
push
push
cwtl
lret
pop
xchg
int3
jo
and
repnz
adc
dec
push
sub
enter
pop
push
add
sbb
sbb
imul
stc
fstpl
xchg
les
aam
cld
andb
sbb
bound
pop
push
xchg
movsl
lods
mov
push
insb
lods
add
mov
pop
and
inc
bound
lret
clc
les
mov
insb
jp
mov
push
aas
adc
repnz
bound
add
inc
arpl
pop
add
sbb
mov
andl
ret
fwait
inc
nop
cmpl
movsl
fdivr
imul
push
and
stos
mov
sbb
dec
mov
or
pop
mov
add
ret
pop
sbbb
imul
shrb
out
or
mov
nop
pop
xchg
xlat
mov
mov
xchg
sub
cmovg
or
insb
xchg
shr
pusha
push
pop
pushl
test
jmp
jl
mov
xchg
es
push
pop
fs
incl
loop
adcl
lret
ja
mov
dec
mull
lea
jge
and
into
and
pop
cmp
inc
pusha
pop
jg
fmuls
mov
lock
inc
sti
std
jae
jnp
and
or
cmp
stc
ljmp
mov
cmp
sub
imul
mov
loop
cwtl
in
xchg
loope
push
push
push
sub
pop
stos
mov
hlt
cmovs
sahf
or
push
movzwl
fildll
les
mov
push
outsl
push
imul
xchg
jp
push
mov
sbb
scas
inc
daa
push
popf
or
jg
mov
xchg
push
mov
pop
out
xor
lds
push
enter
popf
xchg
sbbb
fcomps
insb
sbb
fwait
and
loopne
mov
push
aaa
ret
mov
enter
push
cmp
lods
or
adc
popa
repz
mov
or
xor
xchg
test
ss
addb
and
or
dec
sub
and
jnp
call
xchg
jne
sbb
call
movsl
jmp
in
adc
xchg
call
xchg
fcmovbe
stos
mov
sub
or
cmp
xchg
mov
das
int
ret
lret
jne
testl
push
std
sahf
or
mov
xchg
or
adc
adc
sbb
pop
cld
fsubs
or
adc
and
dec
add
lock
sub
dec
adc
cmpsl
dec
andb
ret
cld
loopne
lea
fbld
push
add
adc
shll
lahf
jmp
mov
dec
je
lods
xchg
mov
insl
xor
sub
mov
adc
mov
int3
xchg
sti
movsb
gs
mov
push
xor
or
xor
fnstcw
stc
daa
sub
jb
dec
imul
mov
sbb
dec
or
adc
mov
jns
pop
stos
addr16
lahf
jno
rclb
pop
cmp
jne
or
loope
and
inc
add
jp
mul
push
mov
xchg
fiaddl
adc
mov
sub
mulb
ds
andb
sbb
scas
out
mov
cmpb
mov
add
out
jo
cmpb
lahf
cmpsl
xchg
test
lahf
mov
out
xor
out
out
mov
mov
bound
test
mov
push
mov
xchg
pop
cld
cmp
fidivs
testb
fistl
jbe
test
jno
adc
fs
or
pop
clc
or
dec
pushf
fdiv
fdivl
lahf
mov
sarl
enter
aam
pop
and
sub
stc
ret
out
paddusb
aad
mov
std
outsb
mov
inc
ret
dec
cmp
je
jnp
jmp
or
mov
test
pop
in
icebp
xchg
dec
fs
loope
cmovnp
xlat
dec
pop
dec
test
lods
in
mov
xchg
lock
jns
sbb
js
mov
in
and
xor
jmp
in
and
push
cmp
clc
in
icebp
jg
push
push
mov
xchg
repnz
movsl
pop
add
and
cs
jle
inc
test
jmp
sbb
xchg
cltd
push
lock
or
dec
imul
push
or
cmpsb
fs
pop
jb
icebp
inc
je
or
add
xchg
or
jne
push
icebp
into
dec
jns
inc
fwait
jmp
and
cmp
mov
pop
scas
and
ja
xchg
ucomiss
xchg
mov
fst
cmp
in
or
jl
or
mov
insb
scas
jl
insl
jp
icebp
popa
lret
out
pop
xchg
add
nop
inc
pop
pop
push
sbb
std
or
jns
pop
push
cs
sub
call
jmp
lods
mov
das
nop
sbb
mov
xor
cmc
stos
std
outsl
dec
xchg
pop
mov
lret
test
and
fisttps
movsb
mov
movsl
dec
sbb
cwtl
inc
cmpsb
mov
sahf
mov
sub
dec
push
sub
ds
cmc
jle
or
mov
sti
cwtl
mov
cltd
adc
jo
movzwl
and
repnz
or
push
push
les
inc
cmpsb
mov
pop
inc
out
data16
lret
mov
push
and
add
or
push
aas
scas
mov
subb
enter
inc
subl
push
aam
mov
and
out
mov
lods
cmp
dec
cltd
sub
adc
lahf
or
in
loop
push
and
data16
push
jns
out
ds
add
xor
cmpsl
jle
or
push
mov
cwtl
lock
pop
add
xchg
ret
popf
shr
shll
js
je
fistpll
cmp
mov
cmc
and
je
xor
call
xor
xchg
inc
pusha
cmp
xor
xor
sub
rclb
or
xchg
cltd
mov
mov
scas
fimuls
sbb
inc
sbb
mov
or
and
inc
fcomps
inc
inc
sti
adc
mov
and
push
sbb
cmpsl
pop
add
or
xor
add
push
rclb
add
pop
pop
repnz
sub
sbb
or
std
sbb
stos
arpl
xor
cld
arpl
adc
push
sahf
or
or
andl
lret
mov
hlt
or
inc
or
outsl
jb
or
jl
cld
test
decl
test
mov
out
gs
int
adcb
jmp
mov
push
and
pop
add
mov
mov
test
mov
dec
or
gs
push
in
jne
jo
mov
inc
insb
jns
xchg
lods
addr16
test
and
stos
jns
sbb
or
fs
inc
enter
fxtract
push
pop
add
sti
add
jne
cmp
jge
jle
push
jmp
in
add
scas
or
and
enter
push
inc
or
aam
mov
dec
jp
pop
and
add
inc
add
dec
xchg
sub
movsl
nop
ss
and
daa
adc
inc
lahf
sbb
fstpt
xchg
ret
dec
xchg
or
dec
shlb
mov
mov
scas
dec
lahf
fcoml
xchg
and
pop
mov
jmp
mov
popf
mov
cli
cmc
in
and
mov
jae
or
scas
xor
clc
cmc
in
dec
adc
adc
add
shlb
jne
or
or
add
push
push
add
lods
xor
push
test
inc
mov
sub
push
inc
xor
psubd
push
popf
aas
imul
clc
dec
sbb
faddl
inc
adc
mov
adc
add
lock
ljmp
adc
xchg
int
sub
subl
push
addr16
iret
push
adc
mov
test
mov
vcvtsi2sdl
sub
mov
and
push
mov
mov
add
pop
nop
sub
adc
sub
push
jle
or
cld
and
stos
out
dec
stc
jle
adc
pop
inc
cmpsl
push
int3
movzbl
ss
bound
test
inc
fadds
jmp
or
fists
add
pop
push
or
iret
aad
hlt
jbe
add
shlb
cmpl
adc
cmpsb
or
sbb
inc
loopne
mov
sub
jmp
pop
ds
and
xor
jle
xlat
sbb
or
sub
xlat
movsl
pushf
mov
sub
push
push
mov
test
inc
adc
mov
es
sub
stos
jnp
push
into
into
add
or
adc
mov
repnz
dec
mov
and
addb
push
add
push
add
loopne
inc
mov
sbb
orb
ss
loopne
out
inc
inc
fmuls
mov
pushf
or
das
jge
adc
sbb
or
xchg
mov
fildl
rorb
lea
jo
xchg
cmc
test
sub
adc
mov
add
pop
pop
pop
js
jmp
adc
dec
xlat
aam
pop
jae
shrl
mov
cmc
addr16
lcall
mov
dec
cmpsb
xchg
insb
dec
mov
in
lcall
push
jge
icebp
lret
mov
pop
ljmp
adc
add
sbb
sub
jb
or
sbb
sub
dec
mov
push
add
cmp
push
xor
es
loopne
sub
sbb
es
add
test
sub
in
das
sub
das
fiaddl
sub
add
push
mov
add
inc
mov
cmp
mov
lea
push
push
cmpsb
or
sub
push
adc
dec
dec
mov
and
adc
or
xor
push
or
and
adc
adc
fstl
fnstcw
mov
sbb
int
les
arpl
or
and
mov
sub
loopne
cmp
add
cmp
scas
sub
dec
dec
mov
mov
mov
in
xchg
sub
xchg
popa
es
push
mov
and
pushl
hlt
scas
je
mov
xbegin
cmp
sub
out
mov
mov
fsubs
mov
sbb
subb
not
cmp
mov
leave
cmp
test
in
push
or
sub
sahf
out
ds
pop
jmp
mov
daa
xor
add
mov
cmp
sub
jno
add
sub
and
jo
outsb
adc
or
pop
or
push
std
mov
mov
inc
das
sbb
or
fiaddl
inc
dec
push
movsl
and
lcall
and
gs
adc
lea
or
inc
adc
mov
jmp
es
or
jne
push
or
or
cmc
xorb
pop
pop
or
je
pusha
pusha
fcmovnu
mov
mull
out
test
ficomps
enter
and
jp
jne,pt
xchg
jge
nop
rcrb
pop
lods
sbb
arpl
mov
orb
out
adc
mov
lods
fdivs
mov
and
imul
subb
ljmp
mov
jl
jge
int3
lods
jge
vmread
sub
enter
dec
xchg
pop
js
mov
sbb
dec
add
dec
mov
xchg
popf
shlb
adc
aad
shlb
cmp
jb
scas
cmc
das
filds
or
adc
dec
or
push
lcall
and
or
aaa
dec
mov
xor
push
jl
xor
js
fs
ret
xor
inc
xlat
out
mov
out
pop
out
dec
sti
jbe
xchg
mov
pop
xchg
roll
aas
xor
jne
std
xchg
pop
mov
push
mov
imul
cld
test
jns
xchg
cld
addr16
pop
aam
movsl
mov
or
mov
inc
mov
adc
dec
add
ret
mov
jmp
mov
jecxz
push
fucom
xor
insl
pop
inc
xor
xor
fnstcw
mov
mov
cmp
and
adc
adc
sub
gs
push
inc
imul
add
test
jbe
mov
mov
dec
mov
ja
jo
dec
xor
or
jne
std
int3
test
lea
add
jne
fucomi
or
or
jmp
cmp
add
add
jmp
or
add
adc
repz
or
pop
xchg
sub
fs
aas
aas
mov
outsb
sti
dec
es
sbb
scas
bound
add
sbbb
mov
pop
jmp
or
repnz
mulb
pop
fstps
roll
mov
xchg
scas
push
jg
mov
out
add
xlat
push
push
mov
xchg
mulb
inc
jae
and
shl
mov
imul
push
les
inc
cmp
jne
loop
fnstcw
dec
shl
rsqrtps
push
loope
dec
js
js
or
pop
or
ret
outsb
xor
dec
mov
sbb
push
inc
sbb
sbb
sbb
sbb
push
loop
adc
sbb
xchg
sbb
and
and
push
test
and
and
adc
inc
push
mov
inc
adc
and
push
jne
inc
jae
mov
push
add
mov
fs
mov
das
rorl
sbb
jg
lods
or
and
cli
and
push
ljmp
push
adc
mov
fcoml
pop
incb
add
mov
and
push
mov
mov
mov
es
cmp
sub
inc
fs
dec
sub
and
into
fidivrl
inc
sub
jmp
sub
xchg
and
pop
jne
xchg
xchg
bound
scas
push
adcb
js
adc
mov
pop
je
sub
out
push
es
ficompl
leave
jne
mov
or
push
lret
and
roll
adc
adc
subl
aaa
xor
cmp
jae
pop
pop
push
jmp
lret
lea
add
imul
mov
dec
in
xchg
inc
repnz
mov
xor
out
out
add
in
lea
mov
cld
call
pop
pop
and
add
or
xchg
add
push
sbb
and
push
outsb
aam
fisubrs
xor
adc
mov
adc
fistpll
and
push
inc
pop
mov
xor
and
in
popa
loopne
lods
xor
inc
or
mov
test
jl
je
mov
dec
or
inc
push
jp
popf
pop
pop
mov
sbb
pop
adc
inc
xor
push
mov
dec
sbb
xchg
push
movsl
push
adc
push
xchg
iret
cmp
mov
out
scas
sbb
ret
pop
cld
mov
jl
and
test
push
xchg
outsb
mov
xor
sbb
xchg
xchg
mov
and
movsl
mul
movsb
or
outsl
xchg
adc
popf
test
lds
pop
and
sbb
icebp
sbb
leave
push
insb
leave
jns
sbb
xchg
pop
jmp
cmp
jbe
dec
shr
repz
xchg
loope
push
nop
test
mov
movsl
into
and
mov
cmp
movsl
xor
add
ffreep
cmp
sub
mov
pop
pop
mov
test
stos
adc
xchg
shll
lods
dec
repz
push
push
mov
js
scas
out
or
test
inc
lods
xchg
mov
push
dec
lret
enter
mov
adc
inc
pusha
icebp
push
repnz
push
and
scas
mov
shlb
push
xor
pop
mov
adc
push
dec
push
inc
mov
push
mov
mov
push
sti
mov
ret
jne
push
lea
pushf
js
or
adc
fs
imul
push
or
gs
adc
je
call
pop
adc
fcmovne
and
pushf
out
cli
jl
setne
mov
jmp
mulb
push
push
or
mov
jecxz
dec
test
iret
out
hlt
mov
pop
mov
mov
mov
rclb
pop
mov
pop
inc
inc
sbb
or
push
inc
movsb
adc
adc
shlb
lods
and
xor
les
inc
pusha
add
and
movsb
mov
fs
push
test
mov
test
mov
inc
clc
imul
nop
enter
int3
or
rcl
or
fmuls
je
adc
mov
cmp
lods
pop
or
push
adc
es
mov
cmp
xchg
ror
sbb
cmpsb
out
mov
inc
decl
andl
push
outsb
pushl
or
and
sbb
push
adc
jg
loope
push
sbb
sbb
mov
fs
repz
jae
jg
jg
jns
dec
push
sbb
or
inc
cmp
enter
mov
scas
aas
mov
xchg
loope
loopne
jne
insb
movsl
and
adc
and
push
jg
jbe
popa
call
rorb
lock
call
pop
xor
push
aam
push
and
repnz
aas
xchg
sar
aam
in
jg
in
mov
adc
and
push
icebp
cmp
lock
or
lock
nop
dec
sbb
sbb
cmp
jne
inc
cli
adc
add
mov
sbb
add
inc
xor
and
ret
sahf
xor
mov
adc
mov
js
adc
lret
lcall
pop
nop
and
and
cld
bound
sbb
add
dec
test
inc
sub
idivb
pop
adc
add
roll
lock
adc
in
push
inc
popf
or
or
sbb
inc
or
loope
hlt
shll
xor
ds
std
push
xchg
mov
adc
inc
inc
mov
test
lods
jbe
adc
pop
fcoml
add
mov
jl
xchg
shlb
orb
adcl
scas
and
mov
mov
mov
jne
adc
in
and
popa
orl
or
mov
and
call
test
mov
jo
nop
jnp
lea
push
mov
sub
push
mov
shll
and
inc
inc
push
and
push
cmp
pop
test
jecxz
icebp
xchg
ret
cltd
insl
movl
cmpl
pop
inc
sbb
inc
mov
cmpsb
inc
push
cmc
mov
aaa
dec
sub
adc
adc
call
ljmp
out
or
jmp
ret
ret
mov
mov
cli
adc
adc
add
and
cmpl
adc
push
dec
mov
cmp
lret
adc
sbb
and
test
sub
scas
inc
xor
sub
shrl
and
mov
mov
outsl
cmp
hlt
loop
int
inc
hlt
test
jmp
lcall
lret
mov
mov
xchg
push
dec
in
pop
cmc
adc
adc
or
push
dec
fsubl
rol
add
mov
adc
push
call
push
jb
fs
inc
lret
push
mov
aam
sti
int
jg
es
jg
push
push
push
popa
insb
rcll
add
jnp
sbb
dec
cmpsl
rorb
aas
cmp
xlat
jmp
popl
push
lods
ret
call
add
dec
mov
jl
lods
imul
pusha
cmp
mov
jne
add
sbb
dec
add
insb
pop
and
inc
hlt
lret
add
fisubl
popf
pushl
icebp
xchg
pushf
xor
mov
or
idiv
mov
hlt
cmp
pop
xorb
mulb
add
movsl
lods
jmp
mov
jnp
leave
mov
mov
aas
cmp
dec
in
xor
adcl
inc
mov
loopne
shll
add
popa
add
xor
pushf
fdiv
inc
xchg
jno
cli
in
roll
fildll
push
scas
iret
jmp
add
lcall
pop
pusha
pushf
xor
mov
and
mov
lock
xor
test
pushf
sbb
cli
xchg
je
outsl
fsubr
add
std
loop
adc
xor
mov
sbb
pushf
stos
add
mov
fisttpl
inc
or
add
inc
adc
add
mov
pop
add
mov
pop
jge
xchg
add
es
pop
mov
sub
decl
add
adc
jb
add
mov
push
add
push
add
jb
ficompl
lret
add
cmp
xchg
xor
push
push
das
pop
cmp
add
roll
popa
jnp
add
cmp
mov
dec
add
xlat
js
pop
jb
cmpsb
fadds
stc
call
and
shlb
sub
add
into
loope
sahf
lea
add
xchg
cmpsl
cmp
inc
push
add
loop
dec
pop
mov
stc
adc
mov
xor
popf
negb
cmp
add
inc
add
xor
outsb
test
mov
subb
orb
stc
nop
mov
lahf
int3
je
repnz
call
and
or
mov
and
addb
ljmp
jge
inc
jo
mov
xchg
mov
cmpsl
dec
or
add
movnti
or
shr
fsubs
dec
sbb
lods
call
lds
arpl
jecxz
out
sub
pop
add
sub
or
push
dec
push
pop
cld
mov
jno
mov
mov
push
fwait
sbb
mov
mov
test
pusha
mov
shr
insl
jmp
jnp
inc
add
adc
jge
rol
mov
pushf
sbb
cmp
add
in
jmp
or
adc
jo
das
jmp
add
xor
dec
push
jle
rcll
pop
rolb
sbb
js
or
inc
jne
push
mov
movsb
add
call
das
mov
mov
add
sbb
xchg
add
out
lods
cmp
sub
shrl
notl
cmp
lods
daa
dec
xchg
inc
push
jb
add
mov
das
dec
enter
add
mov
mov
xorb
popf
mov
add
dec
dec
nop
mov
stc
incl
mov
fsubrs
das
jne
inc
ja
add
lahf
sti
fildl
mov
loope
movl
pop
popf
push
rclb
add
xor
mov
add
incb
adc
sbb
xchg
mov
incl
daa
or
rcrl
mov
or
int
inc
jbe
xchg
mov
stos
aaa
lds
pop
xchg
in
add
scas
decl
or
add
insb
aas
and
jnp
add
push
adc
repz
or
xor
inc
out
pop
jle
push
jmp
lds
fbstp
outsb
in
leave
cmp
add
mov
add
adc
out
imul
mov
add
xlat
stos
mov
cmp
dec
cmpb
cmp
dec
out
xchg
add
mov
pop
test
cld
inc
cmpsl
aas
jb
add
scas
outsl
ja
ds
add
lea
es
movsl
fldl
insl
lock
mov
dec
les
cmp
sahf
add
jl
inc
arpl
mov
mov
or
mov
addl
dec
jmp
sub
add
cwtl
add
adc
jg
nop
xor
jle
and
negb
add
and
sub
outsl
fwait
push
repnz
xor
pop
aad
test
sbb
and
xchg
xchg
mov
xorb
mov
mov
shl
popa
pop
or
cmpsl
jmp
cs
lcall
std
inc
add
cli
mov
jno
pop
frndint
push
cmpb
test
mov
add
mov
pop
rorb
dec
cmpsb
mov
cmp
xorl
enter
dec
mov
addl
sbb
fwait
inc
ds
in
push
or
mov
pusha
pop
jecxz
sub
pop
pop
pop
sub
je
adc
cmpsl
dec
inc
adc
push
add
enter
xchg
call
sub
inc
nop
xor
push
add
cli
iret
adc
cwtl
mov
fiadds
push
add
stos
stos
jl
lea
sbb
cwtl
js
inc
iret
shrl
in
imul
cmp
ja
pushf
jge
jle
push
mov
xorb
add
push
std
xchg
adc
stos
out
insl
lds
or
add
stos
add
sbb
scas
movsl
mov
jg
add
push
sti
and
xor
outsb
dec
loopne
pop
sbb
stos
jo
xor
repnz
add
sub
inc
in
testl
jecxz
loope
roll
mov
mov
f2xm1
inc
add
outsl
push
movsl
sub
inc
add
inc
repz
xchg
push
pushf
rcl
icebp
daa
nop
loopne
popf
cmp
xchg
and
push
jbe
inc
and
add
mov
loop
sbb
cli
xchg
enter
and
test
divl
xor
adc
mov
jmp
cld
inc
cmpsl
and
pop
pop
fisubl
push
outsl
data16
xchg
repnz
pop
dec
xlat
jbe
jae
sbb
clc
sbb
jb
popa
out
push
jg
icebp
xchg
enter
adc
in
fs
arpl
addb
or
dec
inc
jg
rcrb
mov
fsubp
or
jbe
mov
xlat
push
mov
push
xor
dec
test
cmc
xor
mov
add
inc
dec
jne
hlt
out
inc
pop
inc
dec
cmp
adc
mov
push
inc
clc
movb
jmp
jo
mov
mov
out
or
jno
push
mov
div
pop
mov
push
mov
ret
pop
loopne
sbbb
inc
jne
mov
dec
decl
jg
mov
jno
sarb
mov
pusha
pop
call
in
sbb
mov
mov
inc
pop
sub
sbb
cwtl
push
inc
adc
sub
pop
out
xor
adc
pop
out
and
fs
cmp
mov
or
scas
repz
imul
shlb
inc
inc
pop
and
xor
or
rolb
sbb
test
pop
dec
lods
cmpps
xchg
adc
push
pop
adc
xchg
pushl
inc
iret
fldl
sub
cmp
xchg
add
mov
lea
test
insb
sbb
sub
sbb
lret
shlb
mov
push
mov
fcoms
and
int3
push
xchg
cmp
sub
xchg
or
dec
push
xchg
xchg
and
inc
adc
or
insb
xchg
jnp
pop
add
mov
add
inc
add
push
fs
test
jl
add
xchg
test
cs
cmpsb
sbb
or
adc
add
ss
in
or
add
push
pop
int
stos
add
dec
frstor
imul
xchg
jle
clc
movb
mov
mov
and
sub
mov
xlat
sub
cmp
or
mov
fiadds
ficoml
call
int3
pop
mov
mov
dec
ret
test
pop
add
pop
jno
push
test
cmc
inc
fwait
xchg
jns
add
sti
cmp
push
mov
mov
adc
jp
sbb
std
add
and
push
fadd
or
addr16
mov
lods
add
jne
imul
push
jecxz
jo
mov
repz
pop
dec
push
rolb
mov
add
mov
lea
ljmp
rorb
jne
out
popf
inc
xor
mov
mov
fistl
ficoms
add
sbb
push
mov
mov
hlt
xor
les
call
lea
popf
les
data16
and
add
inc
or
rolb
or
sbb
add
or
ror
or
mov
adc
stc
and
mov
mov
outsl
lock
add
je
mov
add
mov
jns
sub
call
mov
dec
aam
mov
aaa
mov
aam
fsubr
fiaddl
mov
push
jmp
leave
sarl
push
pop
scas
cs
sarb
jb
jbe
xor
xchg
push
or
es
icebp
lods
adc
cmpsb
out
mov
ret
pushf
mov
shll
sub
test
add
test
testl
inc
xchg
pop
pop
xor
nop
in
mov
repnz
shlb
pop
adc
adc
fsubl
aam
add
mov
mov
adc
and
pop
or
or
push
xor
or
das
fwait
rcll
ret
or
adc
add
mov
sbb
adcl
jmp
dec
inc
fstl
mov
adc
cwtl
inc
enter
jmp
xchg
lds
push
and
movsb
lea
es
push
mov
adc
shl
mov
mov
pop
xchg
cmp
push
arpl
sbb
adc
enter
mov
dec
inc
sbb
inc
daa
cmp
or
cltd
or
or
xchg
sub
inc
pusha
pushf
fidivrs
add
sbb
jbe
pop
jae
push
pop
mov
mov
jle
call
loope
lods
test
xor
movb
or
mov
movsb
jnp
lds
mov
enter
movsl
mov
jo
int3
pushf
into
adc
enter
sbb
rcrb
aaa
xadd
test
aaa
xchg
mov
mov
mov
sub
hlt
push
in
adc
in
add
out
addb
jb
or
mov
adc
xchg
hlt
dec
push
pushf
leave
add
push
xchg
sbb
inc
and
cmpb
jne
aaa
or
loopne
add
xchg
pop
adc
xchg
ret
outsb
pop
inc
mov
or
and
inc
sbb
jmp
pop
jb
mov
push
addr16
adc
jno
and
scas
and
or
push
icebp
cli
xchg
sbb
push
ljmp
inc
pop
je
ret
push
fdivl
in
icebp
sub
and
and
dec
cmp
mov
movsb
lock
or
push
loop
clc
add
adc
pop
inc
or
xor
aas
pusha
ffreep
jecxz
ljmp
add
aam
mov
inc
stos
add
pop
pop
add
ret
fiaddl
cs
fildll
fdiv
dec
lcall
outsb
and
sbb
loope
lds
aad
dec
inc
call
scas
mov
movsb
sti
cmp
pushf
push
repnz
xchg
aad
mov
jge
jae
mov
mov
xor
add
lea
bndstx
mov
and
lcall
icebp
or
jnp
add
xchg
adc
sbb
push
sbb
add
push
clc
sbb
out
pop
cmc
ficomps
push
hlt
les
loop
cmp
mov
inc
int3
dec
inc
hlt
lret
push
ror
fwait
enter
loop
adc
ja
loop
cmpsb
dec
mov
sub
xchg
lea
enter
aad
mov
and
int
repz
fcmovne
mov
inc
pop
pmaddwd
inc
loopne
aad
test
cs
inc
mov
add
inc
jl
add
scas
cld
adc
fnsave
rclb
xchg
sti
push
jp
and
cmp
jmp
je
lret
xor
bound
xor
ds
stc
cvtps2pi
or
jecxz
sarb
loop
xchg
fadd
mov
add
jge
negb
add
inc
into
shr
in
or
cmp
sbb
add
xorb
aaa
adc
mov
cmp
je
lds
and
sub
cmp
adc
or
inc
mov
dec
nop
sbb
xor
mov
and
push
nop
jp
scas
div
jne
daa
xor
fcom
mov
push
add
sbb
in
add
pop
gs
das
movsb
adc
mov
lods
inc
mov
add
addr16
out
pop
popl
loop
rclb
shll
ljmp
inc
stc
add
push
mov
shlb
xor
pop
insb
xchg
add
mov
mov
fiadds
add
xchg
mov
ret
sbb
sbb
mov
push
and
inc
or
and
and
mov
imul
gs
in
or
jle
in
mov
in
hlt
cwtl
lock
icebp
mov
mov
xchg
sbb
jp
jge
adc
mov
pop
cld
icebp
mov
fiaddl
sub
dec
out
adc
test
pop
mov
test
sbbl
add
dec
cmp
sub
emms
test
nop
test
fcoml
ffree
mov
jbe
mov
pop
aam
xchg
push
cli
rorl
mov
lds
xchg
fstpl
loopne
pop
ret
or
push
inc
addr16
out
loopne
cmp
lock
out
stc
ficomps
jmp
call
cli
adc
jnp
insb
out
jp
sbb
js
pop
mov
test
mov
mov
jmp
jnp
loope
push
cld
stos
cmpsl
jae
ret
pop
adc
mov
fisttpl
and
jp
fcoms
sub
jmp
dec
xor
inc
add
push
inc
cmp
push
mov
and
repnz
inc
inc
das
push
sub
mov
jp
cmp
jae
movsl
pop
mov
mov
jecxz
ret
pop
and
cmpsb
add
ja
je
push
mov
lret
adc
call
sbb
enter
imul
jmp
jmp
add
push
add
add
enter
jne
inc
cmp
adc
in
pop
cmp
fdivrl
push
fwait
cmp
lds
cltd
add
imul
mov
adc
jl
pop
or
sub
push
fdivrl
xchg
add
lock
aam
roll
add
or
in
mov
push
or
cmp
sbb
repz
cli
xor
cmp
or
jl
data16
fistpll
mov
cmp
adc
fwait
call
mov
aaa
mov
pusha
pop
or
lcall
jge
push
shrb
add
push
sbb
or
push
xchg
inc
es
add
je
out
dec
fiadds
push
fists
add
aam
jb
dec
inc
push
insb
xor
add
incb
in
mov
pushf
dec
ret
push
shll
and
mov
and
call
add
out
leave
and
inc
test
mov
pop
push
adcb
or
add
add
cmp
inc
add
inc
xchg
push
imul
jne
or
mov
push
push
fadds
js
mov
add
jl
lds
pop
jo
add
addr16
or
jnp
dec
and
mov
lock
or
and
pop
movsb
sub
test
clc
test
icebp
loopne
inc
aas
imull
mov
jbe
cmp
dec
adc
pop
lea
add
daa
out
insl
ds
sub
repnz
mov
adc
shl
idiv
dec
sahf
push
das
mov
cmp
call
mov
sub
sarb
add
mov
in
pop
imul
cld
jb
push
outsl
xor
call
stos
cmp
test
leave
data16
lahf
sahf
rcrl
outsl
aad
and
push
into
jae
sahf
add
mov
mov
jg
hlt
dec
add
sti
add
ljmp
pop
add
decl
das
dec
or
cmc
in
jp
repnz
out
cs
std
stc
xchg
push
sahf
or
sub
dec
mov
stos
add
aas
in
stos
cwtl
push
and
or
out
cs
movsb
and
sbb
or
cmp
dec
add
aaa
inc
jle
inc
add
xchg
mov
mov
pop
test
nop
call
add
xchg
lea
lahf
or
pop
add
dec
mov
xchg
jle
xor
push
ds
call
sbb
adcb
daa
fistl
insb
inc
int3
pusha
pop
sbb
loop
add
addr16
xchg
push
xor
add
xchg
dec
fyl2x
mov
xor
inc
mov
jg
out
int
add
and
mov
inc
repnz
divb
push
shrl
lods
stos
pop
push
nop
dec
xor
push
jle
in
push
cld
test
aaa
lahf
leave
pop
xchg
mov
add
fdivr
in
orl
sbb
cli
add
mov
test
add
clc
mov
test
iret
mov
push
rcrl
add
dec
jmp
mov
loopne
sahf
fisttpl
sbb
inc
sbb
mov
scas
xchg
sub
les
add
add
push
fnstenv
and
daa
dec
add
add
aam
adc
iret
jnp
sbb
adc
sti
pop
sbb
add
jl
add
in
roll
outsb
arpl
push
sub
dec
lret
xlat
hlt
inc
jae
add
mov
push
push
push
sysenter
mov
adc
ss
sbb
push
add
dec
xlat
sub
jae
mov
push
add
testl
xlat
add
dec
daa
adc
add
jecxz
push
and
xorl
cld
sub
in
cmp
int
lock
movl
xor
mov
push
add
jb
add
cmp
aad
lret
enter
in
negb
testb
daa
jp
dec
aam
lcall
ss
shll
xchg
test
add
jmp
nop
push
mov
adc
xlat
test
ljmp
cmp
and
or
fwait
cld
add
push
mov
xor
mov
mov
popf
ret
lcall
loopne
xchg
stos
test
xchg
cmpsl
in
add
mov
push
xlat
jo
mul
ja
xchg
jnp
add
addr16
jecxz
jp
adc
sti
lret
enter
and
orl
sub
or
jle
mov
push
imul
or
add
mov
ret
mov
movb
int3
inc
add
and
jge
jg
adc
pop
in
or
and
ret
sub
cmp
push
cmp
xor
jb
push
add
jae
sub
daa
fwait
leave
cwtl
cs
inc
and
pop
xchg
add
jp
push
test
inc
jl
add
cmp
jae
sub
test
shl
cs
call
add
lahf
in
or
push
jne
call
mov
mov
lods
notb
push
jl
loope
sub
mov
jno
call
pop
stos
and
fidivrs
repnz
or
mov
xor
push
test
sub
xor
mov
in
out
mov
popf
and
in
xor
popa
add
pusha
mov
or
fidivl
and
jecxz
iret
push
popf
pusha
or
loope
mov
or
adc
push
fcmovnbe
add
fbstp
jle
idivl
cmp
orb
les
movups
jno
lcall
fs
sbb
xlat
lock
sub
jno
lret
and
add
pop
xlat
xor
mov
mov
jecxz
orl
inc
pop
jbe
lcall
dec
jae
nop
xor
inc
mov
dec
sub
cmpb
mov
test
in
xchg
cmp
outsl
addb
test
hlt
pop
add
mov
sub
outsb
in
imull
rclb
sub
pop
push
rcl
in
fdivrs
xchg
adc
scas
jl
add
inc
sub
and
mov
flds
ja
cld
sbbl
inc
add
popf
test
cmp
xchg
rcrl
jp
xor
dec
add
mov
adc
sbb
or
push
jp
sti
mov
mov
addr16
jle
push
add
idivb
add
mov
nop
int3
out
decb
pop
std
enter
add
sub
or
scas
out
jg
test
adcb
or
or
mov
add
mov
jmp
stc
add
mov
xchg
mov
mov
add
mov
adc
push
lea
scas
dec
cmp
push
in
mov
fstps
fsubrl
xchg
add
outsb
lods
jl
adc
js
xor
std
add
mov
lods
add
dec
push
mov
lds
loopne
cltd
int
fistpll
and
inc
jae
in
add
int3
dec
sub
mov
test
sbb
sahf
xchg
movsl
xor
jns
add
insl
xor
push
orb
imul
add
pop
fldcw
lods
add
movsb
pop
sub
sbb
cmp
mov
in
add
adc
fisttps
mov
fstl
cmp
mov
xchg
adc
loope
add
enter
cmp
add
jne
add
test
pop
nop
push
add
add
mov
xlat
cmp
fcoml
push
mov
lods
out
add
mov
in
add
fimuls
mov
adc
test
jecxz
loope
les
hlt
and
ret
or
movsb
pop
in
pop
sti
ret
pop
in
xor
les
enter
push
mov
push
das
out
or
and
add
ss
xchg
push
imul
pop
dec
add
push
in
test
jae
mov
addb
xchg
lahf
ljmp
imul
rorb
add
mov
add
lock
and
stc
push
add
cmpl
je
push
adc
or
add
sub
adc
or
adc
or
push
in
adc
sti
in
inc
or
pop
cld
mov
icebp
add
or
addb
insb
aad
dec
hlt
sbb
jne
inc
mov
xor
add
loope
mov
shll
adc
push
call
mov
inc
jne
movsb
aas
adc
mov
adc
mov
or
mov
in
ret
inc
pop
push
or
rorb
sahf
adc
add
mov
adc
sbb
or
mov
stc
add
xchg
xchg
sub
add
push
add
inc
jg
nop
jl
pop
icebp
jnp
ret
add
test
xchg
sbb
lret
cmpsl
jmp
out
mov
push
push
ret
std
sub
aaa
inc
add
loop
gs
mov
dec
or
add
ret
push
mov
sub
or
std
ret
and
sub
add
imul
lea
ret
dec
and
mov
xchg
adc
add
dec
add
dec
sub
sti
dec
pop
call
add
clc
nop
mov
jmp
jp
adc
imul
inc
add
test
xorb
mov
or
inc
cmp
andl
in
jno
sbb
mov
movsl
xor
ret
pop
or
adc
mov
and
push
movsb
fcompl
pop
xchg
pushf
outsl
push
repnz
adc
jns
les
mov
add
nop
push
and
popf
cli
mov
add
or
lds
cmp
sbbb
adc
inc
dec
push
lods
int
xchg
es
lods
and
inc
call
nop
jno
fdivr
je
push
hlt
std
adc
lcall
enter
imul
push
insb
fxam
sub
inc
or
add
leave
push
push
cmp
adc
pop
movsl
sub
push
mov
push
add
fisubrl
and
mov
clc
push
dec
or
push
data16
push
inc
mov
xor
or
mov
push
pop
xor
addr16
pop
push
or
enter
dec
in
adc
aam
lds
sbb
mov
mov
lods
and
and
push
addr16
jp
jmp
lahf
loope
or
inc
cs
and
sti
jmp
xor
xchg
fsubrl
jne,pn
imul
and
clc
mov
data16
or
jmp
insb
xchg
test
je
cmpsb
mov
je
les
jl
cmp
add
xor
add
mov
push
lcall
jmp
popa
les
psubd
jb
xorb
cltd
sbb
mov
and
orl
pmaxsw
dec
or
jns
std
ficompl
fcompp
and
nop
push
sbb
inc
push
jmp
rorb
and
ror
insl
daa
xchg
add
push
bound
xchg
jae
mov
adc
mov
leave
or
add
ss
and
adc
not
cmp
or
sbb
xor
push
jne
fs
shr
les
pop
mov
xor
mov
cltd
int
adc
jle
stos
mov
mov
sub
mov
shrb
enter
or
pop
nop
xchg
adc
fcomps
leave
aam
sub
rolb
scas
push
adc
sub
jae
adc
add
bound
movb
adc
daa
mov
or
pop
sbb
xchg
addr16
mov
pop
adc
and
fs
and
xor
sub
xor
xor
sbb
faddl
mov
add
add
push
add
jg
shl
ljmp
aam
jmp
ds
test
adc
pop
or
mov
es
mov
adc
and
push
adc
popa
and
bnd
adc
inc
dec
mov
bound
inc
mov
popf
inc
in
push
add
and
inc
add
negl
inc
movsb
pusha
jl
fimuls
nop
mov
je
imul
cmp
sub
add
jge
loope
or
sbb
nop
repnz
push
sbb
push
movsb
mov
adc
popf
push
and
sub
pop
decl
popf
mov
adc
mov
dec
push
or
test
dec
push
clc
mov
sub
and
loop
or
mov
nop
add
mov
mov
adc
add
jno
mov
xchg
test
fcoms
push
or
mov
add
adc
mov
outsb
add
and
dec
insl
sbbl
out
mov
push
sbb
push
addl
jbe
and
call
andb
out
sahf
sub
jp
cmpsl
xor
inc
add
and
ja
dec
dec
push
pop
cmp
inc
enterw
ljmp
sbb
jae
sti
or
inc
jo
subl
sbb
mov
sub
adc
pusha
cmp
je
repz
lret
push
sub
cmp
int3
popa
inc
mov
orl
add
xor
cmp
lds
rolb
insb
cmp
inc
pusha
shlb
test
cmp
add
jne
jo
add
shrb
and
sub
add
je
xchg
les
jmp
or
add
sub
cltd
in
pandn
sub
pop
push
add
je
pop
xchg
add
bound
adc
inc
or
inc
or
xchg
push
dec
shr
xchg
pop
jns
and
and
and
cli
call
jmp
inc
data16
and
push
or
jp
jg
jno
outsl
aas
or
popa
inc
int3
adc
js
mov
and
sbb
out
pushf
sbb
jmp
daa
jecxz
cwtl
push
or
test
ds
repnz
inc
mov
pop
mov
and
dec
pushf
decl
daa
es
add
and
and
push
sbb
add
sbb
pop
push
inc
adc
adc
lsl
or
test
loopne
pop
push
jno
nop
fldenv
ret
scas
mov
and
dec
insb
or
xor
or
or
pusha
adc
sub
and
and
inc
mov
mov
pop
and
dec
dec
mov
add
pushl
sbb
mov
jne
pop
or
aaa
adc
adc
or
cltd
mov
push
mov
add
xor
rolb
cli
add
mov
jmp
push
sub
add
sub
and
inc
mov
jae
roll
push
cmpsl
les
mov
div
add
push
jb
adc
jmp
sub
movsb
sbb
adc
mov
lret
inc
out
mov
rclb
push
pop
adc
stc
add
lcall
or
pushl
call
rol
mov
add
in
mov
jae
and
addr16
arpl
test
in
sub
or
je
push
xor
addl
ljmp
and
out
lods
enter
inc
cmp
aad
sub
push
pop
out
dec
add
xor
into
loope
xlat
cmp
orl
and
sbbl
add
adc
xchg
int
add
add
push
mov
push
lahf
pop
inc
sbb
adc
rcll
cs
in
in
movsl
mov
push
int3
xchg
test
imul
jb
stos
jns
sub
movsl
push
fildll
mov
test
jmp
out
jecxz
shlb
flds
test
jns
jns,pn
cld
push
xchg
jb
cltd
test
push
clc
add
sbb
push
aaa
push
int3
sbb
adc
and
mov
int
xchg
je
insb
lret
incl
call
in
sahf
stc
out
in
lods
xchg
adc
sub
push
jle
cmp
insl
sub
push
or
ret
xor
adc
mov
in
mov
adc
imul
adc
and
lret
push
add
or
xlat
pop
std
gs
mov
cmpsl
leave
dec
aad
sbb
xchg
adc
mov
push
mov
add
gs
inc
jl
ds
sub
sub
clc
dec
mov
or
mov
inc
dec
les
movsb
sub
xchg
mov
aad
nop
je
inc
mov
inc
outsb
pcmpeqb
das
jmp
mov
adc
mov
sbb
es
shrl
xlat
jmp
movsl
jle
mov
sub
or
add
pop
xlat
mov
push
dec
push
outsl
adc
fwait
xchg
dec
xor
cmp
xor
loopne
sar
arpl
test
xchg
mov
jp
sahf
or
mov
pop
outsl
adc
xor
jmp
outsl
dec
dec
mov
push
lahf
das
and
and
mov
pop
or
mov
push
fmuls
pop
pop
lods
fsubrl
mov
lock
lcall
and
or
dec
dec
mov
roll
insb
mov
sub
inc
sbb
mov
adc
xchg
rcrb
lock
or
loope
icebp
jmp
xchg
pop
xlat
addr16
adc
jmp
xchg
inc
out
cmc
and
add
jecxz
ss
cmp
popa
cmp
mov
and
ficompl
das
pop
xchg
cld
mov
or
sbb
sbb
test
xchg
call
push
test
popf
inc
cmp
call
int
add
fwait
inc
mov
pop
or
ljmp
mov
or
test
or
add
add
cltd
enter
imul
xchg
arpl
adc
adc
pop
adc
adc
push
pop
sbb
push
sbb
and
xchg
sbb
sbb
sbb
and
and
and
and
sub
sub
sub
xor
xchg
xor
cmp
cmp
push
sarb
mov
aas
aam
mov
inc
inc
add
inc
inc
dec
dec
dec
dec
dec
cmpsb
add
push
dec
dec
push
push
dec
push
push
mov
push
outsl
fcoml
push
adc
adc
push
or
pop
dec
jo
xor
push
or
cmpsl
inc
fstl
or
mov
adc
test
mov
and
and
and
jmp
lods
push
adc
adc
push
pop
and
push
jmp
inc
and
or
and
loop
cmp
adc
mov
mov
inc
lret
arpl
inc
mov
dec
out
mov
das
adc
and
cwtl
mov
inc
lea
add
xor
cld
mov
adc
adc
adc
adc
inc
and
xor
mov
jo
jge
mov
mov
mov
adc
and
dec
repnz
adc
xchg
and
inc
inc
xor
add
dec
repnz
notl
push
and
inc
and
inc
les
dec
dec
add
cmp
or
andl
push
ret
jbe
clc
mov
adc
icebp
orb
cmpb
dec
or
inc
mov
mov
stos
inc
pop
fcmovbe
incb
dec
mov
or
fnstsw
adc
jno
add
mov
push
and
or
inc
inc
push
ret
imul
sbb
sbb
push
cmpl
lea
jl
movsb
ss
pop
sbb
ficompl
push
mov
adc
icebp
jl
dec
mov
dec
stos
jge
or
add
adc
ret
sahf
fsubs
lea
in
sub
jmp
mov
mov
and
pop
cmp
pop
test
cld
aam
pop
cmp
and
push
inc
push
inc
test
mov
add
pop
mov
mov
pop
mov
mov
test
jne
and
dec
adc
daa
pop
push
or
mov
sarb
cmp
or
inc
int3
add
and
repnz
fs
inc
mov
push
movsb
ss
jle
dec
or
movsb
cmp
bound
push
sub
cmp
inc
fdivp
rolb
jp
cmp
sahf
adc
ficoms
xor
or
adc
sbb
dec
inc
xchg
push
and
jle
mov
dec
loop
notb
or
push
inc
dec
jb
pushf
adc
and
inc
sbb
and
push
movb
push
xchg
adc
loop
mov
popl
push
pop
sbb
cmp
inc
mov
sbb
sbb
test
push
cmpsl
xchg
mov
adc
sbb
add
xchg
sbb
nop
dec
cltd
shll
mov
adc
xor
inc
or
sub
inc
pop
nop
xor
and
lods
das
and
cmp
enter
ss
mov
and
test
inc
xchg
jp
push
add
divb
int3
nop
pop
scas
and
xchg
mov
mov
mov
or
inc
shlb
or
push
pop
inc
jl
test
or
test
or
test
xor
inc
adc
addb
imul
inc
push
mov
sbb
or
ficompl
and
jno
or
movsl
mov
add
mov
mov
mov
xor
or
fcmovbe
les
rcll
jns
pop
add
dec
xor
sbb
lock
ds
jmp
aaa
incl
mov
mov
imul
fstl
push
xor
sub
sub
test
addl
test
mov
mov
add
push
mov
or
dec
push
xchg
ja
enter
lea
cmp
dec
sub
add
or
dec
es
loop
cmp
pop
dec
enter
imul
test
daa
mov
jne
xchg
push
sub
dec
pop
gs
dec
push
add
imull
adc
jg
dec
sub
enter
jno
mov
mov
jno
mov
or
jo
sub
pop
jb
xchg
mov
add
int3
mov
fstpt
pop
cmp
sbbl
fisubs
xchg
add
pushf
ja
mov
out
pop
test
add
cwtl
xchg
dec
rolb
je
mov
sub
in
jns
pop
mov
pop
movsl
popf
mov
jns
or
jle
and
jl
test
mov
stos
inc
dec
xchg
push
rcrb
aaa
aam
sub
fnstenv
loop
adc
ja
sub
xchg
mov
or
fisubrl
pushf
test
sbb
pop
ljmp
daa
je
into
push
adc
pop
cld
xor
push
jmp
inc
jg
jg
jg
push
sbb
movsl
mov
scas
sti
insl
sti
xor
or
das
jmp
orl
and
cwtl
adc
pop
mov
inc
filds
shr
popf
or
pop
repnz
aaa
inc
fldl
mov
cltd
lret
cmp
iret
cmp
inc
inc
out
es
sbb
jge,pn
or
jmp
inc
adc
xchg
sahf
cmp
xor
loopne
jmp
mov
pop
loope
pop
daa
out
push
lahf
or
pop
sub
sbb
add
xchg
and
dec
movl
imul
xlat
int3
pop
adc
xchg
add
ret
ds
addr16
adc
daa
in
daa
addr16
add
dec
mov
les
cmp
movsl
rorb
cmpsb
andb
daa
adc
in
andb
icebp
mov
daa
gs
push
gs
jle
popf
adc
xor
mov
sub
pop
das
mov
or
add
mov
and
xor
push
sub
sbb
cmp
pop
je
sub
sarl
scas
xor
je
sub
sbb
imul
sbb
iret
or
cwtl
jne
mov
and
sbb
add
or
add
and
or
popf
and
or
aaa
mov
push
aad
dec
jnp
sub
xchg
shrb
movsb
pusha
aad
add
cmp
dec
andl
xchg
cmp
dec
add
xchg
das
enter
and
add
negl
scas
mov
iret
sbb
dec
lahf
imul
inc
pop
inc
and
sub
jbe
xor
jl
sub
jae
fbstp
std
adc
pushf
sub
into
sub
shrb
xor
dec
int3
or
sub
outsb
push
aam
popa
nop
and
leave
inc
outsb
jle
mov
mov
push
and
stc
movsl
or
lock
fistpll
xor
into
add
add
lods
inc
sti
punpckldq
adc
or
lret
dec
ret
fmulp
inc
int3
popa
aaa
adc
pop
xchg
nop
adc
adc
cmp
xchg
dec
repz
push
lds
mov
das
pop
lock
add
fcomp
outsl
shlb
mov
or
popl
jno
pop
push
and
pop
inc
xor
movsl
pop
or
mov
sbb
adc
aam
test
test
jg
jae
xchg
and
sahf
add
and
xor
mov
ret
adc
add
add
mov
movsb
cmp
repnz
sbb
xlat
sub
sbb
dec
sbb
mov
mov
enter
inc
addr16
aas
sbb
cli
pop
and
shlb
or
and
test
mov
out
or
pop
inc
push
mov
mov
mov
imul
js
pushf
xor
mov
dec
pop
sarl
pop
in
pop
mov
push
xorb
or
test
fiadds
popa
push
addb
mov
cs
and
lahf
dec
or
push
fdivr
mov
dec
mov
stc
cmp
or
and
test
and
lret
jb
cltd
clc
or
inc
lret
sbb
or
sub
xchg
fsubr
jg
inc
and
sub
jle
jbe
shrl
in
sub
jb
mov
add
and
adc
inc
push
nop
sub
inc
inc
lods
xor
inc
adc
popa
push
inc
cmp
cmp
ss
cmpsl
xor
enter
scas
dec
xchg
les
test
scas
sarb
xchg
mov
inc
or
pop
xchg
out
sbb
jae
cmp
jge
daa
add
xchg
xor
adc
pusha
inc
sar
sbb
jp
adc
mov
or
subl
inc
xlat
dec
mov
adc
or
loop
xchg
mov
mov
jae
imul
pop
sbb
push
es
and
fwait
adc
insl
orl
sbb
adc
add
js
adc
lock
inc
jo
cmp
add
jno
call
and
fldcw
loopne
fs
jo
and
insl
in
outsl
dec
and
xchg
clc
lods
es
mov
mov
jg
xor
and
jl
negb
pusha
cmp
leave
shrl
add
int3
ds
adc
xchg
and
es
push
jl
aad
in
xor
fwait
xchg
out
es
shrb
sbb
test
and
nop
fsubp
test
mov
pushf
mov
mov
rclb
cmp
sub
and
lret
jb
mov
adc
jns
loop
push
push
nop
mov
pop
dec
loope
or
pushf
push
rcrb
pop
nop
es
lods
jnp
int
out
ja
adc
lret
inc
and
jp
leave
dec
and
dec
jns
test
loope
ljmp
ret
inc
and
and
dec
and
dec
mov
call
or
sahf
inc
lds
lea
jae
jg
sbb
pop
inc
or
leave
es
xchg
rclb
adc
jb
jae
cltd
cmpsb
inc
mov
dec
sarl
test
push
insl
and
jno
dec
xor
pushf
rcll
pop
xchg
mov
cld
xchg
aas
sti
cs
cld
fdivs
movsl
mov
adc
repnz
sahf
call
sbb
inc
pop
adc
les
xchg
xor
xchg
and
dec
je,pn
je
or
adc
inc
push
dec
pop
adc
sbbb
mov
push
jmp
sub
mov
mov
jmp
sub
imul
xchg
mov
add
adc
cmp
jmp
test
jg
adc
test
jge
cmp
mov
pop
rolb
mov
xchg
test
jo
mov
addr16
scas
jbe
cmp
int3
sbb
testb
ret
inc
lea
imul
out
les
in
sub
leave
test
inc
mov
sahf
xchg
les
roll
adc
push
sub
push
mov
jne
rcrl
cltd
mov
cmpsl
enter
out
fadds
push
mov
rcrl
adc
repnz
cmp
inc
sub
aas
int
xor
xor
adc
mov
xchg
mov
pop
and
cmpsl
int3
mov
adc
nop
mov
movsl
push
ljmp
pop
ret
mov
lods
inc
inc
or
lds
mov
add
lret
add
sbb
mov
bound
and
insb
dec
inc
movsb
jl
push
loop
hlt
or
pop
mulb
mov
stos
adc
and
inc
mov
push
mov
cwtl
or
enter
mov
inc
mov
pop
ljmp
movsl
cmpsl
std
mov
lahf
xchg
jmp
push
je
int
adc
les
xlat
or
adc
test
add
sub
xor
dec
test
cmpsl
or
cld
leave
cmpsl
sbb
fwait
cmp
popf
cmpsl
or
xor
cwtl
mov
lea
xchg
mov
add
stos
aas
or
jge
inc
mov
std
addr16
icebp
and
test
imul
setbe
mov
xchg
push
scas
and
fisubrs
sub
sub
ds
in
cli
mov
je
sub
lock
es
enter
push
iret
rclb
mov
and
xor
cmp
popf
mov
push
jmp
cli
sbb
or
test
outsl
das
stc
out
and
rcll
and
aas
mov
xor
pop
inc
mov
outsb
sub
sub
pop
xchg
push
mov
push
lret
sbb
imul
dec
lea
out
enter
sbb
xor
fwait
adc
test
sub
inc
ret
jae
rclb
outsl
in
or
jl
and
cli
sbb
pop
andb
imul
mov
cltd
xor
fcomps
cmp
xchg
pop
test
lods
xor
jmp
sub
imul
push
or
ljmp
jmp
sbb
jno
pop
xchg
mov
leave
xor
mov
xchg
adc
sub
cmp
js
cltd
inc
push
cmp
inc
jg
je
xchg
mov
adc
xchg
add
aas
les
ja
out
pop
sub
mov
mov
mov
cmp
rorb
rcrl
fs
cltd
add
pop
inc
fstpl
jae
cmpsl
xchg
pop
std
lcall
and
mov
jg
dec
dec
loop
in
je
lea
cmpb
xor
ret
hlt
adc
ret
jl
push
push
or
les
cmp
xor
adc
adc
and
fs
cmp
test
shrb
ljmp
shlb
pop
push
adc
fisubl
pop
and
jg
loope
inc
mov
jb
iret
xchg
mov
or
imul
inc
and
inc
dec
cmp
jo
xor
mov
adc
sub
sub
dec
ljmp
cmp
push
xor
in
mov
or
hlt
loop
jno
nop
mov
pop
dec
dec
add
popa
test
and
fildl
ret
push
dec
inc
clc
imul
cld
and
sbb
add
and
or
and
mov
sbb
adc
in
sbb
cld
sbb
sbb
or
jns
or
adc
and
cmp
sub
dec
lea
sub
arpl
jl
xor
cmp
and
test
and
mov
and
cmpsl
js
jne
enter
cmc
dec
sub
jne
sub
adc
inc
cli
je
or
inc
popa
dec
ljmp
inc
imul
enter
push
insb
pop
jb
popa
jmp
mov
inc
in
jo
jns
and
imul
cmp
cld
cmpsl
adc
pop
pushf
push
popa
jle
jl
scas
stos
addr16
cmp
pop
and
scas
push
jo,pn
lcall
cli
dec
jge
cmp
sbb
insl
sbb
xor
inc
push
mov
aaa
nop
push
xchg
pop
nop
sbb
push
jno
ljmp
mov
sub
mov
inc
or
fcomi
push
int3
out
frstor
decl
dec
pop
push
fistpl
jne
dec
or
lock
lock
dec
xchg
lock
jmp
gs
xor
push
sbb
push
lds
adc
int3
adc
fdivl
push
jl
xchg
mov
std
fildll
stc
xchg
lret
or
lret
dec
pop
push
and
cmp
dec
inc
fs
cmp
adc
push
pop
xor
push
inc
pop
nop
insb
add
add
cli
sub
sub
imul
jmp
jo
cmpsb
add
not
sbb
mov
lcall
pop
pop
dec
ljmp
insb
fwait
lds
inc
cmp
adc
cmp
add
xchg
std
or
arpl
adc
jg
xchg
jge
sbb
in
inc
mov
sbb
or
test
push
dec
jne
jmp
clc
lea
push
mov
loopne
inc
out
sahf
cmp
inc
xchg
mov
dec
stos
inc
pop
inc
std
fisttpl
lret
loop
arpl
lock
rdpmc
test
inc
lret
loop
int
or
pop
xor
lea
adc
inc
cwtl
cmpsb
test
inc
daa
inc
div
xchg
out
mov
or
jl
inc
jg
imul
add
imul
ja
loopne
jl
push
mov
cltd
cmp
mov
les
mov
jmp
call
rolb
test
push
lret
ja
sbb
jbe
negb
push
data16
lahf
mov
add
aam
xchg
pop
loop
add
cmp
fadds
dec
in
add
and
and
or
or
push
dec
pop
dec
jg
inc
cmpl
inc
decl
push
mov
pop
das
sbb
arpl
test
cli
lahf
fs
imul
mov
in
test
push
dec
jno
add
test
push
mov
popf
add
or
mov
test
je
lea
push
or
adc
ret
aaa
adc
cmp
cmp
jg
lods
daa
mov
mov
sub
sub
and
iret
mov
pop
xor
aam
test
imul
mov
push
imul
push
push
in
push
or
js
aas
out
mov
push
push
jne
mov
mov
decb
inc
inc
rclb
scas
xchg
pop
inc
je
enter
mov
ficompl
jne
inc
inc
addr16
pop
mov
xchg
and
cmp
dec
or
daa
xor
cld
inc
dec
cli
in
aaa
bound
fmulp
mov
xor
test
outsb
sbb
xlat
ficomps
ret
xchg
xchg
fdivr
data16
mov
rorb
jno
mov
in
pop
rorb
fidivrs
outsl
test
pop
aam
in
orb
loope
mov
data16
sub
ret
push
xchg
or
fildll
inc
jge
jle
sub
je
sub
xchg
and
dec
fs
xchg
shlb
and
test
inc
orb
sahf
inc
dec
nopl
adc
push
nop
dec
sbb
lds
and
push
ja
in
imul
mov
jecxz
xor
mov
and
sub
or
or
xchg
pop
shlb
lahf
imul
decl
jae
xchg
fs
push
sub
cmp
xor
scas
mov
dec
or
push
test
cltd
dec
inc
int3
je
enter
xor
sbb
or
mov
mov
xchg
je
mov
dec
sub
or
dec
inc
int3
jl
pop
inc
sub
cmp
jne
xchg
cmp
sub
out
inc
mov
or
sub
xor
stc
push
es
mov
sbb
push
and
pusha
call
mov
sbb
testl
push
scas
push
mov
iret
and
add
mov
shrl
dec
pop
frstor
xchg
sbb
or
inc
sbb
leave
cmp
fisubl
mov
push
mov
dec
test
dec
cmp
test
insl
or
shlb
loope
mov
int3
or
pushf
cmp
popf
mov
add
popa
add
pop
mov
int3
test
inc
decb
sub
cld
push
clc
jge
mov
sbb
and
nop
pop
dec
shll
inc
lds
jmp
aad
cmp
sbb
push
cmp
and
nop
leave
inc
and
or
add
fdivs
or
xor
loopne
adc
xor
call
mov
adc
movsb
adc
lock
sti
leave
lret
dec
scas
adc
jg
mov
add
decb
jl
mov
or
leave
popa
sub
cs
mov
lret
adc
cmp
push
adc
push
je
in
pop
icebp
das
sbb
inc
dec
enter
dec
aaa
shl
pop
ret
xor
inc
jno
enter
sbb
dec
imul
sbb
test
mov
xchg
and
lods
add
dec
icebp
jp
test
and
mov
jno
rcll
mov
sbb
clc
test
shlb
jl
dec
das
dec
push
adc
outsb
insl
imul
and
adc
cli
out
movsb
mov
testl
mov
inc
adc
inc
xchg
cli
out
mov
jnp
pop
inc
stos
sub
jl
inc
xor
inc
orb
sub
inc
call
lea
inc
adc
pop
in
out
out
and
out
iret
clc
ds
test
cmp
pop
dec
jne
int
add
mov
ret
cmp
mov
je
dec
sbb
test
cmp
jbe
xchg
or
mov
sub
inc
dec
adc
lahf
xchg
fwait
ret
ret
sbb
jne
pop
inc
inc
and
andps
pop
movsl
fs
pop
push
je
mov
int3
pop
call
inc
nop
add
xchg
loop
inc
or
pusha
adc
add
or
test
or
push
es
repnz
call
arpl
std
in
mov
adc
imul
pop
lods
sub
xchg
rorb
jmp
add
xchg
test
xor
pusha
cmpsb
je
lock
rcrl
sub
mov
ljmp
btc
sub
mov
dec
fsubrp
mov
push
sbb
adc
and
dec
int3
sbb
test
jl
inc
xor
inc
or
push
ret
sub
out
push
dec
in
add
loope
pop
xor
imul
mov
adc
jns
imul
adc
inc
dec
hlt
cmp
scas
and
pushf
add
jge
push
subl
std
cmp
sub
sbb
add
push
mov
bound
fnsave
icebp
out
jp
es
cmp
push
stos
add
push
sbb
imul
dec
jns
or
je
push
mov
push
loope
sub
jnp
mov
xor
arpl
cmp
mov
xor
pop
cltd
add
out
scas
add
sti
jb
push
stos
mov
xchg
clc
outsb
cs
sbb
bound
add
pop
add
cmpb
xlat
sub
add
xor
pop
and
xstore-rng
cmpsl
xchg
add
dec
clc
inc
xchg
jmp
incl
fcoms
in
pop
pusha
mov
xchg
push
enter
test
mov
mov
sub
lock
cmp
xor
insl
repnz
int
fidivl
jbe
cli
adc
out
mov
push
mov
push
xor
daa
pusha
sbb
fstpl
push
push
pushf
faddl
and
add
test
pop
sti
mov
add
xchg
ficomps
or
jmp
sti
xchg
add
push
sub
ret
jns
or
xor
xchg
pop
jbe
push
pop
stos
push
addb
mov
bound
xor
pop
jg
add
add
scas
into
dec
add
popa
cmp
scas
or
xchg
adc
add
lods
shll
or
fisubl
daa
mov
inc
mov
jbe
jp
lahf
jno
loopne
adc
je
jmp
nop
outsb
ljmp
mul
cmpsb
roll
jmp
cs
add
adc
or
mov
jo
dec
or
jne
pop
jge
sub
fs
mov
adc
fadds
adc
xor
add
pop
mov
mov
and
dec
xchg
mov
lea
cmp
das
shrb
mov
jae
xchg
push
mov
add
js
gs
pop
push
jg,pn
fnstsw
mov
add
xchg
xchg
inc
xchg
je
fiadds
pop
arpl
sbb
dec
push
push
and
test
in
cmp
int
adc
fiaddl
cld
pop
add
out
sti
and
lret
or
cs
sbb
sbb
fbstp
or
inc
xor
pop
and
dec
arpl
xchg
hlt
mov
xor
xor
into
int3
pusha
or
push
popa
outsb
fs
bound
imul
push
xchg
push
jl
mov
pop
std
rcll
sbb
pusha
inc
ss
enter
xor
adc
add
or
jbe
cmp
arpl
jne
inc
sbb
fldl
jns
push
adcl
enter
fadds
fwait
cmpsl
loope
and
test
cmp
pop
jge
push
repz
add
lods
lock
mov
xchg
stos
add
cld
loop
add
sti
mov
xchg
pop
cli
roll
cmpsb
push
cmp
add
les
int
scas
or
loope
loopne
mov
xor
jge
imul
cmp
shl
out
pushf
nop
scas
add
push
or
or
rorl
pop
inc
enter
sub
mov
inc
scas
push
inc
nop
push
add
arpl
cmp
adc
repnz
mov
add
xor
push
inc
inc
sub
jo
jle
iret
jmp
push
and
push
imul
xor
sbb
fs
xor
xchg
jbe
pop
xor
cwtl
fiaddl
jge
shr
xchg
push
mov
sbb
punpckhbw
dec
enter
pop
sub
jns
movsb
jmp
pop
je
daa
rolb
sub
push
push
xchg
inc
nop
adc
sbb
aas
xchg
cmpl
enter
add
and
aam
in
jle
movsb
or
mov
mov
pop
sub
mov
adc
inc
aaa
inc
cs
or
pop
push
push
sbb
add
repz
xor
adc
int3
mov
shlb
test
mov
or
sbb
or
jo
inc
jecxz
sub
mov
mov
sbb
lahf
roll
add
mov
xor
nop
mov
sbb
decb
inc
add
cs
adc
xor
sbb
ret
inc
jo
xorl
push
and
lea
insl
jae
ds
adc
cmpb
popw
jne
xor
mov
mov
inc
and
je
out
popa
ficoms
cmc
adc
xchg
push
jnp
push
fs
xor
fmull
adc
mov
fbstp
add
or
jno
lods
xor
inc
add
and
sbbl
and
cmp
or
add
in
loope
xor
jns
and
sbb
adc
add
mov
pop
shlb
ret
or
ja
add
push
or
or
adc
xchg
aam
or
rclb
outsb
inc
in
adc
mov
mov
mov
push
jo
or
sub
or
movsb
adc
insb
push
xor
and
xor
or
es
push
adc
or
push
and
inc
sbb
and
repnz
daa
pop
sub
and
sub
xchg
sub
sub
das
pop
xor
and
xor
xchg
xor
xor
aaa
pop
cmp
and
cmp
xchg
cmp
cmp
aas
pop
inc
pop
and
inc
jl
test
inc
inc
enter
pop
and
dec
jl
test
inc
dec
enter
pop
and
push
jl
test
inc
push
enter
sbb
and
testl
pop
test
inc
pop
and
pop
mov
pop
inc
dec
jb
adc
pusha
or
mov
cmp
enter
je
and
cmp
cs
add
mov
inc
setno
mov
sbbb
testl
daa
mov
pop
sub
fcoml
call
and
adc
add
mov
pop
adc
add
fistl
ret
popa
test
add
outsl
or
adc
addr16
or
jno
andl
push
xchg
xor
aaa
and
xor
iret
add
adc
cltd
xor
push
or
adc
and
xor
popa
mov
mov
xchg
imul
or
imul
inc
outsb
enter
pop
and
jb
jae
xchg
je
cmp
pop
and
js
jns
xchg
jp
jnp
inc
jl
mov
test
sbbb
andl
test
inc
mov
mov
pop
and
test
pop
and
test
inc
xchg
enter
pop
and
test
inc
popf
enter
sbb
mov
mov
movsb
les
cmpsl
mov
mov
mov
cs
or
dec
fadds
decl
sbb
dec
call
xchg
movhps
data16
cmc
and
push
sbb
cmc
loope
rorl
fs
push
add
mov
bound
push
jae
test
je
and
xor
xlat
inc
shrl
mov
xchg
inc
rcll
sti
adc
call
outsb
bound
push
adc
pop
or
adc
cmp
mov
or
les
nop
sbb
sbb
inc
xor
inc
add
sbb
sub
jne
xor
inc
stc
xor
or
adc
xchg
sub
jno
inc
pop
jbe
push
inc
or
adc
or
and
cmp
sub
inc
gs
xor
sti
mov
inc
jno
fcoml
jp
clc
insl
xchg
in
shrb
sti
fnstcw
sar
xchg
xchg
in
pop
push
sub
lock
add
jmp
and
orb
dec
lret
xchg
in
pop
dec
testb
dec
pop
jbe
lods
dec
xchg
mov
push
add
test
sub
outsl
and
insl
pusha
mov
loopne
and
jbe
push
bound
dec
ret
ret
sbb
sbb
add
sbb
mov
xchg
jp
add
shl
fstpt
pop
dec
add
popa
rcrl
xor
popf
inc
adc
iret
pop
add
repnz
lahf
nop
add
add
stos
push
and
add
push
xchg
cmp
add
sub
fsubs
cltd
sub
mov
fs
push
or
ror
cmc
dec
cmp
or
and
cmp
sub
popf
shrl
mov
das
testb
dec
js
ret
add
lods
pop
xor
loop
sbb
add
pop
cs
pop
cld
leave
add
jge
or
xchg
push
ffree
test
push
fdivs
hlt
mov
dec
mov
mov
pop
inc
cmp
insb
fcomps
xchg
fwait
ret
push
jo
add
cmpb
incl
or
loope
scas
sub
mov
inc
mov
into
adc
mov
cmpsb
jnp
mov
inc
jo
add
ja
out
jbe
add
mov
lea
inc
add
mov
add
mov
cmp
add
ja
xor
outsl
pusha
mov
pop
cli
push
inc
in
loop
add
mov
leave
add
out
dec
lret
cwtl
loop
add
pop
gs
cmp
push
sub
repnz
xorb
inc
add
enter
cltd
test
add
pop
subl
lret
std
out
push
dec
add
push
movsb
jae
das
sub
inc
sbb
lret
mov
or
sbb
mov
cltd
sbb
frstor
cmpsb
jno
cs
add
rcr
add
test
rclb
mov
lret
cmovae
sbb
jp
jbe
aad
adc
subl
dec
cltd
sbb
nop
mov
int3
in
pop
add
dec
lock
je
add
inc
rcr
xchg
add
int
add
mov
fs
push
add
ja
lods
mov
add
sbb
loopne
in
jne
add
push
cltd
in
rcrl
loope
push
dec
lock
mov
dec
nop
xchg
and
add
push
ljmp
adc
push
xchg
cs
loope
testb
or
out
sub
lret
clc
cmp
lock
shrb
pop
repz
aam
out
std
fadds
mov
psubusw
add
sbb
cmc
add
in
push
fsub
jb
push
jae
stc
xor
int
xchg
xchg
push
add
aad
clc
jb
das
neg
mov
mov
push
add
dec
fbstp
add
xchg
or
pop
pop
and
nop
cmp
mov
xchg
pop
sbb
jle
and
jb
add
adc
enter
add
add
mov
sbb
dec
or
or
jge
xor
push
leave
or
pop
dec
js
add
test
lret
sbb
gs
out
mov
int3
fistl
sbbb
lock
cwtl
pop
xlat
inc
ss
add
and
jmp
ss
clc
add
xchg
rclb
and
inc
or
cmpb
and
stc
add
mov
sbb
xchg
faddl
imul
adc
sub
daa
push
and
or
pop
push
dec
adc
in
addr16
xor
push
into
faddl
arpl
nop
fsubrp
outsb
loop
sbb
cmc
push
shrb
insl
cmp
inc
push
xor
out
int
and
xchg
add
fiaddl
lret
cmp
clc
dec
sti
push
ret
mov
sub
jne
add
mov
imul
xor
adc
mov
aam
inc
add
iret
xor
adc
stos
add
loop
push
push
sub
cli
sbb
add
add
cmp
jle
sub
lock
or
call
sub
jns
mov
fbstp
sub
sbb
rcl
mov
rcll
rorb
inc
bound
and
pop
mov
push
add
xchg
mov
ja
sbb
loopne
xor
cwtl
fidivl
mov
jb
jmp
inc
mov
xchg
test
stos
push
mov
js
sahf
xchg
adc
or
mov
stos
bound
ds
daa
testl
setnp
xchg
insb
nop
mov
jmp
lahf
popl
cmp
arpl
ss
sub
fs
insb
sbb
movsl
mov
xchg
xchg
test
pop
sub
add
xor
cs
and
sbb
lods
addb
in
mov
aaa
nop
fs
adc
jne
jecxz
xor
or
fiadds
sub
aam
loopne
add
cs
out
inc
aas
cmp
pop
call
cmpsb
add
push
and
pop
jge
add
inc
stos
test
imul
ret
mov
jno
adc
and
add
inc
add
and
add
js
inc
add
xorl
mov
into
dec
jns
add
scas
add
push
in
push
divl
inc
mov
xor
sub
mov
jae
add
sub
xchg
ljmp
das
and
lods
add
jae
and
cli
adcb
cmpsl
adc
leave
int3
sahf
sub
cmp
push
outsb
xchg
or
js
pop
sbb
adc
add
jnp
shr
movsl
imul
mov
jns
add
cmp
stos
test
loope
shr
addr16
mov
shll
add
in
inc
ret
pop
imul
int
les
cld
push
mov
add
xchg
push
push
sbb
add
loop
mov
pop
subb
add
mov
fs
test
xchg
lods
ljmp
lret
xchg
icebp
fdivrs
add
sub
push
std
push
jae
rorb
stos
ret
shlb
mov
inc
test
enter
rcr
sub
std
xor
dec
lahf
mov
lods
sbb
add
int
dec
ret
push
mov
pop
mov
loop
adc
add
lods
and
xor
add
push
push
push
insl
fdivs
add
je,pn
js
sub
in
call
in
cmpsl
jno
cli
ljmp
or
add
or
inc
xor
xchg
les
xor
push
ret
lock
adc
add
inc
test
sub
mov
pop
cmovge
or
cmp
mov
enter
fld
sbb
inc
pop
iret
and
repnz
inc
js
fdivrl
data16
inc
and
lahf
or
jns
inc
sbb
test
out
filds
jbe
jecxz
sti
repz
ret
add
leave
repz
mov
enter
lcall
dec
pusha
xor
mov
sbb
iret
push
mov
in
mov
loop
sbb
inc
dec
xor
test
aas
sub
and
mov
add
pop
lret
fs
sub
sti
js
sub
xchg
add
mov
leave
pushf
stos
call
in
and
mov
mov
add
sbb
jnp
xor
inc
push
lock
pop
pop
push
loopne
add
or
push
mov
rcl
stos
shlb
and
fildll
cmpsb
mov
int3
push
mov
xchg
inc
out
add
pop
cmpsb
into
mov
scas
add
jno
jns
iret
lock
add
fldl2t
mov
add
popa
mov
loope
in
and
mov
add
cmpb
repnz
xchg
in
movsb
cltd
shrl
push
sub
pop
arpl
fildll
cmp
ret
ficomps
je
loope
cmp
pusha
lock
push
rcl
push
mov
andl
jle
sub
mov
jo,pt
push
lahf
dec
cmpl
loop
adc
popa
sbb
out
in
fcmovbe
add
add
mov
gs
into
add
dec
or
jns
ss
add
rcr
xor
sbb
or
mov
imulb
mov
rclb
xchg
adc
pop
jecxz
cltd
lahf
fadds
fildl
xchg
adc
pushf
sub
cmp
je
sbb
or
adc
aas
test
mov
shrd
cld
test
mov
xchg
mov
ss
fistpll
jg
add
es
scas
scas
cmpsl
testb
and
loopne
gs
mov
cld
pusha
mov
sbb
pop
jo
outsb
mov
mov
sbb
add
add
xchg
xchg
jmp
shlb
dec
lcall
test
add
adc
shrl
add
inc
aad
push
inc
xchg
sbb
mov
inc
dec
add
add
fiaddl
orb
cmpsb
movsl
xchg
jnp
pop
adc
sbb
inc
add
pop
xchg
inc
ficoml
in
mov
and
mov
add
mov
pop
jg
fs
fwait
cwtl
sbb
daa
add
cmpsl
mov
adc
or
mov
outsl
hlt
mov
inc
adc
push
sbb
sub
insb
pusha
mov
add
inc
add
xor
cmp
fdivrs
xchg
fwait
shlb
cmp
daa
and
pushf
add
sahf
xchg
repz
cmp
mov
aas
and
pusha
sarb
push
or
cmpsb
inc
jge
add
mov
jecxz
sbb
cmp
js
testl
outsl
pop
and
jo
repnz
cmp
shll
addr16
addl
mov
mov
fwait
arpl
adc
subl
pop
xor
push
lahf
fs
add
rcr
add
push
add
mov
push
mov
cs
aas
repz
sar
movsl
shl
or
mov
inc
dec
jecxz
cmpsb
jmp
es
push
leave
adcb
jp
sbb
add
or
cmp
adc
lret
fadds
arpl
je
xorl
ret
cwtl
out
roll
fcompl
jp
add
sbb
in
sbbb
mov
push
movq
add
xchg
sbb
jb
jmp
shrl
sbb
jns,pt
add
nop
add
add
push
mov
popa
fsubr
xchg
out
add
mov
and
inc
push
dec
push
and
pop
push
push
lahf
cmpsl
fisttpl
push
push
pop
xchg
push
loop
mov
cmovs
dec
aas
cmp
dec
jns
shrl
das
out
or
sbb
jo
dec
pusha
dec
xchg
mov
and
push
add
cmp
pop
mov
dec
pusha
mov
push
test
add
imulb
adc
pop
rcll
sub
or
stc
push
aaa
shrb
jmp
xor
aaa
ror
sarb
in
jmp
push
xchg
jp
fiadds
ret
cmp
fldenv
xchg
mov
and
adcb
fstpt
add
or
pop
or
ss
add
test
sbb
mov
cmp
testb
mov
shll
ja
add
sti
add
adc
aad
mov
pusha
or
add
fcmovnbe
call
add
or
ljmp
int
je
pop
cmp
imul
movsb
sub
jg
nop
cli
inc
inc
add
inc
test
cmp
jo
test
lcall
adc
jb
add
insb
fmulp
addr16
push
repnz
sub
jmp
adc
out
shl
mov
popf
and
jb
fsubs
cltd
push
jg
pop
inc
pop
inc
inc
jns
sub
and
add
sahf
in
add
rcrb
int3
cmc
mov
pop
cltd
sti
scas
add
pop
sarb
adc
add
mov
hlt
out
add
ss
pop
inc
fcomps
out
lret
icebp
push
xor
xchg
ljmp
inc
pusha
pop
ret
sti
jp
add
jo
loope
or
add
inc
dec
mov
mov
rolb
add
dec
in
popa
and
mov
mov
jl
insb
out
add
jnp
sbb
loopne
movsb
add
sub
in
push
add
xor
mulb
add
xchg
mov
push
adc
adc
add
je
js
outsl
mov
cmp
jne
adc
cs
dec
cmp
bnd
verw
call
in
cwtl
and
sahf
loopne
mov
out
xchg
dec
fldenv
jo
pop
aad
pop
jno
je
cmp
cmp
iret
push
in
sub
add
jnp
pmulhw
test
fnsaves
fwait
out
and
xor
addr16
xchg
add
xchg
daa
leave
cmp
lcall
mov
adc
outsb
sbb
repnz
push
jmp
push
in
inc
fs
xorb
popa
cmp
push
add
sar
int3
sub
push
mov
cwtl
mov
loopne
or
stos
pop
test
imul
lods
adc
lcall
aaa
inc
adcl
xlat
and
pop
push
sbb
mov
jbe
push
bound
movsb
fisubrl
jge
xor
xor
lds
in
jle
pop
faddp
pusha
jnp
cmpb
mov
mov
xor
rol
in
dec
insb
pusha
ret
cmp
or
sub
dec
add
loop
pusha
add
fidivrl
xchg
mov
roll
inc
dec
gs
movsl
popl
repz
pop
dec
adc
sbb
rol
push
push
out
fistpll
push
popf
jo
add
stos
inc
add
jmp
mov
mov
lea
out
stc
xor
dec
pop
jae
pop
adc
pop
movsl
add
pop
addr16
pop
loope
xadd
call
add
mulb
and
or
movsl
add
dec
cmp
mov
add
pusha
mov
dec
mov
aas
push
add
test
mov
sbb
pop
push
xor
and
add
imul
pop
or
adcl
inc
clc
jl
ret
xadd
lock
fildll
mov
jl
bound
xorb
fmuls
les
lods
dec
cmpl
sub
adc
push
inc
clc
call
aad
cmp
pop
pop
mov
push
out
add
cmp
cmp
cli
aas
or
mov
and
loope
push
add
stos
sub
push
int
add
adc
mov
jae
out
fcmovu
mov
lock
sub
mov
in
inc
clc
pop
push
in
jg
pop
xor
lods
adc
add
sbb
mov
icebp
repnz
push
pop
xlat
fisttps
inc
in
add
xor
int3
add
add
and
test
popa
inc
in
cs
popf
add
inc
stos
dec
cmpsb
add
into
add
sub
les
jae
add
sbb
add
mov
push
lret
add
push
sarb
jmp
mov
movsbl
movsl
add
add
cwtl
pop
cmc
dec
shl
add
rcll
jge
jbe
add
jp
rorl
roll
js
aas
addr16
cmp
add
pusha
fptan
mov
sbb
rol
xchg
xlat
inc
xorb
mov
mov
cmp
insb
xchg
fimuls
in
test
add
jo
xlat
or
add
xorb
ljmp
nop
fisubl
cld
adc
add
xchg
or
in
sbb
ret
and
rcrl
fisubrl
mov
popa
sahf
mov
dec
push
or
incb
cmpb
or
add
cmp
enter
pop
pusha
fistl
and
shll
jno
addb
add
adc
or
xor
sbb
add
stc
jg
ret
push
and
sti
frstor
and
sub
lea
and
and
or
or
int3
out
xor
popa
leave
je
loop
add
das
cmp
jge
xor
push
std
add
shrb
adc
push
sub
push
nop
mov
dec
adc
adc
sub
pop
pop
add
inc
add
movl
pop
repnz
mov
fs
and
shlb
add
jae
or
arpl
pushf
clc
add
in
das
inc
mov
shl
mov
stc
push
ss
add
sbb
pop
cmp
inc
cmpsl
movsb
enter
nop
add
orb
pop
mov
xor
fmuls
adc
or
aas
xchg
lods
int3
rcrb
stc
jle
xchg
push
jecxz
or
cmp
rcl
adc
add
push
add
cs
es
cld
dec
cli
jns
add
movsb
sub
sbb
lock
xchg
pop
pop
fwait
adc
sub
add
add
xchg
sbb
add
es
adc
repz
push
inc
test
cmpsb
fwait
add
ja
stc
add
sub
sarl
lock
lock
add
dec
test
xor
sub
add
outsb
roll
xor
pop
add
subb
add
dec
fprem
or
ret
xchg
ja
sub
add
xor
cmp
adc
scas
cmpsb
sub
je
add
pop
add
jbe
lret
sbb
stc
loopne
adc
ficompl
cmpsb
add
mulb
jle
or
mov
push
arpl
xchg
sbb
xor
or
loop
scas
mov
mov
add
repnz
sets
pusha
sbb
jecxz
or
mov
lods
add
sub
jge
test
cmpl
push
pop
cmp
enter
add
cli
push
movsb
add
mov
adc
jo
inc
ret
test
scas
in
pusha
inc
push
add
call
push
add
insl
mov
mov
out
icebp
jecxz
scas
xor
adc
popf
repz
into
fdivs
or
jmp
jb
mov
xchg
adc
sub
mov
jecxz
call
gs
pusha
ret
xchg
push
add
out
fdivrl
sahf
inc
add
cli
test
jnp
lods
cmp
xorb
sbb
xchg
adc
lods
push
xor
add
and
leave
ds
bound
push
loop
jnp
les
test
mov
pop
adc
sahf
nop
mov
testb
adc
insl
add
mov
cmc
lret
adc
es
xadd
pop
adc
sbb
int3
push
pop
orb
in
jp
dec
dec
push
xor
jnp
iret
ja
out
xchg
dec
jno
pop
insb
mov
and
inc
ret
sbb
pop
movsb
push
pusha
xchg
mov
ds
xchg
sbb
jecxz
jno
adc
rclb
rcrb
push
or
loope
xor
adc
add
add
pushf
push
dec
es
repnz
adc
inc
popf
and
adc
insb
out
and
mov
mov
fiadds
shrb
or
push
int3
ljmp
cli
imul
divl
fs
jg
sub
test
icebp
sbb
es
add
add
mov
in
jp
sub
add
cmpsb
push
cmp
je
daa
mov
and
add
push
xor
repz
push
rcrb
inc
loopne
gs
cmp
and
inc
test
xor
mov
adcl
adcb
lret
pop
pop
lahf
adc
cmpsl
cmpb
push
jno
or
test
push
adc
adcl
mov
mov
ret
frstor
push
stos
xlat
inc
aam
es
or
test
xchg
dec
ret
xor
and
iret
dec
jl
mov
scas
jb
pop
rolb
add
mov
movsl
fwait
rcll
jb
int
push
xchg
frndint
mov
in
cmp
cmpsb
add
insb
push
inc
add
sub
and
jmp
clc
jmp
rolb
fists
imul
mov
mov
fdiv
sbb
lock
stos
mov
cmp
push
in
and
out
mov
shl
pop
xchg
add
outsb
lret
sub
jb
add
fwait
mov
pop
scas
int
add
push
sbb
jb
mov
xchg
mov
stc
sub
add
ret
push
in
pop
add
cmp
stos
inc
mov
adc
dec
sub
rcrb
sahf
xor
ljmp
adc
daa
add
js
stos
add
push
inc
dec
sub
mov
jb
mov
cld
jno
add
mov
call
sbb
aad
dec
pushl
dec
scas
shl
lock
or
test
int3
lds
dec
adcb
mov
leave
in
or
add
jae
push
xacquire
add
adc
fwait
sub
loope
jmp
mov
add
dec
test
aam
mov
inc
xchg
jne
aaa
cmp
out
sub
cmp
push
mull
pop
aas
mov
jno
adc
in
add
adc
mov
data16
test
push
in
add
cmp
xchg
add
sub
fcomps
into
mov
lea
add
cmp
add
arpl
cmc
stos
lods
pop
add
jne
aam
hlt
sbb
add
or
lock
lcall
iret
aaa
sti
std
or
int3
add
mov
js
dec
lret
std
xchg
add
jae
and
stos
mov
or
lahf
ja
mov
add
test
lods
aad
mov
dec
add
shl
or
add
xlat
xchg
add
aam
shr
dec
movsb
mov
add
stos
nop
cmp
es
adc
mov
into
mov
add
out
addb
push
subl
sbb
pop
jae
pop
sbb
mov
add
sbb
cbtw
mov
add
fst
add
or
add
or
xor
lods
pop
add
xchg
push
fwait
popf
arpl
add
and
and
xchg
ret
gs
or
pop
pop
add
push
pop
stos
xchg
imul
int
iret
dec
cwtl
aas
push
cli
sbbb
push
jmp
ss
mov
add
pop
jp
jg
shll
lea
shlb
add
xor
out
dec
addr16
jno
add
add
dec
add
popa
xchg
mov
into
xor
loop
mov
pop
dec
out
adc
lods
push
xchg
inc
add
push
jnp
inc
inc
xchg
push
jns
out
add
int
fsubrs
repnz
les
dec
lds
mov
paddusb
insl
add
int
push
add
inc
rorb
or
cmpsb
cmp
cmp
xor
les
ret
xor
andps
outsl
mov
icebp
dec
movsl
push
test
sbb
xchg
mov
iret
cli
jne
mov
push
dec
popa
mov
or
mov
nop
push
mov
mov
push
fwait
push
inc
adc
push
je
push
pop
idivl
sub
mov
or
push
inc
sbb
stos
xor
jae
lds
push
mov
mov
icebp
mov
insb
outsl
jae
call
sub
jns
scas
adc
push
adc
push
call
repnz
sub
bound
pop
and
adc
sbb
inc
jns
mov
add
pop
mov
add
or
push
outsb
insb
scas
push
mov
sub
inc
js
or
sub
inc
dec
adc
cmp
imul
adc
gs
dec
xchg
mov
mov
addl
inc
out
mov
mov
inc
mov
popa
les
mov
mov
sbb
icebp
and
jns
dec
js
push
jns
bswap
adc
jb
push
je
push
jo
push
sbb
inc
sbb
js
sbb
nop
sbb
sbb
inc
and
push
data16
sbb
lods
mov
data16
jmp
lods
lret
jns
and
sbb
push
dec
cld
and
inc
imul
and
mov
cmpsl
lea
call
and
xchg
and
push
test
sbb
or
inc
and
push
cmp
sbb
cltd
xchg
adc
mov
loopne
mov
push
adc
or
popa
fs
pop
add
inc
jns
fisubl
inc
sbb
push
add
mov
mov
js
sbb
inc
rclb
push
into
popf
hlt
jmp
add
push
js
adc
adc
xor
scas
cwtl
fimull
fs
imul
outsl
insl
dec
popa
outsb
xchg
mov
mov
sahf
fsubrs
arpl
push
adc
arpl
sbb
enter
jbe
sub
mov
outsl
xchg
cs
insb
xor
insb
faddl
sbb
push
mov
fistl
sub
enter
inc
sbb
cmp
inc
jne
cltd
push
inc
mov
inc
dec
adc
adc
mov
mov
fmul
and
or
dec
sub
lret
inc
push
gs
lret
cmpsb
ds
inc
cs
jp
sbb
inc
repnz
inc
or
add
imul
pushf
cld
lea
adc
push
xchg
mov
sbb
jne
rorl
inc
pop
mov
insl
dec
xor
inc
dec
in
sbb
scas
adc
adc
cmp
rcr
xchg
and
push
push
and
test
dec
push
inc
test
out
shlb
add
pop
sub
jo
xor
inc
sub
xchg
and
mov
test
push
movsb
cmp
lods
test
pop
push
cmpl
push
je
mov
loope
pusha
nop
and
dec
jmp
les
int
arpl
rcrb
hlt
xor
sahf
movsb
inc
sbb
dec
ret
mov
imul
or
xor
sub
in
pop
cs
inc
imul
je
faddl
cmp
or
sub
or
sbb
les
or
jb
sbb
and
push
mov
sbb
jecxz
pop
aam
jg
inc
gs
mov
push
jb
lock
ss
notl
mov
out
je
and
ljmp
movsb
xchg
jo
push
test
and
inc
pusha
outsl
xor
cmp
or
inc
and
scas
mov
cmpsb
mov
es
push
scas
sbb
push
outsb
adc
or
xchg
cmp
sbb
lods
fsts
in
dec
pop
mov
sub
sbb
sbb
dec
push
jo
bnd
push
in
jae
ja
xor
push
rorl
pop
arpl
sbb
shrl
push
add
outsl
imul
push
fs
les
lret
push
inc
inc
jns
inc
fwait
je
and
sub
test
je
inc
inc
jne
dec
negb
jne
jecxz
rcrb
push
mov
enter
repz
push
lcall
mov
push
xor
test
dec
stos
js
clc
inc
gs
inc
gs
adc
cmp
fs
repnz
jae
adc
shrl
pop
movsl
and
adc
jae
xchg
cmpsb
dec
repnz
add
imul
cwtl
inc
pop
pop
mov
push
and
insb
push
dec
fcomps
gs
dec
imul
rol
gs
and
inc
stc
push
sub
mov
adc
shlb
sub
bound
jb
into
mov
xor
add
push
xlat
jno
popa
dec
insl
jo
mov
ljmp
xor
fcom
mov
and
aam
sbb
push
dec
dec
adc
push
and
adc
or
dec
xorb
add
jl
jbe
cmp
mov
cmpb
je
sub
pusha
mov
mov
jnp
test
jne
xchg
pop
and
popa
adcb
push
mov
sub
add
jne
pop
pop
cmc
fstps
fsubrs
pop
sti
mov
sbb
push
inc
push
call
insb
scas
daa
data16
cmp
push
mov
fs
inc
inc
xchg
and
fists
push
push
cmp
jae
push
cmpsb
dec
jle
push
mov
int3
adc
add
push
xchg
fwait
sbb
fwait
adc
xor
jmp
inc
dec
inc
cmp
inc
adc
je
push
enter
and
dec
addr16
xchg
rcrb
add
cmp
jne
rcll
push
test
mov
call
imul
sbb
xchg
adc
jb
or
fld
inc
addb
push
jg
vunpcklps
xchg
or
mov
cmpl
add
outsb
xchg
test
je
or
in
xchg
ds
js
ljmp
sub
jae
add
orl
inc
fisttpll
int3
jne
mov
cmp
sub
sbb
leave
pop
push
sbb
pop
dec
sub
push
sbb
dec
jne
decl
test
mov
push
les
sahf
push
add
pop
repnz
stc
push
cmp
add
jo
add
les
add
sub
add
and
cmp
dec
clc
add
cmp
hlt
aas
push
sub
add
pop
push
inc
add
pop
pop
mov
inc
sti
pop
pop
test
push
mov
xor
mov
add
pop
in
jno
jo
xchg
pop
out
fs
bswap
std
add
stos
lret
aad
and
or
andl
mov
push
hlt
dec
add
out
movb
int3
add
adc
jno
or
movsb
adc
add
jbe
out
add
dec
lret
inc
jns
add
pushf
hlt
aad
shll
add
bound
mov
pop
lock
sahf
and
lcall
cld
mov
ljmp
adc
imul
popf
filds
xor
xlat
and
out
jae
add
aam
add
xor
jae
nop
icebp
mov
loope
adcb
lds
std
add
add
cmp
sbb
inc
shlb
and
in
add
aaa
jne
add
jmp
dec
repz
xor
xchg
stos
xorb
push
int
inc
mov
pop
pop
loopne
or
sahf
fiadds
punpckldq
mov
loopne
in
sbb
pop
stos
cmpsb
roll
mov
fisttpl
mov
and
pushf
cmp
add
push
add
jnp
cmp
test
xchg
add
jo
sbb
js
repnz
xor
sarb
adc
cmp
incl
add
adc
add
aaa
mov
xor
icebp
ds
push
aam
sbb
add
inc
shlb
xchg
add
jp
or
iret
or
adc
gs
and
mov
js
testb
push
mov
das
and
call
add
xor
inc
add
adc
mov
add
out
ret
in
sbb
in
pavgw
push
mov
mov
aam
rolb
icebp
cmp
je
nop
adc
adc
jne
mov
stos
loopne
int3
add
imul
lret
push
or
add
call
xchg
mov
lock
sbb
adcb
add
adc
adc
insl
scas
mov
outsb
mov
outsl
or
cmp
sbb
divb
pop
add
cmp
lcall
cltd
js
mov
add
divl
xchg
scas
dec
mov
addb
inc
bound
push
in
add
jge
addr16
jns
pop
fcomps
ret
add
mov
adc
subb
mov
push
sbb
pop
fcmovnu
out
imul
add
lcall
add
in
je
jno
xor
test
clc
jmp
lds
add
jo
jmp
popf
pop
mov
or
push
sbb
jb
mov
pop
daa
mov
jo
push
and
out
add
lea
add
dec
int3
into
add
aad
loopne
dec
fistps
jne
adc
out
add
mov
cmpsl
aaa
cmp
pop
jae
or
mov
add
fstpl
lods
or
pop
jge
xorb
in
add
repz
sahf
test
mov
call
mov
sar
xor
jg
add
lock
jp
add
ljmp
sbb
cmp
inc
add
imul
add
lret
xchg
mov
push
je
add
sti
cld
stos
jle
es
cld
ret
cmp
cmpsb
aad
dec
sbbb
dec
cmc
add
fiaddl
loop
jne
add
fcomps
movsl
sbb
cmpsb
insb
sub
or
in
nop
add
cmc
push
pop
jae
add
popa
jmp
fsubl
cmp
subb
nop
add
jnp
cwtl
mov
fs
push
mov
push
add
mov
mov
pop
or
add
cmp
or
ffreep
adc
data16
add
push
out
shlb
addb
lods
sbbb
cmpsl
in
or
cmpsb
movsb
cwtl
dec
jae
jno
mov
test
sahf
mov
nop
mov
xchg
add
push
sub
add
inc
xchg
popa
or
rclb
pop
mov
sbb
inc
jg
add
subb
int3
jb
add
arpl
pop
push
add
sbb
scas
mov
add
push
dec
xchg
add
test
inc
add
cmp
js
xor
into
xor
and
imul
add
sub
aam
iret
mov
add
push
mov
dec
sub
pop
mov
pop
add
addl
imul
in
add
aam
inc
iret
test
mov
mov
mov
or
addr16
sbb
lahf
test
jb
enter
push
movsb
xor
sbb
cmp
xchg
or
xor
insl
push
das
add
adcb
and
sbb
jge
or
test
xchg
add
or
mov
scas
call
dec
or
jg
add
fnstsw
fiaddl
aam
int3
out
repz
sahf
dec
shlb
inc
adc
push
xchg
leave
inc
push
fistpll
out
xchg
add
push
cli
stos
in
orl
mov
xor
icebp
int
lcall
mov
push
jb
pusha
rcrl
data16
xorl
int
shlb
cmp
add
lret
lods
mov
push
cltd
xchg
add
addr16
inc
stos
add
mov
iret
sbb
aad
add
xor
add
repz
pop
add
or
and
aam
add
icebp
xchg
or
mov
adc
mov
xor
or
sbb
fildl
lock
std
cwtl
addb
dec
ret
adc
cmp
and
sti
add
popa
inc
mov
aam
jno
mov
clc
dec
xor
jp
rol
das
cmc
les
xlat
jae
sub
lret
test
dec
xchg
insb
pop
xchg
out
andl
add
aam
leave
or
cwtl
add
jo
fiadds
push
mov
pop
add
adc
sbb
gs
add
fildll
mov
out
leave
fldenv
push
xchg
add
inc
push
dec
invd
fisubs
aas
arpl
call
sahf
xor
punpckhbw
insl
out
les
push
pop
jg
rcl
and
add
addr16
ljmp
sbb
pop
adc
push
mov
imul
jg
adc
jp
mov
mov
out
cmp
rolb
icebp
push
jmp
fmuls
int3
jb
add
in
add
xchg
cmpsl
adc
sbb
clc
fidivrs
add
or
push
clc
and
into
pop
add
mov
mov
test
push
add
icebp
pusha
es
jne
jl
add
in
dec
mov
lods
sbb
pop
cltd
rorb
pop
jb
test
pop
xlat
push
bound
lcall
push
jne
add
rolb
fmul
push
inc
addr16
imul
jg
sub
daa
push
in
ja
add
insb
scas
popl
repnz
outsl
rolb
mov
xor
add
cs
mov
add
ret
test
jo
in
shrb
call
rcll
add
adc
xor
hlt
cwtl
inc
xchg
lahf
add
lds
and
pop
insl
or
fs
push
add
jno
push
fildl
add
loopne
and
mov
sbb
notb
mov
popf
loopne
cmp
mov
paddq
pushf
cmpsl
ret
mov
enter
pusha
xchg
mov
pop
inc
mov
add
cli
pop
jl
push
push
lret
arpl
clc
xchg
xchg
sub
mov
or
sahf
or
sub
add
je
fs
rol
jnp
lret
add
sti
pop
movsl
iret
mov
mov
mov
fiaddl
test
mov
or
mov
rolb
mov
fsub
test
jo
pusha
mov
scas
mov
out
add
dec
mov
adcl
jp
or
push
stos
popf
xor
filds
xor
jge
pop
or
adc
cwtl
mov
fs
cmp
jg
or
addl
or
xor
mov
loopne
nop
out
add
cmpsl
into
push
xor
dec
jle
cmp
adc
lock
mov
rorl
aas
divl
outsb
sub
mov
fildl
cmc
add
hlt
fwait
cmp
idivb
ljmp
pop
inc
add
lret
mov
unpcklps
clc
lahf
cmp
mov
cmpb
aaa
xlat
xchg
cmc
leave
push
cld
push
pop
daa
sub
dec
adc
xorb
add
cli
push
fisubrs
add
add
sub
dec
jnp
lock
stc
sub
inc
out
pop
xor
int
lahf
inc
dec
bnd
sbb
jmp
add
aas
mov
add
mov
and
mov
xchg
inc
sub
pop
ss
mov
add
fcompl
add
test
cld
sbb
adc
mov
mov
pop
pop
pop
and
fstl
jg
and
push
push
pop
mov
roll
into
xlat
mov
rcrb
icebp
sahf
fptan
sbbb
add
cld
dec
xchg
pop
cmp
add
lret
jecxz
test
add
mov
js
add
push
sarl
ret
insb
jg
cmpsb
mov
out
add
lret
rolb
push
xchg
add
ja
cmp
shrb
fwait
pop
cmpsb
fistpll
sbb
sbb
sbb
cmc
inc
movb
xlat
push
dec
adc
fiaddl
xchg
out
add
adc
stos
in
cs
push
xor
mov
nop
adc
data16
movsl
xor
add
scas
pop
insb
outsl
xor
dec
jb
jge
outsb
adc
mov
cmp
mov
bound
fs
sub
mov
int
xchg
pop
lock
fcoms
sarl
int
mov
push
outsb
pop
jmp
ds
inc
dec
test
add
les
inc
insb
add
in
iret
lods
xchg
push
mov
lret
or
outsb
popa
mov
aad
sbb
les
mov
pop
pushf
xchg
and
scas
mov
fs
imul
das
rorb
mov
jp
inc
daa
mov
sbb
je
xor
dec
add
test
inc
mov
dec
pop
dec
in
cmp
add
lea
out
mov
or
pop
repnz
xchg
cmc
mov
fistl
mov
and
arpl
add
xchg
lock
xchg
mov
push
or
das
add
jmp
ret
inc
adc
cmp
lea
xchg
stc
xchg
add
lret
ljmp
lods
inc
sti
out
pushl
cmpb
imul
dec
mov
les
adc
add
sahf
out
mov
shlb
mov
inc
mov
jecxz
add
dec
jle
inc
push
lahf
in
and
test
mov
and
psubq
mov
pusha
lret
popf
lock
ja
pop
pusha
incl
add
cli
push
shlb
inc
addb
add
cmp
ja
lahf
pop
add
sub
push
sahf
bound
addr16
add
fistl
cwtl
add
aad
mov
add
dec
into
sbb
add
mov
lock
push
in
cmp
icebp
cld
mov
dec
xor
mov
push
sub
clc
or
loope
enter
mov
sbbb
inc
push
and
in
xor
add
popf
test
cwtl
add
ja
lds
xchg
gs
pop
mov
bswap
pop
fiadds
idivb
in
xchg
mov
xor
pop
add
stos
js
xchg
lods
mov
sub
stc
add
cmp
xor
lret
dec
add
shufps
out
cld
pop
cmp
cmpb
out
dec
sahf
cmc
or
mov
dec
mov
add
stc
or
add
mov
roll
jl
in
sbb
jecxz
lahf
jge
and
insl
mov
sbb
rol
movsb
jle
shlb
enter
ja
fildll
jnp
add
xchg
loope
mov
pop
insb
subl
and
mov
pop
lea
mov
mov
iret
push
add
scas
push
mov
fimull
add
cli
out
loopne
stos
cmc
js,pt
add
mov
add
push
ret
mov
mov
push
xor
das
aas
pusha
and
pop
rcrb
or
add
add
std
sbb
xor
in
cmpl
xchg
inc
movsb
loopne
mov
aad
fstl
add
ret
addl
push
insl
dec
fiadds
shll
jecxz
jbe
addl
movsl
jae
rorb
inc
test
mov
jno
subb
jge
push
add
shrl
repnz
ljmp
add
sbb
add
imul
and
movb
adc
sub
add
cld
push
cltd
shll
jmp
insb
shrb
out
jmp
cmc
add
out
loopne
mov
dec
add
sbb
mov
dec
jns
mov
fstl
les
mov
add
daa
int3
or
add
in
jo
fstl
les
insb
loopne
inc
movsl
std
xchg
jle
xchg
add
cmp
testb
xchg
rorl
in
mov
loope
cs
add
sbb
dec
ds
jecxz
add
lret
test
fiadds
push
pop
outsb
sti
mov
inc
add
jbe
test
push
inc
mov
adcb
adc
mov
add
jbe
pop
add
adc
and
pop
pop
incb
sbb
push
test
xor
add
subl
push
loop
in
add
cld
push
mov
sub
jl
cs
inc
bound
add
ds
pop
out
int3
imul
cs
push
paddusb
mov
jmp
mov
mov
jae
inc
add
inc
jo
xchg
pop
scas
or
ljmp
mov
fildl
int
cmpsl
repnz
adc
mov
shrb
adc
or
mov
jmp
pop
push
loop
fcmovbe
pop
xchg
xchg
mov
or
repz
sub
in
mov
movsl
push
mov
mov
mov
dec
popl
jbe
shlb
aaa
add
dec
mov
pop
cld
lock
jge
add
mov
push
mov
es
push
jmp
sbb
imul
cwtl
mov
mov
outsl
rcrl
fadd
push
cmpsl
mov
popf
sbb
jle
xor
push
sub
or
call
fcoml
and
ds
jns
pusha
dec
inc
int3
xor
adc
fstps
mov
jle
sbb
outsb
cli
sbb
and
enter
cs
lock
std
sarb
mov
cs
fcmovu
addr16
test
cmpsb
pop
sub
pop
and
xchg
aaa
jg
mov
sub
adc
dec
gs
outsl
push
inc
xor
out
popa
cmp
addr16
leave
daa
add
sbb
sub
int3
cmp
or
js
pop
lock
sub
leave
bound
imul
cmpsb
sbb
mov
test
sbb
es
jge
hlt
mov
icebp
and
pop
clc
add
insb
stc
mov
daa
or
cmp
mul
jle
jle
nop
xor
adc
lret
mov
pop
xor
sbb
mov
xorl
es
iret
add
mov
mov
add
lods
sbb
dec
fs
fucomp
pop
dec
xorb
cmp
sbbl
lret
inc
dec
ret
add
pop
and
sarb
inc
push
jno
cwtl
adc
negl
in
shrl
mov
xchg
or
dec
mov
adc
test
lahf
sub
mov
daa
adc
dec
mov
dec
adc
pop
mov
mov
ss
xchg
les
insl
sbb
mov
stos
and
and
push
jl
cmp
inc
andb
roll
dec
mov
std
movsb
daa
push
lret
jo
cltd
mov
leave
dec
cmp
bound
inc
sub
test
jo
sub
stos
mov
out
outsl
popa
gs
jbe
sub
push
cmc
rclb
jno
jl
test
cmovo
push
scas
mov
push
jb
rcr
shlb
sbb
pop
ffree
add
push
pop
dec
mov
into
mov
pop
leave
sti
stos
add
mov
addb
mov
out
mov
inc
cmp
mov
sbb
xor
or
addr16
xor
push
xchg
push
xchg
mov
sahf
pop
xchg
push
fwait
xchg
adc
stos
out
aas
mov
aas
cmovne
xchg
mov
pop
mov
add
cmp
inc
pop
bound
add
sbb
inc
jl
add
jae
sar
nop
ret
add
mov
push
sub
test
mov
inc
shll
pop
repz
lods
jbe
jmp
or
sbb
add
mov
cmp
pop
pop
fmuls
mov
xchg
xchg
rolb
mov
les
and
xor
loopne
mov
into
rorb
add
xor
sbb
inc
in
jge
shrl
add
xor
psubw
fnstcw
repnz
mov
daa
cmp
add
pop
sahf
jno
jno
rsm
outsl
pop
xor
fistpll
sbb
xchg
pop
mov
add
cmp
ja
xchg
add
int3
fsts
add
dec
into
inc
mov
add
in
mov
mov
or
mov
repz
mov
mov
gs
notb
pop
xor
add
sub
cmp
inc
out
cmp
mov
jns
sub
add
add
push
sbb
mov
jecxz
add
lods
sub
aas
xor
cmp
outsb
into
fstl
xlat
movaps
mov
dec
xchg
in
call
dec
loop
push
add
addl
add
dec
repnz
insb
push
jno
push
das
ja
push
cmp
xlat
loopne
dec
add
adc
mov
cmpsb
std
shlb
add
push
sub
out
sub
clc
fldl
dec
and
fstpt
cmpsl
add
push
ja
sub
cmp
xor
xchg
scas
loopne
lods
scas
jecxz
mov
mov
ret
lock
add
pop
sub
lret
sbb
cmp
cmpsl
adcb
xchg
add
shr
xor
mov
jl
out
scas
add
inc
adc
dec
pop
movl
pop
add
jne
mov
test
mov
pop
dec
xchg
add
stos
jmp
in
inc
lock
xor
mov
push
test
es
cmp
shlb
add
mov
inc
add
imul
out
out
pop
ret
add
enter
jbe
cmpsl
add
shlb
add
popf
inc
enter
loopne
xor
popl
inc
adc
add
loopne,pn
cmp
addr16
and
jnp
lock
jl
add
enter
sbbl
stos
add
dec
or
rcl
xchg
repnz
cmpsb
jbe
add
sbb
mov
sub
loop
movsb
or
push
loope
jne
cmp
jg
push
push
mov
pop
add
repnz
add
repz
cli
or
inc
sub
xor
or
add
xlat
mov
aam
fistpll
inc
int3
cmp
inc
enter
xchg
inc
call
jb
lods
cmpsl
int
mov
leave
andl
mov
ret
rcrb
push
cltd
ds
pop
pusha
and
xor
in
or
add
loope
mov
arpl
pop
jg
icebp
sbbl
sbbb
bound
mov
sub
sbb
das
lods
test
stc
ss
adc
cmp
repnz
ds
daa
sub
cmp
mov
cmpsb
aaa
orb
push
mov
sarb
pushl
in
push
pop
arpl
jns
fldcw
jno
dec
pop
ja
lret
hlt
sbb
sbb
and
sub
stos
xor
stc
mov
decb
and
loopne
popf
add
in
lret
clc
wrmsr
mov
cli
add
push
push
xor
add
adc
sbb
clc
test
loop
add
es
dec
or
stos
mov
add
aas
addr16
hlt
push
jmp
add
push
loop
add
clc
pop
and
lods
out
sbb
pop
lret
xor
fsubs
call
imul
mov
and
mov
daa
in
sub
add
adc
and
pop
dec
nop
cmp
inc
jo
and
inc
int
sbb
daa
das
sti
add
mov
inc
shl
mov
shlb
xchg
or
das
test
add
idivl
cwtl
cwtl
xchg
add
scas
xchg
popf
jno
je
mov
in
and
sbb
loope
pop
out
out
mov
mov
pop
scas
inc
or
xchg
sub
add
lods
xchg
mov
add
iret
pop
mov
les
stos
lcall
add
adc
mov
add
jle
cmp
mov
mov
or
jp
add
not
pop
push
inc
jecxz
mov
and
add
roll
add
mov
fcoms
repnz
add
dec
adc
add
int3
in
add
aam
sub
in
hlt
cmp
fucomi
sub
sbb
test
xchg
and
test
xchg
mov
mov
pop
pop
lcall
and
pop
pop
cmp
mulb
sti
or
ljmp
adc
inc
in
or
fisttps
pop
or
test
mov
jmp
push
call
lds
test
stc
js
jge
das
pop
add
mov
cmpl
jne
mov
mov
mov
pop
pop
ss
aam
xor
jmp
mov
jne
add
adc
icebp
call
movsb
nop
inc
adc
jne
fildl
or
cmp
lds
sub
pop
out
stos
add
dec
adc
mov
pop
lods
faddp
and
roll
xchg
ja
ror
or
mov
jno
mov
pusha
and
int3
xchg
aam
jne
cld
out
cli
pop
call
adc
inc
rcrb
inc
add
jne
sub
pop
std
mov
out
add
pusha
cmpsl
add
jns
add
cld
cmp
int3
cmp
mov
pop
dec
jge
add
out
add
pop
insb
arpl
jne
mov
addr16
loope
pop
or
mov
inc
leave
out
push
add
enter
in
lret
mov
das
mov
xchg
add
dec
not
add
dec
stos
hlt
loop
mov
xor
lods
add
sub
cmp
outsb
mov
ds
jmp
lret
sbb
insl
or
fistps
add
lds
adc
rcr
out
ja
ret
test
into
xchg
or
test
push
dec
or
out
aam
es
enter
xor
iretw
faddl
mov
insl
mov
or
imul
out
pop
fidivrl
jb
or
mov
add
popf
dec
push
stos
dec
add
mov
adc
test
daa
pop
fsubl
mov
add
mov
jge
fwait
pop
shl
jnp
xor
push
or
or
adc
push
cmp
mov
push
add
outsl
mov
sub
dec
mov
inc
sbb
jnp
add
sahf
clc
xchg
sub
ljmp
inc
loop
loopne
mov
mov
xor
push
pushf
stos
add
or
add
int
bound
je
ljmp
push
dec
add
loope
outsb
add
cwtl
sbb
inc
pop
add
mov
add
inc
out
add
mov
ljmp
in
inc
cmp
pop
rcrl
in
insb
jns
cwtl
adc
rorb
or
lea
mov
inc
rorl
add
aad
sbb
pop
xchg
or
jae
ret
adc
decb
sbb
pop
mov
add
xlat
cwtl
js
into
dec
out
add
addr16
jg
loopne
sbb
push
push
push
roll
addb
add
pushf
dec
mov
mov
add
into
das
dec
add
hlt
jl
add
cmp
push
lea
sbb
mov
cld
pop
and
sbb
in
lret
incb
shl
push
jno
in
hlt
mov
lods
cmpb
mov
jmp
xor
stos
pop
sbb
shl
push
repnz
out
jns
jg
pop
xor
data16
or
jne
sti
xchg
pop
pop
outsb
test
imul
fnstsw
fnop
add
fisubrs
add
inc
xchg
enter
cltd
out
xor
insb
cmp
shl
xchg
std
fcmovne
adcb
add
in
mov
int3
pop
data16
add
ljmp
mov
pop
mov
rolb
pop
cli
pop
icebp
dec
add
pop
gs
xor
adcl
pop
add
out
sti
fistl
add
adc
mov
test
mov
rclb
stos
push
pop
mov
cwtl
jle
lahf
xorb
popf
rorb
aam
aaa
mov
inc
stos
push
dec
hlt
ds
push
imul
mov
lock
sti
inc
sahf
das
out
sub
adcl
inc
dec
mov
add
jb
dec
mov
call
push
push
movb
jecxz
sub
add
adc
insb
lods
jp
sbb
adc
lods
jge
add
cwtl
fsts
jae
push
jo
rolb
test
jnp
mov
dec
loopne
das
sub
pop
iret
clc
out
dec
icebp
mov
cmp
push
andb
pop
lds
fld
push
popa
xchg
mov
ficomps
iret
add
push
sub
jns
add
adc
enter
and
fsubrl
mov
jp
xchg
and
imul
test
and
add
add
inc
lock
xor
int3
fdivr
cmp
add
cmp
add
jle
popf
dec
xchg
push
adc
add
add
xlat
aaa
imul
cwtl
pop
lcall
xchg
out
add
sub
add
push
dec
outsb
add
mov
rol
rorb
jbe
push
ret
paddusb
mov
hlt
inc
adc
xchg
mov
test
int3
and
add
xor
lods
add
aam
jg
dec
lds
dec
nop
or
ja
inc
imul
cmpsl
sbb
mov
sbb
push
loope
xor
cmp
pop
orb
mov
xchg
push
pop
sub
ret
xorb
add
inc
mov
scas
lret
push
out
js
and
mov
jmp
repz
les
add
cmp
mov
loopne
mov
pop
xchg
in
pop
out
daa
inc
pop
inc
rcrl
sbb
and
ret
popf
jp
sub
or
mov
or
test
inc
mov
mov
and
mov
xor
cld
addr16
fcomp
call
jmp
jp
xor
xchg
jno
dec
cld
lea
lock
imul
sbb
mov
xchg
adc
inc
pop
adc
fsubrs
enter
adc
xchg
pop
push
lahf
lret
test
ds
adc
cmp
loope
xchg
jecxz
adc
ret
popa
xor
mov
scas
push
mov
inc
enter
stos
dec
stc
jno
or
add
popa
outsb
fcomp
inc
pop
add
cmp
icebp
lds
pop
push
addb
pop
arpl
jno
inc
stc
mov
push
and
and
xor
add
dec
imul
mov
add
or
push
std
add
aam
loop
sub
jl
and
adc
xor
jns
and
mov
seto
inc
call
mov
pop
inc
jb
cmp
nop
mov
subl
jp
daa
cld
add
mov
cmp
es
xchg
out
add
outsb
add
int3
xchg
pop
icebp
add
pop
inc
cs
repz
jo
adc
iret
fs
cmp
fidivl
dec
icebp
add
or
rorb
sub
xchg
add
mov
mov
adc
leave
push
sub
gs
mov
clc
sbb
dec
or
clc
movups
nop
test
dec
out
jp
in
pop
cmp
inc
add
rorl
cld
in
or
mov
mov
jl
sub
push
aas
cmp
loope
int
mov
subb
pop
sbb
pop
fs
mov
inc
add
fisubrl
lcall
leave
subl
push
pusha
inc
test
jbe
stos
sar
stc
popf
add
or
lock
int3
lahf
jge
dec
jns
in
repz
xor
fdivl
aas
imul
add
cli
pop
loope
cmp
add
adc
cmp
in
push
xchg
jnp
cmp
cwtl
rcrl
shll
or
mov
mov
add
outsb
pop
mov
mov
sarb
xlat
xor
add
sub
fsubrs
add
adc
push
sub
rcll
rcll
add
dec
pop
cmp
das
xchg
add
js,pt
je
clc
les
jmp
push
sub
xchg
add
cs
jp
push
loopne
add
test
mov
jb
scas
out
cld
add
add
stc
xlat
fisttpl
sahf
sub
cmp
add
xor
xchg
aas
insl
pop
adc
inc
inc
xchg
sbb
mov
sbb
es
mov
inc
test
and
je
lock
jns
jbe
mov
push
pop
imul
enter
inc
add
popf
cld
mov
repz
mov
sbbl
test
dec
lods
add
aaa
cmp
scas
int3
xor
add
insl
ret
push
or
mov
test
add
out
mov
add
xchg
mov
xlat
icebp
in
call
ja,pn
fidivl
mov
jbe
cmp
sub
jle
xor
inc
pop
or
add
lret
sub
sbb
xor
rorb
out
jb
daa
leave
andb
jae
jnp
outsb
mov
add
inc
mov
pushf
ljmp
add
push
inc
and
jmp
test
shl
lea
mov
jo
dec
mov
adc
inc
pop
add
and
ret
cld
add
and
fidivrs
add
out
sbb
push
and
jmp
es
jle
add
arpl
add
mov
repz
sub
mov
sbb
add
mov
and
dec
xor
cmp
mov
dec
xorl
iret
lret
out
push
pop
cli
xor
lret
push
lret
and
push
push
gs
or
cli
sub
push
pop
adc
or
pop
pop
inc
pop
lock
enter
test
inc
mov
test
xor
push
pop
jb
repz
les
cli
push
pop
xchg
sub
mov
push
mov
mov
mov
add
and
roll
lret
ljmp
pop
into
lods
insl
inc
hlt
dec
pop
cmc
js
cmp
jbe
mov
out
mov
pop
enter
sub
shll
xlat
and
sub
xchg
mov
jmp
fldl
pushf
or
xor
jns
push
mov
cmp
or
cmp
jbe
scas
xor
add
clc
js
outsl
fsub
add
outsb
adc
mov
fs
add
push
sti
ljmp
cld
pop
ret
aam
imul
mov
fs
aas
and
cmpsl
mov
pop
mov
and
test
pop
cli
xor
mov
jno
imul
and
add
mov
test
rcrl
add
data16
sbb
call
inc
jno
lea
add
pop
btr
inc
jmp
mov
nop
sub
cmp
sub
into
rorb
xlat
mov
ljmp
adc
mov
fistps
cmp
xchg
fstpl
movsb
scas
jecxz
push
leave
dec
push
push
add
loop
popf
xor
rcll
add
sbb
add
mov
sub
shll
sub
pusha
and
pop
in
rol
jle
lret
xchg
jne
mov
sub
mov
or
pop
sti
nop
clc
mov
jae
adc
outsl
inc
lret
mov
cmp
test
add
cwtl
mov
insb
adc
and
imul
popa
cmp
xchg
addb
add
rcrl
incl
adc
imul
add
stos
mov
scas
cs
and
adc
arpl
adc
lds
add
mov
push
sti
aam
mov
mov
sub
out
mov
mov
mov
and
mov
xor
std
push
insb
fistl
dec
cmp
sbb
mov
shlb
jae
pop
jnp
stc
and
adc
add
or
call
aam
inc
cli
imul
stc
scas
jl
mov
adc
loopne
insl
add
mov
jge
add
cs
xchg
bound
lcall
or
std
add
sbb
adc
lcall
jl
shr
fadds
cmpsb
inc
imul
cmpb
out
pop
in
in
sub
inc
cmc
nop
pop
mov
clc
or
xor
xlat
cwtl
add
sub
shlb
pop
fcomip
sahf
test
pop
sbb
or
sbbb
mov
mov
pop
loopne
adc
add
bnd
aaa
pop
pop
inc
roll
jns
aad
inc
lahf
cltd
ss
pop
xchg
jno
inc
int
outsb
es
mov
lds
insb
mov
xchg
pop
xchg
popf
xchg
jne
mov
mov
pop
outsb
sahf
jle
sub
inc
and
dec
jno
add
fstp
mov
or
lret
xchg
addr16
stos
adc
movsb
ret
and
jmp
loopne
dec
mov
in
mov
aam
mov
and
test
stc
aad
push
sbb
mov
inc
sbb
dec
adc
push
add
xor
outsl
add
fisubl
cwtl
inc
add
call
pop
add
sbb
inc
add
ret
repz
outsl
or
xor
ds
pusha
adc
xchg
adc
cmp
cmp
sbb
sbb
add
pushf
inc
fsubrs
lahf
jb
sub
out
add
pop
leave
das
icebp
fmuls
xchg
dec
clc
ret
mov
out
mov
xchg
add
flds
push
xchg
cld
fimull
addb
imul
nop
push
test
cmpb
add
scas
cld
add
mov
pop
jo
sub
shlb
ss
add
leave
and
std
or
cltd
aaa
fs
jo
and
add
cmpsb
mov
pop
add
rep
mov
shrl
fisubrl
sbbb
cli
jns
add
mov
into
es
and
dec
pop
mov
sahf
les
loope
mov
xor
pop
int3
push
scas
or
dec
addb
lock
ljmp
in
add
mov
xor
mov
jns
adc
or
cmp
add
sarb
pop
pop
push
push
fcoml
jns
add
sub
add
or
popa
lods
clc
add
push
stos
fcmovnb
xchg
xchg
dec
mov
mov
push
gs
jnp
add
sbbl
inc
lahf
int
mov
enter
sbb
lret
mov
jbe
cld
int3
add
fisubl
aad
push
leave
dec
out
data16
mov
fadds
or
mov
loope
sarl
add
test
add
pop
int
xor
das
nop
mov
add
sub
js
imul
insb
hlt
mov
ret
adc
mov
sbb
sub
or
xchg
mov
sub
jne
loopne
add
xchg
xor
push
loop
mov
cmp
add
fistps
add
nop
cld
inc
jg
mov
and
mov
sbb
and
mov
mov
add
sbbb
dec
or
icebp
adc
push
or
dec
ja
xor
cmp
adc
int3
jae
ret
mov
imul
push
das
add
inc
test
cmp
in
mov
jecxz
add
fwait
into
loop
and
adc
inc
fldl
add
iret
lods
roll
inc
xchg
rolb
cld
lcall
xor
jecxz
mov
bound
pop
and
pop
xchg
fnstsw
sub
sbb
stc
nop
lods
fsubrl
mov
test
mov
sub
xor
jl
mov
pop
add
jno
je
mov
add
mov
sti
add
sub
es
in
ret
inc
addl
sub
push
addb
mov
mov
jg
ja
add
jae
jo
lret
mov
mov
rol
mov
mov
into
aas
jno
add
mov
mov
cmp
in
out
xchg
fstpt
int
sbb
mov
push
cmp
or
fists
cwtl
and
push
lret
xlat
cli
fcmovnu
mov
lods
add
enter
or
pop
xchg
jnp
xchg
xchg
loopne
mov
pop
sub
push
shll
aam
add
loope
addr16
push
jecxz
pop
adc
das
adc
add
mov
inc
push
sub
hlt
push
hlt
add
xchg
in
or
in
ja
push
dec
add
pop
dec
fadds
sbb
pop
sarl
pop
outsl
pusha
leave
jo
cld
fstpt
aaa
inc
cmpb
jecxz
lea
adc
jae
cmpb
push
in
or
mov
push
xchg
aas
push
out
lock
lods
or
and
xor
fcoml
mov
sbb
loopne
clc
js
jbe
inc
sbb
or
mov
inc
insb
push
ja
dec
popl
out
flds
add
shrb
cmpl
dec
push
cli
xchg
mov
lcall
lret
add
dec
mov
rep
into
les
xchg
add
ret
in
mov
addb
xor
fidivrl
outsb
les
push
ss
jp
dec
adc
stos
and
shl
mov
or
pop
aad
add
mov
xor
mov
popf
insb
jecxz
and
fnstcw
cmp
fcompl
push
hlt
rorb
addb
or
lea
lcall
xchg
sbb
scas
sub
mov
in
insl
hlt
incb
and
aad
add
cmpsb
jbe
pop
fs
fildl
lock
push
mov
ds
lcall
loop
out
lock
loopne
add
cltd
push
mov
add
inc
sarb
add
nop
mov
lret
adc
int3
bound
jmp
cmp
out
sub
stc
or
cs
add
loopne
adc
push
push
mov
and
adc
push
or
addr16
xchg
mov
mov
sub
mov
lcall
cmpsb
xchg
mov
cltd
icebp
sbb
xor
sub
cmp
les
repz
test
cmpsl
outsl
mov
lea
loope
jb
add
dec
adc
je
add
cmp
dec
notb
sbb
or
push
mov
test
cwtl
pop
sub
sub
cmp
push
daa
cmpsl
xor
inc
lcall
faddl
mov
or
idiv
sarl
xor
mov
pop
test
pop
fsubl
rolb
jns
adcb
dec
add
xor
insl
lahf
add
cltd
mov
and
aas
icebp
in
test
in
mov
dec
xchg
sub
enter
imul
inc
arpl
sub
inc
add
gs
pop
cmp
movsl
sbb
loope
jmp
mov
add
push
push
stos
cmpsl
leave
rclb
fstpl
fiadds
dec
enter
jbe
xor
jb
aas
xchg
loopne
popf
ret
jno
xor
scas
fsubrs
das
lret
call
adc
xchg
shlb
je,pt
xchg
pop
cld
out
mov
cs
inc
xor
fucomp
cmp
and
push
add
addl
add
rcrb
pop
inc
repnz
fcompl
filds
rorl
mov
outsb
dec
enter
test
adc
scas
inc
ret
fdivs
dec
add
mov
lock
sti
das
cmp
fwait
int
cltd
sbb
push
rolb
dec
inc
lock
push
insb
pop
add
int3
xchg
or
lret
lret
ror
push
pop
push
out
sub
subb
pop
rorb
or
test
ss
pop
inc
cmpsl
adc
into
adc
mov
iret
inc
pop
push
aam
nop
rcrb
fcoms
ja
or
xlat
inc
dec
push
adc
sub
mov
test
jae
mov
sub
hlt
xor
and
insl
cli
adc
cmpsl
fcomps
pop
xchg
mov
fcomps
clc
loop
or
add
and
ror
sbb
call
leave
push
pop
xorb
aas
add
sub
in
cmp
jno
push
jnp
fnsave
mov
adc
shlb
rorb
test
cmp
push
dec
xlat
stos
gs
int
pop
jg
stc
shrb
insl
call
push
jmp
adc
mov
inc
xor
xchg
in
mov
add
or
add
hlt
sub
add
sbb
mov
ljmp
add
clc
xchg
sub
sub
mov
cmc
out
push
pushf
ficoml
repz
xchg
jecxz,pt
in
jnp
and
jae
hlt
mov
lret
pushf
out
dec
sbb
lea
call
test
leave
and
xchg
mov
push
push
adc
mov
popf
fstl
out
inc
jns
mov
jmp
sub
mov
adc
repnz
add
popa
fmull
lock
and
decb
push
lds
push
pop
pusha
stos
add
or
cmp
add
mov
adc
subb
sub
add
out
lcall
sub
adc
leave
mov
rorb
scas
add
out
jmp
jg
je
dec
adc
push
add
out
add
jmp
sti
mov
jo
lock
je
hlt
rorb
or
sahf
pop
add
mov
add
jno
aas
and
mov
pop
push
ss
xchg
xor
sub
inc
scas
lret
lds
cmp
jp
dec
pop
cmpb
adc
add
cmp
add
cmp
cmp
dec
add
das
mov
and
push
std
lds
mov
jns
in
ret
sbb
xchg
xchg
add
lret
xchg
out
lcall
and
and
xchg
mov
idivb
iret
cltd
mov
cmp
loop
mov
sub
std
adc
cmp
mov
cmp
jns
add
outsl
jbe
add
sub
lret
clc
jmp
push
jle
sarb
add
in
imulb
xchg
adc
push
inc
push
rclb
addb
cmp
or
sbb
ljmp
xchg
es
cmp
cmp
in
xlat
loop
nop
pop
inc
add
inc
adc
scas
std
test
push
xor
out
ljmp
das
xor
cmc
adc
scas
xchg
ds
dec
loop
cmp
sub
idivb
sub
push
mov
lock
std
push
lea
adc
hlt
stos
leave
mov
adc
xchg
adc
lea
pusha
mov
and
mov
cmp
adc
es
inc
fistpl
xchg
push
push
cli
jbe
daa
pop
in
imul
sub
dec
sahf
negb
out
xchg
xchg
gs
roll
adc
mov
rolb
daa
hlt
jge
push
out
je
scas
in
cld
movsb
mov
xchg
dec
fmull
pop
sub
dec
faddl
mov
out
ja
xchg
or
test
sti
push
dec
outsb
mov
fucom
repnz
aad
inc
jecxz
jbe
add
dec
test
sub
jb,pn
pop
add
jg
dec
mov
push
imul
inc
xchg
adc
repz
mov
and
enter
cltd
add
push
out
cwtl
fisubrl
mov
xchg
into
jne
add
cli
pop
stos
je
mov
lock
lret
sbb
sub
add
lds
mov
rorb
xor
shlb
fwait
add
and
add
jo
fmuls
sbbl
pop
sub
int3
daa
bound
add
mov
mov
repz
out
xor
xor
add
leave
aad
add
mov
subb
pop
add
rcl
adcl
sbb
ret
dec
sbb
outsl
mov
add
jle
jo
dec
cmp
sub
mov
aam
or
adc
and
xchg
xchg
or
loope
divb
out
add
sub
jg
in
mov
add
xor
std
mov
pop
pop
add
aam
mov
xchg
and
out
mov
xor
jnp
inc
mov
pop
jg
sub
xchg
sbb
lods
ljmp
pop
push
lods
xor
xor
rcrb
jb
add
lcall
add
pop
es
mov
and
shll
popl
xorl
add
xor
pop
xchg
cmp
mov
lds
jg
test
insl
add
test
add
sbb
pop
add
pop
cmp
out
jle
cld
mov
jge
pop
lock
sahf
cmpl
cmp
bound
add
pop
add
pushf
jbe
add
push
arpl
icebp
jmp
addl
idiv
push
ljmp
pushfw
xor
jo
ror
fcmovb
fwait
add
ret
test
flds
clc
sbb
push
jge
mov
orb
adc
lahf
lret
enter
jge
lret
sub
nop
sub
push
dec
add
xchg
push
inc
sbb
cmpsb
and
mov
jmp
push
daa
and
jge
push
inc
int3
adc
mov
fsubr
mov
jl
or
adc
mov
push
add
loope
push
shl
add
nop
call
call
aaa
or
test
ds
or
xor
ss
inc
fstpt
sub
test
xchg
bound
dec
fnstsw
popa
dec
inc
les
inc
cmp
or
nopl
pop
out
repz
add
rcl
or
adc
push
cmpsl
jbe
add
out
sub
cmp
mov
push
xor
pushf
mov
lea
push
stos
add
xchg
sarb
add
jle
movsl
inc
cmpsl
inc
cmp
dec
pop
bound
sub
xchg
push
into
cmova
subb
adc
push
push
aad
sbb
mov
hlt
add
adc
in
lahf
add
mov
xchg
cmp
xorb
pop
add
xor
push
add
adc
daa
arpl
jns
fisubl
xchg
stos
lods
subl
imul
pushf
loop
add
cmpl
dec
mov
and
ja
scas
fisubrs
loop
add
in
int3
or
jmp
sbb
sbb
cmp
inc
movsl
add
arpl
or
sahf
cmc
sub
mov
dec
add
in
emms
cmp
ljmp
add
loope
jae
test
cmp
dec
gs
mov
xor
add
push
je
mov
rorb
push
mov
ret
into
pop
mov
scas
push
addb
pusha
fdivr
je
ljmp
add
test
loopne
out
cs
push
in
icebp
mov
das
inc
aas
xor
add
sbb
daa
mov
fnsave
mov
lcall
jae
xchg
cbtw
pop
inc
movsl
mov
jo
cmp
in
popa
mov
mov
stos
repnz
add
cmp
push
push
xor
mov
dec
out
and
add
insb
add
dec
in
ret
mov
cltd
divb
dec
cmp
cmpsb
data16
mov
jle
and
lock
jb
push
add
aad
es
dec
add
xor
jno
add
mov
push
nop
loopne
out
jb
aam
das
rcl
es
jae
jecxz
push
mov
add
sbb
arpl
lea
subl
cld
mov
in
cmpsb
adc
cmpb
ret
mov
jmp
repnz
pop
lret
cmp
jb
ret
lods
outsb
add
les
fs
pushl
jmp
adc
xor
out
ss
sbb
adc
xor
push
sbb
add
push
pop
adc
pop
ficompl
sarb
jge
ja
mov
mov
daa
xor
or
mov
mov
jae
mov
push
xor
cmovae
mov
lret
imul
jo
and
mov
mov
jmp
add
inc
sub
sahf
int3
mov
pop
test
sub
inc
or
dec
or
popa
jnp
leave
sbb
sbb
mov
cltd
fiaddl
faddl
push
xlat
jnp
cmp
mov
test
ret
shl
push
in
hlt
enter
rcrb
out
jo
add
cmp
out
add
inc
push
add
fisttps
add
inc
imul
dec
sbb
add
pop
sahf
adc
scas
jne
adc
adc
or
pusha
fsubl
ja
jno
pop
lahf
sahf
cmp
ret
je
xchg
aam
addr16
ret
popf
lods
subb
adc
xchg
jb
add
iret
es
loopne
movsl
repz
cmp
xchg
and
mov
push
bound
mov
ja
pop
add
jl
cmpsl
repnz
push
push
add
mov
fwait
mov
add
lcall
dec
inc
push
imul
std
push
add
daa
out
add
ljmp
push
flds
pop
cmp
clc
inc
or
jns
push
roll
xchg
mov
jl
enter
shll
aaa
dec
pop
fildl
outsb
in
test
movsb
mov
dec
mov
add
jne
adc
and
pop
push
sbb
cltd
shlb
add
push
loope
add
ja
jl
stos
inc
add
hlt
and
add
add
add
in
lods
mov
or
movsl
mov
ret
jge
lods
cltd
mov
cmp
adc
imul
jne
adc
and
jae
scas
mov
add
add
push
jmp
push
mov
add
adc
add
mov
mov
jae
push
push
ljmp
cld
fstl
cmp
add
sub
dec
or
dec
mov
xorb
mov
jp
int3
mov
in
dec
iret
adcl
add
sub
or
fdivrs
jg
xor
inc
dec
popa
sub
inc
nop
les
adc
or
in
push
add
mov
pop
or
mov
and
mov
jle
push
clc
sub
inc
mov
aam
push
push
mov
fcomp
popa
sbb
call
pop
sbb
shlb
push
push
test
inc
mul
push
pop
notb
lea
mov
cmc
ret
movsl
pop
pop
mov
inc
adc
pop
and
cmp
jg
push
cmpb
je
adc
xor
or
jle
cmp
or
flds
pop
nop
xor
add
dec
ret
decb
mov
subb
pop
addb
dec
xor
xor
mov
pusha
push
mov
call
in
push
xor
inc
xchg
add
xor
dec
addb
scas
enter
pop
jp
lock
sub
or
lea
pop
cs
and
and
jno
adc
inc
or
inc
add
ficoml
sub
and
xabort
dec
nop
cmpb
clc
or
mov
xchg
movsbl
adc
pop
enter
bt
xor
ss
mov
rolb
stos
jge
sub
or
loope
dec
fwait
cmp
ret
sbb
pop
sub
jb
inc
mov
dec
sbb
dec
xchg
inc
push
jne
sbb
cmc
repz
inc
hlt
pushl
xchg
push
inc
xchg
insb
mov
test
shlb
pop
cvttps2pi
cmp
add
mov
mov
and
mov
add
in
pop
and
mov
mov
dec
int3
pop
jns
add
pop
clc
scas
cmpsb
ss
stos
sbb
and
inc
add
adc
imul
sub
or
add
jmp
mov
jge
inc
mov
mov
dec
jg
bound
cmpsw
fistl
and
pop
xchg
ret
mov
mov
sbb
neg
test
test
mov
decl
pop
sbbl
and
or
inc
pop
orb
adc
adc
mov
les
lcall
adc
mov
movl
pop
xor
inc
je
push
mov
cs
scas
mov
testl
das
call
das
mov
fisubrs
mov
insl
testl
add
shlb
sbb
je
or
testb
add
adcl
xchg
jg
orb
outsl
push
xor
xor
in
pop
aaa
movsb
test
test
adc
sub
cmp
adc
push
or
pusha
xchg
xor
add
cmp
push
add
lea
inc
dec
lahf
sbb
pop
pop
adc
adc
add
mov
lods
cwtl
inc
or
mov
gs
repnz
xchg
ljmp
mov
xchg
sbb
pop
cmp
and
mov
jmp
sbbl
incl
and
hlt
dec
movswl
mov
outsl
jmp
mov
sub
mov
and
xchg
and
mov
mov
icebp
test
loopne
ror
mov
inc
adc
mov
call
adc
push
lea
loopne
xor
mov
jae
cmp
repnz
jl
inc
lea
add
add
jne
mov
les
sbb
dec
jne
insl
cmp
je
push
ja
loop
mov
out
and
xor
mov
das
repz
or
shl
mov
push
test
push
mov
dec
mov
and
push
push
ret
daa
push
daa
nop
jge
les
xchg
jge
dec
call
adc
loop
movsb
jo
lods
mov
mov
inc
add
xchg
call
pushf
in
in
sahf
jnp
lret
iret
lods
ficoms
pavgb
aam
cmp
mov
lods
push
xor
or
push
decl
stos
cmp
mov
inc
test
aam
mov
nop
ret
adc
xor
stos
js
adc
mov
rcll
adc
imul
loop
stc
shrb
leave
arpl
aad
stos
mov
pusha
arpl
cmp
inc
xlat
push
pop
out
shll
push
out
pushf
sub
and
sbbb
out
repnz
jl,pt
data16
dec
and
mov
les
clc
sbb
xor
adc
or
shrl
adc
cmovge
lret
xor
pusha
scas
adc
dec
fcmovb
dec
pusha
loop
shll
push
clc
pop
sub
popa
pushw
call
icebp
in
pop
leave
jl
data16
stc
std
shlb
or
or
jmp
fmuls
je
jp
shlb
mov
shr
or
sti
add
cmp
cld
fs
int
rcl
or
sub
dec
data16
add
jne
dec
fs
pop
popf
jg
jl
leave
lock
imull
cld
xchg
ja
movsb
mov
in
add
ret
push
call
testl
jecxz
adc
jle
dec
repnz
xchg
sub
add
add
jmp
test
or
ljmp
sub
xchg
pop
pop
mov
xchg
out
lods
inc
inc
std
mov
leave
loopne
adc
dec
push
mov
setns
in
bound
add
pushl
jo
jp
imulb
sub
or
cmp
push
popf
aad
fst
int
jle
mov
jae
dec
or
repz
loope
inc
pop
adc
jne
mov
faddl
ljmp
imul
sub
ja
dec
insb
fs
xchg
and
mov
sbb
add
add
or
add
cli
and
jns
std
adc
lea
add
lcall
mov
fstp
dec
jae
add
dec
pop
insb
cmp
cmc
rorb
loopne
mov
rorb
xor
cmpsb
xchg
sub
or
jae
add
dec
hlt
add
das
and
mov
and
in
subb
sub
mov
ja
add
jbe
fstl
mull
sbb
fadds
mov
jne
in
dec
jle
scas
add
loop
out
fs
add
filds
sub
mov
adc
out
inc
and
xchg
jae
addl
jecxz
dec
inc
mov
add
andb
sbb
std
add
sub
jbe
push
add
push
push
adc
test
data16
dec
and
mov
add
sub
cltd
xchg
out
add
into
push
je
aad
fdivs
add
loope
adc
dec
xor
xchg
shll
xchg
sbb
push
xchg
mov
pop
fisttpll
add
je
cwtl
and
sarb
das
xorb
cs
add
xchg
test
cli
pop
rolb
mov
add
adc
nop
add
leave
in
mov
paddusw
dec
jge
aam
inc
rclb
mov
add
jecxz
pushf
mov
mov
push
sub
add
fdivs
pop
mov
mov
jnp
and
add
push
adc
or
cmpsb
cmp
and
xor
lds
aam
xlat
add
xchg
xchg
idiv
add
jmp
aaa
call
stc
xchg
testb
jne
mov
lods
fdivrs
xorl
add
inc
nop
mov
mov
or
sub
cmpl
cld
insl
repz
std
pop
pop
sbb
mov
outsb
dec
out
add
jb
push
rcrl
or
dec
mov
fadds
add
enter
add
adc
add
or
add
xchg
hlt
jns
inc
mov
stc
lods
filds
lock
mov
add
pop
jecxz
addr16
dec
add
push
es
and
std
shll
pop
push
cmpsb
add
jecxz
jne
icebp
or
cmpb
imul
push
aas
nop
nop
xchg
jmp
sub
pop
fldenv
add
mov
adc
sub
add
stos
lds
pushf
inc
dec
push
lods
outsb
cmp
jge
or
out
or
mov
das
insl
xor
addl
xlat
pop
sbb
adc
in
dec
lret
imul
xor
negb
xorb
dec
mov
mov
test
adc
jns
pminub
addr16
fiadds
add
mov
std
mov
adc
and
add
movsl
pop
loopne
in
iret
aaa
add
pop
cmpsb
adc
jbe
push
sbb
gs
inc
xchg
aaa
dec
add
rolb
and
adc
jp
sub
adc
pop
pop
sub
lods
out
shr
sub
jb
add
int3
repnz
fwait
mov
mov
out
adc
adc
lock
push
inc
hlt
xchg
adc
std
lods
les
inc
in
cmp
xchg
push
or
jle
sarb
sbb
xchg
out
jmp
sbb
dec
jnp
int3
add
pop
mov
xor
iret
scas
inc
add
je
mov
fisttpll
incl
sbb
mov
inc
or
mov
or
fimuls
adc
in
loop
jg
add
aas
rcl
cli
jecxz
enter
inc
dec
data16
gs
mov
movsl
test
inc
stos
add
mov
iret
scas
mov
loopne
data16
shll
sti
popf
or
add
out
sbb
xchg
in
add
pop
adc
es
cmc
pop
roll
rolb
xchg
sub
cmpsb
push
or
std
bound
mov
xchg
cmpsl
dec
mov
dec
js
add
jbe
test
lcall
add
xchg
xlat
inc
add
sub
shl
pop
nop
aam
xor
fmull
sbb
ret
dec
in
repz
rorl
and
bound
inc
jbe
xchg
jmp
ja
add
flds
lea
ret
ljmp
clc
add
push
in
popf
and
scas
push
mov
test
mov
add
imul
dec
mov
std
call
push
pop
cs
adc
adc
dec
add
dec
or
jnp
pop
xchg
inc
and
rorb
je
outsl
imul
lcall
or
pop
dec
icebp
subb
fiadds
push
xchg
mov
lret
cli
fldl
into
add
add
out
xor
xchg
and
add
icebp
jl
add
jb
jo
pop
cld
dec
or
xchg
xchg
or
cmp
xlat
lock
mov
xchg
push
jg
push
mov
add
or
push
inc
add
mov
mov
jae
arpl
test
mov
push
fistps
test
stos
xchg
cmp
sub
adc
cld
jecxz
mov
add
data16
call
repz
push
or
inc
das
dec
sbb
mov
jl
sub
adc
xor
cmpb
push
jmp
mov
ret
add
call
cmpsl
clc
and
notl
mov
sti
roll
cli
enter
es
or
sbb
sub
mov
push
mov
les
popa
sbb
in
or
decl
fucomp
inc
jo
xchg
cmpsl
sbb
bt
stos
and
ror
fwait
movsb
adc
dec
push
cmpsl
stos
jo
lods
cld
and
xor
pushf
mov
shrb
pushf
popl
jno
movsb
popa
pop
and
outsb
cmp
sbb
add
lcall
frstor
push
rorb
movsb
les
insl
or
out
pop
mov
dec
icebp
add
mov
stos
add
jl
aas
sbb
icebp
addl
push
pop
jle
outsl
outsb
inc
add
push
xchg
xchg
cmp
and
jg
jl
mov
mov
sub
pop
inc
add
and
add
iret
leave
mov
xchg
adc
ret
call
add
mov
pop
mov
aaa
sbb
test
add
inc
subb
mov
insb
out
out
dec
aaa
sub
ficoms
add
push
popf
or
inc
adc
ret
sbbb
in
test
sub
fidivrs
int
add
mov
sbb
xor
pop
jbe
add
jns
push
add
data16
pop
dec
adc
mov
add
push
and
inc
dec
mov
mov
sarb
add
mov
mov
pop
add
xor
outsl
add
push
lcall
cmp
mov
insb
aad
xchg
je
pandn
adc
cmp
nopl
lret
pusha
or
aas
push
xor
jae
insl
movsb
outsb
mov
icebp
sti
jo
lcall
mov
jne
add
scas
sahf
stc
add
mov
adc
pop
aad
jno
add
jmp
xlat
add
shll
inc
cmpb
in
lods
push
sarl
and
in
dec
jae
nop
pop
pop
xchg
mov
and
lea
add
xchg
rcrb
ljmp
jbe
cmp
jne
pop
jno
inc
mov
jb
cld
movsl
xchg
movsb
mov
jo
faddl
mov
inc
or
xadd
add
xchg
inc
mov
cmpsb
add
roll
fstpl
jecxz
add
xchg
fstps
jmp
jne
cli
xchg
clc
in
xchg
xchg
dec
fnstcw
repz
dec
mov
rclb
and
faddl
cs
xor
add
stos
sub
add
ret
cmpl
unpcklps
pop
mov
dec
scas
cmovge
adc
cmp
add
and
xchg
inc
sti
add
pop
loope
outsb
push
loop
add
and
sbb
in
jp
daa
pop
lret
ss
and
in
xor
scas
test
ffreep
jg
stc
cmp
test
mov
add
push
stc
cs
jmp
fnstenv
out
repz
add
jnp
cli
add
push
leave
aaa
std
inc
mov
mov
repnz
scas
or
cmp
xor
jae
add
outsb
dec
pop
adc
mov
es
mov
pushf
cmp
aaa
pop
aas
add
imul
add
das
int
testl
pop
ret
adc
subb
mov
sub
jg
call
xchg
add
stos
jp
mov
add
mov
push
push
lods
aad
roll
mov
punpcklbw
fmuls
add
xchg
imul
hlt
dec
imul
xchg
or
lahf
jl
loope
push
mov
ss
xor
mov
pushf
add
sub
sbb
aam
inc
pop
dec
mov
adcb
lcall
xlat
mov
shrb
add
dec
pusha
scas
add
in
pop
jl
cmp
pop
cltd
ja
ficoms
add
push
divb
or
dec
out
test
filds
mov
les
push
int3
mov
push
cmp
cmp
pop
mov
fistpl
xor
cmc
push
add
mov
dec
mov
or
leave
add
sbb
xchg
add
cmc
fbld
add
mov
sbb
int
adc
jne
subl
push
sbb
lcall
adc
add
pop
fsubl
xor
call
sti
ljmp
xor
js
xchg
and
sub
xorb
call
subl
pop
add
inc
arpl
aas
jp
cmp
xlat
stc
sub
nop
add
test
cwtl
test
fnsave
add
pushf
push
jae
jbe
and
insb
inc
add
fadd
orl
push
adc
mov
add
leave
jae
loop
sbb
dec
add
outsb
rclb
mov
mov
call
or
push
mov
add
push
stos
mov
adc
sahf
pop
sbb
int3
add
cltd
inc
out
add
mov
jge
shrb
mov
add
mov
repnz
int
mov
sbbb
pushf
enter
pop
fidivs
subl
loopne
pushf
xor
rcrb
and
add
push
cs
inc
pushf
fnstenv
add
xor
cltd
addl
push
jecxz
pusha
add
add
test
inc
or
jno
test
push
les
xor
ret
jnp
ret
pop
mov
out
mov
xor
jge
fwait
adc
sbb
out
cli
lcall
add
fldt
aaa
add
jp
add
nop
pusha
leave
push
fsubl
insl
add
adc
xchg
pop
push
pop
inc
lods
sbb
add
and
xlat
mov
fmuls
pusha
cmp
leave
test
out
push
lods
jbe
add
addr16
add
sub
lods
es
aad
add
jb
xor
in
addr16
push
sbb
sbbb
pop
mov
adc
xorb
jns
add
ret
inc
out
xchg
push
xor
dec
mov
pop
mov
sahf
add
adc
add
xchg
add
pop
and
idivl
mov
push
xchg
xchg
fmul
sbb
jnp
icebp
add
lock
stc
popa
testb
call
jo
dec
add
shrb
jns
add
sub
ss
mov
movsb
mov
mov
add
fstl
test
jmp
enter
add
adc
jmp
mov
add
out
jae
mov
fs
xlat
lock
ret
push
add
mov
pop
add
cmc
cmp
add
fsubrp
add
pop
mov
jo
sbb
or
push
mov
es
aas
cmp
pop
jp
fcomp
pop
xor
cld
lahf
ret
dec
inc
dec
inc
add
outsl
outsb
mov
add
into
xlat
xchg
loopne
add
mov
cmpsb
ja
add
imul
sbb
jb
add
adc
sub
jo
faddl
dec
mov
xchg
ja
pop
movsb
ret
inc
jl
add
mov
sub
jnp
insb
mov
mov
cmc
popl
cld
lea
mov
out
jg
mov
repnz
cmp
push
aad
ret
mov
and
cmp
add
clc
jp
mov
leave
dec
lods
mov
push
add
xor
mov
cmp
cwtl
add
sub
sbb
ljmp
mov
dec
add
jo
shll
inc
out
std
sbb
aad
push
or
rcrb
add
mov
cmp
cmpb
adc
mov
jne
nop
mov
mov
repnz
push
je
std
rclb
pusha
inc
ficomps
sti
mov
cmp
add
and
add
adc
rol
movsb
sub
sar
outsb
rorl
sbb
out
movsb
adc
cmp
stos
sub
loopne
cmp
lea
push
xor
dec
add
cmp
rcl
in
loope
roll
jmp
inc
or
push
lcall
dec
subb
mov
jl
xchg
bound
lret
js
add
xchg
sub
add
adc
sub
ret
loopne
add
call
pop
add
insl
pushw
push
in
rcll
xorb
xor
daa
sbb
mov
call
add
add
inc
rolb
outsb
pop
movsl
lods
inc
xchg
inc
add
stc
dec
dec
ljmp
insl
jae
mov
mov
add
mov
sub
mov
mov
nop
in
jl
sarl
mov
std
es
add
push
add
cltd
loopne
jbe
add
andl
pusha
inc
add
jns
das
jne
jae
or
dec
cmp
cmpsb
arpl
inc
jns
int
push
cmp
loope
sbb
leave
mov
notb
dec
fcoms
aam
xchg
and
xor
sbb
sbb
fldenv
hlt
mov
dec
inc
lods
ret
mov
add
popa
leave
mov
add
sub
inc
pop
mov
pop
sti
dec
add
arpl
push
lahf
inc
add
in
sub
mov
stc
dec
fisttpll
pop
and
sub
jnp
xchg
imul
pusha
add
movsb
and
jns
jo
xor
lret
pop
xchg
mov
subl
and
add
aas
add
loope
add
fcmovnu
cmp
xchg
lahf
add
and
xor
imul
jmp
shlb
xchg
jl
push
ret
pusha
mov
pop
add
fsubs
sbb
out
inc
movsb
leave
or
mov
add
or
loopne
mov
nop
loopne
fadds
add
cmpsl
and
mov
sbb
call
outsw
add
add
adcl
add
ds
adc
out
add
fwait
popf
jne
mov
jge
add
xchg
aaa
add
ds
inc
mov
mov
or
pop
aas
repz
mov
cli
idivl
rcll
push
cmp
xchg
dec
jmp
les
pushl
scas
rolb
cmp
hlt
adc
movsl
jle
js
bound
mov
js
fdivrs
and
add
mov
or
dec
cmp
stc
adc
push
inc
in
cli
push
push
or
loopne
addl
cmp
push
fldt
sbb
push
mov
in
add
jl
cmp
pusha
sub
xor
mov
mov
mov
nop
add
loop
add
cmp
add
jg
mov
mov
and
rcrl
jmp
lods
outsb
fs
les
ja
ret
cld
pop
and
jno
xor
aaa
sahf
imul
jp
lods
loope
mov
adc
cmp
clc
and
lcall
add
test
cmp
repnz
adc
add
faddl
add
rcrb
cmp
sub
clc
cmp
add
and
das
scas
add
scas
pusha
adc
adc
shlb
sbb
addr16
and
scas
or
mov
leave
mov
lods
push
pop
fidivl
and
push
cmp
lret
and
loopne
aam
cmp
push
inc
adc
jb
jns
rcrb
out
dec
lret
nop
sbb
ficoml
clc
mov
orl
imul
adc
repnz
dec
mov
mov
add
and
cmp
cmp
cs
add
js
xchg
push
xchg
dec
inc
sbb
rorb
add
xchg
sub
inc
mov
push
pop
aas
add
push
stc
loopne
data16
pop
test
push
add
lcall
fidivrs
mov
or
clc
or
inc
add
andl
and
scas
in
das
sbb
aam
dec
enter
add
jge
and
push
sahf
and
inc
inc
mov
add
les
insb
sub
lcall
shlb
add
mov
lcall
pop
xchg
call
outsl
scas
shll
jae
loope
mov
sbb
sub
lock
dec
jae
popf
adc
jno
add
out
inc
fsub
jg
mov
xor
sub
scas
dec
adc
test
lret
ret
in
add
jns
dec
loopne
ja
out
in
imul
rclb
in
shrb
push
ret
jmp
push
test
mov
xor
int3
push
pusha
psllw
jle
rol
in
xchg
add
pop
scas
add
xor
ror
das
ret
std
out
pusha
cmp
xor
sbbl
fsubrp
loopne
add
fwait
addr16
inc
mov
mov
addr16
add
cs
and
cli
add
push
sub
test
jge
ror
outsb
adc
insl
mov
mov
lret
cmpsb
notb
out
sub
adc
cs
jo
dec
sbbb
pop
lret
cmp
nop
nopl
jp
sahf
clc
mov
and
test
stos
orb
insl
jno
jle
or
cli
push
add
cmp
sti
mov
add
jns
enter
fs
jno
push
lahf
js
jp
nop
pop
add
adc
dec
xor
push
lret
cmpsb
mov
aam
push
js
add
mov
add
cltd
add
nopl
or
jp
es
inc
add
xchg
iret
bnd
rol
push
add
ljmp
add
inc
cmp
ffreep
repz
mov
es
add
mov
mov
push
adc
push
jae
add
in
xor
add
inc
aam
add
xor
dec
mov
adc
jns
sbb
lcall
enter
pop
aad
fwait
loop
adc
sub
push
popa
jp
inc
loope
add
add
jo
lea
cltd
sub
cwtl
adc
sub
mov
inc
fidivs
fcmovne
dec
shr
jle
add
lods
add
jl
xchg
add
xchg
pusha
push
fwait
sti
add
fs
data16
mov
adc
add
push
jo
insb
mov
cs
adc
adc
lea
pop
or
outsl
loopne
pop
cmc
in
mov
icebp
scas
lods
std
xor
cmpsb
stc
sbbb
pop
mov
mov
cli
fimull
push
call
inc
sub
scas
pop
jg
mov
loope
scas
subl
inc
add
pop
xchg
push
add
pop
sahf
push
and
add
adc
add
es
stc
test
loop
sar
js
cmpsl
sub
pop
orb
mov
add
add
ljmp
jnp
add
std
nop
mov
mov
arpl
aad
push
pop
lea
jbe
add
outsl
mov
push
sub
arpl
cmp
mov
add
push
xlat
in
add
jg
roll
and
and
or
add
icebp
pop
stc
repnz
mov
add
icebp
push
jle,pn
dec
mov
out
dec
int3
jne
in
add
lret
loopne
or
out
pop
test
mov
mov
movsl
xchg
insl
mov
sub
and
cmp
popl
in
mov
daa
insb
int3
hlt
push
xor
dec
jno
nop
gs
daa
hlt
lahf
pop
movsl
pop
loope
ror
cmpl
loope
push
push
pop
jo
cmp
push
inc
cmp
push
add
xor
push
inc
push
outsl
inc
stc
xor
mov
sti
jbe
daa
dec
push
jne
mov
data16
inc
test
jbe
cmp
mov
xchg
cmp
in
fwait
hlt
test
bound
lea
orb
or
sbb
push
roll
pop
cmpsb
inc
decl
adc
jne
clc
mov
push
call
add
jge
into
push
xor
push
pop
or
mov
lods
add
nop
hlt
call
mov
lahf
popa
add
pop
pop
adc
rol
jb
sbb
ss
icebp
add
imul
add
idivl
mov
xchg
add
aas
pop
sahf
pop
cmp
jge
stos
mov
add
adc
out
mov
mov
mov
pop
lods
xchg
imulb
out
jg
in
cltd
dec
add
out
subb
testl
inc
cs
mov
aad
push
outsb
jecxz
add
fcoml
sub
jo
hlt
sahf
jmp
stc
ljmp
stos
cmp
cmp
cmpsb
add
aad
add
xor
push
add
int
std
loope
xor
fcmovu
xchg
add
push
cs
pop
sbb
dec
loopne
add
xchg
ds
or
test
xor
out
sub
cmp
in
mov
add
and
jbe
mov
lret
add
pop
pop
xor
jecxz
sub
jno
lea
adc
and
in
adc
mov
ja
xorb
push
jecxz
clc
addb
cmp
add
dec
shrb
aaa
pop
and
lods
sbb
xlat
xor
imul
lock
jg
lods
fistpl
add
push
rolb
outsl
mov
xor
mov
rcll
arpl
jbe
add
mov
aad
subb
adc
push
dec
lahf
mov
jmp
push
xor
movsl
mov
jle
pop
sub
call
into
lahf
add
pop
repz
push
pop
or
lret
sub
xchg
mov
or
jns
add
ljmp
mov
dec
cli
scas
and
xor
add
xchg
adc
mov
popl
mov
loope
pop
or
mov
or
std
pop
push
and
dec
inc
fstpt
movsl
subb
test
add
int3
repz
push
add
push
fistpl
jo
pop
pop
mov
aas
loopne
and
das
sahf
sbb
lea
mov
add
dec
mov
add
and
paddsw
or
outsl
cwtl
cmc
mov
daa
icebp
add
mov
inc
jo
mov
add
and
and
or
out
je
pop
dec
inc
sub
lea
xor
hlt
in
ja
pop
fdivl
movb
lock
and
push
outsb
pop
jmp
movsb
mov
adc
add
leave
cs
es
ja
dec
add
and
pop
jne
mov
pop
add
out
sbb
aam
mov
aas
push
push
adc
stos
ds
js
inc
add
or
add
bound
xchg
xorb
sbb
je
mul
cmpsb
add
cld
mov
mov
add
and
sub
push
or
pop
xor
and
imul
add
xlat
sarl
dec
rorl
lea
fadds
add
jne
or
mov
xor
cmp
sbb
xor
xchg
inc
jb
mov
add
mov
xor
mov
mov
add
fldl
push
cmp
dec
push
dec
mov
pusha
call
hlt
pop
inc
iret
inc
or
ret
or
mov
hlt
adc
lcall
daa
jmp
push
inc
testb
js
jge
add
inc
xor
pop
ror
mov
add
in
pop
clc
sub
inc
or
or
aas
xchg
outsb
pop
add
shlb
xchg
lock
cmp
ret
pushf
ljmp
popf
bound
xor
inc
mov
stos
push
sbb
sub
jg
sysenter
stos
outsl
divb
in
cmp
lock
scas
loopne
mov
inc
push
repz
jb
loop
add
adc
fiaddl
adc
es
add
push
push
push
pop
aam
jp
pop
test
dec
into
add
lret
fisubl
cmpl
add
out
mov
fsubs
in
jnp
push
repz
orb
adcb
pop
jmp
xchg
lods
xchg
xchg
add
xor
xorl
xchg
in
push
push
out
inc
sti
add
adcl
inc
push
fidivl
jo
mov
das
push
xchg
stos
xor
mov
add
aad
add
je
pushf
out
xchg
jecxz
sub
add
xchg
pop
push
add
imul
mov
mov
add
adc
daa
add
jl
add
mov
pmaxsw
fs
inc
das
dec
add
push
in
jmp
outsl
add
mov
mov
push
xor
addr16
fwait
push
mov
cld
test
or
push
dec
sub
mov
test
lock
push
add
jge
int3
pop
in
push
call
test
pop
stos
sbb
sbb
cmp
add
stc
lcall
xchg
mov
loop
aaa
sbb
fadd
hlt
pop
lea
mov
mov
cli
push
or
and
add
jnp
add
inc
sbb
pmuludq
sub
and
lods
lock
add
scas
xchg
adc
inc
into
ljmp
icebp
sbb
mov
mov
cmp
add
jbe
test
nop
scas
aaa
jecxz
jb
dec
pop
ja
jae
test
add
aad
lds
dec
cs
mov
xchg
and
sbb
adc
adc
in
add
mov
fwait
add
xchg
fadd
mov
hlt
pop
popf
fnstenv
lret
clc
pcmpeqb
int
adc
lcall
cmp
enter
add
inc
mov
imul
es
add
mov
loope
inc
call
cmp
mov
lock
xchg
icebp
jns
movsb
add
xor
icebp
sub
sar
and
or
jbe
add
aas
jecxz
push
jmp
icebp
dec
scas
jb
in
test
pop
jae
xor
out
mov
loopne,pn
pop
shl
add
jns,pt
add
arpl
xor
add
xchg
sarb
xchg
cmc
sub
lods
pop
pop
push
mov
fnstsw
pop
movl
jnp
sub
mov
xor
loop
push
pop
arpl
js
daa
out
add
add
fldt
mov
and
pop
inc
adc
add
imul
cmp
cltd
cmpsb
orb
scas
mov
or
imul
and
or
add
xor
adcb
rol
ds
xchg
dec
test
lahf
imul
cmp
aas
out
jg
add
mov
hlt
sub
sti
add
pop
int
repnz
push
mov
add
test
gs
mov
gs
add
fistps
jge
jmp
shlb
into
or
mov
add
int3
add
and
shlb
cld
test
add
sahf
into
jmp
mov
mov
pop
dec
mov
add
pop
arpl
cmpsl
jo
dec
add
add
lret
sti
add
xor
dec
movb
cmc
xchg
inc
pop
mov
shlb
pop
scas
add
int3
sub
jno
fnstsw
or
sbb
lock
out
xchg
cmp
aam
loop
loop
add
cs
stos
add
rol
pop
sbb
mov
and
inc
mov
loop
inc
dec
fiadds
or
jns
imul
iret
mov
or
sub
fnsave
jecxz
sti
jns
xor
dec
mov
clc
testb
mov
addb
sahf
push
pop
jno
cmp
or
je
adc
out
leave
sar
call
inc
adc
add
jge
scas
sub
repnz
add
arpl
lret
mov
test
add
sub
fs
add
pop
add
mov
dec
repz
call
cwtl
mov
loopne
mov
lds
fnstenv
testl
add
lods
popa
stos
hlt
in
out
inc
pop
inc
lock
loop
push
xchg
dec
adc
add
stos
mov
addr16
xchg
sahf
jo
jmp
jg
add
aad
and
and
iret
imul
insb
sub
sub
fmulp
in
and
outsb
fists
ss
xlat
pop
adc
add
ret
cs
and
cmp
add
movsb
popa
pop
nop
mov
hlt
out
xchg
pop
and
aaa
pop
or
add
pop
adc
filds
xor
insb
sub
jno
push
ds
or
pop
sahf
cmp
aam
loope
fxch
lods
xor
out
add
ds
add
stos
popf
cwtl
push
add
loopne
sub
dec
or
add
maskmovq
test
imul
xor
dec
mov
jns
jge
add
mov
and
inc
lahf
cs
mov
inc
push
frstor
je
add
sub
int
pop
jns
mov
adc
ds
add
imul
shlb
push
pop
xor
add
jbe
add
pusha
out
out
cmp
add
push
jb
aas
fsubrs
pop
imul
sahf
mov
aas
push
xor
push
xchg
inc
mov
sub
mov
out
mov
test
xchg
ficoms
insl
pusha
pop
add
cmpsb
addr16
sbb
push
incb
jnp
lock
jb
ret
das
add
mov
mul
lods
xchg
jge
scas
imul
stc
inc
jg
cmp
cwtl
cld
lahf
cmpsl
popa
out
sub
test
and
mov
or
jne
addr16
push
idivb
push
sbb
inc
clc
jl
testb
stos
ss
sbb
test
scas
lret
pushf
inc
pop
pusha
inc
js
pusha
out
loopne
arpl
xchg
add
lock
add
rcl
mov
shrl
rolb
cmp
xchg
test
push
cmp
pop
add
add
dec
in
jno
and
lods
adc
aaa
push
add
mov
jne
xor
mov
sbb
push
dec
add
jle
sbb
test
shrb
sub
mov
imul
mov
dec
mov
adc
lods
add
test
pop
stos
add
jae
iret
inc
rclb
aas
outsl
jbe
adc
dec
mov
add
pop
scas
inc
fisttpl
popl
dec
lods
push
mov
jle
icebp
pop
push
fimull
sub
sub
xor
mov
jle
cwtl
push
add
pop
or
jbe
imul
hlt
adc
jno
add
and
add
enter
xchg
aad
cld
xchg
inc
add
jns
push
dec
sub
add
ljmp
sub
add
in
mov
fsubl
fisubrs
push
mov
dec
scas
add
push
daa
inc
push
sti
fcmovne
xchg
jmp
das
icebp
movsl
call
adcb
cmp
sub
and
cld
and
outsl
sub
lahf
add
addl
das
push
into
flds
gs
js
cmpsb
loopne
ja
add
int
mov
fmull
or
sbb
andb
into
jg
add
lods
nop
ljmp
mov
loope
stos
enter
ss
xor
inc
xchg
jmp
push
cmp
mov
insb
daa
cs
add
jp
xchg
flds
pop
add
sub
mov
dec
outsl
leave
inc
xchg
repz
adc
movsb
call
out
push
cmp
add
stc
mov
pop
ljmp
jp
mov
gs
popf
mov
shlb
or
add
arpl
add
pop
fisubs
leave
test
add
pushf
xor
add
into
jp
nop
or
cmp
shlb
aad
push
jbe
std
or
cmp
das
adc
shl
add
fildl
iret
mov
sub
les
add
test
adc
push
shlb
jbe
popa
xchg
sbb
call
cmp
rorb
insl
bts
lcall
cmp
sub
mov
int
test
xchg
cwtl
push
andl
or
pop
mov
dec
add
lea
inc
add
dec
mov
inc
roll
cmp
in
pop
outsl
rol
ja
popl
sbb
sub
jg
add
loope
icebp
cmp
or
and
xor
mov
outsb
mov
daa
adc
mov
lret
loopne
xor
cmp
add
adc
mov
mov
test
push
les
add
bswap
mov
pushf
jb
aad
push
add
pop
dec
xchg
mov
add
mov
dec
int3
xchg
add
pusha
movsb
out
dec
sbb
popf
inc
les
push
andl
repnz
rcrl
xchg
pop
inc
jg
inc
push
out
pop
sub
and
popa
cmpsl
add
and
loopne
aam
add
sahf
in
loopne
out
add
jp
cmp
jge
sub
jl
lock
push
push
nop
and
mov
arpl
sub
hlt
pop
into
add
cltd
pop
jmp
push
push
sbb
fwait
js
cmp
icebp
mov
sub
ds
push
add
xor
insb
popa
cmp
pop
scas
add
cli
pop
es
rolb
clc
test
mov
hlt
adcl
sbbb
inc
ss
scas
fildl
rol
mov
add
jno
mov
xchg
sub
xlat
push
add
mov
jmp
mov
pop
aad
push
inc
cmpsl
xor
xchg
sbb
leave
xchg
or
mov
cmp
mov
scas
lahf
pop
sbb
imul
mov
faddl
cli
pop
aas
xchg
rorl
add
mov
and
fisubrs
pop
adc
stos
xor
add
in
pop
cmp
xchg
js
xor
mov
rorb
out
dec
push
iret
add
sub
in
dec
add
jle
pop
add
sbb
dec
add
je
add
and
adc
push
incb
lret
insb
bound
mov
sub
stc
cmp
lock
pop
into
add
jns
push
inc
popf
mov
cli
hlt
jae
xor
pop
es
xchg
add
in
cmc
mov
iret
cmpsb
inc
loop
push
jo
xlat
js
cwtl
ljmp
sub
jbe
lods
xorl
popf
add
jb
jmp
jge
lods
push
aam
into
mull
and
out
andb
sub
cld
or
pop
add
repz
or
add
inc
sbbb
ljmp
lret
xor
xchg
jnp
or
loopne
out
ja
add
mov
push
mov
add
mov
add
stc
inc
iret
add
xlat
dec
and
mov
sbb
push
or
and
pop
rolb
add
test
pop
mov
lds
sbb
sub
fistpl
out
xor
cs
pop
ss
pusha
push
add
or
pop
bnd
add
hlt
mov
fldenv
mov
je
add
adc
sahf
xor
xor
add
movsl
and
add
adc
push
mov
arpl
cltd
xchg
enter
addr16
jb
ja
and
icebp
in
mov
in
clc
in
push
movsl
shrl
and
push
dec
idivb
adc
rolb
push
movsl
dec
pop
add
mov
mov
xor
push
out
mov
add
sub
dec
add
into
push
jp
int
xor
add
test
lcall
fidivrs
rolb
mov
pop
pop
mov
dec
mov
mov
pop
divl
and
mov
xor
scas
les
movsb
adc
xor
jns
add
popf
and
dec
out
add
pop
adc
add
ret
fwait
pop
add
out
and
mov
outsb
add
dec
test
cmp
mov
ljmp
add
pop
pop
sub
into
ja
add
rcrb
pop
dec
test
sbb
lcall
popl
ret
insl
insb
out
or
sub
inc
xor
push
and
pop
pop
sbb
jg
data16
ljmp
sub
ljmp
cld
sub
push
jl
add
movsb
pop
sidtl
sbb
jl
push
mov
or
pop
es
add
jne
push
arpl
adc
xchg
incl
pop
inc
enter
in
jmp
cmc
push
call
sub
fisubs
sbb
push
mov
mov
shrb
mov
jno
loope
and
push
fidivs
std
cmc
rorb
or
out
lods
adc
sbb
imul
rcll
and
pop
jae
push
dec
push
sub
sbb
lods
imul
inc
scas
pop
leave
sbb
sti
jno
test
add
xchg
pushf
insb
out
xor
pop
push
ss
xchg
xchg
adc
loop
add
loop
scas
cmp
mov
cmp
bound
pop
sbb
ds
mov
add
testl
int
xor
aas
push
xchg
lcall
rorb
in
xchg
push
repz
jmp
lea
test
add
iret
pop
inc
mov
popa
test
xor
pop
ficoml
insb
into
fisubrs
gs
sarl
jbe
aaa
pop
xchg
mov
inc
loopne
xor
popf
add
push
cmp
test
jno
in
mov
pop
add
rorl
aaa
lods
arpl
pop
dec
jb
mov
int3
push
je
clc
pop
inc
daa
add
imul
cmp
dec
int3
adc
push
hlt
mov
mov
cmpsl
dec
add
aam
pop
add
and
add
mov
fwait
arpl
mov
gs
push
pushf
les
pop
pop
add
push
sub
pop
ljmp
xor
cmpsb
mov
es
popw
sub
push
lea
out
sahf
stos
ficoms
jg
mov
dec
adc
sub
mov
orb
insl
add
adc
sub
inc
pop
das
cltd
and
pop
add
jl
add
clc
scas
add
js
icebp
sub
in
mov
xlat
xor
push
insl
sub
inc
add
in
add
lea
push
test
mov
out
js
jle
hlt
xchg
roll
cwtl
lds
cmpsl
xchg
nop
cmp
jmp
xchg
cwtl
ret
add
dec
arpl
std
in
repnz
and
mov
pop
into
cmp
xchg
cld
mov
pop
pop
das
mov
xor
sbbb
pop
sbb
cmp
dec
scas
lock
mov
cmpsb
cltd
pop
add
out
loop
inc
in
xorl
and
jmp
inc
mov
mov
jecxz
shll
inc
in
add
sub
cli
add
push
mov
stc
lock
adc
push
shl
mov
outsl
cmp
into
test
lret
pop
pop
push
mulb
jne
fimull
add
dec
xor
and
add
sbb
cmp
leave
add
mov
fdiv
and
adc
push
dec
or
cli
jmp
add
insl
dec
cmpsl
mov
addr16
add
arpl
lahf
popa
repz
cli
jmp
pop
add
pusha
mov
add
int3
cmp
js
add
out
movsl
movsb
push
mov
lret
dec
loope
push
mov
add
pop
cmp
add
mov
and
jb
add
cmp
fidivrs
mov
scas
and
dec
and
clc
je
add
inc
cmp
daa
cltd
into
or
mov
aaa
call
lods
or
xor
cmp
jnp
xchg
jg
add
or
xchg
aad
pop
repz
pop
ret
adc
jecxz
test
pop
aad
fdiv
or
jae
lods
mov
iret
out
mov
jb
jp
inc
cmp
xchg
add
cld
fsincos
dec
fstl
sbb
adc
dec
stos
pop
pop
out
push
mov
mov
jmp
mov
mov
mov
lock
mov
pop
pinsrw
adc
addr16
add
cmp
mov
add
test
add
js
fiaddl
mov
jmp
ret
jle
insl
add
xchg
cli
cmpsb
scas
mov
insb
mov
and
lock
out
xchg
ret
dec
sub
subb
rcll
push
fiadds
ret
sbb
cmp
jbe
adc
add
call
mov
jl
xchg
out
aam
cmpb
cld
mov
add
xchg
and
shll
inc
pop
hlt
cmc
lret
fidivrl
xor
sub
loope
ljmp
jle
out
jecxz
push
sbb
ds
test
stos
and
sbbl
add
sbb
xchg
loop
sbb
rolb
jne
push
lea
cld
adc
cld
data16
xor
addr16
add
daa
dec
ret
mov
loope
hlt
pop
stc
lods
inc
adc
mov
add
add
icebp
pop
add
aaa
xchg
fimuls
push
add
pop
int3
dec
fs
push
jbe
sub
jns
xchg
cmpsl
in
loope
mov
movb
repnz
stc
fsub
rclb
popf
cltd
sarb
pusha
pop
add
sar
gs
mov
push
setne
fistl
dec
fdivl
xchg
push
mov
pop
mov
mov
fildl
pop
insl
aaa
inc
jl
pminsw
xor
test
adc
addl
mov
cmpsl
lea
daa
push
stos
push
adc
add
push
test
add
inc
adc
adc
pop
pop
jb
and
les
lret
movb
cli
icebp
mov
fxch
popf
jge
or
imul
sarl
movsl
or
lahf
lock
add
push
mov
lock
add
lods
js
push
or
add
xor
repz
mov
in
jns
cwtl
aaa
jge
add
adc
xchg
mov
cli
lcall
sarb
lods
add
mov
jmp
sbb
lcall
pop
push
sub
cmc
loop
movsl
sub
stc
xor
jp
inc
mov
xor
jmp
int3
add
iret
jecxz
sub
fdivrs
xchg
cld
scas
leave
dec
cs
js
test
sub
pop
movsl
cmp
daa
push
inc
and
out
and
add
push
push
sub
iret
call
push
push
pop
mov
add
mov
lods
jge
pusha
in
cmp
outsb
nop
adc
rcrl
shrb
add
mov
push
mov
pop
push
cmp
pop
sub
jnp
add
adc
test
mov
ds
and
mov
xchg
mov
scas
out
aaa
push
lock
dec
cmp
xor
mov
loop
add
xor
out
cmc
mov
adc
out
push
pop
adc
shlb
in
mov
mov
pop
push
loopne
mov
push
adc
and
jno
push
and
inc
adc
faddl
test
sbb
fcoms
adc
loop
adc
sbb
aam
inc
rorb
and
jno
push
and
cmp
test
enter
inc
sub
mov
push
and
dec
push
mov
mov
ds
imul
adc
xor
pusha
xchg
add
push
dec
dec
mov
inc
xor
push
and
testl
fmul
dec
orb
inc
stc
xor
pop
iret
fdivrs
inc
rclb
and
dec
inc
dec
shrl
mov
inc
pop
adc
or
and
unpcklps
pop
or
and
ds
xor
enter
sub
mov
ret
cli
cmp
jl
iret
mov
ret
shll
mov
enter
daa
pop
adc
adc
adc
dec
and
inc
cmp
loop
push
add
sub
dec
hlt
add
rcll
gs
dec
les
rol
mov
push
jne
cmp
add
add
mov
sti
ljmp
jne
mov
jae
xor
fst
stc
fs
lods
das
jp
xor
inc
shlb
xchg
in
adc
nop
jle
lcall
add
in
jl
inc
sub
mov
mov
bound
adc
or
cld
fwait
push
adc
cmp
shll
stc
xchg
inc
aas
movsb
hlt
sub
mov
dec
pop
cmpsl
aaa
stos
push
xchg
and
loopne
dec
add
mov
mov
stos
out
jecxz
in
popf
or
pushf
jb
pop
mov
cltd
mov
jo
stos
pusha
iret
sahf
inc
xchg
stos
rcrb
jmp
fcmovb
data16
in
addb
or
cltd
sub
stc
clc
mov
call
out
movsl
cmpsb
pusha
jg
add
sbb
out
pop
mov
ret
mov
in
add
int3
mov
cmp
movsl
mov
lea
aad
pop
and
mov
jl
lds
inc
pop
sbb
mov
shrb
jnp
xchg
sbb
push
sub
or
cwtl
scas
add
lea
sahf
add
movsb
test
cmp
loope
sbb
push
fsubrl
outsl
cmp
dec
add
pop
adc
aaa
orl
add
ror
xchg
mov
adc
or
data16
sbb
dec
dec
xchg
xor
push
xor
mov
out
sbb
dec
push
add
enter
mov
bound
push
aam
pop
sbb
into
xor
mov
ret
out
aad
xlat
add
adc
add
jae
in
shrl
aam
aas
push
xchg
mov
fstps
negl
es
sarb
cmp
pop
dec
xor
and
inc
pop
cmp
clc
psubw
and
mov
pop
adc
scas
inc
add
pop
add
pop
or
call
adc
cmpsl
ds
mov
jecxz
loope
notb
mov
cwtl
mov
add
loopne
ss
daa
movsb
cmp
insl
push
loope
mov
jnp
jb
ret
pop
dec
imul
push
sbb
test
ljmp
enter
mov
js
mov
jp
je
rcrb
fsubp
pushf
push
add
jae
jg
mov
clc
jge
add
mov
cmp
outsl
mov
test
insb
add
push
int3
pop
pop
push
mov
dec
test
mov
fdivl
fnsave
push
add
js
and
sub
or
adc
mov
adc
adc
push
sub
inc
pop
fadd
dec
incb
pop
repz
sub
lcall
pusha
filds
les
inc
or
dec
lds
and
inc
int
popa
xor
or
insb
pop
push
dec
xchg
xor
imul
movsb
lret
or
adc
sbb
sbb
cwtl
lret
and
incb
or
xchg
add
fwait
daa
adc
add
sbb
push
mov
mov
or
sbb
sbb
or
shlb
loope
clc
pop
mov
mov
jno
fisubs
repnz
adc
clc
in
add
mov
addl
mov
repnz
and
movsb
aaa
mov
pushf
lock
out
sub
scas
mov
adc
and
shlb
sub
pop
rclb
cld
sbb
pop
dec
mov
addr16
cmpl
cmp
inc
or
jb
dec
lods
sahf
cmp
xor
and
adc
es
inc
lock
imul
ljmp
cs
inc
cmp
int3
aam
arpl
or
aaa
aam
xchg
mov
xchg
movsb
mov
nop
jb
movsb
shlb
jp
aas
addl
ret
jg
mov
sbbl
repnz
std
pop
les
inc
jne
mov
push
sub
nop
sub
mov
mov
and
xor
xchg
dec
fildll
cmp
or
mov
add
in
push
push
andb
xlat
fwait
cmp
jno
add
sub
mov
add
sbb
sar
xor
cs
jbe
inc
mov
mov
addb
push
das
outsb
cmp
mov
add
ja
shlb
cmp
addb
dec
mov
add
jecxz
push
fs
or
pop
fldcw
pusha
sub
loopne
imul
or
test
into
dec
push
cmpl
inc
or
pusha
shrl
mov
mov
sti
jo
sub
aaa
test
imul
out
add
or
dec
and
push
pop
lods
add
xor
out
les
sub
jg
rcrl
imul
mov
inc
dec
and
jb
lods
or
mov
cmp
push
daa
int
and
mov
or
or
rclb
and
and
mov
shrb
push
mov
adc
mov
xchg
sbb
inc
or
adc
adc
or
inc
or
fadd
mov
mov
push
push
mov
inc
adc
jne
and
dec
pop
js
push
fs
adc
mov
jmp
adc
or
mov
xor
push
sub
push
adc
ret
mov
and
jmp
fists
les
nop
clc
lahf
dec
push
push
push
arpl
mov
dec
and
outsl
bound
xor
adc
call
mov
les
xor
lret
add
xor
and
dec
in
xor
inc
xchg
mov
mov
sahf
sti
jecxz
push
fdivrl
add
lds
xor
cmp
call
push
jbe
add
dec
popa
fidivrl
mov
jecxz
add
add
xchg
pop
je
rcrl
jmp
xor
mov
add
jle
mov
test
or
or
int
filds
push
ficomps
mov
loope
xchg
add
bound
cmp
sbb
call
std
into
in
add
pop
add
push
jecxz
call
pop
mov
add
pop
addr16
clc
lahf
xchg
pop
adc
mov
push
sbb
add
shr
sbb
fucom
add
imul
push
add
pusha
jge
xchg
push
xchg
cld
repnz
push
xchg
jae
xchg
pop
cmp
jmp
nop
cwtl
sbb
sub
cmp
inc
in
mov
movsb
add
bound
add
push
inc
dec
aam
cmc
movsl
push
xchg
sarb
jmp
add
mov
xchg
push
jmp
addr16
testb
cmpsl
sti
cwtl
cmp
cld
popf
ss
das
add
xchg
leave
push
inc
xor
push
shl
add
jge
dec
push
jno
add
and
add
inc
dec
popf
jnp
add
fcmovnb
cltd
xchg
loopne
inc
add
pop
sbbb
je
clc
fildl
sub
insl
jle
fucom
mov
mov
das
and
push
in
and
inc
rorl
mov
mov
leave
icebp
adcb
xor
ds
adc
inc
add
push
jo
cmp
cmp
pop
fistpl
cld
flds
or
fwait
rorl
jbe
add
or
daa
adc
or
cs
cmp
mov
mov
push
in
stos
sbbb
into
fwait
loope
add
mov
adc
adc
pop
mov
je
fcmove
insl
lret
or
cmp
in
add
pop
loopne
xor
sbb
inc
cltd
mov
xchg
movsl
int3
add
cmp
shrb
out
loop
add
inc
imul
popf
rclb
movsb
add
sbb
or
cmp
dec
cwtl
xchg
mov
mov
xor
xchg
and
add
push
and
ss
jae
mov
jp
push
add
loop
std
mov
addb
mov
mov
add
push
pop
scas
negl
ffreep
jb
push
inc
mov
incb
or
cld
push
loopne
pop
pusha
or
ror
add
cmp
stc
ja
sbb
inc
cmp
addr16
fildl
mov
leave
add
pop
sub
mov
sbb
daa
ljmp
out
leave
and
mov
ljmp
sbb
fildl
jl
xchg
xchg
lock
adc
adc
xchg
sub
push
push
cmpsb
lods
addb
stc
dec
stos
in
sbb
test
jmp
scas
cmp
mov
aas
xchg
add
inc
and
dec
mov
xchg
fsubrl
sbb
sub
testl
xchg
stc
lea
adc
cs
add
inc
mov
adc
ljmp
je
mov
xor
add
push
dec
and
xlat
add
hlt
adc
ss
cmpsl
test
cmp
add
clc
iret
imul
arpl
shlb
loope
add
add
leave
bound
add
xor
mov
add
imul
repnz
call
mov
inc
pop
scas
jp
lods
arpl
jb
in
mov
or
out
out
test
pop
inc
jo
dec
add
and
sbb
adc
add
arpl
jb
std
mov
add
lods
iret
inc
repnz
mov
jecxz
cmpsl
repz
scas
add
fbld
iret
cmpsb
push
shrl
loopne
js
dec
addl
leave
lock
jmp
push
lcall
dec
mov
cmp
mov
movsb
xor
testl
add
lahf
inc
lret
push
out
add
push
sub
and
popa
sub
data16
add
stos
clc
shl
imul
xor
or
push
add
pop
add
sbb
ret
int3
jbe
add
and
dec
fsubl
dec
idivl
mov
loopne
loopne
mov
int3
pop
insl
loopne
mov
cmp
shlb
jge
adc
sahf
pushf
add
cmpsl
add
lret
pop
dec
bound
sbbb
faddl
fwait
ret
mov
add
add
mov
out
mov
inc
xchg
les
jno
iret
cwtl
insb
test
repz
mov
jns
les
add
inc
fs
pop
add
enter
mov
repnz
adc
xchg
enter
xorb
add
ss
sbb
daa
pusha
cmpsl
pop
mov
mov
mov
cli
sti
xor
shlb
and
lret
or
or
call
mov
inc
xor
sbb
inc
dec
and
dec
mov
dec
lock
lea
cmpl
jmp
sub
shr
xor
xor
xor
or
mov
inc
sub
in
cmp
sbb
mov
sbb
imul
cmp
fneni(8087
mov
fstpt
test
popa
bound
fs
imul
insl
outsb
outsl
jo
jb
add
ja
jns
cs
push
jecxz
mov
rcll
push
add
push
pop
pop
pop
cmp
sti
jne
adc
fstpt
mov
pushf
push
mov
call
mov
inc
add
inc
inc
mov
ljmp
in
call
sub
lods
loope
cwtl
push
shlb
push
aaa
adc
cmp
cmp
bound
arpl
in
gs
jo
jo
pop
imul
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jbe
ja
js
jns
jp
inc
addl
addl
inc
addb
jo
jo
jo
mov
test
adc
movsb
jo
push
jo
xchg
jg
addr16
pop
pop
pop
pop
pop
cmp
test
xor
sbb
jl
stos
xchg
inc
add
or
push
pushf
mov
ret
popf
pop
mov
cli
mov
lret
mov
aaa
cwtl
movsb
inc
cmp
jae
add
adc
jmp
mov
add
sbb
push
sarl
and
nop
pop
add
and
fiadds
movsb
add
xchg
mov
jp
add
cmp
inc
addb
aaa
or
std
jg
jl
add
sub
lcall
fwait
ljmp
mov
xor
mov
add
rolb
test
add
mov
xchg
testb
mov
das
mov
out
stos
test
adc
xchg
cld
loope
pop
test
adc
fmuls
add
jle
nop
mov
inc
add
pop
je
repnz
icebp
mov
flds
iret
sub
sub
xchg
push
cmc
add
xor
mov
and
pop
xchg
add
add
daa
jno
mov
mov
add
adc
mov
movsl
fiaddl
insb
inc
decl
inc
nop
mov
imul
cmc
rorl
add
out
adc
fmulp
mov
jo
int3
out
jl
enter
mov
shlb
pop
faddl
mov
or
cmp
xlat
loopne
mov
xor
push
hlt
sub
out
adc
in
add
push
scas
jae
xchg
or
add
orl
sbb
insl
ret
pop
leave
ficoms
rclb
cmp
sub
ret
dec
pop
or
outsb
jmp
push
add
mov
add
ja
movsb
sub
jbe
or
gs
aam
pop
push
cltd
imul
mov
push
out
scas
add
push
or
cmp
outsb
push
add
push
cmp
xchg
clts
sbb
cltd
inc
movsl
sub
push
aam
xchg
adc
hlt
pusha
pop
mov
in
test
push
add
sbb
std
add
xor
inc
sbb
jo
cmc
jle
adc
scas
add
sbb
push
in
xor
test
call
add
test
iret
test
add
mov
shll
mov
daa
lret
decl
push
jle
inc
rcrl
das
add
iret
xchg
insl
cltd
add
bound
sub
mov
test
cld
or
xchg
xchg
cltd
inc
ja
mov
lea
ljmp
push
cmp
push
in
sbb
or
sub
push
add
int
insl
out
repz
push
addr16
leave
add
xchg
testb
es
mov
add
lea
mov
add
xor
clc
mov
add
jae
clc
aam
add
fiadds
xor
std
subb
shll
add
fisubrs
imul
cwtl
add
sub
fadds
sub
or
inc
bound
mov
push
sar
xchg
add
in
cmpb
xor
nop
mov
mov
mov
xchg
movsb
addb
mov
jl
add
ss
dec
and
jbe
jne
jae
cmp
mov
nop
bound
test
pop
sbb
xchg
cmpsl
or
subps
test
in
imul
int
pop
or
ljmp
out
add
adc
pop
mov
push
movsl
mov
push
adc
add
lcall
pop
f2xm1
loopne
shl
stos
lret
addr16
mov
pop
mov
fwait
sti
rolb
jl
dec
adc
imull
rol
ja
fcompl
dec
adc
xlat
or
xor
mov
xorb
push
sub
pop
add
push
mov
mov
xchg
gs
mov
mov
adc
add
xor
pop
inc
stos
inc
ret
adc
mov
test
sti
repnz
lret
cwtl
mov
mov
or
or
add
inc
scas
lea
lmsw
sbb
aam
push
jae
add
jmp
adc
add
or
cmp
imul
call
jp
push
je
incb
push
outsb
popa
add
and
mov
dec
int3
sbb
or
in
jbe
hlt
add
imul
jo
pop
test
pop
xchg
ljmp
pop
js
adc
js
add
mov
ja
sahf
and
jp
add
pushf
pop
imul
mov
add
pop
mov
mov
push
jns
stc
and
adc
ror
fldl
jge
pop
dec
mov
sbb
out
add
mov
inc
add
jns
dec
xchg
mov
xchg
xor
cmp
push
rcrb
pop
or
dec
test
rcrl
into
push
and
enter
out
jmp
add
cmp
fdiv
xchg
cli
repnz
popf
dec
inc
add
scas
stos
jle
repz
fisttps
adc
bound
pop
fisttps
popl
cmp
mov
and
jle
pop
lret
and
push
js
sti
jmp
hlt
mov
jecxz
ja
popa
das
daa
ds
mov
sarb
or
shlb
mov
pop
cli
inc
dec
dec
mov
xchg
inc
push
pop
call
faddp
hlt
mov
inc
iret
hlt
pop
cmp
out
mov
stos
mov
inc
clc
mov
xchg
sub
cs
cmp
dec
loopne
lret
incl
pop
fsubs
adc
or
push
fistpll
sbb
cld
dec
inc
mov
dec
push
das
into
sub
test
mov
jmp
aaa
jnp
pop
xor
rolb
cmp
lea
dec
or
inc
xor
or
push
push
icebp
push
cmp
mov
fucom
inc
mov
or
mov
aad
in
aaa
dec
adc
adc
test
hlt
mov
add
out
mov
enter
shlb
dec
xor
sub
mov
les
jns
or
sbb
popf
jae
mov
lea
imul
push
xchg
sub
test
clc
add
ja
ds
fidivrs
std
aaa
repnz
sbb
es
xchg
and
add
or
mov
pop
mov
sbb
inc
or
mov
cmp
adc
mov
push
pop
push
in
movsl
lods
cmp
inc
test
test
cld
add
call
xor
mov
sbb
popl
nop
or
nop
push
jg
and
adc
cwtl
and
pushf
mov
push
test
subl
xor
add
sahf
pop
sub
or
xchg
nop
xchg
xor
std
or
cmp
push
js
sub
sub
int3
sbb
xor
and
or
xchg
cmp
inc
enter
sbb
and
adc
or
jecxz
pushf
adc
inc
jp
inc
sub
jb
out
inc
and
sub
jle
push
inc
or
loopne
or
nop
adc
add
iret
test
mov
and
mov
call
inc
cwtl
imul
adc
in
cld
adc
jle
jb
or
or
push
or
call
push
ljmp
push
int3
add
in
add
or
jne
lret
or
pop
jns
mov
xchg
add
sbb
and
adc
mov
ds
xchg
jo
sbb
xor
xchg
cmp
and
jge
xchg
or
push
nop
or
test
sub
rcll
xor
push
nop
xchg
and
inc
cwtl
xor
adc
inc
and
push
movsb
or
test
dec
adc
lods
and
mov
or
adc
and
and
pusha
xorl
fs
push
push
cmpb
clc
popl
andb
push
xlat
inc
mov
pop
test
mov
loop
pop
inc
or
dec
fs
ret
mov
cmp
test
ja
dec
or
sbb
push
or
add
fmuls
cmp
jecxz
cmpsl
xchg
pop
inc
xchg
jo
mov
lods
les
clc
pop
lods
test
xor
lret
cmp
fcmovne
lock
popf
lahf
ss
lods
icebp
fsubrs
xor
inc
xchg
daa
mov
ds
orb
repnz
xchg
jb
stc
add
pop
jg
je
ja
jp
add
pop
mov
push
mov
loopne
shl
adc
subb
outsl
add
mov
mov
add
sbb
popf
and
mov
and
ljmp
cmp
daa
faddl
xor
sbb
call
or
mov
inc
lds
stc
cmpsl
push
orl
adc
pusha
pop
sahf
xchg
jns
add
mov
push
add
es
mov
jno
mov
ja
xchg
and
inc
xor
roll
in
mov
push
jae
add
les
stos
pop
pop
add
cmp
mov
movl
rorb
dec
sbb
aad
xor
mov
cwtl
dec
repnz
ja
add
jo
mov
mov
and
insb
call
repz
push
mov
jns
leave
adc
dec
pop
push
nop
imul
mov
sbb
xchg
mov
pop
xor
add
aad
fadds
outsb
push
push
mov
cld
hlt
fiaddl
mov
insb
adc
add
out
cmpsb
mov
jp
repz
sub
icebp
shlb
aam
push
je
fidivrs
mov
adc
test
mov
movsl
add
push
sbb
or
xor
enter
mov
xchg
mov
loop
fiaddl
gs
push
fs
cmp
lods
add
mov
add
sub
mov
jle
jne
add
jns
mov
mov
divl
mov
cmp
push
pusha
loop
pop
cmp
mov
lock
dec
xlat
add
push
mov
and
movsb
fsubs
ja
rcrb
enter
lds
add
lret
inc
sti
jecxz
out
scas
gs
inc
ret
mov
dec
mov
lods
bound
fcmovnu
pop
inc
loope
or
dec
mov
sbb
roll
fs
push
insb
inc
adc
sahf
cmpb
cmp
mov
sbb
getsec
in
sbb
cs
lea
jecxz
mov
test
clc
notb
leave
mov
jp
fucomp
mov
add
adc
stc
dec
dec
out
and
arpl
jmp
mov
or
pop
dec
add
call
mov
or
sahf
add
push
add
sub
push
add
mov
sbb
add
mov
inc
fwait
lret
iret
mov
add
ror
adcb
sub
add
imul
insl
push
mov
add
xchg
push
scas
nop
outsl
les
cmp
push
sbb
adc
loopne
dec
sub
loop
movsl
jecxz
push
add
push
xchg
out
insl
jo
or
add
in
subb
ljmp
push
mov
faddl
out
adc
jecxz
lcall
pop
mov
nop
mov
lahf
pop
xchg
test
outsb
add
mov
cmp
or
mov
mov
mov
cmp
pusha
sbb
push
add
lret
and
and
jl
mov
ret
lahf
add
mov
pop
mov
push
out
add
sbb
pop
and
add
sahf
jne
mov
lds
stc
pop
jmp
mov
fwait
jmp
lock
push
add
push
mov
outsb
lret
or
add
xor
jp
pushf
sub
cmp
mov
mov
addr16
add
adc
call
or
bound
mov
rdmsr
jo
xorb
rcll
adc
scas
push
xchg
mov
rorb
nop
xor
add
lea
rorb
call
cmp
nop
mov
cmp
mov
add
test
pmaxsw
add
sbb
add
icebp
xlat
adc
or
out
call
xchg
pop
sbb
and
or
lahf
or
pop
mov
pop
cmp
and
lds
mov
fs
add
add
sbbl
pop
cmpsl
sbb
fwait
xchg
je
ljmp
mov
or
mov
sbb
mov
in
iret
lahf
push
out
xchg
or
sub
inc
stc
pop
add
lods
push
sub
mov
sbb
shll
sti
enter
jle
push
mov
add
cmpl
pop
xchg
pop
xor
std
dec
push
je
mov
test
loopne
push
inc
xchg
inc
mov
xor
scas
add
sub
and
movsl
or
rorb
mov
add
sbb
push
adc
jge
adc
dec
inc
sbb
test
je
aam
rcr
fisttps
jle
clc
and
bound
jecxz
add
arpl
aad
in
cmpsb
pop
mov
dec
in
dec
jmp
sarb
clc
rcl
add
fldt
jg
es
fbld
sub
cmp
ljmp
sbb
fcom
dec
xchg
lods
lock
add
inc
js
xchg
or
add
add
fisubrl
mov
lods
fcmovnu
add
je
lcall
xchg
push
dec
and
gs
add
push
push
add
outsl
sbb
mov
lahf
shrb
add
mov
push
add
addr16
add
popf
mov
inc
sbb
cmc
dec
add
or
cmpsb
jge
int3
xchg
xor
add
or
sub
jns
push
or
sub
sahf
test
jmp
fnsave
lods
mov
add
pop
mov
inc
sbb
nop
mov
add
xchg
add
cmp
imul
adc
add
xchg
inc
cmc
add
callw
cld
out
dec
lods
mov
jbe
fldcw
sub
cmc
add
mov
inc
add
arpl
push
add
jg
fs
sub
dec
add
jns
jl
sub
add
or
inc
lret
jo,pt
jo
jno
cmc
pop
rcrb
sbb
aas
out
jl
sub
outsl
imull
shlb
jne
add
sahf
in
push
dec
mov
sarb
sti
das
push
cmp
add
xchg
sub
pop
les
cwtl
lock
addl
int
push
add
lods
rolb
lock
fildll
pop
mov
dec
cmp
mov
movsb
xchg
cmp
push
les
push
and
mov
sub
pusha
or
xchg
push
or
adc
pop
sti
stos
mov
outsl
xchg
or
lods
add
pop
arpl
push
in
call
ud2
push
lahf
stos
pushl
inc
adc
les
cmp
xlat
push
aad
aas
cmp
iret
pop
add
bound
cmp
pop
or
ljmp
aam
lret
jge
cmc
xorl
hlt
add
sbbb
fimull
aas
ljmp
hlt
push
das
add
xor
add
mov
cmpsb
add
lahf
sarb
in
push
mov
push
xchg
cmovg
repnz
hlt
adc
call
mov
imul
fcomps
lods
daa
adc
arpl
ror
pop
add
sub
lea
clc
stos
inc
shrb
or
cmp
ds
add
dec
loop
add
ja
xchg
push
and
addr16
cltd
and
cli
lock
dec
push
inc
add
mov
pop
pop
sbbb
add
loopne
xchg
lods
add
dec
mov
xchg
adc
pop
jmp
and
add
fildl
ds
movsl
into
add
pushf
add
add
shl
lock
jbe
add
mov
nop
data16
xor
loop
jecxz
cmp
das
in
and
out
mov
xor
add
or
mov
add
ss
int3
imul
jbe
push
add
push
or
push
cmpsl
jb
xlat
push
add
fimull
dec
or
pop
in
or
add
add
in
xchg
movsb
add
pushf
out
rcr
xchg
xor
mov
sub
lds
call
push
add
iret
jmp
pop
jle
jp
dec
add
jo
insb
repz
xchg
inc
add
fdivrl
dec
aaa
int
adc
push
in
add
test
add
mov
xor
pop
mov
mov
adc
outsb
sub
insb
in
or
ljmp
sarl
adc
imul
aad
popf
push
inc
popl
gs
dec
sbb
sbbb
std
push
lds
add
add
push
mov
cmpsb
add
push
mov
add
in
push
ficoml
jp,pt
sbb
rolb
outsb
aam
xlat
fldl
add
ret
jmp
inc
mov
scas
jp
sarb
std
jmp
mov
add
test
dec
add
stc
mov
stos
add
mov
jmp
lahf
outsl
sarb
aas
lret
repnz
popf
mov
imul
add
xchg
rcll
insb
sbb
fnstsw
mov
ret
dec
js
or
dec
pop
push
cmp
incl
fstl
push
pop
fwait
sbb
add
push
mov
pop
bound
ja
roll
fcomi
pop
sbb
orl
push
fisttps
jo
push
add
js
push
inc
push
jle
aad
cld
enter
mov
sbb
sbb
test
mov
aad
push
add
stc
adc
shr
add
adcb
mov
push
popa
icebp
mov
inc
movsl
lock
add
mov
add
testb
in
les
add
lret
add
mov
mov
or
jbe
sbb
mov
mov
add
cmp
popa
mov
add
js
scas
jmp
test
ret
sbb
cmp
push
add
or
jns
outsb
dec
jno
das
aas
sbb
mov
aam
inc
arpl
mov
mov
add
shl
add
mov
fldt
mov
nop
dec
mov
inc
je
add
sbb
iret
add
push
and
xchg
xor
test
movsb
and
fldl
jle
add
jno
in
mov
clc
faddl
incb
mov
mov
or
test
pop
adc
xor
mov
icebp
fs
lret
ret
test
add
pop
inc
cmp
adc
and
subb
or
test
lock
rep
imul
into
inc
out
add
lcall
mov
std
sbb
xchg
xchg
adc
movb
jns
call
sub
push
in
out
xlat
xor
mov
xor
push
mov
jbe
add
pushf
mov
shl
jl
add
mov
push
and
sti
movsl
test
mov
push
xchg
test
inc
ss
loopne
fcompl
add
lods
sti
add
sbb
add
lds
xlat
inc
lcall
adc
jmp
mov
lahf
sub
or
jns
mov
sarb
inc
shlb
cmp
pop
popa
outsl
push
lods
inc
nop
cld
adc
mov
push
push
int3
cwtl
and
add
mov
add
and
pusha
xor
aas
cmp
adcb
inc
mov
add
adc
ja
aas
xor
pop
add
push
add
icebp
add
xchg
cmp
add
iret
shll
add
out
test
jo
add
jbe
sbb
and
lock
mov
add
cs
mov
pop
aas
pop
xor
aam
push
inc
or
mov
loop
dec
mov
lods
pop
mov
mov
roll
nop
movl
inc
imul
adc
aaa
cmp
sarb
repnz
sbb
add
outsl
fmull
add
dec
shll
mov
mov
push
jae
adc
add
and
dec
dec
or
in
iret
mov
sub
mov
add
in
add
cmp
ja
daa
sti
in
popf
insb
dec
sub
mov
clc
hlt
lret
bswap
dec
add
push
aam
inc
pop
outsl
or
out
enter
lods
or
inc
lcall
das
notb
add
mov
mov
addr16
adc
ja
add
push
stc
pushw
outsb
push
add
add
pop
mov
mov
xor
sbb
pusha
sti
movsb
out
cwtl
sarb
neg
add
push
cmp
cmp
daa
inc
fisttpl
mov
add
xor
test
pop
cmp
add
fwait
enter
add
outsl
lcall
and
inc
inc
push
js
add
aam
sahf
fists
xchg
enter
sar
cwtl
movd
xor
inc
sbb
add
orb
sbb
cli
fcompl
and
push
mov
cs
js
mov
cmp
rolb
fwait
clc
adcb
add
dec
jbe
dec
outsl
xor
add
clc
outsb
scas
das
pop
add
pop
out
push
xchg
add
jae
and
mov
push
das
loopne
pop
add
fimull
ss
mov
ret
insl
sub
mov
dec
xor
loopne
mov
mov
mov
add
or
lods
add
mov
adc
xchg
inc
rcrb
jg
inc
pop
into
sarb
mov
pusha
or
pop
inc
pop
test
add
or
lret
pop
popw
les
std
loope
lock
and
lock
loopne
test
push
mov
sbb
jle
xchg
add
dec
fsubr
js
dec
cmp
jne
dec
rol
add
in
mov
int
add
jp
arpl
enter
clc
mov
dec
push
jge
push
fldl
sbbb
std
cmp
push
add
and
rclb
xchg
jge
cmp
pop
mov
sarb
xor
arpl
std
insl
in
jo
clc
add
or
repz
fiaddl
xchg
cmp
popf
add
scas
js
push
imul
push
sub
sbb
push
mov
shrl
stc
and
fs
jnp
jecxz
stos
inc
add
add
cmp
xchg
add
ret
jmp
mov
in
add
cmp
iret
xor
mov
push
icebp
xchg
sub
imul
add
or
dec
xchg
adcl
js
out
and
sub
and
mov
cmp
mov
xlat
adcb
lods
mov
in
mov
add
negb
ss
ja
add
test
xchg
jecxz
inc
add
imulb
add
push
mov
cmp
loope
mov
add
add
jg
xchg
jnp
cmc
pop
shlb
pop
insl
test
xchg
add
das
dec
inc
fs
adc
and
xor
add
adc
xchg
xor
xchg
test
push
shll
and
sbb
rolb
push
insl
or
xchg
jne
push
ret
push
sbb
push
in
arpl
add
aam
lcall
bswap
xchg
push
inc
pop
jmp
and
adc
stc
loopne
mov
enter
jp
or
arpl
mov
movsl
popf
push
cmpsl
xchg
dec
add
push
mov
inc
fwait
mov
ret
cmp
jp
mov
mov
fcomp
xchg
pop
and
outsl
cmp
add
push
jns
xor
and
add
push
cmp
orb
push
sub
lock
sar
dec
push
xor
sub
or
or
dec
add
inc
inc
aad
jb
pop
push
pop
faddl
rorb
out
jb
add
imul
sbb
adc
sbb
mov
pushf
cmp
enter
push
call
scas
and
add
nop
mov
adc
add
aas
aad
aas
pop
int
add
data16
push
out
arpl
push
sub
mov
push
test
outsl
inc
ficoml
add
push
loopne
aam
in
jne
add
dec
popf
add
mov
mov
sti
out
rolb
xor
mov
add
ret
decl
inc
add
in
mov
call
arpl
mov
adc
popf
adc
insl
stc
lret
cwtl
cmp
xchg
aas
gs
push
sub
js
mov
fprem1
cmpsb
movsl
push
add
pop
inc
stc
sub
xchg
mov
ds
mov
xchg
nop
mov
dec
mov
push
rorl
in
iret
sbb
fs
xchg
lds
ret
inc
mov
inc
add
mov
push
inc
mov
sahf
sub
push
loopne
sub
xchg
add
add
or
dec
mov
out
pop
inc
add
adc
mov
jb
outsb
nop
cmp
add
sbb
add
das
mov
xchg
push
jne
jl
cmp
stos
aam
push
icebp
add
movl
add
xchg
test
mov
add
pop
add
push
in
sbb
fsub
arpl
js
dec
sbb
cmpsb
jmp
or
inc
in
or
out
aad
leave
dec
pop
into
mov
mov
enter
sbb
aas
pop
xor
out
repnz
ret
mov
out
and
jo
jne
add
sets
inc
loope
arpl
adc
xlat
cmp
add
xor
sub
add
sti
les
negb
es
pop
in
les
call
push
stc
repz
movsl
call
fistpl
add
pop
fmul
sub
mov
cmc
or
cmp
pop
mov
xor
pop
xor
add
cmp
pop
into
hlt
popa
ret
popf
pop
jo
xor
mov
daa
divb
std
sbb
inc
add
cwtl
mov
rorb
test
mov
adc
jne
enter
sub
mov
pop
out
jbe
es
push
fwait
outsb
sub
mov
pop
sarl
or
xchg
inc
sbbl
loop
test
pop
cld
xchg
clc
pop
pop
pop
ljmp
in
decb
push
push
movsb
push
and
cmp
jbe
push
pop
cltd
cltd
jnp
mov
pop
popfw
out
sbb
cli
lcall
int
cmpsb
sub
inc
ss
enter
xchg
mov
dec
enter
mov
dec
movsb
adc
pop
mov
sbb
out
mov
fsub
add
sarb
ret
xlat
ja
push
out
rorl
incb
pop
pusha
jmp
rorl
das
adc
sub
adc
ljmp
sbb
inc
in
pop
lahf
movsl
push
addr16
cmc
pushf
dec
movsl
mov
lds
rcrl
fldt
sub
lldt
add
mov
rolb
inc
mov
hlt
sub
adc
pop
stos
add
cli
add
pop
add
aad
ljmp
mov
es
in
je
and
rcr
popa
add
add
arpl
orps
fdivrl
cmpsl
xchg
pusha
scas
popa
das
push
push
rcr
and
add
adc
add
add
push
cld
int
mov
mov
inc
pop
dec
cmp
repnz
enter
dec
add
push
xor
rolb
or
mov
sbb
inc
inc
pusha
cmp
adc
add
and
add
ret
sbb
push
xor
scas
add
mov
add
jge
mov
push
add
xor
push
fcom
pop
and
push
insl
orb
cmp
and
rcl
adc
fcmovnbe
mov
sub
inc
inc
stos
add
or
push
dec
imul
in
cltd
jmp
add
sub
hlt
std
add
fstp
jae
in
mov
les
jg
lods
test
loopne
out
cmc
pop
mov
cmp
cmpsb
hlt
ret
loop
insb
mov
xor
cmp
mov
or
push
daa
inc
xorb
lret
pop
or
add
clc
add
lds
mov
in
xchg
in
lcall
xchg
ljmp
add
ds
push
sub
cmpsl
add
inc
idivb
cltd
push
inc
add
insb
int
add
sub
add
pop
jle
call
lahf
add
and
pop
xchg
and
sbb
es
in
add
cmp
mov
add
xor
add
add
test
sbb
cmp
in
das
js
xchg
mov
add
jns
les
shl
test
add
sbb
sbb
test
inc
decb
add
incl
sub
jbe
faddl
popa
outsb
lds
adc
mov
inc
sbb
hlt
jl
jmp
arpl
push
add
cld
clc
add
jle
adc
jge
push
mov
mov
adc
movsb
test
in
das
ret
sahf
jnp
adc
sbb
or
adc
xchg
dec
lods
xchg
ret
inc
in
add
push
mov
adc
call
repz
jmp
or
call
add
or
xchg
fdivl
jp
mov
outsb
movb
push
adc
push
jecxz
in
mov
xchg
xchg
push
subb
add
adc
fidivs
jbe
loopne
out
lret
orb
jae
sub
adc
scas
sbb
addr16
sbb
in
leave
sbbb
and
inc
lods
pop
jge
dec
filds
add
mov
lods
scas
cmp
add
enter
adc
and
fimuls
aas
sbb
fiaddl
xchg
nop
add
sbb
aam
outsl
mov
add
mull
jecxz
hlt
add
addr16
xchg
call
add
jl
ficomps
inc
out
aas
inc
test
add
arpl
out
cli
add
push
lods
ss
dec
add
outsl
jmp
stos
ret
dec
add
loope
jns
aaa
sbb
inc
shrl
xor
cmp
inc
mov
jl
jle
mov
cmpb
pop
xchg
shl
and
add
dec
xchg
lock
sub
mov
add
in
loopne
mov
stos
push
push
mov
test
push
xchg
movsb
scas
mov
push
sbb
fcmovb
clc
pop
loopne
mov
dec
inc
add
icebp
and
adc
mov
stos
cmp
lds
add
mov
outsb
add
js
call
lock
xchg
fwait
or
icebp
cmp
addb
sub
mov
hlt
cmp
roll
fidivrs
push
imull
add
call
push
pop
add
sub
pop
int3
icebp
and
ret
iret
add
or
mov
or
jp
push
stos
in
sub
jp
add
fadd
add
loop
add
inc
fidivs
cld
inc
sbb
cmp
neg
mov
lcall
into
cmp
pop
add
jnp
mov
mov
mov
data16
mov
jo
movb
outsb
mov
push
jnp
rcrl
scas
sub
in
mov
inc
inc
xchg
out
add
sbb
or
jle
ss
add
pop
dec
add
adc
nop
pop
mov
mov
aas
subl
push
cltd
and
pop
mov
pop
add
iret
arpl
jne
sbb
out
sbb
push
mov
call
clc
pop
cvtpi2ps
out
mov
mov
jo
push
add
inc
mov
xchg
out
lds
iret
fs
mov
mov
sbb
in
add
push
mov
daa
int
lret
mov
jge
add
push
mov
pop
add
add
stc
or
dec
cmpsl
cmp
mov
add
or
inc
pop
mov
in
inc
dec
std
dec
inc
xor
cmp
add
test
loopne
out
jle
add
testl
jle
or
push
mov
add
aad
push
mov
mov
arpl
push
pop
in
add
outsl
insb
pusha
jae
jge
icebp
dec
pop
inc
add
push
sub
mov
hlt
clc
add
scas
xor
or
hlt
dec
je
push
sti
repnz
aam
inc
das
insb
mov
add
subl
es
pextrw
pushf
add
int3
xchg
pop
dec
sub
fs
daa
add
sbb
inc
hlt
mov
sbb
push
lret
stc
mov
sarl
arpl
lock
sub
add
xlat
or
and
inc
xor
in
jns
add
mov
fisttpl
cmp
mov
sahf
cmp
das
add
mov
add
pop
ret
dec
jl
add
sub
insb
jl
and
push
orb
push
jecxz
ficoml
sub
jae
push
mov
daa
leave
xbegin
pushf
or
cmpb
push
dec
outsb
sarb
lret
add
test
pusha
call
jne
stc
fwait
sahf
push
xor
pop
push
pop
add
fidivl
push
sbb
add
cld
cli
sbb
add
mov
mov
sbb
sahf
push
lock
add
scas
push
cmpsb
add
mov
icebp
dec
ds
fsubrs
test
add
sub
cwtl
fidivl
pop
add
xor
negl
std
arpl
jb
dec
mov
sbb
pop
add
leave
test
pop
jge
add
lret
call
push
inc
hlt
mov
add
jbe
adc
iret
add
stos
dec
xor
jb
add
repnz
das
mov
lahf
in
add
imul
lcall
push
xchg
ret
call
adc
mov
jo
stos
inc
jl
dec
sbb
dec
mov
fdiv
jne
js
jl
and
popa
scas
mov
dec
mov
inc
and
push
or
sarb
scas
jo
dec
imul
outsl
int
and
fwait
or
sbb
sub
sbb
push
adc
ret
shrl
fsub
adc
in
jo
pushf
add
dec
sbb
xchg
mov
aaa
jmp
paddw
sub
pop
stos
in
aam
or
movsl
inc
outsl
aaa
ja
scas
addr16
lahf
sbb
add
lcall
pop
mov
xor
lock
leave
sub
adc
dec
inc
daa
mov
les
cmp
mov
and
cmp
in
mov
dec
lods
mov
rorb
cwtl
pop
clc
cmpsb
dec
shrl
add
pop
icebp
pop
stos
mov
add
mov
decb
cmpsl
inc
sbb
inc
xchg
ficoms
fcomip
mov
stos
andb
jbe
decl
cmp
add
sbb
pop
add
sahf
idivb
add
sbb
lret
icebp
jnp
das
add
rolb
cmp
lcall
mov
arpl
lock
pop
int
add
push
sub
add
or
inc
lods
sub
cwtl
loope
xchg
sub
test
lcall
stc
das
divl
dec
mov
jmp
jp
pop
pop
pop
add
xchg
mov
jae
or
mov
and
minps
in
add
xchg
push
jl
cs
ret
pop
add
stos
sub
fucomp
icebp
push
movsl
adc
and
incb
jae
fmuls
add
fs
inc
and
clc
popf
add
pop
mov
es
mov
imul
in
popf
or
aaa
and
fcomps
jae
pop
notl
lds
push
push
jns
psrad
jecxz
mov
add
sarl
shlb
imul
mov
and
ffree
iret
std
pop
adc
add
in
mov
enter
xor
mov
xchg
aad
add
jmp
push
popf
mov
cltd
cmp
scas
mov
in
add
pusha
imul
push
je
or
bnd
fisubrs
fsubl
mov
in
dec
outsb
push
popf
mov
emms
xchg
mov
add
pop
imul
stc
testl
and
enter
jnp
shrb
add
dec
push
mov
mov
inc
daa
jg
add
and
xor
jae
mov
dec
mov
mov
push
subl
add
movsb
dec
les
dec
inc
push
hlt
in
lods
subb
or
in
cli
lret
cmpxchg
pushf
repz
mov
or
cmpsl
inc
jno
in
aas
mov
push
movsl
push
push
add
mov
sbb
add
cmpsb
and
in
add
jecxz
in
int
ret
into
js
cmp
add
and
mov
mov
iret
addb
push
inc
lcall
mov
scas
adc
imul
mov
mov
add
or
adc
push
ret
jmp
jnp
add
pushf
adc
sbb
movsl
adc
dec
mov
jge
imul
add
mov
js
dec
pop
mov
xor
jmp
jo
push
test
xor
aas
cmpsb
dec
subb
ret
add
cmp
add
test
int
addb
in
repnz
inc
je
and
movsl
adc
add
stc
dec
cmc
push
cwtl
inc
addb
in
dec
lcall
push
lods
xor
inc
mov
sbb
fcmovne
rcrb
sub
jb
add
out
mov
je
add
clc
sbb
jae
mov
fistpll
pop
jns
sbb
bound
rol
jge
add
frstor
push
in
pop
cmpsb
add
push
mov
fidivs
sbb
inc
lret
loope
jp
add
or
ficompl
outsl
data16
cli
push
addb
out
daa
aaa
add
or
test
mov
insl
xchg
add
add
add
out
inc
pop
pop
mov
int
xor
mov
mov
inc
jge
filds
mov
roll
mov
pop
mov
jle
cmp
inc
and
mov
popf
lea
aas
mull
mov
into
push
pop
xor
js
repnz
or
cmp
in
inc
add
es
sub
test
or
jge
stc
cmp
lret
jecxz
mov
ljmp
jnp
and
jl
pop
jecxz
sub
imul
stos
mov
mov
pop
sbb
inc
mov
mov
or
mov
bound
sbb
add
xlat
nop
jnp
sbb
jp
call
imul
xor
sbb
mov
jb
repz
ret
jle
xlat
xor
sahf
cwtl
fstpl
cmpsl
lcall
add
rcrl
dec
dec
mov
sahf
mov
xchg
jecxz
push
mov
add
loopne
mov
aad
lods
mov
push
push
jbe
test
mov
push
rolb
pop
in
cltd
xor
popa
sbb
lcall
lea
test
pop
rorl
cmp
das
push
and
pop
jb
mov
or
and
add
rcrl
sahf
ds
icebp
pop
mov
add
jae
outsb
orl
cs
dec
push
sti
pop
pop
xchg
loope
jmp
push
xchg
int
sahf
jb
nop
mov
xchg
cs
mov
sbb
push
int
in
std
inc
adc
inc
and
insb
orl
add
cld
ss
jb
fcmovnu
scas
loopne
add
and
pop
pusha
ret
jno
add
jno
ljmp
cmp
mov
add
subb
aas
inc
or
pop
les
je
add
gs
sub
jo
data16
push
ss
add
and
jecxz
hlt
mov
xchg
lock
sub
inc
sahf
inc
add
sbb
add
push
xchg
out
push
lcall
add
mov
std
pushf
ds
add
or
adc
add
cmp
outsb
dec
mov
inc
jb
mov
xor
mov
hlt
push
jp
add
mov
pop
jp
add
js
andb
shr
mov
or
dec
movsb
adc
add
movsl
cwtl
ret
and
xor
mov
lcall
lea
ret
inc
mov
std
cmp
pop
add
pop
aam
pop
movsb
xchg
push
in
jp
or
mov
xor
jo
in
add
divl
sbb
shl
or
lds
lcall
inc
nop
jge
cmp
inc
sbb
sbb
add
mov
pop
rorl
cld
mov
mov
lret
jne
xor
add
aas
cwtl
add
in
mov
lret
orb
mov
les
inc
in
push
aaa
rclb
test
push
fadds
ja
outsl
movsb
or
mov
cwtl
and
dec
xor
jge
inc
cmp
push
or
sahf
cmc
lahf
add
orl
push
popa
lret
mov
sbb
fs
sub
in
adc
in
jge
arpl
jmp
add
or
fbld
cmp
icebp
jns
dec
mov
xchg
add
pop
loopne
sub
add
test
jb
hlt
pop
add
push
repz
call
jmp
mov
sbb
xorl
aam
rolb
pop
jne
insl
loopne
sbb
add
es
mov
outsb
pop
out
or
and
push
add
test
xchg
mov
jo
add
rcrb
push
je
into
ret
adc
mov
add
push
lcall
test
dec
test
add
in
out
jne
pop
and
cwtl
push
add
xor
in
xorl
add
pop
adc
add
mov
adc
add
mov
pusha
cmp
cmpsl
inc
mov
js
mov
neg
mov
jle
lret
fwait
inc
mov
scas
mov
subb
ja
add
orl
sub
push
inc
fwait
ret
sub
shrb
fnstsw
add
mov
jl
xchg
add
xorw
or
sbbb
and
xchg
xor
mov
add
jge
sbb
testb
out
add
leave
mov
int3
push
pop
adc
popf
ljmp
pop
imul
mov
push
push
mov
fldl
data16
adc
leave
sub
mov
mov
dec
mov
call
jns
cmp
sbbl
sub
cmp
rol
inc
add
push
out
lret
and
inc
mov
add
out
pushf
in
xchg
jae
add
jle
add
pop
sub
popf
push
add
mov
femms
dec
jecxz
inc
inc
aad
mov
mov
sbb
dec
mov
jnp
out
pusha
or
das
add
insb
inc
arpl
fisubrl
add
xor
fadds
push
inc
inc
mov
mov
cs
leave
ja
mov
into
addb
add
mov
cmp
xchg
push
mov
stc
clc
hlt
add
jge
add
into
insb
or
pop
out
inc
cmpsl
mov
sbb
pop
pop
add
adc
aad
cld
add
enter
mov
in
xchg
inc
xchg
cmp
add
inc
add
dec
xchg
cmp
xlat
aas
push
nopl
lahf
pushf
ss
and
push
or
dec
mov
mov
add
jbe
shll
cld
ja
xor
icebp
jg
jle
add
negb
mov
pusha
pop
iret
fdivrp
and
clc
daa
mov
adc
lods
bound
loope
cmpsb
mov
xchg
push
orb
mov
fcoms
aaa
jmp
mov
mov
je
mov
test
push
cltd
xchg
add
out
arpl
dec
cmp
add
outsl
bound
das
mov
in
jne
cmp
pop
mov
mov
out
cwtl
add
xor
jg
push
mov
popa
xor
scas
add
and
jns
mov
xlat
cmp
add
xchg
fsts
roll
in
out
int
icebp
test
mov
push
loopne
and
add
lea
add
xchg
enterw
sbbl
je
add
pop
popa
nop
scas
jg
jo
les
imul
push
sbb
loope
dec
push
data16
xchg
add
pop
pop
or
xchg
xor
call
add
mov
out
loop
mov
pop
xchg
loopne
popa
push
add
mov
cs
cs
test
pand
mov
mov
out
jne
arpl
mov
mov
dec
mov
notb
movsb
dec
jl
cld
add
inc
aas
pop
inc
je
sub
add
jo
pop
out
sbb
jbe
mov
pop
xchg
add
cmpb
push
mov
sub
xorl
sub
pop
lock
icebp
add
clc
aad
sub
sbb
out
out
mov
scas
std
ret
add
popf
fcmove
cmpsl
lods
xchg
sub
push
cmp
mov
add
int3
lahf
movb
push
test
add
fs
pop
shll
aam
mov
cmpsb
adc
add
push
add
sub
into
je
repnz
add
pop
lea
sub
push
mov
jle
jmp
inc
ficoml
call
fs
xchg
shll
adc
lods
inc
dec
jno
mov
xchg
push
int
cmp
or
adc
loopne
cmc
cmp
mov
test
jbe
mov
in
fs
adcb
stos
sub
add
fisubl
inc
add
cmpl
jmp
sub
xor
mov
rcrb
mov
xchg
adc
sub
push
pusha
test
leave
cmp
or
hlt
insl
testb
aaa
mov
jl
arpl
pop
cmp
dec
outsl
ret
in
lcall
pop
fcomp
mov
arpl
adc
repz
dec
pop
inc
xor
fsubs
dec
xorb
push
pop
in
js
cli
ja
cwtl
sbb
xchg
and
or
add
and
mov
in
cltd
gs
sar
jmp
add
dec
mov
mov
or
jno
movsb
jne
add
mov
repz
in
rcrl
leave
add
inc
jp
addr16
loopne
add
insl
dec
pop
add
scas
adc
add
pop
cmp
pushf
stc
push
cmp
roll
rcll
inc
or
add
xor
xor
add
cltd
pause
jb
insl
cs
incl
ficompl
insb
ds
adcb
inc
aas
mov
adcb
mov
jecxz
jns
sub
inc
push
test
outsl
dec
add
ret
je
add
fisubrl
sub
add
or
addl
int3
xchg
jl
add
or
xorb
xchg
mov
add
sub
cwtl
aas
je
aam
cmp
add
pop
loopne
fucom
add
inc
insl
sub
inc
push
sub
repnz
gs
dec
lcall
pop
adcl
pop
fbstp
ja
cld
sub
aad
sbbl
lds
or
fsubrp
outsl
mov
xchg
in
xchg
sub
push
jle
cmp
xchg
jae
loop
aad
cmp
jle
or
jp
roll
nop
pushf
and
in
add
push
adc
mov
sub
pushf
xchg
push
mov
add
push
push
cmc
sub
shrb
js
sti
lcall
aad
shr
add
xlat
pop
pushf
add
loopne
xchg
push
inc
sbb
out
popf
rclb
add
mov
out
or
xor
xor
cmp
cmp
add
fldenv
add
adc
adc
add
xchg
inc
scas
jmp
out
lock
fidivl
pop
and
repz
into
xlat
inc
roll
testb
fmull
jmp
scas
pushf
fidivl
mov
ja
daa
add
test
jnp
mov
add
gs
aam
out
adc
pop
clc
inc
lods
mov
testb
loopne
push
dec
push
out
mov
add
shl
movsl
mov
add
addr16
lods
push
push
insb
or
mov
xchg
mov
clc
popf
pop
test
dec
sbb
loopne
mov
push
insl
pusha
loop
push
lds
bound
jns
loop
cmp
mov
mov
arpl
cmp
adc
mov
mov
add
insb
add
xor
stos
push
scas
lods
jb
jge
xchg
stc
clc
ja
add
jae
or
inc
inc
pop
mov
mov
and
inc
icebp
push
inc
je
add
sub
jge
adc
jbe
pop
inc
sbb
lods
in
add
ljmp
xor
in
pop
dec
add
ffree
add
cmp
and
sub
mov
dec
mov
add
lods
xlat
add
add
mov
out
clc
test
std
shll
out
fadd
cmp
dec
add
sub
mov
pop
xchg
add
out
xor
add
or
add
xchg
out
add
sub
add
imul
push
and
out
cmp
adc
orb
ljmp
mov
mov
outsl
pusha
testb
push
ret
xchg
cmpsl
or
test
int
les
lret
push
movsb
add
bound
add
das
lods
push
add
cmp
dec
add
xor
inc
ficomps
mov
ss
ret
movsb
xchg
add
pop
xor
dec
jns
add
js
xor
xor
in
paddusb
rcr
popf
pop
in
scas
xchg
rol
xchg
jp
add
mov
push
cli
dec
push
add
fnstenv
cmp
add
mov
int3
loop
pop
aam
cmpsb
adcl
jl
sar
outsb
fdivrs
jnp
add
xchg
adc
jp
adc
cmp
sarb
add
loopne
sbb
push
sbb
xchg
rorl
pop
push
sbb
scas
in
or
sti
add
rorb
push
jle
cmp
loopne
punpckldq
or
xchg
add
rcrl
jne
fwait
xor
adc
movsb
jl
lock
in
add
xlat
cmp
mov
or
adc
add
cld
add
bound
popf
pop
jle
jae
add
ja
inc
add
cmp
lret
xor
or
pop
mov
sub
adc
jb
les
loope
leave
xchg
xor
pop
lahf
add
loope
and
inc
xor
es
js
add
gs
add
jo
jb
in
mov
sub
ss
out
inc
or
out
jmp
xorb
roll
adc
and
ret
adc
inc
pop
lods
mov
shlb
push
add
mov
test
ret
int3
das
or
std
fistps
addr16
add
sub
data16
inc
pop
pop
lret
mov
fnstenv
push
cld
dec
mov
lock
add
xchg
roll
int
cmpsl
add
data16
add
push
xchg
mov
or
scas
add
shlb
dec
jmp
icebp
pusha
pop
cmp
loope
push
ds
iret
sbbb
push
aad
pop
mov
repz
sahf
lock
dec
xchg
pop
fnsave
push
inc
push
lock
or
shrl
mov
jns
add
std
pushf
cmp
test
add
lret
sbb
mov
add
stc
jmp
shld
or
sbb
jns
outsb
dec
mov
jge
out
and
pop
xor
leave
sar
xchg
add
sbb
jg
mov
daa
subl
mov
mov
sbb
jl
sbb
stos
clc
sahf
lds
imul
mov
and
mov
sub
inc
jp
imul
loopne
push
mov
cmp
pop
mov
xchg
jmp
and
xor
add
jbe
in
mov
adcb
and
jl
div
inc
add
fs
je
dec
add
rorb
cmp
sarb
xchg
jl
dec
inc
fmuls
mov
lret
cmc
js
and
stos
in
push
add
test
sbb
jle
sub
cmc
jmp
pop
sub
mov
add
add
imul
lret
xorl
aas
fdivrs
sbbl
jmp
sub
mov
roll
stc
dec
lods
xlat
xchg
lock
xchg
aad
call
aam
and
and
add
sub
mov
jp
add
cwtl
jnp
push
adc
cli
cmp
hlt
add
out
mov
dec
shr
adc
mov
in
ret
xchg
icebp
test
fdivrp
push
and
ret
cmp
cmp
or
inc
test
bound
imul
add
fldl
cmp
mov
arpl
and
dec
add
push
pop
clc
inc
inc
out
add
mov
lock
push
in
add
add
sbb
mov
int
dec
add
cmpsl
outsb
iret
add
sbb
pop
jg
in
add
rorb
pusha
add
push
mov
add
in
les
mov
mov
mov
rcr
add
push
cmpsl
dec
aam
pop
lods
add
pop
and
std
add
dec
pshufw
out
cli
iret
loope
mov
test
ss
mov
fidivl
fwait
push
adc
scas
dec
into
test
sahf
push
dec
bound
outsl
fldl
fwait
cmp
test
add
sbb
jno
sub
xchg
fiadds
sub
sub
cmp
scas
pop
bswap
outsb
add
jnp
divb
nop
pop
lods
and
push
scas
jae
pop
dec
pop
pop
xchg
movsb
adc
aas
lock
cmp
popa
add
push
fsub
add
inc
mov
in
cmp
xor
add
in
mov
add
mov
push
push
jbe
div
cmp
add
mov
insb
add
movsb
shlb
jae
fidivs
icebp
mov
movsl
jp
mov
jmp
out
mov
add
dec
cwtl
mov
add
add
rcll
lock
cmp
jge
iret
aad
int3
pop
push
add
movsl
out
add
dec
cmp
fnstenv
add
xor
sbb
add
call
rep
and
or
nop
imul
mov
add
test
mov
and
dec
jae
into
add
xchg
cli
ss
or
test
xor
loopne
pop
push
add
or
inc
mov
or
call
pop
jo
inc
sub
push
mov
mov
pop
add
add
mov
dec
mov
aam
add
fsubrp
pop
icebp
and
push
nop
or
rclb
repnz
scas
cmpb
xlat
les
mov
xchg
push
insl
sbb
xchg
jge
push
into
cwtl
lds
leave
push
sub
mov
sub
dec
lahf
add
aas
mov
fsubl
or
sbb
add
add
pop
inc
fistl
add
mov
loop
add
out
push
in
pusha
rorb
push
fcmove
mov
mov
and
lret
insb
out
add
sbb
xlat
mov
outsb
stos
hlt
cltd
xor
rolb
or
inc
pop
sbb
call
pop
xor
mov
mov
fisubl
sti
cmc
pop
sub
sarl
lock
pop
and
dec
jbe
push
idivl
fmul
xchg
shll
push
lds
loop
push
push
sbbb
incb
aaa
out
lock
and
push
add
cmp
jne
push
negb
enter
fnsave
les
pushf
mov
sub
push
into
jno
lock
push
enter
and
adc
lods
fcoms
lds
inc
xchg
dec
push
add
or
clc
pushl
add
xor
rcrb
add
jne
stos
or
or
or
add
fildll
movsl
push
lss
and
test
daa
lret
sbb
lods
leave
add
mov
dec
xor
aas
rolb
dec
in
stos
add
js
mov
ffreep
ja
pop
sub
lock
fcoml
faddp
aas
mov
data16
mov
sub
shl
adc
popf
add
xor
sub
pop
rcrl
or
nop
jg
pop
pop
push
popa
mov
hlt
sub
fstl
jecxz
mov
add
add
mov
data16
xorb
and
xchg
mov
je
jmp
dec
dec
and
gs
hlt
add
push
call
pop
pop
in
add
mov
add
jbe
or
inc
adc
rcrl
add
push
add
les
jge
add
mov
sub
push
frstor
inc
lret
int3
add
lds
add
lcall
sub
in
add
add
test
lret
test
dec
dec
jns
inc
lds
sub
xor
imul
jae
add
mov
jno
pop
imul
mov
hlt
sarl
cmpsl
push
sbb
jge
add
pusha
adc
and
aad
lahf
arpl
adc
jae
push
ficoml
add
sub
xchg
mov
jb
test
add
push
pop
cmp
dec
or
fimuls
jnp
daa
xor
add
cld
pop
aam
aas
pushf
lahf
add
push
jnp
push
and
movsl
daa
enter
adc
pop
pop
pop
mov
cmp
loopne
xchg
fstps
add
aas
clc
fwait
jae
sbb
inc
adc
mov
lock
add
add
sahf
pop
fcomps
sti
stos
lock
pop
lcall
push
aam
pop
popa
add
mull
mov
jp
mov
subb
add
in
cmp
dec
orb
sbb
lods
cmp
insb
xorb
mov
add
jl
sub
repz
cvtps2pi
jp
int3
das
or
movb
adcb
push
imul
out
or
out
aaa
add
fidivrs
out
inc
add
js
hlt
and
mov
add
shll
xchg
add
repnz
aam
rcr
dec
add
lcall
int3
jmp
popl
mov
dec
std
jp
or
test
mov
sti
add
inc
dec
or
jnp
ss
xchg
and
lret
rorl
ds
push
inc
add
pop
jle
cmp
movsb
inc
stos
cli
lret
add
sub
arpl
xchg
mov
and
iret
push
and
es
xchg
add
mov
push
xchg
sbb
xor
out
addl
das
mov
inc
in
ds
inc
adcb
sbb
mov
add
cmp
pusha
mov
add
mov
imul
push
add
and
jno
add
cmc
dec
rolb
mov
sbb
cmp
add
pop
push
jg
cmc
repnz
add
out
cmpsb
xor
lods
add
jmp
jg
add
cmp
mov
mov
add
pop
adc
test
cmpsl
add
loope
xchg
add
test
dec
push
sub
stos
add
popa
pop
dec
rcrb
fsts
xchg
iret
dec
push
add
xor
inc
cmp
sbb
mov
ss
popa
aas
pop
dec
lahf
mov
pop
mov
add
add
jbe
mov
and
lods
cld
xor
jnp
add
mov
pop
add
ror
cmp
or
add
jp
xorb
xor
add
inc
inc
cmp
femms
inc
dec
add
push
pop
in
jge
imul
xchg
ret
jnp
xor
movsl
std
mov
add
rorb
mull
jl
sub
daa
in
cltd
in
push
add
add
inc
outsb
and
std
xor
out
xchg
clc
add
dec
cld
pop
or
add
inc
xor
and
push
sbb
add
pop
inc
dec
xchg
cmpsl
scas
add
mov
sti
pop
je
adc
or
mov
andb
cmpsb
xchg
mov
leave
cmp
add
and
fdivrs
jp
push
nop
mov
add
ret
fxam
mov
outsl
adc
add
push
stc
jecxz
dec
loopne
cld
sub
fisubs
dec
jge
out
sub
pop
daa
lds
pop
jg
ja
mov
add
mov
and
stos
dec
xorl
and
pop
add
jle
jp
cmp
dec
pop
sbbb
push
ret
add
ret
pop
jecxz
adc
cs
daa
clc
inc
lahf
push
nop
or
cmc
cmp
lcall
dec
movsl
add
pop
and
jmp
sbb
jecxz
les
and
in
add
inc
mov
rorb
insb
jecxz
aaa
and
xchg
xor
enter
jle
push
dec
mov
xor
mov
cwtl
xlat
aaa
rcrb
call
adc
icebp
add
sbb
add
ss
push
pop
add
or
clc
push
outsb
push
test
add
inc
cli
jno
mov
ret
fisttpll
inc
test
ss
lods
test
add
or
push
hlt
cltd
int3
roll
xor
jb
lret
in
sbbl
push
leave
dec
por
mov
shlb
add
or
or
mov
dec
mov
scas
jne
lahf
in
mov
mov
mov
push
pop
xlat
rolb
or
xor
ror
rol
pop
lret
add
jns
inc
stos
inc
cltd
and
mov
loopne
dec
hlt
jmp
sub
sti
sub
fcoml
sbb
leave
cld
add
stc
push
push
cmp
inc
adc
jns
mov
mov
cld
or
add
dec
ret
dec
add
mull
dec
or
pop
xor
lock
mov
xor
jnp
cmove
das
xchg
add
dec
xchg
add
roll
ljmp
outsl
add
cmpsl
pop
popf
in
add
or
outsl
bound
icebp
nop
in
jns
add
dec
add
pop
fprem
pop
insb
aas
fiadds
sub
pop
mov
dec
nop
test
xor
lds
add
in
mov
mov
pop
and
je
add
inc
sub
nop
movsl
dec
cmp
pop
and
push
aas
and
jge
jno
fldl
xor
out
mov
mov
cld
les
push
sbb
sub
inc
aas
ret
pusha
fmuls
inc
addr16
jg
cmpl
xor
push
int
or
cld
pop
add
fsubrp
loopne
pop
vmovdqa
dec
mov
inc
jp
inc
inc
add
mov
lcall
call
push
push
pop
je
pusha
daa
jns
push
jle
add
shlb
add
or
xor
addb
clc
push
mov
cmp
push
dec
push
orb
mov
ret
inc
ds
mov
push
mov
jl
push
add
testb
iret
jp
in
nop
mov
add
push
sub
add
adc
xor
xchg
jle
sldt
dec
nop
dec
sub
pop
iret
nop
add
outsl
add
leave
sbb
add
inc
clc
push
call
add
pop
enter
arpl
repnz
lret
leave
pop
jp
and
cmp
mov
stos
cmp
pop
inc
and
in
in
add
pushf
mov
mov
clc
popf
push
loopne
lods
cmp
inc
xor
ds
dec
add
mov
outsb
arpl
add
fdiv
jbe
mov
inc
xor
jge
mov
test
add
xchg
lods
into
adc
xchg
xchg
int3
adcb
movsl
mov
pop
mov
addl
mov
add
xchg
inc
paddb
mov
add
mov
xor
inc
push
pop
push
addb
push
insb
sbb
inc
dec
or
mov
push
loop
cmp
xor
popf
int
mov
mov
popa
mov
xor
xchg
icebp
xchg
add
movb
or
push
adc
test
sub
adc
xor
or
lods
mov
mov
nop
and
sbbl
and
dec
pop
jecxz
mov
mov
jge
cmp
dec
sbb
adc
imul
fwait
les
dec
mov
xchg
mov
js
mov
inc
adc
push
lock
in
mov
cli
scas
aam
jnp
cmpl
pop
test
add
ja
sti
popa
jl
sar
add
add
dec
invd
jo
movsl
ffreep
daa
movsl
imull
xchg
jg
sub
test
adc
test
or
adc
addr16
jle
lea
mov
das
lea
fwait
or
lock
dec
dec
or
clc
lea
inc
leave
jge
addr16
and
mov
test
jbe
push
cli
arpl
push
hlt
ret
outsb
sub
push
dec
add
ljmp
sub
mov
or
mov
movsl
pop
je
mov
stos
mov
and
jb
or
rorl
sti
mulb
pop
movb
adc
sbb
daa
inc
stos
push
insb
and
mov
adc
rorl
pop
and
mov
movsl
inc
mov
mov
out
fsubs
jge
push
mov
xlat
out
mov
iret
and
lcall
jge
sbb
push
push
mov
jo
iret
pop
fcmovu
add
adc
out
sbb
xchg
jge
push
jmp
dec
sbb
dec
and
sub
adc
mov
xchg
xchg
test
and
push
sbb
vcvtsd2ss
adc
jnp
lods
adc
fbld
hlt
enter
adc
ror
lock
jnp
ds
leave
ja
xchg
aaa
push
and
dec
dec
jbe
pop
mov
in
xchg
imul
pop
movsb
cmp
adc
cmp
dec
cld
mov
rclb
icebp
push
push
mov
pop
into
lahf
adc
ret
pop
jp
push
adc
push
inc
andb
jno
adc
lods
cmp
jl
imul
inc
lock
mov
cmp
push
xchg
push
popa
xchg
cli
aaa
adc
sti
jmp
orl
xchg
fstps
dec
inc
data16
mov
or
push
inc
decl
dec
call
or
in
xor
addr16
arpl
mov
push
add
inc
inc
aaa
mov
movsb
inc
pop
sub
and
mov
mov
inc
js
or
adc
mov
lret
outsl
adc
jo
jle
inc
std
jbe
stc
or
inc
cli
adc
add
jp
inc
std
test
push
or
cmp
push
pop
dec
push
sub
addr16
addr16
jg
jmp
and
fdivrl
cmp
daa
cmp
lds
adc
mov
rclb
decl
and
sub
int
sub
pop
shrb
std
les
daa
fbstp
and
xchg
mov
mov
mov
mov
inc
in
push
mov
rcrb
xchg
sub
mov
dec
das
sbb
inc
popl
add
decl
xchg
add
movsl
inc
sbb
inc
lret
adc
and
ss
mov
lahf
push
inc
hlt
and
inc
and
xchg
and
dec
and
hlt
std
mov
imul
push
mov
sub
insb
xchg
and
loope
cmpsb
cld
cmpsl
fistps
or
fimull
adc
push
test
test
pop
call
lock
cmp
inc
hlt
lods
sub
test
add
rorl
push
inc
xchg
xchg
cwtl
xchg
hlt
adc
pop
lret
or
or
addr16
and
lcall
xchg
ja
daa
cmp
sti
idivb
lcall
js
jo
add
testl
xchg
pop
add
push
pop
je
lods
mov
dec
movsb
in
jl
shll
push
add
iret
pusha
cltd
daa
into
dec
xor
lds
ss
add
jp
hlt
aam
xor
jne
add
lds
mul
cmp
and
adc
add
xor
stos
enter
cld
mov
mov
dec
sub
inc
cmpsl
adc
sub
dec
call
cmpsb
ja
cmpsb
cmp
inc
aam
inc
jno
repz
push
mov
pop
inc
cmpsl
add
mov
or
or
outsl
add
pop
es
aad
lahf
pop
add
adc
dec
fstl
dec
sub
roll
add
jns
dec
jne
jl
unpcklps
hlt
mov
aam
outsb
ret
outsl
shll
add
adc
inc
test
clc
rcll
xchg
or
cmp
jmp
lds
shrl
adc
jne
nopl
xor
test
add
les
xchg
xchg
inc
sbb
pop
add
mov
inc
pop
pop
push
mov
adc
add
pop
daa
adc
or
add
adc
test
sbb
push
mov
sub
fs
xor
sbb
sub
jmp
rorb
movl
dec
sub
pop
ret
aam
push
lea
mov
out
fcomps
sub
test
add
mov
inc
sub
out
mov
pop
rcr
push
add
data16
adc
sbb
test
pop
test
or
add
pop
mov
push
bnd
sub
pop
mov
push
inc
jecxz
mov
sub
push
inc
cmp
cld
pop
ja
lods
inc
stc
xchg
dec
or
nop
stos
testl
nop
stos
or
std
push
orb
movq
pusha
loopne
arpl
xor
inc
add
scas
enter
jge
stos
xchg
jle
inc
stc
rcl
pop
mov
test
popf
inc
bound
cmp
cmp
bswap
pop
daa
adc
push
jb
mov
adc
repnz
adc
into
stc
imul
and
pop
inc
jg
add
cmp
add
push
call
pop
sti
inc
adc
les
push
add
out
iret
add
add
sti
orl
loop
cmp
stc
cmp
add
adc
mov
xchg
int
xchg
orb
add
aad
push
dec
sti
inc
add
pusha
and
aaa
aas
ficoml
jns
jne
jnp
pop
out
and
dec
add
cli
mov
test
hlt
je
or
stos
out
call
sbb
xchg
cmp
clc
je
push
jb
and
pop
and
je
mov
insl
jle
clc
add
add
lock
and
or
movsl
push
or
sbb
and
or
roll
pusha
jb
adc
and
adcl
loopne
lret
adc
outsl
cmpsb
pop
mov
lock
addr16
nop
xchg
les
sub
jnp
push
call
jo
insb
mov
std
sahf
ret
lahf
pop
mov
mov
cld
mov
mov
mov
je
out
mov
and
add
sub
fldlg2
adc
add
std
pop
mov
inc
jmp
insl
mov
fadd
in
sub
loopne
clc
pop
and
and
fsubl
hlt
loopne
cmp
push
mov
or
mov
aam
in
mov
aam
rcr
rol
mov
add
sub
aas
in
mov
add
mov
lea
dec
shl
add
xchg
dec
dec
mov
sarl
dec
adc
lcall
push
fdivl
leave
out
insb
mov
adc
inc
js
adc
lods
mov
test
and
cmp
dec
cwtl
jno
or
movsb
shrb
out
fsts
loop
mov
inc
mov
movsb
push
push
cwtl
fwait
xchg
nop
lret
mov
xor
nop
mov
cmp
inc
mov
inc
ret
enter
mov
test
cmpl
push
lahf
pop
out
mov
inc
js
mov
push
adc
lret
and
je
xchg
insb
adc
test
or
jo
sbb
addr16
je
mov
pusha
inc
mov
mov
pusha
and
mov
pop
lds
sub
pop
out
sarb
xchg
mov
adc
xor
dec
and
lahf
xchg
pop
clc
cli
add
cmp
inc
mov
mov
mov
push
adc
movsb
mov
inc
sbb
sbb
push
movsb
ret
je
cmp
xor
jle
adc
xor
jno
cmp
cmp
mov
and
and
xchg
sub
sub
imul
imul
ja
mov
xor
rcll
into
or
mov
adc
les
sub
jo
inc
test
jnp
inc
rorb
imul
hlt
incb
clc
test
test
das
adc
inc
call
cmpsl
mov
bound
dec
jno
sbb
in
fcoml
fmull
xchg
inc
in
and
add
sbb
push
cmc
rclb
call
fdivl
aam
negl
pop
xchg
fsubr
int3
test
mov
nop
out
fs
mov
and
lret
mov
mov
sbb
jno
and
mov
jge
or
and
loopne
fsub
xchg
add
repz
xchg
in
sbb
hlt
dec
ss
out
pop
jmp
sahf
add
les
adc
ds
and
sub
xor
jne
mov
dec
push
and
cmp
nop
pusha
loop
ds
insb
mov
or
push
mov
adc
sbb
lea
enter
push
sbb
in
adc
or
lock
cmp
fistpl
in
test
loopne
loopne
add
clc
mov
push
sub
sbb
jns
and
out
movl
and
clc
cmp
push
loop
xchg
sbb
inc
dec
lea
xchg
jo
and
in
add
and
xor
adc
scas
xor
je
push
hlt
push
mov
shrb
pop
mov
ja
or
fiaddl
adc
jo
jo
inc
pop
pop
test
dec
sbb
pop
inc
and
aam
insl
cmp
push
or
push
pop
cmp
push
and
xor
inc
push
push
fnstcw
dec
adc
xchg
mov
imul
lret
mov
repz
xor
push
xor
jns
pop
inc
dec
cltd
add
dec
sub
dec
in
mov
xchg
sbb
mov
and
scas
enter
mov
mov
aad
mov
lahf
sub
sub
nop
fdivrl
stos
push
dec
cmp
sub
and
movsb
sub
xor
mov
push
cmpb
or
orb
xchg
add
sbb
sarb
mov
pop
mov
xor
fidivs
jle
mov
sbb
dec
push
jmp
push
xchg
cmpsb
dec
mov
mov
push
ja
jnp
mov
dec
xchg
rcl
pop
adcl
pop
cmp
and
inc
mov
lds
adc
push
fs
popf
cmpsb
pop
out
cmp
cli
cmc
lock
dec
push
clc
xchg
mov
mov
leave
adc
addr16
idivl
adc
mov
or
pop
mov
or
scas
fsubrp
call
mov
adc
cmc
adc
xchg
add
inc
xchg
jge
or
in
sub
jo
mov
into
xor
or
test
cmpsl
outsb
adc
notl
add
mov
xchg
clc
das
rep
cmp
mov
or
inc
subb
and
mov
mov
push
push
adc
test
and
add
mov
sub
je
mov
mov
xchg
xchg
sbb
into
pop
mov
outsl
push
and
icebp
stc
sbb
inc
inc
and
xlat
push
aas
lods
and
sbb
mull
hlt
rorb
or
add
and
mov
shll
push
mov
lret
mov
rorl
mov
mov
add
mov
outsb
mov
xor
enter
loop
inc
xchg
and
pushf
enter
pop
call
test
inc
mov
dec
fs
adc
test
mov
popa
xor
sub
jno
mov
sbb
adc
adc
cmp
test
mov
fs
push
dec
xchg
pop
sub
movlps
adc
sarl
push
add
push
fidivrs
push
xchg
lods
or
mov
sub
pop
cmp
jae
push
sbb
mov
movsb
cmp
push
dec
add
inc
dec
sub
pop
nop
sbb
enter
sub
movsl
adc
sub
dec
add
or
push
ret
cwtl
sbb
adc
xor
inc
or
mov
push
mov
int3
push
scas
add
pop
fisttps
push
movsb
inc
mov
and
add
adcb
xchg
push
movsl
sub
out
inc
mov
test
push
add
inc
nop
xor
xchg
lock
mov
mov
push
push
push
adc
xchg
push
lret
push
sbb
testb
clc
or
sub
jecxz
imul
or
and
dec
sub
add
stc
dec
mov
jmp
push
add
sti
sub
cld
in
xchg
dec
pop
sbb
mov
xchg
sbb
cmp
dec
stos
sub
popa
nop
adc
not
push
push
or
jo
jl
stos
loop
inc
xchg
mov
aam
shlb
adc
jbe
andb
iret
jo
push
push
pop
rcrb
mov
jmp
cmp
push
jbe
cmpsb
mov
adc
push
mov
sub
cli
fidivl
daa
mov
mov
add
or
cmp
xchg
fcmovnb
mov
scas
jno
sbb
fsubrs
call
adc
inc
pop
gs
outsb
push
jb
fdivl
outsl
jmp
in
inc
popa
in
adc
sub
sub
adc
cld
mov
hlt
inc
push
or
aam
sbb
ds
insb
mov
pusha
in
icebp
add
jl
mov
popf
in
jae
pusha
or
arpl
insb
rclb
sahf
cltd
nop
jne
push
mov
inc
js
xor
dec
jle
cmpsl
loopw
mov
push
sbb
insb
adc
dec
adc
movsb
aad
pushf
cmp
cs
mov
je
xor
pushf
jl
pop
inc
mov
sbb
adc
pushf
stc
or
sbb
into
inc
xlat
mov
pop
and
adc
inc
xchg
test
fcompl
fs
adc
adc
add
push
dec
xchg
loopne
cwtl
push
sub
jl
mov
mov
hlt
inc
sbb
sbb
or
das
ret
loopne
pusha
xor
test
xor
pop
or
test
repnz
sub
imul
test
inc
xor
fcomps
jg
test
arpl
mov
sbb
and
inc
nopl
inc
les
mov
pop
scas
and
pop
cwtl
xor
enter
je
nop
mov
adc
inc
add
and
dec
test
add
inc
mov
dec
sbb
and
dec
lock
lock
cmp
cmpxchg
inc
push
test
mov
inc
inc
xchg
add
cwtl
fnstenv
aam
or
add
push
mov
pushw
or
xchg
int3
or
mov
adc
inc
lret
adc
and
test
leave
lock
aaa
lods
pop
add
lret
mov
inc
add
dec
pushf
push
addb
mov
cmc
adc
xchg
sub
and
inc
roll
push
jns
jne
rcrb
and
and
leave
test
in
sahf
sub
movsb
or
sbb
sub
dec
dec
and
movsb
and
dec
sahf
in
and
dec
inc
jnp
inc
cld
addr16
repnz
adc
sub
cwtl
cmp
inc
dec
and
es
test
adc
pop
stc
dec
icebp
insl
in
nop
and
and
mov
and
enter
ret
push
xchg
cmp
sub
scas
adc
jle
and
sub
bound
add
fisubrs
dec
fmull
dec
test
aaa
and
rcrl
adc
aaa
popa
sub
and
and
or
int3
mov
cmp
or
sub
int3
or
jmp
add
mov
or
pop
lods
and
sbb
inc
test
cld
mov
adc
js
xor
daa
inc
loopne
stc
icebp
inc
or
mov
or
addr16
and
imul
jg
movsb
call
and
test
xor
cmp
push
sub
adc
jo
add
inc
lahf
inc
mov
and
sub
add
inc
inc
lock
or
pop
inc
icebp
jbe
jg
call
cmp
push
inc
or
adc
inc
or
push
and
add
pop
mov
pop
add
cmovbe
fcoms
clc
pop
test
sub
bound
sbb
push
rorl
mov
sbb
ljmp
and
pop
and
dec
inc
jl
clc
inc
mov
nop
shlb
repnz
or
pop
or
ret
ja
or
adc
cmp
cmp
in
les
popa
or
xchg
dec
pop
mov
bound
lock
and
movsb
and
aas
dec
or
jno
mov
or
cmp
imul
xor
xchg
dec
jge
in
lret
mov
insb
js
repz
xor
imul
and
sub
xor
xor
loopne
inc
mov
or
push
aam
pop
sahf
dec
push
push
dec
lea
leave
fs
xchg
jmp
add
dec
mov
ds
sub
mov
mov
dec
divb
dec
sbb
dec
push
pop
and
xchg
mov
mov
loope
rcrb
cmp
jecxz
dec
and
push
mov
fdivl
fists
inc
cmp
ret
test
jo
out
neg
enter
movsl
sub
daa
int3
test
cmpsb
sub
dec
sbb
daa
bound
adc
test
call
clc
fs
lock
out
and
daa
mov
cmp
jne
test
push
pop
inc
inc
loope
cmp
sub
push
fs
and
test
mov
xchg
fbld
test
movsb
dec
sbb
fists
dec
mov
xor
pop
and
sbb
inc
sub
jmp
cld
movsl
mov
sahf
dec
inc
dec
cmpl
aam
push
das
xchg
jecxz
adc
inc
adc
xchg
push
and
bound
lods
jbe
daa
mov
inc
inc
fbld
push
fucom
jle
mov
pop
sbb
jg
pop
repnz
sahf
adc
fwait
pop
andl
cli
lock
mov
into
fmul
add
cmpsl
dec
add
sub
add
mov
sbbb
jp
add
mov
pop
or
adc
mov
fcoml
add
call
mov
push
dec
xorb
push
sbb
inc
sbb
dec
ljmp
push
inc
or
adc
das
nop
cmp
arpl
adc
and
adc
adc
ret
push
xor
mov
iret
nop
jge
and
adc
cmp
sub
in
mov
pop
dec
pop
arpl
push
loop
bound
mov
inc
pop
adc
call
test
inc
insl
cli
push
and
jno
or
out
ds
in
adc
inc
enter
xchg
sbb
cmp
sbb
mov
sbb
rorb
in
xchg
inc
nop
push
cmp
or
pop
outsb
nop
dec
mov
sbb
mov
sub
sub
jle
cmp
inc
xor
mov
sub
mov
hlt
das
and
shlb
sub
inc
sub
popa
iret
jno
or
test
mov
je
sub
xor
ds
xor
mov
test
xor
xor
push
jnp
xchg
sbb
xor
xor
sahf
popa
les
cmp
xchg
sub
sub
xchg
cld
and
cwtl
sbb
lds
repnz
add
mov
add
inc
mov
gs
in
clc
adc
mov
rcrb
out
push
out
jnp
mov
scas
fbld
jmp
aas
idivb
ljmp
jmp
call
mov
or
jne
jmp
or
add
push
push
or
imul
lret
xchg
lret
push
sub
inc
push
inc
pop
aas
sbb
and
enter
sub
and
push
mov
jmp
ret
aas
sbb
test
daa
leave
fsubrl
jl
js
cwtl
enter
inc
int3
leave
sahf
out
icebp
sbb
lock
notb
adc
lret
loop
xor
call
pushf
or
pop
push
xor
mov
and
or
and
in
mov
scas
stc
adc
shl
add
xchg
or
push
inc
push
popf
mov
add
test
int3
lret
xor
in
shlb
pop
subl
jl
mov
lret
xor
inc
pop
mov
jecxz
repz
arpl
shlb
mov
push
xchg
into
inc
cmp
add
mov
cltd
and
inc
add
and
aam
cmpsl
mov
or
jno
pop
xchg
lret
rol
mov
xor
aam
pop
add
fisubl
lods
clc
cmp
inc
mov
add
ds
cli
add
out
hlt
mov
adc
inc
sbb
rorl
mov
scas
pop
xchg
enter
outsl
movsl
dec
arpl
enter
xor
cmpsb
in
test
jp
inc
jmp
jl
add
pop
xchg
gs
arpl
pop
inc
cmp
out
push
mov
in
mov
add
mov
add
in
pop
dec
aam
add
aaa
and
sub
add
icebp
sub
xchg
jmp
add
cwtl
out
or
aas
add
sti
mov
or
jle
mov
fisubrs
jnp
leave
aas
add
xchg
addb
cmpsb
or
loop,pn
test
push
mov
or
add
mov
add
jmp
mov
in
mov
jg
test
test
mov
mov
jge
xor
and
dec
je
pop
js
inc
sbb
cmp
push
cmp
mov
xorl
inc
jmp
sub
cmpl
call
pop
push
sbb
sbb
jnp
test
push
rol
aad
pop
jmp
or
mov
outsb
imul
mov
orb
pop
stos
stos
mov
or
mov
push
cmp
jae
sub
dec
sub
rorb
daa
adc
or
je
mov
sti
sub
pop
add
inc
push
arpl
fwait
mov
jb
sub
mov
mov
inc
leave
rclb
sub
add
movsb
pop
jmp
dec
shl
or
lds
mov
cmpb
fcos
enter
orb
shll
dec
push
adc
cmpsb
fwait
mov
add
scas
mov
xchg
mov
pop
sub
pop
sub
dec
xorl
push
jae
or
inc
clc
test
je
mov
mov
adc
jecxz
bts
std
push
daa
push
jg
sahf
leave
sarb
cld
fstps
popa
pop
jnp
xor
jmp
ss
push
mov
mov
je
add
inc
sub
push
aad
push
sub
hlt
rcr
iret
xchg
dec
add
mov
mov
addr16
adc
pop
adc
push
in
cli
mov
xor
xor
or
daa
je
sbb
xchg
or
vmwrite
test
push
push
xor
enter
adc
pop
in
clc
dec
add
cs
lahf
and
inc
or
push
jo
stc
gs
jmp
ja
adc
jbe
mov
call
cmp
sub
inc
add
stos
push
cld
or
pop
mov
xchg
and
pop
shll
or
jle
push
mov
pop
mov
xor
in
lock
das
pop
cmp
xor
es
adc
pusha
loope
rorb
or
inc
sti
inc
fwait
push
add
jnp
fists
push
test
cmp
je
in
in
add
or
pop
cwtl
loope
test
xor
add
call
cs
bound
aas
cs
mov
movsl
stos
mov
inc
imul
mov
cmp
sti
adc
mov
leave
inc
push
pop
adc
add
push
sub
push
sub
jle
fistpl
imul
mov
ficompl
push
stc
rol
xchg
das
xchg
movsb
pop
xor
ds
repnz
or
out
cli
loop
ss
sub
inc
and
xchg
mov
fdivl
or
mov
cmp
pop
or
movsl
xchg
mov
inc
push
xchg
push
out
push
and
xchg
in
adc
clc
shrl
adc
mov
rcrl
xchg
adc
repnz
popa
fsubs
scas
mov
dec
jle
mov
and
ds
insb
in
loopne,pt
mov
jge
xor
stc
mov
hlt
jle
ss
push
sub
mov
push
mov
mov
scas
das
pop
jne
dec
and
xchg
push
xor
mov
or
test
stos
inc
mov
and
pop
adc
rcl
test
lea
xchg
push
adc
sub
push
shr
pop
add
aas
fcompl
ret
pop
fisubrl
push
and
push
in
xor
adc
cwtl
inc
or
mov
daa
aad
lret
js,pt
xor
and
outsl
out
sub
dec
leave
mov
push
push
js
dec
out
bound
inc
icebp
pop
push
iret
jnp
repnz
rorb
mov
and
inc
nop
loope
push
and
and
cmp
sbb
xchg
and
pop
lcall
repnz
lea
stos
and
and
adc
sub
xchg
xlat
jb
push
mov
jle
movsb
mov
xchg
xor
cmpsb
popa
push
mov
stos
cmp
pop
xchg
jne
push
jne
sbb
push
sbb
inc
das
lret
or
xchg
push
cmp
out
imulb
outsl
ja
and
int
das
cli
and
jne,pn
insb
jno
dec
adc
jmp
in
clc
fs
xchg
cwtl
xchg
push
add
mov
enter
push
dec
rolb
mov
mov
fsubrp
or
inc
lods
inc
xor
in
jmp
push
sub
push
jae
lock
add
adc
test
rolb
pop
pop
and
mov
rol
and
loop
pop
cmp
aaa
lcall
add
mov
xchg
adc
insb
xchg
testl
test
fadds
add
std
subb
divb
mov
out
and
inc
test
add
mov
jnp
mov
test
or
ds
add
movsb
adc
add
iret
mov
stc
leave
enter
push
mov
js
mov
or
inc
inc
dec
jns
xchg
add
sub
add
sbb
jb
cmpb
fdivrs
aad
sub
ss
hlt
movsb
mov
das
js
dec
jg
call
in
mov
fists
out
out
pop
push
lods
or
repz
add
shll
cld
dec
add
add
cmp
mov
ret
mov
stos
push
add
jecxz
sub
loopne
mov
xor
mov
mov
sub
and
inc
imul
sti
lods
or
pavgw
push
rcl
scas
push
dec
xchg
mov
push
in
fs
aam
or
add
es
or
cmpb
cmpsb
testb
jb
add
repz
cmp
sub
push
inc
add
xchg
jg
mov
push
sbb
and
pop
mov
add
mov
jnp
sti
adc
mov
lret
cmp
data16
mov
sbb
jbe
out
mov
imul
dec
aaa
inc
sbb
icebp
pop
pop
sub
jno
popa
and
mov
mov
aad
pop
je
out
rorl
add
iret
fwait
sbb
mov
lea
pop
in
movsl
aad
testb
fcoms
sub
out
mov
inc
cmp
adc
call
std
add
xor
fdiv
fwait
je
add
imul
dec
imul
dec
jp
pop
mov
push
nop
mov
lret
scas
jg
pusha
push
mov
mov
pop
pop
lret
addl
sbb
cmpb
push
dec
xchg
aas
cwtl
fs
add
shrb
fwait
rcrb
cmpl
aas
sar
mov
xor
vmwrite
xor
push
add
mov
sub
movsl
xchg
hlt
std
ret
add
pop
repnz
call
dec
insb
add
mov
ja
and
daa
push
clc
loopne
push
jns
mov
add
mov
imull
mov
adc
aam
sub
add
repnz
inc
add
cltd
aaa
out
add
pop
shrb
inc
cmp
hlt
popa
out
sahf
frstor
cwtl
push
in
sarb
lret
adc
mov
loopne
mov
add
mov
add
jle
jae
mov
rcrl
pop
push
test
push
sub
sub
or
inc
mov
cmp
xchg
cwtl
dec
rol
jb
scas
add
lds
add
ret
xor
test
movsb
push
scas
jb
pop
mov
sub
shll
dec
rcr
sub
ds
jne
adc
shr
mov
lea
sub
add
aas
sub
bound
add
int
addb
in
pop
or
inc
loopne
add
bound
stos
outsl
fadds
push
outsb
mov
aam
adc
arpl
mov
and
sbb
bound
inc
jnp
imul
lds
call
cltd
cli
or
cmpsb
aam
out
imul
subl
outsl
cmp
and
pusha
out
insl
pop
repnz
mov
push
inc
loopne
cld
pop
jp
add
faddl
xor
mov
add
inc
scas
push
sarb
in
dec
push
ds
jecxz
lcall
push
add
sbb
mov
add
std
push
lea
fmul
ds
mov
sub
sahf
mov
pop
ja
adc
add
pop
sub
aas
in
mov
icebp
ds
and
dec
fistpll
ljmp
cmp
leave
xor
pop
fsts
ds
cld
xor
dec
dec
dec
dec
add
lahf
xlat
je
adcb
push
xor
in
insl
jle
pop
icebp
pop
mov
xor
add
or
add
dec
sub
in
stos
loope
cmpl
mov
xor
jmp
test
sbb
add
popf
cmp
pop
inc
add
shlb
mov
rorl
sub
outsb
cli
add
mov
jmp
out
mov
xchg
inc
lods
add
addr16
mov
and
dec
add
add
jbe
bound
mov
xchg
imul
push
aam
in
lahf
cwtl
jecxz
out
cmp
fisttpll
out
pop
adc
das
ss
add
push
add
pop
sub
push
pop
int3
daa
pop
inc
jbe
sbb
add
shrb
pop
lret
out
setle
insb
ret
push
mov
or
dec
mov
pop
cmp
or
or
rcrb
adc
cmp
and
dec
mov
out
mov
inc
popf
test
js
cld
je
in
jmp
insb
movsb
sbb
cmp
push
pop
mov
lret
fists
jno
andl
loop
add
xor
pop
cmp
sbb
mov
cmp
mov
push
push
enter
cs
test
jne
add
js
lock
mov
fwait
mov
or
mov
sub
loopne
xchg
repz
orl
sbb
add
adc
cs
or
dec
mov
mov
fimuls
or
adc
push
test
xchg
outsl
pop
pop
jecxz
je
push
movsb
sbb
and
mov
add
lcall
adc
inc
add
leave
mov
sub
mov
call
popf
call
clc
ret
push
test
je
hlt
sbb
pop
out
sub
jp
pop
and
cmp
inc
cmp
xor
mov
or
lock
iret
pcmpgtd
xor
add
and
ljmp
ja
rcl
jbe
push
mov
push
dec
bound
pop
fs
push
mov
mov
adc
loop
dec
or
je
push
inc
movsb
add
dec
inc
inc
mov
dec
push
push
or
push
inc
rolb
mov
and
and
sub
or
sub
adc
or
fisttps
test
mov
mov
out
into
mov
jle
xchg
xchg
test
add
xchg
xor
add
enter
mov
int
pusha
cmp
dec
inc
lret
add
stos
sub
xor
push
cltd
push
xchg
sbb
in
dec
daa
xor
push
hlt
lods
nop
add
add
and
inc
jae
push
or
dec
sbb
sub
roll
xchg
bound
fcompl
push
cwtl
ret
into
aam
in
adc
shrb
push
pop
pop
push
loop
leave
or
inc
hlt
dec
or
push
clc
decl
jo
fs
aad
sbbb
call
mov
push
lcall
xchg
push
bound
daa
cmpsl
or
decb
or
adcb
xchg
sahf
rorb
mov
fildll
inc
jno
or
xchg
std
mov
jbe
and
mov
mov
sub
push
and
nop
fmul
divl
or
mov
call
push
mov
mov
daa
mov
pop
stos
clc
mov
leave
dec
fidivrs
or
add
sbb
cs
repz
pop
adc
inc
mov
jge
lock
dec
insb
mov
xchg
mov
imul
push
imul
pop
mov
out
adc
out
decl
sub
es
insb
gs
leave
loop
add
dec
dec
inc
inc
fsts
shrl
xchg
cli
cmpsl
mov
lods
mov
mov
push
mov
push
or
adc
lods
ss
repz
or
and
jecxz
inc
sbb
xor
sbb
movzbl
add
add
mov
mov
shll
into
jle
call
imul
pop
adcl
jmp
jmp
loopne
ja
out
sahf
cmpb
jbe
push
jne
loop
fimuls
or
sub
or
mov
sub
pop
mov
ret
mov
psrlq
pushf
popf
icebp
add
ret
rolb
pop
in
pop
cmp
idivb
loope
dec
xlat
leave
push
mov
push
mov
cmp
sub
movsl
cli
mov
inc
hlt
and
pop
les
mov
out
orb
pop
adc
mov
jo
jmp
push
xchg
dec
cmp
incl
mov
mov
xchg
push
pop
jne
movb
fldt
dec
add
jns
bound
addb
mov
mov
sti
and
in
adc
mov
cli
push
fmul
jmp
push
jmp
jno
lret
add
test
js
adc
in
js
call
out
mov
add
call
mov
xor
std
pushf
or
xor
adc
orb
push
adc
jo
push
xchg
decb
popf
ret
ret
xchg
add
pop
mov
pop
xor
adc
aaa
lcall
adc
sub
and
adc
adc
jno
xchg
das
pop
jle
lods
rorb
inc
mov
je
and
jg
mov
adc
xchg
outsl
out
cmp
outsb
dec
adc
xor
sub
or
pop
in
dec
enter
in
jnp
pop
adc
fadd
movsl
repnz
aam
cmp
or
out
mov
ds
nop
mov
xchg
in
sbb
call
stos
inc
nop
sub
and
rcrb
or
inc
mov
cwtl
rclb
fcoml
pop
mov
dec
jne
or
jp
es
add
je
push
and
adc
mov
es
jne
mov
jnp
xchg
pop
and
mov
idivl
nop
inc
pop
lahf
inc
sahf
push
je
dec
push
inc
cli
les
inc
dec
and
in
xchg
sub
std
lahf
popa
sub
mov
xchg
test
std
sub
and
cmpb
mov
add
jb
je
mov
adc
or
rcrl
pop
loopne
push
cwtl
adc
mov
movd
inc
ret
or
movb
xchg
and
out
inc
lock
pop
popa
sub
adc
add
inc
pop
scas
cmp
or
roll
push
xchg
adc
sub
jne
popa
mov
psubq
jge
loopne
and
jl
ljmp
add
sbb
and
pop
dec
arpl
add
xchg
repz
adc
ret
mov
ss
dec
add
pop
arpl
dec
and
dec
add
in
mov
test
add
or
xlat
pop
cltd
int
loopne
push
cmp
sarl
jae
sbbb
push
in
hlt
inc
mov
jno
lret
xor
or
mov
jb
test
sbb
or
xchg
sarb
mov
cmc
jns
pop
fsubs
and
leave
gs
and
adc
mov
pop
aas
mov
pop
and
jmp
and
xchg
inc
xor
xor
xor
sub
scas
bound
jle
mov
sub
mov
inc
cmpsb
daa
inc
syscall
adc
pop
das
inc
cli
sbb
fnstenv
pop
cmpsl
pop
xchg
dec
inc
mov
pushf
inc
in
mov
paddb
cmpsb
fdivrl
stos
in
push
in
dec
pusha
ret
cmp
push
fstl
xchg
das
lock
push
dec
scas
enter
cmp
daa
jg
jo
mov
inc
clc
xchg
push
in
shll
orl
sub
cmp
adc
mov
xchg
or
mov
push
repz
jnp
out
popf
adc
jle
jns
push
or
jp
lret
and
push
push
add
xor
fwait
js
andl
add
popa
ret
cwtl
das
or
xchg
mov
and
in
or
push
in
sub
movb
test
xor
add
js
push
push
fsts
adc
mov
mov
nop
jbe
dec
adc
or
add
aaa
dec
js
mov
out
xchg
inc
jmp
cmp
push
pop
or
andl
in
les
dec
mov
xor
mov
out
or
call
fcomi
sub
gs
dec
sub
lods
lds
ret
lcall
ds
in
js
aaa
sub
je
add
mov
ljmp
dec
es
and
lods
push
pushf
fbld
fs
sub
sub
adc
add
shll
sbb
cmp
inc
in
and
cmp
iret
jmp
sub
add
and
xlat
sbb
in
mov
notl
dec
cli
into
mov
inc
add
inc
mov
cmp
lock
out
cmp
lret
add
cmc
mov
add
cmp
add
mov
push
filds
outsl
test
pushf
dec
mov
push
mov
mov
xor
daa
jl
push
add
fbstp
clc
inc
movsb
fdivr
in
or
fildl
in
mov
cld
hlt
sbb
add
leave
mov
add
imul
in
iret
imulb
add
and
out
fcoml
add
jno
fnstcw
xchg
mov
pop
notl
js
mov
add
cmc
test
daa
adc
mov
add
shl
xor
inc
loope
xchg
pop
fnstcw
pop
pop
movsl
data16
shlb
dec
xchg
roll
out
mov
aad
mov
aaa
divb
dec
jge
cmp
sub
and
shlb
pop
sub
dec
cwtl
nop
nop
arpl
loope
cmp
cmp
adc
mov
add
icebp
fistl
imul
add
in
sub
repz
outsb
or
std
mov
stc
push
mov
ss
add
dec
inc
or
jae
and
add
jne
and
mov
sti
add
mov
test
and
or
push
adc
cmp
sbb
add
sbb
sahf
xchg
call
add
cmp
add
add
lret
pop
add
leave
mov
add
cs
jg
lret
xchg
in
or
mov
mov
jne
test
sbb
dec
jmp
add
cmp
cwtl
and
cmp
lcall
repnz
add
shrb
jg
add
mov
addb
mov
adc
js
mov
loopne
out
je
add
mov
shl
and
cmp
inc
xchg
add
fs
test
add
cmp
add
pop
fdiv
mov
shl
scas
test
push
jmp
outsb
add
cwtl
roll
jl
push
add
xchg
push
xor
mov
mov
xchg
fsubl
pop
jns
and
sbb
adc
sti
cmpsb
mov
filds
jg
nop
push
jmp
xchg
add
gs
mov
xchg
xchg
sbb
popf
jae
insb
sbb
out
outsl
fwait
sub
pop
mov
repnz
lcall
lods
test
push
inc
rolb
sub
adc
lds
popf
push
inc
leave
add
adc
push
fadds
add
add
out
ret
call
call
lret
daa
js
sbb
repz
push
push
scas
cmp
add
cs
aad
pop
cwtl
add
hlt
lret
arpl
or
bound
lret
sbb
lcall
pop
mov
stc
xor
cmp
arpl
or
pop
cwtl
sbb
int3
pushf
mov
mov
shll
jo
add
inc
mov
mov
repnz
test
cmp
add
popa
cmpsl
add
loope
rcll
cmp
clc
push
addb
out
sub
lods
jp
jmp
add
mov
cmpb
es
in
data16
jb
or
dec
cmpsl
push
mov
inc
add
mov
add
push
fcompl
cmp
add
cwtl
arpl
es
xor
rorb
ljmp
in
into
test
notb
sbb
push
imul
add
jne
adc
jp
add
adc
enter
inc
hlt
mov
test
mov
mov
mulb
hlt
push
idivl
cwtl
jnp
mov
hlt
xchg
out
inc
add
adc
movsl
sub
nop
or
add
ret
test
adc
leave
add
jbe
and
or
divl
xor
adc
adc
inc
dec
test
mov
dec
dec
xchg
push
cmp
mov
lock
add
or
add
cld
lds
sub
out
or
das
aas
orb
add
pop
mov
jo
pop
xor
es
pop
loopne
loop
in
loopne
mov
outsl
add
lods
cs
sbb
lea
mov
sahf
loopne
loopne
or
sub
mov
push
les
add
dec
test
aad
cmp
in
or
mov
sbb
ret
test
ljmp
test
enter
sbb
or
lods
or
add
push
add
lea
push
testl
popa
mov
cmc
cmpsl
stos
movb
jmp
cli
adcl
and
jmp
sbb
mov
lds
fsubl
or
add
outsb
idivb
in
andb
push
pop
sbb
in
cmp
xor
and
cmp
sub
mov
bound
div
fsubs
push
loope
xchg
add
cmpl
hlt
lods
and
nop
inc
hlt
mov
xorb
enter
in
sti
fnstenv
and
xor
iret
and
testl
sahf
sbb
ja
cmp
add
popf
sub
shlb
cmpsb
or
add
pusha
lcall
subl
add
int
subb
pop
enter
sbb
push
xchg
fimull
cmp
mov
iret
ljmp
call
popf
clc
test
mov
shr
or
repz
dec
jge
loopne
push
mov
adc
sub
mov
fcom
div
repnz
dec
or
push
mov
bound
xchg
push
insb
cmc
icebp
loopne
shl
or
mov
xchg
andb
jb
mov
loope
add
shlb
or
add
nop
adc
jmp
inc
push
xchg
rcrl
ljmp
cwtl
testb
aas
and
jg
and
jge,pt
mov
xor
pop
jl
insl
aam
inc
cmp
jae
popf
cwtl
mov
roll
push
push
or
adcb
push
iret
into
push
aaa
push
push
xchg
mov
xchg
inc
inc
mov
ljmp
cmpsb
push
je
sbb
mov
popf
mov
enter
sbb
add
mov
js
add
sbb
add
movsb
test
lods
pcmpeqd
aas
mov
xor
add
push
insl
mov
daa
add
and
mov
push
pop
and
jno
lods
add
shrb
inc
sarb
add
and
cltd
add
jno
call
add
test
fstps
add
mov
add
inc
arpl
add
pop
pop
mov
add
xor
add
lcall
add
mov
jmp
lea
repnz
pop
jbe
push
shlb
add
imul
dec
pop
pop
mov
jo
outsb
jge
add
shrb
fbstp
or
nop
cltd
and
repz
in
mov
cmpsb
sahf
jmp
mov
add
and
push
out
data16
in
mov
jmp
and
sbbb
shlb
pop
popa
jecxz
stos
mov
add
mov
fs
add
je
rorl
dec
loop
add
imul
add
insl
mov
and
fs
mov
jg
xor
in
add
and
adc
aam
dec
outsb
test
add
inc
add
dec
ror
sahf
scas
repnz
adc
mov
mov
cmpsb
ljmp
das
daa
jnp
jnp
add
mov
mov
xor
mov
iret
xor
fcmovu
dec
mov
add
scas
aam
push
inc
add
cmp
push
in
adc
scas
mul
adc
mov
mov
enter
push
test
in
pop
movsb
jmp
push
cmpsl
push
sub
rcl
daa
int3
dec
fucompp
cmp
test
adc
dec
xlat
cli
rcrb
adc
cltd
dec
call
dec
mov
int
push
xor
or
sbb
inc
in
loop
xor
pop
std
sbb
mov
mov
add
in
mov
add
jne
sbb
pop
push
mov
and
add
mov
add
sbb
add
arpl
add
push
or
add
notb
xor
mov
dec
jmp
jecxz
arpl
imul
ja
int3
push
leave
scas
push
mov
fnstsw
cltd
lret
outsb
fisubs
push
or
xor
loopne
mov
sbb
scas
or
daa
cltd
ljmp
mov
pop
inc
test
mov
mov
rcpps
xchg
add
dec
add
insl
movsb
icebp
fs
iret
dec
pop
mov
push
pop
add
lahf
pop
mov
add
cli
in
mov
add
dec
sbb
outsl
clc
lock
sbbl
add
cmc
cmp
ja
jns
add
bound
and
addb
test
notl
and
jae
add
lcall
inc
adc
push
xchg
mov
lods
aas
repnz
add
es
in
dec
and
xchg
pop
add
add
mov
ret
pop
aad
out
es
pop
stos
in
sar
push
xchg
adc
jl
push
and
clc
shlb
push
hlt
ja
add
sub
add
subb
pop
int3
or
sbb
mov
pop
cmp
adcb
lret
inc
add
call
bound
add
mov
adc
dec
fwait
mov
std
add
cwtl
clc
lret
mov
scas
out
cmpsl
mov
hlt
and
jge
xchg
adc
aad
add
int3
cs
in
sbb
mov
add
add
pop
loopne
outsb
mov
movsb
cld
dec
enter
add
out
add
adc
push
mov
aad
jo
cmpsb
lahf
mov
loope
cmp
add
jb
push
dec
jmp
sub
mov
or
xor
mov
add
xchg
lahf
hlt
dec
jns
and
pop
movb
add
push
imul
dec
pop
out
outsb
mov
add
xlat
pop
push
dec
dec
jbe
into
sub
xchg
add
jle
xor
mov
push
iret
mov
xchg
add
stos
pop
mov
cmp
movsl
add
cmp
in
sbb
push
nop
mov
pusha
dec
mov
out
and
pushf
cmp
repnz
rorb
mov
xchg
adcl
and
les
cmp
or
push
push
mov
fdivl
inc
jnp
add
fwait
insb
rorb
mov
mov
getsec
mov
aas
shr
into
iret
shr
js
add
call
daa
or
shl
push
loopne
add
add
stos
fildl
cmp
xor
cmp
or
cmpb
and
add
inc
fmull
stos
std
dec
loopne
decb
jp
les
mov
jle
in
add
lods
xor
add
jl
xchg
add
sub
lea
adc
inc
sbb
add
clc
in
jmp
cmpsb
sbb
aad
cmp
add
cmp
or
stc
jb
sti
adc
repnz
test
push
stc
add
inc
popf
clc
mov
popa
rcll
add
jne
add
xchg
jne
bound
fidivrs
add
or
stos
cmp
cltd
and
ss
push
add
aad
or
iret
pop
call
adcb
ds
xor
repz
inc
push
mov
test
dec
lock
out
or
imul
lret
sbb
and
add
dec
add
or
xlat
ucomiss
ss
sarb
aam
stos
jg
or
les
or
cmp
pushf
aad
addl
stos
pop
inc
sub
push
cltd
sub
add
mov
push
scas
das
fisubs
inc
pusha
add
es
lods
push
mov
add
dec
les
mov
cwtl
add
stc
enter
sbb
and
scas
add
loope
cmp
push
dec
pushl
xor
sbb
fsubrl
out
add
dec
jmp
xchg
add
dec
mov
dec
iret
sbb
cmp
push
and
xor
or
bound
iret
aas
dec
cmp
add
cmp
cltd
repz
xchg
dec
mov
inc
add
int
mov
mov
xor
dec
adc
cwtl
jg
add
das
add
adc
add
push
outsb
xchg
add
sbb
mov
les
dec
inc
sarb
movsb
add
test
xchg
xchg
int3
add
es
mov
add
in
sbb
jge
sbb
add
xchg
mov
add
test
mov
jae
and
jl
sbb
test
add
loopne
dec
push
xchg
add
inc
xor
inc
ret
add
cmp
and
pop
adc
leave
adc
dec
add
or
cmpsl
cmc
push
sbb
nop
xor
xorl
sub
add
sbbl
cmp
leave
xor
add
dec
jl
add
mov
rcrb
cmc
roll
mov
in
ljmp
test
aaa
dec
xor
dec
inc
jg
mov
add
dec
jno
add
popa
lret
int3
scas
xchg
es
loop
push
sub
iret
xor
jnp
dec
add
ss
xchg
sarb
dec
fdivrl
xorl
loopne
or
mov
add
jns
aaa
in
push
cmp
call
insl
dec
dec
jno
jne
out
sub
inc
aad
pop
pop
sub
mov
mov
sbb
jbe
insl
add
push
adc
mov
xlat
sbb
lods
imul
out
sub
lods
xchg
add
outsl
cmp
add
clc
ds
fsubl
sbb
mov
call
iret
inc
sbb
lods
cld
add
sbb
add
out
xchg
jg
add
sbb
loope
movsl
or
shlb
fldl
inc
push
xor
out
int
icebp
add
mov
cmp
out
push
das
jp
loope
mov
cmp
ja
gs
push
inc
mov
push
xchg
call
mov
loope
add
ljmp
cmp
add
inc
and
push
or
nop
cld
vmovlpd
add
ljmp
jbe
add
mov
ds
popf
jno
cmp
outsb
and
call
push
rcll
mov
ror
cld
in
out
sbb
sahf
movsl
shrb
dec
test
and
mov
pushf
pop
xor
rcr
lock
add
in
sahf
push
or
dec
mov
push
aam
mov
sbb
add
test
in
mov
por
pusha
stos
out
mov
test
addr16
shl
repz
cmpsl
pop
inc
add
push
push
hlt
sahf
rolb
lods
test
out
sbb
movsb
cwtl
add
fs
or
inc
or
or
dec
shlb
cmp
xor
and
mov
jae
stos
inc
icebp
fs
xor
push
cli
xor
xchg
ja
dec
mov
leave
or
xlat
pop
xchg
jne
clc
das
mov
cmp
sub
pop
mov
xlat
mov
add
jb
loop
or
add
adc
push
movhps
cmp
pop
push
cmp
mov
es
fisubrl
jp
sbb
cmp
mov
imul
je
mov
iret
add
adc
imul
jmp
mov
sbb
mov
rorb
rcl
out
loope
aaa
add
cmp
or
je
es
loopne
out
cwtl
movsb
add
adc
add
aas
cmp
in
stos
mov
adc
ror
cltd
pop
psllw
sbb
cwtl
mov
inc
loop
add
movsl
push
lock
add
sbb
lcall
outsl
cmp
stos
inc
xor
test
jns
xchg
add
inc
push
push
jmp
jae
add
inc
push
fisttpll
lds
add
lahf
sbb
lea
add
shl
sbb
adc
push
in
lahf
jp
ret
and
cli
insb
mov
sbb
add
and
mov
pusha
jle
add
add
hlt
popl
pop
inc
and
pop
lret
int
add
cmp
mov
sub
std
sbb
or
std
fsubr
daa
shlb
aad
jb
nop
enter
pusha
sbb
cmc
mov
hlt
push
inc
adc
sbb
add
lcall
xor
stos
adc
inc
hlt
imul
jnp
enter
in
incb
pop
mov
jne
aaa
pop
test
cld
fdivl
add
sahf
cli
fadds
stc
mov
xchg
inc
cmp
mov
in
sub
mov
rcrl
jbe
out
outsb
mov
or
cwtl
add
cld
jle
jmp
fsubs
ds
fmul
mov
xchg
je
andnps
cmp
call
mov
and
pop
adc
in
add
adc
in
push
andb
shlb
add
faddl
in
pushf
movsb
nop
stos
or
add
in
scas
ljmp
and
pop
lret
aad
add
dec
dec
xor
les
add
sbb
cmpl
sbb
mov
ljmp
cmp
subb
sub
add
sti
sarl
push
subb
andb
movsl
clc
ret
push
cmp
add
cmc
pop
sbb
jae
dec
add
out
mov
fists
test
sub
sbb
outsb
jp
in
add
xorl
les
add
out
mov
jmp
inc
in
add
push
sub
adc
xor
add
mov
add
and
inc
push
or
jb
gs
test
cmpsl
hlt
aam
add
loop
mov
dec
mov
addl
or
aaa
mov
mov
and
movsl
rclb
lret
pushf
verr
mov
lcall
and
lahf
mov
jge
xchg
in
rdpmc
mov
or
stos
aas
fmul
ss
xor
cld
js
mov
test
xchg
cwtl
add
lea
xor
mov
jg
incb
dec
push
inc
dec
out
add
mov
outsb
ja
add
cmp
popf
lcall
jb
mov
out
pushf
mov
loopne
cwtl
nop
rolb
xchg
adcb
insl
cmp
fucomip
mov
je
add
push
jge
pop
mov
imul
add
aam
orb
bound
loop
cmp
cbtw
inc
add
or
jp
add
dec
cli
mov
leave
in
add
sub
popf
and
bound
les
xchg
icebp
repnz
ficompl
cmp
ljmp
cmp
adc
add
mov
xchg
xchg
mov
add
sub
ss
xor
scas
inc
push
adc
test
lock
fstpl
add
lahf
jle
inc
sbb
cmp
and
les
in
sahf
add
mov
in
sub
fldl
jle
pushf
aas
ss
pop
add
mov
add
push
mov
es
enter
into
mov
insb
popf
hlt
add
sbb
in
jno
add
insl
sahf
push
cmp
push
pop
hlt
fisttpl
mov
mov
sbb
out
xor
push
push
loope
pop
push
sbb
jae
add
jmp
hlt
test
ja
xchg
cmpsb
push
mov
roll
dec
clc
mov
rcll
jo
and
xor
xchg
push
add
add
cmp
sti
jle
pop
incl
xchg
pop
jg
add
xchg
cmp
adc
movsl
psubusw
movsb
and
aam
mov
add
adc
pop
jge
lock
mov
rcrb
push
mov
inc
dec
or
cmp
mov
mov
repnz
test
mov
dec
cld
jl
xor
add
mov
negb
jbe
sahf
add
in
rcr
add
out
mov
add
inc
das
inc
xor
clc
pop
add
aad
loopne
ret
xchg
xor
ss
add
adc
mov
sub
mov
cmp
scas
mov
in
and
pop
cmp
mov
mov
add
jp
test
jno
push
insb
add
ljmp
fdivl
adc
jns
sahf
lock
fisttpll
add
sub
pop
ss
aas
add
jo
pusha
out
das
hlt
xchg
sub
cmp
cmpsb
pop
addr16
mov
pop
dec
hlt
mov
ds
movsb
loope
cmp
xchg
push
cmp
jae
add
or
cmp
int
nop
aas
bound
outsl
inc
sbb
add
push
test
add
xchg
jae
add
lret
lock
ss
inc
and
jg
lods
add
xor
sub
cmp
mov
ja
add
test
mov
adc
loop
fwait
aas
inc
mov
std
aad
outsl
adc
cmp
insb
loopne
mov
je
pop
sub
add
adc
aaa
or
xchg
pushf
iret
xchg
cmc
addr16
std
cmp
fwait
aad
lock
adc
xor
mov
outsl
insb
fildl
add
mov
jge
ds
repnz
out
xlat
lcall
es
in
dec
lock
add
inc
lret
sub
popf
pop
cmpsl
daa
adc
repz
ror
stos
call
add
mov
push
add
inc
xchg
into
sarb
lock
sub
mov
sub
inc
stc
mov
xchg
add
dec
cmp
add
pop
mov
or
test
add
aad
call
mov
add
int
sbb
pop
iret
and
mov
add
sub
mov
loope
cmp
mov
daa
mov
jge
lock
add
sti
dec
out
js
add
xor
add
mov
lods
push
call
add
inc
call
push
addl
mov
jp
popf
shlb
andb
or
jne
stc
sbb
imul
ret
and
fiaddl
outsl
cwtl
cmp
add
andb
push
jbe
imul
loop
add
cli
popf
filds
dec
lret
sbb
pushf
rcrb
xchg
in
pop
add
je
mov
add
pop
inc
push
push
int3
jnp
jo
add
nop
daa
arpl
test
jecxz
add
pop
pop
sbb
mov
rorb
add
inc
add
sub
xchg
fsub
or
xchg
pushf
pop
adc
lods
adc
xchg
adc
and
pusha
aas
out
shlb
dec
mov
jo
add
jno
mov
and
fsts
mov
add
xor
jg
in
adc
xchg
add
mov
jp
add
mov
cld
inc
in
push
test
fmull
outsb
adc
dec
int
mov
je
xor
inc
test
or
stos
xadd
push
xadd
cmp
insb
add
add
lods
loop
add
mov
mov
movsb
jb
inc
xor
dec
jns
insb
pop
cmp
and
dec
sahf
push
add
push
addb
popa
outsl
mov
stos
jne
cmp
add
test
xlat
call
sub
decl
push
jbe
inc
sbb
add
cmp
mov
std
pop
test
subb
addr16
jae
add
mov
shl
idivl
cmp
addb
adc
fldenv
push
add
enter
jmp
jne
mov
push
jo
in
pop
add
push
mov
dec
xchg
adc
js
cmpsl
and
cltd
add
mov
push
stos
mov
fbstp
ret
add
popf
shrb
int3
loopne
mov
push
pop
add
push
push
pusha
sbb
jne
pop
cmp
jmp
test
in
xor
dec
mov
stc
in
xlat
incb
and
rclb
int
mov
cmp
repnz
inc
fmuls
outsl
pop
xor
fcoms
sbbb
stc
add
add
add
dec
mov
push
ret
test
mov
das
adc
add
add
je
flds
into
mov
dec
mov
imul
dec
insl
test
ds
fmuls
push
sbb
add
adc
add
adc
sarl
js
ja
inc
fiadds
add
test
jns
add
sti
add
cld
pop
fnstcw
pop
fisubrl
dec
mov
inc
lret
in
popa
xlat
add
adc
add
shll
sbb
push
aam
imul
paddb
inc
sbb
mull
or
cmp
aad
cmpsb
add
push
sbb
jne
lods
inc
sbb
imul
sbb
push
add
mulps
xchg
add
mov
loope
adc
out
add
dec
fidivrs
cld
or
loopne
fs
xchg
pop
and
mov
and
dec
cmc
mov
push
add
dec
in
push
roll
movsl
adc
out
xchg
lock
pop
loopne
jno
dec
leave
xor
mov
ret
add
cmpsb
or
into
push
inc
add
mov
sbb
cmc
mov
add
jne
mov
imul
xchg
add
pop
xchg
add
sti
add
aas
pop
push
iret
add
stos
es
sub
cli
dec
add
sarl
xchg
pop
out
add
loope
cmp
test
and
arpl
les
dec
add
cmp
sub
push
add
and
push
jae
jnp
add
stos
mov
mov
ss
cmp
xor
dec
pop
fucomp
jbe
add
aas
mov
jp
add
xor
and
jnp
jae
xchg
insl
cmc
push
call
or
inc
mov
or
lds
jge
div
add
mov
out
and
pushf
and
adc
movsl
data16
into
sar
in
outsb
pop
pop
mov
xchg
jns
lock
repz
ja
sub
xor
or
orb
and
movaps
push
and
fisubrs
imul
fisttpll
scas
fstps
test
lods
call
push
cmpsb
inc
mov
sarb
xchg
jns
xor
rolb
push
or
cmp
sub
repnz
inc
pop
ret
mov
mov
inc
iret
inc
ljmpw
mov
dec
sub
enter
mov
stos
ss
ljmp
or
push
dec
mov
lock
das
jne,pt
add
sbb
push
adc
sub
inc
xor
add
jp
dec
bound
mov
pusha
sub
push
subb
cmp
and
movsl
rcrl
sub
dec
rorb
pop
jecxz
xchg
push
fistps
and
inc
jnp
dec
out
jp
add
test
cwtl
sub
fsubrs
xchg
mov
addr16
aas
mov
and
add
outsb
jl
imul
aam
stos
sbb
loopne
clc
jle
dec
inc
mov
dec
lds
leave
adc
sub
pop
arpl
or
jg
cmp
add
mov
xchg
add
and
add
movsb
out
mov
cmp
cmpsl
aas
mov
in
or
push
ret
fldt
int3
mov
adc
cmp
sti
repz
pop
adc
add
mov
add
jge
cld
popa
loop
inc
dec
mov
or
out
add
sub
mov
into
xchg
shlb
pop
arpl
xchg
int3
pop
and
add
cs
push
addl
sub
add
cmc
dec
fiaddl
add
mov
cwtl
sub
mov
xchg
push
cmp
add
fwait
lods
in
xor
mov
add
xchg
ja
inc
sub
xor
rcl
outsb
cmp
fstpl
add
push
add
and
add
cmp
sysret
add
pop
gs
fsubl
inc
mov
lods
inc
fs
cmp
pusha
sbb
leave
add
cld
mov
arpl
imul
sub
nop
add
stos
jb
inc
jbe
adc
aaa
inc
jl
inc
cmp
pop
add
cmp
pop
in
jne
add
sbb
jmp
add
jp
or
mov
and
jo
repz
fmuls
jmp
movsb
lcall
addb
addr16
add
dec
aad
pop
aas
scas
or
fwait
mov
dec
add
dec
mov
and
sub
push
add
adc
push
mov
lret
dec
and
push
sub
jne
push
adc
mov
or
cwtl
add
arpl
sbb
add
xchg
pop
in
add
inc
dec
roll
add
jbe
sub
outsl
add
mov
xchg
in
mov
inc
repz
cli
push
and
ss
pop
into
xchg
inc
add
imul
pop
enter
and
jp
add
std
mov
out
add
jg
idivb
hlt
xchg
cmc
add
jbe
or
loope
or
fwait
lret
scas
add
rclb
add
ret
jmp
xchg
cmpsl
fldl
push
stos
mov
popf
pop
sub
pop
hlt
stos
push
add
cmpsl
dec
sbb
adc
add
das
in
ljmp
add
aas
shlb
mov
add
addr16
data16
ja
shrb
js
or
adcl
dec
out
jne
js
add
loope
push
add
into
inc
add
daa
pop
sbb
or
cltd
adc
mov
mov
cmp
and
mov
popw
sub
cmpsb
jno
jo
jecxz
in
cmpsl
lock
inc
dec
pop
pusha
aad
or
add
rcrl
aaa
dec
mov
mov
push
adc
ljmp
jbe
mov
cmpsb
and
dec
rclb
movlps
add
push
mov
pop
xor
add
jae
add
push
je
add
sbb
fidivs
shl
lret
jecxz
add
lods
pop
add
lock
xor
add
push
cmp
emms
cmp
shll
adc
jnp
dec
cmp
out
cmp
and
push
es
xor
pop
pop
test
pop
mov
push
jmp
jmp
fistpl
sub
mov
out
inc
add
std
cmpsl
jmp
add
iret
mov
add
dec
adc
mov
add
out
push
into
clc
rcr
fsubs
push
and
mov
add
rorl
push
push
int3
add
leave
jne
mov
push
xchg
add
bound
outsb
push
cmpl
add
adc
int3
and
lock
sbb
ds
cmc
push
xor
shlb
add
cmp
push
mov
fdivr
dec
mov
push
and
add
pop
dec
repz
lret
cmpsb
rorb
push
add
adc
xchg
insb
add
testl
out
call
test
adc
xor
aas
int3
jnp
add
mov
jmp
push
push
jle
mov
pop
add
pop
add
mov
dec
cmp
jge
xchg
inc
mov
fmul
push
pop
loope,pt
lcall
call
mov
imul
jmp
cmpsl
mov
sbb
add
iret
or
fsubl
push
insb
pop
push
pop
rsm
jecxz
add
cmp
sub
ret
out
add
jp
lea
leave
roll
rcl
aaa
xchg
cmp
pop
pop
outsb
jmp
add
mov
mov
in
in
icebp
jbe
pop
xchg
mov
outsb
jnp
dec
sbb
and
mov
push
ss
sbb
inc
xor
cmpsb
incb
cld
sbb
sub
ss
add
lahf
popa
mov
xchg
fisubrs
mov
add
lods
lds
inc
inc
mov
add
add
pop
nop
xchg
sub
bnd
ljmp
adc
daa
mov
popf
inc
pop
shr
jl
mov
decb
xor
je
cld
inc
adc
fwait
test
incl
mov
adc
dec
ljmp
rolb
mov
sbbb
add
mov
push
pop
jp
cmp
xchg
add
out
sbb
mov
pop
jns
add
cmpb
mov
daa
lock
push
mov
and
sbb
ret
pop
jl
or
fwait
xchg
xchg
imul
into
enter
and
sbb
pop
adc
pop
or
cmp
inc
movsl
jp
mov
sub
cmp
add
scas
jecxz
testl
jg
add
lds
add
inc
or
popaw
add
cwtl
add
xchg
out
jb
jo
adc
ljmp
xchg
jp
mov
nop
movsb
xorps
xchg
sbb
push
jle
add
dec
fbstp
add
mov
inc
repnz
or
fisubrl
add
or
dec
mov
push
loopne
pop
mov
daa
add
sbb
xchg
and
sbb
nop
ss
adc
jns
add
push
fisubrl
add
mov
and
jecxz
add
fcomi
lcall
add
movb
and
push
adc
les
pusha
pop
jb
add
cmpsl
sub
fisttpl
mov
nop
movsl
test
add
imul
cmp
add
ror
or
sti
cmp
bound
aam
test
push
adcb
add
xorb
cwtl
inc
xor
add
aas
mov
add
lock
sub
pushf
mov
mov
dec
js
add
sub
rcr
movsl
cld
fwait
jae
jle
sbb
in
sub
mov
add
adc
xchg
loopne
add
call
test
adc
xor
adcb
pop
pop
loopne
add
add
mov
sahf
lret
pandn
dec
pusha
scas
mov
sbb
mov
mov
cli
fiaddl
push
fistl
pop
sub
sti
xor
cmp
inc
ficoms
mov
pop
cmp
push
stos
cmp
xchg
or
sahf
mov
insl
jp
add
fisubs
cs
jge
test
add
jl
xchg
add
xor
out
mov
xchg
push
add
mov
push
pop
sub
jle
loopne
test
daa
cmp
xor
ret
sbb
cmp
inc
push
jge
add
mov
sub
add
data16
leave
fistps
scas
and
and
add
mov
test
xor
mov
add
xchg
push
jo
adc
movsb
add
xchg
in
sahf
ljmp
ds
lret
pop
dec
sbb
out
loopne
dec
or
cwtl
inc
jl
cmp
push
cmp
dec
add
in
repz
aaa
jnp
or
sub
into
bound
in
nop
push
add
es
dec
pop
mov
loope
repz
adc
rclb
scas
les
jne
and
pushf
or
push
ret
xor
fildl
scas
cwtl
pop
add
add
cmp
pop
mov
xchg
push
cmp
and
or
sub
dec
mov
pop
and
adc
mov
push
adc
xor
dec
icebp
nop
and
xor
xchg
mov
mov
mov
push
sub
sbb
lods
sub
cld
loope
ss
pop
ja
fs
dec
pop
pop
cmpsl
xor
fwait
push
mov
rcll
push
dec
and
leave
push
ret
adcb
daa
pop
cmp
stos
sbb
dec
mov
xchg
test
mov
aaa
push
adc
xor
and
dec
sub
mov
inc
adc
sbb
mov
sbb
repz
inc
js
lahf
in
cmpsl
stc
or
add
jmp
dec
add
in
outsb
adc
xchg
cli
mov
gs
sahf
add
add
test
jbe
jg
add
lret
push
in
push
lock
inc
je
shlb
or
add
out
cwtl
push
and
mov
sbb
inc
lcall
add
and
sbb
mov
adc
dec
jne
sti
mov
iret
inc
inc
sub
pop
sbb
pusha
and
add
mov
add
push
cmp
add
mov
aad
int
add
cmp
out
add
or
mov
dec
out
push
das
jecxz
nop
sbb
pop
rolb
or
pushf
jns
cli
push
cwtl
mov
xchg
scas
imul
sub
imul
sub
push
dec
adc
or
or
in
mov
enter
cmp
sbb
inc
cmp
mov
push
hlt
psubd
loope
repnz
dec
aad
add
sbbb
xor
popf
jecxz
mov
add
test
fcmovnb
loope
push
sbbl
adcb
decb
loop
inc
lea
xchg
xchg
lock
dec
or
ljmp
les
stc
cltd
or
pushf
mov
cwtl
add
inc
ja
sub
loope
add
and
ljmp
das
add
mov
mov
idivb
or
aad
addr16
cmp
arpl
mov
cmp
addb
int
pusha
lea
stc
movsl
insb
sub
xor
jo
fldpi
sbb
out
xor
jne
int3
jge
ja
adc
inc
pop
add
mov
xorb
mov
addb
call
sub
scas
jo
mov
sub
imul
sbb
insb
dec
iret
test
add
movsb
mov
jns
flds
cltd
cmp
outsl
add
adc
mov
test
out
jle
xor
add
loopne
jg
into
lea
sub
das
scas
pop
and
mov
fldl
ds
and
out
add
cmpsb
pop
sbb
adc
leave
incl
mov
pusha
js
dec
mov
inc
in
fbld
incb
sub
adc
push
inc
push
lret
lods
inc
dec
mov
adc
cwtl
mov
pusha
test
sti
scas
xchg
and
lret
incb
cmc
out
or
mov
fiadds
dec
dec
xchg
fs
add
dec
movsl
push
in
pop
mov
repz
mov
adc
add
rorb
fs
pop
jbe
mov
sar
cltd
fmuls
mov
add
loope
xchg
jno
add
cmp
test
add
mov
sar
ds
add
gs
sbb
mov
aas
add
dec
test
add
ror
add
mov
cmp
aaa
movsl
xchg
loop
xor
add
mov
cmp
and
js
movsl
fsubl
mov
rorb
in
jl
cmpb
fisttps
push
adc
and
lret
mov
jge
sbb
cltd
enter
movl
dec
test
mov
sbbl
addr16
lods
pop
xchg
out
imul
mov
fildl
jns
out
dec
pop
mov
rcrb
mov
je
add
dec
adc
je
imul
add
addr16
pushf
addb
arpl
rcr
pop
and
call
clc
mov
out
rorb
iret
add
cmp
adc
dec
push
rcrb
lods
adc
inc
jge
jnp
or
add
sub
shrb
pushf
std
sbb
cmc
lret
and
mov
hlt
fstps
cmc
sub
stos
adc
xchg
outsb
cli
adc
js
mov
jle
xlat
jno
add
adc
jmp
dec
mov
push
sbb
or
aas
jmp
pop
cmpsb
add
or
aad
xchg
push
mov
popl
pushf
test
pop
inc
xor
daa
add
push
addr16
xchg
push
mov
xor
xchg
dec
es
mov
jg
sub
sbb
jbe
lock
clc
inc
push
push
add
add
iret
add
lock
jne
std
loop
not
push
lahf
sbb
icebp
add
pop
enter
dec
insb
add
mov
int
add
sub
add
imul
popf
adc
enter
shrb
jb
inc
lods
fdivs
out
inc
add
out
sbb
rcll
or
add
inc
int
push
push
add
pop
inc
jb
mov
and
pop
add
clc
orb
mov
jbe
mov
test
add
mov
fildl
jb
lea
adc
push
test
inc
pop
jne
call
push
jge
add
cmpsb
push
sub
rcr
iret
pop
sbb
and
popa
push
add
mov
cmpsb
ss
adc
repz
inc
out
pop
loope
and
hlt
push
addb
sbb
mov
add
in
or
pop
jecxz
xor
push
fldl
jp
and
sbb
push
add
arpl
sub
jg
movsl
xchg
xor
lahf
add
addr16
push
filds
rorb
lcall
cmp
outsl
sbb
adc
iret
push
pop
cmc
in
sub
cmp
cld
cmp
xchg
add
or
add
addr16
inc
idivl
stc
add
int3
jae
push
out
cmpsb
addl
xor
mov
sub
add
push
xor
cmp
xchg
in
and
cmp
push
orb
inc
stos
iret
addb
fnsave
push
add
sub
data16
push
cld
add
clc
sub
add
divl
cmpsb
pop
lahf
pop
popa
fildl
dec
insl
loopne
sub
rcrb
adc
jge
add
cmp
int
mov
add
inc
push
push
inc
pop
push
cmp
or
test
lcall
dec
dec
aaa
aam
xor
in
dec
adc
sbb
dec
addb
add
clc
xchg
push
adc
addb
cmpsl
mov
jge
add
repz
js
ret
xor
lret
test
add
out
dec
add
add
xlat
outsl
inc
mov
pop
repz
iret
mov
andb
mov
icebp
out
aas
pushf
lds
ljmp
das
mov
sbb
xor
repz
add
insb
pop
mul
gs
add
mov
rcrb
inc
add
xchg
lret
jp
imul
xor
sbb
adc
add
push
xchg
cs
lock
movsb
cli
ds
fisubrl
sub
loop
xor
jo
bt
movsl
inc
loopne
hlt
flds
sbb
jbe
pop
sub
notb
or
imul
lea
jge
jp
xchg
subl
pop
and
mov
repz
mov
rorl
add
cmpsb
mov
add
pop
pop
out
sbb
and
mul
mov
mov
mov
in
cli
into
int
sbb
push
inc
js
xchg
pop
daa
rorl
sti
rolb
pushf
cmpsb
jbe
and
inc
jae
mov
xor
call
test
sti
mov
jp
mov
js
lock
cmp
or
fucomp
add
mov
push
icebp
pop
jo
in
jmp
movsb
sbb
add
stos
and
push
mov
jp
xchg
or
fucomi
cld
and
cmp
xchg
pop
jno
jecxz
loopne
mov
or
inc
or
and
data16
xorl
movsl
add
into
mov
add
or
and
loope
fwait
in
sub
add
fs
nop
add
data16
mul
dec
lcall
and
add
loop
fucomi
push
out
add
outsl
insb
sbb
or
js
aam
mov
push
fcoml
cld
mov
or
sbb
pop
and
and
xor
loopne
add
or
add
cld
jns
add
in
lcall
cmp
daa
dec
jo
scas
dec
add
inc
sbb
and
out
out
pop
rcr
aas
loope
add
and
push
out
das
xchg
sbb
movsl
add
jne
scas
or
cld
mov
add
leave
ficompl
add
data16
jge
prefetcht1
add
jl
movb
int
rcl
push
jnp
sub
in
test
loopne
in
sbb
clc
popf
sub
cmp
jb
mov
and
add
dec
popf
stc
mov
sub
dec
repz
push
add
addb
call
imul
movsl
push
xchg
pop
jne
imul
xor
fs
jae
pop
jp
add
sbb
inc
mov
das
pop
test
lock
adc
cmpsb
or
pop
enter
insb
stos
lea
test
sbb
gs
cmp
push
xor
cmp
test
aam
xor
insl
jl
lods
xor
xor
imul
push
add
jmp
decb
out
test
and
inc
aas
add
xor
push
dec
in
mov
cmp
cmp
loop
push
int
scas
sbb
adc
mov
enter
pop
xchg
mov
js
imul
add
in
aas
lret
mov
cld
fisubs
or
and
xchg
or
cmpsl
mov
aad
xchg
adc
push
push
ret
sti
or
lea
and
sub
add
adc
push
arpl
scas
adc
jns
add
mov
and
fwait
or
push
arpl
ret
and
nop
shlb
sbb
call
out
sub
and
push
sub
push
or
sbb
mov
in
popa
jge
cmp
jo
bound
push
mov
cmp
sbb
xchg
xchg
push
daa
nop
jbe
sbb
or
add
jge
mov
test
mov
dec
xchg
fisubs
out
out
testb
push
or
and
mov
mov
out
repz
or
or
daa
and
inc
dec
mov
ljmp
or
popa
adc
adc
and
dec
dec
xchg
push
and
insl
js
adcl
sub
xor
and
push
std
enter
cmp
adc
loop
sbb
sbb
js
adc
loop
sbb
xor
and
or
mov
or
lea
adc
mov
and
jns
adc
mov
mov
cmp
and
mov
inc
or
int3
or
nop
stc
add
call
jmp
push
notl
inc
test
mov
inc
imul
insb
adc
dec
add
adc
sbb
add
adc
pop
fadds
sub
sub
push
or
inc
push
or
push
or
inc
push
or
mov
pop
ret
mov
and
add
and
sub
jae
and
sub
fmull
icebp
inc
push
sub
and
popa
jns
mov
mov
xchg
loop
mull
andl
mov
mov
add
xchg
fldenv
in
add
adc
mov
gs
dec
lea
or
adc
inc
sbb
mov
dec
xor
dec
push
mov
arpl
dec
jae
jnp
subl
adc
mov
fcompl
or
sbb
mov
inc
sbb
and
sub
xor
xor
cmp
cmp
adc
movzwl
mov
xchg
mov
ret
aas
ret
enter
out
inc
sbb
adc
jg
inc
and
loope
sub
clc
inc
sub
adc
push
jg
inc
xor
loope
cmp
clc
inc
cmp
dec
ds
adc
leave
mov
or
inc
nop
adc
adc
decl
push
mov
pop
sbb
pop
inc
sbb
mov
mov
adc
xchg
movsb
mov
adc
xchg
cmpsb
mov
adc
xchg
test
cmp
xchg
stos
mov
adc
xchg
lods
pop
scas
cmp
mov
fs
cmc
sbb
ret
cmpl
xchg
xchg
or
cwtl
inc
jecxz
lcall
mov
adc
jl
or
cli
add
sbb
jp
sti
sbb
loopne
adc
and
adc
or
lods
sbb
les
xor
mov
or
sbbb
jbe
dec
fnclex
clc
xchg
adc
jg
cld
movzbl
push
xchg
sbb
ljmp
out
inc
mov
aaa
and
mov
scas
jo
cmpl
cmp
popf
sti
add
mov
push
repz
or
aas
or
cmp
xor
adc
xor
popl
rcll
dec
jnp
ljmp
in
pusha
dec
or
push
and
xchg
inc
movhps
jmp
push
mov
int3
dec
adc
mov
adc
push
inc
mov
nop
adc
jb
rorl
mov
dec
mov
cltd
les
mov
sbb
movsb
dec
int3
and
insl
xor
inc
sbb
mov
jmp
and
and
inc
or
cmovae
and
int
adc
test
sahf
push
cli
adc
dec
dec
lock
jmp
andl
mov
mov
mov
xor
and
cmp
mov
dec
mov
aaa
and
leave
mov
or
out
ss
lock
out
push
xorl
push
adc
rorb
sub
push
mov
lret
or
jne
add
dec
cmp
sbb
loope
mov
and
call
and
sbb
add
mov
loop
add
adc
xchg
and
mov
xchg
outsl
pop
inc
sub
or
lea
or
inc
ss
adc
andb
add
mov
mov
insb
mov
add
mov
mov
mov
dec
mov
mov
cmp
sbb
inc
sarl
mov
add
or
adc
xchg
jns
adc
orw
pop
or
icebp
push
push
mov
adc
push
cmc
or
inc
sbb
inc
add
mov
xchg
and
and
shl
int3
inc
or
inc
sub
mov
adc
and
jg
jb
or
enter
add
sbbl
adc
jae
sub
adc
or
add
js
or
mov
test
cs
adc
ret
sbb
mov
inc
sbb
add
adc
sbb
mov
sbb
jp
cmp
rcrl
leave
adc
or
and
scas
add
jb
inc
jae
jb
jae
jb
icebp
jbe
mov
push
dec
decl
repnz
mov
dec
pop
jle
adc
out
nop
push
ljmp
lret
je
dec
sbb
and
xchg
sarb
add
jne
inc
dec
or
movsl
nop
xchg
or
scas
mov
movups
rclw
push
sub
jno
into
jne
in
jb
dec
adc
cwtl
out
adc
inc
mov
or
inc
cltd
and
ss
cwtl
out
popf
aad
js
fstps
cmp
lock
or
or
loopne
fisubs
jp
sbb
mov
xchg
jge
lret
jl
dec
push
sub
adc
lods
lock
hlt
inc
pop
jbe
dec
dec
or
cltd
das
and
push
lock
data16
xchg
mov
and
ret
jbe
lea
rcrb
paddsb
push
add
notl
adcb
sbb
sub
jne
scas
aad
clc
pop
test
cmp
jmp
shll
cli
mov
sbb
push
addr16
adc
nop
push
jbe
sub
into
push
mov
dec
loope
aam
inc
jae
jb
adc
xor
nop
and
lea
mov
xchg
add
add
cwtl
clc
arpl
in
jmp
mov
xchg
cmp
imul
mov
add
inc
add
add
dec
push
loope
dec
add
dec
je
mov
scas
inc
fidivrl
add
push
add
push
add
push
add
push
add
push
add
push
or
or
pop
and
dec
lods
xchg
aad
std
and
and
inc
adc
gs
lea
mov
cmc
xor
add
adc
and
pop
add
dec
decl
adc
add
lcall
loope
inc
popa
or
push
arpl
inc
fs
fldenv
aas
xor
or
add
add
push
add
insl
insb
pop
push
pop
adc
adc
outsb
sbb
and
jg
xor
out
inc
jb
inc
cmp
or
adc
or
inc
mov
jo
push
sbb
and
adc
cltd
dec
in
sbb
js
xor
mov
ss
sub
inc
fdivr
mov
dec
mov
pop
rcll
pop
push
fucomi
adc
dec
fs
lock
mov
aam
out
sub
jmp
add
int
pop
push
xchg
insb
jp
shll
or
and
xchg
mov
or
movswl
mov
cltd
idiv
push
mov
test
out
and
jmp
pop
push
mov
aas
shl
jae
add
mov
jne
dec
and
pop
mov
ja
adc
jns
xchg
xor
xchg
insb
push
push
dec
sbb
aas
xor
call
mov
cltd
sub
neg
sbb
out
repz
daa
fists
xchg
cmp
repnz
adc
mov
or
loop
jl
mov
iret
mov
push
div
mov
mov
and
push
cmp
cmpsl
mov
bound
xchg
ds
sub
mov
mov
xchg
mov
je
imul
push
xchg
adc
sub
nop
xorl
and
inc
xor
xchg
add
mov
imul
xchg
jns
sbb
cmpb
jbe
sbb
add
inc
adc
or
jmp
xor
mov
call
je
scas
rclb
jge
sarb
inc
add
ds
pop
shrl
das
cmp
test
jns
lds
xchg
adc
arpl
dec
inc
mov
inc
xchg
or
adc
adc
pop
jp
fnstcw
in
xor
pop
push
push
mov
testl
push
xchg
pop
mov
in
jbe
sbb
xor
and
imul
mov
fldlg2
push
dec
inc
shlb
inc
daa
sub
cltd
mov
cli
and
adc
lea
cltd
mov
cmpb
out
fcompl
mov
je
fdivl
loopne
inc
loope
mov
mov
bound
enter
jmp
xchg
pop
dec
popf
mov
imul
xchg
jo
test
mov
sub
adc
mov
out
or
test
xchg
mov
movsb
xchg
push
insl
nop
test
adc
push
xchg
and
lea
adc
int
outsl
pop
inc
in
sub
shl
cmovp
fsub
insl
je
enter
cmc
xor
sub
xchg
pop
pop
adc
sub
inc
pusha
cld
or
sbb
out
cli
lret
out
pop
and
lds
out
adc
shl
mov
or
pop
out
pop
xor
andl
push
sub
add
push
cwtl
js
test
jbe
popf
mov
or
adc
cmp
push
inc
add
fimuls
or
test
or
test
and
and
movntps
adc
sbb
add
mov
adc
lret
xorl
add
or
jmp
mov
loopne
mov
push
adc
sub
cmp
adc
dec
aaa
loope
push
sbb
adc
xor
fcom
invd
mov
mov
leave
sbb
push
or
push
sub
xchg
outsb
push
and
sub
or
enter
and
sbb
sub
xor
inc
ss
dec
xchg
clc
dec
cmp
cmp
ret
adc
add
push
jmp
adc
shr
push
inc
sbb
adc
pop
mov
mov
inc
push
jb
push
inc
adc
and
sbb
pop
xor
dec
and
sete
adc
sbb
dec
or
or
push
pop
enter
push
sahf
cmp
mov
ret
xor
xchg
dec
adc
jmp
adc
sub
sbb
jl
inc
xor
andb
inc
push
shlb
push
sub
and
movsl
adc
jle
jbe
pop
inc
jno
insb
sbbl
bound
sub
push
scas
pop
in
and
adc
and
adc
xor
jbe
xchg
bound
and
dec
adc
dec
pop
inc
and
pop
pop
std
mov
dec
mov
sbb
dec
jno
cmpb
jne
pushf
pop
inc
loope
sub
or
dec
mov
xlat
mov
repnz
lods
push
sbb
xor
stc
mov
adc
adc
lcall
out
xlat
or
cmp
shlb
sti
dec
adc
mov
loopne
jbe
push
jne
dec
test
jmp
inc
lea
cltd
inc
clc
sub
dec
rol
sbb
shr
lret
movsl
push
test
dec
add
jmp
test
push
in
sub
add
push
rcll
pop
loop
mov
add
fiadds
lret
dec
test
xchg
dec
cld
adc
push
or
movsb
out
enter
or
sub
mov
cmp
pop
arpl
std
inc
enter
push
jmp
shlb
sbb
rorw
ret
and
sub
cmp
and
leave
out
or
fstl
dec
loopne
psrld
adc
and
loop
aaa
pop
sbb
push
ss
sub
jbe
fstl
movsl
int3
pop
lods
jbe
jmp
data16
mov
pop
sbb
and
dec
pop
fmuls
push
lea
add
jmp
or
pop
es
pop
adc
jmp
dec
enter
call
sub
or
mov
add
cli
stc
cmp
jns
mov
je
push
sub
pop
lock
sbb
adc
jl
popf
in
daa
je
adc
xor
data16
imul
lds
lea
and
dec
sub
mov
jp
sub
fiadds
cld
addb
pop
out
or
pop
xor
aas
lock
lock
cmp
shlb
cmpsl
mov
jne
movsl
mov
adc
pop
ret
enter
jne
and
mov
inc
sub
out
push
xor
not
and
dec
lods
out
and
insl
add
cmp
scas
sub
ljmpw
xchg
subb
imul
xchg
fs
nop
jbe
js
pop
jne
scas
mov
xor
pop
pop
std
or
xor
add
jbe
xchg
lods
dec
hlt
and
and
imul
shlb
add
repnz
push
add
lods
push
repnz
push
sti
in
jle
int
or
out
rcrl
mov
insb
out
and
outsl
movsl
int
adc
and
imul
test
lea
jne
dec
fsubl
and
push
mov
push
adc
movsl
xor
repnz
and
and
nop
xor
push
xchg
pop
or
jmp
pop
lret
lcall
and
lea
add
popa
mov
add
enter
sbb
add
push
adc
sti
push
mov
dec
pop
rorl
aam
loopne
movsb
lret
adc
cmp
jmp
xor
andb
and
sbb
add
adc
sbbb
cmc
lcall
jmp
xor
xorps
or
push
mov
inc
mov
mov
jmp
movsb
add
inc
adc
push
mov
adc
aaa
pop
dec
inc
xor
cwtl
faddl
enter
jmp
mov
shll
or
aas
xchg
pop
pop
fs
pop
subb
pop
icebp
movsl
ror
ds
andb
rcll
and
dec
test
sub
jl
add
fldenv
in
push
js
xchg
cmp
sub
push
mov
sbb
inc
push
push
xor
add
ds
jp
je
js
movsb
mov
sbb
in
in
aas
push
adc
add
lock
adc
mov
xchg
adc
sbb
icebp
fmuls
aas
and
dec
adc
sbb
cmpsl
clc
adc
adc
loop
xchg
daa
adc
adc
in
mov
adc
and
cmc
inc
daa
loop
xchg
adc
xchg
adc
push
aad
hlt
std
jp
lret
jne
sub
shlb
dec
adc
mov
dec
enter
cld
jmp
xor
aas
in
sub
and
or
mov
push
movsb
addb
jb
ja
dec
or
popf
add
cmp
or
jb
dec
aam
pop
and
cld
cmp
je
cli
test
mov
mov
popa
jnp
hlt
xchg
push
push
cmp
call
fincstp
and
cs
mov
sbb
pop
push
call
or
lea
invd
dec
jae
add
fs
jne
pop
fmulp
inc
nop
mov
pusha
outsb
arpl
stos
add
mov
inc
cmc
rorl
sbb
aam
add
xchg
scas
cli
jno
stos
icebp
pop
ja
nop
gs
push
add
movsl
pop
xlat
xor
add
sub
add
xor
test
je
xchg
add
inc
ljmp
xor
add
mov
cmp
scas
ror
in
add
les
jns
jb
xor
fdivrp
and
rcr
aam
decb
fmull
push
shrl
mov
sbb
mulb
sub
jne
add
pop
stos
aaa
mov
sub
cmp
repz
jns
pop
add
or
add
push
call
add
mov
or
inc
in
dec
stc
fnstcw
cmp
lock
mov
ret
fs
lea
or
mov
xchg
jbe
fs
sbb
or
sbb
or
adc
sbbl
or
sbb
add
pop
add
adc
outsb
into
mov
mov
push
add
dec
cmp
pushl
call
push
xor
lea
shlb
mov
fs
adc
mov
add
adc
adc
enter
adc
fsubrs
or
adc
test
call
inc
jmp
int3
popa
dec
popf
scas
sub
lock
in
xor
xor
adc
cmp
imul
lea
imul
fs
and
adc
sbb
ds
sbb
mov
pusha
jnp
dec
std
cmp
add
push
or
enter
into
sti
jne
jo
je
iret
aas
mov
insl
add
inc
mov
fcmovb
push
sbb
out
mov
scas
clc
std
iret
sbbl
cmp
add
or
lcall
idivl
mov
pop
insb
outsb
mov
add
in
rcrb
dec
xchg
push
das
push
jmp
sbb
xchg
push
pop
lds
hlt
popf
sbb
lods
mov
movsl
xor
cli
mov
add
mov
add
je
cmpsl
les
stos
mov
int3
push
pop
maskmovq
mull
jbe
leave
imul
adc
aad
inc
in
inc
cli
jae
xor
cmp
clc
lods
cmp
jo
imul
jmp
sub
jmp
inc
lods
repz
stos
mov
idivb
ds
inc
pop
inc
ret
xor
mov
push
push
add
adc
adc
add
and
mov
int3
cmp
mov
imul
adc
add
inc
das
in
and
shll
xchg
add
mov
add
outsl
jecxz
xor
shlb
fwait
cmp
pusha
movsl
fimuls
int3
mov
add
das
popa
adc
pusha
pushl
call
inc
movsb
adc
sbb
scas
xorb
xor
xchg
lahf
mov
bound
rorl
rcrb
and
dec
mov
xchg
jp
lea
fs
push
enter
jl
or
pop
cs
pop
fistps
xchg
jp
cmp
loope
adc
mov
or
lret
adc
clc
adc
or
jne
push
adc
sarl
jge
mov
ss
push
mov
jp
jo
cs
ret
jae
sub
push
mov
pop
fiadds
dec
mov
pop
nop
adc
pop
push
es
push
shll
in
sub
jns
das
lods
int
push
arpl
test
je
sbb
mov
add
sub
mov
cld
inc
pop
jg
dec
clc
cmc
dec
cmp
xor
movsb
stc
push
xchg
call
aad
sahf
pop
pop
cmpb
jne
movsb
add
mov
fs
pushf
pop
add
pop
and
cmp
add
jle
fs
test
dec
fs
sub
push
pop
add
or
push
pushf
hlt
and
or
test
mov
or
and
pop
or
test
or
inc
adc
or
or
push
inc
push
mov
add
or
push
inc
push
and
adc
sbb
xchg
sbb
pop
inc
mov
movsb
icebp
push
add
inc
mov
and
pop
cmp
or
adc
mov
jb
pop
mov
or
aas
inc
hlt
inc
add
adc
xchg
add
int3
nop
push
loop
pop
adc
movsb
nop
pop
loop
pop
adc
loop
pop
adc
and
loop
pop
adc
and
sbb
sbb
adc
and
sbb
repz
and
jo
test
mov
pop
inc
or
pop
inc
or
test
insb
sub
and
inc
dec
and
lods
in
sub
and
mov
sub
xchg
inc
in
mov
aas
test
mov
add
mov
push
mov
jle
and
xor
lea
aam
mov
ficomps
push
adcb
pop
push
sbb
stos
fisttpl
push
sbb
add
push
call
je
jmp
mov
mov
enter
add
dec
ja
comiss
push
push
cmp
xor
fldenv
in
cmp
mov
out
xchg
mov
cmpsb
push
and
mov
or
sub
adc
dec
sub
mov
xlat
mov
adc
in
rorb
dec
xchg
mov
sbb
lea
xor
add
add
je
pop
push
insl
or
and
mov
cmp
jb
and
clc
jne
cld
out
or
into
jae
and
push
imul
dec
inc
lahf
outsl
insb
xor
fs
push
xor
add
push
clc
push
test
adc
dec
adc
ret
dec
cmpsb
add
mov
push
jp
loop
nop
outsl
mov
push
es
andb
or
push
cmovns
js
mov
fisubrl
pop
adc
fs
pop
scas
push
idiv
repnz
mov
orb
and
orl
inc
or
lock
and
cmpsl
jbe
test
movsb
test
adc
test
add
call
mov
sub
inc
popf
cli
mov
add
jb
popa
cmp
adcb
add
xlat
pusha
jb
jmp
roll
xchg
ja
mov
push
popf
sbb
jecxz
dec
cmp
loop
aaa
xchg
push
mov
outsl
je
in
outsl
jle
in
outsl
and
jns
sbb
push
jle
push
repnz
pop
nop
push
clc
pop
inc
add
mov
lcall
call
mov
fildll
aad
push
mov
leave
xor
les
cmp
test
and
in
cmp
test
in
cmp
test
and
in
ja
jle
push
js
in
ja
jl
mov
mov
xchg
push
mov
xchg
adc
mov
lock
jmp
dec
lods
in
xchg
in
jnp
mov
loop
out
dec
inc
sbb
scas
xchg
pop
mov
cwtl
scas
pop
pop
stos
sub
out
inc
xchg
mov
push
adc
leave
pop
sbb
testb
pop
pop
mov
push
adc
lcall
cmp
mov
adc
mov
mov
inc
lret
arpl
js
dec
xor
xchg
jne
inc
lea
movsb
popa
xor
push
icebp
and
sub
push
add
dec
sub
lock
in
push
and
inc
fsubr
sub
xor
sub
les
sub
cmp
insb
and
mov
mov
lea
cmp
sub
inc
mov
lock
or
dec
negb
fsub
clc
mov
movb
insb
cmp
inc
jg
xchg
xchg
xchg
dec
enter
dec
and
mov
xchg
or
pop
fldt
jg
xor
inc
ficoml
or
or
and
inc
mov
lcall
lea
ret
mov
push
ds
add
dec
pop
subb
jmp
inc
mov
inc
daa
xlat
or
rolb
loop
and
or
call
sbb
cmp
add
lods
adc
adc
call
push
cmp
dec
or
push
call
daa
push
and
adc
jne
cmp
jg
mov
mov
andl
sbb
ret
adc
popf
sub
test
inc
jl
push
cmp
lea
aaa
test
fwait
inc
adc
mov
movsb
lds
inc
push
jmp
cmp
adc
pop
scas
test
adc
cltd
push
mov
pop
pop
pop
or
push
push
pusha
add
fnstsw
mov
inc
cmp
cmp
push
add
mov
loop
add
xchg
mov
sub
cmpsl
daa
pop
in
add
addb
cs
nop
lock
ret
ja
pop
dec
jne
fnop
adc
pop
pop
push
inc
leave
inc
or
mov
loop
inc
lea
into
fdivs
or
bound
testb
jp,pt
addr16
rolb
mov
ret
adc
cmp
call
gs
test
outsl
and
pcmpeqb
lret
xor
out
xchg
not
inc
sbb
imulb
push
test
dec
mov
les
arpl
inc
test
jmp
cmp
mov
adc
mov
mov
loop
mov
shlb
dec
subl
movsl
nop
hlt
pop
lea
ret
out
lock
cmp
outsb
push
enter
pop
jmp
dec
cs
out
scas
test
pop
push
inc
in
mov
int
in
pushf
push
add
jecxz
mov
xchg
pusha
mov
jae
mov
in
les
inc
add
sti
cmp
outsb
add
lcall
and
jno
add
pop
bound
int
aam
pop
add
jb
add
data16
mov
in
adc
mov
orb
push
xchg
add
jge
addr16
add
rcll
dec
idivl
repz
ret
add
xor
inc
inc
push
filds
iret
or
add
sub
xlat
es
add
sti
sub
lock
and
mov
movsl
mov
in
vmread
inc
mov
cmp
addb
add
cmp
add
rcr
inc
and
dec
bound
mov
or
ja
xchg
xchg
xchg
dec
cs
sub
adc
pop
insb
addr16
inc
lret
sbb
jb
scas
add
jbe
add
xchg
adc
loopne
je
jns
out
cmp
or
mov
mov
jp
shl
enter
mov
cltd
sbb
lock
add
movsl
je
pop
sub
lahf
das
sarb
jns
js
add
mov
negl
jb
movb
or
addb
xor
inc
daa
jmp
or
scas
and
repz
cmp
andl
xchg
loop
pop
repnz
rolb
adc
je
mov
cli
mov
add
cmp
dec
inc
add
mov
cmp
rcl
jbe
fiaddl
in
rep
push
jge
pop
xor
aad
mov
xor
scas
inc
push
loope
cli
loopne
mov
add
add
add
push
rolb
jge
test
frstpm(287
movsb
in
or
sarb
xchg
push
mov
es
inc
mov
jnp
mov
pop
push
insb
jne
ds
mov
jmp
add
aam
sahf
add
add
shld
sti
mov
sub
test
test
mov
jle
lock
add
imul
sti
rol
and
rorb
iret
call
cmpb
pop
jl
add
mov
das
pshufw
in
cmpsb
std
push
sbb
scas
or
xor
add
leave
mov
inc
cmp
push
push
mov
loopne,pn
jg
mov
dec
fcmovnu
lahf
shll
push
dec
jns
rcrl
int
xchg
loop
sahf
jmp
push
lcall
add
leave
jo
addl
mov
xchg
mov
and
arpl
rorb
ftst
push
test
stc
into
pop
out
and
add
jns
imul
inc
pushf
xchg
dec
ja
add
sarl
xchg
cmpsl
inc
sub
jae
xchg
inc
jmp
mov
cmp
cmp
into
add
rol
fsubrl
sbb
jne
in
int
xor
ljmp
mov
sub
add
push
add
lcall
cmp
lods
pusha
lods
mov
cmp
add
pop
out
mov
arpl
add
or
push
dec
sub
xlat
mov
popa
or
lcall
sub
cmp
sbb
mov
in
cmc
fs
data16
mov
dec
pop
imul
filds
pop
shlb
xchg
out
xlat
in
add
mov
mov
mov
pop
fisubrl
outsl
sbb
cmp
adc
les
add
jns
in
stos
mov
jmp
outsl
sub
in
add
jno
test
mov
add
in
addr16
fdivrl
cmp
test
rorb
icebp
add
add
mov
addb
sub
push
daa
jb
fwait
cmp
mov
cmpsb
inc
repz
xor
add
add
jns
adc
je
and
dec
sbb
adc
daa
cmc
shlb
jp
cmp
jge
loopne
mov
scas
fidivl
into
xor
inc
out
inc
notl
imul
add
and
jl
jns
roll
mov
add
sbb
adc
jne
xor
jns
mov
add
ljmp
dec
jp
adc
mov
xor
sub
fwait
repnz
push
int
jmp
ljmp
filds
jg
sbb
roll
ret
aas
outsl
loop
adc
divb
pop
adc
pop
sub
add
fbld
enter
add
jg
push
jmp
cmp
jmp
push
stos
cmp
inc
pop
rcll
mov
adc
adcb
es
sub
je
add
rcrb
ds
out
fsub
mov
out
pusha
xchg
xor
mov
das
repz
pop
ja
pusha
or
jae
add
jle
push
add
mov
pushf
jmp
cmp
loopne
test
xchg
movsl
adc
cmp
xchg
outsl
add
loope
adc
test
fidivl
les
add
cmpsl
adc
out
sbbl
add
movsb
pusha
stos
push
aaa
or
inc
fidivl
pop
fwait
stc
push
push
mov
bound
lods
add
xor
cmpsl
jl
cli
add
cmp
jg
imul
rcll
fldenv
lret
mov
cmp
hlt
pop
jp
inc
push
mov
scas
cmpsl
fiaddl
negb
popl
hlt
dec
je
movmskps
pop
cmp
adcl
daa
xlat
add
xchg
push
jl
and
mov
cmp
cwtl
or
sbb
add
sub
mov
cmc
push
jmp
imul
gs
xor
shlb
nop
add
add
xchg
mov
xor
repnz
or
add
xor
je
cmp
fists
xchg
push
xchg
sub
cli
pusha
lret
ja
add
sbb
pusha
mov
pop
addr16
cmpsl
mov
xchg
loope
mov
xlat
fs
add
xchg
jb
imul
mov
add
add
arpl
mov
push
xchg
testb
mov
add
ljmp
fbld
aad
and
lret
push
adc
ds
inc
ret
fsubl
add
adc
in
inc
push
into
lea
and
repnz
in
push
cmp
jge
pop
pop
xorb
cmpb
adc
leave
cmp
push
xor
dec
movsb
mov
sbb
and
cmc
bound
daa
mov
xchg
pop
add
adc
jl
and
or
xor
repz
data16
pop
aas
pop
call
push
xchg
and
add
sub
and
xchg
cmp
add
out
and
popf
cld
outsb
add
pushf
cs
jmp
sbbl
inc
add
mov
push
push
addr16
nop
pop
push
add
mov
mov
scas
roll
shl
test
arpl
subb
out
add
fists
push
sbb
loop
jmp
xchg
loopne
stos
add
enter
jl
add
inc
icebp
testl
xchg
out
and
in
mov
jne
xchg
fcoms
sahf
dec
push
push
jmp
in
jb
hlt
pusha
jno
xorl
aad
hlt
movsl
aam
mov
mov
jns
push
gs
jb
inc
sbb
dec
lret
in
pop
push
enter
push
add
mov
fdivrl
dec
lcall
and
fsts
into
leave
lea
shll
push
mov
xchg
sti
adc
lock
ds
mov
inc
int3
testl
mov
sub
inc
into
aad
pushf
fcoml
pop
sub
adc
popa
xchg
aad
or
pop
adc
dec
test
sarb
scas
mov
xchg
sbb
and
out
pusha
xchg
add
push
loopne
add
sbb
mov
shlb
add
push
sub
sub
add
jmp
dec
scas
movsl
fadd
xchg
add
pop
shrb
xor
jns
inc
sahf
fstpl
lock
lahf
outsl
add
lea
mul
insl
mov
mov
mov
rorb
popf
clc
push
fbstp
lret
aas
add
call
jl
cwtl
cmpsb
mov
lret
loop
scas
stc
sbb
mov
add
jle
sarl
insb
push
lods
mov
add
std
add
dec
inc
ss
sub
test
pop
ja
add
loope
cmp
jp
adc
js
adc
pop
push
add
leave
mov
loopne
mov
pop
dec
xchg
push
scas
loop
add
es
mov
or
pop
pop
sbb
or
dec
pop
mov
ret
add
xor
call
aas
inc
mov
cltd
sahf
into
xchg
sbb
mov
insl
xchg
imul
out
sbb
xor
and
dec
outsb
jns
pushf
mov
outsl
push
jnp
repz
jo
xor
insb
arpl
je
xor
fcomip
jne
push
out
pop
add
into
test
and
xorb
mov
jne
femms
pop
int3
mov
scas
dec
add
repz
repnz
das
pop
add
shrl
into
dec
in
adcl
sbb
setns
inc
pusha
lds
xchg
sub
les
or
aaa
mov
mov
imul
xchg
in
jo
lods
add
xchg
js
adc
push
sbb
aas
popa
adc
call
jnp
fdivp
jmp
test
in
dec
pushf
lcall
xchg
orb
cs
pop
xor
outsb
int3
jp
inc
sbb
pusha
das
dec
add
mov
pop
xor
jle
push
test
cmp
fs
fnstcw
ds
cmp
inc
imul
add
imul
lret
adcl
paddb
mov
xor
add
mov
mov
fdivrs
fwait
pushf
aam
idiv
mov
pop
jb
mov
outsb
por
faddl
mov
jg
add
mov
add
adc
popf
mov
sub
jbe
int3
call
mov
push
add
mov
and
sub
pop
adc
leave
sub
jbe
add
inc
fwait
and
shrl
ljmp
daa
dec
inc
mov
dec
mov
clc
or
scas
and
add
mov
mov
mov
loop
daa
pop
and
jg
lock
cmc
test
outsl
fnstcw
cwtl
dec
jo
fdivrl
jge
add
fidivrl
add
cli
stos
mov
cmpsl
dec
out
and
push
pop
push
lcall
mov
jmp
std
mov
lret
xor
add
rcll
cmpsb
add
dec
cltd
dec
jmp
cltd
rclb
pusha
and
outsb
push
lods
fs
xor
and
mov
sarb
les
or
add
icebp
or
jae
loopne
mov
int3
popaw
sbb
enter
and
cmp
jb
jg
inc
xor
data16
test
jg
and
inc
push
or
and
scas
xchg
mov
adc
and
bound
or
leave
sbb
or
xchg
mov
mov
pushf
testb
idivl
xor
ret
or
and
inc
xlat
or
or
inc
mov
mov
test
and
dec
adc
in
pop
xchg
or
or
sbb
or
sbb
inc
fsubs
or
bound
or
add
mov
xchg
or
repnz
icebp
and
and
mov
mov
fistpll
dec
cwtl
push
sbb
fdivr
subl
or
cli
loope
adc
adc
lock
sub
nop
mov
sbb
xchg
or
xor
dec
xchg
and
or
xchg
int3
adc
add
dec
or
xchg
or
arpl
sbb
ret
les
pop
xchg
lea
cld
mov
iret
sub
xor
lods
adc
mov
adc
dec
nop
mov
or
mov
or
mov
or
jno
or
add
dec
je
inc
adc
inc
out
jl
sbb
or
sub
xchg
fs
or
xchg
or
sbb
cld
sbb
jecxz
popa
and
enter
or
sbb
inc
pop
adc
or
cmp
or
mov
add
lock
add
inc
rcl
pop
lods
or
mov
pop
adc
sbb
mov
dec
xor
or
inc
cld
adc
adc
fadds
test
cmp
xchg
push
orb
pop
mov
or
and
lods
cmpsb
adc
pusha
imul
and
mov
lods
adc
xchg
add
inc
fstpl
or
or
lahf
or
lock
and
in
dec
adc
or
and
sbb
push
movsl
fmull
shl
or
or
lock
add
add
or
push
xor
and
sbb
dec
add
rorb
mov
or
pop
or
or
subl
or
mov
xor
cld
xlat
and
loopne
inc
mov
inc
fidivrs
js
orl
mov
sub
xor
push
test
and
jl
sub
clc
je
xchg
inc
xor
mov
or
cld
mov
and
daa
in
inc
sbb
xor
dec
mov
pop
dec
inc
xor
dec
mov
add
add
sub
xor
mov
add
or
xchg
and
and
es
pop
int3
enter
inc
int
fcmovnu
add
fxch
loopne
loope
lahf
imul
mov
outsb
je
sbb
and
popa
je
xor
push
daa
aad
ss
lock
add
mov
or
xchg
mov
jecxz
and
pop
repnz
je
or
cld
sub
or
xchg
adc
or
mov
mov
ss
dec
xchg
js
jbe
imul
dec
hlt
xchg
xor
sbb
lret
dec
movsb
lods
add
add
push
or
mov
dec
mov
inc
mov
shlb
dec
loopne
call
fwait
adc
or
adc
sub
mov
pop
call
inc
pop
pusha
mov
jo
js
adcb
into
lock
lds
in
jb
cmp
mov
adc
mov
insb
sbb
inc
test
fmuls
jb
cmp
icebp
mov
adc
adc
inc
and
push
push
pop
subb
add
outsb
cld
icebp
or
add
mov
push
sbb
xchg
sbb
outsl
incl
pushf
adc
dec
xor
or
adc
cmp
lock
sub
dec
xchg
orl
add
add
mov
iret
push
mov
xor
jnp
lcall
sub
inc
jg
ficoml
lret
jbe
mov
inc
mov
test
or
adc
and
dec
cld
mov
adc
and
inc
inc
push
mov
jo
jl
nop
xchg
mov
add
sbb
push
sub
mov
xor
push
lea
lock
push
cmp
inc
icebp
decl
xchg
xchg
push
jmp
lods
lock
or
push
and
or
push
add
sbb
add
nop
cltd
adc
add
rcrb
xchg
testl
and
push
or
add
cmpl
sub
into
xor
xor
pushf
loop
inc
nop
sub
inc
leave
mov
cmp
lock
adc
add
jae
cwtl
xchg
sub
mov
push
fwait
push
cmp
aam
loopne
addr16
outsl
sbb
mov
sahf
add
dec
mov
das
add
jp
push
or
aas
xchg
ret
or
pop
and
cmpb
pop
nop
xor
add
notl
xor
add
pop
xchg
sub
mov
jge
add
imul
je
icebp
and
popf
into
add
and
out
test
sbb
and
negb
pop
popa
imul
mov
scas
cmp
pop
stc
into
add
push
or
test
rcr
int
add
dec
push
push
aaa
enter
stos
cli
and
jnp
add
xchg
mov
jecxz
call
jo
add
push
pop
add
in
ja
clc
jmp
add
xor
in
add
sbb
cltd
lea
lahf
adc
adcl
ja
repnz
lds
add
xlat
add
jge
pop
add
lods
aam
scas
pushf
movsb
add
mov
xchg
es
add
int3
xor
in
jno
add
adc
sbb
adc
mov
or
add
push
cmp
mov
jecxz
das
test
add
and
mov
add
mov
iret
add
out
stos
sti
inc
dec
xor
jg
cmp
test
push
mov
cmp
add
repz
int
adc
pop
xchg
inc
pop
add
cmpsl
jle
fs
sbb
pusha
orl
add
mov
fildl
loopne
cmp
dec
push
and
add
shrl
add
enter
aad
test
ljmp
shlb
cmpsb
mov
call
mov
ds
dec
add
call
mov
loope
cwtl
add
imul
xchg
jmp
mov
out
push
cmpxchg
enter
or
out
sbb
sbb
sub
sub
cmp
add
and
jo
push
gs
insb
pop
jb
in
jg
inc
repnz
aas
je
mov
mov
imul
out
cltd
fnstsw
repnz
in
bsr
insl
pop
add
mov
scas
repz
adcl
cli
mov
scas
cmc
test
mov
iret
mov
out
xchg
sarb
add
mov
jo
add
mov
data16
pop
push
in
push
sbbb
xchg
inc
icebp
add
dec
stos
add
and
add
xor
xchg
add
setge
add
add
sbb
add
data16
mov
jl
add
pop
out
xchg
pop
add
dec
cli
dec
push
jecxz
xchg
sub
cwtl
push
lock
mov
aaa
mov
mov
aad
test
mov
mov
mov
ja
mov
xchg
push
pop
ficompl
mov
int3
xchg
add
fnstsw
add
add
iret
and
sbb
sub
cmp
mov
or
xchg
testl
out
inc
inc
out
mov
push
add
cmpsl
push
pop
std
stos
pop
jne
ret
jnp
test
rclb
sahf
ja
scas
aad
push
xor
iret
or
das
mov
add
loope
or
sub
sbb
xchg
imulb
jbe
lea
inc
fildl
add
nop
dec
imul
xor
mov
jb
daa
pusha
adc
mov
sbb
movsb
ret
adc
push
test
stc
xor
sub
out
sub
cmp
cmp
ss
sbb
test
adc
scas
stc
xor
sbb
loop
add
xchg
outsb
gs
add
jns
fiadds
mov
dec
sarb
mov
in
dec
push
inc
in
add
testl
push
shl
or
jns
out
fildl
ja
jecxz
gs
hlt
imul
stc
xor
mov
mov
or
mov
xchg
add
fwait
xchg
sahf
mov
scas
jne
dec
mov
mov
sbb
imul
xor
dec
and
mov
sub
xor
pop
fistpll
es
ret
das
sbb
add
add
inc
out
pop
popa
add
dec
and
cs
insb
xchg
int3
add
mov
cli
add
mov
call
lahf
or
in
add
testb
push
leave
sarb
xor
add
test
sub
add
mov
je
mov
stos
inc
push
arpl
test
dec
push
sbb
add
or
fs
aam
push
sbb
adc
jns
sub
dec
add
loopne
cs
pop
add
xor
push
in
lcall
or
mov
mov
sub
es
add
movsl
xchg
xor
fildl
dec
mov
or
inc
movsb
testb
add
in
cld
push
mov
add
add
sbb
push
adc
add
push
popf
cmp
pop
xchg
add
cmp
mov
xor
inc
psubsw
mov
adc
hlt
inc
data16
lds
ss
pop
je
and
push
jge
fdivs
mov
test
jno
mov
push
insb
and
test
cmp
mov
inc
mov
add
dec
inc
jmp
add
pop
sti
jle
push
repnz
jg
push
push
jno
add
arpl
dec
sbb
add
xlat
xor
lret
pop
rol
lret
and
xchg
lds
mov
out
adc
pop
in
add
pop
repnz
push
sti
add
jo
cltd
add
bound
cmpb
dec
cmp
mov
add
mov
dec
cmp
push
dec
mov
je
mov
mov
mov
mov
and
orl
mov
dec
cmc
xchg
les
iret
inc
rcr
mov
jo
insl
dec
xchg
push
and
dec
mov
adc
and
dec
ds
mov
inc
sbb
mov
adc
and
dec
xchg
out
in
inc
icebp
cli
mov
dec
mov
test
std
and
dec
jmp
fisubl
roll
mov
dec
mov
andb
inc
xchg
lahf
mov
cmp
push
mov
and
dec
adc
inc
xor
mov
clc
xchg
lea
xchg
mov
dec
mov
inc
ret
enter
repnz
dec
in
cmp
and
pop
and
and
addl
and
dec
notl
ljmp
and
xor
addl
sahf
adc
dec
dec
push
xchg
pop
and
pusha
jge
jbe
pop
and
dec
or
add
inc
and
dec
cs
mov
xchg
adc
xchg
mov
mov
ffreep
mov
pop
clc
xchg
repz
inc
in
mov
pop
cwtl
xchg
and
adc
mov
dec
jb
jns
dec
inc
inc
pop
mov
add
dec
pop
xchg
sbb
sub
xor
pop
and
dec
dec
xchg
inc
and
jle
mov
mov
mov
and
adcb
pop
jecxz
sbb
jb
add
and
dec
lds
fdivrs
jno
insb
and
dec
push
xchg
pop
and
dec
add
aas
xchg
push
and
lret
cs
mov
adc
add
and
dec
xchg
xchg
cltd
and
dec
test
or
and
cmp
mov
adc
gs
jb
jg
pop
inc
push
lret
dec
rclb
in
jmp
decb
mov
ret
inc
mov
addl
and
dec
lods
xchg
and
rcll
fisubs
dec
les
std
lock
data16
dec
jl
pop
and
inc
dec
mov
dec
push
xchg
sbb
adc
aaa
cmp
insl
dec
pusha
xchg
ja
jp
pop
push
mov
dec
and
dec
or
xor
sub
es
dec
mov
cmpsl
and
xchg
adc
xchg
iret
and
inc
loope
mov
adc
and
dec
fistl
loop
mov
adc
and
dec
mov
movsb
and
nop
adc
xchg
sbb
adc
mov
adc
or
sbb
push
inc
mov
fisubl
dec
rclb
hlt
mov
adc
xchg
movsl
and
xchg
adc
das
shll
adc
mov
adc
sub
xchg
outsl
and
jne
andb
add
and
dec
insb
xchg
jnp
jbe
push
pop
mov
inc
and
js
add
adc
xor
mov
adc
xchg
cmpsb
and
xchg
adc
and
dec
ret
xchg
into
and
inc
loopne
mov
adc
xchg
mov
cltd
mov
lds
mov
adc
and
dec
addr16
push
jge
jo
mov
dec
and
inc
psubsw
mov
add
dec
ss
and
sub
or
mov
adc
and
dec
xor
inc
fs
into
add
jae
push
xchg
pop
and
inc
fmull
push
psubsb
xchg
add
in
loope
repnz
adc
mov
lcall
and
inc
sbb
sub
and
inc
pop
mov
and
dec
nop
xchg
cltd
and
mov
inc
scas
mov
add
ja
out
adc
shll
out
inc
out
mov
adc
and
dec
pop
xchg
push
and
jp
popa
and
dec
push
xchg
pop
and
dec
stos
mov
dec
xchg
xchg
popf
inc
xchg
jecxz
ljmp
inc
into
aad
fcoml
jbe
jg
fs
adc
dec
dec
ds
aaa
and
and
or
dec
out
out
and
inc
std
ret
adc
and
dec
scas
xchg
cmpsl
and
adc
xchg
inc
and
push
imul
or
pop
inc
push
and
cmp
xchg
aam
iret
inc
stc
mov
adc
and
dec
xchg
xchg
pushf
adc
sbb
mov
mov
dec
in
jp
enter
fimull
xchg
movsb
and
orb
xchg
and
outsb
adc
pop
pop
mov
xor
cmp
xchg
adc
or
inc
out
xchg
or
xlat
inc
faddp
mov
adc
and
dec
loope
call
ljmp
xchg
shlb
faddl
mov
je
dec
push
inc
pop
push
mov
adc
push
dec
sbb
and
lock
xchg
aam
fiaddl
mov
mov
mov
add
dec
push
xchg
xor
cmp
mov
hlt
add
dec
pusha
xchg
outsb
and
pop
mov
aaa
and
dec
sub
add
mov
push
and
pop
push
mov
jno
arpl
xchg
xlat
and
inc
lret
lds
adc
and
dec
cmpsl
xchg
test
lahf
mov
scas
mov
mov
or
mov
inc
adcb
es
mov
dec
das
xchg
pop
and
adc
dec
mov
jge
cli
adc
and
dec
xchg
xor
ja
jnp
repnz
imul
dec
xor
adc
sub
xlat
adcb
leave
movsl
pusha
xchg
pop
and
lock
scas
addb
pushf
adc
mov
std
or
aas
adc
and
dec
xor
movsl
and
inc
icebp
jno
add
in
dec
and
xchg
fmuls
adc
inc
loop
mov
adc
xchg
andl
push
mov
and
inc
in
dec
jecxz
je
adc
sar
dec
mov
cmp
pushf
or
mov
mov
or
and
pushf
nop
stos
mov
adc
fadds
mov
stc
outsb
sbb
jg
mov
lahf
and
dec
push
xchg
mov
xchg
dec
popf
xchg
cmp
cmc
adc
mov
ficoml
and
dec
rclb
adc
mov
cmp
inc
inc
pop
les
cmp
xchg
sbb
jae
pusha
orl
pop
nop
xchg
or
mov
outsb
lods
inc
or
mov
adc
and
dec
or
and
or
and
inc
lods
bound
in
jns
mov
adc
and
dec
lea
test
hlt
sub
jp
mov
xchg
mov
cs
jle
data16
or
dec
shr
lods
or
pop
and
dec
mov
inc
jo
mov
jmp
out
pop
popa
mov
push
xchg
mov
sbb
and
dec
cwtl
xchg
adc
imul
pop
stc
in
cwtl
xchg
jmp
adc
sub
xchg
mov
mov
mov
dec
push
pop
sub
or
and
mov
pop
pop
and
mov
ret
aaa
cmc
loop
mov
fsubl
cmpsb
mov
pop
and
mov
pop
lock
arpl
movsl
cmp
jl
test
ja
cltd
idivb
push
loop
cmp
imul
xchg
lds
push
cmp
add
test
out
loop
cmp
stos
and
in
jbe
lcall
orb
cli
jge
xchg
xlat
mov
mov
loop
cmp
lock
inc
lods
mov
mov
loop
cmp
mov
inc
scas
and
and
idivl
in
mov
jne
mov
loope
loop
cmp
and
mov
aas
loop
cmp
testl
pop
push
movsl
loop
cmp
in
cmp
icebp
mov
loop
and
bound
loop
cmp
adc
and
and
cmp
sbb
sub
xchg
mov
cmp
lcall
and
mov
sbb
loop
cmp
dec
daa
mov
mov
in
ljmp
mov
sbb
sub
je
sbb
fists
sub
mov
out
pop
jno
sbb
movsb
push
inc
divb
adc
les
jno
jg
jno
sbb
fucom
inc
ds
das
adc
test
xchg
cmpsb
jno
sbb
mov
aad
in
inc
sub
and
pusha
jecxz
les
jns
mov
enter
in
aam
adc
addr16
jb
cmp
xchg
dec
inc
ficomps
pop
call
sbb
rolb
vmovsd
adc
dec
stos
in
jno
sbb
xchg
pushf
lcall
push
adc
inc
add
jmp
add
jg
andl
and
test
jecxz
push
loop
cmp
mov
addb
add
xchg
loop
cmp
popf
mov
cmc
mov
jmp
fbstp
loop
cmp
and
into
and
and
in
mov
std
repz
cmp
int
dec
sbb
adc
adc
xor
das
mov
xchg
and
cs
loop
cmp
cmpsl
and
cld
jle
cmpb
inc
cmp
mov
sbb
xchg
cmp
pusha
mov
cwtl
sahf
dec
and
mov
and
data16
jle
nop
and
mov
lret
out
mov
imul
cmp
fsubp
jns
mov
or
sbb
fwait
loopne
cmp
push
cmp
dec
adc
and
xchg
dec
mov
or
jecxz
dec
and
insb
cmp
ret
mov
lods
loop
cmp
bound
test
xchg
mov
bnd
mov
out
cmp
mov
and
mov
loop
cmp
and
fsubrs
lods
push
loop
cmp
hlt
mov
iret
ljmp
fstpt
ret
lahf
scas
mov
add
push
adc
aad
push
and
pop
mov
sbb
and
push
cmpsb
mov
jae
and
xchg
mov
call
jl
xchg
xor
cmp
mov
and
loopne
loop
cmp
inc
jno
and
int3
mov
push
add
add
add
and
ret
mov
cmp
mov
mov
cmp
sbb
mov
jmp
mov
sub
adc
mov
pop
mov
mov
xchg
loop
cmp
push
and
adc
jmp
into
and
push
mov
push
sub
js
movsl
fisttps
pop
mov
loop
cmp
or
and
xlat
out
xor
push
and
sub
loop
cmp
setle
jnp
mov
test
and
insl
mov
loop
pop
movsl
add
test
mov
dec
push
xchg
push
and
inc
test
bound
dec
lcall
xchg
shll
or
mov
adc
and
dec
notl
ret
scas
adc
pop
dec
inc
xchg
add
dec
inc
pop
hlt
mov
jae
push
aas
mov
push
and
dec
pop
xchg
sub
mov
or
ss
dec
cmp
out
adc
xchg
je
cs
sub
sti
and
dec
dec
xchg
popa
and
inc
jnp
mov
xchg
and
dec
push
pusha
adc
and
pop
mov
fsts
dec
and
dec
aam
call
test
lds
sub
xlat
mov
xchg
and
inc
adc
xchg
mov
lock
dec
mov
inc
inc
mov
dec
dec
xchg
add
filds
mov
dec
xor
insl
dec
mov
xor
xchg
mov
push
mov
adc
xchg
out
sub
mov
dec
xchg
jle
stos
inc
or
sub
shll
dec
jns
loop
sbb
push
adc
push
pop
loop
adc
dec
pop
xchg
outsb
and
inc
cmpsb
test
movsb
adc
and
dec
xor
mov
mov
and
dec
mov
cli
and
inc
and
jmp
sbb
or
aad
mov
jb
and
icebp
dec
xchg
push
and
adc
ds
cmp
inc
fmull
nop
dec
inc
xchg
les
stos
inc
fadds
and
dec
pop
xchg
stc
and
inc
xchg
pop
mov
pop
call
inc
mov
mov
dec
cmpsl
xchg
mov
and
orb
js
jp
andb
inc
fidivl
mov
adc
xchg
ja
adc
mov
adc
and
dec
jl
ja
jnp
repnz
dec
add
xlat
mov
dec
adcb
pop
and
dec
lock
lods
and
inc
mov
movsb
and
dec
rclb
mov
adc
and
dec
int3
xchg
xor
movsl
inc
in
mov
fsubs
dec
adc
inc
and
mov
adc
xchg
pop
and
inc
and
jmp
daa
and
dec
jne
or
addl
cld
dec
outsb
xchg
pop
and
adc
xchg
das
and
dec
in
xchg
and
cld
inc
mov
mov
lret
cs
and
inc
dec
dec
mov
adc
sbb
and
inc
out
stos
mov
adc
dec
dec
xor
stc
and
jg
mov
lahf
and
dec
push
xchg
mov
xchg
mov
pop
loop
mov
mov
adc
and
dec
repz
shlb
int
or
mov
adc
xchg
dec
inc
xchg
pop
and
inc
cmpsl
jle
cmp
dec
sbb
orl
sub
xchg
mov
inc
inc
out
mov
and
dec
or
xor
mov
adc
push
dec
and
pop
and
inc
shrl
xchg
dec
in
jns
out
enter
dec
lea
test
hlt
and
dec
gs
jp
scas
jmp
mov
and
inc
sbb
mov
neg
jl
int
jno
and
dec
mov
and
dec
ds
mov
inc
dec
add
popa
dec
xor
inc
xchg
mov
dec
clc
xchg
cwtl
and
inc
imul
and
dec
push
xchg
xchg
jmp
dec
jmp
push
and
dec
fists
mov
and
dec
push
inc
sub
push
xchg
mov
jl
ja
jnp
repnz
imul
add
decb
xchg
stos
and
lret
leave
adc
xor
pop
inc
inc
lock
dec
scas
xchg
pushf
and
adc
and
dec
es
and
inc
test
and
dec
icebp
xchg
jno
fadds
mov
and
dec
ret
xchg
sbb
xchg
inc
add
adc
dec
loop
jmp
daa
inc
mov
mov
adc
mov
adc
xchg
and
das
adc
add
add
dec
cld
xchg
mov
pop
inc
push
mov
dec
inc
pop
and
mov
adc
xchg
dec
and
inc
test
stc
adc
push
dec
cmp
lahf
and
inc
adc
xchg
cmp
cmc
cmc
adc
xchg
adc
incl
mov
adc
adc
xchg
pop
and
les
cmpsl
and
dec
cmp
inc
sbb
pusha
adc
xchg
and
sub
mov
out
and
dec
adc
fisubs
pop
inc
or
mov
adc
and
dec
or
and
mov
adc
and
dec
bound
in
mov
adc
das
shll
insl
inc
aad
dec
adc
xchg
hlt
and
inc
gs
scas
add
rcll
and
dec
cs
sbb
cmpsb
inc
mov
mov
and
fdivrs
add
adc
mov
jo
ds
dec
xchg
dec
and
inc
testb
popa
adc
xchg
xchg
roll
loope
clc
and
dec
adc
mov
xchg
ljmp
and
dec
mov
or
inc
and
dec
inc
xchg
cltd
and
push
dec
mov
xor
pop
stos
push
fdivr
xor
enter
call
lods
mov
cmc
pushf
push
pushf
stos
push
adc
sub
movsl
movsb
aas
xchg
loopne
push
push
stc
enter
aas
aad
stos
push
fsubrl
imul
pop
in
push
movsb
stos
je
call
std
je
dec
rorb
ljmp
lods
push
mov
lret
sub
add
jb
mov
and
pusha
push
in
lods
push
int3
mov
clc
xlat
sub
incb
and
push
xlat
stos
sbb
push
mov
sub
mov
push
subb
in
push
mov
push
inc
test
push
mov
push
pushf
std
test
mov
push
jo
push
in
lods
xor
stos
push
dec
lods
or
in
push
je
push
xor
sbb
fsubrs
insb
scas
push
or
imul
pop
movsl
in
push
insb
scas
push
pusha
cld
xchg
cmc
push
dec
inc
int3
xlat
mov
mov
loope
push
jl
push
in
mov
sub
test
pop
movsl
les
in
stos
push
cmp
mov
shrb
stos
push
dec
lods
pusha
pop
cmc
sbb
xchg
sbb
push
clc
mov
imul
push
pop
movsl
adc
xchg
dec
stos
push
push
lods
mov
xchg
pop
mov
pop
in
imul
cmp
cmp
aad
scas
push
dec
mov
push
in
scas
push
cmp
aam
mov
push
insb
stos
push
call
sbb
call
or
in
outsb
xchg
cmp
push
sub
sbb
cld
imul
clc
pop
movsb
add
or
leave
out
mov
jns
jp
mov
je
stos
cmp
fsubrl
cwtl
xlat
stos
inc
je
lods
shrb
push
xlat
sub
pop
pop
lods
jb
mov
cwtl
in
pop
subb
lods
pop
fcmove
mov
dec
xlat
stos
in
dec
lods
rcrb
mov
xor
and
insb
xor
aam
sub
push
lock
jb
mov
insb
xlat
stos
mov
rorb
lahf
pusha
mov
fstcw
loope
dec
mov
jo
jb
mov
rcl
sub
jbe
lods
fisubl
dec
inc
jb
mov
cmp
les
lods
pop
arpl
cmc
clc
outsb
xchg
test
push
mov
dec
imul
scas
push
push
enter
and
cmc
cmp
js
push
jl
adc
movsl
shrb
push
mov
in
outsb
xchg
push
scas
push
clc
mov
outsb
aad
mov
pop
cmc
int3
outsb
xchg
mov
push
fsubr
nop
pop
in
outsb
xchg
dec
scas
push
pusha
jmp
outsb
aad
scas
push
aam
mov
xchg
fdivrs
pop
in
outsb
xchg
subb
movsl
fdivrs
aad
stos
push
enter
cmc
cld
push
mov
push
pushf
lods
pushf
pop
movsl
adc
xchg
sub
push
movsb
stc
loopne
cmc
push
aas
xchg
enter
std
xor
fsubrl
mov
adc
aam
xchg
mov
movsb
pop
mov
dec
cmc
fdivrs
shlb
add
and
dec
imul
mov
pusha
xchg
inc
and
inc
test
xchg
adc
sbb
xchg
mov
and
mov
adc
and
dec
lcall
mov
and
dec
lock
mov
pop
mov
dec
xor
stos
push
mov
stc
and
dec
scas
xchg
inc
and
decl
xchg
xchg
adc
pop
and
add
dec
inc
sub
adc
add
stos
fcoms
lods
push
les
cmp
mov
adc
stos
dec
push
pusha
lods
jp
mov
sbb
sub
pop
mov
or
stos
and
lods
rclb
dec
dec
aad
push
push
mov
dec
pop
fs
lods
jb
mov
enter
pop
cmp
adc
dec
pop
lock
pop
and
cmp
aam
pop
fs
insb
aad
call
sbb
pusha
pop
or
jb
mov
cmp
stos
sub
sbb
rcl
push
push
clc
lods
rolb
popa
inc
lret
jo
sbb
dec
rcll
sub
in
or
inc
ret
cmp
mov
push
dec
scas
push
in
dec
pop
movsl
sbb
xor
insl
xor
mov
mov
adc
xchg
or
rorb
and
dec
scas
mov
adc
and
dec
mov
adc
push
mov
cmp
js
les
xlat
sub
je
lods
fisubl
and
cs
dec
push
xorl
adc
mov
out
inc
xor
pop
xchg
aas
and
mov
call
inc
ds
pop
adc
or
mov
ficomps
jo
je
inc
and
pop
adc
inc
dec
pop
xchg
add
insl
pop
sbb
lret
inc
mov
dec
push
xchg
shlb
inc
lock
mov
adc
pushf
push
lods
aam
std
fmuls
je
mov
mov
ds
dec
dec
xchg
lods
and
adc
and
dec
ja
scas
and
std
adc
dec
rcll
adc
and
dec
jnp
or
xchg
adc
orb
mov
repnz
loop
mov
dec
push
xchg
push
and
inc
jmp
mov
adc
mov
dec
lea
adc
sub
mov
mov
mov
add
psubsw
adc
xchg
mov
jmp
dec
aad
cmp
flds
mov
adc
out
xchg
xchg
xchg
and
inc
and
sbb
mov
xchg
pop
and
test
dec
fstl
cmc
cmp
dec
cld
xchg
icebp
jnp
test
and
dec
and
cmp
das
mov
adc
jecxz
push
xchg
mov
repz
cwtl
aas
mov
nop
and
dec
rcll
sbb
and
dec
xchg
xchg
int3
and
adc
add
adcb
cltd
dec
jge
arpl
nop
js
in
dec
mov
push
and
or
fcmovb
and
lods
jb
pop
or
and
and
mov
and
inc
cwtl
fimull
cmp
pop
hlt
and
pop
mov
ljmp
and
sbbb
adc
adc
cmp
daa
and
inc
in
mov
adc
into
dec
aaa
xchg
int
stos
inc
outsl
fisttpl
xor
inc
xchg
ret
and
add
mov
in
rcll
push
mov
adc
pop
dec
daa
xchg
stos
and
xor
jbe
int3
dec
add
xor
mov
xchg
das
and
rorl
push
aam
fsubs
dec
jg
enter
pop
adc
cmp
jo
push
add
lret
sub
pusha
lods
pop
in
mov
int3
xlat
sub
pop
and
and
stos
cld
pop
sbb
mov
test
test
jb
jecxz
data16
rcll
xor
dec
add
cmpsl
xrelease
gs
dec
rcll
adc
xchg
inc
and
mov
js
dec
and
pusha
adc
add
lods
and
inc
addr16
pop
adc
and
dec
mov
clc
ret
dec
xor
std
jns
or
xchg
fwait
and
or
mov
popa
xchg
pop
and
loop
mov
adc
dec
repnz
sub
scas
mov
adc
xchg
inc
and
mov
mov
dec
inc
xchg
adc
test
adc
and
dec
xchg
sbb
ja
sub
test
rcll
and
dec
push
xchg
and
xchg
mov
dec
ficoml
push
push
push
adc
and
adc
dec
adcb
iret
mov
adc
frstor
insb
push
xchg
loope
adc
lcall
inc
mov
enter
and
aas
adc
xchg
andb
inc
cmpsl
add
in
adc
sub
je
lods
jp
mov
and
incl
mov
adc
popf
dec
add
mov
mov
orb
add
mov
adc
and
dec
popa
xchg
sbb
inc
inc
shl
mov
and
dec
std
xchg
cmp
push
and
dec
loop
cmp
or
mov
push
xchg
lret
and
inc
insb
mov
add
dec
xor
and
mov
pop
lods
les
pop
mov
jl
cwtl
or
dec
fwait
out
and
xor
leave
mov
push
les
fisubl
adc
jmp
int
pop
mov
dec
cs
icebp
or
out
and
cs
adc
cmp
pop
das
fdivrs
xchg
insb
and
out
and
clc
jmp
popf
les
bound
movsb
fmuls
dec
gs
and
jo
cmc
mov
leave
in
mov
mov
adc
xchg
int3
dec
dec
out
and
jnp
mov
mov
test
sub
inc
mov
mov
push
das
fdivrs
dec
cmpsb
lea
add
imul
adc
mov
xchg
xchg
insb
jns
inc
out
and
ljmp
into
ljmp
jae
cwtl
imul
fcomi
adc
jl
shr
fmull
daa
fists
adc
aad
sbb
fld
sbb
pop
mov
outsl
cmp
and
int3
dec
dec
stos
cmpsb
loope
mov
stc
fisttpll
mov
xor
rcrb
icebp
and
pop
daa
fstl
adc
std
mov
pop
push
les
ljmp
pop
cmp
cmp
pusha
test
insl
les
mov
xor
jp
dec
mov
xchg
out
daa
pushf
push
cmc
adc
aam
les
pop
xor
mov
xorl
adc
mov
mov
leave
ja
dec
loope
fcoms
popf
int3
jmp
daa
or
lods
cmp
cli
into
jno
mov
mov
loope
in
scas
icebp
jae
pop
jmp
addr16
stos
clc
call
xchg
inc
adcl
inc
push
xor
add
add
add
jl
pop
inc
cmp
stc
dec
inc
test
adc
popa
mov
xchg
shlb
add
mov
mov
sbbl
add
dec
xor
inc
enter
and
insb
and
push
mov
pop
adc
or
sub
cs
adc
adc
or
pop
adc
sub
adc
mov
adc
mov
adc
fs
and
dec
adcb
and
inc
jne
mov
sbb
mov
icebp
inc
jl
push
or
das
xchg
fbld
inc
subps
adc
fs
adc
mov
mov
xchg
stos
xchg
fcoml
call
mov
mov
add
adc
adc
mov
cltd
and
sub
adc
mov
adc
jb
and
dec
js
test
nop
xchg
sbb
mov
inc
sbb
mov
sbb
or
push
sbb
lea
adc
mov
sub
cmp
and
dec
pusha
in
dec
sbb
xchg
xchg
and
inc
test
mov
mov
adc
cmp
enter
cld
and
roll
xchg
adc
adc
mov
pusha
sbb
mov
adc
jb
and
dec
movsb
xchg
mov
mov
inc
fsub
leave
or
fistps
sbb
adc
xchg
sub
repnz
dec
sub
cmp
and
dec
fs
dec
daa
xchg
test
nop
xchg
pushf
and
inc
mov
sub
clc
adc
and
add
adc
and
adc
and
inc
cmp
dec
inc
sub
mov
je
sub
jb
and
dec
lods
xchg
mov
and
inc
loopne
in
inc
xor
mov
add
and
xor
cmp
xor
dec
inc
pop
and
je
sbbb
xor
pushf
and
jb
and
dec
enter
loopne
ss
inc
cld
pop
or
xchg
test
sub
xor
cmp
mov
mov
cmp
mov
xchg
mov
and
in
mov
mov
and
adc
and
dec
adc
push
inc
aas
push
mov
xchg
and
jb
and
dec
rclb
and
inc
clc
adc
and
sbb
and
lock
adc
hlt
dec
push
adc
pop
dec
jl
insb
and
test
xchg
lret
adc
lods
dec
inc
xchg
mov
sbb
and
cmp
sbb
je
enter
xor
cmp
xchg
dec
and
pop
mov
mov
dec
and
dec
mov
xchg
fcoml
fwait
js
sbb
xor
adc
movsl
and
sbb
adc
cmp
and
dec
pusha
in
dec
dec
xchg
andb
xchg
cwtl
and
test
mov
mov
adc
cmp
adc
cld
pop
rorl
mov
push
mov
adc
adc
adc
push
dec
pop
in
dec
push
xchg
jl
mov
test
mov
mov
adc
cmp
add
clc
lds
add
and
and
pop
inc
and
adc
cmp
cmp
pop
and
dec
test
nop
dec
adcl
enter
loopne
mov
sbb
inc
pop
sub
cmp
ljmp
enter
and
pop
mov
rcrb
pop
adc
and
jg
es
sbb
aad
or
pop
jmp
and
push
cmp
and
popa
pop
mov
je
test
dec
xchg
nop
enter
and
arpl
mov
sbb
mov
or
sbb
adc
cmp
cltd
adc
adc
pusha
dec
insb
in
dec
addr16
mov
xchg
xchg
mov
les
loopne
in
cmp
adc
sbb
pop
and
xor
inc
push
mov
pusha
mov
js
test
and
dec
mov
xchg
insl
and
inc
fsubs
in
outsb
clc
mov
mov
outsl
dec
and
jo
dec
inc
push
and
jno
mov
shl
sub
popa
push
out
mov
les
hlt
push
xor
fimuls
fildl
push
movsb
mov
and
xchg
add
mov
pop
sub
mov
mov
repnz
mov
test
aam
sbb
in
insl
push
jns
add
movl
test
fs
bound
std
in
leave
mov
add
adc
mov
psubd
or
and
pop
adc
dec
in
pusha
aad
jno
cmp
roll
add
std
add
or
xor
leave
mov
mov
xor
pop
filds
or
cmp
fldenv
cmp
fidivrs
push
addb
enter
mov
and
les
mov
mov
sub
mov
add
and
sbb
das
adc
stos
sbb
sub
faddl
jbe
jno
add
adc
out
mov
mov
push
movsl
in
lahf
xor
aam
call
xor
stc
sub
mov
add
mov
sub
insb
add
hlt
push
imul
jge
add
test
nop
mov
cli
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
cmp
clc
mov
mov
frstor
sub
adc
gs
aam
pop
or
dec
into
add
mov
aam
movsl
fisttps
xor
movsb
add
hlt
shrl
sub
add
fisubrl
inc
mov
push
sarb
add
in
add
xor
or
fnstsw
add
daa
jno
push
or
and
mov
outsl
orb
mov
add
push
stc
ficomps
leave
sbb
shlb
add
cmp
shrb
cmp
mov
insb
mov
mov
lcall
add
ljmp
fildl
push
fdivl
adc
arpl
test
fs
add
push
or
clc
iret
push
in
popf
decl
xchg
daa
scas
orb
sahf
push
pop
jge
orb
shlb
repnz
inc
push
imul
lret
addb
ss
sbb
lock
add
loopne
rorl
adc
dec
frstor
fistpll
mov
mov
mov
aad
mov
jns
add
in
xchg
shll
cmp
fisttps
addr16
out
add
dec
add
fmuls
or
pusha
jp
inc
cmp
out
sbb
push
mov
loopne
outsb
xor
add
mov
add
mov
loop
push
int3
add
or
das
add
lds
cld
mov
mov
add
mov
add
iret
shlb
sub
scas
ficomps
mov
fs
es
pushf
mov
xchg
insl
add
aas
mov
pop
jb
push
loopne
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivrl
fisttpl
jg
push
roll
clc
mov
push
pop
int
mov
mov
outsl
out
or
jle
push
incl
lret
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
addl
mov
add
popa
cmpsl
notl
add
dec
inc
imul
dec
push
scas
fcompl
fldenv
filds
cmp
fdivs
push
cmpb
jg
mov
jmp
sbb
mov
lret
add
and
ss
testb
xlat
int
push
ficoms
add
and
jp
mov
dec
add
add
push
outsl
sub
mov
aas
or
sbb
pop
out
add
inc
xchg
jmp
bound
add
mov
sbb
mov
adc
mov
adc
mov
inc
in
jo
add
xchg
adc
push
xchg
adc
and
fs
add
jb
and
dec
mov
fmuls
xchg
clc
les
or
mov
or
or
aam
pusha
jno
dec
and
or
push
or
adc
cmp
adc
adc
adc
and
jb
and
inc
and
arpl
adc
push
jl
and
adcb
adc
and
js
cmpsb
inc
enter
je
enter
and
xchg
in
and
and
aas
adc
dec
je
fs
dec
adc
cmp
push
pop
mov
xor
out
xchg
adc
sub
jl
sbb
and
inc
sbb
push
or
push
and
dec
adc
mov
dec
mov
loopne
mov
and
and
inc
call
push
test
xor
xor
adc
aaa
sub
dec
inc
negb
test
adc
mov
adc
cmp
sub
sub
add
cltd
adc
and
jb
and
inc
adc
arpl
adc
fcoms
or
and
js
mov
mov
adc
cmp
adc
pop
loop
sub
nop
adc
mov
mov
cld
js
xchg
shlb
adc
cmp
adc
mov
xchg
in
and
sbb
aas
js
xor
je
adc
loop
aas
icebp
add
cmp
mov
sbbb
call
ja
adcl
loop
nop
xchg
mov
enter
adc
cmp
int3
cmp
inc
test
lods
sbb
mov
clc
cmp
inc
mov
addr16
mov
push
js
pushf
cmpsb
and
mov
dec
adc
mov
adc
inc
sbb
ss
sub
xchg
nop
and
inc
shlb
inc
sub
lcall
push
ljmp
xor
cltd
adc
add
xor
les
sub
adc
mov
xor
mov
js
fwait
mov
dec
int3
loopne
cmpsb
adc
mov
inc
mov
xchg
cltd
les
adc
adc
and
jno
dec
sub
push
cltd
adc
mov
adc
inc
std
insb
xor
loop
or
pushf
xor
aam
dec
inc
adc
iret
adc
xchg
lods
and
dec
pop
pop
xor
lds
push
mov
xchg
nop
adc
mov
mov
dec
push
sub
les
fs
cld
lds
dec
mov
das
cltd
mov
dec
adc
or
adc
xor
adc
js
bound
mov
sbb
pop
dec
xor
cmp
ficoms
cmp
push
pop
mov
je
adc
mov
sbb
push
xchg
subb
mov
loop
mov
jo
fmull
cmp
inc
and
test
int3
adc
clc
jno
push
cmp
push
push
lds
gs
loopne
jl
sbb
mov
xchg
sbb
adcb
cmp
xchg
cltd
or
push
mov
xchg
dec
adc
cmp
push
orl
mov
in
dec
mov
adc
cmpsb
adc
mov
push
mov
xchg
dec
cwtl
adc
xchg
xchg
lock
or
jl
xchg
inc
mov
loopne
cltd
sbb
xor
adc
xchg
and
dec
int3
in
dec
lahf
mov
adc
cmpsb
adc
mov
pop
mov
movsl
dec
push
adc
cmpsl
xchg
mov
and
mov
pop
adc
insb
inc
lods
cwtl
mov
adc
and
lods
xchg
addr16
adc
imul
cltd
add
dec
adc
loopne
outsl
and
xor
push
mov
mov
in
dec
jne
sbb
movb
ja
cmpsb
adc
mov
sbb
mov
sub
sbb
cmp
add
cltd
adc
adc
pusha
cmp
inc
cmp
dec
mov
test
mov
sbb
mov
pop
enter
nop
adc
rclb
arpl
movsb
xchg
adc
sbb
cmp
inc
and
xchg
test
inc
int3
xchg
mov
sbb
inc
gs
mov
xor
aam
lcall
pushf
dec
pusha
adc
rclb
sbb
mov
movsb
pop
dec
xchg
int3
shr
inc
push
cmpsb
mov
push
test
pop
adc
stos
xchg
lods
enter
or
imul
adc
xchg
inc
and
inc
push
and
dec
add
inc
mov
mov
dec
or
cld
or
dec
and
or
dec
mov
adc
dec
je
adc
mov
mov
adc
adc
cld
mov
adc
imul
and
dec
sbb
adc
pop
dec
sbb
inc
js
mov
dec
and
shlb
aam
and
call
and
mov
adc
mov
adc
and
dec
sub
adc
jo
sub
inc
cwtl
mov
cmp
in
mov
and
aas
inc
adc
sub
inc
and
dec
inc
xchg
push
jp
adc
je
inc
xchg
mov
dec
inc
cwtl
dec
mov
dec
dec
xchg
enter
fcoml
cld
adc
adc
push
dec
and
gs
mov
or
jo
pop
inc
nop
or
rorb
xchg
in
and
clc
outsl
adcl
dec
inc
xchg
push
and
sbb
sbb
dec
mov
ds
inc
inc
lock
or
icebp
adc
pop
xchg
dec
and
inc
or
movsb
and
inc
rolb
adc
mov
hlt
and
pop
and
sub
or
or
push
test
xchg
movsb
and
inc
les
mov
adc
and
fs
adc
inc
add
or
or
pop
inc
or
adc
dec
or
lock
or
adc
or
inc
daa
add
xchg
push
sbb
inc
je
mov
xchg
sbb
adc
xchg
or
fsubl
add
hlt
or
adc
inc
add
or
or
fs
or
cwtl
adc
and
dec
or
add
adc
push
or
add
and
cmp
and
or
and
inc
inc
push
or
nop
and
lods
and
and
xchg
pop
and
inc
clc
add
cmp
xor
or
inc
or
mov
xchg
xor
xor
mov
and
enter
inc
adc
ja
adc
xor
and
and
and
and
int3
fs
in
adc
xchg
adc
cmp
inc
sub
xor
mov
jl
orb
mov
sbb
loope
or
loope
jns
adc
dec
mov
loope
mov
adc
popa
int3
adc
imul
inc
jns
je
bound
imul
jmp
push
inc
jae
dec
inc
sub
push
xchg
outsb
xor
std
fs
sub
cltd
cmp
xor
out
and
dec
xor
xor
add
xchg
xor
loop
adc
push
enter
add
and
xor
out
and
xor
xor
std
adc
add
loop
adc
push
enter
add
ss
out
and
dec
xor
ss
std
adc
mov
loop
adc
push
enter
pop
or
in
jg
ficoml
push
enter
mov
or
or
aas
hlt
inc
or
xor
cli
enter
jb
and
xor
in
sub
lea
mov
adc
setl
in
sub
or
cmp
loop
aas
fiadds
mov
enter
and
std
in
sub
lea
lods
push
test
loop
aas
fiadds
mov
aam
xor
int3
and
adc
adc
aas
fiadds
mov
insb
lods
adc
fs
sbb
iret
sarl
sbb
fwait
inc
sub
inc
or
inc
sbb
ljmp
add
push
test
sub
mov
jo
or
aam
push
push
cwtl
push
daa
push
dec
push
mov
adc
push
dec
sbb
inc
sbb
fwait
cmp
pop
out
and
adc
cld
xor
adc
inc
xor
mov
les
and
incl
adc
loop
xor
roll
push
lea
mov
repnz
and
pop
ss
out
and
adc
cld
ss
std
adc
mov
inc
aaa
sti
mov
les
aas
and
incl
sbb
mov
sbb
and
decl
mov
inc
cmp
mov
les
aas
and
incl
sbb
adc
les
xor
or
xor
aas
fiadds
and
mov
or
jns
sbb
lods
or
inc
sbb
inc
or
push
jno
pop
jmp
or
notl
inc
xor
enter
push
xor
in
bound
aaa
adc
and
mov
and
adc
fiadds
and
nop
adc
lcall
sbb
push
push
dec
push
inc
ret
sbb
lea
std
les
and
das
std
dec
sbb
push
dec
add
inc
inc
dec
dec
sub
mov
and
push
sbb
ret
inc
mov
push
push
arpl
sub
into
pop
jbe
dec
outsb
inc
cli
cmc
pop
sbb
dec
and
jno
and
in
mov
jle
mov
sbb
and
jb
test
add
jbe
push
sbb
add
and
mov
jbe
push
sbb
inc
inc
fldl
arpl
mov
adc
movsl
xor
adc
sub
push
lods
test
or
or
and
mov
mov
insb
adc
adc
and
outsb
mov
pop
shll
push
sub
pop
je
cwtl
push
xchg
movsb
dec
nop
lock
or
outsb
jae
gs
imul
cmp
jne
push
adc
push
push
adc
mov
lret
and
adc
int3
adc
icebp
loopne
and
lock
cmp
adc
and
cmp
adc
dec
adc
fcompl
lret
inc
jo
inc
sti
test
cmp
adc
gs
adc
and
inc
or
mov
adc
and
inc
or
adc
sbb
adc
mov
or
pop
add
je
adc
and
adc
mov
dec
hlt
xchg
sbb
or
and
inc
and
mov
adc
dec
sbb
mov
mov
dec
sbb
inc
fcoml
lock
lock
mov
stc
adcl
sub
add
dec
push
xchg
or
insb
addl
jo
mov
or
dec
mov
adc
xchg
pusha
and
nop
adc
xchg
les
mov
hlt
adc
mov
and
ficoms
adc
dec
mov
and
add
ret
mov
into
add
or
dec
or
pop
pcmpgtw
push
loop
orb
lea
addb
add
or
xor
xchg
js
je
xchg
dec
xor
aaa
or
inc
xor
dec
and
push
inc
pop
add
add
cwtl
or
mov
add
xor
insb
or
test
xchg
movsb
and
adc
es
fs
or
xchg
mov
xchg
inc
pushf
movsb
mov
and
add
add
push
in
icebp
sub
add
cli
adc
out
pop
adc
sbb
adc
in
and
dec
cmc
sbb
or
mov
and
aam
dec
or
inc
add
or
add
mov
and
xchg
adc
or
adc
push
mov
and
xchg
adc
sbb
pop
jb
cmp
sbb
mov
add
xchg
sub
les
in
aam
mov
adc
add
xor
hlt
or
mov
xchg
add
or
pop
adc
adc
or
and
jl
dec
sub
jmp
push
and
or
pop
push
inc
cmp
sarb
inc
daa
es
sarb
and
jg
add
dec
pop
fs
push
add
adc
and
inc
test
add
int
fwait
push
mov
xchg
push
push
adc
or
loopne
inc
xor
and
inc
inc
pop
mov
and
dec
mov
inc
int3
fmuls
adc
add
dec
sub
pop
insb
mov
push
or
sub
pop
sti
mov
inc
lods
mov
outsl
adc
xor
sub
dec
or
xlat
popf
js
adc
gs
push
add
dec
inc
add
and
push
fs
and
fbld
pusha
jp
mov
stc
or
and
inc
sti
cld
mov
adc
and
cmpsb
sub
xor
test
test
xchg
xchg
jne
notl
addb
push
add
iret
call
xchg
cmp
jbe
dec
mov
sbb
push
lret
sbb
movsb
adc
xchg
or
cli
sbb
push
pusha
aad
bound
mov
pop
add
push
push
add
sbb
add
add
or
cmpsb
in
xor
and
jmp
std
and
test
stc
dec
test
clc
and
dec
in
cmc
and
inc
hlt
or
div
mov
repnz
dec
icebp
xchg
inc
and
inc
pop
out
mov
and
dec
in
xchg
nop
and
inc
movsb
jmp
mov
ljmp
sub
adc
cmp
add
daa
in
mov
sbbb
adc
jo
mov
pusha
inc
scas
add
jecxz
popa
inc
or
or
add
lahf
pop
mov
fwait
mov
inc
inc
inc
inc
inc
dec
dec
dec
add
push
push
push
push
push
pop
or
xor
loop
js
push
push
push
nop
cwtl
ret
inc
mov
mov
jb
or
test
inc
clc
push
xchg
pop
lret
dec
xor
mov
or
aas
dec
inc
sub
adc
addr16
and
inc
jo
mov
adc
add
test
lea
cmp
jb
adcb
data16
pop
inc
and
gs
cmp
mov
add
or
mov
jne
insl
dec
adc
test
jne
adc
jmp
sub
enter
jge
dec
xchg
adc
xorb
xor
xchg
xchg
cmp
dec
mov
fwait
and
and
sub
lret
xchg
sub
test
sub
mov
xor
movsb
adc
pushw
mov
adc
lock
sub
inc
sub
test
and
inc
add
mov
sub
mov
push
lret
les
push
ret
mov
inc
iret
sub
adc
or
aam
sbb
inc
mov
fsts
sub
sub
scas
enter
loopne
lds
sub
dec
js
cmpsl
mov
add
pop
and
enter
sub
cli
dec
mov
and
inc
inc
adc
sub
movsb
adc
shrb
and
adc
mov
inc
js
movsb
lods
mov
adc
jg
push
lods
push
inc
and
enter
sub
sbb
mov
pusha
push
or
xor
cmp
dec
nop
enter
sub
popa
in
dec
clc
xchg
adc
add
adc
fdivrl
dec
adc
push
inc
dec
and
dec
mov
adc
cltd
sub
and
and
jns
dec
adc
movsl
sub
fs
xchg
jns
sbb
movsl
sub
adc
mov
sbb
and
xor
inc
sub
xchg
add
inc
jg
adc
adc
icebp
sbbl
and
adc
adc
or
mov
movsl
push
xchg
mov
sbb
xchg
sbb
xchg
adc
lcall
cmp
test
mov
adc
stos
mov
inc
scas
push
jl
mov
in
sub
fnstenv
sub
mov
sub
ret
cmp
cwtl
iret
shlb
enter
mov
cltd
cmp
ret
or
lods
adc
or
and
inc
sbb
out
adc
loop
adc
sub
repz
xchg
and
inc
or
sti
test
adc
call
sbb
jmp
and
les
sub
sbb
pop
dec
loop
mov
or
and
inc
adc
sbb
adc
push
and
gs
jo
les
daa
adc
jno
sub
jb
and
nop
jae
xor
jbe
and
ja
inc
cmp
and
repnz
cmp
and
push
and
pop
jb
jnp
mov
bound
adc
jo
adc
and
mov
orl
jnp
xchg
addl
inc
mov
and
mov
push
mov
and
test
mov
mov
shrl
adc
stc
repnz
cmc
sub
loop
cltd
adc
dec
sub
aad
std
adc
fnstcw
cli
dec
cmp
fstl
mov
and
or
adc
enter
or
jmp
and
inc
adc
movsl
mov
lods
xchg
repnz
adc
movsb
adc
es
in
bound
xchg
add
cmp
xchg
lods
adc
adc
stos
cmp
sub
sbb
cmp
and
scas
sub
xor
inc
dec
adc
ljmp
dec
cmpsb
not
and
push
sbb
xchg
sub
nop
lcall
mov
jg
fs
xor
adc
lret
adcl
shld
add
lods
adc
lods
mov
sbb
mov
and
and
daa
sub
hlt
jnp
lock
sub
orl
cmpsb
adc
loope
in
cmp
mov
enter
add
in
addl
enter
and
inc
add
stos
nop
out
enter
jb
sbb
push
sahf
dec
xchg
mov
enter
daa
adc
sub
xor
and
ret
mov
aaa
or
int3
dec
adc
xchg
or
sub
les
das
sbb
sbb
xchg
loopne
adc
movsl
fs
in
enter
and
push
adc
mov
sub
xchg
and
mov
nop
push
repnz
cmp
mov
xor
or
adc
inc
cmpsl
and
push
pop
cmp
sub
adc
pop
in
jb
push
push
push
push
and
inc
test
xlat
and
mov
xor
cmp
mov
sub
rclb
push
and
cmp
lahf
mov
dec
adc
xchg
test
cmp
adc
dec
in
bound
add
jb
inc
loopne
js
push
adc
int3
sub
xchg
test
gs
enter
lahf
out
push
insb
adc
xchg
les
xchg
xchg
ja
xchg
sbb
orl
sub
xchg
sbb
scas
mov
cltd
shrb
mov
movb
push
pushf
cmp
fstl
dec
adc
jmp
sahf
sbb
cmc
sub
lahf
ret
test
add
and
or
nop
adc
frstor
sbb
leave
dec
mov
sbb
stos
push
and
inc
mov
and
adc
pop
mov
dec
adc
xchg
dec
adc
xor
mov
adc
mov
push
and
fsubl
xor
sbb
cmp
mov
test
mov
push
cmpb
inc
xchg
adc
mov
inc
mov
inc
push
and
cmp
adc
adc
inc
mov
cwtl
inc
inc
cmp
mov
inc
dec
mov
roll
test
dec
loop
adc
dec
mov
push
mov
dec
loope
test
jo
test
bound
test
sbb
xchg
mov
adc
or
adc
cmp
add
xor
sbb
or
or
inc
jb
adc
xor
adc
push
adc
dec
sub
scas
sub
fbld
push
sub
adc
push
sbb
jo
adc
adc
push
push
sbb
and
mov
imul
and
sub
mov
sub
sbb
adc
subl
sub
mov
or
and
adcb
mov
sub
xchg
lods
adc
xor
xchg
mov
xor
and
test
stos
enter
mov
lods
mov
push
mov
sub
pop
dec
cmp
cmpsb
sub
f2xm1
sub
stc
inc
bound
sbb
int
loope
rcrb
push
loop
fs
sub
xchg
ffree
fdecstp
cmp
test
mul
jmp
push
in
mov
loop
cli
xchg
adc
clc
mov
jae
sub
sbb
add
adc
repnz
push
repz
test
mov
inc
xchg
cmc
les
sub
movsl
cmp
sub
xor
or
mov
adc
jmp
mov
dec
adc
jmp
push
or
in
les
in
xchg
pusha
mov
mov
mov
insb
or
shrb
inc
jae
fnstsw
adc
add
fxam
cmpsl
fcoml
jle
hlt
xchg
adc
adcl
mov
pop
mov
xchg
adc
adc
shrb
or
lcall
inc
mov
cmpsl
mov
mov
jno
sbb
movsl
push
xchg
mov
sbb
xchg
or
lock
fidivs
xchg
adc
in
fucomi
test
sbb
and
mov
sahf
mov
sbb
or
cmp
dec
adc
add
test
loopne
cmp
inc
stos
add
and
sbb
push
xor
fsubr
dec
push
cmp
sbb
dec
and
xchg
ficoms
es
and
sub
xor
jno
rorb
popa
les
fucom
push
and
call
inc
dec
and
jl
push
dec
mov
pop
movsb
sub
pop
mov
inc
cmp
gs
lock
and
jno
fldenv
xchg
js
movsb
cmp
jl
inc
and
enter
cmp
and
inc
add
jb
sbb
or
mov
and
sbb
lcall
mov
or
and
stos
sub
xchg
mov
sub
mov
sub
or
sub
ret
xchg
leave
mov
mov
jno
or
or
nop
mov
mov
jno
or
adc
jmp
fcomps
dec
sub
lock
sbb
testb
inc
xor
push
cmp
push
adc
frstor
ret
cmp
push
and
dec
nop
loop
cmp
and
sub
adc
xchg
and
mov
adc
aaa
sbb
push
adc
push
sbb
and
ficompl
sub
sbb
loope
ret
sbb
loope
adc
cmp
sub
mov
sbb
xchg
push
fildl
inc
push
dec
adc
in
cltd
dec
adc
cmp
dec
inc
adc
mov
mov
leave
fstps
dec
inc
repnz
nop
inc
sbb
xchg
mov
mov
movsb
dec
js
cltd
cmp
inc
movsl
mov
inc
and
stos
adc
xor
sub
mov
adc
or
enter
divps
nop
int3
mov
pop
aam
adc
loopne
and
adc
loope
loopne
cmova
and
adc
outsb
cmp
ret
inc
jle
or
lock
outsl
sub
test
mov
adc
cli
adc
arpl
xor
or
imul
adc
lods
lret
push
lods
bound
cmp
add
adc
std
sub
push
and
inc
clc
sub
test
stc
out
push
cli
push
and
inc
in
cmp
test
in
loop
adc
call
fs
sub
adc
mov
enter
dec
push
and
fnstsw
bound
push
inc
jl
jp
fistpll
jg
adc
push
mov
mov
mov
popf
inc
cmp
mov
sub
adc
mov
test
enter
push
icebp
sub
jno
inc
adc
or
mov
lods
sub
gs
bound
repz
fs
out
and
sub
mov
loope
js
repz
test
loop
clc
pop
and
adc
push
or
push
vmovaps
inc
scas
mov
pop
sbb
ret
adc
adc
sub
les
int3
sub
adc
imul
adc
pusha
cmp
dec
adc
popa
mov
bound
and
out
cmp
push
je
jo
mov
or
sub
or
lods
cmp
notl
push
mov
push
cltd
je
pop
adc
cmpsl
mov
cltd
mov
mov
inc
adc
das
nop
sub
push
or
push
out
dec
cmp
mov
fisubrs
fs
rcll
sub
add
adc
test
cmp
fadds
sbb
and
jb
or
inc
in
enter
or
mov
testb
or
adc
adc
add
clc
mov
mov
pop
adc
mov
adc
adc
push
inc
xor
stos
pop
or
scas
fs
or
test
inc
mov
push
pop
xchg
pop
push
pop
test
pop
or
addr16
in
sub
test
inc
jns
mov
in
sub
test
inc
nop
enter
or
push
pop
sbb
mov
sub
test
push
or
enter
pop
sub
test
fmul
dec
sub
cmpsl
lret
lock
sub
adc
fidivrs
lods
loop
cmp
movsb
repnz
movsl
mov
in
cmp
mov
les
mov
scas
xchg
adc
or
scas
sub
push
cmpsb
adc
stos
lret
lds
sub
enter
movsb
cltd
adc
add
sbb
data16
xor
mov
lods
xchg
pop
dec
or
lods
les
stos
xchg
bound
mov
cmpsb
les
mov
mov
scas
lods
sub
repnz
cmp
test
js
into
cmp
mov
nop
repnz
inc
repnz
jecxz
inc
leave
cmp
or
push
insw
mov
and
insl
push
push
adc
and
sbb
outsl
sbb
pop
and
and
dec
mov
sub
xchg
xor
mov
cmp
adc
pop
push
or
outsl
ret
push
pushf
sbb
das
int3
sub
dec
mov
sbb
adc
insb
jmp
mov
jne
push
push
in
test
daa
jnp
xor
inc
adc
adcl
stos
and
mov
sub
push
xor
nop
or
lock
fsts
rcll
adc
mov
add
push
push
dec
mov
add
or
dec
lea
push
xchg
push
dec
mov
cmp
dec
int
roll
adc
add
push
fcoml
xor
jb
or
inc
lock
push
dec
sub
or
lcall
inc
xor
cs
lds
dec
inc
je
adc
jle
movsb
and
inc
inc
inc
inc
sub
sub
aaa
mov
js
inc
test
xor
dec
mov
xor
inc
inc
mov
mov
iret
inc
push
and
es
in
dec
shl
pusha
or
pop
inc
dec
inc
movsb
add
add
dec
fsubrs
and
mov
shll
mov
in
adc
mov
add
adc
add
cmp
iret
insl
bound
push
or
dec
dec
or
movsbl
std
pop
int
jmp
jge
sub
and
or
setle
sbb
mov
lea
fwait
or
cmpsb
dec
das
adc
fs
pop
cmp
inc
or
push
mov
stos
adc
or
or
inc
je
enter
dec
inc
mov
jecxz
dec
cmc
inc
adc
sbb
push
out
or
aaa
push
and
or
or
iret
jle
jae
or
or
adc
dec
sbb
inc
adc
add
jne
xchg
or
xor
pop
pop
add
call
lret
imul
and
dec
add
dec
push
xchg
add
push
push
adc
mov
adc
fimuls
and
and
xor
hlt
push
cltd
sbb
add
or
inc
push
cmp
or
dec
sub
dec
or
enter
cwtl
daa
test
dec
sub
dec
add
or
push
mov
or
adc
or
or
mov
fsubrs
xchg
inc
mov
mov
push
sub
push
push
scas
and
or
dec
and
inc
scas
cs
mov
or
inc
sbb
fiadds
stc
xchg
or
inc
pinsrw
enter
inc
jg
popa
sbb
sahf
inc
or
adc
inc
lods
or
dec
imul
inc
push
ljmp
push
inc
movsl
or
enter
jb
sbb
push
adc
and
push
xchg
sub
dec
and
dec
xchg
or
cltd
push
dec
or
or
sub
iret
or
cmp
adc
sub
sub
push
or
adc
or
push
inc
push
sahf
mov
jp
dec
ljmp
xchg
inc
repz
xor
adc
add
add
push
pusha
lea
mov
inc
push
in
sbb
sbb
outsb
and
xor
repz
inc
or
dec
lds
cli
inc
xor
dec
xor
or
jle
or
push
xchg
or
pushf
inc
stc
sub
cld
push
adc
or
push
push
push
lcall
inc
or
popa
frstor
mov
sub
xor
push
sbb
push
and
and
js
loopne
sbb
inc
adc
test
adc
dec
pop
pop
leave
gs
movsl
inc
lods
xor
push
xchg
pop
mull
mov
push
jno
xor
inc
rcrb
or
fs
xor
push
xchg
pop
dec
dec
push
loope
pop
adc
or
push
dec
dec
push
or
pop
pop
jns
add
inc
sub
push
xor
mov
push
pop
mov
test
dec
push
movsl
add
push
out
push
icebp
mov
dec
sub
rorl
push
inc
xchg
mov
pop
xor
push
dec
pop
shlb
mov
dec
xor
mov
lods
out
sahf
pop
push
inc
mov
fwait
dec
xor
cmp
push
movsl
pop
xor
cmp
push
inc
push
mov
roll
add
and
ss
push
inc
or
push
sbb
push
inc
or
dec
xchg
add
or
icebp
dec
adc
lahf
je
xchg
sbb
pop
add
sbb
push
jbe
dec
or
push
movsb
adc
xchg
push
in
aaa
call
push
push
sbb
cli
and
test
jns
sbb
lcall
add
inc
push
push
inc
or
push
nop
inc
ret
inc
cmp
mov
or
dec
lds
and
push
pop
inc
mov
imul
push
jns
mov
inc
push
dec
addb
or
inc
adc
push
mov
push
jp
mov
inc
sbb
aam
scas
or
rcll
push
dec
sub
ret
sub
push
lret
popf
inc
lods
and
sub
inc
pop
mov
and
fildll
addr16
dec
cltd
xor
lcall
or
test
cmp
addb
and
data16
push
sti
xor
inc
out
orl
pushf
jle
mov
inc
sub
push
xor
push
sub
mov
js
push
push
inc
cmc
or
jle
lods
mov
or
mov
lret
sarb
sub
aas
rorb
push
dec
and
inc
shr
adc
movsb
sti
insl
and
push
push
sbb
mov
nop
push
fsubs
ficoml
sub
push
inc
or
push
gs
mov
mov
in
sub
inc
jb
push
push
pop
inc
sub
inc
movsl
or
push
loop
fnstenv
inc
sub
push
xchg
inc
into
lea
inc
or
push
cmp
mov
jno
dec
or
push
jmp
dec
fisttpl
std
mov
sub
inc
push
sub
pop
or
push
inc
lret
inc
or
sub
adc
cmp
aad
push
js
jmp
dec
in
fisubrs
and
shrb
mov
or
push
add
lcall
mov
push
and
adc
cmp
sbb
adc
xlat
and
fcomps
adc
nop
mov
repnz
mov
rorl
mov
in
das
and
nop
sub
jo
lea
int3
roll
pop
xchg
inc
into
shlb
mov
cmp
enter
iret
pop
adc
inc
int3
add
mov
push
sub
loopne
cmp
clc
mov
fmul
jo
mov
cmp
int3
test
dec
jno
int
mov
cwtl
sub
and
pusha
sbb
nop
mov
push
jno
sbb
inc
enter
js
test
call
and
jae
outsb
fadds
loop
cltd
sbb
dec
test
inc
sbb
aam
pop
adc
ret
js
mov
pop
inc
nop
and
jns
sbb
inc
push
lds
pop
xchg
in
les
adc
mov
cld
mov
inc
mov
or
jo
dec
das
ja
inc
insb
repnz
test
enter
das
and
nop
mov
and
jns
sbb
test
dec
jno
mov
cmp
and
inc
insb
repnz
test
ficoms
xchg
mov
fidivrs
fnsave
sbb
test
je
pushf
pop
mov
mov
fbstp
sbb
test
int3
jb
pop
sub
testb
in
les
or
sbb
hlt
das
and
cld
mov
loopne
fs
sbb
dec
cmp
js
sub
xchg
nop
nop
mov
mov
test
loopne
fdivrs
or
xor
cwtl
or
loopne
cmp
adc
dec
or
mov
enter
jl
cwtl
mov
inc
or
mov
or
or
adc
and
and
bound
inc
arpl
jo
int3
je
insb
jle
pop
adc
mov
jno
add
adc
or
xchg
and
dec
hlt
mov
jge
push
and
pushf
fmuls
jns
or
jo
or
and
cld
jbe
jmp
loopne
sbb
shr
push
lock
adc
in
add
sbb
mov
int3
addb
shll
cmp
les
jo
or
cltd
add
push
cltd
or
data16
or
xor
sbb
or
test
xchg
cli
xor
push
loope
add
inc
or
mov
or
in
xchg
add
and
dec
dec
xchg
pusha
and
nop
test
rclb
and
inc
sbb
and
nop
mov
aam
hlt
and
xchg
add
dec
push
xchg
insb
and
loopne
sbb
and
dec
test
clc
adc
cltd
adcl
mov
jno
or
lcall
jo
xchg
inc
mov
add
add
and
dec
push
inc
loopne
cld
adc
pushf
mov
je
xchg
inc
mov
mov
adc
popf
mov
or
insb
dec
mov
in
inc
sahf
and
inc
adc
push
add
pop
sbb
lea
bound
or
dec
cld
adc
sbb
mov
mov
fsub
sub
or
adc
sub
sbb
cwtl
popa
jl
shlb
and
pop
or
push
loopne
pop
stc
sbb
adc
mov
cmp
dec
or
dec
mov
dec
or
imul
cmp
test
adc
dec
test
and
push
or
les
inc
mov
popa
pusha
xor
lods
subb
sbb
mov
imul
hlt
data16
cmp
inc
loope
jno
and
xchg
inc
clc
cwtl
xor
push
mov
adc
int3
xor
xlat
int
xor
icebp
inc
xchg
mov
inc
ror
and
cld
ret
xchg
inc
adc
push
inc
adc
fsubs
and
lods
or
test
push
or
stc
mov
xor
movsb
push
aam
and
inc
dec
adc
jno
xor
adc
push
in
mov
test
jo
test
inc
shrb
decl
dec
mov
jns
and
rolb
sub
mov
andl
lock
mov
cmp
and
xchg
sbb
and
jle
mov
sbb
sub
adc
jno
andb
xor
data16
sub
dec
fcoml
rcr
jns
xor
pop
adc
mov
mov
je
push
sbb
sarl
sub
pusha
mov
mov
pop
adc
or
pop
cmp
sbb
inc
cmp
adc
insb
cwtl
imul
test
loopne
or
cmp
jge
int3
sbbl
rolb
fcomps
pop
mov
mov
and
and
aaa
xchg
xor
or
cltd
sbb
cltd
xchg
rol
mov
mov
add
call
movsb
addb
cmp
add
aam
sub
adc
ret
xchg
shll
andb
sbbl
xor
xor
xor
leave
fdivs
or
sbb
jbe
pshufw
aaa
sbb
cltd
adc
pop
in
movsb
test
xchg
mov
dec
test
popa
in
rcll
call
sub
xor
cmp
and
xor
les
sub
xchg
and
xchg
sub
inc
cmp
enter
gs
sbb
mov
dec
or
pop
loopne
subl
cltd
sbb
and
pop
andb
xchg
aam
and
mov
adc
push
push
adc
sub
xor
cmpsb
mov
mov
mov
nop
dec
adc
mov
pop
pop
int3
arpl
mov
push
mov
aaa
inc
pop
or
movsl
inc
dec
movsb
cmp
mov
cld
stos
cld
xchg
push
push
je
mov
leave
imul
push
xchg
mov
mulb
sub
pop
in
inc
xor
and
inc
fdivs
int3
push
inc
mov
pushf
xor
nop
jmp
xor
adc
cmpsb
mov
dec
adc
xor
stc
fsubs
xor
adc
adc
inc
dec
sbb
adc
sbb
nop
rclb
data16
sub
gs
popa
add
test
xor
icebp
les
dec
mov
push
inc
fsubs
sbb
faddl
lods
pop
xor
cmpsb
in
inc
push
aam
lret
mov
push
dec
mov
movsb
int3
inc
pushf
mov
les
dec
or
fwait
sub
xchg
and
xchg
xor
fcoms
leave
je
leave
out
nop
loope
dec
cmpb
sub
adc
adc
in
lods
or
lock
jb
mov
mov
scas
add
and
ret
add
inc
les
add
cmpsb
js
fs
mov
sub
int3
adc
and
rolb
enter
repnz
loop
jo
adc
and
in
dec
hlt
stc
ficoms
add
push
adc
aam
adc
pop
dec
and
xor
cmp
adc
xchg
mov
out
sub
push
dec
and
cmp
push
inc
fs
nop
adc
int3
and
inc
lock
xchg
or
and
ds
mov
push
js
xchg
mov
loop
adc
rcll
sbb
or
mov
dec
adc
adc
nop
xchg
cmpsb
enter
and
fs
or
inc
push
scas
and
xor
xor
inc
and
dec
outsb
xchg
jle
mov
mov
dec
repnz
mov
adc
sub
mov
add
test
mov
and
inc
hlt
shll
cmp
dec
and
jo
mov
mov
inc
repnz
or
inc
dec
push
xchg
push
js
mov
and
dec
in
xchg
cld
adc
and
inc
cmp
jbe
adcb
rorb
push
sbb
or
adc
and
dec
dec
xchg
pop
and
mov
mov
and
loopne
orl
dec
push
xchg
push
sahf
mov
dec
out
xchg
adc
mov
push
inc
xor
mov
jb
orb
stos
and
inc
call
cli
adc
mov
or
xchg
mov
movsb
inc
rcr
lock
add
and
dec
inc
xchg
push
and
jbe
mov
dec
rclb
push
mov
pop
and
dec
jle
xchg
and
adc
and
add
dec
xor
pop
push
adcb
and
dec
mov
inc
repnz
adc
dec
dec
pop
xchg
push
test
mov
dec
hlt
mov
mov
inc
cmp
pop
adc
dec
nop
xchg
mov
fimull
push
inc
or
xchg
or
inc
add
adc
mov
mov
push
call
adc
adc
dec
cmp
dec
and
jbe
adcb
and
dec
test
mov
loop
out
adc
and
mov
xchg
and
data16
xchg
adc
xchg
loop
lock
adc
popa
dec
mov
dec
and
dec
outsb
xchg
jl
xchg
inc
mov
shlb
dec
in
xchg
cld
adc
shll
inc
xor
adc
dec
xchg
xchg
test
mov
adc
ret
xor
adc
and
dec
inc
pop
push
js
xchg
dec
stos
xchg
mov
ror
push
or
sub
cmp
mov
jl
nop
dec
mov
inc
mov
adc
les
sbb
sub
cmp
inc
and
pop
jb
xchg
nop
and
dec
mov
mov
lock
vpsubw
and
xor
dec
push
xchg
pusha
and
cwtl
mov
call
les
push
xchg
xchg
or
mov
push
and
dec
jle
mov
lcall
fisubs
pop
adc
and
inc
sbb
mov
inc
and
dec
push
jbe
test
mov
dec
in
notb
add
and
inc
cs
mov
push
jp
nop
xchg
mov
rorb
or
add
dec
es
cmp
dec
inc
pop
mov
jl
mov
xchg
mov
rolb
test
push
clc
adc
sub
inc
inc
pop
insb
mov
mov
dec
lods
xchg
ret
inc
loop
mov
adc
add
and
dec
xor
inc
and
je
adcb
and
dec
scas
xchg
mov
loop
notb
add
add
and
dec
ss
dec
and
outsb
mov
and
dec
test
mov
out
mov
adc
dec
ds
push
and
jbe
mov
dec
enter
in
and
inc
adc
mov
inc
and
dec
push
jl
mov
mov
dec
in
cli
dec
and
or
adc
or
mov
mov
call
cld
aad
dec
adc
lret
or
pop
dec
outsb
in
dec
sahf
cltd
scas
or
dec
adc
mov
roll
and
jp
lcall
xchg
lock
shlb
sbb
mov
and
dec
pushf
xchg
lods
and
inc
mov
sub
or
xchg
inc
and
xchg
gs
or
incb
arpl
adc
xchg
insb
and
outsb
cwtl
insb
xor
popf
push
sbb
or
rolb
jne
in
jnp
pop
push
call
jmp
jbe
pop
mov
jb
sbb
dec
insl
daa
and
jp
xor
dec
jne
inc
in
gs
push
sub
sub
inc
push
sbb
sbb
pop
inc
inc
lcall
jne
pop
adc
idivb
push
or
pop
fnsave
inc
push
sub
push
adc
mov
sbb
cmp
lret
push
mov
aas
shl
insl
inc
insl
sbb
call
push
imul
outsl
dec
jne
fimull
inc
jns
mov
or
xor
or
cmpsb
nop
nop
inc
nop
or
arpl
or
mov
dec
jns
js
dec
in
movsl
inc
sti
jge
adc
notl
inc
movsb
adc
push
jb
mov
sbb
jae
dec
ss
jg
fcomip
rorb
or
or
sahf
adc
inc
imul
push
test
dec
cmpsb
push
hlt
insl
jecxz
jae
jmp
je
sbb
sub
test
dec
push
adc
inc
or
jae
dec
mov
rorl
sbb
adc
dec
adc
push
or
outsb
push
data16
fs
xor
addr16
and
popa
rcl
and
and
push
fs
jmp
jb
mov
jns
nop
push
sbb
jo
in
pop
mov
outsb
addr16
popa
pop
dec
inc
outsl
sbb
popf
dec
neg
je
sbb
mov
imul
sub
lcall
shrb
and
mov
push
je
adcb
inc
inc
test
adc
pop
xor
and
dec
out
dec
push
dec
adc
mov
sub
xchg
push
inc
sbb
ficoml
loop
pop
and
push
push
adc
inc
pop
push
xchg
push
cmp
rclb
rorb
int3
inc
pop
jae
push
arpl
inc
dec
push
inc
sub
dec
cltd
inc
xor
imul
lcall
cli
dec
push
or
mov
flds
adc
ljmp
divl
push
fmull
pushf
and
push
fadd
out
mov
xor
jbe
dec
nop
sub
jne
out
lods
sbb
xor
test
insl
popa
cmpsb
and
cli
dec
sbb
inc
adc
xor
inc
inc
xchg
push
gs
bound
xchg
mov
leave
mov
hlt
iret
call
rcrb
adc
xor
pop
dec
jno
sub
stos
push
jg
jo
gs
dec
data16
or
xor
cmp
in
insl
push
mov
dec
sbb
adc
dec
push
fs
push
jp
jo
or
dec
stos
jne
data16
push
cmpsl
bound
xchg
xor
jns
xchg
sub
and
fists
jae
inc
enter
pop
push
fisubrs
push
inc
push
outsl
mov
inc
decb
bound
sub
das
push
jp
and
or
jl
ret
and
imul
lea
sbbl
fs
and
shlb
pop
mov
sub
movsb
mov
mov
je
push
addr16
dec
movsb
loop
inc
les
xchg
bound
insl
add
add
sub
xor
push
daa
sbb
and
dec
inc
outsb
into
or
ss
pop
adc
cmpsl
pop
aas
cltd
dec
dec
jo
leave
jo
push
xchg
repz
inc
push
pop
bound
adc
shlb
adc
dec
dec
inc
sbb
aam
xchg
jmp
push
push
adc
mov
pusha
stc
fs
xor
aaa
push
xchg
ja
inc
mov
push
ret
adc
sbb
sbb
push
clc
insb
cwtl
push
xchg
incb
cmp
sub
xchg
jns
jp
xor
sbb
dec
daa
mov
mov
adc
jo
mov
adc
inc
sbb
outsb
inc
adc
and
fs
lret
jo
adc
inc
repnz
mov
movsb
pop
shll
sub
push
mov
shlb
jb
sbb
dec
push
dec
cmp
push
test
xchg
aad
test
jg
inc
inc
repnz
mov
nop
inc
jmp
lret
inc
lds
gs
jecxz
test
mov
mov
and
inc
bswap
inc
mov
sbb
adc
inc
mov
mov
push
lahf
push
nop
jp
sub
inc
dec
jns
mov
pop
rclb
sbb
repnz
sub
in
mov
xchg
sub
mov
inc
jae
mov
arpl
mov
inc
mov
inc
push
xchg
pop
cmp
lea
push
in
int3
mov
sub
das
pop
hlt
adc
push
movsb
or
push
pushf
xor
sbb
fnstenv
sub
or
dec
pop
bound
je
jge
in
and
push
adc
test
mov
inc
adc
push
insb
adc
ds
xchg
adc
adc
adc
and
mov
imul
push
test
sbb
push
movsb
push
inc
dec
push
ds
outsb
jne
insl
inc
jno
mov
cs
pusha
push
aas
jbe
and
add
push
je
subb
lret
movsb
sub
inc
xchg
mov
and
adc
sub
inc
adc
cmp
ds
lea
push
push
repnz
push
sahf
test
pop
pop
jl
adc
adc
dec
mov
call
stos
mov
in
jbe
gs
xor
pop
insl
ljmp
push
push
inc
sbb
sub
fs
ljmp
andl
mov
cmp
jb
and
or
xor
popa
xchg
mov
dec
or
loop
sub
xor
icebp
insb
dec
pop
push
fildl
xor
push
dec
push
push
xor
js
imul
push
mulb
insl
inc
iret
inc
shlb
adc
pop
rcrb
jle
lcall
jnp
adc
jbe
imul
pop
dec
inc
sti
les
mov
imul
test
adcb
add
or
add
bound
insl
loope
xchg
or
jl
cmpsl
fbld
jo
mov
inc
dec
xchg
imul
es
jae
test
movsl
jp
inc
cmp
and
sub
adc
mov
mov
fiadds
movsb
subb
popf
sbb
lock
fsubrl
lret
jae
ds
inc
cmp
jb
sub
jb
sub
pushf
fs
sub
push
add
gs
orb
inc
cmp
jns
add
dec
push
and
lret
jno
lcall
mov
dec
nop
mov
sbb
dec
jne
inc
push
xchg
arpl
ret
mov
int3
iret
inc
jns
jae
in
test
cmp
test
movsl
push
imul
pop
cmpsb
hlt
sub
dec
adc
inc
fwait
mov
xchg
outsl
outsb
sbb
inc
jg
lods
cmp
and
cmp
xchg
cmp
or
aam
es
mov
inc
repnz
outsl
jnp
cmp
cmp
insl
xor
cmp
adc
hlt
adc
or
inc
jb
xor
and
addb
mov
popa
adc
cwtl
mov
ds
arpl
xor
push
jo
scas
dec
loope
inc
addr16
jae
shll
sub
adc
inc
sbb
outsl
dec
imul
and
scas
xor
mov
push
pop
ds
dec
arpl
mov
inc
scas
jo
jne
pop
outsb
mov
xchg
dec
jns
xor
pusha
cltd
push
ja
mov
mov
lds
push
adc
dec
sub
movsb
fistpll
movsb
ja
ficoml
inc
inc
xchg
es
adc
inc
mov
aaa
imul
les
cmpsb
push
stos
adc
dec
leave
lret
dec
dec
shll
movsl
orl
push
in
xor
frstor
add
push
cmp
push
and
xchg
mov
addr16
mov
dec
outsl
inc
push
arpl
xchg
aam
dec
jecxz
mov
and
adc
out
roll
aam
inc
daa
push
jbe
pop
pop
pop
adc
pushf
inc
repz
cli
fldenv
gs
inc
push
je
call
mov
and
push
dec
sbb
xchg
sbb
scas
sub
mov
push
shr
pop
dec
jbe
push
xor
rcr
xlat
mov
sub
sbb
pop
push
sbb
dec
mov
push
ljmp
pop
push
jne
mov
and
movsl
xchg
aad
cmp
cmp
lcall
xchg
or
pop
cmp
ljmp
dec
daa
fs
jo
push
jae
xchg
and
daa
nop
mov
and
push
leave
dec
jae
je
cld
and
adc
orb
out
sahf
cld
jle
jne
push
cmovns
outsb
or
xor
push
out
orl
lds
add
movsb
push
mov
cltd
loop
rcll
xchg
sbb
adc
pop
cld
repz
adc
push
sub
inc
insl
jo
jns
mov
sbb
aas
and
mov
ss
inc
push
popa
add
inc
pop
outsb
jbe
imull
inc
inc
push
cmp
movsb
adc
sti
add
jne
inc
adc
push
inc
movsw
sbb
cld
hlt
jmp
fidivrl
int
sub
adc
hlt
sub
and
push
inc
lods
inc
test
jmp
xchg
jo
pop
cmp
movsb
notb
inc
adc
pushf
mov
nop
adc
xor
jne
lahf
movsl
adc
inc
ds
inc
cmp
repnz
test
rorl
jbe
adc
inc
inc
aad
inc
adc
push
adc
inc
pop
adc
inc
push
and
dec
and
imul
cmp
cmp
push
pop
imul
push
in
sbb
inc
push
mov
dec
dec
imul
cmp
adc
js
stos
repz
nop
mov
mov
cmp
enter
xchg
xchg
and
and
xchg
test
sahf
jnp
mov
imul
hlt
push
notb
or
int3
pop
xchg
fwait
lret
and
test
popa
mov
sub
enter
fsubl
sub
mov
inc
insb
std
pop
xor
sbb
push
mov
push
and
clc
movsl
lds
fs
fsubs
mov
or
inc
sbb
sbb
jg
iret
pop
sbb
dec
fadds
push
movsl
cld
lods
lcall
out
mov
adc
inc
cmp
push
mov
adc
xor
sbb
xor
pop
roll
sbb
enter
push
pop
fmull
fimull
push
sahf
mov
adc
mov
cmpb
inc
fbld
into
mov
repnz
in
push
dec
inc
mov
xchg
sbb
fs
inc
dec
aad
mov
pushf
adc
mov
mov
flds
je
sbb
push
lea
and
mov
in
push
movsl
fs
pop
mov
xor
cmpsl
dec
cmpsl
mov
loop
cmpsl
in
ret
jno
mov
pop
lock
mov
sbb
xchg
imul
push
nop
dec
mov
and
push
add
inc
fcompl
mov
lea
insl
adc
push
js
mov
dec
imul
jg
mov
xchg
test
adc
adc
gs
sub
mov
xor
popa
and
insb
adc
xorl
push
push
push
inc
lahf
fsubrp
inc
push
insl
adc
ss
dec
popa
test
lock
imul
or
sbb
addr16
sub
into
lahf
dec
out
sub
pop
pop
lods
int3
sub
jle
in
cmp
sub
das
mov
adc
nop
pop
dec
xchg
adc
std
mov
cmp
test
sub
pop
leave
sahf
pop
push
and
push
dec
and
mov
jle
push
jmp
mov
loop
insb
sub
mov
sub
adc
sbb
repnz
into
aad
sbb
bound
pushf
mov
aam
adc
push
insb
imul
mov
lahf
jne
loopne
pop
ja
stos
das
xor
inc
cld
mov
push
test
adc
scas
cmp
dec
mov
and
test
jmp
mov
push
popfw
push
add
inc
popa
rcl
adc
shrb
adc
inc
pop
dec
out
rcll
inc
dec
sbb
xchg
addr16
sub
sbb
les
cwtl
mov
dec
xor
lcall
cmp
repz
xchg
movsb
roll
insl
les
fiadds
lcall
jecxz
stos
mov
cmpsb
add
sub
and
mov
enter
cwtl
or
decl
or
inc
add
xbegin
adc
push
addl
xor
rcrb
sbb
sbb
test
or
jno
sub
enter
inc
xor
xchg
popa
int3
adc
adc
dec
pop
insb
icebp
loope
bound
lock
mov
or
mov
js
loopne
cmp
lea
in
mov
cmp
jo
stc
or
enter
cld
inc
jge
mov
sbb
and
adc
cmpsb
pushf
test
icebp
adc
xor
insb
arpl
and
jo
sub
push
inc
or
push
jno
or
or
or
adc
jg
cltd
mov
and
dec
clc
mov
in
and
inc
push
mov
xchg
and
dec
rclb
or
add
xchg
pop
and
mov
and
dec
out
notl
pop
out
sbb
mov
push
js
mov
leave
loop
cli
adc
add
and
dec
pop
xchg
outsb
and
adc
and
sarl
xor
push
push
jl
js
inc
jl
or
cltd
adc
push
or
addr16
xlat
xchg
test
dec
cli
lcall
mov
push
stos
adc
cmp
and
inc
aam
ret
mov
icebp
lret
ljmp
sbb
adc
sbb
pop
add
orl
lds
push
adc
ret
push
dec
sbb
jo
imul
or
cs
cmp
int3
rorl
ret
inc
mov
cmp
js
cmp
cmp
and
sbb
cmp
cmp
sarb
cmp
sub
aam
xor
insb
loopne
loopne
mov
lahf
pop
jge
dec
loopne
nop
shl
dec
cwtl
sub
pop
loopne
nop
loop
or
and
nop
pusha
or
and
sub
test
das
fmulp
inc
inc
dec
mov
fs
mov
js
test
jmp
push
push
es
outsl
inc
fs
adc
fs
data16
mov
sub
mov
inc
sbb
lret
push
pop
inc
movsl
pushf
out
int
push
inc
inc
cmp
and
dec
stc
notl
pop
dec
sub
fs
push
jne
xor
mov
jmp
cmp
adc
stos
pop
cs
outsb
repnz
sbb
fadd
push
dec
fisttpll
adc
sub
dec
testl
rcrb
enter
aam
loope
sub
jae
or
inc
jns
inc
movsl
pop
jmp
imul
clc
scas
cmpsb
cmp
outsb
xor
rorb
fisubrs
inc
cmp
cld
js
adc
test
dec
mov
push
inc
adc
inc
jle
shrb
jb
xchg
dec
andl
dec
and
jae
push
cmp
adc
add
imul
rorl
adc
sbb
stos
dec
fmull
adc
ja
adc
lea
icebp
loope
adc
repnz
sbb
mov
or
mov
outsl
lods
hlt
cmp
or
cmp
ljmp
in
adc
rclb
and
xchg
mov
test
fsts
dec
and
dec
adc
das
es
cli
sbb
inc
js
xchg
cmp
mov
out
dec
dec
loope
push
adc
push
fwait
adc
push
rcll
lea
inc
adc
test
jmp
enter
out
xchg
ljmp
xchg
ja
push
rcrb
inc
xchg
mov
adc
inc
jmp
xor
mov
in
cmc
fsubrl
add
adc
xor
leave
sub
inc
fsts
jmp
lods
stc
mov
stc
clc
clc
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
loopne
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
xor
popf
push
sbb
cs
ss
ds
inc
lahf
dec
lahf
push
lahf
pop
lahf
mov
mov
lahf
mov
lahf
in
lahf
hlt
xchg
and
jno
mov
lret
aaa
test
add
inc
add
ds
pop
shll
jno
jns
xor
stc
xchg
stc
lods
stc
mov
sar
stc
fdivrp
in
repnz
clc
sti
cmpl
sub
jmp
pop
stc
gs
jg
xchg
nop
stc
lcall
stc
int3
stc
sar
in
sti
clc
push
cmp
daa
je
jbe
js
jp
jl
jle
sbb
cmp
mov
cwtl
daa
lret
inc
shll
xchg
cmpsl
cld
roll
adc
pop
shll
fldcw
icebp
mov
dec
push
and
xor
je
jbe
js
jp
jl
adc
mov
dec
popf
jae
jg
xchg
mov
popf
inc
sbb
pop
lahf
pop
pop
fs
push
jge
sub
iret
stos
iret
mov
fmul
loop
hlt
add
sbb
adc
mov
sar
cld
clc
cld
sbb
xor
cmp
push
cmp
cmp
sarl
xlat
aas
out
lock
inc
xor
iret
push
jl
or
ret
xor
pop
xchg
jnp
xchg
enter
sbb
aaa
cmp
arpl
jl
xchg
push
sbb
das
dec
cmp
pop
ret
popa
cmp
xchg
xlat
rorb
cmp
in
call
push
jnp
xchg
dec
movsb
mov
iret
fadds
jmp
sub
push
rorb
js
jp
jl
jle
js
jp
jl
sbb
xor
xor
aam
cmp
cmp
push
adc
sub
cmp
sahf
dec
stos
mov
ret
or
cmp
jmp
fiaddl
aas
mov
aad
sbb
cmp
inc
shll
scas
loope
jmp
jb
je
dec
mov
idiv
and
xchg
mov
ret
loopne
lock
repz
lock
push
in
es
xor
xor
cld
push
cld
jge
xchg
cld
xor
ds
push
cmp
leave
aas
sarl
fstpt
loope
out
push
or
pop
dec
sub
push
dec
push
jns
iret
repnz
sti
adc
and
cs
cmp
push
fldenv
jmp
jb
add
xor
dec
inc
and
add
inc
push
xor
cmp
cmp
ja
xchg
cmp
cmp
cmp
fdivl
inc
xchg
xchg
mov
repz
imul
inc
add
xor
sbb
xchg
sti
add
xor
xchg
in
call
rcl
icebp
lock
sbb
and
and
sub
xor
xchg
add
ret
aas
aas
ja
sahf
aas
mov
les
into
aas
aas
fidivrs
out
out
pusha
popa
es
leave
imul
flds
icebp
rclb
dec
hlt
clc
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
dec
sub
je
dec
push
in
insl
push
or
and
mov
iret
cmp
inc
dec
dec
push
iret
pop
iret
iret
push
jb
jp
or
iret
xchg
iret
lcall
iret
mov
iret
ror
fcmove
loop
ljmp
push
or
mov
iret
and
sub
pop
iret
iret
push
jb
jp
or
iret
xchg
iret
lcall
iret
mov
iret
ror
fcmove
loop
ljmp
or
in
and
sub
xor
push
inc
repnz
leave
jb
stc
stc
push
jb
jp
cmp
stc
xchg
fs
cld
stos
cld
mov
mov
mov
lahf
loop
ljmp
cmp
daa
adc
and
xor
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
in
shll
mov
mov
repz
loop
ljmp
or
adc
sbb
and
sub
xor
inc
cld
dec
lcall
push
jb
jp
cmpb
xchg
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
add
je
jbe
js
pop
sub
pop
pop
jle
inc
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
xchg
outsb
aas
mov
aas
mov
cld
lahf
ficoml
iret
cli
les
aas
ret
jl
mov
sub
xor
cmp
ret
imul
stc
cmp
stc
xchg
stc
lcall
stc
mov
stc
sar
loop
ljmp
push
inc
add
cmp
or
adc
sbb
cmp
cmp
inc
aas
dec
dec
xchg
aas
pop
aas
bound
push
jb
jp
cmpb
aas
xchg
aas
lcall
aas
mov
rcrb
ljmp
xor
daa
adc
and
jae
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
in
rcrl
shl
loop
ljmp
xor
in
call
sub
lahf
add
lahf
inc
lahf
dec
lahf
push
lahf
pop
xchg
bound
jb
jp
or
iret
xchg
iret
lcall
ret
xor
fidivrl
bnd
sbb
xor
popf
adc
sub
inc
jle
jle
jle
jle
jle
jle
jle
dec
subb
aas
lret
aas
fidivrl
loop
ljmp
xor
dec
adc
sub
movsl
cli
inc
sar
push
repz
repz
push
jb
jp
xor
repz
repz
repz
repnz
pusha
loop
ljmp
or
adc
clc
cmp
inc
cld
dec
cld
push
cld
pop
xchg
sub
push
jb
jp
sbbb
lahf
mov
lahf
mov
lahf
rclb
iret
repnz
cli
ret
add
or
and
sub
xor
loopne
stc
dec
stc
push
stc
pop
stc
stc
push
jb
jp
out
mov
xchg
cld
lcall
jle
dec
ret
ror
fcmove
loop
ljmp
aaa
or
and
sub
xor
cmp
inc
repz
repz
repz
repz
push
jb
jp
xor
repnz
leave
mov
stc
stos
stc
mov
mov
stc
shrb
sub
loop
ljmp
cmp
dec
adc
sub
cmp
inc
iret
dec
iret
push
iret
pop
iret
iret
push
jb
jp
adc
int3
xchg
mov
cwtl
call
movsb
adc
test
dec
jl
jle
jle
jle
jle
jle
pop
call
jmp
rorl
daa
adc
and
xor
cld
push
cld
pop
cld
pusha
cld
push
cld
cmp
cld
nop
cld
cwtl
cld
mov
cld
mov
cld
sar
fcoms
dec
clc
cmp
and
sbb
and
sub
cmp
inc
adc
pop
repz
repz
repz
pause
repz
repz
repnz
dec
rorb
dec
loopne
call
std
sarb
in
call
sub
xor
cmp
inc
cld
dec
cld
push
cld
pop
cld
pusha
xchg
rcrb
lahf
js
adcb
cmpsl
repz
ror
fdivr
in
clc
sti
cmpl
or
jo
adc
sbb
sbb
and
aam
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
mov
cmpb
je
jbe
dec
and
sub
add
cmp
dec
push
js
jl
or
nop
mov
cld
int3
pushf
ret
adcb
jo
jle
push
call
jl
xor
push
xor
cmp
cmp
inc
lahf
inc
lahf
pop
lahf
jl
test
nop
lahf
xchg
lahf
cwtl
lahf
pushf
lahf
mov
lahf
aam
fcoml
cmpsl
in
sub
or
dec
sub
push
lret
popa
xlat
loope
jmp
dec
stc
push
stc
push
cmp
aas
test
mov
nop
aas
xchg
aas
cwtl
aas
pushf
daa
mov
lods
out
out
loopne
in
inc
dec
lock
iret
cld
fmull
xor
or
sbb
loope
jmp
dec
stc
push
stc
push
stc
pop
stc
pop
stc
pusha
stc
jo
nop
stc
cwtl
stc
pushf
stc
mov
stc
lods
stc
mov
mov
mov
and
ret
jbe
sbb
popf
or
and
dec
ret
js
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
loopne
jb
je
jbe
js
jp
jl
jle
jle
dec
push
stmxcsr
leave
fs
insb
cmp
aas
je
js
mov
lods
aas
mov
mov
xchg
enter
shl
aam
in
jo
ss
sbb
sbb
and
sub
out
out
out
out
out
out
out
in
mov
test
mov
mov
mov
out
out
out
out
out
out
loopne
ljmp
popf
and
sub
xor
push
cmp
inc
repz
bnd
pop
pop
orb
mov
mov
nop
iret
xchg
iret
cwtl
iret
pushf
iret
mov
aam
fmul
loopne
in
call
cld
hlt
cld
clc
cld
cld
cld
adc
repz
push
dec
jecxz
repz
repz
sti
pop
rep
repz
xchg
repz
repz
repz
rep
repz
mov
repz
in
repz
repz
repz
testl
mov
xor
repz
repz
repz
test
mov
repz
repz
fpatan
loope
jmp
cld
push
or
adc
mov
dec
jo
js
jl
or
lret
mov
movsb
nop
in
xchg
test
repnz
fcoms
add
or
xor
pop
lahf
pusha
lahf
fs
push
lahf
je
les
cwtl
mov
and
icebp
mov
pusha
mov
cmp
and
inc
test
jle
jle
jle
dec
or
inc
sahf
push
pop
filds
mov
nop
mov
mov
jo
mov
mov
inc
loope
jmp
aas
push
aaa
pop
mov
popa
out
out
out
out
out
cmp
xor
or
les
or
xchg
mov
mov
lock
hlt
iret
clc
sar
xlat
cld
jecxz
out
jmp
out
cld
repz
idiv
sti
std
jo
loope
cmpsb
add
cmp
push
loope
cmp
and
ss
cmp
dec
adc
sbb
sbb
pop
cmp
push
cmp
decl
mov
nop
add
push
adc
out
movsl
xor
dec
or
xchg
mov
jmp
add
cmp
daa
jg
mov
cmpsl
enter
shl
aam
fsub
fsub
loopne
in
call
lock
dec
clc
sbbb
sti
roll
f2xm1
sbb
cmp
cmp
and
loopne
call
pop
push
jb
outsb
jnp
sub
add
cmp
dec
rcrl
cmp
inc
rorb
add
mov
push
cmpsl
inc
out
jmp
jmp
sub
andl
es
add
dec
xchg
xor
mov
pop
sub
fcoml
pop
ss
push
mov
ds
and
inc
fwait
xchg
cmp
or
je
pop
cmpb
cmp
daa
fildl
popa
or
aaa
leave
cmp
push
fnstcw
lods
jmp
icebp
out
aam
lock
in
mov
mov
dec
in
call
lahf
jp
in
call
xchg
sahf
pusha
pop
in
test
rolb
inc
add
or
inc
mov
add
call
adc
or
scas
mov
iret
fisttps
out
incb
fbld
cmpsl
cmpsl
es
cld
adc
push
ss
sub
cmp
and
xchg
fldenv
adc
push
push
mov
mov
andl
repz
repnz
add
jb
je
jbe
js
pop
pop
or
sub
xor
adc
stc
pop
adc
jbe
dec
pop
xchg
stos
and
pushf
lahf
in
out
dec
xchg
add
xor
mov
pop
stos
xchg
sbb
adc
fld
xor
cmp
pop
out
pop
pusha
sbb
cmp
add
adc
popa
sbb
push
dec
lock
dec
add
sbb
xor
jns
test
test
repnz
pop
jmp
loope
xor
cmp
cmp
and
icebp
popf
cmp
xor
and
push
cmp
gs
and
lock
sar
out
cld
add
rcrb
pop
mov
lret
xchg
in
inc
fimuls
xor
pop
dec
outsb
cmpl
xchg
inc
fimuls
aam
adc
lret
cmp
cmp
cmp
add
loopne
ret
cld
lret
cld
sarb
cmp
fsts
insb
and
scas
sahf
cwtl
adc
repz
repz
aam
sarb
loopne
call
cld
hlt
lcall
and
sub
sub
xor
xor
cmp
in
rcrl
imul
nop
xchg
out
adc
jle
lods
or
mov
hlt
pop
in
call
stc
cld
cli
or
xor
xor
sarl
adc
sbb
and
cmp
inc
in
rorl
repz
sti
pusha
repnz
or
cwtl
dec
pushf
or
test
and
das
or
int3
les
xchg
push
lahf
in
xchg
lock
xchg
xchg
xor
les
sbb
jle
jle
dec
pop
bndldx
leave
jo
movsb
jl
and
out
in
mov
mov
sub
jle
jle
sbb
xor
popf
adc
inc
cmp
inc
cld
dec
xchg
pop
adc
out
in
mov
mov
pop
mov
test
mov
fcoml
rdpmc
sbb
and
sub
imul
iret
fwait
lret
test
cmp
mov
je
add
push
xor
mov
sbb
xor
mov
in
and
push
sar
lds
cmpsl
dec
pcmpeqw
iret
cltd
iret
sahf
iret
test
mov
loopne
xor
cmp
pop
and
icebp
xor
cmp
inc
stc
dec
stc
dec
stc
pop
or
cld
jne
pop
push
test
mov
inc
cmpsb
mov
mov
sbbl
jecxz
scas
mov
and
mov
xchg
pop
pop
xor
out
out
out
out
out
xlat
negl
push
ds
sub
inc
xor
scas
lahf
add
inc
xorb
or
push
mov
mov
push
test
pop
test
mov
mov
add
mov
inc
mov
sbb
mov
mov
push
je
mov
sarb
and
aam
mov
inc
mov
clc
call
and
sub
cmp
scas
push
cmp
mov
push
inc
jle
pop
push
lock
stc
mov
stc
lods
stc
mov
hlt
in
cltd
in
xor
push
xor
repz
repnz
or
test
into
mov
test
fcompl
mov
xchg
inc
mov
or
mov
pusha
or
cltd
test
sahf
aas
mov
mov
enter
aam
fadds
add
cmp
test
int
cmc
xchg
add
mov
mov
jmp
jmp
mov
xor
leave
inc
je
insl
mov
add
js
jp
dec
popf
or
ret
loopne
jmp
push
lock
and
test
test
xchg
bound
dec
ret
adc
jl
add
cmp
jno
mov
sub
inc
shrl
loope
jmp
hlt
xchg
and
add
out
and
adc
dec
mov
jnp
jge
jg
jl
jle
jle
jle
jle
pop
jmp
out
out
out
dec
xorl
adc
sbb
xor
dec
scas
filds
push
xor
xchg
jae
loop
loope
jmp
ljmp
fwait
cld
lahf
cld
mov
xchg
scas
lock
mov
out
in
shl
xchg
das
push
push
lahf
iret
mov
scas
leave
mov
bound
jle
jle
jle
jle
jle
jle
dec
xlat
ret
insb
fcomip
jecxz
out
pop
aaa
mov
js
cwtl
cmp
xchg
xchg
and
sub
xor
xor
cmp
inc
out
out
out
loope
cmp
leave
sbb
loope
jmp
shll
jle
dec
testb
push
loopne
pop
in
push
lcall
mov
loopne
jnp
xchg
in
xor
xor
aaa
pushf
lcall
mov
dec
xchg
push
ret
or
pop
repz
addr16
repz
ja
jnp
jg
xor
repnz
sbb
lock
push
xor
je
jbe
js
jp
dec
outsl
subl
jnp
jb
and
mov
xchg
jl
lahf
aas
mov
add
pop
xor
xor
dec
and
fidivl
push
mov
es
test
lods
sub
sub
sub
pop
cs
dec
ret
push
xor
pop
mov
xchg
xchg
jns
mov
or
cld
cmc
std
insb
mov
dec
lock
sub
or
adc
sbb
sbb
mov
push
lret
insl
popa
test
cmp
sub
dec
es
mov
add
push
pop
dec
rdmsr
push
iret
pop
iret
pop
iret
pusha
iret
fs
push
je
inc
xchg
iret
icebp
ret
or
mov
ret
sbb
repz
sub
repnz
shl
inc
repz
repz
repz
repz
repz
repz
repz
repz
lock
xchg
test
mov
das
or
out
js
dec
test
pop
loop
push
lock
xchg
test
push
mov
cs
icebp
sub
cwtl
xchg
and
inc
dec
pop
and
ljmp
mull
inc
mov
out
cli
adc
adcl
mov
ret
jnp
jg
xor
repnz
jle
dec
xchg
push
lahf
iret
mov
and
mov
cwtl
mov
sbb
xchg
adc
xor
xchg
xor
ds
sub
inc
mov
cld
dec
cld
push
mov
insb
add
repnz
dec
cmp
mov
or
loope
sbb
stc
sub
mov
add
push
dec
ret
fcomps
leave
jl
nop
cli
stc
pop
and
push
mov
es
das
add
js
addl
jl
cltd
shll
mov
lock
loope
in
jmp
icebp
iret
cmc
iret
stc
leave
std
loope
add
fsts
cmp
sbb
sbb
fcompl
adc
sti
xchg
in
mov
sub
icebp
test
mov
inc
xchg
iret
xchg
iret
cltd
iret
popf
iret
mov
iret
lods
iret
mov
mov
mov
jb
pop
adc
fs
sahf
mov
into
lahf
in
and
and
ret
lret
lock
push
xchg
mov
adc
add
test
mov
mov
jl
dec
mov
lods
inc
xchg
stc
shrl
leave
aas
int
shrl
aad
xchg
lods
adc
mov
xor
xchg
xchg
je
xor
sbb
mov
xchg
rclb
lods
inc
xor
push
cmp
mov
mov
jl
leave
pop
cmp
mov
lea
xchg
cld
cltd
mov
pop
mov
lahf
lods
xchg
addl
daa
out
sub
cmp
push
ss
iret
fimuls
ds
mov
xchg
add
call
jge
in
call
cmpb
cmp
fcoml
push
dec
add
lods
xor
dec
and
pop
addb
les
in
call
add
add
xor
js
jp
push
mov
imul
and
xor
mov
mov
notb
in
mov
mov
clc
sub
nop
inc
mov
xchg
push
stc
push
stc
mov
or
stc
mov
mov
shll
inc
nop
je
inc
clc
cs
mov
dec
adc
xor
mov
add
pop
mov
mov
jp
mov
nop
lahf
xor
mov
xchg
lock
mov
pushf
imul
ret
push
enter
push
fs
aam
in
in
sub
jmp
cmp
inc
dec
sbb
jb
push
outsl
cmp
add
cmp
je
adc
mov
rcll
cmp
lret
repz
repz
sti
cli
ss
jo
sub
xor
xor
xorb
ficompl
xorb
insb
leave
mov
in
xor
cmp
nop
call
idivb
sub
jmp
fdivr
fdivr
lock
adc
mov
jo
xor
jle
dec
xchg
ret
stos
lods
repnz
pop
fdivrl
xchg
cmp
test
and
call
jae
mov
icebp
add
cmp
and
mov
in
loopw
sbb
loopne
inc
pop
lods
dec
jle
push
and
repnz
fisubs
lahf
xchg
lahf
pushf
lahf
mov
xorb
or
aam
fdivr
das
ret
cmp
or
push
push
mov
stc
mov
mov
stc
stc
enter
in
pusha
jb
mov
sbb
ret
add
sub
inc
xor
cmp
and
stc
jl
bswap
test
mov
mov
aam
xchg
jle
dec
test
rcl
lahf
add
fdivr
aam
in
call
iret
cld
enter
adc
sub
xor
ret
lret
xor
shl
repz
in
hlt
push
adc
sub
and
shrb
jbe
ds
cmp
fcomps
xorl
repz
jb
insb
sbb
xchg
dec
cwtl
mov
jle
dec
cld
sbb
xchg
or
push
sub
inc
adc
shlb
or
mov
push
mov
cs
mov
mov
jae
loopne
xchg
and
add
adc
push
cmp
add
xchg
add
hlt
aas
sarb
pop
call
add
fcomp
cmp
and
cmp
mov
pop
dec
enter
loopne
fs
jo
out
lret
inc
push
scas
and
aas
les
enter
jo
inc
or
push
mov
push
sub
inc
mov
pusha
mov
pop
js
fdivrl
sub
dec
sub
cmpl
sbb
and
and
cwtl
sub
xor
es
push
cs
xchg
xchg
mov
push
mov
lcall
inc
int3
clc
lahf
mov
or
pushf
adc
sahf
pop
sbb
cs
xchg
sub
movsb
xor
cmpsb
cmp
push
int3
sahf
jl
mov
mov
repz
in
jmp
repnz
cmp
and
sub
inc
pusha
lahf
xchg
insb
in
test
aas
js
jl
cmpb
aas
mov
mov
xchg
lock
pushf
lahf
mov
mov
call
lock
clc
aas
cs
and
jnp
loopne
fsub
push
add
push
loopne
push
mov
jo
mov
je
stc
dec
stc
dec
stc
push
dec
mov
test
aas
mov
mov
mov
lock
dec
sahf
xor
dec
pusha
in
clc
and
insb
daa
jo
cmp
bound
jmp
sahf
mov
jo
jle
pop
shlb
fsubs
add
pushf
push
cmp
dec
and
pop
repz
bnd
cmp
aas
js
jl
mov
mov
ljmp
orb
jo
outsb
adc
pop
sbb
inc
inc
sub
sub
xor
xor
push
ds
jb
adc
xchg
loope
cmp
jle
jb
lock
push
xchg
pop
push
dec
and
clc
inc
dec
mov
pushf
aas
mov
pop
xchg
mov
pop
aas
fsubs
fadd
clc
int
les
outsb
aas
push
daa
pusha
in
mov
dec
mov
jo
hlt
cld
clc
mov
add
es
gs
pop
inc
cld
push
xchg
xchg
jo
outsb
pop
pop
xchg
ret
fidivs
adc
cmp
cmpb
int3
ret
inc
aam
fsubr
jb
cmp
xor
lods
cs
or
or
test
sbb
or
and
push
sub
or
cltd
ss
stc
jo
cmp
jl
popa
xchg
aas
movsl
leave
mov
xchg
and
lock
jo
xor
dec
mov
popf
das
xor
dec
or
xor
or
xchg
dec
sub
dec
pop
enter
sub
rolw
xchg
lahf
aad
loop
testl
pmaxub
jle
jle
dec
xlat
ret
mov
repnz
mov
inc
fcomps
dec
bound
jns
xchg
movsl
dec
push
mov
mov
rolb
xchg
cmp
scas
adc
sbb
ljmp
adc
dec
test
mov
sahf
push
xchg
repz
lock
mov
pop
dec
rorl
or
or
push
daa
and
mov
out
pusha
xchg
jbe
ret
subb
je
adc
xchg
jno
push
push
int
dec
leave
adc
mov
xor
add
in
out
push
cmp
pop
cmp
fdivrl
addr16
pop
jb
fs
test
and
ljmp
daa
movb
mov
dec
loope
mov
mov
xchg
push
mov
test
lods
pop
pop
cmp
pop
mov
and
leave
mov
aad
daa
pop
add
adcl
inc
mov
add
outsb
xchg
xchg
dec
loop
or
into
mov
or
dec
cmp
ror
pop
cmp
in
out
and
scas
testb
sbb
daa
aam
addl
int3
iret
mov
adcb
and
xor
shrl
les
inc
dec
xchg
inc
clc
add
mov
mov
adc
test
and
outsb
cmovle
add
push
jle
sbb
push
mov
push
or
jmp
imul
push
xchg
inc
push
jae
inc
fdivs
xchg
sbb
xor
lock
lock
in
pop
or
loop
mov
cmp
cmp
inc
cld
dec
mov
hlt
and
mov
sub
sbb
popf
xchg
and
pop
push
loopne
jno
lods
pop
cwtl
subl
dec
push
mov
stos
cmp
sub
imul
adc
insb
jns
dec
test
xchg
cld
in
mov
dec
loopne
lcall
cmp
stos
or
cmc
sub
dec
shll
adc
out
xchg
xor
push
sbb
out
xchg
inc
scas
push
jbe
add
xor
cld
mov
test
leave
push
pop
cmp
orl
xchg
dec
mov
xor
mov
lcall
dec
daa
dec
mov
outsb
cmp
rorl
ret
xchg
out
jmp
lcall
dec
mov
adcl
lods
js
lock
xchg
call
orb
inc
lock
jle
cltd
test
sub
and
push
lcall
call
push
clc
cmpb
cmp
or
cmpsb
loope
or
cmp
es
cmpsb
orb
cmp
jecxz
pop
xor
out
in
xchg
fdivrp
repz
add
pop
in
call
pop
hlt
sbb
pop
cld
and
daa
cld
sub
es
loopne
mov
sahf
loope
and
stos
call
jnp
stc
rcll
push
mov
out
and
mov
mov
ret
out
push
pop
sbb
in
lock
jbe
dec
adc
aam
push
add
es
or
cs
sub
ss
imul
sbb
xor
loop
pop
xor
xorb
xchg
add
cmp
ds
push
imul
jmp
mov
jbe
or
adc
and
adc
and
mov
xor
xor
dec
jb
push
loop
pop
mov
js
ljmp
insb
xor
cmpl
and
stos
cmp
sbb
jb
pop
mov
insb
les
dec
sbb
ja
sub
in
jbe
sub
je
dec
ss
pushf
dec
nop
inc
sub
mov
push
scas
push
movsb
sete
data16
cld
outsb
in
lods
adc
add
ds
flds
mov
push
test
stos
adc
ret
js
sbb
xor
dec
loopne
lock
xchg
xchg
push
or
in
cmp
push
clc
mov
lock
mov
dec
add
jb
das
pminsw
pop
rcl
stc
mov
push
xchg
push
subb
roll
inc
pop
mov
cmp
dec
adc
mov
mov
aas
jecxz
in
clc
sub
add
sub
pop
jle
jle
dec
jle
mov
add
pop
aas
lahf
das
and
add
sbb
jp
push
ret
xor
lock
mov
loop
jmp
xor
ds
push
aaa
lds
ret
add
mov
sahf
mov
adc
cmp
imul
fdivrp
stc
xor
mov
sub
lock
mov
mov
je
icebp
aam
shlb
jo
pop
inc
ret
aam
mov
jmp
mov
sarb
push
or
pop
dec
and
lcall
cmp
in
in
cmpsb
and
scas
xchg
mov
movsb
push
repz
fadds
jbe
dec
inc
mov
mov
push
invd
insb
iret
jo
je
mov
test
push
pop
mov
aas
enter
adc
cmp
sub
lret
or
je
xor
pushf
mov
les
psrld
iret
fmul
fmul
loopne
sub
xchg
lahf
sub
cmpsl
xor
mov
fidivl
and
or
rorl
sub
xchg
or
cli
adc
orb
mov
stos
jle
jle
jle
dec
movsb
mov
leave
mov
cwtl
rcl
stc
hlt
stc
cld
sti
xorl
or
adc
adc
cs
inc
insb
orb
xchg
sbb
pop
leave
les
icebp
in
cmpsl
mov
rcl
xchg
gs
mov
or
cld
lods
mov
push
mov
xchg
stc
or
sub
inc
cwtl
out
in
mov
mov
mov
dec
out
leave
adc
and
inc
sub
push
je
js
inc
sub
in
mov
cwtl
les
jle
dec
int3
mov
dec
xor
push
mov
ds
aas
pop
aas
outsl
aas
jae
ja
jnp
jg
orl
lcall
mov
call
das
loope
inc
shll
loopne
mov
je
mov
call
xor
jle
aam
xchg
xchg
jle
adc
das
push
mov
fsubp
stos
das
cmp
loope
repnz
sub
daa
pop
out
push
ret
lret
add
pop
pusha
or
jb
clc
cmp
and
mov
sbbl
xchg
dec
or
push
aaa
mov
or
test
and
or
cmc
add
call
and
jb
pop
adc
adc
and
insb
fisubrs
or
add
dec
pop
dec
adc
inc
adc
push
adc
gs
shr
movsb
pop
push
adc
mov
or
enter
fs
clc
movsl
clc
xor
mov
lds
in
mov
inc
pushf
imul
stc
push
push
xchg
mov
pusha
lret
mov
fnstcw
mov
fdivrs
dec
push
mov
lret
pusha
loope
cwtl
das
lods
pop
or
dec
xchg
insb
test
inc
les
mov
sbb
clc
into
maskmovq
notl
dec
lock
hlt
leave
clc
les
xor
cmp
mov
sarb
push
fcoms
push
loop
in
add
push
and
jl
xchg
hlt
mov
mov
iret
xchg
pop
in
icebp
stos
add
add
pop
sbbb
cld
imul
dec
mov
fcom
jle
jle
jle
jle
sbb
xor
popf
jle
mov
sub
idivb
ret
push
adc
cmp
dec
jp
cmpsb
bound
pop
jns
mov
repnz
push
testb
lock
adc
in
stos
or
adc
rcl
bound
out
je
xchg
test
loopne
xor
cmpsb
add
pop
popa
loopne
jp
xchg
xchg
in
clc
mov
shlb
aam
mov
xchg
push
sub
sub
pop
jo
jle
jle
dec
mov
cmpsb
mov
inc
dec
iret
stc
out
clc
add
jb
dec
push
test
or
push
or
jno
and
lret
cmpsl
rorl
sarb
xchg
pop
fsubl
gs
call
xchg
pop
ret
jmp
mov
pop
in
clc
stc
fadds
addl
ss
into
push
aas
ret
fcompl
loope
sar
fildll
or
push
ret
js
dec
dec
loopne
outsl
sahf
cld
es
xchg
in
push
aas
test
sarl
mov
daa
popw
daa
daa
inc
cmp
insl
clc
add
add
ds
mov
dec
fnstsw
and
das
ds
popa
push
cmp
inc
jl
ds
and
ds
xchg
lret
mov
xlat
lock
idiv
push
lcall
icebp
movsb
add
adc
lcall
sub
in
shrl
add
hlt
pop
clc
and
aas
cli
cmp
cwtl
addr16
xchg
lods
push
cmpsl
loopne
sarb
out
mov
xor
mov
mov
and
rolb
pop
pop
call
xor
loope
call
jl
sbb
mov
test
fdivr
cld
or
shrl
cmp
sub
jnp
je
fcom
dec
mov
stos
pop
lret
xchg
fprem
or
or
cld
and
inc
adc
mov
repnz
xchg
jle
pop
mov
xchg
aas
aam
loope
out
xor
dec
loope
xchg
add
pop
sahf
push
pop
outsl
xchg
jge
and
xchg
daa
sahf
test
in
cmpsb
aas
int
in
test
or
xor
push
in
or
outsl
daa
jbe
cwtl
xchg
push
clc
movsl
imul
cld
or
cmp
inc
hlt
dec
pushf
out
imul
or
out
out
in
scas
push
mov
es
jmp
jne
movsb
aas
xchg
movsb
pop
pop
ljmp
fcom
pop
es
jo
jl
dec
jl
mov
jne
push
push
add
xchg
xchg
lea
pop
inc
dec
leave
lock
cld
std
cld
adc
pop
iret
gs
jb
push
inc
xchg
in
scas
pcmpeqb
pop
pop
dec
add
pop
gs
pop
inc
pop
insb
cvtps2pd
rcl
jle
dec
fcompl
adc
test
mov
cld
gs
xchg
cwtl
out
in
lret
pop
das
in
loope
pop
jg
push
ss
jmp
push
mov
dec
add
into
cmp
das
stc
pop
cmp
add
add
add
mov
mov
xchg
fcom
dec
sahf
loopne
dec
xchg
pop
push
add
mov
scas
iret
ror
ficomps
pop
incl
sub
call
xchg
test
mov
xlat
repnz
jmp
or
clc
lcall
icebp
aas
clc
or
ss
pop
lock
adc
sub
mov
xor
pusha
test
mov
add
div
fcoml
in
call
jnp
stos
pop
cli
lahf
jb
jns
xchg
das
mov
jmp
test
lods
inc
sub
cli
jl
dec
push
addl
bnd
fcoms
mov
mov
push
out
loopne
pop
cwtl
imul
or
in
fisubrl
sub
push
ret
sub
jle
dec
fcmovnb
jmp
push
mov
inc
fldl
xchg
xchg
xchg
repnz
pop
lret
in
out
push
or
push
dec
and
ret
filds
jg
add
lcall
loope
movlhps
lret
pop
loope
and
ss
cmp
jb
xchg
scas
bsf
leave
and
push
fimuls
dec
sbb
aam
loope
push
mov
pop
push
xchg
jle
dec
sahf
mov
cld
sarl
subl
adc
mov
inc
jl
jne
push
test
loopne
test
xchg
lret
mov
fbstp
clc
in
mov
sub
and
loop
orl
rcll
mov
pop
sub
aaa
sbb
aas
xorb
lock
repnz
mov
fisubs
cmp
pop
and
push
test
xchg
xchg
in
xchg
dec
xor
sti
xchg
repz
leave
repnz
pop
and
out
ret
fcom
je
pop
sub
pop
push
cld
jle
dec
scas
add
fdivs
push
and
mov
pop
mov
js
dec
aas
ret
jle
pop
xchg
repnz
rcrb
dec
and
rclb
mov
push
addl
dec
xchg
or
cmpsb
rclb
sub
jle
jle
jle
dec
or
loopne
mov
leave
xor
pop
in
dec
jg
mov
mov
repnz
sub
aam
add
mov
xor
loope
lahf
stc
scas
cmp
sub
out
insb
add
je
dec
and
pop
and
stc
xchg
sub
mov
loop
popa
push
dec
sbb
xchg
pop
mov
dec
adcb
daa
mov
inc
in
loopne
out
pop
xchg
test
daa
mov
lahf
pop
pop
popa
xchg
outsl
adc
jo
jle
pop
stos
ret
push
pop
cmp
out
in
lods
xchg
dec
dec
add
test
xchg
and
stc
subl
adcb
xlat
test
es
xchg
xor
and
lods
pop
and
icebp
pop
sub
dec
outsl
pop
add
mov
cmp
aad
push
jmp
and
es
mov
addr16
mov
and
sar
popf
xorb
loopne
inc
dec
inc
dec
sbb
test
pop
in
in
es
lahf
xchg
lahf
cltd
xchg
cmpsl
mov
lret
adc
lock
test
mov
lods
and
adc
outsb
jg
mov
mov
add
aaa
setb
push
mov
push
inc
xchg
dec
loopne
mov
xchg
or
mov
dec
loopne
inc
je
loope
jmp
hlt
aam
adc
mov
test
jg
push
pop
movsb
sub
out
psrad
dec
mov
pop
int
rclb
or
inc
mov
xor
push
ret
int3
pop
cltd
ret
mov
repnz
cld
lret
addps
sub
loopne
dec
hlt
push
mov
jle
test
lock
aam
out
addb
add
jl
shll
and
imul
pop
test
dec
lods
lret
mov
in
mov
leave
push
xchg
push
lahf
test
mov
xlat
sarb
push
andl
mov
pop
outsl
push
jle
inc
jle
stc
scas
stc
mov
lret
sub
insb
mov
or
inc
clc
outsb
arpl
xchg
leave
mov
fcompl
or
jo
inc
add
xor
rcrl
inc
cmp
add
bound
pushf
mov
ret
fmuls
mov
negl
jb
dec
sbb
inc
adc
data16
insl
xchg
xchg
out
insb
adc
mov
jmp
cmc
in
pop
setp
jl,pt
dec
push
ret
pop
fcoms
xchg
dec
xchg
mov
ret
aam
adc
lods
mov
cld
lret
or
and
sbb
inc
pop
mov
mov
push
movsl
in
cs
loope
fidivrl
cmc
and
push
mov
icebp
sub
dec
cvtps2pi
jb
call
xor
dec
add
or
xchg
pop
loop
jo
pop
mov
mov
stos
bswap
into
lret
fstpt
pop
lock
cld
cmp
das
xor
dec
and
pop
cld
imul
mov
mov
cmp
decb
loopne
and
or
push
push
adc
dec
jae
add
testl
aas
cmc
dec
hlt
fcomps
pop
aas
ret
jge
cmp
rolb
mov
out
out
out
out
xor
dec
cld
push
cld
pop
loope
sub
popf
test
push
aas
xchg
aas
sahf
sub
int
jl
repnz
clc
outsb
pop
add
cmp
daa
inc
shll
stc
jge
mov
movsl
xchg
in
lock
xchg
push
orb
test
xor
mov
xor
inc
xchg
add
aas
jo
jge
push
xchg
in
mov
mov
add
out
sahf
add
mov
sub
pop
push
and
bnd
aam
mov
mov
pop
icebp
xchg
mov
sub
call
fiaddl
add
out
in
in
je
leave
inc
cwtl
sahf
pushf
test
ret
add
das
ret
rcrb
mov
ret
enter
loopne
inc
dec
xor
rolb
rcrb
inc
bound
das
mov
ds
aas
in
jmp
pushf
push
xchg
sub
je
icebp
gs
jae
subb
mov
pop
ret
dec
add
lret
add
cmp
sub
add
lret
gs
pop
pop
jp
xchg
daa
aaa
jmp
xor
or
sbb
xor
pop
cmp
pop
es
out
in
ljmp
shl
lock
fs
and
das
lock
cli
gs
pusha
insl
in
xchg
or
nop
adc
stos
pop
int3
xchg
fchs
xchg
mov
pushf
or
js
dec
push
xorb
xchg
jge
mov
pop
mov
cmc
lahf
xchg
push
xor
mov
jp
mov
sbb
mov
out
push
cmp
in
mov
dec
das
ret
leave
ficompl
imul
call
adc
test
push
enter
fidivl
or
mov
push
ret
aad
sub
lret
dec
ffreep
lods
stc
leave
fimull
leave
sbb
jb
mov
outsl
pop
jle
stos
xchg
leave
mov
mov
xor
out
repz
sub
add
pop
xchg
daa
aam
push
inc
pop
push
subl
push
lahf
mov
cld
adc
cmp
ret
leave
fsubl
or
andl
test
aas
mov
xlat
pop
cmp
pop
push
push
lods
sbb
aas
cld
shrb
lahf
outsb
xchg
jnp
lods
cld
scas
xchg
adc
fdivrp
call
add
add
pop
cld
mov
fcompl
je
cld
xchg
sarb
fisubl
out
cld
push
sub
fcompl
mov
pop
mov
push
jg
out
les
add
or
inc
add
sbb
add
push
jo
pop
jo
mov
sarb
fcomi
call
push
sbb
inc
popf
push
pop
pop
mov
mov
cmp
inc
call
push
cmp
inc
mov
dec
mov
jge
inc
fcoms
ds
mov
scas
call
shlb
fisubs
adc
int3
pop
inc
cmpb
pop
xchg
cmpb
das
int
push
pop
loope
sar
jmp
push
dec
inc
or
push
push
fisubrl
jle
xchg
cltd
mov
pop
enter
es
push
das
loope
sub
cs
jle
test
lods
rolb
cs
hlt
and
popf
daa
nop
cs
push
enter
lock
lods
lcall
jmp
push
popf
cs
xor
adc
xlat
in
xor
aas
or
jl
lcall
scas
and
test
subb
sub
dec
arpl
in
xor
aas
adcb
cmp
clc
data16
inc
xchg
and
in
or
adc
test
xor
insl
sbb
movsl
sub
rorb
testl
inc
xchg
ret
imul
cld
out
xchg
inc
sbb
dec
insb
sub
mov
adc
pop
sub
lock
xchg
loope
jle
or
mov
mov
clc
mov
push
jo
dec
and
repnz
jo
jle
jle
dec
les
push
fcoms
or
ret
out
xor
inc
rcrb
loopne
aas
cmpsl
popf
pop
ljmp
pop
cmp
jb
add
ljmp
xchg
repnz
xor
in
nop
in
shlb
bound
je
mov
lds
pop
jp
inc
jmp
cmp
lcall
shrl
in
mov
jp
mov
fsubrl
xor
dec
testl
aaa
cltd
int3
cmpb
push
xchg
add
sub
das
ja
push
mov
lahf
inc
cmp
or
add
inc
inc
das
xor
inc
lods
ret
jle
mov
ret
cld
cs
mov
jp
add
ss
leave
jns
in
cmpsl
rorl
xlat
jle
rcr
je
pop
test
in
loop
leave
enter
or
cmpsl
cwtl
mov
ret
mov
push
pop
popf
mov
jl
cmp
jg
fmulp
aam
pop
filds
jg
fimuls
cmp
push
inc
mov
fadds
clc
xorb
ds
cld
mov
add
mov
jp
mov
and
and
dec
mov
lods
jo
shl
pusha
dec
inc
lock
call
or
pop
dec
dec
cmp
sbb
pop
cmp
cmp
xor
pop
add
cmp
in
mov
push
jp
fisubs
dec
ror
es
clc
movsb
js
add
sub
and
idivb
loope
ja
jnp
fs
xor
cld
into
into
sub
push
adcb
inc
inc
shrb
enter
inc
or
es
adc
cmp
adc
fs
std
fsts
or
out
push
in
pop
lock
inc
cmp
dec
cld
ss
call
pop
dec
ja
mov
dec
dec
cmpsb
int3
and
pop
add
mov
sbb
mov
xor
outsl
ss
mov
scas
es
aad
or
aad
mov
loop
sub
fptan
sub
test
mov
pop
test
out
ljmp
aas
mov
nop
push
ss
cmp
mov
sbb
pop
mov
mov
shrl
mov
jecxz,pt
or
mov
lds
je
jae
mov
es
aaa
shrb
mov
or
adc
adc
fcompl
push
or
dec
daa
clc
aas
jl
xchg
or
cltd
xchg
popf
addb
loopne
xor
cmpsl
inc
call
cmp
inc
test
popa
ds
ds
pavgw
loope
add
or
sub
pop
popa
hlt
je
andl
hlt
mov
in
ret
les
loopne
or
cmpsl
call
inc
and
mov
stos
mov
scas
pop
adc
setb
int3
icebp
jno
xchg
in
lds
decb
or
lods
xchg
call
hlt
movsl
stos
cmp
negb
and
hlt
mov
xor
stos
xchg
rolb
adc
or
mov
sbb
dec
lock
adc
imul
pop
test
push
iret
movsb
jmp
and
mov
mov
jp
ficoms
in
popf
adc
dec
jmp
or
xchg
pop
lahf
lahf
xchg
sar
movsb
aas
repnz
mull
dec
dec
jecxz
jecxz
repnz
and
pop
add
jo
jl
push
cmp
or
push
mov
leave
mov
jo
je
dec
mov
test
hlt
sub
lods
lahf
cli
xchg
add
mov
ret
jne
dec
inc
in
cli
mov
sahf
and
aad
sbb
xchg
shlb
cmp
clc
out
add
pop
test
rcrl
int
insb
aad
les
frstor
loope
jb
out
sub
icebp
jle
dec
stc
movsb
mov
push
jae
jns
in
jp
inc
popf
lods
sahf
je
lds
out
sti
outsl
sbbl
xchg
adc
adcb
orl
push
repnz
adc
into
cmp
xchg
dec
adc
pushf
add
clc
ljmp
stos
add
or
adc
ret
push
xor
add
lock
popa
cmp
cmpsl
shl
sub
cmp
bound
sbb
jae
cmpsb
and
xlat
into
sti
jno
and
and
sbb
popf
mov
lds
cmp
leave
test
or
push
mov
hlt
cld
add
or
fsub
adc
mulb
push
adc
push
push
dec
add
stc
xlat
cmp
and
mov
push
fwait
loopne
xchg
rclb
ficoms
pop
iret
call
dec
rol
loopne
adc
jns
cmp
mov
cs
fidivrl
lods
sti
js
shlb
mov
mov
sub
xchg
pop
xchg
out
inc
xor
shll
mov
scas
ja
sub
xchg
inc
cmpsl
repnz
add
scas
sub
lock
or
pop
jp
and
subb
bound
dec
pop
loopne
fs
inc
out
jbe
into
aas
mov
pop
mov
outsb
dec
out
cld
imul
aaa
movsl
xor
cli
or
inc
push
jle
and
jle
insb
test
mov
push
out
je
rolb
dec
or
push
push
pop
aam
or
movsl
fdivrs
ficompl
jl
cld
adc
cmp
or
push
ret
les
jb
adc
mov
inc
push
xor
movsb
outsb
pop
mov
es
es
or
jg
push
cmpsb
pop
xor
sbb
or
dec
mov
fcomp
jl
add
adc
jle
hlt
or
add
push
mov
add
fidivrs
mov
scas
jle
adc
aam
adc
inc
je
ds
adc
leave
adc
pop
push
or
add
xchg
mov
dec
jbe
dec
ds
xor
shll
outsb
movups
shll
pop
f2xm1
fidivrs
xor
dec
movsb
jp
xchg
lock
je
jbe
pop
adc
mov
orb
cmp
stos
add
mov
jae
dec
and
cmp
or
or
dec
push
loopne
inc
call
dec
test
daa
fs
movsb
jg
dec
mov
in
in
cmpsl
mov
loopne
pop
fdivrl
mov
cmp
cmpsb
cmpsl
cmp
out
in
test
cmp
and
rcrb
cmpsb
divl
jns
adcl
ss
es
add
cmp
subl
rorb
mov
test
or
addb
mov
sub
loopne
test
cmp
rcll
das
or
xchg
and
cmp
fwait
jo
jns
jnp
adc
mov
or
or
push
lock
rolb
bound
fimuls
out
adc
mov
aas
mov
rcrb
lcall
insb
push
cmp
or
jb
je
jbe
sbb
cmp
or
xor
addl
aam
cld
lcall
sbbb
sub
in
add
sbb
ds
and
dec
mov
loop
repnz
lret
mov
or
push
je
pop
inc
xor
mov
scas
xchg
test
xor
cwtl
jg
test
cmp
dec
cmp
xchg
and
icebp
sub
or
clc
data16
pop
into
cmp
cmp
cmp
das
mov
push
in
push
mov
ljmp
clc
push
pop
sbb
arpl
sahf
cmp
es
push
push
jecxz
rolb
adc
add
loop
aas
or
push
xor
fisttpl
psubb
leave
or
cmp
or
jo
jle
dec
xchg
push
daa
mov
mov
lret
xor
ficoms
xchg
push
adc
cmp
push
jae
jle
mov
inc
xor
add
xor
jae
shl
je
lahf
fs
cwtl
data16
cmp
push
ret
add
ret
jmp
stc
ja
fmuls
inc
jo
cmp
sub
jnp
and
call
test
ror
fbld
and
js
dec
outsb
hlt
pop
orl
pop
mov
leave
lock
xchg
inc
adcb
js
out
jg
aas
sti
das
or
insb
add
ret
dec
adc
dec
in
mov
mov
in
loope
dec
aas
or
jle
int3
pop
cltd
push
and
ret
fs
repnz
test
mov
movsb
and
rcrb
aaa
daa
in
xchg
stc
cmp
adcb
cmp
mov
leave
cs
fimull
loopne
lods
lahf
test
mov
test
decb
mov
js
dec
xchg
lock
xchg
or
pop
jle
daa
push
inc
pop
addr16
fisubl
and
pop
dec
rdmsr
jnp
inc
cmp
hlt
addb
das
gs
adc
jns
jge
andl
xchg
and
mov
add
outsl
xchg
xchg
sbb
sub
xor
lret
lock
mov
add
sub
sub
je
adc
in
in
in
in
pop
cld
scas
and
push
test
dec
or
push
push
mov
and
in
mov
es
movsb
enter
sbb
int3
sbbl
repnz
inc
scas
pop
cld
loope
sub
sbb
push
cmp
inc
mov
js
pop
mov
movsb
mov
pushf
add
mov
dec
in
push
push
nop
mov
lods
repz
repnz
in
in
test
and
lods
dec
cmp
jp
scas
cwtl
mov
pop
movsb
mov
and
xor
jns
daa
jno
stc
jl
lods
aas
movsl
and
rorl
repnz
dec
loope
aas
lret
pushf
cmpsb
push
mov
inc
decl
cld
fcompl
scas
stos
invd
into
iret
ror
lret
out
clc
lcall
push
pop
dec
ret
jle
pop
adcb
cld
ficoms
ss
cld
mov
xor
dec
sti
or
nop
cmp
push
mov
fiadds
inc
icebp
loopne
stc
cld
adc
cmp
sub
cmc
cmp
mov
movsb
push
loop
loope
or
popa
push
add
dec
or
cmp
decb
push
push
adcb
mov
mov
sub
jmp
inc
inc
test
or
scas
clc
mov
mov
dec
stc
mov
in
hlt
test
xchg
fiaddl
dec
push
cmp
insb
xchg
jp
into
nop
cld
mov
addr16
inc
lock
dec
push
daa
push
dec
xchg
push
lods
inc
sub
dec
fdiv
xchg
cld
in
call
lock
push
leave
test
scas
push
xchg
xor
push
je,pn
nop
mov
das
mov
lods
xor
popaw
cld
gs
insl
sub
out
in
scas
mov
jmp
cmpb
rolb
or
adc
ljmp
shlb
jbe
sahf
subb
sbb
ss
xchg
lock
into
jge
subl
fwait
mov
ret
add
inc
lods
mov
arpl
xchg
inc
sbb
cmp
push
enter
test
das
cmp
pop
inc
push
xchg
jmp
inc
mov
adc
and
test
xchg
sahf
incl
mov
xor
cmpsl
cmp
incl
mov
fadds
call
jo
je
adc
cmp
dec
fdivrl
dec
jle
push
dec
mov
or
push
lea
das
push
jg
shlb
inc
aaa
jle
adc
add
pop
and
mov
adc
call
push
push
mov
test
movsl
ret
push
sbb
and
in
and
loope
mov
sub
jno
jg
or
push
adc
mov
loope
and
out
in
push
ret
nop
adc
andb
inc
js
vpshuflw
mov
lock
sbb
xor
xchg
test
mov
xorl
rcrb
jle
pop
xchg
dec
xor
jne
jge
ret
jg
sub
scas
cmp
push
xchg
jne
jle
mov
cltd
out
in
mov
in
inc
out
fs
mov
daa
insb
cs
aas
dec
lret
daa
lcall
inc
mov
mov
rorb
es
clc
jnp
or
les
sub
add
scas
xor
sub
xor
in
xchg
rcrl
cmp
cmp
cmp
sub
in
xor
loopne
cld
lods
test
sub
faddl
inc
ds
xchg
xchg
leave
cmpsl
sar
push
adc
ds
dec
xchg
jle
dec
insl
and
divb
adc
pop
popf
mov
pop
mov
or
mov
pushf
mov
mov
mov
inc
inc
dec
jp
push
mov
lods
dec
int
inc
inc
push
add
pxor
mov
cwtl
dec
and
fs
jl
pusha
push
xlat
xor
jnp
pusha
jbe
adc
fs
lahf
xchg
dec
nop
and
or
or
dec
push
inc
mov
in
mov
mov
mov
movsl
enter
fmuls
sahf
xor
xlat
test
lods
lret
and
int
dec
mov
mov
dec
cmp
dec
das
rorl
subb
mov
mov
loope
or
pop
mov
cmp
mov
test
mov
inc
cmp
jae
jge
xchg
inc
fwait
in
rcrl
iret
repnz
push
loop
mov
inc
push
push
xchg
arpl
hlt
jle
dec
sahf
mulb
stc
lret
pop
push
call
call
movsl
pop
inc
rolb
push
mov
mov
subb
and
push
adc
push
push
push
pop
mov
test
add
adc
mov
inc
repz
adc
in
add
add
or
jmp
aaa
jno
push
fs
mov
imul
in
mov
scas
push
jbe
mov
ret
ret
xlat
xchg
out
and
xor
pop
mov
push
ds
sub
pop
mov
push
addl
xchg
filds
cmp
mov
sbbb
cmp
lcall
inc
lahf
jl
adc
les
popa
pop
inc
dec
mov
es
je
push
out
repz
je
adc
test
and
call
jp
sahf
pop
test
ljmp
xorl
xor
or
es
push
ret
push
arpl
outsb
jbe
pop
adcl
xchg
jle
dec
ret
xor
shrl
inc
jle
outsl
ret
clc
jb
dec
adc
and
adc
andb
push
add
pop
lock
mov
or
shl
ljmp
xchg
sbb
push
inc
inc
mov
lock
ret
jge
clc
xchg
lea
or
test
xor
and
call
stc
std
ds
mov
sbb
daa
sub
xor
dec
mov
pop
inc
into
insl
stc
je
aas
mov
xchg
outsb
orb
loop
sbb
clc
daa
sub
jl
pop
inc
ret
cld
push
repz
repz
lods
pop
test
mov
jle
jle
dec
fsubp
pop
das
cmc
bound
fs
dec
sbb
hlt
sub
or
dec
cmpsl
fsubs
outsb
xchg
movsb
xor
repz
repnz
rolb
jle
dec
mov
insb
daa
int
push
in
cmp
sub
je
adc
cli
and
jo
xor
cmp
pop
dec
inc
aas
pop
aas
push
outsl
xchg
and
std
jp
mov
in
lahf
fildl
cli
sub
push
or
jo
jp
jl
sbb
cmp
popf
sbb
scas
push
pop
add
aas
mov
in
xchg
scas
ret
lret
adc
pop
xchg
pop
sub
jbe
dec
mov
pop
jbe
daa
mov
dec
pushf
call
pop
push
aas
lea
shlb
push
mov
movsl
adcb
aas
push
xchg
sbb
mov
inc
mov
sahf
sub
xor
mov
popf
push
and
push
out
daa
je
push
mov
bnd
cwtl
je
and
inc
push
xor
js
jbe
js
jp
adc
xor
test
das
xchg
roll
and
or
pop
adc
mov
fstps
cmp
js
jp
jl
pop
mov
mov
out
mov
clc
out
dec
ss
lcall
subb
push
je
mov
lahf
loopne
cmc
cmpsl
mov
push
xchg
les
and
jns
daa
bound
push
dec
jg
mov
add
sbbl
adc
sub
xchg
lahf
push
xchg
mov
mov
hlt
ret
mov
stos
hlt
in
cs
or
in
sbb
or
push
adc
jle
jle
adc
lock
pop
ficoml
dec
test
sub
ret
mov
jp
insb
adc
mov
inc
lahf
popa
xchg
mov
or
sbbb
mov
push
gs
call
dec
sub
lock
pop
das
addb
lret
rcrb
cld
jmp
or
jbe
xchg
xchg
ret
xor
hlt
or
cmp
cmc
xchg
pop
pop
jl
sub
test
jo
lret
les
inc
out
cld
or
rcll
data16
add
xor
cmpsb
cmp
mov
orb
push
fs
pop
xchg
mov
clc
call
stos
jg
pop
cmpsl
fs
pop
jbe
inc
jns
jp
cld
mov
loopne
loope
jmp
adc
cmp
push
dec
push
push
ret
sbb
jns
loop
lods
fwait
in
cmp
adc
sbb
fimull
xchg
inc
dec
in
jns
pop
movsb
xchg
mov
ret
ljmp
pop
cmc
scas
insb
cli
clc
mov
inc
adc
xor
xchg
imul
shlb
xor
cld
sarb
mov
cwtl
inc
jo
cmp
lock
push
popf
popa
mov
jle
adc
in
clc
push
loope
mov
push
into
int
leave
rcr
xor
xchg
inc
mov
inc
std
adc
scas
pop
out
push
mov
pusha
scas
mov
fs
xchg
and
daa
mov
mov
loopne
call
clc
pop
insb
adc
test
out
shlb
jmp
loop
leave
push
inc
in
pusha
sub
call
sbbb
jle
inc
out
test
mov
iret
fadd
roll
cmp
js
or
jo
adc
sbb
sbb
and
or
cld
sub
addr16
icebp
mov
nop
sub
mov
inc
xchg
mov
jle
dec
inc
mov
mov
cmp
out
sarb
lock
sbb
add
cli
daa
add
sub
stc
pop
aas
add
add
cli
dec
jo,pn
dec
push
sbbl
repnz
int
or
inc
aad
stc
js
mov
pushf
cs
lods
sub
std
js
aas
mov
mov
nop
xchg
jg
xchg
sahf
lret
mov
scas
cmp
xchg
mov
mov
mov
fs
leave
pusha
das
ret
outsb
pop
xchg
daa
jbe
inc
push
movsb
data16
fdivrs
mov
in
je
repz
testl
dec
and
mov
outsb
mov
lods
jge
ret
push
add
aas
fisttps
and
push
xchg
js
cmp
or
dec
lock
xchg
loopne
mov
push
fnsetpm(287
jecxz
outsb
cmp
inc
xchg
push
into
mov
fdivr
adc
pop
pop
dec
js
pop
mov
hlt
xchg
jle
xor
jne
lcall
ret
jbe
ds
or
inc
fcomps
js
jns
dec
push
mov
sub
cmp
inc
pop
loop
xchg
or
push
cmc
enter
dec
mov
into
or
xchg
jne
and
movb
xchg
xlat
cmc
dec
test
popf
cmpsl
adc
add
rolb
in
xor
stos
xchg
test
movsb
mov
data16
dec
inc
hlt
repnz
das
syscall
xchg
das
stos
mov
adc
outsl
xorb
jne
dec
xlat
scas
enter
xor
pop
adc
daa
in
mov
dec
aam
adc
and
push
mov
repnz
lock
push
in
lahf
add
xchg
clc
sar
lahf
xor
push
xchg
push
xchg
loopne
dec
enter
cmc
ret
and
arpl
div
sti
jmp
jg
xor
and
test
xchg
xlat
lds
push
data16
pop
mov
inc
jb
push
mov
pushf
in
rcrb
fs
and
mov
push
adc
cmc
cld
std
xlat
inc
ret
ja
pop
test
sub
lret
push
je
fs
push
cmp
cmp
sub
dec
dec
popa
call
aas
nop
daa
mov
dec
mov
push
cwtl
fcomps
sbbl
bnd
xchg
pop
aam
xchg
mov
cmp
sub
clc
mov
dec
test
add
cld
push
mov
dec
pusha
or
popf
dec
int3
add
push
pop
fcmovnu
loop
ja
dec
mov
or
jbe
sbb
xchg
sub
jb
test
aaa
jmp
sbb
sahf
je
dec
jae
xchg
or
pusha
pusha
adc
je
scas
scas
add
pop
cmp
fbld
push
adc
push
pop
xchg
adc
out
mulb
movsb
pop
lret
test
das
inc
rcll
mov
enter
jo
pusha
les
add
shlb
mov
xor
les
mov
sahf
pop
inc
add
push
sub
sbb
dec
packsswb
fmull
into
aad
jecxz
dec
mov
das
add
jg
test
lcall
dec
test
stos
lret
and
pop
rorl
cmpsb
out
mov
in
in
mov
add
cmp
push
sub
mov
and
int3
loope
aam
cmp
push
mov
adc
push
mov
xchg
push
and
add
or
les
push
bound
push
loopne
test
outsb
push
cmpsl
push
dec
add
dec
inc
out
lahf
xchg
jg
xchg
stos
jle
add
in
inc
cmp
das
ss
dec
cmpsl
inc
lds
pcmpgtd
push
iret
push
leave
pop
fmul
jle
mov
jp
lret
xchg
xchg
mov
in
idivl
mov
bnd
mov
and
xchg
adc
dec
cmc
out
test
dec
jne
comiss
leave
cmp
fs
inc
xchg
push
loop
pop
test
sbb
mov
inc
dec
add
add
dec
ret
xchg
adc
or
xchg
daa
mov
jp
movsb
pop
rcrl
aad
stc
cmc
add
daa
cmp
dec
pop
ds
daa
jge
sahf
dec
mov
mov
sbb
arpl
mov
loopne
or
loop
popa
test
ljmp
dec
pop
iret
insb
movsb
scas
shl
fidivrs
adc
insb
and
mov
sub
movsb
ds
scas
mov
cmp
or
xor
pop
cmp
sarb
rclb
icebp
mov
sub
clc
cmp
loope
inc
cs
dec
iret
push
lret
push
pop
xchg
insb
daa
push
pop
jle
dec
mov
mov
std
pop
fadd
out
in
mov
jo
ss
xor
enter
fs
test
scas
pop
outsb
in
jle
push
pusha
cmp
push
les
push
xchg
test
cmp
mov
popf
fsts
cmp
xchg
loope
dec
and
jg
repnz
cmp
cmp
push
sub
clc
mov
test
push
mov
or
mov
jo
jnp
and
je
mov
jle
jle
dec
push
mov
xchg
repz
imul
sub
adc
les
and
jo
je
jge
push
data16
nop
dec
push
mov
xor
lds
or
mov
mov
inc
dec
xchg
mov
adc
ss
jbe
dec
imul
and
ss
ret
lock
loope
es
popf
push
xchg
mov
ret
pusha
sub
sarl
inc
popa
jg,pn
xor
cli
es
adc
or
and
sbb
mov
inc
mov
nop
push
xor
xchg
scas
or
add
cld
call
lock
fstpt
loopne
mov
aas
jmp
fs
and
xor
fcompl
sahf
ljmp
pop
sbb
movsb
mov
adcb
aas
mov
push
mov
jecxz
adc
or
sub
rcrb
cmp
push
cmp
insb
sarb
je
out
or
shll
ret
imulb
mov
xchg
xchg
pop
sub
pop
insb
call
adc
mov
bound
and
int3
dec
mov
adcb
repnz
orb
mov
xchg
es
dec
push
or
loope
mov
push
les
ret
cmp
xchg
insl
push
jl
loop
cmp
stos
push
jl
mov
push
adc
cmp
inc
test
jl
inc
pop
and
push
loope
daa
enter
mov
sub
and
in
pop
and
mov
and
stc
out
stc
push
sub
sub
mov
pop
insb
dec
pop
jge
lcall
fisubl
adc
inc
lock
lock
adc
inc
xor
mov
lret
jb
mov
dec
mov
inc
gs
stos
sbbl
minps
dec
sbb
daa
jp
sub
loopne
popf
xchg
in
dec
call
xchg
xchg
mov
mov
mov
aad
jl
or
fisubrs
inc
and
enter
test
sbb
ds
mov
int3
jle
pop
dec
mov
push
mov
sahf
pop
sti
or
pop
ss
pop
jb
cmpsb
dec
xor
popf
in
mov
xchg
pop
cmpsb
dec
aas
mov
popf
xorb
aaa
movsl
fdivl
mov
cld
dec
fidivs
xchg
leave
cmp
inc
repnz
xchg
mov
aas
push
xchg
testb
leave
lcall
rclb
js
popf
adc
fstps
sub
jne
inc
std
stos
ret
or
dec
push
gs
imul
mov
repnz
adc
push
dec
inc
cmp
inc
leave
out
jmp
mov
in
test
cmp
test
mov
xor
push
sbb
repz
sti
clc
cmp
adc
addl
ret
ds
andb
cmc
inc
loopne
je
stos
lock
mov
jl
xchg
lcall
cwtl
xchg
daa
mov
sarb
pop
jle
jle
dec
fdivrp
lock
adc
ficoml
dec
dec
int3
pushf
lret
lods
pop
mov
daa
pop
mov
test
loop
mov
lret
out
loope
adc
adc
or
test
and
pop
pop
or
lods
inc
mov
les
stos
adc
jmp
icebp
add
rorb
leave
imul
inc
repnz
incl
outsb
inc
adc
mov
pop
jae
repz
test
arpl
repnz
xchg
dec
stc
xchg
jl
out
outsb
jne
nop
out
in
scas
or
mov
test
aad
out
nop
lock
sbb
inc
andb
out
sbbl
test
outsl
push
out
sub
mov
xor
fisubrs
repnz
mov
mov
das
jae
adc
jg
lcall
mov
std
cld
or
movsb
das
xchg
test
ds
popa
rorb
jae
sub
das
mov
mov
mov
jl
cmp
mov
jl
inc
inc
xor
xchg
xchg
xor
dec
lcall
mov
daa
aas
adc
dec
jg
sarl
sahf
or
push
jbe
push
fdivrs
pop
inc
adc
adc
sbb
mov
jb
and
jecxz
push
mov
es
enter
sbb
add
push
add
sub
shll
push
lcall
cltd
jl
sbb
inc
mov
pop
shrb
ficoms
adc
pop
std
ret
mov
xchg
jl
fs
loopne
dec
xor
sti
xor
loop
sbb
in
xor
xor
mov
imul
or
jge
or
fcos
loope
and
cwtl
xchg
pusha
sbb
es
mov
decb
test
add
into
adcb
dec
les
and
rorb
jo
cld
xchg
out
dec
in
jne
inc
aad
pop
test
test
adc
push
push
xchg
adc
stc
xorb
mov
inc
ss
es
cmpsl
pop
jnp
xlat
mov
mov
outsb
sarl
or
lods
clc
sarb
je
jbe
js
jp
adc
loope
scas
sub
push
popf
inc
sahf
pop
adc
in
leave
push
test
es
inc
bnd
and
add
and
addr16
push
pop
dec
xchg
dec
pop
aad
xchg
mov
mov
cmpsl
mov
push
mov
lock
divl
jo
je
pop
add
in
es
dec
scas
jmp
xchg
test
ljmp
ds
pop
dec
mov
es
mov
pop
mov
xchg
in
ret
and
cmpsb
sahf
aaa
adc
dec
xchg
pop
leave
insb
pop
sub
mov
dec
popf
fldt
flds
sub
repnz
lcall
pop
inc
stos
sahf
cmp
mov
leave
dec
clc
fimuls
and
dec
lods
or
mov
dec
popa
mov
mov
lds
xchg
inc
or
and
out
jns
push
pop
mov
mov
and
pop
mov
mov
pop
loop
pusha
cld
xchg
push
inc
or
fimuls
lahf
popa
push
ret
rcl
loope
cmp
xchg
cmc
nop
arpl
sbb
call
jl
nop
sbbb
je
inc
add
test
cmpsb
repnz
inc
dec
shr
dec
push
les
xor
nop
push
sub
aaa
jg
movsb
push
sahf
dec
add
push
mov
lods
xchg
add
mov
pop
xchg
call
lds
jle
push
add
rorb
insl
dec
jne
nop
icebp
xor
mov
and
lock
jle,pn
popf
xor
push
xchg
pop
loopne
xchg
mov
hlt
in
std
jnp
pop
std
cmp
leave
and
cli
adc
das
jl
cld
mov
cld
aas
mov
or
test
scas
or
dec
popa
fsubp
jle
xchg
cmp
push
call
ficoml
pop
adc
add
add
lods
pop
cmp
dec
sub
les
mov
push
push
clc
aad
fmuls
mov
mov
bound
jmp
fadd
jle
dec
rolb
fldenv
repnz
out
in
stos
ret
es
xchg
or
sbb
rcrb
ss
cmp
ds
inc
cld
inc
cld
dec
popf
inc
je
stc
push
stc
pop
jnp
iret
iretw
push
outsb
leave
jb
sub
jp
jle
push
jle
jle
jle
dec
scas
jp
mov
aam
out
in
xchg
or
es
lahf
push
lock
jmp
adc
xchg
shrb
jb
jle
jle
sbb
adc
pushl
fcomps
jae
jg
dec
sahf
testl
jb
sub
sbb
dec
xchg
inc
push
push
stc
pop
stc
pop
stc
ja
pop
cmp
cld
lahf
mov
mov
hlt
fiaddl
popa
ljmp
xchg
jo
dec
rol
mov
sbb
xchg
rcrl
cmp
sbb
test
mov
sahf
cmc
adc
int
jmp
cmc
in
dec
das
adc
adc
hlt
jne
pop
inc
sahf
mov
lret
sahf
or
out
and
adc
jbe
js
jp
jl
jle
pop
and
mov
push
sub
stc
adc
idivb
xor
popa
push
push
outsb
mov
mov
aam
sahf
lahf
stos
lahf
ret
lahf
iret
sub
outsb
dec
or
mov
ds
icebp
mov
bswap
fcmove
repz
sub
sbb
add
jb
xchg
and
sarb
subl
sarb
nop
test
mov
push
jl
icebp
in
push
add
pop
xor
ret
int
bound
ret
in
loope
and
xchg
pop
insb
mov
shl
fwait
sub
in
adc
data16
sub
aas
in
or
fs
out
mov
push
fcmovbe
jmp
xor
mov
xchg
cltd
les
mov
mov
pop
iret
push
outsb
iret
jge
test
fstps
stc
mov
call
jns
and
imul
stc
push
push
dec
adc
repnz
push
pop
in
out
out
in
rcrb
cltd
mov
das
cmp
push
jle
mov
pop
cmpl
stos
push
sub
mov
mov
push
in
pop
or
fisubs
fs
jo
dec
push
outsl
xor
or
test
call
jp
loop
into
or
cmp
icebp
je
add
cmp
xlat
inc
push
and
mov
loopne
add
jo
ficompl
cmovp
enter
mov
lahf
popa
cmp
sub
inc
cmp
inc
rcrl
pop
and
outsb
xchg
std
push
mov
lods
mov
loop
arpl
mov
loope
cmc
nop
xor
test
jbe
pop
call
out
push
inc
filds
nop
mov
dec
popf
pop
adc
repnz
or
inc
jnp
in
loopne
or
xor
pop
dec
shlb
fs
pop
or
adc
adc
inc
je
xchg
jmp
mov
cmp
fimull
adc
mov
in
adc
test
xor
jo
imul
pop
leave
lock
cmp
cmp
dec
das
imul
out
cli
call
sub
dec
orl
popa
push
ret
andl
aas
je
out
jbe
pop
daa
mov
das
clc
dec
mov
dec
mov
xor
add
out
jb
and
pop
in
fmull
cli
mov
inc
ret
jge
or
loopne
cmp
stc
cld
adc
int3
xchg
repz
or
push
dec
dec
pop
xchg
fstl
js
dec
lcall
pusha
in
call
push
xchg
sbbl
shl
in
push
jb
loop
mov
loopne
stos
mov
xchg
jb
jno
dec
push
push
cld
cmp
sarl
pop
hlt
addl
jmp
cld
mov
js
push
mov
popa
pop
loopne
scas
dec
aam
ret
cmp
cli
cmp
cmp
xchg
ds
out
or
dec
add
cs
insl
test
clc
ret
pop
test
loopne
outsl
xchg
outsb
push
mov
mov
std
stc
pop
and
pushf
call
dec
jl
add
fidivl
add
inc
cmp
cmp
ljmp
lahf
add
mov
outsb
cmp
cmc
shll
mov
and
mov
pop
jp
dec
xchg
loope
jmp
push
or
xor
les
xchg
test
xor
arpl
push
popl
sub
mov
xchg
inc
in
and
xor
js
call
cmpsb
xchg
jo
mov
pop
mov
out
cmp
ja
dec
cmp
inc
mov
pop
push
xchg
rcl
jle
xor
dec
cmpsb
mov
icebp
and
or
lret
call
dec
bound
jge
lahf
nop
xchg
mov
repz
jbe
adc
mov
cld
ret
and
sub
call
loop
test
gs
shl
and
mov
mov
mov
sbb
xor
push
loopne
fstl
ljmp
adc
sub
adc
seto
pop
cwtl
pop
sbb
push
loopne
dec
sub
loopne
inc
clc
mov
ret
aam
inc
and
aaa
in
loop
imul
iret
push
mov
push
mov
pop
and
add
data16
shll
incl
and
xchg
dec
jmp
pop
xchg
test
rcrb
negb
in
sbb
push
popf
lds
dec
ss
or
cli
ja
cmp
scas
int3
pop
inc
enter
or
sub
pop
int3
jnp
scas
les
xor
xchg
shr
popf
shrb
pop
lds
add
dec
in
mov
leave
insb
xlat
sbb
test
test
pop
stos
lock
cmp
xchg
sub
loope
jmp
andb
out
in
xchg
mov
ffree
testb
addb
push
cmp
lods
ret
pop
mov
cmp
ss
bnd
xchg
xor
sub
mov
sahf
mov
fmull
stos
and
mov
lcall
clc
dec
sub
xchg
adc
ret
aad
xor
jb
fldt
jle
adc
jle
push
cld
adc
or
mov
pop
pop
pop
mov
pop
pop
push
xchg
js
mov
cmp
mov
imul
mov
sbb
mov
sbb
addb
mov
or
and
sbb
add
loopne
lods
hlt
dec
sub
test
adc
or
repnz
mov
push
add
pop
inc
mov
or
jmp
dec
push
mov
cmpb
mov
fstpl
jns
daa
mov
out
je
daa
inc
mov
lcall
in
inc
es
xor
adc
mov
lcall
xchg
jle
adc
mov
mov
sarb
lret
icebp
repz
repz
repnz
call
out
das
test
jle
dec
aad
test
pushf
push
adc
cltd
add
ret
and
out
or
cld
pushf
pop
rcrb
out
test
ds
and
push
pop
in
cld
or
xchg
jo
imul
notb
fistl
mov
popa
out
les
cmpb
and
or
add
adcb
xchg
aad
sbbb
xchg
stos
cli
and
shll
jecxz
sub
das
jbe
dec
cmp
dec
dec
jae
jnp
xchg
fcoms
or
add
aas
push
pusha
loope
call
or
inc
stos
jle
jle
jle
pop
shrb
inc
mov
pop
imul
jle
xchg
testb
popa
sub
sub
sub
sub
pop
jl
sbb
mov
sbb
pop
orb
jb
adc
and
icebp
lock
fdivl
js
jp
jl
pop
pop
and
adc
les
jae
mov
test
ds
stc
pushf
sbb
or
pusha
mov
dec
aaa
lock
loopne
test
rorl
cmp
cmp
adc
push
jbe
ret
add
mov
lock
loope
pop
jp
scas
icebp
nop
cs
mov
dec
cmp
xchg
jb
je
pop
dec
xchg
repnz
or
inc
roll
adc
cmp
or
pop
xor
das
cmp
test
jle
sub
shrb
sub
loop
jo
dec
xchg
clc
mov
xchg
inc
xchg
xor
inc
jmp
or
test
pop
subl
xchg
shl
cmp
mov
cmp
loope
add
xchg
ljmp
sarl
xorl
imul
sarb
sbb
mov
mov
stc
mov
mov
test
jmp
pop
scas
and
push
addl
ret
fcom
pop
mov
jno
jle
push
movsl
sub
cli
cmp
cmp
filds
xlat
ret
test
je
nop
sahf
pop
orl
mov
pop
das
pop
hlt
repnz
popf
notb
or
mov
sahf
test
sbb
lahf
repnz
pop
loopne
push
dec
ss
push
daa
test
leave
inc
push
xchg
xchg
rorl
add
ljmp
out
cmp
js
stos
iret
lock
and
sarb
ret
pushf
out
icebp
lock
cs
xor
inc
pop
mov
push
ret
jg
xor
adcl
stos
dec
loopne
cmpsl
adc
jmp
or
dec
mov
dec
dec
test
mov
scas
cmp
xchg
stc
mov
aas
dec
adc
mov
jns
dec
push
popf
jmp
mov
pop
pushf
pop
sahf
jae
jp
imul
jae
pop
dec
std
mov
xor
les
push
cmp
mov
lods
mov
cmpsl
xchg
xchg
in
and
insb
mov
adc
mov
adc
mov
xchg
mov
leave
rcrl
jle
xchg
hlt
push
cld
push
mov
add
or
pop
xor
xchg
test
sarb
cmp
and
stc
mov
sbb
xor
inc
adc
sbb
pop
jo
sub
aaa
lret
cmp
adc
dec
xor
jb
jbe
and
jmp
mov
in
mov
fdivr
mov
xchg
fisubrl
pop
stc
js
sarl
fldcw
mov
pop
mov
ficoml
clc
pop
pop
in
mov
jb
jbe
jp
jle
push
xchg
mov
mov
mov
loope
sahf
sub
aas
cmpsb
aas
stos
and
jnp
rol
repz
std
inc
adc
dec
fidivrs
lcall
incb
add
xor
in
rcll
ret
push
rcrl
jecxz
repz
es
cs
push
out
in
loopne
xchg
aam
outsb
mov
bnd
jle
pop
xchg
cld
mov
mov
je
pop
mov
sub
mov
cltd
int3
movsl
jg
push
call
add
imul
icebp
sbb
mov
loope
dec
das
push
nop
dec
mov
and
push
sbb
mov
jg
dec
xor
sarb
pusha
and
out
in
mov
add
jb
je
jbe
js
jp
jl
jle
jle
dec
mov
add
inc
loopne
dec
xchg
test
cld
cld
xchg
pop
nop
outsb
out
out
in
decb
push
or
lret
mov
push
xchg
mov
adc
out
in
mov
lahf
add
mov
rcl
pusha
dec
fiaddl
repz
ret
fdivl
push
popf
or
mov
sbb
je
and
iret
js
mov
lea
mov
mov
pushf
js
iret
or
sbb
push
pusha
clc
js
jnp
fstl
fsub
imulb
dec
add
sub
xor
sarl
push
hlt
jle
pop
push
call
test
scas
cmp
sub
in
cmp
movsb
push
cwtl
ljmp
jle
xor
addr16
cmp
mov
xchg
cld
mov
lcall
aas
in
test
scas
cmp
int3
popa
mov
add
xchg
pop
pushf
and
xchg
jle
pop
je
orb
inc
mov
jnp
lahf
xchg
mov
xchg
adc
adc
jb
scas
pop
dec
mov
dec
pop
ss
jb
dec
fsubl
inc
jbe
scas
in
mov
shl
aaa
cmc
leave
push
jne
xor
stc
in
add
lret
insb
push
sbb
inc
ret
cmp
mov
insb
sub
sbb
cmp
outsl
das
ds
scas
cmp
or
aad
xor
data16
test
lock
jp
jl
dec
xchg
or
rcrb
inc
add
jo
or
iret
pop
push
inc
lods
or
dec
sti
icebp
add
loopew
jl
xchg
stc
cmpsb
stc
scas
imul
daa
lret
jecxz
icebp
out
in
mov
rorl
sub
inc
push
dec
test
push
leave
shlb
mov
push
test
movsb
pop
xchg
mov
int
in
clc
fisubs
shll
hlt
xor
pop
dec
lods
push
test
pop
lock
mov
pop
mov
pusha
jb
mov
add
das
mov
and
leave
shl
add
xchg
add
xor
push
adc
test
pop
cmpsb
and
adc
daa
inc
in
mov
ja
push
inc
mov
test
jle
sbb
popf
xor
cmp
sub
test
das
jg
mov
lahf
jle
jle
dec
mov
iret
out
out
fsubl
aas
adc
shrb
jl
push
pop
lods
enter
test
cmp
aas
stos
jo
adc
inc
adc
cmp
fdivrs
sbb
xchg
dec
cmp
cmp
out
sbb
mov
loopne
xchg
mov
dec
in
out
adc
clc
push
daa
loop
nop
inc
leave
jnp
jle
push
out
mov
sub
cmpsl
ret
xlat
mov
adc
mov
stos
cmp
fsubs
sub
or
aad
fmull
xchg
pop
mov
jle
std
cmc
push
push
imul
mov
mov
jecxz
xchg
out
push
add
mov
or
xchg
inc
aad
repnz
aas
orb
test
mov
popf
das
xchg
cmp
fs
inc
xor
cmovp
lret
roll
sbb
mov
pop
out
outsb
mov
sub
pop
sub
mov
and
decl
dec
mov
out
dec
inc
xor
ret
addb
rolb
insb
cli
sbb
lods
xchg
xchg
test
in
or
aaa
subl
inc
and
xchg
inc
or
mov
push
pop
mov
mov
inc
xor
xor
loop
movsbl
stc
mov
gs
push
sbb
mov
iret
xlat
pand
jecxz
out
inc
and
cs
repnz
xor
pop
push
push
fimuls
into
mov
push
add
inc
call
les
sub
mov
scas
and
cmp
jmp
pusha
or
mov
and
inc
std
movsl
ds
xchg
sub
push
push
xchg
loop
divl
inc
xchg
pushf
cmp
cmp
daa
adc
inc
mov
shll
xchg
jle
dec
and
lods
xor
subb
push
or
ss
xorb
lcall
jbe
loop
ffree
push
out
or
xchg
mov
imul
sub
and
add
sbbl
mov
adc
inc
incl
pop
cmp
pop
mov
popa
mov
js
inc
xchg
ss
add
movsb
lock
lahf
pop
add
and
lods
mov
cmpb
cmp
pop
test
daa
inc
inc
out
or
lock
mov
rcrl
dec
or
subb
pop
jb
js
pop
sbb
fmuls
filds
mov
ret
xor
and
push
call
je
leave
add
push
into
mov
inc
mov
cmp
xchg
lret
pop
movsl
push
jecxz
sub
leave
aas
add
in
les
mov
lock
add
mov
pusha
pop
loop
fcomps
adc
mov
nop
cmp
cs
sbbb
shlb
aaa
sbb
test
mov
fs
push
push
sahf
sub
lods
and
sbb
rclb
inc
add
mov
hlt
xchg
xor
or
lock
xchg
cmp
mov
shl
and
lret
movsb
stos
push
fs
jns
test
xchg
icebp
mov
test
ret
sarb
rcl
pop
inc
jecxz
call
clc
pop
std
xchg
cmp
and
daa
mov
push
aaa
adcl
dec
push
stc
xchg
dec
or
lock
jle
dec
mov
stos
push
test
jmp
lret
push
push
jo
jle
pop
mov
pop
mov
rcll
jmp
cmpsb
pop
push
cmp
leave
das
js
jl
jle
jle
pop
xchg
call
add
popf
orl
sbb
xchg
sbb
sub
sbb
push
xchg
arpl
repnz
bnd
lret
lahf
adc
js
dec
dec
fisubl
bound
test
in
icebp
mov
cld
loop
jmp
push
fs
adc
add
or
inc
cmp
stos
mov
lahf
in
xchg
push
lods
xchg
sub
mov
mov
inc
call
cmp
cli
daa
nop
adc
pop
enter
lcall
pop
int3
jns
stc
clc
cmp
cld
aam
hlt
mov
mov
and
inc
mov
lret
jnp
fisubrs
gs
test
out
lds
pop
les
aas
pusha
sub
mov
xchg
dec
inc
mov
pusha
xchg
sbb
push
aas
aas
fidivrs
out
out
cwtl
scas
hlt
rcl
popf
jo
jb
pop
inc
or
shl
je
jbe
pop
xchg
daa
lds
cld
clc
and
pop
lret
or
adc
cmp
jbe
lock
fadds
cs
je,pn
pop
or
mov
mov
xchg
jl
jle
push
push
xor
inc
cmp
movsb
cmp
das
mov
dec
in
xchg
rorl
and
shlb
imul
sub
nop
cmp
lods
daa
into
rorb
dec
and
or
clc
ds
insl
lods
hlt
and
stc
xor
lock
in
mov
inc
push
pop
cmp
xchg
xor
adc
je
dec
lock
mov
dec
mov
pop
mov
dec
or
ds
fdivrl
mov
push
call
test
cmp
jb
hlt
stos
dec
jbe
or
ja
push
je
dec
sub
fcomps
xchg
dec
fwait
mov
sahf
inc
and
mov
push
adc
stc
scas
cmp
or
ret
pop
push
xchg
push
jne
ss
pop
pcmpgtd
push
jmp
mov
inc
jg
dec
test
ljmp
stc
inc
bound
adc
fwait
jp
dec
inc
stos
push
add
repnz
lds
adc
pusha
mov
add
lods
sarb
push
jbe,pn
xchg
mov
cmpsl
adc
gs
outsl
out
jne
fbld
nopl
push
lret
insb
test
pop
sbb
push
ljmp
xchg
push
sub
and
sbb
sub
push
xchg
adc
mov
jp
repnz
sub
inc
and
mov
cmp
inc
xor
pop
push
jle
xchg
incl
pop
or
pop
mov
bound
pusha
mov
xchg
add
jmp
enter
dec
dec
push
data16
scas
mov
shl
xchg
jne
movsb
dec
dec
in
insl
es
addr16
je
inc
or
jmp
test
push
out
sub
dec
loope
push
and
mov
pop
aad
lcall
pop
data16
incb
adc
adc
lock
hlt
icebp
cwtl
call
cmp
daa
cwtl
adc
push
mov
pushf
push
pop
pushf
sub
mov
lret
leave
fcomp
jle
pop
aad
add
cwtl
inc
or
lock
cmp
xchg
xchg
dec
xchg
gs
xchg
xchg
jle
out
out
out
out
out
in
loopne
pop
lahf
test
cld
iret
xchg
add
xor
cmp
cmp
les
aas
iret
aas
xlat
aas
popa
xor
add
xchg
pop
movsl
arpl
or
cmpsl
fcmove
out
in
rol
pop
imul
ds
popf
mov
inc
lea
push
mov
fs
xchg
cmp
push
and
and
aas
sbb
iret
mov
ljmp
mov
and
pop
xchg
dec
xchg
fnsetpm(287
push
cmpsl
push
xchg
cmpsb
mov
or
in
push
repz
dec
mov
xchg
lock
xchg
jl
xchg
sarl
pop
repz
mov
addps
dec
dec
or
cld
sahf
pop
mov
mov
ficoml
scas
push
loope
cmp
xchg
les
pop
call
xchg
jno
adc
mov
lods
pop
jb
jle
xchg
mov
dec
pusha
push
mov
mov
ret
pop
test
mov
mov
daa
dec
js
dec
scas
or
push
xchg
pop
xchg
cmc
loope
arpl
out
lahf
pop
dec
dec
cmp
es
inc
mov
sbb
xchg
push
push
repz
arpl
aad
jl
xor
lods
or
jl
or
outsl
lahf
rcll
pop
ret
mov
mov
or
sbb
pushf
fldlg2
and
xor
popf
loope
and
in
mov
outsb
push
je
mov
lods
dec
pop
loopne
dec
pushf
cld
push
aaa
subb
loopne
jnp
push
xchg
repnz
dec
fs
fmull
fdivl
inc
clc
sub
jnp
mov
aas
xor
inc
pop
iret
lahf
rcll
aam
daa
loop
aad
cmp
enter
leave
nop
cmp
mov
movsb
cmp
in
jl
pop
cmpsb
add
push
inc
xchg
lods
jl
rorb
cmp
leave
arpl
loop
pop
dec
mov
and
push
xchg
mov
and
repz
jmp
mov
and
inc
enter
inc
or
push
adc
cld
push
mov
mov
hlt
jle
xchg
dec
jne
pushf
adc
dec
push
pop
fadd
jl
dec
mov
mov
lret
lahf
icebp
lahf
stc
mov
jbe
js
jp
dec
inc
mov
push
pop
mov
decl
mov
adc
xor
mov
mov
dec
fsubrp
insb
daa
or
pusha
pop
lock
mov
aam
lock
jle
pop
inc
xor
or
in
pop
jp
mov
subl
arpl
pop
lods
cmpl
sbb
mov
stos
clc
dec
cmc
xchg
dec
xchg
add
lahf
cltd
sub
popf
jo
dec
mov
fwait
xor
je
sbb
in
lds
clc
clc
push
jl
cwtl
outsb
addr16
les
stos
into
jo
push
pop
cmp
pop
xor
mov
or
stos
dec
fimuls
pushf
pop
fs
dec
lods
adc
xchg
mov
pop
les
out
xor
cld
repz
or
adc
mov
clc
scas
cld
mov
jle
in
jmp
insb
xor
mov
sub
push
add
push
cld
stos
daa
lahf
pop
mov
les
loopne
push
pushf
jo
je
mov
clc
mov
sbb
push
idiv
mov
dec
pop
or
insb
orb
jns
pop
cltd
loopne
hlt
lahf
test
xchg
jl
pop
dec
pop
adc
pop
popa
or
push
aam
movsl
sub
mov
popf
push
push
jae
mov
push
mov
jne
mov
repz
cmp
sarb
pop
xchg
dec
shlb
jo
xchg
xchg
jns
jge
mov
stc
cld
pop
and
xchg
jge
test
push
loopne
mov
and
subl
ret
leave
ss
push
aas
or
jae
jg
test
daa
mov
mov
loopne
jno
cmpb
vaddss
movsl
mov
bound
push
jg
pop
push
cltd
out
in
out
leave
lret
pusha
xchg
xchg
das
and
clc
push
jb,pt
dec
and
ljmp
jecxz
add
orb
inc
ret
mov
decl
nop
jb
mov
add
adc
mov
cmc
xchg
inc
stos
fs
in
inc
pop
pop
aaa
jns
push
loope
mov
call
pop
fwait
sbbb
stos
loopne
out
test
pop
in
mov
jb
add
jge
or
or
and
dec
add
in
push
daa
mov
data16
loope
sub
fisubrl
andb
or
sub
shlb
pop
daa
ss
add
das
ret
bound
xchg
out
addb
inc
adc
dec
mov
cmp
pop
jo
shrl
notb
sbb
xchg
lret
in
xchg
mov
mov
aas
outsb
and
rorb
xor
scas
add
xchg
lds
cmp
xchg
in
inc
or
xchg
popa
mov
jnp
jp
outsb
or
outsl
push
loop
les
loopne
mov
jnp
or
mov
inc
fldcw
imul
test
and
ret
inc
mov
cwtl
gs
ret
and
mov
test
popa
mov
dec
jae
add
leave
fs
dec
sub
or
es
xchg
js
pop
push
push
pusha
jae
jge
xchg
setp
push
sahf
add
dec
mov
dec
je
sbbl
sub
js
jp
jl
dec
xchg
push
das
incb
and
cmp
movsl
mov
sarb
imul
sbb
xchg
ss
les
sbb
adc
cmp
mov
cmp
mov
out
fs
scas
ret
fs
fnstcw
push
push
enter
xor
rcrb
into
cmc
clc
mov
loopne
push
mov
mov
addl
sub
dec
daa
pop
jge
fdivrl
invd
mov
popf
roll
stc
sar
fisubrl
in
sub
int3
pop
orl
mov
jp
dec
stos
enter
xchg
cmpsb
pop
movsb
inc
sbb
jle
jle
pop
stos
lock
cld
mov
xchg
jle
dec
in
mov
mov
imul
repz
sarl
sbb
xor
xorl
mov
dec
inc
xchg
rcr
pop
sti
mov
test
mov
out
in
mov
shlb
nop
pop
push
in
shrb
incl
rcrb
and
in
xor
outsl
mov
mov
pop
mov
xchg
mov
call
cli
jo
adc
push
cli
cmp
or
jbe
push
imul
les
pop
mov
inc
sahf
mov
push
repnz
sarb
pop
mov
mov
xor
mov
nop
and
das
or
cmp
cmp
add
loopne
insl
mov
ds
push
ret
mov
clc
js
imul
das
ret
jne
rorb
xchg
ljmp
cmp
pop
pop
cmpsb
loopne
xchg
mov
setge
xlat
cmp
daa
dec
inc
or
ret
loope
mov
fsubrl
pop
or
je
lock
add
xorb
mov
out
test
xor
jo
mov
leave
ss
sub
sub
sbb
nop
dec
js
clc
orb
inc
push
add
dec
xor
inc
pop
dec
or
popa
pop
nop
outsl
cs
in
test
jae
xchg
loope
test
je
hlt
out
lock
popa
call
imul
movsl
jp
xchg
popf
lahf
popa
mov
inc
xor
pop
pop
cli
in
jle
bound
test
cmc
aas
daa
and
pop
inc
call
jb
xchg
lock
cmpsl
cld
lods
cld
mov
test
sub
mov
je
cmp
xchg
es
lahf
clc
jb
jmp
in
sub
aam
je
lahf
and
jmp
clc
jle
inc
or
mov
fsubs
jb
adc
lahf
cltd
xchg
mov
xlat
cld
fstl
ljmp
xchg
mov
cmp
cld
pop
cld
popa
popf
pop
divb
jg
test
xchg
lods
mov
mov
in
or
shlb
mov
scas
js
jp
dec
orb
leave
fsubs
add
fwait
aas
mov
das
and
or
mov
xchg
jp
cli
dec
paddb
mov
pop
loope
test
xchg
je
mov
jle
pop
add
test
xor
mov
jnp
test
xchg
icebp
cmp
mov
jbe
and
enter
imul
xchg
mov
dec
cmp
jmp
pop
add
lock
cltd
lock
ret
loop,pn
or
sub
ds
aas
pop
aas
pop
es
lahf
xchg
xchg
lds
mov
jb
dec
es
dec
mov
icebp
arpl
jne
cmpb
add
cmpsl
scas
or
gs
pop
jecxz
jmp
sub
inc
push
bnd
pop
pop
or
cmp
aas
mov
xchg
daa
sahf
inc
insb
mov
mov
pop
stc
dec
mov
mov
iret
inc
or
les
mov
xorl
mov
cli
jl
jle
jle
pop
mov
add
adc
jmp
or
popa
cs
stc
cli
fs
and
pusha
cmp
add
or
mov
inc
jp
inc
daa
outsl
cmc
and
lea
test
lret
jbe
call
and
sarb
add
sub
lret
mov
mov
cmp
cld
mov
sub
mov
pop
rcll
mov
loope
cmpb
mov
pushf
stc
repnz
pop
inc
sbb
popf
or
adc
and
and
pop
xor
leave
inc
incl
jle
dec
jno
push
mov
cmpsb
pop
ret
mov
mov
nopl
dec
iret
lds
and
xchg
add
js
jp
jl
jle
push
sysexit
inc
ret
clc
or
orl
push
push
jecxz
sbb
test
stos
cmovb
jle
pop
or
call
add
movsl
mov
lcall
aas
ret
daa
leave
roll
cmpsb
in
outsb
add
test
popa
repz
jp
mov
jmp
and
decb
cmp
daa
xchg
mov
mov
push
dec
pop
lret
rorb
fisubrl
ret
xchg
loop
out
ljmp
stc
add
push
xchg
adc
mov
cs
adc
mov
dec
sub
stc
pop
stc
pop
stc
stc
data16
push
outsb
push
out
mulb
jle
xchg
daa
xchg
inc
push
daa
jne
mov
jno
push
push
mov
loopne
dec
or
xchg
inc
cmpsb
fs
mov
fidivrs
lahf
popa
mov
cmp
lods
loop
out
ljmp
dec
cli
in
andb
rcrl
jecxz
repz
es
adc
testb
inc
and
in
rcrl
pop
repnz
jle
pop
outsb
xsaveopt
jp
pushf
dec
andb
loope
xchg
jle
add
rorb
jle
dec
stos
mov
movsb
stos
popf
repnz
dec
adc
in
cmp
mov
fmull
lock
call
inc
adc
shld
daa
iret
sub
das
jo
jle
jle
dec
aas
lock
inc
fimull
adcb
dec
push
pop
mov
cld
outsl
cld
jae
ja
jnp
jg
cmp
cld
mov
test
cmp
xchg
push
dec
dec
cltd
ret
ret
movsl
pop
jl
scas
dec
mov
mov
clc
hlt
and
shr
cmp
popf
and
or
in
dec
and
incl
mov
daa
lret
les
dec
ljmp
xchg
adc
js
dec
xor
mov
mov
xchg
mov
lahf
mov
ret
pop
fpatan
out
jmp
je
std
and
xor
test
test
and
cs
push
pop
jp
jo
sub
test
movsb
lock
or
icebp
call
pop
clc
mov
ret
cmpsb
test
mov
ror
or
push
pop
pusha
xor
in
xchg
shlb
hlt
popa
aad
bound
or
sti
xlat
test
jb
or
pusha
clc
scas
cmp
je
pop
xlat
or
je
adc
adc
mov
inc
or
lahf
test
jle
stc
push
adc
sbb
or
cmp
call
pop
dec
adc
xor
ret
jle
adc
push
daa
aam
rcrb
das
jb
shrb
outsb
ret
mov
xchg
cld
adc
mov
int3
cld
insb
cmp
cs
cmp
sub
cmp
inc
cli
fistps
add
lret
pop
sub
cmc
aas
stc
aas
std
push
add
adc
sbb
sbb
daa
sub
dec
xor
pop
inc
loope
shlb
in
dec
mov
inc
mov
sub
loopne
aas
xchg
rcrb
lock
decb
dec
push
dec
popa
fsubrs
out
jo
push
adc
pusha
les
loope
cmpsb
fmuls
pop
popf
ret
pop
test
xlat
mov
push
js
dec
int
ds
repnz
lock
xor
clc
xchg
cmpps
jbe
pushf
sbb
ds
push
push
push
jle
lock
jmp
pushf
repnz
xchg
mov
call
jge
and
add
iret
cmc
or
pop
pusha
dec
sub
ja
pop
loopne
in
rcll
fcomip
stos
nop
insb
sbb
push
xchg
popa
xor
insb
mov
and
loopne
clc
sbb
mov
jmp
cmpb
and
xor
jp
adc
cmp
shlb
adc
mov
jle
sbb
xor
push
pushf
cmpsl
push
sahf
adc
mov
and
lretw
das
in
jo
mov
and
pusha
mul
lock
cmc
jo
inc
in
xchg
jns
xor
in
lds
push
test
cmp
push
pop
pop
pushf
les
xor
cmp
imul
adc
test
popf
mov
movsb
mov
clc
fcoml
inc
cmp
sub
dec
push
mov
mov
xor
sahf
lods
lret
xchg
ret
fdivs
sbb
hlt
inc
mov
inc
xchg
dec
ret
je
pop
jb
and
mov
adc
push
xchg
push
or
cmp
pop
into
lock
ja
cmp
sub
cmp
inc
pop
dec
and
push
clc
cmp
pop
pop
pop
mov
or
leave
shlb
adc
sar
flds
push
movsb
adc
add
loope
jmp
push
repnz
pop
ds
cltd
mov
dec
push
int
addb
mov
test
cld
xor
insb
lcall
out
dec
out
jbe
push
pop
mov
xchg
loope
dec
or
adc
xor
clc
les
add
cmp
out
pop
xchg
test
stos
lar
leave
cmp
push
sbb
test
fldenv
lock
mov
push
stc
inc
jg
test
fidivrl
andl
and
inc
ljmp
in
pop
es
adc
xorb
adc
mov
xchg
or
sbb
xchg
icebp
jmp
es
push
mov
cld
jp
dec
add
lock
push
fwait
iret
icebp
or
pavgb
paddsw
ja
cld
std
mov
dec
sbb
loopne
jl
adc
and
sbb
or
cld
cld
das
and
jle
inc
call
adc
and
movsb
mov
hlt
test
aam
add
sub
loope
das
mov
out
jb
pop
dec
add
ret
pushf
push
ljmp
xchg
std
xor
xor
dec
sahf
fxtract
add
inc
cmp
add
out
or
jge
insb
mov
test
lock
in
lock
push
or
or
popa
pushf
mov
pushf
sub
fldenv
or
out
cmp
sub
mov
test
xor
add
and
dec
je
pop
enter
fs
roll
ret
fcmovbe
push
jg
or
call
aad
out
in
std
adc
loopne
inc
fsubs
xchg
xchg
dec
int3
outsl
dec
popa
or
cs
pop
lahf
pop
in
inc
inc
jns
hlt
fs
or
inc
fsubs
dec
sbb
js
pop
inc
dec
xchg
push
sub
sar
mov
movsl
pop
hlt
mov
sbb
xorb
cwtl
mov
add
or
outsb
cmp
cmp
sarb
or
pusha
jg
adc
into
add
ljmp
sub
xchg
and
or
pusha
xchg
add
cmpsb
test
pop
lock
xchg
add
mov
adc
or
inc
push
lahf
mov
mov
adc
or
or
sbb
pop
mov
sub
cmp
cmp
daa
pop
clc
mov
ret
orb
adc
mov
jns
push
fcmovnbe
and
mov
jmp
ret
jmp
stos
call
xor
fisttpll
or
inc
clc
xchg
jbe
dec
pop
fadd
cmp
xchg
cltd
jle
push
dec
mov
fildl
push
lock
push
xchg
shlb
adc
rcrb
or
jo
jb
pop
jmp
and
inc
xchg
jns
inc
sti
lock
movsl
xchg
xchg
inc
in
push
daa
push
fimuls
decl
je
ds
cmp
imul
enter
js
push
pop
cld
lods
daa
add
fidivl
push
push
pusha
mov
movsb
mov
hlt
push
xor
mov
into
call
cmp
adc
shlb
jnp
fdivrs
lods
aas
enter
fbld
rclb
in
inc
mov
jl
push
jne
jmp
and
jl,pt
adc
sub
jp
dec
and
xchg
pop
cli
mov
int3
mov
dec
pop
outsl
inc
lahf
subl
xchg
xchg
push
outsl
adc
mov
push
jbe
adc
pop
mov
mov
or
lahf
inc
ljmp
les
cmp
dec
jle
push
daa
aas
cs
rcr
dec
ret
sub
call
xor
hlt
int3
add
das
mov
pop
push
popa
xchg
lods
mov
push
or
add
mov
mov
dec
movsb
adc
or
shl
lcall
loopne
in
mov
or
push
cmp
and
clc
xchg
roll
sbb
and
insb
lods
and
sarb
out
ss
jnp
fs
insb
xchg
repnz
fs
lret
adc
je
dec
cmp
dec
into
aas
outsb
and
cmp
lret
mov
adc
testl
scas
cmp
sbb
sbbb
and
stc
jge
xchg
xchg
stc
pushf
imul
iret
iret
leave
in
dec
stos
pop
leave
pop
cmp
das
xor
or
dec
je
addb
cmp
mov
repnz
cmpb
ljmp
scas
subb
aaa
incl
jge
add
call
cld
scas
daa
js,pn
dec
dec
mov
loopne
pushf
mov
xchg
notb
nop
mov
ret
repz
mov
jne
mov
ds
mov
sarl
adc
and
dec
sbbb
dec
push
mov
imulb
adc
or
and
pop
rclb
hlt
ss
mov
or
lock
cmp
xchg
sub
push
dec
xchg
sub
test
sahf
mov
ret
xchg
push
adc
mov
std
cld
sbb
adc
jns
or
add
mov
movsb
dec
add
data16
jl
jle
jle
jle
jle
dec
mov
jmp
mov
xchg
xor
imul
imul
xchg
popf
jne
xchg
mov
mov
sbb
or
xor
test
push
call
xchg
xchg
mov
lock
or
sub
dec
sub
ds
sarb
repnz
pop
iret
cs
mov
push
and
xchg
sub
rolb
stc
cld
xor
push
in
call
popa
mov
jle
dec
mov
cmpsb
jle
pop
clc
repnz
cmp
jmp
mov
mov
add
stc
or
and
mov
imul
sub
aas
cmc
das
dec
loope
xchg
sahf
scas
add
mov
inc
xor
pop
xchg
xchg
movsb
mov
adc
pop
sbb
popa
cmp
add
mov
push
mov
mov
ret
mov
pop
into
fs
pop
shlb
and
push
mov
xor
lock
repnz
jbe
and
pop
outsl
dec
call
leave
cmp
rol
or
inc
jnp
mov
clc
stc
std
cmp
inc
and
lahf
inc
jbe
jmp
fisubrs
sbb
xchg
fadds
mulb
fists
xchg
cwtl
inc
push
add
dec
call
insl
cmpsl
jno
jne
jns
xor
subl
xchg
clc
outsb
mov
xlat
adc
leave
xor
pop
aad
xchg
xchg
fwait
rolb
cmp
inc
addr16
mov
jp
push
daa
push
popa
push
js
inc
cmp
mov
scas
jecxz
mov
cli
push
jo
sbb
dec
mov
push
out
mulb
loopne
inc
mov
dec
pusha
xchg
call
aam
in
jo
dec
adc
jbe
pop
sub
test
mov
std
cld
adc
loopne
jne
lea
lock
outsb
dec
or
mov
call
insb
lock
loopew
hlt
loope
sbbb
pushf
mov
repnz
aaa
push
leave
popa
jg
insb
popf
ret
cs
sub
jo
fistl
popa
or
push
push
cmp
insl
pop
sahf
jl
pop
xchg
mov
pop
adc
mov
push
out
mov
cmpb
pushf
pop
pop
cmp
mov
clc
hlt
das
mov
xchg
pop
das
repnz
push
adc
inc
aam
jmp
cmp
or
or
orb
pusha
xor
pop
rcr
pop
lds
push
xor
cmpsb
cmp
jg
cmp
mov
hlt
pop
mov
leave
aam
outsl
pcmpgtd
leave
cmp
or
leave
ss
jl
xchg
xchg
popa
cmpsb
test
mov
in
frstor
jg
add
mov
jo
push
dec
cmp
nop
rcll
dec
mov
sbb
add
outsl
jmp
clc
jl
xchg
lcall
and
out
mov
stos
popa
nop
gs
sbb
jl
push
lock
xor
push
fdivrp
dec
js
dec
inc
inc
out
xchg
subl
loop
fdiv
push
or
or
pop
cld
inc
cmp
sbb
mov
ljmp
call
xchg
sbb
popa
mov
jle
test
mov
mov
mov
lahf
popw
outsl
mov
cld
int
fstl
xor
mov
ds
push
stc
stc
push
cmp
mov
sarb
orb
xchg
mov
or
pop
mov
cvtpi2ps
popa
lods
adc
lock
insl
pushf
aam
mov
das
sub
shrl
dec
sbb
push
ss
xchg
pop
push
jo
cmpsb
fs
in
and
shll
xchg
jb
and
dec
pop
xorl
cli
cmpsb
shl
push
inc
jbe
js
push
adc
lret
xchg
flds
cmp
jle
mov
jb
mov
and
lock
std
xchg
in
xchg
scas
leave
fdivp
outsb
push
pop
aas
pusha
dec
mov
jmp
pop
bound
xchg
pop
fs
jmp
fsubl
and
pop
and
fsubr
notb
dec
cmc
pop
outsb
fcoms
push
push
mov
sbb
es
pop
xchg
dec
dec
push
push
mov
out
je
mov
mov
and
and
stos
notl
movsb
decl
mov
ljmp
mov
mov
dec
repnz
test
mov
lock
and
lock
bound
sub
ret
aam
or
jge
xchg
js
mov
lods
out
mov
xchg
adc
clc
sbb
xchg
divps
iret
ror
hlt
je
inc
adc
jnp
xchg
in
sbb
fxtract
sbb
xchg
ljmp
dec
mov
out
std
cmp
and
lahf
ficomps
push
cmp
cmp
call
push
and
mov
fcompl
in
dec
xlat
aas
dec
cmp
push
add
jne
int3
dec
sarb
lds
test
insl
scas
or
faddl
push
cmp
sbb
mov
cmp
fsubs
mov
out
push
fidivrl
dec
pop
mov
dec
mov
es
inc
les
ret
mov
or
fmuls
or
jb
add
push
xchg
xchg
inc
test
mov
jne
push
stc
push
outsb
mov
daa
mov
sbb
xchg
test
jg
lods
fcmovnb
or
je
adc
lock
lahf
loopne
jmp
pop
test
das
mov
push
into
add
or
fs
addb
cmpsb
dec
mov
xchg
loopne
test
repnz
fnsave
jbe
pop
push
or
popa
sarb
mov
fidivs
daa
stos
or
add
daa
shlb
js
daa
dec
inc
mov
cmp
stc
sahf
outsl
push
mov
mov
dec
adc
enter
jp
je
inc
loopne
fadds
jbe
adc
or
inc
jbe
add
jmp
movsb
cmpsl
aam
inc
pop
mov
xor
mov
adc
mov
xchg
test
scas
pop
push
or
inc
hlt
pop
insb
adcb
xor
movsb
ds
repnz
mov
lds
aaa
movsl
cld
aam
lret
clc
jb
in
dec
pop
mov
push
daa
test
mov
ss
mov
testl
and
push
sub
or
cmp
sbb
pop
lds
sbbb
stc
pop
rorb
ret
inc
jl
js
fstps
insl
push
pop
shll
jnp
sub
add
push
aas
sbb
je
dec
fsubl
stc
mov
pop
outsl
pop
mov
add
and
insl
or
jl
push
sbb
push
pusha
scas
ret
ja
xor
lock
pop
in
imul
in
movsb
xchg
sahf
daa
and
cmovp
cld
mov
jo
arpl
mov
mov
mov
rorb
push
inc
lahf
mov
add
ljmp
in
lock
mov
adc
cwtl
dec
mov
cmp
stc
or
add
sub
jp
shlb
adc
cwtl
cmp
test
lret
popa
fadds
jg
sahf
pop
arpl
rolb
pop
mov
mov
jo
jmp
cli
stos
mov
mov
push
fs
mov
in
adc
and
dec
scas
mov
or
mov
adc
cmpb
into
or
push
xor
inc
mov
lcall
rcll
es
and
imul
and
xor
cmpsl
mov
into
dec
pop
push
and
mov
es
dec
xor
or
js
push
xchg
mov
xchg
stc
push
cli
xchg
ud0
inc
cmp
dec
les
in
dec
pop
cmp
push
jg,pn
sahf
out
push
mull
das
or
lock
ret
jmp
std
aas
movsb
jo
sub
addl
scas
ss
dec
or
xor
js
pop
pop
in
stos
stos
cld
mov
test
cmp
test
pop
or
loope
in
stc
cmc
stc
add
ss
xchg
movsb
cmpsb
cld
dec
and
lods
ret
cmp
test
inc
clc
adc
cwtl
rorl
in
int3
and
cld
test
dec
push
call
pop
sbb
and
xchg
dec
xchg
and
mov
mov
adc
push
dec
dec
jp
popf
dec
rorl
adc
dec
mov
mov
jne
adc
xchg
scas
xchg
ljmp
jmp
call
cmpsl
out
movsb
sub
pop
scas
std
das
cmpsb
cmp
dec
out
ds
rcrl
jge
fdivl
dec
dec
adc
xor
movsb
les
sahf
sbb
arpl
jle
dec
outsl
lock
cld
jnp
roll
mov
xchg
mov
mov
repnz
ja
xchg
mov
ret
test
das
rcll
adc
cld
es
out
jmp
and
pop
dec
jp
js
jle
dec
cmpsl
ret
fdivrl
dec
fdivrp
call
daa
cmp
and
pop
jle
les
es
sti
clc
add
sbb
stos
inc
test
jb
jl
xchg
mov
aam
rorb
out
or
jne
pop
js
pop
rol
aad
pop
in
cmc
addl
shlb
inc
or
xor
xor
push
sub
stos
mov
push
sbb
es
jle
xchg
shlb
jle
orl
out
orl
and
jge
shlb
and
inc
in
cmp
dec
cli
adc
push
or
loope
fs
mov
popf
xchg
fs
dec
add
and
xor
repnz
pop
and
adc
test
rcrb
stos
js
dec
adc
xchg
in
out
or
ret
pop
test
jecxz
or
mull
test
mov
pop
sub
les
inc
incl
cmp
je
dec
and
fs
add
pop
pop
mov
or
mov
pop
das
ret
mov
mov
sub
add
or
pop
jbe
push
or
jp
bound
popa
push
fistpll
add
ljmp
movsl
push
mov
lock
scas
sete
shr
lret
xchg
xchg
push
ret
inc
imul
xlat
out
mov
ret
adc
inc
xchg
dec
xor
loop
jge
test
stc
in
sti
push
jo
je
cmpsb
pushw
scas
dec
dec
cli
or
or
clc
cmp
adc
mov
dec
push
push
push
jp
sbb
loop
and
adc
loop
movsl
jb
lock
mov
add
push
sbb
jle
xor
shlb
xchg
in
or
ss
ficoms
dec
test
out
mov
ret
dec
es
cmp
test
test
mov
neg
adc
mov
dec
leave
push
js
dec
and
pop
mov
xchg
jbe
pop
lods
xchg
or
mov
in
push
retw
push
xlat
pop
cmp
mov
sub
movsb
outsl
loopne
lcall
cld
or
sahf
push
push
popa
xchg
imul
jmp
std
cld
loop
and
mov
mov
rcll
mov
sub
or
inc
sbb
add
add
mov
and
and
lds
jmp
push
inc
xchg
mov
xchg
pop
push
jle
pop
in
subb
sbb
jbe
jl
xchg
lahf
test
lods
cmp
daa
adc
adc
pushf
aam
add
ljmp
mov
push
lock
xchg
test
decb
pushfw
imull
cmp
andb
dec
inc
cwtl
and
and
stos
popf
icebp
les
sti
out
or
je
pop
xor
xchg
js
mov
push
cld
nop
cmp
and
add
scas
sub
inc
xor
sub
dec
cmp
stos
leave
add
test
movlps
xor
mov
cs
lock
pop
adc
push
leave
rcll
test
clc
pushf
push
pop
mov
jmp
outsb
cmp
mov
scas
jle
mov
adc
into
imul
sub
push
push
sub
mov
dec
addr16
bound
test
dec
popf
bound
imul
fdivp
pushf
push
adc
cs
movsb
gs
adc
mov
aas
and
xor
pusha
inc
add
pop
push
mov
mov
nop
sub
cmp
lahf
pop
nop
jno
cltd
mov
in
and
popa
clc
je
mov
push
and
xchg
lea
fadds
push
push
jb
pop
mov
loopne
jmp
mov
xor
inc
orps
mov
cmp
add
out
in
dec
in
jp
push
scas
xchg
aad
insb
es
mov
ret
push
movsb
add
rcr
inc
and
or
push
pop
pop
nop
mov
les
hlt
cmp
mov
fcoms
cmpsb
dec
push
testb
or
push
xor
jp
ss
ret
jmp
cli
pusha
je
dec
xchg
cmp
rcl
loop
fsubrs
jle
adc
aaa
adc
dec
adc
insb
dec
push
aam
mov
popf
xor
das
enter
nop
adc
ret
js
lahf
cli
xor
mov
push
test
jmp
cmp
and
dec
lahf
sbb
mov
adc
test
cmp
daa
push
push
mov
lea
pop
aas
mov
mov
repz
aam
sbbb
xchg
push
movsl
addr16
test
enter
fmulp
leave
adc
clc
mov
addr16
xor
arpl
mov
dec
pop
out
iret
inc
or
test
cmovs
shr
nop
xor
add
inc
bound
jmp
hlt
lcall
cmp
in
mov
aas
shlb
xlat
fadds
pop
in
and
orl
dec
cmp
fidivrs
pop
stc
mov
ds
addr16
movsb
into
cmp
gs
adc
repnz
sbb
popf
adc
dec
pushf
sbb
push
cmpsl
mov
sub
stos
fildl
or
adc
insl
in
loop
iret
mov
inc
sbb
rol
int3
in
push
or
mov
lret
cmpsb
lret
call
mov
xor
test
lret
stos
dec
fildl
leave
int3
inc
mov
inc
pop
mov
dec
popf
sub
fsubrl
dec
pop
sbb
pop
int3
and
stc
jo
mov
or
lods
outsl
xor
fcom
lods
cmp
lock
clc
add
and
jl
leave
jo
inc
adc
cmp
mov
jecxz
and
call
ret
and
mov
and
and
push
sbb
adc
pusha
sbb
arpl
pusha
gs
mov
pop
xchg
les
fcomps
dec
in
arpl
repz
inc
sub
out
pop
fs
js
inc
lods
cltd
sub
mov
and
std
dec
xchg
pop
sbb
dec
adc
add
adc
push
gs
or
push
sbb
arpl
es
fs
int3
clc
movsb
cltd
hlt
xchg
mov
rolb
ljmp
in
or
loopne
data16
leave
inc
cltd
aam
imul
lret
je
inc
in
mov
leave
test
sarb
in
mov
dec
mov
or
lods
and
test
xor
gs
scas
cwtl
fsubl
lock
fdivs
cwtl
cltd
nop
xchg
lods
xor
mov
stos
rorb
fldenv
shll
inc
aas
out
aas
pusha
and
subb
leave
pushf
jne
ret
mov
scas
addb
add
or
inc
mov
lret
dec
jge
xchg
push
push
push
mov
adc
mov
dec
stos
inc
fs
rorl
push
jo
dec
or
jne
mov
lahf
fptan
lods
std
mov
jo
jl
xchg
dec
jg
push
inc
lods
mov
mov
call
hlt
mov
adc
divl
adc
insb
in
mov
and
adc
lods
aam
mov
jl
arpl
xor
xchg
xchg
notb
jge
nop
and
aam
pop
outsl
mov
mov
mov
call
clc
dec
insb
or
push
sbb
daa
sub
divb
arpl
mov
jo
test
mov
jmp
or
nop
insb
xchg
aam
dec
clc
jo
push
and
sub
dec
repnz
into
popfw
fsubrs
fs
cwtl
xchg
mov
enter
sub
dec
pusha
lret
aad
jp
pop
cmp
inc
addr16
dec
call
mov
nop
cmp
sub
sub
push
xchg
fadd
outsb
call
loopne
pop
or
sub
nop
fs
jle
pop
pop
dec
iret
js
cmpb
mov
push
and
dec
notb
xchg
aad
movsl
jmp
push
lods
shll
aad
fcompl
push
iret
ror
cmp
adc
dec
sbb
adc
pushf
sbb
cld
inc
mov
xchg
pusha
jae
mov
nop
into
adc
xchg
fsubrs
or
xchg
add
or
add
lret
pop
inc
fwait
or
or
or
mov
push
mov
data16
pushf
add
in
and
cmp
push
pop
in
in
dec
clc
iret
mov
loopne
call
hlt
inc
or
sub
inc
stos
and
push
sub
pushf
out
in
mov
mov
fdivs
loopne
call
scas
dec
mov
popa
movsb
sbb
and
push
stos
in
jg
xchg
adc
and
shrb
mov
add
inc
xchg
mov
insb
sbb
sub
cmp
pop
dec
ljmp
js
sbb
mov
jb
in
mov
jbe
sub
or
xlat
inc
clc
fists
lods
push
js
dec
sub
mov
call
imul
enter
jbe
icebp
mov
sbb
push
fidivrs
add
nop
std
push
add
sub
inc
fsubl
dec
aad
mov
jl
insb
mov
and
mov
push
sub
in
movsb
test
scas
movsb
sub
ret
js
dec
dec
mov
pop
sahf
mov
dec
pushf
shlb
lret
dec
les
mov
dec
mov
and
mov
cmpsb
jle
jle
pop
add
dec
xchg
inc
sahf
push
movsb
push
test
mov
cmc
test
adcb
add
rclb
and
in
jl
and
int3
xchg
cwtl
cmp
lock
dec
adc
enter
xchg
mov
pushf
mov
out
daa
repnz
adc
mov
popf
in
jle
dec
mov
dec
stos
or
push
movsl
aam
ror
movsb
xlat
push
xchg
inc
loopne
xchg
orb
and
bound
in
shlb
or
xchg
decb
pop
movsl
mov
aam
jbe
cs
jo
and
rcr
pusha
daa
mov
pushf
rcrb
jmp
in
subb
dec
gs
inc
cmp
inc
fs
mov
push
jb
cld
add
and
in
dec
mov
xor
rorb
int3
jmp
push
inc
jno
pop
adcb
dec
out
sub
pop
inc
repnz
aam
mov
pop
pop
enter
in
adc
inc
pushf
call
xchg
stos
xchg
dec
dec
movsb
je
xchg
popa
cwtl
les
mov
pop
adc
sub
adcb
and
add
sub
out
sub
push
xchg
movsb
dec
dec
int3
and
mov
inc
ljmp
test
mov
loopne
or
pop
and
mulb
pop
add
test
push
lods
pushf
add
aam
call
insb
pop
jg
push
push
pusha
dec
je
notb
in
xchg
shlb
dec
bound
or
push
jb
pop
sub
sub
cmp
and
hlt
jge
sbbb
inc
pop
js
insb
or
popa
insb
mov
fiadds
xchg
sbb
or
jp
cwtl
add
call
adc
movsb
stos
dec
mov
je
es
pushf
call
shrb
pop
sub
sub
xchg
sbb
bound
dec
movsb
dec
add
in
sub
jmp
sub
sub
mov
or
js
popf
pop
mov
and
test
movsb
daa
rolb
mov
push
pop
mov
cmp
call
jo
je
dec
dec
or
pop
jmp
lret
cmp
xchg
ss
xor
sub
mov
fdiv
lock
sub
sub
es
inc
and
and
mov
sbb
add
inc
cld
movsl
jl
xchg
xchg
test
xchg
or
in
sub
or
xor
fcomps
das
test
rol
call
adc
inc
dec
stos
mov
mov
pushf
popf
inc
xchg
xchg
or
and
adcb
pop
pop
adc
push
mov
scas
and
add
jo
sub
or
jl
cld
movsb
mov
add
stos
dec
repnz
out
repz
cs
adc
dec
xor
push
pop
cmp
daa
test
cld
call
adc
push
push
leave
push
icebp
pushf
cmp
in
ja
add
inc
cmp
shlb
push
xchg
mov
jle
dec
add
mov
stos
lret
push
jge
add
outsb
mov
nop
movsb
popa
pop
invd
xor
mov
inc
das
pop
cmc
sbb
mov
or
push
rcrl
daa
lods
pop
push
aam
call
adc
jo
dec
je
xor
dec
add
xchg
in
mov
dec
cmp
mov
addb
push
xchg
sbb
das
dec
ficomps
or
jl
xor
cmp
inc
arpl
daa
mov
movsb
lods
sbb
xor
mov
je
lahf
pop
sbb
push
in
out
pop
stc
js
xchg
xor
push
xchg
insb
inc
mov
dec
gs
dec
sub
xlat
decl
push
je
cbtw
lret
dec
lods
bound
jp
jle
pushf
bound
pusha
mov
pop
pop
movsb
inc
pop
test
mov
pop
in
ds
dec
xor
leave
clc
xor
push
mov
xchg
scas
negb
xchg
movsb
cltd
push
aas
test
aas
fmull
call
add
or
cmp
das
dec
xor
std
sahf
dec
ljmp
mov
xchg
pop
mov
daa
sbb
sub
inc
xchg
sbb
mov
inc
adc
mov
pop
sbb
pop
lods
pop
or
inc
xor
cli
nop
mov
imul
das
lods
jb
xor
fcoml
dec
data16
aam
dec
into
xchg
pop
cltd
shrb
xor
mov
sub
dec
mov
lret
mov
movsb
std
mov
jmp
cwtl
daa
push
lods
push
sub
xchg
imul
ficomps
hlt
aad
loop
jne
mov
mov
cmpb
lret
out
test
imul
pusha
clc
mov
push
movsb
cli
jnp
pushf
sub
jg
cmp
mov
push
mov
sbb
addb
adc
or
enter
mov
sbb
pop
mov
add
cmp
inc
add
add
push
adcl
mov
dec
sbb
sub
xor
mov
adc
fimuls
inc
dec
xchg
pop
adc
or
jo
adc
and
dec
mov
inc
push
call
js
add
outsb
xor
add
fadds
add
clts
sbb
lock
dec
icebp
xchg
dec
and
inc
pusha
xrelease
hlt
and
dec
cmc
xchg
test
testb
fcoms
clc
and
dec
stc
mov
add
inc
sti
cmp
std
dec
push
call
cwtl
or
adc
insb
xchg
xchg
adc
mov
cwtl
or
jg
clc
jo
adc
push
fs
sub
xchg
inc
and
inc
pop
decb
mov
mov
xchg
mov
stc
rorb
sarb
loopne
lock
mov
bswap
and
xor
inc
pop
nop
push
cld
pusha
xchg
jo
and
mov
inc
mov
rcrb
loopne
in
aas
jo
or
adc
nop
and
xor
push
stc
pusha
bswap
jo
inc
xor
pop
nop
mov
sarb
sar
loopne
enter
or
and
xor
enter
push
repnz
pop
nop
jo
addb
adc
or
inc
lods
mov
sti
adc
adc
lock
sbb
adc
mov
in
sbb
rolb
adc
cmp
push
push
and
insb
inc
or
push
adc
psraw
test
sub
cmp
test
adc
fsubs
pop
add
xor
inc
fadd
or
or
je
adc
das
adc
add
cld
xor
fcompl
mov
xor
xor
add
sbb
push
adc
cmp
inc
mov
call
inc
add
adc
inc
dec
cmp
mov
cmpb
dec
sub
inc
or
dec
dec
rolb
rclb
xor
push
adcl
and
sbb
enter
xchg
fdiv
lock
xchg
inc
repz
addl
inc
or
enter
dec
adc
or
inc
sbb
and
jp,pn
int3
pop
push
and
push
sbb
cltd
xor
inc
adc
dec
sub
push
adc
dec
inc
push
pop
dec
jb
xor
push
test
dec
push
sbb
jne
ss
inc
adc
or
inc
push
mov
or
xor
dec
gs
cmpsl
mov
push
inc
sbb
dec
fldenv
fnstenv
pop
inc
push
adc
push
or
dec
xor
dec
xor
pop
sub
pop
sbb
lret
add
incw
loope
mov
xchg
add
or
xor
add
or
adc
mov
pop
fs
cmpb
inc
add
add
cld
xor
clc
sbb
cmc
lock
clc
loopne
rcrb
cld
or
inc
aas
or
popa
wbinvd
out
sbb
jbe
pop
add
mov
xor
or
or
or
adc
jo
add
push
cmpsb
adc
add
imul
push
inc
out
out
sbb
inc
fwait
testb
fisttps
and
cmp
rolb
add
loopne
ret
add
lar
pop
add
aas
sbb
and
lcall
add
lock
xor
mov
sbb
lods
cmp
lods
add
aaa
and
jne
or
mov
mov
mov
or
mov
pop
add
incb
lock
and
or
dec
pop
adc
ret
hlt
jb
and
dec
aas
xchg
jg
fwait
aas
jmp
and
pop
inc
nopl
ss
cltd
or
int
loopne
adc
mov
aas
in
or
and
or
add
add
das
add
jg
loopne
out
rcrb
add
sub
adc
test
pusha
and
clc
lcall
push
xor
jo
rolb
loopne
insb
and
sbb
test
add
sub
shlb
sbb
inc
aaa
test
add
lea
in
or
adc
test
ret
incb
adc
inc
inc
xor
cmp
inc
orl
pop
push
cld
add
cmp
push
fdivl
push
gs
fmull
add
adc
pushf
cli
dec
sbb
out
xchg
outsl
jg
or
cmp
rcr
add
add
add
out
inc
addl
sbb
xor
xchg
sub
pop
pushf
jnp
incl
in
and
jb
xorl
dec
and
sbb
sbbl
add
test
pop
sbb
xchg
or
loope
aas
pop
or
and
adc
push
repnz
andb
adc
nop
add
rolb
adc
inc
into
adc
push
aad
nop
add
adc
sub
cmp
addl
xor
repz
fisubl
xor
adc
and
clc
std
push
push
and
dec
adc
and
lret
inc
cmp
or
sub
mov
xchg
daa
or
mov
adc
push
adc
mov
adc
dec
pop
mov
and
enter
pop
cmp
adc
pushf
subl
pushf
sub
inc
sbb
mov
cmp
test
inc
mov
in
rclb
xchg
inc
jno
or
inc
and
cmpl
cmp
loop
xchg
cs
and
push
sub
sub
cltd
and
dec
sub
sbb
subl
cmp
push
cmp
or
sub
add
mov
xor
and
and
sub
cmp
std
fwait
and
push
ljmp
adc
xchg
mov
sub
push
sbb
sub
insb
and
push
incb
sub
sub
call
and
mov
mov
adc
inc
mov
mov
aam
rclb
sbb
ja
dec
xchg
xor
into
xor
or
push
inc
push
adc
mov
outsl
pop
sub
adc
aad
cmove
mov
sub
mov
out
in
xchg
push
cmp
sub
incl
mov
push
sbb
pop
repz
or
scas
sub
dec
rcll
mov
repz
mov
inc
arpl
mov
inc
sub
out
mov
xchg
sub
subl
sbb
inc
les
sub
push
xchg
push
mov
sub
xor
sub
sbb
sbb
in
mov
inc
adc
push
arpl
mov
aaa
adc
out
push
ja
repz
jno
dec
jecxz
xchg
lds
add
mov
mov
and
jmp
int3
sbb
push
add
dec
sub
add
pop
mov
movsb
arpl
cmp
or
cmpsb
arpl
and
mov
data16
mov
lahf
cli
adc
push
inc
sub
or
hlt
xor
cmp
sbb
ljmp
stos
xor
icebp
cmp
inc
jbe
jg
mov
and
int3
sub
stos
inc
mov
dec
adc
mov
and
push
mov
and
xor
jns
inc
aas
lret
test
mov
stos
test
in
arpl
inc
repnz
inc
std
jae
mov
dec
decl
sahf
movsl
mov
adc
and
adc
cltd
mov
les
dec
inc
fs
sbb
cld
cmp
xor
sbb
sub
sub
add
mov
mov
or
jnp
dec
clc
or
sub
daa
xor
xchg
sub
in
dec
stos
adc
dec
cli
lods
adc
negb
push
and
mov
jle
adc
daa
xor
cmp
sub
test
clc
mov
jecxz
out
in
sbb
mov
jmp
adc
cmp
sub
cltd
add
inc
call
mov
sbb
cmp
nop
mov
into
adc
dec
dec
inc
cmp
ja
sub
mov
sub
mov
pop
mov
sub
cmp
in
or
mov
xor
lret
push
sub
sub
adc
fistps
in
push
sbb
xor
mov
mov
dec
sub
cwtl
adc
xchg
aas
push
sbb
sub
adc
imul
jne
sub
sbb
adc
mov
sbb
pop
jns
xor
xor
mov
mov
in
fisubrl
icebp
outsl
or
mov
in
clc
xor
sbb
data16
fwait
lret
adc
cwtl
or
stos
frstor
mov
cli
adc
lods
mov
stos
jecxz
aas
fists
xor
add
sub
or
add
lcall
push
mov
xor
add
adc
pop
pop
add
jb
inc
inc
xor
jnp
jne
jecxz
std
loope
int3
ffreep
repnz
pop
stc
aam
adc
int3
cmpsb
cmpsl
nop
xchg
add
fiadds
or
fs
adc
pop
std
fnstsw
aad
lods
add
cmpsb
cld
into
lahf
cli
leave
cwtl
sbb
les
lods
jle
cli
out
adc
mov
xchg
nop
in
xchg
enter
mov
nop
add
nop
cmp
nop
fdivs
out
loop
jmp
iret
sub
fnstsw
xor
push
notb
xchg
es
sub
mov
insb
pop
add
call
cld
fiadds
sar
mov
sub
pop
mov
mov
and
out
pop
mov
sbb
adc
inc
xor
mov
and
adc
mov
cmpl
push
xchg
xor
cmp
notl
push
inc
nop
and
loope
mov
xchg
popa
jmp
call
loop
add
xor
push
nop
xor
xor
es
pop
cmc
shlb
nop
mov
xchg
nop
or
stc
repz
and
xor
movsl
add
adc
inc
xor
enter
and
icebp
and
mov
and
mov
stos
nop
pop
sti
test
cli
std
aas
div
xchg
hlt
ljmp
rcll
or
jb
push
icebp
add
add
push
nop
movsb
xor
sbb
notl
pop
sub
mov
inc
nop
dec
xor
je
xor
inc
repnz
mov
jl
mov
add
push
repnz
add
or
xor
fs
lahf
xor
int3
xchg
outsl
nop
mov
mov
xchg
test
dec
xor
insl
add
push
mov
xchg
mov
push
jbe
or
es
stos
or
mov
and
inc
cltd
mov
adc
sbb
xchg
jae
mov
push
xchg
add
gs
movsb
popa
xor
mov
add
scas
jo
mov
xor
mov
mov
add
xor
xor
nop
mov
add
fmull
xor
mov
pushf
call
pushl
dec
xor
inc
nop
push
mov
xchg
mov
imul
add
nop
jecxz
dec
shll
mov
xor
and
hlt
insl
add
xor
stos
inc
add
loop
fbstp
roll
mov
xor
add
movsb
xor
nop
repnz
xor
nop
hlt
xchg
xor
pop
nop
and
pop
and
inc
xor
add
jmp
inc
add
outsb
add
add
lcall
bound
pop
add
testb
add
nop
pop
pop
aam
je
push
lea
add
mov
jbe
in
fdivrp
jo
clc
xor
loope
cmp
or
add
fldl
inc
loopne
or
fiaddl
adc
mov
add
out
clc
pushf
popa
jmp
hlt
push
in
push
lds
shl
fsub
movsl
cwtl
or
pop
cmpsl
add
nop
mov
mov
jmp
movsb
scas
add
shlb
add
lock
ret
nop
rorb
jmp
mov
cmc
rcl
fcoml
add
mov
add
mov
add
or
push
lret
push
or
mov
lock
adc
shr
mov
fstl
nop
adcb
push
leave
dec
ljmp
in
pop
rorl
add
mov
and
cmp
mov
adc
ljmp
mov
xchg
push
lret
add
rorl
adc
adc
loope
inc
or
outsl
mov
jb
mov
add
subb
loop
js
xchg
cmp
stos
sub
flds
addb
mov
and
cs
adc
stos
sub
add
add
repnz
aam
add
out
nop
outsl
cli
hlt
in
and
loopne
out
loop
sub
inc
lret
xchg
and
fiadds
pushf
mov
out
xchg
addb
ret
cmp
repnz
fistps
popf
push
nop
shrb
imul
nop
sti
clc
repz
div
adc
lock
mov
sbb
or
xchg
cltd
iret
add
cmp
out
loope
loopne
xchg
adc
inc
nop
adcb
lods
xchg
pop
rcll
cmc
push
icebp
xchg
xor
dec
sub
mov
xlat
rcrl
clc
jno
notb
aad
mov
stc
add
inc
add
int
push
fwait
shlb
inc
adc
dec
mov
xchg
add
cmc
push
shl
adc
icebp
cmp
stc
addr16
add
mov
pop
add
nop
and
add
js
or
clc
mov
jb
movsb
pop
push
or
push
jmp
pop
movsl
loope
nop
push
lret
push
arpl
xchg
and
nop
add
push
sub
jle
stc
pop
xchg
adc
add
nop
and
nop
shl
add
nop
push
xchg
add
nop
test
mov
mov
nop
rorb
or
mov
sub
in
loope
fbstp
xchg
push
dec
dec
xor
add
or
lea
aam
xchg
mov
fnstcw
nop
cwtl
pop
jae
jecxz
xchg
fs
nop
outsl
add
jmp
mov
push
push
movsl
add
js
nop
add
add
mov
js
nop
sub
and
xor
stos
cmp
stos
and
nop
xchg
loopne
dec
std
or
cli
test
push
xchg
and
sub
jmp
loop
jne
xchg
aad
sbb
leave
std
into
or
test
test
hlt
or
and
add
lods
rorl
jmp
cmc
jge
or
mov
dec
and
aas
cmp
and
add
or
roll
loop
jmp
movntps
and
adc
js
xor
adc
mov
fsubl
or
xchg
scas
inc
or
or
add
std
cmp
or
inc
jo
pop
dec
inc
fistl
push
call
dec
mov
and
andl
or
outsb
sub
jo
cwtl
push
jo
push
data16
inc
mov
pop
add
sbbb
push
insb
subl
ss
jno
gs
orl
sub
je
jbe
dec
sub
inc
sub
and
sbb
arpl
push
sub
sbbl
dec
or
cltd
je
outsl
nop
sbb
or
jo
cmpsb
rclb
test
addr16
jno
jne
mov
add
stos
dec
pushf
xor
cs
aaa
xchg
stos
dec
mov
addr16
movsb
adc
data16
cmpsb
xchg
dec
or
shlb
insb
inc
adc
flds
push
and
adc
and
jae
sub
shrl
sub
add
xchg
jne
je
mov
jns
dec
jo
push
hlt
insb
lcall
fsubrs
movb
mov
dec
les
lea
push
fimull
adc
int3
inc
and
mov
jg
inc
outsb
nop
fisubrl
outsl
lods
stc
or
inc
xor
dec
adc
std
or
inc
xor
add
dec
jp
sbb
movsb
aam
fstl
lret
and
push
pushf
inc
aas
inc
add
imul
push
or
xchg
dec
sub
adc
loope
fdivrs
movsb
addb
cmpsb
inc
fwait
sahf
xor
add
mov
xchg
dec
mov
jp
loopne
xchg
add
cld
insb
xchg
insl
gs
scas
in
pop
lods
cmp
xor
sbb
sub
or
pop
push
roll
mov
jb
cltd
ss
popa
inc
into
xchg
push
inc
es
popa
push
push
adc
jno
xchg
inc
cs
fiaddl
lds
inc
push
xchg
hlt
mov
add
pop
adc
lods
movsw
les
test
bound
pusha
mov
push
dec
nop
dec
movsl
cwtl
shlb
dec
cmpsb
lret
fs
jo
pusha
xor
bound
dec
fs
sub
cmp
and
pop
dec
add
push
or
shrb
sahf
add
dec
loopne
scas
lcall
pushf
popa
push
adc
jo
dec
add
rcrb
cltd
ds
inc
push
leave
insl
insb
dec
ss
push
push
je
mov
scas
in
mov
pop
fwait
stos
xchg
mov
add
pop
inc
pop
add
lods
dec
fwait
sub
inc
dec
dec
push
out
xlat
push
xor
es
imul
icebp
push
push
and
rorb
sbb
xor
scas
out
mov
sbb
les
jbe
xor
fisubrs
sub
sbb
and
test
dec
adc
popa
cmp
inc
push
mov
leave
daa
fwait
jp,pt
xchg
test
data16
mov
mov
sbb
push
bound
popa
movsb
in
mov
dec
nop
cltd
call
clc
or
insl
movsb
dec
je
dec
popa
fwait
xchg
mov
test
xchg
inc
jno
dec
bound
cmp
jbe
mov
mov
xchg
insl
je
adc
shlb
cmp
sub
lret
jp
les
imul
lods
dec
ret
movsb
lret
dec
sub
pop
xor
sbb
loop
outsb
lock
insb
xor
push
cmp
outsb
sbb
rcll
sub
fwait
xchg
mov
popa
out
test
daa
cmp
jae
lock
mov
sub
add
es
ret
or
lret
jl
push
inc
or
ffree
or
sbb
xor
imul
jo
add
push
arpl
rcrb
xchg
nop
push
xor
push
icebp
or
jo
addr16
add
mov
aaa
scas
or
inc
add
test
andb
mov
cmp
adc
bound
outsb
xchg
test
inc
add
or
cs
cmp
and
inc
je
enter
sub
mov
nop
jl
mov
or
push
lods
les
popf
mov
std
sbb
ret
aam
dec
add
movsl
mov
insb
mov
cmp
addb
xchg
bound
push
adc
rcr
sbb
and
pop
xchg
xchg
addr16
sub
imul
dec
cltd
sbb
and
mov
jb
lds
mov
xor
and
cs
imul
ss
bound
test
cwtl
lock
mov
roll
mov
data16
loope
xor
sub
arpl
inc
lret
sbb
imul
roll
sbb
jp
cs
js
xchg
sub
in
cmpsb
add
sub
sub
inc
mov
mov
lds
lods
dec
int3
mov
adc
hlt
adc
or
mov
data16
rol
sub
dec
sub
add
jno
daa
ss
addr16
xchg
movsl
sbb
add
dec
sub
movsl
xchg
or
data16
inc
xchg
adc
xor
sbb
sub
sub
cltd
aam
int3
pop
push
push
rcll
sbb
pusha
cmp
push
lods
and
inc
gs
sbb
ds
dec
imul
ja
jb
hlt
push
int
sbb
and
push
cltd
or
outsb
push
pop
ja
dec
loop
je
sbb
push
push
sbb
hlt
loope
sub
mov
mov
arpl
popa
test
enter
shlb
jbe
cmc
and
shlb
dec
mov
hlt
loop
rcr
mov
pop
movsb
push
xchg
push
mov
insb
cltd
sahf
inc
or
push
mov
and
lds
mov
rorb
and
xchg
adc
dec
js
and
lret
sbb
push
shl
mov
xchg
pop
mov
and
es
je
inc
jb
scas
xchg
adc
mov
sub
icebp
adc
push
xor
jns
das
sub
sbb
dec
xchg
mov
call
inc
and
or
mov
cmp
xorl
inc
push
out
lret
mov
in
dec
sub
fs
aaa
push
jp
xor
xchg
mov
xor
push
and
aam
xor
push
dec
ret
inc
pop
mov
cmp
xchg
hlt
mov
mov
fnstenv
shlb
dec
push
les
fsubrl
insb
sub
pushf
add
fsubrp
pusha
push
sbb
sbb
adc
pop
jle
loop
push
fdivp
loop
insl
sub
cmp
sub
xchg
pop
movsl
xor
jecxz
and
data16
mov
mov
cs
or
movsb
es
sbb
xor
xchg
fidivl
push
cli
movsb
xor
sub
pop
and
in
push
or
rclb
mov
mov
mov
outsb
jb
outsb
call
in
sub
push
nop
fwait
enter
leave
push
adc
push
cmpsb
and
lods
jo
sbb
jmp
insl
cltd
jo
pushf
adc
aam
push
mov
bound
sub
xchg
cmp
pop
lods
push
cmp
sub
jo
mov
ja
push
adc
adc
cmp
sub
repnz
push
popa
cmp
ss
add
or
adc
cs
les
pop
sub
cs
sub
in
sbb
xchg
dec
sub
int3
repnz
inc
pushf
cmp
pop
mov
mov
cs
es
add
mov
mov
hlt
int
sub
xchg
lock
cmp
fwait
and
pop
dec
popa
jns
dec
dec
cmpsb
xor
mov
sbb
dec
cmp
dec
inc
add
jno
in
sbb
sub
pop
loopne
mov
pop
push
sub
daa
daa
je
lock
push
pop
mov
jb
notb
inc
mov
je
inc
push
popa
dec
outsb
and
jb
inc
mov
je
dec
bnd
sub
dec
rclb
sub
pop
pop
jmp
in
cmp
inc
jl
dec
sub
dec
mov
cld
jmp
shll
aad
mov
xchg
fisubrs
lret
jne
add
fisttpll
in
sub
and
sub
xchg
push
add
outsb
insb
scas
mov
nop
pop
push
lret
insb
or
scas
mov
xchg
xor
adc
jae
adc
repnz
aam
pop
pop
outsb
sub
and
fsubs
dec
and
sbb
adc
xchg
push
and
mov
xchg
pusha
jge
adc
mov
in
jns
cmp
in
xchg
pop
fldl2e
cmp
data16
cs
adc
int
mov
cmp
jge
lret
gs
adc
cltd
dec
outsb
dec
adc
or
jb
lret
push
inc
or
sbb
icebp
sub
arpl
inc
adc
adc
mov
push
cmp
gs
push
dec
push
outsb
adc
and
and
add
int
jnp
push
mov
shlb
xor
mov
cmpsb
and
xchg
hlt
xchg
jo
incb
inc
push
xor
insb
inc
and
inc
mov
mov
bound
add
mov
or
or
add
adc
jae
xchg
notb
mov
pop
adc
cld
mov
pusha
dec
int
addr16
inc
mov
fisubs
xor
fs
gs
jns
mov
push
bnd
adc
pushf
dec
mov
push
cmp
mov
push
or
push
push
clc
leavew
insb
int
ds
ret
je
and
mov
jo
es
mov
mov
mov
vpscatterdd
rcrb
push
imul
jp
jbe
sub
or
push
in
mov
loope
dec
xchg
and
and
movsb
jle
add
adc
mov
inc
js
jbe
dec
je
add
push
movsb
jmp
mov
imull
jo
push
push
sub
insb
mov
negb
cltd
cld
jp
loop
push
test
shrb
push
ljmp
adc
mov
push
push
push
xor
dec
or
cli
dec
ds
adc
data16
mov
mov
int3
adc
fcomps
call
dec
sbb
mov
into
das
push
cmp
das
mov
lea
pop
fmull
es
js
adc
mov
cmp
lret
pop
out
mov
sbb
cmpsb
bnd
pusha
jmp
cld
scas
jbe
cmpsb
lds
xchg
cmp
dec
cltd
in
push
jo
dec
inc
add
imul
mov
cld
mov
lods
popf
adc
push
jp
xchg
and
inc
in
dec
push
sbb
negb
clc
shlb
mov
xor
dec
push
repnz
cmp
lods
insb
fdiv
sub
sbb
mov
jns
pop
lret
push
les
push
mov
sub
push
je
sub
pop
scas
and
movsl
jns
leave
ret
dec
sub
adc
xor
sub
out
mov
das
lcall
das
inc
sbb
inc
and
lods
shl
cmp
movsl
outsl
xor
or
scas
ljmp
xor
push
pop
and
lods
insl
mov
out
xchg
stos
in
sahf
into
add
push
push
test
add
sub
out
outsb
ljmp
lods
and
or
fs
mov
sbb
dec
or
loop
inc
mov
movsb
out
dec
cmp
repnz
push
xchg
cmp
sti
bound
xchg
cltd
sub
sub
push
dec
loope
or
popa
jp
fs
sub
fucomi
adc
xchg
rolb
sti
cld
and
xchg
mov
push
pop
pop
or
leave
sub
in
iret
shlb
jb
adc
loopne
inc
aas
dec
sbb
push
push
mov
mov
inc
dec
dec
shrb
outsl
sub
dec
in
movsb
xlat
jge
or
mov
cmp
xorb
repz
push
add
fwait
cmp
mov
or
dec
inc
dec
lds
jmp
add
cmpsl
push
imul
mov
insl
enter
dec
outsb
imul
outsl
ja
subl
xchg
sbb
push
xlat
inc
cmp
popa
repz
and
dec
inc
outsl
outsb
mov
dec
add
push
cltd
imul
push
clc
push
jle
push
imul
adc
pusha
stos
sbb
insl
popa
sub
adc
mov
jnp
pop
xchg
xchg
jecxz
inc
sbb
inc
rorl
sub
xchg
stc
and
sbb
push
push
test
xor
jbe
pop
xor
xchg
mov
mov
insl
cmp
push
sub
mov
mov
push
shr
push
lret
shll
inc
push
popa
hlt
imul
inc
push
insl
and
cmpxchg
outsl
xchg
adc
fdivl
fstl
or
call
adc
cltd
jb
push
dec
data16
and
inc
jle
pushl
insl
adc
dec
imul
sub
mov
arpl
roll
adc
inc
jb
jmp
inc
popl
xchg
push
inc
xor
fistpll
push
mov
bound
add
mov
sub
lea
hlt
mov
adc
mov
outsb
movsb
es
pop
adc
sub
xor
imul
mov
cltd
jne
mov
inc
psignd
inc
xchg
jne
adc
mov
sbb
leave
inc
cmp
sbb
clc
or
js
insb
adc
nop
std
and
arpl
mov
xchg
push
inc
fsubrs
fs
fildl
mov
inc
std
xchg
andl
rorl
and
dec
in
jo
std
push
ja
ljmp
xchg
pop
add
out
sbb
sbb
enter
dec
pusha
sbb
sbb
jecxz
jmp
sbb
outsl
adc
js
fldl
fists
xor
push
pop
outsl
dec
ja
dec
sub
imul
inc
sbb
sbb
arpl
push
inc
mov
inc
jb
daa
aaa
pop
inc
pop
jns
rorb
arpl
sar
sti
popa
pop
and
and
sbb
inc
push
imul
bound
int
sbb
sbb
sbb
in
fdivl
or
js
mov
mov
mov
jp
nop
mov
mov
popa
mov
xlat
sbb
sub
dec
or
pop
sbb
xchg
pushf
jno
inc
nop
xor
call
adc
loopne
movsl
adc
sbb
pop
push
dec
leave
roll
jl
insl
bound
arpl
xlat
fdivrl
addr16
imul
mov
inc
xor
pop
ret
dec
and
scas
push
push
loopne
xchg
fsubl
xchg
inc
cmp
sub
cmp
je
nop
out
popf
dec
and
fs
cmp
out
jo
xchg
cwtl
adc
cs
adc
in
pop
dec
fs
adc
sbb
pop
sbb
pop
imul
xorb
adc
jo
sub
out
mov
dec
or
xor
test
dec
sub
mov
mov
push
es
mov
ja
or
sub
jns
pusha
lea
imul
popf
out
nop
lock
inc
push
cmpsb
push
dec
testb
je
inc
xchg
inc
mov
into
inc
or
xchg
inc
sbb
data16
push
push
jg
fnstenv
push
loop
mov
and
push
mov
std
adc
jns
lods
lcall
cmp
das
das
mov
icebp
cmp
arpl
push
jbe
call
pop
cmc
test
ss
pushf
sub
pop
push
test
arpl
std
push
adc
inc
inc
push
enter
jne
repz
pop
xchg
test
push
pop
mov
insb
sbb
cmp
jge
bound
insb
push
pop
or
rclb
movsl
mov
add
insb
inc
or
lcall
add
nop
add
add
cmp
push
add
inc
push
xor
mov
sbb
movsb
dec
out
mov
mov
int
and
mov
addl
insl
in
nop
cmpsb
cli
bound
jmp
outsb
repz
or
add
xor
or
enter
inc
sub
loopne
mov
sbb
test
dec
push
mov
xor
sub
or
xor
mov
jbe
mov
xchg
pop
push
loop
divb
sub
adc
xlat
add
inc
inc
orb
ret
mov
inc
add
and
pusha
inc
inc
jb
mov
cld
test
pop
rolb
or
in
or
lock
sbb
ja
shrb
fs
lret
xchg
hlt
and
in
sub
and
jb
bound
cld
adc
adc
test
jae
arpl
call
sub
shll
stos
push
add
push
add
int
sbb
sub
pop
movsl
dec
and
mov
or
inc
rol
mov
shlb
push
fmull
daa
inc
stos
jmp
xor
xor
mov
inc
sub
adc
xor
or
adc
clc
push
lock
or
sbb
mov
and
xchg
enter
mov
in
jb
cltd
sbb
or
cmpsb
sbb
adc
les
call
andl
mov
or
std
pop
test
xor
cltd
or
mov
sbb
mov
and
push
xchg
cmpl
jne
push
push
call
enter
or
xor
pop
lret
faddl
add
rorb
lea
rcrb
sbb
push
add
cli
fs
out
iret
adc
push
pop
nop
in
mov
hlt
pop
je
repnz
call
cwtl
dec
mov
sbb
push
add
or
adc
cltd
bound
inc
test
add
mov
push
lret
xchg
dec
mov
nop
push
xchg
icebp
repz
test
loop
jp
js
mov
nop
pop
cmp
push
or
jns
adc
jne
add
call
inc
mov
sub
or
inc
add
adc
and
jne
sbb
pop
cli
fistps
cmp
jne
clc
vandps
lahf
test
pop
pop
pop
mov
inc
pop
clc
mov
cltd
cmp
lock
inc
into
add
psubsb
loope
ret
int
bound
and
sbb
insb
add
or
jnp
add
jmp
mov
add
pop
and
loop
cli
sub
or
fisubrl
in
jl
jmp
fs
or
inc
jb
jmp
xchg
cmp
xor
nop
push
xchg
mov
leave
lock
mov
ret
or
pop
mov
stc
pop
jbe
out
adc
pop
jne
push
dec
shlb
mov
test
pushl
sarl
adc
and
mov
push
call
mov
mov
and
popa
push
stos
push
lods
or
mov
and
adc
scas
inc
jo
in
movsb
dec
adc
in
jecxz
or
add
jmp
in
sbbb
add
cmc
sub
clc
sbb
and
jae
xchg
out
ja
repnz
dec
add
fidivs
push
sbb
jbe
imul
jne
stos
jae
xchg
jne
rorb
sbb
sti
sbbl
pusha
popa
add
adc
push
sbb
rolb
adc
sbb
adc
sub
scas
mov
ljmp
add
lret
rcrb
loop
or
dec
sbb
or
inc
cmc
xor
pop
sarl
add
xor
fstp
clc
call
add
push
pop
inc
adc
sub
test
shrl
jmp
adc
mov
mov
or
imul
or
out
push
xor
jmp
add
dec
leave
dec
clc
xor
cmovno
and
mov
or
out
fiadds
call
inc
mov
dec
adcl
push
lret
inc
je
mov
call
out
ror
pop
aam
dec
cmp
push
jg
dec
and
and
fistpll
mov
jmp
sbb
sub
test
xor
leave
and
movsb
das
jle
pop
int3
mov
xor
pop
movsl
pop
and
push
call
out
aaa
sahf
adc
cli
adc
xchg
in
add
xor
push
cmc
add
mov
lea
jno
adc
xchg
push
call
mov
xorb
aaa
or
leave
inc
xchg
inc
push
mov
xchg
sahf
jl
cmpsb
dec
nop
mov
call
jmp
imul
jne
and
insb
cmpsb
jp
movsb
and
cmpl
sub
dec
inc
dec
rorl
push
push
mov
push
pop
dec
dec
and
and
mov
inc
lds
xchg
test
or
cmp
jae
testl
jnp
push
jns
mov
jecxz
add
pop
sub
ret
lods
mov
cmp
inc
xchg
pop
movsl
adc
pop
notb
repnz
mov
xchg
jnp
pop
mov
pop
subl
sbb
js
pop
pushl
xor
sub
inc
push
fsts
jle
dec
adc
mull
push
loope
clc
cvttps2pi
mov
cmpl
jp
popf
mov
add
hlt
inc
daa
cmp
in
mov
mov
movb
sbb
pop
push
cmc
xchg
inc
xchg
and
mov
push
fisttps
sysenter
test
aad
shlb
sub
enter
adc
xchg
adcb
push
push
and
cmpsl
cmp
aad
cmp
leave
out
add
je
pushf
xor
adc
pop
shr
fnstcw
inc
jns
and
lahf
pushf
in
fistpl
adc
add
cmp
adc
dec
or
jg
add
sbb
add
adc
add
xlat
inc
int
hlt
jmp
dec
pop
inc
fiaddl
sbb
hlt
cmc
mov
adc
popf
and
dec
jmp
es
in
add
jb
add
or
cmp
es
push
lcall
les
js
sub
adc
add
add
lods
sbb
jl
inc
xorl
or
or
addl
add
es
in
jg
add
scas
test
popa
outsb
or
push
aam
add
fwait
push
or
add
andl
insb
xor
test
cmpsb
sub
add
ficoml
push
xor
scas
enter
test
popf
bound
testb
push
and
cmpsl
jb
sub
push
adc
or
xlat
jge
add
push
pop
cmpsl
mov
xor
mov
or
inc
pop
xlat
clc
neg
and
test
jne
iret
repz
xor
jae
addr16
or
dec
cmp
fadd
mov
xchg
pop
test
call
aaa
sub
movsl
jg
aad
cmp
sarb
leave
fiadds
jne
cmp
pop
je
cmpsl
jnp
jmp
pop
adc
push
inc
out
adc
insb
and
test
fstpt
aad
imul
cmpsl
or
or
call
jl
ret
pop
rcll
adc
or
dec
sbb
repnz
inc
push
add
sub
cmp
lretw
or
or
mov
shlb
lcall
pop
rcrl
lahf
sbb
jmp
sti
cltd
inc
adc
insb
stos
cmp
fs
cmp
jl
mov
adc
ja
mov
inc
rorl
inc
jle
or
cmp
mov
test
sub
rcl
sbb
add
adc
sub
xor
andb
nop
mov
lea
and
jg
cld
call
and
and
push
les
push
mov
clc
pop
and
fdivs
or
out
sub
add
inc
add
add
or
xchg
je
or
add
call
lret
inc
xchg
adc
and
out
adc
jmp
cmpb
add
adc
shl
sahf
aam
icebp
adc
repz
dec
and
jge
sub
inc
add
pop
and
mov
bound
lea
mov
xor
stos
mov
cmp
push
sbb
addb
jbe
ljmp
mov
adc
data16
mov
inc
jle
or
mov
arpl
pop
je
jle
jmp
fcoml
or
fwait
aad
jne
sbb
jmp
cmp
dec
aaa
movsb
sub
mov
xchg
movl
and
xor
icebp
pop
and
mov
ss
dec
movl
fs
rcll
add
xchg
xor
sar
inc
mov
in
cmp
sbb
dec
jle
pop
gs
push
push
xor
cmpsb
das
add
call
je
out
pop
clc
adc
or
jmp
ror
push
push
inc
xor
and
add
out
cmp
sti
fidivrl
add
xchg
jg
mov
push
aad
movb
scas
inc
inc
sbbb
sbb
add
jl
hlt
jmp
es
lret
cmp
jbe
dec
dec
mov
dec
dec
pop
or
imul
nop
jmp
sbb
adc
mov
jg
dec
sub
cltd
pop
inc
or
in
lcall
push
xor
sbbb
pop
mov
cmpsl
cmpb
push
pop
cltd
mov
nop
dec
push
ss
cli
cltd
loopne
xchg
inc
pop
ja
push
cwtl
clc
or
jmp
test
outsl
dec
mov
stc
aam
idivb
ret
add
sbb
sbb
or
mov
cmp
add
call
popa
or
call
or
orl
pop
sbb
scas
xchg
ja
loop
cmp
cmp
sub
sub
adc
sbb
add
stos
movsl
and
push
mov
test
je
cmp
test
add
cld
and
add
orl
test
mov
out
js
push
or
jge
adc
or
icebp
adc
bound
rorl
stos
cmp
pop
inc
pop
loop
xchg
pop
mov
or
out
and
jae
xlat
in
loope
or
lds
enter
or
add
insl
out
loope
orl
sub
repnz
jne
js
adc
add
add
dec
add
dec
push
or
sub
or
add
cmc
push
adc
add
fistps
test
add
pop
sub
cmp
jmp
xor
jns
inc
test
and
jl
sub
push
sbb
push
sub
inc
push
movsb
cs
dec
sub
es
mov
pop
stc
dec
aad
xchg
fists
ret
das
lods
clts
cmp
scas
clc
fisubl
cltd
test
rcll
rorb
out
cmp
movsb
loop
push
ds
cs
or
xchg
cmc
lret
xor
je
xorl
adc
jl
movsb
lret
repnz
adc
jns
or
out
and
add
in
fildl
test
or
add
pop
cld
jmp
sarl
adcl
sub
adc
test
xchg
add
xchg
test
test
add
xchg
call
ret
nop
add
in
test
leave
push
jle
lcall
test
mov
dec
add
mov
je
xor
rorb
test
leave
je
sbbb
push
xor
pop
or
sbb
add
push
jmp
inc
dec
xor
jmp
add
gs
rolb
xor
out
nop
mov
add
and
imul
jecxz
adc
sub
add
push
lcall
jo
jne
ret
in
push
pop
call
mov
adc
push
sub
cmp
cmpl
shlb
and
push
pop
add
imul
nop
les
dec
ret
and
xchg
test
cmp
ja
je
das
add
sub
movsl
inc
and
out
movsb
nop
imul
mov
sbb
std
lcall
inc
cld
adc
pushw
jecxz
addb
cmovns
or
inc
cli
fsubr
sbb
push
inc
push
je
pop
sub
push
jle
add
add
lea
mov
mov
paddusb
ja
int3
push
jle
divb
xlat
jb
into
or
ja
ret
and
or
jmp
int3
lock
dec
or
cmp
push
add
adc
jmp
mov
in
mov
shr
je
nop
cli
cld
sbb
fnstenv
dec
les
pop
mov
cmp
inc
or
ret
in
jmp
push
dec
outsb
push
imul
add
push
or
or
push
jns
cmp
sti
fs
cmp
dec
sbb
mov
cmp
call
shr
dec
cld
lods
sbb
lret
push
dec
test
fstpt
mov
inc
nop
in
push
and
sbb
sub
sub
pop
and
js
pop
aas
pop
mov
inc
sub
xor
and
add
or
and
ja
cmp
and
dec
fcoms
push
out
dec
add
aam
push
jmp
incb
dec
pop
js
pop
sub
loope
inc
mov
incl
push
sub
test
add
xchg
and
jbe
adc
addb
or
add
and
or
lcall
in
inc
xor
push
repz
fs
sub
orl
addl
dec
je
aad
add
adcl
loop
scas
loopne
fldt
ficomps
call
or
je
sbb
clc
into
add
inc
and
add
jmp
cld
mov
inc
scas
inc
adc
cmp
and
or
adc
sub
pop
push
fstp
dec
stos
xor
inc
adc
fldz
enter
cmp
jg
and
test
add
pushf
or
push
ret
nopl
hlt
adc
adcb
and
out
sbb
pusha
inc
xchg
and
mov
movsl
aam
loopne
fisubl
sub
test
hlt
and
mov
or
mov
xor
add
mov
and
cs
jge
jbe
imul
dec
sub
xchg
xor
mov
add
add
xlat
fadds
lods
outsb
xor
and
or
push
push
in
add
into
sbb
rorl
mov
cmp
cmp
sbb
push
sarb
mov
hlt
daa
lret
into
pop
rolb
cmp
sbbl
xlat
pop
mov
addr16
add
leave
repnz
bound
and
cmp
mov
sub
imul
mov
mov
stos
add
mov
sbb
push
mov
pop
out
sub
inc
imul
pop
divl
jl
xor
cmp
pop
call
mov
add
push
inc
mov
push
pop
sbb
sarb
bnd
test
nop
fildl
daa
movsb
lahf
mov
pop
stos
clc
scas
pop
adc
mov
add
sub
repz
jmp
dec
jp
iret
call
add
fdivrs
mov
add
cmpsb
scas
mov
pop
or
jne
xchg
jbe
dec
dec
in
add
mov
push
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
std
repnz
and
repz
mov
fldl
mov
add
les
aad
bound
xor
outsl
repnz
enter
shr
inc
popl
sbb
add
and
or
xchg
loop
nop
repnz
mov
test
clc
jae
ss
push
push
or
mov
dec
pop
xorb
aas
xor
dec
xor
push
push
pushl
int3
mov
sbb
inc
hlt
xchg
xchg
push
int
clc
push
mov
cmp
lds
test
mov
sar
mov
cli
shrl
lock
mov
or
or
dec
inc
add
push
inc
pop
inc
outsl
sub
lock
mov
cs
add
push
jp
jbe
mov
sub
fninit
fldcw
daa
or
pusha
jo
xor
add
push
inc
rep
mov
inc
nop
aad
imul
jl
sbb
xchg
jno
or
mov
sub
mov
test
rcll
xor
mov
aaa
or
call
mov
mov
lahf
stos
orb
rclb
jmp
pop
pop
sahf
sbb
mov
cltd
loop
mov
push
or
popa
push
add
sbb
push
in
cmp
pop
sbb
ret
sbb
dec
adc
sbb
cmpb
xor
ret
and
jne
cmp
mov
jp
in
xor
andl
cmp
fisubrl
call
pop
bound
push
xchg
jmp
adc
or
add
add
scas
test
pop
or
not
ret
pop
pop
add
sub
loope
inc
cld
out
outsb
jmp
xlat
or
repz
add
mov
cmp
push
add
push
subl
pop
mov
push
rol
into
outsb
call
add
pop
jmp
out
sbb
lock
push
push
and
jl
add
loopne
adc
sbb
movl
ja,pt
or
add
pop
pop
pop
rorl
insb
imul
adcl
jne
adcl
push
dec
clc
lods
movsb
or
ror
add
adcb
lds
ljmp
add
push
pop
in
push
jmp
adc
xor
cmp
mulb
push
add
or
push
loopne
enter
lds
add
fwait
jbe
sub
push
push
adc
mov
or
adc
movsbl
jecxz
pop
cs
add
xor
sbb
in
dec
jb
test
adc
push
and
out
bound
adc
ja
insl
mov
testl
pop
adc
mov
inc
mov
pusha
dec
adc
outsb
cld
es
adc
je
mov
das
mov
insl
lock
cmpl
je
sub
xchg
adc
jno
ja
outsb
dec
stc
push
ret
je
gs
js
mov
lret
xor
call
push
cmp
or
pop
lock
jo
dec
add
loope
jl
dec
sub
leave
sbb
fcmovne
push
cmc
or
sbb
sub
push
mov
mov
pop
add
inc
ss
cwtl
dec
cwtl
test
xlat
lcall
mov
test
adc
adc
pop
mov
outsl
test
inc
or
push
add
movsb
mov
sub
sub
or
mov
adcb
add
mov
imul
out
xchg
push
aas
leave
push
clc
and
add
cmp
jne
pop
fs
push
aam
repnz
or
mov
jg
imul
or
rclb
and
inc
jmp
mov
jmp
pop
xchg
xchg
lods
lahf
test
adc
daa
pop
mov
insl
test
push
xchg
mov
aam
pop
pop
mov
outsl
jecxz
call
dec
add
cli
fs
popf
mov
inc
push
movl
sub
or
call
shll
cmp
fcoms
sbb
ja
fistpl
push
push
push
push
push
and
pop
push
or
test
mov
mov
xor
mov
roll
xchg
inc
or
adc
std
jae
or
popf
aad
push
lds
sarb
adc
pop
adc
mov
jnp
in
cmp
cmp
scas
shlb
mov
sub
xor
rol
pop
test
int3
mov
add
lods
lock
xor
cmp
jg
je
xchg
mov
or
sub
mov
cmp
pusha
add
pop
sub
or
xor
push
cmp
adc
sub
inc
adc
push
and
cmp
std
nop/reserved
push
mov
sub
enter
leave
push
es
int
and
iret
sbb
and
icebp
xlat
icebp
push
icebp
into
icebp
adc
fdiv
push
icebp
or
fyl2x
push
icebp
lret
mov
sbb
dec
or
in
cmp
add
and
mov
movsb
xor
mov
mov
or
cmp
nop
inc
sbb
orl
fadds
inc
cld
dec
sub
and
leave
je
sub
xchg
mov
push
adc
mov
xor
pushf
sub
inc
hlt
or
sub
and
xchg
imulb
mov
and
cwtl
sbb
cmp
dec
jne
jo
pop
jp
or
cmp
jne
cmc
and
insb
or
or
jo
or
jo
add
imul
fstpt
dec
mov
add
push
lcall
ljmp
cmpsl
cwtl
sub
or
pop
ret
push
nop
pusha
adc
dec
leave
xor
push
js
push
inc
xchg
cmpb
jle
sbb
sub
sub
jg
pusha
pop
bound
mov
les
movsl
popl
dec
mov
sbb
cmp
push
dec
les
pop
lcall
mov
shlb
jl
mov
xchg
push
mov
adc
pop
sub
inc
or
mov
pop
xchg
into
adc
pop
cmp
jge
inc
mov
fs
mov
dec
nop
aam
adc
inc
jl
cmpl
movb
cmp
dec
xchg
call
mov
adc
add
mov
lea
mov
ja
add
repz
addr16
or
push
jmp
pop
repz
lds
mov
add
adc
iret
mov
aaa
loope
outsl
ret
mov
idiv
add
xor
int
mov
push
sub
dec
cmp
xorb
shrb
jl
inc
stos
xchg
push
add
shr
jecxz
loope
out
test
add
push
neg
sbb
jns
aaa
pop
sbb
outsl
or
pushl
push
and
aaa
xchg
test
pop
push
cmp
inc
push
dec
fcoms
orw
and
push
and
adc
mov
rorl
dec
pop
push
push
call
data16
mov
add
push
pop
shlb
and
cmp
push
pop
adc
push
hlt
mov
mov
mov
cwtl
xchg
push
cmpl
das
adc
sarb
sbb
mov
jne
cmpsb
and
fnstenv
lcall
xor
inc
add
jne
xor
orl
dec
add
int
add
jmp
cmp
add
je
sub
test
xor
jne
call
je
cmp
push
adc
adc
or
mov
mov
lock
sti
jo
pop
jmp
dec
mov
pop
bound
inc
clc
adc
mov
leave
lock
clc
push
dec
jl
lock
cmpb
hlt
inc
pop
push
enter
mov
push
sbb
add
inc
push
sub
sub
fcmovbe
xchg
push
and
push
inc
jg
ret
loopne
inc
popf
orb
adc
inc
pop
imul
insb
add
outsb
xchg
xchg
inc
and
adc
pop
adc
jle
add
mov
insl
loopne
jnp
movb
movw
sub
fmuls
dec
clc
and
stc
pushf
popf
sbb
stc
jmp
loope
or
movsl
lock
popf
cmc
fadd
aas
pushf
sub
sub
rcll
mov
and
add
push
push
add
ja
cld
jecxz
xor
mov
push
dec
jmp
lea
add
or
sub
push
mov
jl
das
mov
jl
fs
sbb
call
mov
sbb
pop
jg
and
mov
xor
xor
sti
aad
in
push
mov
mov
sbb
loop
mov
or
pop
lahf
or
decb
addl
sub
call
rcrl
ss
xor
bound
data16
or
or
jmp
sub
add
and
lds
fwait
or
cmp
push
add
mov
andl
rcrl
ror
dec
push
adc
mov
outsl
jmp
mov
aas
nop
rorb
test
nop
and
daa
lcall
xchg
cli
cmp
incb
dec
int
adc
pop
test
adc
push
xchg
and
pusha
adc
je
cmp
cwtl
sbb
cld
dec
sub
add
add
cmp
inc
fwait
dec
pop
dec
lcall
cli
pop
inc
pop
cmp
cld
xchg
dec
cmp
pushl
jb
adc
or
adc
pushf
sbb
dec
test
mov
jp
jne
push
sbb
or
add
pop
nop
add
and
jmp
imul
add
push
mov
mov
add
mov
lods
mov
es
jl
cmp
jge
pop
sub
mov
sbb
ret
push
in
jge
xor
pmulhw
xchg
xor
pop
xchg
in
je
sbb
in
or
jne
mov
inc
call
loopne
xor
dec
jecxz
nop
or
jo
mov
jmp
jno
es
xor
std
cli
push
mov
scas
jmp
cld
push
mov
jne
jle
push
push
lock
sub
rcrl
mov
mov
pop
cmp
mov
movsl
push
fcom
adc
pop
mov
out
xchg
lds
sbb
pop
mov
or
ret
mov
loop
js
cmp
or
mov
push
push
mov
pop
dec
add
mov
xchg
push
or
jbe
cvtps2pd
pop
adc
inc
mov
push
loope
stc
bound
into
jg
cwtl
fucomip
in
fbld
lahf
lret
or
sbb
mov
push
xchg
or
sub
inc
sub
sbb
push
mov
mov
or
pop
mov
arpl
aad
rcll
lds
and
push
ljmp
sub
test
inc
sbb
sarb
adc
mov
fs
mov
xchg
or
je
sub
push
cmc
jne
das
ret
hlt
negl
inc
jge
aaa
or
adc
cmc
or
pop
insb
insl
xor
dec
cmovns
pop
jl
pop
add
sbb
leave
mov
xchg
pop
mov
dec
push
xor
jns
divl
sub
ss
add
jmp
int
cli
jns
jne
not
loopne
rolb
pusha
xlat
cmp
jb
or
popf
fimuls
addb
pop
testl
inc
dec
pop
sub
repnz
jl
pop
inc
pop
mov
cmp
or
std
repnz
mov
lock
dec
clc
jne
shr
xchg
or
or
and
and
dec
sub
inc
pop
xchg
mov
mov
in
inc
pop
in
and
add
mov
xor
sbb
push
lods
ret
mov
mov
repnz
mov
dec
outsl
jne
ss
iret
or
lcall
adc
test
xchg
xor
or
add
ret
push
mov
into
jecxz
jmp
jns
adc
pop
test
call
jne
xchg
xor
push
clc
loope
cmp
jecxz
hlt
push
lretw
je
fdivr
xchg
andb
push
call
leave
sub
pop
lods
jmp
cmpsl
jne
xchg
sbbl
adc
push
adc
sub
popa
shlb
cmpb
loop
or
add
jne
add
mov
xchg
pop
mull
lea
dec
adc
in
mov
jmp
fisubrs
pop
orl
inc
sub
out
and
sub
fcom
add
roll
cli
cmpsl
inc
jg
push
push
and
add
dec
xor
jle
lret
andw
out
jmp
dec
xchg
jne
cmp
mov
inc
cmp
movb
ret
dec
lret
dec
push
insl
mov
daa
inc
push
rclb
rcrb
test
xchg
mov
cltd
adc
xor
mov
insb
xor
cs
fs
jge
add
outsb
addr16
pop
popa
adc
insl
cmc
inc
inc
adc
mov
mov
jecxz
outsl
push
cwtl
cmp
inc
insb
out
and
push
inc
sub
add
push
rcrl
push
and
in
push
inc
inc
mov
dec
cltd
mov
cmpsb
adc
call
mov
sub
mov
sbb
stos
scas
and
sbb
lds
repnz
test
push
test
cwtl
dec
push
cmpsb
popa
cmpsb
dec
xor
mov
ds
add
adc
testb
fisubrs
movsl
jge
xorl
or
and
sub
lret
mov
jmp
dec
cmpb
mov
test
hlt
fsubrs
jne
or
insb
popf
and
test
mov
ret
dec
shrb
push
test
stos
push
xchg
jmp
dec
jne
inc
jns
fs
push
xor
ss
xchg
push
push
or
data16
sub
pop
mov
push
arpl
jg
rcll
lods
imul
ret
loopne
outsb
sub
and
cmp
pop
adc
movsb
mov
mov
std
add
sub
or
popf
popa
cmp
das
cwtl
lods
mov
rcrb
dec
imul
movsb
dec
lods
aas
ret
add
loop
ficoms
sub
add
and
push
inc
jmp
mov
inc
push
mov
cmp
push
cld
fcomp
fimuls
xchg
adc
jmp
inc
and
cmpsl
in
cmpb
jnp
arpl
and
mov
stos
cmp
sub
jge
push
call
xor
inc
enter
movb
or
repnz
or
pop
sahf
push
or
cmp
push
popf
mov
movsl
mov
cmc
das
push
push
xchg
lock
cmpsb
lret
lea
adc
notb
push
inc
movsb
subb
movsl
orl
pop
sub
data16
jmp
sub
add
and
lret
mov
adc
or
loopne
out
in
jl
jo
adc
clc
cmpsb
nop
subl
lds
or
add
in
outsb
pop
ja
adc
das
xor
inc
test
adc
clc
popf
or
outsl
je
outsl
sub
insl
data16
xor
sbb
inc
push
adc
mov
or
jne
adc
and
je
sub
cmp
add
or
mov
pop
and
fisttpll
test
cvtdq2ps
jg
xor
mov
aam
sub
lods
bound
inc
call
mov
mov
and
cmpl
loope
loop
call
xchg
xchg
adc
mov
movsb
cmp
and
dec
pop
andb
push
sbb
pop
adc
push
sub
insl
mov
pop
movsl
mov
stos
and
sbb
sbb
mov
data16
jne
es
sbb
mov
add
jg
xchg
add
mov
gs
nop
and
mov
push
add
adc
add
dec
popa
fwait
pusha
pop
imul
xchg
loope
push
or
call
xchg
xor
test
and
cwtl
xor
jae
push
or
xchg
and
push
adc
cmp
mov
sbb
push
hlt
in
xor
in
fcompl
mov
and
xchg
mov
pusha
stc
pushf
dec
or
pusha
hlt
jno
int
push
and
test
mov
sub
or
icebp
enter
jb
cmp
sbb
mov
and
xchg
stc
enter
jb
cmp
sbb
mov
sbb
mov
and
xchg
jecxz
in
in
out
out
call
test
stos
ljmp
mov
and
xchg
out
enter
jb
cmp
sbb
mov
and
xchg
xlat
enter
jb
cmp
sbb
mov
and
xchg
shl
jb
cmp
sbb
mov
and
xchg
enter
jb
cmp
sbb
mov
and
xchg
iret
enter
jb
cmp
mov
mov
mov
mov
cmp
mov
dec
mov
js
or
in
cld
mov
notb
jo
in
push
push
push
xor
mov
inc
js
dec
gs
jnp
inc
and
mov
dec
int
inc
cmp
sub
sbb
or
dec
jne
out
add
insl
outsl
jb
pop
sbb
add
pop
roll
mov
or
outsb
mov
mov
xchg
data16
je
lock
insb
and
mov
pop
fs
dec
adc
jo
scas
int
push
pusha
mov
push
add
and
scas
add
inc
inc
imul
outsl
sub
push
cmc
add
push
popa
outsb
xchg
sbb
repz
inc
pop
test
xchg
or
dec
jbe
add
outsl
ja
je
pop
pop
enter
cs
out
push
add
pop
and
sahf
sub
je
mov
xor
imul
sub
mov
sub
stos
sarb
sbbb
sbb
push
inc
insb
fcomps
enter
or
nop
xor
mov
or
std
adc
mov
enter
das
xor
or
movl
rorb
pop
pop
xchg
outsb
inc
test
inc
xor
outsl
mov
inc
inc
mov
inc
xchg
int3
fcompl
inc
pop
push
mov
insb
popa
and
dec
mov
movsb
mov
xor
insb
pop
gs
nop
cld
pop
in
cld
xchg
inc
lahf
jo
arpl
push
nop
pop
push
mov
cmpsb
inc
mov
movsb
cmp
les
and
int3
in
enter
repz
inc
pop
test
lds
and
inc
popa
and
fs
enter
enter
push
daa
fcompl
nop
enter
enter
sub
and
lock
xchg
xor
popa
daa
bound
pop
jo
cmp
add
add
aaa
xor
rcll
dec
or
or
xor
cmp
lcall
stc
movsl
xchg
adcl
pushf
je
call
iret
pop
lea
add
leave
jne
or
fsubr
sarl
dec
mov
ret
mov
push
xor
idivl
xchg
jecxz
cwtl
cli
cmp
add
pop
mov
adcb
pop
pop
sub
in
add
add
mov
rcl
jmp
add
cli
gs
cltd
xor
testl
cmp
jo
add
mov
negl
adcl
xor
sub
ljmp
test
jne
add
add
jl
add
or
mov
cmc
sub
adc
cld
adc
nop
daa
movb
push
sbb
pop
fadd
fisubs
xchg
adc
add
sub
add
outsb
cmp
clc
popa
stc
mov
mov
push
shrb
rcrl
jae
mov
add
pop
add
ret
dec
ret
vmulps
lret
inc
iret
bswap
or
adc
mov
jnp
out
add
ret
mov
inc
xor
pushf
pusha
sub
daa
add
mov
lahf
jg
add
pop
pushl
roll
and
push
push
inc
adc
pop
fadds
cmp
jne
dec
adc
jg
add
cli
lahf
sarl
repz
mov
push
xor
mov
fildl
pop
cmp
jl
call
sbb
lea
push
and
hlt
inc
clc
cld
stc
push
mov
dec
lock
imull
loope
loopne
cmp
adc
sbb
dec
push
mov
cmc
dec
mov
je
dec
or
dec
add
sbb
fs
push
enter
sub
std
cli
std
dec
xchg
int
sub
sub
enter
inc
push
add
pop
jg
xchg
jne
stos
je
inc
lret
push
mov
out
pop
pcmpeqw
inc
sub
test
mov
push
call
or
pop
xor
xlat
insl
or
xor
or
xorl
and
lcall
inc
pop
cmp
cmp
add
add
jmp
in
test
insl
or
push
and
shlb
inc
in
in
daa
or
add
or
inc
cmp
mov
shl
dec
pusha
mov
idivb
cmp
jbe
mov
rorl
xchg
addl
popf
dec
jmp
or
jbe
or
mov
cmp
jp
mov
push
aaa
lea
add
xchg
inc
push
dec
dec
call
pushf
sub
push
mov
or
cmp
or
sbb
call
pop
xchg
dec
adc
push
pushf
dec
mov
or
push
xor
pop
popf
dec
sub
xor
dec
repnz
data16
xchg
hlt
push
inc
lock
mov
sbb
and
cmpsb
xrelease
sub
jmp
das
repnz
mov
pop
psubsb
add
mov
sub
mov
or
lods
jmp
adc
mov
mov
daa
mov
faddl
push
sbb
push
xorb
out
or
and
add
pop
mov
pop
or
jle
push
stos
push
cwtl
xor
jge
lock
xchg
push
pop
mov
sahf
jmp
cmp
sub
je
xor
push
cmp
imul
movzbl
xor
ret
incl
adcb
push
dec
test
popa
or
pushl
jl
ret
add
sbb
je
test
outsl
loope
fisttps
mov
push
cmp
pop
xorb
xor
in
push
lret
pushf
push
sbbb
xchg
cmpl
dec
jl
mov
or
sbb
add
mov
mov
or
dec
pop
cmpsb
sbb
xchg
adc
push
ja
call
push
jo
or
loop
xchg
mov
mov
faddl
xchg
pusha
cmp
addb
xor
xchg
or
inc
dec
mov
ds
cmp
and
in
jmp
mov
cmpsl
pop
pop
and
xor
xchg
sarl
and
jmp
stc
push
popl
adc
movsb
punpckldq
cmpl
jbe
mov
imul
jmp
dec
xor
and
lods
add
enter
xchg
push
lcall
add
cld
dec
and
dec
ja
insl
pop
ret
pop
jp
call
add
mov
sbbb
mov
sub
rclb
dec
mov
jecxz
mov
sub
pop
inc
push
add
test
or
jmp
mov
jmp
dec
sbb
je
out
cmp
inc
mov
inc
jle
inc
add
nop
testl
mov
cmpl
jb
bound
jne
or
test
xchg
adc
cmpsb
push
cmp
mov
mov
mov
xchg
inc
iret
and
sar
xchg
ret
xor
adc
pop
or
imul
arpl
push
gs
jl
dec
notb
and
mov
or
or
call
mov
movsl
jmp
push
push
aad
adcl
shr
and
xor
mov
ljmp
dec
lock
test
inc
es
gs
xchg
insb
pop
dec
cld
lea
movb
jmp
lods
es
add
fwait
add
ret
jmp
pop
test
xlat
push
xchg
int3
sub
pop
adc
dec
cmp
test
inc
sub
inc
push
js
pop
xor
push
mov
imulb
stos
or
push
mov
cmp
or
movsl
add
mov
xor
mov
jne
cmp
add
adc
lock
jg
ds
adc
cmp
clc
clc
sub
adc
xchg
mov
xchg
mov
psubq
orb
cli
mov
mov
or
imul
xchg
repnz
pop
add
add
xchg
out
jle
xchg
push
cwtl
sub
pusha
daa
dec
jge
add
add
push
out
adc
push
jge
movzwl
adc
jg
or
jae
addl
mov
push
dec
lock
in
mov
jmp
sub
or
add
ud2
add
or
mov
jle
mov
pop
sbb
faddl
cmp
adc
call
xchg
gs
pop
inc
xor
enter
ss
or
dec
inc
xchg
inc
mov
add
mov
pop
or
jge
sbb
stos
cmc
push
jg
and
aam
es
add
sbb
jl
cs
sbb
andb
cmp
fstps
sbb
loop
lea
loop
add
adc
stos
or
pop
inc
clc
mov
inc
add
pop
popf
pop
icebp
or
lods
dec
lods
push
jns
dec
sub
imul
inc
sub
push
aam
call
aaa
mov
js
or
jb
mov
xchg
mov
push
out
pop
add
enter
div
adc
jecxz
push
orb
dec
jne
hlt
mov
mov
ss
call
sahf
pusha
and
stos
jecxz
iret
jnp
and
jne
dec
das
repz
idivl
sbb
adc
lahf
sbb
mov
add
cmp
cwtl
sbb
lea
sbb
cmp
push
je
push
push
lret
and
lea
push
dec
jno
mov
push
pop
pop
inc
loop
xchg
stos
hlt
mov
pop
add
push
aaa
sub
dec
fisttpl
shll
jle
jmp
sub
sub
test
sbb
fimull
dec
shrb
sub
add
jle,pn
cmp
and
push
add
sub
sub
dec
aam
loopne
jl
and
adc
xchg
push
test
pop
call
jmp
lds
jle
es
dec
rcll
testw
cmpsl
adc
ss
or
dec
inc
sbb
pushl
mov
dec
sbb
inc
test
dec
hlt
rol
in
loope
lods
or
jnp
das
or
scas
or
test
loope
not
cmp
push
or
mov
lcall
adc
mov
mov
out
add
call
data16
sahf
jmp
xor
stos
mov
add
or
jns
clc
lods
addr16
std
cmp
or
dec
or
cmp
jae
cmpb
clc
and
add
or
cmp
ja
jmp
movw
mov
sbb
and
je
cmp
or
test
mov
xor
dec
out
sub
daa
sbb
mov
mov
push
or
je
js
sbb
or
jmp
mov
pop
mov
sub
fidivl
repnz
push
add
and
xor
fildll
or
mov
or
fidivl
pop
or
inc
adc
mov
mov
movsl
cmp
das
iret
add
jne
dec
loopne
jmp
test
add
inc
and
stos
inc
and
lret
inc
ljmp
or
enter
or
mov
jmp
inc
fmull
mov
nop
sub
repnz
mov
mov
pop
push
or
push
sarl
cli
add
adc
xchg
adc
decb
adc
xchg
mov
enter
mov
adc
and
add
xchg
sub
push
xor
mov
xchg
jo
fucomip
jl
inc
adc
mov
xor
cmpsl
sti
lahf
out
dec
or
mov
loop
sub
xchg
fdivl
xchg
pop
ret
lds
call
enter
mov
stc
inc
or
or
add
imul
inc
dec
sbb
outsl
enter
pop
hlt
out
cmpsb
les
adc
cmp
mov
inc
cmpl
mov
push
sti
or
jg
push
and
or
sub
stc
push
addr16
in
and
xchg
adcl
dec
mov
jno
dec
call
enter
pop
xchg
stc
and
shrl
test
jne
call
out
ja
imul
pop
and
outsb
xor
popa
xchg
mov
xor
xor
pop
je
xchg
adc
push
pop
lock
or
inc
mov
dec
pop
les
pop
jne
sub
dec
and
fs
mov
scas
xor
rol
mov
pop
sub
pop
jl
test
idivb
int3
xchg
js
ja
inc
cltd
popa
push
and
sbb
movsb
bnd
stos
imul
pop
outsb
jge
cmp
std
enter
dec
push
push
stos
xor
adc
jnp
jmp
push
mov
push
js
push
add
push
hlt
push
mov
mov
and
jno
inc
cmpsl
test
dec
fisttpll
aas
mov
cli
lock
xor
jnp
icebp
outsb
sbb
sbb
xchg
clc
in
ret
ficoml
inc
lods
scas
sbb
xor
sbb
cmp
dec
xadd
push
ljmp
hlt
sbb
and
push
lcall
dec
mov
fs
cmp
jle
jmp
lods
rorl
inc
inc
and
mov
jae
cs
test
or
fisubl
push
mov
add
cld
jmp
sbb
cltd
lea
call
jne
dec
mov
xchg
jle
sub
es
inc
adc
jmp
std
inc
dec
dec
mov
xor
and
jne
aaa
pop
adc
jmp
and
out
nop
lods
mov
test
adc
mov
lret
addr16
dec
hlt
push
add
sbb
test
add
mov
mov
sub
sbb
sub
in
add
les
enter
sbb
test
jmp
and
out
inc
lods
xorl
clc
out
std
adc
call
jne
sbb
mov
sbb
popf
pop
int
mov
jmp
or
popf
xor
pop
movsb
daa
and
pop
adc
fadds
inc
les
repz
adc
and
inc
pop
mov
adc
add
cli
adc
je
mov
dec
je
data16
xchg
add
add
cs
aad
lock
sbb
inc
ret
mov
inc
add
leave
jle
lds
and
fs
sbb
addr16
or
es
mov
push
xchg
sbb
inc
mov
sub
push
cli
mov
adc
push
aad
xchg
push
test
mov
inc
mov
pop
mov
or
xor
dec
and
and
addr16
mov
sub
cmp
call
out
adc
push
dec
int
mov
mov
sub
dec
pop
orl
jge
insb
sub
inc
jae
sub
lret
xchg
por
in
inc
cmp
nop
and
lock
sub
and
push
and
arpl
ds
subl
dec
mov
or
xchg
mov
shlb
out
sub
add
jmp
pop
rsqrtps
xchg
sub
sbb
sub
push
enter
leave
or
inc
test
or
inc
cld
xlat
ret
cmp
fxch
or
nop
mov
int3
repz
mov
int
dec
test
push
out
push
lret
xchg
leave
lods
daa
inc
int
clc
mov
into
jp
cwtl
popl
cmp
out
pop
lea
push
or
add
arpl
scas
jns
cmp
adc
imul
jmp
inc
sar
jg
cmp
fnsave
push
adc
adc
lods
mov
iret
jmp
sbb
pop
movsl
push
add
inc
movsl
pop
sub
adc
pop
xor
fcoms
lods
nop
cmpl
pusha
or
dec
sub
push
jb
jmp
cmp
pop
jbe
sub
adc
lea
dec
sbb
fnstenv
xchg
pop
lret
or
ret
lcall
xchg
ds
sbb
push
cld
fmul
push
inc
in
adc
add
or
xor
push
pop
xchg
inc
or
test
outsb
sahf
jmp
pushf
push
in
filds
pop
xchg
pop
push
lock
dec
nop
in
dec
push
loopne
mov
cli
mov
mov
rclb
jmp
test
fs
xchg
jl
jne
jo
in
int3
jp
push
insl
test
test
rorb
orl
pop
das
rcr
dec
inc
push
jae
lea
in
sub
inc
push
and
jmp
sbb
aas
inc
inc
aas
aaa
and
xor
jmp
das
and
andl
add
fwait
add
push
add
or
or
or
or
pop
nop
mov
jle
test
les
out
test
xor
sbb
nop
cltd
mov
test
and
jnp
xor
xchg
xchg
or
ljmp
sbb
pusha
dec
mov
or
sub
les
mov
cvtpi2ps
ret
sub
in
mov
je
data16
mov
sub
imul
xchg
pop
popa
sub
and
dec
or
sahf
xchg
enter
ds
mov
or
fs
sbb
mov
adc
dec
cmp
xchg
xchg
inc
pop
pushf
xchg
and
add
nop
inc
pushf
cmp
and
xchg
sub
arpl
int3
fldenv
mov
push
inc
mov
push
decl
rolb
or
je
dec
ret
jae
mov
push
or
imul
aam
frstor
adc
das
adc
dec
in
inc
shrb
sub
jg
push
pop
push
scas
adc
test
mov
mov
out
into
xchg
jnp
and
pop
hlt
inc
sbb
pop
mov
inc
xchg
in
inc
xchg
push
sbb
pop
mov
mov
or
mov
jmp
sub
lcall
mov
adc
sub
and
or
movsb
insb
cmp
sbb
sub
or
xchg
adc
inc
xchg
adc
or
xchg
sub
or
lods
adc
or
nop
test
insb
incl
movl
pop
inc
sub
inc
mov
daa
xchg
les
or
lret
and
sbb
jne
and
pusha
mov
or
adc
sbb
add
jbe
into
andb
js
cli
fdivr
data16
ljmp
insb
inc
mov
jnp
cmpl
adc
loope
and
mov
add
dec
or
inc
xlat
pusha
jnp
mov
add
adc
add
mov
cs
and
cmp
psubq
dec
add
xlat
ljmp
push
adc
push
mov
or
call
sub
pop
lea
xchg
pop
mov
xor
and
and
jb
add
dec
loopne
fadds
push
mov
dec
lock
adc
out
sub
mov
jne
mov
pop
mov
popl
mov
shrb
mov
adc
je
add
inc
jb
push
xor
fcompl
cli
mov
hlt
enter
adc
enter
adc
or
push
adc
hlt
xor
lods
adc
rcrb
out
pop
iret
aad
inc
addr16
xlat
xchg
movsb
or
cmp
mov
fnstenv
xor
add
sub
pop
mov
jb
inc
mov
out
and
stos
or
fcompl
ljmp
or
cmp
xorb
roll
inc
movsb
or
pop
ja
and
pushf
inc
push
in
sarb
adcb
add
jae
inc
test
or
adc
cmp
lock
mov
sbb
add
mov
sub
rol
stos
jge
or
mov
adc
rep
pusha
or
jne
pop
ficoml
pop
loope
push
dec
sub
fistpl
repz
fldcw
mov
mov
and
addr16
xchg
ret
mov
or
xor
mov
xchg
pushf
orb
scas
or
lea
stos
fdivl
add
lods
je
add
cmpw
cwtl
xchg
rorl
pop
ss
test
dec
add
push
or
lock
pushf
xchg
aam
sbb
rorb
pop
outsl
popf
loopne
add
inc
adc
sub
mov
inc
inc
enter
es
or
dec
pop
lock
jge
mov
sti
and
mov
sbb
fwait
mov
sub
pop
mov
or
imul
fisttps
cpuid
shlb
or
inc
inc
inc
mov
mov
dec
in
outsb
inc
sbb
mov
mov
test
mov
pop
push
pushf
push
lret
sarb
mov
rolb
enter
add
mov
mov
nop
rorb
fadds
push
adc
mov
add
and
push
or
mov
insl
mov
enter
xor
enter
inc
sbb
mov
mov
sub
sbb
aas
xchg
and
cwtl
and
lock
mov
clc
ljmp
push
cld
push
hlt
pop
mov
inc
inc
lahf
pop
sbb
aad
and
dec
push
aad
std
push
xchg
nop
adc
hlt
cltd
stc
cs
mov
das
cmpsl
dec
jo
pop
insl
xchg
and
rcrl
sub
mov
jl
sbb
dec
push
jo
adc
pshufw
xchg
add
into
test
sbb
ret
mov
sar
lret
mov
dec
sub
push
ret
shll
sti
xor
icebp
imul
clc
cmp
nop
push
gs
or
cmp
mov
mov
imul
and
popa
arpl
inc
js
inc
mov
ret
jns
cs
dec
mov
push
and
or
addr16
rorb
or
push
test
or
and
and
dec
inc
sub
mov
cmp
dec
xor
inc
andl
sbb
adc
xor
and
pop
and
inc
inc
in
adc
sub
xor
movsb
dec
cld
push
xor
fsubrs
xchg
xor
movsb
adc
movsb
mov
adc
and
dec
in
mov
aam
push
add
test
mov
mov
or
pushf
and
xchg
cwtl
and
xchg
xchg
sub
cmp
nop
sub
and
mov
jo
test
mov
or
jl
mov
je
adc
jo
mov
xchg
insb
and
and
pusha
jle
inc
pop
jl
inc
pop
pop
mov
adc
or
adc
dec
in
dec
in
in
dec
shl
inc
dec
insb
in
dec
clc
cmp
cmp
or
xor
enter
inc
adc
and
jb
and
and
and
and
jb
and
jb
cs
jmp
cmp
and
mov
mov
popa
lds
inc
add
in
mov
push
ja
or
sbb
mov
aaa
cwtl
pop
cld
inc
mov
or
hlt
mov
mov
and
mov
test
fldenv
dec
adc
aam
inc
or
movsb
je
mov
or
mov
test
or
mov
adc
mov
mov
and
add
inc
mov
lcall
mov
ficompl
insb
call
or
adc
adc
xchg
mov
add
cmp
les
add
cmp
push
inc
mov
mov
movsb
xor
xor
push
movsb
sbb
gs
push
push
mov
mov
mov
push
inc
mov
or
or
push
inc
mov
fs
cs
loopne
sbb
das
test
nop
adc
clc
sbb
mov
js
fists
int3
inc
or
pop
mov
pop
dec
pop
int
xchg
aas
aaa
inc
sbb
push
pop
scas
adc
enter
and
adc
or
push
les
aam
mov
loope
outsl
mov
addr16
cmp
pushf
xor
les
pusha
mov
call
adc
add
hlt
fisubl
cwtl
or
jb
fs
or
add
das
add
cmp
add
sub
lret
and
sub
fs
sub
test
cld
dec
mov
jge
dec
arpl
ljmp
shlb
xor
xchg
push
xchg
and
push
out
aam
pusha
fimuls
jmp
hlt
adc
or
xor
inc
pop
sub
inc
dec
dec
xchg
push
and
bound
jb
jp
orb
enter
sub
cmp
mov
insb
and
dec
xchg
lods
mov
in
pusha
and
dec
jbe
andl
mov
dec
into
xchg
fnstcw
out
adc
sub
pop
adc
jmp
or
or
push
jg
adc
sbb
sbb
and
cmp
xchg
sub
xor
xor
cmp
or
data16
dec
or
mov
or
imul
sbb
sbb
and
dec
xor
mov
shll
and
inc
cmp
mov
int3
adc
inc
or
shr
jb
adc
ficoms
popa
adc
inc
and
imul
insb
adc
push
adc
dec
sbbl
or
andl
and
add
and
add
and
add
and
add
and
add
and
add
dec
mov
pop
xchg
movsl
inc
push
mov
adc
les
xor
movsb
minps
add
cmpb
xchg
and
inc
fucom
clc
sbb
or
push
wbinvd
and
cmp
dec
and
dec
js
lea
mov
mul
orb
sbb
adc
ret
pop
ret
pop
pusha
test
orl
int
sarl
and
jl
js
addr16
mov
jg
or
lahf
mov
dec
mov
inc
xlat
fisttps
mov
inc
repnz
mov
xchg
inc
or
or
and
inc
and
xchg
sbb
and
jno
sub
sub
xor
xor
cmp
and
inc
outsl
add
cmpsb
mov
xchg
adcb
cmp
or
and
adc
loope
sbb
clc
inc
sbb
adc
push
jg
cmc
push
jg
inc
sub
clc
inc
xor
adc
jg
inc
cmp
sub
incl
aas
in
adc
inc
inc
adc
adc
ret
loope
or
pop
mov
pop
jns
sbb
sbb
shlb
sub
mov
mov
rclb
adc
in
cmpsl
push
adc
in
test
rclb
adc
xchg
mov
outsb
loope
outsl
dec
dec
fistl
test
pop
popa
sbb
xor
jecxz
lcall
mov
adc
jl
or
rcll
push
stos
adc
jnp
addr16
xchg
dec
lock
adc
nop
adc
popl
sbb
mov
inc
or
addb
dec
mov
adc
lcall
movzbl
imull
ljmp
inc
mov
in
aaa
cld
test
sbb
and
push
mov
adc
push
repz
je
pop
add
aaa
xor
adc
negb
dec
loope
orl
or
aad
sub
mov
or
mov
push
push
bound
lgdtl
jmp
sub
mov
or
dec
or
adcl
adc
pop
mov
jae
test
inc
aam
popf
test
sbb
jb
movsb
dec
aas
mov
leave
pusha
inc
pushf
sbb
mov
jmp
or
adc
add
lar
sbb
or
fistl
push
mov
pop
push
push
adc
ljmp
mov
cmp
jmp
xor
mov
push
jbe
mov
aam
xchg
mov
aaa
enter
psubusb
cmp
movsb
mov
mov
push
lcall
mov
seto
push
and
dec
or
cltd
sbb
add
insl
inc
pop
movb
or
shll
loope
in
mov
mov
mov
mov
pop
aaa
add
lea
pop
pop
lahf
inc
mov
outsb
inc
sbb
or
ja
inc
call
sub
fs
cli
sbb
insb
or
xchg
xorb
inc
inc
and
andb
shrb
fbstp
addb
mov
dec
mov
mov
mov
sahf
mov
mov
mov
sbb
inc
cmpl
iret
pushw
or
or
adc
xchg
shl
sub
or
push
lods
mov
jmp
cmp
popf
dec
adc
xorb
sbb
add
mov
cs
jle
xor
or
popa
or
bound
jmp
stos
mov
jb
sahf
or
inc
jae
mov
jmp
sub
xchg
and
adc
mov
or
adc
icebp
fcomi
orb
lods
fisubs
cmpsb
mov
mov
cmp
jae
bound
xchg
insb
jae
rcrb
stos
and
or
add
jl
cmp
sub
pop
mov
push
dec
or
mov
push
testb
cli
inc
adc
mov
jb
jae
inc
jb
jae
jb
loop
adc
call
jbe
call
ficompl
repz
bound
nop
push
ljmp
lret
je
dec
sbb
mov
pop
ret
sbb
mov
arpl
mov
pop
xchg
sar
xchg
nop
dec
or
rcr
clc
sbb
adc
enter
adc
pop
push
in
scas
jb
and
xor
and
mov
add
mov
or
test
outsb
mov
imul
addr16
enter
sbb
adc
sbb
loop
pop
mov
push
call
push
decl
je
xor
mov
xchg
loope
adc
pop
xchg
out
sub
hlt
inc
pop
jbe
dec
dec
or
les
andl
lock
push
xchg
mov
shl
cs
pop
dec
and
shrb
push
sbb
notl
mov
es
dec
jne
push
aad
and
xor
pop
lret
lock
daa
shrw
cli
mov
call
and
adc
jbe
sub
outsb
dec
aam
int3
scas
es
mov
adc
push
sar
dec
movsb
mul
and
push
orl
lock
clc
arpl
decl
and
hlt
js
inc
mulb
int
or
or
or
sti
or
add
add
in
add
or
dec
rclb
or
fs
or
adc
inc
adc
iret
or
adc
jno
sbb
inc
shr
push
push
sub
adc
mov
leave
inc
icebp
sbb
pop
mov
sbb
inc
xor
or
sbb
or
and
filds
sbb
subl
and
mov
xor
or
add
add
and
sub
mov
add
add
sub
inc
lods
sub
enter
xchg
sub
lret
hlt
push
mov
cmpsb
fmull
or
jo
cli
pusha
and
cmpsb
mov
mov
or
sub
lea
das
dec
in
adc
rclb
adc
inc
xor
mov
ss
call
fdivr
jg
mov
imul
pop
jmp
fsubr
xchg
pop
jnp
scas
mov
adc
addr16
xor
aam
inc
push
mov
add
int
testb
dec
insb
mov
or
mov
sub
inc
mov
mov
loopne
mov
js
outsl
orb
xlat
fwait
gs
ljmp
test
pop
pop
adc
mov
shl
jae
add
inc
push
add
in
and
mov
ja
xchg
pop
push
mov
push
xor
mov
fs
push
cltd
sbb
and
mov
sub
dec
push
std
dec
mov
inc
sub
pop
sbb
dec
cmp
push
cmp
adcb
adc
mov
addr16
mov
iret
adc
div
mov
mov
fnstenv
mov
mov
adc
push
xchg
mov
add
mov
enter
test
orb
pusha
fdivrs
loope
xchg
ret
ret
gs
and
inc
pop
mov
dec
jb
add
adc
lret
dec
mov
imul
aas
jns
xor
cmpb
jbe
dec
sbb
dec
stos
mov
sub
add
leave
scas
sub
xor
cli
xor
mov
jge
shlb
insl
in
iret
jge
shlb
iret
into
jl
shrl
cmp
scas
dec
jnp
lea
fisubrs
xchg
lock
xchg
arpl
iret
mov
insl
inc
push
push
and
or
mov
je
loopne
fdivr
shlb
xor
ja
fwait
sbb
testl
std
gs
lock
xchg
pop
push
std
and
mov
sti
mov
pop
xchg
not
push
dec
jmp
or
and
inc
sub
adc
hlt
dec
popf
jge
pop
inc
mov
nop
sub
bsf
lods
shrb
mov
fsubl
faddl
pop
daa
test
loope
pop
cmovs
sub
popa
or
jmp
mov
or
lret
ljmp
out
ds
das
insl
test
pop
das
ficoml
add
in
or
lahf
mov
outsl
iret
movsl
cltd
mov
movsb
push
xchg
push
rcrl
xlat
dec
shl
push
cmc
and
lea
adc
int
outsl
pop
inc
in
sub
shl
cmovp
fsub
insl
je
enter
cmc
xor
sub
xchg
pop
pop
adc
sub
inc
pusha
cld
or
sbb
out
cli
lret
out
pop
and
lds
out
adc
shl
mov
or
pop
out
pop
xor
addl
add
sub
jae
fcoml
js
test
jbe
sub
hlt
ret
clc
or
ljmp
push
cli
add
jg
or
and
adc
and
adc
or
test
movntps
and
fs
lock
je
faddl
ljmp
sub
xchg
jne
movsb
mov
inc
sub
sub
add
cmpl
jne
aaa
xchg
ret
sbb
jne
xor
mov
or
mov
jns
mov
xor
push
jne
inc
push
sub
xchg
push
fsubl
push
inc
xchg
or
sub
sub
nop
cwtl
int3
jae
inc
lahf
adc
repnz
jne
movsl
xor
push
les
xorb
aaa
js
ret
jne
lea
test
sub
adc
sbb
fnstenv
test
pop
jne
push
nop
mov
adc
adc
cltd
adc
sbb
dec
adc
call
test
syscall
cmpsl
push
xor
inc
adc
or
sbb
push
fs
push
mov
lock
and
pop
inc
ret
xor
lea
ret
or
dec
adc
je
adc
add
idivb
pop
addr16
xchg
sbb
mov
xor
or
push
push
sub
xchg
or
jbe
pop
and
sbb
sbb
addr16
bound
push
pop
repnz
adc
mov
adc
or
sub
js
decl
lods
dec
sub
adc
sub
std
inc
sbb
fadds
dec
mov
xchg
jne
dec
pop
jo
xchg
add
lret
sti
jmp
in
repnz
repz
xchg
or
leave
jl
popa
adc
or
lahf
add
xorb
xor
mov
cli
pushf
cmp
shlb
icebp
rcll
mov
loopne
sysexit
xchg
mov
push
jne
out
pop
jne
cmpb
fildl
clc
outsb
jnp
es
nop
fcom
call
movsl
test
mov
and
cmp
push
pop
es
add
push
shrl
pop
lds
sbb
add
mov
or
sub
adc
or
dec
iret
add
inc
sub
mov
ljmp
cmpsl
lock
jmp
and
sbb
decb
jmp
rcrw
cmp
add
pop
dec
enter
pop
mov
pshufw
dec
loopne
psrld
sbb
sbb
adc
and
mov
xlat
les
outsb
mov
jmp
stos
stc
std
adc
fstl
int3
sub
jmp
jmpw
mov
movsl
sbb
and
dec
sbb
ret
hlt
fst
jp
rolb
mov
fbstp
pop
movsl
in
pop
shr
jg
jmp
movzwl
insb
mov
xor
cmp
xchg
stos
dec
xor
push
sbb
or
inc
pop
lock
cmp
and
cmpl
loop
stos
add
jmp
imul
lds
lea
and
dec
sub
mov
jp
sub
fiadds
cld
addb
pop
out
or
pop
xor
aas
lock
lock
cmp
shlb
cmpsl
mov
jne
movsl
mov
adc
pop
ret
enter
jne
and
mov
inc
sub
out
push
xor
not
and
pop
lds
movb
jmp
mov
cmp
mov
mov
lods
int3
jbe
cmpb
scas
fcoml
or
divb
fnstenv
mov
aad
push
movsl
arpl
movsb
das
xchg
and
pop
aad
xchg
fstl
add
mov
shlb
xchg
inc
cld
test
movsl
in
in
in
shr
add
fldl
mov
repnz
int
hlt
sub
mov
mov
in
insb
mov
xor
inc
orb
rcrb
xchg
inc
aad
leave
xor
adc
test
cmc
stos
sbb
and
push
js
mov
aam
enter
imul
das
or
and
or
push
xchg
xchg
or
dec
sub
outsb
jmp
mov
es
dec
mov
inc
ljmp
add
mov
add
cmp
mov
lea
sbb
out
or
push
out
push
adc
mov
adc
aas
bound
pop
test
adc
sbb
in
or
jmp
cmp
dec
sub
and
sbb
mov
adc
sbb
shrl
cmp
jmp
cmpsl
inc
movsbl
or
adc
aad
mov
adc
in
xor
lock
dec
adc
and
adc
mov
adc
aaa
ljmp
scas
jle
lds
repnz
and
inc
and
pop
and
idiv
or
or
pop
and
push
cs
testb
out
adc
jmp
mov
mov
mov
inc
add
data16
in
push
sbb
out
mov
sub
mov
sbb
inc
pop
lcall
xor
jp
xorl
and
jae
push
and
add
push
inc
adc
add
lock
xor
dec
pusha
data16
je
cmp
pusha
mov
aas
jno
or
mov
inc
sbb
fcoms
and
mov
sub
iret
and
inc
pop
push
adc
ds
pop
daa
adc
adc
adc
and
call
hlt
push
jmp
lret
cmpsl
movsb
and
cltd
dec
in
jle
mov
cmp
xorl
ja
lods
xchg
sbb
xchg
mov
and
fwait
xchg
enter
mov
inc
dec
or
popf
add
cmpsl
out
mov
pop
mov
adc
ss
pop
pop
or
call
adcb
jp
lods
pop
mov
mov
mov
xor
call
fnstcw
jl
inc
mov
add
movsb
jns
pushl
or
lea
invd
dec
jae
add
fs
jne
pop
fmulp
inc
nop
pusha
pushf
mov
mov
mov
dec
mov
cmpxchg
test
adc
inc
add
ja
sub
or
mov
sbb
sbb
or
dec
or
adc
adc
pop
mov
inc
or
add
pop
inc
pop
addl
call
push
mov
addr16
lea
je
pushl
xor
push
enter
pop
lea
shll
inc
mov
push
adc
pop
push
push
mov
add
adc
and
and
je
adc
jl
or
adc
xor
movb
int3
popa
dec
popf
mov
push
mov
add
enter
pushf
ljmp
and
cli
add
mov
or
sbb
adc
movsl
cmpsl
push
clc
adc
lds
add
adc
xchg
pop
mov
cmpl
inc
popa
adc
add
test
jge
rorl
jns
sbb
adc
rcrb
out
xchg
dec
xchg
add
inc
fsubl
cmp
dec
test
add
xor
movzwl
sub
jmp
jp
xchg
lock
or
pop
sub
inc
and
idivb
add
inc
dec
mov
cmp
xorb
fmull
mov
daa
outsl
mov
lahf
or
or
outsl
je
or
movsl
aad
xor
xchg
push
dec
adc
je
rolb
into
rcl
rorb
xor
inc
pop
adc
loopne
test
imul
push
push
push
push
push
lcall
sbb
mov
jne
mov
mov
jmp
or
xchg
jne
inc
adc
lret
adc
mov
aas
pushf
negl
inc
lock
dec
cmc
sbb
add
add
movb
sarb
add
add
inc
lods
sub
and
sub
cmp
pop
lock
sbb
stos
push
sbb
call
and
or
sub
lea
push
adc
mov
jmp
inc
xchg
mov
dec
mov
push
or
or
mov
aam
bswap
pop
sbb
mov
test
xor
les
sub
sbb
add
sbb
add
or
and
rclb
inc
cmp
enter
inc
and
mov
sbb
subb
jp
mov
xor
mov
sbbl
das
dec
adc
push
clc
rcrb
aam
xchg
or
aad
pop
add
xor
pop
and
and
push
or
orb
inc
test
lret
int3
push
enter
or
fcmovnu
fiaddl
fxch
loopne
jo
xor
mov
js
add
outsb
je
insl
gs
mov
popa
je
xor
divb
add
xor
add
inc
inc
inc
inc
ljmp
ljmp
sbb
cmpsl
call
and
mov
inc
add
mov
adc
mov
sbb
or
into
sbb
sbb
fisttps
loop
dec
push
mov
pusha
and
dec
jo
js
addb
cwtl
adc
xchg
mov
rorb
call
lock
or
lods
orl
dec
and
cmp
dec
adc
pop
dec
add
in
xor
add
add
and
fnsave
int3
les
inc
mov
rorb
jb
cmp
adc
mov
mov
mov
or
mov
inc
scas
adc
mov
and
pusha
rcrl
inc
and
and
mov
inc
test
lods
test
decl
ja
xor
clc
and
xchg
test
sbb
xor
push
and
pusha
sbb
call
mov
mov
cmp
sbb
push
test
inc
sub
mov
enter
adc
cmp
adc
sub
cmp
rclb
bound
or
add
add
loopne
cmp
mov
mov
fsubs
pusha
stc
es
xor
adc
or
and
es
sub
cld
and
in
inc
inc
push
push
data16
es
fdivrs
dec
sub
and
mov
clc
test
push
and
movsb
lds
adc
or
or
mov
add
test
mov
xor
arpl
sbb
pop
adc
xor
xchg
jo
inc
in
dec
dec
clc
call
fs
and
and
xor
or
bound
push
and
dec
dec
xchg
pop
and
orb
dec
les
jns
cli
sub
or
and
ss
dec
xchg
pop
and
jp
mov
enter
add
lret
les
or
adc
or
gs
or
ret
adc
cltd
sbb
adc
add
and
and
xor
mov
pop
and
dec
test
mov
mulb
add
or
add
sub
cmp
or
pop
push
in
fwait
inc
sbb
je
inc
jb
jmp
arpl
push
xchg
pop
xchg
xor
xor
jbe
mov
inc
insb
pop
jb
sbb
insl
daa
mov
pop
aad
jo
push
cwtl
sbb
jle
dec
out
fidivrs
lret
sbb
jae
bound
push
or
dec
test
cmp
imul
push
outsl
sub
inc
sub
dec
dec
cmp
fdivrs
outsb
inc
push
or
arpl
or
imul
inc
js
inc
push
inc
dec
inc
jnp
xchg
adc
lea
add
adc
mov
push
jae
arpl
loop
xor
inc
sahf
adc
inc
imul
push
test
dec
xchg
xchg
jne
xor
mov
xchg
inc
push
lcall
nop
xchg
adc
adc
std
adc
mov
lea
insb
jo
sbb
push
push
jge
xor
inc
aas
push
cli
int
ja
add
xchg
mov
dec
repnz
sbb
and
push
jae
and
bound
or
push
shrb
or
dec
push
jno
mov
sbb
mov
dec
jbe
jo
xchg
dec
push
push
gs
jne
pop
jns
push
jmp
lcall
and
outsb
and
jne
inc
mov
daa
and
push
dec
push
in
outsl
sub
and
dec
adc
xchg
bound
inc
dec
imul
dec
lds
inc
pop
push
push
inc
fsubl
cld
xchg
mov
out
xchg
js
dec
stos
in
lcall
cwtl
inc
push
inc
and
or
pop
sbb
xchg
lods
ja
ljmp
push
xchg
xor
les
push
arpl
test
cmp
dec
into
ss
inc
sbb
jo
push
xor
adc
or
sub
cmp
cmp
inc
incb
cld
dec
cld
push
cld
push
cld
cld
push
jb
jp
cmp
cld
xchg
cld
lcall
cld
mov
cld
sar
loop
ljmp
cmp
or
adc
sbb
cmp
cmp
inc
aas
outsb
aas
jbe
jle
xchg
mov
xchg
aas
sahf
aas
cmpsb
aas
scas
aas
sarb
fmuls
inc
xor
xor
xor
in
call
xor
fldl
jmp
ss
aaa
and
aas
dec
dec
mov
pop
packuswb
jnp
xchg
iret
xchg
iret
movsl
iret
mov
iret
iret
fmul
in
test
cmp
xchg
sbb
ret
roll
dec
repz
push
je
jle
mov
xchg
repz
repz
mov
mov
repz
call
mov
cmp
daa
cmp
outsl
cmp
dec
scas
mov
dec
loopne
jmp
hlt
iret
sti
ret
or
mov
aaa
in
mov
mov
adc
sbb
xor
push
in
arpl
imul
clc
enter
and
adcb
sbb
popf
and
dec
xor
xor
popa
xchg
sub
repz
xchg
repz
repz
lock
lock
sbb
loope
and
aas
movsb
aas
stos
aas
fdivl
xor
cmp
cmp
cmp
mov
aas
mov
push
and
mov
dec
andps
pusha
iret
addr16
jno
sbb
xchg
pop
mov
int
shl
fcomi
push
pop
xor
jns
mov
lahf
hlt
lods
clc
int3
cld
pushf
cmp
mov
cmp
xchg
aam
lock
cmp
xchg
sbb
outsb
cmp
sahf
icebp
push
pop
cmp
cmpsb
call
jb,pt
xchg
mov
cmp
jb
je
jbe
inc
pop
fwait
mov
add
add
int3
cmp
pop
dec
gs
ret
leave
xchg
mov
adcl
inc
pushf
push
popf
inc
sbb
xchg
adc
jo
addb
out
out
out
out
out
out
out
out
out
out
loope
ss
leave
sbb
loope
jmp
ljmp
and
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
adc
dec
dec
push
jle
mov
cmp
or
mov
add
jecxz
add
sbb
mov
xchg
bound
cltd
dec
mov
pusha
dec
lret
mov
iret
fiadds
call
cmp
sbb
daa
cmp
cmp
cmp
inc
aas
dec
aas
dec
aas
addr16
jo
jns
test
aas
mov
lret
faddl
idivb
decb
push
aaa
push
dec
push
mov
iret
push
mov
iret
fmul
loopne
out
iret
repz
or
sbb
sub
ret
push
shrl
je
xchg
xchg
repz
repz
repz
ljmp
or
adc
sbb
and
sub
xor
cmp
inc
stc
dec
stc
push
stc
pop
stc
bound
jb
jp
cmp
cld
xchg
cld
lcall
lcall
call
out
pop
cmp
daa
adc
and
xor
cmp
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
in
rcl
shl
repz
fdiv
loopne
call
std
sarb
in
call
sub
xor
cmp
inc
cld
dec
cld
push
cld
pop
cld
pusha
cld
push
cld
cmp
cld
nop
cld
cwtl
cld
mov
cld
mov
cld
sar
fdivr
loopne
call
clc
fmull
cmp
dec
adc
sub
inc
iret
dec
iret
push
iret
pop
iret
addr16
jae
or
iret
cwtl
iret
movsb
iret
mov
iret
enter
ror
aam
fmul
fsubl
dec
out
out
pop
cmp
sub
xor
lcall
dec
lahf
pop
lahf
jl
test
daa
pop
cwtl
out
out
out
out
out
out
out
loopne
mov
dec
jle
jle
jle
jle
loopne
jb
je
pop
cmp
inc
ds
aas
dec
aas
dec
aas
push
aas
push
aas
pop
aas
push
aas
xchg
aas
cwtl
aas
pushf
mov
lods
lahf
mov
enter
push
out
out
pop
aas
add
or
adc
inc
dec
out
out
in
rcr
pop
repz
repz
repz
rep
repz
mov
mov
repz
lock
repnz
fs
inc
mov
sbb
jns
sub
cmp
or
sahf
adc
adc
sbb
pop
stc
pop
stc
pusha
stc
fs
push
stc
je
test
movsb
stc
lods
stc
mov
mov
mov
cld
enter
fdivl
or
adc
sbb
and
push
dec
ds
iret
fs
push
iret
je
js
jl
mov
lods
iret
mov
mov
iret
iret
enter
pop
aam
in
add
or
adc
adc
sbb
sbb
and
and
sub
sub
inc
stc
pusha
stc
push
stc
je
js
jl
cmp
stc
mov
pushf
stc
mov
stc
int3
stc
shlb
cld
fdivr
loopne
in
clc
je
and
and
sub
inc
adcl
inc
stc
pop
stc
js
cmp
stc
mov
mov
nop
stc
xchg
stc
cwtl
stc
pushf
stc
mov
stc
fdivr
fdivr
loopne
in
call
lock
hlt
lahf
clc
xchg
sub
add
in
cmp
fdivrs
dec
jle
jg
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
pop
call
out
out
out
out
pop
xor
and
xchg
dec
push
out
out
in
shlb
jl
jle
movsb
pop
test
aas
mov
mov
mov
les
clc
fmull
ss
or
adc
sbb
pushf
inc
xchg
cwtl
pop
repz
push
clc
out
cmp
cmp
push
push
jge
orl
setno
cltd
iret
popf
iret
mov
cmpsl
in
out
in
shr
rcrl
xchg
adcb
ds
sbb
jp
jl
jle
jle
jle
or
and
and
rorb
sub
xchg
xor
xor
dec
fisttps
cmp
xchg
xchg
ss
daa
push
inc
push
movsl
xlat
xlat
adc
out
adc
mov
xchg
ud0
pop
mov
cmp
cmp
outsb
ret
adc
dec
jp
sbb
cmp
xchg
pop
push
data16
or
cmp
and
cmp
fstps
icebp
sar
stc
in
clc
or
jb
je
jbe
dec
or
push
and
sub
mov
rolb
pusha
jmp
cmp
sub
dec
push
xor
arpl
push
xor
push
cs
iret
jp
andl
out
out
out
out
out
in
rorl
aad
fldt
out
in
stc
repz
clc
push
xor
je
jbe
js
jmp
push
aas
push
and
roll
mov
out
out
loope
xor
and
outsb
xchg
loop
movsl
punpcklbw
leave
je
mov
rclb
and
add
jb
scas
cltd
rep
repz
repz
fcoms
jle
jle
dec
or
mov
mov
mov
out
lock
cmp
je
jbe
js
jp
dec
mov
adc
shr
jae
push
cmp
cmp
cmp
pop
cmp
lods
aas
mov
push
dec
mov
and
jge
cmp
outsb
call
xchg
mov
int3
mov
fcoml
fstps
lock
hlt
scas
pushf
pop
cld
dec
sahf
add
mov
jmp
and
test
sub
cs
mov
subb
mov
mov
pusha
jle
jle
jle
jle
jle
dec
js
clc
cmpps
stos
sub
lret
mov
lods
repnz
aam
or
add
push
imul
add
or
adc
sbb
sbb
and
sub
pop
fcoml
fcompl
pusha
out
out
out
in
fucomp
gs
in
test
lods
cs
lahf
rcrb
dec
lock
insl
dec
hlt
mov
or
adc
sbb
and
clc
xchg
testb
jle
jle
jle
jle
jle
dec
mov
add
sarl
cli
loope
clc
or
jb
je
dec
and
cmp
jle
pop
pop
in
aas
jb
jge
xchg
lahf
pushf
xchg
cmpsb
dec
in
mov
leave
fsub
mov
stc
idiv
and
call
shrl
ret
jo
jl
jle
jle
jle
pop
stos
sarb
lret
daa
jecxz
mov
xor
adc
daa
inc
movsl
push
rol
jb
jg
mov
cwtl
js
jle
pop
ret
scas
aas
loop
out
cs
out
push
xor
inc
jle
adcb
ret
xchg
rcll
repz
scas
stc
mov
mov
mov
stc
stc
lret
stc
sar
stc
fdivrp
loop
out
ljmp
stc
cli
stc
clc
add
push
cwtl
test
js
jp
dec
sbb
push
and
cmpsl
xchg
cs
out
out
out
out
out
out
out
in
les
xchg
ret
jle,pt
jle
jle
jle
jle
jle
dec
aam
daa
faddl
add
lock
hlt
stc
clc
stc
cld
fs
in
call
adc
sbb
sbb
and
and
sub
sub
xor
cmp
inc
cld
inc
cld
dec
cld
dec
cld
push
cld
push
cld
pop
cld
pop
cld
pusha
cld
fs
lock
insb
lahf
jo
je
jmp
or
add
insb
dec
pop
inc
jle
rorl
jmp
lahf
aas
mov
daa
scas
xchg
mov
mov
out
out
in
mov
sub
pop
jecxz
out
pop
out
iret
repz
test
xor
jbe
js
pop
pop
pop
jl
pop
jle
jle
jle
jle
jle
pop
aaa
jl
aas
sub
out
out
out
out
out
out
out
out
out
out
out
in
rcrl
mov
repnz
rclb
fwait
psadbw
iret
scas
iret
mov
mov
mov
out
in
lock
fistpl
les
lret
repz
test
add
pop
xchg
or
pop
rcrb
rolb
cmp
add
iret
mov
xchg
lret
lahf
and
add
push
and
shrl
jae
jge
xchg
rep
repz
js
jle
jle
sbb
cmp
imul
js
add
mov
clc
push
cmp
dec
cmp
or
xchg
cwtl
mov
or
xchg
in
stos
mov
repz
setge
push
jl
mov
aas
cmp
jp
stos
fsubrs
sarl
cwtl
jb
xchg
or
repz
lock
xchg
in
call
xor
ret
adc
das
fnstenv
sub
sub
aas
stos
sub
xchg
push
dec
fs
gs
jns
xor
pcmpeqd
ret
sbb
je
lea
inc
or
leave
js
sarb
in
call
cmc
cmc
jo
outsl
in
mov
push
sti
pop
adc
test
in
call
pop
cmp
cmp
jnp
xchg
jle
pop
mov
ljmpw
mov
stc
ret
add
or
jnp
test
scas
in
lock
xchg
adc
ret
js
dec
mov
int3
iret
fmulp
ljmp
push
sbb
or
loop
add
pushf
leave
scas
push
push
jle
or
mov
adc
cmp
push
xchg
jle
mov
pop
int
lock
xor
dec
inc
mov
or
mov
daa
movb
inc
dec
gs
lock
clc
test
mov
add
adc
lock
pop
pusha
sbb
dec
popf
jbe
sahf
addb
push
faddp
out
inc
xchg
xchg
fcmovbe
in
mov
push
and
clc
mov
sbb
popf
push
sbb
mov
into
repz
loop
sub
lahf
movsl
xor
mov
lcall
cmp
adc
sbb
xchg
cmpsl
xchg
sahf
loope
cmp
lret
testl
movsb
mov
cmp
fs
sub
lahf
sti
xchg
adc
rcll
xchg
xchg
jmp
aam
add
mov
mov
leave
iret
ror
repz
and
xchg
test
lock
clc
mov
mov
mov
pop
inc
xor
push
inc
popa
addr16
mov
pop
into
xchg
xchg
loope
xor
leave
dec
rcll
es
outsb
mov
sarb
aas
loopne
sbb
push
xor
mov
rcll
icebp
movsb
je
mov
icebp
clc
add
subl
loopne
mov
mov
push
pcmpgtb
rorl
adc
flds
mov
stc
in
cli
jl
cmp
das
outsl
xchg
cmpsl
in
loop
pop
xchg
aas
sti
pop
jb
cmp
sahf
jb
jl
push
mov
iret
neg
push
cmp
push
adc
sub
adc
cwtl
fisubrl
or
out
and
push
loopne
push
call
jg
clc
cltd
xchg
xchg
sar
fdivr
repnz
and
mov
je
jle
xchg
lahf
rcrl
out
xchg
add
cmp
push
je
jle
ljmp
cld
jl
negb
xchg
add
ds
mov
jb
push
adc
dec
out
stc
repz
or
bound
xor
prefetch
xchg
into
movsb
add
in
add
xor
push
cmp
sbb
inc
xchg
dec
ret
push
mov
pusha
iret
fs
push
je
xchg
nop
out
in
ret
inc
rclb
sbb
add
test
push
mov
cs
or
ret
inc
pop
sub
sub
xor
inc
repz
repnz
leave
adc
push
das
pop
pop
pop
pop
sbbb
or
push
mov
repnz
insb
jle
jle
jle
pop
cld
and
lock
js
dec
sub
js
cld
dec
cld
push
cld
pop
cld
fs
pop
test
mov
xchg
repnz
lret
and
aas
mov
add
pusha
jno
lock
hlt
js
aas
cld
jo
sub
or
or
adc
adc
adc
mov
jp
xchg
es
lahf
mov
xchg
enter
repnz
mov
loope
cmp
sub
stos
cmp
cmp
adc
add
cmpl
sub
test
sahf
or
or
or
inc
pop
sbb
cmp
js
std
adc
and
inc
rol
add
mov
out
mov
nop
add
lock
xor
pop
sub
push
push
inc
xor
inc
pop
nop
push
cld
pusha
xchg
jo
and
lock
sub
test
and
xchg
add
xor
or
mov
add
test
or
cmp
movsl
adc
push
jo
jo
gs
or
sbb
adc
sbb
jo
jo
jo
jo
jo
imul
popf
ja
enter
push
jne
jp
jne
insb
jne
aas
add
pop
dec
ss
popf
pop
adc
push
fcompl
daa
pop
out
repnz
repnz
popf
jg
xor
test
push
jne
fdiv
hlt
popf
jge
out
push
popl
leave
aad
js
jno
insl
insb
cmp
and
jne
movsb
jp
jle
pop
jne
test
mov
aas
and
stos
repz
movsb
ljmp
mov
sbb
out
mov
test
jg
push
dec
or
mov
ret
push
and
and
lds
inc
aas
pop
dec
inc
scas
push
push
inc
pop
sub
xchg
dec
jae
push
jge
push
sub
pop
pop
or
nop
pop
mov
push
testl
sub
test
inc
jl
jg
orl
xchg
mov
push
inc
cltd
enter
or
mov
test
inc
mov
mov
ret
sub
test
inc
enter
or
loopne
in
call
sbb
jge
in
adc
out
or
repnz
testb
bound
add
add
or
push
adc
sbb
inc
and
and
sub
xor
push
inc
cmp
aas
pop
inc
or
dec
fs
sub
test
inc
pop
enter
or
arpl
insb
test
inc
jne
jns
jle
and
test
xchg
or
xchg
fs
sub
test
inc
cmpsl
enter
or
mov
mov
mov
ret
enter
or
iret
fs
test
inc
loopne
in
out
and
fs
sub
test
inc
std
ficoms
mov
enter
or
sbb
and
push
inc
sub
das
pop
xor
and
cmp
inc
push
inc
inc
enter
or
push
fs
sub
test
inc
enter
or
insb
fs
jb
push
ret
aam
or
pop
sub
xchg
xchg
js
mov
shrb
int3
aas
xchg
aad
rolb
fisubs
repnz
dec
jmp
jnp
test
pop
and
sub
xor
cmp
nop
inc
mov
push
push
dec
cmp
pop
push
lret
in
jb
jno
outsl
je
jns
test
mov
enter
or
cmpsb
fs
sub
test
inc
enter
and
or
ljmp
cmc
pop
pop
add
adc
sbb
push
adc
jge
and
sub
sub
cs
or
dec
gs
jb
pop
adc
popa
adc
jl
sub
push
nop
movsl
mov
push
inc
lods
lret
in
jb
mov
hlt
les
fistpl
or
in
fs
sub
movsb
out
inc
stc
les
add
inc
xor
inc
pop
dec
or
pop
fs
test
mov
xchg
and
nop
test
lods
push
inc
mov
aad
adc
out
xor
sub
pop
mov
push
out
dec
add
or
push
inc
es
or
scas
push
push
dec
and
dec
sub
pop
adc
dec
test
adc
pop
mov
or
push
fs
sub
test
mov
scas
and
sub
mov
dec
in
jb
mov
data16
test
enter
cwtl
cmp
scas
sub
xor
jecxz
xchg
out
fisttpll
cmp
cmc
cmpsl
jae
je
pop
or
sbb
and
sub
es
inc
add
test
popa
in
jb
pushf
mov
cmpsb
test
repnz
mov
sub
repnz
inc
test
sub
cli
jb
cld
mov
inc
or
sub
test
and
ds
sub
xor
push
dec
lret
in
jb
arpl
jge
jnp
sbbb
pop
mov
and
test
inc
mov
mov
mov
shrl
nop
int
fcoml
inc
fmulp
out
ljmp
stc
test
or
pop
sbb
sub
inc
sub
xor
sub
test
inc
ds
or
inc
dec
and
pop
mov
fs
xor
push
and
pop
and
push
xchg
cli
inc
adc
adc
mov
nop
add
mov
cmc
cmp
fstpt
out
nop
or
in
gs
sub
test
mov
inc
and
bound
or
fs
sub
test
inc
or
pop
xchg
and
push
enter
mov
pop
mov
xor
into
cmp
rcll
aad
pop
fidivrs
and
dec
xor
push
sbb
and
test
inc
cmp
inc
pop
inc
or
inc
fs
sub
test
inc
pop
enter
or
nop
insb
mov
push
inc
ja
ljmp
lret
in
jb
mov
push
movsb
daa
inc
cltd
enter
or
enter
aam
nop
fidivl
fisttpll
js
popa
shr
adc
scas
or
enter
or
add
or
or
sub
test
inc
and
es
xor
and
fs
test
inc
push
enter
or
addr16
insl
test
xchg
jne
lret
in
jb
lea
mov
and
mov
inc
adc
test
push
xor
fcoml
loope
pop
out
addr16
pop
jno
scas
jnp
std
rol
pop
push
sub
enter
pop
jge
push
adc
and
mov
and
pop
enter
or
cmp
cmp
mov
enter
adc
outsl
and
jb
xchg
js
lret
in
jb
xchg
mov
sahf
scas
addr16
test
sub
movsl
mov
or
les
or
test
inc
cld
xchg
push
sub
cmc
dec
dec
sub
push
xchg
and
lret
in
jb
xor
xor
inc
pop
xchg
dec
and
push
push
fstpl
adc
xchg
enter
mov
fs
orb
les
and
mov
ss
lret
in
jae
fcmovbe
mov
lret
in
jb
idivl
ss
push
enter
or
test
inc
xor
cmp
or
cmp
aas
sub
scas
jo
dec
scas
adc
hlt
pop
mov
cmpsb
scas
sub
xor
lds
into
push
in
jb
mov
loopne
jnp
in
sahf
xchg
icebp
or
cmc
pop
clc
or
std
addr16
push
adc
and
adc
or
pop
sub
scas
xor
xor
xchg
inc
push
lret
in
jb
push
mov
pop
test
pusha
mov
push
inc
enterw
or
sub
xchg
andb
xchg
mov
pop
scas
xchg
mov
les
push
iret
sub
rorb
inc
push
xchg
shlb
and
pop
aam
cmp
test
inc
pop
jne
pop
jmp
adc
add
adc
cmc
or
and
fs
sbb
enter
or
cs
test
inc
inc
enter
or
dec
movsl
or
push
loop
adc
test
js
in
sub
sub
lret
in
sub
test
inc
and
nop
les
jbe
hlt
mov
jae
sub
adc
clc
or
add
sub
push
inc
sub
sub
or
inc
fs
sub
push
scas
push
inc
test
adc
in
ja
cli
xor
xchg
jb
xchg
mov
pushf
lods
sub
test
inc
leave
lret
in
jb
aad
fistps
test
lret
in
jno
add
or
mov
cmp
test
sub
cmp
inc
mov
push
scas
gs
pop
xchg
and
mov
outsl
test
subb
nop
or
mov
xchg
scas
sub
rorb
sub
pop
inc
leave
sub
test
inc
push
jno
sub
sub
or
or
sbb
test
inc
push
enter
or
push
js
mov
push
inc
fxch
fistps
or
jmp
icebp
sub
test
or
or
adc
and
inc
and
or
cs
cmp
inc
inc
enter
or
push
fs
sub
test
ficoml
in
jb
jo
sub
js
ds
jl
sub
lret
in
sub
sahf
mov
stos
test
inc
mov
pop
mov
sub
scas
xor
out
lock
je
cld
bound
pop
adc
or
and
cvttps2pi
test
loopne
std
scas
dec
jnp
popf
sbb
push
sbb
sub
cmp
dec
in
jb
push
mov
pop
scas
jne
pop
jg
arpl
loopne
in
sub
test
inc
adcb
nop
xchg
mov
xchg
jb
scas
mov
shrl
fildl
loop
lret
in
jb
hlt
mov
add
sbb
jb
sbb
inc
and
and
sub
jle
nop
dec
mov
push
inc
push
enter
or
imul
mov
push
inc
ror
pop
int3
or
shlb
fiadds
push
inc
lock
or
add
mov
enter
or
nop
adc
pop
push
inc
sbb
and
or
xor
cmp
test
inc
push
sbb
enter
or
and
sub
pop
ss
inc
push
je
sub
xchg
jns
lret
in
jb
adcb
push
mov
sub
mov
pop
add
pop
sub
and
jno
cmc
jecxz
and
gs
adc
adc
mov
inc
fnstsw
loop
mov
sahf
and
sbb
hlt
scas
pop
push
clc
addr16
jno
add
push
add
add
push
or
and
les
sub
xchg
push
jnp
mov
pop
pop
sbb
sbb
sbb
les
pop
das
xchg
sub
lret
in
jb
ds
lcall
negl
cmpsl
pop
adc
xchg
aam
aad
mov
and
mov
out
out
adc
shlb
sub
dec
and
inc
jb
dec
mov
pusha
scas
dec
inc
outsl
xchg
stos
sub
xchg
mov
lret
in
jb
fwait
mov
lods
test
pop
enter
pop
sub
scas
xor
decb
add
or
or
or
test
pop
xchg
sbb
lret
in
jb
cmp
jnp
nop
test
xchg
push
mov
and
mov
cmpsl
mov
push
adc
shrl
push
in
sub
inc
scas
pop
push
push
sub
pop
xor
inc
in
jb
ret
mov
lret
sbb
fldenv
xchg
fsubrl
out
in
jb
clc
mov
mov
or
inc
pop
jb
pop
push
inc
and
xor
jb
ss
adc
dec
pop
jnp
push
and
push
adc
xchg
popa
mov
adc
fstpl
pop
jbe
rcrb
and
sub
jge
sub
sbbl
enter
sub
xchg
or
test
hlt
int3
scas
or
enter
or
in
out
sub
test
invd
add
push
push
pop
or
nop
arpl
enter
or
andl
mov
push
inc
lahf
enter
or
test
test
push
in
jb
hlt
mov
lock
and
sub
pop
xchg
dec
and
push
sub
push
sub
sbbl
gs
scas
and
sub
jns
xchg
jle
lret
in
jb
scas
mov
mov
sub
test
inc
insl
enter
or
jnp
subl
enter
or
stos
fs
mov
push
inc
into
enter
or
jecxz
ljmp
call
and
and
and
push
inc
cmp
inc
pop
dec
or
dec
fs
sub
test
inc
popa
enter
xchg
jp
push
lea
xchg
fwait
pop
lret
in
jb
mov
cmp
scas
push
push
rcrl
gs
into
movsb
mov
aad
pop
push
loop
jbe
lock
mov
and
xor
scas
and
or
add
mov
nop
pusha
sub
pop
xchg
pop
and
and
in
jb
sub
xor
sub
nop
inc
mov
pushf
dec
pop
in
sub
sbbl
or
jge
and
xor
fisttpl
mov
aam
mov
ja
fstps
push
and
iret
and
fsubrs
cs
cmp
in
jb
dec
mov
push
scas
push
push
pop
pop
sub
nop
fs
push
inc
jno
jge
orb
nop
fs
sub
test
pop
inc
mov
mov
les
int3
test
add
add
xchg
fcomps
inc
xchg
ret
in
fsubrs
fcompl
inc
fmull
cmp
scas
inc
in
hlt
aam
pop
jmp
or
cmc
sub
test
push
fldl
fwait
mov
add
xor
and
sub
cmp
sub
xchg
dec
push
push
pop
and
pusha
inc
fcompl
jno
testb
bound
arpl
gs
frstor
into
adc
movsl
imul
aam
mov
push
jae
sub
sahf
dec
loopne
sub
jg
jbe
ja
nop
andb
push
inc
mov
cwtl
pop
test
les
mov
nop
mov
dec
mov
jno
or
lret
shrb
cmpsl
ss
loop
push
inc
fxch
fisubrs
loopne
and
fs
out
ss
out
out
sub
scas
or
enter
dec
push
xor
sub
enter
xchg
pop
sub
xchg
imul
jno
aas
jns
dec
jg
push
xchg
mov
and
ss
inc
xchg
ret
dec
lret
in
jb
iret
mov
out
adc
movsb
ret
adc
xor
and
fs
dec
mov
push
inc
push
enter
or
sub
xchg
ja
lret
in
sub
orl
adc
and
mov
xor
scas
dec
push
aad
and
dec
push
adc
pop
in
jb
std
mov
hlt
or
pop
push
sub
cmp
scas
sub
xor
inc
dec
lret
in
jb
pop
mov
data16
jnp
or
insb
or
jo
jb
ja
and
pop
xchg
mov
test
xor
sahf
mov
and
mov
fldt
and
push
and
lock
inc
stc
enter
sub
pop
add
or
jp
popf
pushf
jp
or
mov
hlt
push
mov
sbb
push
xor
pop
pop
sbb
and
and
add
and
aaa
xor
xchg
and
inc
mov
pop
scas
sub
xor
addr16
lret
in
jb
cmpl
xchg
xchg
hlt
inc
or
cltd
mov
movsl
mov
push
inc
lods
enter
or
mov
test
inc
aam
pop
loop
and
fs
fsubs
in
call
mov
rcll
stc
jno
add
and
add
mov
or
push
scas
pop
inc
pusha
xchg
fisubrl
gs
jb
in
jb
jle
cmp
scas
push
push
mov
xchg
gs
lcall
or
movsl
and
sbb
mov
lods
mov
mov
inc
sub
dec
xchg
iret
push
lret
in
jb
aam
jb
dec
xchg
loopne
out
sub
negb
test
jle
test
or
xor
test
inc
dec
enter
or
lret
in
jb
mov
mov
sub
lret
in
sub
push
mov
mov
and
pop
cmp
lds
scas
pop
push
fildll
sub
xor
inc
in
jb
sahf
mov
or
adc
adc
pop
sub
mov
dec
scas
inc
inc
dec
mov
imul
stos
xchg
or
mov
in
sub
test
inc
ror
fistpl
or
in
fs
sub
test
ljmp
sbb
nop
sbb
int
sbb
daa
scas
and
sub
xor
xchg
cmp
lret
in
jb
inc
xor
dec
enter
or
pop
popf
les
test
jb
jb
pop
inc
ja
sbbb
sub
enter
or
jmp
xchg
xor
pop
pop
cld
scas
and
cs
jno,pt
idivb
push
and
sub
test
jp
xchg
loope
pop
jb
arpl
lahf
push
insb
pop
sub
subb
nop
xor
popf
mov
cmpsl
test
iret
cmp
test
inc
cld
enter
das
test
pop
adc
and
sbb
test
inc
push
enter
or
pop
bound
test
inc
xchg
enter
or
mov
push
enter
sbb
test
inc
loope
pop
loop
and
scas
sub
sbb
hlt
lahf
cmp
lret
xchg
sub
xchg
sub
jmp
in
pop
repz
or
cmpsl
bound
cli
loop
push
inc
cld
les
xor
lahf
push
popa
gs
jb
or
xchg
adc
xchg
sbb
ss
inc
sub
dec
jb
push
push
cltd
inc
adc
and
imul
push
imulb
adc
pop
mov
scas
sub
xor
mov
movsl
adc
mov
out
xor
cmp
sti
push
les
xor
or
adc
inc
pop
enter
or
sub
mov
push
inc
cmp
or
dec
fs
sub
test
inc
outsl
enter
or
xchg
fs
sub
test
inc
mov
or
int
aam
flds
push
inc
inc
or
nop
sbb
enter
or
aaa
cmp
inc
push
inc
dec
xchg
dec
notb
in
jb
push
sub
dec
rcl
jg
sbb
sub
mov
xchg
scas
dec
lret
in
jb
mov
cltd
sub
lret
shlb
xor
fmul
cld
pop
decb
aas
add
stos
mov
or
push
inc
adc
or
scas
push
repz
and
scas
sub
aas
adc
push
jb
pop
mov
data16
mov
mov
stos
fs
lret
push
push
roll
ficoml
loope
enter
push
negb
inc
xor
push
push
or
pop
fs
sub
push
inc
dec
xchg
pop
in
dec
push
pop
and
imul
in
cmp
pop
sub
mov
mov
mov
push
shlb
fdivrl
loop
push
push
in
adc
pop
pop
add
iret
jbe
or
std
lods
mov
sbb
loopne
dec
xchg
fidivl
repnz
jnp
test
and
fwait
mulb
and
cmp
dec
in
jb
dec
mov
push
scas
jne
pop
jg
bound
mov
in
sub
test
inc
jg
sub
xchg
xchg
insb
inc
lcall
sub
push
lret
rcll
frstor
pop
xchg
in
mov
hlt
push
inc
sti
xchg
and
ss
push
sub
test
inc
dec
enter
in
shrb
fs
outsb
jb
je
ss
inc
jle
adc
pop
in
sub
bound
test
mov
adc
pop
pop
call
add
sub
hlt
and
or
loop
xchg
or
pop
pop
pop
or
jg
subl
nop
mov
and
test
and
cmp
adc
push
inc
sbb
or
nop
aaa
mov
push
inc
cmp
or
push
inc
fildl
pop
adc
faddp
or
or
fstpl
loopne
fs
bound
scas
push
push
insb
pop
and
jns
jp
adc
adc
mov
enter
or
test
xchg
lods
jo
mov
icebp
fimuls
jo
xchg
cs
inc
lock
or
bound
cmp
push
enter
psadbw
jnp
test
pop
sbb
xor
mov
dec
scas
xor
push
push
scas
pop
inc
pop
enter
mov
mov
js
xor
test
xchg
xchg
enter
dec
mov
in
in
sub
inc
cmp
sbb
adc
xchg
adc
pop
sbb
scas
and
xchg
in
inc
scas
pop
inc
dec
enter
mov
mov
jo
xor
adc
and
sahf
jb
cmpsb
mov
mov
dec
push
mov
xchg
lret
fnstenv
in
jp
xor
call
push
repz
add
or
and
push
sub
test
ret
or
and
inc
lds
cmp
push
imul
popa
lret
in
jb
movsb
mov
push
mov
and
nop
ret
push
inc
int
test
xlat
push
xchg
loop
lret
loop
cmp
rolb
mov
sub
cs
test
sub
das
in
jb
popa
push
mulb
adc
in
jb
jp
and
mov
stos
mov
mov
pop
push
mov
xchg
ret
jl
enter
cmp
rorl
and
fs
loop
xchg
in
push
out
test
sti
mov
cmp
sbb
and
sub
or
xor
cs
rcrl
push
scas
and
sub
gs
jno
xchg
jnp
enter
or
cwtl
fs
sub
cmc
jae
lret
in
jb
mov
and
xlat
sub
test
aas
in
jb
clc
mov
fldt
in
sub
test
inc
cmp
popa
fs
sub
test
inc
pop
enter
or
dec
sbb
jb
pop
push
je
sub
xchg
js
enter
push
push
test
sub
lret
in
jb
mov
jnp
pop
adc
aas
test
jb
adc
sbb
sub
and
xor
cmp
dec
int
push
inc
mov
dec
fs
sub
test
inc
outsb
enter
or
mov
mov
xchg
jnp
xchg
sub
fwait
pop
or
cmpsl
push
inc
lods
enter
or
mov
test
inc
ror
xlat
pop
fimull
and
fs
in
test
lahf
jmp
adc
nop
sbb
cmpsb
adc
and
cmp
and
push
test
xor
jno
dec
jne
push
ja
pop
push
jns
mov
add
jb
mov
xor
and
fldcw
test
and
jge
test
pop
and
and
sub
test
inc
pop
cmp
scas
sub
xor
dec
les
pop
test
sub
lret
push
mov
sub
lret
in
jb
mov
push
les
and
in
insl
frstor
and
aaa
out
or
dec
or
out
mov
adc
inc
sbb
and
or
sub
cmp
inc
xchg
inc
mov
push
inc
imul
xor
nop
jb
xchg
mov
sahf
scas
pop
push
mov
xchg
stos
jns
mov
inc
sahf
cmp
mov
int
rolb
push
inc
in
dec
mov
jno
pop
inc
sbb
sbb
jb
sub
sub
xor
pop
inc
scas
sub
xor
dec
cmp
push
push
in
jb
pop
mov
int3
imul
nop
into
mov
push
inc
fcmove
loopne
out
and
fs
scas
jo
jp
add
ficoms
pop
adc
and
sbb
test
inc
fbld
test
inc
dec
enter
or
pop
fs
sub
test
inc
jae
jne
jp
and
nop
popf
mov
push
inc
test
stos
pop
lods
or
mov
mov
mov
push
inc
lret
pop
iret
or
shll
fiaddl
push
inc
jecxz
out
add
test
or
adc
inc
pop
enter
or
pop
and
test
mov
sbb
inc
jb
inc
mov
push
push
or
cmp
xor
xchg
dec
xchg
lcall
jb
cmpsb
mov
mov
cmp
aam
fcoms
inc
fcmovne
fistps
or
out
ret
stos
add
shll
xor
push
adc
lock
repnz
test
or
inc
fs
sub
test
inc
pop
enter
or
and
aam
enter
or
lahf
push
mov
and
lds
mov
sbb
pop
inc
mov
mov
hlt
sub
fcomps
push
pop
movsl
lods
mov
pop
pop
in
sub
pop
push
fs
addr16
or
mov
or
jge
jle
inc
jg
xorb
and
test
ds
mov
mov
mov
and
xchg
shrb
ja
sbb
shll
inc
dec
test
dec
cmp
stc
or
cmp
cmp
or
aas
scas
and
lcall
test
inc
mov
loop
sub
lret
in
jb
loopne
mov
mov
add
mov
dec
jmp
sarb
test
jb
inc
mov
push
scas
xor
mov
fs
jp
and
xor
fwait
pop
mov
pop
aam
movsl
mov
and
scas
cs
int
sub
inc
xchg
fisttps
push
in
jb
hlt
push
inc
sbb
scas
ja
adc
or
inc
imul
and
pop
push
xchg
scas
and
sub
sahf
xor
mov
in
jb
mov
pop
mov
mov
inc
rcr
push
adc
lret
loopne
insl
or
hlt
imul
icebp
or
hlt
sub
test
or
or
mov
jb
sbb
pop
push
sub
xchg
cmp
lret
out
xor
pop
arpl
sub
xchg
jno
lret
in
cmp
nop
xorl
into
jb
rclb
push
mov
adc
movsb
or
ss
sub
jmp
mov
mov
inc
sbb
sbb
or
daa
scas
adc
cmp
lret
in
jb
inc
mov
dec
scas
gs
dec
outsl
jns
jns
push
xchg
adc
or
pop
pop
arpl
jnp
nop
jle
adcl
pop
mov
and
test
inc
xchg
enter
or
popf
mov
stos
mov
push
inc
lods
enter
or
mov
mov
ret
mov
push
inc
vshufps
and
fs
sub
test
inc
iret
enter
or
shlb
aam
nop
aad
fcoms
inc
fxch
fstpl
or
in
fs
sub
test
inc
cli
enter
or
ljmp
dec
push
pop
or
or
or
pop
adc
and
sbb
test
inc
and
and
and
das
sub
test
xor
and
test
inc
dec
enter
or
dec
fs
sub
test
inc
jle
xchg
or
cs
adc
and
in
jb
icebp
mov
hlt
adc
sbb
or
das
dec
movsl
aam
jb
ds
clc
inc
adc
push
mov
pusha
scas
cmp
les
addb
inc
xchg
enter
pop
push
lahf
scas
pop
push
movsl
sub
enter
mov
or
ret
sub
test
inc
ror
aad
fimuls
and
fs
call
mov
and
ljmp
lock
or
sti
ljmp
inc
push
mov
or
adc
inc
jae
mov
and
jb,pn
inc
adc
fldl
push
dec
or
and
and
dec
dec
popa
dec
dec
repnz
cmc
pop
ds
test
pop
pop
pop
and
sub
pusha
and
pop
call
pop
imul
outsl
gs
inc
jne
dec
js
push
jnp
pop
push
subl
jb
mov
push
rclb
and
test
inc
mov
mov
fs
test
inc
fmulp
loop
out
and
fs
sub
test
or
push
or
test
inc
and
es
sub
and
fs
cmp
inc
enter
or
push
fs
sub
test
inc
imul
pop
ja
and
jg
addl
inc
xchg
enter
or
mov
test
inc
mov
or
enter
rolb
push
inc
loopne
jmp
out
or
mulb
sti
test
sub
test
sti
or
adc
sbb
test
xor
aas
sub
test
push
in
push
pop
push
sub
xchg
insb
sub
jbe
in
jb
popf
mov
movsl
scas
pop
push
test
xchg
mov
enter
mov
and
fs
test
inc
enter
or
repnz
sub
test
or
and
sub
inc
and
mov
cmp
xlat
movsb
test
push
and
push
push
adc
mov
mov
push
inc
xchg
mov
enter
add
push
push
shll
sub
sub
aas
in
jno
add
or
push
jge
imul
and
pop
sub
cmc
xor
inc
push
in
jb
dec
mov
push
dec
adc
pop
sub
gs
imul
push
and
jnp
jg
and
pop
cwtl
mov
stos
scas
xor
mov
leave
sbb
rcrl
fnstcw
push
insb
sbb
jae
lcall
jmp
and
sub
add
or
push
pop
push
or
and
jno
nop
jnp
adcb
mov
xchg
push
pop
andl
jb
mov
aaa
enter
lret
dec
and
insb
cwtl
fisubrs
sub
jne
hlt
loope
push
sbb
sub
push
inc
ss
or
inc
fs
sub
enter
or
outsb
fs
js
and
push
adcl
xchg
movsl
mov
xchg
scas
pop
jp
mov
enter
jb
aam
sub
pop
xor
scas
cmp
fists
ljmp
jb
stc
sahf
cmpsb
and
push
inc
sbb
sbb
inc
pop
enter
or
sub
push
sub
pusha
jb
gs
imulb
adc
data16
sub
scas
and
sub
jge
jg
addb
inc
test
and
pop
or
leave
xchg
cmp
pop
fisttpl
sub
sub
jmp
nop
repz
mov
roll
aad
lcall
and
mov
ss
aas
inc
dec
xchg
mov
sub
xchg
outsb
and
subb
inc
popf
pop
dec
cmpsl
scas
push
inc
stos
scas
adc
into
jb
xlat
mov
jo
mov
pop
adc
scas
or
enter
or
pop
mov
pop
or
and
fs
sub
test
xorl
sub
mov
xchg
xchg
cmp
popf
jb
mov
gs
scas
outsl
push
mov
and
in
sub
test
inc
fcmove
fistps
or
out
ljmp
push
and
inc
push
sub
test
inc
pop
enter
or
pop
and
test
inc
xor
cmp
or
inc
fs
sub
test
or
jne
jnp
jg
nop
test
and
test
inc
stos
enter
or
mov
mov
mov
ret
lret
enter
or
fldenv
fiadds
adc
adc
in
pop
sbb
scas
and
pop
test
adc
or
inc
ds
in
jb
dec
mov
out
mov
sbb
pop
jp
and
and
fs
aaa
enter
or
inc
fs
sub
test
popa
or
gs
sub
test
inc
mov
nop
pop
xchg
or
sahf
movsl
sub
test
inc
ror
pop
iret
or
test
or
or
sbb
push
inc
and
or
xor
sub
sub
xchg
pop
and
addr16
jle
xor
mov
pushf
scas
push
push
mov
das
and
mov
enter
mov
adc
dec
xchg
loope
lret
push
jecxz
and
gs
jno
add
jmp
push
adc
xchg
daa
sub
sub
cmp
and
mov
push
scas
imul
mulb
fs
add
fcoms
sbb
push
add
or
xor
out
push
inc
in
enter
sub
scas
and
sub
and
add
sub
or
sbb
lcall
mov
sub
or
sbb
sub
test
pop
push
insl
pop
or
aas
test
and
enter
or
dec
adc
mov
push
inc
clc
enter
or
push
or
push
dec
ljmp
dec
pop
or
aas
test
and
xchg
or
jb
xchg
adc
mov
or
mov
pop
sbb
test
xor
fdivrl
sbb
daa
pop
mov
jae
xchg
aam
nop
lods
or
sub
js
xchg
jp
enter
or
or
jo
std
jnp
and
push
inc
fcoml
push
mov
adc
enter
and
sub
scas
or
lahf
aam
and
fsubl
fldl
push
adc
pop
or
test
test
and
enter
inc
xchg
jb
push
jno
adc
pop
and
sub
push
pop
nop
adc
jo
sbb
jle
push
lahf
and
ss
adc
and
lret
in
sub
mov
movsb
sub
sub
and
adc
dec
push
stc
pop
sub
push
inc
in
cmp
push
adc
pop
or
popa
dec
ljmp
push
inc
loopne
addb
adc
orl
test
mov
push
sbbl
and
and
inc
and
and
fiaddl
nop
jb
or
adc
sbb
sub
or
and
jge
jl
jle
nop
push
test
sbb
inc
and
les
lds
push
sub
scas
or
lahf
aam
and
cltd
fs
sub
test
sub
mov
mov
nop
shlb
or
jb
nop
je
cmc
cmp
je
jb
mov
pusha
mov
adc
push
cli
addl
sub
ljmp
adc
mov
sub
enter
or
test
sub
arpl
sub
or
push
mov
loop
nop
in
inc
adc
sub
sbb
test
mov
mov
nop
mov
xchg
icebp
sub
repnz
cli
stos
and
sub
pop
or
test
test
and
enter
sub
test
lret
loop
sub
test
and
cmp
adc
or
hlt
bound
sub
testl
or
jle
in
and
push
push
fdivrl
movsb
adc
mov
push
inc
fmulp
movl
jp
and
loopne
sbb
sub
inc
push
lahf
fiadds
mov
into
push
inc
int
aam
sbb
mov
or
pop
inc
xor
sub
bound
dec
xor
sub
nop
push
cmpsl
cmc
test
and
jbe
and
test
daa
aam
lods
or
shll
and
mov
nop
std
mov
pop
in
or
out
bound
das
and
adc
push
or
push
dec
ljmp
xchg
pop
or
pop
inc
sbb
sub
mov
fmull
sub
inc
nop
mov
push
scas
or
lahf
aam
and
aaa
cmp
fiadds
jp
test
testl
inc
cmp
adc
sub
enter
or
inc
cmp
sub
push
and
sbbl
ss
cmp
cmpsb
sbb
sub
pop
sub
mov
pop
into
pop
inc
in
test
enter
pop
imul
or
cmp
mov
and
out
in
out
nop
push
test
sub
outsb
mov
xchg
pop
push
push
pop
and
sub
dec
or
aas
test
xlat
and
sahf
gs
jb
lock
inc
test
out
inc
or
and
sub
scas
and
sub
lret
push
ss
in
in
sub
pop
inc
and
or
data16
and
sub
sub
sbb
sub
scas
and
enter
dec
adc
mov
jg
rcrl
dec
inc
dec
mov
in
jb
hlt
adc
pop
cmp
test
dec
inc
xchg
addr16
es
orl
scas
or
lahf
aam
and
or
mov
or
insb
and
pop
mov
push
decl
xchg
inc
dec
mov
sbb
inc
mov
mov
lret
or
or
in
sbb
push
or
inc
push
sub
scas
and
sub
xor
push
push
adc
push
or
push
dec
ljmp
inc
pop
or
inc
sbb
push
push
sub
nop
inc
mov
adc
or
push
push
cli
mov
and
sub
test
rorl
shlb
test
movsl
push
inc
movsb
addr16
adc
gs
jb
cwtl
mov
inc
adc
mov
push
push
fsts
or
push
jns
or
aas
test
and
enter
or
stos
or
push
push
xor
std
les
daa
push
push
and
nop
out
lret
add
adc
adc
mov
or
and
in
pop
mov
or
ljmp
mov
pop
sub
and
cmp
or
or
add
jl
adcb
adcl
add
enter
outsl
sbb
xor
frstor
jmp
sbbl
add
aad
adc
ret
or
or
xlat
push
call
cmp
adc
jg
and
mov
scas
iret
add
jno,pn
orb
xor
add
fiaddl
xor
jbe
pop
std
adc
addl
xor
or
stos
adc
inc
push
test
inc
andb
sbb
xchg
xor
xor
push
and
push
add
adc
push
or
mov
and
push
inc
cmpsb
jl
add
add
sbb
add
add
jl
inc
jne
pop
cmp
and
and
jg
mov
xor
mov
nop
fistps
inc
rclb
call
xor
adc
in
and
cmp
mov
push
mov
adc
cmc
stos
or
nop
adc
pushf
jge
and
cs
adc
sbb
mov
dec
pushf
andl
sbb
enter
insb
mov
js
xor
inc
and
bound
adc
add
loop
inc
rcrb
enter
mov
fs
adc
sub
inc
fsubs
mov
and
adc
pusha
mov
js
and
inc
xchg
ret
fadds
mov
push
into
mov
cmp
xor
nop
pop
mov
outsl
rcrl
je
pop
inc
xchg
loopne
adc
sub
and
push
sbb
cmp
adc
sbb
inc
jle
orb
inc
popf
hlt
inc
sbbb
loopne
faddl
add
or
mov
mov
enter
out
or
cmp
push
inc
orl
jo
repz
clc
xor
adc
sub
rolb
mov
push
mov
fsubl
dec
push
fcoms
pop
add
inc
inc
or
push
and
mov
push
inc
inc
sub
test
outsb
loope
cld
xchg
adc
in
inc
xchg
rol
push
testb
pop
cwtl
daa
mov
sbb
xor
add
adc
sub
add
add
xchg
js
sbb
sbb
lcall
and
xchg
pushf
test
hlt
sbb
or
inc
enter
mov
mov
dec
push
cwtl
mov
and
adc
test
cmpsb
or
cmp
push
stc
lcall
popa
testl
xor
sbb
int3
movb
jb
bound
nop
repnz
dec
push
or
mov
lods
adcl
in
adc
sbb
rol
es
lds
bound
push
insb
push
aam
and
jnp
js
adc
ss
sbb
adc
test
mov
add
mov
jecxz
pushf
popa
and
or
inc
sbb
xchg
sbb
adc
fcmovnbe
dec
jo
xor
sarb
add
add
mov
repz
pop
sub
roll
xchg
and
xchg
pop
adc
cmp
adc
adc
push
rcrl
mov
lods
outsb
addb
and
sbbb
test
xor
mov
and
andl
rorl
test
or
pop
and
loopne
sti
movsl
loopne
inc
enter
lock
cld
add
add
add
pusha
push
ret
es
or
and
fsubp
push
les
push
and
lret
jns
test
dec
mov
push
jno
push
dec
cmp
adc
xchg
adc
jle
inc
pop
fs
pop
inc
inc
cmp
aam
xchg
call
sub
or
sarl
sahf
adc
and
in
fsubs
and
mov
or
imul
add
add
push
push
in
and
jmp
shl
pop
cmp
adc
inc
adc
mov
adc
inc
movsb
or
cmp
adc
adc
mov
push
jle
push
adc
inc
and
andb
jge
inc
and
xchg
js
cltd
push
or
mov
call
add
pop
adc
sbb
adc
mov
add
shlb
xor
hlt
inc
mov
adc
aaa
xlat
pop
imul
dec
rcl
pusha
jne
adc
shrl
mov
call
incb
jno
lock
jb
es
mov
xchg
adc
cli
inc
fmul
inc
subb
test
mov
jo
and
outsl
push
js
out
insl
jo
clc
xor
xor
fildl
loopne
mov
mov
dec
clc
push
adc
xor
rorb
jnp
pusha
fldenv
inc
adc
sub
mov
and
clc
and
pop
aad
movsb
dec
nop
add
and
cmp
fwait
ja
fdivrs
shll
nop
inc
call
shlb
lods
jne
adc
pop
mov
jo
xor
fs
cmpsb
adc
sbb
stos
adcb
sub
xchg
mov
cwtl
enter
or
add
and
dec
mull
pop
cmp
inc
rclb
in
es
sub
cli
adc
lcall
sbb
xlat
clc
nop
and
in
jg
popf
push
mov
int3
inc
shll
inc
es
push
loopne
cmp
adc
aas
test
inc
mov
fisttpl
cld
and
aas
shrb
xor
adc
push
jl
popa
adc
cwtl
shlb
adc
add
and
add
fadds
mov
lahf
cmpb
pushl
les
in
xor
mov
xor
or
sub
or
adc
or
lcall
cmp
lea
inc
adc
test
inc
mov
nop
cmp
jl
xchg
ss
and
xchg
fcomps
shlb
adc
or
aas
imul
mov
dec
xchg
rolb
push
adc
icebp
jo
sub
sub
mov
add
andb
add
sbb
lea
xchg
mov
and
and
or
push
and
adcl
lock
js
pusha
and
mov
adc
pop
push
add
adc
enter
insb
add
inc
pshufw
or
adc
inc
dec
or
ret
push
ret
in
xchg
adcl
fsubl
cmp
sub
hlt
movsb
clc
and
xchg
jo
imul
out
dec
out
mov
movsb
pusha
rclb
mov
je
add
loop
into
adc
mov
sub
sub
sub
sub
adc
inc
inc
cwtl
push
or
mov
dec
cmc
add
and
test
mov
aas
addb
mov
mov
fmuls
push
setnp
add
cmpsb
jo
js
sbb
mov
adc
cmp
xor
inc
pop
sarl
mul
and
and
mov
stc
inc
xchg
sbb
pop
mov
or
xchg
or
incb
add
sbb
or
and
or
das
xchg
mov
add
and
pop
ret
mov
sub
add
sbb
lahf
dec
dec
and
inc
and
xor
sub
push
push
sbb
push
mov
sbb
adc
add
push
fsub
and
movsb
cmp
or
add
fstps
nop
add
inc
nop
ljmp
lret
adc
or
push
adc
mov
xchg
mov
and
push
sub
mov
fmul
push
mov
sub
and
mov
mov
mov
pop
repnz
mov
cmp
inc
daa
mov
popa
sbb
adc
lret
jmp
mov
and
in
andb
dec
push
mov
hlt
ret
dec
in
mov
jno
cltd
push
sub
outsb
pusha
mov
notl
dec
mov
inc
push
dec
push
fsubl
mov
clc
mov
and
aas
mov
and
or
test
add
cld
sub
sub
sub
adc
sub
xchg
daa
imul
xchg
add
and
enter
cmp
mov
faddl
leave
add
jb
sbb
sub
mov
mov
std
bound
ljmp
jle
sub
js
push
mov
sub
push
and
dec
hlt
aas
dec
aas
rcr
add
test
sub
inc
sub
xchg
cwtl
inc
sub
mov
imulb
dec
push
push
xor
push
orl
gs
lahf
test
daa
fcoms
sbb
and
push
dec
and
pop
mov
sub
mov
sahf
mov
or
push
std
outsl
les
dec
dec
ljmp
sub
dec
sub
sahf
dec
cmc
adc
or
sarb
rclb
push
in
into
mov
es
or
sysexit
test
and
adc
clc
xchg
repnz
adc
lock
xlat
push
inc
dec
lret
sub
test
and
scas
sub
cli
clc
mov
mov
xchg
xlat
into
and
nop
ficomps
ror
movl
incb
out
enter
and
mov
jl
pushf
fiaddl
adc
jno
adc
jmp
sbb
daa
mov
or
test
mov
jle
inc
mov
test
pop
mov
test
insl
mov
call
shl
inc
icebp
ja
imul
inc
mov
sub
and
and
pusha
fbld
sub
test
clc
jo
test
test
mov
incb
out
enter
pop
shl
out
inc
add
sarb
adc
or
adc
imul
inc
sar
sub
fstpt
and
sub
xor
adc
sub
aaa
test
pop
aas
sbb
test
dec
xchg
add
mov
mov
enter
inc
out
mov
add
mov
mov
mov
mov
aaa
jl
xor
mov
pop
lahf
and
add
mov
or
sbb
inc
push
je
pop
push
fildl
mov
and
cmc
lock
mov
mov
dec
jno
jmp
adcb
in
sub
fists
test
pop
mov
icebp
lods
mov
mov
mov
sub
and
and
pusha
aad
inc
or
fistps
dec
lods
adc
repz
pop
mov
pop
enter
mov
mov
sbb
clc
cmp
mov
scas
out
scas
adc
mov
loope
mov
mov
or
test
mov
in
enter
je
shl
push
adc
icebp
jg
jmp
mov
xchg
sub
and
xchg
xchg
jl
test
int
adc
mov
stc
mov
pop
stc
iret
or
sub
lock
mov
aad
jmp
jecxz
in
sub
adc
mov
push
pop
mov
movsb
jge
or
fisttps
pop
movsb
push
cld
sub
pop
bound
or
movsb
jge
and
movsb
aaa
jl
push
movsb
pop
icebp
pop
daa
clc
mov
cmpsl
xor
adc
xchg
and
sub
cli
clc
outsl
test
jns
repnz
xor
imul
and
enter
stos
sbb
mov
push
inc
xor
leave
pop
pop
nop
shrl
inc
out
repnz
pop
movsl
jl
fiadds
fists
lret
cs
cmc
clc
add
shld
lock
movsl
lock
les
fists
jp
add
or
sub
pop
adc
jne
shl
jbe
push
lret
inc
mov
loop
movsl
pop
loopne
pop
sbb
les
ds
loope
movsl
sbb
clc
xchg
or
and
jmp
scas
cmc
stc
mov
ja
int
jmp
xlat
cmc
stc
loope
jmp
jmp
in
sub
and
cmc
clc
or
cmpsb
sbb
daa
cmpsb
pop
pop
adc
scas
repnz
jle
inc
mov
aad
inc
and
sub
rolb
mov
stc
or
mov
mov
das
js
and
aaa
mov
sub
mov
xchg
daa
mov
dec
mov
in
testb
cmp
or
imul
jge
adc
repnz
inc
or
dec
pop
jmp
clc
jne
xchg
imul
jge
adc
repnz
clc
roll
rorb
nop
jle
adc
xor
adc
sub
js
cmpsb
pop
adc
jmp
nop
test
xchg
jl
cmp
dec
sti
sub
lods
cmp
in
divb
mov
sub
push
daa
fists
xchg
mov
cmp
push
testb
enter
ficomps
add
pushf
shr
mov
mov
xlat
lret
pop
clc
mov
push
inc
xor
mov
cmc
adc
jle
and
imul
loopne
leave
std
dec
mov
push
stc
outsl
fidivs
loop
mov
shrb
inc
movsl
push
and
je
inc
adc
jne
push
shlb
popf
nop
fiadds
mov
arpl
push
out
insb
dec
or
movsb
fiadds
dec
sub
add
sub
leave
imul
sbb
or
fwait
js
mov
mov
enter
ret
jmp
push
dec
fists
lret
daa
roll
cld
pushf
mov
jb
push
pop
movsb
mov
and
jno
fwait
pusha
enter
dec
repnz
and
sahf
cmp
sub
push
pop
pop
jmp
mov
mov
xchg
stos
fcmovne
mov
pop
scas
jnp
xchg
mov
and
dec
mov
clc
movsl
stc
and
sub
mov
test
test
in
nop
decb
pop
repnz
aaa
jmp
sbb
int3
js
mov
pop
xchg
push
fdivr
jo
cld
adc
lods
clc
pop
cmpsb
mov
pop
pop
xor
inc
inc
rclb
pop
lods
jge
call
enter
ret
adc
xor
and
pop
pop
xor
adcb
cmpsl
stc
jl
cli
std
jns
mov
mov
push
ss
test
cmp
test
cmpsl
sti
aas
xor
clc
push
jmp
cmp
scas
xchg
sbb
and
fists
fbld
cmp
lahf
loopne
cmp
les
add
in
and
cmpsl
psubw
shl
cmp
add
push
xchg
mov
inc
hlt
out
jg
dec
mov
lret
push
in
sub
js
repz
scas
or
iret
or
and
xor
movsb
inc
or
flds
dec
cli
lcall
mov
sti
sar
lret
adc
ljmp
outsl
dec
lock
aas
jp
cld
sub
call
cwtl
ficompl
add
ja
and
adc
mov
pop
pop
movsl
shl
push
mov
xchg
mov
clc
ja
loopne
mov
test
pop
repnz
es
sar
xchg
xor
scas
ja
sub
enter
push
sti
pop
repz
sub
std
sub
stc
jo
aad
call
or
push
clc
jg
imul
mov
popf
je
mov
pop
pusha
jb
push
jl
cmp
lahf
sub
movsb
mov
jmp
and
pop
iret
dec
repnz
rcl
in
test
mov
scas
lock
nop
test
xchg
xchg
push
aad
sbb
push
dec
mov
inc
jge
les
mov
adc
push
imul
in
sub
mov
mov
inc
pop
fidivrs
popl
std
sub
les
lahf
and
mov
cmp
hlt
mov
pop
add
bound
ficoml
fadds
clc
lret
es
inc
mov
aad
and
cmp
stc
sarb
ret
fcoms
jg
and
and
sub
mov
pop
call
js
lods
enter
nop
decl
inc
decl
call
pop
psrld
lds
dec
sub
ret
adc
popf
adc
imul
inc
sarb
sub
and
notl
dec
mov
test
add
insl
inc
testb
push
xchg
loop
mov
pushf
and
or
sub
pop
loop
lret
and
je
into
dec
sbb
pop
sub
push
add
mov
add
push
or
mov
and
xchg
test
test
in
pop
repnz
cmp
test
mov
jmp
adc
enter
push
inc
or
push
xchg
and
loope
xchg
ds
shr
ds
hlt
into
sbb
hlt
call
xlat
jp
pop
push
mov
test
cld
dec
xor
inc
fdivr
dec
shrl
mov
xchg
adc
add
add
stc
int
mov
scas
adc
in
lcall
out
ja
jo
dec
dec
test
dec
stos
adc
scas
hlt
out
jp
in
shl
loop
adc
pop
pushf
test
adc
jg
pop
test
leave
jns
pop
movsl
xor
cmp
call
call
faddl
push
dec
insl
inc
inc
nop
mov
ja
xor
adcl
dec
push
mov
jle
adc
sub
sub
sbb
mov
clc
pop
imul
jp
mov
pop
nop
sbb
out
std
jnp
inc
std
jle
clc
cmc
cli
repnz
mov
in
mov
mov
or
or
lea
ja
nop
jmp
loopne
adc
shr
jle
mov
lret
add
test
mov
jnp
xor
inc
jo
and
add
ja
in
jo
or
cmpsl
seto
imul
adc
ja
enter
clc
add
enter
add
jne
push
inc
push
in
sub
and
adc
movsl
xlat
addr16
or
test
jb
sahf
dec
ja
jge
loopne
call
pop
push
pop
add
sub
mov
or
clc
sub
cld
mov
daa
mov
mov
ds
mov
dec
das
mov
inc
fbld
shr
jb
xor
jmp
xchg
sub
insl
clc
out
sub
nop
jle
sub
dec
ljmp
pop
adc
inc
xchg
adc
pop
popf
gs
jle
inc
xchg
jle
xchg
xlat
adc
adc
dec
out
lahf
fcom
out
scas
push
clc
test
mov
ja
adc
das
jnp
xchg
cmp
xor
adc
imull
ljmp
push
push
add
add
movsb
mov
in
lods
dec
jmp
cmpsl
or
pop
in
test
push
lret
pop
inc
nop
jl
fcoms
shr
testl
adc
lret
stc
sub
cmc
sahf
orb
cli
push
aaa
lock
aaa
pop
mov
test
dec
jge
pop
fildll
gs
push
fld1
ja
cmpb
sti
xchg
scas
fucomi
mov
xchg
mov
test
in
das
push
scas
dec
sbb
xchg
sti
sub
into
pusha
jmp
nop
push
std
sub
jp
mov
aaa
test
lea
jmp
fdiv
movsl
jns
out
mov
cltd
test
pop
sbb
cmp
jecxz
mov
mov
test
jl
fildll
cld
push
jne
call
arpl
pop
jmp
lcall
xor
adc
cmc
sub
sub
sub
call
mov
or
test
test
mov
lods
nop
in
mov
mov
call
add
cmpsl
pop
sbb
push
or
notl
push
xchg
fmuls
mov
call
jo
push
test
nop
hlt
and
dec
push
and
test
dec
clc
enter
fcoms
ljmp
clc
mov
das
fmul
sub
mov
scas
pop
mov
sub
xor
mov
sarl
sub
sub
mov
dec
aad
sub
je
mov
lock
pop
in
stos
sub
jge
test
mov
mov
and
adc
mov
and
mov
cwtl
cli
cld
push
sub
in
jnp
xchg
imull
nop
xchg
not
mov
popf
jg
sub
mov
dec
iret
mov
in
sub
cli
mov
push
push
shld
cli
jne
loopne
cmpsl
push
pop
cmpsl
hlt
dec
jg
fwait
out
mov
sub
add
sbb
jg
pusha
in
cmp
shr
push
scas
and
mov
std
loop,pn
repnz
ret
nop
ficompl
push
pop
or
test
mov
shr
push
scas
adc
mov
bnd
push
jmp
loope
test
mov
add
cmpsl
nop
mov
push
test
or
mov
push
negb
add
call
fdivrs
add
lahf
fmuls
inc
in
mov
cld
sub
cmpsl
dec
pop
pop
ret
rcll
aas
in
shrb
add
fdivs
pop
scas
lret
fiadds
mov
xor
cmp
pop
test
push
sti
enter
sbb
add
repnz
adc
mov
xor
loope
in
xor
hlt
sub
stc
shlb
mov
jnp
jns
and
out
pop
mov
clc
or
fs
mov
outsl
dec
or
stc
or
sbb
and
jle
mov
call
in
cmp
add
dec
mov
mov
fldt
sbb
xchg
rorl
js
and
and
adc
test
mov
or
stos
push
lret
inc
lock
clc
daa
adc
repnz
or
sub
push
les
xor
out
and
adc
pop
adc
scas
and
adc
jge
es
imul
aad
sub
test
adc
push
fsubl
popa
mov
xchg
or
loop
mov
jmp
inc
jns
sbb
jnp
stc
dec
pminsw
les
mov
mov
mov
les
or
clc
mov
out
and
in
das
adc
jg
xchg
test
pop
imul
pop
jp
pusha
je
mov
pop
sub
sub
ficoml
clc
jmp
jle
fbld
sbb
adc
shrb
ja
pop
jne
pop
inc
cmp
xchg
stc
adc
test
or
adc
out
cs
mov
sbb
xchg
add
lahf
test
xlat
xor
mov
dec
stos
scas
adc
loop
rcr
jg
pop
enter
push
stos
ficomps
push
mov
push
mov
ljmp
pop
mov
lods
cmp
xchg
test
pusha
stos
push
outsl
pop
aam
lret
mov
stc
dec
and
push
in
bnd
push
push
cmpsl
xchg
dec
cli
repz
mov
call
enter
sbb
add
lret
je
push
xchg
enter
sub
hlt
mov
mov
js,pt
sub
xchg
pop
je
cmp
sbb
es
movsb
rcll
adc
ficoml
gs
push
sbb
movsl
and
adc
cmpsl
aad
mov
daa
outsl
andb
cmp
push
sub
scas
push
push
sbb
mov
or
lods
cmp
js
stos
lea
jge
mov
lcall
dec
je
cmp
ficoms
cmp
cmp
dec
vmwrite
popf
jae
jle
pop
pop
decb
mov
pop
mov
std
pop
or
add
and
or
mov
loop
push
dec
or
sar
pop
sub
mov
mov
repnz
or
jne
mov
push
adc
rclb
xchg
stos
mov
or
push
adc
dec
sub
mov
std
push
cmp
popf
stos
jnp
mov
jmp
adc
dec
mov
mov
push
push
add
push
mov
es
dec
fsub
stos
mov
mov
test
jp
in
js
jg
cwtl
aad
int3
dec
dec
push
jno
mov
call
lret
enter
enter
cmpb
pop
sti
outsl
lock
lods
cmp
push
sub
std
imul
stos
pop
repnz
pop
inc
shl
mov
lcall
cmpb
in
sub
std
dec
and
sub
push
sbb
sbb
enter
sbb
enter
push
sbb
es
imul
pop
and
inc
mov
sbb
jl
je
test
dec
icebp
fcoms
jmp
and
repz
loope
dec
sti
dec
mov
sub
gs
lock
pop
push
hlt
dec
and
cli
test
or
push
lock
mov
fcompl
add
jne
lock
fiadds
scas
pop
sti
imul
sti
sub
cmc
out
mov
mov
shl
loopne
pop
mov
pop
sarb
popf
lock
pop
jo
test
sub
adc
stc
dec
loop
xor
hlt
lret
movsb
xor
add
sbb
clc
jmp
xchg
cwtl
add
add
inc
and
lahf
hlt
js
lret
jns
xlat
xchg
xlat
out
inc
jmp
in
jnp
sar
lock
jp
adc
nop
mov
es
mov
add
lea
cwtl
lds
push
fisubrs
mov
outsl
js
mov
movsb
mov
push
movsl
in
sub
jl
shr
or
mov
xchg
sub
hlt
ljmp
mov
push
xchg
push
lds
mov
sahf
nop
pop
add
out
pop
pop
scas
dec
cli
cmp
pop
leave
jg
mov
pop
cmp
xor
mov
xchg
and
mov
xchg
sahf
xor
ds
in
lahf
fsubs
xor
decb
or
xchg
mov
shlb
mov
in
nop
jp
mov
out
shrl
outsb
shl
notb
jns
es
popf
rcll
repnz
inc
and
nop
aad
nop
jg
dec
sahf
pop
dec
das
dec
pop
mov
js
lret
enter
or
dec
out
dec
sti
jle
stc
cmp
sarb
or
jne
mov
mov
xor
sub
inc
and
or
jle
or
mov
dec
lods
sub
shl
mov
stc
sub
std
or
sub
fsts
cmp
sti
mov
jge
inc
int3
scas
repnz
pop
rcrb
push
push
iret
cmp
sub
scas
pop
iret
or
repnz
fsubp
test
les
aas
and
jno
pop
fisubl
jge
loopne
lods
jns
fucom
cmp
dec
clc
enter
test
xchg
aad
nop
fcmovu
outsl
sbbb
sub
in
out
test
shrl
jns
pop
das
jg
lock
push
cwtl
jg
jl
push
jmp
test
pop
add
das
mov
sub
mov
jne
add
cmpsl
clc
out
push
fwait
dec
in
lret
pushf
and
or
push
and
jbe
test
sub
loop
in
lcall
mov
mov
jne
fmul
jne
les
lahf
dec
lods
imul
cmp
rcll
scas
and
mov
in
sub
imul
in
call
repnz
cmp
mov
stos
jmp
xor
push
fbld
mov
in
cmpsl
cmp
mov
inc
jle
mov
or
add
stos
leave
dec
sbb
push
jno
pop
movsl
xor
sub
out
std
sub
pop
mov
test
cmc
jmp
call
daa
mov
xor
mov
jmp
js
cmp
es
and
sarb
xor
aam
stos
pop
fistl
ljmp
pop
nop
dec
push
das
inc
scas
and
nop
or
repnz
xlat
xchg
jo
enter
sbb
out
dec
scas
outsl
rclb
cmp
push
or
out
repnz
fsubp
push
cmc
std
mov
mov
fidivl
jbe
cmc
leave
push
jno
cld
dec
sub
stos
jo
dec
inc
add
enter
dec
push
fs
mov
cmp
stc
and
mov
push
mov
and
movsl
push
add
loopne
pop
mov
daa
aaa
jmp
pop
pop
xor
cmpb
mov
loopne
dec
pusha
out
xchg
les
pusha
in
test
xchg
lret
int3
in
fildl
xchg
fwait
ror
dec
call
push
mov
scas
adc
and
jo,pt
lock
icebp
pop
pop
mov
push
icebp
push
dec
mov
cmp
test
enter
fucomip
push
ja
ja
lock
fsubl
cwtl
jne
daa
mov
stc
cmp
aas
sbb
shr
sub
cmc
mov
stos
pop
mov
jle
push
cmp
pusha
pusha
jne
adc
jle
inc
add
adc
in
jle
hlt
mov
in
or
leave
lret
mov
jg
add
and
aam
aam
hlt
xor
pop
enter
js
or
push
je
insl
xor
sub
mov
fdivs
in
cmpsb
adc
hlt
mov
xchg
inc
clc
mov
adc
dec
out
pop
call
stos
scas
and
pop
in
call
mov
mov
stos
test
stos
jp
out
clc
xor
rcr
test
cli
sub
shrb
inc
jne
or
mov
sahf
push
lods
xor
ljmp
cmp
lods
aam
nop
inc
hlt
out
testb
sbb
fwait
and
lods
popf
push
mov
push
xlat
stc
cwtl
ja
addr16
pop
cmpsl
and
hlt
in
mov
les
lods
aas
pop
fimull
std
xor
mov
cmp
scas
shrb
cld
add
push
sub
mov
mov
mov
push
sub
clc
adc
mov
and
mulb
repnz
cmp
push
cmp
inc
dec
push
lods
mov
sbb
lods
adc
cld
jo
lahf
loopne
mov
adc
std
jg
jo
mov
push
cli
jle
std
jecxz
insb
test
and
insl
sbb
mov
mov
decb
mov
and
sub
dec
fwait
or
xchg
xchg
mov
pop
loop
or
inc
inc
hlt
popf
or
jno
fidivs
and
rol
test
cmpl
insl
or
ljmp
sub
xchg
jnp
aad
imul
xor
push
mov
adc
mov
mov
aad
push
sbb
or
jns
sbb
adc
adc
fiadds
mov
faddl
push
jp
push
movsl
and
out
cmp
xchg
cmp
jmp
sub
jl
mov
test
lods
sub
dec
mov
loopne
jmp
adc
mov
test
xchg
lods
mov
daa
hlt
push
js
and
and
cmpsl
dec
nop
stc
pop
push
outsl
loopne
stos
xorb
or
jo
fldl
icebp
cmp
std
jb
mov
dec
dec
cmp
xchg
jnp
dec
out
lcall
jge
imul
scas
daa
stos
lds
xchg
jg
jo
dec
mov
or
inc
in
push
xor
lock
test
dec
push
test
nop
fdivrs
dec
sub
cmpsb
xor
cmp
outsb
add
sub
lods
jl
jg
lret
sti
es
mov
lods
jl
push
jmp
sub
shl
clc
xchg
cld
nop
mov
add
dec
testb
mov
loopne
xchg
ljmp
add
fists
sub
jmp
dec
nop
pop
push
jg
mov
loop
fnstenv
dec
push
in
jb
mov
lcall
outsl
sbb
js
or
aaa
pusha
mov
xchg
cwtl
jg
fisubrs
pop
lahf
xor
mov
das
jbe
fucom
sub
xor
shll
sbb
jl
or
clc
bound
pop
add
mov
cli
pop
sub
icebp
aam
push
push
adc
sbbb
mov
pop
cmpsl
pop
inc
rcr
mov
sub
mov
cld
push
xchg
pop
cld
cmpsl
push
cli
jne
shr
xlat
out
lock
or
cld
lods
ds
mov
scas
in
subb
lahf
mov
aas
fcoms
jle
cmc
pop
cmp
or
lods
jg
cmp
imul
lock
dec
or
scas
lret
in
dec
or
out
and
push
adc
push
sub
movsl
fdiv
push
fsubl
xlat
lock
in
or
push
sub
add
push
ljmp
jl
ficoms
dec
shr
lret
cmp
scas
sub
repz
dec
nop
scas
sub
hlt
repz
or
hlt
mov
popf
dec
xchg
dec
pop
out
sub
in
mov
mov
mov
xor
lds
sub
fmuls
pusha
mov
adc
add
dec
stos
inc
xor
or
insl
and
adc
jno
jns
and
sub
lock
dec
jg
mov
in
mov
lahf
cmp
dec
loope
add
cld
xchg
in
loop
cli
inc
nop
mov
mov
sbbb
test
jns
sbb
call
ljmp
add
xchg
loopne
cmpsl
mov
jp
lock
jns
stos
lret
nop
sti
test
mov
jl
sub
push
dec
mov
insl
pop
adc
adc
stos
and
pop
inc
cmp
repnz
xor
dec
pop
xchg
dec
scas
and
pop
nop
push
mov
push
hlt
fdivp
test
scas
testl
stos
in
repnz
sbb
and
jnp
dec
mov
adc
pop
das
insl
lods
push
and
scas
in
pop
lahf
pop
sarb
xchg
lcall
dec
rcl
jns
cld
mov
loopne
sarl
or
pop
mov
icebp
test
cmpsl
pop
iret
sub
xchg
jle
aad
ret
xchg
mov
test
cli
iret
shr
les
jmp
cmpsl
mov
push
xchg
fsubr
pop
adc
test
fsubrs
test
sub
imul
jne
js
pop
xchg
sub
stos
xchg
or
push
inc
sbb
pop
mov
call
pop
in
das
nop
lret
add
add
dec
or
sub
pop
mov
jg
xor
jmp
mov
jge
pop
inc
jo
mov
pop
inc
lods
cmc
jmp
and
push
popf
adc
ja
adc
xor
sbb
push
pop
decb
std
sbb
es
push
stc
or
enter
pop
xchg
in
das
add
fsubs
nop
sar
push
dec
leave
adc
cld
lret
push
fcoml
aam
out
mov
inc
xlat
jmp
call
jnp
jmp
call
jno
dec
fdiv
cli
push
repnz
jp
fcom
nop
pusha
scas
lret
cmc
jmp
mov
adc
outsb
nop
mov
loope
lods
or
call
aas
push
fsubrs
pop
outsb
mov
pop
popf
adc
sbb
xchg
adc
lods
adc
ja
repnz
inc
ljmp
in
jne
enter
lods
pusha
jmp
divb
xchg
test
test
pop
int
loop
or
dec
aad
xor
mov
rol
dec
stos
sub
repnz
cmp
imul
out
sbb
inc
and
jl
scas
mov
jmp
jbe
int3
mov
loope
scas
imul
mov
mov
lock
mov
jg
sarb
dec
testb
sub
aam
mov
mov
xor
xchg
clc
imul
dec
jns
dec
fmul
cmp
js
or
nop
xchg
lcall
js
adc
nop
call
mov
test
and
pop
mov
jl
cmp
lock
popf
adc
fdivrl
inc
xor
sbb
cmp
mov
cli
repz
lgdtl
icebp
dec
cmp
nop
mov
lds
pop
xchg
lods
sti
iret
sub
ds
mov
fisubs
std
mov
jg
and
flds
dec
cwtl
and
sub
dec
imul
jb
cmp
scas
test
mov
push
scas
enter
mov
sub
pusha
pop
xchg
mov
outsl
mov
fsubr
mov
mov
push
jmp
cmp
std
jnp
nop
daa
into
inc
jo
pop
mov
scas
bnd
stc
mov
cld
nop
test
jle
and
imul
nop
mov
pop
les
mov
xchg
mov
jle
cmp
mov
test
pop
hlt
mov
call
mov
ja
nop
dec
decl
nop
popf
mov
mov
jl
enter
leave
stc
push
mov
lret
inc
push
scas
leave
add
push
pop
icebp
pusha
jns
or
push
mov
insb
scas
enter
hlt
or
nop
jo
repnz
aaa
jle
fdivrs
out
jmp
pusha
jle
loop
enter
sub
pop
ret
push
adc
xchg
push
mov
pop
adc
add
add
dec
push
inc
dec
loop
pop
lods
dec
enter
in
jg
push
or
cld
outsl
shr
cwtl
mov
jae,pn
push
stc
sbb
sahf
cwtl
in
das
call
pop
mov
call
pop
sbb
nop
xchg
and
out
rol
add
test
lock
push
inc
sub
xchg
sar
add
adc
enter
notl
mov
xchg
shrb
aas
fcoms
pop
dec
sub
push
shrb
and
push
sub
fcomps
jo
mov
jle
je
mov
mov
jmp
inc
pop
nop
xchg
scas
enter
cwtl
mov
and
nop
mov
in
mov
jmp
add
outsb
scas
enter
js
cld
rolb
and
inc
mov
scas
negb
les
mov
scas
push
mov
ja
push
push
out
pop
test
out
icebp
mov
lods
scas
scas
clc
mov
scas
mov
shrb
cmc
sbb
inc
adcb
scas
aas
jno
jg
clc
in
and
addr16
adc
cmp
push
mov
repnz
stc
call
adc
sub
sub
stc
or
out
call
jo
sub
add
das
in
and
js
and
movsl
mov
sub
sbb
loopne
dec
leave
sub
clc
stc
sub
mov
lcall
and
sarb
cmpsl
jg
xor
nop
loope
or
or
mov
mov
mov
pop
mull
jg
call
xor
sub
xor
stos
jnp
test
movsl
fdivr
aad
and
adc
scas
cmc
stos
mov
mov
and
mov
pop
loope
or
stos
add
nop
pop
hlt
cld
pusha
scas
cmc
clc
mov
xlat
out
mov
imul
mov
aad
fdivrs
outsb
popl
enter
and
testb
and
mov
mov
sbb
daa
xchg
fcomps
jge
push
pop
cmp
outsb
inc
mov
mov
clc
xor
xchg
out
mov
stc
ds
mov
xlat
jno
addr16
dec
mov
std
jle
shrb
cmc
jmp
ret
daa
inc
mov
adc
js
lret
dec
loopne
adc
dec
jle
jbe
push
leave
std
iret
enter
mov
lds
dec
frstor
repnz
rcl
jmp
nop
jne
mov
or
adc
in
loopne
enter
jne
shlb
mov
push
negl
cmc
ret
sbb
lret
pop
sbb
pop
jle
jg
and
test
push
insb
cli
jae
jle
dec
call
jne
insb
dec
in
pop
and
adc
mov
call
call
adc
or
fidivrl
sarb
fdiv
mov
cmp
mov
mov
jmp
adc
fsubr
dec
scas
lcall
xchg
pop
pop
enter
fdivr
dec
scas
mov
mov
xchg
push
enter
sbb
enter
lock
sbb
push
xorb
cmp
cmpb
jmp
out
mov
xlat
or
js
push
adc
sar
mov
mov
test
xchg
push
add
es
and
xchg
pop
pop
cmp
and
cmp
pushf
lcall
shll
cld
mov
jmp
test
adc
scas
icebp
dec
push
pop
rorb
dec
mov
xchg
and
pushf
movsb
sti
xchg
mov
std
cmp
mov
nop
call
inc
jg
in
scas
icebp
lret
mov
mov
mov
push
hlt
outsb
test
add
adc
mov
repz
cli
dec
aas
loopne
fists
or
cld
jmp
xchg
out
das
nop
sub
dec
data16
and
pop
xchg
cwtl
pop
pop
repz
mov
mov
ret
in
cli
lret
push
pop
mov
mov
shrb
subb
xor
ja
push
mov
in
jp
push
pop
loope
daa
ret
adc
cld
pop
xchg
xor
popf
inc
sar
mov
pop
test
push
fs
js
fcmovbe
mov
cmpsl
jg
mov
push
xchg
int3
scas
cmc
cmp
mov
in
sahf
sub
fs
mov
xchg
cmp
scas
pop
lret
call
insl
mov
les
dec
clc
aad
push
insl
test
adc
mov
mov
fnstcw
jnp
nop
hlt
jp
sub
mov
push
loopne
push
pop
inc
mov
ljmp
add
shlb
xchg
lock
inc
cli
jle
jg
clc
scas
or
push
pop
cmp
push
and
mov
ret
xchg
fmuls
inc
mov
sbbb
sti
loop
mov
in
fmul
inc
pop
inc
pop
hlt
mov
enter
dec
imul
clc
mov
pop
sub
xchg
rcr
es
mov
dec
cmp
xor
pop
dec
out
mov
sbb
inc
and
mov
xor
cld
in
pusha
jge
cld
ljmp
scas
sub
daa
addr16
xor
cli
pop
aam
repnz
jno
push
cmp
mov
and
or
andb
rcrb
push
adc
stos
imul
jl
fbld
ljmp
mov
mov
jmp
sbb
mov
add
nop
jmp
outsl
fcomps
push
or
jp
enter
push
jge
sub
xor
es
xlat
scas
cld
or
cli
push
fidivrs
pop
leave
jge
mov
mov
and
inc
pop
es
add
push
hlt
lret
add
mov
jo
or
xchg
aaa
call
lods
fwait
lahf
xor
outsb
test
and
mov
and
hlt
pop
ret
imulb
es
add
inc
pop
xchg
rcl
cld
or
movsl
jle
pop
dec
loopne
stos
adc
enter
mov
add
xlat
inc
nop
ret
jne
xor
call
leave
add
fcoml
mov
jle
jg
sub
nop
and
pop
in
jmp
xor
xchg
call
in
cmp
shl
push
repnz
sbb
push
dec
dec
mov
cmp
push
fadd
mov
jl
loopne
sub
pushf
mov
mov
mov
out
hlt
nop
inc
fs
mov
fwait
loopne
das
mov
out
stc
pop
and
adc
cld
mov
mov
push
in
sub
fdivl
inc
cld
mov
nop
cmc
scas
enter
ljmp
cld
hlt
cli
jle
pop
cmpsb
pusha
aad
or
xchg
push
movsb
mov
scas
push
push
inc
pop
push
in
adc
and
pop
mov
add
push
fs
sarb
lock
or
bound
mov
xor
lock
mov
loop
mov
jmp
sbb
add
insb
pop
or
push
test
add
cmp
or
sti
mov
push
in
jle
lock
test
and
test
cld
dec
cmpb
pop
int3
aas
mov
pop
mov
pop
stc
outsb
js,pt
out
aas
and
out
das
enter
and
dec
mov
test
out
push
les
sub
jne
xor
sbb
je
inc
mov
sti
aas
loopne
outsb
push
enter
scas
lret
js
nop
jle
loopne
scas
enter
in
repnz
adc
push
in
mov
cwtl
bnd
lock
adc
clc
and
mov
cld
cmpb
mov
mov
mov
fisttpl
fldl
sub
ds
xor
and
xchg
out
ja
dec
scas
cmc
lods
adc
fcompl
cs
or
fdivrs
mov
push
cld
sub
pop
push
scas
mov
daa
or
sub
aad
js
popf
ficoms
les
push
jle
push
adc
mov
mov
dec
or
xor
mov
ja
jns
dec
push
xlat
cmp
pop
ret
adc
sub
cld
sti
mov
mov
mov
andb
int3
adc
pusha
in
rolb
enter
out
cld
loopne
jg
loopne
cld
ljmp
sbb
hlt
sub
hlt
test
imul
pop
pop
inc
sbb
pop
or
stc
sub
dec
test
add
pop
adc
std
outsb
outsl
shlb
stc
sub
popf
test
std
insl
adc
dec
push
hlt
and
sbb
xchg
inc
inc
negb
push
pop
dec
adc
jl
push
jmp
jle
or
mov
add
dec
ljmp
addb
cmp
sub
inc
xchg
clc
pop
and
cmc
out
push
sbb
xchg
and
shl
test
mov
adc
shlb
jns
or
fdivrl
mov
scas
enter
sbb
rcll
add
jbe
push
enter
pop
fistpl
scas
cs
cmp
push
sub
scas
mov
test
jmp
fdivrs
ret
nop
inc
test
adc
push
loope
mov
cmp
or
bound
enter
clc
mov
adc
shr
push
in
jo
rorb
scas
and
notl
notl
adc
lock
rorl
push
inc
lahf
repnz
pop
adc
cld
cmp
movsb
mov
push
xor
jns
bsf
test
mov
enter
clc
rcrb
mov
inc
bsr
xor
int3
adc
and
pop
inc
pushf
repnz
enter
adc
dec
jge
enter
test
enter
in
sub
cmp
stc
sub
leave
pop
mov
stc
nop
sub
test
sar
and
fimuls
pop
inc
sub
mov
jnp
nop
scas
test
lcall
jb
sbb
not
fdivr
and
mov
mov
aam
dec
pop
and
lret
stos
jnp
lret
fimuls
mov
xchg
mov
add
mov
jle
nop
in
fmuls
sub
loope
mov
and
sub
mov
sub
mov
cmp
ljmp
loopne
adc
mov
mov
xchg
lods
cmpb
or
dec
and
aas
in
loopne
test
fldt
adc
mov
xchg
mov
outsl
test
mov
lods
jne
nop
jno
dec
fdivr
daa
and
adcb
pop
dec
jl
push
loope
lahf
or
les
mov
cmpsl
mov
adc
out
mov
cmp
rorb
cmpsb
mov
scas
loop
push
adc
mulb
xlat
imul
daa
xchg
dec
icebp
adc
cmc
out
loop
loope
mov
out
pop
out
imul
out
loopne,pn
jne
mov
and
jmp
adcb
xor
mov
jnp
aad
push
iret
lock
repz
pop
cmp
inc
mov
mov
test
xchg
stos
push
bnd
insl
clc
xlat
movsl
jne
nop
imul
jb
icebp
mov
inc
sub
mov
cmp
repnz
jo
mov
mov
xlat
movsb
inc
ja
stos
mov
stc
mov
ja
daa
stc
repnz
shl
jne
add
push
push
and
rcll
xchg
mov
loopne
xchg
imul
cmp
cmpsb
inc
mov
notl
lock
les
cmp
mov
jo
test
mov
repnz
sbbb
inc
es
push
cmp
add
enter
ja
aad
cwtl
lret
xchg
mov
mov
in
lock
loope
push
add
in
fwait
sbb
fsubr
cmc
cli
mov
scas
dec
repz
cmp
sarl
xchg
popf
rclb
out
sub
call
cmpb
mov
lock
fsubl
js
and
cmp
add
or
scas
sub
test
or
mov
lock
lods
int
jp
push
sub
jge
loopne
mov
or
sub
push
dec
adc
dec
cld
js
mov
sbb
dec
test
and
push
mov
in
push
mov
scas
lcall
scas
mov
shlb
test
stos
fdivs
sub
push
mov
mov
call
or
ret
negl
aad
icebp
sarb
in
nop
cli
jnp
js
push
loope
lock
scas
je,pn
lock
loop
popf
fsubr
pop
adc
push
out
enter
nop
jno
daa
push
shr
mov
lock
sbb
dec
daa
inc
cld
adc
dec
pushf
jmp
lret
lock
ljmp
ja
mov
dec
test
scas
lds
mov
ljmp
sbb
sub
sub
push
addr16
clc
xchg
sub
nop
repnz
insl
nop
jle
gs
and
mov
dec
push
fs
mov
mov
sbb
and
notl
adc
jp
push
inc
aad
xlat
xchg
cmp
push
aaa
shl
mov
cmpb
insl
mov
ja
mov
mov
jbe
jl
sub
jg
sub
das
push
cmp
dec
mov
jmp
aaa
jns
push
hlt
iret
pusha
test
mov
bound
pop
addr16
push
idivb
xchg
clc
dec
aad
sub
cli
cs
xor
dec
sub
push
pop
jo
mov
push
nop
notl
jno
push
jno
sub
out
pop
repnz
cmp
and
cmp
inc
mov
jl
inc
imul
mov
in
clc
scas
movsb
scas
imul
dec
cmp
cmc
nop
popa
scas
lret
lahf
in
pop
popf
push
adc
loope
in
mov
mov
mov
scas
leave
ss
les
inc
stc
sbb
sahf
mov
mov
inc
hlt
adc
test
sub
std
outsb
hlt
popl
das
mov
ljmp
and
push
mov
stc
push
and
int
ja
dec
divb
cld
out
mov
in
push
xor
call
mov
dec
std
and
mov
test
pop
in
cmp
clc
bound
xchg
mov
sbb
xlat
mov
aaa
add
pop
int3
xchg
mov
clc
repnz
cmp
call
mov
cmp
xchg
iret
cwtl
mov
mov
mov
mov
pop
push
fs
bnd
or
mov
aad
xor
pop
dec
jmp
shl
mov
loopne
adc
lcall
mov
aaa
jle
cmc
mov
jbe
adc
and
pop
nop
loopne
lock
xchg
rclb
fdivrs
push
sub
adc
fidivs
sbb
push
jl
les
shrb
les
and
pop
inc
enter
mov
fdivrl
scas
mov
lds
mov
lcall
pop
movsl
push
test
inc
mov
in
jge
rorl
pusha
lret
fmull
mov
jo
pop
test
mov
pop
in
jle
jns
pop
lahf
push
mov
imulb
mov
dec
jecxz
scas
and
jno
pop
mov
mov
clc
lods
std
popf
pop
push
mov
popf
mov
loop
pxor
jb
push
and
add
mov
nop
mov
addb
mov
imull
jge
mov
in
imul
jge
shrb
jge
les
sbb
enter
jge
int3
imul
ficoms
pop
shl
fdivr
aam
aad
sub
push
and
xor
in
pop
dec
mov
sub
push
push
jmp
pop
lahf
add
gs
repz
das
push
mov
cli
push
mov
push
and
adc
js
jns
jmp
rorb
mov
push
fs
scas
and
sbb
shll
idivl
clc
ja
fdivs
xchg
divl
pop
pop
sub
imul
lahf
mov
or
in
sar
clc
jp
loopne
push
pop
aas
clc
lret
cltd
mov
enter
pushf
fdivs
paddw
nop
addb
mov
gs
fdivr
xor
lahf
mov
hlt
jo
dec
fdivp
fidivs
mov
fcompl
sbb
xlat
stos
sub
cli
lret
test
pop
or
mov
xchg
push
mov
js
jmp
sarb
pusha
call
inc
sti
icebp
mov
rcl
push
fsubl
fsubl
lret
mov
add
jge
loopne
lods
cmp
sbb
sbb
mov
mov
std
ret
push
push
pop
stc
sub
loop
adc
jmp
mov
dec
adc
mov
push
pop
loop
sbb
in
adc
nop
mov
hlt
daa
add
ficomps
stos
sub
in
das
mov
incl
ljmp
or
mov
mov
jae
cmc
or
sub
popf
push
mov
cmp
sbb
pop
xchg
push
ds
xchg
mov
nop
dec
out
fwait
mov
out
lahf
lock
ljmp
dec
out
pop
lods
pop
scas
rcrb
push
sub
or
and
call
mov
mov
js
inc
and
and
repnz
jbe
or
mov
jnp,pn
ljmp
outsl
test
mov
jo
mov
pop
mov
cmp
adc
cmpsb
inc
mov
pop
popf
cwtl
jo
mov
pop
lret
and
sub
or
scas
fisubrs
jle
fildl
nop
push
lahf
fdivrl
pop
adc
outsl
inc
sub
lock
out
push
lds
cmp
hlt
sti
add
fs
aas
dec
stos
cmp
mov
xchg
int
fbld
mov
push
jo
rclb
xor
sub
mov
stos
lret
push
out
and
std
jmp
in
test
mov
insb
dec
adc
test
scas
fcmovne
hlt
mov
jl
or
jns
pop
mov
jns
push
cmc
mov
test
insb
or
cmp
cmpsb
subb
aam
pop
and
mov
das
and
int
jp
clc
jmp
pop
cwtl
imul
sub
std
std
jmp
enter
adc
aaa
pusha
jp
mov
in
das
out
cmp
mov
clc
or
jnp
je
clc
push
fdivrl
inc
cld
mov
movsb
in
cmp
loopne
cmp
sub
xchg
fcmovbe
stos
les
and
mov
or
adc
adc
jo
jmp
clc
lcall
sbb
clc
daa
cld
std
push
addr16
cld
cmp
push
mov
jne
xor
ja
js
iret
mov
repz
push
mov
loopne
or
adc
mov
fildll
sahf
mov
loop
mov
pusha
mov
bndldx
std
cmp
cmp
or
push
in
mov
lcall
scas
inc
jl
dec
clc
lock
movsbl
or
add
cwtl
notl
sub
push
outsb
movsb
loope
mov
mov
call
cmpsl
mov
mov
cld
xchg
gs
pop
js
mov
and
xlat
mov
outsl
pop
push
or
shrb
mov
mov
jne
enter
les
mov
test
xchg
pop
ja
out
sarb
mov
hlt
inc
aad
das
xor
jle
xlat
fidivrs
enter
ds
mov
int3
out
mov
dec
scas
and
fisttpll
sub
fadds
test
mov
adc
mov
imul
std
insl
call
or
shlb
movsl
in
test
xlat
cmpsl
jge
sbb
nop
shl
sub
dec
mov
or
ret
fists
lock
je
push
ljmp
xchg
xor
daa
cmp
scas
xchg
clc
mov
and
inc
pop
add
lahf
mov
dec
dec
nop
jmp
mov
pop
aas
and
stos
idiv
stc
xor
cmp
mov
popf
dec
movsl
aad
loopne
pop
sub
scas
xchg
stos
outsl
jo
lcall
in
jle
mov
std
or
add
test
dec
sub
std
adc
and
push
fidivrs
pop
adc
lahf
pop
cmpb
sub
cli
push
inc
mov
sub
test
mov
fcoms
jns
xor
and
stc
es
test
add
data16
out
xor
enter
cli
and
aad
mov
fcom
mov
adc
adc
jmp
add
dec
mov
adc
sbb
test
mov
cli
push
hlt
pop
push
into
adc
aaa
dec
ret
add
lcall
sbb
dec
mov
adcb
call
bound
mov
or
in
adc
scas
mov
cli
dec
sbb
in
xchg
xor
xor
add
sarb
pop
mov
jae
shl
call
lea
push
nop
push
in
cmp
ljmp
xchg
pushf
pop
lahf
pop
rcrb
and
movsl
cmc
mov
cli
adc
cmp
sbb
hlt
xchg
jne
xor
xor
insl
shlb
daa
test
jge
sar
les
mov
xchg
lods
cmp
pop
mov
push
clc
and
enter
pushf
ret
leave
xchg
inc
xor
loopne
cmp
and
loopne
das
ljmp
push
dec
fwait
push
add
cli
pop
icebp
sbb
pop
in
adc
iret
or
movsl
inc
mov
cld
inc
jbe
mov
xor
sbb
mov
std
inc
xchg
in
jo
enter
daa
outsl
test
push
dec
negb
pop
sub
xor
std
xor
ljmp
in
stc
pusha
addr16
stos
lahf
lock
rcr
push
jo
sub
inc
adc
and
jle
and
dec
fsubr
sahf
dec
mov
and
enter
jge
daa
scas
sarl
mov
mov
sub
nop
xchg
roll
lods
loope
jns
sbb
push
nop
scas
loop
pop
xor
jge
push
pop
jmp
xchg
jbe
jg
xchg
dec
push
in
mov
sbb
adc
cmp
jmp
sahf
fcom
movsl
pop
in
dec
scas
or
add
inc
dec
std
jnp
test
mov
mov
ds
aam
clc
or
test
sbb
cmp
push
mov
fsubrl
push
scas
repnz
fs
les
and
cli
adc
call
mov
pop
add
sbb
pop
js
jmp
xor
fdivs
imul
jg
inc
out
pop
dec
out
das
nop
mov
mov
imull
stc
dec
jae
mov
lahf
cld
loopne
pop
mov
inc
test
jle
movsl
out
aas
inc
hlt
ficompl
call
pop
push
or
ljmp
dec
divl
repnz
pop
insl
inc
jo
mov
mov
pop
mov
std
jmp
es
sub
jg
xlat
or
dec
dec
push
sub
push
gs
scas
lret
rclb
outsl
mov
push
enter
les
pop
call
in
sub
lea
mov
mov
fsubr
or
xchg
dec
mov
es
ljmp
mov
in
pop
js
mov
test
stos
cli
jbe
aad
inc
mov
mov
test
and
inc
jno
aas
imul
push
stc
insb
push
hlt
out
fcmovbe
stos
lret
mov
stos
mov
adc
mov
daa
jg
dec
movsl
jne
dec
fdivl
aam
jg
aad
jne
nop
aam
pushf
mov
stc
dec
and
fistpll
in
jl
mov
xchg
push
mov
lods
adc
adc
jp
pop
clc
es
mov
mov
xchg
scas
repnz
sub
pusha
mull
mov
ret
push
dec
fdiv
dec
pop
test
mov
nop
add
and
lock
ds
mov
sub
mov
jp
xchg
push
pop
lret
cmc
xchg
shr
pop
xor
movsl
ja
inc
pop
or
dec
dec
pop
dec
pop
sub
jns
xlat
daa
aad
cmp
stos
sbb
dec
outsl
nop
or
push
inc
hlt
hlt
out
repz
in
mov
lret
mov
cld
mov
loop
xor
fdiv
iret
enter
xlat
dec
or
pushf
push
stos
lret
outsb
jl
mov
pop
inc
pushf
mov
shrb
clc
cmp
scas
mov
scas
das
les
mov
push
fstpt
or
mov
or
ljmp
clc
cli
jge
push
stc
hlt
mov
xchg
movsl
pop
in
sub
xchg
jae
cmp
xor
sbb
jmp
daa
mov
adc
mov
fmuls
scas
enter
aad
nop
and
out
stc
hlt
aas
mov
sbb
insb
add
mov
jp
fcoms
sbb
fcoml
je
jns
or
call
nop
ja
js
enter
lock
clc
aam
jne
push
flds
es
adc
dec
ffree
or
imul
push
loop
inc
mov
and
shl
xchg
fcoms
jne
cmp
cltd
inc
jmp
and
imul
ficoms
int
jno
or
lods
mov
enter
add
adc
js
push
sbb
mov
out
and
notl
pop
xchg
int3
push
mov
add
and
jg
enter
mov
xlat
mov
inc
call
add
xlat
or
pop
sub
pop
xchg
clc
decl
mov
fdivrs
cmpsl
test
xlat
jnp
ljmp
je
out
stc
movsb
jle
fsubrs
cmp
mov
push
dec
mov
pop
loop
adc
mov
add
lds
pop
cmp
sub
repnz
jmp
dec
mov
int
jp
xor
pushf
or
and
pop
xchg
pushf
stos
sub
loop
xor
pop
test
mov
xchg
lds
movb
and
jg
hlt
cmp
lcall
scas
adc
dec
mov
iret
clc
jmp
prefetchwt1
adc
inc
loopne
das
pushf
shl
pop
adc
push
inc
jnp
cmc
sti
das
adc
adc
sub
repnz
adc
stc
sub
cld
hlt
mov
xor
test
cmp
mov
jmp
int
dec
jle
lret
rcrb
push
mov
test
mov
add
stos
jo
lret
dec
mov
xchg
test
fildl
mov
mov
sbb
jg
pop
in
pop
xchg
icebp
enter
mov
popf
jne
test
adc
sbb
lret
imul
test
aad
ja
test
lods
clc
push
dec
cs
shl
mov
fsubrs
cmp
in
add
pop
cld
mov
mov
popf
test
test
popf
cmp
cmp
mov
push
ret
or
mov
addr16
je
push
jg
pop
xor
test
adc
call
mov
call
lea
jg
cwtl
jge
mull
jmp
cmp
test
adc
out
and
mov
cmp
dec
inc
jno
into
sbb
sub
aam
ljmp
fwait
test
in
dec
lock
or
and
mov
dec
gs
mov
pushf
jo
jmp
test
pop
popf
notb
mov
dec
xchg
inc
aad
pop
sub
pop
adc
and
mov
pop
sub
mov
nop
lods
aas
cld
nop
mov
test
ljmp
stos
jl
sti
xchg
call
imul
jbe
aad
sbb
test
push
mov
stos
lcall
xlat
jb
jle
fildll
and
jno
sub
enter
aas
mov
imul
adc
inc
loop
inc
push
ja
lock
rcl
pop
shlb
adc
and
xchg
xchg
sub
xor
jge
or
fcomps
mov
inc
mov
adc
clc
nop
sti
scas
xchg
outsl
test
aas
loop
mov
adc
test
dec
adc
xchg
out
lret
sbb
cli
dec
mov
mov
cmp
cmp
jle
je
push
pop
push
rcll
test
loopne
cmpsb
push
cld
sub
sbb
out
adc
dec
aas
xor
xchg
xchg
subb
shrb
std
jle
mov
fldl
in
mov
test
enter
pusha
pop
dec
fstl
jge
jg
mov
xor
icebp
icebp
mov
push
daa
adc
call
clc
pop
xchg
sbb
enter
pop
test
xchg
mov
adc
lcall
pop
sub
enter
mov
shlb
sbb
mov
pop
cmpsl
push
popf
jo
adc
jg
mov
add
test
xchg
pop
jne
adc
scas
repnz
pusha
aas
nop
push
pop
push
push
jno
inc
nop
mov
mov
clc
scas
dec
cs
adc
mov
sbb
pop
out
enter
xchg
fdivs
sbb
mov
pop
mov
ljmp
in
sub
push
push
pop
pusha
lret
jno
popf
je
fildll
jg
pusha
jo
out
inc
or
sarb
clc
and
mov
dec
mov
lds
mov
push
cwtl
std
js
mov
pusha
jecxz
sub
sub
dec
nop
test
add
bnd
cmp
adc
scas
mov
mov
lahf
adc
js
jle
insl
test
sbb
mov
sbb
sub
and
test
mov
mov
mov
mov
pop
nop
movsb
cld
sub
in
mov
jecxz
clc
xchg
push
sub
stc
aas
test
enter
or
push
shrl
pop
inc
popa
mov
push
and
insb
mov
pop
out
scas
sbb
daa
and
mov
push
mov
adcb
aad
or
fcom
dec
ja
adc
xorb
push
push
mov
call
les
fiadds
sub
or
jle
push
push
ja
test
xchg
jg
or
dec
cmc
repnz
jo
repnz
jnp
cld
xchg
fcmovne
xlat
movsl
jg
sbb
adc
mov
and
aas
dec
repnz
sti
sbb
mov
fs
stos
hlt
mov
jp
out
stc
hlt
ds
cld
lea
push
inc
add
nop
cmc
mov
and
roll
cmp
clc
mov
sti
mov
jnp
jo
pop
mov
pop
and
fstpt
mov
inc
call
add
in
jle
call
and
shl
fadds
mov
in
mov
jno
cli
ja
cmp
and
add
and
xchg
push
in
ds
cltd
pusha
hlt
test
imul
sub
jo
add
ds
or
inc
mov
fdivrs
push
xchg
mov
testb
pop
daa
sbb
sub
cmc
pop
enter
lock
and
or
repnz
sub
lods
stc
jo
xchg
mov
mov
clc
call
jo
loope
repnz
mov
shr
mov
in
das
mov
dec
or
das
mov
cmp
or
cmp
pop
xchg
sub
pushf
push
fbld
pop
dec
insl
mov
and
js
push
mov
pusha
mov
dec
pusha
sar
push
dec
and
fcom
inc
adc
push
pop
lods
jbe
ja
clc
js
out
pop
sub
hlt
cli
mov
jmp
popa
mov
mov
push
ficoml
xchg
js
dec
nop
pop
push
iret
addb
or
enter
xor
add
dec
jmp
enter
mov
daa
in
notl
adc
icebp
add
cmp
or
hlt
stos
mov
mov
sub
lret
cs
aas
and
imul
push
movsb
aas
nop
mov
sub
sub
push
mov
sbb
cld
xor
adc
rcll
or
xchg
mov
push
lret
or
dec
mov
xlat
movsl
dec
pop
dec
clc
pop
dec
lahf
push
mov
cmp
fdivl
push
fldcw
sub
or
stos
mov
mov
test
push
inc
mov
pushl
loopne
pop
stos
sub
pop
mov
ds
mov
shrl
das
jmp
pop
stc
sub
xor
adc
mov
movsl
cli
sub
ror
cwtl
or
jbe
mov
mov
adc
shr
notl
stos
xchg
jbe
push
or
movsb
adc
fcoms
fnstsw
adc
mov
add
test
aas
push
test
fucomip
clc
jmp
mov
loop
mov
jne
js
pop
sub
scas
aad
call
in
jl
je
insl
shlb
and
inc
and
nop
xchg
adc
js
cld
xchg
movsl
jge
lock
lahf
lds
jle
push
out
cli
fdivl
jmp
pop
test
mov
jmp
and
mov
adc
xchg
scas
fistps
stos
mov
out
xchg
std
and
cmp
test
jne
or
test
sub
sub
mov
rcrb
ja
xor
and
sub
push
repnz
xchg
fdivr
cmc
jno
pop
lahf
rcll
ficoms
dec
mov
adc
jo
sub
pop
and
add
rcrb
ds
repnz
jp
in
jle
adc
inc
sub
lret
pop
ds
sub
xchg
pop
je
cmp
sbb
es
movsb
rcll
adc
mov
test
fsubr
gs
lock
lock
sarb
and
mov
nop
je
je
push
lret
pop
adcb
ficomps
cmp
pop
mov
scas
push
push
outsb
fmuls
pop
shl
dec
mov
cmp
ds
loop
mov
fcom
dec
pusha
stos
lahf
push
testb
xchg
or
bound
jne
mov
and
or
enter
xchg
inc
sti
enter
pop
aas
pop
cmp
addr16
mov
lods
aad
xor
lods
notl
sub
aas
dec
les
mov
jle
les
testb
inc
lock
xor
cmp
dec
lret
sub
bound
pop
lret
adc
inc
nop
adc
add
adc
rcl
push
pop
inc
nop
mov
sarb
repz
dec
aaa
sbb
dec
icebp
dec
push
cmc
scas
jp
adc
add
pop
sbb
sbb
mov
out
mov
scas
and
fidivs
fs
jnp
pop
xor
sub
mov
sarb
out
jg
dec
push
xchg
sahf
jo
sub
add
lcall
sub
sarb
in
or
daa
movsb
out
inc
fdivrl
insb
test
clc
js
test
lret
sar
or
movsb
mov
mov
mov
jmp
sub
cmpsl
nop
leave
push
enter
xor
dec
mov
fwait
push
push
in
jl
push
pusha
call
nop
das
int3
xchg
stos
fbstp
jge
into
jno
pop
adc
lcall
scas
mov
xor
push
insl
enter
sbb
cmp
fmuls
xchg
js
inc
inc
aam
test
inc
sub
cmpsl
xchg
sub
hlt
outsb
fcomps
nop
mov
cli
push
aaa
pop
mov
adc
push
cmp
clc
add
pop
xchg
daa
fsubr
xchg
xchg
cmp
lock
test
call
pop
adc
mov
stos
mov
hlt
stos
call
mov
jmp
aaa
aaa
imul
pop
movsl
xchg
or
iret
enter
hlt
mov
jo
test
mov
and
or
or
scas
adc
js
int3
sbbb
ficoml
pop
ljmp
jl
mov
das
mov
push
jns
push
mov
and
dec
adc
sub
loop
cmp
in
outsl
xlat
sub
jmp
test
jno
pop
push
sub
incb
cmc
repnz
sbb
sub
adc
hlt
mov
dec
clc
xor
call
rcll
dec
push
mov
push
clc
mov
fdivr
jl
clc
push
push
jnp
jp
clc
movsl
cwtl
call
cld
js
leave
jae
push
in
outsb
cld
dec
xchg
sti
add
push
hlt
jp
and
xchg
loopne
jle
or
shrl
xchg
dec
std
das
mov
jle
ja
jns
dec
dec
mov
dec
mov
inc
scas
das
adc
cs
repz
imul
decl
out
xchg
sti
fidivl
cld
les
clc
jne
daa
cld
sbb
pop
test
adc
in
add
aad
add
and
cmp
sbb
cmpsb
adc
and
stc
in
xor
xor
or
pop
dec
mov
push
jmp
push
cwtl
icebp
or
leave
cmp
and
out
pop
popf
cmp
mov
scas
xchg
and
mov
add
push
in
outsl
nop
adc
adc
xor
fiaddl
stos
test
loopne
enter
scas
scas
repnz
jns
sbb
mov
incb
out
and
enter
push
imul
push
stc
clc
bsf
lea
or
and
notl
pop
loop
push
pop
jno
sbb
adc
and
pop
inc
lret
adc
or
into
push
stc
push
bsf
and
lea
jmp
mov
mov
dec
jge
ja
mov
or
xor
nop
pop
inc
and
loope
nop
cmp
cld
sbb
jle
inc
jmp
sbb
enter
pop
ds
cli
cld
sub
jle
insb
test
test
les
bnd
pop
nop
cmp
enter
inc
inc
mov
inc
or
xchg
xchg
in
sub
sahf
pop
pop
nop
dec
scas
enter
push
sub
fcoms
cs
sub
mov
sbb
mov
repnz
xor
mov
lret
shl
daa
aas
xchg
mov
fildll
shl
mov
adc
mov
adc
clc
mov
in
sub
mov
loopne
or
sbb
repnz
cmpb
lods
fdivr
xchg
cld
sub
repnz
fstl
xchg
jo
add
push
mov
fs
out
lret
test
sbb
mov
dec
sub
test
push
mov
lcall
lods
mov
or
sub
mov
js
dec
movsl
dec
inc
push
rclb
push
aad
ret
mov
sub
cld
rclb
xor
cmp
call
cmp
mov
cli
das
push
jnp
fdivl
push
inc
jb
call
std
jo
rclb
in
jb
in
push
pop
xlat
and
inc
ud2
xchg
enter
int3
js
and
dec
cwtl
xchg
sub
test
jno
lock
jp
or
or
pop
hlt
mov
inc
maxps
sbb
and
bnd
clc
fcom
test
push
in
sub
jns
clc
cmp
test
jb
clc
inc
sub
pushf
adc
sub
loop
xor
movsb
adc
insb
inc
into
loop
xor
icebp
lods
or
test
jno
sbb
or
stc
mov
cld
mov
jno
sbb
adc
lea
jno
sbb
adc
jmp
and
and
cmc
dec
sbb
dec
in
sub
cld
xchg
jge
mov
mov
shll
dec
mov
sar
mov
cmp
mov
es
xor
ret
or
nop
ret
std
cmp
and
clc
cmc
jmp
jge
clc
jo
insb
loope
leave
int
push
pop
dec
jl
jne
xlat
rclb
fldl
std
sub
jg
xchg
stos
test
and
xchg
repz
outsb
in
cmp
mov
fidivs
dec
cmc
or
lret
in
add
inc
loopne
or
mov
aad
add
dec
mov
jg
cwtl
mov
cmpsl
add
out
sarb
sar
push
test
and
push
push
hlt
les
sarl
ds
hlt
ljmp
add
jle
dec
xchg
mov
hlt
mov
leave
shlb
jg
js
or
push
mov
in
das
inc
out
and
rcrb
test
ret
pop
xor
adc
inc
jmp
in
jo
mov
cmp
cmpsl
fistps
nop
repnz
nop
push
cs
ficoms
mov
or
sbb
pop
dec
clc
jnp
xchg
mov
mov
pop
dec
xchg
call
clc
jge
push
in
call
and
stc
sub
mov
pop
dec
xchg
mov
stos
sub
in
push
icebp
and
aas
stc
cwtl
scas
movsl
jmp
inc
test
aam
add
dec
mov
incl
hlt
lea
mov
sub
dec
call
or
or
xchg
mov
js
inc
add
aaa
pop
jmp
and
push
xchg
shr
hlt
adc
lods
inc
xchg
mov
test
addb
xchg
loopne
cmpsl
pop
in
jb
fmuls
sbb
pop
inc
push
cmc
out
scas
and
xchg
rclb
cli
lcall
call
jle
mov
shrl
sbb
sarl
ljmp
in
clc
scas
pop
cli
das
loopne
jg
cwtl
out
xchg
test
loope
enter
aam
ja
jbe
out
dec
stos
fistpll
mov
iret
pusha
std
mov
pop
sbb
nop
pop
adcb
fcomp
xchg
cmc
xor
clc
icebp
ss
fmuls
pop
cli
imul
ljmp
loopne
fsubr
cmp
cld
add
rcr
mov
cmp
jnp
inc
jmp
fsubrs
aas
mov
enter
adc
mov
xchg
pop
xchg
add
pop
dec
mov
push
dec
stc
das
sub
loop
pop
or
fnstsw
mov
mov
mov
inc
lock
or
cwtl
pop
lods
insl
call
movsl
ljmp
stc
or
xchg
test
jmp
shrb
adc
mov
adc
mov
inc
add
lods
shrl
jle
mov
mov
nop
add
mov
lret
js
xor
pop
mov
daa
dec
fadds
xchg
ljmp
fildll
sub
ljmp
ret
dec
fidivrs
call
scas
in
jle
mov
popa
call
dec
dec
out
scas
and
fnstenv
pop
xchg
mov
repnz
sub
cmc
lods
xchg
inc
mov
sarl
pop
push
bsf
test
push
ret
stos
fwait
clc
mov
nop
and
cli
incb
sub
pop
gs
and
sti
xor
ja
std
adc
pop
jmp
in
xor
pop
cli
pop
nop
push
std
lahf
pop
in
test
cli
es
inc
jne
xor
shr
or
repnz
rcrl
fstpl
or
test
and
pushf
push
in
sub
movsb
xchg
dec
fldenv
hlt
test
testb
enter
cmp
fcmovbe
icebp
cwtl
push
jl
push
loopne
push
shlb
aam
mov
inc
pop
cmpsl
insl
clc
in
scas
repz
lcall
hlt
cs
xchg
mov
in
cmp
cmp
push
scas
inc
jo
push
test
out
test
mov
pusha
cmc
imul
pop
repnz
xor
icebp
mov
adc
stos
cltd
imul
hlt
aad
cwtl
jbe
dec
or
out
jo
pop
je
push
sub
sub
test
aam
jg
gs
dec
mov
ljmp
clc
call
pop
outsl
ret
clc
repnz
loopne
das
push
call
jns
and
repnz
enter
js
add
mov
sub
call
and
psraw
jmp
push
pop
movsl
push
mov
jo
daa
loope
lds
mov
icebp
sbb
or
add
stc
xor
and
hlt
push
nop
ds
fsubrs
mov
cmc
dec
jns
fucomp
sbb
cwtl
imul
imul
sbb
and
mov
cld
mov
outsb
jmp
rcr
jp
mov
add
das
aas
mov
xlat
insl
rcrb
sbb
fcom
dec
scas
inc
adc
test
inc
nop
cld
sub
jle
dec
les
inc
pop
mov
mov
push
clc
cld
dec
movsl
fdivrs
jne
shl
xlat
pop
push
sbb
fisubs
jp
jne
sub
fucomi
mov
mov
add
sub
or
loope
ret
xor
dec
testb
scas
leave
and
or
icebp
push
in
push
xchg
sub
pusha
decb
loopne
lret
sti
jnp
imull
call
cli
pop
add
nop
scas
out
mov
mov
test
or
jg
dec
push
movsl
xchg
cwtl
fiadds
mov
loop
adc
les
ret
sub
cwtl
pop
fbld
and
cld
nop
std
fs
leave
es
repnz
mov
and
sub
lret
aaa
dec
ret
mov
sbb
cwtl
stos
pop
stos
push
loop
popf
fsubr
jne
dec
lds
sbb
mov
sbb
lods
push
mov
jo
sbb
scas
and
repnz
roll
test
sti
enter
xchg
scas
repnz
jns
sbb
xchg
adc
and
pop
inc
fwait
mov
pop
imul
push
stc
fisttps
mov
or
and
notl
pop
in
repnz
icebp
xchg
inc
or
sti
enter
mov
repnz
xchg
nop
decb
idivl
enter
dec
scas
test
imul
loope
nop
dec
cli
cld
sbb
jle
push
jmp
sbb
enter
imul
nop
jae
cld
sub
jle
jge
or
xacquire
pop
nop
cmp
enter
inc
inc
mov
inc
or
movsl
xchg
in
sub
scas
pop
pop
nop
dec
scas
enter
push
dec
and
jle
iret
enter
mov
xlat
xor
adc
enter
clc
scas
mov
mov
sub
sub
jne
add
loope
pop
adc
mov
push
in
scas
sub
clc
cmc
xchg
mov
nop
test
call
adc
fsubrs
sub
push
pop
lds
shl
mov
or
fistl
cmc
scas
jns
pop
inc
or
jne
sbb
sbb
push
fcompl
cmp
pop
cmpsl
fsubr
les
les
clc
cmp
scas
lret
lock
mov
loop
mov
idiv
dec
ds
mov
scas
dec
inc
scas
mov
inc
cmc
mov
dec
sbb
xchg
stos
fcmovu
in
push
jp
mov
adc
xchg
call
add
mov
jmp
mov
xchg
and
aas
nop
enter
sbb
flds
xorl
in
in
mov
icebp
add
enter
pop
adc
lcall
pop
jle
popa
les
cmp
fdivr
xchg
and
adc
mov
mov
les
out
daa
insb
je
cmc
leave
jge
loopne
lds
cmp
fsubrs
lock
jmp
test
imul
enter
bswap
sub
push
pop
jno
dec
fdiv
scas
out
stos
loop
pop
jns
jp
sub
loop
cmc
rcll
push
lahf
call
lods
sub
xchg
pop
pop
cwtl
pop
xchg
mov
scas
leave
cwtl
adc
testl
xchg
clc
sub
lret
push
cmp
adc
stos
shr
lret
jo
jb
mov
nop
testl
cwtl
aad
jge
push
lds
cs
enter
psrlq
into
cmpb
lret
rcr
lahf
sub
lock
dec
scas
sub
in
nop
sti
pop
out
cmp
xchg
stos
mov
stc
cmp
gs
xchg
loope
inc
sti
mov
nop
xchg
mov
lock
test
pusha
jg
cmp
lret
sub
scas
aas
fisttps
jmp
and
cmp
pop
pop
mov
mov
mov
pop
cmc
and
push
nop
mov
adc
std
ret
cmp
jnp
in
cmp
mov
aam
jl
jne
cmpsl
mov
daa
cmp
loop
pop
movsl
std
aaa
push
in
cmp
loop
mov
inc
sub
and
faddl
xchg
dec
repnz
clc
or
or
xor
test
or
mov
lock
popf
gs
mov
inc
fsubrl
imull
push
in
imul
ficomps
push
lds
aaa
cmp
jle
mov
fistpll
inc
scas
and
pop
dec
scas
enter
jno
bnd
stc
mov
repnz
inc
or
std
divl
pop
mov
mov
clc
add
or
push
and
lahf
test
orl
aam
out
mov
scas
and
fiadds
fldcw
ret
jb
dec
inc
pop
mov
inc
dec
clc
clc
xchg
mov
mov
pop
dec
mov
rorb
aam
out
movsb
lret
test
push
clc
mov
sub
in
adc
push
mov
ja
aam
pop
adc
scas
adc
scas
test
fwait
clc
mov
cmp
adc
scas
and
pop
nop
xor
dec
imul
stos
icebp
cmp
jnp
or
xchg
loop
mov
pop
out
sub
in
inc
rorl
or
push
mov
xchg
in
and
je
cld
adc
push
clc
add
test
sub
js
push
dec
xchg
sti
enter
and
mov
inc
jne
pop
sub
and
insb
loop
pop
xchg
pop
adc
sbbl
pop
loop
mov
sub
lahf
lock
lcall
or
xor
xchg
inc
sbb
or
add
and
dec
mov
push
mov
shl
enter
pop
jle
lds
jp
pop
jns
pop
enter
sbb
scas
repnz
dec
out
repnz
pop
rcr
in
jp
lock
mov
mov
out
mov
jl
dec
loope
mov
mov
cwtl
push
in
cmpsl
add
movsb
stos
repnz
clc
sub
push
mov
nop
and
jo
pop
dec
sbb
pop
cs
xor
xchg
dec
fdivrs
pop
mov
sub
js
mov
or
movsl
hlt
pop
cmpsb
pusha
mov
movsl
lds
popf
push
xor
pop
cld
sti
sub
mov
dec
nop
js
or
sub
mov
call
test
cmpsb
or
movsw
fdivrs
and
nop
scas
xchg
mov
xchg
out
sub
lock
lahf
or
in
jbe
cld
mov
call
fs
outsl
stc
or
sub
dec
pop
lods
inc
enter
repz
hlt
jg
jle
enter
sbb
scas
dec
repz
mov
cmpsb
mov
repnz
nop
cmp
mov
notl
inc
dec
jl
lods
dec
jmp
or
cmp
daa
push
js
and
jp
mov
nop
push
sbb
daa
in
das
fmul
daa
push
jmp
pop
mov
push
sub
idivl
pop
xchg
sub
mov
daa
aas
xchg
and
push
in
clc
xacquire
je
jle
sti
sarb
jl
out
dec
test
mov
push
nop
mov
sub
nop
loop
addr16
mov
mov
adc
movsb
and
mov
lods
push
mov
push
aam
jg
add
sbb
cmp
std
xor
std
sub
sub
xchg
mov
and
fsubr
sarb
pushf
cwtl
fildll
insl
fdivr
xchg
xor
cmp
xchg
fimuls
cmp
stos
fwait
mov
push
push
jl
adc
icebp
adc
leave
cmp
cwtl
jl
clc
push
in
jg
aam
push
jmp
pop
mov
lock
and
jl
popf
sarb
pop
jmp
enter
cli
aam
aad
hlt
cmp
test
scas
shr
fwait
adc
lret
sub
js
insl
mov
jno
jnp,pn
cmc
aas
push
lret
in
push
in
jge
lock
mov
inc
mov
or
jg
lock
loop
mov
mov
cmp
mov
js
xchg
shlb
test
loopne
or
mov
mov
mov
or
and
cli
adc
es
inc
xlat
mov
xor
int
fists
mov
jle
outsl
cmp
sbb
cmp
and
insb
cmpsb
dec
nop
std
and
lds
jmp
mov
js
jp
sbb
fldt
jmp
adc
push
cmc
and
lock
mov
sbb
mov
cmp
loop
jnp
jl
rcl
pushf
clc
lods
cs
jle
xchg
cmpsb
enter
js
jl
mov
scas
xlat
cmpsb
jo
imul
mov
shrb
and
adc
rcl
xchg
push
xchg
mov
popf
in
xchg
pop
nop
jle
pop
inc
std
jns
das
mov
adc
xlat
or
push
icebp
sbb
sti
mov
push
sbb
fcompl
testl
mov
or
call
fstpl
ja
fistps
out
dec
mov
lock
in
cmp
call
dec
daa
addr16
fdiv
mov
movsl
dec
jbe
pop
clc
jne
jns
js
xchg
jns
std
movsl
negb
push
jmp
loopne
inc
cld
mov
jb
xchg
push
negl
jmp
leave
negl
sbb
add
call
jp
add
test
sbb
and
cli
fnsave
shr
hlt
mov
mov
inc
mul
daa
lret
cmp
dec
stos
cmp
lret
pop
xchg
sub
cmc
test
push
in
cmpb
dec
outsb
xor
jo
imul
stos
lret
ja
insl
pop
push
in
cmp
out
scas
pop
mov
test
sub
insl
xchg
cmp
pop
daa
inc
je
jne
lahf
push
lahf
sar
popf
gs
push
flds
rclb
pushf
sbb
iret
js
ds
push
mov
push
pop
mov
out
and
hlt
mov
in
jo
shrl
test
and
or
pop
jle
add
aas
call
idivb
repnz
int
cli
jge
loopne
popf
icebp
test
daa
gs
push
xor
fdiv
out
outsl
xchg
mov
jne
ja
enter
adcb
jge
ja
pusha
xlat
adc
enter
sbb
sbb
sub
shr
mov
or
mov
push
daa
add
push
cwtl
pop
daa
mulb
pop
js
ja
in
cmpsl
add
shrb
iret
pusha
rorl
and
pop
xchg
cld
mov
dec
mov
add
in
mov
jl
mov
in
bound
negb
push
call
mov
out
dec
mov
nop
jle
push
loopne
push
sub
cmp
sub
fcoms
fcomip
js
popf
jnp
stc
js
fdivrs
jg
lock
push
push
push
mov
and
mov
jb
outsl
shlb
push
call
cmp
enter
movsl
out
inc
jmp
add
std
mov
lcall
pop
scas
add
sbb
mov
out
pop
test
ljmp
or
movsb
lcall
mov
dec
loopne
scas
pop
adc
dec
push
sbb
add
xlat
mov
inc
scas
hlt
cli
mov
mov
dec
mov
pop
sbb
test
fistps
in
stos
cmpsl
sub
mov
or
mov
xchg
mov
popf
ljmp
xor
lock
add
es
add
add
lods
faddl
loope
sub
outsb
jo
mov
cmp
nop
ficompl
lcall
nop
int3
std
sbb
sarb
cs
cli
jge
loopne
mov
jmp
aam
in
daa
loopne
loopne
jg
js
cmp
inc
dec
push
ljmp
sub
pop
push
in
std
and
loop
std
lds
lret
fisttpl
movsl
shl
fidivs
sub
nop
fists
lock
sub
clc
hlt
popf
lahf
dec
repnz
adc
enter
jle
push
xchg
aas
enter
adc
enter
inc
pop
movsl
pop
enter
out
inc
jmp
in
push
adc
adc
fists
push
xchg
pop
mov
sub
pop
push
jno
dec
js
sub
push
inc
xor
jp
nop
nop
stos
and
in
cmc
sub
ljmp
and
adc
bnd
in
bnd
in
sub
xor
or
ret
adc
mov
sbb
cwtl
scas
mov
aas
dec
cli
into
push
test
ljmp
cmp
mov
mov
inc
nop
mov
aad
cmp
inc
mov
test
push
loopne
icebp
ds
hlt
test
sub
xor
cld
dec
jbe
test
dec
loop
std
sub
enter
sti
mov
ds
stos
dec
cli
das
push
mov
out
and
repnz
shll
jmp
dec
pxor
cmp
in
cmpb
rorl
dec
hlt
dec
clc
std
sbb
sar
mov
in
jecxz
out
dec
sbb
sub
sub
xchg
js
inc
mov
cmpsl
push
outsl
mov
jne
fdiv
mov
inc
sub
shl
scas
fcmovu
mov
jp
mov
in
pop
dec
sub
xlat
dec
push
sahf
jp
sti
call
lea
nop
shrb
mov
aaa
and
jno
pop
dec
adc
call
scas
push
dec
cmpsb
loopne
and
sbb
mov
mov
jae
clc
rcrb
inc
pop
movsl
nop
rcrl
push
in
test
mov
clc
clc
xchg
in
cmp
out
das
fcom
jae
add
enter
xchg
das
call
aad
test
xchg
inc
test
popf
push
mov
or
fnstcw
das
jge
dec
jb
cwtl
fists
fs
pop
in
stos
push
xchg
mov
inc
imul
sub
jno
pop
movsl
fldt
jle
shrl
mov
frstor
jno
pop
jb
xchg
and
adc
call
pusha
jl
xor
jae
pop
dec
loope
xor
fsubrs
sbb
js
imul
sub
jae
nop
cmp
cmpsl
jl
stc
and
shrb
mov
sbb
and
pop
xchg
fmul
inc
xor
es
jle
mov
daa
pushf
xor
dec
jno
dec
nop
std
cs
ds
and
fsubrp
push
xchg
add
or
loop
bnd
jl
rclb
test
push
js
lcall
cli
jbe
push
in
das
and
push
test
adc
xchg
push
fcomps
mov
mov
mov
mov
cmp
jns
pop
cmpsl
xchg
fdivr
adc
pop
out
aas
add
mov
or
cmpsl
dec
enter
movsl
stos
fistpl
xor
in
cld
and
dec
lock
cld
mov
shlb
jg
or
es
jnp
imul
enter
xchg
mov
and
das
jnp
jle
test
icebp
fdiv
xchg
rclb
adc
inc
pop
mov
xchg
mov
fbstp
out
sub
add
mov
in
repnz
and
jbe
push
jmp
sub
nop
fcompl
cmp
mov
insb
imull
sub
xchg
inc
stos
ds
std
mov
cs
test
xlat
aas
call
loopne
pop
push
js
xchg
xor
fiadds
mov
sub
xorb
cmpsl
and
push
xor
nop
mov
mov
xchg
xor
lods
sbbb
mov
lods
aad
jo
dec
fbld
fdivs
pop
js
xchg
cwtl
fucomp
dec
js
inc
xchg
stos
repnz
nop
mov
jns
and
mov
xor
call
pop
push
jg
test
dec
in
nop
call
push
repnz
push
cmp
inc
mov
in
jp
aaa
push
call
clc
mov
imul
test
dec
sbb
push
push
mov
test
enter
leave
sub
shlb
popf
mov
daa
add
fdivl
push
push
xchg
aam
push
repnz
and
enter
push
add
push
dec
mov
inc
inc
mov
loop
ljmp
addb
imul
mov
out
dec
mov
mov
push
repz
add
and
pusha
adc
push
xchg
jo
lock
xor
adc
xchg
cmpsb
mov
insb
ja
push
negb
cwtl
clc
dec
inc
push
mov
pop
clc
call
pop
cs
push
and
mov
and
sahf
jo
jno
adc
mov
inc
push
jecxz
imul
cmpsl
es
jo
inc
pop
movsl
insl
js
dec
call
cmp
pop
daa
dec
leave
push
int
aad
std
iret
cmp
adc
dec
enter
or
aas
mov
push
ret
jge
fmuls
in
and
sar
sub
pop
leave
sti
fistpll
test
scas
push
clc
ljmp
inc
mov
pop
bound
rcr
loopne
and
clc
jp
jns
jge
pop
xor
ret
insb
std
cmp
jbe
dec
ja
adc
test
das
mov
mov
jg
push
notb
adc
xchg
stos
lahf
pusha
mov
in
nop
mov
push
cli
jg
jo
ret
sub
sub
xlat
in
mov
jg
sbb
mov
hlt
out
jge
sub
mov
mov
mov
test
cld
js
jmp
add
repnz
aaa
ljmp
mov
movsb
insl
push
mov
dec
insb
test
movsl
scas
aas
mov
in
adc
scas
enter
insl
mov
mov
sub
dec
sbb
pop
pusha
fbld
lock
add
inc
enter
nop
jne
mov
pop
fs
and
ja
sbb
xchg
inc
ror
cs
stc
sub
xor
cmp
nop
jg
sahf
and
pop
rcrl
jmp
aaa
dec
fs
mov
mov
jno
push
test
pop
imul
cmp
jp
in
jp
cmp
xchg
cwtl
cli
in
call
xor
lock
cmpsl
clc
and
mov
in
lahf
fcomps
scas
pop
adc
dec
fisubrs
stc
add
and
cli
push
icebp
adc
nop
rclb
or
add
pop
test
sti
aad
mov
fsubr
xor
loop
pop
cmpsb
test
or
lret
and
adc
cmc
lds
sahf
sbb
mov
call
inc
sbb
clc
aaa
pushf
cwtl
push
repnz
and
inc
aas
fmuls
lock
in
xor
cmpsl
inc
or
inc
lret
js
lret
lret
push
jb
pop
pusha
cld
daa
dec
lret
push
and
pop
ret
mov
addr16
push
jo
inc
cld
sbb
fcmovbe
dec
enter
pop
in
into
shl
mov
das
mov
mov
dec
jg
add
xor
jo
leave
xlat
gs
sub
mov
cmp
mov
pop
cmp
inc
mov
lret
pusha
in
lods
fdivr
flds
lahf
adc
pusha
push
push
mov
nop
push
adc
stos
dec
std
cmp
dec
lods
jo
sub
mov
pop
jo
test
ret
sub
aad
call
mov
fdiv
pop
icebp
enter
enter
iret
loopne
pop
loopne
leave
xor
cld
shll
cmp
mov
je
fists
mov
enter
and
xchg
mov
or
mov
dec
hlt
xchg
dec
lock
sbb
add
addl
sub
cld
daa
cli
mul
nop
cli
movl
sub
mov
lea
mov
enter
sub
push
lahf
fnstenv
jne
fdivs
or
leave
loop
push
jb
js
mov
push
dec
add
call
outsb
repnz
and
pop
fsubs
pop
sbb
add
mov
xlat
fildl
adc
add
mov
loopne
test
xchg
adc
pop
xchg
sbb
inc
add
stos
pop
cmpsl
mov
xor
scas
das
out
xchg
lock
cmp
out
addr16
nop
pop
sub
sarl
lock
mov
hlt
mov
ja
enter
xlat
imul
adc
shll
or
leave
leave
mov
call
pusha
mov
lds
sub
or
inc
xchg
pop
call
aad
jo
movsb
sub
dec
mov
dec
je
xlat
pop
test
or
lret
push
push
test
daa
aad
adc
push
clc
push
xchg
aam
cmc
ljmp
mov
push
in
mov
ret
stos
mov
mov
push
sub
shr
out
mov
lahf
pop
and
sub
js
xchg
sbb
mov
test
add
xchg
enter
dec
in
fstpt
fmul
pop
push
in
outsl
nop
and
lods
and
sbb
and
incb
out
and
pop
inc
sub
add
sub
stc
bsf
and
xchg
add
in
ds
xor
jbe
fiadds
mov
jl
enter
inc
scas
repnz
or
repnz
adc
and
pop
inc
dec
mov
or
dec
push
stc
xchg
bsf
sub
cmp
mov
fistps
in
test
aas
inc
mov
jbe
ficomps
fidivs
test
pop
sbb
jo
mov
aam
or
repnz
adc
jmp
sbb
stc
cld
imul
sbb
push
lret
pop
pop
adc
scas
enter
inc
cmp
sub
cld
and
push
or
out
mov
in
ds
cmp
cld
inc
test
inc
jmp
inc
adc
enter
push
ds
pusha
std
pop
push
fstl
inc
lock
xchg
and
dec
jno
psrlq
push
out
testb
adc
xchg
push
std
das
mov
cli
add
bound
adc
hlt
sti
pop
adc
cmc
mov
fwait
ror
ja
push
push
fisubrs
in
dec
aam
mov
dec
cmp
or
xchg
jle
shrl
js
daa
xchg
dec
hlt
mov
push
dec
dec
mov
mov
cmpsb
inc
lret
mov
inc
testb
push
mov
pop
rorb
inc
loopne
ret
jg
cmp
pop
jl
push
leave
push
adc
jnp
jle
aam
aad
hlt
jmp
xchg
lods
enter
cs
jmp
xor
fcoms
pop
cli
sub
clc
or
imul
fdivs
ss
std
sub
push
or
lds
je
sub
pop
sbb
mov
and
fdivrs
clc
jne
jns
pop
movsl
xor
and
nop
add
push
leave
cmp
nop
std
push
fsubs
push
mov
es
inc
jg
cmp
cmp
jmp
fistpl
pop
mov
popa
mov
decb
aam
daa
subb
nop
jle
lahf
call
xor
xchg
pop
push
nop
or
dec
cmpsb
shl
xor
mov
mov
enter
aam
pop
push
adc
add
insl
fsubr
negl
push
insb
sub
addb
adc
push
adc
cmc
repnz
inc
push
ljmp
rcl
cs
js
xchg
stc
xor
js
xchg
decb
mov
test
inc
cmp
sub
mov
fcoml
aam
movsl
adc
lods
js
dec
lcall
repnz
pop
or
mov
dec
clc
ja
test
je
fcoml
sub
or
aas
pop
jg
dec
mov
mov
jmp
cmp
fidivrl
hlt
mov
jmp
enter
cmc
scas
mov
scas
push
push
sbb
push
add
xlat
lret
or
sbb
push
adc
xchg
hlt
mov
xchg
movsl
call
mov
fistl
mov
lahf
enter
lret
dec
ljmp
enter
sti
inc
lret
mov
movsl
lcall
outsb
inc
mov
int3
push
jmp
bswap
aas
mov
stc
cmp
and
aaa
lock
sbb
cmpsb
sbb
es
mov
int3
adc
test
call
cld
cmp
int3
outsl
iret
push
in
imul
scas
fisubs
pop
out
sub
loope
int3
das
jmp
push
into
pop
orb
push
test
and
outsl
lock
call
lea
add
repnz
in
jg
mov
cmc
jmp
rcl
mov
call
cmc
scas
jne
xor
push
jecxz
hlt
sti
jns
or
add
xchg
jo
fildl
sbb
es
pop
cmpsl
ja
or
add
call
repnz
sub
lret
fisttpl
add
imul
sub
pop
int3
mov
push
lea
js
dec
or
adc
iret
mov
dec
mov
movsl
inc
in
and
mov
or
insb
jge
data16
adc
fbld
lods
idivb
dec
imull
dec
loop
std
jle
cmp
sbb
imul
mov
pop
pop
rclb
nop
lods
and
dec
xchg
scas
loop
clc
sahf
lods
fsubr
test
push
out
stc
fsubrl
xor
decb
mov
loopne
clc
pop
adc
popf
push
mov
mov
sub
outsl
int3
out
iret
sub
cmp
dec
repnz
xor
mov
adc
out
mov
cld
dec
cmpsl
nop
in
fwait
and
and
call
dec
dec
fdiv
roll
jle
sbb
cmp
mov
and
sub
and
out
mov
fidivs
sahf
and
and
sbb
ret
adc
notl
add
movsl
and
jno
sbb
lret
adc
and
pop
iret
pusha
out
repnz
cld
iret
xchg
inc
push
mov
in
imul
push
stc
mov
jns
push
out
and
pop
inc
jecxz
les
and
loop
xor
or
jo
fiadds
mov
or
loop
and
jno
sbb
idivl
sti
test
repnz
enter
out
repnz
cld
inc
jmp
and
pop
and
and
les
imul
push
stc
in
mov
push
out
and
enter
push
imul
idivl
sbb
sbb
and
pop
inc
pop
mov
and
and
and
ficoms
dec
mov
mov
loop
push
xchg
adc
jb
movsl
fcomps
and
jge
in
sub
push
sbb
dec
nop
xlat
nop
lods
sti
enter
xchg
enter
or
inc
ficoms
fdiv
xor
jle
push
sub
dec
push
inc
xchg
sbb
lods
nop
jns
xor
lds
and
cmp
bound
and
cmp
inc
loop
xor
out
sub
nop
pop
cs
dec
push
inc
push
mov
dec
ja
stc
add
dec
in
out
sahf
mov
fdivrl
dec
pop
loopne
lock
or
or
push
inc
jns
jp
das
xor
sub
dec
add
hlt
mov
and
sub
dec
ficoml
mov
or
and
inc
pop
cmp
mov
movsb
lret
test
pop
clc
xorb
adc
cmc
jp
call
pop
xchg
pushaw
stos
leave
fs
js
xchg
or
mov
rcll
mov
outsb
cmc
jp
es
mov
call
push
stos
bnd
jle
test
jno
or
shrl
mov
fiadds
repnz
pop
inc
lea
cld
and
or
cmp
add
jl
sti
loop
mov
adc
lret
adc
lock
lret
add
push
dec
imulb
mov
fildll
cli
call
adc
mov
outsl
mov
in
mov
out
sub
test
int
enter
out
test
lret
lret
cmp
nop
adc
and
pop
adc
in
jle
adc
enter
aad
cwtl
leave
pop
adc
mov
jle
adc
enter
aad
sub
pop
adc
mov
jle
adc
mov
sub
and
enter
inc
jo
fwait
aas
push
nop
xchg
mov
mov
inc
or
sub
call
cs
push
lret
out
mov
lret
jne
cmp
xlat
popf
pop
aam
stc
fstl
in
cwtl
stos
rclb
mov
ljmp
lock
lret
push
in
jns
or
sub
cmpsb
mov
mov
mov
lahf
adc
pusha
aad
cmp
movsl
push
add
add
dec
sub
cmp
pop
clc
dec
mov
mov
add
mov
push
adc
cmpsb
clc
cli
mov
pop
dec
ret
mov
mov
mov
out
adc
mov
jmp
push
pop
dec
mov
mov
push
rclb
int3
lock
leave
xlat
or
push
pop
add
cmc
sti
mov
cmc
ljmp
push
scas
rcr
nop
cmc
out
lret
jg
lock
adc
int
pop
test
std
pop
and
cmpsl
mov
imulb
repz
and
pop
xchg
popa
scas
iret
cmp
les
dec
push
jmp
popf
pushl
adc
dec
cmp
jp
sub
popa
cmp
mov
adc
cmc
xchg
fcomps
pop
push
fcoms
fmul
fcomps
dec
clc
in
cs
and
into
sbb
icebp
pop
xor
jmp
clc
mov
mov
push
stos
repnz
pop
xchg
adc
push
mov
subb
xlat
mov
pop
cs
daa
pop
fdiv
scas
cmpsb
sub
loop
mov
mov
xor
stos
mov
dec
into
sbb
mov
nop
stos
imul
xchg
pop
cld
sti
sub
mov
sahf
or
pop
inc
mov
pop
xchg
popa
hlt
mov
sub
mov
dec
mov
cmp
mov
aas
and
nop
mov
adc
jge
add
jb
mov
sub
lahf
push
adc
popf
call
test
lods
jo
sar
mov
cli
push
adc
xchg
sbb
lahf
add
adc
sahf
lock
dec
ret
pop
addr16
lock
into
mov
shlb
pop
push
pop
inc
push
mov
loop
push
adc
cmp
xlat
lods
ja
inc
repnz
jmp
inc
clc
loope
into
or
sub
and
fadd
and
jl
jle
sub
repnz
icebp
rcr
dec
or
inc
movsb
mov
cmpsl
and
cmp
iret
lcall
xchg
mov
call
xchg
add
movsb
jmp
push
mov
ja
std
gs
daa
cmc
aas
mov
insl
loope
les
out
in
cmp
mov
pop
pop
leave
cmc
inc
lock
int3
js
lods
jp
into
in
pop
jmp
daa
jle
pop
enter
les
and
aaa
orb
cmpsb
lock
loop
outsb
pop
adc
and
and
call
hlt
sahf
inc
jmp
in
sub
out
fidivrl
cmpsb
js
and
push
jmp
lods
cld
and
rcll
leave
jge
sarb
into
ja
pusha
ja
lahf
notb
fmull
mov
sbb
dec
sti
outsb
push
clc
ret
inc
into
out
sub
sub
clc
jne
and
or
leave
int
cmp
mov
loope
insb
ret
xlat
into
pop
daa
std
cmp
sub
scas
dec
jle
mov
cmp
or
xchg
out
sti
aam
mov
loope
into
cmp
nop
mov
push
aam
test
pushf
push
push
leave
stc
test
add
lea
fadd
sub
test
pop
sub
jge
in
jle
jo
js
iret
mov
shl
push
cmp
fdivl
loopne
xchg
bound
push
pop
pop
cmpsl
jg
mov
sub
out
inc
nop
aas
call
mov
jo
clc
mov
or
js
and
incb
icebp
adc
dec
fmuls
hlt
adc
lods
aaa
pop
iret
sti
jp
xchg
add
add
sbb
mov
nop
inc
std
das
scas
cmp
in
mov
add
push
test
mov
fwait
cmp
pop
or
fs
aas
and
inc
enter
dec
nop
leave
pop
lds
ja
cmp
inc
lret
mov
pop
sub
and
js
pop
test
jae
std
js
mov
icebp
jge
outsb
stc
cmp
movsb
mov
movsb
push
mov
push
stc
adc
lcall
imul
and
fcompl
enter
test
mov
sti
lret
stos
jnp
ffree
clc
call
fbld
lahf
ljmp
cs
adc
mov
lock
dec
repnz
fidivs
and
nop
incb
cld
daa
loope
mov
cli
outsl
xor
lods
mov
fists
and
rorb
dec
test
lock
aad
or
nop
push
adc
enter
sbb
inc
add
ss
nop
cli
push
xor
xchg
cmp
mov
sub
enter
mov
dec
push
test
adc
sub
ljmp
nop
pop
sbb
clc
fildll
and
test
push
and
mov
push
jmp
mov
sub
xor
repnz
cmp
sub
dec
cli
lahf
push
sahf
nop
hlt
mov
lds
jge
inc
in
mov
jle
fnstsw
jmp
in
jl
js
jmp
aaa
mov
nop
stos
stos
mov
dec
and
mov
sar
outsl
mov
add
xchg
sub
mov
mov
cwtl
mov
jnp
jns
data16
push
jl
les
cmp
mov
aad
push
pop
pop
mov
in
jp
push
test
out
or
ret
pop
lds
lret
je
add
gs
jg
and
or
xor
ljmp
repnz
or
stc
fisttpl
jmp
aam
xchg
or
repnz
xor
and
in
imul
pop
pop
inc
sbb
mov
ljmp
ljmp
outsb
cld
hlt
lea
or
fsub
pop
and
and
adc
les
and
stc
shll
sbb
fists
and
mov
or
xlat
cmp
scas
dec
shr
jg
rcl
notb
rcr
cwtl
mov
dec
sub
lahf
enter
dec
mov
pusha
repnz
pop
or
std
adc
cwtl
pop
and
rcr
mov
sub
sarb
decl
or
fsubrs
push
pop
or
rcl
push
clc
aam
xor
sub
xchg
adc
or
push
push
fdivrs
pusha
hlt
inc
sub
pop
loop
mov
fmull
cld
call
cwtl
es
push
xlat
mov
pusha
test
and
xchg
fimuls
lret
divl
mov
inc
or
outsl
shrl
pop
loopne
adc
add
cmp
nop
jp
lds
adc
lods
dec
dec
shr
sahf
sbb
and
bound
or
add
shr
das
mov
inc
fdivrs
sub
insl
mov
pop
movsl
nop
les
mov
mov
add
sbbb
sti
das
shr
mov
stc
push
clc
hlt
fistps
mov
add
inc
push
xchg
mov
add
mov
adc
rorb
enter
fdiv
and
jno
add
lock
scas
cmp
sbb
push
pop
and
pop
and
jp
enter
mov
dec
pop
xchg
daa
outsl
inc
xlat
aas
mov
jmp
sub
sub
cs
sub
enter
jp
and
test
scas
aad
call
fs
cwtl
mov
lret
aas
outsb
sbb
outsl
loopne
mov
popf
jg
fdivrs
ja
rol
inc
pop
jmp
call
int3
js
rclb
dec
icebp
add
push
out
dec
sti
lret
scas
mov
jg
push
cmp
sbb
nop
scas
mov
dec
in
aas
cwtl
fsubr
test
pusha
aad
enter
mov
add
enter
lods
jnp
imulb
mov
add
mov
jg
cmp
dec
jp
mov
call
call
out
dec
or
adc
mov
cmpsl
sub
test
adc
adc
daa
or
test
inc
inc
mov
and
and
cmp
lret
sbb
sbb
add
jg
jg
mov
ret
pop
lock
cmp
jne
stc
dec
incb
hlt
jmp
add
popf
adc
inc
jo
fistps
cmpsl
int
loopne
jecxz
sbb
nop
push
jne
add
scas
std
cwtl
out
dec
fsubrl
call
mov
or
sub
mov
aam
mov
in
aas
hlt
cld
pusha
out
dec
into
test
mov
js
ljmp
aam
scas
sarb
mov
shrb
dec
hlt
repz
push
nop
sub
mov
sarl
mov
lcall
dec
scas
pop
mov
adc
and
fildll
sbb
and
mov
daa
or
cmp
add
sub
hlt
fbld
daa
push
call
dec
fcomps
cmpsl
imul
pop
push
in
cmp
stc
sub
js
test
and
mov
nop
jnp
enter
xchg
cmp
cmp
cmp
nop
ret
dec
jns
push
cmc
jp
or
mov
aam
ljmp
mov
mov
fiadds
repnz
inc
lret
push
mov
aas
pop
mov
mov
or
push
xchg
stos
mov
add
push
cld
adc
jb
iret
loopne
mov
shl
mov
ja
pusha
das
adc
sar
test
jnp
lock
ljmp
pop
nop
jmp
cmp
pusha
jns
push
hlt
mov
aad
mov
jecxz
sti
dec
jmp
mov
test
sar
outsl
push
out
and
and
mov
ja
loopne
pop
dec
fdivs
jns
repnz
or
das
xchg
mov
mov
dec
sar
cmp
mov
cmp
push
cmp
push
mov
jmp
jmp
and
pop
mov
cld
mov
dec
rclb
lea
adc
repnz
test
inc
and
jl
sahf
mov
and
xor
pop
mov
mov
outsl
and
or
sti
fisubl
pop
inc
movsl
loop
mov
dec
pop
push
xchg
or
out
and
xchg
lds
imul
mov
fs
das
sub
imul
outsl
mov
int
or
loopne
jg
dec
mov
scas
adc
mov
in
and
jp
xchg
lock
adc
test
jl
nop
mov
jg
addr16
dec
fldt
pop
sub
hlt
scas
cmpsl
sbb
hlt
pop
cmpsb
test
pop
xor
clc
mov
or
dec
fnstcw
sub
addr16
mov
lret
inc
ret
mov
fidivrl
or
cmp
or
rcl
test
decl
adc
shr
lahf
cmp
mov
inc
push
mov
out
shrb
loop
mov
sbb
stc
mov
pop
mov
shll
and
and
inc
add
adc
jbe
mov
sub
dec
pop
nop
aaa
out
cmp
adc
lret
jle
enter
loop
mov
and
lock
push
cs
inc
or
xchg
jp
and
nop
test
and
push
sub
les
mov
jmp
clc
loop
dec
push
or
dec
pop
mov
test
push
aas
dec
inc
cli
mov
mov
test
pusha
icebp
xchg
sub
scas
test
mov
nop
clc
pusha
inc
mov
sub
loopne
int
stos
enter
es
pop
jmp
adc
jl
mov
push
and
dec
stos
lret
inc
xchg
jge
push
fsubr
xchg
imul
nop
jmp
movsb
out
dec
add
adc
ds
inc
adc
jecxz
nop
stc
jp
pusha
rclb
std
dec
imul
icebp
and
or
or
mov
push
les
hlt
scas
cmp
push
rorb
stos
enter
mov
push
stc
test
xchg
sub
cmp
rcr
push
mov
xchg
fwait
pusha
sarl
push
test
imulb
repnz
and
add
dec
fdivr
cmp
test
es
mov
push
inc
stos
mov
ret
js
mov
jl
inc
repnz
fbld
les
sub
shlb
sub
adc
scas
and
pushf
jo
xchg
mov
in
mov
stc
add
lock
dec
jmp
cld
sub
push
inc
add
cwtl
les
out
shr
and
notl
aam
xchg
push
sub
mov
les
stc
xor
mov
sub
in
mov
mov
test
aam
loope
aam
clc
aaa
inc
aam
adc
sti
mov
jge
add
cld
dec
inc
aam
loopne
int
sub
inc
and
mov
je
out
clc
sti
enter
push
psrld
repnz
mov
mov
ret
push
enter
sbb
cld
sub
mov
and
popf
hlt
sub
fwait
sub
dec
pop
push
es
insb
rorb
es
testb
mov
mov
pop
pop
add
mov
cltd
mov
or
cmp
cmp
movsl
fdivrs
and
mov
lock
repnz
inc
cld
sbb
pop
inc
or
mov
stc
jle
clc
jmp
pusha
aam
repz
scas
movsb
mov
jo
pop
out
mov
cmc
out
icebp
sbb
ret
imul
mov
jg
std
popf
call
xlat
mov
or
jne
push
pop
push
jl
cmp
scas
dec
test
xchg
stos
push
scas
and
push
popf
out
mov
sub
push
and
push
fldcw
aas
sahf
or
loope
aam
mov
sub
dec
fistl
clc
jmp
jo
pop
xchg
mov
mov
cld
lahf
pop
sar
pop
insl
dec
pop
adc
mov
aam
push
test
fwait
mov
push
xor
shl
cmp
inc
mov
pop
cli
push
nop
ja
jns
xlat
nop
mov
cmc
mov
lds
stos
repnz
dec
ljmp
out
dec
sahf
inc
cld
rorb
mov
clc
mov
stos
ret
add
jg
fsts
cli
jne
dec
imul
xchg
adc
mov
mov
jle
clc
fimuls
lods
sub
subb
pop
inc
xchg
fimuls
inc
mov
jne
add
or
dec
push
or
repz
sbb
pop
mov
pop
mov
icebp
add
dec
mov
mov
scas
dec
mov
add
aam
jle
xlat
aam
into
decl
xor
shrb
cwtl
ret
adc
sbb
jge
clc
jns
pop
adc
lcall
and
aad
and
aad
les
push
stos
leave
aad
mov
enter
fdivrs
jle
jg
pop
adc
nop
pop
push
mov
inc
or
sbb
mov
scas
das
jnp
mov
cmp
cmp
jo
sub
pusha
in
das
nop
enter
add
and
cmp
mov
in
fdivrs
lods
nop
jp
adc
or
or
dec
outsl
xor
daa
fidivs
subb
sarb
enter
sti
cmp
movsb
or
pop
pushf
loopne
and
xor
xchg
dec
pushl
rorb
pop
cmp
mov
shl
int3
es
nop
mulb
adc
xchg
sbb
lods
push
xchg
fldl
test
adcb
test
pop
bound
fcomp
repz
push
mov
insl
fcomps
aad
mov
cwtl
std
sub
fdiv
pop
test
nop
adc
mov
jle
push
xchg
mov
pop
aam
and
daa
pop
enter
ja
sub
shll
movsl
push
push
and
imul
decl
or
out
mov
enter
inc
call
jno
or
cld
mov
js
xchg
std
mov
loopne
in
stos
fisubrl
out
dec
cli
outsl
lock
cld
mov
cmc
out
jecxz
std
xchg
imul
mov
inc
std
jns
ret
rclb
and
add
add
ja
pop
fsubrs
inc
es
xor
sub
mov
xor
enter
adc
add
repnz
incb
out
and
enter
push
imul
push
stc
dec
bsf
lea
or
and
xchg
or
push
sub
jo
das
stc
loopne
xchg
loopne
lret
sarl
adc
scas
enter
imul
nop
mov
and
daa
clc
notl
sub
hlt
mov
adc
mov
cli
xchg
mov
mov
mov
out
push
mov
mov
mov
sub
sbb
les
pop
jns
or
mov
sub
leave
sbb
enter
sar
dec
mov
stos
repnz
sub
stc
fisttpll
out
xlat
call
pop
pop
sub
xchg
inc
or
jns
push
jmp
ds
xor
jle
jge
jae
jns
outsb
aas
adc
or
adc
cli
xor
sub
inc
nop
sub
sbb
lock
aad
les
pop
in
fwait
test
out
mov
cmp
push
and
jns
or
or
sub
adc
decb
jle
loope
cmp
sub
call
bnd
test
popf
jge
push
cld
popf
jnp
jns
das
jnp
xchg
mov
pop
mov
mov
dec
out
lret
in
jmp
outsb
or
sub
jl
std
xchg
dec
cld
mov
adc
loop
cmp
stos
sub
sar
and
notl
jg
shlb
in
sbb
out
pop
adc
lods
inc
dec
cli
jle
mov
dec
or
jmp
lock
aaa
enter
cli
sub
mov
push
test
mov
sub
jmp
std
outsl
mov
lahf
fsubrp
pop
pop
push
jg
jecxz
xchg
pop
movsl
ffree
mov
push
pop
fisubs
daa
mov
ficomps
dec
ror
in
pusha
scas
dec
imul
in
sbb
pop
inc
movsl
loope
aas
call
fdiv
xchg
sub
dec
out
mov
lret
aas
mov
inc
sub
dec
sub
out
jae
test
jl
movsl
int
in
cmp
ljmp
repnz
pusha
imull
jg
mov
aad
rcr
xor
and
jno
pop
mov
pop
pop
push
dec
pushf
mov
clc
fwait
test
aaa
aas
out
and
fwait
sarb
xor
inc
scas
out
enter
or
fcom
mov
scas
and
cmc
jns
or
enter
int
enter
adc
xchg
shl
xor
fcom
jle
push
fs
das
shr
cs
out
dec
aas
pusha
xor
push
mov
in
repnz
cmp
lahf
mov
xor
hlt
jmp
inc
scas
xchg
clc
nop
dec
scas
mov
stos
repnz
std
jno
and
ss
ja
and
ljmp
je
fucom
sub
imul
mov
inc
fprem
outsb
sub
out
imull
fdiv
or
faddl
xlat
mov
add
mov
jo
cmpsl
push
push
pop
dec
call
lahf
cwtl
leave
xor
inc
es
adc
test
xlat
fucomip
nop
pop
dec
jnp
mov
aas
and
pop
jno
xlat
or
inc
add
cltd
lock
adc
scas
enter
and
addr16
pop
mov
sbb
jge
jo
test
mov
and
cmc
sub
rcr
fwait
movsl
fmul
imul
mov
push
testl
movsl
push
movl
mov
xlat
in
test
fsub
mov
test
hlt
lcall
pop
dec
inc
nop
mov
mov
mov
das
push
jo
sub
movsl
jp
adc
pushf
dec
test
nop
and
mov
add
sarb
shlb
or
adc
cmp
outsl
or
jo
mov
in
ss
aas
inc
mov
dec
mov
and
push
mov
in
or
mov
aaa
push
lods
sbb
pop
cmpsl
ja
xor
mov
jp
jl
not
xchg
pop
nop
pop
movsl
idivl
lahf
addr16
lahf
mov
hlt
mov
in
jno
adc
mov
pop
mov
adc
xchg
push
hlt
mov
mov
mov
leave
hlt
js
lods
push
push
fisttpl
mov
sarb
jae
fidivs
mov
outsl
fdiv
aas
add
fwait
xlat
scas
jmp
cli
and
mov
jne
clc
rcrl
repz
bnd
jmp
and
xlat
pop
ret
outsl
inc
jb
addr16
loop
xlat
std
icebp
fcoms
pop
loopne
jmp
fstpl
jns
mov
std
ret
je
add
shl
xchg
movsb
or
ljmp
rclb
add
adc
outsb
or
and
enter
sub
dec
sub
loope
imul
pop
dec
loop
cmp
dec
mov
shlb
mov
pop
fnstcw
filds
fimuls
push
pop
jle
inc
cmc
adc
std
aas
mov
pop
das
in
xlat
fstpl
loopne
xlat
repz
ret
push
fcoml
jo
fcoml
xor
or
add
out
adc
stos
mov
mov
jmp
dec
out
dec
jmp
push
sub
addb
dec
imul
outsl
sbb
leave
add
enter
mov
fidivs
pop
stos
and
std
lret
and
imull
ja
pop
dec
stc
imul
ss
push
dec
and
ficoms
nop
mov
mov
push
das
and
aaa
cmp
dec
mov
sub
mov
push
in
lret
daa
mov
lea
or
lea
lock
jno
bnd
stc
mov
std
jle
clc
jmp
cmp
call
xchg
xor
stos
dec
clc
ja
lock
rcrb
and
dec
fbstp
pop
xlat
fdivr
jg
mov
cmp
in
jl
jg
shr
loop
stos
mov
push
and
jns
or
notb
jmp
pop
out
or
rcll
imul
scas
dec
repnz
jnp
dec
mov
clc
inc
jo
xchg
clc
xchg
std
cmp
enter
pop
xor
and
std
leave
filds
jg
aam
push
jmp
xchg
cwtl
fisttpll
or
push
jb
fsubs
fadds
push
loop
test
sar
sub
rcr
mov
sbb
push
and
aas
mov
call
adc
and
fstps
sub
add
das
js
sub
push
adc
ret
push
sub
in
add
adc
lret
xor
push
push
out
lods
cmp
dec
fmuls
jno
aad
test
pushf
push
jge
push
hlt
mov
pop
cwtl
push
jmp
imul
push
xor
inc
mov
push
iret
adc
pop
in
xchg
jnp
call
jecxz
xlat
sub
xlat
lcall
pop
dec
jge
fcomps
pop
sbb
dec
insb
adc
stos
mov
test
mov
pop
cmc
stos
push
repnz
mov
jge
out
push
clc
call
mov
jge
or
jmp
adc
jl
xor
ja
lahf
fsub
fdiv
sbb
aas
push
dec
jg
scas
adc
dec
mov
icebp
fmull
cld
loopne
js
inc
movsl
fadd
addr16
mov
jl
in
test
lcall
nop
inc
enter
jnp
ds
nop
push
ror
cmp
fdivr
test
lret
sbb
cmp
mov
inc
or
aam
xchg
je
lret
test
pop
sarb
nop
in
lret
pusha
loop
xchg
clc
push
and
mov
fdivrs
call
mov
mov
mov
or
push
in
aas
mov
mov
jg
inc
fsubrs
insb
jno
sub
mov
jl
ljmp
inc
dec
push
shrl
mov
lds
and
pop
nop
enter
push
stc
rorb
and
inc
fistpll
les
ljmp
mov
push
and
inc
mov
cmp
pop
mov
cwtl
scas
mov
out
cli
adc
xchg
inc
cmp
mov
std
mov
adc
fisubrl
lret
push
jge
sub
ja
adcb
movsb
iret
je
add
pop
inc
sbb
mov
test
test
and
icebp
faddl
nop
mov
push
in
scas
test
scas
lret
push
in
mov
jmp
inc
pop
xchg
lock
mov
sti
adc
scas
adc
scas
loop
push
xchg
mov
jne
pop
ficompl
cmc
repz
mov
les
jle
outsl
fisubrl
push
scas
mov
sub
dec
push
xor
shlb
or
jno
xlat
dec
push
mov
mov
sub
imul
adc
mov
clc
jbe
mov
xchg
jbe
push
rcll
stos
mov
cli
dec
push
icebp
loopne
or
in
imul
sub
xchg
repnz
repnz
mov
das
call
add
jmp
adc
add
dec
test
out
leave
daa
insl
xor
aam
push
jmp
popf
mov
int
mov
test
pop
adc
out
and
inc
adc
mov
adc
dec
sub
push
fisubrl
dec
jne
test
das
pop
adc
mov
inc
mov
ret
mov
pop
jl
popl
add
repnz
jns
sbb
xchg
mov
jo
sbb
movsb
mov
in
outsb
std
into
xor
dec
inc
mov
inc
adc
enter
mov
enter
sbb
inc
lea
or
pop
jns
pop
enter
std
xor
adc
hlt
cli
mov
mov
and
push
call
mov
and
add
cmpsl
ficompl
insl
test
std
aas
add
mov
clc
stos
xchg
loop
mov
jo
test
in
mov
cmc
clc
mov
bound
ljmp
clc
jo
sub
jo
nop
sub
jbe
sub
repnz
jle
ja
fisubrl
test
in
inc
cmp
je
push
repnz
pop
dec
out
shrb
mov
jg
inc
sar
jge
imul
jg
loopne
xor
test
xchg
cmp
dec
fcoms
pop
addr16
aam
pop
mov
add
sbb
xor
test
add
adc
push
scas
xchg
mov
dec
imulb
nop
cmp
dec
push
inc
repnz
cld
fwait
clc
hlt
ljmp
nop
aad
call
or
cmpsb
lock
push
add
rclb
or
mov
aaa
mov
sahf
lods
inc
mov
mov
cli
pop
adc
std
jns
and
mov
inc
les
mov
nop
push
inc
sub
shr
sub
enter
iret
js
mov
push
sub
push
imul
or
dec
cmpsl
shl
or
mov
add
xchg
push
js
fsubrl
push
jmp
lods
adc
or
or
push
hlt
ficomps
test
and
pop
outsl
sbb
fcmovnu
dec
adc
movsl
clc
je
hlt
pusha
pop
jno
sub
out
pop
lods
call
lods
daa
cltd
inc
push
movsl
aad
jo
insb
fstpt
or
or
mov
outsb
adc
lock
lret
popf
mov
and
mov
pop
sub
and
pop
jbe
rcr
cwtl
cld
add
mov
cld
mov
loop
pop
loopne
daa
sti
add
nop
inc
cmp
sub
mov
cmpsb
test
call
sub
mov
test
stos
mov
pop
lret
ffreep
mov
jne
nop
repnz
fstps
rcrl
les
jmp
mov
fldt
cmp
movsb
scas
aad
cmp
jne
sar
clc
out
and
pop
in
outsl
sarl
lods
shr
mov
pop
adc
and
and
hlt
mov
fucomi
loop
scas
mov
frstor
sarl
dec
lret
nop
mov
jge
nop
lock
pushf
loopne
movsl
pop
adc
clc
push
lret
xlat
adc
sarb
ds
cmc
stc
lock
xor
cld
pop
or
out
pop
ljmp
xchg
scas
das
mov
stos
push
in
cmp
jmp
stos
mov
jmp
ret
jg
jne
xor
jne
clc
adc
call
stos
lret
pop
jg
ret
or
xchg
repz
out
push
mov
sub
push
sub
jno
push
loope
mov
out
and
or
shr
or
decl
push
daa
std
fcmovnbe
mov
push
and
pop
fstl
dec
loop
fdivr
clc
aad
cmp
jge
adc
pop
cmp
pop
das
shl
iret
mov
dec
incl
mov
dec
std
mov
pop
jge
push
sub
sub
xor
lahf
sub
add
loop
icebp
sbb
ds
sti
pop
call
fsubr
mov
cs
pop
das
fdivrl
fcoml
test
enter
out
in
nop
mov
inc
pop
jl
daa
subb
daa
shlb
mov
sub
in
stc
push
sti
mov
xor
std
outsl
push
scas
or
sub
fnstenv
sub
xlat
adc
scas
loop
in
ficoms
dec
adc
pop
js
testb
fdivs
jae
push
xchg
out
into
sbb
lcall
ficoms
pop
pop
and
aad
dec
cmp
adc
ljmp
inc
clc
mov
push
test
pop
fdivrl
push
xchg
and
xchg
mov
add
jmp
mov
jns
adc
icebp
je
dec
nop
test
mov
push
xchg
ficomps
dec
push
es
fdiv
sub
ljmp
loopne
jmp
xchg
clc
jbe
cmc
adc
mov
adc
js
xchg
mov
xchg
aaa
and
je
pop
movsb
cmp
sti
cmpsl
add
cmp
scas
adc
sub
mov
push
in
aas
pop
push
hlt
stos
mov
loop
jle
xlat
adc
lahf
mov
jge
rcr
dec
pop
push
xchg
pop
nop
pop
lods
push
adc
shlb
clc
inc
add
cwtl
incb
cmc
jp
xor
clc
mov
loop
jp
inc
sar
add
xchg
nop
imul
mov
mov
jo
in
stos
fisubrs
and
xlat
jmp
clc
outsb
cld
and
fbstp
out
les
sub
clc
test
add
pop
or
cmpsb
jno
pop
scas
std
adc
mov
pop
pop
enter
test
fnstsw
test
mov
not
mov
test
es
fsubrs
test
out
lret
imul
mov
fisttpll
cld
sbb
and
repnz
pop
jno
bsf
test
pop
dec
fldl
mov
cmpsb
enter
fucomp
xchg
mov
sub
sub
enter
pop
jmp
adc
fnstsw
sub
enter
push
aad
lock
inc
daa
cmpsl
adc
pop
cmp
pop
pop
mov
xchg
adc
pop
dec
or
js
inc
mov
mov
stos
jo
push
pop
popf
xchg
and
pop
scas
xchg
js
add
cli
cmp
scas
rol
dec
sub
mov
insb
dec
pop
mov
mov
sti
or
sub
mov
mov
lock
cli
je
jg
ja
inc
enter
iret
sbb
sub
repnz
jp
pop
nop
push
sub
push
dec
pop
repnz
out
clc
jge
xchg
jg
lock
ja
enter
fdivrs
fnstenv
fimuls
jnp
mov
aaa
lock
sub
jo
sub
lods
ja
inc
lret
cmc
sbb
fdiv
cli
lret
dec
mov
repnz
and
hlt
icebp
dec
imul
nop
cs
inc
nop
movsb
cmpsb
sar
lods
nop
jmp
mov
mov
jns
lret
jne
test
icebp
mov
imul
push
test
adc
pop
nop
mov
movsl
mov
push
inc
xchg
hlt
outsb
dec
adc
xchg
mov
push
jg
std
pop
adc
movsl
fstp
cmp
xchg
fists
andb
out
mov
test
pusha
out
repnz
jge
pop
fcoml
in
jle
xlat
adc
js
dec
loope
les
in
clc
popf
push
aas
cmp
clc
inc
or
sbb
jae
gs
and
mov
cmp
xchg
call
fdiv
es
clc
jmp
lds
pushf
or
aaa
push
inc
sub
pop
and
jbe
aad
inc
ja
xlat
mov
fnstsw
mov
jo
push
sub
shr
sub
enter
pop
dec
fstpl
icebp
adc
push
lea
aam
pop
out
out
lret
adc
lcall
add
mov
and
daa
in
cmc
aas
clc
push
jo
loope
leave
ficoml
les
stos
test
xchg
xorb
xor
push
dec
pop
repnz
int
cli
aas
nop
push
clc
paddw
inc
stos
test
mov
in
out
mov
add
in
js
inc
dec
dec
mov
js
lret
inc
call
add
cld
adc
lcall
or
gs
cmc
adc
movsb
lock
aad
or
mov
call
shrl
mov
insl
cs
and
jnp
push
xchg
enter
xchg
push
lds
jle
out
loopne
jmp
loopne
loop
fidivs
mov
xlat
fsubp
add
fsubs
fcompl
sub
mov
aad
test
pop
mov
jmp
mov
cmpsb
adc
ss
test
pop
outsl
enter
mov
inc
jle
in
jle
bound
push
fdivrs
icebp
or
add
cmp
lock
push
orb
fsubs
push
cli
push
xchg
cmp
aam
adc
test
jno
lods
nop
cli
ja
pop
js
pushf
loope
leave
dec
jnp
notl
add
hlt
scas
mov
mov
imul
sub
jmp
cmp
das
sti
push
leave
cmc
in
jb
pop
mov
out
mov
cmp
push
ficomps
call
push
mov
movl
cmc
jae
jg
inc
shlb
pusha
inc
js
or
and
mov
push
adc
ret
xor
fbld
jg
enter
lret
clc
mov
and
mov
xchg
ret
push
jl
inc
ds
in
mov
stos
test
adc
jmp
xchg
mov
clc
dec
clc
test
test
hlt
lret
pusha
incb
mov
push
adc
adc
cs
fisubrs
inc
fcoms
push
ds
aaa
jp
fcomp
xchg
lcall
push
std
jp
test
in
pusha
scas
pop
fcmovu
mov
push
lcall
or
pop
xchg
fcom
jmp
je
push
scas
dec
call
int
stc
cmp
sub
lret
out
je
sbb
nop
or
inc
icebp
hlt
mov
fimuls
in
clc
jmp
add
in
sub
shl
pop
xlat
mov
fistps
cmc
nop
jo
cld
test
adc
sbb
psubw
out
les
imul
lock
das
fistps
fcomip
adc
xchg
loopne
nop
sub
imul
mov
nop
inc
pushf
jp
mov
movsb
data16
ljmp
fidivs
test
loope
jo
enter
push
mov
sub
xor
fldcw
xchg
dec
dec
sarb
daa
push
sbb
xor
or
dec
pushf
cwtl
fildll
push
in
outsl
fcom
push
imul
cltd
sbb
ja
pop
sbb
dec
pop
fwait
and
xchg
fdivrs
sahf
fwait
push
xchg
mov
clc
mov
shr
add
mov
mov
aam
dec
xor
adc
and
sub
sub
jb
xor
mov
push
pop
decl
out
ja
cmp
dec
out
lret
ja
lock
lea
pop
movsl
nop
ret
push
jns
pop
sbb
les
in
xor
adc
mov
xchg
scas
mov
ljmp
rolb
xchg
pop
mov
pop
sub
cmc
les
nop
lret
push
add
nop
mov
push
dec
sub
push
pop
ja
push
dec
pop
repnz
inc
pop
sub
pop
dec
jge
pushf
orb
lock
inc
nop
lods
jns
mov
fstl
fistps
inc
xlat
push
jg
mov
cmpsl
fidivs
stc
mov
push
scas
sbb
mov
pop
nop
jecxz
sub
hlt
inc
adc
xchg
mov
fsubrs
or
pop
cmp
ljmp
bnd
dec
lods
or
lds
cli
dec
mov
mov
mov
negb
cs
cmp
in
out
in
orb
movsb
scas
in
enter
enter
pop
sar
and
or
lods
pop
nop
push
rcrb
mov
mov
pop
push
push
cli
push
pop
sbb
pop
jno
jmp
sti
shl
push
aam
mov
push
sbb
push
and
stc
dec
cs
sarb
repnz
call
nop
call
dec
push
int
jno
das
jmp
enter
cmp
nop
clc
pop
mov
mov
jb
push
fdivrs
sub
clc
xchg
ficoms
push
leave
jle
jg
add
xchg
ds
fdivrs
repnz
lret
adc
repz
lds
push
pop
and
and
dec
and
insb
jno
psrld
mov
clc
xchg
dec
into
shl
js
sub
jmp
lds
mov
sub
push
xor
inc
inc
hlt
mov
inc
ja
in
repnz
cmp
inc
cmpsl
xchg
fsubr
pop
pop
fildll
and
fisubrs
ds
movsl
and
aaa
scas
fcmovnbe
enter
nop
pop
in
sub
inc
push
mov
xor
push
push
das
enter
sar
inc
fistpll
js
sub
mov
cs
movsb
in
and
daa
aam
inc
call
shlb
enter
ja
lock
add
pop
and
loopne
les
cwtl
mov
icebp
or
sub
aaa
lock
clc
fucom
movsb
lret
pop
or
loopne
cld
and
loopne
jo
loopne
dec
add
pop
xchg
js
je
xlat
xchg
sub
xor
mov
ljmp
stos
jle
mov
inc
mov
loop
clc
pop
adc
shrl
pusha
movsl
into
pop
cld
and
jns
mull
and
mov
lret
sub
or
dec
mov
push
hlt
mov
cs
in
adc
dec
mov
sar
cmp
sbb
pop
pusha
test
cmc
iret
pop
pop
jmp
pusha
movsl
lret
shlb
mov
pop
push
dec
sti
mov
inc
xor
adc
mov
in
lret
cmp
cld
jo
mov
and
clc
loopne
loope
in
mov
iret
shlb
push
clc
cmpsb
ucomiss
sar
sub
cmc
cmpsb
sbb
sbb
mov
int
jmp
iret
jns,pn
push
movsl
pop
and
mov
aas
push
or
pop
fdivr
popf
cmp
daa
sub
jmp
push
nop
dec
stos
mov
push
in
sub
call
sub
lds
adc
js
das
xchg
adc
xchg
sub
clc
stos
lret
adc
mov
mov
fwait
js
and
mov
jmp
lock
adc
clc
std
jle
clc
leave
sti
jge
shlb
mov
adc
pusha
in
imul
mov
movsl
les
imull
call
push
fadds
sbb
inc
add
daa
mov
xchg
and
inc
jno
jl
scas
sub
in
add
in
pusha
stos
and
jle
test
sub
or
hlt
lahf
xchg
lock
pop
cwtl
incb
test
sbbl
out
cld
mov
mov
mov
inc
pop
jl
loopne
sbb
pop
pop
sbb
insl
loopne
pop
inc
test
fisubs
ljmp
xlat
mov
dec
xchg
pop
in
sub
pop
cld
sbb
in
push
adc
pop
test
and
loopne
and
dec
pusha
add
inc
xchg
stc
xor
cld
nop
push
shll
jae
cli
pop
add
sti
add
sub
sti
xchg
lock
or
push
jmp
nop
pop
xchg
aas
or
pop
loopne
and
jle
popf
int
push
cltd
lock
in
xchg
js
mov
rcrb
aad
rorb
clc
jne
cld
lods
imulb
pop
dec
mov
in
fldenv
dec
xchg
dec
jmp
ljmp
pop
repz
mov
repnz
pusha
pop
scas
push
jmp
nop
xchg
addl
std
cmp
movsb
cld
pusha
scas
xlat
outsl
pop
and
out
repnz
adc
jmp
iret
inc
adc
jg
and
stc
dec
ret
test
mov
xlat
mov
add
xchg
imul
loope
scas
test
sub
mov
mov
cs
loope
push
and
repnz
out
mov
inc
mov
or
inc
std
cmp
and
mov
pop
cli
jge
cwtl
pop
adc
enter
fildl
pop
es
xor
es
push
jns
movsl
xlat
gs
dec
outsb
fiadds
jle
enter
js
andb
or
mov
out
test
and
mov
in
div
mov
sbb
ljmp
scas
and
inc
pusha
scas
icebp
test
sub
xchg
stos
jg
dec
inc
test
push
jg
inc
fdivrs
fadds
adc
nop
mov
and
add
sbb
test
jle
sbb
cmp
cmc
lods
adc
movsb
xchg
sub
das
inc
mov
push
fdivr
and
in
shr
aas
outsb
pusha
dec
sti
mov
pop
xchg
dec
fsubrs
loop,pt
mov
xchg
js
enter
sub
dec
sbb
stos
nop
fidivs
es
cmpsb
push
jne
xchg
or
xchg
mov
sbb
cli
mov
stos
sub
mov
jmp
cltd
enter
mov
out
bnd
daa
sub
xchg
test
xlat
insl
dec
push
loop
sub
jo
cld
mov
push
push
sarl
sub
loope
cld
jnp
loopne
mov
shrl
mov
test
das
test
pop
stos
aas
sub
fcomi
cli
dec
stos
fwait
pusha
mov
loopne
jle
test
loope
jo
loope
fsubl
enter
aaa
dec
lret
xlat
aaa
orb
pusha
scas
and
nop
hlt
and
mov
ret
adc
fcompl
xor
jge
mov
fdivrs
popf
pop
loopne
or
dec
and
mov
test
in
cmp
out
pause
clc
mov
leave
loope
mov
insl
js
lea
dec
or
dec
mov
rcll
or
loope
out
fwait
mov
cmp
mov
adc
sub
nop
adc
fmull
lcall
and
mov
jge
loopne
sub
inc
or
nop
pop
test
nop
adc
sub
and
push
test
les
mov
test
aad
scas
sbbb
adc
mov
and
sub
dec
push
les
push
test
loop
or
adc
loop
test
loop
mov
loop
loop
rcll
fwait
lock
inc
add
cwtl
les
sbb
shrl
mov
in
sub
outsb
sbb
movsb
les
jbe
mov
je
jns
and
adc
lods
les
loope
les
mov
lea
movsl
sti
enter
add
cld
scas
mov
test
fmul
aam
and
jne
nop
dec
push
pop
jle
nop
inc
pop
jg
adc
mov
and
clc
pop
mov
enter
in
jle
mov
mov
mov
pop
xchg
adc
pop
push
cmp
mov
jmp
fsubrs
jmp
sarb
pusha
mov
mov
test
xchg
and
cmp
mov
jmp
pop
xchg
daa
imul
pop
inc
call
and
clc
imul
xlat
or
push
rcl
sti
loopne
and
out
ja
xor
push
leave
adc
push
cli
push
int
pop
popf
stc
cmp
loop
hlt
add
inc
je
xchg
nop
adc
loop
stc
xor
pop
mov
andb
loop
loop
inc
xor
in
nop
push
in
ds
push
aam
push
loopw
xlat
or
loop
icebp
push
cs
scas
loop
mov
call
imul
pushf
or
insl
in
jo
or
or
mov
push
mov
enter
insb
jp
cmc
mov
push
pushf
nop
stc
das
jmp
jecxz
idivb
xor
ljmp
jecxz
js
sbb
das
ljmp
push
test
inc
nop
ljmp
mov
repz
pop
jns
enter
mov
loope
jecxz
stos
xchg
aas
adc
sar
mov
cwtl
repnz
adc
mov
sbb
scas
lahf
call
inc
push
add
dec
and
cmp
mov
or
jns
or
dec
mov
add
fcomp
jg
pop
jl
push
jo
in
cs
pop
cmp
fbld
mov
les
les
pop
ljmp
or
stc
sub
xor
jp
nop
adc
and
and
movsb
test
loopne
clc
push
les
or
mov
mov
mov
dec
les
ljmp
mov
mov
mov
test
mov
sub
outsl
push
in
mov
test
and
adc
scas
cmc
in
dec
call
nop
mov
mov
dec
imul
mov
push
xchg
repz
jo
dec
mov
test
in
lret
cmp
test
pop
dec
xchg
cmpsb
dec
lcall
and
jne
hlt
scas
repz
mov
pop
add
inc
xlat
or
fbld
fucomip
pusha
bnd
test
inc
pop
mov
sub
push
daa
cld
mov
xchg
and
mov
out
dec
cli
outsl
sbb
push
test
lret
lock
daa
push
dec
test
jne
sarb
jns
jns
psrlq
nop
repnz
lock
scas
test
jmp
sbb
shll
and
js
sub
cmc
adc
mov
xchg
into
add
jp
adc
pop
inc
inc
sub
push
out
xchg
push
xchg
sub
mov
das
mov
add
jmp
cld
test
pop
or
add
mov
xchg
mov
daa
test
daa
repnz
xchg
sbb
scas
xchg
jl
call
jnp
cwtl
xchg
cs
test
or
add
stc
mov
xor
mov
add
scas
fsubl
sarb
jg
inc
out
enter
inc
in
or
cmc
in
sub
out
test
or
cld
clc
mov
enter
and
sub
scas
and
xlat
lods
inc
enter
fwait
test
dec
adc
pop
clc
or
in
enter
xlat
imul
adc
jle
push
in
jno
sbb
cmp
nop
adc
repnz
sub
and
in
das
mov
or
xchg
ds
and
xlat
movsl
outsl
sarb
lock
leave
sbb
jg
dec
in
rcrb
fwait
lock
into
mov
xchg
push
iret
mov
xchg
or
xchg
pop
scas
cmp
xchg
mov
adc
cld
pop
data16
add
ret
sbb
adc
mov
mov
dec
cmp
test
xor
sar
xor
jmp
pushf
and
jl
hlt
test
rcrl
shrb
pop
in
fildl
dec
sub
rcrb
and
mov
pop
popf
cwtl
jb
push
sub
push
mov
xchg
fsub
push
mov
std
cs
xor
cli
fbstp
or
nop
movsl
jge
pusha
popf
jl
push
mov
adc
jne
sub
adc
adc
dec
fdivrl
push
mov
in
pusha
stos
daa
adc
jo
adc
xchg
enter
inc
sar
clc
fldenv
sbb
iret
pusha
cmc
ficomps
cwtl
cli
sbb
jle
mov
jns
push
cli
aaa
in
nop
mov
jle
push
sarb
push
scas
leave
or
jns
sbb
and
or
shr
or
imull
daa
outsl
push
sar
or
fbld
and
js
mov
dec
mov
sar
sbb
repnz
mov
xor
mov
notl
sbb
leave
sub
fists
aam
enter
fists
lods
push
stos
loope
inc
ret
fsubp
fnstsw
pop
or
mov
je
fildll
hlt
ljmp
mov
pop
push
imul
aad
pop
int
pop
inc
lock
dec
test
xchg
push
mov
jg
cmp
add
repnz
insl
lock
xchg
push
cld
cltd
lock
scas
repnz
aad
push
in
ja
adc
sar
sub
hlt
in
and
hlt
test
pop
fsubp
push
leave
roll
pop
lods
outsl
mov
add
and
clc
mull
pusha
js
in
jae
sbb
push
adc
sbb
fidivrs
sub
clc
rclb
or
xor
jns
or
and
movsl
jae
pop
mov
push
inc
cs
test
xor
xchg
add
xchg
roll
xchg
cmp
clc
sahf
and
xchg
jl
jg
push
inc
mov
adcb
fidivs
fsubrs
into
adc
and
push
adc
sub
stos
enter
dec
mov
mov
push
in
xchg
lods
cmp
xlat
mov
sti
into
inc
mov
pop
mov
push
dec
mov
sub
fcoms
enter
leave
je
cwtl
jl
xor
jg
push
sbb
jle
xchg
js
pop
inc
jno
and
jbe
mov
pop
and
xor
jb
jns
std
jo
in
hlt
add
xchg
negl
decb
push
pop
xchg
ficoms
nop
sar
iret
nop
loope
in
lods
enter
ljmp
mov
fsubs
clc
or
in
jge
and
fdivrs
jbe
ficoms
jg
pop
ljmp
leave
xchg
jge
mov
xlat
or
pushf
loopne
cmpsl
dec
add
push
mov
pop
and
cmp
inc
sub
add
das
cli
push
loop
xchg
dec
flds
jmp
inc
movsb
loop
push
mov
pop
and
add
sub
jo
loope
cmp
repnz
jmp
enter
add
hlt
scas
in
enter
push
mov
repnz
pop
clc
push
adc
add
loopne
pop
pop
and
fsubp
push
push
mov
dec
cmp
pusha
mov
xchg
cmp
call
call
and
dec
cld
call
nop
incl
fwait
cmp
jmp
enter
outsl
or
cld
and
cli
test
imul
aas
lock
sbb
das
sub
das
push
scas
adc
out
in
mov
mov
adc
sub
xor
jne
mov
jnp
jns
push
hlt
ljmp
mov
push
lret
sub
dec
repnz
jmp
pop
test
sub
daa
stc
push
or
pushl
jg
in
mov
push
cld
or
pop
in
das
and
pop
in
aas
hlt
jmp
dec
mov
push
repnz
pop
ficomps
lock
dec
mov
and
jle
ja
sahf
das
mov
cmpsl
cmp
fistpll
cmpsl
mov
adc
and
stos
idivl
mov
lods
int
pop
jo
push
seto
ljmp
scas
test
add
clc
loope
out
clc
lock
mov
xchg
decb
call
add
push
mov
popf
aam
push
lret
pop
aaa
sub
jbe
jo
or
clc
mov
repnz
in
jle
adc
and
jmp
inc
stc
add
mov
enter
test
mov
sbb
fistpll
mov
sarb
repnz
jo
out
jg
and
adc
or
call
mov
mov
js
mov
push
adc
test
or
insb
mov
std
xor
adc
jge
push
stc
add
adc
mov
loopne
rolb
int
pop
les
test
mov
cmp
in
mov
sar
into
cwtl
scas
adc
out
sub
mov
pushf
mov
mov
dec
or
inc
mov
ja
xor
int3
out
popf
js
inc
lock
add
pop
in
je
push
fstpl
pop
in
sub
push
jns
fcompl
lcall
fdiv
pop
nop
push
mov
rcrb
jo
or
xlat
pop
movsl
push
out
repnz
dec
mov
bound
loope
or
shrb
nop
mov
inc
push
loope
out
xchg
clc
pop
lods
xlat
pop
and
or
mov
inc
add
and
cmc
paddw
inc
out
xchg
lods
pusha
std
push
inc
stos
test
out
lods
push
sti
test
dec
mull
scas
lret
ficoml
mov
cmpsl
hlt
fcomp
movsl
push
add
aam
ja
call
and
cmc
nop
fwait
out
dec
adc
das
jl
sub
lahf
nop
repnz
mov
rclb
inc
adc
mov
cmp
sti
enter
pminub
add
aad
sbb
je
dec
loope
fiadds
mov
hlt
repz
or
cld
add
aad
mov
push
inc
adc
xchg
clc
cld
push
push
inc
nop
sub
test
adc
and
cli
jg
sbbb
nop
mov
dec
add
sbb
or
push
xchg
fneni(8087
fists
mov
xchg
mov
mov
leave
out
lahf
or
int3
test
mulb
and
mov
out
nop
in
mov
pusha
mov
mov
call
lock
xchg
mov
decb
push
shlb
shlb
hlt
inc
aad
cld
rorb
lds
jmp
push
stos
xor
cmp
test
mov
xchg
nop
cli
xlat
dec
mov
cmp
mov
out
mov
sti
dec
jmp
cmp
and
mov
fucom
loopne
dec
sub
out
enter
gs
mov
mov
mov
fdivrs
xchg
cmp
mov
xchg
cmp
das
loope
push
cld
xchg
int
jp
pop
cmp
sub
sub
xchg
insl
or
jns
clc
mov
and
mov
pop
in
loopne
cli
jg
shrb
out
cs
cmp
push
sub
or
jge
xor
or
dec
push
das
out
mov
and
fsubl
pushf
or
jmp
jle
pop
jns
pxor
push
scas
std
jg
push
scas
xchg
mov
out
out
stc
ds
jg
in
testl
mov
hlt
cmp
nop
sarb
dec
cmc
or
movsl
sahf
sub
mov
push
xor
mov
or
pop
hlt
sbb
dec
cmp
sbb
clc
lret
enter
cwtl
fistps
push
adc
out
mov
out
repz
adc
sub
inc
jmp
in
outsl
outsl
loopne
out
lret
sub
xor
mov
mov
hlt
mov
inc
xor
inc
pop
lahf
inc
sbb
add
leave
aam
hlt
and
pop
ret
pop
mov
pop
popf
pop
pop
nop
daa
lahf
nop
jmp
xor
pop
jp
xchg
nop
clc
or
add
jns
push
hlt
lret
pusha
test
stc
aaa
test
clc
in
or
int
in
cs
sub
mov
xchg
and
cmp
fwait
lock
push
nop
mov
hlt
loop
test
repnz
pop
xlat
mov
pop
in
sub
lret
pusha
test
push
outsb
pop
mov
nop
lods
cmp
scas
fwait
js
test
sub
xchg
mov
test
das
jmp
and
or
daa
dec
sbb
adcb
and
dec
push
ds
loop
jne
clc
bnd
lock
out
add
inc
sti
and
mov
jle
clc
hlt
mov
dec
xor
out
dec
scas
sahf
lock
lcall
sub
jns
push
hlt
ljmp
stc
sub
mov
in
mov
dec
cli
jle
dec
ljmp
enter
sub
or
push
xchg
or
cmp
xor
out
push
clc
jmp
sti
aas
call
andb
pusha
jp
dec
jne
mov
jne
xchg
sub
sub
jge
jo
xchg
sub
nop
repnz
jbe
xlat
shlb
in
add
dec
dec
mov
xchg
or
push
xchg
mov
dec
mov
push
shl
das
shll
ficomps
ja
or
add
imul
scas
hlt
mov
lods
lock
mov
adc
jmp
sub
hlt
ficomps
mov
dec
dec
fidivs
or
dec
call
nop
jle
aaa
push
pop
adc
pop
or
or
jo
xchg
sbb
adc
or
outsl
push
jmp
fcompl
daa
fisttpl
pop
pop
sub
jne
xlat
out
rorl
jnp
cwtl
mov
dec
fwait
pop
repnz
test
sar
inc
scas
mov
mov
lock
sub
jge
shrb
daa
cmp
imul
sub
addr16
dec
in
pop
inc
mov
add
lock
jg
leave
mov
mov
push
and
push
pop
and
mov
adc
imul
ja
push
call
cwtl
push
enter
or
in
mov
adc
inc
pop
lock
adc
push
mov
xchg
sar
cmp
mov
incl
call
jmp
int
test
and
push
mov
push
mov
rorl
movl
mov
sbb
movsb
lret
lock
xchg
xor
xchg
call
or
out
out
in
or
pop
repz
or
imul
sar
subb
call
test
sub
inc
adc
sub
in
lock
call
sub
jmp
loopne
add
mov
divl
scas
loope
jl
cmpb
jge
cmp
sarb
add
call
pop
ljmp
std
aaa
add
jnp
push
pushf
fwait
and
call
fdivr
sarl
fucomi
je
sub
adc
shl
cmp
jae
cli
xchg
iret
dec
icebp
or
das
stc
inc
jmp
lahf
aam
push
inc
dec
scas
adc
mov
in
sub
sar
cmp
adc
stos
ds
mov
mov
jb
in
push
movsl
aad
cmp
mov
in
bound
jo
pop
mov
inc
adc
imul
std
mov
nop
test
lea
push
hlt
mov
lock
sbb
add
mov
sarb
xor
xchg
cmpsb
xor
xor
js
or
sub
mov
inc
xor
lock
mov
dec
add
jmp
sahf
push
sbb
mov
xchg
and
or
adc
and
lahf
icebp
sarb
jmp
sub
bnd
loopne
fs
push
push
loopne
movsl
nop
jge
dec
xlat
sub
aad
xchg
inc
setp
sbbb
cmp
fwait
inc
fists
js
imul
cmp
test
stc
push
ja
jl
ja
push
pxor
scas
test
add
loopne
jne
fwait
inc
jge
push
mov
hlt
and
add
jmp
cmp
mov
lock
or
insb
cmp
push
sbb
es
clc
cmc
scas
aas
pusha
lds
mov
in
cmp
aam
mov
push
xchg
daa
std
das
sub
and
mov
jmp
jge
pop
adc
adc
push
dec
adc
jmp
sub
xchg
shll
add
jmp
call
scas
les
mov
xchg
scas
sub
lret
inc
and
or
jmp
pop
pop
and
push
mov
inc
nop
pop
or
and
pop
aam
repz
pop
mov
pop
add
xorl
and
mov
cmpb
lods
cmp
xlat
lods
xlat
sbb
jp
shlb
push
add
lods
dec
pop
shlb
mov
jmp
mov
shr
adc
dec
and
sar
cld
enter
jmp
pop
jb
inc
adc
in
cmp
cmp
call
jmp
jg
out
jmp
ja
sbb
jl
enter
mov
push
mov
push
repnz
icebp
mov
loopne
or
jmp
cmc
pop
jne
ds
test
scas
cmp
ds
test
ljmp
or
adc
out
aas
sub
lahf
cwtl
mov
hlt
out
outsb
cmp
ja
xor
mov
nop
pop
aad
jnp
xchg
fsubr
es
sar
and
outsl
inc
xchg
dec
loop
sbb
lock
jg
clc
testl
or
scas
and
adc
lods
sub
test
call
repnz
clc
jne
push
in
cmp
or
and
scas
jne
adc
pop
pop
dec
jns
push
hlt
ljmp
stos
sub
mov
jne
push
pop
pop
pop
ljmp
int
jge
mov
or
lahf
call
dec
fcoml
jbe
aas
push
mov
shr
cmp
bound
mov
ljmp
out
test
inc
ljmp
pop
jns
xlat
lock
cwtl
aas
out
adc
lret
cs
loop
loope
ljmp
pop
inc
es
mov
rcll
call
stos
dec
mov
clc
scas
mov
aas
jns
or
stc
cs
movsb
out
negb
push
xor
jns
pop
jp
lock
lret
dec
pop
xlat
mov
pop
in
jle
lret
pusha
test
inc
outsb
loope
ljmp
xchg
loop
ljmp
xchg
mov
mov
push
cmp
xchg
jmp
clc
mov
repnz
jns
testl
rcll
clc
std
adc
std
add
xchg
loop
mov
dec
jecxz
mov
sub
nop
cli
jge
fdivr
pop
add
scas
adc
js
shr
xchg
pop
aad
add
push
and
jp
sub
dec
pop
mov
fsubrs
insb
test
or
idivb
inc
es
pop
lods
jl
pop
pushf
test
sub
pop
jo
push
sub
lock
jmp
push
test
push
pop
mov
shr
out
mov
adc
jmp
pusha
jbe
daa
subb
mov
push
pop
cmpsl
dec
add
cmpl
repnz
in
sub
pop
outsl
shlb
xchg
xchg
std
xchg
fdiv
dec
ret
test
lods
mov
jns
fdivrs
pop
enter
sub
leave
ja
mov
push
xchg
cmp
notb
stc
sub
in
jle
test
les
jmp
lcall
mov
jnp
mov
mov
sar
loop
mov
in
std
inc
stos
addb
add
pop
inc
std
leave
jns
pop
movsl
cmc
sbb
leave
cmp
pop
daa
insl
push
jno
aad
hlt
sub
das
aas
sub
cs
stos
dec
lock
bound
aas
clc
pop
mov
mov
mov
push
dec
lahf
pop
leave
sbb
jb
push
call
pop
mov
jmp
cmp
inc
pop
pop
pusha
fucomip
std
mov
dec
inc
js
xchg
xor
inc
pop
stos
xlat
std
cwtl
scas
mov
imul
mov
cmp
jg
cwtl
scas
daa
jae
jo
lret
aad
fdivrs
dec
in
cmp
add
or
sub
mov
cmp
mov
jle
jmp
out
pop
or
cmp
inc
and
jmp
jne
ja
adc
adc
mov
jmp
xchg
out
icebp
out
xor
xchg
scas
lret
dec
lcall
les
stc
enter
sbb
les
and
idivb
jl
jle
dec
icebp
hlt
or
lock
in
std
cmp
jp
clc
mov
xor
das
lods
push
xchg
sub
std
in
enter
movsl
dec
inc
test
frstor
dec
lds
aas
nop
pop
sti
push
dec
aam
sub
loope
aaa
and
mov
ja
sub
mov
inc
add
and
clc
fisubs
cmp
push
dec
or
cld
adc
and
fsts
and
pop
mov
mov
movsb
inc
scas
enter
pop
jle
or
or
and
push
imul
es
pop
mov
fwait
ret
mov
mov
mov
pop
sbb
paddw
lock
jb
pusha
pop
xchg
gs
dec
leave
cmp
push
and
sbb
dec
jo
movsl
add
push
hlt
stos
mov
testl
xor
cld
sub
inc
and
inc
add
sti
enter
cmp
add
repnz
out
and
inc
inc
mov
add
stc
push
dec
nop
ljmp
or
mov
scas
insl
add
push
jnp
mov
pop
mov
add
clc
or
cld
mov
pop
cld
mov
dec
pop
pop
cmp
mov
push
in
icebp
es
fdiv
push
xchg
mov
cli
sub
les
adc
sarl
pop
pop
aam
push
mov
or
dec
and
pop
in
outsl
and
inc
gs
enter
jl
jmp
outsb
pop
in
sub
jb
jg
test
inc
mov
mov
jmp
ficoms
in
scas
out
lods
cmp
adc
dec
shll
and
dec
adc
adc
stos
mov
in
ja
loopne
pop
inc
out
scas
icebp
inc
push
or
sub
push
or
lcall
nop
stc
sub
mov
ficoms
add
adc
mov
pop
pop
jmp
in
pop
sub
inc
fdivs
pmovmskb
cwtl
stos
xchg
and
shr
loop
mov
pop
xor
ret
jne
pusha
popf
stc
cmp
add
mov
in
pop
xchg
aad
xor
testl
jg
ret
mov
inc
sub
in
hlt
dec
shr
pop
out
cld
pop
and
pop
pop
in
popf
pop
xchg
or
dec
jo
rclb
sbb
xlat
fld1
push
adc
mov
ds
adc
aaa
arpl
mov
cwtl
scas
dec
test
sub
pop
nop
and
jns
mov
fdivl
or
les
in
jle
jo
and
ret
test
jle
dec
loope
fmuls
sbb
inc
adc
lret
push
cmp
mov
xchg
and
inc
imul
jne
sbbb
jmp
enter
enter
push
adc
and
ficoms
and
lret
enter
sub
jl
push
ret
push
sub
adc
test
ret
pop
adc
out
cs
jne
ret
scas
mov
fdivs
add
lock
stos
dec
sub
jmp
enter
jmp
xor
pusha
bnd
xorb
pop
mov
jne
cmp
push
pop
jns
sbb
scas
lret
sarb
jp
mov
aaa
and
xchg
dec
call
and
xor
repnz
cmpsl
or
add
inc
mov
lds
jl
ficoms
test
dec
push
dec
push
mov
dec
dec
hlt
mov
push
nop
cmc
lret
jb
mov
in
sub
leave
sub
sbb
push
in
xchg
cmc
cmp
dec
mov
pop
inc
in
mov
mov
repnz
mov
movsl
pop
pop
js
xchg
sub
sub
inc
inc
loop
or
cli
aas
dec
and
push
jne
hlt
ja
adc
hlt
push
cli
xor
repnz
xor
sub
pop
mov
scas
and
ficomps
outsl
popa
mov
negb
inc
clc
aad
clc
scas
enter
fcom
inc
lock
jg
ja
call
pop
stos
and
jo
inc
add
in
das
in
push
enter
lret
cltd
xchg
lods
clc
pop
cmp
nop
leave
mov
fldcw
call
or
loop
mov
test
add
clc
lods
decb
pusha
jp
shrb
shr
dec
scas
xchg
cmp
sub
stc
rorl
test
lret
cmp
and
push
fidivrs
lock
test
inc
push
outsb
dec
and
faddl
mov
pop
fwait
inc
pop
cmp
je
jmp
pusha
push
adc
dec
stos
sub
dec
iret
pop
xchg
test
into
pop
mov
fwait
clc
vpaddsb
add
movsl
dec
jbe
icebp
mov
gs
jle
pop
mov
in
lock
js
mov
sar
mov
mov
loope
pop
dec
clc
rcrb
repnz
jns
sbb
pop
mov
sub
jecxz
cmp
lods
or
mov
loope
in
or
inc
movsl
dec
jbe
dec
mov
jo
in
sub
fcomps
jns
pop
mov
push
outsl
aas
jns
sbb
pop
mov
insl
and
repz
dec
sub
repnz
lret
jle
test
dec
mov
int
or
std
or
add
fucomip
xchg
add
pop
mov
lahf
or
cmc
xor
test
daa
mov
xchg
xchg
mov
movsl
ja
and
dec
clc
in
mov
jmp
daa
inc
incb
cmc
scas
outsl
test
cwtl
mov
movsl
pop
mov
in
fildl
stos
repnz
sub
test
movsl
push
test
ficoms
cmpsl
push
or
dec
scas
test
adc
test
mov
rorb
push
mov
nop
loope
cmp
adc
mov
std
jp
and
add
scas
sub
cmp
fdiv
mov
mov
inc
inc
nop
fdivrl
push
mov
sub
idivl
xlat
xchg
rcr
leave
inc
mov
jle
dec
mov
jp
mov
inc
and
out
enter
lret
out
dec
mov
shrb
pop
or
and
mov
jmp
sbb
mov
cmp
dec
sarl
jne
mov
pop
dec
or
loope
scas
lret
pop
mov
jle
pusha
mov
jnp
lret
add
jl
fs
enter
inc
mov
nop
mov
stc
aam
cld
rolb
cmp
test
push
fisttps
enter
jmp
inc
jo
rcr
add
add
sub
sahf
add
add
enter
je
scas
and
push
jns
or
or
sbb
nop
es
pop
mov
push
enter
adc
out
sti
mov
ljmp
cmp
in
outsb
cld
mov
xchg
dec
subb
loop
jno
mull
add
push
dec
ja
pop
ret
sbb
dec
out
push
jbe
push
shrl
jnp
call
mov
ja
aam
jg
in
dec
test
imul
dec
mov
pusha
pop
pop
or
and
cmpsb
cwtl
mov
in
nop
jmp
ds
decb
lret
and
out
stc
cmp
sub
lock
dec
mov
add
das
std
mov
nop
jb
xor
jo
and
stos
outsb
adc
sti
lcall
xchg
stos
sahf
xor
jp
or
hlt
cmpsl
shr
test
std
jg
lods
outsb
test
xchg
out
aas
jo
out
lahf
fmulp
aad
pop
incb
inc
ffree
sbb
push
nop
push
hlt
cmp
inc
scas
bound
cmp
pop
lea
inc
add
enter
clc
stc
dec
maxps
cmpsl
push
lds
sub
test
mov
sub
mov
jl
and
test
xchg
nop
call
mov
mov
lock
dec
or
xor
push
add
cmpsb
subb
cld
pop
push
rcl
inc
lahf
subb
fcmovbe
enter
scas
icebp
cmpb
sbb
xchg
lcall
fisttpl
pop
pop
add
cmpsl
test
outsl
cld
adc
mov
nop
movsl
jge
enter
hlt
mov
lock
jo
sub
mov
out
add
pop
lds
cmp
dec
dec
lahf
mov
sub
pop
lock
lods
aas
stc
mov
stc
mov
cmc
stos
loop
scas
adc
iret
mov
and
jmp
int
repnz
loopne
mov
test
push
sub
xchg
lock
aad
sarb
and
sarb
xchg
das
cmp
jnp
fdivrs
in
or
fisubrs
test
or
or
adc
and
cmc
sti
cmp
stos
sti
mov
xchg
cs
xchg
out
pop
lret
notb
xchg
js
fs
and
xlat
mov
pop
adc
mov
xlat
movsl
jmp
shl
pop
or
pop
es
fidivs
sub
lods
pushf
add
sbb
int3
pop
adc
add
jo
out
xchg
enter
jne
jge
push
cli
push
popf
xor
inc
cmp
dec
mov
cmp
sti
bound
cmp
jge
push
mov
jo
push
flds
jp
cwtl
jns
js
stos
aas
xchg
sub
dec
sub
inc
inc
sarb
mov
mov
mov
inc
or
sbb
shll
pop
mov
push
enter
adc
pop
inc
and
ficomps
mov
jl
cmc
leave
xchg
sbb
pop
std
xor
push
adc
mov
scas
pop
pusha
jmp
test
sub
mov
push
adc
nop
push
scas
int3
shr
cmp
sub
jnp
add
cmp
sbb
and
incb
fcomps
call
repnz
adc
or
aaa
lea
rcl
sub
leave
adc
mov
lret
sbb
jns
cmp
xchg
cmp
sti
mov
out
fdivrl
jle
push
loope
clc
or
lds
out
mov
ljmp
enter
sbb
or
mov
jle
jg
xchg
pop
cli
divl
fildll
push
add
mov
xchg
mov
cmpsl
sti
fcoms
push
bsf
xchg
pop
mov
rcr
adc
pop
xchg
jae
jns
push
hlt
ljmp
repnz
fnsave
pop
xlat
mov
xlat
fld
xlat
push
cmc
enter
movsl
lahf
loopne
iret
enter
or
leave
ja
cwtl
cld
lahf
adc
push
mov
outsb
pop
dec
andl
jmp
out
scas
ficomps
jmp
mov
out
jle
in
lret
cmp
push
and
out
jg
adc
push
scas
mov
out
and
adc
mov
pusha
sub
jo
out
jle
adc
lret
mov
in
loop
clc
sub
shlb
jns
xchg
ret
xor
scas
loop
jne
inc
push
pop
hlt
mov
hlt
dec
fcomp
cwtl
out
and
std
jmp
sub
mov
inc
mov
pop
lods
icebp
push
fucom
cmpl
cmp
hlt
in
ds
out
mov
jg
cmp
cld
mov
pop
in
xor
pop
and
pop
xchg
lock
sbb
sub
fmuls
les
mov
movsb
jmp
mov
je
push
jmp
enter
jns
dec
lock
lret
mov
mov
fcmovnu
scas
jo
add
repz
dec
push
add
xchg
in
call
std
sub
mov
or
out
lcall
dec
mov
nop
add
shlb
sbb
or
cmp
adc
adc
jl
xlat
imul
out
in
cmpsl
std
popf
loopne
sub
add
and
gs
jle
xchg
adc
mov
aad
pusha
negb
or
sub
jo
loope
out
sub
cmpsb
imul
int
push
xor
loopne
sub
jp
xor
inc
daa
jnp
jg
sbb
int3
push
mov
fiadds
mov
sbbb
jg
test
pop
and
add
pop
cmp
lock
call
cli
dec
lcall
add
pop
mov
addb
push
js
leave
pop
icebp
call
cmp
fstl
inc
test
je
fildll
ljmp
cli
aad
mov
push
pop
pop
push
je
xor
pop
lods
jbe
aad
sbb
roll
cmc
movsl
je
xlat
nop
xor
std
lds
pusha
cmpsb
xchg
pop
mov
xlat
sub
add
xlat
jno
sbb
mov
push
lock
add
gs
lods
enter
jae
pop
les
jnp
or
mov
and
xlat
iret
or
nop
gs
cmp
call
jne
cmp
lock
nop
lods
xor
xchg
mov
pusha
mov
shrb
mov
push
in
ds
xlat
or
cmp
out
dec
lock
call
pop
ret
adc
test
sub
sbb
nop
mov
shl
push
hlt
in
mov
lock
mov
mov
add
popf
ja
adc
and
fcompl
sub
scas
iret
jo
mov
call
ds
mov
nop
jne
dec
shl
js
adc
sti
enter
fstpl
std
icebp
sbb
loopne
mov
mull
fdivrl
scas
jg
in
jg
xor
mov
loopne
pop
xchg
and
outsb
test
leave
xchg
jno
pop
icebp
cld
es
out
lret
loop
mov
scas
call
ret
aam
jg
call
dec
nop
cmc
mov
scas
sbb
insl
and
paddw
imul
repnz
hlt
cwtl
xlat
pop
mov
jl
stos
sarl
shrl
call
enter
lret
pop
out
test
xchg
mov
repnz
in
daa
xchg
js
adc
jmp
add
mov
ret
xchg
dec
push
in
shrb
std
stos
imul
lcall
clc
nop
nop
pop
call
test
aam
lcall
clc
push
ljmp
sub
icebp
nop
sahf
dec
test
icebp
sti
mov
stc
data16
ret
xor
or
icebp
xchg
cmp
pop
fcoms
decl
into
jo
xlat
dec
clc
clc
sub
in
pusha
mov
rcr
mov
xor
jp
sarl
jb
adc
ja
fdiv
ds
mov
and
sti
sub
cmp
xchg
mov
mov
out
or
inc
dec
hlt
stos
in
shrb
and
cld
push
icebp
or
enter
in
push
scas
adc
lods
lock
mov
aad
test
cld
jne
imul
ja
add
pop
call
movsl
jne
jo
sbb
test
push
push
lods
add
mov
sti
popf
jg
loopne
jns
push
orb
loop
mov
adc
mov
mov
sub
xchg
stos
lret
mov
jp
and
ficoms
rcr
mov
repnz
sahf
cltd
mov
popf
push
mov
or
repnz
inc
mov
inc
add
jmp
popf
sar
jge
in
jle
jae
jne
mov
bound
or
std
inc
mov
pop
in
cmpsl
jbe
push
clc
jl
xchg
xlat
pop
and
push
ret
test
mov
inc
test
cmp
jmp
lret
pop
mov
loopne
movsb
adc
mov
mov
mov
inc
cmp
adc
mov
sub
push
jmp
aaa
nop
das
aam
ja
jne
mov
leave
pop
mov
fldcw
nop
pop
sub
cmp
fcoml
pop
cmp
icebp
sbb
sub
test
test
insl
lock
sub
mov
subb
nop
icebp
out
jle
mov
push
jmp
jmp
add
dec
in
mov
loop
bound
rcl
and
imul
in
clc
stc
cs
sub
lea
cmp
push
sub
call
pop
scas
sub
pusha
loop
adc
xor
lcall
pusha
cli
repnz
pusha
pop
lahf
fdivrl
push
or
mov
adc
push
nop
stos
sub
mov
sub
or
sub
bsr
pop
sub
push
push
xor
cmp
dec
mov
mov
fsubrs
xchg
hlt
sub
adc
push
cmc
mov
repnz
push
clc
xchg
mov
mov
push
gs
mov
std
or
movsb
jmp
les
mov
js
aas
outsl
lock
test
or
shl
das
call
call
fstpl
mov
test
out
dec
test
xor
sahf
dec
ljmp
sub
leave
jge
fdivs
enter
cld
icebp
jle
push
repnz
mov
adc
and
pop
pop
sub
dec
in
sarb
cwtl
push
sahf
add
mov
pop
nop
mov
push
or
mov
jne
sbb
pop
sarb
mov
push
jmp
jl
push
mov
add
fistpll
jl
fists
or
push
aad
mov
dec
sbb
jae
push
pop
iret
add
test
mov
aam
and
mov
and
nop
jmp
sub
cmpb
daa
repnz
testb
aaa
lock
adc
mov
subl
cwtl
std
imul
jp
jo
daa
in
pusha
ja
inc
in
add
jo
and
std
xchg
faddl
cmc
sub
aam
push
jmp
mov
mov
dec
repz
mov
adc
in
push
and
jb
sti
nop
cmc
cmpsl
ljmp
cmp
sub
out
test
adc
imul
inc
mov
std
ja
rcl
in
jp
out
clc
push
repnz
ljmp
xchg
clc
js
push
test
pop
repnz
out
notb
cmp
and
imul
lret
insb
jo
test
repnz
stc
call
push
pop
fsubrs
mov
push
and
outsb
aas
dec
sti
push
in
mov
pop
in
sub
adc
ljmp
mov
jmp
fsubp
push
sub
call
enter
lock
pop
cmpsl
andb
repnz
aam
imull
sub
pop
jecxz
scas
sbb
js
pop
xchg
jp
cwtl
xchg
jp
xchg
test
xchg
xchg
xor
scas
lds
mov
and
lahf
nop
jmp
mov
stos
aas
lock
and
adcb
scas
das
faddp
add
mov
loopne
jl
mov
add
clc
adc
rcll
cwtl
in
jle
push
inc
clc
and
int3
scas
fcoml
fsubrs
mov
cmp
notl
in
sbb
push
dec
dec
jg
add
fcompl
inc
insl
pusha
hlt
inc
es
or
gs
dec
loopne
dec
mov
jmp
mov
shl
mov
and
adc
scas
enter
and
addr16
pop
mov
pop
cwtl
jg
sti
clc
push
les
cmp
inc
movsl
fsubrp
test
repnz
fbstp
out
test
scas
xlat
mov
or
mov
sub
repz
adc
mov
mov
push
les
aas
dec
shrb
adc
sub
mov
subb
mov
test
xlat
out
lahf
and
and
xor
lock
and
cmp
xchg
and
mov
or
jge
cmp
push
enter
aam
pop
sub
mov
push
scas
shrl
les
mov
mov
mov
jmp
sbb
cli
repz
mov
loopne
inc
into
and
ljmp
pop
into
cwtl
out
pop
dec
rep
fidivrl
pop
ljmp
push
lret
fbld
call
jge
mov
pop
sti
jg
in
lret
cld
inc
add
jle
mov
cmp
movsb
mov
fdivrl
push
inc
mov
es
in
shr
cmp
ds
push
repnz
call
lahf
inc
ret
push
dec
or
dec
fdivr
adc
dec
pusha
mov
adc
mov
ds
or
jae
ja
push
ds
in
enter
bound
pop
inc
je
insl
push
jp
xlat
cmpsb
pusha
jg
pop
lahf
mov
lock
mov
adc
mov
mov
mov
mov
dec
fildll
pop
cmpsl
mov
xchg
aas
cmc
scas
sub
std
das
push
repnz
sub
mov
sub
xchg
out
mov
mov
mov
pop
clc
sar
or
mov
add
sbb
cltd
lock
daa
mov
js
imul
loopne
int3
mov
adc
mov
push
movsl
mov
test
out
and
ljmp
push
adc
add
mov
inc
and
test
jecxz
enter
xor
ret
push
pop
add
daa
inc
add
dec
dec
mov
mov
jle
pushl
jg
jle
idivl
sti
xor
jp
out
pop
mov
test
push
mov
sub
adc
pop
nop
or
enter
pop
rcr
dec
mov
pushl
jg
xor
cmc
aaa
nop
mov
sbb
sub
mov
push
sub
sbb
fbstp
inc
cmc
repz
pop
addr16
sub
hlt
loopne
cmpsl
je
incl
and
mov
call
mov
jo
or
add
lds
cli
mov
cli
dec
cmp
fs
cmp
notb
xchg
mov
stos
xchg
lcall
mov
mov
stc
push
adc
test
std
cmp
test
es
rcr
sub
lods
or
fdivl
movsl
add
cmp
sbb
shrb
add
and
pop
fcoms
sub
and
fisubrs
repnz
out
and
pop
inc
or
add
or
mov
or
sub
nop
pop
in
sub
hlt
jecxz
out
push
stc
inc
bswap
sub
loopne
sahf
nop
jg
dec
and
mov
push
or
and
pop
in
sub
add
lret
lock
mov
pushl
cld
lods
and
mov
mov
pop
xor
mov
sti
aam
dec
loope
or
call
ficoms
mov
push
push
hlt
mov
cmpsl
cmp
dec
aas
jo
jl
cli
clc
enter
scas
shll
mov
mov
push
lods
pop
add
push
xchg
sub
xlat
ljmp
call
test
stc
push
enter
jge
push
push
imul
and
hlt
and
jecxz
out
pop
test
scas
aad
call
jo
movsb
hlt
mov
xchg
xor
push
nop
fists
mov
clc
out
les
clc
jg
decl
push
lds
pusha
hlt
jmp
mov
sbb
int3
mov
adc
ljmp
ficoms
xor
lods
int3
xchg
cld
mov
decb
fsubs
loope
push
and
jno
and
test
mov
testl
push
adc
rcll
faddl
jno
or
in
xchg
and
cmc
scas
lret
hlt
push
in
jbe
call
mov
das
in
cli
lret
pop
mov
adc
mov
jb
rcll
les
movsl
jmp
clc
hlt
cli
std
sarb
nop
dec
call
call
shll
cld
push
inc
dec
in
and
sub
sub
jne
sbb
or
test
cwtl
cli
aad
mov
in
lds
lds
fbld
add
imul
jge
adc
repnz
dec
xlat
stc
nop
negb
lods
or
add
fists
xlat
nop
cmpsl
sti
enter
adc
dec
in
ss
call
sbb
aam
jg
rorb
push
xchg
mov
loope
xor
jle
aas
mov
jl
lods
mov
adc
lock
mov
in
push
xchg
push
movsl
aas
lock
daa
pop
cmc
jne
enter
or
cli
jne
xor
cmp
lds
jle
nop
dec
aas
and
and
push
push
scas
push
insb
sub
add
stc
cmp
dec
sti
xchg
clc
movsb
jmp
dec
std
jp
pusha
stos
leave
outsl
in
lret
or
sarb
dec
sub
jp
movsl
scas
out
out
xchg
mov
or
pop
lods
ja
inc
bnd
mov
mov
out
nop
mov
mov
pop
inc
sbb
out
in
jecxz
hlt
mov
push
aas
and
je
jne
jnp
jle
xor
test
sub
cs
sbb
xchg
jp
xchg
lods
shrb
add
pusha
mov
pusha
lods
enter
cmp
inc
or
std
sub
xor
push
mov
cmp
inc
sbb
mov
inc
shll
sbb
lret
pusha
test
in
cmpsl
sahf
dec
and
add
push
sub
je
cmc
and
xchg
push
inc
xlat
nop
test
enter
call
push
dec
sbb
in
roll
fmull
ds
cmp
lock
jb
dec
jl
in
jle
cmp
mov
hlt
out
not
in
das
adc
mov
mov
mov
jmp
mov
push
or
daa
xchg
jne
add
push
dec
jo
shrl
push
aas
cltd
rclb
push
pop
or
push
mov
cmc
movsl
aas
xor
fucom
shlb
aas
cmp
nop
js
mov
cmc
outsb
out
jmp
and
mov
mov
lahf
jl
decl
lock
loop
rclb
cmp
mov
sub
inc
fdivr
out
push
mov
pop
addr16
push
mov
mov
aaa
lock
or
rorb
fists
sub
loopne
mov
inc
mov
jp
jns
jno
xor
nop
in
cmp
jne
sub
xchg
bound
cmp
test
mov
imul
jl
dec
sub
ljmp
mov
jg
and
sti
mov
stos
mov
lahf
pop
pop
sbb
out
icebp
sbb
sub
cmovle
mov
stc
test
sub
jg
mov
dec
inc
mov
testb
and
mov
mov
pop
and
and
fsubr
hlt
popf
fldcw
and
rclb
add
sub
inc
aaa
div
cwtl
jg
out
dec
xchg
sub
dec
mov
lds
push
dec
fdivrs
or
mov
adc
mov
pop
xchg
andb
cltd
or
or
push
push
pusha
mov
cwtl
jecxz
out
and
stc
or
clc
hlt
sahf
inc
mov
mov
data16
clc
inc
lea
repz
mov
cmpsb
test
push
pop
hlt
jo
sub
jo
leave
jg
adc
mov
add
les
decl
pop
decb
mov
or
xlat
sub
hlt
sahf
mov
and
clc
call
pop
call
adc
testl
mov
adc
xor
xchg
mov
dec
push
xchg
sub
and
jae
cld
in
aas
xorb
inc
add
jae
pop
pop
adc
loop
mov
loopne
cli
and
adc
ljmp
cmpsb
mov
inc
dec
mov
mov
test
cmp
lock
push
dec
mov
bound
mov
stc
or
sub
jge
es
mov
pop
xchg
fwait
out
mov
fdiv
mov
movsl
or
faddl
enter
inc
mov
sti
pushf
sub
ret
adc
and
pop
nop
fsubrs
mov
out
scas
and
pop
nop
loope
enter
jmp
mov
mov
and
cmc
sub
rclb
scas
lret
rcr
pop
or
out
call
stc
int3
jle,pt
in
cmpb
jle
pop
and
xchg
mov
lret
push
adcb
xchg
out
hlt
dec
lock
out
xchg
mov
sbb
mull
jl
insl
sub
mov
mov
bnd
pop
js
pushl
or
cmp
sub
or
and
adc
repnz
lods
shll
stc
fcomps
stc
jecxz
out
sub
fsubl
xlat
pop
fnstsw
aam
hlt
mov
leave
pop
int
repnz
push
dec
pop
push
or
lcall
bound
pop
jl
jne
jle
fisubs
ficoml
imul
jns
dec
fdivr
dec
cld
xor
stos
sub
xchg
lahf
or
fcoms
cld
aas
hlt
stos
mov
push
ja
lds
in
cmp
dec
ljmp
pop
in
sub
into
pop
cli
shrl
js
aad
les
hlt
mov
dec
jl
pop
inc
xchg
mov
mov
sub
scas
fsubl
pop
xchg
add
jo
inc
or
dec
cmpsl
or
xchg
test
inc
lret
inc
dec
mov
jmp
sbb
shl
popf
pop
in
outsl
shr
loopne
and
ja
jg
add
sub
outsb
movsb
jo
notl
jle
cli
cmp
cmpsl
jl
dec
mov
inc
sbb
jge
sbb
imul
shl
sub
cs
das
dec
mov
pop
mov
std
movsl
lds
lods
pop
pop
mov
stc
mov
iret
adc
nop
daa
jb
fcomps
roll
jge
jecxz
out
dec
decb
test
fxch
cmp
loopne
mov
in
sub
ret
xchg
push
repnz
lahf
fadds
lock
cmovne
jae
jmp
fcoms
mov
in
adc
out
adc
cmp
push
nop
jg
dec
mov
in
imul
sub
js
pop
rcrb
pusha
cmc
js
cmpsb
loope
in
ret
lahf
or
mov
add
pop
clc
aas
jb
mov
test
popf
cmp
mov
dec
jg
fcomp
and
cld
mov
dec
fisttps
lret
sbb
xchg
ja
sub
mov
cmpb
and
push
and
imull
pop
mov
aad
test
dec
jg
pusha
jb
or
nop
cmpsl
paddsw
mov
repnz
push
adc
xchg
jnp
stc
fs
nop
aas
and
cli
cmc
dec
shl
adc
xor
mov
mov
and
inc
hlt
mov
sub
fcoms
dec
sub
xchg
mov
inc
inc
push
movsb
psrld
sub
inc
jle
daa
pusha
cld
test
cmc
test
sbb
cmp
outsl
push
cmp
stos
cmpsl
xchg
pop
addr16
cli
pop
fmuls
aam
cmp
mov
mov
add
ja
jg
call
jne
nop
jge
push
cmp
test
sub
sub
adc
fcmovbe
mov
pop
mov
dec
inc
stos
and
in
out
loopne
shll
hlt
jmp
pop
out
out
sbb
insb
and
clc
fsubl
jno
push
jb
in
jle
push
or
fcmovnb
pop
and
inc
and
sub
cmp
push
jle
xchg
jge
adc
jne
add
adc
xchg
in
sar
mov
lods
dec
jmp
mov
inc
mov
pop
mov
jo
es
daa
xchg
dec
pop
push
jno
push
or
mov
dec
pushf
mov
cltd
pushf
push
pop
jo
movsb
inc
std
inc
cmpsb
aas
pop
cmpsb
pop
scas
pop
mov
sub
cmp
dec
sti
jp
mov
jb
shrl
fbld
rcll
jp
and
lds
jl
mov
dec
repnz
xor
sub
mov
les
sub
test
hlt
std
test
mov
jno
pop
mov
js
fdivrs
or
clc
lods
or
cmp
dec
mov
fs
call
stos
push
hlt
mov
jo
test
mov
aad
je
mov
adc
cmp
and
mov
js
pop
sub
xchg
inc
inc
jb
and
loop
clc
jge
dec
ja
mov
fildll
dec
jmp
lahf
jns
xlat
mov
dec
clc
iret
add
insb
mov
lret
cmp
lods
pop
mov
or
cmp
dec
mov
push
jns
aam
and
mov
mov
in
dec
mov
and
mov
outsl
and
xchg
dec
and
jmp
sub
sar
nop
mov
add
cltd
mov
test
sub
adc
jge
daa
cld
xchg
dec
add
in
cld
test
or
push
xchg
pop
lahf
loopne
out
lret
outsb
mov
decl
pusha
scas
adc
stc
jmp
decl
in
bnd
mov
sub
mov
cs
test
jge
test
dec
out
aas
dec
cmc
xchg
mov
jae
fmull
push
jmp
lret
sub
and
jns
push
hlt
jmp
sub
loope
ds
xlat
mov
sarb
xchg
ljmp
mov
daa
hlt
jg
adcb
mov
jo
dec
cmc
or
lds
stc
out
ljmp
mov
or
cli
xchg
mov
in
mov
dec
push
adc
into
rorb
add
lock
dec
fldt
scas
repz
enter
les
push
mov
jo
jle
aad
mov
dec
stc
jmp
or
cs
loopne
imul
stos
and
mov
frstor
in
jnp
dec
or
cmp
adc
xchg
dec
or
pop
aaa
cmp
daa
pop
fdiv
in
dec
stos
shl
shl
push
fucomp
ja
call
adc
mov
call
test
shrl
mov
test
enter
fdivs
inc
pop
jle
fcoms
pusha
mov
sub
or
mov
int
or
test
nop
out
dec
mov
push
cmp
lock
inc
and
repnz
adc
fwait
adc
jo
dec
out
imul
mov
pushf
stc
cmp
icebp
fdivr
jb
stc
or
daa
dec
movhps
pop
js
lods
enter
imul
test
jbe
fistps
rcr
add
lds
sub
mov
scas
aas
clc
stc
mov
inc
mov
les
add
dec
clc
pop
pop
in
pop
cmpsl
and
sbb
push
mov
mov
and
cwtl
pop
xchg
sbb
cmpb
pop
movsl
fisubrs
jmp
test
scas
jae
cli
push
add
mov
lahf
or
xchg
nop
adc
adc
lret
and
cli
cmpsb
enter
sbb
lret
jo
cli
mov
mov
jle
mov
insl
inc
push
inc
mov
add
sub
jno
pop
and
call
fsubr
dec
inc
jb
fisttpl
clc
jg
xchg
lock
faddl
in
and
mov
mov
sar
or
movsl
dec
fldenv
ss
std
jae
cld
lcall
js
in
pop
mov
xchg
into
add
and
paddb
shr
jnp
repnz
jno
pop
sub
cmp
add
xchg
adc
sub
dec
mov
repnz
push
lret
addr16
stos
push
lock
nop
mov
cli
ja
cmp
fmuls
mov
mov
adc
mov
lret
daa
mov
iret
loopne
fst
lock
sub
sbb
pop
dec
and
mov
std
es
test
movsl
nop
repnz
call
enter
mov
pop
movsl
lahf
or
adc
cwtl
mov
pop
push
incb
scas
shrb
int3
stc
cwtl
pop
adc
dec
scas
enter
enter
adc
rolb
outsb
pusha
in
sub
cs
adc
inc
jnp
xchg
scas
jecxz
out
push
and
xchg
imul
cmp
cmp
jne
dec
dec
hlt
testb
dec
or
jbe
lods
hlt
xchg
pop
dec
push
fs
cmp
cmp
fisubs
rolb
loopne
add
mov
and
imul
mov
and
add
pop
in
lcall
push
push
adc
mov
loop
mov
in
fidivl
xor
imul
scas
inc
fdivrs
dec
lds
mov
pop
shrl
test
dec
cmp
call
lret
push
std
outsl
pusha
mov
jne
aaa
js
xor
and
dec
movsl
fdivrs
xor
mov
cmp
jge
pusha
repnz
clc
dec
push
repz
test
jg
push
pop
push
sub
mov
inc
xor
test
aad
xor
adc
jnp
rcr
scas
xchg
in
or
js
inc
sahf
sub
fdivrs
outsl
rorb
test
push
inc
loope
enter
push
dec
fdivr
sub
fdiv
and
pop
or
fdivl
stc
jo
adc
jnp
lret
push
or
call
stc
in
fdiv
es
pop
or
in
dec
js
inc
loope
lds
scas
mov
cli
pop
cli
push
in
sbb
loopne
and
testl
ds
and
pop
xchg
add
enter
popa
add
jbe
xchg
int3
scas
enter
int3
sub
rolb
sub
fwait
adc
les
and
pop
in
outsb
hlt
cs
inc
pop
stc
sub
ret
loopne
sbb
ret
push
cmp
inc
mov
dec
iret
shl
mov
repnz
fistl
push
or
sub
std
das
std
enter
dec
pop
loopne
cmc
jp
cmpl
lods
repz
cli
and
das
sub
mov
jno
pop
sub
mov
int
fmuls
aam
or
rclb
xor
ret
xchg
nop
leave
hlt
xor
in
mov
mov
nop
or
xchg
pop
inc
loope
mov
inc
ja
dec
call
push
dec
sbb
inc
xchg
dec
or
cli
ja
mov
cld
es
mov
sub
or
cli
cmc
outsl
test
dec
xlat
int
push
ret
dec
mov
jne
inc
test
mov
jl
and
push
jo
sti
mov
and
in
nop
loop
inc
addr16
daa
pop
mov
outsb
jo
inc
adc
cld
shr
sbb
pop
scas
mov
enter
in
mov
mov
cwtl
mov
push
inc
pop
mov
clc
sub
lods
adc
jmp
sarb
test
pusha
jge
push
sbbb
test
clc
aad
push
cmpb
xorb
adc
clc
nop
mov
enter
nop
pop
sbb
lock
push
jnp
mov
ficompl
out
repnz
adc
adc
jb
push
jg
xlat
dec
lock
and
test
push
inc
rcr
addr16
jg
mov
dec
push
pop
insb
mov
mov
fsubrl
clc
mov
mov
nop
inc
fs
test
and
jge
or
hlt
xor
mov
in
ds
loop
pop
nop
jge
leave
hlt
adc
mov
call
mov
push
dec
push
xchg
mov
pop
jecxz
mov
xchg
pop
sti
lods
cmp
pop
out
fmull
sub
xchg
mov
pushf
loopne
ret
adc
adc
lock
nop
pop
and
fwait
mov
cli
pop
xor
sti
enter
add
shl
sti
repnz
scas
sti
das
fimull
mov
enter
jo
loop
sti
adc
in
lock
mov
outsl
push
mov
push
push
sahf
dec
pop
mov
es
jmp
leave
fstl
cld
xchg
ja
fdivs
rorl
cmpb
fiadds
scas
aad
mov
pusha
sti
jno
in
movsb
scas
mov
mov
mov
push
dec
push
xchg
push
insb
sub
push
nop
bnd
add
popf
out
in
mov
imulb
adc
adc
dec
std
xchg
xchg
mov
sub
mov
inc
call
mov
xor
xchg
popf
fsub
pop
sub
sub
push
and
or
and
notl
pop
in
repnz
aad
fiadds
mov
enter
movsl
scas
repnz
jns
sbb
test
out
and
pop
inc
lods
mov
or
mov
stc
tzcnt
lea
or
and
notl
pop
in
repnz
add
or
inc
sarl
pop
adc
push
loop
mov
fmul
xlat
pop
sub
fcmovne
pop
cmp
mov
sti
adc
mov
xchg
lahf
jo
mov
aam
or
iret
xchg
in
sub
fstps
pop
nop
sbb
inc
xor
cmp
cld
testl
cmpsb
pop
lods
dec
mov
mov
in
ds
adc
jle
pop
jmp
inc
adc
enter
xor
mov
cmp
jo
imul
dec
push
and
inc
cld
das
sti
aas
mov
das
scas
aas
sub
scas
mov
std
loop
clc
pop
or
aad
rcr
cmp
pop
dec
gs
stos
jo
shl
jg
scas
mov
fmul
outsl
cmp
dec
ficomps
fidivrs
enter
clc
scas
mov
js
dec
ja
lret
fcmovbe
xchg
enter
mov
xlat
mov
lds
leave
xchg
aas
cwtl
faddl
push
insb
and
jg
daa
cld
std
cmp
shl
jl
loope
leave
jns
push
jl
in
sub
jle
dec
movsl
lock
and
add
mov
outsb
loop
mov
push
orb
mov
pop
add
mov
pop
out
mov
lea
lret
dec
pop
mov
ljmp
subb
data16
inc
push
and
js
mov
scas
xchg
out
push
cmc
cmp
and
es
mov
mov
cmpsb
jae
inc
lods
jl
push
or
mov
xlat
mov
orb
inc
mov
jmp
jo
mov
shr
das
mov
scas
aas
lock
inc
mov
inc
lock
or
leave
cld
mov
imul
leave
pop
gs
jg
sbb
adc
scas
adc
inc
mov
fcomps
pusha
ja
lcall
loope
leave
fisttpll
push
jg
aas
push
addr16
push
stc
cwtl
ljmp
mov
mov
and
push
dec
in
mov
and
subl
xchg
push
and
popf
jg
or
out
call
sti
ljmp
push
ds
adc
bound
stos
enter
clc
fldcw
test
in
sub
sub
jle
pusha
fiadds
mov
repz
pusha
stos
adc
std
mov
sub
mov
in
push
pop
cltd
pusha
hlt
push
push
nop
mov
imul
add
cld
pushf
sub
fsts
push
cmpsl
and
in
dec
push
and
shrl
scas
cmp
push
fdivrs
inc
xchg
mov
je
jne
sub
nop
mov
aaa
std
mov
stos
in
cmp
in
adc
sub
sar
xchg
mov
cmp
cmp
dec
cld
inc
dec
std
loop
mov
pusha
jbe
xor
fsubrs
dec
mov
mov
js
nop
je
push
dec
std
sti
cs
cmc
sub
test
pop
std
mov
imul
fcoms
push
stc
cwtl
or
jge
loop
inc
out
fcoml
mov
stos
mov
xchg
filds
mov
mov
aas
inc
cmc
test
decl
sub
movsl
pop
cli
mov
inc
les
fists
xor
scas
std
jge
call
push
leave
xor
repnz
cmp
xchg
jecxz
jmp
int
in
repnz
rcrb
mov
inc
sub
mov
in
sub
mov
mov
or
out
test
inc
jmp
enter
divl
loope
loop
mov
clc
in
lret
dec
and
cld
cmc
inc
inc
mov
cwtl
cli
jae
and
nop
shrl
icebp
sub
and
adc
scas
leave
std
lahf
inc
jns
pop
mov
add
jge
add
shrl
mov
sti
popl
rcrl
cmp
pop
sbb
jmp
movsb
notl
adc
js
dec
daa
inc
inc
nop
mov
push
lds
lcall
xor
pop
xchg
les
push
enter
test
inc
mov
loop
dec
pop
adc
enter
faddl
inc
pop
mov
stc
arpl
cld
lock
fdivrs
insl
std
jg
sub
ja
sub
cmp
imul
jns
jp
loopne
popf
jbe
jg
and
nop
jne
addr16
in
loope
in
push
push
inc
fsubrs
xchg
ljmp
push
and
mov
pop
and
les
and
lret
shl
and
jno
adc
lcall
rcrb
mov
inc
pop
loop
pop
scas
jne
shl
inc
push
test
fcom
mov
mov
xchg
xlat
lds
jns
push
xchg
xor
lock
xchg
fdivr
push
pop
dec
mov
mov
add
push
aam
inc
or
add
or
daa
int
cli
ja
push
pop
mov
int
jns
es
pop
fcmovnbe
lret
dec
sbb
pusha
ja
mov
insl
and
or
test
movsl
cmpsb
and
js
or
ret
push
in
adc
cli
enter
mov
scas
negb
stc
push
jl
mov
dec
jo
test
aas
js
cmpsb
mov
sbb
hlt
inc
cwtl
mov
test
push
sub
jle
sbb
ret
xlat
dec
nop
jne
mov
hlt
adc
in
sub
and
pop
nop
xor
shrb
stc
nop
stos
in
mov
inc
push
roll
cmp
mov
cld
xchg
push
or
les
shr
cmpsb
push
out
xchg
scas
cmpsl
shl
fdivs
sti
mov
stc
push
dec
and
pop
nop
cmc
out
dec
mov
imulb
movsl
dec
xor
mov
in
nop
xchg
cmpsb
nop
std
or
test
mov
nop
mov
pop
mov
iret
sbbb
inc
dec
xchg
out
fistl
in
adcb
loopne
das
jl
pop
test
push
mov
fcomps
push
ret
adc
fdiv
loop
std
imul
mov
pop
call
and
mov
inc
or
testb
mov
mov
call
push
enter
inc
ja
nop
push
pop
pop
out
shlb
mov
les
mov
stos
dec
mov
add
fcom
in
imul
popf
mov
or
fsubr
daa
cli
jne
cwtl
jle
or
inc
inc
loope
jg
adc
pop
xchg
inc
clc
fstl
fmul
lock
enter
sbb
push
mov
lods
das
clc
sbb
loop
popf
fsubr
jne
or
inc
and
add
rclb
bsf
lea
or
and
notl
pop
in
ds
in
sub
ljmp
dec
aas
jo
xor
jmp
lock
cmp
or
adc
inc
push
cld
daa
mov
enter
int
in
clc
mov
dec
adc
or
xor
repnz
js
adc
sub
incb
mov
loopne
pop
adc
enter
fs
and
mov
pop
inc
outsb
mov
js
fsubrs
xchg
mov
ljmp
add
in
fs
mov
popa
mov
mov
pusha
push
inc
cmp
fadds
cmp
push
out
mov
and
push
push
test
jmp
nop
jmp
stos
out
loope
add
fwait
mov
sub
fdivrs
mov
loop
aaa
jle
xchg
mov
cwtl
outsb
cld
pushf
test
adc
or
mov
pop
mov
lods
or
sbb
mov
and
jmp
mov
movsb
dec
nop
inc
adc
mov
mov
xor
hlt
xchg
push
sbb
popf
insl
mov
cs
int3
out
mov
cld
jo
nop
jnp
ds
je
sbb
and
js
cmc
lea
bsf
inc
hlt
mov
sbb
pop
inc
xor
and
xor
and
pop
inc
cmp
lods
inc
lock
sbb
pop
adc
or
mov
xlat
inc
sub
stos
out
mov
push
fs
mov
mov
pop
push
mov
decl
fsubrs
mov
and
imul
in
and
mull
mov
es
fdivs
and
or
repnz
aad
clc
jb
and
mov
fiadds
mov
pop
enter
push
cmpsb
imul
in
stos
aas
mov
mov
stos
fdivrs
pop
daa
fdivr
pop
cwtl
dec
les
mov
mov
push
inc
rolb
shr
repnz
jle
mov
cs
pop
out
cli
lahf
mov
jno
insb
and
in
xor
jecxz
jbe
lods
idivb
pop
mov
inc
jmp
mov
push
and
dec
cmp
cmp
push
dec
fistps
inc
dec
in
lock
and
nop
mov
or
enter
iret
xor
outsl
pop
shr
mov
in
jecxz
hlt
cli
jmp
loopne
mov
push
cs
ficoms
js
daa
and
scas
pop
lods
pusha
scas
rorl
daa
aaa
jmp
in
call
out
and
inc
adc
inc
enter
mov
push
xchg
fs
adc
mov
sub
lock
mov
ljmp
in
add
out
mov
fwait
xchg
or
fsubs
mov
dec
adc
fsubl
enter
inc
sub
push
sbb
inc
ljmp
test
mov
jl
enter
je
not
in
cmp
adc
out
inc
fsubs
cmp
pop
xor
and
push
cmp
and
push
sbb
mov
adc
inc
dec
scas
and
scas
mov
stc
add
enter
push
shl
cmp
sub
incl
aad
cld
and
mov
jg
jae
push
xchg
push
call
fsubl
les
cs
fiadds
mov
inc
sarb
sar
mov
push
or
loop
jle
mov
and
jns
or
repnz
adc
rolb
or
icebp
add
clc
mov
pushl
or
repnz
adc
nop
test
adc
repnz
repnz
and
mov
xor
repnz
sti
enter
nop
pop
scas
enter
test
repnz
pop
notl
test
and
push
push
cmc
jmp
adc
push
add
push
push
lods
in
psubusb
arpl
push
nop
mov
lret
je
test
push
pop
nop
mov
in
sub
jo
in
sub
mov
cld
movsl
test
mov
and
ficomps
pusha
scas
xlat
test
jmp
int3
notl
push
in
sub
sbb
jns
paddb
out
push
in
jle
and
pop
nop
xchg
scas
fsubl
enter
les
repnz
xor
icebp
adc
in
sbb
mov
dec
out
sub
pusha
push
jmp
add
pop
or
push
les
sub
and
js
add
call
into
nop
mov
inc
mov
sub
dec
lock
sub
xor
cmc
stos
loop
out
inc
fadds
js
es
mov
push
rcrb
shll
test
cwtl
incb
sarb
in
and
into
nop
std
sub
scas
cld
adc
movsb
inc
nop
jecxz
cmp
in
jl
nop
dec
mov
lods
out
push
push
decl
jo
xchg
xor
cmpsl
adc
jl
fs
seto
and
xchg
pop
or
mov
repnz
and
fnstcw
pop
cmp
sub
pop
popf
jge
or
inc
mov
fcoms
dec
in
jle
mov
xchg
push
pop
enter
sub
mov
das
pop
xor
push
pop
jl
push
lret
ret
cld
push
ficomps
xchg
mov
pop
shll
push
xchg
je
shl
or
sub
sub
fildll
fiadds
mov
cmp
and
push
mov
out
and
clc
jg
push
mov
sub
cwtl
mov
pop
sub
repnz
xor
repnz
stos
inc
add
jg
rorb
jl
cli
fisttpll
cli
mov
jecxz
pusha
stc
outsl
divb
sbb
dec
mov
jle
push
dec
gs
jg
dec
mov
ficomps
jg
mov
je
test
sub
xlat
and
je
dec
decl
aas
jo
add
jno
outsb
sub
pop
adc
enter
push
out
pop
mov
hlt
in
sarb
pop
xchg
in
jnp
pop
imul
xchg
adc
and
pop
nop
mov
cmc
jb
pusha
clc
mov
sub
loop
pop
jns
psrld
movsl
mov
jmp
dec
cld
dec
sub
mov
cmp
idivl
push
loop
aaa
nop
inc
out
dec
cmpsb
or
add
cs
adc
mov
push
clc
dec
ljmp
cmp
and
insl
mov
inc
push
cmc
stos
das
push
pop
out
imul
scas
mov
in
dec
rcr
jl
nop
movsb
out
repnz
dec
adc
dec
call
pop
adc
lock
cmp
pop
push
mov
scas
dec
lcall
mov
scas
daa
jne
nop
push
icebp
test
jmp
inc
loope
mov
pushf
movsb
clc
push
movsl
std
mov
in
mov
negb
and
clc
pop
xchg
daa
outsl
rcl
jecxz
in
cmp
movsb
inc
nop
in
subb
cwtl
stos
push
enter
mov
fdivr
cs
sbb
int
pop
imul
cmp
add
jbe
sub
mov
mov
mov
jne
jnp
xchg
filds
sub
aas
sbb
negl
adc
fcom
and
call
jb
clc
aam
fsubr
jg
mov
test
gs
dec
sub
in
mov
enter
enter
idivl
or
and
mov
xchg
mov
cltd
mov
inc
adc
inc
mov
sarb
ret
xchg
push
loop
cmc
xor
pop
test
cwtl
stos
repnz
inc
mov
fdivrl
jo
jns
sbb
sbb
inc
scas
repnz
inc
lods
mov
in
lods
or
add
jle
jo
in
ja
sbb
inc
in
enter
fidivrl
das
cmpsb
mov
loope
and
icebp
in
jmp
or
add
jns
sbb
movsb
sub
or
scas
and
xchg
les
mov
push
stc
test
scas
jae
dec
stos
mov
std
in
jnp
or
js
dec
fistpll
mov
sub
jae
dec
out
mov
push
stc
lods
or
sub
push
nop
adc
les
imulb
sub
jns
or
and
mov
adc
dec
out
loop
xor
sub
ja
adc
mov
sbb
icebp
mov
cld
push
xchg
sbb
push
out
repnz
enter
jo
mov
sbb
push
jnp
sbb
cld
cmp
scas
enter
sbb
cld
rorb
and
nop
sbb
repnz
and
in
jle
push
fiadds
mov
cmp
xlat
nop
sbb
mov
popa
out
push
and
dec
test
fsubrs
sti
cmp
in
mov
je
jp
inc
cli
xchg
jmp
jo
jp
and
aad
aaa
add
cmc
inc
mov
adc
sub
aad
or
enter
adc
icebp
sbb
push
scas
and
pop
inc
insb
stos
enter
sarb
inc
fsubr
outsb
test
pop
call
push
in
clc
and
cmp
leave
daa
mov
fidivrl
test
stos
lcall
inc
mov
dec
test
hlt
out
mov
xlat
test
mov
nop
cmc
scas
enter
daa
sbb
jp
add
push
add
sub
jnp
jne
or
pop
inc
loopne
jb
hlt
mov
lods
dec
dec
mov
mov
imul
dec
fcomps
mov
adc
cltd
jmp
push
cmpsl
pop
gs
fcompl
std
clc
jmp
scas
mov
stos
loope
add
mov
xor
mov
in
lods
js
mov
jge
sar
imul
xor
jne
cmp
xchg
fists
rcrb
loope
leave
mov
sub
daa
sbb
and
add
ljmp
xchg
loopne
lahf
clc
jmp
call
lds
cli
mov
ror
cmovb
lds
scas
pop
push
cli
cmc
in
std
loop
dec
rcll
jg
iret
les
sar
repnz
fidivs
pop
js
leave
fstl
pop
daa
ja
sarb
mov
in
movsl
call
pop
xchg
xor
sbb
mov
inc
push
shrl
inc
scas
sub
dec
inc
add
mov
dec
adc
sub
es
and
or
sub
xchg
stos
loop
mov
sbb
jp
mov
fcom
push
lods
enter
sbb
cmpb
das
dec
mov
mov
jmp
or
test
in
xor
call
decl
sub
cld
push
pushf
loopne
es
frstor
dec
dec
mov
lock
rorl
popf
je
ja
and
inc
push
ds
cs
pop
jmp
lods
push
insb
mov
loope
ret
les
add
sub
sub
cmc
mov
mov
mul
push
movsl
int
fbld
or
fcompl
dec
sub
loope
mov
inc
xor
mov
enter
dec
jp
mov
outsl
rcrb
das
jns
pop
and
hlt
dec
sub
or
cs
inc
adc
sub
cmpsl
nop
leave
xlat
stc
nop
pop
sub
shll
mov
mov
mov
out
loop
mov
cmpsl
or
daa
sbb
shrb
testl
cwtl
mov
cmpsb
push
daa
repnz
push
add
inc
add
ja
pop
test
add
and
rcl
das
outsl
fcoms
pop
mov
sub
scas
cmpsl
xor
call
scas
and
daa
outsl
sarl
adc
mov
fcomp
cltd
lock
dec
push
adc
cmp
mov
cmpsl
or
pop
xchg
rorb
in
sub
mov
daa
ds
adc
push
add
iret
or
adc
mov
mov
push
inc
dec
out
cs
pop
inc
push
hlt
mov
scas
and
xchg
iret
adc
xchg
inc
cwtl
fidivrl
test
cli
aam
jge
push
enter
cmc
adc
imull
jg
mov
pop
inc
imul
xchg
jne
enter
mov
jmp
mov
mov
das
aad
jle
ja
pusha
mov
jl
cmc
les
shlb
and
inc
repnz
inc
push
inc
and
add
bswap
push
aas
and
push
cli
push
dec
sbb
sbb
lret
shrl
enter
or
jmp
mov
xchg
mov
xlat
cmp
aad
dec
xchg
cmp
xchg
jmp
add
mov
mov
insl
nop
jmp
ret
std
movsl
iret
loopne
mov
pop
mov
scas
shl
mov
and
pop
mov
cwtl
pop
popf
pop
or
pop
xor
aad
or
push
mov
mov
nop
ljmp
sub
imul
adc
xor
movsb
xor
jbe
scas
sub
lret
hlt
enter
adc
test
pop
sub
enter
jmp
xor
ds
in
cmp
cmp
test
dec
out
push
loop
inc
mov
loop
clc
pop
adc
call
cs
movsl
into
pop
std
sub
nop
jmp
dec
add
std
adc
mov
loope
or
leave
stc
hlt
call
pop
movsl
int
pop
cmp
outsb
inc
mov
add
fisubl
notb
jge
sbb
cmp
mov
mov
sub
sbb
push
repnz
fildll
add
pop
jp
call
or
mov
cmp
xor
les
outsl
test
mov
movsb
lcall
adc
add
jnp
lods
lock
jmp
jne
xorb
clc
jb
aas
in
jne
pop
scas
dec
outsl
sub
in
push
out
repnz
ficomps
dec
enter
xlat
pop
lock
test
adcb
sub
lock
mov
clc
daa
scas
fmuls
pop
pop
gs
fists
lock
mov
dec
pop
inc
cmp
aas
cmpsl
nop
cmc
adc
mov
clc
loop
mov
xor
or
enter
or
fldl
xchg
ljmp
mov
js
jnp
popf
aas
add
lahf
xchg
dec
std
mov
in
add
dec
loope
push
je
push
jmp
lock
mov
hlt
push
mov
jle
sub
fimuls
ljmp
stc
jg
cwtl
repnz
in
sbb
xor
pop
adc
mov
mov
lods
xor
rcrl
js
push
in
push
and
xor
inc
jmp
xchg
push
or
inc
stos
rcll
test
adc
dec
inc
js
jge
push
jns
dec
fmuls
imul
pop
nop
daa
scas
shr
jg
cmp
mov
push
dec
inc
js
xlat
mov
ljmp
std
js
scas
push
mov
and
clc
call
test
dec
pop
mov
mov
inc
nop
pushf
cmpsb
inc
pop
pop
inc
push
out
and
in
das
scas
and
nop
adc
repnz
jle
shrl
cmpsl
xor
mov
jns
daa
push
pop
mov
movsl
dec
call
jg
clc
jne
or
sub
add
es
aad
push
dec
mov
mov
add
sub
mov
faddp
mull
fdiv
and
pusha
paddq
nop
in
mov
mov
add
mov
mov
test
dec
mov
pop
les
je
pop
or
jo
pop
aam
push
loope
lods
test
shrl
test
icebp
fmuls
fsub
jecxz
clc
pop
mov
dec
lds
inc
sub
into
jno
decb
outsl
xor
pop
and
or
sti
lcall
mov
push
dec
lock
mov
nop
mov
xlat
ljmp
test
mov
sar
nop
out
enter
enter
lret
lock
or
test
test
cwtl
fdivs
pop
hlt
and
pop
xchg
imul
mov
aam
lock
pop
xor
or
sahf
pop
inc
pop
adc
add
mov
or
mov
bound
sbb
and
repnz
adc
jo
arpl
mov
mov
mov
repnz
adc
sub
shlb
jle
sub
sub
roll
rcr
jmp
lahf
pusha
loop
xchg
xchg
nop
lds
outsb
dec
dec
fistpl
xchg
stos
aas
pusha
in
imul
xchg
movsl
nop
out
aas
pop
std
shrb
divl
push
jmp
clc
push
in
outsl
shrb
cmp
aas
lea
addr16
mov
cmp
mov
test
sub
add
aaa
jmp
ja
repnz
enter
dec
sbb
clc
jl
mov
in
lods
pop
mov
lahf
pop
call
divb
dec
add
scas
sbb
inc
and
or
stos
outsl
lock
add
cli
repz
dec
push
jle
daa
lea
jo
pop
add
mov
insb
inc
std
jnp
mov
dec
push
jg
fcoms
rorl
test
adc
add
outsl
loopne
icebp
fidivs
mov
xchg
out
clc
sub
jge
mov
cli
lahf
and
or
xor
mov
lock
js
jp
pusha
pop
mov
outsb
pop
inc
aas
repnz
pop
and
enter
sti
les
dec
cs
mov
out
pop
enter
fildll
enter
hlt
ljmp
cmpsl
ja
js
addr16
test
movsl
dec
xchg
js
jne
js
jmp
and
xor
js
jne
sbb
pop
jns
push
scas
and
push
pusha
movsb
sub
sti
inc
dec
mov
and
adc
lock
pop
pop
nop
jg
jg
push
mov
mov
cmp
out
xlat
mov
add
test
push
mov
mov
push
mov
and
mov
call
aaa
test
pusha
testl
dec
cmp
repnz
sbb
out
into
sub
lret
scas
mov
scas
pop
fwait
clc
std
sub
scas
pop
mov
std
cmp
nop
cli
divl
pop
jmp
dec
cmc
or
cli
leave
pop
out
jno
and
std
dec
mov
out
std
push
enter
iret
mov
mov
dec
cwtl
std
lock
or
add
push
inc
lock
in
js
inc
bound
push
fwait
pusha
hlt
cli
mov
mov
pop
mov
clc
in
pop
jmp
dec
jle
jle
push
and
es
inc
jnp
sub
mov
enter
inc
sarb
shll
mov
roll
and
jb
clc
dec
stos
leave
je
inc
cli
adc
mov
test
cmpsb
add
scas
lret
psubusb
imul
icebp
inc
cmpsb
ret
outsl
daa
mov
dec
lods
jo
dec
cs
lcall
mov
leave
fidivs
xlat
and
testl
or
shr
aad
dec
nop
call
jle
mov
mov
or
cld
xor
sti
rcr
gs
jnp
stc
cmp
xchg
mov
pop
adc
mov
pop
mov
push
adc
mov
add
jne
and
clc
test
shl
shrb
pop
sbb
push
xor
nop
mov
dec
popf
ror
pop
call
js
xchg
and
cli
clc
adc
sar
sahf
xor
mov
out
jle
notl
sar
lahf
shll
sti
lret
xor
inc
hlt
mov
sbb
mov
std
lretw
mov
inc
mov
or
dec
mov
mov
stc
push
mov
and
pop
sub
add
pusha
test
sbb
or
jle
mov
jg
sub
pop
std
and
ljmp
mov
stc
mov
hlt
mov
outsl
cmp
inc
aam
or
cmp
notl
push
popf
enter
xor
adc
movsb
shl
inc
lahf
mov
adc
dec
nop
scas
mov
cmc
jmp
push
add
and
mov
jg
test
push
add
cmc
inc
cmp
in
adc
test
mov
sbb
ds
cmpsb
cmpsb
mov
repnz
enter
xor
cmpsb
aas
or
stos
sub
hlt
scas
loop
mov
enter
das
jno
dec
and
aas
imulb
les
adc
int
stc
das
call
mov
shlb
das
mov
xor
ljmp
pop
mov
dec
nop
std
inc
in
fidivrl
scas
and
decb
push
dec
cmp
inc
call
sub
cmp
mov
repnz
call
add
xor
movsb
lahf
mov
cmpsl
negl
jne
jo
or
lret
push
or
inc
sub
and
popa
push
pop
inc
jg
pop
adc
jmp
adc
pop
adc
fstl
jge
loopne
popf
jl
pop
xchg
xchg
push
mov
xchg
jl
xlat
adc
cmp
aam
stos
test
and
push
fdivr
dec
add
call
adc
scas
jle
mov
clc
mov
dec
mov
pop
dec
clc
fcoml
xor
or
jne
push
in
pop
scas
fsubl
pop
inc
adc
clc
dec
xchg
mov
sub
icebp
test
mov
icebp
repz
cs
cmp
daa
jg
mov
dec
into
mov
nop
loop
push
adc
decl
sti
sub
and
and
bswap
pop
push
imull
popa
jge
stc
clc
jo
loope
mov
pop
in
loopne
mov
ja
les
sub
lret
in
lds
imul
in
and
push
mov
and
rorl
cwtl
inc
popa
loop
xor
push
mov
test
jmp
sbb
es
or
dec
fdiv
mov
and
fsubs
sub
adc
mov
in
dec
push
cs
call
jno
or
hlt
lea
test
js
mov
mov
lahf
pop
inc
dec
fdiv
adc
or
nop
in
out
pop
dec
mov
or
fs
imul
mov
aaa
pusha
icebp
add
mov
pusha
les
sub
or
mov
in
sbb
mov
inc
nop
in
ds
jo
test
ret
in
clc
daa
dec
inc
sub
push
pop
fisttpll
pop
xor
dec
mov
rclb
inc
mov
mov
sub
add
cmp
test
mov
push
lock
fsubl
pop
imul
cld
or
mov
loope
mov
jmp
jns
mov
clc
js
add
jb
in
cs
stos
sub
or
push
and
and
inc
int3
mov
je
enter
fdivrs
mov
or
loopne
jp
fsubl
adc
mov
out
add
jg
dec
pop
add
call
aas
xor
fsubl
pop
ljmp
mov
jb
jns
jo
pop
xchg
pop
cwtl
cmc
mov
or
shrl
lds
mov
mov
repnz
pop
mov
inc
or
test
mov
fadds
hlt
subb
test
pop
adcb
and
clc
stos
test
jecxz
or
cwtl
pop
cmpsl
jae
push
xchg
mov
fildll
and
pop
adc
mov
enter
push
jecxz
lret
lret
jbe
scas
and
xchg
test
iret
shl
insb
and
in
not
mov
in
sub
ficomps
js
or
mov
repnz
mov
cld
or
loopne
cld
aas
jns
or
mov
fsub
push
or
jno
sbb
sbb
and
ret
and
or
lods
dec
pop
aam
inc
or
pop
pop
adc
or
or
lods
and
hlt
mov
or
xor
dec
and
or
sbb
test
mov
pop
inc
xchg
mov
pushf
xor
adc
mov
jle
les
mov
dec
nop
enter
pop
cmp
fmuls
pop
adc
je
lods
loop
or
mov
mov
jmp
adc
in
or
pop
and
in
nop
mov
mov
ret
pop
adc
adc
push
lock
lock
add
cltd
inc
pop
lods
xchg
sarb
inc
xorb
dec
mov
sbb
pop
out
mov
fcom
mov
adc
inc
push
std
sub
out
cld
mov
xor
jae
cmc
mov
push
jo
and
push
loopne
and
or
pop
flds
dec
mov
orl
push
xlat
movsl
gs
or
addr16
pop
movsl
mov
mov
dec
push
icebp
and
cld
pop
inc
dec
mov
push
inc
fs
sub
faddl
mov
lds
push
adcb
loop
sub
inc
jl
adc
jmp
push
icebp
or
and
outsb
mov
mov
mov
mov
sbb
pop
pop
mov
xor
xor
enter
enter
sub
or
lods
je
ficoms
pop
push
out
push
es
sub
icebp
and
pop
mov
pop
cli
daa
mov
and
xchg
xor
stos
loope
or
lods
dec
stos
sub
nop
pop
mov
stos
pop
inc
push
hlt
outsb
dec
or
push
inc
sbb
xor
or
sub
test
or
and
cli
fstpl
inc
scas
ret
or
xor
pop
xchg
in
loopne
jmp
mov
rcrb
push
lahf
loopne
mov
sub
sub
in
iret
mov
xchg
push
or
push
movsl
xlat
lds
fsubrl
js
pop
push
push
jbe
jb
lods
dec
jo
test
or
jg
pop
cmp
sarb
or
lock
test
repnz
cwtl
sub
ljmp
dec
sub
mov
push
xchg
jmp
call
add
and
mov
add
adc
or
dec
sub
or
mov
dec
daa
inc
std
loop,pn
mov
jo
push
mov
xlat
insl
nop
js
ret
mov
or
lock
xor
mov
push
std
ss
push
inc
dec
and
and
pop
popf
jle
pop
sub
cmc
xchg
xchg
and
dec
sub
scas
call
nop
imul
call
pop
and
mov
mov
cwtl
pop
sub
mov
test
or
mov
in
cmp
test
daa
clc
idivl
test
enter
ret
push
ret
jg
push
mov
or
or
lea
inc
jb
addr16
or
shrb
stos
jp
stc
sub
adc
clc
fsubrl
push
jmp
mov
jns
push
hlt
les
in
cmp
addr16
cld
jle
and
dec
jmp
cwtl
call
sub
or
sbb
adc
test
and
and
les
mov
rorl
enter
push
cld
cmp
push
push
dec
lods
pop
mov
adc
mov
js
loopne
in
sub
jno
jmp
push
or
gs
stc
sub
fdivr
and
mov
in
lret
adc
pop
test
adc
clc
in
fiadds
add
inc
pop
scas
dec
sub
int3
clc
inc
xchg
out
push
cmp
shrl
lock
and
jmp
push
mov
in
cmp
jp
and
ficomps
or
dec
or
rclb
shl
push
sub
sarl
add
outsl
xchg
pop
or
or
mov
xchg
out
mov
fdivr
dec
mov
test
scas
cmp
push
clc
negb
inc
es
dec
push
in
mov
dec
or
xchg
mov
pop
popf
sub
fucom
or
daa
fisttpll
addr16
adc
rclb
push
into
sub
nop
ffreep
daa
jg
or
jl
dec
adc
push
jmp
lods
and
add
pop
adc
iret
pop
repnz
movsl
jge
enter
lret
dec
idiv
repnz
cld
lock
ljmp
es
adc
mov
pop
xchg
in
stos
divb
ds
sub
loopne
out
or
mov
xchg
pop
out
push
clc
incb
cli
pop
push
loopne
cmc
rcrl
sbb
push
and
pop
pushf
pusha
mov
pop
mov
pop
jb
gs
jmp
pop
add
in
pusha
pop
push
fdivrs
inc
pop
dec
lahf
mov
pop
jne
pusha
pop
lret
push
mov
pop
xor
xchg
jno
pop
mov
pop
jns
std
daa
repz
js
or
jg
adc
dec
jp
sti
pop
pop
popf
ficoms
enter
cmp
or
and
repz
push
xchg
inc
out
and
push
sbb
push
sar
push
mov
jno
jae
stos
fdivr
stos
repnz
push
lahf
stc
inc
pop
or
inc
add
test
push
and
lock
or
inc
mov
inc
mov
or
mov
in
sub
pusha
lds
imul
mov
or
sub
pop
sub
cs
movsb
mov
mov
clc
pop
pop
or
clc
rclb
les
out
cs
pusha
jns
and
xchg
test
nop
aas
repnz
ja
push
int
pop
cmp
imul
add
cmp
mov
aad
movsb
jnp
mov
stos
mov
in
mov
jmp
clc
nop
mov
mov
jne
and
mov
cmpsl
xor
sbb
xlat
xor
dec
or
andb
mov
imul
test
int3
add
filds
in
aas
dec
jmp
mov
out
iret
inc
icebp
rolb
push
inc
movsl
dec
inc
ret
or
adc
call
lret
stos
out
mov
pusha
mov
or
shr
cwtl
stc
or
mov
cmc
scas
std
mov
or
test
mov
push
push
pop
pop
aad
adc
test
loope,pn
push
in
sub
cmpsl
shr
sbb
add
dec
aaa
pusha
jl
mov
jo
or
push
out
push
pop
dec
push
xchg
push
sar
mov
jo
test
or
jae
cmc
or
inc
nop
pop
inc
adc
mov
sub
mov
cli
cmp
js
and
jle
pop
cwtl
jg
pop
xor
mov
pop
daa
or
pop
mov
jnp
mov
sub
loop
inc
mov
fwait
sbb
cmp
int3
in
or
cmp
and
adc
sub
jle
mov
mov
stc
mov
xchg
ss
mov
leave
mul
fildll
out
enter
arpl
inc
mov
jl
clc
xor
insl
and
xchg
test
scas
and
stc
cmp
enter
int
in
cmp
out
outsl
fsubrs
test
jns
sub
cmp
stos
lret
sub
sub
mov
orl
inc
nop
mov
fxch
fildll
pop
and
xchg
pop
mov
call
pop
in
sub
hlt
adc
loopne
jle
mov
enter
mov
into
or
lock
lret
ja
xor
xchg
dec
or
pop
dec
shrl
js
and
pop
in
fcmovnbe
mov
out
mov
incl
stos
dec
mov
hlt
scas
filds
add
add
pop
or
pop
adc
xlat
mov
pop
jno
mov
pop
or
nop
mov
push
sbb
and
outsl
pusha
dec
or
inc
sbb
scas
push
cmc
jmp
pop
les
or
push
mov
xlat
mov
pop
pop
sub
scas
and
pop
in
lods
enter
int3
scas
mov
dec
or
xchg
scas
push
lock
lea
xchg
in
jnp
xchg
ljmp
xchg
adc
divb
xor
clc
jle
nop
dec
push
mov
je
mov
push
out
adc
shrb
xor
pslld
and
pop
adc
sbb
std
movl
cmp
mov
cmp
scas
mov
push
imul
ja
ljmp
pop
mov
mov
in
dec
cmp
xor
add
enter
jno
pop
stos
clc
rorl
fidivrs
add
out
hlt
xchg
mov
add
mov
xor
push
dec
scas
jne
insl
lock
mov
ljmp
sar
out
mov
sub
mov
mov
popa
pusha
rolb
enter
cld
fcomps
and
add
dec
in
pusha
decl
pusha
pop
push
pop
in
inc
fdivrs
rcr
inc
out
jb
mov
test
pop
or
and
pop
mov
push
pop
or
push
push
les
inc
adc
or
inc
or
cmc
das
pop
pop
jne
jne
dec
cmp
rorb
nop
sub
and
je
movsb
mov
scas
and
jo
push
xchg
pop
lahf
rcl
mov
inc
cld
adc
dec
stc
jnp
jo
pop
in
cwtl
in
bound
stc
outsl
mov
leave
push
outsl
cmp
mov
dec
sub
sti
lcall
sub
pop
inc
xor
les
and
and
stc
xor
xor
dec
fwait
and
and
stos
or
cmp
push
inc
push
out
out
jg
sub
or
mov
add
pop
aas
and
sub
mov
pop
data16
xchg
lret
cmp
fsubrs
jo
cli
inc
or
or
adc
jp
or
repnz
xchg
test
pop
adc
loope
in
push
addr16
movsl
jnp
pop
inc
sarb
std
adc
call
lock
or
mov
in
and
sub
jae
out
xlat
lcall
mov
les
pop
adc
add
jp
xor
lret
daa
add
mov
loop
repnz
and
xchg
shrb
sbb
hlt
lock
out
xchg
mov
cld
repnz
inc
jne
add
in
mov
or
scas
pop
popf
xorb
inc
pop
mov
rdpmc
inc
call
lret
add
inc
shlb
or
or
cli
flds
mov
pmullw
or
les
clc
or
and
cmp
mov
outsb
std
insb
inc
scas
leave
cmp
and
inc
push
in
fwait
and
sub
dec
inc
and
lods
iret
rorb
shrl
out
adc
jp
sub
rcll
jl
loopne
push
add
data16
lret
xor
jbe
fstp
mov
add
xchg
and
mov
inc
bts
jle
test
dec
lret
and
and
cli
xlat
adc
and
mov
aaa
and
imul
and
xchg
add
adc
mov
call
mov
mov
pop
test
sysexit
pop
inc
sbb
mov
and
pop
in
fwait
and
loop
and
xchg
add
add
or
leave
in
pop
and
loopnew
mov
pmaxub
mul
adc
sub
test
adc
clc
adc
adc
and
lds
jle
push
and
repnz
fbld
xor
fiadds
pop
mov
ficomps
in
clc
test
cmp
sbb
jmp
inc
mul
inc
iret
cmp
push
dec
adc
mov
les
push
sbb
std
loop
adc
and
lds
outsb
fwait
and
js
and
xchg
add
clc
in
jl
andb
hlt
jecxz
mov
jl
push
in
push
adc
std
in
sub
adc
jle
dec
sub
loop
dec
and
cmpsl
adc
and
shl
mov
cli
jl
push
in
push
xlat
xchg
adc
repnz
sbb
iret
mov
fdivrl
sti
cmc
jecxz
mov
clc
nop
mov
jmp
and
cmp
stos
std
stc
push
jne
clc
push
sar
rcrl
test
in
mov
mov
adc
mov
enter
and
pop
cli
bswap
sub
test
add
jg
pop
sti
pop
ja
lock
daa
xlat
lahf
xor
jg
clc
jo
dec
movsl
dec
inc
add
jne
sarb
aad
call
dec
fdiv
nop
inc
or
cld
call
push
and
inc
jno
das
call
and
test
sub
xrelease
dec
mov
jmp
ficomps
in
and
leave
in
inc
mov
std
sub
js
pop
inc
adc
sbb
loopne
xchg
adc
jo
adc
xlat
out
sbb
ja
adc
inc
add
push
pop
movsl
lahf
push
in
scas
loop
mov
les
jnp
imul
stos
in
sar
enter
dec
sti
lcall
sbb
and
xchg
daa
imul
sub
pusha
jne
jge
js
jb
cmp
shrl
movsb
push
das
call
push
call
aad
clc
push
stos
xor
dec
aam
in
test
mov
jl
mov
inc
mov
call
in
inc
stos
mov
lds
cmc
les
in
insb
inc
jmp
dec
sub
es
pushf
inc
cmp
cli
lret
mov
lcall
cli
lret
andb
ficoms
ss
leave
push
aas
push
scas
aas
hlt
jmp
stc
sbb
pop
push
cwtl
fucomip
jg
enter
ds
ror
pop
xchg
mov
call
push
xchg
incb
pushl
adc
shl
and
or
adc
cmpb
pop
inc
push
push
dec
jl
dec
adc
fxch
pop
and
aas
outsb
rolb
pop
fcoms
pop
nop
loop
cmp
xor
jne
and
adc
out
les
mov
mov
or
fists
call
fdivr
jnp
fsubrs
add
ficoml
clc
fcompl
cmp
push
sub
movsl
add
cmp
imul
xchg
add
add
push
in
outsl
nop
adc
add
sahf
xchg
inc
add
sti
enter
xchg
scas
repnz
pop
jns
sbb
cwtl
adc
mov
fcompl
jo
adc
fsubrs
add
inc
add
add
jmp
push
pop
in
sub
sub
cli
fnstsw
scas
and
and
jno
stos
lcall
out
pop
stos
sub
in
mov
out
mov
bound
cmc
xchg
add
fbstp
imull
push
xchg
add
inc
adc
ret
out
enter
mov
and
iret
loopne
jne
and
sub
sti
je
push
dec
push
call
add
sti
sarb
add
and
sub
sub
test
jecxz
ss
add
push
lods
fnstenv
mull
lds
les
and
in
mov
loopne
ret
xlat
rcrl
cmc
adc
nop
mov
jle
movsb
fcomip
mov
add
push
add
js
adc
fcoms
xchg
sar
das
mov
pushl
fcomp
daa
fneni(8087
jns
or
sub
nop
jp
cld
lock
repnz
jl
jg
lock
and
mov
adc
out
mov
cmpb
jle
clc
push
cmp
mov
jmp
fsubs
mov
outsl
pusha
sarl
mov
xchg
sar
mov
fbstp
pop
sub
stos
test
or
outsl
js
lds
jle
daa
std
pop
mov
pushf
and
or
or
mov
cli
popl
call
adc
mov
stos
mov
dec
mov
and
fcmovbe
mov
repnz
idiv
adc
nop
jb
rcl
jmp
call
cmp
mov
loop
roll
mull
pop
push
push
out
sbb
adc
loopne
pop
and
mov
cld
rolb
je
in
fsubrl
xlat
cld
loopne
mov
jge
lock
out
sbb
lock
and
mov
pop
or
fnsave
aad
icebp
adc
clc
jl
test
js
movsl
xor
jg
call
push
mov
push
mov
add
mov
aas
pop
mov
mov
jb
pop
cwtl
pop
and
ret
cmp
jg
jge
test
test
ds
nop
cld
sub
xchg
cmp
daa
insl
inc
mov
jp
and
stos
push
cmovs
ljmp
sub
inc
pop
dec
nop
test
adc
lock
shr
sub
ja
addr16
pop
cld
clc
push
repnz
push
jmp
inc
mov
fwait
lock
jg
jo
daa
cmp
sbb
mov
test
jmp
pusha
clc
sub
xchg
cmc
pop
mov
in
nop
js
sub
mov
adc
ljmp
test
mov
mov
aaa
clc
nop
cmp
cmc
ljmp
sub
jle
pop
push
cmpsl
xlat
in
jl
or
rcr
movsl
mov
pop
outsl
and
adc
and
jae
rcrb
xchg
call
pop
jmp
mov
lahf
mov
xchg
xchg
lods
add
dec
lret
mov
add
push
dec
loope
or
lret
sub
push
call
mov
pop
sub
call
in
cmp
outsb
push
jbe
mov
call
push
mov
nop
nop
dec
sub
in
cmp
xchg
jg
jo
leave
push
mov
sar
jg
hlt
jmp
test
sbb
sbbb
cmp
popf
repz
jle
nop
aam
adc
xchg
cmpsl
mov
mov
sbb
enter
sbb
and
xchg
stc
in
sub
mov
sub
mov
scas
imul
mov
outsl
pop
hlt
jp
pop
xchg
lods
jg
enter
mov
loop
mov
in
in
pusha
mov
mov
xlat
test
sub
xchg
adc
push
and
decb
mov
je
ja
jge
lock
subb
jno
cs
lock
or
adc
cmpb
jecxz
scas
and
mov
pop
fadd
pop
leave
fstp
rclb
stos
mov
sahf
mov
mov
jge
cmp
mov
clc
xchg
adcb
adc
repz
dec
loop
mov
sahf
rolb
adc
ljmp
adc
shl
sbb
xlat
xchg
pop
cli
dec
rolb
outsb
pop
or
nop
out
out
pop
out
stos
repnz
std
out
push
mov
mov
jmp
cwtl
xchg
out
mov
dec
push
outsb
sub
pushf
test
xchg
pop
jge
rclb
pop
jbe
jg
clc
aad
pop
fimull
pop
xchg
in
enter
adc
pop
repz
pop
js
mov
iret
call
sbb
dec
and
pmovmskb
cmp
cmpsl
mov
movsl
pop
pushf
jle
add
pop
push
mov
sub
pop
pop
lret
pusha
jle
negl
inc
or
push
adc
clc
cmp
int3
jp
cmp
xchg
xor
out
ds
loop
push
rorl
jae
push
and
adc
ret
iret
pusha
jb
je
push
lds
mov
lcall
push
jnp
std
xor
scas
clc
js
shr
repz
scas
cmp
inc
scas
imul
js
test
lods
cmp
or
or
mov
adc
daa
adc
test
xor
inc
dec
loope
xchg
or
rcrb
inc
lock
lods
test
push
fdivr
pushl
jle
mov
sub
rcr
call
test
cmpsb
mov
ficomps
loope
les
out
cmpsl
cwtl
mov
lods
fdivrs
lds
mov
pop
jmp
mov
push
je
cli
jge
push
fildll
clc
je
adc
push
test
sub
arpl
jle
mov
in
mov
imul
xchg
lahf
or
stos
enter
ja
and
jb
mov
shrb
enter
add
cmp
mov
aad
mov
loop
scas
cmc
stos
aas
inc
leave
cld
push
and
mov
cmp
or
stc
imul
hlt
scas
das
call
cld
popf
aas
fcomps
stos
adc
adc
sub
cli
push
sti
loopne
dec
sub
pop
loop
aaa
jmp
mov
in
mov
sub
shll
scas
pop
mov
movsl
mov
mov
and
clc
sar
ds
sub
sub
jae
sar
or
mov
cli
out
jle
icebp
mov
nop
cld
sbb
push
cmpsb
pusha
fisttps
mov
cli
in
pop
adc
pop
cmp
push
mov
mov
xchg
jnp
std
jmp
mov
cmpsl
addr16
cmp
push
mov
pusha
xchg
in
mov
loope
pop
sub
dec
divl
adc
pop
sub
jmp
divb
jmp
rcl
jbe
ja
ljmp
add
mov
mov
mov
jmp
sub
pop
pusha
notl
aam
and
push
out
clc
shrb
mov
subb
or
adc
stc
push
push
hlt
in
and
or
and
push
adc
jge
inc
cmpsl
jbe
push
jle
cli
fs
inc
push
jbe
mov
nop
pop
lods
jl
decb
sti
sub
sbb
lock
icebp
pusha
testl
loope
push
and
cld
lock
fists
loope
adc
xchg
call
jg
cmp
xlat
addr16
push
shl
push
add
mov
adc
out
mov
sub
dec
gs
enter
mov
movsl
or
call
jbe
jmp
or
jmp
sarb
pop
or
scas
adc
daa
dec
test
pop
adc
daa
fdivrs
insl
xor
push
xor
adc
cltd
pusha
jle
sti
nop
push
jmp
call
pop
lds
idivl
movsl
pop
mov
jp
jns
xlat
adc
into
sub
mov
cmp
and
lods
enter
push
fdivrs
ss
cmpsl
jle
aam
in
pushf
mov
ds
mov
dec
adc
and
dec
lock
sub
push
mov
xchg
pop
pop
in
aas
fdiv
test
scas
rorl
adc
adc
jbe
repnz
jns
std
les
loopne
std
cmp
jns
sbb
pop
cmp
fbld
enter
mov
or
movsl
or
xchg
pusha
jmp
insb
mov
ljmp
leave
ja
enter
push
mov
or
and
test
lahf
jne
cwtl
sub
gs
jl
sub
pop
subl
daa
shll
cld
nop
jne
xchg
aam
adc
dec
mov
mov
lds
outsl
sub
fdivr
cltd
pusha
je
sub
ja
scas
enter
push
shlb
fcom
xchg
mov
clc
cmc
sti
jnp
sar
adc
mov
jle
jg
mov
xor
std
in
jl
nop
test
xor
movsb
dec
jmp
inc
mov
inc
nop
movsl
xchg
mov
sarl
pusha
scas
ret
call
addr16
clc
pusha
mov
pop
scas
fistpl
js
xor
fnstcw
pop
adc
enter
repz
nop
into
pusha
in
lock
mov
pop
pop
inc
pushf
mov
scas
mov
push
dec
cmc
xchg
sub
pop
push
mov
mov
lods
pop
mov
dec
push
mov
jg
fstpl
adc
lea
and
mov
mov
enter
mov
add
addr16
push
shlb
fcomp
or
add
inc
sar
push
pop
mov
lahf
mov
lock
cmp
xor
push
push
xor
std
xchg
or
add
mov
in
mov
out
sub
rcll
in
push
mov
adc
push
mov
jne
inc
js
pop
sub
mov
dec
mov
sbb
push
and
das
cmpsl
push
cs
and
out
fidivrs
jecxz
lods
pop
push
dec
dec
fdivr
jp
test
notb
out
sub
dec
inc
add
mov
cmpb
cmpsb
rclb
pop
in
or
mov
mov
test
ficomps
mov
mull
push
jmp
aaa
rolb
hlt
cs
sub
dec
aaa
shrb
cmp
jmp
mov
inc
sub
dec
mov
sub
sbb
jmp
dec
mov
in
repnz
inc
cli
dec
or
fcom
sahf
nop
pop
cld
clc
das
mov
loope
or
in
cwtl
mov
std
nop
mov
stc
dec
xlat
das
fcompl
push
mov
mov
dec
push
imul
sbb
fistpll
mov
mov
sub
sbb
mov
pop
sti
xlat
mov
sbb
add
test
clc
add
and
cmc
in
fsubr
lds
cs
and
cli
pop
jle
aad
sub
nop
mov
lock
inc
cmp
inc
mov
icebp
cmpb
mov
mov
sub
adcb
xlat
scas
jl
jne
xor
repnz
gs
inc
sub
test
repnz
jmp
sub
loopne
loopne
xchg
mov
popf
xchg
and
mov
xor
or
sbb
inc
push
hlt
ljmp
stos
mov
mov
cmp
nop
decb
xor
or
dec
pusha
clc
inc
nop
jmp
xor
pop
inc
push
stos
outsl
cmp
aas
enter
stos
enter
add
outsl
mov
xchg
fidivrs
dec
movsb
pop
sub
or
jg
pop
in
sub
pop
fsubs
bound
testb
lods
mov
nop
outsb
out
dec
mov
xlat
out
outsb
cmp
test
scas
pop
mov
mov
dec
fidivs
outsl
adc
jg
jo
push
push
push
stc
xor
mov
dec
inc
out
test
outsb
and
imul
divl
mov
jmp
inc
je
pop
clc
or
test
push
stos
sub
inc
out
pop
mov
push
cs
lock
movsb
jmp
nop
mov
dec
das
pop
clc
nop
mov
mov
in
pop
mov
rcrb
push
testb
rorb
jle
movsl
ds
mov
jbe
icebp
xchg
push
push
in
mul
scas
sbb
outsb
and
and
mov
scas
cld
loopne
push
mov
testl
negb
aas
loopne
sub
and
sub
mov
inc
fnstsw
xor
cmp
nop
out
mov
js
test
rcr
pop
pop
call
sbb
mov
daa
mov
in
sub
out
outsl
cmp
out
mov
mov
movsl
fdivrs
out
ja
add
in
cld
call
sarb
imul
adc
mov
dec
lret
lock
fdivs
hlt
repnz
stc
daa
pop
leave
lock
jl
lds
cld
adc
fsubl
movsl
div
xlat
mov
inc
nop
pop
inc
sbb
mov
push
mov
push
rcll
loop
adc
jb
jnp
repnz
adc
sub
leave
cmp
push
outsl
and
ficomps
or
lods
sbb
pop
mov
in
rcrl
in
sub
scas
dec
aas
add
xchg
mov
inc
pop
test
ficomps
dec
nop
push
push
aad
test
fyl2xp1
ret
dec
in
das
mov
xchg
in
mov
push
pop
scas
mov
nop
push
in
aas
pop
fucomi
les
mov
imul
sub
pop
clc
ud0
repz
enter
mov
sar
sbb
xlat
jb
mov
or
sbb
push
loop
push
pop
js
popf
popf
mov
aam
pop
inc
cmp
test
mov
sub
mov
enter
shl
sub
icebp
in
dec
dec
movsb
sahf
mov
inc
xchg
hlt
mov
xchg
inc
clc
mov
jno
or
daa
cs
or
jp
inc
mov
cs
repnz
jo
cld
xchg
mov
push
bound
lock
pop
mov
xor
xchg
push
adc
jl
loopne
iret
sbb
imul
in
and
shr
mov
push
mov
cmp
mov
sarb
dec
loop
repnz
in
je
push
test
das
lock
or
and
inc
shr
sub
mov
sub
test
ljmp
shrb
mov
adc
and
mov
pop
mov
mov
mov
lods
push
xor
pop
xlat
in
frstor
sub
mov
call
sub
dec
pop
and
aam
mov
fdivr
and
push
inc
xor
add
shr
out
sub
movsb
scas
sub
sahf
rorb
fs
cmp
and
mov
mov
cmp
nop
scas
mov
and
sbb
sub
push
les
and
pop
inc
or
and
nop
dec
scas
enter
inc
das
and
cmp
or
or
cmp
xchg
dec
push
push
sub
pop
clc
aad
insb
sbb
std
xchg
cld
test
leave
aad
pop
repnz
add
stos
outsl
pop
xchg
sti
mov
stc
outsl
into
jo
call
test
pop
sbb
jle
mov
and
ficomps
jl
dec
push
pop
nop
decb
sub
dec
in
mov
pop
into
fsubrs
pop
xchg
aad
dec
jb
enter
ljmp
icebp
push
inc
dec
nop
clc
push
mov
hlt
mov
cmpsb
test
xchg
in
jns
dec
sbb
add
dec
lods
sub
add
std
les
cs
inc
in
mov
sbb
pop
cmpsl
pop
mov
sub
iret
clc
jmp
jge
mov
nop
ret
ja
add
and
mov
push
nop
leave
ljmp
mov
cld
mov
stc
cmp
call
in
jg
bound
aad
nop
repnz
push
pop
xchg
fstpt
clc
je
xchg
xor
push
int
jl
mov
pop
ret
adc
fcompl
mov
stos
xchg
push
xorb
mov
jmp
or
subb
dec
jb
sarb
pop
xchg
and
mov
cmp
jge
nop
repnz
mov
jg
lock
test
inc
mov
sbb
mov
iret
pusha
icebp
add
sarb
scas
clc
nop
inc
outsb
loop
pop
scas
jle
fucomp
push
enter
sub
fsubl
push
pop
jmp
adc
shrb
jbe
push
jmp
dec
cli
dec
mov
mov
push
add
sub
fcomps
push
or
jno
sbb
mov
fisttpl
mov
repz
mov
pop
pop
sbb
scas
pop
repnz
mov
cltd
imul
pop
lahf
pop
rclb
mov
push
inc
es
mov
xor
mov
pop
icebp
lock
in
call
sub
repnz
stc
in
ds
add
mov
lock
fcoml
scas
add
xchg
xlat
xchg
pusha
push
and
hlt
mov
xor
sbb
cmp
mov
in
lret
inc
out
cmp
xor
leave
inc
outsl
xor
xchg
cwtl
mov
pusha
ja
jg
pop
fists
cmp
lret
push
push
out
dec
inc
addr16
dec
hlt
scas
lret
outsb
mov
enter
ficomps
mov
enter
mov
mov
xor
out
dec
lods
cwtl
stos
mov
sbb
push
mulb
inc
sbb
sbb
dec
call
and
andb
dec
lret
jmp
inc
stc
sub
ljmp
dec
fwait
pop
enter
pop
test
repz
sbb
mov
iret
push
repnz
jl
fxch
pop
xchg
sub
aas
lret
nop
hlt
out
mov
mov
jl
pop
movsl
gs
xchg
cld
mov
neg
pop
pop
sub
and
xchg
sbb
mov
scas
aas
lock
lods
xor
mov
jnp
mov
cmp
outsl
test
dec
jge
xor
sti
sub
jp
dec
stc
add
lock
nop
in
mov
push
xchg
add
sub
ja
push
add
das
adc
cli
lods
nop
scas
in
pusha
scas
inc
nop
ljmp
nop
std
outsl
lods
jo
adc
lods
inc
stos
cs
cmp
stc
xchg
out
dec
repz
jo
clc
jmp
das
jnp
xchg
sub
sub
jp
xchg
lcall
loope
sub
movsb
mov
xchg
cltd
lock
push
xor
inc
test
test
pop
cli
outsl
fadds
mov
in
pop
and
push
sbb
addr16
push
ja
pop
inc
clc
mov
std
lods
adc
pusha
das
es
es
nop
sub
adc
in
outsl
and
and
stc
and
sar
fistps
adc
sub
push
dec
aam
js
das
cmpsl
mov
mov
in
cli
ja
sub
adc
mov
mov
add
pop
jmp
sti
jnp
xchg
repz
jg
cwtl
call
stc
pop
jecxz
test
xchg
pushf
cmpsb
outsl
lahf
out
nop
push
jge
cwtl
jmp
or
and
sub
fsubrs
pop
scas
jp
dec
or
push
cmc
adc
scas
lret
jns
push
hlt
mov
mov
fwait
rcrb
es
daa
mov
sbb
dec
pop
push
add
test
push
addr16
test
enter
push
inc
cmc
daa
pop
add
add
jo
das
dec
xchg
fisttps
and
jle
mov
xchg
fucompp
cmp
xchg
mov
sbb
jo
jbe
lret
sahf
call
pop
daa
xchg
dec
cli
push
jl
jge
dec
mov
inc
rclb
adc
lret
psubusb
push
xchg
push
jns
fists
mov
push
aad
mov
lahf
pop
clc
jno
inc
fcomp
test
and
scas
pop
mov
rcrb
out
mov
or
repz
clc
std
sbb
xchg
and
es
pop
rcr
push
cmc
push
push
out
pop
sub
shr
push
repnz
hlt
lcall
mov
mov
jne
and
adc
inc
cwtl
jge
sbb
sbb
into
inc
decl
add
push
rcrb
scas
sub
nop
pop
movsb
inc
ja
gs
and
aas
inc
hlt
mov
scas
pop
das
mov
das
sbb
test
pop
mov
ljmp
cmp
std
loop
fcoms
and
dec
mov
js
mov
sbb
divl
les
decb
mov
sub
enter
push
dec
and
pop
nop
shrb
fsubrs
icebp
lock
clc
in
test
call
sub
in
nop
stc
loopne
mov
mov
clc
sbb
hlt
out
mov
xor
mov
notl
test
aad
push
clc
mov
ljmp
js
dec
andb
xchg
fcomp
fsubrp
test
movsbl
insb
cli
addr16
jge
xor
repnz
xchg
dec
imul
sub
push
nop
icebp
push
adc
iret
pusha
leave
cmp
call
in
xchg
dec
cmpsl
dec
pop
pop
ret
rcll
out
test
stos
inc
add
push
fsubr
and
xchg
sub
mov
inc
add
pop
push
stc
mov
mov
or
and
and
in
ds
in
sub
sahf
xchg
inc
add
nop
movsb
sti
enter
insb
scas
repnz
pop
jns
sbb
jo
incb
out
and
pop
inc
je
enter
or
js
stc
mov
jns
or
and
notl
pop
in
ds
in
sub
into
movsl
nop
jg
dec
out
pop
mov
sub
fdivrs
dec
mov
dec
fidivl
fidivrs
je
inc
mov
pop
xchg
sub
rcll
sub
sbbb
nop
sbb
enter
inc
sbb
xor
cld
sahf
xchg
in
sub
test
pop
nop
sub
enter
or
inc
mov
stc
imul
inc
push
in
ds
cld
dec
test
in
repnz
adc
enter
push
pop
pop
or
mov
push
xor
pop
or
sbb
cmp
and
cmp
pop
and
cmc
test
inc
fdivrl
enter
inc
nop
xor
sti
mov
mul
clc
jbe
or
pusha
push
vmovntps
push
sbb
dec
mov
test
scas
xchg
stos
jecxz
stc
int
push
nop
mov
test
mov
lods
fcoms
add
add
jecxz
sti
pop
sbbb
jmp
adc
pop
jp
in
sub
loopne
movsb
mov
lret
jo
out
les
fwait
mov
add
xor
add
mov
sub
imulb
mov
xchg
push
dec
ds
call
fneni(8087
jne
pop
js
jmp
push
shrb
fcomp
cltd
lock
subb
dec
hlt
mov
test
sub
xlat
out
icebp
in
mov
out
xchg
cwtl
inc
mov
or
push
popa
lock
inc
jmp
shrb
dec
sbb
inc
dec
call
xor
movsb
rorb
cmp
daa
shlb
dec
jns
sub
sti
mov
push
lds
jbe
cmp
mov
cwtl
inc
mov
out
lret
jo
sbb
aas
push
movsb
imul
inc
pop
or
jge
js
sub
es
enter
js
test
gs
jge
loopne
enter
cwtl
sbb
clc
sub
lods
xchg
or
and
rcrb
dec
jno
or
es
clc
cli
adc
push
fdivl
and
xchg
inc
rol
jb
mov
in
outsb
cld
loopne
jle
clc
mov
jmp
pusha
pop
inc
aaa
mov
pusha
scas
adc
in
jmp
jo
cmp
jmp
ficomps
fcomps
mov
repz
cli
dec
test
scas
hlt
mov
call
fwait
cwtl
ret
or
dec
jns
push
hlt
ficomps
enter
repnz
mov
mov
shl
pop
and
cld
inc
jg
jge
inc
cli
sbb
shr
repnz
sbb
loop
std
pop
je
frstor
mov
sbb
and
mov
sahf
shlb
inc
mov
mov
mov
nop
mov
pop
dec
test
pop
cwtl
jge
je
push
loop
sbb
push
mov
dec
push
repnz
stc
mov
das
jmp
adc
mov
scas
and
xlat
jmp
push
jmp
inc
xlat
jmp
adc
sar
shrb
clc
rolb
push
scas
adc
stos
mov
in
pop
cmc
jp
adc
fwait
mov
enter
inc
hlt
ljmp
int3
inc
mov
testb
fildll
lcall
and
sub
lock
sub
int3
xor
pushf
or
cli
jle
cld
cmpsb
pop
sbb
test
shrl
mov
fsubrp
push
icebp
mov
les
fists
enter
sub
into
pop
nop
enter
push
stc
clc
or
daa
loop
fdivr
mov
nop
aad
pop
lret
cmp
clc
in
dec
sbb
lcall
loop
cmc
in
jl
add
mov
fdiv
add
jo,pn
sbb
mov
sbb
daa
inc
ljmp
ds
stos
lcall
mov
push
loop
incl
jl
sub
adc
xor
pop
shr
jnp
xchg
sti
lahf
cmp
cmp
jnp
ja
push
nop
pop
pop
sub
xchg
test
scas
filds
sub
pop
sub
nop
hlt
out
call
fisttps
loopne
clc
or
rcrb
sbb
xchg
add
ja
or
and
movsb
in
push
sub
stos
cmp
imul
stos
arpl
add
and
in
lcall
push
sbb
pop
out
sub
mov
scas
das
shrb
mov
or
xlat
add
leave
pop
call
mov
jg
call
jmp
push
jmp
xchg
mov
sub
pop
adc
insb
outsb
nop
xor
fwait
nop
in
insb
dec
and
mov
add
nop
in
loop
loopne
sbb
dec
push
pusha
push
ljmp
cmp
push
push
or
cmp
sbb
mov
dec
call
mov
sbb
nop
shl
push
mov
push
pop
jle
mov
stc
pop
ffreep
int3
mov
mov
mov
pop
and
sbb
push
push
sbb
push
clc
stos
adc
negl
jmp
cmp
enter
enter
fiaddl
mov
pushf
or
mov
pusha
call
lea
sub
lahf
nop
in
lret
dec
mov
cmpsb
xchg
std
inc
mov
cmp
shl
out
mov
scas
and
pushf
scas
insl
add
dec
push
aas
loopne
ljmp
mov
fstl
or
or
pusha
xchg
add
call
pop
js
nop
jg
jge
mov
mov
or
shlb
scas
sahf
clc
in
dec
push
xchg
jno
pop
scas
call
loope
ss
cmp
jmp
lods
lock
jo
std
fsub
ss
mov
or
pop
repz
or
notb
jo
idivb
add
rclb
inc
dec
movsb
mov
stos
jecxz
mov
xchg
and
xor
or
ljmp
repnz
outsl
mov
mov
fcomps
aam
cmc
mov
cli
ja
nop
push
push
pop
or
lods
les
test
rol
dec
scas
sub
add
jmp
adc
adc
dec
mov
cld
dec
cmpsl
nop
in
fwait
and
cmc
pop
cmp
pop
mov
shll
and
sbb
add
mov
leave
xchg
mov
cwtl
ja
fsubr
dec
mov
pop
and
out
and
pop
inc
xchg
mov
loop
xor
jne
pop
out
and
pop
inc
fwait
mov
add
lret
lahf
cmp
mov
lahf
sti
enter
cmpsl
jnp
mov
or
and
and
enter
xlat
bsf
lea
push
out
and
pop
inc
mov
in
imul
idivl
sbb
ret
adc
and
pop
inc
mov
lret
scas
bnd
adc
repnz
cmp
roll
enter
xlat
out
repnz
mov
fiadds
mov
adc
in
ds
xor
pop
lea
or
and
and
fucom
sbb
repz
stc
xchg
push
hlt
stc
shrb
leave
fmul
ja
orb
lcall
and
pop
adc
sub
fcoms
and
jge
jns
or
and
dec
mov
in
repnz
add
ja
sub
mov
and
push
pop
mov
mov
mov
mov
sbb
cld
subl
xchg
cmp
lret
imul
js
ds
fistpll
std
imul
out
dec
outsl
js
sbb
ja
fistpll
xchg
pop
nop
std
popa
sub
or
ret
adc
jp
sub
add
movsb
or
cmpsl
and
pop
dec
aam
dec
mov
int3
or
std
ss
mov
mov
es
dec
clc
hlt
adc
or
push
or
lret
in
xor
sub
mov
xchg
pop
inc
idiv
push
and
into
or
aad
pxor
mov
or
push
call
dec
push
push
xchg
dec
mov
mov
push
fiadds
repnz
enter
xor
cmp
repnz
cmp
loope
or
or
inc
push
in
add
lods
rolb
mull
bound
adc
lock
lret
pop
jle
stc
sar
fdivl
rcl
out
outsl
pop
mov
sub
jg
dec
lods
sub
inc
loopne
sub
mov
sub
cs
jg
cs
cmp
clc
cli
mov
jle
adc
mov
je
and
les
leave
mov
mov
js
enter
jle
adc
mov
loopne
and
cmc
js
lret
sarb
and
jns
pop
stos
enter
out
bnd
xchg
lock
mov
jle
and
stc
or
in
mov
cmp
out
icebp
adc
add
jns
fisttpll
mov
jo
mov
int3
sti
sub
add
xorb
mov
pop
mov
cmp
es
and
clc
fisubs
mov
int3
pop
inc
push
hlt
jmp
sbb
iret
adc
out
jmp
test
leave
ja
xor
rcrb
pop
push
out
fwait
jo
cmpsl
js
push
nop
mov
adc
cmpsb
clc
cli
mov
pop
daa
sbb
fstpt
sub
ja
push
pop
dec
and
hlt
scas
repnz
lock
pop
adc
shl
int3
lock
aas
push
cmc
sti
sbb
ljmp
push
scas
sar
into
or
aas
lods
pusha
stos
xchg
js
push
dec
ss
dec
sub
xchg
mov
jecxz
stc
sub
inc
nop
test
jno
lret
testb
cmp
les
movsl
dec
inc
inc
lds
and
mov
and
cmp
pop
and
fsub
xor
jne
inc
js
and
dec
fdivrs
mov
push
mov
std
jo
sbb
sbb
lock
cltd
test
or
cmc
lahf
clc
fiaddl
aam
clc
rcrb
stc
push
or
push
fidivl
pop
xchg
add
xor
movsl
mov
xor
pop
jb
cmp
jl
fdivrs
push
sub
xchg
inc
icebp
es
dec
lret
lock
jl
daa
fcoml
cmp
xchg
out
mov
mov
cmp
nop
cmpsb
imul
lcall
cld
loop
mov
mov
arpl
sub
xchg
popa
pop
hlt
les
mov
mov
out
mov
pop
das
test
aas
fidivrs
imul
lds
rolb
dec
in
imul
jns
sbb
hlt
pop
hlt
nop
ja
pop
dec
jo
call
push
ja
dec
pop
sbb
es
jne
mov
jns
cmp
jp
sarb
ljmp
mov
jg
sub
sarl
sbb
jmp
lock
mov
pop
cmpsb
pop
daa
ja
push
sti
daa
imul
cld
dec
mov
push
ljmp
xor
push
std
and
scas
inc
xor
in
mov
adc
lret
aaa
pusha
mov
push
jle
es
mov
nop
movsl
out
repnz
mov
mov
jne
add
sti
clc
cld
and
push
cltd
sbb
adc
xchg
or
jl
test
dec
sub
decl
cs
lods
jne
or
insl
push
jle
jle
clc
pop
and
mov
js
mov
dec
fbld
icebp
add
scas
orb
lock
inc
push
sbb
les
stos
mov
mov
pop
push
xchg
dec
sub
mov
vpcomub
and
ficoml
mov
ja
mov
icebp
or
add
xor
dec
test
mov
push
add
nop
or
mov
xlat
int
pop
adc
pushf
or
adc
out
push
clc
mov
ret
shll
and
sub
and
push
mov
sub
and
xchg
mov
in
test
mov
nop
push
jns
push
cmc
jmp
divl
cmp
pop
cmpsl
inc
dec
ficompl
sub
das
xchg
enter
sub
push
loop
je
push
les
fiadds
lods
sarb
call
sub
add
psubb
nop
ja
add
hlt
add
dec
mov
stc
cmp
movsb
pushl
push
mov
ja
pop
dec
nop
bnd
pop
aad
adc
pop
test
cmp
push
loop
xchg
nop
in
imul
adc
dec
repnz
and
cli
ja
add
das
xlat
popf
or
jge
and
add
rorb
jae
outsb
fistpl
ds
add
sub
jo
dec
sub
stos
cmp
hlt
test
jmp
xor
cmp
cmp
inc
psrlw
xlat
jb
or
stc
sub
mov
in
outsl
shr
out
scas
sbb
cmpsb
and
imul
fsubs
xor
xchg
mov
testb
inc
push
out
push
mov
test
xchg
lret
mov
sarl
movsl
jmp
fdivrs
sbb
popa
pop
pusha
sarb
add
imul
clc
enter
sub
mov
dec
iret
sar
pop
call
stos
into
loopne
push
mov
sbb
xchg
aaa
pop
jmp
push
mov
adc
hlt
test
stos
hlt
test
decl
fcmovu
scas
and
jmp
cmp
dec
clc
jmp
inc
or
mov
clc
incl
call
test
jmp
mov
jne
or
and
movsl
aam
aad
jl
or
lret
lahf
out
pop
daa
push
shl
pop
jp
mov
jo
insb
loope
leave
test
dec
or
xchg
ds
std
jns
pop
xchg
mov
mov
cmc
cli
repnz
loop
hlt
or
adc
out
dec
test
jns
ja
mov
jmp
lock
es
scas
mov
subb
lret
fisttpl
cmpsl
push
rcrb
inc
nop
ja
xor
or
and
cli
cld
and
rclb
and
push
jp
imul
bound
mov
xchg
jmp
call
mov
inc
das
pop
call
pop
cmpl
add
push
push
repnz
xor
and
xchg
fwait
xor
or
add
pop
xor
add
add
pusha
call
pop
sub
sub
jmp
inc
dec
dec
inc
dec
inc
add
fildl
add
pop
add
add
add
add
movsb
movsb
mov
adc
add
rcl
add
add
add
sub
fistl
mov
fisubs
mov
mov
shll
add
add
sub
mov
mov
add
add
mov
mov
xor
inc
dec
jne
jmp
lret
fistps
insb
inc
outsb
push
push
push
push
outsb
push
lret
xchg
insl
lret
iret
loope
imulb
iret
loope
push
stc
xchg
mov
aaa
push
push
lret
lea
xchg
incb
push
push
add
push
push
mov
icebp
in
into
lea
add
xor
push
outsb
and
and
push
push
push
out
add
push
push
out
cs
push
push
push
push
pop
lea
lea
lea
out
add
add
les
dec
or
pop
les
push
lea
push
outsb
sbb
clts
outsb
and
and
add
push
push
out
cmp
push
push
push
pop
stc
jae
stc
jae
out
je
push
push
lea
xor
xchg
push
jge
hlt
mov
aam
out
add
orb
push
or
pusha
lea
aas
xchg
out
or
xchg
out
or
pusha
xchg
stc
and
adcb
push
push
inc
out
lret
stc
das
dec
aas
pop
test
add
stc
stc
stc
das
push
aas
add
movl
out
add
lods
stc
stc
stc
pop
les
push
push
ljmp
lea
cli
mov
mov
xchg
pop
push
push
push
mov
xchg
pop
push
push
push
mov
add
or
mov
inc
adc
or
add
or
mov
inc
adc
or
xor
addl
push
push
mov
inc
adc
or
add
or
mov
inc
adc
adc
addl
push
push
mov
inc
adc
adc
addl
push
push
mov
inc
adc
adc
addl
push
push
mov
inc
adc
adc
push
push
push
fldcw
add
add
push
push
out
jbe
stc
stc
mov
add
or
mov
inc
adc
adc
addl
push
push
mov
inc
adc
or
lds
or
mov
add
or
mov
inc
adc
adc
addl
push
push
mov
inc
adc
or
icebp
sub
out
push
stc
stc
stc
dec
out
mov
inc
out
mov
add
or
mov
inc
adc
adc
addl
push
push
mov
inc
adc
or
incb
jnp
push
xchg
stc
stc
stc
stc
xchg
push
add
push
xchg
stc
stc
stc
stc
xchg
xchg
push
push
xchg
push
push
push
push
xchg
xchg
push
push
xchg
push
push
push
push
push
icebp
sub
out
popf
clc
stc
stc
mov
inc
xor
or
xchg
add
push
push
out
push
icebp
sub
mov
out
jne
stc
stc
pop
sub
pop
pop
jecxz
les
push
pop
pop
out
add
push
push
push
das
ret
mov
push
add
add
add
pop
push
fs
inc
dec
or
out
add
push
push
fwait
pop
mov
xor
mov
shr
rep
pop
mov
shr
rep
pop
pop
mov
push
push
mov
add
add
add
xlat
cmp
add
add
test
add
add
xchg
mov
xchg
add
add
rep
pop
pop
add
add
add
aam
imul
add
sub
mov
incl
xchg
mov
add
call
sub
add
mov
mov
cmp
add
add
test
add
add
add
add
add
add
add
test
mov
or
stc
add
add
push
test
add
mov
decb
add
add
add
dec
dec
add
call
call
outsl
out
cmp
mov
add
add
add
add
add
xor
inc
dec
push
test
call
divb
loop
sub
loope
sub
ljmp
pop
mov
inc
fstp
fisttpll
movsl
rorl
sbb
in
fstpl
fstp
fst
pop
rcr
fstp
push
lcall
adc
mov
mov
fstp
pop
mov
xlat
fstp
fstpl
int
rcrb
fstp
fisttpll
push
mov
xor
fstp
rcrb
fstp
fstl
fisttpll
push
fcmovnu
fstp
mov
fstp
fstp
adc
fstp
fisttpll
in
fldl
pop
sbb
fstp
fnsave
and
and
fstp
xor
and
and
fstp
fnsave
mov
pop
in
movsl
fstp
fstp
sbb
fstp
fisttpll
popf
fisttpll
sbb
fstp
sbb
lea
push
fwait
loope
pop
in
cmc
fstp
fstp
sbb
std
cwtl
mov
mov
scas
mov
mov
std
stos
mov
mov
in
repz
in
rcl
cltd
mov
lods
mov
mov
mov
std
mov
rcl
mov
mov
test
stos
stos
stos
repz
mov
mov
repz
xlat
cwtl
lock
mov
std
out
scas
test
lods
mov
test
mov
mov
mov
repz
mov
scas
mov
scas
mov
std
lods
scas
mov
mov
std
stos
mov
mov
cwtl
lcall
cltd
std
mov
xchg
std
mov
std
mov
mov
mov
std
lea
test
pushf
mov
std
scas
mov
mov
scas
std
scas
mov
mov
xchg
mov
mov
mov
mov
mov
scas
fldl
add
add
sldt
loopne
add
bound
xchg
xchg
mov
or
mov
popa
jmp
xor
fwait
pushf
loopne
in
insb
push
push
inc
test
pop
out
cmp
out
or
das
dec
call
dec
fisttpl
push
mov
ja
jnp
clc
fistps
out
sbb
mov
pop
shr
or
mov
dec
popf
push
lds
pop
jo
sarl
rcl
rcrb
xchg
mov
int
cmp
xor
push
popa
sub
cmc
mov
je
mov
push
xor
adc
out
xor
add
or
xor
fisubrs
and
sub
loopne
cmp
pushf
pop
ja
inc
pop
lods
incl
ss
cltd
scas
dec
scas
dec
dec
inc
jp
popf
pop
arpl
jnp
daa
popa
dec
cmp
rcrl
out
sbb
pop
mov
shl
aas
das
imulb
outsl
inc
into
imul
loope
pop
rcll
out
cmp
nop
inc
fbstp
jle
ror
arpl
jmp
sub
push
mov
jne
sti
xor
jno
mov
lret
inc
inc
push
sub
add
jg
cli
push
xor
pop
dec
sub
ljmp
insl
data16
mov
rorl
jle
sub
fists
out
fisubl
xor
adc
xor
out
xor
repnz
xchg
push
jb
push
adc
or
ds
cs
lret
push
gs
leave
push
cmpsb
mov
ljmp
mov
icebp
imul
cmp
lock
nop
push
pop
not
mov
xchg
dec
arpl
cli
xor
jp
icebp
test
inc
sbb
sub
repz
mov
je
push
cmpsb
adc
fistpl
lahf
outsb
adc
push
enter
pop
jne
popa
inc
inc
dec
mov
mov
loopne
cmp
jmp
call
jns
push
outsb
jg
xchg
pop
sbb
je
mov
push
std
push
jae
imul
adc
cltd
inc
mov
aad
adc
in
sub
das
rcll
lods
mov
mov
sub
addr16
stos
adc
jno
jno
sbb
push
dec
repz
inc
cmp
mov
stos
mov
sbb
sbb
leave
gs
xor
xchg
adc
loope
int
push
pop
mov
cmp
out
out
adc
inc
push
add
scas
int
aaa
outsb
movsb
rolb
call
lcall
inc
jmp
push
and
mov
outsb
sub
repnz
pop
jp
ss
out
ss
or
dec
imul
adc
insl
lahf
or
adc
push
mov
das
stc
jg
aaa
adc
jmp
xor
pop
fsub
bound
inc
sbb
stc
ret
lahf
mov
mov
xor
cmpsl
xchg
in
imul
lea
sub
mov
ficompl
mov
lcall
mov
and
sbb
insl
enter
aam
xchg
shrl
push
dec
test
mov
in
lahf
out
in
xchg
dec
scas
mov
pop
cmc
sbb
xchg
pop
inc
movsb
call
lahf
or
add
notl
pop
xchg
add
cmpsl
call
lret
or
add
movsb
outsb
pop
dec
adc
xchg
mov
add
adc
aad
adc
lahf
sub
xchg
movb
addr16
shr
sbb
adc
ljmp
daa
mov
cmpsb
mov
xor
pop
inc
lret
mov
fisubrs
in
arpl
clc
pop
and
js
inc
scas
add
call
xor
popa
lcall
xor
cli
ficompl
fldcw
bound
add
sub
push
out
mov
jg
lret
aas
cmp
or
mov
mov
push
lcall
jle
sbb
mov
push
lret
movsb
adc
mov
insb
xor
xorb
mov
xchg
test
rol
jl
dec
cmp
xor
push
test
decl
jo
sbb
xlat
cmp
mov
leave
jl
test
test
aas
aaa
loop
adc
imul
cmp
stos
fwait
inc
icebp
mov
cmp
mov
fwait
in
dec
idivb
xor
imul
sub
cmc
fcmovb
push
mov
mov
inc
pop
aam
mov
pop
add
xlat
insb
inc
sti
sbb
and
sbb
sub
mov
gs
je
mov
jecxz
sub
in
data16
add
push
xorl
movsl
and
dec
and
and
mov
inc
cmp
sub
les
mov
rolb
dec
pop
inc
shrl
sarb
shlb
sub
out
xor
enter
cmpsb
cmp
bound
sarl
push
and
mov
lret
std
dec
adc
cs
ljmp
xor
out
loop
xchg
mov
xor
out
enter
xchg
fistpll
idivb
xor
insl
pop
xor
lock
cli
dec
shl
mov
adc
mov
ljmp
xchg
inc
dec
les
lcall
insl
pop
adc
cmc
push
notl
arpl
shrb
mov
or
jle
enter
test
xor
jecxz
jo
mov
sub
lock
int3
idivb
repz
repz
es
cwtl
jns
adc
inc
outsb
out
aam
mov
dec
icebp
cmc
aam
sub
cmp
or
sbb
hlt
mov
imul
call
fistpll
cmp
sub
outsl
push
in
xchg
bound
imul
dec
out
jle
dec
iret
call
ja
iret
mov
scas
sbb
pop
xor
jecxz
mov
mov
inc
xlat
pop
xchg
incl
arpl
lcall
push
cwtl
sub
pop
stos
add
xchg
jmp
and
pop
or
aas
xchg
sahf
inc
pop
mov
sub
lea
and
sub
or
jns
lcall
inc
adc
jl
sbb
test
jmp
mov
sar
jge
inc
psllq
or
jne
sub
dec
dec
add
pop
popa
mov
add
mov
mov
aam
hlt
aam
adc
sbb
in
sahf
add
dec
xchg
lea
fcomps
mov
jmp
scas
out
loopne
je
aam
and
movb
pop
int3
repz
push
int3
and
inc
mov
sbb
and
push
ret
xchg
push
add
jno
adc
mov
popa
js
shlb
adc
repz
cmp
and
fyl2x
sti
or
push
mov
loop
xchg
lods
adc
sub
adc
mov
xchg
dec
xchg
adc
adc
popa
aam
pop
fwait
cltd
pop
aas
push
dec
push
mov
icebp
gs
insb
pushf
mov
lret
and
cmp
subl
fcomps
add
aad
cmp
or
in
push
outsl
popa
jg
or
xchg
cmpl
sar
popf
flds
pop
cmc
push
jno
fs
lods
mov
andl
sbb
cmp
inc
mov
or
or
inc
lret
xchg
push
adc
movb
sarl
imul
push
push
jecxz
cmp
rcr
arpl
sbb
in
xor
gs
jp
mov
jmp
fldenv
push
popf
pop
jb
mov
test
outsb
nop
or
shll
pusha
aad
pop
lock
leave
jns
adc
cmp
repz
gs
xchg
fs
xorb
inc
loope
mov
mov
sub
roll
mov
push
mov
inc
push
push
fxam
dec
xor
or
xor
push
icebp
and
test
jp
dec
mov
pop
mov
pop
push
int
and
sbb
je
cmpsb
aaa
stc
and
add
pop
pop
in
subl
push
xchg
push
mov
push
int
mov
mov
xor
mov
dec
subl
and
adc
rep
fdivs
dec
scas
mov
fbld
and
mov
sbb
mov
frstor
sub
fldlg2
or
cwtl
sahf
rcrl
iret
push
out
jmp
call
clc
ss
push
movsl
push
cmpsb
sarb
and
pop
jbe
jnp
mov
pop
ds
push
jl
lock
inc
ja
aaa
adc
pop
into
jecxz
dec
mov
mov
push
outsl
mov
mov
adc
movsb
into
outsb
inc
test
push
or
shll
mov
push
mov
notb
xchg
jae
aas
mov
mov
idivb
dec
sub
ja
cmpsb
jl
mov
push
out
add
mov
or
dec
sbb
xchg
inc
shll
and
push
adc
cs
pop
add
push
and
jo
or
ds
lea
pop
inc
imul
push
xor
jno
dec
add
ficompl
icebp
sub
adc
sub
aaa
adc
dec
mov
rcll
push
in
lods
xchg
xchg
clc
cmp
adc
jnp
pop
mov
invd
dec
je
in
pusha
push
inc
int
push
dec
sbb
add
sub
inc
sbb
js
push
sub
xchg
sbb
mov
mov
mov
sahf
inc
push
lods
push
movsb
sub
hlt
or
pop
lock
add
push
push
shrb
aas
clc
and
int
inc
ja
mov
add
std
fsubrl
shll
shlb
and
pop
lods
xor
mov
lret
push
adcb
nop
movsb
mov
adc
mov
pusha
call
cmp
adc
mov
xchg
jb
lock
rclb
sarl
cmp
out
jg
push
add
sarl
loopne
cs
leave
mov
loop
inc
js
arpl
adc
sti
out
mov
nop
shl
pop
or
cmpb
and
mov
add
pop
sbb
rolb
lock
inc
cltd
inc
lds
pop
mov
dec
loopne
or
and
jle
add
xchg
xchg
aaa
out
cli
flds
int
dec
jb
imulb
lods
setp
fsubl
pop
pop
sub
mov
inc
fs
imul
jmp
mov
or
lods
test
sub
sub
outsb
fimuls
loope
cmp
nop
mov
lds
inc
pop
shlb
and
les
and
fstpt
jo
adc
addr16
xchg
mov
dec
cs
add
sub
call
stc
fs
push
jno
out
popf
push
sti
stc
lock
push
cmp
stos
andl
cmpsl
inc
aas
add
push
lock
dec
adc
dec
pop
jmp
xchg
lcall
mov
pop
ds
ss
movsl
dec
dec
sub
mov
sahf
std
sbb
mov
and
sub
call
sbb
jmp
movl
push
sbb
sbb
andl
in
cli
andb
mov
out
xor
fcmovnu
movsl
xchg
mov
mov
popa
out
add
cld
jns
pop
ret
out
sub
mov
xor
fnstcw
lret
mov
mov
jmp
adc
jle
cli
icebp
push
ror
mov
xor
movsb
cwtl
push
je
mov
and
push
push
lods
stos
jp
daa
push
mov
cmp
jnp
je
mov
shrl
pusha
je
dec
add
or
stos
stc
inc
sbb
push
inc
testl
sub
adc
ds
mov
sbb
sbb
cmpsb
cmp
pop
xor
hlt
outsl
arpl
adc
sub
fsubrl
and
mov
push
cmc
rcrl
sub
dec
mov
dec
sbb
cmp
jmp
das
push
loopne
cmp
rcrb
ret
aas
mov
mov
inc
xchg
test
sbb
int
adc
addb
cmp
push
mov
xchg
rcrb
inc
scas
sub
fs
mov
push
pop
fwait
push
push
mov
or
add
cmp
push
loope
jle
movsl
in
dec
xor
out
fstl
add
enter
ss
pop
and
push
push
mov
adc
jmp
sbb
mov
insl
jg
xchg
mov
cmp
lods
out
sub
leave
push
jmp
jo
shlb
mov
out
insl
xor
cld
and
jnp
push
fs
dec
inc
clc
inc
movsb
inc
pop
and
fnstsw
fidivl
loop
gs
cs
bswap
adc
mov
xor
sahf
fisttps
int
sahf
adc
fucomi
fstp
fwait
inc
popl
stos
push
jmp
fsts
es
add
sub
sbb
sbb
xchg
pop
loopne
lret
fsubrl
ljmp
pop
push
adc
adc
cmp
push
dec
pop
jge
jge
dec
xor
imul
dec
dec
fwait
push
adc
or
jno
pop
fimull
jge
xchg
xchg
inc
fmuls
mov
cmp
