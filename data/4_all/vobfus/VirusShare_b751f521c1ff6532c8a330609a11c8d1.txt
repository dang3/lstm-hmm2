out
or
add
push
lods
sti
hlt
cs
add
inc
inc
pop
jmp
push
adc
jl
cmp
lods
and
xchg
xchg
xchg
xchg
cmp
mov
xchg
xchg
xchg
xchg
jo
and
xchg
xchg
xchg
xchg
fadds
pushf
xchg
xchg
xchg
xchg
dec
js
in
xchg
xchg
xchg
push
xchg
xchg
xchg
mov
insb
sub
in
enter
xchg
xchg
cwtl
push
sbb
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
test
or
xchg
xchg
xchg
xchg
xchg
rcrb
xchg
xchg
xchg
add
inc
je
xchg
xchg
xchg
fs
nop
fmull
mov
xchg
pusha
les
adc
call
sbb
sbb
adc
int
out
in
mov
mov
and
inc
dec
ja
jp
gs
insl
repz
decl
arpl
ja
jp
add
and
xchg
sbb
and
mov
adc
in
rcrb
nop
push
jge
xor
add
pop
add
lock
nop
fistl
cmp
push
adc
int
repnz
add
gs
lods
daa
add
cmc
sbb
call
call
lcall
rorb
or
and
inc
xor
mov
test
jle
or
aas
mov
fcomip
pop
inc
rolb
xor
lret
iret
xor
fwait
jmp
js
push
shll
addl
out
pushl
imul
imul
fs
arpl
rcr
pop
mov
jecxz
add
lods
out
scas
cmp
filds
pop
pop
icebp
push
or
sti
or
negl
cmp
and
aaa
sbb
sbb
out
adc
in
dec
andb
pop
dec
jge
or
add
mov
pusha
add
sti
out
fistpl
dec
mov
stc
int3
adc
and
aaa
imul
and
nop
data16
mov
movsb
sbb
or
sbb
fistpll
jo
imul
jno
or
inc
dec
inc
pop
gs
mov
inc
inc
dec
data16
dec
jp
jns
xchg
outsl
jo
mov
inc
dec
imul
adc
gs
xor
cs
insb
cmp
add
gs
push
outsw
jb
popa
jne
imul
arpl
outsl
jne
je
push
xchg
add
lret
in
clc
push
inc
pop
mov
incl
push
enter
push
xor
lahf
or
jb
gs
enter
mov
mov
lcall
dec
gs
popa
addr16
add
sbb
sbb
call
jb
imul
pop
pop
jbe
popa
ret
jnp,pt
cltd
push
popa
jb
pshufw
nop
inc
mov
push
sbb
dec
cmp
or
cmp
sti
cmpsl
cmp
sub
ds
divb
jno
and
mov
aas
fcomps
pop
sub
pushf
pop
adc
jb
jb
push
je
and
or
addr16
xchg
sub
adc
idivl
loop
dec
push
push
dec
push
in
dec
sbb
loope
adc
cs
dec
dec
daa
ret
daa
inc
jb
jb
jbe
insb
outsl
ja
popa
jecxz
add
inc
inc
inc
mov
pop
fcomps
jne
je
dec
outsl
arpl
mov
dec
imul
outsb
jae
mov
test
mov
insl
je
das
sbb
mov
fs
aam
in
cmp
insb
pop
or
xor
imul
outsb
adc
leave
and
jne
je
lahf
in
in
inc
push
push
dec
gs
cmpsl
lods
cmp
xorl
daa
fcmovne
lret
mov
xchg
sarb
jns
cmp
push
sbb
aas
sbb
imul
cmpsl
add
ss
jl
aaa
push
dec
xor
outsb
dec
fcom
shr
loop
test
jae
cs
adc
lret
jo
push
daa
jl
scas
movd
mov
jg
or
push
add
jo
push
pop
dec
cld
data16
add
push
mov
push
push
push
lds
mov
fucomp
outsl
pop
cmp
push
push
mov
movl
cmpw
std
or
mov
jo
mov
outsl
mov
adc
sub
jmp
inc
call
cld
add
jnp
adc
test
jg
sub
psubd
or
add
push
sbb
into
xchg
out
or
xor
adc
movsb
fwait
sbb
into
cwtl
fs
mov
add
in
jl
jecxz
jl
pop
jb
jl
jmp
imull
mov
insb
cmpsl
adc
push
ljmp
push
aam
xor
mov
mov
dec
push
cmp
add
imul
mov
add
jb
xor
add
nop
mov
jbe
xor
rcrb
jb
adc
rolb
jg
outsb
jmp
mov
add
es
ss
in
or
mov
mov
mov
negb
cwtl
das
cmp
stc
cwtl
aas
frstor
jb
or
rcrl
xchg
and
mov
pop
pop
ss
xchg
pop
mov
je
and
and
addb
enter
add
add
add
sub
add
or
outsb
push
push
sbb
sub
shrb
and
iret
lds
adc
js
xor
sar
jae
or
outsw
adc
fwait
jo
daa
lahf
or
les
cmpsb
loope
xchg
pinsrw
cmp
enter
adc
lock
leave
add
add
mov
add
dec
movsb
or
and
jnp
and
insb
ret
sbb
bswap
aaa
mov
fdivs
fdivrs
nop
xchg
daa
and
mov
fmul
enter
add
or
or
cmp
pusha
test
mov
xor
pushl
and
sub
mov
sbb
or
jo
and
sbb
in
jmp
mov
and
pop
or
jo
cmp
fs
in
fs
inc
mov
fs
inc
dec
pusha
and
mov
in
in
nop
pop
push
nop
mov
pop
mov
inc
xchg
xor
add
into
dec
push
push
xor
loopne
inc
dec
push
push
pop
fadds
outsl
loopne
or
adc
xchg
jmp
inc
cmp
xor
mov
nop
xor
adc
dec
inc
xchg
rcl
inc
lcall
jmp
inc
lods
jmp
jne
adc
inc
mov
jp
fcmovnu
popf
hlt
cld
or
push
fistpl
faddl
mov
fnstenv
push
sbb
and
daa
filds
xor
fiaddl
cmp
fimuls
adc
ja
enter
and
mov
add
bound
and
xchg
fcomps
inc
jae
cmp
enter
jp
inc
mov
push
popa
popf
pushf
pushf
int3
int3
xor
frstor
pop
jno
icebp
pop
xchg
xchg
dec
inc
jl
jl
fwait
cmpsb
frstor
nop
push
adc
fs
adc
jns
jb
das
add
mov
add
sbb
jmp
cmp
ljmp
pushf
jo
gs
push
sub
fwait
xchg
es
aaa
or
vmwrite
lcall
and
adc
and
or
nop
xchg
xchg
adc
and
insb
sbb
rclb
add
xchg
xchg
mov
mov
sbb
jg
cmpl
pop
push
std
lret
call
cld
adc
or
mov
mov
out
ja
xlat
insl
imul
and
add
inc
ss
fmuls
rorb
or
adc
lea
sub
cld
movsl
add
rorb
pop
arpl
mov
cmp
loop
mov
cli
fildl
push
push
andl
adc
in
jmp
andl
ja
loopne
and
pop
in
rorl
inc
int3
invd
lea
or
imul
dec
sbb
or
dec
sbb
lds
adc
add
xchg
insl
inc
sarb
xor
nop
leave
dec
push
nop
hlt
es
fmull
push
sub
lea
sbb
fbld
add
add
add
jmp
pop
xor
add
jb
test
test
orb
out
adc
movsl
xorl
and
or
mov
push
cmp
in
or
push
nop
and
xchg
in
add
rorb
adc
and
gs
push
test
fmull
daa
sbb
jge
fdivl
mov
pop
notb
mov
enter
pushf
push
cwtl
or
add
jmp
or
or
or
adc
mov
mov
push
sub
sbb
idivb
leave
insb
adc
insb
popa
add
mov
cmc
movsb
xchg
popf
adc
out
lock
add
cld
lds
dec
mov
and
sbb
fchs
pop
loopne
xchg
xchg
push
loopne
loopne
xor
mov
dec
inc
mov
stc
insb
push
std
mov
test
in
es
cmp
arpl
cld
add
fsts
push
fs
int
xor
add
pushf
and
push
popa
nop
xchg
xchg
sbb
push
dec
adc
es
cmp
scas
add
and
nop
or
and
and
in
ficomps
pushf
pushf
insb
push
sbb
and
pand
in
fwait
sbb
lods
mov
sbb
in
add
jmp
push
cmp
add
rolb
es
daa
nop
cmp
or
adc
pusha
inc
in
cli
je
cmp
cmp
lea
je
mov
dec
push
fsubr
pop
xchg
fadd
aad
fs
insb
test
push
dec
inc
daa
xchg
mov
sub
mov
xor
xchg
add
and
mov
pusha
decl
cmp
jnp
add
sbb
xchg
nop
fs
lmsw
sbb
fs
and
fs
cs
sub
or
xor
bound
insb
into
add
inc
lcall
lahf
jb
xor
inc
inc
inc
ljmp
mov
push
ret
cmp
jo
add
ret
addb
imul
adc
in
dec
cs
push
xor
pusha
and
xchg
leave
pop
clc
decb
hlt
andb
mov
mov
sti
pop
pop
leave
ret
jmp
lock
and
or
push
add
sub
nop
movsb
jmp
dec
inc
ss
cmp
dec
enter
cmp
cltd
or
mov
sahf
jo
or
adc
inc
inc
jo
repz
ret
in
add
fs
data16
inc
and
pusha
stc
cmp
mov
add
and
je
jbe
jb
and
mov
xor
mov
pushf
mov
or
leave
and
mov
mov
inc
adc
xor
push
das
push
dec
xor
iret
fcoml
lock
gs
mov
pop
pop
nop
mov
nop
fstpl
adc
icebp
ja,pt
adc
xor
in
pop
pusha
adc
cs
and
xor
fs
adc
adc
xor
xchg
adc
mov
xchg
or
or
daa
and
adc
or
pusha
and
xor
mulb
and
sbb
xorb
std
adc
pop
jns
adc
or
and
cwtl
popa
scas
in
hlt
push
adc
std
in
fs
call
std
jo
jns
mov
or
std
add
jo
call
icebp
test
into
enter
adc
fucom
xor
pop
fsubrs
leave
fmul
enter
dec
jg
ds
mov
xor
cmp
pop
cmp
inc
inc
dec
inc
adc
fnstenv
rcr
add
add
and
sbb
dec
loop
cmp
stos
cmp
and
push
add
add
idivl
add
sbb
add
iret
lahf
lds
enter
cwtl
add
es
mov
and
dec
rclb
test
repz
dec
add
andl
jmp
pop
or
sub
popl
pop
adc
mov
cmpsb
mov
xchg
test
pop
sub
cmp
test
push
test
repz
ss
jmp
xchg
cs
leave
enter
jge
lret
xchg
sub
jmp
inc
sahf
xchg
xchg
push
jl
and
in
adc
aam
or
lahf
add
push
push
shlb
imull
cmp
xor
or
sbb
pop
clc
sahf
std
or
ljmp
mov
daa
int
dec
add
add
xchg
xchg
xchg
or
dec
mov
rcl
push
les
push
xlat
loopne
les
pushf
pushf
pushf
loopne
shl
retw
mov
dec
fxch
leave
enter
mov
fwait
mov
adc
lea
dec
mov
in
dec
aam
inc
add
scas
mov
xor
sbb
lea
dec
fidivrs
sbb
lods
pushf
push
sbb
daa
in
aad
fadds
cmp
xchg
data16
mov
fstps
cmp
cmp
nop
pop
push
repnz
xchg
decb
sbb
cmp
mov
push
or
mov
add
out
daa
dec
mov
jns
dec
mov
sahf
add
lods
cltd
add
xor
lods
test
jno
jo
lods
orb
sahf
and
pop
sbb
movsb
push
dec
mov
or
adc
shlb
and
jbe
movswl
mov
pop
mov
dec
adc
cli
cli
cltd
idivl
scas
outsl
iret
testl
pop
jge
add
loop
jp
jg
xchg
inc
loopne
dec
add
inc
mov
int
int
js
jmp
enter
add
jl
or
leave
leave
sbb
js
dec
es
adc
push
mov
sbb
sub
pop
leave
addr16
je
or
cmp
test
jge
jmp
js
or
jl
aaa
sbb
sbb
push
fdivr
sub
or
sbb
in
or
movsb
fistl
adc
xchg
adc
in
xor
insb
mov
fs
or
mov
jg
jl
mov
inc
push
inc
mov
pop
sbb
jno
cmp
adc
xlat
cwtl
sub
imul
or
lahf
mov
xchg
mov
add
pop
sub
xor
dec
adc
fldenv
aam
or
cwtl
mov
cmp
cmp
in
or
in
adc
or
and
je
sub
loopne
loopne
and
sarb
ret
in
push
jmp
jmp
push
push
sbb
in
out
add
push
in
cmc
or
add
inc
mov
and
rolb
outsb
add
pop
add
and
shl
popa
jno
push
mov
iret
pop
push
lods
sahf
add
jns
mov
int3
sbb
pop
nop
xchg
xchg
int3
push
int3
dec
ror
inc
sub
repz
pop
shlb
push
out
push
shlb
mov
mov
adc
mov
mov
jnp
aam
push
aam
cmp
add
aam
inc
cmp
inc
lret
addl
and
enter
add
add
enter
pop
in
sub
inc
das
dec
int3
arpl
int3
add
sbb
cmp
and
add
cmp
rolb
test
push
es
xchg
pop
repnz
in
pop
aad
add
mov
jecxz
mov
cmp
inc
pop
and
jb
add
add
xchg
insl
mov
dec
insl
mov
dec
shlb
add
cld
cld
mov
cvtps2pd
insb
xor
add
mov
ret
inc
clc
imul
hlt
or
inc
inc
push
in
add
mov
and
mov
or
inc
or
sbb
push
add
je
in
add
addr16
fcom
ja
or
pop
mov
pop
adc
fistpll
dec
test
int3
jmp
inc
or
push
in
or
das
or
and
popa
insb
cwtl
in
add
test
jnp
insl
inc
push
fs
xchg
sub
in
dec
sub
loopne
nop
and
fcoms
sub
cmp
xchg
push
xor
jnp
fsubrs
in
pusha
ret
mov
outsl
xor
pop
rolb
test
rcrb
jno
xor
insb
add
aam
xor
inc
lods
fs
aam
lock
sahf
data16
xchg
nop
mov
dec
inc
sahf
mov
je
test
add
and
and
mov
rorl
add
and
mov
push
lds
dec
mov
leave
and
cmp
loopne
sbb
dec
lods
mov
and
jl
inc
mov
ret
insb
jne
test
add
xor
mov
das
xor
clc
pop
inc
hlt
jo
or
or
cmp
dec
loope
xchg
mov
fldl
int3
add
subb
inc
xchg
push
aad
or
and
mov
incl
jo
hlt
cltd
out
stos
mov
xor
js
cmpb
lret
add
ljmp
cmp
out
lahf
sub
and
mov
das
jae
or
call
mov
jle
jne
push
leave
mov
iret
xchg
shll
aam
cld
enter
mov
xor
lea
lds
imul
jmp
or
popa
cwtl
jp
xor
repz
insl
mov
jecxz
xchg
cmpsl
and
dec
sbb
data16
lcall
mov
roll
lods
outsb
outsl
push
pop
pop
out
loop
mov
mov
xchg
roll
daa
inc
xor
ret
sub
or
pop
jbe
lcall
jmp
dec
rorb
dec
fidivl
shl
leave
out
xchg
inc
pop
mov
lcall
cmp
test
jecxz
lret
sub
lret
cwtl
pop
mov
out
inc
nop
dec
mov
ljmp
sbb
adc
jp
enter
outsb
dec
xlat
adc
push
or
rorl
xor
fadd
lcall
add
mov
sti
movsl
test
add
sahf
sbb
xor
sbb
or
nop
stc
or
lcall
sub
mov
push
repz
or
and
sete
and
rorb
xorb
xchg
fbld
jo
ljmp
ljmp
fists
cmp
or
adc
xchg
adc
sbbb
ds
mov
cmp
push
into
adc
lods
jecxz
pop
or
pop
add
jo
repz
incl
cld
cmp
rclb
or
add
mov
xor
decl
or
mov
stc
inc
adc
push
push
sti
sarl
scas
mov
data16
call
dec
iret
hlt
cmp
mov
xchg
and
dec
cs
das
cld
or
mov
aas
fstl
addr16
jmp
xchg
stos
mov
xchg
xchg
jmp
clc
mov
fcos
incl
out
ss
jle
inc
aas
ds
cli
mov
pop
mov
nop
rcl
lret
pop
jb
dec
mov
in
jb
jmp
test
hlt
loop
jmp
bound
incl
insb
lcall
lret
pop
push
sarb
shr
test
iret
lods
mov
jg
pushl
add
sub
xor
fcoms
call
ss
xchg
jmp
pop
repz
call
xchg
stc
inc
jb
lods
lahf
pop
jl
movsl
sbb
add
xchg
out
add
ljmp
mov
stc
jmp
into
inc
sub
and
in
lcall
mov
sarb
jg
js
dec
dec
fs
and
jb
mov
repz
pop
and
pushf
incl
ret
pop
adc
push
ss
pop
lcall
sub
in
pop
dec
stc
imul
xchg
lds
pop
aas
out
mov
sbb
push
mov
xor
lods
mov
scas
mov
sbb
mov
pushf
inc
mov
sbbb
iret
lock
xchg
nop
and
ljmp
mov
add
pop
mov
sti
jbe
pop
xor
lret
cmp
and
stos
stos
pop
jp
enter
shlb
adc
in
nop
sahf
loop
inc
inc
jo
xchg
fwait
ljmp
pushl
mov
sbbl
in
fs
pusha
rcr
cmp
cmpsl
cmpsb
adc
pop
clc
or
and
scas
out
int
test
hlt
push
or
js
xchg
in
xor
push
mov
dec
dec
push
add
leave
subb
cwtl
lods
pop
xor
stos
call
in
mov
mov
lahf
cmp
mov
xchg
ret
and
aaa
or
inc
lods
pop
dec
mov
outsl
cld
dec
xor
test
addr16
je
in
push
add
lcall
shrb
clc
sahf
sub
inc
out
insb
sahf
icebp
dec
mov
add
mov
bound
jp
xlat
insb
or
decl
ja
mov
mov
or
loop
ret
mov
sub
int3
inc
mov
dec
inc
lds
fwait
add
in
cmpsb
xchg
fucomi
adc
movsl
outsl
fnsave
inc
repnz
mov
ljmp
mov
mov
push
cs
xchg
and
or
int3
jg
decl
or
loope
pop
mov
pop
popf
cmpsb
jl
fsubs
adc
inc
sub
pop
push
dec
add
loop
push
push
pop
adc
and
fstp
les
call
mov
xor
aam
xchg
fiadds
mov
cmp
pop
es
movsb
xchg
dec
call
pop
push
inc
lcall
hlt
adc
mov
pop
incl
or
pop
aas
sbb
clc
std
sbb
fisttpll
mov
in
incl
dec
inc
pop
lret
test
xchg
jl
enter
daa
sbb
sbb
scas
lahf
shll
xchg
push
out
mov
pop
inc
pop
inc
idivb
rcll
dec
lret
push
xchg
mov
incl
push
xor
mov
data16
inc
ja
push
pop
sub
mov
aaa
jmp
out
jns
hlt
adc
dec
inc
icebp
ja
idiv
out
cmp
aam
mov
out
js
jmp
sbb
xor
sbbl
loope
mov
jg
lods
orb
mov
xchg
sub
test
pop
fldt
repnz
sahf
call
out
leave
leave
mov
test
scas
inc
adc
jns
repz
fnstcw
add
push
call
out
cmp
xchg
or
in
addr16
ljmp
jecxz
out
jns
in
pop
loop
cmpsl
ficoml
push
and
dec
outsb
mov
ljmp
xor
dec
jb
add
cli
mov
outsl
push
scas
push
cmc
adc
inc
cwtl
cltd
ljmp
lock
jns
shrb
jle
aad
inc
xchg
or
mov
leave
gs
mov
sti
jmp
add
ret
and
leave
popa
int
cmp
insb
jmp
and
jge
fidivs
push
xor
daa
adc
lcall
lcall
es
jno
sub
mov
lcall
idiv
aaa
clc
incl
ljmp
ja
stos
xchg
lret
bound
inc
jo
scas
mov
outsl
pop
xchg
fsubl
cs
xchg
cli
sbb
call
decl
jmp
addb
mov
mov
and
scas
mov
ljmp
add
mov
adc
inc
adc
divb
xchg
movsl
xor
inc
mov
ret
or
ficompl
movsb
cltd
xchg
xor
ljmp
insl
subb
data16
xor
cld
scas
in
sbb
xor
call
ljmp
and
andl
fbld
cmpsb
into
dec
test
out
mov
jg
stc
push
or
insl
outsl
test
pop
cmp
jb
iret
adc
test
loop
xchg
cld
incb
cmp
outsl
xchg
mov
push
rolb
sbb
ljmp
mov
bound
xchg
int
push
mov
mov
fcomi
pushl
dec
xchg
add
neg
pusha
ret
cwtl
sub
aam
aaa
subb
fsubrs
push
ljmp
add
insb
lods
pushf
in
cli
fstps
pop
je
popf
push
push
and
add
iret
push
lcall
popa
orb
and
mov
cli
cmp
mov
scas
push
push
ror
lret
ljmp
lret
pop
inc
jo
std
lds
fstpl
lret
mov
adc
mov
add
loope
xchg
repnz
xor
aaa
inc
js
lock
lcall
sbb
push
mov
pop
jl
sbb
sub
out
pop
mov
pop
iret
jmp
sub
xchg
gs
adc
xor
push
inc
lcall
xor
cmc
push
mov
incl
icebp
dec
inc
push
mov
adc
pop
test
ficomps
dec
mov
nop
mov
lcall
inc
lods
xchg
or
jne
sbb
sti
mov
ds
jmp
jne
test
pushl
push
or
xlat
pop
lcall
divb
jbe
or
fistpll
cmp
or
nop
subl
sbb
sbb
jmp
ficomps
stos
pop
inc
loopne
ja
sub
xor
sbb
mov
inc
push
xchg
mov
and
or
xchg
inc
ljmp
in
push
bound
inc
adc
movsl
daa
inc
sub
xchg
ljmp
in
jle
add
xor
mov
cmpsb
test
in
ljmp
sbb
aam
call
jo
and
insl
adc
xchg
clc
and
push
fisttps
pop
out
add
loop
aaa
clc
jecxz
jbe
sub
enter
push
mov
ja
clc
cmpsb
add
jmp
inc
scas
inc
stos
mov
cmp
push
inc
fildl
sbb
out
aaa
push
aas
pop
or
stc
sub
xor
mov
add
popf
jecxz
insl
mov
add
cmp
shl
push
xor
mov
pop
call
clc
decl
ret
adc
aas
sbb
hlt
jne
and
stos
dec
incl
ljmp
divl
mov
cmpl
dec
adc
aaa
cli
pushl
cmpsl
dec
mov
dec
ss
es
testb
fs
pushl
fs
jecxz
lret
pop
cmp
lea
scas
jnp
leave
mov
inc
test
push
rclb
adc
pop
dec
fcmovnu
push
idivb
inc
fsubrl
mov
and
inc
and
mov
rclb
mov
xor
pop
and
icebp
mov
inc
mov
xchg
mov
rcll
pop
stos
dec
xchg
std
aam
or
pop
inc
das
pop
call
fidivs
sti
xor
xchg
ljmp
dec
inc
mov
arpl
and
js
ret
jmp
jg
dec
cld
mov
add
lahf
enter
xor
jp
adc
pop
call
fs
dec
loope
xchg
mov
add
inc
add
add
push
divl
stos
or
adc
push
push
fisttps
or
pop
adc
call
inc
scas
shrb
pop
or
adc
das
bound
dec
icebp
adc
jo
ret
loope
jae
dec
call
out
lock
adc
sarb
mov
jno
je
jg
fimull
mov
out
sbb
cmp
es
cmp
les
mov
pop
jbe
add
lret
ret
lcall
inc
and
push
leave
aaa
sub
rol
pop
scas
or
lahf
mov
push
movsl
mov
fadds
mov
imul
mov
call
gs
in
mov
js
xchg
add
pop
sahf
fcmovbe
add
sub
pop
mov
mov
mov
loope
int
scas
loop
int
mov
or
out
pop
rorb
fsubrp
dec
push
pop
mov
shlb
out
push
xor
sar
sahf
rcl
pshufw
xor
inc
pop
movsb
mov
add
cmc
cltd
stc
jmp
push
jne
pop
jns
nop
cmp
xchg
add
or
stos
stos
mov
aas
in
inc
jns
and
jo
cmpsb
jmp
test
mov
or
jmp
repz
cmp
mov
xor
jb
repz
cmpsb
test
lcall
push
hlt
push
sbb
jg
gs
push
jp
cwtl
out
sti
jbe
push
jle
icebp
hlt
cmp
mov
call
add
mov
rcr
les
jmp
inc
or
inc
pop
push
stc
jecxz
inc
stos
push
and
pop
leave
sub
jae
insb
in
test
cmpsl
or
movsb
ljmp
dec
fwait
pusha
cmp
aas
out
and
rcr
test
cli
dec
pop
jmp
dec
pop
fisttps
mov
mov
scas
sbb
sti
inc
leave
sahf
popa
ss
xchg
testl
adc
mov
jge
sub
push
paddsb
or
out
aas
stos
clc
hlt
andl
test
dec
jns
xor
fldcw
jmp
jbe
dec
push
jg
pushl
or
mov
repnz
jnp
lods
fstps
push
jno
jae
mov
push
pop
jmp
sti
push
sbb
sarb
mov
ja
push
daa
pop
icebp
rcl
cmp
adc
les
mov
stc
decl
ljmp
test
mov
in
test
hlt
scas
lret
cld
jmp
sub
jno
or
test
add
xchg
jbe
pop
out
jb
jge
mov
lret
aas
adc
pop
mov
test
movsl
push
dec
out
mov
pop
repnz
or
sub
ds
icebp
in
add
int3
jecxz
and
aad
adc
mov
repnz
cltd
jmp
mov
lret
adc
lock
jg
repnz
repnz
ds
or
stos
xorb
leave
cmc
add
ljmp
sbb
iret
lcall
repz
mov
jb
push
lds
fldcw
repz
loope
daa
mov
insl
mov
out
loopne
xchg
xchg
aas
mulb
lret
jg
aad
test
das
in
cld
add
das
cmc
add
push
dec
addr16
jns
and
mov
int
lret
in
enter
sbb
incl
pop
decb
push
xchg
sbb
xor
and
mov
out
lcall
decl
fistps
imul
lret
adcl
insl
jmp
fstpt
mov
ficoms
das
xchg
inc
push
aaa
ds
jo
pop
ljmp
jo
repz
movsb
jne
xchg
lret
jmp
movsb
push
xor
lock
ficompl
in
bnd
pop
stos
lods
gs
cmp
pop
fisubl
mov
sarl
das
xchg
dec
loop
out
stos
mov
addl
xor
in
in
push
leave
loope
das
mov
mov
arpl
dec
pop
fs
sahf
dec
push
xchg
outsl
notl
push
test
mov
adc
cld
pop
xchg
cmp
icebp
cmp
jb
into
bnd
bnd
push
lds
sbb
out
out
lahf
repnz
lret
cmpsl
dec
adc
mov
loop
lea
leave
in
mov
xor
pop
cs
lret
jo
subb
add
jecxz
lret
in
mov
int
dec
add
mov
push
out
out
xchg
lret
in
or
push
xchg
rep
ret
sbb
mov
mov
call
loop
xchg
lret
in
lock
stos
mov
jb
pop
push
and
dec
pop
cs
lret
into
push
js
push
push
jnp
jl
in
mov
lock
mov
jnp
in
das
adc
mov
mov
in
adc
ja
cmp
pop
jns
jb
mov
test
cmp
lret
dec
xor
mov
jb
leave
pop
mov
lds
inc
mov
xchg
aas
enter
pop
movsb
inc
adcb
and
fsubr
clc
daa
das
xchg
dec
test
call
inc
mov
sti
mov
loopne
pop
das
call
pop
mov
mov
data16
fwait
repz
pop
ds
jg
mov
mov
movl
inc
xor
jmp
push
les
xor
lcall
or
fs
add
xchg
dec
cltd
xchg
jmp
stc
movsl
movsb
lret
or
push
jp
test
das
aad
ss
out
push
iret
rorb
sbb
mov
xor
stos
mov
inc
cmpsb
xor
or
push
jg
iret
insl
in
or
outsl
mov
mov
aad
cmp
lea
jmp
push
inc
sub
les
or
rorl
lahf
cli
leave
das
call
mov
in
int
dec
rcll
out
fisubrl
movsl
stc
mov
inc
cwtl
jmp
jle
test
std
test
push
jg
dec
xchg
in
pop
sbb
dec
dec
xor
xchg
inc
or
dec
cmp
inc
jb
jns
jge
pop
xchg
and
loope
add
mov
es
pop
das
lcall
push
push
lds
pop
fsts
mov
mov
jg
mov
pop
movsb
test
test
push
jle
xchg
sbb
dec
sarl
push
shlb
idivb
mov
xchg
idiv
in
movsb
or
jg
push
pop
sub
add
sahf
sar
sti
lock
cmp
mov
enter
jmp
push
cmp
cmpsb
push
mov
jne
mov
sbb
iret
or
xchg
dec
repz
adc
and
pop
cmp
mov
or
shlb
das
sahf
mov
pop
repz
dec
stc
stos
add
insb
add
cmp
bnd
mov
fdivs
xor
fbstp
cmp
hlt
lock
jecxz
sbb
movsl
js
pop
push
mov
adc
scas
subl
xor
aam
adc
push
mov
cltd
jmp
cmc
outsl
lret
icebp
lock
sbb
scas
mov
mov
stos
inc
sbb
inc
out
mov
out
iret
mov
bnd
mov
add
lds
testl
arpl
lcall
adc
mov
lods
ds
and
jmp
enter
inc
popa
div
in
es
adc
dec
xor
push
test
cmpl
jge
cmpsl
arpl
xlat
ss
movsl
pusha
loope
and
mov
mov
test
scas
adc
sub
pop
repnz
fadds
push
fwait
cs
dec
xor
mov
stc
adc
fs
call
dec
sub
decl
int3
jnp
in
in
sti
mov
jmp
jp
in
sbb
stos
sub
push
cmp
lcall
lcall
push
dec
and
inc
ljmp
pushl
dec
nop
orl
add
push
push
pop
shll
out
jo
jl
cld
mov
lds
pop
negb
test
adc
das
dec
adc
loopne
out
rolb
adc
dec
xchg
xchg
lods
or
mov
sub
rol
sub
mov
call
loope
mov
sub
out
push
insl
sbb
xchg
in
faddp
jp
ljmp
mov
inc
loopne
js
cmp
pop
jg
pop
xchg
add
in
sub
and
xor
rcrb
outsb
jae
or
xchg
mov
mov
pop
fsub
jg
inc
std
in
mov
shll
cld
aaa
pop
mov
mov
int3
jmp
dec
sub
call
clc
out
jb
cmp
ja
imul
sbb
loopne
mov
fbld
cwtl
adc
lods
loopne
insl
ret
adc
insb
mov
dec
insl
mov
mov
decl
test
int
sahf
mov
test
scas
enter
imul
int3
pop
nop
adc
hlt
in
shlb
xchg
inc
pop
xchg
cmp
sub
jmp
sbb
outsl
lock
push
lcall
loop
stc
pop
popf
addl
pop
or
pop
adc
lea
sahf
out
cli
in
mov
shll
dec
cltd
ja
fadd
pop
loopne
fisubrs
pusha
incl
ret
lcall
lcall
sbb
ror
pushf
mov
cmp
ljmp
ret
movsb
ljmp
shll
cmp
iret
cmp
aas
push
inc
dec
icebp
int
shll
adc
test
adc
call
lahf
aad
aad
outsb
and
movsb
sbb
or
loope
dec
lret
jmp
mov
cmpl
int
loop
out
jmp
mov
pop
xchg
lock
ja
mov
int
ljmp
negl
fistl
mov
aam
repnz
stc
add
in
dec
decl
mov
mov
enter
or
dec
outsb
imul
pop
pop
dec
movsl
and
inc
ret
rcrl
call
add
xchg
mov
icebp
loop
mov
mov
lret
std
rolb
std
sub
add
add
lahf
jmp
cltd
in
decl
sbb
cld
xor
mov
js
adcb
lret
push
dec
lds
stc
adc
inc
xor
jmp
cmp
pop
mov
add
and
mov
aaa
cmc
shlb
sbb
lods
out
out
outsb
add
jmp
cmc
repnz
addb
xor
cmc
pop
repnz
and
push
mov
jbe
cmpsb
jmp
sar
push
dec
insb
xchg
orb
jo
cld
inc
or
or
shr
jecxz
push
aas
jmp
and
mov
push
jno
mov
mov
cld
popa
jge
ret
shl
pushf
aaa
jg
fbstp
lock
fs
xchg
mov
test
outsb
xchg
push
inc
movsl
pop
gs
adc
out
stos
pop
cwtl
lcall
sub
fldl
xchg
daa
ret
jg
jg
addb
cmpsb
ljmp
and
mov
push
dec
clc
jge
sbb
mov
test
int
and
push
cld
pop
imul
bnd
stos
sar
imul
aad
pop
inc
das
xchg
pushl
int
push
push
or
xchg
jecxz
add
lock
aas
clc
mov
fwait
int
lcall
decl
jae
inc
xchg
add
and
sbb
lea
loopne
mov
call
pushl
dec
pop
repnz
jmp
ss
push
lret
push
in
stc
or
xchg
scas
icebp
xor
not
mov
lcall
mov
jbe
push
adc
add
into
jb
imul
jne
stc
jmp
in
push
mov
xor
and
dec
mov
movl
into
adc
push
lock
mov
test
mov
stc
lret
sbb
les
fildll
les
pop
movsb
lret
ficomps
call
mov
mov
xchg
jg
mov
fstl
pushl
lret
sahf
pop
adc
lret
jecxz
movsb
setge
cwtl
xchg
mov
or
dec
repnz
jb
mov
dec
rcrl
inc
pushl
arpl
add
inc
out
and
lcall
orb
or
icebp
mov
cld
in
fsubs
js
roll
xor
cld
incl
or
stc
aaa
lahf
mov
js
jns
out
sub
loop
dec
clc
stos
sbb
mov
lods
jg
mov
pop
jne
fldenv
in
test
dec
xor
rcrb
cmp
jo
lahf
jb
nop
push
cld
lcall
add
mov
into
pop
push
adcl
cmp
cmp
lret
lcall
mov
in
dec
and
repz
ss
les
enter
call
out
mov
xchg
aas
inc
dec
sbb
mov
jnp
and
xlat
xchg
cmpsl
sbb
decb
cmp
mov
ljmp
fidivl
cmpb
cmp
and
lds
ret
cmp
and
inc
inc
pop
incb
push
or
jle
stos
out
je
es
sbb
stc
jg
pusha
cli
jmp
leave
decb
rcll
mov
mov
add
clc
xchg
cmpsb
imul
call
dec
sub
std
out
incb
adc
lcall
dec
insl
sub
fdivr
jmp
std
call
jg
rorl
nop
or
mov
rcrl
jg
mov
xchg
shrl
lds
das
jge
push
cmpsl
and
jg
xchg
ss
arpl
js
push
movsl
hlt
fidivrs
in
jmp
sarl
ljmp
fadds
negb
lcall
jg
cmp
jo
jle
pop
cwtl
push
lcall
or
adc
psubq
sar
shlb
inc
cmp
lea
iret
fcmovnb
arpl
jmp
fmulp
mov
push
cmc
jb
cmp
cmp
pop
ja
imul
decl
or
iret
xchg
loopne
insl
test
rcll
test
cltd
pop
lret
dec
lcall
sbb
mov
mov
fdivs
cmpsl
or
imul
in
icebp
enter
movsl
cmc
loope
inc
xchg
daa
xor
push
mov
mov
pop
add
mov
mov
pushf
sarb
ficompl
and
push
dec
and
lcall
stos
fstpt
dec
xchg
xchg
js
sbb
jp
xchg
movsl
loopne
loope
test
xor
and
xor
mov
dec
cmp
and
pushl
jne
rorl
lods
mov
cmp
lcall
jns
dec
addl
pop
leave
les
icebp
roll
mov
mov
notrack
or
cwtl
cmp
aam
mov
fistps
mov
idiv
inc
jg
repnz
lcall
adc
insb
xchg
pop
movb
mov
mov
std
out
hlt
jg
bnd
lcall
fldcw
cmc
ja
xchg
mov
pop
mov
shl
mov
mov
fdivrs
push
mov
popf
add
xchg
rorb
mov
cwtl
shrb
fidivl
and
push
or
mov
lcall
xchg
mov
fxch
inc
jle
mov
lret
fs
fwait
ljmp
lahf
mov
and
out
je
es
dec
jae
or
fwait
xabort
ljmp
rorl
test
jecxz
shlb
fs
xchg
out
dec
sub
cmp
fwait
mov
mov
xchg
pop
call
xor
push
aam
adc
cmp
insb
cwtl
pop
rol
outsl
call
jbe
icebp
mov
into
std
enter
push
push
rolb
mov
cmc
dec
out
movsl
out
outsl
lcall
sub
pop
ds
sub
mov
stos
cs
repz
icebp
dec
orl
mov
scas
mov
lcall
js
sub
fwait
ljmp
mov
lret
and
adc
out
lahf
fldt
push
aaa
sbb
nop
jmp
ficompl
push
pop
cmpb
ljmp
pushl
in
leave
into
lods
sbb
jg
filds
decl
mov
fisubl
inc
incl
sub
clc
jb
cmp
lds
rcl
int
sbb
cwtl
push
sti
aaa
int
push
adc
insb
nop
pop
enter
pusha
xchg
std
in
jge
lcall
hlt
test
scas
ret
outsb
sbb
insl
pop
mov
mov
jb
cmc
movsl
adc
sar
jnp
jl
loope
ss
add
dec
mov
ljmp
mov
scas
nop
cltd
cltd
stos
fistpll
jae
mov
pop
xchg
int
mov
stos
stc
mov
incl
pop
inc
dec
push
inc
out
lahf
mov
dec
cmp
adc
lret
enter
jae
or
push
dec
or
pop
sbb
pushl
cmp
or
std
jb
decl
ja
imul
out
xchg
push
or
cmp
repnz
jbe
les
test
ret
neg
xchg
mov
sub
cs
loop
call
filds
imul
xor
xchg
jle
xchg
cmp
icebp
xorl
sbb
lea
adc
sbb
dec
add
or
cmpsl
mov
out
movsb
call
mov
test
inc
jl
dec
and
in
or
shll
xchg
lret
mov
hlt
rcr
mov
mov
cmpsl
push
mov
sub
pop
add
lock
mov
push
ret
mov
inc
sti
jmp
popa
insb
sbb
jle
bound
lds
jno
decl
movsl
cmp
cmp
fmulp
sbb
xchg
jmp
aad
arpl
pushf
dec
bswap
repnz
push
ljmp
stos
or
xchg
sub
jl
movsb
xchg
push
loopne
lock
or
pushf
shlb
inc
jns
fnstenv
mov
xchg
push
aas
dec
aam
jecxz
rcrb
hlt
mov
clc
pop
cli
fdivr
ss
std
jmp
fistpl
cltd
incl
dec
call
mov
repz
lcall
sub
outsl
pop
xchg
push
test
lcall
mov
call
dec
imul
pushl
adc
push
inc
ret
iret
out
movsb
adc
out
mov
cs
adc
xor
jnp
jne
cmp
std
mov
mov
push
outsl
cs
and
aam
xchg
decl
pop
loope
mov
mov
adc
push
std
inc
fcmovbe
aaa
out
mov
test
out
incl
add
dec
sahf
call
aaa
stc
or
pop
lock
xchg
ja
aas
mov
inc
ljmp
mov
negl
jmp
test
stc
mov
lcall
adc
decl
incl
jo
popl
or
call
subb
subl
push
inc
mov
loopne
pusha
adc
add
adc
jmp
lret
int3
imul
xlat
cmc
cli
pop
dec
lcall
stc
and
lds
test
push
das
inc
jns
jp
ss
and
and
das
mov
jmp
nop
jmp
mov
mov
lods
push
icebp
out
loope
jg
sarb
xchg
inc
imul
call
jp
push
cld
and
cmc
or
xchg
push
mov
sub
and
out
bound
movsl
ljmp
push
sarl
dec
push
pushl
jl
pop
jne
jecxz
lods
xor
lcall
pop
sbb
lcall
mov
rcr
and
pop
or
lea
xchg
lcall
std
or
pusha
jle
mov
lret
sub
stos
push
adc
pop
push
jl
jle
cmpsb
fwait
outsl
loopne
cmp
ljmp
leave
or
lods
mov
push
jmp
pusha
inc
push
addl
insl
ljmp
call
mov
mov
notb
sub
divl
cmp
lock
jge
add
imul
sbb
decl
sbb
sbb
nop
shl
insl
sbb
adc
sbb
inc
rorl
mov
loopne
sub
decl
xchg
decl
cwtl
stos
bound
sub
pop
sbb
and
pop
cltd
pop
add
aam
repz
dec
inc
rorl
repz
pop
scas
xchg
add
lret
repz
xchg
stos
fstpt
subb
adc
adc
adc
cmp
and
decl
push
push
mov
sbb
xor
pop
sbb
mov
jmp
ror
mov
push
sub
jb
pop
aaa
sbb
lds
jmp
ljmp
pushl
or
aam
repnz
stos
adc
insb
xchg
pop
ret
aaa
arpl
jl
fdivr
mov
lcall
dec
push
out
test
jl
fistpll
pop
cmp
jmp
inc
mov
cmp
sbb
xchg
loope
or
jns
lcall
xor
add
pushl
inc
and
aad
or
mov
rcrb
cmp
sbb
mov
lret
and
lret
xor
stos
xor
jl
or
pushl
sbb
fistpl
jmp
jae
or
in
call
mov
aas
mov
inc
sub
in
leave
lcall
shll
mov
fisttps
cld
cld
fs
mov
sub
lea
call
imul
sbb
mov
fists
dec
aam
repnz
mov
pop
insl
mov
mov
int
loope
arpl
mov
mov
xchg
std
ret
jge
sti
mov
lcall
arpl
test
scas
lcall
daa
pop
movsl
dec
xlat
push
jg
hlt
movsl
mov
loopne
lret
daa
jno
das
mov
loopne
aas
pop
enter
push
push
lods
icebp
fdivr
ja
adc
mov
mov
jmp
pushl
or
and
add
dec
scas
mov
fildll
out
mov
push
jle
cmc
dec
repz
push
pop
aas
call
xlat
pushl
push
je
es
or
ja
pushl
pop
mov
sarb
mov
inc
data16
decl
out
sahf
test
aam
push
sub
inc
pushl
es
lock
xchg
sbb
mov
cmpsl
or
daa
cwtl
cmp
mov
loopne
insl
xchg
adc
ljmp
cmc
nop
popa
dec
jmp
mov
lcall
clc
add
fldl
outsb
pop
cmc
pop
pop
rorb
pop
repz
xchg
filds
mov
out
cmp
pop
inc
incl
icebp
filds
xchg
jmp
rorb
fimull
stc
test
decl
or
out
and
into
mov
les
daa
jg
incl
lcall
call
push
cld
stos
push
adc
pop
call
pop
jae
or
cld
adc
xor
and
out
jae
outsl
pusha
inc
in
pop
cmp
and
in
lcall
pop
xor
int3
jmp
repz
sbb
movsb
mov
jnp
repnz
and
push
fcmovu
cmpsb
adc
pushl
mov
clc
mov
cli
pop
nop
cmp
gs
add
mov
out
loop
sbb
mov
in
jmp
inc
lcall
lret
pushl
gs
or
shl
sbb
lcall
push
inc
outsl
cltd
pop
fs
dec
xor
out
xchg
dec
xor
call
lea
in
int3
mov
cld
pop
cli
cmp
clc
add
gs
jmp
pop
dec
jg
inc
aas
jo
push
add
lcall
mov
mov
es
ret
shlb
lcall
jg
pushl
cmc
mul
into
inc
inc
aas
adcl
call
dec
loopne
or
xchg
xor
js
lcall
stos
cs
adc
lock
jle
and
fwait
sub
adc
fucomip
mov
loope
dec
pop
js
mov
cmpsl
jb
decl
sub
out
jae
jp
pop
outsb
stos
shrb
mov
nopl
addl
xlat
add
and
sub
decl
fwait
jae
incl
mov
rolb
addr16
sub
xor
mov
jg
adc
mov
xchg
push
inc
dec
sbb
jmp
int3
fwait
cmp
out
push
int
aas
fucom
shl
mov
gs
pop
jbe
mov
pop
gs
dec
mov
pause
push
call
ljmp
and
pushf
cmp
sub
lea
das
jge
andb
shll
mov
xor
jg
mov
jp
movsb
ds
push
in
pop
mov
push
xchg
stc
pop
test
cmp
cmc
popf
mov
adc
std
repz
push
addb
stos
mov
movsl
incl
mov
loopne
mov
mov
sub
adc
jno
test
pushl
pushf
cmc
cmpsl
jae
sbb
sub
dec
lret
dec
inc
mov
mov
rcrl
pop
decl
push
or
hlt
insb
pop
jl
xchg
int3
mov
adc
out
dec
sub
loop
xor
or
pop
lcall
sbb
pop
and
xchg
or
pushl
ds
mov
xchg
in
clc
mov
outsl
popf
ss
enter
mov
pop
lret
scas
lcall
aad
push
inc
filds
test
call
mov
fwait
movsl
jmp
jecxz
mov
fcmovne
fwait
fcmovbe
or
jno
mov
adc
mov
sbb
jg
cwtl
jne
or
sub
pop
loop
or
je
add
repnz
dec
dec
fstpl
fdivs
aas
lcall
push
lret
clc
or
cmp
pop
ds
cmp
mov
xchg
decl
popa
pop
out
jb
push
cmp
push
fists
std
call
ss
cmp
arpl
mov
jae
push
incl
out
sub
ss
js
mov
ja
das
cld
lret
call
cld
or
xchg
insb
inc
in
lret
xchg
in
leave
cmp
jg
nop
and
arpl
cli
xchg
testb
subb
mov
scas
xor
pop
fisttpll
lahf
lret
in
out
lods
xor
out
pop
std
jnp
inc
ljmp
sub
lock
dec
testb
mov
lcall
xchg
xor
rcrb
ret
js
ret
pop
cld
push
mov
inc
dec
sub
jmp
add
cmp
out
adcb
shll
call
call
je
mov
sbb
sti
add
push
addr16
clc
mov
cmp
cmp
ds
das
fisubrs
in
ds
cmp
fbld
xor
xchg
jp
jmp
jmp
push
cltd
inc
aam
or
int
cmpsl
aas
push
sbb
mov
jle
icebp
pusha
xor
loope
and
mov
loop
push
outsb
rclb
call
decl
push
mov
jno
pop
repnz
jl
adc
mov
idivb
sar
pusha
xor
enter
lods
lahf
sub
sahf
movsb
outsb
fists
pop
push
sbb
fisubrs
call
jmp
sub
cmp
mov
movsl
out
push
lcall
outsb
mov
cld
cmpsl
leave
xchg
das
ljmp
ljmp
pop
das
loop
xor
daa
mov
dec
mov
decl
sub
xor
mov
mov
push
push
push
or
loop
mov
mov
fdiv
je
stos
sahf
and
or
aaa
jo
jg
leave
lods
mov
jbe
xchg
sbb
adc
mov
or
or
jg
pop
push
dec
ljmp
sarb
and
fnstenv
cmpsb
dec
sahf
lods
movups
stos
inc
xchg
jnp
mov
clc
test
and
mov
mov
mov
outsl
adc
incl
incl
mov
adc
aaa
mov
mov
mov
and
lahf
push
sbb
push
mov
lds
js
fbld
mov
stos
push
mov
ljmp
push
push
clc
je
xor
test
popa
or
pop
stc
inc
mov
add
std
dec
pushl
daa
dec
in
fnstenv
aam
pop
clc
dec
jb
inc
out
xchg
inc
and
pop
scas
jg
ljmp
push
orb
dec
push
jl
pop
iret
cmp
jo
lcall
and
jne
jg
push
out
jecxz
movsb
jno
dec
inc
ret
push
ja
les
inc
je
inc
inc
push
stos
or
sar
pop
cli
xor
push
inc
mov
add
fisttpl
test
aas
cld
fnstsw
lcall
cmp
dec
mov
in
lock
pop
push
mov
push
or
decl
adc
sbb
xchg
pop
lods
popf
nop
mov
xchg
leave
lcall
xchg
mov
popa
cld
push
push
jmp
mov
decl
lcall
xchg
add
dec
fsubrp
imul
cmp
mov
xchg
pop
dec
add
test
out
cmp
jl
pop
pop
jg
jmp
xchg
cld
and
or
data16
cmp
ljmp
sub
cmp
lods
xor
decl
test
mov
cmpsl
inc
xor
xor
add
loope
mov
pusha
sbb
mov
xor
adcl
lcall
fld
push
jo
cmpb
ss
popf
out
je
hlt
ljmp
cs
addb
faddp
mov
xor
cli
ds
xchg
in
ror
dec
sub
lcall
add
arpl
xor
inc
jg
cmp
adc
data16
add
fdivrp
inc
leave
jl
scas
mov
inc
addr16
lcall
xor
and
xor
ljmp
icebp
incl
xor
lods
cmp
test
decl
cmp
mov
pop
ret
inc
dec
aad
das
decl
aam
xor
das
into
in
insl
sbb
lds
or
decl
mov
lock
fmuls
jne
enter
xchg
daa
nop
and
sar
fxch
andl
jns
pop
dec
xchg
subl
int
call
or
or
out
xchg
inc
bnd
jns
stc
cmp
jg
bound
cmp
jo
mov
xor
faddp
jnp
pop
inc
mov
movsl
jge
add
scas
sbb
repnz
int3
mov
ljmp
aam
aaa
ds
in
jae
cli
xchg
dec
pop
cli
pop
xlat
or
adc
jg
ljmp
xor
jecxz
fdivrp
bound
pop
movsl
shl
sbb
xor
imulb
pop
and
roll
and
push
incl
jne
xor
lods
cltd
or
xchg
mov
push
clc
aas
out
fwait
int
xchg
cmp
pop
ficompl
cs
mov
loop
xchg
aam
lcall
mov
test
lret
xor
mov
xchg
add
mov
or
and
js
mov
mov
sbbl
mov
fmull
daa
jo
and
imul
or
mov
popa
decl
je
mov
dec
lcall
cmpb
mov
outsb
shl
lcall
xor
adc
mov
jmp
jno
mov
push
mov
push
cld
pop
insl
scas
repz
xor
push
cltd
sarl
mov
rcrb
inc
pop
mov
push
call
iret
jg
pop
push
cmpsl
lret
pop
fildll
fsub
dec
xor
jbe
psllw
cwtl
mov
push
test
shll
pop
shrl
mov
mov
daa
pusha
sbb
in
repz
xor
xlat
push
adc
adc
gs
mov
pop
outsl
call
mov
scas
jge
add
in
das
mov
dec
dec
push
sar
push
lret
jmp
xchg
and
or
jo
xorl
movsb
je
pushl
loop
add
lock
or
lret
outsl
aam
incl
sti
cmp
nop
iret
jg
mov
cmp
rclb
lret
int
mov
xchg
mov
ljmp
std
pop
xchg
push
out
pop
das
mov
xchg
ljmp
lret
mov
adc
push
add
mov
xchg
fstp
insb
inc
cmp
sub
repnz
push
ljmp
or
loope
das
adc
dec
sbb
sbb
pop
jbe
in
mov
push
pop
push
pop
test
test
cmp
cld
mov
cmp
xor
stos
mov
jg
decl
jecxz
pop
jo
mov
push
add
jmp
sar
mov
mov
leave
push
jmp
lret
dec
rcll
and
clc
clc
xchg
cli
loop
sahf
adc
sahf
addr16
add
xchg
decb
pop
and
cmp
test
jg
incl
loopne
int
lods
or
inc
lret
lcall
jb
pop
incl
loop
addr16
mov
aad
xlat
or
cmpb
mov
cmp
mov
outsl
je
stos
inc
mov
jp
xchg
and
push
xor
jg
clc
lcall
cmp
jge
pusha
push
incl
dec
js
bnd
ljmp
lds
xor
sti
std
pushl
xchg
xor
mov
dec
daa
push
outsl
hlt
sbb
test
pushl
and
fmuls
push
ljmp
jp
std
decl
ret
nop
pop
fnstsw
inc
out
sub
mov
in
ljmp
xchg
in
and
jg
jmp
sbb
mov
aaa
enter
jb
ljmp
test
test
lcall
jg
push
inc
rclb
je
std
imul
out
adc
mov
cmp
lahf
push
add
lods
es
out
mov
shrb
adc
push
mov
int
aas
inc
cmp
mov
add
pushl
inc
call
int
outsl
ds
sti
gs
leave
rcr
stos
decl
call
lcall
sub
fcomp
lret
incl
xchg
rorb
jmp
xchg
mov
lahf
jl
mov
fildl
xchg
ja
add
ror
repnz
pop
lcall
lcall
hlt
sahf
adc
aaa
lods
push
aas
clc
sarb
mov
jmp
into
enter
cmpsl
test
xor
decl
test
cmp
pop
mov
mov
or
lahf
stos
leave
adc
out
jge
pop
repz
shrl
pop
jl
outsb
pop
mov
adc
sub
add
add
jmp
mov
enter
outsl
std
sbb
and
xchg
js
in
mov
loopne
add
test
out
ja
mov
adc
jmp
outsb
jmp
sbb
mov
cli
xchg
jecxz
and
mov
pop
loopne
xorl
aad
das
pushl
mov
mov
ljmp
cld
rcl
jecxz
imull
xchg
and
cmpsl
outsl
cld
ret
divb
cli
sbb
push
sbb
sbb
call
call
add
ss
in
xchg
cmp
mov
xchg
shll
fnsetpm(287
push
adc
pop
loopne
clc
mov
sahf
in
pop
jmp
push
sbb
push
aam
ljmp
mov
and
xchg
rcrl
cmp
test
add
xchg
jp
fiadds
dec
push
decl
repnz
decl
mov
sbb
mulb
aam
cmp
and
ds
ds
cmpsl
icebp
loope
clc
test
lcall
mov
adc
cs
xchg
inc
ss
mov
hlt
imul
cld
push
mov
into
fimull
and
jmp
or
mov
stc
les
push
aaa
inc
xchg
jnp
int3
pop
decl
je
xchg
pop
fsub
movb
dec
out
push
outsl
mov
sub
mov
or
mov
pop
sti
js
aas
call
mov
out
xor
cmp
aam
clc
mov
mov
call
mov
int3
rol
add
push
jg
insl
mov
imul
pop
sbbl
fwait
dec
sub
cld
jmp
push
aam
test
jge
sub
xchg
out
data16
filds
shlb
mov
push
cmp
sbbb
mov
sub
push
scas
xchg
rolb
cmpsb
pop
and
sbb
and
or
xchg
inc
test
push
mov
out
push
adc
or
ret
dec
push
lods
fdivrp
push
cmp
add
cmp
jns
cmc
loop
mov
push
sub
xchg
jecxz
mov
lods
mov
mov
pop
push
mov
jmp
jmp
pusha
mov
mov
add
xchg
fdivrp
push
ficomps
call
inc
push
or
ss
jbe
inc
daa
in
jmp
scas
jns
das
rol
in
fwait
decl
pushl
push
pushl
xor
cld
push
andl
mov
and
subl
or
call
push
imul
lahf
sbb
sbb
lcall
mov
jl
jle
sti
push
call
adc
idiv
or
adc
or
jmp
sarb
dec
xchg
andb
adc
jbe
call
mov
push
jbe
stos
push
fdivrs
ljmp
sub
pop
mov
sar
push
dec
cmp
lcall
pop
push
addr16
push
loopne
push
cwtl
mov
sti
cltd
push
jmp
cli
das
inc
leave
repnz
shrb
in
dec
aad
mov
mov
sti
loope
lds
fisttps
dec
das
je
ljmp
shl
or
cli
inc
addr16
lcall
jp
inc
add
push
and
mov
repz
clc
pop
stos
aam
lret
pushl
dec
mov
pop
pop
outsl
jo
pop
jmp
cwtl
push
test
or
rcr
loopne
lds
jns
dec
in
and
xlat
and
js
pop
jmp
jle
xor
fidivrl
cmp
clc
lcall
xlat
mov
push
inc
mov
mov
rolb
pop
sbb
jmp
or
push
testl
mov
fildl
sar
insb
ljmp
lcall
icebp
rorb
adc
icebp
sub
ja
loopne
xor
pushl
pop
bound
inc
mov
pushl
add
sar
pop
ret
cmpsl
xorb
xchg
lret
jg
iret
mov
cli
dec
pushl
adc
lods
inc
xchg
cld
fwait
sbb
incl
push
push
ds
add
sub
inc
neg
and
mov
lcall
and
outsl
test
fwait
sbb
jo
mov
mov
testl
insl
insb
mov
cmp
sub
shlb
sub
icebp
sbb
and
cld
and
sbb
inc
pushl
int3
inc
call
jmp
pusha
aad
xor
sahf
das
lcall
in
add
push
das
pop
sbb
shrb
call
pop
in
pop
jg
xchg
inc
jg
cld
fsts
jg
xchg
jg
incl
fcmovnbe
push
push
pop
cmc
lcall
std
out
fdivl
repnz
fbld
pop
jle
mov
call
lcall
es
lock
call
dec
adc
js
push
push
jmp
push
jo
inc
push
jmp
pop
insb
xor
imul
cmp
jg
aam
hlt
decl
nop
cmc
movsl
sti
addr16
popf
mov
add
ja
lret
xchg
inc
imul
mov
jecxz
inc
mov
test
bound
fwait
mov
fistpll
out
into
pop
clc
jg
add
xor
aad
nop
pop
sbb
push
and
fucomp
add
in
xchg
sbb
les
lcall
std
test
lret
push
xchg
nop
negb
cmp
decl
xor
iret
loop
lahf
pop
ror
or
lock
or
shll
pop
scas
sub
mov
mov
cmp
and
les
loop
lock
sar
stos
mov
cmc
or
fldt
imul
lods
mov
xchg
jae
call
in
lods
cmp
inc
mov
addb
push
loope
icebp
inc
adc
ja
xor
call
mov
jecxz
jp
mov
fbstp
inc
jns
jge
mov
dec
fcmovne
xor
xor
fdivr
rolb
lcall
cvtdq2ps
dec
jne
imul
inc
mov
fsub
lds
pop
loopne
push
lret
and
or
pop
inc
loop
pop
push
icebp
ds
xor
ljmp
insb
jmp
mov
ficoml
adc
inc
and
imul
mov
rcll
inc
xlat
push
push
in
sub
mov
and
cltd
out
insb
ds
les
mov
sbb
push
call
dec
sub
aaa
lcall
push
mov
push
sahf
mov
divl
ret
push
dec
mov
std
stc
or
dec
jl
aas
aaa
and
or
mov
mov
mov
subl
mov
outsl
fnstenv
decl
mov
pushl
or
and
popf
xor
fldl
or
ljmp
push
push
pop
lods
cmp
add
sbb
decl
inc
mov
xchg
pop
pushl
xor
sub
mov
mov
loope
pop
sbb
out
test
movsb
call
aam
loope
sub
mov
xstore-rng
cmpsl
int
lret
and
shlb
xor
ljmp
jae
mov
sbb
pop
cmp
mov
xor
movsb
mov
ret
lea
push
mov
cmp
jb
jae
incb
imul
decl
movsl
pushl
add
or
mov
mov
dec
pop
dec
adc
add
mov
jl
test
cmp
or
mov
cli
add
and
lahf
shlb
test
pop
xor
call
das
dec
cmpsl
repz
inc
inc
mov
insb
mov
fsubp
adcb
jl
insb
jmp
adc
clc
out
mov
sahf
xor
adc
mov
pop
ss
jge
cwtl
xchg
adc
jl
das
incl
push
and
sub
jmp
pop
in
lcall
xchg
test
pop
mov
dec
cmp
xor
jns
mov
movsl
decl
cmc
dec
fistps
std
xchg
adcl
in
xlat
icebp
inc
hlt
lea
cmp
mov
shlb
shrl
fisttps
sbb
mov
mov
dec
xorb
jg
ljmp
mov
cltd
inc
jle
iret
gs
test
or
dec
daa
lods
jae
out
stos
hlt
cltd
test
xor
xchg
ja,pt
or
icebp
test
outsl
std
inc
mov
add
xlat
das
jmp
jle
outsl
pushl
aad
xchg
jle
xchg
pushf
maskmovq
sti
mov
push
ret
hlt
sti
dec
mov
sbb
out
loopne
jg
mov
pop
bswap
push
inc
dec
call
aam
jmp
call
pop
ljmp
inc
rorb
mov
jo
mov
mov
push
jp
negl
cmp
xchg
rep
jg
out
push
aad
stos
xor
scas
stc
mov
sbb
pop
inc
nop
movb
mov
xchg
lods
and
cmc
lcall
add
mov
lcall
mov
in
pop
mov
sub
dec
les
imul
cli
into
jo
push
mov
lcall
jge
lcall
pop
xlat
dec
adc
js
inc
mov
orb
scas
iret
add
inc
leave
cmc
lcall
push
clc
dec
divl
mov
mov
shrb
and
mov
sbbb
xorb
mov
push
fs
iret
dec
pop
lahf
out
xor
sub
mov
aad
fbld
imul
inc
sbbl
aas
jmp
pop
lahf
cltd
int
fbstp
push
inc
adc
or
test
decl
dec
outsl
std
incl
movq
sub
repnz
jns
cltd
dec
out
popa
loopne
cs
decl
fidivl
decl
das
rcl
push
decl
incl
mov
jb
jns
xchg
xchg
insb
fwait
jle,pt
mov
lock
div
cmp
aad
scas
sahf
mov
stc
adc
push
push
jl
test
pushf
push
test
mov
mov
pop
push
inc
jns
push
cli
aam
add
loopne
clc
outsl
call
cmp
in
push
sub
leave
pop
test
ljmp
inc
dec
call
or
insb
and
hlt
addr16
loope
fmull
jmp
mov
aas
adc
mov
pop
mov
cld
leave
sbb
inc
iret
push
pop
bound
lods
sbb
sub
jg
lcall
jae
and
scas
insl
cwtl
in
mov
xlat
fstpl
in
loopne
cwtl
cmp
jmp
ljmp
les
cmp
xchg
repnz
test
in
jg
aad
pop
in
lret
stos
add
scas
in
insb
stc
lods
roll
jg
pop
xchg
sbb
aas
mov
inc
sbb
into
xchg
lcall
call
mov
imul
push
out
icebp
add
push
adc
push
scas
cmp
out
std
pop
call
push
or
and
rcrb
xor
fldt
icebp
jg
pop
xor
mov
in
inc
push
sub
notb
mov
mov
sbb
mov
sub
stos
push
insb
adc
jmp
inc
lock
std
movsl
call
inc
arpl
xchg
mov
and
repnz
dec
test
mov
pop
lea
jo
inc
lock
fwait
stos
insl
mov
repz
add
and
sbb
add
imul
lgdtl
jmp
repnz
mov
mov
fidivs
push
add
inc
adc
aaa
mov
xchg
decl
pop
movsb
mov
lods
or
cmpsb
inc
cmp
lret
xchg
dec
in
test
xor
cmp
jmp
push
test
es
das
lahf
lds
sbbl
mov
mov
aaa
xlat
cmp
mov
mov
divl
outsl
lock
push
imul
aas
inc
lahf
negl
xchg
cli
aaa
loopne
pop
idiv
ret
add
xchg
sbb
sbb
mov
mov
push
xchg
jbe
lret
xor
clc
in
in
mov
and
ljmp
mov
out
push
dec
aas
cli
movsl
btc
lock
jae
and
call
jg
push
popf
imul
mov
test
addr16
repz
lods
out
mov
and
mov
lock
inc
mov
js
and
adc
iret
es
push
lds
lea
mov
in
mov
or
insb
pushl
push
dec
std
xchg
in
or
clc
pop
gs
das
mov
mov
inc
push
cmp
aad
lcall
outsl
loope
call
ret
or
mov
aam
inc
mov
ja
les
and
xor
test
std
lahf
div
mov
dec
push
pop
jmp
push
dec
leave
dec
sub
cwtl
loop
xchg
push
mov
push
int
test
ror
mov
loop
push
jmp
add
gs
jmp
push
mov
lcall
fisubrl
decl
rorl
aas
push
xchg
in
cmp
cmp
jg
xchg
mov
lods
pop
bound
adc
jbe
popa
icebp
das
std
mov
mov
jbe
sub
repnz
outsl
ficoms
mov
fnsave
iret
sbb
push
cmp
push
mov
ja
out
and
or
decl
sub
test
mov
jno
cmp
in
and
mov
jmp
jp
push
bound
lods
jmp
outsl
adc
lcall
inc
es
jb
inc
mov
ret
push
jl
sbb
xor
jg
mov
decl
pop
in
push
in
push
and
les
pushf
push
pushf
repz
inc
ljmp
adc
inc
in
pop
mov
mov
mov
mov
jmp
push
sbb
or
mov
jb
mov
fnstsw
xchg
push
push
mov
xchg
ljmp
stc
dec
sub
xchg
loopne
adc
jg
adc
mov
test
push
sbb
and
call
scas
or
ljmp
mov
add
add
xchg
stos
fmuls
mov
fisubrs
clc
jmp
cmp
ficompl
loope
shrb
mov
ljmp
hlt
fistps
xlat
xchg
add
mov
xchg
mov
fidivl
adc
call
jmp
xor
hlt
and
add
cmpl
leave
sub
bound
ljmp
pop
add
popa
jbe
jmp
add
scas
sub
pop
dec
std
dec
cmp
xchg
in
jmp
sti
mov
call
decl
call
out
ss
dec
pop
mov
cwtd
incl
test
in
mov
mov
jo
call
int
scas
mov
fs
pop
out
leave
fildll
cmp
aad
push
push
sub
sub
xlat
data16
fnstsw
mov
negl
xlat
jns
xchg
faddl
add
mull
pop
loopne
hlt
pushl
std
stos
or
xor
in
cmpl
mov
dec
pop
inc
outsl
jecxz
incl
data16
dec
push
sub
lcall
lds
sub
sahf
imul
and
aaa
imulb
rolb
movsb
dec
pop
cmp
icebp
mov
mov
repnz
ljmp
jo
jge
fidivrs
fwait
icebp
cwtl
inc
jg
cmpsb
jmp
clc
push
add
mov
loopne
jecxz
pop
sti
push
fildll
or
xlat
mov
icebp
pop
add
lahf
test
jp
sarl
cltd
xor
or
xor
xchg
and
clc
shrb
mov
pop
mov
imul
jmp
ljmp
lcall
jnp
fs
sbbl
arpl
aam
sbb
mov
jg
push
movsl
pop
outsl
lea
sub
outsl
jmp
xor
test
xor
lock
imul
push
lds
stos
pushl
leave
add
sbb
and
das
push
clc
sub
lcall
pop
movsl
xchg
loope
or
jg
adc
orl
pop
aad
cli
outsl
cld
jg
push
xor
mov
roll
sub
out
shlb
inc
icebp
imul
imull
add
lcall
sbb
sbb
pop
fwait
jle
insl
arpl
xor
cmc
or
dec
pop
lret
aaa
inc
push
sbb
push
js
jg
jp
sbb
nop
lret
and
pusha
xlat
adc
and
adc
or
mov
in
fadds
iret
xlat
cmp
in
mov
cld
fmul
ds
in
add
int
aaa
jne
xchg
pop
loopne
push
jmp
mov
dec
mov
aaa
pop
es
xor
push
lcall
cltd
mov
incl
push
dec
call
dec
mov
ss
and
inc
dec
and
sar
ljmp
es
sbb
hlt
adc
leave
insb
sahf
stos
sbb
cmc
out
sub
incl
cmp
inc
push
scas
mov
ds
incl
les
iret
pop
test
lret
jmp
mov
nop
adc
ja
repnz
ret
aad
scas
in
mov
sbb
sbbl
push
scas
repnz
cmc
adc
sarb
outsb
jns
out
ror
gs
shrl
in
adc
incl
jl
lcall
inc
push
xor
aaa
lcall
aas
lahf
ljmp
push
aaa
add
pop
cmp
ds
pop
inc
sahf
pop
jle
push
push
dec
lcall
decl
movzwl
cld
incl
aam
adc
cmp
mul
push
out
inc
enter
mov
inc
jb
lcall
call
js
mov
enter
adc
incl
jl
jmp
out
iret
or
outsl
stos
xor
mov
fsubl
adc
outsl
jl
jg
lods
sti
shll
out
stos
mov
es
xor
pop
xchg
and
into
and
aas
add
fdivr
add
daa
jecxz
pop
or
jno
lcall
aaa
repz
popa
or
sub
mov
iret
push
push
cli
dec
mov
incl
and
jecxz
add
jg
or
int3
scas
les
xor
pop
mov
hlt
push
call
sti
cmp
ljmp
std
movsb
lahf
mov
loope
loopne
push
adc
cmp
lret
push
aam
cmp
sub
repz
jg
fnstsw
call
cmp
aaa
pop
sub
cmp
repnz
incl
clc
mov
mov
adc
das
icebp
loopne
incl
mov
pop
cmp
rclb
cli
pop
jmp
mov
or
je
cmc
outsl
into
push
and
ljmp
pushl
stc
loopne
cmp
shlb
pop
jge
pop
xlat
dec
mov
ret
roll
out
lock
outsl
ljmp
data16
lcall
xchg
mov
incl
or
mov
inc
outsl
je
mov
push
xchg
cs
fistpll
orb
out
lcall
xchg
imul
repnz
loopne
jmp
or
test
lret
jmp
xchg
mov
xor
sbb
repz
out
call
xlat
mov
jl
enter
jge
xchg
loope
or
outsb
icebp
ljmp
mov
adc
xor
inc
sub
mov
in
outsl
lcall
or
pop
gs
popf
pop
cmp
mov
inc
stos
jecxz
incb
pop
dec
inc
idivb
stos
or
ljmp
cmp
shlb
fdivrs
and
xor
dec
add
push
push
aad
mov
pop
mov
imul
aaa
sub
or
std
mov
or
hlt
jmp
fs
jl
jns
aas
scas
cld
jle
mov
inc
pop
test
sti
xlat
pop
mov
jmp
cli
fwait
sub
leave
mov
cmp
add
fucomip
incl
movsb
pop
push
pop
cs
xor
into
fdivr
pop
decl
mov
rep
jb
inc
pop
aas
inc
sub
iret
dec
dec
imul
filds
inc
dec
xor
gs
jns
or
push
jmp
outsb
inc
pushl
dec
cmp
mov
mov
pop
sub
hlt
push
dec
je
popf
and
test
push
add
cwtl
es
pop
rcrl
imul
jmp
or
inc
xchg
fmul
pushl
inc
pop
fstl
mov
jle
mov
push
addr16
icebp
mov
inc
repz
push
inc
mov
adc
insl
pop
decb
mov
out
inc
push
adc
aas
fs
xchg
xchg
clc
push
pop
outsl
mov
call
decl
mov
pop
loopne
inc
dec
jnp
clc
in
ds
enter
pop
jle
incl
jmp
xchg
jbe
adc
incl
fcos
push
xor
pusha
cwtl
mov
sbb
cwtl
mov
movntps
fsubrp
mov
lahf
imul
incl
sbb
sahf
rclb
jmp
xchg
sub
mov
cmp
inc
imul
pop
xor
fnstcw
clc
mov
or
inc
push
jnp
out
insl
aad
das
pop
pushl
and
pop
pop
roll
cmpsl
dec
dec
inc
xor
lcall
fs
fucomip
das
push
arpl
mov
jmp
mov
int
jbe
ss
xchg
incl
xor
loop
icebp
ss
pop
fs
loopne
mov
fwait
mov
cld
ljmp
push
xchg
sbb
pushl
lcall
outsb
out
fwait
ret
arpl
pop
sbb
dec
adc
decl
mov
sub
adc
pushf
lcall
ljmp
inc
pop
mov
lcall
mov
icebp
mov
push
imul
shl
sbb
sub
popa
inc
dec
cli
loop
ljmp
adc
and
cmp
or
mov
inc
out
imull
leave
adc
lcall
adc
push
xor
sub
sub
std
test
jl
std
or
rcrb
arpl
mov
lret
xorl
insl
xor
or
hlt
stos
ljmp
push
mov
popf
lcall
xor
cld
mov
xchg
push
or
mov
and
cld
inc
mov
mov
and
icebp
sbb
pop
out
lret
cmpsl
mov
imull
mov
mov
inc
push
inc
mov
fcos
or
add
jp
pop
push
mov
push
sbb
mov
inc
sub
leave
mov
movsl
test
rorb
or
push
ret
pusha
dec
int3
test
das
aad
dec
iret
test
mov
inc
stc
xchg
mov
xor
shlb
sub
int
fsts
cmp
cld
mov
cli
jmp
xchg
cs
jp
xchg
nop
jle
xor
aam
fsubs
pushl
jle
lcall
lcall
adc
inc
rorl
das
ljmp
xchg
xor
cmp
jmp
lods
sub
jl
ja
xor
push
jns
mov
cld
mov
inc
or
out
mov
push
pop
push
lods
push
jno
fisttpl
mov
call
sub
push
fs
nop
mov
add
cli
decl
xchg
add
or
jne
sbb
jecxz
jbe
push
ljmp
notl
sahf
iret
lcall
lcall
mov
cld
decl
mov
dec
mulb
sti
or
fsubrp
fst
xchg
cwtl
mov
jae
sbb
arpl
lock
stos
iret
mov
dec
xor
das
hlt
pop
jle
pusha
jmp
stc
mov
stc
jbe
push
outsb
adc
and
mov
xor
adc
fildll
decl
xor
mov
call
xor
mov
pop
or
out
lret
cli
mov
xchg
adc
orl
out
icebp
mov
xchg
jmp
mov
cltd
xchg
js
adc
jg
das
pop
call
mov
in
lcall
fidivs
add
jge
jae
lcall
mov
shrl
dec
add
out
scas
mov
hlt
xlat
pop
pop
sub
dec
sar
call
imul
mov
mov
enter
cmp
decl
push
jg
push
sbb
dec
into
rorb
mov
loopne
popa
inc
sub
movsb
mov
pushl
repnz
test
dec
decl
ljmp
mov
movsl
jne
bound
cmc
lret
mov
jl
adc
cld
push
fldl
js
lea
jg
sbb
xchg
cmp
jecxz
xchg
call
pushl
pop
aas
adc
cmp
jmp
dec
cmpsl
mov
pop
iret
fdiv
mov
incl
mov
into
push
or
push
stos
mov
xor
incl
das
xchg
ss
in
lret
imul
clc
pushf
add
cmp
pushl
into
xchg
cmpsb
cld
outsl
aad
call
sub
in
addr16
mov
aaa
pop
add
aaa
jmp
add
ret
loopne
xlat
cmp
jae
lahf
lock
fimuls
ja
shll
inc
mov
ljmp
sub
jbe
sbb
mov
jbe
adc
and
nop
adcb
or
mov
push
and
popa
bswap
js
jmp
das
lret
enter
xor
sub
sbb
call
loopne
call
sub
fdivrs
and
call
push
fldt
jge
pop
aas
jge
call
fsubrl
xchg
ljmp
add
ja
data16
jmp
cmpsl
fnstenv
push
sbb
das
add
stos
mov
out
xor
add
pop
loop
jp
das
std
lcall
add
inc
bound
mov
add
mov
sub
ret
jecxz,pt
pushl
add
or
test
mov
push
aad
sbb
sti
data16
decl
cmp
pop
in
dec
xchg
clc
dec
dec
lock
ja
sub
js
ja
hlt
inc
push
nop
lcall
ljmp
mov
popa
divl
call
pop
pushl
pushl
in
push
ljmp
outsl
call
test
sbb
xor
xchg
mov
imul
lret
outsl
call
dec
fidivrl
mov
push
push
call
mov
scas
stos
mov
cmc
das
adc
repz
or
rclb
dec
insb
inc
mov
mov
aaa
decl
rcrb
and
lcall
jnp
mov
call
popf
mov
int
xchg
ficomps
add
clc
mov
jb
lahf
jp
mov
xchg
sbb
mov
push
xchg
jge
in
lcall
das
aad
push
ljmp
scas
pop
lods
mov
mov
icebp
call
jmp
bnd
fsubl
sahf
mov
mov
loopne
push
xorl
inc
add
pusha
rcll
mov
ljmp
sbb
xor
push
pushl
clc
inc
mov
repz
add
mov
inc
pushl
pop
pop
cmpl
mov
xor
jg
aaa
clc
xor
sub
adc
xor
pop
call
push
mov
inc
es
movsl
cld
jmp
lret
xor
movsl
mov
cld
jg
xchg
adcb
aaa
and
in
push
ljmp
mov
mov
loop
and
xchg
cmp
xchg
leave
dec
adc
mov
shll
call
lcall
test
pop
mov
sbb
js
mov
xchg
adc
ljmp
or
dec
call
rclb
in
xchg
mov
jmp
test
popa
adc
call
xor
jecxz
jbe
add
sub
daa
ljmp
mov
in
jbe
cld
mov
pop
rolb
push
cltd
mov
pop
xchg
inc
outsl
adc
add
pop
in
inc
ljmp
pop
push
and
je
out
test
mov
or
jg
add
je
out
sbb
out
cmp
cmc
pop
mov
push
push
mov
js
test
mov
inc
jmp
add
xchg
icebp
push
decl
and
jmp
cmpsl
pop
aad
mov
ss
outsl
dec
lcall
push
notl
dec
js
ret
stc
mov
xchg
sar
inc
adcb
fnstsw
jmp
mov
push
movsl
push
cltd
sub
add
mov
xchg
fldcw
lock
out
sub
mov
push
add
mov
mov
or
ja
int3
dec
add
notl
lods
call
mov
jo
push
xchg
ret
cmp
add
inc
jno
ljmp
dec
pusha
in
inc
cmp
cmp
cmp
adc
mov
sub
pushl
stos
lds
push
pushl
js
std
xchg
mov
cmp
or
scas
lods
mov
icebp
inc
cld
cmp
cld
leave
xchg
xor
lret
fisubrs
std
mov
movsb
dec
mov
pushl
aad
decl
rcrb
xchg
mov
push
insb
call
std
inc
les
push
std
jmp
leave
pop
outsb
jnp
lcall
das
add
ret
or
pop
andb
mov
xor
mov
push
add
fwait
movsb
dec
out
inc
push
or
enter
adc
push
aaa
clc
cmp
push
xor
and
jecxz
pop
das
hlt
xchg
outsl
push
repz
push
pop
mov
mov
sub
jge
add
push
pushl
fimuls
and
shl
mov
dec
rcrl
stos
ljmp
jmp
mov
cmc
jle
fidivrl
fdivs
loop
out
jns
std
lret
pop
int3
jb
ljmp
add
and
and
out
loop
push
sub
push
mov
fsubrl
adc
jns
adc
fwait
aaa
add
inc
adc
dec
sbbb
jmp
mov
or
push
out
mov
lods
in
push
add
repz
outsw
mov
push
pop
push
cmc
mov
test
lcall
mov
sub
test
or
push
add
ret
xlat
ljmp
loopne
mov
pop
clc
mov
and
sub
movsb
outsb
jmp
pop
les
fstl
clc
repz
adc
sub
in
push
cli
sub
mov
lcall
lods
outsl
stos
xlat
outsl
sbb
sbb
lock
jmp
es
cltd
jle
les
jmp
decl
fisttpl
push
out
outsb
test
and
pop
xchg
add
jge
push
xor
add
loopne
adc
sbb
sahf
adc
dec
call
mov
jae
repnz
inc
addr16
je
lret
loopne
gs
insl
inc
mov
stos
clc
add
cmp
gs
fucomip
pop
jmp
adc
cmpsl
inc
test
mov
inc
pop
or
lcall
mov
ret
cmpsb
daa
add
pop
dec
ljmp
icebp
pop
mov
insl
stc
push
xor
mov
dec
test
in
imulb
ljmp
push
sbb
lock
out
dec
jo
loope
and
push
cmc
add
cld
ljmp
sbb
xchg
daa
cwtl
jbe
outsl
jg
lock
hlt
and
lea
sbb
ja
dec
xchg
jb
and
fisubl
push
test
xchg
fistpl
outsl
sbb
pop
add
pushl
mov
dec
in
and
push
jp
out
inc
cmpsl
cmc
in
dec
sbb
and
aaa
cli
jmp
mov
and
inc
dec
cmpsb
sub
lods
cmpsl
mov
sbb
dec
mov
rolb
lds
add
jbe
sub
out
sbbl
in
fucomip
popa
out
imul
push
int
mov
mov
cmp
xor
mov
mov
int3
add
jl
in
in
inc
and
subb
rcll
ljmp
mov
ret
paddusb
mov
xchg
loopne
lcall
leave
idiv
jb
mov
jl
pop
jo
dec
test
call
xor
ret
nop
gs
mov
mov
mov
pushl
decl
jae
popa
rolb
loop
mov
imul
fnstsw
repnz
decl
mov
jecxz
mov
sar
mov
mov
out
movsl
pusha
add
lcall
jmp
jg
dec
repnz
test
test
mov
cmp
jg
jno
mov
pop
pop
mov
jle
dec
cmp
sbb
pop
adc
call
test
jg
mov
dec
and
fsubs
rcll
push
lcall
shl
ret
xchg
jle
pop
sarb
push
mov
cli
add
scas
push
mov
repnz
inc
outsl
inc
dec
stc
mov
inc
cmc
rcrl
out
inc
jo
lahf
mov
mov
inc
cmp
incl
cmp
jns
or
push
popa
lret
incb
test
decl
les
pushl
xor
inc
mov
loopne
pop
inc
push
xchg
nopl
leave
or
jo
mov
mov
in
inc
jp
or
incl
fstl
cmpsl
in
and
repnz
inc
fsub
call
insb
xchg
out
mov
ds
loop
call
jg
rolb
push
sub
lret
mov
das
cmc
data16
daa
lea
inc
push
imul
int
call
data16
daa
cli
outsl
hlt
jl
int3
push
aas
mov
and
cwtl
cmc
adc
cmp
rcrb
push
push
test
mov
add
inc
clc
dec
in
dec
sbb
incl
dec
out
daa
inc
leave
testl
pop
cli
iret
add
cwtl
pushl
sub
fimull
fs
imul
nop
mov
inc
dec
jle
in
jmp
ljmp
xchg
daa
mov
mov
fsub
xchg
stos
mov
aaa
push
xor
cmp
imul
popa
jbe
inc
out
lret
sti
ljmp
ja
int
loop
in
decl
fwait
idivl
rcr
ljmp
or
ret
cmc
lcall
jno
fistps
mov
jnp
xchg
mov
inc
std
xor
test
pushf
ret
sub
clc
aaa
outsl
incb
xchg
jns
icebp
or
call
mov
cmp
mov
call
sbb
dec
and
mov
ret
push
fs
pop
xchg
das
js
cltd
mov
arpl
into
pop
pop
popf
mov
loop
mov
inc
add
pushl
cld
sarb
ljmp
gs
sar
lea
jg
mov
lahf
mov
pop
sti
add
mov
popa
enter
or
mov
push
cmpsb
xchg
dec
clc
aam
fcos
xor
xor
lock
hlt
pop
push
xchg
xchg
pop
call
call
cs
incl
fimuls
loopne
nop
and
lock
pop
mov
incl
mov
stos
xor
inc
scas
bound
xchg
dec
pop
push
push
data16
push
jecxz
decl
call
cwtl
out
stos
inc
dec
push
inc
mov
dec
mov
mov
and
mov
sar
push
hlt
ljmp
jmp
push
sub
ds
call
pop
rcrb
add
filds
xor
dec
popf
dec
js
es
jg
aaa
jmp
test
or
mov
push
jnp
pop
add
imul
mov
xor
outsl
xor
iret
shrl
and
fcoms
jge
inc
lcall
pop
mov
lcall
das
cmc
xchg
aas
pop
in
pop
cmp
inc
mov
int
test
pop
mov
fwait
pop
in
fistps
nop
cwtl
jo
aad
ljmp
lods
mov
call
hlt
push
loop
push
push
sub
lcall
rorl
es
push
loop
decl
cmp
adc
cmp
push
jb
dec
mov
mov
jg
movsl
inc
call
stos
sbb
call
bnd
rclb
xor
xor
test
std
mov
sarb
fiaddl
pop
ret
sub
pop
ljmp
das
mov
shrb
repnz
fstpt
in
jns
sbb
aaa
mov
std
lock
mov
push
aaa
aas
cmp
outsl
mov
pop
addr16
loop
or
rep
pushl
push
dec
and
repz
clc
xchg
call
mov
fcomps
clc
inc
fisttpll
cmp
cld
inc
cmp
add
or
fwait
mov
mov
inc
in
jecxz
daa
pop
and
and
loopne
push
incl
sub
mov
jmp
popf
sti
xor
cld
dec
xchg
or
mov
sub
scas
dec
sub
aad
adc
mov
add
jno
push
fwait
outsb
cld
pop
incl
cmp
dec
jmp
mov
or
mov
aad
jmp
inc
inc
fisubrl
add
hlt
jae
sub
or
mov
outsl
jo
scas
xchg
movsl
fistpl
das
ret
jmp
insl
ds
push
mov
clc
xlat
test
sar
ret
decb
jle
jge
leave
insb
incl
dec
mov
mov
adc
lahf
pushl
pushl
mov
fisttps
fdivrp
lahf
add
xchg
test
sub
pop
outsl
cld
push
enter
or
jbe
fucomip
in
in
pop
sbb
in
dec
pop
cmpb
xchg
nop
add
mov
adc
cmp
fsubs
mov
and
dec
hlt
sub
add
cs
dec
lcall
testb
das
lods
jle
scas
lcall
addr16
movsl
ljmp
or
out
sarb
pop
mov
std
les
lcall
fsubrs
jmp
icebp
outsl
andb
std
xlat
dec
sbb
pusha
fcmovne
mov
mov
jae
jnp
cmpsl
inc
pushl
lea
movsl
lea
adc
and
mov
call
sbb
movsl
lret
xor
int
in
mov
hlt
dec
adc
lret
inc
cld
jmp
lcall
lret
ljmp
andl
in
mov
into
into
in
pop
push
enter
das
lcall
mov
mov
pop
daa
push
inc
sub
adc
jmp
jo
or
stc
jg
rorb
inc
insb
jl
out
ljmp
cmp
decl
mov
repnz
sub
arpl
loop
call
inc
jmp
lods
call
dec
sub
aas
lea
mov
lret
ljmp
inc
mov
mov
or
mov
mov
js
iret
and
in
sarl
imul
incl
lret
test
jmp
push
sbb
dec
fbstp
dec
fildl
pop
jmp
call
add
or
in
mov
lods
fdivr
hlt
sbb
or
cwtl
mov
and
push
xorl
pop
lcall
ljmp
jns
inc
mov
xor
pop
mov
mov
xchg
call
inc
ja
sbb
pusha
sub
outsb
gs
call
dec
dec
sbb
shrb
cld
sbb
lcall
rolb
add
dec
out
rep
push
into
dec
ljmp
add
or
cmpsb
ficompl
dec
cmp
xchg
mov
jmp
mov
fisttps
in
stc
decl
ss
mov
cmp
lods
clc
mov
call
cmp
inc
dec
lock
aas
iret
mov
das
fdivrp
mov
inc
mov
fcos
xor
add
insb
adc
ds
or
loopne
xor
decl
pop
pop
ljmp
ljmp
sbb
fwait
dec
shr
call
cli
incl
hlt
inc
mov
pushl
push
and
sub
push
ds
jle
fdivrp
cmp
ljmp
in
call
adc
or
xor
add
add
push
test
push
mov
mov
add
jmp
xchg
mov
add
add
mov
or
cltd
imul
ljmp
sti
sub
jg
cmp
pop
data16
mov
jmp
push
call
or
mov
add
lahf
mov
bound
xorb
stc
ljmp
mov
scas
mov
and
jl
lods
sarl
lods
mov
jae
stos
daa
call
insb
jne
inc
call
or
mov
sub
jle
fbld
xchg
jmp
cmpl
push
xchg
jnp
or
fnstenv
jmp
jno
adc
cmc
pop
sti
and
add
scas
cltd
mov
call
insl
pop
bnd
sbbb
cmp
pop
loop
incl
jl
scas
ljmp
mov
push
mov
lcall
outsb
mov
inc
push
add
loop
repz
lcall
and
or
xchg
inc
jns
pop
and
cli
inc
int3
adc
frstor
mov
and
mov
lcall
mov
mov
lcall
aad
mov
add
cltd
cmp
dec
scas
xchg
cmp
mov
call
in
jae
ja
add
ret
inc
sahf
pop
bound
jnp
xchg
das
add
mov
icebp
insl
stos
mov
ljmp
cli
mov
mov
incl
loop
inc
fildll
fidivrs
push
pop
test
mov
jmp
sbb
ljmp
jnp
lcall
sbb
push
outsl
jl
cmc
or
lcall
dec
lret
outsb
ds
jle
loop
push
hlt
mov
aad
fidivs
pop
mov
in
jmp
fdivr
cmp
faddl
cmp
pushl
ud2
dec
push
xor
pushl
aaa
push
das
aam
fdivr
add
call
mov
push
jns
mov
lea
push
jmp
ror
decl
push
aad
cmc
cli
or
cli
aam
imul
mov
decl
std
and
jmp
cmp
pushl
mov
inc
cmp
xchg
test
ljmp
es
clc
outsb
xchg
das
push
call
imul
inc
fdivr
jae
lods
jl
cli
decl
sub
cmp
inc
push
iret
aaa
outsb
inc
mov
les
jl
mov
mov
idiv
pop
or
cld
xchg
js
pushl
fidivl
aad
push
std
and
sbb
pop
and
push
dec
mov
fldcw
ljmp
jmp
jo
inc
mov
fstps
roll
pop
leave
mov
and
mov
adc
xchg
dec
insb
jge
jl
jns
inc
incl
jge
pop
push
pushl
xor
push
cmc
lods
mov
push
outsb
stos
pushl
cmpsb
sub
cld
outsl
jmp
inc
sarb
lcall
or
jmp
in
lahf
sbb
ret
mov
jbe
inc
mov
adc
xchg
mov
mov
lods
mov
lret
popf
or
mov
and
xor
aam
das
mov
ret
dec
lret
jge
xchg
jle
mov
incl
inc
orl
pop
arpl
lcall
scas
clc
fwait
push
cli
push
out
lock
iret
cmp
push
lods
push
call
mov
ljmp
xor
dec
push
pusha
mov
adc
decl
repnz
jmp
jmp
movsw
movsb
mov
sub
mov
sahf
pop
ret
push
jo
fildl
outsl
movsb
rorl
mov
repnz
fdivrp
shlb
mov
mov
mov
fisubl
push
jp
inc
sti
repnz
cmp
cli
cmp
inc
in
push
call
add
or
jmp
movsl
pop
jns
lahf
pop
call
rolb
jo
cld
repnz
ffreep
jb
and
leave
sbb
inc
ret
inc
jg
repz
adc
cmp
and
lcall
aas
jge
fldenv
xorl
push
in
lock
sbb
adc
mov
or
inc
jge
lcall
lock
mov
dec
cs
mov
push
mov
loop
outsl
mov
call
cmc
pop
aam
fs
xchg
or
jg
cwtl
popa
xorl
movsb
lea
loop
test
ljmp
xchg
clc
xor
decl
sbb
rcll
call
test
ds
idivb
loopne
push
js
cmpsb
daa
inc
mov
mov
mov
jmp
xor
insl
repz
inc
sub
or
push
mov
mov
jo
incl
shlb
pop
incl
dec
shlb
cld
jg
push
fdivr
push
inc
sbb
push
jmp
mov
add
sbb
mov
lret
sbb
repnz
cmp
mov
imul
pop
inc
push
xchg
clc
fwait
sbb
mov
in
push
dec
leave
push
dec
dec
fwait
clc
pop
mov
inc
pop
je
cmc
mov
mov
jge
sbb
lahf
mov
lcall
clc
xchg
xchg
lcall
icebp
jmp
sub
push
call
push
bound
sbb
in
add
xor
stos
enter
inc
dec
push
ja
add
out
jp
mov
fsubp
outsl
cmc
pop
in
cli
fisubrl
loopne
scas
clc
aaa
ljmp
sbb
inc
sbb
movsb
out
repz
repnz
incl
pop
push
mov
movsb
in
mov
pop
cli
in
leave
push
mov
rolb
pop
lcall
call
cmp
rorb
and
adc
dec
sbb
ret
lods
push
aaa
jne
repz
lcall
add
sub
jmp
fsubrs
jge
fwait
ret
or
push
push
sub
incl
add
lret
es
xor
incl
andl
incb
jl
jbe
fucomip
sbb
stc
out
faddl
shr
sbb
push
xlat
or
jmp
jge
sbb
call
call
pop
jmp
imul
push
push
mov
lahf
aaa
add
lods
cli
xchg
stc
pop
mov
test
dec
jl
push
add
clc
jle
mov
pusha
nop
es
leave
decl
xlat
cmp
hlt
pop
cmp
mov
xchg
incl
in
jp
hlt
xchg
sbb
inc
fdivs
sti
in
incl
lret
adc
shl
aaa
mov
incl
mov
test
sbb
jmp
xchg
arpl
cmp
xor
sarl
add
cli
in
cmpsb
sub
jmp
lret
cli
or
mov
call
mov
push
push
fbstp
jle
pushl
pop
sahf
mov
into
call
add
or
repnz
adc
fwait
pushl
ljmp
and
icebp
xor
imul
xor
adc
incl
out
mov
shll
dec
hlt
out
das
jmp
lret
lods
pop
out
and
test
sbb
or
push
push
pushl
movsl
adc
clc
mov
jo
aam
inc
add
jmp
inc
lcall
adc
ljmp
mov
pop
cmp
mov
inc
dec
push
cmpsl
jns
mov
adc
xchg
mov
repnz
adc
jne
adc
das
lock
add
in
cmpsl
cmp
addl
add
mov
jno
test
sub
push
mov
mov
loope
outsl
cld
and
aam
inc
mov
jmp
and
lret
jecxz
scas
dec
push
movsl
mov
rclb
mov
jno
mov
outsl
mov
jecxz
jmp
xchg
cmp
xor
push
and
aas
xchg
sub
adc
mov
cmpsb
push
or
sahf
jb
shlb
call
mov
mov
jecxz
mov
pop
ds
mov
xor
out
cltd
jbe
daa
cmp
in
xchg
or
das
jb
jle
add
jl
mov
dec
xchg
testb
xor
and
xor
sbb
push
lahf
inc
popf
pop
decl
fmul
inc
notb
pusha
lcall
fidivs
fstps
fs
push
sbb
or
call
mov
push
cmpsb
jmp
cmpsl
jle
mov
ljmp
ljmp
insb
sahf
xlat
sbb
out
add
push
je
pop
xor
mov
mov
xchg
gs
sbb
fidivl
add
leave
movsl
mov
push
je
fdivrl
fwait
cmpsb
mov
int3
addr16
ljmp
push
cli
inc
cmp
inc
cli
pop
mov
lcall
rolb
push
jmp
sbb
sub
push
add
push
movsl
gs
mov
aad
sub
mov
inc
das
inc
jne
mov
mov
pop
pop
jne
jmp
mov
call
pop
adc
mov
fdivs
fdivr
sub
inc
adc
incl
cmp
sbb
pop
decl
incl
loopne
stos
inc
aaa
jp
push
jae
dec
call
cmp
jecxz
insl
dec
aaa
in
fdivrp
dec
adc
popa
mov
das
mov
jmp
insb
push
xchg
sahf
mov
push
and
mov
push
push
lock
hlt
ja
pop
mov
cmp
mov
data16
outsb
mov
xchg
cmp
add
xor
ljmp
pop
push
out
jp
inc
ljmp
mov
leave
stos
dec
je
mov
jmp
cmpsl
fildll
jb
clc
pop
inc
leave
add
add
scas
jmp
decl
pop
ss
push
cs
push
mov
test
push
fdivrp
enter
loope
lcall
xchg
addb
pop
fildl
jmp
or
call
pop
jo
aas
ljmp
or
bound
jl
stos
sahf
adc
pushl
mull
es
clc
sbb
clc
adc
test
daa
sub
xchg
ja
jb
push
push
jmp
sahf
xor
js
repnz
icebp
jg
repnz
jne
inc
xor
bound
cmp
pop
movsb
aaa
mov
in
push
jne
fisubrl
js
pushl
xor
lcall
imul
ljmp
incl
xchg
cmp
lret
sbb
std
sti
sbb
test
pop
call
sbb
jmp
dec
rcll
lcall
ljmp
out
jecxz
add
call
insl
inc
mov
cld
cmp
jecxz
aad
jmp
aaa
mov
nop
incl
add
mov
jmp
test
lcall
xchg
pop
in
addr16
push
clc
loop
fiadds
fucomp
lcall
adc
pushl
jmp
xchg
pop
fsubs
incl
cld
mov
bnd
and
incb
mov
scas
push
inc
mov
mov
mov
or
insl
xrelease
mov
inc
xchg
push
cli
rorb
sub
mov
mov
pop
jmp
inc
sbb
gs
or
xchg
pusha
push
rolb
fisttpll
scas
inc
jnp
inc
testb
decl
jmp
pop
bound
mov
clc
jg
jnp
dec
cli
and
fiadds
pop
add
adc
aaa
mov
or
fdivs
sub
rcll
js
popa
decl
jmp
outsl
std
mov
incl
lahf
out
mov
xor
jmp
repnz
fildl
decl
mov
js
push
std
mov
xchg
lea
cmp
adc
dec
das
jno
mov
call
sub
lcall
aam
inc
ja
ud0
call
mov
outsl
pop
pushl
incl
xchg
jb
xchg
cmp
divb
roll
sub
push
jmp
or
repnz
push
in
jge
and
adc
outsl
add
xchg
mov
rclb
popa
imulb
les
lcall
mov
das
push
dec
fisubrs
mov
in
xchg
pop
aaa
lahf
mov
cwtl
rorb
or
incl
ljmp
test
ljmp
pop
out
xlat
mov
jl
sarl
jmp
add
decl
movsb
mov
jmp
out
lret
and
adc
pop
dec
call
pusha
inc
adc
cmp
std
out
hlt
sub
mov
call
push
dec
jge
push
mov
or
sub
add
mov
and
lret
lock
fdivrs
xchg
push
jmp
icebp
in
xchg
jmp
ret
push
repnz
sbb
mov
lock
adc
inc
aaa
es
jg
jl
mov
pushl
xchg
insl
ljmp
cmp
push
clc
cmpsb
jmp
xor
js
and
pushl
pop
js
ret
or
ljmp
adc
aad
decl
cli
or
decl
fiadds
dec
ret
stos
add
imul
in
dec
or
fucom
adc
cmp
mov
call
call
sbb
icebp
pop
mov
dec
popf
outsl
jl
rcr
decl
mov
nop
cli
scas
ljmp
or
pop
jb
jecxz
sub
dec
sahf
js
ljmp
inc
nop
jmp
mov
xchg
xchg
cmp
cli
push
jg
dec
push
cmp
cmc
cmpsl
push
mov
fucomp
inc
cmp
cmpsb
rolb
mov
sub
xchg
das
ljmp
arpl
dec
xchg
add
add
or
in
pop
movsb
stc
cltd
incl
add
xchg
dec
sbb
in
mov
adc
cmp
es
popf
imul
decl
add
lcall
loopne
dec
jbe
inc
pop
mov
js
dec
or
dec
icebp
in
insb
jne
std
inc
bswap
mov
int
jmp
loop
loop
pop
ljmp
cwtl
lcall
jb
repnz
and
adc
testl
and
loope
jg
cmc
das
ficompl
add
outsl
icebp
inc
cmp
clc
pushl
mov
out
sti
xlat
test
pop
push
jp
bound
jg
cmc
push
cmpsb
out
lods
xor
call
fstpt
sbbl
xchg
ljmp
incl
ret
xchg
xor
inc
jmp
into
mov
fidivl
inc
mov
or
push
push
lret
cltd
jmp
inc
imul
das
icebp
iret
adc
mov
decl
adc
movsb
call
jp
pop
insb
inc
pop
outsl
push
ljmp
outsl
iret
fbstp
pop
out
dec
pop
aam
pushl
stos
out
pushl
add
jns
and
decl
jmp
movsb
xchg
inc
inc
ljmp
ljmp
jmp
rorb
pushl
insl
jmp
in
aad
loop
jmp
cmp
push
neg
or
sbb
add
cs
sarb
jmp
cltd
std
adc
scas
ja
mov
xor
jbe
divb
jmp
lcall
loop
mov
xchg
inc
sbb
jmp
sbb
incl
repz
mov
ret
ljmp
test
scas
dec
dec
imul
push
lcall
mov
mov
pop
das
cmp
push
and
in
inc
repz
rorl
scas
pop
push
aas
stos
mov
negl
orb
mov
pop
fcomps
mov
mov
xchg
inc
faddl
jmp
movsl
push
push
inc
fucomi
pop
cli
int
pop
lods
mov
call
das
lret
add
push
notl
clc
cmp
push
jp
sbb
dec
xchg
loope
mov
pop
call
sbb
test
icebp
das
cmp
jo
dec
bound
push
ljmp
lods
dec
push
xor
xchg
daa
pop
push
mov
and
roll
push
ljmp
cmp
call
push
out
test
mov
aaa
sbb
add
sti
out
decl
mov
mov
std
ficoml
jmp
dec
or
cmp
out
sbb
ljmp
rcr
push
test
in
mov
pop
das
mov
or
lock
xlat
inc
out
js
push
lcall
sub
pop
jp
mov
outsl
and
rcr
jp
shll
incl
ret
push
and
cld
xor
jo
add
aas
pop
sar
pop
call
xor
in
subb
outsl
mov
mov
lods
dec
call
jo
test
or
cmpsl
in
mov
jl
push
in
js
test
arpl
cmp
mov
mov
cmp
cmc
jnp
out
mov
addb
ljmp
jmp
pop
std
mov
pop
sbb
out
ss
mov
movsl
mov
fdivr
jnp
rorl
inc
incl
sub
inc
mov
aam
push
or
jl
js
call
fst
fbstp
and
or
xor
mov
dec
inc
shlb
nop
adc
mov
cli
cmp
ret
lods
dec
jle
mov
and
call
cmp
cld
jbe
push
cltd
add
sub
mov
ljmp
sub
dec
inc
popa
adc
mov
mov
call
test
test
adc
stos
bound
inc
fcoml
hlt
dec
rolb
loope
stc
icebp
pushl
jmp
sub
notb
out
sete
test
stc
cmp
dec
adc
mov
je
mov
xor
lahf
es
js
mov
mov
push
add
xor
pop
lcall
cmp
jg
ret
sbb
stos
sbb
ljmp
mov
call
call
aaa
int3
enter
clc
pop
lcall
dec
cmpsl
imul
lret
es
xchg
jge
sub
cs
mov
in
or
mov
adc
stos
pop
xchg
fstpt
jno
pusha
pop
pop
ss
aas
shll
lods
push
jb
lock
aaa
pop
mov
add
call
mov
pop
enter
incl
fisttpll
mov
call
bnd
mov
jl
gs
fdiv
cwtl
jb
aaa
jne
jnp
cld
cmpsb
cmp
mov
popa
call
xchg
flds
mov
imul
mov
jge
and
cmp
or
push
push
dec
dec
mov
call
dec
pushl
ud0
sbb
lods
inc
ud0
outsb
loop
std
mov
call
pop
in
lret
mov
cmpsl
ljmp
xor
test
fdivs
jle
xchg
clc
test
add
cmp
int
incl
out
cld
out
adc
cmp
incl
mov
cltd
lret
xchg
inc
call
incl
inc
hlt
or
jmp
leave
out
adc
jg
insl
mov
xchg
fidivs
stos
add
rcrb
cmc
pop
bound
dec
dec
cld
jg
mov
std
int3
shrd
pop
jo
repnz
cmp
arpl
cmp
cmp
out
cltd
xchg
rcll
ret
push
push
sub
adc
pusha
sub
pop
fsubrl
hlt
mov
test
dec
xchg
pop
js
push
bnd
pop
mov
mov
xchg
dec
pop
incl
inc
dec
call
out
test
dec
mov
les
jmp
pop
and
stos
lods
in
jmp
sarb
jmp
jp
pop
mov
cltd
pop
repnz
movsb
mov
gs
call
sub
mov
orl
push
bound
mov
pushl
shrl
shlb
mov
and
pushl
test
add
test
push
in
inc
daa
sti
inc
jle
ljmp
jge
ja
dec
inc
fs
mov
xor
jbe
sbb
push
xor
or
lods
adc
pushf
jmp
cli
mov
incl
js
inc
push
ret
xchg
jp
rclb
cmpsb
push
hlt
xchg
push
inc
and
sarb
lods
loope
cmp
push
in
aaa
loopne
fdivrp
inc
cmpsl
sti
or
mov
push
inc
decl
scas
jo
dec
xchg
dec
dec
adcb
addr16
lds
les
jmp
and
rorl
sub
xorl
jg
pushl
jo
sub
xlat
pop
cmp
lret
out
push
clc
mov
inc
cmp
dec
pushl
push
fiaddl
add
repnz
es
mov
loopne
fs
and
jnp
xlat
lods
xchg
lahf
jp
xchg
iret
test
and
and
stc
push
call
inc
not
ljmp
xchg
xor
call
pop
call
pop
ljmp
dec
xchg
aam
mov
fiadds
insb
cmpsb
jmp
jo
inc
pushl
rorl
jae
sarl
push
incl
out
push
mov
cwtl
call
jmp
mov
mov
add
xor
ds
add
loope
push
cmp
xchg
cltd
decl
pop
pop
ss
scas
xor
jl
movsb
sbbl
inc
add
movsl
sbb
sbb
mov
mov
mov
pop
insl
jmp
cmc
adc
push
insl
imul
sarl
call
inc
test
or
pop
push
add
mov
mov
decl
push
or
xchg
lock
ret
fs
pop
lret
pushl
ljmp
cld
pusha
call
pop
mov
les
fwait
mov
cmp
and
insb
lcall
pushf
jb
pushl
jg
mov
or
lea
in
das
call
sti
sti
or
inc
ljmp
aad
clc
decl
loopne
push
or
adc
outsl
dec
mulb
adc
outsb
loop
add
fildll
mov
xchg
lcall
iret
sbb
push
das
xor
adc
add
out
or
add
push
lret
adc
xchg
push
pop
ja
add
lods
outsb
incl
add
insb
sbb
sarb
and
icebp
sahf
fwait
pop
push
das
ret
mov
sbb
mov
rcr
jle
rcrb
call
xchg
xor
imul
and
lods
fldenv
xchg
and
fdivl
and
push
pushl
add
cmp
es
lods
ljmp
clc
mov
or
pop
pop
insl
adc
gs
sub
mov
aaa
mov
ljmp
daa
push
sub
xchg
pop
adc
sub
and
das
test
scas
adc
jbe
in
ljmp
cmp
mov
dec
jl
clc
push
pop
sub
adc
ljmp
aam
out
jmp
push
jno,pn
and
pushl
pop
inc
rcr
aad
or
cmp
cmp
jo
or
fldcw
push
add
inc
xchg
aad
and
lds
andb
insl
jmp
lcall
in
clc
jge
outsl
mov
lcall
cld
pushl
push
sbb
xchg
insb
or
lret
clc
fistps
mov
push
addr16
mov
stc
pop
sahf
fcoml
jle
inc
popf
mov
or
lock
mov
pop
jg
jne
das
lret
cmp
ret
fildll
shll
xchg
lret
mov
add
inc
pop
pop
pop
js
inc
pushl
inc
sub
xchg
fstps
jg
dec
push
sahf
data16
lock
xchg
adc
stos
decl
jmp
outsl
adcl
cmp
pop
mov
pop
mov
in
in
add
sbb
mov
pop
imul
mov
add
cmp
sub
repnz
sub
inc
ljmp
dec
xchg
jae
js
mov
jmp
add
loop
dec
mov
inc
lret
add
lcallw
popf
mov
outsl
inc
fbstp
push
sarb
mov
stc
push
jmp
inc
ja
push
and
incl
pop
sti
and
cwtl
fcomps
add
lods
out
lahf
dec
mov
ljmp
repz
jne
xchg
mov
outsl
add
nop
inc
ljmp
sbb
adc
add
in
jbe
imul
dec
push
pop
jle
dec
std
bound
pusha
call
inc
movsb
or
loop
hlt
jmp
jmp
mov
sbb
out
pop
mov
jnp
bnd
cld
xor
mov
jge
xchg
ret
ret
in
addr16
mov
pop
ret
inc
mov
xlat
std
push
loope
push
les
dec
mov
sahf
cmp
jp
mov
xchg
ljmp
repz
cmp
cmp
push
mov
or
pop
jg
call
jl
lret
imul
pushl
loop
xor
cli
jmp
pop
out
leave
adc
movups
or
adc
mov
jbe
and
outsl
add
or
cld
loopne
adc
fstpl
pop
mov
aam
fwait
pushl
lcall
mov
mov
or
lret
cld
mov
sub
mov
cmp
repz
cli
ss
std
fists
sbb
adc
lds
stos
clc
jg
inc
cld
ds
lods
push
jge
mov
lods
mov
mov
xor
cmp
or
repnz
decl
icebp
int
fadds
inc
xor
shl
cmpsl
jmp
cmp
sub
cmp
xchg
sbb
add
mov
lds
mov
mov
mov
fnstsw
jmp
sbb
dec
cmc
inc
cwtl
loope
fldenv
imul
pop
or
incl
sub
in
jmp
psubusw
add
lock
mov
test
stos
and
leave
cs
ret
ds
fs
jg
fprem1
inc
mov
sbb
xor
or
dec
sub
outsl
stc
sar
call
aad
xchg
shll
jecxz
sbb
push
adc
repz
ljmp
jp
jbe
or
and
imul
in
movsb
dec
out
mov
lods
cmp
lret
xor
lea
add
sbb
call
aas
ds
scas
loopne
sub
jle
push
or
mov
sbb
mov
xorb
mov
hlt
fdivr
ja
push
jp
push
inc
jg
call
adc
loop
inc
push
sti
mov
jecxz
fisttps
cmpsl
mov
add
pushf
outsl
stos
jae
jg
repnz
pushl
mov
or
bswap
sbb
je
jno
call
jge
xchg
pop
xor
lcall
inc
inc
pop
sbb
lcall
inc
movsl
in
inc
outsl
jmp
mov
dec
cmp
sbb
and
lcall
int
xchg
cmp
push
out
lods
incl
decl
jae
and
add
loopne
mov
sub
aam
push
or
adc
cmp
pop
std
loope
push
fwait
xchg
stos
jbe
mov
fs
inc
stc
in
fldt
pop
pop
mov
incl
incl
fadds
lcall
sbb
pop
jne
cs
std
je
xchg
imul
inc
inc
in
inc
push
jne
xlat
dec
decl
ljmp
lods
sbb
insb
add
adc
iret
mov
add
arpl
call
pushl
xor
sbb
pop
push
xchg
mov
fists
adc
mov
out
dec
dec
dec
int3
or
icebp
push
test
test
or
adc
cltd
cmpl
inc
pop
pop
mov
test
dec
dec
enter
popf
incl
pop
xchg
popa
pop
pop
add
aam
fsubrs
clc
dec
std
sub
inc
add
loop
ljmp
jno
pushl
stc
arpl
icebp
call
cmp
xor
hlt
stos
lret
jne
xchg
das
call
push
jle
adc
sti
orl
dec
inc
ret
jmp
rcrl
mov
outsl
fucomip
stos
push
fcos
pop
ja
push
inc
fs
xchg
mov
js
call
inc
inc
add
adc
call
xchg
mov
mov
daa
lock
ljmp
xor
repnz
lcall
stc
sbb
push
js
aas
jg
decl
fsubp
call
decl
xor
adc
test
sbb
add
pop
push
sub
ja
sbb
les
dec
adc
data16
xor
mov
ret
pop
aam
sub
jmp
loopne
xchg
lds
mov
cmp
and
addr16
fnstsw
or
jp
icebp
call
stc
decl
jns
out
mov
and
in
scas
out
adc
gs
hlt
std
dec
jg
fistpll
push
roll
shlb
sbb
pushl
leave
clc
inc
jl
inc
sarb
push
pop
rol
push
je
mov
ja
call
pop
scas
dec
fadd
lcall
add
icebp
int
or
arpl
xchg
ficoml
decl
and
call
jl
insb
adc
dec
jns
add
jg
cmp
std
xchg
loope
pop
jle
sbb
sahf
in
inc
cmp
push
idiv
pop
mov
jmp
mov
hlt
add
mov
into
pop
pushl
jo
out
ljmp
cltd
and
and
dec
lods
push
popa
mov
ljmp
xor
loop
repz
pushl
lret
sbb
cld
sbb
mov
out
push
sub
mov
inc
outsb
cmp
call
std
pop
inc
push
jns
stos
mov
mov
loop
negb
mov
out
inc
jg
add
mov
repz
and
cld
lret
jo
decl
int
dec
mov
scas
add
cmp
jp
fistpll
adc
js
out
mov
arpl
sbb
test
or
push
sbb
test
mov
cld
adc
adc
movsb
pushl
mov
das
std
out
loop
or
call
dec
pop
call
jle
sbb
sbb
fstpl
ds
push
ljmp
cltd
add
test
inc
push
in
out
cmp
and
cld
out
stos
push
mov
andl
push
cmpl
rclb
cmp
mov
scas
outsb
cmp
xchg
movsb
push
xchg
adc
enter
call
hlt
jnp
and
xchg
push
rcr
push
sahf
xor
push
lret
lret
push
push
sub
jmp
ja
daa
cmpl
movsb
incl
mov
cli
call
push
decl
mov
cmp
sbb
push
cmp
jmp
stos
gs
inc
scas
and
mov
rorl
in
xchg
add
cli
push
rorl
cmp
inc
decl
mov
fucomip
ja
rcrl
lcall
test
pop
xchg
jg
dec
jge
sbb
inc
pop
sbb
aas
mov
fidivrs
in
mov
ficoml
int
jo
loope
lea
xor
add
or
jg
cs
or
jne
xchg
pusha
mov
sarb
popa
dec
leave
outsl
mov
movsb
flds
cmp
pop
bound
jb
jmp
shrl
fsubs
pop
inc
fwait
jle
xchg
out
pushl
out
movsb
pushl
sbb
jno
fisttpll
fmuls
inc
ljmp
mov
inc
xchg
inc
pusha
inc
jl
in
sbb
pusha
std
lcall
pop
sub
clc
jmp
cmpsl
fisttps
ds
xor
insb
decl
or
jns
lds
inc
and
sub
pop
add
adc
jbe
insb
mov
jecxz
decl
mov
mov
test
jg
sbb
les
ljmp
xchg
pushl
call
pop
in
adc
mov
adc
adcb
pop
fs
pop
or
adc
dec
call
aad
adc
sbb
imul
sub
cmp
xor
mov
cmpsb
push
cmp
sub
cmp
jb
call
leave
adc
mov
mov
inc
cmp
jge
pushl
fcos
or
add
in
mov
idivb
call
shll
adc
mov
mov
inc
push
dec
addb
incl
lods
sub
call
sub
adc
jg
and
fistps
sbb
push
adc
add
mov
call
in
push
pop
addb
psubsb
mov
les
cld
mov
aas
loop
xor
push
jg
insl
xchg
enter
cmp
inc
insb
mov
pop
push
xchg
jmp
or
and
je
clc
outsl
cmc
sbb
sbb
mov
lcall
push
call
loope
jo
or
lock
pop
bound
leave
cmp
push
popa
push
jmp
pusha
mov
mov
popa
fsubrl
lods
push
ja
mov
inc
xor
push
cli
scas
inc
pop
jno
mov
or
sar
push
out
cli
aas
dec
out
out
in
dec
xchg
mov
cwtl
imul
scas
aad
or
jmp
cld
incl
jno
ds
das
out
leave
xchg
std
push
dec
jg
cmp
aad
test
mov
das
vpavgb
dec
pop
pop
jns
push
ljmp
loop
scas
mov
xchg
cmc
adc
dec
and
inc
pop
dec
xchg
incl
add
addb
fwait
sahf
addr16
jo
jg
das
dec
adc
dec
leave
dec
jg
lret
push
icebp
lret
gs
push
mov
jecxz
and
incb
call
mov
aad
jmp
dec
lcall
out
add
sbb
mov
call
xchg
push
pop
jle
mov
fistpll
cmp
insl
jg
daa
lret
loope
push
push
jg
xor
xor
cli
fucom
scas
popf
jae
add
add
xor
aaa
sub
lods
cmp
add
and
sbb
popf
popl
fs
stos
or
fistpll
pop
shr
push
ret
pop
add
push
imul
lcall
pop
es
inc
add
iret
pop
movsl
and
lock
cmp
sbb
jmp
or
cmc
or
sub
imul
push
jle
mov
cmovs
mov
sub
sbbl
cli
das
hlt
inc
decl
sbb
add
adc
pop
lcall
insb
arpl
mov
outsb
lods
repnz
mov
xchg
xor
cs
push
stos
lcall
and
adc
sub
loop
pop
stos
sub
add
popl
xor
call
test
test
cmp
out
fcom
jl
cmp
xchg
aad
scas
adc
pop
test
inc
add
cmp
filds
mov
sub
cmc
decl
leave
aaa
add
sbb
fdivr
mov
das
cmc
pop
add
mov
add
rcll
inc
lds
pushl
test
lea
adc
or
cwtl
mov
lcall
jmp
mov
test
lcall
adcl
pop
inc
lods
aaa
aad
test
movswl
and
lea
call
iret
cmp
mov
fisttpll
mov
gs
in
or
inc
ljmp
inc
jmp
jmp
jmp
xor
dec
inc
fnstenv
dec
jg
out
xchg
lods
sbbl
insb
out
sbb
orl
add
bound
ljmp
notl
fmull
push
jno
mov
mov
clc
call
fisubl
ret
call
adc
or
out
sub
ljmp
cmc
xchg
mov
leave
rcrb
out
xchg
shll
js
std
lea
aaa
pop
cld
lods
scas
sbb
std
or
imul
jg
or
xchg
xchg
idivl
jp
mov
mov
fdivrp
jecxz
int3
xchg
pop
std
pop
and
mov
mov
add
jg
adc
push
sub
mov
or
outsl
cmp
jg
shll
add
test
push
mov
pop
rorb
out
icebp
lods
cwtl
ljmp
mov
out
xlat
rorb
xor
xchg
jle
push
push
pushl
pop
outsl
mov
fldt
jecxz
clc
jnp
mov
push
in
xchg
mov
push
mov
les
das
xchg
lret
les
mov
int
inc
mov
jg,pn
pop
sbb
jg
leave
pushf
rcll
cmp
and
jle
pop
imul
insl
push
lret
in
pop
inc
dec
in
mov
jmp
repnz
xchg
rorl
pusha
pop
add
jnp
insl
ds
jecxz
int
xchg
lret
push
testl
sub
ret
pop
cs
add
push
pop
out
cmc
jb
lret
in
sar
xchg
cmp
lods
aas
push
aad
lea
push
mov
push
decb
xchg
or
jns
incl
jmp
pop
push
int3
xchg
lret
testl
jnp
mov
cli
icebp
fcmovbe
adc
add
adc
add
xchg
or
mov
sub
in
dec
dec
add
bound
mov
outsb
fdivs
jg
pop
sbbb
std
lods
jns
std
inc
incb
jmp
loope
jmp
insb
call
ljmp
lds
push
jnp
mov
test
decl
or
jecxz
aad
movsl
subl
jmp
mov
inc
or
cmp
fstpl
int
decl
add
insb
jg
lock
leave
add
xchg
jnp
mov
jg
xchg
pop
outsl
test
xorb
push
shl
sub
loopne
fstpt
cltd
inc
add
sub
call
stos
mov
and
std
lea
lcall
jbe
xlat
xchg
mov
sti
dec
shrb
cld
das
sub
lods
jo
repz
stc
imul
pop
add
pop
xchg
aas
sbb
cmpsb
mov
pop
inc
ljmp
addl
dec
pushl
icebp
stc
lcall
lods
jbe
test
roll
mov
repnz
ds
inc
pop
and
stos
inc
test
mov
xchg
sbb
incl
mov
std
divl
jnp
cmc
mov
aam
ror
push
repnz
cltd
push
fs
rol
aad
out
insb
pop
push
dec
dec
jge
xor
iret
subb
jbe
orb
ss
jbe
stos
jge
call
cmpsb
pop
push
pop
mov
gs
je
cmp
les
add
mov
add
sbb
incl
push
mov
xor
lret
xchg
mov
sarb
nop
clc
pop
mov
and
fisubrl
test
loop
outsl
mov
cmp
mov
aas
idiv
lods
js
mov
leave
les
fdivr
int3
cld
shll
inc
inc
pop
cmp
mov
ja
xor
lods
or
movsl
mov
push
sar
dec
loopne
adc
adc
mov
test
lock
pushf
push
ret
and
out
adc
lret
inc
gs
enter
pushl
cli
aas
cli
cli
in
es
mov
xlat
repz
mov
js
push
or
mov
ss
jnp
in
cld
dec
inc
shrl
decl
mov
loop
incl
insl
adc
outsl
adc
pop
addr16
xchg
mov
lret
incl
dec
xchg
out
pshufw
cmp
scas
lods
daa
outsl
push
fidivrl
sar
or
adc
xor
mov
adc
inc
je
setbe
in
test
pop
mov
sbb
and
aaa
in
fadd
sahf
cmp
les
or
ljmp
enter
aas
imul
cld
xchg
lock
mov
mov
incl
and
repz
int3
std
call
in
inc
leave
imul
lahf
in
aam
jno
loop
jbe
push
frstor
lcall
outsb
xor
pop
add
push
decl
mov
mov
push
push
mov
push
add
lret
icebp
cld
aas
push
incl
jae
cmpsb
in
add
and
jmp
mov
and
xor
fldt
fistpll
inc
ljmp
fisubl
sbbb
imul
xor
call
mov
jb
jmp
out
jmp
je
push
addl
decb
aas
loope
incl
sarl
lock
mov
fisttpll
decb
outsl
cmp
scas
jge
pop
jp
outsl
xlat
cld
idiv
ret
fldt
ficoml
jmp
aam
mov
pushl
stos
imul
jmp
sub
test
cmp
mov
xchg
test
pop
inc
aam
mov
jno
jb
fimuls
sbb
and
jl
ljmp
mov
dec
cld
dec
imulb
adc
ljmp
imul
mov
stc
dec
push
jne
and
lahf
adc
incl
pop
out
mov
mov
push
cwtl
repz
sbbb
or
adc
adcb
aas
push
jno
cli
adc
cltd
in
cld
repnz
das
cmp
fdivs
dec
sbb
inc
mov
rclb
out
lahf
fistps
movsl
or
jle
int
and
jle
inc
nop
push
leave
mov
leave
pushf
sbb
lret
iret
push
xchg
xchg
mov
xor
mov
mov
xchg
insl
mov
stc
push
adc
fisubrs
xchg
jge
cltd
test
mov
ljmp
insl
outsl
cmc
mov
pop
sarl
movsb
cmp
repnz
xchg
xor
stc
cmp
inc
cld
out
push
dec
lahf
scas
sub
or
push
mov
and
mov
in
enter
test
in
inc
push
add
inc
ljmp
lds
inc
jmp
lods
xchg
add
in
pop
mov
add
in
call
lds
enter
arpl
aam
imulb
inc
jmp
mov
xchg
add
mov
incl
cmc
addr16
xlat
pop
outsb
ljmp
ljmp
lret
pop
jnp
movsl
in
mov
icebp
or
pop
ss
lahf
lret
mov
add
pop
or
cld
and
lcall
popf
ficoms
jbe
push
jmp
jp
and
inc
add
xchg
int3
mov
adc
mov
leave
mov
aad
leave
outsb
cmpsl
repnz
jb
mov
push
pop
movsb
sahf
pop
xchg
gs
or
shl
xchg
nop
inc
inc
mov
mov
push
xchg
jmp
and
add
lcall
ljmp
sbb
mov
mov
adc
dec
ljmp
jecxz
and
mov
mov
cmc
sub
hlt
and
inc
cmp
adc
loopne
incl
clc
or
int
push
jge
in
inc
mov
push
std
push
cmp
dec
inc
sub
lcall
push
push
mov
jmp
cmp
aad
fdivr
lods
decl
xchg
pop
stos
lcall
or
lcall
scas
das
fsubrl
sti
xor
mov
dec
mov
lea
pop
cmp
mov
ss
or
popa
and
jnp
jp
mov
in
jle
add
pop
stc
fidivl
adc
call
fucomip
inc
jb
pop
mov
incl
stos
andb
cld
inc
xor
imul
mov
mov
aad
jle
lock
das
push
xchg
fistpll
jge
lret
jmp
lret
cli
xchg
dec
add
push
stc
sub
roll
adc
decl
js
push
mov
in
push
push
in
inc
jmp
xor
lcall
lcall
mov
jmp
stos
incl
mov
jb
incl
add
movsb
and
xor
decl
ret
lcall
mov
ljmp
call
pop
jle
ds
enter
arpl
in
inc
xchg
or
nop
adc
das
pop
sbb
sub
mov
inc
cmc
mov
pushl
mov
iret
xchg
ds
call
add
in
enter
aaa
lahf
and
nop
sub
lcall
add
pushl
dec
xlat
insb
jmp
mov
mov
insb
dec
and
dec
jmp
lods
xchg
lret
outsl
fdivrp
mov
ljmp
into
sbb
fistpll
sub
stos
add
scas
or
xchg
push
call
out
xchg
outsl
test
call
mov
sbb
mov
stc
adc
dec
pop
dec
push
lock
jl
jns
scas
ss
adc
cmp
ficoml
sub
cmp
lcall
lret
jmp
fnstenv
pop
mov
cmp
mov
xchg
call
mov
push
daa
inc
xor
xchg
lcall
jns
pop
inc
jmp
es
icebp
call
mov
xchg
dec
jmp
jmp
adc
data16
pop
mov
pushl
mov
shll
shrb
js
clc
sub
dec
push
dec
sub
nop
scas
jae
and
ljmp
jp
xor
popw
pop
lods
arpl
inc
ds
incl
add
xor
add
jg
ja
push
push
xchg
adc
xchg
out
adc
cld
lcall
call
pop
imul
push
adc
push
pop
mov
xchg
mov
xor
mov
aam
mov
pop
mov
push
pop
sub
pop
in
fisttpl
push
ret
scas
or
es
sub
lods
out
xchg
mov
xchg
cmpsl
ret
pop
stos
jb
mov
aaa
fwait
popf
sar
mov
add
sar
jno
adc
enter
cs
xchg
pop
inc
arpl
fimull
movsb
add
lea
push
add
add
incl
rcr
push
sub
or
lcall
call
sub
addr16
je
popf
pop
xchg
mov
add
jg
ljmp
in
push
fsubl
cmp
jae
outsb
xor
mov
sbb
clc
ljmp
lds
add
pop
fcmovnb
in
into
mov
std
popf
sbbb
jg
jmp
dec
fsubrl
or
pushf
psllq
push
mov
fcomip
call
in
notb
pusha
jle
push
sub
inc
mov
and
xchg
ljmp
sub
stc
mov
ds
movlps
add
jle
mov
mov
adc
outsb
mov
add
sar
inc
ja
repz
imul
xorl
adc
cmp
outsl
std
mov
and
fcomps
add
ljmp
pop
xchg
pushl
mov
clc
or
dec
stos
hlt
lahf
ds
sub
decl
jmp
add
pop
js
enter
mov
pop
xor
and
inc
jecxz
outsl
mov
imul
aam
and
ljmp
sti
mov
les
mov
iret
mov
mov
mov
jae
push
or
pushl
lret
add
dec
pop
int
loopne
mov
add
test
rcrb
jmp
and
adc
pop
int
pop
popa
pop
int3
xor
mov
add
push
daa
adc
push
arpl
inc
push
mov
sbb
mov
imul
push
mov
and
jo
icebp
mov
loopne
jmp
cld
push
jmp
mov
rcll
fwait
test
jl
imul
push
or
in
lahf
sub
pop
daa
push
je
cwtl
lods
dec
pop
lret
adc
pop
jae
push
mov
xchg
sbb
dec
shll
mov
int3
and
repz
pushl
mov
into
xchg
hlt
jbe
test
push
sbb
cli
or
mov
out
adc
mov
and
sbb
mov
fnstenv
loop
test
aaa
pop
test
dec
sahf
or
and
mov
dec
sbb
mov
in
cmp
mov
ss
lea
leave
xchg
push
inc
sub
and
push
fidivl
stos
sbb
push
repnz
insb
ret
sbb
jns
mov
call
ja
sub
lock
aaa
insb
adc
inc
or
mov
fadd
cli
dec
cmpsb
fs
andl
nop
fbld
cwtl
bound
add
xchg
jg
push
stos
es
push
fucomp
push
es
push
fneni(8087
pop
addr16
push
clc
push
shl
or
adc
sub
cmp
cmp
xchg
jb
daa
movsb
mov
sub
cmpsl
inc
sub
xlat
pushf
push
pop
test
xchg
cmpsb
cmp
pop
decl
jnp
or
add
imul
jno
roll
dec
dec
push
add
jmp
pop
dec
sti
jp
mov
pop
add
aaa
jecxz
mov
clc
in
clc
or
call
fidivrs
xchg
aad
dec
mov
push
and
subb
inc
loope
sbb
xchg
cmp
inc
push
add
mov
clc
testb
je
mov
mov
movsl
out
push
incl
cwtl
lea
mov
pushw
ret
jge
lock
inc
xlat
and
jg
xchg
pushl
out
sbb
jb
stc
insl
pop
repz
sub
lret
test
ret
pop
pop
cli
ljmp
fsts
lods
popa
mov
test
or
add
adc
sbb
jg
incl
std
jp
mov
or
pop
push
inc
push
outsl
mov
out
les
cmp
lcall
push
stos
sub
sub
mov
aaa
test
mov
pop
cmpsl
lcall
in
mov
mov
das
mov
mov
fisubrs
insl
addr16
push
enter
jbe
pop
xchg
ljmp
xor
sbb
jb
je
aad
and
dec
das
fs
cs
xor
jmp
fcompl
cmp
testl
and
nop
les
or
fnstenv
pushl
jl
push
cmp
movsb
add
mov
xor
pop
je
add
mov
xchg
cmc
dec
inc
ljmp
xor
inc
and
into
xchg
pushf
insb
aad
cmp
decl
pop
hlt
divb
arpl
out
loop
lcall
mov
and
outsb
insl
sub
xchg
ret
pop
pushf
or
in
cmp
push
sub
cmp
cmp
lret
xchg
sbb
lcall
jle
test
mulb
divl
xlat
movsb
jns
leave
pop
jmp
or
jecxz,pt
or
mov
mov
adc
mov
pop
fcoml
dec
and
insl
mov
and
push
or
mov
cmp
stc
lret
mov
fcomps
in
mov
jmp
cwtl
add
mov
xchg
int3
xchg
fstl
test
cltd
push
in
js
mov
incl
inc
enter
mov
and
pop
dec
lret
xchg
fsubl
call
push
xor
mov
cmp
pop
arpl
mov
xor
ljmp
mul
mov
xchg
lods
add
xor
aad
or
loopne
lcall
movsb
inc
shlb
lds
fildll
sbb
xor
fcmove
fdivrl
das
or
hlt
cmp
cli
dec
imul
dec
aam
call
sbb
sar
outsl
lock
pop
pop
sub
ljmp
sub
in
mov
cli
imul
sti
repnz
scas
cltd
loop
cli
ret
movswl
mov
stos
popf
dec
jecxz
sub
nop
js
rcll
insl
mov
jb
mov
aam
pushl
sahf
pop
add
in
cwtl
je
adc
xchg
mov
jg
clc
pop
imul
mov
sbb
imul
incl
rclb
adc
or
sbb
test
loopne
sti
adc
jno
or
mov
int3
out
push
xchg
cmp
ljmp
hlt
adc
inc
dec
fcoms
adc
pop
push
sti
fisubrl
mov
xlat
sbb
dec
xchg
sbb
push
mov
ljmp
jg
sub
mov
push
mov
inc
mov
lcallw
mov
mov
shl
dec
adc
test
ret
jp
jp
lock
outsb
and
add
hlt
out
es
pop
mov
lret
jecxz
sub
decl
pop
out
mov
pushf
sbb
xor
fnstcw
jecxz
jl
stc
jg
js
jg
jg
movsb
cltd
adc
adc
int3
clts
call
fmul
sti
inc
jg
inc
mov
mov
adc
cmp
into
lcall
scas
adc
lahf
lods
xor
or
mov
xchg
gs
sbb
cltd
in
lcall
movsl
imul
into
out
cmpsb
data16
out
mov
jge
xor
incl
das
test
bound
jo
je
xor
cmpsl
push
or
sbb
ljmp
lock
jp
sbb
lock
das
ljmp
pop
and
xor
pushl
dec
sub
inc
int
xor
fwait
pop
cltd
cli
movsb
xchg
push
arpl
and
mov
call
out
repz
insb
dec
lods
int
fldcw
sbb
incl
add
mov
mov
les
gs
xor
cli
and
sub
xor
icebp
xchg
add
push
pop
dec
cli
jmp
add
jecxz
out
pop
and
push
adc
inc
mov
mov
or
das
or
out
jmp
jbe
cmp
push
outsb
mov
pop
push
pop
nop
sbb
xor
insb
lret
jae
movsl
lods
stc
jl
notb
call
adc
or
pop
sub
mov
fistpll
pop
ljmp
cmpl
dec
xchg
int3
xchg
ss
call
ds
js
das
mov
sbb
push
push
dec
sub
test
pop
mov
inc
lock
lcall
inc
arpl
and
shrl
add
in
push
inc
icebp
lock
call
sbb
loopne
call
and
hlt
and
clc
or
mov
mov
pushl
mov
pop
aam
fiaddl
test
pop
sarl
add
scas
cmp
mov
pop
sbb
sbb
push
into
fs
mov
sbb
ljmp
icebp
jp
fstpl
mov
popf
insl
ss
jb
jl
call
fstpl
inc
or
mov
push
in
inc
fadd
sahf
xchg
pop
data16
cmp
push
xchg
std
aad
jne
mov
pop
movsl
in
jl
mov
sub
add
incl
imul
imulb
adc
aad
testl
dec
add
xchg
sub
mov
pushl
aam
xor
sbb
push
loop
movsl
call
mov
mov
lock
cwtl
mov
call
js
nop
call
xchg
cmp
ret
xchg
inc
or
jae
cmc
cld
decl
sarb
pop
inc
sbb
cmpsl
pop
inc
test
mov
in
fucomip
pop
pop
loope
push
fdivrp
gs
mov
nop
fucomip
lods
aaa
xchg
xchg
dec
sbb
aad
push
mov
frstor
movsb
mov
pop
cli
outsl
icebp
ficompl
sub
jg
outsl
mov
decl
jns
or
ljmp
loope
add
pop
loop
test
inc
push
jle
hlt
and
sub
sub
adc
sub
pop
das
cwtl
std
movsb
jle
pop
xor
je
or
pop
fisubl
shlb
lret
insl
scas
push
mov
jmp
lock
pushl
jae
xlat
cmp
add
jl
ret
inc
popa
inc
mov
arpl
fildll
orb
mov
jmp
jecxz
jge
add
int3
jl
pop
insl
out
lods
data16
hlt
mov
rolb
jmp
jmp
dec
out
cmp
cmc
adc
inc
int
test
scas
popa
push
xor
mov
cmp
push
jmp
and
mov
loopne
jno
mov
add
mov
cltd
sub
jge
mov
or
outsl
mov
pop
in
dec
les
xchg
stc
pushl
push
testb
fwait
mov
scas
inc
jp
mov
ja
mov
lock
lcall
sub
sub
fistps
imul
fcompl
std
popl
rcll
inc
lods
das
ret
xor
aas
xchg
in
test
addb
mov
pushl
clc
les
push
jo
lods
adc
lds
xor
pushf
inc
inc
test
sbb
mov
outsl
decl
das
lock
lret
pop
ficoms
cmp
inc
inc
popf
ficomps
mov
les
add
jp
out
jecxz
out
cmp
mov
pop
shr
jbe
cmp
cmp
mov
aaa
sub
mov
jnp
loopne
inc
xor
cwtl
push
lahf
mov
inc
cli
outsl
inc
je
cmp
pop
incl
jg
dec
fcoms
sbb
mov
popa
fdivp
pop
inc
stc
lock
stos
mov
pop
jno
rcll
or
adc
mov
mov
and
inc
loopne
push
mov
or
lcall
stos
sub
jmp
mov
jo
mov
adc
call
push
cmpsl
imul
cmpsb
add
ljmp
jge
test
movsl
fidivs
idivb
mov
movsb
pop
mov
cs
stos
push
call
sbb
testl
rolb
in
int
xor
pop
push
ljmp
ffreep
dec
mov
cmp
mov
mov
lret
in
xor
dec
cmp
in
in
push
xchg
cmp
add
fstpl
xor
mov
nop
and
dec
sub
or
clc
in
clc
mov
and
xchg
pop
test
cli
lret
fsts
sbbb
loop
add
incl
cli
pop
and
and
lds
mov
add
lods
pop
call
push
xchg
mov
dec
cmpsl
inc
addr16
nop
lea
fistpll
dec
add
mov
ljmp
das
insb
jg
shrl
jp
inc
movsb
das
push
or
fs
and
dec
negl
jmp
sahf
xor
dec
dec
xchg
push
xchg
imul
inc
xchg
jg
or
lahf
insb
test
push
sti
in
xchg
mov
test
sbbl
lds
mov
add
pop
mov
sarl
int3
ljmp
lock
jns
shlb
sbb
rolb
xchg
or
sub
or
incl
and
mov
sbb
or
sbb
hlt
lcall
jae
mov
in
or
push
and
inc
outsl
hlt
or
out
sub
das
jmp
movb
sar
dec
cmp
xchg
jo
push
inc
mov
sub
xor
lcall
mov
lcall
push
call
orb
lods
push
lahf
or
out
stos
xchg
fnstsw
popf
adc
adc
ja
pop
sahf
jecxz
enter
outsl
std
and
test
fmuls
sbb
or
clc
push
mov
push
push
mov
xlat
test
add
xchg
lcall
repnz
sub
jmp
add
xchg
push
mov
jmp
rcll
push
xchg
ljmp
jmp
dec
push
sub
mov
cmpsl
adc
jg
pushf
out
lods
std
mov
mov
popa
dec
and
xchg
pop
dec
lods
sti
data16
mov
push
push
cld
inc
jno
hlt
mov
ljmp
inc
mov
jno
mov
lret
mov
lea
inc
cwtl
idivb
pop
mov
mov
sahf
sub
addr16
pushf
call
jg
bound
je
sbb
and
push
xchg
dec
mov
cmp
popa
push
sub
and
ljmp
xor
mov
xlat
fdivs
enter
cld
data16
decl
cmpsb
imul
jmp
insb
ret
sub
push
jb
cmp
je
aad
ja
xlat
push
mov
mov
icebp
xor
cmp
jg
cmpsl
mov
jl
aam
decl
repz
pcmpeqd
push
dec
push
push
adc
xchg
incl
fwait
mov
or
lret
mov
pop
cmpsb
and
cmp
cmp
and
arpl
inc
aaa
mov
pop
jbe
mov
das
call
mov
inc
and
jmp
lret
pop
out
in
cmp
repnz
leave
mov
adc
clc
pop
sbb
data16
push
adc
incl
insl
jl
and
mov
sub
ss
adc
mov
dec
std
pushl
aas
adc
sub
call
pop
cli
inc
add
pop
into
je
jae
pop
mov
pop
push
hlt
iret
outsb
sar
jmp
das
xchg
mov
xor
in
pop
dec
xlat
mov
and
xor
aas
mov
call
insb
out
loop
cmp
rorl
and
lcall
pop
ficoms
addr16
insl
dec
scas
xor
enter
pusha
dec
mov
sbb
fcoms
aaa
incb
adc
jo
or
fwait
mov
add
aad
pop
call
incl
repz
stos
xchg
insb
inc
mov
cwtl
out
push
ja
inc
and
and
pushl
jecxz
push
cmc
dec
fucom
cmp
es
bound
inc
lret
shll
in
sbb
sahf
bound
mov
cltd
cmp
ffreep
inc
jecxz
daa
jb
mov
sbbb
and
ljmp
test
push
mov
test
mov
scas
stos
popf
add
xchg
mov
pushl
xor
xchg
mov
fcoml
pushf
pop
sub
lea
mov
ja
adc
and
mov
insb
jno
pushf
pushl
out
push
pop
add
adc
in
xor
ret
test
lahf
mov
xlat
outsl
xor
sub
fs
test
or
mov
mov
mov
idiv
inc
aad
out
std
inc
jne
call
inc
push
loopne
mov
pop
adc
popa
iret
enter
or
mov
fimuls
cs
.byte
hlt
inc
.byte
out
or
add
push
lods
sti
hlt
cs
add
inc
inc
pop
jmp
push
adc
jl
cmp
lods
and
xchg
xchg
xchg
xchg
cmp
mov
xchg
xchg
xchg
xchg
jo
and
xchg
xchg
xchg
xchg
fadds
pushf
xchg
xchg
xchg
xchg
dec
js
in
xchg
xchg
xchg
push
xchg
xchg
xchg
mov
insb
sub
in
enter
xchg
xchg
cwtl
push
sbb
xchg
xchg
xchg
xchg
adc
adc
xchg
xchg
xchg
test
or
xchg
xchg
xchg
xchg
xchg
rcrb
xchg
xchg
xchg
add
inc
je
xchg
xchg
xchg
fs
nop
fmull
mov
xchg
pusha
les
adc
call
sbb
sbb
adc
int
out
in
mov
mov
and
inc
dec
ja
jp
gs
insl
repz
decl
arpl
ja
jp
add
and
xchg
sbb
and
mov
adc
in
rcrb
nop
push
jge
xor
add
pop
add
lock
nop
fistl
cmp
push
adc
int
repnz
add
gs
lods
daa
add
cmc
sbb
call
call
lcall
rorb
or
and
inc
xor
mov
test
jle
or
aas
mov
fcomip
pop
inc
rolb
xor
lret
iret
xor
fwait
jmp
js
push
shll
addl
out
pushl
imul
imul
fs
arpl
rcr
pop
mov
jecxz
add
lods
out
scas
cmp
filds
pop
pop
icebp
push
or
sti
or
negl
cmp
and
aaa
sbb
sbb
out
adc
in
dec
andb
pop
dec
jge
or
add
mov
pusha
add
sti
out
fistpl
dec
mov
stc
int3
adc
and
aaa
imul
and
nop
data16
mov
movsb
sbb
or
sbb
fistpll
jo
imul
jno
or
inc
dec
inc
pop
gs
mov
inc
inc
dec
data16
dec
jp
jns
xchg
outsl
jo
mov
inc
dec
imul
adc
gs
xor
cs
insb
cmp
add
gs
push
outsw
jb
popa
jne
imul
arpl
outsl
jne
je
push
xchg
add
lret
in
clc
push
inc
pop
mov
incl
push
enter
push
xor
lahf
or
jb
gs
enter
mov
mov
lcall
dec
gs
popa
addr16
add
sbb
sbb
call
jb
imul
pop
pop
jbe
popa
ret
jnp,pt
cltd
push
popa
jb
pshufw
nop
inc
mov
push
sbb
dec
cmp
or
cmp
sti
cmpsl
cmp
sub
ds
divb
jno
and
mov
aas
fcomps
pop
sub
pushf
pop
adc
jb
jb
push
je
and
or
addr16
xchg
sub
adc
idivl
loop
dec
push
push
dec
push
in
dec
sbb
loope
adc
cs
dec
dec
daa
ret
daa
inc
jb
jb
jbe
insb
outsl
ja
popa
jecxz
add
inc
inc
inc
mov
pop
fcomps
jne
je
dec
outsl
arpl
mov
dec
imul
outsb
jae
mov
test
mov
insl
je
das
sbb
mov
fs
aam
in
cmp
insb
pop
or
xor
imul
outsb
adc
leave
and
jne
je
lahf
in
in
inc
push
push
dec
gs
cmpsl
lods
cmp
xorl
daa
fcmovne
lret
mov
xchg
sarb
jns
cmp
push
sbb
aas
sbb
imul
cmpsl
add
ss
jl
aaa
push
dec
xor
outsb
dec
fcom
shr
loop
test
jae
cs
adc
lret
jo
push
daa
jl
scas
movd
mov
jg
or
push
add
jo
push
pop
dec
cld
data16
add
push
mov
push
push
push
lds
mov
fucomp
outsl
pop
cmp
push
push
mov
movl
cmpw
std
or
mov
jo
mov
outsl
mov
adc
sub
jmp
inc
call
cld
add
jnp
adc
test
jg
sub
psubd
or
add
push
sbb
into
xchg
out
or
xor
adc
movsb
fwait
sbb
into
cwtl
fs
mov
add
in
jl
jecxz
jl
pop
jb
jl
jmp
imull
mov
insb
cmpsl
adc
push
ljmp
push
aam
xor
mov
mov
dec
push
cmp
add
imul
mov
add
jb
xor
add
nop
mov
jbe
xor
rcrb
jb
adc
rolb
jg
outsb
jmp
mov
add
es
ss
in
or
mov
mov
mov
negb
cwtl
das
cmp
stc
cwtl
aas
frstor
jb
or
rcrl
xchg
and
mov
pop
pop
ss
xchg
pop
mov
je
and
and
addb
enter
add
add
add
sub
add
or
outsb
push
push
sbb
sub
shrb
and
iret
lds
adc
js
xor
sar
jae
or
outsw
adc
fwait
jo
daa
lahf
or
les
cmpsb
loope
xchg
pinsrw
cmp
enter
adc
lock
leave
add
add
mov
add
dec
movsb
or
and
jnp
and
insb
ret
sbb
bswap
aaa
mov
fdivs
fdivrs
nop
xchg
daa
and
mov
fmul
enter
add
or
or
cmp
pusha
test
mov
xor
pushl
and
sub
mov
sbb
or
jo
and
sbb
in
jmp
mov
and
pop
or
jo
cmp
fs
in
fs
inc
mov
fs
inc
dec
pusha
and
mov
in
in
nop
pop
push
nop
mov
pop
mov
inc
xchg
xor
add
into
dec
push
push
xor
loopne
inc
dec
push
push
pop
fadds
outsl
loopne
or
adc
xchg
jmp
inc
cmp
xor
mov
nop
xor
adc
dec
inc
xchg
rcl
inc
lcall
jmp
inc
lods
jmp
jne
adc
inc
mov
jp
fcmovnu
popf
hlt
cld
or
push
fistpl
faddl
mov
fnstenv
push
sbb
and
daa
filds
xor
fiaddl
cmp
fimuls
adc
ja
enter
and
mov
add
bound
and
xchg
fcomps
inc
jae
cmp
enter
jp
inc
mov
push
popa
popf
pushf
pushf
int3
int3
xor
frstor
pop
jno
icebp
pop
xchg
xchg
dec
inc
jl
jl
fwait
cmpsb
frstor
nop
push
adc
fs
adc
jns
jb
das
add
mov
add
sbb
jmp
cmp
ljmp
pushf
jo
gs
push
sub
fwait
xchg
es
aaa
or
vmwrite
lcall
and
adc
and
or
nop
xchg
xchg
adc
and
insb
sbb
rclb
add
xchg
xchg
mov
mov
sbb
jg
cmpl
pop
push
std
lret
call
cld
adc
or
mov
mov
out
ja
xlat
insl
imul
and
add
inc
ss
fmuls
rorb
or
adc
lea
sub
cld
movsl
add
rorb
pop
arpl
mov
cmp
loop
mov
cli
fildl
push
push
andl
adc
in
jmp
andl
ja
loopne
and
pop
in
rorl
inc
int3
invd
lea
or
imul
dec
sbb
or
dec
sbb
lds
adc
add
xchg
insl
inc
sarb
xor
nop
leave
dec
push
nop
hlt
es
fmull
push
sub
lea
sbb
fbld
add
add
add
jmp
pop
xor
add
jb
test
test
orb
out
adc
movsl
xorl
and
or
mov
push
cmp
in
or
push
nop
and
xchg
in
add
rorb
adc
and
gs
push
test
fmull
daa
sbb
jge
fdivl
mov
pop
notb
mov
enter
pushf
push
cwtl
or
add
jmp
or
or
or
adc
mov
mov
push
sub
sbb
idivb
leave
insb
adc
insb
popa
add
mov
cmc
movsb
xchg
popf
adc
out
lock
add
cld
lds
dec
mov
and
sbb
fchs
pop
loopne
xchg
xchg
push
loopne
loopne
xor
mov
dec
inc
mov
stc
insb
push
std
mov
test
in
es
cmp
arpl
cld
add
fsts
push
fs
int
xor
add
pushf
and
push
popa
nop
xchg
xchg
sbb
push
dec
adc
es
cmp
scas
add
and
nop
or
and
and
in
ficomps
pushf
pushf
insb
push
sbb
and
pand
in
fwait
sbb
lods
mov
sbb
in
add
jmp
push
cmp
add
rolb
es
daa
nop
cmp
or
adc
pusha
inc
in
cli
je
cmp
cmp
lea
je
mov
dec
push
fsubr
pop
xchg
fadd
aad
fs
insb
test
push
dec
inc
daa
xchg
mov
sub
mov
xor
xchg
add
and
mov
pusha
decl
cmp
jnp
add
sbb
xchg
nop
fs
lmsw
sbb
fs
and
fs
cs
sub
or
xor
bound
insb
into
add
inc
lcall
lahf
jb
xor
inc
inc
inc
ljmp
mov
push
ret
cmp
jo
add
ret
addb
imul
adc
in
dec
cs
push
xor
pusha
and
xchg
leave
pop
clc
decb
hlt
andb
mov
mov
sti
pop
pop
leave
ret
jmp
lock
and
or
push
add
sub
nop
movsb
jmp
dec
inc
ss
cmp
dec
enter
cmp
cltd
or
mov
sahf
jo
or
adc
inc
inc
jo
repz
ret
in
add
fs
data16
inc
and
pusha
stc
cmp
mov
add
and
je
jbe
jb
and
mov
xor
mov
pushf
mov
or
leave
and
mov
mov
inc
adc
xor
push
das
push
dec
xor
iret
fcoml
lock
gs
mov
pop
pop
nop
mov
nop
fstpl
adc
icebp
ja,pt
adc
xor
in
pop
pusha
adc
cs
and
xor
fs
adc
adc
xor
xchg
adc
mov
xchg
or
or
daa
and
adc
or
pusha
and
xor
mulb
and
sbb
xorb
std
adc
pop
jns
adc
or
and
cwtl
popa
scas
in
hlt
push
adc
std
in
fs
call
std
jo
jns
mov
or
std
add
jo
call
icebp
test
into
enter
adc
fucom
xor
pop
fsubrs
leave
fmul
enter
dec
jg
ds
mov
xor
cmp
pop
cmp
inc
inc
dec
inc
adc
fnstenv
rcr
add
add
and
sbb
dec
loop
cmp
stos
cmp
and
push
add
add
idivl
add
sbb
add
iret
lahf
lds
enter
cwtl
add
es
mov
and
dec
rclb
test
repz
dec
add
andl
jmp
pop
or
sub
popl
pop
adc
mov
cmpsb
mov
xchg
test
pop
sub
cmp
test
push
test
repz
ss
jmp
xchg
cs
leave
enter
jge
lret
xchg
sub
jmp
inc
sahf
xchg
xchg
push
jl
and
in
adc
aam
or
lahf
add
push
push
shlb
imull
cmp
xor
or
sbb
pop
clc
sahf
std
or
ljmp
mov
daa
int
dec
add
add
xchg
xchg
xchg
or
dec
mov
rcl
push
les
push
xlat
loopne
les
pushf
pushf
pushf
loopne
shl
retw
mov
dec
fxch
leave
enter
mov
fwait
mov
adc
lea
dec
mov
in
dec
aam
inc
add
scas
mov
xor
sbb
lea
dec
fidivrs
sbb
lods
pushf
push
sbb
daa
in
aad
fadds
cmp
xchg
data16
mov
fstps
cmp
cmp
nop
pop
push
repnz
xchg
decb
sbb
cmp
mov
push
or
mov
add
out
daa
dec
mov
jns
dec
mov
sahf
add
lods
cltd
add
xor
lods
test
jno
jo
lods
orb
sahf
and
pop
sbb
movsb
push
dec
mov
or
adc
shlb
and
jbe
movswl
mov
pop
mov
dec
adc
cli
cli
cltd
idivl
scas
outsl
iret
testl
pop
jge
add
loop
jp
jg
xchg
inc
loopne
dec
add
inc
mov
int
int
js
jmp
enter
add
jl
or
leave
leave
sbb
js
dec
es
adc
push
mov
sbb
sub
pop
leave
addr16
je
or
cmp
test
jge
jmp
js
or
jl
aaa
sbb
sbb
push
fdivr
sub
or
sbb
in
or
movsb
fistl
adc
xchg
adc
in
xor
insb
mov
fs
or
mov
jg
jl
mov
inc
push
inc
mov
pop
sbb
jno
cmp
adc
xlat
cwtl
sub
imul
or
lahf
mov
xchg
mov
add
pop
sub
xor
dec
adc
fldenv
aam
or
cwtl
mov
cmp
cmp
in
or
in
adc
or
and
je
sub
loopne
loopne
and
sarb
ret
in
push
jmp
jmp
push
push
sbb
in
out
add
push
in
cmc
or
add
inc
mov
and
rolb
outsb
add
pop
add
and
shl
popa
jno
push
mov
iret
pop
push
lods
sahf
add
jns
mov
int3
sbb
pop
nop
xchg
xchg
int3
push
int3
dec
ror
inc
sub
repz
pop
shlb
push
out
push
shlb
mov
mov
adc
mov
mov
jnp
aam
push
aam
cmp
add
aam
inc
cmp
inc
lret
addl
and
enter
add
add
enter
pop
in
sub
inc
das
dec
int3
arpl
int3
add
sbb
cmp
and
add
cmp
rolb
test
push
es
xchg
pop
repnz
in
pop
aad
add
mov
jecxz
mov
cmp
inc
pop
and
jb
add
add
xchg
insl
mov
dec
insl
mov
dec
shlb
add
cld
cld
mov
cvtps2pd
insb
xor
add
mov
ret
inc
clc
imul
hlt
or
inc
inc
push
in
add
mov
and
mov
or
inc
or
sbb
push
add
je
in
add
addr16
fcom
ja
or
pop
mov
pop
adc
fistpll
dec
test
int3
jmp
inc
or
push
in
or
das
or
and
popa
insb
cwtl
in
add
test
jnp
insl
inc
push
fs
xchg
sub
in
dec
sub
loopne
nop
and
fcoms
sub
cmp
xchg
push
xor
jnp
fsubrs
in
pusha
ret
mov
outsl
xor
pop
rolb
test
rcrb
jno
xor
insb
add
aam
xor
inc
lods
fs
aam
lock
sahf
data16
xchg
nop
mov
dec
inc
sahf
mov
je
test
add
and
and
mov
rorl
add
and
mov
push
lds
dec
mov
leave
and
cmp
loopne
sbb
dec
lods
mov
and
jl
inc
mov
ret
insb
jne
test
add
xor
mov
das
xor
clc
pop
inc
hlt
jo
or
or
cmp
dec
loope
xchg
mov
fldl
int3
add
subb
inc
xchg
push
aad
or
and
mov
incl
jo
hlt
cltd
out
stos
mov
xor
js
cmpb
lret
add
ljmp
cmp
out
lahf
sub
and
mov
das
jae
or
call
mov
jle
jne
push
leave
mov
iret
xchg
shll
aam
cld
enter
mov
xor
lea
lds
imul
jmp
or
popa
cwtl
jp
xor
repz
insl
mov
jecxz
xchg
cmpsl
and
dec
sbb
data16
lcall
mov
roll
lods
outsb
outsl
push
pop
pop
out
loop
mov
mov
xchg
roll
daa
inc
xor
ret
sub
or
pop
jbe
lcall
jmp
dec
rorb
dec
fidivl
shl
leave
out
xchg
inc
pop
mov
lcall
cmp
test
jecxz
lret
sub
lret
cwtl
pop
mov
out
inc
nop
dec
mov
ljmp
sbb
adc
jp
enter
outsb
dec
xlat
adc
push
or
rorl
xor
fadd
lcall
add
mov
sti
movsl
test
add
sahf
sbb
xor
sbb
or
nop
stc
or
lcall
sub
mov
push
repz
or
and
sete
and
rorb
xorb
xchg
fbld
jo
ljmp
ljmp
fists
cmp
or
adc
xchg
adc
sbbb
ds
mov
cmp
push
into
adc
lods
jecxz
pop
or
pop
add
jo
repz
incl
cld
cmp
rclb
or
add
mov
xor
decl
or
mov
stc
inc
adc
push
push
sti
sarl
scas
mov
data16
call
dec
iret
hlt
cmp
mov
xchg
and
dec
cs
das
cld
or
mov
aas
fstl
addr16
jmp
xchg
stos
mov
xchg
xchg
jmp
clc
mov
fcos
incl
out
ss
jle
inc
aas
ds
cli
mov
pop
mov
nop
rcl
lret
pop
jb
dec
mov
in
jb
jmp
test
hlt
loop
jmp
bound
incl
insb
lcall
lret
pop
push
sarb
shr
test
iret
lods
mov
jg
pushl
add
sub
xor
fcoms
call
ss
xchg
jmp
pop
repz
call
xchg
stc
inc
jb
lods
lahf
pop
jl
movsl
sbb
add
xchg
out
add
ljmp
mov
stc
jmp
into
inc
sub
and
in
lcall
mov
sarb
jg
js
dec
dec
fs
and
jb
mov
repz
pop
and
pushf
incl
ret
pop
adc
push
ss
pop
lcall
sub
in
pop
dec
stc
imul
xchg
lds
pop
aas
out
mov
sbb
push
mov
xor
lods
mov
scas
mov
sbb
mov
pushf
inc
mov
sbbb
iret
lock
xchg
nop
and
ljmp
mov
add
pop
mov
sti
jbe
pop
xor
lret
cmp
and
stos
stos
pop
jp
enter
shlb
adc
in
nop
sahf
loop
inc
inc
jo
xchg
fwait
ljmp
pushl
mov
sbbl
in
fs
pusha
rcr
cmp
cmpsl
cmpsb
adc
pop
clc
or
and
scas
out
int
test
hlt
push
or
js
xchg
in
xor
push
mov
dec
dec
push
add
leave
subb
cwtl
lods
pop
xor
stos
call
in
mov
mov
lahf
cmp
mov
xchg
ret
and
aaa
or
inc
lods
pop
dec
mov
outsl
cld
dec
xor
test
addr16
je
in
push
add
lcall
shrb
clc
sahf
sub
inc
out
insb
sahf
icebp
dec
mov
add
mov
bound
jp
xlat
insb
or
decl
ja
mov
mov
or
loop
ret
mov
sub
int3
inc
mov
dec
inc
lds
fwait
add
in
cmpsb
xchg
fucomi
adc
movsl
outsl
fnsave
inc
repnz
mov
ljmp
mov
mov
push
cs
xchg
and
or
int3
jg
decl
or
loope
pop
mov
pop
popf
cmpsb
jl
fsubs
adc
inc
sub
pop
push
dec
add
loop
push
push
pop
adc
and
fstp
les
call
mov
xor
aam
xchg
fiadds
mov
cmp
pop
es
movsb
xchg
dec
call
pop
push
inc
lcall
hlt
adc
mov
pop
incl
or
pop
aas
sbb
clc
std
sbb
fisttpll
mov
in
incl
dec
inc
pop
lret
test
xchg
jl
enter
daa
sbb
sbb
scas
lahf
shll
xchg
push
out
mov
pop
inc
pop
inc
idivb
rcll
dec
lret
push
xchg
mov
incl
push
xor
mov
data16
inc
ja
push
pop
sub
mov
aaa
jmp
out
jns
hlt
adc
dec
inc
icebp
ja
idiv
out
cmp
aam
mov
out
js
jmp
sbb
xor
sbbl
loope
mov
jg
lods
orb
mov
xchg
sub
test
pop
fldt
repnz
sahf
call
out
leave
leave
mov
test
scas
inc
adc
jns
repz
fnstcw
add
push
call
out
cmp
xchg
or
in
addr16
ljmp
jecxz
out
jns
in
pop
loop
cmpsl
ficoml
push
and
dec
outsb
mov
ljmp
xor
dec
jb
add
cli
mov
outsl
push
scas
push
cmc
adc
inc
cwtl
cltd
ljmp
lock
jns
shrb
jle
aad
inc
xchg
or
mov
leave
gs
mov
sti
jmp
add
ret
and
leave
popa
int
cmp
insb
jmp
and
jge
fidivs
push
xor
daa
adc
lcall
lcall
es
jno
sub
mov
lcall
idiv
aaa
clc
incl
ljmp
ja
stos
xchg
lret
bound
inc
jo
scas
mov
outsl
pop
xchg
fsubl
cs
xchg
cli
sbb
call
decl
jmp
addb
mov
mov
and
scas
mov
ljmp
add
mov
adc
inc
adc
divb
xchg
movsl
xor
inc
mov
ret
or
ficompl
movsb
cltd
xchg
xor
ljmp
insl
subb
data16
xor
cld
scas
in
sbb
xor
call
ljmp
and
andl
fbld
cmpsb
into
dec
test
out
mov
jg
stc
push
or
insl
outsl
test
pop
cmp
jb
iret
adc
test
loop
xchg
cld
incb
cmp
outsl
xchg
mov
push
rolb
sbb
ljmp
mov
bound
xchg
int
push
mov
mov
fcomi
pushl
dec
xchg
add
neg
pusha
ret
cwtl
sub
aam
aaa
subb
fsubrs
push
ljmp
add
insb
lods
pushf
in
cli
fstps
pop
je
popf
push
push
and
add
iret
push
lcall
popa
orb
and
mov
cli
cmp
mov
scas
push
push
ror
lret
ljmp
lret
pop
inc
jo
std
lds
fstpl
lret
mov
adc
mov
add
loope
xchg
repnz
xor
aaa
inc
js
lock
lcall
sbb
push
mov
pop
jl
sbb
sub
out
pop
mov
pop
iret
jmp
sub
xchg
gs
adc
xor
push
inc
lcall
xor
cmc
push
mov
incl
icebp
dec
inc
push
mov
adc
pop
test
ficomps
dec
mov
nop
mov
lcall
inc
lods
xchg
or
jne
sbb
sti
mov
ds
jmp
jne
test
pushl
push
or
xlat
pop
lcall
divb
jbe
or
fistpll
cmp
or
nop
subl
sbb
sbb
jmp
ficomps
stos
pop
inc
loopne
ja
sub
xor
sbb
mov
inc
push
xchg
mov
and
or
xchg
inc
ljmp
in
push
bound
inc
adc
movsl
daa
inc
sub
xchg
ljmp
in
jle
add
xor
mov
cmpsb
test
in
ljmp
sbb
aam
call
jo
and
insl
adc
xchg
clc
and
push
fisttps
pop
out
add
loop
aaa
clc
jecxz
jbe
sub
enter
push
mov
ja
clc
cmpsb
add
jmp
inc
scas
inc
stos
mov
cmp
push
inc
fildl
sbb
out
aaa
push
aas
pop
or
stc
sub
xor
mov
add
popf
jecxz
insl
mov
add
cmp
shl
push
xor
mov
pop
call
clc
decl
ret
adc
aas
sbb
hlt
jne
and
stos
dec
incl
ljmp
divl
mov
cmpl
dec
adc
aaa
cli
pushl
cmpsl
dec
mov
dec
ss
es
testb
fs
pushl
fs
jecxz
lret
pop
cmp
lea
scas
jnp
leave
mov
inc
test
push
rclb
adc
pop
dec
fcmovnu
push
idivb
inc
fsubrl
mov
and
inc
and
mov
rclb
mov
xor
pop
and
icebp
mov
inc
mov
xchg
mov
rcll
pop
stos
dec
xchg
std
aam
or
pop
inc
das
pop
call
fidivs
sti
xor
xchg
ljmp
dec
inc
mov
arpl
and
js
ret
jmp
jg
dec
cld
mov
add
lahf
enter
xor
jp
adc
pop
call
fs
dec
loope
xchg
mov
add
inc
add
add
push
divl
stos
or
adc
push
push
fisttps
or
pop
adc
call
inc
scas
shrb
pop
or
adc
das
bound
dec
icebp
adc
jo
ret
loope
jae
dec
call
out
lock
adc
sarb
mov
jno
je
jg
fimull
mov
out
sbb
cmp
es
cmp
les
mov
pop
jbe
add
lret
ret
lcall
inc
and
push
leave
aaa
sub
rol
pop
scas
or
lahf
mov
push
movsl
mov
fadds
mov
imul
mov
call
gs
in
mov
js
xchg
add
pop
sahf
fcmovbe
add
sub
pop
mov
mov
mov
loope
int
scas
loop
int
mov
or
out
pop
rorb
fsubrp
dec
push
pop
mov
shlb
out
push
xor
sar
sahf
rcl
pshufw
xor
inc
pop
movsb
mov
add
cmc
cltd
stc
jmp
push
jne
pop
jns
nop
cmp
xchg
add
or
stos
stos
mov
aas
in
inc
jns
and
jo
cmpsb
jmp
test
mov
or
jmp
repz
cmp
mov
xor
jb
repz
cmpsb
test
lcall
push
hlt
push
sbb
jg
gs
push
jp
cwtl
out
sti
jbe
push
jle
icebp
hlt
cmp
mov
call
add
mov
rcr
les
jmp
inc
or
inc
pop
push
stc
jecxz
inc
stos
push
and
pop
leave
sub
jae
insb
in
test
cmpsl
or
movsb
ljmp
dec
fwait
pusha
cmp
aas
out
and
rcr
test
cli
dec
pop
jmp
dec
pop
fisttps
mov
mov
scas
sbb
sti
inc
leave
sahf
popa
ss
xchg
testl
adc
mov
jge
sub
push
paddsb
or
out
aas
stos
clc
hlt
andl
test
dec
jns
xor
fldcw
jmp
jbe
dec
push
jg
pushl
or
mov
repnz
jnp
lods
fstps
push
jno
jae
mov
push
pop
jmp
sti
push
sbb
sarb
mov
ja
push
daa
pop
icebp
rcl
cmp
adc
les
mov
stc
decl
ljmp
test
mov
in
test
hlt
scas
lret
cld
jmp
sub
jno
or
test
add
xchg
jbe
pop
out
jb
jge
mov
lret
aas
adc
pop
mov
test
movsl
push
dec
out
mov
pop
repnz
or
sub
ds
icebp
in
add
int3
jecxz
and
aad
adc
mov
repnz
cltd
jmp
mov
lret
adc
lock
jg
repnz
repnz
ds
or
stos
xorb
leave
cmc
add
ljmp
sbb
iret
lcall
repz
mov
jb
push
lds
fldcw
repz
loope
daa
mov
insl
mov
out
loopne
xchg
xchg
aas
mulb
lret
jg
aad
test
das
in
cld
add
das
cmc
add
push
dec
addr16
jns
and
mov
int
lret
in
enter
sbb
incl
pop
decb
push
xchg
sbb
xor
and
mov
out
lcall
decl
fistps
imul
lret
adcl
insl
jmp
fstpt
mov
ficoms
das
xchg
inc
push
aaa
ds
jo
pop
ljmp
jo
repz
movsb
jne
xchg
lret
jmp
movsb
push
xor
lock
ficompl
in
bnd
pop
stos
lods
gs
cmp
pop
fisubl
mov
sarl
das
xchg
dec
loop
out
stos
mov
addl
xor
in
in
push
leave
loope
das
mov
mov
arpl
dec
pop
fs
sahf
dec
push
xchg
outsl
notl
push
test
mov
adc
cld
pop
xchg
cmp
icebp
cmp
jb
into
bnd
bnd
push
lds
sbb
out
out
lahf
repnz
lret
cmpsl
dec
adc
mov
loop
lea
leave
in
mov
xor
pop
cs
lret
jo
subb
add
jecxz
lret
in
mov
int
dec
add
mov
push
out
out
xchg
lret
in
or
push
xchg
rep
ret
sbb
mov
mov
call
loop
xchg
lret
in
lock
stos
mov
jb
pop
push
and
dec
pop
cs
lret
into
push
js
push
push
jnp
jl
in
mov
lock
mov
jnp
in
das
adc
mov
mov
in
adc
ja
cmp
pop
jns
jb
mov
test
cmp
lret
dec
xor
mov
jb
leave
pop
mov
lds
inc
mov
xchg
aas
enter
pop
movsb
inc
adcb
and
fsubr
clc
daa
das
xchg
dec
test
call
inc
mov
sti
mov
loopne
pop
das
call
pop
mov
mov
data16
fwait
repz
pop
ds
jg
mov
mov
movl
inc
xor
jmp
push
les
xor
lcall
or
fs
add
xchg
dec
cltd
xchg
jmp
stc
movsl
movsb
lret
or
push
jp
test
das
aad
ss
out
push
iret
rorb
sbb
mov
xor
stos
mov
inc
cmpsb
xor
or
push
jg
iret
insl
in
or
outsl
mov
mov
aad
cmp
lea
jmp
push
inc
sub
les
or
rorl
lahf
cli
leave
das
call
mov
in
int
dec
rcll
out
fisubrl
movsl
stc
mov
inc
cwtl
jmp
jle
test
std
test
push
jg
dec
xchg
in
pop
sbb
dec
dec
xor
xchg
inc
or
dec
cmp
inc
jb
jns
jge
pop
xchg
and
loope
add
mov
es
pop
das
lcall
push
push
lds
pop
fsts
mov
mov
jg
mov
pop
movsb
test
test
push
jle
xchg
sbb
dec
sarl
push
shlb
idivb
mov
xchg
idiv
in
movsb
or
jg
push
pop
sub
add
sahf
sar
sti
lock
cmp
mov
enter
jmp
push
cmp
cmpsb
push
mov
jne
mov
sbb
iret
or
xchg
dec
repz
adc
and
pop
cmp
mov
or
shlb
das
sahf
mov
pop
repz
dec
stc
stos
add
insb
add
cmp
bnd
mov
fdivs
xor
fbstp
cmp
hlt
lock
jecxz
sbb
movsl
js
pop
push
mov
adc
scas
subl
xor
aam
adc
push
mov
cltd
jmp
cmc
outsl
lret
icebp
lock
sbb
scas
mov
mov
stos
inc
sbb
inc
out
mov
out
iret
mov
bnd
mov
add
lds
testl
arpl
lcall
adc
mov
lods
ds
and
jmp
enter
inc
popa
div
in
es
adc
dec
xor
push
test
cmpl
jge
cmpsl
arpl
xlat
ss
movsl
pusha
loope
and
mov
mov
test
scas
adc
sub
pop
repnz
fadds
push
fwait
cs
dec
xor
mov
stc
adc
fs
call
dec
sub
decl
int3
jnp
in
in
sti
mov
jmp
jp
in
sbb
stos
sub
push
cmp
lcall
lcall
push
dec
and
inc
ljmp
pushl
dec
nop
orl
add
push
push
pop
shll
out
jo
jl
cld
mov
lds
pop
negb
test
adc
das
dec
adc
loopne
out
rolb
adc
dec
xchg
xchg
lods
or
mov
sub
rol
sub
mov
call
loope
mov
sub
out
push
insl
sbb
xchg
in
faddp
jp
ljmp
mov
inc
loopne
js
cmp
pop
jg
pop
xchg
add
in
sub
and
xor
rcrb
outsb
jae
or
xchg
mov
mov
pop
fsub
jg
inc
std
in
mov
shll
cld
aaa
pop
mov
mov
int3
jmp
dec
sub
call
clc
out
jb
cmp
ja
imul
sbb
loopne
mov
fbld
cwtl
adc
lods
loopne
insl
ret
adc
insb
mov
dec
insl
mov
mov
decl
test
int
sahf
mov
test
scas
enter
imul
int3
pop
nop
adc
hlt
in
shlb
xchg
inc
pop
xchg
cmp
sub
jmp
sbb
outsl
lock
push
lcall
loop
stc
pop
popf
addl
pop
or
pop
adc
lea
sahf
out
cli
in
mov
shll
dec
cltd
ja
fadd
pop
loopne
fisubrs
pusha
incl
ret
lcall
lcall
sbb
ror
pushf
mov
cmp
ljmp
ret
movsb
ljmp
shll
cmp
iret
cmp
aas
push
inc
dec
icebp
int
shll
adc
test
adc
call
lahf
aad
aad
outsb
and
movsb
sbb
or
loope
dec
lret
jmp
mov
cmpl
int
loop
out
jmp
mov
pop
xchg
lock
ja
mov
int
ljmp
negl
fistl
mov
aam
repnz
stc
add
in
dec
decl
mov
mov
enter
or
dec
outsb
imul
pop
pop
dec
movsl
and
inc
ret
rcrl
call
add
xchg
mov
icebp
loop
mov
mov
lret
std
rolb
std
sub
add
add
lahf
jmp
cltd
in
decl
sbb
cld
xor
mov
js
adcb
lret
push
dec
lds
stc
adc
inc
xor
jmp
cmp
pop
mov
add
and
mov
aaa
cmc
shlb
sbb
lods
out
out
outsb
add
jmp
cmc
repnz
addb
xor
cmc
pop
repnz
and
push
mov
jbe
cmpsb
jmp
sar
push
dec
insb
xchg
orb
jo
cld
inc
or
or
shr
jecxz
push
aas
jmp
and
mov
push
jno
mov
mov
cld
popa
jge
ret
shl
pushf
aaa
jg
fbstp
lock
fs
xchg
mov
test
outsb
xchg
push
inc
movsl
pop
gs
adc
out
stos
pop
cwtl
lcall
sub
fldl
xchg
daa
ret
jg
jg
addb
cmpsb
ljmp
and
mov
push
dec
clc
jge
sbb
mov
test
int
and
push
cld
pop
imul
bnd
stos
sar
imul
aad
pop
inc
das
xchg
pushl
int
push
push
or
xchg
jecxz
add
lock
aas
clc
mov
fwait
int
lcall
decl
jae
inc
xchg
add
and
sbb
lea
loopne
mov
call
pushl
dec
pop
repnz
jmp
ss
push
lret
push
in
stc
or
xchg
scas
icebp
xor
not
mov
lcall
mov
jbe
push
adc
add
into
jb
imul
jne
stc
jmp
in
push
mov
xor
and
dec
mov
movl
into
adc
push
lock
mov
test
mov
stc
lret
sbb
les
fildll
les
pop
movsb
lret
ficomps
call
mov
mov
xchg
jg
mov
fstl
pushl
lret
sahf
pop
adc
lret
jecxz
movsb
setge
cwtl
xchg
mov
or
dec
repnz
jb
mov
dec
rcrl
inc
pushl
arpl
add
inc
out
and
lcall
orb
or
icebp
mov
cld
in
fsubs
js
roll
xor
cld
incl
or
stc
aaa
lahf
mov
js
jns
out
sub
loop
dec
clc
stos
sbb
mov
lods
jg
mov
pop
jne
fldenv
in
test
dec
xor
rcrb
cmp
jo
lahf
jb
nop
push
cld
lcall
add
mov
into
pop
push
adcl
cmp
cmp
lret
lcall
mov
in
dec
and
repz
ss
les
enter
call
out
mov
xchg
aas
inc
dec
sbb
mov
jnp
and
xlat
xchg
cmpsl
sbb
decb
cmp
mov
ljmp
fidivl
cmpb
cmp
and
lds
ret
cmp
and
inc
inc
pop
incb
push
or
jle
stos
out
je
es
sbb
stc
jg
pusha
cli
jmp
leave
decb
rcll
mov
mov
add
clc
xchg
cmpsb
imul
call
dec
sub
std
out
incb
adc
lcall
dec
insl
sub
fdivr
jmp
std
call
jg
rorl
nop
or
mov
rcrl
jg
mov
xchg
shrl
lds
das
jge
push
cmpsl
and
jg
xchg
ss
arpl
js
push
movsl
hlt
fidivrs
in
jmp
sarl
ljmp
fadds
negb
lcall
jg
cmp
jo
jle
pop
cwtl
push
lcall
or
adc
psubq
sar
shlb
inc
cmp
lea
iret
fcmovnb
arpl
jmp
fmulp
mov
push
cmc
jb
cmp
cmp
pop
ja
imul
decl
or
iret
xchg
loopne
insl
test
rcll
test
cltd
pop
lret
dec
lcall
sbb
mov
mov
fdivs
cmpsl
or
imul
in
icebp
enter
movsl
cmc
loope
inc
xchg
daa
xor
push
mov
mov
pop
add
mov
mov
pushf
sarb
ficompl
and
push
dec
and
lcall
stos
fstpt
dec
xchg
xchg
js
sbb
jp
xchg
movsl
loopne
loope
test
xor
and
xor
mov
dec
cmp
and
pushl
jne
rorl
lods
mov
cmp
lcall
jns
dec
addl
pop
leave
les
icebp
roll
mov
mov
notrack
or
cwtl
cmp
aam
mov
fistps
mov
idiv
inc
jg
repnz
lcall
adc
insb
xchg
pop
movb
mov
mov
std
out
hlt
jg
bnd
lcall
fldcw
cmc
ja
xchg
mov
pop
mov
shl
mov
mov
fdivrs
push
mov
popf
add
xchg
rorb
mov
cwtl
shrb
fidivl
and
push
or
mov
lcall
xchg
mov
fxch
inc
jle
mov
lret
fs
fwait
ljmp
lahf
mov
and
out
je
es
dec
jae
or
fwait
xabort
ljmp
rorl
test
jecxz
shlb
fs
xchg
out
dec
sub
cmp
fwait
mov
mov
xchg
pop
call
xor
push
aam
adc
cmp
insb
cwtl
pop
rol
outsl
call
jbe
icebp
mov
into
std
enter
push
push
rolb
mov
cmc
dec
out
movsl
out
outsl
lcall
sub
pop
ds
sub
mov
stos
cs
repz
icebp
dec
orl
mov
scas
mov
lcall
js
sub
fwait
ljmp
mov
lret
and
adc
out
lahf
fldt
push
aaa
sbb
nop
jmp
ficompl
push
pop
cmpb
ljmp
pushl
in
leave
into
lods
sbb
jg
filds
decl
mov
fisubl
inc
incl
sub
clc
jb
cmp
lds
rcl
int
sbb
cwtl
push
sti
aaa
int
push
adc
insb
nop
pop
enter
pusha
xchg
std
in
jge
lcall
hlt
test
scas
ret
outsb
sbb
insl
pop
mov
mov
jb
cmc
movsl
adc
sar
jnp
jl
loope
ss
add
dec
mov
ljmp
mov
scas
nop
cltd
cltd
stos
fistpll
jae
mov
pop
xchg
int
mov
stos
stc
mov
incl
pop
inc
dec
push
inc
out
lahf
mov
dec
cmp
adc
lret
enter
jae
or
push
dec
or
pop
sbb
pushl
cmp
or
std
jb
decl
ja
imul
out
xchg
push
or
cmp
repnz
jbe
les
test
ret
neg
xchg
mov
sub
cs
loop
call
filds
imul
xor
xchg
jle
xchg
cmp
icebp
xorl
sbb
lea
adc
sbb
dec
add
or
cmpsl
mov
out
movsb
call
mov
test
inc
jl
dec
and
in
or
shll
xchg
lret
mov
hlt
rcr
mov
mov
cmpsl
push
mov
sub
pop
add
lock
mov
push
ret
mov
inc
sti
jmp
popa
insb
sbb
jle
bound
lds
jno
decl
movsl
cmp
cmp
fmulp
sbb
xchg
jmp
aad
arpl
pushf
dec
bswap
repnz
push
ljmp
stos
or
xchg
sub
jl
movsb
xchg
push
loopne
lock
or
pushf
shlb
inc
jns
fnstenv
mov
xchg
push
aas
dec
aam
jecxz
rcrb
hlt
mov
clc
pop
cli
fdivr
ss
std
jmp
fistpl
cltd
incl
dec
call
mov
repz
lcall
sub
outsl
pop
xchg
push
test
lcall
mov
call
dec
imul
pushl
adc
push
inc
ret
iret
out
movsb
adc
out
mov
cs
adc
xor
jnp
jne
cmp
std
mov
mov
push
outsl
cs
and
aam
xchg
decl
pop
loope
mov
mov
adc
push
std
inc
fcmovbe
aaa
out
mov
test
out
incl
add
dec
sahf
call
aaa
stc
or
pop
lock
xchg
ja
aas
mov
inc
ljmp
mov
negl
jmp
test
stc
mov
lcall
adc
decl
incl
jo
popl
or
call
subb
subl
push
inc
mov
loopne
pusha
adc
add
adc
jmp
lret
int3
imul
xlat
cmc
cli
pop
dec
lcall
stc
and
lds
test
push
das
inc
jns
jp
ss
and
and
das
mov
jmp
nop
jmp
mov
mov
lods
push
icebp
out
loope
jg
sarb
xchg
inc
imul
call
jp
push
cld
and
cmc
or
xchg
push
mov
sub
and
out
bound
movsl
ljmp
push
sarl
dec
push
pushl
jl
pop
jne
jecxz
lods
xor
lcall
pop
sbb
lcall
mov
rcr
and
pop
or
lea
xchg
lcall
std
or
pusha
jle
mov
lret
sub
stos
push
adc
pop
push
jl
jle
cmpsb
fwait
outsl
loopne
cmp
ljmp
leave
or
lods
mov
push
jmp
pusha
inc
push
addl
insl
ljmp
call
mov
mov
notb
sub
divl
cmp
lock
jge
add
imul
sbb
decl
sbb
sbb
nop
shl
insl
sbb
adc
sbb
inc
rorl
mov
loopne
sub
decl
xchg
decl
cwtl
stos
bound
sub
pop
sbb
and
pop
cltd
pop
add
aam
repz
dec
inc
rorl
repz
pop
scas
xchg
add
lret
repz
xchg
stos
fstpt
subb
adc
adc
adc
cmp
and
decl
push
push
mov
sbb
xor
pop
sbb
mov
jmp
ror
mov
push
sub
jb
pop
aaa
sbb
lds
jmp
ljmp
pushl
or
aam
repnz
stos
adc
insb
xchg
pop
ret
aaa
arpl
jl
fdivr
mov
lcall
dec
push
out
test
jl
fistpll
pop
cmp
jmp
inc
mov
cmp
sbb
xchg
loope
or
jns
lcall
xor
add
pushl
inc
and
aad
or
mov
rcrb
cmp
sbb
mov
lret
and
lret
xor
stos
xor
jl
or
pushl
sbb
fistpl
jmp
jae
or
in
call
mov
aas
mov
inc
sub
in
leave
lcall
shll
mov
fisttps
cld
cld
fs
mov
sub
lea
call
imul
sbb
mov
fists
dec
aam
repnz
mov
pop
insl
mov
mov
int
loope
arpl
mov
mov
xchg
std
ret
jge
sti
mov
lcall
arpl
test
scas
lcall
daa
pop
movsl
dec
xlat
push
jg
hlt
movsl
mov
loopne
lret
daa
jno
das
mov
loopne
aas
pop
enter
push
push
lods
icebp
fdivr
ja
adc
mov
mov
jmp
pushl
or
and
add
dec
scas
mov
fildll
out
mov
push
jle
cmc
dec
repz
push
pop
aas
call
xlat
pushl
push
je
es
or
ja
pushl
pop
mov
sarb
mov
inc
data16
decl
out
sahf
test
aam
push
sub
inc
pushl
es
lock
xchg
sbb
mov
cmpsl
or
daa
cwtl
cmp
mov
loopne
insl
xchg
adc
ljmp
cmc
nop
popa
dec
jmp
mov
lcall
clc
add
fldl
outsb
pop
cmc
pop
pop
rorb
pop
repz
xchg
filds
mov
out
cmp
pop
inc
incl
icebp
filds
xchg
jmp
rorb
fimull
stc
test
decl
or
out
and
into
mov
les
daa
jg
incl
lcall
call
push
cld
stos
push
adc
pop
call
pop
jae
or
cld
adc
xor
and
out
jae
outsl
pusha
inc
in
pop
cmp
and
in
lcall
pop
xor
int3
jmp
repz
sbb
movsb
mov
jnp
repnz
and
push
fcmovu
cmpsb
adc
pushl
mov
clc
mov
cli
pop
nop
cmp
gs
add
mov
out
loop
sbb
mov
in
jmp
inc
lcall
lret
pushl
gs
or
shl
sbb
lcall
push
inc
outsl
cltd
pop
fs
dec
xor
out
xchg
dec
xor
call
lea
in
int3
mov
cld
pop
cli
cmp
clc
add
gs
jmp
pop
dec
jg
inc
aas
jo
push
add
lcall
mov
mov
es
ret
shlb
lcall
jg
pushl
cmc
mul
into
inc
inc
aas
adcl
call
dec
loopne
or
xchg
xor
js
lcall
stos
cs
adc
lock
jle
and
fwait
sub
adc
fucomip
mov
loope
dec
pop
js
mov
cmpsl
jb
decl
sub
out
jae
jp
pop
outsb
stos
shrb
mov
nopl
addl
xlat
add
and
sub
decl
fwait
jae
incl
mov
rolb
addr16
sub
xor
mov
jg
adc
mov
xchg
push
inc
dec
sbb
jmp
int3
fwait
cmp
out
push
int
aas
fucom
shl
mov
gs
pop
jbe
mov
pop
gs
dec
mov
pause
push
call
ljmp
and
pushf
cmp
sub
lea
das
jge
andb
shll
mov
xor
jg
mov
jp
movsb
ds
push
in
pop
mov
push
xchg
stc
pop
test
cmp
cmc
popf
mov
adc
std
repz
push
addb
stos
mov
movsl
incl
mov
loopne
mov
mov
sub
adc
jno
test
pushl
pushf
cmc
cmpsl
jae
sbb
sub
dec
lret
dec
inc
mov
mov
rcrl
pop
decl
push
or
hlt
insb
pop
jl
xchg
int3
mov
adc
out
dec
sub
loop
xor
or
pop
lcall
sbb
pop
and
xchg
or
pushl
ds
mov
xchg
in
clc
mov
outsl
popf
ss
enter
mov
pop
lret
scas
lcall
aad
push
inc
filds
test
call
mov
fwait
movsl
jmp
jecxz
mov
fcmovne
fwait
fcmovbe
or
jno
mov
adc
mov
sbb
jg
cwtl
jne
or
sub
pop
loop
or
je
add
repnz
dec
dec
fstpl
fdivs
aas
lcall
push
lret
clc
or
cmp
pop
ds
cmp
mov
xchg
decl
popa
pop
out
jb
push
cmp
push
fists
std
call
ss
cmp
arpl
mov
jae
push
incl
out
sub
ss
js
mov
ja
das
cld
lret
call
cld
or
xchg
insb
inc
in
lret
xchg
in
leave
cmp
jg
nop
and
arpl
cli
xchg
testb
subb
mov
scas
xor
pop
fisttpll
lahf
lret
in
out
lods
xor
out
pop
std
jnp
inc
ljmp
sub
lock
dec
testb
mov
lcall
xchg
xor
rcrb
ret
js
ret
pop
cld
push
mov
inc
dec
sub
jmp
add
cmp
out
adcb
shll
call
call
je
mov
sbb
sti
add
push
addr16
clc
mov
cmp
cmp
ds
das
fisubrs
in
ds
cmp
fbld
xor
xchg
jp
jmp
jmp
push
cltd
inc
aam
or
int
cmpsl
aas
push
sbb
mov
jle
icebp
pusha
xor
loope
and
mov
loop
push
outsb
rclb
call
decl
push
mov
jno
pop
repnz
jl
adc
mov
idivb
sar
pusha
xor
enter
lods
lahf
sub
sahf
movsb
outsb
fists
pop
push
sbb
fisubrs
call
jmp
sub
cmp
mov
movsl
out
push
lcall
outsb
mov
cld
cmpsl
leave
xchg
das
ljmp
ljmp
pop
das
loop
xor
daa
mov
dec
mov
decl
sub
xor
mov
mov
push
push
push
or
loop
mov
mov
fdiv
je
stos
sahf
and
or
aaa
jo
jg
leave
lods
mov
jbe
xchg
sbb
adc
mov
or
or
jg
pop
push
dec
ljmp
sarb
and
fnstenv
cmpsb
dec
sahf
lods
movups
stos
inc
xchg
jnp
mov
clc
test
and
mov
mov
mov
outsl
adc
incl
incl
mov
adc
aaa
mov
mov
mov
and
lahf
push
sbb
push
mov
lds
js
fbld
mov
stos
push
mov
ljmp
push
push
clc
je
xor
test
popa
or
pop
stc
inc
mov
add
std
dec
pushl
daa
dec
in
fnstenv
aam
pop
clc
dec
jb
inc
out
xchg
inc
and
pop
scas
jg
ljmp
push
orb
dec
push
jl
pop
iret
cmp
jo
lcall
and
jne
jg
push
out
jecxz
movsb
jno
dec
inc
ret
push
ja
les
inc
je
inc
inc
push
stos
or
sar
pop
cli
xor
push
inc
mov
add
fisttpl
test
aas
cld
fnstsw
lcall
cmp
dec
mov
in
lock
pop
push
mov
push
or
decl
adc
sbb
xchg
pop
lods
popf
nop
mov
xchg
leave
lcall
xchg
mov
popa
cld
push
push
jmp
mov
decl
lcall
xchg
add
dec
fsubrp
imul
cmp
mov
xchg
pop
dec
add
test
out
cmp
jl
pop
pop
jg
jmp
xchg
cld
and
or
data16
cmp
ljmp
sub
cmp
lods
xor
decl
test
mov
cmpsl
inc
xor
xor
add
loope
mov
pusha
sbb
mov
xor
adcl
lcall
fld
push
jo
cmpb
ss
popf
out
je
hlt
ljmp
cs
addb
faddp
mov
xor
cli
ds
xchg
in
ror
dec
sub
lcall
add
arpl
xor
inc
jg
cmp
adc
data16
add
fdivrp
inc
leave
jl
scas
mov
inc
addr16
lcall
xor
and
xor
ljmp
icebp
incl
xor
lods
cmp
test
decl
cmp
mov
pop
ret
inc
dec
aad
das
decl
aam
xor
das
into
in
insl
sbb
lds
or
decl
mov
lock
fmuls
jne
enter
xchg
daa
nop
and
sar
fxch
andl
jns
pop
dec
xchg
subl
int
call
or
or
out
xchg
inc
bnd
jns
stc
cmp
jg
bound
cmp
jo
mov
xor
faddp
jnp
pop
inc
mov
movsl
jge
add
scas
sbb
repnz
int3
mov
ljmp
aam
aaa
ds
in
jae
cli
xchg
dec
pop
cli
pop
xlat
or
adc
jg
ljmp
xor
jecxz
fdivrp
bound
pop
movsl
shl
sbb
xor
imulb
pop
and
roll
and
push
incl
jne
xor
lods
cltd
or
xchg
mov
push
clc
aas
out
fwait
int
xchg
cmp
pop
ficompl
cs
mov
loop
xchg
aam
lcall
mov
test
lret
xor
mov
xchg
add
mov
or
and
js
mov
mov
sbbl
mov
fmull
daa
jo
and
imul
or
mov
popa
decl
je
mov
dec
lcall
cmpb
mov
outsb
shl
lcall
xor
adc
mov
jmp
jno
mov
push
mov
push
cld
pop
insl
scas
repz
xor
push
cltd
sarl
mov
rcrb
inc
pop
mov
push
call
iret
jg
pop
push
cmpsl
lret
pop
fildll
fsub
dec
xor
jbe
psllw
cwtl
mov
push
test
shll
pop
shrl
mov
mov
daa
pusha
sbb
in
repz
xor
xlat
push
adc
adc
gs
mov
pop
outsl
call
mov
scas
jge
add
in
das
mov
dec
dec
push
sar
push
lret
jmp
xchg
and
or
jo
xorl
movsb
je
pushl
loop
add
lock
or
lret
outsl
aam
incl
sti
cmp
nop
iret
jg
mov
cmp
rclb
lret
int
mov
xchg
mov
ljmp
std
pop
xchg
push
out
pop
das
mov
xchg
ljmp
lret
mov
adc
push
add
mov
xchg
fstp
insb
inc
cmp
sub
repnz
push
ljmp
or
loope
das
adc
dec
sbb
sbb
pop
jbe
in
mov
push
pop
push
pop
test
test
cmp
cld
mov
cmp
xor
stos
mov
jg
decl
jecxz
pop
jo
mov
push
add
jmp
sar
mov
mov
leave
push
jmp
lret
dec
rcll
and
clc
clc
xchg
cli
loop
sahf
adc
sahf
addr16
add
xchg
decb
pop
and
cmp
test
jg
incl
loopne
int
lods
or
inc
lret
lcall
jb
pop
incl
loop
addr16
mov
aad
xlat
or
cmpb
mov
cmp
mov
outsl
je
stos
inc
mov
jp
xchg
and
push
xor
jg
clc
lcall
cmp
jge
pusha
push
incl
dec
js
bnd
ljmp
lds
xor
sti
std
pushl
xchg
xor
mov
dec
daa
push
outsl
hlt
sbb
test
pushl
and
fmuls
push
ljmp
jp
std
decl
ret
nop
pop
fnstsw
inc
out
sub
mov
in
ljmp
xchg
in
and
jg
jmp
sbb
mov
aaa
enter
jb
ljmp
test
test
lcall
jg
push
inc
rclb
je
std
imul
out
adc
mov
cmp
lahf
push
add
lods
es
out
mov
shrb
adc
push
mov
int
aas
inc
cmp
mov
add
pushl
inc
call
int
outsl
ds
sti
gs
leave
rcr
stos
decl
call
lcall
sub
fcomp
lret
incl
xchg
rorb
jmp
xchg
mov
lahf
jl
mov
fildl
xchg
ja
add
ror
repnz
pop
lcall
lcall
hlt
sahf
adc
aaa
lods
push
aas
clc
sarb
mov
jmp
into
enter
cmpsl
test
xor
decl
test
cmp
pop
mov
mov
or
lahf
stos
leave
adc
out
jge
pop
repz
shrl
pop
jl
outsb
pop
mov
adc
sub
add
add
jmp
mov
enter
outsl
std
sbb
and
xchg
js
in
mov
loopne
add
test
out
ja
mov
adc
jmp
outsb
jmp
sbb
mov
cli
xchg
jecxz
and
mov
pop
loopne
xorl
aad
das
pushl
mov
mov
ljmp
cld
rcl
jecxz
imull
xchg
and
cmpsl
outsl
cld
ret
divb
cli
sbb
push
sbb
sbb
call
call
add
ss
in
xchg
cmp
mov
xchg
shll
fnsetpm(287
push
adc
pop
loopne
clc
mov
sahf
in
pop
jmp
push
sbb
push
aam
ljmp
mov
and
xchg
rcrl
cmp
test
add
xchg
jp
fiadds
dec
push
decl
repnz
decl
mov
sbb
mulb
aam
cmp
and
ds
ds
cmpsl
icebp
loope
clc
test
lcall
mov
adc
cs
xchg
inc
ss
mov
hlt
imul
cld
push
mov
into
fimull
and
jmp
or
mov
stc
les
push
aaa
inc
xchg
jnp
int3
pop
decl
je
xchg
pop
fsub
movb
dec
out
push
outsl
mov
sub
mov
or
mov
pop
sti
js
aas
call
mov
out
xor
cmp
aam
clc
mov
mov
call
mov
int3
rol
add
push
jg
insl
mov
imul
pop
sbbl
fwait
dec
sub
cld
jmp
push
aam
test
jge
sub
xchg
out
data16
filds
shlb
mov
push
cmp
sbbb
mov
sub
push
scas
xchg
rolb
cmpsb
pop
and
sbb
and
or
xchg
inc
test
push
mov
out
push
adc
or
ret
dec
push
lods
fdivrp
push
cmp
add
cmp
jns
cmc
loop
mov
push
sub
xchg
jecxz
mov
lods
mov
mov
pop
push
mov
jmp
jmp
pusha
mov
mov
add
xchg
fdivrp
push
ficomps
call
inc
push
or
ss
jbe
inc
daa
in
jmp
scas
jns
das
rol
in
fwait
decl
pushl
push
pushl
xor
cld
push
andl
mov
and
subl
or
call
push
imul
lahf
sbb
sbb
lcall
mov
jl
jle
sti
push
call
adc
idiv
or
adc
or
jmp
sarb
dec
xchg
andb
adc
jbe
call
mov
push
jbe
stos
push
fdivrs
ljmp
sub
pop
mov
sar
push
dec
cmp
lcall
pop
push
addr16
push
loopne
push
cwtl
mov
sti
cltd
push
jmp
cli
das
inc
leave
repnz
shrb
in
dec
aad
mov
mov
sti
loope
lds
fisttps
dec
das
je
ljmp
shl
or
cli
inc
addr16
lcall
jp
inc
add
push
and
mov
repz
clc
pop
stos
aam
lret
pushl
dec
mov
pop
pop
outsl
jo
pop
jmp
cwtl
push
test
or
rcr
loopne
lds
jns
dec
in
and
xlat
and
js
pop
jmp
jle
xor
fidivrl
cmp
clc
lcall
xlat
mov
push
inc
mov
mov
rolb
pop
sbb
jmp
or
push
testl
mov
fildl
sar
insb
ljmp
lcall
icebp
rorb
adc
icebp
sub
ja
loopne
xor
pushl
pop
bound
inc
mov
pushl
add
sar
pop
ret
cmpsl
xorb
xchg
lret
jg
iret
mov
cli
dec
pushl
adc
lods
inc
xchg
cld
fwait
sbb
incl
push
push
ds
add
sub
inc
neg
and
mov
lcall
and
outsl
test
fwait
sbb
jo
mov
mov
testl
insl
insb
mov
cmp
sub
shlb
sub
icebp
sbb
and
cld
and
sbb
inc
pushl
int3
inc
call
jmp
pusha
aad
xor
sahf
das
lcall
in
add
push
das
pop
sbb
shrb
call
pop
in
pop
jg
xchg
inc
jg
cld
fsts
jg
xchg
jg
incl
fcmovnbe
push
push
pop
cmc
lcall
std
out
fdivl
repnz
fbld
pop
jle
mov
call
lcall
es
lock
call
dec
adc
js
push
push
jmp
push
jo
inc
push
jmp
pop
insb
xor
imul
cmp
jg
aam
hlt
decl
nop
cmc
movsl
sti
addr16
popf
mov
add
ja
lret
xchg
inc
imul
mov
jecxz
inc
mov
test
bound
fwait
mov
fistpll
out
into
pop
clc
jg
add
xor
aad
nop
pop
sbb
push
and
fucomp
add
in
xchg
sbb
les
lcall
std
test
lret
push
xchg
nop
negb
cmp
decl
xor
iret
loop
lahf
pop
ror
or
lock
or
shll
pop
scas
sub
mov
mov
cmp
and
les
loop
lock
sar
stos
mov
cmc
or
fldt
imul
lods
mov
xchg
jae
call
in
lods
cmp
inc
mov
addb
push
loope
icebp
inc
adc
ja
xor
call
mov
jecxz
jp
mov
fbstp
inc
jns
jge
mov
dec
fcmovne
xor
xor
fdivr
rolb
lcall
cvtdq2ps
dec
jne
imul
inc
mov
fsub
lds
pop
loopne
push
lret
and
or
pop
inc
loop
pop
push
icebp
ds
xor
ljmp
insb
jmp
mov
ficoml
adc
inc
and
imul
mov
rcll
inc
xlat
push
push
in
sub
mov
and
cltd
out
insb
ds
les
mov
sbb
push
call
dec
sub
aaa
lcall
push
mov
push
sahf
mov
divl
ret
push
dec
mov
std
stc
or
dec
jl
aas
aaa
and
or
mov
mov
mov
subl
mov
outsl
fnstenv
decl
mov
pushl
or
and
popf
xor
fldl
or
ljmp
push
push
pop
lods
cmp
add
sbb
decl
inc
mov
xchg
pop
pushl
xor
sub
mov
mov
loope
pop
sbb
out
test
movsb
call
aam
loope
sub
mov
xstore-rng
cmpsl
int
lret
and
shlb
xor
ljmp
jae
mov
sbb
pop
cmp
mov
xor
movsb
mov
ret
lea
push
mov
cmp
jb
jae
incb
imul
decl
movsl
pushl
add
or
mov
mov
dec
pop
dec
adc
add
mov
jl
test
cmp
or
mov
cli
add
and
lahf
shlb
test
pop
xor
call
das
dec
cmpsl
repz
inc
inc
mov
insb
mov
fsubp
adcb
jl
insb
jmp
adc
clc
out
mov
sahf
xor
adc
mov
pop
ss
jge
cwtl
xchg
adc
jl
das
incl
push
and
sub
jmp
pop
in
lcall
xchg
test
pop
mov
dec
cmp
xor
jns
mov
movsl
decl
cmc
dec
fistps
std
xchg
adcl
in
xlat
icebp
inc
hlt
lea
cmp
mov
shlb
shrl
fisttps
sbb
mov
mov
dec
xorb
jg
ljmp
mov
cltd
inc
jle
iret
gs
test
or
dec
daa
lods
jae
out
stos
hlt
cltd
test
xor
xchg
ja,pt
or
icebp
test
outsl
std
inc
mov
add
xlat
das
jmp
jle
outsl
pushl
aad
xchg
jle
xchg
pushf
maskmovq
sti
mov
push
ret
hlt
sti
dec
mov
sbb
out
loopne
jg
mov
pop
bswap
push
inc
dec
call
aam
jmp
call
pop
ljmp
inc
rorb
mov
jo
mov
mov
push
jp
negl
cmp
xchg
rep
jg
out
push
aad
stos
xor
scas
stc
mov
sbb
pop
inc
nop
movb
mov
xchg
lods
and
cmc
lcall
add
mov
lcall
mov
in
pop
mov
sub
dec
les
imul
cli
into
jo
push
mov
lcall
jge
lcall
pop
xlat
dec
adc
js
inc
mov
orb
scas
iret
add
inc
leave
cmc
lcall
push
clc
dec
divl
mov
mov
shrb
and
mov
sbbb
xorb
mov
push
fs
iret
dec
pop
lahf
out
xor
sub
mov
aad
fbld
imul
inc
sbbl
aas
jmp
pop
lahf
cltd
int
fbstp
push
inc
adc
or
test
decl
dec
outsl
std
incl
movq
sub
repnz
jns
cltd
dec
out
popa
loopne
cs
decl
fidivl
decl
das
rcl
push
decl
incl
mov
jb
jns
xchg
xchg
insb
fwait
jle,pt
mov
lock
div
cmp
aad
scas
sahf
mov
stc
adc
push
push
jl
test
pushf
push
test
mov
mov
pop
push
inc
jns
push
cli
aam
add
loopne
clc
outsl
call
cmp
in
push
sub
leave
pop
test
ljmp
inc
dec
call
or
insb
and
hlt
addr16
loope
fmull
jmp
mov
aas
adc
mov
pop
mov
cld
leave
sbb
inc
iret
push
pop
bound
lods
sbb
sub
jg
lcall
jae
and
scas
insl
cwtl
in
mov
xlat
fstpl
in
loopne
cwtl
cmp
jmp
ljmp
les
cmp
xchg
repnz
test
in
jg
aad
pop
in
lret
stos
add
scas
in
insb
stc
lods
roll
jg
pop
xchg
sbb
aas
mov
inc
sbb
into
xchg
lcall
call
mov
imul
push
out
icebp
add
push
adc
push
scas
cmp
out
std
pop
call
push
or
and
rcrb
xor
fldt
icebp
jg
pop
xor
mov
in
inc
push
sub
notb
mov
mov
sbb
mov
sub
stos
push
insb
adc
jmp
inc
lock
std
movsl
call
inc
arpl
xchg
mov
and
repnz
dec
test
mov
pop
lea
jo
inc
lock
fwait
stos
insl
mov
repz
add
and
sbb
add
imul
lgdtl
jmp
repnz
mov
mov
fidivs
push
add
inc
adc
aaa
mov
xchg
decl
pop
movsb
mov
lods
or
cmpsb
inc
cmp
lret
xchg
dec
in
test
xor
cmp
jmp
push
test
es
das
lahf
lds
sbbl
mov
mov
aaa
xlat
cmp
mov
mov
divl
outsl
lock
push
imul
aas
inc
lahf
negl
xchg
cli
aaa
loopne
pop
idiv
ret
add
xchg
sbb
sbb
mov
mov
push
xchg
jbe
lret
xor
clc
in
in
mov
and
ljmp
mov
out
push
dec
aas
cli
movsl
btc
lock
jae
and
call
jg
push
popf
imul
mov
test
addr16
repz
lods
out
mov
and
mov
lock
inc
mov
js
and
adc
iret
es
push
lds
lea
mov
in
mov
or
insb
pushl
push
dec
std
xchg
in
or
clc
pop
gs
das
mov
mov
inc
push
cmp
aad
lcall
outsl
loope
call
ret
or
mov
aam
inc
mov
ja
les
and
xor
test
std
lahf
div
mov
dec
push
pop
jmp
push
dec
leave
dec
sub
cwtl
loop
xchg
push
mov
push
int
test
ror
mov
loop
push
jmp
add
gs
jmp
push
mov
lcall
fisubrl
decl
rorl
aas
push
xchg
in
cmp
cmp
jg
xchg
mov
lods
pop
bound
adc
jbe
popa
icebp
das
std
mov
mov
jbe
sub
repnz
outsl
ficoms
mov
fnsave
iret
sbb
push
cmp
push
mov
ja
out
and
or
decl
sub
test
mov
jno
cmp
in
and
mov
jmp
jp
push
bound
lods
jmp
outsl
adc
lcall
inc
es
jb
inc
mov
ret
push
jl
sbb
xor
jg
mov
decl
pop
in
push
in
push
and
les
pushf
push
pushf
repz
inc
ljmp
adc
inc
in
pop
mov
mov
mov
mov
jmp
push
sbb
or
mov
jb
mov
fnstsw
xchg
push
push
mov
xchg
ljmp
stc
dec
sub
xchg
loopne
adc
jg
adc
mov
test
push
sbb
and
call
scas
or
ljmp
mov
add
add
xchg
stos
fmuls
mov
fisubrs
clc
jmp
cmp
ficompl
loope
shrb
mov
ljmp
hlt
fistps
xlat
xchg
add
mov
xchg
mov
fidivl
adc
call
jmp
xor
hlt
and
add
cmpl
leave
sub
bound
ljmp
pop
add
popa
jbe
jmp
add
scas
sub
pop
dec
std
dec
cmp
xchg
in
jmp
sti
mov
call
decl
call
out
ss
dec
pop
mov
cwtd
incl
test
in
mov
mov
jo
call
int
scas
mov
fs
pop
out
leave
fildll
cmp
aad
push
push
sub
sub
xlat
data16
fnstsw
mov
negl
xlat
jns
xchg
faddl
add
mull
pop
loopne
hlt
pushl
std
stos
or
xor
in
cmpl
mov
dec
pop
inc
outsl
jecxz
incl
data16
dec
push
sub
lcall
lds
sub
sahf
imul
and
aaa
imulb
rolb
movsb
dec
pop
cmp
icebp
mov
mov
repnz
ljmp
jo
jge
fidivrs
fwait
icebp
cwtl
inc
jg
cmpsb
jmp
clc
push
add
mov
loopne
jecxz
pop
sti
push
fildll
or
xlat
mov
icebp
pop
add
lahf
test
jp
sarl
cltd
xor
or
xor
xchg
and
clc
shrb
mov
pop
mov
imul
jmp
ljmp
lcall
jnp
fs
sbbl
arpl
aam
sbb
mov
jg
push
movsl
pop
outsl
lea
sub
outsl
jmp
xor
test
xor
lock
imul
push
lds
stos
pushl
leave
add
sbb
and
das
push
clc
sub
lcall
pop
movsl
xchg
loope
or
jg
adc
orl
pop
aad
cli
outsl
cld
jg
push
xor
mov
roll
sub
out
shlb
inc
icebp
imul
imull
add
lcall
sbb
sbb
pop
fwait
jle
insl
arpl
xor
cmc
or
dec
pop
lret
aaa
inc
push
sbb
push
js
jg
jp
sbb
nop
lret
and
pusha
xlat
adc
and
adc
or
mov
in
fadds
iret
xlat
cmp
in
mov
cld
fmul
ds
in
add
int
aaa
jne
xchg
pop
loopne
push
jmp
mov
dec
mov
aaa
pop
es
xor
push
lcall
cltd
mov
incl
push
dec
call
dec
mov
ss
and
inc
dec
and
sar
ljmp
es
sbb
hlt
adc
leave
insb
sahf
stos
sbb
cmc
out
sub
incl
cmp
inc
push
scas
mov
ds
incl
les
iret
pop
test
lret
jmp
mov
nop
adc
ja
repnz
ret
aad
scas
in
mov
sbb
sbbl
push
scas
repnz
cmc
adc
sarb
outsb
jns
out
ror
gs
shrl
in
adc
incl
jl
lcall
inc
push
xor
aaa
lcall
aas
lahf
ljmp
push
aaa
add
pop
cmp
ds
pop
inc
sahf
pop
jle
push
push
dec
lcall
decl
movzwl
cld
incl
aam
adc
cmp
mul
push
out
inc
enter
mov
inc
jb
lcall
call
js
mov
enter
adc
incl
jl
jmp
out
iret
or
outsl
stos
xor
mov
fsubl
adc
outsl
jl
jg
lods
sti
shll
out
stos
mov
es
xor
pop
xchg
and
into
and
aas
add
fdivr
add
daa
jecxz
pop
or
jno
lcall
aaa
repz
popa
or
sub
mov
iret
push
push
cli
dec
mov
incl
and
jecxz
add
jg
or
int3
scas
les
xor
pop
mov
hlt
push
call
sti
cmp
ljmp
std
movsb
lahf
mov
loope
loopne
push
adc
cmp
lret
push
aam
cmp
sub
repz
jg
fnstsw
call
cmp
aaa
pop
sub
cmp
repnz
incl
clc
mov
mov
adc
das
icebp
loopne
incl
mov
pop
cmp
rclb
cli
pop
jmp
mov
or
je
cmc
outsl
into
push
and
ljmp
pushl
stc
loopne
cmp
shlb
pop
jge
pop
xlat
dec
mov
ret
roll
out
lock
outsl
ljmp
data16
lcall
xchg
mov
incl
or
mov
inc
outsl
je
mov
push
xchg
cs
fistpll
orb
out
lcall
xchg
imul
repnz
loopne
jmp
or
test
lret
jmp
xchg
mov
xor
sbb
repz
out
call
xlat
mov
jl
enter
jge
xchg
loope
or
outsb
icebp
ljmp
mov
adc
xor
inc
sub
mov
in
outsl
lcall
or
pop
gs
popf
pop
cmp
mov
inc
stos
jecxz
incb
pop
dec
inc
idivb
stos
or
ljmp
cmp
shlb
fdivrs
and
xor
dec
add
push
push
aad
mov
pop
mov
imul
aaa
sub
or
std
mov
or
hlt
jmp
fs
jl
jns
aas
scas
cld
jle
mov
inc
pop
test
sti
xlat
pop
mov
jmp
cli
fwait
sub
leave
mov
cmp
add
fucomip
incl
movsb
pop
push
pop
cs
xor
into
fdivr
pop
decl
mov
rep
jb
inc
pop
aas
inc
sub
iret
dec
dec
imul
filds
inc
dec
xor
gs
jns
or
push
jmp
outsb
inc
pushl
dec
cmp
mov
mov
pop
sub
hlt
push
dec
je
popf
and
test
push
add
cwtl
es
pop
rcrl
imul
jmp
or
inc
xchg
fmul
pushl
inc
pop
fstl
mov
jle
mov
push
addr16
icebp
mov
inc
repz
push
inc
mov
adc
insl
pop
decb
mov
out
inc
push
adc
aas
fs
xchg
xchg
clc
push
pop
outsl
mov
call
decl
mov
pop
loopne
inc
dec
jnp
clc
in
ds
enter
pop
jle
incl
jmp
xchg
jbe
adc
incl
fcos
push
xor
pusha
cwtl
mov
sbb
cwtl
mov
movntps
fsubrp
mov
lahf
imul
incl
sbb
sahf
rclb
jmp
xchg
sub
mov
cmp
inc
imul
pop
xor
fnstcw
clc
mov
or
inc
push
jnp
out
insl
aad
das
pop
pushl
and
pop
pop
roll
cmpsl
dec
dec
inc
xor
lcall
fs
fucomip
das
push
arpl
mov
jmp
mov
int
jbe
ss
xchg
incl
xor
loop
icebp
ss
pop
fs
loopne
mov
fwait
mov
cld
ljmp
push
xchg
sbb
pushl
lcall
outsb
out
fwait
ret
arpl
pop
sbb
dec
adc
decl
mov
sub
adc
pushf
lcall
ljmp
inc
pop
mov
lcall
mov
icebp
mov
push
imul
shl
sbb
sub
popa
inc
dec
cli
loop
ljmp
adc
and
cmp
or
mov
inc
out
imull
leave
adc
lcall
adc
push
xor
sub
sub
std
test
jl
std
or
rcrb
arpl
mov
lret
xorl
insl
xor
or
hlt
stos
ljmp
push
mov
popf
lcall
xor
cld
mov
xchg
push
or
mov
and
cld
inc
mov
mov
and
icebp
sbb
pop
out
lret
cmpsl
mov
imull
mov
mov
inc
push
inc
mov
fcos
or
add
jp
pop
push
mov
push
sbb
mov
inc
sub
leave
mov
movsl
test
rorb
or
push
ret
pusha
dec
int3
test
das
aad
dec
iret
test
mov
inc
stc
xchg
mov
xor
shlb
sub
int
fsts
cmp
cld
mov
cli
jmp
xchg
cs
jp
xchg
nop
jle
xor
aam
fsubs
pushl
jle
lcall
lcall
adc
inc
rorl
das
ljmp
xchg
xor
cmp
jmp
lods
sub
jl
ja
xor
push
jns
mov
cld
mov
inc
or
out
mov
push
pop
push
lods
push
jno
fisttpl
mov
call
sub
push
fs
nop
mov
add
cli
decl
xchg
add
or
jne
sbb
jecxz
jbe
push
ljmp
notl
sahf
iret
lcall
lcall
mov
cld
decl
mov
dec
mulb
sti
or
fsubrp
fst
xchg
cwtl
mov
jae
sbb
arpl
lock
stos
iret
mov
dec
xor
das
hlt
pop
jle
pusha
jmp
stc
mov
stc
jbe
push
outsb
adc
and
mov
xor
adc
fildll
decl
xor
mov
call
xor
mov
pop
or
out
lret
cli
mov
xchg
adc
orl
out
icebp
mov
xchg
jmp
mov
cltd
xchg
js
adc
jg
das
pop
call
mov
in
lcall
fidivs
add
jge
jae
lcall
mov
shrl
dec
add
out
scas
mov
hlt
xlat
pop
pop
sub
dec
sar
call
imul
mov
mov
enter
cmp
decl
push
jg
push
sbb
dec
into
rorb
mov
loopne
popa
inc
sub
movsb
mov
pushl
repnz
test
dec
decl
ljmp
mov
movsl
jne
bound
cmc
lret
mov
jl
adc
cld
push
fldl
js
lea
jg
sbb
xchg
cmp
jecxz
xchg
call
pushl
pop
aas
adc
cmp
jmp
dec
cmpsl
mov
pop
iret
fdiv
mov
incl
mov
into
push
or
push
stos
mov
xor
incl
das
xchg
ss
in
lret
imul
clc
pushf
add
cmp
pushl
into
xchg
cmpsb
cld
outsl
aad
call
sub
in
addr16
mov
aaa
pop
add
aaa
jmp
add
ret
loopne
xlat
cmp
jae
lahf
lock
fimuls
ja
shll
inc
mov
ljmp
sub
jbe
sbb
mov
jbe
adc
and
nop
adcb
or
mov
push
and
popa
bswap
js
jmp
das
lret
enter
xor
sub
sbb
call
loopne
call
sub
fdivrs
and
call
push
fldt
jge
pop
aas
jge
call
fsubrl
xchg
ljmp
add
ja
data16
jmp
cmpsl
fnstenv
push
sbb
das
add
stos
mov
out
xor
add
pop
loop
jp
das
std
lcall
add
inc
bound
mov
add
mov
sub
ret
jecxz,pt
pushl
add
or
test
mov
push
aad
sbb
sti
data16
decl
cmp
pop
in
dec
xchg
clc
dec
dec
lock
ja
sub
js
ja
hlt
inc
push
nop
lcall
ljmp
mov
popa
divl
call
pop
pushl
pushl
in
push
ljmp
outsl
call
test
sbb
xor
xchg
mov
imul
lret
outsl
call
dec
fidivrl
mov
push
push
call
mov
scas
stos
mov
cmc
das
adc
repz
or
rclb
dec
insb
inc
mov
mov
aaa
decl
rcrb
and
lcall
jnp
mov
call
popf
mov
int
xchg
ficomps
add
clc
mov
jb
lahf
jp
mov
xchg
sbb
mov
push
xchg
jge
in
lcall
das
aad
push
ljmp
scas
pop
lods
mov
mov
icebp
call
jmp
bnd
fsubl
sahf
mov
mov
loopne
push
xorl
inc
add
pusha
rcll
mov
ljmp
sbb
xor
push
pushl
clc
inc
mov
repz
add
mov
inc
pushl
pop
pop
cmpl
mov
xor
jg
aaa
clc
xor
sub
adc
xor
pop
call
push
mov
inc
es
movsl
cld
jmp
lret
xor
movsl
mov
cld
jg
xchg
adcb
aaa
and
in
push
ljmp
mov
mov
loop
and
xchg
cmp
xchg
leave
dec
adc
mov
shll
call
lcall
test
pop
mov
sbb
js
mov
xchg
adc
ljmp
or
dec
call
rclb
in
xchg
mov
jmp
test
popa
adc
call
xor
jecxz
jbe
add
sub
daa
ljmp
mov
in
jbe
cld
mov
pop
rolb
push
cltd
mov
pop
xchg
inc
outsl
adc
add
pop
in
inc
ljmp
pop
push
and
je
out
test
mov
or
jg
add
je
out
sbb
out
cmp
cmc
pop
mov
push
push
mov
js
test
mov
inc
jmp
add
xchg
icebp
push
decl
and
jmp
cmpsl
pop
aad
mov
ss
outsl
dec
lcall
push
notl
dec
js
ret
stc
mov
xchg
sar
inc
adcb
fnstsw
jmp
mov
push
movsl
push
cltd
sub
add
mov
xchg
fldcw
lock
out
sub
mov
push
add
mov
mov
or
ja
int3
dec
add
notl
lods
call
mov
jo
push
xchg
ret
cmp
add
inc
jno
ljmp
dec
pusha
in
inc
cmp
cmp
cmp
adc
mov
sub
pushl
stos
lds
push
pushl
js
std
xchg
mov
cmp
or
scas
lods
mov
icebp
inc
cld
cmp
cld
leave
xchg
xor
lret
fisubrs
std
mov
movsb
dec
mov
pushl
aad
decl
rcrb
xchg
mov
push
insb
call
std
inc
les
push
std
jmp
leave
pop
outsb
jnp
lcall
das
add
ret
or
pop
andb
mov
xor
mov
push
add
fwait
movsb
dec
out
inc
push
or
enter
adc
push
aaa
clc
cmp
push
xor
and
jecxz
pop
das
hlt
xchg
outsl
push
repz
push
pop
mov
mov
sub
jge
add
push
pushl
fimuls
and
shl
mov
dec
rcrl
stos
ljmp
jmp
mov
cmc
jle
fidivrl
fdivs
loop
out
jns
std
lret
pop
int3
jb
ljmp
add
and
and
out
loop
push
sub
push
mov
fsubrl
adc
jns
adc
fwait
aaa
add
inc
adc
dec
sbbb
jmp
mov
or
push
out
mov
lods
in
push
add
repz
outsw
mov
push
pop
push
cmc
mov
test
lcall
mov
sub
test
or
push
add
ret
xlat
ljmp
loopne
mov
pop
clc
mov
and
sub
movsb
outsb
jmp
pop
les
fstl
clc
repz
adc
sub
in
push
cli
sub
mov
lcall
lods
outsl
stos
xlat
outsl
sbb
sbb
lock
jmp
es
cltd
jle
les
jmp
decl
fisttpl
push
out
outsb
test
and
pop
xchg
add
jge
push
xor
add
loopne
adc
sbb
sahf
adc
dec
call
mov
jae
repnz
inc
addr16
je
lret
loopne
gs
insl
inc
mov
stos
clc
add
cmp
gs
fucomip
pop
jmp
adc
cmpsl
inc
test
mov
inc
pop
or
lcall
mov
ret
cmpsb
daa
add
pop
dec
ljmp
icebp
pop
mov
insl
stc
push
xor
mov
dec
test
in
imulb
ljmp
push
sbb
lock
out
dec
jo
loope
and
push
cmc
add
cld
ljmp
sbb
xchg
daa
cwtl
jbe
outsl
jg
lock
hlt
and
lea
sbb
ja
dec
xchg
jb
and
fisubl
push
test
xchg
fistpl
outsl
sbb
pop
add
pushl
mov
dec
in
and
push
jp
out
inc
cmpsl
cmc
in
dec
sbb
and
aaa
cli
jmp
mov
and
inc
dec
cmpsb
sub
lods
cmpsl
mov
sbb
dec
mov
rolb
lds
add
jbe
sub
out
sbbl
in
fucomip
popa
out
imul
push
int
mov
mov
cmp
xor
mov
mov
int3
add
jl
in
in
inc
and
subb
rcll
ljmp
mov
ret
paddusb
mov
xchg
loopne
lcall
leave
idiv
jb
mov
jl
pop
jo
dec
test
call
xor
ret
nop
gs
mov
mov
mov
pushl
decl
jae
popa
rolb
loop
mov
imul
fnstsw
repnz
decl
mov
jecxz
mov
sar
mov
mov
out
movsl
pusha
add
lcall
jmp
jg
dec
repnz
test
test
mov
cmp
jg
jno
mov
pop
pop
mov
jle
dec
cmp
sbb
pop
adc
call
test
jg
mov
dec
and
fsubs
rcll
push
lcall
shl
ret
xchg
jle
pop
sarb
push
mov
cli
add
scas
push
mov
repnz
inc
outsl
inc
dec
stc
mov
inc
cmc
rcrl
out
inc
jo
lahf
mov
mov
inc
cmp
incl
cmp
jns
or
push
popa
lret
incb
test
decl
les
pushl
xor
inc
mov
loopne
pop
inc
push
xchg
nopl
leave
or
jo
mov
mov
in
inc
jp
or
incl
fstl
cmpsl
in
and
repnz
inc
fsub
call
insb
xchg
out
mov
ds
loop
call
jg
rolb
push
sub
lret
mov
das
cmc
data16
daa
lea
inc
push
imul
int
call
data16
daa
cli
outsl
hlt
jl
int3
push
aas
mov
and
cwtl
cmc
adc
cmp
rcrb
push
push
test
mov
add
inc
clc
dec
in
dec
sbb
incl
dec
out
daa
inc
leave
testl
pop
cli
iret
add
cwtl
pushl
sub
fimull
fs
imul
nop
mov
inc
dec
jle
in
jmp
ljmp
xchg
daa
mov
mov
fsub
xchg
stos
mov
aaa
push
xor
cmp
imul
popa
jbe
inc
out
lret
sti
ljmp
ja
int
loop
in
decl
fwait
idivl
rcr
ljmp
or
ret
cmc
lcall
jno
fistps
mov
jnp
xchg
mov
inc
std
xor
test
pushf
ret
sub
clc
aaa
outsl
incb
xchg
jns
icebp
or
call
mov
cmp
mov
call
sbb
dec
and
mov
ret
push
fs
pop
xchg
das
js
cltd
mov
arpl
into
pop
pop
popf
mov
loop
mov
inc
add
pushl
cld
sarb
ljmp
gs
sar
lea
jg
mov
lahf
mov
pop
sti
add
mov
popa
enter
or
mov
push
cmpsb
xchg
dec
clc
aam
fcos
xor
xor
lock
hlt
pop
push
xchg
xchg
pop
call
call
cs
incl
fimuls
loopne
nop
and
lock
pop
mov
incl
mov
stos
xor
inc
scas
bound
xchg
dec
pop
push
push
data16
push
jecxz
decl
call
cwtl
out
stos
inc
dec
push
inc
mov
dec
mov
mov
and
mov
sar
push
hlt
ljmp
jmp
push
sub
ds
call
pop
rcrb
add
filds
xor
dec
popf
dec
js
es
jg
aaa
jmp
test
or
mov
push
jnp
pop
add
imul
mov
xor
outsl
xor
iret
shrl
and
fcoms
jge
inc
lcall
pop
mov
lcall
das
cmc
xchg
aas
pop
in
pop
cmp
inc
mov
int
test
pop
mov
fwait
pop
in
fistps
nop
cwtl
jo
aad
ljmp
lods
mov
call
hlt
push
loop
push
push
sub
lcall
rorl
es
push
loop
decl
cmp
adc
cmp
push
jb
dec
mov
mov
jg
movsl
inc
call
stos
sbb
call
bnd
rclb
xor
xor
test
std
mov
sarb
fiaddl
pop
ret
sub
pop
ljmp
das
mov
shrb
repnz
fstpt
in
jns
sbb
aaa
mov
std
lock
mov
push
aaa
aas
cmp
outsl
mov
pop
addr16
loop
or
rep
pushl
push
dec
and
repz
clc
xchg
call
mov
fcomps
clc
inc
fisttpll
cmp
cld
inc
cmp
add
or
fwait
mov
mov
inc
in
jecxz
daa
pop
and
and
loopne
push
incl
sub
mov
jmp
popf
sti
xor
cld
dec
xchg
or
mov
sub
scas
dec
sub
aad
adc
mov
add
jno
push
fwait
outsb
cld
pop
incl
cmp
dec
jmp
mov
or
mov
aad
jmp
inc
inc
fisubrl
add
hlt
jae
sub
or
mov
outsl
jo
scas
xchg
movsl
fistpl
das
ret
jmp
insl
ds
push
mov
clc
xlat
test
sar
ret
decb
jle
jge
leave
insb
incl
dec
mov
mov
adc
lahf
pushl
pushl
mov
fisttps
fdivrp
lahf
add
xchg
test
sub
pop
outsl
cld
push
enter
or
jbe
fucomip
in
in
pop
sbb
in
dec
pop
cmpb
xchg
nop
add
mov
adc
cmp
fsubs
mov
and
dec
hlt
sub
add
cs
dec
lcall
testb
das
lods
jle
scas
lcall
addr16
movsl
ljmp
or
out
sarb
pop
mov
std
les
lcall
fsubrs
jmp
icebp
outsl
andb
std
xlat
dec
sbb
pusha
fcmovne
mov
mov
jae
jnp
cmpsl
inc
pushl
lea
movsl
lea
adc
and
mov
call
sbb
movsl
lret
xor
int
in
mov
hlt
dec
adc
lret
inc
cld
jmp
lcall
lret
ljmp
andl
in
mov
into
into
in
pop
push
enter
das
lcall
mov
mov
pop
daa
push
inc
sub
adc
jmp
jo
or
stc
jg
rorb
inc
insb
jl
out
ljmp
cmp
decl
mov
repnz
sub
arpl
loop
call
inc
jmp
lods
call
dec
sub
aas
lea
mov
lret
ljmp
inc
mov
mov
or
mov
mov
js
iret
and
in
sarl
imul
incl
lret
test
jmp
push
sbb
dec
fbstp
dec
fildl
pop
jmp
call
add
or
in
mov
lods
fdivr
hlt
sbb
or
cwtl
mov
and
push
xorl
pop
lcall
ljmp
jns
inc
mov
xor
pop
mov
mov
xchg
call
inc
ja
sbb
pusha
sub
outsb
gs
call
dec
dec
sbb
shrb
cld
sbb
lcall
rolb
add
dec
out
rep
push
into
dec
ljmp
add
or
cmpsb
ficompl
dec
cmp
xchg
mov
jmp
mov
fisttps
in
stc
decl
ss
mov
cmp
lods
clc
mov
call
cmp
inc
dec
lock
aas
iret
mov
das
fdivrp
mov
inc
mov
fcos
xor
add
insb
adc
ds
or
loopne
xor
decl
pop
pop
ljmp
ljmp
sbb
fwait
dec
shr
call
cli
incl
hlt
inc
mov
pushl
push
and
sub
push
ds
jle
fdivrp
cmp
ljmp
in
call
adc
or
xor
add
add
push
test
push
mov
mov
add
jmp
xchg
mov
add
add
mov
or
cltd
imul
ljmp
sti
sub
jg
cmp
pop
data16
mov
jmp
push
call
or
mov
add
lahf
mov
bound
xorb
stc
ljmp
mov
scas
mov
and
jl
lods
sarl
lods
mov
jae
stos
daa
call
insb
jne
inc
call
or
mov
sub
jle
fbld
xchg
jmp
cmpl
push
xchg
jnp
or
fnstenv
jmp
jno
adc
cmc
pop
sti
and
add
scas
cltd
mov
call
insl
pop
bnd
sbbb
cmp
pop
loop
incl
jl
scas
ljmp
mov
push
mov
lcall
outsb
mov
inc
push
add
loop
repz
lcall
and
or
xchg
inc
jns
pop
and
cli
inc
int3
adc
frstor
mov
and
mov
lcall
mov
mov
lcall
aad
mov
add
cltd
cmp
dec
scas
xchg
cmp
mov
call
in
jae
ja
add
ret
inc
sahf
pop
bound
jnp
xchg
das
add
mov
icebp
insl
stos
mov
ljmp
cli
mov
mov
incl
loop
inc
fildll
fidivrs
push
pop
test
mov
jmp
sbb
ljmp
jnp
lcall
sbb
push
outsl
jl
cmc
or
lcall
dec
lret
outsb
ds
jle
loop
push
hlt
mov
aad
fidivs
pop
mov
in
jmp
fdivr
cmp
faddl
cmp
pushl
ud2
dec
push
xor
pushl
aaa
push
das
aam
fdivr
add
call
mov
push
jns
mov
lea
push
jmp
ror
decl
push
aad
cmc
cli
or
cli
aam
imul
mov
decl
std
and
jmp
cmp
pushl
mov
inc
cmp
xchg
test
ljmp
es
clc
outsb
xchg
das
push
call
imul
inc
fdivr
jae
lods
jl
cli
decl
sub
cmp
inc
push
iret
aaa
outsb
inc
mov
les
jl
mov
mov
idiv
pop
or
cld
xchg
js
pushl
fidivl
aad
push
std
and
sbb
pop
and
push
dec
mov
fldcw
ljmp
jmp
jo
inc
mov
fstps
roll
pop
leave
mov
and
mov
adc
xchg
dec
insb
jge
jl
jns
inc
incl
jge
pop
push
pushl
xor
push
cmc
lods
mov
push
outsb
stos
pushl
cmpsb
sub
cld
outsl
jmp
inc
sarb
lcall
or
jmp
in
lahf
sbb
ret
mov
jbe
inc
mov
adc
xchg
mov
mov
lods
mov
lret
popf
or
mov
and
xor
aam
das
mov
ret
dec
lret
jge
xchg
jle
mov
incl
inc
orl
pop
arpl
lcall
scas
clc
fwait
push
cli
push
out
lock
iret
cmp
push
lods
push
call
mov
ljmp
xor
dec
push
pusha
mov
adc
decl
repnz
jmp
jmp
movsw
movsb
mov
sub
mov
sahf
pop
ret
push
jo
fildl
outsl
movsb
rorl
mov
repnz
fdivrp
shlb
mov
mov
mov
fisubl
push
jp
inc
sti
repnz
cmp
cli
cmp
inc
in
push
call
add
or
jmp
movsl
pop
jns
lahf
pop
call
rolb
jo
cld
repnz
ffreep
jb
and
leave
sbb
inc
ret
inc
jg
repz
adc
cmp
and
lcall
aas
jge
fldenv
xorl
push
in
lock
sbb
adc
mov
or
inc
jge
lcall
lock
mov
dec
cs
mov
push
mov
loop
outsl
mov
call
cmc
pop
aam
fs
xchg
or
jg
cwtl
popa
xorl
movsb
lea
loop
test
ljmp
xchg
clc
xor
decl
sbb
rcll
call
test
ds
idivb
loopne
push
js
cmpsb
daa
inc
mov
mov
mov
jmp
xor
insl
repz
inc
sub
or
push
mov
mov
jo
incl
shlb
pop
incl
dec
shlb
cld
jg
push
fdivr
push
inc
sbb
push
jmp
mov
add
sbb
mov
lret
sbb
repnz
cmp
mov
imul
pop
inc
push
xchg
clc
fwait
sbb
mov
in
push
dec
leave
push
dec
dec
fwait
clc
pop
mov
inc
pop
je
cmc
mov
mov
jge
sbb
lahf
mov
lcall
clc
xchg
xchg
lcall
icebp
jmp
sub
push
call
push
bound
sbb
in
add
xor
stos
enter
inc
dec
push
ja
add
out
jp
mov
fsubp
outsl
cmc
pop
in
cli
fisubrl
loopne
scas
clc
aaa
ljmp
sbb
inc
sbb
movsb
out
repz
repnz
incl
pop
push
mov
movsb
in
mov
pop
cli
in
leave
push
mov
rolb
pop
lcall
call
cmp
rorb
and
adc
dec
sbb
ret
lods
push
aaa
jne
repz
lcall
add
sub
jmp
fsubrs
jge
fwait
ret
or
push
push
sub
incl
add
lret
es
xor
incl
andl
incb
jl
jbe
fucomip
sbb
stc
out
faddl
shr
sbb
push
xlat
or
jmp
jge
sbb
call
call
pop
jmp
imul
push
push
mov
lahf
aaa
add
lods
cli
xchg
stc
pop
mov
test
dec
jl
push
add
clc
jle
mov
pusha
nop
es
leave
decl
xlat
cmp
hlt
pop
cmp
mov
xchg
incl
in
jp
hlt
xchg
sbb
inc
fdivs
sti
in
incl
lret
adc
shl
aaa
mov
incl
mov
test
sbb
jmp
xchg
arpl
cmp
xor
sarl
add
cli
in
cmpsb
sub
jmp
lret
cli
or
mov
call
mov
push
push
fbstp
jle
pushl
pop
sahf
mov
into
call
add
or
repnz
adc
fwait
pushl
ljmp
and
icebp
xor
imul
xor
adc
incl
out
mov
shll
dec
hlt
out
das
jmp
lret
lods
pop
out
and
test
sbb
or
push
push
pushl
movsl
adc
clc
mov
jo
aam
inc
add
jmp
inc
lcall
adc
ljmp
mov
pop
cmp
mov
inc
dec
push
cmpsl
jns
mov
adc
xchg
mov
repnz
adc
jne
adc
das
lock
add
in
cmpsl
cmp
addl
add
mov
jno
test
sub
push
mov
mov
loope
outsl
cld
and
aam
inc
mov
jmp
and
lret
jecxz
scas
dec
push
movsl
mov
rclb
mov
jno
mov
outsl
mov
jecxz
jmp
xchg
cmp
xor
push
and
aas
xchg
sub
adc
mov
cmpsb
push
or
sahf
jb
shlb
call
mov
mov
jecxz
mov
pop
ds
mov
xor
out
cltd
jbe
daa
cmp
in
xchg
or
das
jb
jle
add
jl
mov
dec
xchg
testb
xor
and
xor
sbb
push
lahf
inc
popf
pop
decl
fmul
inc
notb
pusha
lcall
fidivs
fstps
fs
push
sbb
or
call
mov
push
cmpsb
jmp
cmpsl
jle
mov
ljmp
ljmp
insb
sahf
xlat
sbb
out
add
push
je
pop
xor
mov
mov
xchg
gs
sbb
fidivl
add
leave
movsl
mov
push
je
fdivrl
fwait
cmpsb
mov
int3
addr16
ljmp
push
cli
inc
cmp
inc
cli
pop
mov
lcall
rolb
push
jmp
sbb
sub
push
add
push
movsl
gs
mov
aad
sub
mov
inc
das
inc
jne
mov
mov
pop
pop
jne
jmp
mov
call
pop
adc
mov
fdivs
fdivr
sub
inc
adc
incl
cmp
sbb
pop
decl
incl
loopne
stos
inc
aaa
jp
push
jae
dec
call
cmp
jecxz
insl
dec
aaa
in
fdivrp
dec
adc
popa
mov
das
mov
jmp
insb
push
xchg
sahf
mov
push
and
mov
push
push
lock
hlt
ja
pop
mov
cmp
mov
data16
outsb
mov
xchg
cmp
add
xor
ljmp
pop
push
out
jp
inc
ljmp
mov
leave
stos
dec
je
mov
jmp
cmpsl
fildll
jb
clc
pop
inc
leave
add
add
scas
jmp
decl
pop
ss
push
cs
push
mov
test
push
fdivrp
enter
loope
lcall
xchg
addb
pop
fildl
jmp
or
call
pop
jo
aas
ljmp
or
bound
jl
stos
sahf
adc
pushl
mull
es
clc
sbb
clc
adc
test
daa
sub
xchg
ja
jb
push
push
jmp
sahf
xor
js
repnz
icebp
jg
repnz
jne
inc
xor
bound
cmp
pop
movsb
aaa
mov
in
push
jne
fisubrl
js
pushl
xor
lcall
imul
ljmp
incl
xchg
cmp
lret
sbb
std
sti
sbb
test
pop
call
sbb
jmp
dec
rcll
lcall
ljmp
out
jecxz
add
call
insl
inc
mov
cld
cmp
jecxz
aad
jmp
aaa
mov
nop
incl
add
mov
jmp
test
lcall
xchg
pop
in
addr16
push
clc
loop
fiadds
fucomp
lcall
adc
pushl
jmp
xchg
pop
fsubs
incl
cld
mov
bnd
and
incb
mov
scas
push
inc
mov
mov
mov
or
insl
xrelease
mov
inc
xchg
push
cli
rorb
sub
mov
mov
pop
jmp
inc
sbb
gs
or
xchg
pusha
push
rolb
fisttpll
scas
inc
jnp
inc
testb
decl
jmp
pop
bound
mov
clc
jg
jnp
dec
cli
and
fiadds
pop
add
adc
aaa
mov
or
fdivs
sub
rcll
js
popa
decl
jmp
outsl
std
mov
incl
lahf
out
mov
xor
jmp
repnz
fildl
decl
mov
js
push
std
mov
xchg
lea
cmp
adc
dec
das
jno
mov
call
sub
lcall
aam
inc
ja
ud0
call
mov
outsl
pop
pushl
incl
xchg
jb
xchg
cmp
divb
roll
sub
push
jmp
or
repnz
push
in
jge
and
adc
outsl
add
xchg
mov
rclb
popa
imulb
les
lcall
mov
das
push
dec
fisubrs
mov
in
xchg
pop
aaa
lahf
mov
cwtl
rorb
or
incl
ljmp
test
ljmp
pop
out
xlat
mov
jl
sarl
jmp
add
decl
movsb
mov
jmp
out
lret
and
adc
pop
dec
call
pusha
inc
adc
cmp
std
out
hlt
sub
mov
call
push
dec
jge
push
mov
or
sub
add
mov
and
lret
lock
fdivrs
xchg
push
jmp
icebp
in
xchg
jmp
ret
push
repnz
sbb
mov
lock
adc
inc
aaa
es
jg
jl
mov
pushl
xchg
insl
ljmp
cmp
push
clc
cmpsb
jmp
xor
js
and
pushl
pop
js
ret
or
ljmp
adc
aad
decl
cli
or
decl
fiadds
dec
ret
stos
add
imul
in
dec
or
fucom
adc
cmp
mov
call
call
sbb
icebp
pop
mov
dec
popf
outsl
jl
rcr
decl
mov
nop
cli
scas
ljmp
or
pop
jb
jecxz
sub
dec
sahf
js
ljmp
inc
nop
jmp
mov
xchg
xchg
cmp
cli
push
jg
dec
push
cmp
cmc
cmpsl
push
mov
fucomp
inc
cmp
cmpsb
rolb
mov
sub
xchg
das
ljmp
arpl
dec
xchg
add
add
or
in
pop
movsb
stc
cltd
incl
add
xchg
dec
sbb
in
mov
adc
cmp
es
popf
imul
decl
add
lcall
loopne
dec
jbe
inc
pop
mov
js
dec
or
dec
icebp
in
insb
jne
std
inc
bswap
mov
int
jmp
loop
loop
pop
ljmp
cwtl
lcall
jb
repnz
and
adc
testl
and
loope
jg
cmc
das
ficompl
add
outsl
icebp
inc
cmp
clc
pushl
mov
out
sti
xlat
test
pop
push
jp
bound
jg
cmc
push
cmpsb
out
lods
xor
call
fstpt
sbbl
xchg
ljmp
incl
ret
xchg
xor
inc
jmp
into
mov
fidivl
inc
mov
or
push
push
lret
cltd
jmp
inc
imul
das
icebp
iret
adc
mov
decl
adc
movsb
call
jp
pop
insb
inc
pop
outsl
push
ljmp
outsl
iret
fbstp
pop
out
dec
pop
aam
pushl
stos
out
pushl
add
jns
and
decl
jmp
movsb
xchg
inc
inc
ljmp
ljmp
jmp
rorb
pushl
insl
jmp
in
aad
loop
jmp
cmp
push
neg
or
sbb
add
cs
sarb
jmp
cltd
std
adc
scas
ja
mov
xor
jbe
divb
jmp
lcall
loop
mov
xchg
inc
sbb
jmp
sbb
incl
repz
mov
ret
ljmp
test
scas
dec
dec
imul
push
lcall
mov
mov
pop
das
cmp
push
and
in
inc
repz
rorl
scas
pop
push
aas
stos
mov
negl
orb
mov
pop
fcomps
mov
mov
xchg
inc
faddl
jmp
movsl
push
push
inc
fucomi
pop
cli
int
pop
lods
mov
call
das
lret
add
push
notl
clc
cmp
push
jp
sbb
dec
xchg
loope
mov
pop
call
sbb
test
icebp
das
cmp
jo
dec
bound
push
ljmp
lods
dec
push
xor
xchg
daa
pop
push
mov
and
roll
push
ljmp
cmp
call
push
out
test
mov
aaa
sbb
add
sti
out
decl
mov
mov
std
ficoml
jmp
dec
or
cmp
out
sbb
ljmp
rcr
push
test
in
mov
pop
das
mov
or
lock
xlat
inc
out
js
push
lcall
sub
pop
jp
mov
outsl
and
rcr
jp
shll
incl
ret
push
and
cld
xor
jo
add
aas
pop
sar
pop
call
xor
in
subb
outsl
mov
mov
lods
dec
call
jo
test
or
cmpsl
in
mov
jl
push
in
js
test
arpl
cmp
mov
mov
cmp
cmc
jnp
out
mov
addb
ljmp
jmp
pop
std
mov
pop
sbb
out
ss
mov
movsl
mov
fdivr
jnp
rorl
inc
incl
sub
inc
mov
aam
push
or
jl
js
call
fst
fbstp
and
or
xor
mov
dec
inc
shlb
nop
adc
mov
cli
cmp
ret
lods
dec
jle
mov
and
call
cmp
cld
jbe
push
cltd
add
sub
mov
ljmp
sub
dec
inc
popa
adc
mov
mov
call
test
test
adc
stos
bound
inc
fcoml
hlt
dec
rolb
loope
stc
icebp
pushl
jmp
sub
notb
out
sete
test
stc
cmp
dec
adc
mov
je
mov
xor
lahf
es
js
mov
mov
push
add
xor
pop
lcall
cmp
jg
ret
sbb
stos
sbb
ljmp
mov
call
call
aaa
int3
enter
clc
pop
lcall
dec
cmpsl
imul
lret
es
xchg
jge
sub
cs
mov
in
or
mov
adc
stos
pop
xchg
fstpt
jno
pusha
pop
pop
ss
aas
shll
lods
push
jb
lock
aaa
pop
mov
add
call
mov
pop
enter
incl
fisttpll
mov
call
bnd
mov
jl
gs
fdiv
cwtl
jb
aaa
jne
jnp
cld
cmpsb
cmp
mov
popa
call
xchg
flds
mov
imul
mov
jge
and
cmp
or
push
push
dec
dec
mov
call
dec
pushl
ud0
sbb
lods
inc
ud0
outsb
loop
std
mov
call
pop
in
lret
mov
cmpsl
ljmp
xor
test
fdivs
jle
xchg
clc
test
add
cmp
int
incl
out
cld
out
adc
cmp
incl
mov
cltd
lret
xchg
inc
call
incl
inc
hlt
or
jmp
leave
out
adc
jg
insl
mov
xchg
fidivs
stos
add
rcrb
cmc
pop
bound
dec
dec
cld
jg
mov
std
int3
shrd
pop
jo
repnz
cmp
arpl
cmp
cmp
out
cltd
xchg
rcll
ret
push
push
sub
adc
pusha
sub
pop
fsubrl
hlt
mov
test
dec
xchg
pop
js
push
bnd
pop
mov
mov
xchg
dec
pop
incl
inc
dec
call
out
test
dec
mov
les
jmp
pop
and
stos
lods
in
jmp
sarb
jmp
jp
pop
mov
cltd
pop
repnz
movsb
mov
gs
call
sub
mov
orl
push
bound
mov
pushl
shrl
shlb
mov
and
pushl
test
add
test
push
in
inc
daa
sti
inc
jle
ljmp
jge
ja
dec
inc
fs
mov
xor
jbe
sbb
push
xor
or
lods
adc
pushf
jmp
cli
mov
incl
js
inc
push
ret
xchg
jp
rclb
cmpsb
push
hlt
xchg
push
inc
and
sarb
lods
loope
cmp
push
in
aaa
loopne
fdivrp
inc
cmpsl
sti
or
mov
push
inc
decl
scas
jo
dec
xchg
dec
dec
adcb
addr16
lds
les
jmp
and
rorl
sub
xorl
jg
pushl
jo
sub
xlat
pop
cmp
lret
out
push
clc
mov
inc
cmp
dec
pushl
push
fiaddl
add
repnz
es
mov
loopne
fs
and
jnp
xlat
lods
xchg
lahf
jp
xchg
iret
test
and
and
stc
push
call
inc
not
ljmp
xchg
xor
call
pop
call
pop
ljmp
dec
xchg
aam
mov
fiadds
insb
cmpsb
jmp
jo
inc
pushl
rorl
jae
sarl
push
incl
out
push
mov
cwtl
call
jmp
mov
mov
add
xor
ds
add
loope
push
cmp
xchg
cltd
decl
pop
pop
ss
scas
xor
jl
movsb
sbbl
inc
add
movsl
sbb
sbb
mov
mov
mov
pop
insl
jmp
cmc
adc
push
insl
imul
sarl
call
inc
test
or
pop
push
add
mov
mov
decl
push
or
xchg
lock
ret
fs
pop
lret
pushl
ljmp
cld
pusha
call
pop
mov
les
fwait
mov
cmp
and
insb
lcall
pushf
jb
pushl
jg
mov
or
lea
in
das
call
sti
sti
or
inc
ljmp
aad
clc
decl
loopne
push
or
adc
outsl
dec
mulb
adc
outsb
loop
add
fildll
mov
xchg
lcall
iret
sbb
push
das
xor
adc
add
out
or
add
push
lret
adc
xchg
push
pop
ja
add
lods
outsb
incl
add
insb
sbb
sarb
and
icebp
sahf
fwait
pop
push
das
ret
mov
sbb
mov
rcr
jle
rcrb
call
xchg
xor
imul
and
lods
fldenv
xchg
and
fdivl
and
push
pushl
add
cmp
es
lods
ljmp
clc
mov
or
pop
pop
insl
adc
gs
sub
mov
aaa
mov
ljmp
daa
push
sub
xchg
pop
adc
sub
and
das
test
scas
adc
jbe
in
ljmp
cmp
mov
dec
jl
clc
push
pop
sub
adc
ljmp
aam
out
jmp
push
jno,pn
and
pushl
pop
inc
rcr
aad
or
cmp
cmp
jo
or
fldcw
push
add
inc
xchg
aad
and
lds
andb
insl
jmp
lcall
in
clc
jge
outsl
mov
lcall
cld
pushl
push
sbb
xchg
insb
or
lret
clc
fistps
mov
push
addr16
mov
stc
pop
sahf
fcoml
jle
inc
popf
mov
or
lock
mov
pop
jg
jne
das
lret
cmp
ret
fildll
shll
xchg
lret
mov
add
inc
pop
pop
pop
js
inc
pushl
inc
sub
xchg
fstps
jg
dec
push
sahf
data16
lock
xchg
adc
stos
decl
jmp
outsl
adcl
cmp
pop
mov
pop
mov
in
in
add
sbb
mov
pop
imul
mov
add
cmp
sub
repnz
sub
inc
ljmp
dec
xchg
jae
js
mov
jmp
add
loop
dec
mov
inc
lret
add
lcallw
popf
mov
outsl
inc
fbstp
push
sarb
mov
stc
push
jmp
inc
ja
push
and
incl
pop
sti
and
cwtl
fcomps
add
lods
out
lahf
dec
mov
ljmp
repz
jne
xchg
mov
outsl
add
nop
inc
ljmp
sbb
adc
add
in
jbe
imul
dec
push
pop
jle
dec
std
bound
pusha
call
inc
movsb
or
loop
hlt
jmp
jmp
mov
sbb
out
pop
mov
jnp
bnd
cld
xor
mov
jge
xchg
ret
ret
in
addr16
mov
pop
ret
inc
mov
xlat
std
push
loope
push
les
dec
mov
sahf
cmp
jp
mov
xchg
ljmp
repz
cmp
cmp
push
mov
or
pop
jg
call
jl
lret
imul
pushl
loop
xor
cli
jmp
pop
out
leave
adc
movups
or
adc
mov
jbe
and
outsl
add
or
cld
loopne
adc
fstpl
pop
mov
aam
fwait
pushl
lcall
mov
mov
or
lret
cld
mov
sub
mov
cmp
repz
cli
ss
std
fists
sbb
adc
lds
stos
clc
jg
inc
cld
ds
lods
push
jge
mov
lods
mov
mov
xor
cmp
or
repnz
decl
icebp
int
fadds
inc
xor
shl
cmpsl
jmp
cmp
sub
cmp
xchg
sbb
add
mov
lds
mov
mov
mov
fnstsw
jmp
sbb
dec
cmc
inc
cwtl
loope
fldenv
imul
pop
or
incl
sub
in
jmp
psubusw
add
lock
mov
test
stos
and
leave
cs
ret
ds
fs
jg
fprem1
inc
mov
sbb
xor
or
dec
sub
outsl
stc
sar
call
aad
xchg
shll
jecxz
sbb
push
adc
repz
ljmp
jp
jbe
or
and
imul
in
movsb
dec
out
mov
lods
cmp
lret
xor
lea
add
sbb
call
aas
ds
scas
loopne
sub
jle
push
or
mov
sbb
mov
xorb
mov
hlt
fdivr
ja
push
jp
push
inc
jg
call
adc
loop
inc
push
sti
mov
jecxz
fisttps
cmpsl
mov
add
pushf
outsl
stos
jae
jg
repnz
pushl
mov
or
bswap
sbb
je
jno
call
jge
xchg
pop
xor
lcall
inc
inc
pop
sbb
lcall
inc
movsl
in
inc
outsl
jmp
mov
dec
cmp
sbb
and
lcall
int
xchg
cmp
push
out
lods
incl
decl
jae
and
add
loopne
mov
sub
aam
push
or
adc
cmp
pop
std
loope
push
fwait
xchg
stos
jbe
mov
fs
inc
stc
in
fldt
pop
pop
mov
incl
incl
fadds
lcall
sbb
pop
jne
cs
std
je
xchg
imul
inc
inc
in
inc
push
jne
xlat
dec
decl
ljmp
lods
sbb
insb
add
adc
iret
mov
add
arpl
call
pushl
xor
sbb
pop
push
xchg
mov
fists
adc
mov
out
dec
dec
dec
int3
or
icebp
push
test
test
or
adc
cltd
cmpl
inc
pop
pop
mov
test
dec
dec
enter
popf
incl
pop
xchg
popa
pop
pop
add
aam
fsubrs
clc
dec
std
sub
inc
add
loop
ljmp
jno
pushl
stc
arpl
icebp
call
cmp
xor
hlt
stos
lret
jne
xchg
das
call
push
jle
adc
sti
orl
dec
inc
ret
jmp
rcrl
mov
outsl
fucomip
stos
push
fcos
pop
ja
push
inc
fs
xchg
mov
js
call
inc
inc
add
adc
call
xchg
mov
mov
daa
lock
ljmp
xor
repnz
lcall
stc
sbb
push
js
aas
jg
decl
fsubp
call
decl
xor
adc
test
sbb
add
pop
push
sub
ja
sbb
les
dec
adc
data16
xor
mov
ret
pop
aam
sub
jmp
loopne
xchg
lds
mov
cmp
and
addr16
fnstsw
or
jp
icebp
call
stc
decl
jns
out
mov
and
in
scas
out
adc
gs
hlt
std
dec
jg
fistpll
push
roll
shlb
sbb
pushl
leave
clc
inc
jl
inc
sarb
push
pop
rol
push
je
mov
ja
call
pop
scas
dec
fadd
lcall
add
icebp
int
or
arpl
xchg
ficoml
decl
and
call
jl
insb
adc
dec
jns
add
jg
cmp
std
xchg
loope
pop
jle
sbb
sahf
in
inc
cmp
push
idiv
pop
mov
jmp
mov
hlt
add
mov
into
pop
pushl
jo
out
ljmp
cltd
and
and
dec
lods
push
popa
mov
ljmp
xor
loop
repz
pushl
lret
sbb
cld
sbb
mov
out
push
sub
mov
inc
outsb
cmp
call
std
pop
inc
push
jns
stos
mov
mov
loop
negb
mov
out
inc
jg
add
mov
repz
and
cld
lret
jo
decl
int
dec
mov
scas
add
cmp
jp
fistpll
adc
js
out
mov
arpl
sbb
test
or
push
sbb
test
mov
cld
adc
adc
movsb
pushl
mov
das
std
out
loop
or
call
dec
pop
call
jle
sbb
sbb
fstpl
ds
push
ljmp
cltd
add
test
inc
push
in
out
cmp
and
cld
out
stos
push
mov
andl
push
cmpl
rclb
cmp
mov
scas
outsb
cmp
xchg
movsb
push
xchg
adc
enter
call
hlt
jnp
and
xchg
push
rcr
push
sahf
xor
push
lret
lret
push
push
sub
jmp
ja
daa
cmpl
movsb
incl
mov
cli
call
push
decl
mov
cmp
sbb
push
cmp
jmp
stos
gs
inc
scas
and
mov
rorl
in
xchg
add
cli
push
rorl
cmp
inc
decl
mov
fucomip
ja
rcrl
lcall
test
pop
xchg
jg
dec
jge
sbb
inc
pop
sbb
aas
mov
fidivrs
in
mov
ficoml
int
jo
loope
lea
xor
add
or
jg
cs
or
jne
xchg
pusha
mov
sarb
popa
dec
leave
outsl
mov
movsb
flds
cmp
pop
bound
jb
jmp
shrl
fsubs
pop
inc
fwait
jle
xchg
out
pushl
out
movsb
pushl
sbb
jno
fisttpll
fmuls
inc
ljmp
mov
inc
xchg
inc
pusha
inc
jl
in
sbb
pusha
std
lcall
pop
sub
clc
jmp
cmpsl
fisttps
ds
xor
insb
decl
or
jns
lds
inc
and
sub
pop
add
adc
jbe
insb
mov
jecxz
decl
mov
mov
test
jg
sbb
les
ljmp
xchg
pushl
call
pop
in
adc
mov
adc
adcb
pop
fs
pop
or
adc
dec
call
aad
adc
sbb
imul
sub
cmp
xor
mov
cmpsb
push
cmp
sub
cmp
jb
call
leave
adc
mov
mov
inc
cmp
jge
pushl
fcos
or
add
in
mov
idivb
call
shll
adc
mov
mov
inc
push
dec
addb
incl
lods
sub
call
sub
adc
jg
and
fistps
sbb
push
adc
add
mov
call
in
push
pop
addb
psubsb
mov
les
cld
mov
aas
loop
xor
push
jg
insl
xchg
enter
cmp
inc
insb
mov
pop
push
xchg
jmp
or
and
je
clc
outsl
cmc
sbb
sbb
mov
lcall
push
call
loope
jo
or
lock
pop
bound
leave
cmp
push
popa
push
jmp
pusha
mov
mov
popa
fsubrl
lods
push
ja
mov
inc
xor
push
cli
scas
inc
pop
jno
mov
or
sar
push
out
cli
aas
dec
out
out
in
dec
xchg
mov
cwtl
imul
scas
aad
or
jmp
cld
incl
jno
ds
das
out
leave
xchg
std
push
dec
jg
cmp
aad
test
mov
das
vpavgb
dec
pop
pop
jns
push
ljmp
loop
scas
mov
xchg
cmc
adc
dec
and
inc
pop
dec
xchg
incl
add
addb
fwait
sahf
addr16
jo
jg
das
dec
adc
dec
leave
dec
jg
lret
push
icebp
lret
gs
push
mov
jecxz
and
incb
call
mov
aad
jmp
dec
lcall
out
add
sbb
mov
call
xchg
push
pop
jle
mov
fistpll
cmp
insl
jg
daa
lret
loope
push
push
jg
xor
xor
cli
fucom
scas
popf
jae
add
add
xor
aaa
sub
lods
cmp
add
and
sbb
popf
popl
fs
stos
or
fistpll
pop
shr
push
ret
pop
add
push
imul
lcall
pop
es
inc
add
iret
pop
movsl
and
lock
cmp
sbb
jmp
or
cmc
or
sub
imul
push
jle
mov
cmovs
mov
sub
sbbl
cli
das
hlt
inc
decl
sbb
add
adc
pop
lcall
insb
arpl
mov
outsb
lods
repnz
mov
xchg
xor
cs
push
stos
lcall
and
adc
sub
loop
pop
stos
sub
add
popl
xor
call
test
test
cmp
out
fcom
jl
cmp
xchg
aad
scas
adc
pop
test
inc
add
cmp
filds
mov
sub
cmc
decl
leave
aaa
add
sbb
fdivr
mov
das
cmc
pop
add
mov
add
rcll
inc
lds
pushl
test
lea
adc
or
cwtl
mov
lcall
jmp
mov
test
lcall
adcl
pop
inc
lods
aaa
aad
test
movswl
and
lea
call
iret
cmp
mov
fisttpll
mov
gs
in
or
inc
ljmp
inc
jmp
jmp
jmp
xor
dec
inc
fnstenv
dec
jg
out
xchg
lods
sbbl
insb
out
sbb
orl
add
bound
ljmp
notl
fmull
push
jno
mov
mov
clc
call
fisubl
ret
call
adc
or
out
sub
ljmp
cmc
xchg
mov
leave
rcrb
out
xchg
shll
js
std
lea
aaa
pop
cld
lods
scas
sbb
std
or
imul
jg
or
xchg
xchg
idivl
jp
mov
mov
fdivrp
jecxz
int3
xchg
pop
std
pop
and
mov
mov
add
jg
adc
push
sub
mov
or
outsl
cmp
jg
shll
add
test
push
mov
pop
rorb
out
icebp
lods
cwtl
ljmp
mov
out
xlat
rorb
xor
xchg
jle
push
push
pushl
pop
outsl
mov
fldt
jecxz
clc
jnp
mov
push
in
xchg
mov
push
mov
les
das
xchg
lret
les
mov
int
inc
mov
jg,pn
pop
sbb
jg
leave
pushf
rcll
cmp
and
jle
pop
imul
insl
push
lret
in
pop
inc
dec
in
mov
jmp
repnz
xchg
rorl
pusha
pop
add
jnp
insl
ds
jecxz
int
xchg
lret
push
testl
sub
ret
pop
cs
add
push
pop
out
cmc
jb
lret
in
sar
xchg
cmp
lods
aas
push
aad
lea
push
mov
push
decb
xchg
or
jns
incl
jmp
pop
push
int3
xchg
lret
testl
jnp
mov
cli
icebp
fcmovbe
adc
add
adc
add
xchg
or
mov
sub
in
dec
dec
add
bound
mov
outsb
fdivs
jg
pop
sbbb
std
lods
jns
std
inc
incb
jmp
loope
jmp
insb
call
ljmp
lds
push
jnp
mov
test
decl
or
jecxz
aad
movsl
subl
jmp
mov
inc
or
cmp
fstpl
int
decl
add
insb
jg
lock
leave
add
xchg
jnp
mov
jg
xchg
pop
outsl
test
xorb
push
shl
sub
loopne
fstpt
cltd
inc
add
sub
call
stos
mov
and
std
lea
lcall
jbe
xlat
xchg
mov
sti
dec
shrb
cld
das
sub
lods
jo
repz
stc
imul
pop
add
pop
xchg
aas
sbb
cmpsb
mov
pop
inc
ljmp
addl
dec
pushl
icebp
stc
lcall
lods
jbe
test
roll
mov
repnz
ds
inc
pop
and
stos
inc
test
mov
xchg
sbb
incl
mov
std
divl
jnp
cmc
mov
aam
ror
push
repnz
cltd
push
fs
rol
aad
out
insb
pop
push
dec
dec
jge
xor
iret
subb
jbe
orb
ss
jbe
stos
jge
call
cmpsb
pop
push
pop
mov
gs
je
cmp
les
add
mov
add
sbb
incl
push
mov
xor
lret
xchg
mov
sarb
nop
clc
pop
mov
and
fisubrl
test
loop
outsl
mov
cmp
mov
aas
idiv
lods
js
mov
leave
les
fdivr
int3
cld
shll
inc
inc
pop
cmp
mov
ja
xor
lods
or
movsl
mov
push
sar
dec
loopne
adc
adc
mov
test
lock
pushf
push
ret
and
out
adc
lret
inc
gs
enter
pushl
cli
aas
cli
cli
in
es
mov
xlat
repz
mov
js
push
or
mov
ss
jnp
in
cld
dec
inc
shrl
decl
mov
loop
incl
insl
adc
outsl
adc
pop
addr16
xchg
mov
lret
incl
dec
xchg
out
pshufw
cmp
scas
lods
daa
outsl
push
fidivrl
sar
or
adc
xor
mov
adc
inc
je
setbe
in
test
pop
mov
sbb
and
aaa
in
fadd
sahf
cmp
les
or
ljmp
enter
aas
imul
cld
xchg
lock
mov
mov
incl
and
repz
int3
std
call
in
inc
leave
imul
lahf
in
aam
jno
loop
jbe
push
frstor
lcall
outsb
xor
pop
add
push
decl
mov
mov
push
push
mov
push
add
lret
icebp
cld
aas
push
incl
jae
cmpsb
in
add
and
jmp
mov
and
xor
fldt
fistpll
inc
ljmp
fisubl
sbbb
imul
xor
call
mov
jb
jmp
out
jmp
je
push
addl
decb
aas
loope
incl
sarl
lock
mov
fisttpll
decb
outsl
cmp
scas
jge
pop
jp
outsl
xlat
cld
idiv
ret
fldt
ficoml
jmp
aam
mov
pushl
stos
imul
jmp
sub
test
cmp
mov
xchg
test
pop
inc
aam
mov
jno
jb
fimuls
sbb
and
jl
ljmp
mov
dec
cld
dec
imulb
adc
ljmp
imul
mov
stc
dec
push
jne
and
lahf
adc
incl
pop
out
mov
mov
push
cwtl
repz
sbbb
or
adc
adcb
aas
push
jno
cli
adc
cltd
in
cld
repnz
das
cmp
fdivs
dec
sbb
inc
mov
rclb
out
lahf
fistps
movsl
or
jle
int
and
jle
inc
nop
push
leave
mov
leave
pushf
sbb
lret
iret
push
xchg
xchg
mov
xor
mov
mov
xchg
insl
mov
stc
push
adc
fisubrs
xchg
jge
cltd
test
mov
ljmp
insl
outsl
cmc
mov
pop
sarl
movsb
cmp
repnz
xchg
xor
stc
cmp
inc
cld
out
push
dec
lahf
scas
sub
or
push
mov
and
mov
in
enter
test
in
inc
push
add
inc
ljmp
lds
inc
jmp
lods
xchg
add
in
pop
mov
add
in
call
lds
enter
arpl
aam
imulb
inc
jmp
mov
xchg
add
mov
incl
cmc
addr16
xlat
pop
outsb
ljmp
ljmp
lret
pop
jnp
movsl
in
mov
icebp
or
pop
ss
lahf
lret
mov
add
pop
or
cld
and
lcall
popf
ficoms
jbe
push
jmp
jp
and
inc
add
xchg
int3
mov
adc
mov
leave
mov
aad
leave
outsb
cmpsl
repnz
jb
mov
push
pop
movsb
sahf
pop
xchg
gs
or
shl
xchg
nop
inc
inc
mov
mov
push
xchg
jmp
and
add
lcall
ljmp
sbb
mov
mov
adc
dec
ljmp
jecxz
and
mov
mov
cmc
sub
hlt
and
inc
cmp
adc
loopne
incl
clc
or
int
push
jge
in
inc
mov
push
std
push
cmp
dec
inc
sub
lcall
push
push
mov
jmp
cmp
aad
fdivr
lods
decl
xchg
pop
stos
lcall
or
lcall
scas
das
fsubrl
sti
xor
mov
dec
mov
lea
pop
cmp
mov
ss
or
popa
and
jnp
jp
mov
in
jle
add
pop
stc
fidivl
adc
call
fucomip
inc
jb
pop
mov
incl
stos
andb
cld
inc
xor
imul
mov
mov
aad
jle
lock
das
push
xchg
fistpll
jge
lret
jmp
lret
cli
xchg
dec
add
push
stc
sub
roll
adc
decl
js
push
mov
in
push
push
in
inc
jmp
xor
lcall
lcall
mov
jmp
stos
incl
mov
jb
incl
add
movsb
and
xor
decl
ret
lcall
mov
ljmp
call
pop
jle
ds
enter
arpl
in
inc
xchg
or
nop
adc
das
pop
sbb
sub
mov
inc
cmc
mov
pushl
mov
iret
xchg
ds
call
add
in
enter
aaa
lahf
and
nop
sub
lcall
add
pushl
dec
xlat
insb
jmp
mov
mov
insb
dec
and
dec
jmp
lods
xchg
lret
outsl
fdivrp
mov
ljmp
into
sbb
fistpll
sub
stos
add
scas
or
xchg
push
call
out
xchg
outsl
test
call
mov
sbb
mov
stc
adc
dec
pop
dec
push
lock
jl
jns
scas
ss
adc
cmp
ficoml
sub
cmp
lcall
lret
jmp
fnstenv
pop
mov
cmp
mov
xchg
call
mov
push
daa
inc
xor
xchg
lcall
jns
pop
inc
jmp
es
icebp
call
mov
xchg
dec
jmp
jmp
adc
data16
pop
mov
pushl
mov
shll
shrb
js
clc
sub
dec
push
dec
sub
nop
scas
jae
and
ljmp
jp
xor
popw
pop
lods
arpl
inc
ds
incl
add
xor
add
jg
ja
push
push
xchg
adc
xchg
out
adc
cld
lcall
call
pop
imul
push
adc
push
pop
mov
xchg
mov
xor
mov
aam
mov
pop
mov
push
pop
sub
pop
in
fisttpl
push
ret
scas
or
es
sub
lods
out
xchg
mov
xchg
cmpsl
ret
pop
stos
jb
mov
aaa
fwait
popf
sar
mov
add
sar
jno
adc
enter
cs
xchg
pop
inc
arpl
fimull
movsb
add
lea
push
add
add
incl
rcr
push
sub
or
lcall
call
sub
addr16
je
popf
pop
xchg
mov
add
jg
ljmp
in
push
fsubl
cmp
jae
outsb
xor
mov
sbb
clc
ljmp
lds
add
pop
fcmovnb
in
into
mov
std
popf
sbbb
jg
jmp
dec
fsubrl
or
pushf
psllq
push
mov
fcomip
call
in
notb
pusha
jle
push
sub
inc
mov
and
xchg
ljmp
sub
stc
mov
ds
movlps
add
jle
mov
mov
adc
outsb
mov
add
sar
inc
ja
repz
imul
xorl
adc
cmp
outsl
std
mov
and
fcomps
add
ljmp
pop
xchg
pushl
mov
clc
or
dec
stos
hlt
lahf
ds
sub
decl
jmp
add
pop
js
enter
mov
pop
xor
and
inc
jecxz
outsl
mov
imul
aam
and
ljmp
sti
mov
les
mov
iret
mov
mov
mov
jae
push
or
pushl
lret
add
dec
pop
int
loopne
mov
add
test
rcrb
jmp
and
adc
pop
int
pop
popa
pop
int3
xor
mov
add
push
daa
adc
push
arpl
inc
push
mov
sbb
mov
imul
push
mov
and
jo
icebp
mov
loopne
jmp
cld
push
jmp
mov
rcll
fwait
test
jl
imul
push
or
in
lahf
sub
pop
daa
push
je
cwtl
lods
dec
pop
lret
adc
pop
jae
push
mov
xchg
sbb
dec
shll
mov
int3
and
repz
pushl
mov
into
xchg
hlt
jbe
test
push
sbb
cli
or
mov
out
adc
mov
and
sbb
mov
fnstenv
loop
test
aaa
pop
test
dec
sahf
or
and
mov
dec
sbb
mov
in
cmp
mov
ss
lea
leave
xchg
push
inc
sub
and
push
fidivl
stos
sbb
push
repnz
insb
ret
sbb
jns
mov
call
ja
sub
lock
aaa
insb
adc
inc
or
mov
fadd
cli
dec
cmpsb
fs
andl
nop
fbld
cwtl
bound
add
xchg
jg
push
stos
es
push
fucomp
push
es
push
fneni(8087
pop
addr16
push
clc
push
shl
or
adc
sub
cmp
cmp
xchg
jb
daa
movsb
mov
sub
cmpsl
inc
sub
xlat
pushf
push
pop
test
xchg
cmpsb
cmp
pop
decl
jnp
or
add
imul
jno
roll
dec
dec
push
add
jmp
pop
dec
sti
jp
mov
pop
add
aaa
jecxz
mov
clc
in
clc
or
call
fidivrs
xchg
aad
dec
mov
push
and
subb
inc
loope
sbb
xchg
cmp
inc
push
add
mov
clc
testb
je
mov
mov
movsl
out
push
incl
cwtl
lea
mov
pushw
ret
jge
lock
inc
xlat
and
jg
xchg
pushl
out
sbb
jb
stc
insl
pop
repz
sub
lret
test
ret
pop
pop
cli
ljmp
fsts
lods
popa
mov
test
or
add
adc
sbb
jg
incl
std
jp
mov
or
pop
push
inc
push
outsl
mov
out
les
cmp
lcall
push
stos
sub
sub
mov
aaa
test
mov
pop
cmpsl
lcall
in
mov
mov
das
mov
mov
fisubrs
insl
addr16
push
enter
jbe
pop
xchg
ljmp
xor
sbb
jb
je
aad
and
dec
das
fs
cs
xor
jmp
fcompl
cmp
testl
and
nop
les
or
fnstenv
pushl
jl
push
cmp
movsb
add
mov
xor
pop
je
add
mov
xchg
cmc
dec
inc
ljmp
xor
inc
and
into
xchg
pushf
insb
aad
cmp
decl
pop
hlt
divb
arpl
out
loop
lcall
mov
and
outsb
insl
sub
xchg
ret
pop
pushf
or
in
cmp
push
sub
cmp
cmp
lret
xchg
sbb
lcall
jle
test
mulb
divl
xlat
movsb
jns
leave
pop
jmp
or
jecxz,pt
or
mov
mov
adc
mov
pop
fcoml
dec
and
insl
mov
and
push
or
mov
cmp
stc
lret
mov
fcomps
in
mov
jmp
cwtl
add
mov
xchg
int3
xchg
fstl
test
cltd
push
in
js
mov
incl
inc
enter
mov
and
pop
dec
lret
xchg
fsubl
call
push
xor
mov
cmp
pop
arpl
mov
xor
ljmp
mul
mov
xchg
lods
add
xor
aad
or
loopne
lcall
movsb
inc
shlb
lds
fildll
sbb
xor
fcmove
fdivrl
das
or
hlt
cmp
cli
dec
imul
dec
aam
call
sbb
sar
outsl
lock
pop
pop
sub
ljmp
sub
in
mov
cli
imul
sti
repnz
scas
cltd
loop
cli
ret
movswl
mov
stos
popf
dec
jecxz
sub
nop
js
rcll
insl
mov
jb
mov
aam
pushl
sahf
pop
add
in
cwtl
je
adc
xchg
mov
jg
clc
pop
imul
mov
sbb
imul
incl
rclb
adc
or
sbb
test
loopne
sti
adc
jno
or
mov
int3
out
push
xchg
cmp
ljmp
hlt
adc
inc
dec
fcoms
adc
pop
push
sti
fisubrl
mov
xlat
sbb
dec
xchg
sbb
push
mov
ljmp
jg
sub
mov
push
mov
inc
mov
lcallw
mov
mov
shl
dec
adc
test
ret
jp
jp
lock
outsb
and
add
hlt
out
es
pop
mov
lret
jecxz
sub
decl
pop
out
mov
pushf
sbb
xor
fnstcw
jecxz
jl
stc
jg
js
jg
jg
movsb
cltd
adc
adc
int3
clts
call
fmul
sti
inc
jg
inc
mov
mov
adc
cmp
into
lcall
scas
adc
lahf
lods
xor
or
mov
xchg
gs
sbb
cltd
in
lcall
movsl
imul
into
out
cmpsb
data16
out
mov
jge
xor
incl
das
test
bound
jo
je
xor
cmpsl
push
or
sbb
ljmp
lock
jp
sbb
lock
das
ljmp
pop
and
xor
pushl
dec
sub
inc
int
xor
fwait
pop
cltd
cli
movsb
xchg
push
arpl
and
mov
call
out
repz
insb
dec
lods
int
fldcw
sbb
incl
add
mov
mov
les
gs
xor
cli
and
sub
xor
icebp
xchg
add
push
pop
dec
cli
jmp
add
jecxz
out
pop
and
push
adc
inc
mov
mov
or
das
or
out
jmp
jbe
cmp
push
outsb
mov
pop
push
pop
nop
sbb
xor
insb
lret
jae
movsl
lods
stc
jl
notb
call
adc
or
pop
sub
mov
fistpll
pop
ljmp
cmpl
dec
xchg
int3
xchg
ss
call
ds
js
das
mov
sbb
push
push
dec
sub
test
pop
mov
inc
lock
lcall
inc
arpl
and
shrl
add
in
push
inc
icebp
lock
call
sbb
loopne
call
and
hlt
and
clc
or
mov
mov
pushl
mov
pop
aam
fiaddl
test
pop
sarl
add
scas
cmp
mov
pop
sbb
sbb
push
into
fs
mov
sbb
ljmp
icebp
jp
fstpl
mov
popf
insl
ss
jb
jl
call
fstpl
inc
or
mov
push
in
inc
fadd
sahf
xchg
pop
data16
cmp
push
xchg
std
aad
jne
mov
pop
movsl
in
jl
mov
sub
add
incl
imul
imulb
adc
aad
testl
dec
add
xchg
sub
mov
pushl
aam
xor
sbb
push
loop
movsl
call
mov
mov
lock
cwtl
mov
call
js
nop
call
xchg
cmp
ret
xchg
inc
or
jae
cmc
cld
decl
sarb
pop
inc
sbb
cmpsl
pop
inc
test
mov
in
fucomip
pop
pop
loope
push
fdivrp
gs
mov
nop
fucomip
lods
aaa
xchg
xchg
dec
sbb
aad
push
mov
frstor
movsb
mov
pop
cli
outsl
icebp
ficompl
sub
jg
outsl
mov
decl
jns
or
ljmp
loope
add
pop
loop
test
inc
push
jle
hlt
and
sub
sub
adc
sub
pop
das
cwtl
std
movsb
jle
pop
xor
je
or
pop
fisubl
shlb
lret
insl
scas
push
mov
jmp
lock
pushl
jae
xlat
cmp
add
jl
ret
inc
popa
inc
mov
arpl
fildll
orb
mov
jmp
jecxz
jge
add
int3
jl
pop
insl
out
lods
data16
hlt
mov
rolb
jmp
jmp
dec
out
cmp
cmc
adc
inc
int
test
scas
popa
push
xor
mov
cmp
push
jmp
and
mov
loopne
jno
mov
add
mov
cltd
sub
jge
mov
or
outsl
mov
pop
in
dec
les
xchg
stc
pushl
push
testb
fwait
mov
scas
inc
jp
mov
ja
mov
lock
lcall
sub
sub
fistps
imul
fcompl
std
popl
rcll
inc
lods
das
ret
xor
aas
xchg
in
test
addb
mov
pushl
clc
les
push
jo
lods
adc
lds
xor
pushf
inc
inc
test
sbb
mov
outsl
decl
das
lock
lret
pop
ficoms
cmp
inc
inc
popf
ficomps
mov
les
add
jp
out
jecxz
out
cmp
mov
pop
shr
jbe
cmp
cmp
mov
aaa
sub
mov
jnp
loopne
inc
xor
cwtl
push
lahf
mov
inc
cli
outsl
inc
je
cmp
pop
incl
jg
dec
fcoms
sbb
mov
popa
fdivp
pop
inc
stc
lock
stos
mov
pop
jno
rcll
or
adc
mov
mov
and
inc
loopne
push
mov
or
lcall
stos
sub
jmp
mov
jo
mov
adc
call
push
cmpsl
imul
cmpsb
add
ljmp
jge
test
movsl
fidivs
idivb
mov
movsb
pop
mov
cs
stos
push
call
sbb
testl
rolb
in
int
xor
pop
push
ljmp
ffreep
dec
mov
cmp
mov
mov
lret
in
xor
dec
cmp
in
in
push
xchg
cmp
add
fstpl
xor
mov
nop
and
dec
sub
or
clc
in
clc
mov
and
xchg
pop
test
cli
lret
fsts
sbbb
loop
add
incl
cli
pop
and
and
lds
mov
add
lods
pop
call
push
xchg
mov
dec
cmpsl
inc
addr16
nop
lea
fistpll
dec
add
mov
ljmp
das
insb
jg
shrl
jp
inc
movsb
das
push
or
fs
and
dec
negl
jmp
sahf
xor
dec
dec
xchg
push
xchg
imul
inc
xchg
jg
or
lahf
insb
test
push
sti
in
xchg
mov
test
sbbl
lds
mov
add
pop
mov
sarl
int3
ljmp
lock
jns
shlb
sbb
rolb
xchg
or
sub
or
incl
and
mov
sbb
or
sbb
hlt
lcall
jae
mov
in
or
push
and
inc
outsl
hlt
or
out
sub
das
jmp
movb
sar
dec
cmp
xchg
jo
push
inc
mov
sub
xor
lcall
mov
lcall
push
call
orb
lods
push
lahf
or
out
stos
xchg
fnstsw
popf
adc
adc
ja
pop
sahf
jecxz
enter
outsl
std
and
test
fmuls
sbb
or
clc
push
mov
push
push
mov
xlat
test
add
xchg
lcall
repnz
sub
jmp
add
xchg
push
mov
jmp
rcll
push
xchg
ljmp
jmp
dec
push
sub
mov
cmpsl
adc
jg
pushf
out
lods
std
mov
mov
popa
dec
and
xchg
pop
dec
lods
sti
data16
mov
push
push
cld
inc
jno
hlt
mov
ljmp
inc
mov
jno
mov
lret
mov
lea
inc
cwtl
idivb
pop
mov
mov
sahf
sub
addr16
pushf
call
jg
bound
je
sbb
and
push
xchg
dec
mov
cmp
popa
push
sub
and
ljmp
xor
mov
xlat
fdivs
enter
cld
data16
decl
cmpsb
imul
jmp
insb
ret
sub
push
jb
cmp
je
aad
ja
xlat
push
mov
mov
icebp
xor
cmp
jg
cmpsl
mov
jl
aam
decl
repz
pcmpeqd
push
dec
push
push
adc
xchg
incl
fwait
mov
or
lret
mov
pop
cmpsb
and
cmp
cmp
and
arpl
inc
aaa
mov
pop
jbe
mov
das
call
mov
inc
and
jmp
lret
pop
out
in
cmp
repnz
leave
mov
adc
clc
pop
sbb
data16
push
adc
incl
insl
jl
and
mov
sub
ss
adc
mov
dec
std
pushl
aas
adc
sub
call
pop
cli
inc
add
pop
into
je
jae
pop
mov
pop
push
hlt
iret
outsb
sar
jmp
das
xchg
mov
xor
in
pop
dec
xlat
mov
and
xor
aas
mov
call
insb
out
loop
cmp
rorl
and
lcall
pop
ficoms
addr16
insl
dec
scas
xor
enter
pusha
dec
mov
sbb
fcoms
aaa
incb
adc
jo
or
fwait
mov
add
aad
pop
call
incl
repz
stos
xchg
insb
inc
mov
cwtl
out
push
ja
inc
and
and
pushl
jecxz
push
cmc
dec
fucom
cmp
es
bound
inc
lret
shll
in
sbb
sahf
bound
mov
cltd
cmp
ffreep
inc
jecxz
daa
jb
mov
sbbb
and
ljmp
test
push
mov
test
mov
scas
stos
popf
add
xchg
mov
pushl
xor
xchg
mov
fcoml
pushf
pop
sub
lea
mov
ja
adc
and
mov
insb
jno
pushf
pushl
out
push
pop
add
adc
in
xor
ret
test
lahf
mov
xlat
outsl
xor
sub
fs
test
or
mov
mov
mov
idiv
inc
aad
out
std
inc
jne
call
inc
push
loopne
mov
pop
adc
popa
iret
enter
or
mov
fimuls
cs
decl
mov
fistpl
push
or
jg
fisttps
aaa
mov
stc
xor
mov
dec
js
push
and
hlt
out
call
jne
push
sbb
loopne
and
adc
dec
fbstp
push
idivl
pushl
cmp
xchg
or
addr16
cmp
add
sub
lret
and
jmp
fdivrl
xor
jbe
vsqrtsd
lcall
clc
call
lods
enter
sarb
shrl
mov
std
int3
lds
mov
push
push
popf
and
mov
outsb
pop
ljmp
dec
jg
loop
lcall
mov
outsl
scas
aas
pop
mov
jg
lcall
or
inc
das
les
pop
lods
xchg
inc
lcall
dec
jge
loop
ret
and
inc
jg
adc
sbb
in
in
loopne
cmc
jno
push
jmp
mov
clc
stos
decl
sub
push
or
push
and
inc
pusha
push
jmp
cwtl
leave
mov
xchg
xchg
int
lock
pushl
in
sub
loopne
repnz
cmp
rol
jecxz
jae
xor
mov
pushl
cli
popa
cmp
in
jae
and
fisubl
gs
lret
in
adc
std
or
ja
add
pusha
in
lcall
and
cli
testl
xor
lret
dec
add
movsb
jecxz
rcrl
add
hlt
or
cmp
adc
pushf
test
mov
fstl
sub
mov
cmp
push
mov
sub
mov
pop
loopne
or
add
sti
xlat
int
leave
mov
adc
adc
ljmp
push
xor
in
test
or
mov
outsb
pusha
sar
mov
push
cmp
adc
into
bound
arpl
mov
dec
das
mov
lcall
push
mov
lret
sub
les
nop
sbb
mov
lock
js
imul
imul
push
addr16
jge
daa
push
adc
xor
repz
ljmp
cmp
mov
sti
mov
xchg
lret
jg
xchg
mov
fdivs
cmp
fidivrl
data16
in
cmp
add
and
jl
fdivr
xor
jmp
and
add
dec
xor
mov
jnp
movsb
ss
jb
movsb
mov
insb
popa
xchg
lcall
shl
jbe
xor
jge
sbb
scas
insb
shlb
insl
cld
mov
pop
loopne
shll
push
andl
fstps
fs
jae
sub
xor
ljmp
jae
mov
movsl
gs
adc
cld
pusha
jnp
ljmp
add
pop
in
imul
movsl
cmp
push
movsl
xchg
cmp
lret
stos
inc
test
jg
cmc
mov
test
cmp
fucomip
ljmp
jg
mov
xchg
adc
test
fdivrs
rcrl
jbe
or
call
sbb
mov
movsl
daa
inc
setbe
or
and
arpl
xchg
pop
repz
lret
test
inc
xchg
outsl
cwtl
cmpsb
test
xchg
pop
mov
pop
or
stos
les
jo
mov
dec
enter
jmp
add
push
xchg
adc
jmp
or
mulb
int
jmp
test
jo
scas
xlat
mov
imul
aas
cwtl
shl
fsts
leave
testb
fbld
adc
subb
clc
mov
adc
sub
lahf
ja
mov
aaa
dec
mov
mov
loopne
ss
test
fstl
stos
mov
popf
mov
pushf
pop
xor
loopne
push
mov
out
lcall
les
out
leave
push
ds
or
cmp
cmpsl
rcll
mov
rorl
outsl
std
incl
or
xor
add
mov
test
adc
push
jg
imull
mov
jmp
pusha
insb
cmp
and
jg
and
mov
pop
inc
add
lock
lds
jg
std
in
mov
jg
pop
xor
lods
cmp
mov
arpl
dec
and
sub
lods
inc
out
das
std
call
add
cmp
mov
push
push
jb
push
mov
jo
mov
test
scas
fildl
push
loop
and
sub
gs
jg
and
mov
sub
jnp
orb
scas
fists
and
mov
ljmp
cmpsb
clc
ljmp
jmp
movsb
out
push
jmp
ljmp
inc
push
movsl
and
fdivrp
add
addr16
repnz
dec
push
addr16
lcall
je
decl
shll
rolb
dec
popf
insl
sub
jp
loopne
xchg
pop
pop
dec
stc
fidivrs
repnz
sahf
dec
sbbb
movsb
push
je
addr16
lock
lock
aaa
mov
xchg
cmc
xchg
cmc
fwait
mov
ja
xor
pop
adc
imul
imulb
fs
cmp
push
fldenv
incb
fisttps
adc
mov
pop
test
jbe
in
addb
inc
or
xchg
mov
mov
xchg
sub
ljmp
add
sbb
in
das
adc
lcall
out
ret
ljmp
cmp
cwtl
lods
and
push
popf
push
out
cli
das
icebp
in
sub
pop
xchg
movsb
pusha
mov
inc
lods
out
mov
fildll
mov
mov
pop
pop
stos
ja
and
sub
in
jp
rorl
loop
cli
xor
fcoml
and
mov
sbb
pop
push
outsb
pushl
adc
add
jo
into
ljmp
lods
ss
xchg
add
loopne
das
cmp
shll
pushl
push
addr16
push
mov
int
adc
push
aad
fildll
out
jae
adc
subl
add
or
scas
cmpw
mov
mov
dec
dec
pop
push
pop
out
sub
pop
aas
dec
aaa
and
dec
mov
lods
addr16
jp
xor
lcall
movsl
scas
pop
and
inc
add
push
adc
lahf
add
lcall
mov
jle
fdivrp
push
lods
and
add
xor
inc
enter
das
sbb
cwtl
pop
arpl
sarb
inc
call
movsl
inc
lret
pusha
jo
cs
sbb
push
mov
inc
mov
dec
outsl
fdivrp
ljmp
lods
mov
daa
push
cmp
and
pop
sahf
mov
dec
sahf
stc
aas
xor
sbb
fwait
dec
mov
in
mov
sahf
sbb
stos
pop
mov
inc
mov
mov
sbb
xor
pop
fimull
xor
add
loopne
call
pop
mov
sbb
push
xchg
and
sub
jg
mov
jb
jecxz
ret
and
xlat
in
push
jecxz
xor
push
xchg
roll
cmpsb
outsl
or
and
mov
das
inc
in
outsb
dec
dec
mov
outsl
shr
bswap
inc
add
inc
mov
jg
fildl
sbb
xchg
inc
iret
insl
dec
mov
imul
mov
outsb
adcb
pop
cli
outsl
in
icebp
cmpsl
pusha
sub
std
dec
and
pushf
pushf
shlb
cld
jl
cmp
mov
xor
or
mov
inc
in
imul
and
cmp
andl
add
jmp
fidivs
test
and
outsl
cld
pushl
scas
dec
data16
push
sub
ret
mov
idiv
adc
stc
lock
fsubp
loopne
jmp
cmp
dec
add
cmp
jg
mov
scas
lea
pop
insb
cli
add
lret
jno
movsl
loopne
outsl
cld
jl
clc
xor
and
sbb
fwait
icebp
sbb
sbb
and
fwait
cmp
pause
das
xlat
fcmovnb
lea
loop
adc
pop
and
push
push
adc
jg
lea
repz
xor
daa
call
cmp
jmp
inc
lret
mov
push
stc
and
sub
sub
iret
sub
icebp
fmull
mov
dec
cld
jg
push
mov
fstpl
sti
xchg
or
rclb
inc
push
lods
push
pushl
ret
push
dec
rcll
and
mov
xor
fdivrp
jo
or
insl
test
imul
mov
or
adc
xchg
add
mov
lods
incl
push
add
push
rorb
mov
inc
add
lds
and
adc
inc
xchg
inc
decl
fisubl
stos
ljmp
add
mov
jnp
pop
or
call
cmp
cmp
dec
and
mov
pusha
inc
in
stc
mov
xchg
inc
repnz
pushl
adc
lret
jno
push
mov
xchg
adc
xchg
sahf
inc
jns
rcrb
in
aam
clc
setle
fyl2x
and
call
imul
pop
add
push
adc
imul
ss
clc
incl
xchg
aam
adc
push
je
push
pop
sbb
scas
lcall
adc
stos
push
dec
repnz
cs
addl
addl
sbb
fistps
call
fdivr
push
jmp
insb
pop
stos
cmp
xor
xchg
ja
iret
inc
jg
fiadds
imul
push
sahf
mov
inc
xlat
mov
add
cld
add
ret
fisubrl
bound
mov
mov
xchg
lcall
add
jmp
xor
xor
arpl
sbb
scas
cld
pop
pusha
ret
call
jne
fadds
adc
xchg
hlt
nop
sub
icebp
outsl
xchg
imul
cltd
sbb
xor
fdivrp
ds
pop
fs
lods
mov
cltd
enter
add
decl
pop
jne
out
jo
add
in
jmp
test
shll
adc
incl
test
cltd
pop
aam
dec
adc
mov
repnz
xor
imul
dec
jae
adc
int3
dec
shrl
pop
subl
xchg
mov
sub
out
sti
adc
pop
leave
adc
add
aaa
iret
call
add
pop
pop
cli
mov
cs
mov
inc
lahf
cld
sub
jmp
fnstsw
shlb
addr16
fs
notb
push
iret
jbe
imul
mov
push
fsubr
subb
test
sbb
cwtl
bound
mov
call
es
lahf
jecxz
pop
jle
fdiv
dec
mov
inc
fimull
pop
inc
lcall
xchg
movsb
nop
pop
adc
mov
insl
shlb
sub
out
mov
mov
call
dec
push
push
aas
inc
push
xor
add
mov
insb
in
pop
pop
sarb
pop
fsubs
incb
adc
adc
mov
arpl
pop
movsbl
movsl
les
jns
jecxz
movb
jge
cld
call
fisubrs
xchg
xor
push
out
decl
test
sbb
pushf
js
leave
xor
dec
mov
add
push
test
dec
aaa
and
push
insl
jne
sub
push
enter
mov
inc
dec
adc
frstor
in
adc
dec
in
es
push
cltd
xor
xchg
adc
sti
fs
call
lcall
jnp
add
jecxz
mov
mov
nop
push
sbb
fildl
lods
adc
push
xchg
int
inc
fcoml
aam
add
mov
out
mov
movsb
sub
aad
fstps
leave
fdivs
decl
mov
cmc
mov
and
jno
int3
mov
sub
out
xchg
pop
jno
icebp
dec
std
ljmp
push
mov
dec
sahf
cmp
stos
cs
sub
xor
shll
sti
pushl
push
cmp
jle
push
adc
sub
ret
add
add
adc
pop
stc
xchg
jg
adc
movsl
sub
shl
int3
std
xor
das
mov
pop
cmpsb
cmc
or
pop
mov
cmp
movl
arpl
shl
int
ss
inc
xlat
decl
sub
jno
andb
out
dec
inc
ret
jp
xor
sub
push
mov
mov
out
rcl
scas
andl
pop
xchg
decl
lahf
jo
pavgw
aas
jecxz
into
mov
cmp
call
lock
lcall
add
jge
out
cmp
mov
rcl
aas
push
ja
xchg
je
sarl
jg
call
dec
repz
mov
lret
mov
dec
repnz
push
mov
xor
pushf
ss
inc
fcomps
dec
pushl
adc
xchg
pop
test
inc
xchg
cmp
incl
test
aas
mov
ret
lea
fs
scas
jl
andb
xorl
leave
les
sarl
fdivr
jmp
sub
cmp
mov
in
les
inc
or
add
int3
scas
xchg
push
fsubl
lods
pop
xchg
xchg
mov
inc
jmp
dec
int
push
jg
stos
cmp
cmpsl
repnz
incl
cmpsl
adc
xor
dec
push
adc
je
sub
adc
jns
decl
out
pop
out
scas
and
cmp
pop
shl
inc
add
cmp
rcrb
nop
add
inc
icebp
lcall
lret
mov
push
gs
adc
pop
push
lahf
clc
lcall
cld
das
loope
mov
add
cmp
or
pushl
and
das
sbb
and
mov
les
lods
dec
fs
jp
sti
fstpt
sbb
cld
jmp
outsb
mov
xor
xor
push
hlt
std
xchg
dec
stos
add
dec
push
adc
in
pop
inc
lea
or
decl
cmp
or
mov
cmc
mov
mov
daa
or
or
je
jo
sar
xorl
jno
outsw
mov
shrl
insl
imul
push
add
lret
stc
movups
hlt
push
pop
lcall
in
cs
mov
call
pushl
inc
test
leave
mov
cmpsl
sbb
inc
lcall
cltd
xchg
mov
mov
push
xchg
fistpll
inc
mov
lcall
and
or
mov
dec
dec
int3
pop
outsl
lock
in
out
xor
ss
out
aam
sub
jl
out
adc
pop
lods
sbb
and
sbb
loop
mov
push
std
bsf
dec
mov
adc
jg
lock
notl
push
sti
add
js
test
call
xchg
lds
lods
mov
sbb
in
testl
bound
jb
mov
mov
divb
or
and
sub
shl
in
jp
mov
cld
push
int3
test
getsec
inc
jns
pop
sub
aas
sub
scas
pop
cmp
incl
stos
lods
ljmp
jno
imul
icebp
lahf
and
testb
idiv
pushl
push
std
sub
or
std
mov
insb
js
add
loop
pushl
cld
dec
push
jge
push
xchg
mov
fcomps
pop
loopne
inc
pop
mov
clc
lcall
rcl
aad
pop
es
daa
lock
mov
cli
jle
aad
jge
shll
ljmp
cmc
lea
outsl
popf
sahf
add
ret
lahf
push
pop
pushf
outsb
das
sbb
out
mov
cli
adc
mov
inc
test
xchg
inc
mov
pusha
xor
sbb
lock
negb
inc
cmpsl
mov
decb
cmp
in
jecxz
dec
lcall
mov
xchg
add
clc
mov
mov
mov
mov
push
push
mov
andb
adc
data16
dec
sbb
pop
loop
loop
lahf
int3
ret
push
and
mov
loop
mov
lret
adc
lcall
xchg
aam
inc
mov
in
cmp
lods
add
enter
push
cltd
mov
lcall
loop
or
and
aaa
or
sbb
jmp
adc
cmp
push
push
xadd
mov
dec
insl
pinsrw
fucomp
dec
sbb
popa
div
cmp
lods
movsl
std
pop
jne
or
incl
addr16
lahf
xchg
push
or
adc
into
or
xor
in
flds
mov
push
add
cli
adc
call
jmp
xchg
sahf
mov
lcall
pushl
fdivrp
jg
mov
loope
push
out
xchg
enter
and
int
ds
ljmp
icebp
dec
shll
out
push
xor
lahf
enter
push
imul
jmp
rorb
addl
in
add
pushl
pushl
jne
mov
mov
mov
jbe
mov
push
sbb
into
push
xor
aam
dec
xchg
push
dec
pop
mov
pop
lods
or
cs
adc
xchg
test
lea
rclb
call
jmp
daa
xor
in
inc
and
push
jp
pop
xor
int3
fbstp
pop
shl
pop
cltd
fcmovne
inc
cmp
cmpb
lods
cmpsb
fistpl
pop
push
stos
cmpsl
jl
or
fsubl
pop
ljmp
xchg
mov
cmp
mov
mov
lcall
enter
push
cmpsl
or
ret
inc
pop
hlt
mov
add
daa
addr16
add
jb
lcall
daa
dec
mov
adc
mov
js
lret
xchg
lahf
insb
and
pop
cmp
ret
dec
mov
enter
aaa
imulb
xorl
fdivrs
jb
mov
jg
pop
js
xor
sbb
popf
push
push
aaa
fwait
and
mov
mov
cmp
xchg
je
mov
call
mov
xor
lcall
lods
sbb
decl
push
sub
test
push
mov
and
pop
fwait
rorl
push
adc
outsl
std
ljmp
push
sub
aad
adc
inc
mov
fwait
mov
xor
idiv
cmp
adc
les
cmp
sub
fstpl
fnstsw
mov
insb
add
fs
sub
push
cmp
bound
xor
data16
outsb
jge
aaa
or
sub
jge
jnp
pushl
pop
ss
les
and
push
out
lods
push
sub
rorl
neg
clc
cli
imul
arpl
xor
or
pop
push
xchg
cmp
loope
sahf
test
cltd
cld
mov
sbb
mov
sbb
es
xlat
ret
data16
das
lock
pushl
jmp
iret
sbb
dec
ret
scas
mov
int3
fwait
adc
call
pop
outsl
arpl
mov
pushf
pop
cmpsb
xor
decl
inc
cmp
xor
cltd
mov
int3
mov
sar
inc
decl
test
dec
and
jp
out
mov
lods
and
cmp
adcl
aaa
leave
fmull
insb
iret
decl
sbb
loop
mov
mov
mov
insl
repnz
loop
call
cli
lcall
mov
push
scas
daa
push
jge
and
lret
pop
mov
call
rolb
jg
popf
push
lret
insl
idivl
or
xlat
jmp
movsl
xchg
loopne
sub
into
outsl
lcall
dec
jns
xchg
sti
push
inc
rcr
insl
xchg
jne
ljmp
mov
out
push
push
out
ret
rorl
and
or
cld
sbb
lret
ljmp
lock
inc
lea
pop
inc
mov
out
fwait
out
dec
pop
aaa
fcoms
fdivrp
mov
stos
dec
and
ljmp
out
and
push
mov
rorl
push
jg
rcrl
inc
xchg
mov
int3
adc
sub
xor
in
mov
mov
lods
mov
int3
scas
adc
add
loopne
xorl
clc
jmp
enter
call
call
jg
decl
pusha
push
cmpsb
loop
cmp
dec
jae
pop
test
or
mov
mov
ljmp
into
gs
in
pushf
push
incl
call
int
xor
and
dec
sarl
pop
jg
aas
in
push
out
cli
mov
sbb
lock
xor
or
addr16
aam
dec
incl
dec
add
mov
inc
stc
adc
jne
nop
dec
add
cmp
mov
ds
aam
ljmp
loope
adc
das
incl
hlt
in
inc
dec
movsb
cmc
ficoml
jge
lcall
out
pop
stc
ljmp
sbbb
sub
cmp
mov
ds
les
lcall
or
test
je
mov
and
lods
scas
ja
cmpl
push
aas
mov
movsl
mov
lods
mov
fiaddl
sub
inc
sbb
lea
cwtl
push
adcl
test
adc
jecxz
lahf
lret
lea
mov
repnz
ja
pop
mov
fidivrl
jmp
jmp
and
out
idiv
das
mov
addb
icebp
imul
dec
aaa
jb
std
pushl
push
xor
testb
jo
cwtl
adc
ja
xor
lcall
pop
clc
push
gs
xchg
sbbl
iret
sub
andl
or
ret
daa
jne
pop
mov
icebp
and
xlat
adc
push
fnsave
cwtl
cmp
loop
sbb
lds
mov
push
sbb
dec
mov
popa
cmp
dec
adc
dec
mov
adc
dec
cmp
inc
imul
adc
jl
icebp
jg
into
js
mov
mov
cli
mov
es
mov
cld
incl
and
into
stos
dec
daa
mov
iret
fildl
decl
jno
sarl
fnstcw
bound
jnp
inc
loop
and
stos
lock
jo
fimuls
test
hlt
aaa
es
movsl
add
ficoms
pop
pusha
jmp
add
xor
rcll
mov
mov
ss
ljmp
icebp
adc
and
inc
test
inc
inc
repnz
dec
dec
sbb
lock
lcall
dec
aam
lea
xchg
mov
sahf
das
cmp
mov
xor
ljmp
mov
push
xchg
jbe
leave
mov
push
xchg
xor
out
push
pushl
sub
adc
fdivr
fmull
fisubl
fsubrl
dec
push
inc
inc
fpatan
jne
cmp
jg
cmc
push
jb
xor
jg
mov
popa
jmp
push
cmpsb
jo
adc
sub
cld
call
jns
dec
pop
test
jno
icebp
xchg
or
shlb
mov
jmp
incl
ljmp
int3
jne
xchg
sbb
push
es
hlt
mov
repz
sbb
mov
mov
cmp
or
call
inc
std
jl
lcall
iret
in
jge
dec
xor
xor
decl
adc
std
sbb
jecxz
mov
sbb
pop
cmp
cmc
mov
gs
jp
dec
add
pushf
push
dec
repnz
lret
ja
mov
loopne
lcall
dec
xchg
xchg
mov
dec
and
jo
imul
sbbb
fists
dec
or
or
mov
xor
in
decl
adc
imul
jge
dec
dec
mov
jl
mov
lret
mov
je
aad
or
insb
out
mov
inc
les
pushl
mov
inc
fdivl
push
pop
popf
push
mov
push
cld
repnz
xchg
mov
in
mov
dec
outsl
pop
cwtl
jg
inc
push
jo
inc
mov
gs
pop
sahf
pop
add
mov
jg
mov
xchg
mov
lret
mov
in
sub
add
add
lock
xlat
imul
call
cmpsl
dec
mov
adc
cmp
push
stos
inc
outsl
and
mov
call
fisttps
push
xor
mov
sub
and
mov
rclb
push
mov
sbb
addl
push
lods
inc
ds
push
inc
adc
cmp
jns
cmp
adc
jl
ljmp
das
loope
js
test
fwait
mov
ret
add
add
cmovae
cmc
lcall
shrb
mov
dec
pop
push
jbe
dec
and
add
shr
add
mov
cli
push
scas
pop
pop
adc
cmp
daa
mov
daa
mov
ret
cwtl
or
in
sbb
std
idiv
fcompl
push
bound
ss
dec
adc
xchg
dec
pop
std
decl
test
enter
cwtl
repz
sti
lahf
jo
incl
and
test
repz
push
push
adc
or
ljmp
aad
push
mov
mov
and
or
mov
mov
test
loopne
sub
mov
dec
gs
fistpl
movsl
jmp
loop
cld
ja
popa
adc
adc
sub
push
adc
fbld
xor
lret
jnp
sub
xor
sbb
dec
cs
hlt
pop
mov
push
aad
mov
mov
shr
adc
mov
jmp
mov
repnz
mov
push
push
mov
ja
or
cmp
xor
xchg
mov
shlb
pop
ja
stc
pushf
push
divb
or
xchg
push
insl
jg
inc
dec
insl
addl
jg
lds
stos
in
push
and
in
orl
sub
pop
mov
pop
iret
bound
sar
fcomi
outsl
cld
ret
sbb
inc
movsl
jl
repnz
test
xor
repz
aam
clc
in
dec
in
imul
sub
adc
enter
decl
mov
cmpl
xchg
xchg
sub
lret
les
fwait
jp
dec
sar
decl
subl
ja
xchg
aaa
mov
push
insb
jbe
jae
adc
jnp
aaa
pop
loope
call
mov
rorb
pop
lods
fistl
adc
out
aas
fwait
and
fcom
jg
mov
fists
cmp
xchg
shlb
push
cwtl
push
fs
test
repnz
sub
loopne
sbb
pushf
xor
inc
jmp
mov
lahf
sti
pop
mov
shll
shlb
stc
mov
lcall
loope
loopne
mov
outsl
jo
stos
cmpsb
addr16
cli
aaa
lahf
insl
and
nop
lods
mov
scas
lcall
jnp
orl
imul
add
scas
imulb
jg
call
movsl
sahf
mov
addl
mov
mov
xchg
imulb
ret
xchg
xchg
pop
pop
aam
stos
idiv
sbbb
outsb
mov
mov
and
jg
ljmp
in
stc
sub
leave
rolb
test
pop
lods
push
fidivrs
icebp
loopne
pushl
daa
sub
xbegin
jo
sahf
jp
outsl
daa
cmp
push
sub
dec
push
lods
jno
mov
out
pop
mov
pushf
les
jle
loop
sbb
popa
xchg
xchg
decb
call
mov
sti
int3
imul
cmpsb
pop
lret
pop
xchg
icebp
pushl
adc
pop
gs
xor
xchg
jnp
sub
mov
in
data16
xor
shlb
nop
mov
gs
imul
or
ljmp
xchg
inc
and
pusha
sub
adc
add
mov
call
sbb
mov
insl
rolb
sub
jae
je
jmp
inc
jne
lret
adc
lcall
aad
inc
addb
data16
xor
xchg
fnstcw
mov
dec
dec
push
scas
mov
orl
into
inc
mov
or
push
jnp
call
cli
pushl
xchg
mov
inc
jo
ret
push
and
shll
ljmp
sub
push
adc
mov
in
xchg
mov
and
sbb
or
dec
std
mov
test
jmp
pop
cli
pushl
fstps
jno
dec
test
xor
jae
cmp
les
mov
push
in
push
dec
lds
cli
xor
push
sbb
and
repnz
movsl
shr
insl
cmpsl
pop
xlat
fildll
incl
pushl
ljmp
insb
popf
fisttps
inc
call
sub
fidivs
pushf
jecxz
clc
js
movsl
inc
shrl
mov
call
push
mov
aam
int3
mov
cmpsl
call
rcr
outsl
jne
pop
push
mov
xchg
and
dec
les
cli
add
lea
mov
icebp
ljmp
sbb
cli
xor
jg
jge
add
mov
and
incl
or
insb
and
lret
lret
pop
add
dec
out
in
movzwl
call
pop
shlb
lock
fsubrs
jg
jp
lods
add
orb
gs
bound
push
inc
xchg
push
movb
imul
shll
int3
popa
cs
dec
and
xchg
pushf
push
push
in
std
inc
xchg
popf
sbb
loop
sti
and
jg
fisttpl
adc
jmp
imul
fidivrs
stos
sbb
movsl
dec
sub
ljmp
jg
add
in
call
xchg
sbb
sub
dec
dec
arpl
and
mov
mov
fldl
xchg
lds
inc
ss
and
dec
jg
jmp
mov
in
pusha
icebp
ficompl
xchg
xor
xchg
pop
ja
mov
cld
ljmp
or
mov
scas
setne
cld
mov
das
jno
cwtl
mov
xor
ljmp
out
and
pushl
xchg
mov
pop
pop
mov
sbb
fdivl
lods
jg
inc
jge
rclb
daa
imul
imul
mov
pop
xlat
jnp
adc
sahf
sbb
mov
out
adcl
sub
std
dec
xchg
push
and
push
xlat
imul
inc
std
lret
mov
xor
testl
jns
lods
mov
mov
jmp
xchg
mov
fwait
lahf
adc
adc
jne
bound
test
fisubrl
lcall
cmpsb
adc
dec
and
outsl
rorb
mov
into
mov
scas
cmp
stc
outsb
repz
movsb
dec
fwait
adc
outsl
cmp
adc
pop
fisttpl
pop
cmc
mov
push
rcrl
xchg
call
xchg
jbe
inc
clc
test
and
jnp
cs
outsl
jno
mov
cwtl
sbb
out
into
push
lcall
roll
xor
jp
jnp
lods
scas
mov
add
jae
push
call
int
inc
test
in
jno
push
push
inc
mov
pop
mov
mov
cmp
push
dec
enter
fbld
dec
cmpsb
pop
pop
loop
jmp
inc
xor
or
sub
str
adc
stos
xchg
jg
dec
inc
xor
push
stos
cmpb
loop
sbb
addb
lea
loop
push
icebp
enter
rcrb
pop
out
adc
mov
mov
sub
adc
push
sbb
scas
movsl
fildll
jg
sub
aaa
sar
leave
adc
jg
incl
dec
push
daa
scas
fisubs
xchg
clc
jmp
xor
xor
mov
mov
mov
jnp
test
lods
mov
adc
jle
lahf
iret
pushf
lock
ljmp
jns
push
lods
fcompl
push
and
int
and
inc
fldenv
scas
xor
aaa
pop
xchg
div
leave
dec
pop
xchg
cmp
popf
andb
push
test
cwtl
aas
in
inc
jg
inc
and
sbb
or
dec
loope
adc
aam
adcb
js
cli
pushl
mov
lahf
aam
rolb
sub
aad
scas
sub
cmp
scas
dec
pop
adc
sub
loopne
stos
fwait
dec
das
xchg
ljmp
add
mov
cld
decl
pop
push
aad
aas
mov
xor
fdivrl
call
decl
mov
lea
pop
inc
loopne
jl
movsl
mov
daa
pushl
cli
push
mov
int3
or
cmp
imul
inc
adc
add
ret
in
jle
inc
inc
sbb
or
jecxz
mov
mov
in
es
stc
inc
loopne
call
lods
jg
dec
jl
adc
push
sub
les
push
xchg
jns
bound
add
cmp
jmp
mov
into
arpl
inc
icebp
repz
adc
mov
xlat
jmp
repnz
rep
inc
mov
hlt
jns
or
adc
mov
add
dec
std
sbb
fstpt
out
pushf
dec
shlb
mov
insb
daa
mov
movsb
jge
cmpsl
ret
loop
push
negb
incl
jg
xchg
ja
cmp
cmpsb
out
mov
sub
jnp
hlt
mov
decl
sahf
shr
jg
dec
les
scas
xchg
pop
pop
sbb
or
inc
sbb
decl
dec
mov
xor
cmp
inc
lods
add
add
push
clc
pop
mov
pop
clc
lods
dec
and
or
stc
push
xchg
xchg
xchg
pop
and
inc
in
mov
in
popa
aam
stc
es
out
shl
sti
or
pop
xor
addb
pop
adc
aad
or
test
icebp
dec
fbstp
aas
jmp
mov
cmp
hlt
push
cmp
pop
cld
fidivrl
movsl
mov
sbb
aad
hlt
lds
ret
jmp
xor
mov
aam
push
aaa
mov
pop
movsl
push
jmp
jmp
lcall
mov
jmp
push
cmpsb
dec
movsb
inc
ja
push
or
lods
jb
sub
xor
clc
filds
pop
mov
test
mov
arpl
sahf
mov
jg
fildll
xor
fisubrs
mov
adc
dec
jae
sub
fsts
lret
push
jmp
inc
inc
jo
cli
mov
and
out
mov
cld
mov
xchg
out
xchg
add
or
mov
incl
jo
add
cmpsl
in
xchg
shl
insb
dec
jnp
loopne
add
movsl
and
push
sahf
cmp
dec
lds
jbe
int
loopne
mov
xchg
aas
int
sbb
fdivrp
sub
bound
jle
and
adc
cmp
rol
push
in
je
jno
cli
pop
sbb
roll
and
mov
mov
adcb
mov
sbb
and
pushf
fcmovbe
xchg
out
leave
jmp
ljmp
aam
scas
inc
ljmp
lcall
sbb
jp
jmp
std
push
cwtl
add
dec
mov
std
js
fcomps
adc
fucomip
jg
add
add
mov
mov
jmp
jns
daa
inc
jl
es
ljmp
pusha
mov
lock
aas
push
mov
std
cld
jns
lock
jmp
movsb
andb
sub
sahf
fcoms
rclb
jg
aas
arpl
cmc
xchg
iret
or
mov
clc
cmp
dec
xor
into
test
addr16
fiadds
mov
leave
push
pop
les
pusha
int3
in
out
xchg
cli
decl
mov
pop
in
push
mov
pushl
clc
call
andb
inc
xor
out
lcall
and
cs
call
clc
jmp
sub
dec
pop
sti
xchg
test
and
jmp
mov
mov
sbb
repnz
mov
scas
ret
mov
bound
or
lock
or
jmp
jle
imul
aam
xchg
test
lret
xchg
push
mov
lea
sbb
mov
jno
negb
dec
dec
ret
ljmp
sub
lahf
fiaddl
cmpsl
jmp
push
or
lea
push
insl
incl
xor
lcall
jmp
mov
sbb
cmp
mov
out
std
fistps
int3
mov
rcr
lods
lods
shlb
ret
adc
out
xlat
jg
sbbb
pop
mov
mov
dec
scas
add
cmp
xlat
leave
in
adc
jne
mov
pop
mov
les
pop
test
jno
out
jmp
cwtl
leave
inc
lcall
jle
mov
mov
jge
fildl
icebp
mov
push
add
icebp
mov
and
mov
mov
out
jmp
sbbb
movsl
dec
enter
cli
jns
aam
sub
mov
jg
and
cmp
pop
adc
pop
in
adc
pop
mov
fucomip
jnp
test
fisttpll
mov
dec
test
in
pushl
cmp
divl
adc
xchg
xor
jns
call
mov
sbb
mov
popa
adc
mov
or
dec
jo
test
aad
bound
jbe
pop
push
push
pop
push
adc
ljmp
mov
and
fdivrs
ret
mov
dec
xchg
cmp
addr16
lcall
fildl
dec
inc
xor
adcl
cmp
or
sti
add
inc
in
and
xor
enter
inc
test
incl
cmpsb
cmp
xchg
repz
adc
aad
ljmp
idivl
sahf
cmpsl
aaa
mov
sub
outsb
or
dec
call
lods
int
test
pop
repz
idivb
scas
jmp
pop
hlt
or
and
and
mov
jmp
or
stos
das
pop
jl
fdivs
icebp
jmp
shr
or
dec
cld
cmovg
rcr
pushf
sbb
adc
adc
add
inc
cld
push
fimull
jecxz
and
mov
lcall
ret
test
out
ss
mov
cmp
lock
mov
or
inc
mov
scas
icebp
shrl
dec
jg
fsts
mov
and
stos
jno
sub
insl
inc
mov
loop
sub
aaa
movsl
inc
jle
mov
dec
into
cli
lret
adc
xchg
xchg
les
push
xor
ds
sar
xchg
dec
fisubrl
bound
mov
aaa
js
mov
pop
add
nop
mov
mov
sti
inc
mov
sahf
cs
sbb
mov
or
pop
stos
mov
xchg
jge
in
incl
adc
xor
mov
rcll
or
movsb
sti
pop
mov
sub
pcmpgtb
adc
ljmp
call
fdivrs
loop
pop
xchg
cs
inc
sub
loope
mov
sbb
xchg
ret
imul
test
pop
jp
repnz
jmp
mov
movsb
jbe
insb
stos
lret
push
arpl
in
andb
sub
mov
sar
push
ljmp
imul
in
jg
mov
dec
fidivrl
sbb
cmp
mov
mov
dec
pop
out
lods
jl
int
push
push
or
pop
mov
ss
call
cmpsb
enter
xor
jne
cmp
movsb
ret
sahf
mov
ljmp
jbe
mov
inc
and
xchg
sub
xlat
mov
add
xchg
outsb
arpl
add
movsl
dec
adc
enter
cmp
insb
dec
and
call
add
fidivrs
mov
roll
mov
lcall
mov
cli
push
mov
push
fdivrs
sub
ljmp
add
stos
inc
test
aaa
push
stos
mov
xchg
mull
in
leave
call
call
dec
cmc
mov
sub
pop
pop
push
or
jmp
mov
rol
lahf
in
sub
sub
jns
repnz
repnz
outsl
shl
pop
data16
jecxz
and
add
hlt
cmp
mov
or
fdivl
dec
loopne
jl
in
sub
sahf
pop
or
mov
pop
call
leave
mov
cmpsl
inc
mov
pushf
sbb
pop
insb
test
ljmp
lcall
push
cld
cmc
cmp
ret
sbb
jno
jnp
push
scas
dec
lcall
daa
sub
sub
stos
loop
push
push
jmp
jns
sub
aaa
rorl
lds
incl
cmc
loope
xor
adc
pop
xchg
fstps
inc
push
adc
cli
sbb
insb
lcall
cld
push
mov
xor
into
add
mov
incl
call
popa
clc
das
inc
xchg
cmpsb
stos
mov
sti
lret
push
mov
push
in
hlt
jmp
jmp
fidivrs
lret
and
pushf
jno
mov
add
sbb
xor
iret
adcl
mov
repz
jp
fs
sbb
xor
mov
jge
mov
test
shll
arpl
fistpll
cmp
insl
cmp
lea
xchg
jg
lret
mov
roll
outsl
mov
push
jbe
imul
inc
lds
inc
fnstenv
xor
jae
push
inc
and
orl
movsb
jns
mov
cmp
or
jmp
pop
inc
insb
adc
sub
adc
pop
gs
jg
cli
fbstp
mov
movsb
ficoml
mov
lds
pop
gs
xchg
and
add
hlt
bound
lret
aam
add
and
xor
outsl
inc
jmp
jmp
lods
pop
movsl
cli
gs
dec
ret
sub
popf
cmpsb
loop
ds
inc
mov
cmc
cs
ljmp
adc
inc
pushl
sub
jp
lds
test
roll
sub
inc
dec
nop
std
incl
cmpsl
sarl
or
cs
test
inc
jno
cli
pop
mov
or
jae
xlat
mov
decl
cmp
hlt
jbe
sbb
lods
jne
imul
cld
incl
aaa
and
das
negl
in
in
sbb
lahf
and
pushl
and
testl
sub
and
pop
into
dec
pop
jp
pop
call
mov
xchg
sub
mov
out
sbb
jno
sbb
call
stos
adc
out
jp
aas
mov
add
notrack
loop
aad
repz
and
and
stc
adc
ljmp
mov
push
loopne
aas
clc
mov
rorb
sub
cmp
fistpll
xor
ljmp
mov
fcom
mov
cmpsl
cli
mov
dec
jecxz
adc
adc
in
mov
pushl
ss
iret
aad
push
xchg
dec
call
xchg
rclb
xchg
jecxz
cs
lcall
jns
xlat
test
loop
nop
mov
call
ds
mov
jo
fs
inc
jae
cmpsb
mov
pop
out
xchg
les
and
sub
add
xchg
shr
loope
mov
push
mov
ffree
xor
mov
out
scas
je
ljmp
push
loopne
pextrw
sbb
ljmp
inc
and
jg
xchg
mov
sbb
mov
add
pushl
ss
dec
mov
lcall
out
adc
jbe
insl
popa
in
mov
xor
ljmp
scas
push
sahf
cmpb
and
cmp
or
notb
clc
ljmp
lret
inc
out
inc
leave
aam
scas
lods
cmp
int
add
sub
hlt
mov
push
das
int
pop
mov
or
testl
scas
mov
dec
sub
hlt
outsl
stos
fsubl
in
mov
mov
clc
call
cmp
push
and
cld
xor
push
loope
iret
add
int
mov
or
call
das
push
push
jno
test
mov
dec
jle
sti
mov
inc
inc
mov
pop
mov
je
cmp
popa
fwait
fwait
adc
mov
xchg
daa
dec
or
imul
and
js
cmp
jp
sub
pop
adc
and
inc
ja
jmp
push
jg
mov
pop
call
pop
add
in
add
nop
ljmp
rcrl
std
push
sbb
fsubrs
jp
fdivr
mov
mov
loop
mov
jo
scas
add
dec
mov
movsb
adc
mov
lods
xor
jecxz
insl
ljmp
xlat
dec
inc
dec
into
loopne
mov
or
test
or
or
or
jmp
into
test
test
test
loopne
test
jnp
movsb
insb
pop
loope
pop
ljmp
push
cmp
lods
shlb
test
inc
jg
call
mov
mov
mov
mov
add
das
sar
call
out
and
int3
loop
xchg
stos
es
adcb
mov
incl
xor
jmp
mov
cmp
xor
aas
loop
or
dec
decl
fsts
lds
push
sti
jnp
lock
sub
repnz
ljmp
int3
jne
out
sbb
xchg
and
outsl
hlt
lcall
adc
cmp
pop
jp
inc
add
push
sbb
jg
or
lods
pushf
mov
fldt
push
xor
mov
pop
clc
pushl
sbb
adc
in
insb
fistpl
inc
call
int
cmp
fiaddl
pop
aad
pop
andb
loopne
push
stc
xor
ficoms
mov
mov
std
ljmp
inc
cmpsb
daa
mov
lret
stos
mov
into
adc
hlt
and
pop
cli
pushf
imul
push
es
pop
lods
pushf
sub
mov
or
ljmp
mov
cmp
dec
aam
push
mov
and
clc
ljmp
push
and
cmpsb
out
sbbb
dec
add
cmp
jl
ret
pop
and
push
insl
daa
xchg
adc
push
outsl
sbb
jg
pop
xchg
jge
xlat
fucomip
add
js
or
lcall
pop
cmpsl
out
into
and
fldcw
jecxz
clc
ja
add
aad
mov
xchg
iret
call
jg
add
dec
aad
aas
mov
ljmp
mov
lret
ljmp
inc
lcall
in
sub
rorl
inc
outsb
lret
cmp
incl
adc
popf
rclb
pop
in
hlt
lods
fldl
aam
fnstenv
loopne
das
sbb
rclb
std
fistpll
add
or
shll
lods
or
xor
push
push
ljmp
inc
adc
int3
push
pop
dec
push
and
dec
push
call
sub
mov
xor
int
gs
and
inc
jne
mov
hlt
lcall
subb
addr16
cmp
sahf
or
and
push
stos
ljmp
mov
push
repz
jbe
push
popa
push
bnd
push
test
stos
insl
or
pop
fucomip
daa
ret
jp
gs
into
imul
stc
sub
jg
mov
dec
dec
imul
test
cwtl
out
aas
out
decl
std
ror
xchg
nop
xchg
push
lock
test
movsl
xor
call
decl
out
ficoms
iret
push
and
addb
incl
mov
adc
ror
scas
add
int
add
das
lcall
mov
outsl
jge
cmp
ljmp
lcall
xchg
mov
xor
and
test
dec
aaa
jg
add
sbb
ljmp
mov
test
repz
aam
mov
and
and
shrl
icebp
ljmp
mov
sub
jge
xor
push
loop
aad
divb
in
decl
stos
ja
gs
push
scas
dec
inc
mov
ret
ds
stos
gs
dec
sbb
aas
shll
push
xor
es
lods
out
xor
mov
fistpl
or
mov
daa
adc
push
je
outsb
push
fsubrs
ja
hlt
es
xor
hlt
mov
out
mov
push
lcall
imul
out
test
mov
clc
add
popf
icebp
out
xchg
mov
call
xbegin
fstl
in
xchg
iret
negl
adc
fildll
les
or
pop
mov
xorb
fcmovbe
inc
jae
xor
fstpt
xchg
cli
incl
mov
add
ss
fwait
pushf
shl
pop
mov
dec
shlb
rcrb
sbb
aam
in
ja
xchg
lods
cltd
dec
fbstp
dec
ja
in
insl
scas
push
dec
or
enter
cli
insb
cmp
xchg
test
dec
fsts
lea
jmp
decl
movsl
and
adcb
push
cld
insb
ja
div
xchg
push
mov
and
ss
in
sub
je
jge
sbb
dec
int3
stc
decl
mov
adc
fimuls
mov
repnz
xor
lcall
push
push
mov
inc
in
out
mov
add
call
sub
rcr
mov
decl
push
mov
stos
mov
push
push
lret
mov
push
xchg
sti
inc
xchg
xchg
clc
pop
scas
jge
mov
fstps
sub
in
les
lods
call
jns
or
data16
stc
inc
scas
jmp
iret
jne
hlt
sbb
mov
subl
cmp
lock
mov
jecxz
loopne
in
pop
ret
adc
mov
mov
mov
sti
jns
jg
lcall
inc
aaa
sbb
mov
nop
push
xor
stc
mov
lret
cmp
jmp
xchg
xor
push
and
push
hlt
pop
jmp
push
lahf
cmp
ljmp
fld
nop
sbb
rcrl
sbb
int3
mov
inc
lcall
std
cmp
add
pusha
xchg
fimuls
roll
push
mov
dec
aam
aaa
std
cmp
dec
pusha
mov
cmpsb
jmp
ret
cmpl
pop
and
jg
aas
dec
scas
loope
pop
pop
mov
mov
cmp
sti
inc
mov
incl
mov
imul
mov
lcall
stos
xchg
std
cli
mov
and
ljmp
adc
add
imul
test
xchg
cmp
int3
adc
add
cmp
inc
hlt
mov
cmp
insl
dec
cwtl
cmp
aas
outsl
cmp
pushl
inc
or
fcomip
insl
adc
mov
xor
lcall
pushf
hlt
jmp
sub
mov
daa
pushf
cmp
xchg
and
out
xchg
shl
out
loop
call
cwtl
rcll
or
loopne
xchg
or
popf
push
sub
popf
mov
loope
pop
jle
dec
data16
jecxz
sub
cltd
push
sbb
mov
jg
jecxz
inc
inc
loope
cmpsb
loopne
inc
cld
dec
add
pop
int
and
out
pop
xchg
scas
mov
push
cmpsb
adc
add
aas
daa
mov
mov
icebp
pushl
in
js
int3
fadd
xchg
aad
xor
and
jl
mov
push
sti
xchg
mov
orl
ljmp
cld
jmp
aas
test
in
mov
jg
iret
jl
ss
vmread
das
insl
lcall
sbb
pop
cwtl
in
fwait
and
clc
xchg
imul
mov
xchg
out
pop
test
inc
cli
mov
lahf
push
or
loop
pop
das
cld
add
rorl
and
dec
aas
ljmp
xchg
sahf
inc
in
mov
jno
aaa
shlb
mov
mov
cwtl
mov
xlat
loopne
push
pushl
lret
arpl
lods
je
cmpl
sub
jmp
clc
test
cmp
scas
jle
mov
cmp
xchg
test
icebp
cmp
call
rolb
sub
adc
xchg
dec
enter
outsb
or
lret
popa
pop
mov
push
dec
add
and
cli
loope
mov
shrl
lea
icebp
xchg
ja
cld
or
xlat
adc
ljmp
cld
jmp
out
mov
data16
enter
inc
and
negl
loopne
imul
adc
push
or
orb
setle
xchg
sar
mov
popaw
movsl
xor
inc
gs
push
lea
mov
adc
mov
mov
mov
inc
jecxz
int3
lcall
push
jne
stos
push
jbe
scas
push
or
repz
lea
cld
lcall
lret
fucomip
push
xchg
into
cmp
xchg
fs
adc
adc
call
pushl
adc
inc
rcrl
icebp
stos
daa
popf
push
mov
sbb
imul
std
rcrl
std
sub
xchg
sbb
out
cwtl
add
cld
loopne
and
cmpb
loop
xchg
sarb
sahf
mov
sbb
imul
ds
loop
or
fidivrs
lea
cmpsl
add
fucomip
and
lds
lahf
bound
xchg
dec
push
push
arpl
in
pushl
mov
push
sub
test
in
lock
pop
ret
insl
hlt
adc
repz
decl
mov
inc
mov
xchg
lcall
outsl
hlt
fbld
xor
fadds
mov
jae
xchg
dec
cmpsl
divb
jbe
push
jnp
cmp
inc
mov
xchg
push
add
cmp
inc
cmp
cmp
xchg
cwtl
pop
cmc
adc
rolb
mov
je
xor
dec
inc
ljmp
push
shrb
push
cmp
hlt
jne
mov
fsubrp
pushf
or
mov
aaa
cli
jg
push
fs
aad
push
push
enter
and
imul
ret
jne
scas
into
add
or
sbb
call
fxam
push
cmp
sarl
xor
sub
pop
jns
adc
hlt
leave
int3
js
decb
inc
dec
ret
repnz
js
xchg
and
lock
jbe
mov
push
mov
stos
jne
dec
sbb
call
cmp
repz
loopne
out
adc
and
pop
loop
jae
int3
loopne
xchg
imul
or
xchg
cmp
int3
sub
add
jnp
cs
dec
jmp
enter
mov
push
lret
add
jbe
mov
jecxz
cmc
inc
pop
lods
les
jmp
push
call
imul
test
loopne
mov
imul
xchg
test
das
add
xchg
cmp
sub
inc
sbb
adc
cmpsb
scas
lcall
arpl
rcrb
jo
jecxz
icebp
hlt
add
cld
rorb
fists
decl
call
aaa
fdivs
jne
or
push
cmp
push
bound
adc
pushl
cmp
or
xchg
sub
adc
decl
mov
and
add
pop
cmp
mov
lahf
pop
jp
jg
add
popf
and
adc
mov
into
add
fnstsw
call
mov
ja
mov
sbb
adc
ret
push
cwtl
sarl
popa
sti
ljmp
add
sbb
shll
adc
aas
imul
xchg
jp
out
adc
jg
out
addr16
mov
rcrl
add
mov
std
daa
int
mov
jb
add
dec
xorl
or
mov
add
scas
sbb
jg
decl
xchg
stc
std
mov
fs
loope
push
sarb
mov
xchg
jno
pusha
mov
popa
notl
clc
sub
add
decl
mov
stos
mov
aaa
sub
test
inc
jne
imul
sbb
movups
fnstsw
ljmp
rcrb
inc
insb
adc
inc
sbb
and
pop
inc
cmpsb
sbb
leave
sub
aam
decl
lret
lahf
out
cmpsb
fisubs
in
pushf
inc
mov
mov
xchg
lcall
std
push
mov
aam
lret
int
inc
dec
xor
leave
push
ljmp
fsubr
or
dec
mov
mov
neg
add
jg
jmp
pop
ret
jg
mov
pusha
pop
push
adc
jmp
pop
mov
or
fstpl
lret
push
xchg
insb
pushf
es
cld
or
in
aaa
clc
jae
push
pop
stc
mov
sub
xchg
and
add
mov
xchg
jl
lods
mov
cmp
loop
or
push
rcrb
mov
adc
lret
jge
jae
cmpsb
decl
test
imul
lahf
shlb
stos
add
jge
inc
stos
rorb
incl
mov
loopne
add
out
popa
sbb
das
lret
aaa
jle
lods
lods
fnstcw
or
push
xorl
cli
ficoml
push
jecxz
mov
cmp
in
and
aad
das
icebp
incl
sub
pop
cs
es
je
int
std
sbb
push
inc
mov
incl
mov
test
ja
cmp
ljmp
dec
xchg
jne
imul
lock
jge
push
and
xchg
xchg
pop
add
or
decl
dec
push
subb
dec
pushf
cmp
dec
out
xchg
mov
lods
enter
or
loope
jnp
pushl
stc
roll
filds
ljmp
cmc
out
outsl
frstor
mov
sti
inc
pop
les
test
sbbb
and
push
sbb
popa
cmpsl
test
lcall
cmp
cmpsl
mov
sti
pop
mov
out
sub
bound
dec
leave
mov
mov
int3
xchg
mov
addr16
sbb
shlb
and
testb
mov
arpl
pop
adc
jmp
pop
mov
mov
xchg
xor
mov
adc
push
lret
push
gs
aaa
cli
lods
out
mov
sbbb
jnp
call
jno
inc
daa
std
sub
sub
mov
les
inc
lods
jg
iret
sbbb
or
adc
mov
mov
jp
and
mov
dec
pushf
and
loope
mov
xor
and
dec
mov
add
jns
decl
rcl
xor
into
sub
test
inc
add
push
xor
xchg
jg
sub
repz
mov
cmp
lock
pop
les
xor
nop
shrl
sar
mov
test
cmp
push
xlat
xor
xor
mov
xchg
push
add
mov
cmc
dec
sbb
inc
mov
jle
aaa
pop
pop
dec
or
sbb
mov
jbe
mov
mov
or
rol
mov
sub
mov
mov
jg
and
inc
xchg
mov
repz
jp
or
mov
jmp
dec
test
pusha
sbb
mov
lcall
jmp
lock
sar
inc
inc
mov
out
jp
jae
out
idiv
mov
imul
dec
cmp
out
inc
pop
sub
sbb
mov
pop
rcll
fistl
pop
decl
add
into
leave
sub
push
xchg
dec
sbb
mov
pop
popf
std
filds
push
fwait
test
pop
sbb
pop
xor
or
pop
scas
jl
cld
jne
dec
adc
mov
dec
add
clc
or
inc
dec
enter
fcompp
and
daa
rorl
out
add
call
sti
data16
rorl
sub
cmp
test
lcall
mov
sbb
jne
ljmp
push
ds
fmul
mov
cltd
mov
xchg
xchg
xor
sub
sti
dec
xor
mov
outsb
in
mov
and
pop
pop
sub
cmp
xorb
insb
jb
mov
fnstsw
mov
ds
outsb
push
push
pushf
jo
sub
xchg
mov
clc
faddl
popf
scas
and
outsl
xor
pop
inc
call
cli
xchg
ret
dec
push
sbb
push
adc
and
mov
pop
cli
push
daa
cmp
fnstsw
call
or
mov
jne
int
or
dec
mov
lods
pop
cld
jg
and
jno
rcrl
in
mov
call
decl
push
stc
cmc
push
xor
xor
cmp
and
jb
mov
call
sbb
dec
les
jg
inc
lea
sub
push
fimuls
mov
pop
dec
lahf
xor
mov
mov
sar
add
shlb
test
pcmpeqd
adc
cltd
cmp
xor
lods
sub
ljmp
es
jae
rcrb
adc
jg
divb
je
or
das
pushf
pop
xchg
push
inc
jns
incb
push
add
xlat
sbb
jge
cli
pop
std
jg
xchg
aas
inc
jbe
pop
pop
xor
les
insb
adc
enter
orl
xor
xchg
xor
xchg
push
subl
xorb
jle
jb
ss
pushf
jns
mov
push
sbb
lret
jno
test
out
cld
pop
test
and
andb
cmp
dec
fisubs
scas
mov
dec
add
mov
imul
adc
decl
jmp
loope
pusha
push
mov
in
push
lds
cwtl
ljmp
call
or
stos
fstpt
inc
sti
sub
cli
sbb
push
leave
jle
bound
jmp
mov
ret
push
imul
sbb
add
sub
imul
xlat
add
xchg
xor
fstps
insl
call
aaa
stc
push
mov
inc
jae
sub
adcl
js
dec
sub
dec
les
jg
jmp
and
and
xor
push
mov
jg
mov
pop
cli
add
mov
cmc
and
sub
mov
mov
fwait
mov
sbb
clc
iret
mov
xchg
mov
pop
add
mov
je
jno
dec
cmp
nop
popf
cmp
cmpsl
mov
lcall
dec
mov
and
xor
scas
sbb
lcall
aaa
push
jg
hlt
lcall
ds
pop
icebp
xorl
imul
aaa
add
loopne
test
mov
mov
mov
push
movsl
decl
loopne
stos
sar
ljmp
cmp
cwtl
jne
dec
jb
adc
daa
fstpl
sub
pop
out
mov
mov
call
inc
jb
leave
insl
mov
sub
frstor
xor
lret
out
cmpsb
adc
rep
lock
mov
jle
insl
xchg
sar
call
mov
dec
aaa
dec
and
xor
mov
ficomps
lock
sbb
mov
sub
ficompl
lcall
cld
decl
inc
in
and
lea
pushf
sub
fildll
hlt
fbld
leave
pop
pop
push
mov
push
jecxz
adc
mov
mov
pop
adc
in
test
fwait
jmp
mov
dec
fisubl
call
xchg
fmulp
daa
or
mov
ficompl
mov
sub
incl
sbb
adc
fldcw
inc
dec
fwait
sbb
in
ljmp
xorb
ja
jne
inc
lea
mov
cli
jmp
inc
xchg
adc
inc
xor
jno
in
inc
int
daa
or
xchg
add
cs
aaa
clc
test
pop
sbb
mov
add
call
addr16
movsb
or
repz
sub
fcom
xor
push
mov
bound
hlt
mov
fldcw
push
mov
dec
and
test
mov
push
pop
lcall
mov
std
shlb
mov
stc
and
clc
jno
mov
ljmp
push
repnz
inc
andl
leave
jbe
rcrl
sub
sub
pop
or
ret
sub
dec
leave
cmpsb
mov
cmp
jg
fwait
jb
mov
xor
mov
cmpsb
decl
fistl
out
ret
mov
js
ljmp
dec
iret
cmc
out
and
sbb
push
lcall
dec
cmp
lcall
cmp
testl
jg
andb
in
sbb
add
arpl
ljmp
add
fidivrl
xchg
popf
iret
pop
in
insb
mov
sar
lcall
mov
push
nop
xchg
rorl
xchg
mov
arpl
xchg
cli
lcall
sarb
out
cmpsl
pop
test
add
in
push
push
incl
fildll
cli
or
das
in
and
cmp
mov
adc
aaa
movsl
mov
add
adc
pop
rorb
movsl
inc
push
sbb
mov
jmp
ljmp
adc
add
mov
mov
rcll
lcall
add
pushf
pop
loopne
loop
jge
jp
jmp
mov
add
call
repnz
mov
fnstcw
cmp
lods
push
xor
push
pushf
incl
or
iret
cmp
sbb
pop
dec
mov
inc
mov
dec
clc
mov
enter
adc
xlat
loopne
fdivs
in
sub
or
pop
clc
mov
sub
cmp
sbb
pop
hlt
add
mov
fldt
lcall
xchg
push
cmp
and
jne
aaa
cmpsl
xchg
fmuls
decl
mov
xor
arpl
loope
nop
rcrl
lds
dec
inc
das
jg
xor
sub
push
push
imul
or
mov
out
push
stos
add
mov
mov
mov
push
push
or
dec
outsb
mov
mov
pop
cli
decl
cmp
xlat
jmp
mov
fsubs
or
andl
lret
mov
loopne
in
lods
outsl
std
decl
ret
fistl
push
mov
lea
push
jb
aad
lcall
add
mov
adc
and
jmp
mov
stos
fnsave
popl
jmp
push
xchg
jp
inc
repz
outsb
cmp
cmp
dec
cld
dec
push
push
mov
push
mov
dec
insl
stos
imul
xchg
lea
mov
jg
cmp
lcall
adc
xor
stos
inc
out
xor
and
or
outsl
std
pushl
popa
jecxz
jo
mov
iret
sub
push
xchg
lcall
mov
stos
mov
ja
shlb
cltd
mov
sub
add
mov
inc
pushf
push
movsb
push
int3
mov
lret
push
addr16
mov
lcall
je
pop
aas
lcall
pop
mov
addr16
ficoml
jmp
addl
ds
call
idivb
das
sbb
cmpsb
or
outsl
cmc
incl
and
test
pop
dec
xchg
leave
fxch
push
nop
pop
adc
dec
popa
xor
add
shr
cli
fistpl
xchg
inc
mov
push
push
rcr
inc
andb
mov
cwtl
cmpsb
pop
jg
add
popa
inc
cmovle
fwait
pop
test
fsubrl
scas
das
icebp
popa
les
push
mov
cmp
adc
mov
out
loopne
sahf
cmp
jo
aad
lods
insl
lea
jb
cli
dec
imul
inc
ss
dec
jno
xchg
mov
scas
xorb
sbb
scas
push
sbb
and
mov
ret
sti
push
adc
adc
call
cld
incl
pushf
in
sub
in
cmp
ret
push
popf
jae
roll
dec
loope
cltd
aaa
xchg
ss
inc
js
or
pop
fsubrl
movsl
xchg
push
jg
mov
jg
lret
nop
sub
fldz
dec
inc
fsubrp
ljmp
inc
xor
call
adc
jb
repnz
add
aas
mov
push
mov
jmp
cmp
popf
or
or
mov
test
jmp
jg
push
dec
pop
mov
fnsave
stos
sbb
xlat
call
loopne
xchg
insb
dec
mov
ss
push
fldpi
sub
push
loop
cli
push
sub
js
dec
xchg
outsl
popa
lock
lods
and
mov
shr
sbb
das
cld
pushl
dec
or
test
popa
imul
loop
and
stc
pop
mov
mov
andb
shlb
jg
pop
test
push
xor
pop
jmp
lea
mov
jg
inc
xor
bound
adc
push
mov
push
push
loop
jns
cmp
sbb
movsl
int3
ljmp
fildll
add
xlat
jo
add
scas
test
insb
sub
or
lahf
incl
add
pop
fstp
insl
test
cli
push
mov
pushl
inc
lods
lea
ja
pop
iret
test
lea
cld
scas
push
xchg
imul
mov
push
repz
and
icebp
imul
sbb
ret
push
sbb
into
xor
push
inc
orb
ret
pop
jecxz
popa
mov
ds
cmpsl
test
push
ljmp
in
pop
xorl
sub
dec
popf
insl
dec
xchg
mov
xor
push
jno
out
rolb
icebp
jg
scas
sarl
cmp
ss
into
call
ficoms
push
jnp
mov
dec
xchg
xchg
mov
jns
cmpb
stos
add
add
pop
mov
and
push
xorb
shr
out
adc
stos
fnstsw
and
add
lea
lret
loopne
push
mov
icebp
decl
std
push
imul
sahf
push
jge
jnp
shrb
clc
das
sub
fs
mov
push
jl
xor
orl
repnz
dec
loope
lds
jno
call
cmp
cmp
dec
pusha
cmp
and
call
adc
dec
out
mov
pushl
jns
aad
mov
rorl
mov
mov
push
fisttps
xor
decl
sub
jp
leave
faddl
cmp
loop
push
and
sub
push
call
mov
xchg
push
imul
xor
mov
cli
pop
loopne
jl
sub
movsb
in
jo
xor
push
sub
bound
add
fbstp
mov
cmp
ror
mov
xchg
and
in
mov
loop
push
outsl
cld
cltd
ja
mov
dec
jmp
aaa
xchg
loope
and
ljmp
dec
push
push
cltd
jno
jb
in
cmpsb
mov
cwtl
stos
push
pop
decl
cld
xchg
inc
loopne
andl
dec
mov
jg
xchg
pop
ret
rcrb
sub
and
xor
cmpsb
shlb
icebp
mov
xor
inc
dec
adc
aam
xchg
inc
bound
scas
ljmp
fdivs
cld
xor
dec
xchg
sbb
loopne
adc
fisttps
xor
xor
ljmp
decl
add
lea
insl
adc
mov
jg
xlat
call
cmp
cltd
xchg
arpl
push
popf
stc
pop
inc
push
xchg
rol
dec
jg
lcall
inc
adc
out
pop
out
adc
mov
and
aaa
insb
mov
lcall
fidivs
icebp
scas
jg
jae
pushl
push
inc
jbe
xchg
xchg
mov
mov
shlb
aad
add
fldt
jp
es
ss
cmpsl
stos
xor
in
test
dec
jae
call
mov
mov
stos
ret
and
call
filds
cmpl
adc
incl
int3
sub
outsl
pop
sub
js
cmpl
adc
mov
call
xchg
cmp
popa
mov
fisttpl
sar
incl
shll
aaa
or
adc
pusha
pop
mov
incl
mov
jo
pop
jbe
shrl
xchg
jmp
pop
sbb
movsl
inc
mov
dec
xlat
daa
xchg
loope
lret
dec
push
lcall
adc
add
add
adc
lock
std
jg
push
and
lret
push
jl
and
cwtl
stos
aad
push
aad
loop
call
ss
xor
sarl
add
dec
jbe
sbb
pop
out
jmp
add
push
pushf
ja
lds
incl
int3
les
add
decl
inc
pushf
in
inc
jmp
mov
adc
lahf
xchg
aam
hlt
push
adc
jne
adc
and
lock
mov
dec
aad
jge
clc
jg
and
cld
xorb
sub
lods
mov
ljmp
xor
fstpl
jbe
xchg
jb
xchg
out
mov
nop
in
xchg
repz
pop
pusha
das
icebp
mov
testl
jno
add
movsb
ja
test
es
sbb
add
lds
dec
sbb
inc
mull
pop
mov
mov
leave
push
xchg
dec
out
jl
pop
push
stos
add
arpl
adc
call
je
mov
or
sub
les
decl
add
jno
push
dec
mov
pop
aad
data16
bound
push
mov
lret
movsl
inc
incl
rorl
push
enter
pushf
andb
xchg
dec
add
mov
addr16
xor
inc
sub
jmp
inc
in
test
imul
xor
std
or
decl
mov
xchg
xlat
pop
fsubp
xchg
aaa
dec
or
ljmp
xchg
mov
loop
adc
sti
cltd
cmpsl
popa
push
add
sbb
das
push
in
dec
push
cwtl
into
push
rorl
and
push
ljmp
or
sahf
lock
nop
leave
lahf
ffreep
mov
push
mov
mov
jno
lahf
daa
cmovp
jmp
in
test
cmp
cmp
scas
sbb
outsl
cltd
mov
pop
mov
sar
ljmp
mov
leave
mov
stos
fstpl
cld
or
adc
lret
ja
mov
inc
pop
or
and
mov
mov
push
add
bnd
adc
decl
push
or
mov
in
inc
mov
mov
aaa
push
repnz
loope
and
out
dec
flds
stos
xchg
test
push
decl
ljmp
mov
imul
arpl
call
cmp
pushf
repnz
cmc
jmp
mov
movsb
stc
sbb
les
arpl
or
xchg
jbe
or
sub
pushf
sub
clc
xchg
add
stos
and
adc
repz
cmp
lods
sub
mov
lds
rorb
sbb
pop
push
adc
pop
add
inc
call
lods
mov
add
lahf
fstl
adc
jns
xor
mov
fisubrs
stc
cmc
inc
das
outsl
inc
jno
call
xor
or
iret
and
xchg
cmp
imul
lcall
push
xchg
mov
scas
push
adc
pop
inc
push
adc
push
outsl
int
cmp
call
push
popf
test
cmpsl
cmp
cpuid
in
test
outsl
mov
loopne
sti
ret
std
xchg
stc
mov
std
bound
jb
xchg
rcl
mov
sarl
fistpll
xchg
movsb
outsl
icebp
lret
mov
aaa
mov
sub
cltd
sbb
lods
sub
push
xor
pop
dec
pop
imull
adc
jb
mov
enter
mul
inc
in
std
decl
mov
inc
test
sbb
jnp
scas
arpl
hlt
jg
int
ljmp
test
stc
push
incl
or
push
push
in
push
or
inc
sbb
cs
call
inc
in
push
add
out
lret
loope
xchg
mov
arpl
mov
pushl
or
xchg
daa
test
pop
jmp
loope
add
test
cld
out
in
jle
sbb
loop
pop
adc
int3
daa
jp
je
add
inc
jl
dec
mov
mov
jns
and
and
stos
call
sub
xchg
xor
lcall
mov
dec
mov
in
dec
jb
and
pop
in
jmp
icebp
loopne
and
fdivs
mov
enter
loopne
lcall
cmp
sub
incl
ljmp
mov
inc
xor
add
shrb
sub
sti
movsl
and
mov
icebp
pop
clc
mov
mov
xchg
popf
cmp
in
mov
xchg
loope
ljmp
hlt
fsubs
std
jge
jmp
gs
icebp
sbb
rolb
dec
xor
std
mov
push
rolb
lods
mov
mov
lcall
pop
mov
sub
es
push
fcomp
pop
lcall
fsubl
adc
test
push
imul
inc
iret
jno
pop
clc
call
cltd
dec
cmpsb
out
lcall
jae
xor
xchg
mov
push
dec
mov
es
xor
fucom
cld
inc
mov
dec
js
jmp
and
cwtl
mov
inc
loopne
and
push
mov
sarl
pop
and
push
or
lcall
std
mov
xor
xor
inc
mov
jle
mov
sub
jg
add
inc
xchg
add
fbstp
cmp
pushl
mov
xor
int3
lock
test
xchg
or
decl
mov
jae
shrb
fcomp
js
aam
ss
nop
cmp
adc
jg
cld
lcall
jmp
mov
mov
ret
adc
fucomip
mov
sub
fldcw
sbb
aas
outsl
icebp
call
xor
push
stc
pushl
jle
or
jo
sbb
jg
pushf
cs
popf
inc
mov
sbb
mov
incl
call
cmp
and
push
sbb
inc
lahf
inc
xchg
loope
push
test
jns
sahf
push
mov
rclb
cs
xchg
push
xor
push
popf
lcall
sbb
sbb
or
test
dec
pusha
jg
mov
pushl
test
mov
leave
scas
xchg
sarb
outsb
inc
cli
call
insb
cwtl
ror
scas
ret
je
pop
jns
adc
jbe
pop
shrb
pop
add
aaa
cld
hlt
adc
jp
popa
xchg
repnz
ret
aas
xchg
jns
adc
fpatan
sub
cmp
xchg
incl
xchg
and
call
sbb
fbld
aas
jns
jno
dec
adc
je
fs
mov
es
and
dec
sub
in
pop
fisubs
mov
push
cmp
sar
adcl
sbb
cld
imull
fmulp
sti
frstor
pop
incl
fildll
scas
mov
mov
lcall
jmp
sbb
outsb
mov
ret
dec
push
xchg
push
jno
push
add
sbb
arpl
add
sbb
call
fists
sbb
mov
dec
imul
cld
jne
mov
ljmp
test
cmp
lds
pop
add
pop
dec
ss
jge
ds
sarl
sti
mov
mov
xchg
pop
add
pop
pop
inc
sahf
cmp
jl
fucomip
jmp
add
jne
push
push
push
sbb
sbb
and
call
adcb
jns
data16
imul
push
test
push
test
xchg
mov
mov
mov
mov
pop
stos
push
cmp
xchg
jg
aam
inc
repnz
decl
jno
push
pusha
cs
sar
cmp
or
jge
mov
push
test
das
and
xchg
stos
divl
mov
dec
xchg
or
lds
movsb
sbb
rcrl
pushl
xchg
push
push
mov
xor
dec
incl
rcr
lcall
cmpb
arpl
sbb
movsl
aaa
or
mov
lahf
aad
fcmovu
xchg
jp
inc
adcl
loop
ljmp
push
dec
lret
xchg
popa
and
cmp
mov
mov
sub
out
xchg
cwtl
aam
ss
pop
mov
fcoml
or
sub
outsl
mov
mov
mov
emms
int3
dec
call
xchg
out
test
ljmp
cwtl
popl
jg
hlt
jae
cld
movsl
jne
pop
sahf
sbb
outsl
mov
sbb
fwait
sub
inc
movsl
pop
movsl
lret
call
jmp
xchg
cmpsl
lds
mov
xchg
std
mov
mov
dec
sbbb
lret
push
mov
nop
mov
jecxz
shr
icebp
outsl
mov
jecxz
arpl
aas
rolb
adc
push
inc
loope
fwait
sahf
out
test
xor
add
jmp
or
cmc
jne
inc
and
enter
push
pop
pusha
pop
push
int
sub
jns
aaa
cli
lcall
mov
inc
ss
mov
jnp
add
jg
inc
in
sbb
add
pop
ucomiss
xchg
dec
push
les
icebp
adc
sub
jbe
xchg
cmp
pusha
ret
aad
pusha
aas
push
test
sti
jg
call
mov
sbb
popl
push
call
nop
rol
int
daa
push
icebp
fisubl
mov
lcall
push
cmp
das
sbb
mul
inc
sahf
cmpsl
cmpsb
sarl
push
and
mov
enter
push
dec
xor
add
repz
jle
jmp
dec
mov
or
and
mov
sahf
mov
sarl
clc
popf
fs
add
dec
inc
mov
and
mov
push
mov
mov
dec
push
cmp
jbe
popf
sub
scas
adc
mov
jge
fildll
into
inc
xor
pop
xor
inc
or
inc
push
inc
std
incl
jne
in
roll
int3
js
xchg
or
out
movsl
xchg
mov
outsl
mul
push
mov
xchg
lods
and
jg
xchg
ja
jnp
xchg
xchg
inc
out
addr16
inc
lock
dec
adc
clc
hlt
mov
inc
getsec
pop
add
fs
adc
mov
jg
decl
clc
aam
cwtl
jns
cmp
outsl
mov
test
test
outsl
loopne
dec
cld
mov
mov
jmp
in
dec
lret
loop
jle
es
lcall
stc
cmc
inc
pop
push
fdivrl
push
dec
int
dec
mov
sub
sarl
pop
dec
testb
and
jnp
cmpsl
popf
rorb
frstor
in
lods
pushf
or
mov
pop
aad
pop
add
mov
incl
lods
cltd
fisttpl
xchg
loop
sahf
mov
lret
cld
ljmp
push
movsl
cmp
add
add
push
add
jge
sbb
std
lcall
inc
ds
adc
arpl
lahf
shll
xchg
mov
ss
pop
sub
dec
ret
icebp
into
decl
adc
movsl
out
adc
test
xchg
xchg
es
fdivrl
fisubs
call
inc
mov
cmp
clc
int
enter
fnstsw
add
adc
lahf
stos
adc
or
jno
jbe
xchg
sar
jg
cmp
push
ja
or
mov
ja
icebp
aaa
mov
push
js
or
lahf
or
mov
ljmp
sub
scas
and
cmpsb
or
jne
notl
inc
mov
push
lcall
sub
les
xor
scas
mov
movsl
iret
shll
jmp
push
je
dec
and
lahf
in
and
pop
leave
shll
movsb
or
jne
pop
xchg
jg
jmp
inc
fnstcw
imul
stos
jns
pop
dec
sbb
imulb
dec
sub
push
es
or
insl
push
pop
test
dec
cmc
std
aam
push
xor
ljmp
sbb
insb
faddl
out
cmp
sbb
incl
cli
loop
insl
jnp
rcrl
cwtl
incb
cld
push
out
loop
lcall
jl
inc
push
jg
lds
iret
test
inc
mov
sbb
mov
mov
clc
mov
and
shrb
cmp
div
in
jae
pop
mov
insl
pop
cmp
iret
xchg
or
sti
mov
push
call
lock
mov
sub
test
shlb
frstor
inc
jecxz
lcall
insl
scas
inc
iret
ljmp
inc
cmp
in
mov
gs
outsl
jg
jmp
jle
ret
mov
push
in
in
bound
dec
andl
add
cwtl
dec
rclb
pushf
pop
cmp
and
pop
mov
icebp
insl
ffreep
pushl
repnz
mov
inc
into
pop
mov
imul
sub
mov
lret
in
mov
adc
adc
mov
das
gs
lahf
mov
notb
jg
jmp
lods
shr
sahf
enter
gs
shl
das
fmull
in
shll
jnp
fnstsw
pushl
jg
add
scas
pop
add
jne
mov
lcall
adc
mov
lock
sbb
add
sbb
decl
scas
and
and
fs
jmp
cmp
cmp
add
out
jg
lcall
add
lret
jle
gs
arpl
or
shrl
mov
incl
roll
pop
adc
lods
lret
into
out
mov
mov
call
jg
xchg
mov
addl
fimuls
jae
xchg
int3
jae
decl
insb
std
orb
mov
int
pop
add
test
mov
lcall
cmp
jne
ret
imul
shrb
mov
imul
loopne
push
popf
test
cltd
mov
cmpsb
pop
cld
decl
xlat
or
mov
or
icebp
and
sub
adc
add
mov
orl
aaa
xor
jno
or
inc
movsb
sub
pushl
add
sub
ret
cwtl
scas
imul
call
mov
cmp
cltd
lock
and
sbb
scas
dec
int3
xchg
outsl
cmc
jg
push
adc
xor
xchg
arpl
xlat
and
incl
mov
pop
data16
and
out
hlt
cmp
cmp
cli
ljmp
sbb
in
imul
int
cmp
push
and
cmpsb
cmp
dec
and
clc
cli
jl
das
pop
mov
pushl
int3
lock
shll
cmp
jae
dec
in
jae
je
mov
pushl
jmp
aas
popf
je
cmp
repz
mov
incl
fidivrl
pop
aaa
mov
shlb
pusha
mov
sti
popa
out
mov
push
xchg
dec
push
call
add
xor
mov
leave
ss
mov
adc
push
pop
cli
incl
push
lahf
shr
test
cmp
test
das
cld
adc
pop
pop
jl
andl
je
push
cmpsl
imul
test
xor
dec
inc
cmp
jae
push
push
clc
jg
dec
cld
test
les
cmpsl
pop
out
enter
or
cltd
xor
pop
mov
filds
mov
ret
aam
pop
icebp
pop
mov
fwait
mov
outsl
icebp
mov
or
bsf
xor
jne
lods
cwtl
mov
push
jo
push
inc
or
xor
xchg
lcall
cmp
out
scas
mov
jmp
cld
aad
fimuls
out
dec
mov
icebp
out
lret
push
sub
pop
adc
xor
mov
jg
mov
insb
sub
mov
mov
adc
decl
movsb
in
xchg
sub
push
cmc
outsb
sub
and
movsl
pushf
add
jg
mov
sbb
push
mov
xor
cli
incl
pop
xchg
jno
out
arpl
test
fwait
xchg
xlat
adc
lock
insl
popf
dec
sub
fstpt
call
xor
jbe
paddq
sub
xor
icebp
lds
sub
jg
call
call
call
cld
loopne
jns
jg
sub
push
pushl
scas
mov
out
insl
shlb
jle
aas
xchg
shll
jno
jb
jnp
and
bound
jnp
jl
cli
aad
loope
xchg
imul
les
cli
xchg
lret
fsubl
std
incl
mov
jae
pop
xchg
les
aas
shrl
ret
inc
ljmp
sub
xor
shrb
fnstsw
or
in
mov
test
addr16
cli
incl
add
sbb
pop
outsl
rcr
jg
loopne
test
mov
loop
loope
test
cmc
lcall
push
xchg
mov
movsb
cmp
fnstenv
roll
dec
stos
jle
call
lods
sbb
jmp
hlt
out
loopne
fsub
in
decl
loop
cltd
mov
sbb
aad
cmpb
test
outsl
lock
pop
repz
mov
sub
mull
scas
push
roll
iret
or
fnsave
cmp
pop
lret
cmp
movsb
adcb
incl
dec
mov
inc
xchg
lret
jl
sbb
fs
les
jp
lods
cmp
jmp
je
mov
add
adc
dec
push
pushl
stos
data16
das
rclb
inc
dec
dec
jbe
insl
mov
cmp
mov
ljmp
pop
loope
xor
mov
jecxz
inc
inc
xchg
sbbl
cs
push
fdivs
call
mov
pop
aas
mov
cmp
pop
sar
rcrb
or
ljmp
jo
jo
push
mov
incb
and
scas
cmp
das
mov
and
in
mov
rolb
frstpm(287
ja
add
ja
push
int
add
mov
repz
mov
push
daa
in
rol
fucomip
pushl
es
roll
jnp
out
jl
jge
push
test
mov
out
je
dec
mov
imulb
popf
adc
sub
or
or
ds
incl
ljmp
pop
loopne
lret
adc
adcl
or
scas
cmc
enter
cmp
adc
cmpl
stos
ficompl
push
pushl
rcrb
movsl
stos
and
loop
pop
jmp
loop
shll
ljmp
or
mov
outsl
mov
jne
pop
push
std
lcall
dec
std
dec
aaa
fiadds
lret
xchg
cmc
cmp
cltd
fists
mov
icebp
int3
mov
xchg
pop
ds
jo
aas
mov
mov
ja
push
add
push
call
xlat
lea
fs
xchg
mov
mov
push
scas
insl
bound
std
decl
cmp
in
jo
push
add
fadds
adc
movsl
decl
fistps
out
push
or
push
scas
mov
add
incl
jge
pop
mov
lret
imul
clc
stos
or
inc
sti
rorb
loope
push
ljmp
movsl
or
and
mov
mov
jmp
sbb
call
xchg
mov
jmp
call
push
popf
test
pop
in
mov
hlt
push
call
dec
cld
mov
lret
xchg
xor
iret
mov
push
bnd
lcall
out
lret
dec
pop
pop
pusha
push
sahf
test
dec
mov
outsl
fs
ljmp
incl
scas
add
mov
ds
push
inc
sar
jmp
sbb
jmp
xchg
scas
repnz
pop
add
jns
jp
test
cltd
daa
decl
xor
mov
or
stos
decl
cld
jmp
cmp
jb
ljmp
mov
add
and
jmp
xor
mov
pop
mov
daa
add
fistl
jmp
faddp
sti
ds
iretw
lods
es
jg
add
mov
jg
ja
adc
mov
inc
pusha
mov
pop
mov
mov
or
subb
clc
ljmp
cmc
mov
jmp
jmp
cli
cld
stos
fxsave
and
jmp
adc
test
fwait
push
add
lods
mov
pop
lcall
push
mov
mov
sub
in
cmp
cwtl
add
inc
decl
out
mov
ret
add
ja
outsb
xchg
pop
clc
in
xchg
sbb
mov
mov
incl
psubd
or
lret
test
cmp
mov
add
call
rorl
xchg
enter
aam
mov
cwtl
jnp
mov
sub
jmp
cwtl
lcall
addr16
cmp
jo
stos
pusha
pushf
cmp
mov
add
lods
sub
sbb
fisubl
lret
cmc
mov
jle
mov
repnz
cmp
jge
cmp
fcoms
adc
movsl
mov
pop
movsl
ficomps
fisttps
rorl
xchg
mov
inc
jns
adc
call
adc
sub
jle
cmpsb
mov
lods
sbb
insb
xchg
ret
aam
repz
lcall
inc
sbb
or
dec
fs
mov
pushl
xlat
sbb
push
cmpsl
xor
addr16
bnd
lret
sub
clc
lret
or
push
in
cmp
mov
inc
stos
fdivl
in
or
jo
or
xor
test
push
cmp
insb
fnstsw
cmp
mov
cmpl
jg
and
jbe
cmp
xchg
dec
mov
xor
fildl
lcall
js
mov
into
xchg
setne
aas
mov
adc
loopne
inc
xor
pop
aam
int
pop
sbb
pop
aas
lahf
fs
insb
xor
jmp
fistpll
sub
xor
arpl
pop
testb
cli
outsl
sub
cld
mov
fxch
mov
sbb
dec
je
sahf
aas
ljmp
sbb
in
enter
xchg
out
mov
jcxz
addl
lea
jg
inc
into
fmull
add
push
pop
scas
pop
add
fs
pushl
mov
xchg
xchg
aas
sub
stos
add
ret
fldcw
icebp
xchg
sbb
incl
cmp
push
loopne
into
cmp
mov
dec
push
mov
test
xchg
stos
sub
add
out
call
sbb
push
imul
xor
jp
faddl
mov
stos
stos
roll
xor
lahf
call
lods
mov
test
jl
shll
jns
aaa
ljmp
rorb
mov
je
lcall
and
insl
ja
mov
fiadds
ret
inc
inc
xchg
call
cli
mov
arpl
mov
sbb
and
jmp
xorl
push
imul
push
add
mov
xchg
shlb
out
and
call
lret
loopne
push
mov
idiv
xor
stc
pop
in
sub
popf
sub
pop
popf
adc
sub
enter
cltd
sti
sbb
xor
mov
loop
incl
mov
push
cmp
out
xor
add
sbb
movsl
add
sub
call
pusha
xor
lea
mov
pop
leave
xor
mov
jno
push
aad
out
cmp
dec
pop
repnz
cmp
and
dec
adc
or
insl
icebp
fsubrl
mov
and
lds
jmp
mov
call
pop
call
inc
nop
mov
add
and
push
shlb
data16
mov
clc
pop
shl
mov
xchg
mov
xchg
ret
stos
call
out
add
out
enter
or
sti
inc
test
xchg
stos
aaa
repnz
addl
cli
aaa
inc
and
movsb
ret
fucompp
mov
mov
std
js
decl
mov
adcb
mov
jecxz
dec
or
push
ljmp
stc
push
shrl
inc
sub
and
roll
repz
mov
lret
outsl
lahf
mov
decl
dec
mov
xchg
mov
sub
sbb
jmp
jns
cld
pop
test
mov
mov
ljmp
adc
call
sti
sub
arpl
int
xor
repnz
call
sub
sub
lret
paddsb
imul
add
dec
jmp
mov
cltd
jbe
adc
adc
mov
mov
call
xchg
and
xlat
mov
jge
and
cli
in
adc
loop
lret
dec
dec
sub
push
lret
adc
mov
movsl
jp
add
push
leave
loop
mov
mov
out
lcall
pop
sbb
or
jmp
and
rcl
pusha
mov
call
dec
lods
test
jne
in
sbb
mov
mov
inc
into
movsl
mov
mov
add
add
pusha
push
push
ficoml
sub
ds
gs
incl
push
xchg
ljmp
sub
dec
aaa
adc
in
pop
sar
push
ljmp
xchg
xchg
jmp
dec
mov
dec
jl
inc
pop
dec
adc
outsl
js
jae
mov
xlat
xchg
ljmp
ret
ret
out
lcall
mov
cmp
mov
adc
fs
pop
pop
pop
rol
dec
or
pop
dec
jmp
shrl
outsb
filds
inc
in
inc
xchg
sbb
addl
mov
test
movb
sbb
jg
loope
sub
ret
test
xchg
movsb
or
pushf
xlat
hlt
sbb
mov
jmp
dec
sbb
pop
mov
sahf
scas
push
push
xchg
and
cs
sti
int3
mov
jmp
in
fisubl
jp
mov
mov
jp
and
mov
cwtl
sub
lret
and
mov
mov
or
pop
sub
mov
ss
add
sbb
inc
jg
xor
sbb
jnp
mov
scas
push
mov
pop
shrb
ss
pop
ljmp
xor
push
mov
lds
lret
cmp
mov
mov
stos
mov
fidivl
or
movsb
popa
lahf
je
mov
push
and
jmp
std
mov
push
push
std
or
addl
aaa
or
les
icebp
jle
cmp
push
mul
dec
mov
lahf
cld
sti
mov
or
fwait
add
fadd
cmp
pop
lock
cmpsl
xchg
and
pop
adc
jg
inc
jae
test
sti
cs
pop
xchg
sbb
or
call
pusha
stos
inc
lahf
loope,pt
jnp
aaa
cmp
nop
jp
adc
xlat
pushf
and
enter
cmc
adcl
popf
cwtl
xchg
cmp
mov
jmp
loop,pt
lret
jle
into
enter
mov
ret
push
sbb
testl
xlat
and
stos
mov
jmp
xchg
cli
ds
cltd
sbb
add
lahf
xor
cmc
or
imul
cli
mov
or
adc
jne
in
ja
cmp
pop
decl
pop
loop
mov
cmp
lret
sub
scas
xchg
mov
fucomip
lcall
adc
movsb
shl
jo
fsub
aaa
cs
inc
jb
mov
mov
clc
ljmp
sbb
call
jg
stos
fwait
ss
mov
xor
cmp
inc
or
loope
std
pushl
data16
cmp
movb
fwait
bound
lods
adc
or
and
call
outsb
add
dec
mov
ljmp
ljmp
in
neg
lods
push
sbb
xor
xchg
lret
inc
lea
pop
icebp
out
bound
pop
je
dec
inc
fisubl
jnp
vmaxsd
sbb
fmuls
jecxz
adc
jge
jecxz
mov
imul
leave
test
xor
stc
insl
scas
enter
mov
add
add
daa
sbb
mov
sub
lcall
push
lahf
and
lea
xor
dec
test
in
sub
jg
aaa
pop
adc
cmp
test
sub
push
mov
mov
inc
negl
adc
decl
adcl
cltd
in
loop
mov
cltd
dec
inc
add
jmp
das
hlt
stc
shrl
out
push
dec
mov
xlat
adc
data16
push
mov
ret
xchg
pushf
lods
icebp
adc
ds
add
push
enter
inc
insl
inc
sbb
call
daa
and
jmp
and
daa
pop
push
movsl
ds
outsl
hlt
pop
xchg
std
ljmp
and
in
push
mov
cltd
pop
xor
ljmp
enter
mov
xor
lods
jb
pop
iret
jb
xchg
ss
xchg
xor
and
cmp
aas
dec
je
mov
incl
call
scas
mov
bound
push
andps
mov
mov
int
add
lcall
std
jl
imul
sub
xchg
decl
mov
insb
mov
jmp
call
jbe
int
sar
or
bound
loopne
bound
cmp
fldt
sub
idivb
ljmp
es
sub
shlb
orb
shlb
push
push
sbb
imul
add
inc
or
jnp
cltd
inc
and
xchg
sbb
mov
pop
cli
outsl
sbb
mov
test
ret
out
icebp
push
and
push
cld
sub
cmp
call
ja
out
mov
ss
andb
sbb
test
cmp
fildll
xorb
sar
dec
inc
dec
insl
jns
lods
movl
push
inc
adc
cmp
inc
les
out
into
cmp
cmp
lcall
inc
push
cld
and
call
pop
mov
out
mov
xchg
out
and
dec
aaa
jne
loop
fisubrs
rcll
movsl
std
decl
std
cmpsl
les
inc
cmp
out
fs
pushf
mov
ljmp
nopl
icebp
add
movsl
call
pop
iret
adc
pop
cli
shl
jae
inc
jp
adc
cmp
movsb
mov
sub
sbb
push
inc
out
mov
inc
mov
jp
push
jg
xor
roll
popl
jp
sti
jg
mov
test
aaa
add
movsb
push
cmc
push
icebp
ljmp
fcomps
arpl
mov
push
and
lods
xchg
icebp
xchg
push
rcll
dec
daa
es
nop
xlat
int3
and
aaa
aad
mov
aaa
sti
lock
sbb
push
loop
cmpl
sub
adc
repz
xchg
jnp
inc
enter
mov
lcall
sub
dec
rcrl
fstpt
shl
imul
jne
push
mov
dec
sti
cmp
push
dec
push
adc
push
pop
pushf
fcoms
stos
xchg
stos
in
outsl
lock
xchg
lahf
repnz
in
jb
and
xchg
outsl
outsb
mov
ret
sub
push
add
xchg
or
js
pop
mov
lcall
sbb
outsl
mov
mov
popa
adc
enter
mov
enter
inc
adc
sti
lds
sti
jnp
pop
dec
mov
mov
aas
xlat
pop
test
push
enter
cltd
stos
dec
imul
adc
das
or
jle
mov
push
jp
cmp
or
loope
sahf
lds
in
orb
push
outsl
mov
jp
push
sbb
jns
cmp
dec
pop
lods
xlat
pushl
xor
push
push
fwait
incl
add
arpl
cmpsb
jl
popf
test
mov
aam
repnz
outsl
incl
addps
insl
es
dec
mov
cmpsb
fwait
mov
pop
incl
out
mov
xchg
testl
jg
mov
mov
dec
in
xchg
xor
scas
inc
sbb
frndint
mov
fwait
jns
incb
dec
jnp
jbe
es
lods
or
mull
sub
rcr
negb
add
inc
cltd
mov
jne
lcall
adc
sbb
adc
in
push
jo
movsb
cli
jp
sub
test
jmp
out
sub
out
cwtl
lds
push
rorl
cltd
imul
insb
lret
jno
repnz
cmp
sahf
push
aas
sbb
mov
dec
pusha
pop
outsl
cmpl
pop
loopne
mov
cmp
ljmp
cmc
movsb
xchg
lcall
decl
cld
mov
fs
xchg
out
pop
xchg
pushf
pop
and
mov
movsb
add
in
fs
aad
int3
imul
sub
add
cmc
sahf
dec
jg
pushl
mov
jl
fiaddl
pushf
lahf
ficompl
sbb
mov
mov
dec
inc
sbb
repz
lahf
mov
mov
call
pop
mov
mov
mov
into
mov
dec
pop
test
stos
cmp
push
pop
not
mov
nop
stos
dec
aam
inc
ret
and
and
clc
aad
xorl
decl
pop
cli
jmp
mov
fistl
dec
jl
jo
jmp
jns
aam
bound
decl
push
jp
addr16
mov
cmp
fistpll
ljmp
in
or
dec
jbe
ljmp
movsl
aas
cs
sbb
nopl
imul
mov
add
sar
fbstp
adc
jbe
lea
lods
je
ljmp
add
pop
push
xor
orb
mov
fnstcw
rcll
ja
test
enter
sub
jl
cmp
loope
mov
mov
test
xor
mov
sbb
lds
pushl
push
lret
pop
imul
add
in
nop
mov
addr16
mov
loopne
jle
or
dec
arpl
cmp
pop
mov
push
xor
sub
lahf
add
pop
xor
xorb
jg
cmp
lea
repnz
and
jne
nop
cmp
mov
xchg
lods
and
jl
mov
lock
cli
iret
pop
cmp
js
iret
jnp
mov
icebp
int3
orl
incl
ret
test
out
add
xlat
jl
dec
sahf
dec
add
mov
adc
ret
out
fwait
adc
dec
jbe
mov
rclb
outsl
inc
cld
ljmp
inc
mov
dec
fistpl
lahf
fisttps
jge
call
cmc
sbb
pop
and
xchg
out
push
or
cmp
popl
pop
loop
push
loope
cli
push
test
jle
sbb
movsb
jg
pop
sub
adc
jo
sahf
push
adcl
dec
sub
mov
add
call
cwtl
or
push
leave
scas
int
aam
fstp
insl
int3
pop
lods
fnsave
sub
daa
inc
clc
incl
cmc
pop
push
or
push
rolb
negb
push
cld
add
fistps
js
out
pushw
dec
scas
add
jg
jb
push
std
incl
loope
sbb
xchg
xchg
add
arpl
out
decl
add
xor
ja
int
or
data16
incl
pop
mov
clc
mov
xorb
pop
jns
negb
pop
ljmp
dec
mov
and
push
xchg
fstp
das
idivb
lahf
incl
sbb
dec
cmp
or
sub
call
mov
sub
fists
and
xchg
mov
push
sar
lcall
pop
jnp
lds
das
xchg
and
xor
add
dec
dec
stos
daa
iret
jg
mov
sub
lock
jno
cmp
xor
lcall
lea
jmp
outsb
lds
add
xor
mov
xchg
mov
inc
insl
sub
lds
ljmp
dec
sub
mov
das
hlt
lcall
test
sbb
scas
dec
cmp
outsb
stos
push
cmp
insb
or
call
inc
jns
arpl
mov
pop
add
cmp
inc
or
jne
mov
cltd
ds
cmp
cmp
adc
dec
xchg
popa
jbe
inc
cmpsl
pop
gs
dec
outsb
incl
push
shl
aad
sub
out
les
lods
xor
cmc
in
lods
fistl
test
dec
loop
lock
iret
xchg
inc
out
jl
mov
filds
les
pop
test
stos
movsl
lret
rclb
sbbl
call
call
jae
adc
pop
push
dec
cld
iret
mov
mov
sub
or
hlt
push
pop
shrl
mov
cwtl
add
mov
cmp
loop
mov
pop
or
fstl
ljmp
cld
add
sahf
and
cld
jg
inc
jl
add
jmp
mov
bound
mov
insb
adc
jge
inc
or
and
or
fadds
dec
dec
icebp
imul
cmp
shl
xchg
xor
inc
cmp
push
pop
adc
addr16
icebp
clc
mov
inc
jle
mov
popa
lods
sub
dec
fdivrs
push
pusha
pop
clc
outsl
jg
cmp
lea
dec
imul
dec
or
lcall
push
push
fisubs
cmpsl
cltd
jns
lods
xchg
cmp
pop
adc
scas
sar
sbb
dec
xchg
addl
sub
or
mov
cmp
test
popa
push
fldt
call
into
hlt
or
cmpsb
xchg
lcall
nop
pushf
lock
xor
repnz
mov
and
mov
int3
inc
pop
fcos
push
ljmp
cli
sub
inc
lcall
jmp
rorl
mov
jl
dec
out
call
or
lods
outsb
mov
dec
iret
push
jmp
scas
adc
mov
cmpsl
test
xor
int
inc
rorl
inc
xchg
jg
cwtl
pop
lret
adc
pushl
repnz
pusha
pop
test
es
jmp
xchg
mov
xor
fwait
mov
mov
shl
pop
loop
add
arpl
divl
aam
jecxz
mov
jg
incb
xchg
xchg
addr16
dec
stos
jae
jge
push
dec
mov
ljmp
jb
arpl
sub
jns
cmc
cmp
pop
push
sbbb
arpl
mov
xor
jge
jge
call
in
dec
adc
mov
decl
mov
imul
popl
sub
and
lea
lret
popf
lods
sub
ror
aad
xchg
mov
or
sub
jmp
sbb
cltd
sub
and
adc
cltd
or
inc
arpl
cwtl
insb
xchg
add
adc
decl
sbb
xor
sub
push
fwait
mov
add
iret
shufps
mov
lret
fnstsw
pushl
leave
inc
adc
imul
xor
cmp
fucomi
dec
add
and
int
int3
jne
jns
mov
js
cmp
push
pop
ljmp
lcall
shr
jge
sub
movsl
subb
incb
mov
and
pop
data16
loopne
filds
popf
cltd
inc
sub
pop
pop
clc
in
mov
inc
adc
fisttps
mov
push
out
sbb
sub
pop
addr16
call
push
in
sub
call
test
mov
inc
iret
sub
adc
out
push
adc
out
mov
push
lcall
jns
addr16
cli
lret
and
mov
adc
ret
jmp
dec
xchg
and
fwait
push
fcompl
push
mov
cmp
push
clc
orb
sbbl
and
popf
cld
xchg
subb
jmp
jmp
xor
pop
cmp
xor
gs
outsb
dec
pop
test
outsb
outsb
ret
test
lock
mov
mov
mov
idivl
jge
add
cmp
push
aam
xor
in
cwtl
and
add
xchg
mov
test
ljmp
or
bound
push
xchg
test
mov
fsubr
pop
mov
incl
je
inc
or
adc
out
xchg
hlt
mov
sbb
mov
jns
lods
mov
rolb
stc
pop
ljmp
fisttps
shrb
jmp
into
lock
cmp
push
mov
mov
jae
imul
xlat
pop
push
loope
mov
jecxz
mov
sub
pop
sbb
decl
cld
fcoms
cwtl
pop
lock
mov
jne
cmc
cli
sar
xchg
sub
or
cmp
arpl
shlb
fbstp
push
loop
js
mov
cli
orl
lds
lcall
aad
mov
xchg
adc
data16
mov
or
mov
pop
fildl
inc
nop
cmpb
and
mov
adc
andl
jmp
mull
leave
mov
int3
lcall
xchg
add
mov
pop
int
adc
jne
lea
inc
lcall
jmp
pop
je
mov
aaa
lods
call
test
dec
sub
cwtl
adc
ljmp
sbb
fmull
dec
pop
in
mov
mov
jae
pop
adc
inc
and
xchg
aad
pop
loopne
inc
cmp
sbb
adc
jno
xor
aam
cli
inc
aad
xchg
leave
lcall
mov
data16
pop
aam
inc
pop
and
stos
xchg
cmp
or
jg
xor
aaa
push
dec
ffreep
mov
add
subb
mov
cltd
lcall
xor
pop
testl
sti
mov
push
bound
in
sbb
dec
and
jne
shll
lahf
sub
decl
jmp
repz
inc
xor
lds
mov
mulb
in
call
push
sarb
pop
xchg
push
test
adc
or
push
lret
mov
clc
mov
sbb
int
js
adc
ljmp
push
stc
fucomip
dec
leave
xchg
lods
lret
push
xor
adc
shlb
fisttps
lcall
test
test
ja
inc
lock
hlt
mov
xor
decl
into
xchg
std
scas
clc
mov
in
inc
inc
imul
loopne
jg
fnstenv
xchg
xchg
pop
mul
outsl
add
shlb
mov
mov
jbe
movb
and
push
icebp
xchg
dec
add
lcall
pop
xor
mov
cmpl
adc
fucomip
ljmp
lods
icebp
fucomip
andps
mov
xor
pop
inc
icebp
loopne
and
mov
mov
xchg
xchg
cmp
xchg
lods
repz
pop
jle
mov
lret
push
add
add
push
out
nop
adc
sbb
lea
cmp
cmp
cmpb
loop
ss
sub
adc
or
call
pop
jmp
test
decl
adc
or
repnz
je
push
cld
mov
into
mov
ret
das
call
out
jg
mov
test
scas
ret
out
adc
loope
inc
ret
loopne
std
xor
mov
lock
xchg
push
xor
cltd
add
xchg
dec
stos
mov
jmp
ficoml
push
push
call
jno
movsb
push
stos
sarl
or
xchg
clc
inc
xchg
mov
popf
enter
add
daa
call
mov
sbb
push
jle
or
out
lahf
out
decl
mov
enter
pop
lret
jae
or
movsb
push
mov
xor
data16
call
iret
mov
jmp
faddp
xchg
xchg
inc
adc
aaa
ds
mov
cmp
push
ja
fcompl
cld
cld
dec
adc
decl
mull
mov
push
adc
push
insl
fcoml
decl
dec
jne
shll
or
lcall
lcall
loop
nop
arpl
incl
loope
inc
fwait
daa
sub
or
mov
andb
or
das
inc
sar
mov
jmp
cmpsb
mov
or
fcomps
lcall
or
call
sub
cmc
test
xchg
mov
jbe
jg
jmp
adc
lret
fwait
call
scas
cwtl
cmp
pop
loop
incl
pop
push
cmp
xor
popa
decb
in
xor
js
fistpl
gs
fcomip
sti
xchg
enter
subb
adc
cmp
shl
daa
push
or
inc
jle
flds
push
and
sbb
jmp
dec
std
xchg
ret
das
jmp
lods
dec
sbb
pushl
mov
movsl
and
cs
jne
scas
inc
or
aam
or
fiaddl
push
lahf
into
dec
cmpsl
loopne
adc
jp
mov
mov
pop
pop
test
or
call
shl
jno
adc
test
setb
sarb
cs
pushf
mov
test
out
jge
fmuls
mov
adc
jg
pushl
in
pop
cmp
lods
jns
cmpsb
cltd
jbe
movsl
lret
dec
mov
mov
cli
fisttpll
pushf
inc
push
or
jns
dec
aam
out
adc
sbb
dec
fists
inc
sahf
dec
or
sti
adc
cmp
push
jle
mov
sar
jmp
xchg
lret
cli
and
not
orl
sti
xchg
lds
xchg
push
jb
pushl
stos
inc
mov
cmp
sbb
push
push
jecxz
dec
shlb
filds
out
xchg
mov
xchg
movsb
dec
fidivrs
inc
jecxz
imul
hlt
ftst
sar
inc
cld
jmp
shl
lods
sarb
shl
cmp
lret
aad
inc
jmp
std
pushl
stos
pop
divb
or
mov
cmp
lcall
xchg
cmp
cmp
mov
dec
lock
push
xchg
into
popf
mov
jg
xor
xchg
inc
mov
out
mov
cmpsb
in
gs
call
pusha
fnsave
pop
xor
in
pop
sbb
inc
and
push
pushl
dec
mov
outsb
jne
data16
cmpsb
xchg
push
push
out
or
adc
cli
add
or
xor
pop
sub
aad
insl
dec
in
repnz
pushl
mov
aam
std
push
outsl
add
aad
icebp
add
call
inc
adc
inc
jl
and
movsb
push
es
xorb
dec
add
ljmp
arpl
pop
popa
fs
data16
popa
outsb
pop
mov
mov
jl
cltd
dec
ss
cmp
test
subb
jmp
adcl
pop
insl
ss
jp
arpl
insl
xor
mov
xor
sbb
mov
push
xor
lahf
or
jb
call
add
add
testb
push
jae
outsb
sub
cmc
mov
jl
pop
imul
rcll
jns
aad
adc
std
and
lock
inc
cmp
imul
sahf
add
popa
sbb
subb
jb
push
js
gs
dec
ret
mov
inc
jecxz
mov
ret
pop
int3
push
xor
xchg
inc
push
addr16
call
aad
sti
pop
add
test
pusha
insb
outsl
addr16
sbb
jne
test
push
sbb
ret
pusha
adc
push
jnp
push
mov
inc
xor
push
push
dec
fadds
fdivr
mov
push
dec
adc
add
stos
dec
ljmp
subl
rcrl
cwtl
imul
adc
inc
push
sub
js
mov
pop
or
outsl
test
and
dec
add
sti
pop
or
add
loopne
sidtl
add
or
out
fsubs
mov
adc
xorb
add
add
push
pop
add
pop
pop
fisttpll
lret
faddp
into
and
pop
push
add
mov
or
pusha
add
dec
add
sbb
inc
ss
ja
je
fs
daa
insb
mov
jecxz,pn
je
cmp
movl
fnsave
add
cmp
scas
sbb
dec
ret
pusha
mov
gs
add
pop
cwtl
inc
sub
add
add
addb
inc
add
incl
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
