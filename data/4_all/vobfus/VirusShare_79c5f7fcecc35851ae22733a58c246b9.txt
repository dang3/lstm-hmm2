jecxz
mov
push
pop
test
or
cmp
dec
and
mov
ds
fisttpl
sbb
pushf
push
mov
test
pusha
pop
pop
xlat
push
scas
xor
push
lret
cmp
xor
les
mov
fstps
dec
lds
mov
add
jle
pop
fidivrs
pop
mov
cmp
mov
sub
jecxz
testb
cmc
mov
sub
mov
notl
dec
sarb
lods
xor
sub
mov
insl
aad
mov
lret
dec
mov
test
mov
cmp
in
fisubs
loop
cmp
sub
inc
xlat
sbb
js
cmpb
out
lock
fisubl
cmp
dec
pushf
and
addl
loopne
lds
sbb
lods
data16
xchg
jp
sub
xchg
test
mov
movsl
sub
dec
lods
xor
xor
jbe
imul
arpl
insb
icebp
mov
rolb
xchg
sbb
jbe
xor
mov
push
fistpl
pop
scas
jb
mov
pop
lcall
aas
add
push
mov
daa
ljmp
rsqrtps
jecxz
movsl
push
mov
add
jmp
rolb
mov
outsl
mov
call
icebp
ljmp
mov
leave
xchg
xor
or
ss
adc
pop
jecxz
in
jo
mov
xchg
cwtl
pop
mov
jge
xchg
xchg
aam
fisubrs
outsl
repnz
cmp
jmp
cmc
test
orb
adc
pusha
out
repnz
mov
add
cli
jne
dec
push
movsl
call
jae
ljmp
push
sub
scas
xor
jl
xchg
fs
xor
sahf
and
dec
shlb
inc
out
repz
ficompl
fsubl
add
inc
lret
dec
cmc
xor
and
pop
mov
push
fistpl
test
shrl
sub
nop
or
int
daa
ljmp
rsqrtps
push
mov
clc
test
mov
lahf
lock
repz
mov
sbb
cmp
push
mov
pop
ficompl
imul
sbb
inc
rorb
mov
out
test
sti
jle
jle
xchg
xlat
pop
jecxz
mov
mov
or
xor
flds
inc
or
fildll
repnz
int
xlat
sbb
mov
push
mov
mov
mov
sbb
sti
addb
loop
xlat
xor
xchg
jo
dec
iret
adc
push
icebp
adc
jecxz
or
out
outsb
cmp
jg
push
ret
xchg
xchg
subl
dec
adc
in
and
cmp
idivl
gs
or
sub
and
dec
repz
popa
mov
imul
mov
rclb
fwait
imul
cld
push
jno
daa
ljmp
iret
push
stc
mov
mov
popf
jno
mov
mov
idivb
xchg
sbb
add
bnd
add
cmp
sarb
mov
push
or
sahf
and
jle
mov
xchg
fcomps
addr16
jno
mov
dec
mov
mov
ja
xchg
xchg
call
repnz
lahf
mov
popa
sbb
cs
mov
push
popa
cmpsl
push
enter
mov
arpl
jne
dec
push
cltd
out
pop
loop
shrl
inc
xor
push
add
out
xor
adcb
xchg
mov
ja
popa
mov
ret
or
out
shl
cmp
and
dec
cmp
dec
repz
loopne
dec
adc
insl
outsb
movsl
push
and
dec
sbb
out
pusha
insb
ret
cmc
out
loopne
dec
sti
lods
pushf
jle
mov
mov
jp
jg
mov
pop
fbld
insl
repnz
roll
xchg
sbb
jns
inc
push
mov
push
fidivl
cmp
push
xor
and
iret
xchg
icebp
imul
and
pop
mov
dec
adc
test
sbb
test
dec
add
pop
xlat
sbb
mov
push
mov
les
mov
pushf
and
addl
inc
aad
mov
pop
nop
pop
dec
adcl
xor
imul
sub
movsb
xchg
xchg
movl
mov
adc
cmpsb
insl
jnp
dec
add
dec
in
shlb
mov
xchg
cmp
push
in
pop
bound
inc
gs
and
fisubl
aas
popf
sahf
xor
mov
xchg
pop
mov
fidivl
xor
fstpl
and
push
in
xor
cltd
imul
test
rolb
scas
pop
sahf
and
xlat
inc
push
mov
push
imul
push
incl
pop
adc
cwtl
and
jle
mov
xchg
fstps
xchg
cltd
push
mov
push
cwtl
pop
mov
jge
xchg
sub
sbb
callw
jmp
push
xchg
sbb
sbb
idivb
sbbb
out
in
dec
mov
jmp
mov
cli
sub
jle
cltd
out
pop
loop
xor
cltd
inc
pop
dec
fnstenv
fistpl
lods
inc
out
xor
ret
xchg
push
stos
outsb
jmp
scas
xchg
xchg
adc
fnstcw
sbb
add
out
push
idivl
pop
sub
dec
jmp
push
repz
pop
mov
test
push
lods
push
lcall
iret
es
and
out
xor
inc
jne
pop
les
xor
std
aam
dec
sub
mov
mov
xchg
or
test
mov
cld
addl
notl
fisubl
push
mov
mov
push
cmp
mov
jle
jge
xchg
fcomps
addr16
ja
add
mov
adc
mov
inc
or
in
fimuls
fsubrs
repnz
int
xchg
sbb
js
orb
aam
sbb
mov
xor
pushf
and
rcrl
adc
lods
jae
jno
dec
lods
das
fistpl
movsl
sub
xchg
push
outsb
xor
mov
daa
stos
dec
hlt
dec
incb
push
adc
lock
faddl
add
add
cvttps2pi
jbe
and
mov
mov
jb
mov
mov
sbb
xor
cmp
loopne
ljmp
mov
es
xor
mov
pop
into
bound
rclb
xchg
xchg
pop
cld
ds
pop
adc
in
out
fidivrl
in
inc
test
and
pushl
cltd
mov
cwtd
jo
mov
ja
imul
add
fiadds
aas
repnz
push
xchg
sbb
js
orb
adc
pusha
out
icebp
mov
mov
sbb
cli
addl
loop
in
jae
mov
adc
push
movsl
sub
xchg
fs
xor
int3
push
xchg
sbb
hlt
jnp
test
adc
arpl
insl
lock
roll
sbb
jbe
addb
adc
in
out
jb
mov
pop
lcall
jg
mov
pop
loopne
ljmp
iret
push
cltd
sbb
lods
xor
jp
test
mov
pop
fbld
insb
repz
rolb
xchg
sbb
jns
addl
adc
popa
in
out
mov
mov
push
popf
and
jle
mov
xchg
fstps
in
jo
mov
adc
lods
xor
jge
xchg
xchg
aam
fisubs
outsl
repnz
push
xchg
sbb
js
orb
adc
pusha
out
icebp
mov
mov
sbb
cli
addl
loop
in
jae
mov
adc
push
movsl
sub
xchg
fs
xor
int3
push
xchg
sbb
hlt
jnp
test
adc
arpl
insl
lock
int
or
sbb
jbe
xor
mov
imul
xchg
loopne
lcall
lcall
push
cwtl
xchg
imul
lret
push
adc
jecxz
lods
xor
jp
test
mov
pop
fbld
push
mov
ss
sbb
jnp
addl
cld
pop
fisubl
push
popf
dec
incl
dec
rcll
xchg
nop
out
mov
sti
jle
or
fistps
in
jo
mov
push
sbb
sub
or
or
repnz
pusha
xlat
sbb
xchg
mov
push
frstor
push
mov
mov
sbb
cli
addb
loop
in
jae
mov
adc
push
dec
and
xor
jl
xchg
gs
cmp
dec
ret
push
xchg
sbb
jp
imul
arpl
sbb
idivl
roll
xor
and
addb
adc
pop
out
in
jb
mov
push
lcall
aas
add
shlb
ljmp
rsqrtps
xor
jp
test
mov
fcomp
jmp
ret
inc
lret
sbb
and
push
push
mov
dec
rcll
or
pop
mov
xchg
add
js
movsl
das
xchg
and
cmp
loope
pop
test
jbe
je
mov
lods
sbb
cmp
cmp
aad
fadds
popf
mov
mov
je
xchg
cmpsb
jl
sub
xor
loop
in
push
ss
call
push
imull
hlt
xor
nop
mov
outsb
gs
outsb
xchg
cmp
hlt
sub
sbb
and
xor
lock
cmp
inc
cwtl
dec
ret
sbb
and
addb
mov
rcrb
enter
push
imul
push
add
or
adc
xor
ds
es
xor
mov
pop
mov
mov
rclb
xchg
sbb
jge
aas
push
lea
push
ficompl
cmp
inc
leave
dec
rcll
lods
and
jle
mov
xchg
leave
pop
fildll
jo
mov
loope
and
jge
xchg
push
aam
loop
call
ret
inc
rcll
xchg
and
cs
js
adcb
cvtps2pd
pusha
inc
push
mov
mov
sbb
mov
cli
test
mov
jae
or
dec
rcll
push
int
mov
stc
jl
data16
xlat
pop
fldenv
inc
cwtl
inc
ret
aas
xchg
sbb
sub
nop
call
addr16
adc
dec
mov
sub
jbe
pusha
or
lock
jb
mov
adc
scas
sbb
add
xchg
push
loopne
ljmp
mov
es
xor
jp
push
movsb
sub
mov
add
test
outsl
mov
cld
jg
fstps
out
mov
mov
push
popf
adc
sbb
mov
iret
xchg
xchg
sub
es
jno
mov
sub
mov
sub
inc
shll
dec
ret
jmp
ret
inc
or
sbb
js
adcb
push
frstor
push
mov
mov
sbb
xchg
mov
or
in
mov
dec
adc
push
xlat
je
gs
pushf
push
mov
dec
lret
outsb
or
xchg
xchg
sbb
test
incb
fsubl
push
adc
jp
push
mov
sbb
test
push
testl
push
inc
fnstsw
dec
mov
scas
test
jg
inc
scas
daa
ret
push
movb
insb
aam
or
shrl
jecxz
icebp
pop
mov
add
jmp
rolb
jl
fisubs
std
mov
fimull
xchg
pop
scas
mov
popl
dec
rcll
lods
and
dec
xchg
sbb
dec
sarb
pop
mov
mov
negb
adc
inc
lock
icebp
fildll
repnz
pop
xlat
sbb
js
subb
push
fstl
ss
mov
rcl
in
xor
sub
add
push
fcomps
sub
pop
in
xacquire
pop
movsl
sub
xchg
ja
pop
loope
out
in
in
ret
push
xchg
sbb
hlt
and
test
ret
into
rcl
cmp
je
mov
sub
jbe
and
adc
in
out
jb
mov
push
and
add
loopne
ljmp
iret
push
sahf
sbb
lods
xor
jp
test
mov
xor
lret
push
mov
dec
xchg
push
add
push
xor
push
mov
je
jle
jle
xchg
int
mov
mov
scas
imul
mov
test
pop
jge
mov
fisubrs
das
repnz
mov
sub
cmp
loopne,pn
lods
in
push
pop
adc
idivl
daa
push
movsb
sti
inc
scas
das
sub
pushf
and
sbb
pop
loop
test
dec
rcll
push
lods
ja
xor
jl
xchg
push
mov
xor
int
incb
cmpsb
stos
mov
or
out
lock
hlt
outsl
out
push
cmp
sti
sub
jbe
xchg
mov
jne
pop
in
repz
repz
rclb
lcall
xor
mov
ror
pop
loope
rorb
js
xchg
cltd
sbb
idivl
test
mov
insb
repz
les
sahf
and
mov
push
lea
push
fisubl
imul
and
or
xchg
mov
push
mov
push
fstps
addr16
jo
mov
push
cwtl
sbb
sub
or
call
int3
inc
into
push
and
cs
js
orb
adc
pusha
out
icebp
mov
mov
daa
pushf
aaa
movsb
sub
pop
xchg
jns
push
add
inc
dec
mov
jp
xchg
movsl
and
pop
pushf
and
xor
mov
pop
repnz
in
or
adc
xchg
jmp
pop
out
mov
lret
dec
xchg
sbb
ss
jne
push
adc
ss
mov
push
dec
shl
fwait
add
add
sahf
and
cmpl
fcoms
push
cs
pop
mov
dec
sub
mov
pop
sahf
cmp
cld
addl
adc
add
outsb
lret
dec
jae
add
sub
inc
or
add
pop
jecxz
jmp
aaa
mov
jp
xchg
iret
cmp
mov
inc
lock
loope
das
repnz
pop
xlat
sbb
js
subb
push
fstl
ss
mov
rcl
in
xor
sub
add
push
popa
fcomps
and
inc
imul
in
in
xor
icebp
sbb
xor
nop
fistpl
cmp
ret
push
xchg
mov
add
stos
leave
cld
and
cmc
mov
jnp
jne
lahf
and
sub
jbe
addb
push
fistpl
push
mov
dec
rorb
scas
jbe
or
pop
loopne
ljmp
iret
push
cltd
sbb
movsl
xor
jp
test
mov
pop
aad
adc
cmp
xchg
sbb
jl
jg
test
imul
add
out
sarl
inc
int3
sub
push
lods
and
jle
mov
xchg
fdivrl
aad
sbb
xor
xor
pop
add
test
pop
fiadds
sbb
inc
mov
xchg
sbb
xchg
xchg
jo
or
lea
xor
and
stos
popf
js
fidivrs
mov
sahf
and
out
dec
leave
push
jne
nop
cmpsl
sbb
push
jmp
ret
movsl
jns
outsb
mov
lea
fld
stos
xor
jnp
mov
adc
arpl
cltd
adc
cmp
or
xchg
and
addb
jno
lock
repnz
insl
in
jmp
enter
or
jg
jbe
xchg
and
cmp
cmp
jae
insl
aam
cmc
jp
js
cmp
test
mov
jp
bound
rorb
or
and
cld
addl
test
lcall
pop
pop
jmp
jo
push
jne
jg
mov
xchg
jmp
inc
insb
ljmp
sbb
add
or
negb
fisubs
jae
fnsave
inc
int
xchg
sbb
and
inc
or
inc
push
mov
aas
adc
popf
repz
or
add
push
sbb
inc
shlb
jl
push
repnz
push
mov
pop
ret
xchg
cmp
ret
push
xchg
mov
add
stos
leave
and
cmc
mov
jnp
jne
lahf
and
xor
into
shlb
push
out
and
imul
mov
addr16
loopne
cltd
sbb
scas
xor
and
imul
and
insl
and
inc
xchg
sbb
and
mov
ss
mov
mov
push
or
je
jle
pop
iret
xchg
fstps
in
jo
mov
adc
lods
adc
fldenv
repz
cmp
inc
lret
sbb
jbe
jle
aaa
cltd
pop
fwait
pop
mov
push
xchg
jnp
mov
pushf
pop
cmpsb
cltd
pushl
cli
addl
loop
nop
cmp
mov
adc
out
xor
adc
xchg
daa
pop
inc
fs
inc
mov
pop
push
xchg
fmull
movsl
push
cmpsl
adc
test
and
jno
idivl
roll
xchg
and
addb
jb
les
in
das
cmp
push
lcall
iret
add
loopne
ljmp
lock
mov
andl
bound
rorb
or
and
cld
addl
push
dec
lcall
pop
pop
jmp
jo
push
jne
jg
mov
xchg
ficomps
mov
insb
ljmp
push
sub
or
clc
sbb
gs
add
push
xchg
sbb
shlb
fbld
push
mov
aas
adc
popf
repz
or
cltd
sbb
dec
ret
inc
push
fldt
insb
repnz
js
sub
xchg
fs
sub
push
xchg
bound
sub
pop
or
xor
lock
xlat
inc
repnz
mov
loop
sti
sub
jbe
sbbb
mov
shlb
jno
jb
pop
lcall
and
and
jge
dec
ljmp
in
push
mov
xor
mov
insb
into
mov
shlb
xchg
js
mov
xor
imul
ficompl
imul
cmp
push
add
cmpsl
sub
je
jle
mov
data16
jo
mov
xchg
mov
xor
das
or
inc
fimuls
inc
repnz
mov
sbb
and
cs
scas
sbbb
les
mov
mov
jp
ja
jg
sbb
and
push
dec
fdivrs
inc
in
cmp
inc
fimull
adc
push
shrl
scas
xor
aas
ljmp
jmp
xor
int3
push
xchg
pusha
mov
pop
sub
outsl
adc
fcoml
inc
lock
cmp
inc
sbb
and
sub
jbe
andb
push
and
jl
jne
jnp
test
imul
ljmp
adc
sbb
es
xor
mov
insb
adc
mov
mov
cld
addl
adc
dec
in
out
fnstcw
lahf
inc
out
dec
loop
adc
sub
cwtl
jle
mov
data16
jo
mov
jbe
aas
mov
xor
das
or
and
repnz
faddl
push
mov
cs
js
adcb
mov
mov
jp
inc
cmpsb
outsb
mov
cli
cmp
push
push
fcomps
inc
in
jae
add
dec
ficoms
push
or
iret
xor
nop
negl
fs
ret
insb
xchg
cmp
hlt
es
sub
and
inc
fdivrl
out
lock
mov
sbb
leave
sub
jbe
adcb
mov
mov
mov
sbb
and
imul
ljmp
iret
push
sbb
pushl
cmpsb
jp
test
mov
insb
enter
outsb
lret
push
sahf
ja
je
sub
das
push
push
adc
cmp
cmp
out
cmp
inc
aad
movsl
push
popf
and
jle
mov
mov
mov
xchg
mov
pop
add
and
push
fidivs
cmp
inc
lock
add
cs
mov
push
in
cmpsl
push
sahf
jnp
inc
enter
popf
and
out
dec
push
push
fstps
inc
insl
push
ss
adc
scas
xor
jl
es
imul
ret
push
xchg
sub
mov
xor
jnp
test
adc
arpl
insl
lock
roll
sbb
jbe
addb
adc
dec
xchg
scas
jb
mov
push
fwait
adc
clc
jg
test
pop
loopne
ljmp
iret
push
popf
sbb
lods
xor
jp
test
mov
pop
fbld
insb
repz
rolb
adc
mov
jne
addl
adc
popa
in
out
mov
rolb
dec
rcll
cltd
and
jle
mov
xchg
fstpl
in
jo
mov
adc
lods
xor
jge
xchg
xchg
aam
fisubs
outsl
repnz
push
xchg
sbb
js
orb
adc
pusha
out
icebp
mov
mov
sbb
mov
add
pop
loop
in
outsl
ss
scas
dec
rcll
push
movsl
sub
xchg
nop
xlat
pop
loope
call
ret
push
xchg
sbb
jnp
test
adc
arpl
inc
fcomip
cmp
inc
lret
sbb
jbe
addb
add
push
add
test
imul
or
pop
loopne
ljmp
iret
push
std
sbb
mov
dec
fwait
bound
rclb
xchg
aas
sahf
and
cld
mov
lea
push
fisubrl
imul
cmp
push
adc
movsb
sub
jne
jle
mov
xchg
fstps
in
jo
mov
mov
xor
add
ficoms
imul
cmp
inc
int
xchg
sbb
js
xor
adc
pusha
in
icebp
mov
mov
mov
ja
addl
loop
in
jae
mov
adc
scas
xor
ret
xchg
fs
xor
int
xchg
sbb
cmp
add
dec
adc
cli
mov
adc
mov
lret
push
shlb
inc
jne
push
lcall
inc
add
loopne
ljmp
iret
push
lcall
jns
test
mov
insb
repz
rolb
adc
mov
jp
addl
adc
popa
in
out
mov
mov
push
scas
and
jle
mov
xchg
fstps
in
jo
mov
adc
lods
xor
or
gs
fdivr
mov
push
ret
movsb
scas
cs
pop
mov
imul
cmp
inc
enter
mov
cmpsb
sbb
add
push
push
fcomps
imul
dec
rcll
movsl
sub
xchg
xchg
aam
icebp
fs
xor
int3
push
xchg
lea
jnp
test
mov
pop
fcompl
insl
lock
mov
insb
sahf
sbb
dec
push
test
push
inc
inc
in
out
inc
xchg
mov
lret
movsb
sub
jns
push
or
loope
repz
mov
push
mov
xor
addb
or
repnz
outsb
sub
shrb
jns
aaa
sahf
and
cld
mov
lea
push
ficoml
imul
cmp
push
lods
and
jle
mov
xchg
lods
pop
loope
inc
jo
mov
adc
jp
cmc
jge
xchg
xchg
push
arpl
sub
jae
mov
inc
xchg
sbb
std
inc
jne
popl
mov
movsb
cmp
enter
fsubl
aam
mov
cli
orl
popa
loop
in
mov
popf
inc
pop
dec
rcll
jp
sub
dec
or
test
xchg
xlat
pop
loope
stos
outsl
xchg
xchg
sbb
hlt
or
adc
arpl
insl
push
adc
rcll
mov
push
pop
cmp
xchg
mov
sbb
shl
push
inc
dec
int3
imul
stc
mov
pop
loopne
ljmp
pop
aam
or
imul
insb
repz
int3
xchg
dec
xchg
xchg
sahf
aad
pop
mov
cld
addl
adc
popa
in
out
stc
cmp
push
popf
and
jle
mov
xchg
movsl
pop
fsubl
jo
mov
adc
lods
mov
or
call
ret
inc
int
xchg
sbb
jns
sub
adc
pusha
jmp
icebp
mov
mov
popa
popf
push
cmpsb
stc
jbe
cli
inc
add
pop
loop
in
jae
jb
dec
rorl
cltd
push
movsl
sub
test
in
jb
mov
dec
xchg
inc
xchg
daa
lods
sbb
rorb
out
lods
mov
ficoml
loope
sbb
inc
xor
cmpsl
pop
movsl
push
icebp
jb
mov
or
xor
or
addr16
rcpps
sub
jp
test
loopne
fbld
fs
push
mov
xor
js
pop
adc
push
mov
mov
push
popf
sbb
sub
cmp
cmp
mov
xor
enter
jo
mov
adc
es
jge
xchg
sbb
mov
idivl
dec
inc
cmp
daa
cs
js
orb
adc
pusha
fisubrl
mov
mov
sbb
stc
sub
adc
dec
rcrb
fwait
push
movsl
sub
xchg
nop
gs
loop
jmp
xor
int3
push
xchg
sbb
hlt
jnp
jbe
adc
arpl
insl
lock
dec
lea
pushf
and
sub
add
pop
in
shlb
inc
imul
xor
hlt
add
pop
sbb
mov
push
pushf
push
mov
jnp
adc
mov
sahf
mov
push
insb
inc
cld
inc
xchg
pop
sahf
cli
stos
das
mov
pop
cmpsb
sbb
adc
pusha
cmp
mov
imul
pop
adc
mov
add
mov
push
shl
push
jno
ret
dec
iret
daa
xchg
arpl
push
add
rolb
inc
incl
dec
xchg
mov
and
out
pop
or
inc
push
dec
rcrb
pushf
out
mov
es
push
pop
fsubrs
mov
adc
push
jp
scas
xor
ficoml
shlb
mov
push
lcall
fs
test
push
xor
int3
out
lock
out
dec
iret
dec
mov
lahf
and
pop
push
xchg
test
jb
enter
xchg
and
pop
stc
mov
mov
dec
fucom
addr16
xchg
xchg
sub
sub
xor
jp
je
lcall
out
mov
pop
xchg
and
inc
mov
pop
cld
push
ficoml
cmp
inc
add
and
jle
mov
xchg
or
in
jo
mov
test
testb
or
jmp
mov
sbb
and
add
frstor
push
mov
mov
sbb
mov
cli
jns
test
imul
movl
popf
xor
mov
xchg
or
or
mov
icebp
sbb
pop
add
sub
xor
push
lcall
aaa
adc
cmp
dec
lret
inc
xchg
mov
ja
xor
sahf
mov
jl
xorb
or
jnp
scas
jne
mov
sub
dec
pop
loopne
ljmp
iret
dec
cltd
sti
daa
subb
add
movsb
xchg
call
ret
inc
into
push
sarb
and
xor
and
in
inc
push
mov
pop
xchg
and
push
add
or
xor
inc
pop
dec
pop
loopne
pop
mov
jge
xchg
nop
aad
mov
data16
ret
inc
int
aas
mov
cmp
or
popa
cmp
mov
adc
lock
pop
adc
lock
lea
pop
popa
fxch
pushf
and
jb
aad
int
shll
fwait
dec
adc
add
frstor
inc
push
mov
push
xchg
sbb
fidivrl
sub
fsubs
dec
enter
inc
lret
dec
aas
mov
and
mov
std
adc
mov
fs
jb
sbb
fwait
sbb
sbb
pop
loopne
mov
lds
fists
dec
lods
test
mov
mov
mov
shrb
and
std
inc
rclb
push
mov
mov
push
popf
xcrypt-ofb
cmpsl
sub
mov
add
insl
in
pop
aaa
jmp
inc
cltd
mov
sub
inc
or
jmp
repnz
push
stos
sbb
js
orb
or
frstor
push
mov
mov
test
js
addl
inc
aad
mov
mov
adc
push
movsl
sub
xchg
fs
inc
mov
push
xchg
xor
jns
test
adc
icebp
mov
aad
lret
xchg
or
sti
xor
sub
xchg
push
pop
cmp
imul
decb
daa
add
xchg
sbb
push
cli
jo
cmpsl
aas
add
dec
cltd
mov
mov
adc
lcall
repnz
inc
rcrb
and
das
mov
cld
mov
inc
popa
in
out
mov
push
rcrl
popf
xchg
movntps
sti
jle
xchg
mov
mov
test
in
inc
pop
mov
adc
subl
jge
in
cltd
sub
fsubl
outsl
aas
adc
sbb
insb
fwait
sbb
mov
lea
leave
mov
rolb
dec
push
fsubl
ja
sbbl
leave
mov
in
push
xor
rorl
add
iret
sub
mov
jbe
xchg
nop
adc
mov
mov
push
mov
mov
jp
jns
fwait
pusha
imul
mov
flds
dec
xchg
sbb
inc
or
addb
imul
jmp
mov
pop
lcall
jle
xor
incb
mov
push
inc
sti
daa
subb
add
lret
pop
inc
fdivp
ss
mov
push
jl
push
add
cmpsb
jns
pop
scas
mov
pop
fisubl
adc
leave
dec
rorl
pusha
and
push
mov
mov
xchg
mov
mov
jge
adc
dec
add
aam
fidivs
or
cmp
bound
sbb
js
orb
adc
popa
mov
in
sbb
sbb
inc
popf
nop
sub
ja
dec
clc
dec
push
fdivrs
loop
out
push
ss
adc
push
movsl
sub
xchg
nop
fcomps
fs
imul
and
xor
or
out
lock
roll
sbb
jbe
addb
adc
in
out
jb
mov
pop
lcall
jge
mov
test
fs
iret
popl
xor
movsl
add
pop
jmp
aam
pop
bound
cli
jne
add
jns
push
inc
jns
imul
je
ds
inc
movsb
sub
mov
xor
xor
mov
hlt
movsl
cmp
dec
pop
fisubs
stos
or
push
xchg
push
stc
add
cmpsb
or
adc
xchg
jmp
lds
into
sbb
pop
orb
xchg
js
lret
dec
imul
pop
dec
rcll
fidivl
jl
mov
je
pop
mov
cmp
xor
sti
mov
daa
cmpsb
fldcw
pop
scas
test
push
cli
mov
dec
pop
fnstenv
sti
add
sub
popf
push
push
fistpl
lods
fisttpl
imul
and
and
jmp
cs
inc
or
shll
mov
sub
mov
mov
push
cmc
mov
dec
push
mov
sahf
xchg
mov
add
sub
dec
push
mov
ret
jle
push
dec
push
mov
lods
lahf
cs
adc
cmp
jmp
fwait
pop
divb
push
cmp
aam
call
ret
inc
xlat
sbb
jnp
orb
adc
pusha
fisubrl
mov
mov
sbb
or
push
fcompp
fcomps
xchg
or
cmc
inc
rclb
scas
xor
jg
xchg
gs
iret
push
xchg
cmp
jnp
xor
inc
sbb
insb
icebp
mov
lea
lahf
and
addl
pop
insl
shlb
mov
lcall
jnp
mov
ss
sbb
sub
dec
into
push
gs
idivl
xchg
mov
fbld
insb
repz
roll
sbb
jns
jle
lea
push
ficompl
push
inc
leave
fcom
push
stc
adc
addr16
jne
pop
sbb
loopne
in
jo
mov
dec
cld
push
mov
cmp
pop
scas
inc
aad
mov
sahf
jb
lds
mov
adc
push
mov
js
jo
mov
push
xchg
popa
jecxz
icebp
imul
inc
enter
pushf
and
sbb
push
in
pop
loop
test
sub
je
inc
std
adc
scas
xorl
fs
daa
mov
testb
mov
mov
cmpsl
sub
fdivrl
sub
shlb
cs
and
mov
jge
push
mov
push
lock
inc
jo
mov
add
dec
mov
std
sarb
add
lahf
push
mov
imul
jmp
lds
push
cltd
sbb
stc
mov
idivl
cmp
cmp
pop
repz
cld
inc
push
push
xchg
sbb
pusha
push
movsl
out
mov
out
imul
and
cmpsl
xor
hlt
ret
xor
ljmp
pop
dec
mov
xor
stos
dec
mov
fisubrs
outsl
push
lds
inc
mov
sbb
subl
xlat
push
clc
cmp
and
sahf
cmp
fcomps
js
jb
inc
inc
scas
notb
xchg
mov
cmp
xchg
jl
cmp
xor
xor
int3
push
xchg
es
mov
xor
adc
out
insl
or
inc
rcr
add
sub
jbe
adc
mov
push
ret
pop
in
mov
mov
inc
adc
stos
clc
jg
mov
dec
pop
stc
fwait
cmp
call
leave
push
fbstp
mov
push
add
ficompl
insb
repz
dec
jp
mov
adc
push
jno
imul
inc
xchg
cmp
fs
xchg
lods
and
jg
cmp
lds
xor
jl
incb
dec
into
adc
lods
xor
jge
xchg
and
call
ret
test
push
mov
mov
push
adc
mov
aad
cmp
shufps
sbb
or
jl
pop
dec
imul
dec
shrl
imul
fdivrs
mov
sti
xchg
rclb
fs
outsl
dec
mov
xor
stos
test
arpl
insl
lock
ret
dec
mov
lahf
and
xchg
pop
adcb
xchg
pop
add
xor
in
fwait
push
movsb
sub
mov
lcall
repnz
les
iret
test
dec
fstpt
test
xchg
push
pop
jmp
mov
sbb
addr16
sub
cld
push
inc
sbb
outsb
enter
xchg
and
sbb
out
lock
arpl
adc
xorl
jge
sar
pusha
fnstcw
ret
pusha
repnz
cmpsl
jb
push
mov
mov
inc
add
mov
mov
mov
sbb
aaa
cli
xchg
add
push
and
in
jae
mov
adc
push
lds
scas
xor
jl
xchg
gs
ret
dec
xchg
lea
js
insl
or
out
lock
cmc
inc
enter
pushf
and
scas
jbe
addl
jb
push
imul
hlt
bnd
jg
leave
sbb
jno
mov
and
or
sub
nop
or
mov
int
insb
repz
aam
dec
inc
xchg
cmp
mov
mov
xchg
std
test
xor
in
dec
rcll
popf
xcrypt-ofb
cmpsl
sub
mov
sahf
fnstenv
aaa
gs
les
or
jnp
orl
addr16
loop
pop
xchg
push
jmp
js
orb
adc
pusha
jmp
xor
enter
sbb
stos
mov
or
in
lret
loop
lock
lock
mov
inc
adc
sub
subl
sub
or
fs
shll
ret
dec
sahf
sbb
stc
jnp
test
push
xor
out
lock
push
gs
xchg
stos
sub
jbe
addb
and
dec
adc
rcrb
add
repz
xchg
mov
pop
shrl
mov
test
sbb
test
aad
fbstp
sbb
jecxz
push
xchg
sbb
sbb
inc
roll
in
out
mov
mov
cmpsl
xor
xchg
adc
cmp
call
cmc
xchg
mov
incl
pop
cli
xchg
add
xor
lods
fs
rcll
sbb
push
arpl
sub
orb
mov
mov
and
push
sbb
and
push
fdiv
dec
xchg
in
jae
fnstenv
cwtl
sub
jb
andb
loope
scas
mov
dec
cwtl
dec
loop
pushf
sub
jnp
mov
fsubl
cmp
dec
addr16
fcoms
clc
repz
mov
jb
mov
sbb
and
ja
adc
mov
mov
xchg
lds
xor
icebp
dec
iret
push
xchg
in
xchg
sub
idivl
je
push
fstl
scas
lods
aaa
mov
aad
sbb
jns
andl
pusha
roll
in
out
loope
imul
and
addb
jecxz
in
cmp
and
cld
idivb
xchg
adc
call
xlat
lret
lahf
sbb
scas
cmc
jle
adcb
mov
jb
in
mov
loopne
sbb
cli
jge
lahf
sbb
fistpl
imul
sbb
push
aam
and
cld
push
loop
jl
mov
push
jmp
dec
int3
push
xchg
jns
add
sub
or
ljmp
lret
inc
popf
sbb
jbe
orb
adc
push
inc
push
adcb
xchg
cmpsl
sub
xchg
adc
push
sbb
ret
out
lock
push
popa
dec
iret
dec
imul
testl
jmp
mov
sbb
push
adc
ficoml
jnp
cmc
xor
rcll
popf
and
jle
mov
xchg
fstps
in
jo
lret
nop
sahf
adc
iret
jae
jge
xchg
xchg
aam
fisubs
outsl
repnz
fdivrl
mov
pop
mov
push
frstor
push
mov
mov
dec
popf
sbb
sub
add
push
push
fcomps
imul
dec
rcll
push
test
movsb
push
stc
jl
xchg
fs
xor
int3
push
xchg
sbb
xor
adc
arpl
insl
lock
roll
sbb
jbe
addl
xchg
mov
inc
popf
push
sbb
and
add
loopne
ljmp
iret
push
pop
or
jnp
test
mov
pop
fbld
insb
repz
rolb
xchg
sbb
jns
jle
lea
push
fisubrl
in
mov
adc
mov
sti
jle
mov
dec
rcrl
sub
jo
jmp
adc
lods
xor
std
adc
loop
jmp
ret
and
and
mov
mov
scas
dec
and
jbe
mov
sbb
cli
lods
mov
scas
add
push
push
inc
pop
loop
in
mov
sar
test
movsl
sub
xchg
nop
xlat
pop
loope
ret
outsl
cmp
pushf
pop
mov
sub
or
mov
rcr
dec
xchg
sbb
jne
addb
adc
jecxz
xchg
mov
andl
adc
inc
push
add
leave
jecxz
out
lock
dec
iret
dec
mov
push
jp
test
xchg
push
repz
ret
negl
mov
sahf
and
cld
orl
adc
pop
in
out
lds
aas
cmp
test
popa
pop
add
push
add
adc
dec
sbb
dec
adc
into
sbb
aad
js
mov
xchg
mov
xchg
aam
sbb
mov
push
xchg
jle
add
clc
ss
sub
mov
leave
loope
out
lds
pop
adc
test
testb
pop
outsl
ss
cmp
dec
lds
out
andl
cmp
inc
mov
mov
xchg
pop
hlt
jl
pusha
lods
hlt
mov
adcl
sti
stos
inc
ret
cmp
dec
out
dec
add
push
stos
lret
mov
adc
add
push
jmp
dec
sarb
scas
and
jnp
ret
stos
insl
cmp
adc
scas
dec
cltd
and
add
pusha
pop
dec
push
push
jecxz
or
mov
push
xchg
sbb
cmpl
or
inc
sub
fucomp
fisttpl
cmpsb
out
mov
stos
sub
pushf
adc
fadds
ret
call
mov
mov
jle
xchg
lea
dec
repz
repnz
dec
inc
or
mov
mov
sbb
les
imul
and
jge
lahf
and
pop
loop
in
cmp
adc
pop
lods
sub
xchg
nop
fldt
xor
pop
fcompl
mov
pop
andb
stc
rorb
aaa
mov
sbb
orb
lea
fcmovnbe
out
out
jb
mov
pusha
lret
rcll
lcall
out
and
sbb
xor
inc
gs
dec
cltd
and
movsl
add
xor
pushf
aaa
imul
push
add
test
pop
out
data16
sarl
adc
pop
push
popf
and
jle
mov
jecxz
in
pusha
aaa
cmp
enter
pop
or
test
push
aam
call
mov
sbb
je
add
xchg
adc
pop
pop
mov
jge
rcrb
lods
ja
addl
loop
in
jae
push
inc
dec
rcll
push
movsl
sub
push
or
pop
cmp
outsb
xor
aas
ret
dec
rcrb
daa
adc
out
ss
sbb
loope
dec
jge
fbld
test
jp
mov
push
xlat
lret
arpl
jno
inc
cmpsb
dec
rclb
fwait
xor
clc
jle
lahf
sbb
push
lret
dec
push
ljmp
iret
push
mov
idiv
pop
daa
fwait
or
aas
data16
rorb
xchg
cmpsl
push
add
mov
sub
fcmovnb
inc
jo
jae
mov
push
popf
and
jle
mov
cmp
outsl
mov
dec
iret
adc
das
out
stos
and
fisubs
jae
movsl
ljmp
xchg
pop
xor
bswap
dec
pop
out
jmp
enter
pushf
push
cmpsb
sub
and
loop
cmp
pusha
stos
repnz
push
jp
scas
xor
adcb
loope
iret
outsl
ljmp
xchg
pop
mov
dec
jmp
shlb
in
mov
mov
adc
and
ja
adc
mov
pop
out
pop
out
push
inc
fdivrs
fwait
push
adc
scas
jne
stos
and
or
ficomps
ret
cmp
enter
and
mov
jp
test
pop
cmp
dec
repnz
inc
sahf
push
rcrb
and
jbe,pn
sbb
ficompl
push
mov
mov
lds
or
and
je
mov
xchg
aad
loop
popa
and
gs
dec
into
sbb
push
cwtl
sub
pop
std
add
push
call
ret
push
lahf
sbb
jl
lods
scas
mov
push
loope
inc
jo
mov
mov
movsl
js
jns
mov
cli
jge
popf
add
fcoms
gs
repz
clc
popa
aad
adc
push
test
jl
xchg
fcoms
insl
or
rorl
aad
sbb
mov
sbb
jno
jno
roll
nop
mov
adc
addb
or
push
in
rorl
test
lock
popa
or
aas
fstpl
push
xchg
and
sub
xor
jp
jl
fwait
imul
mov
push
and
add
adc
pop
sbb
in
cmp
adc
fadds
jle
loopne
mov
pop
clc
lock
int
fsubl
cwtl
pop
mov
jge
int3
dec
fnstenv
cmp
rcrl
and
xor
cmpsl
jne
adc
mov
out
in
or
mov
enter
in
andl
mov
pop
adc
fsubrs
imul
sub
cmp
sub
mov
pop
cmp
leave
shr
and
aad
pop
mov
jnp
test
pop
sub
adc
in
add
fisttpll
movl
mov
lahf
pop
add
jae
mov
add
xlat
and
sbb
push
inc
inc
dec
cmp
repnz
popf
fisubs
add
pop
lods
dec
mov
ja
popa
mov
inc
gs
and
sbb
adc
and
inc
mov
stos
fldenv
js
mov
sti
and
add
push
jno
inc
adc
cwtl
pop
sahf
sbb
clc
xchg
jne
into
jb
jmp
ret
dec
pop
popf
sbb
scas
sub
sub
pusha
out
sbb
mov
icebp
mov
sbb
jbe
out
add
adc
in
cmp
adc
xchg
stos
stc
xchg
ret
mov
pop
fcompl
sub
ja
pusha
fldenv
shrb
jle
and
sub
jne
sub
and
pop
or
testb
ljmp
sbb
and
adcl
loopne
sahf
jo
mov
jbe
or
jb
jmp
pop
aam
fbld
insb
out
mov
gs
sahf
and
testb
pusha
inc
xlat
ljmp
iret
adc
je
stos
and
shlb
cmp
sbb
jns
ds
das
xor
xchg
aam
xchg
repnz
repnz
pop
aad
ret
call
or
xchg
push
aad
jmp
aaa
jno
ss
imul
pushf
pop
sti
stos
ja
jns
xchg
mov
inc
lret
adcb
push
lods
sub
dec
sbb
out
repz
push
int3
dec
into
or
push
incb
arpl
gs
inc
xchg
pop
loopne
test
jp
mov
push
xlat
movb
lret
imul
rcrb
jb
scas
sub
sahf
sbb
push
lret
push
mov
mov
lds
dec
cltd
and
fs
test
arpl
insl
pop
mov
rcll
xchg
decl
icebp
sub
and
push
fisttps
push
cmp
fisubrl
cld
jns
and
inc
cmp
in
insb
arpl
adc
adc
idivb
inc
or
in
rep
shl
inc
bound
sbb
js
jp
nop
xlat
push
dec
in
adc
loop
mov
and
sti
movsb
js
bswap
mov
loop
lock
mov
push
rcrl
mov
sbb
xchg
fs
xor
inc
or
xor
repz
loopne
inc
mov
push
lret
dec
xchg
adc
add
sub
jle
jl
pushf
adc
arpl
lds
inc
dec
leave
pop
lcall
jno
mov
data16
jo
mov
clc
test
jnp
xor
daa
in
sbb
int
insb
repz
aam
rclb
and
push
cld
addl
mov
loopne
in
out
mov
mov
or
and
je
mov
xchg
aad
loop
popa
test
gs
les
sbb
testb
pop
push
dec
call
gs
int
lahf
sbb
pushf
sub
loope
inc
jo
mov
mov
movsl
push
add
cli
jge
popf
add
fcoms
gs
repz
cwtl
popa
aad
adc
push
test
jl
xchg
clc
push
iret
insl
in
cmp
ret
aad
sbb
lods
lods
sub
mov
sbb
jno
jno
roll
jo
pop
adc
addb
or
push
in
shrl
scas
jns
test
popa
call
insl
icebp
push
xchg
add
sub
xor
jp
pushf
sbb
imul
repz
mov
rclb
and
add
adc
pop
jl
in
cmp
adc
mov
sti
jle
add
mov
pop
fdiv
outsl
int
fsubr
cmp
xor
je
xchg
xchg
adc
repnz
jmp
inc
stc
push
jecxz
lds
sti
sbbl
das
mov
mov
mov
push
jbe
sub
and
insl
dec
push
inc
sarl
icebp
test
fstpl
adc
sbb
jl
mov
insb
jmp
popa
mov
push
lcall
jnp
inc
or
mov
lock
movsl
inc
rorl
and
or
sbbl
imul
lret
adc
adc
clc
jg
popf
sbb
out
repnz
shlb
pusha
cwtd
sbb
sub
std
jp
mov
xchg
sub
mov
inc
cltd
xchg
and
icebp
sub
or
imul
out
mov
leave
inc
rcrl
and
mov
arpl
pop
jecxz
in
cmp
dec
scas
pop
imulb
fdivs
ret
xchg
nop
lock
fisubl
inc
outsl
add
push
pop
cwtl
xchg
ret
jge
xor
cmovb
pop
out
jmp
push
jo
sbb
cli
jns
xchg
push
inc
lret
push
rcrb
fwait
push
lods
sub
jb
lahf
stos
pop
loope
out
xor
aas
ret
dec
mov
test
incb
arpl
gs
ljmp
scas
into
sub
mov
push
xlat
cmpsb
inc
mov
pop
dec
rcrb
push
pop
scas
sub
lahf
sbb
jle
dec
inc
ljmp
iret
push
mov
cmc
mov
daa
fwait
cmpsl
mov
pop
jecxz
aas
data16
rorb
xchg
cmpsl
testb
jb
jns
jg
fwait
or
pop
in
xchg
jae
push
jp
jecxz
push
popf
and
jle
mov
pop
dec
leave
outsl
mov
mov
inc
mov
mov
das
push
stos
and
inc
fisubs
jae
outsb
ss
inc
lds
adc
cmpsl
mov
scas
dec
pop
out
jmp
pop
ret
mov
xchg
mov
cmpsb
push
mov
pop
fsubs
mov
out
fisttpl
adc
cmpsb
xorb
xor
jl
sbb
push
repz
ret
dec
sahf
sbb
sbb
lock
pop
adc
sub
mov
xchg
inc
mov
add
cli
pop
mov
cmpsb
pop
pushf
imul
mov
popa
push
pusha
test
mov
andb
jge
cmpsl
and
xchg
inc
cmp
pop
insl
iret
push
cltd
and
daa
cmpsl
xor
addb
scas
jmp
rolb
cwtl
outsl
lahf
add
mov
scas
addl
or
fistpl
imul
xor
inc
pop
shlb
mov
movq
mov
mov
pusha
out
cmp
inc
mov
adc
lods
xor
jge
mov
dec
mov
inc
mov
push
xchg
and
add
movsb
push
popa
adc
pop
jg
jmp
cmp
or
mov
cli
orl
pop
fisubrl
fcomi
push
cmp
xor
jne
xchg
nop
adc
xor
or
sbb
es
xor
jp
mov
adc
jle
mov
addr16
pop
loope
sbb
jl
orb
or
push
inc
int3
dec
rcrb
lcall
jle
adc
xchg
popa
add
lock
ret
ds
sbb
xlat
and
xor
jp
orb
aad
xlat
in
bnd
mov
push
xchg
sbb
jns
jnp
xchg
adc
dec
in
push
mov
inc
vandnps
int3
sub
popf
movsl
pop
jecxz
icebp
clc
icebp
rolb
into
sbb
xchg
add
aam
call
gs
enter
and
cs
xor
js
mov
push
loope
inc
mov
push
dec
rclb
mov
cli
jge
popf
sbb
mov
jae
shrl
push
rcll
push
test
push
and
pop
fstpl
xor
mov
xchg
mov
add
dec
sbb
xor
aam
ljmp
lods
dec
add
jmp
in
sub
add
push
mov
stos
pusha
movsl
push
scas
mov
cs
and
sbb
jne
pop
cmp
repnz
lds
dec
std
sbb
divl
test
aad
fistps
insl
jmp
jne
push
xor
add
jns
orl
adc
popa
in
imul
cmp
lods
dec
pop
sbbb
add
nop
jle
jmp
les
adc
xor
test
push
les
xchg
ljmp
imul
xor
mov
pop
test
in
push
mov
fidivrl
rorl
testb
xchg
push
push
loopne
fsubp
cmp
daa
imul
scas
sub
jl
xchg
popa
aas
int3
punpckldq
dec
xor
testb
ret
es
xor
lods
sbb
test
mov
fistl
dec
xchg
sbb
jbe
orb
adc
mov
in
repz
cmp
sbb
and
xor
mov
adc
ljmp
inc
es
adc
lods
xor
mov
mov
mov
pop
jecxz
call
outsl
push
lret
pop
mov
mov
mov
cld
jg
fwait
adc
inc
out
mov
ret
or
rcll
xchg
and
mov
xchg
mov
cmp
mov
adc
xchg
jge
mov
insl
call
dec
into
pop
sbb
cmp
adc
push
aaa
imul
enter
xchg
and
cmpsl
and
roll
loop
in
outsl
imul
dec
leave
adc
inc
cmp
dec
das
mov
xchg
outsb
jmp
cmp
pop
mov
stos
xor
ja
mov
fcompl
mov
fisttpl
ljmp
or
push
shll
inc
mov
jb
mov
pop
lcall
adc
and
pop
loopne
bound
dec
sarl
jp
cwtl
jp
test
push
push
fbld
insb
out
out
ljmp
sahf
and
testb
movb
jb
mov
push
popf
and
imul
sbb
pop
shll
xchg
pop
sbbl
orl
aad
dec
sarl
xchg
xor
ljmp
sbb
add
popf
scas
movsb
rcrl
fistpll
pop
notl
mov
add
add
push
sub
in
aas
xor
aaa
stos
dec
rcll
push
movsl
sub
xchg
nop
xlat
pop
loope
jmp
xor
int3
push
xchg
sbb
hlt
jnp
lods
push
mov
cmp
icebp
mov
cmc
inc
leave
dec
rcrl
popf
and
sub
add
pop
inc
mov
inc
cmc
push
adc
scas
in
jge,pn
icebp
sbb
ljmp
int
add
mov
jp
mov
frstor
mov
inc
lret
sbb
mov
pop
push
ficompl
out
mov
push
and
mov
jle
lahf
or
xchg
mov
mov
dec
sbb
testb
pop
fidivrs
inc
xlat
inc
push
xchg
and
and
orb
mov
xlat
pusha
out
icebp
mov
mov
push
add
cmpsb
sub
add
push
push
aam
jecxz
pusha
xchg
jb
dec
rcrl
scas
pop
scas
sub
xchg
cld
jecxz
dec
push
jmp
xor
int3
push
sahf
sbb
mov
adc
fbld
insl
jmp
sahf
pop
jge
shll
test
xor
pop
adc
out
mov
pop
in
mov
pop
lcall
ja
test
addr16
push
xchg
push
mulb
mov
movsb
inc
pop
mov
test
mov
or
ficompl
push
dec
cmp
in
out
dec
rcll
mov
je
jle
pushf
sbb
into
jo
mov
adc
push
cmc
xor
cmp
fisubrs
mov
inc
rcrl
jge
lret
js
addb
out
push
dec
in
imul
and
addl
inc
aad
mov
loop
dec
int
lea
inc
and
jmp
cmp
dec
xchg
and
add
fsubrl
adc
lock
fldt
and
jbe
test
nop
adc
jmp
push
in
adc
lcall
ja
test
push
icebp
sbb
xor
leave
mov
fwait
es
xor
mov
aam
mov
dec
sub
mov
cld
addl
cwtl
shl
popa
in
out
mov
fs
or
and
je
mov
xchg
aad
inc
ret
popa
dec
lock
dec
into
sbb
or
sub
int3
push
push
call
fs
int
lahf
sbb
subb
in
adc
push
mov
push
push
rclb
movsl
ja
sub
sbb
cmp
mov
repz
cmc
adc
lret
xor
xchg
inc
int3
sub
xor
rcrl
test
inc
sub
addr16
dec
pop
inc
mov
pop
in
mov
xchg
aaa
add
std
addb
movsl
push
loope
in
out
outsb
pop
mov
pop
xchg
movsl
xor
cmp
loope
mov
mov
adc
sub
test
aad
fistps
insl
jmp
xor
test
orl
push
pop
fisubl
imul
out
push
insl
ficompl
and
jle
nop
jle
and
les
int
adc
cli
in
mov
or
call
mov
push
sub
jle
jge
lahf
pop
xor
out
jmp
cltd
out
inc
stos
and
sub
jbe
and
ljmp
mov
imul
adc
lea
das
mov
xchg
outsb
jmp
cmp
arpl
sbb
jnp
lea
xchg
mov
dec
out
mov
aas
in
roll
and
jb
movsl
jnp
adc
pop
in
repz
cmp
sbb
je
xor
mov
push
lret
fisubl
imul
out
adc
lods
xor
shlb
mov
mov
pop
jecxz
aas
mov
jae
push
xchg
pop
inc
add
jg
fwait
adc
sub
mov
ret
lret
rcll
xchg
and
mulb
xchg
stos
xchg
fstps
cmp
mov
adc
xchg
jge
mov
xchg
ficomps
insl
call
dec
mov
push
sbb
cmp
adc
xchg
aaa
imul
enter
xchg
and
cmpsl
and
push
roll
loop
in
outsl
out
push
dec
leave
adc
push
cmp
or
mov
xchg
outsb
jmp
cmp
pop
mov
xchg
imull
ja
test
xchg
pop
loopne
add
and
inc
out
dec
icebp
sbb
and
adcl
enter
mov
push
pusha
mov
lahf
mov
cs
and
sbb
gs
outsl
cmp
repz
jge
xchg
xchg
lods
sub
jnp
test
xchg
push
mov
mov
mov
sbb
lods
nop
aaa
pop
mov
call
mov
pop
mov
jle
test
xchg
jecxz
jecxz
in
insb
push
mov
or
pop
mov
ja
xchg
xchg
fmul
dec
rclb
pop
ret
inc
int
outsl
or
and
es
je
movsb
sbb
dec
rclb
out
icebp
mov
dec
lret
lret
cmp
fildll
mov
push
aam
inc
jae
jae
mov
test
or
addl
or
fs
jg
outsb
xor
dec
call
es
test
push
iret
cmp
push
mov
lods
pop
mov
mov
mov
add
nop
adc
jmp
mov
push
mov
jns
jle
cmc
enter
loopne
ljmp
push
xchg
dec
mov
movsl
int
or
jmp
les
mov
test
mov
sub
ficompl
mov
in
fisttpl
mov
je
jle
rcrb
gs
inc
mov
cmp
cwtl
pop
mov
adc
adc
imul
inc
sarl
jge
cltd
js
addb
out
push
in
in
imul
and
addl
inc
aad
mov
in
inc
dec
int
lea
fs
lds
shr
mov
and
lods
xor
or
in
insl
lock
fldt
add
jbe
enter
push
jecxz
jmp
je
pop
push
rclb
lcall
ja
test
icebp
js
xor
leave
rcrb
sbb
es
xor
clc
rorb
insb
repz
mov
dec
jbe
mov
mov
sub
pop
cmp
and
test
out
sarl
mov
adc
outsl
cld
cmp
xchg
mov
insb
sub
pop
sub
jnp
xor
daa
iret
sbb
fnstsw
rol
cmp
dec
jmp
sub
xor
mov
pop
test
mov
fidivrl
pop
popf
or
sub
add
pop
fidivrs
mov
cltd
inc
pop
insb
rcll
and
je
mov
xchg
push
out
gs
xor
pop
dec
xchg
sbb
xor
cmpsb
pop
fsubl
xchg
ss
push
insl
push
mov
std
addb
pop
shl
pop
in
out
outsb
mov
out
movsl
push
or
and
add
inc
ret
repnz
insl
fisubs
cltd
sbb
das
movsl
xor
jp
push
xor
call
movsb
inc
scas
push
mov
lcall
movsl
dec
fwait
pop
roll
jae
adc
dec
iret
sbbb
sbb
mov
fstps
in
push
mov
adc
mov
sub
mov
nop
ficomps
insl
call
dec
xor
fucomip
sbb
cmp
adc
outsb
lock
enter
xchg
and
cmpsl
and
sub
inc
dec
loop
in
outsl
push
imul
dec
leave
adc
out
std
and
das
mov
xchg
outsb
jmp
cmp
pop
mov
stos
xor
ja
mov
fcompl
mov
dec
xchg
sbb
jbe
orb
pop
shll
inc
mov
jb
mov
pop
lcall
adc
pop
loopne
add
dec
rcrl
jnp
mov
jbe
fbld
insb
out
into
jmp
mov
sahf
and
testb
movb
jb
loopne
leave
dec
iret
out
mov
cmpsl
sub
popf
or
ror
in
jo
xor
into
dec
into
sbb
jns
pop
stos
das
sbb
xchg
aam
retw
repnz
pop
aad
mov
xor
or
pop
out
add
and
push
jge
cmpsl
imul
lret
inc
int
fwait
lock
pop
fsubrl
adc
or
stos
stos
mov
stc
ret
cmp
pop
sti
xchg
aad
mov
sub
loopne
out
lock
rorl
mov
and
addb
adc
pop
inc
aam
jae
out
inc
dec
int3
push
fwait
sbb
add
addr16
iret
dec
cltd
and
jnp
sub
mov
push
dec
rep
repz
aam
decl
jns
lret
and
call
ja
push
and
push
popf
sbb
cld
stos
je
jbe
test
dec
lock
inc
xorb
inc
enter
cwtl
pop
lcall
nopl
stc
ret
dec
mov
xor
rorb
add
inc
or
xchg
fdivl
lock
jecxz
fnstcw
push
add
xchg
cmpsl
mov
loop
enter
inc
iret
dec
int
lcall
dec
add
and
mov
push
int3
push
xchg
and
es
hlt
cmp
fmull
cmp
mov
mov
sbb
mov
je
xchg
cmpsb
push
fistpl
mov
cmp
push
push
adc
sbb
jg
test
ljmp
pop
fucom
sbb
es
xor
fsts
dec
push
add
imul
or
mov
test
inc
push
in
out
mov
dec
lret
push
mov
sbb
mov
mov
xchg
aad
inc
insb
in
jo
mov
test
lods
xor
sub
arpl
imul
gs
push
xchg
sbb
js
addb
inc
dec
or
in
jno
enter
xchg
and
cmpsl
fisubrl
inc
fldcw
jecxz
in
ja
cltd
inc
ret
dec
lds
push
hlt
inc
stos
imul
ret
pop
outsb
xchg
sbb
sub
movsb
fwait
test
push
cmp
call
push
jno
sbb
jbe
js
xchg
imul
sbb
sbb
mov
stc
stos
mov
pushf
rcrb
out
xor
iret
dec
lods
sbb
sub
push
into
aad
jmp
data16
in
add
and
sub
lea
push
test
out
jo
leave
dec
rcrl
inc
push
lods
sub
sahf
sbb
or
aaa
mov
bound
adc
jp
mov
es
out
push
outsl
jmp
cmp
inc
cwtl
and
iret
and
or
sbb
out
lock
pop
jecxz
sti
sbb
push
push
fsubs
push
inc
lret
outsb
rorb
hlt
push
movsl
sub
xchg
rcll
addr16
dec
int3
dec
rcrb
daa
stos
sub
ja
test
adc
insl
lock
dec
popf
sbb
cmp
xchg
mov
push
xlat
lret
out
jb
mov
stos
jle
jnp
scas
jne
orl
xchg
push
loopne
and
xlat
loopne
cltd
sbb
mov
stc
test
push
int
cli
aas
ret
mov
rorb
sahf
sbb
scas
sub
mov
in
mov
inc
mov
mov
stos
mov
add
push
jecxz
in
cmp
out
mov
adc
das
out
stos
cli
xchg
mov
push
push
ret
cmp
xlat
inc
int
fwait
xor
js
mov
cltd
jg
dec
iret
enter
aaa
data16
dec
shlb
pushf
pop
jle
jne
and
fsubs
mov
inc
lret
add
daa
xor
xor
jl
ficomps
mov
pop
fldenv
repnz
rcrl
fisubs
xchg
sbb
jnp
lea
xchg
jp
dec
out
outsb
mov
inc
push
xchg
and
sub
cwtl
pop
in
repz
mov
movb
repnz
adcl
pop
loopne
bnd
mov
sbb
sbb
add
negl
cltd
rcrl
lods
insl
divl
inc
xchg
js
shrl
and
push
out
dec
flds
cmp
out
pop
in
ficompl
cld
test
lahf
aaa
xchg
and
mov
test
dec
into
popf
movsl
pop
mov
lods
imull
xchg
aam
fisubs
mov
push
xchg
sbb
js
subb
push
frstor
push
mov
mov
jge
and
xor
fstps
in
jno
leave
inc
lds
adc
lods
xor
xchg
aad
sbb
jmp
ret
push
xchg
movsl
xchg
sbb
dec
popa
out
ss
stc
loop
dec
int
popf
and
cli
mov
add
rcr
pop
cmp
imul
push
adc
scas
in
das
jge
icebp
sbb
ljmp
int
add
mov
jp
mov
frstor
mov
inc
lret
sbb
mov
inc
mov
sub
dec
les
and
jg
sub
xchg
fldcw
in
jo
mov
adc
lods
xor
jge
xchg
mov
outsl
jb
ds
movb
xchg
lcall
incl
lahf
inc
out
cltd
xlat
cmp
jns
and
ljmp
push
pop
bound
inc
lret
fwait
sahf
or
jle
push
or
sbb
mov
adc
stos
data16
daa
xchg
dec
stos
sub
dec
iret
mov
roll
pop
repz
in
pushf
inc
stos
es
cmp
inc
pop
add
fdivrl
jmp
jg
inc
ret
xor
sbb
ljmp
lods
xor
das
test
cltd
pop
enter
outsl
jmp
in
pop
sti
mov
xchg
and
dec
leave
inc
mov
in
in
test
es
and
sub
dec
lret
dec
aaa
.byte
