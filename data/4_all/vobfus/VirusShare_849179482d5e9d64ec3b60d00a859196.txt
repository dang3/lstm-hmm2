mov
jmp
mov
inc
inc
inc
hlt
inc
fadd
inc
inc
inc
inc
rcrb
inc
pushf
add
or
inc
inc
cmp
dec
inc
inc
inc
inc
and
and
inc
inc
inc
sarb
inc
inc
pusha
cmp
call
nop
adc
inc
inc
inc
js
xchg
in
inc
inc
inc
inc
lock
or
inc
inc
inc
inc
push
mov
inc
inc
mov
inc
adcb
inc
inc
inc
sub
sbb
fsub
adc
out
fildll
loopne
add
add
add
xor
jg
cmp
pushl
mov
testb
stos
fstsw
fdivrs
leave
add
data16
in
inc
mov
mov
movl
nop
lock
mov
xor
and
int3
pop
les
jbe
test
sbb
pop
add
mov
fnstsw
push
dec
mov
popf
push
push
xchg
les
dec
mov
or
sti
pop
and
nop
mov
add
cmpsb
call
or
mov
cmp
repnz
adc
pop
xlat
std
and
movsb
aas
add
jne
je
js
orb
sbb
or
int3
mov
in
movsl
pop
in
dec
mov
mov
adc
push
inc
xor
in
ss
or
fcmovnu
sahf
in
adc
clc
xor
jae
add
or
mov
pop
xlat
add
addb
mov
mov
outsl
add
jae
add
nop
xchg
cmp
pop
pop
add
xlat
jne
jl
cmpsl
add
sub
mov
xchg
adc
xchg
adc
popa
ja
mov
sbb
adc
pusha
cmp
or
insb
cs
fsubrl
in
pop
decl
loop
add
sbb
or
mov
dec
les
fwait
test
or
es
lea
add
popf
insb
pusha
icebp
call
lock
lcall
sti
mov
pop
jne
jb
aas
adc
mov
jle
sbbb
pop
repz
in
pop
mov
mov
jne
xlat
sarl
cmp
xchg
adc
xchg
sbb
test
push
nop
leave
sahf
add
pop
mov
frstor
ja
adc
inc
test
add
pop
mov
testb
mov
insb
inc
adc
lock
cmpsl
cld
cmp
xchg
mov
pop
data16
add
sahf
mov
call
nop
leave
ficoms
ret
or
fldenv
insb
jo
or
mov
das
add
dec
js
lock
jae
push
mov
inc
xor
jmp
pop
or
das
jecxz
jnp
and
inc
sbb
or
testb
aas
femms
adc
fnstenv
ja
add
daa
pop
push
pop
sub
sahf
mov
pop
lahf
mov
dec
cmpb
push
das
ror
adc
xor
popf
mov
cmovo
sbb
add
fwait
cmpsb
imul
sub
shr
out
out
add
add
daa
add
mov
inc
add
dec
in
sub
cmp
cltd
test
sbb
push
pop
ss
pop
pushf
icebp
adc
cmp
test
pop
les
sbb
movsb
int
xchg
test
pop
xchg
mov
pop
pop
test
fiadds
xchg
psllq
jmp
xchg
call
mov
notl
mov
mov
and
add
xor
ljmp
lcall
mov
mov
fdivs
test
pop
insb
push
pushf
sbb
aam
insb
pop
push
pushl
add
fisubrs
xor
xchg
pop
sub
cmp
add
lret
in
jg
cld
pop
imul
push
jo
ljmp
push
xor
mov
xor
cs
inc
test
leave
cltd
in
sub
shlb
lds
or
notb
or
sub
leave
cmp
cltd
inc
es
movl
sbb
pop
outsb
or
pop
add
inc
mov
shll
enter
shll
add
pop
imul
jge
jle
xor
jb
js
jo
aam
jmp
int
in
in
hlt
jb
adc
in
push
ja
mov
mov
inc
jp
ja
dec
mov
int3
pop
out
and
xor
push
or
popa
pushf
int3
roll
sbb
or
xor
js
inc
sarl
jns
sbb
lahf
jmp
pop
push
add
mov
subl
pop
repnz
mov
or
sub
or
cmp
and
add
cltd
dec
loopne
xlat
add
jne
and
add
addr16
fcompl
ja
daa
pop
stc
pop
adc
and
sbb
in
pop
mov
pop
xor
and
mov
pop
push
les
fs
rcrb
and
je
fcomps
inc
push
cmp
xor
insb
and
push
je
enter
push
pushf
push
nop
xchg
orl
push
inc
dec
push
jb
cld
push
mov
push
cld
push
xor
and
mov
dec
push
hlt
dec
movsb
jo
pushf
sbb
xor
dec
test
cmp
enter
dec
mov
nop
inc
push
insb
sub
dec
and
and
dec
test
dec
cld
dec
fs
inc
dec
mov
and
sbbl
sbb
in
inc
mov
leave
inc
rolb
xor
inc
dec
push
in
mov
fs
inc
push
inc
jb
subl
lret
xchg
xchg
int
inc
and
orb
pop
outsb
xchg
and
and
xor
push
mov
insb
adc
inc
dec
mov
xlat
xor
sub
cld
jo
int
imul
and
insb
lcall
adc
xor
mov
mov
outsb
shll
xor
lcall
xor
js
insl
cmp
jae
call
lcall
adc
minps
cmp
int3
adc
lret
dec
cs
xlat
adc
add
inc
imul
outsb
or
cmp
xlat
je
repz
mov
pop
pop
repz
add
jne
xchg
daa
fsubl
pusha
bsf
insb
mov
xlat
jne
mov
in
add
jl
int
dec
xor
pop
jb
and
cmp
lret
cmp
andb
shll
pop
pop
or
je
xor
mov
xor
in
mov
cmp
addb
jne
lods
sub
adc
pop
enter
insl
roll
push
lea
decl
sbb
aam
out
mov
incl
into
pusha
lcall
std
xchg
insb
jl
fldt
push
lcall
sbb
dec
sub
idivb
jbe,pt
and
cmp
dec
add
outsb
dec
ret
fildl
or
fwait
stos
ret
fstpt
js
inc
mov
mov
clc
stos
insl
mov
mov
lods
or
jg
mov
scas
mov
inc
fdivl
pop
jae
mov
jecxz
jo
push
mov
mov
fldt
lcall
pop
insb
fwait
lods
fistpl
repz
and
hlt
popf
in
aam
adc
leave
cmpb
push
push
pop
pushf
mov
inc
push
mov
in
leave
pop
loopne
lods
and
pop
or
movsb
dec
pop
repnz
scas
mov
jns
js
dec
mov
or
mov
das
jns
dec
cld
xchg
jl
push
and
jns,pn
test
hlt
xchg
mov
dec
pop
jb
ret
mov
cmp
adc
xchg
aam
and
pop
add
mov
and
jbe
cwtl
lss
push
or
push
bound
add
dec
aaa
pusha
sub
xor
pop
fs
cmp
aas
sbb
inc
sarl
xchg
jle
movb
jmp
dec
pop
lock
popf
or
fists
popa
pop
fsubl
jae
dec
insb
add
bound
ljmp
fcmovnb
jge
imul
aad
nop
pop
fs
xchg
je
movsb
jbe
roll
mov
gs
add
gs
imulb
pushf
cwtl
pop
rolb
jo
xchg
stos
jmp
mov
clc
add
pop
mov
pop
jl
sbb
pushf
mov
jbe
mov
ret
xor
mov
cmpsl
imul
fmul
in
pop
cmp
dec
insb
filds
dec
jbe
in
into
lahf
loopne
dec
dec
imul
and
mov
testl
popf
shlb
pop
js
imul
pop
mov
mov
add
pushl
into
cmp
add
and
pop
mov
mov
pushf
sarl
adc
and
jg
test
incb
sub
pop
push
inc
or
lret
subb
pop
push
push
pop
or
xor
push
push
dec
subb
add
outsb
int
sti
inc
ljmp
mov
mov
int
lret
lods
imul
xor
lret
int
mov
pop
fcoml
xor
jae
daa
xor
test
sbb
mov
pop
sub
fnstcw
lock
jae
cld
mov
pop
fsubr
rcr
fsub
mov
xor
inc
aam
cmc
lret
insl
or
add
sub
mov
in
or
popf
fldt
cmpsl
mov
cwtl
push
sbb
xchg
loope
add
mov
mov
scas
arpl
mov
mov
repz
iret
call
dec
sti
sub
jg
xchg
insb
push
pop
jnp
dec
jae
cmpl
add
jmp
lcall
daa
cmp
imul
imul
dec
shll
push
addr16
shll
fcomip
mov
lcall
add
sub
dec
shll
xchg
cmpsl
ss
shll
iret
jecxz
or
pop
xor
outsl
cmpsb
imul
insb
lcall
dec
daa
pop
iret
xor
add
fnstenvs
sub
add
cmp
mov
xor
mov
ret
mov
dec
push
mov
xchg
mov
call
in
cwtl
sarb
leave
sub
pushf
lret
add
mov
in
test
cmp
cmpsl
or
scas
in
xchg
loopne
cwtl
xchg
add
xchg
test
mov
in
mov
adc
aas
ror
fnstenv
lds
cmpsl
xchg
cmp
mov
sub
in
fcomp
add
xchg
push
repnz
mov
and
dec
cmpsb
in
mov
fucomi
xchg
cmp
xlat
adc
jnp
in
sub
mov
fcmovnb
call
scas
pop
or
out
dec
pop
leave
mov
push
sbb
xor
mov
daa
push
flds
rclb
push
repnz
pop
pop
scas
fsubrs
xchg
lahf
inc
mov
and
lret
pop
leave
xor
mov
xor
add
jg
rcrl
xchg
mov
sahf
xchg
es
aaa
test
cmpxchg
add
cs
loopne
jno
inc
das
bound
cmp
jg
mov
xor
test
in
and
call
push
sub
push
outsb
mov
jl
jl
push
push
jl
or
mov
daa
lret
xor
xor
or
in
mov
inc
push
jge
push
fistps
pop
jb
stc
mov
mov
xchg
jmp
pop
dec
add
and
mov
inc
das
aam
pop
aaa
dec
arpl
aam
pusha
movaps
jl
lret
gs
rcll
mov
pop
rcrl
add
loopne
jne
xlat
mov
pop
rorb
inc
sbb
pop
sbb
adc
int
cmp
imul
xchg
xchg
add
xor
daa
out
pop
pushf
lahf
dec
xchg
pop
scas
pop
outsb
pop
sahf
jnp
pop
or
cld
js
int
lcall
fcomp
xchg
stc
sbb
pop
pop
xchg
or
decl
cwtl
imul
mov
dec
add
cwtl
xor
fucomip
rolb
or
pop
daa
mov
add
andl
sbb
test
orl
in
and
pop
jbe
cmp
sub
add
jbe
pop
add
cmp
xorl
daa
mov
add
and
add
enter
enter
jb
or
or
sbb
pop
dec
xor
shlb
mov
mov
or
daa
xorb
pop
fdivr
inc
add
in
orb
nop
or
iret
push
fyl2xp1
ja
dec
fs
inc
add
enter
add
and
pop
daa
call
push
les
inc
pop
cmpsb
imul
xor
inc
fwait
ret
xlat
cmp
cmp
cmp
cmp
xor
cmpsb
imul
cmpsb
imul
and
shll
dec
loopne
cli
adc
shll
jl
shll
sbb
lcall
sbbb
rcll
push
and
fmuls
cmp
xor
cmp
nop
cmp
je
lcall
add
adc
stc
dec
roll
imul
stc
inc
idivb
add
fs
inc
push
push
pop
js
mov
sub
inc
cmp
fs
outsl
dec
or
rorb
add
lahf
or
and
push
jl
sti
or
fs
lock
int3
stos
sbb
inc
aaa
sbb
sub
dec
add
popa
mov
mov
lock
xchg
push
orb
push
lret
nop
inc
add
pusha
add
sti
out
mov
testl
and
add
mov
adc
aaa
leave
adc
dec
add
sbb
cmp
dec
mov
or
sub
pop
sbb
xchg
movsl
dec
int3
or
mov
sub
jae
or
mov
mov
es
test
xchg
mov
adc
adc
mov
pop
lods
call
jns
pushf
fsubs
enter
sahf
fs
xchg
enter
xchg
cmp
popf
sar
lods
jns
and
js
test
mov
leave
inc
es
add
mov
dec
fdivs
xchg
adc
gs
daa
shrl
jns
xchg
adc
or
cwtl
imul
aam
add
gs
push
hlt
fnstcw
psllw
insb
push
cmpsb
sahf
das
dec
mov
dec
stos
sub
or
stc
xchg
mov
and
and
dec
mov
ret
sbb
jb
aaa
push
addl
adc
cmp
inc
mov
xchg
dec
jae
mov
push
mov
add
dec
sub
sahf
sbb
xor
jns
cmp
popl
cwtl
lock
or
inc
int3
sbb
mov
cmp
icebp
dec
pslld
pop
mov
movsb
icebp
xchg
add
pop
adc
adc
hlt
pop
xchg
icebp
or
jnp
pop
pop
adc
add
pop
nop
out
js
test
adc
cmp
repnz
xchg
add
add
xorl
inc
or
aam
mov
xor
cld
shll
sub
dec
push
nop
shll
ja
stc
xorb
dec
xor
add
fnstenv
hlt
add
cmpsb
cmp
nop
dec
adc
and
sahf
cmpsb
imul
fs
jnp
popf
jmp
mov
add
out
xchg
inc
outsl
jb
xor
inc
imul
aas
inc
push
outsl
arpl
je
insb
jne
add
fs
mov
inc
outsb
dec
dec
imul
je
outsl
outsb
jae
stc
pushl
inc
jne
push
push
push
inc
add
outsb
insb
outsl
popa
fs
imul
outsl
sbb
push
bound
jb
pop
cs
imul
pop
jge
das
xchg
sub
sub
sbb
add
xor
lods
out
mov
add
adc
pop
cmpsb
mov
dec
ret
add
sub
add
addr16
xlat
jge
add
or
xor
xor
pop
shrl
cmp
or
xor
xor
dec
xlat
xor
inc
jge
adc
sub
imul
stc
jae
sbb
jne
data16
or
sbb
add
add
decl
insl
cmp
mov
test
push
xchg
call
stc
ret
and
cli
lcall
cld
int3
dec
sbbb
inc
lret
mov
jmp
cltd
into
shl
xor
clc
outsb
sarb
into
add
cltd
iretw
adc
or
pusha
rcll
jb
pop
xor
and
outsl
jne
fnstsw
push
orb
daa
and
sbb
jae
xor
push
push
push
pop
sbb
or
pusha
orl
pop
cmp
in
push
addr16
cs
push
sub
jno
inc
cmp
pushl
jb
or
sub
sub
sub
lea
arpl
push
xor
fdivrp
lea
ja
fs
cmp
cs
dec
inc
pop
stos
adc
inc
inc
push
mov
bswap
add
clc
mov
cmp
mov
sub
jbe
pop
push
mov
insl
add
push
outsb
gs
out
jecxz
test
sub
fimuls
negl
push
outsl
mov
xor
inc
js
rcr
jnp
mov
je
sbb
mov
inc
rcll
shlb
aas
pop
movzbl
jb
jbe
adc
insl
mov
inc
insb
neg
pop
xor
gs
lods
nopl
jg
pusha
inc
or
push
sbb
ja
inc
xchg
insb
adc
insl
jae
popa
push
icebp
lock
pop
mov
push
jo
xor
adc
fmuls
repnz
pop
popa
jb
push
mov
jb
push
inc
push
pop
dec
insl
out
ret
aam
and
add
daa
arpl
pop
repz
add
shll
dec
add
pop
xor
shll
pusha
fs
shll
js
orb
dec
test
xor
mov
and
mov
rcr
pop
sub
idivb
jl
dec
push
dec
pusha
cmp
lret
ret
test
xchg
cmp
cld
scas
cmp
add
jecxz
fwait
mov
or
and
add
push
add
jp
mov
adc
or
roll
movl
add
dec
das
add
imul
insb
xor
adc
push
je
dec
outsl
jbe
dec
gs
outsb
sbb
cmp
inc
jns
sbbl
inc
cmp
inc
mov
push
arpl
in
and
cmp
or
in
enter
gs
lock
nop
dec
push
clc
dec
ja
sbb
mov
push
cmc
inc
xchg
push
jne
push
test
and
add
mov
inc
inc
insb
gs
outsb
fsubs
or
or
adc
or
inc
jae
iret
fnstsw
addr16
jns
xchg
out
inc
dec
mov
inc
adc
or
test
inc
pop
cmp
insb
and
leave
subl
mov
repz
and
adc
test
nop
sarl
sub
dec
cmp
push
lahf
fwait
insl
loop
mov
dec
cmova
das
cmp
sbb
out
arpl
stos
insb
inc
push
sti
mov
inc
inc
jns
mov
jo
cmp
pop
jo
dec
mov
push
aaa
nop
dec
imul
xor
fcomps
call
je
push
in
inc
adc
dec
inc
push
dec
sub
or
jmp
inc
or
addr16
rorl
das
mov
arpl
jl
sbb
popa
addr16
stos
je
jns
cmpl
dec
jae
inc
int3
dec
mov
and
xor
jmp
inc
adc
leave
mov
inc
adc
xchg
add
push
xchg
add
fs
cwtl
mov
push
jne
inc
imul
dec
popa
dec
add
in
into
and
fs
push
fs
mov
inc
in
mov
in
xchg
dec
cld
xor
dec
enter
mov
hlt
add
ret
jne
xor
add
in
sbb
adc
and
nop
cmp
push
add
add
sub
inc
adc
dec
push
inc
sbb
fdivrl
dec
pop
cmp
sub
les
xor
dec
insb
popa
ljmp
push
ljmp
cmp
or
andb
clc
or
aaa
pop
ss
shll
fs
int
dec
ss
pop
xor
mov
adc
clc
dec
sbb
out
xor
mov
xor
add
out
add
xor
imul
gs
jl
xchg
add
or
int3
stc
aam
adc
adc
dec
dec
inc
xchg
dec
push
fs
inc
fsub
xchg
sbb
mov
jecxz
je
add
inc
into
clc
fwait
adc
jmp
in
sub
inc
push
dec
inc
outsb
push
aas
pop
lock
test
xchg
dec
pusha
or
cmpl
cwtl
cld
push
dec
es
cli
mov
or
mov
inc
fsubrs
sbb
in
mov
mov
pushf
or
adc
or
sbb
dec
add
cmp
aas
and
enter
lret
insb
dec
enter
sub
movsb
inc
sub
and
sbb
mov
sbbb
je
cmp
mov
rorb
js
popa
sbbl
leave
dec
sub
gs
orl
in
inc
jb
pop
je
xchg
add
in
pop
fs
xchg
test
cmp
je
loopne
leave
add
jo
jae
nop
adc
and
pop
je
mull
das
xor
daa
cmp
orb
xor
mov
roll
arpl
jo
adc
gs
in
xchg
sbb
leave
fmull
mov
xchg
dec
insb
scas
mov
daa
iret
aas
sub
movsb
lods
test
dec
pop
xor
popa
arpl
cmp
push
mov
fistl
pop
popa
add
inc
push
cmp
mov
das
or
dec
push
fs
cwtl
add
arpl
daa
es
push
in
dec
xchg
mov
mov
mov
test
mov
push
aam
push
push
push
imulb
pop
popf
stos
jmp
pop
push
popf
lcall
cmp
orl
pop
int3
or
es
sbb
es
xchg
and
lret
push
jae
mov
mov
adc
or
lods
jnp
js
adc
mov
or
fsubrp
insl
dec
fs
in
jbe
cmp
add
jae
inc
outsl
jne
or
adc
or
sbbl
fldt
dec
push
or
xchg
popa
cmpsb
jmp
xchg
and
xor
mov
or
and
jnp
jo
repnz
jb
das
loope
inc
add
xor
testb
add
test
lret
pop
and
inc
imul
mov
add
or
pop
je
enter
and
testb
xor
lret
add
and
adc
arpl
sub
pop
xchg
mov
add
cwtl
add
add
lcall
arpl
jmp
or
es
mov
or
outsb
mov
push
iret
movsb
push
loopne
xchg
mov
inc
push
into
or
fcomps
push
sub
cmp
arpl
dec
nop
mov
roll
push
inc
clc
sub
pop
cmp
sti
and
xchg
rcl
push
push
push
insb
pop
sbb
dec
add
outsb
jl
mov
sti
or
or
and
and
sbb
out
mov
insl
dec
or
jae
loopne
inc
push
imul
test
jne
or
inc
add
or
in
cmp
dec
sbb
mov
sbb
in
and
int3
nop
popf
call
xchg
add
sub
pushf
push
movb
and
cmp
add
dec
enter
jb
add
shll
pop
xor
cmpsl
adc
pop
outsl
test
imul
push
inc
arpl
sub
fs
mov
sub
insb
cwtl
imul
jne
lods
push
dec
mov
xchg
mov
and
sub
nop
leave
push
pop
xor
aaa
movsl
aaa
andl
jp
xchg
jp
popl
fs
in
pop
in
sti
dec
sti
je
pop
mov
lods
mov
jo
sbb
and
inc
jbe
jne
shlb
out
xor
push
dec
nop
pop
jb
push
int3
xchg
mov
inc
mov
and
xchg
add
push
in
add
pop
pusha
xchg
sahf
pop
enter
push
jne
jns
jb
push
imul
outsb
lahf
pop
pop
in
pop
jb
insb
insb
pop
add
or
sbb
mov
xchg
dec
ja
pop
inc
inc
ja
xchg
dec
mov
add
pop
sbb
fs
lahf
inc
loopne
jo
in
add
and
jp
in
fadds
repz
jb
dec
sub
xchg
sbb
leave
cmp
test
mov
icebp
repnz
rcpps
xor
mov
arpl
push
xchg
mov
leave
and
and
push
xor
fcom
mov
insl
lods
dec
adc
and
and
loope
cltd
nop
push
adc
mov
test
inc
pop
mov
xor
aaa
dec
pop
lods
mov
or
fwait
stc
addb
scas
dec
lods
mov
rol
dec
and
push
cmc
add
rorb
and
pop
enter
aaa
sbb
jmp
es
cs
js
mov
pusha
add
and
xor
jmp
or
mov
bound
loopne
add
push
sbb
out
and
push
jb
jbe
ret
mov
popw
sub
das
and
sbb
mov
call
les
fisttps
mov
aas
push
cld
xchg
sbb
and
fcompl
test
test
movsb
xchg
loop
sub
inc
loopne
in
mov
sub
push
xor
loopne
jb
sub
les
mov
insb
in
adc
lahf
lods
inc
in
test
xchg
add
mov
xor
clc
add
inc
daa
inc
xor
aas
das
sbb
xor
pop
repnz
and
push
push
inc
sbb
fld
bound
daa
and
and
sbb
adc
mov
test
sbb
popa
out
rclb
gs
dec
dec
push
in
les
sbb
jmp
mov
fmull
push
jns
jg
in
pop
inc
adc
ljmp
xor
sbb
dec
mov
dec
andl
fwait
inc
push
pop
xor
pop
jb
cmp
add
add
or
popa
adc
jg
pop
push
test
xchg
mov
pop
cwtl
adc
call
hlt
dec
int
add
inc
mov
adc
push
jecxz
outsb
mov
xor
sub
add
inc
or
leave
add
ljmp
adc
rcll
test
pop
lahf
call
shlb
rclb
aad
ret
rorb
aam
cmp
das
pop
pop
imul
ja
xchg
sub
popa
aas
cltd
add
add
das
adc
push
test
das
dec
sbb
ljmp
ret
inc
cld
mov
cld
adc
orl
dec
dec
nop
pop
jb
push
push
aam
int3
mov
pop
add
or
dec
push
and
xchg
inc
sbb
les
js
cmp
orb
idiv
inc
and
inc
sbb
imul
push
xchg
jne
jmp
or
and
je
or
adcb
inc
mov
mov
cmp
sub
sbb
cmp
and
and
pop
jb
outsb
punpcklwd
mov
mov
pop
je
fcmovne
gs
xor
addr16
jae
pop
repz
jae
addr16
imul
ja
and
mov
int
adc
xor
mov
xor
sbb
add
ret
in
outsb
mov
jl
xor
xor
pop
ret
dec
adc
test
nop
das
repz
fildll
inc
adc
imul
mov
test
lock
dec
sbb
call
gs
popa
or
dec
cmp
out
jno
gs
popa
fistl
popa
inc
cmp
sbb
arpl
es
add
outsl
rorb
pop
roll
pop
mov
rcrl
ja
test
pop
or
test
push
pop
and
sti
mov
mov
gs
daa
andl
mov
pop
inc
mov
daa
xlat
add
lods
cmp
sbb
mov
fs
jns
jo
movsb
daa
jmp
jle
daa
jae
ret
sub
sub
lea
aaa
jns
jae
pop
sti
sahf
fwait
lods
popa
gs
xlat
pop
outsb
xor
gs
stc
push
in
mov
lods
inc
dec
sub
jbe
push
test
fists
je
dec
or
push
daa
xchg
data16
and
or
dec
and
popa
and
push
and
and
xchg
xor
dec
fs
dec
pop
inc
mov
pop
mov
sub
jmp
xor
loope
jbe
iret
lods
daa
xor
xchg
sub
ret
mov
popa
xchg
and
mov
arpl
ud0
add
lahf
fwait
in
ds
inc
jno
jae
sub
dec
xor
inc
xlat
sbb
cmp
imul
inc
dec
insl
je
pop
xor
pop
and
stos
pop
rcrb
imul
insb
insb
sub
fs
push
out
lock
mov
popf
push
pop
mov
xchg
xor
jns
and
pop
cmpsl
sub
mov
jecxz
dec
incl
iret
adc
aaa
ja
add
insl
mov
and
jns
movl
xor
jae
gs
cwtl
das
pop
mov
out
push
aaa
sub
and
inc
daa
or
cmp
or
mov
aaa
inc
jmp
insl
scas
popa
inc
aas
pop
cmp
mov
mov
sti
adcl
jmp
inc
xchg
mov
adc
dec
idivb
jecxz
xor
outsl
pop
and
adc
mov
or
xor
insb
ret
adc
dec
adc
and
push
push
add
mov
aas
mov
pop
std
imul
das
add
or
cmp
push
test
dec
cmpl
push
mov
outsl
pop
push
repz
lret
lods
adcl
cmp
pop
stos
dec
lods
in
jae
pop
fwait
and
dec
daa
add
in
dec
jecxz
ja
xchg
imul
mov
dec
inc
addr16
loope
popf
js
mov
xchg
lret
push
add
dec
sahf
cmp
inc
cwtl
adc
stc
aas
sub
push
push
or
sub
insl
cmp
insl
or
arpl
test
and
pop
jns
repz
inc
sbb
sbb
cmp
mov
pop
add
filds
andl
and
jge
cmpsb
insb
inc
xchg
xchg
pop
ds
bound
or
inc
andl
push
and
and
subb
sub
mov
je
xor
imul
inc
mov
enter
jae
iret
es
aad
mov
ja
lds
push
mov
mov
shll
fwait
dec
adcb
xchg
jp
ljmp
mov
push
mov
jecxz
jnp
out
push
add
fs
jmp
and
inc
inc
push
xchg
imul
dec
or
adc
and
dec
sub
xchg
pop
pop
sub
pop
push
jge
cmp
add
push
xchg
and
inc
xor
pop
xor
sbb
imul
mov
add
cmp
out
and
push
insl
sbb
push
cmp
and
xchg
push
xchg
insb
sub
imul
or
sti
mov
inc
ss
push
xchg
add
aaa
pop
cmp
or
add
adc
pop
aaa
sbb
dec
aaa
and
and
ja
sub
push
mov
fidivrs
popf
fldt
mov
daa
inc
mov
or
mov
jae
lahf
sub
pusha
gs
popa
arpl
dec
idivb
aaa
sub
mov
and
jmp
sub
pusha
sub
outsl
out
adc
and
stos
fbstp
inc
push
int3
mov
dec
lods
les
jl
and
shrb
and
testb
dec
jl
in
sub
daa
je
xor
and
gs
mov
std
fistl
inc
mov
jb
mov
fcomps
out
popa
mov
add
xor
loope
adc
jg
popa
push
or
ja
mov
fidivrs
filds
jne
sub
xchg
in
rep
xor
insb
lahf
add
add
pop
lods
dec
or
test
xlat
inc
out
jnp
pusha
add
imull
cwtl
je
popf
outsb
loope
movsl
outsb
and
aaa
dec
in
les
aas
mov
sti
ret
dec
xchg
ja
pop
adc
jae
icebp
sbb
stos
xorl
inc
adc
push
or
adc
jnp
inc
push
jbe
icebp
or
sub
lahf
mov
cmp
sub
dec
lret
bound
mov
mov
xor
adc
dec
and
scas
cmp
movsl
pop
add
or
dec
cmp
jmp
mov
dec
pusha
pop
gs
xchg
scas
dec
sbb
outsl
es
insb
popa
xor
push
sub
add
aaa
and
imul
push
addr16
xchg
xor
gs
jb
jbe
jg
and
hlt
cli
push
divb
lret
push
ret
xor
ret
adc
inc
or
xchg
fwait
sarb
popa
xchg
sbb
xor
adc
inc
pavgw
jno
in
aam
jmp
pop
adc
iret
insl
movsl
jno
into
fidivs
popf
push
xlat
jne
lds
mov
push
mov
fildl
lcall
and
pop
push
dec
pop
mov
sub
inc
jns
xchg
aam
in
xor
adc
popf
pop
data16
inc
jnp
das
bound
xor
imul
cmp
push
das
pop
adc
pop
jg
mov
jae
and
inc
jl
xchg
aad
cs
insb
add
cmp
and
dec
adc
push
aad
or
ds
and
push
rcl
pop
scas
dec
or
mov
push
aas
inc
rcll
dec
mov
jno
or
cmp
mov
inc
addb
ret
push
sub
push
and
xchg
dec
setbe
or
pop
push
push
ret
ret
imul
pop
fisttps
test
shrb
xchg
test
lret
fistl
pop
and
and
add
jb
xor
jbe
jae
call
dec
ja
xor
popf
call
cmp
push
xchg
mov
or
add
or
and
fnstsw
push
or
ja
push
push
popa
inc
das
inc
inc
dec
js
test
shll
scas
mov
loopne
jg
icebp
inc
adc
mov
and
fildl
push
and
es
jns
out
mov
dec
aaa
aas
push
shll
jb
or
xor
daa
scas
daa
mov
fisttps
add
iret
jge
or
add
xchg
or
inc
fistpl
inc
or
sub
jmp
xor
js
daa
cmp
jae
dec
inc
or
inc
inc
add
jmp
xor
daa
xor
fwait
xchg
xor
outsl
cmp
addr16
inc
xchg
stc
mov
add
and
xor
sub
mov
ss
fisubs
xor
inc
inc
add
xor
and
adc
js
xor
flds
inc
imul
or
dec
xchg
ss
lods
jmp
or
pop
cmp
pop
inc
jae
ret
enter
cmp
xor
ja
mov
xor
pop
cmp
es
push
or
xlat
inc
xchg
jnp
inc
es
push
inc
cmp
ss
jbe
add
daa
jno
in
insb
das
xor
xorl
sub
push
or
bound
sub
sar
cmp
cmp
ret
push
flds
jae
aas
mov
pop
inc
xor
push
push
cmp
jno
mov
inc
dec
add
and
inc
cmp
and
inc
inc
or
enter
dec
xor
and
and
shlb
inc
addr16
inc
sbb
nop
mov
icebp
pop
cs
cmp
xchg
jae
sbb
sahf
test
stc
xor
pop
jne
js
pop
mov
sbb
cs
orl
push
cmp
sub
negl
and
int3
inc
enter
pop
adc
or
inc
movsb
jo
add
pop
test
int
inc
add
sbb
and
sbb
sbb
add
data16
into
daa
mov
gs
aaa
cmpsl
inc
add
addb
or
jae
xor
inc
mov
add
mov
add
mov
or
xor
repz
inc
add
mov
and
es
add
xlat
cmp
add
fcomps
inc
pop
daa
and
inc
lock
push
or
add
into
inc
pop
add
push
pop
mov
mov
daa
inc
mov
xchg
jl
pop
xor
pop
mov
fimull
jnp
dec
imul
add
mov
pop
scas
mov
sub
pop
push
flds
or
push
insb
and
sbbl
das
movsb
fmul
push
jmp
push
dec
xor
int3
pop
aaa
fxch
lahf
das
xor
cmp
pop
xor
inc
push
insb
js
int
rorb
call
lock
clc
mov
mov
hlt
xchg
lret
movsl
fstpt
xchg
pushf
push
xor
rcrl
js
loop
add
nop
ficompl
or
jge
mov
jae
mov
ds
adc
scas
outsl
test
fwait
leave
and
les
in
lea
sub
add
cltd
in
add
push
stos
jo
popf
add
and
lcall
cltd
xchg
data16
and
jl
sbb
lods
xor
insl
and
add
insb
mov
and
and
pop
jns
shlb
add
cwtl
and
and
insl
cli
mov
movsb
cltd
insb
or
mov
sti
or
imul
insb
fmull
adc
aam
add
lods
movsb
enter
xchg
insl
and
and
cwtl
mov
adc
rcll
lcall
adc
or
add
enter
adc
mov
arpl
push
repz
push
jl
pusha
pop
scas
mov
in
and
imul
and
dec
mov
xlat
cld
lcall
imul
or
sub
cmp
dec
subl
dec
ret
inc
push
inc
inc
lods
or
add
aaa
insb
jecxz
push
add
and
or
test
imul
pop
dec
jae
adc
sbb
push
mov
imul
sbb
pop
movl
in
mov
pop
add
xchg
outsb
or
push
mov
push
pop
int3
sbb
mov
pop
add
lods
jnp
imul
cwtl
mov
add
and
je
leave
adc
popa
and
repz
pusha
and
adc
adcl
enter
xchg
xor
mov
fdiv
int
popl
sbb
ret
jb
or
jg
fisttpl
mov
xor
adc
popa
sbb
arpl
xor
and
push
leave
test
sub
fs
adc
adc
dec
addl
je
pop
insb
nop
sti
pushf
pop
in
mov
dec
mov
push
cmp
adcl
rolb
or
push
sbb
xor
ss
sbb
or
call
es
test
xor
adc
imul
out
fldt
dec
imul
sti
xor
jo
incl
adc
or
xor
add
pushl
les
call
sbb
xor
imull
mov
and
xchg
dec
cmpsl
inc
rcl
hlt
push
inc
lds
pop
jns
imul
or
aas
jo
sub
clc
mov
fstpt
xchg
mov
subb
mov
cmpsl
sbb
pop
or
jno
repnz
ljmp
icebp
rolb
adc
or
fnstcw
add
adc
mov
das
or
jecxz
or
imul
inc
adc
add
add
adc
add
int
fildl
and
pop
or
sbb
imul
arpl
xchg
in
insb
pop
jp
sbbl
jge
sbb
or
rcrb
or
cmc
shrl
push
and
dec
jg
push
and
add
lret
cmp
push
add
and
test
xchg
or
add
push
add
sbb
dec
lods
sbb
out
add
dec
insl
or
push
aas
add
ss
add
lods
adc
inc
js
mov
and
or
arpl
xchg
pop
or
inc
push
jb
adc
add
push
mov
inc
pop
or
cmp
cmp
es
dec
gs
xor
hlt
mov
inc
cmp
cltd
sbb
sbb
mov
jo
mov
jbe
jb
adc
add
mov
cmp
or
adc
pop
nop
inc
or
mov
sub
mov
cmc
adc
aam
push
sub
lods
xor
pusha
pop
add
insb
scas
and
mov
scas
adc
mov
imul
pop
mov
add
add
or
leave
cs
inc
pop
pop
inc
jno
adc
and
xchg
adc
pop
fs
pop
xor
xchg
daa
pop
decl
ss
xor
pop
or
jae
call
jg
lods
cltd
clc
outsb
sti
hlt
add
or
stos
sti
out
ret
loope
daa
adc
xor
paddusw
pop
xor
pop
and
xchg
add
jle
movsb
pop
sbb
sahf
andl
or
scas
out
sbbl
ja
jg
sbb
gs
mov
push
lods
fs
pusha
je
popa
insl
out
fs
xor
dec
xor
sbb
adc
insb
or
add
and
adc
cltd
sbb
int
cs
cmp
nop
mov
pop
mov
and
lods
mov
shlb
add
or
icebp
je
data16
outsl
adc
add
jo
xor
mov
scas
in
outsl
or
shrb
sbb
push
cltd
cs
and
cmp
add
dec
and
mov
or
or
pushf
cmp
add
cli
in
cs
push
push
test
fcmovnb
imulb
loopne
push
or
std
daa
int
dec
xlat
fistpl
int3
std
xor
out
adc
inc
sarl
and
fldt
xchg
adc
push
subl
xor
push
jns
add
pop
add
loope
and
or
enter
and
adc
add
imull
testl
pop
or
pop
push
fs
jmp
adc
mov
call
insl
jmp
and
xor
xchg
das
or
mov
cmp
inc
das
or
or
lds
or
dec
inc
in
xchg
insl
jg
sbb
in
push
aas
add
stos
ret
call
add
fcoms
or
les
mov
adc
push
shrb
in
stc
addb
lds
sbb
push
outsl
dec
das
sub
xchg
pop
rcrl
dec
pop
sti
xor
inc
inc
or
mov
mov
insb
and
out
add
lcall
fs
xor
adc
add
call
addr16
xchg
sti
mov
xor
jmp
xor
dec
xor
mov
lcall
pop
or
add
cwtl
pop
ss
rolb
push
nop
js
cmp
and
or
frstor
sbb
xor
icebp
repz
add
popf
jp
outsl
ret
cmp
add
fisubs
add
out
cmp
or
or
jp
arpl
cmp
dec
inc
push
jno
rcll
mov
and
sub
in
repnz
sbb
inc
mov
sbb
cmp
xor
xor
add
add
imul
push
jbe
xor
pop
sbb
hlt
arpl
adc
out
sbb
jne
mov
sbb
add
add
adc
sbb
xchg
push
addr16
or
and
and
nop
or
sbb
jno
fs
sub
xor
test
inc
rorb
sub
xor
jbe
or
inc
jo
and
jno
fcomp
mov
andb
out
mov
mov
push
add
adcl
push
adcl
movsb
loope
push
mov
arpl
xchg
mov
dec
fiaddl
sub
int3
sbb
or
lods
fistl
or
adc
inc
sti
data16
mov
cmp
push
ja
dec
push
and
es
jo
xchg
mov
inc
mov
lods
adc
and
clc
ljmp
cmp
push
pop
add
xchg
jo
add
stos
imul
or
adc
or
sbb
insb
jo
adc
mov
shrl
sbb
pusha
mov
sub
mov
fs
pop
pop
jmp
sbb
orl
push
movsl
cmp
pop
add
and
lea
lcall
arpl
sbb
outsl
adc
insb
fcompl
jge
mov
xor
or
sbb
shlb
imul
inc
and
sub
push
xor
cltd
test
mov
ficoms
adc
sbb
cmpsb
rcll
push
mov
inc
adc
mov
fs
nop
xchg
sbb
outsb
bound
sbb
in
push
gs
and
xchg
pop
ss
mov
inc
lea
iret
push
sub
ret
add
add
and
das
popl
and
dec
stc
adc
sub
xlat
xchg
xor
and
dec
xor
adc
dec
shr
mov
fildll
insb
in
ret
push
cmp
inc
pop
mov
mov
orl
sub
ss
xchg
xchg
outsb
xchg
in
sbb
fdivs
xchg
pop
outsl
jns
fsubr
pop
lcall
add
popa
and
adc
mov
and
cmp
or
adc
out
add
pop
fildll
lret
stos
pop
pop
jo
dec
insl
jmp
cli
cmp
sbb
sbb
cld
out
insl
sbb
add
std
mov
inc
adc
dec
xor
sbb
adc
xchg
dec
mov
ret
add
rcr
dec
and
or
and
xlat
ss
and
and
push
mov
ret
pop
inc
sbb
addr16
lods
fistpl
dec
xor
js
lcall
dec
js
inc
push
insb
dec
cld
push
sbb
sub
in
divl
shlb
test
dec
jbe
and
loope
xor
sbb
daa
xchg
inc
xchg
lods
dec
je
add
clc
pop
lret
rcrl
push
nop
add
inc
das
imul
adcl
inc
enter
sub
push
lahf
cwtl
int3
orb
adc
jbe
lahf
dec
or
push
pushf
cmp
dec
cltd
gs
sbb
xchg
pop
or
or
test
cmp
or
push
dec
mov
push
mov
xor
add
sahf
shlb
inc
dec
push
ja
imul
or
sub
push
xchg
and
sbb
jae
das
dec
subb
and
or
shrb
jg
adcl
mov
inc
je
fst
or
sub
or
adc
sub
ljmp
or
js
cmpb
arpl
cli
pop
push
or
pop
mov
or
or
jne
in
cmp
hlt
pop
pop
std
mov
mov
dec
push
inc
cmp
lea
mov
add
push
test
iret
lea
xchg
into
push
in
add
mov
pop
add
pop
and
mov
jo
cmc
xchg
insb
jo
popa
lret
pop
icebp
add
outsb
sbb
adc
and
es
and
jp
jg
ret
or
sub
and
jae
enter
push
mov
dec
inc
dec
dec
xor
mov
sub
cmc
dec
dec
dec
xor
aam
or
pop
insb
mov
push
jmp
imul
push
cmp
call
jno
push
cmp
add
mov
loopne
jae
cwtl
cmpsb
or
dec
adcl
popa
shll
lea
icebp
rcrb
add
aas
sti
lret
adc
jb
aas
or
sbb
sub
lea
cmp
pop
pop
mov
or
push
jl
sub
jecxz
inc
add
cmp
pop
fimull
or
and
hlt
sbb
mov
push
int3
jns
xor
aam
jmp
fs
adc
lock
add
fildll
icebp
fcoms
fbstp
add
jnp
scas
mov
pop
loop
xchg
sbb
adc
sbb
mov
sbb
xor
or
inc
cmp
das
push
cmp
xchg
ret
lcall
cmp
sbb
pop
aaa
and
imul
js
push
mov
jo
fbld
jo
xchg
daa
lock
daa
adc
cmp
xchg
mov
mov
decl
push
dec
xor
testb
sbb
decb
add
imul
sbb
cmp
jae
lcall
sbb
adc
andl
rorb
add
xor
adc
dec
xlat
mov
or
cwtl
loopne
fiaddl
mov
stos
or
imul
mov
pop
or
or
xor
pop
in
lds
and
sar
and
popa
pop
jnp
hlt
add
pop
cmp
sub
sbb
or
xlat
mov
dec
rorl
mov
xor
sti
mov
mov
pop
cmp
rorl
flds
sbb
xorl
xchg
movsl
cmp
dec
push
movsb
add
mov
pop
mov
add
mov
rcl
roll
bound
xor
aaa
pop
add
ret
inc
xor
sbb
or
dec
push
ja
sbb
add
lods
cmp
fs
repnz
mov
cmp
lcall
out
pushf
sti
add
xchg
loop
sti
ret
int
loopne
or
sarl
movsb
adc
or
out
adc
mov
adc
inc
mov
and
xor
es
insb
xor
cmp
cmp
mov
adc
pusha
add
movsb
js
js
adc
dec
and
pusha
pop
pop
test
pushf
int3
popf
mov
or
dec
pop
std
pop
ret
mov
and
push
dec
push
push
ljmp
je
pusha
xor
mov
mov
mov
out
stos
lods
loope
xchg
jae
xor
scas
lds
or
jno
insb
sbb
mov
mov
jmp
and
xchg
daa
add
sysenter
xchg
cld
mov
stos
cltd
or
push
mov
cwtl
lfs
imul
sub
mov
stc
add
ret
cmp
ss
add
ljmp
and
inc
dec
add
mov
daa
jg
add
lods
dec
xchg
imul
lods
sub
fisttps
mov
leave
sub
sub
adc
xor
in
pusha
repnz
pop
nop
lock
mov
sub
mov
std
push
adc
and
flds
sbb
push
js
repz
jecxz
cwtl
fbstp
outsb
fistl
lcall
push
and
and
imul
les
out
in
repnz
lret
or
sub
pop
decl
dec
dec
call
xor
sbb
ss
or
fs
add
into
aas
xchg
aad
push
cmpsb
cltd
mov
jecxz
call
lcall
cmpsl
negl
jae
ds
xor
lret
jbe
push
inc
and
adc
cld
nop
cld
adc
inc
out
insb
push
jl
and
sti
adc
hlt
or
jp
scas
fisubrl
sti
out
test
insb
inc
lahf
inc
mov
xor
rcrl
out
es
push
popl
add
lret
and
lds
mov
sbb
or
fs
ljmp
popa
icebp
pop
dec
pop
aam
or
xchg
mov
sbb
sub
fdivl
inc
and
inc
sahf
sub
jae
pusha
pmuludq
inc
sbb
adc
inc
cltd
insb
sub
push
shl
mov
push
addl
fbstp
arpl
rcrb
mov
mov
stos
inc
ret
lret
lret
inc
test
call
dec
aam
sub
push
cmp
pop
mov
add
enter
adc
xor
add
inc
pop
into
test
mov
cld
clc
inc
sub
nop
or
xor
inc
and
mov
mov
jmp
adc
rol
pushf
iret
popl
inc
adc
inc
inc
dec
ret
icebp
call
jle
jbe
rorb
imul
xor
xor
mov
push
xor
repnz
fnstcw
fistpll
mov
insb
testl
cmp
adc
pop
insb
int3
aas
cmp
aaa
loope
push
adc
and
fs
pop
mov
loope
dec
ss
inc
or
pop
push
push
mov
cmp
or
subb
insb
leave
sbb
adc
sbb
es
jb
mov
xchg
or
out
movsb
push
fadd
ret
shr
xchg
lds
je
mov
mov
nop
xchg
daa
mov
xor
pop
cwtl
addb
pusha
add
add
mov
dec
pop
sbb
rorb
adc
dec
leave
xchg
cmp
adc
or
add
fs
or
fs
or
cmp
and
sbb
dec
adc
adc
jns
in
adc
adc
mov
leave
xchg
repz
adc
mov
mov
adc
movsl
fnstcw
mov
jo
jo
dec
subb
scas
sbb
dec
inc
sarl
sbb
jns
pop
clc
cmp
or
es
and
and
mov
or
xor
push
movsl
mov
or
jecxz
mov
add
test
mov
dec
inc
daa
popa
pop
pop
cmp
sbb
shrl
cmp
cmc
and
inc
lcall
add
inc
js
ror
xor
pop
add
push
sbb
cs
lea
add
push
adc
insb
mov
loop
loope
les
push
scas
pop
adc
pusha
je
shr
lahf
push
cmp
add
cmp
sub
es
es
xor
je
jo
pop
es
es
cs
pcmpgtb
pop
pop
fs
cmp
movsb
sbb
cmp
pop
push
subb
adc
add
add
mov
add
cmp
inc
repnz
mov
xchg
and
add
dec
daa
push
ret
daa
into
sub
dec
dec
in
js
aaa
pop
jnp
xor
sbb
sbb
hlt
sbb
mov
inc
popf
nop
mov
inc
imul
and
sub
xor
jae
shrb
push
cmp
cmp
dec
mov
test
adc
add
shrl
jp
sbb
inc
es
inc
inc
mov
and
add
addb
dec
xor
pop
xchg
push
jmp
add
andb
ficoms
idivb
sbb
fidivs
movsl
push
jp
mov
add
sub
sbb
xchg
dec
cmp
or
enter
sub
daa
cmp
and
and
fbld
adc
add
sub
lea
or
xchg
imul
pop
or
daa
dec
mov
mov
mov
adc
add
je
andl
inc
sbb
cmp
jnp
dec
mov
lcall
arpl
add
or
or
les
outsl
cmp
push
mov
sub
or
in
cwtl
push
and
or
cmp
fnstenv
aam
cs
in
jnp
movsb
das
or
hlt
or
or
loop
inc
mov
add
sbb
sbb
adc
add
insb
add
lcall
scas
leave
push
push
je
xor
and
xchg
mov
add
aad
dec
cmpsb
fs
lret
adc
mov
popl
rolb
add
loop
aad
sub
mov
fadds
pop
push
addl
xchg
or
xchg
fdivl
dec
xchg
orb
adc
and
jge
xchg
add
lds
fs
nop
and
push
inc
push
push
insb
mov
mov
cmp
or
fcmovnb
sbb
rolb
jb
dec
test
sbb
mov
cs
jne
lcall
inc
mov
ret
inc
mov
into
push
mov
cmp
dec
mov
add
push
sbb
stos
xor
lret
pusha
pop
sub
sub
cmp
je
cmc
sti
xchg
xor
sub
add
loopne
push
ret
shll
xor
sub
xor
xor
pop
faddl
sub
cmp
fistpl
cmp
adcb
mov
pusha
test
and
xor
add
jg
aas
mov
and
jo
dec
nop
mov
push
inc
es
sub
iret
sbbl
sbb
sbb
punpckhbw
cwtl
clc
push
outsl
in
ret
dec
or
addb
daa
dec
jb
push
inc
add
lds
xor
mov
in
pop
and
aas
adc
mov
lods
imul
adc
shrl
xchg
or
cmp
pop
js
cmp
and
or
mov
jmp
loope
mov
adc
in
mov
dec
push
add
push
dec
xchg
loop
fistl
arpl
imul
push
add
mov
js
sbb
out
outsl
push
and
js
sbb
pop
test
xor
lcall
add
and
imul
jmp
push
pop
pop
sub
push
pop
or
add
sbb
or
pop
aas
insl
js
xor
fneni(8087
je
test
sbb
pop
jns
scas
inc
pop
jg
adc
cmp
sub
jbe
or
and
jb
jle
or
mov
add
or
adc
das
inc
sub
sub
mov
and
in
jne
sbb
push
add
int3
inc
xor
sub
ret
in
mov
imul
push
sbb
ja
adc
mov
jle
sbb
ror
add
sub
in
sbb
add
xor
inc
push
adc
outsl
shlb
mov
add
dec
rorb
jnp
mov
dec
jno
add
sbb
rcr
insl
add
sub
and
adc
or
sbb
insb
add
or
push
xor
push
test
pop
mov
pop
mov
mov
data16
xchg
add
or
loopne
fucom
sbb
daa
dec
mov
sub
addl
cs
leave
mov
xor
push
in
sub
fldenv
mov
sub
daa
add
imul
and
insb
mov
or
pop
test
or
in
xor
sbb
cwtl
inc
mov
sahf
mov
int
or
sbb
lret
fimuls
mov
movsl
inc
shlb
dec
inc
mov
inc
inc
adc
jge
push
mov
lret
clc
hlt
imull
mov
cmp
push
mov
mov
pop
test
cmp
jne
shrl
test
add
shll
xlat
daa
sub
mov
adc
pop
ss
cmp
movsb
pusha
mov
aam
pop
xor
je
dec
clc
pop
je
inc
add
sbb
gs
dec
fsubs
mov
sbb
add
jo
xor
leave
fs
xor
mov
subb
pop
pusha
cmp
lret
aaa
push
mov
sub
decl
addr16
sub
insb
aad
lea
mov
push
cmc
jne
inc
daa
mov
std
jecxz
sub
loop
les
cltd
xor
inc
dec
addr16
les
test
stos
sarl
cld
add
nop
in
jnp
add
rclb
xor
aam
pop
cmp
or
xchg
lods
xchg
fucomp
adc
cs
and
dec
cld
add
into
xchg
mov
popa
inc
or
enter
inc
jno
and
sahf
sub
sbb
xchg
cwtl
insl
sbb
shll
outsb
add
iret
pop
outsb
inc
push
sbb
mov
dec
and
adc
or
pop
cmp
and
and
adc
adc
mov
es
dec
pusha
dec
or
push
pop
sbb
sbb
adc
xorl
cmc
lret
mov
in
xor
fnstenv
push
jmp
inc
inc
daa
cwtl
and
decl
jnp
add
cmp
pop
add
mov
subb
pop
xchg
add
add
sub
cmc
cwtl
adc
mov
sbb
insb
pushf
inc
sub
or
add
and
push
in
je
adc
pop
dec
icebp
inc
aad
out
pop
mov
inc
inc
xor
jge
or
pusha
inc
ja
sar
bound
faddl
push
outsl
je
dec
rcrb
gs
arpl
jo
mov
inc
outsl
sub
mov
jb
or
stc
loopne
jnp
pop
or
outsb
inc
js
add
clc
sub
insb
popa
jns
push
add
jge
jl
inc
push
push
cmovl
add
sbb
aas
fs
mov
mov
dec
lahf
rorb
push
jg
adc
jae
pop
ja
popa
jb
insl
insb
pusha
cmp
outsb
addr16
ja
pop
pop
push
popa
sub
adc
add
andb
inc
sub
add
fcmovu
dec
xchg
and
or
push
inc
add
js
dec
and
cmp
sub
imul
or
adc
aaa
adc
scas
sub
and
sub
adc
daa
inc
sbb
sub
test
mov
dec
jle
sub
or
dec
insb
dec
pop
je
push
push
cmp
jnp
xor
subl
sbb
in
and
mov
xchg
and
test
jo
loop
test
add
loopne
mov
or
mov
adc
cmp
dec
cmpb
mov
je
pusha
es
push
js
test
ret
inc
mov
pop
lock
lret
iret
push
or
dec
sahf
aam
sub
push
sub
sub
pop
xchg
ss
inc
xor
mov
and
int
mov
cs
pop
xchg
sbb
pusha
add
and
insl
insb
push
jno
or
enter
mov
add
std
pop
mov
adc
mov
je
inc
mov
inc
push
pushf
xor
imul
add
je
orl
xchg
stos
mov
jg
pop
dec
ret
sbb
lcall
xor
and
fisttpl
insl
adcl
arpl
lea
push
dec
cmp
cmp
lock
cltd
xchg
pop
push
je
decb
hlt
hlt
dec
inc
imul
inc
addr16
stos
jne
push
push
xrelease
les
in
sub
mov
pop
sub
int
xchg
in
mov
add
adc
hlt
cltd
add
or
cmp
es
call
dec
and
and
scas
push
cmp
cmp
push
incb
xchg
nop
int
add
cmp
push
adc
xor
push
cmpsl
mov
xor
push
fdivl
hlt
pop
cmp
test
dec
dec
clc
push
call
mov
mov
sbb
je
mov
lret
dec
fs
add
pop
pusha
pop
adc
xor
repz
pop
or
add
push
jae
outsl
mov
cs
sbb
xchg
dec
push
out
pop
and
das
enter
and
push
jmp
fimull
push
lds
add
orl
out
lret
mov
out
adc
out
xchg
sub
sarl
mov
push
push
dec
aam
test
or
in
xor
and
and
inc
cmp
and
aam
clzero
in
pop
stc
cmpsl
and
pop
mov
push
add
push
add
mov
jno
mov
jmp
xor
cltd
mov
mov
cmpsl
ja
push
hlt
cmp
add
push
rol
and
sbbb
push
push
mov
xchg
sbb
fnstcw
dec
addr16
and
out
ljmp
xor
shrl
xor
and
xor
adc
mov
pop
std
cmc
pause
mov
inc
in
nop
sub
sbb
ljmp
push
pop
jmp
and
out
lock
pop
or
or
popa
cmp
pop
testb
cmp
mulb
sbb
fs
dec
daa
gs
in
sub
in
leave
adc
jno
and
add
xchg
push
ret
insb
jo
sbbb
add
fnstcw
xor
loope
cmp
pop
xor
xor
dec
xor
mov
cmp
in
or
xor
add
mov
gs
gs
sub
sub
lret
pop
pop
xchg
sub
sub
jmp
mov
mov
cmp
dec
sub
dec
pop
push
pop
or
cmp
aad
cmp
or
add
pusha
add
das
or
popl
adc
jo
adc
hlt
sub
xchg
add
arpl
mov
sbb
andb
push
imul
push
or
add
aaa
jmp
and
cmpsb
xchg
xor
lock
add
push
ss
fs
repz
add
sbb
add
add
jmp
cwtl
or
sti
adc
fwait
mov
xor
jae
sub
psrlq
add
or
dec
je
or
out
das
inc
sbb
dec
jo
jo
les
sub
mov
mov
xor
das
bound
pop
std
xor
jl
sbb
fs
or
pop
inc
xchg
pusha
pusha
fsts
jle
cmp
sbb
ds
imul
jo
pop
cs
add
pop
adc
leave
jle
pop
mov
test
push
fisubrs
ret
pop
fistps
insb
pusha
rcrl
pop
add
daa
dec
jb
popf
inc
fisttps
int
in
inc
je
xor
dec
insb
fists
stos
stos
fiaddl
sbb
sbb
pop
rolb
inc
pop
out
inc
fbstp
ds
inc
add
pop
inc
orl
out
jo
rolb
jb
xchg
pop
dec
add
sub
push
sub
ret
push
sub
or
pop
in
scas
push
into
xchg
xchg
cmp
push
mov
pop
sbb
addl
mov
mulb
dec
shll
and
leave
xchg
mov
ds
sbb
pop
lahf
inc
lcall
sbb
cmp
add
mov
or
dec
adc
and
add
rolb
clc
adc
fcomip
mov
and
xor
scas
inc
hlt
sub
adc
pop
icebp
push
orl
add
repz
in
movsl
pop
and
or
jae
xchg
rolb
adc
or
jno
fcompl
lods
jg
sbb
sahf
sbb
pop
aas
cmc
add
faddl
nop
mov
mov
ss
lcall
xchg
sub
mov
pop
add
cmpsb
test
cmpsl
shlb
icebp
mov
add
xchg
xor
outsl
incb
sarb
stc
inc
dec
enter
push
inc
inc
scas
pusha
and
add
push
mov
xor
repnz
push
adc
inc
sbb
sub
sbb
pushf
je
lcall
movups
pop
xlat
or
mov
sbb
loope
pop
popa
xor
xchg
fildl
call
repz
movsb
mov
xchg
sub
and
sbb
and
add
cmp
add
pop
les
cltd
adc
inc
or
pop
and
add
dec
xchg
ficomps
imul
and
pop
sbb
out
add
sti
cwtl
mov
add
cld
sbb
add
push
sbb
cld
inc
lods
sbb
xchg
add
jg
dec
ss
push
pop
dec
mov
mov
imul
mov
es
mov
loopne
push
inc
add
addb
rolb
mov
xchg
push
mov
shr
add
pusha
jnp
sbb
cmp
add
cwtl
jns
fdivs
dec
xor
inc
add
test
cmp
jb
loope
lret
xlat
out
sub
push
add
sub
adc
sub
rolb
ljmp
or
js
js
pop
push
xchg
shlb
add
jo
rorl
pop
cs
ss
ds
cmp
dec
add
adc
mov
les
shll
aas
xchg
adc
pop
inc
add
nop
or
pop
and
pop
adc
dec
xchg
dec
and
pop
xchg
add
cltd
inc
mov
pop
push
sub
add
or
and
mov
mov
pop
test
and
ja
adc
add
daa
int3
dec
xchg
add
push
add
pop
mov
scas
rcrb
add
add
push
nop
add
dec
ret
add
xchg
inc
loope
mov
test
ja
or
pusha
sqrtps
je
sbb
or
or
xor
fs
sbb
sub
sub
fs
dec
cmp
adc
cmp
inc
xor
push
sbb
or
xor
push
inc
ficompl
out
pop
inc
rorb
sub
fwait
xchg
pop
test
and
and
iret
adc
dec
dec
add
and
adc
or
dec
dec
add
mov
sub
cmpsb
notb
pop
xchg
lods
or
inc
mov
xor
jo
adc
push
jo
and
mov
add
aad
dec
insb
jge
dec
mov
inc
std
jge
sub
sbbl
stos
imul
sbb
xchg
jl
shl
fmul
and
int3
and
lods
incb
data16
xor
xchg
pop
sub
add
pop
sub
cmpsb
pop
outsb
adc
dec
mov
cmp
pop
cmp
sbb
decb
xor
test
es
push
cmp
sbb
stos
ss
push
sub
add
pushf
add
loopne
add
cmp
sub
int
add
mov
pop
adc
push
ret
or
adc
test
xchg
and
jmp
add
aas
xchg
movsb
mov
push
fwait
inc
sarl
pop
dec
daa
add
pusha
mov
or
loopne
mov
movsb
and
call
add
cltd
fldt
pop
incl
cmc
test
jmp
add
dec
pop
movsb
push
nop
mov
cmp
xor
popf
cmpl
cs
add
or
subb
fmuls
or
adc
lods
jecxz
adc
xor
sub
inc
adc
push
pushf
pop
shrl
add
add
or
adc
decb
shlb
test
xchg
adc
or
push
mov
daa
outsl
add
sub
or
xchg
mov
cmc
mov
mov
ja
adc
or
stc
shlb
lret
mov
mov
add
pop
sbb
insl
adc
mov
lods
sbb
push
add
pusha
or
cmp
jg
out
inc
std
inc
sbb
mov
or
inc
sbb
fmull
adc
xor
arpl
xor
or
cmp
pop
jns
mov
or
dec
mov
hlt
xchg
daa
mov
cltd
fsubrl
jne
lea
mov
add
int
cmp
pusha
sbb
xchg
out
out
xchg
sbb
inc
lcall
mov
mov
dec
sub
inc
push
jbe
cmp
aam
mov
out
pop
or
inc
dec
xchg
leave
mov
mov
jne
popf
dec
add
add
adc
addb
inc
lret
clc
sub
dec
ja
inc
push
pop
add
dec
shll
dec
inc
push
mov
or
fldenv
and
pop
mov
sub
xlat
pop
mov
je
xchg
cmp
inc
nop
sbb
pop
dec
mov
adc
sbb
add
test
fs
pop
or
leave
fs
inc
addl
insb
jle
sbb
cmp
push
pop
lds
dec
shrl
stos
or
imul
pop
pusha
aam
sbb
pop
and
or
or
adc
out
jmp
popa
lret
imul
sbb
add
xchg
add
dec
rol
or
ret
mov
orl
lahf
mov
xor
sbb
cmp
or
or
fldcw
add
jge
push
add
roll
lar
sahf
pushf
lcall
dec
xor
push
add
test
push
aas
cmpsl
sbb
push
aas
pop
inc
mov
iret
dec
mov
push
xor
dec
add
push
sub
inc
add
inc
sub
xor
inc
cmp
roll
push
and
outsl
aad
push
movsb
or
pop
inc
pop
push
es
add
sbb
fsubrs
add
sub
jnp
lret
call
pop
rorl
pop
pop
shll
dec
xchg
testl
jb
and
enter
roll
add
push
mov
imul
add
push
fwait
inc
or
and
add
sbb
adc
adc
sahf
add
lret
mov
mov
test
adc
or
mov
cwtl
xor
dec
pop
dec
orb
adc
inc
adc
mov
inc
pop
dec
mov
adc
adc
push
and
inc
popa
nop
lret
outsb
dec
in
int
xchg
cltd
dec
or
push
ljmp
add
add
sbb
mov
pop
or
fdivl
jns
adcb
test
mov
add
add
das
xor
push
mov
add
dec
mov
in
test
sub
push
xor
jae
inc
mov
add
push
shrb
mov
not
pop
sub
sbb
adc
mov
repz
fs
movsl
shld
fsub
add
mov
popf
sbb
xor
lods
dec
adc
movsl
arpl
iret
xor
ret
cmp
push
movsb
ret
out
aad
and
or
xor
mov
sti
mov
paddb
adc
add
clc
popf
fnstenv
xor
fcomp
sbb
xor
adc
and
stos
xchg
mov
add
stos
cmp
dec
dec
push
mov
repz
mov
push
shl
and
adc
mov
mov
inc
inc
fildl
adc
mov
repnz
dec
stos
or
add
aad
pop
pop
mov
stos
inc
xchg
pusha
sbb
fisttps
inc
mov
inc
push
add
dec
shlb
add
and
xchg
sub
inc
cmpsl
mov
add
and
lea
hlt
push
daa
stc
push
add
jnp
daa
or
and
push
and
rcll
push
pop
shrb
add
in
inc
mov
jo
decb
sbb
pop
jo
dec
pop
jb
inc
mov
add
mov
add
ss
push
and
and
pop
cmpb
fs
and
add
sub
mov
insb
fisubl
xor
out
xlat
and
inc
sub
pop
jno
aad
add
push
ret
inc
add
pop
repz
pusha
dec
inc
fnstenv
inc
dec
adc
sbb
sbb
and
mov
enter
pusha
mov
sub
pop
dec
mov
sbb
sbb
add
dec
mov
fidivs
pop
push
pusha
pusha
mov
fs
pop
inc
pop
in
nop
gs
insb
add
fs
in
push
les
inc
add
jno
adc
push
adc
dec
fs
and
les
je
or
lods
sub
imul
push
in
push
or
push
jbe
sbb
lcall
sub
fs
out
or
or
cltd
and
push
cmp
dec
dec
xor
xchg
lock
cmp
dec
mov
call
lcall
insb
sub
sub
inc
pusha
lds
sbb
daa
inc
add
adc
push
aas
mov
inc
add
roll
push
push
inc
sub
je
pop
mov
xchg
add
cmc
jmp
lret
dec
mov
adc
xchg
sbb
sbb
adc
adc
inc
enter
mov
xchg
mov
int
or
ret
sbb
cmp
mov
push
push
jb
mov
push
shr
push
push
fildl
adc
dec
fsubrs
lods
add
and
stos
rolb
add
mov
sub
rclb
sbb
xchg
dec
push
cmp
mov
out
aas
pop
insl
inc
pop
mov
stos
inc
add
or
and
adc
or
aad
pop
rcll
add
rcr
mov
divb
incb
add
sub
sbb
test
in
jb
xor
leave
add
lods
jae
lods
pop
insb
xor
mov
sbb
or
int3
mov
fdivl
cltd
mov
cmp
xchg
lret
inc
pop
gs
int3
cmp
add
nop
xorl
dec
xor
push
sbb
or
mov
and
or
add
pop
add
jmp
lds
hlt
pop
jmp
sti
out
pushl
push
inc
push
push
hlt
xor
or
jo
cmp
insb
std
add
mov
cmp
and
gs
push
nop
add
mov
inc
push
nop
add
aad
lret
sbbb
clc
add
orb
sbb
fs
and
cmp
cli
inc
les
adc
sbb
or
jg
pop
cmp
or
mov
jb
xor
cmp
add
shll
cmc
and
xor
xor
xor
dec
and
xor
and
cmp
data16
arpl
ret
sub
push
jge
mov
jbe
cmp
stos
negb
outsl
jbe
clc
lea
jmp
jne
or
or
mov
or
xor
dec
mov
sbb
mov
add
add
ret
mov
push
mov
push
xor
das
ret
mov
xor
jbe
dec
mov
inc
xor
pop
or
push
adc
push
push
or
mov
imul
mov
sbb
cs
xor
pushf
inc
xchg
rorb
nop
and
dec
push
or
inc
mov
sbb
fucom
lods
dec
cmp
pop
sti
xor
and
inc
packssdw
pop
inc
std
jo
sub
sti
pushf
adc
stc
dec
leave
data16
mov
cmp
andb
ja
insb
cs
lcall
enter
and
rorl
push
out
mov
pop
add
and
xorb
mov
movsl
mov
mov
notl
negb
movl
or
clc
adc
and
aam
and
iret
outsb
adc
add
js
inc
dec
pop
fdivr
add
or
pop
sub
mov
dec
add
sahf
sub
adc
cmp
addb
or
xor
add
cwtl
jecxz
adc
gs
aas
lret
mov
lcall
ss
in
inc
ss
es
push
fs
xor
hlt
cmp
cmp
mov
and
popf
push
sub
xor
dec
or
pushf
push
cmp
or
or
pusha
jmp
xor
cltd
add
push
inc
xor
hlt
outsb
fistl
cs
sub
aas
push
test
or
add
pusha
cmpb
dec
sbb
push
lds
mov
xchg
sub
add
inc
mov
ret
and
lods
push
mov
dec
or
arpl
daa
daa
or
inc
ret
fiaddl
or
bnd
lods
xchg
inc
or
add
dec
push
adc
xchg
rolb
push
pop
mov
xchg
add
pop
add
incl
lods
pop
mov
add
aam
std
add
testl
lahf
mov
punpckhbw
push
les
sbb
jmp
scas
or
mov
ret
sbb
cwtl
xchg
or
loopne
adc
fdivr
nop
or
or
movsb
subl
inc
mov
mov
and
adc
ror
adc
inc
sub
in
inc
call
cmpsb
fadd
xor
lock
aam
enter
sarb
mov
push
and
int3
lock
or
sbb
mov
mov
scas
adc
mov
pusha
mov
dec
or
push
push
inc
xor
insb
pop
ret
test
and
push
cmp
pop
mov
mov
or
xchg
enter
pop
paddsw
push
or
xchg
and
add
mov
repz
and
adc
repnz
push
fs
dec
dec
movsb
decb
jb
jl
push
fs
mov
push
jmp
dec
testl
leave
ret
xor
mov
fldcw
test
imul
or
sti
sub
add
xchg
or
pusha
xor
push
add
ljmp
or
pop
lret
mov
push
mov
jo
cmp
inc
dec
fs
cmpsl
mov
or
pushw
or
or
jp
sbb
or
inc
xor
data16
and
adc
push
push
sahf
push
sti
fdivp
inc
cmp
add
es
es
push
or
dec
sbb
es
es
push
add
add
and
pop
inc
cld
clc
or
push
and
add
xchg
mov
lcall
push
sbb
or
xor
mov
sbb
and
bound
icebp
movsl
xor
sbbl
enter
push
or
cmp
inc
dec
in
lret
and
and
dec
fcoml
sbb
and
aam
pop
xor
jbe
inc
aaa
int3
enter
pusha
xor
sbb
sub
insb
pop
mov
in
and
xor
lret
shrb
lods
mov
pop
xchg
mov
push
imul
jbe
insb
push
push
lcall
sub
cs
pushf
mov
sti
subl
nop
je
xchg
sbb
xor
xlat
add
add
xchg
pop
xor
add
mov
shrb
cmpsb
imul
xorb
and
xor
xor
lds
scas
out
mov
sbb
add
mov
lea
adc
fs
jno
inc
mov
mov
insl
cmp
cmp
cld
stos
or
sbb
cld
loopne
andb
add
push
cli
add
mov
inc
and
and
rorl
or
dec
inc
xor
andb
cmp
push
ficompl
popa
push
pop
mov
repnz
decl
adc
sbb
cmp
ljmp
add
test
data16
pop
ret
inc
or
int
inc
and
and
clc
inc
xchg
push
inc
pop
sar
fs
jnp
pop
push
add
jmp
int
xchg
mov
pop
nop
jo
add
and
sar
pop
push
sbb
outsb
dec
push
xor
dec
mov
push
push
add
dec
incl
inc
in
push
jmp
push
out
fwait
pop
cwtl
adc
popf
add
dec
push
rolb
lret
sti
pop
dec
mov
inc
dec
lret
pop
pop
or
sbbl
enter
popa
rcrb
in
inc
cmp
jnp
pop
push
mov
stc
or
push
adc
add
shlb
mov
jb
push
sub
pop
mov
cmp
xor
fldcw
cmp
mov
mov
cmp
mov
jb
or
and
lods
push
sub
jle
es
outsb
jmp
js
scas
loop
mov
jg
std
shrb
stos
cli
scas
icebp
pop
xchg
hlt
sbbb
pop
mov
dec
pop
adc
mov
pop
incl
sub
popf
add
and
sub
or
in
xor
in
insb
mov
or
into
pusha
sbb
jmp
call
inc
adc
or
dec
mov
mov
xor
dec
mov
mov
sub
and
mov
mov
and
sbb
mov
mov
sbb
dec
mov
mov
adc
or
sbb
orl
add
mov
pushf
xchg
sbb
mov
push
jbe
lods
popa
pop
mov
and
in
push
in
inc
in
push
xstore-rng
cmpsl
test
pop
xchg
or
jns
dec
adc
add
add
add
mov
adc
add
and
dec
cwtl
cmpsb
imul
sub
xchg
sbb
out
daa
mov
xor
push
add
xchg
add
xor
xchg
inc
push
aas
pop
sbb
nop
sysexit
outsl
adc
pop
inc
push
inc
test
fs
xchg
xchg
dec
cltd
adc
sbb
ret
pop
inc
push
fs
fcoms
push
in
push
enter
xor
add
pop
adc
xor
lret
pop
sbb
sub
mov
sbb
sbb
push
sbb
and
enter
inc
mov
xor
and
mov
inc
stos
pop
and
enter
and
xor
cmp
and
add
inc
enter
cmp
in
xor
sub
push
cmp
xchg
cmp
cmp
sbb
jl
inc
push
sub
sub
xchg
add
sbb
gs
push
enter
insl
daa
in
cmp
fs
sub
das
pop
in
add
lsl
xor
sahf
add
sub
sub
add
insb
daa
dec
xor
xor
push
add
push
sti
pop
add
fisubl
or
xchg
adc
and
aad
daa
add
incl
daa
adc
es
stos
or
inc
mov
lret
sub
or
stos
das
lea
sti
pop
lock
inc
add
or
scas
add
cld
mov
repnz
inc
call
lods
cmp
pushf
mov
pop
fistps
mov
pop
mov
push
daa
push
and
push
sbb
push
push
fnstenv
dec
notl
sbb
push
int
sbb
adc
push
xchg
aaa
jle
xor
add
or
or
add
sti
xor
adc
jno
ljmp
xor
inc
mov
std
inc
and
add
pop
mov
mov
pop
leave
add
sbb
pop
adc
cltd
mov
inc
cmp
icebp
mov
pop
mov
cwtl
mov
sub
inc
pushf
pushf
jae
sub
add
movsl
mov
cltd
add
ljmp
in
pusha
cwtl
cwtl
ljmp
mov
and
das
and
pop
in
push
xor
add
aaa
test
xchg
pop
stos
push
add
jae
scas
adc
outsb
stos
lret
add
inc
add
mov
sbb
str
stc
pop
ret
sub
lock
mov
sub
dec
or
cmp
xchg
and
jge
mov
cmpsl
shl
add
add
jns
push
popl
adc
imulb
pop
fbld
add
adc
test
xchg
inc
cmp
enter
cmp
adc
xor
mov
inc
icebp
xor
add
into
call
paddsb
push
aam
out
sub
ret
in
je
jns
cmp
scas
push
add
xchg
mov
fcomps
loopne
or
ja
cltd
or
fsubl
fs
cs
lock
mov
sub
outsb
cmpl
or
or
fisttpl
stos
add
popa
mov
addr16
mov
mov
pop
mov
xchg
xor
loope
adc
dec
lret
push
or
xor
ret
inc
pop
push
sbb
push
xchg
sub
xchg
mov
add
sbb
push
mov
jno
in
or
jge
or
jnp
or
dec
and
decl
fldcw
test
popa
and
loopne
add
mov
jne
loop
add
pop
mov
sub
jae
mov
sub
mov
and
add
nop
iret
push
push
sbb
inc
nop
ret
mov
dec
lock
adc
imul
push
dec
or
jbe
pop
xor
je
xor
xchg
insb
pop
cmp
inc
cmp
pop
jbe
xor
sub
enter
sub
or
sbb
adc
sbb
push
dec
inc
push
in
inc
dec
jne
leave
mov
add
jbe
xor
mov
mov
add
andb
enter
inc
inc
orb
push
inc
mov
push
enter
dec
dec
add
xor
xchg
dec
mov
pop
dec
test
sbb
adc
push
adc
lret
inc
push
lret
sub
cmp
xchg
pusha
gs
pop
pop
test
adc
inc
nop
pop
xor
sub
es
popf
add
adc
xor
add
fsubrl
inc
xchg
cmpsl
arpl
sub
add
or
adc
mov
and
lcallw
add
adc
sub
push
xor
and
inc
dec
mov
adc
sbb
lret
jae
add
scas
sbb
mov
rorb
iret
out
stos
push
sbb
pusha
xchg
ret
sbb
loopne
add
dec
mov
adc
adc
jo
push
inc
dec
pop
loopne
or
add
inc
sbb
pop
push
push
add
adc
jae
cmpb
nop
xor
pusha
xchg
sub
rcrb
cmpl
icebp
dec
jo
inc
imulb
sub
adc
add
add
arpl
ficompl
sub
and
inc
cld
lock
dec
add
adc
xor
into
push
mov
les
mov
or
pop
fsubl
leave
xchg
mov
dec
add
mov
es
mov
inc
inc
jo
xchg
mov
movb
xchg
addr16
push
add
repnz
add
add
jae
xchg
push
enter
movsl
xchg
add
mov
or
test
mov
pop
fwait
inc
pop
pushf
inc
add
adc
xchg
dec
pusha
and
movsb
addr16
orl
sbb
les
fadds
adc
and
nop
inc
ja
out
shr
sub
and
shlb
fnsave
das
fdivs
movsb
arpl
mov
popa
mov
mov
add
or
cld
sbb
adc
cmp
daa
push
mov
and
inc
cltd
stos
mov
pusha
or
loope
or
adc
hlt
sub
inc
jg
shlb
ret
outsl
leave
jb
mov
add
add
add
xchg
dec
add
mov
cltd
pop
mov
push
push
jno
std
xchg
jl
sub
add
cld
adc
cmp
adc
sbb
xchg
cld
insb
add
and
jnp
fs
cwtl
xor
push
add
or
scas
or
dec
add
or
inc
scas
push
in
or
or
or
adc
sub
cmc
pushf
mov
fstp
nop
sar
add
sti
pop
lea
jae
in
hlt
sti
cmp
pop
and
or
mov
adc
inc
enter
and
ss
sub
and
insb
xorl
fdivr
out
scas
lods
jmp
les
movsl
cltd
push
js
pop
movsb
test
mov
mov
pop
pop
xor
fs
clc
ret
in
pushf
cld
or
push
out
imul
or
std
imul
push
enter
test
add
xor
inc
inc
inc
pop
add
adc
aas
add
push
cs
je
fdivrs
push
pop
add
xor
std
xor
mov
or
paddsw
adc
mov
mov
hlt
sbbb
into
sub
mov
xchg
enter
inc
mov
dec
mov
xor
and
cmp
cmp
mov
ljmp
push
adc
sub
inc
lcall
dec
add
out
in
sti
pop
pop
push
or
mov
or
fnstenv
or
jb
cld
pop
inc
mov
rcrl
add
add
roll
mov
js
dec
xor
outsb
adc
data16
sbb
and
inc
outsl
js
sbb
cmc
add
cmp
repnz
add
cmp
adc
loope
neg
or
dec
cwtl
sbb
add
mov
add
or
dec
push
imul
add
mov
lods
repnz
jg
or
or
mov
xor
andl
jmp
lret
and
cmp
add
fs
lret
and
je
sar
cmp
nop
inc
je
imul
and
xor
xchg
mov
inc
test
pop
aas
lret
iret
icebp
mov
and
rorl
sub
lock
loopne
add
and
xchg
sub
in
sub
sub
sub
and
sub
loopne
xor
sub
fists
add
clc
add
adc
out
add
fwait
cltd
insb
adc
push
add
inc
add
add
sbb
add
mov
stos
test
dec
add
sbb
fcomps
mov
enter
mov
lods
jle
fs
pop
add
clc
xlat
bswap
and
cld
or
add
adc
inc
icebp
sbb
inc
mov
dec
repz
cmp
sbb
cmp
xchg
orps
adc
or
and
jae
or
in
add
and
or
xchg
xor
add
addb
orb
mov
sub
movsb
jo
xor
push
lods
test
dec
or
call
or
or
jl
into
sahf
jb
in
sub
enter
pop
pop
pop
and
or
inc
pop
and
cltd
inc
jl
adc
sub
dec
add
push
addr16
xor
lcall
add
cwtl
cmpsb
pop
xchg
scas
aaa
adc
test
daa
stos
push
inc
mov
add
push
ret
add
loope
push
lahf
xor
mov
push
mov
adc
or
sahf
gs
and
pop
cmp
mov
rcrb
adc
mov
adc
fs
call
es
push
add
fdivs
sub
pusha
lods
sbb
mov
inc
inc
mov
ret
nop
inc
inc
push
cmpb
cmp
sbb
das
pusha
data16
pop
rcll
or
enter
inc
xchg
sbb
xor
lcallw
bound
sarb
lock
ljmp
and
gs
inc
mov
adc
cmp
int
nop
add
xor
sub
sub
daa
sub
flds
adc
sbb
cmp
or
sbb
inc
daa
or
fstps
xor
cld
andb
xchg
xchg
sbbl
and
in
or
xor
jnp
stos
lods
sbb
repz
enter
mov
andb
add
xchg
rclb
arpl
cwtl
mov
sbb
or
inc
lret
sbb
das
jo
sub
jo
pop
int3
pushf
xor
in
jo
mov
and
cmpsb
sbb
in
jne
xor
arpl
insb
inc
sbb
lods
and
add
adc
push
and
lret
pop
sbb
sbbb
jp
xchg
mov
jae
mov
sub
sbb
xor
test
inc
lods
aas
nop
mov
and
cld
leave
lods
stos
iret
cmc
or
jb
add
shlb
roll
add
js
jbe
add
push
test
shlb
pusha
fwait
add
mov
or
add
cli
xor
sti
or
sub
jne
es
pop
jo
sub
adc
push
or
xchg
sub
sub
pop
push
pop
xchg
sub
sub
push
inc
push
es
test
stos
aas
fwait
dec
es
es
add
sbb
inc
es
sbb
andl
cmp
gs
gs
push
sub
sub
gs
or
and
fs
dec
sbb
cmp
adc
int3
adc
or
xchg
sub
add
fdivl
cld
clc
or
xchg
dec
xchg
dec
hlt
add
and
dec
xchg
dec
in
adc
or
and
inc
xchg
dec
xchg
dec
faddl
fdivrs
add
nop
dec
aam
je
xchg
dec
mov
or
enter
adc
cmp
sub
push
sbb
mov
js
add
movsb
enter
or
hlt
mov
iret
mov
faddl
xor
ja
sbb
add
shlb
pop
xchg
adc
xchg
lods
mov
mov
outsb
sbb
aas
add
pop
call
pop
pusha
movsl
sbb
fcompp
xlat
js
jnp
cli
dec
push
pusha
pop
sbb
pushf
std
pop
sti
fstpt
push
xor
jns
pusha
pop
inc
add
pop
fildl
pop
lock
push
dec
aad
add
xor
cld
enter
bound
cmp
in
push
xor
in
mov
adc
in
es
and
or
sbb
adc
imul
test
daa
and
test
sbb
sub
or
jb
dec
pop
push
sbb
xor
add
jp
xorl
rorl
jno
and
or
adc
pop
out
add
pop
adc
out
mov
loopne
mov
fistps
in
inc
mov
movsb
and
sub
and
sbb
pop
sub
sbb
daa
inc
push
subb
mov
lahf
and
add
das
movsb
inc
push
incl
sbbl
adc
enter
add
jbe
popf
shll
sbb
divb
sub
mov
lcall
inc
sahf
dec
dec
push
push
and
add
dec
insb
add
insb
enter
insb
adc
xchg
sub
pop
leave
js
js
xor
mov
mov
mov
dec
sbb
or
adc
cs
sub
dec
cs
push
push
pusha
dec
or
bound
push
pop
xorb
decl
or
adc
xor
xor
pushf
sbb
sbb
push
insb
add
in
or
addl
dec
test
pushf
adc
dec
pop
adc
push
add
xchg
jl
sub
mov
decb
sub
enter
in
incb
cmpl
in
and
xchg
jecxz
add
or
push
fs
stc
push
je
add
nop
cmpsl
mov
shrb
inc
cltd
movsb
call
xchg
or
out
mov
pop
outsl
cmp
xchg
icebp
sbb
lods
jnp
sub
jl
divb
add
mov
loopne
inc
add
push
or
outsb
insb
and
or
dec
adc
and
call
adc
sub
mov
cmp
sbbl
push
lret
and
jo
or
stos
jno
mov
je
jbe
imul
jae
and
mov
shll
cmp
push
rclb
xchg
mov
je
das
jp
stc
dec
lods
adc
and
or
push
xor
test
jl
rclb
inc
leave
faddl
insl
mov
fisubs
scas
sub
jmpw
in
add
movsb
mov
xorl
std
xor
cmp
lcall
es
mov
cli
in
fstps
sbb
xor
jnp
pusha
stos
mov
clc
and
shll
cmp
mov
cld
pop
add
cltd
aam
daa
fsubl
in
cmp
aas
pop
scas
add
fdivs
aam
sbb
xor
std
jl
mov
loop
sbb
add
and
add
or
out
jmp
xor
add
sub
and
aaa
mov
arpl
push
xor
and
add
pop
or
aas
add
mov
sbb
add
cmpsl
sbb
xor
xchg
addr16
out
pop
cs
add
jae
sbb
pop
call
pusha
or
add
inc
mov
bound
add
sti
xchg
and
add
repnz
xchg
adc
enter
or
pop
jb
orl
insl
enter
or
imul
push
cmp
or
fs
or
sti
push
jmp
adc
andb
pushf
imul
pop
and
cmp
push
add
and
inc
imul
rolb
inc
push
fs
add
aam
cmp
leave
inc
es
push
jecxz
pop
xor
nop
push
sub
pop
cmp
xchg
pop
popa
push
pushf
movsb
mov
mov
in
mov
mov
push
lods
add
mov
imul
push
lldt
or
mov
lds
add
pop
out
push
jo
sub
add
xchg
fwait
sub
add
adc
add
pop
dec
adc
les
sbb
sub
jno
mov
inc
sbb
pop
mov
adc
cmp
fidivrs
push
or
sti
incl
mov
inc
push
mov
lds
sbb
sbb
andb
add
cltd
cltd
inc
and
sbb
adc
mov
dec
fldenv
push
cmp
aaa
add
int3
ds
dec
lcall
xchg
notl
inc
mov
or
lret
push
xor
push
scas
stos
popf
in
test
inc
pop
cpuid
arpl
aaa
test
or
push
sbb
add
sub
enter
into
and
pop
adc
xchg
sbb
xor
xchg
cmpsb
sub
movsb
cmp
inc
adc
adc
inc
call
mov
loopne
push
in
leave
and
popa
push
dec
mov
add
and
xor
movsb
sbb
dec
jbe
dec
dec
aam
xchg
pushf
add
cld
cmp
clc
or
dec
add
sub
mov
mov
mov
and
or
xor
push
add
arpl
jecxz
push
mov
sbb
pop
mov
sub
or
add
mov
inc
inc
add
cmc
daa
and
jb
rorl
jb
pop
jb
add
pop
jb
pop
pop
inc
inc
test
and
cmp
sbb
add
cmpsb
call
inc
sbb
add
lods
mov
cmp
cmc
push
adc
xchg
cld
enter
fadds
mov
inc
dec
sbbl
flds
inc
dec
and
pop
xor
les
leave
sbbl
sub
adcb
mov
fcoml
cmpsl
daa
and
inc
push
in
cs
aam
mov
dec
sbb
add
or
daa
mov
pop
out
sbb
insb
sbb
add
iret
je
adc
add
add
outsl
hlt
adc
inc
jge
adc
jp
add
dec
mov
push
push
dec
and
and
add
add
push
or
leave
mov
inc
add
push
and
inc
push
mov
inc
leave
add
jno
xchg
or
inc
jb
and
pop
fldcw
cmp
add
fwait
xor
add
adcb
repnz
and
orl
std
sub
add
cwtl
nop
add
dec
adc
add
mov
cltd
and
push
jnp
add
shll
sub
xchg
pop
sbb
test
xorl
int3
add
xor
xor
sbbl
push
xchg
or
outsb
inc
push
fs
gs
push
in
push
in
sbb
jbe
mov
mov
dec
push
inc
js
fstl
or
popl
jle
inc
cmpsl
movsb
sbb
mov
or
add
fs
and
rorb
je
xchg
bound
lahf
jnp
lea
dec
lret
fdivl
and
pop
adc
sub
nop
mov
push
pop
dec
cmc
dec
insb
pusha
call
or
push
mov
inc
inc
dec
sub
les
push
mov
xchg
dec
sbb
jno
pushf
push
adc
push
and
pop
add
push
and
movsb
add
pusha
jne
cmp
mov
jno
inc
and
enter
movsb
mov
xchg
push
adc
or
and
scas
xor
in
data16
dec
enter
sbb
andb
dec
orb
sbb
add
adc
ret
adc
out
add
adc
nop
sbb
stos
xchg
inc
and
and
add
adc
fdivrs
add
adc
pop
push
mov
iret
push
adc
push
shll
push
xchg
cmp
pusha
pop
pop
mov
pop
mov
loopne
mov
push
nop
add
nop
push
push
push
inc
push
or
and
push
mov
sub
push
nop
push
xor
cmpsb
nop
add
pop
nop
or
nop
add
xorl
sbbb
add
jbe
daa
and
or
or
mov
dec
gs
jns
dec
aam
xchg
dec
xor
lds
sbb
dec
scas
xchg
sbb
or
out
xchg
add
xor
sub
inc
iret
and
dec
add
stc
inc
out
dec
pushf
sub
add
aaa
insb
mov
push
pop
sub
sbb
adc
imul
cmpsl
mov
or
repnz
inc
inc
mov
in
add
int3
add
and
lds
mov
cmp
fs
push
add
mov
sbb
and
stos
push
fs
push
inc
push
pop
mov
nop
add
hlt
rclb
mov
adc
and
cmp
enter
or
orb
inc
orb
push
cmp
cmp
jo
xchg
or
mov
fadds
add
das
cwtl
xor
xchg
nop
ror
or
mov
push
mov
jb
sbb
pop
cmpb
pusha
mov
divb
or
insb
dec
pop
ret
push
popw
jbe
negb
jmp
je
xor
pop
imul
test
lods
inc
cmp
and
sbb
inc
ss
stos
addb
jl
mov
sbb
dec
dec
push
pop
jb
push
dec
xor
pop
jb
push
inc
jb
pop
jb
inc
push
pop
jb
pop
sub
inc
push
jno
das
push
outsb
aad
adc
sahf
adc
outsb
arpl
hlt
sbbb
push
shll
add
inc
jecxz
mov
mov
jl
xor
inc
sbb
movsb
scas
push
fmuls
out
adc
sub
sub
pop
xchg
xchg
int
stc
sbb
dec
add
pop
push
in
aaa
pop
mov
xor
or
int
add
sub
add
jge
cmp
incb
std
cld
mov
sub
add
push
xchg
in
xchg
iret
push
or
pop
add
std
or
call
std
or
daa
pop
push
enter
fs
in
std
or
test
or
sahf
cwtl
std
push
or
xchg
in
js
adc
std
adc
pop
sahf
fs
dec
std
pop
outsb
inc
xchg
adc
out
std
adc
xchg
xchg
sub
std
adc
in
lret
dec
std
pop
adc
sbb
repnz
adc
sbb
mov
push
pop
mov
add
cld
ljmp
test
inc
add
mov
repz
add
pop
mov
inc
cmp
push
cmp
std
xchg
adc
das
scas
sub
mov
or
inc
incl
cld
xor
sbb
xor
push
push
push
mov
es
sbb
sbb
add
sahf
nop
cmpsl
imul
push
inc
mov
mov
or
dec
push
sbb
sti
pop
sti
out
mov
in
hlt
sbb
mov
out
adc
mov
mov
and
mov
daa
add
loopne
sbb
cld
pusha
jo
push
and
fimull
ret
and
shlb
jp
sbb
fisttpl
movsb
test
push
mov
pop
mov
dec
pop
mov
inc
icebp
inc
daa
cwtl
icebp
add
inc
dec
or
dec
mov
sbb
or
push
and
push
fwait
push
sub
movsb
inc
arpl
add
int
dec
adc
test
mov
int3
inc
lret
add
fldl
aas
movsb
add
ret
arpl
jl
je
cmpsb
imul
fistpl
add
and
out
movsl
roll
pushf
add
xor
das
stos
sub
sbbb
ss
inc
xor
cltd
or
push
cmp
inc
or
push
ss
pop
xor
rcll
insb
inc
xor
add
add
out
xchg
add
rolb
lret
or
sbb
mov
pushf
inc
add
lret
xor
mov
add
and
pop
js
and
and
clc
mov
mov
sbb
test
push
mov
adc
lcall
or
mov
lea
mov
rclb
sub
inc
rdmsr
enter
add
xor
rclb
or
cld
cwtl
pushf
push
add
add
mov
jge
in
fcompl
jbe
and
loopne
or
fwait
mov
aaa
aam
shrb
cmp
push
xchg
dec
or
jne
int
loopne
dec
or
in
inc
cmp
add
mov
and
and
mov
push
iret
inc
push
adc
fdivr
aam
jb
and
int3
enter
sbb
rolb
nop
lods
test
push
jmp
jb
xchg
add
push
mov
xchg
add
jl
pop
enter
pop
in
cli
mov
mov
cmc
cmp
pusha
and
inc
add
or
call
dec
in
add
pusha
fisttpl
dec
leave
data16
decb
comiss
or
pushf
xchg
lret
ficoms
jne
add
jae
adc
dec
cmpsb
add
add
mov
or
sbb
or
sahf
sub
lcall
or
sub
das
pop
xchg
or
add
pop
jbe
cltd
imul
mov
xchg
pushf
adc
mov
sub
pusha
pusha
mov
aaa
out
push
rcrl
movsl
in
dec
or
test
dec
shrl
lods
xor
orl
mov
sbb
xchg
dec
xorl
add
push
push
mov
flds
inc
sbb
imul
xor
and
loop
and
inc
add
sbb
nop
or
push
or
popa
inc
lret
in
fnsetpm(287
mov
pop
and
dec
xchg
test
inc
jmp
xchg
cmp
add
push
ljmp
add
and
xchg
or
or
fs
inc
add
cmc
xor
sbb
xor
xor
or
mov
adc
andb
sub
xor
fs
add
adc
dec
push
movlps
xchg
push
add
sub
sbbl
popa
test
dec
leave
and
inc
sbb
sbbl
jb
adc
and
and
orb
push
sbb
orb
push
orb
pop
dec
ret
enter
loop
lret
orl
enter
adc
cmpsb
xor
test
add
hlt
and
sub
inc
test
fs
out
push
jae
in
push
sub
in
dec
push
in
push
in
sbb
insb
mov
sub
or
or
jnp
enter
enter
and
nop
leave
add
and
adc
sub
jns
lcall
iret
add
test
sbb
rcll
mov
sub
arpl
jo
js
add
adc
mov
xor
or
mov
dec
daa
jp
sub
and
add
jo
pop
xchg
cmpsl
or
ficoms
pop
sbb
inc
sub
daa
and
xor
jbe
sbb
scas
add
dec
sahf
inc
subl
lret
sbbb
addl
push
jl
sub
orb
adc
orb
pop
enter
inc
pop
orb
dec
dec
and
inc
addr16
inc
mov
sbb
inc
or
nop
add
add
inc
nop
add
nop
inc
push
inc
cmp
pop
cmp
mov
push
inc
inc
cmpsb
sbb
and
clc
adc
push
pop
sarl
hlt
mov
outsl
adc
por
adcl
pop
push
or
inc
jb
dec
add
pop
decl
pop
jle
jl
test
xor
test
xor
pop
sbb
ljmp
cld
adc
add
xor
xor
xor
in
fsubrl
cmp
jne
test
xor
xor
add
or
nop
pusha
jnp
dec
jae
adc
cmp
out
nop
pop
inc
jo
sub
cmp
frstor
sub
or
jg
add
and
pop
mov
enter
push
dec
xor
cmp
in
stos
xor
jo
std
pop
adc
pop
jb
push
pop
jb
dec
lret
sub
testb
add
sbb
mov
stos
inc
xlat
lods
cltd
lea
mov
stos
dec
dec
push
orps
stc
add
and
inc
inc
cmp
add
and
xor
inc
pop
xor
and
xor
sub
push
mov
xchg
add
add
inc
mov
sbb
xchg
add
xor
jae
test
cmpb
cmpsb
nop
ret
clc
add
push
in
push
add
dec
push
push
in
push
dec
or
jmp
push
inc
aad
pop
and
push
jb
pop
jb
dec
push
add
pop
sbb
add
mov
xor
sbb
orl
xchg
rorl
xor
xor
adc
add
mov
sbb
add
test
adc
and
cmp
xor
add
fs
add
or
sub
pushf
push
sbbl
cwtl
push
fadds
pop
and
frstor
or
or
cld
add
add
xor
pop
add
or
ja
xchg
xchg
add
or
or
addr16
or
or
call
inc
adc
jns
xor
dec
test
loop
cli
pop
inc
add
push
mov
data16
mov
cld
clc
into
dec
adc
pusha
scas
add
add
fs
sub
lret
and
pop
cmp
and
push
push
push
inc
adc
lret
dec
push
dec
flds
fldenv
pop
add
add
pop
xor
xor
cmp
leave
jbe
mov
dec
dec
sub
pop
xor
inc
sub
and
bound
mov
jbe
pop
jb
adc
andl
cmp
lret
push
mov
and
push
sub
cltd
fs
in
int3
or
das
call
xor
fs
fs
push
fdivs
aam
xor
dec
xchg
dec
int3
dec
enter
xchg
dec
les
shlb
mov
xor
lods
addr16
jbe
pop
test
movsb
inc
cmp
pop
xor
insb
pop
xor
dec
xchg
nop
je
pop
jb
xchg
mov
and
pop
xor
dec
js
je
mov
push
add
mov
jo
enter
jmp
nop
jle
add
es
pop
push
dec
push
in
push
push
push
inc
inc
push
in
push
psraw
in
pop
inc
sbb
sub
add
test
rcrl
pusha
and
adc
orl
and
add
ss
and
push
pop
jb
pop
push
inc
dec
and
jb
push
aaa
jb
pop
jb
push
push
pop
jb
pop
dec
push
dec
and
jb
cmp
jb
dec
cmp
cs
and
jb
ss
jb
pop
jb
inc
push
mov
pop
pop
inc
push
je
push
rolb
dec
adc
xchg
or
sub
xchg
push
push
cmpsl
jg
adc
adc
ret
sub
fmull
jae
add
add
push
xor
lock
mov
adc
add
pop
pop
xorl
pop
push
test
sbb
push
dec
dec
sbb
sbbl
enter
enter
xor
sbb
sbbl
enter
enter
adc
sbb
push
cmp
cmp
add
nop
add
nop
add
nop
pop
push
add
nop
add
das
xor
add
add
dec
nop
add
nop
push
aaa
inc
cmp
dec
add
enter
nop
mov
test
orb
jl
or
orb
insb
orb
push
leave
pusha
mov
mov
inc
pusha
inc
add
sahf
orb
add
adc
leave
push
adcb
cmp
add
nop
add
cmp
add
adc
pusha
out
repz
xchg
ss
inc
push
xchg
or
enter
inc
sub
fadds
inc
xor
fadds
add
push
push
ss
cs
inc
adc
push
popa
push
adc
orb
cmp
inc
enter
enter
dec
push
aaa
sbb
sbbl
enter
push
in
pop
int
cwtl
inc
push
in
xchg
nop
in
push
in
mov
jl
dec
push
in
je
sub
sahf
lcall
roll
sbb
and
add
or
movsb
int
mov
repz
sbbb
std
xchg
adc
pop
adc
test
iret
inc
add
sbb
inc
push
add
dec
mov
pop
and
xor
pop
sbb
andb
cmc
pop
cmpsb
add
call
or
subb
jge
jbe
cmp
pusha
add
cs
sbb
iret
sbb
or
pop
notb
cld
sub
or
inc
nop
or
pop
inc
sbb
add
or
inc
leave
add
pop
enter
inc
push
test
adc
xor
sub
pop
xor
enter
bound
mov
mov
pop
and
mov
push
xchg
or
nop
dec
dec
dec
cs
inc
es
xor
inc
cs
xor
daa
sub
xor
in
inc
pop
adc
cs
sbb
push
push
push
dec
cs
push
push
mov
mov
dec
cs
mov
dec
mov
adc
in
orb
enter
inc
dec
enter
push
shll
pop
enter
or
and
dec
inc
inc
jb
dec
pop
enter
dec
mov
push
or
test
iret
cmp
add
xchg
rclb
and
es
or
repz
or
or
inc
pop
das
mov
adc
nop
add
or
or
mov
xor
adc
push
add
test
sub
cs
and
push
dec
or
push
and
jb
xor
gs
and
push
pop
adc
leave
sub
adc
inc
adc
test
xchg
aaa
inc
and
jb
mov
pop
jb
sub
or
jb
adc
jb
pop
jb
inc
push
pop
jb
pop
dec
inc
dec
and
jb
or
dec
and
in
mov
dec
cs
push
inc
call
xor
mov
cmp
popa
and
cs
lea
dec
dec
mov
dec
add
and
inc
and
push
test
pop
dec
enter
push
inc
inc
mov
xor
mov
nop
or
inc
mov
mov
inc
and
rcrl
nop
dec
bound
and
or
xor
mov
pop
enter
inc
cmp
and
push
and
inc
mov
pop
jb
push
and
xor
pop
inc
adc
dec
pop
mov
pop
or
push
decl
add
xchg
cli
inc
mov
cmp
mov
xchg
or
add
and
cmp
jb
xchg
inc
push
sbb
pop
enter
pop
dec
dec
and
cmp
push
xor
dec
enter
fiaddl
pop
pop
enter
inc
push
test
push
inc
xchg
pushf
pop
enter
xor
das
and
jb
negb
push
dec
and
jb
dec
inc
test
dec
push
enter
push
cmp
pop
pop
xor
test
inc
cs
adc
xchg
xchg
les
xor
add
mulb
cmp
nop
adc
decb
cmovne
or
in
inc
es
push
pop
in
push
push
sbb
or
lret
pop
add
leave
pop
sub
sahf
inc
icebp
inc
push
lods
es
or
test
in
cs
add
mov
xchg
scas
xor
push
mov
dec
loope
in
mov
inc
inc
cs
cs
add
cs
push
add
inc
cs
dec
inc
cs
cs
add
cs
dec
dec
in
cs
push
add
in
cs
dec
inc
cs
dec
dec
in
cs
inc
pop
sub
inc
cs
dec
xchg
popf
push
pop
add
sub
jbe
int3
sbb
loop
insl
dec
add
jg,pn
lcall
inc
push
mov
inc
cs
push
dec
mov
inc
cs
inc
loope
mov
push
push
je
add
pop
or
addl
push
in
es
and
fsubrl
in
cs
dec
dec
nop
mov
inc
inc
inc
nop
xchg
or
mov
push
in
cs
push
push
push
mov
and
pop
in
test
adc
es
or
lods
cwtl
push
push
es
add
xchg
lret
pop
inc
push
mov
dec
inc
push
add
add
cmpsb
mov
in
inc
add
movsb
cwtl
inc
pop
popf
mov
cs
xchg
or
or
push
and
sub
xchg
or
push
popa
xchg
lret
es
dec
and
push
in
push
lret
adc
dec
push
push
xchg
pop
ret
dec
push
test
inc
xor
leave
test
inc
push
test
push
or
add
pop
enter
subl
jmp
jmp
mov
addb
movsb
cmp
dec
or
dec
pop
xor
push
add
and
or
add
dec
lcall
inc
movsb
cwtl
dec
and
and
or
dec
call
pop
enter
push
leave
test
or
mov
aad
pop
push
pop
inc
pushf
mov
push
pop
inc
cs
add
mov
or
xor
and
add
aam
inc
add
jae
mov
sbb
add
gs
pushf
mov
pop
dec
dec
push
xor
add
leave
fs
ss
sbb
inc
inc
inc
dec
imul
pop
push
push
pop
leave
and
mov
adc
add
xor
pop
dec
xor
push
add
test
or
xorb
mov
and
adc
popa
rolb
add
leave
inc
inc
push
jb
add
mov
pop
and
or
xor
or
dec
pop
popa
mov
push
sbb
xor
test
inc
add
jb
inc
enter
push
xor
rolb
and
adc
inc
xor
or
dec
adc
rcpps
or
xchg
pop
inc
push
andb
xor
jno
add
xor
xchg
les
mov
inc
ss
in
cltd
test
inc
push
enter
pop
jb
pop
pop
pop
adc
adc
nop
sub
pop
and
es
adc
add
xor
fs
push
inc
dec
loopne
and
push
adc
mov
mov
mov
sub
push
or
or
int3
cmp
xor
jmp
stos
stos
movsb
add
adc
xchg
add
decl
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
ja
aam
decl
jae
data16
ljmp
add
mov
dec
mov
add
push
xchg
push
xchg
in
dec
fsubs
dec
outsb
jbe
imul
add
pop
lcall
push
pop
inc
sbb
or
xchg
gs
ss
push
push
add
push
pusha
xchg
gs
lds
push
add
fsts
push
bndmov
xor
inc
push
mov
je
subb
fistpl
xor
mov
cmp
insb
fstl
or
pop
gs
cmc
and
pop
add
popaw
arpl
pop
pop
jbe
popa
inc
js
dec
adc
xor
sub
mov
movl
add
int
add
mov
dec
jo
or
lret
mov
lret
test
inc
lods
pop
mov
pushl
cs
repnz
inc
inc
add
push
inc
add
dec
add
add
xlat
dec
add
mov
sti
sidtl
add
or
add
adc
insb
ja
scas
lock
inc
or
cmp
add
and
mov
mov
mov
adc
fdiv
mov
push
add
jecxz
sub
xchg
inc
mov
aam
adc
bound
sbb
and
cs
mov
sbb
add
in
adc
pusha
sub
mulb
inc
adc
repz
or
jb,pn
jb
ret
lret
sub
inc
sbb
in
xchg
add
ss
add
or
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
