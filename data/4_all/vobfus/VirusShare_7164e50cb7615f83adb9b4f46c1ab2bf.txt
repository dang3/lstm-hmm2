sbb
add
outsl
std
out
aaa
out
push
push
xchg
adc
mov
lret
out
dec
mov
adc
mov
push
mov
lods
fsqrt
push
cli
outsb
and
jl
ret
push
xchg
leave
and
jl
xchg
pop
add
outsb
jne
mov
xchg
je
cli
mov
repz
das
dec
cmp
or
andb
cmp
mov
stos
jns
in
adc
lods
and
jnp
jns
adc
jbe
cmp
popa
or
lahf
sub
fiaddl
fstl
cmp
push
jg
sub
es
mov
or
sbb
cmp
lds
mov
or
dec
fidivl
mov
jg
mov
inc
jl
and
daa
cmp
dec
sti
in
hlt
mov
sbb
mov
mov
add
xchg
negl
cwtl
sbb
in
push
fmuls
mov
and
push
lret
mov
cmpsl
lods
in
std
push
and
insl
pop
xchg
inc
push
jae
mov
fadds
out
test
xchg
sub
shlb
inc
mov
add
xlat
lods
mov
cmp
sbb
js
or
xor
faddl
dec
and
fistpl
pop
jl
loope
cmp
fildll
loopne
insb
dec
das
fldcw
mov
pop
and
in
and
pushf
addr16
mov
ljmp
js
stos
mov
sub
aad
pop
enter
jmp
cmp
mov
hlt
and
and
adc
cs
dec
mov
jne
add
sub
fs
mov
pop
jb
or
jno
imul
movsl
inc
lea
data16
nop
cmp
sti
sahf
sbb
lds
cmp
les
ffree
dec
xlat
push
mov
sbb
inc
not
mov
ret
aad
loopne
lret
push
or
add
jecxz
sbb
inc
bound
ds
test
push
ret
fwait
pop
out
movsl
pusha
fwait
xchg
movsb
fisubrl
jae
mov
movsb
mov
and
hlt
vcomisd
enter
pop
popa
jecxz
ret
fiadds
push
xchg
or
push
insb
jl
test
inc
paddusw
pop
in
ds
fbstp
sti
mov
stos
inc
push
aad
std
xor
call
xchg
sbb
adc
pushf
popa
mul
and
inc
daa
cmpsl
cmpsb
xchg
popf
pop
loop,pt
push
adc
dec
jp
test
or
aad
xor
mov
add
inc
add
fbstp
pop
cwtl
cltd
in
arpl
scas
xor
shlb
sbb
movsl
xchg
rorb
jns
mov
bound
fldl2e
popf
sar
adc
inc
mov
shl
xchg
repz
popa
addr16
sahf
scas
mov
sbb
cmp
push
xlat
mov
and
into
push
sub
xor
ljmp
sub
mov
and
or
mov
jl
lcall
cmp
lock
mov
insb
clc
inc
icebp
scas
xchg
ds
push
cmpsl
repz
out
pushf
loope
fildl
add
fistpll
fadd
mov
push
add
movsl
es
aam
mov
inc
jnp
fs
pop
sbb
push
mov
lret
test
push
xor
lret
mov
ds
imul
jg
aas
cwtl
cmp
mov
aaa
shlb
inc
adc
add
or
cli
jo
add
jecxz
and
sahf
xchg
push
inc
fcomps
fcomps
dec
sti
imul
sub
out
jne
xlat
movzbl
rorb
dec
xchg
mov
cmp
mov
testb
pop
jl
xlat
xchg
test
mov
add
xchg
adc
icebp
mov
xor
sti
cmp
mov
cmovg
lret
push
cs
push
cmpsl
imul
mov
xchg
jle
mov
xchg
sahf
scas
jge
fcom
pop
out
sub
das
fadd
scas
jl
adc
inc
inc
pop
adc
nop
andb
lret
outsb
iret
push
fsts
test
stc
js
fwait
hlt
call
loop
mov
clc
mov
sbb
pop
jmp
xor
cltd
mov
insl
push
sahf
cmp
inc
in
lret
shlb
jg
mov
xchg
int3
mov
mull
xchg
dec
mov
fidivrl
sti
sbb
jle
mov
push
jne
repz
cmp
aas
sub
call
stc
cs
push
mov
test
add
dec
es
mov
sbb
out
aam
push
pusha
jne
cltd
dec
verr
push
sbbl
add
shlb
insb
pop
insb
jle
inc
out
jae
nop
ficoml
sub
orb
adc
push
mov
lcall
cmp
int
jmp
push
push
pusha
fcomps
cmp
sbb
mov
fwait
popa
fcmovnb
pop
inc
sub
sub
inc
inc
mov
outsb
pop
rorl
popl
pop
mov
jle
ds
bound
out
lods
sub
lahf
dec
out
push
lret
insb
xor
or
ret
scas
jne
cltd
mov
or
loope
cld
cmp
pop
and
push
jb
les
push
mov
jp
xor
add
negl
jecxz
adc
in
push
xlat
mov
ja
mov
enter
ja
xchg
adc
xor
clc
adc
jb
inc
ficomps
int
shlb
jae
popa
in
shll
std
sub
rolb
pop
push
jmp
adc
add
jnp
clc
lock
mov
xchg
out
test
movsb
or
or
xor
jbe
psrld
jge
fmuls
ret
mov
sub
jno
inc
add
insl
mov
lcall
push
xchg
adc
insl
xchg
xor
sub
dec
test
jns
inc
sbb
lds
jp
repz
xor
push
xchg
fucomi
mov
or
icebp
aaa
out
iret
arpl
roll
int3
mov
clc
scas
cmpl
inc
jmp
aas
pop
mov
push
das
push
aaa
push
imul
stos
fisubs
mov
mov
xor
or
cmp
jns
cs
jne
out
fwait
lock
push
push
lea
sbb
out
xchg
mov
out
mov
dec
and
add
jge
mov
jge
out
imul
out
or
fstpt
shlb
lea
xor
cmp
leave
mov
addl
sub
mov
ljmp
pop
shll
adc
movsl
mov
jecxz
push
stos
pop
ret
inc
adc
cld
adc
daa
cmp
jae
pusha
mov
ret
inc
mov
adcl
add
sbb
lods
or
shrb
cwtl
stos
arpl
mov
addr16
sub
rcr
inc
in
addr16
cmp
push
mov
sbb
xlat
mov
rolb
mov
leave
pop
cmp
push
xchg
out
or
jmp
push
lds
xchg
fisttpl
jae
sub
mov
nop
and
mov
cs
jmp
mov
mov
in
dec
cmpsl
jno
mov
test
cmc
mov
add
movsb
add
es
push
jmp
out
jae
mov
xor
pusha
aam
fstps
push
out
add
jnp
cmpsb
jg
sub
aam
shrb
in
mov
imull
stos
movsl
cmp
mov
cli
rcll
push
mov
mov
mov
push
imul
cwtl
cmp
lods
sub
add
xchg
mov
mov
orb
jnp
shlb
xchg
add
movsl
dec
mov
xor
sub
mov
inc
fnstsw
ret
icebp
es
imul
enter
movlps
inc
cmp
mov
hlt
sub
dec
repz
stos
ljmp
push
call
repz
jg
or
fimuls
fbstp
pop
push
jns
jl
xchg
pop
int3
push
push
ret
jae
out
push
jp
cmp
sub
test
cld
mov
pop
or
cmp
mov
insl
adc
dec
mov
imul
notb
pop
mov
pop
add
fbstp
icebp
sub
jmp
xor
lahf
inc
and
mov
dec
daa
rclb
adc
dec
sbb
adc
pop
pop
fucomi
fistpl
loope
repz
dec
sub
add
jmp
push
aad
mov
xor
xor
fmull
and
test
pop
int3
fcompl
lcall
xor
push
loop
cmpsb
fidivrs
maskmovq
mov
arpl
mov
scas
cli
out
xlat
xor
and
in
pop
or
test
fstl
and
sti
sub
or
sbb
xchg
icebp
sub
xchg
test
sub
mov
in
mov
jb
shll
fmuls
mov
mov
push
dec
xchg
fiadds
pop
adc
adc
outsl
cmp
adc
sbb
and
sub
push
stos
rorl
add
test
or
push
cli
dec
jmp
fsubrs
jecxz
subb
ss
clc
rcrb
pop
and
mov
test
faddp
jmp
out
es
je
and
outsb
push
push
js
mov
xchg
add
mov
into
and
mov
add
das
xchg
test
dec
mov
cli
movsl
sahf
push
shlb
das
xchg
mov
push
mov
sti
adc
lock
xor
adc
mov
loop
fstpt
adc
daa
imulb
push
or
push
fbstp
jmp
or
dec
or
pop
or
out
and
lods
inc
pop
rcll
sti
push
cmp
popf
fucomip
add
ljmp
loop
lcall
loope
inc
adcb
sub
push
fs
mov
push
mov
inc
int3
mov
pop
fnstcw
je
xor
ret
mov
cmp
popf
jge
cld
outsl
es
dec
fisubrl
stc
aad
arpl
adc
lcall
adc
sbb
inc
inc
inc
leave
mov
push
dec
dec
cmp
jge
arpl
in
lds
jo
ljmp
test
or
fdivrl
pop
push
les
mov
dec
call
xchg
insb
xchg
push
add
insb
xor
orb
pop
mov
sbb
in
lahf
xchg
in
xchg
pop
loope
cmp
add
sub
mov
dec
imul
push
aaa
add
and
lret
mov
fsubrl
daa
movsl
ret
adc
add
add
aas
dec
pusha
into
or
jo
and
adc
push
shl
push
xchg
sub
imul
iret
dec
mov
in
and
xchg
ret
out
and
pusha
push
push
idivb
and
scas
sub
jo
dec
mov
faddp
jae
cmp
and
outsb
test
dec
mov
push
jnp
push
inc
in
inc
sbb
inc
jmp
dec
mov
ret
xchg
mov
mov
xor
xchg
dec
outsb
aad
xchg
lds
mov
push
ss
fimull
fs
mov
lcall
ret
andl
movl
mov
bound
mov
arpl
or
popa
cmp
xchg
inc
mov
cmp
in
test
xchg
pop
xor
montmul
cmpsb
inc
icebp
ljmp
push
lahf
mov
movsl
mov
and
imul
mov
andl
les
sbb
sub
test
dec
pop
scas
loopne
pop
jmp
icebp
in
jne
add
pushf
inc
add
jp
shl
int3
insl
fisubs
lods
push
jmp
fsubs
sbb
jl
ja
stc
sbb
and
xchg
lods
cmpsl
aas
repnz
cmp
inc
sbb
xchg
sub
lds
test
mov
dec
dec
xchg
gs
push
xchg
fisttps
or
xor
and
ret
ss
scas
jns
add
mov
or
bound
sbb
in
scas
fwait
dec
fs
outsb
js
cli
dec
mov
dec
roll
lock
pushf
popf
movl
pop
test
xchg
arpl
xor
rcrb
das
sbb
test
ret
xchg
sbb
test
aaa
loopne
adc
or
or
mov
inc
mov
das
mov
mov
rcr
out
lcall
movsb
adc
stos
cmp
stc
je
addb
mov
pusha
mov
xor
cmpl
fldt
or
scas
negl
adcw
bound
push
pop
sbb
pop
je
add
jmp
pop
aam
cmp
jo
jno
sbb
sbb
adc
cmp
fimuls
les
ret
or
add
out
mov
add
cli
cmpsb
loope
ljmp
inc
mov
out
test
outsl
leave
sbb
ljmp
repnz
cmc
jnp
adc
dec
push
xchg
push
je
add
and
cs
or
add
add
loopne
in
inc
jmp
pushf
cli
lea
push
mul
sbb
adc
xchg
fwait
stos
pop
cmp
mov
and
inc
and
jae
arpl
push
push
xor
ret
xor
addr16
out
xor
out
test
rolb
sub
fisttpll
xchg
in
pusha
pop
inc
pop
jecxz
mov
or
fisubrl
jae
in
inc
ret
loope
sbb
movsl
imul
pop
fcmovnb
pop
mov
jle
fcomi
int
es
mov
data16
mov
sub
jno
mov
cmp
arpl
cmp
and
notb
popf
jp
stc
lea
push
aam
adc
test
sub
mov
jnp
nop
frndint
sbb
cmp
add
stos
add
xchg
push
adc
mov
push
mov
and
fists
ficompl
leave
out
and
jle
sbb
out
mov
jno
mov
cwtl
dec
jle,pt
or
insb
jb
push
fadds
int3
xor
inc
push
orl
fidivl
int3
lods
jmp
and
or
sub
lods
mov
dec
xchg
jg
cmp
scas
adc
mov
jl
mov
out
ja
les
jp
xchg
inc
test
jl
sahf
addr16
movsb
mov
leave
mov
jmp
and
scas
into
sbbb
cmc
sti
ja
insb
subb
ret
jbe
inc
rclb
dec
mov
mov
es
in
add
sub
push
gs
jnp
and
fwait
lock
pop
out
insl
je
bound
xchg
mov
jmp
dec
jnp
mov
mov
bound
push
jns
mov
lahf
adc
dec
pop
xchg
jb
lcall
inc
jae
cmp
push
inc
daa
xor
adc
mov
std
push
adc
xor
lret
adc
add
sub
push
add
sti
iret
fwait
add
nop
mov
pop
rorl
xchg
pmulhw
adc
aas
pop
push
jge
and
nop
ret
adc
pop
adc
jmp
dec
cmp
ret
or
psubq
test
inc
fs
mov
adc
call
mov
in
mov
xchg
pop
movsb
into
cmp
es
inc
and
aaa
out
pop
shlb
shlb
jo
sbb
cmpsb
push
cmpsb
scas
jle
sub
cmp
out
inc
test
dec
cmp
jmp
dec
mov
mov
mov
xor
test
cmp
fbld
adc
pop
sub
aad
dec
cvttps2pi
nop
fsts
es
jno
jecxz
fisttpll
out
mov
pusha
sti
scas
push
mov
or
pop
in
jbe
or
scas
and
jnp
push
cmp
xchg
fwait
push
and
aad
push
das
mov
xor
lret
xor
stos
das
add
lcall
fbld
cmc
sub
fadd
xchg
mov
das
lcall
cld
out
dec
mov
int3
xchg
js
fwait
jno
push
call
movsb
pop
jb
push
call
imul
push
push
inc
sub
dec
clc
ja
xchg
dec
pop
leave
mov
mov
shlb
ret
mov
or
es
xor
cmp
enter
and
ret
aaa
jecxz
mov
push
imul
push
dec
xor
push
test
mov
daa
fimull
xor
popf
mov
cwtl
mov
and
pop
xchg
pop
sbbl
outsl
push
mov
std
xor
xor
xor
dec
xchg
divb
sub
mov
xlat
cli
jb
dec
mov
gs
insl
dec
leave
stc
inc
add
lcall
mov
sbb
or
xchg
inc
sub
dec
jge
sarb
cmp
or
and
and
mov
dec
xor
jbe
mov
fistpll
loope
sub
sbb
add
xchg
cmp
int3
cli
std
add
and
movsl
jge
lahf
test
mov
movsl
test
dec
shlb
mov
cmpsl
and
push
mov
neg
loopne
adc
in
xor
jb
xor
mov
out
cmp
scas
inc
in
mov
ret
outsb
and
clc
fwait
movsb
leave
scas
int3
dec
adc
mov
gs
lahf
loopne
push
cmc
pop
lret
mov
sarl
lcall
neg
jecxz
or
outsl
imul
sbb
cltd
xchg
lret
mov
sarb
lods
fwait
xchg
shlb
lea
xchg
sahf
stos
in
push
xchg
add
inc
lock
insl
aam
xor
cmc
xchg
mov
icebp
fstpl
jg
es
dec
call
xchg
mov
jmp
inc
cwtl
add
imul
mov
cmp
mov
lea
mov
jbe
into
and
mov
daa
cmp
ret
dec
mov
mov
ja
call
xor
lcall
inc
cs
sbb
cltd
pop
cli
mov
mov
in
lahf
inc
popf
movsl
mov
aad
lods
push
outsw
into
out
lods
cmp
mov
lret
sar
sbb
repz
pop
ds
std
inc
in
jne
pop
dec
movl
cli
ljmp
push
push
loope
pop
das
mov
imul
rcll
pop
rorl
pop
loop
aad
cmp
and
in
xor
shll
cmp
outsb
movsl
repz
pmaxsw
cltd
pop
aas
cld
aas
and
mov
mov
daa
cmp
xchg
fs
mov
xor
fstpl
mov
test
adc
std
adc
inc
jle
fadds
mov
and
test
fimull
lahf
sbb
outsb
movsb
mov
dec
and
or
push
mov
and
xchg
cmp
das
fsubrl
mov
mov
cli
jae
fnsave
pop
test
aam
ss
xlat
dec
outsb
into
or
je,pn
jmp
xor
sbb
inc
je
cmp
popa
sub
cwtl
mov
icebp
lret
mov
mov
cli
push
xchg
sub
add
sub
outsb
dec
add
ljmp
dec
fwait
mov
cld
out
and
ret
aas
xchg
push
fcom
dec
mov
sbbl
into
stos
dec
xchg
jnp
mov
lret
cwtl
xor
xor
add
lods
out
add
sub
loop
cld
jne
bound
push
dec
out
cld
scas
das
sbb
nop
jl
lea
call
push
xor
dec
insb
and
es
or
mov
into
arpl
cmp
inc
push
ret
pusha
jecxz
jno
loopne
bound
mov
ds
xor
aad
inc
mov
cmc
or
jns
jae
push
adc
enter
aam
mov
push
inc
and
inc
push
sub
mov
jp
cmp
push
pushf
dec
mov
loopne
int3
rolb
mov
fmuls
testb
cwtl
xchg
sub
xchg
mov
icebp
nop
js
movsl
outsl
ja
into
jmp
pop
and
push
icebp
mov
js
pop
decb
data16
mov
ret
in
aad
adc
loope
testl
sub
imulb
lock
xchg
loopne
xchg
iret
dec
lods
leave
notb
jnp
cmp
lcall
xor
sbb
fstps
int3
leave
pushf
out
xchg
fucom
jae
mov
arpl
or
lea
fisubrs
or
ret
sbb
aas
rorl
les
push
pop
mov
daa
mov
popa
mov
nop
test
leave
lret
rcrb
cs
sti
adc
insb
and
shrb
add
inc
ja
mov
and
divb
and
lock
js
out
cmp
lahf
dec
aaa
sub
xor
in
bound
sbb
stos
push
and
ficompl
dec
cmp
popa
movsl
lds
rorb
pop
jbe
out
mov
fdivs
mov
call
test
ret
fidivrs
fadds
ret
orb
mov
mov
dec
movsl
adc
call
arpl
sbb
lock
jno
cld
mov
lock
jmp
dec
imul
adc
xchg
inc
pop
stos
push
xor
js
or
into
and
nop
popf
out
jae
or
mov
mov
shrb
xchg
push
mov
mov
mov
dec
in
ja
out
and
jle
inc
stc
sbb
cmpsb
ja
loop
out
inc
jnp
shrb
mov
xchg
fdivrs
int3
pushf
dec
loop
and
mov
fildll
rcrb
test
jmp
pop
outsb
dec
shr
mov
sub
mov
pop
in
js
aad
jne
add
inc
bound
jne
add
dec
ljmp
push
ds
mov
dec
fstpl
cmpsl
mov
movsl
stos
inc
mov
push
movsl
insb
lahf
jb
jl
pop
add
stc
pop
add
test
push
fisttpl
sub
cmpsb
push
add
hlt
rcrb
lret
test
jge
adc
clc
mov
test
xor
jmp
xchg
jp
mov
jg
xor
adc
in
imul
dec
fidivl
and
lea
jno
push
rcll
pop
lcall
mov
test
nop
adc
pop
or
cs
iret
rcrb
pop
jae
loop
add
sbb
xor
out
xor
scas
jg
pop
push
add
outsb
and
int
dec
push
lea
das
in
push
mov
push
jg
dec
push
fstl
loop
icebp
imulb
mov
stc
push
or
ret
loopne
test
mov
push
mov
not
lods
xor
jp
js
cmp
test
cltd
ret
jecxz
in
inc
je
pop
and
jns
fcmovne
pop
jbe
sbb
push
filds
mov
orl
jns
or
adc
dec
xor
fwait
xor
inc
push
addr16
rclb
insl
dec
push
mov
mov
and
inc
fs
push
nop
pop
pop
rcrb
sub
adc
and
mov
push
push
mov
lock
add
mov
push
pop
adc
cmp
inc
pop
inc
mov
xchg
sahf
mov
pop
mov
mov
pop
mov
push
pop
cmp
fisttps
jbe
or
and
mov
mov
jne
add
xor
xchg
icebp
and
push
cmp
fisttps
fcomp
and
test
outsb
jg
ljmp
xchg
cmpsb
xor
or
adc
cwtl
pop
out
jnp
mov
mov
fbld
pop
pop
idivl
jne
ret
ds
push
mov
add
into
or
sbb
sbbl
push
sahf
and
mov
leave
mov
adc
popf
xorb
mov
shll
mov
or
jg
dec
push
adc
add
notb
cmp
test
sub
ds
add
mov
insb
mov
test
aam
inc
loopne
xchg
xor
sub
xor
lock
js
or
push
leave
xchg
adc
mov
and
mov
daa
divb
out
jno
push
jmp
out
and
decl
imul
mov
stos
cmc
or
iret
jnp
xlat
imul
sbb
out
in
shlb
jmp
sbb
das
adc
cmp
and
sub
sti
sbb
or
lret
shrb
mov
loopne
js
jns
inc
inc
ret
mov
inc
inc
push
movsl
mov
pop
shll
push
mov
adc
xchg
int3
adc
push
xchg
insb
es
loop
loope
xchg
push
lods
sbb
rolb
scas
pop
lds
jns
and
test
loop
adc
int3
repz
mov
and
movsb
jno
pop
movsl
xchg
mov
scas
adc
or
subb
xor
adc
ret
lods
cmp
cmp
gs
xlat
mov
into
shlb
xchg
cli
clc
sbb
jne
add
cmpb
clc
shlb
fucom
js
mov
xchg
adc
mov
enter
int3
lahf
daa
nop
cmp
shrl
daa
inc
in
loop
sti
pop
in
push
out
aam
mov
or
cmp
or
cwtl
repnz
add
mov
repnz
mov
loopne
inc
les
dec
jg
loop
dec
cmpb
je
movl
nop
outsl
fidivrl
pop
mov
popa
push
push
jl
xor
xor
test
aas
and
lods
int3
aam
jne
xor
sub
stc
mov
jl
cmp
mov
and
mov
adc
dec
push
inc
push
testl
xor
mov
mov
popa
stc
jo
jecxz
pop
sbb
push
or
lahf
mov
icebp
jg
rolb
jne
sub
push
cmpl
daa
mov
lret
pushf
out
dec
pop
jmp
push
pop
loope
mov
xchg
jno
sbb
stc
lahf
cli
mov
clc
mov
cs
shrb
jl
xchg
cmp
rcr
in
data16
ror
adc
jne
jp
pop
push
adc
and
addr16
stos
ret
aad
bound
aad
fisttpll
into
push
and
iret
or
out
popf
fdivl
cmp
jae
mov
jg
ljmp
jo
cmp
xor
mov
insb
orb
cld
push
mov
pop
neg
mov
inc
das
aam
fucom
out
or
xchg
and
and
sub
idiv
loop
lcall
dec
mov
push
cmp
jo
popa
fucomp
sbb
sbb
mov
es
xchg
arpl
scas
mov
shlb
ret
pushf
cmp
fdivrl
add
out
cmp
bound
ret
jns
mov
leave
dec
inc
outsb
cmp
cmpsb
addr16
jb
mov
inc
push
pop
fs
xor
xchg
inc
sbb
xchg
ss
mov
cs
add
in
dec
mov
jnp
dec
std
mov
decb
in
push
dec
xor
addr16
xor
or
mov
xor
cwtl
subb
sbb
orb
adc
movsl
leave
cmc
and
push
in
inc
xchg
mov
push
sub
push
cltd
add
mov
lahf
lods
mov
push
stc
dec
stc
js
fimull
aas
lret
int3
cmp
sbb
jb
mov
call
jmp
dec
adc
iret
xchg
test
lahf
push
les
aaa
jg
xor
movsl
cmpb
add
repnz
sub
shrb
jecxz
lcall
push
or
cs
jo
shll
adc
ljmp
mov
xchg
inc
inc
sar
ljmp
or
in
mov
cltd
adcl
aas
pushf
mov
cld
xchg
add
inc
lret
repz
out
mov
lock
sbb
sbb
fcoms
cmp
and
ret
ret
sbb
cmpsl
in
mov
push
and
movsl
sbb
ficoml
jnp
sbb
fbld
or
cmp
mov
push
cmp
movsl
rcrl
lea
or
jnp
push
jg
clc
add
sub
xor
and
lock
pusha
and
or
ja
mov
fsubl
mov
or
sub
test
sarl
sub
pop
sbb
mov
sub
hlt
es
jp
mov
add
push
loope
test
mov
sbb
inc
push
mov
and
enter
xchg
ljmp
out
not
int
mov
dec
mov
mov
jp
or
shll
mov
mov
nop
lds
aaa
cmc
call
mov
enter
cwtl
movsb
cltd
arpl
inc
or
es
test
mov
mov
in
mov
xchg
mov
add
jno
das
xchg
mov
iret
jae
inc
mov
mov
xchg
xor
shrb
sub
cmp
call
xchg
cwtl
inc
lcallw
fistpl
push
sbb
movsl
cli
shlb
jg
push
mov
xchg
xor
mov
push
xchg
mov
inc
sbb
xor
rcrb
lcall
mov
xchg
push
lahf
shl
lahf
mov
in
stos
adc
sbb
sbb
add
mov
mov
xor
dec
xor
aas
aad
xor
pop
mov
ja
jmp
jmp
mov
mov
ret
pop
pop
add
and
sar
stos
cmpsb
xchg
std
out
mov
cmpsb
testb
bnd
push
mov
dec
ret
in
pop
gs
or
out
jns
cmp
je
rorb
or
lea
jmp
sarl
dec
sbb
push
jp
scas
stos
xor
out
cltd
test
jl
sub
hlt
int
gs
sbb
push
inc
mov
xchg
add
sbb
cld
mov
mov
lock
in
push
xlat
inc
mov
cmp
mov
inc
scas
aaa
iret
or
inc
or
mov
fiadds
insl
jae
adc
std
mov
rclb
jl
cmp
sbb
pop
jnp
ljmp
jne
and
mov
cmp
or
popf
arpl
fs
push
xchg
test
repnz
mov
lcall
xlat
aam
xor
jp
sbb
insb
push
jo
ja
adc
xchg
and
pshufw
cmp
cmpsb
mov
adc
and
sbb
pop
adc
rorl
mov
sbb
std
mov
insb
mov
adc
cmp
or
cmc
adc
aaa
push
enter
sbb
push
scas
pop
and
jp
movb
insl
jp
mov
cmp
jbe
mov
jge
pop
loop
cmp
cmc
std
or
xchg
push
cwtl
iret
gs
mov
in
mov
or
aad
mov
iret
pop
data16
int3
lea
xchg
xorb
push
add
hlt
cmpl
clts
das
outsl
das
daa
movsb
loop
add
ds
and
fcomi
cmpsl
lods
push
das
dec
xchg
xchg
mov
arpl
lods
cmpl
out
mov
add
push
call
dec
add
inc
ja
mov
add
incb
xor
dec
std
fsts
scas
add
stos
mov
bound
cmp
mov
je
adcb
imul
hlt
dec
pop
xor
push
jno
dec
out
xor
stos
movsb
sahf
ret
xor
dec
icebp
pop
call
and
xchg
xchg
lds
dec
int3
ret
scas
push
out
arpl
test
xlat
in
repz
pop
iret
sub
pushf
shr
jbe
mov
mov
jle
push
mov
lods
mov
mov
push
out
dec
ja
push
test
out
sbb
pop
shrl
pop
pop
rcrb
ret
ret
cmpsl
decb
jbe
data16
cs
cld
scas
movsl
cltd
stos
mov
inc
out
push
cmp
lcall
mov
pusha
jge
cmpsb
into
jle
loope
jne
adc
inc
and
int
mov
ret
jb
sti
inc
notl
getsec
icebp
sbb
stos
repnz
mov
xor
mov
movsb
aaa
aad
call
xor
pop
push
mov
inc
in
ss
jmp
loopne
icebp
push
imul
inc
aaa
into
sbb
mov
jp
cwtl
test
dec
mov
repnz
mov
lods
data16
mov
insl
sbb
mov
sub
out
cmpsb
stos
and
cwtl
je
pop
loopne
add
scas
ret
or
sbb
and
mull
addl
or
push
je
js
xor
in
or
das
xor
mov
mov
imull
sub
pop
repz
xchg
adc
add
and
xchg
pop
dec
dec
movsl
push
imul
les
enter
mov
das
pop
cmp
jne
jo
out
cmc
cld
inc
rcll
pusha
enter
inc
mov
xor
push
add
nop
sarl
add
stos
inc
cld
js
dec
push
cmp
sahf
clc
call
mov
insb
inc
das
xor
mov
mov
cmc
pop
push
roll
loope
mov
aad
pushf
lds
mov
xchg
mov
movsl
pushf
mov
inc
ss
mov
cmp
repnz
mov
repz
mov
loop
test
fidivrs
xor
lods
xchg
mov
jnp
dec
jo
stc
mov
jecxz
push
mov
sub
das
fsub
cmc
mov
out
lods
mov
cmpl
in
out
sar
adc
or
sub
hlt
mov
jo
mov
add
icebp
or
aas
inc
mov
xchg
fdivl
dec
sbb
xchg
push
fs
and
dec
into
scas
jae
in
lds
movsb
testl
mov
pop
add
loope
je
sbb
adc
pop
ljmp
mov
dec
int3
pop
adc
rclb
jge
stc
mov
int
push
mov
mov
dec
imul
push
or
add
in
iret
cmp
lret
in
mov
loope
sub
xor
mov
xchg
pop
call
push
add
adc
jb
popf
and
sbb
fstps
xchg
jp
inc
ret
inc
pop
scas
rcl
scas
ja
pop
fcomps
roll
and
adc
mov
pop
jmp
sbb
and
push
pop
adc
sbb
inc
pushl
mov
xchg
das
sbb
mov
add
sub
ja
cmc
cli
lods
lcall
lcall
mov
pushf
inc
pop
jecxz
mov
dec
sub
cs
test
dec
ret
gs
pop
inc
icebp
dec
add
mov
pop
ja
xlat
push
push
jge
cwtl
ds
jmp
jo
inc
push
lods
pop
imul
movsb
fimull
lret
ja
jle
call
imul
pop
fsts
rorl
jle
dec
movsl
xchg
sub
js
js
mov
inc
mov
push
dec
xchg
sub
inc
sub
inc
cwtl
testb
aaa
inc
pushf
leave
mov
inc
jns
ljmp
adcl
loope
popw
cltd
test
test
mov
sub
mov
inc
adc
push
pop
sbb
fiadds
lds
les
xchg
cmpsl
adcl
mov
fiadds
aas
adc
cmp
adc
dec
push
xchg
imul
cmp
push
pop
sti
lods
jle
inc
cmp
xchg
fcmovnbe
loope
pop
cld
or
push
popa
sarl
mov
lods
ds
cmpl
ljmp
inc
out
and
fnsave
inc
inc
and
sahf
test
jg
insb
mov
scas
and
movsl
test
or
cltd
lea
loope
pop
mov
jle
sbb
adc
adc
add
pop
mov
inc
add
mov
lahf
in
stos
mov
stos
inc
or
faddl
push
adc
cmp
inc
and
jbe
lcall
xor
adc
jge
or
sub
mov
out
cld
cmc
ret
sub
inc
pop
arpl
dec
stos
mov
jo
pop
clc
add
repnz
into
jns
cmp
xor
shlb
cmp
out
jns
push
sub
lret
mov
mov
outsb
cmp
in
in
cmpsb
loope
mov
lcall
push
shrb
out
cwtl
sbb
adc
outsb
int3
mov
lret
inc
mov
fnstenv
push
pop
jmp
subl
out
fcompl
pushf
xor
loopne
or
and
mov
mov
lret
mov
push
in
or
xchg
push
inc
adc
mov
and
jne
jo
mov
cli
fs
sbbb
xchg
cmp
cmp
jecxz
push
cld
lret
lds
lock
and
jns
call
mov
pusha
push
lcall
incb
pop
pop
sub
jno
add
add
inc
inc
pop
xchg
int3
xchg
xchg
call
dec
rorb
cmp
lods
push
and
pop
in
mov
fistps
in
add
cmp
ficomps
adc
out
inc
inc
sub
punpckhbw
in
cmpsb
int3
adcb
cmp
sbb
push
xchg
mov
jbe
jge
movsb
lods
xchg
push
xlat
pop
lea
and
aaa
aaa
fs
icebp
jae
adc
out
and
enter
nop
stc
cld
iret
xor
sbb
cmp
xor
ja
cmp
dec
pushf
dec
aad
jmp
pushf
mov
jne
fdivrs
outsl
jge
dec
dec
mov
cmc
inc
jge
xor
dec
scas
lds
push
jnp
mov
cmp
push
test
mov
rclb
mov
push
bound
inc
out
mov
and
popf
add
arpl
ss
adc
mov
pslld
xor
cmc
push
lock
mov
mov
or
inc
jmp
mov
adc
mov
push
mov
repz
add
cwtl
lcall
and
imull
je
inc
cmp
mov
jae
mov
inc
pop
out
rcrl
and
jne
sti
movsl
inc
lahf
push
lds
ss
or
lds
rorl
jle
fisubl
mov
rcr
mov
sub
xorb
push
inc
ret
jle
mov
xor
mov
cmp
sbb
mov
ja
cmc
stos
dec
stos
adc
hlt
pop
addb
jmp
lea
xor
xchg
shrl
mov
sahf
hlt
push
imul
mov
inc
stos
dec
insl
aad
cmc
xchg
xchg
imul
dec
cmp
lret
orb
ficompl
dec
sub
mov
push
xchg
ljmp
cmp
dec
popf
insl
or
xor
jb
in
lock
in
psubq
xchg
jns
xchg
hlt
test
xor
cmp
sbb
enter
mov
dec
sbb
ficoml
in
aam
sti
test
test
lea
loopne
cmp
gs
scas
into
cmp
pop
pop
mov
into
bound
jns
sbb
test
loopne
mov
inc
out
aas
lret
jbe
sbb
sub
add
test
or
xchg
cmp
push
cmp
mov
int
lods
xchg
cmp
mov
adcl
jl
dec
sbb
insb
mov
adc
xor
in
jb
mov
mov
add
mov
fsubl
dec
imul
daa
mov
xlat
mov
inc
xor
push
rorl
sub
hlt
jnp
jne
pop
stc
pop
arpl
push
shrl
test
repz
add
jae
int3
ja
aad
jbe
stos
out
or
dec
push
inc
lods
pop
idivb
dec
jns
mov
mov
icebp
xchg
shrl
aaa
cld
int3
add
sub
fcmove
adcl
inc
test
adc
jle
mov
jl
jno
xchg
movsb
out
xchg
stos
in
lods
mov
adc
loop
cltd
add
xchg
cmpsb
push
stos
sub
stos
in
scas
xchg
jae
adc
repnz
add
mov
aad
inc
gs
cltd
dec
hlt
pushf
jecxz
popl
shrl
cltd
xchg
jecxz
jge
lcall
sub
jp
adc
pop
ret
cmp
cwtl
out
aam
mov
out
adc
push
xchg
add
fidivs
leave
rol
lahf
pop
xchg
push
ret
adc
bndldx
cmp
push
push
sti
gs
pop
fstpt
cltd
lods
xchg
adcb
sbb
dec
dec
add
dec
mov
mov
les
or
ds
mov
and
imul
fdivp
out
dec
mov
xchg
fadd
sbb
mov
and
mov
mov
pop
push
enter
ja
jno
fsubrs
cltd
std
iret
fsts
sbb
sbb
sbb
into
sbb
xchg
cmp
mov
mov
cmpsb
mov
jno
aad
leave
cmp
lcall
iret
icebp
inc
pushf
cmp
cwtl
bound
insb
jg
lcall
das
push
cmp
movb
dec
es
rorl
jp
xchg
pushf
scas
leave
jge
js
push
cmp
movsl
popa
mov
ror
mov
outsl
push
ret
dec
in
pop
push
loope
xchg
loope
mov
push
pop
cmp
sub
test
ss
pop
xlat
addb
inc
cwtl
stos
pop
in
pop
stos
dec
adc
xor
push
fs
cmp
dec
enter
push
jbe
pop
div
popa
pop
in
aad
icebp
rcr
ljmp
dec
pop
add
ret
stos
out
adc
mov
mov
inc
imul
jne
cmpsb
shrl
or
and
xor
int3
dec
push
jge
xchg
dec
jmp
mov
pop
fnsave
mov
dec
test
lock
xchg
cmp
sub
pop
push
ds
out
push
mov
sbb
lret
subb
js
gs
xchg
fstpl
jle
xor
mov
inc
lcall
sar
jo
iret
mov
cwtl
push
pushf
es
push
mov
jb
pop
movsb
ret
or
sub
es
outsb
push
sbb
xor
jmp
arpl
mov
fisubrl
rcll
jb
shr
dec
jg
mov
cmp
setp
cmpsb
and
insb
fdivrp
cmp
jno
movsb
jl
add
negl
jns
adc
ljmp
and
lret
aas
fsub
or
mov
jb
pop
or
popa
scas
jo
jecxz
pop
test
mov
cmc
jb
loopne
mov
sbb
mov
mov
lahf
aam
mov
xor
mov
cmp
push
aaa
jbe
pop
jno
jae
out
pop
pushf
andl
hlt
mull
loop
lods
add
sub
mov
add
lea
or
icebp
and
dec
mov
mov
je
icebp
mov
loopne
xchg
mov
pop
mov
mov
addr16
adc
inc
inc
mov
movsl
call
push
repz
outsl
push
lock
mov
push
pusha
hlt
push
mov
scas
push
sbb
stos
dec
sarl
cs
add
jecxz
mov
xor
add
cmp
in
sbb
ja
arpl
cmp
lods
mov
jecxz
aad
icebp
adc
lea
push
adc
outsl
orl
inc
fidivrl
pop
arpl
xchg
test
mov
adc
add
fwait
arpl
cld
xor
repz
or
cltd
out
jne
lret
int
adc
pop
cli
jae
mov
jmp
xchg
push
je
test
dec
negb
cmp
icebp
sti
jl
fisttps
pusha
adc
push
sbb
sbb
stc
subl
push
dec
push
jmp
mov
lahf
inc
pop
iret
iret
cmc
mov
sahf
shlb
clc
mov
stc
add
leave
ljmp
orb
ret
lret
out
ret
jge
cmpsl
jl
xor
xchg
sub
pop
pop
arpl
or
outsb
leave
or
xchg
push
jb
pop
inc
xchg
sbb
in
xor
out
in
xchg
shrl
mov
sub
inc
cmpl
lcall
stos
inc
cmc
fmuls
cmpsb
fsincos
mov
adc
mov
mov
mov
sbb
or
push
ret
and
xchg
mov
sbb
xchg
movsl
inc
aam
xorb
mov
sub
shrb
ss
push
inc
in
ja
mov
lret
sub
jno
jb
ret
mov
xchg
shrb
pop
imul
mov
outsl
xor
std
push
arpl
xor
hlt
testb
in
push
into
in
mov
cwtl
mov
insb
andb
xor
cmp
lahf
add
stc
mov
xchg
out
mov
sub
aam
cltd
mov
xchg
aaa
mov
gs
adc
mov
sbb
push
pop
mov
mov
fmuls
ja
mov
repz
push
aad
fldcw
xchg
sbb
test
sarl
jge
shrl
push
lock
jnp
ficoms
scas
popa
fstps
cld
sbb
sbb
cmp
stos
mov
adcl
test
pop
jl
outsl
sbb
cmp
sub
jb
pop
incl
pusha
addb
out
mov
sub
add
xchg
pusha
ja
stc
or
imul
inc
mov
lods
xor
or
jge
mov
pusha
mov
je
loope
lods
mov
sbb
fnstsw
jmp
sbb
jbe
ss
inc
dec
mov
and
sub
sub
in
imull
xchg
scas
jmp
test
mov
fdivr
int3
add
cmpsb
stos
fs
test
sub
mov
jae
sub
sbb
stos
test
aas
and
cmpsb
xchg
call
andb
pop
out
in
dec
xchg
int
shl
sub
mov
jbe
ss
xchg
or
fucom
fwait
push
mov
jns
jae
xrelease
jo
and
sti
add
push
add
movsb
push
pop
roll
jecxz
mov
push
cmp
mov
lret
in
scas
mov
test
hlt
popf
jmp
shlb
call
je
sub
ficompl
pop
pop
insl
mov
and
mov
data16
out
inc
mov
inc
cs
loope
inc
jbe
cmp
repz
adc
adc
add
fwait
push
aam
pop
js
push
lock
add
enter
rcll
cs
pop
pop
int
cld
test
sub
or
cmp
dec
mov
xchg
out
stc
lcall
out
mov
mov
sti
lock
lods
pop
stos
add
aam
fucomp
aam
push
inc
xor
loop
ja
inc
fwait
subl
push
cwtl
cltd
add
cld
push
call
dec
mov
dec
push
jno
repnz
mov
cmp
int
in
add
pop
add
xor
aad
idivl
lahf
popf
out
or
imul
cli
dec
cwtl
test
mov
jno
adc
popf
loop
cwtl
jl
push
sbb
dec
shrl
adc
jo
cmpsl
shll
sbb
jg
inc
lds
arpl
xchg
cltd
push
cmp
cmp
test
mov
add
add
mov
pop
mov
into
sbb
push
pushf
pop
pop
fs
popf
movsl
lock
shrb
sti
xor
sub
repnz
add
xchg
xchg
jbe
in
or
add
sub
push
add
test
imul
or
lret
out
inc
add
sub
xchg
mov
scas
inc
jge
iret
xchg
inc
fs
in
push
cmp
in
iret
mov
in
mov
lret
push
sub
add
aaa
daa
jae
jge
mov
divb
les
cli
sbb
pop
fildl
fadds
test
jo
mov
mov
or
push
cmc
jnp
lods
pushf
scas
mov
movsl
mov
or
mov
jbe
mov
aaa
inc
dec
bound
xor
and
mov
pop
jnp
or
aam
mov
mov
mov
out
inc
shr
cltd
or
push
repz
cmp
jmp
cmp
xchg
cmp
add
jo
jp
jns
sbb
mov
pop
xchg
or
dec
mov
aas
mov
pushl
xchg
ret
aad
add
hlt
inc
or
adc
push
push
lods
jg
cmp
jle
push
shrb
sahf
xor
mov
gs
aam
loopne
add
pop
jl
dec
iret
mov
jp
sbb
aas
test
lcall
in
cmp
call
in
outsl
mov
cmp
aas
push
insb
or
add
aam
inc
sub
sbb
adcb
jl
decb
imul
aaa
pusha
adc
es
out
pusha
or
xlat
adc
insb
iret
sub
and
mov
lret
or
ret
dec
repnz
movlps
mov
notl
jae
test
xor
cmp
ret
add
push
mov
inc
dec
pop
mov
jecxz
scas
fldt
push
movsl
lahf
push
popf
jecxz
data16
imul
mov
ljmp
mov
bound
mov
cwtl
mov
adcb
fldenv
add
mov
xchg
cld
outsl
adc
cld
ljmp
push
out
xchg
inc
sar
hlt
rcrb
inc
cmp
xchg
cli
xchg
aas
jmp
xchg
gs
push
sbb
aam
xchg
js
dec
aaa
es
inc
test
mov
out
jbe
sarb
or
ljmp
sti
xor
mov
div
nop
push
push
daa
outsb
and
test
xchg
mov
fcmovu
mov
adc
mov
leave
mov
push
sbbl
sti
jl
in
ljmp
dec
repnz
mov
mov
lock
mov
imul
mov
pusha
int
mov
iret
pop
out
dec
mov
negb
packssdw
mov
dec
and
jo
loop
nop
mov
cmp
pusha
pusha
pop
and
lods
dec
mov
xor
push
sbb
sbb
scas
pop
fistps
lds
incb
lods
and
es
mov
int
sarl
adc
adc
push
lret
mov
xchg
xor
aad
push
mov
rcrl
mov
shlb
cmp
cmp
mov
mov
push
sub
aam
out
loope
inc
pusha
dec
inc
bound
out
ss
push
bound
xchg
sub
int3
icebp
add
repnz
lea
arpl
adc
add
jg
sub
push
lahf
pop
pop
add
shrl
fisttpl
sbb
sarb
mov
xor
dec
adc
dec
in
jle
push
test
jl
bound
outsb
sbb
nop
cmpsl
jmp
pop
mov
pop
test
negb
lock
fsts
or
out
insb
sbb
mov
xor
stos
imull
pop
cmp
fisubrs
cmp
aad
subb
lods
mov
dec
mov
xchg
mov
adcl
dec
push
ljmp
ds
inc
test
mov
inc
cmpsl
cld
not
fcoml
lds
xchg
and
sub
lahf
fidivrs
pop
adc
mov
jge
vpmulhw
roll
shlb
adc
cmp
pushf
into
sti
out
add
mov
test
punpcklwd
jg
push
push
xchg
sbb
sub
adc
xor
pop
xchg
pop
jp
push
xchg
adc
cmp
testb
push
cld
dec
es
sbb
dec
add
imul
lods
andb
dec
pop
sbb
lcall
cmp
pop
test
xor
pop
cmp
xor
and
std
push
enter
test
test
or
mov
mov
arpl
pop
mov
inc
xchg
adc
stos
push
ret
lret
jns
in
repz
aad
xor
mov
push
rdpmc
insl
dec
sub
inc
ficompl
inc
sbb
mov
sbb
fbstp
push
cmp
test
push
cwtl
repz
sarl
in
or
cmp
push
imul
faddl
jae
insb
rcl
xchg
shl
xchg
push
cmc
xor
movsb
push
rcrb
popf
xor
jne
push
jnp
or
and
icebp
lahf
das
std
xor
mov
dec
cmp
dec
push
pop
call
leave
scas
or
fidivs
push
adc
mov
daa
add
mov
test
ja
lret
mov
jmp
test
stos
sbb
fistpl
stos
scas
push
cmp
add
fisubrs
cmp
shrb
inc
xor
mov
shl
lock
pop
mov
sbb
jo
pop
movsb
arpl
out
movsl
jl
sbb
push
add
xchg
out
jmp
adcl
int3
cltd
dec
dec
pop
fucomip
andl
mov
xchg
stos
lret
mov
imul
inc
es
jno
add
stc
call
pop
lcall
mov
and
jb
das
mov
cmp
nop
ret
movaps
daa
push
adc
or
orl
icebp
fists
stc
out
movsl
xchg
int
mov
mov
rolb
ja
cmc
xchg
mov
and
ss
sbb
push
jb
pop
mov
cs
std
xchg
xor
scas
jg
push
aam
jp
jl
repz
scas
adc
pop
outsl
and
stos
mov
cwtl
imul
xor
mov
jmp
or
cs
push
fildll
mov
xor
xchg
xchg
aam
test
mov
jp
mov
call
call
loop
sahf
fwait
pop
jo
mov
pop
jae
stc
inc
les
ja
daa
scas
insb
cmp
xchg
push
push
add
andb
inc
mov
sub
aas
jge
ret
adc
rcr
jbe
dec
mov
in
je
push
adc
icebp
movsl
xor
push
mov
inc
shll
lahf
push
ljmp
lcall
ret
push
mov
pushf
lds
pushf
les
adc
mov
pop
xchg
push
and
jp
iret
mov
mov
fdivrs
mov
xchg
into
xchg
cmp
mov
mov
test
and
in
test
pop
dec
mov
mov
out
push
sbb
andb
outsl
lea
pop
and
negb
icebp
mov
rep
add
ss
and
xchg
out
aaa
mov
test
xor
push
and
pusha
test
rcr
inc
popf
mov
adc
push
xlat
adc
repz
popa
mov
xchg
outsl
xor
adc
sbb
inc
mov
push
out
add
xorb
lods
cli
pop
pop
push
xor
xor
sub
xchg
ret
addr16
sbb
xor
into
mov
aad
mov
loop
je
xlat
xor
lods
jne
movsb
test
in
loop
fmull
pop
insl
adc
jg
xor
mov
popf
push
mov
ret
je
loopne
add
aam
scas
inc
xchg
sbb
and
push
imul
aas
enter
les
cs
inc
in
aad
adc
aaa
fisttpll
fisubrs
movsb
adc
fbstp
pop
jp
pop
mov
ds
mov
in
dec
imul
orl
inc
aaa
mov
xchg
out
pop
sub
sbb
push
int
notl
data16
mov
jmp
mov
mov
inc
loop
cmp
and
out
stos
cmp
and
jae
scas
push
jne
loope
adc
sbb
enter
int
inc
xchg
mov
es
inc
jo
push
adc
movsb
aad
xor
jnp
sbb
faddp
test
addr16
xchg
lret
lds
stc
sub
push
adc
aaa
mov
lcall
mov
mov
adc
outsb
push
adc
inc
jg
loopne
aad
int3
repnz
fwait
push
mov
jle
sub
adcb
mov
jl
jb
adc
dec
mov
inc
mov
mov
stc
mov
and
js
fbld
pop
xor
cmp
dec
mov
or
and
xor
popf
ret
ficoms
in
fcoml
std
aas
callw
imul
jns
jne
push
mov
sbb
sarl
xchg
repnz
ja
insb
jae
cmp
push
lcall
into
faddl
jg
fwait
add
and
jb
ficompl
pop
loop
sub
gs
mov
stc
mov
inc
sub
adc
out
ss
rcrb
mov
js
inc
mov
pop
lods
ja
loopne
inc
dec
sbb
lea
jae
cmp
mov
mov
decl
enter
sbb
mov
mov
int3
movsb
call
mov
push
mov
sti
and
pop
push
rcr
xchg
ret
pop
enter
mov
aad
cmp
out
ljmp
fwait
jno
add
negl
popa
cmp
pop
cltd
movsl
push
mov
mov
fstp
pop
mov
pushf
dec
lods
add
pop
idivl
loope
push
inc
cmpsb
orb
mov
movsl
mov
out
xchg
repz
in
sti
scas
xor
cmpsl
cld
xor
or
out
xor
mov
jno
mov
frndint
ja
lods
xor
mov
call
ss
ss
outsl
add
hlt
outsb
pop
shrl
popf
or
enter
das
jp
or
clc
sub
and
scas
loop
enter
lea
and
xlat
das
sub
push
int3
cltd
das
push
pushf
inc
dec
inc
jns
subl
ljmp
es
sti
dec
sub
sub
lret
sbb
outsb
sbb
push
and
xchg
add
jno
dec
or
shll
repz
leave
lcall
mov
rorb
test
cld
popf
int3
jecxz
arpl
ret
xchg
lds
or
push
sbbl
adc
dec
test
mov
pop
insb
sbb
adc
jmp
and
xor
pop
cmp
notb
fistps
mov
fstl
fistpll
xchg
jp
cmp
or
daa
xchg
shll
cmp
mov
jnp
sbb
push
mov
or
or
imul
or
into
dec
loop
ljmp
pop
fistpl
inc
dec
xor
out
rcr
pop
arpl
fcomps
xlat
lods
repz
sub
cli
repz
outsb
add
rcl
sbbb
sub
mov
push
nop
or
in
push
lods
mov
mov
cmp
repnz
jne
hlt
mov
and
jmp
aam
ds
mov
insl
inc
or
clc
cmc
and
ds
cli
gs
fwait
lods
in
ret
dec
mov
add
std
lock
popa
inc
data16
adc
push
insl
push
xchg
mov
xlat
stc
xlat
pop
push
xor
fwait
orb
inc
mov
push
push
push
int
adc
and
iret
rorl
lret
scas
loopne
mov
mov
cltd
fists
or
inc
filds
add
or
inc
fidivs
cld
sbb
inc
dec
lcall
xchg
add
es
popa
mov
inc
cmp
sub
into
sbb
cli
lahf
add
pop
mov
sbb
imul
lods
jge
imul
and
aad
pop
repnz
or
mov
xchg
scas
sub
or
adc
scas
pop
cmpsb
pop
and
idivl
lods
sbb
or
aaa
sarl
lds
test
jae
and
jp
sbb
cli
sub
inc
stos
jge
push
push
fistpl
sub
mov
cmpsl
lahf
and
inc
xor
mov
jl
mov
jns
mov
stos
add
jmp
push
xor
fcoml
cld
or
jmp
cmc
mov
loop
shlb
xchg
add
inc
hlt
jmp
dec
dec
repnz
out
daa
mov
ljmp
mov
ror
xor
mov
cltd
mov
mov
jne
jo
pop
pop
test
cmp
adc
ljmp
jmp
mov
int
mov
cwtl
sbbl
int3
xchg
arpl
or
mov
cmp
cmp
rcrb
and
jne
sub
fdivrs
xchg
mov
sbb
push
cmpsb
pop
and
xlat
dec
dec
test
int3
and
cmp
jge
jle
roll
pop
xchg
adc
test
cmp
call
sbb
xchg
jmp
jge
movsl
pop
hlt
add
cltd
sbb
xchg
adc
push
out
pop
sbbb
xchg
mov
addr16
sahf
mov
or
dec
mov
addl
jno
sti
movsl
jo
push
out
ljmp
adc
xchg
aas
ret
pushf
xchg
pop
dec
push
jle
xor
or
les
out
inc
imul
mov
inc
mov
lds
mov
repnz
cmp
outsb
stos
frstor
movsl
adc
ds
sbb
jbe
cs
mov
xor
xor
gs
xchg
push
cmp
add
pop
dec
pop
inc
mov
and
mov
rcl
movsl
push
inc
stc
and
jg
push
adc
pop
stos
bound
adc
out
dec
cmpsb
loope
adc
hlt
push
cmc
ja
mov
shll
adc
nop
in
cwtl
cwtl
mov
ret
adc
inc
clc
cs
push
es
cmc
std
lahf
and
pop
push
sub
loop
adc
add
lea
lds
loop
ret
test
cmpsb
arpl
cs
clc
push
mov
pop
faddl
dec
sub
data16
jg
adc
jge
pusha
cmp
mov
sbbb
out
jmp
lods
in
xchg
fisttpl
int
les
jecxz
pop
gs
ret
mov
inc
loop
push
iret
jno
inc
mov
jno
add
data16
insb
jle
xor
aaa
jne
push
mov
sysexit
out
sub
cmp
and
mov
fistpll
icebp
xchg
int3
outsl
test
test
pop
out
insb
sti
adc
in
aad
fcmovbe
add
and
adc
bound
jb
inc
and
iret
push
jb
repz
ret
loop
cmp
xor
fldenv
aam
push
in
movb
fdivrs
cld
inc
aad
cmpsb
movsl
lret
loope
gs
inc
cmp
test
test
push
xlat
shlb
jo
xchg
jle
inc
leave
inc
cs
mov
or
jo
cmp
mov
insl
in
outsb
ja
xor
sbb
xor
test
std
mov
inc
ljmp
fcmovne
adc
add
fmuls
fsts
daa
je
xchg
aas
or
outsl
or
cmpsb
jne
push
ds
add
inc
loopne
aad
fimull
data16
jno
xchg
push
outsb
cmp
mov
pop
mov
and
insl
out
call
push
push
jle
pop
sbb
sbb
lock
dec
adcl
decb
fbld
push
fcomps
roll
cmp
ljmp
jae
bnd
xlat
and
popa
cmp
popa
sub
cmp
push
push
xor
movsl
pusha
pop
iret
loop
mov
pop
stos
dec
xchg
mov
popf
jbe
imul
dec
rcll
lahf
inc
jle
cmp
pop
lods
ficoml
adc
jecxz
insl
enter
push
adc
pop
sbb
fwait
cmp
pushf
pop
cmp
aaa
call
xor
andl
fsubrs
mov
jo
les
insl
lcall
push
lea
mov
push
jne
ds
pop
xor
stc
movsl
mov
mov
repz
cs
mull
cmpsb
or
and
gs
insb
arpl
fwait
mov
sub
xchg
int
jl
xor
scas
cld
repnz
and
adcl
jnp
sbb
push
mov
inc
fcomps
adc
mov
inc
add
out
and
mov
lcall
adc
dec
and
jg
andb
push
mov
sbb
fadds
pop
and
mov
mov
je
outsl
sarl
mov
mov
mov
push
jae
lahf
cltd
lahf
jae
xchg
pushf
addr16
int
lods
inc
pop
addr16
test
cmp
cmp
push
ret
sbb
ljmp
jecxz
jnp
mov
insb
fcom
inc
lods
pop
daa
test
sub
mov
xor
mov
mov
lock
push
add
cmp
movsl
xchg
xchg
jae
repz
test
mov
push
imul
lcall
pushf
cmc
in
aas
sub
xor
xor
jnp
xchg
adc
inc
inc
fsubl
pop
add
push
ret
or
adc
pop
and
addr16
sub
sub
xlat
bound
push
xchg
notb
push
sbb
pop
lock
cmp
enter
dec
mov
rcl
adc
adc
pop
subb
out
mov
jae
push
mov
shll
ljmp
add
aaa
dec
sarl
pop
out
ljmp
pop
mov
push
cmp
xchg
push
mov
lds
xor
sub
cmp
add
jo
shll
pop
out
pop
mov
repz
popa
sub
je
aam
jae
outsb
out
bound
mov
mov
cmp
or
js
and
sbbl
push
lds
lea
je
jl
xor
out
add
test
sbb
and
add
pushf
or
scas
cmpsb
into
dec
mov
inc
push
addr16
cs
cmp
call
mov
jbe
sbb
xchg
fstl
addr16
xchg
sub
sub
xlat
sub
pop
sbb
out
into
xchg
push
shr
add
or
fmulp
mov
flds
xor
lds
jo
inc
jb
repnz
out
push
mov
push
test
push
push
outsb
loop
adc
sbbb
lret
xchg
pushf
add
ljmp
int
push
scas
push
enter
ss
rorl
pusha
nop
pop
mov
mov
inc
icebp
xchg
sub
mov
add
xor
call
fnstsw
insl
xor
ljmp
testl
sti
jge
pop
roll
xchg
or
mov
jo
xor
inc
inc
pop
stc
push
in
lahf
stos
xchg
push
das
xor
push
addb
jle
and
hlt
adc
pop
leave
roll
imul
adc
cmp
int3
and
xorl
pop
stos
movsl
jl
jb
call
adc
mov
dec
push
addl
aaa
adc
jg
fmuls
mov
adc
add
call
popa
adcl
mov
sbb
and
mov
ljmp
into
fisubrl
add
push
lock
pop
movsb
jle
rcll
inc
sbb
pop
pop
cmp
bound
dec
std
jnp
das
icebp
bound
mov
aam
xchg
aad
cli
xchg
repz
cmp
mov
or
cmp
or
nop
xchg
test
and
shrb
lret
test
adc
in
test
xor
xchg
mov
cmp
fcoml
in
daa
iret
cmp
cmp
xor
shl
repz
out
and
inc
inc
popl
adc
cmpsl
ja
sbb
mov
xor
mov
aaa
das
and
out
or
or
add
lret
xchg
pop
stos
or
flds
scas
fwait
push
dec
xorb
popa
js
hlt
jbe
jns
add
or
xlat
mov
sub
icebp
lcall
cmpsb
aas
pop
addr16
and
decl
jno
xchg
sub
sbb
scas
lods
push
mov
into
fbstp
push
loopne
xchg
ret
sbb
sub
cmp
subl
xor
fisttps
nop
lahf
call
out
cmpsb
fwait
cmpb
inc
mov
pop
xchg
fstp
faddl
insl
inc
popl
out
fwait
test
ljmp
shrl
fwait
test
jnp
mov
sbb
xor
idivb
mov
sbbb
out
into
mov
lods
popf
out
lcall
sarl
nop
mov
pop
xor
enter
imul
adc
roll
pop
pushf
test
jp
aam
jne
sub
data16
add
sti
mov
rorl
mov
fwait
add
bswap
jl
ss
dec
sub
lcall
and
dec
pop
dec
std
lahf
pop
dec
lock
stos
imul
push
pop
pop
xor
aad
out
jbe
loop
ljmp
cltd
clc
loope
sub
fcompl
push
in
es
jle
xchg
mov
mov
xor
pop
flds
pop
xchg
mov
data16
divl
popa
xor
sbb
gs
inc
inc
ret
adc
or
dec
in
and
int
sbb
lods
mov
rorl
gs
outsb
std
shlb
fwait
in
ss
test
cmp
pop
jnp
out
push
sti
cmp
outsl
and
adc
rcr
sbb
xor
sbb
inc
enter
jge
sbb
sub
ljmp
hlt
and
loop
push
inc
sbb
add
adc
mov
push
inc
or
cmc
stos
add
xor
aad
mov
adc
jns
sub
and
and
dec
xorl
push
out
sub
adc
sub
jns
xor
pop
ljmp
sub
jecxz
outsb
cli
inc
mov
sub
lds
dec
test
jmp
out
rolb
aam
insl
pusha
insb
sub
mov
lock
shlb
inc
popf
aaa
mov
jecxz
arpl
dec
loope
sbb
jno
push
push
pusha
out
rolb
add
jle
sub
sbb
rclb
sub
cmp
pop
test
add
test
in
cltd
fnstsw
sbb
sub
in
repnz
outsl
pop
jg
push
mov
sti
dec
push
cmp
mov
insb
out
pop
xchg
adc
jg
in
xchg
fidivl
cmp
ja
mov
je
dec
lahf
jb
mov
jae
jne
lods
test
xchg
cmp
jge
addr16
out
aad
jl
iret
xor
jle
jb
call
stos
push
mov
jle
and
insb
cmpsb
and
dec
popf
xchg
testl
mov
mov
xchg
imul
ds
and
jge
mov
lods
movsl
xor
xlat
sub
lahf
mov
dec
xchg
cmp
bound
loopne
push
les
hlt
jo
test
inc
out
nop
ret
fldl
mov
sbb
inc
dec
mov
les
adc
repz
inc
movsb
jno
xchg
xor
mov
lahf
out
dec
test
add
shrl
pop
xchg
xchg
lods
jbe
cmp
into
pushl
icebp
lock
and
push
imul
push
xchg
int3
sbb
adc
stos
jo
iret
xchg
adc
pop
test
in
mov
idivl
mov
adc
in
ljmp
test
fs
and
mov
fadd
mov
xchg
popa
js
pop
mov
add
cmp
fsubs
xchg
jg
jb
mov
aaa
or
adc
pop
insl
adc
and
jmp
ret
jle
inc
or
jecxz
add
ljmp
cmpsl
cmp
lea
add
and
and
mov
aas
fisubrs
mov
dec
jmp
sti
jae
fsubs
mov
shlb
jge
mov
jb
push
popa
xchg
lods
lods
cltd
mov
push
nop
or
add
js
insb
movsl
mov
jns
pop
shlb
sbb
jmp
cld
xchg
pop
cmpsb
lcall
jo
orb
pop
or
jg
js
mov
inc
pusha
sbb
repz
lret
sub
shrl
je
fnstenv
cmpb
lock
aas
dec
aas
xor
call
push
push
add
sahf
jae
jge
pusha
inc
insl
pop
cmp
daa
mov
and
and
inc
idiv
cmp
ret
mov
out
xlat
sub
pop
sbb
sub
rclb
xchg
insl
mov
movsb
clc
inc
adc
sub
push
sbb
cmpsl
shrl
add
test
int3
add
sbb
inc
test
inc
cmp
lret
mov
iret
sbb
hlt
test
pop
stos
mov
and
pop
xchg
dec
pop
daa
mov
sub
or
mov
shll
call
filds
xchg
inc
pop
and
mov
push
mov
pop
dec
and
fucomi
in
or
notb
stos
sub
mov
cld
fdiv
pop
addb
pop
sub
dec
adc
cld
mov
jae
shll
lea
pop
push
sub
inc
mov
shr
and
cmp
or
pusha
xor
lahf
cwtl
scas
sub
outsb
fistl
dec
shrb
cltd
xchg
or
pop
outsb
lock
popf
xor
rclb
mov
les
sub
push
and
xlat
jg
and
fsubs
mov
fnstenv
mov
loopne
mov
and
adc
mov
outsl
xor
repnz
mov
inc
mov
out
aam
cmpsl
insb
xchg
loope
jecxz
loop
push
stos
xor
mov
adc
hlt
xchg
jp
pop
jg
and
arpl
aas
mov
mov
cmp
fiaddl
sbb
add
or
roll
dec
sti
les
jl
test
mov
inc
push
test
je
arpl
cwtl
xchg
lret
add
js
arpl
movsb
jle
aaa
sub
pop
mov
int
add
imul
sub
xor
xchg
jl
nopl
mov
jne
hlt
xchg
int
les
mov
jp
dec
jnp
cs
aas
cli
out
out
or
push
out
mov
flds
cmpsb
xlat
aas
bound
xchg
cwtl
stos
pushf
popl
pop
add
jbe
jbe
sahf
out
leave
push
aaa
outsl
jae
ret
pusha
push
dec
and
pop
mov
rol
inc
mov
enter
sar
std
popf
jno
nop
imul
icebp
imul
ret
push
aad
das
sub
fstps
mov
fcoml
jns
popa
dec
pop
shrl
fwait
out
stos
shlb
out
leave
in
lret
sahf
fisubrs
or
push
out
xchg
ret
les
and
test
imull
fwait
lods
nop
dec
mov
push
subl
sub
dec
dec
ljmp
mov
or
pop
in
or
cmp
loopne,pt
cmp
lea
or
or
inc
cmp
je
jmp
movsl
sub
or
js
jecxz
imul
insb
mov
cmp
xchg
cmp
cli
xor
add
cmpsb
and
jmp
hlt
shr
push
adc
xchg
fsubrs
mov
or
inc
pusha
pushf
in
sbb
movsl
out
add
mov
xchg
clc
sti
dec
cmp
sti
lret
fildll
mov
in
not
out
add
cmp
cmpsl
and
cmc
inc
jmp
sahf
test
dec
insl
imul
out
fdivp
pop
mov
dec
lret
push
mov
or
mov
cs
imull
es
inc
mov
pop
cld
in
mov
push
or
std
mov
cs
hlt
popf
clc
int
incl
xlat
mov
xor
cmp
dec
pop
xchg
rcll
out
stc
cmpl
aas
jg
sbb
push
mov
and
addb
sti
lcall
add
add
int3
data16
popf
cmpsb
xchg
out
jae
rclb
nop
repnz
inc
loopne
ret
add
sbbb
stc
inc
fucomip
stc
jp
in
mov
jo
add
iret
pop
call
cmp
mov
jp
hlt
je
jns
insl
fst
dec
mov
int3
mov
lret
cmc
xor
data16
sub
xchg
adc
jno
daa
pop
inc
cmp
and
sbb
xor
fisttpl
jb
sub
mov
movsb
fsubs
push
orl
pop
mov
daa
inc
ret
push
and
es
aad
xchg
fidivrl
sub
std
lret
mov
adc
cmc
xchg
fistps
lods
cmp
cmpsb
inc
js
xor
jmp
loope
or
mov
sti
sbb
sbb
out
mov
lret
or
dec
jmp
add
push
in
jp
aam
bnd
adc
mov
mov
pop
repnz
xchg
adc
push
mov
loopw
sub
dec
dec
shrl
popa
xchg
and
sbb
xchg
cmp
mov
push
loope
mov
rcr
xor
jp
pop
fdivl
adc
dec
out
mov
je
je
mov
jp
fisttpll
fstpl
pop
inc
sub
xchg
ficoml
inc
or
sbbb
jmp
mov
adc
in
shlb
inc
jo
lods
mov
push
and
sbb
out
cmp
adc
imul
push
std
das
mov
xor
mov
loope
faddl
ret
mov
jmp
jmp
or
cmp
int
nop
fcoml
insl
enter
inc
lock
mov
loope
add
imul
mov
pop
in
cmpsb
push
out
ljmp
inc
xchg
or
out
ja
cmp
les
sbb
push
rcl
out
mov
sbb
js
jle
fcompl
repz
pop
or
cmpsb
sarl
lahf
push
mov
es
out
pop
inc
out
arpl
les
insl
fistps
dec
jo
loope
dec
in
push
mov
mov
jae
jae
inc
outsb
mov
mov
incb
jmp
and
mov
xor
sub
enter
mov
add
idivb
adc
adc
mov
test
jg
inc
shrb
dec
jge
stos
in
add
jl
xlat
fst
sub
ja
mov
sti
and
xorb
cmp
ja
cmp
mov
int
push
sbb
mov
jbe
push
sbb
mov
into
mov
mov
sbb
or
xchg
pop
pop
out
sarb
fbld
stc
or
out
mov
mov
sti
in
dec
push
xchg
adcb
mov
addl
in
movsl
loopne
aaa
stos
in
stos
xor
inc
popa
cmp
jl
out
xchg
cld
inc
popa
lret
add
mov
inc
or
decb
pushf
push
aad
movsb
mov
mov
push
mov
in
push
xchg
loopne
cmp
mov
sahf
pusha
es
cwtl
sub
fsub
adc
leave
push
ret
add
mov
jo
sbb
cmpsb
sbb
mov
and
pop
daa
icebp
shll
add
push
xor
jbe
jae
das
aas
out
pushf
mov
fsubrs
add
jno
int3
sub
call
cmp
inc
bound
sbb
insb
mov
mov
lcall
out
push
aaa
repnz
out
loope
mov
sub
in
icebp
mov
sbb
inc
les
mov
lds
xchg
in
mov
push
adc
lods
mov
jae
repz
cwtl
gs
xchg
xchg
cltd
sub
mov
iret
cmpl
or
and
push
sbb
in
sub
jp
fstps
das
lret
out
rclb
test
fnclex
popa
jb
sbb
loop
push
xchg
stc
pop
popa
jmp
or
jb
fcoms
mov
push
ret
add
leave
jbe
mov
sub
cwtl
orb
fstpt
iret
cmp
fucomip
xor
xchg
test
std
cmp
and
fnstsw
aam
adc
shll
out
int
je
out
fnstenv
jae
test
or
pop
push
sub
pop
and
ficoml
fs
ja
push
mov
dec
mov
pop
cmpsl
aas
jp
sbb
inc
push
repnz
out
lret
popa
xchg
lods
int3
imul
adc
rorl
js
pop
ret
mov
or
out
scas
sbb
add
inc
mov
jb
ret
push
repz
int3
loopne
xchg
iret
test
xchg
or
popa
pushf
jnp
jmp
or
andl
je
in
add
sbb
repnz
xor
and
mov
push
icebp
push
mov
clc
pop
mov
cmc
push
mov
das
in
ss
roll
mov
push
cmp
add
in
pop
cmp
mov
in
jno
ds
or
fcom
int3
sbb
mov
and
and
pop
jge
fsubrs
inc
cmp
loope
cmc
jae
adc
dec
sbb
adc
sbb
push
std
dec
jecxz
and
test
int3
scas
mov
je
imul
cwtl
lahf
lods
jb
adc
and
mov
and
int3
xor
or
into
imulb
cld
ficompl
stos
cmp
sbb
das
pop
decb
hlt
jbe
fs
add
or
pop
pop
arpl
mov
pop
cmpb
repnz
jge
jle
fstpt
mov
mov
insb
xor
or
leave
fdivrp
xchg
outsb
cmp
mov
pop
pop
dec
iret
test
adc
nop
add
pop
jns
arpl
xchg
lods
stc
loop
data16
testl
mov
inc
lahf
mov
push
fildll
xchg
out
inc
mov
loopne
fcoml
add
loopne
cmp
sub
repz
fldt
cwtl
inc
shl
cli
lret
repnz
xchg
fisubrs
hlt
xchg
xchg
scas
sub
mov
mov
dec
dec
les
addb
pop
sub
pop
push
add
aas
cld
cltd
orl
bound
sti
sbb
mov
xchg
into
stos
push
hlt
dec
test
mov
jnp
sarb
int
fdivs
push
mov
inc
lods
xor
repnz
es
jo
xlat
push
cmc
hlt
mov
and
aam
imul
lds
rcpps
fimuls
sahf
ljmp
out
ret
push
fwait
aam
iret
call
push
push
je
sbb
dec
xlat
movsb
cmp
sub
lods
jle
pop
dec
dec
cs
xchg
xchg
fcmovnu
bound
cmp
rcrl
icebp
mov
add
cwtl
stc
test
mov
inc
sbb
popa
dec
pop
jmp
lods
ljmp
jne
lahf
push
cmc
and
ds
lods
sahf
mov
sbb
and
push
shll
stos
test
outsl
mov
mov
sub
cmp
aaa
clc
lea
mov
cmc
test
xchg
enter
in
adc
loop
ffreep
or
lea
xchg
shrl
test
jl
xchg
xor
add
mov
xchg
into
xor
cltd
outsb
push
and
loopne
mov
jns
scas
out
jne
aas
xchg
cmpsl
rcr
sbb
lret
xchg
mov
scas
loop
pop
mov
cmpsl
add
pop
ret
push
jns
out
jg
leave
mov
imul
rcr
xor
add
in
loope
push
push
push
dec
nop
fwait
lods
shrb
imul
aad
ds
pop
shll
jb
push
sub
mov
stos
cwtl
xor
pop
cmp
repnz
mov
mov
mov
fst
sahf
jle
test
cmc
divb
jp
and
js
pop
pop
in
cli
xchg
cmpb
fisttpll
aas
inc
and
sbb
fsubrp
jl
in
push
leave
sbbb
orl
mov
mov
fnstenv
sahf
das
push
lcall
inc
test
adc
adc
arpl
xor
pop
scas
push
sti
inc
or
ljmp
outsb
jns
sbb
add
sbb
or
dec
push
dec
dec
pop
adc
xor
and
and
incl
test
push
inc
int
sti
cwtl
nop
jnp
addl
adc
scas
sti
jae
pop
je
rcrb
pop
popf
xchg
loop
scas
sarl
and
mov
inc
pop
push
shrb
or
dec
xchg
or
outsl
xchg
push
jle
mov
sbb
rcl
add
das
loop
sbb
pop
lret
xor
push
sbb
push
dec
mov
rorl
loop
movsl
xchg
jns
xchg
push
mov
sub
jge
out
dec
xor
sub
shrb
xor
aas
jnp
push
xchg
enter
fildll
out
cmpb
cwtl
scas
frstor
fwait
jge
mov
xor
mov
xchg
fsubl
lea
ret
lcall
xor
nop
ficoms
scas
fidivs
sbb
and
mov
je
dec
add
fcoml
aam
out
lds
sub
jno
push
loopne
push
dec
mov
test
sub
xor
or
pusha
cmp
sbb
cld
jle
sbb
push
pushf
stc
ds
mov
mov
mov
shlb
or
xor
mov
loope
dec
out
push
iret
dec
add
cmp
add
loopne
aas
popa
fldlg2
xlat
jnp
pop
andb
and
cmp
mov
sahf
call
out
or
mov
xchg
inc
and
sub
pop
or
fmull
in
cmp
and
push
loopne
xchg
leave
sub
and
les
loope
adc
xchg
or
test
fsubrl
adc
xor
sub
fistl
pop
cwtl
push
fcmovb
in
and
mov
jle
and
sub
movsl
lcall
cmp
sub
xor
and
xor
xchg
inc
lret
mulb
pop
xor
jecxz
out
scas
xchg
pop
cli
cmp
pop
sub
rcrb
iret
jle
inc
mov
xor
fcmovnu
push
inc
jne
mov
rolb
or
sbb
dec
push
mov
push
cmp
aas
sbb
pop
test
int
sbb
shlb
mov
mov
pop
popa
filds
pop
adc
or
cwtl
mov
cld
jns
dec
movsb
dec
je
cmp
sbb
in
dec
push
in
mov
push
inc
push
adc
pop
fldcw
lods
and
insb
xor
inc
or
jno
in
cmpsl
dec
out
cmp
mov
in
movsb
les
or
ret
jp
fnstenv
cmp
cmc
and
dec
fs
jo
addr16
inc
xor
pop
xchg
idivl
lret
jns
ljmp
and
imul
and
lods
add
push
push
pop
das
sbb
or
jmp
popf
outsl
adc
hlt
xor
outsb
fs
lods
sub
cmpsl
mov
and
jg
cmp
cmp
cmp
jmp
adc
jle
mov
fucomi
sbb
mov
xchg
xor
add
push
mov
mov
call
and
dec
ja
ror
out
pop
cli
testl
sub
cmc
dec
cmp
mov
sub
jb
xchg
inc
les
fisubl
ror
roll
inc
loopne
out
add
fstpt
lea
or
jp
inc
jp
pop
and
jmp
push
cmp
cmc
stos
lock
fidivrs
test
nop
inc
std
aas
jb
pop
or
icebp
jnp
xchg
jmp
mov
cli
int3
lcall
lret
imul
stos
lds
sbb
ds
mov
pop
xchg
rcrl
pop
sar
dec
mov
inc
cltd
inc
imul
mov
jb
mov
orl
ja
pop
les
add
lret
addl
inc
mov
out
ljmp
adc
stos
mov
pushf
xorb
out
push
adc
mov
icebp
inc
inc
fcomi
sahf
test
fwait
popf
mov
sub
mov
push
loopne
mov
lcall
push
test
out
push
scas
ja
push
in
or
cwtl
enter
add
xor
push
pop
pop
pop
icebp
in
push
pop
or
cmovl
mov
mov
lcall
mov
sbb
daa
push
jl
mov
mov
out
cwtl
popf
mov
repz
in
add
dec
mov
adc
aas
xchg
push
int3
ljmp
pop
shlb
pop
andl
mov
jb
lock
push
mov
test
loope
cmp
movsl
lret
sbbl
xchg
jecxz
lods
out
adc
in
adc
test
iret
pop
jo
pop
and
mov
jge
popf
or
cli
dec
sbb
xchg
mov
pop
add
out
jmp
xchg
or
xor
push
out
insl
xchg
fidivs
and
mov
lahf
cmp
bound
adc
mov
bound
je
in
mov
mov
mov
popa
fisubs
icebp
lock
test
jmp
outsb
dec
je
popa
jecxz
ja
fcoml
inc
or
adc
sub
das
xor
mov
bswap
dec
repnz
negl
mov
daa
add
seta
cmc
cmp
stc
sbb
out
js
ljmp
lods
mov
dec
adc
popa
int
inc
test
and
add
inc
test
out
mov
lahf
or
ljmp
daa
jns
stc
shll
aad
xchg
dec
or
into
rclb
fnsave
xchg
mov
pop
xchg
imulb
test
push
mov
push
popf
push
out
push
and
lods
jmp
mov
sahf
mov
jge
test
xchg
jb
xchg
and
add
insb
push
movsl
mov
bound
pop
in
lods
ljmp
dec
movsl
inc
stos
push
jo
out
xchg
cltd
jmp
es
mov
sahf
jle
std
adc
xchg
dec
xchg
inc
je
pop
and
shll
mov
mov
mov
movsl
add
or
mov
cmpsl
mov
cmp
cmp
sub
pop
out
mov
lds
leave
aam
inc
rcl
dec
dec
sub
cmp
inc
sub
sbb
push
stos
pop
in
jno
sub
sti
jb
daa
std
stos
ficompl
loope
or
xchg
ljmp
dec
mov
je
adc
mov
pop
mov
leave
xor
mov
cmp
add
js,pt
xchg
addr16
add
pop
push
xor
pop
rcll
xor
outsb
adc
and
or
mov
sti
cmc
jge
aas
insb
in
jbe
jno
dec
scas
scas
push
cwtl
test
push
iret
mov
push
xchg
xor
icebp
mov
add
scas
pop
rolb
rorb
scas
mov
jge
cli
shlb
inc
cmpsb
cli
repnz
xchg
cmp
pop
ds
push
imul
lock
addr16
sub
or
cmp
pop
xor
js
or
into
iret
es
pop
fwait
lcall
and
add
enter
push
cmc
xor
jnp
xor
add
scas
fisubs
pusha
mov
xchg
rorl
pop
iret
sub
inc
and
daa
inc
add
sbb
cmp
out
repz
xchg
test
inc
add
inc
dec
mov
sarb
imulb
call
dec
aam
out
das
repnz
rcrl
sbb
add
inc
lods
push
mov
cmpsl
rorl
pop
cmc
lock
sub
lock
pop
cmp
cs
jmp
add
and
xor
fcmovne
mov
inc
in
lock
arpl
in
pusha
in
xchg
das
mov
cmpsw
test
cmpsl
mov
out
jnp
cmpb
sbb
jmp
and
fmull
repnz
mov
fwait
icebp
jp
cmp
pop
pop
jns
inc
stc
ret
mov
ss
out
out
frstor
lods
test
ret
or
fnstenv
sub
mov
dec
push
bound
movl
jl
jne
mov
jbe
xlat
or
mov
mov
inc
rcrb
orb
clc
dec
int
ljmp
and
cmp
xchg
bound
or
dec
les
sub
pop
xchg
push
in
and
std
fildl
lds
cmp
and
lret
rsqrtps
pop
push
mov
imul
ljmp
mov
jns
adc
repz
stos
push
rcrb
in
ret
test
sbb
sbb
cld
mov
dec
sub
stc
cmp
es
out
mov
mov
dec
ficoms
add
inc
dec
nop
push
dec
test
das
aam
rcl
dec
das
icebp
mov
mov
jp
or
pushf
jno
jp
stos
jae
test
jg
pop
in
into
repnz
roll
jae
enter
movsb
or
arpl
aad
or
insl
insb
movsb
adc
cmp
or
inc
js
pop
cld
cmpsl
call
data16
sub
ljmp
and
mov
fnsetpm(287
mov
js
add
addr16
xchg
jg
inc
in
inc
fadd
ss
das
inc
test
jp
mov
cmpsl
stos
dec
insb
repz
out
insb
lahf
ficompl
mulb
push
hlt
test
dec
push
sbb
jl
fcmovnbe
jg
daa
inc
gs
cmpsb
jge
stos
repz
call
jl
lods
loop
mov
arpl
cltd
jnp
popf
vmovaps
xchg
mov
or
daa
dec
jg
gs
xchg
sbb
decl
ret
cmc
xor
add
jae
dec
insb
in
ret
pop
ljmp
push
and
lds
shrl
adc
pop
mov
movsl
or
pop
movsl
adc
out
lea
pop
mov
mov
fildl
adc
cmpsb
and
sbb
std
adc
jae
adc
lds
xor
sbb
xor
or
cmpsl
hlt
nop
jmp
mov
pop
call
mov
ljmp
push
call
push
adc
test
incb
sbb
or
or
fldt
test
and
dec
pop
pop
in
pop
dec
loope
jae
jle
or
pop
push
xchg
xlat
cmp
lret
enter
mov
clc
push
test
jp
and
sahf
push
aad
inc
jmp
cli
mov
gs
jl
out
test
shrl
mov
push
inc
add
mov
and
mov
imul
enter
and
mov
sub
xor
shll
cmp
divl
dec
jae
mov
sub
cld
iret
dec
imulb
cmp
popf
scas
mov
or
adc
xchg
mov
clc
xchg
pop
and
and
js
int
clc
push
sub
mov
in
out
and
inc
gs
jne
addr16
inc
outsb
orl
push
adc
and
inc
sub
inc
fldt
add
cmpl
mov
add
or
adc
xchg
dec
xchg
test
or
in
push
push
enter
push
aad
pop
push
push
rcll
arpl
jg,pt
in
stos
gs
xchg
and
cmp
loop
sbb
test
cmp
inc
mov
insb
pop
inc
js
pop
out
xor
xor
push
pop
cmp
aad
xorb
scas
in
jnp
jns
push
add
push
cmc
lahf
or
in
test
push
les
cmp
stos
pop
hlt
xor
das
adc
bound
mov
dec
adc
mov
aaa
mov
sub
rcll
jg
fwait
xchg
mov
jp
xor
aas
pop
push
nop
xchg
dec
cmp
hlt
mov
mov
cwtl
xor
movsb
cli
or
adc
xor
jnp
add
in
popa
cli
int
sahf
cwtl
int3
cltd
loopne
mov
pop
xchg
ret
out
lret
insl
push
pop
pop
mov
stos
flds
jo
xchg
rcr
cld
insl
fs
out
jno
mov
aad
xchg
cmpsl
adc
mov
ljmp
insb
pop
or
mov
lock
push
enter
mov
cmp
out
jp
mov
adc
adc
loop
push
and
and
fisubrs
mov
out
xchg
mov
xchg
cld
out
or
aas
jg
mov
cmp
jmp
jae
fwait
xchg
inc
stos
fwait
cmp
test
lock
or
outsl
fidivrl
push
push
sbb
push
pop
lret
stos
ret
pop
jecxz
cli
test
xor
loop
jge
test
into
arpl
hlt
je
in
xor
lock
into
cmp
pop
addl
inc
mov
outsb
movsl
jge
push
xor
inc
push
mov
js
insl
jo
sub
movsl
inc
fnstsw
lds
push
cmp
cmp
in
sbb
jge
sti
xchg
cmp
pop
mov
popw
stos
xchg
inc
and
jmp
mov
or
mov
lds
aaa
ror
rorl
xor
push
aaa
movsb
mov
cs
add
or
push
and
lahf
outsl
lds
inc
mov
loope
inc
clc
addr16
pop
cs
sub
and
sbb
popf
mov
es
cltd
sbb
popa
sbb
popf
xchg
stos
or
les
call
or
int3
jns
cmc
rcll
dec
cmpsl
call
jno
ja
pop
jbe
enter
sbb
or
jecxz
jns
pop
fbld
pop
les
aaa
loope,pt
sahf
push
mov
mov
out
sbb
push
sub
stos
push
popa
sahf
jge
sub
divb
outsb
xchg
xor
mov
or
loopne
mov
das
or
in
mov
jno
mov
test
lcall
lods
adc
push
add
xchg
jae
testb
dec
daa
mov
pop
add
push
fdivrp
sub
jbe
cmp
gs
movsl
push
clc
push
mov
push
loop
and
jns
call
pushf
pushf
loopne
mov
xchg
add
addr16
dec
xor
loope
rcr
mov
fimull
testb
cltd
bound
and
andb
sahf
sub
in
jge
icebp
fsubp
cmp
cmpsl
shr
adc
cmp
push
xor
adc
repz
push
and
jae
mov
sbbl
push
push
hlt
inc
mov
mov
cli
iret
int
jg
ffreep
jp
stos
or
cmp
rorl
sub
loopne
cmp
xchg
add
xchg
or
inc
xchg
jbe
scas
dec
fcmovne
out
rorb
aas
aad
mov
push
fdivrs
aas
lds
sub
cmpsb
add
adc
adc
cmp
push
sbb
sbbb
data16
inc
mov
popa
pop
lcall
dec
mov
loope
adc
gs
lods
and
mov
ljmp
mov
sbb
ja,pt
addl
scas
jmp
mov
push
sub
cmp
jo
and
inc
sub
subl
jo
fxch
cmpsb
pop
arpl
aaa
in
mov
pop
inc
icebp
pop
xchg
xchg
rcrl
lret
lock
jge
adc
mov
and
push
dec
fsts
int3
mov
or
ja
pop
inc
mov
or
pusha
jmp
das
in
insb
cmc
fildll
xor
into
mov
and
insb
add
xchg
or
inc
sbb
out
inc
pushf
add
out
pop
mov
aad
and
les
inc
sahf
fnstcw
mov
cmpsb
in
mov
xchg
les
in
dec
and
int3
xor
push
out
mov
xchg
shll
mov
sar
lock
lds
push
pop
inc
inc
ds
pop
pop
mov
stos
xchg
add
out
sub
nop
dec
add
ret
mov
int
cwtl
cmpsl
lods
mov
cmpl
mov
imulb
xor
jl
push
scas
mov
xor
cltd
push
iret
pop
inc
add
add
mov
cld
fwait
cltd
inc
cs
cwtl
cmpb
test
insb
xor
add
or
or
aas
out
sub
inc
idiv
push
add
sbb
sbb
mov
xchg
or
sub
mov
lret
popf
lret
test
andl
hlt
and
ljmp
imul
mov
pop
rol
jo
pop
imul
jnp
imul
xchg
inc
or
push
out
sub
cmpsl
lea
mov
repz
repnz
jns
es
in
dec
lock
inc
cmp
push
popa
jae
addr16
adc
jecxz
jg
cmpsl
hlt
lods
or
cmpsl
adc
inc
pop
jg
xchg
outsb
sub
xchg
push
mov
sub
mov
mov
mov
mov
dec
xchg
or
mov
add
mov
cmp
sbb
cmp
sbb
jne
adc
xchg
test
stos
insl
adc
mov
scas
fcomip
jp
sbb
jno
pop
dec
cmp
popf
fistpll
or
rol
leave
mov
mov
pushf
test
mov
xor
outsb
popa
push
out
les
shlb
jae
outsl
mov
push
mov
arpl
mov
inc
loopne
ljmp
outsb
movsl
mov
or
adc
mov
dec
push
repnz
pop
out
push
test
call
out
xor
out
xchg
pusha
mov
dec
stos
sbb
aaa
repnz
out
adc
movsl
prefetch
cwtl
ret
xor
jb
into
icebp
lock
mov
loop
loope
div
cmp
imul
pop
mov
mov
mov
add
adcb
pop
and
rorb
cmpsb
adc
push
and
mov
cltd
or
jle
gs
and
stc
adc
test
ss
dec
cmpsb
stos
repnz
bound
mov
dec
add
jbe
das
or
mov
and
clc
cmp
or
add
sbb
or
shrl
inc
movsb
hlt
lods
sub
push
mov
or
aam
sub
inc
test
pmaddwd
xor
fldcw
dec
repz
adc
dec
mov
inc
xor
pop
scas
mov
push
inc
data16
mov
sbb
push
fldl
call
mov
xor
sub
ja
and
dec
cmp
std
shlb
scas
sbb
fistpll
inc
lcall
lds
sub
xrelease
das
pop
jmp
inc
jno
mov
pop
cmp
in
cwtl
int
mov
cli
je
cmp
pop
out
inc
loopne
in
sub
add
add
pusha
nop
lods
jns
and
divb
pop
xor
sbb
int3
jecxz
add
or
xor
add
xchg
mov
push
mov
rcr
loopne
fisttpll
mov
sbb
icebp
mov
jg
cmpsb
ss
insl
scas
xchg
in
es
or
mov
pop
nop
int
sbb
lods
mov
push
cs
xchg
fnsave
dec
mov
sbb
ret
subl
nop
cwtl
xor
mov
aad
push
cmp
repz
xchg
loope
test
push
sbb
test
shll
jmp
fistl
or
mov
pop
xor
push
cmp
mov
sahf
lahf
sbb
mov
push
push
cltd
pop
imul
in
mov
xor
movsl
or
xchg
fmull
fisubs
push
hlt
lahf
adc
mov
clc
sbb
inc
xchg
mov
shrl
mov
adc
mov
fcoml
jbe
xchg
xchg
sahf
push
sbb
or
ss
sti
adc
je
mov
inc
cwtl
sub
popf
jge
inc
hlt
mov
ja
mov
adc
sbb
sahf
xchg
loop
rorb
test
xor
jecxz
arpl
mov
testb
pusha
movl
loope
js
sbb
xor
push
jl
rorl
shrb
push
stos
and
scas
and
fldcw
mov
or
push
mov
cs
jbe
or
out
pop
pop
dec
cmp
mov
aad
cld
gs
leave
jns
or
jnp
push
xor
add
push
shl
ss
add
stc
lret
fimuls
sub
int
test
pop
mov
int
lcall
and
jmp
sub
xor
push
cmp
lret
dec
out
pop
cwtl
dec
mov
sbb
fsubl
jl
lret
cmp
ljmp
pop
sbb
and
test
inc
insl
xchg
xor
push
lcall
mov
and
daa
ja
inc
xor
add
dec
imul
and
pop
ficoms
or
mov
hlt
mov
mov
jbe
add
ja
inc
adc
mov
jl
mov
mov
push
xor
push
mov
jle
jle
jae
aam
mov
pusha
xlat
fsubl
xchg
or
incl
and
aam
adc
fcoms
fcomip
jg
test
notb
dec
lods
mov
mov
popa
popa
mov
push
push
fscale
jae
mov
pop
inc
xor
int
adc
or
clc
sub
push
inc
data16
imul
ss
mov
push
leave
movsb
out
data16
push
imul
sbb
ja
and
imul
push
jns
and
lock
sub
lahf
ljmp
xchg
xchg
mov
push
mov
xchg
out
out
rcl
pop
ret
mov
dec
push
aaa
fs
pop
aas
xor
sahf
fsts
mov
pop
mov
cmp
add
push
xor
and
or
shlb
in
mov
sbb
or
ds
or
cmp
out
push
imul
scas
stc
das
dec
sub
push
lods
xchg
inc
push
cmp
pusha
test
xchg
fstl
inc
loop
loope
or
mov
jecxz
and
and
vpinsrw
aad
les
cmc
jp
ret
int3
lcall
jecxz
popf
je
rorl
push
icebp
or
pusha
adc
sbb
addb
leave
stos
imul
or
rol
cltd
inc
jbe
aam
shll
push
push
sub
enter
ret
add
out
fisubrs
movsl
mov
or
fisubrl
inc
fcmovne
mov
cli
cmp
jmp
inc
leave
or
push
test
outsl
cld
sbb
imul
push
sti
add
mov
xchg
jno
fs
push
fdivrl
xchg
pop
rorl
outsb
in
and
add
mov
rolb
orl
xchg
dec
aaa
adc
orl
pop
mov
popa
xor
cli
inc
jbe
jl
mov
loope
iret
push
push
xor
mov
test
jbe
nop
or
div
mov
xchg
data16
in
fcompp
jl
aaa
cmp
push
inc
rcll
movsl
dec
stos
mov
mov
sahf
mov
daa
push
and
pop
mov
fcom
lock
mov
sub
je
mov
fcomi
rcrl
dec
imul
das
fucom
or
cmpsl
jbe
popa
lahf
xor
das
jp
cmp
mov
pusha
and
addl
icebp
sahf
inc
hlt
js
stc
ds
cwtl
pop
outsb
mov
lea
or
cmpsb
cmc
push
lret
cmc
mov
or
add
pop
out
dec
sub
lods
fnstsw
imul
ljmp
push
cmc
imul
sbb
flds
lods
and
push
popa
jecxz
rolb
sub
mov
shl
mov
xchg
dec
xchg
mov
jo
xchg
iret
pop
xchg
ljmp
data16
movsb
adc
mov
hlt
xchg
pushf
int
and
shl
add
imul
inc
lret
lret
call
xor
lcall
pop
iret
jnp
aad
aas
sahf
aad
mov
sbb
ficompl
popf
jmp
xor
or
jns
ljmp
dec
cltd
mov
pop
adcb
out
data16
mov
imul
mov
and
leave
inc
bound
dec
mov
cmp
inc
nop
sti
mov
dec
loop
loopne
aaa
cmp
mov
out
jge
call
cld
xchg
rcll
fs
shll
aas
dec
shrl
imul
pop
jne
sbb
pop
mov
xor
xchg
clc
mov
mov
shl
pop
xor
loope
xchg
adc
jl
xor
dec
xchg
daa
in
int
movsb
inc
cmp
les
cltd
clc
mov
test
aas
idiv
push
cld
pop
mov
dec
sbb
fcoml
pop
add
lahf
ds
add
dec
scas
mov
insb
jl
cmp
dec
into
and
push
pop
and
cwtl
sar
mov
cli
mov
jge
and
inc
dec
sub
bound
aas
mov
jge
cld
addr16
cltd
in
jno
out
inc
lock
xor
shll
dec
xor
xor
insb
mov
jnp
lahf
mov
xor
or
icebp
xor
sti
stos
popa
pop
mov
inc
add
lret
inc
sbb
sub
mov
and
jns
add
call
int
pop
imul
loopne
sbb
dec
dec
subb
push
dec
jnp
add
movsb
and
addr16
push
mov
xor
and
xchg
and
lahf
and
lahf
ficoml
cs
push
inc
out
in
adc
cmc
mov
mov
jno
out
rcrb
popa
xor
daa
cmpsl
xor
or
mov
pop
es
imul
or
push
cmpsb
lret
mov
arpl
movsl
mov
pop
sbb
cmpsb
cltd
or
out
pop
push
js
je
mov
dec
notb
push
mov
test
ret
cmpsb
and
and
fisubl
in
cmp
push
and
int
pop
adc
mov
cmp
addb
int3
or
out
adc
add
pop
or
nop
add
dec
or
repz
bnd
mov
addl
bound
pusha
xorb
xor
cmp
jp
mov
cmp
mov
mov
testb
pop
sub
dec
aaa
clc
jnp
ljmp
adc
sbb
imul
jmp
mov
dec
stos
cmp
adc
scas
xchg
jp
and
lret
dec
arpl
dec
pushl
leave
test
xchg
adc
popf
cli
mov
in
push
aad
xor
xchg
jge
dec
jbe
in
adc
inc
push
lcall
jle
mov
cld
mov
ds
clc
scas
pop
js
jle
jbe
jo
mov
pop
jp
int3
pop
outsb
push
push
repnz
pop
or
addr16
push
pop
jecxz
je
leave
pop
and
movsb
cmp
lea
mov
insl
repnz
push
push
rclb
fidivrl
out
fistpll
mov
adc
aaa
sub
clc
push
lret
adc
addl
std
movsl
lea
lea
xlat
pop
stos
movsb
rorb
bound
ret
cltd
testb
sbb
cmp
ss
sub
sub
sub
push
jae
fwait
adc
movsb
repnz
inc
lods
or
pusha
sub
out
lcall
fwait
enter
test
mov
ja
xlat
inc
in
cmc
pop
lea
mov
pusha
cmp
in
push
and
xlat
sbb
dec
cld
sbb
shrl
pop
das
orb
lahf
stc
negl
loop
sbbb
adc
das
imul
adc
stos
pushf
sahf
shrb
inc
pop
jge
xchg
loope
call
and
or
mov
inc
mov
adc
popf
sbb
cmp
add
mov
jno
dec
sub
or
sbb
dec
push
enter
sub
mov
das
lahf
stos
scas
lds
jns
pop
xlat
cmp
xchg
stc
aam
bound
loopne
jl
cwtl
or
pushf
add
pop
or
and
loop
enter
xor
inc
cmp
pop
xor
mov
fsubrl
sti
das
inc
cs
fsubl
inc
loop
rsqrtps
pushf
fisubs
or
or
in
nop
addr16
testb
aam
and
aam
xchg
enter
adc
arpl
mov
mov
push
or
mov
lock
xorl
cwtl
aam
dec
pop
jbe
das
pop
and
fnstcw
lcall
or
aad
sbb
out
shll
cmp
lods
mov
xor
fisubs
jmp
aaa
aad
cmp
out
push
ret
or
xchg
clc
inc
inc
idivl
pushf
adc
jnp
bound
imul
ja
push
and
mov
adc
mov
mov
and
inc
cli
mov
xchg
or
rorb
cli
mov
loope
pop
cmp
adc
fwait
cmpsl
fstps
mov
xchg
fstpt
ljmp
inc
push
cld
cmp
mov
gs
sbb
mov
mov
movb
mov
rcll
mov
mov
lea
push
inc
out
add
ret
fnsave
shrb
or
push
mov
js
pop
xchg
imul
call
addr16
shrl
adc
outsb
divl
push
lret
mov
xor
xchg
es
inc
insb
or
fcom
ja
add
aaa
add
ja
pop
push
pop
xor
lods
ja
imul
orl
and
int
outsb
cmpb
stc
jp
je
xorl
mov
and
addr16
fisubs
nop
mov
push
stc
sub
mov
cmp
addr16
add
repz
mov
pop
jo
jns
add
les
push
add
ljmp
push
fisubrl
jae
inc
sub
xchg
outsb
insl
imul
bound
sub
jg
sarl
and
mov
xchg
popa
es
jge
mov
fucomi
mov
movsl
ds
cmc
adc
push
out
add
aam
or
repz
push
sbb
sub
bound
into
jne
outsb
sbb
out
cmc
enter
or
scas
fpatan
divb
sub
cmp
mov
push
push
out
and
pop
fdivr
addr16
cld
xchg
xlat
or
aad
das
ljmp
ja
mov
dec
leave
pop
std
ror
sbb
xchg
out
xor
mov
bound
add
fmulp
sub
add
inc
and
popa
ss
les
lahf
mov
mov
std
repnz
jb
gs
sub
xor
and
leave
push
lds
jecxz
cmpsb
out
dec
adc
sub
xor
or
jbe
mov
cmp
repz
insl
or
dec
mov
in
push
adc
outsl
test
sbb
pop
xchg
push
nop
push
jle
pop
lret
mov
into
jmp
mov
shl
loop
movsb
pop
xor
cmp
pop
or
je
xor
push
out
ja
jno
cmpsb
gs
push
int3
mov
push
add
xor
add
icebp
cmp
push
les
ficoml
jo
in
pusha
sub
sbb
and
cwtl
jno
xor
add
adc
inc
cmpb
movsb
mov
sbb
cmp
bound
mov
dec
and
add
xchg
sti
sbb
push
push
mov
sbb
or
vcvtsd2ss
test
pop
adcl
inc
mov
mov
mov
and
popf
xchg
adc
adc
adc
sar
push
or
shlb
in
mov
dec
rorl
pop
arpl
leave
jle
rol
orb
mov
xor
dec
xor
mov
jle
dec
or
jmp
dec
dec
mov
cs
dec
andl
decb
add
shrl
push
js
jae
adcb
push
jge
ds
lods
push
sbb
dec
pop
shrl
mov
pusha
jl
fadds
jl
adc
and
icebp
mov
push
jge
cmp
xchg
jle
xor
outsb
stc
repz
das
mov
mov
lods
mov
test
aad
mov
je
mov
lahf
mov
push
cs
notl
loop
xchg
dec
mov
push
push
mov
aaa
mov
inc
fcoms
mov
xor
jae
fsubrl
loop
mov
push
cmp
pop
xor
mov
mov
adcb
in
adcl
shlb
call
sti
les
sbb
lods
dec
call
ret
jne
arpl
push
xchg
add
mov
mov
cmp
test
fld
cmp
test
in
rorl
sbb
add
xor
pop
test
negb
add
aas
xchg
and
jmp
enter
out
pop
xchg
int3
mov
popa
sbb
pop
in
push
or
cmp
lock
and
in
pop
xchg
adc
ret
cmc
mov
ret
adc
xor
out
inc
add
stos
stos
cmp
fcoml
fsubl
jge
and
xor
push
xor
or
test
push
mov
les
xchg
lock
mov
addb
scas
sahf
sarl
insb
xor
mov
sbb
test
andb
push
and
addl
mov
ret
inc
scas
xor
out
in
fbld
mov
push
mov
shrb
sbb
das
data16
ljmp
cmp
xor
or
sub
orl
mov
or
call
inc
int3
movsl
pusha
jp
or
loop
out
js
pop
push
popf
inc
mov
push
xchg
arpl
jge
or
cs
arpl
insb
mov
jb
xchg
inc
repnz
test
cmc
popa
rol
ljmp
in
dec
adc
mov
fimuls
mov
dec
jnp
je
in
jmp
push
dec
sbb
push
adc
lret
push
je
test
repz
fscale
mov
sbb
inc
xor
cmc
scas
mov
or
dec
mov
insl
inc
jae
inc
sbb
imul
sbb
jge
mov
inc
pop
loopne
shlb
adc
xor
mov
fisubl
jl
cmpsl
sti
insb
jecxz
cwtl
shlb
add
stos
imul
xor
mov
cmp
adc
adc
jns
addb
mov
jl
outsb
js
xchg
and
sbb
mov
inc
sahf
fmulp
mov
sti
nop
adc
sub
mov
inc
xlat
mov
stos
adc
scas
ret
pop
imul
sub
fcoms
fisttpl
test
mov
or
hlt
idiv
ljmp
bound
leave
mov
pop
xlat
mov
dec
int
pusha
test
xchg
fstl
sbb
test
out
in
aad
pop
xchg
inc
jbe
fnsave
iret
mov
inc
inc
dec
or
lea
jmp
test
push
repz
push
in
repnz
out
jl
out
push
sub
jl
ds
xchg
add
icebp
jb
add
shrl
push
dec
cmp
mov
lea
jae
adc
pushf
in
xchg
sub
mov
jle
mov
les
pop
leave
sbb
mov
xor
arpl
jecxz
or
in
insl
adc
fidivrl
divl
je
mov
push
ret
arpl
jp
push
test
xchg
push
fstpl
xor
add
add
shrb
cmp
cmp
daa
xchg
pushf
jns
lret
ja
test
not
icebp
push
sub
sub
ror
jo
adc
std
sbb
sbb
ret
jg
jae
loop
xor
pop
cmpsl
mov
pop
out
testb
mov
aaa
and
arpl
sbb
and
xchg
enter
dec
cmpsl
loopne
pushf
mov
jo
push
adc
loope
jns
xchg
push
mov
adc
push
cltd
and
sub
fwait
xchg
mov
jle
icebp
mov
rclb
pop
sub
dec
push
pop
cs
inc
mov
sbb
push
jp
or
fcmovnu
stc
jo
ljmp
adc
imul
stos
hlt
inc
cmpsb
aas
rorb
sti
and
orl
mov
add
cmp
push
repz
xchg
dec
xor
loop
out
stc
sub
push
adc
daa
xchg
aas
insb
aam
pop
push
push
pusha
add
in
pop
scas
out
cli
cmpsb
pop
inc
in
testb
cmc
and
insl
or
mov
dec
shrl
cmp
xor
mov
cmp
xchg
ljmp
int
loopne
xor
aaa
cmc
or
out
pusha
mov
pop
mul
xor
adc
fcoml
sub
fnsave
inc
xchg
lods
or
call
jae
mov
call
repnz
stc
mov
dec
loop
inc
push
stc
outsb
adc
testl
fwait
push
jo
sub
or
push
lock
mov
sti
js
insb
lea
mov
testb
lcall
addr16
movsb
sti
jno
mov
fmulp
sbb
sub
movsb
outsl
out
push
enter
mov
pand
mov
mov
inc
lds
data16
cltd
aad
push
adc
mov
fistpl
in
jl
daa
cs
stos
lahf
into
call
rcrl
les
dec
xchg
je
js
mov
dec
sub
push
fdivrs
push
push
fidivrs
xor
lds
orb
jecxz
loopne
adcl
mov
clc
cwtl
cwtl
mov
jbe
pop
sub
mov
mov
dec
mov
pop
enter
push
xchg
insl
lods
jno
sub
insl
add
push
mov
es
jmp
inc
xchg
xor
rorb
ret
cld
mov
lahf
cmpsb
in
cwtl
int3
pop
xor
das
inc
sti
test
cmc
jno
clc
outsl
cwtl
pop
int
leave
inc
imul
inc
sarb
enter
sti
lea
lds
cltd
hlt
jecxz
xchg
ja
push
add
lret
mov
cli
insb
in
mov
inc
fiaddl
push
xchg
jp
push
xor
fs
mov
xchg
mov
insb
lahf
adc
jp
roll
pop
mov
cld
sub
sbb
push
negl
lds
out
daa
div
sahf
push
pop
fildll
cmp
notl
cli
cmp
lock
mov
xor
in
pop
jecxz
xchg
jmp
mov
in
pop
ss
mov
mov
add
shl
adc
fcoml
jg
dec
jne
shlb
or
xchg
ljmp
xlat
inc
daa
ja
andb
sbb
les
cmp
push
and
mov
sbb
jns
pop
adc
mov
scas
ret
xor
ret
fwait
test
adc
shrb
mov
bnd
outsl
pusha
or
pop
fs
clc
cmp
lcall
mov
pop
cwtl
sbb
pop
add
in
sub
in
cld
in
test
roll
or
aad
and
dec
int
lahf
out
cmp
int
jp
fs
dec
xchg
andb
xor
fidivrs
push
test
loop
int3
pop
pushf
dec
fs
sub
mov
inc
or
insl
xlat
xchg
outsb
lcall
loope
sbb
in
call
or
adc
aad
cmp
mov
mov
mov
mov
frstor
fidivs
fcom
lock
pop
mov
aad
dec
mov
adc
scas
cld
out
iret
jne
sahf
fisubl
mov
repnz
fstpl
xchg
ds
in
popf
push
cmc
btr
mov
jl
dec
inc
add
cli
nop
and
cmpsl
fistl
dec
dec
xchg
ret
pop
lcall
adc
jp
pop
or
dec
cmpsb
ss
scas
pop
add
lock
and
stc
imul
xor
rcl
hlt
icebp
ja
push
push
ja
mov
fmulp
fwait
mov
ret
cmp
mov
xchg
fadds
lahf
into
lods
pop
and
mov
scas
int
out
out
cltd
dec
sub
push
push
stos
push
mov
cmpb
push
add
sub
insl
movsb
xlat
xlat
into
fdivrs
ret
ljmp
push
inc
shlb
mov
inc
cmp
add
call
pop
xorb
inc
hlt
dec
sub
push
int
cmp
test
movb
aam
fistpll
xor
lahf
insb
mov
xabort
fwait
cmp
mov
repnz
push
pushf
xchg
arpl
lods
cltd
pushf
gs
pop
sbb
or
insl
mov
fcmovnu
test
scas
jae
xchg
xor
imul
push
insl
add
jns
in
fldl
outsb
adc
jns
scas
pop
cmp
xor
test
inc
xchg
mov
jbe
cmp
xchg
ss
pop
jmp
pop
mov
repz
pop
mov
mov
daa
not
pop
filds
add
jo
cltd
negb
jp
or
ret
outsb
jns
out
pop
xor
loop
jno
mov
xchg
cmp
stos
cmpsb
mov
lret
push
jmp
ss
push
repnz
cmp
outsb
mov
push
daa
aas
xor
mov
and
scas
in
mov
cmp
dec
jnp
lret
push
add
notl
mov
fcmovnb
bound
xor
pop
fs
pop
mov
pop
sbbb
movsb
icebp
mov
fdiv
adc
fwait
push
add
mov
or
mov
fucom
out
jbe
rcrl
out
aaa
jne
cmpsl
push
xchg
testl
cli
bound
negl
push
add
out
aaa
gs
add
addr16
fisttpll
sub
jg,pn
lds
enter
imul
mov
jne
lods
xlat
sub
aad
xlat
adc
xrelease
scas
mov
cmp
add
insb
adc
cltd
sbbb
sub
sahf
add
jmp
mov
lods
hlt
cmp
popa
sar
movzwl
jg
lock
xor
push
mov
jo
lret
lods
rcll
mov
jae
cmpsb
test
mov
pop
inc
test
sbb
insl
cmp
cwtl
loopne
fnstcw
lret
dec
ror
xor
mov
mov
pop
jmp
ja
mov
xor
adc
xor
xor
pop
popa
mov
lods
rcrl
jge
mov
popf
or
mov
sbb
leave
xchg
pop
sti
push
aam
xor
rcrl
xchg
push
dec
in
cmp
adc
dec
adc
ds
pop
adc
or
mov
jle
addl
adc
sti
insb
aam
xor
out
ret
and
loopne
negb
insl
rorb
push
xchg
aad
dec
call
or
mov
push
and
push
mov
scas
push
mov
cmp
loope
loope
add
fs
adc
fsts
cmpsl
leave
xchg
mov
imulb
jle
dec
cmp
int3
jnp
imul
gs
xchg
aaa
pusha
sub
mov
mov
clc
into
ret
xchg
sub
sbb
aas
in
sbb
aad
je
xor
cmp
ret
push
loope
cmp
scas
xor
subl
inc
xchg
add
in
cmc
pop
loope
mov
mov
aam
pop
push
in
icebp
adc
in
loope
pop
cltd
adc
mov
push
add
in
fidivl
inc
jns
mov
out
fsubr
mov
xchg
add
loope
out
xor
dec
clc
scas
xchg
fistps
movsb
ret
xchg
xchg
sbb
enter
hlt
shrb
ss
cmp
fdivs
cwtl
adcl
je
mov
xorl
inc
mov
adc
sbb
subb
fdivr
inc
adc
cmp
xor
pop
pop
fs
and
add
dec
lods
push
out
cltd
mov
xor
jecxz
jmp
and
int3
shrb
repz
push
cltd
dec
or
mov
fwait
xor
sbb
cs
jge
imul
aas
ljmp
xchg
hlt
shrl
adc
inc
or
loopne
mov
rorl
or
roll
in
imul
filds
mov
and
movsl
pop
mov
adc
xor
sti
inc
and
sbb
loopne
cmp
pop
frstor
dec
push
int3
cli
add
cli
cltd
rcl
adc
inc
mov
inc
adc
stos
cld
add
mov
dec
sahf
jbe
cltd
mov
jecxz
lret
insl
lahf
xchg
xchg
mov
add
xchg
sub
pop
mov
add
add
shr
imul
inc
jl
neg
xchg
stos
fiadds
xor
ljmp
clc
push
add
push
push
cmp
xlat
sub
push
xchg
fnstenv
mov
out
dec
pop
dec
fmull
enter
fwait
in
mov
shlb
movsb
push
mov
out
sbb
mov
fsts
sahf
addl
inc
les
lods
lods
leave
and
mov
pusha
cmpsb
xor
bound
mov
test
pop
scas
fs
and
sbbl
and
xlat
cld
xchg
jp
loope
xchg
lea
xchg
lock
push
pop
ss
push
les
repz
mov
pop
xor
and
push
xor
aad
fisttpl
jbe
pop
push
sub
cmpsl
jnp
ret
jmp
cmc
mov
scas
mov
lahf
adc
add
icebp
dec
push
fstps
gs
adc
push
jbe
adc
jno
or
mov
daa
adc
int
mov
adc
stc
pusha
cli
lret
hlt
pop
andl
mov
dec
lea
sub
test
ljmp
dec
inc
pop
push
pop
lock
sbb
add
lods
test
jb
lret
iret
xchg
xchg
mov
scas
or
out
or
cmp
insb
lea
push
mov
shrl
xor
inc
lods
mov
cmp
jo
xchg
dec
scas
jae
xchg
repnz
push
cmpsl
inc
and
jns
mov
mov
fistl
shlb
adcb
mov
push
cld
adc
cmp
jp
ds
in
pop
out
cld
inc
sbb
sub
std
inc
and
xchg
xchg
mov
and
or
adc
add
dec
sub
pop
cmp
test
andb
outsb
ret
orb
jo
push
xchg
pop
adc
cltd
sbb
mov
jp
data16
cld
sbbb
imul
dec
mov
xchg
xchg
xor
dec
jae
imul
lds
addr16
cli
sti
out
call
leave
js
std
or
std
xchg
push
xchg
call
enter
xor
jle
imul
and
cmpsl
or
je
insb
fisubrs
out
shll
sti
push
cmp
xor
add
stos
test
cld
xor
stc
mov
jmp
iret
pop
xor
rcll
xchg
out
push
xlat
mov
std
das
cs
sahf
sahf
push
xor
mov
jne
repnz
jno
dec
icebp
fldcw
mov
pop
pusha
push
jle
jl
mov
adc
cs
push
adc
ffree
rcl
rclb
repnz
call
push
adc
ret
mov
xor
jge
rcrl
mov
or
jae
cmp
roll
xor
or
shll
ja
repnz
ret
mul
fwait
pop
mov
daa
mov
inc
xor
mov
sarb
outsl
mov
jns
or
mov
cmp
mov
add
test
mov
scas
cmpsl
pop
or
sub
pop
cmp
xor
xor
pop
mov
repz
jmp
sbb
push
or
mov
and
arpl
adc
ror
xchg
push
int
pop
inc
xchg
ss
outsl
jp
imul
mov
mov
mulb
jg
stos
pop
mov
add
add
xor
test
scas
mov
clc
lea
add
or
mov
xchg
and
push
sbb
mov
sbb
mov
repz
or
stos
outsb
adc
jns
mov
divl
in
lds
xlat
lret
pop
sbb
mov
jns
mov
adc
xor
in
xchg
adc
adc
and
fisttpll
xchg
cmpsl
adc
mov
mov
and
jo
mov
fcoml
jne
sub
imul
stos
lahf
or
jl
sub
insb
in
dec
dec
das
push
out
pop
mulb
fwait
test
cmp
in
inc
dec
dec
mov
pop
dec
dec
sub
push
sbb
sub
ret
or
cmp
insl
popa
lock
adc
les
roll
mov
dec
test
mov
sbb
xor
aad
dec
xor
or
js
jmp
lock
push
test
lock
jb
xlat
push
outsl
in
sub
stos
imul
ljmp
ret
shlb
cmp
mov
inc
jp
daa
cmc
sub
js
fnstcw
adc
sub
hlt
es
inc
shrl
leave
inc
add
leave
aaa
std
xchg
idivb
dec
orl
inc
jb
stos
add
ss
dec
ret
mov
inc
loop
and
lds
push
dec
loopne
mov
dec
test
push
pop
jp
and
dec
rcll
out
rcrb
fstpt
addr16
int
sub
push
lcall
mov
pop
mov
sub
test
push
xorl
mov
data16
gs
fnsave
fistps
cmpsl
mov
adc
cmp
or
adc
testl
push
das
jo
fcomps
adc
cmc
mov
adc
mul
insl
push
out
or
add
push
and
push
lea
lds
and
add
adcb
xchg
ss
dec
popa
xchg
cmp
and
hlt
mov
jns
nop
adc
cmp
cmpsb
pop
stc
or
cltd
pop
or
sbb
sbb
push
jl
mov
flds
or
or
in
xchg
ds
pushf
push
cmp
and
arpl
jo
inc
in
cli
out
push
jecxz
and
add
out
je
sbb
mov
add
jno
repnz
arpl
sub
jne
addb
xor
jo
test
les
cli
xchg
das
cmovp
xchg
mov
sarl
xor
inc
int3
xor
pop
inc
cmpb
pop
imul
or
and
hlt
and
push
nop
xor
xchg
js
push
xchg
ss
fidivrs
inc
in
mov
outsl
cs
iret
sub
sub
add
sbb
cmpsb
xor
mov
push
scas
xor
or
rcll
leave
test
add
daa
fadds
push
jns
lock
sub
mov
je
icebp
test
lds
jnp
aaa
fdivl
cmp
insb
xchg
movsb
xchg
inc
push
xchg
xor
fxch
push
ja
mov
test
mov
cmpb
lahf
adc
jp
sub
repnz
cwtl
data16
pop
mov
arpl
fstpl
out
gs
mov
pop
out
lret
aas
xlat
cli
xor
mov
mov
aas
ret
mov
bound
mov
inc
mov
testb
or
aad
push
jns
push
int3
lret
pop
jns
inc
popl
ljmp
cmpsb
jo
shll
mov
mov
or
mov
mov
and
out
shr
xchg
cmp
mov
sub
int
push
pop
mov
ss
inc
ret
hlt
int
stos
mov
lcall
insl
xchg
dec
or
pop
push
xchg
dec
insl
aaa
pop
ret
xchg
and
clc
mov
mov
ss
scas
add
test
mov
or
in
push
incb
sub
xlat
push
insb
out
jecxz
lret
push
push
jl
hlt
push
lahf
push
mov
or
dec
addr16
push
test
dec
mov
in
sti
test
inc
setae
jle
loop
cmp
mov
cmp
mov
sahf
sbb
sbb
pop
int3
jae
mov
ret
jbe
xor
inc
in
xorb
mov
mov
add
pop
ret
cmp
jnp
or
je
or
in
add
sub
jno
dec
insl
dec
imul
jp
and
ss
leave
cld
dec
dec
push
pop
icebp
out
roll
popf
icebp
jl
pop
add
outsb
lret
out
out
rolb
ret
sbb
lahf
in
cmp
das
adc
or
movsb
lds
xor
add
mov
jg
imul
pop
push
sbb
insl
pushf
and
pushf
rorl
add
and
mov
or
sbb
mov
sub
add
and
xchg
arpl
lods
sbb
testb
cmpsb
ret
aaa
jne
and
rcrl
and
movsb
ds
cwtl
jmp
orb
mov
out
add
test
hlt
or
mov
and
and
dec
insl
pop
dec
lock
stc
xchg
icebp
or
rcr
mov
fcoms
pop
sub
repnz
lcall
scas
sarb
xor
xchg
jmp
bound
xor
ljmp
adcl
lock
inc
lret
pop
ds
dec
mov
hlt
sti
lahf
stc
xor
das
rorl
push
xchg
adc
sub
icebp
stc
adc
leave
out
rclb
jae
pop
xchg
out
cmpl
imul
sub
push
test
daa
cmp
sbb
cmpsl
movsl
rcr
lods
pop
pop
xor
jb
int
scas
cmovo
orb
aam
inc
std
lret
rorb
xor
test
mov
lods
or
and
dec
ljmp
push
ret
push
pop
push
outsl
mov
adc
xor
incl
dec
dec
jle
lock
daa
hlt
dec
lea
test
add
cmpsl
shlb
mov
out
cli
ret
or
jecxz
xchg
ss
xor
dec
dec
mov
xor
pop
adc
push
daa
loopne
add
sti
aaa
mov
xlat
stos
adcb
and
test
adc
ss
dec
add
cli
ret
in
in
add
mov
mov
inc
stos
push
cmova
dec
mov
inc
nop
pop
insl
xorl
adc
adc
xchg
mov
dec
sbb
pop
jne
cmp
pop
mov
mov
pop
outsl
stos
xchg
arpl
es
ficoms
movsl
cmp
rcr
loope
and
push
mov
arpl
adc
or
mov
mov
cli
sahf
add
mov
jle
jmp
insl
or
mov
jne
xor
ret
cmp
mov
test
mov
xor
xchg
sbb
test
repnz
repz
fstl
loop
insl
dec
jmp
fmull
inc
sahf
dec
mov
push
in
pop
inc
add
xchg
xchg
cmovge
jp
dec
xor
cmpsl
loope
repnz
sbb
add
out
mov
lea
inc
test
mov
adcb
roll
stc
shl
lret
loopne
cmp
sub
inc
repnz
pop
jno
scas
cmp
inc
loop
xchg
dec
push
loop
adc
push
add
pop
sahf
mov
pop
add
add
push
lods
pop
dec
cmc
in
xlat
outsl
imul
mov
pop
mov
iret
and
imul
mov
add
inc
cs
inc
pop
mov
out
or
xchg
out
clc
dec
cmpsb
dec
push
xor
inc
xchg
in
loopne
add
test
ja
mov
scas
push
mov
xlat
punpckldq
pushf
push
lods
les
push
loope
andb
push
scas
push
add
push
lahf
icebp
popa
xchg
mov
ret
pop
push
je
jno
jne
dec
mov
test
or
je
mov
rcl
ret
jns
je
and
ds
cmp
sarb
jmp
xchg
jne
sbb
mov
mov
movl
bound
dec
cmp
outsb
cli
imul
cmp
cmp
or
cmc
sbb
adc
cltd
call
cmp
cli
nop
lods
dec
and
adc
mov
jbe
xchg
cmp
pop
push
mov
fisttpl
xor
sbb
subl
adc
xor
or
test
cmpsl
pop
sbb
xchg
fcmovu
out
inc
repz
and
call
and
fdivrs
inc
pusha
jmp
add
pop
pusha
jl
add
push
cld
jmp
mov
sahf
mov
es
out
in
in
loopne
cli
scas
cmp
add
test
xor
shll
xchg
int
xlat
outsb
sub
repnz
fadds
dec
outsb
rcrb
ljmp
mov
cltd
adc
and
sbb
loop
in
iret
xor
decl
sbb
ja
jno
adc
incb
inc
xor
dec
dec
scas
gs
sub
inc
inc
pop
add
gs
or
and
imul
mov
aad
push
push
lea
add
mov
inc
orl
jbe
aas
push
pusha
mov
mov
aad
jmp
push
push
or
movsb
sbb
in
adcb
in
hlt
inc
adc
int3
mov
fimull
rolb
leave
call
out
cld
in
xchg
imul
push
push
fldcw
daa
and
fisttpl
xchg
outsb
fimull
pop
stos
dec
mov
jno
pop
stos
mov
imul
filds
jle
push
fnstenv
pop
xchg
outsl
jp
std
adc
pop
aad
shll
divb
push
ret
jb
mov
fildll
or
mov
xor
jecxz
popa
mov
xlat
xchg
lret
jle
dec
sbb
sub
or
sahf
flds
addl
or
in
pop
test
in
sbb
and
adc
daa
inc
jno
fdiv
sahf
loope
push
aaa
je
outsb
imul
or
dec
push
scas
das
mov
fstl
sub
sbb
jg
scas
subl
adc
divps
out
cmp
and
xchg
xor
hlt
and
sbb
stos
jo
push
pop
aam
in
dec
mov
pop
pop
pop
and
call
popa
arpl
in
pop
jne
inc
daa
push
pop
sarb
cmpsb
mov
and
mov
add
icebp
jmp
dec
adc
add
dec
std
adc
mov
popf
test
or
les
in
cmp
jo
mov
xor
cwtl
dec
fsub
push
mov
mov
loope
mov
push
pop
add
xchg
sub
gs
rclb
out
mull
xlat
es
jns
cmp
jbe
add
add
jb
out
pushf
cmp
dec
test
icebp
scas
aad
push
notl
out
and
push
aad
inc
arpl
dec
ljmp
rcr
gs
fwait
leave
rolb
sub
outsl
movsl
sub
sbbl
mov
mul
incl
fsub
clc
jnp
jg
adc
mov
sub
add
iret
push
xchg
mov
fimuls
cwtl
loope
aad
in
cmpsb
jmp
fadds
jno
aas
sub
mov
pusha
mov
jge
out
loopne
fcomip
movsb
jns
cmc
outsl
sbb
test
adc
push
dec
cli
add
or
cmp
jns
push
daa
cmp
data16
xchg
stc
pop
lods
testl
inc
lret
cmp
jbe
jl
mov
xor
cli
ffree
jmp
inc
mov
xchg
aam
call
int3
out
cwtl
imul
pop
mov
mov
das
xor
lds
add
jp
or
push
daa
mov
jno
cmpsl
xor
sbb
aaa
inc
outsl
mov
dec
bound
out
xchg
cmp
std
mov
and
out
xchg
push
daa
adc
shrl
out
inc
repz
mov
mov
sbb
mov
push
jnp
sbb
call
mov
jge
pusha
inc
xor
cwtl
xor
add
adc
pop
pop
xor
or
adc
pop
outsl
mov
jo
xor
insl
aad
jg
idivb
cld
addr16
adc
outsb
mov
pop
xacquire
dec
stc
in
jl
pop
mov
bound
adc
lods
cmpsl
mov
js
xor
or
adc
push
lods
insb
lds
nop
lcall
xlat
sub
push
inc
aad
test
aas
popa
into
push
sti
sbb
and
sbb
xor
mov
xchg
add
rcrb
push
js
shrl
mov
add
ret
popf
mov
shlb
xchg
jns
fwait
dec
stos
notb
sbb
addr16
inc
pusha
xor
or
mov
mov
push
add
dec
popf
jns
fdiv
fstpt
aam
xchg
inc
mov
add
adc
addr16
pop
icebp
stos
std
cmp
sahf
add
lock
packsswb
sub
xchg
and
push
repnz
and
lods
sarb
loopne
in
jnp
cmpsl
mov
mov
push
mov
push
add
loop
xorl
push
int3
test
cmpsl
or
inc
cmp
lods
and
lahf
or
mov
push
mov
sbb
xchg
push
push
in
inc
mov
dec
sahf
dec
out
ret
test
pop
cmp
jnp
jmp
xchg
mov
cmp
arpl
cmp
sahf
scas
movsb
dec
pop
cld
inc
and
ret
fadds
clc
sbb
nop
lods
dec
mov
mov
or
mov
jns
inc
popa
jge
popl
add
jnp
or
nop
pop
daa
scas
cld
addb
xor
jmp
ss
xor
repnz
cmpw
jo
cmp
xor
mov
outsl
lods
loop
lock
cmp
jo
mov
push
pop
sub
mov
xchg
hlt
es
pushf
inc
mov
insl
inc
icebp
dec
imull
lea
xchg
add
inc
sub
gs
cmp
rcrb
orb
jb
or
push
nop
sub
add
jo
rcr
ss
xor
sub
fcmovnbe
pop
cld
lods
fists
pushf
ja
lret
cmp
les
adc
hlt
cltd
add
pop
js
and
mov
sti
jge
stos
insl
ja,pn
paddusb
roll
sbb
scas
inc
loopne
aas
pusha
xor
rcrl
sarb
je
mov
jb
faddl
in
xor
xchg
xor
and
ja
add
lods
fwait
jg
dec
xor
movsb
and
mov
lret
incl
sahf
ljmp
outsl
jb
mov
pop
jmp
xchg
xchg
pop
cmc
std
incl
mov
jnp
pop
pop
add
sub
movsb
cmp
fwait
and
mov
rcl
jno
fisttpll
nop
mov
mov
add
mov
aaa
ret
out
popa
cwtl
sub
cwtl
mov
sub
das
and
rcl
mov
roll
sar
pop
mov
xchg
ss
incl
sarl
pop
lods
mov
and
mov
pop
ret
jae
lahf
sub
or
cwtl
mov
inc
cmp
repnz
jnp
divl
pop
jle
xchg
pop
or
push
popf
mov
add
inc
bound
cmp
loop
or
sub
xor
mov
fistpl
dec
std
add
leave
aaa
loopne
or
cmp
imul
cmp
testl
push
stos
jno
data16
mov
mov
leave
fcmovb
out
dec
das
jns
sub
sub
aam
cwtl
pusha
lahf
ss
lret
adc
cmp
dec
jp
fucomip
movsl
or
mov
shr
pusha
lock
fs
xor
mov
xor
repz
out
das
popf
in
outsl
icebp
movsb
test
lods
fsubrl
ja
jmp
pop
jbe
mov
pop
lock
mov
mov
push
add
jmp
nop
xchg
les
adc
aad
jg
mov
inc
mov
jb
push
mov
ret
cmpl
xor
xchg
sub
fldt
dec
and
add
dec
add
mov
dec
xor
sub
dec
movsb
sub
lret
sub
cld
out
iret
icebp
push
dec
dec
pop
cltd
adc
push
ret
mov
fisubrl
popa
sub
testb
outsb
nop
fwait
shlb
jge
sbb
adc
mov
xchg
sub
out
mov
jnp
push
inc
jle
fsts
xor
fucompp
int
inc
mov
or
stc
push
testb
sbb
cmp
loop
outsl
inc
pushf
scas
aaa
repz
dec
popf
in
or
sbb
repz
jl
cmp
jae
jae
insl
pop
jno
repnz
sub
popa
int3
mov
mov
jno
fst
cmp
insb
sub
inc
aas
dec
mov
mov
fcoml
movsb
adc
in
push
cmp
mov
fwait
popl
clc
push
dec
scas
stos
sub
mov
xchg
ret
int
lcall
paddb
dec
xchg
cli
push
mov
nop
gs
add
das
pop
out
mov
mov
sbb
mov
xorb
lds
jmp
test
scas
sbb
dec
cwtl
sbb
shl
and
or
cmc
sub
sahf
add
and
xchg
adc
and
les
cmp
inc
fs
add
test
lods
lcall
inc
mov
test
dec
cmpb
scas
les
sub
mov
int
and
mov
mov
outsl
shrb
cmp
dec
mov
fwait
gs
rcrl
xor
pop
and
aad
fcom
popa
push
mov
xchg
add
ret
ja
psadbw
adc
das
cwtl
psraw
jns
mov
sub
and
pusha
test
imul
jp
outsb
mov
jecxz
dec
ret
mov
popf
jae
pop
cmc
jmp
lea
out
shll
test
loopne
les
in
rcll
jnp
jg
push
mov
fwait
push
mov
cmp
bound
sub
sbb
xchg
fildll
xor
repz
icebp
aas
push
addr16
adc
jmp
nop
pop
mov
inc
clc
and
mov
jl
aas
inc
aas
inc
jbe
and
add
ret
cmp
mov
fstps
jb
mov
cmp
inc
push
leave
pop
xchg
loop
adc
out
in
pop
xchg
sub
cmpsb
adc
or
mov
cltd
add
mov
mov
dec
xchg
xchg
pop
ja
icebp
lahf
ret
push
je
std
stc
std
inc
inc
test
sbb
push
xchg
xchg
inc
and
faddp
rcll
cmp
fwait
iret
dec
xchg
mov
add
sub
adc
or
push
jns
add
test
ds
lret
icebp
push
int
mov
clc
sbb
rcl
fs
test
push
scas
int
mov
adc
push
iret
das
test
cmpsb
lea
add
pop
add
xor
cmp
dec
in
fdivl
insl
xor
into
fidivrl
test
xchg
jmp
jns
mov
xor
mov
repnz
jno
clc
push
rorb
jnp
add
mov
add
ret
jbe
je
fsubrs
pop
adc
add
push
fwait
inc
arpl
mov
xchg
adc
push
scas
mov
adc
push
push
insb
out
aaa
or
movsb
xchg
cmpsl
dec
js
push
scas
in
rorl
aam
mov
mov
xor
xor
sahf
pop
pop
int
cmp
ss
sbb
cmp
add
mov
dec
sub
sub
sbb
addb
sub
mov
pop
inc
push
mov
bound
lods
mov
cmp
push
inc
lods
scas
inc
enter
pop
pop
xor
bound
flds
insl
stos
cmp
rcrl
insl
xchg
mov
fsubl
cmp
fs
xor
test
jnp
ljmp
lcall
lcall
je
lahf
or
mov
mov
in
push
cld
xor
lock
pop
inc
add
lods
jbe
insb
aaa
lock
lds
dec
jl
xchg
popa
xlat
adc
lods
int
ret
insb
je
loop
inc
dec
add
mov
scas
lret
xchg
ljmp
in
push
jmp
lock
imul
daa
mov
xor
xlat
mov
cwtl
mov
xchg
dec
scas
test
mov
mov
inc
mov
mov
ffree
fwait
rcrl
push
mov
xor
ds
cmp
xor
cltd
js
and
lret
mov
cmpb
mov
adc
pop
repnz
sbb
cwtl
xchg
mov
bound
add
cmp
nop
or
xchg
mov
sbb
sub
pusha
sub
mov
mov
pop
in
push
ljmp
ds
jge
test
lock
lock
pushf
daa
iret
xor
xrelease
fsubs
fprem
mov
inc
ret
pop
pop
gs
jp
shrb
outsl
stos
loopne
fldl
add
mov
mov
and
adc
shrl
enter
sub
pop
repz
adc
roll
sbb
bound
cmp
jnp
jb
and
inc
pushf
inc
dec
jo
lods
adc
xorl
lea
fnstcw
sub
jbe
mov
adc
pop
push
gs
lock
sbb
sub
dec
inc
loop
lods
mov
inc
fmull
xchg
daa
pop
or
es
shl
pop
and
clc
nop
pushf
and
loopne
in
add
push
sub
inc
inc
dec
imul
push
pop
mov
stos
mov
arpl
rcll
dec
cmp
call
mov
icebp
adc
cltd
jl
ret
sub
js
test
imul
mov
sbb
jecxz
push
into
out
sbb
mov
mov
rcrb
mov
mov
and
sbb
mov
sub
push
popa
arpl
mov
mov
mov
push
stos
ret
out
inc
push
ja
push
inc
pop
sbb
mov
repnz
insl
jmp
ds
mov
repnz
mov
lret
dec
and
call
lret
push
stc
jl
and
rorl
add
fistl
mov
push
mov
lock
in
cmpsb
mov
ljmp
jb
ljmp
es
add
ds
jae
shlb
fwait
aas
andl
push
cmp
cs
lcall
sbb
cmp
mov
cmp
adc
test
jbe
scas
popf
cs
iret
push
or
jbe
add
outsl
shll
pop
lea
mov
push
fiadds
and
subl
clc
into
stos
cs
add
in
xchg
xor
loopew
test
sub
xor
loopne
in
mov
sbb
xor
adc
and
pop
or
add
lret
sub
mov
fidivl
mov
lret
and
ret
shrl
ret
or
sbb
popa
orb
lcall
or
cwtl
fsubrl
or
and
mov
in
repnz
or
mov
lds
popw
mov
xchg
cld
ljmp
sbb
aam
rol
push
jg
mov
mov
das
and
xlat
dec
dec
cmp
out
sbb
loopne
test
dec
sbbl
dec
inc
fs
test
push
lds
mov
jne
scas
inc
mov
mov
int3
jmp
ss
pop
outsb
and
or
and
add
js
cmpsl
push
push
inc
push
popf
xlat
add
ss
leave
inc
imul
jne
cmp
sub
cli
sahf
xor
xchg
loope
and
fldl
les
iret
push
aad
clc
cltd
insb
imul
pop
pop
pop
inc
das
ljmp
shrl
pop
sahf
je
pusha
adc
in
arpl
mov
mov
dec
dec
cmp
cwtl
rclb
leave
mov
stc
imul
fnstsw
inc
and
ss
out
lods
adc
jae
lock
dec
xor
in
add
inc
or
add
jmp
iret
lret
icebp
add
mull
push
inc
pop
js
or
lds
mov
sub
lods
pminub
lock
imul
call
outsl
cmc
out
subb
pop
xorb
mov
fcmovnb
mov
fsubl
inc
enter
test
mov
jae
rorl
aam
cld
push
jb
test
add
in
imul
dec
jbe
pop
lea
sub
mov
jl
cmpsb
mov
test
pushf
cmc
repnz
out
or
sbb
jp
pusha
pop
cmp
pop
sub
mov
add
push
cmp
pop
ret
outsl
repz
inc
js
cmpsb
negb
and
pop
xor
idivl
and
addr16
filds
pop
cmpb
insb
out
lahf
neg
pop
lds
mov
jle,pt
push
xchg
cmc
lock
or
imul
mov
repz
out
in
or
fwait
cmp
push
movl
and
and
stos
in
inc
pop
mov
out
mov
push
lock
std
jno
lods
jno
push
jp
das
cltd
inc
jnp,pt
sbbl
ret
popf
sbb
sub
push
cmpb
ljmp
outsl
iret
cwtl
jo
ja
mov
push
stc
stc
cltd
inc
mov
pop
enter
xchg
orl
push
push
cmpl
iret
xchg
sbb
pop
sub
pushf
loop
jne
dec
sarl
push
loop
fs
lock
cli
or
mov
adc
and
int3
sub
mov
imul
xor
mov
outsl
and
sahf
inc
lcall
mov
mov
fmul
sbb
jp
outsb
push
push
ja
sub
sbb
loopne
adc
or
es
ss
cmpsb
imul
in
sub
test
or
sbb
jnp
push
out
xchg
xor
add
pop
xor
loop
jne
test
pop
jb
in
push
in
fs
cmpsl
and
fadds
sbb
repnz
mov
xchg
push
cld
mov
mov
jg
add
nop
inc
and
test
jp
dec
call
inc
test
xor
fstpt
jmp
pop
sub
and
mov
sub
mov
fidivrl
inc
fistpl
and
cs
sub
and
inc
xor
sub
loopne
cmp
je
jecxz
mov
shll
push
jecxz
cmpsb
mov
xlat
jp
dec
and
and
int
sub
jg
dec
sbb
lods
repnz
stos
jg
lret
xor
xor
or
push
add
rcr
bound
sub
popf
or
adc
fwait
cmp
mov
sbb
aaa
out
decl
mov
cltd
mov
aaa
ds
inc
jo
sub
lods
inc
or
xor
in
push
test
push
negb
fcomi
jbe
adc
rorb
xchg
cmp
aam
mov
gs
scas
in
and
out
inc
rcr
push
fwait
inc
sbb
test
shll
or
in
sbb
js
cmp
ret
jno
sbb
std
cmp
mov
mov
jae
and
stc
frstor
stos
lret
xchg
jge
or
js
dec
pop
cs
and
sbb
jne
ret
fs
xchg
bound
icebp
sub
sub
jbe
lods
lds
les
cmp
repz
sbb
lwpins
nopl
incb
out
or
pop
xor
push
pop
outsb
jnp
add
fnstcw
lods
or
loopne
scas
jae
loope
mov
aas
cmp
movsb
out
cmp
add
pop
jne
push
js
adc
les
push
sarl
mov
jb
bound
sub
sub
cmp
bswap
rclb
sbb
adc
hlt
sbb
in
int3
push
aas
sub
dec
cmp
or
adc
repz
sub
xrelease
in
cmp
clc
and
imul
mov
mov
mov
ja
and
jge
mov
repnz
xchg
lock
xorl
cwtl
out
popf
inc
cmpsb
mov
push
cmpsl
pusha
xchg
jmp
sub
inc
inc
and
pop
lret
push
cld
mov
push
cmp
les
std
adc
and
add
repz
xchg
xor
sbb
rclb
xchg
xchg
pop
cltd
push
aam
fildll
xor
inc
lahf
negb
jge
aas
mov
into
or
pushf
add
mov
sbb
mov
aad
nop
sbb
pop
pavgb
cld
int
jae
mov
dec
or
mov
inc
aam
mov
jae
movsl
rorb
mov
mov
int3
movsl
enter
movsb
inc
in
shll
mov
lock
pop
add
clc
mov
dec
xchg
pop
fstpl
imul
dec
or
insb
inc
test
and
imul
inc
popf
ja
pusha
xor
xor
sub
xor
sbb
cs
xchg
jge
inc
lods
jl
lcall
jecxz
lock
testl
aas
stos
arpl
aaa
mov
jo
fistps
mov
fwait
gs
push
prefetcht0
fwait
cld
hlt
xor
repz
adc
repnz
cmp
jp
mov
push
js
or
inc
int
lock
ret
sub
mov
aad
js
or
daa
and
push
jp
mov
repnz
ffree
mov
fisubs
push
std
push
xor
jnp
in
repz
lods
dec
push
cmp
in
bound
and
jbe
ret
mov
icebp
test
shll
mov
popf
sbb
mov
sbb
push
shrl
jb
mov
mov
xchg
xchg
pop
cmc
jns
mov
test
and
push
sbb
cmp
and
xchg
cld
sbb
mov
lds
and
jb
jmp
dec
push
xchg
or
call
mov
cltd
mov
push
repz
jmp
mov
ja
lahf
jnp
mov
jmp
mov
mov
dec
aam
orl
movsb
inc
call
fidivl
jg
xor
lds
or
loopne
add
sahf
xchg
push
orb
in
stc
addr16
movsl
fbld
mov
aas
stos
cmp
shl
xor
nop
je
lar
cmpsb
or
movsb
das
fbld
aad
ja
flds
mov
shrb
or
repnz
shl
push
push
mov
ret
and
and
pop
adc
jne
and
jge
mov
push
pop
popa
outsl
enter
adc
mov
jp
das
cmp
pop
dec
add
test
dec
jl
mov
sbb
stos
scas
ds
movsb
xchg
loopne
cmp
sbb
ds
sub
movsl
xor
dec
cltd
movsl
push
mov
insb
jmp
push
lret
dec
adc
jbe
mov
mov
stc
addr16
idivl
sbb
aad
std
cltd
xchg
adc
cmp
je
dec
into
mov
and
xor
scas
fisttps
lret
gs
inc
loop
sub
or
adc
popa
cs
popa
dec
sub
gs
movsb
in
stc
and
push
push
hlt
push
adc
aaa
mov
or
stos
leave
sub
sub
adc
in
and
ljmp
push
aam
lea
adc
cmp
mov
fidivl
ret
int
adc
cmp
push
das
jnp
es
dec
adc
test
mov
jge
sub
cmp
inc
xor
cltd
outsl
jnp
ss
sub
sub
into
cltd
fildl
push
pusha
push
xchg
mov
mov
out
popf
call
pop
xchg
add
sub
mov
dec
inc
rol
sub
jmp
jecxz
mov
mov
cltd
inc
iret
xchg
and
xlat
std
cmp
movsb
cmp
insb
pop
ds
decb
std
iret
mov
mov
or
into
adc
lods
mov
aaa
test
or
js
jle
rolb
movsb
stos
mov
cmpsb
push
fisubs
cli
sarl
lods
je
push
xchg
push
pushf
xchg
in
cmp
sub
rorl
js
ss
in
push
dec
fwait
repz
xchg
fwait
hlt
je
jge,pn
xorl
sub
in
js,pt
ljmp
std
push
jmp
sarb
nop
into
cmp
cmpsl
cs
jge
pop
mov
call
lret
sti
add
shll
push
or
xlat
add
pop
lods
pop
add
das
fstl
mov
push
or
pop
aaa
shl
sti
xlat
out
das
lret
cmc
iret
add
jp
push
shll
jp
sbb
lds
pushf
mov
stc
mov
sbb
dec
in
or
pop
gs
push
inc
mov
mov
and
packssdw
int3
mov
aas
jmp
cmpsl
mov
lea
hlt
call
ja
daa
and
inc
inc
aas
rcrb
inc
imul
cwtl
inc
jno
arpl
and
lds
mov
mov
add
add
fmuls
xor
jl
jbe
outsl
push
jg
and
aam
sub
and
fwait
lds
push
rolb
sbb
add
loop
aam
pop
es
inc
mov
shr
xor
or
js
int
adc
sbb
js
loop
xchg
sub
xchg
xchg
pop
xlat
lret
dec
das
xor
in
jp
andb
daa
xlat
leave
mov
add
sbb
test
ret
adc
dec
xchg
or
cmp
scas
mov
jecxz
andb
xor
xor
jge
bound
fsubr
or
sbb
add
mov
mov
mov
rcrl
pop
add
add
mov
push
testb
add
frstor
mov
arpl
dec
in
gs
lds
rolb
jg
sub
mov
push
in
loop
jbe
insb
sti
lods
iret
ror
insl
repnz
fildl
movsl
push
mov
jl
cmp
sbb
xchg
inc
or
fistpl
pop
loop
iret
in
dec
sub
xchg
iret
sbb
repz
inc
out
fs
jbe
leave
mov
bound
jns
daa
xchg
mov
add
and
cmp
sub
push
jmp
data16
fdivrl
xor
enter
clc
lcall
rolb
pop
addr16
push
mov
cmpsl
es
sbbb
ret
sbb
sbb
jbe
sbb
adc
int3
pusha
mov
xlat
push
mov
cmp
and
aas
inc
outsl
mov
insl
loopne
mov
fs
int3
xor
inc
mov
outsb
sub
jae
lret
out
sbb
jg
adc
fistl
mov
outsb
xchg
sub
lcall
inc
cmpl
aas
mov
pusha
subps
das
enter
jne
mov
subb
fisttpl
nop
mov
mov
push
sbb
shl
xor
cmp
adc
outsl
out
scas
or
mov
mov
push
cmpsb
mov
sub
test
adc
cmp
lock
shlb
jl
pop
pop
inc
push
jo
and
mul
pop
pop
ljmp
push
in
inc
mov
imull
xchg
pop
push
bound
lret
rcrl
fsts
mov
js
movsb
push
in
sub
adc
inc
shll
divl
jmp
pop
fstpl
xchg
mov
bound
loop
movsb
jb
add
jo
push
scas
mov
xor
fisubrs
xchg
ja
mov
cltd
ror
inc
xor
cmpb
push
jmp
test
pop
jp
xchg
push
sbb
out
and
in
cmp
or
mov
les
call
xchg
mov
sbb
aad
mov
jl
pop
aas
sbb
xor
mov
xor
push
cmp
xchg
mov
pusha
xor
call
pushf
std
fsubr
mov
mov
test
lock
in
and
in
lcall
add
das
pusha
xchg
push
movsb
xlat
fst
sub
das
cmp
mov
das
pop
add
sahf
aas
pop
aaa
mov
cmp
and
xchg
jno
mov
cltd
gs
decb
mov
test
mov
dec
icebp
push
sti
dec
mov
fadd
ds
sub
adc
fsubrs
cmp
mov
popa
js
fdivs
lock
stos
out
jl
shrb
mov
sti
ret
pop
mov
mov
xchg
push
out
or
movsl
aaa
xchg
mov
mov
sbb
dec
pop
mov
ltr
addr16
xorl
sub
cmp
ja
or
jne
push
test
idiv
inc
int3
push
push
pop
gs
mov
adc
xchg
adc
jp
sar
inc
cmp
imul
das
outsb
inc
insl
call
cltd
das
jbe
mov
sub
mov
movsb
mov
cmp
xor
cmpsl
mov
xchg
mov
mov
inc
adc
icebp
imull
pop
pop
sub
push
adc
dec
mov
in
loope
xor
daa
jmp
repz
push
and
mov
xor
pop
adc
cmp
dec
ds
inc
inc
add
aaa
sub
pop
cld
mov
xchg
cmpsl
mov
mov
aas
jnp
mov
adc
mov
jp
push
add
idivb
rorl
sub
xchg
mov
jb
jbe
xchg
mov
jg
lods
or
negb
lea
int3
or
sti
or
mov
lea
mov
or
lcall
push
imul
adc
mov
popf
inc
icebp
jle
stos
mov
popa
jnp
stc
cmc
push
push
pop
or
test
out
inc
xchg
rorl
or
je
and
adc
hlt
xchg
jae
push
push
jge
sahf
mov
jg
mov
ret
cmpsb
js
lea
rcrb
fmull
imull
push
pusha
xor
mov
in
jp
pusha
mov
or
mov
inc
xchg
sarb
adc
mov
sub
es
jbe
jo
mov
xchg
add
pop
in
mov
push
push
out
int3
imul
cmpsb
rolb
int
and
add
out
loopne
and
add
rolb
lea
insl
mov
add
arpl
enter
pop
xchg
xchg
loop
pop
jne
push
add
sub
es
or
out
mov
add
add
ds
movsl
jecxz
cwtl
adc
icebp
gs
rcll
and
mov
scas
pushf
hlt
mov
mov
out
cmp
pop
popl
add
imul
sbb
mov
shl
test
sbb
mov
arpl
cmp
dec
xor
les
mov
mov
inc
xchg
xchg
push
lcall
sbb
adc
push
xchg
inc
icebp
imul
mov
dec
cmp
push
cmp
out
icebp
or
stc
fisttps
mov
mov
cmpsl
jns
xchg
enter
in
add
dec
ja
iret
sub
and
pop
add
sbb
icebp
bound
cmpsl
sahf
xor
dec
fldt
fdivs
jmp
imul
cmp
adc
jp
add
push
rorb
sahf
adc
out
je
loope
cmp
cltd
inc
xor
test
mov
enter
fcoms
jno
inc
mov
int3
enter
sub
mov
lahf
xchg
addr16
jbe
xchg
or
lock
xchg
xor
popa
lahf
xchg
out
mov
mov
inc
jne
push
rcrl
jle
les
push
or
jmp
adc
jne
jmp
fs
add
mov
and
into
movsl
mov
jmp
add
adc
out
pop
push
push
pushf
leave
in
dec
and
adc
push
and
push
jbe
sub
push
fldl
call
xor
test
mov
dec
xor
outsl
aas
add
fs
popa
js
aam
mov
pop
rcrl
xchg
in
loope
xor
enter
popf
add
sub
lret
rdmsr
and
and
std
mov
pop
sar
in
dec
and
mov
or
adc
and
inc
fmulp
pop
lock
mov
xchg
inc
mov
mov
push
pop
xorb
gs
dec
dec
dec
fstps
jp
or
inc
xchg
mov
cmp
fs
add
cwtl
data16
pushf
les
ret
loopne
add
adc
fwait
xchg
push
mov
adc
and
das
mov
mov
rorl
jno
push
jbe
fists
loop
aad
addr16
inc
imull
adc
iret
popa
push
in
fildll
jmp
and
in
jne
hlt
and
repnz
hlt
push
ret
xchg
nop
aas
cmpb
push
repnz
jmp
fstl
cltd
insb
adc
pusha
out
pop
push
sbb
push
and
dec
bound
ss
sbb
mov
or
arpl
pop
js
enter
and
jno
pop
leave
mov
add
data16
lahf
cmpb
adc
faddp
pop
push
nop
pop
cmpl
insl
or
test
inc
shlb
cmpsl
jnp
lret
push
mov
or
cmp
cmp
in
call
test
pushl
mov
sti
cmp
dec
jg
stos
bnd
and
iret
imul
mov
cli
push
or
repz
inc
aad
mov
test
mov
and
pop
popf
push
scas
in
ficoms
push
or
das
xchg
dec
xchg
mov
rorb
jl
pop
loope
movl
mov
push
xchg
cld
jbe
push
fists
arpl
mov
mov
das
mov
mov
cmpsl
or
mov
dec
inc
fwait
out
loope
sub
outsl
push
cmp
out
dec
xchg
stos
jmp
js
sbb
ljmp
xor
aaa
fadds
xor
mov
pop
aas
mov
push
fiaddl
xchg
pop
fimull
pop
pushf
mov
outsl
ret
inc
dec
sahf
in
test
ficompl
pop
adcl
in
pop
sub
pop
mov
aam
hlt
and
pusha
inc
adc
inc
shr
fucomi
mov
adc
push
mov
mov
sbb
rcr
sbb
pop
xchg
xor
enter
psubw
jg
scas
lods
push
dec
add
push
or
inc
ret
mov
xor
mov
std
dec
xor
xchg
pcmpgtw
xchg
ljmp
movsl
aaa
jmp
push
push
es
lods
mov
sub
mov
fildl
push
jg
pusha
sub
and
cld
flds
push
mov
stc
add
mov
xor
mov
mov
les
and
imul
xchg
cwtl
gs
out
jb
cli
adc
pop
mov
mov
dec
push
xor
arpl
leave
negl
scas
jge
push
sar
lock
push
jno
xor
stc
popf
outsl
and
aaa
jle
lods
pop
mov
sahf
pop
insl
cmp
jmp
push
add
mov
dec
jg
xor
cmpsb
lock
add
jae
repz
mov
cmp
pop
or
mov
loop
sub
in
push
pop
dec
cli
xor
sub
push
jbe
push
push
xchg
test
dec
inc
sub
call
mov
mov
mov
and
roll
mov
inc
pushl
sbb
mov
loope
je
mov
xchg
fwait
push
push
scas
jno
add
inc
dec
cmp
lea
lods
or
dec
pavgb
loope
js
dec
mov
stos
push
movsl
sub
inc
push
pusha
jle
mov
add
cmpsb
sbb
fcom
aam
xchg
test
sarb
dec
mov
arpl
inc
cmp
cld
movl
xor
movsb
xchg
ss
sbb
loop
mov
xchg
fldt
inc
mov
adc
aaa
je
jg
push
cmove
push
rep
push
ljmp
cmc
jmp
pop
stc
mov
outsl
adc
inc
and
xchg
adc
nop
push
test
mov
adc
mov
outsb
sub
arpl
push
xchg
das
outsl
inc
lcall
dec
add
js
sub
and
shll
or
movsb
push
adc
xchg
push
jae
xchg
pusha
unpcklps
push
xor
leave
or
mov
sbb
ja
push
add
into
loop
pop
mov
cwtl
out
lea
clc
mov
xlat
out
inc
push
imul
lcall
movsb
xchg
mov
dec
or
int3
enter
pop
xchg
push
push
cmc
repz
nop
and
and
add
enter
fsubrs
mov
sti
sahf
jb
adcb
jle
aaa
push
xchg
iret
mov
jge
outsb
pop
and
pop
pop
jge
addr16
ljmp
sar
scas
loope
aam
rcrb
push
pop
in
cmp
test
fwait
mov
int3
dec
push
fs
hlt
dec
bound
int
xchg
mov
leave
xchg
fisubs
xchg
cld
adc
int
test
inc
in
mov
mov
test
loop
cmp
lods
fwait
ja
pop
dec
mov
ja
out
sub
popf
arpl
jne
imul
cmp
loopne
cwtd
adc
sti
popf
sbb
iret
loop
pop
jecxz
jb
test
out
mov
dec
jne
inc
lea
add
mov
shll
repz
lcall
mov
dec
iret
pop
pop
mov
inc
cmp
mov
pop
enter
mov
loop
in
iretw
push
pop
imul
stos
inc
repnz
sbb
mov
jmp
mov
sub
or
jnp
mov
imul
add
hlt
mov
aad
iret
pop
mov
lods
rcrb
cmp
xor
call
fdivr
insb
sbb
cmp
lea
or
mov
dec
incl
cmp
divl
xorl
fstpl
jg
pop
xor
adc
sbb
inc
jno
notl
mov
mov
ds
loop
ret
push
push
add
mov
les
sbb
jo
adcl
pop
je
enter
dec
xchg
seto
inc
mov
lods
orl
stos
jp
testl
jae
stos
mov
cs
out
cmp
mov
clc
sarl
outsb
cld
loop
pop
and
add
pop
test
add
mov
jne
dec
cmpl
sbb
push
mov
repz
aad
fcompl
xchg
mov
xor
int
mov
sub
out
adc
sbb
or
dec
mov
and
mov
movsl
mov
fcmovbe
pop
data16
cmpsb
xor
push
adc
mov
div
in
push
xchg
ret
loop
jne
inc
sub
add
and
stos
dec
addb
out
popa
int3
xchg
dec
and
nop
sbb
inc
nop
add
xchg
hlt
movl
insl
insb
clc
rorl
aaa
pop
sub
leave
xlat
test
aas
and
aam
pop
mov
test
loope
aam
fs
xchg
jp
jae
jno
and
inc
mov
push
mov
xchg
add
cmp
lods
ficoml
dec
int3
or
xor
dec
jp
imulb
je
push
jns
inc
xchg
add
inc
int
notb
or
cmp
cmc
or
jbe
inc
inc
lea
es
scas
orb
loop
mov
dec
sub
test
adc
cmpl
sub
sub
popl
jns
popf
add
lock
and
in
jbe
notb
out
add
out
mov
sub
dec
iret
cmp
cs
ret
mov
shrl
sbb
dec
add
imul
and
out
cli
push
xchg
pop
xorl
cmp
shrl
outsl
cmp
pop
shll
cwtl
fdiv
jecxz
fsubrs
mov
popa
mov
loopne
mov
or
pop
add
add
mov
pop
lret
dec
cmp
out
push
or
in
std
sqrtps
out
clc
adc
fnstsw
scas
insl
lret
mov
mov
ljmp
mov
loope
pop
cmc
sub
scas
mov
stos
and
adc
mov
mov
or
ja
sub
js
lds
inc
push
movsb
or
adc
lock
xor
mov
shlb
rep
push
scas
add
pop
inc
jbe
fs
imul
and
jbe
insb
push
inc
sarb
in
adc
repz
call
jbe
mov
sbb
xorl
movsb
and
jne
xchg
loopne
mov
lods
ja
cltd
lret
adc
outsl
dec
xchg
and
xor
sbbl
bound
insb
mov
push
xchg
xchg
cwtl
cmp
adc
out
cmp
loop
sub
dec
movsl
int
stos
into
js
pop
sbb
cmp
inc
loop
rolb
dec
sub
mov
outsb
push
mov
or
mov
or
fadd
movsl
leave
jp
mov
mov
sbb
enter
ja
aas
inc
outsl
xchg
movsl
xchg
mov
push
std
arpl
push
xor
jg
add
out
push
ficompl
and
sub
divb
mov
iret
mov
push
pop
aad
test
mov
not
leave
mov
inc
xor
repz
mov
scas
cld
push
adc
adc
leave
or
push
mov
pop
and
out
fbld
clc
std
jge
jbe
inc
mov
mov
add
ss
push
pop
aad
inc
hlt
fdivr
and
ja
lock
adc
cmp
sbb
lock
or
ljmp
in
gs
fmuls
sub
mov
cli
xor
inc
add
cmc
or
xor
mov
add
stc
fimull
add
jmp
cmp
sbb
inc
popa
in
loop
in
push
pop
jae
clc
mov
lcall
push
ret
pop
mov
mov
test
cmp
mov
xor
out
or
cli
mov
push
inc
push
add
mov
lret
or
shl
mov
adc
aad
pop
out
test
adc
pop
mov
pusha
ja
je
or
dec
imul
xchg
out
cwtl
inc
mov
fs
add
or
adc
lods
jecxz
push
and
in
cmpsb
js
inc
ret
and
sahf
push
inc
nop
pop
andl
mov
imul
dec
sbb
jl
add
fldenv
lret
and
mov
xchg
ljmp
rclb
inc
data16
aam
fsubl
cltd
stos
nop
push
call
stos
arpl
cmp
push
xchg
lcall
jg
scas
and
cmp
inc
inc
repnz
jle
cmpsw
pop
pop
push
sbb
cmp
jecxz
movsl
cmp
jl
xor
movsb
inc
sbb
imull
les
jnp
push
dec
adc
rclb
mov
cmc
ss
in
or
dec
mov
cmc
adc
movsl
mov
rcl
push
sbb
and
mov
xchg
add
push
xchg
inc
es
xchg
negl
mov
inc
xor
cmp
or
sbb
dec
fwait
push
rcrb
inc
lret
and
jno
lods
xor
xor
push
and
adc
addr16
stos
inc
pushf
popf
in
push
in
or
nop
sti
mov
adc
mov
scas
cmc
fcmovb
mov
mov
push
adc
mov
test
das
clc
loopne
mov
divl
nop
xchg
and
inc
inc
dec
dec
sbb
bswap
mov
xor
pop
mov
sub
lahf
bnd
lds
jl
cmpsb
rorb
jne
ds
add
sub
test
stc
cmp
dec
jb
push
sti
mov
ret
mov
mov
mov
mov
inc
movsl
les
repnz
fmuls
mov
xor
xchg
fists
lea
orb
in
sub
xchg
aaa
rol
mov
cld
push
fwait
lea
jp
outsb
mov
neg
insb
inc
stos
push
std
mov
ds
inc
aaa
test
jp
rclb
or
repz
xchg
leave
sbb
push
jb
cli
push
scas
mov
cltd
mov
mov
jmp
add
push
or
fiadds
sbb
arpl
push
es
fxch
sbb
sub
nop
pop
pop
iret
popf
iret
xlat
ss
cmp
outsl
add
jle
mov
mov
add
cld
pop
sub
jno
js
or
xchg
int
ds
add
jb
call
push
mov
inc
sbbb
mov
jo
lahf
sbb
ss
imull
cs
cmp
jle
add
add
andl
sbb
jbe
test
sub
insb
aad
cs
ss
pop
shl
sub
cli
sub
push
jmp
lahf
dec
mov
push
mov
push
add
sub
sarl
xchg
dec
lcall
and
or
das
popa
out
enter
mulb
roll
loopne
mov
sbb
pop
cli
pop
inc
cld
jge
cmp
fdivrl
cmp
nop
aas
cmp
xchg
mov
rcrl
sub
mov
in
push
pop
sbb
and
inc
adcl
inc
xor
dec
jns
rorl
aam
sub
jnp
pop
scas
mov
sti
pushf
xchg
aaa
cmp
out
sbb
inc
xchg
adc
mov
mov
out
xchg
mov
movsl
xor
dec
or
imul
xor
inc
or
pop
jg
nop
insl
dec
adc
aad
lods
ds
push
pusha
inc
sub
ss
xchg
jnp
push
lahf
cmp
adc
inc
in
test
and
imul
ljmp
pop
or
stc
or
mov
outsb
mov
repz
fwait
stos
dec
shl
adc
pop
sarl
mov
mov
or
jle
pop
ficompl
mov
dec
lahf
inc
or
sub
fnstcw
pop
add
call
xchg
movsb
sti
mov
jbe
aad
mov
iret
idiv
sti
lods
inc
iret
sub
xor
lret
push
dec
adc
sbb
fs
fadd
mov
sub
ljmp
sub
cli
out
inc
or
add
lcall
or
out
sub
mov
adc
add
xor
inc
std
movsl
xchg
cmp
ret
add
sbb
enter
movl
mov
mov
shl
popf
ret
cmp
and
rorb
jno
dec
add
inc
sbb
jg
sbb
out
mov
add
xchg
out
dec
dec
and
jno
dec
les
sbb
xchg
and
popa
loope
dec
aas
mov
cmpsb
push
daa
sbb
gs
pop
aad
iret
fadd
inc
pop
loopne
movsb
mov
dec
add
adc
adc
jl
inc
jne
add
out
int3
or
out
push
sbb
fdivrs
aam
dec
rolb
adc
inc
mov
mov
adc
sbb
scas
lock
daa
pop
adc
jae
loopne
ja
mov
add
movsl
pop
xchg
sahf
mov
stc
sbb
fbld
lcall
dec
xor
rcrl
pop
cmp
jne
ret
mov
pop
adc
cmp
xor
inc
add
jo
sub
pop
loop
dec
fdivl
bound
or
push
jae
cs
rol
inc
cld
xchg
les
xchg
xchg
inc
or
out
in
or
cmpsb
push
jns
hlt
sub
pop
out
jl
cmp
aam
stc
sbb
pop
xor
xchg
andl
cmpsb
pop
divl
fnstcw
adc
out
xor
test
xchg
pop
cmp
sub
cmp
add
movsb
mov
aam
addr16
add
testb
in
xor
into
mov
popa
inc
xor
or
orl
sbb
cld
imul
stc
cli
cs
hlt
mov
xchg
pop
push
aad
cmp
mov
jae
mov
adc
loopne
mov
pop
daa
xor
pop
pop
xor
repz
inc
test
sub
push
stos
pop
mov
loopne
push
xchg
movsb
mov
loop
pop
xor
icebp
cltd
inc
sbb
sub
outsb
movsl
xchg
xlat
jp
js
addl
shr
out
push
xchg
cmpsl
or
xor
in
dec
jae
adc
movsl
push
pop
push
jnp
xor
xor
in
and
pop
jge
mov
cmc
cli
cld
lret
cli
push
add
pushf
dec
or
fistl
imul
fwait
testl
cmpb
lret
fstpl
fidivs
push
jle
xchg
ret
dec
js
adc
out
dec
in
mov
pop
xchg
jmp
pop
shld
or
xchg
pop
idivl
cmp
aas
je
xor
stos
xor
test
fisttpl
mov
out
or
addr16
aas
cwtl
mov
rcrl
cmp
cmpb
fsubs
popa
repnz
notb
or
lods
push
xchg
cmp
sub
shl
xor
adc
lea
out
gs
sbb
inc
fstl
lahf
cmp
and
lcall
jl
pushf
jne
mov
pop
jns
loopne
or
jle
sbb
out
cmp
cmp
and
mov
scas
pop
mov
jg
xor
xchg
divb
and
inc
in
aas
in
or
in
call
lea
mov
mov
test
int3
pop
loope
stc
inc
mov
add
push
cmpb
lret
stos
sbb
test
push
or
or
test
aas
fwait
dec
daa
shrl
pop
sbb
gs
add
fstpt
mov
inc
subl
sbb
mov
fimuls
scas
add
std
test
dec
jbe
repz
or
sub
mul
mov
sub
jle
xchg
mov
cmp
and
add
jnp
call
inc
dec
dec
out
add
xlat
lods
popa
mov
and
orb
mov
repnz
xor
mov
jp,pt
rolb
xor
mov
mov
in
cmp
test
xchg
mov
xorl
idivb
xor
in
es
into
scas
lods
mov
and
sub
mov
push
lea
cwtl
dec
cmp
roll
xor
shl
lea
sbb
jle
fsub
aas
cld
cmp
push
push
mov
scas
fidivrs
jnp
inc
ja
sub
push
cmp
out
cmp
mulb
lahf
push
cmpsb
and
push
mov
pop
pop
push
xlat
dec
pop
add
cmpsb
test
mov
xchg
push
adc
sub
push
push
xchg
xchg
movsl
mov
enter
or
mov
or
sbb
loopne
jae
push
sbb
mov
mov
cltd
and
movsb
out
mov
pop
xor
icebp
jge
adc
lods
jmp
aaa
jb
push
test
lock
shl
call
fcmovne
or
mov
outsl
add
fwait
es
push
aas
sbb
fsts
inc
pop
movl
pop
adcl
mov
add
add
addr16
xor
dec
mov
mov
notl
mov
sub
xor
mov
jl
lret
fildll
sbb
das
imul
xchg
cwtl
inc
cli
cmp
mov
add
rcl
cmc
hlt
call
push
pop
mov
xlat
push
incl
sahf
daa
addr16
jns
jl
loopne
mov
in
sub
enter
jo
jge
cmp
dec
repz
mov
push
push
clc
mov
lcall
notb
bound
jmp
stos
push
adc
lret
mov
inc
push
call
lock
mov
dec
in
jb
mov
pop
pusha
in
jno
ret
ds
mov
sbb
movsl
jecxz
mov
cmp
adc
shll
cmpsb
and
xlat
and
lock
jmp
pop
pop
clc
pusha
nop
or
adc
std
test
adc
cltd
in
sbb
outsl
add
pop
push
cld
pushf
fisubs
pusha
xor
loop
test
cwtl
add
arpl
mov
sub
sbb
sahf
lea
pop
xor
clc
mov
test
cli
and
and
dec
pop
mov
sahf
or
xchg
outsl
mov
fidivs
and
nop
and
fbld
add
sub
mov
jl
push
xchg
repz
and
mov
icebp
or
mov
loop
mov
xchg
inc
cmp
pusha
cmpsl
dec
fs
xchg
push
test
adc
je
sbb
jg
ficoms
fisttpl
shl
gs
fwait
addb
popf
in
push
mov
rorb
ret
jo
repnz
imul
stc
inc
test
insb
sub
movsb
fiadds
mov
inc
cmp
mov
fidivs
sub
jge
jno
test
pop
out
popf
fcomps
mov
dec
pop
ficompl
adc
in
scas
nop
ja
mov
jbe
test
push
pop
jae
or
sbb
dec
bound
or
pop
out
into
std
or
mov
add
outsb
sbb
inc
popa
mov
inc
jnp
pusha
stos
mov
push
dec
testb
cld
mov
add
sbb
js
inc
mov
enter
push
mov
fwait
push
ds
cmp
push
add
mov
mov
rclb
test
imul
jge
xchg
jne
or
mov
adc
cmpl
xchg
into
inc
pop
xor
pop
push
mov
xchg
adc
test
fucomp
dec
jmp
aas
arpl
cli
mov
out
pushf
int
cmp
mov
ja
xorb
lret
sub
out
mov
sbb
pop
mov
fs
dec
adc
adc
addr16
mov
sbb
dec
inc
mov
out
test
dec
inc
fisttps
loopne
pop
roll
push
iret
popa
or
out
mov
aad
std
xor
mov
jg
jnp
lods
pushl
xchg
sbb
pop
stos
or
loope
cmc
enter
push
icebp
scas
outsb
push
mov
test
int3
sti
sbb
pusha
aaa
lds
outsb
inc
mov
fmull
fnstenv
sbb
test
stos
pop
xor
lcall
mov
jno
int
pop
mov
fsubrs
shlb
pop
sub
in
or
int
test
aas
dec
fdivs
xor
scas
js
sub
pusha
xor
xchg
int3
sub
lods
adc
lret
xchg
std
js
jp
leave
mov
sti
inc
push
in
das
aas
xchg
loope
lcall
adc
xchg
mov
push
rcrb
cs
loop
insb
test
mov
cwtl
mov
fildll
jp
stos
clc
xchg
insl
lods
sbb
sbb
dec
xlat
mov
sarb
ds
jecxz
shrl
insb
mov
rcr
pop
xor
and
jb
mov
sub
push
gs
ja
lcall
xor
pop
data16
arpl
in
sub
mov
push
insb
sub
inc
and
movsl
int
aam
add
sarb
dec
mov
imul
ss
push
addl
mov
test
test
xchg
imul
popf
push
push
mov
inc
xor
shlb
add
daa
jo
jle
xor
test
mov
loop
sbb
dec
xor
jmp
lret
mov
ret
inc
pushf
and
rorb
int
pop
mov
cmpsb
jmp
cmp
sbb
cmp
sahf
fadds
xchg
scas
push
data16
stc
cmp
pop
arpl
inc
imul
jnp
rcl
pop
aaa
mov
mov
int
gs
repnz
into
xchg
ficoms
cld
jno
aas
or
add
mov
shlb
aas
pop
jns
mov
add
out
mov
repnz
push
sub
or
aad
in
inc
shll
lods
pop
mov
xor
shll
pop
iret
pop
ret
xor
in
repnz
pusha
lahf
dec
filds
cld
mov
scas
sti
lret
or
in
push
ljmp
je
mov
aas
dec
and
movsl
fnstenv
add
adc
pushf
inc
jecxz
mov
mov
es
imul
ret
mov
fisubs
mov
cwtl
push
push
jmp
mov
aaa
pop
mov
iret
mov
insb
sub
scas
stc
mov
daa
xchg
lods
addr16
mov
and
cld
and
jae
lock
mov
and
or
es
icebp
inc
ficoml
cld
xchg
push
and
ds
fs
add
ss
and
movsl
mov
push
out
xor
mov
rcrb
mov
add
pop
pop
cmp
adc
movb
daa
mov
popf
dec
test
jge
ja
jmp
inc
push
xchg
inc
sarl
adc
jne
idivl
mov
dec
daa
roll
leave
pop
add
inc
mov
je
cwtl
lahf
outsb
ljmp
imul
rcrl
js
lds
or
push
lcall
repnz
sub
xor
loop
nop
pop
mov
sub
addr16
jno
ret
sarb
into
in
fxch
movsl
in
sbb
sub
out
fcom
and
add
adc
fnstsw
push
psllq
cmc
icebp
negl
jnp
aad
adc
sbb
inc
add
loopne
ja
lock
jp
and
xorl
or
daa
adc
out
idiv
mov
insl
pop
int3
js
lcall
inc
notl
icebp
jnp
xlat
pop
div
mov
adc
fucomp
add
xor
test
iret
imul
outsb
andb
aad
and
mov
push
sbb
or
hlt
mov
jl
adc
push
push
xchg
pop
cmp
mov
fsubr
in
popa
fidivrs
sub
test
fmuls
xor
cmc
and
cmp
fcomps
push
cmp
imul
clc
ds
push
stos
outsb
and
call
push
cltd
cmc
roll
callw
insl
xor
mov
retw
push
xchg
sub
es
loope
shll
cwtl
lahf
mov
xor
pushf
test
sbb
out
mov
repz
xor
xchg
push
pop
adc
fldenv
std
ljmp
nop
push
jecxz
loope
push
cmp
aam
stos
mov
bound
in
lret
ljmp
aaa
out
sti
js
pusha
pop
dec
add
cmpsl
push
cmp
dec
sti
cltd
test
imul
add
xor
lcall
fnstsw
cmc
push
outsl
inc
sbb
jb
iret
jge
lds
xchg
dec
imul
mov
cld
repnz
push
jne
dec
cmpsl
sub
iret
jno
pop
pop
pushf
sti
pop
cmpsb
popf
cmp
fcomps
inc
popf
pusha
or
push
dec
inc
insl
scas
push
sub
aad
leave
cmp
sub
lea
fistps
insl
imul
lret
inc
arpl
leave
or
outsb
add
cltd
inc
mov
push
push
loopne
arpl
adc
push
inc
add
mov
xchg
inc
or
cld
popa
mov
adc
jle
out
cmp
cmpb
std
imul
in
aaa
fidivs
mov
push
ret
outsl
jl
dec
xlat
loop
mov
pop
cmp
mov
mov
fadd
and
ja
cli
into
push
jge
scas
out
adc
dec
xchg
aam
sub
cmpsl
mov
ss
xor
sahf
mov
mov
in
sub
into
out
and
add
movsb
loopne
lods
push
inc
sahf
cmp
xchg
in
pushf
push
adc
daa
push
xchg
scas
lea
add
addr16
push
xchg
and
les
mov
sarb
cs
mov
add
jne
testb
subl
movsl
push
cmpsb
repz
fldcw
dec
push
insb
push
mov
icebp
lods
dec
cwtl
mov
sti
lds
mov
lods
fidivrl
mov
sbb
cmp
mov
xorl
movsl
xlat
inc
aaa
push
loope
and
in
inc
cmp
negl
lcall
push
xchg
push
dec
push
shll
subb
pop
popa
and
outsb
loopne
sbb
jle
stos
pop
clc
jb
mov
sahf
push
in
xchg
sahf
add
out
push
hlt
cmpsb
bound
jmp
mov
push
int3
fimuls
ds
jp
push
cmp
js
cltd
xor
mov
sub
or
repz
addl
in
jno
and
mov
orb
gs
cli
mov
orl
xchg
dec
rcrl
ret
gs
jns
mov
popa
or
jae
xchg
aaa
cli
in
rolb
out
push
call
movlps
cmpsl
xorb
pop
push
push
gs
scas
in
rolb
cltd
cmc
imul
dec
mov
inc
test
jo
fldenv
or
in
mov
jno
and
dec
add
pop
lret
jg
fistpl
cmp
dec
inc
dec
icebp
mov
fstpt
je
popf
lods
pop
add
jbe
inc
sbb
call
jmp
and
in
mov
lret
cmpsb
dec
add
int
lds
inc
cld
lcall
add
dec
insb
ljmp
push
add
add
adcb
shl
popa
mov
push
pop
ret
mov
push
cmp
scas
add
pop
sub
jle
fldenv
push
pop
test
test
push
test
adc
imul
hlt
pop
adc
jne
out
lods
cmp
loop
mov
pushf
xor
aam
mov
xor
fbstp
xor
dec
add
cmpsb
sbb
pop
repnz
fisubrl
bound
stc
inc
fdivp
int
rcrb
out
adc
dec
xor
mov
pop
jne
aam
push
or
mov
ja
cmc
cld
aaa
adc
add
es
test
dec
mov
or
xor
mov
add
push
lods
sub
hlt
jae
bound
fbstp
xlat
push
aam
test
addr16
ljmp
mov
fsubrl
mov
mov
ja
cli
clc
and
es
cmp
xchg
xchg
xchg
jnp
jnp
xor
sbb
pop
loopne
xor
mov
mov
jb
xor
arpl
push
into
push
sti
fldl
std
dec
insl
daa
sub
adc
into
inc
aad
pop
jns
jp
repnz
addr16
inc
aad
push
sbb
pop
fimuls
jecxz
les
mov
repz
push
xchg
lret
jecxz
and
in
xchg
inc
xor
push
jl
loope
mov
push
int
inc
mov
push
add
in
sub
push
mov
lahf
sbb
rorb
lods
push
push
mov
scas
test
jle
add
mov
mov
jne
sub
cli
shlb
fmul
imul
lahf
shl
and
aam
mov
and
pop
inc
dec
fdivp
jb
fbld
stos
xor
jmp
aaa
pop
stc
xor
call
loop
fstps
ss
enter
dec
cmpsl
pop
lea
mov
pop
dec
dec
pop
pop
loope
call
push
loope
xchg
push
push
scas
xchg
and
mov
loop
shlb
sbb
repnz
mov
mov
jae
adc
inc
dec
int
pop
pop
sbb
scas
ret
lds
sub
adc
sbb
call
sub
icebp
fdivrp
into
push
xchg
shrb
sub
stos
push
fistl
dec
xor
pop
aad
outsl
cmp
and
orl
out
sub
sbb
lds
cwtl
cld
jmp
js
dec
jp
shrl
sub
cmp
sub
pop
sahf
insl
nop
cmp
test
xchg
mov
ficoml
mov
test
sahf
lds
ficompl
sbb
repnz
stos
ja
add
ljmp
sarb
push
dec
add
aaa
jecxz
lds
leave
imul
sbb
mov
leave
push
or
gs
mov
lea
and
jnp
neg
lret
test
daa
push
std
or
cmc
pop
mov
push
or
iret
mov
test
jbe
jnp
retw
push
jb
movsb
shll
push
dec
out
push
pop
ret
mov
stos
stos
dec
cwtl
stos
mov
fidivs
inc
scas
mov
lock
add
outsl
mov
inc
xor
and
imul
mov
mov
jl
pusha
cmpsb
leave
aam
or
fidivs
stc
pop
mov
jns
sahf
fisttpll
cld
inc
stos
push
mov
clc
ja
imul
push
stos
cmp
mov
push
int3
mov
push
jmp
sbb
cmp
iret
xor
sub
or
bound
addr16
push
out
jo
das
lahf
push
jne
pop
xchg
ss
sub
sbb
leave
pop
repz
fstp
mov
cwtl
jno
fistl
inc
mov
roll
jne
pushf
jecxz
sub
insb
inc
pop
cmp
lea
popf
aaa
int3
imul
inc
and
outsl
push
leave
mov
push
out
adc
xchg
outsl
sub
mov
cmpsl
mov
fldcw
repz
or
cwtl
cmpsl
into
jns
out
xlat
add
cmpsb
cltd
ds
js
inc
fildll
mov
pop
lret
inc
fs
mov
test
jns
repz
test
xlat
xor
in
out
push
cmp
lea
scas
and
pop
cmp
insl
adc
imull
fcoml
push
xchg
stc
cmp
jno
test
rolb
mov
scas
inc
imul
aad
imulb
in
aad
ljmp
fists
and
sub
inc
xor
xchg
scas
test
sbb
test
pusha
mov
jp
sub
inc
mov
stos
in
pop
test
xchg
ds
sti
push
fsub
add
popa
inc
lret
enter
push
jae
jge
sbb
sub
js
pop
mov
xor
mov
ret
imul
lret
addr16
pop
mov
test
dec
into
push
in
push
and
mov
push
pop
sarl
ss
fsub
push
cmp
sbb
pop
pop
jge
cmc
aas
arpl
mov
repz
adc
push
ljmp
in
adc
ret
arpl
scas
out
rorb
jnp
or
fldl
js
push
push
mov
xlat
mov
ljmp
testb
int
jmp
pop
jae
or
testl
push
jmp
mov
cmp
dec
cmp
ret
sub
push
cld
js
cwtl
or
mov
inc
jge
mov
mov
xor
mov
xchg
mov
or
inc
test
scas
pop
push
cmp
clc
push
pop
imul
lret
inc
loop
fisttpl
push
add
shrb
jae
lock
clc
rcrb
inc
lret
mov
lret
push
add
cmpsl
das
fimull
aad
mov
dec
jmp
in
aad
sbb
xor
cmpsb
and
push
adc
xchg
mov
inc
xor
xchg
cli
or
dec
mov
add
push
xchg
fsub
in
into
push
outsb
mov
push
ss
jb
jp
or
packuswb
mov
andb
or
xor
icebp
popa
mov
jg
jmp
insl
mov
push
fistl
adc
ljmp
xorb
aas
pop
mov
push
or
adc
out
mov
dec
mov
adc
mov
fs
xchg
adc
push
sti
incl
xor
into
sub
sub
push
ljmp
hlt
dec
adc
pop
jnp
rorl
mov
pop
pop
jmp
addr16
imul
repnz
in
mov
jp
gs
jno
leave
dec
cltd
popa
imul
cs
test
push
mov
inc
test
xchg
cltd
push
xchg
or
push
jns
aas
jle
xor
and
xor
sarl
mov
ret
loope
in
sbb
push
outsl
mov
loopne
lock
idivl
push
xchg
jl
xor
lds
mov
rolb
cmpsb
out
jge
loope
push
jno
fs
and
dec
enter
push
push
pop
lods
pop
inc
rcrl
aam
push
xchg
inc
test
xchg
into
mov
mov
jbe
mov
lret
andl
rclb
xorl
mov
les
call
lods
sbb
xchg
mov
inc
ficompl
popa
loopne
iret
jecxz,pt
inc
out
mov
xor
mov
stc
test
pop
and
jp
cli
cmpsb
repz
je
inc
sbb
sbb
xchg
add
xchg
add
aad
jb
xchg
add
frstor
xor
shr
xchg
mov
mov
inc
push
cld
fdivs
or
pop
sub
into
pop
sbb
push
test
add
cwtl
or
sar
aaa
jecxz
sbb
pop
pushf
data16
inc
inc
xor
pop
sub
out
sbb
push
jno
add
and
push
lods
out
dec
imul
es
std
jg
xlat
bnd
push
sub
popf
aas
cli
fmull
std
into
push
js
stos
aaa
cmp
or
sbb
pop
rorb
xor
xchg
inc
dec
fldln2
and
push
aaa
jmp
sti
xor
mov
jmp
inc
jge
das
mov
pop
and
lods
mov
xchg
adc
jmp
in
jmp
scas
lcall
ret
xlat
aam
inc
add
jge
imul
or
xchg
jno
xchg
lea
jmp
loop
sub
mov
or
xchg
lahf
push
lret
in
xchg
inc
rcrl
sbb
sbb
mov
imul
add
add
push
scas
cmp
aam
add
push
sbb
out
or
mov
add
je
or
out
fmull
cmp
jnp
into
xor
pop
or
mov
cmpsl
xchg
mull
outsb
movsl
push
sbb
aas
or
mov
jle
sub
mov
cli
scas
mov
imul
sbb
push
ljmp
cli
push
xor
fsubs
pop
mov
jmp
cltd
out
mov
aaa
mov
popf
xchg
inc
sahf
jge
adc
loope
mov
imulb
xor
adc
loope
mov
sub
xor
add
repnz
jp
push
daa
loope
xchg
popl
lcall
cld
xlat
adc
shlb
dec
inc
mov
insb
mov
xchg
jne
jbe
setp
xchg
add
xchg
add
leave
fs
test
cmp
add
gs
aas
adc
xchg
rorb
cmp
pop
adc
inc
roll
xor
pushf
jae
mov
mov
sbb
out
scas
sti
dec
jbe
mov
shrl
repz
jb
mov
fwait
cmpsl
jle
insl
insb
mull
rol
or
outsl
out
ljmp
jne
cmp
in
les
cltd
dec
pop
adc
clc
repz
pop
dec
insb
xchg
shll
mov
jmp
jae
jns
pop
andl
js
add
fsub
arpl
inc
andl
js
add
or
xchg
jo
test
sahf
imul
sub
cld
cmp
inc
fwait
add
in
push
in
fmul
lahf
sbb
jmp
push
xlat
or
pop
stos
mov
or
mov
scas
js
out
mov
aas
xchg
push
icebp
ret
jmp
mov
sub
out
mov
popa
setns
push
and
adc
dec
pop
mov
pushf
out
subb
jmp
test
iret
mov
sub
test
or
aad
pop
divl
jg
jns
loope
call
xor
mov
cmp
jp
mov
sbb
sti
jl
fidivrl
je
inc
stos
loope
add
mov
xchg
add
sbb
mov
clc
out
push
xor
add
cltd
pop
ret
into
iret
xor
insl
mov
pop
les
mov
out
pop
fstps
or
dec
pop
mov
fwait
adc
pushf
fstpl
mov
mov
fidivs
ja
aam
sbb
sahf
adc
mov
sub
clc
cli
ja
mov
mov
imul
mov
dec
outsl
inc
imul
sbb
add
out
or
mov
cs
push
or
or
addb
dec
lret
cld
cltd
or
loopne
pop
mov
and
push
fsubrl
outsb
inc
dec
xchg
push
icebp
pushf
sbb
pop
lock
cmp
lock
fimull
idivb
push
push
in
repz
pop
popf
call
leave
fiaddl
add
iret
xchg
sti
cmpsb
and
pop
into
es
jno
stos
mov
loopne
repnz
mov
adc
xchg
sub
pop
fisubrs
jmp
or
and
imul
loope
jp
fstpl
inc
inc
mov
mov
outsl
insl
lcall
repnz
xor
fbstp
mov
push
push
movsb
jbe
pop
rolb
sub
mov
popa
sti
addr16
push
icebp
out
push
xchg
leave
mov
scas
dec
stc
mov
cltd
cmp
shll
adc
mov
pusha
outsl
pushf
dec
mov
push
lcall
aad
cmc
add
push
dec
inc
sbb
in
outsl
out
cmp
jp
inc
aaa
jns
fdiv
add
shr
cmp
push
cmp
into
mov
movsb
push
push
adc
sbbb
popf
adc
xchg
mov
push
sbb
int
bound
nop
dec
sbb
or
push
xchg
cmpsb
xchg
mov
ret
sub
cwtl
bound
add
psrad
es
fisttpl
test
jecxz
aaa
pusha
js
jge
lcall
fwait
mov
adc
sbb
xchg
cmpsb
jecxz
dec
lcall
pop
aaa
lcall
cmp
xlat
add
push
imulb
test
jbe
mov
add
pop
push
nop
aas
test
icebp
popf
sti
loopne
movsl
jl
hlt
lret
pop
mov
stc
ret
std
cwtl
out
jmp
push
into
push
pusha
push
div
mov
sub
int
cltd
arpl
jo
adc
insl
jnp
xchg
mov
xchg
fsts
outsb
jg
addb
inc
cmp
pop
jg
enter
add
les
outsb
jle
ret
sub
iret
xchg
xchg
outsb
mov
mov
lods
adc
insb
xchg
xlat
into
pop
idivl
aaa
ja
dec
pop
andl
jne
iret
lahf
fcomi
jl
xchg
clc
rclb
in
in
iret
hlt
xchg
push
leave
cmp
cmp
test
jno
mov
addl
test
sub
cmp
jmp
stos
mov
pop
int
and
xlat
mov
sub
jp
cmp
subb
xor
imul
mov
jg
leave
inc
and
rclb
sub
mov
lcall
adc
add
or
push
cmpsb
pushf
mov
test
fwait
lods
insl
stos
sbb
and
scas
jp
lcall
out
and
push
icebp
incl
sarb
je
jp
jmp
addl
test
mov
loope
pop
popa
mov
xor
inc
int
pop
imul
mov
hlt
fsts
movsl
dec
mov
xor
je
add
outsb
jl
dec
xchg
xchg
add
out
div
dec
mov
pop
cmc
inc
xchg
sbb
inc
add
add
pop
mov
lds
xchg
sbb
std
mov
mov
dec
push
sbb
xor
sub
push
mov
int
adc
add
idiv
inc
cmp
sbb
adc
lods
mov
or
lea
xchg
xchg
in
andb
pop
add
leave
xor
dec
pushl
mov
loopne
or
popa
in
into
cmp
scas
insl
push
lods
outsb
into
sub
pop
scas
ja
ljmp
mov
add
ror
stos
das
aaa
lret
sti
fildll
gs
sub
xor
and
icebp
jg
adc
insl
inc
sub
std
leave
sbb
and
cmp
das
cmp
jge
out
stos
aas
cld
fildll
dec
pop
mov
ss
roll
movsl
xchg
sub
pop
cmp
or
xchg
sbb
cmpsb
pop
push
popa
cmc
ret
test
fwait
mov
decb
fdivs
rcll
pop
lret
ret
sbb
sar
inc
xchg
mov
inc
aaa
es
xorb
out
mov
xchg
adc
gs
in
js
mov
loopne
lods
iret
js
or
cmc
jno
lret
cltd
mov
sbb
enter
inc
adc
loope
int3
inc
jl
mov
push
mov
inc
insl
stos
or
shll
fs
insl
enter
jg
cmc
ds
cwtl
enter
and
add
mov
movsb
in
jecxz
pop
out
sbb
lret
push
xchg
cmpsb
or
and
sarb
xlat
adc
jne
adc
sbb
xchg
dec
push
mov
mov
loop
lods
mov
in
xor
ja
shl
xor
jnp
pusha
jl
out
inc
push
add
mov
out
sbb
sub
and
pop
js
fidivrl
cmpsb
cmpsb
repz
ss
hlt
lcall
push
cmc
jl
and
pop
std
push
cmp
pop
pop
aaa
sbb
loop
mov
push
insl
stos
sub
and
xchg
inc
adc
subb
mov
xor
mov
in
xchg
jmp
inc
mov
push
daa
jns
and
pop
mov
add
jp
and
das
lahf
daa
mov
jg
je
push
shrb
mov
inc
jp
mov
aas
cmp
or
lret
xchg
mov
popa
pop
into
insb
movsb
mov
mov
aas
xor
je
sub
mov
ds
nop/reserved
sahf
in
mov
loope
sub
lods
lea
sbb
push
xchg
jb
ret
cmpsl
and
push
test
xor
pop
jle
push
clc
mov
sub
loop
popf
mov
psubw
sub
outsl
xor
sub
call
add
adc
add
cmp
mov
push
pop
add
adc
xor
sarb
rolb
pop
inc
mov
add
adc
or
sub
mov
and
sub
xor
dec
push
je
jge
stos
inc
sub
shll
dec
out
int
dec
cwtl
scas
es
ja
adc
aas
xchg
ds
sub
sub
pop
out
or
cmpsl
ror
movsb
mov
cltd
scas
lret
fdivrl
aad
cli
addr16
jae
dec
pop
addr16
movsl
jmp
outsl
scas
sub
cmp
stos
rcrl
cvttps2pi
dec
jae
ja
ss
mov
mov
and
jae
push
push
add
stc
shrb
iret
sbb
stos
push
or
sti
pushf
adc
inc
xchg
aaa
ds
cmpsl
mov
dec
push
add
push
jnp
imul
outsl
mov
xchg
sbb
scas
sti
and
imul
push
es
xchg
xor
pusha
enter
dec
jb
jno
repz
nop
jno
mov
mov
enter
add
or
sbb
mov
rclb
push
mov
imul
adc
mov
mov
and
jecxz
jle
push
mov
repnz
jne
xorb
fdivrl
cmp
adc
sbb
out
sbb
testl
push
adc
add
pop
sbb
flds
push
shlb
xchg
push
inc
scas
jae
imul
inc
jnp
sub
mov
add
dec
xor
pusha
cmp
jnp
cmp
dec
and
jmp
mov
test
mov
pushf
lahf
js
ja
pushf
fdivl
push
adc
cli
fs
ja
int
sub
pop
and
lret
mov
test
inc
lock
or
ret
mov
pop
leave
jo
jmp
ljmp
jb
roll
out
pop
jns
jno
lods
std
push
mov
hlt
fdivrp
mov
adc
push
in
push
push
mov
fldl
cmc
nop
stos
rcl
cli
xchg
push
pop
popa
cmp
mov
sub
or
pop
sbb
sub
push
cmp
arpl
std
call
jle
sbb
pop
iret
jbe
and
inc
dec
das
nop
aad
fisubl
repz
push
mov
das
ds
inc
leave
popf
inc
popf
cmp
or
jbe
mov
pop
arpl
add
and
in
jae
subb
jp
add
mov
add
shll
lret
push
push
mov
mov
test
jae
js
arpl
push
fidivrs
push
inc
aad
out
inc
incl
sbb
fidivrs
or
mov
and
movsb
add
and
dec
mov
mov
lock
inc
mov
out
sbb
or
das
mov
mov
dec
mov
push
cli
push
inc
push
scas
subl
adc
lret
pop
pop
or
bnd
pop
bndstx
popl
jge
jecxz
ret
cmp
cli
dec
cwtl
dec
into
sub
pop
inc
jmp
inc
popw
test
push
jge
push
mov
gs
pop
cmp
mov
cmp
mov
jns
jns
add
outsl
dec
sahf
jg
lods
pop
cmc
pop
in
mov
fisttpll
dec
shlb
loope
data16
je
cmp
les
cmpsl
push
push
inc
mov
leave
adc
add
jnp
iret
mov
dec
mov
xchg
xchg
sahf
jmp
fdivrl
es
ret
lret
fucomi
incb
out
out
push
pop
std
icebp
or
or
scas
push
dec
int3
js
hlt
add
daa
push
test
xchg
outsb
popa
lret
bound
add
inc
xchg
fcoms
dec
out
dec
mov
mov
sbb
pop
mov
or
mov
adc
int3
fwait
test
int3
fnstsw
addr16
ljmp
sbb
xchg
aam
push
push
nop
xor
xlat
inc
scas
int
jb
jl
sbb
daa
mov
or
adc
pop
sbb
cmpsb
loope
push
cwtl
cltd
sub
and
icebp
shll
aas
je,pn
mov
mov
pop
hlt
xchg
sub
call
or
loopne
lock
outsb
mov
adc
dec
xorl
mov
jae
pop
inc
aas
pop
cs
lret
push
inc
movsb
test
mov
pushf
sub
push
js
sbb
gs
in
fdivrl
jne
imul
icebp
and
pop
in
aaa
lret
jb
mov
adc
cwtl
and
inc
movsb
aam
aas
out
fildll
inc
gs
ljmp
movsl
adc
xor
loope
aas
xor
sub
lock
je
lret
sub
sbb
notl
loopne
outsb
lahf
test
dec
loope
pop
test
xor
pop
lcall
in
lods
daa
shll
movsb
iret
fsubrs
jno
dec
jnp
movsb
push
jno
pop
sbb
dec
out
fsubrs
stc
shr
push
sbb
jle
sbb
jno
sub
jle
ja
mov
out
pop
or
repz
sbb
test
mov
jle
or
jle
push
pop
mov
mov
adc
pop
sub
out
not
mov
ss
daa
push
push
push
or
popa
fsts
mov
and
push
adc
rcrl
rolb
ret
jne
les
mov
mov
xor
mov
xchg
popf
and
test
test
nop
mov
pusha
inc
stos
jo
cmpsl
dec
cmc
mov
std
lods
imul
cmp
mov
adc
scas
packssdw
xchg
popf
mov
mov
adc
test
testl
and
adc
jbe
pop
repnz
push
xor
loop
mov
pop
movsl
mov
jg
test
fsubs
add
lock
ret
testl
mov
sbb
fwait
mov
add
jg
fs
popa
mov
jmp
mov
adc
adc
or
add
add
add
imul
fwait
movb
hlt
mov
mov
sbb
cmp
pop
mov
int
adc
pop
adc
pushf
pop
stc
stos
mov
mov
mov
and
jae
ss
push
xor
clc
xchg
cmpb
stos
iret
sbb
mov
mov
mov
adc
pop
xorb
push
adcl
mov
es
and
dec
sub
jb
mov
cmp
and
call
scas
mov
popf
mov
shll
jns
lea
adc
cmp
dec
repnz
pop
sub
outsb
xchg
hlt
call
outsb
out
or
loop
ja
ja
push
jns
xor
leave
bound
sub
jns
mov
sahf
pop
hlt
call
adc
lds
aam
test
mov
or
push
and
xor
cmpsl
mov
addl
mov
adc
aad
stos
lret
sub
inc
ds
loop
mov
sbb
repz
mov
mov
ret
sub
add
lcall
fistps
push
dec
lods
rclb
cltd
fwait
cwtl
test
cld
cmp
nop
xchg
rorb
push
or
adc
ss
cltd
test
ljmp
pop
lock
popa
sti
aad
lods
add
jae
nop
out
loopne
inc
mov
xchg
jae
pop
sub
push
mov
push
mov
test
out
rolb
or
adc
rolb
cmc
mov
cltd
in
xlat
or
jmp
cmp
lods
loope
movsb
adc
cld
add
mov
daa
bound
scas
push
orl
inc
les
jae
inc
shl
stos
in
aam
xor
and
jbe
sahf
mov
xchg
mov
or
cmpsb
jge
lds
filds
mov
loopne
add
xchg
ret
and
push
std
jbe
sbb
lods
in
iret
pusha
shlb
pop
movsb
pop
jnp
mov
insl
out
rcll
mov
add
ficompl
fs
add
cmp
test
lock
out
or
sbb
push
sub
mov
loop
ds
pusha
cmp
jo
push
mov
push
pop
sahf
push
xor
inc
dec
cmp
cli
xor
cwtl
pop
ljmp
mov
lock
arpl
xor
popl
jecxz
mov
cs
jne
les
out
inc
pop
or
jp
jg
stos
sub
in
lods
sbb
dec
daa
pusha
push
clc
insb
jne
repnz
lcall
mov
insl
les
sub
sbb
add
sbb
in
lahf
sub
push
imul
dec
ret
ret
mov
mov
in
push
scas
xchg
lea
xlat
addr16
and
lock
in
pop
pop
movsb
js
mov
jge
test
fisubl
sub
mov
repz
or
xchg
jo
add
pop
sbb
fstpl
int
mov
mov
dec
test
push
int
pop
jecxz
mov
jae
push
fcomps
or
std
xor
paddb
sbb
lret
inc
sbb
mov
push
repnz
roll
push
mov
jnp
lahf
inc
divl
aad
test
push
fnstsw
pop
or
mov
pop
xor
inc
out
or
test
sbb
out
sbb
andl
stos
push
dec
jmp
mov
es
and
xchg
repz
insb
push
add
xchg
jns
lret
cmc
mov
aas
or
hlt
in
xor
movsb
aad
adc
push
push
and
insl
bound
jle
dec
in
add
jnp
faddp
push
clc
push
jo
cmp
adc
and
mov
sbb
in
mov
mov
out
and
sahf
iret
xor
test
out
and
into
stos
daa
xchg
add
shlb
jp
jmp
push
out
xchg
loopne
mov
sub
je
loope
les
add
jns
daa
test
out
pop
shl
aam
imul
mov
pop
pop
pop
cld
inc
mov
iret
divb
test
mov
subl
push
dec
shrb
mov
hlt
cli
and
xchg
mov
stc
inc
push
sbb
cmpsb
subb
add
jne
loope
cmp
and
scas
mov
mov
insl
inc
stc
push
xchg
mov
push
cmp
out
test
jns
out
jo
push
mov
xchg
rcrb
dec
rorl
push
pop
mov
aad
mov
arpl
inc
jl
and
xchg
pop
std
xlat
cmp
pop
jl
mov
mov
mov
gs
push
mov
pop
inc
cmpsl
cwtl
sbb
popf
jo
fwait
mov
inc
les
pop
xchg
or
xor
repz
xor
jg
ret
das
dec
push
out
and
stc
movsl
jl
lods
into
jecxz
gs
shrb
imul
repnz
mov
shr
into
mov
js
xchg
push
mov
inc
sti
sbb
inc
clc
jmp
mov
inc
scas
fcomps
sub
pop
std
sahf
loop
dec
jg
sbb
rcll
sbb
incb
pop
loop
push
cmpsb
ja
pop
fadd
stos
stos
mov
push
movsl
mov
sti
add
xor
lret
pop
xchg
scas
add
std
adc
inc
imul
cmp
jae
fxch
daa
lcall
and
in
pop
sbbb
ss
xor
or
test
and
mov
data16
or
lock
xor
xor
in
dec
clc
xor
cs
add
aaa
int3
into
inc
xor
adc
and
push
movsl
xchg
out
insl
ss
icebp
push
scas
inc
int
adc
mov
je
sub
push
add
push
iret
push
inc
sti
int3
pop
loop
insl
jecxz
pop
movsb
cmp
out
icebp
mov
xchg
jns
mov
into
pop
adc
scas
test
ret
xchg
daa
cmpsl
mov
push
mov
jecxz
lods
pop
bound
mov
push
std
rolb
push
jmp
mov
ss
jp
loopne
sub
mov
pop
jnp
jecxz
shl
out
push
lock
dec
leave
aaa
mov
jb
mov
and
mov
inc
jge
sub
cmpsb
push
xchg
and
leave
and
call
mov
rclb
mov
out
xlat
je
out
sbbb
sub
int
push
or
imul
xchg
inc
sbb
and
rolb
rcl
and
addr16
xlat
xchg
insl
mov
aas
xor
jl,pt
xor
add
sti
or
icebp
in
aad
push
aas
mov
cli
mov
cmc
lret
in
xorb
push
cmp
xlat
fdivr
mov
das
out
add
xchg
adc
xchg
jp
jb
xor
sbb
sbb
adc
idiv
jge
call
popa
sahf
imul
les
add
mov
int3
stos
and
popf
sub
mov
mov
fwait
pop
sub
int
stc
lods
orl
lea
mov
dec
push
mov
sbb
cmpsl
std
push
or
lret
pxor
mov
inc
pop
test
or
mov
push
test
push
lret
or
jge
mov
push
cmp
adc
mov
int3
repnz
repz
sub
cwtl
or
pop
xchg
aaa
push
cmpsl
add
jne
iret
push
ret
movsb
test
imul
sub
pop
pop
insb
cmp
pop
add
fidivs
add
pop
shll
sarl
push
dec
stos
push
jnp
out
out
gs
or
loopne
test
xchg
dec
inc
test
call
push
cmc
mov
int
jne
pop
jb
pop
xor
mov
cmc
xor
fsubl
test
xchg
lret
cld
dec
xchg
xchg
pop
mov
shrl
and
cltd
pusha
int
je
iret
and
stos
and
insb
add
hlt
arpl
popf
popa
mov
inc
add
xor
lcall
sbb
cmc
loope
xchg
jbe
aas
cmp
xchg
rclb
ret
mov
bound
pop
cmp
jecxz
scas
pop
dec
mov
cmpsb
lods
inc
mull
sbb
lods
mov
xchg
into
or
sbb
adc
in
nop
test
jecxz
jl
xchg
jecxz
imulb
push
stc
pop
pop
cmp
pop
roll
push
loope
pushf
outsb
dec
sub
mov
lea
inc
cwtl
ret
ds
loop
add
outsl
jge
push
jnp
push
xor
cli
enter
mov
jp
int3
flds
dec
leave
movsb
cmc
xor
or
out
movsb
addr16
cmp
je
testb
xchg
sti
pusha
fsubrs
xor
fptan
imul
xchg
jmp
jle
and
xchg
push
cwtl
test
push
rcrb
fdivrl
test
adc
lret
mov
add
add
pop
jnp
mov
mov
popf
cmp
loop
fimuls
popf
iret
aaa
push
rorb
and
movsl
lret
push
lret
movsl
rclb
daa
push
xchg
loop
hlt
mov
and
int3
xor
inc
dec
add
aad
pop
jp
out
mov
lods
das
imul
xchg
mov
pop
inc
je
stos
lret
jl
addr16
mov
test
adc
or
test
pop
add
in
xchg
mov
pop
mov
jbe
sub
scas
pushf
xor
mov
sub
add
mov
sub
inc
nop
sub
cmp
dec
ds
jg
rolb
mov
rep
pop
loop
fidivs
mov
mov
aam
negl
psubq
jecxz
jae
add
cs
fldl
mov
xchg
dec
pop
lods
pop
pop
mov
stos
test
xchg
icebp
lahf
mov
pop
xor
mov
mov
stos
ljmp
or
scas
test
addb
push
lea
cmp
fsubrl
and
lret
jp
mov
cli
lret
mov
mov
icebp
shll
inc
aad
mov
popf
xchg
daa
stc
jno
sbb
xor
sbb
dec
xchg
fs
into
dec
repnz
mov
cmp
rcrl
std
loope
loop
add
pop
lcall
je
ret
je
insb
mov
shrb
add
cmp
int3
add
ja
cmp
xchg
pop
xchg
inc
pushf
pop
xor
lea
inc
mov
dec
sub
sub
add
pusha
aad
mov
jg
outsb
push
jecxz
pop
mov
pop
xchg
insb
call
shrl
sub
jbe
repz
jp
mov
loope
pop
mov
jne
push
seta
jge
sub
popf
repnz
out
cwtl
or
inc
ja
jns
mov
in
sub
out
cltd
xor
movsb
cmc
and
xor
addl
push
sub
bound
mov
mov
cltd
push
cmp
cltd
and
push
xor
popf
test
out
fs
and
jae
test
ljmp
lret
lock
mov
dec
jmp
push
push
jo
ret
jno
stos
sub
mov
add
into
xchg
pop
xchg
jae
cmpsl
xchg
dec
stos
sbb
lock
fwait
je
mov
cmpsb
cmp
xchg
pop
out
fdivl
cmp
filds
cmp
push
sub
and
mov
imul
inc
pop
and
aaa
or
xor
mov
jle
arpl
call
mov
inc
test
dec
jae
lret
cmp
mov
mov
mov
adc
andl
sub
repnz
adc
aaa
repz
add
addr16
push
and
sti
xor
adc
push
imul
inc
xor
inc
test
test
dec
aaa
addr16
xchg
icebp
fimuls
jg
mov
mov
int3
fldcw
test
in
stos
ret
jmp
mov
add
lods
jb
dec
orl
mov
aad
nop
arpl
mov
test
orl
imul
pop
hlt
subb
pop
into
mov
roll
aam
dec
lcall
sbb
jo
xor
cmp
movsb
or
or
dec
sub
xchg
mov
fisubrl
arpl
pop
adc
pusha
loopne
adc
pop
pop
and
faddl
ret
xchg
outsl
xor
mov
in
add
pop
mov
decl
sub
push
jbe
ret
pop
ds
daa
fisubrs
push
ja
sub
hlt
or
push
in
xchg
mov
pushf
sub
bound
cmp
scas
js
mov
movsb
add
repz
mov
stc
jae
ds
jb
arpl
dec
dec
arpl
loope
mov
inc
sub
push
jl
dec
mov
sbb
add
inc
jge
fcompp
jno
and
orb
mov
inc
or
jg
xor
mov
jl
lock
push
push
xchg
fs
xor
xchg
inc
fs
push
lahf
loop
xchg
movsb
test
push
and
and
insb
mov
inc
lahf
xor
lahf
or
test
and
jae
sub
jg
push
jnp
cmpsl
jns
stos
cmp
and
and
push
push
cmc
push
or
mov
das
mov
adc
xchg
lods
jne
push
pop
push
xchg
pop
pop
pop
test
adcb
fisttpll
dec
sub
fildl
rcl
add
xor
test
inc
js
mov
enter
or
pop
sub
imul
jo
and
push
mov
mov
push
jnp
fnstsw
fwait
pop
pop
push
inc
push
rorb
or
lock
xor
bound
mov
or
jle
shr
out
mov
jne
pusha
jge
iret
stos
test
jl
aaa
or
xchg
push
lods
das
xchg
test
fidivs
shlb
inc
and
pop
fadd
mov
jge
mov
insl
in
outsb
lcall
mov
hlt
divb
mov
fdivrs
dec
clc
adc
and
cmp
cltd
fdivl
scas
and
loopne
fstpl
mov
cmc
test
add
icebp
ds
mov
xor
les
scas
mov
ljmp
sti
mov
arpl
je
add
xchg
movl
xchg
sbb
stos
mov
adc
push
push
lods
mov
mov
or
add
mov
addr16
pop
pop
jnp
lcall
push
add
mov
in
fnstsw
cmpsl
cmp
pop
mov
or
call
fcomi
dec
push
push
test
addr16
test
jecxz
clc
test
sbb
sbb
cmpsl
lock
not
rolb
jne
pop
add
fbld
nop
rcll
cld
sarl
repz
pop
lock
insl
inc
push
fists
inc
out
xchg
ja
cli
mov
mov
push
cmc
jb
push
sub
sub
clc
sbb
movsl
in
cmpsb
rcrl
bnd
gs
add
das
movd
shl
adc
adc
mov
mov
mov
rcrb
lret
and
cli
mov
pop
loop
arpl
adc
or
xchg
push
or
xchg
mov
sahf
push
dec
scas
and
mov
mov
xchg
inc
rcrl
mov
cmp
gs
ret
lahf
lret
mov
jno
test
lds
xor
ret
mov
jl
in
cmp
hlt
sahf
pusha
dec
repnz
out
jne
inc
sar
hlt
rol
inc
mov
pop
sub
push
shlb
xor
test
mov
test
push
push
test
push
pop
faddl
in
or
insb
sbb
test
pop
sub
lahf
cmp
sub
sahf
imul
xor
jbe
pop
jns,pn
inc
div
fs
add
jecxz
fstpt
push
inc
ret
pusha
rcrl
xor
mov
cmpsb
push
xchg
cmc
jmp
pushf
shll
mov
xchg
mov
cltd
add
call
pop
push
sbb
inc
es
movsb
jo
sub
sarl
inc
mov
fcomps
jnp
in
jae
jg
je
fisubrl
int
movsl
mov
add
push
imul
cmc
jge
mov
filds
sbb
incb
shll
ljmp
fdivl
roll
xchg
cmp
iret
outsl
push
inc
lods
mov
xor
inc
popa
pop
and
dec
pop
dec
xchg
lea
cmp
xor
adc
stc
out
add
loop
test
scas
sbb
inc
add
jns
insl
cmp
pop
cmp
lock
aad
xchg
fs
rolw
pop
dec
jge
inc
movsl
lcall
mov
mov
add
in
test
std
mov
fbld
mov
shl
or
iret
repz
adc
dec
outsb
adc
jg
lods
fucomp
xor
push
add
jge
push
sarb
loopne
std
and
mov
push
push
fwait
push
scas
notb
lcall
jle
ja
xchg
lret
mov
lret
sbb
xchg
pushf
icebp
mov
jbe
xchg
sbbl
jo
leave
pop
jmp
jb
mov
loope
mov
cvtdq2ps
fwait
in
add
test
cmp
fadd
xchg
ss
add
sbb
sub
xor
add
inc
enter
push
mov
leave
int3
cmp
and
rolb
pop
hlt
je
call
pop
ret
cli
mov
cmp
subl
inc
jb
mov
pushf
add
shrb
fisubl
pop
mov
daa
sbb
cmp
into
fnstcw
inc
into
xchg
and
and
xchg
cld
outsb
jl
ret
or
jno
out
mov
mov
shll
mov
inc
push
aam
or
stos
jle
jnp
jecxz
dec
dec
int
sahf
pop
jo
mov
shr
rclb
lcall
dec
ds
testl
iret
sbb
lret
push
adc
cld
fwait
js
mov
test
negb
jne
dec
pusha
ss
test
in
add
nop
loopne
mov
dec
repz
orb
and
aaa
lods
mov
mov
or
jle
cld
stos
mov
lret
sub
adc
popa
jmp
or
mov
jg
aas
jo
fs
mov
xor
xor
push
fisubrs
ret
int
sbb
jg
cmc
cwtl
sbb
mov
sahf
xchg
lcall
sbb
add
les
xor
insb
ret
fwait
xor
movsb
orb
shlb
mov
push
mov
xchg
pop
call
xor
fcmovbe
test
pushf
es
push
add
add
mov
xchg
jno
inc
pop
push
push
pop
mov
in
mov
pop
or
daa
iret
into
mov
test
in
fcoml
rclb
ljmp
sbb
mov
lcall
mov
sti
sti
stos
adc
into
cli
cwtl
mov
cs
mov
in
je
mov
xor
adcl
push
mov
push
jp
xor
push
lds
mov
jnp
xchg
inc
repz
scas
xchg
leave
dec
lahf
scas
push
adc
stos
mov
loopne,pn
lret
dec
mov
xchg
xchg
push
or
loope
pushf
lcall
daa
lcall
sarl
ror
sbb
aad
and
push
mov
push
jmp
je
xchg
xchg
mov
sbb
pop
out
fstl
jo
sub
in
mov
and
dec
jbe
outsl
in
jg
mov
sbb
adc
cmp
xchg
adc
jbe
inc
daa
jl
fdivrl
sbb
or
insb
mov
std
sbb
sahf
and
loopne
cmp
sbb
jne
sbb
pop
cld
sbb
push
push
dec
or
incb
in
adc
xchg
sub
jne
loop
lds
jnp
mov
push
cmp
popa
jecxz
or
jnp
int3
xchg
jae,pt
fisubrs
dec
mov
mov
xor
push
adc
or
push
sbb
push
xchg
sub
ja
fs
out
nop
es
in
incb
xorl
dec
push
shlb
jg
xor
scas
ds
repz
xchg
lock
orl
xchg
es
adc
orb
mov
iret
fldenv
pushf
and
lds
push
pop
push
jnp
cmpb
xchg
jno
in
cmpsb
mov
lret
mov
repz
sub
or
fdivrl
push
nop
jno
cltd
lds
bound
or
dec
xor
xor
cli
mov
mov
inc
mov
xor
jle
jb
in
cmp
ficompl
mov
pop
jmp
in
repz
pop
push
add
cmp
mov
cmp
imul
leave
int3
cmp
dec
test
sbb
pop
dec
pusha
or
push
sub
fildll
call
push
xcrypt-ofb
cmpsl
sub
xchg
lods
ljmp
loopne
or
outsb
stos
cmp
cld
jbe
sahf
cli
in
pop
mov
push
adc
fcoml
jmp
mov
insb
pop
xchg
push
rcl
fwait
int
fmull
shl
lret
inc
and
xor
lcall
mov
fsubrl
outsl
sahf
push
daa
or
mov
outsb
adc
movsl
jecxz
test
jle
or
push
imul
cltd
in
popf
aaa
mov
inc
cmp
mov
mov
out
or
jo
lods
test
daa
adc
jmp
dec
aam
ds
mov
mov
mov
jl
lahf
xchg
xchg
mov
inc
sub
mov
inc
xchg
mov
rcl
imul
mov
in
dec
dec
addr16
adc
adc
cmp
xchg
fnsave
xchg
dec
jnp
movsl
jne
push
jo
push
pop
jae
scas
add
jp
jne
clc
outsb
jae
push
fcoms
dec
outsl
rcl
adc
cmp
sub
pop
add
push
jo
add
cli
xor
fildl
lret
dec
in
imul
xchg
leave
outsb
movsl
stos
inc
movsb
arpl
jb
mov
fwait
int3
adc
lock
adc
test
pop
mov
or
pop
lods
subb
pop
add
std
xorl
pop
dec
lret
xchg
mov
add
test
arpl
mov
test
rcl
stos
loopne
xchg
xchg
iret
xor
adc
outsb
jp
pop
jne
cmpl
jnp
cwtl
sarb
sbb
add
jg
lock
xor
xor
iret
dec
push
cmpsb
sahf
inc
aad
subl
outsl
add
mov
inc
shll
icebp
scas
cli
lock
pop
xchg
iret
and
pop
jnp
fs
dec
cmc
std
notb
xor
xor
adc
push
sbb
sub
jb
lret
bswap
mov
and
mov
mov
xor
ljmp
cmp
cmp
pop
mov
xchg
xor
jl
jbe
sahf
add
inc
pop
dec
flds
adc
jo
dec
insl
arpl
sub
jg
sub
test
mov
ret
fstps
dec
inc
fisubrl
repz
adcb
shll
in
dec
clc
xor
xchg
inc
cmp
lods
cmpsl
shl
push
sub
jge
lcall
xchg
jge
jp
aaa
lea
movsb
xor
xchg
and
pop
movsl
jge
pushw
sahf
fwait
adc
imul
int
and
xor
jl
jnp
test
stos
mov
sub
test
jg
cmp
xor
xchg
pop
lcall
add
fsubrs
cmp
add
or
in
repz
js
cltd
inc
rolb
andl
xchg
js
movsl
mov
and
fdivl
sbb
push
sbb
sbb
dec
rcrl
xchg
sbb
push
pop
cltd
test
loopne
pop
rcll
mov
or
mov
add
jp
jmp
sub
and
mov
mov
mov
mov
dec
dec
push
lea
jbe
mov
dec
cmpsb
or
aad
test
sarb
inc
arpl
jns
and
fwait
jecxz
lock
sbb
sub
push
fistps
leave
fstpl
xchg
cmp
arpl
lahf
xor
insl
adc
gs
sbb
sahf
lds
pusha
test
sbb
movsl
movsb
out
and
mov
sub
sahf
pop
inc
dec
lcall
jns
or
ss
push
sub
in
test
mov
add
cmp
xchg
dec
es
in
pop
mov
jnp
mov
js
pushf
pusha
mov
sbb
mov
jmp
adc
inc
sub
push
jo
dec
pop
mov
pop
inc
fidivl
inc
jg
xchg
jecxz
xlat
cmp
mov
mov
int3
push
mov
in
js
mov
outsl
sub
inc
pop
ds
xchg
pop
xchg
mov
in
popf
std
sbb
or
add
and
cmpsl
mov
and
call
inc
stc
xchg
or
negl
aam
cmp
stos
iret
add
std
fwait
out
and
push
xchg
cli
jnp
mov
cli
xor
fsubrl
push
and
xchg
call
in
push
mov
push
sbb
imul
jg
pop
push
rep
inc
mov
rorb
pop
lea
inc
mov
sub
dec
subl
int
or
fimuls
jno
xor
loope
xor
sub
push
cmpsl
dec
sbbb
mov
imul
sahf
stc
insb
xchg
sbb
mov
lock
jle
iret
dec
iret
jmp
imul
mov
insl
out
insb
lods
xchg
add
push
outsb
mov
fmulp
loope
ficoms
cmpl
js
jp
xor
cmpsb
jp
stos
push
and
or
and
mov
daa
in
movsb
mov
popf
push
loope
stos
test
popf
in
fsubs
lds
or
and
xchg
loope
gs
pop
inc
or
xor
add
mov
xor
jae
sar
repz
ljmp
cwtl
lds
je
add
scas
movsb
gs
xor
out
cmpsl
lret
mov
mov
sub
dec
jo
int3
pop
dec
hlt
out
or
sub
fs
jmp
adc
rcrl
adc
lret
addb
xchg
push
dec
xchg
cmc
ret
cmpsb
sarb
xor
sbb
es
addr16
sahf
mov
pop
push
mov
stc
outsl
jbe
xor
daa
inc
addr16
pop
pop
jns
jmp
leave
inc
cwtl
pushf
lods
lahf
insb
aad
mov
cmpsb
lret
jle
insb
xor
push
lods
dec
out
out
xchg
scas
subb
lahf
adc
in
or
push
mov
and
loopne
ljmp
add
aaa
mov
adc
mov
or
aad
jno
sbb
mov
mov
mov
popf
jl
jl
adc
cmovle
nop
and
push
mov
xor
mov
mov
lods
in
add
std
fstpt
movsb
mov
push
dec
push
xor
dec
inc
push
mov
cli
jge
out
lcall
mov
jl
pop
insl
xorb
mov
inc
and
call
jp
inc
movsb
scas
aad
lods
jecxz
insb
test
mov
push
xchg
stos
pop
xor
movsl
shrb
outsl
enter
lock
pop
xchg
sub
mov
or
push
out
pop
and
push
inc
xchg
inc
sti
roll
out
dec
scas
mov
fnstsw
push
roll
lds
cmp
in
mov
xor
jae
pop
jno
int3
fmull
mov
adc
int
and
jmp
sub
jnp
push
addr16
pop
pop
jle
jg
xchg
cmp
mov
scas
and
das
insl
lahf
sbb
mov
les
cli
dec
add
dec
push
lock
cmpsb
push
js
cmpsl
jmp
jge
insl
mov
scas
aad
push
cwtl
xchg
fwait
aas
fcomi
jbe
jb
lods
repz
mov
clc
cwtl
icebp
movsb
xor
and
dec
xchg
dec
jmp
push
jle
fdiv
mov
dec
xchg
mov
cmp
insl
into
cli
xchg
nop
xor
sub
aaa
xchg
leave
iret
mov
xor
cmp
jno
push
sahf
push
sub
jnp
das
inc
adc
xchg
movsl
inc
in
jnp
push
push
pop
dec
pop
filds
or
or
out
in
push
jp
and
aaa
cmpsb
enter
push
nop
sbb
xchg
sahf
mov
imul
lahf
std
into
jl
or
mov
inc
xor
loope
dec
sub
cmp
dec
sbb
ret
cmpsl
cli
daa
subb
pop
pusha
mov
daa
inc
insl
std
aam
mov
insl
cmp
xchg
pop
xchg
jae
push
xor
cs
ss
movsb
lea
cltd
or
mov
and
jb
jb
addr16
push
pop
loop
adc
jp
dec
push
xor
outsl
cwtl
cmpsb
pop
or
push
and
and
aam
cltd
mov
sahf
xor
lahf
jno
lds
mov
push
stos
push
dec
fwait
xchg
lret
aas
ja
pop
cld
jne
adc
outsb
jno
sub
gs
mov
stos
stos
jl
rclb
test
mov
shlb
pusha
xlat
cmp
cmc
sbb
test
bound
js
orb
dec
jae
mov
pop
pop
dec
adc
iret
pop
xchg
inc
cmc
xchg
inc
lods
pop
movsl
mov
sti
faddp
fwait
fidivs
pop
or
cmc
decb
fbstp
xor
xor
cmp
mov
cs
lock
add
adc
movsl
mov
and
mov
test
pop
lock
aam
mov
inc
mov
push
sbb
test
push
lret
rcrb
sti
lods
pop
mov
adc
dec
cs
pop
lret
mov
ljmp
aam
enter
orl
xchg
inc
xor
mov
mov
outsb
pop
loop
insb
pop
popa
mov
jne
bound
fwait
and
aam
push
leave
hlt
push
push
ret
add
jo
push
fistpl
fs
outsb
ds
fwait
or
jecxz
mov
movsl
mov
or
cmpl
adc
outsb
jae
out
aad
in
jge
add
sbb
gs
test
arpl
inc
jae
movl
test
sbb
in
dec
cmp
sub
xchg
leave
out
push
iret
mov
mov
mov
mov
and
into
dec
mov
lahf
or
jle
sub
mov
lds
repnz
mov
push
mov
fisubl
jne
cmpsl
xchg
shrl
popf
xchg
mov
stos
cmpsb
ljmp
and
jmp
mov
adc
fidivs
sbb
cmpsl
loopne
rol
data16
std
pop
ret
adc
pusha
iret
imul
pop
rorl
pusha
jg
imul
jge
inc
js
jge
dec
dec
insl
mov
pusha
sbb
cltd
mov
rcll
pushf
push
add
stos
cwtl
in
push
xchg
sub
pop
dec
aam
push
mov
iret
inc
cmc
das
or
add
les
lcall
and
lret
push
xor
and
mov
clc
push
adc
cwtl
test
adc
xchg
mov
loopne
push
scas
sti
jo
add
inc
dec
xor
jge
jle
push
xlat
sbb
sub
pop
inc
sbb
adcl
adc
fwait
jo
jno
sahf
in
cltd
dec
clc
mov
shll
lea
mov
andb
jmp
or
xchg
sbbb
sub
xchg
outsb
or
sub
inc
adc
push
xchg
lods
lods
jae
inc
mov
pop
lea
push
cmp
sarb
pop
movsb
int
call
test
lods
frstor
or
mov
ucomiss
test
lcall
imul
xor
push
aam
mov
pop
mov
adc
leave
adc
sahf
aad
out
sbb
std
inc
into
mov
and
jae
lcall
dec
jbe
call
pop
repz
xchg
outsl
pop
leave
aam
test
mov
xchg
daa
or
xor
dec
push
dec
fs
jnp
dec
xor
imul
aas
loopne
cltd
push
std
adc
xchg
cmp
cmp
pop
push
hlt
inc
and
js
rcll
cs
in
lods
ret
sbb
fwait
push
shr
ja
mov
adc
xor
and
in
sbb
imul
dec
lea
push
and
mov
out
stos
cmp
pop
xchg
ret
call
adc
dec
mov
outsl
lods
out
sbb
cmp
add
mov
cmpsl
aad
mov
cmc
inc
jne
in
xor
addr16
pusha
jnp
dec
repz
push
push
fdivs
scas
jnp
jnp
xchg
push
push
stos
jmp
in
in
add
adc
sti
test
push
aam
fs
daa
insl
fnsave
je
enter
loopne
iret
cld
push
jns
jbe
pop
bound
or
jle,pn
cmp
jnp
ja
sbb
or
sub
das
loopne
mov
sbb
into
sbb
xchg
dec
shll
jecxz
or
xchg
pop
xchg
addb
outsl
sbb
or
push
mov
fistpl
loopne
pop
fs
xor
bound
inc
std
ljmp
dec
shr
js
fdivrl
mov
fcomps
movsl
xchg
arpl
mov
rorb
das
enter
out
sti
mov
cmpsb
cmp
pop
nop
lea
cltd
repz
mov
lret
sub
enter
mov
mov
xchg
sahf
fdivs
cmp
scas
sub
rorl
push
sbb
aam
inc
xchg
ficoml
movsl
mov
or
ficoml
cld
icebp
shlb
sbb
xchg
nop
sti
ret
cs
dec
bound
xor
mov
cltd
xchg
push
dec
xchg
inc
mov
mov
lret
pop
inc
mov
ljmp
xchg
adc
pop
push
push
pushl
loop
push
add
dec
jmp
fbld
shlb
sub
js
fdivrs
push
jl
mov
mov
bound
add
mov
in
sbb
inc
dec
inc
fldt
cmp
mov
mov
cld
and
imul
jno
sub
or
adc
incl
mov
sub
cmc
cs
mov
stos
cmp
lret
dec
inc
popa
iret
and
xlat
xchg
xor
test
cmpsb
adc
clc
bnd
mov
push
push
loop
cmp
rdtsc
push
dec
sub
pop
adc
mov
imul
jecxz
add
bnd
pop
inc
sub
lcall
and
mov
xchg
xlat
push
add
mov
in
cmp
jge
add
push
sub
repnz
pop
xor
add
shrb
pop
pop
rcrl
mov
push
dec
sub
insl
lds
in
xchg
jp
sbb
jo
fs
gs
xor
pop
outsb
pushl
jge
cmp
mov
or
jge
addr16
and
rol
jo
fwait
cmpsl
dec
mov
sbb
nop
ja
sahf
xchg
es
adc
lret
mov
out
pop
stos
add
sub
std
test
xor
mov
repz
stos
shl
ret
xor
ficompl
and
pop
jb
in
jo
les
lods
mov
and
pop
rol
push
or
lcall
mov
and
nop
out
in
adc
jo
mov
aad
faddl
or
repz
adc
pop
ja
cmpsl
xchg
scas
push
mov
rep
popl
es
mov
cmp
pushf
in
sbb
mov
sbb
cmpsb
push
in
adc
pusha
pop
test
fstpl
push
js
add
outsb
imul
maxps
loop
inc
pop
clc
stos
add
and
in
lock
jp
pop
push
repz
xchg
jl
mov
cmp
nop
push
shlb
movsl
push
jecxz
call
shlb
notb
lock
mov
movsl
inc
or
pop
inc
mov
pop
and
cmpsb
push
push
push
mov
jecxz
pop
mov
inc
addr16
je
pop
popf
push
xchg
sbb
push
pop
adc
dec
push
inc
cmp
dec
shrl
mov
jo
push
rcrb
jae
fbstp
and
sub
in
clc
push
rorb
bound
jp
sub
xlat
and
nop
aad
aaa
jb
loop
xor
xchg
inc
iret
pop
and
test
lcall
fisubrs
dec
push
fs
fstpl
cmp
mov
mov
push
dec
rcll
push
fildl
aas
or
or
dec
xchg
test
or
cmp
adc
jmp
sub
dec
or
out
cmp
iret
cs
adc
cmp
push
xor
inc
inc
out
js
dec
ret
cmpb
xchg
mov
les
sub
jecxz
push
roll
pop
cld
iret
add
jmp
xchg
popa
cmp
into
sub
mov
repz
inc
test
sub
movsb
mov
out
mov
jbe
mov
pushf
push
pop
adcl
xlat
cmp
incb
fcmovnbe
lahf
pop
in
push
dec
cmc
push
pop
jo
into
clc
mov
jnp
pop
mov
leave
push
push
imul
mov
add
jl
xor
mov
lahf
xchg
dec
movsb
and
out
sub
or
insb
push
sti
lahf
inc
mov
cltd
cmc
movsl
leave
dec
ds
push
push
cmpb
or
mov
js
data16
cmc
notl
dec
sub
jmp
push
aaa
mov
fsubrl
xchg
push
das
and
rol
jl
sbb
sub
scas
repnz
cmp
out
pop
insl
lret
out
dec
cmp
and
sti
inc
push
cld
dec
mov
and
repnz
shll
sahf
out
mov
cmp
sarb
and
dec
inc
xor
mov
popa
inc
popa
outsb
scas
mov
leave
pop
hlt
mov
imul
imul
aaa
jns
dec
pushf
jle
cmpsl
dec
adc
nop
cmp
mov
mov
mov
push
fisttps
aam
xor
cmc
inc
cmp
jmp
dec
fs
add
jle
arpl
ret
adc
lods
dec
repz
sub
ds
clc
inc
scas
loope
hlt
repnz
mov
sub
mov
lods
ss
into
pop
mov
rorl
lds
pop
fsubrl
xor
mov
pop
popa
sub
xor
mov
xchg
repz
arpl
movmskps
leave
shll
negl
dec
insl
call
sbb
sbb
lahf
sub
add
inc
xchg
mov
ss
enter
rol
cmp
xor
movsl
lahf
xchg
cltd
sbb
inc
out
sub
stos
jp
scas
push
rclb
dec
in
dec
inc
sub
lret
push
xor
xor
stos
add
testl
jecxz
or
pop
xor
bound
mov
or
inc
sbb
xchg
fwait
cltd
sub
shlb
sub
push
xchg
mov
popf
xchg
ss
ja
pop
push
sub
fdivp
jno
add
pusha
mov
repnz
add
and
out
arpl
add
adc
cltd
out
arpl
pop
mov
arpl
gs
mov
jle
mov
loop
adcl
loopne
decb
mulb
jl
cwtl
and
and
hlt
mov
imul
lret
jmp
xor
mov
sub
sub
movsb
aad
mulb
xor
inc
test
subb
or
push
jp
loop
ljmp
fnstenv
leave
push
cli
or
jnp
jecxz
adc
js
sbb
push
cltd
push
int3
ror
adc
rolb
lret
fwait
lock
mov
inc
lods
ljmp
sbb
sar
inc
sbb
and
cwtl
xor
lds
pusha
lock
inc
scas
scas
rolb
sbb
cmc
inc
orb
cltd
loop
mov
inc
ja
or
daa
inc
pop
jg
mov
adc
lods
cli
add
rorb
inc
jno
lds
out
loopne
and
int
outsl
lea
repz
mov
imull
fwait
movsb
movsb
mov
add
mov
pop
add
cli
cld
sub
hlt
sti
pop
ret
jmpw
stos
shrl
mov
jns
cwtl
int
dec
cmp
jle
pop
cwtl
lret
bound
ljmp
ljmp
and
in
loopne
leave
xchg
clc
pusha
popf
int3
mov
loopne
cmp
aas
lret
popf
xchg
addr16
ljmp
push
adc
xlat
mov
lods
int3
xchg
jo
sbb
rcl
sti
out
sahf
sar
or
mov
push
call
subl
xchg
add
loopne
stos
jg
and
mov
sub
xchg
sti
sti
cmc
lds
mov
leave
mov
fwait
fs
cmp
mov
push
out
lods
test
mov
jl
call
into
outsb
addr16
stos
lock
or
xlat
roll
outsl
mov
add
pop
xorl
jge
les
divl
mov
dec
xor
jno
mov
cwtl
dec
stos
pushf
sub
in
mov
stc
clc
push
fwait
outsl
dec
int3
sub
push
push
daa
mov
mov
push
mov
push
lea
push
in
push
shlb
inc
cmpsb
lcall
enter
add
pop
xchg
cltd
fldt
cmp
mov
lods
inc
mov
in
nop
shr
imul
mov
xor
outsb
frstor
lret
or
mov
or
adc
outsb
in
mov
pop
aaa
pop
arpl
mov
xor
sbb
enter
in
jbe
movsb
pop
adc
loop
pop
lahf
js
fists
or
cmp
mov
or
enter
stc
mov
inc
mov
adcl
dec
pop
sbb
das
jle
push
xchg
int3
or
or
pop
push
stos
mov
push
sarb
stos
inc
dec
sub
dec
xor
and
xchg
fwait
sub
and
mov
out
add
int
dec
lret
fs
cmp
ficoml
stos
add
jg
out
push
push
ret
mov
nop
push
dec
cmp
test
inc
mov
and
pop
pop
cmpsb
jmp
or
mov
ret
pop
jp
das
inc
push
repnz
aas
jns
sbb
je
aad
inc
sbb
push
mov
out
sbb
aam
popf
jl
mov
push
pusha
bound
mul
sarb
shl
les
bound
jp
fdivrs
lock
xchg
arpl
xchg
dec
add
test
and
pop
in
mov
imul
outsl
ds
cltd
xchg
mulb
or
repnz
pop
xchg
inc
popf
leave
and
cmp
push
xor
xor
and
les
jmp
sbb
mov
movsb
in
and
insl
out
dec
sub
iret
subb
jecxz
inc
xor
mov
and
jnp
int3
out
dec
cmp
mov
push
orb
insb
loopne
out
xchg
dec
mov
mov
sub
es
pop
push
jg
push
ret
jg
lret
inc
push
jmp
xchg
out
fdivrp
pop
add
push
js
loope
add
jp
test
lahf
or
outsl
mov
pop
imul
jnp
rorb
xor
pop
test
inc
insl
jae
push
fadd
adc
pop
int3
pop
aas
xor
rorl
sarb
inc
shll
and
xchg
cmc
pop
dec
outsb
in
in
in
sub
insb
stos
popa
xchg
cmpsb
xchg
inc
stos
daa
lret
rcrb
push
test
sahf
pop
shr
andl
mov
loopne
leave
push
jb
inc
lahf
jge
xlat
and
out
jle
sub
rcl
movsb
xchg
adc
xor
dec
mov
daa
repnz
jb
cmovs
clc
jp
test
dec
movsl
or
out
mov
sarl
negb
adc
push
subl
insl
outsl
rcl
jnp
fidivrl
pop
bound
popa
js
addb
xor
notb
sbb
mov
pop
notb
cmp
pusha
mov
xchg
pop
loope
dec
mov
push
push
mov
xor
sub
push
popa
lea
test
fwait
and
insb
cmp
cvtdq2ps
or
mov
lods
cmpsl
adc
push
pop
int3
insl
loope
jbe
jns
xorb
jno
mov
xchg
or
xor
xchg
jge
xlat
sub
aas
std
jecxz
pop
stc
or
in
je
adc
push
mov
out
adc
mov
divl
or
and
scas
add
mov
pop
mov
fisttps
jnp
pop
mov
sbb
aam
shrb
cmp
test
sub
and
push
inc
stos
jnp
sub
mov
stos
add
sbb
add
add
adc
jp
movsl
xchg
mov
push
xor
cwtl
inc
cmc
jle
jne
adc
sbbl
scas
and
imul
scas
fidivl
inc
lahf
cwtl
pop
push
push
shll
inc
outsb
dec
dec
push
test
xchg
ds
pop
push
adc
mov
hlt
xchg
or
sub
sbb
test
mov
shrl
sub
push
dec
xlat
nop
jns
and
adc
lods
imulb
sbb
or
add
aaa
fs
mov
in
jmp
and
dec
cmpsl
xchg
cmp
fcoms
int3
xor
hlt
fwait
xor
jae
inc
mov
aam
ficompl
int
push
bound
adc
or
jb
sub
push
lcall
add
fistps
test
adc
pop
push
clc
rolb
mov
ljmp
fmuls
paddd
xchg
fdivrp
fwait
dec
in
aas
imul
adc
stos
adc
mov
ja
test
ret
pop
sub
gs
push
mov
jb
lea
icebp
mov
repz
mov
cs
imul
shrb
push
adc
cmpsb
add
push
push
inc
hlt
push
push
xchg
mov
mull
sub
ljmp
js
mov
into
lcall
add
addr16
xchg
addb
sbb
sbb
cltd
aaa
enter
and
adc
int
test
cmp
inc
mov
mov
ror
cmp
push
inc
out
pop
push
rolb
test
and
push
pop
icebp
repz
pop
ret
enter
fildll
movsl
ret
shll
push
jecxz
and
call
adc
adc
cltd
repz
xor
push
cmp
cwtl
lods
and
imul
roll
je
daa
or
cmp
mov
jl
aas
inc
ds
sub
pop
push
daa
fs
shlb
sar
xor
aad
clc
pop
jbe
adc
shll
inc
lock
sahf
rcl
mov
lahf
jmp
icebp
cmc
or
ret
scas
pusha
cmp
ds
xchg
xlat
jae
push
xchg
mov
cltd
lahf
fsubrs
lret
addl
aam
mov
adc
popl
mov
jb
stos
cmp
test
sar
pop
sub
popf
inc
mov
sahf
mov
push
adc
sti
fs
sbb
aaa
sub
mov
push
out
jno
mov
aaa
xor
and
addr16
jo
and
pop
jae
add
sub
push
or
jp
mov
jge
out
and
lahf
xor
fbstp
xor
push
bound
mov
in
and
outsb
loope
daa
mov
ss
pop
dec
into
ret
and
cmp
and
add
pop
mov
pop
enter
nop
loopne
inc
scas
test
add
ds
adc
cmp
fcomip
stos
or
xlat
sbb
mov
mov
out
pop
push
sub
sub
cli
negb
dec
jl
or
loop
rcrl
xchg
in
enter
sbb
mov
addl
push
push
or
mov
out
stos
adc
inc
loope
mov
xchg
rcr
push
cmp
js
test
and
push
movsl
push
push
fdivl
loop
ret
dec
cmpsl
jb
rcl
push
xchg
push
insb
hlt
sbb
bswap
ret
icebp
jecxz
int
or
lea
dec
popf
mov
mov
pop
pop
popf
loope
lods
daa
or
xchg
fs
fsubp
out
push
or
jecxz
lods
push
mov
xchg
inc
dec
mov
mov
jbe
cwtl
daa
or
or
insl
faddl
outsl
out
jle
push
push
std
cmp
dec
jb
sahf
mov
out
js
and
rolb
aam
sbb
and
daa
add
pushf
inc
jle
fimuls
clc
idiv
sub
cmp
ljmp
mov
test
sbb
in
popa
iret
fisttpll
xchg
and
aas
xor
mov
cmp
stc
sbb
cmpsl
fbstp
ja
push
push
movsl
lea
shlb
int
pop
fmuls
scas
rcll
xor
je
cmpsb
sub
and
jmp
pushf
scas
pop
dec
pop
je
jg
into
fs
mov
jae
mov
pop
fildll
stc
les
dec
jmp
shrl
test
out
in
push
sbb
adc
lock
mov
pop
pop
clc
iret
aas
inc
rorl
dec
dec
jb,pt
and
dec
jbe
fmuls
inc
fdivrp
aad
or
stos
push
push
sbb
push
cmp
adc
xchg
lahf
pop
popf
add
in
js
out
mov
das
sub
or
lcall
das
fisubrs
ret
jl
arpl
loope
loop
adcb
xchg
orl
in
lock
mov
sbb
push
lods
xchg
fs
xlat
mov
cmpsl
call
push
and
push
dec
fs
push
sub
test
jne
xor
aad
test
imul
test
pop
divb
vxorpd
aaa
push
push
pop
push
adc
outsb
xor
lods
xor
sbb
fistps
jo,pt
mov
je
add
cld
cli
enter
enter
sbb
es
push
or
jb
xchg
mov
int
sti
jne
pop
sar
out
cs
cmp
enter
movsl
mov
sahf
mov
jo
call
enter
outsb
add
filds
or
out
adc
mov
xlat
out
pop
pop
shl
aas
cmp
ftst
add
mov
es
add
or
fsubp
rorl
rcrl
mov
jnp
call
add
lahf
rorb
lahf
incb
jns
dec
dec
add
jne
or
pop
leave
xlat
lcall
pusha
int
cmc
int
out
pop
repz
xchg
aad
xlat
jle
push
icebp
jge
mov
jmp
cmc
jecxz
insl
fwait
xchg
jnp
mov
adc
add
fsts
cmpsb
mov
dec
popa
jb
xor
sub
out
popa
lcall
push
xorb
jmp
mov
inc
psubd
mov
ja
mov
in
adc
lahf
cld
sti
test
and
dec
add
es
add
jns
addr16
dec
lcall
sbb
jno
flds
pop
xchg
pop
roll
fldcw
loop
xor
and
andl
jns
outsb
sar
cs
in
fists
test
iret
mov
popf
xchg
loope
stc
lock
lret
pop
test
in
cmp
or
sti
shlb
lcall
ret
gs
add
jmp
decl
aam
or
sti
les
lods
mov
in
mov
and
and
pop
cmp
ds
outsl
jo
cmp
jns
pop
push
addr16
jmp
js
in
std
sarl
stc
in
stos
push
cwtl
dec
jl
nop
jg
std
outsl
cmp
in
pop
fstp
out
mov
cmp
push
mov
call
jo
inc
push
mov
fwait
mov
jle
scas
xor
adc
jae
mov
cld
shlb
lods
xchg
xchg
jecxz
and
inc
repnz
sahf
lret
pushf
push
pushf
rcrl
imul
sub
jmp
nop
inc
lods
bswap
ffreep
mov
xor
mov
mull
or
jmp
adc
rolb
mov
out
jnp
push
inc
inc
mov
in
sub
inc
xchg
push
ret
ret
stc
les
dec
insl
sarb
push
xor
aam
mov
and
fwait
fs
cmp
mov
add
int
ret
movsb
cbtw
scas
lock
loop
decl
inc
jb
shlb
jnp
sbb
dec
inc
jmp
div
mov
mov
jae
arpl
mov
mov
in
xor
xor
xor
jg
out
jecxz
xchg
dec
cli
mov
rcrb
jmp
or
adc
pushf
and
xchg
pop
and
xorb
xor
daa
dec
mov
mov
into
mov
aam
jne
cmp
repz
cmpsb
sub
cmc
out
aam
lea
push
shlb
jbe
mov
mov
lea
cmp
xchg
xchg
mov
jno
jb
out
inc
inc
jle
mov
es
lahf
fists
jns
mov
and
push
mov
fisttps
cmovge
add
xchg
mov
push
out
jbe
sub
stos
lock
pusha
mov
mov
mov
out
jae
js
int3
inc
or
mov
jnp
loopne
jmp
hlt
aam
jbe
sbb
push
push
stc
lods
lods
cli
and
cmp
ss
sub
fmull
jbe
rep
icebp
popa
bound
icebp
push
fidivrs
fst
pop
stos
fldenv
pop
jb
mov
pusha
push
xor
sbb
out
or
add
mov
mov
gs
xchg
mov
mov
jne
inc
jae
test
sbb
inc
fwait
cwtl
js
mov
push
xor
ljmp
ficompl
mov
and
xor
inc
sbb
int
loope
adc
aaa
xchg
push
jno
mov
sbb
testb
or
cmc
cmp
stc
jmp
adc
push
add
mov
xor
sbb
scas
cs
inc
xchg
lahf
aad
icebp
les
outsb
sbb
sahf
cmp
inc
dec
sub
out
adc
roll
and
shrb
faddl
jmp
lods
mov
aam
mov
scas
adc
inc
mov
test
out
pop
mov
jmp
mov
shlb
add
loopne
dec
inc
ds
jmp
jbe
inc
push
out
adc
dec
inc
push
repz
mov
repnz
fwait
jl
ss
lods
mov
shl
fcompl
mov
xor
cmp
addr16
aaa
mov
cs
mov
in
sbb
mulb
mov
mov
ss
int
push
sbb
pop
hlt
outsl
xor
js
inc
dec
xchg
in
loope
insb
es
stc
jge
call
mov
repz
lods
fdiv
sahf
xor
sbb
inc
call
jne
jl
out
pop
pop
inc
fisubrs
add
jg
out
out
or
push
fcmovu
add
fidivrl
repnz
jge
out
outsl
stos
dec
or
push
movsl
inc
mov
je
push
push
push
in
jp
and
insb
add
lret
cwtl
mull
dec
add
push
mov
push
ret
sub
mov
adc
lock
das
push
mov
lock
jne
stc
jg
add
and
fcoml
dec
xchg
push
xor
xchg
inc
daa
cld
mov
sbb
dec
mov
pop
mov
push
push
jb
dec
ja
pop
xchg
sub
adc
jecxz
scas
and
repz
sbb
inc
lahf
adc
pusha
ret
cs
jbe
jnp
mov
mov
pusha
cmc
stos
xchg
fcoml
scas
shrl
int
adc
cmp
pop
rorb
xchg
jb
loopne
insl
orl
fimuls
movsl
fdivr
mov
sub
mov
push
dec
adc
xlat
andl
sbb
pop
or
dec
jno
add
pushf
pop
cmp
push
dec
scas
or
popa
cmp
insl
xor
pop
ret
lahf
popa
jae
ja
push
es
test
inc
push
fidivl
add
push
out
mov
lods
pop
test
jle
sbb
cmp
pop
pop
popa
pop
fidivrl
icebp
xchg
lods
adc
addr16
push
sbb
call
mov
bnd
bound
testl
or
xchg
and
imul
mov
fstl
out
pop
imul
inc
outsl
pop
mov
push
pop
dec
test
test
mov
cs
out
incb
lcall
rcrl
jb
or
or
repz
les
push
sti
dec
mov
in
adc
call
fisttpl
cmc
clc
call
loop
in
push
hlt
mov
aam
or
mov
mov
jae
sbb
out
es
add
adc
sbb
in
ret
lahf
outsb
add
sub
cmp
fnstcw
sbb
ficoms
inc
sti
dec
jbe
xchg
das
mov
in
and
notl
imul
addr16
movsl
outsb
jo
mov
cmpsb
dec
dec
push
sbb
xchg
fstpt
pop
cmpsl
mov
adc
call
popf
repnz
jae
push
push
sbb
add
inc
in
iret
jmp
popa
and
jno
xchg
call
adc
adc
shr
mov
lahf
jmp
repnz
sbb
movsb
pop
push
jle
push
cli
out
loopne
lcall
or
outsl
adc
movsb
cmpsl
push
mov
sub
gs
mov
push
mov
cmp
test
movsb
mov
adc
addr16
jo
int3
leave
xchg
stc
loope
push
lret
add
call
fmull
pop
cltd
mov
mov
shll
xchg
sbb
loop
ret
icebp
adc
sahf
dec
stc
scas
out
mov
mov
sbb
subl
ljmp
pop
lds
cwtl
lods
inc
in
fdivrl
movsl
xor
and
cli
movsb
xlat
int3
test
jge
aad
adc
jb
jae
mov
outsl
popf
addr16
ds
jbe
pop
and
ret
lcall
hlt
jb
xor
es
mov
stos
shl
cmp
xor
sbb
pop
adc
cmp
jl
xor
jmp
adc
mov
cmpsb
dec
aam
xchg
out
adc
and
mov
dec
push
lret
data16
add
push
push
pushf
xchg
pusha
dec
aaa
mov
std
cmc
jae
insb
fs
pop
push
push
stos
das
pop
inc
test
jae
pop
iret
mov
stos
sbb
insl
pop
pop
out
das
push
sbb
fwait
xchg
repnz
aad
int
adc
mov
scas
ficoml
push
sbb
xor
data16
data16
stos
push
rolb
in
test
jmp
push
adc
in
jp
mov
sti
std
or
pop
xor
fcmovb
nop
push
jno
pop
sub
mov
out
mov
test
xchg
nop
movl
cld
das
iret
dec
movsb
scas
cli
mov
jns
sahf
outsb
or
fwait
stc
add
mulb
ds
sahf
push
cmp
lcall
dec
outsb
insb
mov
testl
roll
adc
addr16
xchg
stos
mov
movsb
xor
cmp
sbb
or
and
inc
loop
repz
movsl
or
dec
and
insl
test
and
push
out
mov
scas
fwait
test
inc
inc
dec
xchg
das
mov
or
pushf
imul
fcoms
lea
repnz
popa
sub
pop
test
xor
xor
aaa
mov
and
sbb
out
mov
mov
push
in
insb
test
sahf
pusha
ret
mov
jns
sub
jmp
mov
rcr
inc
incb
in
adc
cmp
push
push
orb
mov
sbb
xor
mov
stc
jbe
aaa
cmc
jno
popa
xchg
addl
inc
cmp
aaa
mov
or
bound
mov
jb
lods
outsb
test
dec
cmp
mov
das
ljmp
ljmp
dec
adc
xchg
mov
jl
out
jmp
xor
outsl
jl
mov
jne
jbe
mov
add
mov
add
or
std
mov
std
loop
shlb
xchg
cwtl
dec
outsl
pusha
repnz
or
and
mov
test
and
cmp
js
jmp
fists
orl
jo
xchg
pop
fdivs
adc
ja
push
sbb
daa
pop
and
test
mov
and
pop
and
sbb
imul
imul
mov
fidivrl
pop
push
sub
sbb
push
mov
cmp
push
stos
fdivrl
mov
pop
pop
push
ss
lcall
negl
cltd
push
xor
mov
scas
into
rcll
cmpsl
xchg
xor
lds
lret
aas
or
sbb
inc
mov
stos
cs
out
or
loopne
sti
addr16
dec
sub
or
sub
mov
dec
scas
pop
dec
mov
adc
lcall
inc
xchg
cs
and
xchg
outsl
xchg
int
leave
push
inc
xchg
stos
cs
shrb
fsubrs
inc
sbb
sahf
int3
out
call
std
xor
sbb
and
outsb
cmc
sbb
xorl
jne
in
orb
jae
jnp
jo,pt
es
dec
jb
adc
sbb
push
adc
push
jnp
lods
xchg
lds
js
je
lods
ds
xor
push
add
addr16
in
pusha
pop
rorl
mov
push
sbb
dec
popf
mov
sub
jae
push
stos
xchg
inc
dec
roll
or
jge
jge
and
mov
pushf
dec
sbb
adc
xchg
push
mov
mov
dec
test
andb
sti
sub
cmp
rolb
add
filds
lahf
js
std
sbb
aad
mov
aaa
inc
sti
arpl
in
jnp
inc
out
enter
test
and
mov
jns
scas
mov
jge,pn
clc
dec
dec
xchg
or
push
cmp
jnp
push
int3
mov
repnz
mov
dec
pop
das
pop
sarb
int
mov
mov
pop
dec
aad
xor
repnz
test
mov
or
std
iret
insl
out
pop
sbb
sbb
fisttpl
call
test
xchg
xchg
mov
push
insb
mov
dec
jae
fnsave
cmpsl
pushf
popf
imul
iret
pop
pop
lea
out
sub
jno
xchg
xchg
mov
push
push
adc
int
popf
jno
lods
sti
iret
rorb
jnp
scas
fwait
pop
jb
test
mov
xchg
or
loope,pn
lahf
push
lea
dec
push
bnd
xchg
icebp
inc
int3
andl
out
imul
ret
test
in
adc
cltd
mov
add
lahf
push
adc
jmp
cmp
sbb
adc
leave
mov
je
lds
mov
sub
mov
mov
ds
leave
adc
xor
leave
inc
into
adc
mov
stos
gs
loop
mov
mov
imul
enter
cs
and
mull
sahf
push
jp
push
pxor
ljmp
bound
jns
sti
push
cwtl
cmpsl
fisttpll
ja
pop
sub
or
add
sbbl
pop
mov
lock
fldt
xor
movsl
aas
inc
mov
in
sbb
ret
cld
and
sbb
fisubs
pop
dec
mov
rorb
jp
xor
aas
jbe
pushf
pop
sub
leave
aad
add
lods
dec
stc
fcoms
pop
add
xor
mov
mov
pop
es
and
jae
cwtl
in
js
out
or
pop
neg
sbb
jmp
xlat
movsl
call
mov
push
and
mov
jmp
cmp
jne
call
mov
pop
mov
pop
hlt
push
cltd
pusha
test
aas
mov
pusha
rolb
shr
xchg
xchg
out
pusha
cwtl
loopne
and
icebp
enter
add
int3
add
pop
dec
pop
repnz
inc
imul
imull
std
and
sub
xchg
inc
ficoms
jno
mov
aam
mov
and
jle
fstpl
push
scas
fnsave
daa
inc
dec
and
addr16
iret
test
leave
jg
out
or
cmpb
cmp
ljmp
sub
jnp
cmp
mov
or
cmpsl
push
sub
inc
jmp
f2xm1
loope
psubw
arpl
inc
and
mov
lea
jecxz
ficoms
cwtl
into
clc
mov
mov
repnz
cmp
mov
ret
clc
push
jecxz
mov
shrl
cmp
andl
int3
add
mov
adc
xchg
mov
mov
icebp
dec
fucomp
je
icebp
je
pop
pop
lret
mov
loop
push
sub
out
lods
and
and
push
jg
mov
sbb
xor
jbe
push
in
ja
popf
fstpl
in
mov
adc
fs
jge
inc
xchg
stos
shrb
xor
adc
pop
leave
test
pushf
pop
xor
jmp
fwait
lcall
enter
bsf
int
mov
aam
dec
pushf
cld
sub
fcmovnu
xchg
mov
call
lret
in
inc
ss
push
sbb
call
mov
jle
pop
lea
rcrl
mov
push
pop
nop
inc
hlt
repnz
and
pop
xchg
pop
jecxz
int3
push
jb
mov
sub
push
imull
xchg
repz
xchg
pushf
out
fistps
inc
sub
arpl
mov
fwait
xchg
rcrl
adc
push
fisttpll
loop
mull
xchg
jbe
stc
xorl
aaa
jno
dec
add
jl
in
loope
stc
arpl
cmpsw
mov
movsb
loope
dec
fsts
lea
xchg
ret
fdivs
jb
imul
cld
xor
mov
sub
sti
enter
aaa
pushf
inc
add
aad
sbb
sub
mov
mov
mov
mov
gs
aad
adc
mov
jg
je
xchg
ficomps
ja
or
cmp
xchg
mov
test
pop
into
push
test
aaa
movsl
or
iret
mov
dec
sarl
cmpl
jbe
loope
fdivrs
cwtl
clc
loopne
je
sbb
xor
inc
negb
xor
aam
in
push
jg
scas
in
sub
sbb
cmp
mov
push
mov
jge
lds
xchg
mov
fs
int
in
shll
out
jae
xor
mov
inc
pop
test
sbb
add
add
scas
jle
dec
lahf
xchg
addl
sub
arpl
jo
lahf
cmp
ss
cmc
or
jne
push
jb
aas
pop
jp
xchg
xchg
cmpsb
xchg
sti
jnp
ja
push
mov
sbb
lods
jmp
pop
xchg
jo
popa
fcmovb
in
push
dec
cmpsl
shrb
push
xchg
out
es
sbb
in
cmp
push
es
test
or
dec
cmp
mov
in
jno
pop
ss
adc
mov
es
pusha
adc
bound
cmp
call
dec
movsl
sbb
adc
loopne
das
cmp
xor
mov
xchg
cmp
push
sbb
mov
fnstsw
sahf
pop
shrb
test
jecxz
push
jae
test
daa
cmp
hlt
sub
incl
adcl
not
addr16
xchg
inc
push
sub
jno
subb
shll
out
dec
dec
orl
xchg
cld
hlt
dec
shll
test
adc
sbb
sub
ja
pcmpeqd
xlat
xchg
adc
adc
je
sub
push
mov
loopne
xor
insl
aaa
pop
push
aam
shlb
int3
orb
jbe
divb
aas
mov
adc
in
in
and
pop
dec
lods
fs
fistps
ds
test
out
movsl
decl
fmulp
add
fldcw
mov
cmc
pusha
int3
enter
push
xchg
cmp
mov
insb
aam
xor
and
clc
call
push
jmp
nop
sbb
lahf
lock
pop
outsb
sub
fstpt
xchg
cmp
xchg
ljmp
sub
fwait
sbb
repnz
mov
in
mov
test
jae
shlb
pop
or
es
repnz
leave
adcl
mov
negb
or
mov
xchg
sbb
jp
scas
call
rcl
jns
mov
rol
jnp
or
loope
iret
sbb
mov
inc
sub
fidivs
cltd
cmc
or
into
adc
mov
lahf
mov
mov
inc
push
push
xor
dec
mov
addr16
push
or
dec
ds
fisubrl
inc
repz
popa
pop
ljmp
scas
mov
cmpsl
fsubrs
mov
sub
add
mov
in
popf
inc
jl
xor
test
inc
mov
data16
mov
and
mov
sbb
test
mov
adcl
aaa
mov
sub
jmp
pushf
jns
lahf
ficompl
mov
repz
iret
ret
lahf
jl
outsb
repz
cmp
push
cmpsb
inc
adc
leave
inc
mov
adc
xor
and
sti
xor
and
pushf
pop
arpl
aam
mov
movsb
mov
push
fiadds
mov
jle
and
je
insl
divl
inc
cmp
test
lahf
push
fadd
bound
jno
sub
sub
test
lret
call
ret
mov
push
sub
and
imul
sbb
mov
into
test
jg
push
pop
int
cltd
fstl
xor
cmp
pop
pop
cmpsl
and
sbb
adcl
jno
dec
div
popa
mov
cltd
xor
xchg
mov
insb
jno
add
pushf
pop
loopne
shrl
and
sahf
ss
push
xor
pusha
jle
ret
aam
add
pop
push
ljmp
aaa
popa
popa
adc
je
iret
cwtl
les
mov
push
push
movsl
fadds
mov
xchg
jl
pop
imul
sbb
divb
jge
push
dec
pop
jo
xchg
dec
mov
cmpsb
imul
dec
jmp
pop
jo
jp
push
pusha
cmp
cmp
lods
cmp
mov
pop
mov
int3
xlat
lds
aaa
push
fdivrp
add
pusha
enter
aam
pop
sbb
jnp
sbb
cmp
inc
inc
sub
imul
adc
add
inc
xchg
cld
mov
sar
mov
pop
lds
mov
push
jg
add
into
push
jmp
mov
mov
lcall
pop
stos
pushf
push
iret
loop
xchg
icebp
jle
add
mov
add
ficoml
jb
mov
sbb
movd
imul
xor
mov
add
add
push
lea
push
out
cmc
jnp
lds
jb
lods
dec
xchg
jo
int
inc
cmc
iret
mov
addr16
push
cmp
xchg
cs
popf
fbstp
out
inc
dec
into
push
loope
adc
cmp
xor
xchg
mov
cltd
pop
xchg
cs
out
mov
mov
push
jo
leave
ljmp
sbbl
cmp
cmc
push
jge
cmp
popf
ja
dec
lods
int
xor
stos
lock
pusha
idivl
mov
and
pop
add
mov
push
pop
xchg
xchg
dec
add
outsb
inc
mov
mov
lds
stc
fists
dec
pop
bound
push
daa
cmp
sub
xor
cmp
push
stc
mov
stos
mov
add
pop
subl
sub
mov
hlt
lods
pushf
sbb
sub
hlt
fwait
out
out
and
dec
cmp
xchg
jmp
and
xor
jecxz
lret
jecxz
or
in
mov
stos
nop
sub
loopne
mov
add
imul
insb
push
add
pusha
xor
xor
mov
fwait
mov
cld
aaa
inc
cmc
pop
push
mov
ja
repnz
sub
das
adcb
lds
push
jno
add
mov
test
cmp
adc
popa
jbe
push
les
cwtl
add
popa
mov
mov
lcall
add
int3
fists
mov
es
lret
xor
xchg
test
inc
xor
iret
pop
xchg
mov
icebp
mov
in
cli
xor
imul
push
ja
insw
mov
jno
fs
push
jne
pushf
mov
xchg
test
dec
xor
sbb
inc
popa
dec
mov
mov
jns
inc
xchg
and
xchg
es
idivl
adc
add
test
xchg
sbb
pop
popa
pop
push
jp
dec
dec
js
loope
pop
adc
repnz
fsub
mull
pushf
or
out
pusha
in
adc
mov
out
sbb
test
inc
sub
dec
movsb
pop
cmp
sub
mov
fs
into
xchg
mov
data16
in
loop
int3
jg
clc
xor
in
mov
rcrb
inc
xchg
cmpb
in
and
cmp
lods
mov
adcl
pusha
sbb
cwtl
je
leave
outsb
mov
jb
sbb
stos
jge
cmp
mov
scas
sub
jle
lods
pusha
das
push
push
or
add
dec
cmp
inc
imul
inc
jecxz
xchg
mov
lea
insb
push
sub
test
gs
addr16
das
adc
idivb
adc
cwtl
lea
cwtl
pop
rcrl
pushf
inc
clc
ljmp
lods
mov
pop
xchg
shll
into
dec
xor
loope
pop
fnsave
addr16
ja
hlt
mov
inc
into
mov
inc
fstpt
fwait
adc
mov
fstpt
mov
inc
ds
or
fstpt
xchg
addr16
mov
mov
cmpsb
add
clc
add
xor
js
je
and
sub
scas
lcall
pop
das
push
push
jne
or
lahf
push
push
imul
mov
mov
shrl
outsb
sbb
and
mov
adc
mov
ret
pop
pop
push
in
fsubrp
cltd
enterw
dec
ljmp
movsl
jbe
dec
repz
xchg
sti
repnz
add
fsubrp
shll
pop
sbb
in
lods
xchg
xor
mov
in
mov
adc
cmp
rolb
es
testb
arpl
mov
std
or
clc
cwtl
inc
ljmp
cli
sub
call
adc
mov
inc
pop
cs
test
lods
icebp
inc
jecxz
pop
icebp
pop
cli
xchg
add
test
mov
mov
xor
or
ja
ret
cmp
mov
inc
and
pop
push
notb
cs
add
xchg
popf
inc
pushl
inc
call
xchg
dec
loope
fldl
mov
pop
fdivs
add
test
add
scas
push
mov
mov
push
sbb
jp
in
outsb
jp
mov
aam
imul
xchg
pushf
xchg
aad
pop
add
cmp
leave
cltd
adc
lret
and
js
mov
xchg
jge
push
daa
mov
push
or
scas
mov
fisubrl
roll
mov
push
data16
mov
out
inc
mov
out
rcll
xchg
daa
xor
or
and
mov
mov
cmpsl
fnsetpm(287
jb
pop
mov
pushf
mov
jmp
test
shlb
inc
adc
xchg
mov
dec
inc
sbb
insl
sbb
add
adc
fs
or
scas
je
push
dec
in
loopne
movl
jb
inc
lret
push
sub
sbb
fcomps
rcr
rcrl
rcr
mov
mov
push
cltd
loop
adc
cltd
lret
or
iret
and
cltd
repz
inc
insb
lock
lock
push
sub
gs
call
or
pop
fcmovnb
mov
cld
adc
mov
pop
ret
and
movl
push
cmp
loopne
xor
cltd
xor
pusha
mov
adc
ret
fs
sbb
out
xchg
dec
cmp
jp
xchg
jne
and
and
sub
sbb
jnp
inc
xchg
pop
movsb
bound
pop
or
dec
into
inc
jno
test
inc
jae
stos
jl
mov
push
lods
push
repz
int3
jae
js
adc
push
aas
shl
out
and
dec
es
add
sbbb
add
cmc
adc
out
pop
popa
sbb
or
or
cmc
mov
movsb
fstpl
xrelease
in
stc
arpl
add
cwtl
andb
out
and
rcll
arpl
in
and
cmp
jnp
push
adc
and
xor
mov
or
pop
sub
ret
decb
mov
push
jnp
fdivr
mov
shrb
sbb
jmp
and
jb
xlat
popa
dec
repnz
popf
xchg
sbb
testb
enter
jecxz
std
push
negb
lcall
mov
test
loop
shrl
push
fiadds
jo
std
fs
sti
lods
and
xor
lods
push
fadds
add
in
lahf
fstpl
mov
or
ja
stos
xor
xor
xchg
aam
aas
push
cmpsb
orl
pusha
dec
divl
sbb
ret
fidivrs
loopne
shl
add
scas
push
mov
xchg
dec
fcompl
inc
mov
push
add
loop
sti
out
sub
push
rcr
jecxz
push
loopne
imul
xor
cmp
sbb
std
jp
ficomps
push
sub
sub
scas
or
mov
std
sub
and
shrb
popf
pop
rclb
push
jne
lret
call
push
jae
xchg
addb
dec
mov
insb
jno
push
xor
xchg
lods
jl
pop
xor
fsubrs
sahf
pop
xchg
insb
xchg
add
sarl
cmc
xchg
int3
jne
jmp
jge
ds
les
sbbl
stc
jb
js
test
lods
es
pop
loop
jnp
rcr
and
loope
pop
mov
movsl
or
nop
cs
icebp
cmp
sub
adc
shll
popa
fisubs
xor
out
xor
and
push
dec
mov
mov
push
sbb
adc
or
jle
jmp
ds
jg
push
xor
push
aad
push
cwtl
adc
sub
rcrl
mov
or
loopne
movsl
sbb
or
dec
jecxz,pn
add
stos
sbb
push
sbb
or
int
fisubl
imul
jb
out
mov
sbb
add
pop
push
in
push
add
lret
js
add
fmul
xor
mov
in
pop
mov
push
xor
mov
mov
aad
mov
popa
pusha
aas
adc
clc
out
pop
inc
mov
dec
jl
lea
mov
cmp
jae
outsl
jl
sbb
sti
outsl
roll
xchg
pop
movsb
shrl
in
add
jnp
iret
in
call
sbb
cmp
add
dec
jnp
sub
out
pop
or
mov
fcmovbe
or
repz
incb
mov
push
pop
mov
sti
xor
inc
ljmp
add
test
subb
ret
and
lret
xchg
fwait
rorb
insl
jp
icebp
adc
loop
jp
and
push
gs
add
mov
sub
hlt
je
sarb
xchg
inc
fstps
dec
xchg
jno
das
sarb
les
mov
cmp
sbb
popa
or
mov
xchg
jmp
ljmp
dec
fdiv
sub
sbb
outsb
add
insb
in
adc
xor
pop
je
fwait
aaa
xchg
fcompl
test
sbb
test
adc
xchg
xchg
jns
add
sbb
push
push
mov
in
into
ss
dec
mov
mov
sub
fs
loop
je
mov
push
cmpsb
mov
push
xchg
orl
jae
rcrb
int
mov
mov
ljmp
jg
cmp
adc
push
inc
dec
aas
push
in
cmpsb
pop
mov
in
leave
jno
fs
sbb
xchg
or
pop
fldl
cmp
lret
addr16
or
adc
jmp
dec
mov
stc
movsb
out
jae
cmp
into
imul
adc
das
mov
outsl
jae
dec
loopne
in
or
test
sti
ror
test
sar
movsl
mov
mov
popa
fistpll
xlat
sub
jno
andb
cwtl
popa
in
imul
mov
adc
es
lea
lret
inc
adc
mov
mov
loopne
sahf
movsb
ret
inc
or
cmc
jmp
fbstp
imul
lcall
test
inc
stc
test
and
loopne
ret
sbb
or
and
es
add
imul
push
in
sub
stos
add
in
incb
or
xchg
mov
lcall
rcl
lret
push
lock
les
call
cmp
outsb
push
cwtl
inc
mov
or
pop
and
adc
xorb
dec
fimuls
movsb
pushf
sub
lret
cltd
lods
mov
pop
rclb
mov
jae
xchg
mov
mov
arpl
mov
push
inc
mov
or
iret
jno
add
mov
scas
sub
fcoms
arpl
adc
std
dec
add
mov
out
pop
mov
xor
xor
out
jl
fwait
pusha
jnp
repz
sbb
pushf
decb
mov
cmpsb
and
iret
call
xchg
cmpl
orl
xchg
push
cmc
sti
jl
xor
sbb
inc
loope
dec
lds
aam
pop
xor
addb
lock
push
call
aaa
and
and
popf
into
or
in
inc
shlb
cmp
cld
ret
out
pusha
outsb
jns
ss
jb
ljmp
pop
cmc
movsl
addb
or
lret
mov
shll
div
mov
add
mov
ljmp
cmpsb
and
testb
sbb
in
push
lods
push
loope
jmp
scas
sub
push
mov
jo
xchg
pop
xchg
xchg
call
nop
ljmp
mov
jp
cli
jbe
stc
test
roll
mov
fcoms
pop
loop
out
popa
fisttps
mov
or
fstps
jnp
cmp
out
pop
in
or
jnp
repz
stos
xchg
ret
sbb
sub
mov
xor
and
icebp
adc
aas
hlt
mov
jge
data16
jg
jecxz
xor
mov
pop
subb
test
into
mov
push
popa
xor
cwtl
xor
xor
lret
fadds
push
sub
push
out
test
xchg
ret
dec
je
push
inc
xor
fcomip
jbe
push
popf
mov
xchg
and
scas
addb
sbb
dec
mov
test
jge
cmpsl
xor
test
mov
frstor
cmpsb
gs
out
sarb
ror
insb
add
inc
push
and
pop
sbb
jl
test
daa
lcall
mov
imul
jno
xchg
into
in
push
mov
mov
test
cmp
add
fs
clc
sqrtps
mov
add
outsb
sub
subl
pop
jecxz
xchg
in
inc
xchg
lds
dec
jle
cmp
push
push
or
shll
nop
mov
adc
mov
into
jo
jbe
std
dec
adc
clc
jmp
icebp
pop
popa
je
das
and
add
jb
mov
push
mov
mov
push
insb
push
mov
jg
cmp
mov
in
inc
lahf
aad
push
repz
stos
inc
mov
jp
pop
out
lods
les
data16
pusha
mov
lret
xor
mov
cmp
mov
ret
fdivrl
mov
add
xor
push
and
arpl
mov
add
mov
fisubl
add
push
sbb
inc
int
loopne
decb
les
orl
call
mov
mov
andb
or
lock
dec
pop
ret
pop
xchg
stos
clc
jp
xchg
js
xor
into
jae
cmp
xchg
xor
inc
movsb
push
cmpsl
pop
or
outsl
xchg
add
orl
lods
aaa
in
sub
adc
dec
adc
jle
pusha
mov
dec
jmp
and
jnp
das
pusha
push
pusha
cltd
push
dec
and
cmp
push
adc
inc
or
push
mov
cmp
fwait
jns
sbb
lea
lcall
jmp
in
mov
sarl
mov
inc
int3
arpl
mov
movb
add
or
lahf
ret
pushf
nop
popf
sti
jno
mov
pusha
call
jne
mov
mov
cmp
leave
jo
mov
movsb
xchg
dec
repnz
cmpsb
pop
fwait
clc
pop
movsb
sbb
xchg
push
push
fbld
pop
rorl
push
jne
add
js
inc
lahf
loop
lret
mov
aas
dec
jo
sahf
xchg
add
ja
stos
test
inc
and
imul
jnp
mov
mov
sub
inc
cltd
cmpsl
add
sbbb
and
jle
repnz
sub
push
dec
and
shll
inc
jle
addr16
lods
std
jl
clc
lods
data16
fstpl
sbb
xlat
out
jb
leave
movsl
and
sahf
mov
and
jmpw
jecxz
stos
cmp
repz
cmpsb
js
xor
test
mov
jns
imul
push
mov
inc
mov
fistpll
arpl
lock
aaa
jns
pop
pop
xchg
add
add
or
sbb
ficompl
int3
iret
std
mov
add
adc
inc
sub
insl
inc
sub
fstpl
add
iret
push
adc
add
mov
or
pop
and
out
clc
xchg
or
lret
cs
mov
addr16
testl
add
push
aad
dec
pushf
mov
es
pop
popf
dec
rcll
xchg
inc
or
cli
and
mov
out
xchg
sbb
in
jo
jecxz
push
jnp
out
outsl
movl
out
fsubp
aam
mov
xor
fdiv
cmp
loopne
inc
pop
ficoms
ljmp
mov
xlat
lcall
movsl
ret
push
mov
cld
pop
push
mov
popf
push
pop
push
flds
mov
sarb
mov
jmp
gs
dec
push
mov
jmp
lock
lock
aaa
inc
mov
ficompl
je
jge
into
push
jns
mov
pusha
xor
jo
pop
and
pop
decl
in
pushf
sub
xor
mov
push
sub
mov
xchg
xchg
dec
mov
orb
mov
inc
sbb
daa
add
out
lods
out
dec
sbb
fbld
mov
rcll
mov
cmpsl
iret
sbb
fmuls
scas
inc
pop
inc
je
inc
nop
xor
or
inc
lea
sbb
cltd
or
imul
jp
xor
jecxz
xchg
push
ficomps
dec
mov
lods
int3
arpl
jl
jmp
mov
mov
in
mov
lcall
or
pop
mov
fisttpll
sbb
and
sub
ss
dec
shll
clc
sbb
pop
jne
mov
in
mov
js
xchg
jae
xorb
xchg
ds
ficompl
dec
scas
push
outsb
adc
and
cmpl
xor
cmp
popf
push
fldenv
jmp
or
inc
and
fimuls
adc
mov
int
scas
xchg
leave
mov
shll
add
out
xchg
push
or
xchg
rcl
fs
xchg
in
fs
int
or
adc
loop
sbb
mov
imull
in
test
sub
cmp
mov
push
and
aam
cmpsb
mov
xor
adc
stc
sbb
aam
imul
push
idiv
xchg
fs
cmp
icebp
push
push
lock
mov
inc
inc
jbe
cmp
popfw
shrl
cmp
xchg
test
repz
ljmp
loop
addr16
mov
push
fisubl
adc
jne
xchg
out
pop
lret
imul
leave
dec
subb
inc
sub
cmp
or
ja
inc
pop
add
nop
adc
sbb
jmp
call
fucomp
mov
rclb
sub
push
fdivp
fldcw
jbe
push
aad
push
cmp
test
mov
or
ret
push
stos
jb
mov
xchg
sub
add
add
xchg
pop
das
rcl
sub
pop
cld
sub
push
xchg
push
jae
scas
push
jl
xchg
pop
dec
test
inc
lds
and
push
mov
mov
mov
lods
popf
or
lods
sub
xchg
lahf
orl
jo
jmp
not
adcl
roll
mov
cld
in
jle
and
lods
lcall
xchg
xor
mov
and
xchg
sti
dec
jno
sarl
adc
imull
dec
arpl
outsl
sub
xlat
pop
sbb
xchg
test
and
data16
faddp
mov
jnp
in
lds
cmp
mov
dec
les
sub
outsl
jmp
cmp
sahf
or
into
sbb
rorl
pop
xchg
mov
aas
test
push
lods
mov
test
pop
pop
pop
scas
xlat
or
call
scas
or
sub
push
jno
das
out
or
aaa
xorl
or
inc
clc
xchg
sbb
lock
xchg
icebp
cmc
rcll
mov
push
out
sbb
ret
pop
cmc
push
sub
lock
lea
and
xchg
mov
inc
pause
fsubrs
dec
sub
jge
xchg
jns
js
push
adc
insb
jmp
jne
jo
movsb
sub
add
jo
pop
seto
xchg
ret
or
fsubrs
inc
mov
into
mov
and
cmp
sbb
push
in
shl
fcom
xchg
lods
fnstenv
push
mov
hlt
push
mov
sbb
in
stc
mov
cmp
lods
fs
icebp
sbb
das
jecxz
push
dec
inc
xchg
add
cli
xchg
lahf
std
out
sub
iret
repnz
inc
dec
xor
jmp
mov
or
aam
daa
ds
sub
mov
outsl
aaa
lods
lahf
sub
sbb
fisttpl
inc
or
aas
xchg
cmp
ret
inc
repz
inc
xor
sub
mov
mov
adc
js
lret
and
popa
notb
addr16
mov
sub
je
or
shlb
lods
push
sbb
les
testl
xchg
jbe
pop
jge
sbb
inc
sahf
cmp
je
mov
sbbb
add
push
popa
mov
fwait
leave
bound
mov
aam
sub
push
xchg
ljmp
in
adc
fwait
pushf
sbb
test
and
incl
sub
cmp
mov
repz
pop
pop
adc
fistl
jecxz
cli
cmp
int3
pop
rcll
jmp
cmp
xchg
loopne
cmpsl
xchg
mov
movsb
mov
negl
push
jae
mov
mov
js
jge
adc
rcll
mov
bound
pop
cli
leave
bound
push
and
jg
in
inc
cmc
mov
in
xlat
pop
push
mov
mov
cli
sub
mov
mov
push
or
jl
cld
in
push
enter
popf
fdivrs
int3
add
icebp
and
and
lret
jnp
popa
push
inc
push
pop
inc
int
sub
mov
jb
mov
lret
sub
dec
int3
and
mov
test
fistpll
jl
pop
inc
pop
les
lock
inc
aas
cs
xor
fsubp
ss
or
xchg
leave
int3
mov
and
sub
adcb
mov
cmp
loope
ja
insb
aaa
mov
sarl
loop
ss
push
cli
xor
std
sahf
incb
adc
or
adc
lods
repnz
testl
xchg
imul
hlt
fiadds
xchg
repz
cmpsb
pop
jno
mov
hlt
mov
faddl
stos
and
std
push
xor
cmp
adc
mov
inc
jo
or
decl
sbb
dec
das
add
jno
test
and
xor
mov
nop
sbb
sub
pop
mov
mov
push
popf
add
lods
cmp
jge
mov
pop
lahf
sbb
jecxz
inc
cmp
and
mov
mov
push
pop
rcl
mov
daa
cs
ja
pop
int3
mov
mov
sbb
shll
bound
pminsw
les
out
mov
or
jo
sbb
cltd
lcall
jg
and
push
fisubrl
mov
sti
push
cmp
or
hlt
daa
push
pop
nop
std
sahf
pusha
jnp,pt
mov
xchg
add
mov
cmp
mov
leave
popf
adc
push
inc
dec
fbld
xchg
lcall
insb
iret
mov
je
int
aas
aaa
scas
xor
adc
xor
jns
mov
push
hlt
xchg
adc
cmp
bound
and
adc
and
sbb
test
js
aam
pop
mov
scas
inc
mov
outsb
mov
jns
mov
add
add
loop
andl
repz
lods
stos
out
aam
loopne
ret
shl
sub
dec
jp
xchg
gs
xor
sub
pop
mov
push
shlb
jle
jbe
popf
notl
imul
rcrl
jno
inc
daa
xchg
sbb
sahf
mov
insb
stc
aaa
jle
scas
test
out
xchg
adc
test
jge
pop
xor
pushf
in
add
inc
test
mov
fcompl
jnp
mov
int
lahf
andb
rcll
mov
jg
cltd
data16
int3
inc
js
mov
nop
and
xor
sahf
push
in
pop
sbb
mov
add
movb
mov
xor
in
data16
lea
dec
scas
adc
jl
repz
cmp
add
sbbb
mov
xor
iret
cmpsl
mov
add
mov
push
rolb
jbe
xchg
hlt
in
and
neg
js
jnp
xchg
add
test
movsl
cltd
hlt
imul
and
push
dec
pop
nop
mov
sub
cmc
xor
and
inc
mov
pop
mov
push
jmp
push
add
xchg
pop
pop
int
xor
je
mov
and
jno
insl
push
loopne
test
and
xchg
jne
ds
mov
popa
loop
jp
inc
push
in
mov
jp
nop
xchg
rcl
les
push
outsb
addr16
add
fdivl
push
push
in
adc
ljmp
push
mov
jp
gs
fsts
std
or
mov
pop
lds
mov
mov
mov
pop
cmpl
or
cmp
cmp
rcrl
push
mov
idiv
lods
xchg
rorb
in
mov
cli
test
push
pop
pop
pushl
aam
ret
call
repnz
xchg
in
cmp
in
mov
and
or
dec
lcall
push
sub
fwait
mov
mov
iret
addl
push
pusha
dec
mov
pop
and
add
imul
pop
mov
les
stc
pop
sub
adc
fucomi
mov
sarl
nop
cmpsb
push
fwait
cmp
outsb
in
mov
inc
sti
or
sti
mov
adc
mov
xlat
jmp
lock
jo
stc
popa
sbb
xchg
push
sub
xchg
out
xor
movsl
sarb
outsl
or
xor
fsubs
push
jbe
mov
jecxz
xchg
mov
into
cmpsl
ret
jne
push
jle
cld
loop
shlb
lret
stc
and
jmp
insb
mov
lret
xor
repz
sti
scas
movsb
dec
loopne
adc
clc
stos
lret
je
in
or
gs
push
jo
pop
out
push
push
cmp
lret
adc
sbb
inc
dec
pop
scas
dec
mov
jo
mov
jnp
mov
sub
mov
mov
lea
loop
lods
and
cli
mov
sub
xor
mov
adc
inc
pop
mov
dec
shl
std
or
rclb
pop
incl
adc
xor
xor
enter
dec
nop
and
or
xor
int3
test
sub
in
mov
call
bt
iret
cmp
movsl
enter
mov
cli
sub
imul
mov
fcomps
jno
cmp
push
pop
mov
aaa
loopne
and
int
sbb
lods
ret
push
fdivl
fists
xchg
lcall
lahf
xor
mov
subl
sbb
pop
push
push
cmp
enter
pushf
or
cli
loop
push
int
sti
ret
in
add
dec
jno
sub
aas
nop
mov
and
jle
call
jecxz
pusha
or
dec
pop
push
xor
push
scas
cmp
add
je
xor
pop
xor
cltd
mov
dec
xor
add
and
les
lret
mov
ljmp
jp
jae
in
cmpsb
subl
sbbl
jmp
inc
test
shlb
mov
arpl
pop
mov
in
adc
into
and
adcl
stos
sbb
cltd
hlt
pop
hlt
pop
pop
push
or
ret
inc
mov
lea
mov
outsb
je
fidivrs
scas
lea
lret
sbb
add
iret
pusha
decb
out
ljmp
xor
fimuls
scas
pop
inc
cmp
jo
ret
mov
pushw
aas
test
test
stos
cltd
test
pop
adc
mov
inc
mov
xchg
imul
cmp
dec
js
jecxz
loopne
dec
jmp
ds
cmpsb
pop
cmpsl
into
cltd
mov
or
les
xchg
aaa
dec
in
repnz
ljmp
faddl
mov
fstpl
sbb
aad
mov
mov
or
mov
call
pop
outsb
xor
dec
or
mov
pop
inc
or
push
pop
sbb
mov
movsb
jne
pop
loopne
mov
dec
xchg
imul
iret
iret
and
icebp
rcl
bound
xor
sbb
scas
mov
cli
in
mov
dec
negl
loopne
incb
icebp
jle
fsubrs
popf
ret
ds
clc
aaa
dec
popa
or
and
outsb
scas
pop
arpl
mov
push
mov
jp
sbb
dec
mov
mov
xchg
sub
data16
sub
cs
mov
pop
push
jno
aad
add
ds
fcompl
bound
push
xchg
out
push
mov
icebp
test
nop
lret
xor
sub
inc
pushf
mov
shlb
idiv
push
enter
mov
push
fwait
je
pop
dec
add
cltd
pop
mov
test
pop
and
or
xchg
lcall
pop
dec
loope
adc
test
mov
cwtl
or
addl
mov
pop
lcall
cltd
repz
fadds
ret
xchg
jns
mov
jge
fistps
lcall
adc
ljmp
cmp
inc
shr
dec
and
mov
adc
add
sub
push
or
imull
xchg
push
adc
rol
cmc
mov
xchg
pop
int
pmuludq
gs
push
xor
mov
inc
sub
xlat
jle
popa
cmp
xlat
jnp
push
cwtl
xchg
xchg
mov
flds
jmp
add
cld
lods
orb
pop
fisttpll
add
push
roll
and
insl
mov
fs
or
xor
int
test
cwtl
fdivp
rcrb
nop
pop
sub
sub
jp
or
and
mov
cmc
and
jmp
dec
pop
mov
push
adc
pop
inc
sbb
stos
mov
and
out
adc
mov
rol
sub
ficoms
push
idivb
in
outsl
test
pop
insb
gs
push
cmpsb
les
cmp
orl
dec
sti
fdivr
leave
insl
or
loop
idiv
sti
add
movsl
fs
or
pop
cmc
je
js
dec
add
aaa
cmp
push
dec
jle
mov
mov
sub
xor
mov
adc
inc
cld
xor
jo
jmp
int
sub
adc
mov
lcall
cmp
daa
ret
imul
and
lock
cmp
adc
cmp
les
popf
stc
mov
clc
lret
xchg
inc
push
cmp
jno
fistps
icebp
aam
cmp
or
jbe
jbe
adc
gs
cmpl
je
and
rcrl
leave
inc
add
lcall
outsb
push
ss
addr16
inc
adc
sbb
mov
adc
je
pop
lahf
stos
xchg
lahf
stos
js
outsl
adc
inc
jnp
scas
cs
repnz
xchg
inc
ja
aam
inc
jge
je
dec
fimuls
mov
xchg
aad
inc
aaa
xchg
gs
fdivrs
pop
dec
or
jge
mov
dec
pushf
nop
and
push
push
pop
outsl
ja
add
es
sbb
adc
and
adc
mov
mov
les
sbb
loop
mov
dec
sbbb
lcall
or
add
mov
and
sub
or
pop
xor
popa
cmpsl
lret
test
or
jecxz
pop
ds
push
imul
xlat
push
stos
mov
insb
mov
int
pusha
mov
jp
jmp
out
inc
aaa
cmp
xchg
mov
push
cltd
gs
test
shll
test
mov
mov
mov
cmp
pop
mov
icebp
sub
clc
xchg
decl
and
mov
xor
mov
pop
arpl
jp
cld
push
xor
add
out
das
add
xlat
lret
inc
cmpsl
mov
xor
jge
jg
mov
lods
add
jnp
fwait
stc
adc
sbb
lretw
int
cmpsb
or
and
adc
mov
mov
loope
pop
stos
in
bnd
neg
mov
aaa
cs
ds
inc
jbe
enter
dec
scas
jle
push
mov
lods
loop
icebp
or
sbb
aam
test
pop
push
out
pop
and
inc
or
call
cmp
mov
adc
gs
cmp
and
lret
loop
nop
fildll
ret
hlt
adc
lcall
jecxz
push
cmp
pop
adc
adc
or
loopne
adc
push
cltd
test
mov
jnp
push
stos
in
scas
nop
int3
fiaddl
mov
loope
popf
jne
jae
scas
sbb
int
xchg
lods
lods
xor
and
cmpsl
scas
push
mov
xchg
push
sbb
lods
dec
sbb
or
mov
test
movl
or
xor
movsb
ljmp
adc
and
in
add
rclb
push
and
nop
test
adc
mov
push
jbe
add
cmp
mov
inc
adc
xchg
jecxz
mov
aaa
aam
fadd
push
jae
lea
gs
adc
pop
sub
int
pop
sub
dec
mov
push
leave
pusha
jne
mov
jo
cmp
inc
icebp
into
and
fnstcw
fidivl
addr16
adc
lcall
adc
lahf
arpl
inc
xor
inc
push
adc
or
pop
ret
xchg
dec
adc
imul
inc
imul
lcall
aaa
push
outsl
inc
lahf
pusha
xchg
mov
dec
mov
mov
hlt
dec
cmp
mov
xchg
mov
pop
push
stc
in
lret
gs
cld
mov
dec
inc
xchg
lods
mov
jge
dec
cmp
in
jbe
lock
fs
mov
out
test
cmpsb
sub
mov
dec
xchg
test
decb
or
insb
pop
add
aad
push
push
out
jmp
pop
cld
lahf
and
test
inc
xor
adc
loop
dec
pushf
test
pop
mov
sbb
xor
ret
dec
pop
lret
scas
sub
add
outsb
cmpsl
lahf
jnp
push
lret
movsl
mov
das
push
addl
xor
addr16
rclb
mov
movsl
or
cltd
or
sbb
hlt
mov
xchg
mov
les
sbb
pop
xor
xor
mov
ds
dec
dec
xor
and
arpl
popa
in
stc
inc
or
daa
movsb
push
stos
xchg
push
push
roll
pushf
repnz
pop
aam
and
jl
gs
loopne
sub
dec
dec
pusha
rorb
idivb
adcl
dec
pushf
cwtl
jp
int3
sbbb
test
cli
mov
inc
lcall
adc
adc
ljmp
addr16
movsb
add
sub
adcl
cmpsl
stc
gs
sti
loop
cmovbe
movsl
push
push
xor
outsl
movaps
in
mov
xchg
adc
dec
inc
or
fisttpll
jmp
sbb
in
add
dec
xchg
xchg
fwait
cmp
push
pop
push
or
iret
and
scas
mov
std
push
stc
mov
mov
scas
add
and
in
or
das
xchg
clc
repnz
je
pop
jno
fcomip
mov
data16
dec
stos
mov
cmp
dec
inc
xor
shl
inc
out
sbb
dec
les
and
movaps
pop
jno
je
int
fwait
pop
jbe
imul
rcrl
mov
inc
je
orb
mov
inc
cwtl
jbe
add
sub
push
pop
xor
push
jmp
xchg
aad
mov
mov
call
mov
sbb
pop
testl
fistps
addb
stc
xchg
outsl
mov
jne
insl
lret
movsb
es
or
xor
std
jmp
call
fcoms
dec
xchg
fwait
push
roll
xchg
stos
add
adc
in
mov
jne
rolb
ja
jb
and
jne
cld
scas
adc
out
inc
ss
push
xor
dec
jbe
sarb
les
and
lcall
mov
ds
fcoms
js
xchg
xor
pop
ss
xchg
lcall
fucom
xchg
in
push
ret
je
jnp
leave
insl
rorb
add
mov
popf
jg
es
inc
mov
fiaddl
sub
xchg
call
into
aas
std
jo
xor
mov
push
dec
sahf
lds
cmc
out
or
mov
into
adc
xchg
adc
mov
aad
mov
test
jg
shll
or
and
mov
and
jne
mov
push
lcall
jle
notb
mov
outsb
into
xor
mov
std
ja
add
pop
int3
cmp
cmp
ja
dec
push
sarb
xor
fisubrs
or
out
jb
xchg
addr16
push
and
pusha
jge
rorl
pop
xchg
and
fldcw
cmp
fs
mov
jb
xchg
cs
dec
hlt
jecxz
int
add
pop
pop
sub
pop
lods
xchg
test
imul
jae
push
iret
mov
cmc
shlb
ffree
inc
ret
arpl
jmp
dec
jbe
leave
lods
mov
iret
shrb
repnz
jbe
cmp
inc
iret
inc
rcrb
and
add
aad
jmp
clc
rorb
mov
xchg
sub
repz
mov
stc
insb
mov
push
rcrl
sbb
cmpsb
aas
xchg
arpl
mov
adc
push
xchg
jg
jecxz
loope
cmp
jne
stc
insb
test
mov
testb
xlat
dec
scas
pop
icebp
jmp
pop
popf
cld
or
adc
dec
xchg
or
add
and
sbb
mov
decl
fldt
adc
inc
das
jg
sub
call
or
dec
mov
hlt
shll
aas
fwait
insb
stos
pop
pop
or
mov
pop
sbb
fsubrl
pushf
sbb
mov
mov
push
jb
add
adc
ret
into
ds
imul
shll
pop
xorl
adc
jl
fbstp
sub
jne
xor
std
iret
pop
lcall
ret
out
ret
gs
or
insb
data16
mov
imul
or
xor
xchg
adc
int3
adc
push
add
repnz
sti
lock
in
ret
xor
adc
sub
pop
jl
mov
mov
sti
push
sysret
mov
adc
and
test
stc
mov
aaa
cld
sbb
inc
stos
pop
ret
pop
cwtl
ljmp
mov
cmp
mov
addr16
jmp
dec
enter
lret
jmp
and
mov
loop
fwait
sub
dec
push
ljmp
fwait
push
cmp
inc
xor
loope
xor
fstps
adc
in
add
cmp
xchg
push
shrl
imul
xchg
sti
jg
es
mov
pop
into
int
lret
add
inc
dec
jle
lock
adc
pop
mull
lret
icebp
adc
mov
fbstp
lcall
out
cwtl
sbb
lea
mov
or
and
pop
push
xor
cli
inc
add
cmpsb
add
loopne
rol
xchg
mov
movsl
inc
add
jge
dec
add
rol
xchg
dec
inc
les
mov
and
ljmp
mov
pop
adc
xchg
decl
xchg
ja,pt
or
jge
adc
sub
pushf
test
inc
cmpsb
jl
cmp
xchg
aaa
int3
ret
scas
stos
bsf
movsl
inc
sbb
fwait
scas
cmp
sbb
outsb
pop
mov
ret
and
dec
test
push
loopne
popf
or
sub
inc
mov
shlb
addr16
into
pop
xor
jl
repz
int
mov
dec
pop
or
jbe
jno
inc
inc
cli
cmp
xchg
lods
sysexit
and
jb
push
cmpsb
stc
pop
ret
mov
and
in
into
mov
stos
xchg
jge
push
popa
mov
test
das
xchg
dec
xor
mov
jmp
dec
shrl
cmp
mov
cmp
jle
jns
push
add
and
mov
leave
cmp
pushf
inc
mov
mov
xchg
and
or
hlt
xchg
das
mov
push
paddq
lods
and
dec
addb
movsl
mov
adc
sbb
sbb
sahf
cltd
lds
filds
and
mov
sub
addr16
mov
adc
push
jg
daa
idiv
add
clc
daa
and
popf
leave
and
mov
mov
fimuls
sbb
stos
stos
shrb
neg
pusha
push
pop
mov
cwtl
lds
mov
ss
adc
imul
and
mov
int
mov
loop
and
sbb
test
repnz
lret
mov
xchg
cmp
cmp
pop
push
lahf
imull
dec
xor
scas
cli
xchg
cmp
aaa
mov
adc
dec
mov
jno
cmp
sub
dec
add
aaa
pop
imul
adc
push
movsl
fisubl
add
dec
test
inc
movsb
dec
mov
mov
sbbb
test
add
push
mov
and
or
xabort
cld
in
cmpsb
icebp
loop
enter
mov
addr16
popf
repz
adc
roll
jge
mov
mov
xchg
fdivrp
mov
xor
add
rolb
andb
push
pusha
inc
ss
or
mov
lret
pop
dec
push
xor
xor
cli
mov
sarb
mov
xchg
inc
push
push
pop
adc
not
imul
and
sub
mov
out
push
add
cmp
and
iret
cli
fimuls
ret
push
movsl
or
push
adc
jns
add
push
jb
jo
mov
adc
mov
jge
arpl
leave
sti
out
jne
ret
push
daa
sub
and
and
or
outsb
add
test
dec
das
inc
or
adc
mov
test
dec
out
mov
mov
leave
or
mov
or
out
fs
cmp
mov
enter
cmpsb
cltd
pop
adc
and
or
es
mov
dec
inc
sbb
jns
jnp
out
mov
bound
int3
sbb
cmpsb
leave
out
bound
push
jo
push
test
daa
lahf
fnsave
xchg
int
adc
mov
imul
or
sbb
push
adc
out
add
push
push
xor
mov
cli
fsubrl
gs
pop
or
add
jae
std
rep
jae
pop
xchg
xor
pop
mov
cmp
dec
mov
push
loopne
pop
add
cld
out
in
jp
dec
mov
add
cmp
fcoml
das
xchg
not
scas
add
in
xchg
dec
mov
push
int3
ret
or
lea
inc
xor
fnstenv
test
lret
inc
int
mov
push
or
jb
mov
ja
ret
adc
icebp
insb
cmp
std
cmp
das
insl
cmp
dec
insb
push
call
fisubrs
in
mov
and
mov
add
sub
push
adc
mov
push
lahf
decb
int3
dec
cli
mov
wrmsr
pop
orl
subl
cltd
xor
xlat
in
sarl
ljmp
cmp
add
les
punpckhbw
mov
push
rol
pop
inc
mov
sahf
and
and
push
dec
enter
outsb
stos
aaa
inc
out
cmovge
push
adcl
jecxz
divb
sub
xchg
cld
jne
sbb
out
gs
cmp
xor
out
adc
pusha
scas
cmp
sub
fcomps
pushf
gs
push
ret
jbe
stc
int
adc
sahf
jg
mul
dec
fnsave
add
lock
jo
add
test
push
js
adc
mov
pop
cmp
call
push
jge
movsl
hlt
inc
aaa
push
ret
dec
mov
xor
fs
enter
cmpsb
mov
das
adc
push
mov
shll
and
popa
xchg
ret
aas
ljmp
adc
xlat
gs
inc
push
or
lods
adc
iret
rclb
inc
cltd
imulb
addr16
inc
cmp
pop
rcrl
stc
sub
xor
xchg
negb
and
fcmovnu
add
fwait
dec
outsl
js
aaa
in
jecxz
in
test
jbe
sub
mov
dec
daa
sahf
mov
iret
dec
add
sub
mov
mov
mov
adc
inc
push
inc
cs
fistpll
data16
fidivrl
out
js
fwait
into
xchg
jb
xor
ja
add
push
add
jg
add
xchg
shll
adc
jge
jb
jb
fists
nop
xchg
sub
xchg
jbe
jae
sbb
addr16
mov
testb
mov
sahf
add
jb
dec
addr16
pop
xor
bndldx
scas
and
xchg
sbb
incl
js
test
call
into
int3
out
cmp
xchg
ss
mov
mov
pushf
pop
lcall
jno
mov
movsl
in
push
aad
inc
js
ljmp
sbb
pusha
ret
aas
add
div
add
sbb
lret
push
dec
jae
xor
inc
rorb
inc
lcall
sbb
jge
fcmovnb
shl
pop
push
xor
call
scas
fisttpl
push
insl
pop
jl
lods
jo
ret
mov
cwtl
cmp
jecxz
pop
jecxz
stos
xlat
shrb
xor
outsb
lock
or
inc
fdivs
pop
popf
rclb
pop
xor
addr16
cs
stc
psubb
jnp,pn
std
ret
imul
cmp
cmpsb
in
cmpsb
jns
call
and
jle
jns
mov
leave
xor
pop
mov
cmp
jnp
mov
xor
xor
repz
out
push
add
pop
cmp
dec
sbb
push
xchg
fcmovb
push
fcmovnb
or
add
add
cltd
xchg
in
inc
xchg
add
push
xchg
popf
fnstenv
stos
lret
inc
or
aaa
xor
outsl
jle
lret
int
sbb
inc
outsb
jns
movsb
adc
repz
jne
lret
fldenv
adc
adc
lea
js
lcall
sub
and
mov
xchg
push
xchg
adc
sub
xchg
xchg
push
divb
lds
shlb
aas
push
movsb
pop
inc
ljmp
pop
shlb
dec
sbb
gs
sub
or
shl
and
mov
pop
ret
adc
fsts
in
lret
out
and
in
sti
cmpsb
cmpsl
jae
fs
into
xorl
movsl
and
jmp
addr16
and
or
inc
xor
cmp
hlt
add
and
adc
dec
ret
mov
cmp
subb
scas
jp
data16
ljmp
test
sbb
xchg
push
fisubs
adc
outsb
mov
stos
push
jb
push
out
scas
test
dec
jo
jb
jno
sahf
loopne
cmpb
lock
sarl
fadd
out
adc
pop
stos
xor
dec
cld
sahf
rcrl
dec
out
in
js
jno
sbbb
xor
push
fidivrs
fildll
iret
jl
ret
into
fnstsw
daa
jmp
add
sub
mov
lods
in
lret
mov
fisttps
mov
xchg
int3
and
cli
stc
addb
xchg
and
lea
ds
rcll
aam
mov
mov
or
rorl
mov
xor
mov
int3
push
jle
mov
arpl
scas
and
push
les
xor
icebp
ror
imul
int
inc
fcoms
xor
scas
outsl
pop
sahf
sub
push
adc
and
sbb
and
sbb
pop
out
mov
xchg
loop
pop
cmp
mov
orb
cmp
or
mov
inc
hlt
movsl
xchg
adc
sti
montmul
cmpsb
add
mov
jge
cmc
sti
test
lock
loopne
aaa
cmpsl
lahf
add
add
test
mov
nop
sub
sbb
jbe
outsb
xlat
inc
xchg
xchg
mov
nop
jo
rolb
hlt
addb
rcrb
imull
sub
inc
movsb
jne
loopne
mov
xchg
push
xor
adc
xor
test
fildl
addr16
popa
push
xchg
sbbb
jae
das
push
mov
cmp
mov
push
pop
lret
mov
movsb
push
xorb
or
mov
sbb
ljmp
cmp
fistl
adc
xor
push
imul
xchg
add
jmp
pop
daa
in
adc
inc
addl
insl
movsl
mov
imul
sarl
xor
sub
out
addr16
sub
xor
movsb
pusha
ja
pop
pop
sbb
cwtl
adc
lahf
and
pop
enter
pop
in
mov
pop
enter
lods
push
jg
xlat
fists
jb
push
jg
insb
jno
add
or
andl
push
cmp
cmpsl
bound
adc
hlt
mov
mov
pop
mov
imul
lahf
inc
jge
shr
add
arpl
xchg
xchg
mov
xchg
add
mov
sub
hlt
jle
mov
cmp
andb
call
call
pushf
add
sti
ss
das
icebp
lret
int3
cmp
jae
arpl
or
enter
sbb
loope
loope
ja
insb
call
or
add
push
mov
dec
pop
lods
jnp
pop
xor
dec
inc
fnstsw
add
jbe
outsl
adc
je
stos
dec
mov
adc
add
jecxz
adc
lods
add
xchg
insb
insb
sub
jae
hlt
out
inc
addb
ds
xor
xor
add
lea
imul
icebp
sahf
inc
loop
lods
mov
hlt
rcr
andl
add
jle
xchg
sub
rolb
push
xor
pop
jle
jg
mov
dec
mov
adc
jge
xchg
data16
fsubs
jmp
rcrb
repz
stc
dec
and
in
loopne
incb
aad
mov
mov
mov
in
lds
sbb
into
xchg
push
ficoms
inc
ljmp
add
aam
mov
ret
sahf
test
push
push
push
lret
push
xchg
cmp
stc
jnp
xchg
sub
and
mov
xor
das
sbb
add
or
mov
test
clc
xlat
and
loope
dec
movsb
loopne
outsl
mull
xchg
mov
aas
js
sub
adc
cmp
xchg
sub
xchg
jg
add
ds
jo
xor
aas
fbstp
lock
leave
xchg
popa
daa
rorw
pop
out
clc
fisubs
psllw
pop
clc
arpl
insl
jp
dec
stc
push
push
xchg
adc
mov
les
push
into
ret
test
lods
imul
leave
gs
mov
or
aad
jle
jp
fildl
dec
outsb
mov
dec
pop
mov
sbb
sahf
imull
add
arpl
add
popa
inc
std
push
fistps
scas
in
fwait
mov
jp
and
ficoml
dec
fistps
sub
pop
jns
xlat
gs
jp
push
adc
dec
jg
aam
and
sbb
fstps
mov
aam
jg
jbe
daa
xorb
mov
inc
cmpsb
lret
inc
sub
call
loopne
push
or
jne
stc
pop
push
stos
adc
bound
outsb
fisttpl
stos
cmpb
and
pop
inc
or
fs
jb
xchg
sub
jns
xchg
into
fcmovnbe
cmp
jne
push
sbb
dec
js
test
addr16
pop
xor
lock
stos
sbb
loopne
out
or
outsl
bound
dec
pop
fwait
cmp
cmp
pop
lds
stc
cmp
sti
jns
sbb
stos
push
pop
shl
pop
mov
in
test
ret
push
cs
insb
clc
adc
aas
adc
out
scas
out
data16
xor
cmp
test
aam
push
icebp
test
movsl
cwtl
fdivr
dec
adc
or
adc
aam
mov
mov
adc
sti
or
sahf
jne
or
push
push
out
loop
and
sub
lods
pmulhuw
in
cmp
pop
scas
and
shll
ljmp
xchg
jle
jae
loopne
scas
dec
loopne
movsl
cmp
sti
inc
push
js
std
dec
xor
sti
daa
xor
push
mov
sbb
out
pop
lahf
adc
cli
stc
lcall
imul
nop
test
push
push
inc
mov
inc
shll
pop
out
gs
or
es
mov
lahf
xor
cmp
lds
cmpsl
pop
pop
cmp
int3
pop
mov
add
lcall
lea
adc
mov
and
call
inc
dec
inc
nop
push
mov
fists
mov
sarl
lcall
sahf
xor
mov
sub
xor
mov
jle
pop
stos
stc
xor
and
punpcklwd
and
cltd
ret
sub
push
into
test
adc
mov
fs
push
push
mov
sub
cwtl
lods
sahf
jno
inc
int
and
mov
jno
testb
adc
push
pushf
sbb
pop
rcrl
into
daa
in
xchg
sbb
mov
sahf
fisubs
adcb
insl
cwtl
lds
movsb
jg
cmp
aaa
repnz
adc
pushf
inc
mov
clc
icebp
xchg
inc
adc
arpl
jecxz
lods
je
jno
sbb
daa
sub
test
push
pop
out
adc
scas
xchg
filds
lahf
fnstenv
data16
xor
sbb
adc
roll
xchg
imul
loopne
decb
lahf
fdivl
fisubrl
push
cltd
aas
outsl
rorb
jno,pt
test
lods
pop
cmpsl
int
xchg
in
push
xor
adc
dec
push
gs
pop
rcrl
daa
mov
cli
xor
or
add
iret
repz
mov
rorl
fcmovbe
scas
outsl
sub
add
pusha
dec
call
popf
pop
inc
jno
pop
bound
mov
lret
insb
ss
cs
lods
cmp
jg
cmpsl
test
sub
or
bound
out
shlb
loopne
and
call
lds
inc
js
stos
adc
push
xor
fs
scas
dec
jg
sub
adc
lds
mov
add
paddd
inc
push
jecxz
les
rcl
xchg
std
aas
clc
xor
adc
and
addr16
js
add
adc
sahf
rcll
mov
or
inc
ret
dec
daa
hlt
and
xor
daa
push
xchg
lods
xchg
jg
xchg
scas
jae
filds
std
cwtl
cltd
aam
mov
mov
xchg
push
add
imul
fldcw
jae
mov
test
jne
mov
cld
loop
stos
jb
aad
mov
adc
or
ror
bound
outsl
push
fstpl
mov
sbb
jns
std
ret
or
sbb
xchg
mov
lock
mov
mov
cmpsl
sbb
rcl
sbb
or
out
sarb
mov
daa
test
insb
jns
mov
mov
movsb
outsb
loop
das
cmc
fistpll
arpl
xor
fnsave
fisubrs
lcall
mov
adc
lods
rcrb
pop
shlb
lock
add
jge
cmp
pop
sbb
push
subl
adc
xor
stos
and
jl
pop
int
or
inc
aas
in
enter
cmp
xlat
pushf
xchg
lret
popa
call
out
lahf
xlat
insb
aas
cld
sub
pop
push
sbb
je
sub
jno
addl
rolb
adc
push
mov
subb
sub
mov
stc
cs
nop
test
lcall
sub
sub
cmpsl
xchg
out
rorl
push
inc
dec
inc
sub
pop
into
es
push
nop
cmp
or
movsb
or
cmpsb
fldenv
pushf
into
sahf
out
fistpll
int3
pop
cmp
inc
cmp
scas
sub
pop
mov
imul
push
or
push
mov
mov
dec
stc
pusha
mov
pop
ret
mov
or
add
lcall
les
mov
jne
aas
negb
test
lds
mov
xchg
cs
movsl
lods
adc
jmp
pop
ss
sbb
cmp
outsl
xchg
aad
sub
frstor
add
jp
bnd
sbb
out
ret
or
mov
mov
lods
push
or
dec
mov
cwtl
aas
and
xchg
adc
popa
cmpsl
fldl
frstor
pop
ja,pn
sarb
shlb
std
cmpsb
fildll
or
jne
cli
push
sysenter
fstl
in
push
mov
fisttpll
and
mov
sub
test
in
and
sar
xor
js
mov
popa
aam
adc
daa
xchg
ficoms
lods
arpl
pop
xchg
sbb
xor
nop
mov
ja
lahf
push
sahf
push
call
xor
cmp
lret
loop
xchg
mov
fildll
insb
aaa
movsl
fcoml
dec
outsl
shlb
mov
loopne
std
and
mov
nop
add
cmp
push
jae
je
pop
push
in
out
mov
hlt
fcoml
imul
and
movsb
mov
push
dec
loop
mov
sub
rolb
pop
push
call
into
imul
add
mov
cmp
cwtl
or
enter
add
cltd
test
sub
fsts
mov
sti
xchg
adc
mov
mov
sti
stc
xor
pop
test
pop
enter
jo
cmp
cmpsl
inc
jp
mov
jl
stos
popf
add
mov
ror
repz
jo
jle
lds
insl
ds
outsl
in
scas
mov
repz
inc
dec
aas
xor
push
sbb
shlb
mov
pop
jns
sbb
in
push
ficompl
add
jg
out
inc
mov
xor
cmp
pop
pop
sbb
mov
sbb
cmpsb
adc
rcr
adc
leave
lret
or
xchg
add
xor
cltd
and
mov
cmpsb
aam
insb
int3
out
xor
jg
mov
mov
test
ljmp
popa
nop
fwait
lds
xor
mul
sub
pop
push
push
rorl
pop
nop
xchg
in
aam
push
aad
push
mov
lods
shlb
push
scas
mov
insb
js
cmp
jno
jb
xor
push
outsb
jp
sub
sbb
ret
push
pop
leave
test
lea
shlb
cmp
xchg
push
or
clc
mov
add
push
mov
js
int
mov
xorl
mov
jmp
jbe
push
xor
sbb
adc
les
mulb
mov
aam
addr16
pop
jmp
jae
xor
icebp
aaa
inc
add
push
ljmp
lret
dec
sub
inc
fwait
mov
xor
jno
cmp
cli
pop
ja
xor
out
adc
cmp
iret
popa
xchg
or
subb
lock
stos
mov
mov
jae
mov
and
xchg
loop
cmp
pop
pusha
and
flds
ljmp
lods
and
jns
aas
fistpll
aad
push
imul
cld
out
xchg
cmp
fwait
push
test
dec
push
mov
subb
es
mov
sub
xchg
add
push
negl
cmpsl
mov
push
pop
mov
inc
inc
xlat
mov
test
call
cmp
nop
popa
xchg
fstpt
push
jmp
mov
sub
xchg
repz
mov
das
cmp
xchg
lods
xchg
nop
nop
sbb
mov
mov
or
pop
xchg
sub
leave
xchg
jnp
jo
je
loope
inc
flds
addr16
adc
sub
lea
je
cmp
test
popf
adc
push
add
mov
add
insl
ror
mov
les
stos
mov
imulb
pop
ss
test
inc
cwtl
lret
mov
and
jne
pop
ja
in
and
pcmpeqb
ja
cmpsl
add
or
add
rolb
add
mov
fs
pop
fimuls
push
aam
js
sub
add
int3
lret
lods
sbb
fdivp
sti
xchg
push
fwait
xchg
negb
pop
mov
icebp
jp
jg
lret
aad
std
lret
push
mov
sbb
lret
gs
sti
call
lcall
push
in
sub
cmpsl
xor
clc
sbb
fdivr
fisttpll
frndint
inc
cmp
rcrl
and
xchg
int
mov
loopne
cmp
cmp
jns
xchg
imul
jbe
push
test
ss
aam
mov
nop
cmp
or
cwtl
ret
jge
ljmp
daa
jle
jle
pop
scas
xlat
adc
mov
xor
and
inc
pop
negl
or
scas
or
add
cs
outsl
aam
adc
insl
inc
jae
js
and
cltd
cld
adc
jno
mov
mov
repz
hlt
inc
mov
inc
into
sbb
into
in
xchg
push
mov
stos
jbe
mov
fsubs
mov
mov
cmp
xorb
test
mov
aas
scas
test
pop
fbld
jg
add
mov
addl
xchg
outsb
lahf
adc
cmpsb
add
ja
popf
adc
push
rolb
mov
in
xchg
dec
cli
popa
cmpsb
and
inc
mov
ljmp
dec
sub
pop
ret
mov
int3
cld
std
shlb
lods
daa
fwait
leave
scas
inc
xchg
xor
shrl
je
jmp
roll
cltd
mov
subps
rorb
xlat
mov
mov
jo
into
jle
mov
loop
ret
loope
inc
outsb
popa
cli
dec
das
out
add
pop
and
fs
dec
pop
mov
ret
or
push
mov
add
js
or
stc
test
push
jl
pop
sarl
adc
dec
mov
sbb
push
dec
sub
call
cli
sbb
je
push
ret
dec
fwait
xchg
push
cmpsb
pop
mov
jbe
push
xor
dec
fnstcw
divl
cmp
xor
sub
cmp
add
leave
sti
add
sbb
addr16
sbb
popf
cld
sti
decb
sahf
aad
test
lret
or
cmp
pushf
cmp
inc
mov
pop
xchg
loope
sbb
stos
sysexit
mov
push
pop
and
test
xchg
sub
pop
lods
js
jae,pt
sub
aad
sub
or
fcoml
pmaxsw
cmp
fadd
dec
push
mov
mov
cli
xor
loope
or
cmp
and
insl
ror
adc
inc
movsl
cmp
daa
push
mulb
mov
nop
rorl
mov
push
in
outsl
inc
push
imul
add
pop
out
imul
mov
addl
leave
sub
fwait
mov
lcall
aas
sbb
rcll
jmp
lret
adc
scas
lret
cmc
xchg
inc
decb
lret
movswl
ss
sbb
cmp
shll
pop
xor
dec
lret
adc
repz
inc
xchg
out
movsl
test
xor
mov
mov
and
insb
add
xor
fstpt
adc
aad
jo
les
ret
fsubrs
dec
lods
lret
push
pop
pop
mov
mov
add
les
jb
arpl
sbb
cmp
lret
pop
mov
add
in
sarl
cmp
insl
roll
xchg
inc
andl
adc
in
fisubrs
cmp
fldt
test
in
or
mov
dec
lds
mov
cmp
lcall
test
je
dec
fisttpll
cltd
push
dec
scas
call
mov
xchg
cltd
mov
inc
lahf
xchg
cmp
stos
mov
push
sbb
cli
or
mov
notl
inc
adc
jae
dec
dec
fisubrl
mov
add
sarb
jnp
cmp
push
mov
jg
rol
mov
jecxz
fildl
push
sahf
jmp
pop
out
xor
sahf
int3
dec
js
push
xchg
mov
mov
bound
popl
pop
rorb
sub
xchg
movsb
stos
sbb
mov
add
fisttpl
fistps
mov
xor
js
sbb
stos
aaa
data16
shlb
inc
lock
lahf
xchg
ret
lock
sbb
into
push
lods
scas
and
cmpsb
cld
inc
mov
mov
dec
roll
sub
int3
cmpl
push
add
jno
lock
push
xorb
xchg
mov
std
or
shll
jno
xchg
jnp
pop
addb
and
in
mov
lea
push
into
movsl
xor
mov
fwait
push
add
mov
adc
cmp
sbbb
mov
ret
les
adc
pop
cmc
outsl
jg
imul
jl
daa
cli
pushf
or
icebp
cmpsl
mov
mov
imul
enter
fs
std
sarl
sub
fistps
out
je
ja
push
sarb
loopne
push
jno
cltd
or
or
je
sub
mov
hlt
cs
shr
in
xchg
cltd
ficompl
mov
mov
popf
jge
push
mov
mov
fwait
pushf
xchg
push
fistpl
in
leave
out
pop
in
or
fscale
mov
dec
int
mov
and
outsb
dec
loopne
pushf
ret
repnz
enter
lcall
cmp
push
xchg
ss
and
addr16
imul
arpl
sahf
cltd
std
movsl
or
xchg
and
sub
or
subl
add
lds
lahf
and
push
aaa
jo
push
rol
gs
lods
cmp
or
or
xchg
aam
xor
and
movl
xchg
out
push
subb
adc
push
add
jle
push
push
in
mov
aaa
mov
fistpll
test
mov
faddl
daa
fidivrl
test
iret
bound
inc
cmp
ret
mov
jb
loope
les
lock
mov
push
or
pop
push
pop
and
cmp
ficoms
xchg
insl
fs
fstpl
mov
pop
mov
add
fimull
cmp
lahf
std
push
and
mov
jns
push
adc
pop
icebp
dec
in
pusha
scas
popf
xor
sub
push
or
imul
js
and
mov
and
mov
sbb
or
adc
push
andb
cmc
adc
push
rcll
inc
rep
pop
insb
push
sbb
repnz
add
mov
faddp
out
rclb
jbe
sub
xorl
sbb
mov
stos
xor
cltd
cmc
lods
dec
je
inc
xchg
ljmp
rolb
cltd
jae
xchg
outsb
sub
and
cmc
add
int
or
cwtl
adc
jmp
sti
cmp
insb
and
sub
cltd
lcall
int3
add
lret
xor
lea
sub
rorl
mov
dec
mov
outsb
push
pop
popf
jno
leave
lds
out
rcll
or
cwtl
jne
loop
insb
pop
xchg
mov
and
add
mov
fnsave
leave
in
xor
and
lret
repz
pop
daa
sub
xchg
aam
or
fwait
sbb
orb
add
inc
fcmovu
xchg
pop
cmp
xor
jg
std
add
or
mov
adc
in
bound
add
enter
mov
aas
push
jno
jbe
mov
pop
popa
jnp
and
lods
sub
inc
out
dec
push
cli
in
hlt
pushf
add
inc
push
and
or
xor
lock
and
cmp
repz
scas
mov
mov
imul
push
xchg
rorl
xchg
arpl
and
jge
test
push
jno
rolb
insl
mov
cwtl
xor
pop
pop
pop
jbe
and
nop
cmc
add
cmp
ja
xor
pop
sub
xchg
jno
jae
scas
test
mov
mov
insl
incb
inc
ret
pushf
cmc
cmpsb
data16
pop
incl
cmpsb
mov
jo
sbbl
inc
push
andl
icebp
divb
dec
cmpsl
pop
push
or
fisubrs
cmp
ret
cmp
out
inc
aad
cmc
ss
cli
mov
enter
lock
shlb
jecxz,pn
popa
les
scas
movsl
in
js
into
adc
mov
test
jne
jmp
addr16
idiv
push
dec
xchg
sbb
divps
xchg
loope
test
sarb
jne
popa
js
xor
jge
jo
lret
stc
ljmp
lds
cs
or
fldl
add
jns
aad
bound
mov
push
xchg
adc
lods
sti
jmp
xor
xor
es
imull
jecxz
xlat
std
xchg
sub
fmull
mov
outsb
sbb
mov
jbe
jo
cmp
leave
outsl
into
xorl
jb
mov
mulb
pop
pop
jns
in
mov
sub
pop
stos
cwtl
or
ljmp
sbb
pusha
andb
cmp
cmp
xlat
push
and
jge
popf
xor
ljmp
mov
divb
cmc
out
adc
add
inc
fiaddl
or
jp
lds
frstor
movsb
cmp
daa
das
push
lret
or
jmp
sahf
push
inc
sub
adc
int
sarl
aad
dec
jmp
or
sti
ret
jb
cmc
shrl
mov
mov
fcom
add
adc
fs
jnp
or
dec
jp
mov
xor
subl
out
hlt
orb
and
loop
data16
jg
adc
mov
mov
push
sbb
orl
mov
sub
cli
jmp
dec
pushf
dec
addl
das
shll
aam
inc
jae
xchg
cmpsl
movsb
xchg
loop
jmp
ja
inc
pop
addr16
out
movsl
out
repz
inc
sbb
ja
js
adc
add
mov
icebp
and
xchg
je
inc
pop
inc
fadds
popf
mov
bound
popa
pushf
jo
push
xchg
and
or
jg
loope
fildll
push
jle
shll
or
pop
fisubrl
lcall
adc
and
inc
std
sbb
call
out
fisttps
les
in
aad
stos
mov
pushf
or
scas
cmpsb
add
test
out
lds
addl
mov
add
mov
cmp
jecxz
popf
jo
testb
jae
stc
dec
pop
int
mov
mov
aas
lea
je
mov
and
dec
pop
jno
inc
cltd
test
xor
mov
and
jle
fldenv
jp
dec
das
push
cmp
inc
and
dec
daa
xor
push
mov
pop
lret
sub
or
insb
push
hlt
push
stc
sbb
xchg
mov
enter
or
push
outsl
mov
ficomps
xchg
cmp
lret
shll
dec
cmp
jno
rcr
add
fcompl
jbe
mov
int
jmp
sub
mov
jbe
or
mov
lret
hlt
cli
inc
pop
sub
stc
outsb
in
imul
in
jecxz
pop
rcrl
mov
pop
sbb
sub
xchg
scas
and
dec
pop
sub
mov
inc
sbb
popf
mov
int
cmp
je
bnd
scas
std
xchg
jns
jns
and
mov
out
and
push
popf
rorl
test
mov
leave
inc
hlt
and
arpl
enter
push
pushf
mov
notb
pandn
push
sub
loopne
out
pop
faddl
pushf
ss
mov
loopne
mov
out
stos
inc
das
in
add
mov
loopne
gs
pop
in
insb
fnstsw
insb
popa
fdivrs
fcomps
cmp
pop
scas
mov
int3
call
aad
xchg
repnz
fs
xchg
pop
inc
jbe
inc
fimull
rcl
popa
movsb
clc
clc
enter
add
or
fsubl
iret
in
or
xchg
pop
divl
popl
popf
mov
push
and
mov
push
fdivrp
ret
mov
adc
fs
xlat
les
imul
xchg
sti
cmp
and
xor
aam
dec
loope
test
push
adcl
sahf
inc
mov
push
mov
shll
cwtl
ret
fadds
or
add
int3
push
hlt
mov
iret
imul
pop
lahf
test
aas
dec
in
mov
add
sti
or
cmp
dec
and
xchg
pop
inc
push
hlt
cmp
xlat
aaa
das
testb
call
stos
hlt
adc
ret
and
push
js
ljmp
fimuls
jns
loopne
push
test
adc
cmpl
test
cld
movsl
mov
xor
dec
dec
sub
cmp
test
test
sarl
push
hlt
adc
cmc
sub
movsl
xchg
lods
pop
pop
sub
fcoms
aad
adc
dec
ja
push
test
lods
add
js
lods
repz
dec
cmp
dec
push
pop
mov
add
stos
push
leave
push
mov
sbb
sahf
or
lahf
outsl
xor
pusha
sbb
in
test
mov
push
cld
stos
into
inc
ficompl
out
sbb
push
rol
add
std
sub
cmp
and
mov
lahf
nop
fwait
call
std
jp
mov
scas
cmp
mov
push
dec
sbb
add
pop
xchg
mov
sub
mov
mov
xchg
iret
shll
mov
enter
mov
outsb
adc
cmp
addb
jp
rol
mov
or
shrb
mov
dec
fisttps
inc
and
xchg
push
sub
push
cli
in
cmp
mov
das
mov
jo
and
or
mov
popa
cmp
dec
jo
scas
cmp
push
xchg
sub
mov
fnsave
mov
cbtw
or
fsubrp
or
xchg
bnd
lret
mov
or
mov
xchg
lea
aas
xchg
mov
dec
jmp
in
mov
or
mov
fiadds
pop
pop
xor
mov
rcrl
cld
jo
jbe
sub
ret
orb
or
inc
aam
cld
xchg
and
mov
pop
or
mov
pusha
cmp
xchg
cmpsl
sbb
aaa
mov
lds
jne
pop
xchg
and
or
mov
insl
popa
dec
addr16
cs
gs
adc
enter
icebp
ja
or
xor
mov
cld
outsl
xchg
or
mov
js
into
cs
sub
push
es
testb
jae
ficompl
fwait
xchg
mov
leave
add
addb
inc
std
jne
movsb
lods
mov
lods
movsl
jp
data16
cli
out
xchg
inc
sti
xor
mov
mov
repnz
icebp
mov
mov
fistpll
xchg
mov
pop
mov
mov
in
dec
jmp
xchg
sub
mov
add
sbb
daa
ret
cmp
mov
adc
pop
aas
addr16
mov
pop
xchg
mov
dec
xor
ja
fsubr
pop
pop
shl
and
adcl
sbb
dec
fsts
adc
loopne
adc
jb
inc
jb
sub
in
mov
push
mov
sub
lds
ljmp
in
das
add
push
imul
iret
mov
sbbb
dec
sub
dec
or
sahf
cmpl
pop
xlat
or
xlat
ss
mov
clc
aas
or
mov
and
clc
ljmp
in
pusha
mov
in
sbb
push
test
mov
xorl
fistl
sbb
push
sub
cmp
adc
dec
fcompl
inc
popf
sub
ret
shlb
insl
ficomps
adc
loope
jmp
loopne
fiaddl
fucomi
or
and
jno
xchg
xor
xchg
adc
fucomip
mov
cmp
sbb
incb
xor
fsubp
inc
fdivrp
test
mov
aas
dec
cmp
jg
and
adc
xchg
imulb
or
idiv
dec
loope
push
out
scas
aas
push
rcrb
mov
inc
in
loopne
cmp
inc
mov
into
sbb
cld
stos
and
sub
and
cmc
inc
out
out
xchg
or
test
imul
loopne
shlb
pop
inc
sub
mov
je
inc
jp
and
xor
jo
push
xor
ret
loope
mov
cwtl
inc
pop
mov
adc
sbb
xchg
adc
sbb
sbb
mov
int
push
icebp
adc
or
xor
push
mov
adc
dec
mov
pop
xchg
imul
movsl
cmp
sub
orb
test
enter
mov
mov
sti
sub
mov
shlb
fcomps
mov
sub
adc
ret
pop
scas
in
mov
xchg
loopne
daa
iret
pop
leave
insb
push
push
hlt
push
jl
stc
push
cmp
mov
pop
sub
imul
cmp
fsubl
push
lcall
sub
pushf
or
mov
dec
mov
and
mov
and
and
add
add
xchg
popa
ds
ds
jb
mov
xor
imul
movl
push
popa
sub
xchg
dec
push
sub
inc
arpl
pop
xlat
pop
push
fdivl
rolb
mov
outsb
stos
or
movsb
xchg
xor
ficomps
rolb
clc
dec
stc
dec
enter
call
aaa
or
mov
mov
ret
rcll
mov
jp
stos
xchg
test
inc
popa
arpl
movl
arpl
cmp
adc
movsl
dec
mov
mov
sbb
ret
andl
and
sti
mov
pushl
cmp
out
test
mov
nop
cmp
shrb
mov
xchg
std
sbbb
insb
fisubrs
outsl
cmpsb
dec
call
scas
adcb
add
or
or
pop
es
xchg
adcl
inc
mov
shl
mov
cmpsb
cwtl
in
adc
mov
ljmp
fnstcw
stc
fsubrs
mov
icebp
lock
out
or
and
mov
jl
rcl
push
lret
shll
mov
outsb
imul
aam
sbb
mov
mov
popa
xchg
inc
and
icebp
xchg
adc
mov
inc
sub
xchg
cwtl
dec
inc
sbb
ficomps
movsb
das
aas
mov
cli
cld
dec
gs
sub
cmp
pushf
push
sub
push
aaa
je
sub
jp
push
sahf
jecxz
dec
cltd
or
adc
add
testl
add
fistpll
fldl
mov
or
add
pop
or
fnstenv
xchg
inc
mov
adc
minps
add
jg
and
and
push
cld
sub
scas
push
sbb
popa
xchg
ljmp
das
mov
dec
jo
test
sbb
popf
jge
arpl
jle
dec
stos
push
add
and
movsl
jns
mov
pop
sbb
aas
lret
push
int3
repz
or
or
jp
mov
dec
sub
jmp
testb
call
mov
xor
ja
sub
popf
mov
mov
stos
sbb
lcall
dec
cmpsb
jne
pop
or
and
jg
cwtl
sar
outsl
mov
int
xor
and
mov
aad
jmp
mov
shrl
lcall
cmc
sbb
cmp
movsl
push
ja
cmpsb
lods
in
repnz
mov
test
fistps
xor
inc
pushf
mov
inc
pop
cmpsl
push
xchg
lret
sub
pop
mov
insb
adc
gs
and
jg
jnp
rorl
leave
in
mov
cwtl
adc
xor
inc
popa
notl
ret
xor
insb
movsb
and
adcl
dec
xor
movsb
lea
or
mov
loop
push
lock
mov
cmp
rcrb
flds
nop
cmp
mov
dec
call
pop
bound
fldl
lods
icebp
fwait
xchg
lods
into
add
movsb
ss
repnz
rorb
sub
imul
test
push
in
mov
cmc
and
push
clc
push
mov
xchg
sbb
outsb
lock
inc
sbb
dec
dec
add
jbe
fdivl
icebp
jg
ficomps
pop
sahf
jle
xor
adc
jae
pop
cs
push
sbb
mov
adc
in
aad
pop
mov
pop
fldcw
cmpb
mov
xchg
lret
pop
push
pop
outsb
jecxz
push
jp
outsl
repz
mov
lds
jp
push
fwait
adc
mov
int
mov
push
push
jecxz
sbb
adcb
call
mov
pusha
movsl
xchg
lods
mov
les
push
jnp
outsb
mov
sub
push
call
popf
inc
xchg
das
and
cmpsl
sete
jns
or
pop
cmpsb
lock
inc
cmpb
and
fistpl
xor
loop
xor
fstl
shrb
cltd
sbb
icebp
cs
pop
or
icebp
dec
fcompl
push
mov
dec
jge
ret
in
or
and
stos
imul
add
out
adc
jecxz
or
pop
hlt
push
sbb
pop
cmp
les
mov
mov
fsubs
pcmpeqb
cwtl
shlb
sti
sahf
jae
shlb
fmul
into
push
fmulp
aad
out
xchg
out
repz
adc
inc
rcrb
test
idivl
sub
cwtl
ret
dec
dec
pop
enter
jbe
push
mov
lea
cmp
mov
pop
ds
aas
xor
frstor
hlt
int3
xor
outsl
push
test
xchg
mov
cwtl
cltd
arpl
aad
not
mov
jne
and
je
loopne
xchg
jno
push
cld
xor
add
lahf
fldl
push
push
mov
jo
and
daa
mov
push
mov
or
and
sbb
mov
xor
lods
cmc
fbstp
loop
adc
mov
mov
jns
daa
and
pextrw
dec
jns
addr16
xor
in
and
in
notl
sbb
and
inc
andl
cmp
mov
and
or
inc
cltd
inc
cmp
ja
dec
in
push
pushf
adc
mov
fxch
sahf
leave
push
cltd
daa
inc
orl
mov
sbb
scas
and
mov
aaa
rep
js
popf
dec
jp
and
mov
cmp
or
sub
add
addr16
aad
psubusw
add
dec
jmp
fisubs
xor
repz
out
je
fcom
xchg
mov
in
mov
or
mov
aas
jmp
cmp
jl
xor
fwait
cmp
data16
cmp
or
xor
in
lret
mov
leave
insb
jp
push
dec
repnz
sbb
push
push
push
int
in
mov
aad
in
shll
gs
jg
ljmp
xchg
jmp
mov
or
xor
and
push
pop
pushf
inc
dec
xor
cmp
loopne
test
aam
push
sub
pop
fdivrs
ja
hlt
mov
addr16
dec
push
jge
ljmp
dec
cwtl
arpl
dec
and
or
jnp
jg
cmp
mov
js
outsb
lock
imul
sub
mov
and
std
test
icebp
sbb
push
xchg
rclb
fdiv
rol
lret
cmp
lea
int3
xchg
cwtl
jo
inc
pop
mov
mov
je
jbe
pop
jns
mov
sub
in
call
stos
add
add
enter
ret
or
fistl
out
fildll
js
add
pop
push
test
dec
sar
mov
scas
fisttps
mov
push
pop
fmull
iret
lods
lret
mov
jno
ds
push
push
nop
sarl
mov
and
jns
push
mov
add
mov
mov
sbb
lea
into
adc
jle
jo
xchg
mov
gs
js
pop
xchg
cmp
push
test
jbe
sbb
dec
xor
imull
jo
add
insb
ret
mov
xor
dec
sub
imul
aaa
adc
xchg
scas
sti
popf
add
movsl
push
dec
loopne
outsb
pop
jp
cwtl
fnstsw
popf
xor
and
outsl
bound
outsl
lods
jge
push
mov
jle
in
jge
call
ror
xor
lods
lcall
shr
loop
or
add
imul
fdivl
pusha
dec
jmp
nop
add
cmp
adc
nop
cmp
popa
je
js
mov
inc
sub
push
sub
aad
xchg
popf
xchg
mov
push
dec
aam
jmp
iret
cmp
fldl
inc
pop
subl
inc
push
sub
dec
out
push
bnd
sub
stos
mov
pop
add
xchg
iret
xchg
xor
cmp
clc
nop
fdivrs
push
xor
sbb
cmp
push
push
dec
leave
jl
mov
mov
lret
enter
in
inc
cmp
movsb
sbb
inc
insl
movsl
loope
int3
inc
mov
jns
pop
and
repnz
jg
in
adc
push
dec
fstpl
out
add
mov
lahf
insl
xchg
dec
loope
sbb
lcall
add
or
cmp
xor
mov
add
and
ss
lret
sub
mov
das
mov
scas
cmc
mov
mov
xor
in
and
icebp
and
cwtl
mov
jmp
js
sub
ss
std
xchg
mov
xchg
adc
cmp
jne
mov
mov
xchg
fimull
daa
movsb
loopne
pop
loope
push
mov
js
add
mov
cmpsb
in
add
mov
mov
mov
pop
xchg
pusha
jo
icebp
mov
stos
cmp
loop
pop
pop
jnp
mov
xchg
xchg
add
xchg
jb
add
in
adc
xchg
out
lahf
mov
shrb
enter
shlb
push
add
dec
roll
clc
xlat
adc
mov
outsl
cli
mov
shll
sahf
icebp
cmc
cmp
hlt
adc
xor
jecxz
xor
int3
xchg
sub
popa
push
mov
jae
fs
movsb
dec
pop
mov
mov
icebp
pushf
mov
pop
stc
sbb
out
inc
xchg
sbb
pop
ss
cmp
inc
or
scas
movsl
imul
xlat
lret
fldl
add
mov
in
arpl
xchg
std
insl
and
mov
lods
xor
rolb
adc
movsb
mov
popa
xchg
push
cmpsl
jmp
inc
out
mov
jmp
sbb
pcmpeqd
cmp
inc
fmuls
cmp
inc
mov
jge
cmp
into
gs
pop
fisttpl
mov
fbld
jp
mov
add
add
dec
or
pop
scas
push
push
push
out
push
icebp
in
lds
aam
test
and
mov
and
jnp
pushf
test
scas
loopne
in
inc
sbb
lret
iret
sub
xor
shlb
cmp
push
jmp
mov
rol
in
cmp
cmp
in
cmc
xor
xor
xor
loope
in
scas
dec
pop
test
push
ds
xor
call
jge
test
mov
loopne
inc
dec
mov
test
push
pop
dec
mov
lock
mov
push
cmpsb
and
mov
mov
xchg
aad
pop
add
leave
sub
push
lret
sbb
pop
nop
inc
inc
popf
cmp
dec
dec
add
cmp
inc
inc
cmp
xchg
inc
pop
lahf
xchg
inc
jl
or
cwtl
xchg
daa
movsb
push
and
sub
jg
sub
rorl
sbb
aad
pop
sub
sub
sbb
imul
pop
test
ljmp
sub
mov
cmp
adc
jge
test
mov
mov
out
mov
adc
jne
repnz
shr
imul
inc
ds
stc
stos
dec
xchg
dec
insl
inc
insb
adc
ds
push
xchg
sub
clc
lods
sbb
mov
sub
call
js,pn
stc
dec
bnd
mov
mov
cmpsl
xor
add
jp
loop
and
jge
xor
sub
adc
aaa
push
sub
outsb
sbb
jns
push
jg
jne
sub
pop
jo
jg
js
sub
mov
sbb
and
sbb
cld
jb
fcomp
into
aaa
stos
jmp
xchg
scas
outsl
push
mov
pop
je
das
addr16
xor
aaa
test
bound
mov
jne
jg
cmp
sbb
outsb
pop
jg
adc
scas
insl
inc
add
daa
sbb
mov
jo
cmp
scas
push
ds
stos
mov
push
leave
mov
loope
adc
jne
jl
push
jg
xor
pop
in
sbb
cmpsl
arpl
xchg
fmuls
pop
daa
in
add
out
xlat
data16
add
pop
fidivrl
lret
adc
sbb
insl
shl
or
in
pop
or
pop
xchg
imul
lahf
pusha
jno
addr16
xor
dec
mov
xlat
pop
pop
adc
cwtl
add
iret
data16
mov
or
add
call
int
cmc
pop
loop
pop
sbb
sbb
icebp
sub
jnp
jno
mov
jnp
movsl
ljmp
jmp
scas
sub
sbb
add
pop
dec
mov
mov
outsb
add
shlb
aaa
sbb
adc
jg
movsl
pop
push
pop
mov
or
movsl
mov
mov
int
test
push
mov
cmc
dec
shl
mov
fdivrs
cmpsb
shlb
fcomps
adc
jge
xor
inc
push
push
mov
shrl
cli
mov
pop
jge
arpl
aam
stos
and
fmull
jmp
xchg
popa
fdiv
xchg
ds
adc
mov
adc
in
std
mov
divb
jbe
mov
pop
fcomps
lret
enter
das
inc
adc
and
inc
or
stos
cltd
push
js
mov
jnp
or
mov
lret
out
dec
push
or
insb
fisubs
mov
imul
xchg
mov
aaa
cmp
jb
xor
pop
jl
xor
or
inc
lcall
bound
mov
mov
jmp
sbb
in
call
mov
and
imul
mov
negl
mov
sbbl
and
push
in
sub
ds
mov
jle
or
xchg
mov
test
xor
lds
xchg
mov
jle
pop
cmp
jmp
shll
dec
je
aad
js
out
fxch
dec
adc
add
call
xchg
push
out
xchg
jns
jg
push
negl
mov
pop
ret
imul
cmp
icebp
and
mov
xchg
int
movsb
and
bound
addr16
and
adc
dec
in
xor
pusha
js
pushl
or
data16
push
sbb
pop
out
add
test
push
negl
mov
dec
sbb
and
jp
popa
sti
lods
mov
cmp
popf
xchg
test
xchg
lahf
outsb
mov
mov
test
jno
lahf
clc
mov
cmpsl
cmpsl
mov
repnz
sub
mov
push
out
icebp
ret
shr
sbbb
movsb
pop
fwait
out
sarb
or
loopne
push
movsl
push
mov
aad
out
outsl
inc
xchg
mov
xchg
sub
or
push
sub
add
mov
pop
xchg
arpl
loope
push
rcrb
out
std
mov
movsb
daa
lahf
bndldx
test
xor
test
leave
outsl
xor
push
insl
push
lahf
jne
or
lods
adc
mov
idivl
lret
dec
jbe
std
enter
rcrb
loopne
xor
es
out
xchg
call
mov
lahf
stos
sub
cli
or
fisubs
fwait
pop
hlt
push
fdivrl
cmp
mov
jns
mov
dec
insb
mov
mov
stos
test
sbb
adc
outsl
insl
popa
addl
sub
jo
aas
lret
push
inc
movsb
dec
dec
push
sbb
push
int3
sbb
jnp
aas
mov
mov
or
mov
repnz
xor
adc
scas
in
jecxz
sub
adc
pop
sbb
shlb
jnp
and
pop
mov
push
dec
xchg
mov
jnp
scas
dec
lret
jne
lcall
sbb
shl
sub
test
jbe
inc
ds
orl
fucom
sub
test
push
push
pop
mov
push
pop
or
mov
daa
and
gs
sbb
scas
mov
adc
fldcw
cmpsb
xchg
inc
or
dec
je
out
jns
mov
jne
mov
cmp
adc
add
addl
pop
aaa
pop
test
jne
rcll
insb
popa
inc
pop
test
mov
inc
push
sti
daa
in
inc
mov
out
and
mov
mov
adc
adc
movsl
shl
xchg
sub
push
dec
out
movsl
push
pop
neg
xor
enter
sub
clc
test
xchg
sbb
mulb
out
pop
mov
mov
and
jmp
cmpsb
xor
mov
sub
push
pop
imul
push
stos
fstps
inc
sub
pop
mov
adc
dec
lahf
sahf
int3
arpl
push
jne
add
outsb
jg
pop
jmp
mov
mov
loop
std
xchg
jo
xchg
adc
push
mov
jmp
pop
xlat
loop
mov
add
ds
mov
repz
pop
movsb
dec
fwait
movsl
jge
and
daa
fldenv
or
adc
dec
adcb
iret
xchg
mov
stc
outsb
mov
pop
push
mov
call
adc
lret
daa
push
mov
jbe
push
mov
inc
lods
je
lret
sti
icebp
mov
out
pop
mov
imul
add
jns
add
jnp
pop
sbb
push
jmp
add
aas
lock
push
in
fs
fldcw
pop
xlat
ret
out
mov
loope
and
bound
aas
outsl
xchg
inc
fistpll
pop
adc
cli
out
sub
lret
test
sahf
push
mov
les
sbb
add
jns
lods
cmp
mov
dec
stos
xchg
lcall
nop
pop
or
mov
test
fwait
lods
pop
pushf
lods
ss
test
or
pop
jecxz
mov
xchg
push
scas
rorl
loop
add
dec
push
inc
outsl
les
fwait
enter
and
lods
jp
cmp
fcmovbe
bound
xor
sub
ss
jl
roll
sbb
dec
sbb
test
ss
addr16
dec
and
adc
lret
in
bnd
imul
std
loope
pop
lds
mov
jbe
mov
sub
insb
mov
dec
filds
push
mov
xchg
dec
test
cmpsl
shll
push
shlb
sub
inc
cli
add
mov
out
jge
movl
dec
add
mov
xchg
and
jge
lds
and
pushw
dec
cld
fs
add
aaa
movsl
pop
xor
lods
repz
and
repnz
in
sbb
or
std
lret
and
mov
xchg
dec
mov
sbb
stos
testb
outsl
mul
dec
je
sub
mov
xor
xlat
or
rclb
pop
in
push
daa
fnsave
pop
or
pop
inc
fsubp
popa
in
sar
mov
lret
pop
jmp
fsubrl
cmpsb
gs
notl
sbb
ss
fistpll
xor
xchg
push
fcmovu
add
ret
mov
inc
cli
dec
jne
jnp
ss
dec
push
adc
in
stos
jno
adc
aaa
sbb
dec
push
inc
mov
sub
lret
iret
loopne
loopne
sbb
push
pushl
pushf
cmp
dec
out
push
test
mov
jmp
mov
das
jmp
pop
scas
lcall
jne
lahf
mov
js
aaa
std
xrelease
jo
pushf
popf
sub
sbb
push
cmpsl
jbe
pop
cmp
int
xchg
dec
fstl
sbb
lret
imul
mov
repnz
push
mov
lret
mov
test
push
outsl
and
pop
frstor
mov
addr16
movl
es
ja
pop
arpl
out
stos
stos
movsb
fwait
xor
int3
pop
or
rorl
mov
jmp
mov
sbb
mov
xchg
clc
cwtl
or
and
call
cmp
mov
fbstp
movsb
mov
jg
inc
lea
mov
clc
mov
insb
add
and
fisubl
or
cmp
rcrb
sbb
pushf
out
mov
mov
sbbl
loop
fisubs
call
mov
inc
cmp
mov
xchg
add
out
scas
push
and
aaa
or
add
sbb
outsb
out
sbb
bnd
add
xor
inc
int3
lea
pusha
cmp
hlt
icebp
rcr
sahf
imul
dec
rolb
imul
in
lcall
push
sbbb
mov
mov
inc
test
rolb
lea
jae
insb
xchg
cmp
decl
std
jmp
rcrl
in
daa
test
cmpsl
jmp
xlat
pushf
pushf
subb
je
fs
loopne
fs
into
push
xchg
aaa
movsl
dec
mov
mov
add
pop
mov
incl
mov
and
xchg
mov
sub
dec
cmp
xchg
dec
aas
push
mov
arpl
cmc
jns
mov
or
gs
std
out
dec
adc
mov
out
pop
arpl
int
or
cmpsl
repnz
jle
cld
shr
shr
fcoms
push
popf
cli
outsb
decl
dec
mov
shl
gs
stos
pop
xchg
xor
int
lods
lret
cmpsl
sub
inc
mov
adc
out
push
inc
in
repnz
mov
and
push
or
xlat
add
test
push
cmpsl
and
shll
xchg
mov
popa
and
or
cmp
lcall
xorb
cltd
xchg
mov
pusha
push
xor
fnstcw
imul
popa
imul
lods
xor
mov
push
add
mov
andb
and
icebp
inc
inc
jns
xor
cmpsb
or
mov
and
fdivp
sbb
or
js
movsb
mov
cmp
cmp
mov
arpl
in
inc
xor
jle
or
aam
shrl
add
adc
and
iret
dec
ja
pop
pop
ja
scas
test
jbe
cmp
popl
push
sub
mov
inc
dec
fnsave
andl
inc
imul
call
add
out
js
adc
popf
adc
pop
stos
mov
push
insb
add
test
mov
nop
fidivs
fs
xor
or
fcomi
jp
pop
stos
jle
adc
pop
arpl
in
or
inc
mov
and
enter
lcall
inc
out
aaa
sub
mov
push
jns
sbb
inc
xchg
outsb
cmp
leave
cmp
stos
fadd
cwtl
pop
jns
scas
sbb
lods
xchg
jmp
mov
int3
or
inc
or
inc
in
mov
fistl
call
ss
sar
adc
xor
orl
rcrl
mov
push
xor
dec
push
shlb
rclb
add
add
mov
js
mov
in
mov
add
out
orb
cmp
daa
push
dec
fdivrs
dec
inc
or
or
xchg
xchg
jae
mov
adc
sub
push
jae
pop
add
xchg
jno
add
mov
mov
sbb
jmp
mov
or
popw
inc
or
mov
pop
jg
xchg
or
push
and
adc
mov
or
arpl
outsl
das
pop
aas
fsubl
add
mov
fadds
push
fwait
call
pop
pop
sbb
outsb
aaa
leave
xchg
loope
cmp
push
aaa
sbb
push
inc
pop
test
shrl
arpl
nop
push
bound
shll
sbb
sbb
xchg
xchg
ror
js
inc
call
lea
xchg
popf
lods
out
and
cmp
fisubrs
ljmp
push
sahf
in
cld
dec
mov
cmp
in
xchg
sbb
add
jo
incb
inc
scas
loopne
fcomps
push
sub
jle
adc
popa
add
jg
bound
fdivl
ffreep
mov
push
jecxz
test
mov
fistl
divl
loop
lahf
out
ja
loop
cld
and
dec
arpl
sub
sbbl
les
fwait
data16
inc
imul
sbb
jmp
in
imul
loop
in
std
pop
lods
cltd
dec
cli
and
inc
adc
inc
push
loopne
sub
mov
xor
rolb
push
push
jae
pop
inc
leave
shr
xor
adc
jge
cmp
jmp
dec
pop
or
pop
mov
add
outsl
xchg
stos
stc
add
int
int
loop
fnstsw
test
stos
leave
enter
cmp
inc
and
jnp
inc
imul
dec
xlat
and
sarl
and
add
inc
or
jnp
popf
and
lds
dec
loopne
fsubp
sub
cld
aam
addb
jp,pt
repz
pop
xor
lret
lret
pop
push
shlb
mov
and
sub
fwait
cld
inc
ret
in
daa
filds
or
aaa
roll
ror
fadd
adc
ret
inc
movsl
popf
mov
sbb
dec
mul
cmp
lods
dec
pop
jge
adc
ljmp
es
aam
xchg
cmp
cwtl
repnz
or
mov
inc
mov
and
sahf
adc
fsubl
xor
in
cs
loope
addr16
jecxz
mov
test
fidivrl
arpl
mov
mov
hlt
mov
imul
sbb
lds
sbb
shl
stc
xchg
sub
xlat
dec
jl
scas
outsl
out
add
jmp
test
cmpsl
pop
pop
xor
or
stos
dec
shrl
and
js
push
pushw
fdiv
aam
int
push
pop
jns
mov
jmp
stos
cmp
push
ljmp
dec
lcall
jnp
inc
push
sbb
test
add
dec
lcall
sbb
gs
ljmp
movsl
ljmp
hlt
sbb
js
mov
cwtl
out
jae
xlat
or
in
cltd
loopne
dec
cmpsb
cmc
adc
enter
lods
mov
jbe
sahf
xchg
dec
inc
mov
js
mov
int
sub
lahf
mov
loope
ljmp
xor
ret
push
cmp
cmc
test
in
or
imul
scas
pop
adc
mov
nop
lcall
cmp
mov
sub
and
ret
push
sub
push
negl
lahf
nop
leave
cmpsl
mov
pushf
sbb
sbb
cmc
in
sbb
out
loope
inc
mov
stc
mov
add
xor
insb
daa
push
imul
or
adc
xchg
popa
dec
push
repz
xchg
mov
std
or
cs
addr16
and
testl
mov
mov
jne
dec
xchg
push
jne
dec
xchg
fistpll
sbb
call
jecxz
negl
sti
rcll
jge
sbb
pop
lret
sbb
sbb
pop
call
pop
or
push
sub
mov
and
int3
in
mov
data16
add
mov
jmp
nop
add
xchg
pop
jmp
stos
lds
mov
loope
xchg
sahf
xor
jno
lods
sub
lret
insb
loope
fcmovnb
xor
decl
shrl
dec
push
mov
inc
sbb
fwait
xchg
mov
inc
aas
sub
sbb
xor
push
sub
ss
popa
push
inc
inc
pop
xlat
insb
orb
cmpsb
add
fmuls
scas
mov
gs
jns
ret
stc
push
daa
stos
mov
aam
mov
push
sub
jp
loope
inc
pop
fnstenv
das
lods
adc
lds
popa
sbb
mov
and
dec
iret
out
mov
enter
lods
xchg
or
and
ja
mov
push
jg
mov
inc
sbb
js
popa
in
addr16
test
ljmp
push
gs
xor
aam
mov
lret
xchg
rcrl
scas
rorb
sub
sbb
lahf
mov
and
mov
pop
outsb
aas
sub
xchg
shll
xchg
neg
fadds
sbb
pop
mov
lea
daa
lret
addr16
test
ljmp
cld
mov
sarb
stc
popa
push
and
cltd
not
leave
or
mov
mov
and
adc
fldenv
scas
in
jo
mov
inc
jbe
rorl
cltd
inc
push
jnp
clc
mov
jge
cmpsl
push
push
mov
and
mov
std
cmp
mov
testl
lret
sub
pop
push
roll
jb
adc
sbb
fdiv
movsb
inc
jbe,pt
out
jne
xor
fyl2xp1
popa
int3
push
sub
add
ret
repz
mov
jg
push
fadds
das
push
ljmp
in
sub
xor
adc
fnstcw
and
mov
xchg
rcrb
or
arpl
cmpsl
or
outsb
inc
daa
add
xor
inc
mov
xor
dec
and
nop
mov
jmp
fsubrl
ret
subl
mov
inc
add
stos
loopne
push
mov
push
sti
cwtl
js
xchg
cmp
pop
adc
jnp
dec
dec
xlat
out
mov
and
cmp
mov
mov
in
xchg
mov
dec
dec
sbb
push
mov
jns
adc
test
mov
jne
xor
in
pop
adc
lahf
xor
int
hlt
cmp
inc
dec
sub
cwtl
mov
push
ret
test
lcall
or
xor
test
jb
xchg
repnz
mov
fsubrs
adc
pop
imul
sbb
lret
xchg
xlat
adc
out
pop
sub
aas
stos
xlat
clc
ret
mov
push
xchg
in
shlb
and
cwtl
insb
enter
lock
mov
or
in
call
cmp
nop
xrelease
sbb
or
addr16
adc
xchg
pop
vpmadcswd
mov
jl
and
push
frndint
lea
push
lods
in
jg
lock
dec
mov
subl
test
and
sahf
sbb
push
mov
xchg
shll
test
mov
repnz
sub
sti
sub
or
insl
mov
mov
jae
cltd
sbb
sub
mov
popf
ljmp
push
nop
mov
fildll
mov
sub
or
rcll
push
xchg
mov
mov
add
xor
dec
dec
sbb
stc
insb
inc
scas
xchg
push
push
repz
jo
adcl
stc
xchg
cmpsb
leave
and
adc
sbb
test
aas
jae
cmp
mov
mov
xchg
lds
push
shlb
inc
or
inc
push
xchg
test
je
cli
cmp
mov
and
ja
mov
inc
test
mov
movsl
add
add
stc
notl
lods
xchg
mov
mov
mov
and
sbb
push
fisttpl
sub
xchg
call
xchg
stc
and
mov
ja
das
popf
mov
pop
fwait
pop
add
sbb
outsb
loope
xchg
push
adc
cmpsb
jmp
sahf
mov
insl
ljmp
lock
and
nop
mov
sbb
dec
sbb
push
out
sub
das
das
push
jnp
fcmovu
outsl
or
adc
xchg
shll
or
sti
and
mov
jne
mov
lock
in
pop
mov
ljmp
aad
pop
nop
mov
mov
aam
ljmp
ja
movsb
ljmp
roll
cwtl
test
orb
ficompl
cs
nop
mov
mov
dec
out
ret
push
push
push
jb
jo
iret
add
jo
cmc
mov
dec
add
jnp
and
rorb
aam
rorb
test
addl
cld
mov
adc
inc
test
out
popl
jb
out
ret
lahf
loop
fldenv
jo
je
lock
imull
mov
dec
xchg
lcall
push
das
dec
mov
lret
std
jp
in
mov
repnz
psubsb
inc
inc
and
xlat
lret
sbb
mov
enter
cmp
addr16
xchg
imulb
mov
popl
sub
cmpsl
jge
adc
sbb
and
xchg
shl
clc
roll
fnsave
roll
mov
jae
in
cmp
push
pop
or
add
gs
inc
stc
pop
xor
jg
in
inc
aad
push
fldcw
lea
hlt
adc
jmp
iret
pop
fbld
add
jb
sbb
das
mov
jno
mov
enter
mov
pusha
xchg
scas
les
popa
orb
mov
jmp
das
loop
addr16
icebp
out
xchg
xchg
jbe
pop
scas
cmp
outsl
fldenv
fstpt
push
inc
popf
stos
and
pop
aam
xchg
lds
xchg
pop
sub
pushf
adc
ds
and
sti
sbb
mov
mov
sahf
sub
push
fnstsw
and
xor
sbb
mov
push
lret
sub
in
movsb
add
add
jmp
fistps
mov
mov
jle
xor
stos
xchg
xchg
xchg
ss
popa
aam
or
mov
ret
xor
jmp
loopne
inc
das
mov
stos
sbb
xlat
mov
aad
aad
and
rsm
sbbb
mov
adc
inc
pusha
cmp
sbb
pop
pop
inc
enter
add
jg
insl
push
jge
outsl
xor
sbb
dec
out
xchg
inc
pop
jmp
dec
dec
notb
lods
sahf
xchg
inc
xor
loope
enter
mov
dec
jns
fmuls
inc
ljmp
das
sub
out
out
rcl
fstpt
cs
jg
dec
and
and
insb
outsl
popf
fs
in
sahf
sub
test
cmpl
ret
mov
out
jle
add
gs
mov
in
cmp
jo
out
cs
loope
js
sbb
dec
push
or
dec
push
inc
loope
cld
mov
or
arpl
cmpsl
jb
cwtl
xor
lods
nop
push
mov
aad
into
call
test
fnstcw
ret
sbb
mov
push
shrb
lods
mov
xchg
test
push
mov
mov
aam
dec
mov
sbb
mov
cs
mov
mov
and
jp
dec
nop
negl
jle
xor
pop
movsb
fwait
in
or
inc
inc
inc
cltd
pop
or
mov
nop
push
cmp
call
sbb
jbe
jnp
push
xchg
enter
das
aaa
daa
xor
and
mov
iret
add
jl
mov
rclb
ret
dec
ljmp
mov
jo
pop
rol
addl
fistps
pushf
or
and
add
adc
push
dec
arpl
adc
adc
lret
out
loopne
cs
cmc
sub
xor
in
mov
in
aam
pop
jmp
clc
add
dec
jbe
xchg
xchg
das
and
lret
mov
mov
cs
inc
inc
xchg
inc
mov
leave
fdivrp
dec
add
push
push
fisttpl
ret
mov
jle
inc
fsubrl
test
adc
pop
jno
mov
std
dec
repz
mov
jb
xorl
setno
clc
push
imul
fs
pop
rorb
mov
icebp
push
cmp
insb
lcall
pusha
mov
in
cmc
in
mov
jmp
rcr
fsubr
mov
inc
aad
or
nop
push
or
mov
push
mov
fisttpll
mov
sahf
repnz
into
push
shlb
stos
notl
in
mov
xchg
adc
xlat
push
xor
int3
mov
inc
jns
call
add
sbb
lock
jnp
sub
or
pushf
dec
jnp
dec
mov
mov
ljmp
mov
shll
iret
pop
jl
mov
xor
gs
adc
rol
add
xlat
shlb
mov
cmpsl
inc
lret
fsubl
outsl
fstl
and
inc
add
stos
mov
jnp
sbb
outsb
xor
outsl
js
int3
sbb
popa
insl
cmp
hlt
xor
scas
cmp
dec
jecxz
daa
or
pop
shlb
ja
aad
mov
jge
mov
std
out
jmp
adc
xor
push
call
ds
mov
fcoml
sbbb
mov
push
fsubl
cwtl
jne
pop
push
push
dec
pushf
cmc
mov
mov
xor
ja
adc
jns
enter
sbb
xchg
or
out
xlat
jge
dec
sbb
mov
test
daa
cmp
sub
mov
push
popa
xchg
and
lahf
sbb
jns
push
jbe
ret
stos
jl
mov
popa
mov
addl
out
lcall
ret
inc
fimuls
mov
add
subb
jl
ror
ljmp
call
fsubl
fldt
int
fldl
adc
xor
js
dec
add
cmp
and
notb
lret
leave
xor
push
jmp
out
jl
jp
sub
push
mov
cmp
loop
dec
dec
int
mov
ljmp
popf
imul
stos
divb
adc
pop
sbb
cmc
test
mov
mov
iret
dec
or
fs
loop
push
push
test
fisttpl
scas
inc
push
adc
cld
test
popf
or
sbb
xor
clc
fildll
jae
scas
lahf
std
ja
dec
loop
lea
ljmp
ficoml
or
pop
je
cs
or
pop
push
cltd
sub
xchg
bound
xor
and
mov
mov
or
pop
xlat
and
sbb
repnz
in
les
mov
jns
cli
xchg
sbb
lahf
movsl
add
and
ja
mov
adc
and
jnp
dec
add
add
idiv
mov
arpl
ret
push
js
add
push
ja
das
pop
test
out
in
sub
mov
les
add
cmp
daa
push
imul
adc
jo
pop
punpckhbw
aaa
push
or
fistpl
ja
mov
cmp
dec
test
popa
and
in
or
jns
mov
xchg
inc
sbbl
sub
adc
sahf
imul
add
sub
pop
or
mov
mov
loop
in
inc
xchg
xchg
movsb
insb
sub
mov
push
push
sbb
jae
cwtl
jno
mov
loop
decb
xchg
mov
mov
dec
in
xor
mov
cwtl
sbb
xor
xlat
add
adcw
addr16
xor
insl
add
mov
sub
cmp
jmp
xchg
lods
mov
cmp
jp
pushw
lret
fnstsw
mov
aaa
ret
dec
cmc
dec
adc
fs
fildll
push
fs
jno
pop
mov
sbb
mov
pop
pop
in
shr
cmc
pop
cs
pop
xlat
sbb
ljmp
imul
sbb
mov
sub
xchg
xor
mov
jb
and
icebp
inc
add
cmp
fwait
outsb
out
mov
out
mov
jbe
stc
lea
hlt
jecxz
pusha
mov
pusha
pop
cmc
repnz
bound
cmpsl
fbld
inc
and
jb
mov
mov
fld
add
and
or
dec
lods
lret
int
jo
jmp
scas
pop
scas
sub
push
xchg
pop
push
addr16
sti
dec
test
clc
add
rcrl
mov
int3
sar
shr
pop
adc
int
mov
outsb
xchg
addr16
out
leave
xchg
scas
xchg
bound
decl
pop
addl
mov
pop
xchg
ljmp
add
pop
sbb
fdiv
sbb
jno
cmp
push
scas
jle
or
test
mov
jns
mov
jb
scas
scas
imul
testb
scas
test
xor
cwtl
lods
fwait
sub
mov
inc
lods
cltd
pcmpeqw
push
sub
cmpsb
stos
mov
mov
addb
aam
popa
popa
xor
jae
movsb
xchg
inc
mov
lret
push
push
xor
sbb
push
fwait
dec
orb
mov
bound
add
mov
movsl
jbe
dec
cs
and
in
sub
cmp
cwtl
loop
into
sub
ss
xchg
ret
stc
and
adc
leave
cmp
arpl
mov
push
in
fxch
inc
cwtl
jae
cmp
cmp
add
sar
movsl
adc
pushf
mov
fisttps
out
cltd
cli
mov
lds
inc
adc
lret
dec
mov
pop
jge
add
dec
jae
test
hlt
fisttps
cmp
decl
adc
aaa
bound
xor
call
jecxz
adc
push
lret
pop
mov
test
js
dec
cmp
pop
sbb
dec
dec
push
adc
aas
mov
fdivr
cld
mov
xchg
dec
fimull
les
arpl
test
out
sarl
mov
mov
push
jle
fisubl
jnp
push
in
sbb
fcmovnb
ret
mov
and
mov
xchg
orl
roll
loope
add
jge
adc
sub
cld
int
faddl
mov
mov
inc
mov
jge
test
cld
pop
add
sbb
out
push
pop
push
aad
push
or
scas
lahf
dec
dec
mov
daa
ret
xorb
cld
inc
dec
ret
jae
inc
jge
les
and
in
repnz
ljmp
aaa
jae
pop
jg
sti
shll
icebp
insb
pop
into
dec
lock
inc
mulb
aas
add
fimull
sub
fimuls
nop
mov
sarb
xor
in
pop
repnz
in
cmp
push
dec
mov
dec
into
mov
mov
imull
out
cmpsl
ss
in
loop
js
xor
ja
lds
loop
out
and
mov
aaa
sbb
fsubl
add
lcall
cmp
shlb
pop
adc
and
push
ja
in
cwtl
xchg
push
das
xchg
mov
insl
mov
pop
es
mov
mov
add
rdpmc
xor
aam
js
push
gs
adc
dec
lock
addr16
sub
mov
jb
and
mov
lcall
data16
and
in
cli
stc
sbb
add
clc
or
rcrl
mov
sub
or
jo
lret
aam
mov
idivb
shlb
lahf
mov
rclb
jg
push
cmpsl
xor
add
test
pop
inc
push
xchg
xor
pop
lcall
sti
popa
rclb
fbstp
adc
stos
mov
or
popf
daa
fsubrs
inc
or
add
in
push
cs
mov
mov
cwtl
jne
les
lods
repnz
mov
dec
sub
lret
jbe
xchg
jo
inc
shlb
xchg
sub
push
mov
movb
rolb
mov
enter
jne
gs
out
ds
inc
int3
outsl
jge
fwait
xor
jl
lds
jae
insl
bnd
or
lahf
mov
cld
add
divl
aas
pushf
in
xchg
or
xchg
dec
lods
and
inc
xchg
inc
sbb
adcb
pushf
and
mov
scas
stos
imul
xchg
idivb
cmovge
jg
cmp
cmp
cld
aas
out
jb
jge
mov
fwait
imul
sbb
hlt
and
repnz
int
sbb
daa
not
push
xor
or
sub
add
out
notl
insb
repz
fdivrs
das
stos
sub
imul
divps
mov
xchg
filds
repz
pop
scas
in
movsb
sub
pop
xchg
mov
out
ret
adc
xor
mov
repnz
cmpsb
jmp
ret
dec
sbb
loopne
push
xchg
cmpsb
mov
xor
fdivr
mov
rcll
movsb
sbb
cmpsl
jnp
xchg
mov
jnp
enter
mov
push
fbstp
int3
and
popa
xorl
push
mov
xchg
pop
aas
sbb
and
xchg
orl
shrl
cli
mov
into
xor
inc
xor
hlt
xchg
fisttps
mov
lret
mov
sbb
iret
frstor
push
test
ljmp
pop
into
inc
push
jnp
sahf
mov
xchg
and
xchg
jne
fwait
js
icebp
adc
rcl
call
jge
movsl
push
int3
pop
cwtl
or
pusha
cli
gs
sub
and
aam
mov
cmp
faddl
sbb
pop
imul
sbb
fcmovnb
js
add
jp
or
dec
jmp
dec
push
jno
xchg
dec
je
fstl
mov
bound
daa
push
pusha
icebp
push
add
ljmp
xor
and
sahf
mov
push
dec
add
xchg
pop
inc
push
nop
pop
stos
xor
scas
and
movsb
std
mov
lods
dec
sbb
je
stos
push
inc
cwtl
jno
mov
xchg
jno
and
push
sub
clc
sub
dec
es
xor
jno
out
cmc
cmpsl
jle
int3
cmpsl
or
xchg
ret
rcl
stos
aas
sub
sahf
pop
mov
xchg
xchg
inc
sbb
dec
mov
inc
sti
sbbl
jno
sbb
bound
das
xchg
xor
insl
sbb
pop
jp
pushf
jno
push
and
add
inc
inc
lods
mov
dec
mov
push
push
sysenter
outsl
xor
or
popa
out
xchg
dec
iret
ror
mov
mov
xlat
jge
fcomps
xor
inc
mov
das
aam
jae
xchg
scas
push
clc
cmp
and
stc
in
pop
inc
sub
hlt
pop
dec
movsb
shrb
xchg
in
pop
add
pop
insl
insl
test
in
mov
cmp
cmpsb
xor
and
loopne
loopne
xor
jb
and
and
or
add
loop
inc
dec
xor
pop
in
jnp
adc
fiadds
or
and
push
pop
sbb
sbb
aad
and
mov
es
test
push
inc
in
dec
fdivrl
mov
fistpl
xor
inc
int
cld
push
xor
arpl
sub
lahf
sbb
pusha
std
pop
test
movsb
cmp
xchg
std
or
fdivl
jmp
je
leave
mov
fdivl
stos
imul
xor
push
adc
xor
xchg
int3
mov
jo
scas
cltd
fnstenv
cmp
jge
sahf
mov
cmp
xchg
mov
jo
xchg
mov
out
mov
gs
mov
outsl
jno
ret
xchg
mov
fiaddl
subl
pop
xchg
hlt
sub
or
repz
adc
sub
sbbb
adc
outsl
sbb
cwtl
mov
lods
xor
xchg
cld
loope
outsl
add
inc
repnz
mov
jmp
jno
push
jle
rcl
fimuls
sbb
jnp
mov
fs
fsubrs
sub
mov
out
in
adc
xchg
and
js
sbb
push
mov
jno
lcall
lret
rclb
dec
adc
jle
cmp
dec
js
movsb
gs
or
xchg
cltd
fisubl
cmpsl
pop
in
cli
xor
popf
mov
push
xor
out
add
add
out
sub
xor
sti
imul
scas
movsl
mov
jo
in
scas
xor
daa
popa
je
mov
lods
lds
leave
nop
xchg
movsb
jmp
in
xchg
push
push
adc
xchg
pop
loopne
push
shll
lods
xchg
pop
mov
mov
lods
and
dec
or
imul
jbe
jne
dec
push
call
push
rolb
clc
int
les
push
test
mov
xchg
xor
jl
cmp
sub
outsl
pop
dec
ficoms
cmpsb
enter
addr16
rcrb
pop
aam
pop
scas
iret
mov
hlt
mov
mov
add
test
mov
sbb
xchg
jecxz
insb
add
sbb
cmc
push
xor
loope
mov
or
jl,pn
popf
test
xchg
cli
neg
outsb
push
xchg
hlt
in
repz
andb
jbe
mov
sub
mov
cmp
mov
mov
ja
push
call
pop
dec
jbe
xchg
cltd
scas
rcrb
cmp
rcll
daa
scas
dec
push
mov
in
rcrl
ljmp
mov
stc
or
push
sub
movsl
or
sbb
cmc
paddd
jg
xchg
aad
or
adc
jle
decb
adc
cmp
xor
xor
inc
xor
push
xor
out
and
pop
or
fldl
addr16
sbb
or
in
int
les
pop
adc
xchg
cltd
jmp
test
add
cmpsb
dec
pop
repz
bound
jge
sbb
push
jbe
mov
imul
pusha
lret
xlat
out
stos
addr16
add
inc
data16
sahf
pop
mov
sbb
fmull
pushf
mov
scas
icebp
aas
pop
mov
sub
ret
and
mov
mov
mov
xchg
jno
pop
scas
loope
pusha
inc
fmul
push
cltd
pushf
rolb
xchg
jb
dec
rorl
sbb
daa
push
sbb
or
gs
lret
lret
push
mov
pop
push
scas
or
pop
fisubrs
cmpsb
sub
push
cmp
add
or
push
pushf
xchg
add
jp
arpl
fs
scas
test
sub
push
inc
push
jnp
das
xchg
js
shlb
setl
fisubrl
mov
dec
mov
adc
pop
les
cmp
pop
insl
out
jg
lret
cmp
jge
test
es
xchg
addl
in
clc
xchg
sti
mov
xchg
mov
cld
mov
fs
sub
cmp
jno
mov
mov
and
pop
dec
add
push
mov
ljmp
dec
cmp
test
adc
add
ds
mov
insl
das
mov
enter
movsb
jecxz
cmp
mov
push
es
push
dec
enter
cli
mov
fs
or
inc
mov
pop
add
stos
adc
jl
inc
dec
mov
or
jmp
fwait
cmpsb
sahf
cmp
out
les
mov
out
sub
adc
mov
xchg
pop
mov
mov
push
stos
push
daa
pop
cli
js
xor
mov
into
sbb
mov
test
cmp
mov
jno
inc
adc
sti
out
mov
sahf
adc
push
lret
test
stos
xor
jle
mov
add
jle
mov
mov
dec
cwtl
adc
inc
testb
xor
sub
xchg
in
sub
pop
adc
inc
out
jp
mov
aas
jge
lret
clc
cli
aad
cmp
and
or
xor
gs
movsb
adc
out
push
jae
push
daa
xlat
mov
aam
ja
add
testl
mov
jmp
mov
repz
imul
ret
test
mov
fstps
push
iret
mov
pop
and
jne
jmp
inc
pop
xor
jo
xchg
mov
inc
repnz
push
mov
ljmp
push
mov
pusha
add
cs
leave
cwtl
inc
test
mov
call
xchg
jecxz
flds
lods
and
fisubs
add
inc
push
out
dec
dec
fidivl
pop
cmp
mov
push
adc
test
push
jae
adc
sbb
mov
mov
icebp
mull
ja
lret
in
hlt
mov
shl
sar
push
femms
mov
and
std
dec
jae
mov
andb
lock
sub
cmpsl
lds
cld
leave
sub
pop
js
jg
fidivrs
insl
push
dec
clc
inc
add
pop
out
rcrl
mov
adc
cmp
mov
popf
imul
sbb
cwtl
and
and
sahf
scas
movsb
call
in
das
imul
and
sbb
cld
dec
xor
imul
fs
mov
sbb
pop
iret
cli
adcb
lods
add
in
mov
jae
sbb
adc
xchg
iret
dec
mov
cs
or
jp
movsl
int3
mov
inc
in
es
negl
clc
into
xor
xlat
leave
out
pop
sub
and
cmpsl
xor
ret
les
cld
add
sub
xor
or
sbb
sti
inc
inc
push
mov
fwait
jp,pt
insb
fiaddl
push
dec
outsl
les
jmp
mov
mov
mov
cwtl
ss
shlb
dec
pop
lcall
xchg
push
jmp
xchg
jo
sub
push
mov
mov
popa
in
pop
adc
and
rcrl
inc
stos
add
lds
call
sbb
cmp
mov
ljmp
and
inc
out
negl
leave
dec
fildl
mov
add
fldenv
dec
shll
and
lods
mov
fsubrs
pop
or
sbb
lahf
push
fcoms
mulb
mov
mov
mov
pop
das
clc
push
pushf
sub
push
jmp
pushf
hlt
rolb
int
jbe,pn
cmp
push
icebp
flds
jno
add
or
cltd
and
cmpsb
mov
sbb
inc
adc
push
push
mov
test
xlat
and
jnp
loopne
cld
mov
xchg
hlt
dec
pop
sahf
sub
aam
push
out
cmpsb
pop
pop
sub
add
cltd
push
sub
int3
inc
xor
incl
lds
cmp
addr16
adc
inc
mov
xor
arpl
xor
jl
outsl
pop
jo
and
test
lcall
addr16
decb
sbb
mov
cltd
push
ret
add
xor
push
mov
stos
addr16
cmpsb
mov
cmp
stc
xor
repz
iret
shrb
iret
jnp
outsb
int3
dec
cld
and
and
adc
pop
cltd
fs
mov
and
insl
and
inc
mov
stc
inc
sarb
mov
xchg
jb
jecxz
stos
pop
mov
fldl
test
fs
mov
pop
loope
mov
scas
fcoml
add
xchg
in
add
mov
pusha
out
rorb
xor
aam
shrb
cmp
nop
dec
lret
xchg
dec
sbb
mov
sbb
xabort
adc
xor
sbb
mov
lds
xchg
sub
xor
cli
cmp
out
cld
jle
int3
and
in
pop
and
repnz
push
testb
ja
adc
cmp
negl
jecxz
adc
mov
xor
pop
jp
inc
stc
hlt
out
mov
aas
cmp
mov
rcr
addr16
mov
out
cmp
imul
sub
jne
int
push
shrl
jo
cld
inc
into
frstor
fnstsw
imul
stos
xchg
inc
jmp
jno
loope
test
repz
out
xor
and
or
fdivrl
adc
jne
int
dec
cmc
xchg
bound
xchg
imul
lret
dec
aad
pop
fstps
js
adc
or
shll
pop
icebp
mov
mov
pop
out
lods
or
push
fdivrl
scas
sub
data16
inc
lea
enter
mov
fmull
xlat
arpl
xchg
repz
lret
push
push
add
pop
cmp
mov
cltd
mov
out
les
and
loope
out
or
faddl
mov
jno
ljmp
dec
insl
fsubl
int3
cmpl
jmp
sub
pop
jle
cwtl
adc
push
js
sahf
js
jmp
bound
cmp
js
sub
jne
in
cmpl
inc
call
push
add
sub
loop
xor
sbb
mov
shrl
sbb
fucomp
sub
sub
es
das
dec
ljmp
cwtl
idiv
orl
fimull
push
scas
pop
sub
mov
lea
leave
jg
push
icebp
cwtl
fidivs
or
js
mov
adc
mov
nop
loopne
out
enter
dec
inc
mov
mov
push
out
scas
push
jb
iret
lcall
popa
nop
scas
jle
sbb
dec
xor
and
mov
sub
ja,pn
pop
xor
pop
clc
jns
xor
add
mov
mov
in
pop
sti
jl
repnz
xchg
mov
adc
rcll
sarb
aad
mov
je
xor
enter
out
insb
inc
mov
cmpsb
pop
or
imul
cmp
mov
mov
pusha
aad
fs
test
and
cmpsb
jae
loope
stos
jbe
cmp
ret
mov
pop
xchg
mov
push
add
push
js
push
test
mov
xor
leave
sbb
loope
add
dec
xchg
pop
aad
outsb
icebp
mov
iret
push
movsl
out
pop
test
shrb
stos
test
stos
push
cmp
js
arpl
lock
mull
xor
cmp
push
cmp
add
les
outsb
out
push
mov
jo
mov
notb
clc
jp
xor
cmp
sar
mov
fisttpl
adc
repnz
mov
roll
repz
rcl
in
inc
and
adcl
inc
clc
mov
dec
mov
andl
or
adc
int3
repnz
jp
mov
flds
mov
xor
lret
pop
arpl
ret
ja
ds
inc
stos
push
cld
lods
mov
cmp
negl
inc
stos
xchg
lret
rol
fisubl
leave
push
cltd
ret
sub
inc
shrb
xor
dec
ret
xchg
aam
sbb
test
pushf
cmp
add
and
outsb
mov
mov
lock
pop
push
pop
lahf
push
pop
das
test
sub
in
orb
dec
adc
and
or
add
mov
fbld
outsl
xchg
test
rolb
mov
jns
test
stos
jae
jnp
call
mov
aaa
ja
in
xor
jnp
or
andb
xchg
lock
out
push
dec
cmp
sarb
sbb
jecxz
cmp
imull
sarl
add
push
mov
stos
pop
in
dec
pop
loope
test
fcmovb
sar
cmp
sahf
pop
mov
and
shlb
repz
les
aaa
dec
imull
fisttpl
or
and
fs
xchg
sbb
iret
cmp
ja
push
or
iret
or
shr
inc
add
push
shll
mov
jnp
sahf
lahf
out
lea
adc
mov
pop
cmpsl
insb
arpl
pop
dec
mov
loopne
pop
insb
fwait
ja
testl
jae
aas
add
hlt
ja
aam
xchg
fisubrl
push
idiv
fdivrl
inc
hlt
jge
bound
xchg
jecxz
fmuls
mov
inc
bound
xchg
jmp
adc
add
popf
ret
fmuls
pop
push
mov
scas
sbb
cmpsl
cmp
stos
mov
repnz
sub
jb
jnp
and
popa
sbb
jl
push
fisubrl
stos
xor
inc
add
xchg
mov
cmc
idiv
loopne
sbb
adc
data16
mov
cs
cmpsl
cmp
pop
fcomps
inc
add
sahf
or
push
xchg
jge
push
rorb
inc
xor
lods
aas
mov
insl
mov
jne
mov
fiadds
dec
xchg
movsb
xchg
push
inc
addr16
sub
inc
pop
jnp
data16
arpl
pop
int
dec
mov
cmpsl
or
fnsave
jbe
push
out
loope
icebp
sbb
and
pop
xchg
mov
xchg
js,pn
arpl
out
mov
inc
addr16
xchg
pop
out
sbb
and
xor
sub
orb
jne
mov
xor
adc
pop
add
pusha
jne
pop
mov
xchg
nop
dec
xor
mov
jno
mov
ss
loop
xchg
nop
fsubrs
mov
dec
dec
lea
adc
imul
arpl
pop
aam
xor
popf
or
mov
fs
scas
lahf
lock
mov
fdivl
adc
test
adc
xlat
cld
mov
xchg
push
lahf
or
lret
outsb
xchg
aad
test
fcoms
pushf
or
movsb
cmpsl
inc
dec
in
sub
push
inc
out
adc
aad
enter
add
mov
adc
icebp
aam
loope
dec
and
imul
xchg
mov
sti
and
faddl
push
mov
fstpt
mov
sbb
push
aad
int3
filds
mov
roll
jge
or
std
fwait
dec
cmp
mov
fcmove
stc
outsl
fdivs
fcmovb
loope
adc
into
in
movsl
adc
mov
mov
lcall
mov
in
mov
cs
and
aad
push
std
push
shrl
aad
roll
mov
js
sahf
cmp
subl
push
fmull
or
leave
pop
mov
mov
mov
loopne
rcrl
fisttps
sbb
inc
pop
scas
add
rorl
push
sahf
adc
stc
cwtl
mov
jno
cltd
adc
cmp
pusha
negb
cli
imul
bound
pusha
jbe
mov
jge
push
addr16
inc
sbb
jecxz
adc
sbb
mov
push
insl
sub
fiaddl
mov
fldt
cmp
loop
sar
lahf
mov
adc
cmpsl
test
lret
jbe
or
add
ret
pop
out
mov
cld
adc
and
int3
add
jmp
and
out
xchg
push
xchg
add
inc
ret
mov
mov
inc
gs
sbb
addr16
mov
mov
test
sahf
dec
inc
lahf
adc
add
mov
xlat
push
fdivrs
dec
ror
jbe
insb
jbe
cmp
pop
xor
pop
cmc
jbe
aad
je
inc
cltd
jae
or
push
mov
fadd
mov
cmp
in
cs
dec
stos
or
inc
test
lock
push
mov
pop
call
jmp
lret
xor
jge
lea
sub
mov
pushf
stos
cmp
sub
lock
sub
movsb
cmpsl
in
ss
out
inc
dec
push
inc
aaa
pop
imul
fidivrl
and
mov
jne
sti
xor
fbstp
or
inc
and
ja
in
and
dec
dec
inc
iret
lea
sbbl
xorl
jg
shlb
fwait
xchg
imul
rcr
push
adc
or
flds
push
lods
cmpsb
adc
shr
xor
pop
stc
xlat
cmpsl
mov
hlt
cmpsb
sbb
js
cmp
or
pop
xlat
into
fcoms
dec
xchg
adc
std
and
or
or
push
divl
sbb
pop
push
jbe
xchg
and
jecxz
movsl
cmpsl
push
mov
sub
out
adc
jbe
pop
xchg
in
int3
mov
xor
andl
add
jecxz
push
adc
lock
pop
pop
into
in
lods
mov
mov
sub
idiv
lds
fldcw
clc
pop
sub
xlat
mov
nopw
jl
sti
je
mov
sbb
xlat
loope
fisubl
push
movsl
add
es
out
out
mov
xor
shll
mov
lods
mov
sub
add
cmc
and
int3
add
mov
cmpsl
xchg
push
leave
adc
lds
mov
cmp
sub
adc
cmpsl
xor
movsl
xor
out
cmc
subb
xchg
roll
jmp
mov
fists
popf
loop
rcrl
stos
test
or
mov
lds
sbb
enter
lret
lcall
push
roll
dec
in
mov
subb
int3
movsl
and
and
cmp
stos
inc
push
es
xchg
jmp
lods
fisttpll
xchg
std
cmp
insl
pop
vcvtsd2si
mov
scas
mov
movsb
sub
sub
cli
pushf
or
inc
xchg
and
js
cmc
fisubl
fcompl
aaa
clc
mov
jo
ss
xchg
test
adc
cmp
or
sarl
cmpb
cmc
loope
mov
sub
loope
out
clc
je
inc
rcrl
pop
lret
test
jns
cltd
hlt
ror
push
sub
test
xbegin
mov
xor
lcall
adc
adc
xchg
sub
subl
or
lcall
dec
add
mov
mov
mov
xchg
shll
cmp
jp
mov
xchg
push
shlb
sub
cmp
mov
stos
and
push
cmpsb
out
shll
out
pop
cmpsl
jmp
pop
jnp
test
ficomps
push
lcall
lcall
fs
and
test
popa
xchg
das
push
xor
lret
xor
jnp
js
cmp
jl
jg
xchg
fs
or
loope
jecxz
pop
lods
or
into
rcrb
pop
and
loope
mov
jmp
xchg
call
mov
mulb
cld
arpl
add
mov
test
pop
stc
xchg
mov
leave
aad
test
and
sub
mov
dec
cmc
addr16
movsb
mov
scas
mov
pop
xor
push
mov
jno
into
jmp
fwait
jno
mov
rorl
shlb
mov
xchg
dec
dec
xchg
sub
xchg
repnz
mov
aam
or
les
xchg
jp
fdivrs
mov
lea
js
or
xchg
push
sarl
add
outsl
call
ds
jmp
push
mov
and
adc
pop
loope
clc
fwait
mov
stos
inc
dec
xchg
iret
or
jae
mov
mov
orl
push
pop
xlat
popf
jae
negb
loope
inc
push
mov
out
xchg
cmp
xchg
jo
or
imul
jp
xor
mov
cld
jno
dec
out
std
jmp
inc
add
add
aaa
fistpll
jle
xchg
push
icebp
mov
mov
pushf
push
jne
and
lahf
dec
or
int3
sbb
mov
add
dec
sbb
cld
add
sbb
push
dec
mov
shlb
mov
in
push
jae
mov
popf
lods
dec
dec
or
sub
lcall
std
aas
pusha
ret
mov
iret
scas
mov
dec
and
jle
or
out
jae
mov
push
push
jge
adcl
pop
dec
jnp
divl
in
leave
call
mov
mov
lods
rorb
xor
testl
jno,pn
int3
sti
dec
xchg
mov
add
pop
jp
sbb
dec
adc
and
sti
jae
mov
inc
cmc
iret
fsub
adc
pop
mov
pmullw
mov
insl
add
into
cmp
push
xor
lret
jns
cmp
fistpll
int3
mov
faddl
cmp
sbb
in
xor
repz
jb
cmpsb
popf
cmpsl
dec
ss
adc
fnstenv
enter
lods
and
int3
loopne
cwtl
ds
stos
lahf
adcb
push
stos
jns
lea
inc
push
in
aas
push
out
pop
pusha
pop
mov
push
dec
psubusw
js
out
lret
cmp
into
loopne
mov
inc
mov
mov
sub
xor
pop
jnp
push
aad
xor
push
notl
pop
cmc
or
rcr
lea
fisttpll
xor
jns
iret
xor
mov
push
sti
push
xchg
clc
je
or
pop
inc
mov
adc
add
push
xchg
xchg
popa
sub
imul
pop
pop
in
inc
js
push
mov
jge
pop
and
testl
add
adcl
iret
sbb
mov
sbb
add
cltd
int3
mov
xchg
push
xchg
aaa
addb
push
popa
imul
add
sbb
aaa
jge
loope
push
dec
enter
shll
outsl
mov
pop
dec
and
cmp
jmp
push
or
xchg
scas
sbb
faddl
sbbl
push
jmp
xchg
stc
pop
outsl
sbb
je
mov
xor
lea
or
mov
xchg
fnstcw
xchg
ds
push
mov
loopne
clc
icebp
lret
out
mov
sub
out
adc
rclb
lock
dec
in
and
subl
inc
push
aas
jbe
and
out
fisubrs
jb
pop
cmpl
mov
jg
mov
or
jnp
fwait
pop
cmpl
cmpsb
arpl
xor
mov
lea
jns
xchg
imul
mov
daa
and
mov
loop
int3
adc
mov
call
xor
cmc
movsl
dec
pop
test
sbb
and
rcl
jb
test
outsb
arpl
fisubrl
mov
add
cmc
dec
fildll
rolb
test
imul
fstps
push
and
jge
aad
addr16
xor
ret
xchg
movsl
add
ret
sub
sbb
ret
jp
int
mov
bound
xchg
adc
cmp
pop
ret
imull
stc
xchg
sub
mov
mov
sub
js
ja
cmpb
jmp
add
xchg
adc
shlb
sbb
lahf
test
dec
jmp
xchg
and
dec
xor
test
add
nop
cs
je
jb
movsl
dec
int
aam
inc
and
mov
rcll
fwait
setge
mov
mov
inc
pop
lock
lea
add
cmp
xchg
out
popf
enter
mov
adc
dec
mov
mov
js
clc
add
pop
stos
mov
cs
out
mov
icebp
aam
dec
lods
xlat
shl
cwtl
jno
lods
xor
bound
push
bound
add
loope
aas
mov
out
orl
sbb
lock
leave
aam
push
sub
gs
mov
lahf
add
imul
rol
test
sub
cld
movsb
lods
and
mov
sbb
bound
iret
and
mov
mov
test
loop
lock
loopne
xchg
mov
push
push
fcompl
out
cld
add
sbb
outsl
dec
enter
arpl
inc
inc
dec
lods
dec
es
mov
jp
sbb
pushf
mov
lods
mov
icebp
add
mov
roll
mov
sahf
xchg
jnp
iret
or
orb
aas
fsubrs
fisttpll
cmpsl
imul
int3
jne
rol
pop
mov
fwait
sub
das
mov
aas
jbe
mov
loop
add
ret
cmp
mov
lret
mov
pop
xor
or
or
xchg
rorb
add
int3
dec
sahf
xlat
sbb
add
incl
call
xchg
aad
mov
mov
adc
push
mov
ja
push
shrl
sbb
shr
aad
into
outsl
call
sub
lea
or
add
repz
sbb
pop
adc
lahf
mov
pusha
inc
lds
ret
pop
or
sub
aam
mov
enter
push
ret
add
jnp
lods
dec
mov
sub
pop
mov
int
mov
push
xor
dec
xor
ljmp
pop
mov
xchg
push
xchg
shrb
test
cmpsl
movsb
test
cmc
lock
inc
pop
mov
jl
and
push
rorl
dec
rcrb
jae
iret
sahf
in
lret
dec
stc
cmp
xchg
push
mov
lcall
jl
xchg
xor
sbb
cli
out
lret
in
push
push
or
sbb
push
addr16
inc
dec
push
xchg
out
push
sub
std
xor
jne
in
inc
movsl
jno
and
insl
aad
negl
inc
fisttps
stos
adcl
dec
sti
xor
push
pop
dec
jg
shll
and
jge
lods
scas
fcoml
inc
jmp
bound
mov
test
push
cmp
loope
jmp
out
shll
inc
pop
xchg
xchg
adc
mov
icebp
xor
mov
loopne
loop
pop
jno
jns
push
pop
dec
xchg
jo
jo
mov
repnz
ss
mov
aad
adc
xchg
mov
les
shlb
test
inc
jge
xor
xchg
stos
cwtl
cmp
or
stos
addr16
inc
dec
mov
loope
inc
mov
jno
mov
mov
lea
stc
repnz
into
inc
cli
cmpsl
ret
mov
incl
cs
stos
jecxz
or
inc
div
in
push
fildl
sbb
fwait
and
mov
mov
arpl
lcall
lods
inc
cltd
test
pop
cmp
fistps
aad
push
loop
dec
int3
dec
jp
jbe
mov
and
leave
adc
stos
aad
enter
jmp
mov
dec
fdivrs
pop
add
add
mov
pop
or
rcrb
in
ja
xchg
mov
inc
dec
ss
test
xchg
loop
stos
cli
mov
dec
lret
pop
adc
add
push
xor
jg
into
movsb
iret
lds
sbb
bound
fs
ror
add
jns
out
dec
call
scas
scas
scas
push
jne
sub
sub
lahf
jnp
pop
out
push
das
xchg
mov
into
lcall
repnz
call
add
in
push
mov
lea
adc
rcrb
jecxz
mov
insb
ja
sbb
pop
inc
dec
std
or
pop
aaa
cs
frstor
lds
adcl
insl
dec
stos
in
ficompl
iret
mov
loop
add
les
aad
ljmp
sbb
and
das
sbb
mov
lock
mov
stos
adc
or
sbb
xor
jmp
stc
cmp
mov
fcomps
xor
pusha
test
or
je
les
mov
inc
xchg
sub
mov
dec
stc
aaa
stc
jo
cltd
xchg
lcall
fcoml
in
shlb
pop
fiadds
jne
and
push
push
ret
mov
cmpsl
adc
mov
push
outsb
sbb
mov
xor
push
fldt
adc
stos
fdivp
movsl
sub
pop
cmpsb
test
insb
xor
sbb
cmp
xchg
mov
xorb
or
add
xchg
pop
mov
out
loopne
data16
xchg
fcmovnbe
iret
mov
push
cmc
ss
lret
jp
repnz
and
pop
lds
test
sahf
xor
shll
pop
add
sbbl
pusha
mov
or
dec
inc
push
dec
fsubs
fildl
int3
out
popf
sub
mov
adc
sti
and
sub
fildll
popf
pop
lods
insl
pop
inc
add
sarb
mov
out
ror
int
aaa
xchg
test
cmp
sub
push
ficompl
jne
push
gs
add
mov
mov
movsb
add
cmovnp
xchg
adc
sbbb
and
mov
ss
jecxz
mov
mov
test
inc
sub
push
out
pop
andl
ss
repnz
das
jge
jecxz
rclb
fcomps
dec
add
std
mov
int3
scas
mov
rcrb
out
clc
xchg
inc
push
lds
push
jne
adc
jl
ja
lods
sahf
aas
xchg
mov
loope
mov
xchg
clc
loope
mov
jns
shr
jae
push
cmp
push
iret
push
cmc
mov
xchg
test
outsl
mov
std
sbb
add
pop
pop
call
jb
aad
in
pop
sar
xchg
and
pop
pop
notl
cmp
xchg
out
arpl
push
xor
cmp
mov
into
jns
pushf
arpl
add
sbb
push
mov
in
mov
or
faddl
movsl
repz
mov
mov
lahf
cmp
push
loope
pop
mov
push
pop
ds
popf
das
add
scas
adc
dec
jp
mov
xchg
inc
enter
xor
xchg
stos
dec
pusha
sbb
imul
inc
xlat
incl
lea
stos
mov
mov
popf
lock
mov
dec
hlt
mov
push
sbb
sbb
outsb
xchg
cmpsl
jne
mov
scas
mov
jg
stos
clc
rcrl
pop
lock
imul
jnp
pushf
fcmovne
mov
mov
pop
mov
pop
fnsave
fcmovb
cmp
mov
fisubl
cmp
or
push
push
ficoml
adc
pop
add
sahf
stc
imul
test
cmp
js
mov
cmp
test
inc
xor
sub
push
outsb
popf
and
mov
in
xchg
mov
dec
fstp
dec
les
xchg
into
push
ss
or
rcrl
shlb
add
xchg
push
add
sub
jo
push
movsb
jg
mov
test
cmp
and
sbb
dec
pop
xlat
mov
fwait
add
loop
mov
in
or
pop
pop
sbbl
mov
stos
movsb
and
push
sub
clc
testl
les
pop
les
add
rcrl
cld
sbb
dec
xor
loope
lea
decb
les
sub
stos
jno
mov
or
cmp
out
pop
dec
idivb
and
pusha
in
and
imul
mov
movsl
std
bound
imul
fisubs
loope
loop
push
stos
pop
mov
push
or
sbb
fstpt
and
and
jb
jne
enter
loop
jl
mov
into
das
or
adc
mov
loopne
add
mov
pop
cmpsl
imul
push
inc
jmp
cmpsl
popf
mov
mov
mov
jbe
in
adc
push
or
shrl
add
push
mov
xchg
in
dec
rcr
aad
jg
mov
add
pop
xchg
pop
ja
fisubs
ret
add
pop
mov
je
push
rorl
ljmp
pop
outsl
insl
repz
out
jbe
cmp
testb
stos
xor
add
cmp
mov
test
lods
adc
es
adc
push
cmpsb
mov
mov
in
test
xlat
inc
sub
test
xchg
xor
decb
xor
xor
movsb
out
add
mov
aaa
jp
ja
loope
loopne
jmp
push
pop
stos
aam
or
adc
vprotd
sub
loope
sti
inc
stos
paddb
jo
out
test
ljmp
jg
mov
push
je
jo
aaa
arpl
out
ficoml
pop
adc
es
mov
jno
mov
shl
adc
push
repnz
xchg
fisubrs
sbb
push
cmpl
jnp
in
js
daa
add
mov
popf
xor
mov
out
imull
push
push
ljmp
push
test
mov
mov
fisttps
xchg
and
popf
jnp
inc
inc
mov
insb
xchg
jle
inc
pushf
or
adc
cmp
fldcw
ljmp
mov
testl
pop
xchg
in
stos
mov
mov
add
scas
aam
xlat
dec
cmp
push
adc
add
loop
mov
stc
imul
push
mov
push
push
jo
push
inc
mov
xchg
scas
xor
loope
push
dec
clc
add
enter
test
mov
insl
pop
sub
mov
out
out
cmp
cmp
fs
xor
jp
test
cmpsb
es
xor
xchg
push
pop
fcmovnu
mov
dec
test
pop
adc
pop
inc
push
enter
clc
pop
inc
insl
frstor
cs
fisttpl
cmp
add
adc
inc
incb
mov
inc
imul
sub
lret
push
dec
addl
daa
inc
fnstenv
add
mov
jp
cli
adc
out
jge
pop
mov
ss
shl
cmp
mov
lahf
or
lea
sar
aam
sbb
gs
test
inc
loop
and
xchg
lock
push
xor
out
pop
out
mov
movsb
adc
xlat
sub
push
lret
push
and
scas
hlt
add
int
push
pop
sbb
in
mov
and
inc
hlt
dec
lock
lods
sarb
or
pop
cltd
xchg
shrb
jnp
and
add
in
xchg
inc
cltd
jo
push
mov
push
xchg
ja
hlt
test
mov
add
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
