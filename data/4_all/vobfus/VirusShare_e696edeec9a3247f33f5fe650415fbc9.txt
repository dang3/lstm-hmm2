sbb
add
outsl
std
out
out
imul
sbb
sub
sbb
clc
inc
and
addb
scas
push
mov
ror
add
roll
and
mov
mov
cmp
cmc
jb
les
cs
xchg
xchg
jbe
and
cmc
add
rcr
jle
outsb
fdivrs
mov
lahf
outsb
xchg
leave
daa
push
cmc
clc
js
inc
mov
cmpl
mov
adc
orl
cmp
popf
sbb
sub
in
mov
mov
push
mov
sub
inc
cmp
stos
test
iret
mov
cmp
add
or
movsb
add
andl
cltd
dec
sub
jmp
push
sbb
cs
fs
lcall
lods
insb
movsl
cmp
xor
and
jp
call
call
clc
mov
rcr
nopl
jmp
cmp
das
loopne
iret
aaa
xchg
aaa
mov
stc
outsl
ds
sub
shrl
out
mov
stos
jecxz
jb
xchg
adc
lods
mov
pushf
in
lret
loop
jp
loopne
inc
into
pop
icebp
jo
sub
fldcw
bsr
xor
and
lcall
xor
push
mov
sub
or
dec
subl
sub
jecxz
mov
cmp
push
leave
enter
fisubs
jnp
dec
cmp
mov
aad
cmp
dec
mov
and
out
cld
sbbl
femms
or
xor
lods
lret
in
out
outsb
mov
jle
out
cmp
in
dec
xchg
inc
inc
je
or
sti
fildl
mov
loopne
sub
sub
lahf
adc
stos
mov
ds
adc
jecxz
pop
xchg
int3
sbb
test
ljmp
enter
test
mov
sub
sbb
leave
xchg
divl
mov
inc
lock
addr16
call
out
sub
fs
sub
jl
aad
sub
bound
or
cli
mov
sbb
out
imul
fcom
popa
jno
faddp
imul
out
ror
or
pop
test
xlat
popa
es
cmp
call
dec
jnp
repnz
sbb
sbb
out
mov
cwtl
cmpsb
test
das
addr16
js
or
xchg
and
inc
push
lcall
into
add
scas
aam
mov
adc
fbld
shll
inc
roll
lret
enter
xor
mov
movsb
push
int3
leave
bound
push
mov
in
push
std
inc
jg
jbe
shll
div
mov
mov
add
push
dec
dec
xchg
in
jle
mov
ret
nop
mov
jnp
aam
add
in
stc
fisttpl
dec
data16
sub
dec
repz
in
and
in
notl
xchg
jns
xchg
fsubrl
adc
scas
cli
addb
sti
mov
sbb
xor
inc
stos
iret
push
pop
ds
push
pop
out
into
jg
fsts
jmp
pop
enter
jl
mov
adc
ret
mov
fs
adc
in
ss
roll
push
inc
mov
mov
lret
jmp
insb
jmp
mov
mov
lret
inc
int
stc
lods
inc
sbb
xchg
cld
xor
and
arpl
and
psraw
ss
dec
fnstsw
fistpll
or
or
mov
inc
dec
xlat
xchg
inc
out
hlt
pusha
cmc
and
add
repz
pushf
add
mov
imul
fadd
stos
push
flds
mov
lea
andl
jnp
dec
stos
pop
mov
push
divl
ret
xor
in
and
lods
mov
jno
in
daa
dec
and
sahf
scas
subl
mov
dec
mov
or
hlt
mov
scas
pop
cmp
dec
test
xor
andl
dec
sbb
rorb
jmp
and
negl
lret
jbe
popf
xchg
negb
xor
repz
imul
divb
inc
ja
shll
add
clc
ss
or
out
xor
cmpsb
inc
enter
jnp
stc
inc
xchg
mov
scas
dec
push
call
pop
and
adc
pop
pushf
fs
push
sub
push
frstor
mov
shl
test
sub
push
add
popf
pushf
mov
pusha
mov
xchg
loopne
stc
jge
cmp
adc
mov
sbb
xor
mov
inc
les
aam
insb
mov
std
cmpsb
andl
sbb
cvttps2pi
ss
or
and
leave
add
or
popa
pop
out
cli
push
push
fisttpl
and
jmp
sub
sub
in
in
loope
fcmovnu
lods
pop
add
xchg
popf
and
xchg
out
mov
es
push
data16
mov
xor
divl
out
out
stos
jmp
std
cmp
add
jl
ljmp
sub
mov
and
inc
repz
and
les
test
jbe
mov
xor
xchg
ja
ret
testb
cld
test
fidivs
pop
adc
jg
adc
adc
sbb
mov
xchg
adc
or
imul
add
push
fnstcw
pop
into
in
ljmp
pop
inc
sbbb
sbb
add
dec
ds
mov
mov
daa
push
idivb
lock
mov
push
int3
sbb
and
mov
scas
mov
imul
xor
sub
cmp
mov
int3
push
cltd
bound
pop
push
xor
int
adc
addr16
mov
int
hlt
or
mov
xchg
xchg
cmp
aad
mull
test
jmp
test
imul
add
jge
or
cmp
dec
loopne
sbb
sub
mov
inc
push
inc
test
int
call
lret
dec
lds
in
jno
pushf
inc
jnp
lods
cmp
mov
roll
lock
sub
mov
inc
or
jl
add
incb
aam
cmp
sbb
mov
out
jle
push
push
lahf
push
into
push
and
notb
dec
rclb
in
mov
xor
dec
add
mov
repz
pop
fisubrs
cmp
lods
mov
add
mov
pmaxub
rcrl
loope
sub
scas
js
andb
movsl
sub
xchg
xchg
les
adc
mov
cmp
mov
sbb
stos
inc
insb
dec
mov
mov
outsb
and
sbb
lahf
lods
mov
cmc
push
icebp
bound
lea
push
cwtl
out
movsl
push
cmp
xchg
mov
dec
and
aaa
sbb
fcmovnu
adc
mov
sbb
sarb
push
ljmp
pop
jb
push
int
cwtl
hlt
push
add
mov
xchg
push
jmp
or
or
sbb
jne
mov
or
div
pop
sub
sbb
xor
cwtl
in
jno
mov
popa
rorl
loop
pop
into
cmp
test
pop
add
ja
es
in
and
cmp
icebp
inc
jl
pushf
lea
adc
rorb
push
inc
shll
jno
adcl
stos
clc
mov
and
js
or
dec
call
jp
mov
add
jmp
dec
loopne
inc
out
stc
and
arpl
jl
mov
in
cli
jae
ss
pusha
aas
jb
mov
cmpl
les
mov
fstpl
pop
pop
inc
call
sti
add
das
inc
addb
pop
daa
jl
ja
imul
je
mov
notb
loopne
les
std
mov
leave
adc
xchg
rol
scas
scas
addr16
into
stos
sub
adc
int
movsb
pop
add
sbb
xor
ljmp
pushf
mov
fisttpl
mov
dec
mov
xchg
ss
and
mov
mov
xchg
push
aaa
lcall
ds
cmp
mov
sbbl
ret
lret
mov
shlb
jbe
aad
sbb
pop
aaa
mov
pop
xlat
mov
inc
sbb
push
iret
clc
jne
pop
fwait
insb
add
add
mov
pop
negb
add
adc
adc
mov
xchg
insl
mov
mov
sahf
push
into
cmpb
ss
lds
jae
es
in
sbb
insl
pop
mov
cmp
test
movsl
imul
mov
push
loopne
repnz
sub
mov
mov
aaa
pop
call
jae
sbbl
cmp
pushf
sub
aam
nop
daa
aas
and
inc
into
xchg
scas
lods
sub
imul
push
int
mov
xchg
sbb
int3
data16
pop
ret
repnz
xchg
xchg
adc
xor
lret
mov
mov
test
lods
mov
sbb
inc
and
subl
adc
lret
fldcw
add
lock
stos
lock
decl
or
pusha
int
adc
mov
mov
gs
xor
mov
jo
jb
scas
push
dec
mov
fadds
push
insb
mov
mov
aaa
dec
aas
loope
pop
in
dec
adc
in
pop
insl
gs
and
mov
jl
mov
ljmp
jns
mov
je
inc
mov
call
shl
ffreep
aas
cmpsl
mov
dec
mov
xchg
js
movsl
aad
cwtl
repz
or
pop
and
adc
jmp
and
je
test
push
mov
call
popa
mov
mov
push
mov
scas
and
dec
inc
push
push
imul
jl
dec
fisubl
ret
inc
mov
cwtl
stos
stc
dec
push
xor
dec
sbb
inc
xlat
fistpll
sbb
enter
fiadds
xchg
sub
repz
pop
inc
ja
mov
mov
dec
sub
movb
fadds
mov
shl
mov
ret
pusha
cmc
lret
aam
push
pop
outsl
insl
into
inc
xchg
lcall
hlt
xor
add
adc
leave
xchg
add
ss
push
mov
imul
je
xchg
jb
test
sbb
nop
or
cmp
inc
vmptrld
and
cmp
and
out
popa
inc
pop
cs
insl
test
mov
lret
mov
arpl
or
je
sti
jae
outsl
data16
jg
push
xchg
mov
icebp
loope
mov
fdivrs
repnz
cld
mov
pop
pop
jb
push
mov
jmp
dec
test
pop
enter
pushf
scas
jmp
shl
dec
js
leave
adc
sbb
pusha
mov
sub
mov
out
insl
xchg
pop
pusha
sbb
pop
ret
std
sub
inc
ret
aad
rcr
std
cmp
iret
add
testb
push
and
scas
cmp
mov
movsl
cld
pusha
mov
dec
loop
adc
and
popa
loope
inc
pop
into
adc
mov
xchg
or
mov
mov
dec
mov
es
aaa
dec
call
dec
xlat
gs
inc
fwait
jl
imul
or
or
lods
cwtl
decl
sbb
pop
sbb
rolb
jl
inc
jne
popf
nop
mov
xor
mov
pop
aas
mov
and
ret
push
or
mov
push
sub
jge
and
lea
cld
pop
pop
add
int
add
jb
mov
mov
jl
inc
sub
lds
jge
cmc
pop
gs
add
nop
aad
test
and
and
and
push
xlat
int
jne
or
in
in
push
ds
sbb
out
repz
test
sbbl
jg
popa
ds
out
xor
pop
adc
adcl
test
ret
jbe,pt
cmp
int3
test
dec
ss
or
data16
pop
xor
jmp
nop
aas
or
mov
addr16
inc
mov
jae
or
mov
lock
ret
inc
mov
insb
andl
adc
mov
jae
lcall
addr16
inc
aas
sbb
leave
test
push
inc
mov
mov
sbb
mov
addr16
sbb
cli
sub
xor
aas
sbb
ret
ljmp
test
cmc
popf
lods
push
test
jg
ja
mov
push
addb
sub
mov
xlat
jae
sti
dec
fyl2x
sub
xlat
mov
call
shrl
xchg
pop
add
and
cmpsl
mov
fcomps
jmp
or
test
cmp
jnp
fnstenv
mov
and
fidivrl
loope
cmpsb
popf
test
hlt
fwait
xor
mov
fisubrs
adc
fstpt
pop
out
notb
fcmovbe
jecxz
sti
mov
sbb
lcall
xor
int
lret
jb
pushf
push
and
jl
lcall
call
loopne
and
mov
mov
sarl
inc
pop
mov
dec
scas
jp
cld
mov
jne
fstpt
icebp
push
cmp
pop
insb
add
hlt
mov
loope
aas
and
ret
lea
add
dec
shr
in
xchg
lret
lea
loope
sbb
scas
push
jg
loopne
lahf
pusha
fucomp
aad
dec
test
jae
push
add
or
or
push
pop
and
mov
aad
add
ds
leave
je
cmp
sbb
mov
push
xchg
push
inc
jae
add
cmpxchg
popf
mov
jnp
adc
rolb
cmc
int3
lods
mov
stos
nop
or
jb
nop
lds
push
and
xchg
lcall
lds
fwait
jmp
movsl
pop
adc
ljmp
mov
fcomps
cmp
bound
push
pusha
popf
adc
xchg
mov
mov
sbbb
mov
out
adc
in
xchg
int
pop
jge
push
or
dec
jns
xchg
inc
test
idiv
push
jo
pop
daa
lods
rcrl
mov
xchg
test
imul
sub
lods
lods
mov
test
push
test
xor
sbb
sub
push
insl
and
ljmp
into
jo
pop
addl
mov
xor
mov
rcr
mov
pop
cmpsb
scas
fisubrl
inc
or
jnp
dec
popf
faddp
shlb
pop
jecxz
mov
mov
inc
adc
out
aam
test
lret
pop
loop
aam
adc
add
gs
xchg
xor
xchg
sti
dec
fidivs
push
or
cs
fadds
sbb
int
xlat
cmpsl
jns
daa
out
arpl
adc
sbb
sub
gs
in
and
xor
sbb
xchg
mov
cs
cmp
inc
lods
pusha
sbb
push
cwtl
mov
iret
inc
mov
subb
mov
xchg
cmp
adc
push
push
addb
popa
negl
pop
lret
jle
cmp
push
ficoml
cmpl
cli
and
or
push
mov
xchg
jnp
mov
les
push
jle
test
add
cli
pop
or
out
xchg
shll
loope
push
les
into
mov
movsl
jno
sbb
pushf
xchg
movsb
hlt
mov
cli
mov
je
das
shlb
mov
into
fidivrs
xor
cmp
push
adc
and
js
cmp
jmp
mov
stos
or
mov
fidivrl
shlb
mov
add
adc
push
fsub
cld
xchg
inc
pop
loop
cmp
sub
gs
mov
mulb
hlt
nop
dec
test
dec
xor
scas
and
pop
sbb
jns
iret
je
sbb
jl
mov
es
popf
jns
cmovbe
mov
cmpl
jp
fadds
stc
and
cwtl
add
flds
sbb
xor
push
add
or
insl
shrb
adc
mov
mov
jmp
lcall
jno
inc
dec
mov
inc
popa
or
mov
pop
and
jle
and
popa
mov
add
or
movsb
data16
shr
inc
js
cli
xor
daa
in
sub
jno
and
adc
sub
cld
aad
jge
add
and
lods
xor
pop
test
and
stos
cmp
aaa
dec
pop
sbb
adc
insb
movl
ret
mov
cmpsb
loope
adc
xchg
pop
push
xor
aam
xchg
cmp
lret
mov
gs
rcrl
aas
nop
or
daa
adc
jg
mov
imul
add
out
aam
or
fdivr
pop
xorl
xor
data16
cmp
cmp
sbbl
mov
sbb
in
mov
push
dec
data16
pusha
push
push
cld
scas
mov
js
pop
pop
push
xchg
shrd
in
mov
xor
sub
sbbb
dec
insl
jo
xlat
fstps
xchg
stc
sbb
sub
lods
lds
jne
or
sbb
xor
or
inc
loop
push
mov
das
ja
sbbb
call
incl
push
sub
cmp
push
xor
jmp
icebp
in
and
xor
out
and
pop
rol
jno
mov
mov
xlat
out
xor
int3
in
inc
cmc
adc
push
sub
movsb
das
mov
mov
popa
mov
test
jb
adc
imul
cli
mov
rcr
dec
lret
jle
jnp
imul
iret
std
xchg
repz
test
inc
push
adc
fstl
jne
pop
js
mov
jno
xchg
dec
add
rep
stos
pop
adc
aaa
or
out
push
enter
dec
idiv
lock
mov
imul
mov
movsb
jmp
jge
aaa
sbb
imul
sbb
sti
movsl
mov
push
addb
jmp
pop
cmp
les
xor
jb
inc
loop
int3
mov
cltd
aaa
rorb
or
xchg
loopne
push
push
insb
mov
filds
pop
in
sub
shll
ss
jae,pt
fcomps
xchg
pop
cmp
pusha
xor
jns
xor
rclb
mov
test
into
shlb
ss
mulb
pop
cmp
xchg
pop
popa
lods
ds
adc
test
sub
jge
push
sbb
add
or
push
std
and
cmpsb
jne,pt
montmul
cmpsb
orb
adc
xchg
jmp
sbbb
or
cmp
jl
lahf
dec
ja
lret
mov
xor
rclb
or
xchg
stos
add
xlat
and
mov
xchg
jne
repnz
out
cmp
or
jbe
mov
pop
mov
sbb
dec
negl
popf
popf
outsb
shll
test
xchg
arpl
lods
call
filds
pusha
add
push
jle
rcrl
sbbb
jo
adc
dec
cmpsb
fcmovnb
das
sarl
mov
imul
lods
mov
xchg
jno
rolb
or
sub
cli
inc
xchg
insl
add
cmpsl
push
movsb
xchg
xchg
sbb
sub
jmp
dec
jb
inc
rcll
rcrl
pop
dec
sub
and
mov
inc
ret
loope
xchg
push
lods
ss
mov
out
lods
jecxz
pushl
dec
adc
pop
jb
adc
mov
jae
rorb
mov
or
leave
test
scas
ret
dec
into
cs
js
lods
cmpsb
imul
or
ljmp
lds
aas
push
xor
inc
cmp
sub
loopne
dec
pop
add
push
daa
jge
pop
inc
fisttpll
dec
adc
aad
inc
aam
call
scas
icebp
or
inc
jge
lea
mov
mov
push
adc
cmp
cmp
or
ficoms
lds
jecxz
or
adc
lcall
mov
lock
xchg
aad
cmp
sub
inc
dec
mov
pop
mov
ja
ffree
sbb
jmp
cmp
fs
hlt
ret
test
push
and
xor
dec
repnz
xor
dec
ds
mov
or
lods
xchg
scas
cmp
sahf
xorl
xchg
in
loope
xor
xlat
mov
or
rclb
frstor
jno
xchg
pop
aad
js
push
dec
mov
push
clc
daa
mov
inc
scas
mov
sub
mov
jmp
out
cmp
call
outsb
mov
jp
mov
aad
sub
or
mov
xor
movsl
clc
or
push
shl
cmp
shlb
mov
xchg
popf
jno
mov
push
out
imul
adc
shl
jl
pop
xchg
push
inc
xor
pop
xlat
popf
push
gs
into
rcr
std
lds
std
lret
dec
pop
lods
push
xchg
data16
sbb
sbb
add
add
pop
add
and
cltd
inc
aaa
lret
pop
mov
cltd
xor
decb
int3
out
mov
pop
out
cmpsb
mov
out
push
xlat
std
sub
mov
pop
xor
cmpb
sub
cwtl
fstpl
scas
iret
notl
sub
pop
lea
clc
mov
fdivs
adc
cs
xchg
in
addr16
repnz
enter
stos
mov
lcall
clc
mov
lret
pop
icebp
pop
push
mov
mov
popw
mov
jo
dec
loope
mov
sub
adc
je
cmp
mov
xor
pop
xchg
mov
xchg
sbb
xchg
out
xlat
movsl
jno
popw
cli
jle
pop
clc
sub
ret
cmp
imul
xor
xor
daa
jo
mov
iret
mov
mov
and
xchg
sbb
mov
xor
sti
aam
popf
xor
es
into
pop
push
push
lds
ret
mov
pop
js
xor
daa
add
outsb
add
mov
pminsw
xor
rorl
jns
xchg
mov
xchg
cmp
xlat
adc
lret
or
xchg
dec
pop
out
xlat
and
jmp
push
xchg
sbb
and
gs
ret
or
out
shrl
jecxz
fistl
xor
loopne
and
test
lock
data16
xor
cmp
dec
cltd
inc
xlat
sbb
mov
test
jmp
imul
jle
xchg
or
insl
clc
jnp
sub
in
outsb
mov
xor
mov
sti
insl
jl
cld
push
xor
mov
popf
fsubrl
pop
imul
cmp
pop
mov
arpl
out
into
jno
mov
push
decl
mov
imul
mov
pop
jmp
xor
mov
or
pop
mov
les
sar
fbld
push
xorl
mov
sbb
cmp
adc
int3
sysret
add
dec
shll
dec
outsl
mov
fs
inc
outsb
movsb
subb
bound
fisubrl
pop
xor
ficompl
xchg
add
mov
pop
pop
rolb
push
loop
xor
loopne
mov
inc
mov
dec
mov
dec
add
inc
aad
adc
sub
or
fnstenv
dec
and
sub
jg
mov
xor
lds
arpl
sbb
cmp
jno
cmp
xchg
in
xchg
mov
lahf
add
mov
fsubr
cmpxchg
fistps
xlat
pop
out
adc
lea
and
mov
jbe
mov
rcrb
or
cli
out
mov
inc
jno
sbb
xchg
cmp
lret
in
rcr
stc
inc
xchg
movsb
imul
out
push
push
push
pop
aas
lea
mov
jge
xchg
mov
mov
in
outsl
sti
xor
andl
je
or
or
and
out
push
loop
shlb
push
mov
xor
pushf
les
sbb
int3
pop
mov
lods
testb
inc
pop
mov
icebp
scas
call
xchg
cmp
arpl
cmp
mov
loope
shl
pushf
lahf
jae
cmp
sub
add
lods
and
mov
dec
mov
xor
or
inc
inc
pusha
fwait
leave
pop
push
mov
and
add
push
add
jl
pop
pop
gs
xor
les
adc
pop
sbb
sbb
and
inc
push
jae
add
gs
fcmovu
loopne
test
sub
call
jne
dec
test
aad
jmp
cmp
push
jae
pop
fs
ret
dec
fidivl
shr
xchg
cmp
adc
pop
pop
ja
repnz
pop
add
pop
or
fs
hlt
jbe
sbb
xchg
imul
dec
cmp
ret
and
or
stc
inc
inc
xchg
push
jmp
sahf
xchg
add
adc
dec
fisubs
rorl
jg
insl
cld
pop
mov
xlat
leave
mov
inc
push
push
rcll
add
js
mov
sub
dec
mov
shrl
and
push
xor
sbb
pop
mov
jg
lcall
ja
test
ds
lds
popf
aam
push
arpl
ret
jne
adc
movsl
inc
iret
pop
cmp
fstpl
push
mov
pop
int
fucom
stc
stc
sbb
push
push
je
dec
push
mov
jecxz
cld
push
inc
mov
jns
lcall
dec
clc
xchg
and
ljmp
cmp
mov
xchg
or
out
mov
out
data16
jle
lds
dec
ss
push
mov
lods
fidivrs
aaa
or
dec
call
mov
nop
outsb
arpl
clc
mov
subb
fisubrl
cmpsl
cmp
test
jge
mov
divb
add
iret
lret
cmpsb
loopne
rcll
out
fisttpll
inc
decl
mov
fimull
notb
mov
int
loope
xor
jg
xor
fisttpll
in
xchg
leave
aad
cwtl
mov
je
dec
push
jbe
sti
out
xor
push
xor
test
movb
mov
call
rcll
ss
out
dec
jns
nop
imul
daa
jecxz
sub
mov
pop
jo
add
xor
lds
dec
add
es
pushf
lcall
test
jo
pushf
mov
adc
fisubs
fidivs
imul
push
dec
cld
lahf
xor
pop
push
fiadds
mov
lds
dec
mov
stos
mov
push
adc
mov
inc
shrl
sbb
cmp
mov
adc
jnp
frstor
xchg
in
dec
jns
mov
cmpsl
or
stos
inc
mov
push
cli
and
inc
add
jno
cmp
jmp
int3
pop
cwtl
js
shlb
jge
psrlq
inc
test
mov
call
jmp
push
roll
pop
insb
xor
icebp
cmpsb
jecxz
aad
int
or
inc
sub
mov
in
outsl
add
aam
movsl
dec
inc
pusha
pop
mov
jle
fisubs
out
loopne
es
cld
pop
or
enter
mull
int3
sub
push
clc
push
sbb
cmp
shr
cld
and
cmpsl
push
push
mov
sub
mov
xchg
xor
jo
pop
mov
mov
dec
popf
xchg
xor
mov
xorl
mov
mov
sub
das
xchg
rorl
ja
imulb
pop
ss
dec
scas
sub
jge
add
rcl
sub
mov
in
or
sahf
jnp
pop
and
aad
adc
add
lods
push
movsl
lcall
pop
outsl
pop
lahf
jp
jbe
das
adc
jl
mov
pop
cmpsb
shrl
mov
sub
mov
mov
inc
loopne
cmp
mov
xchg
fildl
mov
jae
in
xor
and
sbb
mov
mull
sub
arpl
ret
pop
stc
jmp
aaa
inc
stc
lds
rcll
mov
pop
in
jle
xchg
mov
call
test
lret
cmp
dec
pop
add
dec
arpl
test
inc
pop
jo
in
cwtl
imul
daa
sub
ss
xchg
mov
imul
movups
push
xchg
xchg
and
pop
in
or
test
out
push
scas
jmp
cmp
or
sub
leave
shrl
imul
mov
sub
and
cmpsb
dec
xor
in
cltd
push
aaa
insl
scas
inc
xchg
ffreep
xchg
add
idivl
std
mov
jmp
scas
or
clc
xchg
pop
jmp
mov
addr16
ret
pop
fisubrs
gs
nop
in
nop
jnp
out
jo
ljmp
inc
pop
shl
fsubl
xchg
mov
dec
repz
xchg
ficomps
lret
xchg
test
mov
push
bound
int3
and
fdivrs
mov
push
jle
popa
inc
in
mov
dec
xchg
shl
lea
push
in
cmp
stos
enter
push
ja
iret
sub
clc
xchg
scas
mov
movsb
push
repz
jmp
push
mov
into
loope
adc
outsl
stos
in
jle
mov
xor
inc
push
sysenter
jmp
rcrl
std
ret
xor
and
push
mov
test
subb
inc
lret
rcl
push
sahf
lds
xchg
jmp
sbb
aad
pop
in
leave
jl
loope
mov
dec
dec
aam
call
pop
popa
fbld
int3
mov
popa
outsb
pop
out
repnz
popf
fldenv
bound
mov
aad
outsb
push
jbe
fwait
inc
sbb
fs
adc
or
orb
fnsave
sub
mov
das
nop
test
ja
push
scas
ja
and
bound
pop
lock
push
xor
sahf
jae
outsb
sti
cmp
outsl
subb
iret
inc
sahf
push
mov
add
pop
or
std
mov
repz
adc
xchg
movsl
lds
xchg
xchg
pop
ret
nop
fdecstp
cmp
lods
test
subl
xor
xorl
test
push
ds
jns
adc
cmpsb
das
aas
es
scas
in
scas
jno
push
inc
inc
mov
fs
xchg
pop
into
push
push
inc
mov
lret
and
arpl
addl
pushf
and
std
iret
into
pop
add
and
mov
add
ss
jge
push
mov
xlat
es
je
gs
or
mov
mov
addr16
mov
cli
mov
lahf
adc
sti
enter
enter
sbbl
ja
sbb
push
flds
push
pop
inc
push
sub
xlat
sub
mov
outsl
ljmp
cld
and
pop
jns
in
arpl
xchg
imul
push
fwait
add
or
mov
movsb
ljmp
movsb
jno
dec
js
aas
pop
cli
sbb
mov
test
pop
shlb
inc
loope
add
inc
pop
jl,pn
xor
jnp
jp
xor
lahf
xlat
jecxz
pop
inc
rcll
xor
lock
cmp
cmc
mov
aaa
es
dec
movsb
jbe
mov
bound
call
addr16
pop
in
add
out
loope
into
push
paddusw
leave
test
adc
sub
fsts
aas
mov
ja
cli
mov
or
lea
cmpb
mov
sarb
test
xchg
fwait
dec
lahf
mov
mov
out
out
les
inc
push
mov
sbb
mov
adc
push
sub
add
and
stc
cltd
inc
insl
cmpsl
int
scas
push
sub
add
inc
mov
inc
xchg
cmpsl
and
cmp
rol
and
movsl
imul
arpl
pop
add
mov
cs
pop
loopne
xlat
jg
mov
jg
aam
pop
je
and
xchg
xchg
mov
shl
andl
inc
stos
bound
or
stos
jmp
fisttpl
fxam
add
cmp
xchg
xlat
or
or
mov
gs
cmp
push
rorl
pusha
xchg
shlb
ret
scas
add
xchg
push
icebp
adc
cmc
popa
adc
cmp
push
repnz
sbb
sub
cmp
cmp
pop
shlb
or
mov
fsubrl
mov
cmp
scas
fyl2x
mov
adc
lods
nop
lds
pop
xchg
inc
out
sti
push
dec
xchg
sti
cmp
test
xchg
insb
sbb
ret
jb
or
daa
mov
xor
cmpsl
data16
and
sti
into
mov
dec
or
xchg
dec
fsubrl
mov
repz
imul
xchg
mov
fcmovbe
dec
cwtl
xchg
insb
mov
xchg
mov
mov
mov
xor
jno
aaa
add
mov
and
mov
mov
fimuls
push
xchg
dec
pushf
or
imul
sub
andl
jnp
je
inc
in
add
shrb
aaa
mov
lock
shl
leave
xchg
add
aas
sub
aas
mulps
inc
jl
jg
adc
xor
xchg
aas
adc
mov
push
loope
mov
inc
mov
jb
shl
xchg
imul
pushf
dec
shrl
and
push
mov
cmc
call
dec
and
dec
pop
sbb
repz
add
xor
cmpsl
xor
push
sbb
or
sbb
sbb
and
mov
imul
cmp
xor
push
test
es
pop
fucomip
sbb
movsb
xor
test
mov
in
repnz
cmp
les
repz
out
aam
jp
movsb
fwait
inc
loop
mov
mov
das
pushf
in
out
out
das
call
and
adc
dec
and
les
pop
lcall
xor
push
and
bnd
fwait
das
jmp
pop
scas
ss
mov
mov
das
and
adc
jno
hlt
out
lods
xchg
rcl
call
leave
lea
sub
insb
mov
test
cmp
repnz
xchg
xor
xchg
ja
jmp
xchg
inc
in
unpckhps
shll
pop
inc
push
addr16
and
xchg
jecxz
push
jp
outsl
rcll
dec
push
call
fsincos
aad
les
pop
ret
mov
mov
add
push
sbb
push
mov
jle
arpl
cmp
shll
insl
mov
flds
jecxz
jne
add
ljmp
mov
sbbb
jp
push
push
stos
fisubrs
insb
mov
mov
jle
inc
dec
sbb
lret
dec
mov
push
cld
jbe
movsb
push
cld
lcall
lret
jp
sti
fdivs
inc
xor
nop
mov
mov
and
stos
adc
mov
aas
pop
dec
jae
mov
sahf
xchg
dec
mov
dec
sbb
ret
pop
sarl
push
sub
pop
xchg
cmp
insl
outsl
ja
and
pop
flds
pop
int3
sbb
into
jnp
das
mov
cli
push
mov
cli
cmp
popl
xchg
mov
mov
std
sub
test
shr
stos
inc
mov
cmp
mull
fdivr
lods
mov
mov
bound
sub
lock
aad
fwait
pop
jge
nop
xor
lea
shl
loop
ret
cwtl
cmp
pop
pop
sbb
fimuls
mov
mov
stos
jns
lea
xor
es
sbb
aas
imulb
lds
call
loope
mov
pusha
ljmp
clc
dec
enter
shr
sbb
lahf
cmp
cltd
lds
or
jbe
mov
and
pop
js
cs
leave
sub
out
mov
in
fstpt
add
fistps
fwait
pop
shrb
sub
cmc
mov
aaa
pusha
xchg
enter
xorl
jecxz
pop
mov
sub
mov
shll
add
inc
dec
inc
xchg
dec
test
pop
fcompl
test
adc
data16
jno
dec
lcall
push
jbe
jo
add
sbb
in
sbb
inc
dec
inc
ret
pusha
icebp
dec
xchg
dec
xor
cmp
xlat
repz
and
mov
hlt
adc
inc
jg
xchg
int3
push
fiadds
cs
in
pop
cs
in
mov
mov
aas
sbb
mov
ljmp
sub
xchg
stos
xchg
mov
inc
lods
cwtl
jp
popf
aas
arpl
mov
mov
pop
cmp
mov
push
imul
cmp
clc
jae
cwtl
xchg
lret
xchg
dec
subl
fs
cmp
jge,pt
mov
add
dec
int
mov
xchg
hlt
fs
pop
sbb
daa
je
inc
sub
ljmp
mov
sbb
rorb
ljmp
xchg
outsl
inc
bndldx
xlat
cmp
jb
mov
cmp
add
out
les
or
sub
inc
negl
bound
sti
push
movsl
movsb
bound
and
cmp
push
fs
adc
lea
fisttpll
push
loope
mov
ret
add
popa
add
and
sbbl
pop
mov
stos
rol
arpl
dec
xor
lds
cwtl
jmp
mov
cld
js
adc
lds
cmp
sub
lods
aad
test
in
stc
stos
or
and
jp
stc
mov
sbb
mov
push
and
dec
jmp
pop
icebp
cld
pop
lock
push
sbb
clc
sbb
nop
pop
into
sbb
sbb
inc
push
adc
pop
xchg
int
xchg
add
cmp
imul
cmpsl
pop
lock
outsl
jb
fimuls
aas
sbb
push
dec
dec
push
sbb
mov
in
testl
sub
push
das
std
jp
fistps
xor
and
ljmp
dec
pop
mov
lret
and
lock
mov
js
mov
addb
mov
lahf
dec
sarl
add
mov
inc
inc
pop
cmpl
adc
mov
jno
or
mov
sbb
push
adc
push
dec
cli
scas
sub
stos
movsb
push
imul
icebp
loopne
or
dec
ret
or
pusha
fs
dec
jno
jge
inc
fwait
lea
insb
ret
mov
sbb
mov
xchg
scas
cmpsb
xchg
in
wbinvd
aaa
xor
jo
lret
mov
jle
push
subb
and
adc
xor
mov
mov
fisttpl
adc
mov
mov
aas
popf
or
dec
sbb
jge
mov
into
xor
pop
or
test
into
or
icebp
stos
clc
cmp
aad
and
stc
add
aaa
cmc
cmp
mov
imul
leave
stos
pop
lods
jno
lret
clc
and
bound
iret
aaa
loope
jecxz
lret
das
repz
shl
pop
mov
lods
or
sub
out
lahf
fisttps
dec
ror
jns
inc
cli
cltd
out
movsb
mov
mov
dec
mov
xlat
les
addl
inc
push
ret
incb
stos
mov
sti
and
mov
and
stos
xchg
into
mov
mov
mov
cld
insl
daa
fldcw
add
popf
push
lret
enter
xchg
and
adc
test
jns
insl
cmc
int3
insb
std
imul
popf
cmp
cmp
sub
add
xlat
test
sahf
mov
mov
sub
leave
xchg
cmp
cld
jo
les
in
fdiv
notb
hlt
sub
and
mov
cltd
test
decl
pusha
aad
push
repz
loop
sbb
mov
out
int
dec
mov
lods
leave
jno
negb
mov
in
in
aas
stos
push
lods
mov
mov
test
scas
pushf
inc
std
xchg
in
outsl
jo
cmp
inc
fwait
pushf
sbb
jmp
sbb
and
adc
xchg
imul
add
test
cmp
iret
push
or
mov
out
sub
adc
loop
ror
std
std
pop
mov
cmp
mov
mov
pop
arpl
add
and
pop
adc
aad
imull
pop
movsl
fcoml
rolb
out
fisubrs
inc
into
lret
inc
mov
loope
xor
push
mov
test
out
cmp
popf
sub
pushf
cltd
fisubl
pop
in
xlat
les
mov
mov
jne
in
call
mov
fs
xchg
in
inc
push
xchg
cld
mov
imul
cmp
call
cmp
sub
mov
mov
xor
popa
shll
sbb
mov
add
jne
in
lods
fstp
je
push
mov
xchg
jg
cmp
pop
jecxz
shll
outsb
inc
negb
pop
adc
add
push
jno
pushf
mov
jmp
pop
sub
imul
sub
repz
clzero
push
lods
jl
jo
ficompl
jge
mov
mov
and
cmp
inc
cmp
pop
mov
jb
scas
sbb
sub
mov
shrb
rorb
mov
jmp
mov
lods
push
in
arpl
mov
mov
sbbl
jp
sub
lds
or
xchg
mov
out
sub
lock
inc
aam
in
fwait
inc
mulb
insl
leave
jb
sbb
xchg
mov
scas
andb
std
xor
in
jl
into
add
fists
jo
mov
cmp
shlb
popa
ret
repnz
and
clc
mov
daa
xchg
sarl
adc
cmpsb
es
sti
inc
ret
stos
cli
scas
or
sbb
loop
jmp
mov
dec
push
jg
xchg
in
sbbb
push
dec
add
and
out
mov
pop
popa
rol
ret
inc
cmp
mov
sbb
mov
rdpmc
lods
inc
cs
or
ljmp
cld
xchg
loop
std
lds
into
lods
fsubr
inc
xchg
or
inc
mov
jb
repnz
je
mov
stos
push
daa
dec
ret
xor
jmp
jb
mov
iret
or
cltd
mov
inc
sbb
xchg
cmp
mov
pusha
jnp
int3
jp
mov
fadds
lock
into
ret
add
jle
sbb
sub
lret
es
push
cmp
dec
push
push
sti
push
lea
and
push
xor
pop
or
jg
stc
rcrb
cmp
scas
push
rcl
call
mov
popa
sub
xor
cmpsb
and
cli
sbb
scas
test
ret
pop
mov
pop
and
mov
jne
ror
push
call
nop
mov
xchg
pop
cli
xchg
aas
pop
outsb
cmpsl
loopne
repnz
ss
decb
xorl
sbb
loopne
push
lods
sbb
xchg
and
xorl
xchg
inc
sbb
sub
lds
push
into
or
and
int3
and
add
inc
cmp
dec
pusha
or
addr16
add
and
mov
mov
lods
push
rorb
jne
cmp
mov
inc
ljmp
push
sti
lods
and
jmp
out
add
pop
cmpb
push
jge
inc
pusha
cwtl
pop
add
rorb
push
dec
lret
push
es
into
mov
ljmp
lahf
dec
lahf
loope
xchg
inc
int
xchg
xchg
dec
sti
cmp
lds
adc
mov
add
fdivrp
or
testb
ds
xor
sbb
push
jo
cltd
and
cmpsl
shl
mov
lret
add
repz
mov
lods
or
out
mov
and
imul
jmp
inc
repnz
sub
int3
pop
ljmp
and
ja
push
pop
cli
mov
mov
movsb
dec
in
in
imul
cmp
or
jae
xlat
nop
bound
fcomi
or
hlt
es
adc
lret
jne
cmp
and
xlat
sti
jmp
test
push
fists
adc
sbb
add
adc
fwait
test
xor
jge
in
in
arpl
gs
in
inc
mov
les
xor
adc
inc
push
js
loope
mov
push
out
cmpsb
mov
dec
dec
fcompl
pop
adc
lock
sub
inc
out
dec
in
mov
stc
add
mov
call
and
cmp
leave
jbe
add
enter
mov
ss
add
dec
out
mov
daa
and
ret
mov
dec
sbb
jae
push
shll
insb
adc
add
insl
cmp
dec
lea
scas
cmp
gs
lret
inc
imul
push
mov
stos
aas
xchg
mov
push
popa
repz
sub
orb
xor
data16
push
push
leave
ror
dec
rcr
jbe
inc
loopne
pop
mov
or
mov
mov
sub
jmp
fbstp
movsl
filds
mov
pop
insb
xchg
lds
jns
xchg
cmp
xchg
into
adc
ret
repnz
add
out
mov
shll
je
scas
fstps
dec
dec
mov
out
rclb
lahf
adc
or
mov
xor
sbb
cmp
js
add
push
int3
push
rcrb
enter
and
insb
xchg
in
cmp
dec
mov
mov
mov
jge
push
dec
test
arpl
cmp
jne
insl
mov
cli
jb
pop
fldt
mov
fldt
xchg
or
inc
xchg
fiaddl
adc
jecxz
sbb
sbb
mov
movsb
push
adc
negl
ljmp
adc
test
mov
dec
adc
iret
mov
fidivrl
add
jmp
sub
pop
sbb
imul
push
cmpsl
rcll
push
int
xchg
adc
out
xchg
rcrl
cmp
ret
dec
call
cltd
std
xor
pop
movsl
pusha
rorb
jmp
mov
cmp
std
mov
cmp
std
dec
cli
leave
dec
int3
movsb
leave
in
test
xchg
stos
sub
inc
jne
mov
push
scas
out
mov
push
icebp
in
rcr
pop
test
cmpsl
fldt
cmpl
test
or
pop
loope
cmpsb
pushf
mov
andl
inc
inc
dec
movb
push
add
shrb
mov
pushf
rclb
adc
ljmp
test
add
mov
pop
inc
add
jo
lods
jo
xor
push
popf
or
cs
cld
adc
adc
fdivr
xor
test
leave
xor
and
xchg
daa
inc
lahf
imul
or
mov
out
sbb
push
mov
mov
xchg
xchg
push
in
scas
sbb
xor
stos
int3
sub
pop
jl
in
sahf
dec
add
push
aas
icebp
repz
push
mov
mov
shl
cmc
cmp
ret
add
dec
ss
popl
test
and
cmpsb
insb
fistpll
aas
inc
rorb
inc
mov
sbb
xchg
lret
xchg
scas
bnd
fsubp
loope
inc
ret
repz
lods
push
movq
pop
je
out
data16
fldt
jg
jmp
in
ljmp
jae
loope
inc
shl
inc
jg
ret
fs
inc
jecxz
xchg
lock
jne
loopne
mov
lret
into
outsl
shll
pop
clc
sbb
push
dec
push
and
fwait
mov
xchg
das
inc
cmp
xor
repz
mov
cmovs
das
stos
ja
cmp
jp
jo
push
rcrb
and
lret
pop
xchg
int3
sbb
stc
test
sti
xor
test
xchg
cs
jbe
sub
into
imul
outsb
jecxz
aam
and
sbb
inc
jns
sbb
xor
adc
xlat
dec
adc
dec
xor
fidivl
sbb
adc
loopne
in
dec
out
pop
adc
sbb
lds
xchg
jae
gs
xorl
sti
push
mov
je
dec
mov
and
nop
add
fistpll
or
xchg
out
inc
test
idiv
sahf
loope
sahf
pop
mov
fimuls
jp
push
and
mov
dec
jnp
in
mov
lahf
call
pop
flds
fistl
mov
xchg
sub
jb
mov
pushf
inc
divb
xor
loopne
insl
icebp
dec
cmp
ror
inc
aaa
jmp
push
shlb
jmp
aas
sbb
push
inc
push
popf
pop
sbb
inc
or
pushf
in
lds
fwait
push
jecxz
dec
lods
outsl
into
mov
std
mulb
bound
out
fs
mov
orl
stc
push
push
xor
push
cmpsb
or
jle
out
cmp
lcall
inc
idivl
sub
mov
inc
and
jbe
jne
vpsllw
jns
pusha
fcmovbe
sub
push
and
ljmp
sbb
mov
stc
cmp
int3
or
dec
add
popa
leave
test
push
je
pop
mov
jg
jo
pcmpeqb
jmp
aas
push
inc
mov
aam
cmp
cmc
jns
dec
ficoml
pusha
pop
aam
inc
sub
xchg
scas
clc
and
mov
cmpsl
imul
stos
cmc
lret
inc
mov
je
dec
sub
cmc
jo
pop
dec
mov
fs
outsl
mov
and
pop
mov
clc
adc
gs
mov
loopne
in
fiaddl
outsb
pop
mov
je
adc
jo
mov
sahf
jmp
leave
cmp
mov
loopne
pop
ret
test
inc
cltd
fwait
lock
mov
cmp
stos
aaa
out
add
and
mov
dec
pop
pop
sub
cmp
mov
mov
int
jae
and
rcll
push
loope
xor
lcall
ds
xchg
in
dec
cld
push
cs
or
rcrl
dec
das
push
jno
daa
and
pusha
add
jmp
jo
cli
repz
fidivl
and
fcomps
jb
lahf
add
inc
ljmp
cmp
fs
and
add
push
mov
jl
arpl
cmp
inc
and
adc
jmp
insb
scas
fbstp
jge
flds
in
enter
cs
mov
aad
gs
cwtl
cmpsl
mov
mov
idiv
nop
sub
mov
and
mov
clc
mov
push
add
cmp
sub
xor
scas
movsb
incl
ds
jns
mov
jno
add
fidivl
andl
fmull
mov
loopne
adc
cmp
xor
sbbl
ret
pop
or
jge
sub
loopne
add
mov
insl
pop
test
loopew
sub
lods
dec
nop
adc
adc
cmpsb
jecxz
aam
jmp
fstp
or
jmp
in
xor
jmp
or
pop
mov
pop
shll
shl
or
sbb
inc
pop
push
dec
iret
mov
jecxz
pop
stos
cwtl
fcomps
std
sahf
test
cmpsl
call
mov
cmp
in
lret
cli
pop
push
out
mov
daa
lods
inc
fwait
adc
mov
outsl
clc
movsb
cmp
call
in
andl
jge
sbb
cmc
popf
jmp
or
out
lret
push
icebp
jno
dec
aaa
test
jmp
adc
jbe
inc
mov
sbb
mov
sub
dec
ficompl
andl
cmc
ja
mov
xchg
ret
mov
or
lahf
negb
inc
cmpsl
imul
movsl
sub
enter
mov
in
test
ds
or
inc
pop
mov
out
cmpsb
and
pop
jo
addr16
cmp
out
out
inc
addr16
js
jns
int3
jno
je
sub
cli
testb
lahf
mov
pop
sbb
insl
fsubrs
mov
jae
mov
shrb
stc
pop
aas
ret
call
in
mul
sub
and
bound
fwait
pop
inc
mov
aas
imul
sbb
push
xchg
gs
test
nop
sbb
popf
into
and
xchg
adc
pop
cld
stc
sbbl
inc
repnz
pop
cmp
pop
int3
sub
das
daa
fadds
jmp
in
or
cwtl
mov
cli
cmp
push
aad
xchg
mov
inc
xchg
js
imul
arpl
mov
test
sbbl
sbb
cmc
mov
addr16
test
shll
cs
mov
fnsave
je
adc
int3
jge
cmp
repz
fucomi
andb
int3
sbb
push
cmp
add
loopne
in
cpuid
sub
loope
xchg
sub
inc
sbb
loope
fstp
and
cmc
paddd
mov
xor
and
repz
mov
dec
mov
mov
pop
daa
jge
decb
xchg
push
cmp
or
mov
sarl
pop
scas
push
lcall
adc
pusha
test
ljmp
push
inc
je
data16
jae
popf
and
sbb
in
mov
or
filds
add
mov
inc
lods
mov
dec
nop
cmc
sbb
out
lods
je
mov
push
int
je
mov
mov
mov
sub
xor
and
cmp
in
into
jbe
cs
pop
pusha
xlat
inc
jmp
daa
jbe
nop
or
movsb
jg
mov
movb
jo
xor
bound
jo
xlat
inc
jbe
dec
sbb
js
loope
movsb
idiv
lods
sub
or
sub
jo
sahf
adc
dec
loop
jle
xchg
jae
mov
jo
repnz
add
leave
pushf
jg
jns
cmpsl
rcl
xchg
cmp
das
outsl
js
jb
or
pop
pop
es
pusha
adc
jns
ja
jle
arpl
add
jbe,pn
outsl
je
stc
fcmovnbe
test
jecxz
aad
mov
or
xor
lods
mov
jg
cmp
xchg
xchg
xor
cmpsl
mov
pusha
add
push
mov
mov
enter
in
pop
aam
adc
ret
aad
cmp
negb
ret
test
loope
push
push
mov
ja
adc
jnp
xor
out
daa
js
push
xchg
mov
enter
add
add
imul
fldt
add
daa
sbb
xchg
rolb
push
jl
stos
adcl
bound
das
sbb
xchg
cmp
push
pop
xor
loop
std
sub
sub
std
cmp
push
dec
cmovp
push
or
inc
jne
pusha
movsb
mov
cmp
xor
adc
lret
scas
test
repnz
int3
sub
mov
addr16
push
daa
mov
add
jne
in
inc
xchg
cmp
ret
push
xor
sub
cld
js
mov
lea
clc
mov
mov
sbb
aad
sbb
adc
mov
mov
and
xor
mov
push
jecxz
and
xor
leave
adc
in
dec
add
cmp
movsb
enter
test
sbb
scas
jmp
xor
mov
xor
and
jge
pusha
push
stos
pop
lahf
jno
mov
push
and
xchg
test
and
out
int
rolb
iret
xor
cmp
push
ljmp
imul
imul
cs
jnp
ds
sbbb
dec
lods
or
out
out
mul
mov
sub
xchg
loope
mov
fs
ret
jae
imul
ja
jmp
jg
fwait
ja
movsb
mov
and
inc
inc
sub
fiadds
scas
in
sub
push
xchg
lods
je
repz
bound
lret
xor
das
les
aaa
xchg
or
in
cmp
out
fcomp
mov
mov
xchg
inc
into
mov
int3
cltd
mov
fildll
or
imul
adc
push
adc
inc
cltd
lock
out
and
xor
pop
add
and
pop
dec
add
outsb
sbb
xor
clc
mov
out
add
decl
mov
les
rcll
ret
aaa
inc
push
cmc
mov
cmp
push
xchg
fwait
push
cmpsl
cmc
ss
add
add
push
ljmp
push
sub
sub
sub
popa
mov
and
out
sbb
pusha
dec
adc
nop
hlt
jnp
inc
sahf
sbb
sahf
stos
mov
or
pop
mov
mov
or
adc
jge
mov
adc
inc
mov
mov
cmp
jmp
push
xor
mov
sub
loope
out
imul
cmp
push
addr16
cli
mov
je
mov
xor
out
xor
imul
shrb
sti
fwait
shrl
fisttpll
lahf
icebp
mov
das
ret
pop
add
xor
movsb
je
lret
mov
jmp
test
push
stos
mov
pop
repz
mov
pop
push
hlt
add
inc
hlt
enter
daa
mov
cltd
movsl
fdivrp
pop
neg
shll
aas
jmp
ret
push
xchg
add
push
sbb
mov
roll
and
xchg
pop
mov
sub
pop
push
jg
dec
dec
jo
cmp
mov
pushl
popa
and
test
cmp
cwtl
test
test
test
outsb
mov
imul
mov
xor
jae
loop
mov
js
ljmp
push
inc
add
cmp
xchg
rcrl
push
push
mov
and
cmp
and
sti
not
adc
pop
jnp
std
pop
lahf
mov
and
jecxz
xor
jmp
sub
pop
sbb
out
xor
popa
push
leave
fs
nop
dec
dec
sti
jecxz
sti
xchg
pop
pop
sbb
jp
cmovnp
jb
push
dec
mov
sbb
dec
outsl
push
sub
jl
out
push
or
inc
dec
and
orl
cld
cli
inc
sarb
inc
addl
sub
in
push
repz
dec
pop
stc
sti
xchg
mov
add
add
jne
add
test
dec
addl
mov
xchg
fbld
loop
out
loopne
adc
dec
push
rcrb
pop
lret
inc
mov
les
xchg
jmp
jg
add
xchg
dec
push
pop
and
pop
int3
cmovo
lea
movsb
scas
je
rcll
push
fistps
xor
loope
hlt
rolb
jmp
cmpsb
frstor
xchg
push
mov
or
dec
roll
lods
inc
outsb
xor
add
inc
mov
xchg
je
sti
xchg
cmpsl
lahf
adc
cmp
ss
xor
pop
ja
test
setb
dec
sub
adc
adc
cli
arpl
movsl
loop
and
inc
in
push
and
arpl
dec
into
mov
clc
adc
xchg
aaa
sub
mov
leave
and
jl
jle
imull
test
inc
sub
addl
call
sbb
inc
jp
ds
sahf
jl
jns
adc
xchg
cmpsb
scas
jbe
out
sub
xchg
mov
mov
dec
mov
inc
cwtl
pop
iret
popf
xor
aam
inc
add
jp
fs
movsb
leave
addl
push
push
sbb
xchg
lea
imul
dec
jmp
jmp
into
stc
enter
mov
and
adc
jl
mov
sbb
and
push
xor
inc
push
test
mov
push
int
mov
mov
or
mov
aam
out
mov
jae
test
ret
jo
sub
sbb
in
dec
jnp
movsb
sbb
xor
sbb
sub
ds
rcrl
mov
subl
or
bound
cmp
push
dec
fcoms
daa
mov
aas
lret
inc
xchg
cmp
orl
je
xor
fwait
mov
lret
pusha
shl
lock
and
insb
inc
loope
mov
sbb
xchg
das
nop
rorl
jae
mov
jae
ret
sub
fdivrs
jae
iret
int
push
icebp
sub
lahf
sub
mov
jge
mov
xor
cltd
jecxz
fstp
rcrb
add
aad
shll
int3
sub
fcom
mov
rorb
into
lock
dec
aam
fildll
in
dec
pop
and
pop
and
imul
in
sbbb
xchg
int
or
mov
adc
jl
xchg
lret
shll
shll
mov
sti
adcb
pop
inc
lds
add
pop
xchg
clc
clc
cs
in
ja
mov
sarb
mov
test
cld
and
hlt
jg
ds
pop
ficoms
popl
lahf
jmp
mov
sub
pop
or
gs
and
and
inc
dec
mov
add
jge
mov
push
shlb
xchg
mov
outsl
push
xchg
xchg
aaa
jae
sub
andb
inc
bound
outsb
aaa
push
gs
cltd
dec
xor
sub
hlt
dec
mov
into
pop
or
enter
testb
jnp
lret
sub
call
enter
clc
addr16
xchg
or
aam
cltd
add
push
mov
or
inc
mov
mov
xor
stos
pushl
sbb
xor
push
loope
push
xor
hlt
or
addr16
cmp
push
enter
adc
fdivp
pop
push
jmp
xor
inc
push
xchg
xchg
and
push
mov
jae
pop
dec
stos
test
cltd
jmp
lret
fistps
out
mov
dec
popf
shll
sbb
leave
cmp
dec
pop
mov
pop
or
cmc
out
push
xchg
or
test
imul
push
out
mov
fimull
call
das
out
jb
fwait
mov
movsb
fstpl
pop
adc
jbe
add
stc
push
jmp
clc
jae
test
inc
sbb
xchg
cmpsb
fstpt
test
dec
pop
call
inc
ds
pop
sub
out
push
iret
jne
xchg
pop
mov
pop
mov
aas
or
inc
mov
xlat
flds
pop
js
or
dec
xor
aas
mov
jge
data16
sbb
jmp
xor
add
xor
and
fistl
sbb
mov
mov
lock
test
fadds
inc
sub
jg
sub
sbb
inc
test
xlat
mov
fisubs
hlt
inc
jne
in
cwtl
data16
repz
add
stc
add
jge
stos
jnp
jbe
imul
mov
imull
js
mov
mov
into
cmpsl
rcrb
lods
sbb
cmpsb
fxch
insl
sub
mov
loope
xchg
mov
in
sti
ret
fsubr
dec
les
cs
aaa
bound
cmpsl
mov
adc
adc
pushf
fidivl
mov
fldenv
in
push
ss
and
xchg
xchg
scas
ffreep
add
jecxz
loopne
lock
outsb
test
or
push
jno
scas
push
inc
inc
lods
jmp
inc
adc
push
mov
shll
or
sbb
mov
arpl
in
es
clc
jl
cmp
nop
mov
push
nop
outsb
pop
xor
xchg
stos
xchg
lret
push
cmp
out
inc
jbe
test
cmc
push
xchg
lds
ret
cltd
fists
stos
mov
test
cmp
ret
ljmp
dec
icebp
pop
aad
mov
push
adc
xchg
das
in
push
pop
out
das
push
dec
adcb
cld
lret
pop
push
out
push
dec
inc
negb
outsl
rcrl
mov
inc
adc
dec
out
lcall
pop
out
in
or
mov
movsl
push
dec
mov
adc
mov
mov
addr16
inc
xlat
das
lea
test
dec
int
std
sarl
scas
xor
cli
cmpsl
aaa
cs
outsl
sbb
mov
enter
insb
push
ret
mov
or
adc
movsl
add
xchg
xchg
push
sbb
xor
or
mov
pop
or
mov
mov
clc
cmp
cld
xchg
loope
pusha
cs
push
fisubrs
out
add
shll
push
shl
xor
mov
adc
push
cmpxchg
lret
clc
cwtl
adc
jbe
cld
push
jns
mov
les
fisttps
pop
mov
and
fidivl
cmp
shrl
fnsave
sbb
loopne
or
cmp
inc
xchg
les
pop
outsl
in
lcall
aas
pop
scas
add
cmpsb
pop
jp
out
cmpl
shrb
clc
adc
pop
fmuls
scas
sub
ficoml
in
in
mov
shrl
push
push
lret
and
fdivl
xchg
jns
jg
scas
mov
xchg
and
jge
test
jns
pusha
and
loope
pop
inc
cmpsb
push
mov
push
loop
mov
pop
jmp
xor
mov
rdmsr
mov
inc
pop
pop
or
scas
mov
jns
fisttpll
jb
fs
lods
lea
xchg
aas
mov
aad
test
mov
fcoms
daa
pusha
mov
outsl
lcall
mov
rol
push
push
jno
outsl
jl
inc
cmc
push
mov
add
sbb
jne
test
cmp
xlat
and
and
push
inc
repz
leave
frstor
lahf
cld
mov
cltd
adc
insb
sub
lcall
inc
push
test
leave
inc
out
insl
and
in
cmp
icebp
mov
cli
lock
xlat
addr16
inc
inc
fstl
aaa
sub
cli
ss
xlat
mov
or
mov
sarl
pop
test
sub
jmp
mov
repnz
adc
test
add
dec
pushf
push
ret
pop
adc
scas
sub
add
pop
dec
xor
lds
xchg
fisubl
les
and
stos
adc
pushf
pop
sub
add
mov
pusha
pop
pop
je
inc
mov
adc
repz
sbb
lcallw
cs
push
sti
in
out
lret
xchg
in
aam
sbb
inc
cmp
adc
cmp
sub
mov
sub
xchg
adc
and
push
pop
in
enter
std
data16
in
sbb
jmp
add
sub
mov
jl
adcb
popa
jne
cmp
jo
adc
testl
xchg
cmp
iret
loop
mov
mov
push
jecxz
add
sbb
adc
shl
cmpb
sub
cmp
xchg
pop
lret
in
pop
out
xor
xor
rcll
mov
stos
xchg
frstor
jae
pop
adc
cwtl
push
xor
clc
aad
jnp
fsubp
jae
movsb
popf
jo
add
nop
bound
mov
add
jge
xchg
test
mov
mov
add
or
push
push
call
pop
mov
lea
dec
cmp
lods
sti
and
mov
mov
or
test
dec
out
repnz
or
outsl
mov
push
lcall
jns
je
mov
popf
add
lret
orb
sbb
loopne
and
dec
pop
hlt
mov
pop
rcrl
xor
xchg
loope
adc
xchg
jle
and
das
sub
xor
pusha
fistpl
push
outsl
fnsave
mov
bnd
jo
int
icebp
dec
or
scas
xor
add
ffree
jl
imul
fdiv
xor
jns
movsb
mov
pop
out
mov
in
test
aas
xchg
mov
imul
push
cld
je
cmp
xchg
hlt
ds
mov
push
dec
stos
mov
cwtl
ss
lds
sub
jg
fbld
mov
andl
scas
negb
pop
scas
push
cmp
fnstcw
mov
sbb
arpl
fmuls
cmp
sbb
cmpsb
push
mov
xor
or
mov
scas
in
hlt
or
xor
sub
es
lea
cmp
inc
shl
adc
addr16
mov
ja
cmp
push
leave
and
sti
lds
push
xor
sbb
cmpsl
xchg
or
cmp
lds
lods
add
std
xor
xchg
push
aam
jnp
ds
lret
das
mov
push
rcl
inc
add
inc
ds
xchg
cmpsb
jge
mov
jecxz
jmp
fldl
lret
lock
mov
clc
lea
addr16
sbb
jns
push
mov
scas
cmpsl
into
mov
ja
mov
cmp
out
pop
out
or
repnz
in
rclb
iret
mov
push
xchg
pop
pop
pop
xchg
rorl
lcall
and
adc
xor
les
push
sbb
popa
loope
mulb
mov
pcmpgtb
inc
inc
or
push
pop
xchg
mov
rcrl
aaa
push
ret
mov
pop
jge
cld
mov
mov
jg
popf
jbe
movsl
in
cmp
xchg
inc
mov
inc
stc
je
arpl
cld
mov
sbb
mov
or
xor
xchg
push
call
addr16
mov
push
push
shl
sti
pop
dec
gs
mov
xor
fbld
loopne
lods
cmp
pop
pop
adc
inc
add
cmc
inc
jmp
daa
adc
jo
imul
popf
insl
das
dec
loop
adc
lcall
in
xor
sarb
jmp
sub
mov
jle
inc
mov
jl
sbb
pop
push
mov
lds
cmp
lods
test
jp
cli
inc
push
or
xor
or
test
pop
mov
js
outsl
inc
sub
add
mov
push
rcrl
inc
out
and
sbb
inc
out
mov
scas
xchg
push
push
in
mov
in
sbb
stos
lds
add
xchg
ret
ljmp
jo
fisubrs
adc
aad
fimull
xchg
test
sti
lods
lcall
mov
push
lock
cmp
aas
mov
dec
inc
pop
ds
mov
scas
lds
push
arpl
sahf
sahf
out
mov
nop
inc
arpl
xor
leave
sub
lea
lea
stos
and
test
out
add
aas
and
cmp
popf
cmp
dec
jge
fdivrs
adc
ja
and
mov
addr16
xchg
xor
das
add
add
and
sbb
pop
fiaddl
mov
mov
or
popf
lock
pop
mov
nop
push
xor
scas
lods
and
dec
iret
arpl
stc
inc
pushf
loopne
hlt
ljmp
rcrl
or
sbb
pop
es
lods
call
xchg
mov
sub
dec
fnstsw
add
inc
jmp
xor
push
xchg
or
loope
js
clc
mov
push
loope
pop
in
and
fsubl
adc
pop
mov
stc
ret
rcll
sub
aad
mov
push
jmp
in
mov
sbb
push
mov
addr16
lock
sub
mov
stos
jne
test
scas
cmc
sub
rorl
sar
aaa
test
cmp
sbb
cmp
adc
adc
ficoms
incb
adc
jns
cltd
mov
mov
jle
je
test
in
and
jmp
ret
xchg
repnz
jl
out
inc
pop
push
inc
imul
mov
mov
mov
dec
xchg
repz
mov
sbb
idivb
bound
or
hlt
insl
lods
repz
pop
in
add
gs
inc
push
icebp
shlb
loope
out
jle
mov
sub
xchg
mov
in
xchg
inc
cmp
retw
inc
inc
pusha
sub
cmp
inc
sahf
popa
shll
inc
xor
loope
fldt
mov
scas
xor
mov
das
or
out
cs
add
xchg
out
jnp
adc
rolb
int3
jge
dec
xlat
push
fistpll
fnstsw
xchg
sti
mov
push
pop
mov
xor
scas
xor
push
call
jg
clc
sbb
push
add
add
inc
push
movsl
aas
lods
movsb
andl
or
pushf
std
out
xchg
inc
enter
pop
jecxz
subb
and
daa
adc
ret
ds
rorl
and
push
gs
jae
cli
lods
pop
ret
mov
leave
mov
mov
sbb
jecxz
out
in
cmpsl
jle
push
fldt
jbe
adc
repnz
cmp
fdivl
sub
push
test
fs
mov
xor
mov
mov
dec
add
mov
xchg
adc
cmp
mov
mov
adc
pop
cli
stc
sub
xor
mov
fidivs
jle
xorl
and
cmp
fidivrl
jl
xlat
mov
lret
or
jle
pop
xchg
jmp
or
xchg
pusha
lahf
mov
add
rcrl
pushf
adcb
pop
out
fiaddl
xchg
in
cmp
dec
data16
mov
frstor
test
shr
pusha
and
shlb
push
pop
test
stos
push
jns
and
bound
popa
or
pop
mov
xchg
jne
dec
jmp
xor
xor
adc
xlat
pop
adc
fs
pop
dec
frstor
cld
les
loope
and
test
jne
jecxz
outsl
dec
xor
aam
lret
bnd
call
lds
or
lahf
xchg
dec
je
fstpt
jbe
int
cli
or
cmc
test
mov
jns
int
xor
movsl
xchg
lods
movsl
sbb
cmpsl
mov
jne
in
aad
das
push
aas
adc
pushf
mov
sbb
push
push
adc
mov
or
inc
fdivrl
jge
addr16
or
imull
mov
test
and
fbld
cltd
adc
cmc
loopne
fsubr
lahf
push
testb
inc
mov
scas
xor
stos
jge
loope
jl
inc
push
push
mov
push
rorl
dec
cli
mov
sbb
adc
xor
pop
push
fidivrs
call
stos
shll
call
jnp
jnp
inc
addr16
lahf
loope
in
enter
adc
popa
and
clc
xchg
lret
xchg
cmp
sub
mov
jle
pop
xor
or
out
test
shlb
push
jle
fcom
lea
mov
mov
sbb
daa
lcall
subb
mov
dec
jne
mov
mov
or
sub
or
jge
xor
mov
clc
add
mov
idiv
add
sub
mov
push
fdivs
gs
mov
lods
push
mov
xchg
rclb
xlat
cmp
xchg
pop
mov
inc
jecxz
add
sbb
xchg
jl
insb
jle
sbb
data16
out
pop
xor
jge
fdivr
and
xor
int3
ss
sub
and
mov
ja
stos
adc
mov
mov
or
lods
shlb
cmp
leave
fidivl
hlt
jecxz
test
sti
into
sbb
inc
jns
out
or
mov
xchg
push
dec
cwtl
movsb
test
pop
int3
das
mov
push
sub
insb
mov
leave
std
fidivrs
inc
clc
push
test
push
lds
pop
inc
push
negl
shll
mov
scas
and
mov
insl
rol
xchg
xor
imul
cltd
push
aas
push
sarl
xor
adc
shrl
xchg
stos
fcoms
fstl
fnsave
and
flds
xchg
mov
cmc
jo
dec
pop
insb
mov
fstps
pusha
stc
or
psrld
jnp
ja
xchg
xchg
mov
or
lea
cwtl
scas
mov
dec
adc
sbb
fistps
mov
and
int3
xor
enter
dec
adc
roll
ja
push
stos
mov
xor
inc
push
aam
push
pusha
pop
cmpsb
es
nop
adc
add
pop
sbb
fistps
mov
jg
ret
ljmp
sbb
fwait
je
adc
dec
jl
mov
gs
xchg
call
sarb
iret
bound
addl
mov
in
and
aas
cmpsb
shrl
insb
xchg
inc
cmc
dec
sti
mov
std
dec
pop
pop
test
in
faddl
inc
movsb
ficoms
movsl
add
int
gs
sub
xor
inc
cmp
imul
and
aas
mov
jns
push
xchg
sti
and
cmc
dec
mov
push
jbe
scas
inc
mov
cmp
and
fsubp
gs
in
inc
in
rorl
or
aad
aas
es
lret
xor
mov
rcll
cltd
adc
pop
shlb
frstor
or
rorb
mov
pop
sbb
ret
in
stos
lret
das
inc
mov
fwait
mov
faddl
pop
shrl
pop
cmpsb
testl
or
sahf
mov
decl
push
sbb
shll
sti
jecxz
push
xor
inc
fcomps
cmp
inc
sub
add
dec
inc
enter
mov
dec
in
hlt
mov
or
xchg
xchg
ret
push
les
cwtl
aam
loop
inc
int
cmp
sbb
dec
cmp
cmpsb
sub
and
je
lret
sub
mov
je
cli
lods
cmp
xor
dec
and
scas
dec
xor
xor
xor
nop
xchg
inc
je
nop
mov
mov
dec
xchg
mov
inc
and
add
mov
xlat
icebp
xchg
adc
xchg
repnz
stos
pop
xor
sub
push
outsb
scas
add
mov
call
js
sarb
add
hlt
sub
sbb
mov
icebp
movsl
xchg
loop
cmpsb
sub
int
call
lds
mov
outsl
and
pop
add
mov
cwtl
inc
pop
pop
xor
mov
movsb
or
fimuls
mov
mov
sub
mov
loopne
icebp
test
jmp
lcall
xchg
and
xlat
push
add
mov
or
inc
repnz
insl
orl
dec
inc
sarl
mov
jmp
fidivrl
jne
mov
hlt
jle
dec
hlt
imul
mov
aam
imul
xchg
xchg
push
mov
dec
inc
lock
jl
into
jp
pop
mov
hlt
sbb
lahf
cmp
scas
in
cmp
shlb
call
movsb
icebp
jecxz
or
cs
mov
std
cs
dec
repz
fiadds
jp
xor
mov
js
xor
pusha
adc
leave
aaa
out
lea
movb
adc
mov
push
ja
test
mov
lcall
mov
movsb
scas
xor
mov
dec
inc
mov
ss
jmp
sub
int3
sbb
jb
push
rorl
mov
dec
shlb
icebp
or
loopne
adc
mov
cld
hlt
xor
mov
pop
and
cmp
test
shll
sub
outsb
mov
outsl
bound
or
mov
xlat
out
xchg
sub
outsb
test
iret
scas
ret
rcr
outsl
xchg
jb
push
lret
std
mov
in
mov
inc
inc
dec
pushf
mov
mov
add
fldt
ret
mov
jp
rcrl
fidivs
lahf
adc
pop
inc
mov
sahf
jnp
lods
out
cmp
out
push
daa
push
imul
cmp
pop
fistpl
emms
loope
xor
ficompl
lcall
cs
insl
add
xor
out
cmpsl
push
dec
popf
clc
bound
inc
mov
mov
loop
jmp
adc
outsb
xchg
aas
adc
sbb
mov
push
sub
clc
xlat
out
xchg
mov
xchg
add
mov
es
hlt
jmp
mov
shrb
in
sub
lret
in
xchg
fs
cmpsl
in
ja
cmp
pop
gs
aas
jecxz
ss
add
rorb
push
int3
aam
fs
cmp
into
imul
popf
pop
and
jnp
sub
roll
ja
mov
sbb
repnz
pushf
js
cmpb
sub
arpl
sub
mov
add
stos
push
cmp
stc
and
hlt
jg
cwtl
mov
jno
mov
xchg
push
push
push
jge
and
loop
das
shlb
in
push
stos
xchg
mov
jl
cmp
lea
xchg
or
push
lods
xor
xor
sbb
mov
push
aad
push
test
inc
cmp
pop
sbb
rep
cwtl
hlt
pop
in
into
outsl
xor
popa
dec
and
clc
push
jne
scas
sbbl
cmpsl
mov
mov
push
aam
adc
xchg
out
rolb
jmp
jns
and
int3
push
int
jne
fs
in
xor
mov
dec
adc
pushf
inc
dec
jns
jns
iret
xchg
push
pusha
out
call
out
hlt
sidtl
sub
std
jne
sahf
sbb
out
lret
idivb
loopne
jne
add
mov
inc
inc
push
cs
jnp
pop
cmp
dec
adc
or
mov
mov
out
pop
mov
inc
mov
mov
pop
or
lcall
scas
bound
adc
sub
adc
xor
jmp
mov
cmpsb
cmp
and
insb
or
jne
xor
cmp
lods
aaa
cmp
scas
ljmp
testl
in
test
mov
jecxz
cli
clc
ret
cmp
push
stos
ja
test
sbb
hlt
mov
xor
xor
scas
leave
arpl
jno
test
dec
loopne
pusha
cmpsb
xchg
mov
enter
idivl
enter
xchg
shll
or
and
pop
add
mov
in
pop
sbb
aas
fstl
roll
mov
out
xlat
bound
ljmp
out
std
xchg
ljmp
add
mov
loopne
loop
sub
loope
jnp
ds
jle
ljmp
aas
mov
mov
mov
adc
mov
mov
fdivr
pop
ds
in
push
in
pop
fnsave
lock
int3
push
or
mov
mov
fwait
adc
nop
stos
inc
ja
mov
mov
xor
sahf
in
mov
stos
dec
mov
jge
stos
scas
cmp
sbb
aas
faddp
cld
std
aad
pop
xor
push
les
rol
hlt
movsl
icebp
xor
mov
in
in
icebp
mov
jbe
popf
scas
xor
rcrb
inc
in
push
fsts
cmp
call
bnd
xchg
push
ret
pop
repz
popf
mov
dec
ficomps
cmc
fcmovb
push
sbb
sbb
cmp
mov
xchg
pop
sub
push
arpl
or
outsl
cmp
gs
jns
lea
jb
gs
push
sahf
fsubl
cmp
xchg
cltd
adc
hlt
sbb
sbb
pop
jo
push
mov
out
call
fwait
movsb
xor
subb
loopne
jns
jle
inc
andb
push
cli
xchg
jmp
add
jb
stos
or
push
inc
inc
mov
gs
pop
inc
outsb
or
push
sbb
les
pushf
xor
adc
imul
sub
fmulp
inc
dec
lods
jg
xchg
pop
push
mov
adc
aaa
cmp
jae
or
pop
sbb
pop
test
mov
mov
popa
inc
pushl
js
jecxz
cwtl
jmp
xchg
xor
sbb
sbb
and
pop
into
and
shrl
push
adc
jecxz
stos
addl
mov
pop
inc
ds
pop
pop
mov
cmp
or
sub
leave
aas
dec
std
js
xor
jp
dec
ljmp
repz
and
xor
or
popa
flds
cmp
cmpsb
sub
bswap
and
adc
push
test
mov
fimuls
xor
mov
daa
push
inc
out
lret
mov
add
sbb
testb
push
push
dec
gs
or
dec
fdivs
mov
sbb
adc
push
out
cmc
ret
cmp
nop
gs
insl
loop
inc
pusha
cltd
pop
stos
pop
mov
int3
pushf
gs
leave
lds
js
mov
je
sub
push
jge
lgdtl
xchg
aad
mov
popf
dec
nop
int
lret
leave
mov
pop
fs
enter
int3
cmc
neg
data16
dec
inc
popf
dec
dec
bound
add
fnsave
mov
mov
call
xchg
and
rcrb
mov
xlat
lock
decl
pop
xchg
movsb
scas
fldt
or
out
lret
jbe
mov
loope
mov
add
or
ret
cmp
pop
loopne
js
pop
xchg
scas
das
pop
and
sbb
mov
loopne
mov
xlat
jl
std
bound
fcoml
aam
pop
xchg
sarb
adc
cmp
mov
or
mov
add
pusha
enter
cmpsb
sbb
jnp
fildl
fs
jmp
dec
fsubs
sbb
push
ljmp
testb
inc
adc
stos
in
lods
in
jbe
imul
fs
sbb
mov
add
add
clc
nop
movsb
mov
mov
hlt
adc
loopne
xchg
test
mov
or
inc
jge
xchg
jno
scas
push
lock
dec
lret
pop
rcrl
and
pop
adcb
nop
dec
mov
sub
push
in
jmp
mov
sub
pushl
test
cld
mov
imul
setg
cld
leave
cmp
loopne
aas
dec
cmp
sbb
jo
test
cmp
pop
mov
or
icebp
inc
mov
or
xchg
mov
adc
fistpll
loop
push
dec
dec
sahf
dec
fs
cmp
mov
adc
add
sarb
ret
mov
jnp
lea
test
push
mov
movsb
ret
add
inc
lret
and
dec
mov
outsl
inc
sahf
in
xor
mov
jb
or
and
mov
lahf
xchg
fistps
inc
xchg
cmpsb
push
inc
das
mov
pop
push
or
and
pop
movsl
or
leave
jns
add
xchg
int3
faddl
dec
arpl
pop
bound
jecxz
out
or
xchg
fstps
mov
shll
xchg
mov
inc
ret
cld
or
out
sti
sahf
iret
inc
out
cmp
sub
adc
cwtl
xlat
sbb
fdivs
cs
inc
pop
xchg
test
fcomip
mov
std
xor
add
sarl
sub
and
cmpsb
push
faddl
sub
pop
mov
jmp
lret
fadds
xchg
jge
pop
and
inc
xchg
cmp
mov
aas
mov
repz
and
shrl
ja
xor
fldenv
add
cmp
dec
loopne
inc
cmp
inc
hlt
loope
data16
fildl
scas
enter
xlat
cmp
fsubrl
adc
xchg
jae
imul
es
lahf
adc
rcll
sbb
inc
inc
xchg
pop
lcall
xor
xor
jecxz
loop
scas
test
adc
test
lahf
sub
jl
pop
sbb
je
stos
das
mov
pop
ds
inc
sub
pop
push
xchg
sahf
pop
out
and
xchg
xor
fwait
lret
or
sub
xchg
aad
int3
mov
in
xlat
lods
push
and
add
outsb
fdiv
imul
xchg
or
mov
in
push
test
dec
stos
dec
or
inc
mov
cli
incb
mov
iret
mov
mov
cmpsl
lcall
xchg
inc
pop
lret
xchg
push
int3
fildl
inc
adc
add
outsl
inc
jl,pt
or
rorl
cmc
xchg
icebp
rcrl
xchg
xchg
mov
jl
pop
ds
scas
adc
adc
mov
push
jl
pop
jg
jnp
scas
cmp
mov
in
mov
cld
arpl
mov
mov
jns
lds
repz
hlt
sub
pop
insl
or
pop
jmp
out
aam
jmp
xor
cli
mov
das
pop
add
mov
lea
xchg
aaa
repz
outsl
mov
and
xchg
and
std
in
or
inc
out
std
xor
xchg
or
dec
test
mov
sub
push
and
add
mov
rcr
push
cwtl
push
push
movswl
add
pop
xchg
ja
ret
lcall
iret
sbb
test
jns
test
addr16
jle
fcompl
fcmovnu
cltd
pop
push
les
adc
adc
addb
xor
fstpl
cmp
leave
mov
xchg
add
mov
sub
push
jmp
mov
rolb
hlt
dec
xchg
punpckhdq
arpl
mov
stc
jge
pop
push
mov
adc
sbb
sub
shll
push
mov
mov
sub
shrl
sti
jle
xchg
aas
mov
in
jecxz
stos
push
mov
imul
fcomi
enter
add
add
aaa
pop
jb
and
shll
mov
insl
cmp
pop
ds
mov
sbb
mov
push
cld
stos
leave
ss
fnstenv
and
push
jmp
fstps
mov
in
icebp
jg
fsubl
xor
in
cld
orb
jno
adc
icebp
loopne
aaa
push
jl
mov
int3
inc
out
imul
dec
pop
insl
or
push
push
into
adc
sbb
jge
mov
jne
mov
mov
dec
mov
fdiv
xor
adc
stos
imul
add
pop
jno
lret
mov
push
lods
pop
jne
pop
movl
push
and
jno
pushl
scas
imul
push
mov
pop
clc
push
sarb
testb
stos
pop
inc
push
xor
adcb
xchg
xchg
mov
xor
adc
pop
sub
fwait
xor
mov
pop
inc
cli
cmp
sub
push
lret
push
add
mov
cmp
mov
mov
lods
xchg
inc
addr16
ds
add
push
add
sbb
lds
push
sub
lret
test
xchg
cmp
xor
cmp
leave
ja
push
into
mov
xchg
stc
movsl
inc
ret
sub
in
ret
clc
mov
std
movsl
and
orb
dec
add
add
aad
mov
or
stos
dec
pop
jp
lret
and
mov
sub
inc
addl
cmc
leave
dec
sti
xchg
mov
pop
dec
xchg
adc
outsl
or
mov
or
mov
lock
sahf
sbb
or
fwait
dec
push
jns
iret
xchg
in
test
sub
push
inc
ja
lret
cmp
and
push
int
cmpsb
pop
xor
inc
jbe
stos
or
repnz
adcl
js
test
sub
jb
and
std
fildll
jo
in
je
sbb
xchg
lods
arpl
add
iret
in
mov
cmpsl
jge
xchg
jle
rolb
insl
adc
cmpsl
mov
mov
es
jp
fistpll
scas
pop
addr16
jecxz
test
out
aas
mov
xchg
cmp
into
push
je
mov
add
cmp
mov
outsb
fs
enter
cmp
ljmp
ss
inc
push
lret
mov
push
nop
pop
add
xor
ficoms
mov
lahf
fucom
jmp
fwait
stos
std
addps
push
pushf
lock
xchg
sahf
sub
push
lock
addr16
scas
and
pusha
dec
into
or
sbb
inc
and
jp
sub
mov
mov
push
enter
cmpsl
sub
xor
cmpl
mov
addb
pop
leave
push
and
data16
and
jae
mov
cmp
lea
xchg
push
mov
inc
or
icebp
sub
mov
or
xor
cmp
cmc
sub
pop
xchg
push
jp
cmp
insb
adc
ficomps
sub
jecxz
and
imul
push
add
stos
push
cli
loop
testb
inc
mov
icebp
push
testl
inc
les
sub
mov
stos
add
pop
jns
sbb
subl
pop
in
dec
loop
mov
sub
sarl
movsl
dec
in
out
xchg
mov
cmpsl
sbb
addb
movsb
into
cmp
ret
mov
fldcw
push
cmp
xor
push
pop
adc
sub
push
out
add
inc
jl
out
test
push
jns
mov
jg
inc
out
rorl
inc
cs
mov
push
in
xor
pusha
mov
cmpsb
shlb
sub
pop
fwait
les
mov
ffreep
ss
sarl
adc
fdivrs
xchg
pusha
cmp
stos
add
rcll
or
and
or
lret
js
repnz
cmp
xchg
jmp
ljmp
mov
cmpsb
jmp
push
sub
sub
ja
xor
add
cmpsl
inc
xchg
fdiv
fistpl
inc
pusha
in
sbb
imul
mov
andb
ret
cmpsl
add
xchg
sti
ja
mov
sbb
xor
dec
movsb
loope
jmp
test
loop
inc
sub
adc
mov
pop
std
push
push
scas
mov
out
mov
das
cltd
ss
jbe
fwait
xchg
sub
inc
add
outsb
movsb
iret
xchg
mov
jp
or
dec
jle
in
loop
push
push
inc
std
sbb
in
dec
xor
mov
xor
in
orb
sub
mov
outsb
shlb
fs
call
aaa
xor
push
xchg
scas
push
and
push
push
pop
fwait
aad
mov
mov
das
cltd
add
jae
push
cmp
pop
dec
dec
push
mov
inc
aaa
jns
andb
add
out
adc
inc
fsubrl
xchg
pushf
insl
xor
mov
lea
dec
arpl
adc
xor
fsubl
mov
das
mov
ljmp
jb
inc
fucomp
sarb
bound
xor
push
hlt
cwtl
adc
mov
fdivrl
adc
not
inc
shl
imull
xchg
inc
std
xchg
das
lret
jae
packsswb
dec
cmpsl
add
clc
cmp
jae
xchg
subl
leave
outsb
push
test
fwait
sahf
out
or
xor
popa
dec
jge
scas
cs
fiaddl
cli
fildll
or
lahf
sbb
jns
add
adcb
das
push
scas
add
fwait
mov
mov
pop
loopne
int
dec
enter
fwait
xchg
ja
mov
inc
mov
aad
or
dec
inc
pop
stos
flds
jg
or
cmp
in
pop
subb
inc
aad
mov
mov
pop
pop
movl
cli
push
pop
mov
sbb
push
out
shrd
or
lcall
addb
es
rcrb
lea
xchg
pop
lds
and
adc
inc
sbb
enter
es
xchg
out
mov
fcmovbe
dec
cltd
xchg
aaa
aas
fucompp
addl
jp
cld
in
xor
jl
mov
jnp
movsb
jb
addr16
jecxz,pt
roll
dec
inc
fisubl
sbb
outsl
les
movsl
movsl
lea
fs
rcrl
push
lret
lahf
lods
sub
cmp
std
int
movsl
jbe
jl
xorl
in
adc
test
icebp
dec
and
fwait
sbb
outsl
std
std
xchg
push
imul
adc
cmp
adc
mull
add
push
aas
sub
jp
xchg
lock
call
aad
cltd
jnp
out
cwtl
xor
decb
int
mov
imul
sbb
push
ror
lahf
push
xchg
es
xor
lea
imul
add
outsl
imul
out
pop
dec
mov
lret
repz
cld
mov
mov
sbb
fmuls
jl
mov
cmp
pushf
lcall
dec
cmp
jl
inc
cltd
ja
cmp
ret
cmpsl
add
dec
pusha
xorl
push
mov
popf
push
mov
and
xchg
test
push
aas
test
ret
mov
mov
sbb
inc
xchg
mov
popa
xchg
adc
cmp
xor
push
ret
add
jnp
popa
xor
pushf
add
leave
testl
es
mov
adc
inc
fistl
faddl
mov
imul
or
mov
pop
shrb
inc
and
adc
pop
xchg
in
sub
je
mov
or
sbb
sbb
es
xor
cmp
mov
add
fidivrs
in
pop
xchg
dec
in
xchg
sub
inc
jg
gs
inc
lahf
jb
test
inc
dec
das
and
mov
cmp
pop
dec
out
cli
ss
fbld
jecxz
cmp
cmp
fadds
mov
cmpsw
or
clc
and
jge
xchg
fstps
loope
push
xlat
or
iret
and
push
mov
leave
or
push
or
aam
out
mov
cli
push
push
add
dec
dec
imul
mov
out
jns
pop
dec
push
push
sbb
aaa
aam
xchg
push
jl
scas
fimull
push
nop
lods
mov
and
in
jae
pop
mov
xchg
mov
movsl
or
into
imulb
dec
mov
inc
pavgw
je
dec
inc
insb
outsb
lcall
mov
pop
add
fimuls
add
push
inc
data16
adcb
fs
and
icebp
add
xchg
scas
inc
add
lds
leave
test
test
push
adc
test
xchg
sbb
pop
mov
test
dec
dec
lds
shll
sti
mov
mov
push
mov
cmpsl
fistpl
shrb
sahf
mov
dec
and
xlat
pop
jae
push
pop
mov
out
jg
les
dec
aas
and
mov
inc
jnp
or
ret
jg
movsb
aad
pop
rep
push
pop
mov
sbb
ret
rcll
enter
scas
pushf
jmp
or
icebp
adc
mov
fisubrs
add
fisttpl
push
jne
ret
dec
jle
jne
mulb
pop
lcall
jo
dec
add
into
clc
push
pop
mov
push
scas
pop
addps
cltd
push
popa
sbb
fyl2xp1
xor
mov
and
xchg
mov
xchg
out
test
pusha
mov
and
or
cmp
dec
push
jne
into
push
dec
sarb
aad
mov
inc
push
dec
outsb
fildll
push
in
inc
jae
aad
cmp
out
and
mov
or
test
adc
pop
ds
subb
pop
pop
sub
sub
shrl
xchg
mov
mov
data16
in
push
xor
xorl
loop
push
adc
pop
pop
sub
xorl
stc
sbb
loope
aad
into
push
lcall
scas
and
dec
jle
je
push
push
push
sub
cmovl
rorb
in
add
xchg
pop
sub
je
add
and
sar
push
sbbl
lcall
scas
fisubs
xchg
iret
lock
insl
dec
js
xor
add
gs
outsl
lret
and
jg
push
nop
ja
enter
push
dec
arpl
mov
cmp
gs
mov
addr16
mov
jns
sbb
enter
mov
enter
jle
lcall
push
cltd
ljmp
cmp
jmp
push
aam
loopne
add
mov
popa
sbb
xchg
test
or
jmp
or
stc
push
inc
mov
lret
xchg
mov
sbb
in
xlat
inc
add
mov
mov
ret
jg
push
js
inc
icebp
dec
cmp
fucom
stos
movsl
dec
cld
push
and
int3
push
stc
or
xor
inc
fldl
inc
pop
sbb
sub
lret
jne
mov
pop
mov
and
lock
jnp
or
or
and
cmpsb
sbb
mov
mov
insl
or
push
ds
sub
mov
ror
or
popa
sbb
in
pop
dec
sbb
ja
xor
lcall
sub
cmp
and
xchg
dec
inc
je
pop
out
prefetch
nop
pop
scas
test
enter
mov
ror
mov
mov
mov
xor
mov
and
ds
jo
adc
lcall
inc
and
and
sub
sti
lret
aam
xchg
dec
mov
test
dec
mov
adc
mov
mov
mov
out
mov
dec
push
enter
push
ljmp
stc
inc
jbe
lds
mov
pop
cld
lock
dec
xor
and
cli
cmp
adc
fwait
popf
push
stc
lods
jb
jb
movsl
in
movsl
dec
add
inc
movsb
lea
mov
aad
or
adc
sub
push
inc
out
mov
cmpsl
ret
movsb
aaa
fstl
xor
pop
iret
rcll
or
dec
mov
icebp
cmc
xor
js
ja
mov
jle
mov
mov
and
xor
cmc
mov
push
mov
add
out
pop
aas
adc
add
call
inc
cmp
cmpsb
cmp
fmull
inc
mov
std
ret
push
jne
mov
xchg
pop
dec
mov
xor
mov
dec
pop
popa
mov
nop
js
cmp
jmp
icebp
pushf
mov
in
hlt
ret
ret
push
dec
push
push
push
xchg
int3
adc
test
adc
inc
test
mov
bound
imulb
push
jmp
xor
lods
fidivl
sub
clc
cwtl
mov
out
inc
fldl
int3
fwait
dec
aam
sets
adc
lock
mov
mov
pusha
leave
jne
push
out
pop
jne
lcall
pop
and
out
imul
filds
jp
test
mov
dec
and
lret
out
out
sbb
inc
adc
and
shl
fistps
jne
jae
pop
jl
daa
xorb
and
or
xchg
jo
dec
sub
mov
rcrl
mov
cmc
not
cmp
cmpsb
das
pop
std
dec
dec
adc
pop
adc
lods
addr16
and
pop
push
jge
fwait
jno
push
jge
inc
push
pop
inc
mov
in
ja
sbb
mov
cmp
sbbl
cli
push
sbb
cmp
rcll
jne
or
mov
ret
out
adc
call
push
in
and
cmp
add
xor
sbb
daa
scas
bound
aam
jb
movb
les
mov
ss
cmp
and
sbb
push
cltd
lods
sub
imul
cmpsb
push
push
or
outsb
push
testb
popf
and
xor
loopne
mov
push
adc
pushf
push
dec
dec
xlat
inc
fs
inc
pop
add
inc
xor
enter
cmpsl
icebp
test
push
idivl
lds
jbe
or
gs
jmp
sub
adc
dec
jmp
push
or
ret
cs
add
jae
iret
xchg
xorb
jp
aam
out
mov
data16
hlt
sbb
dec
in
push
sub
xor
cltd
fdivrl
xorb
or
xor
and
test
test
adc
fs
movsl
xor
int
movb
mov
add
clc
rorl
and
subb
jle
xchg
test
fwait
sar
xchg
lcall
jmp
or
jg
popf
push
jns
sbb
xorl
icebp
faddp
sbb
test
enter
into
aas
jbe
stc
pop
jae
push
xor
cmpsb
fsts
xchg
dec
insl
mov
scas
out
xchg
ret
mov
sub
xchg
cli
loope
xchg
xchg
cmp
das
dec
push
shrl
filds
xorl
push
outsl
movsb
push
mov
stos
mov
ret
nop
and
sahf
lret
mov
jae
jnp
stos
mov
pop
cmc
mov
jne
clc
loopne
push
mov
push
jae
pop
adc
add
lds
jl
repnz
pop
dec
or
cmp
push
out
mov
rcrl
adc
push
and
sub
cmc
in
xor
test
fists
arpl
xchg
cmp
sub
in
jo
outsw
in
xchg
repz
sub
scas
insl
into
outsl
fistpll
pop
loopne
imul
xchg
adc
and
xor
jns
lods
lods
mov
or
insl
jnp
mov
popf
xchg
cmp
test
add
inc
jp
lods
mov
xor
xor
and
inc
aad
cmc
test
inc
or
movsb
adcb
je
dec
sub
add
xorl
sub
cmc
movsb
or
lret
mov
test
lret
push
pop
and
leave
jp
shrl
mov
mov
sbb
jge
in
push
mov
push
cmp
mov
pushf
jmp
adc
pop
lret
sbb
push
push
pushf
imul
sbb
fmul
sbb
loope
cmp
jge
or
sahf
push
popa
data16
enter
icebp
int
dec
test
xchg
and
jae
cmp
fsts
dec
movsb
sbb
adc
mov
divb
mov
cli
mov
jg
adc
mov
repz
dec
ret
outsl
iret
cmp
jg
addr16
cmp
pop
push
fs
mov
call
push
mov
xor
dec
sbb
adc
aas
pop
xchg
cwtl
mov
shll
bound
js
xchg
ja
adc
outsl
push
or
jmp
rdmsr
mov
mov
pop
cwtl
into
adc
iret
repz
sahf
inc
sahf
dec
add
add
pop
add
les
pop
ucomiss
repnz
fwait
mov
imul
ret
adc
push
nop
or
dec
out
daa
scas
es
pushf
lret
push
cmp
lret
adcl
or
sbb
xchg
xor
mov
nop
jnp
xchg
out
les
daa
push
mov
mov
aaa
or
fstps
es
aam
outsl
mov
cmp
scas
cs
call
sahf
stos
xor
mov
sub
mov
in
cmp
addr16
pop
pushf
mov
fwait
fs
nop
mov
shrl
sub
mov
loop
bound
and
lret
xchg
inc
xlat
mov
mull
cmp
mov
call
leave
xchg
pop
sahf
xchg
jbe
lret
lods
dec
cmc
fadd
jbe
lds
nop
aam
dec
inc
in
repnz
int
out
roll
mov
and
xchg
and
sub
in
or
push
out
sub
adc
mov
jmp
test
jp
in
dec
int
xor
xor
jb
pop
jge,pt
aaa
pop
imul
push
sbb
addr16
ljmp
jl
add
repnz
push
mov
mov
inc
jecxz
dec
mov
int
int3
cltd
aas
cmp
dec
sbb
loop
mov
jb
inc
loopne
xor
jne
ljmp
dec
adc
lcall
shlb
lret
dec
inc
inc
js
adc
mov
jg
shlb
mov
and
daa
sub
mov
adc
mov
das
add
xchg
pusha
repz
mov
imul
ljmp
sub
dec
in
pushf
and
int
bound
pop
cmp
scas
xor
les
push
dec
pop
dec
lds
xor
jns
in
and
mov
daa
icebp
sbb
popf
repz
and
sahf
mov
fisttpl
cmp
mov
jmp
add
jb
aam
test
dec
xchg
add
lcall
idivb
test
push
fwait
and
mov
fadds
xchg
mov
sbb
test
mov
stos
lock
in
adc
outsl
pop
test
in
fwait
jecxz
sub
push
popa
out
push
aad
adc
lret
in
jne
pushf
push
cmp
ds
pusha
sahf
imul
lods
aas
fnsetpm(287
mov
outsb
or
popa
mov
inc
jnp
cld
popf
inc
cmp
std
insl
repz
jle
mulb
mov
add
or
sbb
rclb
stos
cmp
mov
pop
mov
sub
cli
and
lret
adc
push
mov
lret
addb
mov
sti
dec
and
or
inc
enter
push
aas
push
xor
mov
arpl
jecxz
mov
push
dec
in
or
jb
pop
sbb
mov
push
jo
add
and
push
jo
inc
out
mov
mov
mov
and
or
and
sahf
push
xchg
xor
cmpb
imul
insb
int
or
mov
mov
test
daa
test
jns
fisubs
les
xor
xlat
popf
fcomps
sub
stc
bound
dec
pop
adcb
and
imul
xchg
flds
or
pop
xor
lahf
jmp
xchg
or
jecxz
dec
xchg
rcll
adcb
pop
mov
xchg
hlt
or
negl
jg
ljmp
dec
shlb
and
dec
or
lret
push
popa
loopne
aam
arpl
pop
dec
inc
pop
mov
fistpl
dec
sub
lret
xchg
sahf
push
adc
flds
and
data16
loope
gs
leave
cwtl
sahf
and
cmp
adc
mov
bound
jl
es
test
shl
ss
cmc
lea
mov
add
or
stos
sub
sbb
fwait
jnp
dec
mov
orb
incl
mov
inc
push
add
sbb
jae
mov
xchg
lods
test
jbe
mov
in
mov
ret
ss
call
add
add
pushl
mov
mov
push
arpl
in
addr16
ss
adc
adc
das
mov
sahf
cmp
inc
sarb
jmp
mov
xor
test
jg
pop
in
cmp
push
dec
mov
dec
ret
inc
fadd
into
pop
fbld
es
jno
push
inc
jecxz
mov
jecxz
lahf
adc
adc
scas
lods
ljmp
lahf
aad
xor
sbb
ja
sar
fists
mov
mov
pop
xchg
dec
add
xchg
addb
dec
push
mov
mov
es
push
iret
int
popf
lock
ret
cwtl
lahf
jno
inc
pop
or
pop
jmp
xor
jmp
or
inc
sahf
fists
cs
sbb
mov
add
cmp
jmp
popf
lods
mov
std
inc
and
pop
cmp
dec
add
push
loopne
fcomp
fcomps
in
xchg
iret
int
pusha
outsb
pusha
nop
sbb
loopne
sti
add
lahf
xorl
jg
adc
aas
pop
push
dec
orl
xor
or
jbe
sbb
sub
into
dec
pop
imul
push
fmuls
jmp
in
stc
and
push
arpl
pop
test
push
shll
or
push
cmp
lahf
lea
inc
ds
mov
adc
out
jg
mov
xchg
xor
sahf
mov
into
int3
sbb
dec
xchg
ficoms
rolb
dec
jnp
mov
xor
int3
cmpsb
mov
xchg
xor
cmp
rcr
call
jnp
insb
enter
shlb
jne
daa
jns
lock
xchg
jno
or
fnstenv
xor
mov
dec
testb
sahf
cld
pop
movsb
mov
push
in
jo
loopne,pt
inc
add
shrl
fwait
sub
enter
pushw
push
fs
aam
cmpsb
js
inc
push
fprem
enter
xor
mov
cmp
psubusb
aad
dec
leave
sbb
mov
popf
inc
in
mov
bound
dec
outsl
cmp
push
dec
fs
into
ds
ret
arpl
sbb
in
lcall
jae
dec
mov
pop
cltd
scas
nop
mov
orl
adc
iret
inc
inc
add
inc
dec
jmp
xchg
jo
mov
outsb
jg
jne
leave
andl
mov
xor
push
jp
jb
ljmp
aas
testl
inc
test
xor
std
cmp
xchg
aas
roll
ss
and
add
sub
pusha
push
push
sub
cmpsb
inc
inc
push
int
es
shl
sub
test
ja
pop
cmp
ss
movsl
sti
jnp
mov
xchg
jge
ja
push
or
mov
mov
mov
pop
mov
ja
mov
and
std
mov
push
popf
dec
pop
mov
sub
mov
cli
in
psrld
incl
roll
inc
in
stos
sub
sbb
cmpsl
xlat
test
add
mov
pop
pop
sbb
pop
xchg
test
and
cmp
jo
subl
js
sub
scas
sub
adc
sub
shll
lea
mov
cmpsb
and
mov
dec
sahf
sub
adc
fwait
and
jb
push
adc
ja
fsubr
or
jmp
loop
fcmovu
bound
sub
xchg
jo,pt
insl
jp
jns
cmp
sub
jb
lods
sahf
lcall
or
fistl
dec
xchg
and
push
scas
jecxz
out
pop
add
jg
push
mov
and
popf
lods
push
mov
xlat
es
jg
inc
xchg
xlat
cmpsb
ficoml
xchg
mov
xor
mov
fldl
pushf
outsb
mov
adc
mov
pop
pop
xor
xchg
cwtl
stos
ja
xchg
in
insl
xchg
cld
roll
lods
hlt
pop
dec
adc
adc
stc
sbb
pop
dec
add
jle
and
cmp
in
test
stos
lcall
jo
scas
push
sub
sahf
add
sahf
mov
pushf
mov
sub
decl
pop
sti
and
and
fisttpl
lcall
or
imul
les
pop
outsb
push
stos
xor
dec
in
xchg
out
xor
cmp
and
xor
stc
add
dec
test
push
movsb
nop
sti
mov
dec
loope
inc
lcall
jbe
pmaxub
mov
loopne
imul
dec
inc
pusha
jo
pop
push
arpl
mov
in
roll
sub
or
pop
xchg
mov
sub
and
fadds
sub
cmpsb
jge
imul
xorl
loope
push
cmove
gs
mov
dec
adc
je
fst
ss
or
leave
mov
ljmp
dec
xor
icebp
rcrl
lahf
or
ret
and
adc
or
and
out
cmc
add
mov
ljmp
imul
push
sbb
repnz
repz
outsl
sub
add
push
fildll
call
fildll
pop
push
loopne
sbb
or
xchg
jo
mov
popa
mov
inc
push
fs
js
pusha
movl
cmp
cmp
cmp
pop
push
inc
orl
jns
imul
lahf
pushf
and
push
mov
fidivl
shll
fldcw
mov
subl
movsb
or
js
dec
es
xchg
adc
and
movsb
jecxz
rcll
fsubp
lock
notl
out
mov
stos
dec
popa
std
jl
cmp
adc
cmp
int3
mov
jns
mov
fldt
int3
les
mov
rorl
add
add
inc
ror
mov
fs
or
out
jae
jecxz
aas
clc
fadds
movsl
pushf
dec
mov
or
mov
fnstsw
cmp
dec
jmp
sub
lock
call
or
adc
mov
mov
insb
dec
arpl
push
mov
cld
xor
movsb
cs
cmp
mov
cmp
pusha
push
mov
lea
mov
dec
pop
in
insl
jbe,pn
sbbb
jbe
mov
xlat
pop
fwait
mov
xorb
ljmp
bound
rcl
mov
hlt
sub
push
push
lods
lcall
mov
cmp
sbb
movsb
cmpsb
or
fcmovbe
adc
push
scas
jmp
cmp
push
clc
jmp
or
clc
sub
dec
shrl
data16
dec
xor
aaa
lock
lret
pop
out
push
mov
mov
sub
lods
iret
incb
cmp
scas
inc
mov
xor
and
in
xor
xchg
dec
insb
cmp
aaa
xchg
rcll
mov
int
lcall
and
scas
lods
mov
sub
movsb
mov
das
adc
aad
aam
sbb
mov
in
or
push
mov
push
mov
push
jno
fisttpl
or
scas
movsb
pop
lcall
stos
dec
sbb
xchg
dec
xchg
in
or
lea
jl
jle
lret
inc
add
mov
cmp
std
cs
sub
push
ds
pop
js
mov
aas
je
test
push
jo
ljmp
push
add
cmp
rcrb
add
inc
popf
lods
dec
sbb
adc
inc
pop
pop
popa
or
mov
push
cmp
and
insb
lods
add
hlt
mov
mulps
add
sub
popa
jns
test
mov
dec
sahf
fcmovne
inc
xchg
icebp
cltd
sahf
sbbl
rcrl
cs
jo
sahf
pop
sbb
jae
out
sarl
sbb
lret
pushf
je
jg
push
lods
or
mov
xchg
sbb
rolb
jbe
mov
add
sub
lods
pop
add
test
adc
xchg
dec
loope
jmp
sub
cmc
mov
test
lods
adc
sub
add
push
push
inc
push
lahf
push
popf
xchg
jnp
mov
mull
jns
sbb
push
sub
pop
enter
sub
outsb
fiaddl
in
mov
mov
push
loope
ret
xorl
stc
lods
sub
popf
push
ljmp
cmp
and
jg
loope
jmp
jo
cmpl
dec
fmuls
fcoml
xchg
clc
sar
fisttps
and
pop
sbb
mov
popf
test
cmp
sti
stos
or
xchg
jle
aad
into
cmpb
lret
add
sti
fs
enter
pop
iret
jo
lds
jb
mov
into
lcall
adc
jae
adc
push
adc
add
flds
cmp
stos
lds
jge
push
addl
popa
pop
sbb
js
inc
pusha
lea
data16
stos
mov
push
mov
call
and
cmp
xchg
cmp
enter
hlt
pop
or
pop
jo
jbe
mov
mov
inc
jo
je
lea
mov
jge
fcomp
xchg
out
dec
pop
lea
mov
pop
arpl
pop
push
sbb
loope
adc
jb
mov
div
or
out
or
outsb
ljmp
sub
add
xor
adc
imul
push
pop
sbb
out
fisubl
into
push
std
inc
adc
push
pop
jge
or
sbb
push
and
mov
out
in
mov
inc
ret
dec
xchg
jecxz
xchg
jg
rcll
push
hlt
mov
in
xchg
lret
cmpsl
outsl
in
lea
push
lret
sub
and
int
imul
jp
or
outsb
ja
xchg
fistpll
pop
mov
and
xor
sahf
lcall
mov
aam
shll
shl
cwtl
repnz
inc
or
ret
sbb
pop
daa
cmpb
mov
jecxz
test
pextrw
xchg
push
fxch
xorb
negb
rclb
dec
inc
dec
cs
in
adc
outsb
xor
iret
cmp
mov
leave
into
push
lock
outsl
and
pop
push
lea
lds
shlb
fstps
dec
mov
jb
imul
sub
jns
call
movsb
mov
loop
je
push
in
int3
fwait
xor
js
sbb
pop
mov
cwtl
ds
fcoms
test
inc
lods
xchg
hlt
xor
or
fsubl
hlt
jl
ds
add
xchg
lods
mov
cmp
out
jp
mov
dec
ja
into
mov
fcoms
mov
aam
fidivl
fnstsw
ds
pop
insb
hlt
das
scas
aad
dec
xchg
ret
fisubl
loop
fisubrs
lods
fdivp
clc
pusha
movsb
adcl
mov
leave
push
cmp
shrl
add
je
jne
ljmp
movsb
scas
aad
xchg
lods
bound
sbb
js
popf
cmp
mov
sub
sub
in
cmp
aad
fstl
je
pop
js
nop
rolb
in
in
push
and
xor
outsb
adcl
imull
or
cltd
repz
out
mov
xchg
loope
lret
push
and
fcmovbe
xchg
imul
stc
test
out
add
jo,pt
ja
hlt
inc
mov
push
stc
xchg
pop
push
jl
movsl
mov
jo
dec
ss
push
push
popf
cmp
sahf
adc
mov
fstps
push
mov
mov
in
xchg
or
mov
inc
out
pop
and
insb
ret
and
pusha
sbb
xchg
or
xchg
cmp
jb
push
aam
mov
test
stos
lods
and
cltd
out
mov
aas
or
inc
ret
and
inc
xor
xchg
mov
je
mov
dec
call
pop
mov
out
int3
sub
fcomi
es
xchg
jp
les
call
jbe
test
cmp
clc
or
inc
mov
fwait
cmp
fcoml
mov
shll
and
dec
lock
in
pop
js
add
pusha
out
fstpt
lahf
pop
adc
push
xor
ja
mov
xchg
xor
rcr
out
call
push
cmp
pop
pop
pop
movb
pusha
outsw
push
loop
in
mov
dec
pop
lret
jl
fists
sbb
insb
and
pop
add
aam
movsb
mov
out
mov
fs
add
mov
dec
sub
cmp
leave
jns
dec
mov
or
dec
mov
mov
inc
pop
test
cmovae
mov
dec
mov
push
jecxz
add
stos
shl
outsl
sbb
arpl
loopne
mov
mov
mov
leave
push
mov
shll
mov
call
jae
sub
sti
frstor
test
adc
and
ss
fdivl
lock
add
jae
icebp
fisubl
out
mov
add
mov
sub
sbb
clc
jge
mov
mov
cmp
inc
ret
add
or
daa
out
jge
das
out
bnd
xchg
dec
xor
dec
mov
adc
pop
in
sub
dec
fstp
call
sahf
addl
in
mov
sti
repnz
add
push
pop
or
mov
iret
adc
shrl
push
or
xor
or
adc
pop
out
mov
lcall
orl
iret
imul
in
push
sbb
xchg
mov
jne
cltd
in
sar
and
fwait
dec
testl
call
sarl
out
mov
fstps
popf
mov
stc
cmp
dec
data16
xor
aam
mov
sub
xchg
fisttpl
jmp
sti
leave
loope
or
stos
imul
ljmp
lods
lds
push
sbb
ficompl
test
out
filds
xchg
imul
pop
and
mov
imul
mov
fldpi
mul
roll
rcrl
jg
test
inc
lea
and
or
inc
fs
test
or
xchg
popf
nop
and
js
mov
add
es
js
out
jne
and
mov
sub
repnz
push
cli
jmp
or
cwtl
clc
int
sbb
fstp
xchg
pop
inc
pop
fcoml
inc
mov
arpl
arpl
aam
fs
and
mov
call
stos
arpl
pop
push
out
jne
and
aam
outsb
pop
jmp
dec
stc
lcall
push
add
and
movsb
call
xorb
hlt
fcmove
fs
and
xchg
lods
mov
enter
pop
cmc
fdivl
fldt
cmp
pop
pop
sarb
shrl
shrb
popf
jge
ss
repnz
jge
xchg
cmp
sub
dec
mov
imul
adc
loope
sbb
jmp
fs
ds
sarl
cmpsb
ljmp
mov
pop
cmpsl
ret
movsb
push
xchg
out
into
dec
lods
dec
gs
enter
shrl
int
std
xchg
pop
pop
jns
and
cmc
fimuls
adc
or
mov
sbb
je
js
cld
shlb
xchg
data16
imul
mov
and
xchg
push
xchg
jg
loopne
and
xchg
sbb
xor
jbe
rclb
xor
dec
xor
cmp
and
jmp
icebp
mov
inc
jmp
inc
andl
adc
or
aad
sbb
mov
adc
add
les
and
cmpsb
ror
hlt
cs
cwtl
popa
mov
popf
push
lods
jne
sbb
fcoms
push
mov
xchg
push
sub
sarb
mull
jnp
sub
xor
sub
push
lds
movsl
cmc
ret
or
ficomps
das
icebp
mov
repnz
jmp
jecxz
jmp
outsl
gs
test
mov
cwtl
mov
popf
cmp
cmp
mov
jne
xlat
call
mov
xchg
push
adc
push
xlat
cld
inc
mov
push
cmp
xchg
lods
inc
jmp
fisubrl
rep
dec
and
fildll
pop
sti
insb
mov
fcompl
dec
dec
add
xchg
or
jg
mov
jge
ret
cltd
push
std
shlb
jne
dec
shlb
push
mov
inc
sbb
sbb
sub
out
add
mov
in
test
scas
rolb
test
ret
pop
jb
fisubrl
scas
stc
jnp
orb
test
or
inc
out
jl
xchg
adc
pusha
cs
mov
int
adc
jle
lea
push
dec
nop
mov
cmp
jnp
testb
mov
jl
xchg
lock
sbb
pop
insl
dec
sbb
adc
lcall
inc
fcmovbe
arpl
iret
pop
addb
ret
js
cli
mov
cmpl
dec
cmpsb
mov
out
mov
mov
cmp
add
add
ret
push
dec
push
push
pop
jecxz
pop
jl
xor
xor
add
xlat
ffreep
lds
jno
pop
je
inc
pop
jp
mov
insb
vpsubusw
fimuls
xor
aas
loop
push
dec
or
mov
cld
xchg
or
and
pushf
and
scas
adc
pop
or
loop
fdivrs
inc
adcb
insl
jl
cmp
test
mov
idivl
cltd
and
sbb
out
pop
es
add
lahf
mov
out
scas
shl
mov
mov
pop
jecxz
lods
dec
fistps
mov
data16
sti
sbb
in
dec
stos
jne
mov
stos
add
or
popf
inc
pop
stc
adc
pop
and
stc
sti
test
xchg
bound
dec
je
sbb
mov
push
jmp
sbb
data16
out
mov
adc
inc
sbb
sub
pop
int3
xchg
imul
inc
out
in
jge
insl
rcll
and
lret
mov
and
inc
mov
xor
clc
xchg
mov
test
mov
xchg
push
xchg
and
mov
pushf
movsb
shll
int
in
in
xor
push
pop
sbb
sbb
mov
cmp
and
xchg
cmc
or
or
mov
cli
lahf
sarl
mov
loop
mov
test
out
orb
stc
pop
mov
xlat
pop
stc
ds
dec
leave
inc
adc
popa
mov
fnop
add
popa
mov
mov
scas
mov
xchg
jecxz
push
into
insl
add
mov
pushf
shlb
ja
mov
cmp
test
in
add
mov
and
aas
lahf
adc
cmc
push
push
inc
mov
jnp
data16
mov
jg
inc
push
cmpsl
mov
in
inc
lret
imul
cmp
call
adc
and
mov
add
punpckhdq
fstpl
pop
test
sub
and
scas
test
sahf
andl
push
data16
jb
inc
in
mul
mov
les
cmp
scas
xchg
je
int3
lock
cmp
sbb
aas
gs
ds
mov
mov
pop
push
xchg
cmpsl
push
cmp
out
call
jbe
pop
enter
mov
cli
jecxz
adc
push
jo
cld
xchg
testl
xor
dec
lahf
aas
nop
inc
lahf
adc
push
xchg
jl
xchg
lds
in
shrb
jb
mov
imul
xchg
shlb
loop
inc
mov
xor
and
jae
mov
pop
pop
pop
popl
rclb
inc
inc
out
aam
gs
add
sub
sbb
popa
ret
and
sub
test
std
jp
jnp
sbb
repz
ds
xchg
and
rcll
and
imul
shll
cmp
jo
fdivl
inc
xor
bound
dec
sub
jmp
xor
sbb
adc
lods
cmp
dec
enter
loopne
insl
mov
pop
aam
jbe
popf
mov
pop
out
movsb
out
stc
push
or
sbb
repz
inc
fistpll
adc
enter
jbe
idivb
or
ror
test
cs
dec
notl
pusha
or
loopne
nop
clc
leave
les
sbb
inc
les
mov
stos
rcr
ret
mov
fs
mov
pusha
mov
out
ja
inc
imul
jle
cli
movl
cwtl
mov
adc
popf
xor
aam
mov
sbb
dec
jle
and
add
pop
mov
loopne
mov
fwait
mov
mov
out
stos
mov
dec
lret
jp
sbb
mov
add
push
xchg
insl
out
loop
int3
mov
push
scas
jl
jmp
lods
int
pop
mov
pusha
jne
mov
and
mov
in
aaa
cmp
pusha
mov
pushf
jb
dec
adc
out
and
ja
mov
test
int
inc
mov
mov
test
sbb
enter
dec
jne
test
push
adc
shlb
inc
mov
ljmp
dec
and
and
mov
lcall
fsts
jno
push
js
aaa
cwtl
jbe
jno
push
mov
push
fs
add
imulb
pop
xchg
cwtl
sub
adc
lea
mov
call
ss
mov
call
push
movsl
xlat
adc
push
jecxz
repnz
stos
adc
ds
xchg
jge
adc
dec
cmpsl
hlt
and
push
sub
jle
addr16
pop
aad
add
shll
inc
test
xlat
repz
aas
stc
xor
pop
push
or
sbb
stc
push
sbb
jo
pop
dec
test
xchg
jmp
inc
ret
std
cwtl
jp
dec
mov
ret
ficompl
pop
aas
das
mov
jno
and
and
int
shll
neg
cs
push
nop
icebp
pusha
jge
outsl
rorb
xchg
jmp
dec
out
pop
or
push
pushfw
popf
jg
mull
jae
mov
out
ds
sti
sub
xchg
mov
cltd
fwait
in
mull
or
lret
mov
pop
jbe
push
pop
and
dec
mov
jle
lcall
xchg
in
cmp
aad
jle
jae
lods
enter
pop
nop
sahf
mov
add
test
fucomip
fnstenv
out
cmpsb
lea
sub
sahf
add
sub
add
lock
int
jb
add
cltd
scas
jmp
push
lcall
pop
inc
and
pop
stos
and
test
adc
mov
jle
sub
mov
idivl
inc
shrb
sarb
scas
clc
pop
mov
adc
and
imul
pop
or
cmpsl
pusha
out
stos
mov
push
sub
mov
outsl
jmp
jp
addl
adc
mov
fnstsw
cmp
mov
scas
mov
fldenv
push
push
or
arpl
push
stos
jg
mov
cwtl
divps
jge
repz
daa
adc
into
lds
add
icebp
scas
fnsave
repnz
jge
pop
push
scas
aaa
inc
jbe
mov
push
inc
outsl
cmpsl
add
fdivs
dec
dec
dec
inc
and
add
lea
mov
pop
call
ficompl
dec
jp
inc
adc
add
inc
push
xchg
pop
xchg
fsubr
jmp
je
mov
lcall
jmp
mov
negb
push
jnp
scas
jo
std
push
outsb
push
xchg
push
push
xchg
or
pusha
mov
push
mov
jae
in
pop
jnp
pop
lods
pop
lods
fsubr
jmp
fcoms
jg
repz
mov
add
das
and
sub
lret
sub
mov
pushf
leave
lods
pop
push
jecxz
iret
ficompl
adc
push
imul
xor
xchg
cwtl
mov
jae
pop
leave
push
lret
inc
inc
aas
jl
sbb
inc
xlat
movsl
pusha
sahf
lcall
ds
push
push
sbb
js
mov
scas
adc
mov
enter
push
mov
push
hlt
mov
push
xor
out
fidivrs
cmp
adc
iret
cmp
jbe
push
scas
sub
or
mov
ss
out
dec
divl
je
push
pusha
test
jp
mov
adcl
mov
in
mov
cli
in
ja
in
pop
sbb
imul
imul
push
mov
jns
xchg
shlb
imul
mov
shll
sbb
out
xor
lret
sar
popf
gs
inc
push
shlb
add
push
negb
bnd
arpl
mov
adc
push
xor
mov
lock
xor
rcrl
and
out
in
mov
sbb
inc
test
jae
arpl
out
mov
dec
jg
lret
stos
fwait
add
pop
test
mov
je
jl
sbb
xchg
out
xor
in
jge
xchg
mov
popf
jg
sahf
mov
rcll
add
add
mov
imul
xor
pop
and
push
orl
dec
out
lods
cmpsb
lret
cmp
dec
mov
fbld
fistpl
or
hlt
or
repz
hlt
into
data16
inc
inc
fisttpl
roll
arpl
pop
in
clc
sbb
sbb
mov
gs
and
mov
dec
push
xorb
test
push
pop
movsl
jle
nop
les
lahf
pop
pop
or
lcall
pushl
adc
fdivrp
jmp
cld
xor
inc
cmp
mov
xorb
add
mov
cmc
mov
jmp
or
inc
insl
mov
pushf
lea
js
adcb
daa
es
jp
xor
dec
outsl
cld
into
pop
je
lret
inc
nop
xor
scas
mov
jle
aas
in
iret
jmp
jo
jno
or
cmc
jge
je
cld
dec
inc
and
loopne
pop
mov
ja
cmpsl
sub
jp
test
js
outsl
rorl
popa
int3
mov
dec
icebp
xor
mov
or
pop
fsubl
adc
rol
incl
je
popf
mov
cltd
mov
pop
or
mov
or
push
mov
mov
in
sub
sub
xchg
sbb
out
sub
shl
and
push
pop
mov
or
out
ficoms
dec
inc
arpl
cs
out
adc
pop
into
cmpsb
push
dec
inc
and
and
mov
xchg
mov
pop
add
pop
ja
out
add
movsb
cld
pop
in
dec
xor
pop
dec
and
xchg
jmp
loop
fbstp
add
ljmp
push
inc
cwtl
cwtl
fwait
stos
into
rclb
sub
or
sbb
jmp
add
mov
stos
stos
mov
insl
sbb
aam
lcall
cmp
dec
into
outsb
jecxz
pop
aad
in
stc
xor
sbb
mov
repz
stos
add
jp
icebp
push
loop
add
data16
ljmp
sub
loope
call
test
push
out
mov
jnp
int3
pop
sbb
add
mov
adc
dec
xchg
mov
movsl
les
pusha
pop
test
test
jb
test
push
fwait
mov
mov
xchg
movb
in
aaa
fdivrp
int3
adc
dec
jb
decb
sub
mov
fcompl
js
push
sbb
push
call
jmp
fwait
pop
pop
cwtl
pusha
mov
scas
fcomip
xorl
ret
pop
fnstcw
push
and
loope
mov
xchg
or
icebp
dec
mov
or
sbb
out
scas
fstpl
mov
clc
adcb
sbbb
ja
adc
scas
mov
addr16
and
test
ds
push
dec
mov
pop
rcr
sub
mov
mov
invd
addl
jo
in
popf
sub
pop
add
xchg
mov
mov
test
cmc
pop
sub
and
rolb
or
ficompl
fcomps
idivl
push
ja
and
mov
and
ret
divb
popf
cltd
lods
pop
xchg
sub
push
mov
mov
jg
xor
int
sub
xor
push
push
nop
pop
fcompl
inc
xchg
aam
xor
pop
bound
sbbb
dec
jecxz
push
jb
cmc
xchg
push
add
mov
fdiv
sahf
xchg
mov
dec
enter
pop
loop
ss
ficomps
divl
lds
jbe
inc
xchg
jno
sub
aaa
test
adc
movsl
inc
dec
leave
pop
push
push
out
add
hlt
fs
add
dec
fmuls
xchg
mov
enter
mov
mov
cld
out
and
mulb
sbb
addr16
pop
shrb
ret
mov
cmc
scas
jge
outsb
out
movsb
inc
lods
sbb
jae
test
inc
inc
xor
andl
inc
xchg
loope
cmpsl
insb
and
jbe
adc
pop
or
cmpsl
mov
pop
andb
repnz
pushf
mov
cmp
in
push
mov
imul
mov
push
pop
and
mov
and
jbe
adc
adc
dec
or
pop
andb
in
jo
mov
dec
xchg
stc
stc
je,pn
movb
in
sub
cmp
pop
pop
movsb
sbb
mov
lahf
push
hlt
cmpsl
mov
jl
fbstp
arpl
pop
mov
lds
push
jp
push
inc
vmaskmovdqu
jae
jbe
mov
pop
push
mov
cmc
sub
test
sbb
jg
cs
mov
je
loopne
std
mov
movsl
jecxz
mov
fcmovnb
add
pop
mov
lods
or
jge
fcompl
and
jb
cmpsl
push
lret
arpl
jmp
adcl
sub
add
lods
cltd
shrb
mov
aam
inc
jmp
sbb
dec
mov
sub
lahf
adc
incb
push
mov
or
adc
inc
ret
aas
dec
push
inc
call
mov
pop
xor
jg
dec
pop
cs
pop
jmp
push
scas
xor
mov
jp
jnp
fwait
mov
std
xchg
xor
or
pop
nop
xchg
adc
xor
pextrw
lock
insb
mov
mov
dec
jnp
mov
jmp
adc
xchg
sub
aam
push
ret
pop
ret
pushf
xchg
push
js
aas
data16
xchg
test
addr16
add
mov
inc
fs
inc
jl
push
adc
and
aam
push
cmp
daa
sbb
mov
mov
dec
push
ret
jae
inc
xchg
push
or
into
xor
push
xchg
addr16
mov
shr
les
cmc
xchg
cld
or
push
sub
outsb
dec
xchg
push
inc
jmp
sbb
adcb
push
push
dec
pop
jl
movsb
adc
push
and
push
ret
mov
lea
leave
outsb
and
daa
fsubrp
data16
call
test
xchg
pusha
fildl
or
cld
leave
out
into
adc
hlt
in
jle
inc
lock
or
fists
lds
sub
popf
inc
adc
mov
ds
mov
lods
cmp
adcl
shrb
decl
mov
mov
push
addr16
in
push
popf
test
sub
xlat
jns
aam
xchg
push
and
and
sbb
rol
sub
sbb
fs
cmp
xchg
push
push
sarb
push
pop
jl
cmp
std
rcll
fyl2x
mov
arpl
call
ljmp
dec
adc
add
pop
out
cmp
imul
popf
xchg
sub
inc
les
std
or
setne
fs
adc
test
sub
push
aad
add
outsl
mov
clc
loope
or
pop
sti
add
in
xor
add
pop
lods
inc
xor
adc
and
jmp
sbb
xor
test
sub
popa
inc
jle
jecxz
jae
push
jns
bound
adc
outsl
lds
xchg
gs
jnp
inc
movsb
xchg
add
pop
arpl
addr16
dec
mov
xor
mov
fnstenv
or
jmp
stc
push
sub
das
add
jl
adc
and
mov
push
out
lcall
jg
push
mov
push
xor
aad
fmull
daa
shll
pop
sbb
mov
jns
and
aad
dec
mov
daa
and
testb
sub
xchg
xchg
into
js
jae
jp
jae
out
mov
jo
in
ss
pop
cmp
jg
xchg
nop
pop
xor
mov
insl
cld
sub
mov
into
stos
sbb
hlt
icebp
xor
inc
jmp
cli
test
in
sbb
or
jge
pop
addb
mov
dec
mov
ljmp
cmc
lcall
cmp
iret
lcall
push
pop
ret
outsb
push
sbb
xchg
cmpsl
divl
xchg
out
inc
je
pushf
pusha
dec
int
and
lret
xchg
insb
xor
pop
jns
push
iret
popf
mov
and
or
std
adc
push
idivb
xchg
mov
insl
inc
ja
mov
lcall
xchg
nop
mov
loope
add
push
mov
filds
pop
in
jne
sbb
dec
out
jmp
stos
xchg
lret
sbbb
sub
or
inc
and
sbb
jle
or
sbb
jae
adc
push
int
or
add
movsb
jns
pusha
lret
or
outsb
dec
fcompl
mov
push
lods
xor
dec
sub
mov
pop
orb
popa
dec
pusha
out
popa
loop
sub
cmp
jg
loopne
frstor
mov
popa
adc
pop
inc
sbb
dec
sar
out
pusha
jl
xor
ret
pop
inc
popa
pop
loope
les
data16
push
shrl
cmp
pop
loope
and
sbb
push
shlb
pushf
mov
jl
int3
jb
jl
jl
and
pop
inc
popf
or
insw
or
sub
lods
ficoml
pop
adc
sti
push
push
nop
xorb
in
lahf
xor
ret
push
push
out
inc
dec
jle
ret
inc
lcall
ja
jl
fstps
je
sub
xchg
test
scas
sarl
mov
leave
push
inc
insb
scas
mov
push
mov
xchg
daa
push
mov
sbb
jmp
jbe
and
sub
gs
pop
in
add
dec
ss
aaa
inc
jmp
push
es
cmp
push
clc
dec
push
loop
jge
lds
mov
xchg
pop
push
test
jae
je
fimull
fcmovb
test
push
mov
jl
loopne
ss
das
jnp
or
stos
enter
jle
andl
xchg
leave
xlat
pop
xor
cmp
popf
inc
jmp
das
data16
test
push
sar
mov
sbb
ss
xchg
mov
jecxz
cmp
andb
ficoms
cmpsb
add
jmp
mov
sbb
dec
adc
mov
sti
stc
test
and
ljmp
adc
lret
movsb
jb
mov
adc
jb
push
int
push
and
sti
and
aas
leave
jne
stos
dec
cwtl
dec
sub
or
test
mov
mov
jle
push
mov
cmp
mov
repnz
test
sub
or
cmp
sub
orb
and
jnp
mov
imul
bound
push
loop
cli
and
mov
sar
jno
aad
push
lock
int
jmp
cmc
shrl
pop
add
lock
pop
clc
add
flds
std
mov
loop
mov
mov
loopne
xor
cmpsl
lahf
xchg
div
scas
sahf
fs
outsb
frstor
jnp
cltd
pop
mov
and
add
sahf
and
mov
loop
mov
negb
xchg
adc
mov
nop
pop
push
fisttpl
testl
mov
cmp
jbe
mov
lods
pop
cli
pop
push
sbb
lahf
mov
lock
lahf
popf
js
es
and
mov
xchg
fisubrl
and
cld
inc
mov
fstps
xchg
in
jp
imul
mov
xchg
sbb
arpl
and
jae
and
mov
dec
and
inc
cltd
jnp
mov
out
and
ret
adc
inc
and
sub
jle
out
inc
stos
in
dec
mov
je
inc
rcl
pop
imul
adc
or
jge
scas
ret
clc
add
nop
icebp
das
push
popa
mov
cmp
inc
adc
and
loopne
out
in
mov
push
stos
mov
clc
or
cs
adc
jae
imul
fisubrs
cmpsl
or
leave
lds
add
inc
js
daa
xor
jmp
pushf
aad
jne
push
loopne
mov
jnp
cwtl
pushl
mov
aad
mov
xchg
sahf
fcomi
insb
sarb
test
arpl
pop
into
jae
pop
mov
cmpb
pop
ret
push
pop
sbb
lock
sub
rcrb
push
stos
cld
add
scas
cwtl
cli
adc
roll
inc
add
mov
xchg
mov
mov
add
and
das
xor
push
mov
pop
pop
mov
push
push
lret
sub
clc
sbb
xchg
xchg
xor
push
loopne
jle
inc
mov
jo
mov
cmc
jp
inc
aas
adc
pop
jp
xor
jne
stos
mov
and
fcoms
sub
push
stc
clc
daa
movsl
shll
scas
or
mov
leave
or
pop
inc
lret
into
inc
mov
pop
dec
pop
dec
roll
les
inc
jge
xchg
xchg
push
aad
xlat
fnstenv
scas
lea
jne
add
cmp
add
pop
lea
cmp
jno
push
lahf
jmp
push
and
push
test
xor
inc
adc
cmc
das
aaa
mov
pop
aad
dec
in
adc
out
out
mov
cltd
int3
xchg
xchg
mov
push
push
outsb
and
ret
je
mov
cs
mov
mov
lock
mov
mov
fidivs
iretw
pop
xchg
outsb
jnp
mov
sbb
xorl
in
mov
dec
je
inc
mov
jg
and
add
cmp
in
lds
lea
or
rol
xor
hlt
dec
inc
push
fdivrl
in
leave
scas
dec
or
imul
jmp
js
popa
aam
testl
negl
cmp
xchg
sub
sti
or
adc
sub
imul
lret
dec
cli
or
cmp
mov
pusha
cltd
pop
scas
mov
sub
shlb
dec
mov
shll
mov
pop
loope
lea
mov
mov
or
pop
scas
loopne
jo
int
in
xchg
loopne
leave
mov
xchg
xor
xchg
mov
fildll
loope
mov
imull
fnstsw
mov
sbb
popa
testb
or
les
movb
pop
and
cmpl
addr16
jge
clc
xor
dec
in
xor
pop
jge
cmpsl
mov
neg
xchg
xchg
sub
mov
inc
iret
push
fadds
push
xchg
jns
cmp
sub
cmpl
mov
rolb
mov
mov
nop
fs
andb
sub
fcom
imul
sub
ss
loope
pop
jmp
mov
out
mov
lds
and
mov
xchg
push
aam
fisubs
subl
or
ficoml
and
inc
iret
or
pop
cmpsl
scas
out
jnp
icebp
stos
imul
or
cmp
pushf
dec
insl
stos
stc
inc
fs
cltd
mov
jae
mov
xchg
or
shll
sub
in
test
rcl
shlb
leave
and
cmpb
cmp
pop
adc
aad
jg
push
jno
cmp
loope
lods
cmp
orl
or
andb
int
mov
out
xchg
cli
mov
sti
xchg
jbe
pushf
pop
cmpb
outsl
and
sbb
mov
dec
repz
jge
mov
fstpl
xchg
xchg
xchg
pusha
mov
enter
shrb
dec
pop
push
ljmp
push
sbb
and
ret
icebp
in
mov
out
aam
popa
js
push
lods
je
jb
out
push
mov
pop
xor
fcomps
out
cmpsb
jae
pop
cmp
mov
es
insl
jnp
push
ja
jo
addb
xchg
lock
pop
in
in
aaa
adc
lods
je
add
sub
add
xchg
pushf
and
dec
mov
adc
pop
fwait
adc
dec
dec
xlat
sbb
aaa
xchg
xor
mov
test
int
push
andb
lret
jmp
push
jge
movsb
pop
pop
jmp
popf
mov
aad
xor
mov
stc
cltd
fldt
xchg
loop
push
xor
js
aas
mov
sbb
xor
shlb
sbb
icebp
inc
jg
mov
push
andb
mov
insl
xchg
pusha
lret
gs
or
jo
lock
pop
cld
push
repz
stos
mov
and
pop
or
add
push
cltd
test
cmpsl
cltd
mov
das
cmp
or
aam
inc
ja
loop
xchg
add
lods
lods
jae
pop
dec
ret
dec
dec
std
and
sub
rcll
xor
test
insb
cs
mov
push
mov
mov
mov
sub
xchg
inc
mov
xchg
imul
xchg
lock
adc
xchg
or
cmpsl
mov
sub
aad
cli
jae
outsb
push
push
loopne
movl
fdivr
mov
xchg
imulb
mov
add
cmp
mov
inc
pop
pop
pusha
cmp
fmuls
push
in
sub
and
and
inc
hlt
push
inc
mov
test
scas
xor
adc
inc
je
scas
mov
aas
sbb
jle
iret
push
sahf
test
ret
in
jmp
shrd
xor
imul
lods
jae
scas
or
cmp
adc
add
lods
lret
pop
call
add
ret
pop
movsb
and
pop
xlat
jg
imul
hlt
push
cmc
subb
mov
xchg
int
es
ljmp
sub
dec
push
mov
jle
mov
nop
inc
dec
je
mov
cmpsl
aas
lahf
push
sub
addr16
ja
dec
rcl
mov
sub
pop
and
adc
loopne
into
mov
or
je
mov
sub
xchg
cmp
or
adc
or
and
dec
xchg
sbb
mov
test
cli
jp
int
lods
push
xor
xor
push
je
push
rep
mov
mov
mov
js
jecxz
lahf
add
add
aad
cmp
and
loopne
nop
rol
xchg
xlat
dec
sbb
push
movsl
xor
test
or
aaa
or
mov
test
mov
cmp
fcoml
nop
jge
lahf
mov
lods
dec
mov
icebp
ja
lret
mov
pop
jecxz
rolb
push
out
cwtl
inc
loop
mov
imull
incl
xor
in
jmp
sahf
and
and
dec
add
jns
and
in
push
jecxz
mov
fstl
insl
xchg
nop
push
inc
aam
shr
sub
push
pop
pop
and
adc
pop
or
xchg
mov
dec
mov
push
pop
mov
sub
outsb
enter
inc
pop
sub
loop
add
cs
sahf
add
mov
or
cmp
mov
cmp
add
adc
pop
int3
jmp
push
cmp
ss
push
push
sub
movsb
add
sbb
aam
adc
dec
push
xchg
dec
jecxz
je
std
jb
pop
inc
jnp
xor
pop
xchg
int
jl
lea
hlt
dec
mov
xor
fs
add
xor
fisubs
jge
jnp
add
fistpl
push
and
cmp
inc
sub
mov
or
mov
cmp
mov
std
inc
lds
sti
rclb
outsl
sbb
neg
xchg
dec
cmp
sbb
lret
inc
mov
pop
out
xor
leave
adcb
lret
mov
inc
popf
jb
jae
lcall
sub
jl
adc
loop
pushf
jae
jmp
sub
cmp
loopne
sbb
fidivrs
mov
jo
dec
mov
pop
adcl
out
out
leave
lcall
cmpsb
leave
dec
xor
xchg
insl
imul
js
lods
arpl
es
add
std
pop
icebp
or
hlt
lret
pop
lret
je
addr16
jp
dec
testl
insl
rorb
and
roll
push
mov
or
adc
loope
pushf
inc
xchg
mov
inc
int3
mov
pop
es
adc
repnz
popa
mov
mov
adc
dec
divb
jae
fwait
mov
cli
adcb
inc
lods
fisubrl
mov
cli
incl
xchg
xlat
pop
sub
les
inc
adc
sub
mov
sub
in
inc
xor
push
cltd
outsb
push
mov
jle
ss
lret
loopne
xchg
adc
in
mov
or
ret
mov
and
jne
jns
sbb
bound
arpl
pop
sahf
mov
pushl
bound
or
xchg
out
pop
cmpsb
xor
orb
loop
andl
stc
in
test
aas
insb
xchg
clc
push
xlat
sub
jne
xchg
mov
mov
shrl
sub
sbb
pop
or
sti
xor
flds
mov
mov
cmp
mov
or
xor
inc
mov
fstp
pop
mov
or
loop
xor
ret
cmpsb
push
xorl
jns
push
pop
push
mov
into
cmp
push
add
adc
mov
in
lock
out
flds
mov
jbe
movsb
pop
add
mov
cs
test
bound
dec
sbb
add
insb
mov
mov
push
repz
shl
xchg
and
aad
mov
dec
int
jecxz
xchg
fadds
jl
outsl
jg
adc
xchg
inc
in
adc
inc
cmp
add
ss
ret
fs
xchg
adc
add
pop
cmp
pop
movsl
cltd
pop
fchs
sub
shrb
mov
int
pop
xchg
movsb
mov
mov
scas
out
lret
int3
bound
arpl
js
imul
cmp
shlb
adc
dec
inc
or
mulb
cmp
jmp
fsubrl
shl
vxorpd
loopne
inc
lahf
inc
pop
filds
lcall
mov
sub
add
mov
dec
andl
iret
dec
popf
push
jbe
adcl
fildl
leave
add
mov
popa
xchg
xor
xor
lods
mov
js
ss
jnp
pop
inc
sbb
xor
shlb
jnp
daa
adc
adc
or
inc
fisttpll
cmpl
int
out
sti
sti
sti
sarl
fs
sbb
inc
inc
mov
inc
xchg
or
xor
mov
scas
cwtl
or
in
mov
aas
imul
int3
push
mov
fisubrl
mov
pop
leave
cs
leave
add
sbb
lods
pop
sbb
mov
mov
addl
fldenv
cmp
jnp
out
clc
ds
lods
out
sub
lret
xchg
scas
sub
push
lcall
shr
mov
jne
mov
sarl
fistl
movsl
adc
sbb
leave
loope
or
shlb
jne
adc
ds
pop
pop
in
jns
andb
jnp
sbb
imul
and
jge
lock
inc
inc
xchg
stc
leave
dec
movsl
je
aad
rcrl
imul
dec
pop
push
jns
sub
push
faddp
mov
mov
push
sbb
xor
setns
cmp
lahf
dec
test
push
xchg
in
shl
mov
add
lahf
sbb
mov
mov
lahf
adc
xchg
shlb
jmp
pop
sti
imulb
imul
and
cmp
xor
sbb
jne
mov
nop
testl
je
adc
dec
iret
pop
test
out
lahf
cmc
push
sahf
je
mov
sarb
in
aam
mov
fidivrl
js
in
orb
xchg
push
and
jnp
jbe
mov
ret
mov
frstor
icebp
add
mov
in
xor
out
into
mov
in
mov
push
push
outsl
add
xchg
push
ljmp
sbb
iret
test
pusha
push
mov
xchg
xchg
xchg
xor
sub
xchg
orb
adc
stc
rorb
div
sti
cs
xchg
roll
ljmp
sub
mov
inc
ljmp
sbb
int
sub
loope
add
dec
imul
test
sbb
shll
popf
dec
adc
clc
mov
and
data16
inc
xor
push
push
adc
pop
push
stos
movsb
push
sbb
jecxz
inc
sbbb
push
xor
sahf
out
jno
mov
icebp
lds
call
xchg
mov
in
adc
push
sbbl
sub
mov
xlat
jbe
mov
stos
shr
push
xlat
push
out
pop
cmp
pop
scas
in
addl
and
sub
iret
push
lds
in
cmc
push
movsl
sti
xor
sbb
ficoms
sbbl
aas
in
or
daa
imul
stc
pusha
adcl
mov
subb
rclb
jecxz
faddl
inc
bound
xchg
ja
sbb
in
xlat
xchg
adc
insl
pop
push
push
push
xchg
dec
and
ret
jno
out
adc
enter
push
test
aas
cltd
cmc
fstps
arpl
and
mov
ret
adc
jmp
pop
test
mov
pushf
dec
jne
xchg
push
cmp
jnp
cmp
in
lock
inc
pop
jns
dec
aam
push
pop
dec
movsl
xor
cmp
mov
fidivl
push
adcb
fldl
mov
cmp
lods
ja
out
inc
mov
out
fiadds
mov
sti
pop
inc
lea
mov
loopne
push
push
sahf
inc
cmp
push
jecxz
rorb
cmpsb
fdivs
dec
xchg
sbb
cmp
cmp
fwait
inc
mov
cmc
and
std
cmp
cmpsl
sarb
imul
aas
fisttpll
xchg
pop
mov
or
push
push
fistps
push
cmpsl
xor
inc
push
sub
sbb
test
pop
add
inc
lods
leave
sbb
xor
pusha
pop
lea
dec
or
jg
outsb
fsubrp
and
loopne
cmpsb
adcb
int3
repz
jbe
enter
inc
scas
test
int3
jmp
or
das
hlt
cmp
add
jecxz
lods
push
inc
movsl
push
adc
rorb
xor
cmpsl
inc
xchg
jnp
mov
jge
add
pop
rclb
gs
ja
mov
das
jge
or
subl
dec
cmpsl
mov
mov
xchg
leave
mov
cmp
adc
xorb
adc
dec
or
inc
pop
insb
push
pop
stos
out
push
cltd
shrl
mov
pop
push
andl
mov
push
adc
mov
lcall
mov
int3
out
lods
in
out
shlb
sbb
mov
inc
and
fwait
sbb
cltd
in
xor
test
call
cmp
push
push
sbb
cwtl
and
cmp
ret
mov
add
inc
scas
inc
int3
jmp
inc
stc
out
push
int3
imul
pop
ss
xor
sbb
ficoms
pop
int3
xor
xor
add
es
mov
fcmovu
or
js
bound
adc
jmp
push
jne
push
add
sbb
jl
pusha
ljmp
jno
xchg
leave
imul
push
add
jae
loop
and
push
outsb
pusha
notl
mov
outsl
test
out
pop
jle
add
divb
adc
stos
xchg
aam
popf
fwait
clc
cmp
stc
mov
cmp
push
fsubrs
enter
outsl
lods
push
movb
cltd
add
xchg
popf
xor
cmp
or
ljmp
fxch
scas
add
pop
sbb
jmp
ret
add
loopne
sub
dec
xor
pushf
adc
popf
jne
popa
mov
dec
mov
push
inc
and
in
cli
pop
and
arpl
xor
int
or
jmp
sahf
cmp
adc
std
pop
jbe
dec
push
decl
shll
lods
sub
loop
jecxz
fwait
add
mov
dec
enter
mov
adc
test
cmove
insl
sbb
loope
xchg
pop
scas
jecxz
cmc
out
es
pop
icebp
js
jmp
jl
xchg
lods
ret
push
sbb
push
std
sbb
int
pop
cmp
or
xchg
jle
and
pop
test
mov
enter
dec
in
movsl
scas
fdivs
mov
int3
int3
mov
and
test
out
cmp
push
inc
mov
pop
stc
test
daa
sbb
jg
cltd
jb
push
mov
sbb
pop
in
cmp
dec
cmc
insb
adc
orb
jle
mov
dec
cmp
xor
pop
add
ljmp
or
aam
in
push
sub
in
mov
lea
mov
cli
or
xor
xor
das
mov
xchg
add
fadd
jg
out
ja
ds
enter
xor
por
gs
bound
xchg
loope
cli
repz
jmp
inc
sahf
jge
stos
adc
push
xchg
shrl
sarl
lds
cli
add
loopne
cld
leave
imul
cmp
bound
sahf
das
jnp
out
pop
in
iret
xchg
jb
or
inc
adc
lock
mov
or
mov
sbb
pop
pushf
add
lds
jecxz
loopne
test
lea
scas
std
xorl
cltd
cmc
xchg
stc
pop
cmpsl
jmp
sbb
jns
pop
inc
jb
fcmove
out
xor
add
into
and
ja
stos
add
dec
sbb
cmpsb
imull
push
int3
inc
push
xor
sbb
fs
movsl
cmp
add
shl
dec
fxam
repz
xor
mov
sub
and
xchg
les
test
int
lcall
sbbb
mov
pop
mov
out
fiaddl
inc
enter
mov
stos
sbb
mov
add
jb
cmp
movl
popa
hlt
aas
sub
clc
mov
repz
fldl
xchg
jne
leave
je
in
jbe
push
inc
xor
in
ror
nop
xchg
push
mov
push
aaa
pushf
dec
mov
sti
call
sahf
push
push
mov
jmp
sbb
jb
pusha
jno
mov
out
or
and
pushf
push
cmp
xlat
lea
icebp
clc
stos
out
sbb
nop
ret
loop
mov
mov
sbb
inc
mov
je
lds
ds
pop
adc
test
enter
xor
lcall
pushf
mov
mov
xchg
pop
roll
xchg
in
lock
xchg
cmpsl
daa
dec
push
imul
bound
aam
or
test
mov
or
fsubs
pop
pop
stc
ja
pop
loop
or
out
mov
sub
hlt
xor
add
dec
mov
fistpl
enterw
fxch
ljmp
sub
and
sbb
mov
jne
adc
ja
xor
loop
fcomi
mov
xchg
rol
sub
enter
jp
xchg
push
mov
xor
fldcw
lret
rcl
inc
or
xor
fstpt
aaa
jbe
sbb
fistpll
in
inc
adc
mov
adc
jg
jbe
jge
cmpsl
sbb
nop
push
xchg
ss
imul
jae
daa
jecxz
imul
pusha
outsb
scas
adc
insl
add
mov
inc
popl
dec
dec
and
mov
dec
mov
xchg
shrb
scas
inc
sub
into
sti
test
cmp
jmp
pop
sbb
stc
xchg
std
mov
lods
push
jg
das
pop
adc
cmp
fists
enter
rcrb
and
subl
fstl
mov
fcoms
frndint
es
add
fdivs
stos
testb
addr16
imulb
call
cmpsb
sbb
mov
push
shrb
stc
xchg
cmc
loopne
lea
xor
xchg
pop
inc
addr16
push
push
sbb
ret
pop
shll
mull
xor
or
or
je
xchg
inc
add
xchg
stos
jb
into
mov
orl
int
outsl
cld
xor
pop
jge
adc
sbb
xor
xor
push
pushf
movsl
test
cmp
rolb
test
xchg
mov
cmp
imul
daa
cs
movsl
ljmp
cmp
and
ss
cmc
sbb
jne
pop
subl
inc
mov
mov
mov
lret
into
shlb
mov
in
fcmovb
add
scas
sbb
sub
mov
mov
je
insl
cwtl
cmp
out
jmp
lods
rcr
jg
jns
cs
mov
lahf
icebp
lahf
push
adc
ret
xchg
lods
pop
icebp
xchg
sbb
xchg
rol
pusha
sbb
jecxz
or
add
fbstp
shr
add
ja
push
adc
add
subb
insl
arpl
xlat
ja
push
inc
stos
cld
loop
sahf
jns
inc
js
xor
add
sub
rcrl
push
jg
push
and
mov
pop
addl
adc
repnz
push
in
fcoms
jne
inc
es
cli
push
sub
mov
loop
shrl
js
mov
adc
sahf
dec
jb
cmp
inc
xchg
decl
and
sub
ret
xchg
hlt
movsl
cmc
sbb
dec
out
push
xchg
adc
and
stos
xor
jmp
cmp
pop
cmpl
lods
fcom
popa
out
ss
ret
fwait
pop
rorl
stc
pop
sti
and
std
sub
sbb
andl
repnz
or
mov
xlat
jo
inc
inc
test
outsb
or
xor
cld
xchg
mov
insb
int
rdmsr
scas
inc
mov
or
jg
loop
loop
lret
leave
cmp
lcall
popf
shlb
sbb
mov
imul
jae
pop
int
or
lds
pop
icebp
push
or
repz
ja
aam
cmp
nop
xchg
ds
push
in
xchg
sbb
imul
xor
mov
jns
inc
jb
ficoml
fmuls
xor
add
push
sar
rorl
cwtl
rcl
stc
aam
cld
and
add
adc
imul
cmpsb
cli
xor
mov
outsl
push
jns
mov
out
imul
sti
dec
jmp
inc
inc
cmp
fwait
les
jecxz
dec
xchg
repnz
adc
les
or
pop
scas
mov
jp
xchg
sbb
or
repnz
jo
das
stos
dec
push
es
mov
mov
and
clc
popf
mov
jl
pusha
mov
mov
xor
and
sbb
out
mov
push
or
xor
jmp
test
jb
adc
mov
in
pop
pop
xchg
push
nop
cmp
scas
dec
stc
push
bound
lock
sub
in
mov
adc
js
push
sbb
inc
mov
push
and
testb
inc
negl
adcb
shrb
enter
out
cmp
push
dec
dec
dec
dec
pop
dec
shlb
movsb
inc
shr
dec
sarb
sbb
sbb
cmp
dec
xor
mov
addl
add
mul
xor
adcb
jge
testb
mov
mov
ds
and
subl
jb
jmp
lock
into
xchg
test
imul
pushf
stos
pusha
mov
inc
aam
sub
pop
je
push
adc
in
movsb
push
cwtl
lock
call
scas
adc
mov
mov
sub
mov
repz
pop
dec
adc
repnz
jne
je
stos
inc
jl
insl
inc
fisubrl
out
sub
lods
nop
adc
sbb
out
rcrb
insb
add
js
and
mov
push
adc
daa
cmp
inc
xor
inc
jl
cld
dec
mov
pop
and
and
outsl
pop
mov
nop
pop
sbb
sbb
mov
loope
ficomps
cltd
sub
iret
mov
add
jl
ret
pop
jnp
call
and
xor
ds
clc
sbb
add
xor
nop
push
fimull
imul
jno
icebp
jnp
mov
ret
mov
jbe
dec
dec
push
sti
icebp
xchg
or
mov
fsub
dec
stos
xchg
cmp
and
sub
and
xchg
push
add
and
or
sub
outsb
ja
push
leave
sub
xor
das
or
pop
pushf
xchg
push
loop
das
fistps
iret
fcomip
imul
push
enter
leave
pop
rcrb
and
scas
ficomps
loope
or
sbb
inc
jo
mov
mov
test
or
mov
add
ret
push
jg
neg
push
sbb
in
stos
pusha
rcrb
pop
cmp
or
xor
js
into
jnp
sbb
mov
and
xchg
in
dec
xchg
call
cmp
sub
adc
ret
inc
cltd
mov
sub
stos
ljmp
call
test
or
loop
cltd
out
and
rcll
mov
sub
pop
push
cwtl
jg
inc
cld
aas
rolb
in
loope
pushf
clc
inc
mov
jp
xor
and
cmpsb
test
ss
cmc
pop
adc
adc
push
mov
and
cmpsl
push
insb
jge
out
int
nop
adc
jecxz
sarl
push
addl
jecxz
or
int3
gs
daa
mov
nop
out
mov
nop
rcrl
adc
sub
push
push
cmp
mov
xchg
and
mov
or
inc
pop
stc
mov
inc
es
outsl
sub
lar
out
shlb
mov
add
rorl
out
and
dec
sbb
jae
xlat
mov
lods
ds
js
jnp
pop
pcmpgtd
xor
pop
ficomps
ficomps
aas
mul
arpl
jbe
lods
adc
cmp
pop
mov
iret
xor
mov
cs
les
and
inc
mov
xlat
sub
cwtl
ret
and
test
adc
aaa
add
mov
jg
jno
or
sbb
sbb
lock
fucomip
out
xor
or
xorb
xchg
sbb
mov
or
test
aas
fbstp
inc
push
mov
inc
jo
mov
js
cwtl
and
push
push
xchg
sarb
sub
jo
ja
lock
or
or
ficoml
or
mov
xor
cmp
outsb
mov
pusha
inc
and
int3
pop
rcll
jb
fistpl
xchg
or
add
add
inc
cmc
mov
fs
aad
in
out
in
xchg
xchg
ret
push
pop
mov
sbb
fistps
jno
rorl
arpl
jae
mov
loope
jmp
clc
test
stc
or
mov
mov
mov
fcmovnb
mov
push
jnp
ss
aaa
push
jle
in
fs
cmpsb
in
cli
rcr
mov
pop
inc
loopne
das
pop
inc
xor
call
arpl
cmpsb
fmul
test
in
stos
sub
in
nop
cmpsb
int
xchg
outsb
pop
insl
adc
mov
cs
scas
xchg
jb
mov
outsb
add
scas
dec
pop
bound
pop
les
shrb
push
inc
sbb
mov
lods
lods
or
repz
idiv
adc
jae
inc
add
cld
jecxz
outsb
outsb
sahf
cmp
rorb
inc
shrl
cli
lock
jae
popa
cmpl
mov
fsub
cmp
sub
cmp
test
addr16
dec
jmp
fsubrl
inc
jp
pop
lcall
inc
fdivrp
iret
mov
ror
jl
insl
mov
or
div
insl
push
cmc
icebp
fimuls
ds
pop
cmp
hlt
nop
shr
jmp
ss
sub
adc
push
cmp
jbe
rcrl
xchg
mov
flds
fstpt
hlt
push
dec
push
call
data16
je
mul
adc
and
push
cld
lcall
lods
cltd
jne
jbe
pop
inc
push
jmp
mov
cltd
repz
push
jle
gs
xor
push
out
sub
fsubs
fstps
dec
std
pop
aas
push
lret
cmpb
lahf
push
jnp
mov
jae
pop
jb
sub
fmuls
leave
fs
in
enter
push
adc
mov
stos
hlt
mov
rolb
out
lds
xor
test
ja
xor
add
daa
add
aam
pop
sbb
mov
ss
mov
lret
daa
test
pop
orl
and
xchg
xchg
mov
addr16
shlb
popa
jl
mov
pop
push
in
ficoms
out
lret
and
inc
mov
mov
loop
inc
cmp
inc
jl
scas
imul
and
sbb
jns
das
lret
inc
pop
push
sub
sbbl
mov
test
ss
subl
rclb
sbb
mov
mov
inc
sbb
or
dec
test
out
fwait
xchg
fs
adc
div
sbb
add
lcall
cmp
sti
push
insb
sub
mov
add
lahf
stos
pop
sbb
jmp
adc
imul
rolb
xor
cmp
xor
xchg
adc
sarb
sub
out
pop
adc
jl
in
fldcw
jmp
ja
mov
cmp
sub
jecxz
push
js
inc
imul
xlat
decb
fidivrs
cmpb
sbb
andl
sbbb
or
imull
pop
mov
test
xor
ret
push
iret
add
inc
test
out
and
adc
lock
out
fisttps
ss
pop
adc
notb
dec
sub
push
jns
stc
insl
int3
lods
mov
pusha
imul
rcrb
mov
xor
mov
xor
not
popa
push
xchg
mov
stc
or
push
andb
push
add
lahf
adc
cld
jmp
push
adcb
inc
inc
out
xchg
sub
adc
testb
leave
addl
inc
repnz
icebp
or
aaa
adc
mul
pusha
es
stc
mov
insl
das
push
orl
sbb
push
repnz
dec
lret
int
pop
push
stos
mov
cltd
mov
pushf
int3
inc
rcrb
xor
push
scas
add
inc
rcrb
iret
add
and
aam
add
inc
xor
leave
fsubrs
dec
lcall
cmpsb
out
xor
pop
mov
add
das
inc
fwait
jo
xlat
loopne
sub
inc
cld
shr
out
dec
xchg
adc
imul
adc
addr16
and
insl
xchg
in
add
in
adc
test
out
adc
rcrl
mov
aas
sbb
add
xchg
mov
jns
jo
cmp
lds
mov
daa
les
pop
push
cmp
cltd
test
arpl
jmp
dec
xor
pop
dec
or
xchg
stc
adc
dec
cmp
iret
lahf
loopne
mov
lret
jl
pop
push
dec
pop
fldl
iret
or
addl
movsb
inc
inc
jp
xor
repnz
stc
jae
add
xor
pop
and
inc
or
xacquire
pop
jno
dec
xor
mov
push
cmc
jmp
push
xor
xor
cltd
adc
into
fldcw
push
outsb
push
add
jecxz
inc
jg
or
stos
icebp
cld
icebp
scas
lcall
or
dec
test
inc
and
cmp
push
jo
ds
shll
mov
aad
sub
je
jge
gs
mov
clc
mov
rcll
jle
sbb
sbb
in
jae
cmp
out
jle
mov
add
shlb
and
js
xchg
mov
lods
ljmp
jo
in
and
or
cmp
push
push
mov
pop
stos
cmp
push
sbb
jno
sub
es
jg
jae
adc
push
mov
repz
lods
xchg
dec
and
js
mov
movsl
inc
dec
xor
mov
xchg
cltd
lods
xor
xchg
mov
test
lcall
pop
stos
js
pop
mov
aad
dec
xchg
loopne
loopne
cld
cld
and
ja
mov
add
movsb
cwtl
dec
shll
hlt
outsl
or
insl
sub
adc
jle
xor
or
in
push
or
mov
mov
cmp
cmp
xchg
aaa
adc
mov
jo
je
imul
imul
cmpsb
mov
mov
lea
fmull
mov
mov
inc
outsb
pusha
repnz
in
lds
adc
cwtl
jb
cwtl
lret
and
add
stc
dec
icebp
inc
ss
adc
mov
mov
pop
jg
xchg
pop
ret
dec
leave
push
add
jg
xchg
stos
cli
xchg
into
or
aad
inc
xchg
cmp
mov
ds
dec
mov
mov
test
test
mov
mov
xor
ljmp
jns
xchg
pushl
inc
inc
aas
xchg
out
push
xor
icebp
fsubl
repz
test
jae
aam
mov
xchg
hlt
jl
cmpsb
sub
add
das
mov
mov
push
cmp
stos
push
mov
jl
out
push
hlt
mov
push
mov
insb
in
push
dec
repz
inc
sub
call
lds
pop
mov
dec
cwtl
fdivrs
imul
stc
lret
cmp
bound
es
sbb
pop
jno
add
xchg
popa
inc
test
jne
lcall
scas
adcl
ret
loop
jo
mov
sarb
jno
mov
clc
sbb
fisubrl
lods
je
popf
pop
es
insl
insl
xchg
pop
lcall
rol
dec
add
adc
movsl
jg
push
in
ds
outsl
out
cmpsb
mov
sub
adc
inc
lea
mov
negl
loop
ds
mov
roll
mov
inc
dec
shrl
sti
loopne
jbe
imul
cltd
mov
outsl
stos
out
movsl
outsb
sub
shr
adc
mov
dec
mov
out
cmpsb
mov
call
dec
icebp
xor
dec
xor
mov
pop
pop
fsubrl
mov
call
push
dec
and
fstpt
adc
mov
movnti
push
add
iret
mov
push
add
jg
xor
jp
dec
and
scas
mov
push
test
mov
outsb
pop
mov
orb
lods
daa
adc
sbbl
push
or
and
hlt
xchg
xor
cld
sub
sub
rclb
fnstcw
fnsave
aas
outsl
es
push
xor
dec
bound
sub
push
pushf
pop
adc
test
dec
cwtl
mov
push
leave
adc
shrl
inc
mov
in
mov
leave
iret
push
shlb
cmp
push
dec
pop
mov
and
leave
jno
xchg
dec
push
or
icebp
test
shrb
cmp
cmp
xor
ret
push
mov
outsl
jne
in
pop
out
mov
pop
jl
aam
mov
cmp
dec
or
not
sbb
cs
cld
out
mov
cmc
push
sti
push
push
jmp
sti
xchg
aad
fdivrl
in
push
dec
arpl
mov
pop
enter
push
sub
sub
fdivrp
outsb
xchg
mov
mov
xchg
xchg
jae
xchg
sub
mov
pop
fwait
cld
inc
jle
inc
rcl
add
cmp
and
sbb
xor
fwait
repnz
lea
js
or
mov
dec
cmc
into
imul
push
out
pop
das
std
repz
sub
leave
shlb
cmpsl
xchg
pop
add
popa
mov
pop
pop
pop
arpl
std
lahf
pop
cmp
stos
xchg
jp
jns
aaa
inc
mov
push
out
xorb
xor
mov
fdivrp
adc
fcmovu
je
pop
xlat
mov
in
xchg
fnstsw
lods
jo
adc
dec
cmpsb
loop
ss
pusha
cmp
mov
xor
sbb
xchg
pop
lods
popa
inc
pop
out
outsb
sbb
mov
test
mov
add
aaa
insb
cmp
cltd
arpl
stc
push
push
aaa
neg
mov
xor
popa
xor
int3
out
lcall
mov
mov
loop
aad
add
mov
add
xor
mov
ss
pushf
add
mov
orl
jnp
fimuls
arpl
xchg
bound
jmp
mov
xor
cmp
or
call
sbb
out
pop
arpl
xlat
lods
push
add
push
popf
lret
aad
cmp
dec
lods
cld
iret
icebp
add
test
idivb
out
xor
shlb
ficompl
paddsb
frstpm(287
sti
ds
add
cltd
adc
mov
cmp
sbb
scas
mov
mov
outsl
add
mov
xor
sbb
ret
mov
cmpsb
addb
bound
in
outsl
nop
dec
test
test
push
adc
xchg
frstor
insl
mov
jg
cmp
nop
jmp
cmp
in
xchg
jnp
sub
gs
hlt
imul
iret
fs
sub
test
mov
sub
int
hlt
adc
cmp
out
push
inc
ja
pop
inc
fwait
xchg
imul
rorl
mov
xchg
subb
gs
lcall
sbb
push
and
nop
push
lret
pop
popf
das
pop
adc
cmp
loop
outsl
adc
jmp
cs
adc
push
mov
fimuls
jb
push
push
daa
xchg
div
addb
mov
loop
and
xchg
jl
mov
add
int3
shrl
andl
into
cmpsb
jne
std
loopne
cmp
cmpsb
sub
mov
mov
cmpsb
clc
and
push
jns
lock
add
push
inc
sub
roll
test
push
push
push
jle
ret
dec
mov
ret
loope
jecxz
fimull
mov
sub
loop
shlb
movsl
sub
in
cld
data16
sub
xor
ljmp
in
fisubs
pushl
inc
adc
inc
push
push
jg
mov
test
shlb
pop
orl
mov
sbb
pop
sub
mov
out
pop
mov
jg
outsl
mov
stos
dec
push
adc
add
sub
loope
addr16
push
mov
pop
pop
add
out
jmp
es
add
mov
out
sub
fdivl
out
test
jmp
insb
jae,pt
lods
lea
imul
cld
mov
push
mov
fdivr
xchg
call
movsb
jmp
arpl
dec
pop
arpl
or
scas
jp
pop
adc
adc
ret
or
out
les
aam
mov
mov
and
sbb
cmpsb
xor
push
dec
sbb
fdivrs
cli
sub
outsb
sbb
mov
or
mov
stos
push
xchg
xor
mov
jno
pop
inc
jb
mov
out
pop
inc
inc
aam
imul
cmp
mov
fcmovb
daa
xlat
insl
inc
adc
cmp
stc
ljmp
push
insb
sti
lock
xchg
sbb
mov
shl
orb
out
ljmp
mov
sbb
xchg
push
push
xchg
pushl
dec
mov
fs
jge
bound
movaps
scas
xchg
adc
cmpsb
notl
iret
mov
pop
inc
cmp
rcr
popa
push
jecxz
and
insl
mov
fwait
mov
jge
mov
and
mov
add
mov
pop
lds
mov
in
lea
mov
ds
jmp
shlb
int
sbb
cmp
data16
push
push
pop
sub
jl
inc
lahf
inc
lahf
xor
sub
clc
cmp
mov
mov
aaa
adc
mov
xchg
dec
cwtl
inc
fcoml
mov
dec
bound
cmp
fs
ds
hlt
insl
out
in
mov
pop
sbb
pushf
sbbb
pop
add
jmp
xchg
div
push
cli
mov
mov
and
sbb
sub
mov
imul
inc
loope
fnstsw
insl
lods
mov
mov
adc
adc
fsts
shl
add
aad
cwtl
lods
call
ss
mov
pop
pusha
dec
out
pop
lret
mov
or
scas
jnp
jns
int3
dec
cmp
mov
inc
pushf
ljmp
sub
mov
mov
int
jle
sub
lods
jge
shr
cmp
into
jl
mov
pop
jp
arpl
cli
xor
aam
add
mov
js
pop
int3
and
sbb
pop
push
scas
sbb
aas
sbb
scas
rcrb
clts
sub
add
mov
cmp
add
hlt
mov
pop
dec
stc
aam
pop
jb
fadds
out
and
jl
pop
addr16
inc
xlat
movsl
or
jmp
mov
mov
mov
mov
jmp
repz
add
nop
sbb
or
je
fs
xor
pop
and
add
loopew
xor
in
imul
xchg
adc
dec
in
stos
xor
mov
xchg
cmpsl
adc
jecxz
pop
pop
scas
xchg
mov
add
daa
mov
xlat
aam
icebp
ljmp
pop
les
int3
mov
sbbl
and
nop
rcrb
fwait
mov
mulb
sub
xor
cmc
out
sbb
mov
inc
cmc
out
nop
pop
cmp
sbb
cmp
outsl
je
and
stos
pop
rol
xchg
out
dec
mov
xchg
push
lods
xor
into
fists
jmp
mov
js
sbb
test
pop
pusha
lahf
sbb
decb
push
add
in
sbb
ret
les
jge
jge
adc
pop
lea
ds
push
push
cmc
mov
mov
jp
in
outsb
pusha
or
test
scas
sahf
fnstsw
jns
popf
dec
push
pop
jno
leave
test
ret
in
sbb
test
mov
adc
sbb
push
mov
and
jecxz
jecxz
or
mov
push
int
add
imul
xchg
push
nop
and
push
mov
inc
stos
test
pop
or
and
xchg
lods
sbb
sub
mov
push
hlt
pusha
int3
inc
add
or
imul
and
inc
mov
mull
cmp
mov
jp
in
jo
out
outsb
aaa
lods
in
push
cmp
push
mov
sub
movb
adc
cmp
out
shrl
rolb
xchg
loop
mov
or
xor
mov
pop
les
adc
addr16
in
mov
test
ljmp
sbb
fdivs
mov
or
in
or
cmpsl
leave
ljmp
das
xor
add
cmp
nop
sar
aam
push
sahf
std
xor
fmuls
outsl
je
cmc
lds
add
mov
and
lods
push
jbe
dec
jmp
push
add
add
testb
xor
fsubs
data16
xchg
mov
mov
nop
aam
int
insl
adc
scas
add
inc
dec
xorb
and
into
out
xor
stos
aaa
std
ds
and
cmpsl
and
and
cld
fdivrs
jbe
push
cmp
loop
das
cltd
js
cmp
fwait
test
xchg
mov
lret
icebp
in
rclb
pop
jle
and
cmp
push
arpl
push
jb
test
fidivrl
jo
jecxz
rolb
xchg
xor
xor
inc
lahf
test
or
sti
je
sbb
cmp
test
push
inc
arpl
rol
xor
adc
push
mov
inc
pop
imul
sub
push
push
push
mov
mov
push
popf
jl
push
inc
das
js
push
cmp
lods
push
orb
hlt
dec
sbb
jge
or
shl
mov
data16
fdecstp
xchg
stos
inc
add
gs
pop
adc
ljmp
loopne
xchg
out
xor
lret
lods
dec
jno
iret
or
inc
and
std
fcmovbe
rcrl
adc
push
cmp
shrl
lahf
fsubl
loopne
jmp
jmp
push
mov
fs
sbb
xchg
fs
popf
jle
fsubl
scas
or
sti
push
into
push
xchg
xor
push
test
pop
xor
ror
incb
daa
xchg
in
push
mov
sub
mov
and
ss
lods
inc
inc
or
fidivl
jnp
inc
jns
or
xchg
addr16
pop
ljmp
sbb
and
lods
icebp
movsl
mov
pushf
push
inc
mov
xchg
inc
mov
orb
in
jge
mov
gs
cwtl
imul
sub
stos
movsb
pop
adc
sbb
in
jne
cwtl
pushf
fwait
pcmpgtd
cmp
mov
dec
outsl
shll
or
mov
mov
insb
andb
dec
das
enter
outsl
sub
mov
addl
stos
sbb
movsl
pop
stc
xchg
pusha
cmp
and
rcrb
in
clc
push
adc
lcall
lret
js
xchg
jmp
sub
fbstp
add
sbb
pop
pop
lea
icebp
push
mov
sub
ss
lcall
fcompl
push
pop
push
lea
loope
dec
movsb
mov
and
arpl
cmpsb
addr16
push
out
enter
push
call
ljmp
insl
jg
pop
sti
aas
stos
mov
outsb
lea
pop
insw
push
imul
imul
inc
sub
cmc
cmp
daa
lret
int
fxch
and
pop
lea
dec
add
pushf
sub
jo
roll
push
out
mov
les
loopne
push
mov
imull
cmp
add
cmp
dec
cmpsb
sub
mov
cmp
fistpll
stos
loop
movsb
xor
out
aad
add
test
loop
pop
and
test
mov
clc
pop
aam
and
cmp
jbe
lods
out
aaa
arpl
xorb
insb
das
jo
stos
icebp
fdiv
push
push
dec
sub
jge
or
loop
sbb
mov
xor
pop
push
lret
nop
adc
lahf
sub
dec
sarb
pop
jg
fdivs
add
mov
add
aam
in
push
ljmp
xchg
xor
and
jnp
test
pop
pop
insb
and
js
inc
fdecstp
jge
or
xor
int3
fwait
mov
call
imul
pop
loop
fucompp
popf
loope
xchg
inc
jb
shll
sub
ret
push
jl
paddsw
and
pop
xchg
cs
in
push
mov
out
xor
dec
and
add
cmp
loope,pn
popa
push
out
inc
sub
addl
dec
inc
ja
fildl
hlt
push
and
pop
adcb
pop
mov
es
add
cltd
jecxz,pn
adc
or
out
aad
mov
mov
dec
sub
testb
inc
cmp
lea
inc
hlt
push
adc
jmp
mov
loop
xchg
rcrl
fisttpl
mov
out
fldcw
jo
lcall
and
popa
cmp
je
xchg
fsts
decl
mov
mov
sbb
jbe
lock
loope
mov
xchg
pop
dec
imulb
add
in
in
les
adc
stos
adc
fdivs
das
xchg
loope
aaa
popf
mov
xchg
fisttpll
ret
shlb
in
outsb
les
filds
inc
cmp
push
xchg
mov
imul
sub
xchg
sbb
mov
mull
sub
std
jns
int3
movsl
testl
jae
test
mov
mov
scas
test
aam
cvttps2pi
repnz
push
or
inc
push
jbe
xchg
int
imul
xchg
pop
jne
subl
mov
daa
inc
adc
add
nop
xor
std
inc
loopne
mov
xlat
cmc
cmpb
mov
mov
test
mov
mov
xchg
bound
loop
xchg
js
and
out
and
out
lds
cld
pop
leave
movlps
or
ja
mov
clc
lock
out
mov
sbb
push
push
cli
mov
inc
sub
push
fadd
es
sar
mov
or
pop
or
push
rcl
cltd
faddl
jae
fisubrl
xor
xor
stos
sub
adc
imul
xor
addl
and
cmpsb
dec
fs
inc
daa
xchg
inc
inc
push
pusha
pusha
mov
aad
sysret
mov
push
ljmp
arpl
mov
xor
dec
popf
cld
or
sbb
or
push
pop
xor
ficompl
sbbb
repz
ljmp
xchg
add
xchg
sub
outsl
dec
imul
add
add
int3
add
inc
and
call
iret
stos
push
pop
cmp
adc
aas
ja
out
dec
mov
jo
idivl
insb
mov
adc
jle
jno
adc
stos
mov
out
jae
aaa
sarl
je
jne
stos
test
pushf
or
call
subl
in
fucom
out
dec
rcrb
mov
adc
adc
push
cvttps2pi
int
jmp
pop
jp
or
or
lods
mov
es
sub
loop
pop
xchg
rcrb
or
and
pop
fs
mov
pop
and
std
test
mov
stos
adc
add
and
push
data16
add
addb
mov
aam
loope
jno
mov
xor
pusha
aam
data16
sti
into
add
pop
cmp
repnz
dec
sbb
dec
or
and
cwtl
push
adc
push
pop
dec
jbe
cmc
xlat
sub
pop
push
fcmovbe
stc
push
dec
push
movsl
shl
push
or
add
repnz
xor
ret
ss
xorb
sub
or
mov
sbb
repnz
icebp
ljmp
xchg
int3
xchg
adc
xor
inc
cmp
mov
pop
test
imul
lods
aam
sbb
outsl
hlt
js
js
mov
sub
aad
loope
jmp
imul
or
std
stos
insl
jmp
push
push
stc
rolb
std
shr
nop
inc
aaa
xchg
and
test
pushf
stos
bound
and
shll
dec
arpl
sbb
fiaddl
mov
ss
inc
ficompl
and
lock
adcl
mov
jo
dec
jbe
aaa
sub
imul
inc
je
das
sub
fcoml
cmc
cmpsl
ja
mov
mov
add
push
inc
mov
xor
stc
push
les
xor
stos
test
mov
jg
aam
outsb
and
mov
imul
sahf
pop
xchg
fdivs
lock
add
outsl
xor
dec
and
cmp
mov
ds
lods
loope
popa
dec
daa
add
dec
fstps
das
icebp
je
jecxz
sub
or
enter
stos
insl
nop
push
adc
inc
push
dec
iret
mov
hlt
xchg
inc
inc
repnz
jnp
pushf
fidivs
jbe
cmp
fwait
add
jbe
bound
xchg
sbbl
sbb
roll
push
shrb
push
xor
push
cmp
mov
in
jl
imul
out
das
scas
lods
mov
mov
jp
scas
cmp
inc
movsb
lea
bound
add
stos
mov
add
add
out
jo
fwait
cli
inc
mov
mov
sbb
adc
arpl
jl
clc
mov
pop
push
test
push
pop
testl
mov
add
fptan
aaa
mov
xchg
push
adc
push
stos
inc
cmpsl
inc
call
push
leave
lret
mov
roll
jns
and
or
notl
mov
pop
sbb
cmc
fists
jge
mov
dec
push
test
and
cmp
pavgb
test
imul
push
aas
das
mov
add
dec
aas
clc
adc
enter
rclb
inc
push
dec
push
jb
inc
es
mov
gs
pop
xor
mov
xchg
lock
xor
inc
sub
push
movsl
sahf
inc
xor
cmpsl
jae
jbe
sbb
jae
pop
dec
push
push
jo
xchg
inc
sub
push
push
jno
fwait
sub
jne
in
add
test
int
icebp
mov
insl
arpl
and
sbb
stos
inc
movsl
dec
stc
inc
ret
je
sub
inc
mov
rcll
xchg
cltd
jmp
cmc
sub
ja
repnz
and
ficoml
and
adc
fwait
scas
enter
cli
in
sub
xor
mov
adc
cmpsb
mov
mov
fildl
dec
sti
scas
outsb
or
lds
push
lahf
adc
or
inc
popf
xorb
hlt
addr16
xchg
cwtl
xchg
dec
ror
mov
cmp
mov
cli
mov
jb
pop
icebp
push
adc
insl
inc
rcrb
jnp
adc
xchg
xor
cmp
addr16
push
mov
fwait
sbb
jo
push
dec
aas
lock
add
loopne
fdivp
int3
ss
data16
int3
pop
sbb
jle
lods
int3
push
add
sub
test
scas
sub
jae
inc
aam
rorl
push
das
jmp
mov
and
icebp
adc
lret
xor
jp
jmp
mov
mov
pop
add
leave
rcrl
add
dec
jl
pushf
rorl
cmpl
mov
xchg
xor
xchg
lcall
jbe
xor
hlt
mov
add
js
jne
bound
rcrb
sbb
xchg
dec
cmp
icebp
stos
adc
mov
add
std
mov
lahf
pop
sub
mov
popf
jge
adc
cmp
scas
in
lock
lahf
jle
ret
loop
clc
addl
mov
out
add
inc
or
int
arpl
stc
pop
adc
out
loope
cmpsl
in
push
test
test
sbb
lea
ss
data16
icebp
test
insb
sbb
sub
rcll
sub
add
jge
movsb
xchg
or
pushf
push
mov
xor
leave
ret
fmul
leave
addl
test
imul
adc
clc
inc
aam
dec
setns
mov
ja
push
inc
sbb
arpl
mov
sbb
lret
sarl
mov
lahf
stos
loop
mov
xor
xor
rclb
sub
js
or
das
cld
mov
xor
inc
pop
adc
sbbb
push
dec
lret
mov
push
mov
test
mov
add
fisubrl
jnp
ds
xchg
jnp
ret
ja
scas
push
sarl
pushf
in
cmp
dec
jno
aaa
scas
roll
mov
arpl
popl
mov
mov
mov
into
pop
inc
ror
rclb
cld
inc
pop
cmp
ss
nop
jb
and
sbb
sahf
or
rorb
cli
daa
xchg
sub
and
adc
mov
pop
or
pop
jg
gs
jnp
pop
cld
mov
mov
into
lea
adc
popf
sub
and
das
cmpsb
sbb
lcall
jl
dec
bnd
shl
and
xor
aas
cmpsl
jge
xor
sub
iret
ja
ljmp
push
jbe
mov
mov
aas
into
pop
neg
inc
aam
xlat
or
in
add
jle
outsb
pop
inc
dec
es
outsl
cmp
lret
mov
cltd
call
inc
mov
rolb
aad
and
aam
test
adc
inc
pop
jae
jns
mov
imul
jae
jle
mov
push
cmc
mov
pop
xchg
imul
and
repz
adc
push
add
adc
adc
call
adc
mov
insb
fdivl
ja
add
jo
pushf
ljmp
lret
stos
adc
lds
fisttps
aad
or
mov
mov
inc
call
xchg
daa
cmpsl
mov
adc
or
ss
mov
or
lods
imul
les
data16
push
mov
ljmp
cmpsl
repnz
popf
push
lods
into
data16
add
out
fdivl
in
jge
loope
fstpl
cwtl
inc
jl
mov
xor
imul
push
js
sbb
jp
scas
sti
jecxz
pop
cmp
mov
jmp
lods
inc
push
pop
aad
cmp
mov
jg
xchg
mov
rorl
xor
pop
cli
aam
sub
jno
stos
outsb
das
dec
jne
xor
dec
or
mov
xor
jp
lock
sbb
int
cmpsl
add
sub
movsb
test
fimuls
and
and
push
mov
cmpsb
add
cmp
dec
outsb
jecxz
mov
aad
cmp
stos
loopne
xorl
pop
int3
inc
cmp
sub
jle
cld
xchg
xchg
ret
daa
pop
lahf
push
cmp
jmp
adc
jg
cmc
xchg
push
xchg
and
sub
pop
xchg
jg
mov
cmp
mov
fists
mov
and
xchg
mov
pop
test
inc
jns
and
pop
mov
mov
pop
xchg
or
test
clc
xor
or
mov
and
lret
mov
hlt
jae
xchg
mov
inc
aad
mov
xor
dec
xchg
push
hlt
or
arpl
and
cmp
xchg
outsl
fwait
push
cmp
pushf
out
int3
in
sub
cmpsl
and
jb
inc
inc
mov
jae
pop
mov
add
push
xchg
loopne
arpl
jo
mov
jmp
bound
xor
adc
int3
pushf
iret
scas
outsl
xchg
jp
push
inc
outsl
jnp
mov
flds
push
push
aaa
aas
xor
insl
outsb
outsb
repnz
sbb
mov
cmp
dec
enter
aas
cltd
pop
xbegin
mov
into
push
push
adc
push
xchg
sub
mov
por
loope
sbb
xor
mov
inc
lret
addr16
ljmp
jmp
sti
mov
jnp
sahf
dec
stos
in
inc
pop
xchg
faddl
lcall
adc
jns
sahf
test
cmc
inc
and
push
xor
jg
push
pushf
insb
hlt
push
prefetch
or
jecxz
add
sarl
call
test
mov
lods
or
xor
sbb
cmpsb
lret
adc
sub
pushf
lret
out
adc
ja
mov
pop
jle
repnz
sbb
cld
pop
cmp
sub
cmp
popa
fs
and
pop
cwtl
movsb
cltd
jnp
xchg
repnz
jno
loope
mov
xchg
lods
cmpsl
adc
imul
and
and
adc
add
xor
fadds
adc
js
mov
sub
xor
dec
jno
jmp
push
js
cwtl
aam
addr16
mov
mov
insl
call
xchg
popa
mov
lret
sarb
push
adc
call
popf
loop
cmpsb
push
sub
fsubr
insl
xor
das
lds
pop
xor
lcall
adcl
push
pop
sbb
inc
sbb
sbb
cmp
jp
jge
mov
faddp
imul
add
xor
mov
loopne
outsb
pop
xor
outsb
sbb
sbb
cmp
cmp
movsl
mov
push
inc
ss
fmuls
repz
dec
decl
js
ret
mov
xchg
mov
hlt
inc
jo
mov
mov
mov
js
mov
pop
mov
sbb
fmull
inc
mov
xor
addb
cltd
jbe
fs
insl
mov
cwtl
mov
nop
jmp
mov
cmp
stos
adcl
bound
adc
and
ja
into
in
add
cs
mov
popa
das
sahf
xchg
sti
adc
mov
jb
mov
cmp
lods
ss
movsb
out
add
jle
and
in
popa
call
ja
cmpsl
lcall
shr
add
lea
sbb
cmp
and
daa
mov
jae
loop
xor
clc
test
imul
push
das
shrl
jno
in
adc
mov
out
clc
pop
pop
xor
mov
sub
lret
jl
out
out
jl
fwait
clts
movsb
pop
or
das
push
mov
jge
mov
push
push
and
fs
xor
daa
lret
in
sbb
cmp
mov
and
push
mov
mov
inc
cmc
mov
xchg
popf
push
sbb
mov
push
inc
cmp
cmp
xor
cmp
cmpsb
lods
pop
imul
dec
inc
cmp
pop
notl
movsb
or
addr16
test
dec
stos
and
mov
mov
ljmp
mov
sahf
adc
bound
cli
add
inc
mov
push
jecxz
mov
push
sbb
in
lahf
push
in
insl
jns
push
fcoml
fbstp
cld
push
imul
pop
mov
cmp
mov
icebp
repz
mov
mov
aas
push
sti
subl
fisttpll
mov
cltd
imul
es
sbbb
or
ja
cs
sub
jge
and
ss
xchg
cmp
or
aad
lods
mov
iret
adc
cmpl
int3
fwait
int
insl
xchg
adc
push
insl
dec
xchg
cli
add
add
popa
scas
lret
mov
stc
int3
shrb
inc
adc
and
add
imul
test
push
js
out
clc
jmp
test
xchg
in
xchg
inc
inc
mov
pop
add
loop
push
xor
outsl
mov
lea
mov
test
pop
fbld
sbb
xchg
mov
xor
add
cmp
or
movsl
or
fst
rcl
sbb
sbb
jb
lods
negl
icebp
loop
icebp
pop
ror
xchg
std
mov
fs
jne
or
or
lea
mov
inc
outsb
shr
test
movsl
mov
and
inc
lret
lock
sub
and
iret
push
nop
mov
mov
nop
push
add
pop
into
bound
pushf
mov
shll
fimuls
imul
into
add
js
xchg
addr16
push
repnz
sti
push
push
push
cmovno
or
jle
sbb
mov
addr16
push
mov
xchg
mov
movsl
stc
jo
push
ret
rcrb
popa
into
mov
loopne
push
ret
int3
ss
sbb
adc
rorl
xchg
jge
jp
jle
mov
dec
repnz
repz
push
sub
pop
fcmovnb
add
jg
je
pop
jle
mov
in
mov
xlat
in
push
add
leave
in
sub
frstor
rcll
mov
cmp
and
push
iret
lahf
std
inc
lcall
and
push
push
inc
frndint
in
mov
rcl
lock
or
adc
fmulp
sbb
push
insl
hlt
push
xor
mov
jno
adc
or
pmaddwd
in
cmc
add
ljmp
dec
aad
jnp
fcmovu
mov
sbb
aad
adc
lcall
scas
imul
orb
xchg
mov
dec
fyl2xp1
pop
stos
xchg
xor
sahf
pusha
mov
aam
add
fists
aas
insl
sbb
xchg
out
add
pop
fsubl
dec
xchg
push
xlat
pop
imul
shrl
dec
push
add
cmpb
add
je
sub
mov
push
andl
lods
out
jbe
sbb
adc
lods
xchg
js
pop
test
jnp
jno
addr16
movsb
jae
fidivs
jp
cwtl
cwtl
popf
mov
lcall
xchg
push
jb
cmp
je
aaa
jp
mov
jne
lcall
push
dec
loop
pop
xor
mov
or
inc
in
outsl
inc
pop
clc
icebp
cmp
ret
jne
push
xorb
jae
lahf
mov
test
lret
call
xchg
or
int3
inc
mov
mov
in
and
push
xchg
ret
push
scas
int3
add
cs
sbb
fildl
rorb
ret
jae
push
dec
sub
and
pop
inc
mov
xlat
fwait
push
jp
mov
in
clc
push
frstor
sbb
cmpl
cmp
fsts
lds
adc
xor
mov
sub
add
mov
repnz
mov
bound
pop
out
sub
push
scas
mov
mov
mov
pushw
shlb
and
adc
xor
sub
add
and
out
loopne
jmp
in
adc
mov
cltd
and
or
stos
lcall
sub
dec
gs
mov
jmp
shl
mov
in
add
lods
pop
cmp
fsubrs
ss
ficomps
rcll
jb
sub
fcoml
cmp
xor
xchg
push
into
and
sti
loope
and
sub
movsl
es
incb
mov
and
roll
mov
lea
iret
inc
mov
jnp
pop
mov
and
in
sbb
xchg
pop
xchg
cmp
outsb
out
insb
pop
xchg
lods
js
or
and
leave
test
jo
and
xorl
mov
clc
fs
or
das
scas
add
fidivs
inc
pop
jno
punpcklwd
outsb
testl
es
pop
lods
scas
cmpsb
push
xor
loop
lret
stc
scas
cmp
xchg
sbb
sub
roll
sub
movsl
addb
iret
sti
sbb
shll
or
xchg
add
mov
in
nop
jge
push
iret
cwtl
cmp
fidivs
leave
push
out
test
jg
jno,pt
pop
dec
xor
hlt
sbb
sub
pop
pop
fcomps
loop
pop
inc
dec
lahf
push
adc
clc
scas
push
aaa
mov
cmp
mov
popa
or
out
cmp
das
fsubrp
in
xchg
test
inc
fldl
sub
pop
loope
inc
insl
hlt
pop
outsl
movsb
and
jle
popa
xlat
inc
adc
jge
sub
sbb
or
pop
inc
test
mov
dec
adc
xchg
cmp
cltd
sbb
inc
outsl
les
imul
xchg
mov
adc
lods
js
aam
add
fwait
cmp
fs
pusha
push
and
or
pop
mov
add
pop
daa
mov
nop
out
es
pop
adc
adc
mov
sub
pop
xchg
mov
out
push
push
in
in
popa
cmpsb
mov
clc
cmp
addr16
dec
outsb
ljmp
sbb
xchg
gs
mov
and
mov
mov
cmp
mov
ljmp
dec
and
sbb
adc
pop
repnz
or
inc
and
bound
adc
les
push
pop
mov
cld
push
push
lcall
sub
out
add
lcall
stos
adc
mov
push
add
rorb
ret
sbb
sbb
xor
fsub
sbb
xlat
mov
test
outsl
lret
xor
scas
lods
in
orb
sbb
dec
mov
push
sbb
imul
mov
push
push
ret
push
mov
pushf
sbb
jb
add
adc
add
movsl
hlt
jp
mov
xor
mov
and
lret
andl
aaa
jle
aad
jbe
adc
add
scas
repnz
lret
inc
xchg
pop
pop
gs
mulb
ja
arpl
lds
bnd
inc
sub
inc
jg
scas
das
ds
insl
sbbb
xorl
fidivrs
mov
and
jne
addb
push
push
bound
int3
push
mov
adc
mov
in
sbb
leave
call
adc
stos
fs
mov
mov
out
cmp
cmp
out
cmp
inc
mov
cmp
add
cmp
pop
popa
jl
imul
clc
repnz
push
das
lods
xor
nop
xchg
fstpt
ss
inc
stos
sbb
jg
xlat
imul
ja
sub
adc
jl
adc
pushf
cmp
pop
xor
mov
orl
jmp
mov
aas
nopl
lret
repnz
inc
inc
dec
nop
enter
daa
enter
inc
clc
pop
rcr
push
sbbl
movsb
xchg
push
in
icebp
icebp
std
pushl
mov
pop
pop
ret
insb
inc
das
addr16
loop
cmc
out
loop
loope
push
sub
cmp
test
aam
mov
push
popa
mov
cmp
jno
sub
popl
jb
mov
aaa
or
inc
dec
insl
jp
daa
push
pop
jmp
repz
adc
pop
sbb
aas
aam
or
xchg
gs
mov
pop
test
push
je
pop
fisttpl
mov
mov
push
sub
inc
int3
aad
or
pop
dec
xor
jns
and
out
lcall
add
jb
jnp
gs
mov
inc
popf
incb
enter
int
mov
iret
mov
cmp
cld
inc
pop
icebp
jmp
xlat
pop
or
out
cmp
pop
mov
loop
andl
fsubl
mov
dec
lock
ret
push
inc
cltd
push
std
mov
cmp
dec
push
sub
mov
pop
ljmp
cmp
and
scas
jns
pop
je
xor
cli
sbb
and
jecxz
push
sti
mov
jo
dec
fimuls
lods
gs
inc
push
push
fdivrs
xor
xchg
mov
sub
jo
std
rclb
adc
dec
enter
out
pop
sub
jns
and
pop
popf
cwtl
cmc
loop
scas
xchg
xchg
faddl
icebp
mov
loope
jnp
mov
stos
lcall
into
adc
movsb
dec
add
push
insl
imul
stos
test
cmp
les
jo
sarl
cmp
imul
mov
jb
mov
jmp
mov
pushf
adc
enter
pop
or
pop
lret
xor
sub
shrl
lods
ret
repnz
sub
mov
inc
insb
add
jne
adc
add
dec
test
push
idivb
xchg
jae
shrl
xchg
mov
pusha
jbe
and
fldenv
jb
xor
rolb
push
cmp
pop
mov
mov
testl
or
fcomip
xchg
roll
mov
cs
add
lock
push
in
in
xchg
sub
add
movsl
mov
clc
mov
test
push
aam
sbb
push
xchg
lret
xchg
jb
aas
daa
js
xchg
data16
adc
sub
inc
adc
in
je
push
ds
scas
rorb
iret
iret
and
xchg
sbb
lock
or
mov
test
push
pop
out
sub
loopne
int
shl
push
mov
xor
cwtl
daa
mov
ret
jle
pop
test
mov
aad
fcmovu
lret
or
adc
jmp
push
or
mov
push
roll
fimull
out
je
and
xchg
mov
adc
sub
adc
mov
aaa
movsl
test
xor
xor
dec
pcmpgtb
lea
stos
adc
inc
sbb
push
mov
mov
stos
dec
dec
pop
lea
imul
ret
icebp
mov
jno
inc
sub
sbb
xchg
dec
cmp
mov
addr16
mov
hlt
mov
xor
test
stos
popf
outsl
dec
sbb
lea
es
ss
outsb
xor
lret
in
jmp
adc
sbb
popa
pop
xchg
sub
inc
sub
hlt
stc
ret
mov
lods
mov
ret
in
mov
cs
leave
fnsave
xor
mov
adc
push
and
fldenv
ss
fcmovne
mov
mov
adc
lea
inc
out
andb
pop
add
mov
jne
ret
fstps
test
sub
lds
add
cld
push
mov
popf
push
scas
ror
xchg
inc
sahf
push
lcall
shlb
jo
push
cwtl
ss
ficompl
cli
test
scas
mov
lods
int
mov
outsb
mov
and
pop
xor
fidivs
cmp
notb
out
cmp
xor
aas
xor
inc
in
inc
lods
arpl
adc
mov
icebp
push
stos
jns
dec
in
scas
adcl
pop
and
mov
aam
rolb
xchg
mov
mov
fisubl
aaa
ss
and
add
sbb
leave
fisttpll
push
sbb
xor
cmpsb
sti
add
fsts
out
push
sbb
or
push
push
xor
repnz
pop
cmp
mov
popa
stos
pop
jae
enter
or
mul
push
imul
lea
jbe
or
movsl
imul
loop
push
adc
std
push
dec
xchg
inc
adc
jge
fistl
sbbl
rcpps
pusha
push
mov
xchg
lcall
or
iret
mov
mov
sub
xlat
imul
add
push
addb
xchg
mov
ds
or
shlb
outsl
push
sar
adc
inc
mov
test
fptan
outsb
scas
sub
insl
cmpsb
sub
adcb
jl
mov
xchg
loopne
lods
test
sbb
mov
ja
aad
testb
xchg
sub
clc
and
test
cmp
idivl
bswap
add
shlb
pop
jmp
cmc
subl
test
xor
stos
pop
dec
subb
lods
enter
insb
add
pusha
xor
adc
pop
mov
je
in
repz
ret
stos
leave
mul
lea
rcrb
lret
and
callw
fsubp
int3
xor
or
xchg
scas
pop
test
inc
arpl
lods
jmp
adc
js
inc
mov
icebp
xorl
pop
loope
lahf
sti
je
mov
mov
aam
inc
mov
clc
sub
iret
pop
and
and
xchg
mov
inc
push
pusha
mov
dec
xchg
adc
ja
sar
xchg
xchg
xor
and
pop
mov
das
jnp
xor
xchg
jmp
shlb
outsb
add
test
mov
xor
xchg
push
pop
mov
or
iret
add
popa
jl
sub
insb
add
movsb
adc
cmc
pop
call
lds
push
push
push
xchg
nop
xchg
fstl
lea
or
pop
cmp
ljmp
cmpsl
data16
loopne
xor
push
in
jno
mul
repnz
ret
push
lcall
mov
rcrl
push
mov
leave
adc
pushf
das
addr16
popf
pusha
xchg
in
ret
pusha
daa
daa
movsb
xchg
leave
push
adc
mov
punpckhwd
fmull
push
rcrl
pop
or
mov
mov
mulb
ja
ret
fcoms
les
jb,pn
jp
dec
rep
mov
xor
inc
rclb
push
xchg
ret
xor
idiv
out
aaa
repnz
xor
jle
fmull
lock
mov
sbb
in
leave
or
mov
shl
insb
pop
ljmp
loopne
add
dec
lcall
adc
das
in
pop
sub
push
pop
out
nop
push
int3
xor
cmc
or
and
mov
mov
hlt
cmp
sub
xor
das
cmpsb
loopne
pusha
fstpt
mov
sub
aas
or
fucom
cmp
mov
or
in
add
fwait
jmp
and
xchg
add
cltd
mov
add
mov
shrb
lcall
or
mov
mov
les
xor
jb
push
mov
lcall
sbb
pop
sub
mov
mov
xchg
jp
push
push
leave
cli
fstl
sar
aas
sti
pop
pop
and
dec
shlb
mov
rolb
inc
cld
movsb
xchg
ret
dec
test
sub
jo
mov
and
dec
lret
mov
jbe
notl
cmc
sub
dec
jbe
pop
lret
pop
das
add
cmpsb
jmp
cwtl
enter
push
jle
in
xor
dec
daa
pop
adc
iret
idivb
cltd
inc
push
mov
sub
out
out
pop
sbb
addps
inc
pop
test
in
fdivrs
das
rcr
ja
repz
sbb
int
xchg
sub
orl
xor
outsb
fidivl
mov
and
sub
aam
sbb
sbb
mov
push
lret
bound
test
cmpsl
inc
push
push
sbb
add
adc
clc
shll
pop
out
xor
insb
and
mov
push
jnp
add
out
ds
out
in
int
cmp
lods
xchg
in
jo
inc
dec
sbb
add
sub
ds
jg
push
xor
pop
sti
dec
movsl
xor
push
scas
push
frstor
lahf
fisubl
cmovle
lret
stos
jo
shr
fscale
jbe
inc
jne
inc
jmp
lea
imul
sub
popf
in
fwait
andl
xor
aad
cmp
sub
xor
repnz
jl
lcall
jle
and
jmp
and
arpl
insl
stos
lcall
movb
xor
sbb
jns
inc
imul
and
repnz
cli
add
xchg
daa
mov
push
scas
pop
pop
adc
mov
lahf
insb
pop
and
ret
pop
int
jne
lds
mov
pushw
loope
lods
xor
push
mov
icebp
push
dec
mov
out
cs
imul
cltd
fdivs
repnz
lock
or
pop
push
push
adc
inc
testl
scas
or
inc
icebp
shlb
ret
stos
mov
mov
std
inc
mov
repz
mov
add
sub
sub
push
sub
jg
int
in
and
dec
jle
das
mov
mov
aad
cmpsb
or
repz
out
je
sbb
push
mov
jo
adc
sub
test
sbb
cltd
roll
test
sti
arpl
pop
dec
in
andl
push
jp
sub
out
pop
cmpsb
pop
loop
jle
hlt
add
bound
imulb
mov
addr16
enter
cmp
faddl
dec
jge
push
mov
and
sbb
push
stos
add
mov
sub
pop
fstps
jecxz
sub
or
jae
mov
adc
test
cmp
fsubs
push
xchg
outsl
push
fidivl
xor
lret
pop
pop
jmp
mov
out
lret
movsb
call
call
mov
mov
push
push
mov
push
insl
cmp
fisttps
pop
inc
adc
mov
fbstp
pusha
mov
in
mov
inc
cmp
jne
int
movsl
repz
jp
outsl
js
adc
popf
fisubs
jl
out
aas
mov
addr16
subb
daa
adcb
xchg
icebp
or
ret
shll
mov
test
sbb
movsl
push
out
push
cmp
int3
shlb
push
cli
fs
icebp
inc
and
jl
cmc
sbb
pop
and
out
jp
scas
lea
xchg
or
ds
jne
and
movsl
stos
pop
jg
shrb
push
lds
jnp
jle
arpl
dec
fnstenv
sub
add
adc
andb
jg
test
mov
loop
jb
out
js
lds
fstps
aaa
sbb
jns
xor
imul
into
sbb
hlt
movsb
lret
mov
je
and
fs
fadds
mov
sub
insl
in
and
mov
lcall
outsb
push
push
xor
push
lret
notb
cmp
dec
jecxz
pop
inc
loope
add
enter
sbb
dec
jl
push
sub
mov
push
lods
rol
mov
jne
push
nop
aad
or
sub
pop
ret
xchg
sahf
int3
mov
jmp
pop
xor
inc
xchg
mov
testl
in
popf
fiadds
mov
shrb
push
idivl
xor
sti
inc
lods
cmp
sbb
fsubrl
mov
xchg
stos
lret
popf
push
mov
sbb
pushf
dec
fwait
clc
popf
lock
sbbl
divb
ror
enter
pop
lods
dec
sbb
sbb
adc
or
add
in
leave
rorl
mov
mov
sarl
mov
cmpxchg
test
into
test
sbb
repz
jnp
mov
repnz
mov
adc
sahf
inc
mov
mov
push
inc
mov
jg
sbbl
and
or
pusha
out
cmpsl
stos
pushl
jne
jbe
inc
mov
xchg
rcl
ss
xchg
out
mov
push
sub
pushf
insb
xor
mov
mov
rorl
iret
push
xlat
movntq
out
cmpb
pop
mov
int
dec
rcll
cltd
adc
loope
test
addr16
cmp
loope
cmc
mov
test
inc
sbb
ret
mov
repz
push
in
push
mov
mov
mov
outsl
dec
or
jns
inc
cli
and
mov
loopne
jns
mov
lahf
jo
push
outsb
push
or
sbb
mov
push
daa
sbb
xor
cmp
cmc
push
into
test
mov
push
aas
hlt
ds
mulb
adc
shufps
jmp
out
fnstcw
hlt
outsl
cmp
and
push
jbe
sub
mov
sbbl
pop
pop
mov
sub
shll
adc
xchg
fistl
add
fidivl
mov
dec
mov
dec
outsl
pop
dec
mov
insb
dec
sub
pop
std
dec
lret
add
pop
arpl
inc
adc
xchg
in
add
jo
mov
xchg
aam
in
cltd
pop
pop
mov
sbbb
xchg
jmp
pop
and
and
or
dec
and
push
mov
outsl
push
ja
out
imulb
sahf
xchg
test
push
dec
xchg
in
cmp
rclb
test
outsb
lret
lret
sarb
or
jns
or
orb
jne
cwtl
out
out
push
mov
ja
lea
sub
aad
mov
nop
sbb
jo
leave
lds
cli
push
scas
sub
or
fistpl
nop
adc
inc
nop
mov
or
mov
enter
nop
les
daa
imul
iret
aas
std
xchg
inc
mov
mov
ja
jbe
fldpi
sbb
or
call
push
push
call
lahf
jo
sbb
leave
pushf
out
add
lea
stos
sbb
loope
les
dec
xor
es
arpl
adcb
fwait
jle
fmul
ds
jns
fistpll
inc
push
xchg
ret
add
add
pop
jge
ret
in
xchg
test
lock
imul
mov
ret
lret
pop
ret
and
mov
jb
std
mov
shll
jmp
push
js
pop
subb
cli
pop
sbb
shr
and
add
cld
jo
jg
loopne
mov
cli
fcom
shll
sbb
in
rcr
popf
rclb
push
addr16
jge
jno
push
xor
rolb
push
nop
ds
cmpb
adc
cmp
inc
jno
xor
mov
lret
sar
js
fst
xchg
sti
mov
dec
and
sahf
shrl
and
xchg
push
sub
xor
sti
ret
xor
sbb
loope
rcrb
jl
hlt
push
mov
dec
xchg
ds
aam
push
bound
clc
sysexit
insl
jp
inc
xorl
js
and
movsb
pushf
rolb
sbb
mov
xchg
jmp
jae
sbb
jg
xor
lods
rorb
lea
push
or
ds
pop
pushf
add
xlat
adc
fists
lods
pop
mov
daa
fldcw
iret
and
cmp
test
xchg
jb
jp
pop
fstps
rolb
sbb
push
cmpsl
or
inc
dec
jns
mov
into
fmuls
shlb
sub
fimull
add
mov
loope
and
push
lods
jle
testb
dec
or
js
imul
icebp
enter
sub
les
jae
sbb
outsl
ljmp
nop
idivl
inc
scas
and
in
in
dec
repnz
xchg
int
adc
fs
mov
outsb
dec
mov
cmp
repz
and
cmpsb
lods
push
inc
cmc
push
loope
dec
and
mov
mov
nop
dec
mov
sahf
inc
insb
sbb
dec
cmp
pop
lret
aaa
out
ud1
fidivrl
nop
cmp
mov
push
ret
adc
mov
and
adc
scas
mov
add
pop
xor
and
push
mov
pop
jl
test
lret
ret
stc
imul
jge
and
insb
bound
ficoml
scas
mov
pop
jne
dec
out
into
daa
rcrb
xchg
adc
ljmp
les
inc
adc
xchg
mov
lds
push
je
je
jns
sub
fldt
jecxz
push
insl
bound
icebp
jl
gs
popf
dec
xchg
dec
out
movsl
sub
dec
mov
jb
xor
add
xor
inc
adc
imul
cs
or
sbb
inc
dec
add
fucomp
xchg
sub
xchg
push
int3
lods
dec
and
sub
sahf
mov
adc
leave
addr16
jmp
xor
cmpsb
popf
mov
add
pop
mov
stos
popa
lds
test
push
sub
nop
push
push
jg
cmp
push
adc
aam
test
add
lock
xor
icebp
inc
aas
dec
iret
divl
imul
jae
mov
add
mov
push
outsb
pop
or
lods
popf
mov
out
xchg
cmp
cmpsl
push
xor
test
repnz
scas
push
pop
and
xchg
and
sar
loop
push
dec
inc
scas
fdivs
pop
push
cltd
pop
mov
jnp
int
jle
pop
div
test
lods
jae
fisubl
mov
fdivr
jne
push
lods
adc
dec
or
jnp
mov
mov
test
leave
outsb
lock
add
and
jb
dec
gs
in
out
add
pop
sti
movsl
xchg
and
xchg
jns
or
mov
jbe
xlat
data16
fnstsw
dec
cmp
xor
ror
xchg
lret
gs
add
push
xorl
es
aad
xor
xchg
pop
addr16
lret
sbb
inc
fs
and
aaa
xchg
mov
outsl
push
mov
mov
test
mov
inc
loop
lea
int
stos
or
xlat
sets
or
xchg
fldenv
push
pop
nop
lcall
add
lds
loopne
mov
ret
hlt
sub
mov
vdivps
sti
cmpsb
pop
insl
mov
sub
push
rorb
xchg
lods
mov
inc
sbbl
mov
cmp
mov
test
push
popf
jo
and
and
in
loop
outsl
cs
push
xlat
xor
sti
mov
sahf
andb
test
sbb
cmc
popa
adc
mov
add
mov
or
mov
fwait
pop
lahf
scas
cmpsw
push
mov
addb
int3
adc
sti
daa
inc
rorb
sbb
adc
xchg
or
or
xchg
push
adc
popf
mov
sub
out
das
mov
mov
push
sbb
push
roll
xor
ljmp
lock
mov
in
adc
jo
jg
push
shll
aaa
ljmp
mov
cmp
lahf
sub
mov
push
fildll
fbld
mov
push
in
xchg
imul
mov
into
aaa
sub
gs
sub
mov
aad
mov
cwtl
repnz
xchg
xchg
lock
mov
sbb
repz
push
aaa
subb
stos
adc
lea
je
add
or
xor
push
mov
and
in
mov
les
push
add
test
push
xchg
xchg
pushf
xor
sub
roll
mov
in
imul
incl
jo
inc
sub
adc
or
adcl
push
jge
mov
or
mov
add
cmp
add
cli
push
sbb
push
aas
fs
sub
mov
dec
sub
sbb
or
cmpsl
lods
call
ljmp
push
fcmove
stos
iret
xchg
sbb
push
cmpsb
adc
enter
jge
cmp
sub
fcompl
xchg
push
mov
ljmp
cltd
pusha
out
incl
push
push
aad
jae
int
lock
mov
push
rol
xchg
or
or
fimull
aam
pop
add
cmp
pop
or
sub
push
je
subl
xchg
leave
adc
mov
imul
icebp
inc
out
push
mov
pushf
pusha
clc
fcmovnu
mov
push
lods
mov
std
and
xchg
cmp
mov
test
dec
out
or
push
clc
pop
or
fwait
je
dec
call
stc
adcl
shlb
out
inc
dec
inc
sub
pop
cmpsb
lods
cltd
dec
ret
sbb
push
dec
and
push
pop
push
adc
pop
jmp
sbb
ljmp
xchg
lea
xor
pop
pop
push
lods
lret
test
lods
xor
stos
cmc
sbb
test
out
lods
std
sub
ss
sbb
dec
adc
movsl
mov
lcall
sub
popa
or
push
aad
mov
mov
leave
cld
mov
sub
lods
ret
ja
ja
ret
and
imul
cmp
outsb
test
movsb
aas
push
and
cli
mov
nop
dec
cmc
cld
js
popl
and
loope
sbb
int
loop
loope
ret
ja
or
cmpsl
sbb
jge
loop
adcb
or
repz
jle
lahf
lds
add
jp
xchg
stos
xor
stc
xlat
add
cmp
cwtl
xchg
cmc
fstl
loop
scas
or
adc
mov
lret
xchg
sbb
int
xchg
lret
cmc
rcrb
xchg
rcrl
dec
arpl
adc
ds
jecxz
pop
xchg
cwtl
cmp
clc
add
flds
popf
sub
std
add
sub
into
in
push
xchg
mov
xor
mov
jns
lods
stos
cmp
pushf
stc
lods
adc
mov
inc
aam
xchg
jno
inc
test
jle
fstp
or
shll
out
push
jns
sub
fwait
imul
adc
dec
out
gs
xchg
cmpl
pop
push
mov
inc
xchg
test
jo
mov
loope
xchg
sbb
sub
popa
out
push
dec
dec
pusha
jl
sub
cmp
jge
dec
push
jnp
mov
sbb
pop
mov
rcrb
fimull
inc
pop
jle
pop
loopne
mov
inc
sub
pushl
je
stos
movsl
jo
lcall
fsubrs
mov
or
hlt
out
mov
and
push
xor
mov
mov
inc
xchg
cmpsl
cmp
push
mov
mov
fcomip
mov
aad
mov
dec
or
jl
add
addl
jo
push
push
fcoms
mov
push
data16
movsb
inc
inc
push
lahf
int
inc
lahf
jmp
out
mov
add
lods
mov
stos
push
test
pop
mov
ja
sub
inc
adc
cmpsb
into
int
push
clc
addr16
shl
bound
push
mov
pop
fidivrl
mov
orl
ret
adc
out
xchg
sub
stos
idivb
sbb
sub
pop
mov
imul
cltd
out
ret
dec
lds
ss
pushf
dec
xor
xor
jge
fwait
jnp
dec
lea
or
xchg
in
test
je
repnz
jo
lcall
lds
and
rol
xchg
std
jecxz
mov
outsb
out
sub
xor
stos
mov
inc
stos
mov
sbb
pop
movsb
es
mov
sarb
push
xchg
adc
cmp
pusha
or
xor
outsb
or
dec
fcomi
scas
test
inc
in
pop
xchg
sbb
aaa
and
jb
shl
insb
push
sbb
stos
test
xor
das
sti
repz
push
xchg
mov
stos
insb
jmp
rorl
lcall
out
and
dec
scas
push
lock
mov
add
push
rcrl
lahf
out
xchg
jo
out
arpl
sbb
mov
jbe
out
or
cmc
cmp
mov
cmpsb
test
dec
mov
fsubs
cmpsb
rorl
pop
fadds
cltd
mov
sbb
mov
mov
je
cmpsb
inc
xor
icebp
cli
and
dec
inc
je
call
fisttpl
jae
mov
or
sub
rorb
mov
lea
loop
xchg
jbe
xchg
mov
and
inc
stos
inc
cmpsl
inc
mov
adc
jns,pt
pop
and
mov
and
cmpsb
or
xchg
test
and
or
out
cmp
jo
lea
filds
fnsave
cmpw
dec
jnp
shlb
add
push
add
push
fnsave
test
je
pop
sub
adc
cmpsl
jle
pminsw
subl
and
pop
sahf
ja
xchg
fwait
and
sub
cwtl
xchg
insl
cmc
cmp
js
adc
mov
fwait
or
dec
push
mov
dec
call
jnp
cmc
mov
imul
fcmove
ret
xchg
jmp
mov
sahf
pop
jmp
mov
cmpsl
in
xchg
nop
jp
fdivs
xchg
pushf
into
mov
sbb
ss
aaa
add
into
leave
cld
mov
nop
lds
add
in
orl
sub
pusha
mov
xchg
rcrl
imul
mov
sbb
pusha
ret
out
in
adc
in
js
push
push
lods
cmp
into
dec
sbb
stc
bound
or
adc
repnz
daa
sbbb
pop
pop
in
xchg
mov
xchg
pop
in
cmpsl
push
es
lret
pop
repnz
and
testb
imul
mov
adc
pop
jp
add
fisttps
imul
mov
add
cmpsl
roll
mov
push
jno
pusha
fucomi
in
outsl
xchg
sub
lock
lods
stc
mov
jbe
int
pop
mov
arpl
add
cmp
or
mov
fwait
add
and
mov
rol
cmp
and
test
inc
dec
divl
xchg
inc
mov
sub
fimuls
pop
jmp
pop
mov
xor
test
sub
cmpsl
jg
stc
sub
jo
out
xchg
cs
ficoms
ficomps
sub
aad
rcrl
ret
push
es
insb
mov
xchg
stc
mov
cmp
inc
xchg
popa
fisubrl
pop
mov
pop
ljmp
cmpsl
test
jle
jns
inc
push
cmp
mulb
xchg
lods
js
jne
jns,pn
xchg
pushf
mov
push
mov
pop
je
das
inc
testb
stos
stos
in
icebp
mov
xlat
mov
stos
scas
add
pop
adc
pop
sub
adc
sub
mov
mov
scas
mov
les
into
pop
xchg
sbb
xchg
xchg
jmp
daa
aas
mov
inc
mov
jno
cld
mov
mov
and
addr16
nop
lret
pop
imulb
into
mov
mov
mov
mov
cmp
aam
ljmp
je
cmpsb
inc
icebp
bound
adc
sub
xorl
sbb
or
inc
sub
cltd
inc
mov
add
out
sub
js
mov
mov
incb
cmc
pop
std
push
lea
out
jo
int
lods
fnstsw
sub
and
jle
sahf
mov
mov
push
rsm
mov
cmc
dec
in
stos
inc
out
aam
add
icebp
orb
out
add
stos
insl
adc
ss
into
bound
mov
push
std
xchg
ret
fistpl
test
fistps
cltd
mov
out
ret
adc
push
xor
into
fs
jle
xor
push
mov
ds
lcall
xlat
cmp
add
cwtl
cmpsb
sub
sbb
leave
dec
lock
and
int
stc
sahf
mov
mov
andl
pop
jne
mov
inc
pop
adcl
out
shll
and
jb
icebp
int3
xor
in
test
and
mov
xor
femms
pop
cmp
inc
sbb
or
pop
inc
mov
fmull
call
in
add
pop
stos
les
dec
dec
fdivs
daa
test
sbb
sub
pop
fiadds
pusha
inc
stos
dec
lcall
or
adc
in
leave
mov
std
test
add
jno
fldenv
popf
in
stos
cmpsb
xchg
pop
int3
ficomps
push
fs
stos
in
mov
ljmp
xchg
sub
push
mov
adc
clc
push
and
subb
lahf
jnp
dec
jge
sti
je
movsb
and
repz
push
stos
shr
insb
xchg
inc
sub
fwait
mov
push
mov
adc
bound
xchg
inc
adcb
sbb
mov
push
inc
stos
aam
stos
mov
arpl
ret
mov
cmp
in
into
inc
jge
adc
lods
mov
dec
hlt
cli
movsl
or
dec
punpckhbw
inc
mov
idivl
add
into
cmp
ds
fdivl
mov
imul
pop
xchg
push
mov
out
push
mov
xchg
clc
mov
loopne
lds
jecxz
in
jp
leave
leave
fldcw
sub
mov
mov
inc
mov
sub
or
jnp
lods
scas
mov
sub
sahf
xor
call
add
and
cmpsb
xchg
cmp
pop
mov
add
rcrb
mov
cmp
ds
hlt
movsl
cli
sbb
std
pop
sbb
mov
stos
mov
outsb
andl
mov
addl
adc
jp
and
clc
aaa
fdivrp
orb
ret
dec
fstl
data16
nop
pop
jmp
jge
int3
xchg
in
sbb
hlt
xchg
xchg
shrb
cmp
cmc
lods
testb
lcall
roll
jns
fistpll
repz
fisttps
pop
out
push
loop
fisttps
dec
fisubrl
mov
push
add
fnstsw
lock
test
mov
and
repz
lret
and
xlat
fs
cmp
bound
and
pop
je
mov
hlt
roll
add
mov
xor
les
out
lahf
cltd
decb
sub
add
cmp
dec
dec
mov
xchg
aam
adcb
mov
cld
call
shll
adc
pop
sub
cmp
cmp
leave
pusha
adc
addl
stos
orb
flds
dec
cmp
mov
ljmp
xlat
mov
popa
fmul
jge
clc
push
leave
cmc
and
and
mov
adc
out
adc
push
mov
ffreep
push
cmp
xchg
cltd
jecxz
cmpsb
jbe
or
insb
in
pop
push
je
and
xchg
leave
cmpsl
rcrb
fs
jb
pop
lcall
xchg
cltd
mov
rorb
ljmp
in
imul
imul
in
pop
das
sub
int3
testb
cmp
test
fimull
or
inc
or
in
add
mov
stc
outsl
clc
add
dec
push
mov
sahf
popa
adc
jae
cmp
sbb
add
pop
scas
stos
sbb
adc
fcoms
cmp
dec
les
sbb
les
jb
inc
fstps
cmp
add
ja
bsr
movsb
mov
adc
lret
aas
ljmp
adc
jmp
aam
lret
cmp
jmp
fcom
int3
dec
cmp
imul
add
mov
mov
mov
enter
rcll
jbe
aam
cmc
sbb
mov
aas
jbe
cmp
imul
sub
scas
in
out
imul
lret
rorl
mov
add
mov
mov
adc
or
popf
push
jle
push
call
xor
cld
xchg
pop
outsl
add
or
sub
dec
mov
sti
push
loopne
stc
pop
and
mov
lret
rcrw
insl
inc
cli
cwtl
mov
sbb
fdivl
push
adc
dec
and
mov
dec
adc
push
xor
sub
mov
gs
stc
andb
repnz
scas
clc
fwait
enter
dec
test
jl
dec
xorb
add
and
daa
test
push
adc
test
jae
in
pop
leave
jo
mov
mov
xchg
imul
dec
test
in
xor
mov
sbb
adc
pop
jecxz
jge
push
and
ja
lahf
loopne
movsb
mov
and
or
inc
add
lds
lahf
add
rcll
cmp
popa
pop
or
pop
xchg
add
lret
xchg
cmp
cmp
shll
sahf
xor
push
mov
push
sub
sti
mov
pop
or
push
insb
sbb
nop
outsl
mov
insb
jle
mov
pop
or
mov
jp
mov
inc
pop
mov
movsl
arpl
mov
xchg
incb
popf
fwait
cmp
inc
pop
test
sbb
fstps
fwait
push
fs
or
fcmovbe
fwait
jle
idivl
popa
pop
clc
std
aaa
std
lret
inc
aam
ret
es
and
adc
lahf
pop
and
in
mov
data16
loope
sub
pusha
jns
and
push
mov
xor
push
fldl
fs
int
xor
xor
loopne
pop
fadds
jno
sub
out
cwtl
cmp
bnd
xor
jl
out
pop
aaa
fistl
mov
cmp
dec
push
pop
insl
data16
mov
pushf
sbb
lea
cmp
ficompl
adc
mov
dec
push
dec
dec
out
xlat
pop
xchg
dec
xchg
or
test
mov
sti
aas
mov
mov
test
jp
cld
enter
ror
ljmp
cmpl
sbb
xchg
cmp
iret
test
push
mov
insl
clc
xor
xchg
mov
jle
inc
and
pusha
pusha
rcl
lret
lods
xor
call
scas
jmp
xor
mov
dec
jmp
sbb
loope
cmp
sbb
mov
test
xchg
test
in
dec
pop
dec
add
call
shrl
jns
data16
out
data16
ljmp
stos
sarb
fucomip
sub
imul
inc
or
adc
iret
push
or
cmp
push
adc
dec
mov
out
xor
and
movsl
cmc
xchg
xor
cmc
jp
je
inc
outsl
xlat
pop
or
aaa
xchg
jecxz
call
jbe
jb
lret
and
hlt
out
mov
pop
mov
adc
cs
sbb
movsb
mov
lcall
addr16
dec
lret
clc
or
hlt
test
cmp
or
pushf
das
je
mov
hlt
shlb
mov
mov
jecxz
dec
pop
add
and
sub
cli
jo
xchg
decl
test
jb
add
xlat
stos
jno
orb
add
adc
incb
ljmp
inc
xchg
sbb
div
fs
xor
xchg
int3
cwtl
mov
push
notb
andb
and
and
call
inc
push
jg
push
inc
subb
mov
lret
loope
js
popa
sub
lock
cmp
stos
sub
imul
sbb
leave
cmp
xor
jp
dec
hlt
popf
mov
and
lock
ret
add
ret
lret
pop
bound
pop
xor
jo
xchg
aaa
rcrb
fwait
cmp
mov
inc
popf
dec
cld
cs
push
stos
and
xchg
gs
loopne
lods
loope
addb
or
push
jge
adc
inc
push
add
sbb
lods
fnstcw
cmp
lret
mov
mov
jns
adc
sub
cmc
pop
jge
push
shll
add
jmp
jnp
lret
enter
imul
dec
cmpsl
test
rolb
ja
outsl
cmp
psrlq
out
pop
add
xchg
adcb
bound
add
insb
jns
xchg
mov
popl
jne
loop
and
stc
inc
push
idivb
xchg
jno
mov
mov
out
mov
jp
lods
dec
xor
aas
fcomps
fbstp
mov
gs
into
lods
pop
pop
jae
push
push
mov
add
xchg
fdivrl
aad
mov
jns
int
rsm
inc
fdivrl
jle
jle
popf
dec
mov
leave
fadds
test
fmul
pop
stos
daa
xor
stc
mov
shll
add
jns
sbb
mov
fdivs
insl
bound
in
and
xor
in
jl
or
dec
test
iret
push
sub
and
mov
adc
ljmp
jb
faddl
xchg
jne
xchg
imul
test
sub
mov
jo
nop
mov
cltd
test
test
aad
pand
sub
xchg
cmpsl
es
in
lea
xor
les
dec
push
loop
nop
pop
bound
insb
push
mov
in
outsl
leave
fistpl
lds
test
and
mov
hlt
lahf
dec
xor
outsb
and
push
or
jno
popf
gs
pop
push
sahf
or
cmp
movsl
int3
insl
in
cltd
add
sbb
movsb
sbb
ret
cmpsl
and
sub
push
inc
dec
sub
adc
adc
aam
adc
jge
imul
push
mov
sbb
in
sbb
and
imul
stc
out
jg
jmp
or
fcomp
leave
subb
subl
gs
xchg
out
dec
jae
pop
scas
add
imulb
sub
add
bound
dec
loop
in
inc
arpl
insl
test
pop
mov
pop
shll
dec
or
sbb
and
push
xchg
and
hlt
xor
mov
add
sbb
push
icebp
cmp
bound
setg
daa
sbb
cltd
pop
and
mov
cs
pop
or
jecxz
adc
dec
enter
stc
adc
dec
inc
int3
mov
dec
jo
loop
mov
ret
lret
cmpsl
mov
fcmovb
pop
outsl
ja
add
pushf
inc
int3
fstp
dec
jo
xchg
repz
roll
data16
rorl
mov
add
adc
and
cmp
mov
ljmp
stos
gs
pop
fwait
jnp
pop
outsl
inc
outsb
pop
icebp
mov
repnz
cmp
bound
jl
insl
xchg
rolb
daa
inc
roll
into
fwait
adc
push
addr16
fdivrs
push
bound
mov
fists
cmp
stc
fldcw
mov
fwait
adc
lea
add
dec
mov
push
xor
shrl
lret
es
daa
mov
mov
out
sbb
xchg
daa
mov
mov
cs
mov
inc
jne
jle
test
icebp
bound
pushf
fimuls
xor
lods
jns
stc
and
or
arpl
xchg
jg
cli
sbb
jmp
cs
les
aaa
push
or
int3
push
repnz
hlt
fs
adc
aam
shlb
testb
int3
movsl
mov
xchg
insl
subb
sbb
pop
pop
inc
inc
add
je
popaw
shr
ja
cld
mov
mov
push
jno
idivb
xor
mov
out
outsb
stc
ret
or
xor
jb
xor
inc
and
jle
and
adc
movsl
xchg
fs
jg
mov
and
movsb
push
mov
pop
in
push
cli
jl
andb
inc
push
fldcw
lahf
dec
lcall
dec
adc
push
or
inc
xchg
add
jno
mov
jg
inc
add
cli
out
rorb
jbe
lods
lret
push
xlat
stc
mov
dec
cmp
inc
mov
out
mov
movsl
cmc
or
ret
mov
rcr
sub
ficoml
popf
out
lods
adc
into
ds
jns
jnp
out
sub
js
mov
lods
std
or
pop
ficoms
lcall
push
mov
xchg
adc
fwait
sub
test
xchg
mov
sbb
jmp
orb
jns
lock
pop
mov
ficomps
repnz
xor
movsl
cmp
pushf
xor
mov
and
mov
or
ljmp
jecxz
icebp
pop
or
xchg
lds
fidivrl
cmp
lds
rcrb
in
idiv
mov
roll
mov
scas
adc
mov
adc
int3
mov
xchg
push
push
and
dec
cmp
or
mov
fsubrl
and
stc
xchg
stc
cld
jnp
adc
jecxz
popf
fs
fisttpll
lods
jmp
cmpsb
mov
pushw
jge
jns
push
jo
lock
shrb
pusha
mov
adc
push
or
js
jbe
xor
cmpsl
out
sub
cmp
jo
dec
sbb
int3
mov
push
fsubrl
xchg
push
pop
sbbb
adc
and
mov
adc
ret
scas
in
das
call
cltd
mov
mov
cltd
jbe
mov
pop
or
and
mov
sbb
pop
adc
aam
add
mov
into
adc
enter
inc
or
fsub
cwtl
mov
int3
outsb
mov
mov
push
jg
aam
aam
adc
jl
scas
sub
inc
inc
xor
inc
push
push
loopne
and
addr16
dec
dec
mov
adc
loopne
mov
mov
or
andl
sub
je
cmc
scas
ficomps
add
adc
mov
cli
or
mov
pushf
ud2
xor
inc
shll
std
jns
enter
sbb
insl
push
ja
mov
adc
pop
push
lret
cmp
add
std
add
mov
fs
mov
mov
pop
sub
outsb
push
pop
dec
je
testl
and
call
data16
call
test
in
punpcklbw
stc
push
pop
insl
dec
mov
xor
mov
or
int
mov
outsl
pusha
insb
pop
xor
repz
push
sub
data16
push
nop
pop
and
fwait
push
inc
idivl
mov
inc
sbb
pop
pop
fldcw
out
arpl
imul
je
out
cmp
fiadds
inc
sar
scas
push
push
mov
xor
in
sti
sbb
jge
scas
mov
mov
jle
mov
adc
jnp
mov
pushf
rolb
lret
repnz
repz
jbe
xchg
or
and
shr
pop
lcall
iret
sbb
adc
xor
fs
out
and
mov
mov
xchg
fdivl
cmp
cmp
idivl
jo
inc
imul
lods
and
neg
mov
out
or
mov
cmp
std
movsl
ret
scas
popl
jo
insl
cmp
ficoms
mulb
mov
int
out
into
inc
movsb
and
neg
mov
jbe
push
and
and
out
or
mov
push
pop
dec
mov
cld
imul
imul
lcall
in
add
cmpsb
scas
mov
adc
inc
outsb
cwtl
mov
jmp
jne
arpl
add
jle
cmc
clc
setns
push
and
icebp
xor
or
adc
int
push
sbb
repz
push
xlat
xor
sbb
add
sub
dec
dec
sbb
inc
and
push
lods
mov
lret
dec
out
jno
xor
pushf
push
cs
sbb
in
push
sbb
frstor
pop
scas
addr16
dec
cmp
fildl
mov
lock
lcall
push
addb
int3
aaa
dec
dec
aam
aas
andl
fs
rorb
maskmovq
divl
fld
xchg
mov
cmp
jp
popf
xor
sbb
pop
adc
flds
cmp
lds
xor
mov
aam
jbe
js
lahf
mov
les
cmp
cmp
cld
mov
push
push
and
add
inc
shlb
xchg
push
lods
clc
aam
mov
imul
push
jle
insl
mov
neg
clc
lret
cld
or
adc
xor
inc
inc
and
xchg
and
lock
orb
cmp
es
or
int3
jmp
pop
push
cld
mov
dec
lds
xchg
cmp
push
int
lret
xor
andnps
orb
sarb
pop
mov
mull
push
mov
lods
aaa
imul
xchg
lock
xchg
scas
or
leave
imul
cmp
push
adc
or
ja
push
sbb
in
ljmp
xor
lea
inc
add
lcall
jle
xchg
in
mov
lods
pusha
sub
mov
popa
popf
je
pusha
mov
insb
pop
add
movlps
sub
xchg
xchg
jno
call
dec
pop
les
mov
fnsave
sbb
jo
jns
fstpt
inc
fisttps
aas
mov
cmp
imul
shl
mov
inc
les
aaa
loopne
and
jle
sar
mov
pop
ljmp
jno
mov
mov
fidivl
or
xor
repz
insb
xchg
adc
jo
lods
push
mov
adc
fildl
stos
mov
aas
pusha
shll
xchg
fstps
lret
jp
scas
fwait
inc
arpl
mov
loop
pop
mov
das
mov
mov
pop
movsl
mov
sti
cwtl
fmull
je
fwait
icebp
dec
aad
pop
push
pusha
adc
out
sbb
fs
push
rcl
jp
bound
aam
loope
shr
push
call
inc
enter
or
jge
dec
loop
mov
jge
inc
scas
mov
push
movsb
inc
sub
jb
and
int3
cmp
pop
push
cmp
aam
int
mov
xor
xchg
imul
xchg
push
call
stos
outsl
fs
cmpsl
pushf
inc
push
xor
test
icebp
xchg
and
mov
out
jp
jg
and
dec
ja
pushf
repz
cld
xor
dec
into
aam
inc
mov
in
add
mov
je
test
jge
pop
mov
out
mov
pop
shll
mov
in
pop
ds
inc
mov
loope
out
filds
mov
jle
popf
jb
adc
push
sbb
fcmovbe
mov
test
scas
cmp
pop
push
lods
stos
and
int
out
xchg
sbbl
aas
nop
clc
jbe
in
sbb
loope
dec
bswap
pop
mov
pop
int3
or
lcall
inc
push
or
andb
lret
lock
cmp
ss
cmp
jg
hlt
push
fsubrs
add
outsb
jns
test
mov
outsb
xchg
out
mov
fdivs
mov
shll
loope
inc
xchg
or
pop
rcl
pop
sub
sbbl
loope
pop
push
pop
loopne
cmp
mov
testb
adc
addl
sbb
mov
test
lret
adc
lcall
divl
add
das
xchg
scas
cmc
or
lret
push
sub
fndisi(8087
mov
dec
mov
int3
or
icebp
push
jp
test
sarb
in
cmp
cmp
dec
pop
insl
pop
inc
push
adc
mov
ret
movsl
xor
and
add
cltd
scas
cmp
mov
fsubrp
add
lock
pop
xor
sar
ja
dec
mov
clc
and
lds
jl
cmp
into
push
jae
clc
pop
push
testb
idivl
daa
lock
push
push
or
das
pushf
jl
push
imul
inc
out
jbe
call
das
lods
mov
andl
push
stc
aam
ss
ljmp
insb
mov
push
mov
dec
jp
pop
push
adc
test
sti
pop
out
push
push
or
adc
fstpt
fdivrp
cmc
push
adc
cmp
andb
int3
xchg
cmp
hlt
repnz
out
push
push
mov
imul
push
xchg
pop
push
xor
iret
pop
xchg
mov
daa
je
mov
mov
daa
xor
pop
lea
push
sub
jns
xchg
arpl
roll
pop
iret
cwtl
or
jae
insb
imul
xchg
loopne
shll
pop
das
imul
mov
mov
mov
push
lcall
xor
mov
mov
test
xor
out
insb
lds
fcmovne
or
shrl
shll
icebp
andl
ret
fldt
adc
dec
jle
pop
xchg
bound
adc
popa
pop
int
and
add
adc
les
pushf
in
mov
xchg
fnsave
push
xchg
or
dec
mov
and
jp
and
jnp
pushf
inc
push
mov
cmp
es
stos
hlt
leave
unpcklps
cs
mov
mov
dec
mov
push
pop
aad
dec
mov
jbe
mov
inc
mov
cmp
fcoms
rclb
push
outsl
fnstsw
push
adc
mov
push
sti
in
inc
mov
cmp
dec
sub
sti
lock
test
test
dec
clc
mov
popf
pop
pushf
lret
add
mov
mov
xchg
mov
lods
cmp
cmp
bound
or
cli
or
imul
push
and
arpl
mov
xor
int3
mov
or
test
jb
sbb
scas
outsl
cmp
popa
pop
or
inc
faddl
push
xchg
xor
daa
push
imul
fiaddl
lea
shr
push
pop
aaa
scas
or
cmpsb
sub
and
inc
mov
scas
pusha
mov
cmpsl
push
pop
enter
fprem
sub
xchg
mov
movsl
mov
aad
pop
rorl
loopne
repnz
hlt
cmp
adc
mov
push
sbb
mov
repz
push
xor
call
aaa
cmp
cmpb
rorb
pop
lds
mov
push
sbb
push
fisubs
daa
xchg
jb
sub
jnp
out
add
push
sahf
mov
pop
sub
dec
je
mov
mov
add
insb
test
mov
and
out
shl
imul
inc
fldl
adc
les
mov
pop
testl
enter
xchg
ss
pop
cli
fadd
push
pop
cmc
pop
pop
cmp
sub
and
dec
xchg
inc
les
cmp
aas
arpl
leave
test
mov
rorl
ljmp
mov
andl
lea
push
ja
pop
dec
xchg
pop
jne
xchg
inc
imul
jmp
push
or
outsb
notb
xor
jmp
dec
into
sbb
inc
jno
ficoms
jle
test
hlt
out
mov
push
in
adc
sub
cmp
mov
in
inc
fcmovne
mov
imul
mov
rorl
jmp
fisttps
inc
and
popf
add
sbb
mov
inc
scas
xchg
push
sbb
dec
add
mov
into
push
rclb
mov
inc
je
insl
cmpsl
cmp
std
inc
testl
mov
es
in
das
xchg
outsl
clc
std
xchg
jmp
mov
dec
push
xor
or
and
xor
roll
sub
cld
and
std
inc
jg
sub
pop
out
shrb
cs
imul
inc
xchg
pop
and
sub
fidivrl
ja
in
pop
arpl
xchg
lret
lahf
mov
test
enter
aaa
sbb
aaa
push
inc
icebp
pop
add
ret
lods
lods
pop
jge
mov
fdivs
je
dec
dec
and
mov
rolb
jl
mov
orps
or
lock
sbb
lretw
xchg
xchg
cmp
cli
adc
cmc
out
inc
xor
dec
cmpsb
xor
je
dec
dec
loopne
out
in
mov
inc
in
ljmp
jb
or
xchg
xlat
xor
leave
popl
fwait
scas
nop
xor
adc
ret
push
repz
in
inc
aad
imul
popf
push
push
jle
das
addr16
test
sbb
rcr
pop
addr16
popf
das
and
inc
popf
popa
ljmp
stos
add
out
cwtl
xchg
out
sbb
les
inc
push
xchg
out
pop
nop
mov
out
jg,pt
adc
inc
push
aaa
mov
mov
mov
inc
mov
orl
lods
mov
add
aaa
add
dec
mov
push
dec
fwait
in
loop
add
xor
sarb
ss
test
xchg
add
mov
je
pop
mov
jl
dec
fwait
xchg
push
pop
dec
mov
and
movsl
dec
push
lds
push
rcl
push
fdivr
dec
inc
fwait
aaa
dec
cmc
cmp
stos
lcall
jge
cmp
inc
sub
pop
sub
rcll
out
int
ljmp
sbb
and
ss
clc
add
shld
imul
lret
and
mov
cs
add
xchg
int
fidivrl
sbb
jp
xor
in
out
test
stos
lds
push
xchg
enter
mov
push
jge
out
mov
insb
sbb
out
dec
test
cwtl
jno
pop
pop
arpl
mov
add
arpl
sub
lods
dec
lret
xchg
add
test
mov
and
outsl
mov
mov
inc
testl
lcall
adc
dec
dec
scas
jb
and
pop
inc
adc
xchg
clc
inc
xchg
out
aaa
cmc
popf
aam
jnp
jb
icebp
fcomps
popf
adc
mov
or
clc
cmp
stc
jae
push
push
popa
xlat
int3
mov
pop
aad
orb
add
inc
dec
repnz
pop
inc
jae
sub
jmp
pop
add
fcmovnb
jne
jnp
data16
adcb
notl
jge
fnstcw
fcmovu
jne
ret
lcall
imul
sbb
lcall
aaa
aaa
xor
sahf
lock
and
pop
pop
popa
les
mov
push
cld
xchg
dec
imull
adc
mov
or
add
lret
clc
mov
xchg
sbb
jns
insb
sbbb
pop
or
jae
pop
andb
inc
mov
xorl
imul
xchg
sahf
movsb
imul
add
pushf
iret
sbb
shlb
addr16
imul
adc
sub
sti
test
aaa
pushf
push
jge
lds
pop
mov
and
inc
mov
jecxz
inc
cmpsb
dec
add
jl
ljmp
mov
sub
jp
lcall
mov
ds
out
ja
cmpsb
les
sti
adc
pop
lods
pop
fwait
sbb
sbb
xchg
enter
xor
js
in
addb
or
testl
popf
cmp
movsl
inc
and
hlt
dec
sub
shl
call
cmp
pop
fadd
push
sar
jne
repz
call
and
or
mov
std
lea
ret
sti
xor
mov
mov
and
ljmp
mov
pop
dec
data16
or
scas
dec
xchg
loop
loop
and
ret
mov
in
mov
jmp
mov
mov
ret
lods
inc
xchg
jl
rol
xorl
aaa
dec
pop
mov
jnp
fs
pop
dec
sahf
mov
or
test
push
les
test
mov
ljmp
jne
jl
jae
out
xchg
imul
jae
adc
pop
dec
adc
call
fildl
jns
or
gs
cwtl
cmp
cmp
mov
push
mov
cwtl
ret
or
pop
lcall
test
sbb
aam
push
xor
movsb
dec
out
adc
xlat
das
mov
in
ficoms
sbb
fldl
mov
lcall
sbb
xor
sbb
xor
addr16
call
out
es
popa
mov
push
inc
mov
jecxz
or
xchg
adc
push
lea
sahf
pop
orb
and
add
pop
lret
sbb
mov
jns
hlt
jg
movsb
dec
push
push
shll
popf
push
ret
mov
pop
aam
dec
iret
mov
jbe
negl
shlb
rcll
das
push
jp
mov
mov
and
and
mov
jecxz
add
in
std
popf
sub
inc
hlt
pop
sbb
cwtl
loopne
xchg
mov
cmc
inc
pusha
mov
mov
daa
arpl
add
cli
lods
dec
out
insl
fsubrs
stos
xchg
xchg
imul
inc
xor
pop
idivb
jge
jecxz
or
rcrl
mulb
adc
xor
push
shrb
xchg
outsb
sub
mov
cmp
mov
das
popf
cmp
and
faddl
mov
je
fdivrs
mov
fstps
es
pop
fs
movsb
arpl
rorb
in
pop
adc
stos
ljmp
push
push
ficoml
sbb
inc
mov
dec
dec
cmp
daa
fs
das
pop
popf
add
push
fchs
dec
fnstcw
rclb
sub
xor
push
movsl
or
fwait
loop
rclb
fbstp
and
xchg
dec
outsl
je
or
into
fcmovbe
cld
xchg
cmp
sub
aad
cmpsb
insb
mov
idiv
sbb
inc
add
leave
dec
pushf
push
cmp
mov
cmp
into
enter
outsb
ja
aaa
movsb
shrl
test
lea
push
popa
stos
sub
repz
pop
repnz
pop
repz
jecxz
sbb
pop
sub
cs
movsl
adc
jecxz
adc
clc
xchg
inc
es
lcall
mov
xchg
mov
mov
add
xchg
sbb
xchg
mov
fnstsw
inc
in
cmp
adc
mov
or
xor
add
je
and
pop
xor
dec
jmp
mov
or
lret
flds
and
mov
sub
and
mov
hlt
cmp
andb
outsl
cli
jbe
pop
push
cmc
dec
and
cld
jg
add
sarl
xchg
imul
es
test
ljmp
jle
mov
fistpll
pop
dec
pop
mov
adc
or
mov
dec
lahf
adc
es
mov
je
lcall
int
mov
sbb
sbb
dec
aad
sbb
int
jb
fcompl
ljmp
hlt
dec
dec
stc
inc
outsb
xorl
cld
push
andb
cmpsl
rcrl
inc
jl
subl
aas
mov
xor
out
dec
cmpsl
cmpsl
movsl
inc
sar
out
cmpsb
cld
xchg
cmp
push
in
aad
xchg
mov
mov
and
and
daa
xchg
push
jnp
xchg
or
xchg
dec
xchg
shr
out
xor
sbb
gs
fcomi
jae
cmp
fcmovne
mov
add
mov
dec
sub
sbb
push
fs
mov
mov
leave
mov
fwait
sub
jmp
inc
orb
sbb
mov
xchg
jle
pop
xlat
pop
mov
std
or
inc
rorb
gs
sub
jg
sub
scas
pop
pop
dec
dec
stos
mov
adc
cmp
addr16
sub
push
xchg
sbb
mov
sti
and
jle
xor
sbb
push
mov
hlt
pop
mov
and
hlt
std
add
jg
repz
jb
sarl
jle
sub
bound
mov
and
jne
mov
neg
imul
mov
mov
ficoml
mov
outsl
adc
sub
shlb
divl
ds
cmp
pop
pop
fwait
test
and
sub
loope
ficoml
and
mov
neg
dec
daa
pop
aas
cmpsl
adc
sbb
fcomi
sub
popa
jnp
xchg
sub
xor
jbe
cltd
pop
imul
in
cmp
jb
sbb
jne
insb
mov
or
in
ret
cltd
inc
jmp
and
xchg
or
jecxz
call
aas
mov
mov
jmp
out
xchg
cmc
js
sbb
xchg
inc
movsl
cmp
arpl
and
aas
mov
push
or
push
leave
cmp
inc
xor
xchg
ret
and
adc
out
cmp
aaa
cmp
clc
pop
sbb
sahf
cmc
dec
pop
imull
sahf
scas
dec
lds
jg
fadd
mov
ss
xor
cmp
out
nop
mov
xor
or
ds
add
out
cli
nop
or
mov
ret
test
xor
mov
dec
cmpsb
jg
pop
addl
rcrl
out
rcrb
mov
jbe
lcall
rolb
into
stc
cli
out
nop
mov
out
mov
ljmp
ret
jno
shrb
adc
fwait
fwait
jo
jge
sahf
fisubrs
jb
mov
das
mov
test
sti
sahf
movsb
movsl
mov
xor
in
pop
shrl
pop
xor
ret
cmp
std
mov
push
jae
shl
in
pusha
inc
enter
xor
adc
lret
jl
cltd
cmc
mov
es
push
fsub
adc
push
mov
push
inc
stc
cltd
pusha
das
push
sbb
test
mov
mov
jg
mov
adcl
les
xor
or
hlt
mov
in
stos
insb
stos
pop
push
insl
xor
adc
inc
call
sbbb
faddl
dec
push
cwtl
mov
roll
inc
jl
cmpsl
adc
out
test
iret
aam
ficompl
sub
adc
adc
mov
xor
aaa
cmp
stc
testl
loopne
add
orl
sbb
fcoms
mov
jle
xor
int3
jo
int
in
xor
nop
mov
pop
das
enter
push
fcmovbe
aam
lods
jo
stc
cwtl
sbb
ret
cli
arpl
je
rcll
fmulp
ds
add
stc
xor
fst
jno
xor
xchg
outsb
mov
repnz
test
mov
inc
cmpsl
insb
mov
hlt
sbb
push
out
sub
xchg
pusha
mov
adc
dec
cmc
pop
mov
push
xchg
jb
jmp
jmp
sub
mov
insl
push
jmp
in
push
xor
aam
mov
mov
aas
clc
inc
and
stos
shrb
push
dec
in
or
push
sbb
mov
xor
xor
arpl
adc
push
and
gs
push
pop
push
xor
mov
out
test
mov
jge
add
mov
pop
cmpsb
rorl
stos
je
sti
repz
lea
movsb
cli
and
pop
mov
lods
int3
pusha
jbe
dec
jmp
iret
lods
rclb
add
dec
adc
insl
xlat
mov
cltd
test
pop
iret
fs
xchg
inc
xchg
inc
mov
insl
cmp
ret
mov
mov
xchg
push
or
push
rcrl
in
movb
test
stc
lea
push
cmp
mov
insl
lret
shrl
sbb
dec
rorb
jmp
loope
push
enter
mov
ret
test
fisubl
out
xchg
and
ljmp
aad
jbe
out
mov
aaa
mov
jb
outsl
and
inc
idivb
aam
push
cmp
cld
cld
sub
aad
push
movsb
inc
mov
addl
or
gs
andl
test
loop
in
pop
daa
xchg
in
push
je
dec
arpl
jbe
out
fisttpll
mov
or
mov
insb
fisubrs
inc
sub
rclb
roll
jb
cmp
loope
int
xchg
outsb
repz
mov
orb
movsl
add
sub
sub
pop
sub
xlat
fnstcw
stos
pop
pop
out
sub
lea
lcall
lret
hlt
mov
imul
out
pop
jnp
mov
stos
ret
add
lfs
rol
push
adc
iret
inc
mov
outsb
test
add
loope
cwtl
cmpb
rorb
mov
scas
jmp
and
mov
jo
mov
popf
push
mov
out
add
cmp
mov
mov
call
cmc
int
push
movsb
jno
push
inc
mov
sub
add
pusha
sbb
mov
dec
lret
icebp
xchg
xor
jge
imul
mov
mov
adc
mov
movl
adc
aas
fisttpl
mov
xor
or
mov
jp
push
add
pusha
outsb
mov
testb
fisttpl
xchg
icebp
cmp
xchg
jmp
jmp
bound
mov
mov
mov
or
call
das
fsubs
arpl
xor
dec
icebp
adc
add
insb
cmc
inc
lahf
shrl
sbb
and
mov
scas
pop
arpl
push
in
in
dec
call
adc
push
lret
in
xchg
push
clc
adc
inc
inc
int
lea
daa
popf
sti
cmp
jmp
cmp
and
push
jl
xchg
leave
mov
push
leave
cmp
xchg
xor
add
cli
mov
adcl
jb
outsb
in
lcall
mov
bound
dec
mov
je
nop
dec
add
out
testb
negb
dec
mov
in
xor
test
push
sbb
idivb
pusha
faddp
xor
mov
imul
or
cmpsl
push
add
idivl
push
push
roll
testw
mov
or
mov
push
sub
lds
sub
and
adc
push
pop
loop
into
push
dec
ja
xchg
push
movl
test
sub
out
add
repz
in
cwtl
mov
imull
not
sbb
pop
cmp
inc
aam
mov
out
xchg
insl
add
inc
add
mov
shrb
xor
and
sbb
inc
or
fdivrs
outsb
mov
xchg
and
sbb
out
sbb
inc
push
jl
mov
xchg
pop
lea
mov
jno
pop
sub
add
mov
cmpsw
mov
sarb
cmp
fsubs
int
lds
adc
aas
fdivrs
sbb
mov
adc
das
dec
clc
loop
or
xor
ss
mov
mov
mov
jg
enter
ljmp
xchg
dec
or
packsswb
into
mov
fwait
mov
ja
out
loop
dec
push
mov
mov
nop
pop
add
jmp
adc
or
mov
pop
out
enter
mov
mov
inc
pop
and
sub
mov
inc
xor
repz
mov
push
jle
test
add
loopne
js
rcll
pop
ljmp
sub
sti
xor
add
add
or
mov
pop
movsl
mov
and
push
pop
jb
adc
fdivs
test
sarl
inc
push
adc
nop
das
or
mov
xchg
sbb
sub
clc
pop
sbb
scas
ds
hlt
loop
and
out
mov
es
push
cmc
jb
mov
aas
movsb
leave
ss
imul
rol
mov
adcb
pop
sub
sarb
fmul
sub
hlt
out
and
lret
rcll
mov
xchg
dec
inc
push
and
adc
xchg
mov
mov
test
push
pop
imul
je
test
dec
std
mov
popf
dec
inc
jg
icebp
or
pop
push
xchg
inc
addr16
add
cmp
jg
add
jge
cmp
jae
aaa
adc
sti
popf
cmp
push
add
repz
mov
sub
jecxz
lret
ljmp
sub
mov
xor
orl
inc
pop
repz
jl
call
repnz
mov
cmp
iret
sbb
pcmpeqb
lret
mov
mov
jmp
outsb
fsubrs
mov
in
pop
loope
push
ret
jcxz
out
adc
aaa
jb
out
inc
mov
dec
fs
adc
test
sub
cmpsl
mov
enter
loop
sbb
jne
or
add
pop
cmp
push
leave
xor
jp
aam
mov
aas
jge
push
inc
xchg
cmpsb
test
sbb
or
inc
sti
stos
test
and
mov
xor
cmpsb
sahf
aam
push
xchg
xchg
inc
or
lds
add
xchg
add
in
sub
test
shrl
gs
add
lretw
mov
xor
lea
cmp
xor
adc
fstl
loop
lea
add
shl
pop
adc
aaa
int3
cltd
ss
sbb
cmp
sub
push
lcall
jl
fs
jbe
ja
mov
filds
add
sahf
jns
push
jne
push
lds
adc
rcrb
fwait
adc
lahf
jns
push
xchg
das
dec
in
ret
clc
push
xor
scas
scas
clc
sub
test
add
movsb
leave
sbb
ds
jecxz
mov
mov
or
dec
ficoms
addr16
dec
dec
scas
lss
mov
loopne
adc
mov
jl
aad
mov
and
push
inc
ret
mov
inc
shlb
ljmp
xchg
lds
adc
ja
test
mov
outsb
faddl
das
adc
add
pop
je
cmp
push
imul
push
xor
in
addr16
mov
daa
mov
jmp
xchg
pusha
mov
dec
int
mov
cmp
pop
add
jle
test
sbb
test
pop
sti
sub
xchg
pop
cli
pop
rorl
lahf
pop
mov
test
pop
jmp
mov
dec
jg
xor
hlt
lea
gs
mov
enter
jmp
and
or
pop
pop
inc
rolb
jne
xor
dec
mov
xor
aam
mov
xchg
lods
pop
lods
inc
xchg
sbb
mov
push
das
cmp
sbb
xchg
sub
mov
lcall
test
sub
inc
frstpm(287
popf
inc
push
dec
jmp
lock
sbb
xchg
and
mov
cmp
dec
mov
cmp
out
mov
jecxz
out
push
mov
in
xlat
imul
mov
lret
jne
sbb
sahf
add
repz
int3
in
xor
or
jg
jmp
out
sbb
sbb
push
mov
movsb
sbb
mov
mov
stos
inc
repnz
stos
push
rcr
or
lds
mov
stc
push
imul
pop
pop
out
xchg
xchg
sbb
popf
adc
loope
cs
jns
fstpl
pop
test
test
lret
cmp
mov
xchg
sbb
and
fsubrl
sbb
call
outsb
cmc
sbb
jne
add
push
out
stc
pusha
fcmovnb
or
xchg
xlat
or
insl
fprem1
dec
pop
scas
aaa
mov
add
dec
mov
sahf
ljmp
cltd
pop
lahf
ret
push
or
cmp
repnz
mov
mov
enter
inc
xor
jg
mov
stos
and
sbb
lods
rcrb
mov
xor
xor
or
lret
cmp
xchg
outsb
hlt
jae
mov
test
pop
mov
mov
in
jecxz
cmp
xchg
scas
or
int
inc
mov
pop
mov
mov
adc
push
je
fisubrs
sbb
lea
ret
arpl
pop
and
cwtl
inc
cmp
dec
xchg
mov
mov
test
lcall
xchg
nop
jecxz
test
nop
fs
lds
loop
std
pop
andb
test
push
sbb
and
push
or
shrl
cmp
lahf
pop
enter
jo
sub
scas
jno,pt
sti
inc
orl
push
xor
push
sub
push
sbb
adc
xlat
loopne
xor
push
pushf
fisubrl
xchg
mov
xchg
xchg
dec
push
inc
aad
cmpl
push
imul
pusha
pop
xor
mov
sbb
negb
in
aad
cltd
mov
repnz
icebp
pop
sub
add
mov
sub
sub
mov
inc
push
test
inc
aad
sbbb
fsubr
push
lcall
jns
out
inc
addr16
in
lret
mov
push
imul
insb
stc
push
pop
pop
in
icebp
and
les
inc
push
int3
mov
sti
jmp
std
scas
cmp
pop
out
mov
cmp
xchg
dec
shlb
in
mov
iret
and
in
imul
out
leave
ror
call
sub
mov
or
rclb
pop
int3
fchs
mov
iret
mov
mov
jb
mov
fiaddl
and
pop
test
or
or
xchg
xchg
mov
in
das
add
mov
aaa
jl
aaa
push
mov
push
lret
int
sub
test
cli
push
nop
jno
imul
inc
cwtl
mov
lods
xchg
popa
loope
mov
cmpsb
movsl
jecxz
repz
add
sbb
lods
and
push
jns
leave
into
jno
sub
fcom
mov
scas
call
mov
push
sub
adc
xor
cwtl
sub
mov
orl
xchg
dec
repnz
shr
mov
lcall
jecxz
shrl
adc
pop
in
and
sti
jb
xor
imul
stos
ljmp
leave
pushf
mov
les
jnp
xor
cmp
inc
xor
sbb
in
daa
pop
test
aad
fsqrt
mov
lcall
pop
aaa
mov
and
add
dec
xor
inc
jecxz
outsb
mov
mov
mov
push
arpl
les
das
or
and
xlat
cmc
or
sbb
xlat
dec
lods
std
or
enter
mov
je
pusha
sub
aad
data16
int
push
cmp
lcall
mov
pusha
incl
or
or
xor
stc
mov
popf
push
je
mov
jb
pushf
lock
mov
fimull
dec
aad
sbb
cmpsl
arpl
shrb
xor
sub
loope
cmc
mov
dec
gs
cltd
and
ficoms
repz
adc
xchg
mov
push
pushf
in
in
in
popa
jo
inc
lret
xchg
addr16
or
jo
push
sbb
cmc
and
push
bound
mov
pop
fsubl
int3
jnp
enter
lods
popf
fucomip
fisubs
sti
ds
rorl
pop
mov
test
lods
dec
xchg
cmp
arpl
inc
sbb
xchg
pushf
jmp
jmp
stos
add
insl
xor
dec
and
addr16
mov
pop
loop
sub
subl
rolb
inc
test
push
jns
popf
pushf
loop
dec
sub
inc
mov
sahf
fidivrs
sbb
ret
cs
inc
mov
jmp
mov
andb
in
mov
xchg
cmp
insl
lods
popf
push
addr16
ret
int
and
movsl
inc
hlt
push
adc
jmp
inc
inc
flds
jmp
or
adc
inc
xor
jnp
xchg
lea
sahf
cltd
arpl
xor
sbbb
mov
and
arpl
mov
inc
xor
pop
xchg
mov
jmp
fs
lods
aam
pop
mov
sbb
dec
jnp
xorl
cmp
xor
mov
fstp
jg
push
dec
out
mov
jne
fstpt
fiaddl
jle
mov
inc
push
sbb
divl
dec
scas
ficompl
xchg
insb
sub
cs
test
mov
push
pop
loop
nop
fst
lds
jae
pop
xor
nop
push
xchg
pop
mov
stos
inc
inc
mov
fisubrs
sbb
push
aad
jo
in
sbb
imul
adc
enter
fisubs
inc
repnz
cltd
pop
int
stc
or
jmp
in
into
push
enter
jle
rcl
outsb
jge
push
cli
popl
or
fsubrs
add
jb
shl
push
dec
cmpsl
sti
testb
adc
pop
mov
and
fwait
enter
xchg
iret
ljmp
cli
ret
or
jmp
xchg
adc
cmp
jne
negl
xor
movsl
push
jmp
pop
push
out
xchg
lahf
dec
ret
rcl
fs
fbld
adc
fwait
sub
push
int3
fldenv
in
pop
cmp
push
mov
in
dec
outsl
scas
ljmp
rcrb
dec
adc
iret
adc
sub
enter
push
pushf
int3
xchg
fstpl
mov
dec
push
cmp
movsb
test
add
jge
sub
jge
call
addr16
xchg
lret
pop
cmpsb
mov
xor
lahf
add
pop
popa
mov
lahf
call
ret
sub
and
bnd
inc
mov
adc
push
pop
dec
into
les
int
sbb
push
mov
jb
out
loope
jg
cld
std
add
mov
push
pop
xlat
jae
mov
mov
repz
push
int
and
in
loopne
int
xchg
repz
sbb
pop
dec
sahf
aaa
aas
cmp
aaa
cmp
sub
or
daa
adc
cld
jnp
or
inc
jns
xchg
sub
sub
mov
or
push
jge
pop
xor
sbb
push
sub
mov
cld
xchg
add
push
fistl
sub
popf
cmpsb
scas
pop
xchg
ret
popa
aaa
ja
fstpt
imul
test
add
arpl
add
in
push
or
xor
xor
cld
mov
jae
jns
mov
mov
jp
les
mov
imul
outsl
xor
jo
jne
in
push
add
push
dec
jbe
push
xchg
pusha
xor
js
jb
es
mov
stc
jae
inc
xchg
mov
nop
ljmp
into
es
fidivs
es
mov
mov
mov
outsl
and
hlt
pop
addb
ss
fwait
mov
lcall
sub
dec
test
xchg
mov
push
pop
sarb
sahf
out
jmp
and
inc
xchg
jns
dec
add
cmp
mov
out
xchg
xchg
dec
leave
mov
lock
mov
nop
icebp
scas
xchg
pop
sbb
jl
and
cld
daa
in
lea
aas
adc
mov
bnd
mov
dec
repnz
jmp
pusha
adc
fwait
xor
sarb
fildll
pop
aam
mov
dec
lods
les
sahf
push
rclb
sub
xchg
pop
in
xchg
inc
movsl
xchg
ss
dec
mov
ja
xor
inc
loope
arpl
into
das
das
out
sub
fidivrl
cmp
sbb
in
popf
add
pop
push
cmp
mov
std
nopl
outsl
xchg
pop
and
std
cmp
and
lock
mov
sbb
fisttpl
lret
int3
out
mov
cmp
sub
mov
adc
int3
sahf
push
mov
fmull
ds
ja
xchg
mov
icebp
scas
jle
jle
jnp
add
sarl
hlt
in
push
fucom
add
je
add
notb
push
mov
loopne
movsb
push
pop
xchg
mov
or
push
cmpsl
scas
dec
rcll
int3
pop
hlt
pop
daa
and
inc
and
es
sbb
and
xchg
pusha
outsb
sub
xchg
insb
leave
fbstp
repz
sub
xlat
cltd
xor
ja
sub
shrb
mov
iret
pop
xchg
inc
mov
test
movsb
popa
and
or
in
jae
push
mov
addr16
sub
inc
dec
xchg
inc
dec
jo
mov
stc
test
aas
outsb
inc
xchg
bound
sbbl
pop
test
pop
stos
inc
fadd
loope
imulb
cmp
mov
std
pop
scas
inc
sbb
filds
cltd
ret
aad
sub
pop
cmp
aas
insl
jnp
inc
mov
lret
and
push
push
inc
pop
ljmp
mov
and
jo
add
ds
cmpsb
pop
int3
pop
xor
inc
push
push
xchg
sbb
mov
sub
sub
lock
loop
mov
xchg
leave
mov
cmp
mov
cmp
add
jno
mov
sbb
fnsave
push
shl
int
push
and
ret
loope
sbb
out
clc
test
inc
loopne
jl
dec
and
scas
hlt
hlt
pop
sub
fcoml
into
mov
loop
rcll
insb
shll
in
lock
pop
jbe
mov
lds
inc
loope
add
jnp
rcl
fldz
inc
jge
pop
insl
mov
pop
ficoml
icebp
inc
and
insb
push
jbe
test
xchg
xchg
xchg
add
xor
rorl
inc
je
push
adc
mov
or
inc
mov
sti
cmp
mov
addr16
jbe
lds
pop
enter
in
inc
jb
push
cmp
ja
cmp
in
mov
out
loopne
ret
mov
push
pop
cmovo
aam
lret
lret
popf
in
cmp
xor
add
mov
push
and
sub
outsl
cmp
fptan
int3
xor
fsincos
jo
jno
or
mov
fisubrl
jb
shrl
sbb
call
sbb
or
xchg
pop
imul
fildl
sbb
rcr
subb
ja
pop
call
test
jo
mov
pusha
xlat
dec
mov
mov
pusha
jmp
sti
mov
bound
and
xor
movsl
inc
xor
dec
mov
inc
loop
add
fsts
pop
inc
jecxz
std
sahf
dec
ss
sub
sbb
das
push
add
add
xchg
dec
mov
and
shrb
hlt
xchg
jns
jecxz
sub
sub
sbb
jl
lds
xor
orb
sbb
leave
imul
ret
aaa
icebp
lret
repz
lea
or
ds
jl
in
jmp
dec
cmp
xchg
inc
out
mov
push
adc
cmp
movsl
pop
int
adc
in
or
mov
lods
add
mov
pushf
cmp
dec
push
int
mov
push
int3
inc
movsb
cmpsb
push
das
scas
out
dec
add
ljmp
and
cmp
out
xor
sub
lahf
mov
sub
sbb
add
xchg
push
imul
and
dec
inc
cmp
rolb
sub
adc
cmp
jo
mov
push
mov
adc
dec
mov
mov
test
rcr
mov
jle
into
jmp
ficoml
sbb
lret
jb
aad
imul
dec
gs
mov
movsl
adc
xchg
out
sbb
cwtl
pop
add
xchg
mov
add
sti
or
fcomp
dec
dec
mov
sbb
add
sub
sbbb
push
dec
pop
mov
pop
jbe
lock
or
lods
bound
pop
jge
xchg
xchg
ja
xchg
outsl
fcompl
push
cmp
test
pop
das
xchg
cmp
mov
sub
pop
inc
aam
inc
jl
pop
mov
adc
ljmp
cmp
lahf
dec
sub
mov
int3
arpl
push
cld
decb
cltd
xor
out
data16
push
jb
shl
lahf
push
shrl
dec
div
xchg
test
hlt
fists
notb
outsl
aas
loope
mov
clc
cmp
dec
loop
fimuls
mov
les
nop
or
mov
jae
add
sbbb
mov
mov
pop
inc
cwtl
inc
out
dec
loopne
pop
aad
dec
adcl
hlt
fwait
call
rclb
push
sbb
xor
mov
outsl
out
je
pop
mov
in
pop
cmp
lods
loop
xabort
mov
imull
mov
dec
pop
dec
stos
sbb
and
add
les
gs
addr16
addl
xor
repnz
push
mov
movsl
bnd
rcrb
test
push
xor
cli
loope
stc
fisttps
fucomp
daa
mov
and
inc
pop
push
inc
hlt
mov
mov
leave
inc
pop
shlb
lahf
cmpsb
fdivl
sbbb
cld
add
cmp
sbb
into
je
cmp
cmc
add
ret
jbe
outsl
insl
and
sbb
sar
adc
fimuls
mov
sti
mov
xchg
xor
add
popf
in
lahf
cwtl
mov
iret
lods
mov
fnstenv
add
bound
sarb
movsb
mov
mov
test
mov
lds
movsl
jg
data16
sub
xchg
lret
push
mov
mov
lahf
in
or
jnp
inc
jno
aaa
xor
pop
xor
sub
push
jg
mov
inc
pop
xor
push
adc
dec
test
stc
xchg
or
mov
int3
mov
sti
fld
divb
sarb
std
mov
fmulp
dec
out
mov
dec
mov
push
xor
mov
out
mov
std
push
mov
xchg
aad
jge
sbb
mov
loope
sbb
adc
gs
sub
cmc
sahf
lds
arpl
lret
sahf
jae
fidivrs
lret
adc
mov
add
mov
shl
popa
fs
inc
mov
mov
scas
and
icebp
sbbl
pop
push
test
adc
jns
int3
fildll
subb
xchg
in
sarl
xchg
pop
jg
jg
pop
dec
js
pop
scas
in
xor
fstpt
jp
push
add
mov
cmpsl
lcall
mov
jb
stc
add
xchg
push
cli
and
xor
out
and
popa
push
fisttps
xchg
pop
xchg
popa
insb
sub
dec
lret
lock
or
jae
mov
sub
out
inc
cltd
cmp
mov
loope
cmpb
pop
sub
test
out
xchg
nop
icebp
pushl
xchg
inc
push
inc
mov
fs
das
imul
mulb
inc
ret
insb
dec
bound
or
pop
jno
sbb
jbe
sahf
pop
cmp
push
xor
jle
mov
shrb
mov
es
xchg
or
je
addr16
es
mov
cmpsl
add
or
xor
mov
sub
imull
mov
mov
in
mov
adc
cmp
and
add
rcrl
lds
push
or
mov
sbb
sbb
dec
add
sbb
xchg
stos
sbb
inc
bound
movsl
mov
scas
xor
pop
insb
add
leave
ljmp
cmp
mov
add
or
movsb
fwait
cmp
sub
mov
push
stos
fwait
inc
mov
leave
push
push
mov
push
arpl
shll
jno
in
pop
sub
inc
xor
iret
lea
pop
cltd
inc
loope
in
out
sti
loop
ss
jns
stc
into
add
inc
mov
repnz
sub
into
gs
jns
jl
cs
pop
in
pop
dec
mov
fisubrl
fwait
pop
mov
jno
push
sub
scas
and
add
lods
cmp
cld
push
aas
push
sub
cmpsb
adc
shrl
pushl
movb
mov
das
inc
jns
lods
inc
fcompl
lahf
xchg
lret
add
and
movsl
sbbl
sbb
out
cmp
cmp
xor
gs
scas
adcl
test
addb
repz
leave
in
pop
inc
and
push
adc
mov
je
movhps
jns
shrb
sbb
outsl
imul
ja
cmpsl
adc
sub
mov
cmp
jno
mov
mov
jl
ja
test
imul
out
push
idivl
jle
xchg
ffree
ret
aaa
xchg
les
les
inc
movlps
pop
jmp
mov
xor
pop
int
repz
and
jmp
rorl
cmp
icebp
addps
pop
lea
xchg
call
in
les
pop
sub
push
stos
std
rcl
xor
nop
sarl
or
xor
sbb
cmp
xlat
nop
or
fwait
pop
mov
repnz
adc
xlat
sahf
sbb
repnz
std
popa
cmp
sub
add
cmp
cld
fucomp
add
or
sbb
dec
and
dec
jo
push
loopne
jb
mov
popa
dec
jmp
add
or
and
sub
fdivs
repz
jp
movsl
dec
in
movsb
mov
imul
jp
inc
push
or
pushf
js
addl
adc
pop
std
push
xor
or
cmc
inc
and
mov
inc
mov
mov
ja
insb
loop
fildll
bound
outsb
push
jl
mov
pop
inc
push
pusha
push
inc
sarl
pusha
or
inc
aaa
pop
xchg
jnp
iret
lock
add
push
je
xrelease
aam
or
popl
mov
sub
cs
loopne
sub
aam
jg
or
xchg
xlat
divl
divl
sbb
popf
cmp
adc
push
xchg
sbb
scas
insl
mov
fisttps
in
les
out
dec
ret
shl
dec
popf
jp
out
xor
mov
mov
dec
mov
jge
lahf
push
add
and
push
test
fwait
pushf
insb
push
push
xor
cwtl
inc
mov
cmp
fnstsw
cmc
imul
jg
xchg
add
pop
popa
les
mov
mov
scas
fdivl
in
out
xlat
adc
test
pop
sbb
and
je
shll
push
shll
add
or
sub
xchg
je
ja
ret
fs
xchg
inc
fistpll
rcr
addl
inc
adc
mov
cmpsl
shlb
or
dec
outsl
push
mov
dec
add
adc
out
das
and
bound
data16
pop
aam
xorb
lret
xor
mov
sbb
in
jge
mov
int
cmpsb
push
or
cs
daa
adc
jle
adc
and
jo
inc
ds
outsb
xchg
out
aam
cmp
and
mov
adc
cwtl
insl
into
fucomp
cmp
or
xlat
sub
push
test
ja
stos
call
push
cmp
clc
out
add
je
stos
jl
add
shrb
cwtl
cwtl
int
or
inc
jns
inc
mov
arpl
jno
rorb
xchg
mov
pop
ds
sbb
sti
pop
pop
inc
xor
iret
pop
add
addr16
loopne
gs
rdpmc
xor
fistps
das
sbbb
repnz
sbb
mov
or
xchg
outsb
cmp
sub
ret
ljmp
xor
xchg
jnp
cmp
mov
cld
mov
movl
dec
stos
sbb
adc
fs
pop
xchg
repnz
movsb
mov
divl
pop
cmp
je
inc
dec
popa
jo
mov
aad
mov
push
pop
mov
pop
jp
jge
sub
sbb
outsl
rorl
loope
cmp
cmp
mov
mov
mov
xchg
mov
mov
ds
arpl
xlat
daa
int
inc
lds
bound
or
mov
test
mov
hlt
lret
sahf
mov
int3
or
cltd
mov
enter
mov
sbb
cld
cltd
push
mov
mov
popa
jb
sbb
add
add
int3
lret
movsb
jae
cmp
movl
mov
push
xor
cltd
mov
add
out
pushw
mov
in
inc
mov
adc
mov
sbb
shlb
test
rcll
pop
bound
jg
jns
repnz
push
and
hlt
adc
stos
mov
pop
pop
xor
jle
imul
mov
adc
push
fwait
xor
inc
jg
scas
jge
lret
xlat
outsb
mov
dec
xor
bound
pop
sub
push
jns
testl
outsb
pusha
adc
push
pop
mov
sub
sahf
mov
outsl
in
fstl
data16
or
xor
out
clc
pop
and
cmp
in
jl
inc
fmuls
dec
fstps
aaa
out
punpckhdq
sbb
pop
jns
pop
pop
and
pop
lds
enter
or
das
and
dec
mov
jnp
and
xor
fimull
insb
inc
loop
or
rcrl
ja
mov
sahf
xor
notb
push
cmp
outsb
test
loop,pt
cmpsb
inc
cltd
cmp
pop
sub
clc
inc
dec
xchg
aaa
dec
hlt
sbb
jge
int3
jmp
xchg
mov
mov
jmp
mov
ss
push
call
or
push
lret
ror
imulb
inc
rcrl
mov
int3
sub
sub
lret
fnstenv
icebp
cmp
pop
lret
loop
test
clc
sbb
out
jg
shrb
out
jmp
int
in
cmp
xchg
out
or
sub
loope
lds
in
sarb
add
movsb
aaa
jmp
push
cmp
mov
sbb
inc
mov
cli
cmpsl
mov
fildll
rcll
jbe
enter
roll
sbb
addr16
lds
inc
adc
push
adc
popf
add
push
jl
pop
addr16
js
adc
bound
jns
push
jle
shlb
insb
std
bound
outsb
ljmp
in
aad
xchg
xchg
mov
dec
mov
push
mov
aas
das
cli
sbbb
arpl
adc
rcrl
sbb
fisttps
sub
sahf
or
iret
mov
in
inc
daa
sbb
icebp
jl
repnz
mov
pop
sbb
pop
daa
imul
lods
fs
jo
int
ror
mov
les
mov
je
lock
ret
lods
in
or
cmp
push
or
push
loopne
adc
dec
dec
cld
pusha
push
sbb
push
into
cmp
out
jg
pusha
outsb
ret
loopw
push
push
sahf
cmp
imul
popf
scas
and
je
jne
ds
fidivs
and
mov
push
nop
test
and
mov
sub
sbb
mov
imul
xor
scas
mov
ljmp
pop
cmc
sub
inc
adc
movb
mov
out
push
or
sbb
sub
int
cltd
int3
pop
mov
mov
push
xchg
into
mov
jb
aad
arpl
dec
dec
pop
movsl
les
movsb
mov
testb
xchg
pushf
mov
push
addb
cmpsl
jb
jbe
jb
sbb
sub
stos
or
movsl
ret
jmp
mov
pop
mov
pop
subb
movsl
pushf
inc
lcall
inc
fildll
hlt
ror
push
adc
fsubs
sbb
mov
nop
mov
sub
dec
clc
add
mov
jle
mov
inc
pop
push
sub
popa
shlb
fsubs
xor
cmp
lods
push
mov
inc
daa
movsb
insb
or
imul
sbb
dec
pushfw
movb
jae
add
and
lods
mov
push
shl
fstps
xor
aam
jg
add
into
adc
sub
pop
push
inc
outsl
add
pop
inc
xor
aaa
rolb
sar
cs
int
inc
mov
rcrb
sbb
xchg
test
bound
jg
stos
sbb
xor
pop
movsl
inc
jecxz
lock
sbb
xor
mov
or
or
sbb
lds
pop
fists
int
bound
sti
dec
xor
and
stc
sub
test
jae
in
fwait
sub
xchg
gs
bound
pop
jecxz
and
dec
mov
cld
andl
outsb
and
testb
and
bnd
xlat
fwait
jae
jo
int3
daa
fidivs
insb
repnz
dec
repz
push
inc
popf
clc
rolb
sbb
xor
mov
or
add
test
icebp
sub
mov
mov
ss
jae
xchg
pop
in
dec
ja
in
in
pop
or
and
out
scas
in
and
pop
xchg
fdivp
jbe
inc
jns
pop
call
sub
fistpl
sbb
pop
divl
jmp
leave
fldcw
xor
sub
lds
sbb
out
dec
in
jmp
push
dec
enter
xchg
ljmp
out
xchg
jne
xor
lahf
dec
jecxz
mov
testb
xor
and
cmpsl
into
scas
push
sub
and
mov
jns
lock
sti
xlat
std
out
jne
scas
jbe
pop
or
rcrl
icebp
movsb
scas
or
xor
push
sbb
xchg
xchg
in
or
imul
cli
mov
repnz
iret
adc
enter
je
push
xlat
jge
dec
mov
or
cmp
jle
xor
rcrl
rorl
sti
and
imul
imul
rcrb
add
repnz
inc
in
inc
scas
sub
inc
cs
imul
xchg
mov
jne
adc
pop
ds
sub
repz
loop
popf
mov
jmp
aad
adc
mov
jbe
push
mov
out
add
xchg
mov
jns
neg
cmp
jbe
adc
imul
cmovle
arpl
pop
mov
or
sub
xchg
rorb
stos
dec
and
mov
dec
mov
jno
xchg
mov
jecxz
and
mov
out
mov
jp
mull
push
mov
jns
add
xchg
shrl
bound
xor
ds
lds
les
movsl
repnz
rcll
pop
inc
pop
pop
xchg
inc
loopne
addb
lods
mov
jb
data16
sahf
rcrb
and
insb
dec
adc
jb
testb
and
das
lret
mov
sub
jbe
test
fs
pop
mov
ret
jp
cmpsl
in
fs
movsb
mov
mov
std
ss
xor
fistl
rcll
ljmp
push
mov
fdiv
mov
xchg
xchg
pushf
out
dec
inc
popf
mov
cmp
stos
xor
sbb
push
cmp
lahf
mov
out
outsl
test
addr16
data16
imul
imulb
jg
pop
jnp
push
push
les
icebp
popf
nop
add
push
pop
jecxz
cmp
outsl
add
out
mov
push
cltd
movsl
iret
je
dec
div
or
lea
inc
xchg
adc
pop
lcall
cmpsb
push
lahf
mov
sbb
movsb
repz
push
lds
sbb
mov
dec
cmp
cld
push
mov
and
rorb
mov
out
gs
cld
stos
dec
sbb
adc
enter
lock
adc
pop
inc
in
test
xchg
movsb
cmc
rcr
mov
sub
sar
insl
int
cmc
and
mov
mov
aas
mov
scas
lods
fsts
insl
daa
cmp
pop
sbb
dec
lock
js
es
jnp
mov
push
push
mov
add
repz
stos
xor
add
mov
mov
jne
mov
xor
filds
mov
jp
out
dec
cmc
lcall
ret
and
stc
ficoms
pop
and
shlb
jmp
mov
ss
jne
test
or
inc
xchg
jnp
push
pushf
fnstenv
movsl
cmpb
push
test
aam
xor
subl
mov
repz
mov
pop
orl
dec
push
aam
pop
pushf
outsl
mov
cmp
arpl
cmpsb
mov
xchg
add
mov
xchg
push
mov
mov
adcb
jp
sbb
movsb
sub
jle
loope
test
pop
inc
xchg
js
push
cld
ret
aad
cmp
rorb
fadd
ljmp
enter
add
out
jo
ror
and
imul
test
ljmp
fs
adc
jae
bound
scas
enter
test
addr16
fnstcw
mov
repz
xor
jb
insl
nop
sbb
xor
pop
push
jo
imul
pop
lea
in
call
mov
sbb
aad
adc
push
cmc
push
daa
lsl
mov
xor
mov
mov
mov
popf
js
int3
les
call
leave
fdivrs
xchg
mov
dec
jl
stc
ficoms
jl
sbb
sbb
testb
push
sub
popf
dec
cmp
iret
jmp
test
or
dec
cmpsl
xchg
rclb
es
xchg
shrl
adc
jle
jne
sub
jge
outsl
xor
push
rcrl
fldenv
xor
aad
es
push
xorl
mov
sbb
sub
int3
rcll
out
or
xchg
movsl
add
fidivrl
repz
push
movsb
cmp
test
xor
mov
xor
lahf
test
cmpl
mov
movsb
dec
mov
jp
mov
rcll
sbb
outsb
pop
cld
pushl
and
inc
cmp
lret
jno
or
adc
jno
push
cmpsb
or
mov
in
push
in
xor
push
in
pop
popa
pop
out
data16
add
cltd
aad
call
add
cmpsl
jo
mov
add
pushf
test
incl
xchg
out
nop
inc
js
jp
xor
or
fidivrs
cwtl
and
push
aaa
shll
xchg
sbbb
rol
cmpsl
into
popa
pop
sub
pop
inc
adc
nop
sbb
pop
sub
mov
ljmp
popf
mov
or
mov
add
sub
pop
shll
cmp
pop
gs
push
add
popf
sbb
adc
mov
mov
pushf
arpl
pushf
sbb
cmp
mov
push
out
addl
jbe
add
shrb
lock
xor
jmp
pop
mov
fucom
enter
lock
lods
test
mulb
mov
out
aaa
movsb
idivl
mov
lea
popf
xor
fcmovnbe
les
movsl
cmp
cmpl
push
adcb
mov
dec
fdiv
addr16
xchg
mov
ret
sbbl
push
mov
push
ljmp
dec
scas
fcoml
fistpl
pop
in
fdivrs
out
in
cmp
fidivrl
or
rol
das
outsl
cmp
mov
aam
mov
jecxz
cmpsl
pop
stos
xchg
adc
inc
cld
lret
jmp
mov
dec
pusha
insb
mulps
mov
fld
xor
or
mov
ds
mov
or
in
aaa
es
push
push
mov
out
mov
sahf
xor
jns
bound
sub
jne
imul
lret
lock
ficomps
or
add
sub
jnp
mov
fcmovne
loop
add
test
jnp
cmc
and
xchg
bound
lock
inc
mov
inc
cmp
mov
aaa
cmp
push
outsl
in
hlt
or
into
pop
lret
cwtl
mov
fsqrt
andb
lret
in
lcall
daa
xorl
mov
nop
lret
cmp
fucomp
bound
aaa
xchg
mov
movb
lds
push
and
ja
push
xchg
pushf
fimull
add
sub
adc
fiadds
xor
pop
xlat
hlt
xchg
jb
sub
in
out
stos
stc
ret
and
adc
popa
mov
add
hlt
jne
pop
xchg
test
hlt
test
fucom
in
mov
adcb
sti
dec
sbb
xchg
or
dec
mov
mov
cs
sub
sti
adc
push
xchg
mov
mov
mov
pand
sbb
in
das
divl
sub
xor
mov
mov
pop
inc
in
shl
ss
call
xor
sub
les
outsl
pop
cmpsb
push
rclb
add
dec
xlat
sar
jno
add
push
push
jp
sub
rol
inc
mov
jb
mov
cld
out
cltd
pop
xchg
loop
cmp
mov
negb
lcall
add
fs
sahf
ds
jl
jp
ja
movsl
add
aad
and
int3
popa
mov
cmpsb
daa
mov
sub
aaa
movsl
iret
je
mov
push
mov
int3
stc
mov
jg
mov
loope
add
test
int
gs
int
roll
jne
or
pop
jae
icebp
insb
in
inc
inc
lahf
pop
mov
addr16
hlt
in
mov
out
dec
add
mov
mov
stos
je
xchg
mov
adc
lret
mov
cld
call
pop
mov
cmp
lahf
mov
fwait
out
add
push
cmc
lock
js
jl
rcrl
mov
mov
mov
adc
lods
lret
test
push
pusha
cld
cs
push
aad
adc
jge
add
mov
or
xor
cmpsl
add
xor
sbb
in
xchg
or
cmp
jbe
fsubr
xchg
or
push
xor
pop
sbb
or
sub
fucomp
cs
cwtl
ror
mov
mov
jno
in
dec
fsubrl
sub
xor
mov
push
inc
mov
jg
cmp
cs
hlt
loope
aaa
call
xchg
cmp
test
mov
int3
gs
test
push
sub
fcompl
xchg
clc
aaa
adc
pop
and
ss
cs
mov
scas
pop
stc
xor
pop
add
ljmp
pop
push
fsubrl
sbb
fadds
pushf
dec
es
xchg
pop
mov
mov
popf
imul
push
mov
jnp
inc
or
cs
sbbb
xor
lods
fstp
xor
pop
mov
lret
shlb
xor
pop
mov
aaa
popf
mov
bnd
sub
or
mov
mov
add
in
stc
xor
xchg
inc
ds
scas
pop
leave
iret
cmpsb
cmpsb
lods
and
jns
sarb
push
push
into
fidivrs
mov
jmp
cmp
xor
cltd
lcall
cmpsb
xor
sub
lods
sbb
clc
hlt
sti
incb
aad
test
inc
pop
xchg
lahf
lret
mov
sbb
jbe
add
mov
nop
mov
adc
int
call
fisubs
sbb
outsl
jnp
insb
sub
test
lods
in
push
test
mov
loopne
mov
push
lea
mov
mov
es
stc
nop
test
in
or
aas
shll
pop
out
pop
inc
pop
push
ret
aas
xorl
addb
inc
arpl
sub
jge
pop
fldln2
xor
push
leave
adc
aas
ficoml
mov
pop
rep
ficomps
sub
inc
lods
mov
push
orl
pop
imul
sub
pop
sbb
sub
stos
lret
jno
and
int
jmp
cmpl
inc
xlat
lds
cmpsb
push
loopne
adc
lds
xchg
das
sub
xor
ja
lret
push
cmp
repz
in
aad
inc
sub
addr16
pop
jecxz
sub
add
mov
push
jl
jecxz
jbe
cmp
push
stos
lds
jg
push
adc
fisttpl
lahf
gs
aas
sub
call
addr16
test
insl
mov
adc
icebp
lea
push
sub
push
mov
das
push
push
ds
stc
pop
jnp
lcall
cltd
cs
int3
or
nop
mov
incb
or
hlt
inc
std
jbe
xchg
jbe
jge
fldl
mov
adc
mov
dec
dec
cmp
nop
test
hlt
pusha
adc
inc
cld
jge
add
sub
icebp
push
cltd
arpl
or
dec
dec
adc
outsl
aam
pop
cmp
push
enter
push
leave
and
cmc
adc
mov
icebp
cli
sarb
std
das
shrb
out
pop
clts
inc
xor
subl
xor
jmp
dec
and
sbb
sbb
cmpsb
outsb
scas
dec
cmpb
jp
scas
fs
jecxz
popf
loope
jns
jl
popa
mov
push
mov
movsb
inc
sub
push
lods
mov
and
das
mov
insb
lcall
fcmovu
mov
jp
mov
inc
xchg
outsb
inc
lret
fisttpl
mov
mov
mov
jae
in
jl
inc
inc
xchg
bnd
or
xchg
jecxz
or
popa
mov
push
adc
jmp
lods
or
and
fnstsw
adc
inc
pop
pop
faddp
mov
and
dec
pop
sbb
das
rolb
out
arpl
data16
cmp
add
lret
stos
xor
roll
repz
mov
add
lods
xchg
pop
dec
jle
lods
ja
int3
xlat
stos
cwtl
xchg
jl
scas
les
scas
dec
daa
adc
mov
les
mov
out
mov
aaa
mov
shlb
jmp
lahf
mov
pop
mov
jmp
pop
xchg
int3
xchg
pop
or
addl
mov
loopne
fldl
popa
mov
std
pop
pushf
sti
xlat
add
call
inc
xchg
les
xchg
into
xchg
xchg
fmull
je
leave
sbb
insl
lahf
shll
jl
pop
leave
dec
aad
roll
mov
mov
roll
push
stc
sbb
mov
data16
mov
les
loop
adc
or
mov
and
int3
push
add
jnp
dec
push
dec
dec
adc
clc
add
pop
jmp
int
es
sub
or
dec
mov
or
fisttpll
mov
dec
adc
push
daa
or
pop
rcll
outsl
xor
pushf
mov
push
pop
les
adc
add
mov
icebp
fwait
outsb
xchg
push
pop
lcall
push
and
pop
int3
stos
mov
xor
adc
popf
mov
inc
xchg
loope
fimull
ja
jl
imul
xchg
sti
add
inc
mov
dec
xchg
mov
dec
mov
cmp
mov
sub
add
gs
rorb
xchg
lea
ja
xchg
cld
lcall
sbb
mov
sbb
jbe
mov
push
adc
les
sarb
ja
or
xor
outsl
pusha
jb
cmp
pop
pop
or
cmp
jb
std
xchg
jl
xchg
mov
test
gs
movsb
xor
fidivl
arpl
jno,pt
push
push
sbb
cmp
lcall
mul
loope
jns
dec
out
daa
xchg
cmpsb
cmp
pop
in
sub
je
xor
jo
cmp
cmpsb
inc
out
push
jge
push
push
lods
popf
jmp
jl
sbb
in
ret
mov
addb
jmp
movsl
in
fadds
push
into
inc
and
mov
fs
repnz
test
dec
dec
mov
mov
adc
jecxz
ret
fwait
rclb
hlt
and
sub
loope
push
cmp
mov
aaa
mov
or
lcall
pop
or
mov
push
and
xchg
inc
xor
jae
or
dec
or
in
fwait
fs
in
mov
icebp
sbb
sub
das
fmuls
xorb
mov
push
addb
mov
cmp
jbe
mov
mov
dec
cmp
xor
and
push
mov
inc
sub
movsl
les
pop
data16
inc
mov
insb
leave
inc
insb
and
mov
shrb
pop
dec
mov
fcmovne
and
adc
adc
fcomip
mov
out
and
inc
outsb
lds
rorb
mov
lea
xchg
and
mov
push
push
and
mov
mov
lret
ficoms
sub
jl
negb
sti
in
mov
mov
out
adc
sub
lahf
pop
mov
scas
and
mov
scas
jbe
sbb
in
mov
or
dec
pop
sbb
lea
out
mov
jns
dec
jns
pop
cmpsb
mov
repz
jno
mov
mov
cmpsl
dec
in
sti
sti
cli
ret
sbbb
mov
dec
mov
ret
add
mov
pop
insb
or
fsubrs
test
filds
test
cltd
fsubr
mov
xchg
pop
cld
iret
pushf
xor
rcr
movsb
fisttpl
mov
imul
push
in
out
in
mov
js
fldcw
mov
mov
daa
sahf
dec
fsubrl
cli
dec
sbb
negb
add
mov
or
loopne
xchg
sub
jp
test
test
jns
popa
rclb
jb
ljmp
pop
jnp
add
cmpsb
mov
outsb
arpl
inc
xchg
outsb
in
sub
ja
mov
push
arpl
push
jae
negl
mov
fidivrs
test
mov
ljmp
jne
push
cmp
pop
out
add
mov
xlat
mov
and
mov
lods
gs
mov
sub
insl
pusha
imul
mov
fisubl
in
into
mov
cmp
lea
mov
cmpsl
aad
mull
or
jmp
fstpt
or
add
test
adc
cmp
sbb
cli
testb
loope
shlb
and
add
cmp
or
test
movsb
movsb
xchg
lds
pop
leave
jno
jnp
test
imul
test
fiaddl
in
rclb
sbb
sub
dec
jge
pop
mov
xor
mov
lds
loope
pop
fwait
xor
in
adc
sbb
out
push
mov
mov
fistpl
or
xchg
add
stc
es
cltd
mov
pop
mov
jecxz
mov
mov
inc
cltd
jnp
and
xor
mov
and
xchg
je
sbb
inc
int3
push
lock
add
lds
cmpsb
rolb
dec
pop
out
loope
pop
and
mov
aad
fldcw
sbb
add
sarb
mov
icebp
pop
adc
in
sub
iret
mov
lret
cmp
push
test
test
mov
push
mov
data16
add
nop
pop
sub
pop
adc
and
xlat
push
imul
push
dec
sub
call
push
and
mov
xchg
push
mov
mov
xchg
push
ljmp
rorb
jnp
lret
add
sub
mov
fidivrl
out
nop
xlat
shrb
sub
nop
inc
jnp
insl
xor
rcrl
cld
jbe
cmpsb
cmp
xchg
xchg
into
iret
and
pop
jne
jns
jmp
mov
mov
adc
fistl
jno
mov
adc
jecxz
mov
xchg
jg
xchg
sbb
and
into
pop
ja
dec
aas
xchg
pop
adc
jge
fadd
clc
mov
mov
cmc
mov
mov
or
aas
jecxz
xchg
mov
xor
xchg
into
sbbl
adc
cmpsl
xchg
sub
adc
bound
push
pop
call
cwtl
mov
add
add
jg
mov
fnstenv
in
int
ljmpw
out
jmp
imul
mov
roll
adcb
sbbl
pop
lret
dec
adc
adc
imull
or
inc
aam
sub
jb
cmp
or
or
cmp
lds
xor
xchg
outsb
xor
arpl
sbb
pop
inc
fmuls
xchg
sub
pushf
iret
in
call
mov
test
sub
mov
mov
popf
dec
pop
mov
addr16
sub
bound
xchg
insb
or
sets
xor
mov
or
inc
ds
sub
lods
leave
sbbb
sbb
mov
fists
and
sarb
es
lret
dec
pop
subb
mov
sub
cmp
inc
popf
stos
out
xlat
push
hlt
stc
int
push
in
test
mov
mov
sub
push
mov
xor
int3
fsubl
lret
dec
dec
sbb
icebp
out
test
mov
push
mov
clc
inc
call
inc
fadds
mov
push
sti
jnp,pt
std
add
sub
cmpsb
xchg
xor
fdiv
lret
sub
mov
dec
sarl
ficomps
movsl
out
roll
fistps
xchg
or
pop
cmp
rsqrtps
mov
sub
dec
fcoml
cld
xchg
pop
bound
xor
insb
pusha
pop
loope
sti
lcall
jg
jns
and
xchg
pushw
xor
cmp
adc
jnp
in
inc
loopne
leave
or
jae
lock
or
mov
test
icebp
jno
inc
mov
adc
push
ja
inc
ljmp
cli
xor
sub
xor
mov
inc
push
insb
inc
jle
pushf
xchg
or
xchg
lea
notl
rcrb
es
xchg
push
iret
into
mov
or
xor
jns
cmp
mov
add
sbb
loopne
pop
popf
loope
out
mov
add
pop
dec
add
outsl
rclb
mov
stc
addr16
jecxz
shrb
call
daa
xor
and
pusha
mov
mov
sub
or
aas
sahf
test
mov
cmpsb
int3
and
pusha
pop
lret
mov
sub
xchg
mov
sbb
fcoms
xchg
or
mov
or
iret
into
icebp
pop
loopne
push
and
push
xchg
or
daa
mov
daa
mov
push
popf
jle
mov
xor
out
arpl
int
sub
cmp
cmp
xchg
mov
and
fdivl
and
push
add
shlb
sub
and
cmp
and
and
xchg
mov
loop
pop
arpl
mov
and
mov
adc
xchg
popf
int3
fbstp
cld
sahf
sub
mov
lds
push
repz
xor
jo
cli
push
jnp
stc
xor
mov
jnp
mov
push
popa
in
xor
sbb
insb
jns
add
pusha
and
divl
dec
cltd
mov
mov
outsl
push
call
cmp
sub
movsb
fimuls
pop
sbb
and
movsl
pop
push
xchg
push
insb
dec
mov
pop
cmpsl
lock
push
jge
xchg
xchg
pop
push
or
dec
and
adc
and
adc
out
push
fidivrl
ja
repnz
adc
sub
inc
in
jbe
dec
xchg
mov
pop
in
stos
inc
outsl
pop
jo
iret
push
jbe
pop
shrb
sbb
or
rcl
jbe
cmp
ljmp
jns
clc
mov
mov
dec
ret
or
movsl
stos
fidivrs
inc
pop
rorb
in
cmp
xchg
adcl
pop
inc
xor
scas
cwtl
cmp
or
nop
add
jp
inc
cmpsb
mov
push
pop
jne
sub
or
into
data16
xor
dec
xchg
es
repnz
mov
aas
add
pop
iret
and
lock
js
popa
inc
xor
loope
sarl
jbe
lods
jnp
mov
push
pop
pop
imulb
push
cltd
pusha
jecxz
dec
push
ficomps
inc
in
mov
fsubrs
push
std
mov
icebp
dec
push
jmp
sarb
daa
movsl
push
lcallw
push
push
mov
scas
inc
in
xchg
mov
popa
sub
leave
pmaxsw
adc
insl
push
adc
outsl
cwtl
iret
lcall
adc
pop
out
xor
pop
outsl
iret
outsb
dec
test
sub
mov
mov
fadds
cmpsb
adc
jmp
mov
fstpl
inc
mov
cmp
push
sbb
scas
mov
cmc
popa
mov
add
lcall
xor
inc
ss
ljmp
mov
mov
fimull
push
ja
xor
sbb
pop
lcall
add
pxor
int
fadds
subl
cltd
push
pop
fcom
nop
mov
pop
ret
jecxz
addr16
repz
xchg
jae
test
pop
push
andl
fnclex
je
insb
jno
loopne
shrl
or
add
push
ret
jg
jge
int
dec
arpl
sbb
push
mov
out
js
and
jns
je
adc
xchg
sbb
jecxz
rcll
int
pop
adc
mov
pop
popf
cmp
fstl
xchg
jg
adc
fstps
test
or
insl
loope
adc
mov
mov
repz
inc
dec
repnz
out
dec
lahf
fwait
mov
xor
mov
fistps
ss
stc
mov
test
inc
test
xor
mov
fmull
xchg
cmp
fiaddl
cmp
mov
push
ret
jecxz
or
scas
and
fdiv
sbb
cwtl
orl
movsl
aas
hlt
inc
mov
adc
or
les
pop
fsubs
outsl
divl
jns
inc
rolb
mov
rolb
cmp
jo
and
fcomps
into
jecxz
sbb
insl
mov
lock
jbe
loope
fs
push
clc
cs
fwait
inc
arpl
push
pusha
negl
nop
xor
std
cmp
imul
lahf
mov
add
test
dec
pop
ret
ljmp
ss
xchg
dec
sbb
adc
insl
jmp
push
call
test
inc
mov
mov
pop
jnp
sbb
mov
mov
mov
xor
lcall
xor
mov
das
insb
mov
andb
adc
mov
jo
jmp
fstpt
jns
push
jne
test
loopne
sbb
push
push
div
mov
or
rcll
xchg
lds
mov
pop
pop
xchg
push
adc
mov
mov
cmpsb
add
int
imull
arpl
push
pop
xor
imulb
cmpsl
mov
ss
push
setne
lcall
pop
repnz
sub
and
cltd
push
psrad
dec
add
out
jnp
sub
cmp
and
imul
out
lret
inc
enter
jle
in
dec
movsl
icebp
outsb
push
jno
jo
cli
nop
inc
and
ficoml
int3
jno
dec
add
adc
mov
pop
mov
adcl
filds
xchg
gs
andl
popf
pop
cld
imul
pop
aam
pop
and
mov
lock
add
testl
subb
xlat
mov
xorb
push
clc
repnz
dec
xchg
loope
mov
xchg
insb
cs
cmp
lcall
fs
fwait
rcrb
cmpsl
pop
sbb
scas
fistpll
daa
fdivp
push
or
cmpsl
imul
ss
in
or
test
pop
xchg
data16
in
nop
leave
xor
ljmp
xor
sbb
dec
add
add
test
popa
rcr
pop
and
pop
in
jno
es
adcl
in
lea
call
sbb
add
stc
inc
push
cmc
in
push
pop
iret
xchg
stc
sbb
sbbl
mov
adc
adc
xlat
mov
fnstsw
jl
rcrb
mov
inc
lret
scas
daa
xchg
arpl
cli
inc
sbbl
pop
xchg
push
sarl
pop
loope
sub
add
add
push
adc
inc
sub
or
sub
shrb
les
les
xchg
pop
pop
inc
sbb
in
int3
cmpsb
iret
and
imul
mov
sbb
orb
cmpsb
push
mov
stos
imul
and
leave
sti
loopne
fistps
loop
mov
mov
and
jb
arpl
and
add
cmp
jl
jne
lods
out
dec
xor
cmp
xchg
movsl
sbb
gs
ljmp
shrb
ret
sub
sub
shl
dec
cwtl
hlt
into
ljmp
push
popa
mov
out
and
xor
cmpsb
cld
sub
mov
test
inc
pop
pop
push
jns
inc
gs
dec
and
loope
into
add
jb
push
orl
loop
or
inc
sub
mov
mov
int3
fcomip
pop
scas
or
insl
xor
scas
lcall
dec
sbb
mov
pushf
dec
inc
xor
das
fcoms
fists
inc
es
into
fcmovnu
sbb
add
mov
scas
or
hlt
pusha
aam
ds
lcall
popfw
in
iret
lret
jne
mov
xchg
fstps
xchg
es
or
fnstsw
sbb
imul
call
add
xor
lret
sarb
xor
or
mov
cltd
stc
inc
insl
and
and
out
insb
pusha
lret
shlb
mov
test
bound
inc
pop
enter
push
jl
or
pop
loopne
ret
jns
inc
or
mov
mov
ss
pop
sub
mov
pop
jle
push
in
je
test
repz
dec
jg
dec
or
mov
sub
daa
mov
call
sbb
imul
jbe
add
adc
jno
dec
std
ss
jp
imul
xchg
add
push
jnp
fnstsw
or
xchg
popl
mov
ja
cmc
mov
lods
jne
xchg
ljmp
inc
mov
in
or
dec
popa
les
or
lock
dec
nop
dec
jmp
sbb
mov
pop
out
add
repz
and
mov
ja
lea
cld
das
push
loopne
add
ss
mov
icebp
inc
jmp
imul
stc
adc
loop
xor
mov
dec
add
mov
test
xor
fadds
inc
xchg
jmp
sub
lds
test
dec
mov
ret
mov
mov
pop
mov
test
leave
aad
data16
or
add
mov
test
icebp
mov
std
wrmsr
add
dec
fstpt
push
fs
and
cmpsb
dec
sbb
mov
enter
cmp
pushf
mov
das
repz
push
adcb
lods
add
push
mov
inc
adc
pop
mov
cltd
lret
mov
sub
scas
loope
lret
push
popa
fcomps
popf
jo
dec
push
cmp
xchg
xor
mov
shr
outsb
pop
test
sub
and
sbb
cmp
and
or
arpl
cmp
pop
fcomps
xor
imul
outsb
lods
mov
xchg
push
fldl
jne
sbb
sarb
pop
leave
outsl
add
cmpsl
jmp
push
dec
sbb
dec
jle
inc
hlt
mov
inc
jno
int
shlb
hlt
ret
mov
subb
popf
aaa
push
jmp
leave
xchg
scas
pushf
sub
xor
mov
lock
popa
jb
js
dec
iret
adc
stc
rorb
pop
sti
movsl
dec
pop
push
cltd
jmp
ss
sbb
cwtl
ret
sub
cli
pushl
jns
mov
cmc
sub
adc
and
daa
adc
fistpl
pusha
insl
imul
rolb
jle
adc
das
arpl
aad
scas
mov
aaa
mov
leave
push
cmpsb
iret
fdivl
test
adc
mov
scas
aam
iret
and
push
dec
ffree
stos
jns
out
inc
ja,pn
xchg
iret
out
mov
jno
js
lcall
lret
ss
cld
dec
dec
pop
fs
mov
mov
xchg
mov
fnstsw
push
jae
ret
pop
dec
mov
popa
in
loope
sbb
dec
leave
fs
jl
rol
cltd
idivb
lret
jge
push
jb
insl
movsl
test
sbb
mov
dec
pop
mov
stc
sub
out
mov
pop
jns
sbb
jl
aaa
ds
add
fs
adc
sbb
clc
fwait
push
push
fadds
add
jo
outsl
hlt
mov
cmpsb
adc
int3
jmp
hlt
mov
or
insl
loope
push
psllq
mov
ss
rorl
iret
sub
mov
psubusb
cmpb
test
or
pop
hlt
inc
xchg
mov
addr16
outsb
mov
add
push
push
mov
xlat
fucomi
rcrb
movb
push
pop
sbb
notb
cmp
sbb
mov
xor
add
rolb
dec
scas
add
clc
push
out
pop
push
cmp
lds
pop
orb
lock
sub
sbb
cmp
outsl
adc
xchg
push
in
xchg
xchg
mov
aam
push
int3
dec
mov
test
das
leave
jmp
in
insb
sarl
and
lods
shrl
xchg
push
fmull
jecxz
out
push
leave
stc
cmpsb
sbb
shrb
and
andl
pushf
and
push
jno
push
xchg
inc
pop
inc
mov
xor
pop
and
sbb
test
rcr
pop
dec
popa
popf
imul
pop
jmp
outsl
mov
push
call
scas
ret
rol
arpl
xchg
add
bound
sbb
pop
pushf
clc
pushf
insl
inc
inc
dec
sarb
mov
ret
subl
imul
lahf
and
test
mov
ss
inc
push
sbbl
jp
dec
fnsetpm(287
cmpsb
cmp
push
or
pop
add
and
adc
jno
aaa
lret
push
pop
aad
loopne
lcall
mov
xchg
enter
clc
pop
adc
stc
lahf
pop
mov
inc
jns
movsl
clc
cltd
dec
mov
bound
sub
push
jp
test
mov
mov
mov
inc
repz
dec
es
jae
mov
push
push
and
mov
push
sbb
out
lea
and
jne
imul
js
and
add
dec
out
push
sahf
add
mov
sar
mov
pop
clc
pop
mov
dec
jno
sub
and
xor
push
loopne
in
scas
pushf
lds
adc
adcl
sub
sbb
shll
pop
dec
fwait
aad
mov
test
jnp
cmp
mov
jb
cmp
adc
adc
test
enter
out
in
addr16
aad
inc
outsb
sub
push
jmp
fldl
ljmp
addr16
jle
cmp
add
call
cltd
pop
push
and
out
fwait
test
add
mov
movsl
ret
xchg
cwtl
xchg
mov
cmc
movsb
jo
inc
out
xor
scas
dec
fs
push
xor
movsl
mov
ljmp
sbb
hlt
ss
push
jge
movsl
in
xor
jge
inc
cmp
addr16
xlat
pushf
pop
mov
jno
in
add
jae
sbb
aas
push
sbb
fdivrl
test
cmp
dec
icebp
frstor
mov
dec
push
movsb
les
push
add
test
mov
mov
adc
scas
cli
pop
sub
jnp
mov
adc
test
mov
inc
xlat
sbb
xor
sarl
dec
imul
aam
stos
dec
out
dec
push
std
out
hlt
in
inc
bound
dec
incl
scas
call
mov
ds
data16
dec
jmp
jmp
test
jo
mov
notb
lret
pop
scas
lock
stos
pop
sbb
lret
xchg
stc
js,pt
js
sbb
pop
jecxz
push
insl
dec
pop
sbb
sbb
push
scas
dec
aam
nop
ret
mov
loopne
cmpsb
lret
dec
mov
cmp
dec
pop
aas
leave
mov
pop
je
rorl
aam
sbb
add
loopne
inc
shl
xchg
loope
rcrl
and
and
cmp
lock
xchg
pop
mov
jae
imul
fidivrl
loope
jnp
rorl
scas
or
out
loope
ret
pop
data16
pop
mov
adc
testl
or
addl
pushf
les
push
cmpsl
dec
push
fs
repnz
ret
xor
jno
insl
cmpsl
mov
sbb
push
or
or
xchg
loopne
scas
iret
mov
jl
mov
in
pop
enter
subb
in
out
js
adc
mov
stc
sbb
mov
pop
jecxz
in
push
rorb
pop
mov
xchg
mov
push
mov
sub
into
std
add
in
xlat
dec
icebp
cmpsb
xor
xchg
popf
sub
loopne
lea
dec
imul
fnstenv
idiv
mov
leave
jl
mov
out
push
in
push
jle
pushf
loopne
imul
movsl
arpl
sbb
mov
test
lds
outsl
jg
or
dec
jbe
es
fs
xchg
lock
les
bound
pop
dec
mov
lds
cmpsb
mov
and
jge
mov
mov
add
into
lcall
mov
addps
outsb
and
ret
mov
into
mov
aam
pop
aaa
test
cmp
sbb
cmp
int3
cwtl
rcrl
cmp
std
sub
mov
sub
xor
pop
fstl
dec
cmc
sub
pop
cltd
mov
adc
mov
test
fisttps
popa
jb
out
mov
lret
aas
cmpb
and
xchg
xchg
inc
mov
adc
gs
and
sub
stos
arpl
xor
loopne
cld
pop
mov
mov
sti
pop
fistpll
sbb
sub
cmp
mov
add
out
scas
popa
lock
jmp
inc
test
call
popl
dec
cld
dec
les
cmc
and
jo
jne
push
lea
mov
mov
sub
mov
pushf
mov
stos
push
fwait
cli
insl
hlt
out
addl
movsb
pop
movsl
adc
inc
ret
addl
cmpsb
mov
pop
jg
movsl
in
repz
fnstenv
pop
scas
idivl
daa
sbb
pop
and
mov
insb
outsl
push
adc
aam
aaa
add
call
gs
jmp
pop
pop
inc
shlb
aam
cmp
mov
shrl
fwait
add
xor
fs
lret
fmul
ja
jns
mov
sbb
es
enter
mov
movsb
sub
mov
js
sbb
sbb
int3
mov
icebp
into
adc
aas
xchg
push
sub
dec
repz
dec
sub
decl
and
inc
mov
xchg
push
dec
fldl
cltd
sub
imull
push
dec
mov
and
pop
push
das
fstl
mov
shl
lea
mov
out
mov
repz
mov
sbb
or
outsb
bnd
sbb
adc
insl
push
ss
bound
scas
sub
dec
xchg
mov
lcall
mov
add
scas
fisubrl
cli
jbe
xchg
movsl
pop
pop
xor
jb
add
mov
pop
jg
ret
lods
xor
cltd
jne
xor
std
mov
inc
popf
stos
mov
nop
insl
sub
ss
imul
xlat
push
xor
mov
or
dec
jg
mov
xor
jo
sub
enter
jmp
mov
fldcw
sbb
jecxz
cmp
insl
arpl
and
jbe
inc
cmp
jo
pop
mov
inc
out
fs
subb
lock
stc
mov
out
xchg
mov
aad
out
push
out
shll
lcall
cwtl
cmp
sti
andb
insb
hlt
lcall
lods
nop
into
sub
jnp
insb
gs
sbb
cltd
xchg
dec
int
push
mov
and
orl
ret
inc
xchg
cmpsl
push
lahf
or
mov
je
out
out
fisubrs
mov
inc
cmc
jae
pop
or
scas
xchg
fstl
mov
loope
pop
rcrl
bound
push
sahf
sahf
lods
in
dec
xchg
popa
cmpsb
jle
scas
cld
sahf
rolb
mov
call
loop
push
or
ljmp
mov
mov
test
ss
loop
fadds
test
gs
add
sbb
inc
sbb
mov
testl
mov
jl
fstps
shr
add
add
xor
xchg
fs
stos
repz
mov
inc
call
stos
iret
repz
cs
lcall
mov
jmp
mov
lret
or
mov
add
sub
push
fcmovb
adc
call
xchg
lret
jl
jbe
in
cmpsb
in
mov
xor
ret
push
or
mov
and
cmp
into
into
mov
les
pop
xchg
jne
push
or
cmp
subl
cmp
jge
add
leave
xchg
stc
push
popa
mov
sbb
xchg
xor
popa
out
sbb
je
call
mov
xor
adc
mov
int3
adcb
adc
nop
and
cmp
mov
xor
jno
jecxz
xor
test
jmp
xchg
fsubrs
fistps
insb
lds
sbb
jne
mov
adc
jbe
and
pop
mov
sub
push
and
arpl
push
lret
jb
mov
jae
add
xchg
leave
mov
xchg
dec
fidivl
stos
cmpsb
xchg
leave
inc
rcrl
ficompl
fldt
test
fs
es
ja
out
dec
xchg
mov
cli
pop
push
push
push
xchg
cltd
sbb
mov
adc
outsb
test
sbbl
out
sbb
test
leave
dec
sbb
mov
or
call
cmc
icebp
add
aad
rcrb
jne
push
sarl
cli
mov
mov
dec
cmp
fimuls
dec
rcr
sbb
mov
clc
xor
rclb
sbb
orb
mov
add
push
lret
push
mov
xor
fcomps
push
sbb
inc
mov
fsubs
movsb
mov
and
out
jo
mov
pop
repz
xor
push
push
cwtl
adc
cs
xchg
sub
sub
mov
lret
lret
outsl
fisttpll
ljmp
jp
inc
and
mov
stc
stos
xor
in
jg
adc
pop
nop
mov
pop
and
mul
shl
inc
sti
xor
sub
clc
rolb
nop
mov
shlb
pop
push
or
sbb
add
imul
incb
out
xchg
cli
dec
push
cmp
xchg
xchg
fninit
cmpsb
lods
mov
lods
pushf
lods
mov
divb
xor
fbld
xor
push
iret
mov
repz
movsb
in
stos
mov
outsb
daa
cli
jle
mov
push
popf
popf
cmpsl
mov
jl
jle
xchg
mov
push
sbb
dec
stos
in
inc
xor
iret
dec
aam
es
stc
cli
mov
fwait
and
mov
cmp
sub
sub
out
lcall
frstor
lods
sub
gs
push
fs
xor
sbb
leave
inc
pop
fwait
int
and
sbb
loope
sub
lret
daa
and
out
push
lcall
pusha
adc
and
insl
call
out
mov
imul
movl
or
ja
pop
mov
inc
jbe
xchg
out
xchg
cs
cltd
jge
iret
mov
mov
sub
mov
pop
fcoml
jle
das
adc
sbb
mov
cmp
cwtl
filds
mov
fidivs
fdivs
shrb
or
iret
insb
in
ret
push
arpl
iret
pop
rol
mov
cmp
adc
mov
cmp
data16
mov
std
mov
inc
or
iret
or
mov
inc
mov
mov
test
cmp
jno
pop
jae
test
ljmp
dec
sub
shl
ja
imul
jae
push
push
das
jno
mov
andl
outsb
sbb
sub
iret
test
xchg
mov
jne
xchg
sbb
cmc
pop
mov
mov
pop
into
pop
shll
les
scas
jns
jae
and
add
pop
insb
js
mov
sub
pop
cmp
aas
das
mov
imul
xchg
movsl
jmp
jae
lea
fsubrs
ds
pop
sbb
int
and
dec
call
mov
into
faddp
fstl
imul
outsb
sub
notb
adc
inc
lret
jg
out
movsl
cmp
loopne
xor
add
scas
icebp
jmp
inc
stos
orl
jno
pop
mov
xchg
sub
fiaddl
das
icebp
or
lret
mov
cld
mov
outsb
popa
notl
dec
adc
aaa
je
xchg
test
in
sbb
jno
enter
dec
stos
xchg
xchg
aad
sub
loope
or
test
cmp
sbb
sub
xchg
inc
dec
pop
pop
fdivr
into
xlat
sbb
adc
cmpsl
rolb
or
sar
pop
inc
mov
xor
lods
lcall
mov
or
arpl
ja
roll
and
test
fstp
movsl
xor
inc
mov
push
pop
mov
mov
pop
cmpsb
sub
pop
fcmovu
fucomi
mov
lock
out
pop
and
fidivs
sub
add
in
add
out
push
lret
xchg
and
movsl
lods
jno
fstpl
mov
rcr
popa
jbe
fnsave
adc
or
adc
std
stos
mulb
cli
mov
sbb
aaa
ss
xor
xchg
inc
cwtl
je
xchg
sarl
dec
in
sbb
or
inc
test
push
add
xor
xor
push
imul
pushl
pop
push
out
lcall
loop
repnz
xor
adc
sbb
pop
mov
sbb
mov
jp
inc
adcl
or
sti
lcall
jb
xor
aas
xchg
cld
stc
adc
out
test
test
loop
mov
lods
push
ss
add
mov
mov
mov
stos
movntps
js
sbb
add
dec
pop
int
ljmp
out
sub
push
ficoms
sarl
pusha
stos
cli
jp
xor
clc
dec
xor
xlat
adc
push
inc
icebp
sub
int
fistpll
sbb
xlat
jns
pop
leave
cmp
repz
pop
dec
les
push
pop
pop
fsubr
cmp
inc
sbb
and
ss
sti
dec
add
in
stc
aas
fsts
push
fdivl
fwait
lahf
daa
sub
scas
popa
add
jns
insl
ficoms
or
mov
jl
out
insb
jecxz
jl
outsl
mov
mov
sbb
pop
insl
add
enter
add
xchg
ja
lods
dec
sbb
imul
enter
mov
or
xlat
imul
or
push
and
clc
jp
adc
adc
in
xor
insl
mov
cs
jecxz
jo
stos
nop
jmp
or
jnp
xchg
mov
outsb
dec
push
mov
cmp
fbstp
xchg
push
sub
add
cltd
test
addb
and
or
shlb
mov
cmpsb
or
ffreep
mov
int
jp
push
xchg
mov
dec
and
mov
data16
sbb
mov
je
leave
dec
xchg
cwtl
popa
dec
movsl
daa
jbe
inc
lahf
or
icebp
lods
push
orb
sbb
insb
or
outsb
and
lods
pushf
cmpsl
lods
daa
and
mov
and
xchg
xchg
fiadds
fxch
xchg
pop
les
outsl
fsubrp
xchg
in
fistpll
in
xor
sarl
test
cwtl
lods
jo
mov
aam
pop
fs
dec
std
add
cmp
push
push
sbbl
mov
or
push
mov
js
in
subl
cltd
mov
cmpl
fprem
add
sbb
aam
sub
je
mov
ds
enter
xor
pop
xor
orl
mov
jp
out
mov
ljmp
stos
push
mov
cmpsl
and
inc
fucom
repnz
shr
jnp
inc
pop
pop
xchg
pushf
addr16
pop
or
lea
pop
pop
xor
lahf
add
jmp
mov
xchg
sub
cmp
adc
js
lahf
repnz
sti
ror
xor
lret
jno
jecxz
fwait
jecxz
dec
cmp
mov
lret
mov
sbbl
call
inc
jae
cmpsb
shlb
ja
out
test
lods
adc
push
inc
fisttps
in
pushf
negb
inc
negb
pop
and
push
dec
sarl
inc
int3
jmp
test
iret
and
mov
mov
xlat
in
sub
leave
ret
xor
mov
xor
nop
lcall
int
mov
mov
fimuls
test
sahf
push
imul
pushf
inc
mov
add
stc
ss
jns
les
popf
add
loope
xchg
xor
mov
pop
loop
sbbl
insl
dec
sbb
lret
lcall
nop
mov
cwtl
test
mov
mov
cmp
ret
mov
dec
add
test
xlat
test
push
adcl
rorb
jmp
sti
fcmovbe
pushf
mov
inc
sbb
push
pop
lea
jmp
daa
mov
mov
out
pop
mov
aam
jo
das
inc
push
mov
ss
ljmp
or
test
pushf
and
stc
out
bound
jns
ucomiss
daa
mov
pop
xor
mov
in
xchg
pop
loop
xor
cld
jo
pop
icebp
add
jmp
jge
pop
lret
sbb
out
jl
ljmp
pop
cmp
add
mov
mov
add
mov
jle
dec
sub
dec
xchg
cmp
push
push
push
shlb
fcoms
cwtl
insl
movsl
idivb
stc
int3
lds
in
in
xlat
enter
inc
mov
xor
jns
pop
xor
dec
icebp
xchg
or
adc
enter
mov
out
aas
int3
js
or
pop
mov
repnz
sub
fs
out
xlat
jge
push
or
or
js
daa
cwtl
sbb
xor
rol
lock
xchg
dec
push
mov
jo
pop
imul
inc
dec
jp
shll
dec
int
mull
push
sahf
cwtl
jo
bound
dec
stos
inc
mov
sbb
jmp
sti
inc
dec
dec
repnz
cltd
mov
jo
outsl
mov
or
push
and
into
fdivl
mov
aaa
cmp
dec
fisttpll
sahf
inc
inc
xlat
das
dec
ret
test
dec
sbb
int
fnstenv
push
inc
push
stos
mov
inc
xchg
sbb
jnp
aas
decl
jnp
pop
cmp
and
cmp
sub
addr16
jnp
mov
scas
popf
test
push
add
jae
push
out
fcomps
add
sahf
in
fistpll
mov
mov
sub
shrl
jecxz
nop
movsl
jne
pop
sub
sarl
xor
jmp
mov
in
pop
ja
dec
pop
push
or
inc
cmp
xor
sub
adc
mov
pop
inc
cld
xchg
xor
xor
sahf
aad
push
mov
popa
es
add
mov
popf
inc
repnz
incl
and
rcr
xor
push
xor
test
adcl
sub
dec
sarb
js
jmp
rorb
in
fstl
jns
xor
mov
sbb
aad
imul
sarl
aam
pop
inc
cld
out
in
mov
pusha
sbb
sub
dec
rcr
fcoms
rcrb
std
shl
rorb
cmp
xor
fstpl
in
out
test
or
cwtl
stos
popf
sub
movsb
fistl
jbe
cmp
shr
push
lods
or
and
mov
mov
loopne
shll
lods
dec
jmp
rorl
imul
jne
mov
popf
dec
pushf
jb
enter
sub
rclb
hlt
bound
popa
adc
inc
pop
lahf
mov
cmp
mov
clc
inc
pop
mov
dec
std
in
or
xor
bound
dec
ljmp
rclb
mov
or
movsl
mov
js
addr16
lea
sub
mov
cli
dec
cmp
mov
mov
cmp
nop
pop
jp
addl
fnstenv
add
mov
sub
bound
push
enter
negb
pop
mov
cltd
lock
pop
aam
ljmp
mov
push
cmp
mov
sahf
out
sti
push
rclb
cmp
pop
sub
or
test
push
out
and
adc
push
dec
ja
ret
push
orb
loope
loop
fidivrs
fldt
push
inc
paddb
in
push
push
lods
addb
lahf
xor
pop
fiaddl
xchg
mov
dec
xchg
push
or
dec
lock
cltd
sbb
int
jge
lods
mov
jae
out
or
cmc
rclb
and
jg
and
xchg
call
sub
push
lds
nop
test
in
addl
or
aad
pushf
sarl
pop
hlt
lahf
out
and
cltd
jmp
mov
and
inc
mov
sbb
test
add
pop
lahf
add
inc
lcall
loop
mov
add
push
fistl
mov
and
jne
inc
nop
xchg
mov
xlat
mov
inc
nop
sbb
cli
dec
cld
fisttpll
cmp
sbb
insl
mov
popf
je
decl
pushf
fsubrl
dec
push
scas
mov
mov
cmp
mov
bound
jno
aad
push
xor
ds
pop
mov
push
cmpl
popf
dec
inc
adc
out
data16
cmpsb
ds
and
xchg
sarb
sar
out
mov
mulb
dec
cs
pop
insl
pop
test
cmp
inc
andl
adc
jecxz
mov
xchg
mov
mov
add
mov
enter
mov
mov
xchg
fwait
bound
jns
xchg
jp
ds
jmp
add
mov
ja
pop
imul
fnstenv
pushf
ret
loopne
loopne
jne
les
xor
rep
xchg
xchg
adc
jecxz
mov
out
imul
mov
into
sbb
iret
mov
pop
mov
xor
or
into
ficompl
mov
xchg
in
repnz
xlat
dec
xchg
inc
cmp
cmpl
pop
std
pop
movsb
mov
sub
addr16
dec
cmp
repz
cli
daa
inc
adc
je
cmp
insb
xchg
int3
andl
pandn
sbb
mov
cmp
cli
pop
int
xchg
pushf
or
add
cmp
mov
add
loope
lret
add
or
repnz
dec
pop
in
lods
data16
push
faddp
xchg
divl
lcall
ljmp
cs
sub
xchg
into
adc
or
lret
movsb
push
and
xor
fstpl
jmp
out
pop
popf
push
sti
mov
sbb
xor
fwait
movsl
mov
leave
popf
mov
sbb
lea
sub
mov
push
loopne
cmpsb
sbb
xor
and
mov
cmp
and
sbb
addr16
or
push
sub
xlat
push
push
aad
lahf
jp
test
jo
aad
mov
sti
and
pop
pop
mov
js
repz
xchg
dec
movsb
push
xchg
or
and
mov
mov
mov
add
xchg
xchg
dec
or
xchg
in
int3
jecxz
fstl
lcall
push
cli
cmp
adc
inc
adc
mov
jl
call
push
sbb
popf
dec
lods
pop
rorb
adc
jno
sub
and
pusha
pop
xor
stos
sarl
sbb
test
andb
dec
or
jbe
mov
inc
das
cmp
xchg
js
lock
gs
hlt
sbb
popl
jbe
les
sub
dec
dec
cmp
inc
aas
popa
push
push
jo
scas
in
xchg
scas
mov
mov
ss
push
cmp
sub
stos
sbb
pop
fwait
inc
jae
fisubrl
inc
lds
daa
mov
jb
cmp
lods
inc
in
sahf
adc
out
xchg
mov
xor
mov
and
mov
ret
ss
sbb
push
mov
jnp
fwait
add
jo
out
pop
xchg
mov
mov
mov
pop
or
adc
cmpsl
setb
loope
in
hlt
pusha
dec
rcll
and
cmpsb
lds
mov
xchg
mov
fisttps
push
cmp
inc
aad
xchg
mov
xchg
pop
ret
push
cld
xlat
leave
fistpl
and
pop
xchg
cmp
adc
lahf
push
stc
cmpsb
sahf
je
add
cmp
andb
lret
insl
inc
inc
jbe
push
notl
dec
ds
test
xchg
pop
enter
icebp
in
jno
push
xor
add
add
sbb
sbb
or
mov
xorl
enter
cs
cmc
shll
inc
test
mov
repnz
movsl
out
jbe
jge
out
lcall
and
mov
cmp
fs
or
dec
xchg
icebp
lret
ret
loopne
add
lds
stos
push
pop
mov
lods
push
pop
cmp
add
xchg
mull
pop
adc
pop
jle
xor
jbe
inc
les
jb
pushf
inc
and
dec
cmp
popa
in
ret
pop
push
jmp
out
dec
in
push
cli
std
cwtl
dec
pushf
cmp
dec
lcall
cmc
adc
mov
cli
popf
stos
lret
jns
pop
lock
testl
int3
push
out
dec
mov
jecxz
or
fwait
mov
cmpsl
mov
bound
adc
popa
pop
or
fwait
push
lret
fimuls
scas
add
xor
out
pop
push
subb
and
xchg
add
imul
jae
sar
jl
movsb
jge
aad
in
sub
inc
aas
jl
leave
cmp
incb
sub
movsl
add
out
dec
mov
push
insl
dec
mov
and
jnp
cmpsb
or
dec
jmp
mov
jnp
mul
dec
mov
insl
push
stos
in
xchg
mov
jbe
fwait
cmp
test
pusha
mov
out
dec
mov
or
inc
dec
sub
mov
push
test
fstl
test
out
cmp
pushf
push
jb
insb
pop
push
jnp
add
push
jae
loope
xchg
xchg
xchg
mov
stos
aaa
lods
xchg
sub
imul
push
repz
push
or
out
xor
inc
sub
call
and
lret
inc
daa
and
sub
test
sbb
xor
adc
inc
sbb
xor
lcall
xchg
loopne
dec
xchg
xchg
xlat
rcr
ja
ljmp
xor
jg
subb
fidivl
fwait
imul
shrl
push
mov
jg
ss
lret
and
xchg
xor
mov
and
nop
shlb
mov
xchg
adc
lds
lcall
mov
cmp
xchg
lock
sub
cltd
insb
inc
cmp
fwait
sbb
stos
and
sub
sub
sbb
sbb
inc
inc
push
inc
in
insl
int3
stos
xchg
insb
das
lahf
cmpsl
mov
jne
mov
jp
adc
sub
inc
or
push
test
inc
push
rorl
popa
fistpll
xor
add
lods
icebp
ror
mov
imul
mov
mov
mov
int
cmpl
stc
daa
incl
dec
jg
fdivrl
sahf
xor
cs
xchg
pop
inc
fwait
xor
lock
adc
mov
popf
dec
scas
jns
mov
call
add
inc
mov
mov
shl
xor
leave
rolb
jno
mov
dec
test
fnstcw
cmp
xor
jno
and
jle
cltd
add
cmpl
sbb
jle
and
dec
into
movsl
int3
iret
sub
and
xor
xor
movsb
mov
scas
sbb
sahf
pusha
nop
mov
fstpl
or
pushf
aad
jns
dec
mov
adc
int3
call
xchg
add
inc
pop
pop
jae
and
pop
imul
movsb
mov
or
mov
fbld
es
push
lret
filds
scas
and
pop
dec
clc
lcall
cli
pop
outsb
pop
push
and
sub
push
loop
mov
xor
inc
dec
xorl
std
xor
dec
movsb
pop
xchg
mov
mov
inc
jb
movsb
xchg
idivl
jg
xchg
dec
lock
mov
pop
jmp
out
ljmp
mov
ret
inc
sub
xchg
xchg
jmp
mov
popa
inc
adc
movsb
je
ret
pushf
xorb
in
das
outsb
rol
dec
jle
pop
add
dec
rcr
jbe
fwait
dec
jne
out
xchg
jns,pt
jl
xor
mov
fstpl
mov
pop
sahf
and
inc
adc
mov
outsl
dec
test
and
mov
inc
or
test
sarb
test
imul
xchg
fstl
lods
mov
pop
mov
fiadds
testl
daa
out
repnz
jns
pop
in
sbb
es
xor
hlt
or
test
insl
lret
jg
sub
pop
push
push
xchg
mov
ja
inc
lret
xchg
nop
pushf
loop
push
stos
lahf
push
xchg
add
xor
test
xor
push
dec
call
xchg
mov
pop
push
cwtl
incb
adc
pop
sub
das
cmp
ja
xchg
pop
and
sub
movsb
adc
jbe
sti
xchg
inc
mov
push
cmp
xchg
add
in
cmpb
pop
jge
insl
add
cmp
out
lock
movsl
pop
add
xor
stos
xchg
inc
push
ss
dec
sahf
or
test
mov
in
xor
into
js
aas
test
lret
clc
icebp
dec
mov
xchg
dec
in
mov
push
jno
scas
mov
and
in
adc
stos
dec
jl
dec
lods
xor
lret
cmpsb
and
inc
cltd
or
mov
push
and
push
ficompl
sti
xchg
repnz
test
cld
dec
xchg
jl
adc
nop
pop
cmpsb
or
fsubl
mov
pushf
insl
push
ja
idivl
popa
add
nopl
push
adc
sahf
mov
nop
sbb
loop
sahf
sbb
add
bound
lea
loop
and
subb
fistpl
or
or
aaa
mov
mov
jg
add
shl
mov
scas
push
mov
movsb
pop
jmp
push
jg
and
sub
stos
xor
sarb
xor
pushf
add
fdivrp
mov
mov
xor
inc
fcompl
jg
cmp
pop
sarl
dec
sti
sbbl
or
or
popa
dec
mov
and
cwtl
lret
fwait
mov
fcmovu
sbb
fnstsw
scas
jb
adc
mov
mov
stc
adc
mov
push
sbbb
shl
stos
mov
adc
mov
outsb
decb
dec
loop
es
ret
mov
add
in
arpl
xor
and
xchg
add
sbb
pop
mov
cmp
jne
jbe
js
test
xor
in
lahf
xchg
imul
iret
stos
mov
stc
scas
jg
insb
js
push
xor
leave
mov
xchg
or
jecxz
xchg
popa
outsl
into
jo
fisubs
xor
pushf
and
cmpsb
dec
gs
movsl
mov
pop
insl
and
fidivrs
jg
lea
ljmp
xchg
push
jle
imul
dec
sbb
jl
jg
mov
jb
in
sub
sbb
xor
nop
or
in
sbbl
dec
sub
xor
roll
mov
inc
repnz
adc
sbb
lock
or
lds
test
imul
pop
call
jg
es
cmp
push
xchg
inc
add
or
sub
aas
pop
cwtl
adc
rclb
push
aad
xlat
add
and
adc
stos
pop
xchg
mov
sarl
mov
ljmp
repnz
fistpll
add
daa
loopne
dec
jl
test
pop
imul
adc
inc
mov
loopne
outsl
rcrb
jp
lds
cmp
push
leave
pop
test
int
ret
pop
dec
outsl
mov
pop
jo
xor
loop
add
movsb
cld
push
pop
mov
mov
inc
and
pop
mov
or
jns
mov
stc
repnz
test
sbb
or
mov
or
not
std
mov
xor
xlat
inc
clc
and
test
xchg
mov
xorb
sbb
lods
adc
in
call
iret
sbb
mov
popa
xor
orl
imul
arpl
into
out
cmp
xchg
mov
notl
mov
mov
mov
xchg
notb
pushf
mov
movsb
nop
pop
inc
lahf
add
xlat
xor
sbb
fbstp
push
inc
inc
pop
jo
or
loopne
xchg
lea
mov
push
fldz
ja
fucomp
mov
xor
pop
in
push
mov
pop
mov
lcall
aas
aad
add
xorl
and
sub
sbb
sub
sub
andb
dec
pushf
xchg
hlt
cmp
xchg
mov
mov
add
and
ljmp
mov
lret
adc
push
pop
fldcw
cmp
mov
cmp
js
movsl
pop
cmp
ret
gs
out
mov
stc
xchg
divl
push
jg
push
jmp
xchg
sub
dec
arpl
dec
in
mov
xchg
adc
cmp
add
pop
pop
test
jecxz
dec
xchg
mov
arpl
repz
mov
or
ljmp
xchg
lods
mov
leave
insl
adc
push
adc
into
enter
insb
xchg
push
ljmp
stc
xchg
jle
pushf
sbb
daa
xor
inc
aad
and
xchg
insl
sbb
arpl
pop
add
popa
jge
lock
das
cmp
jecxz
dec
sti
jns
testl
fs
imul
std
icebp
call
mov
inc
sub
inc
jg
push
ljmp
xor
cld
jmp
movb
xchg
or
ss
pop
and
and
push
inc
mov
pop
dec
negl
mov
jecxz
nop
push
push
push
cmc
lret
mov
add
loope
insl
sub
les
aaa
and
cltd
rcll
mov
in
addr16
inc
popf
mov
out
call
scas
and
mov
adc
lret
jne
lahf
xchg
sbb
clc
xchg
jg
push
inc
inc
mov
ret
dec
mov
sub
inc
mov
push
add
xchg
hlt
leave
lock
lds
fmuls
jmp
es
sti
xchg
mov
lret
or
dec
mov
fadds
iret
adc
js
xchg
pop
sbb
jg
mov
mov
push
sbb
mov
add
into
xor
orb
fs
sahf
icebp
aam
data16
popf
mov
in
dec
ret
pop
cmpsl
pop
loopne
or
cltd
imul
inc
popf
ljmp
add
out
insl
stos
sub
sbb
xor
and
dec
cmpsb
loop
or
lods
fistps
dec
pop
xchg
push
std
in
push
push
jo
gs
sub
mov
mov
mov
cltd
scas
xchg
loop
stos
clc
add
xchg
inc
xor
and
and
lret
les
jmp
jb
lock
cs
xchg
jno
cmp
mov
in
mov
cs
int
inc
sub
mov
outsl
mov
mov
int
int3
pop
clc
mov
mov
dec
mov
add
popa
add
and
notl
fisttpl
daa
aas
repnz
fbld
xor
into
iret
ds
aaa
orl
jl
stos
mov
bound
pop
shll
std
decl
add
push
dec
mov
mov
test
imul
sti
mov
stos
jbe
xchg
cmp
mov
xchg
pop
ss
pushfw
dec
icebp
fwait
dec
adc
out
jo
xchg
sub
and
dec
daa
inc
push
and
add
test
adc
stos
push
pop
cltd
push
or
dec
loop
sub
xchg
daa
sub
dec
fimull
xor
add
ficompl
test
roll
inc
ss
mov
sbb
stc
xor
pop
pop
ficomps
mov
jle
lahf
ds
cmp
jo
mov
xor
dec
test
jae
xchg
test
icebp
pop
sbb
jge
adc
mov
push
push
push
orl
aad
or
push
jl
pop
loopne
cli
repnz
xchg
push
notb
adc
in
mov
ffreep
push
xor
jp
or
gs
cs
mov
dec
inc
xchg
and
pop
mov
cmc
repz
add
sub
shll
cmp
arpl
push
movsb
push
setl
pop
xor
rorb
pop
sub
pop
mov
lods
jne
popa
test
sub
repnz
repnz
jne
xchg
push
sti
mov
jo
inc
out
nop
or
out
inc
stc
mov
movsb
mov
jnp
stos
push
pop
insl
xor
pop
inc
lret
in
frstor
cltd
int
insb
adc
inc
jp
pop
xchg
push
xchg
jge
xchg
cmp
or
or
inc
das
bound
and
aad
inc
loop
pop
inc
dec
xchg
dec
and
les
sub
inc
shl
inc
pop
xchg
adc
fucomi
add
je
scas
jle
jo
dec
insl
iret
rolb
pop
adc
aam
je
jge
jg
rclb
cmp
les
xchg
adc
sbb
add
push
cmc
scas
test
xchg
int
mov
not
and
mov
leave
dec
xchg
divl
ficompl
cmpl
cmp
loop
xchg
leave
pop
jmp
cwtl
je
pop
jno
nop
sbb
mov
sahf
inc
lds
dec
pop
std
xchg
mov
jne
pusha
stos
mov
in
dec
or
dec
or
lahf
fs
mov
sahf
or
cmpsb
out
seto
sub
stc
pop
xchg
das
pop
fistpl
jns
push
in
aad
inc
and
repnz
xchg
inc
push
inc
xor
dec
sahf
arpl
hlt
mov
insb
mov
cmpsb
sahf
cmpsl
int3
scas
jp
lea
movsb
sub
xchg
cmp
clc
add
fiadds
hlt
rcl
out
aas
sub
std
cmpl
enter
leave
test
aaa
arpl
xor
pushl
imul
mov
test
gs
cmpsb
inc
mov
ret
popf
or
pop
bound
mov
ficomps
fs
xchg
outsl
stc
ror
adc
daa
in
lcall
popf
lahf
or
jle
sub
push
push
dec
adc
mov
inc
fistps
imull
jp
cmp
stos
jle
in
mov
clc
cwtl
or
scas
xor
add
xchg
mov
ja
shlb
jp
fcomps
sbb
push
push
jl
push
xchg
cli
add
xchg
mov
mov
xor
pop
nop
adc
loope
mov
push
js
jge
and
sbb
mov
add
xchg
inc
jbe
scas
dec
pop
sub
xchg
pushf
xor
jb
add
xor
push
sub
dec
iret
enter
sbb
sub
cmp
icebp
xchg
pop
cmp
lcall
cmp
je
add
pop
int3
dec
clc
jecxz
xchg
adc
sub
lret
push
xor
shlb
fs
icebp
sub
sub
add
xchg
ja
xor
fs
adc
mov
sub
shll
cltd
cmp
add
adc
xchg
stos
test
push
push
push
les
fildll
push
iret
cltd
mov
lds
hlt
imul
or
cmp
mov
dec
mov
cmp
repz
enter
and
mov
adc
imul
outsl
inc
rolb
lcall
pop
int
lret
es
jb
mov
cmp
push
ljmp
dec
test
cld
dec
in
jno
sbb
mov
jbe
mov
mov
testl
popf
mov
fucomip
adc
pop
fists
scas
stos
sarl
in
test
notl
aaa
iret
fldenv
sbb
adc
pop
adc
or
insl
dec
int3
movsl
in
sbb
out
scas
leave
out
xchg
rorl
test
cmp
je
scas
daa
stc
notb
sahf
rolb
repz
stc
xchg
adc
push
dec
push
daa
je
sub
loope
popa
rep
in
incb
xlat
cmp
imulb
adc
xchg
fcos
ret
mov
push
sarb
loopne
hlt
in
aad
mov
dec
shll
mov
rcll
cs
xchg
mov
add
out
icebp
xchg
fdivrs
or
cli
adc
dec
ds
movsb
loope
jno
std
fdivr
int
jb
sbb
gs
outsb
lea
dec
cmp
mov
pop
pop
sbb
sub
das
sbb
lahf
xchg
insb
es
jl
aaa
sub
loop
call
lcall
or
sub
inc
imull
sub
cmp
sti
push
pop
dec
decl
sbb
adc
fistl
mov
mov
sbb
push
mov
out
gs
les
dec
idivb
fwait
mov
out
jl
daa
lods
or
inc
nop
movsl
push
adc
xor
xchg
sub
cs
lahf
xlat
stos
push
pushf
pop
mov
xlat
jg
mov
adc
mov
in
jne
test
lds
xchg
bound
les
jmp
push
sbb
xchg
mov
and
dec
or
jbe
adc
lds
sbb
je
push
movsl
lea
adc
aas
lods
dec
push
cld
iret
or
add
mov
testb
in
jl
es
jae
sub
hlt
lcall
mov
nop
dec
jle
popf
xchg
mov
xor
scas
xor
xor
push
int
loopne
jg
inc
xor
jmp
mov
mov
jle
dec
sbb
enter
std
int
repz
jno
push
xchg
inc
and
xor
sbb
int3
inc
adcb
inc
inc
mov
into
fldt
or
pop
mov
push
pop
dec
lret
fildl
jp
sub
or
shl
in
lods
in
jbe
sti
push
cmp
jb
out
and
out
cwtl
dec
dec
mov
add
xchg
cmp
mov
push
sub
je
lret
jb
push
mov
fiadds
jecxz
lock
sbb
push
mov
out
unpckhps
lea
pop
mov
jnp
enter
push
adcl
dec
jecxz
xchg
add
mov
push
ljmp
push
mov
sbb
addr16
data16
dec
fnstenv
dec
mov
in
ljmp
ret
aam
iret
lret
jb
sub
pop
dec
mov
mov
orl
pop
sub
and
mov
daa
cwtl
imul
or
cmpsb
mov
and
in
or
icebp
jmp
out
mov
out
sub
fidivrl
pusha
cmp
shl
in
or
mov
imul
call
cmpsb
daa
cmp
push
mov
mov
xchg
out
push
xchg
sbb
loopne
fwait
test
adc
mov
daa
loopne
cmp
ret
out
mov
cmc
jecxz
hlt
lret
xchg
mov
mov
pop
dec
mov
dec
sbb
cmp
jbe
insb
je
repz
cmp
mov
stc
push
jmp
and
adc
faddl
xor
faddl
in
lret
out
pop
xor
adc
dec
popf
jo
pop
adc
mov
xchg
add
jmp
and
mov
xor
add
sub
iret
and
ja
jnp
push
loope
aaa
pop
mov
jnp
jle
cs
and
and
rorb
jno
inc
pop
push
cli
add
jmp
imul
sar
data16
jo
or
sbb
popa
dec
dec
shrb
cmp
xchg
pop
cmpb
test
dec
das
pop
lahf
rorl
les
loop
out
bswap
add
shrl
nop
jge
gs
pop
pop
push
les
movsb
sbb
inc
inc
xchg
cltd
add
jle
test
pop
les
aas
xchg
std
out
lock
js
push
inc
insl
inc
or
dec
cmpsb
stc
jo
imul
xor
ljmp
fisttpll
pushf
vldmxcsr
dec
test
test
lea
and
stos
stos
adc
add
dec
add
dec
cmp
pop
inc
and
add
outsb
pop
or
dec
or
dec
sti
fidivrl
mov
sarb
mov
xchg
in
mov
and
and
xor
pop
adc
rcrl
mov
cmp
pop
lods
sub
jns
fstps
xchg
lock
out
lret
adc
mov
or
xchg
sbb
aad
ss
jecxz
outsl
lret
sbb
testb
in
in
sbb
out
iret
rcrl
iret
add
xchg
in
lret
test
push
fcoms
jecxz
fdivs
ja
fisttpll
mov
cli
movsl
adc
mov
mov
mov
or
sbb
call
ret
jecxz
or
xchg
jg
jno
push
rcr
sahf
fwait
out
pop
lahf
mov
fwait
pop
call
shrb
nop
fbld
bound
push
lahf
cmpsl
xor
jmp
ret
push
enter
xor
std
adc
fidivs
push
dec
jle
les
push
jae
incb
shrb
push
lahf
mov
lods
push
imul
dec
jo
stc
nop
lcall
ret
cmpsb
fimull
lcall
sahf
cld
aam
lods
xchg
les
sub
xor
sub
enter
dec
lcall
shll
sarb
push
cmpsb
adc
or
shl
push
sub
out
jp
mov
lock
push
adc
xchg
sbb
pop
in
fcoms
mov
xchg
jl
movsb
add
sbb
push
gs
cld
dec
testl
sbb
mov
negb
cwtl
jmp
and
cmp
shll
inc
pushf
adc
in
mov
ja
push
lods
pop
dec
ret
repz
jmp
leave
popa
into
test
daa
pop
mov
in
cld
shrb
jbe
lods
ljmp
push
mov
inc
pushf
lcall
cmp
inc
push
popf
rol
fsubs
sbb
ror
jo
push
xchg
ja
out
or
ret
scas
dec
push
mov
insl
daa
sub
mov
ds
mov
cmp
sbb
sub
loopne
test
cltd
adc
push
sub
popf
pushf
cmpsb
test
push
pop
aaa
jecxz
xchg
and
das
mov
or
mov
jb
push
jae
cmc
and
sbbl
fisttpll
inc
add
cmp
jecxz
cwtl
inc
pop
jmp
fs
push
cli
shrl
or
cmp
adc
cmp
movsb
and
cmpsb
clc
cmpsl
xor
inc
xchg
nop
movsb
dec
sbb
add
aad
sarb
jmp
gs
pop
out
cld
arpl
mov
popa
fadds
test
or
xchg
or
mov
test
jg
inc
mov
das
sahf
rolb
cmc
add
jb
fiaddl
mov
popa
or
xor
mov
dec
mov
ret
ret
mov
xor
mov
das
pop
test
sbb
or
mov
out
push
movsl
daa
gs
cwtl
icebp
mov
jge
xchg
dec
mov
andl
push
jns
in
ds
mov
or
sbb
adc
push
mov
pop
pop
cmc
jnp
fistpl
xorl
fildll
pop
cli
inc
lds
bound
add
push
xchg
mov
mov
mov
mov
mov
incl
pop
fisubs
push
dec
call
jnp
jg
mov
cld
jb
sbb
mov
xor
repz
addr16
ret
imul
sbb
roll
adc
mov
fsubs
vmovsd
loopne
movsb
and
pop
icebp
js
adc
mov
adc
push
push
inc
or
and
jne
mov
xchg
test
repz
jo
and
scas
dec
pushf
sub
cmp
ss
add
out
mov
jl
lret
mov
test
mov
inc
outsb
xchg
fistpll
jl
sub
sub
fidivl
andl
sahf
lret
pop
mov
out
sbb
iret
loop
aas
push
into
cmc
inc
dec
cmpsb
xchg
clc
mov
cmp
mov
stc
jns
decl
adc
sub
sub
negb
lds
jno
rcrl
mov
nop
pop
rol
pop
adc
movsl
cld
decb
fs
pop
adc
cmc
popf
and
xchg
push
outsb
aas
ljmp
cld
and
sahf
inc
adc
jle
and
sbb
movsb
jae
adc
cwtl
mov
popa
bound
stos
pop
testl
in
mov
fnstsw
cltd
xor
jp
fs
mov
aam
or
imul
mov
push
sub
pop
ret
in
pop
iret
mov
pop
test
out
cmpsb
add
xchg
out
shll
cmpb
test
xchg
jg
push
and
inc
xchg
and
xlat
pop
push
jle
lret
dec
cwtl
pop
xorl
lock
test
jle
sbb
mov
sbb
test
das
mov
inc
xchg
jmp
jmp
push
mov
lds
popl
or
sub
xor
inc
add
or
int
ss
mov
push
push
inc
clc
insb
mov
test
cmp
xlat
sbb
incb
mov
xchg
mov
lahf
jge
fsin
jecxz
hlt
mov
push
imul
int
sbb
cli
stc
xchg
leave
and
dec
das
loop
pop
maskmovq
mull
lods
or
jge
out
lahf
pop
shr
sbb
loope
stos
sub
movsl
push
or
rclb
in
add
call
xor
adc
fsubs
pusha
sub
imul
xchg
cltd
sarl
dec
or
dec
mov
push
adc
push
mov
pop
xchg
jl
push
add
fcmovbe
lcall
cmp
xor
js
daa
neg
dec
int
adc
hlt
pop
mov
cld
sub
cmp
mov
loop
lea
shlb
loopne
aas
cmp
stc
out
sub
jl
int3
int
inc
xor
scas
push
es
sbb
push
mov
rol
cli
xchg
mov
insl
sbb
sub
mull
pop
fistpll
xlat
jge
into
push
out
in
jb
test
icebp
sbb
xor
lds
imul
mov
cltd
lahf
test
pop
sub
and
fsubrl
push
pop
dec
or
xlat
and
inc
in
mov
mov
dec
mov
push
push
mov
fwait
xchg
int3
ljmp
gs
inc
or
adc
cmc
cmp
sub
lcall
jnp
jae
scas
pop
xlat
inc
add
fcomps
clc
loope
nop
gs
inc
test
test
xchg
imul
jge
xor
test
sub
loop
call
in
mov
jne
inc
mov
or
test
mov
inc
in
scas
mov
inc
fwait
movsl
push
adc
scas
or
test
mov
movsb
dec
test
jge
stos
xchg
mov
daa
mov
or
push
lcall
mov
inc
add
or
sub
mov
jg
mov
sbb
jmp
loop
ja
mov
std
and
out
lea
sbb
mov
cmpsb
sbb
repnz
mov
mov
rorl
pop
pop
xor
dec
stc
adc
cmc
bound
scas
mov
cmp
cmc
push
mov
push
push
xchg
jb
hlt
inc
pop
push
or
push
or
mov
cmc
imul
orb
mov
fs
or
fisubl
and
add
mov
int3
fwait
insb
out
jbe
cmc
dec
inc
mov
mov
sbb
cmp
mov
and
cmp
rclb
mov
xor
out
imul
fcoml
pop
bound
and
in
popf
in
jns
adc
mov
pop
insb
inc
or
push
xchg
dec
fists
pushf
inc
lods
dec
dec
mov
out
inc
lahf
xchg
mov
xchg
stos
jns
ret
in
mov
jno
lret
js
lock
inc
rol
out
stc
mov
jbe
mov
enter
test
xchg
lret
inc
scas
fnsave
pop
clc
or
sbb
or
mov
dec
cli
adc
aad
pop
dec
rorl
mov
mov
pop
pushf
mov
xlat
ljmp
dec
dec
fadds
sbb
in
or
jb
loopne
cmp
xchg
mov
pop
lea
ljmp
xchg
sbb
les
fisubrl
ja
filds
push
and
xchg
scas
lahf
dec
jns
push
icebp
ja
xchg
popa
lods
cwtl
and
lock
push
les
xchg
xor
ja
and
shrw
adc
sub
lahf
and
cmpsl
shlb
xchg
imul
nop
mov
imul
into
or
pop
mov
movsb
or
popa
lea
hlt
sub
iret
enter
fwait
sub
test
adc
aas
mov
sub
mov
inc
popa
iret
outsb
lods
mov
aam
xchg
loop
inc
jg,pt
inc
xchg
roll
test
scas
xor
xchg
mov
out
insl
xchg
add
xor
cmp
or
mov
hlt
xchg
clc
inc
xor
shrl
sub
dec
imul
dec
pop
clc
hlt
addr16
push
sbb
jbe
frstor
enter
jnp
xchg
cmpsl
sbb
jno
test
popf
sahf
cli
sub
negb
iret
aam
fstpl
stos
and
push
and
xor
mov
mov
cwtl
lds
sti
sahf
push
adc
dec
adc
scas
pop
call
inc
cmp
fwait
lock
aas
dec
fs
dec
jge
aam
clc
xor
push
dec
mov
aad
jge
pushf
cld
nop
and
xor
out
mov
fdivl
xlat
fdiv
mov
push
in
cmpsl
out
lods
js
dec
orb
inc
fsts
push
pop
inc
xchg
pushw
sub
xchg
shlb
iret
jbe
add
pop
pop
punpcklbw
ljmp
lcall
daa
inc
lret
mov
stos
pusha
xchg
xlat
ret
in
ljmp
and
ljmp
mov
jbe
and
or
idivl
aaa
or
int3
repz
adc
push
add
repz
and
or
loop
inc
lret
in
data16
int3
jp
mov
mov
bound
loop
subl
xchg
daa
mov
outsb
dec
lock
stc
mov
popa
xor
sti
cld
xchg
or
and
shlb
movsb
mov
mov
in
popa
subl
scas
dec
sbb
shlb
mov
ret
cmp
in
in
enter
sahf
mov
stc
mov
jb
fsubl
test
popa
adc
lcall
cmpsl
int
xlat
arpl
jne
jns,pt
pop
mov
dec
pop
lock
insb
jmp
mov
xchg
mov
cmp
popf
push
andl
inc
mov
dec
inc
in
xchg
cmp
lods
cmpsl
sbb
sbb
sbb
and
iret
add
imul
lcall
or
push
mov
dec
jge
cmp
pushf
les
addr16
fisttps
out
out
imul
cmp
mov
test
cmpb
and
jbe
repnz
aaa
dec
inc
mull
cmpb
outsl
xor
or
jecxz
aaa
sbb
insl
shll
mov
and
and
test
imul
mov
cmp
aaa
xchg
out
cmp
sbb
push
loop
cmp
mov
xchg
sub
push
out
xchg
mov
sti
ret
mov
rorb
sub
fwait
insl
enter
dec
js
xorl
scas
xlat
pop
lods
push
push
scas
pop
je
mov
js
insl
gs
sbb
inc
outsl
pop
sub
ficomps
sbb
adc
cmp
pop
int
cmpsb
and
sbb
ror
jle
mov
sbb
mov
fcmove
xor
out
push
fisubs
daa
lcall
mov
cmpsl
mov
std
mov
or
sbb
xor
xchg
fwait
sub
mov
cmpb
pop
xchg
cmc
mov
sahf
movsl
sti
push
mov
sbb
mov
cmp
int3
popf
push
xchg
lods
mov
or
push
repz
and
or
cs
aam
dec
cld
pop
and
shrl
inc
dec
das
xor
int
adc
jnp
jb
xchg
addr16
or
push
cld
roll
jmp
clc
pop
std
icebp
xor
inc
add
int
pop
xchg
std
xlat
adc
mov
cmc
sub
movsl
inc
lahf
lock
push
stos
loopne
loope
scas
inc
movsb
dec
mov
pop
mov
in
xchg
dec
in
lock
inc
cltd
rolb
inc
cmpsl
cltd
sub
pop
pop
xchg
pop
lahf
and
xchg
pop
or
cwtl
outsl
push
push
ret
and
js
or
nop
inc
in
stos
sarb
sub
jbe
push
ljmp
xchg
and
into
stos
mov
jle
push
and
xor
fmuls
shll
push
xor
dec
into
jmp
push
mov
cmpsl
test
inc
jb
mov
pop
addr16
jbe
mov
sti
mov
imul
dec
inc
mov
xchg
pop
das
daa
mov
xchg
mov
inc
jno
popa
cs
fwait
mov
or
jno
sub
cwtl
jbe
push
lds
xor
sar
xchg
mov
dec
pop
loopne
mov
insb
imul
add
ss
lock
mov
jns
shrb
xchg
mov
push
subb
cli
pop
or
jno
pop
arpl
sbb
jecxz
jne
mov
imul
in
xor
fsubl
mov
push
dec
inc
mov
fs
jnp
jnp
and
out
mov
xchg
nop
or
shlb
mov
sahf
push
lret
pop
cmp
sti
orl
test
ret
jbe
and
pop
hlt
jge
mov
aaa
sahf
das
scas
add
dec
inc
addl
daa
js
js
scas
xor
sbb
sub
push
jno
mov
push
cs
in
dec
repz
xor
fdivl
fldenv
mov
cwtl
popf
pop
repnz
jg
out
lret
mov
xchg
aas
jbe
inc
test
cld
add
rcrl
cmpsb
jmp
jl
sbb
negl
jge
push
cwtl
dec
lcall
gs
fcmovnu
imull
cltd
outsb
aas
sti
push
das
mov
inc
js
jo
imul
sbb
jbe
mov
jae
lcall
outsb
adc
lods
push
dec
mov
mov
loope
test
shlb
push
lds
dec
add
dec
add
enter
inc
push
rcl
mov
push
pop
mov
sti
jnp
mov
mov
fisubrs
mov
or
hlt
imul
jmp
jl
or
pop
push
or
lcallw
ss
js
xor
inc
sbb
jne
dec
pop
repnz
xor
std
jge
inc
jbe
lock
push
cltd
sub
xchg
jmp
icebp
dec
mov
fsubrs
es
push
out
adc
pop
addr16
push
out
push
pushf
pop
mov
fisubl
mov
or
and
dec
xor
inc
arpl
jo
and
jg
push
pop
dec
mov
nop
and
pop
dec
fsubl
push
and
jbe
hlt
cmc
jne
xchg
xchg
sub
xchg
dec
xor
push
cmc
xchg
cwtl
test
sar
cmp
jge
mov
mov
scas
xor
mov
adc
in
leave
incb
pop
pop
loopne
stc
xchg
movsl
mov
push
cmp
add
popl
fcom
and
mov
lcall
push
in
cmp
sub
lret
test
bound
xchg
ds
das
fmuls
cmpsb
pop
and
adcb
push
shll
pop
in
movsb
rolb
push
dec
jl
sub
repnz
push
add
pop
insb
lods
jle
inc
jnp
mov
aas
lcall
shrl
nop
xor
inc
xlat
pop
mov
enter
adc
jno
imul
divb
push
sub
nop
in
imul
mov
or
sub
cmpsl
pop
push
mov
mov
pusha
enter
fnsave
xor
jne
mov
add
push
pop
lods
inc
int
ss
scas
clc
es
test
dec
cwtl
adc
mov
icebp
lret
dec
jmp
fcmovnu
into
aad
jne
sub
addr16
xchg
and
or
mov
outsb
adc
out
cmc
rcr
in
cmpsb
test
adc
inc
or
mov
cmc
push
add
movsb
test
mov
mov
push
mov
xor
jmp
in
dec
jne
loope
adc
std
xlat
dec
hlt
push
push
mov
call
inc
jno
or
sub
das
xchg
add
mov
dec
push
int3
cs
add
idivb
aas
xchg
popa
scas
push
jnp
cs
cmp
dec
ljmp
sbb
inc
cmpsl
adc
ss
orb
and
push
addb
fdivrl
sbb
call
cmp
mov
jno
sbb
jg
test
pop
sub
aas
mov
hlt
rcrl
movl
sbb
imul
or
adc
sbb
jmp
fsubr
jp
pop
or
jnp
out
sbb
decl
fists
inc
out
cmpsb
popf
jg
leavew
and
push
pop
mov
mov
bound
nop
ret
sub
cmpsb
sahf
ss
xor
pop
mov
sbb
ret
xchg
pop
cltd
repz
icebp
test
add
inc
sahf
pushf
mov
xchg
rcr
adc
xor
jmp
xchg
movsl
roll
push
pop
add
adc
jb
popa
jns
lret
fnstenv
xchg
or
mov
incl
scas
cmp
and
cmpsl
rcrl
lcall
lds
add
ss
mov
scas
jecxz
movsl
adc
arpl
xor
loope
add
push
fistpl
mov
testb
fcmovnb
cmpsb
js
std
push
pop
sub
xchg
xor
cmpsb
dec
inc
rep
rorl
xchg
add
jmp
imul
cmp
rcrw
and
fidivrs
and
jge
dec
pop
leave
xchg
clc
push
and
rcrb
cmp
push
ljmp
add
adc
lcall
icebp
enter
repnz
sbb
cli
rclb
mov
sbb
cltd
arpl
mov
dec
jae
sub
rcrb
xchg
or
lea
adc
iretw
push
inc
and
jp
pusha
mov
sti
fbld
xorl
dec
cmp
testl
push
jmp
lret
ret
sbb
dec
mov
mov
jmp
xor
jno
fldenv
adc
js
mov
or
push
pop
les
or
push
imul
xor
xlat
push
adc
sub
pop
les
adc
aam
stos
mov
aad
sahf
addr16
add
test
hlt
gs
lock
adc
mov
sub
ds
adc
xor
scas
shrl
std
push
jge
push
or
mov
das
mov
inc
push
mov
test
js
xchg
sub
addl
pop
mov
bound
dec
push
lods
leave
andl
lcall
gs
adc
movsl
aaa
test
add
gs
mov
inc
add
test
pop
add
fbstp
xorl
or
into
aad
in
pop
rclb
ds
imul
loopne
fistpl
sar
out
in
and
lahf
rorl
int3
mov
mov
push
ja
pop
dec
push
jno
cmp
jne
dec
jno
or
xchg
outsb
lods
mov
pop
inc
loopne
sub
arpl
jmp
sbb
pushf
or
mov
xchg
pop
cld
sbb
jmp
cld
out
mov
mov
test
sbb
xor
xlat
ds
mov
cmpsb
sub
test
or
out
push
ds
adc
jb
out
pop
push
repnz
xchg
sbbb
push
dec
popf
fdivrl
and
push
cld
push
cmp
cmp
push
pop
mov
push
inc
lock
cli
cmc
outsl
lods
std
inc
pushf
out
iret
test
push
cmpsl
clc
jnp
add
push
movsl
stc
xor
rcrb
mov
sbbb
pop
push
mov
das
into
adc
mov
mov
xor
out
cmp
les
nop
cli
or
xchg
xor
adc
mov
mov
lods
fcoml
pusha
rcrb
jae
test
fscale
adc
push
lock
cmp
sti
and
test
pushl
shrl
dec
hlt
adc
popf
in
aad
hlt
out
jnp
imull
push
cmc
rclb
add
inc
jmp
lock
imul
add
popa
pop
xchg
scas
loope
and
xchg
push
popa
or
sarb
adc
loope
or
cmp
add
push
loope
int3
sub
dec
mov
sti
mov
mov
pop
mov
shrl
push
add
add
jge
nop
cwtl
cmpsb
inc
nop
mov
cmp
mov
lret
jl
stos
adc
enter
sbb
outsl
loop
decl
cmp
jp
popf
sub
xor
cs
mov
jp
rcrl
dec
push
fs
push
inc
pop
dec
fstl
shll
int
lds
mov
mov
hlt
addb
cs
shrl
cmp
or
adc
add
fistl
outsb
in
pop
xor
and
pushf
mov
mov
dec
inc
test
je
fsubl
pop
lret
push
jecxz
mov
nop
and
popa
nop
aas
icebp
jo
or
gs
test
cld
imul
test
jge
setae
jno
xchg
add
cmc
pop
pop
fcompl
adc
scas
inc
or
sbb
adc
jnp
shlb
mov
mov
shll
fimull
push
cmp
imul
cmp
dec
es
jmp
jmp
stc
jecxz
rcll
xchg
stos
loopne
imul
ljmp
add
scas
inc
pushf
sub
mov
or
sub
test
inc
mov
pop
cmp
pop
shlb
mov
cmpsl
imul
sub
insl
adc
mov
add
lods
insl
rclb
mov
mov
movsb
int3
js
mov
daa
enter
sbb
bndstx
cmp
or
or
fs
lahf
xchg
mov
lea
xchg
das
movsb
loope
jp
aaa
mov
scas
mov
mov
in
jle
and
cmp
dec
and
lret
enter
jp
adc
ror
push
inc
add
inc
xor
or
inc
jb
leave
lods
pop
cmp
sahf
gs
lock
nop
test
lea
ljmp
pop
insl
xchg
fdivrs
mov
enter
movsb
test
xchg
adc
mov
adc
jbe
inc
push
insl
into
lcall
cmp
mov
divl
scas
cmp
loopne
xchg
loopne
lods
add
lock
xor
push
movsb
fldl
pushf
ss
pop
pop
pop
std
ret
or
adc
and
das
dec
in
insb
leave
mov
mov
sub
mov
movsl
jnp
cvttps2pi
rcr
cmp
sub
sbb
jl
imul
xchg
loopne
dec
fisubrs
push
xor
push
xchg
in
or
cmc
push
mov
jge
shlb
push
dec
push
cmc
pop
int
lods
dec
dec
adc
clc
pop
sbb
out
fildl
dec
popf
int
jbe
jns
rorb
js
stos
mov
dec
iret
cmp
jl
mov
clc
stos
shr
push
jecxz
movsbl
mov
or
jae
stos
xchg
leave
mov
shl
pop
and
lods
shlb
cs
dec
cmpsb
mov
adc
aad
in
sbb
cwtl
adc
inc
mov
push
mov
jg
pushf
cmp
mov
and
lcall
rcrl
out
mov
xchg
sbb
and
lcall
test
xchg
dec
or
mov
mov
jns
xchg
and
je
inc
outsb
aas
sub
sbbb
adc
mov
or
pop
and
adc
jnp
push
aaa
sub
xor
scas
scas
adc
mov
xor
out
xchg
addr16
mov
mov
mov
pop
js
xchg
lods
mov
stc
fiaddl
mov
and
movsb
adc
loope
dec
stos
into
inc
icebp
pop
ret
jne
xchg
dec
xchg
popf
in
lock
loop
dec
dec
test
out
push
ja
mov
or
mov
or
xchg
in
xorb
mov
icebp
mov
sahf
stos
bound
sub
jnp
sbb
sub
mov
movsl
aam
out
or
or
in
push
pop
mov
imul
mov
mov
sahf
jecxz
dec
jge
mov
nop
mov
xchg
push
aas
dec
aad
pop
js
xor
inc
cltd
mov
or
incb
lods
sahf
loopne
loopne
adc
sub
xor
jmp
call
mov
and
test
icebp
mov
inc
mov
aas
adc
cmp
sbb
mov
jnp
mov
cs
ss
add
das
adc
sub
movsl
push
xor
cmp
pop
inc
in
es
and
ja
movsl
or
ffreep
mov
icebp
out
adc
pop
mull
cmp
mov
mov
dec
rorl
loopne
jae
sbb
ret
lret
inc
into
jg
pop
dec
add
mov
pop
lret
sbb
cmp
adc
cmpsl
ret
mov
loop
out
cmc
rcl
cmpl
shlb
in
stc
cltd
mov
insl
test
or
int3
mov
clc
in
insl
adc
imulb
in
xchg
xor
les
ss
incb
dec
ds
test
lock
daa
test
dec
and
push
icebp
mov
push
adc
imul
mov
js
pushf
or
add
mov
mov
jo
push
ficompl
cwtl
sbb
xchg
and
loopne
sbb
cmp
mov
mov
push
sub
clc
xchg
aam
and
inc
sub
push
push
and
loope
pop
out
shrb
sub
inc
mov
out
fwait
lret
aas
ljmp
add
scas
push
mov
mov
orl
mov
jno
imul
mov
jne
neg
mov
nop
sbb
in
dec
cmp
sub
fsubrl
push
push
hlt
adc
cmp
inc
push
mov
movsb
out
jb
jnp
fs
addr16
mov
pusha
aas
fwait
rep
adc
pop
sti
addr16
lods
push
inc
repnz
ret
cmp
cmp
sub
incb
aas
sub
jne
pop
aam
jnp
jp
call
jne
cmc
lret
daa
clc
stos
pop
dec
js
add
movsb
scas
xor
cmpsb
rorl
add
inc
outsl
jl
sub
mov
shll
and
xor
into
jp
dec
pop
adcb
test
pop
jmp
out
testb
out
in
imulb
fwait
out
push
and
cmp
adc
xchg
lods
push
mov
enter
rcr
and
push
scas
addr16
stc
push
sbb
mov
jns
mov
sub
and
iret
or
ret
push
dec
pop
jbe
loope
neg
xchg
mov
mov
mov
and
xchg
jb
cmpsl
cld
push
jmp
mov
mov
sbb
mov
push
gs
cli
sub
and
test
mov
arpl
xlat
aas
test
cmpsb
jl
cmp
divl
lcall
add
fs
test
cmp
pop
pop
xor
jnp
cs
outsb
mov
sub
jg
sub
ss
jbe
jb
test
add
rolb
stos
push
push
adc
adc
into
aad
adcl
scas
xor
and
andl
shrb
pop
sbb
push
mov
jno
inc
cld
iret
adc
cmp
loop
insl
sbb
lods
fildl
xor
add
push
cmpsb
adc
lds
shl
scas
shlb
js
and
pop
jecxz
or
ja
leave
jo
or
test
mov
movsl
add
dec
jnp
dec
pop
pop
pop
pop
es
sarl
dec
xchg
add
sub
push
mov
lahf
jle,pn
mov
mov
inc
pop
and
ljmp
or
mov
pop
dec
mov
cmp
cmpl
cli
sbb
mov
std
popa
cmc
xchg
inc
xorl
int
out
jnp
in
dec
inc
sbbl
jecxz
clc
movsl
cltd
fistpl
xor
cmp
mov
in
mov
shrl
push
in
jo
scas
neg
xor
cmp
mov
jb
pushf
icebp
cmp
push
pop
adcl
cld
ret
into
in
xchg
cmp
dec
add
sub
add
int
ss
gs
fsubs
sub
loopne
jl
aas
fs
and
movsl
movsl
jmp
push
inc
mov
jmp
insl
mov
pop
negb
aam
adc
addl
push
xchg
cmp
lods
lcall
insb
inc
negl
mov
loopne
add
ror
xchg
js
xchg
xchg
or
and
mov
jnp
mov
and
mov
ss
xor
std
loopne
rorb
add
mov
push
push
cmp
sub
pop
mov
adc
xor
inc
das
jns
pop
and
das
insb
inc
sti
popa
cwtl
mov
xchg
inc
sbb
push
ret
push
out
stos
inc
icebp
outsl
lds
push
sbb
rcll
mov
int
pushl
sahf
and
push
in
lea
out
sbb
push
pop
dec
das
jmp
mov
jne
out
and
bound
push
adc
push
aas
gs
sub
imul
push
pop
sub
jge
add
loopne
lods
or
test
imul
imul
mov
pop
and
inc
je
dec
mov
test
aaa
adcl
push
out
call
cli
pop
and
sub
cs
pop
add
loop
pop
movsb
clc
dec
push
jle
pushl
pop
inc
jl
int3
rorb
mov
add
cwtl
mov
jae
xchg
or
repnz
lods
pop
mov
push
push
jle
setp
cmp
jns
dec
pop
subl
xchg
ds
cs
jecxz
lods
and
lods
add
push
mov
pop
and
add
jle
in
cmpsb
and
js
jns
jl
in
sahf
js
aam
out
adcb
int3
lret
stc
push
push
aas
das
es
testb
dec
icebp
shrl
xchg
cmp
ret
leave
dec
fisttpl
sub
mov
mov
dec
add
adc
and
mov
jecxz
or
lcall
xor
leave
sbb
and
xchg
sbb
lea
leave
shlb
ja
sub
jmp
jbe
nop
pushf
mov
jge
sub
or
arpl
xor
xor
sbb
adc
out
jnp
dec
out
jmp
movsl
int
int
fidivrl
scas
adc
push
repnz
dec
xchg
fs
push
jb
add
and
push
jns
add
adc
inc
fs
xchg
loop
insl
clc
vpmacswd
rclb
xchg
push
xchg
xor
rcll
aaa
cmp
adc
mov
mov
std
cli
pop
push
data16
sbb
arpl
or
xlat
int3
lcall
pop
loopne
xchg
rorl
das
movsb
jns
fs
mov
mov
sti
pop
mov
pop
scas
bound
and
stos
in
cmc
push
xchg
mov
ror
ret
dec
ret
inc
mov
xlat
lret
cmpsb
fists
xchg
mov
out
andb
repnz
ret
push
inc
test
jge
jecxz
add
add
cmpsl
lahf
ret
rorl
dec
inc
adc
add
dec
dec
popf
mov
dec
xchg
sub
dec
cmp
dec
in
sub
js
jp
andb
out
fsubrl
ja
xor
imul
xacquire
gs
xchg
jl
add
cmp
inc
inc
dec
in
or
leave
stos
mov
testb
dec
adc
aad
cmc
dec
mul
fimull
out
and
pop
cli
loope
movsb
and
xchg
and
mov
fcomp
or
in
cld
mov
pop
movsb
loope
loop
int
das
jg
add
test
les
xchg
push
push
hlt
push
ret
push
sub
jle
cs
jo
fisttps
out
push
fidivs
mov
icebp
mov
or
mov
rolb
lock
stos
jns
sbb
xor
popf
sub
int
out
inc
fidivl
lock
outsl
mov
mov
sub
shll
dec
cmp
outsb
cmpsb
popf
stos
add
div
xchg
xor
das
push
aaa
mov
repnz
packssdw
jb
popa
add
add
xchg
mov
lcall
and
jge
inc
cld
test
vunpcklps
into
push
inc
lret
fdivl
into
mov
rolb
xor
adc
sub
js
sub
call
and
fsubp
ss
sub
or
fst
dec
or
jge
stos
jecxz
xor
or
arpl
fstl
mov
inc
xor
mov
inc
out
mov
mov
pop
inc
into
sti
cmp
dec
adc
mov
jecxz
sbb
push
sub
dec
nop
out
js
lock
insb
push
imul
dec
push
push
mov
shrl
into
sub
jecxz
and
aad
push
xchg
and
xor
in
dec
jmp
dec
stc
sub
and
dec
cmc
jns
sub
dec
stos
push
orb
xlat
lds
xor
mov
mov
notl
adc
inc
mov
sbb
adc
in
sbb
mov
cmp
sti
adc
fbstp
int3
mulb
sti
mov
mov
xchg
push
shl
push
test
pop
iret
fnsave
scas
xlat
cmpsl
nop
jmp
xor
sbbl
jecxz
jmp
int
mov
fwait
aad
xchg
lahf
push
gs
cmc
inc
or
or
outsl
mov
orb
scas
pop
stc
cltd
adc
leave
xlat
test
mov
xor
repnz
cli
ret
pop
push
jno
jno
xor
jns
call
add
sub
xor
mov
push
rcrb
sbb
dec
and
sub
sub
in
pop
add
add
out
fstl
div
mov
push
push
lahf
into
out
adc
jl
push
int3
fisttpll
xchg
jl
imul
sub
add
imul
in
xchg
popf
iret
adc
subl
pusha
mov
into
int3
filds
lds
repz
jg
and
sti
fsub
in
repz
sahf
push
adc
imul
jmp
clc
mov
mov
add
mov
out
push
fs
es
ds
jne
or
mov
xor
js
dec
and
push
adc
mov
in
pop
xor
xor
add
mov
leave
mov
iret
and
cmp
mov
inc
lcall
adc
in
sub
adc
dec
outsb
es
and
iret
cmp
stos
or
cmp
xchg
clc
xor
lea
and
pop
loope
ror
jg
dec
stos
jmp
cmp
insl
sbb
xchg
and
jbe
int3
adc
adc
xchg
dec
and
data16
rcll
mov
mov
jmp
pop
pop
popa
inc
pop
mov
mov
out
das
or
mov
iret
add
loopne
std
dec
xlat
rcrl
fildll
dec
mov
imul
xchg
roll
stc
push
cmp
shl
int3
fnstsw
popa
xor
jb
and
lea
outsb
pop
cmp
cs
js
inc
aam
enter
aam
enter
push
adc
mov
hlt
pop
inc
xor
or
ret
sti
push
inc
cld
xor
cltd
adc
push
lcall
outsb
push
or
add
add
lret
lcall
stos
fisubrs
push
fsubrl
outsl
push
test
mov
add
inc
in
inc
mov
or
or
xor
fadds
repnz
addr16
call
sar
cmovbe
shrb
lcall
push
push
lea
test
fiaddl
sahf
inc
jp
enter
sub
cltd
pop
dec
xor
push
mov
jne
dec
in
ss
mov
popa
imul
xchg
ret
push
imul
lea
leave
cmp
imul
mov
int3
mov
lcall
aas
sbb
pop
test
dec
shrl
xchg
enter
cld
cli
lcall
pop
sahf
mov
and
adc
push
mov
test
and
hlt
mov
sbb
adc
sbb
loope
cwtl
mov
push
into
inc
mov
xor
pop
sbb
cmp
loopne
pop
dec
and
iret
jo
gs
dec
dec
fdivl
mov
test
leave
imulb
loope
popf
int
pop
fwait
aam
pushf
jb
mov
imulb
into
lock
or
out
and
mov
or
call
mov
test
rorl
xor
paddq
loopne
pop
es
lcall
sub
xor
xor
das
push
dec
jne
lret
scas
andb
lods
pop
push
push
imul
mov
mov
es
pop
icebp
fnstsw
push
in
xor
out
and
push
jge
mov
lret
or
cmpsl
test
xchg
mov
cs
rcr
or
and
fmull
pusha
dec
sbb
mov
incb
mov
push
in
push
vpunpckhdq
cli
push
xchg
mov
mov
sbb
push
enter
in
je
mov
and
cs
mov
sarb
or
js
lods
enter
push
clc
jle
lcall
jmp
cs
push
pop
inc
mov
test
mov
sti
out
aad
add
rol
minps
cmp
sub
push
and
mov
pop
insl
pop
iret
dec
icebp
out
or
mov
fwait
jo
jmp
pop
fs
push
mov
mov
cs
and
sub
dec
push
push
cwtl
mov
jg
lock
add
mov
push
and
movsl
dec
int3
xchg
add
xor
mov
ret
stc
insb
lret
add
shlb
frstor
inc
movsb
lods
stc
fwait
bound
ja
leave
leave
pop
dec
sarb
out
fsubrs
cmc
pop
sar
push
sub
mov
out
jns
std
insb
add
mov
je
xchg
ret
cmpsl
shlb
pop
rol
and
pop
mov
jo
fistl
cmpb
jl
arpl
xorl
pop
fistl
sub
repnz
or
push
aam
call
cmp
xor
lret
inc
daa
mov
rorl
mov
xchg
mov
bound
fsubl
inc
push
add
stos
mov
jns
push
clc
repz
xor
add
add
cltd
pop
jo
push
fxam
xchg
daa
xchg
in
dec
inc
mov
popfw
jl
inc
sbb
lea
faddl
lods
xchg
mov
les
inc
add
mov
sbb
sub
sbb
xor
push
and
xor
jb
dec
xchg
push
gs
mov
cmpsl
stc
repnz
cld
movsb
xchg
insl
dec
mov
xchg
dec
jb
lea
lods
or
sub
xchg
sbb
lret
outsb
xor
flds
fwait
mov
jl
lods
jno
scas
inc
mov
mov
dec
inc
sub
cmp
cmp
xchg
add
push
mov
lahf
paddsb
pop
push
dec
clc
fisttpl
jne
sahf
fucomip
call
mov
imul
inc
cmp
push
push
jmp
iret
cmp
mov
mov
ds
das
push
iret
jb
mov
arpl
ret
ret
jne
hlt
out
add
imul
sbb
imul
dec
test
or
and
xor
push
mov
gs
jbe
cmp
fisubrl
cltd
push
lcall
pop
jns
mov
inc
jb
inc
mov
pop
sbb
sti
and
mov
sub
xor
inc
push
add
adc
andl
mov
pop
sbb
pop
push
into
test
push
out
push
nop
enter
cmp
js
and
ret
jl
adc
f2xm1
mov
xchg
adc
daa
cmc
inc
pop
inc
sub
repz
and
sbb
shrb
sahf
test
cld
jns
sbb
sarb
out
push
mov
and
jne
icebp
mov
pop
fidivrl
sub
scas
imul
int
cmp
inc
mov
cmp
jl
jno
mov
lret
dec
lods
sahf
push
hlt
xchg
mov
pop
outsb
add
jne
adc
inc
stos
or
ljmp
iret
add
js
cmp
lahf
inc
jg
pop
dec
push
data16
cmc
or
mov
and
push
cmpsl
fdiv
adc
mov
push
or
es
stos
adc
sti
push
xlat
or
hlt
or
mov
sbb
add
or
int3
mov
mov
mul
mov
je
xor
decl
xor
dec
out
sub
push
call
sbb
mov
cld
sbb
cmpsb
rcll
insb
mov
fcomip
jb
ljmp
push
ljmp
das
cmpb
fnstcw
mov
mov
cs
in
in
mov
inc
add
test
push
add
push
lcall
popf
jecxz
inc
cmpsl
pop
and
cmp
mov
sbb
mov
in
pop
jl
add
xor
lods
out
lea
dec
cmc
add
in
adc
int3
cmpsl
mov
in
cmp
mov
clc
cmp
shlb
jge
mov
and
test
rcrb
mov
xor
mov
sti
loopne
dec
popa
xchg
and
inc
jle
inc
out
push
pop
mov
mov
xor
cmc
and
xlat
in
and
mov
cmp
aaa
call
repnz
hlt
fidivl
sbbl
jecxz
out
xchg
push
jo
jno
fisttpll
cmpsb
inc
or
faddl
mov
ljmp
mov
pop
pop
test
lahf
and
or
jo
dec
mov
xchg
dec
aaa
gs
aam
mov
aad
xchg
ret
and
loopne
mov
rolb
sub
sub
fidivs
fsubrs
pusha
sahf
fdivr
sarb
int
dec
jo
and
mov
in
or
pop
jecxz
pop
jno
dec
aad
dec
rclb
lret
mov
jns
adc
ds
xchg
mov
rclb
scas
xor
xchg
jbe
mov
dec
inc
nop
jb
sti
fsubl
xlat
ds
sti
iret
dec
lcall
mov
cmp
and
enter
jno
mov
jmp
out
lret
mov
rorl
cli
repnz
xor
leave
xchg
repz
imul
cmp
or
frstor
mov
rcrb
mov
sub
ret
pop
mov
sti
lret
mov
outsb
adc
lods
sbb
sub
test
scas
fstl
sub
cmp
sbb
pop
and
mov
sbb
pushf
dec
pop
in
push
lcall
in
mov
cld
sbb
mov
sbb
mull
daa
mov
mov
jmp
ja
addl
push
sbb
data16
pop
or
pop
sbb
scas
jp
sbb
lea
and
or
push
fadd
inc
mov
inc
xor
test
jne
ret
add
hlt
inc
nop
jecxz
xor
sahf
xchg
leave
dec
cmpl
push
icebp
inc
xchg
into
inc
mov
sub
in
sahf
sub
rcl
jl
hlt
clc
daa
and
outsb
lea
add
hlt
call
jns
loop
sub
jns
ss
out
dec
jns
add
fldl
out
jns
mov
add
push
cmp
jmp
fistps
jmp
data16
jbe
repnz
xchg
jge
mov
sti
aaa
push
fdivp
lods
lret
and
cmpsl
cs
insb
adc
cwtl
add
cmpsb
and
inc
adc
jp
cld
xchg
push
icebp
xor
orl
push
je
push
shl
mov
pop
gs
push
outsl
ja
push
rorl
repnz
jmp
and
and
pop
int3
lds
popf
mov
xlat
sti
in
fldl
js
mov
push
test
sbb
and
jae
xchg
and
lods
test
call
loopne
test
push
outsl
xchg
or
test
lret
loop
xchg
jecxz
leave
imul
sbb
repz
mov
mov
push
pop
insb
stc
out
jp
dec
ret
cmp
out
pop
mov
fwait
pop
lods
pop
aam
push
inc
push
push
push
mov
repz
aaa
dec
nop
outsb
mov
mov
popf
pop
mov
and
mov
push
cmp
dec
aas
je
pop
ror
out
in
jnp
std
dec
fidivrl
jb
or
ja
fnstcw
mov
rcrb
jp
push
adc
ds
inc
sub
nop
dec
hlt
cld
shr
push
cli
push
lds
faddl
hlt
iret
aad
mov
hlt
xor
dec
sub
push
cmp
xor
int
call
ret
cld
mov
outsb
mov
xor
imul
mov
out
ljmp
std
lret
jp
xor
arpl
xlat
sub
sbb
mov
fistps
dec
sbb
cli
roll
inc
mov
add
sub
adc
xlat
rcrb
imul
mov
or
xor
ret
push
pop
roll
adc
or
and
sub
xchg
sbb
and
cld
cmp
push
insb
insl
decb
mov
popa
leave
jle
jno
xchg
sub
xlat
pop
xchg
adc
dec
xor
jnp
shl
mov
out
icebp
fsts
lahf
es
mov
mov
or
mov
cs
dec
xor
les
leave
or
jle
jp
mov
gs
jns
cmp
xchg
pop
adc
imul
sbb
repnz
sarb
testb
jp
dec
cmp
cwtl
ret
pop
outsl
or
add
dec
test
jb
les
push
xor
add
or
dec
xchg
lcall
pop
or
sbb
int
dec
push
xchg
lock
aas
call
inc
push
jo
stos
xchg
stos
fnstcw
add
mov
pop
xchg
push
mov
push
xchg
cmp
or
lods
mov
or
cmp
and
stc
test
sbb
jge
xor
lret
sbb
aam
jecxz
outsl
repnz
xchg
lods
cmpsb
nop
movsb
das
sbb
push
jmp
or
out
sbb
mov
jecxz
fisttps
ja
mov
or
add
mov
mov
jo
movsl
adc
nop
cmpsl
outsb
cwtl
push
xlat
pop
out
leave
inc
sbb
jb
xlat
sub
push
ret
sub
sbb
inc
adc
lods
sbb
cmp
enter
mov
inc
call
cmc
lock
or
or
test
xchg
mov
pop
das
inc
cmpsl
fwait
loop
sti
stos
in
lods
inc
adc
inc
dec
and
fwait
mov
or
mov
and
int
insb
ret
mov
addr16
xchg
add
push
arpl
adcl
xorl
lcall
mov
mov
sahf
repz
out
pop
pop
dec
xchg
iret
mov
rclb
cld
mov
sbb
push
rolb
mov
push
loop
adc
xchg
jge
mov
mov
roll
and
das
bswap
push
les
movsl
mov
fisttpl
cmp
and
in
out
fadd
mov
fidivrl
loope
call
jl
movsl
ja
xor
jns
gs
and
lock
in
jo
imul
dec
dec
push
pop
adc
xor
lahf
je
add
inc
nop
xchg
and
mov
xlat
mov
subb
insl
push
mov
push
pop
mov
add
adc
shll
out
or
jb
icebp
ljmp
xor
loope
xchg
sbb
push
pop
and
out
xchg
inc
mov
push
fidivrs
cld
insb
cmp
out
push
popf
jge
sbb
popa
loop
cs
in
je
pop
cs
aaa
adc
lcall
sbb
jg
out
arpl
lcall
jbe
cmp
int
ret
xchg
dec
adc
push
movsl
sahf
es
jno
adc
push
imul
add
ret
add
inc
mov
push
fsts
lahf
inc
pop
insl
and
push
or
push
in
sbb
gs
xchg
sub
test
aaa
inc
jb,pn
adc
add
test
add
mov
push
pop
xchg
movsl
or
fsubrs
inc
addr16
cs
add
jno
xchg
sub
lret
lahf
data16
dec
imul
outsl
std
mov
xor
fistl
jb
aaa
testl
and
pop
out
lahf
ret
mov
dec
add
and
out
ficompl
enter
push
xchg
pusha
mov
shll
lock
ficompl
repz
nop
mov
xchg
stos
or
mov
push
jmp
mov
cli
xchg
xchg
pop
sub
cmpsl
scas
add
mov
adc
in
push
xchg
adc
push
fbld
mov
adc
pop
and
add
lods
adc
test
mov
shlb
lahf
cmpsl
add
pop
push
adc
cs
mov
sub
leave
cmpb
fisttpl
nop
jge
mov
clc
into
bound
fs
iret
add
int
movsl
or
push
icebp
test
or
inc
mov
outsb
inc
push
aad
call
dec
in
pop
cmp
dec
lcallw
test
xchg
mov
out
aad
pop
xorb
jb
aaa
sbb
push
inc
push
jne
inc
mov
mov
imul
ret
adcb
rcll
add
bound
rcrb
sahf
stos
sbb
mov
test
out
cmc
mov
jg
pop
jbe
mov
xchg
outsb
adc
aas
fsts
hlt
cmc
xchg
push
pop
les
inc
insb
xchg
outsb
mov
xchg
pop
jb
sbb
dec
adc
inc
loop
push
outsb
je
iret
adc
ret
mov
or
cmp
movsl
sub
pop
pop
addr16
out
sbb
sub
pushf
cmp
cmp
cmc
out
inc
loop
sahf
push
or
stc
xchg
fnstcw
mov
mov
xor
add
insl
in
mov
adc
loope
test
int3
xchg
xchg
pop
cld
push
cld
jnp
je
aaa
pop
pop
xor
lret
sti
xor
and
pushw
xor
push
push
daa
data16
dec
cmpl
dec
scas
sub
xor
repz
fidivrs
arpl
das
lcall
adc
stc
xchg
jno
ja
movsl
je
and
xchg
mov
std
fldcw
and
das
pop
mov
xchg
or
dec
adc
sbb
rol
hlt
aaa
int3
jge
and
cmpsl
cmp
jno
pushf
mov
sbb
xlat
pop
pop
jae
andl
ficoml
cs
test
scas
sti
out
in
imul
mov
outsb
or
mov
mov
inc
push
xchg
sub
into
mov
jae
bound
jb
xor
add
mov
mov
mov
jno
inc
xchg
add
jae
in
fwait
ret
sbbb
mov
cmc
mov
sub
ss
dec
jmp
lret
xor
out
mov
imul
ds
cmpl
pop
fwait
cmp
std
mov
test
lret
push
and
mov
push
cmp
mov
lret
int3
jle
ret
bound
add
and
mov
jg
mov
jle
mov
movsl
in
cmp
stos
inc
mov
test
loop
mov
cmpl
insb
loope
dec
lock
sbb
sbb
push
sbb
pop
das
fmuls
push
sub
sub
dec
testb
mov
outsb
xchg
decb
aaa
cmp
mov
outsl
adc
and
lret
xchg
xor
add
push
stos
enter
aaa
dec
dec
scas
pusha
out
dec
pop
mov
xor
push
xchg
popa
inc
fidivrl
mov
ficomps
adc
sahf
push
data16
fisttpl
push
mov
inc
sbb
mov
jno
jle
je
and
pop
and
scas
inc
jle
and
lods
bound
outsb
inc
stos
in
mov
lret
lods
mov
jo
shlb
sti
out
push
inc
jg
pop
xchg
test
dec
cmpsb
dec
push
adc
mov
mov
popl
xor
outsl
adc
iret
pop
pusha
cld
push
pop
movsl
lea
and
outsl
adcb
lea
nop
cltd
addr16
cmp
into
mov
pop
jns
mov
leave
jge
daa
sti
fmuls
mov
sbb
mov
jl
pop
in
gs
mov
mov
ds
fs
mov
lock
nop
loope
mov
push
test
pop
xchg
sbb
test
repz
cmp
dec
enter
aam
xchg
test
fdivrp
orl
mov
jns
mov
outsb
in
mov
add
shr
sti
imul
sbb
xor
mov
push
add
mov
push
fs
xor
xchg
sbb
mov
add
das
inc
or
cmp
pop
push
inc
push
adc
adc
xchg
mov
mov
daa
inc
cli
lahf
push
sub
outsb
push
je
cwtl
cld
out
dec
mov
add
cmp
in
xor
cmpsl
jge
int3
les
jns
in
mov
insl
cwtl
ret
rorb
fdivl
mov
add
test
sub
aas
mov
sub
mov
jl
add
ret
mov
xor
icebp
push
mov
pop
dec
jb
inc
sarb
mov
jmp
scas
clc
pop
mov
aad
cltd
test
sbb
out
out
ja
ret
dec
filds
ljmp
popl
arpl
fwait
mov
movsl
mov
clc
jecxz
sarl
dec
cmp
mov
pop
cmpsl
test
xchg
fldl
lock
jmp
aam
mov
mov
push
lcall
andb
movl
mov
pop
lret
cmp
inc
ss
lock
xor
inc
push
and
mov
das
pop
lods
aas
sahf
mov
inc
fmull
jb
movsl
xchg
cmpsl
mov
bound
push
mov
sbb
pop
es
jg
scas
insb
or
pop
outsb
scas
sahf
out
loop
lret
frndint
sar
push
and
push
cld
or
sti
insl
aam
loopne
dec
jecxz
dec
flds
rcrb
popa
mov
mov
pop
mov
in
xchg
cmp
xorl
inc
push
cmp
movsl
movsb
and
push
loopne
shll
mov
pop
and
xchg
sbb
xchg
into
push
adc
and
push
test
out
add
and
icebp
stos
cmc
pop
jmp
ja
outsb
xor
mov
or
test
mov
mov
sbb
hlt
and
mov
dec
push
cmc
outsb
or
jbe
push
push
aam
fnstsw
sbb
xorb
pop
xchg
pop
imul
mov
xchg
stos
and
jb
icebp
pop
in
xchg
push
cmp
insb
cmp
aaa
inc
cmpsl
fsubrp
hlt
xor
ret
gs
mov
ret
add
pop
and
xchg
pop
add
js
outsb
fwait
dec
shll
adcl
push
popf
cmp
pop
adcl
push
shlb
cs
popf
or
ljmp
inc
xor
mov
xor
xor
test
arpl
jg
xchg
lret
scas
pop
dec
aam
jecxz
or
jg
movsb
mov
cltd
bound
in
out
push
adc
std
mov
int
testb
leave
add
sub
cmp
jmp
pop
test
cmpsl
inc
mov
movsb
scas
mov
mov
pushf
adc
xor
jg
mov
repnz
mov
sbb
mov
les
mov
mov
imul
adc
movsb
push
out
pop
cmpsb
mov
mov
pop
pop
dec
push
inc
add
outsl
dec
xchg
ljmp
jno
add
mov
inc
xor
dec
push
das
jmp
fldenv
ja
aam
rorb
outsl
xchg
and
rcll
cmp
xchg
shrd
mov
mov
jl
and
pop
lret
aas
out
lret
xchg
call
mov
in
xor
flds
sahf
enter
pop
push
aas
movsb
mov
jl
in
jnp
movsb
imul
add
mov
popf
lcall
add
mov
dec
mov
jo
fimull
xchg
mov
jl
pop
xor
jge
add
ja
xchg
iret
jbe
cmpsb
es
jo
jl
cmc
adc
mov
fcoms
ja
cmpsb
push
xorb
fldt
call
icebp
cmp
rcll
xor
fldcw
inc
out
imul
lret
shll
in
mov
jge
lods
xor
dec
xlat
in
lahf
adc
pushf
scas
jmp
pop
pop
popf
mov
ja
lea
pop
movsb
fdivr
mov
loopne
mov
dec
iret
addr16
push
jae
popf
and
mov
dec
xor
ss
mov
hlt
stos
fwait
iret
xor
leave
xchg
xchg
sub
mov
add
and
repnz
lods
adc
int3
push
xor
pop
stc
lds
jecxz
cmpl
movb
jnp
out
rorb
insb
inc
js
mov
cmp
rcrl
xor
sub
and
ss
and
out
sbb
sub
mov
int3
push
push
push
sti
test
xchg
sub
fldln2
out
fs
sub
imul
and
rcrl
in
xchg
bound
xchg
mov
negb
test
cmp
in
mov
jecxz
cwtl
cmp
xchg
shll
xor
inc
sbb
push
pop
cmp
or
out
int
fwait
inc
es
sarl
mov
int
mov
mov
sub
enter
mov
cs
cmp
push
push
and
or
stc
cmp
in
int
jno
popa
test
and
jmp
add
fcmovb
js
or
je
icebp
xor
mov
int
push
add
pushl
jmp
add
gs
in
cld
and
rcrl
mov
push
nop
outsl
xchg
in
out
addr16
push
lahf
addr16
je
mov
sarb
test
mov
and
aas
mov
mov
es
xchg
xchg
aad
rcr
mov
in
lds
cmc
cmpsl
mov
pand
orl
mov
iret
cmp
inc
add
mov
pushf
xor
sub
out
cmpsl
into
aad
and
jp
cmp
push
scas
jnp
mov
stos
es
dec
jnp
dec
mov
and
out
js
mov
mov
sub
rol
dec
dec
lods
jmp
addr16
ljmp
cltd
pop
and
ror
shlw
or
mov
insl
pop
iret
clc
cwtl
enter
and
inc
xor
jo
cmpsl
push
or
aas
cmpsb
pop
adc
call
clc
or
adc
sti
cli
jmp
adcb
fldt
mov
fmull
push
mov
xor
push
fldt
xchg
ret
xor
rolb
and
and
and
cmp
roll
dec
pusha
add
mov
movsb
sti
or
aam
mov
xor
rorl
jecxz
shlb
pop
mov
cmp
fdivr
lea
pop
mov
dec
arpl
adc
cli
jge
xchg
sahf
xor
xor
loop
xor
mov
aad
lea
test
inc
scas
pop
data16
ret
in
xchg
inc
in
es
rcrl
call
push
aam
xorb
push
lret
mov
nop
rorl
push
cltd
xor
xchg
xchg
add
mov
lret
cmp
loop
sbb
or
movsl
xor
mov
loop
lcall
mov
subb
jge
mov
test
jmp
scas
inc
imul
jle
jno
lods
andb
clc
call
lods
jo
pushf
leave
cmc
stc
jae
orb
loop
hlt
xor
sahf
xor
call
or
jb
push
dec
mov
dec
xchg
sub
sti
sti
mov
jne
mov
jne
enter
push
mov
xor
lock
loopne
xchg
mov
lret
or
fs
or
out
adc
int3
adc
mov
jne
fbld
pushf
dec
into
sbb
jb
lcall
inc
push
ljmp
pop
mov
iret
sub
pop
inc
aaa
jne
cmp
or
out
scas
xchg
arpl
enter
push
push
enter
jne,pn
lods
cmc
movsl
pop
mov
je
hlt
sbb
add
sbb
fldcw
int3
mov
dec
pop
sub
add
aam
in
movsb
and
int3
loope
pop
add
mov
std
dec
push
push
lret
test
mov
jecxz
and
add
out
push
out
call
lahf
scas
ljmp
push
fs
mov
push
add
fstl
jb
and
mov
push
lds
daa
pop
sbb
xor
mov
icebp
adc
push
test
sub
sub
xlat
push
jle
pop
aaa
sbb
out
push
lods
push
jecxz
inc
cmp
sti
sub
dec
shll
mov
dec
xchg
mulb
std
mov
sti
loop
repz
out
mov
sub
jecxz
arpl
clc
and
sbb
leave
es
popf
gs
outsb
lret
push
mov
add
loope
mov
push
cmp
cs
stc
mov
jbe
add
das
sahf
hlt
inc
inc
push
sub
mov
outsl
loopne
fcomps
lods
push
sub
xchg
lahf
rcll
fists
loopne
pop
or
mov
xor
pusha
fwait
sub
out
mov
mov
popf
arpl
pop
or
js
push
jmp
cmp
pop
mov
imul
push
push
in
add
stos
insb
das
sbb
loopne
add
pop
adc
mov
scas
add
jp
or
sti
xchg
jnp
jecxz
add
and
cli
push
ficoml
jno
sbb
fists
scas
ret
sbb
mov
sti
dec
xchg
jnp
gs
mov
loope
fcmove
adc
pop
mov
jno
addr16
adc
mov
adc
insb
add
push
jns
in
jns
inc
orl
jmp
jno
int3
stos
mov
out
movsb
test
fidivrs
and
fisttpll
cmpsb
pop
fcomi
insb
test
and
and
stos
ljmp
out
imul
mov
subb
outsl
xlat
mov
fwait
ja
shr
ljmp
out
pop
xor
mov
cmp
pmulhw
adc
mov
faddl
jecxz
push
sahf
shrb
push
add
int3
popf
xchg
rcrl
repz
push
fwait
pop
inc
into
div
arpl
xchg
push
clc
inc
cli
cmp
out
pop
mov
fidivl
pop
adc
fisubl
xor
dec
jg
ficoml
sub
cmpsb
xchg
fcomi
rcrl
aad
add
mov
mov
sub
sbb
mov
mov
into
sbbl
cmp
adc
pusha
bound
inc
imul
daa
pop
sub
fcomp
dec
mov
mov
dec
ret
lret
push
xor
add
mov
daa
arpl
push
test
mov
shrl
cs
mov
repnz
daa
mov
jl
and
cltd
inc
cli
rolb
xchg
daa
jo
jmp
mov
cmpsb
and
sub
ss
jb
inc
nop
int3
adc
cli
ror
in
in
lods
jo
shr
jno
mov
test
jb
lret
int
aam
fsubrl
dec
jl
loope
sub
cli
push
pop
xchg
popa
mov
adc
popa
cmp
mov
push
into
fldl
lret
scas
jmp
sbb
idiv
mov
js
fs
out
xor
out
xor
xchg
outsl
pop
aas
push
sub
mov
pop
ja
xor
xchg
sub
jge
dec
rorb
test
hlt
jmp
enter
jne
test
xchg
in
ja
popf
movsl
outsb
mov
roll
cmp
and
enter
adc
mov
daa
fisttpll
xchg
hlt
jecxz
int
orl
out
dec
jle
and
ret
leave
in
or
out
adc
inc
jo
push
and
dec
sub
add
cmp
std
xor
jnp
das
cld
cmp
out
addr16
xor
test
add
dec
jb
enter
inc
movsl
jbe
repnz
shll
orl
pusha
xor
jl
sub
xor
ljmp
test
clc
xlat
jge
fs
cmp
je
xchg
mov
mov
aas
mov
fs
pop
push
mov
stos
outsl
mov
mov
jnp
mov
jb
into
movsb
or
mov
add
mov
push
stos
test
pop
xchg
pop
and
ss
xor
ja
dec
xchg
cmc
push
popa
pop
js
subl
xchg
dec
loop
jmp
jbe
push
lea
mov
sub
jle
jmp
test
push
in
xor
jns
add
add
xchg
clc
test
lea
push
mov
fwait
rorb
mov
sub
popa
sub
pop
lock
cltd
mov
jp
add
inc
mov
add
das
inc
pop
xchg
xlat
divl
mov
jmp
xor
popa
or
call
fcoms
rcr
sbb
loope
push
lcall
insb
mov
ss
pop
shlb
scas
shrb
jp
mov
mov
push
das
or
movsl
dec
mov
in
xor
dec
sahf
dec
cld
subb
stos
xchg
repz
movsb
adc
mov
sub
inc
cmpsl
dec
pop
mov
sub
push
xor
inc
add
mov
lret
push
push
int
sahf
sti
icebp
cs
leave
in
or
test
xor
xor
pusha
cmp
stos
int
push
in
sub
lcall
add
xor
mov
jle
mov
mov
pushf
jb
xchg
fdivs
mov
adc
xchg
cli
cmpsb
mov
insb
xchg
popf
arpl
cwtl
sahf
xor
arpl
lea
fidivrl
mov
xlat
fimull
movsb
jne
add
inc
cmp
std
sbb
dec
dec
push
mov
repnz
fbld
clc
add
push
mov
imulb
push
mov
or
mov
mov
dec
push
push
push
push
outsl
push
add
mov
xor
sarl
push
fistps
jnp
adc
sti
stos
lods
jbe
jno
mov
data16
inc
das
jno
cmp
sarl
sbb
lods
xchg
repz
sub
adc
or
test
in
push
add
ss
sahf
mov
aas
or
test
loope
jne
lock
and
ja
stos
xor
sub
lods
ja
divb
fiaddl
add
or
int
mov
jg
fstps
mov
mov
xorl
push
pop
mov
mov
enter
inc
or
jns
es
scas
lret
xor
fisttpl
stos
push
push
mov
add
arpl
sub
fdivrs
lret
rcrb
xchg
int3
sbb
xlat
add
fwait
pop
stos
imul
jne
out
xor
imul
fmull
lcall
cmc
fimuls
stc
scas
add
mov
stos
jmp
cli
scas
mov
adc
sub
rorb
sbb
cmp
cmpsl
push
test
daa
mov
inc
jge
and
mov
xor
lds
adc
dec
lods
scas
fs
cld
or
clc
push
cmpsl
dec
jl
adc
xchg
cmp
inc
ret
mov
icebp
xchg
pop
add
jb
push
fiaddl
lcall
loopne
fdivrl
push
push
or
cli
outsb
xchg
cmp
inc
cmp
cmpsl
sbb
call
insb
scas
mov
and
adc
scas
mov
sub
push
jecxz
mov
or
scas
mov
ja
or
rclb
pushf
dec
jbe
loope
out
mov
daa
popa
push
cmc
jbe
lahf
ret
inc
cmp
adc
push
push
jae
inc
xchg
iret
cli
dec
mov
adcl
or
lds
test
and
jnp
mov
push
bound
pushl
je
jno
bound
hlt
add
data16
inc
and
jmp
mov
xchg
cmp
mov
adc
or
dec
lods
pop
sub
push
mov
pmulhuw
inc
bound
sahf
out
sarb
push
pop
pop
test
push
sbb
jg
test
jmp
add
xchg
jne
or
test
mov
mov
call
dec
cmp
sub
lcall
fs
pop
mov
inc
js
mov
sub
or
push
cmpsb
inc
data16
or
loop
mov
xchg
jne
setne
ss
popa
lods
ds
nop
and
mov
aaa
test
test
test
jno
lahf
jecxz
or
in
call
repnz
mov
adc
mov
adc
pop
lcall
ds
subb
sub
aas
shrl
aad
xor
lret
push
jg
scas
adc
mov
cmp
cmc
xchg
cmp
in
stc
fdivr
add
into
pop
lcall
in
shlb
push
inc
dec
pop
sbb
sub
pop
cmpsb
xor
push
lahf
addr16
sbbb
jne
mov
cmc
mov
adc
ret
std
out
jg
mov
push
jmp
popf
idivl
repnz
push
adc
dec
shrb
cmp
pop
dec
out
cmpsb
or
cli
sbb
fsubl
fsub
pop
jp
pop
push
adc
int3
outsl
mov
mov
xor
and
inc
dec
sbb
jne
jmp
fs
cmp
data16
add
gs
inc
or
sbb
mov
sarl
jns
mov
xchg
test
cltd
je
add
xor
xchg
cmp
int3
sub
or
mov
lods
push
push
mov
push
imul
mov
das
add
jge
add
xchg
dec
lret
mov
sbb
jbe
cli
pusha
mov
xchg
mov
testl
jo
fisubrl
repz
mov
mov
cmpsb
in
xchg
push
rolb
mov
enter
mov
out
or
rcll
dec
adc
dec
les
imul
repz
mov
or
mov
scas
push
xchg
aad
popf
adc
je
inc
popf
sub
pop
fcmovnu
and
in
and
outsb
lea
dec
mov
mov
movsl
adc
push
cmpsb
jmp
ljmp
hlt
mov
mov
adc
adc
test
xlat
pop
bound
sbb
stos
cwtl
pop
js
cmp
and
sub
push
mov
xor
add
mov
addr16
and
mov
insl
pop
fisttpll
pop
inc
inc
sub
enter
xchg
xor
push
jbe
inc
rolb
inc
loope
or
add
adc
testb
lods
insl
jge
aaa
in
xchg
stos
fdivrl
outsl
add
shll
loopne
sub
dec
cmp
pushf
push
outsb
lret
mov
pusha
out
cmp
sbb
mov
lahf
mov
loope
dec
jl
cmc
std
pop
movsl
push
and
cli
xchg
or
mov
adc
ss
and
into
pop
fisubs
push
and
mov
aad
xlat
xor
mov
bound
orb
insl
sub
adc
and
in
out
jp
push
mov
add
push
add
sbb
cmp
jns
adc
sbbb
mov
or
insl
pushf
outsl
aaa
lcall
xchg
mov
insl
sbb
pop
jp
push
nop
lds
lret
cmp
inc
add
or
mov
xorb
loopne
cmp
mov
out
mov
cmpsb
push
mov
cmp
aad
fcoms
pop
mulb
stos
outsb
dec
pushf
pusha
out
scas
xor
mov
and
lock
or
jecxz
inc
lahf
add
mov
jnp
repnz
sub
mov
int3
out
lret
mov
movsl
xor
pushf
jns
int
pop
and
fcmovnb
jmp
cmp
mov
ffreep
out
sub
pop
lahf
lods
xor
das
push
jg
sbbb
dec
call
arpl
cmpsb
jae
les
insl
pusha
clc
pop
xchg
jnp
aas
pop
fsubs
in
out
xor
sub
mov
sub
ss
loop
lret
sbb
call
ja
jb
lret
pop
cmc
push
or
push
jae
mov
dec
pop
xchg
enter
inc
sub
pop
sbb
je
xor
loopne
bound
in
test
aaa
adc
pop
jecxz
sahf
adcb
inc
sub
xor
jge
cmpb
pop
lock
pop
jnp
jle
insl
jnp
sbb
dec
jno
in
stos
mov
sarl
jnp
data16
mov
jns
xchg
nop
lahf
jno
pusha
sti
loopne
inc
jmp
pushf
mov
lock
ss
mov
ret
add
pop
and
divb
push
jecxz
shrb
popf
jo
out
fsub
arpl
loop
mov
dec
shrl
sub
in
jecxz
ret
mov
xchg
loop
test
lahf
outsb
jp
xor
in
and
sub
add
dec
rcll
pop
js
daa
add
adc
xchg
xor
push
inc
push
sbb
cmp
and
inc
mov
sub
aad
adc
lods
outsl
xchg
icebp
je
add
cld
xor
lret
insl
nop
ret
mov
adc
aas
lock
iret
pusha
and
and
xchg
push
jmp
mov
dec
shll
mov
cs
ss
push
dec
dec
jo
sete
push
aaa
mov
test
xchg
test
mov
cs
les
xor
sub
jae
sbb
adc
sbb
push
adc
daa
popf
mov
lods
and
jae
mov
imul
and
rclb
mov
and
pop
sbb
cli
add
imul
mulb
loop
xlat
add
mov
cld
mov
scas
sahf
push
int
and
clc
out
jmp
and
enter
inc
push
jb
cmp
cmp
pop
int3
in
ja
fbstp
movsb
nop
inc
dec
mov
lcall
push
repnz
jle
test
aaa
lahf
arpl
jnp
movsb
mov
inc
mov
cmpsl
aad
nop
dec
jge
cltd
mov
pop
shrl
in
test
add
jae
int
push
dec
pop
xchg
test
hlt
xor
in
add
push
in
test
adc
jecxz
in
sub
inc
ds
movsl
push
adc
mov
ljmp
ds
xchg
pop
or
inc
out
sub
push
sbb
push
sbb
sbb
js
cmp
or
fimuls
das
add
icebp
push
nop
xor
xor
push
jnp
pop
inc
icebp
fcoms
fdivrp
ret
xor
mov
push
sbb
jmp
fdivs
inc
mov
push
lea
sbb
ja
mov
mov
rorb
out
cwtl
test
push
add
call
push
jo
adc
xlat
mov
adc
sahf
adc
fnstsw
dec
and
adc
sub
popl
fsubr
out
outsb
sbb
mov
mov
call
inc
roll
out
pop
pushf
push
call
mov
inc
sti
scas
imul
sub
movsl
cmpsl
dec
fcomi
jae
push
jp
mov
repz
or
int
push
sub
lahf
xlat
add
aad
cmp
dec
loopne
xlat
xor
clc
dec
icebp
loop
jge
push
test
neg
cmpsb
push
jmp
cmp
sub
jae
push
enter
aas
test
sti
lret
test
fnstcw
xor
sub
and
jb
inc
mul
inc
out
in
xchg
push
xor
xchg
adc
pushf
xor
and
sub
xchg
fnstsw
es
ds
je
aas
int3
test
rolb
shll
imulb
inc
popa
daa
fsubr
mov
into
mov
int
mov
fcomp
cmp
sbb
lret
inc
inc
jno
adc
jnp
iret
outsl
nop
fstl
sub
add
add
movsb
insl
jmp
stos
cli
or
sub
pop
pushf
cmp
or
sbb
sub
ja
xchg
pusha
sbb
mov
std
push
jmp
pop
and
shll
inc
out
pop
push
cld
mov
imul
mov
inc
es
sub
jp
push
bnd
adcb
mov
loope
sbb
in
out
fbld
cs
jns
stos
jnp
cmp
dec
loope
xchg
mov
dec
push
jle
ja
sbb
pusha
lock
cmpsb
inc
add
or
ret
push
daa
jb,pn
out
jge
bound
pop
imul
jne
inc
mov
sbbl
pushl
dec
dec
iret
or
daa
push
jp
test
adc
mov
pop
add
das
lea
enter
add
cltd
in
jp
and
sbb
sub
into
cltd
test
push
pusha
cmp
xor
inc
push
xor
movb
ficomps
dec
add
aas
in
jb
dec
data16
mov
xchg
insb
iret
adc
jbe
jle
push
dec
daa
jmp
xor
fwait
mov
push
push
mov
sti
nop
xor
out
pop
imul
xor
iret
mov
jae
cmp
push
test
cmp
cmp
adc
sti
sub
roll
sub
dec
xor
jae
xor
je
sbb
aam
stc
stc
clc
bound
ja
lsl
ficoms
inc
and
xlat
sbb
cli
int
fsts
mov
pop
mov
scas
fs
fildll
imul
int
test
int3
shrl
sub
or
inc
rol
pop
lret
aam
mov
or
and
mov
jae
cltd
dec
dec
movsl
lds
sub
nop
cld
nop
jno
mov
xchg
mov
ret
jbe
call
mov
icebp
mov
cli
fwait
inc
mov
ret
lahf
push
outsl
lds
lods
adc
popf
dec
popf
mov
and
sbb
fwait
add
jg
and
out
insb
xchg
mov
fdivrs
dec
mov
les
imul
mov
ss
add
call
pop
adc
jp
mov
dec
call
daa
cmp
movsb
cmp
or
sbb
lds
cmp
push
repnz
xchg
and
and
out
insl
stos
cld
mov
mov
sub
cmp
pop
int
mov
cmp
sub
test
push
cli
mov
adc
sbb
cmpsl
jmp
jge
nop
cmp
dec
xchg
dec
gs
decb
xor
bound
pop
je
shll
test
lea
fs
mov
or
push
inc
int3
jnp
cmpsl
jmp
dec
pop
andb
enter
mov
xor
jbe
mov
mov
adc
gs
es
xor
cltd
jmp
mov
enter
push
in
and
cmc
stc
iret
sub
cwtl
or
int
lods
lahf
inc
push
scas
sarl
dec
add
and
dec
dec
mov
and
cmp
xchg
das
mov
jl
testb
xor
push
mov
int3
popf
pop
sub
pop
jl
mov
push
sbb
cmp
in
loopne
mov
sti
pusha
xchg
je
stos
pop
outsl
xlat
mov
sarl
inc
lods
jns
add
xchg
push
insb
and
pop
insl
inc
or
rorl
out
js
mov
sub
push
les
inc
ror
pop
pop
hlt
push
mov
mov
insb
imul
adc
xor
dec
inc
jge
push
cmp
dec
inc
js
push
cwtl
xchg
mov
xchg
push
xchg
inc
iret
add
fwait
mov
cmp
aaa
fwait
sub
insl
gs
scas
fdivs
cmp
cmp
inc
jle
sub
sub
stos
popl
push
stos
mov
pop
xchg
jno
inc
mov
jnp
sub
stc
mulb
loopne
xor
or
jp
ret
add
stos
jns
sahf
inc
xor
add
es
sbb
pop
mov
sub
out
fnsave
clc
and
pop
xchg
jmp
mov
shrl
daa
fs
fbstp
loop
mov
fsts
mov
ss
jae
adc
xor
pop
pop
dec
mov
scas
aas
aad
idivb
out
jne
mov
xchg
cltd
subb
dec
pop
add
adc
fs
mov
mov
jo
add
xchg
mov
sub
inc
sahf
cmp
in
sbb
mov
ljmp
pop
and
sbb
sub
aad
xchg
sub
dec
js
insb
ja
xchg
ret
mov
imul
push
loopne
jg
dec
jle
mov
jecxz
hlt
loop
mov
test
mov
cmp
stos
arpl
sarl
pop
mov
or
jmp
outsl
inc
arpl
in
cmp
sbb
notl
lods
or
push
xchg
or
cli
ret
xchg
and
jo
lahf
cmpsb
mov
add
xchg
bound
out
in
pop
insl
movsb
int
aas
mov
push
lret
mov
mov
clc
rcr
ret
mov
inc
lock
xorl
fsubr
inc
add
pop
je
rcrb
sarb
cwtl
sti
sub
mov
and
sub
sbb
jns
push
and
clc
mov
xchg
add
aam
iret
xchg
out
das
fnstsw
jne
cmp
ja
mov
fiaddl
out
loopne
dec
adc
mov
call
xor
mov
lds
jl
jge
push
lcall
push
fwait
adc
inc
xor
cmpsb
xchg
imul
mov
sbb
push
lock
es
mov
nop
dec
adc
add
sub
sbb
test
aad
fisubrs
sbbb
fcomip
out
insl
in
test
jae
arpl
shlb
pop
mov
add
pop
push
sbb
es
out
inc
xor
pop
loopne
or
popl
xchg
sti
addr16
leave
push
xor
ret
jge
xor
sbb
loopne
inc
cmp
pusha
push
fsub
mov
sub
cltd
and
jne
sbb
dec
inc
outsb
cmp
mov
add
push
sub
jle
cmpsl
loope
cld
cmpl
ljmp
mov
int
iret
jbe
push
je
mov
dec
xchg
imul
cld
lret
lock
out
pushf
lcall
leave
add
xor
lods
xorl
dec
push
adc
roll
popa
sbb
mov
xor
std
clc
in
xor
xor
or
out
inc
and
stos
outsb
and
lods
pusha
into
rcll
cltd
pushf
inc
jmp
inc
subl
add
rolb
cmc
xor
pop
shll
insb
dec
and
push
adc
scas
mov
mov
std
inc
ds
adc
es
jg
or
push
jbe
fisttpl
ret
jecxz
jnp
cmpsb
sbb
movl
dec
cmp
sahf
imul
das
fiadds
xor
call
jg
or
xchg
mov
fdiv
mov
xchg
dec
jnp
cmp
dec
imul
lret
lods
mov
lret
mov
fcmovnbe
mov
mov
add
gs
pop
js
lods
push
sub
cmp
push
xor
dec
sbb
push
cmp
js
das
or
mov
dec
mov
pusha
mov
cmp
mov
mov
int
jg
imull
cmp
fsubrs
sub
test
push
es
mov
xchg
iret
imul
cwtl
lcall
shlb
xchg
and
pop
push
xchg
push
leave
pop
shl
je
jo
push
or
stc
and
mov
xor
dec
and
out
pop
or
mov
mov
xchg
add
xchg
sub
outsb
in
dec
mov
push
stos
or
or
hlt
mov
enter
xchg
xchg
fimull
in
sub
mov
inc
jae
cmp
push
sub
mov
cwtl
or
add
js
mov
sub
and
adc
sahf
lods
push
js
mov
cmp
push
cmp
test
xchg
fdivs
adc
mov
cmc
inc
mov
fisubrs
mov
jmp
clc
adc
or
pop
ss
lods
movsl
lds
movsb
adcb
mov
mov
push
cmp
lcall
mov
lahf
into
mov
pop
xchg
inc
out
cmp
xchg
jge
or
out
imul
sarl
cmp
rcrl
sub
pop
jge
addb
add
add
mov
add
inc
mov
inc
lret
and
xor
and
cld
repz
and
inc
pop
jb
add
inc
fildll
cmpsl
xchg
push
out
ficompl
jns
jge
jp
lret
mov
out
cltd
aad
paddd
mov
pop
sbb
dec
lods
cmp
jge
test
in
nop
or
aam
andb
mov
dec
test
push
leave
sbb
and
add
push
jno
popf
cmc
popf
mov
dec
add
int
repnz
jp
xor
mov
mov
xchg
dec
loope
addr16
fld
lods
cmpsl
sbb
jbe
movsl
push
sub
cmp
cli
mov
frstor
sahf
adc
lcall
adc
jbe
stos
shll
jmp
loop
imul
out
pop
test
xor
into
sahf
adc
cli
push
xor
pusha
int
lahf
mov
movl
idivl
xchg
in
pop
jns
add
xor
dec
sub
or
enter
sbb
cld
sub
fidivl
pop
lret
sub
jl
push
mov
xchg
fisubrl
xor
ss
sub
xchg
xor
scas
cmc
cltd
jp
ud2
hlt
jo
fisubrs
jle
and
mov
xchg
jne
xchg
insw
cltd
pusha
inc
mov
jp
ret
cmp
jl
pop
aas
mov
adc
in
or
push
sub
hlt
adc
or
jnp
fisubrs
sub
out
movsb
stos
inc
insb
sbbb
fstpl
cmp
mov
push
pop
callw
lods
mov
orb
push
cmp
and
cmp
jecxz
pop
push
scas
sbb
jnp
sub
xchg
out
push
cmp
rcll
adc
pop
or
dec
add
and
xchg
cmc
push
outsl
lret
adc
fidivrl
rcr
push
fldcw
xor
into
aam
movsl
scas
mov
jb
arpl
push
ret
cmpsb
jge
adc
movb
in
fiaddl
leave
rorb
ds
mov
push
adc
mov
cmp
scas
xor
bound
mov
xor
or
vmulsd
addr16
mov
and
xorl
stos
mov
mov
jge
lds
jb
movsb
or
sub
sbb
enter
cltd
int
push
cld
pop
stc
in
imul
stos
xchg
jnp
push
jb
int
test
lcall
ret
xchg
push
jg
mov
lcall
cmp
jl
std
repz
push
shlb
rorb
and
out
aas
cwtl
fxtract
dec
mov
cld
test
and
jae
lea
mov
in
lods
scas
out
scas
xor
repz
jp
jb
adc
push
jb
into
lret
pop
shll
popf
xchg
jb
sub
inc
ds
iret
xor
jecxz
aaa
pop
jns
es
aaa
shr
xchg
cmc
ret
mov
cmp
push
or
dec
pop
and
inc
mov
xor
jp
xchg
movsl
xorl
int3
adc
cmpsb
fdivrs
iret
repz
push
out
addr16
lock
add
mov
stos
daa
stos
pop
mov
push
jle
popa
xchg
or
inc
jl
mov
sub
pop
mov
lods
jp
and
nop
cltd
jo
pop
mov
test
hlt
in
scas
jne
mov
stc
aam
lcall
ret
jnp
clc
scas
jnp
add
cmp
jnp
mov
mov
mov
dec
cmpsb
ss
stos
add
cmc
add
xchg
inc
icebp
jecxz
sarl
sub
mov
mov
adc
nop
xor
xchg
xchg
mov
icebp
inc
xorl
lock
loop
cmp
stos
push
mov
jle
sbb
adc
pop
pop
mov
or
add
adc
jns
ss
mov
sub
int
lahf
in
cmp
push
mov
cmp
inc
cld
cmp
pop
lods
add
push
shl
pop
test
and
sub
pop
std
mov
fistpl
out
stos
lret
ljmp
repnz
add
int3
lds
cld
add
es
xchg
xor
mov
mov
mov
std
es
or
cmpsl
int3
popa
imul
popa
mov
xchg
ret
push
fdivrs
call
sbb
andb
or
scas
sub
sbbb
iret
lret
enter
pop
sub
fstpl
out
aam
xor
jl
mov
loope
pop
fnstsw
adc
jl
sahf
add
adc
aad
jle
dec
mov
daa
push
jl
xchg
xor
pop
add
mov
jg
xor
sub
push
xor
inc
push
jne
rclb
outsb
jbe
cmp
inc
scas
xlat
out
sub
mov
into
add
lret
xchg
push
sub
in
lock
and
aaa
data16
in
or
int3
cmp
into
pop
out
mov
popf
lods
mov
adc
or
shlb
mov
shr
repnz
or
dec
mov
inc
jmp
mov
push
xchg
ret
rolb
ja
xchg
add
xor
fistpl
je
ja
sub
call
imul
je
add
test
sub
cmc
inc
movb
adcb
movsl
cli
jns
mov
jb
jge
sub
or
movsb
jo
push
pop
push
sbb
test
xor
iret
xchg
xor
jge
sub
dec
xor
scas
scas
dec
daa
in
mull
call
sub
insb
jo
fnsave
int
not
hlt
rcrb
aas
sub
mov
lcall
incb
fbld
adc
and
je
inc
sbb
dec
aas
sti
int3
mov
imul
sbb
sub
jne
lret
pop
inc
sahf
xchg
fs
out
sbb
clc
cmc
cmp
bound
outsb
fsubrl
mov
sbb
arpl
cmpsl
xchg
inc
lea
movsl
and
pop
pop
popa
mov
lret
mov
mov
mov
and
rolb
dec
jge
push
mov
dec
dec
inc
adc
mov
cmp
inc
sbb
dec
mov
mov
push
pop
xchg
scas
lea
mov
ds
push
fisttps
dec
cmc
dec
push
cmp
sbb
pop
xchg
shlb
rcrl
repz
mov
inc
insb
lods
pop
adc
jle
sbb
dec
and
int3
jle
or
sbb
in
push
xchg
fistpll
ret
cmp
sub
jo
mov
lock
decl
ss
mov
mov
jo,pt
jb
lds
divl
mov
aam
fdivl
mov
imul
cmp
push
cmc
mov
add
ja
mov
mov
movsb
outsl
out
lds
inc
add
inc
cmp
push
adc
insb
ret
pop
jp
cmp
outsb
mov
flds
pop
dec
mov
addr16
mov
dec
and
inc
vshuff64x2
stos
push
jo
push
ss
fcmovnbe
mov
bnd
cmpsb
je
in
fstpl
mov
fcomi
arpl
stos
or
mov
inc
iret
shll
sti
jmp
mov
pop
les
lods
mov
mov
xor
enter
mov
mov
cwtl
fidivrs
pop
inc
in
daa
pusha
sub
iret
push
mov
je
inc
negl
xor
pop
fmuls
gs
push
out
pop
pusha
addr16
cmp
movsb
sbbb
xor
jbe
int3
jle
mov
add
mov
test
pop
push
ss
sarb
push
aam
arpl
xchg
sbb
lret
cld
outsl
sbb
mov
mov
sbb
dec
mov
sbb
lcall
popa
cwtl
add
pop
dec
pop
xor
mov
sarl
rcrb
mov
or
lods
imul
hlt
ret
mov
in
cwtl
mov
sbb
xor
mov
mov
or
mov
sbb
mov
inc
ljmp
xchg
push
mov
lahf
and
sub
push
adcb
xchg
xor
mov
or
mov
jmp
fisubrl
cmp
out
jp
xor
negb
xor
sub
jb
adc
pushf
mov
mov
jmp
hlt
add
stos
js
and
das
sub
bound
incb
push
lcall
adc
mov
push
mov
aaa
jne
or
cld
mov
sub
xchg
scas
push
xchg
pop
mov
fistl
imul
xchg
cli
mov
out
pop
ret
inc
iret
idivl
xchg
pop
lods
es
mov
pop
pop
cmp
das
sub
xchg
pop
push
mov
cli
fs
jnp
addr16
cli
lret
popa
out
loop
xorb
adc
cmp
xchg
adc
inc
add
ljmp
bnd
cmp
mov
sub
mov
rclb
cmp
sbb
movsl
mov
in
mov
test
pop
icebp
pop
sti
push
das
fs
jl
xchg
dec
xchg
mov
mov
mov
ja
mov
pop
sahf
mov
out
mov
or
pop
xchg
scas
movsb
pop
int
dec
adc
add
mov
addr16
mov
adc
dec
scas
xor
add
in
mov
addl
jns
dec
neg
enter
loop
sbb
fdivrl
int
insb
add
push
xor
mov
sar
outsb
adc
and
pop
cmp
jecxz
addb
pop
outsb
mov
jnp
push
xor
inc
or
leave
popf
add
frstor
push
popa
dec
cmpsb
push
test
sbb
decl
mov
cwtl
stos
dec
push
xlat
mov
into
pop
test
lret
jecxz
loopne
cs
jbe
dec
divl
pop
dec
mov
add
dec
outsb
out
pop
push
dec
dec
sub
mov
shll
or
out
movsl
pop
mov
or
add
enter
adcb
inc
or
jbe
sahf
adc
adc
xchg
and
pushf
xor
jg
dec
mov
js
jo
inc
push
or
mov
mov
shrl
sbb
popa
fistps
and
call
arpl
pushf
pop
lcall
add
mov
ljmp
inc
adc
sarb
jmp
or
or
test
das
arpl
lret
stos
testb
addb
lods
mov
pusha
in
rclb
rcrb
shlb
push
xchg
scas
push
mov
lods
cwtl
mov
push
mov
push
imul
dec
loope
push
sbb
pop
cmp
repz
and
mov
mov
cmpsb
mov
adc
fwait
lret
adc
gs
fmuls
mov
rcrl
mov
pop
xor
add
fwait
aad
jge
jnp
les
fstl
rolb
mov
adcb
inc
jge
das
fsubrl
inc
or
xchg
and
fidivs
test
mov
mov
mov
repz
dec
cmpsb
mov
les
mov
stos
mov
and
jg
cmp
ljmp
xor
jae
inc
xchg
aad
bound
and
scas
je
mov
pop
jl
push
xchg
push
jp
sahf
jns
cmp
or
xorl
test
in
insb
adc
imul
incb
ret
push
popf
mov
jmp
pop
icebp
cmpsb
inc
daa
fcoml
jmp
jae
sub
cmp
xchg
cli
xchg
leave
lret
push
and
jmp
add
shr
push
dec
mov
test
xchg
dec
ret
jp
mov
lods
xor
mov
cmp
fsubl
decb
dec
xor
aam
xlat
fiaddl
in
lods
clc
js
mov
pop
lods
pop
lock
lcall
scas
mov
add
sub
mov
push
push
fildll
or
inc
cmp
ret
rcrb
mov
in
hlt
add
xor
out
lock
adc
ds
dec
call
dec
lret
popa
stos
mov
sbb
adc
sub
sub
outsl
shlb
inc
sub
adc
or
fs
sarl
imul
and
pop
stos
dec
jmp
roll
xchg
shrb
jmp
xor
nop
inc
aaa
mov
push
mov
lret
jnp
dec
leave
in
stos
or
fisttpl
das
and
mov
pop
inc
pop
out
xlat
xchg
pop
or
jnp
sub
pop
xlat
xor
add
or
dec
out
mov
add
sub
enter
push
std
adc
mov
sarb
shr
ret
add
add
jno
mov
xchg
add
in
cwtl
cmp
lea
out
lahf
jmp
jl
test
sbb
mov
negb
sti
cmp
roll
test
mov
sbbl
xchg
push
jecxz
dec
sbb
mov
mov
stos
xlat
iret
insb
fldenv
in
roll
ficompl
mov
push
jo
xchg
mov
test
into
fwait
xlat
mov
mov
lcall
jns
enter
mov
ret
daa
xchg
adc
in
iret
bound
loopne
insl
xor
les
ret
xor
jmp
loop
arpl
pop
xchg
fidivrl
repnz
lea
test
and
cld
dec
setl
mov
lret
sub
gs
jns
sar
mov
je
es
mov
mov
in
cs
or
or
sahf
xchg
inc
scas
ret
sub
rorb
adc
or
xorl
jae
pop
mov
imul
cwtl
movsb
fdivr
bound
jnp
cltd
mov
ffreep
sub
sub
jmp
shrl
imul
mov
aad
sarl
sub
mov
mov
aad
popa
cmp
clc
mov
dec
add
push
or
stos
mov
aas
push
loopew
movsb
adc
inc
xchg
rclb
push
les
and
mov
jnp
add
cmp
aad
jle
push
mov
mov
ljmp
iret
sbb
mov
test
test
mov
test
sbb
sub
and
divl
mov
mov
or
insb
fucomp
test
pushf
decb
or
add
dec
pop
loop
xchg
jmp
adc
xor
push
iret
gs
or
sbb
or
sbb
push
lret
mov
mov
int3
mov
cwtl
pop
xchg
and
and
mov
sbb
jns
imul
outsl
dec
std
cs
repnz
mov
mov
movsl
dec
or
jne
mov
popf
xor
xor
adc
jo
sub
or
in
pop
paddq
mov
mov
test
jb
loope
ret
jg
fldl
adc
lret
shrl
jmp
mov
ret
pop
and
add
pop
sub
gs
sbb
jo
mov
or
push
mov
mov
push
data16
insb
outsb
dec
sbb
dec
in
call
roll
xor
iret
cld
cs
add
imul
fmuls
sub
ret
movsl
mov
dec
xor
inc
and
clc
jnp
enter
dec
lods
sub
xchg
orl
sub
and
pop
jmp
in
pop
lods
jecxz
add
arpl
mov
and
add
mov
arpl
aam
mov
mov
lahf
mov
dec
xchg
outsb
ds
inc
jne
lock
or
aaa
outsl
adc
push
push
xchg
xchg
out
out
and
clc
pop
int
dec
or
xor
adc
lock
and
fcoms
or
xchg
in
cwtl
mov
sar
xchg
out
ret
xchg
add
push
mov
out
pop
test
and
sti
adc
push
mov
sbb
test
adc
add
repnz
cmp
jnp
sbb
cmp
stos
jno
ret
subl
pop
loop
dec
and
in
sub
in
add
mov
xchg
aas
loopne
cltd
std
lret
push
les
mov
lret
sub
aad
lret
add
incl
test
sahf
test
iret
call
into
cmp
cli
mov
pop
imul
fsubrs
fistps
mov
int
mov
loop
jg
mov
pop
leave
call
pop
cmpsl
sub
jle
dec
clc
cs
push
sbb
sbb
adc
enter
lret
fiadds
jl
repz
cs
mov
js
filds
cwtl
mov
xchg
cmp
push
mov
push
xlat
mov
xor
stos
jae
call
and
arpl
sbb
dec
sub
bound
mov
sarl
cmc
adc
sarl
out
fiadds
iret
xor
mov
pop
sub
mov
loopne
mov
fisttpl
sub
add
jbe
int
dec
lock
xor
jl
ret
cmpsb
and
cmp
ds
xchg
mov
xor
mov
jo
mov
add
fcomp
pusha
and
ljmp
adc
ret
lret
add
xchg
cmp
pop
xor
xchg
mov
das
adc
insb
jp
mov
jo
dec
repnz
dec
out
cmc
adcb
xor
stos
je
add
test
inc
jne
push
adc
pop
or
call
mov
idivb
stos
outsl
adc
mov
or
decl
push
mov
stos
inc
int
cs
test
dec
fistpll
test
mov
in
mov
sbb
int3
push
clc
inc
sbb
aam
shl
or
stos
les
jp
div
out
pop
scas
xchg
pusha
pop
je
sub
into
lcall
mov
in
adc
rorb
lds
adc
rcl
hlt
cmpsl
mov
fs
inc
lret
push
adc
cmp
cmp
sbb
mov
jle
ss
fwait
pop
pop
pop
mov
in
rcrl
jb
mov
cmp
decb
inc
call
filds
cmp
dec
mov
sbbl
xchg
pop
mov
dec
cmp
and
nop
mov
pop
xor
divl
out
xor
dec
aas
in
int3
mov
xchg
cli
and
add
test
xor
fwait
je
lods
je
adcb
fisttpll
lods
and
mov
enter
scas
sti
and
adc
insb
pop
xacquire
xchg
in
iret
xchg
sub
cmc
mov
jmp
mov
or
fstpl
arpl
pushf
fs
adc
popa
inc
dec
push
repnz
daa
out
pop
ss
scas
or
and
inc
lret
aam
divb
loop
xor
icebp
int3
ss
push
scas
xchg
lret
or
or
mov
dec
push
popf
xor
leave
int3
out
lret
repnz
scas
mov
mov
dec
orb
sub
cld
movsb
or
ds
adcl
ss
mov
jns
inc
push
jge
pop
loopne
data16
popa
rclb
mov
ficoms
scas
leave
negl
xor
loope
dec
scas
fimull
or
and
xor
pushf
mov
enter
fs
in
mov
aam
pop
push
addr16
call
inc
aas
rdtsc
adc
cwtl
cmp
das
mov
dec
aaa
push
stc
cmp
pop
decb
ret
sti
pop
adc
cs
std
and
cmp
scas
cld
ss
dec
adc
pop
lds
mov
cmp
ret
ret
outsl
dec
faddp
add
icebp
loopne
jnp
pop
ljmp
ljmp
mov
adc
stos
push
cmp
push
dec
imul
pushf
xchg
add
dec
cmpsl
loopne
mov
in
xor
loop
cmp
mov
leave
fistpll
adc
ljmp
dec
cmp
bound
mov
inc
mov
data16
mov
daa
int
stos
loop
push
xor
loope
adc
es
pop
adc
inc
mov
lods
lods
int3
popf
fmuls
mov
xchg
mov
arpl
inc
xchg
popa
dec
cmp
mov
cmp
enter
mov
xchg
repnz
idivb
xor
int
stos
jp
push
mov
and
data16
sbb
jae
mov
adc
cwtl
push
dec
xchg
out
push
lcall
inc
pop
int
push
inc
push
repnz
push
fnstenv
ljmp
inc
add
stos
mov
sub
lea
nop
dec
adc
xchg
out
sub
jb
insb
fldt
icebp
jp
xlat
lea
push
push
pop
out
adc
test
or
shlb
les
js
mov
test
imul
jnp
push
push
fwait
inc
mov
or
adc
mov
int3
push
pop
sbb
pop
xchg
adc
adc
xor
jge
mov
adc
mov
cld
pop
subb
mov
call
mov
pop
mov
je
lcall
jmp
lahf
clc
pop
stos
xlat
and
cwtl
mov
sbb
or
pop
sahf
sbb
sbb
lock
push
scas
dec
lcall
xor
mov
push
dec
lods
xchg
shll
sub
inc
jno
into
movsl
mov
fisttpl
loopne
pop
inc
int
fmulp
xchg
and
aas
jle
rorl
mov
inc
popl
lds
lods
fadds
imul
pop
fbstp
les
inc
mov
xchg
andl
test
mov
repz
aam
fwait
mov
shlb
cmp
xor
xchg
jl
cmpsl
out
shll
stos
and
pop
cmp
stc
sbb
xchg
test
inc
roll
mov
mov
daa
xchg
imul
dec
call
mov
mov
add
es
popf
mov
ja
in
scas
into
pop
sbb
iret
fnstenv
mov
adc
pop
imul
inc
test
movl
inc
sbb
pop
lret
push
adc
jecxz
mov
imul
cs
test
out
insl
push
and
das
pop
sub
rcrb
sub
pop
cmp
xlat
inc
ret
fstps
mov
push
nop
mov
in
lods
pop
rol
scas
call
adc
lods
inc
and
iret
lahf
dec
or
or
ret
idivb
or
adc
add
mov
and
imul
loop
es
jecxz
repz
jne
mov
mov
rcl
push
sub
or
sub
inc
xchg
incl
out
enter
inc
fsubrl
cmp
or
push
push
add
mov
cld
sub
loope
in
jmp
aas
and
push
iret
pusha
pinsrw
loop
mov
mov
nop
repz
mov
js,pn
mov
gs
in
sub
adc
sbb
or
pop
addb
sbb
cli
pop
mov
dec
add
adc
enter
outsl
arpl
jne
dec
outsb
fnstenv
stc
cwtl
jecxz
mov
iret
add
mov
fucomip
xchg
lcall
sub
mov
or
pop
mov
xchg
cmp
cmpsb
xchg
push
push
repnz
fwait
mov
lret
lret
push
adc
in
mov
add
xchg
aaa
popf
add
out
cmp
nop
and
test
jmp
add
cmpsb
js
mov
sub
mov
pop
adc
xchg
arpl
imul
pop
cmp
add
push
adcb
ret
ljmp
pop
test
push
es
cmc
out
out
jl
imul
push
mov
xor
movsl
fisubrs
jecxz
ja
inc
xchg
jo
inc
ds
rcll
jo
xor
repnz
imul
cmpsb
loopne
and
lods
fwait
rcr
and
sub
popa
mov
test
cmp
sahf
cmpsl
and
mov
adc
and
loop
jne
repz
add
dec
add
cmc
jl
ret
test
adc
adc
popf
and
scas
xchg
in
inc
jl
cmp
aas
mov
stc
mov
pop
into
dec
mov
add
lret
lods
jecxz
cmp
xor
sbb
sti
sbb
es
cmp
into
xor
mov
adc
dec
lcall
add
push
dec
mov
sub
imul
pop
stc
push
loop
mov
xchg
adc
imul
add
mov
xchg
dec
mov
mov
push
add
dec
and
or
xchg
ss
andb
jmp
lret
or
pcmpeqb
in
push
adc
cmp
in
std
subl
cs
test
add
mov
test
push
mov
jecxz
rolb
neg
aaa
fiaddl
sbb
into
dec
and
adc
xlat
dec
xchg
ficompl
mov
scas
cmc
cltd
scas
adc
lcall
insl
sbb
inc
into
adc
or
push
mov
or
shl
xchg
scas
inc
adc
jecxz
in
push
mov
out
mov
sbb
jge
mov
xor
dec
jmp
fsubl
mov
pop
out
out
and
loopne
stos
nop
add
or
js
sahf
xchg
movsb
rcr
out
jge
or
sub
cmp
push
shr
xlat
xchg
cmp
test
inc
push
movsl
jo
and
adc
enter
icebp
jge
fistl
in
dec
adc
mov
cld
rorb
mov
mov
dec
outsb
mov
inc
lret
jmp
sbb
xor
iret
popa
aad
sbb
pop
sahf
icebp
cmpsb
mov
scas
outsl
aas
addr16
andb
push
pop
inc
lret
inc
xchg
icebp
adc
jmp
imul
cld
or
test
fsts
pop
or
jns
inc
enter
rcll
aad
fwait
mov
js
test
jns
js
ret
dec
pop
lods
mov
testb
pop
shr
push
push
push
mov
rcr
or
in
insb
jmp
in
jecxz
addr16
mov
stos
add
xchg
pop
push
aaa
xchg
adc
lock
xchg
and
dec
adc
pop
push
cmp
adc
xor
mov
pop
jecxz
or
push
in
jo
outsl
mov
cmp
mov
jo
adc
sbb
addr16
jb
add
inc
rclb
jp
adc
push
fsubrp
loop
xchg
pop
pop
cli
fisttpl
jl
out
add
jl
bnd
mov
stos
mov
jnp
or
jb
xchg
adc
je
jnp
aad
std
cs
mov
or
mov
xchg
pop
jae
push
jne
mov
push
mov
dec
adcb
cltd
or
jmp
ret
push
pop
add
add
add
dec
add
jp
lcall
imul
adc
insb
fcoms
jecxz
sbb
sub
sub
scas
std
mov
jb
adc
xor
or
mov
xchg
sbb
js
pop
adc
and
pop
rol
adc
jmp
xchg
enter
sub
cltd
andb
daa
sub
cmp
and
pop
or
lret
cmc
pop
rcrl
insb
aad
inc
add
cld
ja
mov
insb
or
mov
rol
rcr
xor
xchg
mov
adc
outsb
push
xorl
inc
cmp
out
mov
cmpsb
jmp
test
int
mov
inc
test
push
popa
hlt
fiadds
in
popa
xchg
xor
insl
xor
loopne
lods
loop
enter
ljmp
cs
push
mov
and
cwtl
xchg
sti
divb
mov
fidivrl
xor
or
cmp
push
ja
fs
ror
pushf
das
mov
fdivs
daa
dec
cmc
leave
mov
icebp
cmp
lock
adc
outsb
and
pushl
jns
imul
lods
test
inc
pushf
nop
shrl
jnp
ss
push
jmp
xor
sub
lock
mov
or
sub
or
les
fwait
dec
cld
fmul
shll
adc
loope
sub
ja
add
fisttpl
les
test
andb
inc
sbb
gs
push
loope
gs
jecxz,pt
pop
lods
inc
ss
or
jne
xor
dec
add
mov
and
imul
dec
pop
sub
push
in
mov
mov
into
cmpsl
insb
mov
adc
popa
lds
mov
sbb
rclb
mov
jge
ficomps
repz
or
icebp
repz
int3
shrb
fimull
or
xchg
xor
inc
orb
test
fmuls
push
repz
aad
sarl
fcomi
fldt
mov
mov
xchg
adc
lds
mov
out
pop
aas
aad
push
addb
cld
mov
js
fnstenv
push
fisubl
fdivs
inc
imul
subb
mov
mov
or
cltd
sbb
out
lods
xor
ljmp
sbb
outsl
mov
shrb
add
pop
jl
stos
xor
jne
fwait
pushf
xchg
lret
or
lret
fsts
mov
in
dec
mov
test
push
pop
shlb
mov
mov
inc
cmc
or
dec
or
repnz
dec
inc
or
enter
sub
rclb
movsb
das
ret
cwtl
sarb
repnz
gs
addr16
add
dec
pusha
xchg
xchg
out
inc
es
xor
mov
dec
nop
mov
iret
dec
xchg
iret
rolb
xor
cltd
gs
ret
mov
sbb
inc
jge
and
addb
lret
xchg
lcall
dec
sub
pop
mov
mov
adc
stc
push
aaa
pop
negb
adc
xchg
inc
and
inc
jmp
pop
xor
lock
imul
pop
ret
pop
icebp
sub
pop
mov
mov
rolb
sub
fmull
stos
movb
jno
adcb
insb
xlat
loope
fwait
pop
and
outsl
js
addr16
pop
jno
dec
or
aaa
mov
mov
adc
shl
mov
mov
scas
add
or
pop
pop
add
push
lret
sbb
jb
sbb
push
or
xchg
xor
and
inc
sbb
rclb
addb
jb,pt
jo
scas
out
jno
inc
pop
xchg
xor
pop
cltd
cmp
popa
int
xchg
pop
stos
inc
popf
inc
cmp
scas
adc
out
jnp
cmp
movsb
cmp
dec
push
ljmp
mov
or
push
cmp
icebp
neg
stos
outsl
pop
pushf
add
jp
scas
push
scas
js
ret
mov
xor
dec
cmp
xor
jecxz
leave
pop
fisttps
popa
popa
pop
xor
loopne
bound
lods
pop
pop
or
pop
jle
push
inc
ret
cltd
cli
or
sbbl
mov
sbb
mov
pop
aaa
xor
ljmp
and
mov
xchg
cmp
jmp
repz
imul
enter
jns
sub
ja
aaa
dec
push
mov
dec
ja
mov
fistpl
jle
sbb
inc
cli
scas
ljmp
sahf
dec
lahf
push
cli
and
dec
push
nop
cli
popf
popa
testl
ficompl
add
shr
sub
pop
out
adc
mov
mov
xorl
mov
or
and
cmpsb
lret
adc
sub
inc
lds
loope
shlb
mov
inc
jmp
imul
scas
xchg
mov
push
jle
dec
ret
insl
cmp
sub
cmp
cwtl
mov
push
xchg
mov
mov
dec
pop
xchg
push
and
arpl
jmp
cmp
aad
ffreep
insl
sarb
xchg
push
sub
int
or
loope
sub
pop
jle
xchg
adc
pop
mov
test
repz
mull
int3
push
roll
lods
jmp
je
sub
mov
pop
mov
mov
xchg
or
sti
mov
xor
lcall
outsb
orl
out
ljmp
movsl
inc
push
pushf
jmp
xor
icebp
mov
xor
mov
lea
sarb
xchg
push
pop
adc
cli
inc
sti
push
out
xchg
cmp
mov
jns
dec
sbb
push
xor
insl
jae
xor
in
fistpll
mov
pop
push
stos
mov
cmp
dec
jmp
scas
adc
jno
test
pop
fidivs
jnp
ficoml
mov
call
push
push
inc
out
xchg
push
jno
lahf
xchg
rcl
es
outsl
daa
in
mov
lods
jbe
int3
pop
jge
adc
adc
mulb
mov
outsl
cmp
xor
push
dec
jp
sbb
pop
cmovae
sub
mov
cmp
popa
pop
push
inc
xor
adc
lods
sbb
xchg
xchg
push
aas
cmp
xlat
add
mov
icebp
lods
mov
dec
adc
inc
push
mov
mov
call
in
adc
inc
and
mov
and
push
lahf
sbb
lods
jmp
loope
xchg
iret
inc
pop
pop
int
orb
lock
push
jne
aaa
fistps
popa
pushf
mov
push
adc
loopne
dec
je
sbb
aas
xorl
icebp
into
in
add
cltd
jl
int
hlt
leave
pop
jp
ret
lods
imul
into
out
mov
inc
arpl
inc
xchg
sahf
and
stos
cmp
jno
xchg
mov
xor
lds
or
popa
sub
movsl
ljmp
jbe
fsub
outsl
mov
dec
into
or
and
push
inc
popa
dec
xor
pop
jp
add
cmpsb
js
mov
xor
shrl
jno
pop
xor
xchg
and
jnp
addr16
fwait
jp
nop
xchg
adc
push
cltd
jle
xor
leave
cmp
das
push
push
lret
loope
mov
sbb
pop
cmpsl
popa
mov
dec
aam
test
push
sarl
leave
mov
mov
jne
andb
movsb
jae
jnp
jl
mov
mov
adc
cmpsb
mov
cmpsl
shlb
push
or
testb
icebp
pop
inc
daa
and
dec
mov
in
imul
psubsb
adc
or
adc
and
arpl
and
sbb
lret
fstl
push
mov
xchg
jp
fcoml
stos
iret
mov
pop
mov
mov
jle
pop
iret
pop
fcoml
rorb
push
inc
pop
mov
jmp
push
push
pop
mov
mov
shr
fildl
enter
sbb
call
inc
adc
aad
pop
loopne
lods
fcompl
xchg
jmp
repnz
cwtl
les
loope
cld
jg
out
mov
cmpsb
popa
mov
test
daa
mov
inc
pusha
cmp
add
inc
insb
clc
or
jnp
insl
out
hlt
out
pop
and
je
insl
clc
in
pop
mov
dec
or
mov
jbe,pt
popa
loope
inc
cli
mov
push
and
jle
and
sbb
mov
paddsb
cs
inc
pop
mov
fcmovbe
rclb
mov
and
mov
add
add
pop
inc
jecxz
scas
or
jne
adc
and
mov
es
fdiv
add
mov
cmpsl
inc
mov
test
sbb
sbb
push
jmp
cmp
add
sbb
xlat
xchg
repz
sar
mov
int
cld
cli
pop
ftst
lods
sbb
cltd
lret
xor
xchg
mov
mov
sub
mov
pushf
test
mov
cli
or
cld
ds
das
lock
dec
jns
mov
dec
xor
dec
dec
jb
cmp
fisubrs
sbb
and
rcrb
cmp
bound
sbb
fistps
int
jp
mov
add
jecxz
mov
aam
mov
cwtl
popf
jecxz
dec
lret
xchg
fninit
and
mov
jnp
loop
inc
xlat
add
pop
jne
pop
cmp
jle
add
adc
repnz
pop
jle
lcall
pop
cwtl
cmp
add
insb
insb
xchg
fiaddl
xchg
shl
mov
aam
adc
insl
dec
scas
mov
pop
roll
dec
lahf
pop
enter
decb
mov
inc
xchg
pop
std
rolb
out
or
push
incb
inc
and
xchg
pop
adcl
scas
cmp
rclb
mov
rolb
mov
jge
mov
mov
push
gs
and
ds
out
gs
popf
fs
sti
pusha
mov
pop
xor
sti
rcrl
or
xchg
adc
stos
xor
pop
push
pop
cs
aaa
fs
insb
lcall
push
mov
and
je
adc
jp
push
xor
pop
jg
push
insb
test
mov
sti
mov
lea
pushf
testb
pop
jb
repz
lea
movsb
push
add
lods
push
in
lcall
xlat
daa
rol
outsl
jbe
imul
cmpsl
mov
gs
xor
js
adc
addr16
cmp
sar
mov
xchg
xchg
scas
inc
dec
fwait
jmp
lret
xor
xchg
mov
xchg
loope,pt
mov
loopne
xchg
fistpl
pop
xchg
mov
push
divl
cs
maskmovq
notl
in
test
sti
push
cmp
das
cmp
out
jmp
push
fildl
adc
push
xchg
das
loopne
inc
sarb
pop
inc
mov
insb
or
ja
xlat
pop
sbb
shr
int
mov
shrb
mov
cmp
pushf
jg
ret
pop
mov
loop
pop
imul
adc
lahf
lods
cmp
inc
cmpsb
or
scas
sub
mov
or
push
ret
int3
in
cwtl
mov
mov
aas
rorb
lods
fsubl
mov
mov
mov
push
push
int
mov
lock
ja
cmp
rcrl
ja
lea
push
push
in
sbb
cmp
mov
xchg
cwtl
dec
ret
push
jno
or
test
add
ja
xchg
icebp
push
es
inc
jnp
insl
cmpsl
jne
sahf
ljmp
pusha
into
push
mov
jmp
mov
cmpsl
push
popf
ja
mov
int3
scas
stos
es
fidivrl
and
scas
push
dec
push
je
add
bound
xlat
mov
jle
loope
fwait
out
sub
inc
push
std
dec
sub
mov
sub
cltd
push
int
pop
jne
push
inc
adc
push
push
or
xchg
xchg
xor
fmuls
mov
cmp
es
pop
mov
mov
xor
jbe
lret
inc
cld
in
test
lods
cs
push
notl
jge
fstpt
data16
pop
lods
jo
rorl
aad
push
xor
jno
pop
push
sbb
repz
and
leave
loope
addr16
lea
ljmp
add
mov
xchg
or
es
lret
aaa
lods
cwtl
test
mov
out
movsb
aad
outsb
push
mov
push
repnz
jae
sti
jge
pop
dec
xor
mov
sbb
pop
xchg
xor
fwait
pop
push
aad
popf
mov
add
adcl
mov
into
cli
mov
cmp
sahf
int
jae
push
into
cli
adc
dec
test
arpl
inc
jno
in
cwtl
jbe
mov
int
es
and
xchg
rclb
mov
sbb
push
pop
sub
sub
push
jne
ds
testb
xor
adc
sbb
in
pop
or
mov
inc
movsb
rolb
in
xorb
fists
mov
jg
dec
xchg
adc
add
pop
sarb
cld
xorl
int
lea
push
stos
mov
cmc
inc
xchg
xor
push
ljmp
mov
rcr
div
add
pusha
es
lods
jecxz
or
and
in
fs
das
adc
popf
and
dec
jns
icebp
sbb
data16
fmulp
jmp
sbbl
rolb
stc
push
adc
leave
mov
test
xor
subl
std
js
in
inc
in
fistpll
adc
repz
add
or
popf
mov
in
xchg
les
add
xchg
dec
inc
test
sbb
sbb
mov
cmpsl
ljmp
enter
mov
testb
pop
pop
test
cmpsl
fcoms
push
and
loope,pn
xchg
lods
pop
call
xchg
mov
icebp
cmp
enter
sar
mov
shlb
addr16
mov
push
orl
and
pop
pop
loopne
dec
es
andb
xorl
and
xchg
dec
test
inc
push
or
lcall
jne
xchg
testl
in
fwait
sbb
pop
pop
imul
or
rcrb
outsb
xchg
lods
adc
sbb
push
xchg
sub
mov
call
out
mov
add
loope
jle
in
icebp
mov
dec
mov
div
mov
cmp
out
leave
ret
test
lret
add
or
lahf
lods
mov
xchg
scas
or
push
bound
arpl
push
dec
push
decl
loop
gs
jnp
add
sbbb
mov
inc
cmp
repnz
jb
or
mov
sub
sbb
mov
test
jnp
cmpsb
jae
scas
hlt
frstor
rolb
push
lahf
test
faddl
xor
inc
mov
or
xchg
lcall
lods
pop
fisubrl
inc
cmp
adc
int3
or
sbb
sti
rol
inc
in
dec
dec
lods
aas
testb
in
addr16
sarl
mov
xchg
mov
aaa
icebp
jge
adc
loopne
out
sub
loop
pop
arpl
mov
fbld
ja
jne
or
inc
sbb
push
push
lods
push
inc
sub
xor
stc
pop
add
mov
adc
pop
sbb
pop
data16
push
lods
popa
fwait
cli
mov
pop
xchg
push
imul
jb
pop
stos
rolb
cli
jbe
imul
lods
xor
sar
movsb
bnd
shrl
ljmp
enter
or
and
xor
iret
pop
add
les
in
lock
addl
nop
int3
fwait
add
add
mov
xchg
jmp
or
add
lea
insl
in
mov
sbb
xchg
out
movsl
cwtl
push
push
ja
pop
dec
scas
fisubs
cmpsl
fidivs
sbb
jge
adc
sti
mov
mov
xchg
xor
xor
mov
adc
push
inc
ret
cmp
mov
cltd
idiv
cmp
jns
in
cmc
mov
xchg
scas
xlat
pop
jo
imul
fcoml
cli
shll
std
sub
test
jb
shl
xorb
pop
ficoml
dec
data16
faddl
jge
xor
push
jnp
mov
mov
pop
imul
xchg
daa
cmp
call
push
cwtl
fwait
outsl
repz
and
cwtl
inc
popa
js
mov
or
fsts
cmp
sbb
sarl
fs
bound
cld
mov
dec
push
int
cmp
xchg
jecxz
pop
adc
cmp
adc
rcl
inc
into
or
jnp
push
mov
inc
dec
add
ret
popf
pop
call
push
daa
or
jp
cmp
lds
pop
rolb
sub
outsl
mov
sbb
pop
clc
push
imul
insl
frstor
fbld
and
fcmovnbe
inc
jb
sbb
je
xchg
adc
in
jp
sbb
fists
insb
dec
call
push
jle
into
js
cmp
add
shlb
xchg
sub
pop
addr16
out
sbb
arpl
out
pop
xor
adc
cmc
mov
jo
inc
push
lret
mov
jp
jmp
mov
and
aad
add
jge
sub
adc
test
xchg
fidivrs
gs
test
nop
jns
test
dec
test
push
push
cwtl
push
pop
dec
cltd
mov
pop
xchg
pop
lock
data16
cmp
sbb
inc
leave
int3
xchg
loop
lret
sbb
and
lods
xchg
out
in
in
cmp
fisttps
out
mov
pusha
sub
movl
lock
bnd
push
frstor
xchg
xor
orb
sub
nop
or
dec
xor
ss
add
aas
lock
xchg
test
lcall
mov
ret
pop
imul
jbe
xor
sbb
xchg
lods
adcl
xchg
mov
js
or
ljmp
lcall
jb
pop
cmp
loopne
dec
test
aam
push
popf
das
scas
mov
inc
ljmp
xchg
add
jno
fdivrl
leave
or
outsl
daa
cmp
mov
mov
ficomps
adc
xchg
cmpsl
pop
cmp
sub
es
insb
cmpl
mov
or
xor
addl
dec
nop
and
in
mov
sbb
jbe
cmp
and
cmp
pop
jge
cld
test
lret
nop
aam
mov
inc
and
int3
out
dec
mov
stc
into
fnstsw
test
test
jo
dec
cmp
andb
loop
adc
mov
cmc
add
xchg
mov
xor
push
mov
dec
or
lock
inc
sub
jae
pop
mov
gs
and
push
push
ret
movsb
jge
scas
inc
mov
popa
in
scas
insb
dec
lock
call
mov
push
mov
std
jg
cmc
xor
lahf
cmpsb
pop
sbbl
movsb
adc
lcall
scas
repnz
outsb
add
into
sbb
adc
dec
call
jecxz
sub
jl
sahf
push
sbb
push
pop
sub
push
lcall
fs
lret
and
es
lret
add
into
ss
ret
xor
and
repz
es
rcr
mov
mov
out
pop
frstor
sub
cld
das
test
cs
adc
push
pop
cs
test
loope
popa
call
scas
lods
push
add
xor
mov
mov
mov
sbb
daa
push
mov
shll
cmpsb
xchg
aaa
popf
rorb
inc
xchg
xchg
mov
pop
mov
mov
xchg
push
pop
addr16
sub
cmp
xlat
fidivl
movl
push
aam
adc
loopne
sub
sbb
shll
loopne
inc
xchg
jnp
daa
call
mov
inc
mov
jp
push
mov
mov
sub
and
xchg
mov
lahf
xor
insb
xor
fwait
dec
dec
repnz
lods
repnz
jg
cmpsb
xlat
push
enter
lds
jb
mov
mov
and
dec
dec
and
lds
rcll
iret
mov
push
mov
push
cwtl
adc
scas
repz
jo
imul
aad
jecxz
inc
sbb
mov
fmulp
xchg
fsubrs
sub
lods
or
cmpsb
jns
pop
pop
lret
pop
push
sbb
jae
lock
stos
js
mov
jmp
pop
test
iret
mov
sbbb
pop
test
nop
cmp
push
popf
or
sbbl
lcall
into
arpl
push
xor
push
jbe
mov
jp
add
mov
stos
xchg
aas
enter
and
outsl
cltd
or
ret
dec
or
lcall
and
xor
std
and
mov
dec
and
push
in
pop
push
loope
movsb
mov
pop
fistpl
cmp
sub
pop
jl
push
push
adc
das
or
cwtl
or
adc
or
lea
sti
js
xorl
orl
shll
repz
cmp
dec
iret
push
cwtl
inc
test
mov
popa
mov
mov
push
dec
inc
mov
pop
addr16
mov
xchg
mov
cltd
cmp
push
stos
fdivl
mov
and
jbe
or
mov
dec
cmp
aaa
fstpt
mov
mov
dec
jp
mov
js
mov
enter
dec
aad
sub
mov
les
and
pop
jbe
mov
mov
mov
lcall
cmp
aas
pop
mov
je
mov
mov
dec
outsb
and
dec
imul
lret
fsubr
scas
cmp
lret
pop
mov
ja
imul
and
sub
jo
pop
jbe
sbb
and
popa
lock
lds
popa
mov
mov
or
lock
sub
movsl
dec
sub
push
pop
insl
fadds
test
filds
outsl
repnz
and
inc
aam
jg
add
xor
xchg
scas
xor
xor
addr16
mov
rorb
sub
cmp
dec
and
das
ds
daa
mov
mov
insl
pop
push
mov
cmp
es
or
mov
sbb
jo
mov
lahf
mov
sbb
mov
mov
out
mov
popa
xor
dec
shll
clc
dec
pushf
and
hlt
xchg
lods
bnd
push
mov
xor
mov
stos
nop
cmc
xchg
das
jns
ljmp
cmpsl
sbb
filds
sub
aad
pushf
movsl
push
in
mov
xchg
call
xor
mov
cmp
cld
pop
add
jge
pushf
mov
push
push
cli
add
push
fcompl
mov
lret
xor
mov
dec
enter
xchg
out
daa
fwait
ljmp
hlt
lea
out
mov
sahf
or
dec
add
or
mov
add
adc
xchg
add
pop
mov
jnp
stc
lds
pop
jge
pop
mov
pop
cld
mov
sub
xor
nop
cmpsl
and
cmp
adc
pop
int3
xchg
fisubl
xchg
lret
jo
pop
xchg
xchg
xchg
ret
lret
into
cli
loope
dec
mov
pop
dec
xchg
test
mov
jle
push
dec
lahf
roll
pop
pop
sahf
jns
or
push
xchg
loop
cmp
lock
jle
repnz
cwtl
mov
repz
dec
lods
flds
movsb
loop
push
mov
push
into
xor
out
rcrb
xchg
adc
idivb
je
sub
jg
or
adc
jae
divl
fsubr
mov
call
loop
repz
cmpsb
rcrl
and
lea
push
pop
in
dec
nop
cmpsb
inc
dec
xchg
sbb
pushf
orb
dec
test
bound
fiaddl
jne
xor
jnp
and
jne
shll
sub
push
dec
add
sub
pushf
push
dec
test
push
movsb
sbb
pop
rep
fs
inc
cmpsb
dec
jmp
jp
cmc
mov
sti
inc
mov
xorb
fiaddl
movsb
cmp
nop
sbbl
int3
shlb
jo
stc
mov
push
sbb
sbb
dec
inc
push
in
sahf
fs
cld
jl
daa
imul
push
sbb
add
pop
cmp
jmp
pusha
es
adc
iret
aas
add
push
and
arpl
ficoml
sbb
mov
xor
popf
addl
cmc
inc
sarl
sbb
xchg
cmp
cmc
mov
mov
sti
mov
nop
sub
sub
jne
ja
aas
push
xlat
pop
mov
inc
outsl
lods
insl
rcrb
or
jp
repz
out
sub
clc
dec
mov
push
xor
jno
sub
jno
cwtl
add
add
rcr
cltd
popf
add
pop
mov
xlat
jns
and
xor
xchg
jnp
cmc
lret
stos
test
shlb
jne
sbb
mov
pop
mov
adc
lret
jmp
out
das
add
cmc
mov
sti
mov
sub
out
pop
dec
movsl
sbb
idivb
into
pop
adc
mov
jne
add
dec
fwait
xchg
scas
dec
jecxz
dec
mov
cltd
adcb
cmp
in
push
push
cmp
shll
shll
mov
push
jecxz
adc
push
outsl
or
cmpsb
mov
sub
subl
add
cmc
sbb
mov
subb
dec
lahf
out
arpl
lret
pop
sbb
pop
lods
jg
test
jnp
insl
mov
lahf
incl
mov
sahf
mov
mov
sbb
mov
repnz
ja
mov
add
sub
in
dec
mov
push
aad
adcb
inc
push
lods
adcb
ljmp
test
mov
sarb
repnz
in
dec
jns
dec
inc
adc
cwtl
adc
shlb
pop
add
dec
mov
leave
mov
pop
sub
mov
xor
cmc
ja
stc
loop
push
pop
pop
in
cmp
lock
sub
and
sbb
or
and
enter
dec
sub
fstpl
add
jo
ja
sub
mov
cmp
push
in
pop
stos
xor
xchg
pop
leave
cmpsl
lds
mov
xchg
pop
adc
lret
add
xor
dec
ret
mov
mov
fldenv
fimuls
pusha
mov
test
pop
rcrl
rorl
mov
sub
sub
mov
push
inc
xor
xor
mov
adc
mov
icebp
imul
arpl
dec
je
aaa
push
icebp
inc
mov
dec
imul
outsl
xorl
stc
push
loopne
rolb
xchg
cmp
jbe
xlat
jbe
jl
mov
rclb
loop
pushf
data16
cmpl
xor
jmp
jb
add
icebp
dec
ds
iret
mov
dec
adc
gs
sub
inc
out
lret
outsb
and
sbb
or
in
js
and
test
aaa
and
xor
pop
repnz
xor
aaa
out
jnp
mov
mov
scas
js
pop
sub
or
repz
mov
aaa
scas
or
pop
mov
pop
push
jge
and
or
ja
adc
mov
setne
or
pusha
sbbl
popa
inc
in
mov
push
rorl
les
and
popa
dec
push
enter
rcr
sub
mov
push
pop
rcl
fiadds
sarb
xchg
pop
add
insb
lds
packuswb
push
stos
fisubs
int3
insl
movsb
sub
adc
clc
jne
lcall
xchg
pop
mov
sahf
cmpsl
sbb
pop
xchg
arpl
das
mov
rcr
movsl
cmp
mov
xlat
sbb
xchg
push
je
insl
test
mov
xor
add
pop
das
clc
sbb
mov
mov
xor
pushf
dec
movsl
pop
cmp
or
xchg
pop
sar
mov
mov
pop
hlt
cmp
jns
and
and
pop
fbld
xchg
aam
bound
sbb
inc
insl
sahf
sbb
push
inc
movsl
or
das
mov
mov
and
xor
lahf
sbb
sahf
fs
adc
push
aam
cmpsl
pop
xchg
jnp
in
aam
outsb
sbb
cmpb
pop
add
dec
jns
inc
sub
rorb
xchg
push
xor
fadds
or
sub
stos
mov
xor
adc
mov
fst
ret
neg
add
imul
out
and
fnsave
or
and
and
popf
lret
push
loopne
mov
arpl
inc
loopne
movsl
fldt
push
loop
xchg
xchg
push
ljmp
pop
out
repz
jbe
sbb
cmpsl
hlt
clc
add
sti
loopne
and
call
sbb
xor
jl
clc
jb
pop
cmp
add
push
push
cmpsb
stc
inc
insb
stos
sbb
push
nop
mov
push
inc
mov
xchg
popf
mov
jle
in
sub
out
movsl
jmp
mov
xchg
cmp
lret
pop
and
fiaddl
mov
lcall
adc
xchg
dec
sub
inc
xchg
dec
ss
lock
push
into
rcr
loopne
test
mov
stc
insb
out
cmpsl
leave
sub
sub
sbb
or
lret
stc
dec
or
xlat
loopew
jmp
pusha
cmp
dec
dec
js
movsl
mov
add
repnz
aad
or
leave
dec
pop
orb
scas
loope
rcll
mov
adc
push
insl
fidivrs
in
sbb
push
cmp
sahf
or
lret
mov
mov
addr16
add
push
cmp
roll
jnp
pop
jmp
add
adc
es
aad
pusha
jge
lahf
and
add
inc
dec
dec
insb
pusha
fwait
cmp
push
or
sbb
outsb
push
adc
inc
insl
pop
test
std
push
pop
out
push
and
lods
ja
sub
add
sub
mov
inc
lahf
push
rolb
arpl
and
leave
dec
mov
jp
cmp
stc
mov
cmp
or
and
rcrb
inc
inc
adc
jle
sbb
std
loope
mov
or
mov
xchg
pop
ja
jl
jp
mov
adc
pop
ss
aad
imul
mov
sbb
mov
icebp
cli
xchg
mov
adc
int3
mov
push
and
cmc
out
aaa
push
faddl
xor
and
sbb
enter
xor
jg
lods
imul
lea
test
pop
push
xor
int
pop
mov
xchg
sbb
lret
idivl
jbe
mov
or
xchg
cs
dec
dec
out
insl
es
pop
cmpsl
rcl
arpl
inc
outsl
in
xchg
xor
dec
push
fwait
cli
int
jo
pop
sub
popf
mov
aam
cmp
xchg
jbe
pop
dec
fscale
and
lret
xchg
add
dec
out
in
leave
lret
mov
sub
lea
adc
xor
in
jne
mov
or
lock
sti
lea
add
sbb
rcrb
inc
ds
pop
faddl
push
fnstcw
sbb
js
inc
sbb
pusha
mov
xchg
xlat
or
push
mov
push
arpl
cmp
cmp
fbstp
mov
mov
lcall
insb
inc
jae
inc
int
outsb
push
jbe
call
xor
rcrb
imul
sbb
xchg
das
mulb
pop
stc
fbstp
mov
jno
stos
scas
into
pop
cmpb
sbb
rol
sub
pushf
out
mov
les
sub
mov
adc
test
nop
pop
sub
ret
mov
cli
jbe
and
dec
add
andb
cmpsl
int
fdivrs
fsubrl
xchg
pop
shlb
mov
int3
sahf
das
sub
mov
sbb
cmpsb
jecxz
mov
adc
shlb
xor
mov
inc
nop
and
pop
cltd
stc
mov
pop
out
lahf
out
flds
add
xchg
or
iret
pusha
mov
adcl
jp
mov
insb
xchg
cmp
sbb
or
push
cmc
test
fsubr
jge
test
outsl
inc
subb
and
mov
dec
or
or
lods
cwtl
cld
in
cmc
pop
pop
test
xchg
add
aaa
pop
cwtl
mov
sbb
jns
add
movl
xchg
add
add
fs
xor
sub
insb
sub
jb
jbe
lods
inc
lahf
out
imull
jg
pop
inc
mov
sbb
les
xlat
repz
cs
out
cmp
sbb
pushl
loope
xchg
mov
inc
sub
leave
sub
das
ret
cmp
mov
mov
mov
ss
cmpb
ret
pushf
and
dec
adc
divb
sbb
inc
gs
movsl
cmp
inc
xor
cmp
mov
into
or
fidivl
push
loop
int
cmp
repz
gs
dec
int
pop
icebp
dec
cli
call
dec
xor
insl
das
imul
or
mov
xchg
pop
jl
ficoml
clc
fwait
test
mov
pop
sub
push
or
dec
adc
dec
andb
hlt
mov
sbb
mov
sub
arpl
xchg
rol
ret
hlt
ss
inc
addr16
repz
or
adc
stc
jp,pt
mov
sti
push
int
stos
xor
xor
fstp
divb
xchg
or
rcrl
adc
pop
push
ja
hlt
out
and
loop
sarl
icebp
mov
push
clc
add
xchg
mov
xor
or
dec
dec
sbb
mov
testl
adc
mov
aad
cmp
sahf
lock
jbe
or
mov
inc
cmc
inc
pusha
cmpb
dec
mov
popf
dec
mov
ret
jae
jmp
call
fbstp
xchg
ljmp
pop
push
outsl
mov
fucomip
sbb
lock
sbb
je
add
jb
push
popa
scas
lcall
inc
jle
xlat
mov
les
pop
pop
inc
inc
xchg
or
in
push
pop
lcall
gs
jle
test
push
pushf
lcall
mov
adc
sub
repz
cmp
push
dec
repz
xchg
pop
mov
inc
out
xor
dec
push
arpl
shr
fcomip
push
daa
pop
ss
and
push
xchg
jae
in
fwait
pop
and
mov
mov
stos
fs
movsb
xor
lods
jge
out
cmc
lcall
mov
fdivp
cwtl
in
add
daa
adc
shl
fstpt
test
and
insb
sbb
push
adc
por
jecxz
fwait
sbb
out
push
loopne
nopl
xor
scas
out
push
cmp
pop
fimuls
jae
aad
add
into
mov
inc
add
arpl
repz
xchg
loop
pop
xchg
and
mov
lahf
xchg
lea
push
push
cmc
adc
imul
stc
mov
jbe
or
in
sbb
add
popf
hlt
jbe
adc
cli
push
and
xchg
xor
xchg
aam
enter
add
jl
jbe
int3
leave
xchg
addr16
xchg
aas
es
cmp
adc
adc
fwait
es
add
setl
movsl
sbb
out
mov
int3
int3
inc
cs
lahf
mov
ret
add
adc
adc
and
mov
hlt
mov
ret
mov
out
outsb
cmp
iret
dec
mov
pop
in
xor
mov
sub
lods
addr16
movsl
mov
mov
loope
adc
pop
movsb
xchg
test
and
cmp
jl
pop
inc
ret
data16
scas
jns
add
mov
loope
arpl
int3
popf
rsm
aaa
jae
les
insl
loopne
pop
mov
int3
mov
fs
xor
push
inc
xchg
shrb
or
and
mov
aad
lock
push
mov
dec
xlat
fs
int3
call
adc
cld
push
jp
repz
movb
and
in
sti
rcll
pop
pop
mov
pop
call
dec
in
aad
movsl
jb
cwtl
rcll
inc
shlb
aam
jmp
fiadds
in
shlb
in
mov
popf
in
ret
fwait
lcall
test
add
sbbl
fbld
cmp
adcb
push
icebp
iret
mov
xlat
into
or
cmp
dec
mov
and
sub
mov
xor
jo
adc
adc
ja
mov
mov
iret
inc
and
test
cli
loopne
int3
push
addr16
subb
popa
mov
outsl
mov
mov
push
dec
ds
arpl
adc
scas
xlat
inc
push
loope
daa
push
leave
inc
dec
xchg
sarb
jb
mov
or
push
lock
jnp
or
mov
and
lret
inc
lahf
ss
pop
orb
sbb
aad
jne
or
test
dec
rorw
jo
rcl
lcall
sub
and
and
icebp
push
cmp
enter
shlb
sbb
mov
mov
sub
xor
and
xlat
mov
sbb
jns
sub
shl
enterw
add
jl
xor
pop
pop
lea
xchg
sbb
inc
mov
mov
test
test
js,pt
cmp
stos
pop
inc
push
inc
push
fwait
pop
fsubrl
xchg
pop
shll
dec
ja
movsl
lcall
or
jo
xchg
out
ljmp
push
mov
xor
in
add
negl
pop
pop
cmpsb
jge
push
scas
or
sbb
adc
stc
mov
sbb
or
adc
adc
sub
decl
xchg
and
repnz
fwait
sbb
in
mov
pop
jo
mov
mov
mov
pop
adcb
shll
and
mov
mov
jle
push
cmp
pusha
sub
ret
dec
imul
pop
jp
sub
mov
adc
jmp
sbb
sbb
lret
mov
and
ret
ss
cmp
cmp
jge
jns
jmp
xor
xor
pusha
pop
lahf
inc
ror
iret
jne
enter
imulb
lods
or
loope
ljmp
dec
dec
rcl
inc
test
add
enter
mov
inc
mov
lock
sti
loop
repz
sahf
in
imul
mov
xor
jae
out
push
dec
int
ljmp
pop
jmp
and
ret
in
scas
mov
test
cmc
cmp
push
lods
cmpsb
mov
jmp
int
push
ss
test
nop
lret
imul
repz
add
test
push
lret
adc
jmp
ret
mov
xlat
mov
in
lahf
or
inc
push
aaa
push
jo
fnstcw
fmuls
test
cmc
das
push
je
je
mov
mov
mov
jle
jns
mov
mov
lahf
xchg
dec
arpl
xorl
cmp
repnz
cmc
int3
jb
in
pop
mov
pop
jae
inc
pop
cmc
push
ss
dec
xor
xorb
sti
jno
push
movsl
push
in
add
fnsave
ss
pusha
sub
mov
and
cmp
adc
dec
or
cmp
pop
es
add
sbb
shrl
scas
xchg
lcall
lods
or
mov
nop
mov
sti
pushf
add
in
mov
fildll
stc
jne
ret
ret
cld
addr16
jl
dec
jbe
lahf
lods
int
xchg
cmp
cmp
mov
or
sbb
mov
xor
cltd
mov
icebp
inc
xor
fistpl
lods
push
dec
jbe
in
ljmp
mov
xchg
sarb
sahf
fsts
test
adc
mov
dec
call
rcr
mov
sbb
movsl
mov
xor
adc
xchg
adc
leave
lcall
repnz
mov
call
clc
xchg
in
ljmp
or
cwtl
dec
imul
in
push
push
sbbl
xor
sarl
mull
pop
stos
in
pop
into
movsb
jecxz
stos
clc
mov
icebp
ds
in
inc
test
mov
xchg
mov
xchg
add
test
subl
fidivrl
sbb
dec
ja
out
lds
push
cs
loope
cmp
inc
mov
and
push
cmpsl
lcall
xor
pop
jo
add
in
jo
xchg
pusha
add
adc
jbe
mov
fdivrl
es
jne
inc
int3
aas
cwtl
dec
or
and
xchg
stos
lods
test
mov
sub
jo
sbb
jne
scas
sub
loopne
push
popa
ret
ret
insb
mov
push
xchg
adc
inc
ss
dec
adcb
sbb
cmp
xchg
repnz
xchg
out
jl
mov
push
jno
test
and
fsincos
mov
inc
push
ja
insl
cli
std
je
adc
or
scas
fstp
dec
cs
sub
call
add
adc
stos
lock
xchg
mov
inc
push
mov
jnp
sti
push
fdivl
fildll
xor
or
and
xor
cmp
mov
sahf
frstor
roll
sahf
bound
inc
or
pop
loop
popa
dec
fmul
and
mov
xchg
xor
in
movsb
data16
test
push
jb
inc
adc
aam
cli
xor
fstps
sbb
enter
ds
or
andb
fisubs
jo
cmp
inc
arpl
popa
mov
lretw
icebp
gs
dec
inc
mov
mov
push
lock
arpl
andb
sbb
push
or
push
rcrl
sti
je
gs
insb
mov
int3
fcmovne
or
lcall
je
imul
mov
push
and
xchg
pop
loopne
xor
pop
dec
divb
mov
sub
insb
xchg
sub
nop
adc
lret
ret
out
add
test
mov
stos
jle
aam
mov
in
sar
add
arpl
mov
sub
mov
pop
cmp
iret
scas
lcall
pop
mov
and
jne
push
imul
pop
dec
and
ja
pushl
test
sub
ret
push
pop
add
mov
jo
mov
sbb
xor
leave
pop
push
mov
movsb
inc
and
loopne
repz
shlb
fwait
and
ljmp
popf
dec
xabort
stc
sbb
mov
test
jecxz
adc
movsl
mov
ja
mov
sar
lea
pop
stos
or
push
idivb
pop
in
fsubs
push
sub
push
pop
daa
mov
push
adc
dec
jno
movsl
adc
int3
fdivrs
fidivrs
mov
addr16
inc
and
and
pop
repnz
orb
in
cmovnp
and
ljmp
aad
mov
cmpsb
mov
out
add
add
pop
push
stos
pop
mov
add
out
push
mov
in
xchg
sub
out
popa
and
aad
rcl
cli
dec
cmp
mov
sbb
push
xor
nop
push
jge
iret
mov
or
adc
into
jmp
jo
jae
fsubp
movsl
repz
mov
or
out
fwait
lcall
sbb
mov
cmc
addr16
cmpsl
sbb
mov
push
jo
xor
jg
mov
pop
xchg
inc
jbe
pop
add
aaa
dec
and
cwtl
mov
and
jnp
pop
in
adc
and
mov
shl
jae
xchg
add
jge
cltd
inc
fsubrs
sbb
fstps
dec
aaa
ljmp
dec
cmp
cmp
sbb
femms
fidivl
fistpll
cmp
pop
add
inc
decl
adc
pop
dec
lds
mov
cmp
roll
sbb
and
popf
and
shll
in
int3
jo
xchg
xchg
lds
pop
imull
push
adc
inc
out
repz
stos
lahf
fldcw
ret
mov
add
jnp
aad
lret
add
call
jg
popf
jbe
cmpsb
shll
lahf
mov
repnz
lea
call
xchg
mov
orl
and
mov
loop
xchg
jmp
inc
ja
xchg
loopne
mov
xor
lcall
push
je
out
or
hlt
scas
imul
imul
push
dec
sub
gs
adc
push
mov
dec
es
fdivl
gs
adc
adc
dec
lds
push
into
sub
or
mov
pop
js
inc
jmp
dec
cmpsl
hlt
inc
mov
cld
pop
enter
jge
int
cmp
lds
popf
into
cmp
sar
ljmp
adc
sub
mov
xchg
sub
and
jo
bswap
mov
test
mov
add
stos
aas
je
jne
cmpsb
outsb
mov
loop
mov
inc
sbb
adc
mov
lcall
ror
jb
pop
jp
cwtl
std
adc
fidivs
jg
mov
les
out
je
stc
jo
jl
push
mov
jmp
fsubrl
xchg
or
sbb
add
jnp
sbb
cmp
out
xchg
call
cli
out
clc
push
fstpl
and
mov
lcall
daa
nop
in
sub
mov
shll
and
xchg
aas
push
addr16
push
inc
dec
and
add
test
xchg
ljmp
loopne
adc
fiaddl
inc
in
arpl
int3
xchg
shrb
xor
andl
test
mov
orl
mov
sbb
ljmp
ja
outsl
daa
xor
mov
stos
jl
fisubrl
ss
xchg
jp
repz
xchg
testb
sub
jmp
aam
or
inc
or
inc
push
lea
fstpt
add
push
nop
mov
adc
decl
mov
cmp
cmp
pop
xorb
sub
outsb
jecxz
dec
out
push
xchg
fisubrl
loop
inc
call
mov
fwait
repz
mov
and
ret
mov
das
adc
daa
jno
pushf
xchg
or
mov
out
in
mov
sbb
xor
mov
xor
dec
jbe
iret
or
mov
dec
in
fdivrl
adc
shlb
mov
mov
loope
pop
hlt
inc
mov
fs
pop
push
pop
out
pusha
in
lods
leave
mov
lods
xchg
or
jae
sub
decl
jae
dec
or
in
sbb
sarb
mov
sub
adc
mov
lods
or
jnp
push
ja
ja
imul
aas
xchg
out
pop
sbb
push
mov
xchg
inc
cs
mov
in
pop
mov
xchg
sbb
rorl
lods
and
shll
mov
push
sub
and
sub
lods
outsl
push
int
stos
mov
and
mov
mov
mov
mov
xchg
mov
pop
sub
sbb
adc
faddl
into
enter
sub
cltd
mov
xlat
cmp
jbe
lret
sahf
das
mov
loopne
inc
inc
xor
add
fwait
mov
mov
addl
jecxz
mov
push
or
mov
mov
dec
cmp
sub
int3
xor
pop
jb
mov
push
mov
mov
adc
test
into
fnstsw
and
stos
mov
mov
cmovbe
pop
push
pop
stos
push
les
xchg
mov
or
adc
jmp
popa
ss
jmp
jecxz
imul
pop
push
ss
push
test
jnp
repnz
inc
sub
push
call
mov
shll
xlat
bound
fcomps
add
repnz
sbb
aaa
xchg
fwait
orl
cmp
fists
sub
scas
outsl
jbe
xor
cmp
cmp
push
sub
ret
mov
pop
fadd
and
xchg
out
jnp
lock
and
push
pop
imul
adc
les
pop
jecxz
inc
test
sahf
int
mov
xchg
mov
iret
out
gs
movsl
lret
pop
push
mov
inc
enter
repnz
fbstp
or
roll
loope
cmp
imul
call
mulb
jmp
add
mov
fcmovnb
inc
sti
das
loope
inc
jle,pt
dec
cmpb
xor
iret
in
add
adc
sbb
or
movsl
jmp
mov
mov
out
jb
pop
push
pop
pop
movsl
cmp
mov
jbe
jmp
mov
lret
sbb
aas
jp
ret
subl
mov
push
or
xchg
fwait
jne
or
subl
jae
fimull
in
imul
pop
push
je
hlt
insb
cmp
js
xchg
fnstsw
mov
cli
jge
in
loop
arpl
pop
insb
sbb
jp
std
icebp
add
and
loope
daa
and
outsl
pusha
ret
cld
pop
icebp
or
xchg
adc
cli
shlb
sub
push
test
mov
or
js
das
xchg
dec
je
cmp
or
fbld
or
inc
push
clc
test
jl
adc
mov
and
insl
pop
ja
imul
inc
fnstsw
jnp
popf
test
sbb
cmc
shll
or
lods
movsb
pop
adc
mov
dec
xchg
dec
jg
mov
xor
add
mov
jge
scas
sbb
sbb
inc
mov
test
mov
insl
xlat
fadd
adc
mov
mov
into
push
mov
pop
jb
adc
stc
loopne
adc
outsb
mov
or
cmpsl
sbb
cli
cmp
add
jo
add
add
xlat
cli
loope
rorl
movsl
fstpt
pusha
push
mov
loop
sbb
pushf
push
in
sbb
sahf
shlb
loop
and
aam
sub
adc
es
rorb
push
inc
in
sbb
xorl
mov
sub
cld
and
and
mov
inc
mov
or
data16
mov
adc
stos
scas
les
jbe
adc
add
nop
xor
mov
mov
les
in
mov
insl
and
inc
enter
mov
jp
inc
add
ja
and
cmp
xor
push
sub
sub
and
das
push
out
icebp
cli
push
in
push
mov
call
xlat
in
or
xchg
leave
and
std
xchg
inc
das
pop
scas
mov
xlat
loop
loopne
mov
sbbl
rcrb
ja
jbe
scas
xchg
test
adc
sub
dec
xor
xchg
ret
stos
lret
xchg
rolb
or
sbb
xchg
mov
pusha
int3
movsb
and
sub
lea
adc
and
sarb
inc
ja
fimull
out
mov
packssdw
jl
lea
sub
xchg
lcall
inc
lret
sub
inc
mov
test
push
je
ret
repnz
movsb
jecxz
jae
dec
loope
pop
js
repnz
movsb
pop
cmpsl
outsb
adc
jg
mulb
and
cmc
push
inc
cmpsl
inc
xchg
fdivrp
pop
movsl
gs
lds
mov
scas
push
and
xchg
sti
movsl
pop
adc
sub
dec
inc
je
push
imul
mov
faddp
cltd
jge
xor
mov
add
call
or
pop
andb
lcall
ja
loope
xor
add
lea
xchg
sub
dec
test
lods
jl
jp
xor
lret
std
and
xor
cmp
cmp
getsec
ljmp
pop
cmp
shrl
aam
mov
scas
adc
sub
stos
sbb
pop
cli
enter
pop
add
push
fs
inc
xor
push
inc
add
fwait
xchg
inc
fldenv
dec
cmp
pop
add
out
dec
gs
repnz
in
inc
pop
add
pop
clc
mov
cwtl
inc
stos
add
add
push
cmpl
dec
xchg
pop
test
fcmovne
cmpl
stos
mov
pop
pop
faddl
insl
ret
fdivr
loopne
int3
aad
icebp
dec
xchg
das
sbb
std
jle
sub
sbb
aas
push
fcmovne
push
xchg
std
stc
jno
es
mov
inc
and
xor
push
or
push
or
dec
ja
btc
push
xchg
xchg
mov
ss
daa
insl
jns
push
mov
mov
add
pushf
xor
dec
dec
pop
mov
cmp
aam
stc
xchg
or
and
stc
fwait
cmpl
jbe
lea
scas
neg
movsw
mov
xchg
push
or
ss
andb
mov
into
or
mov
push
cmpsl
and
and
sub
xor
or
aam
nop
cmp
out
xchg
arpl
push
les
shrb
outsb
pop
and
xchg
add
mov
repnz
in
jmp
mov
cmpsb
inc
sub
les
pusha
cltd
cmp
add
or
shr
xlat
movsl
in
xchg
fadds
addr16
jae
sbb
sub
bound
lcall
fistpl
pop
pop
cmp
cmp
ficoms
int3
jb
fwait
test
lretw
mov
movb
add
jge
pop
mov
fs
popa
fisubs
push
and
pop
mov
pushf
insb
adc
insl
cmp
xchg
std
loopne
bound
jb
ss
cltd
faddp
inc
cmc
repnz
inc
adc
js
int
je
jne
lret
cmp
pop
ds
into
std
sub
mov
and
lea
mov
lods
jbe
fsubp
adc
mov
pop
in
pop
sub
jnp
shlb
test
rorb
dec
sub
bound
fldl
loop
jecxz
movsb
push
into
jg
mov
xchg
lret
xor
lods
mull
mov
pop
mov
pop
ja
mov
loope
mov
enter
clc
shll
rcrb
jne
cwtl
aad
dec
aam
insb
fidivrs
outsl
lods
and
movsb
std
je
jb
adc
das
les
sahf
xor
arpl
add
cli
xchg
mov
mov
mov
arpl
cmp
pop
xor
xor
adcl
cmp
cmp
push
xorb
or
sbb
icebp
or
repz
add
mov
push
or
cmpsb
fisubl
sbb
rcll
add
outsl
adc
sbb
cli
popa
pop
sbb
xor
sub
mov
cmp
and
cmpsb
cltd
shll
xchg
inc
aaa
sahf
ret
shlb
in
xchg
mov
idivb
xor
and
pop
xchg
add
xlat
stc
fists
jbe
dec
adc
lock
stc
xlat
xor
jge
leave
repz
pop
std
cld
add
xor
pusha
int
and
pop
or
pushf
mov
cmp
in
sbb
adc
fdivrl
pop
jle
in
jmp
inc
jns
mov
insl
xchg
mov
dec
inc
sbb
or
insl
cmp
and
aam
cltd
mov
nop
pop
pop
loop
cmp
out
repz
push
out
dec
add
int
ret
sub
pushf
inc
in
push
xrelease
mov
lret
jmp
in
adc
or
sti
arpl
sub
popa
push
ret
xchg
mov
jbe
int3
pop
push
pop
jno
pop
xchg
dec
clc
enter
shl
aas
out
cwtl
xchg
out
or
lcall
cwtl
and
cmp
mov
dec
sbb
pop
mov
cmpsb
cmp
lea
in
fldenv
stc
insb
fstpt
vpmaxub
cmp
jne
sub
xor
xchg
fldcw
add
jns
push
insb
addr16
and
jno
ret
in
mov
jnp
adc
adc
cwtl
loop
xor
roll
ljmp
outsb
xchg
out
jle
push
sahf
fwait
rclb
popf
pop
roll
dec
mov
mov
testl
pop
daa
ja
rorb
lret
push
jb
or
nop
jle
sbb
mov
dec
repnz
or
leave
test
sub
xchg
out
test
outsl
pop
or
push
addr16
in
int
mov
outsl
pop
pushf
mov
or
mov
shrb
adc
sahf
lret
push
icebp
mov
loopne
sbb
xchg
sub
pop
lcall
xor
push
dec
pop
cmp
mov
inc
and
mov
push
xor
adc
movsl
sub
pop
add
cli
xchg
test
mov
lret
cmpb
add
push
sub
mov
in
xor
or
xchg
dec
ss
scas
or
lock
jle
mov
sbb
jo
push
dec
sbb
adc
out
jmp
or
aam
pop
outsl
sbb
pop
jp
fildl
subb
mov
dec
fwait
enter
push
jg
fcompl
in
push
negb
pop
or
aam
dec
and
cmp
and
mov
das
cmp
ror
call
shll
rcll
lods
xor
and
movsl
push
mov
icebp
cmovge
call
cmp
imul
leave
out
xchg
fdiv
rol
mov
jg
std
std
cld
pop
mov
cmp
idivl
out
add
fiaddl
sbb
push
adc
xor
and
push
sbb
imul
aam
nop
sbb
lcall
mov
sahf
mov
pop
aad
stc
adc
push
fwait
sti
sbb
fs
lcall
jecxz
dec
sbb
daa
or
int3
mov
cmpb
in
sar
insl
cmpsb
lock
outsl
inc
sbb
jge
sarl
inc
inc
dec
pop
js
or
ret
dec
pop
add
aas
push
iret
stos
push
mulb
je
dec
mov
in
lods
insl
sub
rol
adcl
or
stos
push
adc
lret
cmc
aam
adc
jbe
xchg
cmp
mov
mov
int3
push
mov
test
inc
fdivr
mov
jae
inc
sbb
lds
lret
std
icebp
cmp
xchg
fdivs
loop
mov
mov
jb
and
pop
jge
mov
inc
out
or
fwait
inc
flds
push
popf
bound
inc
dec
jl
pop
push
dec
out
lret
mov
sub
add
out
xchg
fldcw
loopne
xchg
pop
in
in
test
mov
lahf
aas
mov
test
sub
cmp
inc
mov
or
mov
rcll
adc
lds
jge
and
int
loop
sbb
fninit
mov
addr16
or
jp
rep
add
sub
cmp
xlat
scas
sti
popa
das
int
cltd
mov
shll
dec
ret
out
sbb
pop
and
into
jl
dec
shrl
or
lahf
xchg
or
sarl
xchg
push
push
inc
mov
cmpsl
into
cmovle
and
jmp
mov
pop
lret
repz
fcom
cmp
add
outsl
fs
xchg
mov
xchg
movsl
daa
push
push
arpl
sub
popa
or
aad
icebp
cs
lret
cmp
xor
xchg
and
sbb
or
aaa
int3
push
int
or
stos
jo
sub
or
pop
mov
divl
movsl
lods
or
lods
sub
jbe
aas
lock
pop
sbb
mul
out
popa
aaa
lahf
imul
jnp
sbb
insl
out
mov
negb
fwait
fwait
xchg
and
shrl
adc
push
shrb
stos
insb
lea
push
dec
mov
mov
leave
out
inc
lds
ljmp
in
jmp
scas
movsb
in
insl
movsb
es
call
inc
in
fnstenv
call
and
sahf
dec
sub
fsub
mov
push
andb
mov
and
lock
mov
idivb
mov
ret
ret
addr16
cwtl
cmp
loope
or
fnsave
inc
sbb
std
pavgw
and
inc
xchg
test
sub
cli
mov
lds
xchg
in
mov
rorb
hlt
in
jno
ret
call
mov
xchg
pop
sbb
cs
int
sub
aam
xchg
inc
mov
roll
pop
xchg
mov
mov
scas
jb
xchg
cli
fwait
dec
or
jp
or
and
cmp
mov
mov
mov
sti
mov
shlb
test
arpl
push
fwait
sbb
adc
sub
jmp
xchg
jnp
xor
shrl
adc
sub
mov
jp
dec
sbb
sub
jecxz
push
fs
fisubrs
std
jle
push
adc
shll
cmp
pop
cmp
out
cmpsb
mov
inc
ret
jno
xchg
push
push
iret
xchg
mov
je
loope
mov
mov
pop
push
mov
mov
dec
int3
push
inc
cmp
jmp
or
xor
test
imul
dec
or
mov
lcall
dec
frstor
adc
jecxz
lea
int3
sbb
or
int3
insl
enter
adc
jo
cmp
repnz
test
push
mov
stos
xor
repnz
mov
jb
stc
fs
push
bound
jecxz
pop
aaa
dec
xchg
flds
pop
je
jno
cs
xchg
push
movl
je
daa
imul
mov
into
push
xor
push
add
mov
test
dec
mov
int3
in
xchg
pop
jl
mov
int3
jmp
push
outsl
cmpsb
repnz
sbb
jbe
jnp
adc
jle
pusha
idivb
js,pt
fiadds
sub
fidivl
adc
aad
fwait
sbb
add
pop
ja
stos
lcall
and
stos
rol
aas
or
inc
mov
mov
mov
dec
ds
adc
xor
lret
xchg
xchg
call
mov
idivl
icebp
mov
cmpsb
mov
or
sub
xchg
and
jmp
jp
mov
jg
push
cli
cld
jg
fistpll
sbb
xor
add
add
icebp
call
dec
in
ret
sbb
test
int3
test
xchg
je
and
pop
mov
sub
dec
adc
push
jmp
das
mov
loop
jl
or
sbb
lods
mov
movsb
sub
aaa
testl
mov
sbb
test
aaa
xchg
loope
pusha
and
jg
mov
lods
in
mov
adcb
cmp
lcall
or
test
vpcmpeqb
sbb
movsb
cmc
push
pop
adc
push
sbb
fs
lcall
inc
mov
inc
mov
out
rorb
jb
or
pop
dec
jmp
es
or
into
clc
std
clc
add
sti
jne
movsl
enter
fisubrl
lar
pushf
out
dec
inc
aam
xchg
leave
and
js
cmp
fstpl
cmp
jo
aam
je
aad
in
mov
movsl
adc
sbb
mov
jle
xor
sbb
jecxz
push
jae
loop
aad
scas
add
out
mov
mov
push
ret
fstps
mov
pushf
lcall
sarl
pop
or
xlat
xlat
loopne
xchg
pop
dec
jne
push
sbb
stos
or
decb
in
repz
ret
das
fcoml
xor
dec
cmp
jne
shl
mov
gs
leave
push
dec
xor
mov
mov
movsl
sbb
adc
and
mov
cmpsb
or
shld
imul
popf
xchg
mov
enter
repnz
je
lods
adc
add
fdivp
adc
lods
jmp
aas
xlat
and
xchg
shl
adc
loope
stos
or
aad
int3
inc
mov
ja
insb
in
subl
data16
loope
mov
stos
add
out
btcl
mov
mov
jno
cli
faddl
imul
jb
pop
sbb
stos
dec
mov
pop
xor
push
cmpsl
fwait
sbb
or
cmpsb
mov
pop
mov
dec
dec
sbb
pushf
inc
into
iret
xor
cmp
pop
mov
jo
xchg
pop
arpl
out
sub
ret
clc
nop
sbb
mov
lret
into
insb
push
fnsave
ret
fwait
cltd
outsb
insl
or
dec
xchg
jbe
insb
push
xor
xlat
dec
add
push
icebp
mov
inc
push
dec
add
adc
pop
pop
rcrl
dec
xor
ror
pop
cwtl
dec
mov
inc
cmpsb
dec
fidivrs
sarb
inc
or
and
dec
popa
sub
shll
jge
pop
add
lahf
jae
push
fsubl
cmp
fsubp
sti
std
and
xchg
fnstcw
pop
and
addr16
jp
sub
push
jge
xchg
dec
gs
dec
movsl
popa
insl
jle
jne
sti
adc
repnz
push
mov
pop
insb
push
lcall
sbb
pop
jo
mov
pop
inc
aaa
mov
pop
sbb
dec
xor
cmp
cmp
in
repnz
ds
lret
inc
cld
mov
adc
ja
inc
cld
xor
push
push
imul
adcl
lret
es
add
movsbl
dec
adc
je
pop
and
icebp
js
dec
lock
mov
pop
ss
cmp
or
rolb
pop
push
jns
or
push
aad
xor
cmpb
shll
int3
inc
inc
add
ret
sbb
je
imulb
call
aad
inc
xchg
aas
loope
inc
jae
mov
add
dec
pop
jmp
mov
je
jmp
push
fbstp
jecxz
mov
popa
xchg
movsb
lock
inc
aam
ss
mov
or
popf
ljmp
add
fsubl
cmc
je
mov
xor
lret
lcall
or
aaa
and
loope
out
sbb
cmp
outsl
mov
aad
aad
fisubl
sub
ret
ror
jge
iret
mov
jo
mov
adc
sarl
inc
ret
fdivs
jmp
mov
pop
lret
or
js
xchg
mov
mov
mov
mov
xcrypt-cfb
cmpsl
mov
sub
add
sbbb
jnp
sbb
repnz
mov
shll
roll
jns
jno
repnz
inc
push
xor
mov
xchg
scas
test
or
scas
mov
add
adc
into
sbb
mov
sbb
xchg
or
push
aad
pop
cmpsb
cmpsl
jp
cmpsl
xor
pop
shl
inc
xor
push
aam
mov
add
sub
jne
test
stos
and
aad
push
jg,pn
and
cmp
pop
fidivrs
jbe
mov
xor
test
ss
pop
shlb
xor
gs
push
or
jnp
pop
sub
scas
xchg
lock
add
cmp
dec
gs
rcrb
xchg
pop
inc
jo
mov
push
sahf
inc
adc
dec
data16
aas
sub
pop
pop
mov
into
cmc
mov
mov
or
fwait
xchg
and
into
mov
push
std
sbb
aaa
jne
fwait
sbb
xchg
xchg
push
sbb
jb
jno
mov
leave
pop
jge
push
sbb
pushf
jge
or
stc
sub
out
fs
ret
push
enter
sub
js
movsl
mov
insl
or
xchg
sbb
cltd
mov
out
xor
cmp
mov
push
jge
inc
pop
inc
into
fadds
mov
arpl
ja
lcall
sahf
or
test
rorb
mov
fsubs
arpl
mov
add
mov
jecxz
idivb
js
add
stos
dec
push
add
stos
or
inc
mov
dec
insl
popa
arpl
sbb
test
fdivrp
push
clc
push
mov
dec
xchg
int3
jno
mov
cmp
dec
fcmovnbe
inc
rclb
dec
lcall
icebp
out
adc
or
ja
outsb
push
mov
pop
insb
add
add
into
aad
mov
les
das
push
push
testb
xchg
dec
adc
test
mov
jno
insb
sub
loop
pop
jle
mov
ja,pn
mov
in
xor
call
adc
sub
aas
scas
mov
stc
xor
or
sar
add
pushf
je
push
out
out
cmpsb
jbe
inc
inc
mov
sti
mov
jo
add
xchg
lock
jae
mov
push
pop
and
ja
mov
mov
sbb
xchg
test
cmp
sbb
cmp
mov
mov
lds
xchg
sbb
cmp
mov
inc
lods
inc
stc
mov
bound
inc
inc
pop
push
lea
mov
js
addr16
mov
mov
mov
push
push
sbb
add
pop
mov
ja
add
out
addr16
push
arpl
jle
inc
repnz
movsb
dec
inc
sbb
sti
jnp
adc
shr
jae
pop
cwtl
mov
dec
and
mov
ret
lahf
shlb
scas
ror
mov
out
adc
repnz
icebp
xchg
jnp
in
cmp
mov
pop
xorl
add
insl
filds
lods
enter
mov
pop
gs
or
arpl
or
out
mov
push
mov
mov
push
mov
sbb
xchg
es
dec
cmpb
mov
fisttpll
leave
jmp
xor
mov
cmp
sbb
push
or
cmpsb
shrl
add
mov
shr
lret
add
mov
fldenv
dec
mov
and
inc
sbb
jb
sub
mov
jmp
clc
mov
push
jbe
dec
cld
mov
or
jmp
jb
scas
lods
inc
mov
mov
sub
pop
mov
das
cmpsb
ret
dec
out
adcl
into
insb
loope
insb
sub
mov
inc
push
pop
xchg
mov
cmp
shrl
xlat
mov
cli
stc
and
movsl
xchg
mov
sub
out
mov
mov
inc
pop
jae
fsubs
jp
out
rorb
or
lea
nop
or
sub
inc
xlat
repz
jle
pcmpeqb
inc
movsl
in
mov
jbe
or
push
cmp
popa
mov
jbe
sahf
aam
add
data16
mov
pop
adc
sbb
pop
hlt
repz
fucomip
jge
out
orl
es
mov
mov
mov
cmp
nop
jle
xlat
fcmovbe
xchg
sarl
sbb
inc
cmp
rcrb
imul
sarb
test
xchg
pop
pushf
bound
outsl
xchg
mov
sub
push
test
ret
outsb
or
push
xchg
mov
lret
cmp
popa
dec
into
rclb
gs
hlt
or
test
arpl
and
sbbb
push
sbb
push
xchg
xchg
xchg
stos
pop
gs
mov
call
scas
jae
mov
adc
ret
cmp
add
mov
js
int3
sbb
loop
dec
sbb
and
loope
mov
lret
mov
cwtl
pop
push
fmuls
dec
pop
mov
inc
mov
aad
and
xchg
inc
adc
sbb
insl
and
inc
and
jge
cmp
sub
cmpsl
mov
nop
fadds
cs
into
mov
pop
mov
sub
mov
int
dec
xor
mov
dec
cltd
inc
sete
lea
jmp
or
mov
sbb
mov
mov
or
push
lock
mov
mov
xchg
sub
out
insl
push
scas
push
fnsave
call
push
insb
dec
lock
push
add
lret
or
sub
mov
ret
into
pop
mov
shl
pop
add
pop
push
notb
push
dec
mov
xor
jecxz
jp
out
cmc
inc
push
sarl
movsb
lret
lahf
inc
les
into
int3
lods
lods
out
hlt
ljmp
shll
pop
out
aam
aas
pop
sub
and
rorb
sti
push
loope
inc
loopne
daa
xchg
or
ret
jne
push
jp,pn
lea
or
and
outsl
jns
scas
mov
jo
mov
aas
sbb
cmp
ss
cli
clc
cmp
push
cmp
xor
push
mov
sbbb
mov
sarl
rol
cmpsb
rcll
and
fwait
push
mov
scas
xlat
adc
lahf
xor
test
push
iret
inc
insl
pop
lods
push
xchg
enter
lret
add
pop
call
out
stos
testl
mov
push
xor
xor
adc
jl
mov
into
or
push
inc
bound
inc
ja
stos
bound
fisttpl
adc
mov
jg
lea
scas
insb
xlat
stc
and
xor
fldt
or
add
add
add
and
pop
or
or
daa
mov
pop
mov
ret
mov
sbb
sub
adc
inc
ret
adc
mov
popa
inc
test
inc
jbe
test
movsl
inc
js
aaa
jns
sbb
roll
and
ljmp
pop
sbb
sub
int3
lcall
push
adcb
and
pop
and
push
ds
neg
inc
or
cmp
subb
int3
pop
int3
aas
sub
dec
sub
aaa
push
xchg
loop
nop
loopne
int3
inc
mov
push
arpl
pop
add
xor
mov
std
dec
dec
sahf
ja
jp
dec
imul
iret
or
outsb
fiaddl
scas
xchg
xor
jp
sbb
mov
psllq
loop
sti
inc
jle
iret
jns
jp
pop
movsb
stos
fnstcw
loopne
sbb
add
fstpl
mov
out
jns
les
enter
push
rorb
dec
lods
dec
jns
push
mov
or
adc
daa
xlat
and
fdivs
pusha
cmp
push
jle
and
push
or
movsl
add
or
push
roll
popf
js
call
or
sub
sub
popa
ss
pop
jmp
dec
fdivrl
pop
enter
pop
sub
push
pop
idiv
xor
mov
sbb
push
xor
pop
sbb
inc
dec
adc
popf
sub
push
fwait
sti
dec
dec
lret
mov
aam
xrelease
cmp
sahf
shrb
pushf
mov
stos
addr16
es
imul
cltd
sbb
sub
dec
in
ss
or
push
out
or
jb
movsl
mov
into
xchg
cmp
arpl
and
aam
insb
pop
cmc
test
enter
fwait
out
sub
icebp
sahf
loop
test
inc
push
push
js,pn
jmp
adc
sti
aad
je
andb
out
cli
aas
arpl
fldl
sbb
sbb
shld
ja
je
pop
jp
js
movups
fstpt
fnsave
lea
pop
jg
test
nop
out
sub
cmp
inc
or
cmp
clc
dec
ror
dec
sub
lcall
imul
pop
fisubrs
mov
mov
das
jp
fwait
xchg
out
flds
shll
mov
jbe
jmp
mov
movsb
call
sbb
jmp
ret
cmc
fsubrl
mov
pushf
adc
repz
mov
sub
aam
or
out
clc
jge
mov
push
add
addb
clc
vpmulhw
mov
sbb
dec
outsl
xlat
je
and
cmpsb
mov
mov
ret
pop
aam
mov
dec
xor
xor
pop
subb
and
mov
jno
inc
repnz
and
fucomp
mov
repz
mov
fs
rcrb
negl
adc
iret
pop
cmpsb
repnz
jle
pop
loopne
pop
decb
cmpsl
and
dec
enter
stos
xchg
js
dec
out
inc
mov
jl
xor
mov
lcall
dec
out
or
mov
xchg
outsb
sub
cmp
testl
push
jg
cmpsl
add
or
clc
lret
scas
push
xor
ds
in
xor
adc
mov
ljmp
stos
pop
cmp
push
mov
push
sbb
in
fs
pushf
cmc
xlat
scas
loopne
lahf
test
lcall
inc
cmp
lret
mov
xchg
cmpsl
jb
mov
in
imul
nop
test
jge
mov
ljmp
xor
iret
insl
std
loopne
push
mov
ret
mov
or
aaa
into
dec
and
mov
shrb
sbbl
pop
sti
mov
andb
int
mov
inc
out
stos
xchg
xchg
lret
fsubrs
mov
push
out
roll
call
push
movsl
aaa
ret
jnp
mov
pop
cwtl
mov
dec
mov
ja
lret
lea
pop
fnstenv
movsb
push
mov
jbe
xor
sub
push
jl
or
add
imul
adc
adc
lods
push
dec
pop
or
push
adc
pop
pushf
int3
aam
mov
xor
add
inc
movsl
xchg
inc
or
repz
push
incl
stc
orl
aas
add
test
pcmpgtd
sahf
out
jo
inc
pop
sbb
adc
cmp
adc
mov
ret
ljmp
ss
hlt
sbb
repz
sti
mov
jecxz
out
jo
fs
xchg
and
xchg
jl
sub
pop
or
sub
arpl
cmp
inc
data16
xchg
decl
sarl
mov
int3
sbbb
xor
cld
sub
js
insb
ret
sbb
fimuls
repz
out
outsb
cld
mov
inc
movsb
dec
jb
mov
pop
jo
mov
jecxz
gs
cmpsl
mov
fidivl
push
int
jnp
loopne
pop
out
and
mov
call
icebp
divl
test
adc
fwait
inc
test
dec
push
lahf
dec
add
xor
or
jbe
add
mov
or
fistl
mov
mov
mov
cmpsb
mov
jne
in
xchg
lds
loop
sbb
test
xor
ds
xlat
arpl
shll
lcall
ljmp
ret
mov
pusha
xchg
test
sti
scas
add
cmp
test
jmp
jmp
jb
pop
or
xchg
ds
test
dec
mov
lcall
push
repz
xchg
xchg
mov
enter
es
mov
arpl
mov
add
lahf
xor
sub
dec
sub
clc
push
lods
je
or
xchg
lret
loopne
mov
inc
loopne
jp
push
imul
xchg
mov
push
cmp
pop
cmp
inc
or
push
out
push
sub
test
imul
xor
cmp
xchg
xchg
adc
clc
pop
mov
inc
or
xchg
ljmp
test
lock
push
sbbl
push
mov
pop
data16
pushf
lds
movsb
dec
rclb
pop
in
xchg
insb
mov
push
int
std
inc
and
insl
xchg
cmp
jg
push
adc
and
in
jg
dec
pop
inc
jns
cwtl
aaa
cld
add
iret
adc
lods
push
inc
outsb
xchg
add
add
cmc
push
mov
jg
add
cmp
pop
cmp
mov
cmp
sarl
add
aaa
cld
dec
xchg
addr16
mov
mov
mov
mov
xchg
adc
pop
jae
dec
lret
mov
test
add
repz
sub
and
dec
fwait
aas
std
mull
jbe
mov
test
dec
rolb
dec
push
shl
pusha
and
insl
daa
dec
xchg
jl
iret
and
mov
adc
fcmove
jns
gs
loope
fld
mov
cmc
loope
ljmp
dec
and
sub
jge,pn
arpl
pop
pop
xchg
add
es
add
push
push
mov
and
add
in
faddl
mov
sbb
sub
stc
test
and
fstpl
pop
shlb
fcompl
lea
repnz
iret
push
push
pushf
negb
divl
jne
loop
fsubr
add
jne
sbb
clc
push
push
sti
imul
mov
popf
les
cmp
adc
xor
ljmp
ss
imul
cwtl
xchg
mov
adc
jno
push
js
mov
pop
mul
dec
inc
stos
add
pushf
jae
test
cmp
push
ljmp
and
sub
and
stos
loopne
push
icebp
jg
xor
jne
shlb
mov
dec
scas
xorb
sbb
ret
repnz
mov
mov
popa
xor
and
jne
xor
lea
ljmp
repnz
push
lahf
jle
lds
xchg
outsb
mov
imull
mov
mov
je
pop
iret
jnp
iret
inc
cmpsl
cmp
lret
ja
hlt
adc
push
lcall
and
mov
movsl
xor
inc
leave
scas
in
mov
jge
dec
dec
push
xchg
add
sarb
xchg
ret
inc
inc
sub
dec
mov
xchg
into
inc
pop
jl
fcoml
pop
mov
push
xchg
shll
inc
gs
sub
cli
mov
and
pop
jecxz
fisttps
loope
jmp
into
mov
adc
dec
repnz
sti
inc
and
mov
test
scas
lods
jne
xlat
mov
xchg
xor
pop
cmp
jbe
pop
adc
push
popf
ficompl
inc
sbb
sub
adc
movsl
add
lock
sub
mov
jmp
testl
mov
sbb
dec
pop
cli
fwait
push
jnp
stos
pop
arpl
and
and
xchg
sbb
sbb
mov
jl
vpsraw
sub
sbb
call
push
mov
and
fimuls
in
mov
pop
jge
cwtl
adc
or
cli
mov
mov
mov
scas
pop
xchg
in
push
addb
sub
aaa
jns
bndstx
fs
cwtl
pop
pop
je
nop
inc
jmp
inc
and
add
scas
cmc
movsb
mov
je
insb
ja
popa
mov
jp
les
push
aad
push
push
mov
in
imul
in
xchg
ds
xor
std
jg
insl
mov
mov
cld
sub
inc
jmp
jb
jl
stc
adc
enter
stos
xor
ret
cmpsb
fnstsw
and
imulb
scas
gs
jae
mov
ret
adc
out
mov
push
xchg
cmpsb
test
jecxz
or
jae
xor
sub
sub
je
andl
and
jmp
add
add
aaa
cmpsl
call
mov
sbb
repz
cld
xor
mov
nop
repz
imul
aas
in
and
pop
fstpt
or
jne
je
je
mov
mov
add
loop
js
jl
dec
dec
test
and
jno
inc
test
loope
fdivl
mov
adcb
mov
push
shll
adc
pushf
pusha
int
sbb
mov
mov
sbb
ret
pop
push
mov
cmpsb
icebp
mov
jo
cmp
cmp
jnp
call
loop
insb
pop
mov
pusha
push
das
inc
add
ret
push
fisttpll
cli
leave
es
adcb
lea
sub
dec
mov
fcom
popa
mov
xchg
lahf
daa
dec
xor
push
aas
or
mov
or
mov
leave
jmp
adc
clc
push
ds
push
arpl
add
sub
adc
lahf
test
lock
ret
mov
aam
dec
jmp
cmc
imul
jl
outsl
out
repz
inc
dec
imul
movsb
mov
addb
pushf
pop
mov
test
enter
push
dec
shr
add
rolb
cmp
adc
add
repz
cmpsb
and
jmp
xor
xchg
scas
into
inc
xor
jne
roll
repz
sbb
insb
or
pop
pop
out
sti
sub
and
push
adc
cwtl
inc
xor
jae
xchg
in
hlt
or
clc
ljmp
mov
or
pop
jbe
sbb
sub
xor
push
xchg
push
sbb
imul
mov
or
push
dec
dec
xor
insb
dec
ljmp
cmp
clc
insl
xchg
mov
dec
popf
push
jno
cld
push
push
jne
arpl
shl
fwait
sbb
jecxz
aas
mov
loopne
ret
cmp
adc
dec
adc
or
add
lods
dec
lea
mov
pop
addb
sub
stos
cs
int3
pop
mov
xchg
adc
nop
or
xchg
shll
outsl
or
into
loop
pop
push
sbb
cli
out
jnp
rolb
xlat
sub
out
inc
hlt
int
cs
call
out
decl
push
add
xchg
scas
push
fabs
mov
lret
push
jne
jmp
repz
andl
aad
dec
mov
xchg
test
adc
jl
push
sbb
push
pushf
divb
mov
ljmp
imul
xchg
pusha
jp
jo
jg
cli
jno
in
sbb
lds
cmpps
jne
cld
inc
iret
rcl
call
dec
mov
sbb
fucomp
fwait
roll
sbb
push
bnd
xchg
mov
mull
repz
mov
xor
cli
sarb
test
popa
scas
pop
xor
push
pop
fstpt
test
ret
idivl
shrl
jmp
js
test
xor
xor
mov
inc
xchg
xor
dec
lods
xor
fnsave
add
lcall
shlb
adc
mov
sbbl
repz
and
pop
lret
scas
gs
inc
in
cmc
push
call
out
add
push
adcl
sti
and
scas
aam
hlt
dec
insl
sahf
jl
add
mov
jno
push
sbb
jno
push
jle
mov
inc
pop
jo
mov
in
jg
mov
mov
and
cs
clc
std
lcall
movsb
call
clc
pushf
aas
clc
push
cwtl
and
hlt
or
jae
loopne
inc
mov
cmp
pop
jb
cltd
push
lea
sbb
cmp
cwtl
and
jns
into
push
arpl
cmp
dec
pop
sbb
push
mov
jne
mov
stos
push
out
bnd
and
push
pop
cltd
and
mov
ficoms
test
js
in
out
es
push
fs
mov
arpl
pop
xchg
dec
mov
imul
testl
les
scas
push
iret
in
insb
sbb
jp
dec
test
jb
and
sti
fadd
out
jp
lret
sbb
add
pop
cwtl
push
mov
in
movsl
xchg
jae
ss
inc
js
mov
and
xor
jecxz
test
mov
or
mov
ja
push
xchg
add
lods
or
test
fstps
jmp
call
movsb
arpl
cmc
pusha
sbb
push
js
js
add
shrb
inc
and
jae
xor
orb
jae
orb
push
pop
outsl
test
push
out
fidivrl
popa
mov
test
rorl
out
int3
imul
jns
push
idivl
xor
mov
bnd
push
arpl
enter
das
xchg
cwtl
cmp
xchg
ud0
mov
jge
pop
pushf
inc
or
push
sbb
clc
repz
insb
push
lret
mov
or
push
cmpsl
cmp
popa
xchg
mov
pusha
cmp
sbb
daa
stos
pop
ss
lcall
mov
push
push
mov
test
pop
xchg
sub
xchg
mov
mov
xor
aad
adc
je
test
push
or
jns
test
jle
mov
dec
dec
jb
mov
inc
imul
cmpsl
dec
cltd
sub
mov
mov
xchg
testb
lods
or
outsb
iret
and
cld
icebp
cmp
inc
les
out
lcallw
mov
insb
shll
fwait
lds
imul
cltd
lret
stc
xor
push
inc
adc
pop
inc
cmpsb
inc
ds
mov
mov
mov
push
arpl
add
and
mov
test
add
xor
repnz
xor
sbb
dec
mov
insb
xchg
je
shlb
dec
stos
xor
mov
cld
aaa
xchg
dec
add
in
adc
push
ret
sub
fbstp
push
sub
es
mov
mov
fs
aas
popf
outsb
aas
adc
jbe
pop
nop
inc
push
pop
inc
ds
mov
xchg
mov
ficoml
jo
mov
inc
pop
dec
pop
cmp
dec
or
dec
loop
fs
loop
pop
mov
nop
cmc
mov
sbb
pop
movsl
cmp
enter
cmp
jmp
out
idivl
or
xchg
dec
push
stc
jo
enter
mov
mov
cmc
sub
push
icebp
aam
dec
inc
dec
jecxz
mov
pop
add
xchg
or
and
ljmp
jnp
fdivr
mov
leave
dec
test
mov
inc
or
xchg
xchg
ljmp
insb
pop
and
repnz
hlt
push
jg
or
fstps
das
test
mov
in
dec
fwait
in
addr16
sbb
xor
addr16
outsl
outsl
adcl
mov
imul
jmp
les
push
sbb
das
movsb
xlat
inc
lcall
sub
sub
pop
out
pop
mov
push
jae
push
int3
lods
leave
adc
enter
xchg
inc
gs
or
xlat
push
xchg
push
jmp
jbe
xchg
dec
push
out
xchg
stos
xchg
mov
xchg
dec
addr16
sahf
fcompl
imul
jnp
stos
cli
xchg
sbb
adc
or
in
pop
repnz
inc
movsb
cmp
ret
lods
push
pop
push
test
enter
adc
pushf
cmpsl
dec
sbb
adc
nop
push
mov
xlat
fucomp
cmc
push
lock
roll
das
pop
lods
push
rcr
mov
or
mov
push
ret
xor
pop
or
roll
pop
test
dec
inc
add
and
and
add
into
jns
out
lock
mov
push
stc
adc
aad
jmp
or
cmp
mov
mov
cwtl
or
sub
dec
adc
or
cmp
dec
dec
mov
push
or
add
int
bound
push
leave
sub
cli
pop
push
cwtl
jmp
jo
jno
jae,pt
jno
popf
jo
bnd
and
pushf
shl
adc
push
outsb
pop
push
out
icebp
jp
sub
push
into
sbb
pop
lea
xchg
hlt
mov
shrl
test
or
pusha
sahf
addb
daa
ds
fidivl
or
xchg
push
pusha
gs
pop
pop
loop
ss
rclb
dec
idivb
inc
mov
test
pop
jns
jge
enter
jl
daa
inc
scas
push
pop
cs
rol
mov
push
xchg
ja
dec
hlt
adc
dec
dec
pop
scas
sub
xor
add
call
jl
pop
fnstcw
sbb
shlb
imul
in
or
rorl
mov
lods
repnz
and
stos
jecxz
jge
into
fwait
inc
testl
add
mov
push
jmp
xchg
fistl
jae
je
add
sbbb
lods
ret
loop
or
mov
xchg
sbb
push
push
addb
push
xor
lea
je
sahf
push
dec
dec
sbb
fnstenv
and
dec
xchg
shll
xor
xor
sub
push
popa
cmp
xlat
cwtl
lcall
out
fcomi
les
in
xor
jne
cmp
test
fstps
into
pop
fldpi
fadds
push
xchg
xlat
cwtl
in
cmp
pop
lret
pop
gs
push
dec
xchg
clc
mov
cmpsb
popa
addb
out
mov
sbb
aas
scas
popa
rcrl
dec
pop
insl
cld
gs
cmp
es
int
sub
xor
lds
cmp
sub
pushf
pop
xor
xchg
jl
scas
mov
sbb
lods
mov
cmc
jno
mov
xchg
scas
add
xorb
sarl
daa
sub
sub
xor
sbb
xchg
dec
jno
mov
pop
add
adc
cs
inc
movsl
test
and
add
fcoml
lahf
or
push
ljmp
xchg
test
nop
fs
sub
das
xchg
xchg
cli
imul
int3
sbb
sbb
shl
dec
je
sarb
adc
sub
out
ss
imul
ret
cmp
mov
sub
and
ja
mov
scas
cmpsl
and
imul
jle
and
jbe
mov
rcll
xchg
lahf
cmpsb
or
mov
mov
lods
inc
and
out
sarl
cmp
xor
adc
in
loope
pusha
shlb
mov
mov
cmp
stos
sub
lret
outsl
mov
xor
dec
xchg
leave
lea
sar
lds
je
cmpsb
cmp
dec
and
test
mov
aas
cmp
or
fsubp
rcrl
xchg
rorl
mov
outsl
sbb
mov
adc
cmpsl
pop
loopne
pop
dec
lods
mov
flds
inc
rcrl
dec
call
das
test
stc
mov
sti
cmp
mov
data16
aas
inc
adc
inc
pop
dec
sub
out
jg
dec
dec
sbb
inc
outsl
push
inc
cwtl
push
or
cltd
inc
lods
dec
mov
outsl
cmc
xchg
sub
mov
lock
inc
and
pop
sahf
lods
test
pop
mov
jmp
scas
test
dec
mov
mov
pop
jmp
lahf
jge
pusha
or
adc
push
jne
jno
outsb
fwait
add
cld
stos
push
or
es
adc
or
inc
xchg
cmc
adc
cltd
pop
testb
and
mov
cltd
add
aaa
pop
mov
pop
cmp
pop
add
leave
test
ss
push
fdivrs
fsubrl
jl
push
fisubl
xchg
imul
push
gs
daa
mov
out
jl
adc
aaa
jnp
xchg
call
pop
or
or
test
and
fwait
mov
imul
sbb
sub
mov
and
lret
icebp
push
dec
mov
in
mov
lea
into
fadds
cmp
and
push
out
pop
lahf
pop
and
ret
pop
cmp
push
mov
and
mov
iret
push
andl
and
mov
xlat
mov
push
shl
dec
mov
mov
testl
xor
negb
or
jp
imul
xlat
jp
push
fdiv
adc
out
cmp
test
outsl
ljmp
sub
movsb
xchg
adc
sub
mov
bsf
icebp
out
push
xchg
adc
jae
and
aaa
push
enter
and
sbb
dec
xlat
lret
inc
lret
jle
and
imul
add
scas
mov
testb
stos
sub
imul
xor
test
add
out
test
call
sbb
cmp
add
push
cmpsl
test
xchg
push
mov
in
pop
je
push
inc
push
mov
jl
scas
and
cmp
cmp
ss
les
in
jmp
sbb
pop
pusha
lret
ret
fldenv
aam
lcall
push
test
push
rorb
subl
into
mov
and
subb
dec
sub
mov
jecxz
ret
inc
pushf
push
mov
mov
imul
addl
jecxz
insb
jle
mov
leave
mull
mov
and
cmpsl
and
push
shll
jae
jge
jg
adc
jecxz
lret
out
sbb
add
xchg
fists
int3
faddl
mov
sbb
cwtl
subb
jo
dec
aad
ret
gs
push
jg
adcl
lret
loopne
repz
mov
jecxz
or
inc
ljmp
in
dec
int
jno
insb
shrl
mov
cmp
cmpl
sahf
shl
sarl
push
into
adc
push
mov
outsl
mov
jmp
fwait
jmp
scas
mov
jb
mov
movl
sub
pop
out
fsubrl
out
dec
ret
jb
andl
cld
stos
cmp
xchg
test
daa
insb
cmp
test
adc
adc
clc
ljmp
and
and
nop
pop
ret
call
aad
push
loope
movsb
loop
pop
rcll
xlat
or
pop
sarb
fldcw
adc
mov
add
mov
push
rolb
in
aam
sbb
popa
jl
cmovb
push
mov
popa
mov
push
std
test
push
arpl
test
lods
sub
idiv
rdpmc
lret
shll
sarb
pop
out
jbe
stc
iret
push
nop
lock
xor
repz
iret
push
inc
add
int3
push
aaa
and
push
pop
push
loopne
das
add
xchg
hlt
lods
or
loop
xor
xchg
and
scas
cld
or
orb
push
or
mov
imul
add
aaa
push
daa
inc
mov
addr16
pop
lret
jle
push
movntq
out
push
fs
repnz
xchg
mov
mov
fidivrl
popf
loope
jp
cmp
or
xchg
or
pop
repz
or
mov
push
popa
cli
rcl
imul
fdivrs
pop
jge
shll
imul
hlt
test
mov
lods
lods
sub
cmpl
sbb
aaa
lret
aam
adc
add
scas
aaa
mov
and
jp
in
lcall
cmp
lods
rorb
cmp
cmp
lods
and
sti
push
inc
lods
icebp
sbb
xor
movsl
pop
in
jbe
test
inc
mov
mov
xor
cmc
dec
cwtl
sub
enter
xchg
sbb
enter
fstl
fnstenv
jae
outsb
mov
add
add
imull
rorl
out
and
pop
dec
jge
outsl
mov
push
inc
imul
mov
inc
xchg
in
out
mov
iret
mov
dec
jb
enter
sbb
or
aaa
xor
inc
icebp
mov
lcall
and
add
push
daa
or
xchg
xchg
jle
pop
subl
push
cmpsb
xchg
jno
mov
xor
sbb
arpl
sub
pushf
pushf
xor
sahf
cmc
or
and
mov
leave
popf
repnz
pop
cs
inc
in
in
popf
cs
xor
lock
aam
out
mov
xchg
mov
mov
or
mov
xchg
jle
push
cmp
fimull
icebp
aad
insl
jo
adc
cli
pop
shrl
ljmp
lods
pop
lods
push
dec
lcall
xchg
cmpsl
jo
adc
jle
rcll
lret
shlb
jo
inc
lea
mov
hlt
cmc
loopne
out
stos
xchg
push
xlat
pop
pop
sarl
leave
mov
inc
outsb
in
addr16
xor
inc
in
loope
stc
inc
out
sarb
clc
adc
mov
mov
sahf
divl
sbb
imul
sub
hlt
lock
mov
adc
and
jb
in
bound
fisttps
xchg
pop
dec
sbb
jmp
xchg
jbe
repz
test
cmp
fildl
lahf
repz
or
mov
and
mov
adc
lret
xchg
outsl
insb
dec
xchg
adcb
xchg
roll
cmp
ds
sub
mov
push
adc
cld
mov
faddl
lahf
push
or
push
into
mov
xor
cltd
sbb
mov
cmpsl
jp
jae
push
xlat
and
jle
jg
inc
scas
mov
xlat
sbb
xlat
out
lret
lcall
outsl
xor
aaa
in
je
scas
adc
js
xchg
ds
mov
pop
inc
add
rclb
lods
popa
movb
mov
push
sbb
scas
mov
bound
inc
lret
out
xor
orb
repz
push
add
mov
push
in
xchg
or
cmp
popa
stos
scas
pop
inc
mov
or
xor
insb
xchg
fnstcw
inc
jle
ds
lahf
fs
xor
int
dec
icebp
outsl
xchg
outsl
pusha
cmpsl
xor
ja
adc
pop
out
fisubrs
jl
sbb
pushw
int3
ds
push
cmpsl
test
cli
dec
dec
loop
into
sub
sbb
imul
mulb
out
mov
loope
pop
cmp
out
cmp
and
mov
mov
xlat
sub
mov
jb
add
pop
jmp
xchg
and
test
add
mov
mov
xor
lea
push
push
stc
bound
pushf
lock
mov
or
dec
ja
ds
pop
and
add
push
pop
mov
mov
hlt
popa
dec
int3
testb
xor
hlt
in
mull
ss
movsb
inc
xchg
and
rcl
mov
int
xor
sbb
sbb
popa
je
xchg
sahf
outsb
pop
mov
jg
mov
xchg
mov
das
xlat
cmp
and
adcb
fiaddl
cmp
xchg
mov
jmp
int
cld
nop
fidivs
push
rcrb
inc
and
sbb
mov
je
scas
in
adc
mov
or
mov
adc
jae
xchg
jno
aas
inc
out
mov
mov
loop
mov
jb
outsl
xchg
push
add
mov
lds
setne
xchg
ret
or
into
cmp
daa
imull
inc
daa
jae
sahf
cmc
testb
mov
repnz
in
out
fwait
or
lds
mov
fisttpl
imul
sbb
pop
mov
xchg
ret
icebp
cmpsb
mov
faddl
and
bound
sub
jecxz
adc
mull
pop
idivl
imul
or
jg
push
push
pop
adc
mov
pop
mov
inc
sub
cs
sar
pop
push
push
push
ret
push
xchg
das
fadd
or
mov
jmp
cmpb
dec
stc
or
dec
lods
enter
test
fs
xchg
sub
cmc
mov
adcb
xor
cli
and
cmpsl
xchg
mov
test
test
sbb
dec
sti
xor
sbbl
ret
pop
jg
xor
push
jle
divl
into
adc
xlat
pusha
adc
and
mov
or
jno
ficoms
std
mov
sub
lret
ja
shlb
mov
mov
cmp
fcomp
and
mov
in
test
add
cld
push
rol
cmp
je
mov
dec
lock
jecxz
cmp
lret
adc
cld
pop
sub
test
lret
popa
fwait
inc
mov
adc
rorb
pop
jge
dec
lret
mov
jae
insl
push
loop
outsb
pop
lahf
mov
aaa
add
sub
fdivs
loopne
loope
jg
outsl
out
arpl
jns
or
ja
ret
mov
inc
sbb
pop
lea
pop
loope
mov
mov
add
jne
sbb
dec
and
sbb
pushf
mov
leave
in
cmp
mov
cs
cmp
cmp
jge
lock
pop
push
enter
pop
fisubl
cwtl
jb
popf
popf
popl
cmp
mov
std
pop
sub
popa
mov
fnstsw
daa
std
cld
sbb
ret
and
cmp
jbe
cli
in
xchg
fstpl
push
cltd
jae
xchg
mov
cmpsl
sbbl
cmp
aam
sub
sub
xchg
mov
test
aaa
ret
pop
out
cld
dec
inc
adc
std
test
or
comiss
mov
pushf
fldt
xor
dec
add
mov
leave
xor
int
icebp
fucomp
and
stos
dec
and
pop
daa
mov
testb
pop
cli
dec
sbb
ja
mov
pop
or
pusha
sti
or
mov
out
mov
into
mov
or
push
mov
jle
dec
push
push
push
inc
sub
mov
push
jb
cmp
cld
sahf
ret
jle
stos
movsl
mov
jge
cmp
jmp
sbb
xor
fmuls
jge
pusha
lock
push
stos
cmp
clc
push
cmpsl
andl
sbb
hlt
push
cmpsl
xchg
int
aam
inc
lret
lods
pop
cmp
and
push
dec
jle
fcompl
pop
dec
jb
mov
sub
push
mov
out
call
push
jbe
mov
xor
adc
mov
fdivs
and
mov
xlat
sub
dec
ret
lret
adc
mov
movsb
scas
fbld
push
js
fadds
cmp
enter
jp
aaa
repz
push
imul
repnz
jo
jecxz
fnstcw
test
cmp
dec
adc
hlt
xchg
dec
xchg
cwtl
fistpl
outsl
stc
lock
andl
adc
jns
mov
pop
outsb
or
add
int3
addr16
int
in
into
push
dec
jnp
pop
add
aaa
jns
dec
outsb
repz
ficoml
sub
sbb
dec
ds
aam
hlt
sub
or
push
mov
fwait
mov
popa
add
out
test
push
pop
push
cltd
daa
push
inc
jmp
jb
hlt
sarl
rolb
enter
add
pop
imul
repnz
push
loope
pop
or
jg
cld
cmpsb
push
or
jp
cmp
movsl
mov
dec
lods
mov
sbb
add
add
cmp
enter
add
dec
add
xchg
pushf
mov
mov
fstpt
sbb
je
cmp
and
lret
xor
cmp
subl
jge
push
cmpsb
inc
and
jmp
mov
mov
jg
cmp
xchg
and
popf
sbbl
cmp
in
loopne
or
mov
adc
jns
loop
psubusb
mov
repnz
sbbb
mov
jbe
xchg
leave
dec
add
jecxz
mov
sbb
mov
aaa
mov
out
pop
movsl
outsl
add
divb
mov
add
scas
enter
int
jle
mov
inc
pop
in
xchg
mov
dec
push
xor
pop
fninit
sbb
mov
push
pushf
mov
xchg
cmpsb
inc
pop
mov
jl
adc
pop
dec
daa
add
cld
cmpsl
jnp
out
cmp
and
ds
dec
jecxz
push
lds
add
daa
mov
adc
fwait
enter
mov
lods
cmpsb
inc
push
repnz
inc
imul
push
cmpsl
pop
adc
inc
aaa
movsb
jge
and
test
mov
jl
sub
icebp
dec
pop
add
es
sub
test
xchg
lahf
xor
xor
rcrb
mov
mov
outsl
add
mov
in
push
lahf
push
pusha
fdiv
nop
or
and
pop
pop
inc
movnti
xchg
sub
movl
mov
push
sub
push
xchg
adc
repnz
and
xchg
xor
or
jg
iret
mov
ja
inc
pop
loopne
sbb
and
sub
jl
test
jbe
xchg
push
scas
inc
and
arpl
test
push
mov
mov
es
sbb
push
test
push
xor
lds
sti
mov
orl
fs
sbb
mov
push
push
xlat
leave
sub
cld
ror
sub
adc
stc
sub
lahf
and
sbb
ja
imul
xchg
aaa
int
rolb
jmp
pop
sub
outsb
cmc
repnz
push
movsb
loop
lds
in
sub
mov
imul
mov
movsl
sar
jmp
outsl
pop
cmp
scas
mov
mov
mov
pop
jp
sub
test
sbb
add
pop
and
jl
pop
in
mov
sbb
hlt
jmp
jge
push
mov
adcb
std
mov
in
mov
mov
sub
mov
lock
sbb
push
stos
xchg
xchg
inc
test
fmull
loop
lahf
mov
in
push
push
in
divb
lcall
loop
addl
push
sbb
fwait
mov
push
jns
js
fldl2t
dec
cmp
push
xchg
lret
jo
clc
je
pop
rclb
xor
aad
shl
lcall
push
test
scas
jp
dec
lea
hlt
fsub
arpl
dec
xchg
mov
enter
mov
add
dec
mov
jae
push
lods
shll
mov
addb
in
in
add
cmc
into
inc
adc
push
not
xor
lret
xor
jp
xchg
pop
add
mov
mov
insb
dec
ret
shl
pop
test
je
lods
inc
test
adc
xor
sbb
dec
sub
and
add
jmp
mov
sti
les
cmpsl
add
mov
mov
inc
std
aam
pusha
xorl
mov
fadds
cwtl
fdivl
push
push
mov
out
dec
dec
jbe
mov
fsubrl
inc
cmpsl
out
imul
cmp
adc
mov
loopne
lret
push
out
rclb
int
and
clc
adc
imul
sahf
mov
mov
mov
adc
push
push
pop
add
and
repnz
shl
leavew
iret
push
addr16
adc
fsubp
jl
mov
into
sti
sbb
push
adc
lods
and
mov
lods
mov
xchg
lret
add
mov
adc
sbb
leave
push
subb
sti
pop
js
insl
rcrb
xchg
dec
and
dec
inc
push
das
dec
leave
jmp
ja
neg
push
xchg
repz
mov
pop
inc
out
push
push
ds
dec
rcrl
imul
add
in
mulb
mov
addl
aad
stos
inc
xor
lea
dec
or
adc
xor
jnp
jg
test
mov
cmp
sbb
in
pop
push
pop
adc
ds
push
out
pusha
add
int3
cmp
daa
ss
push
xacquire
dec
dec
mov
jns
popa
push
cli
das
cmpsl
mov
es
bnd
push
xor
pop
loope
fs
inc
rcl
subb
adc
shlb
jl
dec
lahf
aad
mov
pop
jecxz
push
mov
pushf
add
adc
mov
xor
test
loopne
cmpsl
mov
testl
movb
test
fxch
out
push
jne
movsl
and
xor
pop
movsl
push
adc
fidivl
loopne
mov
sti
jl
insb
das
jno
pop
sub
test
stc
inc
adc
dec
xchg
inc
roll
jo
pop
push
cs
cmc
push
test
icebp
ja
pusha
inc
jmp
jle
fs
lods
popa
fsub
repnz
stos
int3
std
dec
xchg
xchg
xor
sub
or
fildl
dec
lea
das
mov
cmp
mov
and
in
loopne
push
es
hlt
mov
xchg
fadds
dec
jno
clc
leave
adc
sub
scas
lret
iret
into
in
dec
lds
jp
cltd
push
inc
cmp
jl
cld
fsubrp
fildll
scas
add
mov
or
mov
sbb
jno
in
and
lock
ljmp
imul
enter
push
ja
repnz
and
out
dec
xchg
lock
ja
push
js
lret
inc
les
lea
mov
mov
pop
andl
lods
push
bound
aam
iret
repnz
or
mov
movsb
jg
xchg
mov
bound
push
stos
or
adc
out
popa
sahf
push
pop
icebp
xchg
cwtl
jge
imul
idivb
cltd
loopne
sub
stc
test
xchg
sub
test
fsubs
aaa
in
jb
xor
and
adc
sub
pop
pusha
sbb
mov
xchg
and
or
aas
repnz
loopne
shlb
movntps
sub
lret
mov
jae
xchg
mov
jns
ja
movsl
in
in
inc
cmp
adc
or
or
dec
jno
aas
push
in
rcll
jge
adcl
mov
bound
cwtl
aam
repnz
dec
dec
pop
mov
test
xchg
jb
inc
xchg
outsl
sbb
scas
mov
pop
data16
push
xor
mov
sub
push
xchg
ret
ja
iret
les
xchg
cmp
mov
xor
jo
push
dec
jge
mov
bound
jb
mov
jge
mov
mov
mov
clc
mov
xor
dec
pop
adc
sub
in
jbe
pop
push
dec
in
jmp
mov
cmp
pop
sub
popl
std
xchg
clc
adc
cmc
out
xchg
pop
xor
ret
xor
and
insl
cmp
les
and
ret
and
inc
mov
push
mov
addb
jle
ror
add
inc
inc
addr16
lock
fadd
dec
mov
inc
icebp
inc
pusha
stc
inc
sbbl
movsb
cmp
out
push
jl
xchg
cmp
rolb
or
out
xchg
ret
lock
outsb
mov
test
or
or
test
jge
arpl
mov
jmp
mov
test
fs
adc
data16
dec
xchg
lods
mov
cmp
rcr
cmp
movsl
shl
out
cmpsl
mov
js
insl
add
cmp
std
pop
push
orl
ss
arpl
push
iret
std
imul
enter
daa
sarl
jo
mov
daa
out
outsl
xchg
xor
xor
pop
and
das
mov
push
add
aas
push
mov
adc
jmp
mov
cs
fcmovu
cmc
inc
inc
sahf
jno
mov
les
inc
xchg
daa
lods
dec
push
xor
sub
jae
jp
clc
mov
pop
inc
sar
xor
mov
sbb
cmp
lahf
and
and
je
es
imul
and
ds
mov
inc
xor
sarl
cltd
push
xor
fimuls
pop
imul
add
movsb
and
mov
mov
jl
mov
sahf
in
clc
fbstp
imulb
inc
outsl
sbb
fs
mov
mov
repnz
repnz
les
clc
dec
inc
dec
lahf
adc
push
add
lret
cli
cmpsb
mov
adc
jl
call
imulb
test
adc
stc
sbb
cs
pop
insb
les
dec
lea
inc
hlt
sbb
addr16
and
jno
and
cmp
xchg
outsl
mov
cmp
std
mov
or
or
xchg
test
dec
xor
ja
jne
sub
stos
fucomp
rolb
rclb
imul
fcomps
mov
out
lcall
scas
repz
lret
popf
rcrb
int
hlt
aad
ret
push
mov
adc
and
xchg
xor
or
dec
in
push
mov
stos
data16
mull
and
scas
jns
cmpsl
mov
jg
mov
xor
mov
mov
jge
dec
xchg
sub
fdivrs
adc
repz
int3
loop
pop
shll
mov
cmp
and
movsl
pop
or
jmp
popa
sub
sarb
in
pusha
testb
rolb
scas
addb
addr16
cli
mov
imul
lds
jmp
es
mov
outsb
sbb
loopne
pop
and
iret
mov
mov
loopne
aaa
xchg
jecxz
jb,pn
push
dec
xchg
outsb
push
lds
mov
sarl
pop
inc
inc
testl
fimuls
lods
inc
mov
cmpsb
mov
scas
mov
adc
mov
mov
mov
mov
mov
sub
mov
sbb
xchg
loop
stos
test
cli
pop
vpcmpgtb
aaa
movsb
jb
ja
outsl
jbe
push
mov
fs
roll
insl
outsl
lock
adc
repz
out
sti
or
xor
lds
jns
data16
stos
mov
jecxz
dec
arpl
insl
xorb
pop
mov
adc
cs
jnp
sbbb
out
addr16
dec
dec
dec
stos
jg
fwait
mov
inc
in
pop
mov
push
adc
fistl
nop
ds
xor
aas
pop
cmp
ds
sbb
clc
mov
movsl
cmp
mov
or
fiaddl
test
push
in
lock
ja
xchg
out
cmc
xchg
adcl
or
sahf
xchg
aam
aam
outsb
lock
mov
and
fisubrl
xor
repnz
jae
test
fidivs
sbb
jecxz
cltd
cmc
and
daa
pop
movsl
dec
lods
mov
icebp
dec
pop
enter
pop
cmp
test
dec
mov
mov
jns
jle
subb
xor
jbe
dec
ds
fs
int3
pop
xor
movsl
inc
insb
loop
repnz
xchg
sub
scas
xor
into
shll
in
jb
push
xlat
jo
push
jg
loopne
mov
je
xchg
fs
andl
sbbl
inc
adc
lret
jo
jmp
movsl
adc
mov
mov
dec
cwtl
lret
adc
inc
clc
push
push
add
test
dec
aas
adc
xor
pop
mov
lcall
adc
ret
or
loop
popa
dec
cmp
mov
icebp
pop
pop
pop
sbb
in
cmp
sti
xor
adc
orl
loope
xchg
shrb
xor
adc
or
jp
imul
je
testl
and
dec
fmuls
pop
or
aaa
xor
sahf
test
fs
pop
xchg
mov
dec
aam
mov
mov
inc
stc
pop
mov
jne
inc
call
sbb
inc
fnsave
adc
dec
jecxz
nop
insl
fadd
sbb
dec
dec
inc
xor
cltd
cld
movsl
sub
arpl
sub
xchg
push
jbe
dec
iret
ljmp
inc
pop
loope
stc
out
rcrl
repz
push
push
lret
incl
or
test
test
mov
ds
out
sbb
movsl
xor
jb
jo
addr16
iret
aam
xor
es
out
xor
scas
xchg
xchg
xor
mov
mov
les
mov
push
jg
aas
inc
xchg
pop
xlat
cs
mov
fidivrs
lcall
mov
push
cmp
out
data16
adc
pop
or
fldln2
loopne
das
inc
cmp
xor
sbb
shl
dec
ljmp
mov
push
mov
xchg
fwait
pop
fidivl
mov
cmp
ds
icebp
mov
sub
jle
cld
xchg
std
sub
or
test
push
dec
aaa
rcrb
cmpsb
sti
cld
fwait
push
nop
inc
ficompl
cli
mov
mov
das
xchg
pop
mov
inc
jnp
push
sbb
push
jo
outsl
rolb
and
js
xchg
push
mov
mov
jle
push
ja
es
test
dec
sbb
mov
lcall
movsb
ljmp
aaa
sub
outsl
mov
adc
sti
daa
sub
lahf
insb
bound
sub
aad
sub
jmp
or
xor
mov
dec
cmp
sub
dec
xor
add
imul
push
test
and
or
enter
je
aam
and
push
xor
pop
popf
in
jge
and
aad
xchg
int
xor
sub
mov
iret
jge
in
mov
dec
lds
sarb
dec
std
leave
cltd
cmp
pop
mov
adc
sti
add
test
push
cmp
stos
scas
push
shll
lds
mov
xlat
ret
mov
adc
mov
jmp
mov
push
movsl
nop
aam
inc
mov
xchg
or
pop
mov
cmp
fucomip
std
pop
cmp
icebp
pop
decl
xor
ds
mov
test
xchg
sub
lret
push
sbb
ret
je
out
add
sub
in
mov
or
outsl
bound
lock
clc
roll
iret
pusha
add
push
fwait
arpl
mov
mov
into
xchg
push
mov
fwait
or
jns
add
int3
pop
lock
push
enter
mov
jne
negl
lahf
fldcw
sarl
sub
and
sub
sbb
out
jns
xor
fwait
call
xor
cmp
adc
mov
dec
mov
dec
repnz
fidivl
jns
out
and
sbb
addl
in
pusha
andl
into
mov
mov
sub
or
inc
add
add
mov
inc
cmpsb
mov
jns
and
cmp
xchg
xchg
and
mov
aaa
movsb
jae
dec
xadd
les
mov
fwait
inc
xchg
cltd
roll
jge
cmp
inc
push
das
icebp
hlt
addr16
push
sbb
and
mov
pop
pushf
jae
jle
std
lock
lods
push
mov
cmpsb
pushf
xchg
ficoml
adc
pop
mov
jo
push
sbb
pop
sbb
test
jecxz
sahf
mov
add
in
stc
lods
push
mov
imul
jne
outsl
sbb
adc
aad
arpl
mov
mov
andb
es
adc
rdmsr
cmp
dec
leave
mov
stos
arpl
add
inc
jge
aaa
mov
add
repz
xchg
popf
xchg
enter
mov
xchg
xor
cmpsl
in
or
nop
inc
xor
jmp
sub
sbb
xor
aad
pushf
or
pop
mov
jne
push
cli
xchg
or
inc
rclb
mov
call
sbb
sbb
sub
inc
js
out
stos
cmp
call
lret
cld
aas
and
and
cmc
mov
cwtl
rolb
aas
and
mov
mov
xchg
fcmovb
inc
enter
push
and
imull
push
push
lahf
push
push
mov
out
inc
cs
pop
mov
ror
stc
xor
jl
xchg
add
cwtl
out
test
cmpsl
iret
and
pop
xor
fimull
out
mov
add
inc
jmp
out
sbb
mov
mov
pop
stos
jge
mov
cld
or
sbb
and
movb
and
and
lock
gs
ljmp
adc
ds
mov
push
xchg
ja
push
fsubs
sbb
mov
lahf
adc
xchg
push
sbb
out
sub
test
stos
arpl
and
mov
lods
mov
mov
insl
mov
lret
loopne
and
add
push
inc
mov
jmp
jno
out
cld
shlb
call
xchg
xchg
ret
fld
push
call
dec
cmp
adc
pop
cmc
or
dec
jmp
gs
fimuls
mov
add
ljmp
ss
and
scas
cmp
stos
push
xor
in
and
and
sub
xchg
adc
dec
jbe
jae
dec
mov
es
mov
std
mov
imul
lea
mov
out
adc
jo
jp
fmuls
mov
push
or
mov
out
ljmp
and
mov
das
sub
aam
or
jbe
adc
pop
aad
and
fisubrl
cmp
xchg
push
jb
or
cmp
repz
mov
push
and
cmp
ds
mov
xor
jnp
mov
out
add
fbstp
imul
jnp
mov
push
xor
lods
popf
bound
add
push
and
push
lea
hlt
lcall
scas
xorps
test
scas
jns
das
je
adc
es
movsb
push
cmp
gs
insb
fwait
outsl
pop
jle
lods
inc
insb
and
cwtl
adc
jmp
pop
aam
and
daa
sbb
dec
sbb
mov
cld
dec
pop
sbb
in
lcall
mov
addr16
je
std
std
xchg
imul
jbe
xlat
cli
insb
lret
fidivrl
aad
lret
insl
mov
cmp
nop
loope
stc
rcrb
pop
push
pop
repz
lret
sbb
insb
in
lea
subl
lods
shlb
jl
push
es
inc
sub
lods
in
pop
enter
jnp
dec
fdivr
ficoms
and
mov
xchg
je
lret
fcmovnb
test
clc
mov
add
lock
xchg
imul
and
and
cwtl
jg
sub
dec
pop
mov
push
or
lea
insl
repz
pop
hlt
stos
addl
std
repz
push
lcall
xchg
lods
mov
push
sub
jge
mov
jne
aaa
add
inc
jno
filds
adc
aaa
jne
dec
inc
xchg
push
aam
xchg
mov
into
sub
sub
or
mov
arpl
dec
jb
add
int
stc
cmp
fisttps
scas
ss
jmp
mov
lret
dec
lcall
or
sbb
ret
jns
sub
sub
mov
mov
rcll
out
pop
mov
xchg
jmp
outsb
dec
std
and
insb
fcmove
pop
jge
cli
aad
outsb
in
pushf
in
scas
popf
xor
or
xlat
sbb
sub
das
in
test
mov
cmc
stos
sti
dec
in
iret
push
and
addr16
push
enter
jae
mov
pop
push
sbb
xchg
jb
pop
ds
loop
jns
pop
pop
mov
fmull
jge
add
sub
push
xor
movsb
mov
jmp
fnstsw
add
dec
jmp
sbb
into
jns
popf
out
push
or
jns
cwtl
jae
lahf
mov
imul
xchg
sbb
loopne
lock
add
push
mov
aam
xchg
sbb
xor
lods
je
fadd
sub
psrlw
jne
cwtl
pop
nop
iret
repnz
outsl
inc
add
push
ficoms
lahf
mov
cmp
pusha
sub
cwtl
mov
adc
add
stos
arpl
xadd
test
test
xor
lcall
scas
adc
push
pop
sbb
ja
mov
mov
ret
addl
and
leave
dec
fs
or
sub
and
inc
xchg
call
loop
arpl
cmpb
cmpsb
aaa
arpl
mov
or
mov
in
jb
fldt
dec
jle
add
jmp
sub
mov
mov
es
je
cmpsl
xchg
test
scas
push
inc
xchg
sbb
fsubrl
inc
or
add
aad
add
sub
sbb
push
shll
mov
bound
cmp
adc
cld
dec
test
or
mov
xchg
in
les
nop
jne
ja
ret
inc
inc
cwtl
imul
shrb
and
sbb
cltd
cmp
out
sbb
fwait
mov
movsb
ror
movsl
aaa
cmpsl
shrb
add
xor
cmpb
inc
test
add
shll
xchg
out
push
jp
lret
rcr
cli
push
xchg
fdivl
adc
or
inc
jb
out
imul
jge
and
fdivrl
fisttpl
jae
into
mov
jnp
dec
or
cmc
fwait
add
pop
xchg
xchg
mov
or
das
pop
out
add
mov
hlt
and
das
jno
push
xor
cmc
int
je
test
mov
cltd
inc
and
rcrb
mov
push
lret
mov
ljmp
push
xor
push
xlat
stos
dec
pop
fstp
mov
data16
sub
xor
ss
aam
in
unpckhps
scas
orb
dec
pop
hlt
sbb
lret
icebp
mov
sarl
call
push
aaa
xchg
stc
std
xor
fisttps
add
and
adc
popa
xor
loop
and
icebp
out
andb
add
dec
and
xchg
jge
mov
push
mov
xor
sar
pushl
shlb
pop
sbb
or
xlat
add
jo
inc
sbb
arpl
jne
mov
repnz
add
movsl
jecxz
dec
sub
adc
sbb
xor
ds
and
mov
rol
fidivrs
fdivr
pop
push
mov
bound
daa
mov
push
and
jg
jl
add
push
add
mov
scas
and
jmp
cmp
cmp
sub
pop
and
fstpl
int3
roll
add
aaa
or
xchg
dec
ss
data16
je
dec
ja
sub
pop
nop
in
in
push
test
lods
out
stc
lea
rolb
call
popf
xchg
mov
sbb
mov
xchg
push
fs
and
cmc
pop
mov
loop
or
aam
ja
stc
inc
and
mov
sbbl
imul
jecxz
jno
sahf
lret
negl
fmull
xchg
jecxz
adc
sbb
jecxz
cmp
dec
in
push
out
mov
or
addr16
xchg
sbb
sti
xor
push
bound
test
push
dec
push
lret
xorl
dec
je
in
pop
lods
sti
cmpsl
bound
nop
sarl
rcrl
dec
adc
add
insb
mov
inc
or
mov
sub
mov
jl
mov
cwtl
mov
scas
lret
or
data16
stc
pop
push
lds
pusha
and
sub
mov
icebp
mov
scas
fcmove
cmp
outsl
cmp
xchg
aam
add
mov
jns
loope
ret
lahf
and
int3
arpl
jns
cltd
mov
pusha
xor
and
mov
aaa
pop
mov
cmp
sub
pop
sbb
cltd
jbe
add
push
push
mov
imul
loope
adc
add
pushf
jecxz
inc
scas
or
mov
xlat
or
sbb
in
cmp
jle
inc
scas
in
mov
shr
xchg
fwait
or
hlt
in
mov
ja
insb
mov
jae
sub
sub
push
add
inc
pop
push
clc
fiaddl
xchg
dec
sbb
push
push
mov
inc
sub
scas
imul
sarb
lcall
sar
mov
ret
cmp
js
or
shrl
push
inc
pop
out
fbld
aad
popa
lea
outsb
push
scas
cld
fbstp
and
fcomps
push
mov
inc
test
ljmp
pop
nop
and
or
lcall
mov
mov
test
jae
test
lahf
fisttpll
mov
mov
int3
orl
sbb
fucomip
aas
mov
lea
xchg
sahf
inc
notb
shl
jns
int
mov
test
andl
inc
mov
movsl
mov
mov
and
jne
pop
sahf
sub
jb
jns
scas
jg
jnp
push
mov
fdivrs
sbb
xlat
mov
xchg
jle
xchg
fisubl
cmp
cmp
jl
imul
insl
and
aad
in
jge
adc
dec
dec
jns
and
jns
sub
fldenv
sbb
sbb
push
push
adc
push
loop
mov
or
rcll
lcall
push
jno
push
jp
xchg
fstpl
xchg
jge
sub
clc
ljmp
pop
push
popf
dec
fisttpl
cli
and
lds
js
jb
aad
ja
scas
popa
push
std
jns
dec
mov
sbb
add
dec
xchg
test
out
push
jmp
mov
push
jmp
jg
int
hlt
popa
pop
hlt
or
push
lds
and
pop
mov
into
scas
jmp
dec
xchg
mov
adc
xchg
mov
jae
push
xchg
loope
jns
sub
dec
loop
sti
sahf
jne
fldl
stos
jns
scas
add
pop
fidivrs
aas
and
xor
jns
xchg
out
cli
and
mov
leave
mov
mov
aas
inc
xor
jo
inc
lret
xlat
das
mov
mov
fistl
jmp
add
outsb
jge
adc
imul
sahf
jp
xchg
insb
sbb
lock
les
mov
cmpsl
mov
dec
pop
out
push
insl
inc
sub
mov
cmpsb
bnd
inc
hlt
stc
dec
pusha
test
mov
mov
mov
loop
into
sahf
andb
mov
out
movsb
add
mull
push
sbb
nop
push
jne
mov
stc
pop
popa
rclb
cmc
mov
cli
push
bound
enter
call
or
fstl
inc
sub
lods
adc
fwait
stos
sub
mov
mov
mov
sbb
in
mov
add
jb
lcall
jmp
push
sub
adc
testb
mov
addr16
and
pop
lcall
mov
fists
cmp
adc
lcall
ret
mov
shr
and
or
jb
adc
xchg
sub
jge
mov
lret
mov
out
pop
loop
mov
mov
nop
mov
in
xlat
xor
inc
push
pop
mov
xchg
push
movsb
or
and
push
jns
pop
push
dec
sahf
mov
dec
dec
or
mov
aam
lea
and
int3
das
fdivrs
int
call
mov
aaa
and
mov
imul
int3
lods
notb
in
adc
cs
addr16
mov
rorb
cmc
adc
leave
xor
test
add
add
xor
xor
in
xchg
out
test
test
movsb
push
adc
mov
jbe
popa
pop
movsl
fucomp
push
jg
hlt
into
mov
es
cmpb
add
lahf
xor
cli
in
jl
jmp
mov
pop
out
push
cltd
lock
aas
outsb
inc
mov
cli
xchg
push
addr16
push
fmulp
nop
loopne
xor
stos
or
push
fwait
lret
push
sub
das
fsubs
adc
mov
scas
jne
sti
fwait
add
stc
pop
sbbb
mov
out
ljmp
dec
dec
mov
adc
cld
inc
and
pushf
in
in
lea
jo
test
jle
cmc
scas
cmp
push
leave
push
mov
dec
pushf
push
rorb
and
mov
popa
mov
or
movb
push
dec
ret
cld
bound
dec
je
adcb
popa
aas
cmp
mov
and
pop
jecxz
movsl
je
push
adc
mov
jp
cmp
in
mov
lock
xchg
mov
cmp
push
dec
mov
sub
aas
dec
movsl
cmp
arpl
jno
hlt
es
mov
jnp
repz
cli
push
sti
inc
xchg
push
lods
lcall
jne
sub
mov
fs
out
out
inc
fst
jl
lea
lea
xchg
jecxz
cmp
mov
in
iret
inc
xor
inc
out
mov
das
cltd
lret
aad
daa
popa
mov
test
stos
pop
aaa
ds
jo
sub
add
clc
lcall
fidivrs
rcr
push
mov
fisubrs
dec
jecxz
and
add
mov
mov
or
jb
mov
and
sbb
jne
lret
mov
sbb
mov
shll
jo
xchg
xor
mov
rcr
mov
ds
sub
adc
test
ds
adc
dec
xchg
mov
pushf
lock
movsl
ret
aam
sbb
rorl
test
mov
pop
mov
adc
add
inc
cmp
pop
mov
jno
out
sub
xchg
enter
sahf
cmpsb
adc
loope
jg
mov
mov
fiaddl
call
xor
jae
rcrl
mov
ss
mov
insb
sbb
mov
out
movsb
popa
pop
call
mov
outsb
or
sub
es
mov
ficompl
and
inc
lds
xor
mov
jle
sbb
std
mov
sbb
clc
test
push
cmp
addr16
fwait
xchg
mov
xchg
cmp
cmp
dec
shrb
roll
fmul
mov
or
add
loop
in
mov
jbe
fstpl
mov
insb
fbstp
jmp
bound
outsb
fs
testb
sbb
push
push
stc
xchg
xchg
adc
ficoms
rolb
adc
jg
or
fwait
jmp
test
sbbl
dec
jmp
loope
mov
arpl
push
icebp
and
mov
pop
jnp
push
xorb
mov
pop
xor
les
dec
sti
shr
into
mov
jns
in
xchg
mul
xchg
lea
in
icebp
xchg
inc
dec
shr
outsl
adc
mov
dec
jnp
push
test
ja
pop
test
lds
xchg
sub
insl
cwtl
inc
test
mov
outsb
in
pop
hlt
add
mov
fstpt
call
cmpsb
jb
in
in
les
jle
mov
and
div
xchg
mov
cmp
dec
andl
jp
mov
lea
or
pop
lods
cs
std
repnz
cmp
pop
cmp
shrb
out
sub
push
addr16
push
xchg
jecxz
lret
and
lods
sub
jo
push
mov
add
bswap
jecxz
out
pusha
push
dec
negb
inc
insb
cs
ljmp
and
pop
addr16
out
rol
cmp
sbb
push
mov
xchg
mov
and
or
divb
aaa
push
push
pushf
ja
lcall
push
dec
aaa
push
jle
popf
test
jmp
cmp
jle
mov
dec
mov
into
mov
push
mov
cmp
jl
out
insl
dec
inc
lret
and
std
jmp
xlat
push
xchg
ret
push
add
dec
adc
push
ja
mov
jl
push
mov
in
in
popa
pop
push
test
cmc
jo
lcall
push
in
in
xchg
fmuls
mov
sbb
mov
mov
repnz
and
xorl
out
xchg
push
mov
cmp
call
mov
and
test
or
stc
xor
push
insb
jae
adc
add
outsb
xlat
stos
lds
push
mov
xor
mov
sub
ret
out
and
mov
lahf
pushl
std
mov
sub
cmc
jnp
ficoms
lock
mov
aaa
add
sbb
or
jbe
jle
notb
scas
test
and
add
lds
popf
repz
inc
pop
nop
xchg
fistpll
sbb
push
xor
mov
and
xchg
jecxz
insb
jne
es
adc
inc
pop
lods
punpckhbw
insb
in
pop
cwtl
rcrb
xchg
mov
mov
js
mov
jl
pop
dec
jg
sbb
inc
mov
pushf
insl
add
aam
xor
out
jmp
nop
sbb
sub
cmpsl
jae
fbstp
cmp
mov
pop
call
pop
xchg
loopne
lret
fwait
mov
sbb
in
clc
fstpl
or
mov
push
sbb
adc
adc
rep
inc
push
stos
add
mov
pop
out
std
inc
adc
pop
push
cmp
mov
mov
rcll
sbb
mov
adc
mov
or
sbb
jecxz,pn
inc
adc
pop
sub
ljmp
out
mov
fsubp
mov
jo
xor
xlat
inc
xchg
lcall
push
and
fucomp
daa
push
cmpsl
nop
mov
cmp
dec
push
pop
cmpb
cmpsb
mov
mov
hlt
shrl
xchg
adc
xchg
rorb
imul
dec
pop
mov
scas
xchg
cmp
cwtl
iret
bt
mov
orl
and
imul
push
inc
or
pushf
mov
int
std
jb
sub
into
test
adc
add
jae
dec
cmpsl
jecxz
dec
sub
cli
in
adc
inc
sbb
dec
loop
xchg
mov
mov
cmp
int
sub
cmp
sbb
fwait
jne
cmpsb
fwait
jp
inc
pop
ret
mov
mov
cmpsl
xchg
sub
fildll
jnp
aad
pop
das
xchg
loope
loope
ljmp
adc
in
call
mov
in
leave
fwait
xchg
mov
imul
ja
mov
cmp
fistpll
sub
loopne
inc
movsl
jae
cmpsl
mov
es
mov
push
scas
bound
adc
push
mulb
mov
les
jl
daa
mov
ljmp
int3
out
clc
vucomisd
cmp
stc
inc
std
insl
subl
mov
lcall
sbb
or
in
push
imul
inc
fistl
push
movd
push
mov
mov
sbb
iret
fisttpl
push
xchg
roll
cmp
fnstsw
cmp
cli
sub
xchg
dec
mov
cmp
rol
clc
push
adc
push
sti
mov
int3
xchg
repz
push
repnz
dec
push
mov
call
lahf
jnp
daa
dec
lea
sub
test
jno
jge
and
push
adc
out
and
pop
call
dec
out
pop
and
lods
aad
xchg
dec
or
add
adc
fistps
das
adc
icebp
mov
out
mov
sahf
mov
sbb
enter
xor
pushf
fimull
repnz
call
jo
data16
mov
lret
movsb
lods
lret
adc
stos
mov
pop
pop
pushw
out
imul
outsl
sbb
cmp
mov
out
mov
jge
js
sbb
xorb
orb
aam
rolb
test
sbb
into
or
pop
je
mov
xchg
jnp
dec
cmpsb
test
cmp
call
cmp
add
loop
fcmovbe
enter
sbb
jmp
or
xchg
cld
add
into
and
fisttpl
jo
popf
mov
push
cmp
rcrb
repnz
sbb
dec
int3
xchg
inc
fwait
lods
fsub
sub
jbe
mov
adc
rcll
push
pop
jmp
xor
mov
cs
xchg
mov
pop
mov
pop
mov
andb
inc
jmp
pop
jl
and
shlb
adc
adc
stos
ficoms
ret
cltd
sbb
fidivrl
fadd
imul
cmc
repnz
fsubr
mov
popf
test
sbb
mov
sub
sub
jge
loop
icebp
dec
mov
andl
outsb
mov
int
jp
dec
and
xchg
out
pop
mov
loopne
fs
test
push
inc
push
pop
adc
xchg
pop
jnp
into
cwtl
cmp
pusha
mov
xchg
push
push
shl
arpl
sub
stc
in
rol
pop
enter
movsl
popf
xchg
adc
push
xchg
out
and
sbb
stc
adc
std
xchg
xor
fimuls
rolb
cli
mov
dec
or
outsl
push
jle
mov
cwtl
ret
js
push
movsl
outsb
adc
dec
dec
sahf
iret
inc
xor
pop
push
insl
push
push
inc
fistpll
pop
pop
mov
sbb
aam
out
mov
call
test
loop
gs
js
xor
les
rclb
xchg
ljmp
push
fbld
cmc
mov
dec
pop
or
in
adc
mov
nop
push
xchg
popa
popa
notb
es
xor
xor
sub
xor
pop
bound
cmp
lock
imul
insb
push
adc
mov
sbb
lock
jmp
dec
jo
xchg
fildl
inc
out
cmp
test
xchg
mov
xor
loopne
or
xchg
and
add
inc
dec
sbb
in
addr16
inc
jmp
into
mov
imul
dec
cmp
mov
push
in
fdiv
or
les
or
test
dec
loopne
pusha
mov
adc
xor
mov
out
sub
jl
xchg
roll
jne
movsb
inc
leave
add
inc
or
stos
loop
sbb
xor
push
sub
xchg
movsb
fsubl
fbld
xor
sub
mov
aas
rorb
jle
daa
jo
mov
dec
xor
std
js
add
mov
cmpsb
xchg
insb
imul
aam
jno
fcoms
add
xchg
mov
lods
and
mov
mov
sub
cwtl
mov
or
int
lock
aas
sar
stos
xor
mov
mov
and
add
imul
cmpsl
cmpsl
mov
adcb
stos
inc
aas
outsl
negb
mov
jge
jle
jecxz
pop
out
mov
repnz
cltd
cmp
push
sbb
out
xchg
cwtl
fldl
fucomp
imul
xor
inc
sub
inc
popf
adcl
orl
int3
xor
mov
or
push
mov
sbb
jne
out
mov
mov
bound
lds
inc
ret
imulb
ja
cmp
not
cwtl
mov
mov
sbb
dec
mov
xor
xor
imulb
push
sti
mov
sbb
sbb
cltd
jle
sub
in
call
push
ret
cmp
and
outsl
xor
lea
fnsave
fiadds
mov
lods
adc
cmp
inc
mov
add
xor
or
mov
test
pop
jl
xor
in
mov
cmp
xor
and
je
and
mov
mov
outsb
mov
roll
rorl
lcall
aam
sbb
popa
push
sahf
or
xchg
dec
pop
pop
movb
inc
xor
popa
ljmp
or
in
dec
das
xor
repnz
js
pop
bound
xchg
mov
out
add
fists
idiv
xchg
cmp
push
cmpsb
mov
les
shll
cmpsl
push
push
or
dec
pop
imul
mov
in
inc
scas
insb
push
add
mov
mov
mov
rorb
jmp
sub
mov
fstps
in
inc
fmull
jp
int
xor
rolb
adc
pushf
insb
adc
icebp
cmp
repz
sub
std
rcrb
fbld
pop
fdivr
shll
repz
inc
mov
pop
xchg
jb
push
sbb
setbe
out
ret
jg
mov
aam
test
out
cmp
imul
mov
inc
bound
or
shlb
test
ds
lods
out
cmp
xchg
or
sub
cmc
jo
stos
gs
imul
imul
or
lods
jns
dec
gs
lcall
cld
mov
lock
pop
adc
cmp
roll
inc
pop
loope
mov
mov
mov
les
and
pop
addr16
lods
jns
push
cmpsl
mov
shl
punpckldq
pop
cmpsb
sbb
fistl
mov
sub
push
adc
jmp
shrl
aaa
rorb
pop
push
ja
xchg
scas
sub
fstpl
arpl
cwtl
inc
js
push
jne
mov
jnp
outsl
cmp
test
mov
or
sbb
mov
jno
or
cmp
sub
lock
mov
sub
rol
pop
mov
sbb
mov
push
popf
dec
adc
or
imul
xchg
jbe
stc
mov
in
push
push
popf
pop
or
pop
mov
cmp
and
adc
loop
inc
rcl
inc
cmc
repnz
mov
cmp
sahf
sub
adc
ret
mov
scas
cld
xor
cwtl
pop
dec
fstpl
int3
orl
mov
add
pop
je
gs
dec
bound
dec
dec
sub
addr16
push
dec
inc
cld
or
dec
push
pop
out
mov
mov
sbb
test
std
add
inc
lahf
ret
sti
fnstcw
add
push
in
mov
or
push
push
lahf
or
jne
add
clc
cltd
lcall
mov
sbb
sub
and
adc
and
inc
bound
insb
push
xchg
dec
pop
sbb
into
inc
in
push
rcll
test
inc
or
and
outsl
mov
jae
fidivl
jne
lods
xor
push
outsl
enter
mov
push
add
push
fstpl
sahf
dec
es
inc
dec
xorb
stos
aas
cli
dec
sbb
pop
cs
mov
lret
mov
sbb
cmp
enter
dec
jle
std
gs
jl
xchg
jle
mov
xchg
cmp
in
dec
filds
cmp
int3
imul
test
shlb
push
arpl
daa
adc
xor
jl
xor
push
bnd
outsb
int
add
stos
dec
fdivrs
lods
mov
pop
out
add
rorl
push
shll
ja
inc
loopne
mov
outsl
loope
or
dec
dec
je
wbinvd
sub
movl
pop
mov
jmp
push
leave
pop
aad
test
sub
dec
mov
inc
sub
ficoms
push
push
mov
andb
test
cmpl
cli
leave
or
sbb
mov
mov
jge
sbb
push
loope
aad
arpl
pushf
pop
xchg
hlt
pcmpeqd
fs
into
call
sahf
pop
mov
arpl
movsb
dec
and
ret
into
out
std
sbb
in
mov
jp
sub
sub
in
int
xchg
jb
aaa
mov
dec
inc
pop
aas
cld
push
and
sub
outsb
scas
cmp
push
push
icebp
iret
je
mov
cmp
clc
insb
addr16
xor
int3
fdiv
pop
pop
aas
and
ljmp
cltd
pushf
std
fdivrs
scas
fstpt
adc
xor
inc
inc
es
lods
mov
aad
aaa
jle
loopne
dec
mov
sub
or
cmp
pushf
outsl
adc
loop
cmc
jbe
int
fisubl
ret
sar
jp
and
mov
adc
cmp
icebp
sti
sbb
pushf
dec
cmp
xchg
jmp
mov
mov
or
ds
mov
xchg
push
cltd
lock
mov
ljmp
popf
scas
dec
push
jo
addr16
out
push
dec
add
adc
negb
lahf
inc
outsl
aad
flds
iret
and
data16
out
jg
mov
cmc
inc
mov
popf
lahf
dec
fdivs
data16
push
clc
xchg
or
shll
pop
cltd
sbb
push
fwait
push
push
ja
fildl
or
cmp
xorb
jno
add
xor
mov
mov
sbb
jl
mov
pop
or
adc
sub
icebp
add
mov
or
lods
mov
enter
out
ret
fsubr
lahf
sub
cmpsb
push
and
das
ret
rorl
shlb
call
adc
cmp
movsb
jp
inc
sbb
and
jp
sbb
dec
mov
imul
lahf
movsl
jecxz
xchg
aad
mov
popf
sbb
outsl
pop
jmp
mov
stos
enter
mov
aam
mov
and
mov
pop
mov
dec
xlat
pmulhuw
add
or
loopne
dec
push
mov
inc
cmp
xor
push
xchg
inc
and
dec
mov
leave
jg
and
sub
adc
jmp
in
mov
jmp
into
adc
mov
jns
xchg
xchg
xor
push
push
int
push
ficompl
sarb
xchg
mov
pop
lods
xor
xor
sub
jb
cs
pop
mov
xchg
jecxz
cmpsb
xchg
mov
dec
outsl
aas
fldenv
pop
sbb
std
inc
xchg
cmp
pop
aas
lds
dec
xor
jns
fs
sub
les
xchg
decl
push
jno
sbbb
mov
outsl
dec
fiadds
ss
cmc
shl
dec
xchg
mov
jg
insl
enter
rep
pop
in
push
pop
mov
jnp
out
pop
mov
jb
data16
sbb
fdivrs
mov
js
xor
out
es
aad
jns
into
aaa
testl
sub
insl
repz
setae
dec
inc
mov
fwait
push
scas
xchg
jo
mov
int
pop
and
jle
cltd
js
or
into
adc
cmp
dec
lahf
adc
jne
dec
adc
inc
sub
inc
shrb
rcrl
iret
mov
repz
push
scas
jnp
pop
pop
loop
nop
mov
push
fdivrs
pop
ja
add
push
pop
fists
rorb
pusha
inc
mov
std
xor
jl
cld
shlb
outsb
adc
iret
rcl
stc
movsl
aas
pop
int
test
xchg
rcrl
jle
push
fnstsw
adc
mov
nop
pusha
adc
jns
mov
adc
mov
mov
mov
mov
stos
out
mov
rol
test
pusha
fbstp
mov
rcl
or
repz
mov
and
mov
jnp
push
push
sti
mov
inc
xorl
ret
cmp
sbb
mov
repnz
ret
pusha
lea
stc
aas
mov
into
xlat
inc
lock
pop
pop
popf
push
add
cmp
jge
lea
mov
or
enter
cwtl
push
shrl
inc
iret
pop
mov
lahf
mov
loopne
sub
leave
mov
jne
arpl
ror
out
xchg
sub
les
scas
repz
push
ret
push
jns
lea
sub
es
flds
cwtl
fisttps
dec
sbb
mov
add
bound
sbb
xor
into
and
mov
cmp
jge
rcrl
and
jb
sbb
lds
addr16
gs
add
push
les
cwtl
mov
es
xchg
pop
sub
sahf
xor
out
sbb
adc
cltd
mov
jge
push
jo
mov
mov
pop
stos
push
imull
fstpl
popa
test
dec
push
test
jecxz
fnstenv
jns
icebp
adc
ret
or
mov
or
shrb
xor
xchg
xchg
test
dec
loope
sub
repnz
sbb
xor
lods
mov
sub
ja
repz
cltd
jle
js
clc
jbe
lcall
xor
aas
test
pusha
in
mov
shrb
fdivrs
adc
push
xchg
mov
cmp
ljmp
adc
cmp
xor
pop
mov
pop
ds
ds
dec
mov
movsl
push
mov
xor
lods
insb
xchg
push
repz
pop
push
lods
mov
imul
ja
lea
xor
fcomps
ljmp
or
jp
cmc
aad
xchg
and
ljmp
adc
inc
inc
push
inc
in
imul
xchg
inc
mov
jo
dec
shlb
xchg
jbe
pop
pop
cmp
lcall
xchg
push
sbb
sbb
das
jbe
xlat
push
es
xchg
popf
jno
xchg
adc
push
or
dec
push
inc
repz
insl
push
insb
scas
jbe
push
js
inc
xchg
add
sbb
and
cmpb
adc
or
cmc
adc
sahf
mov
dec
jne
xchg
mov
insb
inc
mov
pop
xchg
cs
mov
rclb
in
sub
push
loope
inc
xchg
icebp
xor
mov
dec
icebp
xor
arpl
movzwl
lock
mov
sbb
inc
xor
push
fisttps
jns
ret
negb
push
jecxz
sbb
inc
mov
cmp
movsb
test
jl
sub
rep
pusha
rolb
shrb
or
leave
shrl
sub
test
sbb
jge
insl
jns
mov
fs
push
scas
sbb
shrl
outsl
ljmp
sub
xchg
push
aas
test
push
mov
push
andl
mov
rol
repz
outsb
sbb
push
packssdw
shlb
or
sbb
add
xchg
jl
sub
mov
add
fmuls
inc
in
sub
js
mov
imul
imul
add
sbb
push
lods
mov
test
loopne
inc
dec
xor
lea
jmp
or
jle
enter
lret
shlb
push
cltd
pop
lods
mov
mov
mov
out
inc
aas
xor
test
mov
pop
lret
mov
in
popa
test
jo
push
or
sbb
sahf
mov
sbb
mov
mov
shll
shll
fcoml
adc
mov
push
clc
cmp
je
or
inc
leave
test
call
and
pop
je
mov
stos
nop
cld
loop
call
cmp
jns
mov
mov
repnz
push
sbb
inc
adc
jle
rep
outsb
add
adc
ret
scas
mov
cli
adc
sub
pop
or
mov
jg
xlat
es
xor
mov
fwait
push
popa
sub
dec
fstpt
stos
jge
cmpsl
pop
lock
in
mov
dec
cltd
cmc
sahf
mov
iret
test
inc
sahf
cmpl
mov
dec
test
call
sahf
mov
lret
and
shll
scas
jg
cwtl
add
fwait
xlat
outsl
hlt
aam
loopne
and
fildll
push
xchg
mov
sub
xchg
and
mov
push
into
aaa
stos
xor
mov
push
movb
xchg
jo
fmull
jp
jl
aad
pop
jne
pop
lods
aad
bnd
subb
rclb
movsl
in
sarb
sub
mov
sub
sbb
sahf
in
adc
inc
idivl
test
jae
and
push
cmp
mov
aam
xor
cmp
scas
inc
je
dec
sub
xor
jge
test
aam
enter
lret
push
xor
mov
mov
movzbl
pop
sar
xor
mov
outsb
jne
outsl
pop
pop
nop
xor
outsl
popa
add
push
inc
xor
mov
or
out
imulb
movsl
mov
sbb
push
push
cltd
jg
cli
mov
lahf
mov
insb
les
mov
mov
je
cwtl
adc
aad
jno
jbe
fs
cld
cmpsb
into
outsb
xor
fsub
leave
inc
jnp
in
add
sbb
fwait
xchg
cld
dec
cli
xchg
pop
xchg
jp
cmp
nop
jge
out
jnp
mull
sbb
dec
ficomps
xchg
xchg
add
xchg
push
test
iret
lcall
std
cli
cmc
imul
sub
ret
sub
shll
sbb
mov
outsb
sub
aas
pop
sub
add
cmc
add
pop
dec
imul
mov
push
icebp
stc
test
cmpsl
call
sbb
mov
mov
adc
shlb
add
mov
add
loop
out
sbb
imul
adc
in
mov
push
mov
into
inc
int3
pop
xorl
incb
add
mov
ret
pop
mov
add
cmp
cmp
ja
outsl
scas
adc
xor
mov
arpl
push
add
mov
cmp
loop
test
add
mov
sub
fwait
inc
add
add
dec
lcall
xor
shll
repnz
sub
dec
fcoms
sub
icebp
cmp
cld
inc
xor
mov
mov
xor
mov
push
inc
loop
ret
sbb
ss
dec
pop
test
and
mov
js
sub
lret
in
sbb
pop
mov
aaa
orb
inc
stos
push
xchg
or
stc
aam
jne
dec
cli
xlat
add
sub
loop
mov
sub
insl
pushf
mov
push
outsl
idivl
hlt
imulb
popl
xchg
and
dec
aam
mov
icebp
or
push
push
clc
aad
push
das
push
push
lds
ror
in
les
cmp
outsl
divl
fxch
push
mov
xchg
mov
daa
dec
sahf
and
in
xchg
stos
pop
jle
mov
outsl
pop
or
mov
shrb
lods
mov
inc
cmp
cmp
and
inc
push
or
enter
cmp
orl
movsb
shrl
dec
mov
push
enter
fwait
cvtps2pi
int
nop
icebp
cmpl
out
or
cmp
inc
jbe
dec
cmp
jo
or
sub
mov
cmpsb
dec
faddl
jp
outsl
mov
mov
cli
mov
aas
ds
push
call
xlat
iret
cld
insl
pop
push
in
inc
dec
mov
xchg
xor
pop
lds
fsubl
movsb
sbb
pop
dec
and
notl
rcr
enter
rcrb
or
push
jno
xor
or
inc
into
enter
rcll
push
shll
enter
ficoms
cs
ja
mov
add
push
repnz
xor
sub
mov
jmp
notb
cmp
rorb
push
pop
mov
push
jecxz
xchg
nop
daa
ficoml
or
call
push
inc
sub
push
push
pop
imul
push
adc
popf
push
outsb
repz
pop
insb
lret
movsl
aam
and
and
into
add
test
dec
dec
dec
clc
pop
repnz
les
out
into
xchg
jno
jl
repz
lret
in
dec
jnp
dec
and
movsl
repnz
lcall
mov
pushf
ds
jl
push
cwtl
rorb
into
lret
in
loop
push
dec
ret
rolb
mov
sbb
add
lock
dec
arpl
xchg
cwtl
hlt
js
test
div
cmp
pushf
iret
test
sbb
add
cmc
jne
inc
xchg
or
rcrb
mov
inc
sub
inc
xor
sar
insb
sub
std
xor
dec
test
xchg
adc
stos
push
pop
es
je
push
leave
fstps
pop
xor
ss
dec
mov
lock
mov
sub
and
in
mov
push
jno
loop
sub
pushf
sbb
gs
or
imul
xchg
mov
test
and
mov
out
lahf
leave
pop
rcrl
or
mov
jo
fmuls
and
into
inc
jb
test
lahf
mov
mov
out
rol
sbb
inc
pop
jb
in
fldt
fwait
xor
mov
incb
jno
xor
cwtl
ljmp
test
inc
adc
sahf
call
and
sub
ds
push
dec
mov
mov
cmp
fsubs
hlt
xchg
sub
mov
lret
push
sub
mov
lea
mov
adc
pushf
push
popf
adc
xlat
push
pop
jmp
scas
shll
in
mov
adcl
xchg
repnz
push
clc
jno
ljmp
call
movsl
push
adc
push
popf
xchg
fs
adc
movsl
sti
int3
test
cld
out
sarb
stc
mov
xorl
jae
out
pop
outsl
in
fstps
mov
shrl
pop
push
push
push
dec
insl
leave
dec
mov
mov
push
jne
cmp
mov
add
mov
and
jbe
add
divl
inc
mov
lds
sbb
pop
cmp
xchg
dec
xor
mov
lcall
and
jnp
adc
pop
xchg
push
aam
push
stc
push
or
nop
mov
sub
jecxz
aad
mov
mov
push
and
jge
lret
stos
pusha
fnstsw
add
subb
movsl
jmp
jecxz
sub
ss
adcb
insl
inc
mov
jg
orl
lret
adc
mov
inc
pushl
lret
int
mov
movsl
lods
or
in
ja
mov
jl
xchg
ret
hlt
xchg
std
cld
jp
and
mov
and
sbb
iret
cwtl
insb
pop
ja
adc
push
test
push
stos
xchg
subb
cmpsl
fmul
lds
inc
mov
mov
xor
imul
daa
push
fists
fcoml
mov
imul
mov
cmpsb
mov
push
pop
mov
call
insl
jle
dec
int3
cltd
fimuls
mov
pop
jp
dec
jnp
test
leave
and
mov
inc
lods
lods
and
xchg
push
arpl
divl
in
mov
cmpsb
lret
sbb
adc
dec
jnp
jle
lea
add
lds
cltd
enter
jle
add
mov
xchg
insb
dec
mov
or
pop
fidivrl
pusha
mov
sti
push
xlat
inc
int
dec
in
dec
pop
sbb
inc
nop
push
insl
push
test
cmpsb
inc
cs
repz
push
dec
leave
sbbl
clc
xchg
test
pusha
cmp
adc
aam
sub
movsb
psadbw
push
push
jne
xchg
arpl
sbb
fbstp
or
lods
cltd
in
cmp
push
mov
cmp
pop
roll
cmp
aam
sub
in
xchg
jno
sbb
mov
sub
push
jb
mov
ds
mov
movsl
fdivs
daa
sahf
push
mov
sub
fdivrl
daa
loopne
mov
cmp
ljmp
cltd
mov
xor
das
pop
xchg
cs
fisubs
xchg
mov
outsb
mov
adc
sub
scas
insb
mov
mov
mov
mov
mov
mov
lods
adc
stos
xchg
lods
jle
scas
mov
and
shr
je
mov
imul
or
pushf
push
and
fcompl
stc
mov
iret
sbb
int
sbb
ljmp
test
push
inc
mov
ja
scas
ds
ret
incw
fbstp
or
jl
idivb
sub
adc
mov
outsl
push
movsl
popf
ret
add
xchg
push
outsl
and
fadds
scas
mov
lock
das
lcall
xor
add
add
lahf
push
sbb
dec
fcoml
mov
jmp
divb
cmpsl
clc
das
cltd
pop
daa
ror
push
mov
sbb
aam
add
sahf
movsb
sub
fcmovne
mov
sub
adc
arpl
jl
out
jae
lock
paddb
add
sub
jnp
rolb
mov
nop
jg
stos
std
mov
movsb
out
or
rcrl
dec
sarb
jbe
iret
gs
ds
enter
xchg
icebp
xchg
ffree
std
xor
push
shl
test
or
enter
sub
dec
addps
adc
inc
shrl
sub
leave
pop
stos
sub
mov
inc
xlat
dec
pushf
pop
dec
into
in
push
inc
jge
imul
add
mov
fnsave
bound
jp
push
add
ret
sub
or
mov
and
shr
lods
dec
pop
test
add
push
shr
or
negb
add
push
int
mov
jbe
push
sahf
add
adc
dec
sarb
jnp
sbb
and
pushf
jl
xchg
cmpsb
mov
addb
neg
xor
ret
mov
adc
fucom
fwait
jno
in
or
push
xchg
addr16
adc
cld
xchg
insl
lock
push
pop
in
fwait
push
in
jbe
add
inc
inc
adc
nop
icebp
sub
rorl
flds
mov
ds
stos
movsb
mov
dec
lahf
pop
mov
outsl
scas
xor
clc
insb
pop
or
inc
mov
dec
xchg
pusha
mov
jmp
test
jp
aad
and
push
test
adc
jno
jbe
inc
andb
xchg
fdiv
pop
pushf
sbb
add
mov
incl
es
jnp
inc
push
inc
push
in
aam
adc
xchg
xor
inc
jmp
test
mov
fs
or
jno
jecxz
push
cmpsl
jmp
dec
int
mov
or
or
das
dec
xchg
mov
jae
scas
mov
nop
movsl
push
in
sub
cmp
add
fsubl
aam
push
movsb
je
stos
mov
mov
push
xchg
jge
mov
push
jbe
mov
loopne
inc
fists
lahf
cmpsl
insl
scas
pop
call
pop
add
jg
push
std
cmpsl
adc
dec
es
sub
les
pop
dec
jecxz,pt
jecxz
add
add
lds
sbb
jnp
pop
mov
or
inc
xor
inc
dec
and
push
push
xchg
cwtl
ss
shrb
imul
add
xor
mov
shlb
sub
xor
sub
pop
mov
or
adc
push
xchg
xchg
push
mov
cld
jns
jmp
lds
dec
inc
mov
cmp
cmp
mull
ja
mov
shl
fcompl
pusha
jge
cmpsb
cmp
stc
sbb
test
addr16
xchg
push
xor
arpl
test
jg
je
jp
mov
aad
mov
and
sub
sub
mov
sub
add
ret
imul
enter
stos
dec
lea
push
and
in
ficoml
test
mov
fnsave
loopne
xor
test
ret
es
dec
lret
out
leave
and
roll
int
sub
mov
fstpl
idivl
shll
lahf
mov
or
add
xor
xor
aam
or
xchg
xchg
cs
sub
sub
fstpt
ljmp
or
dec
xor
mov
test
fs
push
inc
xchg
outsl
jmp
add
repnz
inc
aaa
mov
mov
mov
popa
push
std
test
int3
arpl
or
loopne
aad
lock
mov
nop
fwait
imul
cmp
and
into
jo
push
repnz
cmpsl
inc
inc
nop
xor
xor
jg
sbb
dec
js
mov
or
mov
sub
and
xchg
sub
rorb
shll
test
mov
fistpll
in
enter
cld
and
loope
mov
jmp
adc
mov
lea
out
push
add
cmp
movsb
xor
lock
rcrl
rcr
or
imul
fs
jne
test
mov
inc
out
xchg
jns
in
or
popf
inc
pop
and
mov
mov
hlt
xchg
jp
cmp
pushf
fildll
pop
lahf
jmp
and
mov
test
mov
push
lock
inc
inc
add
cld
ret
xor
xchg
jo
xchg
testl
mov
xor
pop
xlat
mov
stc
inc
xorl
adc
les
xchg
lret
leave
pop
xor
cmp
xchg
mov
imul
std
insb
sub
mov
and
subps
lcall
in
cwtl
stos
aas
hlt
fwait
ja
lcall
jmp
les
shrb
test
hlt
sbbl
test
xor
cmpsb
call
adc
addr16
jl
aad
add
adc
aaa
shufps
insl
enter
push
imul
loopne
xlat
loope
stos
les
push
daa
pop
out
mov
dec
call
dec
inc
push
or
push
mov
inc
add
mov
cmp
jge
pop
orl
call
out
adc
pop
lods
or
pop
inc
dec
pop
jne
mov
lahf
lock
gs
jnp
push
pop
lods
inc
mov
mov
adc
and
or
sub
aas
mov
adc
repnz
add
jl
leave
ljmp
add
shrl
sub
inc
ljmp
dec
enter
xchg
xor
scas
and
leave
sub
mov
dec
lods
add
jb
call
mov
int
push
scas
cltd
adc
iret
fstpl
or
sub
xor
push
xchg
cmpsb
ret
repz
mov
push
jno
in
scas
add
fcomip
mov
in
dec
xchg
scas
roll
daa
xchg
jae
mov
aad
int
sub
push
test
and
push
arpl
ss
lahf
xchg
jmp
push
and
test
cmp
lahf
cmp
pop
cltd
and
shl
inc
xchg
push
mov
mov
pusha
cmc
fmul
or
sub
lahf
lods
shlb
aam
ret
cwtl
insb
enter
lods
addb
mov
rclb
mov
ss
popa
inc
jmp
in
and
rorl
test
mov
ljmp
ret
into
mov
addl
sub
test
jg
sub
pop
movswl
cmpsb
cmp
jle
aam
sbb
and
int
hlt
xor
daa
pusha
xchg
aaa
push
cmpsb
scas
xor
push
fdivs
mov
cmpsb
mov
lods
adc
lock
xchg
push
xorb
push
in
fadd
add
and
mov
dec
lds
leave
add
mov
or
mov
ja
cmp
cmp
popf
sbb
xchg
cld
mov
sbb
push
sub
sub
testl
mov
xchg
dec
jmp
push
mov
ftst
shrl
es
dec
lret
fimuls
inc
xor
or
nop
ja,pn
in
pop
dec
and
lock
xor
mov
lret
inc
xchg
xor
sti
xor
or
mov
lods
movsb
out
inc
scas
sbb
dec
movsl
out
xor
mov
cmp
punpckhwd
shlb
mov
adc
faddp
movsb
jge
add
cmp
mov
mov
mov
lcall
cli
std
sbb
push
scas
imul
ret
fstpl
pop
push
and
loop
repnz
or
iret
xchg
pop
mov
or
or
nop
pop
lret
cmp
xor
movsb
add
mov
repnz
mov
lods
sbb
mov
mov
push
mov
jnp
sar
pop
lret
shlb
ds
out
das
icebp
jae
mov
es
stos
jb
cli
push
fcomip
icebp
movsb
lret
dec
mov
pop
pop
mov
cmp
mov
lods
inc
hlt
push
pop
imul
adc
movsl
xchg
insb
stos
xchg
int3
jnp
fs
cli
in
addl
lods
xchg
push
inc
stc
test
out
gs
mov
cmp
jns
cmp
mov
cwtl
pop
insl
aaa
cmp
cmc
cmp
push
iret
mov
scas
or
mov
out
jmp
add
mov
inc
out
cli
sti
add
adcb
inc
dec
mov
sbb
inc
jae
cmp
insl
enter
lea
ss
xor
loope
pop
and
stos
sbb
mov
cmpsb
pop
jae
lcall
mov
popa
popf
in
jmp
push
ficompl
xchg
subb
inc
cmpsb
mov
xor
sti
faddl
sbb
mov
pop
pop
fisttpl
push
mov
repnz
fidivs
nop
in
mov
push
jne
das
rolb
outsl
sub
pusha
popf
lcall
inc
dec
scas
gs
mov
imul
int
add
sub
aam
sahf
test
out
sbb
xchg
sub
in
push
leave
push
pusha
mov
sub
push
subl
xor
jecxz,pt
and
nop
ljmp
pop
push
into
pop
sbb
mov
mov
pop
fistpll
ljmp
lcall
nop
test
jmp
add
or
lret
loope
outsb
mov
lods
push
mov
sbbl
mov
ret
inc
mov
ss
lret
push
pop
leave
dec
int
movsl
int3
add
scas
stc
rolb
push
mov
push
sbb
stc
mov
cwtl
cwtl
scas
inc
call
push
mov
inc
or
push
lahf
sbb
mov
pop
les
rcr
sbb
aaa
mov
lcall
shl
dec
sub
sti
or
sbb
mov
and
lods
scas
xor
inc
popa
cmp
lahf
enter
out
rorl
in
inc
fsub
mov
xlat
push
js
jmp
stc
mov
mov
pop
int3
sarl
cmp
in
js
cmp
xchg
cmpl
or
or
hlt
sub
push
or
clc
add
jp
inc
cmpsb
pop
xlat
pushl
out
mov
fisubs
bound
or
int
mov
out
sub
jl
cmp
push
rol
xor
es
jle
dec
mov
and
xlat
cmpsb
mov
fisubs
into
in
mov
mov
cltd
add
push
mov
mov
fstl
loop
ffree
pop
scas
jae
inc
or
jl
jecxz
xchg
xor
es
mov
outsb
mov
aaa
je
adc
or
inc
test
mov
mov
js
outsl
cmp
mov
dec
in
xchg
in
dec
shll
jge
cmc
repz
pop
jmp
cmp
lods
into
or
mov
mov
pop
sub
std
cmp
call
loop
shlb
aas
pushf
dec
mov
push
ficoml
addr16
mov
push
lret
inc
insb
push
inc
xchg
inc
scas
mov
or
ret
cmp
or
fneni(8087
popa
xchg
or
insb
pop
lock
sbb
lock
je
fisttpll
push
jnp
dec
popa
jno
and
cli
or
jp
or
push
lea
loope
or
insl
dec
daa
jg
mov
das
pop
push
xchg
dec
dec
pop
rorb
lea
fst
js
inc
push
add
mov
lret
mov
jbe
add
movsb
jle
inc
and
xor
or
xor
enter
mov
add
out
outsb
lods
adc
mov
std
flds
cmp
divb
mov
loopne
fstpt
sbb
or
ja
stos
inc
fwait
mov
insl
and
sub
ss
xchg
stc
dec
cwtl
stos
mov
loopew
repz
jae
test
push
or
sbb
cmp
xchg
jl
sub
pop
xchg
dec
pop
cwtl
outsb
out
imulb
push
repnz
cltd
test
and
out
lret
repnz
push
pop
arpl
je
imul
fsts
push
stc
dec
outsb
jb
fldcw
je
sub
push
xchg
rcl
push
dec
push
test
stos
adc
mov
outsb
arpl
lods
and
mov
rorl
hlt
pop
pop
das
cmp
ror
mov
scas
dec
fisubs
jno
mov
mov
sti
in
mov
outsl
or
lret
inc
jecxz
std
mov
and
and
jmp
movsb
mov
inc
sub
lods
mov
sbb
pop
sub
mulb
sarb
or
adc
lods
test
ds
push
push
iret
stos
jnp
inc
sbbl
xchg
cmp
mov
push
js
dec
sbb
cmpsl
cmp
cmpsb
test
mov
mov
mov
ja,pn
mov
mov
inc
inc
jo
or
sub
lret
out
push
fcomps
dec
outsl
ds
fcmove
divl
mov
ret
pop
aaa
aam
aas
movsb
cli
pop
leave
xor
mov
jmp
mov
mov
ljmp
jl
out
pop
or
xlat
fs
jmp
outsb
test
add
xor
and
dec
test
addr16
xor
push
add
jecxz
xchg
out
cmp
inc
lds
je
add
lods
cmc
push
sbb
jmp
dec
sarb
pop
lahf
jmp
mov
push
sub
clc
shlb
cltd
ds
mov
sub
mov
xchg
add
pop
xor
and
out
iret
test
jmp
out
stos
addr16
mov
jle
lret
sbb
mov
dec
or
mov
adc
popw
jns
icebp
xchg
cmp
and
mov
pusha
adc
std
lret
pop
sub
pop
into
mov
mov
sbb
lcall
jp
sbb
dec
pop
test
mov
subl
pop
imul
stos
push
insl
dec
pop
ror
adc
or
mov
shll
mov
ror
les
lcall
lahf
gs
lock
stos
ret
cmp
enter
push
fildll
xchg
lret
pop
sbbl
inc
sub
test
add
add
adc
add
arpl
push
sub
data16
inc
xor
imul
or
dec
ds
mov
arpl
outsb
jnp
addr16
xor
movsb
mov
fistpll
xchg
xor
lcall
dec
pop
aaa
add
mov
adc
adc
arpl
lock
xchg
mov
dec
push
xchg
leave
xor
lret
xchg
pop
dec
imul
sahf
or
fs
ds
mov
pop
xchg
mov
icebp
cmpsb
pushf
mov
xor
loope
mov
dec
outsb
cmc
jo
sub
xchg
popa
scas
lahf
xor
xor
movsb
insl
xchg
mov
fadd
incb
cltd
or
aam
inc
aas
xlat
lahf
in
sbb
nop
mov
aad
pop
mov
or
pop
out
lds
rcrl
pop
in
out
ljmp
or
inc
cmp
jb
mov
loopew
cmp
lret
xchg
pop
add
xchg
mov
cmpsb
call
js
bound
nop
fwait
cwtl
shlb
push
and
and
xlat
leave
or
add
sti
jbe
mov
dec
sub
dec
enter
cli
arpl
call
add
sbb
sub
add
add
and
ret
insb
pop
addr16
out
movsl
sub
lahf
jnp
xchg
test
mov
mov
js
das
add
loop
sub
mov
pop
mov
ljmp
loopne
stc
rclb
jge
stos
xchg
lcall
xor
and
jge
test
adc
test
push
shr
call
sub
cwtl
imul
push
pop
pop
clc
mov
imul
and
sbb
loop
lods
jbe
das
arpl
mov
sbb
stc
icebp
or
js
jg,pn
int
popf
out
repz
rcrl
outsl
stos
in
dec
xchg
je
mov
mov
cli
cmp
fisubrs
jae
jns
lods
sub
jge
popa
shll
loop
mov
daa
push
xor
push
lods
xchg
loope
xor
sub
push
lret
cltd
push
sbb
cs
loop
fisubl
cli
xor
pop
inc
mov
mov
jge
jge
fadds
or
pop
inc
xor
mov
push
xchg
cmp
jecxz
push
push
pop
and
sbb
cmp
lods
insb
inc
dec
inc
adc
sbb
pop
cmp
je
sbb
sbb
adc
shll
sbb
lahf
pop
mov
inc
jge
jl
push
mov
out
adc
sub
lods
and
xchg
push
cwtl
push
mov
vorpd
adc
popa
or
das
divl
inc
or
enter
repnz
and
rcrl
out
add
addr16
fmuls
scas
test
mov
out
xchg
out
shll
mov
xchg
lret
lcall
test
insb
popa
mov
sub
or
lret
adc
rcrb
fcoms
icebp
or
pop
les
lock
lcall
inc
std
sahf
jb
pop
jns
cmp
stc
dec
incb
in
inc
mov
negl
jb
mov
push
fdivp
mov
sub
adc
loopne
jmp
sti
in
dec
les
sub
bound
rorl
js
daa
pusha
fistpl
push
xchg
jmp
je
push
outsb
push
xlat
cmc
popl
sub
sbb
sbb
push
and
mov
rcr
imul
leave
aam
sub
jbe
fstps
cli
mov
rorl
lods
or
insb
lret
aad
mov
pop
in
pop
xor
bound
push
jno
lcall
or
xlat
shll
imul
mov
call
jecxz
imul
cmpsb
or
clc
xor
cwtl
inc
popf
dec
or
jo
pop
push
in
or
repnz
call
xor
enter
push
fcmovb
dec
jmp
pop
clc
pop
push
das
andb
sbb
mov
lret
inc
pop
insl
in
xor
notb
mov
xor
jb
push
and
or
pop
in
sub
mov
push
xor
movsl
popw
lcall
sub
out
sbb
cmp
cmp
subb
loop
mov
test
or
mov
mov
push
lods
sub
mov
rolb
push
mov
xchg
mov
fisubrl
or
pop
cmp
mov
in
or
push
jmp
lret
adc
mov
pop
call
imul
jmp
xchg
adc
test
push
lahf
sub
cmp
iret
inc
sub
es
out
or
mov
lods
push
add
inc
mov
cltd
pop
adc
sbb
iret
dec
lods
std
in
and
dec
adc
and
daa
out
lret
arpl
fstpl
pop
std
jp
push
mov
clc
in
cmp
jbe
icebp
and
mov
xchg
mov
cli
dec
in
loope
aad
shll
inc
lea
mov
iret
movsb
mov
push
loop
fdivrl
mov
scas
pop
mov
or
cmpsb
xchg
jle
ret
outsb
jns
ds
lret
fdivrl
jg
mov
sbb
sbb
pop
add
inc
xchg
xchg
leave
addl
aaa
jnp
dec
iret
push
and
imul
mov
call
jno
test
mov
cmc
mov
clc
out
push
lcall
inc
push
cmpsl
or
int
addl
sub
imul
lods
xchg
sub
stos
sub
cltd
pop
sub
aaa
lods
enter
out
jmp
push
pusha
lret
mov
jns
pop
and
jmp
jb
jne
sub
push
adc
sub
out
xchg
test
sahf
pop
adc
jecxz
mov
stos
adc
fwait
rcrb
inc
ret
lock
push
adc
pop
xchg
xchg
lods
mov
pop
cmp
sub
lcall
cld
loopne
sbb
pop
loop
and
xchg
lods
les
ja
sahf
jl
int
orl
shr
push
cmp
iret
repz
dec
inc
jl
or
std
inc
clc
sub
aas
jle
outsb
jle
pop
xor
out
stos
into
je
loop
lods
mov
mov
das
mov
cltd
sub
std
pop
push
mov
push
xchg
icebp
jae
cmp
aam
data16
gs
push
daa
add
sahf
jmp
sbb
jno
enter
sbb
mov
imul
sub
pop
fisttpll
mov
adc
cmp
mov
outsl
int3
jp
cmp
cld
inc
shlb
repnz
jmp
and
pushf
cli
adc
std
or
je
push
aam
add
mov
negb
or
xchg
and
cltd
mov
add
add
jo
sub
jae
fcomps
or
push
cmp
mov
test
pop
add
out
inc
loop
call
out
push
idivl
cwtl
jnp
fsubs
wbinvd
ret
add
dec
mov
scas
fsubrp
cmp
sub
int3
jae
sbb
mov
rclb
sub
push
int
sahf
cli
xor
sbb
jg
push
rcr
cli
daa
cwtl
in
imull
or
push
repnz
pop
push
sub
daa
test
icebp
loopne
int3
leave
pop
adc
insb
pop
ljmp
inc
aas
add
jl
lret
mov
mov
cmp
call
push
lock
movmskps
outsb
pop
jecxz
test
ret
xchg
subb
and
gs
fldt
stc
inc
ss
and
adc
andb
sub
daa
adcb
test
imul
mov
jae
pop
sub
xchg
fdivr
mov
imul
jge
mov
insb
popf
jecxz
push
icebp
test
stos
pop
mov
jno
or
test
adc
or
subl
mov
add
jp
inc
mov
xor
add
rorl
pop
fwait
mov
lret
mov
inc
add
cmp
shlb
mov
mov
gs
pop
mov
xchg
jge
xchg
mov
and
pushf
dec
push
test
sub
push
data16
inc
shrb
ret
xchg
xchg
je
add
cmp
jns
imul
adc
jecxz
sub
clts
xchg
movsl
mov
jae
shr
loope
sbb
fstpl
xor
cmc
cmp
inc
pop
push
das
lret
adc
wbinvd
pushf
es
cli
inc
jmp
mov
add
repnz
push
repnz
xchg
stc
or
mov
arpl
xor
std
adc
addb
push
jg
test
cwtl
xchg
in
js
insl
mov
dec
or
adc
xor
sub
out
push
pop
mul
push
sbb
xor
invd
addr16
cmp
inc
xor
push
std
adc
inc
inc
test
js
lea
and
repz
aam
arpl
sub
into
and
cmp
call
mov
nop
int
mov
xchg
add
iret
test
xchg
adc
dec
ficoms
adc
ret
rorb
ret
test
in
fcomps
fisubs
jmp
and
xchg
sub
dec
stc
into
jns
mov
test
stc
lahf
pop
retw
lock
dec
cld
sarb
aaa
roll
lea
adc
out
lods
inc
pop
sub
stos
dec
out
out
movsl
xchg
loop
mov
jg
fwait
xor
and
xchg
mov
sbb
mov
cmp
outsb
sarb
mov
mov
pop
jnp
xor
fwait
in
je
pop
scas
sahf
xor
clc
jge
jge
outsl
data16
out
loope
and
fnstenv
dec
int
or
add
pop
cld
cli
cli
push
cmp
fwait
xchg
cmpsl
sti
lcall
stos
lods
xor
popf
inc
dec
in
push
stc
dec
ds
ljmp
iret
ret
lods
and
rclb
or
in
subb
sbb
iret
pop
jbe
popf
push
ja
mov
sub
pop
xor
or
or
inc
in
insb
mov
pop
jle
cmpsb
push
subl
add
lods
cmpsl
push
mov
push
push
xchg
arpl
dec
mov
insb
add
mov
xchg
hlt
out
insb
mov
mov
sbb
xchg
mov
insl
aas
popf
repnz
jl
dec
jmp
lea
test
jns
sbb
sbb
mov
cs
mov
outsl
cmp
fdivrp
aad
dec
lret
xchg
pop
pop
push
shr
repnz
sub
add
jno
lea
fs
shrb
jo
push
xchg
je
incl
mov
inc
mov
clc
mov
jmp
mov
pop
pop
ds
hlt
mov
inc
pop
jb
adc
sub
push
movsb
ret
sbb
les
scas
cmp
or
test
cmc
inc
cwtl
aam
fdivr
lcall
test
fwait
cmp
std
add
out
fwait
mov
lret
xor
sub
clc
fiadds
xorl
cmp
hlt
hlt
push
and
mov
push
xor
ja
mov
cmc
mov
adc
mov
loop
divl
popa
leave
xor
jp
fldl
lods
pusha
mov
cmp
mov
mov
push
lahf
movsl
mov
imul
movsl
mov
aam
inc
sub
popa
mov
gs
ja
cmp
cmc
push
icebp
in
or
mov
jmp
lahf
jo
inc
loop
add
add
inc
popf
cmp
dec
enter
sub
popf
dec
insl
push
mov
mov
inc
fs
mov
mov
les
mov
call
stc
inc
jmp
mov
psubd
adc
inc
adc
sub
mov
mov
pop
push
pop
lcall
add
xchg
inc
imul
cltd
js
mov
sbb
je
aad
cmp
jns
push
sbb
mov
jb
pop
pop
push
mov
pusha
push
mov
pop
mov
je
ret
and
ss
js
inc
jbe
mov
movsb
iret
out
dec
cwtd
lahf
mov
mov
mov
ret
movsl
cmpsb
pop
scas
jne
dec
cmp
outsb
and
add
dec
test
fnstenv
pop
mov
dec
cld
scas
sub
lods
sti
jns
sub
cmp
nop
adc
mov
mulb
jo
xchg
xchg
or
push
adc
pusha
inc
test
or
jmp
fcompl
mov
adc
cs
mov
add
add
clc
cmc
gs
pop
in
aad
adc
sbb
fisubrs
shll
jmp
push
mov
xchg
xor
or
or
dec
xlat
mov
mov
mov
shll
jne
hlt
aad
dec
movsl
push
andl
clc
push
fs
pop
mov
in
out
mov
lock
jp
jmp
sub
call
mov
or
addr16
mov
xchg
dec
cli
sub
cmpsb
mov
loope
call
cld
lcall
xchg
sub
xor
shll
pop
out
enter
or
mov
lds
mov
aaa
incl
loop
xchg
push
mov
das
xchg
pop
mov
lds
xchg
add
subl
xchg
dec
scas
dec
loope
fstpt
mov
add
arpl
sub
xor
int3
rcr
je
cwtl
shrb
aam
sub
pop
cmpsl
outsl
cmp
insl
and
xor
push
pop
mov
lea
xchg
or
cmp
adc
sarb
or
sbb
cwtl
shlb
daa
pop
push
jns
cmpsb
add
enter
insl
outsl
sbb
push
movsl
and
xchg
sbb
jae
shlb
pop
or
das
les
or
jno
fwait
lods
or
jne
cli
out
dec
out
push
cmc
mov
pushf
mov
int
or
adc
or
mov
xchg
icebp
aad
and
cs
hlt
sbb
push
push
mov
fisttpl
es
mov
hlt
cmp
push
aam
sbbb
jno
add
lods
jecxz
xchg
out
xchg
int
push
mov
icebp
or
in
mov
adc
jno
insb
xor
xor
enter
nop
orb
push
xor
inc
pop
jmp
pop
daa
add
add
cld
jg
loope
inc
mov
push
mov
mov
imulb
int3
mov
loopne
call
loop
outsl
jmp
outsl
and
notl
insb
das
mov
movl
and
sbb
fisttpl
mulb
pop
inc
sahf
inc
adc
pop
pushf
inc
xchg
test
jg
into
call
xorl
inc
sbb
and
fisubl
adc
scas
rorb
insb
xor
xor
mov
test
lds
cltd
test
adc
idivb
pop
cwtl
notl
mov
mov
ret
or
aas
xchg
pop
es
lcall
mov
xor
in
jns
mov
cs
jle
push
dec
dec
xor
arpl
scas
call
aaa
mov
call
outsl
cmp
les
jge
je
sub
dec
dec
das
aas
cmp
add
adc
mov
mov
negb
mov
push
mov
push
mov
adc
sbb
mov
cmp
sub
gs
ds
iret
adc
ja
mov
fdivs
push
pop
idivl
dec
xchg
dec
shll
clc
sbbb
or
iret
leave
test
sub
jbe
negb
xchg
xor
xor
repnz
ret
rcrl
sbb
xor
push
gs
stc
pop
mov
repnz
xchg
xchg
dec
cmp
nop
jge
cmp
xchg
lds
fdivl
divl
sbb
lea
push
enter
add
xor
fs
test
jp
mov
je
pop
sub
and
clc
mov
int3
and
sbb
pop
fcomp
ss
mov
loopne
sub
icebp
xchg
ja
movb
jae
xor
in
jnp
ret
and
add
lcall
fstpl
enter
pop
aas
dec
lods
aas
sarb
bound
jo
cltd
push
cwtl
iret
sbb
call
ds
loope
mov
lret
pop
sbb
lret
sbb
jge
dec
mov
cwtl
mov
mov
repz
mulb
jb
imul
and
sub
sarb
sar
dec
adc
dec
mov
xchg
cmovno
adc
pop
divb
adc
xor
ja
jne
dec
into
and
sub
loope
ror
fisttpl
out
imul
sbb
jle
lahf
movsb
divl
data16
or
push
outsl
pop
out
adc
mov
push
adc
or
dec
cmp
push
xor
sahf
lods
test
jbe
inc
je
pop
in
rorb
mov
fidivs
push
cmc
push
in
data16
push
push
je
jl
dec
and
iret
xor
adc
jmp
outsl
or
nop
push
sahf
jo
pop
sti
mov
movsb
cmp
add
add
testl
and
mov
mov
cmp
adc
cmpsb
pop
lret
mov
sub
push
test
rclb
je
mov
pop
fmuls
push
jno
cmp
add
leave
and
pop
rclb
xchg
sbb
adc
pop
add
fs
lock
jbe
mov
sti
repz
fcmovnbe
lret
gs
lods
cmp
and
mov
dec
jl
test
les
iret
mov
pop
push
pop
iret
clc
std
push
cmp
jnp
out
mov
mov
rol
dec
sti
jg
inc
jb
icebp
add
inc
cmp
shll
bound
fsts
repnz
gs
mov
xor
stc
clc
jmp
jl
es
sub
pop
pop
xorl
adcl
xor
cmp
xlat
fcomps
roll
icebp
std
in
je
outsl
inc
fdivrl
xor
adc
adc
push
xorl
lcall
lahf
xchg
pop
xor
nop
mov
lret
dec
pop
add
jmp
in
and
xchg
inc
pop
popa
incb
pop
jne
mov
fisttpl
sti
or
pop
outsb
imul
cmp
or
jno
outsb
sbb
nop
lds
jbe
aas
stos
in
lods
jb
lcall
xchg
sbb
sub
in
push
in
ljmp
lcall
outsl
fwait
jb
dec
sub
add
push
stos
push
lret
push
pop
gs
sub
in
sahf
in
es
dec
les
pop
jns
mov
into
adc
push
in
mov
nopl
dec
xchg
cmp
fs
push
sbb
jg
jp
push
mov
cmp
jne
aam
xor
mov
cmp
loop
xchg
shlb
pop
pop
xorb
in
cmp
lahf
xchg
stos
in
outsl
xchg
inc
push
movsb
xor
orb
sub
bound
std
lock
mov
mov
add
gs
out
shll
pop
pushf
in
insb
pop
xor
fcmovnbe
pop
mov
or
and
mov
ret
nop
movsb
idiv
into
out
mov
decb
in
jmp
movsb
push
insl
and
and
cld
call
gs
gs
jl
lret
sub
mov
mov
cmp
dec
stos
lret
bound
or
or
int
pop
mov
adc
jge
das
mov
xchg
popa
ficompl
lock
test
movb
aas
mov
fstpt
or
pop
push
push
icebp
out
vpslld
lret
ljmp
xchg
xor
add
jbe
ljmp
dec
xchg
or
pop
fdiv
mov
adc
mov
dec
leave
leave
addr16
test
or
fcomip
icebp
cltd
cmp
cmpsb
xor
or
adc
dec
mov
xchg
cmp
xchg
sar
icebp
add
call
mov
aaa
ss
xchg
adc
fsubrs
jns
test
dec
fs
adc
cmp
mov
popl
out
sbb
add
sub
ds
inc
inc
test
sti
ret
es
pop
mov
push
fcomps
sbb
les
out
sbb
jbe
jns
in
lods
rcl
xchg
test
into
je
push
dec
sbb
ja
rcll
cmp
das
loopne
in
outsb
adc
xchg
inc
or
loope
mov
es
push
fildll
add
push
sbbb
adc
popa
outsb
out
call
xor
loopne
push
mov
mov
inc
cli
or
mov
adc
sub
mov
adc
or
or
shll
or
push
das
testl
nop
cmp
cmp
add
xchg
and
mov
and
pop
jg
mov
call
ja
out
inc
in
inc
fcompl
jne
fsubr
dec
ds
leave
gs
scas
adc
pop
inc
cmp
lcall
repnz
mov
into
dec
popa
shrl
outsb
lea
jmp
mov
jmp
fmuls
repz
mov
aaa
jl
or
sahf
cmp
or
adc
push
cmpsl
sarb
sbb
mov
add
adc
mov
mov
mov
aas
int
cli
and
sbb
cmpl
lret
rolb
dec
fs
dec
ja,pn
sbb
sbb
fldenv
iret
test
jge
mov
rorl
cs
test
pop
push
es
push
aas
divl
rol
addl
mov
fldenv
jno
add
inc
aas
add
push
scas
loop
push
jmp
or
sub
popf
es
in
xchg
pop
inc
or
mov
dec
jo
pop
push
ljmp
sahf
in
or
xlat
mov
jl
dec
inc
shl
in
loop
test
jbe
fisubrs
mov
stos
jb
mov
mov
xchg
jmp
xlat
fists
imul
xchg
inc
jno
push
sub
or
cmp
cmp
jge
clc
ss
jge
les
fwait
xlat
pop
mov
add
cs
or
jl
mov
cmpsb
sub
push
mov
pop
arpl
lds
jl
add
cmp
sahf
inc
mov
and
clc
sbbb
lods
fs
cmpsl
mov
lods
aaa
and
rcrb
mov
stos
mov
roll
mov
sarb
and
repz
in
dec
popf
xor
pop
xorl
call
in
push
jno
and
jmp
aas
add
in
inc
movsl
leave
xchg
sub
dec
in
sbb
push
sbb
xchg
arpl
cmc
mov
cmp
push
cmp
adc
jl
pop
repz
outsl
scas
mov
cwtl
imul
cmp
pop
cmpb
ffreep
out
stos
iret
mov
xchg
xchg
addr16
or
out
cmc
sub
and
rcll
add
mov
push
xchg
mov
lret
sbb
adc
sbb
jns
push
add
fistl
pop
or
mov
or
fisubrl
sbb
add
inc
jo
xchg
cmp
jae
mov
cmpsb
in
mov
fiadds
add
enter
aam
xorb
add
push
dec
cli
jmp
ret
fimuls
inc
adc
daa
mov
mov
fcmovnb
call
pop
test
mov
insb
aam
dec
leave
ljmp
pop
scas
xchg
movsb
jbe
and
ret
and
xchg
notl
fsubl
ret
stc
mov
add
mov
sti
mov
dec
into
mov
push
xchg
lods
push
cmp
aas
or
lock
call
jmp
fimuls
out
frstor
inc
addr16
cmpsb
frstor
popf
xchg
xchg
or
out
sahf
jno
jnp
inc
mov
pop
sub
mov
jo
enter
ret
or
dec
pop
jg
int
push
cmpsl
add
push
mov
stos
pusha
xor
mov
add
mov
stc
leave
lcall
jne
mov
pop
mov
ficomps
cwtl
sbb
sub
jo,pn
jmp
push
pop
lcall
xorl
lcall
outsb
orl
lock
sbb
iret
mov
fldenv
outsl
adc
sub
dec
rcrl
cld
jb
jnp
dec
xchg
mov
cli
ss
push
outsb
mov
sub
pushf
push
jnp
push
mov
lods
mov
scas
test
out
sub
sbb
lods
mov
xlat
fsubrs
aad
mov
insb
add
mov
lds
fdivrl
sbb
and
stc
adc
adc
add
inc
sub
sbb
add
lret
fsts
push
lock
xchg
sar
pushf
push
xor
movsl
cmc
fdivl
dec
sub
seta
hlt
ret
jo
mov
sti
sbb
testl
push
push
push
add
cmp
dec
mov
xchg
cmp
icebp
pop
jnp
mov
mov
mov
iret
pusha
mov
sbb
push
pusha
push
xchg
sbb
ljmp
sahf
add
inc
pop
loop
jae
inc
pop
jbe
popf
push
pop
subl
pusha
xchg
lahf
addr16
out
icebp
inc
sub
mov
jnp
mov
das
out
mov
je
int
jp
cmp
add
bound
inc
mov
mov
mov
dec
dec
push
fwait
pop
xchg
push
les
jmp
cmp
push
in
scas
shrb
lret
fidivrs
mov
loope
shll
mov
adc
xor
cld
dec
pop
jmp
inc
mov
aas
loope
in
xor
lcall
or
push
sbb
xchg
xchg
push
dec
repz
loopne
loope
lds
mov
mov
scas
jb
daa
jmp
pop
push
sub
in
push
hlt
xlat
insl
out
push
popf
sbb
xchg
jmp
ror
or
mov
data16
dec
or
pop
mov
mov
pop
sahf
in
pop
in
je
jl
mov
sbb
popf
leave
dec
mov
lret
cmp
int
adc
fcomps
jns
enter
pop
popf
adcb
pusha
out
cmp
arpl
jne
int
daa
jl
out
fadd
xor
mov
ficoml
ret
sbb
dec
mov
mov
shlb
cmp
jmp
mov
mov
mov
adc
add
xchg
pop
dec
mov
rorl
mov
test
mov
ret
pop
inc
xchg
cmpsl
fdivrl
pop
int
push
xchg
pop
pusha
int3
sub
push
je
inc
mov
inc
mov
fmuls
and
push
pop
cmc
inc
ja
push
or
jno
data16
sbb
insl
mov
ljmp
adc
add
loop
jle
pop
out
jnp
pop
mov
andl
movb
or
mov
xor
ds
cmp
mov
dec
push
xor
flds
sub
out
pushl
sbb
or
mov
mov
jle
pushf
cmpsl
lds
sbb
pusha
sbb
pop
addr16
arpl
imul
or
aaa
lcall
jne
pop
push
and
cmc
xor
clc
das
and
xlat
stc
sarl
arpl
sbb
leave
ret
les
stos
out
aam
adc
shrb
fidivrl
cmp
push
xchg
xchg
iret
mov
and
xor
xor
out
or
mov
sbbb
adc
stc
mov
enter
sub
fildl
mov
xlat
adc
in
inc
mov
dec
mov
sub
or
out
and
pop
test
cmpb
pusha
ds
inc
add
sub
lea
leave
out
fcomps
sbb
mov
loope
lods
jno
xor
jns
into
scas
add
outsb
stos
popf
xor
imulb
and
or
arpl
mov
out
aas
cmc
cmc
fs
xchg
xor
push
xchg
mov
lea
pop
push
xchg
ds
stos
cld
sub
mov
add
pop
jecxz
adc
inc
inc
jae
and
add
mov
pop
ret
xor
std
ficoms
cmp
or
shll
sbbb
fsqrt
push
push
lahf
pop
aam
icebp
mov
ja
adc
xchg
data16
orl
ss
stos
jmp
out
xchg
xchg
push
movb
notl
clc
mov
push
les
out
ja
dec
test
cmp
mov
lret
lret
gs
bound
cltd
push
es
mov
shll
popa
fsubs
mov
push
repz
push
and
mov
les
inc
cld
pusha
jo
stos
lahf
push
sub
dec
inc
mov
or
push
aam
jg
sbb
pop
invd
push
add
sti
daa
imul
out
cmp
gs
popf
ret
mov
ret
sub
mov
les
mov
pop
mov
mov
pop
and
mov
pop
cmp
in
or
cmp
lea
sti
push
add
repz
aam
jne
add
imul
push
das
mov
loopne
les
push
imul
sbb
adc
int
jp
arpl
mov
or
int3
mov
cmpsb
cmpsl
cli
xchg
jb
lret
inc
je
pushf
jle
dec
ret
jns
adc
xor
addr16
sbb
push
bound
rcl
insb
cmp
rcll
stc
sub
in
xchg
fstpt
cwtl
enter
xor
stos
lret
adc
ljmp
aas
or
lea
scas
insl
dec
cs
cltd
imul
pop
inc
mov
add
out
aam
mov
mov
lods
xor
sbb
je
pushf
inc
mov
pop
js
xchg
add
pop
dec
js
add
push
mov
add
jno
lods
mov
decl
nop
mov
cwtl
xor
movsb
sti
stos
dec
sbb
cwtl
xor
adc
inc
add
or
lahf
jmp
stc
pop
test
ja
loopne
pop
pop
paddusw
repnz
and
mov
shrl
call
jg
fidivrs
xchg
and
into
xor
mov
psubd
adc
nop
push
cmp
sbb
xchg
pusha
push
hlt
in
test
aad
movsl
cmpsb
sbb
or
cmp
fstps
cmpsb
add
test
mov
add
pop
jns
jns
loop
jae
jnp
or
mov
inc
dec
mov
pop
cmp
fnop
adc
cmp
int
mov
scas
xchg
call
pop
xchg
into
bound
dec
fildll
mov
fdivrl
xlat
nop
leave
testl
jnp
imul
dec
fildl
lret
in
or
loope
xchg
cmp
movsl
rolb
fisttpll
mov
imul
outsl
scas
pop
imul
and
pop
mov
add
sub
mov
out
xor
xor
xor
adcl
jae
pop
cmp
imul
push
into
inc
scas
test
mov
je
dec
xor
sub
sbb
and
rolb
call
mov
test
rcll
ss
insl
lods
jmp
lods
lahf
dec
aam
cmpsb
test
pop
sbb
pusha
movsl
int
cmp
es
loop
test
rorl
add
repz
stc
inc
add
jnp
add
and
add
lock
xchg
mov
sarb
xorb
adc
gs
cmp
cmp
cmp
adc
mov
imul
aad
icebp
xor
arpl
inc
leave
in
push
ljmp
fwait
int3
or
xlat
ds
imul
dec
mov
leave
xchg
mov
mov
popa
add
lahf
iret
test
testb
sahf
fcoml
mov
iret
inc
mov
movsl
mov
push
mov
fmul
filds
mov
mov
cmpsb
cltd
mov
jbe
fisubl
mov
jge
fucom
daa
lret
lds
les
sub
push
mov
inc
pop
mov
sub
cmp
dec
aad
sbb
cmp
xlat
push
jo
outsl
or
lahf
popa
lcall
push
cmpsl
cmp
in
loopne
sbb
outsb
add
xchg
adc
sub
outsl
lret
dec
prefetcht1
repz
cmp
mov
push
aad
je
mov
sahf
mov
fstpl
cmp
stc
sub
and
in
mov
into
xor
xchg
cmp
fsts
ret
ljmp
das
es
ljmp
and
inc
jmp
jl
sbb
push
inc
jo
clc
mov
cmp
fmull
lock
push
xor
add
das
negb
into
in
scas
mov
pop
adc
pop
ror
dec
ds
and
les
sub
cmp
shlb
dec
js
cltd
aas
mov
ds
dec
pop
mov
lcall
dec
in
loope
fs
inc
fbld
out
xor
dec
and
iret
mov
shll
into
cmpxchg
push
stos
cld
jmp
cld
cmp
sbb
in
sub
lods
lods
jae
sbb
or
and
mov
scas
insl
push
rorb
xchg
dec
adc
mov
sub
lods
sub
cmpsl
mov
loope
add
cmp
loop
cli
lods
dec
scas
pushf
jle
add
clc
mov
adc
test
fsubrl
loope
cli
xchg
test
stos
sti
loop
mov
push
fdivrs
in
int3
sti
pop
mov
shll
cli
aas
fdivr
mov
pop
or
add
dec
rcr
xchg
push
cmpsb
mov
inc
push
sahf
pop
imul
in
cmovnp
arpl
pop
mov
pop
rclb
test
jne
xchg
adc
cwtl
inc
jle
push
push
insl
fucomp
shlb
ret
jge
mov
xchg
cltd
xor
pop
in
mov
aaa
xchg
stc
clc
pop
repnz
inc
rcrl
mov
and
jne
jno
mov
cld
cmp
cmp
add
movsl
dec
push
mov
das
add
fbstp
push
dec
imull
mov
cld
ja
and
imul
push
mov
mov
mov
sbb
inc
push
mov
push
mov
sbb
sub
push
or
lods
push
mov
sub
adcl
roll
mov
ja
xchg
into
fidivs
test
sub
lahf
sbb
shrb
push
insb
dec
pushf
es
and
repz
jecxz
lret
movsl
lods
lcall
or
into
mov
mov
inc
andl
cli
decl
cwtl
mov
push
clc
xchg
test
sbb
mov
call
jp
dec
lahf
xchg
xor
pop
dec
jecxz
jnp
lds
cmp
pop
mov
scas
cmp
aad
data16
cwtl
fsubrs
int3
decl
loop
sub
int3
cs
pop
in
dec
jecxz
fildll
mov
pop
push
mov
xchg
xor
lds
loopne
push
inc
cmc
jbe
add
push
inc
das
cmp
addr16
sbbb
or
or
pop
add
mov
lea
sub
in
inc
insb
sbb
inc
dec
call
imul
movsl
add
mov
clc
sahf
test
sbb
rcl
gs
cmp
ret
sub
cmp
push
push
sbb
push
jp
mov
mov
jge
adc
sbb
out
ret
jg
pop
push
or
or
mov
test
push
bound
roll
ljmp
loope
or
push
sar
push
jg
xor
push
bnd
or
adc
dec
test
aad
enter
mov
mov
adc
outsb
cmp
clc
cmp
fmuls
xor
mov
shlb
stos
lds
sbb
ds
outsl
aad
or
in
push
inc
sbb
popf
ljmp
mov
enter
mov
push
aad
xchg
sarl
cmp
lods
push
jle
jge
and
mov
int3
jp
pop
ljmp
cmc
mov
jmp
mov
sti
in
cltd
nop
cmp
aaa
inc
pusha
xor
insb
mov
out
test
mov
or
jp
push
xor
xchg
sub
mov
push
stc
sbb
lea
imul
mov
xchg
xor
add
loope
inc
ds
push
add
cmpsl
xor
lahf
cmp
sub
cmp
lahf
cltd
inc
and
mov
les
xchg
and
mov
push
dec
mov
xor
iret
push
aam
sub
negl
sarb
sub
xchg
sbb
hlt
iret
mov
dec
data16
or
mov
movsb
repz
jp
mov
pop
lahf
pop
jp
into
aad
cmp
adc
outsb
sbb
into
pop
jb
je
push
or
lahf
xor
mov
or
mov
stos
cmp
outsb
nop
popf
sbb
jmp
add
mov
add
dec
xor
lahf
push
add
daa
mov
mov
iret
in
cmp
repz
addr16
fistpl
pop
fmul
icebp
add
dec
daa
flds
clc
nop
lock
dec
dec
std
xchg
rcrl
mov
push
inc
dec
or
int3
in
inc
insl
mov
adc
arpl
xor
push
ror
sbb
lret
sbb
out
lahf
inc
test
lcall
test
shlb
add
hlt
aas
rcrl
in
jle
repz
xchg
popa
pusha
shll
adc
cmp
pushf
shrb
test
jmp
jp
pop
aas
sbb
cltd
enter
jae
mov
pop
int3
sbb
clc
adc
or
mov
sub
ss
in
push
inc
lock
out
sbb
insb
xor
push
out
repz
dec
loop
jmp
inc
sbb
ror
lret
pusha
test
enter
clc
pop
and
mov
rcrb
leave
pushf
cli
loop
out
jl
daa
add
imul
push
cmpsl
mov
fucom
or
rcll
xchg
test
or
out
lret
cmp
mov
bound
repz
sti
shlb
add
outsl
or
into
fsubrs
and
jg
pop
cwtl
cmp
mov
push
cmp
mov
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
