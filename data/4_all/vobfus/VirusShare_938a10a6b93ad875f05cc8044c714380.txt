sbb
add
outsl
std
stc
icebp
mov
stos
lock
inc
cmpsl
vmread
scas
push
dec
shrb
mov
mov
lahf
push
mov
sbb
xchg
jns
dec
adc
into
xchg
mov
icebp
shlb
pop
lahf
or
es
lock
jnp
or
adc
xor
dec
xor
fcomps
xor
leave
nop
sbb
clc
ss
pusha
repz
test
mov
popa
cwtl
mov
sti
cmp
xchg
add
jp
xchg
mov
dec
add
arpl
mov
lahf
imul
xchg
adc
jecxz
cmpsb
stc
call
outsl
scas
xor
add
sub
loopne
xor
shlb
fcompp
rcll
in
div
or
jne
inc
cmpsb
aas
rorl
sub
cld
daa
imulb
pop
aam
mov
adc
jno
stos
cmp
int3
rclb
adc
shrl
div
ljmp
loope
rcll
sub
nop
dec
mov
sahf
fadds
cld
sub
fbstp
pushf
push
jmp
push
push
push
pop
popf
xor
orl
rcrb
mov
push
xor
add
or
or
xlat
orb
int3
fwait
in
add
scas
sti
pop
xchg
xlat
add
lea
mov
mov
loopne
dec
mov
pop
sub
lcall
inc
sarl
outsb
mov
test
std
cmp
out
test
int3
test
js
lods
mov
ret
sahf
int
hlt
or
in
jp
mov
sbb
mov
push
into
xchg
cwtl
movsb
fldt
push
nop
jns
enter
xchg
scas
out
test
test
push
xor
sbb
pop
insl
loope
xchg
dec
jb
scas
cmp
add
out
pop
jg
shrb
into
mov
scas
loop
jecxz
repnz
add
std
cmp
lret
test
test
addr16
xchg
jb
popf
cltd
mov
in
cmc
jae
shll
icebp
outsb
mov
sub
push
aad
adc
outsl
fisttps
test
dec
xchg
test
add
jle
jae
sub
pop
popl
in
outsl
add
pop
outsb
jns
dec
push
ret
stos
cwtl
sti
push
xor
pop
or
xchg
cmc
sbb
dec
idiv
mov
fwait
cltd
shlb
insb
mov
mov
je
dec
jo
push
popa
js
pushf
outsl
in
adc
push
xchg
outsb
dec
push
add
std
mov
inc
popf
dec
push
lods
mov
inc
bnd
jb
xchg
sbbl
mov
sub
fists
jge
or
out
lret
inc
adcl
mov
cmp
mov
mov
loopw
lea
mov
adcl
pop
lods
sbb
ljmp
add
mov
sub
ret
ja
sbb
shll
inc
ja
adc
in
sub
pop
in
xor
repnz
in
pop
xchg
sbb
out
fbld
sbb
movsb
push
out
mov
jo
cmp
mov
dec
sub
sti
ficoms
mov
push
jo
sti
xor
add
add
insl
sbb
in
outsl
adc
jl
cwtl
or
movsl
push
aam
idivb
or
cli
das
inc
mov
mov
xor
js
inc
aad
sub
push
daa
ror
mov
push
jo
xlat
jge
fdivr
jne,pn
fucomp
inc
add
cmpsl
jo
and
adc
out
mov
insl
mov
andl
js
lahf
adc
xchg
mov
lahf
xchg
add
int3
adc
push
iret
jecxz
and
jg
or
clc
pop
pop
mov
std
int3
test
pop
push
js
notb
or
fisubrs
fs
pop
hlt
or
lcall
fdivrl
cmp
sub
jae
pushf
arpl
fidivrs
repnz
jae
fisttpl
leave
leave
jb
daa
jg
clc
and
insb
or
pop
push
mov
aaa
jo
repz
mov
aad
jl
sbb
push
and
push
sub
repnz
jl
bound
add
dec
and
and
push
mov
and
xor
lcall
xor
sbb
mov
cwtl
sub
push
je
push
jae
int
cmpsl
leave
insb
ljmp
xchg
adc
aaa
pop
aaa
jl
mov
mov
adc
popa
mov
mov
jnp
nop
sti
out
arpl
mov
mov
xor
xor
pop
inc
add
xchg
scas
shlb
ljmp
loopne
aad
xchg
fcompl
ds
popl
mov
lods
ret
mov
mov
sub
iret
push
adc
push
xchg
jns
mov
xor
xor
and
stos
dec
subb
movsb
and
pop
sub
hlt
lahf
cmc
and
and
pop
add
mov
cmc
pop
enter
clc
ds
sbb
sub
test
mov
data16
adc
pushw
mov
ds
mov
jae
out
add
jmp
dec
dec
data16
inc
sahf
call
xor
push
add
add
testb
adc
aaa
lea
mov
iret
cltd
ficoml
cmpsl
leave
ds
daa
pop
adc
xor
sbb
and
push
mov
fisttpl
push
in
sub
jne
rcll
and
popf
cmp
scas
arpl
push
sbb
sbb
cmpsb
jo
in
cmp
mov
and
lea
fs
pop
add
sub
aas
pop
inc
dec
loope
adc
mov
push
jb
jnp
mov
adc
cmpsl
mov
and
fadd
cmpsb
rcl
xlat
or
movsl
imul
and
ret
pop
mov
adc
out
jns
js
or
mov
inc
popa
loop
insb
add
adc
sahf
sbb
popf
mov
adc
adc
mov
sahf
subb
cld
or
pop
clc
mov
mov
jnp
or
inc
and
fnsave
lret
scas
adc
pop
pop
mov
xor
in
xor
add
stc
lods
mov
mov
ss
daa
mov
or
jge
aaa
scas
rorl
inc
mov
fisttps
push
dec
inc
in
cmp
jae
add
push
mov
or
rclb
int
in
push
rorb
bound
je
int
mov
pop
in
notb
mov
psubq
dec
mov
leave
cld
mov
push
and
gs
mov
sarl
lds
imul
push
cmp
add
push
aas
and
xchg
push
fidivl
sub
adc
jnp
stos
inc
mov
mov
pop
cmp
push
jae
js
jns
or
pop
add
in
dec
gs
idivb
lret
fiaddl
lret
test
mov
sbbb
fnsave
mov
test
and
inc
push
dec
jnp
ret
stos
mov
push
dec
sbb
adc
fdivs
jg
inc
mov
jmp
divl
xchg
sahf
dec
fistpl
jno
pushf
call
cmc
mov
bound
xor
and
inc
pop
mov
daa
xchg
fbld
mov
dec
cld
outsl
aad
cmc
mov
movsl
jo
sub
leave
das
push
inc
mov
inc
and
sub
ret
mov
rcrb
nop
mov
mov
mov
dec
enter
test
ret
cwtl
gs
mov
ja
std
out
scas
nop
je
dec
outsl
xor
pop
daa
mov
pop
push
sti
cmc
lahf
push
mov
lahf
cmpsb
xchg
les
ja
mov
inc
push
ds
imul
clc
pop
cwtl
cmpsb
ret
pop
gs
pop
pop
push
add
sahf
aas
pop
cmp
ret
loop
inc
aaa
cmp
pop
outsb
sbb
jle
jl
mov
cmp
sub
outsb
fwait
adc
jne
push
mov
clc
rorl
mov
dec
shll
pop
add
mov
or
xor
out
cld
out
xchg
ja
cmp
loope
sbb
jae
mov
inc
imul
cmpsb
cwtl
jns
and
push
sbb
clc
inc
js
cli
and
fisubrl
jno
ja
lcall
shrb
jle
lret
je
cmp
and
outsl
inc
mov
pop
and
iret
pushf
add
ffree
sub
cmpsb
sbb
mov
adc
shrl
and
mov
call
push
mov
mov
lret
fwait
push
sub
mov
stos
cmp
fs
sbb
lret
and
bound
movsl
adc
ja
outsl
jb
out
add
mov
js
mov
push
insb
sbb
out
js
cmc
xchg
cmp
jecxz,pt
dec
in
rolb
stc
jmp
out
aam
pop
or
cmp
lahf
cmpsl
test
rorb
add
lcall
and
call
leave
and
inc
mov
loope
inc
add
dec
shll
mov
jg
pop
push
ds
stc
xorl
out
mov
push
jge
xchg
jb
inc
out
inc
mov
ret
stc
int
sbb
mov
sub
xor
clc
outsl
fimull
popf
aaa
push
xchg
outsl
fdivp
inc
sbb
mov
adcl
push
dec
sub
sahf
mov
idivl
pop
xchg
scas
ljmp
cmp
dec
add
pop
fbld
dec
mov
xor
aas
and
sahf
pop
clc
lods
push
pop
pop
lahf
pop
adc
dec
outsl
jb
mov
lods
rolb
sub
mov
jle
lret
int3
fwait
push
fwait
adc
pop
adc
sbb
lods
xchg
rolb
mov
pop
sub
ja
jge
stos
sbb
or
pop
or
xor
jae
inc
lahf
insl
and
mov
outsl
adc
adc
std
and
push
rcrb
ret
dec
rcrl
pop
mov
jns
iret
lods
xchg
lock
lahf
notb
inc
popa
pusha
stos
ljmp
fidivrl
xor
xor
add
push
jno
fcmovbe
out
inc
lahf
push
ret
and
lahf
sbb
and
sub
cmc
pop
sbb
jp
jb
stos
aam
repnz
sub
sub
data16
dec
movsb
insb
lea
xchg
icebp
adc
dec
xlat
mull
out
jne
adc
ja
adc
sub
xor
subl
pop
enter
loop
adc
int3
adc
jae
cld
pop
jnp,pt
mov
dec
faddl
sub
imul
addb
adcl
std
sub
xor
insl
sbb
ss
cwtl
gs
sub
mov
mov
jmp
add
cmc
movsb
xor
sub
sub
inc
jnp
outsl
push
pop
add
ja
cs
and
mov
jnp
daa
sub
insb
inc
and
sub
mov
stos
push
pop
in
out
fisubrs
lods
pop
nop
outsb
fs
mov
cmp
xor
inc
ja
ljmp
mov
sbb
cmp
push
repz
or
cmp
rolb
mov
or
add
mov
jg
dec
jns
fisttps
inc
push
xchg
inc
ss
mov
mov
ljmp
popf
shll
sbb
add
cli
rorb
jns
stos
je
sbb
test
push
cmpsl
xlat
or
stc
mov
mov
movsb
push
out
pop
ja
push
or
loope
out
stc
lcall
push
frstor
dec
push
mov
movsl
ds
or
push
std
out
push
pop
xchg
mov
rol
out
imul
sub
add
mov
sbb
mov
or
lods
arpl
mov
and
outsb
dec
imul
mov
jg
popf
mov
mov
adc
insl
adc
or
ret
mov
daa
js
out
lods
sahf
cli
movsb
and
ds
add
xchg
ja
jne
and
enter
add
adc
loopne
push
xor
xchg
lret
dec
mov
nop
ror
je
mov
cmp
lock
pushf
test
xorl
pushf
sbb
xchg
xchg
ds
push
ret
add
imul
inc
mov
xor
sbb
bound
loope
and
dec
es
adc
fimull
dec
lret
adc
jns
stos
mov
cmp
dec
rorl
rcrb
add
rcr
inc
dec
insb
xor
xchg
sbb
sbb
aas
aad
leave
jle
js
daa
imul
addr16
xor
addb
dec
mov
stc
shr
jg
or
dec
les
lea
mov
xchg
ret
add
movsb
andb
push
jo
xor
or
scas
aas
scas
imul
ss
aaa
hlt
in
cmp
idivb
cmp
popf
push
mov
cld
int
test
jmp
dec
pop
inc
dec
int
dec
jmp
movsl
jecxz
fistpl
lcall
inc
add
in
mov
sbb
pop
pop
es
or
jno
insl
xlat
jb
push
cmp
pop
cmp
mov
mov
stos
outsl
addr16
push
xchg
mov
jl
cltd
inc
insb
out
pop
jecxz
or
in
movsb
xor
adc
das
add
movsl
mov
adc
xor
stos
sub
ror
cwtl
fnsave
push
xchg
lods
sbb
inc
aas
adc
das
lds
push
test
sbb
fiaddl
popl
sbb
jg
sub
mov
mov
sbb
imul
les
cmp
sub
add
stos
push
stos
fs
sbb
inc
xorps
jno
sub
jmp
and
cmp
sub
rcr
lahf
mov
xlat
pop
push
jns
outsb
jmp
jge
jb
shrl
mov
add
add
fwait
out
in
adc
lret
xlat
mov
ljmp
adc
pop
mov
xchg
xor
jmp
cmp
pop
push
das
inc
clc
ret
lret
in
push
scas
in
pop
ss
test
sub
nop
int
out
lret
push
popl
popa
and
sbb
lock
jnp
mov
out
push
outsb
das
jp
cmp
jecxz
jne
mov
inc
dec
jle
fmull
adc
push
xchg
lods
mov
jle
das
mov
mov
loopne
xorl
and
ss
mov
sahf
or
or
mov
sbbl
negb
out
inc
xchg
adc
or
push
mov
xlat
sub
xor
mov
xor
dec
in
mov
sub
push
cltd
push
rcr
inc
mov
repnz
ret
fsubrl
jb
out
or
sub
daa
das
mov
push
stos
push
addr16
push
mov
pop
dec
sarl
and
stc
dec
mov
popa
aad
stc
bound
jecxz
pop
test
stc
lcall
mov
xor
pop
adc
xor
rorl
mov
ror
mov
jge,pt
js
ret
jbe
dec
and
fs
mov
sbb
cmp
enter
add
xor
jo
fidivrs
leave
pop
pop
sub
jno
movsl
push
mov
cmp
iret
mov
mov
mov
lods
jno
lret
es
pop
nop
mov
imul
inc
jb
sbb
icebp
aad
cwtl
ljmp
dec
mov
shl
orb
cmp
mov
mov
stos
imul
ja
pop
gs
sbb
aaa
cmp
cmp
dec
adc
sahf
shr
stc
pushf
pop
rorl
test
insb
dec
fs
fcomps
add
test
mov
push
notb
stc
add
in
pop
xchg
xchg
sub
std
mov
push
aaa
repz
cmpsb
xor
testl
cmc
stc
enter
xor
xchg
cmp
rolb
sbb
dec
jle
pop
jno
aaa
out
jnp
inc
sbb
cmp
stc
mov
mov
int
inc
mov
and
jge
loope
es
pop
or
and
insl
push
jge
fistpll
dec
loopne
xor
cs
insb
out
adc
cmpsl
xchg
popa
xorb
addr16
jnp
jne
adc
inc
lcall
pop
lret
cmp
sbb
add
and
inc
ljmp
shll
les
push
mov
jge
xor
ret
repz
iret
mov
andb
dec
lds
mulb
fldt
mov
sub
xor
movsl
jb
jl,pt
push
mov
clc
repz
xchg
xlat
clc
push
jge
lret
ljmp
inc
and
int
cmpsl
cmp
mov
movsl
push
cmp
aam
jle
and
test
divl
xchg
mov
sub
cwtl
lahf
add
sub
flds
loope
scas
sbb
add
fbld
jns
mov
xor
or
cmp
xchg
xchg
fcmovb
fdivrl
and
pop
push
loop
aam
dec
add
push
pop
aas
cmpsb
fsubrl
daa
out
lret
and
fnstenv
cli
aaa
mov
mov
fiaddl
fs
pop
push
mov
push
pop
insb
jnp
and
stos
push
shrb
and
test
mov
nop
and
jb
inc
xor
adc
sbb
out
push
lds
jb
jo
mov
sub
mov
xchg
pop
xor
dec
inc
dec
push
imul
aad
push
int3
mov
out
int
jne
in
fwait
mov
pop
pushl
lahf
arpl
stos
lea
arpl
mov
cwtl
jns
cld
ss
pusha
inc
lret
inc
xor
fidivs
js
add
cwtl
pop
cmp
jmp
cld
mov
xchg
xchg
stc
cmp
shll
shl
rol
dec
popf
pushf
pop
cltd
mov
pushl
push
cmp
inc
sub
scas
repnz
push
mov
sbb
mov
xchg
pop
xchg
test
repnz
pop
mov
pop
dec
movsb
addl
or
lahf
sahf
cwtl
cmp
arpl
pop
gs
cmpsb
cmp
test
mov
mov
push
pushl
popa
sbb
cmp
shr
hlt
int3
adc
xor
jecxz
jle
add
sub
push
inc
iret
es
add
adc
imul
xor
and
xor
push
rolb
sbb
push
jb
lahf
xorl
loop
imul
lret
aas
mov
mov
add
fcoml
mov
mov
jle
add
xchg
aad
push
es
jg
movsb
sub
aaa
fiadds
xchg
mov
push
daa
ljmp
sbb
pusha
cmp
iret
out
fcomps
add
das
xor
aad
jbe
rclb
imul
cmp
push
shrl
inc
mov
xchg
cmpsb
lret
sbb
out
pop
inc
dec
jle
sbb
ret
fcmovnu
shrb
pushf
mov
out
ret
lods
loopne
daa
rclb
xchg
adc
popa
fdivr
jp
test
mov
fs
loope
aam
mov
faddl
sub
unpcklps
add
jmp
jmp
jmp
bnd
xchg
loop
les
popa
sub
out
inc
add
pop
xor
mov
cmp
dec
into
mov
dec
mov
adcb
xor
in
cmp
popa
sbb
and
test
pop
sbb
xchg
inc
mov
sarl
icebp
push
popa
call
shr
in
dec
scas
mov
push
adc
subl
sub
or
dec
jmp
cmp
mov
xchg
pushf
inc
roll
add
and
stos
out
xor
clc
xchg
scas
cmc
push
sbb
in
adc
cs
jl
pop
mov
fmul
mov
mov
inc
lock
jge
cmp
ja
mov
aam
int3
sti
inc
sbb
mov
pop
into
rorb
dec
mov
mov
jp
xor
lretw
ljmp
adc
daa
fsubrs
pop
sub
sub
or
mov
fbld
push
sti
fmul
or
adc
in
stos
lret
ja
xchg
mov
xchg
cs
pop
push
mov
sahf
jg
push
clc
mov
add
push
int3
mov
hlt
out
stc
orl
push
repnz
adc
popa
mov
dec
das
lahf
pop
mov
pop
idivb
sub
das
pop
lods
popf
pop
orb
iret
aas
adc
and
call
stos
adcb
ret
aam
iret
mov
inc
cli
push
pop
sub
xlat
dec
or
imul
arpl
mov
mov
cltd
lods
jg
nop
and
mov
cmp
mov
leave
cmpsl
add
inc
insb
mov
les
or
inc
dec
nop
vmovdqa
sub
ret
xor
add
dec
sbb
dec
ret
xor
lods
test
insl
imul
sub
dec
pop
add
mov
inc
cmp
adcl
cmp
pop
fwait
or
das
sarb
inc
adc
sarb
sub
cli
xchg
movsb
test
loope
mov
in
pusha
shlb
shrb
jge
les
cld
dec
arpl
popf
testb
movsl
lock
push
xor
sbb
cmpsb
jge
and
adcl
rol
inc
adc
push
inc
cmp
fstpl
adc
cmp
xchg
xorl
push
xchg
mov
jmp
les
dec
popf
ljmp
aad
pop
ljmp
jno
push
mov
or
push
or
shlb
xor
je
roll
dec
insb
mov
addr16
iret
inc
lods
push
xchg
pop
fstl
xor
adc
or
fnsave
and
xchg
test
out
cmp
outsl
mov
pop
inc
jle
mov
cmp
mov
in
and
xchg
jmp
scas
inc
jp
cmp
pop
inc
push
mov
insl
jbe
fchs
notl
lret
or
and
das
pop
mov
mov
or
mov
push
test
jg
dec
sub
adc
lcall
aad
jecxz
dec
cmp
je
je
das
jmp
enter
dec
or
mov
push
shlb
push
repnz
or
daa
push
jae
push
push
jo
mov
mov
fistps
jg
inc
jno
push
stos
sbb
xor
daa
xchg
cli
mov
shufps
xchg
or
push
enter
inc
scas
aad
dec
mov
inc
or
push
sub
sti
push
je
rclb
xor
ss
dec
in
dec
lea
mov
into
mov
mov
dec
pop
mov
test
and
xor
fsubrl
xchg
cmp
fildll
mov
push
into
js
xor
and
cwtl
jae
pop
insl
out
pop
jmp
pushf
sub
lahf
push
data16
int3
fwait
cli
lret
adc
repnz
jns
mov
addr16
push
cmp
cld
dec
lods
loop
xchg
push
cwtl
repnz
loope
scas
push
lret
add
mov
xchg
fisttpll
xchg
pop
mov
dec
jg
out
mov
push
adcl
cmp
ja
mov
imul
push
flds
lds
repnz
or
cltd
fstpl
sub
mov
daa
mov
pop
cmp
push
aaa
push
fcoms
imul
insl
jle
pop
mov
mov
push
frstor
mov
pop
movsl
sub
or
inc
je
pop
pop
pop
fxch
cmp
rcl
test
push
fsubs
ret
push
lahf
xor
lods
js
add
fcomps
fwait
xchg
add
sahf
clc
aam
or
into
or
push
xor
mov
xor
xchg
lods
mov
xor
inc
mov
inc
push
adc
ret
rorb
lds
add
outsb
imul
imul
fildll
inc
inc
or
mov
pop
add
es
xchg
dec
or
pop
xchg
and
icebp
hlt
js
pop
pop
arpl
aam
shl
jo
clc
or
imul
ret
out
dec
sti
cmp
into
fimull
cmp
sub
push
cmp
push
sbb
mov
push
pop
loope
into
daa
sarb
push
jbe
in
jb
stos
lcall
xchg
call
das
and
imul
cmp
out
pop
mov
aam
jle
pop
mov
and
mov
and
inc
jle
mov
stc
jbe
rcll
ss
push
xchg
xchg
sub
hlt
ja
mov
mov
pop
adc
sbbb
xor
push
orb
test
je
dec
xchg
into
cmp
fdivr
loope
jbe
push
inc
add
outsl
add
jne
iret
popf
aas
adcb
lock
movsb
cpuid
popa
lret
mov
inc
cmp
pusha
imul
shrb
mov
and
shrb
in
sbb
popf
or
mov
lods
mov
mov
jp
cmpb
subl
rcl
push
lret
test
sub
jnp
adc
or
sub
jp
xchg
mov
push
cmp
mov
ror
imulb
shll
cmp
out
imulb
cmp
sub
pusha
filds
ss
or
xchg
test
hlt
jg
arpl
das
or
dec
imul
iret
arpl
jno
push
mov
sarb
shl
mov
mov
bswap
mov
or
push
out
pop
mov
push
das
lods
mov
bound
mov
iret
add
stos
push
fsubl
and
daa
mov
leave
xor
adc
daa
jno
mov
add
inc
push
sbb
cs
add
imul
dec
lock
addl
bound
sub
mov
cli
xorb
idivl
and
sbb
add
xchg
sub
out
mov
mov
and
jb
jmp
xchg
daa
int3
out
bound
popa
and
leave
aad
out
dec
int
jns
and
add
dec
stos
shr
jb
xchg
sti
dec
adc
ficoml
sbb
bound
pop
xor
lods
in
fdivr
std
lcall
or
mov
test
hlt
mov
and
jecxz
adc
popa
inc
out
push
loopne
pop
sbb
push
push
push
pop
pop
popf
inc
clc
lods
mov
rcrb
dec
clc
push
mov
push
jno
mull
iret
repz
enter
pop
iret
adc
ljmp
sbb
sub
ja
loop
sarl
ds
pop
shll
bound
adc
mov
int
pop
enter
xor
mov
or
rorl
or
movsl
subl
and
add
inc
mov
lea
inc
and
pop
inc
test
adc
mov
out
jmp
idiv
aas
out
mov
push
je
hlt
scas
stos
push
rcl
pop
push
mov
and
jge
push
rclb
cld
packuswb
cmp
adc
jae
jne
sbb
xchg
insl
mov
fdivrs
pop
inc
mov
outsl
outsl
push
jp
shr
xor
test
sub
in
iret
cmpsl
dec
repnz
pop
add
in
dec
or
push
hlt
xor
clc
mov
ss
jno
lds
stos
popf
pop
add
in
ds
lods
cmpsb
rcrl
mov
push
mov
inc
imul
inc
idivl
shlb
sbb
sti
push
xor
xchg
fiaddl
rcrb
inc
in
pop
out
lods
cld
imul
mov
shrl
inc
enter
das
repnz
hlt
mov
ja
ja
or
push
inc
push
xorl
sub
aaa
jbe
dec
divb
jmp
push
push
pop
jge
call
in
sub
add
and
out
jns
add
jle
mov
mov
andl
stos
push
sub
or
fidivrl
adc
cld
out
stc
in
sub
pop
add
jae
fiaddl
test
mov
mov
into
mov
fiadds
sub
leave
movsb
sbbl
mov
jno
fwait
shrb
cltd
jmp
ret
mov
in
dec
mov
into
ret
and
mov
je
inc
idiv
movsl
inc
je
add
test
stc
jnp
in
sub
jns
js
xchg
orl
inc
pusha
pop
dec
push
fs
scas
xchg
pop
stc
sbb
add
notl
in
stos
xor
jmp
icebp
bswap
addb
pop
mov
and
js
rorl
je
rcll
xor
stc
or
pop
pop
push
int3
ss
push
pop
out
or
xor
pop
imul
xor
dec
and
mov
je
adcl
js
into
jno
std
jecxz
mov
and
fsubrs
mov
jl
dec
add
stos
push
push
test
loop
outsb
or
dec
ljmp
inc
adc
push
stos
fidivrl
mov
push
add
callw
mov
ret
popa
jp
iret
mov
cmp
push
je
xor
mov
pop
pushf
push
divl
stos
xor
sub
int
stos
jmp
adc
loopne
dec
jo
shrd
ljmp
pop
les
cs
aad
sbb
into
mov
push
push
pop
mov
cmpsb
xchg
jnp
stos
stos
iret
addr16
inc
ret
cltd
mov
add
jge
lods
xchg
jge
sub
cmp
xor
mov
stc
inc
sub
orl
push
inc
pusha
jecxz
fisttps
jecxz
out
bound
adc
xor
sbb
inc
cld
xchg
sub
mov
pop
sub
cmp
push
fs
dec
cmp
int3
pop
and
stos
adc
je
mov
ss
addl
ss
mov
inc
enter
loope
in
jle
popa
mov
sbb
sbb
xchg
cmp
pop
pop
mov
dec
push
scas
mov
jp
lahf
call
scas
dec
inc
cmp
inc
mov
jle
lods
adc
ss
jge
inc
iret
and
mov
pop
iret
pavgw
call
das
test
fstl
xor
lahf
xchg
out
dec
dec
rcr
push
js
sbb
jge
stos
xchg
sbb
mov
fdivrl
or
push
aam
mov
xor
cs
test
and
push
sbb
mov
js
push
xor
lcall
cwtl
xor
dec
cmpsb
fldenv
push
inc
mov
dec
cltd
jae
sbb
clc
lods
out
aaa
lahf
lcall
enter
mov
int3
das
data16
int
cmpsb
push
cmpsb
scas
ss
in
fwait
into
aaa
dec
xchg
fiaddl
sub
leave
jno
nop
popa
test
ds
movsb
xchg
mov
mov
loopne
add
lcall
add
pushl
xor
pusha
inc
mov
cmc
sub
negb
push
scas
sub
mov
pop
movb
je
aad
pop
jmp
inc
cmp
into
jne
ss
mov
add
repnz
cmp
mov
insl
xor
fnstsw
subl
stc
xor
imul
ret
fstpl
push
mov
vmovups
lcall
adc
pop
inc
std
xor
imul
xorb
cmp
ret
and
fwait
mov
mov
xor
mov
jg
inc
push
xchg
mov
jb
mov
call
mov
dec
jecxz
bound
inc
cmp
aas
fisubs
lods
lods
adc
mov
xor
inc
dec
sub
adc
xor
std
adc
push
mul
cmpsl
mov
jmp
stos
insb
xchg
jne
aad
ds
sbb
cmp
sarl
inc
mov
lcall
test
fldl
mov
pop
pop
fisttps
cmc
push
sarl
sbb
inc
add
lds
sbbb
fildll
xchg
outsl
bound
xor
jle
fcmovu
test
enter
sti
pushf
or
mov
push
scas
xchg
mov
test
in
push
push
dec
push
push
call
lds
rorb
popa
sub
std
push
or
or
jbe
dec
fwait
lea
out
cmp
lret
inc
cmpsb
popa
push
out
addr16
lods
mov
and
jne
xchg
dec
or
push
dec
mov
lock
pusha
sub
cmp
fs
xchg
cwtl
stos
leave
ds
cmp
xlat
test
mov
icebp
and
pop
cmpsb
movsb
mov
in
push
sbbl
fwait
jae
lcall
imulb
sub
int3
stos
fcomp
mov
in
fnstcw
jbe
fsubs
sti
loop
pop
mov
lret
pop
cmp
andb
pushf
mov
bound
mov
daa
daa
lock
pop
outsl
aam
sub
into
add
push
addl
xor
mov
sub
inc
nop
adc
and
add
pop
adc
jne
insl
mov
in
sar
cmp
xlat
loop
fsubp
cwtl
ljmp
jp
dec
add
add
xlat
xchg
adc
test
push
push
or
mov
sarl
rorb
xchg
aaa
shlb
xor
cld
leave
adc
mov
dec
pusha
call
pop
mov
loope
int3
and
xlat
incl
dec
loopne
or
movsl
mov
xchg
cwtl
mov
mov
mov
iret
repz
mov
jae
aad
inc
and
sbb
xchg
in
mov
iret
lret
sbb
sarl
inc
lcall
sbb
fdivr
adc
movsb
mov
push
insl
lcall
jp
lcall
push
xchg
lcall
enter
xchg
rcll
mov
or
push
or
test
sbb
mov
sti
adc
fistpll
dec
sahf
mov
jbe
jae
mov
mov
mov
cltd
xchg
pop
fs
cmp
push
pushf
jp
pop
pop
dec
add
jnp
pop
lock
push
mov
fistps
dec
ljmp
in
loope
mov
repz
or
into
mov
jmp
aas
lahf
divl
or
sti
jb
into
mov
scas
sti
lret
jo
test
std
dec
js
push
aam
mov
cld
in
or
popa
ljmp
xchg
and
call
es
xor
push
cmp
sub
jae
scas
sub
aas
sti
daa
jge
add
in
jae
sbb
cmp
popf
int3
fwait
and
std
adc
jge
sub
and
adc
fiadds
lock
jno
lds
push
stc
adc
and
or
daa
jge
jge
inc
mov
push
mov
fld
sub
push
imull
and
orb
add
mov
cmpsl
jb
popa
imulb
popf
push
and
push
iret
adc
pop
push
testb
mov
addr16
enter
sbb
pop
push
add
cltd
mov
dec
xor
sbb
mov
movsb
xchg
outsl
cmpsl
sbb
jmp
sub
ss
sbb
test
fimull
movsl
sub
push
out
cwtl
adc
dec
push
xchg
roll
sbb
ret
insb
dec
and
int
and
fwait
cmp
adc
inc
and
ret
sysexit
repnz
push
and
mov
daa
das
sub
mov
inc
add
mov
insl
sarb
pop
dec
rcr
and
leave
jno
push
je
nop
scas
aam
lea
imul
repz
cmp
jl
push
xor
and
sarl
xchg
ds
inc
sub
or
mov
pop
setb
add
shll
cmpsb
out
daa
test
jg
in
jp
loopne
pop
mov
push
idivb
mov
js
popf
sbb
imul
cmp
xchg
test
outsb
rorl
lds
lret
mov
cmc
and
lahf
pop
xor
jmp
sub
and
push
out
movsb
lret
out
add
daa
cmc
outsb
xchg
imul
cmp
add
sbb
fcmovnb
jne
push
mov
jl
mov
cmp
jae
decl
mov
adc
jo
jg
jbe
rorb
ret
iret
movsl
loope
iret
inc
mov
mov
jl
sub
xchg
jno
ret
daa
push
lock
sbb
mov
push
mov
mov
mov
inc
mov
pop
adcb
clc
insl
add
or
orb
or
add
ljmp
dec
xchg
ljmp
lods
aas
xor
insb
adc
lds
xchg
cmp
mov
and
mov
clc
push
data16
push
push
inc
addr16
repnz
jnp
pop
cmpsb
push
add
out
pop
outsb
out
in
or
mov
push
rolb
xchg
jl
dec
mov
movsb
xchg
and
daa
inc
sti
push
jl
out
sub
cli
testl
fisubrl
sbb
mov
jmp
sub
out
mov
adc
mov
jg
lcall
in
out
mov
lods
cmpl
xchg
add
mov
xor
fxch
shll
rcll
dec
sbb
jle
fisubl
stc
pop
orb
cld
cmp
ds
dec
xor
xchg
xor
lahf
push
addb
decl
cmp
mov
daa
fiaddl
push
dec
mov
repnz
lcall
jb
daa
cld
or
add
nop
test
in
mov
lcall
jle
or
mov
lods
clc
push
mov
push
adc
xchg
mov
push
jle
pusha
mov
mov
and
add
jne
jp
xor
push
shl
sbb
fildll
int
jecxz
nop
enter
mov
popl
shufps
cmp
fistpl
mov
shrl
mov
xor
dec
mov
push
sub
xor
cmp
pop
jno
movsb
push
movsl
dec
and
pop
pop
imul
push
out
bound
lret
test
nop
mov
fsts
rcrl
aaa
cmp
xchg
test
or
push
sarb
mov
xchg
outsb
mov
sub
add
dec
jg
cmp
xchg
repnz
inc
and
xor
or
enter
mov
xchg
cltd
jl
loopne
pop
mov
pop
lahf
ds
aad
shlb
sub
ret
sub
sub
adc
adc
js
fcmovne
scas
jmp
aas
pop
jle
dec
dec
xchg
dec
je
or
or
loope
jns
mov
call
popf
add
test
jg
scas
imul
inc
loopne
jle
mov
mov
pop
stc
lea
cld
push
pop
enter
dec
mov
sbb
stos
aam
xchg
xchg
aaa
pop
enter
imul
outsl
inc
sub
sti
int
or
repnz
dec
jnp
mov
mov
cvtps2pi
sarl
add
push
sub
sti
push
daa
mov
xorb
xlat
jg
jl
inc
cmp
cltd
and
movsb
cmp
fwait
xchg
jp
push
into
ret
movsl
jg
xor
sub
sub
lds
jle
add
clc
icebp
ja
shl
shl
scas
cmp
stc
scas
add
ljmp
repnz
lcall
inc
dec
das
pop
mov
repz
mov
push
mul
and
fadds
jmp
push
push
xor
es
mov
sub
imul
push
mov
in
xor
fistpll
sbb
mov
out
xchg
xchg
in
enter
rcll
dec
lret
pop
xchg
jnp
push
xor
or
inc
sbbl
inc
add
and
dec
jge
pop
inc
out
sub
sahf
sub
js
icebp
roll
dec
xchg
inc
ffree
cmp
or
sahf
jmp
rcll
add
cmp
inc
jmp
adc
fidivrs
xor
xacquire
adcl
pop
loop
stc
pop
mov
and
insl
leave
sub
fst
jp
jmp
xchg
pop
pop
mov
xchg
or
pop
dec
es
ds
sub
imul
cmp
adc
or
push
inc
test
pop
pop
int
cmpsb
sub
push
lods
mov
dec
mov
pop
loopne
scas
je
inc
mull
xor
shll
es
or
dec
pop
jp
push
sbb
jg
fimuls
fdivs
push
push
adc
mov
mov
cmp
pop
pop
lcall
lcall
jp
hlt
xor
pop
je
sub
sbbl
xchg
in
fcomps
fwait
imulb
aad
inc
inc
mulb
fists
in
inc
jns
fcmove
rorb
fildll
xchg
mov
dec
in
lock
ret
or
xor
adc
lahf
int3
iret
repz
jmp
call
enter
scas
bound
dec
aad
inc
xorb
out
mov
push
jo
test
fdivrl
stos
dec
rclb
cmpb
or
rcr
shlb
cmpl
xchg
adc
xor
cmp
movsl
mov
xor
xchg
mull
pop
push
fs
ret
inc
sbb
adc
test
inc
xor
mov
leave
mov
sub
mov
pop
enter
pop
stos
stos
xchg
mov
jae
cli
xchg
inc
aaa
js
xlat
xchg
sub
popa
hlt
pushf
fisubrs
sub
imul
xchg
loope
mov
rcll
mov
call
ja
pusha
and
jmp
jl
scas
repnz
push
das
push
les
stos
mov
nop
mov
lds
inc
into
fsts
movsb
xor
leave
add
js
mov
pop
lret
mov
out
add
icebp
sbb
sbb
aaa
dec
int
movsb
mov
add
call
mov
push
pop
fidivrs
xor
mul
pusha
lea
stos
xchg
inc
sbb
cs
adc
add
movsl
push
scas
push
dec
add
jmp
movsb
push
lods
lods
jmp
into
lds
pop
jge
add
cmp
es
fiadds
in
xor
cld
test
xor
or
cmpsb
inc
push
jno
pop
call
lcall
rcrb
xchg
sbb
xchg
fldl
mov
repnz
cmpb
mov
or
les
pop
xor
mov
xchg
xor
lods
cmp
add
loope
sarb
clc
push
out
mov
push
fwait
outsb
and
add
adc
and
xchg
mov
popa
inc
mov
cmp
in
or
das
adc
arpl
push
jl
lret
notb
xchg
cli
inc
std
mov
xor
call
sub
outsl
stos
mov
pextrw
dec
mov
sbb
dec
cmpsb
repz
push
jae
inc
outsb
adc
xor
inc
sub
push
jl
push
fs
pop
lret
jecxz
loopne
add
lds
int3
add
jne
enter
and
pop
mov
pop
cli
leave
ret
xchg
mov
push
ds
cmp
lds
pop
sub
insl
stc
inc
and
sub
add
mov
dec
movsl
add
nop
mov
outsl
push
loopne
adc
repz
mov
rcrb
mov
lds
aas
dec
add
clc
faddl
test
mov
add
rep
push
imul
inc
mov
sub
pop
mov
test
bound
cmc
add
pop
mov
mov
add
push
xor
xchg
xchg
xchg
inc
movsb
and
stos
arpl
mov
divb
mov
lahf
mov
mov
push
add
data16
jl
xchg
sub
pop
push
ficompl
and
out
dec
xchg
push
sbb
push
mov
negb
fists
add
ret
test
and
push
stos
sub
and
mov
jnp
cltd
shl
lret
push
or
hlt
testb
pop
outsl
and
mov
inc
fdivrp
dec
ss
add
dec
in
mov
ret
enterw
aas
mov
cltd
add
pusha
sbb
mov
cs
pusha
sbb
and
mov
test
cmp
cmp
das
push
dec
mov
cltd
jle
dec
mov
andl
scas
or
int
xor
cmpsl
adc
int3
mov
into
cltd
jne
sub
push
push
aad
mov
sti
sahf
lods
mov
sub
popa
icebp
pop
jnp
popa
or
shll
or
sbb
pop
push
or
aam
adc
xor
cmc
or
adc
cmp
sbb
mov
repz
jmp
bound
adc
int
mov
lock
fs
dec
ret
inc
stc
add
xchg
mov
rorl
sbb
orb
mov
outsl
adc
add
imul
and
lahf
pop
mov
mov
ljmp
mov
stc
inc
sbb
xor
lret
fidivrs
mov
shlb
shll
dec
insl
or
test
pop
lds
jp
mov
push
pusha
or
xor
push
xchg
loope
xor
fmulp
mov
dec
mov
jnp
loop
xor
jae
xchg
inc
dec
pop
xchg
cwtl
and
call
xor
jge
mov
insl
test
ja
xchg
inc
cs
sbb
mov
and
scas
xchg
xor
in
nop
xchg
mov
pop
sbb
xchg
mov
pop
adc
mul
aad
sbb
ret
fadd
and
inc
mov
cmp
sahf
or
mov
sbb
call
int
xchg
addl
xchg
sbb
sub
ret
mov
shrb
repnz
leave
cmp
mov
lcall
xchg
into
fadds
aaa
hlt
enter
sub
lahf
xchg
fcoml
das
test
and
cmc
arpl
or
mov
cmpsb
lea
inc
mov
mov
mov
rcl
pushf
xor
jno
adc
jnp
in
jp
push
sbbl
mov
or
inc
and
cmpsl
aaa
sti
scas
cli
cmc
inc
jns
mov
xchg
cmpb
jns
pop
sub
and
push
lcall
dec
cmp
push
movsb
pop
xor
mov
dec
cs
sbbl
out
adc
xor
push
adcb
add
sahf
imul
adc
push
and
insb
stos
pop
pop
or
fistl
lock
adc
outsb
fdivrl
sbb
cs
adc
aad
dec
insb
test
mov
ljmp
in
out
cmp
sbb
lcall
jae
inc
push
shlb
inc
movsl
add
fwait
addb
bound
in
mov
loop
daa
test
sub
stos
mov
and
fdivrs
pop
aam
les
jmp
cmp
jns
ja
call
out
xchg
or
cwtl
shrb
int
insb
outsl
and
and
es
nop
cmp
lods
neg
cld
iret
shlb
leave
js
leave
mov
ret
je
leave
cmpsb
mov
movsb
loope
test
jae
lock
push
xor
mov
push
pop
ds
jmp
js
test
jg
add
shlb
hlt
mov
jbe
push
arpl
loop
sbb
sarl
dec
mov
jg
sarl
enter
jle
leave
out
inc
xchg
fbstp
inc
inc
inc
xor
stc
in
ja
jne
mov
fldenv
xchg
iret
jne
and
cli
insl
or
rorb
xor
xchg
jmp
popf
jne
jp
aad
scas
test
icebp
pop
cmpsl
imul
inc
sub
in
jo
fidivrs
pop
inc
add
fisttpl
xor
fwait
sbb
movsb
jnp
lock
scas
mov
mov
sub
mov
outsl
jl
dec
push
mov
push
jno
negl
dec
outsl
pop
xchg
push
je
push
jg
sbb
mov
jno
jns
sarb
mov
aas
sub
push
mov
inc
sbb
add
and
cmp
pop
mov
and
cltd
ret
in
imul
push
mov
pop
mov
xchg
xor
mov
inc
mov
rolb
add
xchg
or
std
mov
test
xchg
in
addr16
and
xchg
dec
mov
push
mov
stos
pop
fists
cmp
into
mov
jge
loopne
out
pop
cmpsb
xchg
cmp
cmp
pop
jmp
fwait
adc
insl
js
daa
daa
mov
popf
pop
sub
repnz
sub
shlb
sub
cmp
rcr
inc
call
shll
loopne
inc
xchg
int3
or
outsb
cmp
int3
pop
shll
or
mov
mov
clc
stos
out
int
jecxz
mov
jl
jmp
jnp
adc
je
xchg
add
xchg
pusha
dec
shll
push
jg
sub
movsl
fistps
dec
xor
clc
aad
xchg
rorb
stos
add
or
mov
lret
jle
movsb
pushf
mov
pop
add
sbb
scas
nop
call
mov
jg
jg
out
jg
pop
popf
ficoms
push
les
fiadds
add
test
mov
jmp
mov
ret
js
jmp
lods
or
adc
rep
mov
out
mov
fcmovnu
outsb
in
gs
ljmp
out
xor
sbb
shrb
fisttps
daa
inc
leave
pushf
stc
mov
mov
xor
fmull
repz
fidivs
cmpb
dec
xchg
leave
dec
jge
mov
sbbl
add
pop
sarl
mov
mov
jbe
fstpt
into
fdivl
or
popa
ds
jg
pusha
js
cwtl
cwtl
test
add
popf
shrl
mov
add
xor
pop
cmp
sbb
test
adc
xor
mov
mov
mov
shl
les
mov
dec
fildl
cmpl
stos
xchg
mov
add
daa
std
mov
shl
inc
cld
subb
cld
add
inc
adc
int3
fidivrs
xchg
mov
jo
sar
popf
xor
leave
fstps
inc
ljmp
push
adc
daa
jecxz
xor
mov
jmp
mov
lahf
aad
xor
sbb
fnstcw
ror
sti
lds
cmp
mov
mov
pushf
jg
aam
pop
addb
aas
lret
cmpb
in
or
sahf
andps
mov
repnz
sub
add
stc
out
addl
push
imul
or
les
xchg
imul
lret
push
test
lret
jge
cwtl
push
sbb
outsb
xchg
repz
insb
fistpll
mov
std
out
push
test
push
dec
insb
mov
test
das
mov
cli
repnz
jecxz
dec
pop
mov
xor
lret
orl
xchg
inc
sbb
push
xchg
iret
mov
push
es
and
lea
fdivrs
and
mov
mov
or
lret
out
out
loop
and
xchg
sub
fsub
insb
js
les
incb
loop
fucomp
ljmp
ror
adc
pop
mov
ret
cmp
repnz
ret
pop
in
sub
clc
jno
push
rcrl
xchg
fidivrs
mov
fnsave
mov
in
data16
in
mov
dec
push
mov
fmulp
mov
add
push
xor
js
lcall
std
test
mov
ljmp
inc
inc
hlt
jne
inc
jns
aad
inc
fstpt
push
icebp
xchg
adc
lret
mov
sbb
lods
mov
je
xor
addr16
stc
add
mov
repz
in
imul
imul
xchg
jle
jo
ljmp
test
int3
cli
int
pop
and
adc
fildll
inc
xor
dec
fisubs
fcoms
scas
cld
leave
aas
adc
pop
sbb
dec
mov
fisubrl
bound
imul
stc
ja
in
jmp
push
cltd
inc
push
insl
mov
imulb
dec
dec
stos
test
add
jge
jg
call
jbe
les
enter
out
mov
pop
fmul
push
xor
and
in
inc
hlt
jecxz
xchg
ss
imul
std
sbb
mov
xor
shrl
out
xchg
mov
dec
fldl
repz
add
jb
jb
lahf
arpl
push
add
insb
call
popf
sar
sub
mov
dec
lds
inc
mov
test
mov
test
push
adc
es
cld
outsl
inc
xor
popa
dec
xlat
cmp
rcrl
test
das
into
in
push
fs
enter
sti
stos
jbe
popa
push
push
dec
lretw
movsl
pop
dec
inc
in
sbb
pop
jne
sbb
out
mov
mov
out
adc
xor
fcoml
call
addb
flds
enter
inc
xchg
fnstsw
push
cltd
into
addr16
shr
rclb
ja
repnz
sbb
pop
daa
clc
sub
xchg
in
mov
sub
sahf
xchg
add
in
adc
lods
xchg
imul
pop
or
mov
js
jmp
sbb
hlt
sub
ficoml
stos
nop
add
add
inc
stc
mov
shrb
addl
addb
int3
inc
adc
lock
sbb
in
dec
aaa
push
jge
rorl
popa
daa
add
jg
lret
xor
push
out
clc
mov
data16
insl
push
aam
add
shrl
jg
push
inc
jl
arpl
stc
js
bound
cmp
movsb
mov
pop
lock
ret
mov
pop
daa
leave
mov
sbb
pop
pushf
mov
shrl
push
mov
sbb
addr16
fs
xor
adc
stos
fdiv
push
inc
inc
xchg
sub
incl
xor
xchg
jne
mov
cli
adc
push
scas
and
ret
daa
mov
mov
mov
sub
fdiv
je
mov
js
imul
shlb
lea
or
or
pop
mov
shl
loope
push
and
add
sub
jb
fs
sub
add
out
adc
and
cld
cmp
jmp
or
out
xchg
and
jns
bound
es
test
cmpsl
arpl
cmp
jo
cmp
pop
faddl
repnz
imul
or
or
es
cmp
cwtl
js
inc
mov
popl
push
scas
mov
je
and
sbb
or
add
test
into
ljmp
pop
ret
rcrl
test
pop
shl
into
push
mov
mov
pop
push
xchg
int3
loope
ljmp
and
lds
mov
cmp
in
repnz
xchg
inc
jns
push
subl
xchg
xchg
imulb
fdiv
fwait
mov
and
xor
mov
daa
adc
out
js
imul
mov
or
mov
lea
icebp
pushf
inc
lds
push
insb
inc
les
add
add
dec
mov
add
xchg
pushf
stos
sbb
and
loop
inc
repz
cld
jno
rclb
not
icebp
rcrb
sbb
push
cmp
jecxz
sub
cmp
pop
dec
dec
push
ret
int3
inc
and
push
inc
cmc
out
or
std
add
jge
movsl
lret
movl
lcall
sti
jecxz
jmp
cmpsb
pushf
cld
sbb
jns
mov
inc
fsubr
lods
mov
inc
pop
push
stc
shl
push
popf
pop
cmp
inc
cli
fwait
cs
adc
jno
rol
icebp
int3
push
dec
mov
sbb
fs
xchg
jg
leave
ja
ljmp
push
cs
or
xor
pop
mov
mov
sub
push
xorb
cmp
inc
and
repnz
cli
push
xchg
sub
lcall
sbb
lock
into
ret
imul
xchg
sbb
mov
jae
int3
sub
push
mov
cmp
jno
popf
ret
bound
jp
cmp
lock
lds
pop
faddp
test
outsl
dec
hlt
fstpl
push
lret
dec
mov
mov
sub
push
test
test
adc
mov
mov
cld
jle
pop
cwtl
int3
int3
enter
xchg
loope
movsb
enter
icebp
aad
stos
push
test
cmp
fistps
icebp
add
inc
xchg
and
xor
mov
jbe
push
loop
gs
and
and
arpl
push
or
pop
push
subl
dec
mov
and
ljmp
mov
ljmp
push
dec
dec
lods
arpl
xlat
push
pusha
ja
scas
out
pop
xor
add
mov
in
popf
loop
and
lret
les
dec
xchg
adc
cmp
xchg
push
outsb
xchg
xor
ficoml
inc
jo
and
push
mov
and
int
lds
loope
inc
pusha
and
loope
dec
fidivl
es
aad
and
movsb
gs
add
rcrb
cli
ljmp
adc
je
dec
push
dec
ljmp
js
jo
cmp
aam
sbb
inc
add
popf
push
int3
mulb
scas
mov
cmpsl
xchg
fwait
xchg
xor
adc
inc
xor
fdivrl
sti
sub
jae
sub
inc
jne
sub
stos
std
push
test
dec
jb
fisttpll
push
sbb
data16
iret
and
daa
outsl
mov
cld
dec
imul
pop
mov
push
ret
add
dec
in
push
xchg
fisubrl
dec
sbb
rorb
xchg
rcrb
mov
dec
sub
mov
mov
sbb
popf
xor
pop
sub
add
pop
nop
scas
mov
popf
inc
sub
dec
movsl
aam
pop
repz
add
push
inc
cmpsl
add
aas
lds
jnp
roll
mov
fwait
sbb
sbb
lock
xchg
call
lcall
add
and
mov
xor
bswap
fisubs
pusha
dec
fsts
subb
out
in
add
loopne
in
jo
jbe
xchg
xchg
popf
mov
push
in
lds
iret
lret
pusha
popa
or
bts
mov
cmp
mov
in
bound
push
test
cli
mov
or
xchg
into
and
ss
sbb
scas
pop
or
mov
jae
popa
cs
jns
out
inc
fldcw
mov
sub
add
dec
aas
pop
pop
enter
pop
cmp
pop
rcll
sbb
xlat
jno
jbe
inc
jmp
ror
outsl
jnp
xor
inc
mov
imul
test
insb
shlb
jo
sbb
sub
mov
push
xchg
lahf
out
push
out
fistpll
xchg
sbb
imul
add
dec
sub
imul
inc
cmp
sbbb
mov
repnz
push
jle
sub
int3
and
gs
test
iret
scas
repz
sarb
inc
loopne
orb
jo
jmp
mov
dec
push
cmp
push
xchg
insl
rcl
aas
rorb
pop
popa
xor
andl
out
xor
push
jne
into
stc
fs
dec
loope
pop
fnstenv
inc
ret
cmp
ja
stos
arpl
aam
add
fimuls
rcrb
mov
adc
jne
push
roll
orl
lret
xchg
mov
ljmp
xchg
sbb
mov
xchg
mov
pusha
repnz
sbb
cmp
mov
popa
push
shl
sub
addl
orl
add
cmp
mul
jmp
sbb
mov
pop
call
lret
pop
xchg
mov
pop
shlb
call
mov
fidivrs
ret
or
popa
mov
outsl
out
int
and
add
mov
icebp
pop
add
andl
adc
movsb
lret
das
cmp
mov
cmp
jae
dec
imul
cwtl
or
mov
push
inc
pusha
push
xor
and
dec
or
mov
shll
pop
mov
and
push
jmp
enter
ljmp
pop
inc
or
imul
cmp
add
fcoml
push
sti
js
outsl
inc
jns
fimull
insl
sti
mov
mov
out
sub
sub
push
and
popa
ret
pushf
aaa
pop
stc
ljmp
cmpsl
js
xchg
adc
pop
fistps
in
mov
or
aas
pop
lret
test
adc
shl
cmc
cmpsb
adc
push
les
jb
bound
adc
inc
icebp
push
adc
nop
das
pusha
adc
nop
ds
lods
jno
push
in
notb
out
outsb
inc
loop
repz
adc
and
and
mov
mov
pop
and
dec
add
adc
pop
movsb
add
repnz
mov
xchg
cmp
pop
xchg
sbb
sub
xor
imul
xchg
jp
bound
popf
dec
leave
jns
adc
lcall
out
fmuls
mov
jo
out
hlt
nop
or
je
and
and
jge
ret
dec
cmp
addr16
aas
or
in
inc
add
push
inc
cmp
jmp
movsl
lahf
pop
repz
push
jno
fwait
imul
sub
mul
int3
pcmpeqb
mov
cs
das
stc
sbb
adc
lock
and
and
mov
data16
pop
jg
lret
jmp
andb
mov
loopne
sbb
jp
aam
mov
xor
adc
pop
pop
icebp
and
test
fisttpl
test
add
xor
mov
pusha
sub
gs
and
mov
adc
mov
mov
fistps
xor
shl
xchg
stos
mov
mov
and
out
stos
or
mov
add
pop
sbb
sub
sarl
stos
loopne
inc
mov
inc
sub
aas
clc
mov
pop
mov
int
pop
add
pop
mov
stos
out
out
jb
sti
jbe
add
loope
sub
and
add
out
and
push
xchg
popa
mov
mov
and
fldcw
lret
push
add
jg
adc
adc
xchg
movsl
xchg
sbb
loopne
stos
xchg
jle
dec
xchg
cmp
out
movsb
or
pop
jb
xchg
mov
pop
mov
sub
test
ljmp
into
test
mov
push
rolb
pop
sbb
mov
xor
xor
sub
daa
loopne
xor
enter
mov
push
xchg
xchg
cmp
cld
mov
dec
pushf
pop
outsl
fs
call
insb
adc
aas
mov
shlb
inc
jne
scas
cmp
push
push
add
mov
xlat
sbb
push
lea
imul
test
test
adc
xchg
je
xchg
or
jmp
daa
jbe
ja
mov
lret
push
xor
adc
sub
test
aas
icebp
js
out
addw
pop
pushl
pop
ds
adc
cs
mov
and
lds
les
sti
js
mov
xchg
jb
aam
mov
push
repnz
inc
pop
mov
adc
mov
cli
loope
jb
decl
pop
or
daa
insb
jp
pop
lcall
push
adc
xchg
push
movsb
popa
sbb
enter
xor
imul
mov
push
cmpsl
add
popa
aad
xchg
pushf
lret
cltd
sub
rcll
cltd
push
clc
push
xchg
icebp
fistl
push
mov
insb
mov
sbbl
int
inc
int3
arpl
push
fs
imul
mov
lods
movsb
js
jl
stos
mov
xchg
fimuls
dec
lahf
in
addb
or
insb
mov
jbe
xchg
or
outsb
mov
ljmp
jl
xchg
and
test
cmp
adc
sbb
arpl
aas
push
pop
dec
adc
mov
std
jae
inc
jno
cwtl
je
jmp
test
out
fistpll
clc
sbb
insb
xchg
sub
in
rcll
and
pop
fmul
inc
sub
stc
jo
mov
and
iret
fists
jge
inc
adc
rcr
imul
inc
push
mov
shrb
fsubrl
mov
mov
push
mov
xor
hlt
ljmp
jno
cmp
and
mov
mov
shl
inc
inc
into
or
sbb
sbb
lret
mov
xchg
push
adc
inc
sar
mov
push
test
and
mov
cltd
sti
fs
jge
inc
out
add
insl
out
mulb
movsl
scas
sbb
aaa
int3
dec
or
mov
jne
pop
movsl
mov
je
les
or
dec
scas
sub
aas
pop
movsl
ret
push
outsb
outsb
and
dec
jbe
fistpll
jmp
pop
sahf
cmp
aad
ss
sub
out
sub
cmpl
xlat
mov
mov
cmovb
movsl
cs
inc
pop
jp
out
enter
je
sub
out
mov
into
inc
push
dec
mov
jge
push
scas
in
xor
jmp
cmp
in
sbb
lret
push
dec
mov
scas
frstor
mov
je
sbbb
push
xor
jo
orb
cmp
aad
sub
enter
pop
je
pop
xlat
loopne
out
test
fsubp
pop
push
adc
cld
das
pop
imul
scas
rclb
je
scas
das
pop
jno
push
or
push
jge
stc
out
cmp
pop
ss
popa
stos
xchg
in
fldl
test
push
pop
add
xchg
test
or
push
xor
xchg
cwtl
cld
mov
dec
incb
rcr
insl
into
mov
in
repnz
push
lahf
pushf
jno
hlt
mov
lds
lret
das
jecxz
xchg
adc
mov
xor
cmpsl
push
inc
mulb
pop
mov
mov
inc
shll
out
nop
pop
out
outsl
in
mov
lds
lret
jge
inc
enter
int
cmp
mov
mov
jns
push
jg
lock
adc
lock
mov
clc
shlb
jle
lcall
adc
test
dec
jle
ss
xchg
and
mov
sub
dec
stos
cmp
adc
nop
or
fidivrl
imul
hlt
iret
fistpl
adc
rcr
ja
mov
into
test
scas
add
cltd
scas
cmc
adc
gs
xchg
hlt
cmpsb
out
movsb
movl
sbb
push
or
sub
call
adc
sbb
js
mov
pusha
lret
pop
xchg
inc
adc
iret
jg
mov
cwtl
push
pop
dec
addr16
je
daa
ret
add
mulb
mov
leave
xchg
notb
and
sti
cmc
xchg
in
xor
clc
andl
sub
pop
dec
fisubrs
dec
add
jp
adc
lock
aaa
mov
gs
repz
and
pop
int3
sbb
adc
test
or
sub
notb
das
xchg
mov
int
lods
mov
and
test
cmp
rorb
mov
in
cld
xor
xor
xchg
mov
adc
xchg
xor
fwait
pop
dec
or
xchg
in
mov
fxch
outsl
addr16
cld
call
insl
scas
or
jl
or
out
lock
jle
pop
mov
xor
fs
sbb
call
dec
mov
push
xor
jno
out
jns
outsb
incl
in
shrb
pop
jge
enter
sbb
inc
loopne
dec
sahf
nop
cmp
mov
popf
cmp
insb
pop
push
fldl
adc
stc
data16
cmpsl
loopne
sbb
lret
sarb
imul
or
mov
pop
sbb
rcrb
or
jnp
or
lods
lcall
add
enter
cld
mov
push
popf
push
jg
je
sbb
mov
add
jg
jno
fists
add
pop
mov
sbb
sahf
and
movsl
or
mov
mov
leave
loope
jbe
push
or
pop
add
xchg
dec
inc
jbe
sub
jl
add
and
push
or
xor
xchg
ret
pop
xor
dec
cmp
repnz
out
push
adc
jns
mov
xchg
mov
xorb
mov
push
fidivrs
ja
and
ret
pop
popa
iret
and
push
jmp
js
and
int3
repz
dec
inc
frstor
inc
lret
mov
pop
cmp
inc
mov
out
mov
push
xor
or
enter
ljmp
bound
fcoml
ret
xchg
xchg
enter
mov
enter
push
push
cmp
xor
add
leave
in
pop
sub
popf
test
aaa
imul
xchg
adc
xchg
xchg
inc
push
ret
mov
fbld
sbb
js
sub
xchg
mov
jmp
aad
ficoml
not
in
call
inc
push
mov
les
mov
leave
and
xor
adc
xchg
jge
shlb
mov
dec
inc
stos
xchg
cmc
outsb
scas
mov
pop
pushf
aaa
inc
fidivrl
lock
shl
mov
xchg
imul
mov
adc
adc
imul
push
je
ljmp
repnz
and
sbb
jnp
push
fistl
jmp
lret
lods
xor
out
pop
mov
push
into
movl
gs
hlt
test
imulb
sbb
dec
mov
lret
in
jb
fndisi(8087
frstor
imul
in
test
xchg
cmp
lret
inc
inc
mov
mov
mov
repnz
pop
cmp
inc
push
fs
test
pushf
adc
jnp
jp
mov
mov
jg
jns
lock
adc
sub
jl
sahf
stos
insb
ret
lret
std
mov
xorb
jge
add
xchg
dec
aam
xchg
ja
jnp
pop
mov
rep
mov
push
and
mov
xchg
xor
aam
jno
sub
and
dec
stos
es
or
jb
push
mov
pop
out
xchg
pop
ffree
sbb
lret
pop
fs
inc
loope
testb
sbb
jo
pop
aad
cmpsb
aad
add
shll
adcl
jb
call
mov
mov
pop
je
jae
insb
mov
dec
pop
cmp
icebp
jle
jno
outsl
sub
lods
xor
aam
repnz
mov
or
lret
pusha
pop
nop
aad
lahf
scas
fiaddl
cmp
mov
std
out
cli
sbb
xchg
das
dec
jmp
xchg
lods
das
jp
mov
frstor
nop
idivl
or
sub
mov
out
push
pop
add
hlt
cmp
xchg
stos
orb
test
push
imul
dec
pop
push
arpl
push
xchg
fstps
adc
clc
mov
cmp
fimull
xorl
ret
lock
fldt
mov
mov
xor
lret
lret
xchg
mov
mov
inc
adc
jnp
xchg
filds
pop
shlb
imul
mov
testb
or
arpl
lods
sbb
sbb
out
push
test
arpl
pop
daa
lods
or
pop
test
cmp
dec
dec
lods
sbb
aam
leave
and
add
or
mov
and
je
jmp
add
icebp
sbb
leave
and
mulb
pop
sub
jnp
adc
aaa
pop
aad
call
jg
mov
push
mov
cmp
insb
xor
bound
ja
sub
das
sub
push
lock
rclb
mov
cmp
or
mov
repz
ret
jb
sarl
popa
mov
mov
mov
out
mov
jne
jg
lahf
test
mov
lret
mov
sbb
or
pop
pop
ret
notl
or
push
loope
jge
xchg
fstps
je
and
mov
push
movsb
rorb
cmp
mov
int3
jo
pop
dec
push
and
cld
popf
jb
mov
mov
inc
out
mov
jnp
nop
and
mov
in
inc
sbb
dec
lds
fstpl
pop
jne
xor
sbb
push
and
cmp
push
loopne
dec
push
das
cmpsb
jge
mov
pop
shll
push
pop
fnsave
mov
pushf
sub
cwtl
push
leave
push
sub
fsubl
inc
loope
pop
jg
out
jp
add
add
inc
pop
or
sbb
jns
ja
rcrb
xchg
pop
mov
test
adc
enter
ret
mov
sbb
xlat
mov
sahf
lods
jmp
loope
ret
out
jne
sbb
dec
lret
pop
cmpsb
mov
imul
mov
push
fs
pusha
sti
andb
fwait
pop
pusha
fwait
adcl
outsb
mov
roll
xchg
sbb
pop
or
ljmp
push
lds
jg
ss
shlb
push
inc
or
pusha
or
jo
and
jb
or
stos
pop
rcrb
add
push
mull
adc
roll
mov
out
arpl
jecxz
sub
in
adc
scas
jae
fcomi
mov
repz
push
das
add
pop
fdivs
cli
pop
jae
cmpsl
adc
xchg
cmp
int3
sbb
add
enter
imul
rcrb
outsl
push
cli
lods
lret
mov
and
and
jg
mov
test
aaa
mov
or
push
sub
fistl
xchg
pop
pop
and
fisubs
enter
outsl
out
cmc
pop
rcrb
imul
lock
add
push
test
insb
mov
loopne
mov
pop
xchg
stos
or
jbe
jg
shrd
inc
mov
pop
inc
or
jae
call
idivl
jbe
das
or
add
push
push
les
jae
lcall
mov
call
cld
xchg
and
inc
hlt
dec
ljmp
in
addr16
sbb
enter
cmc
or
adc
mov
dec
pop
pop
add
das
in
je
clc
dec
sar
icebp
fucomp
mov
sub
pop
sub
aaa
push
ret
es
cmpsb
cmp
dec
and
xchg
xor
cld
bound
outsb
push
and
daa
or
xchg
orb
xor
push
pop
stos
adc
mov
adc
sbb
and
adc
adc
ret
xchg
xchg
clc
outsl
mov
xchg
mov
out
aad
push
xor
pop
adc
pop
cmp
push
jne
cmp
sbb
push
call
sub
stos
pop
jno
stc
movsb
push
shlb
fidivrl
dec
imul
stc
dec
jnp
sbb
inc
imul
pop
outsl
fxch
pop
add
mov
mov
sti
dec
and
adc
push
and
aas
adc
in
pop
jmp
fimull
roll
lods
pop
shll
or
daa
roll
inc
push
jmp
jmp
or
icebp
sub
mov
icebp
inc
sbb
test
pop
lods
mov
pop
or
jns
jg
push
scas
mov
push
adc
mov
xchg
dec
lahf
lea
in
or
dec
shll
repnz
cli
scas
xchg
mov
rol
mov
shl
mov
inc
dec
mov
jae
ljmp
jnp
negb
and
pushl
mov
fisttpl
mov
sbb
mov
xchg
repnz
dec
data16
cmp
xchg
inc
pushf
in
pop
std
xor
fwait
jb
inc
arpl
xchg
std
jg
mov
shrl
inc
pop
dec
mov
lock
sti
push
loopne
ja
imul
fstl
nop
loopne
mov
bound
movsl
loopne
mov
dec
mov
bound
xchg
add
jecxz
adc
or
and
cltd
xchg
pop
repz
and
inc
leave
imul
mov
sahf
pop
loopne
or
orl
mov
lcall
adc
out
xor
jmp
sbb
fdivrl
adc
mov
insb
jne
cmp
jecxz
test
test
mov
cmc
cmp
and
pop
push
cs
out
xor
dec
xchg
sbb
dec
cli
mov
add
ss
xchg
xchg
lahf
or
sub
aam
arpl
push
ljmp
xor
dec
sbb
sub
sub
lds
cmpl
jo
and
testl
mov
jno
pop
pop
out
mov
fmuls
sbb
std
mov
dec
or
pop
iret
sub
push
fnstenv
jl
pushl
call
lock
imul
inc
sahf
jl
mov
xor
pop
jnp
insl
filds
faddl
adc
repz
sahf
ret
sbb
mov
imul
lds
add
in
inc
mov
cltd
loope
and
repz
lcall
xchg
out
out
or
test
xor
decl
in
loope
ret
lret
xchg
popf
aam
ss
test
and
sahf
mov
ficoml
loope
mov
jb
lcall
out
sub
or
shlb
icebp
addr16
and
and
jb
xchg
call
jbe
push
push
sbb
out
xchg
bound
lret
scas
fcompl
pusha
dec
jns
sub
int3
mov
outsl
inc
xor
pop
movsl
xor
dec
mov
data16
mov
cmpsb
std
rdtsc
in
bound
jo
sbb
lods
popf
dec
sub
jno
jecxz
outsl
cltd
ficomps
icebp
out
loop
in
iret
fdivrs
jno
fidivl
mov
dec
dec
in
pop
aaa
dec
fiadds
out
mov
mov
pop
dec
mov
xchg
mov
call
push
push
push
in
ffreep
dec
insb
xchg
ja
pminub
xorb
lock
mov
mov
lcall
jl
mov
adc
in
jmp
cmc
push
jp
paddq
jb
mov
dec
leave
int
dec
jnp
pop
shlb
pop
insl
pop
popf
pop
xor
xchg
orl
cld
sbb
popa
adc
xlat
add
addr16
push
pop
daa
idivl
sbb
or
outsl
mov
sbb
movsb
iret
xchg
ljmp
mov
adcl
pop
xchg
xor
test
and
test
jns
outsb
lcall
repnz
cwtl
fnstsw
adc
push
pop
test
ss
jne
scas
add
inc
fucomip
repnz
clc
xor
and
dec
add
loop
out
adc
inc
movsl
fwait
int
sbb
pop
int
ja
pop
dec
pop
gs
or
mov
inc
nop
mov
add
and
sbb
push
pop
mov
jns
lcall
loopne
es
ljmp
or
and
push
cmpsb
and
je
dec
ljmp
mov
sbb
and
movsb
cmp
mov
sahf
sbb
xor
cmc
je
sbb
filds
not
dec
dec
fadd
stos
into
pop
js
and
repz
movsl
mov
aaa
jne
iret
je,pn
call
xorb
xchg
pop
inc
movsl
and
dec
pop
add
rcrb
arpl
xchg
push
push
adc
push
loope
jno
push
jle
and
cmp
cmp
cmp
das
inc
test
add
pusha
mov
mov
pop
inc
mov
inc
cli
pop
pop
gs
pop
sub
ret
fiadds
mov
and
jne
stos
cmp
outsb
mov
mov
push
and
shl
pop
jmp
mov
sbb
jnp
shll
stos
negb
xchg
loop
pop
adc
popa
xor
scas
loope
ljmp
mov
insl
lahf
xchg
pop
insb
cmp
movb
pop
mov
xchg
loopne
cmp
or
jg
mov
sbb
push
push
rcrl
xchg
push
les
mov
das
sbb
mov
add
and
sub
icebp
push
in
cmp
pop
ret
addr16
fstpl
shrb
nop
ret
mov
xlat
int3
and
lods
push
and
scas
mov
push
scas
cmpb
int3
xchg
jns
in
pop
inc
jg
xor
or
jg
xchg
js
mov
iret
pop
pop
insl
repz
cmpsl
pop
bound
pop
adc
mov
push
sub
pop
cmp
insl
sti
filds
sub
xorb
imul
and
fs
adc
add
jnp
in
lret
jecxz
fimuls
mov
shll
cld
leave
clc
xchg
dec
scas
out
in
out
ret
fsincos
or
pushf
dec
xchg
adc
rolb
paddsw
fistpl
ret
push
sarb
repnz
shll
fbstp
dec
cvttps2pi
sti
cmp
or
sub
adc
arpl
int3
sbb
jg
adc
repnz
pusha
push
xchg
insb
mov
filds
pop
enter
sbb
mov
mov
test
mov
push
inc
add
cmp
inc
out
xchg
cmp
push
or
outsb
add
or
add
or
cmc
dec
mov
xchg
leave
popf
xlat
in
cmpsl
lods
mov
mov
pop
lea
jae
imul
add
shlb
jbe
sub
pop
stos
dec
repnz
xlat
pop
sub
lahf
jmp
pop
je
pop
stos
aaa
int3
xchg
testb
cmp
dec
inc
inc
icebp
imul
insb
mov
cs
insb
adc
fldl
pop
push
sub
repz
sub
sbb
fimuls
mov
js
lds
or
xlat
or
leave
stc
addr16
add
flds
push
ret
fsubs
ret
cmp
test
and
pop
dec
mov
hlt
cwtl
and
leave
mov
lcall
dec
pushf
stos
fs
jno
push
test
mov
int
cltd
mov
and
add
jb
jae
and
lret
fmul
loope
ficoms
ljmp
inc
aaa
outsb
mov
push
lcall
daa
push
push
adc
faddp
out
inc
ss
data16
in
dec
jo
clc
je
out
or
sarl
pop
add
sbbb
adc
jp
or
iret
add
lods
adc
pop
test
jne
push
insl
xor
cld
stos
add
mov
pop
mov
jle,pt
push
arpl
adc
mov
jge
cmp
inc
mov
std
inc
inc
and
sbb
xchg
dec
add
push
xchg
dec
loopne,pn
xor
shrl
fwait
mulb
jle
sbb
outsb
ret
or
fs
sbb
popf
fistps
push
bound
jne
jl
pop
fsubl
mov
push
jg
imul
mov
add
cs
dec
mov
mov
arpl
mov
movsb
fsub
jmp
push
ffreep
pop
int
mov
sub
pop
cmc
out
jmp
lock
inc
mulb
imul
or
rclb
lahf
stos
mov
mov
or
cs
cmp
loopne
inc
sarl
js
in
push
rorl
fstpt
xchg
sub
not
pop
jnp
push
repnz
in
jae
jecxz
jne
push
shl
xchg
stc
in
and
fistps
out
dec
leave
xchg
leave
lahf
xchg
jne
jne
push
lods
push
mov
cmpsl
or
pop
mov
jle
mov
call
jmp
sbb
dec
lods
fcom
and
xchg
cmpsl
sti
in
paddsb
adc
stos
loope
sbb
lcall
mov
mov
cld
sbb
mov
imul
mov
sahf
in
inc
pop
push
or
xor
mov
jmp
fwait
sbb
movsl
inc
sub
xor
in
ficoml
push
out
xor
xchg
mov
shll
cmp
into
xchg
jnp
stos
or
mov
push
scas
adc
in
imul
iret
jmp
repz
jae
push
ds
push
test
arpl
sub
aas
pop
movb
int
fdivr
sbb
jmpw
push
cs
inc
cmovl
push
mov
leave
scas
popf
andb
das
andl
add
sub
pop
popa
iret
mov
pop
ljmp
popa
shrb
add
lods
sub
push
jb
pop
ret
mov
sahf
jbe
add
lods
outsl
push
xchg
xchg
dec
cli
bound
xchg
add
jle
and
adc
jecxz
pop
fsubrs
sti
das
notb
icebp
cmp
jb
mov
jp
xlat
test
mov
outsb
into
in
jmp
in
pop
shl
popa
xor
jge
cmp
loopne
push
mov
ret
mov
mov
xor
movsb
add
sbb
insb
insb
dec
mov
dec
stos
xchg
icebp
xchg
cmp
sbb
dec
mov
dec
sti
jns
and
aad
aas
xor
scas
cld
fimull
data16
pusha
or
sahf
cmp
cmp
or
xchg
dec
and
into
xor
lock
and
iret
or
xchg
cmp
jmp
sbb
mov
into
xor
pushf
mov
xlat
or
inc
jle
jne
add
rcrb
xchg
or
add
rcrb
fldenv
cltd
cmp
xchg
dec
adc
lea
mov
push
xor
xchg
cmp
xchg
mov
ljmp
pop
arpl
push
pop
pop
push
add
push
push
pop
jns
mov
dec
xchg
stc
imul
or
dec
push
add
cmp
fdivl
or
cltd
mov
cmpsb
ljmp
daa
cmp
cmp
rcrl
je
sbb
stos
scas
cltd
pop
sbb
inc
cltd
push
dec
push
arpl
jae
cmpsl
mov
adc
shrb
sub
fwait
push
faddp
es
xchg
jmp
sub
mov
jb
inc
test
mov
mov
lods
sbb
cmp
fs
sete
je
pop
int3
cmpsl
popa
lods
lahf
mov
ficoms
xor
aam
iret
dec
xor
inc
pusha
sar
lahf
xchg
in
dec
mov
mov
mov
dec
mov
dec
negb
xchg
and
inc
clc
ja
sahf
mov
cmpsl
push
dec
out
mov
xchg
roll
dec
notb
frstor
mov
nop
push
aas
mov
or
repz
aas
add
cmp
jae
mov
loop
xor
dec
sub
push
xchg
xor
mov
aas
ja
jg
test
mov
lcall
adc
jmp
je
add
fisubrl
daa
inc
lahf
aas
unpcklps
or
les
sub
addl
cld
lods
xor
test
cmc
adc
xlat
lds
fimull
jo
or
fimuls
aam
xor
mov
aad
mov
lods
shlb
inc
fcmove
xchg
add
iret
loope
ja
pop
xchg
inc
xor
cwtl
push
cmp
sub
add
icebp
ret
cmp
lea
xor
scas
sub
push
adc
add
mov
lods
xchg
add
scas
mov
sbb
cmpb
xchg
pop
jb
icebp
or
scas
out
pop
movsl
cmp
in
jmp
jg
ret
int
test
xor
xlat
test
mov
jmp
mov
jge
cmp
test
rorl
pop
mov
cltd
adc
xor
loope
jecxz
or
sti
notl
sub
sahf
adc
sarl
xor
cmpsb
aaa
into
xor
cmpsb
push
push
xchg
jge
push
mov
push
push
mov
xchg
call
pop
lds
je
into
mov
cs
in
adc
cmp
cltd
cli
negl
ja
inc
inc
pop
cmp
xor
outsb
jg
sbb
sub
mov
adc
xchg
outsb
aaa
sub
sbb
test
jnp
rcpps
ds
loop
sub
mov
xor
inc
popa
push
mov
lcall
pop
mov
nop
mov
int
sub
pop
dec
mov
lahf
pop
clc
shr
and
mov
fs
push
dec
add
imul
lret
cli
das
adc
enter
out
push
in
jp
xchg
push
movsl
test
lds
inc
add
pop
fiaddl
push
lcall
cmpsl
push
ljmp
cmp
push
sbb
aas
cwtl
lret
leave
or
cmp
ja
je
repnz
and
pop
idivb
cli
ljmp
jl
jmp
xchg
or
fisttpl
jl
sub
les
loop
loop
xacquire
sahf
mov
xadd
cmc
lcall
daa
int3
push
pop
lret
xchg
pop
imul
cmp
mov
pop
out
push
mov
pop
subb
sbb
mov
xchg
outsb
addr16
sar
cld
aam
icebp
aam
popa
push
std
cmp
lock
rcrb
jnp
xchg
loop
enter
xchg
mov
es
andb
add
int3
fwait
sbb
jnp
sub
dec
jmp
mov
scas
xchg
sub
sbb
out
sti
pusha
fistpll
shr
sub
shlb
bound
mov
stc
dec
arpl
push
add
popf
gs
loop
mov
inc
sub
loop
dec
int
aam
xor
bnd
out
push
cmpsb
outsl
add
adc
arpl
out
adc
adc
jbe
push
mov
mov
js
nop
ss
movsb
mov
incl
addb
lcall
test
dec
jmp
pop
cwtl
lret
ja
mov
fstps
test
xchg
push
cmp
fstl
mov
fwait
push
dec
dec
pop
lods
cmc
call
fidivl
insb
addb
ja
rcl
shl
mov
dec
loope
dec
hlt
int
mov
pop
call
int3
shl
push
movsb
push
pusha
divb
out
iret
pop
pop
and
mov
push
jl
ret
lret
or
sbb
pop
dec
adc
jge
or
test
jo
lods
fs
aas
sbb
add
aam
lods
mov
push
jae
std
jns
scas
cli
jecxz
and
call
jne
push
xchg
xchg
cmc
ficoml
push
outsb
or
fimuls
xchg
fdivrp
mov
jecxz
test
adc
loope
adc
mov
inc
lods
sbb
fcmovne
sbb
mov
mov
stc
test
pusha
lea
scas
push
jp
fbld
stos
cmp
insl
inc
and
pop
enter
and
imul
jo
or
lret
add
dec
jmp
mov
arpl
pop
sub
test
dec
lds
or
shl
cmp
xchg
pop
mov
push
insl
mov
adc
ljmp
dec
addr16
sub
adc
inc
mov
sar
lods
into
dec
dec
adc
cld
bound
dec
imul
enter
mov
pop
arpl
std
arpl
aaa
or
mov
jbe
mov
ja
ss
fmuls
out
cmp
popf
mov
out
mov
xchg
es
jno
inc
testl
push
xchg
repnz
inc
push
xchg
xor
repnz
mov
mov
aad
orl
cmp
loopne
lock
lea
popa
mov
ds
push
cli
dec
dec
je
js
sub
mov
pop
fisttps
add
sub
mov
rclb
hlt
mov
roll
xchg
dec
imul
push
fcmovu
notb
inc
inc
test
mov
inc
sahf
stos
mov
adc
fsubs
cmovb
daa
mov
mov
test
call
inc
enter
jle
addl
jmp
outsb
add
cmp
pop
cmp
js
jnp
test
and
cli
xor
mov
lcall
lret
add
out
jbe
inc
push
add
push
mov
outsb
mov
aad
pop
or
xchg
ret
push
adc
or
popa
xor
xor
push
jbe
push
adc
add
dec
xor
push
inc
sahf
in
mov
sti
fimuls
cltd
push
jp
cli
insb
dec
xor
ja
movsl
pop
pop
addr16
and
inc
test
icebp
lret
lcall
add
jno
lea
pop
mov
jl
mov
jmp
pop
loop
fstps
dec
outsl
out
mov
or
pusha
scas
inc
jmp
inc
test
int3
inc
add
iret
setnp
mov
int
xchg
inc
xchg
js
cs
lea
sahf
subb
mov
lods
inc
pop
push
std
ljmp
rcl
pop
out
mov
sub
sub
pushf
call
stos
dec
mov
lret
mov
jns
loop
jnp
push
stc
hlt
mov
imul
inc
sahf
sti
outsb
loope
int3
cmc
shl
arpl
ja
pushf
lods
inc
shrb
nop
and
dec
in
xor
push
mov
loope
movsb
mov
insb
loop
pop
lods
lods
cmp
ss
inc
mov
mov
mov
adc
xchg
mov
pusha
nop
popa
divb
xchg
inc
cmp
sub
repz
lret
and
in
or
scas
std
fidivrs
mov
xchg
lods
sub
incl
cmp
mov
jge
mov
dec
dec
jmp
cmp
sub
pop
adc
cs
sub
fistpl
loop
jge
jge
neg
js
ljmp
or
cmp
adc
into
daa
mov
or
dec
outsl
pushl
jmp
jmp
sbb
mov
ret
sbb
cmp
cmp
xchg
rcrb
mov
inc
mov
bnd
insl
inc
pusha
jl
bswap
aas
cs
ret
sbb
sbb
int3
mov
mov
cwtl
dec
data16
mov
shl
in
add
cmc
enter
pop
test
scas
test
test
das
mov
scas
rcl
push
in
xor
pushf
lahf
jl
dec
sbb
mov
in
sub
pop
stos
inc
xor
fs
mov
outsl
loop
aad
nop
sbb
test
mov
dec
cmpl
cmpsl
fstl
lcall
inc
xorb
cmp
ja
outsl
je
pop
pop
arpl
mov
sbb
jne
bndstx
clc
outsb
and
and
adc
sub
xchg
mov
cli
mov
xchg
cmp
insb
adc
enter
in
dec
outsb
inc
push
adc
fmuls
pushf
adc
loopne
push
inc
pop
js
jno
add
xchg
in
mov
mov
sti
jmp
and
mov
mov
mov
in
mov
lret
dec
mov
out
int
orl
and
ds
stos
movsl
nop
sub
mov
lahf
ds
ja
out
call
pop
mov
stc
bound
jb
lret
mov
shll
int
outsb
cmp
jecxz
test
xor
adc
and
pop
adc
nop
add
aam
mov
outsl
add
adc
data16
push
popf
hlt
push
stos
and
out
pop
mov
lods
mov
xor
pop
push
jg
addb
add
jmp
jmp
mov
pushl
cwtl
mov
test
and
mov
dec
les
jl
icebp
add
xchg
dec
test
jmp
and
stc
shrl
push
cs
cmc
scas
das
mov
test
or
pushf
mov
mov
mov
inc
jbe
sub
inc
sarl
add
das
dec
lcall
dec
xchg
or
push
push
fstpt
xor
mov
push
push
loope
fnsetpm(287
dec
inc
jne
repz
pop
movsl
inc
test
negl
xor
imul
inc
fbstp
mov
mov
add
cmp
fisttps
adcb
pusha
dec
js
ja
xor
mov
iret
pop
dec
cmp
ss
xsaves
nop
jg
dec
insl
xor
jb
mov
push
mov
dec
inc
ja
rorl
xchg
pop
or
sbb
in
jae
pop
mov
jno
mov
repnz
sbb
dec
sbb
filds
add
xor
mov
sbb
fs
incb
in
cmc
sub
stos
add
cmp
push
scas
pop
adc
out
or
data16
fisubrl
adc
sbb
sbb
bnd
dec
pop
mov
cltd
jne
arpl
pop
addl
mov
testb
and
adc
xchg
mov
pop
pushf
dec
adc
xorb
mov
loop
shll
add
sub
xchg
mov
popf
and
sub
pop
and
fildll
dec
jge
ss
adc
pop
jge
pop
insl
shr
cmc
lahf
mov
pop
or
in
fwait
push
push
lcall
ja
test
es
add
mov
pop
pop
cmp
jne
xchg
mov
cltd
shll
mov
in
xlat
cld
mov
into
mov
mov
std
xchg
mov
cmp
fcmovu
dec
cmp
mov
shl
xchg
jmp
inc
in
adc
mov
lcall
cmpsb
int
repnz
jbe
mov
mov
mull
mov
pop
add
test
jns
in
stos
push
mov
bound
jns
jb,pn
or
ficompl
adc
les
and
into
xor
mov
inc
add
test
out
pop
rcll
push
outsb
inc
xor
jo
add
and
aad
insl
or
mov
das
sub
gs
push
lret
mov
test
xchg
adc
test
mov
jl
cmc
lret
loopne
es
repnz
mov
loop
xlat
scas
out
lods
xchg
pop
fwait
loop
xchg
cld
popf
fcomps
mov
cmp
sbb
or
in
rorl
lods
mov
add
jmp
inc
pop
jl
inc
mov
adc
inc
lahf
dec
fsubs
stos
or
sbb
lea
push
mov
pop
fcmovbe
fsts
ja
popf
mov
fcoms
mulb
lods
xor
add
inc
jmp
gs
xor
jle
ja
push
cmpsb
in
or
cmp
cwtl
in
lock
sub
insl
or
bound
out
inc
imul
daa
xor
mov
ret
jge
mov
fisubrl
inc
aas
sbb
jnp
mov
cwtl
add
cmp
popa
ljmp
mov
mov
push
mov
dec
loop
jl
movsb
mov
mov
gs
inc
and
scas
mov
cmpsb
push
add
subl
push
xor
or
push
mov
mov
pop
int3
inc
mov
mov
sbb
test
and
pusha
popl
pop
loope
adc
mov
adc
cmp
mov
scas
std
adc
std
xlat
xchg
xor
jmp
jb
sub
push
jg
ficoms
popa
bound
aaa
push
negb
jne
iret
xchg
and
dec
or
mov
inc
push
pop
pop
xchg
stc
fs
cli
daa
adcl
shl
push
ljmp
sbb
shrl
jns
out
sbb
ficompl
sub
rcr
stos
and
aam
and
inc
sti
insb
test
repnz
mov
add
flds
xchg
fcoml
xchg
data16
jecxz
movsb
jge
sti
sbb
leave
imul
or
fidivrl
add
cld
adc
sub
and
xchg
dec
scas
mov
or
sbb
shll
sub
push
fmuls
sub
mov
popf
fdivr
adc
loopne
sbb
in
xor
imul
popf
fistl
arpl
int3
test
pop
hlt
mov
imul
int3
ds
xor
dec
sub
popf
or
stos
xorb
stc
mov
adc
sub
sbb
outsb
xchg
idiv
loope
inc
cmp
pop
fiadds
loop
dec
mov
popf
dec
adcb
jmp
mov
inc
in
pop
mov
rolb
test
out
int
rcr
mov
jecxz
les
es
inc
lods
jne
lock
lahf
dec
shrl
mov
push
cmpsl
pop
or
pop
roll
add
adc
cmp
mov
add
js
mov
adc
adc
adc
sahf
in
imul
sub
std
cwtl
insl
lret
fs
xchg
stos
stos
das
push
jnp
in
jb
test
mov
cmp
sub
test
dec
rcr
mov
in
dec
adcl
movsb
out
rol
cmp
jnp
fwait
sbb
push
mov
scas
pop
mov
daa
cmc
incl
push
vmovq
mov
sub
call
inc
xchg
std
adc
daa
out
or
adc
sbbb
push
mov
xchg
fbld
fimull
popf
fstps
sti
scas
ds
xchg
ja
in
cs
xchg
dec
adc
sbb
pusha
fstps
adcl
sbb
in
movsl
fsub
add
jge
jno
lcall
push
and
sub
int
sarl
and
jge
imul
push
loop
push
adc
push
mov
ret
std
mov
pop
repz
andb
cmp
jmp
xchg
and
andb
pop
rcll
mov
mov
pop
in
dec
adc
fbld
jg
xchg
mov
adc
insl
shrb
xchg
fmull
leave
arpl
push
push
lret
call
int3
adc
enter
vandnps
repnz
out
out
movsb
cwtl
mov
in
mov
subl
mov
movlps
in
movsb
flds
mov
lods
aaa
aad
fdiv
jmp
daa
in
mov
and
xchg
mov
mov
popw
adc
mov
mov
add
jne
repz
mov
push
add
cli
ret
adc
lea
fnstsw
ret
fcmovb
in
movsb
push
or
add
xor
or
orl
movsb
dec
js
adc
push
addl
cmp
dec
xchg
es
inc
xor
pusha
jle
stos
sbb
push
inc
enter
sbb
push
loop
lcall
mov
or
jge
dec
dec
xchg
jge
loopne
push
scas
outsb
push
sbb
inc
push
xchg
sub
inc
add
ja
or
xchg
out
inc
ljmp
pop
mov
adc
or
addb
movsb
inc
sub
shlb
jge
int3
rorl
inc
mov
pop
push
adc
pop
cmp
in
rcl
rorb
pop
cmp
das
les
fsubs
fsts
or
add
dec
xor
push
pusha
stc
call
cmp
sahf
inc
in
lahf
mov
cmc
jnp
pcmpeqb
fists
jecxz
jo
dec
mov
and
test
cmp
fistl
xchg
test
push
dec
and
je
imul
cmp
nop
int3
cmpsl
mov
sub
in
loop,pt
bndstx
cmp
dec
or
dec
sahf
cmc
mov
xchg
lret
adc
mov
jecxz
sbb
sbb
mov
xchg
push
imul
mov
pop
out
dec
jo
ror
or
pop
lods
daa
xchg
stc
fistpl
lea
scas
dec
dec
xor
lods
arpl
mov
or
or
push
add
xor
loope
out
fxch
cmp
xchg
fldcw
or
test
jb
fwait
mov
nop
dec
add
inc
xchg
aam
sbb
stos
notb
or
mov
ret
ljmp
shll
dec
add
nop
xchg
pusha
test
int3
dec
fwait
push
sub
mov
dec
cmp
mov
sbb
adc
adc
jno
xchg
mov
mov
ljmp
jo
inc
pop
mov
lahf
fs
out
cld
lea
xor
cmp
and
leave
jbe
pop
bound
cmp
loopne
and
mov
test
mov
xchg
aad
pusha
cmp
pop
push
and
inc
dec
inc
movsl
add
mov
jp
mov
vandpd
fnsave
cld
addr16
icebp
xchg
cmp
sbb
push
pop
mov
out
sub
mov
lret
or
sbb
sti
aad
dec
mov
addb
aas
ret
ret
mov
gs
xchg
push
daa
lods
int3
sub
ljmp
out
push
jnp
push
rcrl
cs
bound
pop
jo
xchg
lods
push
fsubs
add
cmp
inc
mov
aaa
xor
jge
scas
fs
lret
fsub
inc
mov
aad
xor
sarb
popf
push
adc
dec
fucomp
mov
in
and
sbb
scas
or
mov
movsb
shll
mov
test
xchg
rcr
lods
cmpl
popa
cmp
call
xlat
push
push
jecxz
push
add
dec
test
imul
dec
pop
mov
subb
test
jecxz
sbb
jo
lods
push
pop
loop
out
mov
pop
sub
cld
not
les
mov
mov
mov
pop
add
and
cld
pop
adc
js
pop
sub
pop
cld
xchg
adc
mov
cli
stc
call
jmp
xor
xor
insl
stos
add
sbbb
inc
int
dec
andl
or
mov
add
or
inc
out
or
push
test
dec
cmp
mov
out
mov
popf
dec
jno
mov
pop
xor
jae
and
push
dec
insl
sub
fcmovnb
jmp
cld
jecxz
arpl
bound
out
fdivrs
movsl
out
scas
and
sub
adc
sbb
cmpsl
popa
add
jp
addr16
pop
sahf
xor
orb
stc
repz
adc
add
psrlq
cmpsl
mov
or
aad
add
push
jne
stos
aam
scas
out
out
xchg
movsl
mov
decb
mov
adc
push
loopne
or
and
add
xor
or
ret
xchg
add
xchg
inc
and
dec
inc
jo
in
cld
dec
jecxz
repz
shrl
xor
push
test
add
push
cli
fadd
mov
mov
sub
lret
lods
jmp
fsubl
lods
sbb
add
mov
shll
or
iret
xchg
jne
mov
in
xchg
dec
adc
mov
dec
negl
jle
pop
or
clc
inc
les
lds
push
mov
mov
cltd
ret
adc
aad
xchg
dec
jmp
cmp
add
scas
shlb
fldenv
pop
dec
cmp
hlt
bound
and
push
push
jl
fisubs
add
out
out
ds
dec
inc
mov
aas
pop
repz
jae
js
mov
ficoms
ficompl
cwtl
pusha
inc
and
leave
mov
ja
cmc
pop
fidivrl
enter
cmp
dec
fdivs
cli
roll
xchg
dec
lods
fwait
mov
int
movsl
jo
mov
jmp
mov
jae
in
iret
scas
add
pop
je
add
out
stc
sub
scas
lock
cmp
adc
out
ret
inc
sbb
sbb
inc
loope
movsl
sub
push
fnstsw
inc
add
inc
mov
mov
dec
xor
jnp
mov
pop
push
out
andb
or
pop
pop
cmp
adc
xchg
ja
lea
repnz
mov
mov
sarb
outsl
adc
dec
sub
popf
cli
xor
sbb
movb
or
jo
add
push
inc
mov
or
outsb
mov
rcrb
mov
add
dec
jnp
fwait
jo
cli
jns
xor
or
outsl
movb
sarl
mov
pop
out
push
mov
ds
movsb
cmc
or
ficompl
scas
cmpsl
jle
js
jo
push
roll
xchg
insl
mov
js
in
dec
fs
pop
jo
pop
insb
lahf
nopl
int
jg
sbb
cltd
sub
sbbl
sbb
pop
push
mov
add
and
push
xor
addr16
push
imul
test
mov
lfs
pop
mov
movsb
inc
push
inc
pop
cmp
jo
cmp
das
or
bnd
xor
cld
ret
aad
mov
jle
fistps
or
test
adc
shrl
mov
les
lods
xchg
nop
daa
cmp
inc
inc
adc
stos
sbb
adc
mov
aaa
test
mov
xorb
xor
cli
fdivrs
call
pushf
lods
inc
mov
mov
mov
int
add
std
push
pop
add
in
cmpsb
cmp
mov
mov
outsb
imul
push
adc
inc
scas
push
in
and
pop
lea
in
mov
addb
or
outsl
push
add
sar
repz
iret
add
push
jnp
and
xchg
mov
data16
leave
cmp
sbb
imul
pushf
lret
fndisi(8087
test
mov
inc
cmp
aam
cli
lds
test
cmp
repnz
call
sbb
das
mov
ss
mov
das
ret
lods
push
mov
mov
xor
scas
inc
fsubrs
xchg
in
xchg
push
mull
mov
mov
arpl
repz
stos
lock
sub
rorl
or
addl
shl
scas
aaa
adc
xchg
sbb
cmpl
and
mov
pop
pop
mov
ds
nop
pop
push
jae
xor
out
test
data16
mov
sbb
sub
imull
test
scas
movsl
lock
xchg
sar
cmp
cs
xor
popf
lds
jp
test
lods
fistl
push
subb
loop
mov
sub
and
lock
int3
out
lock
inc
lret
adc
push
mov
sbb
jmp
adc
pop
jl
lds
shlb
cmp
mov
and
aad
sar
fs
insl
in
xchg
loope
mov
jne
mov
jl
cmp
out
adc
imul
lock
inc
and
dec
popl
xor
in
sarl
jb
movsb
sub
push
mov
jb
test
lods
hlt
clc
mov
add
xchg
pop
jo
xchg
repnz
dec
stc
mov
push
ret
pop
dec
test
nop
sahf
adc
sbb
fmull
cltd
mov
sti
mov
dec
pop
cwtl
mov
add
mov
xchg
hlt
dec
int3
adc
scas
inc
ja
or
aaa
pop
lret
shlb
aam
pusha
movsl
dec
lret
dec
fs
add
jle
pop
jne
add
data16
or
pcmpgtd
rcrb
das
fistps
sbb
ffree
rolb
test
jmp
test
pop
call
cmpsb
jg
int3
out
in
fstpt
cmpsb
in
push
pop
ljmp
fiadds
lcall
mov
enter
pop
xlat
adc
jbe
xchg
adc
movsb
fiaddl
xor
mov
mov
cmp
rcll
sti
xchg
add
jnp
mov
out
adc
add
add
jmp
lods
cmp
or
scas
jecxz
adc
xor
hlt
xor
push
pop
xchg
push
mov
ss
inc
push
push
push
jo
mov
aad
push
repnz
fwait
in
rolb
inc
pop
adc
outsl
push
insb
shlb
loop
fsub
push
shll
aad
mov
mov
xchg
inc
jmp
push
in
ficoml
sub
frstor
sub
in
jmp
std
mov
iret
xchg
or
cmp
inc
stos
shll
adc
jns
repnz
add
call
stc
fiaddl
cld
mulb
lea
jmp
or
jl
iret
orl
sub
and
mul
ja
cld
hlt
shrb
das
test
sarb
repz
or
mov
jp
int
inc
dec
xchg
gs
fmul
xchg
lret
pusha
or
in
mov
jmp
shr
scas
cmp
inc
scas
outsl
mov
arpl
jne
pop
popf
loopne
sbb
stos
aas
sti
and
mov
lcall
mov
idivb
add
or
fistpl
loop
pop
iret
leave
popa
push
cmpsl
shl
pop
dec
xchg
add
xor
xchg
fwait
cmpsl
es
or
adc
mov
pop
xor
shlb
out
adc
inc
push
push
outsb
mov
adc
call
or
jo
mov
cwtl
push
xor
nop
inc
and
adc
test
xor
cmpb
das
in
push
xchg
and
cmp
jge
xlat
clc
inc
mov
rolb
jmp
xor
call
aas
hlt
dec
jb
adc
pusha
mov
mov
xor
loop
jbe
sub
add
jno
in
xor
add
mov
sub
or
inc
js
fiaddl
xor
sbb
mov
fwait
pop
add
jmp
mov
xorl
adc
out
in
out
push
push
pop
pop
inc
xchg
inc
xchg
jge
lcall
xchg
sar
pop
sub
adc
movsl
data16
pushf
cltd
cmp
jecxz
jbe
loopne
mov
xchg
add
pop
xor
xor
int
jbe
cli
dec
in
jae
stc
sbb
mov
ror
and
cmpsl
mov
aam
inc
js
mov
jle
imul
out
and
outsb
ret
push
mov
jl
sub
inc
push
cmp
ficomps
or
ja
jnp
adc
bound
mov
sbb
xchg
mov
fwait
sahf
cmpsl
xchg
add
jecxz
adc
cmp
std
repnz
test
inc
aad
or
fbstp
movsl
clc
into
scas
cmc
imul
push
shr
repz
add
dec
xor
aaa
inc
repnz
test
pop
mov
cmp
and
rorl
ja
testl
bound
cmpsb
dec
loop
insl
ljmp
xchg
push
dec
cmp
enter
in
roll
push
sbb
xchg
cmpsb
shlb
jge
push
pop
add
mov
or
or
mov
adc
daa
pop
xor
test
add
leave
int
and
and
int
cltd
mov
in
loop
inc
aas
push
jle,pn
cmpsl
inc
add
aaa
xorb
and
mov
clc
aas
rcrl
add
test
and
jne
repnz
jb
or
dec
push
xor
sahf
test
aad
xor
rolb
add
sahf
pushf
enter
cwtl
je
fcoms
ljmp
out
sti
push
cmp
sub
dec
in
and
dec
shl
imul
mov
out
rol
push
inc
bswap
sub
or
push
in
lods
stos
pop
adcl
faddl
cwtl
xor
mov
in
xor
shlb
add
push
int3
mov
push
loopne
cld
jecxz
das
loop
jbe
daa
cmc
mov
cmovns
push
mov
cmp
inc
sub
pop
add
dec
mov
inc
mov
lock
mov
daa
adc
mov
ja
push
inc
dec
xchg
pop
loopne
jns
pop
adc
test
or
outsl
ror
jns
scas
leave
ss
lds
mov
pop
pop
cli
and
mov
jg
sahf
mov
imul
push
aam
fs
in
fs
fldcw
lahf
mov
xor
rol
mov
je
add
mov
or
or
popa
xchg
dec
sbb
mov
lods
sti
idivl
mov
inc
aad
sub
and
mov
xchg
pop
into
repnz
dec
notb
sub
pushf
bound
out
cmp
scas
cltd
mov
pop
scas
pop
push
mov
push
cltd
fucomp
insb
and
sbb
mov
stc
push
daa
lret
dec
xchg
jno
mov
xor
in
test
jmp
xchg
insl
gs
pushf
jb
incl
testl
inc
mov
xchg
inc
mov
imul
jb
sbb
lock
xor
fdivrl
sarl
push
push
mov
dec
dec
push
lods
loope
inc
mov
arpl
fldl2t
aas
mov
pop
iret
ret
pop
hlt
cmp
fwait
lods
adc
pop
sbb
cmp
in
divl
ret
in
daa
scas
inc
cwtl
pop
lcall
repnz
xor
jp
push
xchg
push
lret
in
gs
sub
addr16
cmp
pop
pop
fmull
pop
xlat
jns
imul
jge
ljmp
sbb
cs
jb
xor
sbb
cmpsb
mov
in
mov
das
ret
shll
enter
or
push
or
dec
and
movsl
test
adc
mov
aaa
cld
mov
mov
fistl
imul
mov
inc
dec
call
ds
jge
push
call
sbb
pop
pop
int
push
adc
add
nop
sub
test
or
fwait
cmp
imul
ret
mov
outsb
mov
xchg
sarl
pusha
adc
lahf
cmp
ret
movl
cmpsb
lret
mov
je
cltd
and
rorl
xchg
call
ret
dec
or
pop
clc
pop
pop
sbb
mov
in
jmp
lea
aad
pop
or
not
pop
hlt
sub
sbb
inc
mov
pop
sub
and
cmp
jne
out
pusha
jmp
fs
mov
arpl
xchg
mov
mul
mov
push
ljmp
add
inc
inc
ss
inc
mov
sbb
loope
es
jge
adc
fsubrl
add
loope
mov
shl
cmp
sarb
es
push
sub
sub
gs
cmp
and
mov
hlt
xor
or
popf
xchg
push
fsubl
mov
notb
xchg
push
test
and
pop
jle
mov
inc
loopne
mov
mov
movsl
mov
inc
pushf
cmp
rolb
data16
ss
ret
pop
pop
cmp
fsubr
movsb
sub
inc
imul
mov
push
or
mov
test
add
lret
mov
loope
push
sub
cmp
mov
lret
repz
les
fstpl
dec
adcl
cwtl
mulb
jno
insl
jle
cmp
mov
jl
pop
adc
das
imull
sbb
inc
inc
push
std
aaa
sub
cmpsb
xchg
mov
cmc
scas
idivb
imul
nop
fstpt
dec
out
out
jge
mov
push
imul
outsb
pop
xchg
mov
mov
sub
loop
push
push
xchg
jbe
insl
ror
scas
dec
ja
xchg
mov
jg
iret
cli
push
int
aad
call
imul
mov
in
adc
pop
push
cmp
xchg
lds
push
stc
lret
je
sbb
movsl
mov
popf
mov
sbb
test
cs
out
insl
adc
jbe
push
gs
mov
addr16
dec
dec
cwtl
enter
push
mov
push
shl
adc
pop
push
add
push
ret
daa
fldcw
or
cmp
stos
pop
leave
in
ds
cwtl
fidivrs
scas
inc
repnz
lods
jae
cmp
ret
mov
cmp
cwtl
int
add
repnz
ror
jb
loop
js
je
adc
dec
adcb
test
add
lods
rol
add
sbb
xchg
cmp
pop
cmp
xchg
nop
dec
xchg
or
xchg
push
push
dec
xchg
jge
mov
and
xchg
cmp
mov
rcr
cwtl
in
xchg
mov
adc
fsubs
mov
dec
push
jg
add
sbb
mov
pop
jp
adc
mov
push
outsl
mov
ljmp
int
cmpsl
push
dec
fildl
popf
outsl
mov
and
xlat
and
pop
lods
jge
cmpsl
in
xchg
and
xchg
push
add
push
pop
sub
xchg
test
jo
fstpt
das
mov
xchg
xchg
sbb
fucomi
mov
popa
lea
add
xchg
out
or
push
fistpl
pop
out
adc
hlt
dec
dec
jecxz
gs
pop
cwtl
cmp
mov
xor
pop
orl
xchg
divl
mov
fnstenv
loopne
xor
jae
scas
add
movsb
xchg
sbbb
test
or
ljmp
push
lret
xor
mov
sbb
outsb
push
and
xor
out
sub
xlat
je
cmp
call
pushf
push
ds
cmc
xor
inc
jns
pushf
jg
xchg
push
inc
int3
push
push
pop
fcoms
mov
xor
cld
jbe
jge
mov
inc
loope
and
cwtl
cs
fcoml
movsl
dec
sbb
xchg
out
jl
push
mov
movsb
xchg
rorb
aaa
add
or
mov
add
mov
ljmp
iret
leave
pop
dec
rcrb
iret
dec
loopne
je
xchg
pop
popa
inc
loopne
imulb
rcr
out
test
cmp
xchg
ja
stc
dec
jns
add
or
addl
out
enter
or
movl
pop
adc
mov
pop
cmp
icebp
inc
pushf
pushf
shlb
pop
loope
movsb
xchg
stos
xor
in
pop
xchg
imul
sub
mov
mov
inc
add
cmp
fcmovnb
push
nop
push
sub
jge
ljmp
subl
pop
testl
cmp
lock
inc
add
jle
mov
jae
test
out
lods
xchg
testl
fs
stc
test
sbb
fsubrl
pop
adc
addr16
rcrl
mov
push
dec
dec
outsb
lret
and
sub
or
jge
or
loopne
int
lea
cltd
jbe
xor
out
jmp
pop
dec
fidivrs
or
aaa
mov
arpl
sub
jno
mov
inc
fadds
inc
mov
sbb
sub
loopne
inc
jb
cmpsb
sbb
sbb
cmp
pop
dec
xlat
cwtl
sub
test
pop
mov
jmp
jmp
and
in
hlt
jg
and
mov
outsb
sbb
fbstp
jns
sub
mov
jae
je
popf
pop
pop
out
push
popa
push
mov
xchg
pop
es
cmp
jecxz
inc
add
imul
xor
jb
in
shll
sub
mov
mov
jae
arpl
or
ss
cmpsb
adc
loopne
nop
jnp
pop
xchg
mov
adc
cmp
stos
fwait
rcrb
test
jl
pop
les
cld
insb
shr
ret
hlt
cmp
leave
data16
enter
cmp
add
leave
xor
ss
fs
stc
imul
fildl
lods
xlat
sbb
aad
js
dec
push
stos
jmp
ljmp
pop
cld
mov
cli
pushf
gs
scas
outsb
cli
ret
addr16
cmp
in
in
xor
sahf
cmp
cs
xor
xor
mov
movsl
sbb
xchg
call
int
fiadds
and
imul
es
cmp
sbb
outsb
add
mov
cmp
into
mov
in
xor
insb
popf
mov
dec
sub
mov
lods
mov
bound
hlt
pop
insb
xor
mull
push
test
cmc
sub
mov
jne
xor
stc
xchg
lret
pop
loop
stos
xchg
jmp
pop
sub
lds
imul
divb
mov
sbb
mov
das
push
scas
sbb
fidivl
sub
sbbb
jnp
mov
fwait
in
rolb
js
dec
mov
dec
inc
aad
lea
sar
es
push
adc
inc
cs
push
fsubrl
jbe
add
repz
sbb
imul
pop
das
shlb
or
dec
lret
inc
out
mov
loopne
mov
call
lea
dec
sub
xchg
fsubs
dec
sbb
daa
mov
sarl
mov
dec
sub
sbb
cmp
jge
jecxz
and
ret
adc
pusha
leave
lods
outsb
mov
mov
nop
mov
cmp
push
cwtl
test
push
cmp
xchg
sub
fwait
test
pop
dec
aad
daa
pop
test
outsl
adc
mov
mov
inc
popl
shlb
setne
sahf
cwtl
fcoml
enter
mov
xor
les
shlb
dec
aam
shll
pminsw
insb
mov
repnz
imul
adc
sbb
out
mov
outsb
scas
ret
inc
sbb
cmp
inc
add
imul
test
jbe
xor
mov
jge
in
in
mov
in
adcb
pop
pop
push
outsb
push
mov
jg
clc
inc
enter
movsl
iret
mov
adc
andl
mov
jae
std
psraw
aas
out
lock
xor
jg
cmc
sub
mov
mov
bound
sti
ret
xor
fisttpl
jle
xor
inc
adc
pop
sahf
in
push
in
sub
xchg
mov
paddusw
fsubs
cmc
jnp
scas
cltd
push
mov
dec
cld
pop
lcall
inc
pop
xor
stos
xorb
pop
dec
mov
sub
pop
gs
push
mov
lret
aad
cmp
lds
jno
ljmp
or
rcll
popa
popf
sbbb
add
sbb
jecxz
es
sub
dec
imul
and
shr
mov
mov
push
jmp
jno
dec
fstps
or
mov
sub
xor
fdivs
sbb
adc
sbb
cmpsb
xor
lahf
insb
nop
add
test
rcrl
fcomps
jns
idivb
ss
clc
xor
filds
inc
push
push
ror
fistpll
xor
pusha
push
sbb
in
fcmovnu
out
push
push
bound
sbb
and
or
js
xor
cli
out
daa
pop
and
inc
pop
jno
pop
out
fldl
sub
jns
fists
mov
push
rcll
pandn
mov
int
cmc
lcall
int3
pop
ret
dec
mov
push
push
movsb
and
insb
jg
movsb
add
push
lahf
mov
pop
xchg
out
sub
stos
scas
sub
jbe
out
sbb
pop
dec
sub
es
xor
cs
mov
mov
inc
aad
incb
scas
fisubrl
xlat
mov
add
pop
push
dec
mov
or
jbe
stos
jno
aad
push
mov
jp
dec
sbb
repnz
sub
adc
cmpsl
add
daa
imul
lods
lea
cmpsb
lahf
mov
vpand
repnz
jmp
xchg
and
jbe
mov
push
inc
mov
fsubrp
push
sub
ret
repnz
push
outsb
nop
mov
sub
xchg
push
push
push
inc
inc
xchg
out
psubd
or
xchg
inc
and
mov
outsb
add
push
out
gs
aad
mov
nop
pop
adc
push
cmp
ss
movsl
xor
ja
pop
or
adc
mov
inc
jmp
mov
test
cmp
jmp
sti
or
dec
pop
sbb
aad
inc
mov
adc
lds
pop
stc
inc
in
mov
mov
aad
sub
pop
cmp
fidivrl
out
sbb
dec
imul
loopne
xchg
mov
out
pushl
test
jns
xor
into
push
adc
xchg
icebp
inc
pop
fidivl
cs
cmp
mov
dec
cmc
sub
cmp
je
outsb
fidivrs
out
jge
dec
into
fistps
jb
popf
mov
or
xchg
cli
hlt
push
leave
sti
shlb
xor
lcall
dec
repnz
mov
fimull
cwtl
xor
filds
punpckhdq
sbb
xlat
rorb
inc
iret
lret
cmp
lock
or
or
xchg
outsl
adc
cmp
out
subl
xor
cmp
jp
mov
cmpsb
pop
jnp
mov
xchg
sbb
adc
mov
mov
add
jecxz
lods
mov
jbe
pop
jmp
aad
icebp
stos
xchg
mov
or
sbb
push
fcoml
ja
ficomps
les
xor
insb
dec
sub
pop
lret
add
popf
lret
xchg
icebp
add
cmpsl
add
int3
fistpll
test
dec
out
or
dec
imul
bound
fs
pop
pop
js
aas
lret
orl
or
inc
dec
div
add
lret
add
dec
xor
pushl
jbe
mov
sub
repnz
inc
xchg
andb
mov
push
stos
lahf
test
out
or
inc
pop
mov
xchg
jge
test
pop
or
xchg
adc
lret
imul
dec
fidivl
sbbb
rorl
orb
cmp
js
and
test
jle
in
dec
cmp
xor
push
xor
add
into
negl
shlb
ds
daa
add
and
cmp
cmp
cmp
or
or
lods
push
xchg
mov
push
lock
sti
in
lret
fdivr
clc
out
cmp
sub
jg
into
cmp
push
push
jnp
pop
and
lret
jmp
bound
push
scas
js
pcmpeqw
pushfw
repnz
ja
and
mov
pushf
inc
mov
sub
sbb
adc
jns
mov
orb
xchg
fcomi
cmp
pop
fdivl
pop
popa
mov
sub
dec
fstpl
sbb
pop
lret
movsl
les
pop
test
jg
push
add
mov
in
xchg
in
sub
push
sub
jne
jns
dec
mov
lret
loopne
push
fidivrl
adc
out
out
and
cmp
inc
or
ljmp
jecxz
mov
daa
sbb
pushl
add
test
lods
jo
inc
cmp
pop
test
or
sub
xlat
rclb
dec
pop
gs
iret
sbb
cmp
stos
shll
and
ljmp
cmpsb
sbb
mov
jmp
xchg
adc
mov
and
mov
sub
dec
jne
cmpsl
out
sarb
push
das
dec
shlb
ljmp
in
pop
loope
fdivl
mov
flds
xor
movsl
shr
loope
outsl
or
mov
dec
mov
out
xorl
add
stc
sbb
aam
and
jp
ss
sbb
scas
pop
in
pop
adc
lcall
jns
imul
addr16
mov
or
aaa
dec
les
mov
sbb
adc
roll
lahf
negb
inc
pop
pop
int
xchg
jl
in
mov
xchg
notl
int
mov
fstl
int3
dec
xchg
jmp
data16
push
imulb
nop
xchg
ljmp
push
popf
out
push
fs
pop
push
mov
or
jae
lock
orb
imul
cwtl
and
call
mov
inc
pop
lret
mov
repz
mov
outsl
push
jmp
xor
in
dec
mov
hlt
aam
out
dec
scas
lods
pop
sub
mov
in
push
imul
cld
jp
cmpsl
scas
icebp
call
enter
or
and
repz
mov
adc
pop
push
repz
xchg
xor
and
pusha
push
mov
xchg
mov
sub
sub
dec
mov
mov
orb
cmpsb
mov
xchg
sbb
ret
fmuls
jg
inc
xchg
inc
std
iret
xchg
xor
xchg
dec
xchg
inc
insl
cmp
lret
cmc
insb
idiv
add
xchg
cmp
lods
push
cmp
iret
pop
iret
xor
mov
mov
inc
pxor
inc
inc
xchg
xor
jge
test
rcl
sub
cld
incb
sbb
and
push
test
jle
push
adc
subl
jg
je
pop
xor
loope
jns
xchg
jl
mov
mov
fucom
loop
loop
ud2
push
insb
call
mov
loopne
lret
mov
ja
mov
jb
mov
xor
pushf
mov
gs
mov
add
movsb
js
lret
mov
repz
lds
push
add
out
flds
mov
dec
aad
and
cmp
mov
test
jle
push
mov
lcall
iret
in
push
xchg
dec
sbb
jmp
out
ds
fcmovne
movsl
push
pop
xor
mov
dec
popf
aas
shrl
iret
cld
call
sti
mov
jb
mov
test
fcom
push
push
cmp
in
lock
xchg
jnp
mov
lea
fcoms
jbe
arpl
pop
xchg
das
mov
dec
dec
scas
adcb
shlb
add
ret
xor
clc
pusha
inc
mov
loopne
cmpsb
mov
push
xchg
cli
jmp
jge
cs
fs
sti
int
pop
pop
push
sbb
aam
add
scas
cs
dec
pushf
cmp
lods
fildl
mov
outsb
or
cmpsb
adc
icebp
xchg
pushf
jno
fs
push
or
ljmp
inc
bound
and
inc
or
sbb
mov
mov
dec
xchg
mov
and
pop
sub
cmp
sbb
cli
xchg
sub
rclb
pop
in
jb
adc
jb
push
add
add
add
cltd
insl
jne
ret
inc
add
mov
add
xchg
jp
leave
sbb
das
pop
xchg
add
ss
and
sbb
fnstcw
and
cltd
push
xor
pop
outsl
sub
or
mov
pop
sub
xlat
cmpsl
sbbb
mov
and
cltd
pop
ss
in
sbb
inc
mov
lods
pusha
adc
lea
xor
mov
push
jnp
je
push
cmpsl
xchg
sbb
pop
pop
pushf
xchg
push
nop
popf
scas
sub
int
stos
fsubs
ffreep
ficoms
hlt
jae
hlt
aas
jecxz
jo
add
adc
int
orb
fldcw
pusha
mov
pop
push
lock
imul
push
mov
cmp
mov
mov
pop
cld
add
inc
sbbl
mov
rep
shlb
xor
test
bound
xchg
fdivl
pop
cld
xchg
push
shll
fwait
imul
ret
inc
in
mov
clc
add
and
popf
orb
lock
pop
adc
stos
mov
or
sbb
popa
subl
cs
push
cmp
lods
add
ret
fwait
mov
insl
loopne
adc
clc
fs
test
adc
sbb
fs
rorb
pop
xor
sub
mov
mov
sahf
enter
mov
stos
fadd
mov
jmp
push
cld
stc
mov
sub
fs
jno
pop
mov
pop
imul
sahf
out
push
in
je
inc
lods
xchg
or
jmp
adc
sub
out
mov
icebp
pop
inc
sarb
dec
cmpsb
xchg
rcrl
xchg
and
jnp
stc
mov
idivb
inc
scas
ss
cld
test
decl
aad
push
lods
scas
xchg
cwtl
and
sbb
mov
inc
adc
add
sbb
clc
imul
outsl
fsubs
lods
mov
loop
jno
out
push
mov
aam
sub
pop
and
or
aam
sub
xor
cmp
imul
pop
imul
scas
fcomps
mov
xchg
pop
xor
repnz
cmpl
push
jnp
and
push
add
and
sbb
ret
xor
sbb
mov
jb
ret
mov
sbb
out
insb
in
in
cmpsl
sub
adc
lea
and
or
pop
shll
cmp
repnz
pop
mov
loope
cmp
in
mov
ja
sub
add
lds
bound
inc
sbb
or
imul
daa
notw
in
pushl
sbb
push
in
fmuls
pushf
jb
cltd
nop
icebp
pop
cmc
rcll
add
mov
popa
pop
cmc
lods
xor
or
pop
andb
push
movsl
ret
aaa
adc
dec
fxch
mov
leave
imul
dec
mov
mov
ss
int
mov
mov
ret
outsb
repnz
scas
and
rolb
into
add
bound
push
push
rolb
in
in
aaa
jne
pop
cmpsb
jae
xchg
into
clc
in
orb
push
fsubr
xor
pop
mov
xchg
xor
lds
sbb
dec
aad
loope
pop
shrl
mov
ljmp
and
bound
inc
sbb
hlt
add
push
mov
add
insb
rcll
pop
sub
mov
add
fdivrs
or
in
inc
stos
and
mov
mov
decb
push
dec
scas
stc
mov
dec
and
hlt
addr16
push
addb
push
xchg
movl
push
fmul
pop
sahf
leave
stos
ja
push
dec
cmpb
adc
scas
dec
push
and
sbb
jno
int
mov
xchg
negl
jge
hlt
gs
add
xchg
icebp
mov
push
enter
in
pop
mov
js
xor
sub
jl
les
mov
mov
mov
lock
pop
int3
lock
mov
sbb
mov
mov
rcll
js
and
add
lea
sbb
pushf
dec
insb
arpl
jecxz
outsl
std
js
pushf
incb
pop
leave
popa
cltd
imul
dec
lods
inc
mov
ret
adc
sbbb
lcall
xchg
mov
push
fstl
xchg
arpl
enter
mov
jp
jne
test
leave
jnp
insb
data16
jnp
call
jmp
push
mov
scas
je
pop
pop
sub
insl
dec
jp
cmp
ss
push
sbb
adc
adc
pop
push
scas
js
xor
lcall
mov
cmp
addl
int3
jne
pushf
xor
add
lret
hlt
movsb
sub
call
fs
mov
pop
jne
daa
cmp
loope
xor
popf
pushf
mov
clc
push
push
lock
bound
and
mov
mov
sub
add
imul
cs
mov
xor
clc
inc
dec
cmpsb
repz
and
adc
push
mov
mov
xor
adc
scas
jne
adc
icebp
xlat
mov
and
stc
mov
mov
iret
sub
shlb
popf
pusha
or
or
out
popf
sub
jns
int3
ficomps
out
cmc
pop
xchg
pop
xor
pusha
shufps
xchg
jb
ret
xchg
pusha
pop
inc
xchg
aaa
lcall
cmp
pop
popf
into
adc
sbb
mov
out
stos
loopne
adc
icebp
mov
pop
and
mov
test
subl
std
outsb
pusha
xchg
stos
lods
mov
test
pop
sahf
js
les
lcall
dec
std
and
mov
sub
cmc
xchg
dec
xor
sub
movsb
or
cmc
adc
push
and
inc
jle
outsl
mov
cwtl
pop
lods
pop
movsl
std
jp
add
mov
sbb
xor
sahf
fdivr
sub
adc
andb
push
aam
ljmp
mov
bndldx
pop
and
mov
outsb
popf
pushf
xchg
push
jne
push
loop,pt
lret
movsb
push
mov
push
cmpsb
imul
subb
add
xchg
insb
fsubr
or
jp
sbb
jmp
popf
ret
subb
ret
jmp
pusha
push
jno
or
push
push
sti
divb
mov
outsl
xchg
xchg
dec
shrl
jge
test
sbb
xor
and
lods
cmp
mov
sbb
jmp
pop
jno
and
jmp
mov
sarl
mov
enter
sbb
mov
jno
test
addr16
int
test
xor
jnp
enter
test
jbe
add
push
mov
in
pop
cmp
cmp
negb
push
jbe
idivl
fwait
pop
sbb
adc
fisttpll
jno
inc
cmp
mov
or
imul
insb
ljmp
adc
mov
daa
adc
sarl
rorl
mov
sbb
or
push
mov
mov
in
pushf
and
inc
icebp
cltd
xor
std
pop
push
test
inc
and
shll
jecxz
adc
cmpsl
ret
cmp
stos
loop
jecxz
in
push
xchg
aad
cmpsl
and
orb
lahf
les
sub
lea
test
mov
sub
stos
sbb
jbe
test
or
stos
dec
mov
mov
rclb
mov
mov
out
adc
fdiv
cmp
je
roll
push
test
jp
push
mov
scas
addb
add
push
fadds
adc
jp
in
mov
aam
in
stc
inc
and
mov
sahf
negl
out
fdivs
dec
mov
cmpsb
hlt
pusha
inc
out
nop
or
pusha
aaa
sub
mov
into
dec
mov
iret
sub
clc
sub
jge
adc
adc
sub
mov
jg
rcll
push
pop
fistpl
sahf
pop
mov
repnz
inc
hlt
adc
sub
stos
or
push
stc
cmpsb
je
popa
std
nop
add
test
jne
jnp
inc
sub
fmul
sarl
dec
sahf
stos
je
in
jnp
xor
jns
adc
jg
pop
sar
mov
mov
cmp
and
inc
movsb
iret
dec
adc
aad
pop
mov
mov
sti
add
mov
jns
fisubrs
mov
mov
rcll
lock
or
push
inc
push
lods
mov
xchg
sub
out
lret
cld
pop
sub
cmp
data16
mov
enter
lcall
jns
mov
push
sub
jge
sti
inc
and
pop
enter
mov
push
jo
mov
mov
hlt
add
mov
cmc
mov
fcomi
push
js
or
cmp
mov
jg
xchg
outsb
sub
lret
ret
out
addb
cmp
les
jbe
or
loop
add
cmp
inc
adc
stc
pop
push
std
xor
jb
fdivs
adc
adcl
cld
pcmpgtb
mov
cmp
pop
sub
sbb
cwtl
pop
fnsave
int3
mov
xlat
in
pop
push
sub
fimuls
xchg
xor
popf
cmp
inc
xchg
jp
add
imul
mov
es
pop
xor
add
xchg
mov
aaa
dec
clc
movups
out
fcmovnbe
les
aad
fdivl
js
mov
dec
cwtl
pop
fdiv
inc
mov
lods
jp
insl
rcrl
inc
push
inc
pop
cmovnp
iret
xchg
jo
lret
cld
ret
push
adc
mov
loopne
test
pop
ret
lock
mov
cmp
push
std
push
xorl
testl
xor
mov
clc
and
cmp
pop
or
jge
iret
daa
and
dec
lea
xchg
cmpsb
mov
in
inc
mov
sbb
je
sahf
mov
jmp
jmp
inc
push
dec
icebp
or
add
sub
int3
fwait
push
pop
shlb
push
fld
jb
mov
and
sbb
dec
mov
addr16
dec
mov
push
push
lret
adc
dec
test
inc
imul
push
in
idiv
or
push
mov
test
in
in
sahf
sub
sub
jle
rol
push
jecxz
lods
push
pop
shlb
out
push
mov
rclb
stc
arpl
enter
sti
jne
aam
mov
xchg
dec
mov
adc
call
adc
pushf
negl
test
xchg
call
sbb
cmpsb
imul
jnp
inc
mov
jb
pushf
jp
inc
cs
cmp
test
mov
cli
and
sarb
nop
mov
or
rcrb
and
push
mov
mov
pop
sahf
pop
mov
popa
inc
test
pop
add
int
pop
inc
cwtl
mov
cmpsl
ret
jle
push
xor
test
std
rcl
js
insb
out
jge
inc
and
iret
icebp
cmp
lret
xchg
fisubl
inc
fdivrl
outsl
xchg
xor
mov
xchg
mov
push
and
rcll
je
dec
lret
add
ret
imul
lds
pushf
sub
nop
jbe
mov
and
jns
mov
or
repnz
adc
adc
sbb
iret
cwtl
pop
scas
out
out
or
xor
mov
mov
cld
xchg
sbb
divb
sub
fmuls
and
mov
mov
test
xor
shlb
jnp
rolb
dec
rclb
xor
and
lds
add
cmpsb
je
cld
out
stos
repz
clc
fwait
push
jo
and
sahf
cwtl
mov
xor
adc
add
cmpsb
ret
adcb
mov
enter
out
push
ljmp
fcompl
mov
xor
cmp
push
dec
cmp
jg
adc
jb
sbb
mov
scas
xlat
mov
test
sub
push
dec
mov
enter
or
pop
jne
adc
mov
jb
pop
shl
clc
mov
ficoms
loop
movsl
lds
lea
test
jbe
stos
xor
sbb
ljmp
pop
cmp
shrl
roll
inc
mov
mov
fisubs
sub
into
push
js
iret
add
xchg
rcll
push
cwtl
cmpsl
jg
test
cs
loopne
sbb
ss
int
loope
mov
lock
cmp
je
inc
jmp
xor
aam
adc
std
inc
and
std
pop
das
cs
loop
xchg
push
fstps
mov
stc
rcrb
dec
cmpl
cmpb
popf
lods
fiadds
inc
mov
mov
stos
push
mov
xor
in
icebp
pushf
pop
and
mov
mov
xchg
movsb
mov
jne
mov
fs
xor
and
mov
inc
into
cs
pop
adc
enter
pop
mov
fs
sahf
mov
or
into
jecxz
jge
sahf
call
das
xchg
push
test
loopne
xchg
idivb
lahf
fnstcw
jb
gs
pop
and
pop
fisttpl
out
nop
sbb
sub
sub
mov
mov
popa
dec
dec
in
orb
cmp
xor
int
and
lret
and
adc
mov
adc
movsl
frstor
insl
mov
pop
stos
fs
push
inc
pop
push
mov
add
ds
insl
mov
sub
add
stos
xchg
pop
stos
mov
adc
sbb
jl
jo
sub
push
push
xor
ljmp
daa
jp
test
mov
inc
lea
mov
lods
xlat
cvtdq2ps
and
iret
cmp
inc
addl
pop
nop
pop
leave
mov
mov
mov
dec
jecxz
mov
xchg
inc
dec
xor
das
shlb
mov
shrb
insl
out
pop
test
mov
dec
ss
sar
xor
mov
and
inc
out
push
add
xchg
lcall
mov
adc
sub
insb
sbb
push
add
inc
xchg
fdivrs
xor
push
fisttpl
pop
nop
in
mov
clc
or
scas
xor
gs
jg
mov
mov
mov
stos
inc
pusha
push
sub
in
push
pop
mov
adc
mov
aad
clc
cs
je
repnz
aam
and
jle
out
dec
jp
xlat
mov
mov
sub
mov
pop
mov
add
sbb
jno
cmp
out
jb
mov
inc
or
subl
roll
aad
mov
dec
ret
xchg
jae
pop
insl
jmp
dec
xchg
fcomps
sub
mov
add
leave
int
dec
leave
loopne
sti
xchg
das
mov
xchg
lods
mov
cmpsl
popa
roll
or
adc
push
mov
std
dec
aas
outsb
mov
aad
sbb
insl
rcl
or
lds
push
rcrb
fwait
js
pop
je
std
daa
aam
or
bsf
mov
pop
mov
fs
mov
fcmovu
adc
add
jp
sti
jbe
fidivl
dec
push
outsl
add
iret
pop
inc
outsb
pop
push
ljmp
mov
and
cmp
insb
inc
mov
jno
out
rol
mov
pushf
xchg
mov
dec
sub
sti
sub
xor
push
and
pusha
movsb
into
out
dec
or
mov
lods
inc
push
out
enter
jns
daa
add
mov
jl
ds
xchg
hlt
xchg
pop
aas
ja
sub
ljmp
dec
das
fs
dec
add
ror
and
fwait
in
clc
push
fwait
das
dec
in
jne
scas
lret
push
sbb
lea
sbb
dec
test
test
pop
and
pop
shrl
fmull
xor
mov
lea
dec
cmp
scas
aad
cmp
cmp
push
int3
xor
xor
jmp
lods
gs
push
fcompl
fisttps
cmp
add
cmc
and
pop
mov
mov
pop
das
sbb
loope
int3
pop
pop
das
and
les
mov
sub
addl
orb
scas
dec
jnp
dec
shrb
pop
mov
js
mov
jecxz
or
nop
jns
xorb
shll
mov
sbb
add
lods
lods
and
or
push
push
subb
mov
mov
sarb
xor
dec
dec
or
data16
lret
popa
mov
inc
pusha
and
gs
adc
jno
outsl
mov
das
xchg
jecxz
rorb
push
sub
mov
cmp
popa
test
into
and
aaa
aas
sbb
and
add
aam
xchg
loop
sub
mov
test
repz
sbb
xchg
mov
push
cmp
mov
mov
cltd
iret
cmpsb
add
or
leave
stos
inc
push
sub
push
sub
pop
insl
xchg
push
push
xchg
and
xchg
jbe
sub
and
cli
rolb
or
cld
stos
sbb
push
xor
lcall
cmc
dec
lcall
push
mov
cwtl
sub
mov
adc
dec
out
aaa
cmp
mov
sbb
pop
mov
mov
ja
leave
mov
pop
xchg
lahf
inc
pop
inc
in
repnz
inc
rolb
dec
xchg
mov
dec
outsb
cmp
stos
loop
imul
call
pop
movsl
sahf
dec
icebp
xchg
push
int
pusha
shll
mov
call
jne
mov
sbb
aad
pop
pop
cmp
es
and
adc
fisubrl
jle
lock
insl
or
imul
rorl
loope
aas
mov
lcall
mov
jo
clc
gs
outsb
mov
call
dec
cmp
nop
mov
loop
fdivrl
xor
and
lods
cmpsb
add
pop
clc
mov
jl
movsl
lret
dec
jl
mov
lcall
lret
and
dec
add
mov
test
aam
push
sbb
mov
ss
adc
or
clc
cmp
cltd
arpl
adc
js
pop
stc
inc
and
push
fcomip
inc
mov
mov
and
push
cmp
cs
and
push
xor
jge
int
jnp
les
repnz
and
mov
mov
xor
xlat
dec
jbe
shrl
mov
sub
lret
pop
push
adc
lods
inc
ficoml
loopne
cmp
fwait
push
or
cmp
test
or
mov
rolb
mov
xor
cmp
in
insb
mov
mov
gs
sbb
leave
mov
dec
out
cmp
push
pop
sahf
xchg
xlat
fcompl
out
dec
in
fs
lahf
movsb
dec
imul
cmp
mov
pop
and
popa
das
insb
adc
mov
cltd
dec
mov
cmp
incb
aad
pop
aaa
ljmp
mov
xchg
lret
push
mov
mov
cmp
mov
sbb
test
test
jge
out
mov
cltd
xchg
mov
fidivrs
out
mov
outsl
or
mov
mov
gs
add
or
mov
scas
es
dec
lock
cld
pop
xchg
mov
dec
call
call
in
fiadds
add
cmp
and
popa
push
inc
js
inc
test
inc
and
add
insb
xorb
lods
fildll
push
roll
lods
cwtl
stos
insb
mov
repnz
nop
mov
sub
xchg
shrl
addr16
lahf
lret
fisttps
cmpsb
pop
lock
test
sahf
inc
mov
adc
xchg
jns
insl
xchg
mov
js
and
xor
xor
js
cmpsl
mov
stc
aad
adc
mov
mov
and
ljmp
push
cmp
push
or
cmp
gs
jmp
push
adc
xor
add
or
add
mov
out
mov
mov
xchg
and
push
adc
ret
push
js
popa
jae
or
add
dec
inc
es
int3
arpl
lret
add
fisubrl
mov
aam
and
sbb
aam
cmp
mov
lret
fstpt
sbb
lcall
xor
pusha
mov
dec
fs
pushf
fwait
or
xor
or
jge
int3
inc
fcoml
jg
pop
fwait
lods
test
lods
imul
pop
jg
test
outsb
mov
lds
pop
rcll
push
inc
jp
or
push
repnz
pop
xchg
xor
push
loope
dec
aas
movsl
dec
and
mov
lea
sub
mov
or
xchg
lds
sbb
fwait
scas
shll
addr16
push
stos
xor
lods
in
mov
jbe
mov
or
sbb
js
push
xchg
adc
fwait
mov
outsl
sti
aas
xchg
xchg
mov
xor
cmc
nop
xor
mov
int3
xchg
andb
stc
push
enter
insb
add
inc
dec
cmpsb
imul
stc
in
jno
push
and
sub
push
jmp
test
jbe
test
cltd
aad
inc
orl
test
ljmp
jae
cld
push
sbb
push
rcrb
popa
dec
sahf
shrb
mov
sub
imul
xor
neg
dec
sbb
mov
jne
cltd
add
pusha
out
outsb
xor
mov
ret
stos
pushf
mov
or
jne
lds
cmp
stos
aad
lret
in
push
dec
repnz
mov
or
mov
out
fldt
je
and
or
dec
ret
xchg
add
pop
xchg
adc
jbe
js
add
not
jbe
mov
adc
out
sbb
xchg
aaa
das
mov
mov
inc
call
adc
or
fcoml
push
fldcw
push
mov
pop
mov
roll
rol
and
add
cmpsb
lea
lea
cmpsb
stos
mov
ret
mov
ss
fistpl
jl
sub
fs
xorb
lret
inc
shlb
lods
adc
imul
mov
dec
inc
fnstcw
jae
push
dec
in
mov
cltd
into
mov
out
dec
mov
mov
mov
stos
mov
pop
in
and
hlt
mov
mov
or
test
or
xor
mov
dec
dec
lods
sbbl
mov
mov
push
xchg
sbb
push
xchg
stc
cli
nop
test
pop
mov
pop
movsl
and
ret
push
mov
cmp
jl
hlt
xchg
jo
fdivs
stos
cld
mov
jns
into
fadds
jmp
imul
pop
add
pop
decl
fsubs
ljmp
pusha
cmp
std
loopw
and
scas
enter
mov
arpl
push
lea
ja
lret
insb
sbb
mov
fs
fcmovnu
pop
not
enter
out
lods
outsl
push
lahf
xorl
jns
and
call
pushf
in
xlat
sub
pop
jp
stc
mov
cmpsl
jbe
ja
mov
maskmovq
testl
fmull
ja
pop
shll
mov
and
mov
inc
rol
dec
orl
mov
push
ds
mov
xor
pop
dec
inc
shlb
pop
dec
mov
js
mov
popf
aad
mov
loopne
dec
push
jp
cmpb
andb
lcall
inc
push
push
insl
adcb
sti
repnz
int
daa
adc
stos
dec
aad
insb
or
push
in
cmp
insb
nop
push
xchg
into
imul
mov
stos
jge
cld
adc
pop
icebp
leave
repz
adc
sub
ja
in
pop
mov
rorb
iret
xlat
mov
adc
cld
xor
icebp
push
mov
ljmp
jb
adc
inc
cmp
jno
mov
mov
fldl
cmp
aad
xor
adc
outsb
jae
cld
imul
jmp
pop
jecxz
jg
push
inc
mov
inc
test
mov
mov
jb
je
shrl
in
paddw
push
popa
inc
gs
insb
add
sub
xchg
hlt
leave
in
stos
iret
mov
push
and
mov
dec
cmpsl
pop
jg
sarb
pop
subl
mov
sbb
mov
sbb
daa
pop
out
cmc
mov
sbb
push
sub
xchg
hlt
test
sbb
out
xor
leave
aad
scas
push
mov
out
xchg
and
sahf
lcall
push
jp
ret
mov
lret
add
popa
xchg
add
nop
xchg
in
inc
ret
idivl
cld
iret
jl
mov
xorb
out
negb
je
fwait
or
inc
mov
stos
cmp
sahf
enter
mov
lahf
fdiv
sahf
fdivs
roll
test
fisttps
pop
and
cmpsb
pop
cltd
sbb
cmp
push
mov
dec
push
add
out
push
or
stos
sbb
adc
imul
push
cmpl
mov
cmc
jnp
add
jb
inc
cmp
lock
negl
pop
and
xchg
xlat
dec
pushf
ljmp
stos
js
jl
fs
sbb
inc
frstor
repz
push
repz
rclb
cmpsl
inc
adc
inc
and
aas
repz
movsb
stc
lahf
test
movsl
add
repz
movsb
adc
popf
inc
test
jle
mov
loop
and
mov
push
and
lods
scas
or
vorpd
jmp
inc
mov
test
mov
out
sub
ret
cmp
cmpsb
ret
jle
push
dec
loop
insl
mov
xor
subl
repnz
jl
mov
push
mov
in
mov
lret
mov
gs
pop
frstpm(287
and
cmp
hlt
or
adc
cmp
les
clc
jo
test
xchg
and
cmpsb
bswap
roll
jns
lock
stos
fsubs
adc
push
jo
pop
and
jge
mov
fs
push
push
rorb
out
pusha
sbb
dec
fisubs
sub
inc
mov
shll
pop
inc
lods
and
shlb
cmpsl
jnp
add
sbb
adc
jb
xchg
mov
stos
or
mov
lret
andl
dec
je
test
xchg
cli
mov
and
out
jno
fisubrs
or
arpl
push
sub
mov
sbb
insl
jg
pop
adc
push
jne
lcall
adc
sub
mov
aam
pop
loop
mov
xchg
push
fsubrs
ja
test
mov
loope
idivb
inc
inc
add
mov
outsl
sbb
int3
icebp
mov
outsb
xchg
push
adcl
sbb
jmp
xor
add
cmpsb
bound
dec
lret
hlt
mov
cmp
into
inc
xor
push
mov
fiadds
mov
lds
sarb
xchg
fisubl
loop
push
mov
dec
mov
adc
jno
test
test
nop
repz
andl
inc
outsb
mov
cs
fmuls
pop
cmp
enter
shll
jbe
or
jp
call
dec
inc
jae
mov
test
xlat
lret
js
mov
ret
cmc
movsl
xor
rcll
repz
repnz
aaa
cs
mov
adc
adc
fsubs
iret
sub
fldcw
cmc
lcall
inc
dec
inc
movsb
into
jmp
or
mov
or
jae
or
out
push
fs
arpl
xor
dec
loope
aad
add
in
push
xchg
adc
shlb
mov
jge
stc
jmp
cmp
es
xor
popf
inc
les
push
movl
movsl
push
ret
sub
push
imul
iret
mov
xor
nop
mov
rcll
inc
iretw
xor
loopne
mov
outsl
jmp
xor
pop
dec
push
cld
les
cmp
dec
pop
cmp
add
aas
lods
test
add
add
push
adc
dec
imul
jb
push
pop
std
int3
mov
push
sbb
or
dec
sub
stos
out
pop
aaa
pop
lock
cwtl
call
jge
data16
cmp
mov
xchg
sub
dec
add
xchg
xor
mov
jge
lcall
loop
inc
pop
sub
fsts
xor
lret
inc
int
sbb
xchg
int
pop
push
repz
imul
sbb
aam
adc
jmp
sbb
sub
pop
push
sbb
popa
jge
or
xchg
pusha
xor
and
sbb
fsubs
lea
cmpsl
xor
arpl
sub
addr16
lret
xchg
shlb
data16
or
std
add
es
pop
sahf
or
das
insl
jo
sub
aas
jns
jge
adc
pop
arpl
sbb
adc
xchg
int
cmpsb
or
call
mov
test
movsb
jne
stos
ja
call
es
inc
cmp
inc
fmuls
dec
cmp
pop
out
lea
test
pop
jae
outsl
xchg
aas
push
popa
mov
stos
lahf
inc
cmpsb
mov
fsubrp
stc
add
sub
inc
add
jbe
inc
jbe
push
inc
lea
xor
add
lcall
nop
clc
mov
and
sub
add
in
notb
popf
test
frstor
sbb
mov
mov
lcall
cmp
in
repnz
scas
adc
lock
int3
subl
aas
or
lea
in
clc
int3
lret
lods
testl
fs
cwtl
popa
xor
jp
mov
dec
mov
xlat
mov
repz
and
xlat
stc
sbb
cmp
push
dec
sub
sbb
jl
je
loope
stos
lret
mov
sbb
movsl
sbb
sbbb
push
cmpsb
inc
push
outsl
push
das
movsl
cmp
xor
jnp
arpl
mov
in
rol
push
add
out
mov
fldl2e
scas
hlt
xor
loope
add
roll
and
popa
shrb
into
roll
xchg
dec
test
push
cmpsl
scas
pushf
fsubrs
ret
xorb
shrl
fs
and
and
pushf
dec
adc
mov
addr16
xchg
xchg
popa
adc
dec
shll
push
sub
push
pop
loopne
fwait
dec
mov
or
fists
pop
leave
sbbl
sub
sub
sub
mov
mov
shll
cmp
and
sub
cltd
add
adc
fmuls
test
in
in
pushl
mov
pop
xor
lret
enter
nop
int3
and
out
jl
inc
clc
dec
inc
dec
mov
hlt
xor
jp
pop
jne
movsl
sar
dec
add
or
cmp
or
adc
inc
fcoms
outsl
sahf
or
fldl
pop
add
xchg
or
dec
jnp
test
xchg
pop
xchg
lret
and
adc
lds
arpl
nop
rcrb
ds
sahf
or
sarl
cs
push
pushf
ss
cmp
sub
dec
cmp
sbb
inc
xchg
jb
push
xor
rcll
lds
mov
sbb
repz
or
pusha
mov
cltd
pop
adc
les
jl
xchg
pop
mov
push
sub
adc
push
xchg
xor
inc
add
xorl
mov
hlt
sbb
sub
in
mov
push
xchg
fdivl
mov
stc
imul
movsb
push
roll
push
mov
lahf
mov
cld
inc
lcall
in
fldenv
mov
popa
and
test
out
or
pop
and
jl
insb
fnsetpm(287
mov
mov
lds
inc
scas
inc
lock
xchg
cli
cmpsl
lcall
insl
imul
sbb
xor
or
cltd
and
xchg
stos
and
push
rcrb
inc
leave
mov
jno
push
mov
mov
push
mov
cmp
fs
jp
sub
adc
xchg
mov
imul
hlt
std
xchg
orb
jmp
scas
jge
and
mov
mov
andl
stc
mov
test
leave
mov
jmp
mov
outsb
daa
jle
bound
test
orps
pinsrw
arpl
iret
orl
push
popa
or
fidivrs
push
aas
sub
jbe
ret
lcall
rorl
movb
mov
add
xor
xchg
push
lret
pop
push
cmp
imul
and
mov
stos
out
mov
mov
cmp
ss
outsl
cmc
push
sbb
push
xlat
pop
push
pushf
std
push
or
xor
add
xlat
outsb
leave
xchg
jo
sbb
testl
fsubl
mov
repz
popf
pminub
test
cmpl
jno
inc
in
mov
mov
mov
idivb
push
pop
jae
push
mov
cld
jns
sub
inc
dec
inc
push
jb
jb
sub
mov
xchg
hlt
xchg
aam
repz
lock
sahf
jns
xchg
cmpsl
adc
leave
cwtl
mov
aad
inc
rolb
mov
push
inc
push
loopne
fst
sub
daa
stos
cmpsb
or
repz
stc
sahf
stos
test
sbb
cli
push
xchg
test
mov
push
dec
push
fsubl
xor
es
pop
jmp
jnp
das
or
testb
mov
sti
ret
cmp
add
push
push
xor
shll
push
vpunpckldq
and
shl
int
pop
mov
cltd
sbb
arpl
fdivrs
cli
inc
inc
outsl
fisubrl
rol
daa
jecxz
test
mov
xorb
fisttpl
cmp
jmp
iret
ret
gs
xor
shrb
jb
outsb
and
cmp
lods
fidivs
es
sbb
shr
fsubrl
popf
mov
mov
aad
fldcw
cli
jmp
ja
adc
je
std
enter
adc
test
outsb
xchg
out
lds
sub
lea
sbb
sub
sti
popa
inc
inc
loope
leave
xor
popa
push
dec
aas
scas
mov
sbbl
insb
cmp
add
jmp
lock
and
xchg
out
inc
scas
addl
inc
cmpl
cmp
xor
xchg
or
notl
and
dec
pop
out
fs
xchg
push
in
das
rcll
fcoml
and
repnz
nopl
or
pop
enter
outsb
dec
and
add
jge
dec
xorl
jge
pop
std
push
mov
cmp
adc
arpl
jnp
cmp
dec
add
mov
lret
cmc
outsl
add
insl
add
xchg
test
adc
sbb
cmp
jno
scas
movsb
insl
cmp
add
xchg
loope
stc
push
je
xor
es
push
out
mov
mov
movsl
inc
into
add
ljmp
dec
and
mov
or
dec
mov
enter
dec
jmp
fisubrl
adc
xor
fimull
dec
pop
out
icebp
mov
cmpsb
bound
fsubs
popf
mov
inc
int
and
outsl
icebp
repz
xchg
rolb
test
and
data16
adc
adc
data16
and
ret
mov
les
inc
loop
fsts
or
rorl
lds
enter
xor
mov
mov
push
ss
jp
push
sbb
and
pop
loop
dec
arpl
jbe
stc
cmp
repz
aam
sbb
jmp
aaa
sahf
dec
push
out
pusha
out
jge
lcall
mov
sub
out
push
test
pop
or
dec
fldenv
les
pop
cmpsb
push
lods
mov
xchg
out
imul
aaa
add
push
rol
ja
bnd
xchg
mov
xchg
or
mov
jns
or
xchg
scas
loope
sub
rcrl
outsl
je
aad
add
add
mov
stc
pop
push
pop
jno
bound
and
rclb
inc
pop
lods
mov
add
jno
xchg
dec
add
aaa
mov
cmp
push
js
inc
xchg
or
subb
sbb
push
setno
das
mov
or
sub
pop
push
push
pop
or
dec
cmpsl
jmp
or
aas
inc
popa
xorb
jge
cmpsl
mov
lock
push
jnp
push
push
dec
xchg
push
fistpll
mov
push
in
jecxz
sbb
pop
pusha
xchg
adc
pmuludq
sbb
sub
mov
roll
fnstcw
stos
mov
adc
clc
aam
jnp
pop
adc
orl
bsr
mov
fadds
and
cmp
or
in
mov
ss
mov
push
mov
mov
js
pusha
popf
std
xor
fdivl
sub
cmp
repz
dec
sbb
ljmp
mov
push
jne
andb
pop
pop
lret
insl
iret
addl
and
sti
adc
mov
rcr
push
cmp
mov
cmp
pushl
aas
inc
fcompl
push
movsb
push
xchg
aam
lcall
add
xlat
ret
cwtl
mov
lods
add
das
inc
mov
sbb
addr16
or
pop
lods
pop
inc
and
fadds
push
and
into
inc
std
cmc
fildl
push
orb
add
adcb
outsl
out
ret
shll
aas
fsub
call
xor
xor
out
stos
outsb
lods
cwtl
cld
insl
lock
mov
call
dec
mov
jno
loope
cmp
xchg
ss
dec
jle
cli
mov
dec
push
inc
xor
cmpsb
or
push
cmpsl
fidivrl
insb
mull
pop
and
or
mov
movsb
mov
rcl
sti
cmp
clc
mov
lea
scas
jae
mov
add
cmp
out
ret
xor
aad
cmp
add
add
push
sub
or
add
pop
ret
and
mov
push
repnz
push
nop
in
sbb
or
sub
sub
ds
cld
adc
lods
das
dec
push
inc
insb
dec
cwtl
pusha
or
push
pusha
or
mov
ljmp
xchg
mov
pop
int3
addr16
lock
pmaxub
mov
pop
call
insb
cmp
pop
or
xchg
jle
and
pusha
pop
hlt
add
dec
loopne
shr
xor
stos
aaa
cs
fsubr
popa
loop
add
sub
mov
xor
cli
jge
fisubrs
mov
push
cmp
popf
arpl
test
out
movsl
cmpsl
lods
pushf
pop
mov
dec
mov
jmp
push
jae
mov
mov
mov
aas
xor
xor
pop
rorb
adc
xchg
lret
and
sbb
xor
mov
out
pushl
leave
xchg
jb
test
inc
adc
sub
lcall
and
and
aad
mov
imul
imul
iret
leave
pusha
dec
insb
in
or
jb
imul
adcb
inc
int
test
cmp
push
ret
leave
dec
fiaddl
pop
lea
push
xorl
ds
stos
imulb
outsl
lahf
popf
push
xchg
int
jns
mov
hlt
or
cltd
inc
scas
adcb
and
enter
jge
pop
mov
hlt
fimull
mov
sub
mov
jbe
mov
pop
subb
in
in
push
test
cli
iret
lods
add
lcall
stc
inc
into
mov
push
in
aaa
jo
xchg
les
out
in
inc
cltd
cmp
push
mov
mov
hlt
inc
mov
lret
pop
jae
fisttps
decb
aad
or
mov
jne
cli
mul
mov
into
pop
adc
sar
push
mov
xchg
popa
jo
lock
mov
pop
adcl
repnz
ss
inc
cmp
popf
out
repnz
mov
push
mov
scas
js
jmp
adc
aaa
xchg
dec
popf
add
xor
xchg
aam
add
jecxz
xchg
filds
jno
add
adc
xchg
sub
std
fcomp
sbb
jmp
jno
sub
push
jno
std
jmp
stos
sar
lds
push
cld
jns
arpl
mov
stos
cs
mov
adc
xor
mov
jge
mov
mul
sub
xor
cmp
rcl
pop
push
pusha
sbb
aad
pop
lret
fstpt
lahf
call
outsl
and
data16
lods
mov
fcomps
into
rolb
jmp
sub
add
mov
inc
mov
sub
adc
lock
fildll
scas
dec
fisttps
into
outsb
or
add
push
sti
gs
and
pop
cld
xchg
and
push
fadd
jle
sub
andb
fsubrl
mov
cmp
inc
push
leave
or
insb
mov
jnp
pushf
cmp
popf
mov
iret
mov
push
test
push
lock
enter
jno
nop
and
xchg
jmp
shlb
sub
mov
outsl
test
std
jecxz
hlt
rorb
add
jp
xchg
cli
ficompl
jge
shlb
push
mov
mov
inc
and
enter
pushl
scas
fbld
rol
or
loopne
sub
xchg
lret
push
adc
sbb
mov
mov
mov
in
insb
das
jmp
pop
cmpsb
or
fldenv
popa
and
adc
into
xchg
and
arpl
xchg
mov
pop
pop
in
inc
das
es
in
push
cmp
dec
les
lock
callw
imul
bound
pop
fs
and
sub
push
hlt
jae
and
movsl
or
mov
inc
xor
ror
mov
mov
rorl
mov
rclb
std
out
mov
aad
sti
je
jle
jns
and
pushf
aas
and
xchg
addr16
push
xchg
xor
aaa
mov
clc
and
push
xchg
push
adc
lock
mov
pop
ja
aas
roll
addr16
pusha
mov
mov
std
push
and
or
loope
pop
sbb
jle
pop
cmpsb
pop
ds
es
lods
dec
jo
jl
in
push
push
test
jg
js
movsl
mov
push
insl
xchg
sub
jmp
repz
lahf
scas
ret
out
aad
les
mov
idivl
pushl
cmp
insb
nop
cmp
cld
jge
gs
cld
sbb
mov
pop
fistpll
js
sub
movsl
mov
pop
nop
xor
lret
pop
pushf
push
lahf
pop
mov
sub
cmpsb
cmp
push
scas
cmpsl
das
push
cmp
push
fdivr
mov
icebp
aad
fs
sub
or
cmp
dec
fiadds
in
cmpsb
out
jl
insb
xchg
fisttps
xor
mov
test
lods
mov
sbb
rcrl
or
pop
das
les
lds
inc
add
icebp
aas
cmp
xlat
cmp
pop
jl
jl
cmpb
mov
jae
push
adc
sub
push
insl
pushl
cwtl
cltd
push
pusha
cltd
and
das
into
out
add
pop
repnz
out
lods
jl
xchg
in
in
pop
sub
mov
mov
and
jne
out
inc
sub
scas
jmp
cmpsb
iret
mov
mov
xor
dec
sbb
call
xlat
xor
shlb
mov
push
fsts
int
loope
jbe
arpl
xchg
pusha
push
dec
rorb
aad
dec
mov
icebp
shr
sti
cltd
inc
call
aam
dec
inc
cmp
icebp
negb
cmpsb
mov
out
mov
mov
loope
mov
jno
mov
popf
rcl
outsb
test
inc
in
les
insb
lods
icebp
push
mov
push
mov
push
adc
dec
dec
xor
pop
cld
adc
popf
jmp
push
push
icebp
jns
jb
add
mov
and
jp
lds
sbb
dec
mov
ja
jg
push
push
push
or
jbe
pop
jge
mov
pop
aam
xchg
movsb
pop
inc
xlat
cmpsl
inc
cld
xchg
inc
mov
repnz
iret
dec
sbb
lret
jne
pop
sub
mov
xchg
adc
pop
mov
jecxz
ljmp
addr16
cs
inc
push
lods
in
xor
inc
into
mov
pop
out
pop
lock
fbld
into
jae
pop
push
lock
xchg
push
adc
push
loop
pop
push
xor
push
hlt
dec
roll
repz
lret
aaa
add
in
ret
inc
push
mov
test
mov
scas
and
subb
lret
fsubr
cld
xor
fsubrs
outsl
mov
pusha
add
js
adc
jmp
push
dec
xor
or
sub
ficoms
lret
shlb
mov
pop
sub
dec
bnd
dec
inc
adc
in
dec
jmp
gs
inc
jno
sub
and
ficompl
std
pop
dec
leave
sub
push
inc
enter
test
popa
in
test
inc
into
adc
test
inc
inc
lods
cli
adc
mov
push
pop
inc
iret
xor
push
sbb
in
sub
repnz
outsb
push
xor
ror
in
pop
popa
in
jle
call
movsb
sub
out
sub
inc
add
insb
ja
add
or
stos
insl
pop
sar
sbb
shl
fnstenv
push
fcmovu
or
sbb
or
enter
pop
int
jl
pop
iret
adc
clc
int
ret
and
sbb
hlt
pop
andl
scas
shll
int
cltd
mov
xor
ss
dec
dec
movsl
mov
dec
iret
pop
out
inc
in
xlat
addr16
xor
dec
mov
and
mov
and
loopne
and
or
and
stos
shlb
sbb
mov
inc
sub
cwtl
std
ficoml
lret
rcrb
lock
roll
or
xor
stos
or
jg
es
adc
and
mov
std
fcompl
outsl
sahf
cmpb
push
nop
dec
xchg
mov
sahf
mov
mov
mov
and
lods
push
les
or
sbb
fsubs
and
cmp
scas
mov
sbb
jno
push
mov
and
mov
in
adc
lock
pop
out
cltd
ja
fstl
jl
inc
aad
lds
aam
mov
ja
lret
and
push
pop
mov
popa
add
push
out
and
pop
dec
iret
test
mov
jb
push
add
in
pop
sub
jbe
mov
mov
adc
fnsave
rcrb
xchg
pop
dec
daa
ja
lds
push
mov
add
das
adc
cltd
add
outsb
add
adc
in
fwait
arpl
fcoms
lcall
je
push
cltd
pushf
push
gs
fwait
mov
popa
push
aas
movsl
lods
pusha
cmp
shlb
dec
jle,pn
dec
arpl
ret
pop
jnp
aaa
xchg
and
fidivs
insb
out
lret
xor
test
idivb
xor
loopne
js
mov
inc
repnz
xor
shll
and
pop
add
mov
mov
adc
lahf
ret
icebp
loopne
dec
insl
jge
and
aam
cltd
mov
fcomps
cmp
test
push
sbb
roll
shlb
sub
mov
loop
fimull
lret
mov
fistpll
outsl
sarb
mov
sarl
xor
lds
pop
sbb
push
push
push
mov
sbb
popf
loope
loop
scas
push
pop
bound
scas
clc
popf
ja
mov
nop
mov
cwtl
xor
push
lret
pop
jbe
mov
sahf
adc
arpl
jbe
shrb
fucomi
push
icebp
mov
bound
fldl
mov
xchg
cmc
inc
sub
lret
inc
jle
mov
sti
and
cmp
in
lds
cld
jns
mov
scas
jmp
sbb
pop
push
je
push
pop
test
push
mov
fdivs
xlat
repz
xor
insl
sbb
sbb
or
stos
lds
hlt
jp
push
ljmp
mov
test
jns
in
ja
dec
in
push
jecxz
jmp
push
fwait
adcb
lret
std
xor
xor
mov
or
xchg
or
lods
test
aas
push
sbb
dec
dec
scas
adc
jnp
mov
mov
sbb
movsb
mov
or
cmc
xsha256
cmpsb
push
xchg
repnz
stc
int3
cmp
in
flds
mov
and
sub
ss
mov
movsb
test
add
dec
fsubrs
add
xchg
adc
pop
roll
inc
into
lcall
pop
cli
dec
sbb
pusha
xchg
or
jnp
or
rol
mov
fidivrl
and
jns
cltd
push
add
ret
pop
push
xchg
xchg
pop
ret
loop
mov
mov
cs
adc
out
adc
inc
mov
lahf
and
mov
adc
push
adc
mov
dec
enter
imul
fdiv
testl
jns
lcall
xchg
dec
nop
fs
and
out
and
movsb
fs
jg
push
dec
or
cmp
xchg
push
loope
lods
mov
insb
fldenv
lret
push
rol
rcll
daa
and
xlat
mov
jne
test
cli
lret
xchg
sti
stos
mov
pop
stos
jecxz
outsb
pavgb
cli
mov
nop
inc
int
imull
mov
sbb
ret
mov
mov
andl
sbb
out
cmp
lods
mov
popa
cmpsl
mov
ljmp
movsl
dec
mov
inc
outsb
push
loopne
mov
sbb
jge
cwtl
gs
mov
subb
sub
fwait
popa
loopne
fmull
data16
into
add
sub
notl
push
gs
mov
mov
test
into
iret
xchg
cmpsb
lds
mov
mov
lret
push
mov
dec
jle
add
enter
popf
mov
sub
stos
pop
mov
rclb
fdivrl
cmc
or
scas
cmc
sub
ljmp
loop
xchg
pop
ja
sub
adc
insb
adc
es
sbb
push
adc
sbb
out
inc
xorl
mov
cmp
pushf
movsb
adc
dec
int
jge
push
adc
pusha
jmp
notb
addr16
iret
rcl
dec
insb
clc
adcl
cmp
inc
mov
mov
dec
lods
cld
out
fildll
and
mov
or
je
fadds
dec
pop
paddsb
cmpsl
insb
mov
push
jle
push
inc
jno
dec
cs
js
jecxz
push
aaa
ss
and
xor
mov
sub
or
xor
mov
mov
mov
inc
ss
hlt
push
clc
pmaxsw
adc
jbe
dec
out
add
popa
std
lods
inc
int
mov
push
aad
xchg
movsb
lret
mov
mov
ror
push
loopne
cmp
cmpsl
sbb
pop
sbb
jne,pn
test
fs
ja
xchg
repz
inc
scas
cmp
sti
push
fcompl
pop
push
mov
imul
inc
sbb
or
push
and
sti
popa
sbb
mov
pop
lret
jg
push
test
lods
or
mov
es
push
xchg
cmp
sbb
adc
mov
and
xor
pop
push
sub
xor
mov
mov
lea
mov
jno
add
mov
pop
or
lcall
sbb
fisttps
add
add
stos
inc
incl
repnz
fsts
pusha
cltd
fwait
mov
dec
cmpsb
subl
pop
push
push
sub
lea
int3
clc
mov
inc
loopne
data16
out
xchg
jne
mov
push
jo
mov
cld
xchg
sub
pushf
jns
xor
pop
adc
bnd
pop
stos
pop
sbbb
and
aad
jns
jne
mov
ret
aad
dec
hlt
jecxz
test
xchg
outsb
mov
xchg
lea
idivb
add
mov
addb
dec
push
aas
in
movsl
or
mov
and
mov
pop
clc
dec
fsin
repz
push
faddl
cmp
lahf
sub
mov
in
ret
mov
call
mov
jle
cmp
faddl
ja
lret
out
dec
arpl
dec
int3
mov
jmp
inc
fdivrs
jge
ja
sbb
dec
sbb
gs
cld
into
adc
mov
inc
fdivl
or
stos
ds
jb
pop
and
add
ficomps
out
sbb
daa
dec
push
sub
xchg
lea
cs
mov
pop
mov
ror
jnp
loop
std
test
test
or
adc
sbb
adc
pop
test
adc
icebp
or
dec
icebp
sub
pusha
fwait
and
push
out
pop
push
push
test
jmp
lock
push
xor
bnd
adc
loopne
jb
lods
inc
xchg
popa
xor
js
dec
pop
data16
xchg
lret
jge
enter
aad
loopne
xor
fstps
test
in
xchg
lods
cs
mov
mov
out
and
mov
push
sub
cltd
and
imul
mov
popf
jno
into
fisttps
stos
mov
sbb
lods
xchg
dec
outsl
int
popa
cmp
int3
mov
iret
ret
cli
and
sbb
add
adc
jne
inc
aam
shl
shll
sub
aas
dec
decl
and
stos
pop
cmpsl
push
pop
rcrl
loope
mov
lret
push
xor
rcll
repnz
out
shll
adc
scas
cmp
cmp
adc
jae
fnstenv
test
push
dec
cld
sbb
add
and
repz
jg
push
xchg
shrb
or
addr16
fcoms
cmp
inc
adc
sbb
dec
push
lods
mov
icebp
jns
push
push
sbb
xchg
push
xor
imul
int
push
xchg
aam
xor
pushf
out
and
nop
rcrl
and
inc
jmp
in
pop
stc
stos
sarl
ret
or
repz
inc
xchg
inc
loope
inc
cmp
loopne
movsb
mov
and
sbb
add
fldcw
xlat
pop
ja
xchg
movsl
lcall
push
dec
cmp
test
int3
or
mov
mov
lret
xchg
inc
dec
outsb
orl
lret
cmc
cmp
outsl
mov
movl
sub
add
loopne
out
js
push
imul
add
or
ja
push
mov
pusha
cmpsl
rclb
and
lret
lahf
xor
stc
int3
mov
dec
jo
pop
mov
sbb
mov
inc
rorb
push
xor
and
call
scas
pop
pusha
rorl
xor
push
xchg
inc
lret
xchg
and
mov
test
cmc
mov
ret
int3
add
dec
loopne
mov
insl
fnstcw
aaa
shlb
into
xor
sbb
repz
xchg
sbb
mov
sbb
lds
int3
scas
push
pop
mov
jnp
push
push
fldenv
rcl
xchg
icebp
lea
push
jno
ss
arpl
bound
aad
add
fnstenv
pop
mov
cmc
test
sets
xchg
pop
clc
leave
outsl
xchg
out
cmpsl
ljmp
lcall
mov
insb
cltd
cli
shrl
stc
repz
adc
das
das
add
ja
mov
test
rclb
jno
and
and
xchg
or
pop
xchg
dec
pop
or
mov
pop
cmp
push
jae
pusha
imul
cmpsl
repnz
or
cwtl
and
bnd
imul
sub
dec
imul
clc
xchg
out
jnp
mov
sarl
mov
xchg
xchg
mov
xchg
mov
fistpll
stos
scas
jge
ja
bound
mov
mov
ja
cwtl
rol
cmp
mov
int
dec
cli
lods
pop
pusha
and
mov
push
stos
mov
mov
mov
jo
xchg
pop
fadds
fs
jno
into
addr16
out
pop
xor
enter
dec
inc
cwtl
ret
cmc
loopne
lock
es
sub
stos
xchg
notb
shl
sbb
int3
fidivrl
lahf
and
aaa
ss
sbb
ficoms
mov
mov
mov
mov
shll
int3
adc
test
fnstenv
subb
xchg
divl
mov
pop
or
dec
mov
std
scas
pop
stos
dec
sbb
fldcw
or
into
dec
push
fimuls
sub
cmpl
pop
xor
ficoms
fsqrt
pop
mov
and
cli
mov
lock
push
dec
iret
cltd
nop
xor
into
push
push
mov
jnp
dec
jle
and
ret
fnstsw
loope
push
pop
fwait
lret
filds
loop
adc
add
in
dec
mov
jecxz
int
test
jne
adc
adc
enter
rep
pop
shlb
repnz
push
int3
daa
xchg
cltd
pusha
ss
or
inc
sub
fwait
lods
dec
inc
gs
or
cmp
lods
mov
push
xchg
lods
pop
in
mov
cmpsb
addr16
fwait
dec
jbe
fs
imulb
cmp
inc
ficompl
sbb
mov
ja
dec
cmp
jno
lds
xchg
push
push
mov
push
lret
push
daa
je
aaa
in
add
cmpl
cwtl
fld
pop
lea
or
mov
push
mov
pop
push
push
xor
rorb
test
xor
iret
popf
addr16
jo
imull
jmp
jno
mov
mov
mov
xlat
data16
pop
addr16
inc
out
dec
sub
or
xor
xor
roll
gs
out
outsb
and
mov
push
addb
out
inc
mov
push
stc
push
jae
jnp
jg
emms
dec
addr16
inc
loope
imul
repz
sbb
jg
movsb
out
and
mov
inc
loope
or
test
sbb
popf
lods
dec
mov
inc
lret
test
sub
out
pop
out
outsl
cmpsl
pop
out
outsb
movsl
add
mov
mov
int
pop
push
inc
xchg
lahf
dec
pop
push
fmull
push
inc
pop
lods
divb
repnz
shr
int3
dec
push
scas
cmp
inc
ss
mov
pop
lret
sbb
lds
lea
xor
mov
arpl
xchg
fimull
and
scas
or
out
lcall
push
leave
push
cwtl
push
leave
dec
dec
dec
inc
jle
call
std
pop
movsb
sub
iret
cmpsb
out
dec
scas
je
rcrl
fdivs
add
inc
mov
mov
popa
enter
cltd
jae
xor
in
adc
xor
pop
xor
in
mov
inc
mov
cmpsl
add
sub
push
aas
jne
sahf
dec
lds
cmp
stc
outsl
lock
dec
div
jb
pop
or
add
and
cmc
shlb
push
dec
xlat
outsl
nop
rcrl
je
in
sarl
pop
cld
xor
xor
shrb
push
dec
mov
mov
popf
out
mov
add
das
enter
pop
sub
jmp
outsl
int
test
jb
leave
movsl
mov
jno
out
addb
cmp
pushf
jns
in
test
pop
fisubrs
sarb
mov
dec
rolb
adc
out
lock
xor
cwtl
stos
xchg
add
and
shlb
or
fisubl
mov
mov
lods
loop
mov
dec
imul
enter
movsl
mov
into
xor
mov
and
daa
insb
sbb
cmp
and
adc
std
lahf
mov
inc
daa
and
jnp
push
fidivl
aad
andl
pop
adc
cmpb
mov
jb
xor
xchg
or
sub
pop
push
jo
sub
hlt
and
aaa
out
pop
call
cmpsl
std
xor
std
popf
in
js
cmp
clc
data16
jge
jo
test
dec
test
mov
in
mov
sub
xchg
inc
cmpsl
ja
add
sub
xor
lock
popf
mov
movsb
sub
sbb
or
icebp
in
inc
xchg
inc
xchg
aam
pop
icebp
mov
fisubl
jmp
lret
mov
mov
outsb
sub
lea
push
ret
push
push
fcmovnu
jp
out
mov
pop
jno
call
jne
dec
or
sti
decl
scas
jne
es
in
std
sbb
fsubl
fstps
lcall
repnz
pop
ret
mov
les
xchg
pop
mov
inc
mov
std
add
push
mov
pushf
jl
ror
or
stc
addb
rorl
adc
dec
pop
push
bound
lea
push
ss
loopne
repz
lods
jb
lret
es
jle
mov
outsl
adc
inc
lea
sub
add
aas
mov
dec
repz
add
out
pop
dec
nop
lods
imull
sbb
and
adc
lea
sub
sbb
pop
sbb
iret
mov
sbb
jecxz
mov
addr16
es
jbe
das
add
dec
mov
xchg
popa
pop
in
mov
pop
imul
fnstsw
sbb
pop
bound
inc
fbld
repnz
repnz
adc
sbb
daa
fnstsw
dec
cli
clc
inc
movsb
jge
daa
xor
push
addr16
outsb
js
pop
jecxz
jnp
fs
mov
aad
jg
lahf
outsl
pop
xor
fisttpl
arpl
divl
or
inc
dec
jae
pop
or
sbb
add
inc
dec
lock
pop
push
jle
cli
mov
xchg
insb
mov
mov
cmp
ret
and
fbstp
iret
shlb
repnz
xchg
push
jae
or
xchg
jl
and
pop
gs
scas
add
and
pop
aas
sbb
lds
inc
dec
sti
hlt
push
inc
pop
int3
push
inc
stos
cld
mov
push
dec
sbb
add
test
mov
dec
nop
xlat
jmp
imul
lods
push
sbb
pop
mov
sbb
sbbl
xchg
aaa
push
and
sbb
dec
mov
outsl
xchg
aaa
daa
or
out
push
call
xchg
jecxz
pop
ficoml
or
seta
sbb
or
cmp
loope
and
addl
test
xchg
xor
js
sarb
inc
cmp
mov
inc
pop
xor
mov
xchg
push
push
gs
pop
cltd
repz
fisttpll
repnz
xorb
jbe
loopne
out
fimull
incb
jbe
es
xlat
mov
lcall
icebp
cmpsl
sub
dec
popf
add
sub
mov
roll
pop
ret
pop
cmp
mov
push
cmp
cmp
mov
lds
pushf
xchg
xchg
jge
push
insb
fwait
inc
jbe
icebp
mov
pop
mov
mov
adc
imul
xchg
cltd
inc
fwait
lods
jge
mov
or
lods
popl
mov
and
jns
aad
jbe
jp
ja
inc
lahf
sub
xor
loop
mov
push
insl
inc
dec
and
mov
xchg
inc
das
inc
mov
aas
jae
xor
test
inc
mov
out
push
bound
pop
mov
or
ffreep
test
push
pop
adc
testl
push
subl
imul
cmpsb
pusha
xor
lds
and
sbb
mov
sub
sbb
xchg
push
test
lahf
fdivs
inc
push
out
push
jnp
dec
je
inc
or
loopne
jbe
stos
cmp
data16
or
push
jmp
mov
fmul
movsb
arpl
sbb
pop
insl
out
and
mov
fstpt
stos
int
xor
fadds
lock
aam
je
mov
jbe
or
lods
push
mov
sub
and
sbb
xchg
leave
mov
lcall
daa
cs
shl
mov
fwait
sub
push
and
sarl
insl
inc
or
stc
ret
jg
dec
cld
imulb
cs
pusha
enter
jo
jecxz
aaa
in
jge
xor
lock
jae
xor
pop
pop
pop
add
push
mov
dec
lods
mov
sbb
pushl
dec
lods
test
ficomps
lret
pop
pandn
mov
loopne
scas
fwait
sbb
in
ds
mov
jecxz
or
mov
es
adc
or
jmp
jae
iret
mov
aaa
lcall
js
adc
outsl
test
sub
mov
pop
dec
sbb
xor
stos
cmp
aad
jo
jo
or
divb
jnp
cmp
int
jl
mov
inc
shrl
andnps
pop
dec
add
js
andb
xor
js
mov
cmp
invd
in
scas
pushf
lahf
mov
cs
nop
jmp
lods
push
cwtl
jns
jb
sbb
fiaddl
fbstp
rorb
clc
aad
in
mov
jae
and
push
and
push
or
repz
adcl
je
inc
cmc
push
fcomip
sub
aad
shlb
xchg
inc
es
sub
inc
movsb
outsl
insl
scas
dec
fisubl
cmp
xchg
or
fnstenv
sub
cmp
push
xchg
sub
sahf
jb
ffree
or
xor
daa
out
lret
xor
cmpsl
repnz
or
sbb
dec
out
pop
je
sbb
xor
ret
sub
hlt
or
sbb
stc
inc
inc
cmp
inc
testl
push
jle
push
sbb
sub
pop
pusha
in
inc
xchg
subl
xor
dec
and
adc
lahf
jecxz
push
fildl
popa
subl
mov
add
dec
jae
cmpb
or
jle
stos
aas
jp
mov
insb
je
pop
pop
and
dec
int
inc
fldl
hlt
mov
das
jp
mov
popa
add
std
jo
sbb
xchg
pusha
es
ljmp
mov
out
push
cmp
ss
jns
sti
jge
xchg
push
or
test
dec
sbb
cltd
nop
jnp
adc
pusha
icebp
jb
lock
xor
sti
mov
mov
clc
sbb
pop
and
in
fs
push
cmp
insb
je
popf
xor
stc
lcall
jmp
movsl
push
insb
sarl
jne
sub
xor
movsl
add
out
mov
xor
or
push
out
leave
ja
subl
mull
decl
mov
mov
clc
xor
ret
adc
push
mov
out
ds
mov
mulb
call
jl
idivl
cmp
test
jb
mov
sub
fbld
push
scas
lock
std
testl
fcoms
fs
xor
popf
scas
cmp
pop
push
push
inc
gs
sbb
push
jae
sbb
ja
ss
cmp
adc
in
jnp
stos
lret
lds
add
adc
add
fstl
out
daa
mov
adc
shrb
hlt
movsl
out
push
jb
mov
xchg
mulb
dec
iret
outsb
push
sbb
insl
les
sub
jae
inc
lock
cltd
out
testl
addb
iret
rorl
jmp
addl
mov
sarb
jg
popf
push
je
outsl
jne
push
pop
bound
add
push
adc
pop
push
aaa
xchg
push
inc
cmpsl
aad
pop
dec
inc
xor
pop
movsb
aad
lods
test
sarl
ja
in
out
xchg
fists
lea
add
jg
cmp
fisubl
dec
stos
sub
sbb
out
inc
fidivrl
out
mov
shlb
adc
popa
mov
mov
data16
cmp
lret
lea
push
inc
imul
add
into
xor
fcomps
xchg
cli
fwait
aad
inc
mov
sbb
stc
jge
lods
test
popa
out
xchg
shlw
mov
in
test
sbb
inc
xchg
roll
dec
loop
popl
ds
sub
jl
mov
mov
lahf
push
push
fcmovnb
sahf
mov
dec
clc
adc
push
cs
sub
mov
xor
lock
jae
or
test
ret
movsl
xchg
inc
aaa
mov
xchg
mov
popf
inc
mov
loope
adc
push
lcall
inc
mov
jp
mov
xchg
test
je
scas
lds
jge
scas
mov
sbb
es
xor
sbb
cmpsl
mov
mov
cwtl
adc
clc
aad
sahf
mov
adc
gs
jnp
insl
stos
stos
es
sub
pop
sub
pop
pop
xchg
push
xor
jecxz
repz
fildll
fdivl
push
xchg
call
stc
jbe
stos
in
fisubrl
cld
mov
ja
cmp
stos
aad
inc
les
js
adc
push
ja
test
les
addb
mov
in
lds
cmpsl
xchg
cmp
xor
test
cmpsb
add
sbb
mov
mov
add
push
pop
push
stc
adc
xor
shl
rcll
dec
adc
xchg
xor
cmp
jae
sar
hlt
mov
add
int
mov
daa
sbb
add
cmpsl
and
sub
sub
and
sub
sub
pop
inc
sti
xchg
dec
in
mov
sbb
sub
mov
and
add
pushf
add
ficompl
in
sub
fwait
jg
cli
push
nop
sub
jae
gs
decb
mov
xlat
inc
jo
mov
mov
clc
jo
aad
pmulhuw
cmp
adc
add
cs
pop
fwait
out
pop
inc
cmpsb
dec
inc
adcb
and
xor
sub
cs
cmp
xor
mov
xor
jg
push
in
push
js
leave
cmc
lock
fnstenv
incb
xchg
nop
in
dec
adc
sbb
mov
ljmp
pushf
pop
cmp
mov
push
in
dec
push
xchg
xchg
int3
push
fwait
test
out
fstpt
dec
sub
jae
pop
cltd
int
dec
movsb
scas
jg
add
cmp
ss
stos
out
inc
jl
mov
sbb
push
mov
adcb
add
xor
xor
mov
push
mov
stos
fcmovnu
aaa
lds
inc
mov
jbe
or
jmp
stos
push
push
les
std
xchg
out
cmpsl
test
cs
sbb
push
scas
xorb
add
dec
in
xchg
pop
mov
out
adc
in
pop
xor
ljmp
and
mull
cmp
push
and
xchg
jmp
ss
xor
hlt
sub
sbbl
adc
xor
adc
sbb
into
call
mov
pcmpgtd
dec
sub
gs
in
adc
push
jg
inc
mov
fimull
js
stos
xchg
adc
inc
lods
mov
jns
sbb
incb
cmpsb
jg
loope
lods
loope
push
bound
pop
lods
gs
mov
stc
js
jno
sbb
mov
inc
inc
and
or
dec
xchg
jbe
inc
mov
and
stos
fwait
ja
data16
jg
mov
adc
movsb
jg
shll
xor
daa
shrl
int
mov
ficoms
pop
xchg
fninit
inc
gs
dec
xchg
dec
in
addr16
hlt
mov
cs
test
vpsubd
fs
aaa
and
test
sbb
push
pop
inc
insl
jp
push
sub
cmpsl
mov
dec
stos
call
sub
mov
cmpsl
out
add
push
and
cwtl
inc
imul
cmp
jae
orl
mov
scas
aaa
out
pop
lahf
addr16
in
xor
dec
cmp
xchg
and
xchg
mov
psrlw
push
and
mov
in
sub
pusha
loop
and
add
jmp
out
xor
jae
aaa
pop
sbb
lods
ror
mov
pop
push
mov
pushf
xchg
pushf
jno
in
sbb
inc
xchg
in
pop
sbb
mov
mov
cmp
rcll
adc
dec
or
adc
mov
dec
adc
jbe
inc
call
fst
sub
jge
xlat
mov
adc
test
inc
sub
xor
or
and
lcall
mov
jl
pop
std
insl
mov
mov
adcb
out
lret
and
loope
add
jge
sub
add
sbb
mov
subb
pop
lds
mov
mov
test
int
int
sbb
fwait
dec
leave
fistps
lret
pop
and
jmp
xchg
xor
sbbl
pop
pusha
loope
icebp
in
xchg
adc
mov
into
mov
das
adc
rorl
call
ret
stos
in
and
xorl
daa
outsb
rorl
fidivrs
sub
in
inc
mov
iret
push
pushl
mov
xorb
cmp
adc
jle
movsb
stos
ja
fs
aam
icebp
dec
shll
dec
and
dec
lds
push
movl
fcomps
inc
push
ss
fdivrl
loop
xor
mov
lods
adc
mov
rolb
xchg
out
mov
int3
and
pop
in
scas
dec
or
loop
mov
sbb
inc
add
inc
xchg
lock
xchg
sub
mov
stos
xchg
icebp
fwait
dec
stos
lock
in
stos
pop
imulb
mov
lods
in
push
frstor
add
push
adc
push
and
sbb
icebp
aas
cli
sub
inc
movsb
loopne
iret
in
pop
data16
mov
sbb
sar
or
divl
jmp
fcoml
add
dec
xchg
sbbl
cmp
push
dec
aad
fadds
ja
rol
les
lret
jb
adc
cmpb
sar
sti
lret
js
push
push
or
aad
or
cmpsb
pop
test
cmp
cs
push
mov
mov
fldt
push
cmc
or
mov
iret
mov
movsl
call
sub
out
call
sub
repz
out
push
sbb
in
subb
inc
rolb
sub
add
rcl
insl
jmp
bound
xchg
fldl
stc
cwtl
les
roll
mov
in
imul
punpckhwd
jno
call
mov
or
pop
adc
xchg
les
into
pop
loopne
jae
and
xor
add
test
and
cmp
mov
stos
cli
cmpsb
leave
xor
test
xchg
sub
shr
enter
jmp
in
add
repz
sbb
outsl
mov
aam
xchg
stos
sarl
orb
xlat
fbld
movsl
xchg
fnstenv
pop
iret
or
fs
aaa
sub
dec
sti
rcll
insb
fisttpl
push
imul
mov
lods
pop
xchg
and
mull
fneni(8087
fs
es
xor
push
mov
xchg
xchg
sbb
xor
push
test
rcl
mov
pop
jge
and
or
lahf
stos
push
aam
push
mov
scas
xchg
addl
inc
hlt
int
xor
mov
das
ret
or
mov
xor
jle
iret
mov
and
cmp
xchg
lods
cmc
and
out
push
dec
hlt
pop
sti
rcl
mov
add
push
fidivs
xchg
xchg
ror
pop
adc
aad
sar
and
push
push
fisttpl
arpl
mov
and
mov
mov
sahf
mov
sbb
aaa
ja
sub
xor
loopne
inc
pop
std
xor
and
cmovg
shlb
push
daa
or
xor
adc
pop
outsl
push
faddp
outsl
or
inc
in
aas
mov
icebp
and
icebp
insb
stos
into
cmp
and
and
stos
shll
and
ja
js
loope
mov
cwtl
mov
cmp
or
int3
jmp
and
lds
out
jle
imul
inc
sbb
loopne
jmp
inc
mov
into
pop
rorl
gs
mov
call
fcoml
loope
test
and
cmpb
mov
sub
int
cltd
jb
xchg
adc
stos
jb
adc
pop
std
inc
push
mov
sub
mov
fs
mov
jmp
pop
int
ret
cmp
lahf
push
jmp
add
xchg
mov
push
adc
and
mov
inc
dec
imul
push
add
outsb
push
adc
decb
mov
xor
lcall
and
outsl
mov
jmp
pop
adc
pop
ja
and
jb
test
ficompl
daa
pop
mov
lcall
xchg
lret
xchg
fisttpll
push
xchg
fld
jnp
iret
mov
ja
and
xor
pop
mov
push
lret
daa
sahf
dec
fcomps
repnz
pop
mov
pushf
insl
jmp
pop
loope
lret
in
push
icebp
es
imul
lret
mov
dec
mov
pop
mov
aaa
pop
shrl
inc
cwtl
pop
push
pop
leavew
insb
mov
out
lahf
xor
cmp
data16
inc
cmp
pop
sahf
mov
dec
jne
loopne
inc
in
test
mov
cmpsb
rolb
mov
pop
fs
cltd
mov
scas
add
lcall
inc
filds
push
rol
jg
xor
scas
adc
out
pusha
push
inc
cli
xchg
cmp
inc
mov
testl
cwtl
rcl
adc
rcll
sbb
xchg
and
test
std
lcall
gs
dec
cltd
jg
iret
test
xor
sbb
loopne
clc
dec
iret
daa
dec
int
mov
clc
ss
rolb
mov
test
mov
add
stc
repnz
out
inc
push
xor
jnp
mov
adc
lcall
scas
fmull
loop
pop
data16
mov
add
lock
add
mov
dec
hlt
cwtl
mov
cld
pop
subl
jp
dec
xchg
adc
push
push
xchg
xor
lcall
arpl
sbb
dec
stc
lcall
mov
xorl
xor
sbb
stc
test
sti
fwait
movsl
lea
sti
cmp
pop
cmp
and
lods
lods
mov
sub
es
sbb
inc
jmp
jnp
out
push
das
mov
pop
adc
jbe
or
test
fwait
cltd
inc
inc
cli
loopne
sbb
js
nop
ljmp
inc
push
incb
xchg
jo
es
fistpl
sub
mov
inc
sub
out
mov
or
cmpb
dec
mov
xor
cmpl
ret
ljmp
popa
pushf
inc
sub
andl
mov
lds
cmp
shrl
push
or
repnz
mov
xchg
popf
dec
cmp
mov
or
add
stc
in
ret
jge
punpckhwd
mov
jecxz
cmp
push
daa
xor
add
add
jmp
mov
xor
sbb
inc
mov
mov
push
clc
xor
lahf
mov
and
push
cmc
out
mov
xorb
xor
cltd
data16
bound
rorl
popl
call
cmp
and
pop
rolb
ja
add
adc
push
scas
imul
inc
and
sub
aaa
outsl
mov
jl
jne
mov
nop
sbb
aam
scas
inc
mov
sarl
out
in
mov
pop
out
adc
in
pop
mov
enter
push
or
std
sbb
jns
adc
adc
xchg
outsb
iret
and
sti
xchg
pop
adc
pop
adc
lahf
leave
sub
mov
xchg
push
push
jp
popa
in
add
cmpsl
sub
scas
lods
clc
or
jno
inc
movsb
dec
adc
rorb
inc
lahf
imul
mov
mov
pop
sbb
scas
aam
cmpl
push
call
pop
xor
xor
ret
push
mov
je
and
xchg
loopne,pt
loope
pusha
stos
hlt
outsb
push
push
push
cmpsl
or
stos
sti
mov
imul
pop
rcr
mov
xor
dec
sbb
test
scas
dec
mov
mov
sbb
adc
xor
ret
loopne
cmpsb
or
das
stos
or
insl
test
stos
cs
cmp
sub
testl
pushf
lahf
sbb
lds
adc
cmp
arpl
lret
xor
popf
mov
mov
inc
xchg
mov
addr16
dec
xchg
xor
add
xchg
pop
test
fwait
sub
jp
adc
loope
xor
int3
jb
fwait
xchg
dec
test
mov
ret
mov
xchg
mov
outsl
xor
int3
sbb
cmp
jg
loop
repz
jle
xchg
call
fistpll
inc
mov
inc
ljmp
test
das
mov
cmpsb
popf
mov
cs
out
and
mov
cwtl
out
mov
lret
cmc
cmp
xor
xlat
iret
xchg
and
les
or
and
cld
mov
outsl
and
sbb
movsl
aad
loope
fstl
rcrl
je
dec
sbb
cmpsl
xlat
popf
stc
mov
je
add
cld
sub
cmp
add
mov
cmp
push
pop
icebp
movl
repz
pop
xchg
es
mov
xor
or
lds
lret
nop
and
adc
test
or
dec
mov
xor
add
popf
jns
cmp
xchg
mov
or
or
out
fidivs
test
or
jo
gs
fdecstp
dec
fistps
popf
je
insb
movsl
sbb
or
dec
in
sub
mov
cmp
and
cltd
sti
inc
stos
xchg
sbb
dec
sbb
dec
movsb
rcll
adc
and
lcall
adc
and
sbb
xchg
adc
sarb
jne
or
push
in
iret
pusha
fbld
fs
loopne
jo
fistl
add
sbb
jne
mov
xchg
adc
lea
repz
adc
inc
popa
fiaddl
packssdw
test
xchg
mov
bound
or
xor
test
outsb
jns
sti
faddl
jmp
dec
fists
cmp
sub
pop
and
jnp
cmp
mov
or
aam
add
clc
xchg
mov
das
adc
sti
js
push
inc
dec
aaa
int
mov
jmp
mov
mov
jnp
mov
jg
call
adc
mov
and
xchg
pop
add
adc
push
cmp
mov
clc
add
decb
push
sbb
insb
popf
sbb
fmull
xchg
push
mov
inc
xchg
or
inc
push
xor
xor
outsl
pop
inc
xor
mov
sub
test
push
or
or
enter
jns
xchg
int
jmp
sahf
pop
cmp
mov
pushf
dec
popa
pusha
repnz
pop
add
mov
ja
cld
inc
mov
mov
inc
call
add
push
paddq
mov
in
push
aas
pop
es
push
sub
inc
out
test
pop
aas
and
mov
add
lahf
sbb
sbb
mov
fsubrs
sti
sbb
push
cld
bound
mov
and
subb
and
or
jp
cmp
xor
add
dec
jnp
jbe
das
adc
inc
xchg
jmp
add
aas
ret
ljmp
test
popf
xchg
add
or
mov
xchg
push
mov
xor
add
in
shrb
scas
lcall
cli
push
sub
push
pop
ret
lods
xchg
mov
push
sahf
das
sbb
jg
jge
and
or
inc
mov
ret
cmp
mov
mov
mov
hlt
rorl
push
jne
sbb
ljmp
inc
jo
sbb
push
test
mov
jmp
mov
inc
sub
rdpmc
test
es
dec
mov
push
fs
cs
xchg
mov
pushf
sub
ret
xchg
sub
lret
stos
xchg
mov
mov
mov
mov
mov
dec
movsl
push
leave
mov
inc
divw
xchg
add
sbb
xchg
in
push
sbb
xor
cmpsb
fisttps
out
or
xchg
pop
loopne
sbb
jmp
lds
js
imul
cmp
push
mov
pop
cmpsl
push
movsl
jmp
push
mov
std
add
icebp
cmp
dec
cmpsl
push
std
pusha
out
jmp
enter
and
lret
out
mov
clc
push
lods
jl
sub
aas
aas
add
pusha
cli
lea
sbb
inc
clc
les
movsl
andb
cwtl
stos
popa
sbb
mov
mov
push
shll
xorl
shrl
out
inc
daa
fidivrs
pop
stos
fcmove
xchg
pop
das
lock
int
cmc
xchg
clc
sbb
out
mov
popf
fistpll
mov
gs
mov
and
aam
mov
rol
sahf
xchg
sahf
mov
xchg
out
push
push
mov
jmp
out
dec
jg
sub
sub
adc
sbb
mov
xchg
mov
pop
xor
jl
mov
jle
sbb
xchg
xchg
leave
arpl
mov
div
enter
mov
push
jbe
cmp
jne
or
repz
in
wbinvd
and
jecxz
xchg
add
mov
hlt
jbe
dec
inc
or
pop
inc
xor
sahf
addr16
mov
in
push
jnp
inc
add
insl
mov
hlt
push
xor
call
jg
scas
arpl
in
nop
sub
sub
repnz
cmp
movsl
imul
xchg
or
and
popa
lcall
adc
scas
pushf
movsb
outsb
mov
mov
sub
es
mov
outsb
cmp
xor
push
insb
push
in
test
adc
fildl
aaa
sarl
js
fwait
xor
int
mov
mov
mov
rorb
icebp
jae
mov
xchg
fidivrs
insb
sahf
dec
add
sub
rcrb
js
and
das
clc
dec
les
sbb
int
lock
mov
les
mov
pop
sbb
inc
sahf
loop
xor
xor
and
lcall
add
mov
mov
popf
aad
mov
lods
add
and
cmpsl
imul
aam
fisttps
mov
orl
pop
adc
pop
dec
push
dec
rolb
add
jge
cmpb
imul
pop
cmpsl
sub
push
pushf
mov
rcrl
fwait
cwtl
cli
mov
nop
add
jecxz
mov
mov
les
outsb
addr16
loopne
js
pop
pushf
and
pop
mov
jmp
outsb
es
fbld
pop
push
push
in
and
test
mov
xchg
inc
jbe
aas
xor
add
ds
mov
lret
cld
pop
je
call
sub
fimull
fbld
jmp
inc
inc
loope
scas
iret
xchg
add
inc
rol
cltd
push
orl
inc
roll
call
sbb
mov
dec
add
rcrb
sub
jnp
mov
fprem1
sbb
pop
lea
mov
lret
cli
and
subl
add
fstpl
jle
in
push
mov
dec
and
mov
shll
jge
packuswb
xchg
data16
and
push
dec
mov
inc
in
jb
nop
mov
pop
lds
mov
movsb
leave
dec
stc
or
sbb
cmp
push
pop
cmpsb
mov
out
cmp
push
inc
fdivrl
pop
stos
es
push
push
in
mov
mov
push
loope
push
xchg
jb
addb
jecxz
ret
lds
lock
insb
leave
stos
fstpt
rorl
insb
ror
xchg
dec
and
addr16
out
fsubs
inc
push
jp
mov
pushl
rorl
mov
inc
loopne
scas
mov
push
fisubl
xchg
xor
adc
into
dec
jl
out
mov
sub
pop
lods
pop
and
ret
js
sub
mov
daa
or
lods
mov
test
push
outsl
jle
mov
popl
and
cmp
addb
push
das
cmp
xchg
ret
gs
test
mov
mov
xor
fistl
cld
xor
pop
cltd
jl
call
shll
movsb
cmp
mov
shll
push
sbb
or
je
cmp
es
mov
stc
out
stos
push
into
pop
mov
add
push
and
add
mov
idivl
stc
push
mov
je
loopne
jg
sub
sub
sahf
ds
sbb
bound
pusha
fistl
and
or
bnd
cmp
ss
mov
mov
mov
shr
rcrb
adc
inc
push
mov
mov
fwait
adc
and
idiv
push
jo
inc
jne
adc
lret
mov
cld
dec
jo
ret
xchg
repnz
pop
sti
jp
popa
lahf
stc
push
adc
mov
pop
push
add
out
movsb
icebp
std
les
imul
rcll
push
cltd
cmp
lahf
aaa
jecxz
xchg
aas
mov
mov
ja
push
jo
xchg
addr16
andl
fsubs
stos
das
mov
adc
mov
dec
out
fwait
pushf
cld
mov
mov
out
dec
aas
pop
push
push
sbb
add
popf
and
dec
push
stc
and
mov
mov
addb
scas
das
mov
mov
add
loop
call
add
js
int
xor
fnstcw
repnz
nop
xchg
adc
jp
lods
fildl
mov
and
cmp
lcallw
xor
xor
mov
inc
cmpsl
ret
cs
xlat
sub
test
movsl
mov
mov
cmp
clc
shrl
daa
and
mov
pop
inc
das
clc
icebp
mov
jg
dec
out
inc
fcoml
mov
fnsave
aaa
dec
xchg
daa
popf
xchg
inc
jns
or
xor
aam
iret
shrb
mov
dec
cld
nop
cli
dec
and
loopne
lea
lea
cmp
mov
cmp
xor
adc
jo
xchg
adc
mov
jno
sbb
loope
addr16
out
mov
fsts
xorl
sbb
test
push
jns
xchg
inc
xchg
mov
adc
fildl
xchg
jmp
fcomi
std
jb
pop
or
mov
push
push
in
sub
mov
sysenter
ret
test
and
rorl
sti
aas
add
es
shlb
popa
inc
push
leave
mov
sarl
lods
inc
ss
sub
andl
mov
jns
das
fisubrs
inc
shr
push
rcll
push
cmp
lret
adc
xchg
insl
adc
js
test
mov
out
shlb
popf
xchg
mov
sbb
sbb
mov
loop
dec
cmpsb
inc
pop
hlt
lods
and
popf
sub
xor
adc
xchg
lods
cmpsb
cld
lock
jmp
and
add
lret
mov
add
jae
fistpll
xchg
cmc
inc
inc
lock
add
cltd
add
mov
mov
sbbb
jo
shrl
push
push
or
pcmpeqb
sub
xor
xchg
mov
dec
adc
les
lds
or
and
cmp
lods
cltd
out
mov
mov
test
movsl
lcall
pop
out
cmp
addb
mov
daa
int3
cmc
adc
sahf
arpl
sbb
push
ret
pushf
add
ja
jne
movl
lret
xor
loope
xchg
pop
inc
adc
mov
pop
jne
mov
adc
cmpsl
dec
sbb
enter
movsl
hlt
add
cltd
mov
lds
inc
sbb
pushf
add
lret
test
enter
sub
imul
xchg
and
cmp
ds
rolb
mov
inc
pop
cmp
lea
mov
add
mov
dec
push
rcl
in
and
and
lret
ja
xchg
iret
movsl
in
das
sub
dec
mov
test
xchg
fldl
add
arpl
iret
or
jns
xchg
inc
movsb
xor
movsl
fcomip
fwait
test
adc
aaa
cmp
pop
sbb
ss
pushf
and
cmp
sbb
daa
icebp
cmp
stos
dec
aam
negl
pop
xor
pop
xchg
inc
add
xchg
dec
fs
mov
sbb
hlt
fdivl
cs
adc
popa
pop
sub
shrb
subb
vmread
test
repnz
sub
push
mov
xchg
inc
loop
idiv
pop
sbb
cltd
sub
movsb
jne
in
jo
jo
enter
and
push
mov
xchg
jl
or
mov
jo
lods
mov
addr16
fisttps
push
inc
popf
not
repz
push
mov
cmp
mov
loope
dec
roll
in
mov
jbe
js
sub
addl
mov
inc
jae
cs
aad
dec
jbe
xchg
and
cmc
aam
inc
enter
xor
outsb
push
icebp
jnp
xor
out
pop
mov
nop
cmp
mov
inc
dec
cmpsb
test
xchg
push
repnz
mov
scas
sarl
mov
jae
sbb
push
and
lods
inc
cltd
sbb
xor
push
clc
int3
leave
out
pop
xchg
lea
mov
cmp
inc
inc
shlb
mov
outsb
sbb
daa
push
int3
mov
pop
pop
in
fwait
cmp
jne
or
das
cmp
xlat
enter
sbb
stos
push
push
and
sbb
mov
xor
mov
xor
arpl
popf
daa
cmpsb
and
sti
fcmove
into
vmovntps
fdivl
popa
inc
sub
jo
sarl
insl
scas
and
xor
lods
adcl
int3
push
sub
stc
jbe
fimuls
mov
test
stc
fcmovnbe
and
enter
popa
nop
cwtl
sub
or
mov
andl
lcall
bound
dec
jno
repnz
in
enter
inc
sub
jl
out
fwait
insb
or
lcall
rcrb
mov
int3
enter
and
xor
into
shlb
inc
aad
mov
imul
icebp
mov
push
or
fildl
insl
mov
jnp
mov
mov
or
mov
ds
icebp
mov
add
outsl
inc
xchg
jg
dec
xchg
sbb
mov
mov
rclb
shl
dec
adc
adc
daa
test
call
push
das
cld
fld
pminsw
adc
lcall
out
or
mov
jae
negl
std
stc
out
stos
cld
and
mov
imulb
paddusw
or
outsb
xchg
inc
cld
mov
pop
cltd
dec
and
dec
imul
xchg
and
or
sub
out
mov
dec
mov
dec
add
lahf
inc
addb
sbb
inc
ficoml
add
scas
jle
pop
sahf
cwtl
push
lods
lcall
ja
out
jg
shll
imul
enter
xchg
jno
sti
shl
andl
xlat
mov
mov
jb
gs
stc
mov
cli
pop
dec
hlt
test
repnz
inc
xor
dec
xor
mov
test
popf
aaa
mov
loop
popa
idivl
mov
cmp
into
leave
cmpsl
jmp
fwait
movsl
addr16
xlat
lcall
cmpsl
stos
js
jno
ret
cmp
shrl
inc
mov
fidivl
cltd
enter
cmp
das
ja
adc
cmpb
adc
arpl
shr
jp
mov
xchg
push
bound
jecxz
jecxz
xchg
mov
adc
or
mov
loopne
cli
nop
dec
push
mov
js
push
dec
xorl
dec
out
xchg
lret
int3
int
add
inc
add
mov
out
ret
js
xchg
call
mov
xchg
loop
mov
push
cltd
push
fs
callw
insl
dec
iret
pop
adc
stos
xor
mov
mov
shlb
out
mov
adc
mov
mov
int
dec
xor
aaa
gs
mov
shld
sbb
call
xor
jns
and
adc
add
or
cmp
fwait
cmp
push
pop
xchg
cmp
das
sub
push
dec
jne
dec
shll
mov
xlat
mov
pop
pop
gs
addr16
bound
xchg
hlt
xlat
sti
dec
push
dec
mov
xor
icebp
xchg
sbb
imul
xor
mov
insb
xor
imul
xchg
mov
mov
punpcklwd
xchg
mov
stc
xor
mov
adc
sbb
dec
movsl
mov
push
lea
sbb
or
js
aam
iret
dec
or
sbb
jno
adc
mov
xchg
sub
icebp
ja
pop
xor
rol
jp
pop
cmpl
inc
jbe
out
mov
arpl
adc
add
in
sti
shll
pop
inc
and
or
xlat
jns
das
or
jg
push
xor
fs
add
movsb
scas
or
stos
mov
add
and
push
pop
pushf
fwait
cmpsl
sbb
and
jl
push
jae
inc
pop
jl
push
xchg
test
mov
mov
rorl
jno
adc
subb
cmp
shl
cmp
testl
js
dec
sub
cltd
cmp
xchg
push
mov
jb
lods
mov
addr16
inc
test
mov
cmp
cmpsl
andl
repnz
cmc
cmp
pop
in
xchg
and
mov
jns
inc
addr16
jae
mov
sahf
push
cmp
rcll
mov
out
add
stc
inc
arpl
data16
pop
cmpsb
and
push
mov
inc
mov
ret
push
cmpsb
push
mov
mov
in
es
enter
roll
mov
rcr
jp
mov
jmp
mov
ds
leave
mov
insl
dec
mov
das
pop
xor
adc
jnp
jge
mov
fsubl
mov
sbb
push
jge
rolb
cmp
adc
btr
and
divb
mov
jne
imul
mov
xchg
test
push
icebp
fcmovnbe
enter
mov
and
sub
push
push
cmp
inc
lods
pop
jmp
lods
scas
loopne
sbb
cmp
mov
popf
push
mov
stc
sbb
fs
inc
incl
push
xchg
jne
dec
movsl
pop
pop
lcall
cmpsl
mov
scas
rorb
mov
addb
xbegin
hlt
sub
and
and
dec
js
mov
rcrb
mov
arpl
xchg
cmp
mov
lea
cmpsl
fwait
mov
nop
es
stos
push
mov
add
xchg
push
sarb
sub
sub
stos
movsb
mov
mov
call
pop
inc
stc
add
xlat
mov
decb
and
out
loope
jg
jb
jne
adc
xor
lret
imul
dec
pop
ret
and
rorb
pop
pop
lret
mov
bswap
push
addr16
pop
repz
int3
in
cmp
fwait
mov
mov
js
inc
jbe
adc
imul
movsl
loope
out
mov
arpl
daa
cmpsl
in
mov
push
xor
xor
mov
mov
int
lods
ljmp
mov
add
dec
pop
pop
cwtl
dec
or
mov
into
bnd
add
test
cmp
push
movsl
inc
mov
mov
dec
adc
out
or
aam
or
je
std
js
cmp
enter
inc
xchg
rcrb
pushf
in
fdivrp
je
repz
fbld
ss
or
and
jp
and
push
lahf
mov
cltd
sbb
mov
aaa
das
pop
xchg
call
bound
stos
insb
in
lcall
insb
scas
cmpsl
pop
les
in
fstpt
and
sub
scas
xchg
jecxz
sbb
xor
mov
cmc
jmp
push
inc
sahf
pop
inc
jp
movsl
sub
and
fwait
push
stos
mov
cmp
cmp
mov
mov
or
cmp
fsubrs
mov
icebp
js
enter
mov
mov
and
sbb
notl
fwait
mov
shlb
inc
mov
es
cwtl
inc
dec
cmp
inc
imul
xchg
jns
add
lock
movl
mov
lock
stos
lcall
mov
decb
jp
fwait
scas
mov
xor
push
cmpsb
sbb
cmp
cmpsb
insb
push
push
es
jle
inc
xor
cmp
outsb
push
xlat
jle
pop
pop
insl
sub
pop
adc
sahf
or
and
loop
repnz
das
ret
lock
idivl
cld
fimull
loope
mov
pop
leave
ja
cltd
adc
dec
pop
stos
and
dec
clc
icebp
rol
sub
orl
sub
popf
adc
sbb
mov
inc
mov
mulb
leave
jne
lahf
cmp
jl
add
ljmp
mov
xchg
pop
sarl
jge
mov
dec
inc
pop
pop
shlb
movsb
pop
fcmovnb
popa
pop
and
jmp
fcmovu
cmp
cmp
cmp
rorb
push
cmp
fnsave
mov
adc
jnp
enter
mov
push
push
cltd
mov
dec
xlat
scas
mov
aad
ret
imul
cmp
js
pop
popa
or
lcall
movsl
fadd
call
push
jg
sbb
add
js
push
fs
movsl
adc
mov
add
or
sti
fadds
insl
xor
cmp
cs
pop
or
cmp
rclb
ficoms
jno
jb
sarl
movsb
mov
push
jg
negl
lods
aaa
pop
jbe
lock
aam
mov
push
test
popf
fsubs
scas
cld
repnz
sub
pop
pop
fnsave
dec
enter
and
ret
or
cli
divl
push
cmpsl
mov
movsb
push
lods
divl
mov
pop
bound
xor
scas
sbb
in
xchg
pop
push
xchg
sub
or
outsb
in
iret
test
fs
jecxz
lret
rorl
xor
and
xchg
mov
sbb
cmp
and
fstpt
mov
inc
add
adc
jbe
pushf
mov
test
in
cmp
divb
adc
sbb
mov
xchg
cwtl
and
ss
xchg
sub
inc
ja
push
add
push
rclb
rclb
push
and
lret
xor
inc
push
push
sbb
aad
shrl
fwait
mov
sbb
mov
in
xor
xchg
daa
add
fldl
icebp
push
and
insb
std
mov
ja
inc
dec
loopne
scas
and
imul
ret
push
into
or
fbld
inc
outsb
scas
cmp
stc
or
cs
negb
js
push
sbb
push
dec
xor
push
lahf
jmp
repz
faddl
loope
hlt
mov
and
adc
add
cmpsl
mov
aad
cmp
stos
lret
mov
add
push
sbb
addr16
shl
add
push
shl
mov
xchg
lods
sub
push
mov
nop
xchg
mov
or
mov
sahf
imul
mov
test
ljmp
leave
cltd
lea
sbbb
jp
in
dec
xchg
or
push
and
push
repz
cmp
sbb
sub
pop
lret
add
push
sub
jg
push
aam
push
in
sub
aad
lahf
add
std
enter
mov
cmp
out
ret
or
push
pop
sbb
add
ucomiss
jbe
dec
inc
xlat
in
pop
jle
cld
dec
push
jl
jae
movsl
adc
mov
sub
add
out
jl
or
nop
xlat
inc
and
cli
cld
lods
or
xchg
mov
jp
lcall
sarb
je
inc
mov
push
fnsave
insl
adc
pop
add
pop
fcomp
sub
ds
repz
scas
js
scas
aas
int3
xor
mov
cmp
repz
xor
mov
push
insl
sub
cltd
popa
mov
ljmp
lds
insb
ljmp
and
clc
shl
pop
cld
cs
push
lea
in
jle
int
movsb
push
fiadds
dec
mov
popf
icebp
mov
lods
jno
inc
lods
arpl
add
xchg
mov
movsl
cli
out
ja
mulb
fldt
xchg
adc
jge
pop
pusha
sarb
insb
cmp
std
pop
orl
xchg
js
cmp
imull
dec
ja
jns
and
cmp
stc
add
jp
loop
mov
sbb
lods
andl
daa
aaa
pop
lods
and
or
sbb
sti
push
fwait
negb
daa
push
icebp
and
std
popf
scas
mov
push
sbb
lret
pop
cmpsb
arpl
xchg
mov
hlt
roll
sub
ljmp
inc
test
or
roll
dec
loopne
or
jno
pop
cli
or
xor
nop
mov
push
xor
js
outsb
sub
scas
or
ljmp
add
pop
fldz
shlb
mov
inc
pushf
and
mov
adc
add
mov
jae
outsl
std
lods
mov
jno
out
mov
xchg
shll
sahf
or
xor
dec
ffree
mov
dec
aad
lahf
adc
mov
aas
mov
xchg
mov
xchg
mov
stos
mov
mov
and
xor
add
cmpsb
push
mov
inc
iret
test
pop
pop
mov
test
inc
lods
popf
mov
sbb
aad
icebp
aas
inc
push
add
mov
mov
sarl
nop
daa
stos
loope
in
mov
clc
mov
icebp
jbe
cwtl
pop
inc
inc
fisubrl
out
out
inc
jbe
stos
mov
out
lcall
xor
rcrl
lret
fdivrl
and
and
outsl
dec
enter
imul
adc
or
pusha
mov
ret
fstl
cvtps2pd
xlat
xchg
pop
in
cmc
sbb
in
mov
in
sti
add
cmp
push
mov
testb
sarb
movsl
xchg
in
in
push
lcall
pusha
mov
mov
pushl
xor
test
cltd
adcl
xchg
mov
cmp
mov
adc
sbb
outsl
test
and
and
mov
mov
rclb
dec
test
sbb
test
inc
aas
xchg
xchg
imull
cld
imul
iret
pushf
aam
in
push
sub
addr16
aam
popf
call
cld
mov
jae
mov
sub
rorl
and
mov
sbb
sub
cld
push
cwtl
adc
mov
in
aaa
dec
cs
int3
cmp
fiaddl
fsubrs
sahf
outsl
divb
movsb
dec
sbb
punpcklwd
push
mov
ljmp
mov
leave
insl
inc
and
notb
mov
fdivrs
sbb
cmpsl
je
lods
in
or
imul
movsb
in
push
mov
in
into
or
mov
into
mov
push
xor
xlat
test
stos
add
in
out
ds
andb
add
aam
dec
add
mov
dec
push
xchg
pop
fsubrl
mov
push
out
push
or
push
and
cltd
daa
push
sub
push
xor
jne
xchg
push
mov
dec
rolb
and
test
push
xor
pushf
repz
clc
cmpsb
mov
data16
lods
ret
xor
adc
xor
push
test
mov
jecxz
or
aad
jns
int
xor
dec
mov
lret
jmp
and
jmp
push
test
in
and
fbld
lret
lahf
jle
sti
sub
mov
mov
icebp
xor
push
mov
into
ret
sub
lods
mov
fsubs
push
and
sbb
adc
mov
pushf
jmp
scas
and
ret
int
popf
adc
cmp
or
mov
rcr
fists
inc
push
pushf
jmp
xchg
pop
loop
roll
mov
iret
and
rclb
ss
or
mov
cmp
add
push
inc
montmul
cmpsb
xlat
movsl
xchg
jb
push
jne
repz
std
sbb
je
aad
das
ret
jne
mov
cli
loope
stos
push
dec
or
sbb
andb
xchg
mov
sbb
cmp
mov
add
push
push
stos
fidivs
mov
cmp
adc
fdivrs
inc
or
pop
xor
jo
add
push
push
xchg
inc
adc
cltd
dec
pop
jmp
fdivl
sbb
call
test
cmp
mov
mov
fiadds
leave
xor
push
call
mov
mov
aam
xlat
xchg
rcrl
test
test
scas
lret
imul
sbb
add
cmp
push
sbbl
jno
ljmp
sub
mov
cmp
jecxz
xchg
inc
hlt
pop
fidivs
add
xchg
es
sbb
stos
lock
jmp
mov
insl
int3
add
into
cltd
call
outsb
sub
push
mov
cmc
jo
addr16
mov
imul
xor
lret
cmpsl
mov
or
std
fwait
pusha
mov
andl
bound
out
mov
fs
push
insb
push
mov
inc
pop
sbb
mov
xor
or
jmp
jne
incb
scas
jns
sub
jecxz
bnd
fadds
xlat
lret
insb
push
pushf
cmpsl
push
cltd
ret
movsl
dec
jb
lods
adc
and
inc
and
fimuls
movsb
fists
adc
nop
sub
outsl
sub
jp
bound
adc
sbb
cmc
mov
je
or
mov
inc
lea
div
sbb
or
mov
popa
fidivrl
mov
faddl
pop
ja
int
mov
inc
inc
push
mov
stos
sbb
jl
hlt
dec
push
push
mov
in
cmp
or
aas
cltd
in
outsl
aaa
cmp
jnp
add
jl
movsb
arpl
jge
or
das
add
sub
mov
or
sarb
out
inc
push
lret
mov
push
push
and
add
add
xlat
ss
sub
insb
lock
jbe
insl
test
inc
clc
test
push
bound
insb
imul
int
dec
mov
je
jecxz
push
sbbb
lcall
add
fsubrp
pop
pop
aaa
jae
dec
and
es
loopne
push
lret
adc
jmp
bound
enter
xor
je
roll
orl
mov
bound
in
xchg
ret
shr
and
das
and
or
cld
push
and
clc
mov
leave
xchg
mov
ljmp
jns
lcall
adc
pusha
mov
movsb
loopne
xchg
cmc
inc
fistl
stc
lret
sahf
cmpsb
sub
roll
sub
in
dec
mov
inc
testl
add
mov
lods
push
add
mov
fistl
adc
outsl
pop
xor
inc
pushf
xlat
sbb
jecxz
dec
es
les
xor
sub
jg
scas
test
sbb
frstor
adc
sarb
mov
pop
popf
adc
out
out
aaa
es
std
popa
and
jg
insl
punpckhbw
in
test
jp
dec
pop
outsl
add
mov
lcall
or
stos
mov
sub
jbe
push
fcompl
pop
sub
cwtl
jb
imul
jecxz
pusha
shrl
das
pop
aas
loopne
jnp
loope
add
imul
movsb
ret
jecxz
mov
ss
pop
pop
push
mov
cmp
mov
jno
mov
xor
mov
push
mov
jns
lods
mov
inc
sub
iret
and
mov
jl
dec
js
cmpsb
jno
xchg
cmp
popf
sub
xchg
mov
jnp
jns
push
fcmovne
js
fs
fbld
insb
cmc
int3
dec
fsubr
cld
rcll
pushf
add
in
into
dec
stos
adc
cmp
fdivr
fiaddl
pop
fwait
dec
outsb
sub
push
add
inc
or
shlb
add
test
pop
cltd
pop
stos
or
adc
inc
icebp
dec
and
into
cmp
or
or
push
mov
lcall
mov
sbb
outsb
inc
cmp
dec
push
push
or
jb
test
inc
lcall
sbb
fmull
xchg
test
stc
sub
rorb
jmp
push
es
xlat
int3
xchg
push
adc
xor
cmp
addr16
dec
and
sub
or
push
idivb
rclb
sub
rcll
sbb
dec
cs
xchg
mov
rcr
push
mov
add
call
loop
and
dec
mov
dec
dec
cmpsb
add
pop
lahf
xorb
jp
pop
xchg
rcrl
js
or
outsl
pop
cmp
inc
aad
jae
mov
inc
icebp
mov
cmpsb
iret
sti
je
mov
mov
in
test
fcompl
in
pop
outsb
sbb
sbb
inc
push
cmc
mov
aam
jb
pop
mov
mov
lods
int3
call
outsl
out
xor
daa
dec
testl
mov
pop
lods
leave
pop
push
int
and
gs
jno
push
popa
push
mov
les
jb
add
push
xchg
sar
clc
shll
sbb
mov
pop
iret
bt
aad
fsubrs
dec
fnstcw
repnz
stos
int
adc
xor
mov
mov
cmp
test
mov
repnz
mov
mov
testb
lcall
lods
xlat
pushf
incb
mov
adc
int
or
lea
addr16
push
jns
mov
pop
aad
xchg
sbb
hlt
push
sub
sarb
stc
inc
cmp
cmp
cwtl
fistl
orl
mov
sbb
dec
jle
fildl
gs
lds
xchg
xchg
arpl
dec
nop
xchg
mov
incl
dec
pop
pop
adc
xor
stos
hlt
testb
idivl
inc
xor
je
repnz
jb
mov
pop
scas
push
lahf
or
mov
cmp
addl
imul
pusha
in
scas
jo
xor
and
cli
push
mov
aaa
cmp
sub
rcrb
testb
icebp
pop
cmc
repz
jo
cli
jmp
or
sbb
push
jb
sub
rorl
jmp
cli
lds
in
sub
pusha
add
push
jno
and
sbb
fstps
lods
mov
mov
and
push
mov
in
std
imul
out
mov
subb
xchg
mov
cmc
xchg
nop
cld
lcall
repz
in
mov
jbe
jne
inc
xchg
lods
push
in
push
repz
dec
in
sub
cmp
dec
cmp
cmpl
dec
jmp
cmpsl
mov
jne
inc
aad
test
and
jnp
cli
mov
movsl
rcll
aam
add
mov
dec
jne
adc
jns
je
adc
sbb
fcompl
mov
loop
push
mov
lds
loop
xchg
bound
out
in
push
testl
jge
subb
popl
lods
or
push
out
lods
adc
add
mov
xor
and
push
xor
aam
mov
shlb
ret
sbb
lods
adc
xchg
jl
mov
insl
and
sub
in
jg
xor
cmp
or
add
repnz
bound
lds
xor
sti
and
in
out
xchg
jo
lea
cmp
xchg
sbb
out
jle
adc
nop
test
or
aad
push
insl
xchg
dec
cmp
ret
dec
add
xchg
push
push
add
test
inc
nop
insb
popa
mov
in
xchg
popf
mov
mov
jae
hlt
adc
repnz
aas
loope
sbb
and
or
xchg
mov
lret
jl
or
and
pop
pusha
xlat
roll
ret
mov
jge
lea
clc
cmc
daa
push
outsl
push
leave
adc
ret
or
mov
pushf
xchg
fsts
xchg
decb
fiadds
repz
add
mov
js
dec
jmp
push
lea
sbb
pop
jne
jns
pop
outsl
cltd
orb
movsb
and
cwtl
arpl
add
mov
adc
add
out
mov
sbb
and
cmc
sub
mov
adc
mov
cmp
or
scas
lahf
push
jecxz
mov
xchg
sarl
aam
cwtl
insb
shl
push
jo
dec
orb
jmp
jb
je
fmull
movsb
xchg
adc
xchg
sub
in
mov
and
gs
in
imul
xchg
cld
aad
mov
and
inc
ficomps
lods
repnz
pusha
inc
dec
and
repnz
jo
fldenv
mov
or
jmp
jb
ror
xchg
adc
mov
hlt
jl
sbb
and
out
dec
jmp
sub
mov
sbb
add
mov
pop
sahf
sub
lods
dec
mov
scas
popa
loope
idivl
in
dec
add
sub
imul
sbb
inc
out
mov
sarb
pop
cmpl
jns
fs
aam
cmp
aad
mov
add
loopne
int3
inc
ret
loope
ja
jns
xchg
adc
lcall
jnp
aaa
gs
and
stos
arpl
js
and
daa
fwait
xor
cli
scas
xlat
mov
mov
push
in
sub
addb
testl
outsl
xchg
cltd
push
cmpl
push
pop
mov
leave
inc
pop
and
dec
call
mov
xor
loop
mov
mov
rclb
outsb
adc
shrb
cmpsl
jl
aaa
ljmp
mov
scas
mov
outsb
and
pop
mov
test
scas
mov
shlb
ljmp
dec
ljmp
or
ret
push
scas
fstps
mov
movsb
jbe
fmuls
inc
cld
xchg
xchg
cmp
fcmovu
dec
testb
stc
scas
xchg
movsl
mov
inc
dec
ss
jmp
pop
cmp
arpl
mov
cmp
inc
dec
adc
cmp
xor
adc
shll
add
sbb
mov
loop
push
test
push
cmp
movsl
aaa
push
mov
aaa
insl
mov
and
and
xlat
xchg
sub
stc
aad
pop
out
mov
aad
aas
movsb
xor
out
movsl
dec
or
ljmp
push
inc
xchg
xor
fildll
or
cmp
sbb
bnd
in
stc
mov
mov
and
gs
push
out
out
call
dec
mov
nop
push
mov
clc
les
ds
je
jb
and
sbb
addr16
or
mov
or
push
mov
fwait
cwtl
mov
fwait
outsb
aaa
xchg
shlb
adc
xchg
jns
cmpsb
jae
mull
mov
popf
jecxz
push
cmp
push
xor
fimull
mov
inc
leave
push
pop
aas
fmul
outsb
mov
jae
sub
test
popa
xchg
lock
loop
sbb
test
hlt
shll
repz
pop
cmp
ljmp
pop
sbb
sub
inc
xchg
pusha
xchg
adc
in
cwtl
orb
out
inc
mov
jae
mov
mov
loopne
inc
and
pop
jmp
or
pop
dec
cltd
lock
mov
jmp
mov
scas
sbb
ret
push
push
add
ds
inc
mov
xor
pop
push
fsubs
leave
xor
mov
dec
rcr
and
jne
ljmp
adc
jl
ja
bound
jle
cmp
cwtl
adc
xlat
mov
mov
lret
mov
sub
imul
pop
fistpll
inc
out
xchg
lahf
es
sub
xchg
add
loopne
arpl
mov
out
cwtl
cmp
add
cli
mov
stos
ret
dec
jge
sbb
sbb
imul
pop
int3
popa
aaa
fsubrp
or
jns
dec
mov
in
movsb
aas
aas
pop
cmpsl
movsl
jmp
ret
call
jns
mov
test
lret
jle
sub
mov
leave
mul
imul
mov
insb
fmull
mov
inc
add
push
or
or
dec
rcrb
inc
fisttps
cmp
cmpsb
pop
xchg
sarb
aas
inc
dec
and
out
int
push
mov
xchg
xchg
lods
into
ret
dec
xor
mov
xchg
call
not
xchg
sub
xor
cmp
jno
push
mov
data16
adc
rcrb
addb
dec
jp
rorl
rcll
push
cs
sbb
inc
int3
decb
jae
pop
stc
dec
bound
cmp
insb
cmp
jmp
out
push
insb
aas
in
addl
mov
lahf
xchg
fwait
cs
pop
xor
cltd
aas
pop
in
jmp
ror
gs
int
loopne
mov
sub
divb
and
lods
pop
fldl
fisttpl
fistl
mov
adc
repz
xchg
and
jmp
in
cmp
mov
into
loop
das
mov
repnz
fld
push
fdivrl
imul
jns
xor
push
pushf
push
dec
pop
bound
leave
xchg
sahf
aad
stos
cld
jae
or
out
jge
mov
mov
cmp
movsl
push
loop
out
addr16
mov
and
sbb
jae
mov
pop
add
inc
arpl
aad
inc
subl
mov
outsl
sbb
adc
ss
ja
pusha
cwtl
das
sahf
jbe
dec
shr
cltd
mov
add
sub
inc
xor
and
inc
insl
scas
add
or
inc
pop
sbb
xchg
popf
jno
push
leave
pop
pop
inc
out
imul
jle
or
pop
aam
or
sub
cltd
cmp
push
pop
call
bound
mov
lods
fiaddl
fildll
sub
mov
inc
mov
aaa
and
lock
jns
scas
mov
xor
dec
adc
xor
ret
es
and
adc
in
cmp
cld
inc
cs
test
fwait
push
push
shll
xchg
mov
adc
pop
sbb
mov
std
mov
jl
cmp
adc
sbb
int
mov
mov
jle
xchg
push
add
hlt
fsubl
scas
push
mov
lcall
dec
std
mov
jge
push
mov
push
add
and
rorb
stos
cmp
repz
adc
sti
test
mov
mov
mov
jle
jno
sbb
sbb
scas
movsb
dec
loopne
sti
xlat
dec
sbb
outsb
bswap
xor
sahf
mov
ljmp
dec
dec
jg
add
xchg
in
fcmove
jne
mov
das
dec
lods
nop
out
dec
test
or
dec
lret
sub
gs
inc
push
adc
lock
and
mov
dec
mov
jns
pop
sbb
lret
dec
sub
decl
iret
inc
add
push
mov
lods
push
sub
xchg
insb
xchg
jnp
lock
shrb
std
stos
cmp
adc
jo
fsubrl
cmp
jmp
dec
lock
sbb
xchg
mov
add
ficoml
ret
scas
push
xchg
test
xchg
test
test
mov
sbb
aas
dec
and
push
stc
jge
inc
popf
adc
pop
sbb
sub
and
push
popa
inc
fs
stc
in
and
or
sahf
rolb
xor
shrl
inc
inc
out
test
enter
jle
loop
and
mov
int3
aaa
aaa
xor
xor
xor
std
mov
push
xchg
sub
cld
popa
sub
xor
rolb
call
cmc
xlat
dec
sbb
pop
les
sub
dec
icebp
xor
scas
sbb
xlat
fmull
or
pop
testb
and
int
outsb
and
sar
insl
push
or
add
out
jo
fistpll
push
lea
or
arpl
and
dec
sub
push
stc
jmp
mov
mov
mov
xlat
popa
mov
mov
loop
dec
in
lods
call
dec
jg
andb
jne
out
inc
bound
adc
out
jbe
in
cmp
pop
pop
out
es
imul
out
pop
outsl
pop
xor
push
xlat
clc
subb
je
or
fwait
pop
cmp
or
push
adc
push
sarl
js
sub
or
lock
xor
fsubrs
notl
cmp
adc
push
inc
fxch
nop
mov
nop
dec
mov
mov
rcll
mov
leave
cmp
jmp
mov
fisttps
imul
cmc
pop
scas
and
cmp
cmp
sub
ds
lahf
mov
or
fiaddl
adc
movsb
adcl
ljmp
cmpsl
outsl
ret
sub
mov
dec
mov
imul
ja
out
cltd
pop
clc
jns
pushf
cmp
nop
test
push
cld
test
stos
popa
push
and
mov
rcrb
daa
test
xor
test
loop
adc
xor
imul
imull
cmp
cmp
fidivrl
imul
jg
ret
and
test
out
stos
cmp
xchg
inc
sbb
dec
imulb
stos
aad
cmp
mov
out
mov
sarb
iret
mov
pop
movsb
test
outsl
mov
push
jns
adc
mov
repnz
aas
mov
mov
jb
lret
cmp
dec
xor
enter
aad
loope
dec
fs
fidivrs
sub
mov
xchg
iret
dec
iret
pop
inc
in
dec
sbb
dec
icebp
lods
or
lods
and
mov
outsl
add
fldl
fwait
inc
sub
push
jg
and
fcmovb
sub
fnsave
mov
enter
or
dec
inc
inc
add
push
repz
loope
pop
repnz
enter
insb
add
adc
push
shr
sub
mov
lcall
inc
jo
jae
push
or
daa
movsl
out
pop
push
mov
pop
xchg
xor
ds
ja
mov
lock
aam
sub
mov
sahf
lahf
jno
out
ds
jg
push
rorl
dec
jns
mov
outsb
mov
push
arpl
jb
adc
loope
push
jae
or
int3
xor
push
int3
pop
mov
addr16
push
sarl
dec
not
stos
add
int
pop
in
fdivrp
ret
jbe
test
or
ds
jno
repnz
mov
cmp
or
fwait
cmp
dec
add
cmpsb
pop
imul
inc
stc
ja
je
movb
leave
pop
xchg
in
dec
cmc
cmpsl
movsb
push
dec
decb
mov
mov
mov
xor
and
push
add
lods
cmpsl
push
imul
stc
lock
dec
popf
pop
inc
js
xchg
mov
xchg
push
xchg
sbb
std
pop
jo
aad
push
push
and
push
or
insl
cmp
adc
and
or
inc
jns
push
sub
mov
push
sbb
and
popf
xchg
sbb
imul
push
in
add
push
and
and
int
stos
icebp
jns
cmc
mov
add
cmp
lds
jmp
int
ss
mov
sub
lea
pushf
jb
outsl
fnstsw
adc
call
clc
add
jnp
rcr
lods
pop
or
outsb
das
dec
sbb
lahf
cmp
inc
in
loop
iret
outsb
aaa
mov
dec
idivb
aas
cmp
push
mov
popf
xor
sbb
jl
cmc
popf
shlb
sti
aas
jns
jnp
xchg
pop
pop
fisttpll
xor
xchg
cmp
fldl
push
mov
fld
mov
call
dec
dec
scas
out
add
inc
xchg
dec
shl
andl
and
ds
mov
sbb
imul
aad
xor
pop
mov
shlb
pop
lret
mov
lahf
mov
xor
sub
push
sub
dec
mov
lock
fbstp
mov
dec
inc
jmp
mov
push
subl
in
jns
fidivrs
mov
mov
lret
pop
cli
leave
adc
or
subl
dec
out
jmp
fwait
pop
out
push
push
mov
mov
not
sub
loope
fimuls
lret
pop
scas
rorb
fcomps
adc
aas
xchg
filds
pop
xor
and
or
int3
aad
les
std
push
imul
daa
pop
add
fimull
jecxz
sarb
add
push
cmp
iret
jae
sbb
push
pusha
add
mov
int3
jb
jg
cmpsl
test
clc
sub
and
adc
sbb
push
cmpb
inc
fisttps
loopne
cmp
jnp
jmp
repnz
into
pop
pushf
jge
jbe
pop
or
les
std
aas
bound
jge
push
and
int3
xchg
out
adc
add
mov
fldenv
mov
imul
mov
mov
jb
dec
nop
sti
mov
mov
fwait
inc
into
sahf
lock
push
push
mov
lea
scas
xor
in
xchg
in
mov
aaa
outsb
xor
sbb
int3
movsl
jne
aas
jb
jmp
inc
sub
call
stos
mov
out
jmp
cs
out
pop
pop
cltd
jb
stc
das
outsb
adc
out
lcall
mov
leave
and
inc
jp
insl
or
mov
mov
scas
leave
std
movsb
ret
scas
cmpsl
shrl
sub
daa
sbb
cmp
enter
dec
stos
xor
cmc
leave
std
or
dec
out
cmpb
js
cmp
inc
clc
pop
icebp
jmp
jle
in
xchg
or
sbb
or
sti
mov
xchg
jo
cs
xchg
xor
ds
cwtl
test
push
or
sbb
pop
in
mov
adc
ret
add
fisubrs
pop
push
js
dec
cld
shlb
mov
arpl
int
xor
out
xor
and
rcrb
fcmove
lea
notl
ss
loopne
mov
push
jp
jb
push
cmpsb
adc
arpl
pop
inc
fxch
ret
pop
pushf
pushl
sbb
fisubl
ror
mov
mov
gs
stos
call
add
inc
adc
outsb
mov
push
out
cwtl
lcall
or
in
pop
pop
mov
adc
lret
or
jo
mov
es
ficoml
lock
jae
fisubl
inc
mov
ss
xchg
std
sti
fnsave
dec
push
jbe
xor
mov
xchg
loope
cmp
pop
cmp
dec
lret
imul
inc
aaa
dec
dec
add
aaa
stos
lea
loope
movsl
sahf
mov
test
pop
adc
cmp
out
js
pop
imul
rcl
in
popa
mov
sbb
dec
jge
push
clc
flds
jge
xor
gs
mov
push
push
stos
cmp
inc
mov
xor
mov
cmp
jns
jl
out
add
mov
cli
xlat
jb
sub
call
jb
insl
sub
lea
in
lahf
clc
push
mov
stos
jle
loopne
dec
adc
cmp
jne
push
sub
inc
add
jns
add
out
loop
add
xor
sti
pop
mov
sub
outsb
mov
jbe
fstpt
sahf
jne
push
or
in
movsb
sbb
stc
pop
aad
in
aam
les
fsubs
out
sbb
sub
adc
sub
or
xchg
in
lret
add
dec
pop
and
sahf
cltd
pop
cmpsl
lea
adc
lea
dec
dec
lea
movsl
add
push
insl
stc
jecxz
rcll
movl
jne
dec
icebp
lret
leave
push
rolb
push
mov
dec
add
into
xchg
xor
inc
gs
xchg
lds
sbb
sbb
cld
in
add
js
sbb
lahf
sbb
and
mov
push
mov
shrl
out
push
sbb
imul
cmp
and
insb
or
std
jl
mov
addr16
fcomps
pop
hlt
mov
xor
loop
dec
dec
icebp
push
mov
xchg
enter
jge
test
inc
je
mov
testl
inc
pop
in
loopne
pushf
movsb
xor
push
ljmp
std
int
fadds
ljmp
mov
jl
testl
fiadds
leave
loope
jns
ljmp
in
mov
xchg
or
repz
mov
cmp
sbb
mov
les
or
rcl
adc
or
outsb
ljmp
call
arpl
mov
mov
enter
neg
or
cli
push
addl
ss
ja
push
test
pop
loope
dec
fstl
pop
xchg
sub
or
sahf
xor
mov
les
pop
adc
jge
jp
lret
pop
push
dec
sbb
ret
mov
stos
in
push
xlat
adc
dec
inc
jne
xlat
outsl
aam
xor
aaa
icebp
fs
or
aas
jo
aam
test
pop
or
addr16
imul
cmpsl
js
hlt
jmp
sti
fcomi
inc
stos
cmpb
arpl
and
cmp
push
inc
fsubrp
xchg
inc
stc
loop
xor
jg
dec
and
and
jne
mov
xchg
hlt
sbb
xchg
mov
push
gs
fmuls
push
mov
out
sub
push
sub
pop
fldl
and
mov
add
add
ja
in
test
sbb
sarl
mov
sahf
leave
std
vcvtps2dq
aas
jno
push
xlat
lahf
sbb
mov
rcrl
adc
movsb
pop
push
sti
inc
dec
push
dec
xchg
stos
rorl
popl
xor
ret
adc
mov
sub
cmp
xorb
cwtl
iret
jae
mov
test
outsb
mov
gs
sub
outsl
jge
jp
inc
inc
xor
jnp
sti
loopne
xchg
xchg
cwtl
jns
inc
mov
in
cwtl
push
clc
dec
xchg
xchg
pop
shl
stc
mov
mov
je
call
xor
mov
inc
push
jl
xor
sbb
loope
mov
mov
add
notrack
enter
aad
or
mov
and
and
aad
dec
push
and
loop
add
push
nop
push
pop
aad
xor
fldt
inc
es
cwtl
movsb
sahf
je
xor
inc
jae
jmp
jae
xchg
dec
dec
iret
mov
pop
mov
mov
jno
arpl
insb
cli
scas
push
sbb
nop
mov
push
fcmovu
test
mov
xchg
mov
in
dec
leave
leave
mov
fdivr
ljmp
add
xor
ss
xchg
sub
sbb
cmp
sbb
pushf
inc
mov
xor
cmp
fimull
and
mov
xchg
test
cmpl
mov
dec
shr
mov
jnp
sbb
cmp
daa
pop
adc
jb
xchg
shlb
test
add
int3
bound
add
pop
push
popa
add
rorb
es
sbb
loopne
xchg
jecxz
mov
repnz
pop
dec
push
mov
inc
in
leave
or
xlat
push
push
xlat
xor
pushf
push
push
add
or
cmp
mov
and
enter
sub
pushf
aas
xor
inc
xchg
prefetch
mov
je
pop
mov
mov
mov
insl
sbb
pop
shrb
movsb
aaa
adc
cmp
push
cmpsb
adc
mov
inc
andb
nop
dec
sbb
mov
lods
test
sub
fxch
cltd
add
fistps
into
pop
dec
sub
cmpsb
lods
inc
add
out
add
jg,pt
pushf
mov
stos
call
in
jge
dec
movsl
mov
jmp
sub
pop
or
in
add
lock
dec
rorl
push
mov
push
inc
mov
stc
iret
lret
jl
fsubs
xchg
outsb
divb
cmp
scas
inc
jmp
fwait
cvtdq2ps
aaa
out
add
xlat
push
push
addr16
ret
push
cs
aas
sti
push
fcmovne
enter
out
rorl
jg
and
inc
aad
mov
icebp
inc
xlat
push
cmp
or
add
xor
enter
inc
inc
lods
mov
ljmp
out
cwtl
hlt
jg
inc
jmp
pop
lea
pushf
push
add
xchg
mov
addr16
push
inc
mov
dec
sarb
nop
insl
cmp
cmp
xor
sub
pop
sar
bound
and
add
and
add
push
mov
in
mov
fsts
arpl
pop
ret
movsl
cmp
cmp
xlat
aad
sbb
daa
jnp
and
jecxz
lea
sbb
lret
push
mov
sahf
cli
lret
mov
gs
xchg
stc
fdivrs
test
cmp
fdivp
into
in
icebp
dec
cltd
in
pushf
mov
js
adcb
lret
int3
jo
rclb
lods
push
push
clc
adcl
mov
push
repnz
push
ljmp
adc
pop
fwait
dec
imul
movsb
outsl
scas
xor
sbb
adc
jecxz
or
inc
xchg
popa
xchg
ja
cmp
leave
sbb
and
popa
fcmovu
les
xchg
fsts
adc
imul
or
inc
out
bound
xchg
push
push
sbb
push
sub
mov
loopne
and
shr
add
mov
jmp
lret
sbb
sbb
cmp
mull
fsub
popa
sbb
mov
loop
loope
negl
test
lods
cmpsl
sub
ret
mov
pop
push
sub
pop
or
sub
jno
or
and
jmp
in
cmp
push
or
lret
push
mov
add
lcall
pop
mov
push
dec
mov
adcb
pop
shl
jae
xor
insl
xchg
je
addr16
mov
leave
jb
sti
dec
icebp
ja
push
cmp
mov
scas
and
addl
ret
ds
xchg
inc
mov
arpl
fucomip
insl
adcb
scas
repnz
ja
push
int3
in
fistps
cmp
pushf
dec
or
data16
test
data16
rolb
push
ret
mov
shrl
push
sahf
inc
popf
or
rorb
out
xor
sbb
sub
stos
sbb
add
sbb
out
cld
shll
lods
ret
and
xor
fs
xchg
aam
mov
sbb
out
adc
mov
xchg
in
outsl
xor
aam
iret
pusha
into
icebp
mov
push
xchg
notl
ljmp
adc
push
outsb
pop
mov
jl
dec
add
in
cli
test
test
imul
ljmp
mov
fldenv
faddl
or
jbe
into
in
and
sub
jp
arpl
dec
out
imul
fdivs
ja
add
lods
push
loope
cmp
fcmovnb
push
addr16
mov
inc
xchg
mov
push
mov
mov
sbb
adc
lods
push
jg
outsl
bound
xor
arpl
push
imul
jmp
cmpsl
outsl
inc
lods
xchg
loope
add
cs
adc
bound
in
xchg
and
push
pop
or
dec
inc
pop
jg
enter
push
xor
pop
pop
ret
popa
add
sbb
dec
movsb
push
and
outsb
mov
data16
shlb
xchg
out
mov
enter
mov
ljmp
mov
mov
dec
mov
lods
out
adc
inc
js
into
insb
xchg
rcl
int
je
mov
mov
dec
add
int3
fnstsw
or
imul
inc
mov
adc
inc
mov
xor
bound
xor
enter
inc
add
mov
test
push
bound
and
lret
inc
mov
xlat
addr16
sub
int3
jmp
cli
lcall
inc
sub
jo
push
notb
sbb
sbb
jbe
inc
pop
cmc
test
sahf
add
cmp
movsb
ficoml
push
pop
cmc
push
mov
xor
jecxz
sub
inc
and
mov
mov
adc
bndstx
xchg
push
or
inc
pop
cmpsb
xor
inc
idivb
stos
psubw
in
outsb
add
les
loope
mov
xchg
subb
and
pop
sub
outsl
mov
jns
sarl
popf
out
cwtl
mov
stos
or
cwtl
lea
lods
movsl
jbe
xor
cltd
daa
out
or
pop
jg
push
mov
lods
and
loope
mov
mov
sbb
xchg
and
les
xor
mov
xchg
enter
and
scas
testb
loopne
movl
xor
leave
data16
dec
sbb
lcall
mov
imul
adc
push
filds
xor
int
sbb
adcl
adc
inc
push
fistl
dec
jecxz
xchg
mov
push
fistpll
pop
ret
mov
rcrl
lods
std
pop
lods
and
jae
out
clc
inc
pop
loope
test
shl
lcall
mov
sarl
sbb
and
xchg
inc
lret
or
in
push
jb
add
cmp
jnp
das
jmp
nop
jl
add
loope
scas
in
shl
push
mov
push
int3
in
xchg
subb
pusha
imul
test
and
ljmp
std
mov
test
rcrl
mov
and
xor
addb
pop
call
pop
dec
leave
pop
mov
xlat
push
subb
add
fdivrl
mov
mov
fadd
aam
jp
or
bound
cmp
push
int3
jp
dec
mov
sub
cmpsl
jnp
fs
add
int3
stos
xchg
mov
cmp
xor
je
mov
sub
sbb
adc
and
jecxz
scas
fs
cmpsl
aas
insb
ds
lods
out
sar
cmp
sar
pop
dec
sub
jge
add
dec
movsl
xchg
shrl
push
lcall
leave
add
in
sarb
in
mov
inc
ljmp
and
cld
sub
push
add
sub
divl
lret
in
insb
mov
andb
inc
ret
mov
fsubrl
sub
pop
xor
jge
jo
aaa
shlb
xchg
rorb
and
mov
cwtl
sbbb
lea
aad
dec
ret
mov
fidivl
mov
mov
decb
aaa
cmpsb
cmpsl
push
mul
lahf
stos
xchg
add
ds
in
pop
mov
mov
pop
jbe
cmp
ficoml
scas
jne
push
xchg
shll
or
dec
pop
mov
inc
imul
test
cld
inc
mov
pop
mov
push
insl
xor
mov
in
inc
mov
push
mov
aas
jg
sbb
add
fdivs
cmp
dec
imul
lret
push
movsl
pusha
lods
inc
popa
fdiv
adc
adc
sbb
inc
inc
xchg
popf
mov
xor
arpl
or
jge
stos
mov
popa
movsb
stos
xchg
test
push
sbb
and
cltd
sub
std
mov
loope
xchg
jne
add
or
ja
mov
xor
push
imul
decb
push
rol
pop
leave
insl
xchg
mov
rorb
xchg
and
mov
popf
clc
popa
fsubl
int3
jle
repnz
inc
sbb
jl
mov
leave
adc
push
sbb
insl
lods
sub
adc
or
push
pushf
sbbl
sbb
or
popf
ja
push
mov
aaa
rclb
or
push
dec
stc
mov
xchg
pop
outsl
dec
adc
dec
out
sub
shr
js
xor
loopne
pop
inc
push
dec
fs
cmp
xchg
in
popa
out
iret
aaa
mov
jle
inc
sahf
fisubrs
cs
je
mov
cmpsl
scas
test
or
jg
js
lods
inc
sub
pop
repnz
lret
repz
jnp
addr16
mov
fcmovb
lea
xlat
stos
shll
out
add
stos
jnp
push
dec
mov
aas
dec
scas
popf
fidivrl
mov
or
fisttpl
ret
xchg
scas
jp
cmpsb
bound
jo
arpl
add
int
dec
lahf
jle
jmp
dec
inc
fcmove
addr16
mov
dec
or
cmp
insb
xor
jbe
aad
movsl
cmp
dec
mov
adc
fisttpll
and
bound
or
mov
push
in
lret
loop
cmc
push
test
repnz
cmpsb
xchg
notl
mov
jmp
jae
mov
sub
add
cmp
movsl
sbb
jnp
test
inc
inc
dec
xchg
pop
loop
sub
cmp
leave
pop
sahf
pop
movsb
add
or
nop
xor
jg
xchg
pop
cmp
dec
xor
call
jae
movl
fdivl
aas
fstps
lods
orl
sub
mov
aad
xchg
push
pop
mov
pop
xchg
and
or
dec
sbb
fcomi
mov
js
inc
outsb
xor
mov
addb
aas
push
mov
jmp
dec
sbb
or
xlat
js
jmp
je
sub
sub
addl
xor
fstl
mov
pop
std
mov
bound
bound
xor
ret
test
push
mov
das
sub
out
push
mov
mov
push
mov
in
into
inc
or
mov
xor
fcomip
add
fnstenv
hlt
scas
cmc
pop
push
inc
adc
je
mov
jp
pop
repnz
dec
jle
push
jne
into
call
lock
in
jp
mov
push
in
sbb
enter
stos
sub
adc
sub
sbb
popa
or
lock
cmpb
add
popa
fcomps
or
push
fdivs
push
jge
push
dec
lods
xor
arpl
shrb
pop
dec
clc
insl
xlat
fstpt
and
push
rcl
test
jno
mov
scas
dec
or
fldt
rol
jo
adc
mov
fists
inc
mov
lret
insl
pop
inc
cltd
push
pop
mov
ret
jo
call
mov
cmpsb
sub
mov
push
push
imul
pop
xlat
add
fistps
jecxz
mov
add
call
xchg
ja
lahf
inc
sahf
mov
sub
sarl
xor
lahf
add
and
jne
orl
out
in
cmpsl
push
pushf
incl
mov
xlat
mov
ja
cltd
push
or
in
jge
or
ja
dec
cmp
sub
pop
or
roll
lea
mov
sub
out
xchg
inc
mov
inc
inc
call
outsl
rep
pop
push
pushf
hlt
dec
mov
xor
pop
inc
ds
stos
stos
sbb
fisubl
cmp
pop
cmp
data16
push
add
std
xchg
je
cmc
enter
in
das
push
and
push
mov
mov
mov
or
adcl
mov
add
sarl
fsubrl
jle
test
mov
cltd
mov
mov
inc
clc
hlt
xor
bound
and
cmpsl
stc
test
mov
and
or
xchg
inc
repz
xchg
jne
add
les
inc
jns
sarl
stc
mov
imul
repz
insl
adc
mov
insb
test
inc
out
add
scas
mov
jmp
xchg
mov
mov
pop
mov
pop
movsl
push
clc
dec
gs
adc
or
xor
outsb
insl
sbb
lock
popa
fwait
jle
adc
and
out
mov
rclb
cmp
das
ja
stc
lds
sbb
ror
ret
int
mov
jns
test
mov
subb
xor
imul
jecxz
xchg
out
xchg
cmpsl
xchg
jg
pop
dec
fidivl
or
scas
and
mov
pop
in
pop
sub
mov
mov
pause
fcomps
xchg
aad
jmp
push
sub
inc
push
aad
mov
int
sub
add
sti
lods
fwait
or
outsl
lret
mov
push
lret
imul
or
mov
fsts
xchg
arpl
xchg
cs
addr16
aad
aas
mov
cmc
mulb
xchg
ficompl
adc
sbb
orl
clc
int3
cltd
frstor
cs
mov
aas
push
cwtl
daa
cmpsb
mov
jns
out
aas
sbb
movsl
jge
mov
xchg
push
add
addr16
shlb
rorb
cmp
lea
dec
outsb
and
and
inc
std
pushf
inc
inc
push
mov
mov
pop
in
in
es
cld
jnp
push
pop
xchg
testb
fcomip
mov
decb
scas
imul
sub
ja
mov
idivb
imul
out
lea
stc
hlt
mov
jl
outsb
sbb
and
lods
pop
mov
loop
or
movsb
rolb
test
push
cmc
xchg
lea
stos
loop
add
jb
sub
mov
inc
mov
add
dec
push
lods
sbb
fidivrs
or
repnz
mov
add
mov
popa
inc
sub
mov
icebp
cmp
pmaddwd
inc
push
je
aad
jno
repnz
dec
jnp
or
add
mov
arpl
mov
int3
mov
cmp
scas
mov
xchg
lods
jae
std
stc
push
cwtl
cmpl
rolb
in
scas
les
sbbl
das
mov
xor
movb
cld
adc
xchg
push
sub
mov
sbb
out
jge
fwait
jg
movsl
push
jae
sbb
shlb
or
jns
push
cmpsb
mov
sbb
push
pushf
outsl
test
arpl
push
cmpb
push
xchg
xor
sbb
in
lcall
push
icebp
rorb
adc
sub
add
repnz
mov
loope
popl
xor
push
xchg
fisubs
sub
cs
into
dec
shlb
adc
jl
cmp
inc
push
jl
xchg
mov
pop
fxch
into
or
inc
mov
lods
mov
cmp
jb
jp
adc
adc
bound
xlat
cmpb
pop
in
jge
dec
ds
and
inc
or
iret
sahf
xor
pop
xorb
cmp
inc
aam
xor
jnp
mov
sarb
cmpsl
push
xor
pop
mov
xlat
pop
jmp
cmp
pop
fistl
inc
leave
xchg
cs
jns
xor
xchg
pop
and
pop
movsb
popf
add
inc
xor
add
call
and
cmc
jne
out
cltd
adc
pop
movb
in
and
mov
test
lret
out
mov
dec
pop
aaa
mov
rcrl
mov
cmp
xor
cld
das
inc
fldl
xlat
lret
adc
stos
jge
out
in
push
sbb
pop
push
xchg
pusha
push
repz
xor
mov
inc
mov
shlb
jp
lcall
rcrl
inc
fildl
popf
aad
dec
inc
addr16
rorl
movsb
or
push
jmp
jmp
pop
mov
sbb
mov
pop
sbb
lods
and
jo
daa
insb
shl
aam
inc
xchg
stc
in
out
inc
push
lret
adc
repz
sbb
outsl
jno
repnz
adc
in
jmp
pop
xorb
clc
mov
xchg
pusha
arpl
rorl
jbe
rcll
sbb
mov
ss
xorl
nop
bound
lds
and
ret
push
push
dec
int3
xchg
cltd
mov
xchg
repnz
fidivrl
cmc
sahf
ja
clc
test
sbb
jb
sub
xchg
xor
push
inc
push
fwait
repz
out
adc
adc
ret
xchg
push
and
xor
mov
fldl
or
cmc
mov
mov
fisttpl
xchg
pop
push
lods
stos
inc
scas
pop
fwait
sar
and
test
mov
addr16
fdivrs
loope
jp
or
lock
pop
mov
jp
or
push
pop
pushf
sub
ljmp
leave
cmpl
icebp
les
sub
xchg
fdivr
mov
sbb
jl
icebp
aaa
rcl
out
add
mov
pop
jae
mov
mov
jns
into
jae
out
sarl
ret
lods
jnp
pop
cmpsl
pusha
pop
std
iret
mov
lock
or
pusha
lods
jno
push
int3
push
shrd
adc
cmp
test
inc
mov
aas
sub
xor
add
cmpsl
in
dec
cmpxchg
jne
lret
int3
sbb
jb
xchg
iret
cli
mov
scas
inc
mov
inc
leave
cld
jbe
pop
inc
xchg
push
shrl
mov
jle
fildll
mov
orb
scas
cmpsl
das
loop
cmpsl
inc
pop
mov
sahf
lods
in
pop
repz
push
sub
repz
xchg
movsl
popa
xor
call
lret
pop
in
xchg
jle
cmp
sub
ljmp
ss
xchg
sahf
out
pusha
xchg
xchg
xchg
and
dec
data16
xchg
shl
sbb
inc
fcmovne
adcb
mov
pop
push
sbb
jb
cli
jno
cmp
jmp
cli
mov
xchg
mov
pop
arpl
xor
mul
fdivs
mov
les
mov
hlt
cmpsl
decb
xor
sbb
lods
mov
insl
xchg
cmp
aad
ret
nop
iret
cmp
pop
cmp
mov
insb
add
imul
pushf
jl
leave
out
cltd
adc
push
or
lea
mov
movsl
adc
test
push
mov
mov
cld
lock
inc
cmp
sarl
mov
rorl
push
leave
xchg
jmp
mov
loope
or
loopne
sbb
das
test
mov
xor
dec
ror
mov
cmpsl
mov
call
sub
aad
inc
mov
push
mov
mov
out
mov
int
pop
cmp
jne
iret
xor
js
mov
enter
rcrb
loop
inc
dec
pop
push
lock
push
mov
and
popa
fisttpll
addl
daa
stos
lcall
pop
std
mov
inc
jne
jno
xlat
sbb
xor
clc
jmp
out
mov
push
adc
lods
mov
mov
pop
ds
pop
push
iret
push
sahf
aaa
ja
push
push
mov
rcrl
daa
pushf
outsl
or
jle,pt
dec
mov
push
dec
add
or
movsb
stc
add
fmull
shld
js
insb
mov
xor
cmpb
jle
fwait
nop
je
out
sub
and
inc
xchg
out
enter
enter
jmp
fwait
cmp
mov
aaa
lahf
mov
mov
fidivrs
fs
inc
mov
stos
mov
negl
xor
and
add
push
sub
lods
hlt
inc
call
bound
ss
dec
lcall
imull
loop
sbb
aam
bound
rolb
cmp
mov
pushf
cwtl
and
test
daa
iret
sahf
iret
in
rcr
and
and
xchg
dec
pop
js
push
scas
icebp
sbb
imul
cmp
pop
fisubrs
lcall
shlb
and
sbb
and
out
imul
xlat
push
nop
add
jno
mov
and
leave
inc
xor
popf
cmp
pop
les
xor
pop
icebp
aam
sbb
aad
stc
pop
sbb
xchg
mov
addr16
mov
das
in
idivb
arpl
xor
sbb
add
stos
pop
lcall
roll
push
mov
fldt
inc
sbb
xor
pushf
mov
sbb
sub
insb
adc
ss
push
cltd
sarb
jb
add
shrb
jnp
push
cmpsl
sub
cmpsl
fabs
scas
mov
and
push
inc
dec
leave
mov
lret
iret
popa
mov
arpl
jge
test
addb
push
loopne
cmp
and
jmp
inc
xchg
inc
sub
mov
dec
mov
pop
ficompl
push
mov
pop
jge
fisubrl
fs
cmpsb
aam
imul
pushf
in
sub
imul
cmpb
rcr
ret
or
fadd
sub
mov
arpl
fidivrs
jmp
adc
mov
xchg
aam
inc
leave
rolb
mov
in
cmp
js
adc
push
loop
mov
xor
mov
mov
in
mov
pop
mov
push
or
repz
orb
xor
inc
cmp
add
inc
sahf
jmp
scas
stos
mov
sarb
shrb
and
cmp
aam
ret
fsts
stos
lcall
inc
mov
pop
bound
xchg
bswap
nop
ficomps
fists
aad
rcpps
mov
das
inc
lds
call
jmp
mov
mov
cmp
je
scas
adc
stc
dec
sub
or
jge
bound
xorl
and
negb
adc
jmp
sbb
mov
mov
mov
cmpsl
sbb
ljmp
shl
sub
sbb
int3
and
mov
jp
cmpsl
xor
jns
sub
iret
fldcw
sbb
je
aam
adc
outsb
mov
popa
jnp
data16
or
sub
mov
scas
lahf
xchg
sub
out
lods
jge
ret
popa
and
pop
in
repnz
or
mov
and
adc
inc
repnz
movsl
jns
lea
sub
ds
sub
loope
lods
xchg
in
cmp
mov
lods
jecxz
lods
xchg
adc
dec
jnp
mov
ja
cmp
outsl
movsl
adc
add
aaa
stc
pop
int3
cld
lds
das
sbb
lret
mov
mov
test
xorl
sahf
sbb
fidivrl
je
lcall
adc
fsub
lcall
aad
and
imul
fwait
push
inc
inc
ret
pop
jmp
negl
push
push
fdivrl
pop
sbb
sub
sbb
test
mov
cs
loop
js
es
stos
inc
enter
out
xor
or
mov
jmp
cld
pop
pop
push
xlat
lods
fsubs
pop
sub
js
xor
pop
enter
dec
dec
aad
jns
adc
push
ret
test
jg
lahf
sbb
sub
ds
mov
insb
in
cli
fimull
jns
iret
js
in
outsb
stc
out
movsl
cmp
sbb
fsubrs
popf
aas
daa
sbb
repz
push
fst
pop
and
push
lahf
loopne
xchg
mov
and
mov
mov
sarb
adcb
popl
daa
dec
fimuls
imul
push
dec
xchg
repz
push
xlat
test
movsl
iret
and
call
jg
adc
push
lods
push
inc
and
add
cmpsb
inc
mov
push
dec
aaa
divl
add
bound
jg
imul
jae
adc
add
mov
cmp
xor
fldl
push
inc
dec
inc
test
add
and
mov
lds
popl
mov
pop
push
adc
jne
lret
iret
rcll
add
fldt
fwait
divb
lods
out
jle
loopne
jl
adc
lcall
xchg
sub
out
cmp
fadds
stos
push
fisttpl
rorl
mov
in
push
mov
test
test
add
dec
test
int3
push
fs
pop
pop
push
lods
push
stos
shll
insb
jecxz
int3
or
test
test
outsl
dec
insl
cmovg
rcll
sub
push
pop
stos
jg
iret
hlt
mov
cmp
lods
mov
test
call
mov
mov
xor
cmp
repnz
add
xchg
mov
aad
out
cmpsl
add
inc
adc
out
scas
mov
adc
xor
jno
mov
fwait
add
and
out
out
call
repnz
cmp
jp
sbb
dec
mov
dec
cmpsb
jp
imul
sub
fistl
hlt
mov
push
sub
out
push
test
sahf
jle
loopne
out
sbb
rcrb
xor
pop
out
das
xor
dec
fsubrl
sbb
subb
xrelease
ret
cmp
pop
sub
sbb
mov
sarl
xor
or
jbe
jo
leave
repz
sbb
pop
test
hlt
push
cmp
adc
scas
repnz
xor
and
push
mov
in
or
test
stos
or
pop
inc
mov
mov
ja
xor
ret
push
icebp
and
inc
jmp
cs
xchg
pop
add
or
and
out
jae
mov
dec
xchg
imul
mov
in
test
pop
inc
daa
jg
icebp
cmp
ror
and
cmp
xor
cmp
scas
ret
jae
pop
stos
movsb
mov
sbb
out
jge
rcrl
dec
inc
jnp
add
pop
test
orl
daa
out
sub
lahf
insb
sub
sbb
jl
mov
push
dec
push
jp
mov
jnp
scas
mov
cmp
test
sti
test
cld
aad
ret
out
or
rcrl
cmp
inc
leave
sbb
lea
lret
int
cmp
pop
mov
pop
mov
dec
sarb
mov
icebp
lret
iret
and
xchg
mov
outsb
call
and
jb
fdivs
dec
arpl
mov
fwait
adc
inc
arpl
xor
fisttpll
jge
or
mov
and
shrl
test
sbb
fs
mov
shll
sub
arpl
dec
fsubl
cs
jmp
dec
or
xor
inc
sbbb
push
xlat
ret
insl
sbb
inc
int
cs
xor
repnz
xchg
jno
aam
out
cmpsl
fdivrs
out
sub
roll
mov
push
cmc
sub
out
div
xor
xor
sub
pusha
mov
mov
jnp
jb
jle
cltd
cmc
lods
notb
es
fnstcw
mov
sahf
fimull
clc
popa
inc
les
pop
xchg
mov
hlt
cmp
cmpsb
add
dec
adc
jp
or
and
pushf
xchg
cmpsb
and
insl
xchg
stos
aam
idivl
or
insb
cmp
icebp
sub
push
xchg
mov
test
rolb
cli
adc
popa
mov
in
fwait
faddl
repz
sub
cmpsl
mov
and
in
mov
and
jl
xor
sbbb
data16
or
mov
testl
and
stc
loopne
js
pop
loop
mov
outsl
aas
or
mov
popf
pop
lahf
cs
pop
out
inc
xor
mulb
popa
and
mov
jl
and
shll
add
test
cli
mov
push
add
insb
pop
jns
push
fucom
dec
mov
xor
loopne
adc
aas
or
mov
lods
mov
dec
mov
je
inc
sub
mov
rcl
inc
in
mov
xchg
mov
rcll
xor
inc
add
xchg
pop
mov
imul
push
add
push
push
dec
mov
daa
imul
lods
std
pop
mov
pop
test
push
jle
jmp
jne
push
cmpsb
in
mov
jmp
inc
mov
fsts
fmull
adc
test
xlat
and
roll
lods
dec
ds
scas
lahf
xchg
xor
ljmp
mov
jg
sahf
data16
xchg
ss
jl
xchg
popl
inc
lret
dec
or
inc
idivb
and
push
xor
mov
out
xchg
push
repz
in
and
mov
movb
test
mov
jle
add
lods
rcll
push
or
add
xchg
cwtl
mov
adc
pop
cmp
into
cli
mov
pushf
mov
in
out
fidivs
loop
mov
stos
cmc
int
clc
mov
jge
xchg
in
jbe
and
popf
or
scas
and
inc
jmp
sub
das
add
shll
js
sbb
push
decl
mov
outsl
lods
mov
sub
sahf
add
fscale
sbb
repz
fistpl
fcomps
mov
mov
je
jecxz
sarb
jge
insl
sbb
clc
daa
jnp
ljmp
arpl
jno
iret
jbe
mov
push
scas
icebp
cmp
mov
stos
inc
jecxz
cmp
rorb
push
xor
mov
data16
inc
insl
nop
dec
lret
jae
in
jmp
push
inc
fwait
fs
rolb
sub
inc
or
and
dec
stc
cmp
inc
sub
es
fstps
addb
mov
adc
mov
mov
movsb
fucomp
cmp
lods
inc
movsb
inc
iret
mov
push
xor
in
fs
es
bound
insb
es
xor
scas
std
mov
or
stos
popl
jae
mov
shrl
shrl
push
sub
sti
jl
pop
movsl
or
fs
loope
enter
ret
dec
call
aas
mov
add
push
push
cmp
notl
pop
outsl
int
adc
lods
and
fdivrp
cmp
pushf
adcb
pop
dec
xchg
add
ret
clc
dec
int
jmp
fwait
imul
push
xchg
icebp
cmp
ds
xchg
or
cmp
lahf
push
add
pop
les
es
inc
out
dec
and
repz
fidivrl
in
test
pop
dec
mov
ret
xchg
sbb
jecxz
mov
jo
mov
ljmp
lock
ds
jg
cmp
ret
push
fadds
jl
lcall
xor
and
cmpsb
es
xchg
hlt
hlt
xchg
icebp
xchg
testb
or
imul
loop
cmp
pop
lret
leave
push
jg
mov
sbb
enter
test
sbb
push
mov
fdiv
fcompl
cld
dec
push
or
lahf
das
cld
sub
lret
repnz
push
ret
in
push
cs
jmp
and
dec
pop
jle
jbe
clc
lods
ljmp
popf
rol
pushf
dec
sti
mov
dec
call
lods
add
lret
ljmp
mov
sbb
rcrl
pop
outsb
dec
popa
lods
insl
adc
dec
lods
out
testb
mov
mov
xchg
jp
or
cmp
pop
fs
pushf
jecxz
mov
js
ficoml
xlat
inc
pop
sbb
jmp
dec
or
es
aad
inc
pusha
ss
frstor
add
cmpsb
clc
xor
xchg
shrb
iret
jp
and
mov
int
pusha
push
xchg
jbe
mov
inc
push
or
mov
lcall
sar
ret
pop
cmp
lret
dec
dec
std
sbb
xor
aas
popf
movl
mov
or
popa
js
dec
popa
rcll
icebp
xlat
imul
pop
dec
dec
sub
wrmsr
in
mov
push
jno
ja
in
add
fldenv
out
test
xchg
mov
inc
xor
cld
mov
add
xchg
or
push
sahf
mov
sbb
out
popa
mov
lahf
add
int
and
repz
xlat
scas
loop
negb
mov
andl
push
jge
mov
ds
mov
mov
test
xchg
mov
or
xlat
imul
push
mov
dec
fnstenv
jmp
sub
adc
mov
push
jmp
adc
push
outsb
xor
je
push
push
or
pop
into
scas
cld
mov
xor
pop
lds
loope
ret
mov
pop
sbb
inc
in
ret
push
sub
arpl
sub
inc
lret
leave
mov
lret
push
lret
adc
inc
sar
push
push
add
adc
clc
or
mov
mov
mov
sbb
adc
and
shl
xor
movsl
mov
jns
inc
pushf
pop
ja
xchg
jmp
gs
adc
jp
inc
or
stos
sahf
xor
insl
lret
fimuls
xchg
jmp
inc
xchg
ljmp
scas
cli
or
stc
xchg
mov
xor
dec
into
lods
jbe
dec
notb
mov
int
out
xor
dec
pop
dec
jae
test
xchg
add
clc
or
sub
outsb
sub
mov
jp
les
push
push
mov
jp
stos
arpl
cmp
adc
mov
in
arpl
push
fdivs
add
into
xor
sub
cwtl
int
add
xchg
nop
into
leave
ror
icebp
scas
mov
mov
shrb
popf
push
adc
mov
dec
sbb
cmpsl
adc
and
mov
jp
pop
jo
out
in
inc
cmp
and
cmpsb
and
push
pusha
jmp
push
rorb
inc
pop
cmpps
mov
scas
and
push
ficompl
scas
jne
push
mov
sbb
nop
or
xlat
pop
ret
cli
jns
dec
daa
jge
call
sbb
stos
ret
gs
mov
iret
insl
or
loopne
mov
pusha
mov
aas
fiadds
jbe
cmp
stos
out
and
outsb
lock
dec
pop
lock
xor
outsb
je
fists
es
mov
cmp
push
xor
mov
cli
mov
sbb
sub
mov
std
xor
mov
sbbb
and
sub
shrl
jp
pop
mov
xchg
hlt
scas
fldt
add
dec
sub
and
fisubs
mov
mov
in
pop
jl
jo
lods
xorb
fistps
jg
js
iret
call
loopne,pt
mov
hlt
jno
push
jno
mov
push
mov
int3
add
dec
cli
xchg
nop
and
mov
gs
shrl
sub
jmp
cs
and
dec
ja
mov
loop
dec
xor
dec
stos
mov
ret
rorb
out
ficompl
sub
popa
out
shlb
stos
sub
push
push
inc
movsl
ficoms
lods
nop
js
pop
shlb
mov
repnz
inc
mov
fldcw
xor
fsubr
loop
in
mov
mov
push
jb
scas
add
push
dec
stos
and
cmp
add
add
cli
out
inc
pop
lret
add
lock
mov
pop
aaa
dec
add
lods
cmp
xchg
hlt
push
sbb
lea
or
or
cmpsb
pushf
jne
lahf
call
or
adc
lahf
das
test
pop
jbe
arpl
pop
jo
cld
pop
int
jb
cmpsl
ds
mov
sbb
inc
in
push
pop
sub
jne
rolb
mov
inc
mov
aaa
cmc
fidivl
xor
and
xlat
lds
icebp
icebp
adc
xor
pop
call
dec
lock
xor
sbb
pusha
push
sbb
js
loopne
add
shrb
mov
jp
int3
testb
daa
popf
jp,pn
iret
ret
fs
lock
dec
dec
imul
sbb
leave
sbbl
fidivs
or
sbb
add
mov
mov
fstp
push
mov
js
adc
fbld
test
fsubrs
fs
pop
hlt
shrl
dec
js
dec
mov
imulb
mov
add
sahf
push
cli
insl
pushw
inc
std
decl
or
fs
mov
cmp
pop
shll
test
stc
ds
outsl
adc
lcall
ss
aas
xor
mov
sub
fldl
out
sbb
dec
sub
scas
cwtl
arpl
in
popa
jp
push
rorb
mov
add
mov
mov
inc
dec
mov
add
jo
mov
aad
ss
xlat
lcall
lds
mov
lret
mov
xor
popa
mov
test
sbb
mov
push
in
pop
sub
pop
scas
out
addr16
mov
out
pop
cwtl
stos
loop
or
out
mov
ljmp
jo
push
push
cltd
in
xchg
sbb
and
fdiv
shlb
hlt
add
dec
mov
push
inc
xchg
mov
lcall
aaa
shlb
mov
leave
shlb
cmc
out
xchg
sub
stos
insb
mov
push
mov
inc
and
jbe
or
dec
jae
movsb
out
xchg
cld
xchg
adc
shlb
ss
sti
cli
push
sub
xchg
inc
or
xor
lahf
xchg
lcall
call
push
and
pushf
enter
xlat
pop
lahf
test
push
cmp
add
aam
jbe
sbb
mov
sub
jp
inc
aas
add
mov
addr16
sub
jg
push
mov
and
inc
outsb
lods
dec
lret
xchg
mov
std
xor
push
inc
bound
pop
inc
rclb
xchg
mov
jmp
and
cltd
call
mov
adc
jle
cmpl
xchg
cwtl
ljmp
pop
outsl
movsl
adc
lods
out
or
push
gs
ret
je
cs
push
loopne
int3
fsubr
mov
xor
popf
push
cli
gs
pop
jno
cs
adc
cmpl
lea
arpl
cmp
aaa
test
out
mov
sbb
and
filds
sbb
stc
push
lret
pushl
das
mov
sub
mov
mov
or
mov
mov
mov
add
mov
sbb
das
jl
outsb
out
jge
repnz
xchg
sbb
ret
push
dec
pop
jp
ja
icebp
ds
cmp
jecxz
lahf
sbb
sub
dec
clc
rcll
adc
xor
cli
sti
adc
bound
iret
cli
dec
pusha
loop
pop
rorb
dec
rorb
mov
insb
mov
mov
insb
jge
test
pushfw
out
lahf
sbb
jnp
jb
xchg
repz
cmpsb
in
xchg
in
adc
add
xor
add
ljmp
mul
add
push
cmp
adc
sbbl
out
jnp
int
mov
sub
insl
inc
out
cmp
outsl
cmp
jmp
les
add
xchg
pop
mov
and
lds
popa
sbb
ret
sbb
shrb
lahf
aas
pop
cmp
ret
int3
inc
xchg
fcomp
cmp
and
sub
xchg
imul
xlat
xor
pop
icebp
fs
sbb
addr16
mov
jp
pop
roll
outsb
sub
leave
cmp
in
movsb
dec
scas
shll
les
fidivs
iret
push
ffreep
into
dec
stos
jmp
adc
imul
inc
test
pusha
jo
outsb
das
test
ljmp
ret
sbb
mov
ja
push
sbb
pop
call
popf
loop
sub
ss
icebp
add
pusha
xchg
jo
imul
xor
jae
stos
inc
movsl
mov
pop
inc
ss
mov
add
xchg
push
cmp
add
inc
xchg
mov
xchg
push
inc
arpl
sahf
adcb
xor
scas
mov
imul
inc
in
cmc
enter
inc
push
cmp
sahf
adc
jmp
popl
leave
pop
mov
aas
into
imul
pop
lods
and
pop
xlat
in
mov
cs
add
adc
cmpsl
or
mov
xchg
or
rep
cmpsb
daa
mov
and
xchg
sbb
push
mov
jle
jge
xor
mov
push
inc
loope
pop
mov
sub
les
sub
sub
jo
loopne
or
in
add
adc
ljmp
stc
sti
ss
shll
add
lods
cmp
sub
and
sbb
pop
jmp
add
bound
pop
gs
cmp
adcb
push
iret
jnp
add
jae
popf
adc
and
jecxz
mov
addr16
inc
mov
sbb
xchg
pop
cmp
mov
lcall
xchg
push
pop
xor
jae
pop
push
cmpsb
push
xchg
rolb
fmull
inc
test
jno
ljmp
in
add
push
push
and
adc
jns
inc
or
mov
or
scas
xchg
js
cwtl
inc
inc
scas
adc
fadds
cmp
inc
jecxz
ret
pop
jb
xchg
jb
jns
ret
int
cld
lods
xchg
inc
inc
loopne
push
in
iret
jmp
sahf
add
mov
mov
mov
sub
jmp
push
sub
cmp
testl
stc
lea
dec
mov
stos
fldl
stc
dec
mov
in
pushf
mull
test
ja
sti
jg
cmpsl
movsb
adc
sti
or
mov
movsb
sarl
das
push
jmp
popa
icebp
inc
test
cmpsl
pop
jg
sub
cmpsl
and
adc
sbb
sbb
pop
stc
stc
jmp
xchg
jecxz
mov
pushf
mov
in
fidivl
shl
cmpsl
outsb
popa
sbb
iret
push
sahf
sarl
daa
inc
inc
lods
xor
notl
clc
fcoms
mov
and
mov
sub
into
sbb
movsl
jb
dec
inc
lds
lods
mov
inc
test
push
xchg
or
in
xor
into
andl
push
sub
sbb
pop
adc
pusha
pop
xchg
int
orb
inc
pushf
mov
aaa
push
or
cmp
fndisi(8087
xor
mov
cs
mov
push
xchg
sub
adc
insl
arpl
in
lods
push
dec
cwtl
aaa
jo
mov
or
inc
add
movsb
mov
iret
sbb
test
push
out
lods
shlb
dec
mov
xchg
mov
pop
insb
add
or
stos
xor
testb
out
aam
xchg
insl
mov
push
shr
or
jne
jb
or
stos
cmpsb
or
ficoml
sub
sbb
in
dec
xchg
cld
add
inc
and
xor
lods
cmpb
cmp
ja
jne
push
jno
sbb
mov
je
mov
add
fs
mov
dec
or
sbb
xor
mov
bound
cmp
dec
negb
push
out
push
lret
in
enter
cwtl
sub
hlt
pop
lret
sbb
adc
rorl
push
xchg
out
push
cwtl
fldt
xchg
cs
aam
mov
aad
jmp
pop
enter
dec
loope
nopl
hlt
enter
insl
fiaddl
icebp
cmp
addr16
icebp
pop
jge
cmp
pop
pop
xchg
bound
mov
lods
out
loopne
es
mov
int3
add
mov
jae
sbb
and
cltd
notl
imul
leave
sub
leave
sub
adc
add
pop
add
stc
stos
xlat
jecxz
dec
mov
inc
ret
xor
push
repnz
cltd
out
in
add
je
pop
xor
add
pop
jae
les
mov
xchg
fists
jbe
xor
mov
loop
xor
repnz
and
xchg
stc
loopne
ret
ja
call
loopne
lahf
loope
sbb
sbb
cs
imul
push
push
into
addr16
xchg
dec
shll
push
add
sub
into
or
inc
fdivp
inc
pop
loopne
fldt
imul
xchg
sub
push
inc
xchg
adc
jns
scas
or
xchg
pop
fstpl
cmp
repz
fimull
cmp
mov
mul
ror
push
jnp
xor
pusha
ret
pop
inc
jecxz
sbb
lahf
cmpsb
movl
imul
mov
inc
add
rorl
xchg
loop
mov
stos
jbe
sbb
fnstcw
sbb
cmp
outsl
push
and
dec
sub
sbb
jo
jp
or
push
inc
inc
mov
mov
test
and
out
nop
xchg
sbb
or
stc
pop
sub
xor
push
clc
xchg
iret
icebp
fnstcw
dec
cli
fs
hlt
dec
loopne
mov
pop
cmc
fwait
cli
dec
or
and
in
dec
leave
mov
rorb
xchg
cmp
gs
adc
dec
and
sbb
pop
sub
das
jo
xor
jl
pushf
test
xor
or
push
test
pop
in
scas
mov
imul
mov
mov
pop
push
adc
adc
xchg
push
bnd
mov
leave
push
cli
andb
lds
mov
lods
pop
das
icebp
int3
test
std
xchg
loopne
call
je
add
inc
nop
fdivr
jg
mov
lea
test
ret
rol
fs
pop
stc
cmp
bound
cwtl
mov
xor
js
dec
mov
push
adc
mov
pushf
dec
sub
aad
sub
mov
es
mov
dec
pop
les
popa
cmpsl
dec
xor
adc
push
dec
cwtl
jp
mov
rcrb
cld
sub
sbb
js
or
and
and
lret
inc
nop
cmp
push
mulps
inc
dec
ds
in
jb
push
cmp
fmulp
sub
jo
int3
add
push
xchg
rol
shrl
lods
push
sbb
rclb
stc
dec
push
subb
fs
sub
jns
popf
dec
mov
pop
push
jbe
sbb
pop
mov
imul
adc
in
lret
imul
daa
loopne
aam
fidivrl
in
and
leave
fistps
sarl
gs
adc
ljmp
ss
inc
mov
outsb
pop
jecxz
push
loop
addr16
sarb
mov
xor
pushf
je
fisttps
push
add
into
xor
imul
push
xor
incb
ss
mov
and
xor
xor
divb
and
dec
pop
bound
mov
jne
push
xchg
insb
test
mov
test
pop
outsb
pop
xor
mov
das
push
cmpb
repz
lods
sbb
push
xor
mul
sbb
pop
ror
jae
shl
sbb
cmpsb
xor
idivb
cmpsl
loope
push
arpl
in
int3
out
jge
das
rorb
cwtl
dec
jb
inc
out
mov
push
fsts
repz
in
sub
push
sbb
psubw
and
jns
in
ja
sbb
leave
jns
aas
aad
jno
xor
in
push
test
ljmp
dec
scas
or
bound
dec
hlt
scas
bound
adc
cmp
inc
arpl
inc
mov
jmp
gs
xor
aas
arpl
xchg
jns
cmpb
ret
mov
stos
testl
mov
and
mov
mov
int3
cld
lret
insl
mov
add
out
je
add
mov
call
int
bound
dec
loopne
mov
cmp
fs
imul
rcll
push
add
imul
xchg
lret
add
repnz
inc
pop
sub
xchg
mov
add
xor
leave
aas
stos
sub
mov
jno
sti
test
jecxz
dec
cmp
cmpsl
rcr
cmp
ret
push
lds
ret
sbb
and
add
xchg
movups
mov
jo
mov
mov
mov
ds
nop
lods
addr16
jmpw
mov
and
adc
xor
mov
xchg
and
xchg
sub
imul
cmp
popa
or
mov
push
js,pn
and
fdivrs
inc
rol
add
lcall
lds
ffree
mov
call
jae
rcrb
fstl
xchg
cmpsl
xor
iret
sbb
jb
dec
push
and
enter
pop
mov
add
sub
xor
xchg
insb
xchg
jne
and
mov
push
xor
pusha
fwait
adc
inc
sbb
cs
or
dec
jbe
or
into
out
inc
or
in
pop
dec
mov
jg
or
adc
stos
push
daa
jmp
leave
rclb
dec
mov
lods
in
xchg
sbb
mov
cmp
pop
fs
add
aad
dec
stc
and
pushf
test
cmp
ficompl
imul
jg
adc
mov
decl
inc
sarb
jecxz
popf
mov
push
ficomps
stos
push
cmp
jecxz
jb
xor
pop
push
mov
xchg
repz
ds
xchg
and
cmpsl
push
shll
inc
cmpsl
test
cmp
jecxz
and
or
adc
aad
nop
aam
and
testl
xor
loopne
push
jb
stos
and
xchg
cwtl
imul
stos
lcall
mov
lahf
pop
jp
mov
loope
leave
pop
stc
aaa
or
in
jp
movsl
sub
jecxz
out
cmp
inc
pop
sbb
xor
push
lods
fisubrl
idivb
sub
shr
loop
mov
xchg
mov
sbb
sub
cmpb
pop
ss
rcrb
cmp
stc
add
mov
mov
xor
inc
push
jne
pusha
lcall
cmp
xchg
loop
shlb
cld
les
pop
test
rorb
lock
into
xchg
pop
test
lods
gs
mov
es
or
sub
jl
stos
mov
das
inc
mov
adc
inc
mov
leave
andl
imul
mov
sarl
and
fwait
push
push
outsl
cmpsl
or
inc
cmp
push
mov
popf
cmpsl
out
or
mov
lret
lods
xor
sub
pop
jge
movsb
sahf
fs
dec
mov
out
jle
ret
imul
ja
pop
lods
lret
jmp
jae
movsb
aaa
mov
loopne
inc
call
sbb
mov
fs
cmpsl
mov
aam
xchg
pop
lea
xor
inc
pusha
cmpsb
fimuls
adc
mov
repz
ficoml
cmp
push
cli
inc
in
es
enter
ljmp
adc
inc
and
cmp
xchg
push
outsb
cmp
cmpb
cmp
pop
stc
mov
loop
pop
test
dec
fsubl
cmpsl
imul
lods
or
arpl
shlb
sub
xor
rorb
mov
mov
dec
sub
add
jl
andb
cwtl
cpuid
lahf
cmp
push
xchg
sar
sbb
insb
and
adc
std
xchg
dec
repz
mov
mov
sahf
je
mov
pop
and
rcrl
dec
stos
sbb
push
jl
inc
jmp
clc
push
ljmp
hlt
fsub
inc
pop
arpl
daa
jmp
push
lahf
cmc
dec
sahf
and
out
mov
sub
dec
insb
mov
mov
pushf
xchg
inc
shl
pop
rolb
call
andl
repz
add
xchg
and
fcompl
or
dec
in
push
cwtl
rcl
roll
dec
into
jo
arpl
sbb
outsb
sub
xor
cwtl
ja
icebp
mov
inc
sbbl
and
inc
lods
mov
daa
dec
xlat
xor
mov
mov
push
and
and
test
call
xor
xorl
insb
cld
push
into
movsl
xchg
or
jg
mov
pop
dec
cmp
cmpsl
adc
scas
imul
arpl
mov
dec
rcr
pop
jmp
or
jle
xor
xchg
and
mov
inc
or
jle
push
shl
sub
sub
jo,pn
adc
adc
mov
inc
test
nop
rcrl
out
add
or
inc
outsl
mov
imul
sub
cltd
xor
mov
je
std
out
insb
sbb
movsb
inc
jle
sbb
jge
dec
scas
push
or
push
sbb
sub
sub
adc
repz
jae
iret
xchg
or
cmp
out
push
fimuls
ljmp
dec
push
ja
stc
gs
mov
inc
mov
or
cmc
add
cmc
fs
filds
in
sub
loop
outsb
pop
sub
hlt
mov
push
lahf
mov
ss
jmp
data16
movsl
mov
pop
movl
mov
mov
repnz
popf
dec
mov
inc
icebp
dec
mov
fcom
sub
enter
mov
sub
aas
fwait
mov
mov
imul
push
dec
xor
push
inc
mov
aaa
sbb
out
mov
mov
dec
and
or
push
and
lahf
int3
push
mov
imul
jecxz
shl
dec
or
movsl
or
push
xchg
imul
mov
lods
mov
sbb
xchg
subl
sbb
cmp
or
jbe
mov
fs
mov
stc
xchg
jae
inc
xor
push
dec
incl
loopne
es
or
xor
mov
ss
adc
or
lcall
cmpsb
and
sub
lret
aad
dec
adc
xor
test
adc
daa
outsw
lock
jo
mov
movsl
hlt
sarl
fnstenv
stc
cmpsl
adc
push
mov
hlt
inc
les
insb
fsubl
inc
or
fbstp
dec
mov
sti
or
mov
adc
pop
mov
pushf
loop
pop
int3
ficoml
jb
fs
lock
in
jae
mov
or
sub
xor
lock
xchg
cmpsl
adc
pop
or
push
cmc
dec
sub
jne
pusha
xchg
lds
xor
lcall
push
addr16
xor
sub
ss
inc
or
fimull
fildl
xchg
testl
inc
xor
mov
repz
pop
in
pop
out
gs
lods
pop
xchg
clc
aas
ret
push
mov
adc
cmp
inc
and
movl
repnz
push
insl
cmp
dec
push
add
imul
aam
clc
xor
aad
imul
mov
and
aad
mov
popa
ss
cmp
pusha
mov
or
xchg
out
jb
inc
pop
jmp
pop
nop
inc
fwait
pop
mov
push
and
andb
repnz
pusha
shll
into
cmp
es
jp
jl
cli
ror
xor
jle
dec
pop
out
or
add
xchg
dec
mov
leave
andl
das
enter
fsqrt
clc
jb
std
pop
and
outsl
sahf
pop
inc
mov
fadds
orb
sahf
insl
icebp
popf
sbb
adc
xor
shrb
lcall
mov
jne
lods
andb
icebp
cmp
outsl
cmp
push
pop
sub
jmp
jae
xchg
bound
lret
lods
xor
data16
nop
cwtl
push
push
in
sub
mov
ret
push
test
out
and
sahf
adc
enter
int3
fdivs
sbb
add
add
out
ret
push
shrb
push
inc
flds
rcrb
icebp
nop
dec
cmp
mov
lahf
bound
sub
aaa
mov
or
mov
stos
ja
aam
xchg
arpl
adc
xor
dec
out
dec
test
mov
shll
pop
cmp
popf
cmpsl
mov
test
xchg
out
test
lods
mov
stos
jae
pop
mov
pop
icebp
lret
mov
hlt
mov
into
outsb
ret
xchg
sub
dec
test
mov
sbb
loopne
ss
insb
je
or
ljmpw
rorb
mov
cs
and
test
loopne
jnp
jmp
leave
jae
and
jnp
cwtl
ljmp
fsubrl
sub
mov
jecxz
sub
dec
dec
jge
inc
adc
addr16
aam
pop
cltd
cli
in
not
pop
cld
aad
sbb
fistpll
sub
jge
push
push
std
mov
aas
adc
ror
das
add
incl
jp
dec
sbb
inc
sbb
jb
push
scas
fcmovbe
dec
es
mov
clc
add
inc
inc
mov
imulb
insl
daa
or
sub
mov
imul
jbe
rcr
jp
pusha
pusha
push
push
and
xchg
ljmp
dec
sub
mov
scas
mov
icebp
lea
clc
xchg
mov
jno
or
add
and
add
sarb
cli
sbb
shll
pushf
mov
aaa
movsl
pop
mov
add
push
add
std
xor
mov
mov
cmp
cmp
push
xor
jle
addr16
jmp
bound
jge
inc
setno
sub
cmp
xor
iret
xchg
or
mov
aad
adc
sbb
loop
fwait
dec
push
pop
or
jbe
push
stos
push
mov
das
nop
mov
mov
add
push
adc
cltd
test
aaa
mov
rorl
data16
push
mov
sub
xchg
mov
mov
or
aad
jae
jno
mov
xchg
aam
stos
pop
push
push
sbb
inc
out
push
sbb
xchg
fbld
mov
mov
jmp
movsl
inc
or
aad
cwtl
push
nop
pop
xchg
mov
fimuls
or
call
es
dec
sbb
daa
dec
jge
js
lret
push
pop
outsb
pushf
mov
lret
sbb
push
add
inc
shll
xchg
lock
and
or
fs
adc
or
and
orb
mov
mov
xor
xchg
call
adc
std
ja
push
push
fsub
dec
dec
enter
cmovp
mov
bound
ja
xchg
stos
lods
ljmp
mov
in
xchg
cmpsl
push
mov
mov
or
lods
rcrl
mov
or
es
xchg
icebp
test
sbb
jecxz
stos
or
into
xchg
inc
jne
pop
push
add
mull
cmp
and
sbb
lods
lock
std
sbb
fldl
rclb
pop
out
ds
push
shlb
or
ja
pushl
js
adc
pusha
hlt
push
adc
pushf
jg
clc
push
xchg
xchg
dec
pop
cs
mov
xorl
push
stos
cmpsl
xor
es
adc
push
std
jnp
mulps
mov
push
jno
loop
mov
sub
shrl
pop
cmpsb
adc
inc
xor
push
cmp
xchg
loope
pop
lock
rcrl
imull
pop
push
or
inc
std
sub
mov
das
mov
ret
adc
pop
push
sbb
jne
or
fsub
fisubrs
bound
dec
push
fdiv
cld
jbe
dec
ljmp
fstpl
xchg
es
int
js
popf
jae
ret
pop
adc
mov
mov
or
push
imul
and
test
lea
pop
out
outsl
cmc
jae
or
sub
adcl
iret
sbb
fstps
jp
hlt
pop
pushf
sub
rolb
inc
and
dec
push
insb
enter
mov
xchg
and
je
jp
sarl
push
mov
insb
insl
rolb
jae
or
in
jae
xchg
stos
jo
lods
mov
es
loop
sub
stos
mov
jbe
inc
fwait
jne
cmovbe
fwait
jb
lock
ret
lret
xor
mov
mov
adc
stos
inc
mov
adc
mov
adc
inc
js
or
test
sbb
or
xchg
cmpsl
sub
scas
fstl
sub
jmp
jl
es
in
pop
push
or
cltd
dec
xchg
ficoms
push
mov
mov
fsubs
movsb
fprem
leave
xchg
sub
mul
mov
repz
mov
cmp
das
pop
sti
cmp
jnp
pushf
or
outsl
into
jo
fwait
xchg
or
lods
imul
outsl
mov
testl
adc
adc
add
loop
dec
ljmp
out
call
mov
mov
rorb
in
adc
nop
test
mul
out
xchg
in
dec
popl
gs
inc
lds
push
push
nop
lret
and
cmp
in
ret
test
ss
repnz
cmc
inc
jmp
pop
andl
cmp
push
out
xchg
ret
push
push
lea
lods
stos
cld
xchg
xchg
lret
dec
scas
mov
pop
nop
dec
scas
xchg
xchg
repnz
shr
imul
xchg
xchg
mov
fs
outsl
cmpsl
mov
mov
das
sub
ljmp
lea
repnz
xchg
adc
cmp
xor
mov
into
add
push
or
add
xchg
dec
jnp
cld
loopne
pop
mov
push
mov
aad
mov
fisubrl
cmp
push
les
push
cmp
fsubr
pop
into
mov
mov
nop
jle,pn
stc
in
pushf
sub
or
popf
sbb
mov
sbb
cmpsl
push
mov
das
mov
push
and
cmp
mov
xchg
int
sahf
jno
adc
stc
push
inc
lcall
adc
inc
and
shrb
adc
jge
test
xor
pop
push
pop
dec
out
fdivrl
jne
or
push
in
ret
xor
sub
pop
dec
jae
and
lret
sub
in
movsl
in
inc
mov
shlb
pop
xchg
adc
jecxz
sahf
pop
add
inc
mov
pop
out
pop
xchg
icebp
dec
sbbb
jo
add
inc
adc
add
push
icebp
jg
rcr
jge
mov
lods
xlat
push
mov
sub
out
bound
test
or
hlt
dec
hlt
adc
mov
dec
and
sbb
inc
in
ljmp
xchg
lahf
cmp
cmp
dec
and
addr16
mov
cwtl
std
inc
pop
xor
push
inc
in
in
pop
add
mov
lods
dec
mov
addl
jg
or
nop
adc
cmp
add
repnz
enter
outsl
loop
xlat
push
shll
mov
dec
repnz
dec
sti
jmp
int
sti
xchg
insb
aaa
mov
push
mov
in
addr16
pop
pop
push
das
rorl
pop
gs
in
data16
push
lea
xchg
dec
fs
mov
xor
jb
xor
lahf
outsl
xor
loop
lret
pop
hlt
fwait
xor
push
mov
mov
or
cli
test
mov
lea
movsl
sarl
jno
mov
xchg
and
inc
xchg
leavew
pop
stos
mov
mov
cmp
cmp
or
jae
ljmp
or
push
enter
lahf
or
int3
nop
frstor
cmp
jl
and
xchg
ret
and
mov
and
roll
rcl
iret
lahf
pop
out
jne
mov
cmp
popf
aad
or
pop
sbb
sub
dec
mov
repnz
jne
pop
fdivrl
mov
or
and
pop
popa
lahf
cmp
loope
mov
jae
test
mov
add
ficoms
insl
cwtl
roll
cmpsl
lahf
mov
dec
test
push
push
out
ljmp
data16
insl
pop
dec
aas
movaps
xor
sub
insl
pop
xchg
ss
iret
push
and
mov
mov
scas
mov
xor
fdivrs
fildl
cmc
js
adcl
icebp
ljmp
cwtl
ret
xchg
shl
das
fs
ljmp
out
inc
mov
pop
push
push
lods
pop
or
push
sbb
cli
add
lock
add
sub
xor
adc
cmp
xchg
movsb
push
xor
aas
push
jmp
jbe
in
lods
int
xor
xchg
xor
push
xchg
fwait
cwtl
shl
das
aam
or
addr16
ds
mov
inc
movsb
lahf
cli
shlb
jno
adc
loop
repz
jne
popf
push
mov
and
mov
ds
es
sti
pop
or
out
sarl
cs
ja
mov
adc
adc
les
mov
lods
sarl
and
pop
insb
pop
or
push
pop
and
jno
mov
paddw
inc
xchg
jge
mov
dec
lret
sbb
jmp
or
add
jp
jo
push
jle
mov
jb
push
sub
rol
xchg
inc
jle
and
sub
sbb
loope
jp
or
js
pop
and
out
mov
dec
push
pop
addr16
mov
sub
int
sbb
cmpsb
pop
dec
mov
mov
cmpl
or
mov
mov
dec
push
push
and
aam
lahf
int
incl
push
sub
push
inc
adc
mov
into
ljmp
std
and
jnp
lea
lods
nop
sub
cmp
bound
adc
jo
testl
in
add
clc
test
add
rcr
sbb
push
cld
int
push
cmp
sbb
pminsw
mov
jo
leave
adc
sbb
xor
out
inc
imul
pusha
dec
in
sub
xchg
imul
inc
or
bswap
sub
les
outsl
adc
loope
divb
pop
lret
test
dec
in
inc
xor
orl
leave
dec
xor
scas
adc
sbb
fs
add
pushf
pusha
repnz
pop
mov
push
and
outsb
outsb
or
jnp
loope
inc
adc
and
inc
mov
add
cmp
inc
cs
sbb
popl
lods
pusha
cld
mov
rcll
andb
outsb
xor
into
xor
lahf
and
jecxz
test
scas
cltd
incl
inc
add
shl
lahf
dec
outsb
adc
mov
sti
lods
inc
loope
pop
insb
mov
xchg
mov
xorl
cmpsb
lcall
rclb
inc
inc
faddl
out
andb
xor
pop
div
or
mov
and
pusha
cmp
mov
aad
ret
and
outsb
scas
imul
mov
sub
cmp
inc
data16
sub
fcoml
je
scas
adc
dec
sbb
out
jge
lret
pop
fstpl
cmp
orl
addr16
lods
insb
jbe
mov
stc
leave
push
jbe
je
lock
in
inc
jmp
add
xor
push
ss
lea
mov
mov
jg
out
sti
hlt
xor
mov
pusha
jno
cmp
add
test
mov
add
xchg
add
loopne
sbb
fisttpl
stos
lods
pop
cmp
mov
xchg
or
mov
jge
mov
gs
fdivs
push
ljmp
mov
fwait
stc
ret
sub
cld
fsubl
inc
inc
mov
push
or
xchg
andb
out
or
pop
mov
dec
sub
xor
pop
fldl
std
mov
lods
bound
and
ret
cltd
imul
adc
jnp
and
es
repnz
ljmp
cmp
aaa
cltd
icebp
push
adc
ljmp
inc
xchg
pusha
vmwrite
js
or
sarb
and
les
imul
in
xchg
in
sbb
mov
loop
jb
scas
or
inc
ja
subl
mull
mov
mov
fistpll
das
jp
dec
sub
fdivrs
inc
idivb
jg
loopne
pop
and
inc
dec
arpl
rcrb
inc
movsb
xchg
cmp
mov
pop
or
inc
out
xor
aas
mov
frstor
or
ja
and
jb
xor
xchg
popf
repz
adc
or
lahf
cmp
pop
sbb
inc
mov
std
sbbb
repnz
ret
je
es
push
cmp
pop
push
mov
popf
jnp
loop
mov
inc
xchg
aad
test
pop
loop
push
mov
jg
xorb
popf
cmp
sub
popf
xchg
sbb
aas
cli
cmpsb
iret
pop
shll
loope
mov
mov
jbe
cwtl
aam
xchg
jmp
movsl
cmp
in
cmp
pop
daa
sarb
push
and
ret
leave
rolb
xor
ret
in
rorb
sub
pop
jmp
fidivrl
std
les
aas
push
mov
add
icebp
add
push
mov
pop
js
rcll
into
fldcw
pop
es
and
frstor
out
adc
bound
sub
pop
iret
mov
add
je
movsl
insb
aad
das
mov
adc
jl
push
adc
inc
mov
nop
ficomps
and
push
mov
dec
clc
push
push
mov
clc
jne
movsb
fidivrs
mov
xor
inc
cmp
insb
mov
andb
cmp
xor
xor
repz
inc
das
call
into
imul
out
scas
push
mulb
push
sbb
fwait
jmp
sahf
add
push
inc
sbb
insb
mov
jns
cs
xor
push
lahf
std
xchg
pop
mov
mov
popf
adc
lods
ja
pop
jmp
dec
sbb
aam
push
adc
add
push
mov
or
pop
movsl
mov
push
mov
jge
jno
push
repz
and
rcrb
lret
outsl
and
xor
cmc
pop
addl
jne
cwtl
mov
mov
fiaddl
shlb
jno
enter
roll
outsb
dec
adc
loopne
in
ds
pop
popa
mov
daa
pop
ret
loopne
xchg
add
dec
sbb
in
sub
sbb
cmpb
sbb
dec
xor
cs
fs
gs
je
mov
lcall
mov
out
mov
mov
jns
sahf
sbb
push
inc
inc
pop
movl
insl
inc
lds
test
bound
int
out
cmp
fmulp
jp
inc
inc
adc
sbb
lret
jmp
mov
aad
mov
ds
sub
push
mov
std
pop
jecxz
loopne
xchg
xchg
ja
test
add
and
sbb
xchg
outsl
frstor
out
jo
roll
pop
dec
cltd
xchg
lcall
mov
icebp
enter
into
movsb
lret
or
adc
loope
loop
mov
mov
mov
jb
sarl
pop
fidivs
add
into
cmpsl
sahf
sub
fisubrs
push
data16
or
sbb
stc
cmp
movsl
inc
pop
xorl
add
cwtl
ds
xor
pushf
sub
sahf
jecxz
int3
jno
leave
xchg
shl
fwait
sbb
mov
mov
mov
mov
jmp
push
pushf
arpl
lcall
mov
mov
leave
ja
dec
mov
inc
cmpsl
pop
inc
shrb
insl
into
lret
mov
pop
push
ds
push
cli
fxch
pop
cmpsl
int3
xchg
aad
xor
and
test
add
popf
or
lcall
ds
dec
es
test
lods
test
or
call
xor
pop
pop
sub
dec
mov
rol
pop
std
movsb
cmpsb
out
sahf
pop
mov
sbb
cld
mov
aad
add
push
or
mov
aaa
daa
cmp
inc
and
js
in
scas
and
or
sahf
clc
rorb
or
xor
movb
xchg
fidivrs
jp
jno
cli
dec
mov
imul
xchg
lret
fmull
or
adc
aas
pop
fstpt
lock
xor
pop
mov
or
lea
push
xlat
inc
push
mov
cmp
mov
bound
stos
movsl
decb
repz
xchg
clc
insl
jnp
xor
lret
dec
dec
pop
and
xchg
sub
xchg
adc
jnp
clc
cli
stos
pop
jecxz
and
jb
cmp
mov
addr16
jnp
pop
imul
ss
pop
xor
ficoml
scas
adc
mov
call
pop
scas
popa
std
sarb
insb
xchg
dec
xchg
push
sbb
das
lods
int
outsb
pop
negb
push
out
push
aad
fdivs
dec
add
xchg
or
and
sbb
push
stos
mov
and
adc
inc
into
cmpl
xchg
cli
andnps
es
add
dec
dec
jg
push
ret
call
ret
sbb
dec
ljmp
cmp
dec
lcall
js
cmpsl
push
jl
push
and
xor
sub
mov
jl
cmp
loop,pt
sbb
call
clc
mov
or
dec
sbb
imul
pushf
cmpsb
loope
xchg
lods
into
push
fisubrs
and
cmp
pop
lret
in
mov
imul
shll
iret
xchg
xchg
stc
pop
adc
dec
movsl
xor
popf
lea
outsb
adc
cld
cmpsl
pop
call
je
repnz
mov
push
icebp
out
mov
fnstenv
inc
out
cmovne
sbb
mov
fs
cmc
loope
sbb
xor
mov
bound
pop
cmp
adc
aam
andl
push
and
mov
sarl
inc
push
mov
cmp
cmpsl
sti
sub
movsl
out
aad
enter
sbb
leave
movsb
xchg
add
insl
push
inc
jno
idivl
insb
ficoml
fimull
or
lahf
imul
in
cmpsl
popa
adc
pusha
in
xor
mov
and
fcoml
mov
ret
sarl
pop
nop
out
jl
or
divl
xor
sti
subl
in
mov
pop
ror
add
in
xchg
push
stos
xchg
popf
lods
adc
cmp
add
sbb
xchg
dec
pop
jmp
add
push
mov
or
lods
je
mov
push
mov
mov
and
lcall
xchg
pop
loope
daa
pop
dec
pop
add
dec
and
cmp
mov
push
cmp
jbe
nop
jge
xchg
pop
jae
enter
out
xchg
pop
sbb
aaa
add
repz
je
fisubrs
inc
jp
sbb
jb
inc
and
xor
cltd
loopne
cmp
add
int3
fidivl
scas
mov
cltd
nop
insl
fldt
jecxz
xchg
add
mov
outsb
out
fs
pop
dec
sbb
and
and
pop
in
lret
into
fcmovne
cmpsl
jmp
xor
sahf
imul
jno
or
stc
inc
mov
pushf
add
inc
int
cmp
stc
mov
xor
out
pop
aad
mov
icebp
sbb
fimuls
jbe
sarb
mulb
mov
sbb
mov
or
pop
cltd
test
lcall
jp
shll
iret
inc
xchg
or
clc
cvtpi2ps
jns
mov
mov
mov
mov
xor
mov
adc
rcrb
push
mov
and
pop
add
push
aas
test
aad
and
mov
addb
xchg
outsb
clc
inc
aas
fwait
inc
push
and
in
iret
shl
add
xchg
gs
and
mov
mov
pop
or
push
pop
aas
xor
pop
pop
jne
xchg
scas
clc
hlt
and
lgs
addr16
mov
je
add
loope
out
js
pop
jmp
jp
nop
repz
push
fstpl
xor
popa
test
jmp
and
repz
sbb
adc
mov
sub
add
lock
pop
in
and
dec
dec
dec
and
cld
mov
push
and
mov
mov
adc
dec
outsl
adc
aam
sub
sub
in
lret
punpcklbw
xchg
out
pop
pop
ficoml
addr16
mov
lock
das
lock
mov
xchg
push
push
mov
fbstp
fxam
addl
dec
inc
cmp
test
pop
gs
cmp
sbb
aas
cmc
inc
inc
repz
outsb
stos
cs
pop
popa
test
fs
xor
mov
cmp
inc
or
cwtl
aad
outsl
jp
jo
cmc
test
mov
xchg
xchg
adc
or
xor
fwait
xchg
pop
shl
pop
dec
insl
test
adc
fwait
scas
push
dec
lret
out
popa
mov
fs
push
xor
out
adc
pushf
std
mov
cmp
test
cs
and
and
push
jmp
or
dec
test
addr16
jecxz
jae
lret
cmp
adc
inc
inc
shll
dec
xor
ja
cmp
sub
add
lret
jmp
pop
mov
xor
mov
aam
movsb
je
sbb
adc
out
sbb
xor
or
push
push
fbld
push
sbb
pop
or
mov
adc
lods
movsl
call
jno
mov
and
sub
sub
and
xchg
mov
test
js
add
mov
or
clc
pop
adc
iret
sbb
push
adc
fidivrs
bound
push
dec
sbb
pcmpeqw
dec
sub
outsl
dec
jno
test
cmpl
jns
lcall
push
and
inc
aam
pop
jno
or
scas
in
dec
push
je
add
jnp
comiss
cli
aas
nop
out
les
or
cs
pop
jl
enter
aam
loope
mov
aad
fildl
jne
out
or
cmp
fadds
jp
pop
insl
leave
popfw
pop
fildl
push
pop
imul
cmp
loopne
fcoms
stos
enter
adc
lds
adc
jmp
sbb
stos
add
dec
daa
mov
mov
sub
loope
ds
insl
ss
push
pop
call
test
cmp
or
ret
mov
incb
aaa
and
mov
sbb
fiadds
add
or
gs
loop
push
ret
cmp
and
loope
adc
sarl
adc
mov
stos
dec
ret
adc
jbe
dec
or
add
mov
lea
lock
pop
pop
inc
lds
imul
rcrb
mov
cltd
push
jns
or
adc
je
les
out
fstl
mov
jb
jge
shl
lret
insb
shlb
inc
int
inc
iret
int
shll
les
inc
mov
enter
add
adc
and
aas
lret
add
jg
in
out
cmpsb
xchg
shlb
mov
fnstenv
bound
add
lods
pop
mov
dec
out
cwtl
hlt
clc
add
sub
jge
add
ja
in
cwtl
loop
mov
jmp
push
popf
mov
adc
test
inc
lret
or
mov
mov
pop
fdivl
sub
cli
pushf
or
imul
cmp
sub
xor
nop
xor
dec
movsl
add
popf
lahf
test
mov
out
push
pop
adc
jb
mov
xchg
and
aaa
mov
movb
jno
jmp
pop
int3
mov
mov
pop
enter
nop
rcl
inc
xchg
cmpsl
adc
or
ret
cs
cwtl
nop
dec
cmp
jbe
clc
mov
jne
adc
es
and
cmpsl
xor
popf
mov
mov
ror
repnz
sub
sbb
push
shlb
mov
insb
sti
lds
and
dec
add
sbb
push
pop
repz
in
dec
movsl
cmp
mov
mov
adc
das
adc
push
insb
ds
mov
popa
jo
sub
ret
add
aas
push
loopne
xchg
mov
xchg
dec
or
dec
outsl
xor
inc
out
aaa
nop
sub
fwait
push
push
mov
in
inc
mov
loopne
dec
in
xor
xor
push
mov
sub
pop
lcall
cwtl
dec
cmp
pop
hlt
mov
add
roll
push
leave
fstpl
xor
mov
enter
sub
pop
test
cmp
repnz
mov
stos
dec
pop
xchg
stos
jl
adc
push
fisttps
adc
test
inc
rorl
pop
aad
mov
adc
add
ret
xor
and
leave
xchg
stos
loopne
inc
jno
hlt
insb
or
mov
push
pop
in
in
fs
js
push
mov
jb
ljmp
insl
add
xchg
mov
push
or
lret
pusha
cmp
and
xor
idivl
ficomps
cld
fisubs
xchg
pop
fstpt
roll
mov
ljmp
or
fs
icebp
cltd
ds
add
loop
aas
stos
mov
pop
js
jae
into
cmpsb
mov
mov
push
xor
dec
mov
adc
or
add
inc
fidivrl
and
fcmove
mov
clc
in
and
pop
dec
gs
movsl
outsl
push
stos
test
insb
mov
les
sbb
jmp
popa
ret
out
repnz
or
gs
jp
enter
push
in
mov
push
insl
jae
aas
orl
flds
mov
and
add
inc
add
lret
sbb
or
lret
adc
fstl
sub
jnp
inc
lock
xchg
push
dec
fst
xchg
sub
sub
jno
cmp
xchg
or
jnp
dec
dec
faddl
jmp
rep
mov
pop
xchg
hlt
int
js
sub
out
jne
adc
push
or
adc
repnz
out
dec
fidivrl
push
jg
cmpsb
push
dec
add
testb
notl
jmp
sbb
push
and
std
sub
fists
xchg
outsl
dec
fs
mov
test
inc
dec
mov
inc
and
cmc
lock
sub
xchg
es
cwtl
fwait
sahf
mov
mov
add
cmpsb
push
adc
idivb
mov
sbb
mov
ljmp
lcall
cmp
mov
punpckhdq
add
in
jnp
jl
rorb
je
into
push
stos
mov
inc
daa
data16
ja
and
lcall
adc
pushf
jecxz
push
movsb
cmpl
cmpsb
jo
testb
stos
sub
ss
mov
cmp
add
daa
testb
es
bound
sub
xor
adc
inc
or
or
jb
push
push
jp
and
rcrl
cmpsb
dec
mov
push
in
sub
sub
inc
mov
js
je
sub
int
pop
dec
mov
add
or
or
and
loope
outsl
jp
or
sbb
scas
clc
sub
enter
cmpsl
mov
div
mov
xchg
xor
les
jns
into
inc
outsb
jg
jle
call
jns
movsl
shl
jle
cld
test
sbb
in
and
lcall
fwait
lods
outsl
jb
enter
mov
into
mov
and
jmp
pop
mov
popf
adc
mov
addr16
mov
jle
int
and
jp
dec
fisubl
pop
daa
mov
data16
add
daa
andb
scas
dec
add
out
jnp
sub
mov
fidivs
sbb
mov
out
jl
xchg
je
insl
adc
xor
cmp
or
ja
xor
enter
enter
adc
sahf
or
lods
in
mov
add
shll
scas
xor
mov
sbb
mov
ss
and
pop
mov
mov
sarb
lret
cmpsl
nop
push
gs
sbb
out
shll
xchg
stos
jmp
xor
out
lock
andl
divl
sbb
mov
lds
xor
jnp
popf
mov
pop
jae
mov
jnp
pushf
loop
add
scas
xlat
cmp
addr16
fwait
out
pusha
dec
test
stc
icebp
out
jmp
cmp
rclb
mov
push
js
dec
in
aas
scas
and
ja
shll
pop
push
inc
sbb
imulb
fimull
add
mov
imul
lret
and
mov
xchg
je
movsb
xor
xor
loope
stc
imul
bound
int
jp
push
aam
xchg
xchg
pop
call
pop
xor
mov
pop
and
sbb
lods
adc
fildll
lcall
push
mov
scas
stc
scas
dec
scas
fcmovbe
jle
inc
pop
and
outsb
mov
inc
push
sbb
dec
sbb
cmc
push
mov
mov
cmc
cmpsb
jns
xchg
pop
inc
hlt
jg
clflush
jne
call
push
mov
shl
cltd
dec
lret
lock
sub
xor
data16
fldenv
cld
loope
adcb
sbb
faddl
leave
fwait
lock
xlat
sbb
add
fcomip
sbb
push
sbb
pop
cltd
lahf
pop
outsl
and
add
fstl
inc
pop
faddl
bnd
or
test
ljmp
ss
subl
int
popf
or
lods
sub
das
add
mov
pop
lcall
pop
mov
enter
mov
mov
xlat
cld
jle
mov
inc
mov
int
popf
mov
sti
or
popf
outsl
mov
pop
mov
cmpsb
sbb
lret
cmp
pop
nop
jl
les
cmp
jmp
dec
push
into
test
aas
fdivs
cmc
scas
sidtl
mov
pop
andl
jno
mov
sbb
in
pop
xchg
adc
cli
andl
and
mov
xchg
popf
sbb
inc
loop
add
pop
mov
out
add
popf
out
addr16
push
lock
add
loopne
mov
mov
cs
sbb
cltd
mov
sub
das
jnp
push
jnp
and
dec
lret
leave
seta
repz
in
cmp
mov
mov
xchg
dec
xchg
add
cmp
in
sbb
jne
push
lret
jl
xor
int3
in
in
popf
aam
adcb
ds
rcrb
adc
insb
lret
and
push
data16
adc
jne
sarb
or
mov
leave
dec
mov
add
mov
in
enter
or
sub
mov
stc
lcall
imul
inc
xor
js
sub
jg
dec
adc
out
dec
or
or
mov
sub
adc
mov
push
xor
jecxz
nop
inc
hlt
mov
cltd
push
mov
cmpsb
adc
aas
pop
sahf
leave
ss
mov
pop
adc
push
mov
faddp
push
int
jl
addr16
sbb
push
xchg
test
xor
subl
pop
push
stos
mov
aam
mov
mov
data16
dec
and
int
xchg
enter
sti
fistps
iret
push
jae
xchg
test
fistpl
pavgb
sbb
cmp
arpl
adc
mov
popa
repnz
ss
lea
rclb
mov
aad
std
jns
jecxz
fcoms
xchg
adc
mov
enter
xchg
dec
sub
popa
cmpsb
pop
pusha
pop
mov
pop
outsb
sbb
inc
es
cmp
or
cmp
sub
xor
jp
mov
sbb
mov
push
mov
out
popa
xor
push
sub
jnp
or
fildl
push
fbstp
out
cltd
pop
imul
mov
enter
popa
mov
sub
loop
sarl
scas
test
sub
loope
les
sarl
loopne
fsts
push
jle
jle
sbb
or
mov
pop
xchg
inc
lret
data16
xor
ss
shrl
inc
ja
int
in
adc
add
jns
dec
stc
push
lcall
in
jno
in
enter
xchg
ljmp
add
notb
pop
loopne
sti
mov
jns
jno
lods
mov
jae
inc
ss
mov
rclb
cmpsl
sti
adc
push
xor
sbb
adc
jae
fadds
mov
push
xchg
jne
or
inc
pusha
xchg
xchg
jb
add
aad
xchg
mov
shll
loopne
jmp
mov
push
sub
nop
pop
daa
mov
jmp
mov
or
add
push
mov
scas
movsl
enter
jbe
cwtl
inc
mov
mov
cmp
xor
outsl
in
lret
in
outsl
js
cs
inc
in
arpl
or
stos
outsl
dec
scas
cmp
pop
aad
loope
xchg
popf
lods
jo
cwtl
inc
xor
or
stos
mov
xor
dec
cmp
loope
lret
pusha
sub
jge
and
aam
mov
lahf
ss
sub
adc
and
xor
jl
rorb
int
pop
out
dec
inc
fsts
ja
fadds
jmp
cmc
sbb
pop
int3
jge
in
inc
pop
in
push
adc
and
inc
rcll
mov
bound
mov
xchg
jl
xchg
add
cli
xchg
dec
sub
imul
call
pop
pop
and
jp
xchg
fwait
aad
xor
test
add
inc
xchg
movsl
fisubs
dec
into
adc
mov
xor
mov
testl
scas
orb
push
lods
lret
lods
xor
pusha
cltd
dec
lock
push
inc
cmc
sahf
push
dec
xor
ja
in
inc
pxor
aad
movswl
int
mov
cmp
add
fdivrs
bnd
mul
cmp
mov
push
jg
loopne
xor
adc
iret
out
mov
loope
jo
push
cs
iret
inc
mov
and
xor
pusha
in
pusha
sbb
inc
lock
or
and
xor
adc
lret
xchg
jbe
sbb
mov
js
dec
dec
out
push
mov
mov
dec
out
icebp
cmp
arpl
push
sub
xchg
add
push
pop
and
cmp
xchg
dec
adc
clc
shlb
or
in
fldcw
clc
jne
jg
aad
jle
je
sub
inc
je
fdivl
xor
push
dec
xor
or
inc
push
xor
repnz
add
push
add
hlt
add
mov
clc
mov
daa
in
divb
inc
adc
sbb
and
lahf
out
dec
add
aaa
movb
nop
xchg
push
xchg
cmp
pushf
push
xor
inc
lahf
inc
lds
add
icebp
loopne
inc
push
push
int
in
inc
lret
fdivrs
lsl
scas
inc
mov
cmpsb
push
sbb
cmp
or
cmp
movsb
fidivs
out
push
push
xchg
mov
fdiv
out
push
jl
and
mov
rep
lods
sti
clc
std
xor
xchg
mov
sbb
xor
mov
insb
or
cmc
dec
pop
jmp
rolb
adc
and
fs
push
jl
push
jmp
hlt
xchg
mov
mov
push
pusha
or
fdivrs
cli
and
in
test
mov
jno
fbstp
in
pop
or
mov
mov
inc
sbb
lods
ss
imul
or
test
lcall
mov
int3
insl
sbb
into
imul
sahf
aas
xlat
mov
lock
repnz
push
idivb
xor
clc
dec
pop
hlt
enter
dec
std
std
imul
mov
inc
addl
or
ss
xor
cwtl
cmc
testb
sub
push
adc
jnp
addr16
pop
xchg
icebp
inc
fdiv
cli
in
jns
lods
call
mov
arpl
push
out
jl
out
add
mov
nop
lds
inc
inc
adc
jns
data16
in
icebp
fildl
js
out
xor
outsl
xchg
mov
ljmp
rcrb
sar
cli
xchg
mov
movsb
sub
in
xlat
in
adc
in
mov
jb
bound
aas
mov
ja
inc
shrb
arpl
mov
stos
fisttpl
xchg
mov
dec
push
or
adcl
iret
call
add
xchg
faddp
inc
ja
jno
fmul
add
cmc
dec
imul
mov
ret
xor
mov
stc
lcall
sbb
dec
insl
outsl
js
adc
jae
push
jbe
je
jl
ret
cs
int
mov
popf
test
fidivs
inc
es
lock
add
lcall
addr16
out
pusha
cmp
aam
cmp
lcall
cmp
and
mov
ret
in
inc
in
out
sbb
pop
mov
out
outsl
outsb
test
fs
pop
ss
enter
lds
shrb
adc
jecxz
pop
lcall
dec
or
in
nop
lahf
dec
xor
pop
je
or
lahf
sub
ss
mov
xor
ficoml
mov
and
divb
adcl
xchg
cmpsl
mov
dec
cmpsb
lock
sbb
cmp
mov
idiv
aad
push
push
xlat
call
leave
add
pusha
inc
add
insl
scas
cmp
cmc
repz
pop
adcb
sti
fisttpll
cmpsl
mov
xchg
pop
mov
adc
sub
arpl
adc
add
mov
push
dec
add
sbb
aas
cwtl
addr16
jbe
mov
out
pushl
mov
aad
add
test
push
pop
test
cmpsl
jp
inc
or
shlb
or
pusha
mov
jge
xchg
push
push
cmp
add
aam
cmp
pop
xchg
arpl
cvtps2pd
adc
sbb
mov
es
rclb
fdiv
in
jmp
sbb
mov
xor
mov
inc
jo
outsb
nop
shlb
loope
ljmp
mov
jno
mov
imull
rorl
cs
push
jl
clc
es
or
pop
ds
dec
add
mov
pop
inc
cmpb
sbb
xorb
cmp
mov
lods
sub
jo
enter
mov
pop
or
xor
fildl
add
arpl
or
inc
sbb
mov
jl
ret
sbb
scas
and
dec
sbb
lret
imul
adc
je
lahf
xlat
outsl
sbb
mov
add
imul
mov
add
sub
fnstsw
enter
in
jg
xor
dec
mov
iret
or
in
jge
fs
aam
sub
jp
add
int3
cmp
mov
repz
xchg
and
and
pop
jo
fldl2e
loop
mov
js
cltd
mov
hlt
cld
jae
sub
cmp
out
ret
mov
movsb
jno
mov
sbb
data16
fildll
lahf
inc
orl
repnz
jle
mov
int
and
push
ss
or
dec
ljmp
mov
xor
in
loopne
push
in
fsub
mov
fs
loopne
or
data16
xchg
add
mov
aaa
addb
hlt
outsl
iret
les
or
addr16
sbb
mov
fistl
repz
mov
push
test
sbbb
jge
out
lret
les
orb
js
fcoms
cmpsb
jno
scas
sub
push
aas
repnz
loopne
popa
mov
xchg
rolb
push
int
dec
das
insl
dec
test
adc
outsl
inc
jmp
in
cld
pop
lahf
lods
and
imul
ds
out
push
movsl
inc
xor
data16
mov
lods
cmp
adc
ror
out
xchg
dec
sbb
sbb
lret
es
mov
je
inc
adc
lcall
push
or
sub
test
dec
hlt
test
jecxz
cmc
and
es
cmp
aad
lds
pushf
div
repz
sub
sbb
enter
sub
leave
scas
and
stc
fwait
mov
add
jp
inc
outsb
inc
cmp
sahf
cmp
out
mov
scas
test
adc
mov
adc
es
cmp
movb
pop
in
in
pop
mov
sub
mov
outsl
add
mov
cmpsb
mov
or
in
and
es
mov
es
cmpsl
push
dec
jg
lahf
xor
shlb
adc
dec
lret
into
lds
sbb
int3
jle
icebp
inc
inc
roll
jmp
out
arpl
mov
sbb
call
inc
std
int3
ja
lret
push
clc
jns
push
sbb
push
dec
push
and
adc
push
es
cmp
data16
ret
mov
out
or
adc
es
mov
dec
pop
pop
jp
add
shrl
je
mov
ss
or
jmp
es
sub
ffreep
xorl
scas
mov
subl
xlat
sbb
stos
fs
addr16
hlt
sub
push
mov
jmp
imul
iret
lock
jge
pop
mov
adc
lahf
lea
int3
insl
gs
adc
cmpsl
jl
rolb
into
scas
adc
xchg
jecxz
test
sub
ret
mov
dec
into
xchg
mov
stos
les
mov
jnp
dec
in
mov
outsb
sub
xchg
int3
scas
or
imulb
icebp
sbb
mov
pop
sbb
lahf
das
icebp
xlat
mov
dec
icebp
loope
lods
notl
ret
lret
rolb
icebp
fs
stos
rclb
mov
or
jp
icebp
push
mov
bound
ljmp
cmp
push
fiadds
js
jo
pop
add
in
jno
adc
dec
pusha
fildll
inc
adcl
fildll
or
and
daa
lds
cmp
xchg
sti
inc
add
inc
and
jecxz
ficoml
sub
cwtl
mov
mov
shr
in
jns
cmp
in
mov
shl
jb
push
mov
test
mov
xor
sub
jnp
or
scas
cmpb
leave
repz
loope
imul
cmp
jb
sub
sub
das
jge
xor
cmpsb
div
jo
push
and
sbb
sub
inc
mov
ss
or
jbe
mov
mov
mov
mov
stos
push
dec
mov
jno
daa
mov
test
daa
movsb
subl
mov
xchg
xor
sub
xor
andl
push
jb
enter
pop
pop
jbe
jne
out
ja
mov
out
ljmp
push
and
push
pop
sub
aad
and
or
je
xchg
leave
mov
push
insb
adc
and
xchg
xor
loop
push
sbb
rclb
push
insl
add
jl
aad
jp
imul
loope
int3
fildl
sbb
movsb
lret
jnp
dec
enter
loopne
iret
scas
xlat
mov
ud1
xor
insb
or
aam
jbe
and
pop
lahf
fidivs
les
je
cwtl
xchg
push
fcomip
jl
fcmovnu
cmp
enter
clc
lock
imul
jle
jno
mov
and
cmp
pop
fisubrs
add
jns
sub
and
jne
addr16
cwtl
mov
imul
mov
cmc
or
mov
enter
dec
sub
and
les
xlat
pushf
jmp
mov
sbb
dec
mov
into
xor
mov
int3
push
sbb
cmp
cs
adc
imul
mov
add
pusha
popa
lahf
gs
test
out
sub
cmp
mov
mov
xchg
xor
movsb
add
push
js
sbb
movsl
jp
das
call
fsubrs
xor
adc
jb
push
mov
fsubs
cmp
adc
cmp
sbb
imul
dec
insb
cld
lds
into
rol
pop
sub
dec
jle
sub
cmpsb
enter
iret
pusha
jg
dec
sub
movsl
ljmp
cwtl
cmpsl
mov
push
push
imul
les
push
lea
fidivl
adc
inc
inc
mov
pop
rorb
leave
mov
fisubs
int3
sti
test
ror
cs
add
cmpsl
mov
cli
lret
pop
arpl
andb
dec
outsb
jmp
dec
xchg
adc
ficoml
popf
xchg
or
popf
sbb
add
pusha
jne
push
dec
pop
cmp
mov
pop
push
cmpsl
sbb
mov
sub
push
pop
in
or
jecxz
mov
imul
mov
aaa
pop
leave
sbb
ja
xchg
scas
adc
gs
fsubl
lea
aas
divb
or
jns
mov
adc
or
dec
int3
sbb
mov
xlat
cltd
cmp
push
addr16
lock
shll
js
jl
xor
ror
sbb
xor
xchg
mov
ljmp
in
loope
push
or
add
pop
pop
mov
rol
mov
xchg
mull
cmpsb
or
rcrl
or
loopne
std
xor
test
icebp
sbb
mov
dec
imul
ret
lret
aas
push
rol
or
sub
imul
stc
es
inc
stos
or
ret
imul
out
ljmp
fidivrl
mov
scas
leave
test
mov
enter
rep
repz
fs
xchg
mov
fs
push
mov
inc
shll
pusha
test
pop
das
sbbl
fs
add
mov
add
xlat
cmp
stos
and
cld
mov
fistl
ja
jmp
shl
xchg
and
lods
add
pop
cltd
iret
call
jp
mov
mov
and
movsb
add
movsb
test
jnp
pop
addr16
inc
mov
ret
or
push
out
sub
or
xor
lock
push
scas
lret
lahf
mov
jmp
inc
add
mov
mov
pop
xor
iret
sahf
enter
push
dec
dec
mov
repnz
xor
lods
sbb
sbbl
in
popf
xchg
imul
pop
dec
dec
add
cmpsb
lods
xchg
push
in
mov
xlat
popf
out
mov
push
repz
andps
aaa
icebp
pop
push
mov
and
jl
dec
leave
mov
sahf
enter
in
int
mov
push
and
aaa
add
lock
mov
xchg
mov
test
and
scas
repnz
jb
out
cmp
sub
mov
xchg
xor
sbb
mov
mov
test
cmpsb
mov
add
dec
dec
and
or
test
sahf
adc
push
loop
jnp
adc
movsl
das
adc
and
outsb
ss
in
xor
and
es
dec
ja
xor
push
xchg
int3
push
fstpl
test
xor
leave
jmp
xchg
cli
stos
dec
ss
cmp
jg
movsl
sub
jl
sbb
cs
insb
inc
sbb
push
cmp
mov
mov
sub
add
iret
ljmp
out
mov
mov
xchg
xchg
fcoml
jae
mov
add
ds
imul
add
lret
ret
jmp
mov
js
xchg
jae
leave
mov
int
sbb
femms
mov
mov
scas
push
dec
lods
ret
cmp
loopne
sbb
xlat
and
cmpsl
gs
ljmp
push
lret
adc
lods
jnp
lret
jne
jge
cmp
fstpl
imul
mov
jb
fdivrl
stc
push
lahf
stos
push
jecxz
fisubl
xor
adc
dec
mov
cltd
stos
mov
dec
test
ret
stc
xchg
sub
mov
stos
xchg
shlb
or
xlat
add
les
ficompl
adc
pop
dec
popa
or
mov
adc
sub
aas
pusha
adc
popa
out
xchg
out
mov
scas
push
fiadds
pop
jne
aad
xchg
icebp
andl
add
stc
push
popl
add
aaa
or
mov
inc
jno
gs
mov
das
sub
jb
cwtl
sub
sahf
push
imul
stc
sbb
cmp
inc
hlt
sub
jge
dec
popf
add
push
dec
rcrb
push
clc
jle
pop
jns
dec
shll
xchg
negb
sub
jmp
repz
sti
sbb
mov
cltd
sub
ret
mov
leave
fdivrp
jae
mov
cmp
mov
cmpsl
mov
adc
in
push
push
and
push
push
mov
cmp
pop
xchg
aaa
lods
adc
push
sub
jbe
dec
cmp
scas
xchg
in
sub
lock
xchg
je
or
push
or
call
xchg
lds
fcompl
jge
lcall
adc
lcall
adc
xchg
mov
dec
ret
lret
adc
inc
dec
xlat
xchg
cmp
mov
push
jmp
push
and
lock
xorl
push
push
test
jnp
inc
rcll
cmc
and
and
mov
cs
mov
or
sbb
std
stos
rolb
xchg
xor
sbb
push
sbb
mov
pusha
mov
inc
outsb
cmp
cmp
mov
mov
lcall
jmp
sub
ret
pop
and
xchg
xchg
jmp
aas
dec
in
mov
es
pop
jo
jmp
pop
ja
cmp
push
dec
pop
xlat
jl
cmp
jne
cwtl
outsl
lret
sub
sub
lds
jmp
pop
imul
or
aas
push
mov
shll
insb
gs
sub
aaa
cmpsb
dec
andb
into
mov
mov
sub
stc
jnp
icebp
imul
stos
icebp
dec
pop
lods
inc
push
mov
jp
fstl
clc
imul
pop
pop
lret
lret
movsb
aam
dec
add
adc
in
movsl
cltd
enter
add
adc
pop
mov
scas
mov
andl
outsl
mov
test
out
cs
fwait
pop
ljmp
loopne
mov
out
and
or
cmp
call
jl
cld
dec
or
lea
add
pop
test
xchg
sbb
jle
mov
push
les
jg
fsubr
cmp
or
or
shll
push
sti
loope
seto
xor
jge
stc
xchg
fidivs
into
stos
add
imul
sub
nop
push
movsb
jle
ret
inc
sub
xor
or
fs
lcall
loopne
sahf
dec
mov
mov
inc
xor
push
jle
mov
loopne
cltd
dec
fmul
push
das
insb
arpl
sti
adc
mov
sti
xlat
test
js
mov
sub
cmp
sbb
mov
jno
xor
in
lods
sub
cli
inc
jecxz
or
into
jmp
inc
jno,pn
sti
mov
dec
mov
fldcw
dec
ret
loope
lds
fcomps
stos
push
adc
and
fyl2x
movsl
pop
push
push
adc
sub
mov
idiv
cmp
ficoms
test
sbb
or
xchg
stos
jp
pop
hlt
pushf
decb
dec
mov
jne
fsubrl
mov
push
xchg
xor
outsl
in
mov
cwtl
sbb
mov
in
mov
ret
adc
out
sub
mov
iret
stos
pop
adc
frstor
sub
repnz
ret
or
iret
pop
xor
ds
lds
add
mov
jmp
mov
arpl
jb
lods
adc
shrb
adc
clc
sti
test
enter
outsl
rcr
in
lcall
jb
inc
push
dec
and
mov
in
in
js
inc
mov
dec
in
ret
xchg
adc
sbb
xor
aam
pop
or
icebp
xchg
xchg
faddp
hlt
jmp
lahf
mov
or
sahf
mov
lods
jp
add
add
sahf
sub
aad
clc
repz
stos
int3
xchg
cmp
adcb
ret
loope
test
cli
lahf
sbb
repnz
jns
jle
xlat
dec
push
sub
mov
mov
add
xlat
sbb
int
jbe
push
cs
adc
daa
cld
xor
mov
mov
in
pop
or
mov
sub
movsb
mov
lock
shll
dec
in
adc
stos
xchg
call
and
push
mov
xor
pop
push
fdivl
push
mov
jmp
dec
mov
inc
jbe
and
out
scas
xor
rcrl
mov
lahf
enter
jl
push
adc
xchg
xor
cmp
iret
inc
jle
and
test
pop
or
scas
inc
xchg
sub
imul
xchg
pop
repnz
shr
test
or
dec
cs
ljmp
xor
insl
push
bound
push
cmp
pop
dec
pusha
and
adc
mov
and
jno
dec
cmp
cli
arpl
mov
or
inc
aaa
and
fmulp
ret
ss
jnp
push
jnp
mov
inc
push
inc
movsl
inc
mov
outsl
iret
mov
sbb
icebp
and
jbe
mov
clc
out
enter
xor
movsl
cmp
in
cmp
push
jmp
fwait
mov
push
rol
lahf
inc
pop
in
lock
rclb
mov
sbb
and
out
and
scas
dec
xorl
push
lock
mov
inc
movsb
outsb
out
daa
xchg
sbb
jp
out
fldcw
lock
lcall
adc
inc
or
ss
out
leave
ds
lcall
inc
les
in
jno
xor
dec
test
test
inc
std
pop
jge
push
pusha
ljmp
jge
cmpsb
push
cmp
pop
lods
sti
aaa
out
jae
xor
xor
repz
mov
es
jge
das
xor
adc
scas
mov
into
repz
ds
in
jnp
nop
push
jnp
push
push
sbb
clc
adc
sahf
add
movsl
push
fsubr
mov
loop
lret
repz
ss
push
push
push
push
pop
insl
in
lret
jmp
push
and
pop
fistpl
or
jecxz
xchg
xchg
push
mov
push
hlt
xchg
cmpsb
insl
and
out
scas
cli
movsl
leave
cmp
loop
adc
movsb
mov
or
mov
shll
jns
sti
jge
or
push
orl
lret
in
jl
pop
xor
and
ljmp
aam
lea
ret
movsl
sar
std
pop
andl
pop
push
push
and
cld
addb
sbbl
in
pop
adc
cmc
jmp
arpl
xlat
not
call
and
adc
sbb
or
add
fildll
add
popa
aas
push
add
mov
or
mov
push
sbb
lea
or
jo
stc
xlat
test
mov
lods
push
imul
shlb
nop
cmp
enter
mov
pusha
push
mov
lretw
xor
xchg
ret
sub
sahf
push
sarl
sub
pop
sub
and
jno
pop
lret
cmp
sub
in
sti
cmp
icebp
out
and
or
lods
rolb
pop
sub
stos
pop
andb
sti
sbb
jecxz
pop
push
mov
hlt
ret
sahf
inc
aad
xlat
xchg
jle
rolb
test
xchg
xchg
pop
push
adc
mov
sub
mov
enter
or
inc
aam
or
mov
add
shrb
leave
xchg
outsb
mov
in
mov
stos
mov
mov
scas
cmpsb
xchg
adc
add
mov
pop
popa
mov
adc
or
dec
lahf
add
leave
std
xchg
mov
mov
lods
and
jp
stos
push
mov
fcompl
ss
dec
and
fiadds
xchg
jne
testb
aam
sub
add
inc
jmp
mov
shlb
jg
cltd
fucomi
mov
ret
adc
stc
mov
add
cld
imul
add
adc
xor
ljmp
jge
add
jne
cmc
lcall
cmp
mov
pop
loope
or
push
sbb
jno
adc
shlb
adc
push
xor
bound
sub
call
daa
sbb
jle
pop
hlt
popa
jbe
testb
mov
jl
fildll
std
scas
sbb
insl
les
roll
punpckhbw
fwait
repz
fdivl
sub
add
std
pop
repz
xor
mov
push
insb
pushf
and
pop
insl
pop
dec
or
push
test
loope
lret
jl
orb
cli
mov
adc
icebp
jle
es
push
lods
cli
fisubrl
mov
xchg
push
or
mov
bnd
push
cmp
sbb
pop
adc
gs
in
cli
sbb
sti
insl
mov
pop
addr16
ja
adc
icebp
mov
xor
jge
movsb
out
jne
fsts
adc
stos
pop
pop
adc
or
mov
mov
pop
pop
push
sbb
pop
call
mov
pop
xor
push
xor
jns
push
sub
loope
or
test
push
cltd
cld
xor
xor
push
or
or
icebp
and
faddl
add
fs
in
add
aas
mov
cli
sub
push
mov
cmp
call
sbb
aas
fbld
push
sbb
mov
cmp
lods
inc
out
jecxz
cmp
insb
cmpsl
popf
mov
mov
and
lods
sub
orb
jecxz
or
pop
push
adc
mov
push
ret
add
mov
mov
cmp
insb
test
or
and
adc
xchg
iret
insl
jno
xchg
call
jo
iret
lea
xchg
mov
dec
out
cld
popa
add
stc
pusha
mov
ret
mov
cmp
lcall
jle
mov
add
or
pop
add
dec
jge
sbb
stc
inc
pop
lcall
sbb
shll
in
sqrtps
mov
sbb
inc
jb
shl
movsl
arpl
je
das
test
push
adc
pop
mov
in
das
inc
xchg
test
or
scas
sub
addr16
jae
popf
fsts
das
fidivl
jmp
cmpb
add
pop
and
sahf
mov
push
cmp
fmuls
inc
aam
or
fidivrs
fldl
push
pop
dec
sbb
arpl
faddp
mov
popl
xor
mov
sbb
dec
or
xor
pop
das
mov
loopne
insb
push
push
or
gs
cmp
add
pop
xor
gs
lds
xchg
jp
out
xor
movsb
xchg
cmpsb
dec
test
push
jmp
inc
sbb
inc
mov
int
cmp
jne
daa
adc
cmp
jb
mov
mov
mov
out
xchg
adcl
mov
dec
push
lods
mov
adc
js
pop
jno
xor
or
movsb
stos
lods
das
inc
clc
pop
sbb
xor
dec
test
icebp
aaa
dec
mov
jge
pop
or
lahf
insb
push
cld
movsl
popf
fucomi
xor
mov
enter
jmp
jns
fmuls
aas
mov
cwtl
stos
test
inc
notb
out
je
sarl
jp
out
out
movsb
xchg
enter
and
push
dec
ss
fsubl
jg
stos
popa
pop
jno
repnz
sbb
or
aam
or
fcoms
cmp
push
dec
repnz
clc
push
das
fdivp
pop
shr
gs
pop
xor
ss
pop
movsb
and
pop
and
sub
aas
fimull
mov
mov
adc
jo
ret
lret
push
or
aam
xor
outsl
jp
push
and
jno
ret
orb
iret
push
imul
fmul
sahf
jbe
dec
mov
mov
mov
roll
je
dec
jle
xor
fwait
adc
push
enter
scas
inc
pop
movzbl
xor
sub
popa
mov
jnp
roll
cli
or
mov
imul
lods
xchg
and
imul
lahf
push
cld
movsl
cwtl
movsb
mov
loop
loop
pop
pop
lret
cmp
wrmsr
icebp
popa
jge
mov
and
xor
test
sti
subl
sbb
mov
stos
lods
ficoml
mov
in
mov
or
cmpb
inc
mov
mov
pop
ja
xchg
cmp
sbb
test
jnp
bound
or
imul
mov
xchg
out
add
jmp
cmp
sub
pop
mov
in
adcb
scas
sbb
add
push
jns
mov
jns
jae
add
mov
xchg
js
bound
xor
cmp
addr16
addl
dec
or
add
in
daa
not
fisubs
imul
pop
outsl
addb
nop
add
int3
iret
dec
pop
fs
popf
pop
mov
repnz
mov
jg
adc
cwtl
cmp
cmp
pop
sub
dec
mov
xor
lods
push
lahf
mov
sbb
adc
jb
dec
adc
lret
mov
cltd
mov
mov
cltd
mov
ja
in
sbb
sahf
jp
out
mov
mov
or
jo
jl
test
add
sbb
test
pusha
lret
jmp
mov
in
shl
dec
pushf
clc
inc
xor
or
pop
call
cli
dec
or
scas
loop
rcrl
xchg
sub
mov
shrd
mov
xor
clc
mov
pushf
fsubrl
aas
in
movsb
push
rol
out
ja
dec
push
inc
in
mov
stos
cmc
fs
add
test
sti
push
test
and
mov
mov
push
ret
cld
cwtl
ljmp
sbb
mov
or
sub
xchg
fiadds
insl
js
pop
ljmp
mov
mov
movsb
mov
cmp
shlb
outsb
jne
fwait
inc
ja
xchg
out
adc
test
dec
movsb
inc
in
mov
hlt
mov
lcall
adc
das
add
xchg
mov
aad
jl
pop
movsl
cltd
fistps
loopne
inc
mov
test
jns
xlat
fiaddl
in
add
iret
loopne
sub
das
aad
cmp
or
subl
jge
or
push
or
gs
lea
push
mov
test
push
xchg
mov
aad
rolb
mov
fists
addr16
jnp
mov
mov
ljmp
and
lcall
inc
dec
stc
or
in
lahf
lods
xor
sbb
loopne
nop
ljmp
fistl
fidivrl
jae
lret
js
mov
in
shlb
mov
or
mov
push
sbb
hlt
jbe
imul
push
mov
sub
xor
insl
dec
jb
cmc
or
mov
mov
cmp
mov
in
fdivl
fdivl
mov
jne
sbb
pop
xor
xor
jo
sbbl
inc
or
jmp
ljmp
inc
adc
stc
sub
dec
je
ljmp
pop
or
adc
loope
xor
bound
nop
xchg
rcll
mov
scas
jmp
cltd
bound
push
out
add
pop
cmc
mov
inc
mov
lcall
into
fnstsw
mov
js
push
xchg
adc
lods
in
insb
inc
clc
icebp
aad
addb
or
flds
imul
push
jmp
movl
inc
add
les
sahf
lds
gs
dec
xlat
pop
add
orl
jmp
pop
mov
or
out
subb
and
icebp
ja
cmc
mov
xchg
insl
add
dec
mov
out
jp
adc
movsl
sub
shrl
xor
subb
sub
fistpl
mov
mov
ror
fwait
push
gs
cmp
les
js
out
lret
repz
pusha
out
or
sub
and
sub
fisttpl
popf
outsb
push
add
lods
fldenv
and
or
pop
jne
mov
fs
inc
jo
adc
movsb
mov
rcl
je
xchg
es
push
sub
dec
mov
xchg
pop
and
cwtl
xchg
inc
jns
dec
cs
xor
jo
mov
cwtl
and
lds
aam
je
adc
popf
leave
repnz
loop
mov
fmull
mov
push
jne
sub
push
xlat
nop
loop
sub
mov
and
in
xor
mov
sub
jo
cmp
ss
mov
xchg
push
jle
es
stc
cmc
mov
xchg
js
mov
xchg
data16
push
fimuls
movsl
mov
nop
loopne
cmp
push
mov
shll
nop
fdiv
lret
fisttpl
sub
sahf
arpl
mov
ret
cli
cli
shrb
mov
mov
dec
jo
pusha
jecxz
and
and
out
aam
mov
inc
mov
jle
cmp
mov
mov
int3
add
or
and
data16
lahf
lcall
in
cmp
push
adc
push
mov
pusha
ret
lea
xor
lea
cmp
psraw
popf
inc
mov
sbb
std
pop
stos
ljmp
push
retw
int
je
fs
adc
push
pop
dec
call
ss
imul
mov
mov
aad
out
cmp
mov
and
sub
out
xlat
aaa
xchg
out
in
call
inc
jge,pn
gs
cmp
xor
aaa
mov
xorl
and
lods
cmpsb
pop
cmp
mov
lret
adc
negl
addr16
iret
xor
orl
shr
insb
push
mov
sub
xchg
pop
pop
cli
mov
pop
cmp
or
inc
or
or
pop
xor
sbb
inc
fidivrl
loopne
push
fwait
pop
sbb
pop
mov
sbb
and
push
cli
cmp
sbb
cmc
fldt
add
imul
icebp
cli
out
fildll
sub
in
inc
pop
aam
imul
xlat
mov
xor
movsb
and
cmp
push
ficoml
pushf
maskmovq
mull
and
sbb
pop
lret
aaa
cmpsl
inc
movsl
ret
xchg
mov
aad
xchg
addl
addr16
outsl
scas
inc
popl
into
and
in
scas
out
jns
inc
movsb
jp
sti
loop
push
pop
aaa
push
cld
sbb
sbb
push
leave
ljmp
adc
xchg
or
inc
test
and
out
mov
aaa
imul
shrl
jb
or
cmp
cmp
hlt
and
jl
dec
stos
test
xor
mov
mov
sub
das
outsb
repz
push
and
outsb
add
cli
in
dec
xor
and
scas
sbb
mov
ds
fidivrs
pusha
push
and
shll
mov
test
inc
inc
fiadds
cmc
std
mov
mov
cli
idivb
push
mov
les
jnp
xor
sahf
and
xchg
and
dec
cmp
xchg
sbb
test
addr16
pop
mov
push
mov
pushf
xor
aam
push
add
mov
inc
fdivl
dec
mov
shrb
ret
lods
cmp
int
stc
xor
outsl
lahf
ficompl
lcall
sahf
fisubrl
mov
mov
popf
xchg
pop
pop
and
mov
adc
je
je
stos
mov
cwtl
cmpsb
dec
ljmp
fimuls
or
jae
lock
mov
cmp
add
fiaddl
icebp
cmp
inc
sub
hlt
pop
cwtl
iret
outsb
mov
jbe
xor
xor
cwtl
inc
dec
test
add
sbb
xchg
push
inc
mov
mov
and
or
xor
in
dec
push
je
in
xlat
rorb
xor
xchg
adc
push
lret
enter
xor
ffreep
push
jge
xchg
dec
xchg
enter
js
ss
or
aas
sbb
xchg
xchg
aas
sbb
fdivl
push
xchg
xor
add
cld
add
test
sbb
fs
fsubr
xor
les
mov
fcmovnb
pminub
adc
jl
push
add
sub
js
xlat
rclb
fwait
jmp
fcoml
dec
pop
mov
fisttpll
movsl
aas
xchg
xchg
loop
insl
or
outsl
pop
out
scas
sahf
pushl
clc
mov
mov
cs
inc
cbtw
inc
push
mov
push
in
add
cmovg
aam
dec
in
jnp
jb
call
out
pop
jp
sbb
das
mov
icebp
insb
add
pop
out
test
mov
mov
lods
or
dec
sbbb
or
scas
ret
aam
int
scas
fdivs
mov
faddl
cmc
cmp
xchg
cli
mov
jno
lret
push
gs
xor
lods
cld
mov
sbb
movsb
sbb
call
outsb
ljmp
loop
sti
cwtl
ret
or
test
xchg
sub
pushf
sub
add
inc
insl
jno
push
or
into
into
insb
push
out
adc
mov
jmp
jge
fwait
xlat
add
xchg
imul
push
in
inc
sar
sahf
add
cltd
pop
gs
out
dec
xor
jno
xchg
adc
into
in
insb
mov
xor
sti
cld
dec
fwait
ss
jnp,pn
repnz
into
repnz
lods
push
push
lret
scas
nop
out
aas
push
fwait
jle
xchg
loopne
mov
mov
xchg
push
push
stos
popf
pop
movsl
inc
repnz
pop
sti
fcmovbe
iret
ret
loope
movsl
sbb
adc
mov
jns
mov
and
jmp
jle
xor
fs
data16
test
dec
jo
and
adc
pop
jne
adc
jge
int3
popf
push
flds
into
cs
mov
lcall
pop
arpl
mov
daa
ret
test
jmp
pushf
ljmp
pop
xor
add
jmp
test
and
and
sti
fwait
jno
mov
pushf
and
or
mov
fistps
sub
mov
pop
cld
imul
imul
push
xor
mov
dec
adc
adc
cli
xlat
fisubrl
dec
into
jg
cmpsl
stc
test
adc
add
jbe
mov
stc
fistl
inc
and
mov
add
mov
ret
in
push
ret
pop
xor
inc
pop
test
dec
ja
mov
lock
dec
scas
mov
dec
aam
shlb
pop
das
jp
out
out
sbb
dec
mov
cs
shlb
daa
cwtl
or
xchg
arpl
cmp
arpl
ja
nop
push
mov
pop
rclb
mov
out
outsl
adc
inc
cmpsl
mov
sbb
inc
lods
ja
leave
mov
add
cltd
push
jmp
jle
jp
xchg
sbb
hlt
imull
cltd
out
sub
pop
push
mov
fadd
mov
lods
in
shlb
cmpsb
cmpsb
stc
jns
sbb
fistpl
cld
movsb
jo
pop
push
adc
adc
loop
ja
fdivrl
jmp
inc
stos
ljmp
out
adc
push
pushf
cmp
and
cmpl
sub
mov
pop
addb
mov
fs
mov
mov
cmp
repnz
inc
jne
mov
dec
jne
xlat
dec
insb
sbb
mov
inc
lret
xchg
xchg
mov
cld
push
pop
cmc
shlb
pop
insl
and
subb
and
arpl
or
adc
or
pop
dec
mov
andb
or
sbb
jb
mov
cmpsl
push
in
or
or
pop
cltd
pop
push
dec
or
and
mov
cs
mov
xorb
clc
mov
dec
out
popa
repnz
add
mov
push
jno
sbb
test
shrl
pop
repz
cmpsl
std
cs
ret
popa
nop
jae
xchg
and
adc
or
aam
dec
and
mov
leave
cmpb
sarl
or
sbb
xchg
push
mov
cmpsb
mov
mov
aaa
sbb
sub
lret
and
aaa
xchg
test
push
je
nop
rcll
out
clc
cmp
in
pop
sbb
movsb
xchg
mov
cmp
mov
lcall
jne
sahf
nop
sub
xchg
cwtl
xchg
int
pop
arpl
outsb
stos
pushf
pop
xchg
xlat
ds
cmpsb
stos
fdivrp
pop
add
ret
shlb
inc
jae
mov
fisubrs
in
imul
ret
sti
lcall
add
push
sarb
icebp
cmp
cld
adc
lods
out
mov
das
sbb
stos
mov
inc
aad
sahf
push
into
or
sarb
or
mov
mov
push
and
out
mov
push
les
dec
xorl
in
fidivrl
ds
inc
out
shll
fxch
mov
out
jbe
leave
ret
data16
push
pop
stos
cli
iret
negl
insl
push
cmpl
and
lods
sub
mov
xlat
xchg
enter
std
xor
loope
inc
inc
push
jg
mov
loope
in
mov
shr
jnp
lcall
cmp
cmp
mov
fcoml
in
push
mov
xchg
lods
pop
jb
and
mov
inc
add
into
add
pusha
dec
mov
dec
pop
sub
pop
or
jo
scas
inc
push
ret
imul
fnsave
cmp
mov
add
outsb
in
cltd
mov
adc
push
sti
cmp
pop
outsb
sbb
jo
xchg
aas
push
cli
lds
aas
andb
sbbl
test
cmpsl
mov
sahf
jbe
push
pop
out
or
daa
jno
sub
jmp
mov
jbe
jns
insb
push
in
lods
dec
ja
dec
jns
jb
mov
inc
inc
lods
dec
inc
cmpsb
mov
sti
cmpb
stos
nop
xlat
add
pop
insl
stos
test
out
cmp
cmp
mov
scas
or
fs
adc
out
cmpsl
add
add
cmp
adc
aad
sar
adc
pop
inc
in
rorl
jle
inc
and
pop
mov
scas
out
cmp
shlb
ja
lcall
push
cmp
ds
jo
cli
clc
jecxz
lcall
lcall
jmp
lods
push
xor
and
lret
add
mov
xor
push
push
mov
mov
add
ds
sub
dec
mov
fmuls
inc
popl
das
or
sbb
mov
cmp
add
lock
push
mov
sub
lcall
scas
adc
stos
aam
pop
andl
sub
pop
lock
pop
xor
movsl
xchg
add
inc
cmc
dec
fmul
push
mov
lcallw
adc
out
jne
and
mov
scas
pop
xor
push
dec
jl
leave
aad
daa
aaa
xor
fcmovu
xor
lcall
aas
inc
roll
int3
fsubl
out
adc
sbb
loope
xchg
ljmp
fwait
cmp
pop
sub
xlat
fidivrl
dec
mov
cmp
adc
sub
lods
push
xor
cli
movsl
pop
xchg
sbb
mov
mov
xor
ljmp
dec
stc
in
xor
out
dec
in
and
lahf
std
mov
call
dec
lods
int
sbb
sub
out
jns
into
mov
add
or
inc
insb
push
cmp
setbe
cmpsl
dec
and
and
jge
mov
cmp
ffreep
fisttpll
dec
add
and
inc
jmp
sahf
notl
call
adc
push
push
cwtl
fidivs
sbb
pop
imul
jno,pt
enter
push
push
shll
inc
test
jnp
gs
jnp
jne
adc
and
insb
cmp
cmp
add
jle
sub
push
jle
ficomps
inc
rcll
into
dec
daa
clc
roll
test
xchg
cmp
pop
adc
sbb
sbb
xor
mov
xor
insb
test
mov
xor
imul
stos
hlt
leave
insl
mov
stos
mov
leave
xchg
or
lods
outsl
test
das
in
mov
ficoms
xchg
and
or
outsl
shlb
push
mov
dec
add
mov
test
repnz
cmpsb
push
xchg
sub
lcall
movsl
and
loope
in
adc
popf
enter
mov
leave
xor
out
mov
and
xchg
mov
notb
or
pusha
mov
clc
xor
stos
sub
in
rcrb
cmp
repnz
out
adc
jg
jb
lcall
sub
imul
jmp
xor
sub
sete
imul
cmc
fstpt
lods
fidivl
out
testb
pushf
xor
gs
inc
or
imul
repnz
gs
inc
bound
dec
es
loope
andb
jecxz
sub
aam
fcmove
dec
inc
or
jl
jmp
scas
inc
mov
and
xchg
faddl
mov
sub
lret
inc
and
sbbl
mov
sbbl
cmc
pop
shll
jns
lret
push
inc
sbb
push
in
clc
cmpsb
xchg
add
or
int
inc
sub
hlt
and
imul
push
sub
es
mov
int
imul
js
add
dec
outsl
push
int
mov
pop
pop
jo
popa
mov
jbe
mov
xchg
xor
xchg
jns
int
mov
lea
das
jmp
and
mov
jne
dec
push
add
ja
and
std
aad
outsl
or
into
leave
mov
adc
sbb
in
sub
pop
or
and
xor
sahf
mov
cld
push
inc
mov
inc
add
movsb
mov
sub
int3
and
lret
fcom
pop
aad
mov
and
or
xor
shll
stos
adc
test
sbb
or
xchg
inc
or
mov
mov
push
ja
sub
daa
pop
mov
aas
xchg
add
gs
dec
mov
mov
xor
push
mov
push
cmpsl
xchg
cs
lock
repnz
mov
addl
imul
xchg
mov
or
out
or
and
mull
xor
pop
sbb
or
xchg
cld
call
int
xchg
inc
vmovss
xchg
mov
out
mov
inc
or
adc
push
outsl
xchg
sub
add
mov
loop
arpl
adc
sub
int3
nop
lds
xchg
mov
stc
jns
les
cmpsb
lret
sub
cld
fcos
lret
mov
xchg
pop
stos
out
test
subl
rolb
in
push
xor
out
and
inc
inc
lds
int3
xor
imul
stos
cmpsb
mov
xor
mov
pop
inc
push
mov
mov
dec
or
cld
mov
jno
repnz
das
packsswb
push
lods
jp
mov
pop
out
mov
pop
test
stc
stc
dec
aaa
inc
imul
jge
rolb
into
sarl
pop
lods
jl
std
lahf
popl
add
and
testl
test
cmp
rcrb
sbb
pop
cwtl
or
sub
addr16
jo
mov
cmp
fsubl
sub
xlat
jb
add
sbb
and
cld
add
adc
push
pusha
adc
pusha
outsl
pop
or
repz
into
daa
mov
icebp
mov
dec
mov
ja
rorl
ss
jge
jmp
ljmp
pop
cmp
pop
jae
addr16
push
dec
inc
and
pop
insb
addr16
push
cli
pop
icebp
pop
out
repnz
jmp
sub
ja
add
insl
push
xchg
shll
loop
cmc
and
adc
loope
adc
std
inc
dec
lret
aaa
aam
adc
clc
mov
or
outsl
hlt
xchg
and
dec
lahf
mov
ret
repz
lods
mov
xchg
aad
std
xor
popf
add
push
enter
cmc
mov
lcall
mov
ret
adc
or
push
xchg
out
test
outsb
jns
mov
and
scas
dec
daa
pusha
filds
rcrb
adc
repnz
or
out
dec
add
pop
cld
sub
bound
push
pusha
mov
sahf
idivb
mov
outsl
movsb
shrl
mov
inc
insl
xchg
inc
sti
mov
std
mov
mov
xchg
in
jno
sub
mov
cmpsb
cmp
jne
mov
mov
psubw
mov
mov
into
cmpsl
jl
sbb
xlat
mov
adcl
movsl
subb
mov
hlt
pop
adc
pop
popf
jae
add
lcall
inc
inc
adc
stos
xlat
nop
jb
jge
cmpsl
adc
pop
inc
or
cmpsb
pop
repz
leave
imul
mov
ljmp
enter
mov
inc
fisubl
mov
dec
cmp
addr16
and
xor
xchg
shl
int3
cwtl
gs
or
insb
outsb
push
adc
jae
mov
jae
popa
in
fcomps
sub
xchg
xchg
xchg
mov
push
ret
adc
mov
loopne
push
or
sar
stc
mov
jg
dec
push
popa
xor
fbld
xor
sarl
xchg
jnp
bound
push
mov
add
inc
shrb
xchg
arpl
jb
adc
pop
cmp
lock
dec
out
xor
push
inc
mov
sub
jmp
inc
and
and
fs
inc
lea
data16
and
xor
pop
jnp
icebp
stos
in
lods
jle
fwait
push
cmpsb
hlt
fnstsw
push
inc
test
rcr
scas
stos
cmpsl
push
adc
hlt
cld
lahf
sub
lret
jg
sub
mov
dec
adc
adc
lods
jl
je
subl
fwait
mulb
pop
push
pop
push
pop
sbb
dec
std
repnz
xchg
bound
fistl
dec
loopne
cwtl
lock
jle
fcomps
call
shll
imul
cltd
mov
cmp
popa
pop
add
sub
sub
ss
mov
outsl
jno
mov
je
mov
mov
cmp
shrl
lock
out
outsl
cmpsb
std
cmp
lahf
notl
js
lods
mov
aaa
jne
test
cmp
jno
test
cmpsb
setg
inc
pop
push
out
divb
popf
mov
adc
je
push
imul
xchg
mov
aas
pop
xchg
std
xlat
dec
dec
aad
jae
mov
xchg
jg
mov
das
cmp
xor
int
mov
dec
les
in
adc
or
fldcw
fnstsw
fdivl
lcall
or
dec
test
sbb
scas
neg
fnstsw
adc
xchg
mov
xlat
dec
xor
jns
orl
push
fbstp
pop
and
stc
sbb
or
xlat
in
fwait
test
inc
mov
or
push
loope
and
icebp
and
rcr
dec
inc
jno
std
mov
fnsave
dec
mov
sbb
mov
orb
inc
adc
jg
cltd
out
sbb
inc
sbb
fstpt
jecxz
sub
jne
in
pop
loop
sarb
jne
in
pop
lock
mov
fdivl
mov
sbb
aam
adc
outsb
mov
pop
out
pop
add
fcoml
add
adc
jl
ja
sbb
cmp
repz
add
and
aas
sub
sub
cmpsl
fwait
movsb
into
jno
pop
xor
in
cmp
mov
sub
xor
in
mov
insb
xchg
push
mov
add
clc
push
dec
cmc
mov
add
pop
out
jbe
or
push
sti
mov
or
lock
push
js
jae
pop
mov
clc
jmp
dec
lahf
cwtl
int
out
xchg
sbbl
dec
les
mov
addb
inc
push
pop
mov
push
fstpl
fs
pop
ljmp
testb
sarb
and
hlt
jl
sti
sbb
pusha
sbb
dec
fstpl
fildl
jb
dec
jbe
cs
xlat
adc
mov
sub
scas
cmpsl
in
pop
and
add
jl
sub
fnstcw
mov
and
mov
test
mov
dec
add
pop
or
jb
mov
cmpsb
mov
inc
add
cld
pop
idiv
xor
adc
or
dec
xchg
out
cmp
int3
jl
clc
cmpb
out
sti
fadd
add
aam
mov
stos
mov
and
xor
xor
lcall
mov
incb
jle
and
es
cli
inc
sbb
mov
cmpsl
test
xor
xor
xor
cmpsl
notb
and
test
andl
pusha
int
jmp
out
mulb
pop
sbb
int3
xor
aaa
cld
popa
les
fildl
leave
sbb
test
test
aas
pusha
popa
jo
in
dec
and
mov
xor
jbe
ss
nop
pop
aaa
lret
lret
scas
mov
test
and
xchg
pop
test
add
pop
mov
les
adc
iret
insb
mov
or
mov
andl
sub
cmpb
push
cwtl
sbb
test
leave
mov
inc
cwtl
movntq
out
mov
pop
mov
ljmp
or
je
sub
shlb
sbb
scas
pop
push
mov
jg
jle
fistpl
scas
sahf
call
mov
xchg
add
mov
test
loope
jno
cmp
xchg
mov
jg
inc
mov
out
inc
mov
clc
mov
push
push
mov
push
add
mov
test
aaa
cmp
push
or
insl
enter
pop
int
mov
addr16
jns
cmp
push
fsubl
movsb
inc
outsb
inc
cmp
jle
mov
push
xchg
add
xlat
popa
dec
mov
xorb
push
scas
pop
mov
fnsave
movsb
test
jns
cmpsb
mov
mov
xchg
sarl
inc
adc
push
scas
mov
inc
xor
cmpsb
jp
stos
xor
stc
in
lret
std
das
pop
lods
dec
je
into
cmp
inc
pusha
mov
xor
fucomp
ds
pop
aas
bound
inc
das
lods
pop
fldcw
cld
in
sbb
div
dec
test
lret
sti
adc
mov
sub
ja
mov
add
mov
jbe
gs
add
cmp
fidivrl
js
xchg
push
popf
xchg
test
sub
mov
xchg
cmc
add
lock
dec
in
enter
ljmp
and
loope
sub
xchg
push
jl
sbb
outsb
adc
add
inc
push
sub
das
cltd
andl
subb
fwait
dec
sub
pop
in
ret
bound
sub
sub
test
and
cltd
mov
andb
sub
outsl
adc
mov
in
mov
cmp
mov
xor
ds
lret
inc
jmp
or
jg
lret
add
scas
jno
movsb
cltd
leave
sbb
test
or
sbb
das
jg
mov
push
cmc
js
adc
xchg
jne
faddl
sub
cmp
jo
cmp
pop
mov
shrb
cwtl
xchg
push
ljmp
aam
inc
insl
xchg
push
xchg
loope
jmp
sbb
mov
ret
outsl
xchg
in
dec
mov
pop
lods
pop
jp
jge
sbb
sub
movsb
sbb
outsl
sbb
lock
fidivrs
and
out
fisttpl
lds
add
ljmp
mov
add
daa
dec
mov
add
bound
das
and
aad
add
mov
push
push
stos
fstps
test
mov
add
push
adc
addr16
lcall
pop
pop
roll
fimull
cmp
adc
push
dec
in
mov
fcomp
rcrb
fcoml
or
adc
pushf
adc
push
lods
pop
mov
lret
push
imul
aam
jbe
xor
lock
inc
in
out
xchg
push
dec
lret
pop
xor
pop
add
push
xchg
fists
mov
push
adc
xor
and
les
mov
mov
adc
mov
jbe
test
jae
jae
fwait
dec
or
repnz
jo
mov
aaa
pop
jnp
iret
pop
pop
push
scas
adc
popf
and
inc
xor
xor
dec
mov
jg
mull
adc
add
push
stos
pop
cmp
dec
inc
test
push
dec
imul
push
mov
int3
dec
jnp
movsb
xor
sbb
das
mov
jo
pop
pushf
cmpsl
push
mov
lret
movsb
in
mov
jmp
add
hlt
mov
and
arpl
pop
mov
or
out
sbb
pop
pop
cmp
loope
adc
js
xchg
push
hlt
dec
push
inc
popa
pop
add
xor
decb
xchg
jb
imul
scas
int3
or
or
les
shlb
sub
cmpl
mov
cltd
inc
popf
inc
lods
inc
aaa
rcll
out
xor
xchg
cmc
adc
fdivrl
aad
add
fcmovnb
jnp
iret
xchg
test
add
mov
mov
push
imul
and
mov
sbbl
push
jo
imul
cmpsb
jns
mov
adc
add
lcall
loopne
adc
loop
shl
dec
mov
xorl
mov
adc
in
pop
fadds
shll
sub
popa
fbld
mov
hlt
and
jl
cld
pop
and
sbb
aas
xchg
loope
lsl
fiadds
inc
sub
sahf
xor
mov
sbb
or
outsb
addr16
movl
mov
stos
add
sbb
aam
cli
fldl
pushf
std
in
mov
xor
out
mov
xchg
push
push
ds
mov
mov
sbb
mov
divb
lods
lods
dec
out
mov
cmpsl
and
push
pop
dec
inc
dec
pop
ss
jae
mov
lods
leave
cs
adc
imul
js
notb
xchg
out
xlat
mov
es
cmc
es
mov
nop
and
leave
cmp
lds
out
mov
addr16
hlt
int
cltd
test
mov
jmp
add
scas
fldenv
scas
dec
mov
cmc
pop
aaa
mov
pop
test
xchg
xor
adc
adc
int3
mov
popa
push
mov
lret
xor
pushf
adc
daa
jb
mov
mov
addr16
lret
cmp
dec
xchg
in
outsb
scas
cwtl
inc
or
cli
inc
mov
lds
jle
hlt
sbb
sub
fsubrs
out
xchg
lea
es
dec
leave
outsb
mov
test
arpl
int
mov
iret
fisubs
push
je
fisttpll
inc
jnp
dec
mov
les
dec
stos
jnp
into
enter
fsts
jo
shrl
push
sub
aas
lahf
and
into
dec
adc
imul
push
inc
add
movsb
pop
pop
pop
inc
mov
push
pop
bound
and
sub
add
std
aas
outsb
mov
xchg
dec
push
lahf
xor
add
lods
testb
jno
add
mov
testl
dec
jecxz
inc
scas
icebp
adc
addr16
adc
sbb
sar
mov
cmp
mov
dec
repz
xchg
pop
inc
mov
mov
jns
shll
sti
sub
fsubl
or
jp
pop
add
add
mov
sub
xor
or
stos
imul
inc
add
fldenv
sahf
adc
int
fstps
pop
dec
xchg
cli
insl
pop
pop
and
sbb
sbb
cmp
std
leave
mov
rol
inc
sbb
call
pop
shrb
xlat
pushf
mov
xor
cmp
movsb
scas
xor
and
lods
add
sub
iret
cs
lods
inc
inc
cmp
movsb
add
nop
mov
add
cmpsb
cltd
xor
shlb
dec
js
or
pop
push
dec
add
sbb
push
pushf
lret
jp
jnp
push
leave
add
mov
js
mov
xor
fsts
xlat
sti
ret
ss
or
pushl
jl
pop
addr16
fucomi
xor
loope
inc
cmp
iret
jp
push
nop
adc
es
popa
jle
scas
xor
ss
jnp
out
jl
jl
insb
push
sbb
jno
ret
inc
cmp
sbb
leave
push
gs
or
pop
jmp
cmp
inc
add
adc
add
sbb
dec
push
fs
movsb
cs
hlt
int3
lret
add
loope
flds
xlat
nop
movsb
sti
pop
jb
aaa
xchg
add
inc
fcompl
inc
or
dec
mov
ret
stos
out
inc
imul
out
cld
shrb
cmpl
fdivr
sbb
jae
dec
push
sti
jl
es
std
aad
jecxz
jnp
and
ss
stos
ficompl
lahf
fmul
push
adc
sbb
dec
dec
push
int3
nop
mov
ret
out
mov
imul
mov
repz
mov
sub
test
sbbl
xchg
xchg
mov
ja
mov
cli
pusha
push
add
test
push
orb
sbb
insl
lahf
neg
movb
notb
sub
les
inc
loope
out
sbb
lcall
ljmp
bound
nop
or
jl
scas
xchg
data16
iret
shl
jg
fisubrs
xchg
pop
cli
jp
jmp
xchg
lds
les
sbb
xor
jle
outsl
jae
adc
fdivrp
add
jbe
sbb
lods
add
push
xchg
jnp
dec
mov
sub
mov
cmp
bound
stc
mov
ds
add
jbe
add
scas
popa
popa
mov
add
icebp
insl
shl
and
fldl
adc
add
sti
dec
pop
nop
inc
inc
gs
adc
cmpsb
mov
jge
imul
fnstsw
dec
mov
fidivs
xor
pop
fimuls
ds
sbb
xor
into
andb
mov
rol
dec
pusha
arpl
push
bound
xor
sahf
das
data16
xchg
lahf
mov
rcrl
add
cmp
or
mov
adc
push
mov
repnz
sub
adc
push
inc
mov
jb
hlt
or
xchg
mov
push
nop
loop
sbb
hlt
and
js
xlat
mov
mov
push
pop
mov
int3
ret
ret
out
fimuls
rcr
rcll
inc
adcb
jle,pt
ret
xchg
insb
xor
mov
inc
jno
and
outsb
test
push
in
or
mov
jnp
clc
in
sti
adc
and
mov
and
stos
sbb
sarb
cmc
cmp
arpl
dec
jnp
or
lahf
sbb
mov
or
sub
je
repz
sub
cmpsb
mov
stos
daa
loopne
xchg
das
fimull
das
or
push
scas
adc
xlat
aad
in
fwait
or
push
subl
lret
lret
outsl
js
mov
jo
in
ss
sti
scas
pop
mov
mov
sub
repnz
cltd
pop
jno
mov
xchg
movb
jg
fcmovb
out
and
adc
stos
in
sub
jmp
fwait
pop
xlat
daa
imul
neg
jo
or
lods
cld
dec
or
scas
add
jmp
movups
jge
arpl
aaa
out
es
in
unpcklps
push
ds
fidivrl
mov
add
lret
lods
xor
mov
movsl
jecxz
pop
in
lock
insl
das
inc
push
aas
lods
push
dec
incl
into
mov
int3
sarl
rcrb
mov
loopne
mov
inc
insl
sti
dec
xchg
push
inc
ljmp
fndisi(8087
lahf
fimull
add
xchg
jae
dec
adc
loope
inc
xor
mov
cmpl
pusha
xor
mov
clc
in
add
fmull
fldenv
sbb
mov
test
lea
mov
fsub
add
imul
pop
dec
std
stc
push
shrb
das
sub
jmp
mov
sti
sub
fcmovbe
lods
dec
push
out
fidivrl
xor
bound
std
fwait
xchg
mov
pop
ret
sahf
add
xchg
adc
dec
mov
jmp
addr16
inc
andl
mov
ficoms
iret
mov
add
cmp
lds
pop
adc
jbe
stos
push
push
inc
push
dec
pushf
or
push
sub
cmp
sub
daa
mov
in
stos
loope
jmp
xchg
xlat
pop
xor
or
lahf
push
mov
mov
js
push
fwait
sahf
ss
cs
aad
mov
dec
iret
or
xchg
pop
cmpsb
je
mov
adc
sbb
dec
in
cli
inc
cmp
insl
out
dec
pop
sub
push
lret
dec
movsb
or
clc
xchg
lret
mov
test
test
pmuludq
mov
sarl
rol
mov
lods
loopne
or
movsb
fimuls
daa
xor
hlt
jnp
pop
cmp
loope
jg
outsb
jns
dec
ljmp
sahf
call
push
mov
cs
nop
adc
jns
cltd
cmp
popa
rcrb
inc
xorb
imulb
sbb
ficoms
fs
in
mov
or
inc
into
xor
loope
adc
add
mov
std
inc
push
cmpsb
sub
xlat
scas
nop
jno
cmp
shll
xchg
cmp
idivl
mov
sub
dec
stos
push
and
pusha
jle
push
pop
add
jo
stos
loope
in
sbb
jl
cmp
and
and
rorb
data16
jns
cmp
fimull
fbld
dec
hlt
adc
in
cmp
and
jp
bound
mov
xor
mov
mov
push
dec
ss
leave
mov
dec
inc
mov
imul
push
test
ret
movsl
push
pop
jae
cmp
lret
mov
or
or
je
stc
jo
ret
inc
out
adc
movsb
mov
jmp
imul
pop
sbb
fstl
out
idiv
mov
xor
pop
sub
and
dec
loop
sti
shl
sahf
push
sbb
addl
sub
movsb
and
cmpsl
loopne
or
mov
cmpsl
mov
ret
cs
dec
movsb
scas
xchg
popf
xor
jb
cmp
mov
push
lock
sbb
js
lds
lcall
ja
loopne
mov
pop
shrb
xchg
cmp
cmpsl
divl
insb
movsl
das
add
sti
adc
inc
idivl
cmpsl
out
loop
mov
jb
cmp
sbb
or
mov
pop
roll
xor
add
out
in
repnz
jecxz
cmpsb
mov
add
jo
pop
sti
fldl
add
jb
cmpsl
push
sbb
lcall
inc
cld
loopne
idivl
mov
xchg
out
xchg
mov
xor
notl
ja
fistl
jno
sbb
roll
cmpsl
pushf
dec
inc
out
loopne
or
out
stos
in
pop
fistl
jns
shll
mov
gs
xor
test
stos
xchg
cld
out
out
imul
adc
js
push
jmp
lahf
testl
sbb
mov
fiaddl
fistps
dec
xor
movsl
cmp
fwait
sbb
mov
cmp
push
lods
xchg
lret
mov
adc
inc
mov
adc
call
dec
jb
gs
aad
pop
ret
sbb
es
and
std
dec
pop
and
adc
adc
das
fcoml
aam
sub
mov
xchg
shll
repz
outsl
popf
fneni(8087
sbb
ret
repz
cmp
mov
mov
add
sbb
sub
lock
fisttpll
out
pop
pause
in
xchg
aaa
sti
mov
out
xor
inc
ret
ss
cmpsl
mov
ret
fmuls
mov
gs
leave
out
stos
aas
aad
dec
jle
sbb
xchg
xchg
add
cmp
cwtl
inc
repz
push
push
mov
lret
push
jne
push
inc
fs
data16
xchg
test
xchg
loope
sub
out
stc
mov
inc
add
pusha
adc
add
mov
jecxz
call
shlb
jmp
nop
popa
bound
idivl
xor
leave
adc
rorl
out
clc
aad
in
fstl
dec
xchg
xor
or
sub
inc
das
mov
aaa
aam
push
push
or
pop
inc
or
cmc
sub
cmpsb
and
pop
out
dec
je
lret
roll
adc
cmp
adc
and
pop
ret
repz
pop
sahf
xor
mov
and
xchg
push
test
dec
data16
movsb
mov
stc
or
outsb
lock
inc
adc
out
int3
inc
push
bnd
pop
dec
jle
xor
xchg
adc
or
adc
mov
stos
leave
lock
add
mov
fcompl
fwait
lahf
xchg
rcll
mov
and
add
out
ret
in
sub
jg
mov
mov
shll
dec
imul
fisubs
push
arpl
pop
clc
sahf
xor
popf
loopne
jns
jge
xchg
cwtl
in
cmp
inc
sbb
xchg
lahf
inc
pop
lock
enter
mov
sbb
addr16
pop
sbb
sbb
sahf
lds
sbb
pop
scas
sub
xor
and
push
testl
lahf
jb
dec
cmp
mov
adc
push
or
xchg
add
fsubrp
cmpsl
bound
adc
push
rcrl
or
ljmp
push
movsb
inc
push
xor
push
test
in
push
ret
push
cmc
pop
pop
dec
shrb
sti
stc
shrl
mov
push
aad
ja
nop
js
data16
and
xchg
sub
movsb
mov
mov
dec
push
nop
pushf
adc
stos
sarb
or
sbb
xlat
mov
std
in
pop
lock
inc
outsl
sub
fcmovu
es
xchg
cmp
or
subl
xchg
dec
jo
imul
push
xlat
in
insl
into
stc
jp
cs
xchg
icebp
lahf
add
adc
mov
add
push
cmp
fcompl
pop
mov
mov
ret
push
mov
lods
xor
notb
sub
sub
out
add
and
mov
push
jmp
rcll
push
out
fwait
ja
and
sar
mov
add
stos
mov
mulb
xchg
stc
pop
push
sarl
sub
int3
in
mov
mov
mov
lds
fs
leave
push
or
mov
aam
imul
pop
out
repz
inc
ds
loope
xchg
fiadds
mov
jecxz
jae
dec
mov
push
and
loop
std
add
add
repnz
adc
gs
xchg
call
sahf
fbld
or
dec
adc
iret
dec
xlat
push
push
adc
jmp
and
mov
lret
adc
stos
xchg
es
jmp
push
inc
sbb
sti
sbb
movq
in
mov
push
sbb
mov
cwtl
les
in
cmp
jo
dec
xchg
xchg
ja
jecxz
cmp
xor
or
aaa
or
sbb
cmc
mov
neg
mov
cmp
outsb
pop
divb
mov
stc
mov
jo
lret
mov
insb
je
loop
aad
mov
sti
sbb
pusha
and
inc
mov
xchg
xor
jns
inc
popf
iret
mov
xlat
jne
je
sahf
lahf
repnz
sub
sti
push
xor
rcrb
sbb
repz
lds
inc
pop
stos
scas
orb
inc
dec
repz
jae
ret
js
pop
test
into
jge
sub
in
outsl
pcmpeqw
add
loopne
sbb
lock
int3
sbb
movsl
pop
pop
adc
push
inc
ljmp
fisttpll
push
jmp
push
outsl
push
sarb
dec
les
daa
loope
ret
adc
jno
xchg
vrcpps
fimuls
xchg
ss
jmp
sar
sub
push
mov
sbb
iret
into
inc
dec
addl
jbe
insl
rolb
or
outsl
mov
mov
add
or
neg
movsb
mulb
lahf
btr
jb
cli
mov
fisubrl
roll
bnd
rcll
sahf
add
scas
imul
lcall
push
or
daa
aad
push
add
pop
sub
cli
push
cmpsl
mov
insl
out
faddl
rclb
pop
and
pop
push
mov
shll
imulb
mov
jo
lds
mov
sub
mov
mov
ds
mov
fldcw
icebp
and
test
inc
and
fcoml
imul
push
cltd
adc
out
mov
out
jg
mov
mov
fisubs
popa
out
daa
sub
sub
les
mov
ljmp
sub
lds
adc
lcall
out
xchg
fwait
movsb
add
jns
xlat
push
mov
adc
sbb
fdivl
ss
clc
call
insb
xchg
dec
pop
leave
or
outsb
jmp
xchg
ds
mov
not
add
nop
js
pop
mov
std
or
popa
outsb
into
sub
sarl
pop
loope
stos
inc
cmp
cmpl
stos
jae
jecxz
clc
mov
test
inc
lret
sub
pusha
push
mov
xor
aad
xchg
cmovo
mov
push
pop
mov
stc
imulb
pushf
push
adcb
mov
adc
sbb
cmc
nop
or
repz
mov
lahf
lods
jb
jns
and
lods
push
jno
mov
cltd
iret
add
xlat
sub
cmp
out
dec
std
aam
jge
testb
loop
and
stc
push
xchg
or
adc
mov
test
pushf
arpl
in
ds
adc
ret
inc
mov
pop
out
cltd
dec
xor
aas
cmp
mov
in
outsl
and
rolb
into
aam
cmp
data16
and
das
fisubrs
adc
adc
adc
pushf
js
cld
sti
mov
out
sub
xchg
pop
jp
xchg
mov
pop
imul
jne
adc
xchg
cmc
aas
jge
insb
adc
je
push
cmpsl
dec
inc
pop
mov
push
sahf
jge
insb
xor
test
les
or
out
aas
scas
mov
dec
stos
inc
and
sbb
sub
jbe
jns
imul
dec
cwtl
fs
inc
push
mov
push
lret
and
or
fimuls
jge
sbbl
pop
dec
cmp
andnps
popf
adc
popa
sbb
cld
subb
mov
imull
sub
je
pop
xor
das
stos
push
push
popa
mov
xor
enter
mov
mov
jge
in
ljmp
mov
mov
outsb
push
sub
sar
mov
rol
popa
cmp
incb
pop
in
push
xor
iret
cmp
les
call
mov
jo
ret
mov
add
xchg
and
or
push
push
jge
roll
sub
pop
lahf
sub
insl
mulb
jnp
xor
inc
inc
movsl
fcoml
jne
or
mov
adc
into
xchg
push
xor
sub
mov
scas
mov
ret
jb
insl
jae
ret
inc
push
push
ja
lods
push
loop
cmpsb
pop
xlat
bound
mov
adc
gs
jno
dec
scas
pop
push
mov
ljmp
mov
test
jge
aaa
out
pop
jl
int3
fists
jae
test
lret
mov
pop
dec
repnz
or
pop
lret
sub
rorb
adc
ljmp
mov
outsl
mov
add
imulb
dec
mov
lcall
xchg
in
xchg
sbb
fsts
cmp
adc
out
fs
pop
out
inc
iret
inc
hlt
add
int
lret
dec
sbb
xorl
je
dec
fwait
xchg
sub
out
mov
lock
sbb
cmp
xchg
sahf
hlt
stc
int3
mov
xchg
ljmp
ret
fbld
data16
and
lcall
fmull
out
dec
call
xchg
mov
loopne
test
and
hlt
adc
pusha
addb
jae
mov
call
mov
ss
push
pop
daa
ljmp
ljmp
adc
iret
pop
pusha
push
ss
enter
mov
xchg
jnp
imul
test
add
dec
inc
xchg
mov
loop
lea
jae
xor
jp
pusha
rol
pop
sub
movsl
lcall
ret
pop
stos
push
push
dec
ljmp
das
jg
jno
fs
dec
push
dec
inc
loope
js,pn
jl
es
imul
xor
movsl
cld
cmp
jnp
pop
sub
dec
xchg
fistl
clc
loope
cmp
xchg
leave
inc
negl
add
rcrb
pop
adc
xor
add
adc
jl
inc
aam
mov
adc
cli
aam
jl
sbb
dec
sahf
rcll
push
dec
cmp
ss
ficoml
rorb
push
or
mov
in
stc
inc
shrb
loope
test
fs
or
jns
mov
int
dec
leave
xor
push
xchg
cli
jmp
xchg
jmp
cmpsl
stos
xchg
mov
lods
sti
dec
mov
add
pop
mov
out
sti
ss
cwtl
jle
cltd
push
aas
insb
xlat
adc
xchg
in
lea
fstl
jno
adc
lcall
pop
outsb
pop
push
mov
mov
out
scas
sub
sbb
ffree
ja
pop
ret
fidivrl
pop
add
ljmp
scas
or
and
icebp
mov
sahf
push
cmp
jecxz
inc
lcall
dec
aas
push
xchg
jg
jae
popf
dec
mov
bound
shrb
mov
cwtl
xchg
pop
mov
sub
mov
pmovmskb
xlat
sahf
mov
loopne
mov
adc
push
jb
fwait
testb
add
cmp
or
jns
int3
xor
xchg
add
movsl
pop
inc
repnz
sarl
iret
repz
outsl
pop
mov
or
mov
jg
sub
xchg
ffree
stos
idiv
adc
mov
addr16
aad
dec
cmp
bound
psubsw
pop
leave
rcr
pushf
and
fs
repz
pusha
loop
shrb
push
inc
jmp
les
jge
add
out
pusha
jo
push
push
out
cmp
gs
je
jne
inc
jno
in
scas
mov
outsl
inc
addr16
lds
dec
mov
hlt
movsl
xchg
jbe
xchg
xchg
inc
dec
ret
in
inc
test
mov
sbb
mov
pop
insb
jg
shl
jg
jp
ffreep
adc
imul
mov
loopne
add
sbb
outsb
stos
push
retw
and
mov
xchg
inc
or
in
xchg
decl
push
or
jmp
cltd
popa
shl
xor
cmpsb
jns
pop
pop
cmp
lods
iret
dec
cmp
mov
jne
cmp
aas
lock
shll
sub
jle
outsl
sbb
cltd
loope
test
xchg
inc
fstpt
orl
cmp
cmc
xor
enter
imul
insb
dec
enter
scas
pusha
adc
ret
sub
xor
popf
mov
ja
xchg
or
bound
fldl
inc
dec
cmp
divb
in
xchg
dec
outsl
cmp
ljmp
testl
dec
mov
mov
fldt
rol
mov
fstpl
mov
nop
leave
testb
ret
jg
or
inc
xchg
or
es
sbb
je
in
repz
outsb
or
push
push
sbb
jae
mov
daa
push
jge
and
ljmp
jo
outsb
cmp
data16
push
lods
std
pusha
sbb
iret
sub
cld
push
mov
mov
rclb
sbb
pusha
hlt
call
inc
mov
cld
cmp
or
sarb
jecxz
push
out
xchg
cmpsb
or
push
fimull
popf
push
xor
mov
adc
mov
cmp
pop
push
jp
sub
sti
int3
sub
xchg
popf
jae
inc
pop
loope
sub
push
pop
subb
cs
pop
dec
ret
sbb
test
push
add
rorl
andb
dec
inc
adcb
mov
movsb
sahf
or
xchg
xchg
shll
sbb
outsb
sbb
mov
or
lock
inc
sbb
push
xor
ja
cmp
call
ja
adc
or
cmpsl
dec
stos
into
gs
neg
addb
mov
mov
jle
mov
mov
lods
shl
lret
enter
shr
mov
mov
inc
sahf
popf
mov
aas
cmp
cmp
xchg
jge
push
pop
stos
and
cmp
xchg
jno
fdivr
sbb
js
divps
js
jne
fucomip
xchg
and
mov
aas
mov
push
fnstsw
scas
xor
jns
mov
push
psllw
int3
push
xchg
mov
icebp
or
notl
test
add
sahf
out
movsb
xor
mov
and
xor
fucom
cwtl
lcall
lahf
ss
das
push
rcrb
arpl
fwait
push
push
inc
into
push
filds
inc
scas
cmp
push
mov
sahf
notb
cmp
xor
scas
add
int3
mov
jecxz
push
scas
inc
jl
cmp
inc
fisttps
lahf
add
loope
stc
xorl
cmpsl
push
arpl
mov
mov
loopne
cmp
fwait
js
cld
push
daa
push
test
rol
push
hlt
xor
sub
repnz
or
inc
popa
push
push
xchg
movsl
les
test
leave
faddp
mov
pop
imul
rcrl
pop
mov
mov
and
jbe
int
pop
iret
fwait
push
add
movl
mov
sbb
pop
fwait
hlt
fisubrs
xchg
and
jle
jmp
inc
popf
imul
add
hlt
int3
mov
mov
fs
mov
cwtl
pop
mov
cli
xchg
sub
mov
xchg
clc
subb
adc
add
mov
sub
push
sub
add
mov
popf
scas
mov
setne
fdivl
incl
scas
ja
dec
mov
and
add
cmp
cmp
sub
enter
test
fidivs
mov
out
imul
jmp
je
imul
and
jnp
in
aaa
add
mov
push
ds
loopne
push
es
into
adc
lods
sbb
or
sbb
mov
shll
jae
mov
push
xor
dec
or
dec
adc
mov
push
decb
mov
lret
pop
fwait
outsb
inc
in
imulb
or
or
pop
mov
xor
dec
mov
mov
add
loopne
push
jo
cli
sarl
mov
push
sbb
insl
or
stos
in
test
pop
sbb
pop
cmp
add
jo
xor
mov
mov
dec
cs
mov
or
insb
repz
mov
stc
sub
adc
shl
rclb
mov
xchg
mov
testl
lds
hlt
scas
aas
adc
cwtl
push
in
shl
cld
test
sub
icebp
out
push
add
inc
scas
lahf
insb
xor
mov
lahf
xlat
lahf
add
mov
fucomip
testb
lea
les
sbbl
aas
jns
insl
mov
popa
sbbb
mov
movsb
fwait
sub
jno
pop
jge
clc
adc
fs
pop
mov
push
neg
es
mov
popf
push
shlb
jp
xchg
or
mov
jbe
adc
push
call
sub
jecxz
rorl
cmp
faddl
out
sub
xor
jb
adc
lcall
pop
inc
jmp
pusha
jle
test
xor
das
fs
push
push
xchg
in
shlb
add
push
add
pop
pushf
sub
std
call
cwtl
movsl
pop
sti
fbstp
scas
insl
dec
push
rcll
cmp
inc
jae
dec
sub
pop
sbb
inc
and
insb
inc
pop
mov
faddp
fmuls
and
add
xorb
or
loopne
stc
or
mov
fcomps
push
mov
push
call
sahf
jae
fs
jg
sub
scas
jnp
dec
out
and
lds
es
push
and
xchg
xchg
in
lea
and
mov
fsubl
cmp
sahf
push
in
es
xchg
std
call
lock
test
pusha
jno
mov
mov
push
or
std
mov
cmc
lahf
movsb
test
loopne
jns
or
mov
ret
cs
xchg
subl
inc
push
xor
shll
and
loopne
xor
inc
or
out
dec
in
inc
sub
lcall
cmp
or
inc
sbb
mov
sbb
mov
jg
addr16
sub
jecxz
inc
ss
cld
adc
das
or
mov
jp
out
int3
mov
adc
inc
cmp
cmp
out
roll
jle
popl
mov
xor
lea
out
inc
int
mov
in
out
dec
lock
mov
dec
push
mov
in
insl
dec
rolb
aad
out
andb
lret
pop
ljmp
lock
cwtl
sbb
mov
aas
stos
cltd
mov
or
call
mov
mov
jno
movsb
cmp
jg
stc
hlt
push
ficoms
adc
mov
jae
pop
xchg
xchg
pop
fmul
mov
out
in
ret
cmpsb
mov
cmp
lcall
mov
gs
cmp
jecxz
add
imul
pop
ds
ss
sbb
loopne
jl
and
shlb
insl
push
jae
fsubrs
push
fs
hlt
sbb
xor
test
xor
pusha
in
jle
cmp
sbb
jg
js
pop
sub
pop
jg
or
std
cmc
mov
fists
push
popf
ljmp
push
gs
inc
int
scas
das
mov
in
sub
repz
scas
sbb
in
mov
frstor
jl
rep
nop
cmp
sarl
inc
or
cmp
adcb
push
int
sbb
aas
push
or
cmp
stos
cmp
push
jl
xchg
daa
add
rorl
orb
xor
adc
pop
sbb
push
cld
push
orb
mov
and
adc
jno
xchg
sub
dec
pusha
mov
ljmp
push
pop
jmp
mov
adcl
dec
jecxz
add
mov
enter
xlat
dec
push
insl
pop
inc
int
std
sbb
or
dec
ljmp
inc
and
mov
push
push
jbe
imul
hlt
push
push
xor
shrb
enter
lcall
mov
jl
arpl
adc
jmp
sbb
mulb
aam
leave
std
lock
xchg
jae
inc
sub
data16
scas
or
sub
and
xchg
push
sub
mov
mov
sahf
jl
push
popf
inc
aam
mov
sbb
adc
sub
call
jns
jl
movsl
dec
popa
pop
mov
cmp
xor
mov
arpl
push
insl
std
insb
jg
pop
cli
cltd
pushf
cmc
sub
mov
mov
jo
and
jle
out
ucomiss
sbb
pop
or
or
sarl
shll
pop
jecxz
pushf
jnp
push
jnp
push
cmpsl
cmpps
outsl
jno
lea
xor
or
add
outsl
aas
mov
cmc
jo
push
popa
cli
call
icebp
test
push
dec
jge
dec
cs
xchg
mov
daa
cmp
aam
push
test
arpl
add
push
xor
pop
lret
jns
sbb
insb
push
shrb
call
xchg
cmc
or
mov
jle
loope
jge
xor
or
jg
pop
sub
cltd
out
push
in
sbb
push
mov
std
xor
popa
jle
popa
ljmp
arpl
scas
xlat
das
push
data16
cmpsl
scas
fisubl
or
fdiv
popa
mov
push
stc
addl
cltd
je
shrl
cmpsb
xchg
jmp
mov
xor
jo
hlt
clc
sbb
call
jno
mov
sbb
subb
xlat
mov
push
lock
mov
pushf
neg
xor
ret
aaa
pop
mov
cmp
cwtl
xchg
addr16
xchg
orl
lods
xor
mov
nop
or
push
mov
sahf
or
test
cmc
rclb
push
xchg
and
jbe
loopne
fidivrs
or
cld
aam
popa
xchg
mov
ds
sbb
mov
push
dec
xchg
mov
loopne
dec
push
aaa
pop
xchg
or
cmp
push
in
imul
adc
mov
test
movsb
xchg
mov
xor
test
ret
mov
out
jbe
lret
ja
js
jge
rorb
xor
mov
fwait
out
hlt
mov
cmpsl
push
inc
pop
iret
leave
xchg
adc
mov
imul
and
bound
dec
std
add
and
inc
jnp
mov
insb
nop
dec
xor
push
lods
add
mov
mov
pusha
mov
xchg
jmp
push
addr16
aas
sbb
js
xlat
ljmp
lock
and
icebp
sbbb
in
movsb
mov
jb
shll
push
or
das
dec
xor
jns
rcll
pop
cmpsl
sbb
or
test
lods
and
jl
pop
or
jle
in
jo
mov
dec
push
cmpsb
jmp
pop
sub
add
mov
hlt
fs
loope
or
cld
and
imul
imul
cmp
mov
dec
add
repnz
cmpb
mov
sub
scas
and
cmp
mov
dec
xor
ficoms
xor
movsl
fs
repz
pop
and
xor
cld
jns
cld
xchg
mov
daa
mov
es
arpl
xor
lock
and
sbb
inc
nop
jp
push
idivb
dec
arpl
addl
das
lods
nop
iret
or
mov
mov
inc
and
cmp
loop
push
mov
sub
outsb
push
push
push
push
int3
xchg
clc
jp
movsb
xchg
lock
out
mov
sahf
sbb
rcll
lahf
nop
ficompl
jl
adc
cmp
jp
xlat
addl
jecxz
add
mov
cmp
xor
mov
fildll
test
cwtl
mov
adc
int
movsl
dec
ret
rol
in
sarl
loopne
inc
xor
push
xchg
xor
ds
jmp
add
pop
or
jmp
add
sbb
pop
xchg
pushf
adc
mov
xchg
in
repnz
adc
cmpsl
xchg
in
push
pop
cmp
lcall
push
mov
iret
or
sbb
or
push
dec
mov
xchg
mov
std
dec
push
and
out
outsb
call
test
imul
push
sbb
cltd
insb
adc
sbb
insl
dec
jecxz
sbb
jmp
dec
lock
cmc
mov
pop
adc
pop
push
or
cmp
lret
pop
jecxz
cmp
pop
sub
aad
into
jg
aam
lods
xchg
inc
loop
orl
arpl
xlat
jns
add
adc
mov
sub
add
in
xchg
sarl
dec
mov
jnp
push
inc
ret
sbb
inc
push
cld
call
push
fdivrl
or
cltd
aaa
mov
popl
add
sahf
dec
std
fisubrs
jne
test
xchg
test
lods
jmp
lds
jmp
adc
dec
dec
dec
inc
ljmp
or
jp
and
fbld
cli
jp
push
mov
mov
jae
dec
add
loop
popf
mov
push
sub
xchg
lea
xlat
sub
insb
adc
jnp,pn
out
xor
fwait
cmp
xchg
hlt
cmpsl
popa
lcall
push
lods
or
pushf
jbe
or
mov
add
jp
mov
xor
cmp
push
cs
dec
std
lcall
inc
dec
sub
fbstp
sbbl
or
mov
and
dec
jmp
sub
push
cmp
push
xchg
or
cmp
xchg
pop
fcoml
xchg
jg
ljmp
mov
pop
fwait
push
test
loop
prefetchwt1
or
movsb
inc
arpl
hlt
cmp
mov
push
popa
sbb
jbe
lret
inc
and
adc
sti
xchg
in
sbb
push
adc
mov
xor
adc
into
mov
jmp
aad
rcrl
ljmp
data16
push
cmp
push
mov
orl
push
test
int3
xchg
mov
mov
dec
jae
push
fdivrp
mov
ss
lods
and
push
push
cmp
cli
rcrb
dec
or
cltd
rcrl
xchg
stos
mov
insl
xchg
and
push
mov
test
loop
fwait
mov
xchg
cmp
pop
cmpsl
xchg
ss
sub
out
mov
xor
sbb
xchg
inc
cwtl
outsb
out
mov
movsl
and
xchg
aas
fistpl
jge
in
loope
and
mov
or
js
mov
je
popa
pop
or
add
xchg
ret
bound
push
outsb
call
mov
xchg
movsl
inc
mov
xchg
daa
je
addr16
inc
rcrb
les
xor
and
popa
popf
xor
xor
repnz
mov
and
nop
aas
cld
imul
mov
stos
push
scas
sub
loopne
sub
sub
cmp
and
or
mov
xchg
daa
pop
cmp
je
pop
xchg
jecxz
scas
xor
aas
mov
push
arpl
mov
mov
dec
push
dec
push
std
sbb
stos
jo
inc
sahf
popa
in
cld
mov
pop
jge
stc
imul
dec
inc
lcall
dec
rclb
inc
pop
popa
outsb
in
pop
fisttpll
or
jno
ja
rcrb
adc
popf
out
mov
mov
std
popf
xor
daa
dec
aad
gs
pop
test
arpl
in
loop
adc
fimull
imul
mov
stc
movsb
inc
dec
adc
arpl
or
xor
es
fs
jp
repz
add
xor
data16
fisubrs
out
rcrl
mov
lea
inc
das
xchg
ja
cld
jle
aaa
ftst
push
fdiv
popa
cltd
jmp
fnsave
and
rorb
xor
add
popf
or
lret
test
in
bnd
stos
cmp
adcl
or
and
test
je
movsl
mov
lock
jmp
in
mov
pop
sbb
xchg
inc
daa
or
xchg
pop
jle
aam
roll
cmp
scas
cmp
cwtl
ljmp
mov
cmpl
mov
mov
aas
add
or
jge
mov
sbb
xchg
pop
xchg
clc
jae
xor
mov
rclb
mov
xor
lcall
into
fiaddl
mov
hlt
xor
or
add
mov
out
and
fisttps
lods
push
scas
fnstcw
jmp
adc
sbb
in
pop
cmp
pusha
movsb
fbstp
sbb
fildll
cmc
lds
dec
mov
test
xchg
pop
add
scas
push
and
pop
outsb
rclb
shlb
iret
andl
cmp
lock
push
jle
lods
std
jno
mov
rclb
sub
fnsave
insl
es
nop
cld
mov
test
divl
inc
into
add
cli
out
aam
and
push
adcl
mov
jge
add
mov
sub
xchg
in
mov
pusha
mov
arpl
and
in
aam
icebp
sub
pop
jecxz
xchg
rorb
jae
lret
add
xchg
lahf
test
scas
or
clc
sub
addr16
adc
loopne
and
shrl
xchg
sbb
test
mov
inc
movsb
jne
dec
and
imull
adc
jns
jp
jmp
cmpsl
dec
out
sub
inc
push
data16
insl
inc
loopne
sbb
push
push
popa
push
rcll
into
push
notl
aaa
xchg
and
punpckldq
mov
xor
fstpl
push
mov
ss
ljmp
outsl
gs
mov
es
fwait
add
subl
aam
jp
scas
push
ljmp
xlat
mov
inc
mov
out
adc
bound
leave
add
mov
dec
mov
cmp
add
and
sbb
in
insl
test
xlat
nop
insb
out
mov
push
mov
std
subl
jbe
les
loopne
fstpt
js
cmp
jecxz
xor
xchg
je
rorl
jb
arpl
mov
mov
nop
or
jb
or
jl
pop
hlt
push
cmpsb
imul
jne
adc
mov
pop
lods
xor
ja
orl
int
es
fstl
ret
push
insb
rcll
mov
adcb
pop
push
jne
scas
cmpsb
xchg
jno
push
pop
fimuls
mov
add
sbb
sub
aad
in
loop
fcmovne
and
dec
jmp
dec
sti
popa
jle
jb
xchg
sti
dec
test
daa
ljmp
lret
dec
pop
testl
pop
mov
adc
leave
lret
sbb
lods
and
mov
lock
dec
xor
mov
orb
or
nop
test
jae
icebp
dec
icebp
frstpm(287
xchg
mov
pop
sbb
test
push
xorb
iret
adc
dec
jb
mull
xchg
cmp
add
stos
push
cwtl
ficoml
pop
jp
dec
into
dec
iret
ljmp
mov
jns
jecxz
jns
add
mov
xor
lahf
rol
push
leave
pusha
push
mov
pop
gs
or
loopne
cmp
rcll
cmp
in
ja
mov
out
cmp
testb
add
scas
push
popa
hlt
outsl
add
pop
ret
jb
scas
jns
fsubl
loop
push
lret
outsb
fsubrs
hlt
call
cs
icebp
push
gs
cmp
push
cltd
js
add
mov
dec
add
pop
leave
and
cmc
sarb
fwait
lods
dec
dec
dec
xor
in
ljmp
dec
or
add
dec
cmp
inc
push
ret
push
test
sbb
xchg
rcll
lods
jns
push
xlat
adc
inc
mov
xchg
push
cli
fildll
push
imul
add
add
lods
movsb
xor
cs
and
inc
or
in
pushf
cmp
add
pop
pop
or
rcrl
pop
test
mov
jne
fisttps
pop
out
in
les
pop
xchg
fnstsw
pop
test
cltd
movsb
inc
push
rcll
jp
or
fimull
fnsetpm(287
inc
fistl
or
popa
cmp
sbb
mov
aaa
inc
jns
fs
push
mov
mov
xchg
lcall
mov
testb
cmp
fnstsw
mov
stc
movsl
and
mov
les
xchg
cli
mov
stos
mov
rcll
sub
pop
leave
rcr
mov
cmpsl
outsb
sub
repnz
push
lods
outsb
adc
rorb
adc
sub
pushf
push
xchg
leave
jb
xor
lea
lods
push
xchg
cmpsl
push
pop
adc
jns
out
mov
movb
test
shll
adc
mov
popf
fiadds
mov
mov
dec
pop
mov
icebp
das
xchg
jno
add
or
inc
daa
addr16
cmp
sahf
aam
repz
push
daa
cwtl
push
xchg
in
pop
scas
cltd
and
std
sub
js
jmp
scas
push
std
adc
jo
sbb
adc
push
push
fucom
mov
call
fisubs
dec
xchg
add
arpl
cmp
or
je
daa
push
push
aam
xor
ss
fdivl
loop
ljmp
jp
and
mov
hlt
xor
xchg
nop
stc
pusha
scas
loope
sbbl
out
icebp
cmpsb
test
add
xchg
aaa
inc
mov
movsl
jbe
sub
xlat
rclb
inc
cli
cmpsl
es
cmp
xor
clc
push
add
cs
jmp
idivl
sub
loopne
lock
js
push
test
cmp
jmp
mov
sub
pop
mov
dec
fimuls
sti
mov
lret
insb
rcrl
adc
xchg
lock
mov
jp
in
in
mov
lahf
lods
lret
dec
pop
pop
orb
test
adc
fdivrl
imul
fsubl
cmpb
out
jns
mov
out
rcrb
push
js
cmpsb
inc
jp
dec
and
arpl
into
xchg
punpckldq
mov
mov
mov
mov
or
sbb
dec
lea
out
dec
xchg
push
sub
outsl
dec
rcll
sub
cmp
sub
or
jb
into
and
lahf
in
jns
pop
repz
inc
outsb
mov
xor
lods
xor
push
cmpsb
pop
lods
sbb
iret
inc
fwait
pop
pop
sbb
and
out
jno
test
or
and
ljmp
or
into
test
inc
xchg
mov
ficomps
inc
inc
jbe
xchg
les
rcl
mov
xor
iret
cmp
cmp
cmpsl
push
int
pop
pop
push
mov
jno
mov
cmp
lock
scas
mov
xchg
aaa
pop
nop
push
and
xorb
pop
and
push
lods
mov
imul
jb
mov
pop
sub
inc
cld
dec
mov
jmp
xchg
pop
pop
les
imul
sbb
shll
xchg
js
movsl
subl
mov
push
adc
or
lds
mov
and
push
dec
mov
adc
jmp
clc
add
push
inc
mov
mov
imul
cmp
ds
mov
pop
or
push
sub
test
rcrl
push
cld
inc
shlb
aaa
or
mov
icebp
stos
les
jns
mov
ror
and
inc
fwait
push
pop
les
ret
test
mov
je
shlb
inc
inc
and
xchg
out
fs
outsb
popa
das
lret
cld
loopne
test
xlat
int
jns
add
lahf
dec
cmp
scas
fsubp
jmp
push
sub
adc
rcr
xor
call
cld
xchg
js
jle
aam
scas
mov
xchg
in
cmp
pop
or
dec
mov
addl
in
test
inc
mov
test
stos
cmpsl
test
xchg
cli
iret
in
out
and
mov
jp
adc
xchg
inc
adc
insl
jno
mov
mov
icebp
inc
inc
push
lock
add
xchg
stc
push
sti
mov
cmp
jl
xchg
xchg
cmp
or
popa
xchg
into
pusha
cmpsb
int
jb
pop
lods
dec
ja
imul
les
push
xor
pop
or
sub
addb
orb
inc
daa
jae
repnz
sub
jle
mov
in
les
test
popa
or
int3
leave
repnz
mov
inc
cmpl
sahf
mov
fmuls
aam
jo
adc
xor
pop
pop
gs
pop
dec
lahf
xor
mov
pushf
pop
or
cmpb
cmp
ds
ja
push
ret
cmp
xchg
jg
lds
js
and
lcall
test
sub
and
addr16
lcall
fnsave
sbb
xchg
cmp
pusha
xlat
and
in
pushf
imul
into
les
jne
in
lret
push
xor
int3
pop
jae
or
flds
dec
xor
sarl
mov
xor
fmuls
sub
repz
sub
cwtl
adc
sbb
mov
and
push
insl
leave
inc
es
test
cmp
jo
std
dec
stos
inc
sub
aad
rcr
jmp
fnstenv
push
adc
ror
xchg
xlat
push
lods
inc
mov
cmpsl
test
test
adc
lods
in
test
sub
add
loope
mov
ja
cmc
popf
jne
rorl
pop
addr16
add
inc
bound
push
aaa
xchg
fwait
lret
push
sbb
cwtl
or
jo
js
mov
call
sti
fxch
add
into
jae
cmp
pop
roll
xor
xchg
mov
data16
test
shll
jnp
lock
adc
mov
mov
jo
cmp
jp
or
sub
cmp
xor
dec
test
cmc
std
hlt
lods
jno
das
xor
xchg
jno
xchg
dec
in
add
stos
dec
scas
and
pop
int
jmp
cmp
push
mov
inc
stos
cmc
push
sbb
leave
shlb
dec
loope
setne
and
sbbb
sbb
cmp
mov
or
popa
psrlw
sbb
push
add
fisttpl
insb
mov
xor
cmc
icebp
inc
push
fs
jge
xchg
bound
addb
or
jp
test
sub
xchg
pop
push
jbe
mov
mov
cmp
lahf
lods
leave
in
mov
cmp
pop
or
or
fildl
loope
popa
sub
ror
push
test
add
mov
push
and
cmc
mov
mov
fdivrs
pop
fldcw
cld
mov
int3
pop
in
scas
inc
cmp
sti
lds
xchg
jp
mov
mov
sbbl
rcll
ret
sbb
add
subl
mov
xchg
clc
push
dec
push
jno
iret
cli
loope
cmp
add
movsb
pop
and
and
xor
add
pop
les
xor
mov
jbe
jle
mov
loopne
cmp
test
aad
jg
sarl
dec
mov
sub
mov
mov
inc
lds
jne
pop
std
push
loope
jecxz
mov
out
pop
sbb
xor
inc
push
movsl
icebp
cmpsl
pop
flds
cwtl
mov
loope
inc
cmp
test
cwtl
pop
or
lahf
xchg
sub
or
jns
ror
inc
stos
or
dec
in
add
mov
xchg
mov
stos
ss
add
inc
int3
add
jmp
lea
mov
loope
inc
push
push
mov
xor
je
aad
adc
xor
pop
lahf
ss
imul
imulb
or
mov
add
mov
faddp
loop
movsl
jmp
mov
add
xor
outsl
aaa
and
outsb
stos
cvtpi2ps
scas
xchg
mov
push
jmp
xchg
mov
aam
gs
push
addl
lds
pop
push
mov
pop
rcl
pop
or
or
inc
pop
pop
jbe
andl
into
daa
idivl
subb
mov
adc
pop
addl
push
pop
loop
push
or
mov
fbstp
mov
ds
clc
adc
or
add
or
shll
sarb
jb
mov
fs
mov
jno
pop
jp
dec
mov
push
sub
out
fstl
mov
out
lods
fisubrs
sub
out
ja
mov
movsl
pop
test
pop
aad
imul
add
pop
pop
stc
pusha
std
dec
aaa
mov
mov
fwait
dec
mov
outsl
int
mov
jge
sub
pop
mov
movb
cld
mov
out
mov
shrb
or
clc
cld
addr16
jbe
dec
imul
xchg
jnp
mov
data16
inc
inc
aam
gs
cmp
xor
or
or
cwtl
data16
into
div
mov
in
loopne
sub
and
push
rolb
xor
stos
inc
shr
hlt
dec
outsl
fmull
pop
stos
lahf
js
mov
insl
cmp
cmp
xchg
pop
cs
das
pop
push
xor
jo
xor
wrmsr
lods
pop
and
imul
cmc
addr16
cmp
stc
mov
insl
or
xor
or
iret
loop
out
lds
xchg
push
add
dec
adc
mov
add
push
outsb
push
imul
mov
xor
movsl
outsb
shlb
xchg
pop
js
test
movsl
mov
push
jns
jbe
inc
pushf
xchg
and
jge
xor
xchg
test
xchg
sbb
scas
sub
mov
dec
mov
pop
dec
cmp
add
pop
xchg
sti
outsb
or
inc
push
cmp
call
inc
mov
cs
mov
stos
xchg
pop
aaa
sub
loopne
inc
mov
into
push
out
mov
or
dec
mov
mov
movsl
fadd
mov
in
inc
lret
inc
push
xchg
inc
sub
and
gs
or
rorb
lret
imul
stos
pop
int
mov
xchg
or
adc
sub
push
pop
cld
dec
jp
jle
or
fldt
pop
jmp
inc
ds
jecxz
out
movsl
popf
mov
sub
into
lds
std
cmp
xchg
push
lock
sarb
or
js
adc
jb
pop
in
push
ja
decl
pop
push
inc
mov
popa
adc
jb
dec
pushf
sarb
mov
push
in
test
cmpsl
test
and
xchg
test
sarl
js
fdivr
push
notb
sub
ss
enter
push
sub
adc
lahf
xor
aam
push
jo
dec
loop
sbb
loope
xchg
imul
and
pusha
push
filds
lret
pop
cltd
ljmp
pop
je
daa
pop
push
into
sbb
push
pop
pop
addb
dec
std
pop
lea
lods
jb
shll
dec
arpl
and
sbb
repnz
sub
or
aaa
mov
cs
mov
xchg
out
jp
mov
push
ljmp
insl
stc
in
mov
xchg
stc
mov
mov
rorl
cld
mov
xchg
imul
mov
nop
sbb
inc
inc
sbb
sar
shl
xlat
adc
pusha
movsl
push
jbe
rorl
jb
iret
aaa
sub
mov
pop
outsb
popf
lods
jno
mul
push
mov
fcmovnbe
jmp
mov
add
movsb
or
js
bound
das
push
mov
adc
add
cs
sarl
pop
push
xor
repz
imul
sub
movsl
fildl
push
outsb
hlt
jo
in
addr16
sub
ret
frstor
andb
fdivrl
dec
jo
or
sbbl
cmp
pushf
arpl
mov
and
add
pop
cmp
lods
jo
sbb
pop
je
dec
push
jmp
mov
jp
sbb
scas
push
push
icebp
popa
int
cmp
sub
fwait
es
aad
sbb
pop
jp
xor
dec
pop
fimull
push
enter
fwait
cmp
inc
sbb
xor
or
sbb
push
or
mov
js
cmpsl
ja
inc
fwait
sub
jb
data16
adc
mov
adc
das
pop
lods
dec
into
mov
add
mov
mov
insl
or
pop
popa
pop
add
out
out
or
pop
leave
iret
cmp
xchg
cmp
ret
pop
lcall
adc
mov
out
mov
sbb
inc
push
mov
or
movsb
aaa
cmpsb
mov
aas
lods
popl
mov
das
cmpl
dec
mov
int
aaa
sbb
std
sub
jge
sbb
xchg
mov
ret
adc
sub
sarb
cs
fiaddl
imul
ds
pop
hlt
xor
mov
aad
adc
add
xchg
daa
xor
jo
push
push
xchg
mov
sahf
ficomps
sbb
rcrb
adc
adc
icebp
loop
pushf
xchg
mov
dec
movsl
jnp
add
push
loop
popf
fadd
inc
lcall
imul
xor
aas
jns
xor
add
xor
or
hlt
adc
pop
hlt
push
es
mov
jle
xchg
aad
loopne
xor
fimull
xor
icebp
fwait
pop
addr16
insl
vcvtss2sd
loope
or
mov
cli
clc
int
sbb
dec
int
adc
inc
sbb
popf
jns
cmpsl
bound
nop
mov
sub
repnz
dec
sub
sbb
inc
mov
dec
xchg
push
cli
sbb
and
fisttpll
movsl
in
cltd
jae
and
adc
roll
dec
cmp
jns
add
pop
sbb
ljmp
in
pop
adc
pushf
jp
out
inc
mov
aam
scas
add
jle
insl
mov
xor
push
clc
cmp
xor
setp
mov
push
adc
lods
hlt
jl
dec
xor
and
int
mov
sahf
cs
xchg
or
aas
inc
in
mov
mov
inc
xchg
jo
imull
fwait
in
inc
jb
jg
daa
pop
dec
jne
sub
lret
mov
insb
icebp
mov
sub
je
decb
pop
mov
movl
js
jge
test
add
je
cmpsb
dec
ss
imul
adc
lods
jecxz
cs
das
push
stos
in
xor
push
sbb
iret
dec
data16
ret
inc
in
push
jne
loop
iret
lahf
movsl
xor
lods
imul
imul
adc
int
mov
lret
mov
xchg
jo
movsl
lods
mov
mov
ret
jecxz
std
fsubrl
cmc
rcrl
pop
or
loope
pop
xchg
mov
pop
xchg
sbbb
enter
testl
sahf
repnz
adc
push
fdivl
cwtl
push
adc
xchg
ja
mov
mov
ljmp
lods
sbb
ret
inc
insl
xchg
loop
cmp
ret
mov
inc
inc
lret
out
jmp
push
dec
pop
popa
add
adc
inc
dec
jmp
xorb
dec
mov
incb
add
es
cmp
fwait
addb
repnz
jecxz
movsl
stc
pop
addl
fcomp
ds
pop
ficomps
fwait
add
shlb
loope
xor
pop
cmc
iret
daa
jbe
xor
pusha
mov
mov
add
call
addl
into
lds
dec
cmpsl
cmp
pop
dec
pop
loope
dec
arpl
sahf
daa
aaa
inc
inc
jge
ds
and
inc
or
mov
dec
incb
stos
inc
ja
xor
pop
cmp
int3
loopne
dec
mov
cmp
jbe
lret
push
neg
and
xor
sub
std
mov
dec
mov
mov
or
xor
shld
sti
lods
fwait
xor
and
push
xchg
in
sub
loope
inc
movsb
lea
movsl
add
movsb
or
jge
push
adc
push
dec
sub
cmc
rolb
mov
or
leave
xor
sbb
sbbb
sub
test
out
push
mov
xor
mov
mov
frstor
fsubl
shrb
dec
repnz
and
inc
pop
jns
add
xchg
divb
mov
jmp
insl
mov
dec
sub
xor
mov
jbe
pusha
daa
or
pop
jnp
jno
aaa
adc
imul
mov
cwtl
mov
ds
cli
inc
js
ret
mov
insl
sti
insl
xchg
imul
aas
jno
fisttps
mov
jnp
loope
imul
fldcw
jmp
push
addr16
fdivl
test
jo,pt
inc
adc
mov
jle
adc
sbb
inc
std
shrb
movsb
insb
ret
xor
xchg
pusha
mov
leave
in
outsl
or
mov
cmpsl
daa
stos
call
out
jp
adc
shrb
shlb
mov
jge
ljmp
jae
in
and
insl
pop
outsl
sub
dec
sub
in
inc
push
pop
or
and
jmp
mov
adc
ret
xor
lea
adc
add
jmp
mov
movsb
jle
js
rol
adc
das
jns
call
mov
notb
lret
and
mov
in
arpl
cmp
pop
push
xor
sbb
cwtl
out
ss
pop
sub
push
sub
push
pop
lds
jo
out
jno
pop
inc
pop
bndstx
xchg
in
add
add
imul
mov
ret
add
jmp
nop
or
cmc
mov
repnz
push
imul
les
addl
icebp
mov
jo
sub
or
mov
push
push
pop
mov
and
pop
push
mov
fbstp
int3
or
xor
xchg
inc
push
adc
push
mov
fimull
dec
or
mov
adc
cmp
cltd
or
jp
and
stos
dec
mov
cmc
popa
call
negb
jno
or
das
ja
or
fwait
adc
jmp
add
jb
jle
pop
aad
and
pop
jae
sbb
cwtl
mov
pop
bnd
cmc
jo
cmovge
xchg
mov
xor
aas
in
sbb
push
subl
sub
push
out
test
sahf
pusha
rclb
push
movsb
mov
stos
loope
pop
icebp
std
xchg
sub
mov
inc
push
fcompl
jg
fnstcw
push
adc
add
jp
mov
movsl
sbb
adcl
cld
jl
mov
mov
cmp
gs
negl
sub
jnp
mov
out
movsl
xchg
mov
cmp
pop
pop
inc
shll
xlat
loope
jb
dec
mov
arpl
repnz
sbb
mov
pop
sub
in
pop
jo
aaa
pushf
lock
rorb
sbb
mov
ljmp
outsl
movsl
xor
cld
enter
repz
sbb
dec
mov
sbb
jae
loopne
adc
mov
aaa
cmp
push
mov
adc
mov
into
fidivl
icebp
dec
pusha
lods
loope
stc
xchg
mulb
nop
sbb
repz
add
shll
push
loopne
fwait
loope
inc
mov
fwait
push
xchg
push
push
sub
enter
jne
aaa
mov
int
cs
jle
sub
dec
push
popf
mov
jmp
outsl
xchg
fs
insb
adc
mov
hlt
orl
lods
jb
adc
pop
pop
adc
pop
test
or
jecxz
out
inc
mov
movsl
cmp
inc
ja
inc
xor
cmp
dec
fnstenv
ret
push
imul
xchg
mov
iret
xor
out
out
push
popf
xor
mov
iret
sub
push
out
jbe
cmp
mov
jge
pop
stc
inc
and
xlat
lcall
sti
pushf
push
xchg
jge
sbb
mov
jp
cwtl
mov
mov
mov
stos
fs
and
scas
xlat
rolb
out
je
repz
jne
jge
push
sbb
or
loopne
outsb
jmp
das
aad
fcmovnu
push
fwait
and
cltd
js
cmp
mov
mov
into
shrb
mov
xor
frstor
mov
dec
bound
cmpsb
xor
lret
std
lock
int
orl
mov
cmp
sbb
push
xchg
hlt
xor
out
mov
sbb
imul
push
imul
sarb
fidivrs
lahf
sub
jb
pop
xchg
leave
or
mov
jl
inc
icebp
bound
std
push
mov
or
dec
in
mov
push
stc
add
mov
stos
cmp
lods
fdivrl
jge
ret
xchg
lcall
clc
jb
jnp
and
push
xor
js
popf
repnz
adc
enter
cmp
mov
test
jno
mov
inc
mov
aas
jb
adc
dec
subl
push
add
test
rcrl
pop
push
rol
insl
cmp
pop
jns
push
shrb
lock
out
clc
sbb
filds
mov
cmp
sti
jmp
dec
mov
and
lock
push
imul
push
push
add
sbb
fidivrl
cmc
push
imul
hlt
orl
or
inc
xor
dec
mov
cmp
cmp
pop
mov
mov
or
andl
xor
push
jg
xchg
int3
ret
popf
outsl
adc
cmp
push
dec
stos
or
mov
or
popa
add
inc
pop
movsl
mov
mov
cwtl
fldt
movsl
cmp
int3
test
js
push
push
jns
fildll
and
xlat
lcall
insl
stc
mov
test
jno
sbb
pop
xor
and
test
imul
push
aam
imul
fidivrl
mov
out
dec
outsl
sub
and
aaa
and
ds
jae
das
and
aad
dec
mov
xchg
jle
cmp
adc
mov
push
add
push
outsl
pop
cmp
testb
jnp
and
push
or
or
out
xchg
into
lret
xor
cltd
out
call
xchg
int
push
mov
fs
cmp
xor
push
ja
add
push
clc
out
add
xchg
xchg
test
push
arpl
pop
xchg
mov
out
mov
jp
movsb
sti
es
scas
mov
sub
cli
sub
mov
inc
mov
jmp
test
out
scas
push
fadds
add
cmc
in
hlt
ret
or
rorl
ficoml
xor
cmp
or
xlat
pop
es
movsl
out
insl
scas
sbb
jg
mov
pop
mov
jne
scas
testl
aaa
insl
and
xchg
enter
hlt
sbbl
sub
iret
mov
lret
rcrb
les
cmp
add
dec
mov
xchg
out
adc
in
daa
push
frstor
je
subb
mov
aam
in
mov
out
jb
inc
inc
ret
mov
jge
mov
bound
jmp
out
fwait
mov
inc
test
add
xchg
in
xor
outsl
imul
pop
xchg
mov
push
outsb
lock
sti
js
cmpsl
shll
adc
bound
ss
or
sahf
repnz
push
cmp
loope
cmp
cmp
rcrl
xchg
inc
mov
add
sti
xorb
das
pusha
es
xor
xor
movsb
jb
enter
adc
test
cmc
push
push
xchg
push
lret
and
int3
or
aad
lret
stos
jo
cmpsl
xlat
sub
mov
adc
adc
add
mov
dec
fistps
jecxz
insl
lret
test
sahf
movsl
shl
in
push
sub
or
xchg
dec
loopne
movsb
gs
cmp
test
push
inc
mov
cs
outsb
cmc
adc
mov
rclb
or
or
ror
lds
lret
and
sbb
inc
leave
xchg
xorb
jae
xchg
and
cmp
dec
and
jne
lea
fidivrs
rcrb
mov
pop
inc
mov
ffreep
loopne
dec
repnz
adc
or
and
enter
cmp
js
xchg
outsb
inc
dec
xchg
mov
cmp
xor
fisubs
es
xchg
jns
outsl
sahf
fs
sbb
mov
sbb
add
mov
and
sub
adc
cmp
roll
fsubl
or
cmpl
sti
in
mov
sub
xor
fwait
dec
dec
jp
cmp
sub
outsl
into
xor
scas
sub
adc
jmp
sub
mov
fistpll
sbb
push
out
repnz
sbb
dec
mov
and
mov
call
rclb
test
outsb
xchg
pop
stc
xchg
cwtl
mov
stos
pop
mov
sbb
pop
nop
inc
ja
jecxz
adc
adc
or
xchg
pop
in
push
mov
mov
xor
xor
jecxz
out
repnz
mov
stc
dec
xchg
fwait
adc
test
mov
test
mov
roll
clc
xchg
push
pop
pushf
mov
imul
pop
mov
popa
ds
fidivrl
push
paddusb
fidivs
addr16
rcrl
sbb
bound
mov
mov
adc
mov
movsl
loope
sti
insl
adc
mov
lea
xchg
es
sti
mov
insl
inc
jmp
jg
loopne
adc
cmpsb
add
adc
and
outsb
push
cwtl
popa
int3
dec
mov
push
pop
push
xorl
mov
add
jae
xchg
inc
add
sbb
fwait
cli
inc
dec
mov
cmpsl
imul
sbb
adc
xchg
push
mov
jp
repnz
das
sbb
inc
rolb
inc
xchg
adcb
mov
and
push
out
dec
call
adc
inc
insl
dec
daa
mov
rcrb
and
push
imul
push
out
outsb
mov
loopne
xchg
enter
lret
cli
and
mov
mov
xor
or
or
movl
or
sub
icebp
ret
mov
mov
jb
pop
nop
pushf
nop
xor
stos
jno
sub
mov
cmp
test
lds
pop
loopne
aaa
push
push
sar
scas
push
inc
push
in
ret
jb
ljmp
fdivrl
mov
jne
cmp
cmc
sbb
mov
xor
sub
lods
xchg
mov
add
cwtl
ss
dec
xorb
jae
stc
mov
gs
iret
or
cmp
or
das
cmpsl
mov
lock
pop
aam
mov
lock
push
jb
mov
and
push
cmp
sub
int
test
les
test
add
mov
pop
int3
je
add
sbb
add
sar
pop
and
add
pop
out
sarl
push
pushf
xor
call
add
out
adcb
xchg
faddl
or
loop
ret
addr16
in
xchg
jb
mov
int3
mov
jmp
aas
fsubl
push
pop
xchg
shr
clc
stc
popa
out
mov
test
jno
rcll
movsl
cli
inc
repnz
movsl
into
jmp
test
lods
adc
cmp
mov
jp
pop
mov
int
int3
pop
jmp
adc
fsubrp
outsb
dec
jae
rol
inc
add
or
mov
cmpsl
inc
push
inc
in
insl
cwtl
lods
out
pop
mov
je
sbb
pusha
cli
dec
mov
pop
inc
cmp
lock
pop
imul
leave
aad
xor
in
lcall
adc
ret
cmp
mov
cmpsl
ficoml
and
andl
pop
fdivs
adc
push
xchg
inc
hlt
or
and
fldt
pop
mov
aad
jo
sbb
add
mov
sbb
dec
adc
push
cmpsb
fimuls
fsubp
pop
or
push
aam
jb
gs
xor
pusha
add
leave
and
idivb
sub
jbe
xchg
movsb
push
add
push
dec
pop
sbb
or
push
cs
xor
popa
xchg
enter
xchg
lret
xchg
mov
push
jne
lcall
xchg
aaa
pushf
ja
jnp
dec
mov
push
shrl
call
je
nop
dec
ret
xor
test
mov
or
pushf
add
pop
jle
subb
pop
add
int3
and
mov
sahf
sbb
ljmp
push
mov
arpl
push
and
inc
sahf
xchg
jno
jae
push
jp
mov
in
or
inc
jmp
enter
mov
xchg
roll
mov
pop
push
mov
sub
jmp
push
xchg
popa
data16
iret
mov
in
insl
sbbl
das
shll
imul
jmp
int3
xchg
sub
push
dec
sahf
mov
xchg
test
dec
and
pop
test
jecxz
ss
dec
cmp
aaa
push
test
xchg
xchg
xchg
push
imul
mov
notb
cmp
dec
dec
jecxz
ret
jp
push
in
sbb
dec
mov
sbb
push
cmp
out
in
sbb
mov
lock
es
mov
mov
mov
cld
and
xor
lret
pusha
mov
add
popa
mov
xchg
icebp
aad
enter
ljmp
imul
lcall
sbbb
push
add
addr16
mov
or
es
repnz
pop
or
dec
fdivr
ds
adc
movsl
popa
loopne
jge
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
