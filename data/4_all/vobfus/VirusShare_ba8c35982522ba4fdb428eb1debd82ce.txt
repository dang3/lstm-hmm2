mov
jmp
mov
inc
inc
inc
hlt
inc
fadd
inc
inc
inc
inc
rcrb
inc
pushf
add
or
inc
inc
cmp
dec
inc
inc
inc
inc
and
and
inc
inc
inc
sarb
inc
inc
pusha
cmp
call
nop
adc
inc
inc
inc
js
xchg
in
inc
inc
inc
inc
lock
or
inc
inc
inc
inc
push
mov
inc
inc
mov
inc
adcb
inc
inc
inc
sub
sbb
fsub
adc
out
fildll
loopne
add
add
add
xor
jg
cmp
pushl
mov
testb
stos
fstsw
fdivrs
leave
add
data16
in
inc
mov
mov
movl
nop
lock
mov
xor
and
int3
pop
les
jbe
test
sbb
pop
add
mov
fnstsw
push
dec
mov
popf
push
push
xchg
les
dec
mov
or
sti
pop
and
nop
mov
add
cmpsb
call
or
mov
cmp
repnz
adc
pop
xlat
std
and
movsb
aas
add
jne
je
js
orb
sbb
or
int3
mov
in
movsl
pop
in
dec
mov
mov
adc
push
inc
xor
in
ss
or
fcmovnu
sahf
in
adc
clc
xor
jae
add
or
mov
pop
xlat
add
addb
mov
mov
outsl
add
jae
add
nop
xchg
cmp
pop
pop
add
xlat
jne
jl
cmpsl
add
sub
mov
xchg
adc
xchg
adc
popa
ja
mov
sbb
adc
pusha
cmp
or
insb
cs
fsubrl
in
pop
decl
loop
add
sbb
or
mov
dec
les
fwait
test
or
es
lea
add
popf
insb
pusha
icebp
call
lock
lcall
sti
mov
pop
jne
jb
aas
adc
mov
jle
sbbb
pop
repz
in
pop
mov
mov
jne
xlat
sarl
cmp
xchg
adc
xchg
sbb
test
push
nop
leave
sahf
add
pop
mov
frstor
ja
adc
inc
test
add
pop
mov
testb
mov
insb
inc
adc
lock
cmpsl
cld
cmp
xchg
mov
pop
data16
add
sahf
mov
call
nop
leave
ficoms
ret
or
fldenv
insb
jo
or
mov
das
add
dec
js
lock
jae
push
mov
inc
xor
jmp
pop
or
das
jecxz
jnp
and
inc
sbb
or
testb
aas
femms
adc
fnstenv
ja
add
daa
pop
push
pop
sub
sahf
mov
pop
lahf
mov
dec
cmpb
push
das
ror
adc
xor
popf
mov
cmovo
sbb
add
fwait
cmpsb
imul
sub
shr
out
out
add
add
daa
add
mov
inc
add
dec
in
sub
cmp
cltd
test
sbb
push
pop
ss
pop
pushf
icebp
adc
cmp
test
pop
les
sbb
movsb
int
xchg
test
pop
xchg
mov
pop
pop
test
fiadds
xchg
psllq
jmp
xchg
call
mov
notl
mov
mov
and
add
xor
ljmp
lcall
mov
mov
fdivs
test
pop
insb
push
pushf
sbb
aam
insb
pop
push
pushl
add
fisubrs
xor
xchg
pop
sub
cmp
add
lret
in
jg
cld
pop
imul
push
jo
ljmp
push
xor
mov
xor
cs
inc
test
leave
cltd
in
sub
shlb
lds
or
notb
or
sub
leave
cmp
cltd
inc
es
movl
sbb
pop
outsb
or
pop
add
inc
mov
shll
enter
shll
add
pop
imul
jge
jle
xor
jb
js
jo
aam
jmp
int
in
in
hlt
jb
adc
in
push
ja
mov
mov
inc
jp
ja
dec
mov
int3
pop
out
and
xor
push
or
popa
pushf
int3
roll
sbb
or
xor
js
inc
sarl
jns
sbb
lahf
jmp
pop
push
add
mov
subl
pop
repnz
mov
or
sub
or
cmp
and
add
cltd
dec
loopne
xlat
add
jne
and
add
addr16
fcompl
ja
daa
pop
stc
pop
adc
and
sbb
in
pop
mov
pop
xor
and
mov
pop
push
les
fs
rcrb
and
je
fcomps
inc
push
cmp
xor
insb
and
push
je
enter
push
pushf
push
nop
xchg
orl
push
inc
dec
push
jb
cld
push
mov
push
cld
push
xor
and
mov
dec
push
hlt
dec
movsb
jo
pushf
sbb
xor
dec
test
cmp
enter
dec
mov
nop
inc
push
insb
sub
dec
and
and
dec
test
dec
cld
dec
fs
inc
dec
mov
and
sbbl
sbb
in
inc
mov
leave
inc
rolb
xor
inc
dec
push
in
mov
fs
inc
push
inc
jb
subl
lret
xchg
xchg
int
inc
and
orb
pop
outsb
xchg
and
and
xor
push
mov
insb
adc
inc
dec
mov
xlat
xor
sub
cld
jo
int
imul
and
insb
lcall
adc
xor
mov
mov
outsb
shll
xor
lcall
xor
js
insl
cmp
jae
call
lcall
adc
minps
cmp
int3
adc
lret
dec
cs
xlat
adc
add
inc
imul
outsb
or
cmp
xlat
je
repz
mov
pop
pop
repz
add
jne
xchg
daa
fsubl
pusha
bsf
insb
mov
xlat
jne
mov
in
add
jl
int
dec
xor
pop
jb
and
cmp
lret
cmp
andb
shll
pop
pop
or
je
xor
mov
xor
in
mov
cmp
addb
jne
lods
sub
adc
pop
enter
insl
roll
push
lea
decl
sbb
aam
out
mov
incl
into
pusha
lcall
std
xchg
insb
jl
fldt
push
lcall
sbb
dec
sub
idivb
jbe,pt
and
cmp
dec
add
outsb
dec
ret
fildl
or
fwait
stos
ret
fstpt
js
inc
mov
mov
clc
stos
insl
mov
mov
lods
or
jg
mov
scas
mov
inc
fdivl
pop
jae
mov
jecxz
jo
push
mov
mov
fldt
lcall
pop
insb
fwait
lods
fistpl
repz
and
hlt
popf
in
aam
adc
leave
cmpb
push
push
pop
pushf
mov
inc
push
mov
in
leave
pop
loopne
lods
and
pop
or
movsb
dec
pop
repnz
scas
mov
jns
js
dec
mov
or
mov
das
jns
dec
cld
xchg
jl
push
and
jns,pn
test
hlt
xchg
mov
dec
pop
jb
ret
mov
cmp
adc
xchg
aam
and
pop
add
mov
and
jbe
cwtl
lss
push
or
push
bound
add
dec
aaa
pusha
sub
xor
pop
fs
cmp
aas
sbb
inc
sarl
xchg
jle
movb
jmp
dec
pop
lock
popf
or
fists
popa
pop
fsubl
jae
dec
insb
add
bound
ljmp
fcmovnb
jge
imul
aad
nop
pop
fs
xchg
je
movsb
jbe
roll
mov
gs
add
gs
imulb
pushf
cwtl
pop
rolb
jo
xchg
stos
jmp
mov
clc
add
pop
mov
pop
jl
sbb
pushf
mov
jbe
mov
ret
xor
mov
cmpsl
imul
fmul
in
pop
cmp
dec
insb
filds
dec
jbe
in
into
lahf
loopne
dec
dec
imul
and
mov
testl
popf
shlb
pop
js
imul
pop
mov
mov
add
pushl
into
cmp
add
and
pop
mov
mov
pushf
sarl
adc
and
jg
test
incb
sub
pop
push
inc
or
lret
subb
pop
push
push
pop
or
xor
push
push
dec
subb
add
outsb
int
sti
inc
ljmp
mov
mov
int
lret
lods
imul
xor
lret
int
mov
pop
fcoml
xor
jae
daa
xor
test
sbb
mov
pop
sub
fnstcw
lock
jae
cld
mov
pop
fsubr
rcr
fsub
mov
xor
inc
aam
cmc
lret
insl
or
add
sub
mov
in
or
popf
fldt
cmpsl
mov
cwtl
push
sbb
xchg
loope
add
mov
mov
scas
arpl
mov
mov
repz
iret
call
dec
sti
sub
jg
xchg
insb
push
pop
jnp
dec
jae
cmpl
add
jmp
lcall
daa
cmp
imul
imul
dec
shll
push
addr16
shll
fcomip
mov
lcall
add
sub
dec
shll
xchg
cmpsl
ss
shll
iret
jecxz
or
pop
xor
outsl
cmpsb
imul
insb
lcall
dec
daa
pop
iret
xor
add
fnstenvs
sub
add
cmp
mov
xor
mov
ret
mov
dec
push
mov
xchg
mov
call
in
cwtl
sarb
leave
sub
pushf
lret
add
mov
in
test
cmp
cmpsl
or
scas
in
xchg
loopne
cwtl
xchg
add
xchg
test
mov
in
mov
adc
aas
ror
fnstenv
lds
cmpsl
xchg
cmp
mov
sub
in
fcomp
add
xchg
push
repnz
mov
and
dec
cmpsb
in
mov
fucomi
xchg
cmp
xlat
adc
jnp
in
sub
mov
fcmovnb
call
scas
pop
or
out
dec
pop
leave
mov
push
sbb
xor
mov
daa
push
flds
rclb
push
repnz
pop
pop
scas
fsubrs
xchg
lahf
inc
mov
and
lret
pop
leave
xor
mov
xor
add
jg
rcrl
xchg
mov
sahf
xchg
es
aaa
test
cmpxchg
add
cs
loopne
jno
inc
das
bound
cmp
jg
mov
xor
test
in
and
call
push
sub
push
outsb
mov
jl
jl
push
push
jl
or
mov
daa
lret
xor
xor
or
in
mov
inc
push
jge
push
fistps
pop
jb
stc
mov
mov
xchg
jmp
pop
dec
add
and
mov
inc
das
aam
pop
aaa
dec
arpl
aam
pusha
movaps
jl
lret
gs
rcll
mov
pop
rcrl
add
loopne
jne
xlat
mov
pop
rorb
inc
sbb
pop
sbb
adc
int
cmp
imul
xchg
xchg
add
xor
daa
out
pop
pushf
lahf
dec
xchg
pop
scas
pop
outsb
pop
sahf
jnp
pop
or
cld
js
int
lcall
fcomp
xchg
stc
sbb
pop
pop
xchg
or
decl
cwtl
imul
mov
dec
add
cwtl
xor
fucomip
rolb
or
pop
daa
mov
add
andl
sbb
test
orl
in
and
pop
jbe
cmp
sub
add
jbe
pop
add
cmp
xorl
daa
mov
add
and
add
enter
enter
jb
or
or
sbb
pop
dec
xor
shlb
mov
mov
or
daa
xorb
pop
fdivr
inc
add
in
orb
nop
or
iret
push
fyl2xp1
ja
dec
fs
inc
add
enter
add
and
pop
daa
call
push
les
inc
pop
cmpsb
imul
xor
inc
fwait
ret
xlat
cmp
cmp
cmp
cmp
xor
cmpsb
imul
cmpsb
imul
and
shll
dec
loopne
cli
adc
shll
jl
shll
sbb
lcall
sbbb
rcll
push
and
fmuls
cmp
xor
cmp
nop
cmp
je
lcall
add
adc
stc
dec
roll
imul
stc
inc
idivb
add
fs
inc
push
push
pop
js
mov
sub
inc
cmp
fs
outsl
dec
or
rorb
add
lahf
or
and
push
jl
sti
or
fs
lock
int3
stos
sbb
inc
aaa
sbb
sub
dec
add
popa
mov
mov
lock
xchg
push
orb
push
lret
nop
inc
add
pusha
add
sti
out
mov
testl
and
add
mov
adc
aaa
leave
adc
dec
add
sbb
cmp
dec
mov
or
sub
pop
sbb
xchg
movsl
dec
int3
or
mov
sub
jae
or
mov
mov
es
test
xchg
mov
adc
adc
mov
pop
lods
call
jns
pushf
fsubs
enter
sahf
fs
xchg
enter
xchg
cmp
popf
sar
lods
jns
and
js
test
mov
leave
inc
es
add
mov
dec
fdivs
xchg
adc
gs
daa
shrl
jns
xchg
adc
or
cwtl
imul
aam
add
gs
push
hlt
fnstcw
psllw
insb
push
cmpsb
sahf
das
dec
mov
dec
stos
sub
or
stc
xchg
mov
and
and
dec
mov
ret
sbb
jb
aaa
push
addl
adc
cmp
inc
mov
xchg
dec
jae
mov
push
mov
add
dec
sub
sahf
sbb
xor
jns
cmp
popl
cwtl
lock
or
inc
int3
sbb
mov
cmp
icebp
dec
pslld
pop
mov
movsb
icebp
xchg
add
pop
adc
adc
hlt
pop
xchg
icebp
or
jnp
pop
pop
adc
add
pop
nop
out
js
test
adc
cmp
repnz
xchg
add
add
xorl
inc
or
aam
mov
xor
cld
shll
sub
dec
push
nop
shll
ja
stc
xorb
dec
xor
add
fnstenv
hlt
add
cmpsb
cmp
nop
dec
adc
and
sahf
cmpsb
imul
fs
jnp
popf
jmp
mov
add
out
xchg
inc
outsl
jb
xor
inc
imul
aas
inc
push
outsl
arpl
je
insb
jne
add
fs
mov
inc
outsb
dec
dec
imul
je
outsl
outsb
jae
stc
pushl
inc
jne
push
push
push
inc
add
outsb
insb
outsl
popa
fs
imul
outsl
sbb
push
bound
jb
pop
cs
imul
pop
jge
das
xchg
sub
sub
dec
movsl
imul
or
pop
add
sbb
fwait
inc
add
dec
push
push
add
jnp
or
mov
add
adc
or
fucom
mov
or
ud2
inc
or
je
shll
pop
xor
xor
jge
adc
add
arpl
scas
data16
or
lods
imul
add
add
mov
pop
jle
sub
insl
cmp
mov
inc
incl
call
stc
ret
sbb
cld
int3
dec
sbbb
inc
aas
and
in
into
shl
xor
clc
outsb
sarb
into
add
cltd
cwtl
loope
mulb
adc
rcll
jb
pop
fistps
or
outsl
jne
fnstsw
mov
mov
mov
and
sbb
jae
ficomps
rorb
xor
push
push
push
pop
sbb
insb
mov
xor
push
pop
cmp
lcall
and
cs
push
outsb
cld
mov
mov
cmp
outsl
or
sub
icebp
lods
insl
cld
sub
sub
adc
push
fistpll
sbb
ja
fs
dec
mov
mov
dec
dec
pop
pop
xor
inc
inc
push
or
int3
add
aas
pusha
enter
fdivs
push
jae
push
lds
push
mov
mov
add
outsb
outsb
fnstcw
cmp
test
ljmp
ficoms
data16
pop
sbb
roll
jnp
mov
out
or
shlb
push
inc
rcll
insb
adc
rorb
sub
sub
dec
xchg
pusha
jbe
adc
cmp
pop
or
xor
gs
lods
or
fwait
int
sbb
jg
add
mov
push
sbb
enter
ja
jnp
xor
pop
pop
push
icebp
lock
aaa
push
jo
xor
inc
ds
adc
inc
pop
popa
jb
push
jmp
adc
inc
push
pop
pop
mov
dec
add
inc
icebp
gs
or
repz
dec
xlat
xor
add
dec
add
dec
shll
pop
pop
pusha
shll
je
dec
shll
mov
xchg
lods
and
rol
int3
fcoml
sbb
and
sub
jae
jl
clc
ljmp
dec
push
dec
lret
ret
test
xchg
cmp
cld
scas
cmp
or
lds
mov
or
and
add
push
add
adc
or
jnp
and
mov
or
add
dec
das
add
inc
out
test
imul
popa
mov
je
dec
outsl
jbe
dec
test
outsl
movsb
inc
mov
fsub
jl
in
les
sbb
cs
cmp
push
arpl
mov
in
or
aas
leave
test
inc
jb
add
cmp
dec
outsb
pop
inc
ja
xor
cs
outsb
push
jne
push
test
inc
push
pop
xchg
cld
add
in
xchg
dec
mov
popa
outsb
xor
pop
cmp
or
adc
leave
nop
pop
in
inc
jae
pop
push
push
je
jns
cmp
out
xchg
out
sbb
adc
repnz
add
inc
movhps
and
insb
insl
inc
and
and
sub
or
jl
repz
push
clc
js
and
jmp
je
test
push
das
rclb
inc
push
sub
shlb
inc
mov
dec
inc
dec
jle
cmova
inc
cmp
sbb
in
and
outsb
xor
push
inc
in
add
inc
dec
pop
push
cltd
in
arpl
xchg
push
and
sbb
rorb
bound
and
pop
imul
mov
leave
mov
dec
inc
and
cmp
ja
arpl
dec
imul
push
cmpsb
dec
addr16
rorl
in
xchg
sub
andps
addr16
dec
stos
je
sub
scas
in
dec
dec
jae
inc
leave
sbbl
jns
dec
jmp
daa
iret
xchg
sub
inc
inc
adc
dec
pop
jb
xchg
and
nop
add
push
pop
cwtl
sbb
adc
jmp
jne
dec
popa
dec
add
lret
mov
add
xchg
lods
mov
pop
inc
into
cs
jno
jae
in
dec
cmp
nop
xchg
pop
xor
dec
mov
das
xor
outsl
lret
inc
adc
ret
add
inc
add
and
call
sub
xchg
add
add
add
bswap
inc
pop
sub
jo
dec
push
inc
sbb
fdivrl
xchg
rclb
shll
and
call
out
insb
popa
ljmp
rcll
mov
sbb
leave
or
andb
pop
push
jns
fbld
pop
pop
ss
push
int
dec
xor
pop
xor
data16
jnp
push
mov
dec
sbb
stc
sub
repz
sub
or
adc
dec
shll
xor
inc
mov
xor
or
jl
jnp
stc
inc
enter
stc
test
nop
rorl
xchg
mov
cs
enter
sbb
push
mov
adc
jmp
or
nop
add
dec
inc
mov
push
cmp
add
xchg
aas
cwtl
cltd
in
or
add
mov
arpl
inc
push
repnz
fmuls
cli
xchg
and
ss
shl
bound
and
sub
mov
bound
aas
fs
cmp
insb
dec
dec
testb
lret
movsb
pop
jb
addl
mov
daa
mov
cmp
add
dec
mov
cwtl
jmp
mov
pop
popa
sub
pop
jb
dec
sub
fsubs
aas
push
or
and
fs
xchg
xorl
sbb
or
fsts
cmp
and
in
dec
cmp
jae
dec
pop
je
mov
dec
push
stc
fiadds
andb
in
mov
inc
dec
jle
test
xchg
push
adc
mov
xor
arpl
push
gs
and
pop
shl
fmull
loopne
pop
jb
hlt
dec
insb
pushf
cmp
mov
mov
sub
movsb
sub
subl
inc
insb
push
mov
jns
cmpl
add
mov
les
jo
cmp
mov
push
sbb
cld
arpl
mov
pusha
inc
daa
dec
xchg
mov
rorb
clc
stos
mov
xchg
fisttps
xor
and
cmp
push
mov
jmp
push
push
call
jbe
mov
dec
xor
loopne
inc
add
sbb
sbb
and
aaa
fwait
mov
cs
pushf
pop
push
gs
shlb
js
adc
sub
mov
rcll
or
fs
or
gs
push
jae
dec
lock
cmovae
adc
xchg
and
es
mov
or
adc
lds
xchg
dec
mov
addb
sub
mov
cmp
inc
loope
inc
fisttpl
js
add
aaa
add
shll
dec
and
inc
imul
mov
roll
add
pop
pop
enter
and
pop
dec
dec
adc
xor
adc
clc
fiaddl
lret
add
push
push
pop
sub
int
insl
sub
pop
xchg
add
cwtl
add
add
mov
repnz
and
sets
and
dec
or
mov
push
mov
or
repnz
add
loopne
mov
andb
inc
push
pop
jae
inc
push
cmp
sub
in
jge
mov
dec
dec
inc
inc
xor
fs
inc
into
inc
clc
add
and
inc
scas
in
push
dec
push
push
rcrl
mov
jl
mov
xchg
or
add
or
aam
sbb
or
dec
mov
xchg
dec
or
movsb
stc
outsb
dec
arpl
loopne
adc
repnz
add
add
adc
inc
jne
add
nop
mov
and
cmp
dec
sbb
dec
cmp
adc
xor
shlb
push
fs
lahf
mov
xor
push
out
inc
push
sbb
add
xor
and
sbb
or
mov
enter
popa
out
popf
ficompl
xor
sti
mov
test
imul
push
inc
arpl
jmp
jo
sub
mov
sub
inc
add
add
sub
dec
popa
mov
xchg
mov
pusha
and
pop
add
pushf
aaa
mov
enter
adc
popa
add
mov
sbb
daa
dec
stos
fs
inc
sti
dec
sti
sub
mov
gs
jo
sbb
sub
ss
leave
orl
push
add
inc
jb
inc
mov
inc
dec
pusha
nop
xchg
fisttps
pop
pop
jb
das
cmp
pop
adc
pop
jp
jne
jns
testb
sbb
leave
mov
pop
pop
fs
and
xchg
xchg
insb
pop
or
dec
and
and
jmp
fldl
xchg
inc
inc
xor
mov
ja
cmp
cmp
xchg
inc
sbb
lahf
inc
dec
push
fs
xorl
insb
nop
xchg
lock
ja
dec
mov
jle
adc
push
jb
and
mov
dec
sub
cmp
lock
pop
jb
dec
pop
jae
pushf
out
adc
icebp
repnz
rcpps
xlat
sub
jne
inc
test
xchg
sbb
and
das
and
inc
push
xor
fcom
push
aad
or
insl
lods
sbb
leave
rorl
mov
xchg
and
push
adc
xchg
sbb
and
mov
mov
and
sbb
lods
mov
push
xor
ss
lods
scas
add
in
dec
lods
mov
rol
push
add
shll
mov
and
cmovae
shr
addl
add
and
jno
and
jmp
mov
adc
push
sbb
out
or
dec
ljmp
jbe
jbe
lea
dec
cwtl
imul
sub
das
mov
sbbl
sbb
and
cld
aam
movsb
pop
jb
sbb
cmpsl
outsl
jg
fs
push
dec
inc
cmp
push
mov
sub
push
xor
pop
push
loopne
add
or
je
adc
inc
inc
mov
mov
inc
in
hlt
in
pop
xchg
mov
or
and
add
lock
popf
aas
pop
add
xor
and
or
iret
cmpsl
pop
gs
jns
mov
js
mov
jb
addr16
pop
pop
adc
xchg
nop
pop
mov
pop
inc
push
sbb
sbb
gs
mov
imul
les
sbb
dec
cmp
dec
mov
lods
dec
push
jns
jg
adc
call
xor
mov
inc
jp
jbe
cmp
inc
push
leave
orl
dec
inc
jb
mov
lret
jl
or
decl
jg
pop
sbb
test
pop
insb
popa
cmpsb
pop
xchg
mov
sbb
and
call
inc
dec
mov
adc
xorl
jae
bound
xor
push
adc
out
add
inc
or
fbstp
sub
popf
or
xchg
adc
push
or
rcrl
insb
emms
decl
mov
rclb
stos
cmc
das
ud0
mov
push
push
pop
movsl
je
cmp
das
pop
arpl
add
xchg
leave
sub
popa
add
das
adc
xor
mov
popa
addr16
jecxz
adc
cmpsl
fwait
dec
jb
sahf
ret
inc
cld
dec
cld
adc
xchg
jmp
inc
inc
leave
orl
sti
inc
jb
stos
xor
rclb
inc
pop
add
push
decl
fsubs
mov
inc
sbb
les
jmp
fstps
orb
sub
pusha
call
imul
xor
push
xchg
jne
and
mov
pop
push
jae
out
and
inc
mov
lds
dec
imul
fisubrs
sbb
scas
sbb
add
jne
and
outsb
add
test
fistl
gs
xor
jo
sti
bound
jb
je
and
int
data16
imul
fsub
or
pop
xchg
in
jnp
dec
outsl
xor
mov
insb
lret
xor
arpl
add
outsb
mov
inc
or
add
xor
dec
adc
or
das
sbb
push
adc
adc
rcrl
jo
mov
jnp
xchg
mov
insl
dec
mov
or
or
or
xlat
dec
lock
jno
gs
mov
xchg
lea
es
pop
insb
in
add
outsl
roll
lcall
push
push
bound
xor
jo
dec
pop
rcrb
push
pop
and
and
adc
lods
or
inc
sbb
daa
cmpl
mov
xchg
mov
daa
out
lock
xlat
add
sbb
mov
mov
sahf
movsb
jmp
jns
jo
mov
jle
nop
jne
inc
daa
jae
adc
adc
aaa
jns
outsb
mov
ss
pop
popa
gs
xchg
lcall
gs
stc
push
in
sub
imulb
adc
sbb
and
jecxz
xor
icebp
push
daa
xchg
insw
ja
dec
orb
movsb
jnp
mov
cwtl
rolb
sbb
cmp
and
arpl
jae
xor
leave
es
ret
inc
mov
xor
iret
push
mov
or
fadds
inc
pop
popa
xchg
and
dec
or
ud0
ret
fmulp
add
das
inc
jno
jnp
jl
jae
bound
lahf
pop
pop
mov
ret
sbb
cmp
gs
je
subl
cmp
mov
insb
dec
imul
pop
arpl
fwait
mov
das
push
mov
sbb
ret
popf
push
xor
jge
in
sub
sub
dec
pushl
sub
add
ja
add
adc
add
mov
xchg
into
cmp
add
lret
adc
xor
ret
jae
das
pusha
inc
lret
mov
js
push
aaa
sub
cmc
mov
insb
mov
cmpsb
xchg
imul
mov
inc
aas
pop
cmp
arpl
mov
push
mov
sti
je
jmp
adcl
and
push
add
es
pop
adc
dec
leave
jecxz
mov
loopne
dec
mov
inc
or
xor
jb
dec
mov
adc
mov
push
add
or
aas
ret
sbb
mov
imul
and
mov
cmp
subl
call
repnz
cs
mov
pop
push
repz
mov
pop
xchg
adcl
cmp
cmpsl
dec
mov
and
and
test
dec
jecxz
ja
das
adc
dec
lcall
push
sub
mov
outsl
popf
push
add
dec
nop
xchg
push
sub
shll
in
out
dec
or
fs
inc
jne
cs
dec
sbb
jne
sub
arpl
xchg
dec
mov
test
inc
mov
gs
jns
sub
push
test
sbb
push
call
adc
add
rcll
jge
rep
std
adc
sbb
dec
popf
xchg
add
cwtl
mov
ds
add
rcll
or
dec
cmp
rorl
sub
imul
add
stc
arpl
jae
pop
das
and
es
data16
push
lret
leave
inc
sbb
push
shll
rol
dec
stc
fwait
mov
xlat
sub
xchg
int
test
jmp
das
dec
dec
fwait
push
mov
lock
jp
jmp
fs
jmp
inc
and
jl
push
xchg
imul
sub
sub
sbb
sub
dec
and
add
in
xchg
and
inc
xor
jne
movsl
cmp
add
jge
imul
out
test
leave
mov
push
scas
push
mov
push
xchg
sub
int3
cmp
jmp
push
cmp
inc
mov
ja
or
adc
icebp
fs
dec
push
mov
faddp
xchg
add
add
cmp
pop
test
jp
and
aaa
dec
aaa
fimuls
sub
push
js
nop
or
popf
fldt
sbb
mov
out
fnstcw
or
mov
sbbl
xchg
mov
sub
popa
arpl
faddl
jb
sub
and
pop
mov
add
icebp
and
lods
movsb
cwtl
movsb
sub
test
insb
and
cmp
fbstp
inc
inc
dec
lock
xor
test
sbbl
out
and
xchg
add
xchg
das
fnstenv
push
dec
sub
fadds
pcmpgtw
pop
mov
les
mov
or
sti
mov
arpl
sbb
popa
mov
add
dec
sbb
hlt
xor
mov
pop
and
adc
test
fildll
in
push
insb
lahf
movsb
and
test
inc
or
xlat
roll
je
out
out
insl
sub
pusha
shrb
shll
pop
adc
addr16
das
mov
mov
xchg
ja
imul
jae
dec
daa
mov
stos
xorl
lea
ja
mov
cmp
inc
push
and
jecxz
dec
loope
mov
mov
sub
sub
mov
add
or
fsubs
xor
xor
sub
cmp
sub
addb
cs
or
pop
pusha
add
xchg
and
and
addl
popa
ds
lcall
mov
dec
pop
or
imul
mov
push
push
dec
jb
dec
cmc
push
dec
sbb
dec
fsincos
xchg
dec
data16
or
push
sbb
sub
ret
outsl
sub
cmc
push
or
subb
xor
and
leave
push
jecxz
je
movsb
push
adc
jb
imul
adcb
insl
cmp
movsl
jno
popf
push
xlat
mov
sbbb
stc
addr16
mov
push
pop
inc
add
inc
jns
shll
push
repz
push
add
sub
xor
inc
jns
xor
ret
pop
fnstenvs
inc
jnp
lods
jmp
jns
insl
pusha
dec
and
cmp
inc
cmp
mov
lock
push
xchg
movsl
inc
push
das
xchg
inc
sub
jmp
repnz
mov
sub
in
enter
das
aad
xchg
sub
mov
pop
stc
adc
scas
dec
or
jmp
inc
adc
and
inc
pop
int
push
inc
insl
jno
xor
lods
es
in
jnp
pop
push
sub
or
or
dec
lea
stos
add
rclb
mov
pop
or
addl
xchg
inc
push
popa
sti
xchg
sbb
push
cmp
mov
mov
jb
or
pop
jb
mov
mov
mov
cmpsl
dec
jne
mov
xor
ret
es
in
xchg
and
or
jne
xor
inc
ret
jg
pop
push
sub
mov
jge
jecxz
test
inc
call
dec
shll
addl
sub
mov
and
inc
pop
inc
jns
add
fsubs
rorb
fstpl
and
nop
jns
dec
aaa
rorl
cmp
or
fisttpl
xor
loope
xchg
scas
daa
jb
or
testl
cmp
mov
aaa
add
xor
or
out
sbbl
inc
inc
xchg
inc
or
sub
js
iret
jge
jnp
cmp
or
lods
jmp
xor
add
daa
insb
dec
into
fdivl
outsl
mov
jg
stos
inc
add
shlb
imul
xor
and
add
fwait
sbb
xor
inc
xchg
je
jnp
add
filds
fcmovne
int3
xor
popa
js
xor
xor
pop
mov
inc
imul
nop
xor
ss
jnp
sbb
or
sbbb
xor
and
rcrb
inc
inc
cmp
jne
xor
ja
xor
jnp
das
cmp
or
xlat
cmpsb
lods
fwait
dec
inc
sbb
jns
sbb
cmp
ss
aas
mov
fabs
pop
add
das
xor
pop
pop
cmp
arpl
fs
inc
xor
adc
inc
mov
insb
mov
je
lret
cmp
enter
jae
add
pop
sbb
sub
xor
jno
pop
or
popa
xchg
rorb
dec
leave
add
add
and
inc
inc
orl
inc
dec
dec
dec
or
enter
push
or
inc
sbb
lds
adc
mov
test
into
and
add
and
push
jae
add
dec
add
insb
xor
pop
pop
andl
je
dec
loopne
pop
pop
das
pop
cs
or
arpl
pop
dec
icebp
icebp
pop
dec
ljmp
mov
jnp
inc
flds
dec
mov
adc
sbb
inc
push
inc
dec
and
dec
add
add
or
mov
add
and
and
daa
mov
and
shlb
lock
imul
jl
add
les
dec
add
mov
add
testl
jne
movsb
add
iret
add
inc
and
repz
pop
lret
es
add
add
in
xor
fsubrs
push
shll
and
or
cmp
dec
call
addb
push
pop
scas
xchg
adc
dec
repnz
inc
fadds
xor
lret
xchg
ror
es
pop
push
lret
es
lsl
pop
fnstenv
pop
aas
pop
add
adc
daa
mov
fs
or
sbbl
sbb
mov
pop
add
popa
sub
pop
sub
int
int3
lahf
das
and
pusha
fnsave
pop
cmp
inc
push
dec
aaa
pusha
int
js
pop
pcmpgtb
xor
loopne
lock
clc
mov
mov
hlt
jl
cmp
dec
cs
push
add
or
js
nop
ficompl
loop
mov
adc
jae
mov
es
push
das
scas
scas
outsl
test
pop
les
cmpsl
lea
gs
lahf
xchg
sub
add
add
lods
ret
push
adc
and
xor
test
or
mov
leave
lcall
fwait
mov
dec
sub
push
insb
add
popl
insb
mov
pop
jns
xchg
cmp
add
add
cwtl
and
mov
xorb
movsb
mov
xchg
data16
sti
or
add
fmull
dec
and
aam
xchg
inc
mov
enter
mov
in
lret
mov
insl
adc
cltd
lods
popa
and
push
popl
dec
and
imul
add
jno
adc
and
add
push
repz
and
pop
pusha
pop
scas
xor
pop
pop
sbb
mov
mov
imul
es
xchg
xor
xlat
cld
pop
xchg
es
cmp
lods
movsb
cltd
or
dec
push
cmp
inc
or
dec
xor
sbb
push
inc
inc
fsubl
cmp
aaa
add
movsb
sbb
xlat
pop
mov
or
lcall
cmp
testl
pop
movl
xchg
jne
insb
in
mov
add
xchg
xor
or
sbb
pusha
dec
int3
sbb
ret
inc
packssdw
cwtl
mov
and
and
je
popa
and
cmp
add
sti
add
or
pop
sub
daa
mov
fadds
sbb
aaa
call
or
xchg
int
cmp
daa
add
insl
aas
push
xor
adc
sub
pop
and
xchg
push
sub
and
and
fs
and
and
dec
orl
je
inc
or
sti
pushf
pop
leave
push
ret
mov
push
cmp
adc
or
add
or
push
adc
and
add
in
cmp
or
jbe
test
xor
decl
pop
jmp
inc
pusha
cmp
dec
imul
ja
hlt
pushl
incl
sarb
adc
xor
xor
cmc
push
or
mov
les
call
sbb
adc
or
pop
imull
fwait
and
cmpb
dec
cmpsl
inc
rcll
hlt
stc
sbb
pop
mov
add
and
in
jo
sub
sti
mov
inc
add
xchg
mov
fsubrp
xchg
subb
cmpsl
sbb
stos
ficompl
jno
movb
repnz
ljmp
add
outsb
dec
orl
pop
jecxz
jmp
ds
xor
das
or
jecxz
or
mov
or
adc
add
add
add
je
dec
aad
xchg
add
mov
mov
lods
stc
ss
pop
or
mov
cmc
arpl
pop
jp
pop
sbb
adc
add
add
jg
rcl
sbb
inc
insb
idiv
or
cmc
shrl
pusha
mov
sti
jnp
xchg
pop
add
sti
push
nop
add
sub
movl
jne
cmpsl
xchg
or
push
add
mov
cmp
sbb
out
lods
pop
popa
je
and
add
add
adc
inc
js
daa
xor
sbb
adc
dec
push
inc
dec
add
and
pusha
push
add
xchg
leave
and
pop
fisttpll
xor
cmp
or
dec
gs
or
mov
and
fildl
sbb
mov
and
lcall
fadds
add
pop
cmp
xor
jle
add
adc
mov
lcall
out
xor
mov
cmc
adc
sbb
adc
lea
sub
rclb
and
add
mov
scas
dec
scas
adc
push
faddl
add
sbb
cs
popf
sub
pop
inc
jno
sub
shlb
xchg
fs
pop
xor
out
xchg
daa
pop
decl
ss
xor
std
lods
jmp
push
call
jg
lods
hlt
add
or
out
dec
jl
stos
sti
out
ret
int3
sbb
xchg
xor
pop
aas
mov
xchg
add
pop
sbb
imul
sub
rcll
rolb
xor
orl
and
dec
xchg
or
mov
fnsave
fs
pusha
ja
enter
pusha
xor
es
sbb
test
es
adc
inc
mov
add
xchg
or
insl
in
dec
sub
fs
cs
sbbb
pop
ja
adc
and
lods
mov
mov
dec
push
scas
icebp
insl
jmp
je
adc
add
jo
pop
mov
xor
outsl
scas
in
outsl
bound
shrb
sbb
addr16
or
jmp
add
adc
mov
mov
or
jne
mov
pushf
cmp
add
and
push
push
test
std
jb
insb
pop
bound
loopne
jmp
fldt
or
std
daa
int
int3
std
xor
out
or
inc
out
in
xlat
loopne
jp
and
pop
std
xchg
lock
subl
xor
repz
add
loope
into
add
inc
and
adc
test
inc
adc
jnp
jnp
add
testl
insb
das
xorl
fs
jmp
mov
mov
mov
call
filds
shrl
xchg
das
or
arpl
and
imul
jge
das
or
or
loopne
sbb
or
ss
push
dec
inc
jg
sbb
hlt
sbb
push
aas
add
scas
unpckhps
test
popa
add
push
sub
add
idivb
les
imul
popa
popl
xchg
mov
dec
das
sub
sbb
jge
popa
ret
sti
xor
inc
inc
pop
mov
xchg
cmp
add
and
roll
mov
repz
dec
cmp
mov
ret
je
fs
add
mov
cltd
call
xchg
sti
shlb
mov
int3
pop
xor
dec
int
cltd
mov
adc
lea
sbb
fwait
scas
fnstenv
or
add
rolb
push
nop
xchg
and
sub
out
or
out
clc
outsb
nop
jo
std
repz
add
popf
jp
sbb
xor
xchg
inc
bound
add
lods
fisubs
inc
out
add
out
insb
in
insb
mov
andb
call
jno
dec
xchg
rcll
dec
ljmp
inc
js
and
in
xor
sbb
add
dec
xor
adc
inc
sbb
jbe
imul
pop
jae
insb
or
pop
sbb
adc
out
add
jne
mov
xor
sbb
add
sbb
push
xor
inc
addr16
or
pusha
mov
test
dec
ja
sbb
nop
or
mov
sub
ficompl
xor
test
inc
push
sub
or
xor
pop
push
inc
mov
push
and
jno
subb
pop
or
mov
dec
add
add
dec
addl
sub
sub
lods
push
adcl
push
cmp
mov
inc
push
xchg
add
mov
dec
inc
int3
sbb
or
ret
or
or
adc
push
mov
cmp
jo
add
dec
xchg
or
inc
and
es
mov
int3
adc
pop
dec
fisttps
and
add
pop
or
mov
mov
push
addl
repz
jo
add
out
stos
imul
sbb
cmp
sbb
adc
or
push
adc
inc
jae
outsl
cmc
sbb
pusha
mov
mov
int
fs
pop
pop
fs
mov
lcall
pop
pop
pop
lea
and
sbb
inc
and
xchg
or
nop/reserved
mov
insb
pop
imul
fcompl
jge
pop
sti
mov
add
add
push
sub
or
pop
imul
add
inc
and
dec
sbb
fs
xchg
inc
jbe
rcll
std
insb
sbb
and
sahf
mov
mov
sbb
bound
mov
sbb
rcrl
add
lods
mov
mov
sub
sub
pop
inc
dec
or
sub
out
pusha
and
das
lea
and
xlat
push
or
xlat
xor
lret
sub
xor
fwait
adc
and
dec
lods
aas
add
mov
cltd
dec
rorb
fildll
insb
imul
cmp
stc
inc
mov
pop
ret
cmp
insb
xchg
xor
xchg
movlps
xchg
outsb
xchg
xor
lods
in
sbb
xchg
pop
outsl
jns
pusha
fs
out
pop
jo
test
add
adc
popa
and
mov
and
cmp
sbb
jns
add
pop
inc
add
lret
stos
pop
pop
jo
cli
cmp
sub
and
insb
or
cld
cld
pusha
out
insl
sbb
jnp
add
std
outsl
adc
pop
jb
adc
dec
xor
push
sbb
xchg
dec
mov
add
add
push
dec
and
sbb
cmp
or
push
and
and
xlat
and
lcall
sbb
push
mov
insb
sub
or
lcall
dec
insl
inc
dec
dec
push
imul
dec
insb
in
jg
dec
cld
push
sbb
sub
and
cwtl
shlb
dec
jbe
jg
and
xor
sbb
adc
je
roll
sbb
call
push
nop
add
inc
das
mov
or
enter
add
fistpl
inc
mov
orb
add
dec
or
dec
xchg
rcll
cltd
and
aam
enter
or
push
and
adc
test
or
xor
mov
push
add
mov
xor
push
js
dec
or
shlb
ja
imul
jo
or
fldenv
pusha
lcall
jae
fsubs
aam
das
dec
xorb
cli
inc
rclb
jg
adcl
push
sbb
or
paddusw
or
or
adc
sub
jl
cmp
es
dec
or
js
cmpb
cmpb
mov
incl
or
mov
or
je
std
hlt
push
in
cmp
mov
inc
jo
in
cmp
xlat
lea
mov
mov
into
test
push
xchg
in
add
mov
sbb
adc
mov
hlt
mov
push
add
popa
lret
pop
clc
outsb
sbb
and
adc
fsubs
push
and
adc
ret
sub
push
enter
lock
inc
push
mov
repz
dec
dec
sub
xor
mov
cmc
dec
dec
dec
mov
aam
cltd
xor
lock
insb
push
jmp
imul
add
scas
call
fisubl
push
aam
add
adcl
je
push
movsb
xor
fwait
popa
cwtl
cmpsb
or
rorl
leave
and
icebp
rcrb
divb
add
aas
loopne
or
sbb
cmp
sub
lea
pop
pop
push
fs
or
jecxz
and
fildl
cmp
adc
jb
and
or
and
hlt
repz
sub
push
int3
jns
imul
jmp
and
iret
lock
jnp
fildll
push
jnp
icebp
fdivrs
scas
inc
add
mov
xor
imul
xchg
sbb
sbb
ret
in
fs
sbb
dec
or
out
mov
jge
or
lcall
and
and
add
mov
lea
push
mov
mov
fbld
xchg
daa
lock
daa
adc
cmp
cmpsl
push
xchg
mov
xor
or
aas
dec
xor
or
in
out
sbb
or
pop
imul
cmp
jae
cltd
push
and
adc
aam
mov
sbbb
andl
xlat
rorb
add
pop
mov
dec
es
add
sets
push
lods
sbb
cwtl
ret
inc
fildl
jb
stc
xchg
cmp
xor
and
jmp
xor
js
hlt
add
jnp
ret
das
pop
cmp
sub
adc
sbb
loopne
fwait
push
cmp
xlat
mov
mov
je
nop
xlat
fistl
or
sti
dec
mov
mov
pop
cmp
mov
and
ss
movsl
cmp
ds
add
jecxz
push
add
nop
pop
mov
sub
sub
call
insl
rcl
and
mov
ss
or
push
insb
pop
add
add
xor
or
sbb
add
cmp
imul
push
clc
fs
sub
xchg
es
cmp
movsb
out
add
or
push
xchg
sti
ret
int
adc
adc
sarl
mov
movsb
adc
or
mov
adc
mov
mov
lcall
mov
pop
adc
xor
push
or
je
mov
inc
or
pusha
add
js
js
mov
test
and
pusha
xor
int3
cld
rcrl
dec
pop
std
and
pop
ret
mov
push
dec
push
push
repz
ljmp
mov
and
mov
add
dec
pop
xchg
or
stos
lods
jae
xor
pop
mov
lds
push
jno
insb
sbb
and
mov
xchg
daa
and
xor
add
add
cld
mov
or
sub
ret
sbb
and
divps
dec
mov
and
push
and
lods
mov
sub
jb
and
add
incl
xorb
add
ljmp
and
inc
dec
ret
and
dec
addb
and
pushf
imul
xchg
imul
push
lods
inc
fisttps
mov
inc
mov
hlt
repnz
xor
mov
pusha
leave
lock
mov
sub
add
std
push
repz
fidivrs
adc
fs
test
sbb
push
js
add
rclb
adc
adc
and
lcall
adc
imul
mov
cwtl
out
les
out
in
or
lret
repnz
sub
pop
decl
jb
call
lods
mov
sub
cmp
push
push
into
or
fs
aas
xchg
add
pop
loopne
dec
push
jecxz
cmpsb
cltd
mov
call
es
jae
xor
lret
aas
ds
xchg
push
inc
and
adc
sub
outsb
mov
xor
cmpsl
or
hlt
or
jp
sti
out
mov
pusha
insb
inc
sbb
in
dec
rcrl
aas
dec
ret
out
add
popl
cmpb
add
and
mov
lds
sbb
add
fs
incl
icebp
dec
pop
cmp
mov
push
sub
lret
fdivl
and
sub
push
xchg
inc
jae
inc
enter
sbb
adc
dec
cltd
insb
sub
inc
daa
push
rorb
xorl
add
mov
iret
xchg
arpl
rcrb
test
inc
ret
dec
sub
lret
inc
outsl
dec
push
mov
pop
push
cmp
or
es
jne
pushaw
out
add
shll
dec
test
clc
inc
sub
test
mov
nop
or
and
xor
mov
sbb
pop
adc
add
xchg
rol
pushf
iret
mov
add
rolb
inc
dec
ret
inc
sub
icebp
call
mov
and
dec
imul
inc
in
ds
push
fldenv
repnz
mov
fistpll
or
popf
mov
insb
sbb
cmp
adc
mov
insb
cmp
push
aaa
loope
add
mov
inc
pop
mov
popa
aam
and
inc
or
cmp
push
pop
aaa
mov
cmc
or
push
lock
insb
leave
sbb
sbb
sub
in
sub
aaa
imul
out
ret
lods
dec
mov
je
and
mov
inc
cmp
xor
lcall
cmovp
pusha
add
pop
sub
add
mov
shrb
cltd
mov
or
inc
sub
xchg
cmp
adc
adc
adc
fwait
sbb
and
shll
or
adc
xchg
pop
jb
adc
adc
xor
repz
dec
adc
adc
sub
in
fsts
cmpsl
push
jnp
mov
adc
movsl
xlat
mov
push
jo
jo
and
sbb
mov
cltd
test
clc
cld
daa
sbb
repnz
or
inc
adc
inc
arpl
imul
ja
repnz
mov
add
adc
add
pop
jp
xchg
cmp
sbb
sub
sbbl
or
sub
mov
add
pop
xorl
js
movswl
mov
cld
pop
icebp
int3
sbb
mov
lret
mov
adc
jb
cmc
and
inc
inc
add
fsub
adc
push
pop
adc
push
pop
xlat
rclb
dec
test
out
lahf
add
sbb
or
and
mov
je
jo
es
mov
insb
cs
dec
fs
sbb
rorb
push
enter
movsb
xor
pop
xor
cmp
cmp
add
pop
cmc
add
add
add
in
mov
add
jns
mov
or
lahf
add
cmp
push
dec
daa
push
testb
dec
in
js
xor
sbb
sbb
aaa
hlt
sbb
mov
inc
dec
call
inc
inc
inc
sbb
pop
jae
sbb
or
jae
fldl
pop
shrb
push
add
js
jbe
cmp
sti
xor
xor
sbb
lods
add
inc
fmuls
aaa
inc
es
sahf
xor
jo
sbb
add
add
xchg
or
push
xchg
cwtl
pushf
add
push
idivb
jge
fidivs
mov
add
mov
jno
sub
dec
cmp
xor
mov
or
sub
xchg
popl
push
outsl
adc
xor
js
inc
inc
mov
mov
cmp
mov
fiaddl
cmp
sahf
xlat
ret
inc
or
or
dec
ret
pop
enter
pop
cmp
push
test
add
jmp
jl
call
inc
sbb
inc
or
test
jle
sub
and
push
enter
adc
jg
lods
push
daa
sbb
mov
pop
sub
or
sub
and
sbb
sub
nop
mov
paddq
movsb
das
mov
fincstp
or
hlt
or
or
sub
sbb
adc
adc
shll
into
inc
add
insb
add
xor
sbb
or
scas
add
sub
sbb
mov
pop
js
int3
add
adc
mov
movups
dec
dec
mov
adc
rorl
fdivl
mov
cwtl
push
add
shlb
lret
mov
jbe
push
addl
xor
gs
sbb
and
dec
leave
and
mov
xlat
push
mov
xor
pop
andb
xchg
pop
dec
mov
movl
push
push
insb
mov
pop
repnz
lock
fcmovnb
sbb
or
sbb
dec
test
xor
daa
sbb
aam
cs
sbb
fs
js
push
sbb
inc
scas
add
cmp
std
push
sbb
adc
stos
xor
xor
xor
sub
enter
mov
sti
xchg
xor
cmp
inc
and
add
and
xor
sub
pop
in
or
dec
fcompl
sbbl
cmc
push
aam
out
popa
cmp
subb
test
adc
and
pop
and
xor
loopne
add
xchg
inc
shll
or
mov
nop
adcl
iret
push
into
and
sbb
lock
and
adc
inc
mov
out
xor
testb
scas
in
pop
and
mov
jbe
jmp
xor
xchg
adcb
adc
push
mov
hlt
jmp
or
mov
push
js
cmp
xchg
clc
enter
or
sbb
jmp
adc
cmp
loop
fucomip
mov
add
add
pop
ret
push
dec
shlb
fistl
arpl
lcall
inc
mov
mov
adcl
test
sahf
add
es
ss
mov
ljmp
in
fwait
les
adc
cmp
jmp
push
pop
push
pop
or
or
mov
add
xorl
aas
insl
js
mov
loopne
nop
in
mov
sbb
pop
inc
sahf
lods
imul
adc
cmp
daa
mov
cmp
pushl
or
and
or
mov
add
lods
cmp
aam
push
sahf
mov
or
cmp
xor
xchg
dec
rcrl
movaps
add
cmp
and
jne
push
push
js
pusha
xorb
sub
and
in
mov
adc
imul
sub
enter
xchg
mov
adc
sbb
es
add
int
sub
subb
in
sbb
xor
xorl
fists
leave
and
call
imul
xchg
jno
in
dec
xchg
lret
pop
dec
jno
add
stos
add
xchg
add
push
jo
pop
sub
jge
mov
das
adc
cmp
ret
in
insb
add
or
push
xor
and
loopne
mov
mov
mov
addr16
dec
adc
test
lock
pushl
adc
sbb
push
lret
popa
daa
rcll
inc
lret
xchg
or
cli
pusha
jnp
sbb
add
bound
mov
inc
cmp
movsb
mov
test
in
daa
add
loope
or
rolb
sub
xor
inc
enter
mov
sahf
add
sbb
lret
sbb
dec
movsl
inc
dec
adc
mov
lcall
add
jo
outsl
clc
mov
insb
shl
insb
add
movsb
call
lret
into
lea
mov
scas
pop
rorb
mov
pop
xlat
xor
int3
add
daa
sub
je
xlat
pop
mov
adc
add
pusha
mov
aam
pop
dec
mov
pop
je
inc
add
sub
xor
sbb
dec
fsubs
and
push
push
outsb
nop
lea
rolb
loop
sub
mov
pop
pop
fs
inc
mov
lret
pop
pusha
cmp
lret
repnz
dec
decl
cmp
sbb
bound
cmp
cmc
mov
mov
jae
je
ja
std
imul
insb
les
inc
dec
outsb
out
push
addr16
les
test
loopne
push
cmp
add
xor
cmp
add
dec
adc
xor
sbb
add
fucomp
xchg
add
mov
add
inc
out
sub
or
adc
pop
inc
jno
pusha
adc
push
push
or
inc
fildl
sub
shll
outsb
add
xlat
int3
rep
inc
push
sbb
xchg
sub
adc
ret
adc
push
or
adc
sbbb
or
push
inc
dec
mov
pusha
iret
rcrl
sbb
cmp
lret
mov
mov
pop
xchg
in
xor
and
mov
outsl
or
inc
inc
daa
aas
add
dec
or
ret
and
arpl
lds
push
filds
and
fnstenv
add
rorb
push
dec
cmp
cwtl
push
and
lds
and
push
lret
jnp
add
subb
mov
push
push
push
xor
daa
inc
les
push
cmc
out
pop
mov
inc
inc
xor
pusha
pop
or
pusha
adc
popf
or
daa
bound
add
je
dec
jne
bound
add
cmpsl
or
jb
jo
or
dec
jae
outsl
sub
jb
add
arpl
dec
gs
pop
or
pop
or
outsb
inc
js
add
xor
insb
popa
jns
mov
test
jle
jl
inc
push
push
cmovl
push
add
mov
fs
xor
in
pusha
mov
dec
mov
rorb
push
dec
cmp
stc
fbstp
pop
ja
popa
jb
insl
insb
outsb
addr16
push
add
fistpl
sub
pop
add
inc
push
jb
rolb
dec
inc
adc
cwtl
push
dec
xchg
add
bound
adc
add
js
dec
and
mov
sub
imul
adc
adc
sub
sbb
inc
aaa
xor
adcl
mov
loopne
lret
adc
dec
mov
test
and
pop
pop
jbe
sub
add
dec
movsl
push
xor
pop
push
cmp
jnp
jne
popa
out
addl
int3
dec
sbb
out
loopne
jnp
sub
test
dec
add
jo
and
loop
cltd
add
cmpsl
loopne
pop
or
cmp
call
mov
pop
xor
cmp
sbb
mov
or
es
push
es
push
loope
pop
movsb
jo
mov
pop
or
xchg
jb
iret
push
or
dec
lods
push
mov
mov
sub
sub
dec
add
popa
ss
inc
xor
cmp
xlat
outsb
mov
pop
pop
sub
cs
pusha
fistl
add
and
xchg
inc
or
mov
or
sbb
imul
sbb
mov
sub
pop
add
xchg
xor
xor
add
subb
cmp
loop
addb
es
sub
dec
ret
sbb
push
mov
push
xor
enter
insl
or
and
xchg
add
arpl
jns
test
cmp
cmpb
inc
imul
xchg
je
decb
hlt
hlt
sbb
adcb
pop
cmp
stos
jne
push
xchg
add
cmp
add
mov
sub
pop
push
or
xchg
in
mov
test
adc
sub
out
and
or
call
add
enter
or
push
cmp
cmp
loopne
add
xchg
add
fs
or
aaa
push
imul
das
aam
adc
loopne
shlb
cmp
clc
cmp
xor
push
popa
cmp
sub
sub
je
fs
sub
repnz
add
pop
pusha
pop
rep
add
mov
sub
mov
push
pop
mov
push
aad
fistpl
add
out
pop
and
repnz
icebp
nop
daa
es
jmp
add
or
mov
lret
pusha
inc
jne
insl
xchg
out
push
xor
push
sarl
les
push
sub
mov
jg
or
or
pusha
cmp
xor
inc
cmp
stos
mov
clzero
in
pop
stc
cmpsl
jno
outsb
shlb
mov
je
xor
push
roll
sub
dec
jno
test
popa
cltd
mov
pop
cmc
mov
cmp
loop
push
rol
cltd
push
in
or
cmp
in
mov
cmp
xor
xor
and
out
cmpsb
test
dec
sub
xor
lea
xor
and
out
and
inc
or
cmc
pause
nop
sub
sbb
sub
and
std
cmp
push
pop
jmp
pop
dec
enter
sbb
or
add
add
imulb
dec
push
or
cmp
sbb
xchg
cmp
dec
daa
sub
lret
cmp
sub
orb
fs
xor
push
sub
add
add
and
mov
xor
add
xor
push
iret
inc
xor
dec
xor
test
lods
add
or
xor
dec
or
lods
fbstp
sub
sbb
sub
sub
repnz
xchg
sub
jmp
mov
movsl
movsl
movsl
inc
sarb
xlat
dec
sub
or
cmp
pop
jae
sub
xorb
push
cmp
and
and
shrl
arpl
out
add
dec
jo
jns
pushf
insl
add
inc
push
hlt
es
fisttpl
pop
xchg
add
arpl
jno
lock
out
cld
nop
sti
cld
andb
lcall
inc
lsl
fs
add
jo
dec
cmp
outsb
and
lock
imul
or
add
xor
fldt
add
lock
xchg
jmp
push
es
adc
sbb
pop
xchg
jae
or
adc
pop
mov
fs
es
je
add
sbb
das
nop
adc
nop
dec
jo
jo
daa
jno
xchg
shrb
mov
aaa
loope
cwtl
cmp
xchg
or
jo
insb
pop
sbb
inc
push
enter
jle
cmp
outsb
and
push
imul
inc
pushf
mov
std
daa
pop
add
jmp
pop
cs
add
or
lahf
shll
sti
jne
xchg
ret
pop
fistps
insb
sbb
jo
gs
add
mov
inc
filds
xor
dec
insb
filds
stos
xlat
mov
testb
xor
insl
xor
nop
inc
pop
ds
fimuls
inc
pop
sbb
adc
out
jo
or
rorl
pop
push
in
pop
dec
add
sub
push
adc
ret
push
loopne
add
pop
adc
pop
in
xchg
cmp
dec
inc
adc
rclb
stos
push
pop
sbb
mov
imul
gs
mulb
and
xchg
mov
push
ds
pop
jae
jne
inc
mov
insb
nop
inc
mov
jbe
add
jnp
jo
mov
jb
pop
sbb
sbb
mov
cmp
outsl
js,pt
subl
dec
push
jo
push
xorb
scas
fwait
mov
lods
inc
out
adc
pop
icebp
inc
por
add
pop
add
pop
and
or
jae
sbb
sub
orl
imul
add
mov
add
cmc
add
xor
xchg
faddl
nop
mov
ss
lock
lcall
xchg
sub
and
mov
pop
mov
or
lods
or
dec
int
add
xchg
mov
xchg
xor
outsl
dec
sbb
push
incb
xchg
cmp
inc
fiaddl
cltd
nop
gs
inc
inc
sub
pop
roll
xchg
push
dec
pop
push
mov
push
cmp
in
incl
push
sub
xor
or
mov
sub
sbb
xlat
mov
bound
popa
ret
push
xchg
fistpl
dec
stos
dec
repz
xlat
add
add
inc
add
adcb
dec
outsl
jmp
dec
mov
cmp
add
mov
dec
push
cltd
adc
inc
sbb
xor
adc
testb
ficomps
xchg
fcmovbe
xor
negb
sub
sti
clc
int
add
sbb
add
push
sbb
insb
sbb
inc
lods
sbb
add
and
push
mov
add
pop
dec
mov
mov
imul
mov
adc
dec
mov
loopne
sbb
stos
and
addb
adc
lods
xchg
idivb
xor
push
xlat
sbb
add
shrb
jns
les
jo
fsubs
xor
movsl
add
inc
xorb
or
inc
lret
imul
ret
sub
push
push
and
or
sub
in
dec
xlat
pop
nop
adc
sub
mov
addb
ss
int3
mov
mov
test
dec
nop
popa
in
loope
dec
xchg
pop
cs
jl
xor
add
adc
xchg
aam
xchg
pusha
or
nop
pop
aas
pusha
sub
add
mov
and
sbbb
sub
adcl
xor
fwait
pop
adc
sbbl
jp
xchg
and
xor
iret
push
orl
push
arpl
adc
mov
insl
pop
push
ja
adc
add
popa
daa
int3
dec
xchg
add
push
add
pop
rorb
fadds
fs
nop
add
add
or
pop
nop
or
roll
loope
mov
test
ja
or
orl
jb
or
or
leave
fs
dec
sbb
sub
sub
dec
ss
adc
cmp
fstps
aad
sub
and
fs
inc
or
xor
pop
xor
out
inc
pusha
add
inc
xor
mov
test
add
dec
xchg
and
add
mov
jo
mov
or
inc
dec
sub
push
sub
push
lcall
notb
push
cmp
xchg
xor
jo
adc
pop
shrb
ret
dec
movsl
in
add
push
pop
dec
insb
cmc
add
cs
inc
std
jge
mov
add
or
jbe
loop
xchg
jl
shl
jb
ja
and
int3
and
lods
decb
scas
mov
or
sbb
das
sub
or
push
add
sub
pop
mov
pop
cmp
sbb
jne
sbb
decb
xor
test
cmpsl
pop
push
fsubrs
push
cmp
sbb
lods
fimull
sub
add
jb
mov
cmc
inc
loopne
or
mov
add
add
int
add
ljmp
fnstenv
insb
insb
or
movsb
xor
cltd
xchg
xor
adcb
fdivrs
xchg
xchg
ljmp
fwait
push
dec
out
jl
add
add
sub
add
or
mov
mov
js
outsb
test
push
pop
cmp
pop
dec
aad
scas
decb
fs
dec
or
es
and
pop
movsb
pop
inc
ret
dec
xor
jbe
out
or
sti
xchg
sbb
xor
mov
add
or
or
pop
jecxz
xchg
lods
mov
adc
int
sub
inc
adc
push
pushf
mov
dec
mov
sub
or
push
fcomp
stc
call
pop
in
imul
bound
xor
adc
daa
mov
jbe
xchg
rorl
sbb
out
es
cmc
hlt
sub
adc
xchg
scas
push
imul
or
stc
shlb
or
pop
adc
nop
or
mov
sbb
mov
sbb
pop
test
and
scas
mov
or
xor
push
insl
push
in
or
inc
sbb
insb
jo
jp
enter
adc
inc
rcl
cmp
cwtl
pop
jns
imul
daa
pusha
daa
add
jmp
imul
sahf
sub
fsubrl
jne
aaa
ss
sbb
pop
lcall
pusha
sbb
dec
lcall
pop
pop
movsb
sbb
mov
jmp
mov
dec
sub
inc
mov
jbe
cmp
push
sbb
lcall
dec
xchg
and
mov
add
popf
dec
add
xchg
inc
enter
push
push
sbb
and
push
inc
jae
jecxz
inc
stos
cmp
xor
xchg
adc
push
rdmsr
dec
rorl
push
sbbb
das
mov
das
adc
mov
adc
xlat
add
dec
rcll
push
pop
dec
mov
adc
sbb
add
fdivs
xlat
fs
pop
or
and
subl
pop
jb
mov
inc
sbb
je
cmp
scas
or
mov
or
pusha
sbb
inc
int
mov
pop
pusha
xor
or
sub
dec
push
xor
repz
mov
imul
sbb
add
xchg
add
or
add
subb
or
pop
mull
or
gs
sub
sbb
sbb
cmp
push
jne
adc
stos
pop
push
ljmp
sbb
lar
js
lcall
and
jae
push
add
mov
bound
or
pop
inc
sub
add
xor
ljmp
dec
mov
add
cmp
cmpsb
and
xor
inc
push
mov
roll
pop
lea
cmpsl
mov
pop
xchg
sub
adc
cltd
mov
add
sbb
popa
mov
loopne
sub
in
sub
call
add
sbb
jnp
xchg
jl
lcall
push
sahf
add
testl
enter
imul
add
add
inc
mov
lods
stos
cmp
or
add
and
add
mov
jecxz
or
push
mov
sub
imul
test
adc
or
mov
pusha
mov
cmp
cmp
ret
stc
push
push
enter
sbb
rcl
adc
push
and
inc
popa
in
inc
cs
pop
daa
sub
sbb
ljmp
add
add
sbb
add
add
popa
and
in
add
add
add
push
add
adc
adc
lds
rcrl
mov
and
bound
aad
in
sub
jae
pop
aad
adc
adc
sub
es
notb
mov
pop
jns
push
cmpsb
sub
out
sub
repz
and
ljmp
in
mov
mov
inc
jne
sbb
mov
sub
movsl
xor
out
or
insb
xor
mov
ret
and
or
xor
enter
push
cld
loopne
cld
adc
lret
push
insb
stc
clc
popf
fnstenv
int
arpl
sbb
xor
push
cmp
lock
xchg
xchg
leave
adcb
in
inc
sahf
dec
dec
dec
dec
pop
cmc
dec
cs
xor
sbb
mov
push
shl
xchg
mov
adc
mov
xor
inc
inc
fildl
adc
imull
xchg
sub
dec
enter
stos
or
add
push
arpl
or
insl
jne
fbstp
and
cmp
sbb
add
dec
add
iret
add
adc
inc
cmpsl
cmpb
sbb
or
lods
dec
adc
rolb
in
xchg
push
out
gs
sub
and
push
and
pop
js
jp
inc
imul
add
call
in
pop
jo
ds
enter
mov
orb
add
ret
dec
bound
cmp
cmp
xor
mov
fs
inc
cmp
and
and
sub
and
mov
daa
xor
fwait
pop
pop
sbbl
sub
dec
add
inc
push
sub
ret
adc
mov
je
dec
sbb
push
popa
or
inc
adc
repnz
sub
push
enter
pusha
xchg
mov
pop
dec
mov
sbb
sbb
add
sub
or
cmpl
sbb
mov
xchg
les
pop
xchg
xchg
inc
xchg
xor
insb
add
xchg
xchg
in
push
les
inc
add
pop
les
lock
incb
ficomps
inc
dec
fs
and
jle
incl
insb
or
mov
les
ret
add
add
lcall
sub
fs
out
or
or
addr16
push
cmp
mov
decl
xor
in
push
ret
dec
mov
call
push
push
rorb
mov
mov
inc
pusha
add
inc
std
and
inc
add
rorl
push
push
xor
add
mov
cmp
shll
mov
xchg
add
aad
pop
lret
dec
mov
adc
dec
jb
push
lds
arpl
and
pusha
mov
sbb
and
or
push
push
xor
aaa
cwtl
or
ret
ret
sbb
lock
pop
push
push
pop
enter
push
push
mov
test
push
insb
inc
jne
insl
adc
idivb
popa
scas
push
lods
add
and
stos
rolb
add
addb
daa
lods
mov
dec
fistps
and
dec
ss
add
mov
add
sahf
aas
pop
insl
inc
sbb
dec
scas
inc
add
or
and
adc
and
or
add
mov
sbb
es
mov
sub
or
xchg
mov
jle
adc
mov
insb
mov
leave
add
mov
insl
lods
pop
insb
xor
mov
insb
sbb
int3
mov
jae
into
and
cmp
push
xchg
lret
sbb
xchg
or
inc
push
ret
inc
and
jae
popa
and
out
push
and
or
sbb
jns
je
mov
add
or
hlt
pop
jmp
sti
out
pushl
push
inc
push
push
hlt
xor
cmp
pushf
rcrb
sahf
push
xchg
add
decb
add
inc
add
inc
add
cmp
jb
and
add
add
addb
pushf
and
cmp
or
fs
or
adc
add
js
inc
or
or
jg
pop
fchs
sub
mov
jb
xor
cmp
add
add
adc
cmc
and
xor
lret
fs
orb
sbb
and
and
xor
pusha
les
or
hlt
lods
pop
add
lcall
sub
stos
fidivl
jle
xchg
nop
lea
push
jmp
aad
or
or
lods
mov
sub
mov
add
sub
daa
sbb
adcl
fisttpll
ret
pop
push
les
and
inc
aad
fs
mov
jo
ffree
mov
imul
mov
or
insb
sbb
add
jb
push
or
je
sbb
div
xor
arpl
or
jno
xor
rorb
or
inc
nop
and
add
sub
dec
mov
inc
and
cmp
push
sti
xor
and
packssdw
add
pop
std
jo
sub
mov
pushf
adc
loopne
sub
data16
hlt
lcall
xor
add
insb
cs
mov
xor
push
in
or
or
xor
sbb
xor
insb
lods
or
lods
inc
movsl
mov
negb
adc
mov
xor
sub
mov
push
mov
and
aam
adc
add
mov
mov
incl
or
cmp
add
inc
add
roll
xor
sub
mov
push
or
sub
mov
adc
sub
ss
inc
add
in
es
push
fldcw
adc
xor
movsb
jns
adc
cmp
and
jp
xor
jp
sbbb
and
pop
stos
or
mov
rorl
xor
xor
jo
in
or
adc
loopne
jno
les
add
or
mov
hlt
in
std
mov
sub
aas
or
mov
cs
dec
sbb
out
inc
sbb
cwtl
dec
or
gs
cmp
in
es
subl
and
mov
loope
dec
or
mov
or
fiaddl
or
loope
or
bnd
test
pusha
mov
add
pop
sbb
fmull
push
adc
pop
dec
dec
inc
inc
mov
sbb
pop
adc
repnz
mov
insl
mov
add
push
cmp
test
testl
lahf
mov
les
mov
sbb
repnz
aas
add
fimuls
cwtl
xchg
or
fdivr
push
sbb
nop
or
insb
inc
and
push
and
das
and
or
adc
inc
inc
incl
mov
xor
fwait
bound
lock
aam
lret
xor
adc
mov
int
mov
pusha
sbb
int3
lock
andl
xor
xor
je
cld
pusha
mov
push
add
and
imull
insb
pop
ret
push
andb
xchg
dec
sbbb
cmp
cltd
pop
enter
movsl
repz
push
pop
mov
repz
push
or
sub
mov
sub
repz
jns
adc
pop
repz
xchg
pop
dec
dec
movsb
incb
dec
fs
mov
gs
lods
jae
xchg
dec
repz
fiadds
fldenv
fdivrs
data16
xlat
out
fs
sti
add
xor
mov
rclb
jmp
fmuls
add
aaa
sbb
daa
inc
inc
or
pop
mov
sub
stos
xchg
nop
ret
icebp
negb
mov
dec
fs
cmc
mov
sub
mov
inc
dec
cwtl
mov
add
leave
pusha
or
inc
jp
int
fwait
inc
and
adc
push
mov
push
push
fdivp
inc
cmp
cmp
add
push
or
cltd
insb
cltd
or
sbb
push
fs
fs
add
add
fildl
or
mov
mov
push
addr16
or
stos
mov
jg
and
adc
and
xor
jb
pop
jb
push
push
pop
jb
pop
push
or
rolb
and
int3
add
gs
loopne
sub
insb
inc
dec
fcoml
fildl
rolb
sbbl
fcmovnb
sbb
mov
addr16
mov
adc
int
mov
das
lahf
xchg
mov
jae
pop
push
inc
imul
xor
mov
fildl
add
or
add
adc
sub
xchg
inc
push
mov
out
pop
je
aaa
sbb
or
or
shll
add
mov
inc
pop
fadds
aam
int3
cltd
cmpsb
imul
stos
mov
and
andl
rorb
sbb
add
testb
cwtl
and
adc
mov
mov
and
daa
xchg
pushf
xchg
xor
xor
mov
cmp
cmp
sahf
xor
stos
sbb
cld
iret
add
sbbl
inc
sub
xor
and
and
int
push
daa
lods
dec
inc
xor
and
jne
mov
ficompl
sbb
roll
lret
leave
unpcklps
or
sbb
adc
insb
cwtl
adc
add
andl
lods
cmp
and
rolb
movsb
pop
xchg
out
mov
pop
sar
inc
pop
sbb
int
push
add
call
incb
pop
nop
jo
pop
cmp
nop
sar
outsb
dec
cmp
push
pop
in
xor
push
push
dec
pushl
sub
jmp
popa
mov
push
mov
popf
add
dec
push
lret
dec
add
and
inc
or
and
dec
lret
pop
lahf
push
insl
and
add
dec
sub
add
in
inc
icebp
push
in
pop
push
mov
and
add
add
mov
or
leave
add
ljmp
mov
popa
leave
adc
mov
dec
shlb
mov
or
lds
and
shl
push
lods
push
add
jmp
fwait
nop
add
dec
stos
ss
cli
scas
sbb
mov
icebp
pop
xchg
hlt
rolb
push
pop
mov
mov
decl
sub
inc
mov
add
jbe
xor
and
sub
cmp
xor
andb
add
call
cmp
call
ss
or
push
leave
xor
xor
push
sub
leave
xor
xor
or
leave
xor
xor
sub
sbb
inc
pop
xor
xor
or
leave
jbe
add
or
mov
adc
imul
pushf
xchg
xchg
rcrb
mov
mov
and
xchg
test
nop
add
inc
jge
jns
inc
pushf
adc
in
and
add
add
add
nop
xchg
add
sub
sbb
and
sbb
mov
sbb
inc
popa
sahf
adc
sbb
push
mov
adc
xor
push
fs
xchg
xchg
add
pop
nopl
adc
push
sbb
add
inc
scas
adc
ret
adc
sbb
push
fcoms
inc
in
push
xor
and
repnz
sbb
adc
sbb
lret
enter
sbb
xor
dec
inc
sbb
and
mov
push
sbb
imul
subb
sbbb
xchg
push
add
pop
inc
enter
mov
and
aam
dec
jmp
and
and
adc
adc
nop
gs
sub
sbb
xchg
add
cmp
nop
gs
dec
jl
push
sbb
cmp
sub
pop
inc
cmpsb
sub
lret
jae
xchg
mov
sub
insl
daa
in
or
repnz
sub
das
sti
repnz
lsl
xor
and
jns
enter
cmp
insl
mov
pop
insb
daa
dec
xor
pop
inc
es
xor
push
sub
or
pop
add
popf
push
adc
sub
cwtl
pushf
add
inc
xor
sahf
inc
sbb
stos
or
or
ror
xor
jbe
sahf
or
adc
xor
sti
pop
lock
stc
mov
xor
push
rolb
mov
add
xor
inc
jae
lret
sub
decb
mov
add
cmp
mov
test
push
pop
and
sbb
addb
inc
cmp
or
fcompl
push
int
sbb
adc
xor
movsb
jnp
inc
add
or
push
and
test
stc
mov
jno
ljmp
add
add
fs
inc
add
sbb
leave
add
add
push
mov
decb
or
push
icebp
mov
mov
mov
enter
inc
pushf
pushf
ret
inc
push
int3
cmp
out
dec
adc
addr16
inc
cwtl
cwtl
pop
ret
ljmp
or
jecxz
and
insb
in
push
xor
add
pop
int3
frstor
subl
enter
add
inc
sahf
jg
push
rcrb
movnti
lock
add
test
arpl
cs
push
ret
cwtl
enter
inc
xchg
jge
jl
test
cmpsl
shl
insl
or
sub
or
in
add
xlat
dec
in
shl
sub
jle
lahf
aas
sahf
add
adc
xchg
dec
fs
cmp
cmp
pop
or
cli
insl
xor
mov
orl
xchg
adc
or
in
lcall
in
sub
sbb
mov
push
repz
push
sbb
inc
sub
loop
push
ja
mov
fs
adc
sbb
repnz
pusha
sbb
mov
or
sub
dec
sbb
add
sub
lds
lret
xchg
sbb
loope
sti
xor
lret
popa
flds
push
dec
lsl
insb
pop
dec
addb
test
sbb
mov
pushl
imul
or
fwait
sub
or
dec
je
cmp
add
stos
or
movsb
add
loopne
add
loop
inc
sub
aam
fcompl
push
mov
inc
and
lods
and
fs
push
fs
push
dec
push
fs
push
add
fs
push
sub
pop
pop
sbb
xor
imul
orb
sbb
je
xor
orl
sbb
sub
sub
and
add
jbe
pop
sbb
sbb
movsb
adcl
fs
push
push
dec
fildl
sbb
dec
aam
and
jbe
mov
adc
xor
adc
pop
xor
xor
add
and
xor
inc
add
add
mov
push
or
mov
lods
pop
dec
dec
inc
dec
es
push
add
dec
pushf
push
inc
cmp
push
test
dec
sbbb
mov
pop
cwtl
adc
adc
aaa
movl
inc
add
add
dec
loop
and
cmpsl
xor
or
add
xor
imul
test
addr16
or
push
inc
adc
inc
adc
and
push
sbb
test
scas
sbb
jno
add
lods
pusha
add
out
stos
icebp
imul
test
loopne
add
push
add
mov
or
cmp
loop
es
in
adc
jno
sub
adc
outsl
adc
mov
lods
nop
xor
test
xorl
mov
nop
add
or
pop
add
nop
icebp
dec
jo
inc
lds
fdivrs
push
adc
push
mov
adc
inc
mov
inc
add
xchg
or
inc
cld
lock
dec
add
into
xchg
cmp
xor
jb
dec
pop
or
pop
xor
xchg
pop
fmull
mov
mov
cmp
add
mov
nopl
jo
mov
test
sbb
inc
inc
movb
add
lods
add
leave
sbbl
inc
jae
test
dec
dec
and
daa
and
ret
xor
and
add
jns
sti
xchg
dec
pusha
and
movsb
addr16
or
adc
int3
sbb
or
pop
adc
fadds
adc
scas
sub
ja
sub
add
add
sbb
movsb
jle
aaa
das
scas
push
add
mov
or
and
mov
loopne
mov
ds
sub
sbb
adc
cmp
and
jno
lcall
or
and
addb
mov
lds
and
adc
test
and
shlb
ret
outsl
push
add
add
and
add
in
push
pop
add
outsb
leave
push
jno
sub
dec
repnz
add
cld
push
hlt
inc
cmp
fisttps
sbb
xchg
cld
insb
add
jo
inc
pop
jnp
xor
xchg
xchg
outsl
add
add
mov
xchg
xchg
xchg
add
or
xchg
sub
sbb
or
xor
iret
or
or
adc
ja
fcoml
nop
sar
add
shrl
add
sti
cmp
shlb
adc
or
inc
enter
pop
sub
mov
enter
xorl
mov
std
out
cmc
les
add
push
movhlps
and
mov
pop
xchg
or
mov
xor
jecxz
stos
pushf
cld
or
push
out
or
rclb
jb
test
jnp
fists
add
xor
pop
add
adc
add
out
sub
push
cs
or
jle
add
cs
pop
add
lock
xor
imul
sub
in
das
adc
jle
enter
sbb
push
sti
push
add
add
sub
loope
xlat
dec
inc
nopl
mov
add
out
sti
xor
adc
mov
cmp
adc
es
out
hlt
sub
inc
lcall
add
sti
and
or
popw
cwtl
test
or
scas
int
jle
and
pop
repnz
add
aam
adc
in
imul
push
and
push
dec
xor
das
push
inc
mov
negl
and
xchg
lcall
sbb
dec
leave
adc
scas
iret
cmp
daa
lock
cmp
fsubrs
and
sbb
pop
jecxz
clc
add
add
or
test
xchg
dec
push
imul
repnz
dec
int
jg
jg
test
mov
sub
xor
xor
push
mov
call
jnp
inc
push
sub
adc
inc
sahf
pop
repnz
lcall
nop
xchg
in
inc
and
cmp
sar
cmp
pushf
inc
je
imul
ret
ret
add
sbb
iret
icebp
rorl
and
es
push
pop
push
lock
in
add
pop
or
xchg
sub
sbb
mov
arpl
in
dec
sub
lret
sbb
inc
inc
add
add
adc
mov
std
inc
add
add
add
or
lods
push
sub
fdivs
mov
pusha
mov
lods
jnp
inc
inc
jle
push
fistps
xchg
xchg
and
mov
add
cmovge
xchg
dec
jbe
adc
or
add
pop
add
out
xchg
sub
inc
icebp
cmp
ja
cmp
out
daa
pop
add
sbb
decb
adc
leave
mov
or
in
ficoml
cmp
mov
adc
lret
subl
add
xchg
add
popa
mov
dec
or
popa
aam
dec
or
outsb
cmp
adc
jb
dec
pushf
in
sub
pop
pop
xchg
xchg
shll
and
mov
sbb
and
add
xor
adc
xchg
je
dec
add
sti
mov
addr16
xor
or
shll
and
aaa
adc
mov
add
loope
and
xchg
push
lahf
mov
pushf
add
je
in
mov
sbb
adc
mov
lret
test
mov
loop
lcall
mov
fs
dec
pusha
mov
call
add
mov
dec
fdivs
leave
pusha
insb
pop
mov
cld
mov
sbb
mov
imul
pop
andl
mull
das
pusha
pushfw
adc
addl
addl
imul
adc
lds
popf
iret
nopl
push
sbb
pop
shll
lret
cwtl
adcl
cmp
dec
dec
lcall
lcall
sbb
mov
fsts
enter
or
or
jo
cwtl
sbb
xor
lret
data16
lret
sub
pop
lock
in
or
or
ss
add
add
or
decb
sbb
or
push
mov
notl
xor
cli
inc
cld
imul
xchg
or
pop
dec
cltd
cmp
jo
mov
fs
jo
in
jne
insb
arpl
fs
sbb
lods
mov
inc
add
cmp
ja
jmp
gs
sub
and
xor
add
out
push
gs
mov
movsb
gs
jno
cmpsb
xor
push
arpl
inc
or
and
aas
in
and
sbb
iret
cmc
or
cmp
insb
movl
js
lret
sub
cmp
rol
mov
or
inc
shrl
daa
cli
mov
push
inc
sti
or
es
es
es
jo
pop
es
es
adc
push
es
pop
es
es
push
pop
sbb
pop
es
inc
push
mov
notb
aas
fwait
dec
add
dec
mov
inc
sbb
and
orl
and
xor
xor
lret
and
sub
sub
and
and
and
and
mov
enter
leave
xor
jb
push
adc
mov
or
in
inc
es
fdivrl
xchg
insb
add
clc
or
hlt
xchg
sub
sub
lock
xchg
sub
sub
call
xchg
sub
loopne
fcoml
fdivrs
aam
pop
jbe
shlb
pop
sub
sub
enter
sbb
sar
cmp
jno
push
sub
xchg
push
cmpsl
xor
ljmp
pop
cmp
in
adc
test
addr16
xor
add
sbb
and
adc
xchg
pop
inc
js
insb
pop
shrb
pop
dec
aas
add
pop
xorl
sub
push
mov
sbb
fwait
pop
sbb
pushf
std
outsb
push
xor
divb
pusha
pop
inc
add
pop
mov
or
push
dec
xor
add
add
enter
cmpl
sbb
andl
enter
inc
shlb
andb
cmp
sbb
sbb
push
sbb
add
aad
inc
and
test
cs
sub
or
push
lahf
in
lcall
sbb
es
loop
out
test
and
pop
pop
push
cwtl
sub
fildl
push
sub
and
mov
filds
push
lds
sub
rorb
cmc
fs
dec
sbb
jle
push
decl
sbb
adc
or
insb
das
and
adc
or
pop
push
incl
sub
cmp
and
addr16
outsb
xchg
push
sbb
daa
jbe
or
cmp
cmp
add
sbb
movsb
jnp
jno
inc
dec
cs
or
sub
add
nop
pop
leave
adc
pop
test
dec
dec
insb
xchg
xchg
and
jbe
mov
js
fs
push
jo
jge
dec
insb
and
or
arpl
inc
xchg
rcrb
dec
cs
lds
in
adc
add
pop
or
or
add
fiaddl
adc
and
dec
pop
comiss
cmp
sbb
push
insb
je
add
out
in
sbb
adc
pop
addl
mov
mov
xchg
mov
dec
push
add
and
into
pop
dec
push
add
sub
mov
decb
jl
push
pushf
lock
in
call
stc
in
and
lods
call
sbb
add
fs
add
mov
mov
and
call
pop
stos
or
inc
cltd
insl
xor
add
xchg
or
push
adc
sub
sub
jo
aas
xor
adc
xor
shll
sub
sbb
outsb
mov
add
push
or
inc
repnz
add
push
dec
adc
sbb
sbb
mov
sub
mov
cmp
sub
or
lret
or
xor
jbe
imul
jae
shll
cmp
cltd
rclb
lret
mov
xchg
push
das
lods
adc
pop
repz
and
outsb
pop
push
xor
pop
push
fmul
mov
int
fisubl
jmp
pop
add
xchg
mov
imul
std
xor
lcall
xor
es
pop
jge
inc
jno
cli
in
rcrl
jle
sbb
xor
andl
mov
clc
and
or
mov
add
in
or
nop
cld
jns
add
cltd
aam
daa
xor
fstpt
pop
scas
cmp
add
sub
fwait
aam
sbb
leave
in
xor
cmp
loopne
clc
jbe
sahf
loop
sbb
add
sbb
push
nop
pushf
inc
and
sbb
cwtl
or
adc
out
jmp
loopne
xchg
add
popa
mov
dec
xor
fwait
add
push
inc
gs
leave
adc
aam
sub
in
add
add
add
fwait
and
movsb
or
mov
xchg
pop
cs
cs
mov
out
cmp
call
xchg
shrl
bound
xor
sbbl
and
mov
addr16
orl
add
or
push
cmp
insb
mov
or
imul
cmp
xchg
pop
nop
movsb
outsl
or
sti
add
fs
sbb
pushf
jb
xchg
push
push
add
push
add
pop
or
ror
sbb
add
add
and
sbb
add
dec
fsubrs
push
mov
xchg
subl
jecxz
mov
fs
outsb
nop
push
leave
push
hlt
pop
cmp
or
das
push
pushf
pop
lret
jge
inc
inc
sbb
push
or
and
pop
pop
insl
in
pop
and
add
lods
js
xchg
add
dec
sub
add
add
pop
out
push
lret
and
mov
xchg
add
incl
jo
or
or
push
les
sbb
mov
inc
fcoml
mov
sub
mov
je
cmp
ficoms
inc
sbb
sti
call
aam
push
mov
and
es
xchg
data16
add
mov
imul
fs
mov
dec
flds
jl
and
aaa
add
dec
lcall
adc
xor
push
rorl
cmp
xor
mov
push
mov
stos
jbe
sub
test
inc
xchg
push
sbb
add
mov
inc
je
and
and
adcb
xor
pop
jb
fiaddl
mov
imul
inc
mov
out
adc
adc
push
fs
gs
adc
mov
lds
roll
into
dec
push
nop
loop
dec
das
jb
aam
dec
jbe
dec
dec
add
push
xchg
dec
add
sbb
inc
testl
mov
pop
mov
and
or
pushf
dec
mov
ss
mov
pop
add
fistpl
sbb
sbb
pop
dec
dec
fcmovne
movsw
or
inc
and
inc
add
cmc
daa
ror
sbbl
enter
es
sbbl
adc
push
lods
loopne
in
push
fcompl
add
or
push
inc
sbb
push
test
add
rcr
aas
cmp
fadds
inc
addb
push
and
jb
dec
add
fs
jb
inc
dec
enter
sbb
jb
pop
jb
mov
push
adc
pop
sbb
xchg
adc
adc
pop
inc
out
cmpsl
daa
xchg
mov
inc
fsubl
cmp
and
sbb
mov
aaa
add
sbb
daa
rorb
out
iret
adc
mov
insb
sbb
inc
sub
int3
and
popf
push
pop
sub
or
add
sbb
outsl
mov
adc
jp
addl
pusha
das
cmp
dec
add
ljmp
xchg
push
push
mov
fs
add
xchg
add
and
or
xor
nop
and
adc
add
jno
sbbl
bound
push
and
and
mov
daa
in
push
in
add
xchg
popw
movb
mov
cvtdq2ps
std
sub
add
adc
in
add
sbb
pop
inc
sub
and
add
jp
and
adcl
xor
push
push
sarb
add
xor
xor
nop
add
punpcklbw
ret
or
outsb
enter
int3
gs
push
sbb
sbbl
mov
mov
ret
push
lods
fstl
mov
xor
inc
cmpsl
movsb
sbb
mov
or
and
shlb
jp
cltd
je
xchg
mov
sub
mov
dec
lret
fdivl
movsb
pusha
orl
fwait
nop
and
fisttpl
dec
cmc
dec
insb
pusha
cmp
or
push
push
push
dec
or
mov
cmp
xchg
add
nop
int
sbb
dec
xchg
xchg
pusha
push
add
mov
fsubrl
xchg
add
pusha
xor
lret
test
jne
cmp
dec
in
mov
xor
les
and
xchg
scas
xchg
in
data16
dec
cltd
test
dec
sbb
push
or
jp
and
shrb
inc
push
js
add
adc
pusha
adc
adc
stos
xchg
add
xor
cltd
shrb
add
push
sbb
add
and
add
push
mov
or
push
xchg
daa
pop
dec
pop
inc
add
sub
enter
or
inc
sub
jb
pop
jb
push
push
enter
and
push
jno
add
rcll
xor
pop
and
xor
dec
pop
nop
xchg
aaa
push
sbb
jbe
loop
inc
arpl
xchg
sub
insb
loope
or
sub
or
mov
dec
xor
add
push
sahf
sbb
add
out
pusha
mov
leave
xchg
jl
data16
dec
or
sub
call
add
enter
pushf
sub
add
aaa
insb
adc
or
sub
xchg
mov
or
leave
pop
or
mov
pop
ds
or
in
add
int3
add
pushf
je
mov
add
bound
add
mov
sbb
or
push
pop
and
push
orb
stos
inc
push
xchg
sbb
rcrb
mov
or
inc
inc
push
fs
cmp
cmp
add
nop
add
add
nop
inc
push
cmp
cmp
push
fs
inc
lods
test
add
adc
movsb
mov
dec
pushf
das
cwtl
xor
xchg
nop
cltd
fs
inc
rorl
add
in
jl
js
je
mov
test
dec
inc
cmp
adc
rorb
pusha
negb
jmp
je
xor
imul
pop
push
mov
lods
mov
cmp
and
adcl
js
mov
sub
sti
sbbl
dec
dec
push
inc
push
or
in
push
in
push
inc
push
in
push
push
inc
push
inc
push
in
sub
sub
loope
das
push
outsb
cli
sarb
sahf
mov
xor
hlt
sbbb
lcall
inc
add
adc
adc
add
sbb
movsb
scas
sbb
and
pop
es
pop
jb
mov
dec
add
lret
sbbb
jo
pop
jmp
xor
or
sbb
pusha
add
add
pop
dec
test
mov
cmp
incb
push
cld
mov
sub
add
push
xchg
cmp
repnz
or
pop
add
std
or
call
leave
repnz
std
or
enter
sub
mov
mov
std
or
xchg
cwtl
std
push
or
cmp
or
adc
std
adc
xchg
sub
pop
std
adc
lret
insl
enter
adc
out
std
adc
repnz
in
std
adc
fs
adc
pop
adc
sbb
pop
pop
mov
cld
sbb
xchg
sub
cld
sbb
pop
not
rorb
ljmp
sub
testb
jle
adc
inc
push
pop
mov
inc
cmp
xor
dec
in
paddw
push
test
jl
ljmp
cld
outsb
frstor
xor
cmp
push
xchg
aam
ret
push
sbb
sbb
add
adc
je
sbb
push
inc
mov
cld
aad
sbb
or
stos
add
pusha
fnsave
sbb
hlt
sbb
mov
out
adc
dec
idivb
outsl
ret
push
mov
mov
addr16
xchg
daa
add
mov
outsb
pusha
nop
cld
pusha
out
bound
adc
add
ficoml
outsl
sbb
push
add
push
es
scas
pop
dec
insb
add
hlt
shll
or
je
stc
pusha
adc
mov
add
sub
icebp
add
inc
dec
or
or
mov
sbb
sbb
enter
push
sub
movsb
push
add
int
dec
inc
cmpsl
nop
adc
pop
dec
xorb
and
inc
lret
add
cmp
mov
movsb
add
pushf
xchg
mov
shll
je
xor
shll
push
je
rcrl
lds
pop
ret
xchg
xchg
add
adc
sbb
stos
sub
punpckhbw
sbb
sbb
xchg
add
addb
lret
inc
adc
xchg
pop
dec
sbb
repnz
inc
xor
shrb
pusha
mov
adc
or
push
cltd
insl
rcrb
or
dec
add
cmp
rorl
xchg
push
inc
add
lret
xor
sbb
mov
mov
insb
or
jb
subps
pop
and
clc
push
mov
inc
dec
scas
mov
add
add
inc
and
push
xor
xchg
or
xor
outsb
mov
xor
xchg
or
adcl
clts
stc
xchg
leave
add
icebp
and
push
rorb
inc
push
pop
jge
in
fmul
pmulhuw
loopne
or
rcrl
cmp
aaa
aam
or
mov
lods
rolb
xchg
dec
or
jne
cltd
adc
or
in
daa
mov
and
add
and
mov
push
cmp
inc
subb
fdivr
inc
push
cmp
aam
int3
enter
inc
rolb
mov
rcrb
push
jmp
push
add
pusha
push
pop
sbb
inc
xor
jns
push
pop
xchg
pop
cs
ss
push
mov
xchg
pusha
and
inc
add
and
mov
add
jecxz
fisttpl
sub
mov
lock
comiss
or
push
jb
ficoms
jne
orb
jae
adc
popa
leave
adc
loopne
cltd
mov
in
or
sbb
or
and
add
enter
adc
adc
leave
add
enter
cmp
or
gs
pushf
adc
pop
in
mov
decb
xor
in
or
out
push
loopne
push
js
sub
push
jb
dec
or
inc
push
rorb
adc
pusha
ss
lods
push
mov
xchg
xor
or
or
xor
sarb
add
cmp
fdiv
in
inc
or
std
roll
popa
xchg
cwtl
mov
push
lods
xor
sub
push
and
inc
add
add
sbb
nop
or
inc
push
daa
push
test
lret
in
fistpl
or
dec
aam
and
dec
dec
push
addb
adc
add
and
mov
test
inc
test
fs
inc
add
cmc
xor
and
nop
xor
or
add
or
ss
adc
and
and
adc
adc
xchg
inc
mov
and
sub
inc
push
push
push
sbb
xor
pop
mov
fs
lock
in
into
xorb
inc
sbb
ljmp
nop
add
dec
fs
push
in
push
sbb
fs
push
add
push
inc
push
fs
pop
dec
test
jb
add
inc
loop
xchg
add
cmp
push
and
inc
lods
cmpsb
xor
or
and
push
enter
or
and
push
jae
enter
inc
dec
sbbl
sbbl
inc
jmp
hlt
add
lahf
out
or
push
or
sti
std
jnp
enter
nop
dec
es
push
and
add
inc
xor
cwtl
cwtl
adc
in
gs
adc
xchg
inc
jae
or
or
add
mov
je
sub
mov
jo
js
add
ret
lods
add
inc
push
mov
fs
rorl
xchg
dec
daa
jp
pop
xor
add
and
and
or
fcmovne
mov
sbb
pop
sbb
inc
cmp
nop
mov
and
xor
jbe
ds
sub
inc
decl
addl
sahf
dec
add
xchg
add
ds
add
rolb
push
stc
sbbb
adc
sbb
add
nop
pop
pop
nopl
pop
add
nop
add
dec
sbb
jno
jl
mov
and
push
mov
and
push
push
pop
xor
inc
and
jb
push
inc
jb
pop
jb
dec
pop
dec
jbe
pop
inc
dec
test
mov
sbb
rolb
adc
pop
jbe
ljmp
outsl
adc
mov
imul
adcl
mov
push
aam
inc
jb
xchg
add
in
ja
decl
pop
test
push
stc
out
xor
test
xor
pop
sbb
mov
insb
sbb
and
add
xor
xor
xor
fnstcw
iret
test
sub
add
in
or
and
divb
dec
jae
adc
je
push
push
pop
dec
rcr
and
jo
push
dec
push
test
cmp
mov
push
sub
or
fnsave
add
jg
add
pop
mov
nop
inc
add
adc
pop
dec
dec
xor
cmp
lret
xor
push
pop
lcall
inc
push
in
movmskps
inc
push
in
dec
xchg
push
mov
xlat
and
mov
jnp
stos
subb
or
push
jnp
push
sub
stos
dec
nop
mov
push
fs
push
inc
inc
cmp
push
fs
cmp
xorl
lea
lods
data16
addb
inc
and
xor
cmp
add
xor
jae
or
iret
dec
and
aaa
roll
enter
call
sbbl
test
inc
push
jmp
in
push
in
dec
push
or
inc
push
push
pop
cmp
or
mov
xor
or
and
mov
adc
xor
xor
add
jne
nop
sbb
pop
je
adc
sub
test
xor
add
push
enter
pop
int
movsb
lods
sub
mov
mov
cmp
sub
mov
stos
sub
push
dec
frstor
or
or
cld
add
leave
adc
sub
movsb
shrb
or
divl
and
add
or
sbb
or
jg
or
inc
shll
xchg
mov
dec
js
sub
sub
pop
add
and
inc
add
push
jae
orb
dec
inc
std
cld
xor
clc
into
lcall
cmp
dec
xchg
leave
dec
sub
xchg
dec
xchg
pop
cmp
dec
xchg
push
push
push
inc
push
mov
dec
flds
mov
push
add
add
push
fs
gs
cmp
xor
sub
push
fs
inc
sub
inc
into
les
mov
in
inc
push
in
adc
addl
or
add
leave
dec
cld
mov
mov
xor
xor
or
das
call
xor
leave
xor
and
push
fsubrs
leave
push
aam
xor
xchg
sub
int3
dec
enter
sub
les
shrb
jbe
dec
mov
imul
mov
addr16
in
rorb
ret
cmp
rorb
mov
fs
dec
xchg
nop
je
push
in
mov
inc
sub
jl
push
fs
dec
js
je
je
in
jo
push
add
push
sarl
xchg
nop
add
std
mov
pusha
add
sbbl
enter
push
inc
sbbl
sbbl
add
pop
add
fsts
push
popa
mov
push
add
mov
ret
add
nop
ss
and
push
push
in
push
push
inc
dec
inc
push
in
push
aaa
in
push
in
push
push
push
in
push
dec
push
dec
inc
push
in
cmp
in
dec
cmp
cs
inc
push
in
ss
in
push
in
inc
push
fs
mov
inc
push
je
push
movsb
mov
xor
jno
xchg
or
pop
sbb
aad
aad
cmpsl
jg
adc
mov
fmull
jae
add
out
or
aas
lods
bound
pop
jnp
push
mov
or
xor
dec
xlat
add
push
sub
cs
adcl
push
pop
inc
sbb
sbbl
enter
enter
inc
push
push
sbb
sbbl
enter
enter
cmp
sbb
sbbl
enter
das
xor
sbb
push
push
sbb
adc
fisttps
sbbl
sbbl
and
inc
push
fs
nop
mov
fs
push
mov
jl
fs
push
fs
insb
push
fs
push
push
push
dec
mov
or
adc
add
sub
add
adc
enter
push
push
dec
push
enter
mov
inc
pop
inc
jnp
rolb
inc
mov
sub
add
jbe
inc
push
xchg
pop
rolb
adc
leave
shll
xor
rclb
fstl
adc
and
lcall
cs
add
mov
popa
push
subl
push
fs
mov
adc
inc
push
cltd
dec
inc
push
in
push
aaa
in
push
in
push
push
add
inc
push
dec
push
jb
xchg
ror
pushf
cwtl
pop
jb
pop
xchg
nop
mov
pop
jb
mov
jl
push
jb
pop
je
inc
pop
and
or
dec
iret
xor
and
push
inc
and
mov
add
movsb
add
addl
push
push
or
cld
cmpsb
and
xchg
adc
pop
adc
test
or
pop
inc
iret
inc
add
out
subb
inc
adc
xchg
xchg
sub
pop
pop
and
rolb
or
pop
repz
and
dec
cmc
pop
mov
je
push
jbe
pop
stos
pop
add
jbe
lahf
add
cmp
pusha
add
lods
jae
xor
cs
inc
mov
pop
sbb
or
adcb
fs
movsb
dec
inc
push
es
or
add
mov
inc
popl
pop
jb
inc
push
push
inc
and
jb
inc
push
jb
pop
jb
or
xchg
or
pop
add
xor
xor
jb
add
or
insb
mov
and
in
cmp
in
and
in
cs
dec
nop
dec
es
push
xor
mov
xor
or
nop
xor
fs
pop
nop
dec
push
inc
push
push
push
es
or
cs
mov
dec
xchg
lret
cs
or
xchg
mov
shlb
or
orb
and
jb
inc
dec
pop
jb
dec
push
shll
or
or
or
xor
ss
xor
mov
jb
pop
push
push
push
and
jbe
push
iret
cmp
sbb
rclb
cwtl
dec
cs
das
pop
nop
mov
inc
repz
or
or
inc
cs
adc
cs
cmp
cs
ret
divb
cs
xor
sbb
push
nop
or
mov
or
enter
ss
enter
and
push
enter
sub
pop
addb
test
xchg
pop
dec
and
aaa
inc
mov
pop
xor
adc
test
and
adc
adc
pop
dec
dec
xor
pop
enter
enter
dec
inc
dec
pop
enter
or
rclb
cmc
sbb
in
cs
and
adc
jmp
popa
xor
or
add
inc
cwtl
enter
dec
cs
cs
dec
dec
inc
cs
dec
add
in
add
in
pop
enter
jb
adc
pop
dec
push
add
and
inc
inc
inc
cs
sub
inc
cs
and
cs
cs
adc
nop
in
inc
adc
imul
adc
inc
pop
bound
in
ss
in
xor
xchg
dec
cs
out
and
jb
inc
cmp
jb
jb
add
pop
enter
ss
push
dec
adc
test
jb
dec
xorb
leave
test
inc
pop
mov
and
inc
adc
dec
cs
dec
cli
inc
cmp
cs
cmp
inc
cs
sub
xchg
in
cs
add
and
cmp
xchg
pop
enter
or
and
push
ds
add
push
and
and
and
jb
dec
inc
mov
jb
inc
push
jb
pop
jb
inc
push
pop
and
pop
add
or
and
negb
pop
push
push
pop
and
leave
test
jb
pop
jb
push
push
pop
jb
pop
cmp
jb
xor
jb
pop
jb
cs
xor
adc
jno
or
das
mov
in
add
cld
incb
ja
push
and
cmovns
xchg
add
decb
pop
fs
push
or
fcoml
ret
sbb
adc
inc
sub
in
icebp
inc
push
or
test
cmp
bound
mov
dec
arpl
cltd
enter
ljmp
nop
or
mov
add
mov
nop
or
mov
dec
inc
or
nop
or
mov
dec
add
mov
or
mov
enter
add
sbb
test
sbb
sub
xchg
addl
mov
xor
nop
lcall
nop
or
arpl
mov
scas
dec
mov
je
nop
add
pop
push
inc
inc
fcompl
pusha
adc
in
stos
mov
fcoml
dec
dec
cs
in
inc
pop
cmp
dec
jecxz,pn
enter
mov
mov
int
dec
or
cmpsb
mov
nop
or
push
xchg
or
push
add
je
pop
mov
dec
stos
mov
inc
inc
push
insb
add
inc
jecxz
dec
in
nop
adcl
sub
pop
popf
dec
lods
xchg
or
push
cs
and
add
inc
mov
inc
or
pop
leave
xchg
pushf
push
je
xchg
pop
enter
push
or
push
dec
cs
and
dec
nop
or
in
cmpsb
inc
dec
push
cs
xchg
dec
inc
roll
cs
inc
push
cs
lcall
flds
xchg
sbb
add
dec
jmp
pop
dec
pop
and
dec
inc
push
sbb
push
cmp
push
dec
dec
inc
enter
mov
mov
and
inc
inc
nop
add
pop
inc
rclb
add
xchg
xor
lds
inc
add
mov
in
push
pop
movhps
in
movlps
cmp
pop
push
sub
inc
pushf
out
leave
adc
add
adc
add
adc
and
pop
or
aam
adc
pop
pop
inc
add
test
add
adc
sbb
add
mov
in
dec
dec
mov
pushf
add
dec
and
adc
imul
pop
dec
mov
and
cwtl
dec
sub
mov
xor
cmp
dec
mov
and
or
test
and
inc
and
leave
test
sbbl
or
add
dec
push
inc
push
mov
push
ret
cmp
mov
mov
in
cmp
push
or
push
mov
or
inc
es
add
push
xchg
lret
push
inc
or
push
nop
add
push
cs
or
xchg
jo
xor
inc
enter
and
lcall
sbb
mov
or
enter
push
in
andl
dec
push
mov
xor
es
in
cltd
cs
loop
push
es
or
mov
and
pop
enter
pop
adc
pop
xor
sbb
add
xor
and
jb
dec
add
push
adc
mov
mov
adc
mov
in
sub
mov
packssdw
add
sbbl
push
and
xor
add
mov
push
inc
dec
push
pop
push
dec
dec
dec
pop
mov
inc
jae
data16
pushl
pop
mov
add
add
dec
sbb
subb
inc
outsb
push
gs
jg
xor
imul
add
pop
lcall
push
mov
mov
push
push
push
add
js
add
lret
mov
inc
fs
bndmov
xor
subb
fistpl
xor
stos
and
dec
fs
sub
jae
pop
gs
test
inc
and
and
popa
arpl
pop
pop
jbe
popa
inc
js
test
push
jb
gs
xchg
insl
movl
sub
aas
add
xchg
sub
sbb
test
gs
test
mov
cmp
lods
fs
mov
add
push
pop
xchg
imul
lcall
push
inc
add
dec
add
add
xlat
dec
add
add
stos
sahf
insl
fldl
push
or
add
adc
addr16
add
adc
popa
xchg
inc
fiaddl
and
pop
xorl
popa
or
pop
lds
hlt
jecxz
sub
stos
and
sub
and
add
pusha
fs
daa
cs
in
inc
hlt
add
add
sub
cs
fnstenv
sti
add
out
cltd
mov
jae
arpl
lret
sub
std
es
daa
inc
sbb
in
xchg
add
mov
add
dec
add
incl
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
