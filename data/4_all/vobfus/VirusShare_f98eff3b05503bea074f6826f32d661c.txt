mov
jmp
mov
inc
inc
inc
hlt
inc
fadd
inc
inc
inc
inc
rcrb
inc
pushf
add
or
inc
inc
cmp
dec
inc
inc
inc
inc
and
and
inc
inc
inc
sarb
inc
inc
pusha
cmp
call
nop
adc
inc
inc
inc
js
xchg
in
inc
inc
inc
inc
lock
or
inc
inc
inc
inc
push
mov
inc
inc
mov
inc
adcb
inc
inc
inc
sub
sbb
fsub
adc
out
test
outsb
push
add
add
xor
enter
cmp
add
mov
inc
mov
mov
jmp
in
add
addr16
es
add
sarb
inc
movl
mov
ficoms
nop
lock
xor
add
sbb
fldt
ljmp
sbb
pop
pusha
fistpll
add
es
jl
adc
aam
mov
add
sub
je
addb
fdiv
in
mov
dec
dec
lahf
or
sub
adc
adc
jne
or
add
add
lock
je
js
orb
outsb
fwait
xlat
sbb
or
sub
jnp
in
sub
inc
lahf
mov
sti
xor
cmpsl
jle
or
or
adc
xor
mov
add
or
mov
scas
jmp
js
addb
mov
pop
loope
pop
insb
outsl
add
jae
add
xchg
rclb
mov
rcrl
cld
adc
pop
xlat
std
and
in
sub
jbe
push
adc
xchg
adc
mov
pop
sbb
lahf
sub
xor
cmp
xchg
adc
dec
add
subps
outsb
lret
xchg
mov
scas
mov
inc
mov
aam
fcomps
ret
or
adc
subl
mov
xor
call
fldz
jle
xchg
add
inc
xchg
pop
sbb
pop
outsb
fstpl
aas
adc
mov
jbe
jle
insb
pop
repz
outsb
das
insb
ja
daa
in
pop
mov
adc
pusha
and
adc
insl
mov
mull
adc
mov
push
nop
leave
sahf
mov
ret
pop
out
aam
daa
je
mov
or
cld
jo
test
sbb
add
pop
shlb
cs
pop
xchg
cmpsb
fstps
je
push
pop
cmpsl
or
pop
les
into
inc
push
add
jo
pop
sub
in
aas
aaa
jae
add
mov
dec
testb
or
xor
or
in
lret
mov
das
add
shl
mov
imul
pushf
inc
xor
push
add
out
loope
or
jnp
or
jbe
mov
fwait
clc
push
movsb
aas
jne
fsts
femms
adc
pusha
add
popf
inc
push
addr16
xor
cmpsl
data16
addb
push
das
shl
jmp
mov
adc
xor
out
sbb
push
xchg
add
mov
xlat
adc
rclb
enter
mov
in
xchg
jnp
or
sbb
pop
test
mov
or
or
adc
and
add
enter
and
cmp
mov
add
test
adc
push
imul
inc
dec
shll
lods
pop
mov
les
fsub
in
jae
data16
xchg
jg
jge
add
js
add
je
mov
add
loopne
das
adc
jbe
mov
or
and
or
test
scas
sbb
fwait
ss
jp
btr
xchg
aas
aas
fadds
xchg
daa
or
jae
mov
xor
mov
or
lret
ljmp
js
inc
xchg
sbb
jg
push
mov
adc
in
sbb
lods
mov
mov
cs
ficoms
sub
mov
or
sbb
xchg
xchg
xor
xor
js
fs
push
leave
cmpsb
imul
sbb
xchg
jg
mov
sbb
daa
dec
push
ss
sbb
pop
pop
into
cmpsb
xchg
or
sbb
mov
sahf
xchg
in
mov
pop
aam
aas
sbb
mov
cmp
pushf
arpl
mov
mov
insb
lock
sub
lods
loope
jle
mov
enter
xlat
test
or
add
pop
pop
push
pop
mov
adc
adc
std
and
mov
cmp
cmc
push
add
or
fildl
mov
mov
pop
adc
mov
fcomps
stos
rorl
cmp
sub
or
pop
repnz
xchg
in
rcrb
ret
add
xor
push
xor
loopne
inc
add
add
sbb
jae
add
pop
cld
pop
fs
and
pop
cmp
enter
cmp
enter
test
int
nop
inc
or
cmp
xor
lods
pop
pusha
adc
enter
pop
nop
cmp
pop
pop
or
push
jb
mov
mov
nop
inc
cmp
push
xchg
nop
xchg
orl
push
mov
push
push
call
jb
inc
and
dec
nop
in
orl
fmuls
push
sbb
xchg
push
adc
xor
leave
rorb
pop
sbb
adc
mov
pop
sbb
dec
jo
jb
in
dec
call
in
orl
andb
pop
sbb
aam
mov
xor
dec
add
inc
push
and
inc
mov
hlt
inc
mov
mov
add
adc
cmp
dec
cld
mov
je
fwait
add
add
and
mov
test
popa
pop
dec
inc
mov
inc
cmp
sbb
call
jae
cwtl
int3
adc
jl
int
imul
mov
cltd
pop
rcl
cld
adc
jbe
pushf
cmpsb
imul
cmpsb
jae
loopne
js
add
shrl
nop
les
shll
add
add
lsl
pusha
sarl
jl
add
out
lret
adc
aam
imul
mov
outsb
clc
cmp
mov
pop
stos
movsb
pop
cld
push
repz
aam
mov
sbb
mov
pusha
pop
xlat
jne
cmovo
pop
and
daa
rcr
jbe
cmp
cmpl
xor
cmpl
andb
dec
or
imul
jnp
sbb
into
in
mov
push
aas
and
fbld
outsb
xlat
insb
mov
add
pop
insl
or
jne
les
pop
aas
add
pop
loope
fisttpl
or
es
or
pop
outsb
fucomi
imulb
and
sbb
xchg
sbb
or
push
fldcw
sbb
daa
cmc
shll
fists
daa
sbb
cmc
pushf
mov
cmpsb
jmp
ret
and
outsl
add
xchg
fdivrl
fists
sbb
int
mov
call
mov
mov
lock
push
cld
mov
mov
dec
test
dec
mov
jmp
aaa
in
mov
cmp
mov
add
das
jns
sbb
xchg
xchg
xchg
mov
xchg
leave
fmulp
inc
stos
fadds
jb
ret
and
xchg
pushf
leave
dec
push
div
push
enter
in
das
jns
scas
pop
mov
xchg
mov
and
inc
mov
xchg
xchg
pop
cld
mov
mov
dec
test
xchg
lcall
mov
nop
or
rcrb
xchg
xor
ljmp
outsb
xchg
dec
adc
dec
jbe
pop
ss
jae
pop
push
cld
es
sub
pop
and
movb
aaa
inc
push
cmp
sub
pop
pop
push
xlat
sbb
lcall
hlt
movsb
aas
jbe
add
das
les
add
and
insl
xchg
out
jmp
dec
adc
and
cld
mov
add
add
pusha
pop
pop
add
push
xlat
xor
dec
js
in
sub
and
shlb
mov
add
and
fst
sub
seto
clc
arpl
cmpsb
fstps
pushf
and
jne
dec
in
add
add
pop
and
mov
push
xchg
mov
xlat
sbb
pusha
inc
push
mov
mov
imul
cmpb
in
fsubl
cmpsl
imul
and
lahf
add
insb
imul
jo
lahf
int3
inc
xor
imul
mov
call
pop
scas
shl
fnsave
and
dec
jnp
insl
jmp
xlat
popf
aas
mov
fs
adc
jnp
scas
insb
add
pushl
or
xor
or
pop
psubusb
test
jbe
xlat
add
xor
adc
aaa
dec
out
add
leave
div
or
sub
add
cld
cmc
push
xchg
dec
xchg
dec
clc
dec
hlt
adc
inc
in
push
je,pn
dec
call
das
enter
pop
and
mov
pop
xlat
xor
xchg
iret
jo
stos
scas
jmp
jmp
test
or
jl
je
insl
inc
pop
int
mov
outsl
or
int
frstor
sbb
fcomp
jl
or
out
pop
add
fcompl
sub
xor
mov
outsb
pop
insb
hlt
jmp
xchg
mov
and
xor
mov
orb
loopne
add
es
repz
add
adc
outsl
sahf
shll
ja
sahf
mov
jne
std
push
sahf
lods
dec
sti
or
dec
dec
push
jg
jnp
dec
or
js
xchg
sub
lahf
imul
pop
sub
push
addr16
fwait
cmpsb
imul
dec
shrl
das
inc
push
imul
dec
sarl
cmpsl
mov
dec
jecxz
mov
or
xor
outsl
xorl
shl
imul
cmpsb
imul
imul
cmp
add
shrl
sub
add
cmp
sarb
mov
ret
leave
sub
mov
enter
push
xor
and
cmp
mov
sbb
xor
xor
xchg
jo
dec
pop
leave
sub
test
xchg
add
int3
cwtl
push
and
mov
xchg
sbb
sub
leave
sub
mov
aam
fldcw
sbbb
scas
in
dec
mov
in
in
or
fsubrl
leave
and
and
repnz
pop
insb
hlt
aam
adc
loope
xchg
inc
jne
jns
add
cmp
mov
pop
leave
sub
adc
mov
pop
hlt
in
cmpsl
and
les
sbb
daa
in
rorb
add
mov
mov
fdivl
mov
sbbb
mov
and
push
lret
sbb
cmc
mov
nop
dec
push
sbb
mov
cmpsb
sbb
sbb
xor
addl
aam
add
movsb
cmp
xchg
xor
pushf
xor
sarl
mov
push
inc
cwtl
inc
or
push
fistpl
shrl
sti
mov
jb
jmp
and
call
push
sub
push
jl
mov
push
out
jl
lods
mov
mov
ss
push
jne
push
pop
test
push
push
sbb
mov
mov
cltd
scas
jmp
pop
movsb
pop
addb
add
pop
pop
xlat
jne
dec
arpl
aam
dec
movaps
popf
inc
outsl
push
in
xlat
js
mov
sub
adc
mov
mov
gs
je
inc
lods
dec
mov
scas
jb
jnp
pop
or
aam
sub
aas
xchg
pop
xchg
lret
in
jae
add
adc
inc
sahf
cwtl
out
ljmp
movl
pushf
imul
lcall
mov
daa
rolb
sbb
aas
pop
adc
outsl
xor
pop
add
inc
mov
stc
mov
dec
pop
daa
test
aas
sub
pop
sbb
add
add
cs
in
mov
aam
pop
xor
sbb
dec
mov
fucomip
leave
add
xor
inc
pop
ja
dec
push
enter
xor
jb
push
imul
in
push
in
rorl
lods
mov
dec
push
cwtl
pop
and
inc
js
mov
fwait
xor
int3
lahf
add
pop
insb
in
lahf
aam
add
fnstenv
fsub
fs
and
daa
or
hlt
pusha
inc
jbe
in
push
daa
xor
movsl
and
call
pop
or
daa
in
push
xor
addl
adc
cmpsb
xor
lds
mov
add
cmpsb
imul
dec
shll
jecxz
or
pop
imul
imul
sub
sti
aaa
int3
ss
shrl
out
aaa
sbb
push
sbbb
flds
push
cmp
mov
add
xchg
or
enter
cmp
hlt
lcall
pusha
add
adc
adc
in
ds
ss
roll
inc
dec
push
or
sbb
push
pusha
cmpsb
xor
adc
xchg
enter
jl
xor
and
pop
in
mov
add
sbb
sub
nop
sarl
push
popf
outsb
add
dec
mov
add
cwtl
enter
add
ss
or
and
ret
sti
or
xor
pop
nop
testl
push
stc
push
or
add
push
pusha
inc
pop
add
aaa
add
and
movsb
sbb
jne
and
jecxz
add
push
mov
cmp
mov
dec
add
sbb
lods
in
rorb
sbb
dec
fmuls
test
sbb
mov
lret
push
enter
dec
pop
loopne
sbb
sub
dec
mov
ss
test
adc
rorb
adc
adc
sub
lods
adc
dec
push
xor
inc
sahf
int3
cwtl
lahf
xchg
nop
fadd
xchg
and
daa
mov
aam
in
xchg
inc
push
xor
mov
insb
xchg
dec
push
test
mov
es
movsb
lret
mov
enter
clc
adc
rol
sti
enter
aad
in
mov
pop
cmp
outsl
and
add
loop
adc
std
mov
lods
cmp
and
js
adcl
cmp
sub
sub
iret
xchg
jl
jae
pop
idivb
dec
mov
cld
ds
mov
imul
das
cwtl
pop
sti
mov
test
pop
add
das
enter
add
movsb
pop
pop
adc
push
test
adcb
xchg
daa
inc
sub
push
dec
sbb
daa
bound
and
dec
jle
sub
cwtl
lock
daa
iret
push
add
das
mov
icebp
sahf
sbb
enter
pop
xorb
movsb
icebp
dec
adc
cmp
clc
adc
push
pop
jb
imul
inc
lcall
pop
imul
lock
mov
jb
je
repnz
dec
addb
scas
mov
je
test
cwtl
pop
add
popa
add
int3
add
inc
lret
scas
mov
cld
add
and
dec
shll
inc
dec
push
pop
mov
imul
loopne
lahf
repnz
dec
push
daa
mov
or
adc
fsubs
add
or
cwtl
movsb
mov
insb
lcall
jl
cmpsb
imul
and
cmp
dec
push
inc
rcll
mov
add
push
fistpl
push
nop
nop
or
fcomip
inc
neg
add
jb
xor
inc
imul
pop
inc
push
outsl
arpl
je
insb
jne
add
fs
daa
push
je
addr16
outsb
dec
imul
je
sub
outsb
sbb
je
push
push
inc
jecxz
ja
insb
outsl
popa
xlat
fidivs
out
dec
inc
imul
jmp
aaa
or
pop
imul
cmp
and
and
pop
sub
sub
fidivl
pop
add
mov
sub
jne
loope
pop
pop
add
add
add
sub
or
and
add
add
xor
fsubp
push
mov
adc
or
xor
xor
cmp
or
pop
xlat
je
xor
xor
pop
xor
pop
xor
imul
jae
data16
jmp
add
pop
sbb
add
movntps
jbe,pt
out
hlt
decl
dec
mov
push
or
pop
or
ljmp
add
cmp
incl
mov
es
jns
mov
out
jp
adc
decl
xor
insb
stos
cmp
xchg
push
imul
rcrb
das
jmp
or
push
scas
ljmp
sub
push
jmp
inc
push
cmp
xchg
lods
jnp
ficoml
sbb
jnp
push
pop
cs
xchg
cmpsl
or
fwait
cmp
jno
inc
cmp
outsl
addr16
insl
and
jl
sbb
jae
sub
sub
adc
push
aaa
outsb
insb
insb
and
and
fs
lock
inc
cmp
add
cs
dec
dec
pop
mov
xor
pop
inc
inc
push
sbb
test
arpl
fiaddl
enter
mov
add
cmp
iret
jmp
je
or
push
xchg
insl
in
push
outsb
gs
out
jecxz
test
sub
fimuls
negl
push
outsl
shll
sub
ja
cmp
or
shlb
je
push
cmp
shrb
imul
adc
adc
jb
jbe
or
xchg
adc
dec
scas
xor
jae
push
lods
nopl
sbb
push
sbb
insb
or
iret
ja
pop
enter
pop
push
lods
insl
scas
xor
lock
pop
aaa
not
imul
mov
outsl
jo
pop
push
jnp
ds
jb
push
mov
jmp
pop
dec
add
out
dec
pop
icebp
add
daa
lret
lcall
cmp
dec
imul
cmpsb
imul
imul
cmpsb
imul
jmp
loopne
xor
pop
sub
mov
mov
push
call
mov
xorl
mov
stos
adc
or
cmp
add
nop
add
or
and
push
pop
cli
sti
add
push
add
add
scas
lret
das
addl
mov
fsubs
aaa
jmp
add
imul
mov
xor
adc
je
dec
fdivl
sar
outsl
jbe
dec
test
add
mov
ss
pop
inc
cmp
pop
fldl
push
arpl
add
jne
in
pop
jb
in
hlt
daa
iret
ds
or
gs
pusha
inc
clc
cmp
pop
mov
pop
mov
push
push
inc
or
fmull
jo
cmp
cltd
in
add
mov
jb
jg
inc
insb
gs
outsb
les
stc
and
push
inc
jae
iret
mov
jns
movsl
out
in
cwtl
dec
or
sbb
pop
enter
mov
movsb
movsl
cmp
pop
and
sbb
and
push
jg
jb
and
inc
jns
popf
test
test
lods
push
sub
xchg
dec
push
xor
out
fwait
clc
push
inc
mov
dec
cmova
cmp
or
add
jg
jb
and
cmp
inc
inc
inc
enter
dec
arpl
jns
push
adc
leave
pop
mov
adcl
inc
les
xlat
dec
cs
je
addr16
xchg
add
or
inc
push
jo
dec
or
imul
jo
js
cmp
ret
data16
fsubs
push
jl
push
popa
addr16
dec
stos
leave
dec
push
in
jl
dec
jecxz
adc
jae
inc
mov
add
orb
push
jmp
inc
and
inc
cld
mov
dec
pop
jb
or
push
sbb
leave
add
mov
push
adc
jno
jne
dec
popa
dec
add
jbe
dec
mov
fs
jae
fdivs
mov
pop
jb
daa
mov
iret
push
inc
add
push
ret
loopne
push
or
stos
add
pop
fidivrs
call
and
mov
sub
das
sub
aas
and
sahf
xor
dec
pushf
xor
sbb
pop
mov
pop
insb
popa
ljmp
push
ljmp
mov
or
subb
pusha
ja
jae
push
jns
pop
ss
jl
test
push
dec
ss
pop
cs
stos
xchg
xor
lret
or
or
in
pop
jecxz
sub
loope
add
cmpsb
imul
adc
xor
cltd
xor
inc
mov
mov
push
xchg
add
pop
int3
stc
jnp
stc
adc
adc
dec
dec
inc
xchg
dec
push
fs
inc
fsub
xchg
sbb
mov
jecxz
je
add
jb
jmp
dec
jmp
in
stc
push
xor
dec
inc
outsb
and
inc
lock
pop
jb
dec
or
in
inc
xchg
aas
test
inc
xor
add
mov
push
sbbb
or
adc
and
in
shlb
pop
enter
sbb
cmpl
push
inc
pop
jbe
sub
pop
dec
push
fwait
in
xchg
sub
nop
inc
sub
mov
in
dec
jle
pusha
dec
cmp
lods
add
dec
mov
js
in
xlat
pop
popa
sub
leave
dec
push
dec
adc
jae
push
fs
dec
aas
push
pop
pop
sbb
outsl
sbb
and
mov
xor
xchg
or
fs
mov
nop
je
int3
push
jo
jae
pushf
jo
adc
je
sub
jl
dec
jecxz
or
mov
cld
inc
jb
mov
dec
jp
sbbl
inc
xor
push
jne
gs
in
in
dec
push
enter
push
dec
insb
scas
add
jns
mov
sbb
mov
repnz
lods
and
arpl
inc
pop
push
mov
adc
xchg
mov
xor
fldenv
inc
cwtl
mov
and
inc
mov
fcompl
or
call
arpl
mov
dec
xchg
mov
sub
mov
test
mov
push
aam
inc
pop
jb
push
push
push
divb
ljmp
int3
shrb
call
push
in
mov
dec
inc
cmp
rolb
aaa
lods
sbb
and
outsb
cs
inc
mov
mov
pushf
rolb
push
js
adc
mov
or
outsw
mov
or
mov
dec
cmp
add
jae
inc
mov
loopne
outsl
jne
inc
testl
fadds
rorl
adc
or
mov
or
xchg
adc
mov
imul
mov
js
push
loope
inc
add
pop
lock
add
pop
fisubs
inc
imul
loopne
mov
add
or
and
pop
enter
inc
or
fwait
shrb
imulb
cltd
fldenv
leave
add
pop
fistpl
adc
shrl
push
pop
in
inc
push
xchg
add
cwtl
add
add
lcall
fwait
dec
and
and
test
xor
or
and
jb
orl
push
loopne
in
pop
call
ret
inc
push
pop
jae
sub
orl
cli
inc
jb
popf
mov
lahf
inc
and
leave
leave
loop
add
and
push
xchg
add
pop
dec
push
push
lret
sahf
pop
sbb
subl
sbb
je
dec
sbb
ret
xor
sub
push
sub
or
dec
repz
jae
int3
fcoml
or
lock
jne
add
inc
into
mov
sbb
test
adc
movsl
movsl
je
popf
call
lahf
je
sub
pusha
or
orl
xor
inc
jb
cmp
adc
fwait
adc
or
push
add
adc
cmp
adc
and
add
add
push
fucomp
mov
adc
mov
ljmp
pop
sub
lcall
dec
stc
cltd
mov
rclb
or
cwtl
daa
and
mov
sub
or
pop
mov
sub
mov
sub
add
add
ljmp
popl
nop
daa
dec
stos
push
push
inc
sti
dec
sti
sub
mov
gs
jo
sbb
sub
ss
leave
orl
push
add
inc
jb
inc
mov
inc
and
enter
add
pop
cs
pop
pusha
or
adc
jne
jns
testb
add
cmp
lahf
inc
pop
adc
xchg
insb
pop
pop
or
les
movsb
cmp
mov
pop
push
pusha
inc
ja
cmp
cmp
dec
ret
mov
pop
lahf
inc
leave
orl
xchg
or
ja
mov
pop
jle
adc
in
jbe
push
jb
dec
adc
pop
and
jl
leave
dec
push
test
pop
jae
rcrl
push
rcpps
fiaddl
test
jne
inc
jo
xchg
add
movsb
orb
nop
mov
push
xor
les
mov
cmp
dec
cld
pop
mov
test
pop
push
adc
xchg
sbb
fwait
adc
pop
mov
pop
leave
and
pusha
inc
mov
inc
push
stc
subb
mov
and
enter
add
add
or
test
sbb
iret
out
sbb
jne
js
daa
and
mov
sti
jmp
pop
mov
xorl
neg
loopne
add
and
push
sbb
sub
jbe
push
mov
insl
ret
imul
fadds
das
mov
dec
push
in
shlb
pop
sbb
je
push
push
leave
sbb
xchg
push
mov
or
decb
inc
inc
loopne
push
sub
lods
repz
mov
pop
call
add
adc
fs
inc
lahf
cwtl
inc
in
pop
xchg
dec
push
hlt
test
and
in
inc
dec
clc
add
push
popf
or
fdivrl
pop
mov
cld
xor
pop
enter
cmpsl
pop
gs
and
jne
cmp
pop
or
daa
and
in
add
adc
js
xor
sbb
pop
adc
gs
leave
sbbl
push
jb
dec
dec
push
jns
sbbl
test
xor
or
dec
adcl
dec
xchg
dec
push
fs
fs
pop
sbb
stos
fcoms
and
ret
mov
and
pop
pop
adc
call
loopne
les
stos
enter
sbb
in
lret
sbb
and
lods
push
push
jecxz
jp
movsb
sti
xchg
push
adc
lcall
lock
mov
leave
add
or
xchg
rcll
test
pop
lahf
rcr
dec
cltd
movl
or
cmc
das
sbb
ret
inc
mov
and
lcall
add
sub
fisttpl
ja
das
adc
das
dec
aas
sub
sbb
ljmp
push
ret
inc
cld
dec
cld
dec
cmpsb
sub
cld
pop
inc
xchg
fwait
push
in
fadds
xor
dec
push
in
pop
enter
stos
xor
inc
pop
ret
inc
pop
add
adc
bound
inc
mulb
lahf
dec
sbb
mov
mov
cmc
or
das
inc
mov
or
sub
inc
push
xchg
jne
inc
mov
and
je
leave
push
rolb
push
jae
inc
divl
inc
daa
mov
lds
imul
jo
adc
aaa
movsl
and
and
pop
jb
outsb
jnp
iret
lea
jae
sbb
mov
mov
gs
mov
jmp
xor
arpl
fmull
inc
jae
je
and
jbe
imul
ja
and
mov
and
adc
data16
xor
mov
arpl
or
jae
arpl
int3
add
outsb
mov
push
inc
dec
dec
add
xchg
sub
adc
dec
jge
das
leave
fdivs
repz
or
adc
mov
mov
insl
dec
or
aaa
test
or
popa
or
xlat
dec
cmp
imul
insb
fwait
nop
aas
adc
insb
mov
cmp
out
es
add
sti
bound
cmp
inc
mov
mov
jnp
dec
ja
push
dec
pop
nop
out
movsb
test
dec
push
pop
and
adc
das
mov
dec
mov
andl
mov
ss
mov
daa
xlat
jne
pop
add
sbb
dec
cwtl
mov
hlt
and
idivl
jo
mov
jle
test
adc
pop
aaa
jns
jae
jne
jae
pop
popa
gs
xlat
xchg
aam
fistps
outsb
xor
insb
testb
stc
push
in
dec
or
adc
jbe
sbb
das
or
rclb
push
add
insl
ja
popa
add
and
xchg
out
cmc
or
cmp
inc
or
adc
cmp
jnp
popa
dec
cltd
and
and
mov
jae
leave
mov
jmp
xor
sbb
add
iret
lods
arpl
xor
arpl
inc
sub
ret
sbb
popa
xchg
and
jnp
es
icebp
mov
inc
jno
jae
out
lea
bound
lahf
ret
cmc
push
je
sbb
cmp
mov
xchg
mov
insl
je
mov
add
and
gs
imul
xchg
das
push
and
inc
addr16
add
xor
ret
sub
sub
cmp
push
or
add
xlat
jne
iret
ja
add
insl
jmp
inc
cmp
movl
xorl
imul
das
pop
mov
out
push
aaa
sbb
and
testl
push
aaa
inc
fucom
sbb
inc
aas
pop
cmp
push
mov
push
mov
sti
adcl
dec
add
and
pusha
lret
out
aas
pop
adc
inc
dec
leave
jecxz
xor
xchg
and
mov
adc
rclb
cmp
pop
aaa
leave
adc
mov
push
or
adc
ss
or
bound
pop
std
adc
add
cmp
inc
call
addr16
cmp
xor
mov
in
outsl
pop
push
repz
leave
pop
gs
adcl
cmp
dec
sahf
cmp
pop
stos
jae
xchg
xchg
mov
jecxz
ja
xor
adc
imul
cmp
mov
and
jae
rorl
inc
aas
sub
or
add
cs
rorb
jne
add
arpl
insl
gs
insl
sub
fistps
push
push
inc
sbb
push
pop
test
pop
add
les
sub
in
pop
and
call
outsl
dec
popf
add
dec
xchg
pop
ds
sbb
or
andl
push
or
dec
addb
or
inc
mov
adcl
enter
jae
js
cmp
iret
es
dec
xor
mov
inc
lret
rclb
push
shll
push
jbe
stc
fwait
mov
xchg
int
dec
dec
arpl
inc
jae
mov
and
push
mov
scas
inc
jnp
push
enter
jmp
inc
cmp
inc
and
sub
push
ret
sub
sub
pop
pop
jge
dec
and
jl
push
and
sub
cmp
shr
push
imul
out
dec
and
ret
jmp
and
xchg
jb
push
and
idiv
sub
setae
or
ja
inc
test
push
in
test
aaa
pop
add
cmp
in
or
pop
xchg
jp
or
adc
ja
sbb
sub
push
fidivrs
and
mov
js
mov
or
pusha
out
jae
mov
into
pusha
xchg
sub
in
add
mov
sbbb
add
idivb
mov
push
inc
mov
sub
es
and
pop
pusha
out
stos
mov
pandn
inc
inc
jl
push
int3
dec
lods
and
les
pop
fs
and
mov
testb
and
je
gs
lods
xor
mov
ret
mov
fsubs
jb
sbb
popa
mov
add
adc
jg
jecxz
or
pop
sub
cmp
fildll
xchg
shll
pop
jbe
sub
insb
lahf
imul
and
pusha
dec
or
add
insl
sub
cwtl
je
movsl
shll
xchg
test
dec
in
addr16
mov
mov
imul
jae
dec
daa
and
jo
inc
or
adc
insb
adc
outsl
adc
rcl
and
or
cmp
jbe
sub
adc
cmp
lret
bound
or
dec
mov
xor
test
mov
lret
dec
cmp
lret
or
push
movsl
mov
cltd
cmp
jmp
push
pop
or
lods
push
lret
inc
es
sbb
jo
test
outsl
popa
sub
es
xor
or
push
xor
add
imul
push
xchg
adcl
cmc
jg
push
idivb
mov
ret
cli
or
repz
or
push
ret
outsl
sub
adc
xchg
or
adc
fwait
rcrb
inc
jns
adc
test
jb
imul
loopne
add
insl
into
fisubs
movsl
jno
popf
push
lods
xchg
xlat
jne
addr16
mov
inc
add
iret
fildl
add
shl
pop
inc
andb
mov
sub
jns
push
popf
lock
xor
data16
jnp
imul
xor
adc
xor
and
push
femms
das
pop
jg
pop
cmp
aam
jae
movsl
xchg
aad
and
mov
insb
movsl
jae
xchg
add
sbb
xor
and
aad
and
dec
pop
aam
jno
adc
scas
dec
scas
add
rorl
push
jmp
inc
adc
or
mov
inc
mov
rcll
cmp
mov
sti
push
mov
ret
dec
mov
push
and
sub
sub
and
pop
mov
and
cs
xchg
nop
test
push
addr16
jb
add
pop
and
loop
fs
xor
lret
mov
popf
call
xor
jo
repz
cmp
push
inc
mov
xor
xchg
mov
dec
jg
xchg
adc
or
push
popa
sub
inc
test
mov
dec
shll
sarb
scas
jg
mov
inc
pop
inc
jns
add
ss
xor
mov
and
or
add
aaa
aas
push
cmp
or
sub
cmp
fistpll
mov
sub
cmp
or
add
xor
or
mov
inc
xchg
inc
or
fistpl
xor
js
jae
jmp
daa
cmp
or
jmp
out
xor
add
fwait
xchg
xor
daa
xor
outsl
out
pop
push
sbb
jg
stos
inc
add
lcall
and
mov
xor
xor
data16
mov
ss
adc
inc
add
filds
xor
xor
popa
js
dec
fstps
ss
in
lea
imul
fs
xor
ss
dec
xchg
or
pusha
lods
inc
pop
cmp
je
inc
inc
cmp
cmp
xor
ja
xor
push
out
mov
inc
inc
or
xlat
sub
adc
inc
jnp
inc
xchg
ss
aas
in
insb
jbe
pop
add
das
xor
push
pop
cmp
arpl
or
inc
xor
adc
shrb
insb
mov
popf
xchg
xor
cmp
jb
repz
shlb
addb
ss
daa
pusha
and
mov
cmp
mov
dec
test
mov
leave
dec
add
or
enter
inc
inc
xor
and
and
je
or
inc
adc
sbb
cs
xor
fwait
mov
cmp
add
add
or
xor
pop
pop
xchg
and
shll
addl
das
xor
mov
pop
cs
adc
jnp
test
negl
jnp
inc
orb
int3
mov
adc
andl
or
cmp
or
sub
add
and
and
daa
outsb
ror
sarb
lret
ret
ds
bswap
and
jae
call
mov
dec
add
mov
add
mov
sbb
sahf
das
inc
add
inc
and
fnstcw
cld
add
ret
data16
out
insb
enter
and
or
or
cmp
scas
in
or
inc
fadds
insl
enter
add
rorl
outsb
inc
imul
add
es
lock
add
or
lods
jmp
inc
rolb
fsub
daa
and
fcoms
arpl
pop
sub
push
fsts
das
xor
mov
test
pop
into
jbe
mov
jo
jl
or
push
imul
shll
or
pop
and
fmull
and
add
mov
mov
sub
add
sub
lods
sbbb
mov
mov
popa
mov
add
sbb
add
mov
das
das
inc
jns
adc
xor
mov
mov
test
mov
popl
int
lods
movsb
mov
push
mov
and
and
jne
pushf
int
cmp
inc
pop
test
mov
xchg
mov
or
jno
adc
xchg
movsb
sub
popl
repnz
shl
or
or
cmp
mov
add
pop
xlat
jge
dec
testb
nop
or
insl
and
insl
adc
loope
cld
xchg
xor
and
add
xor
je
int
fwait
inc
cmp
pop
or
push
push
lock
and
or
popa
and
xor
daa
enter
xor
dec
pop
xor
push
inc
xor
sub
xchg
mov
fmuls
xchg
xor
add
and
sti
sub
xor
adc
call
rorb
sub
mov
imul
cmp
test
and
sbb
lcall
sti
adc
and
inc
stc
push
xchg
adc
inc
cli
push
arpl
frstor
pusha
xlat
or
add
jne
and
pushw
push
sti
xchg
data16
dec
xlat
or
mov
dec
add
xor
in
push
sti
adc
sbb
or
fwait
inc
cmp
add
xor
movb
sbb
flds
dec
out
and
data16
and
cmpsl
add
pop
dec
sarb
clc
and
add
sarb
add
mov
mov
add
cmpl
add
or
or
fwait
inc
clc
mov
jae
inc
mov
fstpt
push
xor
adc
sub
imul
or
test
mov
mov
adc
adc
sbbl
sub
add
es
sub
inc
pop
xchg
outsb
xor
push
and
adc
add
adc
cmp
jbe
shll
mov
push
adc
or
cmp
insl
sti
xor
add
adc
cmp
xor
insb
or
dec
das
cmpsb
inc
into
pop
adc
cmp
sbbb
pop
cmc
jnp
jno
call
sbb
adc
mov
arpl
sysret
decl
aad
push
lret
jae
dec
repnz
or
jmp
aas
pop
cs
fld
pop
xor
cmp
enter
aas
clc
or
add
push
xor
stos
or
mov
in
lahf
cmp
cmpsl
sbb
inc
sti
neg
pop
or
jo
cmp
add
ljmp
dec
orl
js
sbb
adc
ljmp
or
mov
push
inc
sub
inc
adc
xor
pusha
je
aad
sti
push
aam
mov
add
stos
xor
sub
pop
or
in
or
or
js
data16
inc
popf
or
adc
mov
clc
mov
or
cmc
adc
sete
add
cmpsl
adc
and
add
pop
cmc
add
in
cmp
push
push
cmpsl
pop
div
and
xchg
or
push
outsb
in
mov
add
or
pop
mov
add
dec
aas
add
push
pop
ret
add
daa
adc
inc
incl
push
sbb
insb
pop
subl
cmp
fs
dec
insl
test
pop
xor
fs
sbb
sbb
sub
dec
fs
or
daa
xor
inc
inc
xchg
pop
std
xchg
in
add
sbb
add
sbb
mov
pop
cmp
xor
xor
add
adc
sbb
pusha
lods
insl
imul
xchg
push
pusha
aas
mov
adc
sbb
adc
lea
sub
rclb
and
add
mov
scas
dec
scas
adc
push
mov
adc
pop
adc
jne
pop
jnp
cs
inc
pop
ja
add
les
es
sbb
pop
pop
xor
inc
and
mov
ja
push
pop
add
and
jge
bound
jg
adc
xchg
jg
xchg
cs
cmp
xchg
add
fs
and
push
mov
scas
push
mov
in
jbe
dec
inc
push
xchg
inc
sahf
xchg
pusha
cwtl
pusha
pusha
enter
xor
xor
shlb
leave
add
mov
add
call
mov
lea
fisubs
mull
adc
mov
sub
adc
xchg
mov
or
movsl
loope
cwtl
xlat
or
mov
lods
jne
mov
adc
add
inc
or
les
fucomi
in
outsl
scas
in
outsl
or
shrb
sbb
sub
sbb
and
push
loop
adc
add
dec
and
addb
cmp
imul
or
or
lds
imul
cld
pop
push
mov
in
push
add
bound
jno
fildl
arpl
std
daa
movsl
sbb
xor
adc
inc
out
bound
push
les
into
rcll
jg
rcrb
and
popa
iret
add
aas
sbb
and
outsl
jg
test
sti
add
pop
std
push
mov
push
repz
pop
xor
repz
add
loope
dec
lock
and
adc
push
dec
aaa
adc
loope
movb
in
fistpll
rorl
mov
lds
or
jecxz
out
movsb
inc
jg
sbb
daa
in
or
mov
in
scas
unpckhps
insl
jmp
xor
in
cmp
sub
je
hlt
leave
outsl
fcmovne
pusha
or
outsl
adc
mov
call
or
push
and
push
frstor
das
or
dec
orb
subl
dec
js
push
sub
pop
int
in
sbb
or
add
and
sbb
add
push
call
sub
or
shlb
jae
andl
jae
adc
sub
aam
push
daa
inc
insl
shlb
mov
dec
outsb
or
mov
xor
mov
insb
xor
jne
xlat
je
and
aaa
adc
int3
pop
sbb
add
add
aaa
pop
sbb
repz
mov
mov
add
mov
fwait
dec
call
movsb
pop
ret
inc
data16
add
or
pop
jb
leave
insb
mov
lods
cmp
cmp
fcompl
nop
cmp
inc
or
and
xchg
in
repnz
cmp
inc
sbb
cmp
xor
xor
add
add
imul
push
cmp
add
and
push
mov
inc
int3
ljmp
std
out
sbb
xchg
sbb
xor
loop
cmp
sbb
pop
xor
dec
movl
add
pop
test
push
jecxz
mov
bound
dec
xchg
or
jnp
and
xor
sbb
push
leave
test
add
les
jge
rorb
sub
int3
sbb
or
adc
or
mov
and
sub
jl
cltd
jo
or
and
push
pop
jno
sbb
sahf
andb
sub
push
adc
dec
add
add
push
jbe
inc
loop
xlat
or
jns
sub
dec
adcb
jo
lods
mov
insb
add
popf
outsl
lods
scas
rorb
sbb
pop
mov
insb
jo
or
and
add
insb
xor
pusha
ret
push
xchg
repz
pop
fs
call
dec
add
call
imul
mov
add
add
xchg
fldlg2
mov
add
cmp
mov
sbb
sti
mov
clc
add
fwait
adc
orl
lds
or
insl
xor
adc
lcall
subl
add
xor
or
sbb
jne
sub
or
and
pusha
or
inc
sub
push
push
or
imul
cwtl
flds
xor
fisubl
sahf
outsb
push
in
lret
pop
sbb
mov
or
ret
mov
fs
or
popf
sbb
add
adc
xor
jo
je
adcl
dec
inc
arpl
fs
test
mov
inc
and
insb
sbb
cs
dec
pop
adc
cmp
push
mov
sbb
bound
mov
xchg
cmp
lods
mov
lea
dec
dec
cmpsb
sub
push
and
pop
sub
mov
sbb
dec
js
adc
mov
scas
adc
dec
mov
or
das
insb
add
or
stc
push
cmp
rcl
adc
ret
adc
and
cmp
fstpt
pop
insb
pop
inc
cmp
sub
scas
add
pop
xor
repz
inc
inc
lahf
xchg
xor
sub
popf
insb
dec
cld
push
jo
sbb
sbb
sub
xor
and
xchg
daa
push
dec
dec
mov
push
pop
inc
add
jg
movsl
pop
jl
cli
cmp
sbb
sbb
outsb
mov
or
cld
insb
add
cltd
xor
lds
or
adc
dec
xor
lret
add
movsl
cmpsb
mov
outsl
cmpsl
push
add
push
dec
and
sbb
and
and
mov
xor
test
sbb
adc
jecxz
cwtl
lret
cmp
fs
jg
sub
sbb
lret
push
xchg
add
jno
mov
adc
add
xchg
sbb
add
push
mov
lahf
je
pop
enter
add
push
or
dec
scas
mov
loop
stc
and
cmp
or
adc
xor
iret
or
pop
or
or
mov
outsl
jo
or
inc
sub
jl
xchg
sub
jg
rcll
add
lahf
popa
je
fst
pop
je
ja
or
aas
sub
ljmp
dec
cmpb
pop
js
cmpb
pop
xlat
pop
mov
pop
call
xor
xorl
or
dec
lods
inc
push
ja
shlb
sub
int3
pusha
pusha
rcrl
sbb
in
adc
add
or
pop
jbe
std
mov
inc
fnstcw
inc
jb
dec
mov
xchg
decb
sbb
sbb
add
jge
jb
pusha
scas
add
jecxz
dec
xchg
xor
addr16
dec
ss
add
push
shld
or
and
sub
add
fsubs
adc
xor
pop
lret
and
mov
lahf
std
js
add
adc
push
loopne
or
popa
popf
in
lock
cmp
dec
pop
pop
test
adcl
test
inc
add
subl
aas
cmc
orb
xchg
sarb
dec
xchg
dec
push
in
dec
les
lcall
or
or
sbb
jmp
imul
lock
or
jmp
call
jge
push
jno
mov
loopne
mov
daa
cltd
or
leave
ljmp
and
in
xor
mov
es
pop
fs
or
jl
sbb
and
sbb
cmp
cmp
xor
add
nop
lds
inc
jb
pop
call
and
add
inc
shl
push
mov
pop
movsl
push
int3
or
xchg
pop
test
lret
inc
rcrb
xor
cmpsl
mov
imul
cmpsl
lea
xor
lahf
xor
daa
arpl
stc
js
sub
and
inc
push
in
mov
daa
adc
cmp
shrd
lret
xor
or
add
push
pushf
testb
in
decb
add
mov
sti
or
in
sbb
fs
cmp
jae
cltd
push
and
inc
and
mov
and
lcall
outsl
mov
stc
pop
add
xor
in
pop
jae
pop
jecxz
xchg
out
mov
cmp
add
addl
imul
sub
pop
or
or
imul
popl
movsl
test
and
mov
cs
dec
push
ret
das
pop
add
sbb
or
lods
push
fwait
push
cmp
pop
jge
addr16
mov
rcll
push
lock
xchg
notl
sub
fbstp
sbb
mov
cmp
cmp
lods
mov
mov
push
or
inc
push
fdivrs
xor
xor
xor
je
icebp
cmp
sbb
mov
push
stc
movsb
rcl
jno
insb
sbb
mov
mov
test
lahf
shlb
pop
and
xor
and
mov
add
pop
or
lds
push
inc
subl
sbb
je
mov
jmp
add
add
or
mov
sbb
scas
sbb
hlt
or
push
ja
mov
jge
add
lcall
repz
out
mov
sbb
addr16
inc
mov
cmp
fs
xchg
or
push
cmp
ds
add
fs
rcl
inc
repnz
cwtl
add
add
add
ret
adc
mov
ficoml
sub
add
dec
adc
xchg
insl
pusha
scas
popf
sub
call
xchg
inc
ss
pop
adc
xor
mov
xchg
dec
cmp
cmp
sbb
pop
push
fs
mov
pop
movsb
scas
cmpb
cltd
or
test
insl
lds
mov
sbbb
push
sbb
cld
mov
inc
repnz
incl
add
push
cs
mov
adcb
adc
nop
jl
add
inc
dec
xchg
imul
or
addr16
mov
xchg
inc
sbbl
mov
inc
xor
mov
pusha
leave
lock
mov
sub
add
std
push
repz
fidivrs
adc
lock
jb
test
sbb
push
js
add
rclb
adc
mov
outsb
and
lcall
mov
fisttps
lret
mov
cwtl
out
les
out
in
or
lret
repnz
sub
pop
decl
jb
call
lods
mov
sub
cmp
push
jl
or
fs
xor
pop
push
jecxz
cmpsb
cltd
mov
call
or
in
repz
test
loopne
cs
jl
sti
lock
xchg
push
inc
and
adc
cld
nop
cld
adc
inc
ja
push
lahf
shll
add
adc
inc
or
pop
andb
test
mov
push
stos
mov
dec
rcrl
or
fwait
hlt
aas
add
popl
addb
sbb
push
push
sbb
lds
add
pop
sbb
mov
jne
add
test
sbb
sbb
xor
in
nop
sub
or
push
in
out
sub
add
fiaddl
xor
lods
sub
adc
xchg
lds
shlb
imull
lret
xchg
arpl
shrb
sub
inc
mov
stos
push
inc
outsl
dec
push
add
pop
pop
add
int3
mov
jg
sbb
sub
or
daa
dec
movsl
inc
pop
ficoml
aas
into
cld
clc
inc
sub
dec
or
pop
data16
aas
ljmp
jmp
adc
subl
iret
dec
enter
add
add
pop
inc
inc
dec
ret
cmpsl
fisubs
sbb
ss
and
lahf
imul
xor
xor
pop
ss
pop
insb
push
xor
ljmp
jle
shll
or
sbb
cmp
adc
pop
insb
int3
aas
cmp
adc
pop
push
adc
xor
pop
sbb
testl
dec
dec
aad
jne
push
push
pop
jne
pop
push
outsl
sbb
jne
xchg
xchg
loopne
adc
fcomps
fstps
and
shrb
mov
or
push
popa
pop
outsl
out
ret
shr
enter
and
pop
jb
or
sbb
xor
sbb
dec
leave
sub
and
lods
inc
dec
repz
fs
lcall
push
push
adc
in
lods
pop
xor
pop
cwtl
loop
les
cmovp
add
shrb
fs
xchg
rorb
inc
cmp
dec
adc
call
mov
mov
add
mov
sbb
out
movsl
lret
pop
pushf
fs
jo
jo
push
inc
add
sbb
repnz
or
cld
daa
sbb
enter
cmp
or
mov
or
inc
shrb
xor
push
movsl
inc
adc
mov
or
rcll
add
add
addr16
cmp
cld
and
lea
ss
adc
fidivrl
xchg
cld
xor
sbb
sbb
push
mov
jmp
leave
stos
sti
out
pop
lcall
movsl
sbb
in
mov
and
sub
sub
sub
std
push
add
cmp
sub
sbbl
mov
mov
add
dec
pusha
iret
sbb
add
pop
inc
pushf
add
lahf
adc
cmpsb
adc
add
add
jg
leave
add
inc
jg
cmc
xor
push
cmc
cmp
sub
cltd
fsts
jo
fs
insb
es
cs
pcmpgtb
cmp
sbb
dec
pop
std
out
xor
jbe
adc
pop
xchg
cmp
or
mov
cmp
add
fs
cwtl
lods
pop
adc
sbb
dec
xor
and
popa
setg
addr16
xor
pop
push
and
push
bound
mov
add
loop
cmc
movsl
jo
mov
add
sub
ds
add
jge
sub
xchg
xchg
aad
add
and
xor
nop
xchg
out
outsl
xor
push
mov
cmp
mov
ss
mov
sahf
mov
or
jmp
mov
mov
and
pop
sub
aas
bswap
or
push
add
mov
xor
psubsb
cld
pop
std
int3
mov
mov
sbb
cs
cs
or
icebp
jnp
lcall
add
mov
adc
testl
jecxz
or
rclb
js
mov
js
dec
push
movsb
fs
mov
leave
mov
sbb
cmp
inc
push
and
pop
fildl
cmp
inc
sub
and
fsubs
mov
mov
push
pusha
aaa
sbb
mov
popf
cmp
add
pushf
andl
xchg
cwtl
sbb
cmc
adc
aam
mov
inc
sbb
movsb
das
or
hlt
out
cltd
mov
insb
or
cli
add
cmp
adc
add
xor
and
add
xor
mov
arpl
add
fimull
sbb
cmpsl
and
add
add
add
aad
push
fs
dec
push
pop
pop
ret
and
pop
sub
repnz
dec
popl
in
push
mov
xor
mov
lds
adc
push
addl
into
add
sahf
sbb
xor
nop
and
leave
popa
daa
push
addr16
mov
addb
testb
movsb
inc
cwtl
cmp
inc
pop
cld
add
jp
gs
adcb
pusha
nop
inc
pop
rorl
jno
xchg
dec
inc
mov
or
enter
rolb
lods
pop
mov
dec
je
pop
inc
push
and
enter
pop
jecxz
adc
push
fldt
mov
or
inc
dec
cmpsb
xchg
pushf
enter
and
fwait
aam
dec
and
or
in
or
test
xchg
or
push
in
sub
and
std
push
inc
ret
xor
fcoms
sub
sbb
jg
mov
sti
xchg
xor
xchg
test
popa
inc
ja
and
sbb
pop
faddl
mov
ficompl
cmp
insl
iret
mov
mov
or
pop
cmp
mov
xor
ja
pop
sbb
cmp
dec
push
and
jo
xchg
or
es
int3
or
mov
loopne
dec
adc
sub
xor
punpckhbw
cwtl
push
outsl
in
add
lcall
daa
dec
pusha
add
int
out
fdivl
in
outsb
mov
mov
sbb
push
mov
adc
fsts
or
or
inc
repnz
js
cltd
mov
xor
ja
or
xor
lcall
in
pusha
sbb
push
sbbl
sub
and
inc
push
rdtsc
dec
mov
js
fcmovnb
cmp
fcompp
subb
xor
pop
pop
inc
dec
adc
cmp
fcmovne
and
sub
jbe
or
and
or
addr16
adc
sbb
ljmp
sbb
mov
or
sbb
pop
shrl
repz
push
lcall
dec
add
incb
lret
cmp
sbb
xchg
nop
inc
xor
data16
sub
mov
jl
call
ljmp
inc
xor
mov
push
pop
mov
sbb
xchg
js
push
js
pop
mov
pop
mov
mov
xor
pusha
xchg
inc
sahf
add
jnp
mov
fwait
shlb
push
cmp
aas
sub
pop
pushf
push
pop
adc
jnp
movntps
and
paddb
push
sbb
ror
mov
adc
xchg
imul
or
mov
in
sbb
mov
cmp
outsl
out
inc
dec
mov
pushf
movsb
mov
lret
dec
xor
insl
jno
add
sbb
cld
incb
mov
add
xchg
aaa
xor
or
adc
sbb
cmp
mov
or
push
xor
xor
test
push
cmc
xchg
leave
cmp
clc
push
xor
enter
and
jg
add
mov
xor
and
sbb
cmovl
popa
daa
adc
je
scas
xchg
aam
adc
sbb
add
adc
sub
ss
jbe
mov
in
daa
sbb
add
add
cmc
insb
mov
loop
xor
and
sbb
sub
xor
xor
jo
inc
cmp
enter
xor
push
mov
sbb
shlb
sub
dec
movsl
inc
dec
sub
pop
int3
inc
mov
int
adc
lods
xlat
clc
hlt
push
popa
sub
add
xchg
inc
or
shll
cld
lea
mov
or
popl
test
sbb
cmpsb
jmp
mov
js
int
jmp
xchg
pop
loopne
add
mov
or
pop
in
push
and
xor
loopne
mov
inc
inc
sub
xchg
addb
inc
and
lcall
sub
cmpsb
loope
mov
sbb
pusha
in
cmpsl
push
shll
xchg
lds
cmp
and
mov
data16
ljmp
dec
inc
add
std
adcl
inc
dec
addr16
adc
aaa
jae
mov
add
cmp
or
pop
inc
cmp
add
sbb
xchg
jl
addl
xchg
leave
add
cmp
or
rorb
sbb
lret
and
sub
mov
sahf
mov
adc
sbb
bound
xchg
cli
xlat
mov
in
xor
pop
ficoms
jmp
inc
inc
daa
int3
adc
fdivrs
cld
push
add
cmp
pop
add
push
sbb
pop
fistpll
cltd
xchg
cmp
jb
mov
push
xor
and
inc
and
lret
and
daa
insl
and
daa
mov
aaa
mov
leave
scas
addb
sarb
or
stos
push
adc
inc
cmc
inc
les
pop
xor
mov
add
je
add
daa
bound
dec
add
push
outsl
je
and
insl
bound
xchg
arpl
jo
fimull
add
add
out
daa
stos
jne
arpl
dec
gs
fidivl
push
outsb
inc
js
or
imul
and
add
mov
mov
cmovl
push
insl
or
testl
andb
inc
xor
adc
mov
jg
push
dec
jae
pop
ja
popa
jb
insl
mov
outsb
addr16
jnp
mov
jb
pop
push
popa
sub
sub
ss
insl
inc
jb
rclb
mov
insb
gs
and
test
pop
push
addb
popa
js
dec
and
cmp
sub
imul
outsl
iret
adc
nop
orb
repz
inc
movsb
or
pushf
je
pop
shrb
pop
daa
dec
and
gs
sbb
aas
mov
sub
or
insb
call
fsts
jnp
pop
lods
imul
insb
add
subb
popa
mov
add
mov
add
pop
outsb
and
mov
loopne
dec
lods
test
je
sbb
and
xor
mov
mov
xor
subb
sarb
cld
pusha
pop
mov
xchg
or
inc
sub
xchg
inc
cltd
call
pop
es
and
lahf
push
or
sub
fwait
cmp
sub
sub
ss
add
inc
aad
add
cmp
add
sub
cs
pusha
add
and
pop
cmp
pushf
inc
or
xor
sti
mov
scas
mov
cmp
jmp
shrb
cmp
pushf
adc
je
inc
mov
pop
add
xor
ja
adc
pop
dec
ret
sbb
or
xor
xchg
push
sbb
or
push
sbb
pop
mov
outsl
xor
sbb
cmp
dec
pop
pushf
inc
jo
int
cld
hlt
decb
hlt
hlt
sbb
ss
lock
xlat
push
aas
pushf
cmp
push
add
dec
push
jae
cmp
add
xchg
push
icebp
sub
dec
pop
daa
in
dec
inc
imul
sub
dec
pop
xchg
movsl
iret
and
or
call
ss
scas
and
jbe
fldcw
mov
cmp
cmp
xor
inc
imul
add
sub
push
cmp
mov
xor
fdivl
hlt
inc
lcall
inc
daa
inc
pushw
and
cmp
je
jle
mov
add
rorb
pop
repz
aad
cltd
daa
ljmp
push
push
cs
mov
add
dec
out
pop
and
pop
dec
mov
and
and
xor
add
push
or
xor
ja
fmul
pop
adc
out
jmp
fiaddl
mov
enter
push
sbb
mov
xor
or
or
xor
shrb
inc
outsl
push
xchg
cmp
clzero
in
pop
adcb
stc
cmpsl
and
loop
fsubl
mov
pop
aam
sbb
add
cmc
add
inc
pop
mov
mov
sbb
add
inc
cmp
inc
sub
push
push
xor
or
and
xlat
cmp
sbb
xor
ds
addr16
and
out
push
int
cmp
lret
xor
test
xor
adc
xchg
xor
or
cmc
pause
nop
sub
sbb
sub
and
std
sbb
fistpl
lock
orb
in
sbb
pusha
test
add
sti
popa
icebp
xor
or
mov
fs
mov
daa
sub
sub
and
pop
jno
arpl
les
add
jo
add
daa
or
xor
xor
test
stos
inc
loope
xor
xor
jbe
scas
sahf
dec
xor
and
xor
lods
enter
jae
sub
sub
sub
sub
dec
dec
fucom
jmp
mov
sarb
xlat
dec
sub
or
and
sub
sub
xorb
shrl
fcoml
bnd
das
flds
dec
jo
lea
jo
mov
imul
arpl
pop
sti
imul
cld
mov
or
xor
mov
mov
sbb
pop
xor
or
add
cmp
je
push
into
or
mov
sub
push
pop
mov
and
add
lcall
sbb
push
sarb
adc
fwait
mov
lcall
dec
adc
lahf
or
adc
lods
xchg
pop
pop
out
das
sbb
sbb
jo
adc
push
xchg
shrb
xor
sub
adc
mov
xor
sub
lods
jo
insb
xchg
inc
es
pop
inc
dec
addb
loope
bound
imul
add
mov
std
daa
mov
mov
rcrb
sub
add
inc
jo
mov
and
or
push
add
cmpsl
jns
scas
sti
ret
pop
fistps
insb
addl
add
ds
cmp
inc
filds
and
mov
xor
dec
insb
fistps
adc
stos
jmp
push
sub
rol
inc
imul
psubd
add
pop
sbb
or
and
out
jo
add
dec
pop
dec
jg
nop
imul
cwtl
pop
dec
add
outsl
cmp
mov
add
insb
push
mov
mov
xchg
jo
jb
cmp
fcmovnu
into
paddusb
jo
jno
subl
and
or
mov
leave
add
ds
jl
sub
pop
add
stc
sub
nop
jbe
add
in
cmp
push
jnp
jb
fs
adc
jb
jmp
adc
and
add
loopne
add
clc
adc
or
mov
adc
push
add
mov
xor
mov
out
adc
pop
popf
inc
por
aad
add
pop
add
stos
and
or
pop
or
adc
sub
dec
add
sbb
stos
push
mov
add
cmc
add
xor
xchg
faddl
nop
mov
ss
lock
lcall
ds
push
and
mov
test
cwtl
pop
cmpsb
and
add
jp
push
popa
xchg
or
rorb
incb
push
mov
inc
ficoml
enter
inc
sub
and
repnz
mov
push
adc
inc
int
mov
sbb
sub
lods
popf
xchg
lcall
prefetch
mov
sbb
sbb
ss
and
bound
xchg
or
fistpl
dec
jp
pop
dec
lahf
mov
mov
add
adc
inc
mov
pushf
add
adc
and
popa
sbb
mov
push
dec
les
enter
fxch
nop
icebp
adc
testb
ficomps
xor
push
shlb
pop
sbb
sbb
ret
outsl
mov
or
sbb
add
push
sbb
es
pusha
cld
inc
inc
sbb
add
outsb
sub
inc
dec
push
pop
andb
dec
mov
stos
std
imul
call
test
adc
repnz
fmull
rolb
sub
test
add
insb
pop
jne
stc
ss
pop
adc
add
inc
test
cmp
insb
dec
xor
or
jmp
jo
adcb
push
cmp
push
push
and
or
sub
shlb
adc
sub
in
add
mov
mov
js
js
xor
stos
and
add
imul
int3
xchg
pop
cs
jl
aam
jmp
adc
mov
push
xchg
pusha
or
rol
ret
aas
fwait
pop
stos
or
inc
das
sbb
jp
dec
sbbb
sub
add
stos
insb
pop
adc
sbb
out
fwait
pop
inc
enter
sub
and
enter
add
cmp
mov
lods
cmp
test
push
adc
mov
nop
int3
dec
xchg
add
nop
and
movsb
push
inc
pop
add
pop
scas
rcrb
sahf
xchg
add
add
nop
add
add
or
push
mov
lea
mov
gs
call
or
gs
outsl
push
mov
dec
sarb
sbb
leave
fs
sbb
daa
aam
xchg
dec
adc
cmp
inc
push
fstps
pop
and
sbb
adc
mov
inc
ficompl
out
inc
and
rcrb
adc
and
inc
cmp
or
and
iretw
jecxz
adc
add
or
pop
or
lret
or
add
cmpsb
mov
sbb
cmpsb
notb
mov
pop
xchg
push
cmp
testb
and
add
adc
ret
add
adcl
xor
pop
dec
insb
scas
pop
jge
dec
cs
inc
std
jge
in
and
addl
imul
loop
xchg
jl
shl
and
lret
add
lods
incb
xchg
loope
and
or
das
sub
outsb
inc
add
push
add
or
cmp
cmp
jne
sbb
decb
xor
shll
or
sub
aam
adc
sbb
fnstenv
aaa
rcll
sbb
inc
enter
je
cmp
pusha
and
sub
sarb
js
cld
pop
adc
pop
mov
insb
insb
push
push
and
adc
cmc
sbb
add
aas
pop
sbb
pop
xor
push
fwait
jl
xor
mov
daa
xchg
jo
insb
and
dec
cmp
push
add
test
test
pop
cmp
loope
adc
jmp
push
cmp
dec
pop
and
int3
shlb
adc
sbb
addr16
xor
rorl
or
ja
adc
add
or
fmuls
or
mov
push
or
sbb
or
xor
sbb
xor
adc
jne
pop
sub
repz
outsb
sbb
xchg
and
decb
lods
mov
in
imul
lods
xor
push
adc
andps
aaa
daa
divb
into
add
add
push
pop
lret
mov
inc
mov
xchg
subb
stc
shrb
xor
add
imul
sbb
adc
push
mov
test
pminsw
inc
sbb
jae
xor
or
cmp
cld
enter
movsb
fchs
xor
arpl
ret
mov
xchg
or
pop
rorl
in
imul
inc
adc
mov
test
hlt
cltd
mov
mov
sub
outsb
insb
test
pusha
pop
xor
xchg
sbb
mov
dec
xor
nop
loope
push
je
sub
and
push
inc
jae
cmp
xor
pop
xor
jge
xor
pop
push
into
add
nop
or
popf
dec
add
add
mov
push
filds
or
push
inc
jae
and
pop
cmp
add
add
dec
inc
sub
sbb
loope
pop
mov
cmp
inc
inc
je
fldt
adc
mov
mov
xlat
mov
inc
cmp
andb
inc
pop
dec
mov
adc
sbb
add
ss
cltd
imul
dec
add
subl
sub
inc
sbb
cmp
scas
imul
or
lock
pusha
mov
movsl
shl
inc
int
mov
pop
pusha
xor
and
fcmovnu
xchg
or
sub
pusha
pop
lods
xor
imul
push
jo
bound
std
pop
cmp
pop
into
lds
add
xchg
add
or
or
subb
mov
insb
cmovns
xchg
pop
gs
sub
sbb
sbb
cmp
mov
mov
insb
or
pop
cmc
push
ljmp
out
add
roll
lar
daa
lds
mov
je
add
xchg
inc
out
aas
pop
ret
dec
fcoms
inc
iret
xchg
or
dec
mov
movl
cwtl
push
inc
sub
xor
cmp
inc
push
mov
rcl
inc
int
test
outsl
mov
add
pop
mov
inc
pop
add
lret
push
sbb
or
inc
stos
sub
loopne
sub
pusha
out
push
sub
call
sub
sbb
fsubrs
mov
push
testb
add
add
inc
sbb
xor
xor
or
ds
mov
push
push
pop
pop
enter
fwait
add
addl
sub
ret
rclb
shlb
mov
or
outsb
fdecstp
xor
xchg
test
adc
pop
xchg
or
mov
sub
mov
sub
dec
and
dec
rcrb
push
into
testl
mov
das
push
and
inc
popa
in
add
insl
int
xchg
and
dec
rcll
stc
push
repnz
ljmp
mov
xor
inc
mov
push
sub
es
adc
sub
fdivrs
ss
nop
jmp
das
sbb
sub
inc
or
pusha
or
in
cmp
mov
cltd
stos
cmpsb
sub
and
test
movsb
mov
push
es
imul
lcall
out
jb
mov
sub
repz
fisttpl
push
aad
cmp
in
mov
sub
sbb
rcrb
subl
xor
sub
popf
out
or
insb
xor
mov
je
push
movsb
ret
and
pop
mov
lock
xor
push
jbe
pop
paddb
adc
pop
ss
lret
popf
fnstenv
inc
imul
sbb
xor
push
mov
or
test
xchg
xchg
pop
dec
push
lods
add
mov
repnz
dec
dec
out
ja
dec
xor
sbb
sbb
push
shl
sti
adc
and
in
pushf
sbb
inc
inc
adc
mov
sarb
aas
addl
jo
xor
mov
pop
jne
test
roll
nop
mov
add
lods
xor
and
inc
or
pusha
inc
or
inc
cmpsl
sbb
inc
mov
lods
xchg
repnz
or
push
call
jnp
or
divl
dec
and
push
and
adc
cmp
mov
leave
jae
jo
call
xor
call
sarb
das
inc
push
add
imul
add
cmp
inc
inc
iret
lods
test
nop
add
fs
add
je
and
nop
cmp
adc
xor
stos
int
scas
push
inc
sub
dec
add
mov
loop
push
ret
scas
mov
xchg
pop
rclb
xor
cmp
adc
xchg
xor
pushl
push
call
ljmp
dec
mov
loop
pop
sbb
add
or
xchg
adc
push
outsl
mov
mov
jb
leave
pop
inc
pop
xor
repnz
leave
and
push
sbb
leave
enter
inc
inc
fistl
jae
pop
sub
inc
lock
ja
and
outsl
inc
dec
fs
and
je
pop
xor
insb
or
sub
pop
pop
loop
in
push
or
subb
sub
sub
aas
mov
loope
cmp
decl
xor
cmp
dec
or
pusha
sub
pop
add
dec
fcomps
addr16
pusha
lds
adc
add
adc
cltd
ret
inc
add
mov
or
dec
mov
add
je
stos
jmp
push
inc
pop
xor
ljmp
pop
pop
and
call
sbb
fldenv
dec
pusha
adc
mov
or
or
push
push
or
lcall
dec
jae
nop
jns
push
pop
push
push
pop
push
in
push
inc
push
mov
adc
pop
test
mov
adc
neg
push
lods
add
push
fisubl
nop
inc
inc
inc
xor
inc
pop
and
pop
daa
fbstp
inc
sbbb
mov
and
push
add
inc
inc
outsb
push
bound
leave
sbb
pop
mov
stos
rcll
aas
enter
cmp
mov
dec
sbb
mov
sub
add
mov
mov
cmp
jle
insb
mov
leave
add
into
insb
xor
mov
lret
push
mov
int3
mov
fwait
xchg
add
sub
push
stos
popa
xchg
lret
int3
cmp
jae
push
adc
adc
add
iret
ret
push
sbb
cmp
fmull
and
mov
add
jo
push
push
pop
das
rolb
sub
add
fwait
push
hlt
pop
jmp
sti
out
pushl
cli
call
in
cmp
cmc
add
cmp
and
xor
add
subb
add
in
push
add
cmp
add
add
clc
add
push
testb
sbb
push
mov
mov
cmp
or
sub
pop
or
push
mov
mov
xor
lcall
cmpsl
adc
sbb
addr16
and
xor
sbbb
lret
and
sbb
xor
cmp
hlt
lods
cmp
push
lcall
jbe
push
jb
pop
cmp
jle
xchg
mov
lea
or
mov
or
lods
mov
mov
and
stos
mov
sub
fs
xchg
add
add
sbb
or
inc
adcl
or
fisttpll
dec
pop
push
sbb
les
mov
and
loopne
or
mov
roll
outsb
pop
ljmp
or
scas
loope
mov
arpl
shlb
xor
push
inc
cmp
xchg
nop
sub
or
in
dec
and
sbb
mov
dec
cmp
pop
sti
xor
fcmovu
add
enter
pop
adc
imul
add
cmpsb
sti
pushf
adc
sub
mov
cwtl
loopne
sub
cmp
add
jo
pusha
movsl
mov
mov
xor
and
xor
mov
sarb
mov
mov
fisttpll
movsl
mov
mov
lcall
xor
adc
or
push
xor
cmpsb
push
inc
and
aam
cmp
fstps
adc
add
pop
sbb
mov
and
mov
push
inc
jle
sub
or
sub
fcmovbe
add
sbb
add
mov
mov
or
test
out
lds
sub
adc
cmp
xchg
lret
sub
inc
ss
adc
inc
sbb
in
es
fsts
xor
sbb
movsb
jns
cmp
mov
and
xor
jp
or
push
and
rcll
pop
stos
push
dec
in
or
mov
xor
xor
xor
jo
inc
adc
adc
jno
les
addl
pop
mov
in
jo
sub
push
imul
cmp
add
mull
faddl
dec
and
add
mov
sub
sub
add
xor
adcl
jo
pop
and
or
dec
pop
cmp
pop
or
or
test
xor
add
add
xor
je
test
and
adc
pop
dec
push
and
pop
mov
addl
or
stc
pop
add
das
or
test
int3
dec
std
add
testl
lahf
mov
shrb
push
les
stc
adc
shrb
scas
or
xchg
or
andb
and
or
add
xorb
sbb
daa
or
push
shlb
enter
incl
call
dec
mov
push
xor
lock
nop
or
shlb
sbb
mov
mov
mov
mov
dec
xor
inc
iret
adc
xor
and
mov
adc
xor
add
pop
inc
xchg
jnp
push
jecxz
movd
push
mov
ret
inc
enter
pop
mov
cmpsb
push
or
movsb
xor
add
xorl
inc
inc
js
adc
pop
dec
sub
dec
dec
in
stc
in
incb
mov
testl
leave
ret
xor
outsl
ret
scas
dec
fmuls
xor
sarb
push
inc
imul
add
xchg
data16
rclb
add
roll
ljmp
or
das
xor
mov
mov
add
sub
cmpsl
mov
cltd
movsl
push
and
ret
adc
dec
push
and
orb
inc
push
es
and
mov
push
push
repz
fdivp
inc
cmp
add
lret
adc
or
sbb
and
or
push
push
in
lret
add
clc
in
and
or
push
xchg
pop
jae
je
sub
inc
orl
and
push
add
add
lods
push
and
icebp
movsl
xor
nop
add
push
inc
push
and
jb
push
push
jb
pop
jb
or
mov
rolb
call
add
loopne
dec
fdivl
xchg
sub
fcom
enter
add
inc
aaa
int3
and
sbbl
enter
inc
mov
sbb
sub
rcl
imul
lahf
xchg
mov
push
pop
push
inc
cmp
xor
imul
aas
and
sub
clc
push
cs
add
mov
mov
enter
addl
jo
sbb
xor
aaa
add
add
lds
dec
mov
pop
fadds
aam
lcall
ror
cltd
cmpsb
mov
lds
adc
andl
out
ret
sbb
add
and
add
mov
adc
mov
adc
inc
xchg
pushf
add
xchg
xor
mov
daa
mov
stos
xor
cld
sbb
pop
or
fistps
cli
xor
add
and
lods
sub
dec
int
inc
xor
push
and
cmp
push
fiaddl
sbb
leave
roll
adc
or
hlt
nop
das
lret
sbb
adc
insb
sbb
adc
or
int
rolb
inc
adc
and
movsb
pop
xchg
push
inc
pop
int
out
mov
push
add
xor
sbb
call
mov
pop
nop
pop
nop
sbbl
push
push
xor
cmp
push
pop
push
cmp
and
dec
incl
pop
sub
jmp
push
outsb
popa
es
adc
popf
add
or
push
mov
and
dec
add
lret
and
lahf
push
daa
sub
push
insl
pusha
add
dec
ja
adc
in
push
in
add
xor
inc
icebp
mov
leave
adc
mov
cmpsb
and
pop
js
leave
add
jmp
adc
sub
adc
mov
mov
mov
cmp
mov
cs
jb
pop
push
insl
add
stos
jo
in
or
push
xor
add
push
jno
adc
jg
js
pushf
std
cli
scas
icebp
pop
sub
hlt
pop
mov
das
or
out
pop
dec
xchg
mov
or
or
add
and
mov
cmpl
or
lea
jmp
es
and
adc
cmp
pop
into
or
push
xor
es
es
sub
pop
es
es
and
pop
es
es
sbb
and
es
push
sbbl
pusha
leave
and
add
or
fisubl
push
js
imul
xchg
shll
xchg
inc
mov
cmp
in
push
xchg
movsl
or
inc
push
bswap
ss
inc
jns
xchg
or
adc
das
ja
pop
sub
xchg
aaa
jl
in
add
inc
or
xor
sub
imul
bound
lock
test
daa
or
nop
gs
push
push
add
xor
inc
inc
push
aas
xchg
add
pop
sysexit
gs
xchg
outsl
adc
sbb
nop
adc
adc
pop
inc
push
inc
scas
adc
xchg
aaa
ret
adc
sbb
nop
fcoms
push
fs
xor
add
pop
add
sbb
enter
sub
dec
xor
and
inc
sbb
push
mov
or
sbb
imul
and
inc
sbbb
xchg
push
inc
mov
xor
and
mov
cmp
and
lret
enter
and
xor
ss
and
adc
adc
gs
xchg
sub
sbb
add
push
cmp
fs
xchg
xchg
dec
jl
cmp
sbb
cmpsb
pop
inc
push
sub
mov
add
sub
sub
insl
daa
in
cld
sub
xor
lret
cli
das
sti
lsl
xor
lret
jae
imul
xor
in
cli
sub
xor
mov
repnz
xor
xor
loopne
add
add
xchg
adc
add
add
pusha
jb
jecxz
stc
pinsrw
or
or
add
sub
shll
fistpl
mov
pshufw
mov
cli
sti
pop
lock
stc
mov
fld
rcrb
pop
scas
add
outsl
inc
ret
inc
call
mov
lds
fstpl
insb
cld
inc
jno
pop
push
mov
inc
je
or
sbb
nop
insl
or
outsb
push
in
and
or
jns
outsl
int
sbb
adc
xor
add
nop
out
rorl
repnz
mov
test
in
mov
insb
inc
mov
std
inc
loop
adc
push
ret
pop
mov
add
and
mov
cmp
and
repnz
mov
mov
lea
movsb
rolb
fcmovnbe
pushf
pushf
ret
inc
dec
lahf
cmp
negl
call
mov
cwtl
cwtl
ljmp
inc
in
jecxz
xor
das
and
dec
mov
or
xor
stos
push
add
jb
outsb
stos
inc
add
mov
push
inc
sahf
sbb
nop
call
add
add
xchg
add
sahf
out
dec
pop
add
xchg
dec
and
cmpsl
nop
mov
mov
notl
xchg
xchg
mov
subb
popl
inc
xchg
pusha
adc
jge
xchg
cmp
sub
sahf
add
adc
and
cmp
cmp
adc
xor
and
ljmp
push
cmp
xor
call
or
in
sbb
insl
imul
data16
sub
inc
jle
je
out
es
jns
or
mov
add
sbb
inc
or
cltd
mov
pop
ja
faddl
dec
adc
inc
fwait
fs
lock
ret
add
or
or
pop
push
stos
js
stos
add
addr16
mov
adc
cmp
insl
xor
dec
xor
jo
or
decb
aad
popa
lret
pop
or
gs
fdivs
push
jne
cmp
adc
adc
cmpsl
ret
sbb
mov
pushl
in
cmpsl
sbb
jnp
or
insb
mov
sbb
dec
popa
mov
add
sub
jg
stos
or
movsb
add
loopne
add
loop
add
pop
jae
add
adcb
add
shll
inc
jnp
and
xor
push
dec
xor
add
add
and
jb
lock
pop
in
mov
push
inc
flds
dec
or
dec
in
rorb
inc
je
xor
rorb
xchg
inc
cmp
call
sub
sub
and
test
mov
cmp
sbb
and
push
sbb
add
push
dec
inc
fsts
enter
add
cs
jbe
mov
pop
jl
and
add
nop
add
inc
inc
push
add
nop
add
orl
mov
ss
shlb
std
and
test
push
add
mov
push
inc
cmp
inc
aad
adc
mov
adc
test
xchg
xor
mov
mov
je
inc
inc
add
add
lcall
push
lret
sub
or
or
rolb
shll
cmp
or
aaa
add
add
sbb
mov
inc
inc
aam
sbb
or
scas
sbb
and
xchg
add
pop
roll
stos
icebp
sahf
ljmp
add
mov
or
inc
jb
les
jo
leave
mov
pop
loopne
loop
push
sub
sub
push
add
adc
mov
lods
nop
xor
push
xchg
sub
add
arpl
add
or
icebp
mov
hlt
and
inc
lds
ja
les
adc
into
and
mov
adc
sbbl
or
sahf
sub
in
cld
lock
dec
add
into
nopl
jb
cmpsb
fs
dec
pop
or
ds
fmull
mov
mov
jb
add
mov
pop
xor
xchg
add
jo
dec
fs
or
enter
inc
jno
add
xchg
cmp
add
add
xchg
pop
cmp
inc
jae
test
xchg
xchg
inc
daa
inc
sub
test
push
inc
pop
inc
ss
into
pushf
inc
add
bnd
xchg
dec
pusha
and
movsb
addr16
or
and
int3
sbb
adc
mov
sbb
add
ja
sub
or
jge
sbb
add
xchg
shlb
fnsave
das
scas
push
add
ret
mov
jbe
mov
dec
jo
mov
loope
lahf
mov
jge
sub
sbb
adc
cmp
and
loop
xor
arpl
lds
and
add
or
inc
test
or
popa
daa
hlt
jg
push
jns
add
and
icebp
pushw
outsl
push
add
add
dec
loop
add
fldenv
push
imul
xchg
push
jno
sub
add
add
cld
fldcw
adc
sarl
xchg
cld
insb
add
jo
inc
pop
jnp
xor
and
filds
push
add
jb
scas
or
and
push
and
xor
or
or
inc
sahf
add
xchg
nop
sar
add
sbbl
sti
pop
lea
sti
cmp
xchg
mov
adc
or
mov
xchg
enter
pop
sub
arpl
xchg
or
pop
xlat
jle
imul
out
cmc
les
movsl
add
arpl
scas
inc
int3
inc
movsb
test
pop
push
imul
lock
arpl
pop
stos
pushf
cld
or
push
out
or
sbb
jb
test
xor
inc
mov
add
add
xor
xor
add
add
into
sub
pop
or
std
movsb
add
and
push
pop
add
lock
xor
imul
insl
inc
mov
cld
insb
xchg
xor
push
sti
mov
sub
ret
xchg
inc
nopl
push
add
xor
adc
stos
adc
dec
ljmp
int
hlt
sub
inc
lcall
lods
add
sti
lods
inc
ss
pop
push
or
int
xor
ret
or
pop
fwait
or
jb
mov
in
sub
pop
add
add
aam
es
adc
stos
ljmp
add
add
outsb
imul
add
sbb
and
adc
lcall
sbb
dec
aam
pop
dec
iret
cmp
shrb
jp
adc
fmuls
and
outsl
dec
pop
mov
mov
sbb
sbb
dec
push
imul
pop
mov
xor
mov
pusha
jg
mov
xor
dec
sbb
xor
push
mov
xchg
je
pushf
call
inc
enter
jb
push
add
incl
xchg
add
and
lock
sar
cmp
nop
inc
je
imul
push
xchg
cmc
mov
or
insl
pusha
inc
test
js
lret
iret
icebp
mov
repnz
sub
lock
loopne
add
pop
in
bound
ficoml
inc
cs
sub
ret
xchg
sub
dec
sub
and
stc
sbb
add
nop
add
add
fwait
xchg
leave
es
add
inc
add
add
mov
mov
cmp
sub
fcomps
sbb
pusha
mov
orl
dec
inc
xchg
push
fistps
mov
clc
xlat
cmovge
cld
or
add
popa
add
mov
popa
sbb
inc
icebp
cmp
sbb
cmp
aas
stc
pusha
mov
add
sbb
decb
adc
add
or
add
add
adc
lds
add
sbb
pop
jecxz
mov
fmuls
or
fstl
push
inc
dec
push
mov
cmp
movsb
fldl
test
dec
or
jmp
inc
lret
outsb
or
fsts
mov
in
or
popf
out
sub
pop
pop
pop
xchg
and
sbb
inc
pop
and
lret
and
adc
xchg
je
dec
add
sti
mov
fisttpll
xor
or
mov
pop
sub
and
aaa
adc
dec
push
adc
stos
add
sbb
lcall
mov
test
pushfw
add
or
rorl
enter
and
add
mov
pop
cs
pop
xor
daa
das
adc
mov
dec
call
arpl
or
adc
push
add
ljmp
pusha
lods
sbb
cld
mov
cwtl
mov
or
aaa
mov
sti
mov
sahf
jbe
sbb
cmp
jp
das
pusha
push
inc
or
enter
inc
xchg
fildll
lcall
lcall
mov
pmulhuw
faddl
js
push
mov
cmp
push
jge
inc
adc
cmp
mov
xor
add
xor
in
movsb
xor
and
lods
cltd
nop
add
sbb
add
sbb
or
call
fldcw
sbbl
jb
add
lock
stos
dec
enter
call
mov
ss
mov
adc
add
bswap
decb
sbb
xorb
lock
lods
test
imull
sbb
cltd
nop
cmp
insb
jo
scas
test
insb
pop
xorb
xchg
cltd
or
sbb
in
es
xchg
jne
insb
inc
sbb
ds
inc
sbb
stos
jae
add
decl
and
stos
and
inc
sub
and
xor
addb
mov
ljmp
mov
mov
dec
dec
jno
cmpsb
xor
maskmovq
mull
movsb
gs
and
aaa
pop
xchg
mov
jnp
or
dec
cmp
dec
dec
ds
and
cmp
sub
push
dec
push
cmp
sub
cwtl
inc
or
shrl
add
cli
mov
xchg
sti
or
gs
gs
or
pop
jo
mov
xchg
or
push
or
gs
gs
pop
pop
push
pop
fs
gs
sbb
lret
fs
mov
aas
fwait
dec
add
and
and
sbb
mov
enter
orl
cmp
push
mov
mov
sub
sub
mov
mov
and
and
mov
xchg
sub
or
push
adc
adc
or
push
fs
cmp
add
ds
and
cld
clc
or
leave
xor
xor
add
and
xor
xor
adc
or
xor
xor
and
inc
leave
xor
xor
push
fdivrs
jbe
pop
xor
shlb
xor
xor
pop
enter
dec
dec
ret
sar
pop
push
aad
cmp
pusha
mov
jne
mov
je
adcl
push
out
test
push
test
mov
lods
or
ret
aam
pop
test
adc
xchg
adcb
js
add
pop
dec
aas
add
pop
sbb
pusha
movsl
xlat
js
add
cmp
scas
push
mov
dec
pushf
std
outsb
jno
jg
push
xor
jns
pusha
pop
inc
add
pop
cmp
dec
lock
push
dec
xor
orb
cld
enter
enter
xor
sbbl
enter
cmp
ret
mov
or
pop
or
sbb
push
sbb
and
add
and
test
inc
push
in
pop
pop
sub
or
pop
mov
xor
or
iret
add
jp
es
nop
pop
test
and
js
and
sbbl
pop
lods
mov
mov
adc
adc
pop
sub
adc
sub
fs
push
xchg
add
dec
sub
mov
xor
push
shld
dec
dec
add
push
push
mov
insb
or
sbb
cmp
jnp
in
jno
lcall
inc
sahf
cmp
dec
cs
cs
adc
nop
dec
dec
jo
fcoms
dec
jo
and
xchg
dec
nop
mov
and
jo
jbe
dec
sbb
mov
sbb
or
xchg
insb
and
inc
scas
xchg
sub
pop
cs
or
mov
jle
pop
or
or
adc
incl
xor
mov
xor
das
sbb
xchg
mov
push
jo
out
jo
cmp
sbb
addl
dec
test
mov
pop
dec
mov
or
add
or
or
out
jl
pop
sub
mov
inc
sbb
cmp
hlt
lock
iret
out
in
call
mov
pusha
and
sbb
push
sbb
pop
mov
lock
fs
add
adc
and
mov
pop
sbb
call
adc
add
sbb
or
outsl
cmp
push
push
in
sub
sub
je
adc
jl
add
xor
shll
mov
mov
adc
pop
xchg
aaa
add
push
movsb
add
push
ret
es
adc
scas
push
or
fdivrs
and
sbb
xorl
push
filds
add
sbbl
lods
adc
in
add
add
test
sbbl
push
inc
xor
in
mov
pop
mov
push
leave
test
add
inc
sbb
dec
inc
addl
pop
imul
xchg
add
cltd
adc
cwtl
add
ret
sub
es
xor
adc
inc
or
add
and
clc
xor
andb
sbb
xor
jb
adc
insb
pop
xor
push
fsubrs
lcall
out
cmp
push
adc
xor
gs
adc
fstps
pop
mov
xchg
and
sub
cs
das
xor
jmp
decb
nop
add
test
add
test
sbb
call
in
pusha
and
cwtl
pop
xchg
shrl
rcll
aam
pop
movsb
mov
add
and
lods
or
test
and
sub
mov
adc
or
punpckhdq
outsb
or
insb
mov
test
and
jo
or
je
js
mov
add
sbb
cmp
push
call
push
sub
test
xlat
push
inc
popf
std
imul
and
jnp
ja
xor
adc
and
sbb
add
sbb
or
and
pop
adc
loopne
ss
xorb
sub
xchg
adc
add
adc
xchg
cmpsb
xorb
dec
mov
xor
es
mov
pop
shll
cli
lcall
lods
sbb
mov
stos
mov
clc
and
sub
adc
xchg
mov
add
add
gs
popf
and
into
repz
daa
aas
pop
aam
nop
shll
jle
lahf
aam
sbb
xor
in
loopne
int
loopne
sahf
loop
and
add
mov
inc
and
es
inc
mov
sbb
fwait
out
mov
and
add
cmc
pusha
mov
xor
xor
or
push
push
inc
adc
aam
sub
pop
or
aas
add
fistpl
add
cmpsl
sbb
push
mov
movsb
or
pop
xchg
mov
cs
cs
or
adc
mov
test
mov
push
and
nop
add
add
xchg
or
add
mov
inc
mov
cld
loopne
imul
dec
push
stc
adc
or
xchg
inc
push
or
lods
nop
and
cs
or
imul
cmpb
movsb
sbb
std
sti
push
mov
jmp
and
fs
pushf
imul
push
add
nop
or
sub
or
rolb
pop
xor
sbb
add
insb
or
and
jbe
push
sub
das
sbb
mov
push
mov
leave
or
cmp
popa
push
pushf
inc
aam
pop
pop
dec
pop
lret
sbb
push
or
lods
mov
push
insl
insl
mov
push
adc
adc
test
push
stos
push
adc
les
out
push
dec
fcoms
pop
mov
xor
sahf
aaa
rclb
enter
adc
je
and
sbb
ret
dec
sbb
aas
mov
adc
ds
movsb
add
cmovo
call
adc
mov
mov
sub
or
es
je
pop
es
and
pop
jae
les
xchg
and
aaa
add
adc
lcall
inc
jge
sub
inc
mov
shr
cmp
xor
push
ficompl
xorb
mov
inc
pop
xor
sbb
add
pop
sub
sbb
dec
shlb
jns
jg
xor
ss
push
in
lcall
in
inc
add
inc
push
in
push
inc
xor
fcompl
xorl
je
add
addr16
das
mov
cltd
in
dec
add
cld
add
in
cmp
push
pusha
mov
add
int3
mov
shll
popa
stc
es
add
int3
xor
or
and
aaa
cmp
inc
sbb
lods
adc
jno
fldl
dec
dec
or
fs
inc
jb
aaa
push
ja
daa
rorl
jb
pop
dec
inc
add
pop
jb
es
jb
pop
jb
inc
push
add
inc
or
xchg
fcompl
cmpsb
inc
adc
rorl
xchg
cmp
mov
cmp
sti
push
cmp
fadds
or
inc
dec
adc
push
dec
add
loopne
push
daa
inc
cmp
iret
rclb
inc
push
mov
adc
mov
xchg
adc
adc
scas
and
cmpsl
daa
xchg
pop
inc
or
inc
inc
fcoml
aam
adc
leave
sbb
shrb
push
sbb
mov
and
sbb
pusha
pop
sbb
adcb
or
dec
add
mov
cmpsl
dec
jge
add
push
cmp
inc
dec
adc
inc
xchg
pushf
test
add
enter
icebp
nop
push
jb
movb
cmpsb
lds
dec
mov
adc
jae
push
and
mov
adc
push
stos
arpl
adc
es
add
inc
into
sarb
xor
xor
xor
adc
fcom
nop
add
nop
ror
enter
sbb
sarb
mov
or
lods
xor
hlt
rolb
out
movsb
sbb
mov
and
pop
and
jnp
repnz
or
faddl
sub
lods
sbb
mov
ret
add
inc
rol
mov
dec
jge
cmc
dec
insb
pusha
mov
or
push
dec
les
or
sub
adc
mov
cwtl
cmp
int
xor
repnz
insb
pusha
sbb
cmp
dec
sbb
dec
lcall
add
jmp
jne
cmp
subl
jb
out
sbb
dec
dec
xchg
sub
add
mov
and
and
add
dec
adc
test
xor
mov
add
push
adc
or
dec
scas
mov
adc
adc
dec
push
shrb
push
add
pop
fldenv
add
adc
mov
rcll
insb
or
or
jmp
and
inc
add
lods
inc
and
test
inc
sub
enter
push
push
push
and
push
sbb
push
lds
push
sbb
nop
push
add
add
or
adcb
jb
aaa
push
jl
push
in
add
add
cmp
push
test
cmp
inc
and
rcrb
add
fs
inc
xchg
lds
sbb
dec
scas
xchg
sbb
or
out
xchg
add
xor
sub
inc
iret
and
dec
add
stc
inc
out
dec
pushf
sub
add
aaa
jo
and
sub
sbb
adc
imul
cmpsl
mov
or
repnz
inc
inc
mov
in
add
int3
add
and
lds
fs
push
add
mov
sbb
daa
movsb
orb
push
scas
push
fs
push
inc
push
pop
mov
xor
in
rclb
into
or
inc
adc
and
cmp
enter
or
orb
inc
orb
push
cmp
cmp
jo
xchg
or
mov
fadds
add
das
cwtl
xor
xchg
nop
or
mov
push
mov
jb
sbb
pop
cmpb
pusha
mov
divb
or
insb
dec
pop
ret
push
popw
jbe
negb
jmp
je
xor
pop
imul
test
lods
inc
cmp
and
sbb
inc
ss
sub
sti
cmpl
sbbl
jb
push
dec
xor
pop
jb
push
inc
jb
pop
jb
inc
push
pop
jb
pop
sub
inc
push
je
das
push
jb
aaa
adc
sahf
push
push
outsb
arpl
hlt
sbbb
push
divl
cmp
and
adc
adc
pop
mov
pop
cmc
movsb
or
or
adc
mov
and
pop
inc
mov
pop
dec
add
xchg
add
pop
mov
das
push
pop
or
sub
roll
xchg
pop
dec
jg
push
lahf
cmp
incb
sub
add
push
add
incb
xchg
push
fs
in
incb
add
std
or
daa
pop
sahf
call
std
or
jns
in
enter
mov
sahf
or
std
xchg
in
xchg
push
or
sahf
fs
std
adc
std
adc
pop
std
adc
dec
std
adc
fistl
adc
adc
fs
repnz
pop
adc
sbb
pop
mov
cld
sbb
xchg
sbb
pop
je
mov
cld
ljmp
add
repz
add
or
aas
inc
push
pop
mov
inc
cmp
paddw
adc
das
cmc
or
aam
mov
push
mov
add
cld
xor
mov
or
cmp
push
push
pop
dec
push
sbb
sbb
mov
cld
or
into
in
or
and
inc
mov
mov
mov
add
inc
out
and
sti
adc
in
mov
in
hlt
sbb
mov
out
adc
mov
fdivp
outsl
ret
push
addr16
mov
xchg
daa
add
xorb
nop
cld
pusha
ret
fstpl
mov
fiaddl
int
ret
xchg
dec
call
jmp
shll
or
xor
cmp
cmp
test
pop
mov
push
lds
popf
cwtl
icebp
add
sbb
pop
inc
push
add
pop
mov
xor
push
push
sub
sub
pop
add
es
push
push
stos
pop
add
or
scas
stc
sub
add
ja
or
add
xor
imul
cmpsb
imul
mov
pop
cld
lds
mov
add
es
das
stos
sub
daa
push
loopne
adc
mov
and
xchg
addl
inc
and
cmpsl
in
and
in
insb
inc
xor
sbbb
adc
out
shlb
or
or
fcmovnbe
sbb
test
add
cmp
call
add
lret
xor
or
or
jb
pop
add
pusha
adc
sub
inc
orb
std
and
push
add
mov
test
cltd
or
cmpb
scas
lea
lea
add
xchg
mov
add
in
adcl
jae
add
xor
add
pop
or
cld
cwtl
pushf
push
loopne
mov
and
sub
push
out
jb
pop
in
loopne
loopne
or
push
aam
cmpb
push
sub
xchg
dec
or
jne
int3
or
add
mov
push
mov
orl
test
add
inc
adc
in
inc
push
fdivr
and
int3
enter
and
rolb
or
jmp
pop
add
ljmp
inc
xor
sub
inc
aas
jns
and
aam
cs
ss
pushf
test
and
inc
add
pop
dec
inc
call
dec
dec
arpl
stos
out
jecxz
fisttps
dec
inc
dec
lock
popf
das
hlt
or
and
xchg
pop
adc
add
add
xor
les
test
or
repnz
leave
xchg
xor
leave
adc
das
xor
cmp
orl
into
and
or
popa
cltd
pushf
adc
mov
mov
pusha
or
add
sub
and
sub
js
sub
mov
pop
or
mov
adc
lea
xor
xchg
sub
cs
or
xor
mov
cmp
push
sub
das
std
roll
or
pop
and
push
lods
xor
and
les
push
and
inc
add
inc
aam
pusha
sbb
nop
or
push
and
and
and
in
fnsetpm(287
sub
dec
pop
mov
adc
adcl
jo
js
push
nop
add
xchg
lods
mov
mov
sbbb
add
push
mov
shlb
clc
cmpsb
lods
sub
movsb
mov
mov
pop
rolb
xchg
or
fwait
jns
lcall
or
sbb
inc
cmp
and
insl
popa
stos
and
adc
ds
sub
inc
decl
mov
lret
push
sub
dec
outsb
and
leave
xor
inc
push
fs
sub
sbb
push
adc
inc
push
fs
pop
pcmpgtb
fs
inc
pop
pop
jb
push
dec
dec
add
enter
inc
shlb
inc
sbb
dec
mov
orb
inc
inc
mov
inc
add
xchg
in
inc
es
shlb
insb
push
or
mov
add
xchg
adcb
mov
test
in
jbe
iret
pop
fisttps
outsl
adc
sahf
test
pop
push
xor
notb
insb
adc
add
sbbl
decl
pop
aaa
enter
xor
test
xor
pop
and
pop
sbb
jno
pushf
sbb
inc
popl
movsb
dec
dec
pop
and
hlt
pusha
xor
inc
roll
jne
test
pop
add
or
fildl
stos
sbb
sub
adc
adc
sbb
jo
xchg
xchg
sahf
adc
es
cmp
add
dec
aaa
and
adc
add
push
mov
xor
in
aas
pop
jns
xor
imul
add
enter
mov
std
pop
adc
enter
push
push
nop
sbb
orl
and
mov
out
test
and
lea
xor
adcb
stos
dec
add
mov
or
inc
inc
cmp
enter
xor
inc
cmp
xchg
and
xor
outsb
movlps
push
cwtl
cmp
pop
sbb
mov
in
push
push
xor
mov
or
sub
dec
test
cmp
add
pop
roll
sbbl
in
sbbl
dec
push
sub
mov
push
add
nop
add
mov
pop
mov
jns
inc
cmc
xor
dec
push
in
or
add
mov
xor
and
push
push
addb
movsl
push
sbb
xor
push
and
pushf
or
xor
add
dec
orb
aad
inc
lods
sub
into
ret
and
xorb
stos
cltd
ret
sub
inc
xor
inc
in
dec
or
cld
add
add
and
and
sbb
add
cwtl
or
and
add
or
dec
xchg
in
xor
sub
xor
xor
jg
xchg
inc
push
mov
test
add
push
adc
and
lahf
mov
cld
clc
mov
push
lock
fildl
sub
jbe
push
imul
mov
mov
pop
cmp
mov
push
push
push
dec
mov
mov
dec
push
dec
jb
xor
flds
add
je
inc
cmp
and
xor
and
sub
fwait
and
jb
sbb
sub
jbe
orl
and
addr16
and
add
sub
add
clc
or
das
fs
fs
call
cltd
fs
loopne
fcoml
cltd
fs
fcoms
dec
xchg
dec
mov
xor
dec
dec
xchg
dec
xchg
enter
mov
cmp
ret
xor
mov
pusha
pop
jbe
addr16
movsb
inc
pusha
pop
xor
cmp
leave
jbe
pop
dec
xchg
nop
jb
xchg
insb
je
mov
test
leave
xor
je
pop
jbe
je
or
add
add
jl
jo
sub
mov
jle
add
mov
es
push
in
mov
push
in
push
push
push
in
push
inc
push
cmovo
in
inc
pop
sub
loope
sbb
fldenv
add
stos
mov
or
jge
adc
lcall
xorl
and
jb
pop
jb
push
inc
pop
jb
pop
dec
push
aaa
and
jb
inc
push
jb
pop
jb
dec
push
pop
jb
pop
dec
cmp
and
jb
pop
jb
cs
jb
pop
cmp
push
and
jb
inc
inc
dec
pop
pop
jb
inc
push
je
inc
pop
and
imul
shrb
sbb
loope
adc
cmpsl
inc
std
stos
sbb
pop
adc
sub
fmull
int
in
dec
xor
or
aas
test
mov
ja
adc
shll
dec
add
ret
add
out
pop
pop
push
cmp
nop
add
nop
cmp
add
inc
push
pop
add
nop
add
nop
add
nop
inc
cmp
cmp
push
add
nop
add
nop
add
nop
push
inc
push
cmp
dec
add
nop
add
nop
add
nop
push
pop
push
cmp
xor
cmp
nop
push
push
fists
push
aaa
cmp
push
or
nop
add
or
and
adc
mov
test
or
je
orb
insb
push
fs
and
cwtl
jecxz
push
and
lods
and
add
cmp
sahf
add
adc
xchg
or
push
push
adcb
inc
add
nop
cmpsb
bsr
add
nop
pop
inc
add
push
add
pushf
push
insb
addl
and
and
mov
and
add
inc
push
inc
xor
pusha
sbb
add
adc
push
push
pop
imul
cs
popa
repnz
add
and
inc
adc
mov
and
xor
push
jb
push
or
and
aaa
inc
push
and
jb
push
dec
dec
push
nop
add
nop
pushf
cwtl
xchg
cmp
mov
cmp
add
nop
jl
je
pop
sub
jo
add
dec
fsts
iret
push
inc
push
movsb
sbb
adc
lret
dec
fwait
movsb
or
mov
add
cmpb
jle
iret
out
xchg
std
xchg
adc
pop
adc
test
add
inc
add
inc
or
sbb
andb
or
pop
rolb
mov
sbb
repz
rolb
pop
jb
call
mov
pop
stos
addb
adc
data16
loop
out
js
das
pusha
or
adc
sbb
push
in
and
pop
gs
add
pop
xchg
push
xchg
xchg
ja
add
push
or
or
mov
xchg
mov
movsl
inc
pop
xor
test
inc
inc
enter
push
adc
add
test
sub
xor
xor
add
fwait
and
or
or
and
mov
dec
dec
xchg
or
xor
inc
cs
xor
daa
sub
inc
xor
fs
inc
pop
adc
xchg
test
in
cs
push
push
or
dec
mov
mov
mov
adc
and
mov
test
xor
or
leave
dec
push
shll
test
or
jb
inc
leave
or
fs
and
inc
dec
pop
pop
enter
mov
push
sbbb
push
push
iret
push
nop
das
leave
cmp
adc
xchg
or
and
pop
ret
fs
das
or
push
sbb
cmp
mov
or
dec
or
xor
dec
xchg
sub
sbb
push
loopne
or
ss
inc
cs
and
test
and
jb
xor
adc
adc
and
pop
sub
pop
jb
inc
adc
inc
push
xchg
aaa
inc
jb
pop
push
mov
and
xor
or
sarb
adc
pop
jb
pop
xor
push
and
jb
dec
inc
jb
pop
jb
or
adc
sbb
adc
sbb
sub
or
pop
push
test
xor
dec
cmp
xor
add
push
lea
dec
dec
or
and
mov
pop
xor
in
push
enter
pop
dec
pop
enter
inc
inc
or
and
mov
mov
sbb
and
nop
or
push
add
sarb
imul
or
and
xor
xor
dec
test
out
inc
pop
mov
enter
push
mov
sub
mov
and
push
push
push
adc
adc
shll
xchg
pop
dec
pop
mov
rolb
push
cmp
adc
dec
cli
inc
or
nop
or
mov
and
sub
and
jb
cmp
push
inc
enter
push
add
cmp
adc
gs
and
adc
fiaddl
pop
test
inc
inc
enter
push
push
inc
leave
leave
test
cmp
leave
and
jb
pop
add
push
push
inc
jb
pop
pop
dec
enter
inc
dec
push
pop
enter
cmp
test
enter
xor
test
xchg
dec
pop
enter
pop
mov
add
ss
pop
or
cmp
popa
ja
mov
xorb
cs
pop
in
inc
xchg
add
push
or
mov
add
lods
pop
sub
sahf
inc
icebp
inc
push
mov
dec
cs
test
add
dec
cs
dec
es
dec
loope
cs
cwtl
dec
ljmp
push
add
inc
cs
push
add
in
cs
dec
inc
inc
cs
pop
add
inc
cs
dec
dec
cs
cs
push
add
in
ss
in
cs
dec
dec
cs
add
inc
cs
push
dec
fldcw
pop
jb
pop
jb
int3
sbb
movb
and
jg,pn
mov
movsb
es
or
xchg
cs
cs
push
dec
dec
cs
dec
inc
cs
cwtl
inc
scas
push
push
and
ljmp
adc
dec
inc
fcompl
test
push
push
sbb
in
inc
inc
cs
fcoml
cltd
dec
cs
inc
inc
cmp
cmp
lret
cmp
push
enter
inc
es
push
push
and
push
inc
dec
int
in
call
insb
add
inc
or
ret
push
push
inc
movb
and
push
mov
dec
inc
inc
push
nop
push
jecxz
and
dec
in
inc
inc
mov
in
pop
popf
ret
cmp
push
cs
dec
in
add
mov
es
or
or
inc
push
je
nop
dec
mov
ss
push
dec
fadds
push
in
push
lret
xchg
pop
dec
push
push
leave
and
push
sbb
dec
inc
rcrl
pop
inc
inc
push
enter
push
or
shlb
cmp
cli
adc
dec
jmp
push
inc
cs
push
mov
cmp
mov
inc
mov
or
and
subl
loop
jo
inc
nop
add
movsb
sub
pop
add
xchg
mov
inc
pop
mov
and
mov
call
pop
enter
sbbl
xor
out
dec
enter
add
jns
enter
add
pop
add
adc
add
adc
and
pop
or
aam
adc
pop
pop
inc
add
test
add
adc
sbb
add
mov
in
dec
dec
mov
pushf
add
dec
and
adc
imul
pop
dec
mov
and
cwtl
dec
sub
mov
xor
cmp
dec
mov
and
or
nop
push
and
inc
cs
push
inc
cs
adc
inc
pop
xchg
ret
sbb
pop
leave
dec
inc
push
test
ret
pop
enter
inc
rolb
jg
or
sbb
push
or
add
or
xor
add
inc
add
add
adc
xchg
addb
leave
push
cs
dec
cmp
movb
fs
test
push
and
push
or
jb
fwait
or
popa
fadds
sbbb
push
inc
adc
pop
sbb
push
mov
flds
push
jb
jno
cltd
inc
push
pop
prefetchw
or
add
adc
test
in
cmpsb
rcrb
cwtl
inc
adc
add
xor
dec
xor
mov
mov
in
sub
lods
cmp
add
xor
int3
sahf
add
test
adc
jg
insl
add
inc
dec
push
pop
push
dec
dec
dec
pop
add
inc
jae
dec
insl
pop
mov
jae
pushl
dec
mov
add
push
lcall
xor
dec
outsb
jbe
imul
out
das
lret
mov
pop
lcall
push
or
inc
adc
sub
mov
adc
push
push
add
mov
lds
push
add
mov
add
fs
bndmov
xor
subb
fistpl
sbb
popa
sahf
and
cltd
jmp
sub
pop
gs
inc
and
and
into
pop
pop
jbe
dec
subb
jo
jb
xchg
insl
fnstenv
movl
pop
xchg
gs
int3
int
add
gs
subb
or
pop
mov
add
in
gs
inc
lods
fs
mov
add
xchg
outsl
add
ljmp
inc
inc
add
lcall
add
dec
add
add
fcmovnb
dec
sahf
insl
fnstsw
add
add
add
or
add
adc
out
and
push
lock
inc
or
and
rcll
add
and
pop
pop
mov
popa
or
frstor
pusha
pop
push
add
push
inc
frstor
sub
insb
mov
jle
fs
daa
div
and
rolb
nop
loop
mov
jmp
dec
add
insb
fdivs
sti
add
int3
fildll
jb
jb
ret
lret
jle
mov
sub
inc
sbb
add
fdivr
pop
xchg
and
add
incl
add
add
add
add
add
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
