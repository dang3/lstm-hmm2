fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
inc
cmp
or
sbb
imul
lods
mov
add
int
cmp
ds
outsb
pop
jle
fidivrs
mov
in
out
int
fwait
sahf
jmp
xchg
jnp
dec
push
and
mov
out
scas
orb
jns
insb
push
dec
push
push
jge
mov
fbstp
loope
and
xchg
ds
out
push
imul
mov
inc
arpl
bound
dec
call
jae
pop
push
push
je
inc
mov
xchg
sbb
popa
mov
xor
push
adc
cmp
imul
popf
jl
fwait
cmp
dec
mov
call
add
shl
repnz
ss
sahf
into
cli
push
jge
jge
xchg
fdivrp
mov
ret
shrl
ffree
xor
dec
jbe
data16
scas
dec
mov
test
xor
cmpsl
cmp
imul
outsb
pop
fistpll
add
scas
rol
out
lds
inc
push
push
popa
and
sub
jge
pop
or
cmp
out
cmpsl
mov
mov
imul
popa
daa
das
aas
aas
add
fmul
iret
sarb
fwait
mov
sub
popa
or
pop
insl
outsb
pop
jle
mov
mov
in
out
int
cmp
ds
outsb
pop
jle
mov
mov
in
out
int
cmp
popa
jecxz
sbb
fs
hlt
sbb
repnz
xlat
mov
sbb
dec
push
addl
leave
or
imul
jno
xor
mov
cltd
lods
inc
xor
push
fisttps
xchg
pop
out
mov
lret
fs
cmp
subb
mov
xor
ror
xor
int
iret
and
into
mov
aam
adc
and
cltd
dec
lds
mov
add
mov
mov
stos
ds
adcl
decl
mov
xchg
lcall
in
stos
les
mov
pop
jns
cmpb
lcall
lock
iret
or
pop
cmpsl
add
ret
push
hlt
cltd
out
scas
dec
stos
jns
addr16
mov
mov
ja
in
cmc
pop
in
mov
fldenv
int3
inc
ss
stos
pop
ror
inc
mov
jge
jmp
pop
pop
movsb
and
mov
jp
cmpsl
pop
jae
adc
sub
mov
inc
add
jmp
jmp
loopne
jle
dec
je
fs
adc
jnp
cs
sub
xor
ret
paddusw
test
pop
lret
setb
stc
or
pop
dec
push
std
mov
xchg
mov
xchg
xchg
push
jle,pn
bound
dec
jge
mov
into
daa
aam
mov
add
mov
dec
mov
jb
test
shrl
mov
std
xchg
pop
pop
loop,pt
repz
loopne
lcall
test
lock
sahf
push
aas
adc
insl
stos
inc
sub
stc
mov
andb
mov
ret
cmpsl
add
cmpsl
into
je
ds
sbb
insb
repz
adc
ja
cli
lock
inc
test
test
push
es
jae
or
adcl
xchg
arpl
dec
orb
lahf
or
test
movlps
mov
test
aam
and
into
sub
push
jge
rcll
loope
ror
lods
popa
inc
scas
fmuls
clc
repz
mov
mov
shl
mov
and
mov
int3
fistpl
std
pop
insb
jmp
xchg
ret
sub
xor
addb
aad
std
out
dec
adc
shl
popa
lahf
add
mov
scas
hlt
aaa
sub
shlb
rolb
push
hlt
sbb
pop
pop
sbb
xchg
pop
or
dec
sahf
push
xor
mov
fimuls
aas
int
mov
jo
add
lahf
sub
pop
ljmp
inc
sar
sub
int
mov
jp
xchg
adc
gs
jmp
addr16
jae
jno
aaa
test
in
insl
dec
clc
mov
adc
mov
rolb
movsl
rcr
jne
movsl
cmp
xchg
and
push
scas
aaa
mov
dec
pop
push
push
testl
lods
xor
sub
adc
data16
ret
xor
loope
mov
jl
jmp
nop
xor
push
into
pop
ja
stos
inc
out
cwtl
imul
cmp
mov
pusha
insl
or
or
and
fnsave
push
stos
loopne
mov
dec
rorb
sub
imul
test
sub
icebp
inc
inc
add
cmp
mov
xor
jmp
add
dec
push
dec
cld
mov
jg
jno
sbb
pop
inc
pop
clc
roll
add
mov
push
pop
mov
jl
mov
or
ud1
mov
sbb
aad
dec
gs
jne
jno
mov
mov
mov
pop
out
inc
leave
sbb
mov
loop
or
test
sub
icebp
sub
in
scas
sbb
cmp
dec
int3
int
aaa
jb
add
xor
push
out
das
int
in
fsubr
sbb
aam
popf
mov
icebp
cmc
aad
test
cmc
dec
xor
jge
sub
mov
jne
cmp
mov
inc
dec
in
bound
add
jb
sahf
out
mov
rcrl
sbb
enter
cmpsb
add
clc
negb
jge
pop
jmp
cmpsl
push
inc
sbb
push
xor
push
lods
cs
nop
pop
in
movsl
sbb
daa
mov
call
xor
or
sbb
lds
gs
mov
pushl
and
test
clc
pop
cmp
inc
push
pop
mov
or
mov
sub
sbb
pusha
or
scas
lret
or
sbb
pop
pop
adc
dec
lods
and
imul
ret
mov
movsb
testb
rcrb
jmp
add
fdivrs
mov
lea
jp
das
adc
movsb
pop
or
pushf
mov
mov
imul
aaa
aas
push
push
jbe
and
pop
jne
push
xchg
mov
rcl
and
sbb
xor
cli
push
pop
dec
mov
xchg
cs
andb
rorl
scas
adc
sub
sbb
ret
jecxz
mov
xchg
jmp
inc
adc
mov
push
pop
fsub
mov
sbb
adc
sbb
inc
movsl
jl
xchg
lds
jge
shlb
push
mov
pop
scas
mov
hlt
popa
lcall
add
shlb
out
add
je
mov
mov
mov
xchg
sbb
push
mov
mov
jle
mov
sub
mov
testb
lods
or
es
imul
or
mov
mov
lock
mov
mov
jmp
cmpsl
jbe
xchg
mov
nop
daa
test
stos
movaps
add
sbb
orb
mov
fldt
sar
mov
jbe
int3
lock
pop
fiaddl
add
iret
xor
cmpsb
fwait
pop
jle
loop
cmp
xchg
push
push
xor
mov
mov
add
push
push
add
sub
sub
mov
cli
lret
xchg
xchg
jecxz
arpl
mov
add
pop
mov
xchg
aaa
out
pop
into
sbb
in
call
inc
dec
shlb
sbb
inc
mov
fcoms
sahf
les
int
test
jns
xchg
ret
mov
xor
mov
loopne
mov
pop
xor
xchg
mov
cmpb
xchg
cltd
icebp
test
or
pop
mov
mov
pop
clc
push
or
fwait
int3
cli
insw
xchg
xor
divb
inc
ds
popf
mov
pop
lock
add
mov
dec
or
push
loope
jae
lds
pusha
test
pop
pop
sbb
test
loopne
inc
dec
mov
arpl
mov
loope
mov
push
lret
jo
in
lock
jmp
cmp
xchg
inc
jns
inc
out
dec
mov
or
sub
lret
jecxz
sbb
scas
cmpb
out
push
mov
inc
hlt
mov
je
fldcw
mov
aas
je
nop
or
rorl
xor
jle
xor
or
pop
jae
push
rcrb
mov
sub
pop
sti
mov
add
xchg
fists
xor
jle
mov
dec
addr16
int3
enter
pop
ds
fisubrs
mov
mov
sub
pop
adc
decl
cmp
xchg
mov
xchg
cmp
nop
push
test
and
pusha
mov
inc
lret
adc
imul
rclb
dec
ror
push
ss
cwtl
adc
clc
sbb
sub
pushf
icebp
mov
sbb
popa
or
call
dec
inc
mov
jae
dec
mov
out
lock
adc
bound
ja
xbegin
and
push
jp
jle
fisttpl
roll
ja
fmull
sub
cmp
bound
cmp
ret
push
inc
aam
adc
fs
test
stos
dec
pop
push
sub
mov
jp
fiaddl
xchg
cs
xchg
faddp
and
mov
je
dec
loopne
sbb
push
inc
adc
mov
loope
add
pop
jbe
sub
sub
add
or
aaa
in
mov
sub
test
lret
xchg
push
addr16
jbe
jno
js
pop
mov
or
inc
test
nop
out
ret
pop
and
sti
adc
movsl
movsb
adc
pop
rcrb
popa
sbb
fistl
call
inc
mov
jne
mov
ficomps
jbe
sub
add
aad
mov
xchg
out
pop
cs
in
cltd
addl
outsb
and
icebp
testb
ss
cmp
push
fsubrl
arpl
scas
mov
cld
icebp
js
scas
jecxz
dec
mov
dec
loopne
test
out
push
shll
mov
xor
loopne
mov
sahf
call
lret
or
out
cmpsb
lea
clc
push
adc
pop
lret
aaa
loop
mov
inc
fnstsw
mov
call
cmpsb
push
sbb
mov
addr16
sbb
fcmovne
xorl
movsb
out
sarl
data16
pop
repz
lods
mov
divl
push
jne
mov
pop
pop
int
gs
jmp
stos
or
fcompl
mov
je
add
lock
fsubr
cmp
cltd
shrb
lahf
inc
insb
push
test
frstor
in
scas
mov
mov
iret
or
cli
mov
jle
mov
sbb
pop
idivl
push
cmpsl
adc
adc
inc
jb
ds
mov
jle
mov
and
into
popf
rcll
mov
int3
add
inc
jmp
mov
es
cmc
hlt
mov
jmp
shll
and
jnp
ljmp
repz
lcall
add
jae
shl
es
xchg
clc
sub
popa
std
gs
cmp
mov
test
sbb
lret
roll
inc
jnp
jno
xor
mov
and
sbbb
int
int3
loopne
push
roll
xor
pop
aas
mov
adc
lds
fidivrs
fisubs
std
into
or
cmp
es
xchg
hlt
xchg
leave
in
dec
sub
lret
cmp
inc
cwtl
sahf
and
movl
or
pop
mov
fcmovbe
xchg
adc
mov
jbe
pop
push
sti
push
or
addr16
das
cmp
pusha
push
cli
iret
daa
jmp
sbb
loop
aaa
pop
int
and
fstl
aas
jg
pop
sbb
scas
in
mov
jno
jp
dec
or
cmp
jmp
call
les
sub
adc
push
adc
mov
adc
mov
push
je
pop
inc
sub
cld
cmc
inc
cmp
es
sub
mov
mov
pop
cwtl
add
inc
fldl
stos
aaa
xchg
pop
aas
cmp
dec
in
mov
sbb
xlat
xchg
scas
xchg
sarb
and
out
push
in
sbb
xchg
jno
movsb
jp
push
loope
xchg
stos
fstpl
lods
jp
push
add
pop
daa
bound
jecxz
leave
test
mov
enter
loop
mov
mov
ret
add
xlat
orb
jns
clc
and
stc
dec
pop
lock
insl
data16
push
es
push
jns
cmp
push
jp
pop
cmpb
js
stos
je
in
mov
xchg
stos
lret
out
adcb
bound
cmpsb
mov
push
and
mov
dec
xchg
add
sarb
fmull
stc
outsb
lret
jecxz
lcall
mov
cmp
cmpsl
sbb
xor
xor
sbb
das
mov
adc
mov
or
fprem1
and
mov
sbb
inc
mov
testb
xchg
push
into
sub
clc
jne
jmp
pop
sub
inc
push
pusha
adc
lahf
xor
pop
push
lahf
mov
orl
cltd
enter
ljmp
push
nop
test
lcall
pop
cltd
int
pop
popf
push
xchg
mov
cwtl
jae
pop
fwait
mov
ds
gs
punpckhwd
cmpsl
cwtl
test
add
arpl
and
in
movsb
pop
ret
inc
ja
inc
mov
rcrb
popa
loope
and
add
shrb
xor
mov
jmp
scas
cmp
dec
xchg
inc
xchg
pop
stc
mov
filds
inc
imul
xchg
aam
pop
das
inc
pop
sbb
aam
push
add
and
fisttpll
lds
loopne
lahf
pop
adc
xchg
push
inc
mov
cwtl
jmp
jp
mov
loop
fldcw
fdivrl
cld
and
mov
sti
aas
lods
jns
inc
mov
jmp
not
jno
adc
outsl
push
popa
xchg
in
xor
imul
dec
cltd
pop
mov
add
inc
xor
imul
movsl
lret
ret
imul
fists
sub
jns
pop
repz
div
mov
cmp
adc
icebp
sub
in
cmp
stos
sahf
dec
xchg
mov
adc
dec
inc
pop
sbb
inc
scas
ss
adc
data16
daa
sbb
mov
or
ljmp
add
inc
shr
lea
push
adc
jno
xchg
xchg
lds
mov
and
pop
sbb
jg
xchg
jns
mov
xchg
cmp
aad
std
pop
lods
add
fbstp
lcall
mov
xchg
sbb
sub
sub
jnp
paddsw
mov
bound
insb
popf
xor
xor
jae
mov
into
orb
mov
aad
inc
repnz
cmpb
adc
add
lret
jns
les
mov
xchg
js
cwtl
mov
and
inc
dec
xchg
mov
arpl
out
imul
lods
jecxz
xchg
cmp
stos
sbb
mov
sub
sub
sbb
inc
dec
cmpsb
jmp
mov
and
push
mov
inc
sbb
pop
popa
into
mov
rcrl
xchg
mov
out
push
leave
std
sub
sti
mov
push
or
cmp
pop
insl
mov
and
jnp
clc
inc
xchg
pop
in
cmp
sub
test
pop
dec
xchg
lds
add
or
out
mov
lds
fsubs
jb
ljmp
rolb
shrl
or
test
ja
push
fisubrl
ficomps
out
xor
xchg
insl
mov
mov
xchg
mov
js
enter
jmp
shlb
scas
insl
es
inc
adcl
jmp
lods
int3
je
mov
pop
sbb
or
daa
sbb
and
cmpsl
push
pop
in
pop
add
pop
loopne
push
xor
rcl
sbb
int3
xchg
stos
cmc
push
and
push
push
dec
jecxz
xchg
mov
mov
out
imul
dec
testl
or
mov
or
adc
adc
push
fwait
xchg
mov
mov
f2xm1
sbb
cmp
jecxz
lods
roll
cmp
pop
out
push
in
add
xor
dec
and
xchg
push
xchg
push
cs
inc
inc
fiaddl
dec
sbb
dec
push
adc
push
movsb
pop
dec
push
dec
cmp
cld
add
mov
xor
lock
xchg
mov
jb
rcr
sbb
or
ficompl
mov
outsl
push
xor
cmpb
jne
adc
and
xor
in
mov
fcmovu
mov
sub
aas
pop
mov
fwait
push
sbb
jo
xor
add
lret
mov
enter
and
lea
lcall
into
pushf
int3
loope
sub
dec
or
js
movsb
lcall
add
ja
xchg
push
gs
icebp
sbb
repz
pop
sub
les
jmp
mov
repz
jp
add
push
mov
cmp
add
rol
cmp
imull
mov
sub
pop
lock
test
leave
xor
jg
arpl
arpl
ret
xchg
xchg
sbb
repz
add
jo
pshufw
fmuls
aaa
out
std
adc
out
aad
les
js
dec
out
dec
push
rol
mov
orb
and
push
scas
ja
in
mov
repnz
xchg
jl
push
mov
std
dec
int3
es
pop
outsb
lods
mov
pop
and
les
push
jmp
mov
bound
and
pop
not
imul
in
push
cmpsb
out
test
dec
enter
add
dec
test
add
cmp
ljmp
cmpl
imul
xor
cltd
add
adc
sbb
rcrl
or
lret
incb
jbe
stc
shl
pop
cmp
xchg
or
repnz
popf
push
push
or
add
cmpsl
ror
inc
cmp
jge
cmp
test
out
sbb
or
pushf
pop
pop
pusha
shrl
mov
jno
push
repz
xchg
pop
lcall
fdivrl
jbe
pop
mov
mov
dec
pop
nop
add
add
lea
jo
inc
sbb
lcall
arpl
lcall
xor
out
mov
imul
jg
push
xchg
dec
roll
gs
dec
test
clc
ret
xchg
negb
pop
cltd
mov
ss
aad
shlb
jmp
jbe
pop
aas
outsl
xor
orl
xor
jge
and
test
sbb
lds
pop
jle
fcom
add
stos
sub
adc
imul
push
add
imul
fidivrs
out
push
inc
repnz
int3
mov
push
add
sub
mov
test
fdivl
mov
dec
sub
xchg
lret
ja
mov
dec
or
in
jecxz
cs
int3
cmp
sub
push
add
pop
mov
mov
or
vcvtsi2ss
jmp
push
addr16
out
scas
ret
subb
jno
movsl
xchg
xorb
cmpsl
sbb
adc
inc
push
cvttps2pi
aad
sbb
inc
add
data16
jmp
das
inc
xchg
xchg
gs
movl
jns
push
imul
rorb
cmp
pop
sahf
rcrb
dec
into
jmp
xchg
ss
aam
mov
in
cmp
mov
jle
xchg
inc
pop
jmp
sub
cmp
jnp
jo
pop
ljmp
mov
add
mov
jle
fbstp
jmp
sub
cs
mov
cvtpi2ps
pop
mov
loope
push
aas
jnp
stos
mov
jmp
mov
sarb
mov
pop
lds
push
dec
pushf
mov
xor
repz
jge
or
out
mov
loope
push
pop
bound
or
testb
addr16
shlb
cmp
sub
test
ss
xabort
sbb
jmp
mov
rolb
xor
out
or
jmp
fstpl
push
imul
lcall
and
pop
rcr
mov
cltd
sub
dec
iret
dec
adc
out
andb
dec
loopne
test
dec
mov
pusha
jg
loope
add
adc
call
sbb
aaa
std
decb
jmp
add
mov
shld
rol
mov
jle
dec
aam
mov
inc
fists
jae
jnp
ds
sbb
jp
sub
xchg
loope
mov
bound
xor
popf
xchg
ja
imul
or
mov
outsl
daa
mov
jl
ror
or
adc
xchg
out
and
xor
mov
lods
and
arpl
out
pushw
adc
add
outsb
sbb
out
fimull
cmp
les
sti
ja
or
xchg
dec
aad
cmpsl
hlt
test
xchg
and
aaa
lret
enter
xchg
adc
jp
jo
jns
xorl
stc
push
leave
pop
xchg
pop
test
fsubs
cmp
aam
imul
dec
out
inc
in
pop
aaa
add
rcrb
fwait
xchg
xor
lock
insl
pop
adc
test
ret
stos
fildl
pop
inc
cmp
or
adc
jg
pop
int
imul
popf
push
nop
push
jmp
mov
sahf
in
cmp
jne
dec
adc
mov
mov
mov
rolb
lcall
roll
pushf
mov
je
pop
sub
js
fsubrp
in
jb
sub
dec
jge
insl
outsb
pop
jle
mov
mov
in
out
int
cmp
ds
outsb
pop
jle
mov
mov
in
out
int
cmp
or
pop
push
outsb
pop
jg
mov
test
stc
in
ljmp
leave
cmpsb
stc
push
dec
dec
jge
insl
outsb
lea
popf
mov
xchg
adc
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
ja
mul
aam
les
std
repz
ja
inc
inc
push
push
es
stos
pop
adc
add
hlt
mul
aam
les
xchg
xchg
lock
fs
push
inc
daa
inc
aaa
es
adc
add
in
idiv
int3
xlat
fsubl
mov
inc
es
pop
push
daa
data16
xchg
mov
xchg
jl
movsb
imul
je
dec
push
push
inc
sub
mov
jge
hlt
jp
mov
xchg
xchg
cmpsb
les
jnp
mov
mov
pmulhuw
cld
bound
vpmadcswd
cmpsl
loop
addr16
adc
test
cltd
xchg
negl
and
cmp
loopnew
add
mov
inc
stos
mov
mov
sbb
sbb
mov
in
js
push
std
je
pop
xor
inc
call
nop
dec
sub
dec
inc
jg,pt
jg
push
aam
sbb
push
xor
aaa
les
push
push
add
int
les
xchg
xchg
popf
addr16
jl
dec
push
pop
daa
sub
cmp
push
pop
add
stos
mov
mov
sar
loope
sbb
sub
and
jnp
push
arpl
popf
mov
mov
lahf
stos
ret
ljmp
sbb
aas
xor
inc
insb
inc
inc
and
jae
jo
hlt
ftst
movsb
mov
and
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
repnz
mov
fwait
jo
cs
les
lds
sbb
repnz
cmp
dec
cmp
sub
lods
mov
rorl
add
ret
lcall
cmp
rolb
bound
jmp
and
call
mov
movsl
daa
enter
push
add
jo
xchg
scas
addr16
bound
inc
dec
or
push
xor
arpl
adc
cmc
mov
or
xchg
jmp
xlat
dec
cmp
push
call
dec
lcall
pop
push
mov
cmpsl
mov
mov
mov
xor
pop
leave
or
or
push
shl
mov
cmp
jmp
iret
sti
xor
dec
gs
push
mov
pop
popf
aaa
jns
mov
fcompl
loopne
in
or
pusha
sahf
and
outsb
int
fmul
in
das
ret
and
sub
or
daa
imul
xchg
pushf
mov
in
data16
test
xor
inc
push
fistps
add
mov
add
outsb
adc
fstl
mov
adc
data16
xchg
mov
arpl
push
add
and
mov
bound
addr16
insl
xor
clc
or
cmc
xor
out
es
jl
push
or
pop
es
stc
inc
loope
xchg
out
jg
xlat
xor
in
jb
pusha
jne
sbb
jl
sbb
daa
mov
movsl
adcl
cwtl
in
in
jns
jno
subb
jne
mov
fneni(8087
push
sbb
shlb
scas
cld
push
jge
jge
xchg
mov
mov
out
incb
sbb
orb
inc
js,pt
cmp
outsb
notl
popf
out
into
not
or
ret
daa
mov
ljmp
aad
ljmp
dec
or
inc
and
mov
add
das
stos
fidivs
cwtl
cld
xchg
sbb
add
jecxz
cmpl
sbb
xchg
xor
pop
sar
mov
dec
sarb
inc
mov
out
notl
lea
adc
fimuls
mov
shrl
and
popf
out
pop
xor
divb
psllw
cmp
xchg
mov
test
inc
movsl
add
sub
imul
sub
add
pusha
adc
mov
sub
mov
cmp
xchg
cmp
mov
dec
mov
nop
pushf
sbb
mov
sbb
in
fptan
lods
mov
xchg
movb
addr16
in
repnz
push
dec
mov
test
sbb
pop
sub
or
mov
add
cmp
mov
push
dec
sarl
push
jno
nop
add
xchg
jno
pop
xchg
cli
mov
jle
shlb
mov
xchg
loopne
cmp
adc
push
ret
pop
and
xchg
xor
into
and
iret
in
lcall
jae
adc
pop
add
mov
lock
test
or
into
adcl
dec
loopne
jno
adc
dec
cmp
push
mov
out
iret
or
push
cmp
mov
scas
inc
out
jmp
and
adc
iret
inc
int
scas
lea
jmp
mov
cmp
test
std
test
ja
and
loopne
dec
rcr
lahf
adc
mov
push
inc
mov
pop
xchg
nop
pop
test
cmc
in
add
or
jp
xchg
rcrl
ds
addl
mov
mov
sub
or
jne
jae
xor
jae
push
loopne
and
dec
push
and
js
popf
outsb
jbe
mov
mov
sbb
inc
fnstenv
leave
lcall
jge
repnz
iret
cs
mov
sub
push
out
sub
or
mov
fdivl
stos
push
xchg
addb
push
xor
cmpb
popa
out
outsb
mov
stos
stos
inc
mov
aad
dec
sbb
xlat
pushf
mov
adcl
sti
insl
or
xchg
test
pusha
shl
sbb
and
pop
cmp
test
xchg
mov
add
jmp
cmp
xor
int
jecxz
sub
int3
ficoms
or
cmpsb
push
arpl
test
clc
push
in
sub
push
out
dec
xor
pop
jecxz
call
mov
and
or
std
iret
inc
inc
imul
sub
add
sub
out
adc
xchg
adc
sbb
loop
and
cli
adc
cmpsb
scas
repnz
pop
dec
cmp
int
cmp
in
add
fadd
loop
cmpsl
jb
pop
test
test
and
jns
sbb
in
mov
mov
pop
rorl
aam
cmp
sub
and
lret
bound
jnp
xor
lahf
cli
mov
call
or
inc
je
xor
rorl
jp
jmp
mov
dec
test
out
mov
xor
mov
cwtl
sub
cmp
mov
adc
mov
rcrb
sub
mov
repz
xlat
pop
mov
push
pop
test
push
std
ja
and
jnp
jne
xor
sub
or
push
adc
addr16
jbe
dec
dec
lret
outsl
inc
sbb
imul
jl
cmp
fsubrs
popa
sti
aam
push
stos
mov
mov
pop
enter
imul
pop
imul
xchg
sbb
addr16
dec
inc
daa
sbb
push
pop
add
ret
pop
popf
xchg
cmpl
and
xlat
mov
jno
dec
mov
scas
arpl
jno
fcompl
or
push
and
test
std
nop
mov
pop
inc
insb
pop
mov
mov
inc
push
filds
push
ds
loopne
out
out
xchg
sub
ret
es
mov
addr16
sbb
std
or
mov
mov
pop
pop
jae
lds
or
stc
ror
sahf
jne
cmc
add
adc
pop
in
or
mov
push
ret
outsl
repnz
cmpsl
add
push
ret
lret
lock
sub
jno
lock
rclb
xor
bound
int3
cmp
dec
mov
jnp
sbb
imul
xor
sti
jns
fucomip
daa
je
sbb
data16
bound
add
call
push
cmp
repnz
out
into
cli
lahf
jg
insb
jnp
movsb
xchg
es
dec
mov
imul
or
push
fwait
mov
mov
int3
pop
rcll
mov
mov
mov
imull
ja
cmpb
cmp
faddl
mov
lock
jnp
dec
mov
arpl
mov
adc
or
push
int
popf
mov
mov
lcall
mov
mov
xlat
jo
and
jno
stos
inc
les
push
dec
not
test
daa
dec
pop
leave
add
out
pop
loope
mov
and
sub
dec
out
call
test
int3
in
out
pop
sbb
fnstcw
cmp
pop
mov
dec
insl
xchg
push
pop
jbe
add
jnp
and
aam
in
fisttps
dec
dec
pop
dec
pop
and
pop
push
ja
push
inc
shll
rclb
push
mov
dec
and
add
lods
mov
ret
push
sub
mov
push
mov
bound
je
cmp
inc
outsl
sbb
out
jg
fmull
mov
and
push
test
mov
jge
cmp
rcl
sbb
lret
or
mov
out
adc
sbb
or
lahf
jp
into
sbb
jge
inc
or
arpl
fsub
jg
and
sbb
jg
adc
sbb
jge
lret
add
addr16
push
sbb
sub
sahf
outsl
and
leave
inc
inc
cmp
jnp
cltd
dec
adc
cmpsb
mov
cmovnp
add
or
mov
ret
cmc
ficomps
out
das
mov
in
ss
mov
xchg
jmp
rcl
cmp
pop
rorl
mov
mov
jmp
pusha
daa
lea
incb
push
cltd
xor
out
pop
dec
xor
or
stos
cwtl
clc
shrb
jge
mov
xchg
pop
je
xlat
add
negl
aas
inc
ljmp
cli
sti
aas
xchg
pop
mov
push
mov
push
push
in
aad
xor
jnp
xchg
inc
sub
adc
jmp
in
shrb
les
cmpsb
lods
pop
lret
push
pop
mov
es
fbld
gs
mov
mov
lds
shrl
mov
dec
arpl
in
add
mov
movsl
pop
les
add
inc
or
outsb
xchg
adc
nop
sahf
mov
ret
and
push
xchg
add
push
gs
daa
xchg
pop
push
adc
pop
cmp
js
inc
fistps
mov
jnp
adc
test
xchg
inc
stc
fdivrs
repz
aaa
test
cs
dec
pop
adc
sub
mov
jp
inc
outsb
adc
push
sub
mov
inc
dec
cli
jg
fmull
xor
rol
jo
cmp
mov
mov
mov
lea
mov
ret
lcall
ss
mov
cwtl
cmp
rolb
loope
jg
xchg
cmp
mov
sahf
bound
xor
sub
cld
mov
mov
movsl
mov
rcll
into
je
andl
sub
xor
out
cmp
or
lret
int3
jge
jno
into
mov
pop
xchg
and
dec
lods
or
xor
or
popa
inc
cmp
rcrb
aad
mov
mov
mov
mov
cld
aas
inc
add
push
mov
popa
loope
in
adc
inc
stc
push
or
movl
dec
push
or
pusha
pop
rorb
test
stos
push
rorl
stos
sbb
lods
clc
push
movsl
lock
call
loope
pop
dec
mov
ja
mov
lock
xor
jmp
rol
adc
sub
aaa
inc
in
xchg
sub
test
push
lods
add
pop
ja
pusha
nop
das
sub
and
push
jg
imul
xchg
loopne
sub
push
jb
mov
jo
add
mov
pminsw
das
out
cmp
mov
push
subb
leave
shll
sahf
inc
lret
les
inc
emms
and
lods
push
testb
push
ss
in
jnp
jae
movb
pusha
adc
loop
xchg
jnp
rolb
adc
mov
insb
test
xchg
lcall
dec
into
xchg
out
out
adc
push
mov
aaa
out
mov
sub
cmc
xchg
jns
adc
negb
pop
xchg
lret
sbb
mov
xchg
mov
into
fiadds
cmpl
call
sahf
mov
jb
dec
pmuludq
or
add
loop
and
mov
call
or
sbb
rcll
push
cmp
pop
jno
frstor
test
daa
lret
das
and
mov
mov
movsl
stos
in
cmpsb
jge
pop
push
or
add
add
shlb
adc
and
push
gs
ljmp
inc
aad
adc
push
cmc
in
sbb
jmp
aas
sub
bnd
rcrl
cld
or
sbb
xchg
add
fwait
aaa
shll
push
inc
faddl
inc
and
sub
fs
nop
ror
cmp
inc
loop
mov
jo
or
rol
dec
rcrl
cmpsl
and
jo
in
in
stos
imull
jne
loope
ds
mov
es
test
pop
cmp
cli
or
push
pop
sub
add
and
jo
imul
in
imul
mov
xor
mov
scas
lds
in
outsb
adc
movsl
push
sbb
fcomp
inc
push
hlt
push
repnz
fstpt
jg
insb
stos
or
and
test
xchg
clc
les
jae
dec
mov
addb
jp
adc
les
inc
dec
popf
mov
dec
dec
in
and
sub
insl
shrl
ss
xchg
aaa
les
push
mov
inc
fiadds
fwait
sbb
dec
pusha
jmp
aaa
add
jp
in
in
push
shr
iret
mov
ret
pop
cmpb
outsl
fs
sub
adc
pop
add
push
into
imul
dec
out
call
jb
pop
daa
inc
jne
data16
das
jae
push
mov
stos
pop
inc
outsl
mov
pop
lcall
popf
jmp
or
jecxz
sahf
movsb
fdivrl
mov
sub
ret
fs
inc
cs
and
out
jmp
cli
stos
mov
sbb
pop
scas
test
and
lods
mov
dec
fiadds
test
sub
jle
and
insl
pop
movsb
push
rcrb
or
push
jo
lock
mov
out
mov
jmp
not
mov
mov
pmullw
nop
shlb
hlt
xchg
jo
mov
jne
jae
shrl
xchg
data16
lea
xor
data16
mov
arpl
aaa
stos
xor
add
jo
movsb
call
dec
in
sbb
push
scas
or
iret
loope
pop
mov
xchg
rolb
xor
adc
xor
nop
push
aaa
mov
rcrb
scas
push
inc
mov
jae
mov
pushl
movsb
adc
std
jb
xor
test
pop
in
dec
push
sahf
mov
std
sub
jb
mov
mov
das
jae
cmpsl
int3
fwait
ljmp
clc
mov
adc
xlat
mov
mov
cmp
leave
ret
sub
loopne
xchg
pop
hlt
int
sbb
mov
sbb
cmp
pop
ljmp
gs
push
daa
lahf
aaa
outsl
dec
jbe
mov
mov
sub
leave
int
fcomps
hlt
in
mov
xor
bound
mov
push
stos
xlat
and
inc
ror
pushf
cs
lcall
mov
mov
or
fnstsw
sbb
jo
insl
je
mov
cmp
mov
adc
cwtl
push
or
mov
or
mov
or
subl
fsts
imull
ja
les
int3
sub
xchg
xor
loop
fxch
inc
mov
pusha
es
out
xchg
mov
inc
push
bnd
arpl
ljmp
inc
push
cltd
sti
xchg
sti
inc
sbb
pop
int3
cmp
in
imul
pop
out
dec
lock
or
xchg
or
mov
dec
jbe
add
loopne
push
andb
mov
xchg
mov
popa
mov
mov
out
test
inc
call
sub
or
imul
adc
xchg
xor
js
lret
mov
scas
lods
adc
pop
in
rorl
shrb
lds
or
out
call
test
pop
or
mov
hlt
scas
xchg
je
dec
movsl
mov
mov
mov
fxch
sarb
jno
cs
ror
mov
cmp
inc
shrl
sti
xor
lods
sub
mov
sbb
cmp
call
mov
mov
xor
push
pop
sub
rol
rclb
xchg
sti
imul
stc
fwait
inc
lret
addr16
flds
cwtl
aas
adc
cmp
fiaddl
xor
pop
daa
nop
adc
pushf
sub
mov
inc
loop
jl
add
adcb
add
repnz
int3
xchg
aas
das
in
dec
jbe
ss
rcrl
pop
inc
cltd
cwtd
jge
mov
jge
push
repnz
insb
pushf
sbb
roll
rorw
sbb
fldenv
mov
fldcw
inc
adc
shrl
cmp
cmp
mov
jno
test
orb
pop
mov
inc
sar
push
shll
cld
enter
stos
dec
push
push
aam
lahf
out
and
mov
inc
jb
xor
das
shlb
xor
xor
in
mov
mov
jo
int
data16
sbb
push
or
hlt
scas
push
mov
xor
cmc
jge,pn
jmp
pop
dec
hlt
pushf
cmp
fs
add
int3
imul
fimuls
repz
xchg
inc
test
cld
push
addr16
ja
cmp
jnp
inc
pop
cmp
lds
mov
lods
mov
clc
mov
cmp
pop
push
push
cmpb
push
mov
mov
subb
aaa
xchg
lock
add
jmp
push
push
hlt
jae
push
cmp
jo
cs
jecxz
or
jne
mov
sbb
or
pop
dec
fnstsw
xor
outsb
fisubs
mov
jmp
ret
jnp
mov
xor
lods
and
mov
hlt
in
mov
mov
jne
adc
jne
fistps
inc
mov
cmpsl
mov
sbbb
int
mov
icebp
cmpsl
mov
add
in
sar
xchg
mov
cmp
cmp
repnz
ja
jne
pop
cwtl
pop
and
mov
add
in
jno
fidivl
mov
stc
inc
stos
incl
sub
lods
push
movsl
in
out
inc
mov
ficompl
pop
das
sbb
cld
ds
into
mov
popf
aam
or
pushf
push
int
mov
lahf
pop
mov
ljmp
into
sub
inc
push
testl
mov
cli
xchg
repnz
gs
or
dec
push
mov
iret
lods
in
mov
shlb
add
ret
stos
or
add
cwtl
xchg
mov
mov
mov
inc
repz
hlt
jp
jae
jg
lds
pop
jle
mov
mov
lret
inc
mov
jmp
cltd
push
into
jo
cmpsl
dec
and
repz
xchg
and
jae
pusha
lods
sbb
jecxz
lods
mov
out
inc
push
ret
nop
add
push
movsl
push
mov
jo
rcll
dec
shrl
sub
mov
mov
inc
lods
out
add
push
or
mov
jmp
xchg
cs
or
fbstp
push
std
add
add
pop
pop
sbb
jae
fildl
and
xor
loope
adcb
aas
lods
lods
out
mov
push
int
mov
mov
divb
push
add
mov
in
and
lods
jae
rcll
in
popa
xor
movsl
stos
imul
add
in
pmullw
es
cwtl
xchg
and
stos
enter
xchg
lods
fbstp
stos
into
testl
jle
inc
mov
addr16
fsubr
js
xorl
movsw
push
repz
cmp
mov
cmp
in
loop
lods
push
imul
leave
jo
add
or
jmp
cmpsb
out
sbb
inc
pop
inc
je
lods
int
daa
insb
repz
or
outsl
insl
lods
jl
jp
inc
cmpsb
xchg
cmc
xchg
lea
movsl
xor
jl
fwait
cmp
xor
lds
xor
lahf
xor
jo
jne
xchg
shlb
xor
and
and
xchg
stc
push
nop
pop
scas
xchg
sub
lcall
nop
out
sub
jo
movsb
ret
or
aas
mov
mov
mov
pusha
xor
jb
push
xchg
int
mov
mov
mov
jno
xor
popf
and
lahf
mov
hlt
push
and
mov
mov
dec
pop
inc
xorb
js
pop
mov
aas
cmp
repnz
push
out
or
xor
mov
adc
adc
dec
lret
fiadds
flds
scas
push
xor
insl
out
fwait
imull
sub
inc
push
mov
push
mov
pop
add
lret
in
inc
push
cwtl
subl
mov
stos
repnz
dec
call
pop
leave
in
xchg
adc
test
cld
aaa
hlt
fimuls
mov
push
fiaddl
test
push
adc
dec
cmp
or
and
je
stc
cmp
or
js
xorl
dec
test
jno
pop
dec
outsb
mov
mov
dec
add
fwait
bound
pop
aam
mov
sbb
fdivl
jg
and
testl
mov
sub
lahf
add
cmpsl
xor
repz
insl
cli
cmc
add
ss
fistpll
mov
shll
test
aas
adc
add
divl
and
out
inc
iret
cs
mov
sbb
xlat
add
xor
add
dec
lods
add
faddl
sub
ret
fisubs
xlat
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
hlt
mul
aam
les
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
and
adc
add
lock
rcl
les
xchg
xchg
inc
addr16
into
in
push
push
xor
mov
jnp
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
and
xor
add
adc
push
add
and
xor
test
ja
pop
hlt
adc
and
xor
add
adc
xchg
cmpsl
push
ret
movsb
inc
mov
lock
ja
push
aam
and
xor
add
adc
fs
push
scas
movsb
cwtl
mov
idivl
mov
jle
push
mov
mov
and
je
iret
mov
outsb
in
dec
movsl
aaa
outsl
sti
in
dec
bound
icebp
mov
lock
cmc
push
bound
sbb
lds
sub
int3
std
pushf
fnstcw
aam
scas
cmp
mov
sarb
cli
inc
daa
jge
mov
pop
xor
dec
xchg
pop
cmp
movsb
mov
mov
sbb
pushf
call
fcmovnbe
inc
aas
outsb
mov
jb
mov
push
mov
adc
inc
xchg
mov
notb
and
ror
pop
or
inc
div
int
shlb
hlt
inc
fidivrs
jl
shrl
push
cmc
call
jp
xor
add
adc
xchg
jge
aaa
movsb
shll
sub
out
les
aam
bound
jno
or
cmp
shl
add
push
subl
push
daa
addb
xchg
and
sbb
and
adc
inc
aam
dec
xchg
push
nop
insl
mov
xchg
fs
xchg
inc
cmpsl
push
mov
inc
mov
test
ja
pop
hlt
pop
les
aam
and
xor
add
adc
xchg
cmpsl
push
mov
inc
mov
test
ja
pop
hlt
pop
les
aam
and
xchg
add
push
fdivs
xchg
aas
push
add
inc
pop
add
fldt
outsb
push
in
xor
ljmp
lds
adcl
out
jmp
jmp
aas
xlat
int
orb
stos
jmp
or
ss
mov
in
movsl
jge
cmpsb
jg
mov
insl
inc
pop
cmp
mov
or
fldt
mov
inc
nop
out
adc
pusha
cmp
flds
lcall
sub
pop
outsl
push
pop
sub
inc
fwait
cmp
dec
mov
pushf
mov
cmp
pop
or
mov
xchg
sbb
lcall
mov
or
dec
mov
or
rorl
xchg
andb
cltd
ljmp
ljmp
lea
adc
fmuls
outsl
jmp
inc
fisttps
push
outsb
xlat
add
xor
cmpsl
add
mov
push
jmp
or
cwtl
popa
fwait
xchg
cmp
or
cmc
dec
aam
filds
rorb
in
imull
call
gs
mov
cwtl
xchg
cmpsl
repnz
or
cmpl
cs
sarl
adc
insb
stos
imul
pop
pop
in
test
or
mov
pushf
pop
push
push
fimuls
movsl
jb
mov
xchg
gs
ficomps
push
shlb
sub
pop
xchg
je
shll
xor
scas
ja
push
in
pushf
or
inc
aas
pop
roll
xor
cmpsb
fdivs
mov
sbb
xor
inc
dec
shrb
popf
movsl
ret
push
jmp
pop
pusha
mov
dec
xor
stos
mov
mov
fdivrl
adc
lods
cld
xchg
movsl
pop
xchg
mov
std
cmpl
xor
out
xchg
ret
outsb
push
push
mov
imul
in
sub
push
shrb
loope
jecxz
push
scas
add
mov
jl
addl
jns
pushf
jl
shlb
xchg
popa
cmp
push
inc
mov
dec
rorb
pop
push
repz
xchg
dec
jmp
adc
pop
loope
inc
sbb
cli
pop
ficompl
push
jae
inc
aam
imul
push
adcl
sbb
jb
dec
add
xchg
mov
fdivl
and
aaa
mov
xchg
cwtl
or
rol
pop
shlb
jbe
inc
sarl
dec
pop
mov
inc
dec
outsb
popa
dec
imul
out
add
les
dec
add
scas
sti
cmp
int3
push
loop
sti
mov
adc
rorb
inc
jmp
and
sub
cs
mov
std
in
insb
ret
mov
in
mov
cmp
jp
push
repnz
mov
ljmp
xchg
mov
stc
sub
icebp
nop
lret
push
js
xor
cmp
shlb
pop
dec
xor
imul
or
xchg
jmp
xchg
or
test
mov
cli
nop
add
mov
fmuls
cmpl
out
dec
xchg
in
sub
jb
loopne
pop
jle
sub
xlat
jmp
das
xchg
cmc
xchg
lcall
adc
movsb
ret
lret
gs
insl
inc
pop
js
or
mov
dec
sub
and
mov
and
test
rorb
jge
xor
in
pop
popa
cmc
push
inc
idivb
sbbb
sub
mov
push
pushf
lds
push
mov
cwtl
dec
sbb
sbb
mov
fcmovne
shlb
mov
ss
jl
mov
add
mov
aam
test
or
outsb
xchg
sbb
xchg
das
int
andl
div
out
daa
cmp
cmp
mov
ficomps
sarb
call
pop
js
loopne
jle
pop
std
xchg
mov
and
lret
pop
imulb
xchg
cld
and
outsl
push
cs
ret
aam
xchg
insb
mov
mov
adc
add
shlb
cmpsl
mov
push
nop
inc
pusha
stos
or
les
pusha
test
mov
push
xchg
push
insb
or
lsl
dec
lret
dec
cltd
inc
xchg
push
ret
ja
add
jo
dec
stos
mov
adc
and
inc
shll
jle
push
in
push
inc
pop
pop
xor
ret
les
pop
ss
out
xor
inc
jo
fstpt
or
add
xchg
insb
lcall
test
fdivs
mov
xor
xor
adcl
mov
loopne
clc
mov
fmuls
mov
xchg
mov
jl
mov
adc
or
sub
xchg
in
scas
pop
mov
jmp
out
sub
push
imul
stos
add
scas
jp
inc
jmp
movsb
mov
mov
call
dec
das
add
xor
in
lcall
mov
pushf
xchg
cmp
push
jmp
adc
in
imul
dec
out
icebp
in
xor
aaa
mov
sti
aad
jp
mov
add
hlt
sbb
aas
mov
test
dec
sbb
cmpsb
adc
push
imul
das
test
mov
cmp
test
arpl
dec
ret
inc
or
pop
inc
adc
cli
push
dec
lret
icebp
je
push
push
mov
fstl
jnp
or
and
push
cmp
ret
loop
pop
cmp
cmp
pop
push
add
add
fcompl
or
in
aas
push
mov
lcall
das
push
hlt
daa
jl
jecxz
mov
inc
xlat
loopne
fwait
das
cmpsb
xchg
es
clc
fs
or
fstpt
outsl
lcall
and
cmp
in
fwait
pop
je
shll
xchg
lock
cltd
repz
xchg
sbb
or
iret
pushf
nop
int
sub
dec
addr16
ret
dec
sbb
out
rorb
cmc
push
ret
dec
sub
xor
jb
lret
movsl
lret
ljmp
sub
aaa
inc
pop
fwait
mov
push
stos
add
repnz
test
inc
test
in
pop
andb
inc
loope
mov
clc
mov
fldcw
mov
movsb
mov
call
push
xchg
mov
cmp
scas
sub
data16
mov
test
cmc
std
mov
mov
pop
and
adc
gs
mov
ss
inc
or
cmp
sub
inc
push
in
cld
fsubrl
outsb
pop
mov
sbb
cli
gs
xchg
xor
sub
push
mov
sarl
fisubs
pop
mov
clc
leave
mov
mov
mov
sarb
push
dec
sub
movsb
mov
mov
add
insb
dec
inc
movsb
push
out
stos
inc
out
adc
sbb
dec
jns
xchg
ret
sahf
pop
xchg
xor
push
push
push
dec
sbb
sub
aam
pop
enter
inc
sub
jl
out
das
cmp
aaa
sub
in
inc
test
roll
pop
fiaddl
out
outsl
jge
frstor
lret
jp
push
mov
pop
mov
loop
xchg
or
movsl
mov
test
and
add
lods
pop
test
addr16
gs
push
push
xchg
mov
fildll
jnp
mov
jp
movsl
xor
out
test
cmp
pop
in
fwait
inc
hlt
imul
adc
mov
jp
stos
jmp
xchg
call
mov
andb
inc
fs
adc
add
jno
fwait
lcall
add
shrb
push
call
pusha
data16
test
out
les
loopne
xor
xor
outsb
pop
sbb
bound
sbb
pusha
dec
sub
orb
shrl
pop
jmp
jecxz
inc
fs
xchg
dec
and
jb
subb
or
sub
jmp
movsl
daa
lret
pop
sbb
dec
repz
mov
mov
in
push
sub
je
add
andb
pop
js
ret
std
sti
inc
repz
shll
pop
mov
sub
mov
mov
push
fwait
mov
xor
and
cmp
cmp
pop
cmpsl
push
push
scas
dec
inc
pop
adc
arpl
cs
and
mov
sub
negl
leave
cmpsl
dec
ja
imul
mov
xchg
sub
adc
xor
xor
cs
popf
and
push
sti
leave
push
fs
push
xchg
inc
mul
std
xchg
jmp
dec
inc
sar
in
andl
sub
fcompl
es
lods
pop
aas
imull
push
xorb
popa
mov
push
cwtl
cmpsl
imul
int3
push
test
ror
mov
push
mov
mov
je
scas
fnsave
push
out
inc
sub
aam
rorb
add
ss
outsl
out
call
dec
dec
aad
inc
pop
test
pushf
jecxz
repz
push
add
fstl
fistps
lea
sub
cltd
xor
ret
sbb
inc
int
out
outsb
cmp
arpl
jns
lcall
add
mov
ror
jb
daa
mov
nop
jmp
std
into
mov
out
loope
jbe
inc
adc
int3
mov
mov
or
sbb
test
push
inc
jg
xchg
or
cmpsl
shrb
mov
pop
sub
rolb
dec
cmp
sbb
cmp
jp
sarb
jne
jg
and
arpl
js
jl
je
xlat
push
mov
xchg
loopne
xchg
xor
dec
test
dec
imul
jnp
gs
cmc
jns
mov
gs
pop
fcmovnu
dec
imul
mov
mov
lea
shlb
sbb
les
push
push
mov
scas
adc
adc
jbe
popa
xchg
jno
and
dec
stos
push
cmp
insl
inc
shlb
lea
cltd
xor
inc
test
inc
pop
mov
gs
notb
sub
out
mov
cld
sbb
aas
cmp
jmp
mov
pushf
je
push
into
pop
fcomps
rorl
xor
popf
fldl
jmp
inc
push
insb
int
imul
je
inc
sahf
xchg
aam
xor
add
jnp
sbb
xchg
shl
icebp
jae
push
jo
cmp
add
sub
bound
stos
jg
movsl
stc
sti
les
pop
xlat
push
jg
in
cmpsb
pop
cltd
push
repz
pop
jb
cmp
jmp
sub
xor
lahf
sub
sbb
sbb
adc
cmp
add
cmp
loopne
add
in
mov
hlt
dec
and
aam
shlb
ljmp
push
push
cld
and
dec
shrb
jnp
jmp
pop
adc
add
fwait
dec
adc
sbb
mov
lds
aaa
bound
and
sbb
mov
movsb
push
dec
mov
push
mov
xor
lods
mov
lret
inc
mov
push
js
iret
pop
fildl
fidivl
xchg
cmpsl
sub
push
dec
pavgb
imul
loopne
dec
lock
xchg
fisttpl
loope
mov
dec
sbb
push
iret
lods
cmp
xor
rcr
cwtl
inc
call
adc
mov
add
mov
adc
or
add
repnz
add
dec
xchg
sarl
andb
jae
div
pop
mov
jge
icebp
mov
inc
sub
stc
aaa
insl
dec
mov
cmpsl
mov
jecxz
in
sbb
add
xchg
jmp
les
mov
add
or
and
adc
cld
enter
xor
xchg
repz
pusha
jne
dec
cmp
mov
repnz
imul
add
cwtl
loopne
dec
lods
xor
insb
daa
push
add
mov
inc
jle
outsl
leave
std
pop
aam
xchg
mov
fsubrl
or
xor
add
imulb
mov
leave
aam
or
lcall
lahf
addr16
outsb
ljmp
and
jp
pop
inc
hlt
xlat
inc
es
pusha
js
int
cmp
test
cli
dec
out
jnp
inc
add
lret
pop
mov
pop
lods
test
mov
or
popf
inc
inc
icebp
sub
in
xchg
xchg
dec
pushw
cmp
cwtl
aad
mov
push
mov
repz
subl
add
and
es
mov
stos
xor
and
out
xlat
mov
sub
sbb
rcrl
into
mov
jmp
dec
mov
int
jg
pop
add
sub
xchg
cld
sub
arpl
hlt
mov
icebp
jg
push
or
or
mov
adc
call
mov
fimull
addr16
adc
cmp
test
test
imul
inc
out
pushf
pop
stc
frstor
mov
fidivl
xchg
les
inc
sbb
inc
daa
add
addr16
xchg
dec
xchg
ljmp
loop
xor
add
dec
imul
push
in
mov
fsubrp
ret
imul
xor
les
xor
sub
sbb
mov
adc
or
out
pushf
sub
inc
mov
push
and
jno
jle
mov
cld
cmpsb
jecxz
fcom
ficoms
int3
mov
adc
mov
mov
adc
inc
push
lcall
mov
mov
lods
mov
addr16
pop
sahf
jbe
cwtl
mov
fstpl
cwtl
push
cmc
mov
xchg
xor
or
arpl
sbb
ror
inc
push
pop
aam
pop
xchg
cmpsl
add
adc
pop
stos
add
rolb
shll
fbld
insb
inc
or
cwtl
xchg
mov
jp
sahf
and
adc
sub
jns
inc
je
stos
movsl
aad
and
pop
stc
sahf
fsubrs
stc
ja
outsl
mov
pop
push
push
push
int
in
lock
and
data16
cli
fucomi
jbe,pn
cltd
clc
in
aam
cmp
inc
pop
pop
and
shrb
push
mov
xchg
xchg
lods
adc
and
sub
iret
adcl
jmp
lds
leave
nop
outsl
jmp
sub
repz
and
pminsw
les
cmp
adc
jl
pop
jb
jecxz
fwait
test
shlb
sbb
sti
sub
test
repz
pop
je
adcl
push
cld
or
addl
pop
jg
sbb
mov
sub
adc
fsubrs
push
or
adc
xor
mov
mov
outsb
out
mov
sub
pop
repz
mov
in
xchg
arpl
xchg
sbb
mov
stos
inc
push
xchg
shrb
bts
jl
cli
push
int3
sti
rorb
push
shrb
dec
inc
or
jp
aad
les
fdivr
divl
into
or
stos
sub
jmp
iret
inc
xchg
pusha
imul
push
call
sbb
inc
inc
add
jg
subb
incl
lock
mov
sbb
cmpl
dec
pop
xor
jle
mov
push
mov
scas
nop
roll
ds
ret
push
daa
dec
fcomi
aad
dec
rorb
fistpll
outsl
mov
rclb
stos
mov
sbb
mov
arpl
fwait
xor
mov
push
push
sahf
pop
out
enter
pop
xchg
jae
cli
xchg
sahf
pop
je
adc
inc
pop
scas
jge
or
inc
bound
data16
xor
mov
rolb
subl
test
push
out
mov
popf
aas
cmpsl
dec
sbb
lea
lret
jecxz
dec
mov
pop
cmp
push
es
mov
jno
out
jmp
rcrb
repnz
scas
inc
lods
mov
mov
ds
fstpl
jne
mov
xchg
adc
pop
addr16
bswap
or
cli
xor
das
and
xchg
test
icebp
cli
pusha
and
pop
cmp
sub
std
and
mov
sub
fists
xchg
aad
ret
sub
mov
push
inc
es
mov
jns
fsubrl
loop
mov
outsb
xorps
je
insl
dec
lahf
mov
xchg
ds
pusha
and
inc
lods
out
cwtl
fst
aaa
jl
adc
lahf
inc
mov
sub
ds
testl
sbb
push
mov
push
dec
fisttpl
shlb
fldenv
aad
stos
mov
cwtl
icebp
pop
sar
push
dec
adc
es
es
mov
ss
inc
push
ja
xchg
xchg
mov
and
sar
push
out
leave
shlb
scas
jns
pop
mov
mov
loop
mov
andb
mov
lods
dec
in
mov
call
lods
bound
mov
sarb
bound
push
mov
or
pop
add
add
mov
inc
faddl
es
sbb
pop
les
rolb
gs
mov
scas
xor
xchg
jg
push
pop
mov
lret
adc
lret
popa
mov
inc
push
mov
sarb
dec
and
or
out
gs
inc
dec
mov
repz
lea
repnz
jb
rcr
and
dec
pop
adc
cld
jne
ja
hlt
mov
pop
int3
ljmp
jbe
sub
lods
xor
cmp
test
test
pop
movsl
dec
inc
xchg
inc
jnp,pt
mov
dec
pop
pop
mov
jno
xchg
push
les
cld
push
mov
or
jge
pusha
sub
push
les
scas
pop
adc
mov
pushf
pop
and
clc
dec
pop
subb
popa
pop
in
inc
pop
mov
fldenv
pop
pop
dec
mov
rclb
imul
adc
inc
test
repnz
sub
xor
inc
hlt
xor
adc
ss
mov
ficoms
push
out
cmpsl
inc
rcrl
jg
jge
mov
mov
sbb
mov
mov
mov
mov
sub
adc
rorl
lods
xchg
dec
or
jge
and
dec
dec
mov
scas
lds
popf
mov
or
inc
or
in
outsb
sbb
mov
addb
xor
xlat
insb
ret
push
mov
leave
aas
pop
bnd
cmp
or
out
add
fs
adc
loopne
push
mov
mov
iret
hlt
mov
movsb
nop
pusha
stc
cmp
in
rol
jp
lret
and
push
pusha
inc
idivl
push
mov
in
jns
dec
dec
out
mov
hlt
add
add
lcall
sti
inc
hlt
ss
inc
pop
mov
mov
pop
push
sub
jg
arpl
rcrb
out
test
xorb
std
test
mov
push
cmp
jmp
or
out
lcall
sub
shl
sub
jnp
mov
xor
cmc
shlb
adc
repnz
gs
in
shll
ret
sub
pop
xorb
mov
or
cmpsl
jge
mov
ror
push
xchg
ds
add
mov
jnp
push
add
testl
stc
adc
sahf
cmp
repnz
xor
fstpt
adc
jge
stos
and
roll
shll
sub
jbe
lea
loope
jb
push
stos
data16
lret
and
or
fidivs
inc
or
outsl
icebp
cmpsl
adc
cmpsl
xor
jecxz
add
pop
std
insb
lods
dec
add
pop
out
repz
aad
call
fldl
xchg
xor
out
or
dec
cs
sub
daa
in
cwtl
push
movsl
xchg
mov
dec
jge
inc
iret
mov
xor
jb
test
ficomps
mov
test
fwait
cli
lock
jnp
mov
sbb
fnstcw
fiaddl
fildl
pusha
or
jne
push
jp
mov
jge
insl
mov
rolb
cmpsb
xchg
xor
cvtss2sd
dec
xor
mov
jp
push
clc
pop
insb
leave
es
cmp
fs
jae
lahf
movsl
dec
pop
scas
sub
cli
aaa
dec
popa
lods
push
push
sbb
int3
ljmp
mov
or
sbb
test
inc
ficomps
lcall
sbb
arpl
push
add
fs
sbb
repz
mov
sub
clc
or
mov
lcall
cmpsb
mov
cmp
cwtl
jne
scas
lcall
cmp
mov
adc
sub
push
iret
fcomps
pusha
outsl
fs
and
out
mov
out
dec
fucomip
mov
pop
xchg
mov
lcall
dec
fcmovb
lock
cmpsb
out
jl
sbb
out
adc
jg
out
ds
xlat
add
xchg
cmpsl
push
mov
inc
mov
test
ja
pop
hlt
pop
les
aam
and
xor
add
adc
xchg
cmpsl
push
mov
inc
mov
test
ja
pop
hlt
pop
les
aam
and
xor
add
adc
xchg
cmpsl
push
mov
lahf
mov
test
ja
pop
hlt
pop
les
aam
and
xor
add
adc
xchg
daa
push
mov
mov
xchg
add
fsubrs
enter
mov
dec
stos
xor
push
jmp
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
sti
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
sti
and
scas
sub
push
loop
setnp
lcall
and
sbb
orb
pop
rcrb
int3
jl
pop
and
xchg
xchg
xchg
lret
movsb
stos
mov
cmp
sub
mul
jecxz
cmpsb
imul
stos
ror
ficoml
xor
outsb
mov
inc
sar
push
push
cmc
lret
ds
jmp
pop
and
test
mov
fcmovbe
fildl
or
cmp
xor
jmp
stos
sbb
add
push
out
ja
insl
mov
fisttpl
xor
add
mov
push
movl
fs
cmp
xchg
jae
mov
mov
outsb
mov
aas
mov
mov
mov
mov
sub
sbb
or
sti
sbb
or
cmp
sub
jnp
sub
sbb
mov
mov
fwait
mov
bound
ss
ficompl
sarl
or
pop
mov
dec
jmp
pop
mov
insl
lret
inc
dec
xor
and
push
loope
sbb
imul
iret
fistpll
sub
sbb
or
sti
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
sti
sbb
or
cmp
sub
jnp
imul
sahf
dec
xor
jmp
dec
lods
xchg
xchg
dec
add
iret
in
cmpsb
insl
xchg
jne
sbb
add
scas
jecxz
aam
shlb
mov
jge
or
int3
xchg
in
icebp
dec
adc
xchg
jp
cmp
cmpsl
push
cmpsb
sbb
xchg
mov
jnp
fidivrs
mov
cmp
xchg
stos
lock
sti
mov
icebp
mov
mov
lahf
push
inc
test
iret
popa
xchg
or
in
data16
xor
pop
test
push
mov
cmp
fists
cmpl
mov
add
cmpsl
test
les
cwtl
jb
jo
mov
ret
sbbb
inc
aad
dec
jne
xchg
xor
rcrl
ds
mov
jnp
dec
test
lret
fcoms
std
dec
push
jmp
jecxz
add
stos
push
lret
and
enter
or
jae
xor
xchg
scas
push
rep
nop
adc
jge
push
pusha
loopne
frstor
mov
gs
xor
mov
jo
dec
or
or
insb
mov
lcall
sbb
mov
mov
fwait
pop
adc
sbb
andb
int
gs
test
sbb
ret
mov
cmp
data16
repz
mov
stos
jge
cltd
add
mov
pop
stos
or
xor
xchg
addl
movsl
mov
mov
insl
ja
pop
pop
jecxz
cmp
adc
push
sahf
call
out
aam
lret
ret
mov
pop
pop
mov
mov
lahf
push
or
push
adc
xchg
cld
xor
inc
clc
add
jae
hlt
dec
xor
ffreep
cmpsb
mov
lea
push
ret
fcmovbe
mov
mov
push
jb
push
fcmovbe
add
cmc
lods
jbe
sbb
scas
jle
push
test
mov
test
push
push
clc
lea
jns
stos
fdivl
les
push
lea
xor
out
pop
mov
faddp
stc
jmp
dec
sahf
xor
fadd
pop
imul
addb
lods
es
dec
ljmp
stos
jne
pop
sarl
stos
lods
dec
xor
fstl
repz
outsl
mov
pop
cmp
jle
clc
inc
mov
push
and
cli
mov
cld
dec
xor
add
aad
scas
inc
in
hlt
pop
push
push
shrl
mov
mov
mov
cmpsl
and
mov
rcrl
mov
adc
jb
push
cmp
jl
fst
hlt
xchg
add
clc
push
bound
adc
test
or
pop
scas
outsb
ret
mov
in
jecxz
addr16
jp
scas
rcll
aam
push
int3
dec
int3
inc
pop
pushf
xor
enter
jmp
cmp
lods
cmp
daa
mov
scas
push
stos
in
pop
and
or
les
pop
adc
mov
xchg
jns
enter
std
inc
cwtl
jno
push
loope
hlt
xor
adc
mov
outsb
sti
pop
jno
sub
sbb
ror
inc
cmp
jns
out
dec
fdivr
pusha
jne
or
xor
cmc
cltd
leave
cmpsb
loopne
add
lret
jno
mov
push
imul
cmp
into
mov
arpl
mov
sub
lahf
shrb
sti
sub
std
pop
icebp
sti
xlat
cmp
mov
push
inc
aam
mov
xchg
push
cmp
pop
fsubl
mov
outsb
jno
ljmp
mov
scas
das
fwait
inc
std
fdivs
inc
mov
add
pop
adc
call
mov
repnz
inc
xor
mov
xchg
xchg
aam
push
add
and
sub
fsubs
iret
lea
add
loope
push
gs
fcoml
int
daa
in
arpl
mov
mov
aad
push
cld
psubsb
je
outsb
notb
sarl
inc
clc
insb
clc
lret
mov
mov
fisubs
movsl
and
push
cmp
movsb
out
cli
lcall
mov
imul
loopne
sub
cltd
sub
outsb
xchg
rcl
iret
insb
lea
outsl
sbb
inc
sbb
push
stc
or
and
repnz
sbb
push
shrb
loop
mov
cmp
or
cwtl
jp
dec
pop
adc
leave
cmpl
divl
in
and
xor
lahf
ljmp
popf
lods
add
test
iret
mov
mov
add
andb
scas
and
inc
ds
out
addr16
mov
ret
daa
add
outsb
jno
gs
jl
add
adc
pop
jae
jne
jno
inc
in
add
push
sbb
inc
xor
mov
push
cmpsb
fwait
dec
adc
add
mov
xor
ret
and
scas
aaa
mov
push
sbb
cmp
imul
popa
adc
pop
mov
push
mov
mov
sub
addr16
fildl
cli
sbb
sub
fwait
repnz
jecxz
sub
jns
jp
mov
mov
jb
push
mov
mov
adc
loopne
cltd
cwtl
xlat
mov
test
add
sbb
jnp
rcr
push
sub
ja,pt
mov
xlat
jl
xor
sub
adc
inc
mov
test
push
mov
cmp
mov
xchg
rcrb
rolb
les
arpl
inc
push
xor
inc
xchg
mov
xchg
fsubs
sbb
inc
or
xor
ret
xor
idiv
xchg
jnp
bound
and
pop
out
test
fadd
pop
std
subl
fldt
add
lcall
adc
or
add
out
jne
or
push
cmc
imul
adc
shl
jge
mov
xchg
stos
sub
pusha
mov
fidivrl
or
mov
mov
mov
dec
sub
leave
xorl
and
lcall
loopne
fwait
lret
lcall
xchg
clc
hlt
mov
mov
xchg
inc
out
pop
mov
mov
lcall
or
sbb
nop
xchg
test
push
pop
dec
dec
out
adc
xor
cmpsl
cmp
cmc
outsl
test
add
pop
push
repz
rolb
repnz
dec
mov
sahf
icebp
inc
add
mov
inc
lret
into
in
cwtl
push
xor
out
mov
mov
or
push
ret
add
ss
lds
sbb
jge
jae
enter
outsb
outsb
repz
and
mov
rdpmc
in
mov
push
mov
faddl
insb
int3
mov
insb
imul
xchg
fidivrl
scas
lret
in
push
jle
mov
mov
push
js
out
jp
nop
test
adc
add
or
xor
sti
shlb
push
testb
and
neg
dec
lret
jae
lret
arpl
sbb
arpl
imull
fnstenv
in
pusha
aad
rolb
out
adc
xchg
xchg
xor
or
add
xor
xor
jmp
mov
shlb
add
sbb
mov
aad
cs
add
loop
xor
idiv
cmp
out
ficompl
shrb
inc
stos
inc
inc
mov
ljmp
push
in
push
into
inc
fsub
jne
ret
cli
jge
dec
sti
in
jecxz
sbbb
std
dec
mov
fldt
jmp
cmpsl
fnstcw
cmp
mov
daa
adc
xor
sti
xchg
int
cmp
push
gs
mov
mov
sub
inc
mov
mov
les
push
lea
or
rorb
cmp
jge
test
mov
xor
sub
test
xor
shll
xchg
test
jbe
stc
mov
xchg
ja
mov
push
cmp
daa
adc
call
dec
pop
pop
jmp
mov
pop
or
popf
sbb
aas
dec
dec
loop
ljmp
adc
into
insl
xchg
loope
push
mov
fsubrl
out
dec
shll
dec
scas
inc
xchg
inc
aam
lret
scas
mov
test
and
mov
push
xchg
mov
inc
pop
jmp
popf
cwtl
cmp
dec
push
imul
or
fimull
pop
cmp
sbb
aad
stc
adc
and
idivb
sti
sub
adc
stc
mov
mov
jecxz
jb
jge
mov
movsb
and
cmc
push
sar
push
xchg
mov
test
rolb
aaa
daa
incb
in
add
lods
call
cmp
sbb
mov
and
mov
scas
fisubl
mov
dec
mov
idivb
fidivs
jnp
je
mov
or
xchg
inc
mov
movsl
arpl
push
xor
stos
mov
addr16
pop
xor
incl
lcall
pop
enter
mov
and
ja
or
stos
stos
pop
rorb
sbb
push
enter
lcall
pop
mov
xlat
inc
fidivs
pop
push
mov
fistpl
xchg
xor
jl
jmp
mov
push
add
sbb
imul
stos
fistl
mov
cmpsl
mov
int
adcl
loop
pop
lds
push
xorb
xchg
mov
fucom
test
inc
xor
stc
out
and
jno
fldenv
cmp
insb
ret
adc
loop
xchg
cltd
scas
pop
sbb
fsubrs
hlt
dec
out
xchg
jmp
jno
int
add
pop
jp
fidivs
inc
and
stc
cmc
mov
or
stos
fsubrs
or
stc
div
mov
or
insl
int3
idivb
or
xchg
xchg
xchg
insw
decb
stos
push
jle
mov
enter
push
addl
push
lods
divl
pop
mov
jno
mov
pusha
loop
xchg
adc
pop
daa
aam
push
push
and
int3
loope
ss
push
add
ljmp
clc
dec
xchg
out
jo
cmp
call
jns
js
andl
notb
out
sub
movsb
bound
lret
mov
insl
mov
adc
rorb
jecxz
pop
jne
daa
xor
adc
push
fdivl
cmpsl
mov
mov
jp
stos
or
es
xor
pushf
cli
lods
xor
xchg
inc
faddl
stos
sub
out
mov
out
outsl
and
mov
loop
test
cmpsl
xor
fucomip
inc
popa
sti
movsb
aaa
cmp
xlat
repz
jmp
ljmp
pop
aam
dec
push
dec
dec
pop
inc
nop
lds
mov
dec
out
pusha
mov
andl
xor
pop
push
mov
mov
lcall
push
add
lods
dec
sub
icebp
xchg
inc
xor
xchg
sub
int
or
pop
dec
add
mov
loop
jge
cmp
jns
fwait
push
hlt
cmp
lcall
inc
sbb
mov
rcr
mov
fists
mov
les
sub
ror
pop
aas
cmp
dec
in
and
sbb
fisubs
dec
jp
adc
pushf
xor
insb
sub
xor
inc
jbe
test
adc
dec
cld
pop
pop
pop
sbb
inc
out
lods
jo
int3
mov
insl
ror
xchg
test
mov
mov
mov
test
fcmove
or
insb
pop
push
lds
out
daa
xchg
mull
cmp
andb
jl
shl
push
testl
pop
or
scas
xchg
cmp
popf
nop
je
sar
lds
mov
mov
xchg
and
dec
addb
adc
jb
loop
ds
and
inc
ret
mov
inc
add
orl
xorl
outsb
jg
push
flds
shrb
jno
jge
mov
mov
sarb
mov
dec
xchg
or
mov
pop
je
lahf
movsb
jmp
push
pop
push
loopne
dec
icebp
addr16
cltd
mov
cltd
push
incl
aas
mov
sahf
mov
dec
sbb
jg
insb
or
xor
test
pusha
pop
jae
and
lret
in
test
inc
cmp
cmp
mov
sbbb
and
sarb
mov
ljmp
add
fldl
inc
out
sbb
iret
push
and
push
insl
cmp
jg
fcmovnu
or
mov
rcrl
inc
and
aad
mov
into
cli
testb
jno
fucomp
jnp
sti
je
cltd
sbb
inc
repnz
mov
inc
stos
dec
pop
xor
fstpt
xor
jmp
loope
popa
cmp
lock
in
into
pop
jge
jl
ss
into
adc
pusha
insb
clc
adc
stos
or
rorl
jne
aas
leave
into
idivb
cmp
ljmp
push
push
pop
mov
add
inc
cmp
fidivs
xchg
sbb
push
and
loop
cmc
or
pop
mov
pop
ficompl
pop
mov
and
sub
sbb
mov
inc
mov
adc
xor
or
jmp
dec
inc
lahf
dec
sbb
sar
push
mov
rolb
jbe
daa
add
dec
inc
pushw
push
jmp
cs
fs
cmp
mov
inc
movsb
addb
stos
xchg
and
sti
push
aas
jnp
int
cmp
xchg
popf
int3
jle
popf
mov
jmp
out
cmp
negl
dec
cmpsl
pop
scas
cmpsl
aam
pop
and
leave
nop
out
pop
and
nop
xor
setnp
add
fimull
sub
xor
sub
popa
loop
cmc
sahf
divb
push
lods
hlt
push
xor
sbb
neg
inc
aam
sahf
rolb
cmp
push
inc
fisubl
pop
jle
sub
cmc
jbe
jns
repnz
stos
fadd
push
lret
je
dec
push
mov
pop
mov
push
cmpsl
pop
jp
mov
jle
jbe
lret
das
sbb
mov
push
pop
pop
fs
jnp
cmc
test
or
adc
in
dec
out
mov
pushf
faddl
test
xchg
sub
std
jp
push
sti
add
adc
xchg
jae
push
cmc
stos
cmp
sbb
mov
hlt
addr16
fdivr
test
arpl
ds
stos
cwtl
or
out
add
pushf
insl
ja
jg
cmp
inc
dec
sbb
int
and
add
mov
repnz
ljmp
adc
leave
mov
dec
shrb
jnp
xchg
cmovne
jle
dec
push
aaa
test
stos
dec
sub
mov
fldcw
insb
inc
lcall
inc
push
push
cmp
or
leave
cmc
or
pop
enter
movsl
enter
mov
dec
and
outsb
ds
pop
pop
sahf
mov
outsb
and
jp
out
ret
inc
fisttpll
popf
stos
dec
es
scas
aas
mov
jge
add
mov
jns
mov
and
imul
ficomps
jno
mov
push
lahf
fldcw
fistl
cmp
je
or
loope
push
mov
pusha
lret
test
mov
or
sbb
insl
cmpl
test
and
cwtl
cmp
add
fidivl
nop
mov
push
jmp
pop
mov
das
mov
repnz
call
xchg
cs
jg
dec
mov
mov
or
int
dec
lock
call
or
or
cmp
fistpl
std
subl
aas
push
and
imul
das
mov
jo
movsb
jp
std
loopne
or
shrb
inc
fldl
mov
sbb
dec
or
add
push
in
inc
mov
out
dec
push
xchg
sub
inc
aaa
or
outsl
cmpsl
scas
lods
jp
dec
stc
push
or
lret
sub
ret
push
jae
jp
or
xchg
cli
call
je
int3
or
fdivrs
dec
sub
rcll
mov
or
lahf
and
loope
fsubrl
loope
mov
push
inc
lods
pop
clc
pop
mov
or
jg
aas
add
sti
xchg
pop
pop
pop
orl
das
fldl
adc
cmpsb
out
scas
enter
push
in
dec
cltd
inc
inc
leave
or
mov
xchg
imul
test
add
xchg
dec
jae
das
lret
mov
push
fs
les
add
int3
insb
mov
or
or
lods
cli
rcrb
and
test
mov
inc
mov
push
cmp
push
mov
pop
call
dec
ja,pt
xchg
rorb
fdivs
sbb
and
and
js
lret
cmp
ret
push
fdiv
sub
into
lret
repnz
repnz
out
out
jge
mov
leave
cmp
mov
leave
popf
popf
adc
ja
daa
jl
shr
negl
xor
repz
in
pusha
test
push
fwait
lcall
shrl
cmc
mov
xlat
mov
inc
xchg
mov
sbb
stos
lret
movsl
jmp
pop
cwtl
mov
lcall
jecxz
cmc
js
inc
jge
push
and
fwait
add
and
cmc
jo
loopne
lahf
inc
dec
fnsave
push
js
xchg
popa
sti
mov
mov
in
test
mov
push
mov
jne
mov
outsb
mov
pop
sbb
jno
dec
xchg
mov
jp
pushf
aam
or
adc
daa
mov
cwtl
and
mov
ret
ja
ja
cmc
jp
sbb
div
add
icebp
jo
adcl
bound
icebp
loopne
pop
fistpll
mov
push
or
sbb
mov
dec
push
push
xor
iret
stos
sbb
sbb
cmp
add
stc
mov
fsubp
sub
fnstenv
sti
xchg
cmp
inc
test
xor
enter
xor
out
and
cwtl
jecxz
inc
mov
cmp
mov
aaa
sub
daa
or
ret
add
dec
xlat
add
je
imul
jg
or
stos
addb
jne
in
test
push
add
xor
or
adc
push
pop
dec
clc
jecxz
sub
sub
int3
iret
enter
loope
or
xlat
sub
xor
adc
pop
and
or
xchg
sbb
xchg
mov
push
sbb
subb
nop
xor
xchg
mov
add
dec
outsl
imul
fisttpll
fldcw
xchg
mov
lods
jae
jle
xor
xchg
mov
xchg
dec
xor
fstps
js
fwait
push
xorb
push
lret
addb
or
xor
sbb
cmc
sar
push
or
cmp
int
in
xchg
daa
sbb
add
fiadds
and
stos
lock
cmc
test
sub
fistl
pop
jmp
mov
cmpl
xchg
jne
jecxz
sbb
sar
daa
push
inc
fidivs
mov
xchg
aaa
in
adcb
jp
mov
jbe
dec
and
movsb
fisubl
rcrb
dec
loop
pop
in
or
icebp
fisttpll
jle
lds
add
mov
adc
insl
addr16
imul
das
xchg
ret
ffreep
out
jbe
push
out
add
add
cs
mov
icebp
scas
cld
jbe
je
inc
add
ss
push
cmpsl
testb
cmpsb
insl
dec
sti
mov
mov
cltd
aas
xchg
test
fst
jne
pop
out
mov
cmp
outsl
imul
icebp
add
adc
js
mov
arpl
sbb
pop
jne
pop
ret
adc
pop
jo
add
mov
add
inc
dec
mov
test
inc
arpl
hlt
int
mov
loopne
call
mov
repz
xor
push
sub
push
sbb
shrl
push
add
jne
inc
adc
jb
push
stc
inc
mov
clc
cmp
ret
mov
rorl
lahf
out
aam
imull
pusha
movsl
faddl
jo
mov
addr16
ljmp
je
sbb
adc
fcomp
push
mov
xor
jae
jg
mov
adc
insl
js
push
jg
aad
sahf
ja
stc
mov
xor
flds
sub
jmp
mov
lods
mov
dec
adc
xchg
das
inc
xchg
repnz
mov
and
ret
orb
fdivs
push
cmp
ja
scas
cmpsl
jge
cli
mov
stc
push
iret
fdivrl
xor
sub
sbb
or
movsl
in
and
arpl
out
daa
mov
insl
movsb
sbb
nop
xor
loopne
or
xchg
lods
insb
jmp
mov
mov
push
fadd
inc
fiaddl
enter
mov
xlat
cmc
rolb
xchg
test
test
ja
xchg
xchg
sub
daa
scas
push
mov
adc
stos
cmp
sub
sbb
or
sti
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
sti
sbb
or
cmp
sub
jnp
imul
mov
dec
stos
cmp
sub
sbb
or
cli
sbb
or
cmp
sub
jnp
imul
mov
dec
scas
cmp
sub
jnp
adc
in
mov
int3
shll
mov
test
movl
jno
imul
xor
push
shll
jbe
pop
adcl
mov
inc
xlat
push
out
divl
add
xor
push
mov
loope
icebp
movl
xlat
push
out
divl
add
xor
je
or
js
push
rcrl
cwtl
inc
mov
out
fwait
and
sbb
lods
sti
dec
xor
out
mov
je
inc
push
sbb
xor
pop
pop
sarl
adcb
mov
loopne
jl
hlt
push
jge
icebp
mov
inc
loopne
sbbb
popa
jmp
and
subb
pop
aaa
cmp
push
xlat
rorb
add
into
lret
mov
clc
jmp
outsb
movsb
pop
add
mov
or
and
repnz
cmp
or
push
xchg
call
cmp
xlat
sub
inc
je
pushf
sub
adc
lock
xchg
lcall
inc
xlat
push
out
divl
add
xor
push
shll
ja
pop
adcl
fadds
or
adc
outsl
mov
inc
movsb
xor
push
loopne
loop
mov
mov
andb
xchg
jne
push
in
and
ja
push
loop
cli
dec
les
mov
or
adc
rcll
loope
icebp
pop
adcl
mov
inc
xlat
push
out
divl
add
xor
push
shll
ja
pop
adcl
mov
inc
repnz
fdivs
jns
xchg
lods
dec
pop
inc
divl
and
fs
xor
jb
xchg
not
cmp
sar
daa
rclb
jnp
pop
jae
int
xchg
sahf
or
cmp
loopne
push
adc
fidivs
in
sbb
ds
jecxz
xchg
test
repnz
icebp
fdivl
adc
sub
mov
and
cmp
icebp
jp
bound
mov
outsb
sub
xchg
loopne
lret
test
adc
or
rol
mov
cld
lret
sbb
and
dec
xchg
cs
and
inc
or
xor
fldt
and
fidivrs
mov
divb
add
aas
fisttpl
xchg
jo
sbb
cltd
mov
jbe
xchg
loop
sub
push
mov
xchg
push
cwtl
and
mov
negl
pop
xchg
mov
insb
push
mov
push
mov
sbb
add
xchg
mov
dec
fistpl
jnp
adc
shrl
mov
lret
mov
sub
ret
mov
ret
dec
mov
cmpl
fwait
push
popf
xlat
adc
scas
fwait
pushl
hlt
loope
jne
xchg
sti
pushf
inc
cmp
nop
fwait
sahf
fisubl
iret
ds
das
mov
lahf
pop
lret
xchg
inc
dec
es
lods
xchg
push
in
js
outsb
jno
pop
std
push
jbe
repz
mov
hlt
ljmp
adc
mov
inc
inc
dec
fs
subl
stos
int
daa
test
in
ss
xchg
stc
inc
xor
push
push
sbb
push
ret
mov
inc
jnp
filds
lock
sbb
mov
aad
mov
orl
clc
adc
or
xor
add
and
cltd
sub
jbe
cs
shll
pop
push
xor
movsb
js
mov
mov
std
imul
fists
je
push
xchg
push
shl
jbe
mov
sbb
rolb
mov
out
lea
push
push
rclb
adc
popa
jl
insb
dec
pop
inc
loopne
sub
cmp
xchg
andb
xlat
dec
leave
insb
clc
out
ret
aas
sti
lds
sbb
sub
adc
push
adc
adcb
aad
and
mov
in
xor
aad
lret
scas
dec
sub
outsl
and
in
out
scas
test
stos
lret
out
out
xchg
insl
dec
jnp
in
movsb
scas
push
test
ja
repz
inc
frstor
lret
ss
inc
mov
adc
movsb
jae
out
out
divb
mov
jle
dec
or
sahf
mov
push
xlat
lahf
mov
sub
fisttpl
movsl
scas
mov
pusha
xlat
adc
inc
fcmovnbe
iret
aam
das
jmp
sbb
mov
or
sti
mov
pop
or
fdivrl
repnz
mov
dec
pusha
rorl
cs
xchg
je
lret
mov
rol
adc
pop
icebp
and
dec
jbe
sar
paddd
mov
or
imul
and
adc
mov
cmpsl
push
inc
fcomps
adc
sub
call
sarl
inc
xchg
or
jns
ror
sbb
sahf
jmp
divb
ljmp
mov
shlb
stos
sbb
sbb
std
push
andl
repz
enter
testb
add
scas
jb
popa
test
mov
xchg
pushf
cld
imul
or
pop
cltd
aas
push
dec
jne
cmp
loopne
mov
push
addb
das
icebp
lods
adc
xor
stos
ficompl
adc
add
gs
cmp
mov
mov
hlt
popa
mov
lods
xchg
aas
leave
xor
push
adc
and
leave
jb
xor
mov
pop
test
cmp
je
bnd
jmp
mov
inc
mov
fwait
inc
xor
push
outsb
das
lret
pop
gs
js
in
sub
mov
fbld
test
inc
xchg
movsb
out
or
js
jbe
push
shlb
push
and
sbb
inc
pop
push
jg
sub
xor
das
js
sar
shlb
stos
push
xchg
arpl
dec
mov
aas
add
pop
push
ret
loope
loop
adc
ja
pop
add
fwait
xchg
inc
mov
inc
je
xchg
cmpb
jae
jge
dec
sub
rcrl
inc
daa
ret
mov
xchg
lret
pop
or
outsb
cmp
pop
xchg
cmpsb
sbb
test
or
inc
stc
or
push
stos
jg
lock
in
mov
lcall
xchg
mov
in
ja
fistps
cmp
aas
jge,pt
or
sub
hlt
pop
mov
and
mov
dec
jge
test
loopne
jne
jno
or
popl
gs
mov
xor
test
subl
and
das
cmp
jne
into
xchg
aaa
hlt
movsl
lahf
ret
fildl
xchg
fst
vrsqrtps
xchg
ret
in
xchg
negl
mov
in
insl
fwait
sub
jno
clc
fadd
nop
mov
mov
xchg
jl
outsb
lock
xchg
mov
xchg
lds
mov
std
fdivr
push
in
sub
lret
xchg
cmp
rcl
dec
xchg
insb
jp
jno
sbb
cld
cmp
inc
es
adcl
sub
xor
xchg
push
ret
imul
jo
or
jle
mov
mov
cs
mov
sub
push
cmp
fists
cmp
adc
movd
push
jnp
sbb
call
mov
push
xor
sbb
jns
mov
cmp
test
enter
mov
push
sbb
pop
sbb
jns
fadds
fidivs
rdtsc
pusha
inc
adc
inc
test
inc
fistpl
add
adc
inc
es
aaa
cld
addr16
repz
xor
mov
shrb
outsl
daa
icebp
lret
cmc
mov
bound
insl
cmp
arpl
adc
jae
xor
and
adc
lea
es
mov
sbb
aaa
xchg
gs
js
dec
mov
xor
xor
inc
push
cmp
outsb
aaa
popf
stos
mov
xchg
pop
cmpsb
jmp
inc
rolb
and
lods
add
cmpsl
jg
lds
pop
mov
stos
andb
out
add
cmp
cltd
and
lahf
test
jg
insb
xchg
gs
mov
push
push
cmp
or
pop
mov
sbb
repnz
mov
pop
and
test
xor
lahf
add
fisttpl
inc
push
inc
push
mov
clc
shrb
pop
sti
movsb
test
push
mov
pop
mov
in
scas
and
jbe
and
pop
jbe
fnstsw
dec
movl
js
icebp
lahf
inc
mov
push
jo
loope
xor
add
mov
imul
dec
push
mov
dec
pop
mov
pushf
fxam
data16
pop
sahf
sub
movsb
sbb
fists
scas
sbb
lret
kmovb
fwait
clc
pop
xchg
xor
mov
and
sub
jp
divl
and
xchg
mov
cmp
movsl
loop
and
test
mov
sbbb
fwait
push
mov
or
sub
xchg
jo
nop
push
xchg
mov
shrl
add
in
xor
inc
mov
aas
pop
adc
insl
and
dec
dec
cmc
fnstsw
cmc
jo
shl
mov
jmp
repnz
std
es
fnstenv
scas
jg
inc
scas
mov
js
xor
test
ss
hlt
adc
stos
dec
ds
shr
mov
sarb
adc
mov
inc
or
pushf
iret
sarb
mov
xor
rolb
in
sbb
lea
push
fisttps
pop
cld
stos
imul
leave
push
jnp
in
sbb
and
sarl
sbb
push
aaa
shl
mov
mov
fiadds
lods
pop
jo
and
jnp
xor
push
push
cmp
ljmp
pusha
inc
imull
inc
inc
push
aad
jl
lea
lods
pop
sbb
fnclex
hlt
pop
repz
out
sbb
lret
scas
mov
inc
inc
pop
pop
data16
pusha
nop
cmp
sbb
xchg
or
iret
hlt
cmpsb
mov
stos
add
sbb
fsubrs
mov
pop
int3
outsb
ret
sbb
jae
adc
idivl
jnp
into
rolb
ljmp
mov
mov
cmp
inc
push
jns
or
shll
je
ret
addr16
imul
sbb
mov
jle
movsl
cmp
push
and
jne
aam
sub
in
sarl
lods
dec
fnstenv
xchg
inc
pop
icebp
test
aam
jo
lods
mov
cmp
nop
sub
mov
cld
jb
lcall
lods
xchg
mov
rcll
jp
ret
pushf
dec
mov
mov
pushf
jns
pushf
add
inc
in
xchg
fsubrs
mov
sub
xchg
fimuls
rol
repz
lea
ljmp
pop
mov
cwtl
or
idiv
mov
jl
scas
cmc
sub
and
ds
or
into
mov
stos
enter
jmp
mov
mov
pop
adc
mov
shlb
adc
sbb
outsb
lcall
add
outsb
inc
addr16
js
insb
loope
dec
das
mov
shll
push
inc
adc
shl
push
in
cwtl
sub
dec
pushf
dec
inc
imul
xor
inc
adc
and
push
stos
inc
push
hlt
data16
js
mov
sahf
in
pop
pop
clc
ret
fisttps
fisubrl
cmp
repnz
ret
xor
mov
and
add
scas
xchg
cli
out
fcmove
xlat
sbb
lods
fsubs
hlt
mov
stc
xchg
and
movsl
mov
ljmp
lds
cli
arpl
mov
mov
shll
and
dec
arpl
sub
push
mov
push
mov
and
and
xchg
pop
xlat
mov
sub
fidivl
fldpi
divb
jne
je
adc
mov
inc
in
push
add
adc
outsb
sbbl
cmc
frstor
lret
pop
int
push
es
add
dec
in
or
cmp
inc
pop
imul
pushf
mov
cmpl
pop
xchg
lahf
xchg
iret
jae
dec
mov
dec
jbe
xchg
pop
fst
xchg
dec
or
and
inc
inc
bound
mov
aaa
sbb
es
adc
test
cmpb
and
sub
jne
mov
or
aaa
fmull
add
rclb
mov
lret
fwait
stos
jo
sti
sub
sbb
pop
or
orb
or
pop
out
push
mov
jl
sbb
call
mov
mov
jl
or
and
inc
cmp
mov
fs
mov
fstpl
test
repz
adc
ret
scas
xchg
jns
pop
aas
in
fildll
xchg
jmp
fstps
lods
sub
xchg
shll
jg
sti
repnz
add
add
lds
lret
xor
adcb
mov
enter
je
dec
pop
mov
adc
lret
movsb
and
xchg
ljmp
add
cmpl
xchg
fld1
mov
cmp
fisttpll
mov
adc
enter
movsb
popa
mov
inc
xchg
sbb
adc
mov
cld
aad
fbld
adc
push
mov
arpl
ljmp
aaa
xor
add
aad
adc
lock
xchg
sub
pop
imul
lret
arpl
pop
pop
lea
hlt
ret
push
xor
out
arpl
orps
mov
dec
mov
sub
fstp
push
pushf
ss
inc
or
sbb
or
pop
std
out
mov
loope
cmp
and
mov
cmpsb
inc
aas
push
idiv
out
out
inc
mov
mov
bound
xchg
rcll
jmp
les
in
pop
sbb
xchg
cwtl
repz
add
dec
repz
inc
xchg
popf
movsl
or
pop
xchg
mov
gs
addb
jmp
lods
dec
adc
out
call
adc
push
mov
xor
xor
dec
lods
lock
cmp
jbe
inc
mov
addr16
push
sarb
test
mov
repz
addr16
daa
enter
mov
movsb
stc
sub
mov
mulb
outsb
into
out
mov
bound
pop
push
mov
decl
adc
rorb
aad
stos
push
mov
adc
call
xor
addr16
out
jg
mov
inc
xchg
lahf
bound
push
jl
mov
mov
icebp
sti
popa
scas
jo
aaa
out
arpl
fs
fisubs
and
test
aaa
sbb
pop
mov
mov
fldenv
scas
aad
cli
stos
popf
jle
lods
ds
and
rorl
jnp
push
fsubrs
mov
aad
je
dec
femms
xor
xor
sub
subl
mov
es
insl
mov
fisttps
sub
popf
out
lods
je
lods
mov
ret
pop
mov
fidivrs
mov
pop
pop
aam
lret
inc
arpl
sbb
push
dec
sub
pop
adc
sub
pop
cmp
xlat
lar
daa
push
aam
cwtl
mov
jmp
js
xchg
mov
add
insl
scas
testb
mov
jb
int3
sub
inc
mov
push
loope
cwtl
mov
fsts
lret
out
lea
mov
lcall
and
mov
lahf
adc
dec
mov
jp
cli
clc
xchg
pop
pop
negl
scas
aaa
jge
push
mov
mov
mov
and
addb
mov
mov
repz
dec
std
scas
add
push
sbb
cmpsb
scas
pop
idivb
push
in
xchg
dec
sbb
xor
mov
cmp
inc
pop
das
movsl
icebp
movsb
mov
inc
mov
sub
clc
xor
aad
mov
es
or
loop
imul
adc
and
mov
int
or
lds
frstor
push
add
repz
mov
inc
clc
mov
aas
adc
rol
out
xchg
repz
pop
adc
iret
xor
mov
imul
and
adc
test
jnp
and
mov
xchg
vmovq
xchg
cmpb
pop
add
outsl
jg
rclb
jbe
shrl
mov
test
pop
cwtl
ror
test
insb
add
cli
add
adc
sar
sbb
jb
add
jne
xchg
lods
mov
mov
fbld
mov
jne
add
loop
jbe
cltd
cli
movsb
in
shlb
clc
jle
add
test
imul
outsb
dec
test
mov
outsl
ja
hlt
mov
loope
push
jmp
loop
sub
outsl
dec
loopne
lret
mov
and
and
popf
dec
sbb
inc
mov
popf
rorb
in
insb
pop
or
mov
xchg
ret
in
pop
pusha
cmp
mov
addr16
mov
pop
fnstcw
adc
aad
adc
aaa
sub
mov
stos
test
iret
mov
sbb
sbb
mov
fwait
xchg
arpl
inc
ss
adc
cmp
mov
jnp
jg
je
sub
je
lcall
mov
jno
lock
cmp
jnp
ds
mov
jmp
sar
add
mov
in
mov
lea
pusha
sbb
imul
mov
mov
xchg
push
rcl
mov
inc
loopne
xchg
arpl
mov
pushf
iret
cmp
mov
ficoms
xor
xor
xchg
xorb
mov
sbb
sbbl
jp
aad
mov
ljmp
jo
jnp
ret
adc
fisubl
rcll
push
mov
mov
repz
jnp
imul
test
roll
pop
test
pop
test
aas
dec
pop
addr16
int3
push
int
aas
incb
and
jg
lock
sahf
push
cltd
push
cltd
sbb
push
xor
gs
lock
or
pop
out
test
xlat
inc
dec
ss
adc
sub
sbb
push
sub
data16
int
outsb
pop
inc
pop
mov
mov
add
clc
xor
dec
aas
adc
idivb
outsb
outsl
push
fs
in
cltd
shl
sahf
enter
faddp
push
incb
pop
outsl
std
outsl
push
adc
xchg
xchg
aaa
mov
jbe
pop
xchg
push
and
pop
or
shr
push
divl
filds
imul
or
loop
mov
mov
fxch
lahf
in
out
imul
jae
sti
sbb
mov
xlat
lcall
inc
jno
and
push
lds
clc
std
orl
test
fisttps
dec
ss
mov
mov
ror
insb
xchg
push
and
cwtl
or
shlb
lret
jg
mov
xchg
je
pop
into
mov
jae
cmpsb
or
dec
xlat
lcall
push
inc
xor
fsubl
pop
insb
cmp
imul
fsubrl
sbb
aas
and
pop
mov
lock
jl
gs
incb
sbb
hlt
inc
sub
push
push
push
jl
pop
adc
jo
mov
shl
imul
inc
jno
jmp
imul
out
inc
sbb
loopne
xchg
not
jo
lret
mov
in
stos
jns
daa
stc
cltd
fisubs
xor
scas
ret
inc
mov
mov
mov
push
sbb
sbbl
xchg
inc
pop
push
mov
mov
sub
jae
push
cmp
subl
mov
ss
js
mov
mov
loope
out
scas
insl
pop
jae
ljmp
outsl
insb
aaa
jbe
lret
xchg
sub
cli
icebp
pusha
outsb
ja
lret
jns
hlt
jnp
out
jmp
sub
jo
out
adc
xchg
jb
add
ds
out
push
ret
mov
and
mov
mov
and
xor
cmp
lods
mov
gs
stos
xchg
dec
pop
push
inc
mov
decb
icebp
inc
ret
adc
std
test
fists
inc
pusha
rcll
sar
push
imul
and
mov
in
cmpsl
fsub
out
les
dec
sub
mov
lock
arpl
ret
addr16
test
jo
movsl
or
in
xchg
xor
loopne
scas
daa
pop
mov
add
xor
test
xchg
fldcw
xorl
xchg
shr
dec
fldcw
sub
xor
enter
sub
ficoml
xchg
mov
imul
or
fistl
mov
mov
mov
push
stos
movsl
adc
popa
nop
leave
lods
pop
mov
cwtl
loopne
dec
je
cmpsb
pop
fwait
nop
or
fbld
arpl
in
adc
sub
test
fstpt
mov
sbb
add
xchg
mov
adc
cmpsb
jnp
sbb
ljmp
pop
mov
mov
cmp
or
scas
imul
xor
mov
scas
adc
jns
jecxz
enter
aas
jmp
daa
adc
adcb
mov
lret
push
push
and
sub
jb
lret
cmp
fwait
aas
nop
and
pop
fwait
or
inc
inc
cmp
mov
repz
xchg
mov
jbe
bound
nop
out
xor
cwtl
xchg
pop
sub
out
mov
push
leave
aas
sub
pop
jp
fisubs
popf
push
jp
cmp
popa
push
pop
mul
sub
daa
push
sbb
pop
clc
das
aas
mov
cltd
cltd
pusha
dec
and
in
mov
pop
xor
cmc
rcl
cmp
cmp
dec
mov
mov
pop
repz
push
mov
addb
xchg
mov
test
out
sub
imul
adc
mov
rorl
xor
push
out
mov
pop
int
out
loopne
push
rcrl
mov
pop
mov
icebp
and
mov
mov
imul
subl
loop
cmp
int
stos
aad
aaa
push
sbb
dec
hlt
lods
xchg
cwtl
push
das
hlt
movsb
adc
pop
les
faddp
push
sbb
mov
imul
pop
push
xor
popf
jbe
int3
add
mov
mov
mov
xchg
pop
jb
outsl
loope
dec
push
jg
mov
int
xchg
fcoml
rclb
gs
jne
lret
mov
divl
add
xor
push
shll
ja
pop
adcl
mov
inc
xlat
push
out
divl
add
xor
push
shll
ja
pop
adcl
mov
inc
push
shll
divl
add
xor
push
shll
ja
pop
adcl
mov
inc
xlat
push
out
divl
add
xor
push
jnp
loope
xchg
outsb
push
pop
inc
dec
cs
cmp
cmpsb
insl
lcall
loope
pop
push
lea
popf
es
push
std
inc
int
int
dec
xchg
cmp
cmpsb
insl
jge
dec
negb
lods
push
mov
lods
cmp
inc
int
frstor
xchg
iret
xchg
sbb
out
push
sahf
and
xchg
adc
in
iret
or
idivb
xchg
jge
insl
ljmp
pop
test
std
push
leave
std
fnstcw
rol
push
ljmp
sar
in
pop
leave
stc
or
popa
inc
adc
int
and
rcll
or
inc
add
mov
jbe
inc
mov
fdivp
rcll
call
jne
mov
pop
sbb
arpl
adc
mov
shl
xor
sub
pop
cmc
dec
pushf
jmp
fsubs
test
std
inc
xor
adc
out
xlat
xchg
push
mov
push
push
add
imul
int
fidivs
xchg
imul
add
out
push
daa
push
sti
lods
movsl
push
testl
xchg
dec
jns
cmpsb
add
pop
mov
outsl
out
pop
call
adc
mov
jecxz
sarl
mov
or
lea
inc
xchg
cmp
or
push
into
insb
les
ds
jge
dec
negb
lods
push
mov
es
push
std
inc
int
frstor
xchg
cmp
cmpsb
insl
jge
dec
negb
lods
push
mov
es
push
std
inc
int
frstor
xchg
fwait
out
iret
pop
frstor
xchg
sub
jns
movsb
decl
out
jbe
inc
jo
sbb
adc
jnp
bound
mov
adcl
inc
push
jbe
sbb
shl
es
push
es
sub
in
sbb
xchg
sbb
into
push
shlb
test
and
mov
push
mov
lock
fdivs
or
mov
push
out
or
sub
and
dec
mov
mov
fs
mov
cmc
nop
jle
mov
adcb
test
cltd
shrl
movsl
jo
or
fstl
push
cmp
test
es
lock
rcr
nop
out
jo
into
and
jne
push
lods
ret
push
lret
ds
scas
jmp
lahf
std
mov
push
hlt
out
int3
in
dec
ror
xchg
sub
jne
jge
xor
or
mov
add
push
xlat
cmp
pop
mov
push
sbb
xor
jne
sbb
jg
lods
sbb
xor
or
mov
andb
inc
ja
out
add
mov
sbb
hlt
rcll
out
es
jp
cli
mov
add
mov
dec
push
test
sbb
fisttpll
or
mov
pop
push
out
lds
sub
sahf
mov
push
jns
pop
test
outsl
lods
outsb
lods
adc
sahf
mov
dec
push
sbb
push
lcall
fisubl
pop
arpl
push
mov
inc
das
sbb
sbbl
sub
fcmovne
mov
aas
icebp
jnp
repz
pushl
les
jb
imul
mov
push
cmp
mov
out
popw
xchg
xchg
sub
roll
ja
xor
adc
mov
and
ret
enter
xchg
adcb
in
mov
jno
mov
bound
lods
and
loope
push
les
adc
nop
pop
jge
lret
mov
pop
imul
fsubrs
in
push
xchg
js
mov
and
cmp
mov
inc
and
xchg
mov
sbb
test
fistpl
inc
cmpsl
push
ljmp
mull
mov
sti
cmp
sbb
xchg
out
inc
sub
dec
sub
sbb
cli
and
stc
movsb
cmpl
icebp
adc
sti
jge
fildl
jmp
xchg
testl
stos
dec
sbb
rorb
cli
xchg
jle
push
enter
pop
shlb
icebp
push
inc
fcmovnbe
jbe
and
out
test
je
push
add
cmp
sub
fmul
jae
int
push
incb
jb
insb
push
cmpsb
fnsave
popf
mov
js
fcoml
ds
les
sbb
pop
stc
stos
mov
int3
int
fs
jecxz
inc
push
push
xchg
imul
ds
ret
inc
push
clc
iret
cltd
outsl
push
repz
sub
xchg
call
test
fsubrs
ja
push
add
push
sbb
jbe
xchg
xor
in
mov
jle
push
rorl
pushf
bound
push
call
mov
loop
fidivrs
add
adc
sbb
loopne
ss
ret
dec
inc
cltd
sbb
lahf
test
push
add
int
mov
sub
inc
aaa
sub
jl
fisttpll
scas
leave
jae
xor
xchg
lcall
fistl
sahf
mov
gs
mov
into
mov
mov
iret
aas
adc
pop
mov
cwtl
mulb
pop
jl
idivl
xchg
or
test
fistps
or
push
cmc
std
pop
cmp
or
popf
push
mov
loopne
xchg
into
je
dec
out
imul
dec
aas
inc
aaa
mov
cmpsl
mov
fsubrp
mov
clc
mov
mov
add
fcompl
enter
les
in
es
ret
ljmp
add
mov
js
call
jecxz
lret
mov
mov
out
dec
mov
or
int
push
sti
push
xchg
aas
cmp
test
mov
dec
mov
push
xor
ret
inc
dec
jbe
test
test
insl
in
adc
leave
push
test
mov
sahf
add
fadd
imul
mov
hlt
fsubrl
mov
inc
sub
jl
ss
dec
lret
mov
lahf
xor
inc
push
mov
lds
lahf
inc
or
loopne
push
cmpsb
sub
or
in
xchg
cmp
scas
lret
fdivs
test
aas
inc
mov
xor
hlt
jle
xor
or
jge
cmpl
rorl
inc
add
inc
dec
stc
xor
jp
divb
push
je
add
arpl
jne
cmpsb
cmpsb
stc
lcall
inc
and
into
scas
sahf
push
cmp
mov
cmp
push
and
mov
test
cltd
aas
and
adc
in
cmp
sub
int
bound
jne
push
jae
call
insb
mov
add
pop
fs
sbb
and
loopne
push
push
in
lret
push
xor
mov
pusha
xorb
push
ss
sbb
mov
mov
jmp
inc
mov
incl
mov
jle
push
or
and
push
andl
fistps
cs
jne
dec
dec
jbe
dec
xchg
scas
rorl
outsl
shlb
cs
xchg
and
leave
movsl
fmul
aaa
aas
sarb
outsb
sbb
add
fs
cwtl
ljmp
dec
fcmovu
mov
sahf
lock
pop
imul
ljmp
adc
and
push
hlt
test
xchg
or
dec
mov
addr16
and
jo
ja
test
push
xor
xchg
cmp
inc
cmpsl
movsb
pop
mov
fcom
mov
mov
xchg
pop
cmp
ljmp
pop
fisubrl
mov
pusha
aas
xor
jae
push
push
shrl
pop
das
cmp
lods
bound
js
sbb
adc
mov
and
loope
cmc
bound
js
dec
jns
and
in
lods
ja
sub
sub
sub
aad
arpl
jp
add
xchg
out
daa
in
call
jmp
lahf
or
mov
fdivrs
ret
push
mov
aaa
clc
push
sbb
in
addr16
out
mov
cli
repz
pop
push
loop
jl
cmp
mov
out
and
repnz
ss
jo
icebp
bound
pop
xor
xor
scas
nop
arpl
mov
dec
loop
cmpsl
in
mov
adc
mov
fistl
das
mov
pop
sub
push
jl
push
or
xchg
ret
push
push
hlt
mov
mov
cmp
pop
pop
ret
imul
mov
shrl
push
and
sbb
mov
push
pop
lahf
clc
and
or
cmp
pop
and
inc
dec
movsl
popa
jne
mov
dec
sub
mov
jb
or
jns
jnp
in
sbb
sub
or
cmpsb
and
fisttpl
push
cmp
xor
dec
add
testl
lds
nop
test
sub
fwait
imul
sub
inc
pop
test
pop
dec
lea
mov
pop
or
outsl
pushf
movsl
mov
sti
xlat
xchg
jbe
jne
ja
addr16
jbe
roll
mov
mov
imul
pop
roll
mov
pop
push
aam
push
mov
cltd
mov
daa
daa
daa
cmp
fs
inc
lods
test
inc
arpl
xor
ja
pop
addr16
cmp
mov
pop
je
loope
jns
int3
sub
insb
xchg
mov
clc
push
xchg
cmp
and
add
mov
inc
sub
push
mov
sub
cmp
out
scas
sbb
repz
push
xchg
lea
push
or
jg
clc
cld
incl
adc
mov
jmp
and
fisubrl
push
js
lds
pop
pop
subb
aaa
rcl
loop
inc
addr16
aam
outsb
data16
pop
inc
mov
mov
js
fstpt
repnz
dec
addl
lcall
out
cli
cmp
push
adc
push
mov
out
movl
push
xor
fs
push
mov
in
jo
notl
test
jl
in
movsb
popf
jae
ficoml
inc
imul
adc
loop
flds
hlt
aaa
jecxz
sarl
out
fwait
nop
dec
daa
inc
sbb
movsl
jb
xlat
cwtl
mov
sub
es
ja
mov
mov
stc
into
inc
aad
adc
and
orb
rcrb
mov
xor
inc
xor
int
sub
sub
mov
je
ss
imul
dec
add
shll
dec
xor
mov
add
movb
dec
insl
rorl
fwait
push
add
and
scas
stos
pop
fcmovne
cwtl
mov
subl
push
leave
push
xor
sbb
aam
enter
lcall
mov
stos
cld
sub
mov
add
cld
pop
movsb
sub
es
lcall
jne
sub
xor
dec
mov
or
test
push
xchg
or
inc
xor
jb
loopne
insb
test
mov
sarl
in
inc
jbe
iret
sbb
jge
push
in
and
push
add
xchg
add
or
into
mov
movsb
aad
mov
mov
sub
cld
out
sbb
or
lret
stos
icebp
cmpsb
xor
pop
xchg
fcoml
xlat
cmc
sarb
leave
imul
lods
cmp
dec
lods
mov
xchg
mov
repnz
cmp
jmp
loope
popw
ds
xchg
pop
int3
in
push
lds
cmc
lds
cld
rclb
loope
das
out
fsts
jbe
dec
jo
or
xor
pushf
cwtl
daa
addr16
in
out
inc
xchg
dec
imul
push
icebp
in
popa
xor
push
mov
addl
mov
and
into
xchg
mov
test
jnp
mov
jecxz
push
xchg
push
push
fs
lcall
push
adc
mov
pop
stos
jo
inc
jnp
sbb
mov
test
cmpsl
hlt
outsb
testb
lods
stc
push
mov
mov
rol
mov
es
dec
adc
lret
add
ror
push
bound
in
aaa
jmp
adc
cmpsl
je
nop
sub
mov
pop
js
int3
cltd
fiadds
mov
push
xchg
xor
call
mov
adc
jp
je
stos
out
insl
mov
adc
mov
mov
xchg
sub
dec
sarb
aad
cmp
pop
rclb
xchg
adc
enter
enter
dec
sub
jle
int
jns
xchg
divl
mov
je
pop
sub
xlat
mov
pop
loopne
jmp
mov
xchg
dec
cmp
and
sbb
inc
add
outsl
push
jbe
jl
xchg
jb
or
xchg
mov
mov
lcall
xor
sahf
leave
repz
pop
ss
adc
xchg
lret
icebp
jecxz
cmp
jmp
mov
or
pushf
fildl
push
cltd
dec
push
jecxz
aaa
dec
pop
xor
sbbb
stos
pop
push
in
push
add
cli
or
in
test
sub
bound
lds
lods
and
or
jl
push
call
mov
push
mov
pop
shlb
lods
scas
mov
push
orl
xchg
fstl
fsubp
xchg
xchg
fdivrp
push
sbb
xor
mov
jne
stc
sbb
and
xlat
pop
and
jne
push
cmp
or
adc
adc
xor
push
test
frstor
push
dec
in
xor
sbb
pop
and
movsl
or
and
lret
out
and
repz
jnp
inc
add
push
hlt
and
pop
popa
add
div
mov
and
jbe
or
ret
adc
or
adc
test
xor
mov
add
xchg
adc
shll
sbb
ljmp
mov
dec
fnsaves
shrb
adc
pop
ljmp
add
stos
or
mov
and
jns
sar
lret
lea
daa
pop
push
in
stc
out
shlb
push
or
mov
push
lock
rorl
sub
xor
push
dec
push
mov
push
imul
dec
stos
outsb
push
sub
bound
loop
adc
fwait
adc
rcr
sbb
in
push
fs
push
pop
nop
pop
sbb
sbb
push
lret
mov
daa
push
and
add
fsts
js
mov
adc
stos
cmp
push
std
push
in
and
cmpsb
xchg
pop
in
adc
pop
xor
es
out
xchg
jns
pop
jae
lahf
or
mov
test
push
lea
push
add
insb
mov
lock
mov
fcoml
test
or
fisubs
or
lds
jp
inc
arpl
fidivs
sbb
test
int
aam
clc
out
aad
int
cmc
dec
xlat
insb
inc
inc
sbb
dec
pop
inc
mov
push
in
pusha
pop
push
iret
dec
in
lock
test
jne
aas
push
pop
stos
xchg
bound
daa
cs
sbb
out
mov
xchg
sub
mov
in
dec
js
gs
std
mov
test
pop
and
jge
lods
stos
mov
fsubrl
sbb
divl
nop
mov
lock
fsubp
sbb
fs
icebp
mov
cld
jne
mov
sbb
outsb
mov
cmp
or
push
lea
addl
push
cmp
mov
cmp
mov
cs
iret
mov
ficomps
sub
xchg
loopne
jmp
jno
xor
and
aad
push
repz
addr16
xor
jmp
sbb
cmpsl
jl
sub
ja
jg
mov
cmp
pop
stos
mov
leave
in
bound
or
filds
shll
mov
fnstcw
aaa
mov
mov
mov
jns
cltd
dec
ljmp
cltd
pop
out
jl
jns
outsl
ds
xor
jle,pn
pop
add
push
xor
mov
push
jge
sub
or
mov
jmp
cmpsl
mov
and
lret
jns
cld
cmpsl
test
es
sbbl
or
xor
fwait
jg
cmp
call
sub
push
stc
outsl
icebp
jle
cwtl
movsb
dec
vpor
xorl
test
mov
lea
rcr
sub
and
fsubl
fidivs
and
mov
jp
sub
mov
sub
mov
popf
pop
into
mov
inc
aad
nop
xchg
mov
popf
fwait
insl
imulb
mov
push
lret
popa
push
and
cmp
je
stos
repz
mov
jnp
scas
jge
iret
and
cmp
mov
push
dec
dec
lock
mov
iret
mov
cmp
stc
mov
sbb
mov
and
sahf
dec
addr16
and
sub
mov
jle
es
pop
out
lock
pop
xchg
add
inc
sti
sbb
push
pop
add
xlat
pop
cltd
xlat
sub
test
lea
cmc
mov
mov
or
jno
out
imul
cli
and
or
iret
lds
sbbb
lea
push
jle
jae
pop
adc
test
test
aam
ljmp
xor
mov
mov
jmp
push
add
lock
adc
sti
subb
jecxz
sbb
sar
adc
mov
addr16
and
mov
mov
out
faddp
and
and
push
aad
stos
loope
adc
pop
std
mov
inc
cmp
mov
dec
aam
in
sbb
push
push
fistps
jg
and
xchg
sti
out
lcall
dec
push
adc
dec
xor
adc
insb
adc
xchg
xlat
pop
outsl
dec
gs
xchg
das
pop
xchg
pop
test
adc
stos
ret
pusha
jmp
pop
push
loop
out
adc
mov
xchg
idivl
cmp
sarl
and
fisttpl
xlat
adc
mov
nop
dec
shlb
jle
out
mov
sbb
cli
out
addr16
sub
out
outsb
daa
xor
fisubs
adc
lret
push
out
rclb
outsl
jnp
add
jp
xor
pop
scas
cld
or
pop
jnp
pop
lods
inc
xor
fildll
xchg
scas
daa
xor
sub
cmc
fildl
sbb
cld
mov
sarl
mov
sub
or
std
fmul
cwtl
push
iret
push
test
mov
pop
dec
test
push
mov
sbb
aam
outsl
jecxz
sub
or
inc
push
push
shll
aaa
movsbl
std
mov
fdivrl
push
dec
cs
dec
in
add
aaa
pop
mov
rolb
jne
jmp
aam
inc
loopne
mov
sbb
xlat
jl
mov
mov
sub
clc
push
push
pop
push
lock
pop
dec
insl
and
dec
dec
jmp
cmp
fwait
cwtl
lea
xor
ret
mov
insl
cmp
and
or
mov
bound
cmp
mov
add
jle
inc
jnp
adc
xor
xor
sub
xchg
insl
mov
rcll
xchg
sub
dec
dec
sti
xorb
mov
icebp
nop
iret
and
xor
data16
and
frstor
dec
ret
push
sub
xor
mov
int
mov
add
movsl
test
cmp
notb
out
sti
cmp
outsb
movsb
dec
insl
mov
inc
push
pop
or
pop
mov
in
fisttps
mov
add
cmp
repz
fisubs
je
mov
mov
int
imul
int3
addr16
jp
sub
xchg
mov
repnz
lods
outsl
popa
cs
lret
mov
negb
or
push
jle
pop
push
sbb
xchg
rorl
adc
aaa
and
stos
add
lahf
pop
push
jecxz
or
sub
out
fs
inc
cld
fidivl
mov
jecxz
inc
xchg
daa
ret
add
nop
add
daa
sarl
andl
add
push
pmaddwd
shlb
scas
aad
imul
cmpsb
lret
pop
mov
andl
int3
push
xchg
addb
inc
leave
push
sbb
mov
and
fisttps
outsb
jp
pop
inc
les
rcll
ds
pop
lret
pop
pusha
inc
imul
and
ret
pop
pop
js
lds
adc
sub
into
ficompl
add
sbb
mov
jno
or
or
icebp
pop
arpl
jno
jne
add
shll
dec
leave
mov
add
mov
cmp
stos
cltd
adc
push
add
scas
sub
xlat
cwtl
or
mov
stos
pop
sub
or
cmp
jnp
lcall
out
es
std
inc
hlt
dec
jne
mov
sti
push
mov
lret
or
sbb
fists
pop
xchg
addr16
cmp
add
sbb
jmp
push
jb
jno
mov
lods
mov
xchg
ljmp
cli
cltd
mov
fwait
jge
mov
out
ret
mov
push
ss
or
jmp
cmp
or
xchg
inc
loopne
cmp
add
push
ficompl
adc
mov
sub
test
jbe
jge
lret
pop
and
dec
jmp
std
rclb
repnz
imul
jle
and
inc
pop
iret
and
movsb
hlt
dec
loope
in
mov
fnstcw
test
jns
xchg
cmc
lods
sbb
imulb
int
sub
lret
push
daa
push
push
sub
cmc
sub
rcrb
mov
jb
dec
add
xor
xor
mov
fsubl
imul
mov
or
ret
sub
pop
adc
inc
or
jno
icebp
push
leave
lods
pop
icebp
movl
lahf
xchg
shlb
sahf
push
stos
pop
sbb
jno
dec
jnp
shl
hlt
or
rorl
fcoml
xchg
cwtl
jmp
mov
inc
lret
pop
into
loope
outsl
iret
lcall
sti
cld
or
addr16
mov
mov
ds
ror
jne
mov
imul
jb
jle
mov
or
aad
out
mov
cwtl
pusha
add
out
inc
cmpsl
jle
xchg
sbb
dec
negb
lods
push
mov
es
push
std
inc
int
frstor
xchg
cmp
cmpsb
insl
jge
dec
negb
lods
push
mov
es
push
std
inc
int
frstor
xchg
or
cmpsb
std
jge
dec
negb
push
jge
popf
es
push
in
inc
int
xor
xchg
cmp
dec
neg
out
push
inc
lods
daa
ss
push
lcall
cltd
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
add
adc
and
xor
lock
jns
test
inc
movsb
insl
mov
les
hlt
sub
and
xor
inc
popf
push
lea
lods
xchg
pop
xchg
dec
movsb
pop
mov
fucom
cmp
or
hlt
pop
test
movsl
je
popf
mov
int3
insl
les
mov
fnstsw
and
inc
popw
jb
push
movsl
and
sub
not
xor
lds
sub
pop
jne
adc
push
jae
aaa
loope
add
mov
insl
xchg
cwtl
les
cmp
call
mov
leave
mov
rcr
imul
or
hlt
sub
in
std
adc
mov
in
push
prefetchwt1
xchg
cmp
repnz
mov
inc
push
in
sub
add
or
sub
test
cmp
jne
sbbb
in
in
shl
sub
mov
xchg
pop
sbb
push
xchg
ret
int
or
notl
inc
lea
mov
inc
mov
lods
je
add
hlt
dec
push
cld
inc
in
aaa
lret
xor
sub
je
test
xor
les
pop
xchg
cmp
jne
dec
lea
out
push
mov
and
sub
or
les
bound
pushf
js
dec
pushf
pop
cwtl
or
push
lea
lods
test
dec
movsb
jge
insl
les
hlt
sub
and
xor
inc
popf
push
lea
lods
test
dec
movsb
jge
insl
les
hlt
sub
faddl
sub
mov
movsl
lret
aam
dec
imull
and
adc
pusha
test
lahf
ss
les
mov
push
inc
adc
daa
adc
stos
shll
sub
sub
sbb
pusha
push
bound
movsl
push
adc
aaa
jmp
dec
dec
xchg
jno
mov
lahf
inc
mov
add
cmp
mov
push
mov
xchg
jbe
bnd
jbe
mov
sar
push
sahf
mov
xlat
mov
in
inc
out
sbb
loop
adc
ja
sarl
stos
xor
xor
add
es
cmp
or
mov
dec
test
mov
clc
or
mov
mov
or
xchg
dec
xchg
add
inc
sbb
insb
fucom
rcr
mov
inc
fists
lret
inc
xchg
mov
xchg
inc
scas
and
cmpsb
push
fucomi
repz
mov
in
xchg
movsb
add
adc
pop
ss
mov
add
pop
testl
pop
rolb
xchg
out
xchg
xchg
enter
sbb
and
repnz
xorb
lret
add
call
sbb
bound
xchg
mov
jnp
mov
ficomps
mov
jae
sub
pop
cwtl
test
stos
cmpsl
sahf
lcall
add
and
out
sbb
xor
out
xor
jle
shll
mov
dec
popf
in
lea
test
aas
lods
loope
lea
and
sbb
pushf
sbb
aam
push
cmp
sbb
jecxz
divl
mov
xchg
or
xchg
inc
rolb
inc
adc
cwtl
fidivrs
mov
test
les
mov
mov
movsb
inc
test
cli
dec
push
jae
sbbb
out
ret
icebp
push
jl
ficoml
dec
mov
push
bound
xchg
rol
movsb
add
out
or
push
jecxz
or
push
test
add
hlt
rclb
adc
mov
push
out
aas
cwtl
fisttpl
int3
inc
push
fnstsw
dec
push
mov
jbe
lret
int3
and
jp
push
loop
popf
test
outsl
xor
cltd
in
dec
jne
sbb
xlat
push
test
pop
cmp
pop
mov
and
jb
jg
leave
call
mov
loop
sub
fwait
imul
scas
frstor
rorb
sbb
pop
jo
cltd
cmp
jne
cmp
lret
dec
and
cmpsl
pop
dec
sbb
push
and
jl
add
fildl
adc
sti
sub
adc
sbb
sub
dec
das
push
pop
xor
pusha
add
insb
loop
xchg
vfrczps
or
scas
std
call
std
fucom
xchg
push
inc
mov
stos
jl
xor
sarb
mov
sarb
addl
inc
inc
and
jo
ficompl
ja
add
push
test
jl
and
fcomps
je
sub
cmpsb
les
fsubrl
lds
sub
xchg
inc
jp
mov
xchg
adc
ja
sbbl
es
pop
jnp
or
mov
rolb
cmc
cli
in
mov
push
cmc
call
sbb
mov
cmp
arpl
dec
jge
out
adc
repz
in
mov
lret
and
inc
inc
jp
sbb
xchg
adc
mov
cld
sbb
test
push
sbb
in
pop
inc
push
push
jno
icebp
push
mov
push
fstpl
add
jo
pop
lea
cltd
mov
mov
sbb
or
mov
sbb
lods
mov
adc
in
addb
mov
xor
or
jnp
mov
sub
data16
sub
imul
jnp
pop
nop
push
pusha
adc
orb
ret
mov
cmp
and
or
test
shll
out
mov
pop
lret
test
insl
pop
outsl
iret
test
cmpb
idivl
jnp,pn
fistpll
mov
loope
data16
daa
scas
int
inc
xchg
scas
jl
cmp
imul
push
cwtl
push
jae
push
sub
push
stos
out
shll
in
pop
pop
push
inc
lret
shll
and
jp
in
xor
stc
test
mov
xchg
aad
int
adc
sbb
jbe
xor
sub
dec
xchg
sub
push
mov
push
mov
mov
jg
pop
sub
repnz
jno
push
imul
aas
pop
in
imul
xchg
stos
xchg
das
cmp
adc
add
cmp
test
inc
mov
add
aaa
mov
loopne
inc
cmp
movsl
or
notl
inc
daa
mov
divb
cmp
mov
mov
sub
hlt
in
xchg
and
pop
fucom
pop
sarl
or
mov
mov
mov
aaa
pop
lcall
jp
lcall
push
xor
pop
cmp
or
cmpsb
fld
or
xlat
mov
xchg
imul
in
xchg
and
add
inc
push
adc
loop
jo
adc
mov
and
pop
addl
mov
push
push
inc
pusha
cmp
xchg
fs
dec
js
xor
and
cmpsb
call
push
sbb
xor
insb
jg
mov
arpl
add
mov
pop
popf
push
inc
mov
rcrb
sbb
adc
add
add
push
sbb
ss
sbb
gs
mov
popf
repz
sub
fisubs
inc
jmp
insb
icebp
bound
jno
imul
int3
scas
jns
add
mov
adc
test
test
add
fadd
pop
aas
push
repz
push
aas
dec
mov
lret
mov
mov
js
dec
sbb
dec
jmp
dec
and
xlat
jb
int3
xor
hlt
stos
rcl
loopne,pn
es
fistps
dec
aaa
pop
mov
and
movsl
dec
sub
fisubl
jne
lret
sarl
repz
cmpsl
jmp
lahf
pop
xchg
and
in
hlt
or
dec
jbe
jp
and
mov
jmp
mov
mov
cmpsb
mov
mov
test
pushf
rolb
pop
ss
push
clc
or
scas
jl
mov
out
outsl
sbb
inc
jl
inc
cmp
es
in
cmp
shrl
sub
push
or
adcl
jp
xor
aam
and
sub
dec
xchg
jle
pop
mov
daa
add
jle
movsb
mov
adc
mov
in
inc
leave
cwtl
mov
dec
sbb
loop
inc
sbbb
popa
adc
mov
cs
adc
xchg
fistps
out
sub
sbb
dec
lahf
adc
cmp
aaa
push
push
pop
adc
je
add
mov
cld
push
pushl
xor
test
xchg
icebp
in
pop
sub
fnstsw
push
adc
scas
nop
jne
or
sbb
pop
cmp
scas
xchg
repnz
js
cli
dec
xor
call
xor
stos
push
add
cltd
outsb
enter
mov
mov
xchg
gs
pop
int
mov
push
movsl
stos
outsl
scas
icebp
arpl
aad
push
push
xchg
sub
adc
imul
inc
push
roll
lret
push
xchg
cmp
sub
aas
adc
rclb
xor
mov
push
or
loopne
pop
lcall
mov
mov
jns
enter
add
int3
out
jmp
shll
frstors
mov
cwtl
dec
popa
repz
xchg
adc
out
mov
xor
scas
jb
adc
jnp
jle
scas
std
outsl
and
mov
push
scas
cmpsl
ret
sbb
mov
and
fs
push
pop
cmp
gs
and
push
xor
cmp
and
imul
jmp
dec
adc
outsb
ret
ds
xor
jnp
or
imul
jo
scas
pop
sahf
rsqrtps
loopne
jns
cmp
dec
push
jbe
cli
push
xor
xor
sbb
repz
mov
push
adc
icebp
sbb
dec
push
and
clc
jns
inc
fs
pop
pop
and
jge
mov
and
mov
hlt
xchg
or
and
cs
xchg
idivb
cmpsb
pop
mov
dec
shlb
mov
cltd
cli
sub
inc
in
mov
cmp
adc
fsubrl
repnz
sub
pop
cmp
hlt
and
das
inc
sub
inc
push
shr
push
shrl
pop
and
xchg
mov
and
movsb
or
mov
bound
cltd
inc
in
mov
xchg
xchg
inc
pop
pop
fs
adc
ret
sbb
push
sub
and
xorl
push
popa
arpl
fnstenv
jmp
cmpsl
out
ror
cmp
flds
pop
lret
lods
or
cmp
push
test
jae
inc
and
add
mov
sti
cltd
rorl
cmp
test
pop
sub
push
adc
cmp
push
sbb
inc
inc
popa
fwait
or
jp
je
in
idivl
cmp
jle
push
daa
cltd
cmovne
cmp
mov
insb
insl
jecxz
adc
faddl
cmpsl
mov
daa
sbbb
fidivl
pusha
loopne
jmp
push
pop
daa
outsb
nop
jns
fcoms
in
mov
fdivrl
lock
sub
xchg
push
or
mov
inc
xor
xor
cmc
stos
icebp
into
aad
jbe
movsl
push
testl
mov
filds
sbb
enter
pop
lea
int
fisubl
lret
mov
mov
adc
add
aam
push
xchg
cld
in
hlt
sbb
inc
lock
push
loopne
out
push
fisubs
inc
les
test
sub
scas
cmp
jns
sbb
sbb
xor
and
sti
xor
and
dec
push
sbb
xor
cs
and
pop
addr16
sub
loopne
test
jae
dec
push
fisttpll
add
sbb
notb
popa
andb
inc
cmp
pop
sub
push
xchg
mov
dec
loope
jmp
inc
mov
jp
lcall
mov
push
negl
fimull
sti
cmpsl
ss
jmp
or
pop
add
sub
inc
push
mov
test
loope
popa
into
mov
sbbl
or
arpl
icebp
jb
jbe
scas
mov
jae
lods
sub
mov
xchg
sbb
lret
sbb
ficoml
add
lds
in
inc
mov
popf
inc
sahf
stos
mov
stc
and
mov
dec
iret
inc
adc
push
sub
jo
or
fmuls
adcl
cmc
test
mov
mov
mov
sub
push
cmpsl
in
inc
mov
imul
cwtl
cli
repz
aas
dec
mov
or
mov
or
pop
loopne
cmpsb
mov
lock
lcall
cmpsl
outsl
out
addl
cmp
repz
cwtl
outsb
add
xor
xor
adc
mov
int3
sbb
fs
cmc
xchg
add
jo
fistps
cld
dec
shll
fs
sbb
xor
pop
stc
mov
ds
pop
mov
and
fcomps
or
mov
mov
push
shlb
push
sub
jae
dec
mov
cmc
insb
stos
inc
jecxz
cmp
fldenv
imul
or
les
xchg
push
adc
dec
fwait
jae
push
insb
inc
call
mov
fstpl
pushw
or
xchg
sarb
aam
mov
cli
xchg
or
insb
mov
xchg
mov
aas
cwtl
and
jge
adc
test
gs
and
int3
sbb
ficompl
xchg
loopne
filds
jl
push
add
mov
add
pusha
pop
xchg
and
imul
sub
stos
xchg
mov
sub
mov
fidivrs
dec
xchg
insb
test
mov
push
lods
mov
mov
mov
xchg
push
mov
cld
inc
ljmp
or
nop
mov
cmp
int3
inc
in
mov
pop
sub
test
push
mov
out
jb
test
and
and
addb
xor
dec
test
jg
cmp
ds
pop
loope
jle
cli
movsb
fstl
repz
loop
or
ljmp
mov
xor
xchg
push
testb
ljmp
pop
loopne
jg
mov
sahf
mov
out
add
filds
mov
push
dec
imul
arpl
mov
push
sub
xlat
in
mov
jae
jl
fidivrs
cli
gs
icebp
movsb
jno
or
setne
mov
sbb
das
mov
aaa
lods
scas
xor
pop
mov
push
mov
sub
add
dec
xor
repz
pop
ljmp
hlt
and
mov
subb
sub
cmp
xchg
xchg
scas
lret
cmpsl
mov
orl
rolb
adc
xor
test
xchg
mov
xchg
add
outsl
lea
sbb
inc
cltd
sub
xchg
ljmp
jle
xor
icebp
or
insb
xlat
xchg
je
push
sub
mov
lock
cli
fisubs
sti
mov
leave
insl
pop
pop
or
xor
xchg
leave
sbb
push
xchg
nop
or
mov
pop
int3
mov
mov
into
fildl
sub
xchg
inc
jne
loopne
clc
testl
mov
push
outsb
mov
hlt
and
or
mov
div
out
adc
mov
dec
adc
ficoms
dec
sub
mov
mov
add
rcrl
aas
shll
lods
sti
cmp
and
inc
outsb
mul
or
cmp
test
cmp
mov
pop
and
mov
mov
sti
adc
and
das
inc
pop
leave
xor
lea
daa
mov
cmp
mov
mov
fstps
or
mov
cmc
jne
imul
das
or
cli
push
xor
es
repnz
ret
sbb
dec
push
lahf
cmp
adcl
sbb
addl
prefetch
loopne
inc
arpl
xor
and
mov
shrb
sbb
sbb
outsb
push
pop
jle
lock
je
mov
sub
in
cld
and
sbb
push
xor
jle
push
ljmp
pop
mov
sbb
jp
cmc
cmpsb
sbb
cli
mov
imul
sbb
loopne
call
aas
adc
xor
add
jae
xor
lcall
inc
test
sti
mov
sbbl
jnp
sbb
insl
jno
subl
je
cmpsb
test
dec
jbe
pop
push
pop
adc
gs
popf
daa
repnz
adc
cli
fdivrl
cltd
xlat
mov
inc
ds
movsb
pop
sbb
repz
or
adc
out
cld
dec
je
pop
push
push
sub
popf
and
sbb
or
sarb
jg
out
sbbl
dec
cmp
das
sbb
stos
jecxz
cld
ds
lea
xchg
arpl
jg
mov
mov
adc
add
cld
inc
fdivl
clc
imul
adc
divb
jo
dec
sbb
jno
adc
jns
mov
mov
pcmpeqd
mov
xor
pop
mov
adc
out
adc
test
inc
mov
test
fldenv
mov
dec
aad
test
jnp
xor
adc
push
inc
les
xchg
cmc
stc
mov
hlt
pop
nop
xchg
les
pop
adc
adc
inc
test
jge
adc
add
fimuls
lahf
pop
rcl
scas
leave
mov
in
out
push
add
lahf
aam
cmpsl
fstps
or
int
mov
pusha
pop
dec
les
data16
jo
outsb
pusha
ficoml
sti
dec
cld
push
call
xchg
sarl
xchg
enter
mov
fnstsw
test
addl
cmp
jne
dec
dec
dec
sub
mov
mov
fildll
mov
mov
mov
adc
bound
popf
xor
fdivp
jge
test
adc
in
pusha
test
mov
loope
leave
dec
inc
mov
loopne
stos
push
sub
add
sti
xchg
repz
insl
in
inc
dec
mov
insl
xchg
jmp
mov
sbb
loop
pop
jbe
lret
call
cli
add
sub
jmp
pop
test
push
add
mov
mov
enter
push
imul
jno
xor
xor
lods
ret
jge
inc
les
bound
jle
mov
arpl
add
or
out
cmp
mov
push
cmp
sub
sbb
push
je
mov
mov
imul
fst
ficomps
rcrb
mov
xchg
push
repz
repnz
adc
sub
pusha
xchg
cmp
out
nop
mov
aam
push
out
xchg
mov
out
pop
sbb
cmpsl
shrl
or
outsl
push
add
add
jp
mov
mov
mov
push
imul
xchg
stc
fwait
and
pop
inc
lea
add
xor
iret
push
es
rolb
push
cs
loop
scas
aam
gs
xor
pop
inc
repz
stos
je
sub
cwtl
mov
or
xor
or
xor
jne
out
xor
sti
and
imul
les
clc
fisttpl
in
aam
xchg
fcoms
ret
andl
or
inc
push
mov
cmp
jle
mov
jge
aas
push
in
add
ds
jl
cmc
add
push
std
les
aam
orb
out
adc
pop
push
jl
inc
dec
std
jnp
jnp
lock
push
mov
loop
cmc
lods
cmp
aam
add
or
jge
adc
adc
cli
mov
fsub
xchg
das
cwtl
mov
sub
sbb
xchg
lret
fistps
repnz
add
add
dec
jmp
aaa
pop
stc
dec
fnstcw
or
std
mov
pop
out
push
fimull
in
adcl
out
scas
mov
pop
cmpsb
pop
push
xchg
adc
aaa
sbb
mov
xor
in
test
push
arpl
pop
insb
and
in
mov
out
outsl
xchg
fcmovnu
pusha
jns
subb
mulb
mov
leave
adc
js
sti
jno
les
push
cld
jp
and
dec
in
imul
xor
cwtl
mov
adc
push
mov
mov
sahf
xchg
mov
idiv
dec
rorl
lret
fmull
test
inc
pop
cmp
xchg
xchg
jns
push
or
mov
jb
fnstcw
dec
jo
into
ja
or
out
inc
sbb
test
mov
mov
inc
mov
scas
out
stc
and
popf
orb
fsts
cmp
mov
stos
test
sub
mov
testb
stc
sbb
ror
cld
imul
mov
cmp
aam
decb
andb
mov
enter
jae
pop
sbb
mov
inc
xor
and
xchg
inc
fisubs
cmp
icebp
pop
loope
imul
and
jb
mov
test
cmpsl
aam
repnz
ds
sbb
aad
push
xchg
fcmovbe
popa
pop
fmull
fstpt
pop
mov
xor
jbe
or
cmp
ds
push
xchg
pop
push
gs
mov
inc
andl
inc
cmp
dec
and
push
dec
mov
or
scas
dec
mov
sahf
push
sti
mov
out
ret
mov
aaa
mov
jmp
dec
inc
push
add
mov
ja
adc
aaa
lea
jb
add
aad
lock
jns
loopne
jl
dec
lahf
sbb
rorl
pop
mov
cmp
fwait
cmpsl
mov
scas
xlat
ljmp
dec
mov
jmp
test
sub
inc
xchg
enter
jno
pop
fists
or
sbb
cmp
mov
sahf
sti
imul
xorb
adc
rcr
jg
ficoml
or
pop
cmp
mov
lcall
scas
and
mov
cmp
xchg
int
adc
fs
xchg
dec
movsb
jge
insl
les
hlt
sub
and
xor
inc
popf
push
lea
lods
test
dec
movsb
jge
insl
les
hlt
sub
and
xor
inc
popf
push
lea
lods
test
dec
movsb
jge
insb
les
imulb
and
popf
push
in
hlt
lods
jnp
imul
jge
sbb
ret
cs
fs
push
jg
outsl
sub
push
das
xor
imul
popa
in
jmp
out
mov
in
xchg
scas
test
fs
outsl
xor
and
adc
add
iret
mov
push
out
mov
movsl
xchg
mov
jge
dec
jg
outsl
sub
aas
adc
hlt
fucomip
in
mov
fldl2t
shl
fadds
fs
sbb
or
std
sub
pop
sbb
sbb
push
pop
cli
pushf
inc
mov
pop
jmp
loop
pand
cmp
add
cli
or
or
stc
dec
fs
sbb
push
and
in
neg
sbb
test
cmp
dec
pusha
loope
xor
movsb
shlb
push
cmp
push
xor
cld
aaa
add
shlb
xor
cmp
outsl
aam
insl
scas
xchg
lahf
fwait
mov
xorb
fs
in
add
adc
cld
and
fcmovb
add
out
push
int3
movsl
lahf
sbb
jl
xchg
push
fs
sbb
leave
mov
test
mov
cmpsb
or
sbb
sub
mov
je
test
pop
fs
push
jg
outsl
and
unpcklps
sbb
iret
int3
fucomp
lods
lahf
mov
jmp
xor
and
push
pop
dec
jnp
pop
imul
lods
stos
lahf
fsubr
ror
int
lret
and
aaa
inc
or
pop
dec
dec
js
inc
add
mov
mov
sar
xlat
sbb
fiaddl
xor
inc
pop
dec
sub
add
hlt
iret
aam
out
mov
movsb
xchg
mov
fs
push
jg
outsl
xor
and
adc
add
hlt
iret
aam
out
mov
movsb
xchg
mov
cmpsl
addr16
ljmp
fcmove
xchg
shrl
repz
cld
adc
cltd
add
mov
push
mov
push
addl
lcall
jmp
and
or
js
fs
outsl
pop
xlat
xchg
jmp
add
ja
stos
dec
int3
xor
aaa
imul
jecxz
sbb
out
inc
ret
lcall
mov
mov
into
in
rcrb
fcomps
test
dec
ret
ja
mov
jmp
push
scas
scas
inc
push
push
mov
jp
pop
icebp
mov
sbbl
mov
jbe
xchg
push
dec
cmpsl
or
frstor
leave
ret
sub
fidivl
bound
xor
cmp
adc
iret
add
and
in
rol
push
jae
repz
addb
push
mov
and
lea
dec
sbb
arpl
mov
sub
lret
and
add
xchg
mov
mov
mov
mov
pop
mov
int3
lock
jno
and
inc
cmp
ja
aaa
fs
cmc
ja
lcall
cmpb
out
in
lret
adc
insb
jg
adc
pop
jp
sub
mov
imul
gs
dec
test
fwait
sub
loopne
cmpsb
gs
push
mov
pop
jne
cmp
pushf
pop
pusha
xchg
adc
rorb
pop
dec
cmp
jae
cli
sub
push
hlt
cmpsl
mov
mov
testl
jg
aam
out
in
adc
test
cltd
sti
jbe
mov
pop
insb
mov
leave
mov
mov
cmp
in
inc
cltd
jne
imul
mov
mov
inc
adc
mov
icebp
repz
xor
mov
or
pop
je
stos
xor
push
pop
cmpsl
scas
jo
adc
add
and
shlb
aas
jne
pop
insb
sbb
or
sub
or
and
jl
jle
mov
sahf
pop
add
sbb
hlt
jg
into
or
mov
sbb
fwait
daa
fildll
fisubl
sarb
mov
jle
into
xchg
ja
fldt
cmp
sbbb
or
mov
icebp
mov
aam
repz
cmpl
sub
loop
mov
xchg
jmp
jo
lret
mov
fdivs
fisttps
stos
mov
shll
mov
incl
pop
pop
sbb
or
xor
cld
fadds
push
pop
xchg
test
mov
subl
dec
outsl
pushf
jg
popf
mov
cmpsb
mov
pop
aaa
ret
jg
and
push
ret
cli
ds
rcl
fidivl
in
and
pop
jns
jae
jg
cmp
mov
dec
adc
sub
call
inc
out
lret
es
in
rorl
xchg
imul
push
cld
fsubl
aaa
jne
inc
cmpsl
mov
in
sub
icebp
lret
dec
scas
shlb
pop
inc
cmp
outsb
mov
cmp
pop
fistps
mov
fwait
jbe
sub
adc
mull
push
shrb
inc
or
iret
pusha
sbb
jns
jl
cmpsb
add
lahf
mov
xor
inc
lea
movsl
pop
fldcw
xlat
pop
pop
xor
fdivl
pop
mov
popf
dec
cmp
mov
jmp
push
mov
call
push
cmp
sub
stos
cmpsl
xchg
jge
stos
pop
xchg
loopne
mov
cmp
fdivl
push
pusha
xor
jno
mov
pop
jle
and
out
inc
jge
dec
and
mov
in
addb
lods
popf
aas
int3
add
test
mov
test
xchg
arpl
fs
mov
mov
divb
pop
jp
mov
cwtl
cmpsb
outsw
adc
test
sbb
xor
push
add
loope
inc
aas
rolb
inc
jle
pop
mov
add
and
into
in
sub
xchg
cmp
movsl
fcomps
sub
add
push
aad
and
mov
add
push
adc
icebp
jl
mov
xchg
popa
sbb
das
iret
repz
xchg
out
dec
or
sub
adcl
mov
xchg
mov
sbb
sbbb
inc
les
data16
sub
sub
cmp
addl
push
les
rclb
xorb
pop
ljmp
roll
mov
dec
sub
sub
popf
int3
aad
mov
inc
dec
in
jmp
pop
xchg
mov
orl
out
addl
sbb
jns
icebp
nop
add
repnz
xchg
lret
std
sbb
xchg
test
mov
dec
lods
das
in
cmp
xor
jb
or
xor
xchg
or
cmp
push
push
sbb
in
mov
or
sbb
in
push
inc
dec
pushf
mov
mov
lahf
subl
mov
stos
aas
sub
test
add
adc
cld
movsl
scas
mov
test
push
mov
dec
ret
pushf
pop
sub
test
ret
xchg
xchg
mov
and
aas
fdiv
xchg
or
fs
loopne
fisubl
dec
inc
jbe
adc
xlat
xchg
ss
push
out
lcall
cmp
jnp
popf
scas
cmp
ficomps
mov
lods
push
pop
lcall
jmp
insl
nop
jle
call
mov
inc
pop
push
inc
addb
jg
out
and
adc
hlt
loope
mov
sbb
js
adc
testl
stc
jp
enter
jne
mov
mov
pusha
sbb
sbbb
test
sbb
lcall
sbb
lods
fidivrl
daa
jge
sarl
xor
cmp
inc
mov
subl
add
clc
mov
mov
stc
test
xchg
cwtl
icebp
and
cmp
cltd
or
test
nop
xchg
push
mov
mov
add
push
pop
enter
jecxz
mov
and
dec
test
pop
adc
mov
fistpl
push
ficompl
mov
add
xchg
subb
les
out
sbb
mov
xchg
fildl
adc
test
loop
ja
xchg
repz
lahf
adc
stc
in
mov
je
jbe
ds
pop
sub
stos
mov
das
insb
xchg
in
lods
cmp
cs
scas
popf
lods
fiaddl
sub
inc
pop
jnp
js
jb
inc
inc
dec
ds
jecxz
fs
nop
out
add
sub
hlt
lds
and
mov
xor
bswap
jecxz
aad
xchg
rcl
jbe
mov
push
fdivp
push
inc
sbbl
inc
push
push
test
inc
mov
dec
mov
outsb
lds
cmc
stc
push
mov
cwtl
call
push
push
shll
cmpsb
add
mov
adc
pop
lret
in
sbb
pop
sub
lds
repz
push
add
mov
int
add
lret
fists
push
dec
scas
pushl
push
ljmp
test
lcall
cli
das
fadd
pop
mov
stos
cmpsl
adc
js
addl
sub
cmpsl
jl
mov
push
mov
mov
adc
iret
inc
les
mov
add
sarb
xor
lret
loopne
push
xor
lock
cmp
cmpsl
xor
mov
popa
xor
les
test
sbb
imulb
fmull
imulb
mov
test
pop
aad
int
fs
sarb
mov
shll
ss
xchg
adc
push
cmp
es
and
sub
sub
popa
pop
xchg
xchg
in
xchg
nop
add
stos
cmc
int
popa
or
inc
bound
sbb
std
mov
cmpb
jno
inc
xor
xor
cmpsl
sbb
sahf
mov
dec
icebp
hlt
pop
daa
in
xor
add
and
push
push
adc
jge
inc
imul
push
add
les
cmp
jnp
lcall
cmp
filds
sub
leave
movzwl
and
jp
int3
mov
push
jmp
pop
mov
cltd
int
adc
mov
loop
inc
xor
rcrb
mov
jb
cmc
and
xchg
jns
rcr
int
pop
stos
or
stos
pop
lods
call
adc
out
xor
test
xchg
loopne
adc
repz
arpl
pushl
xor
out
jmp
ss
cmp
imul
jl
cwtl
mov
fsub
push
mov
cli
adc
sub
or
addr16
inc
add
xchg
imul
popa
loop
adc
dec
rorb
mov
stos
xor
mov
add
movsb
xor
mov
or
testl
es
xchg
inc
mov
shrb
inc
pop
jbe
adc
push
ds
pop
ljmp
movsb
mov
loop
jecxz
xor
imul
subb
ret
push
test
dec
mov
pop
jl
xor
shlb
sub
or
sbb
in
les
scas
imul
push
and
scas
mov
push
idivb
mov
pop
jb
fnstcw
mov
repnz
testb
daa
xchg
jns
or
ss
xchg
push
mov
dec
movsl
cmp
mov
inc
popf
jb
shll
pop
and
adc
jo
mov
ja
rcr
movsl
faddl
in
scas
adc
popl
or
or
adc
dec
or
aad
add
fisubs
cld
int3
pop
lods
aaa
int
xchg
data16
enter
adc
scas
aaa
clc
loop
fidivrs
test
inc
and
ljmp
jl
mov
jne
or
pop
jno
xor
movsb
inc
pop
out
mov
stos
push
shl
mov
push
mov
sti
adc
mov
notl
out
les
cltd
xor
mov
push
mov
cmc
cmp
sbb
pop
or
and
push
movsb
ljmp
fcmovne
int3
fists
test
dec
das
popf
insl
jl
push
cltd
pop
icebp
repnz
movsb
push
es
mov
outsb
mov
in
sub
aad
mov
and
scas
fwait
out
fwait
xor
inc
pop
mov
movsl
mov
outsb
call
dec
fwait
int
and
out
fimull
jge
lock
xchg
pop
int3
pop
jp
popa
mov
push
push
sub
in
rcl
push
pop
jns
daa
xorb
ja
stc
out
ja
dec
imul
les
cmppd
pop
xchg
jne
inc
sbb
push
mov
adc
inc
leave
sti
xchg
jns
mov
aam
xor
std
scas
xchg
push
jno
xor
mov
hlt
cli
loop
inc
adc
lock
out
in
es
gs
lret
push
jmp
mov
or
jno
mov
jmp
pop
jbe
mov
outsl
daa
lret
xor
shrl
cmp
cmpsb
in
jp
adc
std
adc
mov
cmp
lret
fildll
jnp
js
adc
and
and
inc
cld
push
add
movsb
stos
sbb
arpl
rorb
movsb
shr
jo
xchg
push
mov
sbb
addb
stc
enter
shl
movsl
cmp
lods
rcrl
xlat
stc
mov
and
mov
hlt
in
movsl
loopne
mov
inc
rcrl
mov
pop
hlt
mov
add
clc
pop
pop
sahf
pop
pop
repz
jp
adc
nop
pop
mov
xor
pop
dec
fnstsw
fildl
lock
gs
push
mov
mov
scas
jmp
xchg
push
inc
mov
push
mov
push
daa
dec
add
push
push
out
sub
mov
in
or
jns
mov
imul
out
inc
sbb
fwait
testl
mov
popf
xchg
pop
pop
push
jl
dec
rcll
xor
inc
aad
adc
mov
pop
xchg
xchg
adc
xchg
fists
lcall
pop
xor
clc
cmpsb
adc
dec
cwtl
or
pop
repnz
or
xor
mov
add
addl
lods
ret
scas
lret
add
adc
test
pop
push
aas
adc
xlat
push
sbb
in
into
lds
cmpsb
stc
test
stos
das
adc
pop
gs
fwait
push
scas
mov
mov
daa
movsb
mov
jl
out
gs
mov
jae
bound
jbe
xor
out
mov
insl
mov
orb
out
lahf
lods
popa
pop
sub
scas
inc
mov
mov
mov
stc
nop
arpl
dec
lcall
inc
aad
pop
add
clc
and
mov
dec
out
or
pop
push
sub
inc
inc
or
lcall
adc
xor
pop
test
bound
in
or
cli
mov
inc
mov
cwtl
push
sbb
int
in
dec
push
inc
and
punpcklwd
ljmp
xchg
push
int
lahf
fdivrl
sub
mov
mov
cmpl
lret
jnp
pop
add
icebp
push
shl
inc
mov
xor
lock
push
xchg
xchg
pop
inc
stos
or
lret
mov
gs
test
add
outsl
push
pop
and
cmp
jbe
insb
cmp
insb
cltd
pop
mov
mov
iret
mov
fs
aad
mov
jae
int3
popa
mov
shrl
testb
jbe
insb
lods
outsl
mov
inc
push
adc
cmp
and
repz
xor
in
mov
out
sub
xlat
inc
mov
test
add
mov
sbb
push
sbb
pusha
and
pop
add
stc
aam
int3
aad
leave
dec
or
adc
pop
iret
pop
jo
data16
xorl
add
xchg
push
xchg
mov
and
movsb
popf
xor
divb
and
add
mov
js
jle
pslld
in
xchg
mov
mov
data16
mov
mov
sbbb
jnp
add
sbb
outsb
fs
insb
pop
hlt
inc
adc
aaa
xor
or
aas
popa
add
ret
inc
inc
aaa
stc
fisubl
test
lret
rcr
aas
cmp
jns
pop
xchg
outsl
inc
adc
mov
mov
cltd
jae
pop
mov
scas
sub
clc
lahf
jmp
pop
andl
shlb
mov
pop
add
xchg
pop
std
in
ret
scas
cmp
mov
mov
loopne
out
or
and
xchg
test
pop
sarl
stos
nop
scas
mov
mov
sbb
ret
xor
inc
xor
jne
andb
xchg
dec
cli
scas
mov
popa
jb
pop
mov
adc
lods
and
inc
adc
pop
inc
xor
mov
out
int
icebp
dec
mov
xor
sbb
mov
cmc
xchg
jecxz
or
add
loop
lods
push
xorl
leave
mov
lock
lret
mov
mov
ffree
pop
dec
test
ljmp
sbbl
or
outsb
mov
push
loope
inc
mov
sbb
push
lret
mov
cmc
inc
loope
lods
xlat
inc
das
mov
in
subl
inc
cltd
mov
or
leave
xchg
test
into
mov
push
aad
mov
sbbb
testl
sub
bound
sub
loop
jns
push
adc
sti
and
xorb
andl
sub
xchg
popw
inc
addr16
das
out
sub
adc
adc
hlt
inc
fiaddl
and
insb
adc
cli
pop
stos
pop
sbb
jmp
jecxz
mov
mov
inc
xor
jno,pt
mov
push
pop
jbe
lret
or
adc
mov
es
fldcw
pop
mov
jmp
push
loopne
movsl
mov
dec
std
shrb
dec
xchg
movsl
test
xchg
add
push
fdivrl
sub
call
jnp
xchg
rorb
inc
mov
cmp
leave
cmp
das
sub
in
inc
xor
in
pusha
mov
xchg
outsl
xor
pop
hlt
or
es
int3
cmpb
xor
or
sub
or
and
hlt
inc
lods
nop
shll
testl
je
sub
push
adc
bound
xchg
fcomp
dec
das
aaa
stos
mov
cmp
mov
xor
inc
enter
scas
imul
push
loopne
mov
out
fdivr
cmp
mov
adc
or
cli
xchg
fistpll
repnz
inc
cs
adc
mov
loopne
push
add
mov
loope
sahf
popf
xor
ja
add
std
out
adc
into
adcl
adc
xor
dec
pop
test
xlat
test
les
sbb
in
mov
ds
sub
pop
mov
ja
pusha
or
cs
pop
ljmp
sbb
mov
xchg
pop
and
mov
xchg
std
mov
adc
or
or
into
push
mov
sub
xlat
push
or
xlat
inc
mov
imul
mov
jecxz
jb
pop
int3
adc
and
fwait
sahf
jae
dec
jno
pushf
push
mov
cmp
jmp
dec
stc
pop
mov
mov
lcall
aad
bnd
xlat
fimull
add
xchg
xchg
lahf
rcrl
cmp
mov
out
adc
call
jb
dec
les
addl
idivl
push
dec
loop
push
sub
incl
icebp
cmp
cmp
mov
jo
lea
scas
into
jl
sub
mov
xchg
jecxz
and
in
adc
call
xchg
test
sbb
xchg
aam
jg
sbb
ds
push
push
and
dec
rolb
test
ret
ja
ffree
sub
ss
lcall
nopl
sbb
orl
mov
jge
pop
js
loop
adc
stos
adc
mov
insb
lcall
nop
das
stc
jecxz
sbb
shlb
rorb
pop
xlat
xchg
sub
les
mov
test
push
addb
mov
push
mov
stos
pop
es
sbb
in
jecxz
pusha
mov
movsb
popl
mov
dec
sub
es
popa
mov
seta
lock
test
xchg
push
outsl
stos
pop
sub
outsb
sub
mov
hlt
ret
sbb
dec
jo
or
pop
leave
bound
mov
insl
sti
or
push
loopne
and
add
stos
or
test
out
add
inc
inc
pop
or
repnz
das
in
add
dec
mov
cmp
mov
mov
adc
cmc
fisubs
or
xor
int
fsubl
in
lock
dec
dec
dec
fistpl
in
and
xchg
enter
repnz
inc
add
and
push
fbld
aas
in
in
arpl
stos
gs
dec
pop
push
jno
lahf
xorb
mov
loopne
repnz
cs
loope
mov
cmpsl
popw
sub
inc
add
or
jne
shl
xchg
cmp
pop
cmc
cmp
jnp
fscale
shll
inc
scas
mov
jmp
leave
mov
push
mov
ljmp
pop
add
lret
push
xchg
mov
imul
mov
push
mov
push
fistl
in
and
and
dec
clc
out
cmp
and
sbb
popf
es
cmp
je
lock
mov
stos
cmpsl
xchg
cmp
gs
fcmovbe
nop
inc
xchg
lcall
mov
xchg
xor
popf
test
xlat
xchg
xchg
push
adc
fucomp
push
cmp
jo
push
dec
xchg
add
popa
mov
inc
mov
into
add
push
xchg
mov
popa
sbb
pushf
jge
js
jne
test
aad
cmpsb
push
loop
push
push
mov
cwtl
pop
pop
les
lcall
js
mov
sarb
mov
test
fcoml
jbe
sub
fadds
jb
adc
das
fnstcw
mov
shrb
dec
jg
xchg
xchg
into
xor
testb
outsl
jnp
or
addl
sbb
pop
mov
and
sahf
test
leave
fisttps
sub
aas
test
inc
push
cmp
and
sbb
xchg
inc
sbb
sbb
mov
arpl
out
and
fmuls
or
xchg
jg
outsl
xor
and
adc
add
hlt
iret
aam
out
mov
movsb
xchg
mov
fs
push
jg
outsl
xor
and
adc
add
hlt
iret
aam
out
mov
movsb
xchg
mov
fs
push
jg
outsl
xor
and
adc
add
hlt
iret
sar
out
mov
mov
scas
inc
pop
push
dec
bound
outsl
xor
and
xchg
aas
test
or
sbb
inc
cwtl
ret
pop
sub
imul
push
jne
daa
sub
jge
xor
rclb
add
pop
add
add
or
add
add
jne
add
add
call
add
xchg
add
jns
push
add
add
add
jne
mov
sub
add
add
add
add
add
add
adc
loopne
add
test
push
add
add
lret
add
add
add
add
add
xor
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
addl
outsl
add
pop
add
add
add
sbb
rolb
dec
add
add
add
add
imul
enter
add
add
add
add
add
or
sub
add
inc
add
outsl
add
jl
enter
or
lret
add
add
pop
and
pop
add
add
add
add
add
add
pop
add
sub
add
add
add
add
add
add
add
add
add
add
out
stos
add
add
add
lcall
add
add
data16
add
add
add
push
add
add
add
add
push
add
add
add
add
xor
jge
daa
add
add
add
jmp
filds
jg
outsl
add
mov
or
pop
add
lods
add
add
add
add
add
add
add
add
jl
mov
mov
add
outsl
add
add
and
sub
add
sbb
rolb
sbb
adc
ja
and
sub
add
add
add
add
add
out
mov
sub
push
out
cmp
je
push
add
add
add
add
xchg
add
add
add
add
sahf
add
push
add
add
add
add
and
ljmp
add
outsl
add
add
cmp
mov
add
mov
push
pop
add
add
pop
add
fiaddl
add
add
add
add
out
movsb
add
add
pusha
add
add
add
add
add
imul
xor
outsl
add
sbb
test
inc
add
add
movsb
add
rolb
add
add
fiadds
and
or
popl
mov
mov
lcall
add
or
add
add
sub
add
sub
sbb
sbb
syscall
imul
add
add
add
add
add
add
push
add
jb
fwait
add
add
sbb
adc
mov
add
add
test
xchg
add
add
add
add
add
add
add
add
inc
add
adc
add
add
popl
jb
and
filds
jg
dec
add
add
add
outsl
add
out
add
movl
sub
add
and
pop
add
out
xor
outsl
add
add
add
add
add
jecxz
jo
pop
add
add
add
add
add
add
outsl
add
mov
add
add
push
add
add
loope
xchg
add
pop
decl
cmpsl
shll
xor
fildl
xor
or
pop
mov
addb
roll
dec
mov
xchg
xchg
dec
xor
sbbb
sbb
and
lret
jno
mov
xchg
sub
mov
dec
and
and
adc
push
push
enter
xchg
aam
push
aaa
jno
push
les
int
add
push
insl
je
in
test
mov
es
cmp
cld
ds
cmp
loop
mov
mov
les
sbb
cltd
ds
dec
arpl
pop
adc
adc
insl
aam
mov
add
rclb
mov
rolb
adc
popa
mov
push
cmpsl
ret
pop
pop
ss
fsubl
sbb
lods
ret
adc
adc
inc
test
lea
xchg
out
add
xor
pop
push
sbb
cmp
cmpsl
dec
or
pusha
or
pop
inc
movsb
iret
inc
push
out
sub
lock
xchg
roll
movsl
add
inc
ss
xchg
repnz
or
fs
mov
cmp
xor
push
dec
and
jp
mov
sub
xor
mov
sub
and
push
jge
jle
out
pop
dec
xchg
mov
add
sbb
nop
mov
push
mov
pop
inc
push
xor
movsb
and
cmp
inc
jp
and
fs
int
push
pop
mov
xchg
jmp
lods
xor
push
mov
mov
mov
xor
insl
mov
or
enter
out
cld
sub
cwtl
in
iret
cmp
mov
pop
pop
jnp
fsubs
lcall
push
cltd
gs
orb
arpl
adc
push
std
add
int3
inc
daa
push
push
insb
ret
in
mov
cmp
and
test
mov
and
xchg
shll
mov
pop
out
xlat
test
mov
push
shlb
out
push
in
sub
clc
je
aad
fcmove
add
or
push
sub
lret
xchg
scas
pusha
test
dec
sbb
sub
sti
lret
shlb
mov
bound
cmp
jecxz
fimuls
adc
negl
les
pop
lds
cld
jmp
inc
cmc
inc
inc
jg
enter
int3
roll
stos
ljmp
ds
shrl
adc
pop
icebp
cwtl
fstl
cwtl
movsl
xlat
inc
xchg
pop
lock
stos
rcll
mov
push
and
pushf
cmc
jne
mov
faddl
inc
int
inc
jl
lds
repz
mov
dec
sbb
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
