fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
enter
call
and
adc
dec
pop
pop
ljmp
js
or
xchg
enter
call
and
mov
cmc
push
rcrb
sub
fdivs
inc
clc
push
mov
mov
sbb
imul
loopne
loop
sub
xor
push
xor
andb
bound
xchg
rol
jg
and
daa
gs
das
add
mov
hlt
cmc
aad
xchg
cmp
out
jle
imul
adcb
sti
fsubp
mul
dec
hlt
js
std
sub
pop
xchg
mov
call
incl
loopne
addr16
mov
add
push
shl
mov
fwait
movsl
pop
mov
add
ficoml
adc
in
repz
negb
jne
cmp
arpl
sti
pop
pop
mov
in
icebp
cwtl
mov
sub
mov
in
test
push
fdivs
inc
clc
push
mov
mov
cmc
push
movsl
sbb
lods
gs
adc
testl
xchg
cmp
movsl
mov
pop
repnz
testl
mov
shll
push
std
cmp
cmpb
adc
sarb
loopne
shrl
popf
sub
test
mov
cmc
push
movsl
sbb
enter
call
and
mov
cmc
push
movsl
sbb
enter
jne
xchg
clc
push
daa
icebp
sti
cmc
mov
push
mov
add
sub
adc
mov
loope
lea
pop
adc
shll
xor
mov
pop
add
jle
adc
xor
mov
dec
pop
je
push
hlt
push
arpl
pop
scas
lea
and
stc
movsl
and
test
icebp
lcall
insl
das
push
loop
xor
lret
push
outsb
adc
add
loopne
mov
mov
cmp
xor
cmp
mov
dec
dec
jl
pop
push
std
stos
pop
fwait
divl
lcall
js
mov
ror
lret
cltd
and
out
pop
lock
cmp
out
out
scas
lock
dec
bswap
sub
imul
arpl
add
idivb
push
sti
jg
mov
mov
out
test
jae
das
mov
repz
test
push
pushf
aas
shll
mov
les
fldcw
push
jb
and
sub
inc
imul
pop
xor
push
cmc
jl
jge
xchg
aas
mov
jp
insb
mov
sbb
repnz
fwait
adc
pop
das
pop
mov
and
ds
xor
dec
ficomps
sbb
loope
test
push
mov
leave
fs
cmpsl
xchg
int3
addb
lahf
shl
movsb
push
xchg
sub
ds
mov
dec
into
xchg
or
arpl
xchg
sub
jno
adc
or
test
es
in
sub
and
cli
adc
xor
scas
xor
test
aaa
jnp
mov
mov
push
lea
ljmp
xor
push
insl
movsb
mov
lock
mov
adc
push
out
shll
cmp
in
xor
fcmovnb
adcb
das
sti
or
stc
push
cmp
ja
ss
mov
lods
pusha
lods
or
xchg
jnp
out
in
adc
dec
jge
inc
add
aaa
add
xor
push
insb
cmp
jno
leave
sbb
pop
pop
lret
or
loope
fistps
pusha
jl
jne
scas
add
jecxz
push
xchg
or
out
shrb
test
xchg
fdivrs
aaa
arpl
enter
or
cmp
jecxz
mov
jle
dec
adc
out
push
mov
ficompl
loope
adc
push
or
addb
pop
sub
dec
hlt
inc
inc
jl
jl
inc
scas
or
daa
and
mov
inc
sub
es
mov
outsb
in
data16
out
sub
call
add
je
inc
sub
mov
push
lds
jnp
push
xlat
xor
les
mov
add
loopne
pop
sub
mov
hlt
and
lret
popa
mov
mov
je
mov
add
cmp
push
or
ret
insb
adc
dec
sub
xchg
lret
mov
sarb
shll
xor
push
fs
cmp
addl
pop
out
in
les
ss
cmpb
xor
jl
pop
xchg
imul
std
pop
xor
into
add
shlb
pop
cmp
mov
lds
inc
dec
add
add
push
xor
pop
xor
sub
adc
dec
ficoms
imul
sbb
call
loope
fs
sub
jbe
mov
mov
jecxz
sub
out
or
jmp
xor
xorl
decl
sti
push
dec
enter
into
movsl
push
cmp
sub
push
insb
dec
xor
xchg
loope
ret
adc
int
inc
mov
inc
fildll
inc
mov
mov
sub
jl
mov
out
inc
add
add
icebp
dec
mov
inc
push
push
ljmp
adcl
or
xlat
adc
nop
cmc
test
lds
inc
int
in
mov
fwait
jo
jp
push
in
xchg
cmpsb
xchg
subl
in
test
cmp
jl
push
fstpl
mov
inc
or
shl
push
div
insb
and
inc
out
sbb
sbb
adc
test
and
cmovno
mov
shrd
in
cmpsl
sub
mov
mov
xlat
lods
push
add
jle
sub
stos
xor
pop
or
xchg
sti
mov
cmpb
pop
inc
mov
out
add
sub
lods
fs
mov
cmpsl
mov
push
push
jb
mov
sbb
mov
in
imul
pop
mov
add
repnz
jl
lods
xor
adc
sarl
mov
pop
push
scas
cmp
mov
push
addr16
loopne
movsl
push
fdivr
and
push
call
jmp
cltd
sbb
ret
ret
lea
testl
jl
aad
mov
jle
dec
loopne
repz
sbb
std
int
gs
rolb
out
movhps
mov
xor
repnz
jo
mov
xchg
ja
sbbb
call
pop
fwait
fs
sbb
cld
imul
shll
add
xchg
arpl
adc
mov
pop
lock
inc
int
push
cli
incl
dec
adc
pusha
mov
jne
sub
arpl
outsl
sub
jb
sarb
test
loop
stos
add
into
test
add
lret
xor
dec
push
inc
mov
add
inc
xor
cli
cmpsb
sbb
test
pop
out
out
out
mov
pop
outsl
movsb
dec
sbb
pop
in
pop
cmp
or
pop
or
gs
inc
repz
cmpsb
addr16
pushf
or
xchg
xor
mov
sti
imul
pop
int
xlat
mov
xchg
lea
jmp
sub
mov
in
mov
push
pop
jne
mov
fldl
sti
aam
vmwrite
int
add
in
push
push
shrb
fidivl
xor
imul
call
xchg
pop
insl
jmp
js
push
and
jb
dec
cwtl
cmp
mov
fst
test
mov
mov
push
popa
sbb
and
into
sbb
adc
rorb
mov
scas
jle
jmp
imul
jb
ljmp
out
pop
je
int3
int3
sub
nop
cli
mov
adc
call
cmp
sbb
daa
adc
push
aaa
sahf
or
lds
dec
hlt
mov
icebp
sbb
dec
inc
ret
addr16
lahf
adc
mov
clc
outsb
inc
scas
in
xchg
je
cmp
fwait
loop
paddusw
sub
xorb
pop
data16
jp
scas
fldcw
daa
in
mov
arpl
je
pop
mov
loop
push
pop
mov
push
ja
nop
sarl
scas
fistl
popf
dec
jo
fadd
and
xchg
int3
pop
pusha
lds
clc
mov
aad
push
cmp
xlat
mov
sbb
mov
fsubp
jo
pop
dec
lcall
int3
hlt
or
jmp
aad
and
adc
lods
push
jo
pop
add
lods
enter
outsb
ljmp
outsb
jecxz
insb
popa
js
sti
jb
xchg
rcrb
out
fcmovu
rclb
icebp
push
call
jge
mov
nop
shlb
xchg
push
inc
or
fisubrl
sar
test
mov
movsb
mov
repz
mov
cli
dec
nop
pop
mov
cwtl
xorl
cmpsl
sbb
out
imul
push
and
lds
cmpsb
adc
xchg
or
jmp
inc
or
decb
das
ficompl
dec
dec
addr16
shll
push
das
adc
dec
imul
stc
dec
out
addps
mov
adc
jns
lcall
ss
outsl
cmp
mov
dec
shrb
mov
insb
push
lods
jp
add
popf
adcb
push
andl
and
pusha
movsb
cmpsb
jmp
ss
sub
sub
push
inc
aaa
mov
arpl
jg
outsl
comiss
cmpsb
mov
cs
mov
cmp
lret
or
cmpsb
mov
ds
mov
nop
pop
idivb
aam
fdiv
outsl
pop
icebp
hlt
imul
subb
mov
in
or
mov
jno
insb
cltd
into
repz
fsubr
adc
cmp
bound
bound
and
mov
mov
inc
and
stos
sub
movsl
sub
xor
jl
es
lahf
jae
loope
push
stos
and
or
push
lret
lret
stos
add
inc
mov
fnstenv
mov
sbb
and
sub
push
push
mov
into
es
jo
leave
pop
movsl
xchg
xchg
jo
pop
cmp
mov
mov
dec
popa
and
adc
test
cmp
fsubs
enter
bound
and
es
clc
push
mov
fwait
test
mov
sub
fs
adc
cwtl
dec
push
xor
pop
lahf
mov
xlat
mov
rorb
cmpsb
inc
mov
decb
test
mov
shlb
xchg
jp
sbb
stos
cmpsl
into
outsb
adc
jle
inc
pop
loope
fcmovnb
hlt
mov
mov
and
je
ffree
les
packuswb
movsb
or
and
add
arpl
dec
fldcw
xchg
test
xchg
sub
test
ds
push
scas
pop
adc
icebp
negb
icebp
pop
mov
adc
daa
adc
out
push
or
xor
jge
fisubs
sbb
and
xchg
push
cmp
xor
sahf
jmp
repz
loop
je
or
xchg
mov
mov
mov
jbe
mov
xor
adc
jle,pn
data16
ret
ret
or
outsb
outsb
lock
enter
mov
out
into
jno
scas
push
mov
imul
shr
ret
push
nop
movl
ljmp
sub
in
adc
pop
adc
push
push
jns
inc
enter
out
rcrl
xor
fnstenv
add
int3
scas
mov
lock
mov
fs
push
lods
cmp
in
or
jge
cli
aad
out
adc
cs
imul
adc
into
cmpsl
mov
daa
mov
and
adc
xchg
jae
mov
pop
jb
jmp
cwtl
lcall
mov
ds
enter
loope
nopl
mov
sub
ljmp
bound
sbb
pusha
jge
sub
mov
or
sbb
cli
scas
sbb
stos
mov
jne
cmpsl
push
dec
sub
sub
adc
scas
dec
jae
movsl
sbb
dec
jge
inc
out
aad
test
adc
test
aaa
and
shll
cld
fstl
xchg
dec
add
daa
mov
or
fdivr
adc
and
or
or
lret
dec
pop
call
add
rol
in
in
sub
into
xor
push
mov
dec
fbstp
push
ret
mov
adc
ljmp
pop
sarb
mov
cs
fsubrl
inc
or
sbb
jne
add
pop
ret
or
jo
scas
add
mov
inc
jle
pop
jo
or
ret
lea
enter
test
lock
rcr
out
addr16
loopne
dec
in
add
cwtl
add
or
fnstsw
jno
insb
insb
fcomps
ficompl
int
mov
cs
mov
dec
mov
xor
sbb
shll
lods
xchg
imul
jbe
dec
mov
out
push
jmp
pop
inc
dec
push
xchg
cmp
fs
sub
es
push
xor
insl
add
jbe
mov
je
dec
addr16
imul
in
and
cs
adc
incl
popa
and
lcall
sub
repz
andb
cmc
pop
dec
mov
push
faddl
orb
lods
add
push
js
lahf
and
fsubrs
mov
loopne
cld
sub
inc
stc
mov
sub
sub
jae
inc
pop
xor
xor
push
shr
xlat
add
mov
cmp
adc
sbb
cmpl
test
sbb
sbb
mov
cs
xchg
cli
loop
and
nop
xor
mull
scas
mov
sub
scas
push
test
call
jg
pop
push
hlt
push
mov
jp
ds
ret
inc
sbb
sub
aas
sahf
sbb
dec
push
mov
fcoms
xor
mov
jbe
jo
jle
mov
push
mov
das
inc
or
push
add
add
sarb
int
mov
mov
fildl
fbld
flds
lcall
imul
je
add
das
add
imul
fs
or
xchg
loopne
insl
popa
mov
and
js
or
xor
in
cmpsb
mov
sti
push
aas
out
add
add
pushf
mov
push
leave
popf
out
clc
test
lea
mov
mov
jl
dec
sub
das
lods
in
rorl
arpl
scas
push
aaa
xor
push
ret
jp
pop
xor
jle
mov
sbb
pop
xchg
je
inc
sub
lock
test
inc
mov
cmpsl
fs
xor
dec
cmpsb
pop
push
push
fstpt
movsl
mov
xchg
aad
mov
insl
in
pop
jecxz
neg
or
lret
xor
lods
jno
mov
int3
lds
call
cmpb
nop
jmp
mov
sbb
mov
jp
je
mov
xchg
daa
dec
call
mov
int
or
hlt
inc
mov
out
sbb
sbb
test
push
push
ja
call
dec
imul
mov
or
lcall
pop
fsts
mov
sbb
popf
addr16
orb
cmp
and
aam
movsl
ljmp
xchg
xchg
or
push
aas
mov
test
mov
and
fwait
add
dec
fldl
pop
dec
mov
xchg
dec
lea
stos
outsb
test
xor
mov
pop
smsw
adc
push
pop
push
jns
lret
lea
punpcklbw
aaa
inc
daa
iret
in
dec
cmc
aas
adc
insl
inc
adc
sbb
popa
mov
enter
push
mov
xchg
ds
insl
imul
cmp
enter
rolb
popa
repnz
sub
aad
and
push
divb
mov
jp
inc
pushf
addr16
sub
scas
pop
gs
dec
jl
dec
sub
adc
stc
and
pop
sbb
popl
iret
lcall
pop
fimuls
insw
test
cmpsl
scas
popf
push
xor
sbb
imul
das
sub
xor
xor
sbb
pop
rorl
aad
push
das
pop
frstor
add
ret
adc
enter
push
cmc
lods
jbe
fisttpll
push
je
lret
adc
xchg
pop
xchg
xor
out
xor
push
or
xor
shrl
lret
mull
lea
ja
push
loop
mov
pop
pop
pop
sbb
jo
cmp
pop
std
imul
fiadds
push
mov
mov
imul
dec
cltd
cmp
stc
rclb
mov
movsb
mov
add
and
out
jae
and
push
dec
dec
push
adc
push
pop
in
hlt
stos
repz
inc
jae
in
movsb
mov
mov
mov
mov
fnstsw
fildll
hlt
aaa
adc
adc
mov
jg
arpl
pusha
dec
lock
mov
push
lret
jmp
jmp
lock
mov
mov
lea
inc
mov
xchg
hlt
pop
in
mov
xor
xor
lahf
jo
sbbl
mov
mov
lahf
or
jns
and
push
and
jno
je
adc
addl
aaa
jmp
out
xor
dec
add
out
lcall
gs
push
sbb
dec
jg
scas
add
pop
sbb
pop
out
cmp
in
push
inc
shlb
sti
mov
ja
fimull
mov
jae
hlt
rcrl
stos
pushf
pop
fidivs
add
das
mov
add
xor
aaa
cmp
inc
ljmp
mov
push
cld
xchg
xor
or
in
jae
cmp
dec
jns
pop
push
inc
insb
aas
xor
jbe
dec
push
fisttpl
mov
and
jno
ja
loopne
inc
push
fstpt
push
cmpsb
xchg
dec
aaa
clc
or
pop
into
jnp
imul
xor
or
aad
cltd
or
ja
dec
push
lds
cmpsb
daa
push
adc
ss
repz
jp
push
inc
outsl
inc
adc
daa
shll
in
mov
subb
jnp
adcb
cltd
sahf
mov
cmp
lahf
dec
sub
in
fs
out
and
aam
adc
jb
test
and
cmp
lcall
imul
imul
out
les
and
fucom
cmp
arpl
pop
adc
fisttps
sbb
or
in
dec
mov
inc
push
pop
shl
mov
repz
mov
mov
loop
mov
fadds
inc
mov
xchg
push
rcr
cld
or
leave
jne
sarl
call
mov
repz
and
fdivs
cli
shrb
ljmp
xor
pop
aaa
or
daa
and
cmc
lret
outsl
push
mov
cli
push
jle
repz
mov
xlat
addr16
rol
aaa
push
mov
addb
adc
jmp
jg
in
xor
fidivs
sub
fs
adc
push
aas
sub
jmp
xchg
pushf
lods
pop
shll
stos
cmp
and
sub
rolb
and
js
pushf
adc
pushl
mov
xor
imul
stc
push
push
movb
loop
bound
or
mov
shlb
pushf
js
push
dec
psraw
push
pop
out
lret
enter
xchg
in
repz
les
xchg
xchg
add
add
xchg
cmpsb
dec
std
cmpsl
aam
fidivrl
rcl
cli
xor
inc
cmp
xchg
shlb
jecxz
and
jl
out
sub
jge
pop
adc
xchg
or
jecxz
xorb
rcrb
outsb
mov
pop
out
and
push
jb
fidivs
adc
cwtl
insl
pop
adc
test
add
mov
aas
pop
dec
mov
loop
jl
push
icebp
cs
call
nop
mov
sub
jae
sub
inc
sub
arpl
jl
sbb
movsb
or
rol
inc
add
inc
pop
jmp
xchg
or
negl
or
incb
sbb
mov
mov
aam
imul
inc
incb
pop
loopne
clc
xlat
imul
mov
loopne
in
push
dec
mov
popf
sti
or
mov
lea
push
cmp
push
jne
xor
insl
cli
push
add
pop
cwtl
in
pop
adc
add
ret
mov
and
pusha
rclb
mov
out
xlat
or
bound
or
xchg
or
imul
or
int3
in
je
scas
aaa
std
cltd
adc
or
push
cli
stc
xor
test
dec
inc
mov
std
pop
js
jge
mov
push
loopne
jecxz
inc
test
cmpsl
hlt
leave
out
inc
fldcw
sahf
icebp
gs
add
or
jmp
sub
cmp
das
fs
fs
divb
jo
repz
or
xor
pop
pop
sub
jl
lcall
sub
movsl
push
sub
sbb
adc
mov
xchg
inc
cmp
fldcw
xlat
dec
imul
ss
out
and
enter
inc
movsb
cmp
inc
test
jo
je
mov
imull
xchg
leave
pop
mov
add
mov
daa
xor
xor
decl
les
inc
fldenv
outsb
pop
gs
ja
loop
dec
push
lret
js
dec
and
aas
jno
stos
sub
xlat
mov
pandn
xchg
leave
pop
add
sub
mov
lcall
xchg
into
aas
lods
push
lods
or
adc
stos
inc
push
jnp
lock
jo
mov
mov
fs
dec
jl
lret
sti
rorl
fwait
imul
test
xor
sbb
arpl
insb
stc
lret
rcrb
leave
popf
repnz
pop
pop
sub
jl
mov
push
inc
aas
xor
js
les
inc
cmp
scas
pop
jno
addr16
jecxz
push
pushf
jnp
sbb
pop
sbb
mov
cmpsb
fnsave
iret
neg
mov
or
jae
aam
push
sub
mov
jno
dec
clc
ret
mov
clc
push
mov
mov
cmc
push
movsl
sbb
enter
call
and
mov
cmc
push
movsl
sbb
enter
call
and
mov
cmc
push
movsl
sbb
enter
call
and
cmp
mov
cmpsl
pop
ret
mov
sarb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
movsb
call
les
xor
and
adc
push
xchg
inc
dec
inc
pop
mov
movsb
mov
hlt
out
in
aam
icebp
xor
and
jne
add
je
fs
dec
inc
pop
mov
movsb
jns
adc
in
aam
in
xor
and
jne
popa
insl
pop
cmp
sbb
cmp
jmp
fcomp
aam
jg
les
das
dec
negl
mov
daa
rcrb
push
hlt
js
lock
mov
adc
lods
sub
lds
cli
jmp
pop
xor
ret
dec
lock
jp
and
adc
movsl
out
in
lock
pop
aas
mov
xor
je
inc
push
sti
loope
pushf
movsb
adc
add
mov
push
iret
xor
les
stos
loop
adc
jp
repnz
mov
and
pop
inc
jb
pusha
sbb
in
aam
les
pop
or
push
daa
add
mov
inc
push
cli
add
mov
add
lret
jl
outsl
popa
cmp
inc
xor
xchg
sti
test
aam
les
das
and
adc
add
je
fs
push
push
inc
insl
shrb
repz
adcl
jnp
pusha
jl
sub
adc
cmp
ss
out
loopne
int3
repz
mov
mov
dec
insb
pop
popa
das
aas
and
jg
sub
ret
pop
mul
movsb
repz
in
aam
fbstp
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
out
in
aam
fbstp
and
adc
add
je
fs
dec
inc
pop
mov
mov
jno
mov
mulb
pusha
jge
xchg
sahf
pop
mov
xor
dec
pop
loopne
scas
test
mov
inc
loope
cmpsl
push
sbb
xor
jbe
ljmp
xchg
adc
shll
inc
call
ret
push
and
adc
sub
mov
sarl
jno
stc
in
test
xor
lods
mov
jmp
add
add
sbb
jo
pop
rcr
lock
fisttpll
dec
xor
out
xchg
test
and
xchg
inc
iret
out
sti
mov
xor
addr16
es
cmc
popf
sbb
xor
pop
pop
jmp
pop
sti
lods
jmp
pop
pop
pushf
xor
ret
jb
mov
test
out
outsl
push
orl
hlt
and
cld
fisttpll
fbld
and
lahf
jmp
fsubl
daa
or
jle
pushl
mov
das
sbb
xchg
xor
inc
xor
add
pop
mov
adc
adc
mov
rorb
sbb
cmpsb
dec
inc
add
mov
xlat
daa
ljmp
mov
jp
and
fimull
outsb
push
jae
cmc
add
ds
leave
imul
sarb
cmp
jno
stos
loope
clc
mov
cld
cld
insl
pushl
sbb
arpl
adc
adc
inc
rolb
fcmovnbe
pop
xor
icebp
in
js
mov
add
stc
out
inc
fistl
xor
pop
and
and
add
cli
push
dec
push
ret
sub
jns
movsb
popa
mov
sub
xor
dec
pushl
roll
adc
dec
subl
adc
adc
mov
sbb
stc
cmp
icebp
je
cld
cmp
or
cmp
addr16
and
imul
outsl
dec
jmp
or
mov
mov
adcb
mov
pop
jae
popa
repnz
stc
adc
insl
xor
bound
and
cld
mov
jle
addr16
or
das
jge
dec
push
pop
jnp
jmp
mov
stos
test
test
cwtl
rorb
push
adc
xor
lds
ljmp
nop
icebp
pop
dec
jne
sahf
mov
outsl
adc
stc
mov
out
inc
andb
push
push
in
pusha
xchg
leave
xchg
or
aam
xor
lret
cmpsb
insl
dec
xorb
mov
shlb
push
fsts
std
inc
ss
dec
fs
dec
push
mov
in
sbb
xchg
je
sahf
ds
pop
mov
insb
xchg
das
scas
js
dec
xor
setp
sbb
stc
movsl
push
sbb
fldt
push
int3
pop
pop
adc
pop
xor
xlat
xor
add
xor
nop
jle
sub
and
pushf
push
sbb
arpl
bound
shll
sahf
mov
jo
jecxz
and
das
sub
xor
inc
cmp
lods
dec
dec
jle
mov
clc
pop
stc
push
out
mov
imul
scas
fs
test
ss
pusha
sub
test
mov
loop
xor
jb
sti
repz
scas
sahf
out
popf
stc
inc
xchg
call
jmp
pusha
xor
movsb
stos
jle
push
in
mov
xor
sbb
rdtsc
xchg
das
push
adc
cli
insb
push
outsb
xchg
push
iret
mov
xchg
fmuls
add
adc
dec
jg
shll
inc
mov
or
xchg
dec
leave
sub
leave
cli
push
call
aaa
orb
push
shrb
jno
loope
je
pop
or
cmpsb
lods
xchg
stos
aaa
add
jno
les
cltd
scas
out
popa
in
mov
jo
mov
jo
fistps
mov
mov
cltd
sub
out
mov
or
mov
popa
xchg
mov
or
inc
shll
cmpsb
shll
dec
inc
mov
lcall
xor
cmpsl
dec
fidivrs
fwait
cmp
test
sbb
cs
mov
das
adc
adc
xchg
cmp
nop
sbb
dec
adc
mov
xchg
push
scas
mov
cmpsl
hlt
dec
subl
cs
ja
rcrb
inc
adc
sbb
push
push
xor
xchg
mov
cs
faddp
std
inc
add
aas
std
sub
mov
stc
shlb
pop
mov
fistpll
adc
adc
push
push
outsb
adc
add
fbstp
mov
mov
jo
adc
aad
stos
dec
int3
push
popa
add
cli
fdiv
mov
jge
fistps
pop
sahf
in
mov
xchg
sbb
mov
sub
aad
lahf
xor
or
inc
idivl
ss
nop
xchg
outsb
push
out
das
dec
jmp
cmp
or
add
test
push
daa
adc
mov
out
or
xor
mov
int
insl
cwtl
pop
faddl
lret
fdiv
or
mov
or
jo
add
std
imul
nop
push
lahf
das
das
ds
mov
cmc
and
jnp
shrb
mov
mov
subb
out
cmp
pop
mov
lcall
sub
xchg
add
cmp
cmpsb
pop
adc
inc
mov
add
push
inc
sub
inc
leave
adc
cmp
stos
roll
idiv
adc
aas
jae
out
fidivrl
mov
xor
dec
lcall
jl
pusha
nop
jmp
add
repz
leave
sbb
jg
fcoml
int3
add
and
cld
dec
in
addl
inc
mov
xchg
lds
cs
cmc
and
mov
or
adc
and
dec
mov
testb
sarl
in
jge
cmp
pop
xchg
mov
out
cmp
mov
sbb
adc
vmread
sub
add
dec
enter
lock
sbb
dec
pop
xchg
mov
pushf
fisttpll
push
movsl
leave
add
in
jnp
idivb
addr16
push
ret
out
push
sbb
leave
sbb
inc
repnz
and
int
dec
cmpsl
jne
jnp
dec
jns
test
ss
xchg
mov
and
scas
inc
leave
hlt
enter
or
inc
mov
inc
fs
adc
jmp
and
jbe
ljmp
adc
dec
pop
xchg
and
cmp
testb
ror
adc
jno
sub
in
xor
mov
xor
inc
out
lock
cltd
pop
popa
es
test
fidivrl
rorb
test
sarb
xchg
mov
mov
lods
jae
cmpsl
test
rcr
into
jle
ret
jbe
and
sub
stos
mov
xlat
inc
stos
in
cld
stc
imul
daa
inc
push
jmp
aas
and
mov
loope
push
and
sub
add
arpl
cmpsb
sub
insl
lahf
daa
mov
ret
icebp
xor
dec
imul
sbb
add
mov
xchg
bnd
pop
cmpsb
xor
and
ljmp
xor
pushf
mov
in
cltd
push
mov
push
sbb
xchg
or
cmp
jne
int3
sub
push
dec
cvtpi2ps
lcall
arpl
inc
jge
stos
rorb
movl
mov
xchg
push
int3
sbb
mov
ds
in
xchg
and
and
test
mov
pop
pusha
test
aad
adc
rclb
xchg
in
pop
mov
testb
push
jne
lret
shrb
push
push
dec
mov
pusha
and
out
js
pop
cmp
lea
xor
xor
push
hlt
pusha
adc
mov
aas
dec
mov
sbb
ljmp
mov
stos
jne
jbe
lods
arpl
inc
popa
cs
jg
sbb
call
shrl
ret
mov
mov
jno
jmp
push
shlb
shrl
inc
arpl
and
and
ret
aaa
cmpsb
test
leave
sbb
inc
add
push
push
sub
add
mov
xchg
scas
adc
pusha
leave
and
sub
mov
push
aam
pop
lret
mov
pushf
mov
mov
stc
push
fiadds
loope
not
notb
test
jl
test
ret
dec
push
loop
fistl
jo
mov
xchg
das
lcall
popf
in
xor
mov
inc
adc
lret
jge
iret
jno
insb
and
lcall
rcrb
and
add
js
push
cld
cmp
scas
jle
adc
pop
cmp
movsl
aaa
in
data16
mov
pop
mov
xchg
ss
mov
and
daa
leave
xlat
insl
inc
sarb
in
jno
pop
push
adc
inc
mov
sbbb
and
out
in
insb
or
out
pop
and
mov
movsb
inc
mulb
xor
dec
scas
jmp
test
push
out
ds
outsb
push
adc
out
cmc
cwtl
inc
test
ret
sub
cmp
xor
in
lcall
mov
icebp
or
xor
adc
fdivs
fs
push
ret
push
push
xchg
adc
dec
mov
lcall
std
mov
imul
sub
and
jnp
lods
out
mov
pop
dec
idivb
xrelease
test
pop
aaa
push
test
mov
sbb
and
adc
dec
lret
mov
xlat
shl
lret
sbb
jns
ljmp
mov
mov
les
ret
or
icebp
arpl
sub
mov
mov
fisttpll
enter
mov
lret
ret
and
add
jae
fsubl
inc
push
cmp
in
mov
call
inc
dec
stos
pop
movsb
shr
setg
jns
repnz
cmp
shll
out
ret
mov
cmc
mov
mov
fadds
sbb
call
inc
sub
mov
mul
xor
sub
mov
lock
into
icebp
dec
insb
xchg
pusha
add
nop
push
aam
cli
lahf
mov
pop
shrl
inc
outsl
pusha
stc
cmp
add
jno
popf
push
in
in
jno
xor
mov
sbb
roll
jl
push
ret
xchg
jbe
xor
pop
loop
push
pop
adc
insb
mov
pop
jns
cmpsb
xchg
pop
or
repz
mov
push
jg
jne
setg
movsl
dec
and
mov
mov
and
cmpsl
pop
pop
sbb
inc
mov
mov
xor
cli
leave
push
stc
insl
cwtl
mov
xchg
inc
xor
dec
jbe
inc
hlt
inc
xorb
clc
nop
mov
int3
cmpsl
cltd
hlt
pop
imul
xchg
fistpll
pop
jne
inc
lods
cmp
ficompl
adc
outsl
lcall
adc
mov
add
call
aam
leave
cltd
std
scas
dec
popf
das
pop
push
cmp
mov
mov
in
movsb
xlat
in
jbe
ds
jae
lret
mov
sbb
jmp
xor
or
dec
lea
out
ficomps
inc
fnstcw
cmp
dec
sub
lods
push
or
mov
mov
mov
movsl
xchg
push
dec
cli
imul
mov
pop
jo
stos
pop
push
sbb
xchg
bound
sbb
push
ja
dec
arpl
sbb
add
shrb
xor
cmp
test
insb
repz
push
jp
cmp
pop
dec
pop
aas
pop
xchg
int3
xor
inc
out
inc
jb
rcrl
mov
and
push
inc
repnz
adc
mov
fists
pop
push
test
test
sbb
nop
mov
jl
inc
and
sbb
lahf
push
test
jle
or
xor
mov
icebp
mov
std
add
pusha
pop
scas
repz
insl
jns
sub
imul
sbb
sub
xor
adc
int
cs
and
les
ss
mov
lods
shrl
mov
xlat
sbb
mov
mov
vmwrite
xor
stos
fwait
test
lock
xchg
scas
push
andl
icebp
lods
fcmovnb
jno
jge
imulb
ja
mov
add
cmpsl
add
stos
pop
je
sbb
jmp
in
mov
mov
dec
push
call
dec
or
gs
adc
sbb
fs
movlhps
and
dec
xchg
pop
mov
stos
jp
mov
in
cltd
mov
cmp
jo
cltd
push
push
dec
sbb
fldcw
cli
push
xchg
sbb
sahf
cmp
or
mov
in
test
add
cmp
dec
out
aad
inc
in
inc
cltd
scas
int3
jmp
inc
mov
adcl
jnp
andl
mov
dec
stc
clc
mov
xor
push
incl
js
xchg
out
jle
mov
jp
jo
popf
popf
mov
or
or
popa
push
pop
mov
loopne
flds
int3
sbb
loope
mov
cmp
cmp
cmp
pop
fdivrl
loopne
rcrl
xchg
pop
xchg
icebp
or
mov
icebp
shlb
es
inc
adc
push
sarl
repnz
mov
in
cmpl
jbe
or
push
shr
lret
mov
and
add
dec
sub
add
or
fiadds
inc
add
movsl
push
inc
out
andb
stos
aas
cltd
stos
jb
stos
iret
aas
mov
neg
jge
movsl
icebp
push
cwtl
pop
mov
inc
cmp
movsb
lahf
pop
push
movsl
xchg
mov
js
stos
movsb
cmpsb
mov
cmpl
jle
pop
jg
hlt
shll
pop
mov
scas
ficoml
sub
xlat
or
loope
jno,pt
test
push
push
sub
and
mov
lods
gs
fidivl
rcll
or
arpl
loopne
push
mov
shr
aam
push
xlat
and
cwtl
repz
loop
xchg
pop
loop
mov
add
int3
rol
sbb
xchg
int3
adc
adc
in
arpl
js
dec
push
pop
cli
faddl
in
inc
in
lret
cmpb
insb
mov
dec
in
into
rol
xchg
cmp
push
lock
dec
sub
mov
or
cmpsl
push
rcrl
jo
rolb
cmc
and
xchg
loope
sub
cmp
dec
repnz
xchg
cmp
xor
xorl
jge
jl
sbb
add
dec
add
fs
push
test
movsb
mov
cwtl
jmp
adc
subb
jge
pushf
sarb
pop
into
aam
loop
mov
test
std
je
jecxz
cmp
pop
in
movsb
cld
jle
movsl
outsb
push
test
decl
icebp
fists
shlb
push
xchg
mov
dec
dec
mov
stos
push
loop
into
jnp
stos
in
bound
aad
sbb
mov
push
and
xchg
inc
xchg
imul
or
xor
xor
pusha
pop
sarb
push
xchg
xor
bnd
push
inc
or
xor
or
or
mov
adc
cmpsl
test
sub
outsb
insl
mov
mov
mov
in
shl
pop
push
lds
loope
add
ja
pop
mov
repz
pop
ss
pushl
pop
mov
sar
or
pop
inc
dec
mov
push
test
ficoms
xchg
cmc
fistpll
sbb
test
lret
mov
and
cmp
clc
fists
xchg
mov
dec
push
jns
jmp
aam
imul
cmp
mov
fldt
mov
fisubl
mov
pop
mov
inc
fdivrl
in
pusha
ja
jp
cmp
int
fwait
sbb
aad
icebp
dec
pop
fidivl
mov
mov
sbb
roll
inc
cmp
sahf
cmc
sub
icebp
jnp
arpl
mulb
push
xor
int
xchg
inc
scas
xorl
test
leave
mov
jl
pop
jne,pn
dec
add
dec
or
push
frstor
ljmp
pop
cmc
decl
imul
push
iret
loop
lcall
shll
xchg
sar
enter
addb
inc
push
fidivrl
and
mov
or
and
icebp
adc
fbld
shr
cmp
sbb
mov
outsl
add
mov
add
sub
add
inc
lcall
jo
push
test
cmpsb
imul
js
rclb
mov
insb
nop
mov
xor
clc
out
dec
sti
test
aaa
aaa
das
dec
aaa
adc
in
mov
add
sub
or
fcoms
outsb
lret
xchg
into
repz
hlt
daa
ljmp
mov
lods
daa
inc
pop
mov
cmc
jge
cmpsb
mov
popa
rcpps
dec
xor
mov
imul
pop
sub
sub
cmp
sbb
cmp
mov
loope
cmp
jg
or
push
dec
fsubs
pop
sub
enter
movsl
xchg
adc
cmpl
jbe
push
mov
adcb
pop
and
mov
xchg
fidivrl
nop
lret
xchg
fiaddl
test
adc
push
jne
lret
clc
jmp
sarb
inc
imul
inc
loope
repnz
fstpl
push
sahf
xor
push
fnstcw
push
les
bound
and
pop
loopne
xchg
insl
jae
rcrl
fdiv
fcmovnbe
add
imul
xchg
sbb
insb
cli
adc
cs
mov
inc
arpl
jg
loop
cmpsb
insb
repnz
dec
xchg
cmc
adc
and
fldenv
or
ds
popa
mov
aaa
rclb
mov
xchg
add
xchg
out
dec
sti
jle
ja
jbe
sbb
mov
imul
jge
pusha
loope
outsl
add
lods
inc
push
and
cmpsb
push
and
lock
dec
sbb
stos
stos
push
and
subl
pop
lea
push
push
es
add
or
outsl
jo
pop
or
enter
out
xchg
mov
xchg
sub
scas
mov
fdivl
daa
cltd
hlt
sbb
pushf
mov
imul
pusha
sub
cwtl
sbb
push
or
sbb
mov
pop
xor
mov
fnsave
and
push
add
ds
ret
pop
inc
jge
dec
cmc
inc
adc
inc
inc
popa
pop
sti
jmp
int3
sti
rcrb
sti
push
jecxz
or
jecxz
clc
lcall
cmp
sbb
insl
push
mov
clc
xor
jge
push
push
mov
sub
fsubs
lds
xor
arpl
adcl
cwtl
roll
nop
inc
fidivrs
push
test
sarb
cmp
push
pop
sbb
or
mov
call
dec
hlt
push
xchg
pop
pop
shlb
pop
sub
push
push
repnz
xor
scas
stos
xchg
or
dec
add
movsl
jg
jl
movb
cmp
mov
mov
cltd
mov
sub
nop
clc
out
test
hlt
mov
push
stc
mov
xlat
mov
mov
pop
xchg
ss
cwtl
dec
fstps
ss
sub
and
shl
or
mov
xchg
lahf
fsubp
cmp
jle
add
add
adc
ret
xchg
jo
test
jno
data16
out
roll
popa
aad
push
addr16
xlat
ret
out
push
sarb
in
cmpb
lcall
int3
lds
adc
jae
sbb
ret
cmpsl
fs
mov
and
dec
sbb
mov
int
fsubs
fwait
outsb
pop
push
pusha
push
sbb
adc
repz
push
or
jno
test
and
jecxz
inc
xchg
xor
jae
jno
addr16
sbb
push
imul
push
mov
and
gs
push
mov
jno
or
or
std
nop
jns
shll
mov
mov
pop
std
fs
nop
xchg
xchg
out
test
jae
push
outsl
movsb
sbb
arpl
push
mov
fistpll
out
xchg
and
sub
fs
push
xchg
insl
fldl
and
ja
mov
push
popa
mov
repz
or
mov
fisttps
out
out
mov
pop
pop
lcall
sub
push
repnz
lds
mov
xor
fsub
testl
call
or
movq
jle
fs
and
jp
dec
clc
push
xchg
sub
mov
sarl
pop
cmp
fldenv
mov
int
pop
jns
mov
push
sub
jae
test
mov
icebp
mov
addr16
pop
pop
out
xor
out
cmc
and
cmpl
int
call
sbb
es
and
out
push
cmp
mov
mov
mov
sub
mov
test
int3
js
add
int
pop
ljmp
cwtl
mov
hlt
out
in
aam
fbstp
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
hlt
out
in
aam
fbstp
and
adc
add
je
fs
dec
inc
pop
mov
movsb
mov
xchg
test
aam
fbstp
and
adc
add
je
fs
inc
inc
mov
xchg
imul
dec
les
xor
and
mov
pop
in
pop
stos
aaa
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
movsl
push
xchg
test
inc
ja
sub
xchg
and
movsb
jne
movb
out
push
movsl
push
xchg
test
cmc
push
in
aad
lds
xchg
and
cmpsb
jne
push
push
push
testb
bsf
lea
popf
aas
in
dec
std
pop
int
lds
push
mov
jne
or
fcoml
lret
inc
rep
cmpsb
mov
add
pushf
mov
lock
fs
lea
je
xor
pop
inc
in
mov
in
push
cld
push
out
mov
or
jmp
push
jne
push
idivb
andl
popa
inc
pop
add
inc
sub
cltd
push
or
mov
mov
pop
mov
xchg
les
and
pop
mov
inc
mov
cs
sbb
gs
or
mov
xor
repz
cmpsb
lea
push
sbb
inc
out
ss
or
es
int
lret
xchg
push
test
mov
or
jl
mov
cmp
push
cmc
inc
aad
fdivrl
mov
mov
dec
testb
jae
push
lock
icebp
daa
xchg
subl
sbb
or
jecxz
leave
jne
add
fisubrl
push
cli
inc
cmc
and
adc
out
ret
jne
push
test
rclb
arpl
push
in
push
mov
jbe
xor
xchg
gs
push
testb
push
movsl
push
xchg
test
cmc
push
in
aad
lds
xchg
and
cmpsb
jne
gs
push
testb
push
mov
cltd
imul
adc
gs
stc
cmp
stos
mov
adc
es
and
add
roll
pop
push
icebp
xchg
or
rolb
stos
cmp
inc
pusha
call
pushf
xchg
inc
pop
outsl
push
cmp
mov
xchg
into
pop
cmpsl
mov
repnz
xchg
jae
cmp
xor
add
mov
popa
mov
mov
pop
and
enterw
mov
dec
push
sbb
cmp
ja
stc
mov
ljmp
lcall
ja
or
out
pop
mov
and
repnz
jne
sahf
pop
mov
adc
xchg
mov
les
getsec
insl
stc
aam
testl
mov
xor
pop
stos
test
and
mov
repz
mov
xor
stc
fs
mov
mov
cmp
sbb
ds
mov
movsb
into
xor
call
push
dec
push
mov
cmpb
add
sbb
sub
add
push
ds
inc
cmp
lea
cmp
cmp
loop
scas
push
inc
js
mov
cmpsb
adc
push
jbe
sbb
cltd
jne
js
repnz
aam
xchg
jecxz
aad
fadds
daa
fbld
mov
sub
fidivs
pop
mov
sub
sbb
ljmp
loope
sti
in
insl
ret
popf
pop
fs
mov
cmp
stos
inc
es
sbb
aas
test
in
test
ja
add
adc
mov
flds
cmpsl
hlt
dec
aam
in
jl
addr16
test
sub
pop
cltd
dec
test
pop
xor
testl
daa
xor
dec
cmp
mov
stc
push
sbb
mov
rclb
push
ds
add
xchg
cmp
push
shld
icebp
ja
cs
xor
pop
jnp
add
xor
jle
mov
push
dec
push
push
movsb
xorb
xchg
mov
inc
test
insb
jg
mov
jb
mov
lcall
mov
mov
fnstcw
jo
loopne
nop
and
mov
adc
sub
mov
inc
push
hlt
loop
lcall
aaa
jle
sti
push
stos
push
orb
lcall
jb
xchg
xchg
stos
pop
cmp
sbb
ret
adc
sti
movsb
dec
or
mov
or
dec
mov
lock
shlb
xchg
dec
mov
loopne
jbe
aad
cmp
ljmp
or
push
dec
aaa
sbb
hlt
out
xchg
sub
rcrl
fwait
mov
cmpb
sbb
jle
pop
jbe
je
sub
repz
lret
mov
sbb
cld
int
mov
les
notb
dec
insl
xchg
jecxz
outsb
shll
inc
adc
das
call
aam
cli
push
dec
dec
sub
jne
pop
gs
adc
call
push
jmp
arpl
sub
fs
cmpsb
push
pop
mov
das
sub
jp
mov
int
jne
sbb
or
out
clc
xlat
movsl
pusha
scas
pop
mov
mov
jno
arpl
lods
or
dec
dec
in
cmp
jp
jno
dec
cmpb
mov
bound
jo
inc
aad
cmpsl
in
imulb
mov
mov
movsl
cmpsl
sti
jne
insb
clc
and
jp
ja
ja
pusha
sti
shrb
inc
push
jl
xchg
mov
xor
ds
scas
and
inc
icebp
sahf
enter
outsb
pop
adc
stc
mov
jcxz
adcb
cmp
insb
fsts
pop
jmp
inc
xor
mov
jge
fwait
push
add
stos
or
mov
push
aad
popf
sbb
mov
push
pop
jnp
mov
pushf
scas
add
mov
enter
cltd
imul
fdivl
fisubrs
arpl
xchg
cli
mov
or
pusha
lock
cmp
add
mov
sub
out
push
orb
and
scas
push
xchg
test
inc
adc
push
pop
rcrl
punpcklbw
cltd
and
jecxz
dec
add
dec
lods
and
loop
aas
cmp
and
jns
adc
popf
repnz
movsl
in
add
push
jne
inc
mov
out
inc
fcmovbe
mov
xchg
inc
in
fstps
jbe
push
popa
pop
push
pop
je
aam
add
cmp
inc
lret
adc
aad
fadd
pop
mov
mov
and
pop
mov
adcb
aad
pop
push
mov
cmpsb
rorb
lock
jns
adc
adc
jnp
leave
xor
bound
int3
lcall
push
leave
fdivrl
jbe
std
push
outsb
outsl
xor
push
cli
fwait
jle
movsb
mov
or
dec
fcomip
xchg
xchg
mov
iret
lods
aad
mov
frstor
dec
inc
std
cmp
cltd
pop
sbb
dec
xchg
inc
push
out
sti
sub
ret
das
lods
mov
inc
pop
stos
sbb
mov
xchg
mov
pop
aad
imul
dec
xor
cmpsl
push
out
mov
mov
mov
cmc
inc
adc
fistpll
cs
stos
xor
repnz
repz
stc
aam
cmpb
ret
add
dec
mov
test
pushf
mov
jmp
jbe
fdivrs
pusha
insl
lahf
jnp
stos
dec
icebp
or
xor
mov
xchg
lcall
inc
outsb
ljmp
jge
push
push
arpl
lods
pop
mov
push
mov
adc
adc
lds
je
lods
inc
inc
adc
cmpsl
pop
jno
in
jns
out
lcall
mov
adcb
sub
push
lods
inc
leave
or
pop
mov
es
pop
push
mov
es
xor
mov
test
mov
add
mov
adc
sbb
jecxz
mov
addr16
adc
test
es
cli
xchg
sti
mov
jne
push
pop
ja
mov
ds
aas
js
pusha
adc
sarb
xor
and
test
imul
std
pop
movsb
pop
enter
scas
out
les
xchg
cmp
sahf
pop
xlat
aad
xor
sbb
mov
rolb
mov
jnp
push
fsubrl
daa
movsb
cltd
cmc
cmp
push
add
pop
cmpl
push
test
sbb
jle
push
and
das
mov
xor
pusha
mov
pop
xor
stos
sahf
xorl
lahf
jmp
sub
sub
jo
inc
push
or
add
cmp
mov
push
sub
insb
cs
std
push
test
out
jge
subl
mov
dec
mov
insl
cmp
ja
imul
mov
std
cmp
mov
jns
or
les
outsb
pushf
mov
xor
mov
mov
jno
jae
add
fisttpl
mov
scas
jo
or
aad
mov
pop
cwtl
mov
aam
loopne
jle
pop
jno
int
sbb
push
sbb
add
push
mov
add
mov
dec
roll
or
popa
out
sbb
jmp
popf
jbe
mov
add
std
out
inc
xor
and
stc
push
sub
imul
or
test
cmp
subl
cmp
dec
cmp
loopne
je
rolb
mov
mov
cmpsl
pop
jb
sbb
js
xor
xchg
in
aaa
push
lret
mov
jecxz
add
pop
flds
test
enter
xor
movsl
stos
sub
inc
aad
outsb
dec
in
test
xchg
insl
pop
popa
push
out
adc
mov
popf
add
mov
xchg
jo
cmc
mov
aam
lret
popf
pop
sub
push
inc
or
leave
fdivs
lcall
lahf
icebp
rolb
mov
dec
xchg
mov
push
pop
mov
inc
dec
sti
arpl
repz
sti
ficoms
scas
mov
add
stos
je
bound
mov
xchg
xor
mov
pop
dec
or
dec
cld
jl
fdivrs
mov
jp
pushf
or
in
ret
scas
pop
and
cli
cmp
mov
xchg
add
jb
icebp
test
lods
push
mov
xchg
stos
aad
jns
push
adc
pushw
filds
and
mov
pop
sub
dec
pop
out
sbb
push
sbb
dec
xchg
popa
dec
pop
das
movsl
adc
notb
pop
lods
push
mov
sub
jbe
jbe
mov
idivl
sub
into
push
sub
xor
inc
xor
roll
add
jg
adc
inc
push
xchg
inc
jl
ffreep
sbb
mov
loop
sub
mov
pusha
pop
pop
pop
jb
lcall
add
push
xchg
leave
push
pop
xchg
pusha
mov
push
je
pop
jae
fdivrl
rcrb
call
inc
xchg
dec
adc
add
mov
mov
cmp
push
daa
add
test
adc
pop
dec
mov
out
sub
mov
loope
scas
and
jle
push
js
cmp
xchg
sub
adc
mov
mov
aam
ljmp
mov
in
xchg
mov
cmp
sub
fwait
mov
fsubr
add
addr16
pop
das
cmp
repz
fidivs
dec
popf
push
movsb
xchg
or
pop
outsl
test
shrb
iret
outsl
push
psubusb
xchg
ja
jbe
push
imul
ljmp
jmp
mov
xchg
push
sbb
scas
fdiv
test
jmp
sahf
test
dec
nop
ss
in
hlt
cs
push
jg
inc
pop
sti
fidivrl
mov
jmp
xor
insl
fists
xchg
rol
dec
dec
dec
out
fldcw
pop
inc
loope
fs
and
ret
lods
pop
out
mov
inc
xchg
clc
xchg
sbb
inc
sbb
jle
repz
and
das
jge
movsb
nop
clc
and
inc
leave
jg
arpl
jno
lds
rolb
or
dec
or
pop
push
cmpb
cs
mov
mov
dec
or
pop
pusha
hlt
out
inc
mov
xor
imul
outsl
jns
popl
and
out
dec
pusha
jecxz
push
shlb
pop
fs
adc
iret
arpl
nop
mov
push
enter
loope
loope
or
lods
sub
call
leave
jecxz
hlt
imull
sbb
stos
and
fidivrs
jmp
sub
mov
xchg
fsubl
lods
push
push
in
adc
pop
jg
and
fisttpl
ret
cli
mov
insb
call
dec
aas
jbe
sbb
lock
mov
push
notb
sub
xchg
lea
pop
inc
add
pop
mov
dec
and
mov
into
jns
xor
dec
test
loopne
cli
mov
pusha
cltd
inc
inc
mov
movsl
fwait
push
push
outsl
sub
fsubp
push
inc
das
inc
icebp
xchg
adc
ja
jecxz
jmp
fbstp
aas
mov
fs
jno
orb
mov
jbe,pn
or
addr16
lret
mov
dec
fsubrs
pop
int3
inc
outsb
ja
pop
cmp
iret
cld
es
mov
and
mov
mov
pop
jo
ja
sbb
pop
mov
fld
ja
mov
jae
inc
sub
jae
mov
mov
inc
mov
loopne
or
sub
das
sti
adc
in
lea
pop
fisttpl
mov
loop
fucomip
fwait
jo
mov
jle
mov
out
clc
loope
cmp
push
lret
arpl
pop
xchg
adc
aad
mov
xor
cli
or
js
jg
mov
ret
and
xchg
adcl
loope
cmp
je
pop
jo
inc
scas
jb
inc
xlat
sbb
xrelease
outsb
out
leave
jbe
jno
inc
push
popa
cmpsl
stc
mov
sub
adc
jae
testb
sub
push
push
rorl
add
mov
in
mov
mov
sbb
rorb
gs
test
pop
pop
fcoms
fbstp
lret
inc
loopne
lcall
fs
mov
decb
scas
pusha
mov
rcrl
push
push
sbb
addr16
aas
and
push
cmp
jl
inc
into
ss
xor
lock
fidivs
dec
push
mov
or
jp
dec
dec
inc
or
push
sbb
iret
pop
insb
cmp
popf
xchg
aaa
pop
sarl
mov
or
xchg
leave
mov
mov
inc
lock
jo
test
lods
mov
int3
aaa
jo
mov
inc
add
gs
fsubr
lret
jbe
push
dec
movsb
xchg
scas
mov
cmc
add
ds
insb
dec
inc
sbb
out
sti
xchg
xor
mov
cs
insl
sub
orl
movsb
js
rcr
stmxcsr
lea
or
lods
mov
pop
int3
sub
test
sub
cmp
jg
test
add
repz
in
fdivr
mov
pop
cmp
xchg
cmpsl
ljmp
fsts
xor
sbb
mov
je
movsb
cmp
int3
mov
jbe
and
in
mov
xor
sbb
out
sahf
add
sub
adc
out
scas
xor
pop
sbb
xchg
cld
lret
mov
jecxz
outsb
mov
or
adc
andb
jno
lea
loop
or
imul
les
and
int3
test
fdivrp
call
sti
push
xchg
fwait
loope
hlt
jge
leave
ret
imul
repnz
mov
jbe
sub
sbb
mov
in
pop
xorl
sub
out
sbb
pop
out
xor
pop
push
pop
xor
xchg
xchg
mov
mov
in
test
pusha
mov
test
mov
data16
xchg
mov
orb
adc
call
jbe
ss
orb
daa
lds
cmp
leave
xchg
add
je
dec
or
stos
cld
mov
cmp
and
movsl
daa
inc
cmpsb
inc
or
jmp
cli
sub
jge
and
data16
stc
jle
sub
mov
stos
hlt
cmp
out
add
rol
mov
pusha
or
int3
repz
sub
mov
icebp
outsb
add
jbe
scas
xor
je
iret
lods
cmp
sub
aad
xchg
daa
push
pop
rol
or
popa
shl
bound
jmp
je
inc
call
lea
dec
scas
xlat
sub
ljmp
clc
mov
cli
jl
sub
outsl
mov
mov
sub
cmc
cmp
mov
nop
add
push
cmp
fnstcw
outsb
ss
mov
lods
push
add
pop
pop
jnp
xchg
iret
inc
xchg
aaa
outsl
xor
and
ljmp
test
repz
cltd
or
xlat
push
cmpsb
inc
lods
or
xor
and
jge
pop
pushf
mov
insb
mov
sarb
push
lea
aam
jl
and
bound
adc
and
out
xchg
jge
mov
rorl
xchg
or
mov
xchg
push
lods
clc
cmp
es
mov
add
sub
rcl
xor
aaa
fidivl
sub
xchg
adc
movl
sub
loop
daa
pop
mull
pop
nop
pop
cmp
or
adc
lret
iret
jmp
jne
cmp
push
fisttpl
push
xor
jne
push
xlat
es
jb
or
mov
and
and
mov
mov
sub
leave
movsl
or
mov
sahf
dec
pop
test
pop
sbb
pop
xorl
rol
das
es
aad
mov
cmpsb
jg
insb
leave
inc
movsl
stc
xor
xor
addl
lret
repnz
sbb
data16
insb
add
cmpsl
mov
jb
adc
mov
ffreep
inc
jl
mov
sub
mov
into
lock
inc
or
mov
lods
mov
mov
push
push
orl
popf
pusha
lods
mov
sti
pop
pop
cmpsb
add
mov
mov
push
pop
test
les
sbbl
andb
cli
aam
popa
repnz
pusha
jmp
jno
roll
loopne
fadds
fadds
stos
cmp
ljmp
sbb
xchg
xchg
push
out
test
in
push
dec
mov
in
sti
dec
jnp
imul
jge
push
in
daa
mov
jae
cmpb
adc
jno
inc
in
pop
stc
lea
shrl
fcompl
imul
push
adc
add
loope
daa
mov
daa
lahf
pop
in
call
iret
dec
cmp
push
js
pop
mov
fcmovnbe
aad
outsl
mov
std
mov
out
shll
jl
pop
push
push
adc
xchg
fsts
mov
cmp
adcb
in
jns
mov
cld
cwtl
test
and
daa
sarb
xchg
adc
outsb
ja
dec
add
dec
sub
daa
outsl
lods
pop
std
pop
ret
in
es
out
scas
push
jne
mov
mov
cwtl
pop
mov
adc
inc
stc
sbb
mov
nop
clc
lahf
movl
aaa
jl
jb
mov
rcrb
inc
push
inc
enter
repnz
dec
and
push
add
jb
shlb
stos
xor
outsb
push
les
lods
int
das
dec
jle
out
mov
xchg
sbb
inc
push
adc
xor
push
repnz
lahf
jne
fsubs
in
xchg
int
add
scas
mov
fsubl
pcmpgtw
popf
dec
nop
add
adc
leave
add
ret
int
inc
negl
and
mov
dec
scas
sub
adc
jno
aaa
lret
cmp
mov
sbb
je
mov
jbe
add
sbb
imul
repnz
mov
loop
stc
pop
lods
in
or
jnp
dec
jle
pop
and
cwtl
push
or
adc
stos
nop
movlhps
test
pop
xor
jecxz
or
rclb
movsl
add
sbb
cmc
test
jo
in
enter
js
out
mov
fisubrs
pop
call
or
notb
pushf
inc
rol
mov
pusha
arpl
push
jge
dec
pop
add
and
test
dec
ret
icebp
aam
fwait
dec
push
insb
adc
movb
xor
aaa
lods
pop
iret
sbb
xchg
mov
sbb
xchg
jo
pusha
dec
push
inc
pop
push
aad
inc
into
mov
xchg
sub
aam
cltd
mov
adc
add
fptan
sbb
sbb
pop
stos
push
aaa
into
cmp
cmc
push
xor
cwtl
lods
aas
aad
nop
outsl
fs
dec
flds
inc
push
push
imul
and
dec
sbb
jg
rcr
adc
cwtl
ret
shr
mov
iret
or
sub
hlt
mov
int3
lea
test
std
pop
jmp
add
or
dec
mov
sub
ss
sub
sbb
or
jns
jge
dec
daa
lea
adc
icebp
lret
inc
xor
nop
dec
mov
mov
iret
dec
and
xchg
jge
je
jg
je
dec
push
xchg
dec
and
xchg
jge
lds
mov
mov
in
xchg
xor
add
mov
addr16
pop
inc
daa
in
fcomps
inc
adc
shlb
shll
stos
and
in
xor
dec
sub
push
sbb
jae
imul
pop
dec
adc
jmp
pop
sbb
push
fdivrs
jb
adc
daa
jmp
sub
lods
mov
and
movsl
pusha
inc
xor
mov
pop
in
jnp
inc
push
je
cmpsl
mov
or
ds
call
sbb
lds
daa
jo
cmp
shr
sti
nop
push
jp
inc
inc
add
or
sbb
out
push
dec
mov
fldl
xchg
jbe
mov
pop
adc
decb
push
mov
adc
xor
jmp
leave
push
ss
lahf
icebp
push
cmp
jecxz
insl
push
dec
ror
loopne
loope
sbb
xchg
ret
pop
sbb
mov
mov
xchg
mov
arpl
mov
and
mov
andb
iret
mov
aam
xchg
testl
mov
pop
jl
and
mov
lahf
pusha
pop
insb
int3
popf
and
in
sub
xchg
jb
jae
jo
cmp
fstps
js
sbbb
out
push
xor
popa
popa
push
cli
lods
mov
push
mov
les
pop
cmp
lds
or
pushf
push
xchg
mov
inc
pop
fcomi
push
call
cmpsb
jle,pn
clc
fs
sub
xor
push
insb
sbb
test
lahf
lcall
fimull
dec
lahf
mov
ret
fadd
mov
xchg
jge
fdivs
in
loopne
aad
inc
jp
cltd
nop
push
dec
rolb
jno
lods
pop
insl
fxch
scas
out
cld
int3
dec
cmpxchg
or
push
lahf
flds
inc
aad
lds
xchg
and
cmpsb
jne
gs
push
testb
push
movsl
push
xchg
test
cmc
push
in
aad
lds
xchg
and
cmpsb
jne
gs
push
testb
push
movsl
push
xchg
test
cmc
push
in
aad
lds
xchg
and
cmpsl
jne
fs
push
testl
xchg
test
notl
inc
push
jbe
lretw
sub
mov
roll
pop
in
cmp
cltd
repz
mov
ret
cmpsl
out
imul
arpl
jae
inc
cmp
and
or
jns
imul
mov
mov
cmp
jmp
aaa
cmp
and
dec
add
imul
mov
mov
cmp
jmp
xor
sub
push
sub
stos
cltd
repz
mov
mov
or
cli
push
pop
mov
add
pop
and
push
test
push
mov
aaa
ss
gs
movsb
pop
imul
cltd
es
in
xchg
sbb
mov
push
mov
pop
mov
push
mov
push
mov
jge
sti
mov
into
jne
fisttpll
pop
sbb
xchg
dec
sbb
xchg
outsl
jmp
sbb
mov
mov
push
scas
xchg
xor
js
cmp
lret
jno
mov
jb
jl
sbb
sbb
mov
cmpsb
xor
mov
mov
mov
cmp
jmp
inc
cmp
and
dec
add
das
movsl
hlt
lcall
mov
mov
pushf
rcrb
and
inc
inc
xor
xor
inc
or
fadds
in
adcl
add
inc
inc
ss
adc
mov
xchg
std
stos
int
frstor
stc
xchg
jmp
inc
cmp
and
dec
add
imul
mov
mov
cmp
jmp
inc
cmp
and
dec
add
imul
dec
idivl
sbb
fistpll
scas
mov
shll
outsl
stos
ja
sbb
mov
jle
cmp
mov
rorb
cmc
lea
popf
rcrl
sti
dec
xor
push
xor
mov
or
push
xchg
xchg
mov
pop
inc
mov
nop
sub
jo
rcr
movsb
loopne
mov
int3
cmp
popa
push
cmpsl
out
push
sbb
adc
jmp
pop
xor
push
push
aaa
jmp
push
xchg
pop
sbb
mov
inc
mov
mov
nop
add
movsb
decb
sbb
cmp
cmp
inc
xchg
sub
and
push
cmp
sub
dec
dec
jmp
xor
mov
add
fstpl
mov
cs
sbb
aas
imul
movsl
mov
lea
dec
loope
xchg
xchg
inc
std
nop
and
mov
and
cmp
cmpsl
gs
mov
and
adc
and
xchg
scas
pop
std
mov
enter
insb
jg
adc
pop
jb
lret
jmp
jmp
shl
stos
in
mov
lahf
fs
gs
mov
add
ss
adc
adc
jmp
lds
mov
sbb
shrb
mov
or
jecxz
xchg
fs
sbb
nop
leave
test
adc
mov
movsl
xor
call
loope
stos
jbe
xor
cld
xrelease
jno
sti
push
ret
push
ret
mov
mov
mov
mov
mov
lods
cmp
dec
les
sbbl
lcall
xchg
sbb
cmp
lret
fstps
stos
mov
mov
inc
int
add
outsl
pop
aam
and
jno
mov
std
xchg
cmp
js
pop
cld
xchg
inc
and
rolb
loop
dec
in
test
mov
cmpsl
cmpsb
movsb
scas
das
mov
jo
xorl
inc
cmp
cmpb
lods
pop
pop
jmp
jge
imul
sub
sbb
and
repz
movsl
subb
push
movsl
std
fsubs
frstor
fisubrs
mov
repnz
cmpsl
mov
lahf
mov
cmp
enter
out
mov
data16
divb
lret
push
jb
mov
sub
or
stc
lret
fists
arpl
mov
push
push
mov
inc
lret
push
add
jns
pop
sbb
mov
mov
inc
xor
mov
jg
fdivrs
push
xchg
mov
jnp
cwtl
lods
inc
lcall
cltd
mov
add
pop
cmpb
inc
jl
pop
stos
xchg
xor
out
xor
mov
jns
adc
ljmp
fwait
jmp
sbb
les
adc
xor
es
sub
or
in
dec
rorb
mov
ja
add
mov
test
mov
enter
xor
push
mov
cwtl
and
lret
cmp
xor
inc
xor
out
lods
mov
andl
push
lea
mov
pushf
andb
mov
inc
push
into
pop
lret
js
sbb
jne
lret
dec
rclb
jmp
popa
mov
out
addr16
loop
test
aas
ficompl
pop
push
addr16
jge,pt
lahf
xchg
shl
jmp
xor
xchg
and
fwait
push
add
or
mov
jp
out
les
jbe
pop
lahf
mov
mov
dec
sub
sub
stc
repnz
lock
jp
test
and
stos
mov
jle
xchg
inc
loop
jle
test
test
imull
sbbb
std
mov
not
and
sub
adcb
lds
popf
jmp
div
jno
std
mov
cltd
out
cmp
mov
xchg
cmp
dec
rcr
out
shlb
inc
cmp
pop
iret
cmpsb
fwait
mov
jle
sbb
pop
lcall
inc
int
sbb
in
or
and
mov
bound
push
pop
or
mov
jne
xor
les
mov
dec
lea
js
xor
pop
push
jg
jg
xchg
xchg
shl
jmp
lds
sbb
xchg
lret
sbb
rorl
or
shll
push
fwait
in
mov
xchg
in
push
mov
je
mov
lcall
lock
push
push
xlat
and
lea
mov
xor
sbb
daa
cmpl
push
jp
dec
es
std
mov
sbb
cmp
in
adcl
ficompl
icebp
arpl
and
sub
cwtl
pop
cli
scas
out
cmpsl
sub
fists
int
fcomp
ja
bound
shl
loop
xchg
push
addr16
cmp
and
aad
popa
xor
iret
arpl
jne
divl
mov
jno,pn
in
icebp
testl
mov
cli
pop
jne
adc
jl
js
mov
pop
inc
xchg
jo
dec
mov
push
push
test
sub
mov
cmpl
dec
sub
lret
lahf
mov
sub
shll
out
int3
push
enter
daa
pop
lret
fstl
mov
scas
or
lds
or
jo
push
shr
mov
insl
mov
adc
pop
out
cmp
xor
bound
jb
pop
xor
jbe
pop
mov
jge
pop
jbe
jo
xchg
add
sub
scas
push
addr16
dec
push
gs
jmp
cmp
dec
imul
adcl
sub
cmp
jb
idivl
ds
cmpsl
aam
loop
fwait
movsl
divl
inc
test
inc
not
xor
popa
adc
std
movsb
jl
push
inc
in
cmc
testb
aam
sub
fcoml
dec
jl
testl
sbb
lret
sub
add
jb
dec
add
testb
leave
fs
push
jb
or
movsl
je
jp
stos
push
stos
inc
cltd
pop
pop
adc
test
mov
mov
test
dec
out
inc
lcall
jp
or
clc
jne
xor
jle
fwait
dec
out
lock
pop
xchg
add
cmp
movsl
fwait
lods
xor
iret
jp
jbe
adc
lods
inc
sub
jbe
ss
push
xor
xor
and
fisubrl
loopne
aas
jne
sarb
jp
jno
fcomip
aad
cmp
xchg
lahf
xor
sbb
pop
popa
repnz
in
clc
lret
add
test
movsl
mov
je
cwtl
mov
bound
sub
xchg
dec
push
pop
mov
or
fdivl
or
mov
push
lods
insb
fldt
xchg
test
int3
add
into
jno
xchg
mov
mov
stc
bound
inc
test
loop
jne
fcmove
fisubrl
cmpsb
xchg
mov
or
enter
pop
in
sar
ds
cmp
mov
sub
mov
iret
cwtl
jnp
inc
adc
rcll
jecxz
mov
cld
sub
cltd
insl
int
fdiv
sbb
cmp
leave
xor
pop
not
and
imul
shll
aam
jecxz
inc
test
sub
lods
lahf
inc
and
or
or
sub
fdivr
push
cmp
cwtl
gs
jns
sahf
into
outsl
xlat
hlt
mov
or
roll
daa
movb
pop
fisttpl
outsl
pop
add
sbb
push
adc
push
jp
mov
sub
movups
stos
jb
push
fsubl
cmp
jns
mov
pop
adc
sti
test
or
sub
mov
mov
fwait
decb
pop
pop
sub
into
or
outsl
dec
hlt
aaa
int3
lret
sbb
inc
or
fldcw
push
push
subb
adc
mov
mov
mov
xchg
mov
out
hlt
stos
arpl
stc
pop
out
fadd
mov
insl
add
pop
ljmp
ss
push
pop
adc
pop
inc
jmp
adc
in
outsl
dec
cmpsb
stos
xorb
fistpl
jb
popa
fsub
sbb
add
ljmp
sbb
jbe
or
or
bswap
lods
aas
cwtl
movsb
hlt
ds
jno
mov
mov
xchg
xor
jne
imul
xchg
pop
in
shll
lea
xchg
in
mov
fcoml
or
rcr
std
add
mov
xchg
dec
fwait
mov
lock
pushf
lahf
jge
mov
mov
ja
mov
fstpl
jno
mov
aam
loopne
fs
xchg
addr16
mov
sbb
sub
aaa
cs
jb
jl
pop
xorb
sub
jg
jne
mov
push
sbb
pop
fmul
jle
mov
bound
pop
pop
mov
addr16
sti
pcmpgtw
ds
add
jp
test
mov
jmp
sbb
fdivl
arpl
dec
ds
dec
push
in
mov
leave
outsl
mov
push
inc
jno
add
ljmp
push
add
cmp
arpl
push
pop
call
sbb
pusha
std
outsl
push
divl
or
xor
daa
fwait
sbb
leave
cmp
or
fsubrs
jl
jecxz
pop
and
int3
les
das
sahf
in
js
dec
js
pop
and
mov
sti
fnstsw
in
dec
rolb
sub
xorb
enter
outsl
inc
jle
push
sub
mov
adc
daa
in
xchg
dec
or
mov
stc
aaa
sbb
insl
add
fiadds
inc
sahf
mov
lock
push
std
outsl
das
mov
jne
ss
aam
sub
ja
mov
adc
xor
inc
jno
shrl
cmpsl
pop
pushl
jecxz
mov
rclb
add
je
adc
or
and
repnz
cwtl
inc
jmp
mov
out
xor
push
dec
out
mov
orb
push
pop
out
int3
iret
or
mov
pop
pushf
pusha
xor
xchg
bound
repnz
icebp
add
push
insb
mov
cmp
shll
mov
mov
add
mov
out
es
jno
inc
out
ljmp
add
mov
adc
jmp
arpl
mov
gs
sbb
xor
subl
scas
add
rolb
pop
adc
clc
outsb
xchg
fscale
dec
adc
pop
mov
call
add
sub
icebp
mov
mov
mov
push
pop
sub
cmpsb
fs
adc
pusha
mov
xchg
nop
adc
int
add
test
shrl
sub
aad
sti
sbb
cmp
sub
mov
int
mov
or
cwtl
testl
test
imul
xor
mov
jb
push
sahf
lahf
add
add
add
and
cmc
subl
sbb
aaa
lea
adc
dec
popa
jge
or
pop
xchg
lret
lods
arpl
xchg
cmpsl
cmp
mov
adc
and
rcll
enter
sub
push
cmc
pop
sahf
stos
scas
xchg
pop
arpl
push
add
xchg
mov
mov
jp
int
hlt
add
mov
fldl2t
xor
sbb
xchg
mov
and
into
cmpsl
std
loopne
xchg
dec
mov
repnz
daa
xor
ret
aam
les
xor
and
push
lods
dec
scas
lea
adcl
add
cmp
mov
push
jb
sbb
add
lcall
daa
andb
sub
sub
repz
sti
xchg
daa
or
fistpl
mov
in
and
cmp
imul
stos
jg
pop
imul
xchg
ds
jecxz
inc
and
bound
mov
leave
push
xor
out
jg
push
insb
xchg
xor
xor
jae
jne
hlt
push
rcrl
dec
fdivrs
push
sbb
popf
or
sub
shll
jns
into
mov
cwtl
clc
inc
inc
rolb
inc
xor
imulb
adc
call
mov
mov
imul
cmp
outsb
fwait
push
pop
add
jae
mov
mov
mov
popf
bnd
bound
insl
cmc
je
xchg
fisttpl
sbb
mov
xchg
jecxz
xchg
mov
push
icebp
jecxz
mov
xor
mov
cmc
out
fsubl
in
jge
fwait
mov
jecxz
bound
out
leave
push
adc
or
test
fisubs
cwtl
enter
fs
push
les
xchg
cmpsl
outsl
cmpsl
ljmp
add
push
bound
dec
lds
gs
std
jae
lods
std
icebp
inc
mov
int
sti
test
mov
pop
push
mov
add
inc
sub
es
ljmp
add
popa
aad
cmpl
int3
push
xchg
inc
ja
icebp
jge
fwait
push
aad
jno
ja
in
int
pop
in
pop
jno
and
repz
or
rcr
out
mov
stos
movsb
jae
movsl
out
jne
rorl
ss
sar
sbb
mov
in
arpl
dec
cmpsl
jo
sub
dec
mov
pushf
inc
sbb
fbstp
sbb
stos
push
xor
xchg
shlb
inc
popf
xchg
adc
or
popa
leave
sub
inc
movsb
mov
xchg
int
lods
cld
sbb
mov
cmp
xchg
cmpsl
sbb
sbb
enter
negb
cwtl
inc
stos
fnsave
ret
testb
or
add
loopne
push
or
inc
dec
sarl
cmp
jb
outsl
cmp
push
and
pop
mov
leave
sbb
push
shr
cmp
mov
out
dec
sbb
sub
pop
fwait
add
pop
je
incb
imul
cmpsl
xor
mov
xchg
sub
xchg
ror
adc
sub
test
sbb
ja
xchg
xor
scas
clc
adc
stos
push
insl
fs
fistl
xchg
sarl
xchg
and
test
in
mov
xor
or
cmp
clc
iret
mov
dec
adc
adc
das
sub
xchg
mov
xor
add
daa
jecxz
sbb
test
pop
and
jns
pop
jecxz
adc
ljmp
scas
pop
inc
roll
jne
push
jg
outsl
mov
ja
out
shll
loope
fwait
jecxz
fdivr
cli
js
enter
nop
dec
lahf
mov
sbb
call
xchg
out
fnstcw
shlb
ret
xchg
and
mov
adc
fbstp
ss
out
push
cltd
xor
jnp
xor
xor
push
cli
fidivrs
hlt
inc
jecxz
cmp
pop
push
in
jmp
jge
dec
xchg
mov
lcall
push
cwtl
in
idivl
cltd
inc
sbb
sub
insl
ja
out
sub
faddp
xor
pop
mov
jae
icebp
lahf
mov
sbb
cld
mov
les
fs
pop
or
xchg
into
sbb
cli
push
jae
xchg
sbb
out
add
push
sbb
add
mov
mov
jle
push
jb
nop
pop
shrl
push
data16
pop
sub
lods
add
or
sub
sub
repnz
imul
stc
sub
scas
gs
xor
movl
xchg
lock
loope
dec
fmulp
insl
sbb
xchg
daa
loop
icebp
push
dec
cmp
lret
movsb
orl
daa
movsl
in
enter
int3
xor
fs
cmp
sub
dec
les
sbb
fwait
insl
test
gs
jo
les
mov
or
pop
fildll
jecxz
iret
movsb
and
adc
mov
loope
push
lret
sub
das
mov
stc
cmpsb
hlt
pusha
bswap
mov
add
dec
in
cmp
ffreep
shl
aad
in
push
inc
pop
scas
ljmp
mov
push
sub
xor
cmp
jns
cmpsl
imul
insl
cwtl
xchg
psubb
adc
in
adc
cld
lahf
inc
jnp
cmpsl
mov
jmp
mov
jb
mov
lahf
dec
lds
mov
pushf
sub
add
cmpsb
sub
sub
mov
mov
js
pop
xor
leave
aas
inc
out
in
inc
icebp
sub
inc
cmp
push
ss
pop
xchg
xchg
and
sahf
addr16
mov
movsb
fdivrp
insb
test
add
movsb
jno
jecxz
fcompl
scas
adc
add
test
mov
fstpt
or
lret
add
insb
push
fwait
pop
mov
lods
xchg
jg
adc
cli
add
and
aad
add
test
movsb
pushf
ja
paddd
arpl
add
test
ds
dec
xor
stos
jge
xchg
xor
and
pop
andl
std
jle
movsl
xor
pop
lea
sbb
mov
jbe
jecxz
pop
loopne
pop
lret
enter
pushf
push
int
cmp
fstl
popa
dec
cmpl
iret
imul
sbb
outsb
stos
jbe
loopne
es
xlat
ffreep
cmp
fwait
loop
fldt
jg
leave
daa
sti
rcll
push
pusha
fbld
push
jge
or
enter
add
jecxz
mov
inc
cwtl
inc
in
sbb
hlt
sub
pop
frstor
xchg
dec
sub
lock
adc
sbb
dec
and
xor
jbe
cwtl
xchg
repnz
cmp
or
or
cmp
xchg
cmp
pop
sbb
mov
lock
bnd
mov
aaa
push
push
rorb
mov
mov
cwtl
cmpb
add
test
jnp
dec
rep
pop
push
sbb
add
push
jl
incl
lret
add
mov
cmpb
xchg
xlat
addl
scas
sbb
out
lds
outsl
and
jnp
les
les
adc
sbb
fimuls
pop
das
icebp
jecxz
outsl
adc
sahf
push
add
mov
jbe
mov
pop
das
pop
mov
xlat
sub
adc
push
mov
dec
ljmp
data16
ficompl
push
in
mov
and
aas
shlb
fs
cmp
in
pop
std
lcall
jb
je
xchg
outsb
cmc
aaa
adc
notb
test
pop
addr16
lods
int
sub
dec
mov
stc
push
sbb
ret
jno
push
pushf
fdivrl
pop
pop
mov
test
jle
add
cld
das
dec
pop
push
xchg
outsb
sbb
inc
pop
lahf
lock
faddl
mov
daa
pop
and
dec
mov
sarl
push
cs
scas
inc
mov
xchg
xor
fs
push
pop
jne
pop
sub
mov
cmp
or
push
push
cltd
shr
add
enter
xchg
test
int
xor
or
loope
xchg
out
loope
pop
and
jmp
fs
pop
mov
dec
mov
lcall
cmp
xchg
jo
pop
cmpsb
addl
sub
or
ds
scas
into
les
mov
dec
cmp
pop
jbe
std
gs
lds
xchg
pop
jge
jb
sbb
cld
cmp
ds
adc
xor
aam
jp
dec
cmc
sub
aaa
stos
jne
stos
add
mov
cmpsl
ror
pop
fisubrl
push
pop
test
cmp
dec
daa
sarl
leave
push
dec
mov
nop
fs
cmp
mov
repnz
jns
jl
jno
sti
cmp
bound
lret
sub
rcr
sub
into
std
sbb
imul
sub
jns
cltd
inc
arpl
rcll
mov
arpl
jns
int3
leave
push
out
scas
out
pop
add
testb
sarb
inc
sub
cmc
add
dec
or
cwtl
imul
ret
imul
outsb
xor
aas
pop
int3
push
insb
enter
mov
xor
xor
mov
pop
in
loopne
fsubrs
pushf
pushf
mov
mov
rcll
mov
mov
icebp
push
test
push
lds
loopne
xor
outsl
nop
dec
cmpb
mov
outsl
jo
pop
xorl
test
jl
mov
mov
stos
out
ret
mov
dec
sti
push
or
ja
repz
arpl
aam
jmp
or
addr16
ret
faddl
cwtl
push
mov
movsl
xor
jbe
enter
jecxz
notl
jne
add
xor
test
xchg
mov
mov
dec
mov
shl
fists
inc
repz
xor
dec
add
rcll
popa
in
mov
and
add
push
hlt
daa
js
in
xlat
xlat
push
mov
pop
ficoml
insb
in
arpl
sbb
push
add
or
scas
mov
push
into
ss
clc
push
test
movsl
mov
fnstenv
jmp
inc
cmp
and
dec
add
imul
mov
mov
cmp
jmp
inc
cmp
and
dec
add
imul
mov
mov
cmp
jmp
inc
cmp
and
dec
add
imul
mov
mov
cmpl
arpl
jae
jmp
sarl
xchg
shl
ret
ret
loop
xchg
lret
lock
arpl
push
adc
add
mov
ret
ret
loop
xchg
mov
mov
adc
inc
bound
and
xor
inc
and
push
xor
pusha
ret
cmp
mov
mov
jae
daa
pop
push
jns
jo
data16
adc
mov
push
std
jno
sub
in
mov
ds
jae
movsl
addr16
and
dec
aas
test
shll
sahf
fsubrp
push
pop
fbstp
push
fldl
mov
hlt
mov
mov
sahf
inc
mov
bound
cli
cld
push
lcall
push
shrl
xorb
mov
pushf
add
dec
add
xor
and
rolb
sub
mov
sub
jb
shll
daa
xchg
push
xor
iret
lret
sahf
sub
movsl
sbb
insl
imul
notb
jae
push
xchg
push
lahf
ss
hlt
xor
and
mov
xchg
repz
loop
jbe
cli
mov
addl
arpl
jae
inc
push
push
pop
and
xor
add
jp
mov
mov
int
ret
push
push
adc
pop
sub
adc
pop
add
lahf
jecxz
icebp
add
mov
inc
hlt
notl
jb
sbb
inc
insl
pop
pop
data16
stos
scas
mov
shll
xchg
push
arpl
jb
bound
and
xor
add
adc
jecxz
repz
loop
xchg
mov
mov
jae
inc
bound
and
xor
add
adc
jecxz
mov
pop
outsl
push
fdivr
add
xorl
ss
test
push
pop
mov
nop
lcall
push
and
daa
adc
xchg
js
nop
jne
test
je
pop
xor
dec
xor
imulb
mov
mov
mov
push
shlb
xchg
cmpsl
js
insl
rol
fiadds
inc
adc
xchg
nop
inc
and
ja
mov
add
mov
dec
stos
pop
popa
xor
ljmp
xor
jns
lods
andl
xor
jecxz
push
sbb
push
pop
sbb
andl
jecxz
fildl
cmp
pop
jmp
jg
lods
xchg
jno
and
xchg
bound
cmp
call
inc
inc
push
loopne
push
idivl
adc
push
jmp
lock
sbb
int
movl
xor
andb
pop
jmp
cmp
clc
sbb
fwait
out
gs
push
andl
aaa
popa
mov
movsb
lcall
cmc
sbb
and
mov
testl
fidivs
dec
mov
stc
push
lea
ljmp
push
jbe
aam
xlat
adc
sub
loop
pop
xor
lret
int3
out
jle
jp
cmp
cmpsb
fld
dec
or
xchg
mov
shrb
aad
and
xchg
iret
cmp
push
mov
popa
pop
push
stc
push
add
gs
sub
test
test
xor
lcall
rcl
leave
cmp
les
xchg
cmp
jecxz
cmp
mov
fs
ja
jns
cmp
repnz
mov
pop
out
dec
ret
incb
dec
fwait
gs
fists
and
xchg
mov
xchg
xchg
inc
iret
pop
test
pop
mov
add
fmulp
push
xchg
jg
sbb
jg
outsb
movsb
pop
xor
hlt
pop
in
aaa
pop
cmp
jl
push
pop
add
bound
loop
mov
mov
jg
sahf
mov
adc
jo
lret
xor
push
shlb
pop
or
fucomp
mov
mov
dec
cmp
sub
xchg
aaa
test
add
sub
les
pop
js
iret
jo
pop
mov
fisttps
fsts
fldl
inc
or
outsb
push
dec
mov
stc
rolb
sbb
bound
xor
std
xor
mov
mov
adc
bound
inc
test
icebp
sbb
cmp
lods
cmpsb
mov
inc
add
sub
int3
daa
dec
jg
imulb
mov
or
insl
inc
in
hlt
sahf
add
ds
flds
aad
out
mov
push
pop
roll
add
pop
inc
mov
mov
adc
popa
sbb
mov
test
outsb
in
loopne
pop
js
movsb
fidivrl
pushf
adc
loop
push
mov
and
cmp
push
dec
push
xor
lcall
sbb
pusha
inc
push
dec
aad
or
push
lret
push
shrb
test
dec
mov
pop
adc
testb
hlt
dec
test
add
cmp
xlat
or
jo
enter
fiaddl
sbb
movsl
sets
repnz
push
inc
in
andl
cmpsb
jle
sbb
aad
fsubl
add
pushf
push
jg
in
inc
outsl
inc
fwait
push
sbb
xchg
sbb
ret
sub
pop
dec
add
cmp
daa
outsb
pop
add
ret
in
pusha
test
push
push
jne
cmp
adc
ds
subb
cmp
push
adc
mov
sub
mov
mov
out
jb
scas
jg
push
push
adc
scas
mov
jne
pop
push
pop
mov
arpl
icebp
adc
hlt
push
pusha
jcxz
or
push
add
cwtl
and
loope
inc
mov
in
or
scas
pop
bound
jae
xchg
in
and
and
repz
test
pop
mov
fldenv
or
cmp
cmpsl
lods
xchg
sub
sub
test
lods
loop
aad
outsb
fwait
loope
jle
or
icebp
cltd
adc
xchg
inc
fwait
out
xor
jp
adc
mov
push
jp
cmpsb
dec
push
sarl
pop
rcrl
mov
jb
shlb
xchg
adc
push
or
xchg
fsubl
repnz
inc
mov
ljmp
or
mov
dec
nop
mov
xlat
jne
jmp
es
movsl
jnp
sub
mov
adc
bound
xchg
jbe
pop
sbb
sbb
enter
ret
ss
mov
subb
rorb
mov
jp
icebp
aad
lret
add
add
jb
sbb
insl
fidivs
std
ljmp
xchg
pop
pushl
popa
and
push
add
sarb
mov
mov
add
scas
xchg
lret
or
cmp
pop
ret
sbb
sbb
jge
push
push
iret
adc
jecxz
push
dec
jmp
and
jg
mov
fnsave
sbbl
test
cli
xchg
mov
xor
lds
sub
rcrl
push
sbb
push
int3
mov
lock
dec
cs
dec
shl
inc
and
shrl
and
sbb
adc
lock
xchg
inc
cmpsb
mov
enter
mov
add
call
sbb
inc
adc
imul
xor
movsl
mov
dec
xor
and
pushf
int3
clc
pop
jecxz
addb
inc
dec
sbbb
mov
movsl
lods
stos
xor
dec
popa
inc
mov
mov
fsub
mov
aam
andl
cmp
xor
cmp
mov
mov
mov
or
dec
fcoms
or
add
dec
pop
lods
sbb
sub
decb
xchg
aas
mov
pop
jae
inc
inc
bound
inc
js
aam
popa
sub
xchg
xor
xchg
sbb
sbbl
xor
sbbl
sbb
add
repz
je
jne
inc
push
jmp
xor
dec
sbb
je
mov
mov
sahf
loopne
lock
mov
movsb
mov
jle
xor
dec
mov
das
jns
push
jecxz
inc
adc
xchg
mov
mov
into
mov
sub
pop
inc
inc
push
arpl
cmp
add
and
mov
push
pop
pusha
fwait
mov
dec
inc
arpl
xor
mov
cwtl
fstl
mov
fstl
daa
insl
stos
sub
sub
xchg
movsl
dec
xor
mov
adc
test
stos
push
mov
shrb
sarb
fmull
scas
shrl
lock
push
push
lret
ret
jmp
jmp
scas
nop
or
mov
insb
fldt
adc
lds
inc
sub
fistpl
jns
jo
dec
das
sub
cmc
hlt
test
jnp
jnp
hlt
repnz
bound
fcomps
ret
sbb
int
mov
sbb
push
ret
adc
les
cmp
xchg
push
movsl
out
pop
or
pop
jge
inc
mov
push
push
xchg
ret
adc
cmpsl
and
and
stos
cmp
in
jb
push
popa
sub
or
sbb
repz
jp
lods
mov
inc
sub
jns
sahf
cmpsl
mov
addb
mul
push
fistpl
sub
adc
push
adc
mov
push
mov
mov
xchg
pop
data16
ds
mov
add
sbb
outsl
mov
mov
loope
add
test
fst
push
insl
out
les
fs
pop
push
fdivl
andb
xchg
les
xchg
in
push
jne
call
sub
pop
and
test
cwtl
cmp
sub
fisttpl
lcall
call
sbb
addr16
out
mov
andl
push
and
stos
cmp
fsts
mov
mov
aad
push
sbb
push
mov
dec
cltd
cmc
mov
das
or
sub
into
push
or
test
mov
data16
decl
orl
jmp
ljmp
or
xchg
mov
push
out
fistps
mov
xor
add
inc
mov
inc
adc
inc
data16
xchg
imul
jmp
out
mov
jbe
push
add
movsl
fidivl
pop
call
cmpsl
mov
mov
mov
jecxz
aas
push
jl
sub
fnsave
cwtl
sbbl
pop
scas
inc
inc
jns
loope
cs
notl
icebp
push
or
or
xchg
jo
adc
aam
push
mov
fs
andl
fsub
aaa
adc
lahf
adc
xchg
mov
dec
cmpsb
mov
inc
std
push
mov
pop
negb
sar
std
into
xor
fs
je
mov
or
pop
les
aas
jl
pop
pop
and
pop
cwtl
pop
cltd
std
das
repnz
sub
in
cmpsl
insl
jo
mov
push
or
mov
loope
push
sarl
xor
cmp
add
notb
pop
jbe
cltd
loopne
in
loopne
push
add
int3
stos
aad
push
jo
push
out
add
shlb
rorl
movl
ret
jp
inc
mov
negb
mov
jbe
imul
dec
daa
lahf
push
mov
cmc
lret
jge
mov
mov
jnp
imul
imul
add
pop
out
and
push
xor
imul
shr
leave
jne
aad
pusha
insb
jb
decb
mov
fisttpl
add
sub
mov
mov
xor
pushf
xchg
add
and
or
fldcw
mov
jle
ret
ret
mov
and
inc
jnp
mov
in
xor
fwait
mov
jne
jg
fimuls
outsb
popa
outsb
stos
shll
add
aaa
mov
sbb
loopne
in
pop
js
cld
sub
rorb
pop
and
sbb
subl
pusha
aam
jmp
jg
inc
loop
xchg
insb
lds
lds
and
jb,pt
dec
inc
lds
movsl
add
sbb
orl
or
ss
inc
ss
rcr
mov
iret
adc
aaa
fnstenv
daa
lods
inc
sahf
daa
xor
xor
push
pushl
mov
mov
jl
mov
pop
sub
sarb
int
clc
push
loope
mov
in
hlt
xchg
dec
rorb
ja
into
sbb
mov
jne
idivb
or
fldcw
xchg
fnstenv
push
rcrb
outsl
cmp
dec
add
push
mov
test
mov
shlb
rorb
test
scas
data16
movsl
stc
mov
sahf
sarb
mov
test
das
push
push
mov
jge
sub
jecxz
jl
or
lock
add
push
or
xchg
std
aas
or
mov
pusha
movl
pop
ret
push
mov
push
daa
ja
mov
sbb
jge
or
hlt
add
pop
push
pusha
repnz
movsb
in
push
pop
push
pusha
shlb
lods
clc
jb
inc
test
shrb
ja
cli
add
mov
icebp
lds
mov
pusha
hlt
outsl
jp
clc
lds
ds
xor
je
cmp
imul
ljmp
sub
out
test
stos
leave
cwtl
inc
cmc
stos
push
stc
pop
out
jmp
sbb
cmc
rcrb
sahf
iret
test
ret
lds
lret
sub
or
sbb
leave
xchg
mov
cwtl
dec
dec
insb
call
push
xchg
dec
adc
out
mov
sysexit
scas
loope
xlat
mov
ss
push
sbb
sbb
jbe
jno
pop
push
movb
inc
roll
dec
inc
push
mov
in
incb
int
cli
cs
inc
aas
pop
push
push
call
mov
popf
sbb
mov
or
test
sbb
movsb
mov
pop
addl
mov
and
and
mov
mov
or
mov
mov
imul
aam
sub
lcall
jmp
data16
dec
push
arpl
sub
mov
mov
xorb
lcall
adc
jnp
pop
cmp
xchg
popf
in
int
dec
cmpsl
popa
pop
and
out
xchg
ret
mov
push
pop
lret
mov
sbb
ljmp
push
mov
icebp
cmp
stos
adcl
pop
ficoml
jp,pt
or
loop
xor
shlb
outsl
mov
xchg
mov
cmp
pop
les
ret
lahf
sub
imul
jmp
xor
dec
jno
rorl
inc
leave
pushf
ret
cmpsb
fidivrl
jo
dec
sahf
pusha
cmpl
es
pop
iret
push
mov
sahf
mov
jo
pop
mov
shlb
cmc
dec
clc
jecxz
lea
ja
cmp
loopne
mov
mov
into
bound
add
insl
add
daa
out
inc
ret
xlat
jle
mov
jo
sub
cmp
data16
in
addr16
jbe
mov
mov
adc
int3
adc
dec
push
mov
imul
scas
add
idivb
inc
testb
mov
lret
loop
push
jns
dec
mov
sub
dec
sbb
rol
outsb
add
std
repz
pop
or
rcll
xchg
aaa
insl
fldt
jns
and
pop
les
mov
loop
inc
std
arpl
popa
sub
sbb
clc
adc
or
scas
rcrb
insl
jmp
sub
xchg
xchg
shl
mov
icebp
aaa
pop
inc
mov
sub
rcr
into
jno
into
lods
aam
dec
rcrb
ficompl
incl
jns
ficomps
or
jbe
fistps
into
jno
lret
call
sbb
out
push
jmp
push
jmp
fs
mov
aas
popf
gs
dec
psrld
and
push
jl
rcll
sub
mov
loopne
or
sub
xchg
push
mov
adc
pop
fucomip
push
fs
xlat
or
adc
loop
push
dec
jae
cmpsl
cwtl
insb
and
in
pop
or
icebp
push
sub
repnz
icebp
fbstp
pop
add
mov
sti
or
mov
jae
xor
in
xchg
xchg
addl
aas
lds
xchg
cs
shll
pop
nop
fstps
xchg
insl
cli
xchg
arpl
fdivs
test
mov
and
popa
cmp
ds
mov
add
add
pop
jb
jge
nop
mulb
iret
mov
cmp
or
repz
xchg
sub
cmc
xor
out
lret
insl
sahf
mov
insb
xchg
xlat
nop
cmp
inc
mov
int3
jmp
add
ja
ds
lds
mov
push
sbb
and
hlt
mov
xchg
test
mov
in
inc
jns
icebp
scas
pop
mov
jl
into
mov
orl
xchg
and
push
cmp
dec
loop
adcb
and
cmp
xchg
xchg
add
mov
jbe
cltd
xor
mov
push
add
out
push
mov
in
sub
push
addr16
test
shlb
wrmsr
pop
pop
pop
inc
lcall
jmp
cmp
inc
mov
dec
mov
pop
std
ljmp
hlt
pop
fnstenv
push
popf
cld
ret
test
push
jp
xorl
mov
rolb
mov
dec
jecxz
es
cltd
push
push
xchg
aad
test
dec
push
cld
xor
rorl
cmp
and
cs
pusha
xchg
pop
xlat
into
pop
ss
lcall
test
dec
lods
faddp
sahf
dec
inc
mov
jmp
or
mov
enter
jl
cmp
or
mov
out
pop
mov
out
mov
sahf
jne
into
adc
test
add
outsb
lret
in
ds
jne
je
cmp
pop
mov
mov
xchg
mull
repnz
insl
outsb
inc
mov
repnz
xor
ret
push
push
pop
bound
jmp
popf
or
jge
add
mov
xchg
sbb
outsb
mov
ror
pusha
pop
addr16
sbb
in
cld
pop
fsubrl
out
push
pop
mov
sti
pop
pop
js
push
pop
and
cmp
mov
inc
lahf
out
and
shrb
and
jecxz
shlb
xor
js
jb
pop
sub
jle
jns
push
std
add
cld
test
dec
lods
cmpsl
xchg
sahf
les
push
nop
dec
fdivl
test
std
adc
loope
les
pusha
xchg
cs
test
repz
lahf
adc
cmp
je
add
sub
sub
incb
pop
lods
mov
inc
cmp
or
sbb
push
fisubrs
inc
cmp
fucomip
xchg
xchg
fwait
std
dec
sahf
push
sarb
push
int
add
addr16
push
mov
xor
push
add
sarl
fstps
dec
mov
sarl
mov
push
adc
aas
test
fwait
testb
sub
mov
sbb
push
imul
fwait
stos
es
xorl
mulb
jno
ret
xchg
xor
mov
outsb
inc
or
lret
or
mov
lret
or
outsb
mov
push
dec
icebp
add
mov
xchg
mov
addr16
xor
xchg
xor
sbb
pop
outsl
into
cltd
sub
cld
cmp
movsl
or
mov
mov
int3
mov
setae
je
mov
scas
xlat
cltd
lock
ret
jnp
mov
adc
in
out
pop
mov
lods
pop
or
mov
mov
push
stos
cmpsb
or
mov
cmp
fistpl
fsin
and
or
fidivrs
outsl
rcl
jae
rorl
fimuls
ret
mov
bound
xorl
inc
xor
inc
adcb
inc
test
call
adc
test
xor
inc
cmp
cmp
add
inc
cmp
lea
adc
dec
mov
push
mov
int
inc
jne
pop
out
push
sbb
iret
and
data16
das
out
sub
es
fisttpll
roll
insb
rcrl
insl
and
fisttpl
negl
mov
sbb
cmp
and
sti
pop
aas
pop
xchg
and
mov
popf
sbb
ss
jle
daa
mov
ja
in
jecxz
orb
jle
out
pop
sti
push
stos
lret
movsl
push
stos
lahf
arpl
mulb
mov
iret
and
adc
mov
stos
push
lcall
push
sbb
push
pop
aad
outsb
or
push
movsl
ss
sbb
je
shrl
and
hlt
fdivp
pop
inc
rcrb
in
leave
adc
jns
and
jb
daa
loop
bound
add
pop
clc
insl
cmp
mov
or
cmp
mov
xchg
jl
popf
data16
inc
fdivl
decb
jne
xchg
in
sub
iret
jp
sahf
testl
ret
sbb
adc
mov
stos
rol
add
sub
and
mov
mov
icebp
sub
ljmp
lds
push
dec
mov
sub
into
push
test
xchg
nop
xchg
mov
sbb
dec
movsl
ds
mov
and
dec
pushf
push
or
dec
in
xchg
imul
dec
movsb
out
mov
or
pop
movsb
daa
fs
dec
push
mov
fisubrs
add
and
xor
push
in
sbb
clc
sarl
ret
pop
mov
ret
es
ds
stos
mov
push
push
ljmp
mov
push
adc
aaa
inc
pop
test
push
xlat
push
and
test
in
popa
out
movsl
or
adc
cs
sarb
int3
jne
push
pop
adc
shll
outsb
inc
std
clc
or
push
or
in
data16
push
aam
mov
lcall
into
arpl
stc
adc
stos
jo
in
jo
negl
dec
mov
mov
rol
sub
in
push
inc
data16
stc
or
jg
cs
mov
xchg
add
push
les
fdivp
cmp
lahf
mov
cs
fidivrs
pop
mov
out
or
xorb
or
dec
stos
int
and
and
sub
jecxz
adc
sbb
inc
loopne
cltd
jge
jo
and
xor
sub
es
cmc
and
fldt
jb
imul
les
testb
js
imul
daa
out
xchg
ja
mov
xchg
jnp
adc
sbb
into
imul
sub
scas
in
dec
mov
movsl
stc
sti
mov
gs
repz
loop
xchg
mov
mov
jae
inc
bound
and
xor
add
adc
jecxz
repz
loop
xchg
mov
mov
jae
inc
bound
and
xor
add
adc
jecxz
jae
inc
loop
add
bound
addb
adc
adc
xor
lret
jecxz
repz
ret
mov
and
fadds
and
stos
mov
int
fucomp
ds
jp
dec
inc
pop
cmp
arpl
mov
faddp
lret
mov
lcall
inc
pop
xor
and
adc
add
out
cli
std
lret
mov
mov
test
push
test
xor
aas
adc
add
ljmp
xchg
in
into
in
lock
xor
inc
or
das
xor
mov
jmp
loopne
fmul
dec
fldcw
out
jne
jecxz
push
lock
arpl
leave
cmp
xchg
ja
push
add
lcall
adc
bound
divb
push
jns
add
cmp
inc
mov
sbb
sub
cmp
add
ss
test
mov
or
sub
sub
jle
lahf
out
mov
ret
xor
mov
mov
out
sahf
test
mov
jb
push
mov
sub
shlb
mov
pop
notb
out
mov
or
dec
or
ret
and
mov
push
push
das
pop
xor
cmp
or
loop
rcr
ret
shll
out
add
or
das
sub
pop
add
jg
test
mov
out
divb
jmp
adc
mov
jg
jo
lret
sahf
mov
fadd
fcmovb
mov
add
jp
add
jbe
and
adc
add
repz
mov
mov
lcall
inc
pop
xor
and
adc
add
repz
mov
mov
lcall
sbb
jg
dec
movsb
jae
addr16
hlt
rcrb
cld
xor
push
push
leave
iret
mov
mov
jg
sbb
stos
inc
add
mov
cmpsb
mov
push
push
push
adc
xor
push
sub
xchg
xorl
ret
out
mov
fldl
dec
scas
pop
mulb
xor
dec
xchg
int
test
es
xchg
mov
mov
push
lods
dec
test
jne
negl
sub
fcoml
and
jg
push
enter
fwait
xchg
addr16
out
int
mov
fstl
popf
ss
adc
dec
test
pusha
jo
and
pop
inc
and
or
data16
xor
mov
jle
jge
outsb
mov
dec
jge
pushf
mov
sbb
mov
lods
cmp
insl
cmp
scas
out
ret
out
xor
rcl
pushf
and
add
out
push
inc
push
xchg
das
push
inc
sub
imul
ss
jg
dec
sub
das
fsubrl
out
mov
mov
jmp
lods
inc
sbb
das
mov
mov
adc
cmpsb
fistl
sub
das
imul
mov
and
mov
cld
test
xchg
xchg
int
and
sub
xor
add
mov
in
in
push
rcrl
addl
pop
sub
call
pop
rclb
in
cwtl
xor
and
or
jb
lcall
int3
pusha
jmp
lds
sbb
jae
sub
mov
mov
outsl
lods
filds
jo
pushf
adc
mov
jo
xor
jae,pn
cmp
mov
cmpb
test
push
sub
sbb
fnstsw
loope
cli
xchg
and
cs
push
cltd
push
daa
pop
jae
fsubl
gs
add
scas
out
gs
lcall
mov
or
and
int3
stc
test
xor
sub
xor
dec
into
sub
sahf
cmp
loopne
fidivl
or
cs
scas
mov
subb
or
mov
or
fisttps
cmp
pop
or
jg
pop
xchg
mov
cmp
xor
push
sbbb
test
and
cmp
sbb
pusha
mov
mov
popf
add
jge
test
in
jg
popf
mov
or
stos
xchg
jmp
call
out
mov
sub
push
inc
rorb
mov
loop
fildll
lcall
cmp
les
scas
xchg
dec
xchg
add
or
movsb
fsubrs
sbb
inc
in
and
pushf
sbb
sti
xchg
mov
cmp
lods
lret
imul
out
ret
and
sahf
dec
repnz
adcl
mov
pop
rcll
xor
ja
je
rcrl
and
jnp
xor
mov
gs
and
add
xor
mov
int
mov
jne
lcall
fiadds
aaa
mov
stos
aad
pusha
or
fisubrl
mov
add
inc
add
jecxz
push
mov
icebp
xlat
cmp
lods
mov
pop
sahf
mov
xchg
cmc
cmpsb
pop
mov
push
and
xchg
and
neg
int3
rcrl
adc
pop
sbb
test
jmp
xchg
sbb
cmp
mov
scas
add
in
add
sbb
add
cmp
xor
movsl
push
jns
add
call
mov
xorb
dec
sub
enter
xchg
sub
int
aad
lods
repnz
addb
addr16
ret
sti
mov
outsl
aad
inc
inc
sahf
adcb
jb
int3
loopne
mov
js
push
out
clc
ret
xchg
clc
and
push
push
pushf
nop
and
or
notl
inc
sub
mov
push
sub
add
cmpsb
inc
or
adc
shrl
or
mov
add
sbb
xor
ljmp
or
sbb
xchg
roll
mov
mov
ja
xorl
sbb
xchg
sbb
push
rcrb
ret
mov
push
xor
mov
inc
imul
out
push
fnstenv
lcall
jb
pop
xor
outsl
ret
cmc
jae
ljmp
test
mov
mov
movb
in
addb
xor
stos
xchg
dec
and
lret
xor
pop
pop
xor
xchg
jp
dec
movsl
push
pop
xchg
mov
outsl
jb
lahf
scas
jmp
jno
sbb
mov
mov
icebp
and
xor
mov
shl
add
pop
insb
rcll
out
xor
jbe
arpl
pop
orl
stc
fldcw
inc
pop
mov
shll
xchg
pop
shll
jb
mov
xchg
test
push
movsb
and
sbb
repz
jne
cs
daa
jbe
sar
mov
xchg
js
add
movb
or
mov
les
xorb
lret
adc
insb
les
inc
dec
fdivl
lea
mov
jnp
sbb
mov
hlt
stos
mov
jnp
cmp
iret
push
stc
push
push
test
lret
xchg
movsb
xor
loop
stos
inc
adc
inc
pop
sbb
icebp
adc
inc
or
dec
std
lahf
adc
imul
and
pop
inc
inc
add
ret
sub
push
pop
aam
fsubs
push
pusha
mov
das
outsb
imul
sbb
xor
mov
pop
mov
inc
push
mov
pusha
xor
cmp
xor
sbb
sarb
sbb
mov
into
sbb
fwait
gs
mov
jmp
fldenv
out
fidivl
adc
add
cld
outsl
mov
lret
push
imul
push
leave
xlat
insb
enter
addr16
pop
shlb
inc
leave
pop
pop
outsl
aaa
jno
pusha
pop
cs
mov
sbbb
mov
cmp
cmpsl
loop
and
cmp
pop
mov
xchg
out
cs
repnz
test
xchg
mov
sub
imul
pop
adc
mov
mov
in
xor
test
push
lret
sub
add
lods
leave
mov
jne
cwtl
mov
adc
mov
in
pop
aad
mov
fsubrl
clc
mov
and
mov
add
ret
clc
add
popa
mov
cmp
ret
sbbl
push
push
es
pop
lcall
adc
add
xor
pop
mov
jns
dec
xchg
out
and
in
movsb
roll
jp
out
incl
jae
xchg
lea
inc
sub
pop
push
ret
or
dec
cmp
loope
or
mov
or
inc
test
les
xchg
inc
fisttpl
mov
pop
rorl
call
sub
rorb
addr16
xchg
mov
xor
mov
sbb
xchg
into
xor
dec
fwait
mov
xchg
cli
stos
cmp
rcrl
jns
cld
dec
das
loope
xor
mov
inc
popa
jmp
in
data16
and
jl
dec
push
push
lods
scas
mov
mov
or
fs
in
mov
add
push
inc
adc
cmp
out
mov
push
sbb
movl
xor
jnp
into
ffree
jp
nop
out
divb
xchg
dec
jge
in
xor
push
fidivrs
outsb
push
sarb
daa
mov
mov
xchg
in
jmp
push
popf
inc
mov
ret
adc
mov
pushf
int3
inc
outsb
and
repz
xchg
leave
xchg
pop
filds
lret
mov
sub
jae
movsl
push
gs
fwait
jecxz
push
dec
add
shrl
dec
scas
jp
push
push
pop
jle
ja
or
test
mov
lods
xor
push
outsl
hlt
in
sbb
popf
ror
mov
mov
fdivrs
test
into
jge
test
stos
xlat
imul
push
std
and
pop
arpl
xor
push
pop
mov
outsb
rol
xor
leave
daa
jg
inc
push
std
pop
xchg
pop
das
loope
cmp
fmuls
fsubl
push
mov
sub
nop
xor
mov
out
mov
loop
fdivrl
test
outsw
jne
pop
lea
movsl
jge
adc
fld
fcomps
scas
cmp
mov
call
jns
loop
fistl
mov
stc
mov
rorl
pop
mov
dec
in
pusha
push
jno
jbe
mov
ret
shlb
or
xor
cmp
cmp
gs
outsb
out
add
mov
orl
lret
ja
addr16
inc
xchg
sarl
das
jno
nop
and
out
data16
loopne
sbb
and
or
shll
repz
faddp
shl
push
jno
loope
repnz
mov
gs
push
fdivrp
pushf
jg
mov
xchg
xor
out
aas
sbb
sub
out
and
popa
xor
jmp
ljmp
sub
gs
adc
imul
or
inc
xor
out
adc
and
sbb
jae
stos
push
cld
xorb
dec
jae
cmp
insl
mov
test
ljmp
aaa
xor
jbe
push
lds
mov
jp
push
sbb
int3
dec
cmp
lods
xor
cmpsl
test
xlat
xor
das
and
test
jge
or
pop
sub
or
and
shlb
bnd
js
dec
sub
jl
ret
cmp
cmp
divl
inc
leave
pop
adc
mov
pop
push
ss
jp
adc
push
punpckldq
lds
inc
das
in
mov
pop
and
insl
leave
popa
mov
sbb
testb
mov
nop
xchg
pop
mov
mov
add
inc
mov
lcall
xchg
sbb
push
enter
push
sahf
dec
fisubl
test
dec
sbb
je
pop
xchg
lods
sbb
mov
loop
mov
ficoml
testl
mov
sbb
pusha
lea
les
mov
shrl
test
fwait
mov
push
lods
jne
ret
xor
mov
aad
fidivl
test
inc
test
xchg
and
gs
das
xor
arpl
es
jbe
sbbl
mov
mov
shll
or
adc
inc
dec
fadds
pop
movsl
test
push
or
pop
ret
xor
adc
dec
push
sbb
jp
add
inc
xor
or
xor
mov
xor
push
xchg
xor
cmp
stc
test
pusha
data16
outsb
push
sbb
adc
cmpsl
hlt
sbb
and
outsl
int
test
cmpsl
rcr
outsl
out
rorb
mov
sbbb
mov
mov
sub
or
or
jno
xchg
in
push
insb
loopne
add
repnz
lock
xlat
cld
jns
fidivs
je
mov
xor
pop
clc
jbe
xchg
and
xchg
test
stc
add
out
jecxz
lods
xchg
dec
jae
in
test
sub
jl
xor
je
pop
decl
xlat
mov
lcall
cli
sbb
jo
or
scas
pop
faddl
push
out
and
dec
int
xor
loop
leave
xchg
add
mov
addr16
jecxz
mov
xchg
pop
insb
adc
notl
mov
pop
nop
cwtl
adcl
stos
pop
inc
mov
mov
loopne
sti
pop
inc
movsl
popa
popa
xlat
mov
imul
jl
cmp
push
ficoml
or
lret
jecxz
adc
pop
inc
sti
and
push
and
scas
mov
roll
mov
outsl
inc
push
mov
out
test
lea
test
insl
scas
adc
test
mov
inc
mov
dec
mov
or
or
insb
es
ds
iret
pop
mov
test
das
stos
call
ss
push
dec
ds
xchg
cwtl
shrl
ficomps
scas
in
xchg
jbe
les
sti
pushf
inc
lret
mov
cmp
arpl
add
das
jno
test
lods
cmp
out
mov
pop
decl
popf
jecxz
sub
xor
test
sbb
mov
outsl
push
out
mov
inc
sbb
mov
lret
and
or
subb
push
je
arpl
jo
cwtl
mov
test
cmp
std
pop
or
test
mov
or
test
lcall
daa
dec
mov
mov
add
adc
arpl
faddl
jmp
mov
dec
stos
mov
adc
lret
arpl
lds
or
pop
push
sbb
dec
cwtl
xor
jp
sbb
push
sahf
xchg
jp
arpl
out
es
leave
add
jecxz
pop
add
adc
icebp
dec
mov
daa
in
push
jb
in
mov
int
sahf
inc
inc
cmp
sahf
mov
cmp
movl
jp
fadds
testb
cmovp
sbb
ret
dec
push
jg
sub
mov
je
jle
nop
imul
sub
jl
lds
enter
mov
cwtl
push
ss
notb
lret
or
out
les
das
dec
sub
mov
int3
int
loop
fcmovnbe
loope
xor
sub
mov
and
dec
leave
jns
lds
mov
arpl
jnp
add
xchg
jge
pop
sub
js
mov
add
pop
cmp
mov
and
mov
js
out
pushf
in
js
or
popa
aad
push
jnp
sbb
sub
mov
mov
mov
mov
xchg
mov
sbb
pop
cli
fcmovne
cmp
push
test
xor
xchg
or
stos
and
mov
lret
imul
sub
mov
loop
stos
repz
push
xchg
cmp
mov
and
aas
leave
add
mov
inc
lods
aam
mov
inc
sarb
fyl2x
outsl
les
mov
repnz
data16
mov
mov
sbb
sbb
dec
push
lods
cmp
sbb
xor
push
mov
pop
push
and
jbe
jecxz
repz
cwtl
fwait
cli
call
xor
mov
jmp
cmc
dec
and
leave
mov
xchg
mov
pop
fwait
pop
sub
call
imul
sahf
xor
push
pop
xchg
xchg
xor
movsb
out
mov
xchg
adc
cmp
dec
dec
repz
stc
xchg
fs
inc
stc
fisubrl
sub
cmp
jl
lret
mov
jns
mov
xchg
and
xlat
imul
filds
jge
adc
xchg
xchg
into
int3
pop
lahf
fdivs
int3
les
insb
pop
ret
mov
push
jle
mov
add
lcall
and
sbb
inc
cmp
subb
inc
adc
test
call
repnz
add
dec
cmp
inc
inc
das
rcl
and
fnsetpm(287
inc
aam
add
sub
mov
or
fcom
xor
cmp
mov
inc
lahf
xchg
bound
or
or
cmpsl
test
jecxz
divb
in
jmp
outsb
jg
xchg
pop
mov
pop
movsb
xlat
jl
add
out
divb
push
inc
inc
in
rorl
and
push
insl
mov
aad
dec
ljmp
loopne
inc
mov
in
jl
jo
pop
mov
jno
mov
and
mov
sahf
xor
in
xchg
xor
mov
pmullw
and
jmp
sub
xchg
inc
and
in
out
lcall
or
cli
int3
add
loop
inc
xchg
mov
pop
adc
add
add
scas
gs
jns
fstp
mov
dec
into
fildll
jle
std
loopne
push
add
es
and
adc
xor
jg
fistpl
filds
outsb
pop
mov
cli
dec
sub
jae
rcl
mov
mov
xor
stos
into
sbbb
mov
fsts
pop
jle
push
test
loopne
les
and
test
adc
lock
lahf
loope
adc
pop
imulb
out
sbb
arpl
dec
add
scas
push
jmp
cmc
test
dec
mov
cmp
fs
in
popf
mov
add
cmp
lds
arpl
incb
sbbb
out
and
cmp
mov
push
inc
fsubrl
xchg
dec
pop
in
aam
add
mov
jle
cmp
mov
je
and
rcr
adc
daa
fst
jmp
adc
rcrl
cmpsl
add
push
adc
orl
mov
push
sub
ljmp
push
mov
gs
addr16
adc
cmc
popa
mov
push
out
sbb
dec
data16
mov
jecxz
jmp
jl
cli
popf
jbe
jp
mov
fidivl
std
movsl
lcall
data16
and
lods
pop
mov
iret
ret
decl
dec
out
xchg
and
push
push
sub
or
addb
loopne
mov
xor
pop
addr16
lcall
insl
jl
je
pop
cmp
push
jno
lods
fildl
inc
pop
cmp
lods
enter
testl
mov
mov
stos
dec
fsubr
or
aad
sub
pop
jae
sub
xorb
jb
mov
dec
fsts
mov
or
lock
mov
int
les
mov
das
faddl
push
pushw
inc
cmpsb
leave
or
jbe
push
pusha
aad
test
loope
pop
repz
stos
push
pusha
andb
adc
adc
dec
cld
stos
xchg
popa
mov
and
ja
repz
lods
fistpll
jge
out
test
test
inc
jo
jnp
sbb
outsb
pop
sbb
xchg
leave
test
sbb
or
mov
sahf
adc
idivl
into
out
xor
push
insb
fisttps
arpl
iret
lahf
fs
or
sub
mov
fdivs
mov
sahf
cmpsl
loope
mov
xor
or
jp
mov
je
xlat
jg
pop
pop
imul
or
inc
lret
mov
gs
or
pop
scas
mov
pushf
pop
lea
das
xchg
jg
xor
mov
hlt
mov
cwtl
mov
les
jg
pop
jno
and
push
push
mov
das
movsb
movsb
jne
cmp
sub
jne
mov
scas
gs
or
imul
fisttpll
fisubl
loop
test
jl
fnsave
and
push
insb
jecxz
add
xor
push
xlat
pop
cltd
cmp
fidivl
ljmp
cmp
mov
inc
adc
xchg
add
sbb
sbb
jle
aam
sub
push
icebp
mov
and
stc
xchg
jo
xchg
and
sbb
and
dec
sbb
mov
fisubl
pop
stc
aaa
insb
mov
lods
mov
aam
sar
aas
sub
sahf
jmp
xlat
stc
sbb
mov
mov
rorl
mov
xchg
jno
inc
loop
ficomps
mov
aas
xorl
jne
notb
daa
cld
inc
inc
inc
icebp
notb
std
pusha
mov
pop
ds
fwait
mov
inc
movsw
push
cmp
and
aam
mov
fidivl
adcb
xchg
mull
hlt
inc
in
or
add
jmp
aad
movsl
arpl
mov
pop
sahf
leave
int3
lds
sbb
arpl
movsl
add
das
xchg
push
xor
daa
cmp
out
mov
andl
fsubr
mov
shrb
jmp
pop
or
xchg
xchg
jae
orb
jl
cmp
addl
in
mov
repnz
xor
push
sbb
mov
sub
cltd
jge
lds
fiaddl
xchg
cmp
out
cmpsb
stos
sbb
insb
fbld
sbb
jmp
jns
push
lahf
sti
jl
xor
sbb
cmp
movsb
mov
push
xchg
cmp
cltd
in
mov
in
xchg
stos
jns
mull
adc
dec
or
adc
ljmp
popf
iret
dec
call
adcb
insl
jmp
lret
mov
insb
in
ljmp
jecxz
in
lret
jp
dec
pop
pop
xor
and
adc
add
repz
mov
mov
lcall
inc
pop
xor
and
adc
add
repz
mov
mov
lcall
inc
pop
xor
daa
cmp
or
sbb
ljmp
mov
mov
sahf
imul
fisttpl
pop
xor
xor
adc
sbb
ljmp
les
sub
insb
cmc
jl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
ret
add
nop
lea
int
pop
mov
inc
nop
adc
inc
repnz
and
lds
ret
add
adc
inc
mov
nop
push
andb
xor
ljmp
dec
stos
scas
mov
push
jg
rcrl
fists
jecxz
mov
cltd
inc
mov
shlb
jne
inc
lcall
mov
inc
mov
data16
jge
test
and
pop
repnz
push
popa
jge
inc
add
fwait
test
subb
scas
pop
pop
and
xor
fdivl
orl
mov
xor
in
rolb
add
rolb
shlb
adc
imul
pop
sub
jb
ds
xchg
loope
sub
xorl
cmp
xchg
ret
xor
pop
repz
nop
mov
rcr
das
xor
ret
adc
das
daa
or
push
add
fmuls
loope
psrld
and
ret
test
sbb
lcall
push
jnp
or
sbb
xor
cmp
xchg
inc
xchg
notb
pop
mov
iret
xor
add
or
jle
data16
inc
mov
gs
popa
loopne
out
in
inc
fisubrs
out
push
lds
aaa
in
divl
jno
inc
mov
lock
push
loop
ljmp
push
push
mov
bound
xor
and
shlb
ret
add
adc
inc
mov
mov
andb
loopne
lock
and
shlb
add
stos
mov
scas
push
or
pusha
xor
mov
push
cmp
push
mov
sti
rol
pushf
xchg
lahf
jecxz
xchg
ss
enter
mov
pop
in
xchg
sahf
test
psllw
xor
leave
cltd
test
std
xchg
test
rcrb
jnp
nop
push
scas
jno
stc
in
fidivs
pop
loopne
pop
or
popf
stos
jne
repz
cmpb
out
ret
sbb
out
mov
sub
js
je
jl
jb
mov
hlt
jae
push
ljmp
in
ds
mov
jne
jecxz
sbb
addb
mov
and
scas
insb
add
add
stc
insb
pop
lods
inc
and
cs
pop
fld
ja
xor
sbb
lods
adc
lret
fwait
enter
sbb
jno
xchg
jecxz
sbb
aad
xchg
adc
adc
mov
sub
inc
cmp
inc
movsl
or
sbb
cmp
mov
out
inc
imul
dec
jnp
hlt
loop
push
and
push
imul
sbb
pop
mov
pop
andl
fcomps
out
inc
ljmp
bound
or
cmp
popa
mov
call
cmp
call
not
jle
fistl
mov
fwait
leave
in
das
push
cmpl
jg
inc
dec
inc
add
inc
pop
mov
jg
dec
dec
push
sbb
mov
and
call
shll
or
pop
or
dec
or
cmpsl
push
dec
mov
xchg
cmc
xchg
push
mov
pushf
push
mov
scas
fwait
sbb
stos
mov
xchg
mov
xor
pop
pop
adc
jmp
sbb
mov
popa
pushf
pusha
stc
jmp
push
inc
adc
sbb
cld
mov
in
test
fsub
ds
push
push
pusha
dec
xchg
fwait
scas
jns
push
adc
dec
jo
push
mov
pop
and
in
scas
mov
dec
dec
mov
cmpsl
xchg
ds
or
sbb
adc
inc
xchg
inc
xor
and
mov
pop
nop
int3
lret
aaa
dec
cs
ret
push
mov
pop
mov
les
push
dec
popa
add
lahf
divl
fimull
xchg
jg
fistpll
lahf
rolb
xor
aas
sub
les
sub
jge
jo
inc
inc
add
mov
jne
xor
js
ja
fbstp
sbb
pop
fnstcw
and
sub
divb
arpl
test
ljmp
fmuls
ljmp
inc
shl
inc
stc
push
mov
push
pushf
scas
js
jb
push
and
jecxz
mov
pop
cmp
or
mov
dec
test
or
mov
dec
or
mov
movl
xchg
jle
and
add
cli
mov
cltd
sahf
in
adc
stos
ror
jnp
jmp
or
mov
out
add
push
adc
add
pushf
mov
in
sarl
pop
and
aad
enter
cmp
movb
lods
jmp
dec
aas
sbb
pop
jae
mov
jg
and
push
xchg
pop
int3
incl
push
mov
push
lock
jb
add
xchg
cmpl
divl
lahf
sbb
pop
xlat
mov
in
lods
pop
cmpsb
jo
or
subb
push
mov
cmp
imul
lods
cmc
nop
test
loope
mov
test
je
adcl
fidivs
movsb
cmp
push
lock
loope
sbb
jo
jnp
popf
mov
mov
fwait
xchg
xchg
imul
outsb
out
adc
add
or
mulb
imull
push
cmpsb
adc
lds
inc
aam
adc
inc
dec
lods
shll
pop
outsb
jg
jno
cli
je
pop
dec
sbb
inc
sbb
dec
xor
lahf
jae
mov
fcomps
jo
test
shll
jl
mov
scas
scas
mull
mov
fnstenv
sbb
adc
scas
adc
and
ret
pushf
pop
pop
negb
negl
scas
xor
loopne
pop
cmp
in
sub
test
pusha
mov
mov
push
je
pop
imul
ror
movsb
out
dec
call
jmp
ss
mov
mov
out
pop
pop
sti
mov
dec
jbe
or
scas
mov
jle
pop
push
clc
mov
push
ret
and
orl
inc
arpl
rol
push
dec
adc
gs
lods
mov
pusha
fisttpl
filds
push
sbb
mov
mov
pop
out
adc
test
xchg
popf
xrelease
iret
jge
push
xchg
xor
outsl
jle
dec
add
dec
lods
aad
lcall
jmp
or
cmp
or
data16
pop
insl
jno
cltd
push
stc
push
mov
cwtl
mov
jns
or
pop
fildl
jg
dec
adc
sbb
sahf
sti
sub
xchg
jl
mov
sar
xchg
sar
inc
cwtl
popa
lahf
test
pop
outsl
push
mov
mov
xchg
test
repz
mov
cmc
loop
or
clc
rcrb
sub
xchg
mov
push
test
into
aam
ss
dec
fnsave
and
movsl
sbb
mov
test
sub
xlat
lods
jg
xchg
inc
xlat
cmpsb
cmpsl
or
push
dec
out
outsb
lods
faddl
hlt
repz
ret
rolb
inc
cmp
fnstsw
pop
aaa
cmp
cltd
xchg
sub
cmp
mov
xchg
push
inc
out
arpl
xchg
mov
and
mov
stc
lret
mov
xchg
xor
aam
sub
pop
icebp
pop
into
mov
in
daa
dec
jns
xor
and
clc
xchg
test
sbb
nop
inc
mov
or
ss
bswap
outsl
sbb
adc
js
cmp
mov
movsl
es
shrb
aad
pop
push
push
or
in
jmp
out
mov
or
or
outsb
daa
or
inc
je
sub
adc
pop
dec
xor
mov
cmp
aam
repnz
cmp
shll
aam
push
mul
sbb
clc
push
fstps
sub
adc
cli
aaa
sti
jl
ficoms
cltd
int3
dec
mov
repz
or
inc
add
cmc
push
sub
cwtl
add
lahf
fidivrs
jns
cmc
adc
hlt
getsec
andb
adc
xchg
sahf
dec
fcmovu
pusha
jae
ds
pop
push
in
dec
leave
xchg
xchg
lret
and
pop
jecxz
mov
call
sbbb
or
jp
clc
out
inc
push
stos
lods
mov
sub
sub
push
popf
push
in
push
and
cltd
dec
mov
inc
mov
jbe
stos
decb
mov
mov
push
stos
cmp
loop
lock
xchg
scas
in
mov
fstpl
outsl
pop
push
dec
push
xchg
sbb
loopne
js
pop
insl
mov
clc
insl
sub
iret
jno
push
mov
adc
or
icebp
push
dec
cmpl
pop
js
je
adc
dec
mov
xor
sbb
hlt
dec
pop
inc
dec
sahf
lods
pop
call
aas
call
inc
jae
rcl
fs
insl
pushf
push
mov
cmpsl
dec
and
jecxz
es
xchg
nop
pmaxub
push
inc
adc
call
testl
in
aad
mov
adc
jl
stos
in
xor
repnz
mov
push
mov
pop
insb
lea
xor
insl
push
sub
mov
add
sbb
iret
mov
sub
or
add
cmp
cltd
cltd
push
add
sbb
frstor
stc
cmp
pop
stc
leave
push
jo
insl
pop
aad
inc
movsb
pop
scas
pushf
push
mov
lret
lret
es
inc
and
jb
xor
mov
jl
insl
stos
sub
cmp
mov
aaa
push
mulb
bound
js
and
fdivrl
add
outsb
and
jmp
pop
xchg
in
adc
leave
fs
push
add
adcb
cmpsb
push
dec
pop
push
fsubp
clc
push
mov
cwtl
xor
cld
xor
lret
jecxz
jno
pop
jb
sbbl
add
cwtl
repz
in
movsb
push
imul
sbb
xchg
ja
jp
xchg
sbb
mov
jg
mov
and
jp
cmp
jne
sub
sub
inc
inc
mov
xchg
inc
xlat
jo
cmp
pop
mov
xchg
mov
inc
sti
pop
insl
push
into
je
pop
and
lds
inc
pop
push
fcompl
ror
xchg
mov
cmp
inc
push
ja
rcrb
pop
mov
dec
adc
and
mov
add
out
std
pushf
dec
xchg
dec
dec
pop
xchg
test
out
popf
scas
dec
mov
insb
roll
add
popa
mov
fisubrs
inc
cmpsb
adc
ret
cmp
scas
cmc
filds
daa
rcrl
xlat
in
add
adc
test
pop
mov
cltd
push
popf
push
in
int3
pop
rcll
cmp
dec
add
sbb
adc
xchg
add
mov
enter
call
sbb
lock
shlb
std
fdivrl
lea
call
and
xchg
mov
sub
and
gs
mov
dec
mov
or
in
adc
push
cltd
xor
jae
movsl
pop
jp
les
push
sbb
loope
dec
scas
xor
fs
add
testb
xchg
pop
jmp
push
jge
jl
lods
and
imul
xor
push
pop
inc
mov
notl
push
les
sbb
add
test
int3
dec
int
add
gs
xchg
or
fidivs
xchg
cmpsb
push
addr16
add
movsb
repz
and
inc
inc
int3
jg
jle
nop
mov
jmp
sub
push
mov
inc
jns
xor
sbb
xchg
fwait
cmpsl
sarb
jo
or
sbb
mov
testb
jge
jmp
sbb
es
rorl
dec
mov
jle
lock
inc
lret
add
cmp
mov
mov
dec
test
jp
xchg
mov
xor
jg
test
movsl
xlat
mov
lock
adc
mov
mov
outsl
loopne
push
mov
gs
lock
rorl
jb
pusha
cmp
test
dec
xchg
lret
test
jmp
orl
mov
fmuls
and
clc
inc
out
jbe
mov
adc
jo
push
or
loope
pop
pop
cmc
sub
pop
push
add
loop
cmpsl
pop
aad
xchg
dec
test
daa
nop
mov
imul
dec
nop
push
or
pop
scas
daa
insb
adc
pop
clc
rcrb
add
push
xlat
jmp
mov
scas
sub
push
in
test
out
sub
add
cmp
mov
les
mov
mov
je
mov
xor
movsb
scas
notb
push
adc
cmc
xlat
push
pop
jno
jl
cli
lock
fdivrs
outsb
and
dec
inc
adc
bnd
push
frstor
mov
pop
sbb
popa
xor
mov
repz
xchg
push
leave
cltd
aaa
sub
cld
cmpsl
push
cld
test
inc
or
adc
call
sbb
mov
hlt
pop
out
pop
fldenv
cwtl
fs
and
xchg
stc
sbb
jg
fld
bound
pop
cmpsl
jns
imul
cli
int
scas
dec
movsl
xor
push
ljmp
xchg
loopne
out
loop
inc
lds
lret
fs
aam
loop
adc
cs
xchg
cmpsl
sar
pop
arpl
inc
sbb
mov
mov
imul
push
push
adc
andl
xor
mov
mov
mov
mov
mov
in
and
jbe
mov
std
adcl
test
aam
jmp
les
mov
addr16
mov
inc
jge
negb
scas
dec
mov
and
out
pop
push
dec
jnp
xor
adc
js
mov
ss
scas
sbb
in
mov
mov
pushf
sub
sbb
inc
xchg
jne
call
sahf
pop
mov
mov
ret
and
and
addl
sub
adcl
pop
jae
ljmp
orb
push
dec
mov
mov
jl
sbb
cld
notl
ljmp
xor
jle
lods
push
test
mov
mov
inc
push
dec
mov
arpl
sahf
mov
in
inc
dec
mov
and
adc
mov
cli
dec
mov
mov
fdivl
arpl
sbb
js
pop
loope
cmc
push
push
jbe
sbb
dec
dec
addr16
cmp
mov
and
fidivrl
je
add
pop
outsb
lock
cmpsl
mov
stos
adc
pop
cmpsb
fildll
and
jp
adcb
add
nop
or
inc
mov
or
ljmp
mov
sub
outsb
fsubs
add
jb
push
xchg
push
pop
dec
sahf
jne
pop
mov
cltd
sbbl
jb
ret
scas
jl
push
outsl
icebp
xlat
in
add
stos
iret
clc
adc
aad
shrl
pusha
or
jl
out
xchg
in
cltd
or
sarb
loop
pop
jmp
stos
imul
pop
lods
mov
rorl
cmp
mov
xor
and
out
repz
inc
inc
je
ret
mov
or
push
sbb
xchg
add
xor
jge
movsb
roll
pop
filds
aaa
cmp
repz
push
mov
mov
adc
sbb
mov
ja
cmp
push
pop
pop
cltd
jmp
cmp
jne
cmpsl
call
cli
push
or
mov
mov
or
pop
in
jne
xchg
aad
daa
add
pushf
in
in
je
mov
imul
xor
aam
mov
call
push
push
jne
lret
mov
shrl
outsb
mov
imul
adc
mov
mov
and
add
xchg
cmpsb
sbbl
mov
in
sub
xchg
lea
rcrl
mov
push
add
xchg
js
jge
gs
incl
xor
push
rolb
add
pop
mov
sbb
xor
sbb
push
in
lods
pop
push
rclb
xor
and
cmpsb
stos
xchg
add
test
inc
adc
pop
cwtl
addb
cmp
ficompl
add
stos
mov
or
sbb
into
fwait
aaa
pop
cli
cwtl
nop
push
sub
es
and
sbbb
jmp
mov
dec
mov
out
daa
push
xchg
push
xor
ja
test
xchg
pop
fldl
add
pop
lea
dec
mov
sub
add
faddl
adc
mov
dec
jecxz
inc
adc
sub
cmp
cmp
sahf
mov
outsb
xchg
mov
xor
inc
push
mov
lods
insl
test
dec
lcall
mov
lds
mov
test
shlb
cmp
mov
imul
add
add
sti
pop
xor
push
push
sbb
push
cmp
pop
repz
jge
callw
jbe
mov
cmpsb
mov
sarl
movsb
movsb
and
test
fwait
or
aam
outsb
sti
push
mov
xor
xor
fdivrs
mov
push
hlt
in
lcall
lret
sub
fldcw
dec
add
push
inc
int
adcl
jo
xchg
sub
popf
mov
popf
xor
cltd
dec
inc
or
out
adc
rclb
push
outsl
add
or
push
imul
loopne
outsb
ficompl
js
lret
cmp
fucomip
sbb
mov
mov
aam
xor
cmc
adc
inc
jae
aas
sbb
add
lret
mov
hlt
jle
daa
ret
mov
cmp
rclb
cmp
rolb
cmpsl
xor
pop
das
jecxz
cli
or
or
jge
jge
mov
pop
lods
and
sub
scas
pop
mov
inc
add
movsb
mov
jnp
repz
stc
aad
mov
xchg
out
aad
mov
mov
add
cmp
sub
insb
sub
jecxz
cmp
stc
lret
or
stos
ds
sub
cli
mov
push
add
add
xor
scas
cmp
out
sti
cmp
cld
lahf
inc
xor
movsb
fmuls
sbb
and
adc
sbb
lds
xlat
incb
fucomi
jge
fdivs
dec
scas
fsubp
loop
aaa
adc
push
fdivs
inc
std
insl
or
add
ror
fnstcw
xchg
sbb
loopne
shlb
std
mov
popf
stos
popa
loop
lret
jae
scas
mov
rcll
sti
out
or
mov
mov
xorb
das
xchg
pusha
add
fisttpl
ss
jmp
out
push
popf
test
mov
push
scas
push
pop
sbb
lahf
cmp
pop
scas
mov
add
cli
mov
xchg
adc
jge
jb
sub
lods
jae
rolb
div
inc
mov
aas
sbb
cmp
out
lcall
dec
add
out
imul
lahf
clc
push
jns
sarl
fcmovbe
push
outsl
aas
xor
dec
into
mov
test
insl
xor
into
shll
test
mov
pop
mov
aad
flds
ret
filds
dec
fistps
cmp
jecxz
xchg
mov
loop
mov
loope
sbb
fs
adc
sbb
xor
inc
sub
and
jne
daa
jmp
add
loop
cmp
pop
and
jp
inc
in
pop
clc
jb
lcall
bound
xchg
jl
ja
leave
out
out
nop
aad
cmp
push
test
test
call
xor
sub
pop
out
cmpsl
xor
lahf
xor
popfw
call
xor
add
std
mov
shr
in
dec
add
mov
cmpl
add
pop
inc
add
out
ret
hlt
pop
or
add
imul
test
testb
xchg
ret
stos
gs
inc
sbb
jae
data16
popa
mov
incl
add
and
sarb
incb
adc
hlt
enter
pushf
push
shl
jns
adc
cltd
push
movb
cwtl
pop
cwtl
orb
lahf
test
vminpd
fs
and
mov
sub
inc
xor
mov
adc
addl
decl
sbb
xchg
jl
in
and
aad
sti
dec
jb
mov
sub
mov
popa
scas
lret
adc
mov
gs
sbb
mov
bound
and
loop
adc
jns
or
negl
jl
sbb
add
xor
int3
inc
popa
mov
inc
push
jns
push
cmp
daa
jb
out
xor
pop
and
stos
dec
inc
dec
repz
hlt
mov
enter
push
lahf
out
lcall
xor
gs
int3
mov
in
icebp
lret
or
jae
mov
xchg
pop
pop
adc
shrb
xchg
jp
cmpsl
fwait
xor
scas
add
addl
sti
dec
pop
movaps
loope
mov
mov
loop
or
cmp
out
daa
stos
mov
jbe
outsb
and
repz
add
pop
test
cmpsb
into
cwtl
test
pop
test
pushf
fcompl
mov
adc
mov
push
add
fistl
into
js
ror
into
das
lea
add
mov
insl
and
or
jg
sub
mov
jge
cmp
sbb
add
fstps
xchg
or
add
mov
gs
jecxz
jnp
movsl
push
ret
pop
xor
pop
cmp
inc
adc
fnsave
adc
dec
push
and
jle
into
dec
decl
mov
xchg
stc
shl
mov
push
jg
dec
cld
cltd
iret
jecxz
or
push
jnp
scas
lret
mov
repz
out
push
add
fnstsw
scas
xchg
sub
repz
xchg
mov
xor
cmp
mov
lcall
dec
inc
xchg
fiaddl
test
lcall
das
mov
mov
pushf
jle
addr16
jp
cmp
scas
or
mov
pop
es
in
hlt
shlb
pusha
es
es
cmpsl
ds
scas
pop
inc
push
mov
and
scas
cld
jmp
push
cltd
mov
int3
dec
xchg
pop
sub
dec
push
xor
loop
xchg
pusha
xorb
mov
mov
andb
loopne
lock
and
shlb
ret
add
adc
inc
mov
mov
andb
loopne
lock
and
shlb
ret
js
adc
inc
mov
mov
andb
loopne
lock
adc
out
divb
les
loop
xchg
pusha
xorb
and
pop
mov
out
push
mov
push
cwtl
jnp
or
cmp
xchg
fcomps
call
push
pop
test
mov
lcall
sbb
sub
inc
cmp
sub
sbb
or
mov
test
mov
lcall
sbb
sub
cmp
enter
lcall
das
and
in
into
adc
sub
shll
in
xchg
and
cmpb
das
mov
and
repnz
rol
xor
std
add
and
xor
mov
cmc
pushf
test
jmp
popf
add
jle
add
insl
cmp
lret
popf
pop
cwtl
aas
sub
stos
jl
inc
mov
lret
aaa
scas
daa
in
pusha
sbb
mov
dec
or
jne
mov
inc
sbb
aaa
jl
lahf
pop
ja
sub
xchg
cwtl
or
push
aad
js
cmp
or
rclb
lret
mov
adc
in
sub
lret
dec
stos
pop
lcall
sbb
sub
cmp
enter
call
push
pop
test
sar
dec
ficomps
repz
cwtl
jno
outsb
enter
dec
fstps
lea
jnp
push
cmp
or
fildll
out
cli
fs
push
mov
cmpl
mov
add
ss
aas
xlat
fisttps
adc
sbb
sbb
fisubrl
lret
enter
call
push
pop
test
mov
lcall
sbb
sub
cmp
enter
call
push
pop
test
mov
pop
test
divl
cmpsl
cmp
inc
sbb
sbb
mov
inc
insb
pop
fisttpll
adc
mov
sti
xor
jne
inc
xchg
push
es
je
and
call
and
push
rclb
pop
pushf
inc
dec
cwtl
cld
fdiv
push
iret
dec
insb
push
inc
and
andl
subl
shll
dec
xor
lods
cmp
mov
mov
dec
pop
and
push
mov
jecxz
cwtl
jae
xor
push
inc
insb
xchg
mov
dec
insb
mov
rcrl
daa
arpl
jl
or
loop
push
cmpsb
jo
dec
sar
or
test
dec
cld
mov
fbld
adc
dec
in
inc
outsl
xchg
adc
cmp
pop
mov
and
es
movl
jl
mov
and
cmpb
scas
or
enter
mov
dec
dec
push
dec
pop
push
cmp
pop
mov
lods
mov
jecxz
cltd
xor
leave
lods
ds
lds
jmp
sub
icebp
mov
mov
sbb
mov
push
xor
jmp
pop
arpl
in
pop
xchg
mov
int
stos
cld
or
mov
sub
mov
jae
js
divb
ret
int3
shll
ljmp
mov
loop
loopne
loop
mov
data16
pusha
rcr
out
fisttpll
cmp
aad
mov
fs
cmp
iret
popf
mov
pop
xchg
inc
xor
xchg
lods
dec
fistpl
popf
mov
inc
xor
aam
repnz
ret
sub
jmp
mov
mov
inc
xchg
cmpsb
clc
in
push
fs
sti
push
mov
sub
cwtl
xchg
rorb
mov
es
inc
sbb
std
or
pop
test
push
dec
add
adc
sbb
and
and
cmp
jle
sub
or
cltd
add
rorl
icebp
in
push
add
sar
xchg
xchg
push
push
cmpsl
jge
into
pop
fwait
mov
mov
scas
adc
int
into
add
jb
fcmovne
in
jno
xchg
in
add
add
xorl
jno
inc
pop
mov
inc
repz
je
fdivp
jb
loopne
sub
pop
adc
xchg
jnp
fcompl
jecxz
stos
addb
pushf
lahf
dec
push
cmp
fdivrp
inc
dec
lods
inc
aaa
push
aad
mov
xchg
std
adc
xor
mov
add
fwait
leave
fldenv
out
xchg
mov
add
cld
push
jo
cmp
out
cmp
aas
sub
imulb
cld
scas
insb
or
ja
or
sub
dec
mov
stos
mov
fstps
clc
ror
add
push
pop
pushf
inc
jb
xchg
or
pop
mov
shrb
mov
je
jl
lods
shr
pushf
dec
mov
mov
test
sub
scas
jge
outsb
mov
cwtl
int
adc
lods
or
mov
lods
insb
jns
xor
in
pop
xor
cld
push
sub
insl
out
jb
mov
sbb
jno
push
inc
dec
cwtl
sbb
sub
xor
rorb
sbb
fidivs
xchg
jns
cld
movsl
pop
add
mov
fs
sbb
push
pop
jne
adc
xchg
add
pop
jg
inc
clc
imul
cmp
pop
adc
imul
mov
and
out
addr16
xchg
or
mov
sbb
cmc
pop
out
inc
stos
cmc
icebp
rcrb
mov
push
mov
jmp
in
icebp
jno
adc
xchg
xchg
test
and
les
push
aaa
lahf
push
cmp
and
fwait
push
out
cltd
jl
dec
pop
das
fdivs
hlt
mov
push
mov
sbb
push
movsl
fbstp
add
jo
rorb
std
push
xor
cmp
scas
popf
xor
xchg
cld
push
and
xorl
les
bound
aaa
cmp
mov
adc
sbb
jns
sahf
and
mov
sahf
pop
or
loop
fdivs
js
into
or
dec
and
setle
pop
sbb
mov
into
or
cmp
xor
mov
add
rclb
in
iret
into
mov
mov
lahf
fidivrs
jl
ljmp
cli
adc
popa
mov
je
popf
mov
stc
imul
gs
jl
sub
stos
ror
jle
cmp
inc
cld
nop
into
int3
sbb
xlat
mov
mov
les
jl
or
das
mov
xchg
pop
xchg
outsb
add
xchg
and
jge
or
sbb
sbb
cmpsl
int3
push
dec
mov
mov
mov
stos
xchg
add
ret
xor
int
outsb
mov
add
mov
sub
and
dec
inc
ss
out
mov
xchg
addr16
and
lea
adc
popf
aaa
popa
xchg
icebp
ret
into
outsb
imul
or
dec
adc
mov
jne
xchg
mov
mov
lods
inc
iret
xchg
stos
pop
jnp
faddl
imul
xor
jecxz
imul
mov
negb
or
inc
pop
call
pop
pop
fwait
scas
data16
adc
into
popa
adc
pop
or
je
mov
mov
aad
addr16
cltd
imul
push
ljmp
inc
push
data16
dec
jg
xchg
pop
xchg
jno
pop
dec
mov
nop
lret
mov
mov
les
adc
popa
dec
mov
ja
mov
pop
and
imul
lret
pop
mov
pop
int
cld
stos
shl
stos
out
add
pop
test
std
xor
push
cmp
negl
lahf
inc
ret
add
add
inc
jg
cmp
sub
adc
fcom
lcall
pop
gs
mov
jg
lcall
iret
arpl
and
and
jno
push
pop
popa
dec
cltd
dec
xchg
insl
rorl
inc
out
ret
stos
inc
pop
xor
jmp
ret
cwtl
xor
ret
lea
lock
enter
ss
mov
sub
mov
enter
mov
stos
call
inc
pop
notl
pop
mov
adcl
cmp
enter
xchg
sub
lea
mov
addr16
sbb
xor
adc
pushf
xor
xchg
xchg
out
cwtl
jbe
cld
cmp
xchg
popa
aam
movsb
repnz
dec
mov
in
int
imul
mov
mov
jg
adc
cmpsl
in
jae
sbb
das
cmp
rcrb
fimull
ret
mov
mov
subb
jge
or
add
xor
xchg
scas
icebp
inc
loope
dec
jle
or
jno
mov
rolb
add
or
test
dec
in
insb
out
cwtl
shrb
das
inc
es
add
ss
scas
cmp
bound
shll
ret
enter
cmp
jmp
cmpsl
xchg
and
stc
cwtl
add
into
xor
sahf
out
test
and
cmpsb
push
ljmp
orb
fcmovnbe
mov
repnz
cmp
pop
sahf
adc
or
es
fadd
sbb
xchg
sub
pusha
rcrb
iret
pushf
push
fidivrl
inc
das
test
jns
inc
sti
sub
sub
je
add
mov
add
cmp
std
fcmovu
test
cmp
cmp
xor
ret
fdivrs
repz
pusha
add
xchg
sub
adc
inc
dec
js
aam
lods
lea
aam
jl
push
adc
je
jae
ss
jnp
jbe
sub
cli
and
stos
or
insl
dec
jecxz
jmp
cmp
dec
mov
pushf
jne
xor
cmp
mov
ljmp
pop
sahf
push
popf
push
xor
dec
jbe
mov
je
or
pextrw
cmp
push
je
mov
xchg
inc
dec
push
loopne
inc
mov
mov
movb
out
lcall
cmp
adc
scas
and
xchg
and
cmp
mov
fisubrl
rcr
in
pushl
sub
fwait
iret
popf
sbb
mov
add
cltd
test
push
rolb
cmp
repnz
sub
aaa
sbb
imul
shlb
xchg
mov
addr16
push
repnz
mov
mov
repz
lock
pusha
popf
lahf
sub
out
in
lods
movsb
cmpsb
aad
mov
test
je
aas
loop
mov
mov
and
push
adc
sahf
push
dec
cli
testb
mov
cmp
cld
int
pop
fdivs
daa
hlt
movsb
bnd
ret
push
arpl
cld
sti
pop
popf
jle
icebp
fs
cs
sub
shlb
pop
jle
cmc
test
xchg
inc
bound
imul
add
jp
rcl
cld
dec
sbb
mov
xchg
sbb
inc
imul
mov
stos
mov
jmp
xchg
clc
js
dec
lock
mov
mov
lcall
add
js
sbb
or
push
in
jnp
adc
aas
daa
stc
int3
jl
pop
and
xor
pop
jl
out
inc
push
xchg
mov
and
sahf
out
imul
sub
enter
das
sub
pop
push
jl
lret
loopne
mov
mov
mov
mov
lds
sahf
addr16
add
sub
inc
aam
dec
nop
in
fiaddl
mov
pop
mov
fwait
and
mov
cmp
insl
pop
push
sub
add
lahf
push
loop
mov
repz
adc
jb
xchg
f2xm1
insb
in
adc
cmp
xor
repnz
pushf
stos
mov
xchg
in
jp
inc
lahf
mov
stos
ja
push
ds
test
inc
ficompl
outsl
fisubs
rolb
add
mov
sarb
inc
daa
scas
je
cmpsl
mov
add
mov
cmpb
sbb
ds
push
sub
dec
jno
jo
fdivl
lcall
xor
les
xchg
cmp
pusha
pop
pop
out
mov
mov
cmp
in
push
jg
inc
lea
push
xlat
loopne
jmp
arpl
mov
mov
out
inc
icebp
jl
inc
sar
push
sub
rorl
sub
lds
fs
mov
jne
inc
scas
adc
inc
push
mov
pop
cmp
fs
pop
or
ds
dec
jb
imul
add
sub
popa
shll
xchg
das
test
adc
push
mov
pushl
cmpsl
sbb
mov
pop
mov
stos
addr16
cmp
cld
mov
divl
jmp
sbb
dec
out
cltd
lock
dec
popa
jle
into
jge
insl
mov
mov
incb
lds
dec
leave
sub
popf
cmpsb
rorl
sub
adc
std
ret
mov
jne
out
sub
ret
or
xchg
push
out
sub
daa
cmp
sbb
arpl
mov
in
jmp
add
mov
inc
sbb
dec
out
or
shrl
xor
xor
push
jnp
adc
push
outsl
es
adc
mov
ret
dec
pop
test
push
inc
mov
mov
mov
dec
test
push
add
sub
mov
or
cmpsb
test
or
fidivrs
mov
mov
mov
adc
in
pop
and
mov
mov
sti
inc
or
xchg
stos
fnstcw
scas
icebp
xchg
pop
aad
hlt
fst
cmc
pop
stc
xor
jmp
mulb
jae
xchg
cltd
dec
add
in
fldl
cmpl
outsl
gs
sub
mov
sahf
push
out
loopne
dec
xor
cmp
sbb
push
ret
data16
ret
outsl
mov
shrb
jg
les
push
fwait
cli
jecxz
mov
xchg
sbb
adc
cmp
mov
adc
lods
out
popl
xchg
inc
loop
repz
push
mov
push
adc
push
adc
jns
out
scas
pop
push
mov
orb
popa
das
jbe
mov
js
adc
mov
add
lods
xchg
push
mov
mov
std
push
mov
cmp
and
jp
gs
into
inc
fstl
mov
jo
cs
mov
jb
xorl
lods
mov
out
push
fstp
sub
push
push
repz
loop
mov
xchg
or
lahf
and
push
lahf
cltd
fsubr
jge
test
push
test
adc
push
sahf
jp
sub
add
adc
outsb
sub
push
adc
dec
cmp
shlb
test
lret
cmp
jbe
jnp
outsb
and
pop
adc
int3
popf
ljmp
mov
dec
and
fcomp
pusha
pushf
jle
js
or
gs
sbb
xchg
movb
popf
cmc
pop
into
sarl
jge
pop
jo
addr16
and
or
lahf
fisubrs
jl
pop
sbb
ret
push
mov
jo
stc
aad
sub
loopne
ljmp
in
mov
pop
stc
imul
inc
fs
inc
pop
xchg
sbb
movsb
inc
lcall
or
lret
dec
mov
fwait
outsb
sbb
xchg
dec
inc
ljmp
in
mov
pop
inc
aaa
jno
dec
push
xor
pop
mov
push
cmpb
aas
orl
mov
es
test
cs
cli
test
outsl
rolb
jg
mov
lcall
ror
jle
pop
sbb
ret
and
or
adc
jne
xor
enter
inc
cmp
pop
sbb
mov
stos
add
adc
cmpsl
inc
imull
jbe
data16
jge
mov
inc
sahf
mov
jae
xor
ror
push
xchg
xor
notl
pop
jae
or
or
or
dec
fwait
out
fs
jnp
xchg
cwtl
fs
inc
adc
dec
daa
jge
xor
mov
pop
xchg
outsb
das
jle
push
xchg
test
mov
mov
shrb
push
pop
add
xor
test
fisttps
pushf
xor
inc
pop
push
int
sub
in
jnp
and
mov
adc
inc
mov
sub
mov
aam
cmp
push
enter
sub
out
insl
mov
test
lret
cmpsl
shrb
loope
lods
mov
lods
adc
adc
mov
out
ret
repz
xchg
xchg
and
inc
sahf
into
loop
push
inc
push
mov
sub
scas
adc
mov
pop
pop
and
les
jne
lock
popf
mov
dec
adc
jns
stc
stos
sbb
stc
out
lds
push
cmp
or
in
lods
lret
ret
rcrl
sub
ds
or
pop
loop
cmpsl
inc
pop
mov
cmp
loopne
xor
pop
inc
jmp
pop
in
pop
push
enter
flds
lods
cmpsb
fbstp
mov
ret
mov
push
mov
jmp
mov
jmp
icebp
xchg
fdiv
mov
jp
mov
push
add
or
mov
inc
mov
clc
dec
cmp
andl
repz
lock
mov
adc
fwait
dec
fsin
sub
and
and
and
or
in
test
out
test
test
xor
fnstsw
aaa
mov
out
je
cmp
fldl
mov
mov
add
sub
inc
add
fwait
mov
xchg
push
xchg
adcb
inc
xor
test
add
push
test
or
mov
loop
shl
lcall
adc
mov
das
aam
cmp
dec
mov
mov
jae
sbb
stc
mov
or
add
or
scas
leave
enter
sub
xlat
or
lock
ss
js
ss
pushf
aam
lcall
orl
and
lea
aam
sbb
mov
pop
mov
popf
and
rcrb
mov
iret
cmpsl
pop
test
aas
sub
aas
jp
fldt
ds
or
mov
jae
xchg
xchg
insl
insl
xor
xchg
lods
icebp
xchg
add
dec
cs
push
inc
pop
adc
pop
cmc
lret
gs
mov
in
mov
es
mov
aad
push
inc
xchg
push
cmpsb
jg
mov
cli
mov
add
into
mov
int
jns
push
jnp
fiaddl
setne
inc
pushf
add
dec
fsubrl
notrack
aam
inc
stc
inc
lcall
das
les
or
inc
bound
jae
es
xor
jae
sbb
push
cmc
pusha
push
adc
nop
mov
shrl
stc
rcll
test
ljmp
jg
inc
cli
int
and
or
or
loope
ret
rcrb
lcall
jle
in
mov
loop
jecxz
in
lods
or
imul
sti
mov
repz
imul
out
ja
divl
repz
sub
aam
or
pop
xor
adc
dec
adc
cs
mov
push
or
data16
dec
lods
mov
xor
xor
xchg
test
es
xchg
lret
add
xchg
cld
xor
mov
arpl
and
push
outsb
aad
orl
sub
pusha
jo
pop
es
out
xlat
dec
xchg
popf
or
xor
dec
movsl
out
dec
pusha
dec
call
push
fidivrl
testl
mov
xor
xchg
imul
in
xor
popa
jo
ljmp
sti
filds
push
fdivrp
mov
dec
dec
or
rclb
repz
fistpl
test
jle
loope
mov
xor
mov
aad
cld
pop
push
test
xchg
dec
call
lcall
and
push
mov
rorl
sbb
popf
push
sti
xor
push
ljmp
js
sbb
shrl
imull
xor
cmpsb
test
pop
ret
not
out
cmp
dec
jmp
outsl
add
add
sar
pop
push
mov
adc
xor
ljmp
cwtl
sub
or
lret
jmp
and
outsl
mov
nop
pop
ja
test
aad
sub
pop
lea
mov
pop
es
mov
jl
xchg
lock
jae
popa
sbb
insl
dec
jno
push
cmp
xor
xor
pop
push
push
inc
movsl
cmp
sub
out
popf
stos
jb
and
and
push
mov
shrb
outsl
les
in
rol
int
rcr
dec
jp
add
and
xor
jge
lods
or
lds
mov
cmp
mov
jg
into
je
out
cli
mov
dec
sarl
es
or
cmp
jmp
or
in
cmp
sarb
divb
xchg
insl
add
jnp
lret
mov
mov
test
xchg
sub
daa
dec
dec
xor
push
sub
cmpb
pop
fidivl
daa
out
or
sub
pop
lret
inc
push
add
mov
fnstsw
jo
push
pop
mov
and
xchg
ficoms
inc
mov
movsb
push
sbb
cli
js
daa
stc
lods
xchg
xor
ja
sbbb
mov
push
sbb
cli
xor
xchg
stos
sub
dec
adc
sub
pcmpgtw
out
jnp
push
mov
lods
pop
adc
xchg
les
cmpl
mov
add
add
aam
or
incb
rcl
add
mov
sub
jnp
jo
push
add
out
mov
add
add
xorb
pop
jno
or
cmc
pop
std
lahf
or
imul
add
mov
adc
xchg
or
insl
pop
pxor
aam
loopne
addr16
inc
add
dec
sbb
stos
pop
mov
xchg
inc
test
lock
subl
test
mov
sub
fstpt
stc
iret
push
lods
subb
jno
jo
mov
push
mov
cmp
sarb
mov
sub
leave
xchg
adc
mov
cmp
sbb
xor
stos
xor
repz
in
shrb
loopne
mov
flds
je
scas
ss
mov
repz
sub
cmpsb
repz
lahf
mov
xor
xchg
dec
nop
cmpsb
aaa
int
cmp
dec
daa
lcall
sub
out
jns
mov
or
sub
mov
mov
or
fbstp
jo
scas
adc
shll
pop
pop
fwait
push
ljmp
enter
call
push
pop
test
mov
lcall
sbb
sub
cmp
enter
call
push
pop
test
mov
sbb
js
or
sbb
sub
cmp
sub
sbb
or
jp
push
pop
test
mov
lcall
sbb
sub
cmp
enter
call
sbb
push
cmp
shll
mov
sub
xchg
in
push
pop
add
push
add
pop
add
test
add
add
add
inc
add
add
add
mov
jge
out
add
mov
add
add
add
push
add
jnp
rolb
push
add
add
and
push
add
add
add
ja
outsb
add
add
test
inc
add
inc
add
pop
add
add
add
add
add
flds
mov
outsb
add
add
jg
and
add
add
daa
add
add
add
add
add
add
add
push
add
mov
add
add
add
add
add
add
add
aaa
add
add
push
add
pop
add
add
add
add
mov
repnz
add
insl
add
mov
jb
adc
loop
pop
add
push
add
add
add
add
add
add
mov
add
add
add
out
add
mov
sbb
js
push
add
add
add
stos
add
add
hlt
add
add
add
add
add
add
push
add
aam
out
add
into
add
add
add
add
inc
add
add
add
add
add
adc
add
add
add
cmp
push
add
add
add
add
add
add
add
add
add
add
add
add
ja
int
mov
rolb
push
add
add
push
add
add
add
add
add
push
filds
push
add
add
add
add
add
sti
add
add
add
add
cld
add
add
fldl
push
add
push
add
sbb
sbb
insb
add
jb
sub
adc
mov
loope
imul
call
add
flds
repnz
repnz
repnz
add
add
add
add
add
test
xchg
add
add
popa
add
add
add
push
add
add
add
std
add
add
repnz
push
add
imul
test
or
add
pop
add
add
add
add
add
add
xor
add
add
jo
dec
add
add
add
add
fldl
lea
in
add
add
add
add
add
add
add
in
add
add
add
add
add
add
mov
int
add
add
add
and
aam
repz
add
add
push
add
add
lods
add
call
add
add
add
xchg
add
add
mov
add
add
sbb
imul
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
pop
add
add
xor
ret
add
add
flds
repnz
jns
test
dec
add
add
jl
add
repnz
adc
add
add
add
push
add
repnz
lods
add
inc
add
add
add
cld
add
add
movsl
add
add
add
pop
pop
pusha
roll
mov
push
jae
sbb
notl
jne
addr16
jecxz
and
add
xchg
clc
int
pop
xchg
pop
je
inc
repnz
jne
pop
testl
and
je
mov
mov
xorb
or
js
stc
add
shl
xchg
lcall
lods
outsl
imul
ljmp
pop
insl
out
das
mov
lea
ljmp
movsb
cmp
jbe
dec
xchg
mov
inc
inc
mov
cmp
jne
jg
adc
pop
es
jno
popf
shlb
pusha
and
repz
mov
and
gs
ja
clc
xchg
test
ret
mov
daa
push
xchg
adc
and
adc
imul
mov
enter
data16
das
or
repz
xor
or
in
cmpsl
cwtl
test
les
adcl
inc
adc
push
pushf
cmp
xlat
sbb
popf
cwtl
mov
out
lcall
bound
xchg
and
int
je
cmp
mov
test
cwtl
push
mov
jne
or
mov
add
negl
pushf
inc
sbb
loopne
cmp
sbb
xchg
icebp
dec
jae
and
or
sbbl
mov
pop
es
scas
aam
outsl
adc
stos
das
adcl
jnp
lahf
sbb
jge
in
xor
or
mov
pop
movsl
add
jl
and
lock
or
sbb
sbb
dec
mov
inc
ret
test
ficompl
popa
cwtl
pop
icebp
jmp
mov
mov
adc
int3
or
cmc
inc
loopne
scas
cmp
pop
cmpsl
jne
mov
pop
subb
dec
adc
mov
xchg
rcll
fists
or
adc
xlat
std
add
push
push
or
adc
mov
cmpl
leave
ss
sti
sub
add
stc
push
dec
ret
inc
xor
frstor
loope
mov
pusha
lods
mov
imul
or
mov
imul
test
cli
xchg
jle
push
jle
mov
xor
call
insl
and
jo
dec
test
mov
lds
in
push
push
addr16
cmp
lret
xorb
xlat
ja
pop
inc
pop
jge
jg
xchg
mov
push
loope
es
push
outsl
aas
cmp
test
icebp
inc
aaa
pusha
and
inc
and
lret
mov
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
