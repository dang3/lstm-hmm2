or
ret
push
call
mov
mov
add
mov
call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
mov
movb
mov
movb
movb
movb
mov
mov
add
push
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
mov
movzbl
sub
je
inc
cmp
mov
jbe
call
mov
mov
movzbl
jmp
movzbl
sub
je
call
incl
call
mov
mov
movzbl
sub
jne
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
push
lea
push
push
call
add
leave
ret
adc
and
add
addl
daa
mov
int3
jecxz
jecxz
adc
and
jae
arpl
mov
lods
and
and
inc
repz
arpl
mov
lcall
pop
fldt
arpl
mov
mov
push
rcrl
aaa
scas
add
xor
push
les
sbb
mov
movsb
or
leave
js
cmp
sti
and
stos
ret
mov
sbb
mov
inc
xor
or
sbb
in
stos
std
dec
arpl
xorl
sbb
in
ud0
rolb
call
les
jl
mov
idivb
cli
repz
es
adc
pop
lock
roll
mov
cmp
int3
pop
scas
sub
ret
js
jecxz
inc
push
mov
ret
xlat
lods
adc
ds
xchg
mov
lret
push
lcall
repz
insb
jecxz
je
fsubrl
lods
pop
inc
data16
mov
jnp
imul
jnp
mov
fiaddl
mov
jae
jp
mov
fwait
sbb
dec
fistpl
imul
icebp
push
push
and
and
xchg
aaa
movl
sbb
cli
ljmp
inc
lea
xor
shlb
data16
loop
shll
test
test
pop
jbe
outsl
sbbl
out
loopne
ret
jae
arpl
xchg
adc
and
push
ret
inc
repz
arpl
xchg
add
push
roll
jae
arpl
xchg
adc
and
push
ret
inc
repz
arpl
xchg
sub
mov
mov
jno
cmpsb
cld
mov
ret
jno
jne
fs
sub
ds
loopne
jg
inc
movsb
sahf
pop
lret
fcmovbe
xor
add
dec
movsb
push
imul
xor
mov
mov
cvtpi2ps
mov
adcl
bound
hlt
daa
test
pop
popf
jns
adc
jns
jae
push
xlat
addr16
mov
pushf
mov
mov
sbb
jg
mov
and
push
sbb
inc
mov
or
pop
inc
mov
iret
push
es
imul
adc
and
out
xor
mov
add
dec
dec
popfw
mov
int
lahf
jne
and
and
and
fs
int
mov
aad
stos
cmp
enter
fsts
test
and
mov
rcrl
inc
ret
test
cmp
dec
mov
jmp
rorl
or
into
mov
in
out
pop
cmp
jecxz
sbb
out
adc
repz
insb
xchg
adc
lods
cmp
daa
cmpsl
sub
cld
and
nop
dec
xlat
in
lcall
inc
cmp
xor
leave
ljmp
mov
add
pop
xlat
inc
fs
jno
xor
cmp
frstor
test
adc
leave
mov
pop
aam
cli
add
pop
and
sbb
dec
out
addr16
ret
add
ss
or
xchg
pop
and
nop
cmp
pop
mov
adc
mov
mov
sub
push
dec
and
add
aas
lods
ds
sbb
stc
scas
sub
add
mov
sub
je
leave
enter
sti
mov
arpl
jnp
push
pop
or
pop
sbb
adc
adc
ret
addr16
jmp
pop
cmp
int
movsl
in
mov
pop
test
push
push
and
enter
dec
adc
push
and
xor
dec
repnz
cmp
frstor
cmpsl
pop
shl
sbb
push
mov
fstpt
fdivrs
cmc
xchg
mov
insl
in
test
fstpt
xchg
ret
inc
and
shlb
xchg
ja
adc
jo
lea
rclb
push
xor
and
ja
sbb
int3
pusha
pop
push
jp
ret
rol
loope
ret
dec
jo
or
inc
jmp
ret
sbb
insb
mov
out
mov
pop
pop
ja
into
arpl
pop
jle
in
les
clc
pop
sbb
xor
je
fwait
mov
aad
call
push
cmc
xchg
fistpll
inc
inc
inc
movsl
jbe
pop
dec
push
leave
bound
sub
push
je
mov
xor
iret
leave
ret
pop
jo
mov
neg
std
shrl
dec
add
imull
mov
fcoms
test
lcall
sar
mul
jp
pop
adc
fiadds
je
cmp
dec
mov
std
data16
lods
mov
aaa
mov
mov
sbb
loopne
inc
sbb
repz
out
pop
call
mov
ljmp
rorb
fwait
in
fscale
rorb
cld
mov
outsb
lods
pop
cltd
pop
and
vaddsubps
sar
or
push
sbb
inc
push
cmp
out
fimull
jae
cmp
stos
stos
inc
xchg
scas
xchg
out
push
adc
jnp
cmp
out
pushf
adc
or
repz
sbb
mov
dec
out
rclb
mov
push
aas
push
call
and
dec
jne
mov
addl
and
test
sbb
jae
negb
call
adc
jecxz
dec
mov
xor
jbe
clc
xor
popf
and
adc
pop
push
cmp
loopne
movsb
scas
cmp
and
pop
push
mov
push
outsl
sahf
dec
sti
or
cwtl
or
hlt
ret
sbb
jnp
aaa
adc
imul
iret
es
mov
dec
mov
and
jle
clc
adc
add
push
es
sbb
mov
push
mov
push
mov
scas
sbb
inc
mov
cmpsl
jg
mov
cs
inc
sub
sub
ds
insl
fs
dec
push
adc
incl
ret
ret
mov
dec
in
jne
cmp
add
stos
inc
xor
jp
xchg
movsl
aad
jge
push
or
cltd
pop
xchg
xchg
fistps
mov
cli
dec
sahf
xchg
add
mov
add
ljmp
mov
mov
aas
lcall
mov
push
lcall
sbb
jmp
push
aas
sti
sbb
xor
cmpsb
mov
bound
xor
adc
mov
int3
lret
addl
cmp
loopne
mov
nop
sub
arpl
inc
shlb
push
or
popa
lcall
and
push
jne
mov
dec
lds
push
rclb
subb
orl
insl
xor
cwtl
sbb
adc
jp
repnz
sbb
pushf
stos
push
mov
cmc
jo
into
add
mov
xor
aas
bound
hlt
add
cmpsl
ret
imul
mov
mov
dec
repnz
jmp
aam
aaa
jge
inc
out
sbb
je
xchg
and
mov
dec
jno
xchg
dec
mov
jb
vdivss
fimull
adc
pop
sbb
stc
xorb
xchg
xor
add
ret
sahf
aaa
fdivl
jne
scas
andl
jge
shrb
adc
idiv
sbb
aaa
mov
xchg
out
lock
and
out
mov
pop
out
inc
out
dec
pop
lods
pushl
mov
mov
int
mov
in
add
cmp
loopne
and
rorb
ja
out
out
xlat
shl
sbb
dec
dec
inc
rorb
stos
mov
xchg
scas
push
add
pop
les
push
popa
lods
popa
fsubrs
add
jl
movsl
loop
sub
fnsave
dec
gs
sahf
pop
in
pusha
into
push
adc
enter
insb
js
xchg
xor
ret
xchg
adc
ss
cmc
aam
nop
xor
push
out
int
out
and
and
mov
fsubrl
loop
cmp
in
fstpt
cltd
ret
test
and
jne
into
lea
les
out
repnz
in
clc
outsb
jb
and
inc
push
or
mov
push
pop
call
fdivrl
lcall
cmpsl
mov
xor
sbb
sbb
arpl
andb
mov
mov
add
adc
aam
nop
je
fdivrs
dec
sub
outsb
dec
sub
or
mov
push
ljmp
and
push
mov
lret
fdivr
pop
in
push
cmpsl
fistl
inc
test
in
call
repnz
out
outsb
insb
daa
xchg
mov
jnp
out
dec
fisttpl
or
jmp
cld
mov
add
outsb
shll
mov
cmpsl
popf
repz
xor
sti
mov
movsl
mov
iret
int
xchg
dec
fwait
push
movsb
outsl
push
fsts
das
lods
push
das
stos
pop
sbb
jbe
dec
dec
cmovl
xor
xchg
jg
cmpsl
shlb
lret
xlat
shll
xchg
movsb
mov
repnz
aas
int
ds
jno
lret
push
popa
fisubrs
jl
or
mov
adc
mov
insl
sti
sahf
vpshufd
add
mov
and
pop
arpl
inc
ficomps
repz
arpl
jb
out
cmp
je
or
nop
in
inc
pop
and
pop
repnz
mov
mov
scas
mov
sti
pop
cld
xorl
mov
in
pop
movsb
test
sub
outsb
dec
rol
jbe
lea
inc
mov
push
cmp
test
stc
xor
shl
jo
dec
js
mov
sub
ret
fcomi
mov
cmc
or
int3
xchg
notl
lahf
jg
sub
aam
int
lret
loope
push
mov
hlt
adc
mov
fsubrp
jno
cltd
into
dec
pop
add
cmp
sbb
je
leave
ja
pop
ljmp
pop
nop
sahf
enter
cmpsl
jecxz
push
call
imulb
mov
std
xchg
insb
arpl
fstps
idiv
call
or
push
mov
push
movb
inc
fs
cmp
add
adc
loopne
push
mov
jo
test
dec
ds
dec
decl
push
fdivl
mov
dec
cltd
push
cmpsl
imul
inc
rcl
negl
jge
out
popa
repnz
jp
jg
fwait
out
insb
mov
insl
dec
cmc
enter
inc
outsl
jno
fsts
or
lret
sbb
cltd
sbb
jae
mov
inc
lods
dec
sbb
int3
push
jp
and
mov
movsl
pop
jmp
push
insl
mov
dec
cmp
xchg
outsb
inc
lcall
adc
in
cmp
sahf
push
add
lret
inc
mov
fimuls
lcall
sbb
loopne
shlb
test
xchg
jns
icebp
jns
hlt
xchg
aas
push
adc
ss
imul
repnz
mov
stos
pop
jnp
sbb
jae
fcompl
mov
pop
pop
negb
aam
mov
loopne
icebp
fisubs
cmpsb
pop
mov
mov
insl
inc
out
mov
in
out
push
daa
xor
xor
cli
pop
iret
push
lret
fildl
push
jg
lods
mov
push
inc
xchg
test
cmp
or
ljmp
in
adc
mov
pop
jnp
mov
popf
out
lea
je
push
or
inc
xor
insl
inc
mov
lods
mov
push
mov
lods
imul
pop
pop
cmpsb
mov
sarb
lea
jno
xchg
dec
xor
push
adc
in
or
ljmp
call
imul
cmpsl
cmp
lods
cltd
push
lcall
nop
xor
cmp
fidivl
insl
addr16
outsb
cmc
sbbb
xchg
cmp
dec
mov
xlat
mov
pop
loop
or
mov
cwtl
push
dec
or
xchg
jne
test
out
in
mov
mov
ljmp
push
imul
cli
and
add
pop
aaa
enter
popa
pop
aad
xchg
push
in
pop
scas
shlb
ret
mov
in
cmp
adc
pop
sub
pop
add
push
mov
inc
out
pop
cmpsb
cwtl
add
rcrb
fimull
stc
leave
sbb
icebp
xchg
xor
js
pop
push
dec
pop
ljmp
mov
fildll
leave
iret
mov
xchg
and
dec
push
jno
dec
sarb
addr16
mov
repz
xchg
sbb
mov
xor
xlat
in
pop
or
mov
cmpl
push
sbb
lret
leave
fisttps
leave
shlb
mov
mov
sahf
leave
dec
mov
push
fidivrl
test
ss
mov
mov
dec
lock
out
popa
cld
rolb
add
push
inc
xor
fcomip
cmp
mov
adc
adc
es
push
jecxz
and
add
push
pop
adc
jl
test
push
cmp
rorl
sub
sub
mov
xchg
movsl
popf
mov
shlb
mov
lea
pop
xchg
mov
mov
and
sub
adc
add
lea
or
fwait
xor
lods
test
fsubr
add
xlat
push
popf
or
shll
sti
shrl
jo
mov
ss
cmc
in
pop
sub
fwait
pop
out
pop
mov
pop
js
repnz
sub
cmp
mov
jb
cs
pop
push
mov
bnd
jbe
fcoml
daa
insb
mov
rcl
sbb
mov
sbb
and
sbb
dec
adc
pop
jns
add
add
mov
ljmp
cli
push
add
stos
lea
or
cmpsl
or
jl
push
push
mov
insb
sub
cmp
xchg
enter
clc
xor
mov
push
jb
cmp
or
sub
loope
sub
fisttpll
mov
addps
xlat
pop
fistl
xchg
pop
pop
pusha
pop
mov
std
std
sub
popf
mov
fwait
nop
pop
dec
sub
mov
xchg
test
fidivl
inc
or
icebp
add
shrb
lret
arpl
cmp
cmp
nop
push
ret
dec
xchg
cmpsl
mov
clc
push
add
rclb
pushf
std
sub
fsubs
pop
dec
sub
cmpsl
mov
sbb
push
mov
mov
out
push
mov
adc
xor
scas
push
ljmp
add
jmp
fcomps
rcll
ret
sti
push
hlt
sub
and
lds
ficoml
lea
pop
pop
add
jecxz
pop
and
push
push
jl
sbb
push
mov
sti
pop
hlt
lahf
repz
sbb
add
mov
xchg
out
mov
aad
insl
shlb
shlb
stos
stos
mov
push
ret
mov
inc
in
and
push
add
orl
scas
out
add
cmp
xlat
push
dec
xor
fcmovne
cmpsb
jo
sti
inc
ffree
decb
movsl
and
int
rcrl
xchg
loope
aas
cmpb
mov
sahf
or
movsl
ret
test
dec
ds
data16
push
rclb
dec
bound
push
add
data16
outsl
test
cmc
cmpsl
leave
repz
add
xchg
scas
popa
pop
jp
das
sub
repnz
sbb
add
jne
bound
inc
fwait
inc
lret
cli
xchg
inc
loop
shll
add
cmp
xor
daa
xchg
mov
imul
inc
pop
mov
push
xchg
int
and
mov
int
gs
jmp
jne
mov
out
out
push
pop
cmp
inc
jne
clc
mov
int
xor
ds
idivb
ret
loopne
int3
ljmp
jmp
sub
sahf
in
mov
dec
and
pushf
enter
mov
push
pop
dec
mov
cld
add
out
andl
dec
filds
scas
lahf
adc
hlt
inc
dec
push
fstps
popf
cmp
jge
add
popl
ficoml
or
mov
mov
mov
outsl
inc
cmpsb
pop
or
loope
add
daa
mov
insb
add
sbb
stc
pop
loope
out
xlat
add
mov
data16
and
pop
jnp
mov
shl
push
and
add
pop
sahf
or
cli
fimuls
jle
insl
pusha
sbb
mov
sbb
cmp
cmp
sub
jl
int3
sbb
sbbl
xchg
bound
and
mov
jecxz
xor
out
lret
and
adc
pop
and
inc
mov
or
push
xchg
adc
xchg
hlt
xor
call
mov
jecxz
sahf
adc
mov
mov
test
dec
mov
pop
inc
and
popa
andb
mov
jp
test
clc
push
movsl
mov
xchg
cltd
sarl
push
and
xrelease
es
dec
inc
mov
test
lahf
out
js
lea
dec
jne
fistpl
movsl
imul
daa
mov
sbb
mov
mov
jle
pop
fucomp
shll
out
push
jns
sub
mov
lret
sahf
lods
jecxz
scas
sarb
pop
jecxz
loop
loop
test
xchg
xchg
lock
cmp
adc
dec
ficoms
popa
push
dec
test
sbb
add
adc
jns
mov
leave
xorl
push
rcr
outsl
push
ss
jmp
sub
pop
jmp
insl
push
pop
rcll
lea
test
ss
xor
leave
push
pop
jmp
or
andl
flds
pop
movsb
enter
push
dec
or
pop
and
mov
divb
xor
lods
mov
stos
aam
pop
fisttpl
pusha
decl
es
cmc
adc
shlb
pop
push
test
pop
or
movsb
jecxz
mov
lea
addr16
sarl
jns
das
jne
jns
push
and
sub
pusha
xor
into
sub
xchg
inc
push
mov
dec
fstpl
mov
test
mov
imul
sti
xor
in
js
jp
sub
xchg
push
fwait
int3
hlt
jno
mull
stos
mov
mov
lret
mov
inc
outsb
imul
push
movl
cmp
adc
and
imul
out
iret
enter
pop
mov
ljmp
sbbb
and
mov
aaa
jnp
mov
dec
push
or
mov
lret
push
ss
aam
inc
pusha
fs
js
arpl
mov
insb
xor
xchg
inc
movsl
push
lock
ja
mov
push
adc
rorl
or
mov
pop
mov
lods
movl
mov
pop
xor
repz
push
dec
gs
and
into
adc
mov
clc
stc
int3
cmpsb
test
pop
push
fistps
sub
mov
xor
cmp
rcl
scas
dec
out
inc
aam
jp
mov
nop
insl
sti
mov
movsl
out
jecxz
lcall
jbe
dec
cmp
pop
fisubl
or
into
adc
and
pop
cltd
iret
sbb
pop
pop
hlt
aas
and
js
nop
xchg
pop
lock
aaa
sub
or
fs
int
andps
rorb
ljmp
scas
xor
lods
bswap
inc
push
dec
aas
xchg
mov
sahf
out
fcmovnbe
add
cltd
pop
xchg
dec
mov
jecxz
mov
xchg
jns
int3
shrl
test
cli
ret
rcr
test
xor
mov
sub
out
lea
push
pop
xor
cmp
insb
popf
add
lahf
repnz
mov
in
adc
add
adc
mov
xchg
lock
push
add
sub
dec
and
std
leave
pop
loopne
inc
mov
sub
data16
cltd
jno
xor
repnz
lods
rcr
loopne
mov
int
in
cmp
incl
cmc
sahf
and
pop
inc
xchg
call
cmp
mov
adc
cs
jmp
add
push
xor
add
mov
inc
xor
cwtl
mov
xchg
jl
sbb
mov
data16
lock
and
cmp
imul
test
mov
mov
fdivr
pushf
mov
mov
or
xchg
je
jae
movsl
sbb
cwtl
lret
and
rol
pushf
icebp
lods
cld
mov
fisubrl
cmc
xor
bound
fdivrs
lods
fwait
shlb
jae
addr16
pop
loopne
shl
insl
mov
scas
icebp
cmp
testb
les
pop
xor
cmc
movsl
mov
popa
sarl
and
fsubp
sbb
dec
pop
dec
gs
pop
sbb
scas
sbb
xchg
or
lret
add
inc
call
cmp
test
lea
jno
sub
aad
aad
pop
push
or
fsts
dec
mov
push
pop
mov
and
push
repz
in
xor
addl
dec
outsl
cmp
lret
and
into
out
es
xchg
jns
lods
adc
cwtl
jl
aad
dec
in
jmp
jp
inc
hlt
push
jo
in
sub
sub
add
cwtl
adcb
push
into
movsl
testl
gs
jnp
ret
loope
jae
sub
aam
add
mov
outsl
mov
es
push
ja
jl
mov
cmp
or
fcoml
push
out
and
rcll
pop
xor
div
pop
jmp
sbb
xchg
lds
roll
xor
test
aam
inc
and
sub
inc
xchg
outsb
in
sub
xlat
push
adc
ja
shlb
mov
cmp
jb
pop
and
cld
inc
add
push
stos
pop
mov
dec
addr16
pop
push
mov
cmpsl
mov
sbb
and
add
jmp
call
xchg
shlb
sub
or
lret
int3
xchg
dec
rol
rcrb
xchg
add
lods
fnsave
in
jmp
aad
or
xchg
mov
fldl
jge
ret
add
mov
dec
sub
dec
add
xor
jmp
int3
xchg
cmp
jge
xchg
pusha
imul
in
add
adc
mov
mov
imul
mov
xor
lret
dec
xchg
push
cmpb
or
lock
das
popa
stos
out
and
mov
mov
add
inc
pop
push
js
cli
test
imul
inc
ficompl
cwtl
cli
gs
fwait
jmp
xchg
cmpl
and
jae
arpl
xchg
adc
and
push
ret
inc
repz
arpl
xchg
add
push
roll
jae
arpl
xchg
adc
and
push
ret
inc
repz
arpl
xchg
add
push
roll
jae
arpl
xchg
adc
daa
rcll
inc
repz
adc
xor
inc
ret
repz
insb
adc
xor
cmp
or
sbb
mov
sub
movb
call
mov
pushl
mov
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
cmp
or
sbb
pusha
pop
push
adc
push
pop
stos
scas
mov
lahf
jmp
iret
sub
cmp
or
sbb
imul
pop
test
cltd
lahf
jmp
sub
cmp
or
sbb
imul
pop
test
jmp
lahf
jmp
mov
pop
pusha
or
dec
data16
pushf
mov
xor
sbb
je
sahf
sbb
imulb
loopne
in
jns
mov
mov
adc
mov
mov
lahf
mov
arpl
push
jae
loop
scas
orl
mov
push
lods
inc
cltd
dec
sbb
call
xor
push
sub
push
mov
add
jg
rcrb
je
shrl
iretw
mov
xor
jp
mov
loopne
outsb
pop
push
pop
rcr
test
mov
add
adc
jns
ss
push
adc
imul
repnz
cmp
out
mov
or
fcmovnu
fsubrp
das
cmp
or
sbb
imul
pop
test
cltd
lahf
jmp
iret
fnstenv
dec
pop
jbe
add
jg
add
psubusw
fmul
cli
out
fldcw
mov
sahf
pop
das
dec
cmp
or
xor
or
sbb
fcmovnbe
fmulp
hlt
out
cltd
lock
mov
dec
cmp
jl
sub
jns
dec
dec
pop
pop
test
cltd
lahf
jmp
iret
sub
cmp
or
sbb
imul
pop
test
cltd
lahf
jmp
iret
sub
pop
jbe
mov
mov
sbb
cltd
sbb
filds
jne
cwtl
mov
push
scas
and
outsb
outsb
jnp
ret
ja
inc
xor
lods
ja
jmp
sbb
shrb
inc
iret
leave
movsl
adc
mov
pop
pop
cli
std
push
inc
fimull
adc
shll
push
loope
mov
fbld
xchg
adc
xor
mov
or
xor
ss
xchg
push
mov
out
or
sbb
ss
jecxz
mov
ja
out
lods
jle
mov
jns
sbb
ljmp
test
fs
pop
dec
out
in
in
mov
add
sub
push
or
std
inc
rcr
adc
pushf
xchg
xor
jmp
test
push
cmpsl
jl
ds
and
shl
jmp
clc
mov
mov
ret
push
call
xor
arpl
xor
lds
push
jno
jg
lret
shlb
xor
or
call
test
andl
and
cmp
xchg
xor
sahf
xchg
lea
pshufw
and
mov
lock
pop
jecxz
out
xor
test
jns
lods
inc
inc
inc
cwtl
pop
mov
pop
int
sbb
pop
pop
call
dec
add
push
pop
fisubrs
adc
mov
and
jmp
pop
es
xchg
iret
mov
mov
addr16
lret
or
push
dec
cwtl
test
or
mov
xor
pop
movsl
popa
cmp
es
bswap
cld
add
dec
sahf
push
mov
mov
pop
xchg
cmp
adc
jge
and
or
sbb
ror
mov
incl
cmp
inc
xchg
inc
xor
xor
loopne
inc
dec
nop
test
stos
push
mov
sbb
mov
mov
xorl
jne
push
pop
mov
fldpi
cmp
stos
mov
push
jp
sbb
jge
mov
push
ret
rolb
xor
leave
ds
jbe
xor
pop
leave
outsb
scas
cmp
cmp
lahf
test
incl
lods
cmc
pop
push
mov
sub
and
icebp
push
ret
xor
jbe
dec
out
sahf
movsl
mov
sub
lcall
loop
repz
mov
enter
cmpsl
cmp
xor
mov
fildll
jno
pop
lcall
push
push
xor
aam
or
xor
cmpsl
pop
jne
lods
lret
cwtl
mov
cmc
cltd
lahf
inc
jno
shl
das
jnp
int3
ret
mov
int
stos
add
sbb
lahf
cmc
jnp
cmc
out
cli
out
xchg
scas
xchg
push
les
mov
mov
jp
xchg
pusha
stos
xchg
sbb
std
xchg
nop
in
daa
jge
mov
dec
jbe
loope
dec
test
ds
ret
or
xor
daa
push
loop
push
cmpsl
lret
pop
sub
cmp
dec
cs
push
mov
sbb
ljmp
incl
push
dec
or
jl
mov
dec
leave
out
daa
hlt
popw
mov
jb
popf
pop
jae
fldt
sub
mov
xor
insl
jmp
sub
jmp
adc
mov
aam
and
jae
or
lret
test
mov
push
adc
jb
xor
cmp
sub
movsb
xor
adc
ret
adc
jae
notb
loope
jne
shl
or
cltd
lcall
and
sub
pop
xor
jge
or
pop
ret
out
fidivl
lcall
add
hlt
jmp
js
mov
cmp
scas
and
xlat
pop
jo
sub
aaa
addb
inc
push
int3
in
insl
fdivs
aaa
sbb
jo
movsl
in
mov
push
std
out
pop
imull
xlat
mov
insb
iret
idivl
lcall
shlb
into
inc
inc
pop
mov
add
adc
les
mov
mov
cmc
xor
dec
push
shll
jg
mov
push
bound
dec
cmp
sub
aas
mov
push
sti
pop
imul
jecxz
xor
aam
cmc
cld
cmp
xor
push
jno
rcrb
and
push
insl
pushl
adc
sbb
aad
lds
push
ljmp
sub
and
add
jg
fwait
stos
xchg
mov
jne
mov
sbb
jnp
adc
imul
cmpsl
je
fildll
xor
push
push
fs
and
push
adc
rorl
paddusb
in
jle
aam
and
mov
adc
je
insb
jo
pop
ljmp
cltd
jge
push
adcl
fldl
addb
leavew
and
push
add
repz
pop
in
pop
sub
rorb
test
aad
xor
into
in
pop
test
cld
pop
ss
ret
mov
stos
in
imul
push
dec
testb
jl
inc
mov
adc
xchg
lods
push
mov
loop
cmp
sub
fiadds
js
and
inc
outsl
sbb
roll
add
push
mov
loope,pn
call
push
push
mov
stos
addr16
jb
in
add
stc
dec
insb
lahf
aad
add
popf
cs
xchg
outsl
lahf
xchg
sub
scas
add
lret
call
nop
rcrl
cs
arpl
fcmovnbe
repz
adc
adc
test
stos
mov
gs
call
mov
add
daa
cmp
pop
mov
mov
mov
push
movsl
outsl
mov
pop
cli
jmp
push
cmc
cmp
push
mov
pop
inc
mull
mov
jb
mov
pop
and
adc
xlat
xlat
fs
jecxz
xchg
mov
js
mov
sbb
jp
js
fistps
andnps
xchg
inc
ret
push
movsb
adc
mul
xorb
and
and
in
mov
and
or
lock
mov
shrb
pop
mov
pop
ficomps
loopne
mov
inc
or
popa
int3
mov
inc
mov
paddsw
jmp
cmp
popa
cld
jg
loop
or
sub
int
lret
test
adc
sbb
das
or
repnz
mov
sub
mov
push
mov
fwait
sub
or
add
and
stos
sbbl
adc
dec
jb
imul
je
jp
stos
loopne
ljmp
insb
add
dec
push
add
out
int3
jmp
cmp
sahf
and
xchg
pop
aaa
sbb
dec
inc
cmpsb
js
jmp
mov
xchg
push
add
inc
clc
xor
mov
dec
xchg
adc
inc
int3
push
or
adc
mov
pop
pop
aam
int
push
push
sub
push
xchg
add
loope
test
pop
sub
js
in
sub
add
ret
jp
dec
rolb
inc
loop
aaa
mov
push
test
gs
sbb
mov
mov
mov
push
jo
sahf
mov
xchg
mov
mov
scas
lcall
sub
daa
and
or
cltd
int3
mov
je
flds
lods
pusha
sbb
fdivs
stos
cltd
shl
xchg
dec
push
testb
rorb
sbb
mov
mov
shlb
movsl
adc
test
fsubrs
and
push
push
je
sub
jp
push
insl
inc
add
mov
mov
jl
jge
fildl
add
xor
iret
stc
mov
call
xchg
sub
and
test
into
ljmp
dec
movsb
lods
or
sub
rorl
imul
hlt
jnp
ja
into
fildl
adc
mov
xchg
ret
hlt
stos
xor
and
xchg
mov
or
push
jg
sub
fcmovnbe
dec
cmc
ss
ja
xlat
test
and
stos
test
es
cld
jbe
shrl
ljmp
adcb
lods
jae
dec
mov
dec
cs
bound
push
inc
nop
in
adc
and
sbb
jmp
jno,pn
cmp
push
inc
sbb
lcall
xchg
mov
in
pusha
dec
pop
mov
aam
lods
push
mov
pop
pop
in
lcall
sarb
jle
jns
pshufw
call
jle
sbb
cltd
push
shlb
aaa
add
inc
in
fnstcw
push
out
inc
mov
xor
les
lret
jmp
xchg
fbstp
jp
inc
aam
les
lcall
pusha
jae
xchg
inc
lret
lret
dec
das
data16
ss
notb
dec
div
iret
dec
scas
loope
into
cmp
negb
cs
pop
add
stos
shrb
iret
mov
add
lock
and
push
pop
mov
mov
sbb
dec
sbb
cs
or
je
popa
pop
into
mov
jne
cld
xchg
or
cli
ds
fs
jb
add
or
push
mov
movsb
hlt
jp
aad
outsb
push
enter
mov
jecxz
jb
sub
adc
inc
xor
mov
mov
mov
jbe
imul
mov
stos
dec
hlt
adc
lret
jne
aam
inc
xor
xchg
push
mov
push
pushf
inc
sbb
daa
sahf
aam
scas
rolb
jns
xor
xchg
jl
cwtl
sbb
inc
pop
inc
scas
xchg
outsl
jb
cltd
jno
aas
addr16
fs
and
cli
test
jae
adc
xor
or
rolb
out
pop
dec
cld
jg
ret
push
fcomps
mov
bound
adc
mov
pop
mov
notb
jns
lahf
scas
pop
loope
out
mov
dec
iret
andb
outsl
outsb
test
loop
add
mov
lods
test
xchg
ja
inc
jl
aaa
repz
or
test
sti
adcl
mov
pop
xor
sub
sbb
xor
vpmacsdd
xor
out
shll
sub
push
and
push
jns
dec
lods
cmp
movsl
cmc
push
and
test
or
in
fs
out
cmp
mov
ret
stc
jmp
js
js
mov
js
pop
and
cmp
and
gs
mov
mov
pop
mov
hlt
mov
cmp
push
pop
cmpsb
push
int
adc
je
andl
pop
inc
imul
inc
cmp
mov
arpl
cld
test
dec
pop
aas
mov
out
pop
and
push
or
fldl
jae
adc
sub
lods
cmc
fisubrs
jg
in
imul
mov
adc
add
mov
xor
ss
hlt
ljmp
mov
sarl
leave
push
pop
inc
loop
jb
fwait
enter
jp
fbld
push
fs
inc
or
fadds
pop
in
push
or
pop
rclb
inc
insb
sbb
cmpsl
outsb
call
insb
inc
mov
adcl
inc
aas
sub
add
cmp
inc
lds
dec
adc
lea
rcrl
and
push
jecxz
push
jnp
pop
lock
xor
rorl
xor
setnp
jp
push
xchg
lods
push
mov
das
rcr
std
imul
aam
cmpsb
add
jg
xchg
xor
sbb
sbb
leave
std
xor
dec
mov
mov
lea
mov
sbb
mov
pop
xor
xchg
nop
iret
pop
cmp
mov
xlat
inc
and
fucomi
mov
and
ljmp
push
xor
cmpb
fs
out
xchg
stc
pop
outsl
lea
iret
inc
ret
mull
cmp
outsl
jl
loope
mov
push
out
scas
xchg
xchg
add
icebp
scas
dec
enter
fimuls
sbb
ret
insl
inc
mov
imul
test
adcl
push
outsl
xor
xlat
mov
inc
cmpsb
add
andb
call
iret
sbb
loop
and
repnz
adc
cs
jge
repz
or
cmpsb
mov
lds
pop
fimull
pop
mov
inc
jne
loop
mov
cmpsl
cmp
popa
stc
insl
inc
sbb
xchg
lret
jecxz
bound
movsb
pop
jle
cli
sbb
adc
xchg
icebp
out
dec
sub
and
push
push
and
std
mov
xchg
mov
in
outsl
sti
arpl
ret
sub
xor
mov
sub
pop
fdivr
icebp
mov
and
in
scas
lea
push
push
cmp
cmp
movsb
hlt
pusha
inc
pop
add
lock
cmp
stos
scas
push
xchg
mov
subl
inc
sahf
ja
in
xchg
adc
pop
push
adc
sub
cwtl
or
sub
cmp
scas
out
aaa
inc
jge
daa
cmpsl
mov
dec
fwait
mov
mov
pop
loope
cli
daa
inc
mov
pop
mov
mov
adc
xchg
sub
out
mov
pop
outsb
xchg
pusha
loop
push
in
add
mov
xchg
xchg
loop
mov
and
push
cltd
jmp
int
bound
in
xor
lock
mov
dec
or
ljmp
adc
lcall
ja
jmp
rcll
loope
push
std
aaa
dec
fisubl
icebp
bound
cmpsb
xlat
dec
das
nop
dec
movsl
dec
scas
mov
mov
nop
popa
jmp
dec
jo
in
pop
inc
cs
lcall
pop
push
rcrl
mov
sahf
cmp
inc
cmp
cli
lea
jl
push
outsl
sub
cs
ret
mov
inc
pop
adc
xchg
inc
popf
scas
adc
xor
mov
shlb
dec
pop
shrb
pushf
add
adc
sub
add
insb
push
mov
ret
jecxz
jmp
adc
push
cs
mov
fadds
add
cmp
std
add
cli
or
icebp
add
jle
dec
xchg
adc
aam
data16
pop
sbb
daa
xchg
out
pop
mov
int
sarl
stos
xchg
mov
dec
mov
pop
lret
pop
rolb
lret
ljmp
dec
mov
sbb
dec
inc
ret
xchg
adc
inc
mov
inc
mov
sub
mov
push
out
fildll
jge
mov
dec
mov
mov
adc
bound
idivl
leave
mov
je
aas
jne
xor
push
inc
or
fiaddl
adc
orl
lcall
out
dec
negb
ret
cmp
das
mov
push
test
repnz
nop
mov
fidivs
mov
sbb
cltd
xchg
leave
pop
push
dec
mov
sbb
shlb
pop
lcall
xchg
ss
adc
or
jp
fsubl
sub
cwtl
jl
insl
sub
call
adc
jp
mov
imul
ret
pop
fwait
out
mul
sub
sub
pop
sarl
push
and
or
mov
mov
jg
mov
adc
xchg
in
xor
test
shll
sub
imul
add
push
mov
insl
mov
and
lods
test
lock
test
movsl
pop
and
lods
inc
out
mov
outsb
push
push
movsl
mov
sahf
cmp
test
or
lea
lods
mov
mov
sbb
push
sub
cmp
dec
out
jae
mov
cmp
xchg
adc
out
and
mov
ss
popf
dec
cmpb
sub
mov
arpl
out
cs
lret
jo
int3
ficomps
jns
cmp
pop
lcall
loop
lret
cwtl
fwait
enter
cmpsl
frstor
pusha
rcrl
fldcw
das
mov
sti
jl
lds
xor
and
mov
push
cs
shlb
cltd
dec
sbbb
pusha
mov
or
mov
dec
xlat
fdivr
xchg
fdivrs
inc
js
fs
mov
push
mov
mov
jmp
test
and
push
rcrl
jmp
cmp
rcrl
ss
push
cmp
sbb
stos
cmc
add
and
in
lcall
fisttps
inc
bound
es
or
pop
cs
inc
inc
fdivrs
add
pop
ss
mov
dec
jb
lea
icebp
mov
push
out
fcompl
in
or
hlt
mov
rorb
push
dec
fs
scas
cwtl
imul
cmp
jmp
dec
sub
das
inc
mov
mov
dec
icebp
add
stos
cmp
fldt
add
inc
in
cltd
inc
aaa
pop
jnp
gs
loop
mov
icebp
in
lret
test
test
das
or
xor
sbb
mov
mov
xchg
pop
jno
jae
push
mov
fsubrl
push
gs
ja
enter
xlat
popa
cmp
pop
pop
inc
cmp
ja
lret
sub
sbb
popf
push
xchg
sub
pop
cmp
mov
push
std
jle
sub
clc
jg
outsb
ds
inc
cmp
xor
add
mov
jmp
mov
adc
mov
mov
test
sub
sub
sbb
push
jbe
dec
js
adc
jecxz,pt
adc
sub
add
push
push
pop
sub
inc
out
scas
punpcklwd
insb
fs
pushf
rcr
xchg
inc
dec
pop
sarb
aas
shl
mov
enter
jle
pop
in
inc
loop
into
roll
mov
pushf
push
imul
jmp
xchg
jnp
or
sbb
pop
lods
popa
mov
loopne
andl
insb
lods
sub
imul
imul
cmpl
pop
push
scas
daa
mov
push
loope
jmp
movsb
mov
jmp
cltd
fdivrs
insl
and
bound
mov
mov
icebp
xchg
jp
mov
mov
pop
call
mov
repz
inc
int3
push
mov
loop
jl
call
xor
sub
or
lock
dec
jl
shrb
ficomps
lods
aaa
or
add
outsl
jmp
test
or
js
sbb
or
jmp
pop
push
je
push
daa
test
rclb
xchg
jae
test
and
sbb
imul
push
sbb
rorl
aad
pop
inc
popa
and
add
push
cmpsl
fisttps
add
mov
sbb
cli
and
and
aam
cmp
xchg
addr16
cld
push
mov
fnstenv
inc
mov
sbb
outsb
jno
mov
or
xchg
xor
lock
insb
push
movsl
out
rcrb
test
cmp
jle
ds
in
pop
pushf
lret
cs
mov
ljmp
cmpsb
lock
pop
rcll
pop
push
jno
jne
or
cs
ret
mov
sbb
test
mov
inc
cmc
sub
adcb
je
loop
fs
aas
mov
mov
in
repz
pop
and
sar
add
cmp
and
loopne
mov
dec
cmpsl
shrl
setbe
cli
das
push
inc
jp
xor
xchg
sub
pusha
cmp
popa
add
popa
dec
popf
cs
or
shll
cmp
orb
loop
int
into
cli
mov
in
mov
jbe
and
lock
stc
mov
xchg
faddl
jecxz
mov
xor
jbe
repz
mov
add
or
imul
xorl
fsub
or
push
jl
inc
sbb
cmpb
ucomiss
jg
push
ja
test
sub
sub
es
sub
sbb
test
rclb
mov
mov
addr16
repnz
cmpsl
jns
cltd
xor
cmp
jns
mov
push
test
pop
imul
mov
add
xchg
ret
jae
filds
les
insb
cld
and
dec
aas
movsb
cmp
ljmp
sbb
pop
loopne
inc
pop
mov
mov
cmpsl
sarb
pop
mov
and
hlt
xchg
sub
addl
cmp
sub
mov
cwtl
mov
mov
mov
mov
push
ja
xor
lock
out
insb
jo
in
adc
mov
mov
push
pop
test
xchg
fs
movsl
pusha
iret
loop
cmp
mov
sbb
pusha
insl
test
imul
inc
adc
nopl
imul
pop
test
cltd
lahf
jmp
iret
sub
cmp
or
sbb
imul
pop
test
cltd
lahf
jmp
iret
sub
cmp
imul
pop
test
mov
lahf
jmp
iret
sub
cmp
or
sbb
imul
pop
push
scas
inc
adc
sahf
addr16
xor
and
call
mov
call
push
call
call
mov
xor
cmp
setne
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
lea
movb
push
movb
call
mov
movzwl
mov
mov
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
not
mov
pop
mov
or
mov
leave
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
or
cmp
sub
pop
cmp
adc
inc
pop
scas
push
mov
out
lret
into
cli
fidivrs
or
push
push
sub
pop
outsb
dec
jle
dec
push
lcall
sahf
lcall
fisubs
push
repnz
inc
outsb
sub
dec
push
nop
test
sahf
mov
mov
fidivs
dec
cmp
repnz
test
mov
fnsave
daa
leave
lahf
jmp
out
pop
mulb
idivb
pop
scas
loope
xchg
lret
inc
out
insb
adc
fidivrs
mov
and
into
adc
call
xchg
cmp
cmc
jb
pop
outsb
mov
mov
int
xor
ffreep
shll
fisttps
or
cmpsl
push
fwait
popf
mov
and
xor
jmp
mov
ret
mov
cmpsb
outsb
ret
mov
or
jb
lods
lahf
es
iret
out
in
xchg
cmp
aam
movsl
movsl
mov
fldt
mov
push
adc
fiadds
pop
cmp
sub
mov
dec
int3
pop
pop
scas
adc
xchg
out
sar
into
ljmp
dec
push
pop
xor
sub
lcall
lock
movsb
xchg
outsl
outsl
je
push
dec
dec
xor
das
push
and
pop
std
jmp
sarb
andl
dec
pop
jp
push
add
jp
push
lcall
sahf
lret
into
ljmp
push
sub
pop
outsb
dec
jle
dec
push
lcall
sahf
lret
into
ljmp
cld
ljmp
sbb
and
mov
ret
sub
mov
aam
add
xchg
pop
je
cmp
popf
out
jmp
add
mov
push
sahf
and
jp
or
shll
popa
mov
sub
js
addr16
data16
xchg
stos
adc
mov
imul
xchg
dec
pop
stos
xchg
push
mov
cld
popf
jne
add
bound
fdivrs
jne,pt
mov
fcompl
adc
loop
xor
or
sbb
cld
mov
lahf
sbb
out
out
les
mov
cli
sub
out
sub
dec
dec
insl
and
xchg
int
pop
adc
ja
push
ds
sbb
outsb
cmp
sbb
adc
pop
inc
mov
stos
roll
pop
sti
loop
test
mov
mov
push
sbb
nop
shr
push
jmp
out
add
es
mov
mov
xlat
out
imul
fs
push
inc
ss
cmp
cwtl
enter
jns
divb
cmp
cmp
in
dec
fiadds
in
std
inc
daa
enter
jo
cmp
mov
mov
adc
sbb
es
or
fnsave
mov
and
sub
aad
les
addr16
sbb
call
movsl
mov
and
testb
pop
cmp
lcall
adc
push
pop
inc
inc
rorb
or
inc
pop
sbb
xor
cmp
pusha
mov
lock
out
pop
sbb
fldcw
jecxz
xlat
mov
add
mov
dec
daa
cmp
repnz
xor
dec
popf
add
xchg
jbe
cmp
data16
outsl
jae
imul
dec
cmp
cmp
sahf
jmp
adcb
push
xor
or
imul
loop
xchg
and
pop
push
xchg
xchg
pop
mov
xchg
mov
lcall
jge
jge
in
and
lahf
inc
jle
sbb
push
movsl
mov
out
or
sbb
aam
stos
cli
sbb
and
lds
and
popf
lds
xchg
xor
and
push
cli
push
mov
outsl
popf
fdivr
movb
divb
ds
mov
stc
aad
mov
mov
js
lret
mov
pop
mov
incl
mov
xchg
ja
push
and
inc
pop
xchg
lds
inc
lahf
or
add
mov
fists
enter
mov
outsb
sub
mov
call
lods
jmp
stos
addb
sub
fcompl
xor
cmp
adc
jecxz
adc
push
mov
and
add
lock
xchg
add
pop
sub
pop
orb
mov
rorb
dec
bound
xor
popa
movsl
shr
xor
push
inc
aam
subb
xor
cmovne
jo
sbb
dec
std
in
fstpl
movsl
enter
xchg
ret
jp
dec
inc
into
jge
jnp
push
hlt
push
scas
dec
hlt
dec
sub
dec
push
or
into
dec
dec
outsb
add
adc
aam
shlb
out
rcll
xchg
mov
int3
or
dec
sbb
lock
xor
scas
and
sbb
out
push
je
subb
jo
outsb
outsb
sarl
cs
addr16
int
adc
insb
mov
mull
out
les
movsb
loope
jl
subb
addr16
jl
pusha
mov
fwait
clc
in
mov
daa
lahf
sarb
fildll
mov
fldcw
and
xchg
outsl
or
and
pop
das
mov
fcomip
mov
push
jne
and
push
movl
sub
pop
loope
ret
inc
and
enter
testb
mov
cltd
leave
clc
sub
punpckhwd
imul
mov
pop
jecxz
or
ror
adc
jae
fmuls
jle
or
add
jns
shll
jne
cmpsb
dec
inc
sbb
jbe
cwtl
in
sub
stos
imul
sub
jecxz
inc
fstps
xchg
pop
xorb
mov
clc
dec
inc
cs
int
push
in
mov
call
mov
iret
ss
sub
aaa
push
das
pusha
jmp
out
scas
add
dec
adc
jecxz
gs
dec
mov
fstps
cmpsb
enter
add
les
xor
add
cmp
xlat
outsb
dec
daa
mov
rcr
xor
push
add
or
xchg
adc
jno
fwait
sub
xchg
aam
ds
dec
out
mov
in
dec
dec
push
adc
xchg
dec
cwtl
in
mov
inc
sub
xchg
mov
aaa
and
insl
test
mov
call
or
jecxz
push
fisubrl
add
loop
push
ja
pusha
xchg
mov
push
mov
mov
shlb
inc
cmp
lcall
mov
jbe
pop
mov
in
jp
inc
loopne
cmc
xchg
mov
repz
pop
stos
lds
push
inc
fwait
mov
jmp
imul
stc
add
ds
test
pop
sub
loopne
mov
sbb
frstor
test
aaa
jge
sahf
or
inc
mov
aam
sbb
xor
testb
mov
cmc
into
xchg
mov
jl
in
jns
mov
iret
dec
sub
xchg
fcomp
orb
popa
ficoms
jns
test
lods
mov
xchg
ret
je
xor
pop
jne
adc
ret
dec
or
mov
insl
mov
pop
aas
mov
es
push
push
ja
or
sbbl
dec
xchg
push
dec
scas
push
push
xchg
dec
dec
outsb
lret
mov
jmp
sbb
mov
in
xchg
push
fwait
sub
push
insb
sub
push
ret
cmp
fsubrs
fbld
add
add
imul
shl
gs
sub
fiaddl
ja
hlt
in
adc
loopne
in
and
iret
and
das
ss
adc
xor
dec
cmpb
scas
cmp
frstor
icebp
stc
iret
popa
and
iret
imul
loopne
dec
aam
loope
jne
fidivrl
pop
imul
pushf
mov
and
jae
ficoms
das
loop
dec
adc
lret
cmc
dec
xchg
mov
inc
lahf
pop
add
sub
rcl
cmpsb
jne
leave
push
in
ljmp
leave
and
sbb
nop
movsl
dec
fwait
push
gs
inc
scas
into
jmp
mov
cmpsb
icebp
ror
lret
rolb
pop
test
xchg
stos
xor
mov
aad
dec
and
fcomp
or
shlb
jp
sbb
je
outsb
shl
clc
cmp
jns
lods
pusha
popa
push
pop
ret
fidivrl
negb
pop
mov
jl
add
repz
mov
ja
aad
test
sbb
and
popa
jl
mov
in
pop
stos
jmp
nop
bound
mov
in
pop
dec
jl
or
push
mov
cmpsb
sarl
inc
bound
push
clc
lret
cs
jmp
jp
mov
push
in
aas
mov
pop
mov
mov
cmp
xorl
fsub
push
je
mov
testb
js
dec
push
mov
aaa
cmp
stos
cmpsb
add
jb
xor
rclb
jbe
js
push
fcmove
mov
js
fs
gs
push
sti
lret
adcb
sbbl
cli
daa
int
fwait
mov
mov
lret
orl
sbb
sbb
mov
pop
mov
mov
nop
sbb
add
ds
add
mov
out
sub
in
pop
adcl
pop
fs
xchg
mov
scas
sub
mov
adc
out
pop
jae
pop
inc
popf
stc
pop
cmp
mov
xchg
into
in
punpcklwd
cwtl
lahf
sub
or
sbb
scas
push
add
cs
or
xorl
jne
hlt
mov
je
jae
pop
add
gs
mov
fwait
mov
rcll
sub
pop
fcos
add
pusha
loop
mov
test
popf
mov
pop
sti
jno
stc
dec
xorb
xor
mov
je
or
jns
and
stos
gs
dec
sub
lret
or
ficompl
sub
mov
cmpsb
ss
addr16
push
mull
cmpsl
out
sub
jge
push
inc
mov
sub
jle
push
pushf
jno
dec
movsb
mov
push
fsubrl
mov
ja
cmp
cmp
pop
out
adc
sbb
inc
lds
and
hlt
je
rolb
jb
mov
cmp
push
push
inc
popa
stos
fsubr
ss
aaa
popaw
and
cmp
das
adc
xor
inc
andb
ja
out
das
sub
push
and
mov
les
or
xor
and
btsl
aas
fisttpl
in
xchg
fldln2
and
add
sar
addr16
jne
mov
fcmovbe
cltd
push
std
mov
and
push
add
stos
dec
icebp
stos
inc
or
push
enter
mov
jo
mov
sbb
jp
bound
nop
jno
cmp
xor
jge
in
pusha
sarb
xchg
outsb
sub
mov
push
sub
jge
mov
mov
jae
mov
insl
cmp
test
dec
and
arpl
push
pop
add
xchg
xchg
mov
lds
xor
sbb
jne
adc
add
jno
out
sbb
cltd
mov
jmp
adc
fistpll
mov
push
addr16
fs
push
pop
div
mov
jbe
aam
repz
mov
cmpsb
jg
test
scas
loop
mov
mov
pop
es
mov
dec
sub
in
and
dec
xchg
push
push
inc
test
movsb
xor
xchg
ret
stos
push
call
xor
cwtl
std
or
mov
dec
int
std
dec
notb
inc
popa
rclb
movsl
incl
shrb
push
imul
fstl
sub
mov
sub
xchg
jnp
cmp
or
lock
clc
rcr
lret
call
mov
insl
fcmovnbe
in
into
lahf
cmp
pop
outsb
xchg
push
cmp
and
and
push
adc
sahf
pop
pop
cmp
and
xor
sub
je
roll
testl
sbb
leave
lahf
lds
mov
outsl
mov
daa
mov
sub
call
lods
inc
pop
jne
ret
divb
and
shlb
fmull
jbe
sbb
sbb
push
mov
push
test
outsl
test
sbb
stc
inc
imul
cmp
mov
mov
dec
sub
pop
inc
es
jp
sahf
lods
shlb
sbb
pop
jg
inc
jmp
sbb
out
cmp
push
inc
adc
loop
cmp
decl
lcall
je
xchg
add
add
scas
rol
shl
dec
mov
or
loop
mov
lods
push
jmp
sub
mov
push
push
xchg
jmp
aas
dec
clc
pop
mov
xor
outsb
clc
mov
lock
movsl
fimull
mov
pop
out
decb
es
ret
add
or
sbb
cmpl
and
gs
add
mov
sub
xor
mov
pop
js
add
addr16
mov
and
push
xchg
push
push
insb
mov
pop
push
push
loopne
ljmp
add
fwait
cmp
sbb
jg
orb
xchg
mov
into
sbb
mov
sbb
mov
mov
shrb
ret
or
rorl
xor
push
sub
xchg
insl
mov
xor
push
imul
into
dec
movsl
ja
loopne
lret
jge
stos
add
in
add
push
xchg
sbb
xchg
push
mov
adc
jno
ds
stc
clc
inc
hlt
cltd
out
and
add
and
xchg
mov
in
xchg
mull
cmpsb
add
push
xchg
mov
push
rorl
xor
insb
fs
aam
fucomi
xchg
xchg
or
pushf
sbb
pop
xchg
ljmp
mov
mov
add
jb
lret
cmp
int
pmullw
mov
aad
push
addr16
in
mov
aas
aad
je
xchg
call
scas
gs
mov
ja
inc
lds
and
in
add
int
jno
pusha
repz
mov
cmp
add
xor
mov
mov
xor
add
or
hlt
adc
jne
mov
push
mov
or
pop
popa
adc
jle
test
mov
xor
xchg
movsl
pop
test
fdiv
sbb
es
xlat
or
mov
xchg
lret
jmp
lahf
pop
pop
out
mov
mov
mov
cli
enter
lcall
pop
aad
xor
cmp
lods
jecxz
mov
incb
push
or
in
push
mov
scas
fldt
inc
dec
push
js
jno
inc
jle
sub
jne
mov
push
mov
adc
xor
xor
scas
mov
frstpm(287
movsb
enter
in
mov
adc
lods
cmp
stc
loopne
lods
push
pop
mov
cmc
mov
pop
xchg
and
or
lds
add
or
xchg
mov
push
pop
sbbb
dec
and
or
pop
lret
sbbl
jno
cmp
lods
sbb
in
jb
adc
cltd
or
in
hlt
pop
xor
jg,pn
jp
js
jl
dec
je
push
add
stos
js
clc
inc
fdivl
pop
sarl
jne
adc
sbbb
enter
pop
and
sub
xchg
popf
pop
xor
aad
ljmp
mov
mov
sbb
ficoml
or
xor
aad
dec
ljmp
loop
mov
mov
cltd
popa
es
or
sbb
addr16
pop
ljmp
es
stc
pusha
testl
fs
adcb
lock
aad
icebp
dec
rcrl
leave
inc
pop
or
jbe
addb
pop
pop
fsubs
rorb
add
push
jae
fwait
ss
sarb
mov
insl
test
inc
jo
fdivl
fists
pop
xchg
push
inc
sahf
cmpsb
test
stos
jl
lret
aad
popf
inc
sbb
xor
sbb
cmpsl
imul
adc
push
insb
test
jo
and
mov
mov
lods
push
pop
jecxz
pushf
fisttpl
mov
add
je
js
xor
push
rclb
push
std
add
sub
mov
lret
mov
push
mov
test
inc
mov
sbb
data16
mov
xor
cwtl
mov
inc
scas
leave
or
push
lret
mov
test
in
leave
cmpsb
add
test
ljmp
mov
sbb
xchg
lcall
push
or
xor
mov
arpl
subb
fiadds
test
xchg
dec
cltd
ds
cld
mov
call
lods
pop
out
je
popa
adc
and
in
clc
insb
lods
rcrb
mov
into
sbb
daa
sub
lock
shll
sbb
int3
push
hlt
inc
sbb
sub
adc
xchg
jo
jae
mov
adc
gs
pop
add
dec
mov
int
mov
lret
std
push
fldl
jle
pop
in
addr16
test
pop
cmpsl
sub
enter
inc
push
fisttpll
sbb
jae
xchg
mov
rcl
cmp
sbb
loopne
js
sbb
js
xor
add
and
xor
repnz
jb
pusha
lahf
idivb
imul
imul
fidivrl
dec
xchg
nop
cmp
cmpsl
test
push
fldt
dec
in
mov
pushf
fadds
push
jnp
icebp
inc
inc
mov
sti
popa
sti
or
test
jecxz
jno
out
fisubrl
xor
add
cmc
mov
pop
mov
pop
pop
cmc
sub
or
push
cwtl
pop
insb
in
sub
adc
or
scas
stos
les
lds
ret
xchg
and
faddl
push
xchg
scas
data16
scas
gs
sbbl
push
cmc
sbb
xorl
mov
addb
mov
pop
cmp
xchg
pushf
mov
nop
inc
std
ret
jge
cmpsb
lahf
hlt
fstps
and
add
es
pop
or
out
mov
mul
pop
arpl
push
cmp
cmpsb
mov
sub
mov
dec
clc
push
aas
lret
jb
push
out
xchg
fstpt
push
cwtl
ss
iret
mov
and
subl
mov
sarb
xor
and
push
loopne
adc
push
xchg
sarl
mov
sti
mov
call
pop
lret
js
adc
add
sahf
mov
sbb
xor
enter
dec
les
dec
dec
pop
in
out
jb
mov
push
aam
sub
ljmp
inc
gs
test
out
mov
std
sbb
adc
jp
mov
cmpsb
sbb
lods
je
sbb
push
inc
mov
loope,pt
xorl
loopne
push
mov
lea
dec
dec
data16
push
mov
fidivrs
mov
dec
bound
sub
in
adc
and
fdivs
push
movl
dec
into
cmp
pop
jmp
rorb
pushf
outsl
cmpsb
cli
int3
ror
sub
jle
je
mov
fadd
jns
pop
loop
cmpsl
sub
addl
ss
xchg
clc
mov
es
xchg
sub
cmp
movsb
les
mov
jl
fwait
insb
jne
lea
sahf
push
jnp
xchg
sub
push
push
sub
int
and
lahf
loope
push
or
and
cmp
inc
lds
and
repnz
xchg
dec
sbb
cwtl
cltd
inc
xchg
ja
jb
rorl
add
inc
xor
inc
cmp
fidivl
stos
hlt
test
cmp
jmp
push
adc
and
cltd
scas
outsl
adcb
jne
and
cwtl
imul
test
roll
sbb
out
add
loop
inc
sbb
xor
xorl
adc
daa
sub
int3
jl
xor
loop
cmp
inc
mov
xor
lods
scas
loop
repnz
mov
sub
or
push
mov
mov
mov
lock
std
inc
outsl
jo
js
insl
add
jl
mov
jbe
gs
fmulp
sbb
dec
loopne
add
mov
sub
sub
or
xor
test
cmp
jo
mov
jle,pn
adc
pop
jecxz
fisubl
cmp
sub
mov
call
fnstsw
pop
add
mov
push
or
xchg
int
mov
loop
cmp
mov
sub
mov
xor
inc
daa
orw
insl
lret
movsb
cld
test
imul
add
jecxz
gs
loop
xchg
push
jge
sbb
pop
jo
out
cmpsl
out
or
enter
mov
sub
insb
cmpsb
mov
in
xchg
rclb
data16
pop
and
jg
mov
push
loop
sub
cmc
push
mov
inc
gs
sbb
incl
sub
shll
dec
adc
or
rclb
nop
outsl
arpl
push
jg
sbbl
pop
cmpsb
xlat
aas
or
imul
cmp
adc
enter
fsub
mov
jl
popa
or
dec
sub
repz
xchg
hlt
rol
mov
cmpl
and
adc
inc
add
adc
stc
xchg
dec
push
pushf
cld
sahf
sub
movsb
mov
push
mov
xor
ret
clc
lahf
inc
mov
dec
imul
jae
scas
inc
scas
in
fdivs
mov
in
in
adc
fiaddl
dec
fists
pop
jge
jp
mov
test
movsb
inc
adc
lret
pop
fs
lret
dec
fimull
int
lahf
mov
jle
loop
aam
test
sub
cmpsb
lods
lahf
je
insl
iret
mov
in
xchg
cmpsl
test
and
inc
and
out
cltd
bound
pop
xor
sbbl
or
adc
jg
lea
mov
movups
sub
in
push
dec
jp
lods
sbb
sub
xchg
cmp
enter
mov
adc
add
ret
arpl
adc
jnp
push
shlb
jnp
arpl
mov
xor
adc
sahf
sub
pop
lahf
mov
repnz
push
mov
xor
cmpsb
lock
idivl
jge
sub
pop
outsb
dec
jle
dec
push
lcall
sahf
lret
into
ljmp
push
sub
pop
outsb
dec
jle
dec
push
lcall
sahf
lret
into
ljmp
push
sub
lret
jle
dec
stos
pop
lcall
sahf
cli
into
add
push
cs
ds
push
or
pop
outsb
pop
jp
ljmp
mov
add
bound
lea
mov
sbb
in
mov
sub
out
dec
fildll
insl
aas
popf
das
lea
mov
outsl
int
std
dec
in
mov
sbb
out
popf
fistpll
insl
aas
test
lea
movsl
lfs
outsl
aad
in
idivl
dec
sub
stos
sub
in
leave
arpl
mov
in
push
arpl
xchg
cmp
mov
or
int3
inc
xor
outsl
xor
popf
sub
pusha
sub
out
sbb
bound
or
loop
leave
hlt
mov
int
mov
add
orl
mov
int
lea
setge
jp
fisubl
sub
popa
fucom
rolb
push
scas
mov
idiv
pop
shlb
dec
es
outsl
xor
lods
or
push
nop
stc
or
lods
xor
into
xchg
ret
insl
fdivrl
popf
sub
dec
pusha
call
sub
cmp
popf
das
lcall
outsl
int
in
hlt
mov
and
xor
inc
out
pop
fistpll
or
pop
lea
data16
jg
sbb
cmpb
testl
jge
add
dec
lea
arpl
daa
cltd
sbb
insb
popf
dec
outsb
das
andl
pop
fsubrl
call
xor
dec
in
mov
cmp
out
dec
fistpll
insl
aas
popf
das
lea
mov
outsl
int
std
dec
in
mov
cmp
out
dec
fistpll
insl
aas
popf
or
sbbb
mov
mov
dec
mov
sbb
jae
call
lods
lret
dec
aam
pop
jno
inc
popa
fisubrl
ljmp
ljmp
jo
repnz
ljmp
scas
sbb
jb
stos
jmp
inc
mov
or
leave
push
rorb
fwait
inc
dec
outsb
adc
sub
dec
dec
xchg
ds
stos
add
mov
mov
pushl
test
mov
popf
loopne
gs
lods
xchg
ja
pop
jb
popf
fidivs
sub
cmp
push
jmp
in
test
fidivs
mov
ss
je
add
imull
loopne
push
mov
xchg
pusha
dec
dec
dec
xchg
mov
mov
bt
pop
iret
and
jle
cmp
jns
xchg
sbb
dec
pop
sub
or
mov
movsl
jbe
test
shr
data16
test
and
cmp
shrl
jno
addr16
xorl
daa
lcall
dec
rol
mov
outsl
push
push
test
scas
lea
or
rorl
mov
out
clc
arpl
adc
sbb
add
pop
out
mov
pushf
sbbb
xchg
sbb
cltd
and
retw
movsl
mov
repnz
jg
ss
in
fs
add
add
mov
bound
loopne
push
outsb
xchg
fs
adc
orb
xchg
stos
pop
insl
es
sub
sub
emms
mov
cmpsl
jbe
adc
sub
int3
les
sub
andb
pop
add
cmpb
and
lret
lods
dec
mov
outsl
aam
cmpsl
inc
stos
add
mov
dec
scas
jmp
sbb
mov
or
push
mov
mov
cmp
inc
push
ss
jp
inc
xchg
iret
inc
or
stos
adc
jnp
dec
mov
inc
xchg
clc
or
adc
jg
int
lea
dec
into
push
mov
cmp
jmp
fs
or
jge
add
mov
push
xor
push
int
bound
fcompl
scas
mov
call
push
ret
stos
js
jne
pop
pop
dec
push
lods
push
es
arpl
adc
push
jle
cli
add
loop
xorb
jb
mov
hlt
std
imul
and
fstpt
mov
fdivrs
in
je
xorb
arpl
ja
test
and
shl
inc
jg
and
pop
scas
pop
decb
iret
clc
aam
jle
push
push
cmp
jmp
sub
rcrl
sbb
es
mov
xchg
incb
dec
xchg
sbb
push
test
pop
push
mov
push
in
repz
mov
sub
dec
fidivl
jb
pop
xor
cwtl
jb
adc
mov
add
repnz
jbe
sub
cli
push
fs
or
push
xor
mov
mov
push
out
sub
xchg
cmp
cmp
mov
fnstcw
idivb
mov
cmp
and
and
fdivp
add
or
aam
pop
dec
das
mov
mov
xchg
out
clc
fstpt
mov
pop
sbb
dec
add
imul
adc
push
dec
sub
popf
lret
cmp
outsl
stc
pop
sub
or
iret
movsl
xchg
pop
sbb
out
and
mov
push
arpl
sbb
lock
lods
mov
adcl
gs
arpl
dec
pop
out
into
gs
push
cmpsb
fcomps
in
sbb
test
mov
pavgw
bound
adc
jmp
bound
repz
mov
lock
push
dec
clc
adc
inc
cltd
mov
mov
insl
in
xchg
adc
push
mov
shll
scas
imul
and
outsb
mov
add
mov
sub
dec
cs
cmp
adc
es
cmp
test
pop
mov
jmp
adc
sub
cmp
and
pop
in
sub
popf
scas
sbb
mov
leave
inc
sub
lea
sbb
pop
sbb
rol
fsubs
jp
movups
and
faddp
or
lcall
xchg
out
sub
fstpt
xchg
sbb
not
sbb
pop
lock
arpl
jmp
dec
or
cmp
push
je
push
xor
mov
repnz
mov
int3
xor
push
push
test
jl
and
jo
push
lods
repnz
sbb
mov
push
ret
fsubrp
add
mov
addr16
loopne
xchg
cmp
push
xchg
sbb
jecxz
cltd
arpl
xor
cmp
inc
pop
push
jle
mov
filds
sbb
lret
or
sbb
xor
or
stos
sahf
in
push
loop
ret
js
xchg
pop
pop
into
add
xor
add
jns
clc
xor
sbb
mov
xchg
sbb
fisubs
cmpsl
sbbb
jle
and
bound
popf
mov
fnstsw
insl
jb
pop
jns
push
sbb
mov
pop
mov
dec
dec
xchg
inc
pop
leave
jmp
mov
pop
outsb
das
filds
popf
sub
xchg
mov
sbb
xchg
in
xlat
jg
jp
loop
bound
jo
lds
mov
cmp
lahf
ja
push
fwait
mov
aam
cmp
jno
xor
sbb
icebp
add
pop
xchg
dec
ret
adc
ljmp
or
shll
out
arpl
leave
stos
xchg
das
add
jp
ret
sub
out
out
pop
mov
xor
repnz
or
mov
in
dec
and
xor
leave
push
lock
jbe
xchg
inc
fidivl
pop
or
mov
fwait
and
fsub
movsl
push
rclb
stos
repz
test
adc
adcl
dec
mov
sub
jbe
mov
out
in
pushf
in
sbb
leave
aaa
ljmp
scas
divl
add
dec
dec
sbb
or
and
jbe
push
lcall
or
xor
dec
jae
pop
xchg
sahf
xchg
push
mull
loope
xor
lret
pop
flds
inc
jnp
jmp
jp
xchg
cs
cmovg
jmp
dec
out
sbb
pop
xchg
mov
arpl
mov
mov
out
mov
push
ret
pop
outsb
push
xchg
mov
negl
orb
add
cltd
mov
mov
lock
roll
es
push
xor
jo
idivl
cmpsl
dec
and
mov
xchg
xchg
dec
insb
mov
popf
dec
pop
mov
xor
into
pop
stc
rclb
adc
test
pop
popf
nop
pop
mov
push
daa
rcrb
jo
hlt
call
enter
out
stc
inc
adc
sub
iret
jno
sub
cmp
inc
jle
mov
clc
fldcw
nop
fdivs
or
pop
cmp
int
das
fwait
xchg
pop
cmp
push
cmp
mov
insb
dec
pop
lahf
sub
cwtl
add
lea
mov
pop
dec
enter
xchg
jp
adc
leave
jno
in
cmp
call
fwait
xchg
cs
jno
loopne
inc
jp
loop
mov
aaa
ds
inc
pop
mov
sbb
xchg
dec
aaa
incb
cmpsl
mov
out
mov
adc
stos
mov
jno
in
negb
lcall
repz
sbb
xchg
fwait
ss
jns
inc
mov
push
or
pop
inc
cmp
negl
cld
push
sbb
aam
or
adc
mov
in
loope
dec
push
push
js
dec
sarb
cmp
daa
push
icebp
push
jle
and
xlat
mov
push
push
dec
pop
mov
cwtl
sub
pop
cmpps
cmc
arpl
in
popf
xchg
lcall
xchg
hlt
push
out
add
push
sbb
in
sbb
stos
mov
imul
and
sub
jmp
hlt
push
mov
mov
lea
add
or
add
adc
adc
mov
es
or
out
addr16
add
pop
imul
pop
xchg
bound
ret
mov
cs
cmp
and
mov
sahf
mov
push
fidivrl
cmpsb
decb
dec
rol
sub
dec
icebp
aad
fldl
push
enter
divb
xchg
mov
add
fidivl
jnp
fcmovnu
mov
pop
add
push
adc
mov
jge
push
xor
jns
lds
test
sub
jne,pt
inc
outsl
xor
addr16
loop
das
mov
jmp
sub
mov
and
aam
inc
lret
loop
jae
and
add
lock
sbb
lcall
push
cmpb
fistpll
adc
je
mov
sub
sub
lds
jecxz
outsl
or
and
cltd
sahf
pop
cmpsl
loopne
hlt
jecxz
adc
addr16
jns
cmp
pop
and
mov
sbbl
pop
inc
je
push
sbb
pop
shll
mov
sub
loope
fstpl
pop
pushf
adc
andb
xchg
pop
add
mov
xchg
mov
cmpsb
int
out
cli
push
out
sub
cli
xor
adc
pop
mov
cmp
sarb
and
sbb
mov
mov
jle
into
cld
pop
sbb
loop
fwait
stc
sub
fnstenv
xlat
xchg
stos
arpl
xchg
push
adc
mov
or
inc
dec
mov
je
push
arpl
adc
mov
pop
and
inc
sti
fnstcw
and
sar
lret
jb
lods
push
pop
mov
lock
xor
ficoml
mov
cld
sub
jle
and
xor
sarl
in
or
aam
sub
pop
jmp
fsubrl
xchg
adc
and
ret
jb
outsl
subb
lahf
icebp
fisttpll
int3
cltd
sti
mov
fstps
test
lea
cmpsb
mov
das
repnz
add
jo
in
shll
shrd
mov
insb
in
aas
and
or
mov
jmp
inc
aam
mov
mov
pushw
mov
jo
loop
sar
add
mov
cli
inc
xor
pushf
int
inc
inc
pop
jle
or
mov
fdivrl
out
pop
ja
scas
push
incl
xor
xor
lret
pop
mov
adc
pop
in
aam
pop
dec
out
push
daa
add
xor
sbb
dec
adc
pushf
loopne
jle
inc
or
in
popf
mov
sahf
lds
xchg
xor
cmp
dec
orl
movsl
sub
out
enter
mov
shrb
loop
sub
insl
sti
loope
cmp
loope
into
mov
fdivrs
je
jl
lock
jge
sbb
jle
mov
add
or
shlb
movsb
fisttpll
xchg
xchg
loop
pop
mov
imulb
or
sub
sarb
ss
aad
std
push
out
lods
clc
in
jecxz
cltd
lock
sbb
ret
xor
mov
mov
testb
loop
pusha
call
jne
sub
xchg
test
imul
mov
int3
dec
pop
gs
iret
outsl
cli
fldl
mov
mov
call
mov
add
jo
ljmp
mov
ja
bound
mov
sub
ds
pusha
xor
rorb
ret
push
lahf
hlt
inc
dec
mov
add
sbb
mov
adc
mov
add
mov
xchg
shrl
adc
jl
icebp
sbb
clc
in
lock
mov
jge
or
hlt
mov
push
mov
add
rcll
jmp
cwtl
and
insl
subl
xchg
clc
lret
mov
cmp
ret
scas
cmpsb
mov
xlat
push
ja
shlb
punpcklwd
adc
sqrtps
pusha
and
add
ja
sahf
cmpsb
cmp
loope
pushf
mov
mov
ja
push
dec
call
repz
mov
iret
xchg
xchg
xchg
xchg
add
les
sbb
js
loope
mov
xchg
and
mov
popa
adc
add
andb
int
shll
scas
ja
out
cltd
stc
jge
inc
shl
xchg
pop
insb
testl
out
jbe
sub
push
xchg
adc
dec
pop
loope
clc
dec
outsb
imul
jnp
pop
cltd
lahf
std
xchg
xchg
mov
lret
addr16
add
loopne,pt
jecxz
cmpsb
dec
xchg
dec
jo
out
mov
into
sar
data16
xchg
gs
mov
add
test
sbb
sbb
es
or
addb
jge
mov
xor
push
ss
les
hlt
pop
fisubrl
push
sbb
push
cmp
mov
xchg
xchg
cmpsl
mov
insl
movsl
jp
gs
xchg
outsl
movsb
mov
shlb
mov
or
xchg
int3
mov
xor
test
push
jmp
mov
adcl
pop
mov
popa
fbstp
ja
sub
sahf
stc
adc
mov
and
add
sub
inc
xor
sub
adc
mov
push
mov
ret
add
aas
test
push
fcoml
pop
and
shll
dec
aam
sub
cwtl
cmpsl
cwtl
stos
roll
pop
repnz
mov
add
mov
mov
push
push
rorb
outsb
daa
xchg
sbb
push
cmp
fisttpll
les
jo
loopne
xorl
mov
pop
adc
sub
clc
and
and
out
roll
jb
dec
lock
mov
pop
out
inc
sub
inc
aam
lods
fstpt
lods
and
or
outsl
lahf
imul
fsts
and
mov
mov
dec
and
js
sahf
sub
mov
cmp
insb
outsl
ja
mov
or
scas
shlb
repz
orl
movsl
call
xor
mov
sti
mov
push
mov
arpl
test
xchg
push
add
push
ficomps
pop
test
push
or
mov
push
and
lds
xor
fcomps
hlt
mov
rclb
mov
nop
xor
cmc
push
adc
aam
mov
mov
cmpsl
scas
inc
inc
pop
add
repnz
pop
fcomip
fildl
lods
dec
out
es
es
mov
xor
fldpi
mov
ds
notb
test
sbb
roll
cwtl
ds
push
push
test
mov
das
jle
addr16
mov
test
into
outsl
and
mov
cli
mov
cmpsl
push
les
rcrl
mov
je
push
or
mov
jp
add
sub
ret
insl
mov
xchg
dec
daa
lcall
ret
dec
push
jno
pop
cmp
es
mov
jle
pop
mov
decb
sbb
and
into
aaa
sub
inc
ret
ljmp
test
frstor
mull
mov
sti
ja
je
add
cmpsl
lahf
andps
pop
jmp
and
cli
sbb
pop
xchg
inc
fimull
jmp
jecxz
sbb
test
daa
imul
sub
cmp
imul
repz
icebp
dec
and
imul
mov
add
lcall
shll
sub
mov
sbb
sub
pop
bound
movsl
and
ja
cmpsb
add
repz
dec
inc
iret
mov
pop
popa
dec
stos
popf
mov
xor
mov
push
test
sbb
push
pop
ja
sub
in
popa
decl
dec
xor
ret
xchg
aas
scas
outsl
xor
out
sahf
sub
push
cmpsl
xchg
add
cwtl
in
ret
cwtl
inc
and
arpl
cli
jmp
movsl
lea
mov
ret
sub
movsb
insb
jl
dec
xlat
repnz
repz
nop
push
inc
mov
frstpm(287
call
push
mov
and
movsl
mov
test
imul
xorl
pop
or
xchg
into
mov
ret
jno
loopne
ja
mov
popf
popf
mov
push
fwait
popa
jbe
lods
add
ljmp
push
and
pop
sub
addr16
fistl
sbb
popa
cmpsb
add
test
inc
es
shlb
outsl
pop
mov
mov
adc
in
cli
pop
insl
pop
lods
sarb
cltd
push
jmp
cmp
push
xor
inc
out
js
out
lret
std
sbb
add
jg
mov
or
inc
inc
mov
insb
lds
push
ret
stc
pop
in
push
adc
mov
sub
jge
mov
mov
pop
repz
in
nop
aaa
popf
aas
cmp
jne
mov
adc
sbb
sub
clc
sti
mov
sub
adc
jg
push
add
les
lret
call
aam
or
fistps
jnp
cmpsb
push
inc
pop
sbb
popf
loopne
add
sbb
dec
xor
or
mov
pop
movsl
mov
xor
xlat
jno
in
jae
sti
or
dec
cmp
sub
into
test
stc
call
sub
push
push
rorl
aas
xor
adc
std
jge
ret
push
hlt
pop
cmp
int
jns
lods
mov
xlat
sub
jbe
pop
jns
dec
jl
js
xor
ja
sbb
data16
jb
addb
fnstcw
lret
out
cmc
in
cmp
dec
in
mov
or
xchg
xor
stos
adc
outsl
icebp
xchg
das
call
push
add
mov
dec
or
xlat
or
sbb
and
jns
push
or
jb
loop
adc
cltd
and
push
cmp
xchg
out
rcll
inc
icebp
dec
subl
cltd
jo
test
int3
mov
dec
popa
ficomps
mov
mov
mov
push
test
les
inc
shl
ljmp
shrb
test
repnz
ja
fsubrl
arpl
cld
gs
imul
adc
rolb
fisttps
mov
int3
inc
lods
das
add
std
push
loope
jno
nop
mov
jge
leave
mov
jle
adc
mov
xchg
out
jmp
mov
rol
mov
fnstsw
cltd
sbb
lods
pushf
dec
aas
sub
and
gs
mov
pop
mov
xor
jmp
aam
mov
lcall
mov
mov
pop
mov
jno
ret
sbb
out
mov
call
sbb
out
xchg
cmp
mov
std
inc
les
sub
bound
cmp
rolb
jl
or
sub
add
or
ds
push
and
push
xor
jle
sub
sbb
in
int
std
jecxz
xchg
cmpsb
inc
cmp
jb
aam
inc
enter
mov
sub
mov
pop
mov
cld
xchg
adc
sbb
cwtl
push
mov
fmuls
inc
inc
cs
inc
push
add
lds
or
scas
sbb
jne
scas
dec
mov
sub
jnp
adc
inc
xchg
ret
hlt
shr
std
mov
aad
mov
out
fisubrl
test
test
jge
jecxz
adc
test
push
mov
jge
jns
mov
lods
cltd
incl
or
sbb
mov
fstpl
sub
pop
push
add
push
outsb
rcr
xchg
fucomi
xor
test
push
xor
pop
iret
cld
pop
push
ret
sbb
lret
inc
pushf
loop
data16
pop
fwait
and
add
sbb
popa
dec
repnz
shll
dec
xlat
std
repnz
je
out
mov
mov
add
adc
leave
in
call
iret
dec
iret
adc
ljmp
adc
call
inc
fbld
sar
mov
jle
dec
scas
push
jge,pn
jo
push
xor
add
mov
and
push
pop
push
in
pop
jne
ss
lods
sbb
add
sub
aaa
aaa
into
aam
mov
dec
or
test
jg
xchg
out
jmp
sub
pop
lahf
cmp
push
hlt
mov
scas
xchg
add
in
mov
mov
sub
mulb
jo
sub
fidivs
jb
sub
daa
inc
pop
push
dec
sub
jns
jge
in
mov
outsb
push
cmp
les
adcb
jnp
jo
stos
sub
jp
jp
popa
pop
cmp
rorb
or
imul
xor
sbb
inc
fcmovb
or
loope
xchg
je
xor
pop
cmp
shrb
and
stc
push
adc
int
sub
or
testl
clc
hlt
dec
push
ja
sub
jmp
mov
jnp
push
ss
leave
pop
les
addr16
push
cwtl
inc
xor
and
jg
outsl
int
std
dec
in
mov
cmp
out
dec
fistpll
insl
aas
popf
das
lea
mov
outsl
int
std
dec
in
mov
cmp
out
dec
fistpll
insl
aas
popf
scas
lea
pop
std
iret
in
mov
cmp
out
dec
fistpll
aas
popf
das
lea
mov
outsl
int
std
dec
in
mov
cmp
lahf
mov
cmpb
imul
add
push
pop
add
repz
jmp
sti
ret
mov
mov
arpl
jnp
or
sbb
lret
repz
lahf
sar
ret
mov
fwait
mov
dec
loope
arpl
jnp
or
sbb
sub
cmp
lret
sub
sbbb
clc
lret
aad
add
or
dec
add
test
xadd
or
add
adc
cs
sti
ffree
clc
out
sahf
or
jmp
xor
inc
cmp
mov
mov
xchg
inc
push
mov
shlb
dec
rep
push
pusha
or
push
mov
mov
jle
data16
xchg
dec
sub
jnp
push
mov
jae
inc
cli
sti
or
or
call
lret
mov
out
aas
jne
repz
stos
jnp
shlb
inc
mov
adc
sbb
add
mov
jb
push
loopne
mov
mov
arpl
sub
fwait
jns
je
mov
fwait
repz
adc
xchg
roll
adc
xlat
jnp
or
sbb
sub
cmp
jmp
sti
mov
xchg
mov
arpl
adc
insl
addr16
push
dec
dec
jp
data16
xchg
stos
out
fdiv
xlat
out
shr
loop
sub
cmp
push
dec
pop
ja
sub
outsl
scas
xchg
fnstenv
out
jecxz
out
fptan
mov
and
add
or
and
adc
add
repz
jmp
sti
ret
mov
mov
arpl
jnp
or
sbb
sub
cmp
lret
repz
jmp
sti
ret
mov
mov
mov
lock
outsl
shrl
and
mov
mov
loop
pop
ret
xchg
mov
loopne
je
sbb
inc
and
mov
out
lahf
mov
pushf
ljmp
out
jle
pop
mov
stos
das
movsb
push
aas
xor
jl
push
std
push
test
ljmp
imul
cmp
pusha
icebp
js
insb
dec
je
mov
test
insl
stc
mov
xor
into
popa
sub
lret
nop
push
cmp
jnp
adc
fnstsw
mov
xor
jecxz
out
mov
mov
es
mov
pop
mov
pop
js
shll
inc
fisubrl
or
jno
ja
adc
adcb
and
call
xchg
xor
lcall
inc
gs
fwait
in
inc
rcll
shlb
jmp
dec
add
add
cli
pop
xchg
pop
and
push
pop
das
jb
or
or
jno
xor
inc
outsl
lret
dec
pop
in
adc
and
pop
fs
adc
lcall
push
aam
lret
jbe
je
cmove
outsb
mov
sub
mov
inc
mov
roll
push
stos
jb
mov
stos
inc
sbb
mov
inc
mov
out
xor
jge
mov
add
dec
mov
roll
loop
add
int
sbb
mov
shlb
push
mov
xor
ret
rcrb
data16
push
lahf
inc
leave
mov
and
out
push
pop
sbb
repnz
mov
cmpsb
mov
and
sbb
fldt
movsl
mov
fisttpll
outsl
push
dec
jb
xchg
sti
ss
out
xchg
loopne,pn
xchg
cmp
adc
pop
lahf
jno
cmpl
into
sub
movsl
iret
adc
arpl
mov
adc
xlat
ret
and
pushf
push
idivb
add
test
cld
sti
and
lods
or
nop
mov
lahf
sbb
mov
out
inc
or
je
mov
add
neg
cld
shll
inc
mov
inc
mov
jmp
jmp
sti
add
fbstp
ds
stc
loop
jecxz
loopne
aas
mov
rcrl
repz
cltd
dec
and
add
fimuls
jns
sub
shlb
add
push
add
fwait
shll
and
scas
push
in
xor
lret
nop
jne
mov
and
or
bound
andl
push
or
and
cli
lret
bnd
pop
add
cmpb
push
or
or
fwait
test
int
xchg
cmpl
add
adc
sub
pushf
mov
pop
les
jae
insl
cmp
test
ret
addr16
cmpb
lcall
or
daa
mov
addb
sahf
cmp
mov
dec
xorl
pop
ficoml
scas
daa
fnstcw
in
pop
test
xchg
pop
push
mov
or
xchg
add
xchg
jnp
sub
out
dec
mov
out
movsb
xchg
ja
inc
lods
shlb
clc
sub
fldz
mov
das
pusha
sbb
xor
xchg
xor
lds
push
sub
xlat
xor
add
enter
outsl
out
cmpsl
adc
and
popl
clc
pop
cltd
jmp
sbb
sub
sub
cmp
inc
xchg
sbb
shl
xchg
pusha
lods
or
arpl
cmp
xor
in
rcll
into
xorl
fistpll
lea
mov
lods
xchg
dec
sarb
xchg
in
push
dec
sbb
and
pop
orl
test
mov
mov
repnz
add
sbb
push
sub
adc
jmp
and
std
pusha
push
pop
lods
pop
jns
fcomps
push
fwait
daa
sub
lods
ljmp
dec
ja
adc
sub
ja
cld
inc
jne
sbb
out
fcoml
jnp
fiaddl
ret
jecxz
arpl
call
dec
mov
aad
dec
pop
idivb
mov
dec
ja
push
loope
push
add
add
mov
aaa
stc
jns
and
jmp
jge
mov
xchg
in
mov
jp
in
xlat
mull
jne
adc
sub
gs
jg
mov
jnp
jecxz
mov
mov
jge
aad
dec
mov
insl
scas
jo
jecxz
fldl
rcrl
aad
rcll
sub
ja
call
js
int
jl
inc
imul
adc
cmp
cmp
sahf
test
xor
aaa
pop
inc
in
push
push
nop
mov
mov
int3
jae
orb
jns
dec
cmp
stos
jecxz
imul
lcall
int
sbb
pop
into
sub
sub
xchg
and
dec
cmp
daa
or
icebp
mov
popf
fmul
aas
xchg
or
outsl
jp
outsb
and
icebp
push
mov
pop
vshufpd
fnstcw
pop
sbb
xchg
sarb
sbb
movsl
cld
cwtl
pop
sub
sub
fildl
mov
xchg
xchg
push
fisttpl
xlat
adc
inc
jbe
data16
pusha
push
pop
and
mov
arpl
out
mov
cs
addr16
jg
movsb
in
pop
movsb
cmp
shrl
add
mov
outsb
xor
popf
inc
cli
pusha
mov
and
add
mov
xor
mov
and
jno
pushf
lret
xchg
sar
xchg
and
sub
enter
inc
stos
push
xchg
aam
fidivrl
cwtl
pop
stos
xor
push
and
add
sbb
xchg
fistl
loopne
xlat
lcall
xchg
shrl
mov
cwtl
jno
jns
cmp
mov
test
loop
loope
out
rcll
rorl
out
cmp
fiadds
xor
bnd
dec
push
xor
jg
dec
push
mov
jne
xchg
push
push
dec
pop
orl
fisttpl
out
or
lret
adc
test
sbbl
outsl
jmp
insl
mov
mov
mov
dec
aam
push
xor
fxch
bound
mov
push
push
out
pushf
sub
pop
adc
cltd
pop
push
sbb
fbstp
fdivrp
mov
cmp
insb
fsubrl
insl
jg
push
inc
stc
inc
in
fsubp
test
arpl
outsl
add
xor
or
jne
sbb
mov
sbb
ja
test
dec
push
dec
daa
ljmp
jl
cld
and
jnp
cltd
inc
fisttpl
sbb
push
pop
je
sub
lds
dec
mov
int3
mov
jl
int
mov
dec
dec
push
sti
loope
bound
imulb
mov
in
xchg
ror
xor
sub
rcll
popf
in
xchg
mov
test
std
mov
and
inc
adc
pop
mov
ret
stos
jp
push
adc
sub
ret
arpl
push
push
mov
sbb
xor
cmc
fidivs
stos
orb
mov
adc
cld
dec
inc
push
sub
pop
mov
mov
pop
scas
add
xchg
es
xchg
repnz
shrl
push
leave
ja
xchg
loope
pop
push
sub
int
mov
lods
loop
aad
icebp
lret
cmp
jbe
push
ljmp
and
mov
imul
roll
sub
xor
sub
xchg
pop
pop
repz
push
mov
ljmp
xchg
lods
je
mov
mov
xchg
es
push
adc
js
lahf
push
imulb
shlb
push
out
lds
sbb
repz
mov
lret
aaa
adc
cmc
shlb
mov
loopne
add
sti
sbb
push
cmp
pop
and
aas
sub
fistl
repz
testb
int3
sbb
scas
xor
cli
mov
jg
dec
fistpl
mov
sbb
and
addr16
pop
inc
adc
repz
es
outsl
mov
addb
push
sub
loop
lahf
nop
add
xchg
test
xchg
andb
sub
pop
repnz
pop
fldenv
jl
loop
fisubrl
adc
fcoml
lahf
repnz
xchg
cmp
cmpsb
shlb
pop
adc
out
jno
shlb
sbb
pop
repz
xchg
push
jle
or
add
shrl
pop
cwtl
shll
ret
adc
dec
clc
xor
mov
cmp
jnp
in
popf
subb
cmp
les
scas
mov
pop
xchg
les
jbe
xchg
sbb
inc
mov
fnstenv
lcall
aas
add
xchg
shrb
insl
and
scas
sbb
fidivrs
lods
mov
fistl
xor
test
lods
jbe
xchg
orb
lods
negl
and
add
shll
mov
outsl
adc
dec
imul
mov
das
push
insl
and
or
sarb
repz
xor
adc
or
sbb
and
into
mov
sbbb
push
jl
xor
push
lea
gs
cmp
and
insl
pushf
stos
fildll
push
dec
cmc
pop
mov
cmp
test
xor
cld
loopne
popf
pop
jbe
cltd
in
mov
jno
ja
sbb
roll
cs
loop
gs
cltd
dec
jns
aad
push
inc
sti
dec
pop
ja
xchg
sub
inc
in
mov
push
fisttpll
mov
xor
loopne
movsl
sbb
out
fimull
adc
outsl
mov
stos
jg
pop
ret
out
pop
mov
ret
dec
push
gs
jns
scas
adc
arpl
inc
mov
cmpb
jmp
cwtl
mov
jg
xor
stc
mov
testl
aaa
mov
inc
cwtl
cmp
adc
insl
lds
stos
jno
pop
std
sub
jns
push
cmp
pushf
cmp
out
pushl
mov
inc
cld
xchg
xchg
bound
jnp
push
dec
add
loopne
mov
mov
mov
push
dec
xor
int
scas
lret
adc
in
cld
pop
loop
adc
lahf
dec
or
push
push
sbb
xchg
cmp
rclb
fcomps
cmc
scas
xchg
and
push
lret
scas
mov
pop
int3
jo
or
mov
mov
inc
push
sbb
push
mov
mov
adc
push
xlat
mov
aad
clc
out
fs
and
insb
and
push
push
jns
int
in
adc
inc
sbb
push
rcrl
enter
and
mov
sahf
push
and
cmp
aaa
mov
pop
sahf
pushl
pop
push
ja
mov
fsubs
sbb
das
push
mov
sahf
movsb
add
and
fcmove
pop
stc
mov
test
fsts
xor
add
das
and
pop
out
push
dec
add
stos
xlat
and
mov
loop
int
mov
out
enter
inc
mov
fwait
sbb
xchg
pop
mov
out
jns
push
jle
sub
push
in
sbb
xchg
outsl
or
or
ljmp
cmp
jns
out
jl
fstpt
clc
pop
out
mov
jns
aam
xor
andb
mov
std
dec
jg
enter
xchg
outsl
nop
sub
addr16
js
xor
xchg
neg
add
loopne
adc
adc
scas
or
add
mov
addl
and
mov
mov
push
inc
or
test
dec
jge
jbe
movsl
sbbb
inc
cmpl
push
enter
jns
loope
sub
pop
mov
aad
mov
xchg
ret
stos
inc
jne
divb
cmc
test
jge
in
shrb
out
jae
jnp
adc
mov
cwtl
inc
mov
adc
mov
dec
je
sbb
or
imul
push
cld
inc
mov
jae
sbb
mov
sub
rcl
mov
test
xor
int3
xchg
xorb
test
mov
aad
jecxz
sahf
stc
stos
adcb
xchg
mov
ja
or
shll
aas
xor
rcl
cld
cs
inc
je
out
and
incl
out
lret
xchg
jns
lcall
out
imul
mov
mov
shl
cmp
jp
dec
inc
mov
pop
lock
ja
mov
popf
lret
lret
adc
fisubrs
xchg
lret
movsl
in
sub
add
xor
xchg
shl
repnz
popf
inc
cld
std
push
into
xor
sarb
ss
mov
and
in
sub
dec
push
mov
js
repnz
mull
sahf
clc
lea
fldenv
mov
mov
sbb
push
xor
xor
ret
mov
ret
popa
cmp
cmc
jmp
lods
adc
hlt
out
pusha
dec
xchg
sbb
fwait
jnp
test
mov
cmpb
sub
sarl
mov
pop
mov
push
mov
sub
stc
jnp
das
cwtl
sub
push
rcll
jae
jl
lret
pop
mov
mov
lock
pushf
iret
ret
lods
js
jo
test
pop
pop
dec
mov
sbb
pop
and
loop
imul
xor
sub
sbb
daa
in
mov
mov
inc
xchg
call
into
inc
dec
andl
add
leave
mov
or
adc
or
fadd
jge
add
xchg
jg
in
cmpsb
and
fwait
xor
les
mov
rorl
xchg
out
andb
pop
fs
pop
inc
pop
loop
outsl
in
in
js
adc
pop
mov
int3
les
mov
inc
aaa
repnz
cld
mov
dec
push
mov
rcrb
movsl
ljmp
mov
shrl
push
jns
shrb
cs
rcll
ja
add
dec
aam
stos
push
cmpsb
jno
xor
xlat
lods
pop
pop
fistl
xlat
cmp
mov
insb
xchg
cmp
in
sti
aad
stos
jmp
mov
les
inc
pop
dec
jge
jmp
jg
mov
push
adc
bnd
loopne
in
mov
orb
mov
or
mov
js
push
pop
sub
aam
cmp
out
mov
loop
adc
mov
pushf
test
or
push
fiadds
mov
ss
push
pop
movsl
mov
sub
imul
out
mov
xchg
jp
mov
mov
loope
sbb
sub
cmp
add
out
scas
mov
frstpm(287
xor
js
aas
sbb
loope
mov
jnp
mov
popa
sub
mov
cld
into
jne
jl
int
in
lock
sub
mov
push
xchg
mov
xchg
dec
das
add
add
adc
mov
cmp
push
sahf
mov
into
sbb
lahf
ret
jbe
and
mov
jp
js
test
xor
adc
pop
test
ret
dec
jl
in
inc
cmp
push
scas
push
shlb
mov
or
adc
inc
shrb
add
pop
imul
jns
lahf
nop
pop
add
push
and
and
clc
mov
mov
pop
movsl
dec
jb
sub
gs
out
paddusw
fsin
test
popl
stc
jo
ljmp
sub
mov
inc
add
mov
jle
stos
pushf
outsl
lock
and
adc
jae
lcall
sbb
or
test
outsb
fwait
int3
clc
mov
or
mov
fdivrs
or
in
rorb
andb
mov
add
fimull
pop
push
flds
fwait
lods
hlt
jp
jmp
and
fnsave
dec
bound
mov
insl
sub
pop
pop
jmp
jno
subl
les
js
jb
clc
mov
dec
sti
mov
test
xchg
or
ss
call
into
repnz
dec
mov
dec
xchg
mov
out
mov
js
mov
shlb
mov
mov
dec
testb
pushf
adc
shll
mov
adc
jno
jge
mov
jmp
mov
dec
sub
pop
fdivrl
mov
and
mov
adc
mov
mov
lock
rcrb
sarb
dec
jp
jbe
xchg
mov
gs
inc
pop
addr16
rcl
fmull
inc
mov
ret
xchg
dec
jge
testb
push
add
mov
bound
pop
int
pop
sbb
iret
outsb
stos
imul
sub
test
shl
inc
xor
push
mov
add
push
aad
adc
call
jmp
insb
xchg
imul
loop
call
aad
mov
push
sbb
and
adc
lret
xchg
xchg
or
fnstsw
std
gs
popf
fisttps
pop
lahf
scas
mov
mov
mov
or
repz
rclw
sbb
movsl
sbb
add
leave
pop
popl
lcall
jl
stos
sahf
adc
out
xor
ret
popf
pop
cmp
jl
cs
loopne
mov
fbstp
pushf
popa
in
mov
dec
outsb
mov
mov
movsl
ret
pop
aam
cmp
pop
mov
test
movsl
ljmp
add
clc
mov
shlb
aad
stc
sub
scas
lret
test
fstpt
outsl
sbb
loopne
test
adc
jmp
mov
jg
add
mov
test
mov
movsl
jecxz
fstp
popa
xchg
aas
sub
hlt
movsl
jmp
repnz
xchg
mov
rcrl
divl
add
inc
out
or
stc
ljmp
nop
and
jno
imul
mov
push
gs
mov
nop
adc
sub
mov
mov
xchg
pusha
data16
fstl
dec
outsl
fcmovnbe
shlb
stos
add
xor
mov
mov
push
int
cmp
push
xchg
jb
out
andl
mov
aaa
lods
lods
cmp
jnp
mov
insl
scas
fwait
add
dec
je
jno
or
rclb
rcll
enter
fs
divb
and
or
push
mov
nop
xlat
jecxz
pop
inc
pop
jge
and
mov
mov
push
jmp
xor
out
in
mov
jmp
inc
jl
in
and
ret
pop
sub
js
jle
jecxz
aam
scas
pop
and
pop
scas
lret
inc
int
xor
nop
sub
or
mov
jb
int
ss
lods
mov
jecxz
rcr
dec
ljmp
xchg
sub
push
pop
loope
cltd
jecxz
sbb
jge
clc
lock
lds
data16
mov
call
loope
fldt
es
jae
jp
or
andb
cli
into
add
cli
lahf
lret
jg
mov
lcall
cmc
ja
and
inc
pop
hlt
test
sahf
iret
cmp
lahf
mov
hlt
std
and
movsb
jg
loop
or
scas
test
cmpsl
add
add
sbb
addr16
jecxz
mov
sub
adc
pop
mov
fmuls
mov
cltd
push
jp
dec
adc
adc
mov
pop
clc
dec
jno
inc
sbb
push
inc
in
dec
sbb
stc
mov
ret
and
sbb
xchg
outsl
xorb
sbb
push
ficompl
push
fwait
mov
cmp
ret
xchg
xchg
mov
f2xm1
popf
xor
lahf
mov
fstp
inc
xchg
pusha
cld
sarb
adc
or
and
ret
jno
adc
mov
pop
cli
mov
add
into
mov
lds
sbb
outsb
popf
push
pop
pop
cmp
in
cmpsb
add
out
fisubs
push
in
mov
dec
fistps
ds
mov
in
pop
jb
aam
fiaddl
or
movsl
lock
loopne
pop
sub
lock
mov
adc
fcompl
cmp
shrl
dec
cmc
insb
mov
dec
inc
mov
xchg
test
or
cmp
ja
int3
fs
sbb
ret
cmpl
mov
mov
outsb
lahf
dec
shlb
mov
addb
das
cmp
out
mov
cmpsl
pop
xlat
cltd
and
pop
sub
or
lods
aad
jb
pop
mov
jnp
or
sbb
sub
cmp
lret
repz
jmp
sti
ret
mov
mov
arpl
jnp
or
sbb
sub
cmp
lret
repz
jmp
sti
ret
mov
mov
sub
jnp
or
sbb
lret
sub
jecxz
sar
ret
mov
mov
arpl
jnp
or
sbb
sub
fisttpl
sar
mov
cmp
pop
push
insb
inc
jl
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
fwait
sbb
icebp
mov
pop
xchg
mov
mov
sti
and
xor
ret
sub
cmp
dec
sbbb
mov
fwait
push
lret
jb
sub
adc
and
xor
sbb
js
test
pop
fisubrl
jnp
mov
jno
add
add
push
xchg
push
jnp
sbb
rorb
jae
leave
cwtl
lods
movsb
and
cltd
fimull
mov
rcll
dec
xchg
push
sbb
pop
push
dec
mov
and
pop
and
jecxz
add
stos
sbb
dec
outsb
shrl
push
push
jmp
std
arpl
icebp
sbb
push
ret
or
xlat
repnz
xchg
ja
mov
aas
fwait
pop
mov
popf
push
jae
pop
mov
notb
das
js
cs
imul
jecxz
out
add
cwtl
push
add
repz
mov
popa
xchg
sarb
add
mov
sbb
into
cli
pop
push
dec
sbb
sub
pop
xchg
imul
cli
stos
pusha
mov
cld
jmp
sti
add
pop
mov
or
ljmp
push
cmc
jecxz
sub
fists
mov
push
pop
push
test
pop
xchg
jae
sarb
shrb
sbb
xor
inc
orb
mov
mov
xor
sbb
imul
push
stos
bound
adc
and
xor
ret
sub
cmp
dec
sbbb
mov
fwait
push
stos
bound
adc
and
xor
ret
cmpsb
lahf
imul
or
mov
mov
lods
mov
fwait
pop
sbb
incb
lret
adc
cmp
ret
push
jnp
dec
sbb
and
push
xor
shlb
repz
jbe
dec
cwtl
in
or
stos
repnz
jmp
sub
xchg
into
clc
ja
xor
data16
inc
xchg
jmp
movsl
and
fistl
push
jecxz
mov
xor
test
add
mov
jmp
jmp
xchg
or
stc
pop
pop
add
push
mov
pop
in
inc
repnz
cs
add
divl
xchg
pop
mov
in
pop
in
adc
inc
sub
cmpsb
fcompl
push
das
push
xor
adc
scas
or
lods
ja
cmp
insb
pop
cwtl
xchg
fwait
scas
cmp
mov
xchg
scas
icebp
fldl
jge
ljmp
sub
jl
fs
sub
iret
es
lea
jbe
leave
mov
cwtl
inc
insl
sub
mov
popf
stos
jo
orl
xchg
movsl
imul
xor
leave
pushl
movsl
shl
pop
sub
sti
inc
push
dec
mov
sub
mov
jl
xor
imul
adc
mov
test
roll
mov
and
mov
std
scas
loope
xlat
mov
push
leave
ret
and
subb
jecxz
mov
jge
mov
gs
push
jo
pop
push
sbb
inc
or
sbb
mov
pop
fildl
cld
fs
addl
clc
dec
ja
inc
lcall
repnz
fstpl
push
mov
xor
in
loop
nop
je
aam
fistps
mov
int3
sbb
add
mull
das
loope
test
adc
sub
call
test
out
aas
or
jbe
rcrb
xor
js
mov
ja
pop
pop
push
xchg
cmovnp
std
cwtl
mov
aas
and
arpl
jne
repnz
mov
add
sbb
mov
or
ljmp
jg
or
mov
js
imul
jl
sets
cmpsl
mov
pop
mov
pop
lret
data16
cmp
pushf
pop
aaa
sub
add
mov
cmc
subb
jne
xor
jp
sahf
in
popaw
mov
fdivs
addb
and
push
mov
ja,pn
mov
bound
sbb
ds
and
pop
sub
inc
repnz
inc
scas
in
dec
aas
mov
arpl
pop
push
loopne
mov
leave
jno
sbb
repz
mov
xchg
dec
clc
icebp
pop
out
ret
ret
popa
sub
xchg
rolb
mov
xchg
ds
or
adc
lods
sbb
rcrb
lods
sar
add
mov
push
repz
les
cmpsl
pop
movsl
push
pushf
pop
mov
pop
push
cmp
out
adc
dec
jge
mov
jns
and
mov
scas
xor
stos
addr16
call
push
es
imul
xor
inc
jl
or
leave
adc
insb
push
jne
sub
sbb
cmpsl
fcmovnbe
nop
int3
in
sbb
leave
pop
test
stc
iret
ljmp
repnz
push
popf
mov
adc
pop
mov
in
add
pop
jmp
mov
mov
jb
push
addr16
fstl
mov
les
sub
mov
sti
jle
adc
or
sbb
das
insb
int3
dec
test
fwait
loopne
aam
mov
dec
jl
jnp
xor
add
mov
repz
or
sbb
shr
adc
ret
repz
push
mov
lcall
inc
pop
fld
dec
xlat
je
mov
pop
sbb
mov
and
stos
push
out
scas
ror
sbb
inc
arpl
or
js
push
arpl
add
cmpsb
negl
inc
andb
das
fcmovnbe
push
rclb
jbe
sbb
daa
push
int3
mov
ficoms
dec
jl
out
push
sub
loop
xlat
fcoml
mov
stos
pop
mov
mov
add
adc
subl
pushf
mov
xor
scas
stc
psadbw
inc
or
xlat
mov
jne
sbb
ret
cmp
test
imul
cmp
ror
dec
adc
cmp
xchg
aad
mov
add
push
mov
push
xor
cld
xor
lock
push
aas
movsl
inc
mov
xchg
inc
pop
andps
xor
mov
sbb
repnz
cmp
push
add
and
scas
pushf
cltd
adc
jmp
sub
pop
lret
add
ja
lods
sbb
cli
cmp
rcll
cmp
jbe
lds
sbb
ja
cmp
or
js
rcrl
push
cld
adc
clc
cld
adc
push
mov
fwait
add
xchg
adc
sbb
and
adc
scas
and
cmp
mov
mov
mov
popf
mov
pop
sbb
loop
enter
push
popa
lods
fisttps
jmp
jle
fsubs
fcmovne
jo
adc
out
nop
sub
xor
addr16
dec
rolb
inc
shr
cmc
sub
loopne
lcall
inc
inc
out
jmp
aas
mov
sub
test
or
out
dec
in
insb
scas
push
jno
mov
or
adc
push
dec
inc
add
je
int3
int3
popf
and
cld
adc
lods
lods
inc
inc
jp
ja
mov
loop
pop
repz
or
popf
divl
ja
dec
xchg
popa
cmp
jle
sarl
leave
nop
xchg
and
inc
sbb
bound
xor
jecxz
scas
mov
test
mov
ja
add
dec
pop
jge
lret
lods
cwtl
test
mov
dec
mov
pop
xlat
push
cmpsb
xor
lcall
lock
cs
cmc
fstl
mov
add
xchg
imul
out
xchg
or
and
mov
xorb
or
rorl
stos
pushf
roll
sub
dec
cmp
pop
mov
outsl
push
ss
adc
mov
test
mov
fs
out
cmp
xor
test
lods
cmp
mov
gs
xorl
sbb
xchg
and
push
out
ds
xchg
or
and
jmp
push
and
xchg
mov
cmp
lcall
insl
dec
inc
clc
xor
lods
das
dec
orb
xchg
js
and
and
xor
jae
ds
pop
or
jbe
mov
pop
stos
insl
dec
xchg
or
cltd
mov
push
leave
out
stos
ret
icebp
ret
xchg
xchg
aas
shl
jne
mov
js
mov
in
sub
idivl
push
hlt
dec
insb
adc
cwtl
lret
lret
pop
jnp
aaa
push
push
leave
out
inc
movsb
xchg
xlat
push
inc
movsb
jne
icebp
pop
push
inc
dec
and
fwait
ss
cmpsb
mov
aam
lcall
sub
lahf
pop
cs
xor
jb
cltd
pushf
in
lcall
fucom
arpl
lds
mov
sbb
cmp
ret
jmp
xlat
cmp
dec
and
or
insb
adc
lods
mov
std
pop
sarl
mov
cmp
adc
pop
and
xorl
adc
pop
push
insl
enter
test
mov
sbb
or
mov
add
pop
pop
mov
neg
push
les
mov
jb
les
mov
xor
and
out
movsl
jb
fisttpl
or
jg
add
repz
mov
and
mov
cs
out
push
jbe
adc
ds
inc
jecxz
mov
add
fisubrs
inc
xor
in
imul
rcl
cs
mov
mov
adc
test
lds
ret
inc
test
pop
shlb
pop
sarl
xchg
jg
iret
je
ja
push
rcrb
mov
jnp
stc
mov
outsb
dec
in
repz
sbb
lret
push
mov
dec
or
out
frstor
xor
test
lahf
lock
shr
push
add
ret
sub
sub
in
cmp
scas
jo
mov
leave
xor
jg
pop
xchg
and
dec
lea
out
mov
mov
fs
or
mov
mov
std
inc
sub
insl
hlt
mov
push
les
add
lock
sbb
mov
outsl
loopne
mov
loope
adcl
xor
ja
imul
add
mov
or
mov
mov
sbb
jno
mov
aaa
jb
jnp
rcr
cmpsl
and
adc
xchg
cltd
pop
andb
xchg
into
or
mov
pop
pop
jno
add
rcrl
jo
jg
cmp
popa
rorl
fildl
je
inc
xchg
fs
adc
adc
mov
inc
xchg
insl
cmp
push
in
inc
add
aaa
repnz
jle
fucom
add
cmp
sbb
cmp
xor
cmp
cli
scas
mov
sti
repnz
in
cltd
jno
jle
xchg
call
adc
repnz
mov
lods
aas
lret
lods
mov
or
sub
push
add
mov
pop
out
roll
sub
mov
and
shrl
imul
stc
sbb
or
lock
xchg
cmpsb
cwtl
pusha
fnstcw
popf
insb
pop
add
addr16
incb
dec
scas
add
out
sahf
push
ljmp
fcom
cmc
jecxz
xchg
out
stos
xlat
mov
inc
fisttpl
scas
cmp
cli
sarb
add
xchg
mov
jg
or
mov
arpl
push
push
outsb
mov
scas
cltd
xor
add
sti
xor
popf
mov
sbb
pop
mov
stos
call
shrl
dec
cs
bound
mov
js
cmp
out
mov
xchg
popa
xor
mov
push
mov
or
aad
repnz
fists
movsb
adc
std
scas
cmpsb
fdivrs
and
test
pop
xchg
lods
inc
adc
mov
cwtl
sub
dec
scas
aas
cmpsb
pop
ds
add
sarl
jbe
fimuls
add
and
mov
or
ds
mov
mov
fcmovnbe
out
shrb
fmulp
push
into
push
push
adc
pop
push
mov
setg
out
pop
mov
mov
popf
js
lods
sub
repnz
adc
cli
rcr
xchg
dec
adc
dec
movsl
int
imul
into
in
xor
in
mov
add
jns
xlat
add
lea
jp
dec
outsb
xor
dec
add
sbb
adc
jl
loope
push
inc
mov
test
jb
adc
push
pop
iret
lcall
ret
ret
push
insb
ret
sbb
test
repz
loopne
push
push
call
and
push
mov
lods
mov
rcrb
mov
outsb
inc
xor
pop
clc
icebp
push
sbb
mov
mov
cmc
pop
imul
mov
loope
xchg
mov
sub
mov
inc
sub
mov
dec
and
das
sub
into
or
in
inc
cltd
jp
mov
inc
pop
faddl
pop
push
inc
adc
cs
iret
test
ficompl
repz
out
sub
push
jnp
bound
fincstp
mov
dec
cmpsl
mov
or
dec
ret
jmp
jne
jno
jg
sarb
hlt
andb
arpl
push
in
cmp
sub
sub
pop
test
sti
popf
outsl
jmp
pop
xchg
mov
pop
ror
int3
jmp
adc
fsub
pop
fisubl
xchg
in
push
out
mov
cmp
adc
xchg
pop
adc
imul
pop
std
jns
in
nop
leave
sbb
test
lea
xchg
aad
js
sar
lds
pop
inc
mov
cmc
mov
xor
fidivl
inc
loopw
and
shld
push
or
inc
rcl
adc
loopne
in
std
addr16
mov
popf
mov
pop
xchg
fisubs
sub
cltd
mov
xchg
xor
xchg
addr16
adc
test
jno
std
push
xchg
pop
addr16
inc
leave
push
fst
pop
and
sub
xor
or
dec
cmp
mov
cld
jp
xchg
and
xchg
lret
sub
ret
jle
mov
insb
pop
jae
mov
jae
xor
adc
or
aam
incb
repz
mov
insb
xor
cmc
scas
or
cmpsl
es
or
cld
addr16
xor
pop
xchg
cli
out
cmpsb
inc
flds
rcll
sbb
xchg
dec
movsb
mov
sbb
pop
jge
cmpl
movsl
hlt
mov
mov
dec
stos
iret
in
clc
cmp
pop
ja
push
addr16
mov
out
and
nop
dec
out
xchg
sbb
cmp
les
jg
aaa
cli
shr
movb
cmc
int
xchg
inc
sbb
gs
movsb
add
jns
push
repz
mov
sub
adc
aam
cmp
dec
js
shrl
into
add
mov
cmpsl
jp
cmp
cmc
adcl
and
lods
sbb
shlb
sub
call
inc
cs
sub
jl
fnsave
cs
orb
fisubl
daa
push
push
ret
dec
pop
or
pop
hlt
cwtl
faddp
sbb
mov
and
jl
mov
lea
jecxz
aam
stos
jl
mov
iret
call
das
or
xchg
jo
xchg
sub
cmp
das
xor
stos
push
push
jg
xchg
mov
mov
xor
int
shrl
stc
mov
dec
repnz
popf
add
outsb
mov
sti
push
int3
aam
int
je
inc
pop
loope
dec
mov
inc
jmp
jb
orb
xor
jae
loopne
movsl
adc
xchg
lods
or
fldt
or
fstl
add
insb
in
out
fwait
jmp
xor
cmp
xchg
andb
cmp
das
pop
cmpsl
movsb
xor
add
xchg
cmp
xor
std
and
add
pusha
dec
hlt
xor
push
cltd
jns
push
js
fucomi
adc
mov
mov
dec
xchg
or
sub
cli
xchg
mov
jp
outsb
addl
lret
push
iret
inc
fstp
scas
sub
pop
jg
ret
ss
jmp
sbb
test
sahf
or
inc
mov
shll
adc
ror
jge
xor
stc
jecxz
jo
test
fstpl
push
push
mov
jne
or
adc
xor
xchg
imul
add
fisubs
lods
cs
ja
sbb
pusha
sbb
ret
in
or
pop
sbb
sti
outsl
xor
sbb
sti
push
push
mov
cmpsb
xchg
and
dec
frstor
xchg
lods
and
mov
scas
loope
jecxz
xor
jo
xchg
xor
mov
xchg
cs
adc
mov
adc
xor
sti
outsl
aaa
sbb
add
jl
popf
mov
fwait
and
inc
ds
cmp
stos
stos
dec
adc
mov
pop
stos
mov
xchg
xchg
mov
shrl
sbb
sub
cmc
adc
xor
popa
push
cmp
sub
fdivrs
sub
testb
in
sbbl
sbb
out
push
fisttps
pushf
add
shl
sub
mov
shrb
cmpsl
sub
xor
loope
es
imul
insb
push
es
testb
in
xchg
inc
imul
mov
icebp
inc
cmpsb
mov
shrb
out
mov
stos
dec
scas
in
dec
and
push
jo
imul
cmp
test
cmp
xor
lods
mov
xor
outsb
cli
cmp
lock
mulps
in
ljmp
dec
jp
jge
push
in
xor
and
push
cmp
int
sub
movsb
mov
cltd
int
out
inc
inc
callw
inc
mov
insl
and
mov
cmp
enter
cltd
push
add
jae
push
xlat
xor
push
sbb
xchg
mov
mov
sahf
fcoml
pop
stos
popf
std
es
pop
loop
stos
sub
push
jb
ret
cld
xchg
xor
mov
adcb
add
fnstsw
and
jl
xchg
clc
inc
mov
aam
mov
loope
insl
pop
ds
pop
add
lahf
insb
bound
push
mov
addr16
in
add
mov
mov
movsb
test
out
pop
mov
jmp
pop
mov
loopne
mov
mov
and
push
mov
mov
shrb
enter
daa
aam
dec
adc
int3
shl
mov
stos
rorl
xor
xlat
stos
mov
rolb
adc
jae
flds
mov
sbb
test
xor
mov
in
jg
in
jecxz
pop
js
roll
jnp
aad
popa
in
or
bnd
popa
shll
ss
inc
or
cmp
lods
icebp
xor
xchg
or
sbb
jns
push
mov
mov
js
sbb
pushf
testl
cltd
fiaddl
dec
pushf
xchg
jne
in
dec
fcomi
push
test
imul
cmp
sub
push
mov
inc
or
aaa
sti
and
cs
push
in
add
imul
cmpsb
mov
add
in
add
inc
mov
sbb
cmp
je
jl
jle
adc
out
push
loope
ja
mov
jo
xchg
pushf
mov
mov
add
aam
mov
mov
test
int
ljmp
mov
cld
inc
sbb
jbe
mov
push
ja
aaa
fdivrl
dec
into
idivl
sub
sbb
mov
inc
addr16
mov
mov
sahf
cmp
jmp
cmp
in
push
or
add
xor
mov
xchg
mov
cmc
mov
pop
xor
xor
sub
dec
xor
push
fadds
je
jp
rolb
push
xchg
sbb
xor
cmp
inc
or
or
dec
mov
ljmp
aad
adc
inc
add
into
push
jbe
shl
les
push
pusha
cmp
jne
inc
rcl
out
bound
sub
aaa
std
xor
inc
dec
scas
lods
sbb
test
test
xchg
mov
loope
shrb
in
ret
add
or
or
cmpl
or
dec
cmpsl
and
sarl
movsb
shlb
popa
lcall
stos
mov
lea
mov
js
xchg
mov
dec
js
xchg
rorb
stos
popa
or
jecxz
stos
aam
adc
inc
dec
cmpsb
mov
insb
adcb
mov
stos
push
leave
in
dec
pop
sub
pusha
test
ficomps
aam
inc
or
ret
cmp
xor
push
jecxz
inc
iret
bound
or
and
gs
and
mov
jl
and
shrl
pop
fisubrl
lods
add
cld
cmp
sbb
inc
and
and
movsb
add
rolb
mov
ljmp
jmp
loope
xor
xor
or
movsb
lret
jbe
scas
pop
dec
jmp
pop
sti
push
ror
mov
in
xchg
or
decl
and
push
int
in
cmp
mov
imul
out
xor
jnp
lret
pop
adc
or
or
xchg
cmp
or
icebp
inc
jg
adc
out
pop
or
mov
pop
adc
mov
push
sub
dec
pop
ds
adc
loope
in
imul
scas
daa
push
xchg
sbb
jg
les
ss
jl
adc
hlt
xor
stos
cmc
mov
mov
ja
dec
sbb
loopne
je
mov
sub
rorl
lcall
das
icebp
fwait
inc
xorb
lock
adc
ds
dec
mov
test
addr16
sub
aam
mov
cmpsb
loop
mov
pop
rolb
ss
nop
mov
iret
pop
dec
dec
mov
test
xor
add
aam
xchg
pop
dec
mov
sub
xchg
test
pop
jmp
out
mov
mov
cs
fists
pop
and
cmpl
rcll
scas
mov
ja
jns
into
xorl
mov
or
push
insl
outsb
cld
lods
push
cmp
xchg
and
je
arpl
pop
test
or
fldenv
pop
or
sbb
sub
add
mov
push
inc
loop
repz
jo
jg
es
inc
std
xor
adc
sarb
out
repnz
sbbb
mov
fwait
push
stos
bound
adc
and
xor
ret
sub
cmp
dec
sbbb
mov
fwait
push
stos
bound
adc
and
xor
sbb
sub
cmp
dec
sbbb
cmpsb
jnp
mov
push
stos
bound
adc
sub
or
sbb
sub
cmp
imul
jb
mov
mov
push
pop
add
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
inc
divb
popa
push
ljmp
xchg
sub
jbe
inc
rcll
shll
push
mov
testb
adc
and
jbe
inc
and
dec
xorb
push
mov
imulb
jns
or
ss
shll
push
popf
xor
aaa
mov
push
inc
mov
sbb
fcomps
cmp
jge
mov
mov
jle
lcall
rorl
mov
push
in
xor
push
sub
fsub
inc
sti
cmp
and
ret
shll
ds
mov
xor
sbb
push
rclb
add
and
cltd
test
mov
es
icebp
or
pop
mov
mov
pop
inc
sarl
in
xor
in
loope
cmp
ss
pop
call
ds
in
xchg
lods
cmpsl
mov
mov
shrl
ja
and
push
es
gs
push
mov
divb
jbe
add
cmp
jmp
es
ss
mov
mov
movb
xor
dec
ret
shll
and
gs
aam
les
addl
mov
outsl
cli
pop
out
repnz
xchg
xor
dec
repnz
rcll
cmp
popa
mov
mov
mov
xchg
xchg
shll
jbe
inc
loope
xchg
xorl
push
out
divb
popa
adc
and
icebp
inc
loope
xchg
xorl
push
out
sahf
sub
or
shrb
aam
mov
sub
fildl
mov
out
in
aam
adc
push
insl
in
inc
bound
stos
push
pop
das
dec
mov
aaa
bound
dec
sbb
pop
or
or
dec
in
lea
rcrl
dec
fiadds
lods
mov
jge
or
je
daa
std
mov
test
cmp
mov
out
rcrl
enter
rcrb
pop
icebp
test
repnz
jno
imul
adc
insl
in
jae
xor
scas
call
addl
int
test
sbb
push
pusha
mov
pop
and
js
fimuls
movsl
adc
js
mov
sbb
jb
mov
dec
insb
pop
xchg
les
push
hlt
lock
mov
cld
xchg
mov
push
inc
push
inc
sub
jno
mov
in
jmp
push
addr16
push
dec
scas
jne
xchg
xchg
andb
xchg
jns
imul
ffreep
in
sub
test
hlt
push
jo
mov
adc
sti
dec
cmp
push
daa
jl
loopne
push
cvtps2pi
ret
imul
mov
pusha
xor
jecxz
popf
or
out
mov
ss
in
or
jmp
jmp
or
imull
bound
pushf
sub
sbbb
xchg
das
add
xchg
jmp
sub
jp
pop
es
fildl
mov
loop
je
pop
lret
cmc
push
stc
divl
fsubl
sbb
idivl
xor
fidivs
cmp
stc
test
adc
pop
gs
jns
sbb
or
ficoml
and
inc
adc
push
icebp
jl
xchg
jle
shr
add
std
cmpl
mov
and
mov
pop
push
inc
sbb
cmp
jo
lods
jle
scas
mov
mov
lahf
js
add
fs
test
in
mov
sbb
xchg
lods
add
in
gs
daa
pushf
xor
add
pop
test
sub
cmc
insl
testl
notl
test
fldl
inc
xchg
mov
orl
xchg
or
shrb
jp
jp
mov
iret
dec
shl
mov
push
and
sub
dec
cmp
rclb
pop
xor
imul
repz
into
in
nop
dec
xchg
pop
push
dec
or
clc
xlat
jno
inc
iret
pusha
std
mov
add
adc
addr16
test
les
and
dec
rcl
mov
inc
add
cmp
addl
shll
sub
les
inc
and
and
push
pop
mov
pusha
push
imul
out
and
loopne
shr
xchg
cmp
dec
mov
inc
jecxz
mov
xor
hlt
jnp
push
stos
fcmovb
gs
mov
fs
push
adc
pushf
stos
and
xchg
mov
enter
lahf
psubsw
repz
jns
xor
aad
scas
cwtl
or
xchg
mov
outsl
xchg
pop
imul
xor
stos
mov
add
and
stos
std
ss
insb
inc
dec
std
lret
xchg
cld
pop
mov
daa
jne
ljmp
clc
pop
inc
loope
cld
mov
outsl
call
xchg
xchg
sbb
loopne
stc
cmp
adc
push
push
mov
adc
clc
pop
in
addr16
xchg
xchg
mov
mov
sbb
ficoml
inc
fsubl
mov
sbb
scas
es
add
sbb
nop
scas
mov
pop
lock
pop
push
pop
push
jmp
xor
jo
pushf
dec
jns
or
andl
xor
std
lahf
inc
mov
and
mov
and
mov
cmpsl
cmp
iret
shlb
in
ds
mov
in
inc
mov
addr16
jb
in
lods
cmc
popa
cmpsl
pop
dec
jecxz
daa
push
sub
jb
popf
hlt
add
lret
add
test
add
shrb
clc
mov
push
movsl
lahf
loopne
ja
fnstcw
push
dec
mov
jmp
in
gs
dec
xchg
inc
and
mov
add
lods
js
jnp
scas
mov
aam
xchg
add
out
aam
jl
ss
aam
sti
mov
imul
dec
stos
js
cmp
icebp
xchg
jp
stos
xchg
xchg
xchg
add
fchs
pop
push
sahf
and
repnz
mov
dec
dec
jo
xchg
mov
pop
or
inc
jnp
movsb
xchg
lret
arpl
push
mov
mov
out
lds
sahf
jle
push
scas
xorl
dec
je
push
sub
pop
icebp
pop
inc
adc
adc
push
das
sbb
push
ret
dec
and
jl
in
jp
adc
into
add
add
jns
bound
je
pop
movsl
test
xchg
test
pop
aaa
dec
lret
lds
js
cmp
in
add
loop
sub
loope
cltd
mov
movsl
sub
push
dec
or
cmp
inc
cmp
outsb
mov
or
ja
xlat
icebp
lods
repz
repz
filds
mov
xchg
rcrl
cmp
popf
xchg
popf
mov
add
pop
xor
bswap
mov
popa
shl
push
testl
pop
push
mov
and
xchg
vmread
jg
sub
xlat
xchg
jmp
or
stos
jo
adc
xorl
xlat
jmp
out
popa
push
jp
jno
mov
mov
mov
fnsave
aaa
xor
scas
xor
inc
test
sub
aaa
mov
push
test
adc
or
fwait
mov
fcomp
dec
rcrl
mov
es
xor
inc
lods
mov
lcall
mov
hlt
or
sbb
fcompl
mov
repz
daa
imulb
xchg
shll
cli
fnstenv
or
loope
jns,pt
add
lret
shl
aam
aam
bound
ds
mov
loopne
cmp
or
je
add
xlat
xor
fdivrl
roll
in
add
pop
shlb
test
dec
mov
sub
std
loopne
dec
cmp
rolb
test
loope
mov
es
push
push
fucomip
sub
mov
enter
insl
je
mov
xchg
jg
cmp
repz
inc
hlt
addr16
scas
into
outsl
out
cmp
push
mov
pop
jno
pop
js
stos
popa
ret
inc
sub
stos
rorb
sub
fnsave
loopne
cmp
mov
popf
pop
fistl
in
pop
enter
pop
xor
scas
xchg
xchg
int
mov
int3
mov
ret
mov
inc
or
or
cmp
testl
xor
fs
sub
in
adc
mov
xchg
push
sahf
shl
test
push
inc
es
xchg
mov
xlat
sbb
pop
mov
repz
lods
fwait
pop
mov
clc
clc
fnstenv
add
push
jle
into
push
and
out
rol
xor
xchg
jns
or
fadd
bound
fwait
jo
out
dec
std
inc
scas
cltd
hlt
or
sbb
sub
mov
lods
or
inc
out
xchg
or
ds
cmp
add
push
jb
call
outsb
or
jb
ja
test
xor
test
fistps
jmp
daa
inc
mov
mov
sub
or
fisttps
fistpl
mov
pop
fsubrp
add
dec
mov
incb
repnz
cmc
sub
shll
jbe
or
xor
in
fwait
insb
faddp
or
outsb
or
orl
sbb
mov
jl
js
int3
and
mov
pop
nop
lock
xchg
fxch
lock
ss
push
loop
xorl
popl
sbb
gs
in
fcmovnbe
mov
and
mov
mov
and
xchg
push
and
jl
jle
fimull
mov
inc
mov
icebp
jb
dec
cmp
xchg
jl
jo
pop
or
cmp
cmpsl
xlat
ret
pop
cmc
jb
mov
mov
inc
in
push
leave
jno,pt
cmp
xchg
stos
test
int3
std
rorb
out
xor
xchg
pxor
add
bound
ror
ret
cmp
fcoml
aad
cmp
out
jecxz
jb
pusha
jmp
add
mov
or
mov
loopne
or
and
inc
dec
leave
jmp
sbb
inc
imul
arpl
and
adc
xchg
jno
insl
lds
mov
in
pushf
mov
loopne
out
and
sub
push
lret
adc
dec
mov
ja
xchg
mov
jno
out
cld
sbb
ret
js
stos
test
loop
iret
ja
pop
call
out
hlt
pop
sbb
testb
or
mov
adcb
fs
out
shll
cmpsl
push
jg
xchg
in
nop
push
push
in
sub
imul
mov
xchg
jbe
pusha
push
push
jecxz
cs
outsb
mov
and
daa
mov
or
aam
ds
stos
ljmp
push
pop
xchg
and
aam
and
popf
xor
popa
shrl
cmp
rcl
ficoml
aaa
jge
es
dec
jno
xchg
jge
aam
cld
push
notl
cmp
imul
insl
jb
jg
ljmp
gs
testl
and
lds
xor
ss
gs
dec
mov
jns
cmc
xchg
jbe
push
inc
lret
lea
fdivp
arpl
data16
jno
ja
scas
or
push
call
mov
sti
xchg
pushf
jne
sbb
mov
cmpsb
pop
xor
xchg
push
xor
fildll
into
ret
in
pop
sbb
pusha
mov
add
aas
test
push
push
sahf
hlt
fnstsw
push
mov
mull
fdivl
cmc
fdivp
getsec
mov
or
gs
mov
out
test
movsb
add
es
mov
cmpsb
xchg
xor
jb
and
push
ret
jg
ljmp
js
pop
jne
or
mov
sub
enter
add
in
inc
jo
sub
mov
add
push
and
xchg
and
lcall
xor
in
jnp
cmpsb
ficompl
fdivrs
jg
shrb
xor
mov
push
dec
dec
gs
push
and
es
inc
fidivrs
lods
push
outsb
rol
fstpl
mov
xor
adc
sbb
xchg
pushf
mov
ret
fwait
adc
fmul
lret
dec
jns
mov
repnz
fneni(8087
cmp
int3
push
sbb
inc
adc
clc
lea
shll
fs
fwait
xor
cwtl
mov
mov
leave
daa
andb
mov
add
and
dec
in
in
mov
enter
arpl
fldl2t
cltd
insb
stos
cmp
dec
inc
mov
int
push
lret
shl
jmp
sub
movsl
xchg
das
jl
mov
jae
jmp
cmp
adc
xlat
fldenv
movsb
xor
jle
or
aaa
stos
test
popf
sbb
or
ret
movsl
addr16
adc
xor
pushf
mov
xor
mov
fsubrs
mov
pushw
sbb
mov
jns
cmc
cmpl
sub
xchg
bsf
dec
mov
inc
mov
adcb
fistl
jo
sub
sub
repnz
adc
xlat
roll
lods
rcll
ret
jnp
lahf
xor
push
xlat
cld
gs
mov
movsb
mov
fisubrs
adc
jae
loope
inc
add
inc
lahf
xor
xchg
jle
pop
mov
jbe
or
sub
aad
push
mov
dec
dec
into
dec
inc
xlat
pushf
es
jl
push
jmp
pop
push
sbb
fstps
cmovns
dec
lcall
lea
stos
ds
ret
cmp
roll
jns
jle
sbb
push
jnp
inc
into
daa
addr16
mov
scas
mov
jge
push
leave
sarl
cmp
mov
inc
mov
out
inc
adc
adc
cmp
fwait
jo
ss
mov
lea
adc
insl
push
pop
adc
out
fiaddl
xor
push
sti
icebp
das
push
insb
cmpsb
filds
xor
jb
mov
mov
sbb
xor
cmp
pop
xor
mov
jp
inc
in
mov
jge
mov
mov
pop
and
hlt
cmc
ret
jo
mov
icebp
xchg
pop
dec
cmp
cmp
inc
sahf
sbb
clc
fs
andl
das
dec
js
bound
subb
xchg
arpl
into
jp
scas
popa
adc
cmpsl
and
adc
inc
aas
aam
mov
mov
mov
cmp
inc
jl
sub
mov
repz
mov
add
test
mov
out
gs
add
add
pop
imul
jg
jb
xchg
movsb
test
les
mul
pop
aaa
jmp
test
mov
mov
jmp
pop
and
pop
jne
inc
cmp
sbb
int3
jge
inc
out
jmp
sub
mov
sub
jecxz
or
test
cmp
inc
pop
fnstcw
sub
mov
or
pop
aaa
es
jle
or
xor
inc
or
imul
insl
call
xor
push
dec
out
outsb
imul
fs
adc
ret
pop
xorb
lds
adc
xor
mov
ret
pop
or
xor
sub
call
inc
stos
ret
arpl
add
rol
mov
hlt
loopne
mov
fisttpl
in
push
sub
arpl
repz
or
int3
dec
push
cwtl
daa
or
test
sti
sub
sub
mov
aam
sub
mov
push
sbb
dec
enter
jl
jne
insb
dec
loopne
orl
lcall
mov
add
test
popa
mov
stos
jo
js
xor
insb
mov
imul
cmp
mov
push
xor
inc
dec
popa
pop
mov
adc
dec
fimuls
pushf
subb
jl
jns
int3
mov
stc
loop
enter
dec
in
sub
jecxz
testl
sbb
push
movl
dec
mov
adcl
adc
fdivs
push
and
das
sub
out
push
test
bound
dec
repz
sub
lea
adcb
mov
faddl
inc
pop
pop
sbb
inc
rcl
or
ret
jge
adc
out
mov
cli
repz
pop
test
lods
jno
orl
jge
inc
dec
stos
mov
sub
ss
mov
jns
out
jg
xlat
mov
mov
mov
xlat
fwait
adc
push
scas
out
mov
jne
cmp
cmpsb
sbb
test
movhps
fisubrs
jnp
and
inc
jg
into
xor
jge
xchg
cmp
dec
sub
inc
or
je
imul
jbe
lahf
mov
jle
xlat
sbb
repz
mov
ja
fwait
cmp
push
jle
sahf
pop
into
sub
je
inc
addl
push
pop
mov
stos
loope
fxam
jp
push
add
xor
mov
mov
sub
loopne
xor
add
sbb
jae
pop
or
xor
ds
sbb
out
imul
subl
lds
iret
test
lcall
adc
mov
scas
or
outsb
out
in
pop
loopne
iret
and
out
and
imul
int3
mov
pusha
adc
or
mov
stos
push
dec
sbb
nop
in
and
pop
inc
lcall
cmp
les
nop
out
in
repz
xchg
into
mov
lock
in
adc
js
sbb
shrl
cmp
mov
xchg
lret
ficoms
dec
cmp
test
ds
inc
cmpb
jl
popf
data16
aam
fists
daa
and
iret
push
adc
jnp
add
enter
jge
xor
lcall
out
mov
loope
aad
ret
inc
xor
jne
xchg
std
jl
xlat
js
fmul
es
dec
enter
test
in
jecxz
adc
xchg
lcall
lods
mov
inc
ss
aad
les
xor
push
or
adc
imul
sbb
pop
jo
pushf
imul
ljmp
cmpsb
jle
jecxz
mov
cld
mov
jmp
mov
mov
je
mov
mov
adc
fcoms
push
outsb
stc
add
mov
jg
and
and
mov
and
mov
popl
xchg
out
dec
or
mov
adc
lahf
and
push
pusha
push
data16
repnz
addl
push
ret
arpl
adc
sbb
and
out
scas
cmp
movsl
imul
inc
test
dec
xor
in
movsb
pop
sbb
inc
sbb
mov
fadds
sub
xchg
dec
jecxz
adc
lahf
mov
fmul
mov
xchg
mov
adcl
sbb
sbb
push
data16
push
pop
mov
es
push
add
lcall
fidivrl
jno
shrb
pop
fistl
aam
cli
pop
xchg
pop
int
mov
in
sti
addr16
push
jbe
lret
mov
mov
scas
inc
sbb
xchg
push
xchg
out
test
outsb
lahf
push
mov
out
std
shlb
add
mov
mov
mov
cwtl
pop
cmp
xchg
sbb
or
or
mov
jp
dec
icebp
rcrl
inc
dec
xor
mov
xor
push
es
lea
mov
dec
mov
pop
rcrb
jbe
mov
test
out
ss
fs
mov
and
jmp
and
lcall
popf
jbe
add
scas
je
jo
adc
iret
xor
clc
pop
ljmp
jmp
adc
or
mov
pop
cmpb
jns
das
dec
insl
mov
cli
jnp
int3
adc
cmp
jnp
jbe
popa
js
std
jnp
pusha
and
das
mov
inc
es
pop
add
sub
cli
ret
mov
into
ds
pop
lea
shlb
into
bound
ret
cld
scas
data16
push
push
mov
push
nop
roll
push
sub
mov
jno
inc
mov
clc
inc
lock
cltd
xchg
inc
gs
adc
lock
and
sub
cwtl
and
jb
push
call
mov
jmp
repnz
jmp
cmpl
mov
cld
dec
mov
xor
inc
inc
jb
loop
arpl
xchg
push
dec
jmp
or
jns
lea
cld
mov
mov
mov
xor
jb
andl
insb
cmp
in
adc
mov
lret
add
mov
cmp
pop
aam
ljmp
adc
mov
sbb
sub
dec
xchg
mov
sub
lock
xchg
xor
call
fwait
movsb
test
inc
js
outsb
jle
ljmp
call
mov
enter
lret
mov
jmp
mov
cmp
sbb
div
insl
fwait
add
pop
inc
jmp
cmpsb
or
repnz
mov
imul
mov
xchg
pop
sbb
outsb
mov
and
mov
pop
cmp
ljmp
or
aad
inc
mov
or
mov
fldcw
dec
and
add
pop
mov
ja
clc
shll
enter
dec
mov
dec
jb
test
adc
test
rorb
mov
add
test
inc
sub
sahf
std
add
repz
mov
add
dec
sub
xor
fnstcw
mov
push
movsl
loopne
into
or
xchg
ss
sbb
xchg
add
popa
mov
cmpsb
dec
int
push
call
cmp
pushf
repnz
inc
push
xor
inc
pop
sub
add
sbbb
adc
pop
aas
out
mov
insl
jmp
cmp
and
out
xlat
xor
or
cmp
lods
add
fs
movsl
xchg
xchg
repz
hlt
out
in
stc
mov
ds
fiaddl
xor
rcl
jae
loop
ss
mov
inc
mov
mov
clc
mov
xchg
jle
ljmp
sbb
mov
jnp
outsb
std
mov
dec
stos
dec
push
sub
rcl
and
test
or
mov
in
hlt
jp
es
loope
push
xor
xor
ret
setl
jb
jecxz
in
sub
sti
xchg
inc
sbb
pop
push
andb
stos
mov
imul
divb
add
shll
jbe
inc
loope
xchg
xorl
push
out
divb
popa
adc
and
icebp
inc
loope
xchg
xorl
push
out
divb
popa
adc
and
cmc
inc
loope
xchg
test
mov
nop
push
gs
testb
adc
mov
fcompl
loope
out
or
dec
stc
pop
jmp
and
push
adc
xchg
ret
mov
les
icebp
test
pop
adc
js
push
popa
cmp
rcr
xchg
enter
call
loope
icebp
test
pop
xchg
dec
cmpsl
js
push
dec
cmp
jmp
popf
rolb
xchg
fldl
cmp
inc
or
cmp
mov
xchg
xor
mov
xchg
std
movsb
inc
shrb
pop
sbb
mov
test
cmc
mov
pop
pop
pop
std
inc
mov
pusha
add
dec
add
leave
push
and
adc
fsubrs
pop
decb
ds
mov
xor
imul
sbb
enter
aaa
mov
dec
insl
dec
mov
push
test
icebp
gs
imul
fstpl
mov
xor
rcrl
test
adc
xchg
pusha
int3
push
test
mov
mov
mov
fsubs
adc
js
push
popa
cmp
sub
add
jns
scas
call
loope
xchg
out
jae
xor
pop
sub
pop
and
jb
adc
rcl
icebp
stos
rcrb
xchg
lret
add
and
xor
or
pop
xor
outsl
add
mov
lahf
fnstsw
xchg
fnsave
sbb
jo
add
push
or
jno
sbb
mov
rcrl
test
pop
adc
js
push
popa
cmp
sbb
mov
rcrl
test
pop
aad
mov
outsb
scas
or
outsl
adc
mov
cmp
lock
popa
ret
mov
data16
or
rcr
mov
add
sbb
cmp
stos
and
mov
push
aad
push
cmc
ds
js
and
fisttpll
ss
out
cmpsl
xchg
push
xor
cmp
stos
frstor
pop
mov
clc
gs
mov
xlat
mov
sbbb
sbb
insb
movsl
xchg
pop
add
imul
inc
addr16
fsubrs
pop
cmp
xchg
mov
leave
cs
add
sub
rcl
mov
and
push
insb
add
stc
pop
cld
ja
in
sahf
mov
jo
sbb
repnz
out
xchg
and
mov
out
shlb
pop
cld
cmp
push
mov
push
mov
pop
scas
mov
jne
fistpll
les
repz
pop
push
stos
cmpb
mov
movsb
push
lods
shll
push
mov
pusha
test
std
pop
cmpsb
push
xor
jnp
and
push
mov
dec
ljmp
sub
std
push
xchg
sub
mov
xor
lods
ss
dec
push
into
fistpl
push
mov
pop
stos
mov
flds
dec
call
popa
fucomi
out
sub
pop
test
outsb
fldl
fcom
push
inc
lahf
jl
ret
xor
xor
and
jb
subl
loopne
push
sbb
inc
pop
imul
fidivrs
jo
mov
iret
dec
rclb
pop
stos
dec
dec
es
add
insl
shrl
sbb
ja
into
fadds
into
dec
rcll
or
mov
dec
in
stos
mov
pop
jge
cltd
push
sbb
adc
aam
sbb
aaa
pop
ss
icebp
xchg
nop
loopne
dec
push
ret
inc
adc
aaa
inc
adc
mov
sbb
call
test
mov
add
sarl
sbb
jg
sbb
enter
push
rcll
xor
pop
lahf
lds
jp
shll
faddl
mov
mov
jno
sub
dec
mov
outsb
test
stos
add
fnstsw
or
scas
int3
loopne
rcll
cmc
test
inc
fwait
loop
fisubl
or
add
loope
xchg
push
jmp
or
push
and
subl
cli
leave
dec
mov
rcll
push
mov
nop
lea
inc
push
adc
dec
inc
or
mov
test
mov
ja
fwait
jl
dec
sub
pop
xchg
in
mov
inc
dec
or
push
faddl
test
gs
cmp
push
pushw
xchg
sbb
das
add
popa
dec
mov
or
adc
jne
mov
clc
hlt
add
out
fldcw
pop
jp
lock
inc
mov
popf
ftst
mov
ficoml
pop
in
imul
jmp
adc
push
jo
lock
rcrl
frstor
hlt
inc
aad
mov
xor
xchg
add
push
mov
ds
rclb
and
loopne
sbb
ds
add
sbb
jb
xor
or
inc
jo
adc
sub
daa
outsb
popa
in
or
mov
push
stos
push
or
into
xchg
mov
fwait
jb
outsl
je,pn
mov
add
popf
idiv
mov
dec
xchg
mov
inc
xor
in
fildl
sub
icebp
imul
mov
cmpsb
das
daa
sahf
fwait
cmp
push
adc
xlat
je
pop
orb
xchg
imul
push
test
shlb
and
sub
mov
push
popa
and
in
inc
cwtl
pop
xchg
jecxz
lea
sub
cmp
nop
jmp
arpl
daa
mov
add
lcall
add
sbb
rclb
dec
unpckhps
xchg
test
scas
xor
mov
outsb
adc
xchg
dec
mov
adc
jns
xchg
out
and
hlt
inc
or
mov
mov
notl
or
test
mov
inc
push
and
sub
testb
add
ret
xchg
lcall
sub
scas
clc
loop
push
xchg
outsb
in
ljmp
cmp
stos
add
lods
xchg
shr
adc
add
xchg
add
mov
insb
xchg
pop
push
jb
arpl
mov
fisubl
sarb
adc
ds
in
sbb
andb
rcrb
cwtl
pop
rcrb
mov
jbe
sbb
xchg
cmpsl
cs
jo
insb
addl
fisttpll
push
enter
jge
out
fst
jl
mov
lret
cmpsl
rcrl
and
out
pop
test
into
push
xor
das
iret
xorb
stos
andb
in
rcr
sbb
pop
mov
cmp
popf
repnz
sbb
cmpsb
popf
imul
std
xchg
js
int
fdivl
jae
vpor
xor
ret
add
enter
hlt
inc
lods
enter
xorb
aam
nop
and
jg
cltd
inc
mov
ret
xor
pop
ror
ret
out
push
test
xor
ds
fiadds
fwait
mov
sub
mov
ss
push
loope
inc
jecxz
cmc
lcall
mov
xlat
inc
jb
int3
ds
or
and
pusha
sbb
leave
cli
dec
mov
and
dec
xor
int
lds
and
mov
ret
lds
arpl
xor
pop
mov
and
fisubrl
hlt
js
jo
sahf
xor
enter
call
imul
lea
rcrl
rol
xor
call
scas
insl
ror
insl
gs
mov
pop
cmp
gs
and
hlt
inc
adc
adc
push
pushf
sar
mov
aam
in
mov
stos
repz
or
cmp
pop
pop
stos
movb
xchg
jo
or
movsl
sub
ss
inc
mov
clc
xchg
pop
std
xchg
loope
push
adc
push
push
pop
loopne
andl
push
sub
ss
popa
inc
or
pusha
mov
dec
mov
dec
pop
jmp
mov
mov
or
mov
nop
and
in
dec
add
mov
imul
mov
sahf
mov
lcall
outsb
add
fidivs
add
mov
pop
sbb
cmp
and
push
xor
out
bnd
pushf
add
sti
out
fidivrl
push
fcmovnbe
stc
xchg
mov
sbb
pop
les
rol
insl
pop
add
cwtl
jnp
enter
in
add
push
pop
das
pop
push
das
push
push
cli
and
mov
add
loop
xchg
sbb
cmpsl
pop
stos
test
push
bnd
add
pop
pushf
ret
mov
push
int
repz
test
lret
mov
mov
fwait
sbb
rclb
pavgb
out
mov
push
pop
push
adc
movsl
or
mov
orb
dec
jo
lret
jb
ret
lret
pop
test
cld
mov
mov
cmpsb
push
loop
mov
fwait
in
es
jno
repz
xchg
test
pusha
mov
repz
xor
fsubrl
fwait
sub
inc
jb
adc
add
outsb
mov
cmpb
or
sbb
subb
push
mov
add
jb
aaa
mov
xor
stos
leave
mov
push
inc
stos
movsl
push
pop
push
cld
leave
rcr
xchg
subb
mov
push
loop
dec
mov
inc
dec
movsb
js
aas
sbb
aaa
into
inc
hlt
in
xor
leave
sub
inc
shlb
mov
push
and
movsl
rcr
xchg
lret
adc
adc
mov
shl
sub
pop
or
sarl
bound
in
mov
push
les
test
cmp
imul
mov
dec
and
outsb
mov
mov
pop
mov
mov
xchg
fnstenv
mov
inc
and
je
jb
lret
sarl
fsts
mov
dec
jl
fildl
sbb
pop
push
fwait
inc
push
or
pop
sub
shlb
jbe
mov
insl
inc
push
loopne
cmpsb
stc
popf
mov
mov
das
in
inc
adc
sub
push
lods
lret
and
arpl
jmp
lods
fiadds
test
adc
sbb
in
outsb
sbb
test
jo
into
adc
dec
pop
enter
bound
mov
gs
andl
inc
xor
dec
mov
les
lds
push
dec
push
xchg
ss
sbb
xchg
pop
mov
add
cmp
pop
xchg
stos
sub
sub
adc
ss
movsl
and
jae
pop
insb
movsl
push
xchg
iret
xlat
ljmp
pop
sub
rcrb
jl
stc
outsl
jg
in
lds
sbb
add
stos
xlat
arpl
mov
inc
xlat
dec
in
pushf
add
adc
or
sti
iret
out
cld
mov
nop
std
cmp
push
dec
mov
lret
xlat
xchg
mov
inc
stos
pusha
jge
out
pop
mull
int
push
cmpsb
loopne
fcoml
mov
ljmp
jae
int3
les
cmc
jecxz
gs
movsb
push
sub
cmpsb
cmp
cld
cmc
jl
movl
xchg
fdivp
and
dec
mov
inc
ret
sub
push
sbb
pop
pop
cmc
xchg
lds
push
repnz
shll
xor
fstpl
test
repnz
jecxz
jae
dec
mov
pop
sub
scas
or
cmpsl
mov
xor
or
sti
cmc
dec
sub
insb
xlat
sub
dec
mov
sti
mov
lret
push
cltd
or
ss
xor
rcl
stc
pop
sti
cmp
jg
jmp
nop
int3
bswap
dec
in
ja
adc
mov
jp
test
mov
sbb
pop
ret
jmp
roll
dec
daa
mov
mov
idivb
pushl
adc
das
jecxz
aam
or
pushf
imul
icebp
pop
shlb
lcall
jge
push
enter
aad
xor
fcompl
leave
enter
adc
lods
nop
jmp
sub
and
mov
mov
out
lock
inc
shlb
aas
pop
push
rcll
xor
cwtl
mov
mov
adc
xchg
iret
insl
movsb
inc
pop
jl
sti
cld
stos
mov
dec
ss
ljmp
fdivrl
sbb
aad
mov
ljmp
fcompl
sbb
inc
mov
and
cld
ja
jae
pop
sub
adc
mov
aas
xchg
jmp
sub
xchg
xchg
arpl
inc
push
sub
in
dec
inc
rclb
idivb
in
jmp
leave
push
inc
push
iret
mov
push
repz
call
imul
cmp
sbb
out
or
out
xorb
push
ja
fwait
jmp
or
orb
xchg
adc
les
test
in
jecxz
addr16
int
sarb
data16
sbb
ds
repnz
aad
daa
in
aaa
xor
inc
pop
imul
dec
sbb
daa
lock
in
and
aas
inc
sbb
sarl
jae
mov
sti
adc
push
lcall
add
je
cltd
and
fistpll
push
pop
mov
sbb
cmc
jb
in
cmp
xchg
adcb
sub
repnz
cmpsl
or
and
aaa
and
push
and
insb
dec
adc
pop
xor
shll
cmp
mov
in
shl
jb
fwait
jmp
xchg
jne
out
jecxz
and
ret
jae
mov
dec
mov
sbb
xor
jg
dec
mov
in
sbb
das
push
xchg
mov
adc
dec
in
std
mov
push
push
cli
cmp
cmp
ljmp
insb
loopne
sub
cmp
roll
mov
add
jbe
jge
aaa
jmp
insl
mov
sbb
mov
test
nop
movsl
jns
dec
xor
mov
jl
mov
inc
js
sub
test
das
sub
stc
dec
and
cwtl
pop
icebp
sub
push
arpl
push
xor
inc
adc
fstpl
movd
mov
dec
ret
pop
push
xor
mov
sbb
hlt
push
mov
pop
push
mov
std
inc
or
scas
cld
in
iret
dec
nop
and
out
ficompl
mov
mov
stc
jbe
lods
jmp
lea
xor
adc
fadd
mov
sbb
stos
sub
cmpsb
mov
dec
adc
cmpsl
pop
dec
pop
push
xor
cltd
jmp
or
fimull
mov
test
jle
xchg
push
mov
push
pop
ret
pusha
pop
scas
sbb
jno
mov
les
sbb
push
ret
push
fsubrl
into
repz
mov
xchg
add
xor
insl
stos
mov
lds
lcall
cmp
jge
movsb
mov
aad
nop
dec
fildl
push
shlb
nop
hlt
mov
pushf
mov
push
pop
sti
add
push
enter
inc
xchg
rol
clc
arpl
cs
stos
lds
add
ret
aaa
push
jmp
xor
ret
je
lcall
pop
add
dec
add
mov
adc
pop
mov
flds
mov
sbb
mov
aas
insb
pop
pop
and
add
aad
lcall
xchg
xor
inc
xor
push
mov
lahf
out
inc
sub
dec
aad
push
lock
jno
ret
cmpsl
ret
or
ds
add
ficompl
mov
cltd
push
pushw
push
arpl
xchg
fisttps
pop
aas
insb
mov
bound
mov
jae
ret
pop
leave
sub
mov
sub
fs
mov
int
outsb
ljmp
mov
and
sub
shll
ret
iret
test
mov
mov
or
adc
lret
lret
andl
cmpsl
pop
les
subl
or
aam
jo
sbb
sbb
jmp
hlt
mov
loope
and
popa
movsb
lret
ud0
jp
mov
push
mov
lahf
push
add
mov
jl
push
mov
daa
or
imul
or
mov
pop
xchg
nop
insb
sti
icebp
pop
shl
or
bound
addr16
arpl
jmp
cmp
xchg
sbb
add
iret
push
leave
dec
shld
dec
mov
mov
pop
jo
out
push
lds
push
mov
imul
cltd
repnz
mov
push
push
pop
in
lret
dec
icebp
outsl
cli
adc
push
mov
pop
push
rcr
divb
test
xlat
sbb
test
xabort
or
aaa
es
out
shrl
loopne
std
adc
mov
outsl
rcrl
or
movsl
pop
and
cmp
dec
pop
pushf
fs
jge
sub
js
repz
call
adc
in
inc
in
mov
or
fidivrs
mov
shll
and
das
xchg
inc
ds
mov
sub
sahf
lahf
ret
inc
lret
and
adc
int3
imul
xor
addr16
mov
push
pop
pop
mov
js
es
or
mov
es
cmp
std
add
mov
push
sub
dec
mov
cmpsl
shlb
lcall
dec
mov
data16
add
daa
and
or
push
div
arpl
gs
sub
mov
push
inc
imul
xor
ds
pop
xchg
mov
mov
popf
loop
dec
push
in
adc
ljmp
repnz
testl
mov
inc
pop
dec
push
inc
lock
xchg
mov
mov
aas
jae
jbe
pusha
jno
cld
xchg
stos
push
cld
loopne
das
cld
jle
dec
push
mov
test
sbb
rcr
push
sbb
hlt
sbb
mov
jge
iret
addl
push
cld
scas
pusha
andl
pop
iret
test
fistl
push
sbb
mov
push
jnp
mov
mov
jle
imul
xchg
and
or
or
mov
popa
add
and
pop
push
outsb
js
jge
pushf
movsl
xchg
adc
add
push
loope
mov
pop
xlat
sbb
jl
idivl
jle
lahf
es
jne
insb
mov
push
movsb
sbb
ds
in
pop
mov
or
and
dec
or
inc
lret
movsb
imul
mov
aam
mov
push
jb
inc
sbb
jb
add
in
or
fstl
push
mov
jno
jl
jo
dec
cmpl
call
lea
jge
sbb
ficompl
data16
divl
or
mov
mov
cld
jno
cmpsb
add
xchg
jg
into
adc
jae
push
scas
data16
pop
call
ss
xor
add
sbb
subb
sub
push
cs
jmp
jns
imul
or
push
ljmp
out
mov
pop
loop
subb
xor
add
int3
dec
mov
add
cmp
dec
push
lods
out
xchg
sbb
call
pushf
jg
inc
loope
fstps
les
xor
vandnps
jg
add
bnd
mov
cwtl
shrl
pop
movsl
movsb
dec
sbb
fmuls
stos
dec
in
or
sub
lock
ja
adc
out
lret
into
fidivrl
fsubp
aam
loopne
aam
arpl
adc
stos
mov
push
jecxz
int3
rclb
or
lods
movsb
filds
mov
fs
dec
add
push
pop
rorb
xor
push
dec
addr16
mov
lahf
rol
neg
mov
xchg
fs
or
push
shlb
arpl
mov
sbb
imul
mov
inc
dec
lahf
inc
fidivrl
pop
cmp
aaa
lahf
movb
stos
insb
inc
cmp
mov
loop
pop
mov
sbb
clc
mov
out
mov
dec
gs
mov
fildl
push
sti
bound
popf
mov
push
mov
sbb
xor
mov
xor
sbb
scas
pop
aad
inc
sbb
ficoml
sub
pop
cmc
fldl
popf
imul
aam
push
icebp
enter
insl
mov
jne
push
xor
fabs
jno
fsts
mov
ss
sbb
xor
jecxz
mov
orb
pop
das
or
lcall
ret
mov
or
fiadds
out
in
add
xor
loope
jge
jb
aam
int3
sahf
push
test
mov
hlt
add
adc
push
popf
sahf
test
sbb
or
fistps
adc
add
pop
pop
lahf
popa
dec
ffreep
inc
xchg
xchg
lods
inc
clc
fdivrl
adc
notl
mov
xor
insl
imul
mov
les
cmp
and
pushf
cs
and
pop
bnd
pop
sbb
add
stc
out
and
subl
jg
mov
push
inc
test
scas
or
mov
lea
mov
push
mov
cmpl
je
cmp
rcrb
cmp
mov
add
loope
add
lods
pushf
stos
stos
pop
sbb
push
pusha
inc
int3
stos
andb
mov
loop
pop
cmpsl
addr16
sub
mov
or
and
mov
mov
pop
or
or
adc
dec
rclb
jnp
jl
add
xlat
loope
outsl
pop
xchg
xchg
in
lods
mov
jne
jnp
in
pusha
mov
notl
test
dec
push
ja
jp
cmpsl
fstl
mov
nop
inc
dec
pop
jnp,pn
mov
push
insb
mov
mov
test
xchg
mov
pop
and
or
mov
out
lock
pop
add
dec
sbb
inc
dec
mov
in
mov
cmp
lock
test
repnz
dec
adc
outsl
mov
aaa
push
jo
or
test
push
xor
mov
pop
ret
mov
scas
insl
iret
cmpsb
pop
xchg
lods
mov
mov
cmp
fistpll
outsb
xchg
mov
or
dec
inc
js
push
popa
cmp
sbb
mov
rcrl
test
pop
adc
js
push
popa
cmp
sbb
mov
rcrl
test
pop
adc
js
push
popa
cmp
test
xchg
enter
call
in
shrl
js
push
popa
cmp
call
or
mov
mov
pop
ja
inc
push
push
add
dec
push
push
das
cmp
lcall
or
push
add
push
add
pop
add
add
add
add
xchg
add
das
add
add
add
rolb
add
popa
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
add
mov
pop
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
addb
add
add
rolb
cmpsb
add
add
add
add
push
add
rolb
movb
add
add
push
add
fiaddl
add
add
aas
add
add
add
cmpsb
add
add
add
add
add
dec
add
add
add
add
add
add
stos
add
add
add
add
add
movl
lcall
add
add
add
add
add
add
add
sahf
add
add
add
add
add
int3
add
add
add
add
add
fadds
lcall
add
add
add
jne
jg
rolb
out
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
add
sbb
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
cwtl
add
mov
out
add
add
add
push
dec
add
addb
add
sbb
or
add
cmp
adc
add
add
add
add
add
add
xchg
xchg
add
add
add
add
add
add
add
dec
add
popl
jae
popf
add
add
add
add
add
add
add
push
add
mov
addb
add
add
add
add
add
add
add
add
add
add
movl
pop
add
add
add
add
add
movb
add
add
add
sti
add
add
add
add
add
add
cmpsb
add
add
add
add
add
add
adc
add
add
add
add
cmp
pop
add
add
es
add
add
add
add
and
inc
add
add
add
add
add
add
add
roll
push
add
add
call
add
add
add
jl
adc
add
add
add
add
outsl
add
add
gs
add
add
add
add
and
pop
add
add
add
push
enter
jp
rorb
inc
popf
outsb
das
add
movsb
outsb
aas
ss
arpl
data16
fisubs
sbb
notb
xor
repnz
shl
fstps
cli
xchg
pop
test
inc
imul
or
lcall
popf
nop
inc
dec
inc
dec
stos
mov
js
and
pop
icebp
mov
sbb
pop
arpl
fsub
xlat
ret
repz
inc
out
pop
sbb
push
and
es
in
cmp
inc
mov
pop
or
pop
mov
test
outsl
mov
add
mov
jo
fildll
in
adc
xor
scas
out
adc
adc
lods
push
jnp
push
dec
jae
sbb
lds
push
jne
icebp
cmp
movsb
jo
in
ja
mov
aam
xor
test
push
ror
push
das
ficoms
aaa
enter
mov
imul
in
das
addr16
nop
mov
pop
xchg
jg
xorl
insl
or
fadds
rdmsr
xchg
pop
clc
push
and
and
push
inc
adc
inc
push
fsubs
dec
movsl
sub
aaa
mov
pop
push
add
jno
mov
add
and
mov
outsb
ds
and
dec
aam
divl
lds
repz
bound
bound
push
mov
push
ss
lea
fwait
lods
cmp
cmp
and
and
mov
or
aaa
and
cmp
icebp
fwait
jmp
int3
jecxz
pusha
aaa
fbstp
xchg
nop
sub
mov
dec
repnz
loopne
dec
imul
xchg
rorl
out
sar
sub
subl
mov
mov
cli
pop
cmpsl
mov
movb
imul
ret
xor
and
cltd
push
fldcw
jb
test
sbb
jnp
push
negb
mov
sub
pusha
or
addl
loopne
mov
pop
loop
addl
jnp
mov
sub
inc
xchg
dec
es
sbb
stos
sbbb
loop
pop
adc
mov
mov
dec
push
and
das
inc
jle
mov
jae
cld
sbb
movsb
jle
ds
andl
dec
push
push
pop
shrl
inc
gs
dec
ss
nop
sbb
pop
mov
xchg
jle
mov
push
jge
in
and
cltd
int3
lods
lcall
rorb
and
and
clc
mov
mov
mov
xchg
mov
out
movl
cltd
sarb
and
imul
les
cmpsb
inc
xor
jns
or
add
add
add
rolb
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
orl
movl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
push
pushl
call
mov
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
pushl
call
pop
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
cmpl
jb
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
repz
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outsl
hlt
add
pop
hlt
add
push
hlt
add
dec
hlt
add
inc
hlt
add
cmp
add
xor
add
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
nop
hlt
add
pushf
hlt
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
add
dec
cmc
add
jo
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cmc
add
int3
cmc
add
aam
add
fdiv
add
in
add
in
cmc
add
hlt
cmc
add
pop
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
add
sub
add
cmp
add
dec
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
loopne
add
or
add
xor
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
scas
testl
add
add
test
add
jl
add
je
add
insb
testl
in
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
enter
shl
add
fdiv
add
lock
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
push
clc
add
mov
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
add
add
or
add
adc
add
sbb
add
and
add
sub
add
xor
add
inc
stc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
stc
add
push
stc
add
mov
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
