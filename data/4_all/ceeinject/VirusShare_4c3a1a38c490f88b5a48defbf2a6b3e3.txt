call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jno
xchg
into
sbb
or
jb
add
scas
in
imul
push
in
sbb
fisubrs
sbb
or
jl
insb
sahf
pop
mov
lods
dec
mov
mov
insb
mov
ds
cs
lods
xlat
lcall
xchg
jo
mov
mov
pop
in
sbb
push
mov
stos
dec
mov
mov
notl
dec
pop
pop
dec
inc
popl
insl
daa
out
test
fidivrs
and
test
ja
enter
push
mov
cs
jns
jge
pop
into
inc
insb
inc
cmp
sbb
mov
sub
push
dec
arpl
xchg
add
xchg
imul
xor
pop
mov
pop
lret
test
xorl
leave
shll
mov
add
lcall
add
jl
cld
mov
xchg
push
mov
stos
mov
push
test
sub
mov
push
and
orl
bswap
sub
sbb
pusha
out
jl
sub
dec
pop
ds
inc
addr16
ja
push
repnz
fsubl
das
dec
ficomps
pop
fwait
bound
dec
shrb
dec
int3
jp
or
push
mov
mov
cmpsl
pop
movl
test
in
sub
sbb
insb
outsb
mov
test
ficomps
into
insb
lcall
pop
mov
lods
dec
pushf
jle
outsb
cld
push
in
push
fdivrl
int3
cs
sub
sbb
or
jl
insb
mov
scas
mov
jle
outsb
cld
push
in
push
fdivrl
int3
cs
call
in
xor
sub
mov
out
jg
mov
jg
out
jo
sbb
pop
cld
lock
xor
xchg
rolb
lock
dec
mov
je
test
sbb
push
int
lret
mov
sarb
lahf
daa
pop
xchg
mov
ss
out
out
xor
dec
xchg
jbe
xor
push
add
lock
lret
mov
cli
mov
push
addb
psubw
mov
shll
out
xor
push
insb
jo
stos
fwait
jmp
ficomps
mov
mov
clc
xor
lret
mov
test
cmp
ja
xchg
insb
stos
xchg
ds
fmuls
das
dec
sbb
xchg
call
popa
cmp
cld
xchg
mov
xor
sub
pop
sub
cmpsb
xchg
popl
scas
fsubs
and
nop
pop
push
push
or
jbe
push
mov
into
mov
or
mov
es
push
add
ljmp
stc
mov
mov
js
out
ss
out
pop
add
mov
or
pop
shl
pop
shr
push
cmp
mov
loop
jbe
adc
mov
leave
addr16
mov
hlt
sbb
call
mov
and
pop
outsb
pop
mov
sbb
mov
hlt
xchg
dec
lods
push
push
jae
push
inc
repz
gs
sbb
and
mov
lcall
dec
lods
cli
push
outsb
outsl
jo
data16
testl
xor
mov
gs
jge
fisttpll
fs
xchg
rolb
scas
in
sarb
scas
ficompl
int
push
and
pop
movsb
icebp
call
adc
xchg
mov
movsl
clc
repnz
dec
std
pop
or
call
xchg
xchg
push
push
or
fsubp
jmp
test
in
lea
ljmp
cmp
push
nop
or
or
outsl
xchg
or
lds
mov
idivl
adc
inc
imul
dec
sub
jb
xchg
and
and
mov
adc
shlb
mov
mov
iret
std
nop
loop
or
call
into
add
or
fxch
pushw
inc
dec
push
fidivrl
in
ds
out
push
push
mov
test
and
outsb
inc
cmp
cli
rolb
mulb
mov
int
pop
dec
or
loope
and
outsb
xchg
fcmovne
jmp
arpl
push
fcoml
pop
mov
cltd
imul
inc
push
sub
imul
or
mov
jle
pusha
into
adc
ret
cmp
pusha
and
popf
push
mov
lahf
add
push
push
pop
xchg
mov
add
leave
jg
add
and
stos
dec
rcll
pop
icebp
sbb
mov
jns
iret
cwtl
mov
dec
pop
sahf
scas
xor
xor
cmp
addr16
leave
ret
ret
push
mov
adcb
push
cmpsl
fwait
scas
insb
jbe
hlt
xchg
scas
cld
sahf
loopne
and
mov
and
dec
add
cmc
sub
mov
icebp
pop
or
jg
inc
jo
or
nop
push
sbb
jbe
aam
ja
push
sbb
out
inc
pop
push
xchg
xor
mov
mov
push
cmpsl
jae
push
cmc
arpl
lahf
rorb
mov
add
movsl
and
push
jo
loope
dec
and
add
lods
and
popa
cltd
mov
ljmp
fldenv
push
and
rcrl
out
cmc
push
dec
out
pushf
fildll
rcl
pusha
lods
dec
add
pop
dec
lds
cmp
add
test
or
push
je
insb
sti
outsb
cmp
ljmp
sarl
scas
popf
mov
test
adc
jg
sub
repz
test
mov
xor
in
xchg
mov
pop
xchg
jnp
pop
push
scas
fsubrs
jnp
into
call
movsb
or
adc
push
add
jno
ljmp
outsb
mov
enter
sahf
lods
popa
scas
out
mov
sub
pop
xorl
ljmp
insl
dec
cmp
adc
clc
mov
sbb
mov
cltd
and
cmpsb
rcrl
adc
in
xor
mov
cmp
dec
jbe
fmuls
mov
aaa
test
cmpsl
mov
imul
aad
xor
push
in
movsb
int
push
jbe
ret
aas
add
movsl
pop
lods
shl
lahf
adc
or
aas
pop
mov
mov
jle
in
outsl
lahf
lods
pop
lret
xchg
mov
fadd
mov
cmp
dec
in
dec
push
cmc
lock
xor
sbb
rcrl
push
sbb
fidivrl
jmp
dec
stc
cmp
std
rcrb
fadds
cmp
xor
lock
dec
sub
mov
test
sbb
dec
sub
mov
mov
pushf
out
xlat
repz
loope
testl
jne
aas
sub
popw
xor
cmp
fcomps
mov
xor
movsl
shlb
lock
jmp
mov
pop
and
jp
jg
scas
push
dec
push
popa
dec
xchg
cltd
daa
or
dec
jne
int3
clc
ret
inc
inc
dec
add
and
jecxz
cmp
cmc
jecxz
cltd
repz
xchg
adc
dec
loope
pop
lret
and
es
mov
inc
and
in
sbb
xchg
icebp
mov
add
cmpsb
add
repnz
sub
rorl
pop
repnz
adc
mov
lret
test
dec
addl
sub
scas
sti
jmp
scas
ljmp
lods
inc
mov
pop
adc
xchg
fcoms
add
jp
mov
adc
push
and
push
dec
outsl
jno
sub
inc
nop
mov
push
or
xchg
cltd
test
jbe
out
fisubl
push
fsubs
repnz
mov
mov
xor
repnz
or
mov
cmp
adcl
xchg
mov
and
jg
jp
sub
mov
lcall
inc
xchg
shlb
rcrl
push
mov
cltd
cmc
out
sbb
jp
cmp
aas
dec
pusha
iret
insl
jl
push
xchg
test
mov
movsb
in
leave
aas
iret
adc
dec
sbb
roll
pusha
cs
ret
stos
test
xchg
bound
jmp
repnz
imul
test
and
cmc
inc
lret
repz
mov
sub
or
sub
lock
cmp
daa
pop
mov
cld
cwtl
out
nop
loop
pop
mov
repnz
in
cmp
xchg
lods
ja
xor
lea
push
lods
in
insl
cltd
inc
jmp
jg
pop
xor
iret
push
mov
rdtsc
rcll
lea
adc
mov
hlt
pusha
sub
lods
enter
add
addr16
xchg
add
bound
je
cmp
push
out
ja
mov
addr16
jge
iret
les
insb
enter
out
les
std
std
dec
push
ds
pop
mov
lahf
push
ljmp
xor
add
dec
lds
mov
and
xor
call
lods
lret
repz
pop
ret
dec
cs
mov
and
daa
cli
stc
xchg
adc
out
dec
lret
stos
shl
adc
outsb
iret
cmc
cmp
mov
sub
mov
les
xchg
push
cld
arpl
in
cmpsl
ds
mov
push
dec
mov
out
sbb
pop
push
jle
push
mov
shrl
fs
or
sub
or
cmc
sahf
popf
adc
lods
sub
ret
mov
or
push
xchg
sbb
adc
es
mov
cmp
mov
jl
push
aaa
mov
and
or
sahf
push
movq
mov
adc
jno,pt
les
push
push
arpl
xchg
mov
xchg
pop
dec
test
push
sub
pop
mov
in
outsl
movsb
sbb
inc
pusha
fdivrl
cmp
popa
xchg
addr16
and
in
mov
fldt
jmp
pop
ret
mov
sub
test
add
pop
lahf
test
imul
jo
push
dec
ficoml
fists
clc
cmpsb
xor
mov
sub
xor
adc
and
in
mov
mov
pusha
mov
stc
sbb
pusha
cmpsb
add
cmp
mov
sbb
movsb
pop
repnz
push
xchg
lods
cmp
add
push
in
pop
insb
push
mov
pop
test
fwait
and
pop
mov
add
jnp
testl
pop
leave
jns
movsl
js
jnp
push
sbb
jb
out
sub
adcb
xor
leave
sub
or
repz
push
out
sub
inc
mov
jecxz
test
fs
lret
fildll
and
lret
stos
xchg
mov
jmp
mov
xchg
fmull
xor
xchg
or
outsl
or
imulb
fstpt
mov
pop
sub
ret
shll
mov
ds
jne
dec
pop
pop
pop
aaa
sbb
out
test
arpl
xor
push
lret
pop
sbb
outsl
dec
xchg
xor
adc
call
mov
pop
insl
jbe
lcall
mov
push
add
xor
lahf
or
jno
xor
add
lods
mov
rcrl
out
loop
in
pop
imul
pop
int
ss
jb
xor
jnp
xchg
mov
sti
and
js
cmp
test
or
add
add
xor
mov
nop
dec
mov
xchg
cmp
daa
std
ret
cmc
jbe
in
lock
imul
or
or
in
pop
and
fstpt
and
mov
ror
call
mov
ds
inc
sub
enter
jne
cmpsb
pop
sub
mov
ljmp
jns
adc
lods
jl
adc
cltd
lahf
or
hlt
push
sub
je
add
mov
add
jecxz
cltd
or
and
addb
or
or
pop
lock
mov
mov
jo
mov
push
push
push
adc
ja
test
jp
inc
pop
mov
cmpsl
xchg
lcall
mov
out
xlat
cmp
testl
call
push
test
mov
shrb
cmpsl
leave
pop
shll
jb
xor
sub
enter
rcrl
cmp
in
scas
mov
jb
dec
dec
dec
and
sar
ljmp
pop
fistl
ret
add
das
xor
mov
push
push
clc
ret
addr16
popf
fnstcw
dec
daa
outsl
scas
arpl
push
push
mov
lds
in
pusha
mov
int
pop
and
ja
mov
in
fwait
lret
les
dec
daa
in
cltd
xchg
gs
andl
movsb
sbb
ret
sbb
dec
pop
adcl
jp
jmp
pop
test
xchg
jmp
lods
mov
cmpb
add
add
mov
push
adc
push
fs
mov
adc
mov
imul
shll
int3
xchg
xlat
repnz
inc
leave
adc
xor
xchg
xchg
movsb
jbe
sti
test
and
ss
add
shrl
jb
adc
ret
in
loopne
sbb
lea
xchg
mov
pop
cli
inc
sub
push
dec
sbb
sbb
loope
adc
scas
inc
mov
mov
cli
cmpb
clc
cmpsb
mov
xchg
ret
mov
adc
imul
mov
fwait
lds
sbb
mov
cmpsb
mov
mov
xor
clc
pushf
jne
ret
lock
sub
mov
xchg
jmp
add
subl
sbb
aam
fldenv
jecxz
cmp
cmp
out
xchg
leave
enter
jno
jle
movsl
cmpsb
mov
loopne
mov
inc
dec
cmp
enter
pop
outsb
mov
addl
shl
shrb
sbb
shr
out
jl
ds
addr16
mov
push
aaa
sbb
mov
push
cmp
mov
jb
scas
in
add
aad
cmp
decb
mov
insl
xchg
inc
loopne
dec
pop
cmp
mov
stos
dec
add
cmpsl
cmp
dec
mov
pusha
fstpl
lods
dec
lods
cmpsb
ficompl
xchg
sub
mov
dec
adc
fdivs
xorb
mov
push
leave
lret
mov
lds
jl
cmp
push
jp
add
inc
and
cmpsb
mov
inc
adc
mov
dec
or
sbb
add
push
scas
xor
xor
pop
push
vphsubbw
repz
rcrb
sahf
ljmp
js
mov
add
cmp
dec
mov
loope
or
push
sub
inc
out
call
test
cmp
iret
xor
jns
xchg
pop
pop
sbb
in
ljmp
sbb
jp
ljmp
sub
cmp
into
mov
lock
aas
xor
pop
int3
xchg
push
and
test
rcl
sub
pop
cmp
stos
fildll
cmpsl
mov
enter
ja
nop
jle
clc
add
repz
dec
aad
adc
aas
lahf
int3
push
aas
les
sbb
pop
movhps
mov
out
inc
fwait
bound
mov
aad
loopne
mov
mov
xor
cwtl
lret
int3
cmp
inc
push
mov
pusha
pop
in
lods
cmp
jle
lds
jnp
jb
insl
lcall
xchg
shll
icebp
fcmovb
sarb
lods
call
fldln2
cld
loop
cld
cmc
adc
lcall
addb
les
pop
shll
negl
jo
xlat
sbb
in
sahf
shl
cmp
cli
mov
insl
sub
orb
addr16
inc
pop
jg
sbb
hlt
movsl
sbb
push
in
fdiv
nop
pop
aam
mov
dec
dec
mov
leave
push
add
rorl
push
mov
lahf
inc
or
fistpll
xor
fisubl
aam
sbb
repz
pop
loopne
popf
jg
xchg
cmp
pop
sahf
mov
mov
push
or
fistps
cmp
push
insl
enter
ss
jge
gs
lea
xor
pop
std
enter
lcall
das
sbb
xchg
scas
mov
jmp
adc
fcomps
cmp
ja
mov
mov
adc
cmp
push
outsl
inc
xor
xchg
mov
in
adc
add
jo
mov
adcb
ja
ss
sti
out
das
call
repz
repnz
out
lea
out
and
dec
outsb
inc
sbb
fstpt
and
sub
insl
js
lcall
mov
mov
pop
push
cmpsb
mov
jo
scas
les
pop
fcmovne
punpckhdq
jg
xor
or
jb
in
shlb
and
mov
mov
iret
push
fwait
movsl
pop
movsl
data16
bound
add
jne
aas
nop
cmp
data16
xchg
or
inc
bound
arpl
add
cmpl
sbb
clc
daa
femms
mov
adc
cmp
lock
push
cmpsb
out
stos
repnz
xchg
push
imul
pop
pop
jo
xchg
mov
mov
adc
cs
jecxz
rcll
and
cmpsl
cmp
xchg
add
jbe
ja
sti
inc
xchg
xchg
or
sub
sarl
je
inc
inc
into
sar
and
shll
out
fwait
mov
inc
sbb
es
mov
or
add
dec
mov
hlt
outsl
loop
stos
sbb
xchg
out
out
test
in
sub
pop
insl
xchg
cltd
ja
or
call
push
inc
sub
mov
iret
cmp
int3
test
xchg
mov
loope
shr
xor
fistl
daa
xchg
test
xor
xor
faddl
or
sbb
xchg
int
mov
adc
pop
sbb
cmp
push
je
or
dec
sub
jg
insl
push
dec
dec
mov
sbbb
cmp
sub
repnz
mov
add
sbbl
stc
lds
mov
movsb
push
sti
ja
jne
hlt
pushf
mov
clc
jl
inc
jge
inc
cmpsl
inc
mov
xor
pop
adc
stos
cld
mov
es
wrmsr
and
and
ljmp
aas
adc
add
lods
cmovae
cmp
in
lock
and
add
insl
push
mov
cmpsl
xor
or
jl
movsl
push
clc
mov
jmp
ds
pop
in
lods
mov
dec
mov
sub
stos
jmp
faddl
dec
outsl
jmp
push
mov
and
sub
ret
sbb
xor
jle
mov
fs
test
test
xor
push
xor
dec
out
sbb
pop
jl
enter
int
push
add
jae
mov
cld
push
loopne
aas
push
aaa
fwait
and
mov
sbb
mov
dec
pop
xchg
cs
sbb
stos
sar
xor
popf
push
in
je
mov
stos
cmp
push
andb
lret
sbb
jmp
pop
rol
les
push
fisubrl
mov
in
xchg
xor
pop
sbb
gs
fmul
fidivrl
call
cmpsl
dec
insb
testb
in
mov
and
popf
repz
jg
mov
xor
xlat
mov
or
ljmp
xor
sahf
aad
data16
scas
jmp
mov
inc
push
lds
push
sbb
sbb
fcompl
pop
dec
jno
mov
aas
xchg
jo
dec
outsb
dec
and
jg
sbb
xchg
mov
dec
xchg
add
addr16
add
inc
add
std
adc
sub
sub
jge
leave
push
in
jmp
mov
pop
add
leave
nop
dec
subl
pop
clc
rcl
test
inc
adc
push
ja
testl
mov
icebp
sarl
nop
scas
sbb
jmp
mov
pop
pop
cli
push
or
out
dec
xorl
adc
xchg
fcmovnb
stos
or
sbb
pop
inc
jo
and
cmp
adcb
iret
ffree
mov
imul
test
dec
inc
jle
loop
hlt
cltd
js
xchg
outsl
idiv
push
ljmp
sub
fldcw
mov
sub
nop
push
mov
pop
mov
out
mov
sbb
xor
nop
insl
in
jb
fcmovne
insb
rol
call
xlat
cwtl
mov
insl
imul
testb
incl
adc
push
mov
xor
xchg
jl
push
inc
cld
push
data16
pop
cmpb
andl
ret
adc
jb
or
pop
adc
ret
or
sub
insl
repz
inc
xchg
xor
jnp
mov
mov
pushf
dec
xchg
inc
jg
pushl
add
push
lds
sbb
call
lock
sbb
stc
adc
sti
out
or
cwtl
cwtl
rorb
subb
cmc
loope
dec
sbb
sbb
jmp
in
hlt
popa
jo
roll
add
mov
je
ds
pop
mov
sahf
mov
outsl
pusha
push
repnz
adc
aad
test
jecxz
cld
add
sbb
adc
in
je
popa
adc
mov
fisubl
rorb
add
add
dec
daa
cmc
mov
dec
inc
cmp
xor
xchg
jg
or
pop
das
sub
jne
sub
xlat
outsl
inc
sub
and
adc
cmpsb
xchg
pop
adc
fs
rcr
test
sahf
push
out
cmp
inc
testl
stos
xor
inc
pop
or
lcall
sub
daa
adcb
ret
insl
pusha
or
xchg
push
call
subl
daa
mov
rol
lret
gs
sbb
and
popf
lret
popa
int
lcall
jnp
test
xchg
inc
pushf
cli
pop
pop
jmp
mov
fdiv
xor
stos
out
push
pop
lods
and
inc
mov
in
jge
sahf
sbb
scas
pop
imul
rcrb
dec
out
adc
pop
xchg
in
hlt
ja
sarl
mov
dec
ret
jne
stos
pop
rcrb
fistps
and
pop
xor
push
movsb
jge
cmove
repz
push
jae
add
push
xchg
inc
mov
lock
stos
adc
inc
sbb
out
sbb
inc
mov
js
mov
mov
ret
cli
sub
fwait
bound
add
sub
xor
xor
push
lea
pop
push
dec
orb
pop
sub
loopne
mov
jbe
xchg
push
add
aaa
nop
cld
ret
xor
pop
fs
repnz
pop
icebp
cmp
and
test
xchg
adc
flds
sub
or
mov
lret
xchg
imul
pop
aad
ret
aad
inc
adc
unpckhps
test
adc
jl
insb
mov
scas
mov
jle
outsb
cld
push
in
push
fdivrl
int3
cs
sub
sbb
or
jl
insb
mov
scas
mov
jle
outsb
cld
push
in
push
fdivrl
int3
cs
das
into
or
or
jge
push
scas
mov
jle
push
push
cmc
push
fdivrs
cld
sub
add
xchg
cli
and
jl
jl
pop
mov
push
in
jle
sbb
inc
xor
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
mov
movsl
loope
and
fwait
jmp
insl
stos
rorl
add
jno
inc
gs
lds
xchg
movsl
loope
icebp
vpmaddwd
andb
xor
and
jno
inc
jne
sbb
dec
movsl
call
xchg
shl
inc
adc
je
or
add
adc
fscale
cmc
and
icebp
sub
idiv
loopne
xchg
add
pop
outsb
pushf
outsb
and
jno
inc
mov
dec
xchg
dec
xchg
add
adc
iret
lds
dec
jge
outsl
xlat
add
in
xor
int
xor
test
inc
hlt
xchg
cwtl
mov
leave
loop,pn
ja
xor
xor
fidivl
xor
mov
insl
test
mov
icebp
lds
std
roll
test
out
mov
inc
add
pop
push
mov
test
pop
jns
dec
movsb
pop
in
ljmp
and
jno
mov
int3
sub
orb
lods
push
lcall
adc
in
in
inc
and
cli
xchg
out
xorl
ja
out
stos
add
sub
inc
jae
push
and
xchg
ret
cld
cmc
hlt
jmp
mov
nop
rcll
fs
adc
pop
add
pop
xor
in
stc
aam
repz
lock
mov
test
inc
jo
ja
push
imul
adc
xor
aam
loopne
ret
out
vpmaddwd
in
adc
adc
inc
jne
mov
mov
movsl
loope
icebp
vpmaddwd
in
adc
adc
inc
jne
mov
ficoml
and
inc
scas
mov
ret
inc
cmp
cld
ss
cs
into
negl
xlat
mov
adc
jo
add
insl
or
xchg
ficompl
fldenv
xchg
or
lret
pop
mov
mov
mov
add
jbe
adc
pushl
jo
das
je
out
inc
sub
fcomip
add
sub
mov
mov
arpl
mov
xor
out
mov
int3
cmp
repz
dec
paddw
fiadds
aad
cmp
pop
mov
fcoml
mov
popf
lds
subb
jns
sbb
mov
push
cld
adc
lea
sti
sub
popf
popa
popl
aam
and
mov
hlt
mov
es
jo
xchg
add
add
mov
fisubrl
stos
adc
clc
outsl
and
fistl
sbb
mov
cld
dec
insb
ljmp
jo
mov
test
inc
add
ret
push
mov
pop
xchg
jle
sti
std
rorl
adc
cwtl
shl
fmull
push
outsl
or
cmc
push
and
sti
sbb
aad
xchg
mov
lds
mov
push
inc
idivl
outsl
push
repnz
fistpll
cmpsb
mov
mov
mov
push
add
adcl
mov
xor
in
jae
imul
clc
cmp
out
or
int
mov
out
xlat
jg
or
out
sub
pop
add
inc
xchg
mov
rcll
paddsw
add
adc
lock
xchg
not
adc
lret
sub
jmp
divps
mov
xor
data16
leave
xchg
stos
jb
das
add
jne
in
pop
mov
adc
shrl
lods
jl
add
int3
add
test
sbb
enter
data16
pop
xchg
sub
fdivl
xchg
xchg
sub
add
icebp
inc
outsl
cltd
lea
iret
stc
and
das
lcall
outsl
lahf
mov
adc
xchg
jp
loope
insl
pop
and
push
notb
lret
mov
jnp
or
pop
xor
or
or
mov
inc
loopne
pop
and
mov
sub
adc
dec
int
icebp
stos
and
jle
sub
cmpsb
push
xlat
cmp
jne
adc
mov
inc
inc
pop
push
shll
push
jne
cs
mov
pop
xchg
call
jle
or
mov
jg
push
mov
pushf
add
mov
adc
mov
mov
mov
mov
pop
or
sub
pop
jmp
mov
pop
loopne
fisttps
data16
add
cs
mov
fmulp
insl
xor
push
mov
lcall
dec
lods
mov
xchg
add
test
mov
mov
hlt
loop
or
xor
jne
rolb
pop
and
pop
enter
push
dec
jge
pavgw
in
pop
push
cmp
je
mov
pop
cmp
loopne
cltd
xchg
pop
fisubrl
rol
xor
or
js
dec
fs
loopne
inc
jp
add
cmpsb
ficomps
cltd
mov
aaa
mov
cmc
ss
inc
addr16
mov
outsb
fistps
out
out
gs
inc
call
insl
dec
or
mov
js
outsl
out
lret
fidivs
cmp
adcb
sti
mov
sub
pop
dec
and
cwtl
loope
inc
inc
jo
xor
jno
setnp
inc
xor
subl
dec
pop
js
inc
and
cmpsb
out
mov
mov
jno
out
push
adc
repnz
addr16
cmp
sbb
jno
out
xchg
mov
xchg
push
mov
repnz
push
fsts
adcb
popf
mov
mov
push
jl
imul
cmovns
int3
mov
mov
repnz
cmp
adc
sbb
xchg
data16
sahf
add
mov
cmp
lcall
xor
add
push
mov
xchg
subb
rorl
jae
pop
push
lahf
dec
aam
cmp
push
and
pop
sub
imul
loope
mov
inc
inc
aaa
mov
cmpsb
pop
mov
int
cltd
stc
mov
inc
dec
and
inc
loop
push
nop
movsl
push
cmpsb
movsb
mov
ret
pop
aam
xor
clc
jae
mov
inc
xlat
in
fidivl
sbb
aaa
xchg
mov
shlb
cmpsl
stc
mov
pop
out
inc
adc
xchg
and
pop
adc
adc
ret
fwait
add
push
orb
and
scas
push
inc
inc
cmpsl
incb
dec
xor
fsubrs
push
inc
and
aas
sbb
jae
stos
pop
push
inc
add
push
xchg
or
decb
adc
bnd
mov
push
aam
lock
jmp
and
add
shll
inc
call
push
pop
shrl
clc
in
and
mov
mov
aas
cmc
inc
das
gs
pop
sub
xchg
in
lods
or
sub
push
xchg
pop
push
or
push
sub
test
sti
jg
jne
sbb
loopne
push
dec
xlat
xor
repz
ja
lret
jmp
cltd
cmp
mov
repz
repnz
ret
dec
jo
loop
jb
ret
sub
and
test
mov
and
xor
add
pop
lods
pop
cwtl
cmpsl
pop
nop
dec
or
pop
pop
xchg
push
outsb
mov
int
lret
jg
iret
xchg
hlt
jmp
js
outsl
fidivrs
pop
inc
data16
push
sub
sar
xlat
adc
ljmp
sub
in
mov
enter
pop
addr16
lods
dec
fwait
lahf
mov
pop
stc
in
pop
lret
adc
xchg
mov
pop
clc
or
push
jae
inc
xor
arpl
aaa
lods
jne
mov
jp
out
sub
xchg
testb
rcrb
jge
and
xor
xchg
les
jge
jnp
xor
jl
sarb
fildl
aad
sub
aad
xchg
inc
ret
test
daa
repnz
mov
pop
pop
inc
repnz
jmp
inc
cmpsl
pop
not
mov
mov
les
xchg
fisttpll
sbb
push
jmp
test
jp
je
je
fisubrl
jns
or
or
imul
mov
cld
push
lahf
out
insb
and
mov
adc
in
jne
push
jp
and
fisttpl
jecxz
sub
xorl
inc
mov
lock
or
adc
push
in
addl
mov
sbb
outsb
decl
push
add
dec
mov
js
xchg
lods
mov
push
out
cmp
mov
push
dec
or
adc
int3
in
mov
inc
add
sbb
sbb
push
push
dec
and
sbb
inc
ja
scas
mov
std
dec
fisubrs
loope
cli
mov
outsl
add
and
jl
insl
xor
call
js
cmp
jne
jbe
mov
pop
jmp
xor
or
popa
lock
push
sub
push
andl
fstpt
cmp
test
in
call
out
popf
test
test
push
inc
icebp
and
fs
das
test
gs
xchg
fistps
or
mov
inc
sub
movsb
push
test
rep
aaa
pop
mov
fs
cmp
je
add
test
ds
sub
imul
idivb
and
stc
stos
data16
mov
mov
dec
sub
or
fdivrs
gs
repnz
int
pop
dec
cmp
mov
or
sub
mov
mov
cs
mov
xor
mov
mov
mov
test
mov
arpl
jbe
ljmp
push
or
push
movsl
icebp
mov
shrl
sbb
test
cmp
lods
sbb
imul
scas
test
shrl
and
add
fistl
jne
jo
push
subl
inc
mov
lds
out
jge
cmp
jns
es
xchg
subl
in
rclb
sub
xor
mov
or
in
hlt
js
sub
or
mov
pop
mov
and
mov
je
int3
ret
and
pop
dec
xchg
aas
outsl
jmp
ficompl
fdiv
push
insb
mov
sub
mov
cmpsb
lods
int3
mov
lret
clc
outsb
lods
push
adc
call
addr16
jns
xor
adc
rcrl
push
mov
psraw
fnstcw
or
data16
sbb
movsb
rol
cmpsl
or
jb
je
jl
je
pusha
mov
js
test
mov
inc
rcrl
fdivrs
mov
cmp
leave
push
test
and
hlt
fdivl
cs
clc
test
call
and
xor
inc
subl
or
or
xchg
xchg
sub
push
pop
mov
mov
pushl
ret
cmp
lahf
ljmp
es
fstpl
sub
pop
lahf
xor
call
mov
xlat
mov
cwtl
inc
dec
mov
and
push
or
sbb
mov
mov
lea
add
inc
jne
jnp
enter
shlb
inc
add
lretw
popf
jg
bound
movsl
test
repz
mov
pop
movsl
mov
out
call
aam
jo
lcall
mov
hlt
jl
add
int3
xchg
mov
jg
inc
push
inc
xchg
pop
cli
push
out
fnclex
sbb
pop
fadds
mov
cmp
pusha
call
lret
mov
mov
xchg
xor
out
in
ficomps
fadds
pop
sarl
cwtl
pop
cmp
push
push
test
xor
pop
cmc
outsb
stc
add
les
push
test
pop
xor
enter
xor
jbe
jecxz
ret
into
sub
mov
cmpl
mov
scas
or
sbb
sti
push
mov
mov
test
call
das
fstps
xchg
cmp
sbb
mov
or
push
fistl
in
mov
out
stos
rolb
lahf
dec
repz
xchg
std
pop
sahf
dec
xchg
xor
in
leave
inc
outsb
mov
inc
jle
inc
rcrb
xchg
pop
adc
or
shll
jb
jg
lcall
mov
jae
stos
cltd
in
sub
push
ljmp
lds
lret
idiv
fimuls
push
fisttps
xor
xlat
dec
mov
mov
sbbb
pop
lahf
mov
mov
mov
pop
cmp
adc
dec
in
lock
and
ds
sti
xchg
sbb
mov
and
rcrl
xlat
in
sbb
lahf
jle
cmc
je
hlt
push
jnp
std
mov
mov
push
gs
mov
ss
loope
ss
out
insl
cmp
lret
rcrl
and
ljmp
jecxz
and
loop
or
adc
shl
imul
subb
mulb
cwtl
jecxz
adc
lahf
mov
jo
in
xor
aad
fucomi
mov
inc
fsubr
dec
in
cmp
sub
cmp
dec
stos
shll
les
repz
pop
mov
push
bound
cmovbe
mov
push
mov
sarl
cltd
mov
mov
xor
outsl
addr16
sahf
pop
movsb
mov
inc
inc
jb
mov
dec
int
mov
decb
mov
fsub
jne
xor
sbb
repz
sub
add
mov
stc
cmpsb
cld
sbb
std
mov
lods
test
xchg
pop
and
jmp
lret
and
or
add
mov
mov
cmp
outsb
mov
cmp
sbb
dec
and
test
test
subb
sbb
lahf
mov
imul
push
jge
test
lret
cmp
pop
std
inc
int
inc
lahf
cmc
mov
dec
xchg
push
cmc
add
and
pop
cmp
pop
lcall
adc
jo
push
in
xchg
mov
adc
mov
and
int
dec
adc
dec
in
stc
xor
jno
aad
jg
dec
fists
stc
aaa
lods
dec
cmc
sti
adc
ss
lods
adc
add
add
cld
loop
hlt
mov
push
std
or
mov
imul
mov
addl
inc
lea
adc
scas
fwait
push
jmp
pop
cmpsl
dec
push
inc
mov
test
imul
dec
sbbl
stos
je
pop
or
push
mov
mov
xchg
icebp
cmp
push
out
xchg
out
int3
popa
in
and
xor
and
in
pop
aas
hlt
outsb
jno
or
ret
lret
mov
out
sarb
subb
jl
xchg
lret
jae
and
sub
jecxz
dec
cmc
inc
adcl
inc
loopne
call
test
scas
cmpsb
out
fcoms
sub
orl
mov
iret
std
loopne
add
cmpsl
cmc
daa
imulb
movsb
pusha
cmp
jae
sahf
call
lds
loopne
test
add
in
mov
mov
scas
xchg
in
ffreep
push
pusha
out
jne
mov
push
mov
or
push
xor
inc
out
pushf
push
call
jge
inc
scas
nop
fs
aad
dec
cmp
loop
push
xor
adc
repz
lret
xlat
outsl
loope
aad
in
sbb
sbb
mov
jmp
das
test
jno
dec
sbb
pop
mov
adc
arpl
mov
pop
lahf
sti
repnz
lock
iret
mov
repnz
ret
add
add
js
mov
pop
cmpb
arpl
mov
stc
movsb
and
or
testb
xchg
shll
mov
out
xor
xlat
lret
push
les
lret
test
mov
xor
pop
pop
and
cmc
movsb
jge
sbb
test
jge
inc
xchg
or
xor
sub
sbb
inc
jo
fisubs
and
sbb
or
inc
mov
ds
shll
insb
inc
std
pop
ss
push
xor
outsb
cmp
ja
orl
sbb
mov
call
add
mov
fucomp
xchg
insb
testl
dec
loopne
sbb
xor
push
pop
cld
lock
dec
and
insb
negb
dec
fmulp
bound
icebp
inc
scas
rol
pop
call
mov
insb
inc
inc
dec
ds
lock
push
aad
inc
sub
add
mov
xchg
xlat
xchg
mov
es
cmpsl
hlt
pop
sub
mov
xchg
push
mov
cmpsb
cmp
mov
cltd
xlat
adc
adc
lock
sub
mov
mov
inc
mov
data16
pop
aad
iret
movsl
hlt
mov
cmp
arpl
fldcw
cmp
jmp
jmp
mov
add
fwait
mov
xor
add
repz
sbb
leave
les
and
adc
sub
shlb
jecxz
mov
add
pop
icebp
addr16
out
push
jg
cltd
sbb
pop
push
incb
cmc
data16
xor
push
lods
jp
in
fistps
leave
xchg
test
dec
aas
orb
cmp
sub
mov
sub
stc
movsl
jne
push
int3
xchg
fdivrs
sbb
adc
fcomps
aam
std
mov
mov
jmp
insb
into
push
lock
sbb
je
push
mov
movsb
adc
xchg
mov
or
mov
sbb
and
repz
mov
jo
leave
js
pop
pop
sub
push
lds
sub
and
in
outsl
pop
imul
mov
mov
or
lcall
fbstp
jb
push
je
or
jl
imul
pop
jmp
jmp
mov
xchg
mov
mov
loopne
cmpsl
mov
fsubrs
inc
stos
lods
inc
jne
popa
jo
call
mov
out
jae
jecxz
int
movsb
lret
add
test
in
cmp
sbbb
dec
push
or
jle
sbb
loopne
das
sbb
stc
inc
icebp
stos
mov
lcall
push
sbb
test
jne
push
int
mov
jecxz
push
orb
test
aad
add
outsl
mov
push
cmpl
stos
push
xlat
cs
lods
mov
fisttpll
mov
adc
out
daa
jmp
inc
jmp
pop
dec
xor
mov
and
movsb
icebp
dec
mov
jg
gs
mov
fdivrs
jmp
subb
out
js
dec
rclb
xchg
shlb
or
test
pop
movsl
sbb
dec
loop
lods
xor
aaa
inc
jle
movb
test
push
shll
pop
mov
outsb
xor
adc
aam
mov
add
popa
cmp
adc
push
insb
scas
add
movhps
and
xchg
insl
pusha
mov
mov
sbb
sar
pop
movsb
cltd
adc
mov
mov
jecxz
cmp
cli
cmp
imul
andb
sub
shlb
sahf
xchg
mov
xchg
jo
pop
fbstp
addb
sbb
and
rcl
push
jl
lea
movsl
lods
jns
repnz
stc
cli
mov
ss
xor
js
lds
sbb
cmc
dec
dec
mov
inc
inc
mov
jno
int3
jbe
ret
wrmsr
inc
int
mov
inc
das
mov
and
mov
clc
pop
push
xchg
jle
inc
shlb
sbbb
lcall
xchg
fcomps
jle
insb
fbstp
pusha
inc
or
and
pop
mov
stc
add
mov
lods
pop
pop
mov
outsl
daa
ljmp
in
enter
int3
mov
sbb
pop
loop
das
inc
xchg
xchg
or
jp
add
insb
inc
dec
or
pop
pushf
push
xor
jg
mov
paddd
inc
push
lret
jo
and
inc
sub
xor
add
movl
sbb
jmp
in
push
mov
cwtl
push
mov
mov
sbb
mov
push
sahf
mov
movsb
arpl
jl
shll
adc
iret
add
xor
jo
adc
add
and
out
pop
stc
xchg
dec
cltd
adcl
push
xor
xchg
sbb
daa
in
outsl
sti
pop
addl
cmp
push
popl
cmp
movsb
out
push
and
sbb
mov
inc
ja
push
cli
dec
mov
into
fisttpll
mov
pop
xchg
mov
jg
lods
push
aas
mov
test
sub
in
out
cltd
rcr
fwait
in
fdivrl
pusha
sbb
mov
jne
jne
movsl
xchg
mov
in
jns
jnp
mov
fcoml
lock
test
inc
jl
mov
xchg
pushf
pusha
push
cmp
ss
enter
adcb
cmpsb
je
ja
mov
fs
xchg
shl
mov
jae
shll
stc
iret
mov
sbb
insb
sub
mov
aas
pop
ret
out
dec
jecxz
sarb
xor
dec
mov
mov
lea
pop
or
leave
jmp
insl
neg
mov
icebp
lock
sub
mov
fdivrl
rol
js
jne
imul
arpl
push
mov
data16
in
cld
jg
ja
loop
fisubrl
outsb
lret
pop
mov
rol
mov
or
dec
pop
popa
cwtl
mov
fsubs
add
jge
adc
test
jo
clc
cmp
mov
pop
push
jp
add
and
dec
insb
div
icebp
fisttps
xor
fcmovnb
int3
sbb
js
or
aas
inc
clc
sbb
dec
mov
pop
cmp
dec
dec
dec
inc
test
icebp
jl
imul
adc
out
sbb
or
sub
ret
dec
stos
rcrl
divl
loop
add
out
cli
pop
jno
fs
adc
inc
add
jnp
jge
or
insl
mov
repz
movsb
mov
outsb
add
cmpsb
or
arpl
jns
sub
aas
xchg
fisttpll
xor
xor
mov
in
jp
sub
pop
test
add
call
mov
cmpl
mov
imul
adc
or
repz
mov
sub
dec
sbb
mov
inc
js
mov
movsl
loope
icebp
vpmaddwd
in
adc
adc
inc
jne
mov
mov
movsl
loope
icebp
vpmaddwd
in
adc
adc
inc
jne
mov
mov
movsl
jno
icebp
vpmaddwd
in
adc
adc
inc
jne
gs
in
test
mov
movsl
loope
loope
shl
and
stos
xor
stc
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fxch
leave
daa
stc
pop
jmp
push
fcoml
int3
inc
pop
mov
cmpsl
jns
imul
fnstenv
leave
daa
stc
pop
jmp
jmp
push
test
xchg
cwtl
or
cmp
leave
daa
stc
mov
mov
mov
dec
les
enter
mov
inc
nop
aaa
leave
dec
mov
push
flds
in
xor
lahf
fwait
mov
sbb
xchg
or
push
xchg
imul
mov
or
add
hlt
in
xchg
out
sbb
cmp
xlat
dec
and
inc
and
or
cwtl
pop
icebp
inc
int3
pop
cmp
and
xlat
and
pop
jmp
aaa
popl
push
cmova
div
mov
popa
sbb
aas
sub
inc
roll
mov
in
mov
push
loopne
xchg
movsb
or
fld
cmp
es
lcall
dec
in
pop
and
subl
sbb
xlat
inc
inc
xchg
leave
xlat
stc
xchg
jmp
addr16
xor
jns
imul
cmp
sub
pushf
push
mov
cmc
add
or
ds
loop
jecxz
out
jl
pusha
xchg
jge
jge
fidivl
test
and
sbb
push
mov
rorb
cmp
sub
jl
pop
stos
dec
mov
lods
mov
lods
pusha
nop
inc
call
addr16
mov
cmpsl
jns
imul
fnstenv
leave
daa
stc
pop
jmp
addr16
mov
cmpsl
jns
imul
fnstenv
insb
lock
mov
sub
and
or
ja
iret
jmp
cmp
clc
inc
mov
xor
cs
cld
fisubl
std
movsl
stos
adc
cmp
cmp
in
bnd
jmp
shr
mov
and
sub
fidivl
xor
or
loop
or
sbb
pop
mov
addr16
mov
je
mov
or
dec
xchg
mov
cmpsl
in
pusha
aam
pop
subl
inc
decb
cmpsl
out
dec
jbe
ds
mov
rol
jo
and
lcall
mov
sub
mov
push
mov
add
pop
jno
cmp
sub
mov
pushf
inc
or
cmp
add
stc
pop
pop
cmp
cwtl
js
loopne
pushf
subl
fidivl
push
icebp
arpl
pop
out
jne
mov
in
data16
repnz
add
mov
push
pushf
pop
mov
mov
lahf
pop
ljmp
sub
lea
flds
int3
fidivrs
xor
add
dec
sbb
icebp
test
sub
dec
int3
fbld
fisubs
pop
pop
pushf
idivl
pusha
lea
sub
cmp
mov
scas
jge
inc
pop
addl
adcl
aas
adc
xor
notb
mov
lds
cmp
add
inc
rorb
mov
das
out
aaa
pop
imul
xchg
xlat
sbb
xlat
xchg
int
cmp
mov
xchg
bnd
fldenv
jp
repnz
pop
dec
jl
scas
sbb
mov
or
insl
out
repz
rclb
pop
imul
push
jo
test
pushf
push
xlat
ret
jns
push
adc
aas
mov
je
popa
cmp
rcr
mov
inc
bound
pop
sbb
jns
cwtl
jnp
movl
xchg
pop
ret
xchg
dec
jb
sbb
dec
cmp
call
bound
test
add
lods
out
fcoms
jecxz
sti
sbb
jbe
movsl
cli
cmpsl
test
xor
adc
cmp
mul
mov
pop
push
push
clc
movsb
ja
nop
cmpsl
mov
rcrb
mov
mov
lock
movsl
and
in
adc
sub
sub
push
dec
jno
inc
sub
push
sarl
dec
mov
fldcw
adc
mov
nop
in
incb
mull
xorb
add
mov
fadds
xorl
loopne
and
nop
movhps
xorl
leave
mov
dec
inc
sbb
stos
dec
xchg
push
call
sbb
push
xlat
cmpsl
out
xchg
lds
lea
loope
xchg
push
loope
pop
xor
jne
or
movsl
mov
dec
int3
push
mov
cmp
mov
sahf
lret
leave
ret
out
cmp
or
loope
clc
popf
mov
jne
test
nop
xor
pop
fdivrs
sbb
lret
ret
cmp
adcl
aas
sbb
test
iret
pop
pop
roll
sbb
int3
in
adc
cwtl
movsb
ds
jge
mov
and
or
test
nop
push
stos
sbb
bound
nop
lods
repnz
or
or
ror
sbb
arpl
sahf
add
lret
push
or
cwtl
dec
fsubrs
sbb
out
jne
jp
or
push
jae
push
nop
pusha
in
cmc
lret
lds
jle
adc
ljmp
xchg
iret
dec
pushf
addr16
or
dec
sbb
mov
hlt
int3
pop
aas
test
repz
popf
mov
and
dec
cmp
or
mov
loop
adcl
pop
jns
add
int
pushl
cmp
cs
int
hlt
xor
faddl
add
icebp
mov
dec
ficoms
mov
xchg
jge
dec
xchg
icebp
jb
mov
jl
icebp
mov
loop
cmc
inc
xchg
dec
xchg
cmp
mov
sub
loopne
insb
iret
inc
push
pushf
int3
pushf
push
or
or
xor
xor
out
xor
adc
dec
add
in
cmpsb
dec
jecxz
loopne
add
xchg
in
push
xchg
xchg
loopne
adc
arpl
rcrb
inc
jmp
mov
test
into
jnp
frstor
push
sub
lods
sbb
pusha
leave
mov
push
std
xor
and
paddw
mov
fs
xchg
mov
clc
negb
sub
dec
mov
stos
nop
lahf
ja
cmp
jecxz
pop
jns
adc
inc
xor
mov
cmp
or
movzwl
cmp
sbb
arpl
mov
jmp
xchg
and
cmc
fnstsw
cmp
pop
scas
jbe
adc
xor
repnz
add
push
jl
cmc
stos
mov
je
enter
xchg
popf
jle
dec
or
rorb
sbb
enter
or
add
addr16
jbe
inc
xchg
jge
adc
adcl
add
sub
cmpsb
mov
add
into
shll
ficoms
daa
icebp
mov
adc
mov
orl
push
pop
rorb
xor
add
cmpsl
push
push
repnz
in
hlt
mov
ffree
inc
push
fidivs
jle
out
jecxz
clc
adc
cmp
loopne
insl
rorb
mov
cmc
stos
ja
sub
xchg
pusha
leave
in
adc
xchg
mov
arpl
xor
adc
out
pop
lea
sahf
lea
or
and
jbe
sub
test
lock
push
inc
inc
inc
data16
in
pushf
or
out
push
mov
movsl
xchg
mov
mov
enter
addr16
xor
jmp
lcall
lret
lods
sbb
out
data16
mov
mov
pop
inc
repz
out
popf
push
adc
mov
daa
mov
out
cmpsl
sbb
dec
add
aam
push
lock
push
xchg
mov
lock
xor
push
cmpsl
out
xchg
repnz
bound
roll
pop
mov
je
aam
push
fldenv
shlb
push
jl
jae
lret
xchg
sbb
xor
mov
icebp
idivb
add
adc
arpl
xor
out
jnp
leave
inc
xchg
in
jno
sarl
sub
xchg
mov
lds
mov
lods
push
xchg
mov
cmp
jno
ret
cld
fists
mov
ss
daa
movsb
loope
sti
out
pop
sbb
mov
in
mov
mov
scas
rcrl
xor
mov
mov
mov
lods
jb
jo
movsl
test
mov
inc
test
hlt
incl
add
add
lock
mov
inc
aas
mov
sbbl
mov
xor
loopne
fprem1
inc
pushf
xlat
fisttpl
xchg
add
jns
fstpt
sub
mov
imul
les
call
orb
xchg
repz
mov
adc
scas
in
outsl
mov
sbb
sub
sti
es
mov
movsb
sub
adc
or
jne
loop
mov
std
scas
add
sbb
cwtl
sub
xchg
icebp
dec
rcrl
sbb
inc
or
loop
loope
or
push
dec
pop
popa
loope
out
pop
ja
outsb
sub
inc
test
dec
add
ret
jp
or
and
daa
push
imul
pusha
rcll
mov
sbb
jb
in
jae
pop
push
aaa
int3
cld
sub
mov
mov
leave
imul
out
insl
arpl
xchg
mov
sub
in
aam
inc
ret
mov
sbb
bt
dec
mov
mov
sbb
shr
inc
and
out
inc
es
lcall
dec
push
lods
mov
icebp
testl
sbb
and
jl
nop
dec
xor
in
outsl
adc
lods
mov
mov
loopne
push
aaa
push
mov
cmc
xchg
stos
jb
cmp
jb
xor
add
mov
jp
into
push
and
sub
pop
movsl
addr16
mov
les
test
cmp
mov
fisubs
movsb
movsl
mov
xchg
lcall
pushf
std
sbb
pop
fildll
cmp
jp
mov
pop
mov
xchg
pop
sbbb
dec
out
leave
pop
mov
insl
rclb
adc
arpl
xor
mov
fistpll
popa
mov
ja
dec
lret
jl
pop
cmp
push
aas
ljmp
sbb
pushf
out
xchg
popf
xor
lcall
negb
mov
jmp
stos
inc
jecxz
add
or
cmp
adc
std
rcrb
add
inc
repz
push
hlt
and
jns
daa
inc
cmpl
addb
push
and
sub
scas
std
inc
mov
hlt
and
mov
loop
fwait
pop
xchg
loop
xorl
repz
or
jp
movsb
repnz
test
pop
sbb
push
and
mov
outsl
cs
std
cmp
mov
xchg
fbstp
lcall
xchg
and
fdivs
xchg
pop
mov
dec
dec
mov
mov
xor
cwtl
iret
lret
lods
inc
pushf
dec
cmc
xor
fdivrp
lds
xchg
pop
push
mov
mov
inc
sub
out
shl
adc
popf
sbb
movsb
dec
out
or
div
cmpsb
stc
jo
pop
orl
and
por
cltd
lods
pop
mov
mov
jl
xchg
lea
cmp
hlt
cwtl
iret
scas
pop
adc
sub
aas
cld
flds
fisubrs
cmpl
pop
and
mov
mov
mov
sub
movsb
pushf
xchg
xchg
jmp
or
mov
mov
adc
push
jb
call
sub
dec
inc
push
lods
jle
icebp
jno
scas
push
xorl
ret
adcl
inc
into
pop
sub
fwait
rorl
out
push
xchg
lcall
push
and
daa
sbb
fsub
je
xor
rcr
cld
pop
pop
cmp
es
xor
or
inc
jne
aam
aas
lods
mov
and
mov
loopne
and
push
xchg
push
mov
or
mov
jp
jns
adcb
sti
daa
push
outsb
ljmp
jns
and
jecxz,pt
mov
sub
out
sub
pop
lcall
stc
xchg
mov
arpl
out
aaa
test
push
add
lahf
enter
inc
mov
nop
popf
push
jmp
out
leave
repz
jge
fbld
xchg
into
mov
das
mov
out
ljmp
xor
pop
dec
insb
or
xor
pop
mov
pushf
ja
push
xchg
idivl
sub
and
mov
xchg
sbb
or
dec
push
ljmp
pusha
inc
leave
cmp
sub
aad
in
dec
adc
in
jnp
or
jns
sub
dec
push
or
cmc
negb
cmp
pop
add
fwait
mov
fsubl
cwtl
daa
cmpsb
sbb
cmp
shrb
dec
int3
lret
cld
shll
outsb
loope
out
cmp
repz
ja
testl
mov
mov
inc
scas
dec
ret
xor
xchg
sar
push
mov
cwtl
pusha
cltd
push
xor
pop
jle
imul
pop
inc
mov
mov
adc
lahf
xor
cs
cmp
aad
add
mov
pushf
imul
add
nopl
and
ds
int
popa
pop
inc
test
inc
movsl
ss
xchg
jecxz
lret
ss
in
jle
pop
insl
shr
sahf
je
inc
sahf
pop
sbb
pop
cs
xchg
pop
jo
std
stos
les
data16
ret
aam
movsb
dec
or
jmp
outsb
lods
cmp
or
sti
pop
cmp
scas
cld
fdivrs
or
iret
jns
testl
adc
cli
or
in
lods
lret
fdivrl
leave
mov
sub
mov
mov
xchg
repnz
and
and
lahf
scas
ljmp
stos
push
pop
int
add
cmp
pop
push
ror
and
xchg
pop
mov
ds
dec
mov
xchg
in
jg
mov
pop
test
lahf
adc
leave
inc
sahf
fnstenv
into
mov
test
pop
in
inc
inc
orl
push
push
and
xor
lds
out
or
repnz
cmc
cld
aaa
mov
test
mov
or
setne
dec
call
pop
xchg
sahf
xchg
mov
ds
push
sub
sbb
xlat
mov
xor
out
sbb
xchg
cmp
repnz
add
or
mov
fisttpl
inc
pop
xlat
scas
movsl
adc
divl
pop
dec
cmp
mov
ljmp
adc
cmpsb
data16
addr16
js
mov
in
jbe
movsl
out
mov
mov
jb
roll
enter
jno
add
mov
icebp
jne
mov
dec
push
dec
fst
mov
mov
rorl
ret
scas
insl
movsl
mov
ds
fwait
and
mov
xor
stos
pop
outsl
in
ret
inc
or
pop
mov
pop
loope
xchg
aam
mov
dec
add
jb
mov
sti
and
cli
repnz
and
gs
into
int
push
jl
mov
lea
sub
test
dec
xchg
das
aaa
push
or
fidivrl
pop
loope
inc
inc
mov
cmc
sub
rolb
insb
loopne
jmp
jo
push
xor
stos
mov
call
push
leave
inc
ljmp
rolb
mov
lea
test
shrb
and
je
or
dec
mov
aad
into
popf
and
inc
stos
pop
decl
testb
mov
ret
inc
ffree
dec
cltd
jge
test
aas
pcmpgtd
mov
arpl
push
mov
rcrl
clc
jmp
ds
push
and
repz
insb
clc
sub
js
in
and
mov
lcall
sub
scas
lock
cli
xchg
and
and
fstpl
call
outsb
jle
mov
loope
mov
jl
push
jmp
or
xchg
aad
sqrtps
aas
and
jp
out
and
and
mov
nop
push
sub
aam
and
xor
or
mov
lcall
push
cmp
or
jl,pt
add
imull
fildll
test
ja
mov
mov
cmp
mov
fisttpll
int3
es
fmull
lret
and
push
jecxz
ret
nop
std
shr
mov
aaa
push
imull
mov
jl
sbb
sbb
push
fs
scas
imul
and
frstor
popf
pop
bound
sbb
push
mov
mov
daa
test
or
popf
sub
subb
test
and
rorb
ret
mov
mov
fsubs
out
mov
xchg
or
or
add
rclb
in
cmp
mov
add
inc
mov
push
add
insb
mov
pusha
sbb
adc
icebp
lods
xchg
cld
mov
inc
enter
push
jmp
out
add
sbb
aam
or
dec
adc
xchg
jp
repz
loop
pop
das
icebp
into
pop
pop
mov
push
mov
push
loope
jae
sbb
dec
test
pop
les
and
test
ss
adc
addl
test
fnstsw
lock
mov
push
clc
mov
mull
lods
sbb
sub
or
mov
jne
xchg
push
out
inc
lret
xlat
imul
xor
stos
negb
xchg
mov
cmp
orb
imul
and
movswl
fwait
rorb
or
daa
lcall
loop
xchg
jg
and
xchg
xor
mov
push
xchg
sbb
mov
popf
jno
outsl
mov
popa
push
mov
xchg
xchg
outsb
mov
jne
sub
es
cltd
push
rcll
pop
test
stos
psrad
in
lods
mov
and
sub
lret
or
cmp
outsl
into
imul
pop
std
or
sbb
xchg
mov
daa
gs
test
adc
int
and
dec
pop
cltd
jmp
ficoml
subb
add
cmpsl
mov
enter
jnp
and
call
outsl
cmpsl
fdivl
or
rolb
repnz
cltd
push
xor
das
sub
orl
orl
jg
xlat
lahf
das
test
lret
add
fwait
jae
sub
dec
dec
inc
out
shlb
cwtl
int
in
xor
stos
lret
and
lds
ficoms
ds
mov
jne
mov
or
imul
mov
mov
adc
dec
pop
dec
jecxz
cmp
out
aaa
cli
ret
cld
es
movsl
ja
es
cltd
inc
das
data16
stos
arpl
cmp
mov
sbb
std
jno
inc
sbbl
jno
enter
ds
notb
jmp
test
cld
lret
int
cmp
jmp
call
outsl
cs
sub
pop
sbb
sub
lods
cltd
add
jb
out
dec
shll
cmp
scas
mov
scas
mov
dec
or
xchg
rcrb
popa
cmpsb
rclb
stos
loop
cmp
mov
push
or
js,pt
push
loopne
faddl
push
mov
mov
fnstcw
jl
icebp
cltd
out
inc
sub
pop
or
rcrl
pop
push
add
mov
into
mov
roll
cmpl
call
rolb
test
insb
mov
mov
hlt
or
cmpsb
cmp
xchg
es
pop
pusha
add
cmpsl
cs
fs
pop
fldcw
les
mov
and
outsl
in
cld
testl
leave
out
cs
dec
add
or
xchg
push
sarl
hlt
cld
push
into
notl
dec
jp
jae
pop
sahf
cmpb
push
sbb
js
in
cmp
xor
dec
push
wrmsr
into
mov
punpcklwd
sbb
repnz
shll
sarl
sub
out
or
shr
clc
jne
pop
pop
inc
stos
hlt
inc
mov
mov
loopne
int
test
ljmp
lret
hlt
mov
outsl
lcall
out
dec
inc
dec
arpl
xchg
in
fs
test
mov
cmp
loop
filds
inc
in
inc
mov
test
in
cli
leave
rcrb
mov
add
or
mov
mov
je
cmp
jb
cmp
cwtl
es
inc
dec
sarb
stos
addr16
fwait
hlt
jl
jns
in
push
sub
xchg
std
add
jae
mov
cmp
mov
or
movsl
cld
xor
stc
push
xorb
addl
push
out
ljmp
leave
xchg
repz
jae
push
push
lret
or
mov
out
mov
inc
addr16
mov
daa
inc
ret
xchg
pop
popf
add
pop
dec
sbb
ret
push
sbb
pmullw
xchg
sbb
insb
add
and
mov
mov
push
dec
add
inc
fisubrs
sub
mov
scas
popa
hlt
xor
xor
imul
test
jne
xchg
sti
ds
lea
insb
push
pop
mov
ja
popf
ds
nop
sub
daa
loope
mov
arpl
mov
jle
test
ficoms
mov
push
mov
jmp
jno
pop
jle
fmuls
les
hlt
jo
lret
repz
and
call
fisubl
cmc
icebp
je
bound
jle
test
add
aad
xchg
and
sbb
mov
in
and
imul
sub
dec
insl
pop
sbb
std
xor
and
push
sub
js
sub
inc
pop
scas
cmpsl
out
mov
dec
testb
xchg
xchg
cmp
repnz
pop
addr16
and
stc
std
sub
icebp
mov
pop
add
pop
and
pop
xchg
shrb
jg
sarl
in
cwtl
mov
call
aam
dec
call
sahf
mov
dec
ja
jecxz
leave
push
into
ja
and
push
pop
cmp
fdivl
jg
pushl
jo
add
cmp
shlb
sub
dec
stc
mov
lock
sub
cmpsb
mov
and
shr
arpl
fs
sub
out
les
jnp
pop
cltd
ja
addr16
mov
cmpsl
jns
imul
fnstenv
leave
daa
stc
pop
jmp
addr16
mov
cmpsl
jns
imul
fnstenv
leave
outsl
stc
outsl
jmp
iret
mov
outsl
dec
cmpsl
jns
imul
fnstenv
leave
daa
stc
pop
jmp
addr16
dec
dec
or
outsb
jg
sbb
sub
cmp
out
mov
jbe
mov
mov
and
jle
push
push
fwait
jb
jb
or
fisubs
mov
sahf
loop
repnz
and
jle
push
bound
bound
fwait
into
mov
mov
mov
sahf
cli
scas
repnz
jge
dec
jle
dec
cmp
ds
std
andl
je
mov
stos
cmp
dec
leave
push
xchg
mov
cwtl
insl
pop
fimull
shlb
test
incb
outsl
int3
repz
repnz
outsl
jge
outsb
int3
push
sbb
xchg
add
push
dec
imul
in
mov
inc
fisubs
jb
sbb
pop
imul
cmp
and
inc
mov
int
mov
shll
shrb
pop
and
imul
mov
aam
and
push
loop
shll
push
jb
in
dec
pop
cmp
pop
std
cmp
jg
sbb
fldenv
jb
dec
into
mov
mov
mov
sahf
loop
jmp
sbb
pop
cmp
jle
push
dec
push
js
jb
out
mov
xchg
mov
mov
scas
loopne
out
add
jle
push
push
push
cmp
aaa
insl
adc
jg
into
repz
out
ret
sar
loop
mov
sub
adc
cmp
dec
push
outsb
out
decb
mov
repnz
and
jle
push
push
push
bound
jb
or
fisubs
mov
sahf
loop
repnz
and
jle
push
push
push
bound
jb
or
xchg
sbb
inc
mov
loopne
aaa
js
lods
push
add
imull
mov
sub
fisttpl
inc
dec
in
cli
add
pop
mov
push
data16
and
hlt
loop
lods
out
test
gs
mov
jno
or
dec
cs
outsb
dec
xor
test
xor
pop
es
jl
sahf
and
mov
sub
and
fidivrs
sub
pop
and
test
dec
sbb
cmc
push
test
push
mov
sbb
out
mov
jnp
cmp
jmp
inc
sub
adc
jge
dec
sbb
mov
aas
mov
jle
cmpsl
jmp
hlt
sar
sahf
cmpl
dec
add
js
lret
out
lret
dec
inc
xchg
sub
je
jle
es
outsb
mov
into
cmp
mov
ds
lock
or
outsl
mov
inc
mov
cld
fldenv
cmc
pop
dec
faddp
mov
push
mov
and
movsb
fcmove
es
mov
cltd
xor
insl
incb
jnp
shl
test
jmp
mov
cmp
inc
push
imul
or
pop
mov
stos
orb
push
scas
mov
rclb
fwait
mov
sub
push
sub
in
divl
and
push
cmpsb
in
pop
jb
mov
ds
int
rep
pop
sbb
jl
mov
repz
adc
mov
add
loop
jl
sub
sahf
mull
in
jae,pt
inc
sbb
sbb
push
and
int3
inc
arpl
sbb
mov
shr
xchg
rcr
stos
out
mov
je
xor
add
cmp
sti
push
roll
adc
mov
pushf
inc
adc
inc
add
sarl
xchg
adc
xrelease
push
stc
ror
or
hlt
push
add
scas
push
imul
push
push
mov
arpl
xor
and
negb
jae
dec
mov
dec
dec
jae
cmpb
cld
cli
jo
call
cwtl
push
mov
push
pop
lods
test
pop
push
popf
fsubrs
xchg
adc
ret
lea
std
add
xchg
mov
xor
xor
xchg
push
dec
mov
mov
in
xchg
xchg
xor
push
in
pop
adc
inc
iret
popa
in
jnp
lea
jnp
inc
jl
test
aam
inc
xchg
hlt
adc
push
in
incb
hlt
mov
lcall
lds
inc
lret
cmp
jmp
xor
ret
lret
jo
shlb
pop
nop
push
cmpsb
cmp
jg
imul
hlt
fisttpl
mov
and
nop
jns
fadds
xor
or
or
jae
push
negl
mov
mov
mov
jecxz
mov
xor
insl
xlat
xor
xor
jmp
push
push
push
adc
cltd
pop
pushf
adcl
adc
out
adc
repz
imul
stos
xor
dec
ror
sub
inc
mov
in
mov
sub
ja
movsl
push
loope
movsb
adc
sub
fxch
push
adcl
stos
in
sub
pop
and
pop
dec
xchg
ficoml
mov
push
les
xchg
xchg
popa
pop
in
mov
icebp
sbb
das
out
cmp
mov
mov
inc
outsb
int
xor
out
mov
cltd
or
jo
in
bound
mov
pop
inc
push
dec
push
cld
xchg
fcoml
scas
xchg
dec
sub
or
mov
cmpsb
cmpsl
dec
stos
jb
xchg
lds
idivl
push
or
adc
pop
inc
pushf
lcall
out
loopne
xor
mov
dec
lock
mov
jl
mov
push
popa
call
dec
pshufw
stos
dec
jb
sub
hlt
add
or
test
call
rcll
xchg
inc
jle
jb
lods
lahf
inc
shlb
cmp
scas
lods
sub
test
int3
push
mov
xchg
adc
cmp
pop
rcll
jno
addr16
test
lret
jl
mov
xlat
lods
ret
pop
push
inc
jge
stc
outsb
xor
mov
xchg
sub
mov
cmc
add
mov
adc
mov
jcxz
xor
jae
jno
push
popf
sbb
daa
adc
stos
add
mov
pop
out
iret
mov
pop
sahf
in
dec
mov
cmp
iret
adc
ss
sbb
fiadds
jbe
pop
cmp
mov
or
mov
pop
xor
int
ret
or
cwtl
inc
arpl
dec
das
or
and
out
aad
sbb
push
test
cmp
xchg
sub
sub
cmp
jne
adc
enter
and
loop
scas
push
lahf
cmc
cli
pop
lcall
jmp
dec
mov
aad
int
dec
fs
xchg
mov
xor
and
imul
and
adcl
xchg
xchg
mov
jae
fistl
pop
movsb
fsubs
jmp
jae
outsl
pop
scas
xor
les
lds
xor
or
cltd
into
push
ds
xor
jmp
scas
jo
mov
xchg
mov
addr16
les
sub
jno
xor
movsb
cs
jns
mov
mov
push
shrl
jno
push
mov
push
das
stc
out
lahf
sbb
jmp
jl
jae
shll
sub
mov
jne
inc
jns
repnz
shlb
fs
push
dec
xor
pop
jecxz
mov
in
fcmovne
aas
lods
xor
test
leave
push
js
iret
icebp
in
xchg
mov
add
sub
mov
outsb
mov
add
push
add
inc
fld
mov
sbb
inc
mov
imul
mov
mov
mov
das
loope
xchg
mov
inc
leave
mov
adc
imul
out
pop
insl
push
cmp
test
sbbb
pop
ss
stos
dec
clc
cmp
aam
movsb
ljmp
xor
jae
aaa
popa
xchg
jecxz
ror
movsl
cmpsl
nop
and
sbb
dec
bound
dec
xchg
push
pop
xchg
shlb
aam
jnp
and
cmp
mov
add
pop
out
and
dec
iret
sbb
adc
jg
inc
xor
or
cmpsb
icebp
adc
popf
pop
fdivs
int
pop
mov
mov
cli
pop
or
inc
call
iret
xchg
or
aam
xchg
hlt
aas
xlat
sub
pop
fchs
call
popf
insb
fwait
movsl
and
xchg
mov
bound
adc
inc
or
clc
sub
adc
aam
ret
cmp
sub
pop
movsl
and
scas
loop
lods
sub
jno
sub
insb
scas
lods
jge
popf
inc
jmp
call
out
nop
movsb
and
cwtl
and
into
rolb
push
or
out
jmp
movsb
xchg
repnz
or
push
cltd
or
insl
ret
xor
mov
aad
lret
shll
xor
sbb
xchg
adc
dec
dec
xchg
xor
mov
push
push
ret
mov
mov
xchg
cltd
pop
jne
mov
mov
sbb
outsl
enter
mov
xor
outsl
lret
fidivs
sbb
fldpi
mov
nop
in
popl
ret
mov
in
pop
mov
cmpsb
xchg
sahf
addr16
adc
sbb
pop
mov
sub
cwtl
lock
mov
jae
js
out
loope
mov
and
mov
xor
inc
stos
lret
xor
lcall
xor
mov
xor
and
xor
lcall
jmp
enter
xor
adc
ds
out
shll
ret
stos
mov
xchg
xor
lea
xlat
test
mov
das
in
inc
dec
nop
pop
cltd
lods
jo
insl
shlb
jp
pop
inc
aam
scas
dec
mov
rcl
xchg
nop
pushf
test
dec
or
cld
xchg
mov
js
cmp
add
ds
js
inc
inc
mov
popa
add
lea
fucomi
mov
in
loopne
aad
xchg
std
push
inc
push
bound
inc
push
idiv
dec
stos
outsb
jo
xor
lcall
xchg
xchg
xor
xor
lahf
sarb
pop
xor
stos
sbb
mov
imul
jecxz
xchg
cltd
cltd
xchg
pop
in
add
inc
in
dec
adc
imul
push
insl
movb
mov
leave
bound
jecxz
or
daa
push
adc
add
sahf
rclb
pop
adc
outsl
inc
pop
iret
pop
mov
jae
aam
inc
xlat
and
loopne
and
or
lods
test
inc
stc
mov
cmp
inc
sbb
jbe
bound
aaa
cwtl
pop
mov
inc
push
cli
xor
scas
aas
adc
cmp
ret
and
fildl
push
push
push
movsb
or
pop
mov
nop
fdivp
inc
and
push
incb
push
ret
scas
jmp
jmp
int3
cmp
flds
ficoms
je
cmp
fstpt
xor
sahf
push
dec
stos
fbstp
mov
push
test
inc
cmp
cmp
inc
dec
jg
js
pop
notl
scas
xor
dec
xlat
push
lea
mov
add
sbb
call
cmp
cwtl
add
pushf
jae
pop
and
insb
push
arpl
popa
xchg
roll
lds
fdivrs
or
cld
adc
cmpsl
ss
dec
sub
jl
add
or
adc
vfnmsub213ss
mov
insl
xchg
mov
push
dec
jge
or
dec
adc
cmc
mov
loop
call
push
or
stos
aas
gs
mov
jne
loop
mov
fidivs
sarb
sub
mov
and
jb
repz
pop
scas
hlt
adc
add
sbb
imulb
or
sub
xchg
push
fimull
dec
out
sbb
mov
repz
leave
mov
and
mulb
push
shll
add
sbb
jbe
adc
or
jl
inc
fists
outsl
add
push
xor
mov
add
js
addr16
call
inc
jecxz
bound
mov
mov
mov
movsl
cs
jb
push
lods
push
xchg
in
add
js
jecxz
out
inc
dec
ret
aaa
jp
nop
lahf
add
leavew
movl
loopne
push
aam
movsb
cmp
push
cmp
in
aas
fld1
push
mov
rolb
out
loope
sbb
xor
mov
mov
insl
repnz
and
dec
adc
mov
dec
add
xor
imull
int
and
test
mov
xchg
stos
add
sbb
cli
ret
and
pop
sarb
andb
addb
sbb
out
mov
sti
call
or
sub
dec
jne
and
ret
bnd
pop
pop
es
jnp
loope
mov
pop
or
add
adc
int3
not
sahf
jge
xchg
mov
mov
jns
das
xchg
add
push
sbb
pop
inc
sahf
call
shr
pop
mov
movsb
push
or
adc
imul
sbb
cmpsl
inc
mov
xor
push
adc
in
int3
repz
bsf
mov
inc
sub
into
popa
inc
scas
fsubrs
mov
mov
cli
jmp
mov
dec
inc
push
data16
jecxz
sub
jnp
cltd
iret
clc
push
lods
hlt
mov
cmpsl
negl
into
sbb
outsl
mov
push
add
push
cltd
mov
push
dec
mov
pop
sbb
mov
popa
sbb
ja
sub
push
clc
shlb
lea
and
add
push
inc
xor
inc
push
andl
xchg
xor
les
jmp
outsb
mov
mov
lcall
pop
jp
xchg
mov
and
jbe
push
xchg
push
ja
cmp
push
or
xor
sbb
mov
inc
addr16
lods
sub
shlb
cmpsl
push
xor
adc
adc
and
add
or
cmpsl
or
mov
and
jp
pop
push
add
add
imul
cs
or
sti
pushw
ljmp
ja
fmuls
lahf
cmp
lods
ds
mov
push
pop
mov
cs
dec
cmp
mov
jmp
cltd
adc
jge
cs
sbb
mov
and
cmp
enter
and
test
cwtl
mov
push
and
cs
push
fsubrl
js
inc
mov
mov
incb
pop
xor
xlat
mov
or
jl
inc
mov
shrl
mov
cmp
pop
xchg
iret
divl
jne
dec
repnz
pop
mov
js
xor
dec
push
cmpsl
xchg
sub
cmp
mov
daa
popf
xchg
pop
xor
pop
adc
into
mov
std
mov
cmp
popa
push
mull
mov
fnsave
bound
fistpl
xchg
loopne
movsl
shr
dec
fstl
mov
dec
lods
sub
xchg
insl
push
ror
cltd
sbb
sub
pop
imul
dec
cwtl
push
pop
mov
inc
subl
jg
mov
aad
jnp,pn
out
movsb
test
std
iret
je
xchg
mov
jno
fs
iret
loopne
jecxz
lods
popa
push
xchg
clc
fidivrs
imul
or
addr16
aad
xlat
dec
or
xorl
push
div
push
and
fmul
inc
jge
shr
xchg
pushf
sub
negb
sub
cltd
xchg
pop
pop
adc
lock
mov
mov
aam
cmp
mov
push
nop
cmpsl
cmp
sub
rcrb
jl
inc
push
jp
jle
fistps
jecxz
and
hlt
xlat
sub
mov
enter
dec
jmp
and
fildll
addr16
in
cmc
mov
xchg
gs
sbb
cmp
dec
ret
mov
sahf
jne
pop
aaa
fwait
xchg
xchg
mov
mov
cwtl
insb
std
add
sub
sub
rcll
mov
pop
mov
stos
bound
push
sbb
test
mov
dec
push
inc
pop
inc
scas
ror
cs
or
jo
std
repz
adc
arpl
in
int3
pop
mov
xchg
arpl
loopne
arpl
push
push
loop
add
out
das
mov
jbe
movsb
and
xor
mov
adc
mov
scas
ret
flds
inc
mov
mov
fcoms
xor
pop
push
pop
pop
dec
jge
test
xchg
cltd
sahf
push
sbb
inc
pusha
push
pop
fcmovbe
xor
push
inc
enter
cmp
repnz
lahf
in
jbe
xchg
pop
mov
enter
shll
adc
pop
in
test
inc
imul
sarb
lea
mov
cmc
jmp
mov
mov
ret
out
sbb
test
je
icebp
cmp
inc
adc
gs
jp
cmp
cs
loop
jge
fs
adc
mov
dec
enter
sub
clc
js
sub
aas
sub
jo
call
stos
int
dec
adc
sbb
lret
addb
mov
mov
mov
scas
pushf
sub
jmp
jge
neg
add
gs
inc
xor
and
pushf
loope
mov
jl
clc
cmpsb
jo
lods
lret
dec
cmp
push
or
cli
outsl
pop
xor
in
jle
sub
push
cltd
adc
push
mov
jp
and
in
mov
daa
movsb
in
inc
fadds
lock
or
push
push
xlat
ret
fildll
sub
mov
sbb
pop
rorb
push
leave
xor
fst
in
xchg
xor
stc
fmull
pop
or
dec
pop
and
lret
insb
and
movsl
xor
ds
lds
xchg
and
mov
pop
sbb
mov
addr16
sub
rcl
movsl
or
sub
imul
iret
movsl
inc
add
and
xor
stos
xchg
or
popf
lods
in
jecxz
and
and
jns
lods
fs
and
adc
popa
inc
jecxz
pop
push
inc
sbbb
adc
shr
jbe
xlat
add
cmpl
shll
cwtl
xchg
pushf
jle
jns
mov
mov
scas
in
xor
movsb
dec
movl
out
addr16
mov
dec
mov
dec
adc
mov
inc
test
or
scas
shll
xchg
adc
inc
cmp
jb
sub
sub
andb
in
xchg
ss
dec
sub
push
pop
jecxz
dec
mov
or
xlat
gs
ja
outsl
dec
fsubs
sub
sahf
ret
add
scas
push
mov
pusha
xchg
sub
push
inc
pop
les
cmp
enter
out
inc
add
lcall
mov
mov
notl
es
fisubs
addb
stos
dec
stc
mov
dec
in
cwtl
sub
test
sbb
adc
mov
ds
int
push
ljmp
push
pop
xorl
jl
subb
gs
add
lcall
sub
scas
clc
mov
fnstenv
aam
sti
mov
daa
add
adc
in
mov
std
jp
sub
idivl
cmp
add
cmp
mov
mov
jle
insl
push
out
cwtl
ret
dec
insl
cmp
or
mov
inc
dec
jmp
nop
stos
loope
pop
mov
pop
cmp
ljmp
pop
hlt
cmc
out
and
int3
iret
aam
das
pop
xchg
fwait
sub
imull
outsl
test
jno
inc
fisttpl
inc
shrl
sub
xor
int
movsl
adc
mov
xor
lods
pop
test
mov
jecxz
sub
jae
ret
popf
stos
push
add
outsl
into
ror
or
cmp
mov
xor
mov
ficomps
add
jmp
jo
mov
hlt
cwtl
shrb
stc
push
jno
pop
push
imul
test
adc
adc
gs
sarb
sahf
imul
and
and
push
mov
out
mov
iret
cltd
mov
mov
popa
icebp
mov
and
mov
popf
test
mov
mov
xorb
add
fwait
add
inc
sub
sbb
cs
pop
leave
decl
lahf
add
out
mov
cmp
mov
mov
mov
dec
dec
cld
jle
push
xchg
cmpsl
divb
cltd
inc
pop
fsubl
mov
jns
jle
cmc
fidivrs
adc
inc
cmp
test
je
mov
pop
call
rclb
xchg
mov
data16
xor
stos
mov
addb
dec
cli
mov
and
in
mov
rclb
or
push
jge
sahf
test
mov
add
in
mov
test
rorb
imul
pusha
scas
xchg
mov
add
xor
mov
dec
outsb
mov
mov
scas
scas
stc
out
mov
add
push
cmc
cmpsl
test
mov
push
cmpb
fsub
mov
mov
cmp
or
mov
jp
fcompl
xor
les
inc
dec
out
adc
bound
cmpsb
out
repnz
leave
mov
cmp
hlt
push
pop
fdivp
xor
sahf
es
fsubl
mov
cmp
int
or
call
frstor
cmp
xchg
das
loop
out
pop
cwtl
mov
out
negl
fistpl
and
dec
add
pusha
sub
push
lcall
sbb
cwtl
pop
add
lret
push
lret
stos
sbb
push
jne
movsl
cmpl
movsl
mov
pop
inc
cli
push
jnp
xor
mov
add
sar
fidivrl
sahf
sub
add
inc
sbbb
out
addb
test
popl
or
fadds
daa
in
mov
xchg
xchg
inc
mov
sbb
cmpsb
or
xchg
pop
adc
push
movsb
stos
iret
jl
add
cmp
fdivrs
cmp
xor
test
jno
pop
call
cmp
bound
and
iret
popa
in
mov
in
mov
ret
mov
jmp
jne
mov
mov
push
pop
adc
fdiv
mov
in
lahf
cmp
fstpl
stos
mov
sbb
jns
mov
sahf
xor
lret
movsb
lea
adc
xchg
inc
push
jmp
cmpsb
clc
stc
and
pop
in
and
aaa
icebp
jnp
cmp
sub
pop
rorb
xchg
nop
jns
mov
xchg
dec
std
pop
adc
sub
fadds
arpl
push
mov
mov
push
rcpps
subb
mov
xchg
neg
inc
adc
mov
repz
ljmp
divl
xchg
xor
or
es
mov
int
stos
scas
mulb
jnp
jnp
add
add
call
faddp
cmc
imul
ret
sahf
loop
repnz
and
jle
push
push
push
bound
jb
or
fisubs
mov
sahf
loop
repnz
and
jle
push
push
push
bound
jb
or
pop
mov
mov
push
loop
repnz
and
jle
push
push
push
bound
jo
or
fisubs
mov
sahf
bound
in
hlt
mov
or
rorl
insb
cld
pop
in
dec
es
enter
dec
in
jge
insb
int3
sbb
pushf
sub
fdivrl
std
pop
in
dec
pushf
cmp
sub
sbb
or
cld
dec
in
sbb
mov
sub
fdivrl
cld
pop
in
dec
pushf
cmp
sub
sbb
or
ret
sbb
out
gs
mov
mov
in
inc
pop
lahf
out
fucom
dec
mov
adc
cmpsl
inc
mov
mov
mov
les
add
inc
mov
and
jl
daa
xor
aam
pop
imul
and
sbb
lea
adc
fsts
lahf
mov
or
fcompl
pop
pushf
cmp
lods
pop
dec
iret
mov
jge
test
cld
out
pop
cld
sub
lods
and
xor
je
test
mov
mov
insb
decl
fs
and
int3
xchg
jbe
imul
inc
xlat
push
mov
fsub
int3
push
mov
insb
cld
pop
in
dec
pushf
cmp
sub
sbb
or
cld
dec
in
jl
insb
int3
sbb
or
cmp
sub
test
mov
fists
insl
sti
jns
jl
nop
incb
push
push
pop
jmp
mov
stc
pop
call
or
mov
or
insb
jmp
loop
lahf
sub
cmp
push
mov
sbb
or
cld
dec
in
jl
insb
int3
sbb
or
cmp
sub
fdivrl
cld
pop
in
dec
pushf
cmp
sub
sbb
or
cld
dec
in
jl
insb
int3
sbb
or
cmp
sub
fdivrl
jno
mov
cmp
dec
pop
jb
in
sub
xchg
mov
insl
mov
xchg
jmp
xor
add
and
pop
pop
xlat
pop
dec
adc
jge
adc
jg
pmuludq
cld
jae
cltd
and
pop
or
or
fwait
sub
mov
iret
rcr
and
loopne
push
mov
cwtl
sub
inc
xabort
sub
inc
idivb
stc
outsl
ret
lods
mov
mov
cmpsl
iret
into
lods
test
jnp
pop
test
popa
stos
test
lahf
movsl
xchg
xor
out
fwait
lret
orl
mov
mov
shrl
adc
mov
test
retw
js,pt
xor
jbe
mov
xchg
pop
insb
pop
fcmovne
iret
jno
or
addr16
popf
jne
or
cmp
add
ret
test
rcl
push
inc
out
jge
add
or
sbb
mov
hlt
arpl
cmp
in
iret
mov
cmpsl
fucomp
xchg
ficoml
psllq
lods
lods
fstl
les
adcb
jae
mov
inc
push
dec
dec
repz
leave
adcb
cmc
loop
je
or
popa
or
adc
sbb
pop
lret
pop
push
push
ret
add
dec
add
sbb
push
loopne
push
push
lods
jle
inc
adc
icebp
gs
rolb
mov
cmp
fists
push
or
dec
popa
add
jmp
stc
sti
lods
pusha
loopne
xchg
sbb
and
js
ss
xchg
cmp
mov
lea
jg
fmulp
imul
or
mov
xor
mov
xchg
cmp
int3
mov
mov
or
cmpsl
push
cmp
or
cld
fmull
push
out
ficomps
imull
aam
and
jb
cmpsl
xchg
loope
pushl
std
mov
xor
push
add
ror
sub
mov
fwait
outsb
pop
test
push
mov
in
adc
jb
push
jl
mov
test
outsl
inc
pusha
jnp
mov
outsl
push
push
lock
outsl
or
push
inc
jle
and
adcb
add
sbb
cmp
push
and
leave
xor
jmp
pop
out
std
xchg
adc
sbb
les
adc
ret
xchg
mov
sbbb
jb
jg
sub
or
adc
jle
mov
out
xor
pop
in
fnstenv
mov
fdivl
mov
cmp
add
je
and
sub
dec
cmp
mov
jecxz
xlat
sbb
lcall
sarl
call
mov
das
lcall
lea
pop
fucomp
aam
xchg
jl
adc
mov
or
orb
mov
shr
inc
lcall
imul
rcrb
and
aam
jae
out
fisubrs
mov
ljmp
inc
fdivrs
adc
mov
pop
push
inc
mov
jecxz
gs
lock
pushl
xlat
push
pop
xchg
shr
int3
cld
fst
es
fsubrs
xchg
lcall
and
dec
mov
pop
push
or
jbe
je
stc
lds
dec
sbb
mov
sub
jecxz
or
pop
rolb
jl
in
mov
push
or
adc
jae
pop
outsb
js
jno
and
push
mov
cmp
adc
add
mov
lret
aad
jecxz
or
popf
dec
jmp
out
jb
fldt
fimull
and
dec
pop
push
inc
loopne
fdivrp
fidivrs
mov
mov
pop
rolb
data16
jns
jge
call
iret
dec
iret
test
mov
mov
sub
cmpsb
cmpsl
push
push
xchg
add
fists
ret
cld
mov
outsb
aas
jno
enter
cmp
in
stos
das
dec
inc
icebp
das
rcrb
inc
add
push
mov
or
movsl
je
sahf
jecxz
ret
cmp
iret
loope
or
inc
xchg
fxch
sub
add
xchg
jle
insl
add
add
dec
das
inc
lock
inc
in
popa
mov
mov
adc
pop
xchg
dec
sbb
add
dec
push
pop
lret
loope
add
pmulhw
and
push
push
gs
aad
iret
adc
inc
daa
arpl
mov
sbb
cwtl
and
mov
sub
xor
inc
movsb
add
sahf
xor
push
cmp
sub
stos
lds
jge
std
clc
jmp
outsl
push
rcr
insl
sbb
es
std
and
dec
mov
flds
add
outsl
loop
in
add
out
int
dec
xchg
xchg
clc
push
idivl
arpl
shlb
jno
or
fiaddl
clc
mov
mov
push
les
jns
jge
loope
mov
cmp
outsl
in
mov
xlat
dec
add
fsubrs
xlat
sahf
sub
ret
nop
mov
or
add
xor
jmp
lods
enter
dec
cwtl
data16
xor
aam
movsb
adc
inc
jp
addr16
adc
xchg
mov
je
inc
inc
fisttpl
push
mov
jge
mov
outsl
popf
mov
daa
arpl
pop
movsl
xchg
lahf
je
das
scas
lock
push
add
add
adc
shlb
ljmp
mov
add
inc
insb
out
fsubr
or
and
inc
sbb
push
mov
fwait
add
jle
mov
je
cmpsb
das
adc
stos
pushf
aad
sti
push
add
les
dec
jl
inc
and
ds
mov
mov
push
xor
mov
je
addr16
arpl
jo
jge
xchg
cmpb
lock
sbb
mov
mov
jge
jns
js
or
xchg
sub
movsl
sub
cmp
xchg
sbb
push
bound
mov
leave
cmp
ds
adc
adc
jns
shll
sbb
sti
das
aaa
pop
shll
cmp
add
mov
xor
mov
jb
pop
movsb
and
movups
ret
call
lds
outsl
lock
mov
push
fsubs
push
stos
sarl
jle
mov
push
xchg
rolb
aaa
call
sbb
rcr
cmpsl
hlt
inc
or
outsb
stos
push
or
adc
lahf
xchg
mov
nop
loop
xor
sbbl
icebp
dec
icebp
sti
jo
cld
ret
test
cli
mov
jne
daa
sahf
and
dec
inc
loope
jg
jmp
dec
mov
add
lcall
test
mov
fs
fsubl
pop
push
xchg
inc
cmp
test
stos
inc
dec
aam
dec
adc
inc
inc
adc
add
xor
rolb
les
movups
mov
cli
ja
decl
sbb
mov
mov
mov
imul
dec
lds
xor
jl
pop
test
sbb
push
out
cmp
clc
cs
sub
xor
lcall
cmpsl
add
sub
fwait
adc
jmp
sahf
testb
mov
call
lods
jge
sub
outsb
std
inc
in
popf
xchg
jmp
and
add
fs
dec
mov
xchg
roll
fs
push
add
pushf
cs
xchg
fildll
popf
scas
adc
shll
std
daa
mull
dec
mov
cwtl
dec
inc
mov
sbb
inc
out
sbb
rol
cwtl
cmpsb
rcrb
call
mov
cmp
adc
sub
roll
xlat
or
add
cmpsl
aad
vpsubd
loopne
lds
sbb
adc
cmp
call
push
mov
cli
clc
add
mov
jnp
out
add
cs
leave
push
sub
mov
jl
inc
jne
push
adc
lods
in
in
cmpb
xchg
lret
iret
or
outsl
sub
movsb
push
inc
rdpmc
lods
inc
push
sub
inc
hlt
movsb
sahf
ja
cmp
adc
pusha
fmul
push
sbbl
data16
rclb
ds
mov
mov
jp
mov
movaps
pop
xchg
repz
int
outsb
loop
push
adc
dec
xor
insl
test
mov
stos
dec
aad
ficoml
adc
mov
add
dec
xchg
js
xchg
insl
inc
or
adc
repz
jno
or
les
es
jnp
sub
pushf
push
dec
dec
adc
jp
gs
lods
mov
nop
out
inc
xor
gs
lcall
aaa
bound
dec
add
cmp
push
pop
xor
push
jmp
add
push
adc
dec
pop
push
cltd
cld
test
mov
mov
lret
test
in
add
es
adc
ljmp
inc
xor
sbb
nop
nop
fidivl
xchg
push
push
dec
out
lret
and
xor
sahf
ror
js
sub
mov
pop
pop
mov
imul
mov
fs
mov
fsubl
and
mov
jle,pn
cmp
rcrl
xor
sub
movsl
pop
fs
pop
xchg
mov
and
pop
sti
cmpsb
push
sub
std
test
shrb
cmp
dec
jo
sti
mov
adc
sbb
jns
sahf
arpl
adc
ret
dec
cmc
pop
adc
or
mov
popf
loopne
add
out
popl
arpl
jns
daa
sahf
and
pop
call
or
sub
repnz
jmp
inc
push
xchg
std
movsb
dec
popf
lret
inc
jmp
mov
test
and
icebp
adc
sarb
lds
inc
xchg
stos
scas
mov
cmp
enter
ret
mov
pop
cwtl
cwtl
fstpt
adc
pop
ret
mov
jbe
cmp
xchg
add
cmpb
mov
enter
push
dec
or
sbb
shlb
inc
push
push
add
sbb
cwtd
out
mov
mov
jmp
cmc
pop
push
xlat
dec
adc
pop
inc
les
pop
fisubs
mov
xchg
push
mov
insl
outsb
sbb
sbb
out
pop
mov
outsl
stos
stos
xor
fucomi
in
shlb
adc
movsl
in
cmpsl
cmc
mov
test
xchg
inc
or
mov
sbb
movsb
cmp
clc
orb
mov
out
push
xlat
mov
cmp
cltd
sub
les
inc
pop
pop
fcomps
push
pop
pop
loopne
test
das
add
jae
and
lret
push
cmc
sbb
sub
push
mov
fbld
movsb
repz
std
into
sti
push
xchg
fwait
shlb
cltd
dec
loopne
pop
cld
rcll
jno
sub
call
loopne
mov
cmp
les
or
jne
div
arpl
xlat
mov
aaa
dec
bound
mov
mov
and
outsb
adc
and
fwait
loope
in
out
sbb
ficoml
mov
sar
mov
push
push
shlb
daa
pop
jg
mov
sahf
jmp
and
out
lock
pop
xchg
les
xor
inc
mov
in
dec
ljmp
add
inc
and
dec
mov
scas
adc
test
in
lcall
pop
lret
dec
mov
dec
bound
fnstenv
fwait
cs
jge
cld
addr16
push
cmc
sbb
ret
push
sti
movsl
testb
inc
or
ss
rclb
popa
cli
in
jge
push
nop
in
loope
adc
jp
ret
xor
call
sbb
les
xor
or
cld
push
fdiv
ja
sahf
dec
push
and
es
movsl
data16
pop
mov
or
jp
idivl
pop
cmc
aam
dec
inc
xor
add
push
movsb
mov
mov
add
push
inc
clc
inc
push
test
adc
jae
lods
inc
psrlq
in
adc
sub
test
loopne
and
xor
jmp
stos
mov
dec
mov
mov
or
bound
and
add
lea
repnz
subb
mov
hlt
add
sar
xchg
adc
add
or
adc
fcompl
and
inc
fs
adc
shl
repnz
or
icebp
pop
mov
enter
in
jge
hlt
mov
jb
add
mov
jb
pop
sub
sti
imul
mov
shrl
insb
dec
xor
xchg
and
inc
inc
ficoml
testl
adc
mov
ja,pt
cli
aad
lret
sbb
cmp
in
xchg
out
rol
dec
jecxz
data16
jb
jg
daa
or
mov
test
mov
imul
adc
xchg
mull
fmuls
fisubs
sbb
jle
pop
movsb
pop
ljmp
or
xchg
xor
cs
or
aad
fcoml
jl
shlb
push
sbb
sahf
dec
and
std
or
lods
out
scas
inc
aas
add
into
add
adcl
call
push
sbb
jg
and
sub
fldl
xor
ficoms
pop
and
iret
mov
cmc
test
sbb
scas
jbe
cmp
add
aad
stos
mov
in
xchg
lock
sbb
mov
je
cmp
mov
mov
ja
aad
adc
pop
and
cmp
int3
rcr
mov
dec
pushf
cmp
xchg
ds
sti
xchg
sbb
mov
lds
movsb
repnz
jg,pt
shl
fistl
imul
ljmp
adc
mov
fsubrl
xor
pushf
jns
frstor
push
test
inc
adc
xor
push
mov
es
ljmp
adc
xchg
shrl
adc
jle
lods
xorb
fwait
sti
pop
pop
test
sbb
xchg
in
sub
push
xor
rep
imul
fstps
fwait
mov
cmp
inc
loope
call
or
sarb
sub
dec
dec
inc
add
xchg
jp
stos
sub
pushf
stc
leave
xchg
fnstcw
shll
rorl
test
ds
aam
out
daa
xor
in
inc
pushf
add
insb
xchg
add
mov
insb
cmp
mov
hlt
sub
push
mov
dec
orl
push
mov
sarl
ljmp
push
cmpsb
fidivl
xorb
xchg
sub
push
fsubs
jnp
sahf
les
push
out
jns
pop
stos
cwtl
fs
arpl
int3
dec
pop
out
gs
rcrl
xor
mov
and
lret
pop
xchg
push
and
push
push
in
sub
push
xchg
flds
jmp
push
mov
xor
sub
scas
dec
and
into
loope
jl
leave
xchg
mov
push
enter
xlat
xchg
cmc
ficoms
je
mov
inc
cs
jecxz
mov
aas
pop
sbb
sahf
out
faddp
movsl
test
ret
movsb
loop
fiadds
arpl
scas
fcmovnb
ljmp
cs
add
cmp
dec
out
push
jb
jno
lea
rcrb
push
xor
pop
cmc
push
out
sbb
or
mov
insb
mov
iret
mov
ss
imul
test
jnp
and
or
pop
add
cmp
push
xchg
aam
inc
cmp
aad
lahf
jg
jecxz
rclb
js
cmp
pmaddwd
scas
mov
jp
clc
mov
jecxz
in
mov
clc
andb
test
push
cltd
icebp
std
push
pushf
lret
mov
lahf
lock
js
outsb
xor
imulb
lods
or
clc
jp
lds
dec
aad
mov
mov
mov
adc
ljmp
and
je
in
scas
imul
push
int
jnp
idivb
mov
leave
data16
test
daa
loopne
dec
test
nop
out
add
ss
iret
xchg
popf
daa
loop
test
insl
jge
addb
xlat
dec
scas
push
subb
daa
hlt
mov
test
sarl
dec
loop
jno
insl
pop
lods
add
mov
adc
xlat
xchg
jmp
mov
mov
or
addr16
and
inc
xchg
aam
std
jbe
pop
out
movsl
add
test
dec
cmpsb
push
dec
jecxz
fwait
or
pop
addr16
lods
pop
nop
bound
pop
insb
pop
lods
aad
insb
popf
mov
fsubrl
dec
frstor
js
sub
je
in
ljmp
mov
ret
mov
add
mov
mov
gs
sti
push
cmp
les
adc
xlat
mov
xor
sbb
fcmovnu
in
cmp
movsb
jb
jg
aaa
xchg
mov
sub
add
xor
cs
fstps
addr16
and
and
or
stc
cmpsl
mov
adc
in
gs
xchg
dec
nop
stc
out
test
lods
cmpsb
out
ret
mov
cmpsb
mov
gs
mov
fmul
jo
xor
dec
inc
sti
push
inc
mov
adc
sub
push
adc
insl
scas
sbbb
ret
pop
sbbb
mov
or
repz
stos
jno
xchg
lds
nop
insb
pop
push
les
pop
clc
int3
pop
jmp
ja
roll
jnp
int3
bound
adc
sub
insl
ja
leave
shrl
test
cmpsb
in
xor
cmp
outsb
mov
int
insb
aad
inc
aam
out
sbb
add
scas
sarl
push
push
lret
in
out
out
mov
loop
cmpb
push
sub
push
icebp
gs
std
add
pop
and
ljmp
out
loopne
mov
scas
test
pushf
bound
out
arpl
cmp
nop
xchg
xor
hlt
jno
iret
adc
jge
das
xchg
arpl
iret
test
and
enter
cmp
insl
inc
fdivrs
faddl
or
xor
pop
or
cmp
out
addr16
xor
sbb
cli
nop
jg
adc
jno
cmp
add
sub
xor
out
call
dec
lods
adc
daa
xor
ljmp
dec
in
loope
push
mov
in
xchg
in
or
mov
adc
push
mov
sub
jno
fadds
xchg
xlat
popa
inc
ljmp
incl
leave
adc
mov
ja
shll
ljmp
cmpsl
and
lods
mov
xor
enter
pop
pushf
pop
xor
pop
xchg
loope
cmp
jmp
aas
mov
cmpsb
lock
push
xlat
lds
rorl
sbb
aad
dec
hlt
int
iret
scas
jbe
imul
loop
adc
lahf
sbb
inc
mov
mov
xchg
shr
add
sbb
xlat
push
repnz
imul
lret
push
out
das
push
dec
shrb
jo
fmull
and
mul
testl
push
rcpps
fdivl
lret
out
jmp
movsl
xchg
js
lods
mov
leave
or
mov
fidivrs
lcall
lea
fbld
xchg
xor
aad
sbb
push
xchg
scas
fsubl
sbb
repnz
jae
clc
pushf
sub
outsl
arpl
sbb
jg
pushf
cwtl
cwtl
xchg
jns
mov
and
popf
jbe
mov
mov
lret
jnp
cmp
pusha
jae
mov
cmpsl
lahf
xlat
xchg
lods
es
sbb
push
movsb
or
inc
mov
stos
mov
stos
jge
int
outsl
movsl
add
xor
stos
std
test
push
arpl
jmp
cmp
mov
jns
adc
aad
pop
pop
loope
mov
inc
rcll
scas
add
testl
xor
addr16
sub
or
fcmovbe
cltd
cld
xchg
mov
pop
sub
mov
cmpsb
addb
cmp
loop
jg
dec
sbb
or
pop
daa
push
adc
sbb
xchg
aas
dec
add
les
imul
inc
inc
les
adc
jns
or
jne
xor
ja
rorl
or
inc
loopne
mov
mov
ret
add
jge
mov
daa
inc
mov
mov
data16
jle
jmp
ss
mov
dec
aas
xchg
inc
arpl
pop
push
push
xor
xchg
mov
jle
repz
or
or
pushl
xor
ret
daa
bnd
dec
and
or
in
bound
sbb
xchg
dec
cs
sbb
bound
xor
jle
jae
inc
xchg
sub
push
cmpsl
sub
lret
mov
enter
fwait
call
int3
sarb
or
dec
lock
mov
mov
jnp
dec
imul
sahf
mov
jl
icebp
dec
sbb
in
cs
ljmp
sbb
lods
pop
pop
insb
and
cmp
sub
sbb
or
cld
dec
in
jl
insb
int3
sbb
or
cmp
sub
fdivrl
cld
pop
in
dec
pushf
cmp
sub
sbb
or
cld
dec
in
jl
insb
int3
sbb
or
cmp
sub
fdivrl
insb
cld
pop
in
dec
pushf
cmp
sub
sbb
dec
in
jl
insb
int3
sbb
or
cmp
sub
insb
std
pop
in
dec
pushf
cmp
lods
mov
add
fsubrl
xor
push
ret
arpl
jae
cmp
or
arpl
or
insl
stc
jge
mov
cld
cld
lods
add
fxch
leave
sub
sub
sub
or
jl
insb
imul
test
cld
xlat
in
jmp
and
adcl
dec
jne
inc
push
pop
jnp
mov
clc
sti
shrl
movsl
lods
dec
jge
push
je
nop
nop
outsl
fidivl
push
push
mov
adc
aam
ret
cmpb
ljmp
xchg
loop
cmpsb
test
arpl
flds
mov
test
inc
into
stc
xor
push
adc
cwtl
jae
add
test
push
in
cmp
cld
sbb
jns
mov
dec
les
data16
pushf
es
aam
in
imulb
lods
push
mov
push
decb
xchg
in
cld
push
mov
fadd
sub
push
insb
sbb
mov
ljmp
cmp
cld
lods
cmp
int3
mov
sbb
sbb
insb
jns
imul
add
hlt
pop
fadd
aad
dec
cmp
jns
push
add
sub
push
enter
out
cmp
ljmp
test
outsl
jns
push
or
add
xor
or
fsubrs
cltd
mov
jmp
push
dec
push
leave
jns
or
add
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
out
jg
fs
push
inc
pusha
jecxz
adc
xchg
neg
shll
mov
push
roll
mov
or
out
mov
fdivl
mov
or
insb
loop
fists
mov
repz
imul
popa
incl
lods
mov
insb
pop
inc
xchg
rcr
jge
xlat
leave
push
sub
mov
aas
jmp
ffree
out
cmp
sti
inc
mov
aaa
add
ret
fsubr
inc
fmull
fiaddl
mov
mov
xor
cmpsb
mov
mov
mov
fs
enter
cli
fwait
inc
jb
das
jecxz
int3
push
cmp
push
xchg
xchg
jo
out
inc
rorb
mov
aad
and
insb
insb
int
or
int
mov
sarl
xlat
mov
ja
mov
mov
cmp
arpl
js
or
out
cld
cmp
add
xchg
jae
mov
mov
mov
sbb
in
imul
clc
and
sti
add
test
jle
sub
sahf
pushf
push
shll
mov
sbb
adc
lock
ja
inc
mov
push
sbb
pop
out
mov
popl
push
in
sbb
ret
pop
inc
bound
sub
mov
test
push
aaa
rcrl
inc
xor
push
mov
sbb
push
filds
jno
jecxz
pushl
add
adc
je
pop
movsl
int
imul
xchg
cmc
clc
jns
push
sub
loope
shll
inc
mov
popa
mov
push
and
sub
movsb
rorl
pop
add
lret
cmp
mull
jno
out
xor
mov
mov
cld
pop
push
mov
sbb
rcr
daa
xor
mov
jp
sub
push
fwait
jp
adc
cmp
xor
pop
ds
push
call
xchg
inc
cmpsb
pop
leave
cmc
mov
pcmpeqb
mov
fistpll
mov
daa
mov
sti
rcrl
leave
push
push
dec
pop
inc
lret
sub
popa
fstpl
fldt
mov
jne
test
rclb
leave
adc
test
repnz
fldt
aaa
shll
xchg
stos
adc
arpl
sbb
bound
js
lret
adc
push
mov
push
ljmp
adc
fisubs
cltd
adc
lahf
push
imul
ret
lret
movsb
stos
arpl
jae
jns
xchg
dec
pop
push
stc
inc
add
jno
popa
test
jle
leave
ss
dec
pop
or
popf
das
add
or
pop
in
scas
sbbl
push
sbb
jne
call
jb
jmp
push
jns
mov
sbb
test
arpl
fcmovb
inc
sbb
sub
es
lahf
fwait
paddsw
xor
test
insl
addr16
lods
testl
jb
sarb
cli
js
and
inc
scas
xchg
dec
int
dec
lock
xor
rcrb
repnz
mov
sub
in
mov
mov
jo
mov
out
frstor
repnz
push
fmull
mov
shl
insl
dec
sbb
xor
popa
cmp
sbbl
fcmovnbe
cs
mov
push
jl
popf
in
popf
aad
dec
xchg
xor
inc
pop
jmp
xchg
pop
lock
in
lahf
jge
std
inc
movb
pop
incb
test
sub
xor
inc
bound
jmp
push
or
in
pop
xor
lea
jmp
sahf
mov
nop
xor
pop
cwtl
loope
push
push
fistpll
ds
daa
adc
jns
sbb
bound
scas
iret
jns
lea
xor
push
movsb
add
cmp
jp
cmp
cmp
sbb
filds
adc
or
xchg
scas
dec
jb
fs
mov
dec
and
cli
loopne
stos
lock
loop
flds
jo
sahf
scas
or
cmp
cld
mov
movsl
xchg
dec
jle
sti
mov
cld
sti
jp
mov
jg
inc
mov
adc
mov
xor
mov
ss
add
nop
pop
jecxz
xchg
add
and
push
stc
or
sub
dec
leave
inc
add
xchg
pop
mov
jl
fiaddl
fbstp
mov
or
dec
xor
xchg
scas
repz
cmpsb
push
fmull
out
mov
push
insb
sub
or
mov
jle
gs
ds
pop
jnp
cltd
mov
imul
pop
dec
jle
data16
lahf
shr
mulb
mov
push
pop
iret
flds
mov
mov
in
jg
pop
jnp
scas
jp
fcom
jg
movsl
inc
lods
and
add
push
fldt
fidivrs
xor
xchg
daa
fcomi
in
sbb
xchg
scas
nop
rorl
mov
test
or
test
sbb
lahf
dec
movsl
and
loopne
adc
cmc
sbb
cmpsl
pop
or
add
sbb
pop
push
aad
inc
imul
mov
cmp
xor
imul
xchg
mov
jns
insl
pop
inc
rclb
mov
sarb
out
jecxz
stos
sub
mov
push
add
pop
sbb
jno
adc
sbb
xor
xor
sub
jg
into
mov
jmp
mov
or
or
mov
punpckhdq
or
mov
cs
je
xor
push
stc
sbb
mov
push
xchg
movsl
sub
and
and
or
jb
jmp
sbb
push
jno
fld1
pusha
std
mov
aas
inc
xor
inc
sub
cmpsb
subl
xchg
loope
out
and
mov
test
je
cld
mov
int3
call
cmp
mov
jno
sti
push
xchg
xlat
push
les
inc
inc
test
or
sbb
jno
jle
outsl
mov
xchg
clc
pop
in
int
jae
xor
test
mov
fmull
into
mov
dec
dec
jne
pop
aas
mov
sub
lret
ret
sahf
add
xchg
pop
int
jo
stc
sahf
sub
out
and
jle
mov
loop
call
or
add
mov
mov
adc
call
fcoms
push
rcl
dec
xchg
int
fisttps
out
mov
mov
rclb
test
int
movsb
add
outsl
xchg
loop
pop
scas
xor
leave
push
cmpsl
sub
icebp
dec
push
push
insb
pop
jb
imul
mov
movsb
lds
mov
test
cmp
jge
repz
aaa
xor
xor
add
cmp
push
movsl
lcall
xlat
clc
lods
imul
mov
xchg
imul
sub
lea
lods
mov
popa
sub
add
jb
hlt
rorb
fsubs
push
xchg
ljmp
movsl
mov
bound
xchg
push
xchg
mov
fcomps
sub
push
push
dec
jno
int3
lods
adc
xorl
ljmp
out
cmc
jne
fstl
pop
aad
dec
frstor
imul
lea
jbe
cmp
std
mov
push
jne
jae
cmp
xor
cmp
jb
inc
lods
jo
add
and
push
dec
lods
int3
push
jo
xor
xlat
iret
and
mov
push
sbb
das
shrl
sub
and
pop
ret
xchg
cmp
hlt
loope
xlat
and
rcll
sti
xor
call
mov
cltd
sub
lds
int
fcmove
in
cmpsl
push
repnz
sbb
repz
test
pop
push
das
mov
xchg
loop
sub
pop
or
push
inc
jne
cli
mov
movsb
cli
imul
jge
ret
mov
rorl
fmull
xchg
dec
jp
cwtl
mov
data16
push
cmp
or
not
imul
add
das
inc
or
xchg
push
push
adc
cmp
cmpsl
je
cmpsb
cmp
push
dec
shlb
in
iret
add
jl
das
movsb
pop
mov
mov
mov
sbb
addr16
xchg
pop
addb
mov
push
shrl
sub
rolb
mov
cltd
push
push
sub
lcall
clc
jb
sub
or
repz
les
sbb
jmp
pop
lea
xchg
movsb
sti
and
cmpsl
add
cmp
dec
mov
or
and
aad
fnstenv
and
lret
pop
dec
xor
push
loope
sub
sbb
mov
sub
scas
sbb
mov
sarb
fsubs
dec
pusha
popf
aad
or
dec
ds
out
inc
dec
out
fstl
popf
stc
mov
repz
or
fs
xor
jb
lret
or
test
out
mov
fcoms
add
mov
jns
aam
mov
mov
nop
mov
or
mov
int
add
xor
dec
jle
imul
push
push
sub
cmc
outsb
xor
in
out
mov
pop
cltd
xor
xchg
int
xor
je
sbb
stos
aad
adc
les
lret
jo
dec
pop
xchg
sahf
sar
lods
mov
mov
sub
add
and
and
cmp
pop
leave
jno
into
xacquire
xchg
pop
mov
fs
sbb
sub
int3
sub
adc
imul
jl
fiaddl
out
jo
shr
mov
cmp
push
xchg
icebp
sbbb
stc
int3
push
jnp
movsl
das
ds
nop
sub
enter
xchg
das
data16
push
sub
insl
dec
sahf
inc
dec
into
loopne
repz
pop
or
adc
fdivs
aam
in
mov
aam
push
push
repnz
in
mov
lds
rcll
sub
xchg
and
test
add
add
cmp
pop
push
dec
dec
cmp
xorl
pop
lahf
push
mov
xchg
push
adc
loopne
lret
mov
inc
test
push
and
inc
ret
and
aas
sub
movb
dec
shrb
neg
sbb
pavgb
fwait
adc
out
jne
xchg
mov
in
fildl
inc
jns
pusha
sbb
fisttpll
jne
iret
lret
outsb
push
outsb
mov
lret
dec
xlat
repz
sub
or
dec
sbb
sbb
imul
or
mov
inc
ret
xor
fstps
test
cmc
pop
mov
sbb
mov
push
int3
mov
jns
test
jne
testb
mov
bound
imul
cmp
mov
dec
or
jl
jnp
or
fsubrl
pop
and
pop
sbb
mov
fistl
xchg
frstor
lods
loopne
pusha
fldcw
jg
jo
test
inc
push
test
mov
fldt
repnz
inc
mov
add
pop
dec
out
ljmp
jo
and
cmp
dec
mov
push
mov
and
xor
inc
outsl
sub
stos
sbb
jnp
mov
xor
lcall
outsb
repz
sub
repz
sbb
je
add
dec
roll
lock
sub
lock
aam
or
mov
in
out
rcl
sub
imul
ja
jns
inc
or
fcmovne
mov
stc
imul
add
ds
mov
inc
push
fidivrl
bound
or
sbb
adc
aaa
dec
cld
outsl
xor
xchg
dec
pop
imul
jne
nop
shl
pop
jecxz
mov
and
push
imul
and
out
adc
add
imul
cmc
iret
dec
add
sbb
addr16
lahf
imul
ja
sbb
int3
sti
rep
xor
nop
int
xchg
ljmp
add
xor
sub
xor
test
fcomip
sbb
cmp
loopne
push
sub
dec
arpl
enter
push
cmp
ret
lahf
xor
mov
out
or
pop
stos
fcmovu
in
psrld
mov
xor
jne
xlat
sub
int
jmp
ss
pop
iret
cmp
jmp
adc
test
sahf
dec
adc
insb
jge
aas
mov
aaa
lret
mov
add
or
and
dec
and
mov
xchg
out
les
xchg
je
out
ret
mov
out
aas
push
sub
sti
rcll
data16
in
inc
xchg
or
aas
fsubs
cmp
mov
adc
adcl
popa
sahf
or
xor
xor
inc
dec
push
lahf
mov
push
pushf
fld
test
in
xchg
mov
sub
mov
cli
insl
mov
pop
adc
push
or
mov
xor
inc
adc
hlt
xchg
mov
out
inc
addb
mov
push
movsb
xor
pop
jno
mov
std
cmpsb
movsl
push
pushf
es
ljmp
lds
int3
push
or
lret
xor
and
fsubrs
inc
and
in
dec
or
mov
push
cmp
outsb
lods
jge
jo
dec
hlt
mov
pop
cmpsb
sub
mov
out
inc
imul
out
hlt
sbb
icebp
xlat
xchg
aas
xlat
sti
popw
repz
push
cmp
imul
ds
shll
ja
mull
add
xor
dec
ret
jge
outsl
out
jnp
loope
sub
mov
and
and
mov
data16
leave
sbb
push
pushf
jp
addr16
into
lret
push
gs
sub
lret
xchg
jge
in
imul
ror
inc
jg
push
xchg
inc
lret
xor
add
add
cwtl
pop
lds
mov
js
fld
mov
xor
or
push
lock
jno
adcb
mov
jo
mov
and
and
xor
dec
loopne
sbb
pusha
adc
cmp
aad
adc
adc
sar
xor
jmp
mov
jge
lret
enter
aaa
mov
mov
aam
mov
push
inc
mov
xor
pop
sahf
movsb
xchg
adc
stos
or
push
dec
adc
inc
std
mov
cmp
in
loope
cmp
jmp
pushf
cmp
xchg
cmp
aam
scas
adc
inc
sub
movsl
sarb
js
jno
out
in
or
test
pop
cmp
data16
sub
fcmovu
es
mov
lock
xor
lods
dec
and
jmp
jnp
push
and
lcall
cmp
mov
daa
push
gs
fdivrl
pop
add
fisubs
sub
push
mov
pop
loope
lret
data16
mov
jae
pusha
fnsave
inc
stos
fists
and
or
lock
cmc
mov
loop
std
jmp
test
sti
mov
sbb
jg
or
psubsw
mov
hlt
jno
adc
hlt
and
movsb
cmp
popa
jge
insl
popa
mov
mov
xchg
sbb
xor
xchg
xchg
data16
jl
ljmp
mov
lods
clc
dec
pop
pop
sahf
cltd
and
push
xor
pop
addr16
aaa
lret
ret
fs
xor
dec
mov
pop
in
call
shr
stc
fildll
mov
mov
push
ds
mov
sub
jne
test
dec
lahf
cmpsl
sbb
xor
or
add
and
jecxz
dec
sbb
adc
lahf
push
outsl
cmp
pop
rol
shrl
mov
add
cld
outsb
xchg
and
mov
pusha
sbb
inc
jae
mov
jle
fistpll
xor
popf
cli
icebp
outsl
ds
out
mov
mov
adc
scas
or
mov
adcl
out
mov
xchg
push
enter
xchg
inc
push
ret
adc
sahf
or
push
mov
test
mov
push
sbb
push
and
dec
cmp
mov
imul
cwtl
inc
adc
lret
xor
xlat
add
sub
mov
repnz
jnp
call
inc
xchg
sti
dec
fisubl
jno
push
inc
push
cmp
jns
fdivrl
cltd
shr
push
and
cmpl
xlat
mov
out
popf
or
scas
mov
and
movsb
add
inc
pop
lret
repz
sbb
test
push
aas
sbb
dec
imulb
insb
fildll
mov
ret
dec
pop
push
and
gs
mov
inc
out
into
jne
stc
mov
lret
outsb
les
xor
ret
and
neg
pop
jle
pop
pop
xor
jmp
push
in
sub
js
das
rcrb
push
mov
fstl
mov
pop
sbbl
jp
fs
orb
mov
sub
xchg
leave
mov
dec
adc
jge
out
scas
xchg
xchg
fimull
dec
mov
mov
bound
sub
cmpsb
pop
mov
mov
je
mov
aaa
cmpsl
pop
icebp
cmp
sti
cltd
xor
push
dec
and
das
je
push
mov
dec
rcll
iret
cli
mov
xor
insl
xchg
sub
dec
dec
sbb
ss
xor
xor
aas
mov
xchg
mov
or
sub
sub
lahf
rclb
or
pop
dec
in
lret
fwait
hlt
add
pop
push
gs
mov
push
fiadds
fstpl
stc
inc
loope
dec
jbe
je
xor
sbb
aam
adc
cmp
fidivl
pushf
rcrb
js
jae
pop
mov
push
lahf
xlat
mov
xor
les
or
mov
aad
addr16
mov
push
mov
jp
sar
jp
adc
call
pop
pushw
mov
adc
call
nop
aaa
aaa
je
adc
in
jo
add
lds
xor
or
roll
call
add
rorb
or
js
aad
jg
rcrl
aam
in
mov
fwait
dec
outsb
dec
stos
dec
shlb
loope
xor
mov
mov
out
in
mov
fs
cmpsb
stos
xchg
iret
testl
jb
mov
fiadds
dec
add
push
nop
ljmp
sub
xor
loop
sbb
cli
jns
loopne
push
imul
add
pop
fsubs
mov
xor
popa
into
push
dec
outsb
sub
test
mov
int3
gs
lcall
mov
add
dec
fisttpl
mov
cltd
mov
leave
sarl
popa
out
jb
cltd
cmp
inc
mov
mov
vmaxss
inc
fs
dec
lcall
sbb
pusha
push
lret
fcmove
pop
sub
ret
outsl
iret
rcrb
inc
clc
pop
pop
sbb
sbb
sbb
enter
movsb
fbstp
shl
sbb
push
xadd
dec
xchg
lahf
sub
jmp
leave
lock
pop
lds
negl
add
dec
in
lret
push
xchg
xchg
incl
test
adc
out
daa
out
lahf
imul
stc
popf
pop
and
jge
adc
jo
lret
jae
dec
sbb
enter
xchg
out
repz
mov
fwait
xchg
out
daa
xchg
testb
loop
or
enter
jns
repnz
lods
in
negb
pmullw
incb
faddl
insb
leave
scas
ja
or
pop
dec
jg
fcomps
push
ds
fs
clc
jo
mov
push
icebp
mov
xor
pop
enter
subb
lahf
aam
std
in
in
mov
push
mov
mov
sub
std
mov
icebp
push
fs
das
ja
std
out
inc
adc
addr16
adc
leave
lahf
test
xchg
out
fsubrl
or
xor
sub
inc
cld
shll
fstps
out
js
enter
add
aad
sbb
bound
jmp
sub
push
push
movsb
inc
mov
cld
add
mov
lret
mov
enter
and
jecxz
inc
add
dec
sub
inc
adc
mov
fildll
sbb
xchg
dec
cmpsb
stc
call
adc
decl
mov
push
or
mov
loop
clc
mov
jae
sti
mov
xor
mov
cmpsb
xor
sub
mov
dec
push
loopw
arpl
jge
into
sarb
divl
and
in
clc
mov
aad
pushf
in
mov
and
xchg
faddl
imul
and
cmp
xlat
fcoml
add
adc
xor
xor
pop
scas
mov
add
push
mov
aas
xor
sub
aas
dec
imul
xor
sahf
jns
dec
insl
pop
fwait
add
add
add
lahf
in
sbb
cmp
fisttpl
mov
arpl
stos
adc
loop
sub
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
imul
test
cld
stc
in
jmp
cmp
sub
sbb
or
jl
insb
add
dec
mov
cltd
mov
std
sub
sub
or
jl
insb
imul
inc
push
add
cltd
mov
mov
xor
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
mov
mov
cmpsb
cmpsl
sar
sub
cmp
cmp
cmp
js
dec
js
js
mov
mov
enter
sub
cmp
or
sbb
test
js
dec
push
mov
mov
enter
sub
sbb
fs
sbb
push
ds
mov
icebp
mov
hlt
xor
daa
jae
ret
jbe
cmp
notl
sub
cmp
and
aad
and
pop
inc
clc
es
lock
out
xchg
int
or
clc
ja
pop
imul
fsubl
fadds
xchg
lea
xchg
fdivrs
sub
fdivrs
mov
call
fadds
movsl
pop
mov
xchg
sbb
cmpsl
lret
loop
adc
pop
jns
push
addr16
mov
clc
and
mov
outsb
sbb
and
xchg
inc
js
test
jae
repnz
inc
rcr
jne
or
or
cmp
cmc
sub
mov
mov
enter
sub
cmp
or
sbb
push
push
int3
cwtl
loope
icebp
mov
lods
test
xchg
sub
pusha
or
push
imul
fstpl
call
mov
jns
pop
sbb
cmp
aaa
and
sub
std
out
hlt
int
movsb
clc
fmul
call
cmp
or
sbb
push
push
mov
mov
enter
sub
cmp
or
sbb
push
push
popf
pop
adc
cmc
cli
mov
pop
sahf
or
mov
or
inc
push
pusha
sti
shll
iret
test
push
sbb
test
push
dec
clc
pop
test
xor
enter
lret
sbb
add
bound
mov
xchg
push
or
out
jl
jno
repnz
lcall
imul
jp
sbb
ss
lcall
mov
shl
ds
stos
leave
dec
and
mov
insb
mov
jb
mov
movl
xchg
adc
pop
xchg
out
mov
and
aas
int
in
inc
sub
ss
sub
pop
push
stos
dec
dec
pop
in
loopne
lods
add
or
push
push
iret
push
ret
push
out
repnz
sub
and
xchg
mov
xrelease
cmp
or
imulb
mov
inc
jno
cmp
jp
leave
out
flds
in
push
adc
cmp
and
push
jge
lcall
push
push
test
ljmp
cltd
jecxz
iret
pop
data16
lcall
movsb
dec
outsb
push
mov
shrb
jbe
push
inc
loope
aam
ret
pushf
xchg
inc
sub
mov
push
adc
ror
cmpsl
out
lret
adc
sti
jl
inc
mov
or
fs
ja
cwtl
fisttps
mov
push
data16
ret
adcb
inc
mov
fsubs
jbe
iret
add
jp
jb
loopne
cs
xor
xchg
in
jg
jp
in
dec
insb
scas
std
mov
popf
inc
call
test
fbstp
lock
ret
insl
xor
ret
push
add
adc
pusha
es
outsb
fldt
fisttpl
jmp
mov
neg
sub
filds
jmp
xlat
insl
jno
and
sub
or
in
imul
sti
loop
test
jne
movsl
push
fldenv
sahf
lahf
push
lds
pop
inc
inc
cld
xchg
popa
adc
or
inc
adc
aad
add
negl
adc
test
jno
pop
repnz
test
mov
xchg
addl
mov
das
nop
jb
lcall
sbb
imul
popf
adc
bound
inc
add
mov
pop
cltd
xor
push
mov
or
xchg
mov
push
push
ret
xchg
movsl
mov
push
ficomps
ljmp
cli
mov
jecxz
clc
xor
jo
ljmp
ror
push
jl
js
push
sbb
scas
mov
loop
dec
jb
sbb
rcll
test
xchg
aas
adc
dec
dec
lcall
inc
sub
mov
loope
mov
insb
jge
loope
dec
jmp
pop
ss
out
roll
data16
lahf
loopne
addr16
dec
or
or
nop
inc
rol
push
or
test
add
leave
jg,pn
dec
imul
and
outsb
cwtl
fcoml
dec
div
sub
clc
or
aaa
lret
lea
adc
popf
pop
jecxz
jne
lret
aaa
mov
push
cli
out
or
cmpsl
movsl
ja
pop
mov
addb
clc
int
popf
ss
ret
jg
mov
cmp
loop
dec
std
movsb
push
adc
jp
mov
mov
das
fucom
outsl
jmp
sarb
push
xchg
or
xorl
mov
mov
push
mov
mov
lods
push
cmp
sbb
leave
jno
add
mov
pop
jg
sbb
push
push
jle
in
dec
mov
cmp
roll
ret
push
lret
movsl
shlb
and
loop
xorl
dec
shrl
cmp
loope
mov
or
add
loopne
into
add
cmp
rcl
nop
lock
popf
repz
dec
inc
aam
lds
je
mov
adc
sbb
jns
or
push
enter
imul
rcll
cwtl
loop
data16
cwtl
jmp
sahf
adc
incl
push
xchg
int
rcr
jge
cmpsb
jg
sbb
lods
cli
add
sbb
pop
or
mov
and
out
data16
sbb
or
dec
nop
xor
pop
das
or
push
push
xchg
mov
mov
xor
mov
push
dec
pop
faddl
stos
inc
fcmovb
add
mov
mov
pop
mov
and
or
or
scas
pop
ret
adc
mov
jno
clc
cmp
imul
aaa
lret
inc
cwtl
lret
lcall
pop
mov
adc
ret
cmp
pop
mov
and
mov
out
push
leave
and
outsl
in
mov
cld
ficoml
mov
lock
sbb
loop
out
cld
pop
lods
dec
and
and
jmp
pop
mov
adc
rcrb
loop
xchg
imul
xchg
mov
inc
and
sub
push
ja
and
loop
stos
add
or
sub
mov
xchg
test
push
add
and
aaa
cmp
popa
sub
fcomi
mov
lock
add
cmp
dec
in
mov
clc
scas
mov
or
jns
test
adc
push
add
mov
inc
jp
insb
inc
jl
jae
gs
stos
hlt
out
bound
lcall
aad
sti
aaa
stos
mov
in
cli
jp
arpl
sbb
mov
sbb
jg
push
xor
sub
addr16
in
sbb
outsb
add
insl
lods
add
lahf
pop
std
inc
movl
inc
jmp
push
xchg
aad
popa
push
push
in
mov
inc
popl
mov
imul
dec
repz
in
mov
mov
fsubrp
lret
gs
pushf
jmp
xchg
mov
xchg
mov
loop
mov
adc
dec
iret
xor
pop
dec
adc
jb
fimuls
insl
xor
or
loope
sub
sbb
out
inc
adc
testb
sbb
pop
sub
int
dec
jp
xlat
lods
into
stos
push
daa
fcomip
ja
test
jb
lods
shrl
dec
cmpsl
and
jge
add
lcall
fdivrp
jle
pop
idivl
adc
cmp
lods
repz
fildl
mov
dec
pop
mov
popa
ds
mov
mov
dec
pushf
jns
mov
mov
and
int3
cld
ret
xchg
push
lods
dec
in
adc
out
aaa
dec
mov
xor
dec
push
in
out
negb
cmc
sbb
shld
dec
mov
mov
lahf
jnp
push
xchg
jecxz
jns
mov
xchg
mov
shll
sub
test
scas
adc
es
bound
es
dec
dec
aaa
add
and
pusha
or
out
dec
xchg
jmp
popf
and
push
test
adc
lds
inc
cmp
inc
aam
mov
and
andl
enter
cmp
jmp
jg
or
mov
aas
xor
loope
fadd
mov
pusha
in
in
mov
addr16
mov
push
mov
xchg
mov
lret
xchg
fiadds
rclb
jns
add
ja
cmp
cmp
das
jns
inc
pop
push
ds
jnp
arpl
sbbl
out
and
fadd
mov
std
mov
in
ljmp
lahf
scas
mov
shr
jbe
push
pusha
cmp
lock
ljmp
daa
jp
neg
sbb
jb
xchg
xchg
leave
sbb
arpl
out
xor
dec
mov
cmp
jecxz
std
inc
sbb
add
xor
xor
xor
rcrl
or
loope
push
xchg
mov
jnp
xchg
fdivs
jno
bound
add
sbb
or
inc
sub
mov
add
js
lods
cmpsb
cmp
shlb
sub
fs
mov
icebp
std
fmull
add
add
push
test
test
inc
adc
dec
xchg
push
sub
push
repz
push
call
jne
pop
xchg
cmpsb
dec
fisubrs
sub
add
adc
inc
xor
mov
mov
test
add
mov
cltd
adc
sub
and
test
push
or
jecxz
mov
lds
push
xchg
push
pop
lret
xor
loopne
fisttpl
xor
fbstp
cmp
sub
addr16
es
and
or
repz
shl
ljmp
shlb
xchg
movsl
mov
push
repnz
cmpsl
movsb
sbb
lret
cmp
xchg
in
dec
mov
pushf
mov
inc
pop
testb
in
and
inc
adc
jno
pop
orl
aad
mov
inc
mov
pop
mov
cmp
inc
fdecstp
outsl
xchg
mov
int
imul
out
sarl
inc
data16
mov
pusha
inc
xchg
cmc
lods
nop
dec
or
inc
push
out
fbld
fcompl
inc
daa
add
lret
and
lods
jo
std
sub
push
jmp
sub
das
ss
enter
add
mov
inc
push
xlat
xor
jle
sti
mov
mov
scas
push
xor
repz
fiaddl
test
dec
sahf
add
cld
clc
xchg
lret
jl
lret
ret
pop
adcb
gs
out
pop
mov
fcomi
sahf
jb
sbb
pop
pop
xor
jle
pop
fidivrl
jmp
xchg
insb
mov
dec
jg
pusha
loope
sub
sub
jne
push
adc
fs
dec
imul
std
push
scas
movsb
loop
cmp
mov
sub
ljmp
xchg
daa
fimuls
sbb
sbb
lods
pop
sub
mov
movsb
mov
clc
adc
adc
gs
inc
push
mov
jp
lcall
mov
addr16
add
les
adc
jae
xchg
cli
mov
push
movsb
inc
cmp
mov
pop
ds
mov
sbb
leave
mov
cli
ss
jge
jg
fs
sbb
lret
lods
dec
adc
mov
insl
shll
shll
mov
repnz
outsl
or
stc
mov
mov
fstpl
repz
ss
dec
ret
enter
call
sbb
lret
adc
mov
push
cs
sub
adc
or
and
test
loopne
sub
add
jno
aad
lds
cmpb
dec
and
push
adc
add
mov
movsb
push
mov
xor
sbb
sub
sub
and
adc
cmp
add
aad
and
aas
push
in
shll
testb
pop
mov
cltd
mov
insl
leave
mov
jnp
icebp
adc
cmp
movl
loope
add
mov
cltd
icebp
adc
lret
xrelease
clc
daa
add
mov
sub
cltd
sbb
call
es
cmp
add
ds
out
addr16
flds
cmpsl
xchg
jp
adc
imul
pop
aas
mov
insb
pop
push
pop
cmp
inc
push
jbe
arpl
dec
lds
ljmp
leave
cmp
mov
loopne
sub
and
pop
mov
mov
leave
dec
in
test
mov
or
stos
lds
and
push
repz
mov
je
xor
das
mov
push
and
inc
fidivrl
xchg
dec
lds
imul
mov
imul
cmc
hlt
pop
stos
jp
mov
pop
popf
aas
jle
adc
stos
pop
xchg
and
in
inc
add
xchg
cltd
sbb
stos
addl
inc
xor
lret
ret
mov
mov
andl
jno
push
sahf
inc
je
adc
jno
mov
inc
imul
inc
mov
data16
xchg
mov
sbb
and
incb
xor
ja
dec
pop
jge
fiadds
xor
and
inc
arpl
mov
mov
xor
shrl
adc
jnp
mov
aas
jnp
adc
push
mov
roll
dec
inc
mov
and
scas
xchg
mov
cmc
cmpsl
dec
pusha
hlt
mov
leave
je
hlt
or
push
dec
lods
pop
pop
mov
lds
xor
fisubl
aad
lods
lods
mov
pop
xchg
xchg
push
and
push
fstps
into
ds
xchg
jo
lods
adc
cmp
inc
add
lret
sub
scas
cmp
xor
insb
jmp
shll
cmp
xor
jae
std
add
daa
adc
fcompl
and
arpl
inc
in
cmp
jecxz
push
cmp
stc
ds
push
adc
mov
test
push
rcrb
add
cltd
mov
popf
xor
lods
push
rcl
pop
and
xlat
iret
pop
xchg
pop
pop
repz
pop
lods
into
leave
hlt
loopne
cmpsl
dec
icebp
loope
leave
lret
adc
xor
dec
pop
mov
pop
sub
sahf
pop
loopne
daa
push
iret
sub
pop
mov
stos
inc
aam
cli
inc
xor
iret
sbb
mov
and
sub
or
adc
maxps
xorl
sti
sub
mov
cmpsb
lods
hlt
fiaddl
dec
aam
mov
daa
addr16
pop
or
xor
pop
test
cmp
jno
pusha
int3
dec
mov
mov
lcall
in
sbb
jmp
adcl
jle
in
inc
repz
dec
cmp
mov
and
je
int3
stos
xlat
shrb
sub
dec
push
jno
fimull
inc
cwtl
cmp
mov
in
mov
ret
jns
push
sub
lock
mov
mov
daa
je
inc
lods
ds
fsubl
mov
mov
sbbb
pushf
mov
dec
jb
ret
add
mov
fisttpll
jp
mov
lret
xor
arpl
data16
ja
nop
mov
std
jbe
dec
mov
cwtl
cmc
daa
lods
popa
nop
pushf
mov
in
jo
jp
sub
fwait
dec
xchg
jae
sub
push
clc
xchg
xchg
cmpsb
or
sub
orb
dec
sub
inc
jg
inc
jo,pn
mull
inc
call
mov
cmpsl
jge
addl
adc
test
aas
jmp
lea
push
xor
adc
scas
xor
shrl
pop
test
sub
pop
mov
lods
test
leave
test
test
cmpsb
pop
out
ficomps
loope
dec
jp
inc
loopne
out
add
jecxz
mov
fistpll
testl
inc
xchg
imul
sub
fmull
mov
adc
shll
stos
xor
gs
or
pop
fbld
out
in
xchg
outsl
das
push
dec
stc
aaa
fiaddl
jae
dec
aam
out
shlb
hlt
push
pop
xchg
sbb
mov
lods
push
insl
popf
stos
scas
ja
add
add
pusha
call
dec
pop
push
scas
fidivrl
cmpsl
fdivr
jg
pushf
or
and
jecxz
cli
loope
xchg
cmp
lret
loop
in
jmp
leave
push
mov
add
popf
xchg
jb
cmp
dec
in
sbb
outsl
outsb
sbb
mov
daa
add
enter
jmp
or
inc
and
mov
mov
orl
jge
pop
or
pop
push
cmp
push
rclb
cli
jbe
fsubrs
test
icebp
stos
test
push
mov
pop
pop
and
push
push
cmc
lret
js
out
test
iret
mov
pop
mov
testb
leave
jge
mov
arpl
movb
or
xchg
xor
enter
xor
cltd
idivb
mov
sti
xchg
fldenv
scas
dec
popf
and
or
jge
push
dec
cmpsl
jmp
fistl
adcl
das
mov
mov
mov
mov
scas
cmp
jg
push
inc
fxtract
cmpsb
dec
xor
inc
xlat
jmp
add
insb
rcrl
jo
lods
mov
loop
cltd
xchg
aaa
pop
jno
test
xlat
push
inc
ja
add
jo
mov
inc
in
out
xchg
movsl
sub
inc
adc
jl
aas
sub
hlt
shlb
sub
add
aam
cmp
test
xchg
aaa
inc
fidivs
xchg
adc
sti
dec
adc
or
mov
movsb
add
pushf
fidivrs
and
lods
ljmp
sbb
cld
rcll
repnz
push
sub
mov
and
push
int3
dec
pop
nop
mov
pop
sbb
mov
negb
rolb
dec
cmp
pop
mov
xchg
sbb
leave
jl
lds
xor
sub
rcrl
jl
std
mov
out
fincstp
cwtl
or
testl
mov
or
jb
add
mov
lea
inc
push
stos
and
stos
add
shr
cmpsb
add
cmp
sbb
je
fistl
jne
mov
loope
cmp
scas
addb
int
cmpsl
adc
out
jns
inc
push
pop
roll
add
shlb
pop
imul
jle
cmp
push
add
mov
addr16
movsb
xor
push
adc
loopne
das
and
cmc
cltd
mov
stos
popf
jne
jl
arpl
fdivl
les
xor
sahf
and
out
mov
mov
and
aas
push
int
adc
mov
mov
inc
or
mov
and
fsts
ljmp
sbb
loope
addr16
sbb
pop
xor
aad
dec
and
shr
inc
in
stos
jle
cwtl
mov
sub
lods
clc
sub
xchg
pushf
sub
pop
adc
stc
imul
out
fisttpl
sar
mov
cmp
ds
cmp
add
mov
test
xchg
test
jne
das
hlt
mov
adc
xor
popf
in
loopne
orl
mov
loope
call
mulb
mov
jecxz
xchg
subl
scas
mov
out
xchg
jp
sub
decb
and
outsb
mov
mov
mov
out
push
push
std
ds
pop
rorb
cmp
and
lock
icebp
xchg
mov
dec
mov
cmp
sub
push
fdivrs
jle
pop
and
push
outsb
sub
das
pop
div
dec
sbb
sbb
xor
dec
jmp
dec
sub
xchg
fdiv
sbb
cmp
hlt
leave
pop
and
pop
fistps
out
js
mov
ljmp
mov
dec
mov
sub
or
mull
xor
cmpsl
pop
xchg
fmull
pop
les
jmp
movsb
sbb
orb
dec
inc
pop
push
xor
fsubrl
xor
sbb
lods
xor
scas
lea
pavgw
add
mov
sub
mov
lea
loope
and
mov
in
push
in
shll
mov
int
mov
jecxz
cmp
dec
mov
pop
jne
popl
xchg
mov
lret
lcall
cli
scas
xchg
repnz
dec
pushf
add
jl
cmpsl
ds
or
push
xor
cld
sbb
or
push
cmp
into
rorb
jb
mov
xchg
mov
inc
xchg
fwait
mov
fnsave
in
fdivp
stos
dec
add
mov
jae
scas
cmp
aas
mov
repnz
outsl
sub
push
outsb
popf
sub
dec
into
enter
ja
out
mov
neg
cltd
xchg
mov
cmpsl
in
leave
es
jbe
cmpsl
andb
mov
sub
stc
repz
jnp
or
push
test
push
push
xor
and
pop
in
clc
sahf
outsb
aaa
inc
dec
push
sbb
inc
ret
and
pop
sub
stc
add
out
arpl
jg
jl
lret
jecxz
push
insl
xor
sbb
inc
mov
inc
hlt
fnstenv
movsb
mov
jns
push
push
dec
incb
das
pop
scas
stos
iret
or
jno
xor
push
ret
xchg
mov
dec
inc
dec
jle
inc
loopne
jbe
cs
int3
cmp
inc
test
add
popf
test
xor
mov
inc
pop
xor
cmp
push
adc
outsb
fcoms
pop
addr16
repnz
aas
cltd
jp
or
fisubs
xor
and
stos
ljmp
rolb
lods
sahf
dec
hlt
aaa
inc
adc
repz
ja
jne
es
sbb
jle
xor
jp
ja
jg
cmp
or
dec
in
push
inc
lods
cld
jp
leave
jecxz
movsl
pop
mov
mov
xor
mov
sub
sub
cmpsl
scas
jge
cmpsl
xor
testl
insl
add
mov
mov
inc
cwtl
mov
enter
sub
cmp
or
sbb
push
push
mov
mov
enter
sub
cmp
or
sbb
push
push
cmp
push
call
cmp
or
sbb
push
imul
mov
clc
fmul
call
cmp
sbb
or
pushf
cwtl
mov
aad
stos
stos
mov
loope
pop
push
push
or
sub
pop
pop
dec
dec
jl
insb
push
mov
fmul
enter
nop
sbb
or
cmp
sub
pop
xor
dec
jl
insb
push
mov
fmul
enter
call
dec
dec
dec
dec
pop
or
pop
aas
push
add
sarl
int
jae
arpl
sti
daa
jge
icebp
sub
sbb
sub
jo
jae
inc
in
sub
add
add
mov
sub
dec
subl
cwtl
out
shl
scas
mov
push
dec
or
test
test
dec
std
insb
rcrb
stos
pushl
in
push
in
out
neg
mov
dec
mov
jb
imul
call
in
inc
add
add
mov
cmpsl
sub
or
dec
cmpl
mov
test
call
pop
lock
lods
pop
or
int3
rolb
pop
pop
sbb
cwtl
mov
int3
enter
call
cmp
sub
pop
pop
dec
dec
jl
insb
add
pushf
out
leave
cli
mov
mov
mov
dec
pop
imul
sbb
ljmp
test
mov
test
push
imul
sub
stos
sub
cs
pop
sti
fmull
cltd
test
cld
clc
in
call
cmp
sub
pop
pop
dec
dec
jl
insb
push
mov
fmul
enter
call
cmp
sub
pop
pop
dec
dec
jl
insb
push
and
push
lods
ds
lods
ja
stos
scas
icebp
fists
jne
jge
inc
ret
sbb
daa
rorl
in
cmp
adc
subb
mov
push
cmp
insl
add
mov
ret
sub
fstps
clc
insb
in
addb
sub
xchg
and
mov
xor
outsb
daa
xchg
fcoms
inc
mov
mov
inc
push
adc
push
jecxz
push
add
into
bound
xchg
sbb
das
lret
lock
adc
fdivs
push
iret
sahf
in
inc
roll
or
std
btc
lcall
and
push
stc
xchg
inc
or
cmp
inc
dec
repz
rcll
xorb
dec
popf
bound
add
cmp
clc
mov
in
dec
sub
and
movsl
adc
in
sub
out
hlt
jp
es
xchg
pop
jbe
test
loop
fs
pop
fldenv
push
cmp
and
pusha
int
test
inc
icebp
mov
mov
adc
lods
jbe
and
pusha
xchg
mov
jecxz
daa
xchg
js
aam
mov
push
data16
cmc
inc
sbb
insl
mov
fnstcw
clc
inc
sbb
adc
incb
jnp
arpl
cmp
into
outsb
cmpsb
cmp
adc
pop
aad
xor
jns
xor
popa
pop
mov
cld
out
adc
das
adc
mov
inc
xchg
sub
in
test
pop
mov
lcall
sbb
and
aad
push
sub
adc
cmc
movsb
push
mov
push
dec
mov
jecxz
xchg
std
jge
lcall
xchg
fwait
lret
fisttps
sub
push
or
sbb
add
cmpsb
mov
sar
cli
adc
mov
ja
mov
mov
leave
aas
stc
and
add
or
xchg
push
cmp
movsl
idivl
pop
stos
loope
push
xchg
lret
aam
jp
ljmp
cld
int
adc
stc
ss
shrd
adc
dec
jecxz
shlb
push
dec
jo
jnp
push
das
xor
data16
mov
pushf
push
lea
les
push
lahf
jno
in
or
adc
pop
jle
or
lret
repz
xchg
mov
jg
lret
push
mov
pop
push
out
daa
xchg
movl
not
mov
outsl
test
lss
xchg
stos
pusha
add
addr16
das
mov
cmp
mov
movsl
and
adc
jl
lcall
adc
test
dec
out
ljmp
arpl
dec
inc
sbb
aad
clc
outsb
cmp
pushf
inc
adc
les
lds
and
push
push
clc
cmp
xor
sub
inc
lcall
test
jb
jo
pop
add
pop
jl
xchg
pop
fimull
bound
inc
bound
mov
mov
mov
in
adc
sub
sti
lea
in
push
fisubrl
loop
out
out
je
push
mov
or
mov
inc
shl
inc
sbb
and
inc
mov
or
jmp
sub
inc
mov
or
lahf
test
aas
jnp
test
add
adc
mov
xorl
fdivp
xchg
stos
cli
lret
mov
lea
inc
jne
mov
mov
xchg
in
mov
mov
jnp
popf
cmpsb
sub
lea
sub
dec
pop
mov
xchg
mov
or
daa
dec
pop
addb
xchg
cs
in
fidivrs
push
pop
and
mov
loopne
lret
cli
cmc
adc
inc
xchg
sub
xlat
js
inc
push
sahf
jae
scas
out
lahf
aas
mov
mov
xor
mov
insb
and
jns
mov
xchg
je
fld
xchg
jb
cmp
add
xchg
outsl
mov
jnp
pushf
je
scas
ljmp
imul
mov
mov
xorb
inc
out
rol
movb
je
bound
mov
mov
dec
jmp
mov
adc
cltd
test
clc
inc
cmp
insl
testl
cmpsl
mov
and
pop
mov
lods
push
mov
or
xor
scas
push
insl
mov
movsb
jecxz
pusha
or
mov
mov
and
push
pop
xor
lea
movsb
pop
das
sub
pop
mov
lcall
cmp
pop
and
jmp
pop
add
sbb
cmc
pushf
lcall
jle
decl
xchg
sub
dec
mov
jns
outsb
jge
enter
subb
fldcw
inc
mov
dec
fcomi
imul
popa
cmp
jbe
or
or
mov
push
aad
adc
jle
scas
add
imul
adcb
cs
in
insb
pop
xor
jnp
or
push
sub
add
pop
bound
movsl
std
inc
stc
out
into
je
bound
and
clc
adc
addl
sub
call
pop
cmp
test
leave
cmp
jnp
sbb
scas
and
push
push
sahf
dec
xchg
lahf
fimull
in
rcrb
cmp
jb
xchg
mov
cmpsb
mov
mov
out
mov
insl
dec
out
push
mov
push
push
xor
aaa
mov
aas
sbb
pop
mov
cmp
fiaddl
sub
mov
gs
or
jmp
fs
mov
mov
push
fnstenv
incl
mov
repz
int
sbb
jno
das
pop
inc
and
cmp
aaa
iret
add
sub
pop
mov
je
push
stc
pop
or
adc
in
mov
aam
and
mov
xchg
sti
mov
xor
loopne
inc
mov
add
pop
test
sti
pop
push
mov
adc
hlt
dec
fstpl
mov
xchg
mov
add
push
add
mov
jmp
lcall
push
jo
mov
or
adc
fs
lea
mov
push
dec
push
xchg
movsb
dec
stc
xor
fists
push
adcb
insb
ljmp
rclb
pop
xchg
mov
sbb
adc
testl
sub
aaa
dec
xchg
xchg
and
pop
push
sahf
in
cmp
inc
arpl
ljmp
dec
outsb
test
sbb
push
jp
or
loop
call
mov
jbe
inc
add
enter
pop
push
ficomps
lods
sub
popf
inc
test
mov
pop
ja
pop
dec
mov
stc
pop
sub
and
loopne
xchg
add
mov
push
mov
or
jb
dec
mov
inc
sbb
xchg
jbe
push
jmp
inc
sbb
gs
mov
lds
clc
sub
popa
rorl
fisubs
mov
jne
rcrl
dec
dec
fcoml
lcall
pop
xchg
movsb
or
jle
jo
fldt
test
pop
mov
repz
cwtl
mov
fwait
or
jmp
dec
enter
test
in
loop
sbb
mov
negl
add
push
je
sbb
or
sarl
jmp
push
sahf
push
cmc
stos
jb
jne
out
mov
mov
dec
cmp
negl
push
dec
push
and
jne
cmp
xchg
rorl
nop
psubusw
push
adc
adc
loope
xor
lods
iret
movsb
xchg
dec
lcallw
gs
adc
dec
pop
out
enter
push
add
enter
xor
pop
push
dec
push
mov
nop
push
inc
std
je
sbb
stos
pop
and
stc
popa
aad
xchg
pop
pop
pop
pop
push
loop
bnd
outsl
scas
aad
lods
mov
and
xchg
mov
dec
mov
pusha
dec
xor
hlt
out
jno
lds
add
jmp
mov
out
mov
fs
int3
mov
imul
addl
jne
sub
inc
test
lods
rolb
add
pop
push
mov
xchg
adc
mov
xor
adc
cli
mov
leave
imul
cld
loope
mov
ret
and
imul
ljmp
idivb
adc
sbb
mov
les
sub
inc
sub
or
cmpl
stc
cmp
dec
dec
jne
into
mov
pop
jne
sbb
dec
xchg
dec
rorl
add
mov
iret
test
xor
std
pop
lret
push
mov
negl
lods
jb
incl
cmp
stc
push
leave
dec
in
test
jge
dec
stos
lea
mov
mov
repnz
mov
dec
rcl
out
xchg
rclb
mov
jo
inc
adc
or
dec
mov
pop
mov
rorl
sub
xchg
scas
insb
and
pusha
pop
out
std
sti
adc
and
and
outsb
lahf
pmullw
ret
jae
mov
jb
bound
pop
loope
orb
push
js
daa
sbb
push
sub
aam
jb
sbb
dec
loop
xchg
mov
mov
pop
and
adc
jno
icebp
repnz
push
fwait
scas
pop
addr16
int3
jp
pop
in
xlat
aam
push
and
movsb
iret
sub
mov
pop
movsb
sbb
negb
clc
pusha
pop
mov
pushf
cmp
mov
fstl
out
or
movsb
imul
jecxz
dec
fisttpll
and
mov
mov
stos
adc
mov
ja
std
int
shl
inc
mov
push
or
popf
or
sub
pop
sub
ds
adc
idivl
push
jne
adc
xor
cmp
lret
out
shr
xor
cwtl
mov
jmp
shl
imul
jae
test
jmp
and
push
fwait
out
nop
or
pop
xor
dec
sbb
and
insb
push
cmp
mov
cmp
loopne
mov
out
les
push
ret
or
cmp
mov
insl
ds
aam
mov
mov
sti
mov
popa
cmpsb
inc
xchg
testl
lret
sub
test
add
imul
lock
mov
iret
push
dec
mov
ret
test
pop
xchg
es
jo
jb
cmp
cwtl
xor
jmp
xchg
daa
mov
jmp
mov
ljmp
scas
shrl
and
adc
lds
jle
mov
mov
mov
imull
bound
scas
mov
xchg
adc
sbb
shlb
cmp
inc
sbb
push
mulb
fucomp
out
imul
jl
out
outsl
pushf
and
ja
mov
xchg
jnp
or
and
loope
or
mov
cmp
xor
ret
scas
pop
cmpsb
loop
mov
mov
mov
fsts
mov
xor
mov
pushf
cmovnp
int
clc
sarl
sahf
mov
dec
imul
mov
cmpl
pop
add
dec
loop
cld
mov
popf
pop
pop
into
ss
fisttpl
stc
sub
push
add
add
mov
cmp
iret
lret
sub
xchg
cwtl
lea
aam
dec
pop
loop
push
push
sub
xor
mov
pop
pop
popf
push
aaa
or
sar
faddl
leave
jo
insb
add
sbb
les
cmp
jl
xchg
ss
outsl
enter
les
pop
sahf
or
aad
icebp
or
or
rorb
dec
push
and
lcall
sub
lret
sbb
xor
sbb
setns
mov
cmpsb
mov
sbb
ret
incl
imul
psubb
sub
mov
push
inc
push
inc
or
sbb
cwtl
sti
push
cltd
jno
xor
adc
xchg
xor
das
xor
sbb
mov
stos
movsl
in
xor
lods
aas
mov
lret
mov
ds
xor
popf
pop
or
add
les
mov
inc
lock
les
je
rcrl
les
xor
or
arpl
xchg
jnp
xlat
icebp
sbb
mov
sub
xchg
insl
and
fcomps
daa
xor
dec
adcl
gs
clc
ds
or
lock
hlt
aad
insl
and
dec
or
sub
dec
jl
lea
pop
sub
cmpl
ror
idivl
and
inc
movsl
jae
xor
jp
mov
rorb
pop
mov
dec
and
inc
test
cmp
dec
inc
mov
ret
xlat
xchg
pop
outsl
adc
cwtl
pusha
pop
mov
rorb
or
sub
pop
push
sbb
mov
push
inc
pop
cmpb
cs
mov
jge
mov
test
mov
cld
xor
out
inc
jno
lret
or
scas
es
hlt
lea
fildl
jns
adc
stc
mov
jle
ret
cmp
dec
in
sbb
inc
cmp
ja
jmp
prefetch
lret
mov
fidivrl
pop
fildll
add
inc
pop
xor
out
mov
aam
repz
fidivrs
in
ja
in
jecxz
lcall
stos
leave
or
jbe
mov
in
movsb
bnd
cmpsb
flds
cltd
int
stc
inc
ret
pop
stc
scas
dec
test
and
mov
repz
ret
out
mov
fmul
dec
xchg
insb
mov
inc
outsb
inc
push
daa
aas
jge
mov
mov
sub
fcmove
cmp
jle
in
mov
stos
xchg
pop
mov
push
sub
in
mov
pushl
int3
and
out
sbb
and
lcall
inc
lods
and
aam
loopne
cli
push
stos
push
inc
mov
jl
xor
lea
fs
sub
xchg
out
add
std
sbb
mov
sti
cmpsl
out
and
scas
jo
lods
xor
repz
shll
jl
outsl
push
fdivs
push
adc
inc
jg
insl
negl
adc
xor
repz
or
cmp
push
mov
jbe
push
add
rcll
push
xchg
jg
mov
mov
dec
nop
mov
jne
xchg
test
fisubs
push
mov
or
lods
in
lea
cmp
lahf
add
cmp
mov
stc
mov
adc
add
push
cmp
mov
and
in
jl
mov
inc
mov
orb
or
inc
or
xchg
and
or
add
or
jle
xor
push
sbb
insl
inc
push
inc
push
je
cmp
pop
jbe
repz
out
mov
test
sbbl
push
data16
xor
xchg
cmpsl
out
cld
jp
mov
sbb
and
in
pop
ds
push
lret
adcb
adc
mov
inc
mov
in
or
mov
xchg
aam
sub
inc
lcall
ret
sti
xchg
xchg
cmp
arpl
or
loopne
lock
sub
stos
mov
lock
mov
or
lret
fadds
dec
and
js
mov
mov
fs
popf
cmpsb
daa
in
addr16
outsl
int3
or
gs
push
inc
stos
in
jno
inc
jnp
pop
jmp
inc
adcb
adc
push
mov
pop
negl
test
cmp
mov
test
pop
xchg
inc
dec
sub
adc
jae
sbb
xchg
test
out
push
repz
jmp
mov
add
pop
lods
mov
ret
hlt
aaa
lds
insl
inc
shl
bound
dec
decl
xchg
jno
cmp
jle
sub
adc
xchg
rclb
sbb
aaa
push
pop
popf
mov
inc
loopne
cld
arpl
xor
pushf
xor
cmp
stos
pop
push
test
jmp
mov
jecxz
loope
les
pop
or
fldenv
xchg
subl
mov
sub
push
mov
fwait
in
rcll
cwtl
xchg
sub
fcoml
fwait
or
lods
mov
out
ror
cli
icebp
jnp
mov
in
mov
jmp
stos
fcomp
cmp
or
xchg
cltd
rorb
sub
jae
ljmp
dec
sub
lcall
mov
inc
inc
add
xchg
jb
leave
inc
in
mov
jno
cmpsb
or
adc
in
mov
pop
repnz
jae
ret
and
push
sub
and
pop
fldenv
mulb
enter
jbe
push
dec
adc
icebp
add
mov
sahf
test
shl
mov
dec
pop
mov
imul
mov
push
and
fisubrs
xchg
pop
sub
dec
cmp
out
test
lahf
xchg
scas
inc
pop
mov
xchg
mov
leave
and
jl
sahf
pop
frstor
mov
out
sub
cli
pop
movl
push
test
xor
jp
xchg
push
mov
mov
jge
ret
jecxz
mov
pop
mov
cmp
fstp
lock
clc
inc
mov
sar
outsb
mov
mov
insl
inc
sub
ljmp
je
inc
sbb
inc
xchg
xchg
sbb
mov
mov
adc
daa
enter
push
pop
dec
pop
pushf
cmp
and
inc
xor
dec
push
xchg
and
inc
dec
insb
hlt
mov
xor
xchg
cmp
jno
enter
sahf
dec
clc
inc
push
jl
in
mov
je
icebp
cld
aas
pushf
pop
jl
negl
or
aaa
push
pop
dec
dec
ds
pop
loopne
xorl
and
rol
mov
andl
jecxz
dec
add
dec
enter
addb
push
sub
mov
sbbb
jnp
je
sbb
pop
sbb
in
out
add
int
loope
adc
bound
jp
test
jg
out
jns
jo
in
das
push
mov
push
jecxz
popa
clc
mov
repnz
and
dec
mov
xor
pop
mov
lods
jno
fs
push
das
inc
push
popf
dec
add
sbb
or
xlat
ja
popf
es
jle
test
lret
adc
ss
xchg
or
sub
mov
dec
push
sahf
sbb
mov
mov
lret
mov
jo
call
xor
imul
inc
fst
dec
push
fucomip
adc
cmp
insb
adc
test
loop
xor
xor
push
inc
pop
jecxz
test
or
xor
dec
jae
lods
or
stos
ds
pop
sbb
lds
xor
xchg
daa
test
std
or
lods
iret
loop
jge
lret
push
std
test
mov
movsb
mov
cs
les
repnz
xchg
or
into
inc
pop
pop
sub
adc
imul
js
xchg
inc
inc
cltd
clc
or
cmc
push
loopne
or
jp
sbb
push
jb
ret
cmp
insl
lea
pop
ror
lahf
dec
leave
cmp
clc
xor
or
lahf
lahf
inc
mov
stos
int
stos
pop
int
xchg
mov
cmp
sbb
pop
aas
addr16
insb
ret
fs
jg
lock
jge
push
outsl
push
popf
out
rorl
xchg
pop
mov
dec
and
lahf
mov
fistpl
out
in
bnd
adc
icebp
lds
push
mov
mov
pop
int3
testl
test
call
xchg
out
pop
lret
movsl
pop
call
add
fwait
or
jmp
rcrb
dec
pushl
lea
push
push
mov
and
push
mov
sub
jg
xchg
inc
sbb
rcl
imul
inc
fwait
cltd
mov
iret
or
outsl
insl
sbb
pop
mov
xchg
fcmove
xor
imul
sub
sub
mov
xchg
loop
clc
jmp
pusha
dec
icebp
mov
or
add
xor
jne
js
pusha
xchg
xchg
adc
loopne
inc
pop
mov
xchg
jne
das
sbb
int
rolb
xchg
push
mov
dec
jo
push
cltd
sbb
in
add
mov
outsb
aad
adc
push
and
rcr
jl
mov
fistps
cli
inc
cs
inc
mov
xor
mov
mov
bound
sub
testb
fildl
and
cmp
roll
mov
pop
gs
push
repz
mov
hlt
dec
lock
xchg
pop
sub
orl
push
add
or
je
ja
inc
out
mov
sbb
ja
daa
inc
sub
dec
mov
adc
xor
xchg
insb
xchg
sbb
imul
mov
lock
int3
enter
call
cmp
sub
pop
pop
dec
dec
jl
insb
push
mov
fmul
enter
call
cmp
sub
pop
pop
dec
dec
jl
insb
push
mov
fmul
enter
call
cmp
sub
dec
jge
insb
push
mov
fmul
enter
call
xchg
cmp
sub
les
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
cmp
movsl
xchg
xchg
cmp
add
pop
push
add
or
pop
add
pop
pop
add
add
add
push
add
test
sub
adc
add
pop
add
and
test
cmc
add
add
add
adc
sub
xchg
add
popl
ljmp
add
add
add
push
add
add
dec
add
add
add
add
add
add
add
add
push
add
sub
add
pop
add
add
add
push
fiaddl
ljmp
add
je
jl
mov
and
add
add
jno
push
add
add
pushf
add
ret
add
add
add
add
add
add
add
mov
data16
add
add
add
add
add
add
add
add
push
add
add
jl
aad
je
stos
add
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
rolb
movsb
add
add
sbb
movsb
add
add
add
add
add
add
add
ja
xor
pop
add
inc
add
add
data16
ja
scas
add
add
adc
push
add
add
add
hlt
add
je
sub
or
xchg
add
add
stos
add
jl
arpl
lcall
add
add
add
add
je
pop
add
cmp
add
add
add
stos
add
or
mov
add
ret
add
add
add
add
add
add
add
and
and
je
data16
add
add
and
sbb
movsb
add
add
add
in
add
add
add
add
inc
add
add
add
add
add
add
ljmp
add
add
add
add
in
mov
add
add
add
add
add
xchg
add
add
add
add
add
or
arpl
add
add
add
add
add
add
add
pop
add
add
xor
ljmp
add
js
add
add
add
and
movsb
add
data16
add
add
add
add
inc
add
add
adc
add
add
add
add
add
xchg
add
add
add
sub
in
add
add
add
add
add
sub
in
add
add
lcall
add
add
jge
push
add
add
add
add
add
add
add
sbb
add
add
add
mov
add
add
add
add
add
add
adc
ss
add
add
jmp
add
add
sbb
in
add
add
add
add
push
add
add
add
add
pop
add
add
add
add
xor
lcall
add
inc
add
xchg
add
add
add
add
add
add
xor
out
in
xor
mov
cmp
jae
test
test
jecxz
xchg
cmp
mov
xchg
cld
or
mov
dec
popa
aaa
mov
pop
out
lds
pop
rcr
clc
cs
nop
cmp
insb
pushf
fidivrs
sub
mov
popf
lock
rcr
out
ljmp
jl
scas
pop
dec
inc
es
les
and
jns
mov
aam
mov
pushf
pop
inc
xor
rcll
fs
lock
dec
xchg
sbb
mov
sub
shl
inc
mov
movsl
nop
jecxz
push
jp
cltd
es
int3
xchg
bound
das
iret
into
sub
loop
insb
jl
inc
dec
outsl
push
or
je
xchg
inc
xchg
inc
daa
push
int3
push
sub
lret
das
jae
mov
inc
mov
jmp
ds
mov
cltd
push
lcall
pop
les
xchg
push
mov
sub
pop
cmp
cmp
inc
mov
xchg
in
xchg
dec
lock
divb
test
mov
mov
out
push
arpl
xor
push
inc
jl
adc
insl
mov
loope
jae
cmp
insb
insb
fucom
icebp
sub
int
data16
cmpsl
push
push
cmp
push
mov
int
pop
push
and
fnstenv
outsb
sub
movsl
hlt
mov
repnz
fisubl
stos
jle
ljmp
pop
and
mov
or
test
xchg
test
xchg
outsl
test
mov
inc
mov
or
sub
cwtl
cmc
stos
lods
pop
xor
popf
xor
aas
jo
in
jp
cld
pop
shl
push
push
inc
dec
out
jmp
lock
dec
dec
mov
insl
pop
and
das
stc
fidivrl
push
enter
fldl
dec
xlat
mov
ror
sbbb
mov
addr16
ja
and
test
xchg
push
fwait
adc
jb
and
sub
cld
jmp
add
mov
jl
movsb
lret
cld
pop
mov
lea
xor
sub
dec
lea
sub
pushf
sub
dec
sub
call
jmp
daa
mov
test
lret
mov
ficoms
mov
xor
lock
inc
fs
adc
xchg
lret
sub
fisttps
xlat
fsts
in
bound
pusha
in
jbe
cmpsl
dec
fiaddl
je
sbb
pop
loop
mov
insl
adc
xor
xchg
jb
cmp
push
aad
cwtl
cltd
insl
gs
and
sbb
adcl
add
sub
mov
clc
dec
mov
aaa
adc
mov
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
