call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
loopne
lock
push
insl
ret
daa
lcall
lcall
add
adc
loopne
lock
push
mov
dec
nop
sub
jo
inc
mov
loopne
xor
add
adc
loopne
lock
rclb
push
mov
push
nop
inc
pusha
scas
push
popf
sub
push
jmp
mov
jle
mov
imul
lods
push
repz
mov
jne
xor
test
jnp
pushf
pop
das
dec
pop
push
mov
jle
insl
mov
mov
mov
mov
mov
clc
push
cmp
lds
jge
add
and
inc
in
popa
jo
dec
inc
gs
adc
stos
icebp
rorb
outsb
movsl
outsb
add
dec
cmc
inc
mov
shlb
xorl
into
pop
stos
adc
and
das
push
scas
mov
add
mov
inc
lds
daa
jae
iret
out
push
popf
adc
rorl
dec
add
pop
xchg
in
fisttpl
movb
jo
mov
fsubrs
lock
push
mov
dec
nop
inc
pusha
scas
jo
inc
xchg
push
xchg
divb
out
aam
fbld
imul
in
xchg
cmp
adc
sti
and
push
mov
inc
xchg
push
movsl
jge
jno
outsb
cmc
xor
cmp
insb
add
jmp
pushf
and
gs
test
lock
push
pop
in
pop
mov
orb
pusha
scas
jo
inc
mov
and
xor
add
adc
loopne
lock
push
mov
dec
nop
pop
pusha
scas
jo
inc
mov
and
xor
add
adc
loopne
aad
pop
mov
sbb
in
loopne
andb
aaa
inc
inc
inc
xchg
imul
rolb
jo
mov
dec
lds
dec
jmp
fdivrs
xchg
cmpsb
sbb
inc
test
push
mov
addb
in
add
cmp
pop
ret
mov
int
and
loope
repz
dec
dec
sub
add
jmp
cmpsb
sub
insb
fs
fwait
jbe
cli
pop
call
xchg
or
mov
xorb
push
shll
fldt
ret
mov
fisubs
lcall
popf
scas
pusha
test
mov
adc
rcl
mov
xchg
fcmovnu
sbb
jge
lahf
popf
sub
aam
sahf
aaa
pop
outsb
std
xchg
addr16
sbb
nop
mov
sarb
btr
jmp
decl
test
or
add
lds
andl
inc
pop
dec
cmp
fsubrl
aam
push
lock
dec
push
or
cmpsb
pushf
cmp
cmp
in
xor
or
repnz
pop
std
arpl
pop
mov
or
jo
mov
xchg
sub
jbe
mov
adc
mov
adc
fdiv
xor
lahf
push
or
leave
shrl
push
fwait
pop
lock
push
xor
pusha
add
xor
push
add
push
mov
mov
dec
pop
push
outsl
gs
dec
fwait
lds
jo
loop
sub
lret
or
jmp
cmp
repnz
subb
out
and
jbe
sbb
dec
pop
rol
test
jo
dec
shll
adc
push
dec
dec
js
sub
cltd
jb
lock
inc
ljmp
cmp
adc
dec
cmp
cmp
xorb
fs
mov
sbb
push
xor
xchg
cwtl
pop
lock
aas
xlat
dec
jns
stos
cmp
cmp
xchg
out
push
xor
push
aam
incl
clc
call
shrb
dec
push
scas
xchg
rcrl
stc
sti
ja
cmp
sub
pusha
negl
mov
clc
push
add
xchg
pop
or
pop
aas
and
iret
sbb
test
lods
sbb
mov
in
cmp
cli
xor
push
in
fildl
adc
rorl
inc
es
mov
bound
or
stc
or
decl
cmpsb
pop
fistpll
xchg
xor
and
push
outsb
cmpsb
nop
subl
addb
jae
lret
xchg
push
cmp
movsb
arpl
dec
icebp
xor
imul
stos
shl
push
mov
lods
xor
inc
add
xor
pop
sbb
enter
cmp
xorb
xchg
cs
orw
mov
jno
sbb
pushf
addr16
rcll
mov
aas
cmp
mov
xor
jnp
jno
xor
add
cmp
push
std
stos
xor
xor
cmp
imul
fs
jbe
push
sbb
pop
and
hlt
testl
mov
inc
or
jne
jle
inc
xchg
stc
xor
inc
arpl
cmp
xchg
add
cmpsl
lret
xor
adc
cld
dec
push
push
pop
xor
ret
cli
mov
adc
or
push
xchg
iret
mov
pop
dec
sub
cmp
dec
mov
fsubs
add
dec
pop
push
ljmp
fdivrl
js
push
jle
repz
pop
cmpsb
push
mov
jp
pop
xor
xor
cli
mov
push
cmp
aas
dec
out
cmpl
in
adc
outsb
xor
pop
mov
int3
popa
push
js
mov
daa
fldcw
in
aam
or
xchg
mov
outsl
jp
adc
push
push
fadds
push
and
lock
adc
mov
mov
add
test
dec
cltd
insb
fdivs
psubusw
jle
ret
scas
mov
pop
hlt
in
add
pop
mov
out
clc
daa
dec
bound
or
xor
fs
mov
xchg
or
sbb
pop
push
bound
aam
or
loopne
insl
fnsave
repnz
and
icebp
les
jnp
insb
xchg
js
test
sub
or
cmp
enter
insl
hlt
aaa
jbe
ss
push
sti
bound
inc
ret
and
and
subl
mov
fisubl
mov
cmp
mov
sbb
adc
or
inc
orb
sbb
pushl
xchg
jo
pop
sahf
jne
subl
jmp
lods
addr16
aam
int3
test
push
adcb
out
adc
stc
mov
mov
orb
aad
mov
leave
add
cmp
mov
mov
pusha
jne
out
xor
movsb
xchg
cmp
push
shrl
sbb
jno
sbb
es
shl
mov
xchg
lds
push
pop
jns
loope
mov
popw
loop
ret
adc
inc
inc
imul
cld
adc
data16
out
jae
lahf
adc
or
cs
clc
jg
pop
fsubrl
cmp
push
jl
pop
jle
xchg
cmp
in
adc
pop
dec
cmp
push
mov
inc
test
push
mov
and
mov
mov
jmp
pop
movsb
js
das
pop
stc
lock
adc
stos
out
setbe
enter
sbb
cmp
mov
int
inc
cs
add
xchg
test
arpl
ja
ss
divl
adc
xor
stc
dec
call
dec
je
mov
xchg
call
xchg
dec
or
lock
imul
into
xor
inc
pop
or
cmp
jns
or
aas
adc
sbb
dec
adc
xchg
pushf
dec
sub
shl
push
lods
push
xchg
push
jo
push
sar
out
add
std
in
lahf
fiadds
xchg
mov
and
fwait
idivb
dec
pop
out
adc
dec
cmp
pop
mov
sbb
add
test
push
jne
sbb
pop
fmull
insb
into
std
dec
incl
mov
fdivrs
scas
push
dec
jge,pt
aaa
add
add
jns
jbe
idivl
jmp
fistpll
out
out
xchg
mov
push
cmc
loopne
lahf
sahf
aam
fmul
int3
bound
int3
sahf
mov
clc
popa
mov
ds
inc
inc
inc
mov
rcrb
loop
popa
dec
scas
add
jg
jbe
dec
in
adc
xor
pusha
into
lods
rol
and
clc
xor
mov
insb
movsb
es
mull
pushw
pushf
inc
cmp
adcl
lcall
and
pop
and
xchg
rcrb
cmp
adc
adc
inc
addr16
enter
add
int
jge
xor
popa
mov
cld
inc
add
loopne
mov
xchg
add
inc
sub
es
insl
mov
cs
cmp
xor
jmp
int
shl
mov
addb
or
dec
sbb
scas
stc
sbb
pop
mov
into
adc
mov
xor
mov
push
loopne
in
sub
xor
ja
xchg
jb
adc
xor
add
mov
sahf
fsubrp
push
test
sbb
pop
mov
test
adc
inc
lock
push
jmp
add
sub
frstor
das
pop
mov
pop
jmp
xchg
out
xor
testl
xlat
je
xchg
rorl
xchg
jb
movsb
ja
aam
mov
and
cld
or
addl
adc
xor
scas
jle
outsl
sbb
movsb
ror
je
mov
fstps
add
mov
xlat
gs
mov
loope
or
sbb
scas
mov
inc
hlt
xchg
ret
pop
stos
in
jmp
test
adc
xchg
ret
scas
decl
les
std
or
es
inc
out
imul
addr16
jno
pop
mov
fbstp
ljmp
cmp
int
pop
mov
outsb
jmp
sub
jb
xor
sub
sub
popa
mov
xchg
int
in
xor
sub
fwait
sbb
sub
mov
ljmp
mov
adc
imul
pop
sub
mov
cli
int3
pop
xchg
and
les
sbb
fadd
stc
aaa
jp
iret
adc
nop
in
mov
adc
add
pop
movsl
cmc
jnp
push
sbb
xchg
push
inc
leave
hlt
adc
rcrb
sub
sti
adc
adc
out
test
hlt
xchg
lods
into
and
pop
mov
jae
inc
xchg
mov
jmp
and
aam
inc
dec
pop
and
cmp
flds
jbe
jne
xchg
pop
data16
in
sub
and
into
cmpsl
std
arpl
or
cmp
aaa
and
pop
lock
leave
syscall
adc
push
roll
or
clc
stc
sti
sub
fs
enter
in
and
cmpsb
enter
ljmp
movsb
add
jbe
shll
jle
cmpb
adcl
mov
fxch
in
lcall
call
bound
push
pop
add
les
popf
ss
xlat
scas
mov
jmp
and
lods
insl
fs
or
jo
test
inc
cwtl
push
imul
in
call
jno
adc
sbb
daa
in
ror
dec
sahf
xchg
jno
insl
in
out
lds
mov
and
sbb
insb
mov
cmc
and
sbb
mov
dec
sub
cmp
rorl
mov
push
enter
and
ljmp
iret
sahf
inc
nop
lret
push
sbb
adc
dec
xor
xlat
xchg
insb
pop
inc
jno
push
pop
fisubrl
ret
jo
add
out
movsl
push
or
loop
push
jmp
inc
jecxz
cmp
shrl
sub
mov
adc
and
pop
in
or
in
push
stc
int3
shrl
aam
lahf
or
inc
inc
push
sbb
rol
push
lahf
and
aas
bound
mov
xchg
cltd
bound
inc
xchg
mull
xorb
jo
rcl
adc
stos
cmp
cmp
rcrl
mov
xor
dec
mov
lds
jmp
pop
icebp
ss
movsl
lcall
jno
clc
movsb
add
or
or
lret
test
and
mov
xchg
stc
aad
xchg
add
out
sub
das
jnp
pop
lock
shl
and
lahf
jecxz
and
and
outsl
int3
imul
cmpb
xchg
jne
mov
jl
and
jae
xor
and
push
cmp
adc
aas
add
bound
ljmp
xchg
xchg
arpl
and
mov
out
enter
mov
stc
add
mov
pusha
jg
jmp
inc
mov
pop
dec
and
pusha
adc
test
scas
test
mov
je
xchg
fcomps
jle
mov
mov
cwtl
addr16
shrb
lods
insl
stos
inc
aad
jae
push
xchg
push
pop
cli
mull
push
ret
inc
in
fmuls
les
fldenv
mov
lret
or
adc
in
mov
aas
inc
and
mov
adc
sahf
fwait
xor
movzwl
jl
fs
mov
cli
jmp
frstor
fwait
sti
lret
ljmp
inc
test
or
cli
sbb
pop
orl
out
into
ret
dec
sbb
push
sti
mulb
jne
lahf
je
mov
das
cmp
ljmp
data16
or
push
mov
fs
mov
and
je
aad
inc
dec
xchg
lret
gs
aad
dec
leave
or
je
mov
je
cmp
sbb
mov
sarb
in
jecxz
test
sub
xchg
sti
mov
aam
xchg
push
jmp
stos
push
inc
mov
sbb
pop
outsb
cmp
push
xor
lock
insl
inc
adc
insb
movsl
inc
add
loopne
mov
popa
jnp
into
jmp
rolb
arpl
dec
movsl
jecxz
ja
leave
aam
scas
ja
rcr
iret
sub
or
sub
or
dec
pop
ds
xor
int
sbb
mov
push
push
roll
adc
repz
outsb
pop
and
pop
popa
int
sub
push
sub
hlt
push
jno
mov
push
in
out
jecxz
cmp
or
inc
fcmovnbe
addr16
mov
add
jbe
adc
dec
push
add
dec
jle
inc
ds
leave
andl
sbbl
lods
hlt
stos
adc
adc
xchg
decb
adc
shll
jg
lods
hlt
movsb
sahf
imul
xchg
or
and
fdivl
stos
lret
iret
test
push
out
pusha
icebp
jge
dec
test
nop
mov
ds
mov
adc
dec
xchg
dec
fadd
js
scas
int3
lock
mull
inc
push
lods
movl
dec
call
gs
push
les
mov
cmp
mov
sti
dec
xchg
push
aas
add
je
mov
movsb
in
sarl
popf
roll
add
jge
nop
cltd
mov
sub
dec
jno
movsl
js
std
push
ds
movsl
cmp
lahf
call
int3
pop
mov
nop
push
ret
test
popa
cli
mov
sarb
imul
push
push
mov
or
loop
imul
jmp
mov
lods
arpl
lods
movsl
xor
cltd
cmp
call
js
faddp
xchg
jmp
xchg
inc
xchg
imul
and
pop
and
scas
lret
fmuls
nop
pop
push
mov
roll
lahf
call
dec
repnz
fwait
inc
xor
aad
mov
inc
movb
sub
lret
sub
xor
and
mov
mov
sbb
icebp
enter
loopne
clc
jl
in
adc
andl
push
iret
lds
mov
xchg
dec
test
fcompl
mov
pushf
mov
pop
in
push
imull
pop
fwait
aam
sti
int3
xchg
mov
pop
mov
in
repz
cwtl
xchg
sub
cmp
outsl
imul
scas
cmc
push
xchg
xor
sti
lods
js
cs
mov
push
push
pop
mov
push
mov
sub
jmp
cmpsb
push
fs
lcall
jmp
inc
cld
stc
cmpsl
pop
add
cs
into
adc
ror
fidivs
jge
fwait
cmpb
jbe
mov
mov
mov
sub
mov
ja
add
sahf
mov
add
add
aaa
push
mov
lods
dec
pop
popf
mov
sub
addr16
test
pusha
mov
xchg
jno
dec
daa
jmp
jnp
cmp
insb
xor
frstor
mov
sbb
daa
mov
fwait
and
mov
fistl
xchg
mov
movswl
xor
adc
mov
scas
ret
mov
push
mov
and
in
mov
cmp
adc
mov
pop
push
xchg
out
push
jle
xchg
imul
sti
adc
mov
xor
jb
scas
inc
push
fs
clc
dec
xchg
in
lcall
dec
sub
push
jmp
pushf
int
xchg
jnp
sti
rolb
xchg
or
sti
imul
mov
xchg
xchg
ficoms
push
dec
cli
mov
pop
adc
sbb
adc
and
or
inc
push
jo
repnz
xchg
ret
sarb
mov
mov
imull
ret
mov
jo
movsl
outsb
lret
in
mov
cmp
clc
mov
ljmp
dec
or
or
jbe
xor
push
jmp
add
test
mov
sub
in
ja
cvtps2pi
in
notl
jmp
pop
rolb
int3
sbb
jne
or
orl
xchg
daa
cwtl
negl
mov
ss
pop
inc
cmpsb
lock
popa
sbb
cmpl
cs
cwtl
mov
lahf
insl
cli
gs
fistps
dec
mov
push
adc
aad
inc
stos
das
ret
int3
xchg
adc
rcrl
mov
xor
pop
in
push
dec
cmp
push
imul
pop
andl
or
pop
jmp
push
sub
jecxz
ss
or
cmp
les
nop
jg
cmp
xor
inc
add
lcall
clc
icebp
insb
fs
sbb
test
push
jecxz
pop
hlt
insl
jge
pop
sbb
jnp
stc
pop
jae
faddl
test
xor
jne
sub
aas
and
call
es
mov
repz
xor
test
inc
repz
inc
les
fcomp
iret
cmpb
sub
insb
add
test
mov
mov
mov
sbb
sbb
outsl
xorl
cmpsb
sbb
or
out
and
imul
xchg
adc
xor
sbb
adc
add
mov
xor
cltd
popf
rolb
clc
push
sbb
ljmp
sub
iret
mov
push
pop
in
pushf
sub
adc
aad
jmp
insb
cwtl
popa
arpl
mov
mov
int
mov
mov
int
mov
xchg
pusha
dec
fisttpl
push
stos
dec
imul
jl
lock
vpsrad
mov
pop
add
cmp
cmp
ret
hlt
inc
inc
nop
dec
add
imul
cwtl
sbb
push
fists
jmp
mov
js
push
cmp
int
loope
aaa
add
gs
sub
aas
shrb
lods
xor
sub
sbb
insb
cltd
cmp
test
shll
cmpl
inc
rcrb
mov
iret
jge
jnp
mov
xor
cmp
xor
push
push
loope
lret
mov
je
cmp
test
in
fistpl
push
jle
loopne
xor
jecxz
xchg
pop
roll
addb
int
lcall
add
lock
pop
sbb
jp
daa
outsl
fnstenv
hlt
xorb
sub
out
lret
dec
xchg
outsb
lds
xor
lods
lods
push
lcall
mov
mov
sbb
add
rcrl
mov
aad
lds
and
std
jns
sarb
div
js
aam
add
outsb
mov
sub
out
scas
sti
mov
mov
adc
inc
enter
mov
aam
inc
movsl
dec
push
scas
rolb
das
in
test
leave
adc
or
jecxz
lods
jnp
dec
shrl
pop
xchg
in
test
lds
push
and
mov
sub
inc
or
dec
sbb
cmp
or
scas
lret
ds
xchg
add
out
fwait
sbb
test
cmp
pop
push
icebp
jecxz
stc
mov
inc
pop
jae
mov
sarl
out
jmp
stos
loope
lcall
fisubrs
loop
jg
cmc
or
js
jg
mov
mov
lods
out
add
mov
cmc
mov
xchg
sahf
xor
jne
push
pop
repz
nop
adc
mov
fwait
std
push
pop
dec
jecxz
addb
mov
mov
add
or
insb
mov
ret
inc
jg
add
fwait
or
jbe
xchg
addl
lcall
add
stos
dec
in
imul
inc
push
popf
add
test
loop
decl
adc
mov
cs
lock
stc
sbb
js
jg
leave
inc
lcall
and
inc
nop
movsl
push
add
in
mov
lahf
adc
jg
adc
fcmovb
cli
xorl
inc
sub
and
nop
jnp
jecxz
add
in
loope
lds
das
in
xchg
adc
push
push
dec
stos
dec
repz
jecxz
or
mov
mov
sub
jp
mov
fwait
lods
pop
mov
cli
inc
outsl
adc
cmp
fnsave
lret
and
fdivrl
jp
fsubp
sti
push
pop
iret
jecxz
and
into
xchg
cltd
rorl
xchg
adc
mov
lock
push
ficomps
ror
loop
in
mov
cmp
fcmovnb
xchg
adc
pop
or
fs
push
cmp
pop
xchg
jmp
cwtl
cli
mov
out
push
icebp
lret
mov
outsb
or
in
lods
jecxz
pop
and
loopne
sti
addb
pop
mov
dec
push
mov
pusha
inc
dec
sub
dec
in
cmp
push
ret
repnz
sub
mov
aas
shlb
and
sbb
pop
mov
push
mov
push
rcrb
mov
dec
nop
pop
pusha
scas
jo
inc
mov
and
xor
add
adc
loopne
lock
push
mov
dec
nop
pop
pusha
scas
jo
inc
mov
and
xor
add
adc
loopne
jo
inc
push
rcrb
and
jle
dec
adc
scas
jo
inc
mov
and
xor
add
adc
loopne
lock
or
push
mov
dec
nop
sahf
pusha
scas
jo
ljmp
xorl
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
loopne
out
xlat
nop
test
inc
cmp
adc
jbe
push
and
cmpsl
shlb
out
divl
daa
inc
aaa
adc
mov
ja
inc
and
cmpsl
fnstenv
mov
cltd
imull
daa
dec
adc
bound
aas
and
inc
and
mov
aam
repnz
pop
jl
add
shrb
pop
mov
cld
add
mov
dec
cmpsl
lock
lock
jg
inc
dec
imul
clc
insl
add
lods
push
pop
mov
ja
push
and
stos
cmpl
push
daa
mov
call
lcall
mov
mov
xchg
negl
mov
enter
xchg
xchg
ja
xchg
jo
leave
push
xor
dec
test
insb
inc
sbb
fdivrs
pop
mov
das
fdivs
mov
test
jl
dec
mov
daa
mov
call
rolb
test
cmpsl
shlb
out
divl
daa
pop
aaa
push
sbb
inc
cmp
mov
movb
mov
inc
add
jl
xor
inc
xor
lret
rcr
iret
loop
in
out
mov
nop
in
push
inc
inc
inc
xor
add
inc
and
add
loop
out
call
mov
aaa
jo
pusha
pop
adc
ja
inc
and
cmpsl
shlb
out
divl
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
cmpsl
add
mov
nop
clc
xor
xor
mov
shrb
in
or
and
aad
mov
cmp
cmp
lahf
xor
enter
cltd
fsubr
cmp
mov
inc
outsl
pop
je
popf
inc
js
loopne
cmp
inc
pop
cltd
adc
or
xchg
rclb
xchg
adc
daa
adc
pop
repnz
imul
cld
cmp
xchg
jo
mov
dec
cmp
xchg
mov
fnsave
gs
push
test
out
call
jp
daa
jns
test
pop
int3
adc
fsub
fstpl
cmp
test
push
mov
and
dec
loopne
mov
repnz
cmp
scas
inc
mov
and
jge
sarb
pop
rorb
stos
add
push
ja
mov
js
sub
movsl
mov
adc
andl
repnz
or
adc
negl
movsl
lret
rorb
aaa
mov
xchg
dec
movsb
aad
xor
push
fstpt
pop
cmpsb
add
push
adc
add
jp
insb
fwait
shrb
in
dec
pop
push
push
ja
outsb
dec
pop
rcrl
push
repz
mov
xor
mov
int
adc
je
in
repz
cmpsl
out
lcall
loopne
mov
out
pusha
push
ds
add
add
cld
je
call
fnsave
add
repz
xchg
jg
or
mov
mov
add
mov
push
daa
inc
lods
sbb
inc
call
outsl
scas
cmp
cld
xchg
jns
jl
push
shl
pop
stc
push
push
push
pusha
call
jae
jnp
jmp
adc
jnp
mov
pop
iret
push
mov
push
sub
rcll
leave
pushf
pop
jecxz
icebp
dec
pusha
xor
mov
in
repz
or
movsb
add
loopne
repz
push
xchg
inc
test
inc
scas
push
mov
fs
lcall
adc
scas
jns
aam
imul
cmc
jmp
popa
xor
fnstcw
fs
dec
mov
pop
fwait
add
dec
pop
cmp
dec
cmpsb
jae
push
xchg
lock
shlb
stos
inc
push
jmp
mov
jge
rorl
mov
mov
sbb
stc
pop
add
adc
xor
push
adc
and
cwtl
or
aaa
mul
popf
out
test
xchg
das
cli
adc
out
push
jmp
jg
movsb
xor
xor
mov
dec
and
or
lea
ja
dec
mov
xor
pop
xorl
mov
addr16
pushf
xchg
imul
rorl
lods
dec
cmc
jecxz
movsl
cs
lods
mov
mov
mov
mov
dec
cmpsb
push
jp
test
cmc
push
aam
jo
push
adcl
mov
mov
mov
ljmp
cli
cmpsb
sbb
inc
xchg
push
dec
xor
lahf
add
rcl
pop
jae
cmp
loop
and
jns
in
int3
addr16
fwait
rcrb
push
mov
lds
inc
das
jp
pop
or
inc
add
fldl
or
in
rcr
dec
sub
ja
mov
pop
and
push
out
inc
sbb
pop
mov
decb
mov
mov
or
daa
fs
push
mov
sbb
jns
les
repnz
or
add
jnp
cltd
popl
pop
jns
lock
outsb
std
jns
push
xor
xchg
nop
fdivrs
cmp
ss
mov
stos
into
ljmp
mov
sbb
cs
test
ja
or
aaa
movsl
mov
push
push
pop
xorl
clc
inc
aas
cmpsl
testl
clc
push
mov
sti
xchg
or
or
out
inc
loope
out
sub
jns
xchg
ficoms
pop
pushf
push
sti
inc
aaa
cli
pop
cmpsl
out
add
mov
add
sbb
dec
repnz
xchg
adc
fistl
pop
sbb
lahf
inc
or
cmpsl
push
cmc
addb
push
out
rcll
cmpsb
addr16
cwtl
out
shr
out
push
lret
or
mov
ror
fisubrs
xor
sub
push
fwait
lahf
rcl
gs
push
outsl
test
out
ret
movsb
mov
mov
lcall
inc
xchg
jae
test
lcall
pop
mov
jae
rcr
adc
ds
icebp
push
aas
pusha
add
notb
xchg
leave
repz
sbb
add
sub
add
cmpsl
sbb
cmp
jb
stos
cltd
pop
int
push
dec
push
lret
leave
add
repz
or
add
mov
push
out
je
stc
popa
arpl
sarl
jle
jg
dec
lods
push
push
lret
lods
ficoms
push
gs
arpl
or
adc
movsb
inc
imul
in
mov
movsl
mov
xorl
sbb
fsts
fs
sbbb
add
and
or
test
ret
dec
add
mov
fcoml
rcrl
sub
out
sbbb
and
test
dec
shll
jno
test
loope
cmp
mov
filds
pop
cmp
add
mov
sub
and
sti
std
dec
mov
adc
sbb
jp
mov
les
xabort
mov
iret
ss
push
sub
mov
jle
sub
adc
jmp
aaa
cwtl
xchg
mov
in
je
inc
test
scas
push
cwtl
xor
aas
jb
mov
fdivrs
jmp
xorb
inc
popf
daa
in
mov
imul
adc
out
mov
enter
jmp
clc
inc
sub
aaa
sub
jae
aaa
add
mov
cmp
inc
xorl
push
xchg
jne
jge
add
inc
cmpb
sbb
shlb
cltd
sahf
or
pushf
push
shlb
mov
adc
push
xor
fimull
sbb
mov
es
in
mov
or
push
mov
in
xchg
test
daa
lds
cli
adc
sbb
jno
mov
sbb
sti
inc
movsb
loop
and
push
inc
xchg
jp
and
push
dec
shrl
mov
stos
pusha
aad
jecxz
sub
sub
push
inc
idiv
fwait
and
mov
sahf
and
lds
pusha
pop
push
mov
mov
inc
mov
stos
mov
sub
mov
lds
cltd
clc
insb
mov
repnz
jg
out
mov
idiv
out
scas
sub
mov
gs
inc
cmp
ret
xchg
lds
xchg
fcmovnu
hlt
mov
ss
xchg
call
and
clc
xor
or
sbb
loopne
pop
jno
adc
mov
cmp
jnp
cld
jo
inc
pop
call
addr16
sub
jae
imul
std
aad
mov
pop
popa
mov
add
cmp
push
scas
xor
mov
mov
lret
dec
fstps
push
dec
imull
out
sbb
push
outsb
sahf
dec
icebp
test
pop
jns
jecxz
adc
cmp
insl
mov
fisttpl
xchg
jno
insl
fwait
adc
and
sbb
mov
inc
mov
in
fs
ss
in
cld
hlt
cmp
in
mov
mov
inc
mov
push
mov
lret
ret
push
cmp
mov
push
mov
dec
pop
sub
jns
andl
in
cmp
push
xchg
xor
pop
jmp
adc
stc
pop
jle
iret
mov
test
in
int3
es
mov
pop
jnp
ret
mov
pusha
mov
xchg
mov
mov
jo
xorl
sub
ret
jp
sub
xchg
out
sahf
xor
pop
xchg
cmc
xor
outsl
cs
dec
lret
jmp
repnz
mov
scas
jno
and
rclb
in
insl
pushf
xchg
jns
aad
lock
je
xor
test
dec
mov
push
popf
sub
lcall
jno
movsb
aad
push
pushf
mov
popa
into
test
sub
insl
test
ljmp
insl
cmp
adc
sub
lret
dec
in
arpl
in
fbstp
cmp
lret
mov
cld
cmp
sbb
repz
cld
pop
out
shlb
in
cld
dec
dec
pop
pop
push
inc
and
xor
enter
cmc
push
xchg
jbe
movsb
dec
out
push
mov
mov
icebp
jecxz
pop
mov
xchg
aam
aaa
arpl
into
imul
xorb
leave
in
sbb
iret
dec
outsl
sbbb
mov
push
sub
pop
push
shlb
cld
jecxz
sbb
pushf
repz
and
outsl
adc
xor
dec
divb
mov
xchg
scas
or
xchg
test
adc
mov
adc
daa
ret
inc
pop
mov
mov
les
mov
popf
and
aam
test
das
xor
jb
cmp
cmp
shrb
jnp
xor
mov
pushf
dec
and
mov
int3
cmp
leave
add
xchg
or
mov
cwtl
loope
nop
mov
push
cmp
dec
push
mov
test
dec
ljmp
jmp
cwtl
loop
xchg
stos
imul
fnstsw
xchg
jbe
mov
lcall
shrl
out
xchg
mov
mov
jle
inc
pop
cmp
lret
inc
dec
clc
popl
sbbl
inc
push
push
into
les
inc
xchg
loope
ret
xchg
cltd
imul
imul
bnd
sti
test
aas
cli
addr16
jl
mov
rcrl
push
adc
pop
sbb
ja
xor
adc
dec
mov
mov
or
xchg
int3
fisttpl
in
jle
cmc
adc
xchg
mov
xchg
inc
insb
scas
scas
insb
push
mov
ret
fsubs
test
jb
xlat
in
push
imul
xor
and
cmp
cli
aaa
pusha
push
xchg
add
loopne
adc
sub
mov
jmp
pop
sbb
fs
xor
or
stos
loop
cmp
or
fdivl
cs
xchg
cwtl
jmp
mov
jo
sbb
addr16
out
lahf
pminsw
xor
aad
push
orb
inc
ret
jns
jmp
out
cli
divb
lds
pop
lcall
js
push
in
lahf
adc
imul
sbb
icebp
cmp
out
dec
sub
and
cli
adc
sbb
push
test
stc
shll
mov
cmc
lock
mov
out
and
cs
inc
mov
iret
adc
cmp
push
in
pusha
roll
inc
dec
xchg
repnz
inc
or
push
fildll
fwait
and
xor
imul
aad
imul
leave
std
test
imul
ficomps
jno
mov
push
xor
or
mov
and
dec
add
xchg
jmp
aad
and
movl
sti
std
add
rcrb
pop
bound
push
mov
das
leave
hlt
stos
jns
jp
inc
or
push
or
mov
jnp
inc
or
xlat
rorl
fnstsw
stos
lret
in
insl
xor
int
inc
inc
das
xchg
push
xchg
pop
lock
mov
mov
sbb
nop
dec
mov
enter
xchg
adcb
jne
test
push
mov
cmp
xchg
fs
enter
pop
mov
into
pop
inc
sbb
pop
cmp
inc
push
mov
jnp
rcrl
popf
pop
ljmp
enter
dec
mov
push
mov
jnp
cmp
out
add
mov
int
int3
mov
insl
test
mov
je
insb
in
dec
leave
test
pop
push
or
loope
ror
mov
add
cmp
repz
adc
in
stos
stos
stc
loopne
scas
addr16
xchg
sub
in
xchg
movsb
jmp
andl
sub
or
xchg
das
clc
imul
push
rcrb
inc
test
jo
xchg
mov
push
jbe
outsb
js
das
xorl
xchg
movsb
leave
lcall
sbb
imul
fwait
cs
dec
cmp
roll
shlb
aam
repz
cmpsb
movsl
mov
cmp
jle
dec
out
and
cmp
mov
mov
xor
add
sbb
jp
pop
jno
push
jg
push
pop
int3
jne
adc
and
xchg
aaa
popf
cmpsl
call
rcrb
fnstsw
and
int3
dec
imul
out
push
loop
fidivrl
mov
mov
add
or
mov
fcoms
inc
mov
dec
pusha
ss
cmp
mov
fwait
ret
ss
add
or
push
sub
nop
pusha
out
jnp
loop
adcl
les
inc
das
adc
mov
sbb
sub
loop
sub
inc
cmc
add
std
out
addb
fldcw
push
bound
loopne
inc
mov
cltd
dec
cmpsb
cmpsb
cmp
jg
mov
mov
fbld
xor
dec
or
mov
mov
adc
xchg
fidivs
inc
sbb
fbld
pop
in
dec
ret
aas
mov
call
adc
mov
cltd
test
inc
mov
enter
mov
sub
mov
sub
lods
jno
pop
shll
bound
push
sbb
mov
js
bound
popa
lcall
and
mov
cld
sbb
dec
and
pop
xchg
xchg
mov
call
mov
push
imull
fcoms
les
and
adc
xchg
xor
dec
mov
nop
std
cmp
pop
pop
out
cwtl
xchg
mov
sbb
and
lret
xor
insb
fsubrl
mov
lret
lds
clc
mov
dec
cmp
jp
adc
outsl
in
mov
fbstp
adcl
mov
mov
mov
sahf
mov
jb
sarl
movsb
je
insl
pop
test
jnp
and
mov
push
popf
fsubl
mov
not
cwtl
arpl
lods
sarl
divb
push
fbstp
aad
sbb
scas
adc
mov
nop
mov
incb
bnd
outsl
clc
lret
pop
daa
test
mov
lea
leave
dec
in
jbe
push
sub
add
cs
or
fimuls
push
imul
sti
repz
clc
push
bnd
xchg
xchg
pushf
mov
lods
sahf
adc
fwait
aad
mov
fwait
jnp
or
inc
xchg
cs
sub
jge
jno
scas
pop
sarl
pop
imul
daa
dec
enter
inc
cmc
dec
sbb
inc
push
sti
cmp
movsb
lods
or
icebp
pop
movsl
cwtl
push
in
pop
call
push
lea
lcall
jl
popl
scas
mov
ss
lcall
pop
push
popf
into
inc
bound
adc
xchg
test
pop
jg
dec
ja
mov
xor
fldl
hlt
pop
enter
addr16
or
insb
xchg
push
cmpsl
cmpsb
imul
and
int
mov
pop
inc
and
mov
mov
repnz
nop
movsl
movsl
outsl
xchg
xchg
testb
adc
sub
jmp
jmp
mov
add
scas
idiv
arpl
add
sub
dec
add
fs
jmp
push
mov
xor
mov
lret
call
loopne
out
icebp
add
sub
sub
imul
jmp
cmpl
lock
nop
js
imul
and
in
sbb
dec
cmc
lods
push
stc
hlt
jge
adc
out
inc
and
pop
fsub
sub
xchg
push
or
pushf
xchg
xor
out
jno
pop
mov
les
sbb
sbb
stos
shll
cltd
fmull
mov
pop
adc
shrl
inc
jb
insl
jb
push
testb
xor
dec
insb
test
divss
les
xlat
je
cmc
shrl
sbb
pushf
rolb
pop
daa
test
jnp
gs
mov
popf
aaa
js
pop
incl
inc
mov
mov
push
pop
cltd
fsubrs
div
add
and
lcall
jne
pop
xchg
mov
ret
shr
cwtl
cmp
ret
mov
xchg
xor
jbe
cmc
inc
push
js
cld
and
cltd
filds
xchg
aad
mov
int3
test
incb
inc
pop
mov
push
rolb
push
or
add
add
mov
sub
ficomps
cmpsl
mov
mov
inc
gs
out
jae
lcall
es
cmp
test
lret
fcmovu
cmpsl
sub
and
push
arpl
adc
lods
insl
ja
mov
mov
loopne
push
std
inc
cmp
jae
mov
lss
pop
add
testl
inc
pop
insl
call
jge
mov
cmp
scas
scas
mov
or
and
call
inc
inc
js
mov
sub
dec
mov
out
add
cwtl
xchg
cmpsl
add
fcmovne
ljmp
cwtl
lods
xchg
add
stos
adc
bound
stos
out
incl
jg
or
fcompl
xor
mov
mov
pop
xorl
shrl
dec
inc
lret
lret
xchg
inc
clc
push
movsb
xchg
iret
imul
fimull
mov
push
add
jns
pop
xchg
pminsw
insl
test
sbb
mov
shrb
push
push
scas
cmp
inc
fsub
dec
lret
loop
push
push
cmpb
nop
or
inc
fisubrs
push
pop
pop
mov
xor
adc
je
adcb
pop
mov
ds
repz
push
mov
std
or
cmp
mov
jnp
mov
sub
adc
stc
mov
in
dec
push
sub
vmread
fstpl
in
adc
pop
or
jmp
dec
dec
dec
test
outsb
jle
sahf
aas
mov
jae
das
xchg
xchg
ret
adc
add
fnstsw
mov
xor
ja
adc
in
mov
lea
adc
pop
adc
push
fwait
test
push
sub
sar
mov
mov
mov
xor
and
mov
dec
sbb
ret
xchg
push
dec
jl
sub
lock
shrl
sahf
mov
mov
push
mov
inc
xchg
and
scas
aad
jmp
dec
add
adc
sbb
gs
jl
mov
subb
stos
in
ljmp
fsubs
adc
loope
and
xor
xlat
jmp
sub
xor
cltd
cwtl
loope
cmp
sub
lcall
enter
push
scas
push
test
test
mov
iret
lock
cmp
lret
lods
rorb
adc
cmpsb
out
cmp
adc
imul
aaa
fcmovnbe
jecxz
test
xchg
adc
insl
in
decl
out
pushf
sub
ja
xor
mov
flds
pop
xor
hlt
jge
xor
out
ret
lahf
es
loope
mov
mov
es
jp
lahf
in
xchg
pop
roll
shl
icebp
xor
out
add
aas
cmpb
inc
sar
out
mov
fdivs
lret
out
pop
jl
or
mov
push
xchg
cwtl
aas
xchg
jl
jp
or
out
jae
fs
pop
movsb
xor
and
mov
cmp
mov
roll
pop
icebp
push
xor
jecxz
xchg
sbb
orb
cmp
mov
loopne
scas
mov
int
out
add
or
movl
add
popa
sub
xor
adc
jnp
mov
or
in
int
push
ds
pop
cmpb
hlt
cld
jnp
enter
out
mov
jle
jl
pop
xchg
jnp
or
icebp
out
mov
jg
cltd
int
test
orb
mov
insb
sbb
test
out
cmp
jnp
rcll
lret
movsb
clc
lcall
mov
push
push
nop
jle
mov
insb
repnz
push
add
iret
loopne
pop
ret
mov
ret
aad
sti
xor
pushf
xor
std
add
add
call
fcom
push
mov
push
scas
mov
fdivl
cmp
imul
mov
pop
sub
push
icebp
mov
in
shr
adc
push
fstl
icebp
mov
and
lds
mov
xchg
xchg
nop
out
divl
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
cmpsl
shlb
out
divl
daa
inc
aaa
jo
pusha
pop
adc
ja
inc
and
cmpsl
shlb
out
divl
daa
inc
aaa
je
pusha
pop
adc
ja
inc
adc
cmpsl
hlt
mov
xchg
xchg
nop
out
divl
and
scas
daa
mov
pusha
addr16
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jae
arpl
push
cmp
cmp
pop
imul
jecxz
sarl
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
jecxz
cmpsl
mov
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
jecxz
mov
sahf
shlb
arpl
xor
pushf
and
xor
nop
cmp
inc
push
repz
sub
dec
fisttps
sbb
cmpsl
mov
jge
sub
mov
mov
xchg
stos
jge
mov
sbb
xor
xrelease
test
or
add
bound
push
bound
xor
dec
in
hlt
imul
in
dec
mov
xor
add
mov
pop
hlt
cmp
sub
outsb
add
jecxz
pop
fadd
inc
dec
imul
mov
data16
mov
in
push
mov
sub
mov
ljmp
inc
sub
pop
and
jnp
imul
jecxz
sarl
mov
xorb
es
pop
aaa
push
jbe
inc
cmp
shrl
mov
jo
adc
add
es
jne
dec
das
adc
imul
xchg
mov
cmpl
push
inc
dec
xor
dec
adc
imul
jecxz
sarl
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
jecxz
sarl
mov
jmp
sbb
inc
call
xchg
imull
jns
aad
and
into
push
lea
rcrb
sti
jae
or
test
push
jb
imul
decl
and
scas
xor
in
xor
mov
and
xchg
inc
cmpsl
and
mov
xor
pop
pop
push
xor
add
iret
jmp
inc
icebp
cs
stc
in
jnp
mov
jg
aad
hlt
movsl
daa
and
jl
ss
jle
fnstcw
mov
das
inc
pop
icebp
repz
dec
jmp
fnstsw
hlt
xchg
mov
xlat
repz
inc
cmp
leave
jmp
pop
mov
insb
push
mov
dec
and
nop
movsb
cmp
minps
push
outsb
outsl
push
test
mov
subb
mov
mov
shrl
inc
mov
movb
pop
int
fistps
push
xor
stos
stos
mov
mov
ljmp
jnp
lods
movsb
cmpsb
and
pop
cld
add
xor
fs
cmpsl
lock
rol
add
fsub
xor
bound
insb
xchg
out
insb
mov
add
arpl
xor
jl
ret
test
add
push
mov
icebp
push
or
rorl
jp
sub
outsl
test
pop
movsb
push
sar
xchg
cld
cmp
cld
add
cmpsl
fs
fidivrl
ds
or
loopne
movsb
lret
sub
movsb
scas
stos
push
xlat
jne
mov
aam
int3
mov
xchg
lds
dec
mov
insl
ret
or
inc
dec
idivb
jae
push
xchg
imul
arpl
stc
pop
push
clc
shrl
add
icebp
in
mov
mov
and
cmp
fists
inc
push
and
pop
pusha
adcb
outsb
shl
dec
adc
xchg
xchg
mov
or
lret
icebp
sbb
mov
xorl
jge
inc
mov
ss
fidivs
cmp
lret
xchg
imul
ret
and
pushf
push
cmp
xorb
push
dec
or
sub
roll
add
xchg
cmpsl
push
push
out
js
xor
dec
jg
in
sbb
and
out
add
movsl
mov
pop
dec
lods
iret
and
clc
push
push
sahf
add
cli
and
xchg
nop
les
dec
and
out
and
cmp
cmpsl
xchg
pop
lcall
sbb
icebp
fucomip
xor
mov
stos
add
dec
xchg
push
push
lcall
and
sub
push
pop
pushf
scas
mov
mov
lods
rcrb
sbbb
dec
dec
inc
jle
add
repnz
pop
xchg
pusha
or
clc
test
incl
pop
stc
cmp
aad
aam
adcl
cmp
popa
sub
lds
aad
lcall
cmp
inc
or
mov
sbb
cmp
add
adc
movsl
test
loopne
sub
sbb
inc
icebp
inc
sbb
cmp
dec
jno
aam
mov
mov
push
xchg
jae
and
mov
test
stos
shlb
movsl
mov
test
inc
xchg
andl
lock
mov
repnz
mov
sti
mov
push
fidivrl
jns
xchg
cltd
xor
push
test
sbb
scas
pop
inc
les
int
icebp
inc
mov
mov
and
xor
out
xor
sarb
pop
lahf
sub
into
out
mov
or
arpl
out
xchg
test
jg
jns
inc
adc
sbb
sbbl
fisubl
xchg
mov
adcl
xor
sbb
rcrb
sbbb
sbb
dec
mov
sub
sub
adc
out
aas
lods
dec
pop
cmc
sahf
lea
cmp
insl
and
out
fstpl
pusha
cmp
and
je
cwtl
mov
pop
out
sub
push
fmul
fimull
push
fisubrs
adc
cmc
inc
lret
or
mov
mov
les
out
xchg
sbb
xchg
dec
ljmp
add
jecxz
jb
pop
shll
ljmp
shld
hlt
xor
xor
daa
push
loopne
lock
pusha
inc
out
leave
stc
imul
dec
in
ja
dec
inc
mov
pushf
ficompl
ret
inc
addr16
lock
fs
or
lret
xchg
add
sti
out
lea
lea
jg
fwait
es
xor
sbb
or
jle
sub
lea
mov
mov
cmp
mov
pop
sub
sbb
inc
mov
sub
push
imul
xor
mov
mov
ret
pop
cmpsl
mov
inc
dec
fnstenv
adc
es
out
mov
jmp
adc
jns
mov
sub
sub
aaa
adc
cli
rcrb
mov
adc
mov
jno
repnz
pop
in
jecxz
das
std
mov
add
mov
push
push
mov
scas
lret
sbb
cmp
in
movb
cli
adcb
adc
xchg
in
das
scas
and
and
loope
pushf
xor
dec
mov
stc
outsl
inc
movsb
loopne
mov
ret
test
jl
loope
xor
mov
and
jae
cli
push
jns
jge
pop
test
fs
scas
jmp
xchg
data16
inc
and
test
and
loopne
push
imul
and
test
inc
xor
xor
cmp
dec
jno
aaa
aad
sub
loope
push
aas
xchg
scas
repz
mov
inc
cmp
popf
mov
jno
and
pop
xor
xchg
push
ja
or
mov
mov
mov
fsubr
pop
jl
lods
mov
repz
enter
sub
hlt
add
std
mov
xchg
and
lret
shrl
xchg
fistps
pop
sub
mov
mov
inc
mov
xor
in
and
and
mov
mov
xchg
sub
dec
push
leave
mov
mov
test
push
fwait
pop
mov
mov
dec
mov
or
hlt
sbb
mov
jle
daa
push
inc
xor
mov
dec
lahf
arpl
xor
stc
fs
add
rcrl
mov
sub
xlat
stos
pop
pop
dec
inc
adc
lahf
mov
dec
add
andb
test
or
inc
mov
ds
jmp
push
xchg
pop
fisubrs
nop
rcrl
xchg
rorb
mov
jle
lcall
cmpsb
aaa
movl
jns
pop
dec
loope
jnp
je
in
cmp
roll
mov
push
call
cmp
push
daa
pop
mov
pop
jnp
loope
je
inc
imul
cmpsl
dec
add
fiadds
sub
push
dec
push
imulb
outsl
add
push
imul
mov
cmpsb
dec
inc
subl
out
outsl
dec
ret
loope
addr16
sub
iret
rclb
cmc
js
daa
push
inc
pop
inc
jl
fisubrs
and
test
adc
int
inc
pop
jp
mov
xor
test
xchg
sbb
xchg
addb
inc
mov
enter
push
pop
icebp
fistl
cwtl
stc
sub
ret
pop
repz
mov
dec
mov
clc
mov
mov
mov
or
jg
push
arpl
mov
je
andb
push
mov
sarl
and
aam
pop
test
mov
mov
fs
in
mov
pop
cmpsb
push
xor
outsb
ret
jecxz
sti
cmc
popa
roll
push
dec
push
js
cmp
enter
es
outsl
sti
xchg
es
cmp
lea
sub
andb
dec
cmpsl
outsl
shlb
sti
sbb
call
roll
mov
or
fisubrs
int
push
cmp
push
jno
jmp
push
ja
dec
outsb
out
insl
jmp
pop
cmp
retw
cwtl
cmp
sub
sbb
lcall
pusha
lret
mov
xor
into
dec
mov
fldcw
mov
test
arpl
je
xor
mov
fcoml
aam
cli
fimuls
and
leave
mov
push
sti
push
jne
xor
dec
adc
xor
aad
lock
and
xor
popf
inc
sub
jo
pop
into
insb
fnsave
les
or
sbb
sub
xchg
pushf
dec
lods
pop
notl
or
test
push
jns
adc
daa
hlt
mov
notb
lret
dec
sub
mov
fwait
mov
jge
or
int
sub
pop
push
mov
push
and
ret
mov
xor
iret
imul
xchg
jne
stos
je
cmp
jbe
cmp
pop
addr16
das
mov
sti
mov
addb
dec
and
adcb
xchg
ja
mov
fisubs
mov
cwtl
pop
pop
jo
stos
aam
xor
int3
je
ret
scas
push
mov
fcmovne
movsb
mov
repnz
and
movsl
add
push
push
fists
sub
sbb
inc
mov
jno
popf
dec
pop
lret
gs
push
ja
cmp
lods
mov
mov
mov
pop
xor
xor
cmp
and
daa
and
shlb
pushf
inc
sbb
in
bound
jp
rep
jbe
stos
fnstcw
add
and
inc
xor
jmp
sbb
das
sub
sti
jp
jne
xor
pop
das
jmp
stos
pop
or
cmp
int3
das
lock
pop
adc
sbb
dec
push
and
pop
or
jns
cwtl
lret
jno
xchg
aam
mov
xchg
fcomps
sahf
push
std
push
rcrl
sub
xor
shl
mov
jmp
repnz
aam
push
xor
push
inc
xor
mov
imul
push
ja
popa
nop
ficompl
ja
testl
adc
stc
pusha
mov
adc
or
jae
push
insl
aad
lods
jle
lcall
in
inc
pop
roll
ret
sarb
aaa
pop
clc
mov
hlt
inc
mov
int
adc
and
mov
out
enter
cwtl
cs
adc
fdivrs
xor
pop
jg
outsl
mov
out
dec
push
add
pop
xor
in
pop
jo
jge
lods
out
inc
jmp
xchg
jl
int
shlb
pushf
pushf
jo
pushf
mov
xchg
pop
testb
or
inc
xchg
dec
out
mov
ret
lods
test
push
mov
xor
dec
sbb
sbb
and
and
andb
cwtl
or
aam
add
movsb
inc
dec
xchg
in
mov
jae
je
cmp
xchg
mov
jle
sahf
fs
notb
push
fmul
sbb
fwait
dec
test
movsb
xor
dec
mov
cwtl
fnstcw
push
sub
inc
lods
js
je
test
fcoml
outsb
add
push
dec
inc
xor
xchg
repz
ja
in
fisttps
es
or
sub
mov
push
adc
shr
int
adc
or
jns
sub
sbb
les
shrl
dec
sarl
push
test
and
mov
mov
mov
push
push
lcall
jno,pt
jmp
fsubs
push
loope
mov
mov
jae
jb
pop
in
cli
xor
repz
or
rcrl
pop
push
cmc
or
xchg
jmp
lcall
inc
call
or
cmp
xor
aad
outsl
cmp
add
xlat
fcomp
push
std
and
pop
fisubs
jne
sub
test
push
inc
jle
fstps
lds
pushf
dec
xor
mov
push
mov
repz
das
fldcw
aas
inc
xchg
push
push
inc
sub
jne
int
psubsw
dec
mov
loopne
xlat
pushf
cmc
stc
sub
adc
jmp
adc
pop
enter
insb
stos
push
cmpsb
popa
sbb
inc
loope
addr16
sbb
mov
or
mov
imul
into
cld
pop
cmp
stos
stos
sarl
or
lret
pop
cmp
movsb
fwait
imul
test
push
in
loopne
jae
stc
das
shll
sbb
cltd
jns
lock
insl
mov
test
or
sahf
mov
scas
repz
inc
dec
sub
mov
movntps
rolb
pop
push
xlat
popa
fs
lret
hlt
mov
add
pusha
shll
out
testl
sti
fs
push
fimull
sub
pop
ja
add
xchg
imul
xor
adc
inc
mov
sahf
and
hlt
pop
movsl
mov
xchg
stc
mov
sub
inc
test
push
ja
cmp
fmull
jb
popa
outsb
jno
sbbb
mov
pop
dec
std
xchg
add
gs
inc
ret
pop
lods
imul
xchg
lods
adc
dec
addr16
xchg
inc
and
mov
int
adc
stc
subb
pop
push
adc
test
cmp
sarb
pop
out
out
lods
jmp
jecxz
push
push
movsl
mov
adc
cmp
push
insl
inc
cmp
mov
into
cs
jl
in
shlb
add
or
cmp
adc
dec
push
xchg
std
xorl
pushw
jl
push
xchg
les
lcall
iret
std
jnp
ljmp
mov
push
xor
div
aas
in
aas
inc
mov
mov
fsubrl
xchg
shll
xor
dec
mov
js
add
popa
sarl
cli
int
and
js
cmpl
and
sub
loop
stc
pusha
sbb
in
arpl
or
add
adc
outsl
sahf
sub
xchg
sub
mov
inc
cmpsl
ds
sub
or
inc
xorb
jg
and
dec
insb
rclb
adc
mov
mov
jmp
lahf
repz
sub
popf
ja
repz
mov
sub
roll
xchg
jmp
mov
mov
inc
xchg
shr
add
xor
xchg
dec
gs
inc
push
inc
ret
xor
sbb
popf
out
hlt
lea
push
insb
call
push
pop
das
fwait
or
clc
sub
fs
lods
lods
adc
fcomip
ljmp
add
into
test
push
mov
xchg
push
jae
jbe
test
push
jbe
mov
sub
je
fsub
and
cmc
push
cmp
mov
sub
fcompl
and
pop
test
inc
fdivs
scas
cld
aaa
add
push
sbb
inc
jl
mov
xchg
hlt
jl
or
dec
rcrb
cs
mov
mov
mov
test
xor
add
stos
in
stc
js
fxsave
cmpsl
cmc
push
jle
cld
shll
mov
fidivrs
mov
sti
inc
inc
mulb
sub
js
xor
mov
addr16
test
out
ret
push
in
pop
imul
add
fwait
dec
shrb
push
adc
sbb
xchg
test
test
dec
in
pop
or
pop
sub
popa
push
in
jg
insb
ret
std
ret
in
loopne
shrb
jb
pop
cmp
scas
cwtl
clc
pop
push
cmc
sahf
add
jbe
lcall
xor
das
lods
iret
sub
into
popa
push
pop
cmp
scas
testl
test
pop
jp
mov
jns
xor
fcom
adc
test
out
mov
out
lock
adc
push
out
cmp
push
test
leave
out
pop
clc
dec
gs
pop
loop
mov
in
stos
sub
sub
pop
fs
xchg
xor
jns
cmp
or
cmp
xor
push
ds
fwait
cmpb
insb
repz
sbb
scas
outsb
xor
arpl
ljmp
mov
jge
sbb
lahf
je
jge
sbb
cld
sub
adc
imulb
ret
iret
jl
and
sbb
push
dec
fistpll
je
jg
arpl
jmp
inc
add
sarl
shll
out
mov
shll
pop
arpl
xor
shrb
out
inc
xchg
lahf
mov
inc
out
sbbb
mov
arpl
mov
mov
ret
inc
adc
adc
rorb
push
fidivrs
sbbb
push
xor
push
jecxz
lcall
and
pop
stos
ret
or
push
test
fldenv
and
xor
mov
ja
mov
xlat
push
scas
andb
imul
pop
ljmp
mov
adc
mov
lods
clc
andb
test
decl
fisubl
sarb
adc
adc
andb
lods
push
cwtl
sbb
sti
xchg
xlat
leave
in
push
mov
imul
xchg
andl
jge
mov
cmp
dec
xlat
pushf
sbb
cmp
xchg
xor
in
jo
sbb
outsl
cmp
pop
into
lret
sti
ds
outsb
xor
sbb
sti
mov
pop
xchg
xor
jbe
icebp
adc
dec
inc
jl
popa
mov
fsubp
xor
xchg
jo
mov
mov
lods
das
xchg
std
ss
test
into
int3
adc
sub
xor
jge
dec
xchg
pop
inc
mov
cmpsl
loope
bound
icebp
mov
push
add
push
mov
jne
imul
mov
int3
cmp
xor
adc
fldcw
sti
mov
jmp
addr16
cmp
mov
jns
fadds
mov
add
scas
enter
lea
cmpb
push
sub
sbb
jg
and
pop
andl
xchg
testb
imul
xchg
sahf
mov
sbb
sub
mov
xlat
add
inc
roll
insl
negl
sub
mov
push
popa
das
sub
adc
adc
cmp
dec
call
lods
mulb
jae
jne
jmp
add
ljmp
mov
fdivs
and
mov
or
jmp
dec
stc
clc
dec
push
dec
iret
imul
push
cmpsl
cmp
loop
movsb
cmp
or
jmp
testl
push
rcrb
ret
sub
iret
shrb
loopne
mov
mov
push
mov
sbb
sub
lret
out
mov
xor
push
fisubrl
push
inc
mov
sahf
mov
inc
pop
sti
push
sub
mov
stc
jae
fstpt
out
scas
sub
shl
test
scas
les
mov
in
push
stos
pop
xor
repz
js
cmp
cmp
fdivl
faddl
pop
jmp
lcall
mov
cmp
jb
out
movsb
sub
fwait
inc
inc
sub
in
mov
add
or
popf
cli
xor
leave
add
mov
cwtl
xor
loopne
push
int3
js
out
rcr
call
sub
jns
sbb
fsts
mov
adc
xor
iret
lret
jge
push
sti
xchg
cltd
jno
cld
rcrl
lods
mov
lock
lods
call
pop
es
jl
add
add
ret
scas
lret
mov
fcomps
aas
mov
xchg
adcb
mov
pusha
sub
cmp
in
pop
ret
faddl
stc
xchg
mov
add
sbb
mov
xchg
arpl
cmp
push
arpl
mov
andb
addr16
dec
fdivr
lea
mov
mov
aas
xor
and
jp
jg
mov
pop
jns
loop
jnp
mov
out
pushf
lds
lcall
shrb
sti
dec
xor
pop
adc
sub
mov
mov
das
fwait
push
xlat
inc
out
sub
loopne
inc
mov
cmpb
push
adc
mov
inc
dec
insl
aaa
outsl
adc
sbbl
and
xor
jnp,pt
mov
dec
sbb
insb
call
dec
mov
movsl
stc
mov
fwait
popf
mov
add
test
sub
loope
jno
cmp
lahf
add
push
sub
cmp
rcll
bound
fst
fcmovnb
adc
add
adc
pop
push
into
out
stos
icebp
jo
push
in
roll
jbe
xor
jp
in
push
repz
add
imul
int
mov
cmp
xor
dec
adc
imul
jecxz
sarl
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
jecxz
sarl
mov
jmp
sbb
push
mov
and
adc
imul
jecxz
sarl
mov
jmp
sbb
push
cmp
xor
dec
adc
imul
jecxz
jns
ret
fadd
push
sub
add
adc
rcrl
sbbl
decl
btr
arpl
jae
add
pop
and
jg
rcrl
or
fbld
rcpps
add
jae
inc
dec
adc
outsl
xor
and
popf
iret
repz
xor
or
aas
push
or
lods
lahf
jmp
lret
lcall
in
cwtl
sbb
adc
cmp
push
daa
in
mov
xchg
fbld
jbe
lods
aaa
adc
jecxz,pn
divl
das
ds
dec
aam
outsl
int3
cmpl
in
dec
cwtl
rclb
cmpb
push
loope
sub
adc
insb
jmp
movd
jo
sahf
push
scas
pop
stos
jl
xchg
iret
pop
push
mov
inc
cmp
or
rorl
mov
xor
adc
arpl
jns
inc
jg
sbb
sub
cmp
arpl
ss
xchg
sbb
outsb
aas
das
cmp
dec
loopw
or
fcompl
jp
lock
push
ljmp
stos
and
jg
popl
mov
mov
bswap
pop
adc
dec
sbb
outsl
xor
stos
loop
dec
xchg
jmp
std
sahf
xlat
mov
jbe
inc
push
push
jno
jge
dec
in
push
sbb
scas
xchg
call
push
and
and
add
jns
push
jp
jl
dec
sbb
scas
fistpll
lret
shlb
mov
inc
rcpps
arpl
jae
add
pop
and
jg
rcrl
or
fbld
rcpps
arpl
jae
add
pop
and
jg
jne
and
outsb
dec
or
int
adc
add
sahf
popa
testl
movsb
popl
leave
xchg
fcmovu
adc
sbb
add
dec
clc
dec
cmpsl
sub
cmpsl
sub
lcall
jecxz
cwtl
lret
xor
or
icebp
test
cmpsb
mov
ret
xor
sarb
or
sbb
in
xchg
add
mov
xor
arpl
jbe
add
lea
cmp
jae
inc
jb
add
aad
dec
cli
notb
ja
xchg
incb
jno
pop
inc
loope
pusha
int
inc
leave
rolb
ret
sahf
sahf
mov
xchg
lcall
lock
ds
hlt
out
popf
decb
or
nop
mov
adc
cmp
lods
jae
jg
hlt
mov
pushf
jae
sub
enter
lds
xor
jle
fdiv
nop
dec
sub
push
push
test
ss
push
jb
scas
xor
shlb
cmp
cmp
setbe
cmc
in
daa
xchg
push
rolb
out
mov
xor
sub
jne
jae
mul
outsl
jae
pusha
out
and
es
fmuls
popa
mov
popl
insb
pop
pop
inc
cltd
xchg
sahf
push
cmp
sahf
shrl
or
adc
push
and
cwtl
and
fldl
das
sub
sub
and
cmpsb
or
sub
dec
add
dec
imul
mov
add
stc
sub
mov
inc
cmp
pop
ss
sti
sahf
lcall
bnd
xlat
data16
outsb
add
xchg
cwtl
lea
sbb
rcl
dec
mov
mov
jns
data16
pusha
jmp
inc
cmp
xchg
push
inc
pop
movsl
mov
jecxz
shlb
bound
xor
negb
fs
lock
pop
aas
pop
lds
lods
js
es
push
lock
shr
insl
jno
idivb
sbb
adc
sbbb
ss
cmp
jecxz
sti
push
pcmpgtd
sub
mov
mov
sub
jmp
mov
push
cli
mov
xor
mov
rorb
push
push
lret
jp
pop
dec
xor
dec
sub
jbe
aad
mov
sub
or
mov
adc
lock
mov
ja
testl
inc
lds
cmc
mov
xor
icebp
mov
inc
lds
add
add
xchg
das
push
call
test
iret
jmp
xor
cmc
es
stc
push
and
mov
movsl
jecxz
xchg
add
sbb
jge
mov
fadds
shll
fs
cmc
frstor
pop
cmp
push
xchg
cli
lock
inc
mov
popa
push
xor
and
cltd
aaa
ret
push
jl
push
ljmp
dec
inc
aaa
movsl
jle
or
pop
xchg
sbb
push
das
sbbb
dec
loop
cmpsb
daa
bound
sbb
test
out
orb
aaa
jp
jne
xchg
xchg
lods
rclb
push
dec
faddl
jp
sub
int
dec
sub
test
ss
and
jae
sub
sbb
cmp
idivl
push
mov
jbe
jg
jnp
inc
mov
pop
popa
jo
jg
arpl
cmp
jmp
lds
sbbb
popa
pushf
cmc
jl
push
cltd
push
out
xchg
popf
enter
cmc
icebp
push
outsb
jp
popa
xor
rcr
bound
sbb
add
pop
xchg
shrb
or
pop
fadds
cli
xchg
add
jbe
pop
jns
addl
sbb
or
es
lcall
pop
shl
cld
mov
lods
iret
call
inc
pop
lret
repnz
ljmp
xor
scas
xor
pushf
rcrl
jbe
aam
mov
lahf
mov
jle
xchg
mov
ret
jp
sub
fdivrs
mov
xor
pushl
push
jne
in
pop
test
jl
xor
arpl
push
aad
jae
jmp
xor
sbb
loope
or
je
jle
push
cmpsl
das
imul
dec
shlb
push
mov
sahf
pop
outsl
bound
mov
mov
push
ret
dec
dec
pop
inc
lods
jge
push
dec
push
jmp
dec
inc
xchg
adc
filds
lods
les
mov
dec
ds
adc
pop
push
fs
fidivs
lea
xor
and
mov
inc
loopne
lret
iret
ss
cld
outsl
cli
sbb
ret
and
repz
pop
sub
cld
out
scas
pop
in
xchg
xchg
loop
ja
cmp
call
lret
xor
popf
fwait
mov
xchg
pop
mov
xchg
xchg
sbb
je
mov
lret
subb
mov
stos
mov
adc
jmp
lods
insl
push
adc
mov
pop
inc
pop
rcr
ja
xlat
movsl
fcomps
sub
cld
push
fwait
out
or
out
sti
in
dec
shll
mov
xor
cmp
or
jmp
inc
adc
data16
xor
scas
xor
jo
das
mov
insb
loop
xchg
imul
xor
adc
leave
jne
jecxz
les
jo
jg
aaa
das
std
and
jns
addr16
hlt
out
sti
test
lret
xor
dec
lcall
jle
dec
mov
lret
mov
mul
mov
popf
mov
sarl
lods
cmp
xchg
movsb
mov
scas
outsb
ljmp
fdivrl
data16
cli
cmp
lods
mov
sub
push
icebp
ss
pushf
push
outsl
fsts
aaa
pop
push
outsl
add
sub
or
pusha
sarb
out
xor
inc
out
fisubrs
lahf
xor
pop
mov
jno
out
adc
loopne
movsl
cmpsb
or
mov
ja
sub
cwtl
pop
mov
sbb
mov
jg
mov
push
out
dec
mov
movsl
cmovg
adc
and
or
cmpl
xchg
and
fwait
xchg
cld
in
or
and
pop
xchg
mov
je
cmp
ss
push
into
cmp
rclb
mov
push
insb
and
pop
cmp
mov
pop
movsb
insl
dec
add
pop
out
shrl
mov
test
adc
sbb
add
insl
pusha
adc
lahf
and
scas
lods
mov
jnp
mov
repnz
bswap
mov
mov
push
mov
scas
pop
xorl
push
pushf
jecxz
cmp
mov
mov
in
insb
jb
mov
insl
rcll
and
and
les
jmp
inc
jbe
in
cmp
test
lods
inc
adc
imul
mov
adc
cmp
fsubs
nop
repnz
xor
fbld
add
mov
movsl
jecxz
or
mov
adc
das
jl
jo
add
mov
push
xor
cmpb
idivb
rcl
dec
xchg
roll
push
push
and
push
pop
int
stc
push
cs
cli
movsl
data16
mov
aad
xor
negl
jnp
lock
cli
movl
cmp
xor
neg
popa
push
or
popa
sub
or
aas
mov
add
xor
jp
sub
sub
adcl
jno
das
sub
fcomps
aad
mov
and
push
or
daa
inc
inc
cmp
loopne
dec
aas
inc
inc
in
ret
mov
push
aad
lods
xchg
adc
cltd
mov
inc
sub
add
sub
rcrl
lds
lods
out
test
popf
adc
aas
or
mov
jmp
mov
xor
cmp
movsl
repz
adc
pop
add
mov
repnz
mov
xor
jnp
aaa
sbb
shrb
stos
pusha
popf
test
mov
fsubrl
mov
inc
pop
dec
cltd
es
scas
lret
xchg
inc
aam
cltd
popa
mov
sbb
pusha
movl
loope
mov
push
pop
rolb
imul
lahf
jnp
lret
sbb
jmp
gs
xlat
push
inc
arpl
into
jl
or
int
icebp
jge
sahf
sub
or
and
mov
rorb
iret
xchg
insl
test
aas
fwait
push
pushl
or
or
mov
inc
imul
fisttpl
sub
and
and
jl
pop
sbb
xor
jle
cmp
push
inc
add
xlat
imul
insb
sbb
cmp
xorl
add
adc
je
jbe
mov
in
mov
outsb
xor
inc
ss
das
push
shlb
pusha
pusha
mov
ss
xchg
fsts
int
into
sbb
mov
inc
cmp
mov
mov
ret
pop
mov
mov
daa
out
adc
jno
cmp
lods
push
jne
fmull
int
jg
xchg
lods
aas
ret
testb
inc
xchg
ljmp
sub
xor
das
scas
mov
mov
push
cmpsb
inc
cmp
or
cltd
and
sbb
orb
je
mov
shl
push
fisttpll
mov
mov
nop
jg
stos
ljmp
scas
dec
jnp
int3
adc
pop
loope
rcll
pop
sub
mov
shll
and
leave
fwait
rorl
ret
ja
adc
test
mov
shrl
mov
mov
cld
lods
xlat
mov
daa
xchg
mov
mov
lods
xor
ret
inc
add
adcb
lods
in
cmp
xchg
push
repnz
inc
cmp
mov
xlat
xchg
pop
xor
sbb
jo
rcrl
jns
xor
inc
data16
sarl
sbb
lea
or
fstpt
mov
mov
pop
jg
aas
enter
je
push
dec
xchg
mov
sub
adc
mov
mov
or
lods
xchg
fxch
pop
mov
sub
std
inc
fisubl
lcall
sub
outsb
lret
or
sub
push
pop
in
jo
jg
xorl
stc
inc
sub
xchg
xchg
xchg
addl
sbb
push
and
and
lock
mov
inc
jo
mov
pusha
arpl
adc
pop
test
mov
icebp
cwtl
pusha
mov
push
dec
jne
sub
push
inc
adc
mov
mov
das
aas
fisttpll
ror
adc
iret
out
in
shll
push
cmp
and
jae
cltd
mov
out
stos
sbb
inc
les
fstpl
hlt
ficoms
ja
ja
xchg
push
jecxz
jmp
icebp
mov
int
adc
pop
pop
outsl
lcall
stos
sub
sub
aad
sub
iret
add
inc
divb
ja
dec
jl
dec
pushf
lret
inc
mov
test
ljmp
mov
xor
rcl
pushf
sbb
jp
sbb
rorb
inc
jns
in
int
psrlq
fcmovne
notl
jns
arpl
fdivr
push
insl
loopne
inc
mov
xchg
mov
sbb
mov
in
cmp
pop
mov
push
inc
popf
cmc
lds
xchg
cmp
xlat
mov
adc
shll
inc
loopne
xchg
mov
std
adc
adc
jno
arpl
addr16
xchg
aaa
stc
daa
loope
orb
inc
out
xor
movsb
mov
mov
in
call
mov
data16
inc
fsubl
gs
shrb
fs
pop
hlt
mov
sub
stc
enter
out
push
xor
inc
aas
mov
add
div
test
adc
rcll
dec
rolb
pop
rorl
ds
mov
lea
call
jge
scas
aam
pop
loope
int3
mov
rorl
gs
cmp
cmp
dec
cmp
push
mov
mov
dec
xchg
jnp
push
enter
and
fdivrs
sbb
cs
rolb
inc
in
pop
xor
xchg
pop
arpl
xchg
icebp
pusha
cwtl
or
xor
mov
into
idivl
xchg
fnstenv
push
cmpsl
jmp
sbb
andb
mov
dec
test
stc
in
mov
adc
cmp
jae
mov
pop
add
cmpsl
int
sbb
test
jno
repz
xchg
mov
sub
divb
jp
push
daa
mov
mov
cli
mov
sbb
les
push
sub
sub
cs
dec
dec
sbb
mov
int3
icebp
push
cld
sarb
mov
sub
adc
jle
mov
and
adc
xorb
xchg
sbb
enter
movsl
pop
xchg
lds
stos
jmp
jl
mov
out
xor
repz
es
fs
push
das
or
dec
sub
shl
sub
rcll
lcall
push
xchg
loopne
push
idiv
movsb
call
icebp
leave
hlt
sbb
cmpsb
jns
das
mov
cmp
gs
fldenv
jb
arpl
dec
cmp
ljmp
dec
fimuls
and
xlat
adc
mov
sub
cmp
pop
out
push
mov
in
rorl
or
pop
pop
add
insb
cmpsl
add
push
ja
data16
es
xchg
or
add
es
mov
repnz
mov
sub
pop
pop
jg
cli
jae
mov
clc
lock
pop
test
pusha
aam
mov
sub
out
push
out
pop
xchg
rorl
xchg
xorl
lcall
lahf
jb
push
andl
inc
inc
push
pop
fs
xchg
push
in
stos
notl
mov
out
adc
dec
lahf
xchg
pusha
xor
lret
lret
dec
xchg
push
push
fsubl
mov
stos
cmp
push
pop
sub
daa
mov
mov
pop
vpaddsw
cmp
inc
push
pop
add
add
and
cmp
mov
sub
scas
mov
mov
pushf
aam
or
jle
jns
push
daa
and
out
lods
loop
cmp
aam
aam
cmc
in
mov
pop
lds
push
jmp
dec
lods
and
call
aaa
aad
mov
in
inc
sub
adc
fucomi
cs
and
mov
xchg
je
xchg
sbb
cltd
jbe
in
inc
or
xchg
xchg
mov
mov
or
inc
pop
add
mov
das
jg
fs
cmp
and
mov
in
xchg
push
jp
inc
xchg
mov
gs
cmc
mov
mov
into
pop
in
pop
subb
push
shll
xor
notb
cmp
stos
ljmp
scas
inc
mov
rclb
fsubrs
dec
jb
test
xchg
popf
xor
sbb
sbb
sarl
dec
outsb
pop
iret
mov
pop
cltd
fsubrl
fnsetpm(287
pop
lods
xchg
pop
pusha
test
pop
inc
or
loopne
or
and
mov
rcll
or
in
mov
insl
je
repz
mov
cmp
mov
fstps
xchg
jge
jmp
or
ret
adc
iret
cmp
inc
bound
or
ljmp
ljmp
xchg
call
bound
shll
jp,pt
push
aam
dec
xchg
push
mov
push
clc
dec
add
and
jbe
sbb
pusha
xor
not
pusha
rolb
pushf
sub
popa
pop
nop
hlt
sbb
cli
cmc
jle
out
mov
xor
pop
add
jmp
in
cmp
mov
je
lods
adc
push
or
jmp
bound
pop
xchg
mov
or
scas
aas
add
inc
push
arpl
in
jne
jl
imul
cwtl
xchg
std
adc
dec
ljmp
or
inc
push
mov
out
fldt
xor
mov
sbb
xor
loop
mov
data16
sbb
popf
ss
jp
mov
mov
sub
xor
mov
rolb
jecxz
fcompl
push
jecxz
roll
loop
sbb
jne
xchg
jecxz
mov
testl
cmp
aas
or
repnz
mov
dec
push
push
mov
push
pop
mov
lods
sti
jnp
mov
lds
dec
dec
mov
adc
and
cmp
pop
dec
in
imul
xchg
adc
mov
jb
jge
xchg
cmp
sarl
mov
out
cli
cld
xchg
pop
in
and
xchg
push
icebp
arpl
sub
push
inc
aas
aad
mov
add
out
or
loope
ljmp
std
mov
adc
sub
mov
jl
dec
mov
push
insb
int
pushl
ficoms
rorl
lahf
mov
ret
mov
shrl
shll
fsubl
or
sub
movsb
lret
loopne
mov
imulb
adc
cmp
dec
cli
jp
loope
icebp
mov
xlat
cmp
mov
xchg
divb
mov
add
nop
sub
test
and
xor
mov
jmp
cwtl
xchg
test
pushf
leave
jl
es
arpl
push
in
int3
push
lret
push
in
push
jp
in
aad
andl
pop
es
fisubs
add
push
jle
mov
xchg
inc
cmp
adc
lcall
mov
inc
popa
repz
ret
mov
lock
aas
lcall
imul
sbb
cmc
pop
aad
xchg
mov
cmp
sarl
ljmp
aas
shrl
push
test
xchg
jle
andb
rolb
and
cmp
mov
jmp
addr16
mov
in
sbb
xor
aaa
sub
sbb
adc
mov
scas
lods
adc
bound
ret
xchg
hlt
arpl
lea
and
std
test
cld
mov
es
enter
roll
jne
and
out
jo
sti
in
call
insb
pop
cltd
shlb
cmc
ljmp
add
dec
push
aas
xor
test
pop
sbb
mov
inc
out
decb
mov
stc
xchg
or
data16
call
bound
mov
pop
pop
pop
popf
outsl
cmpsb
out
pop
push
aas
jl
jnp
xor
cmp
aaa
icebp
mov
mov
inc
dec
and
in
mov
repnz
add
dec
xor
nop
pop
pop
pop
mov
inc
dec
mov
jle
mov
jns
inc
sahf
cltd
and
mov
ret
fdivrs
inc
xchg
and
add
lods
jecxz
lahf
dec
in
and
mov
test
mov
fists
int
jge
mov
pop
or
pop
test
cmp
scas
in
or
popf
or
jle
inc
ljmp
jp
and
je
and
call
inc
add
inc
mov
fnstsw
faddl
lahf
mov
add
mov
pop
scas
out
loopne
xor
jo
push
sbb
dec
jo
mov
push
pop
cmpsb
cmc
push
add
or
imul
pop
cmpsl
jp
js
mov
je
in
push
jge
popf
in
imul
jp
xchg
lret
add
dec
mov
adc
int
sbb
mov
enter
lret
and
sbb
push
xchg
outsb
add
cwtl
sub
cmc
sub
les
or
js
push
loope
jbe
push
repnz
pop
movsl
test
push
jb
stc
xchg
js
divb
push
cmpsl
pushf
jg
repnz
xor
and
adc
ja
fisubrs
add
dec
test
inc
jnp
fucomip
mov
out
mov
pop
sub
insl
push
mov
int3
outsb
test
mov
adc
add
sbb
or
arpl
push
clc
pop
test
in
add
jb
test
mov
mov
mov
ljmp
xor
lret
push
fdivrs
jb
sqrtps
xchg
neg
dec
ret
and
jo
mov
aas
scas
and
xchg
imull
jno
test
sbb
mov
and
mov
repz
iret
lods
sub
mov
data16
push
popf
xchg
sahf
mov
pop
inc
push
in
mov
sbbb
jno
dec
xchg
stc
mov
leave
push
dec
ja
icebp
cli
adc
xor
sbb
insb
repnz
fmul
testl
aam
cmp
out
jle
repz
sub
sbb
mov
sar
sti
mov
mov
rcrb
cs
pop
mov
int
push
lcall
inc
out
pop
sbb
mov
in
xor
pop
stc
inc
dec
ret
mov
lahf
movsb
scas
repz
mov
rcpps
arpl
jae
add
pop
and
jg
rcrl
or
fbld
rcpps
arpl
jae
add
pop
and
jg
mov
lahf
subl
fbld
rcpps
xchg
das
jae
add
pop
and
jg
lahf
mov
iret
sbbl
xor
inc
lock
mov
das
jae
je
fwait
mov
into
cli
ficoms
cmp
fsubrl
mov
dec
test
outsb
mov
mov
lds
into
add
xor
scas
gs
xchg
outsb
test
push
cmpsb
cs
xlat
sbb
adc
xchg
pop
xchg
jge
outsl
push
data16
xor
push
mov
test
jb
imul
out
push
mov
outsl
sti
jns
enter
out
es
cs
jmp
dec
pop
and
inc
leave
movsb
into
sahf
stos
sub
sub
lret
add
xorb
in
mov
sbb
adc
push
and
add
xor
aad
aad
sbb
cmc
iret
push
into
adc
jno
lahf
xchg
push
cmp
pop
push
inc
orl
outsl
ds
sahf
cmp
push
aad
xchg
dec
or
mov
lods
push
pop
shl
or
or
cmc
test
jg
mov
pop
mov
mov
roll
dec
xchg
dec
mov
pop
add
das
cltd
inc
mov
jl
insb
push
popf
inc
lea
lods
push
fldl
ret
ds
mov
and
xor
adc
cmp
or
in
sbb
test
xchg
cwtl
mov
push
mov
loop
sahf
scas
add
sbb
sarl
testb
jne
pop
mov
stos
inc
mov
addb
sub
jne
test
outsb
movsl
jle
push
lds
aad
in
cmc
into
add
xor
scas
gs
xchg
outsb
movsl
jle
push
lds
aad
in
cmc
into
add
lea
loop
cld
xor
push
incb
mov
push
popa
scas
mov
push
cmpsl
gs
int3
dec
mov
mov
mov
push
pop
or
fcompl
mov
test
aaa
lds
js
in
lock
icebp
sub
gs
mov
aaa
subl
dec
mov
sbb
popf
loope
scas
pop
orb
orl
adc
cmp
pop
pop
push
sbb
xchg
rcrb
sbb
mov
adc
aam
push
mov
add
cltd
movsb
jl
push
cli
mov
pop
sbb
fsubrs
test
or
fwait
xchg
aad
test
hlt
xchg
jecxz
insb
and
iret
nop
push
mov
cmp
xor
jb
addr16
xorb
scas
push
sbb
mov
jg
mov
sbb
or
mov
sub
or
ds
ret
mov
mov
mov
inc
pop
inc
pushf
cmp
jecxz
ret
addl
jo
push
sub
add
rcrb
cli
sub
xchg
cmp
jl
lahf
push
orb
insb
ficomps
and
jne
loop
xchg
mov
js
mov
ds
adc
or
mov
stc
jmp
fdivs
xchg
jge
insb
mov
sbb
fadds
sahf
xor
pop
rcll
rclb
add
cmc
and
add
ret
cmp
cltd
mov
add
cmc
dec
std
xchg
arpl
xchg
mov
mov
mov
mov
and
mov
push
loop
xor
test
cltd
or
lods
jne
or
sub
lods
xchg
sub
out
xchg
jnp
push
jg
pusha
pop
or
xor
popf
add
sti
into
pop
adc
mov
cmp
dec
jo
fidivl
cmp
adc
or
into
dec
push
out
scas
inc
jecxz
sub
call
subl
mov
inc
inc
cmp
mov
lods
mov
adc
jl
aam
sbb
mov
cld
sbb
xchg
inc
fs
lcall
jp
add
pop
fwait
sarb
pop
cmpsl
xor
rcll
push
pop
and
xor
lods
add
enter
mov
shll
call
cmp
cmpsl
sbb
fcomps
lret
rcl
shl
push
push
imul
arpl
and
mov
adc
xlat
pop
sarb
dec
sarb
pop
sahf
jmp
adcl
xchg
jnp
cmc
jns
sub
adc
adc
cmp
mov
fs
out
nop
add
sub
cmpl
dec
push
pushf
inc
outsl
push
test
pop
mov
out
mov
xor
sub
int
insb
fsts
test
add
stos
sub
sub
ljmp
and
fwait
jne
or
jl
and
jb
sub
and
icebp
push
sbb
scas
clc
sarb
mov
inc
rorb
sbb
or
xor
loope
into
mov
loopne
sub
ficoml
or
push
lock
mov
imul
pusha
sahf
push
or
test
subb
jp
out
out
fildl
aad
pcmpgtb
inc
lahf
mov
add
xchg
fdivrl
shrd
shlb
divps
pop
adc
adc
mov
fsts
popa
clc
repz
jle
pushf
and
push
fsub
cmp
push
adc
sbb
mov
outsb
bnd
xor
sub
pushf
pop
test
lret
sbb
mov
imul
fists
pop
push
mov
sub
sub
movsl
mov
lock
push
ja
aas
and
and
mov
jne
mov
mov
ljmp
outsl
xchg
pop
fdivr
mov
out
xchg
les
sub
inc
sti
push
pop
test
int
add
xor
icebp
pop
mov
lods
test
mov
loop
fcmovnb
and
or
jo
xchg
jecxz
or
sub
add
bound
add
rcl
push
jge
jno
sub
in
test
push
xor
and
sbb
imul
ljmp
lock
dec
and
test
insl
stc
jnp
mov
xor
shl
inc
lret
fbstp
and
int3
jg
pop
sbb
std
push
insl
dec
sbb
lret
movsb
or
fisttpll
fldcw
mov
std
movsl
outsl
xor
cmovnp
cli
xchg
sti
cmp
andb
insl
sbb
out
mov
aad
cmp
cmc
clc
aas
mov
push
sbb
push
push
mov
push
outsb
mov
fidivs
repz
cltd
add
push
lods
out
shlb
mov
mov
in
fcoml
adc
jns
xchg
jge
jg
shll
mov
fyl2xp1
jg
mov
dec
popa
sbb
dec
mov
in
fdivr
add
add
rcl
xlat
or
xchg
psubb
push
mov
jbe
aad
dec
pushl
fidivrs
mov
inc
sti
mov
cwtl
inc
xor
mov
dec
js
mov
sub
pop
shll
jle
cmp
loopne
mov
pop
dec
mov
stc
sahf
push
jo
fidivs
mov
mov
push
cmp
jmp
sub
sbb
jo
test
pushf
in
inc
lock
or
or
movsl
pop
les
add
jnp
negl
lret
repz
jbe
lahf
xchg
xchg
dec
cli
aad
push
mov
xchg
test
dec
scas
lahf
mov
sub
pop
fwait
push
movsb
and
in
sub
divb
cmp
out
and
orb
cwtl
cltd
lods
sub
shrl
adc
inc
adc
ror
cmpb
popa
xor
bound
stos
lods
cmpsl
mov
fiadds
aaa
add
jp
xchg
pop
sbbl
and
out
lods
cld
xchg
hlt
mov
jns
rolb
mov
jns
dec
lods
fimull
pop
shlb
lcall
out
rorb
mov
jp
dec
sahf
ja
shl
sub
sbb
mov
mov
adc
pop
inc
fs
loop
or
ljmp
inc
xchg
cmp
cmpsl
mov
pop
into
xchg
cmp
mov
mov
rcrb
scas
sbb
dec
cwtl
xor
dec
aam
loop
rorl
aas
push
ja
adc
mov
push
push
fnstenv
shr
cld
shlb
je
jnp
insb
push
mov
int3
xchg
and
cmp
mov
jge
gs
jl
adc
push
out
jnp
ret
push
std
cmp
dec
jg
clc
xor
dec
cmpsb
dec
dec
icebp
movsl
pop
shl
adc
adc
inc
push
jecxz
hlt
push
stos
inc
rclb
mov
mov
sar
clc
mov
pop
out
popf
pop
popf
lret
add
mov
stos
cmp
push
adc
movsb
in
add
adc
pop
outsl
scas
pop
push
sub
pop
repnz
js
ja
jmp
mov
cli
movsb
aas
std
aam
leave
sbb
sbb
jae
lods
fadds
xchg
mov
xchg
movsb
popa
push
mov
push
jne
ret
je
mov
add
out
pop
stc
pop
cld
subl
sbb
push
dec
orb
hlt
fnsave
outsl
fcoms
jmp
push
mov
shl
adc
mov
sbb
lock
push
das
jecxz
stc
or
push
add
pop
sbb
rcrb
mov
adc
push
das
dec
imul
lods
mov
aaa
aad
xchg
dec
clc
ficoml
ss
cmpsb
testb
bound
fwait
add
push
ja
aad
test
outsl
fcoms
daa
cltd
or
das
bound
xchg
adc
inc
jl
stos
icebp
adc
fldcw
stos
add
aaa
xchg
adc
arpl
mov
and
mov
icebp
sbb
jp
inc
cmp
fisubs
mov
movsb
test
dec
fiaddl
leave
scas
mov
mov
test
repz
cmp
inc
add
pop
mov
outsb
mov
push
or
mov
insl
and
dec
pop
cwtl
or
pop
in
test
mov
mov
bound
out
in
or
fs
lods
popa
stos
pop
movsl
bound
dec
mov
mov
pop
lock
aad
leave
mov
pop
in
sub
addr16
xchg
jle
mov
scas
out
outsl
es
pop
sbb
dec
call
cld
call
fidivrl
loopne
aaa
mov
rolb
and
imul
imul
negb
popa
out
mov
cmpsl
lahf
pop
pusha
scas
mov
cs
rolb
adc
jle
jge
dec
xchg
loopne
xor
push
mov
push
mov
out
ljmp
mov
ret
stos
push
mov
stos
rclb
sub
aad
add
sbb
sub
leave
pop
call
fdiv
aas
pop
out
rolb
mov
fxch
ret
ffree
fisttpl
and
movsb
fs
xor
enter
lcall
xor
daa
adc
shl
lods
inc
aam
or
sbb
into
mov
xor
leave
push
mov
xchg
ljmp
lret
pop
sub
dec
push
and
scas
sub
test
pop
into
fimull
test
fldl
int3
cwtl
movsw
stos
cli
mov
lcall
cmp
test
test
adc
lcall
mov
add
cmp
inc
or
mov
push
cmpsl
addr16
fdiv
shll
sti
xor
or
xlat
rcrb
cmp
pop
xchg
add
rcrl
fldenv
loop
fisttpl
pop
push
daa
dec
add
mov
and
xchg
jmp
pop
jae
pop
scas
mov
cmp
or
jne
inc
jae
push
movsb
xor
and
sahf
lds
push
xchg
loope
jmp
rol
lret
lahf
adc
or
mov
loope
push
sub
lcall
hlt
xchg
add
adc
cmp
inc
pop
jns
sbb
or
push
dec
lcall
aaa
inc
sbb
das
adc
mov
ss
xchg
xor
stos
imul
cltd
test
mov
add
loope
adc
xchg
in
insl
cmpsb
adc
mov
cmc
pop
mov
mov
js
loop
arpl
mov
cmp
adc
loop
add
addr16
push
sbb
mov
imul
sub
xor
test
push
test
sbb
adc
and
repnz
stc
mov
and
sbb
push
or
clc
mov
sar
jo
sar
test
mov
cmp
pop
sbb
add
dec
inc
jae
insl
jbe
scas
stc
cvtps2pi
scas
pushf
in
jl
mov
inc
dec
xchg
mov
pop
stc
fcoml
pop
lds
xchg
test
stc
adc
leave
in
leave
jb
inc
dec
daa
popa
jmp
jns
mov
pop
loope
lcall
int3
dec
outsb
jmp
fsubrs
enter
out
aam
mov
jp
and
scas
sbb
mov
pop
jae
imul
scas
jo
and
sub
popf
lahf
pop
jae
jg
nop
mov
jo
pop
inc
and
cwtl
sbb
push
cld
imul
ret
or
mov
inc
sbb
imul
pop
cmp
sbb
hlt
dec
cmpsb
pop
push
cmp
data16
xor
mov
and
jge
negl
js
je
aam
in
stos
negl
test
xchg
fs
pop
sub
sub
jbe
inc
frstpm(287
pop
int3
cmp
add
cwtl
dec
ret
and
out
jge
hlt
ja
fstpt
rolb
inc
mov
jge
sub
scas
repnz
outsb
hlt
mov
out
mov
popf
sahf
clc
jg
ficoms
subl
bnd
sub
icebp
cli
scas
ljmp
mov
ljmp
cmp
cmp
xchg
cmpsb
pop
pushf
inc
mov
rcrb
lret
or
dec
and
vcvtdq2pd
sub
xor
and
ret
xorb
push
and
push
push
or
jp
and
pop
push
imul
lds
ja
sbb
xchg
mov
movsl
lret
cmp
mov
and
stos
arpl
or
aad
and
aam
add
adc
mull
sub
mov
xlat
or
sbb
dec
sub
adc
cmp
inc
pop
popa
and
mov
inc
insl
add
gs
cli
ror
push
popa
xchg
je
xor
fisttps
xor
adc
xchg
sub
lds
fwait
bound
insb
fmuls
push
cmpb
jae
dec
jl
movsl
dec
or
jmp
rcl
jae
xchg
or
cli
aad
lods
cmp
xor
movsb
xchg
cmp
inc
dec
inc
xchg
subb
in
les
push
lret
lock
inc
xchg
mov
fisttps
movsb
mov
inc
shrl
sbb
push
aaa
cmp
xchg
push
aaa
js
jge
stos
xchg
insb
rorb
lds
push
jp
pop
and
addr16
fcmove
pop
push
pop
in
xchg
ja
xor
dec
pop
ss
add
jo
nop
sbb
adc
movsb
jo
fnstenv
addr16
jnp
lea
outsb
sahf
jmp
mov
ret
sbb
pop
adcb
cmp
sbb
lahf
add
lahf
mov
ljmp
mov
lock
push
mov
mov
inc
idivb
inc
push
into
mov
aas
nop
jecxz
daa
pop
bound
xchg
imul
pop
lock
insb
mov
add
xlat
cltd
pop
js
inc
xor
or
movb
aad
imul
add
dec
mov
push
jg
jns
mov
lret
mov
or
push
xchg
rcr
push
or
je
data16
add
adc
lods
lret
jbe
mov
loope
mov
out
ficoms
mov
jnp
jno
dec
in
jmp
sbb
add
or
xchg
inc
ss
stos
ror
mov
loopne
dec
mov
addl
mov
rcl
jp
jge
fildll
daa
imul
mov
adc
dec
sarb
xchg
jbe
hlt
xchg
js
sbbl
push
jae
jp
jmp
adc
pop
mov
sbb
cmp
mov
sbb
out
cmp
jae
ljmp
and
imul
push
pusha
fwait
cmp
mov
push
mov
and
lret
icebp
ret
rolb
jb
ljmp
ds
or
lea
andl
jmp
jne
add
icebp
insl
out
data16
add
outsl
fistpll
outsb
cmpsb
dec
mov
movsl
sbb
sbb
mov
push
roll
push
test
das
ja
insl
fs
adc
fisttpl
sbb
and
outsb
pop
cltd
sbb
fisttpll
pop
cmp
adc
dec
ss
popa
push
jecxz
sbb
mov
or
aam
mov
jnp
sbb
push
or
push
arpl
mov
adc
movsb
loopne
repnz
jb
shll
adc
shll
xchg
fildll
cmc
in
jb
out
push
mov
in
subl
or
inc
out
push
lods
nop
out
repnz
add
out
imulb
xor
and
nop
mov
std
daa
jae
bound
lds
xor
insb
mov
aas
push
insb
cmp
cli
es
pop
push
push
leave
bound
xor
aaa
inc
clc
loop
icebp
dec
fadd
dec
pop
mov
jno
adc
mov
test
lods
or
test
cmp
mov
push
inc
and
jg
xlat
popf
stos
js
cmp
add
sbb
inc
xchg
or
fidivrl
pop
sbb
mov
je
inc
aam
lea
fcomps
jnp
pushf
aad
lret
dec
shll
pop
outsl
rolb
sbb
push
adc
xchg
sub
lahf
mov
add
fildl
add
mov
push
pusha
pop
xor
aad
jg
imull
daa
jmp
mov
push
pop
ret
or
leave
call
mov
mulb
test
mov
dec
cmp
and
repnz
movsb
adc
dec
arpl
insl
stos
outsb
lahf
adc
and
rorb
fcoml
xchg
dec
outsl
notl
insb
flds
push
add
lea
pop
dec
mov
adc
push
daa
loopne
cltd
cmp
pop
or
ret
jmp
stos
adc
int3
fwait
push
lret
jnp
jmp
push
mov
xchg
adc
push
push
sarb
loopne
mov
mov
jb
out
and
arpl
cmp
dec
call
mov
dec
xchg
mov
dec
cltd
fadds
mov
pop
cmpsb
js
mov
add
scas
fistps
hlt
sbb
sub
lock
in
loope
jno
ror
pushf
sbb
inc
les
mov
sbb
mov
pop
pop
xor
incl
mov
xor
in
rcll
cli
cwtl
subb
iret
leave
ja
aad
mov
daa
xorb
out
rol
movsb
jmp
or
inc
test
fdivs
jl
mov
fucom
xchg
cltd
xchg
cmp
mov
outsl
mov
lea
imul
rclb
cmp
cli
pop
lock
add
fs
ret
scas
lret
inc
mov
mov
fidivrl
aam
incb
aam
loopne
inc
sub
jns
mov
mov
cmpb
in
jmp
mov
in
and
jl
stos
inc
loopne
lods
out
inc
call
inc
mov
movsl
lods
xlat
loopne
out
stos
jg
ljmp
adc
lret
cwtl
cli
addr16
inc
insb
popf
inc
mov
cmp
popf
inc
loopne
and
cld
sete
fld
or
sub
mov
leave
nop
xor
xchg
cmp
icebp
nop
lock
xor
push
cmp
pop
mov
loope
pop
dec
outsb
mov
add
faddl
pushl
je
mov
stos
push
movl
pop
mov
fmuls
xor
jmp
jno
cli
fcom
test
out
repnz
jp
jne
ljmp
add
pushf
jle
fistl
push
into
mov
in
sub
popf
pop
fsubrs
xor
fucom
mov
jg
pushf
xchg
jb
scas
jo
shl
push
jo
iret
cmpsb
push
mov
mov
mov
cmp
sti
sbb
sub
out
das
int3
push
xor
sub
lahf
not
mov
in
mov
mov
nop
push
fs
gs
jle
xor
mov
scas
xchg
pop
mov
inc
mov
testl
pusha
jmp
test
lcall
xchg
and
xor
pop
push
pop
adc
mov
dec
popa
ljmp
addr16
mov
rcll
int
loopne
rolb
js
stos
xchg
movsb
sbb
cltd
xor
sub
fsubl
in
jl
xchg
mov
xchg
pop
adc
pop
addr16
and
sub
push
shrl
or
aas
sbb
sahf
xchg
sbb
mov
mov
ficoml
pop
jb
test
ficompl
cmp
int3
jb
int3
xchg
cli
rolb
sub
xchg
mov
out
or
fcomps
sub
mov
lds
test
jne
sbb
into
fs
pop
jne
pop
push
cld
jae
bound
inc
add
jno
sbb
add
jo
ret
mov
pop
or
add
sbb
push
cmpl
sahf
fwait
pop
cmp
add
mov
outsl
add
mov
jge
mov
stos
dec
repz
fdivl
cmp
ja
subl
jae
repz
enter
fs
arpl
xchg
and
insl
jmp
and
fwait
pop
test
dec
add
cmc
lret
in
pusha
cmpsb
lock
push
and
mov
jnp
sbb
jmp
fisubs
sub
es
fdivl
gs
lret
jno
std
push
addr16
ficoms
mov
cmp
inc
sub
xchg
inc
sub
shl
leave
fcmovb
mov
test
dec
xchg
pop
and
cli
add
mov
push
outsl
aad
sub
pop
repz
push
adc
out
add
cmp
stc
mov
sbbl
mov
push
pop
jl
xlat
push
push
add
adc
testl
lcall
mov
jge
lods
sar
adc
xor
scas
gs
xchg
outsb
movsl
jle
push
lds
aad
in
cmc
into
add
xor
scas
gs
xchg
outsb
movsl
jle
push
lds
aad
in
cmc
into
add
xor
scas
gs
xchg
outsb
movsl
jle
push
lds
aad
in
cmc
into
add
xor
cs
test
ret
xchg
sub
sbb
or
shl
cmp
mov
or
mov
ss
call
int
sub
sbb
xchg
dec
xchg
jbe
popfw
push
lea
andb
push
lea
mov
pop
mov
cmpsb
inc
xchg
mov
inc
fisubs
shlb
out
ss
outsl
fldl
js
dec
mov
push
or
pop
pop
dec
inc
fnstsw
mov
sbb
cmp
push
outsb
pop
lret
in
test
mov
ds
int3
push
push
or
cmp
je
pop
jmp
enter
inc
add
adc
int
std
xchg
or
shrl
insl
pop
adc
xchg
in
mov
mov
add
and
arpl
push
pop
cmp
push
or
lods
fisttpl
popf
mov
jmp
in
push
sub
cmp
popf
sub
mov
cmpsb
jb
test
in
jne
ror
add
xor
mov
pop
mov
cmpsb
jge
xchg
xchg
jbe
data16
popf
inc
aad
shll
push
int
mov
jg
cmp
rcrl
leave
adc
and
cmp
jmp
clc
and
andb
mov
subb
mov
xchg
roll
in
dec
shll
ret
xor
add
sub
inc
cli
sarl
mov
jnp
jp
pop
mov
jge
dec
xchg
lods
mov
inc
popf
ss
es
push
int
sub
sbb
xchg
dec
xchg
lods
mov
inc
popf
ss
es
push
int
sub
mov
pop
adc
push
lds
aad
jmp
aaa
pop
pop
in
sub
pop
icebp
jno
rclb
clc
push
stos
rorb
lahf
ja
shlb
dec
ficoms
push
hlt
dec
lods
and
test
test
jb
stos
arpl
and
out
mov
std
ss
jb
popa
in
push
out
or
pop
pusha
jbe
fwait
sub
xor
dec
and
sbb
pop
hlt
mov
push
pop
add
shlb
fldenv
int
xchg
push
cs
daa
dec
cwtl
xchg
dec
adc
jle
fs
cmp
mov
enter
add
outsb
jg
imul
inc
or
mov
pushf
mov
bound
dec
cmc
dec
mov
stc
ja
scas
shll
inc
ljmp
sbb
lret
insb
add
or
dec
sahf
je
icebp
hlt
xlat
out
aaa
or
popa
lods
enter
jae
or
inc
add
mov
aad
jg
fcoms
push
dec
aaa
jns
sti
stc
push
xor
dec
mov
sbb
sbb
repz
pop
mov
cs
xor
insl
xor
inc
mov
lret
inc
add
sbb
scas
sub
cmp
xchg
and
sbb
jmp
xor
inc
cld
repz
addr16
pop
mov
mov
lds
sub
sbb
es
cmpsb
jmp
jo
xchg
inc
sbbl
or
bound
lods
push
xlat
add
mov
jle
jecxz
and
mov
mov
pop
int3
push
xlat
iret
lods
sub
notl
sbb
cmp
or
cld
mov
jno
add
mov
aaa
xor
jecxz
in
popa
push
repnz
or
push
jmp
and
stos
rclb
add
mov
cmp
jl
xor
scas
push
mov
iret
scas
cmp
jb
pop
jns
adc
out
idiv
pop
xchg
clc
sti
cmp
cmp
repnz
loope
test
and
sti
scas
pusha
add
xchg
pop
lods
jp
inc
das
lret
dec
imul
push
out
push
in
out
xchg
pop
imul
loope
leave
stos
mov
insb
je
mov
mov
insb
push
push
cmp
jmp
enter
int3
or
das
rcrb
push
out
mov
mov
negl
cmp
out
fisubl
fldl
shll
ljmp
movsb
paddb
cmp
xchg
lahf
add
cmp
add
fldenv
rcrb
mov
sahf
mov
fcoml
rclb
mov
adcl
repnz
daa
pop
cmp
lock
jg
ss
jmp
add
jl
push
cmp
pushw
scas
lret
xchg
jno
je
pushf
sbb
mov
pop
push
mov
shrb
and
jecxz
push
sub
insl
dec
daa
test
test
push
mov
jecxz
push
jno
xchg
jle
fldl
std
cli
xor
in
add
testl
xchg
and
ret
out
jbe
push
push
xorb
push
xchg
inc
orl
sti
fcos
addr16
scas
movsb
call
adc
iret
cs
test
inc
jp
push
mov
inc
hlt
xchg
subb
sbb
call
sbb
fnstenv
push
push
adc
insl
mov
ds
scas
sbb
pop
mov
push
lcall
jle
ret
adc
and
lods
xor
lea
or
jle
xor
in
push
push
les
cmpsl
adc
pop
push
cmp
icebp
dec
orb
mov
bound
cmp
ret
mov
mov
movsb
cmp
push
adc
mulb
jb
in
lds
shll
jo
push
fdivs
push
cwtl
jnp
cli
addl
jno
sbb
adc
stos
inc
inc
add
out
lods
push
scas
inc
fidivl
popf
lret
mov
mov
xor
cmp
jp
out
test
mov
jmp
out
cmp
sti
insb
xchg
push
push
fisttpll
imul
rcll
lahf
mov
test
jl
push
fcmovnbe
inc
mov
cmp
jl
nop
inc
cmp
rclb
mov
test
out
icebp
inc
sbb
ds
in
inc
je
xchg
andl
xor
hlt
jp
es
or
and
mov
sbb
dec
push
xchg
rolb
insl
sbb
ds
mov
fmuls
mov
mov
mov
sbb
lock
mov
loop
or
lock
jne
mov
loope
fwait
or
push
cs
jg
popa
sub
mov
push
aam
jge
lea
pop
sub
jb
flds
test
cmpsb
lcall
leave
jle
jecxz
xchg
rcrl
scas
mov
and
shll
test
pop
mov
sbbl
or
dec
sub
mov
ret
mov
insb
mov
add
sbb
cwtl
rclb
adcb
pusha
and
push
adc
dec
stos
imul
loope
cmpsb
cmpsb
cwtl
mov
ret
xor
pop
je
mov
lock
add
pop
mov
icebp
jp
scas
jne
sub
cmp
jae
mov
add
sbb
rcrb
mov
test
jb
imul
test
sbb
cmp
push
xchg
mov
add
add
bound
incb
mov
out
mov
dec
sbb
repz
add
nop
lea
xchg
aas
inc
dec
mov
pop
cmp
add
push
add
lret
sub
sbb
inc
into
mov
rorb
push
in
push
popa
aad
call
dec
lahf
mov
stos
and
jbe
addl
sub
mov
ljmp
outsb
add
or
les
lock
aaa
sub
loopne
in
mov
enter
push
lret
into
nop
rclb
out
jae
pop
mov
cmp
imul
pop
fcoms
rcrb
push
mov
pop
push
pop
movsl
cmp
xchg
pop
testl
jno
dec
push
xchg
pop
cmp
ss
xor
xorl
jb
push
test
fisubs
in
iret
sbb
cwtl
mov
jl
and
lock
cltd
push
or
pop
rorb
push
inc
mov
test
cs
int
jnp
test
ret
lahf
gs
push
scas
sub
dec
outsl
call
les
push
outsl
sub
out
jbe
in
scas
outsl
sbb
dec
insb
rolb
xchg
cmp
mov
pop
jle
cli
movsb
or
mov
xchg
xchg
into
std
pusha
cli
xchg
test
jo
inc
jae
push
lds
adc
scas
hlt
sbb
scas
int3
adc
iret
add
lcall
lock
xor
cmp
dec
int
test
and
pop
dec
mov
mov
mov
into
clc
xor
insb
sub
ja
mov
jne
sub
les
inc
push
and
and
inc
cltd
ficoml
jns
fmul
jnp
aaa
mov
inc
nop
xchg
xchg
das
dec
xchg
dec
push
xor
ljmp
and
or
and
pop
scas
inc
sarb
mov
iret
in
int3
aaa
inc
or
daa
and
loop
inc
xor
in
fisubs
outsl
sbb
fadds
loope
or
xor
rcrl
repz
js
xor
dec
add
stos
out
ljmp
sub
mov
sbb
fwait
inc
mov
stos
pop
fs
cmc
test
and
ret
mov
add
fcomp
fnstcw
jp
pusha
in
stos
mov
orb
xlat
in
dec
jg
and
jp
xor
dec
jns
sbb
ret
push
shl
inc
mov
mov
outsb
icebp
icebp
or
pushf
loope
in
lea
push
sahf
cmpsb
ja
test
sub
gs
cmpsb
jmp
out
aas
xor
das
push
mov
popf
pop
ficomps
out
pop
pop
out
test
sub
sahf
scas
xor
mov
and
rorl
add
sub
mov
outsb
jp
std
xor
repnz
in
sti
cmp
pop
filds
negl
test
jge
adc
sbb
xor
aas
add
popa
sub
mov
ret
xor
sub
test
bound
ss
popa
push
loopne
shrb
sub
jno
sbbb
shl
sahf
int3
cmp
aas
mov
mov
out
xor
mov
pop
dec
push
and
push
lcall
inc
add
xchg
jo
xor
xor
out
fidivrs
and
push
inc
cmp
dec
mov
sub
clc
mov
aam
leave
cmp
push
bound
lret
gs
mov
stos
cwtl
nop
repnz
fwait
jbe
lea
std
add
and
enter
les
out
das
iret
bound
les
xor
pop
in
pop
mov
stc
xor
pop
sbb
fsubr
mov
int3
rcr
test
mov
test
fldt
mov
cmpsb
ret
test
repz
int3
dec
and
xor
xchg
repz
push
jo
cmpsb
dec
mov
cmc
xchg
mov
cli
les
lds
orl
es
and
mov
scas
in
mov
and
pop
lret
cltd
mov
pop
sbb
in
inc
lock
or
inc
cmp
or
inc
or
jne
nop
test
add
xlat
mov
inc
jge
arpl
dec
jl
leave
dec
cltd
jo
mov
in
ss
xor
push
sahf
testl
push
jne
test
cmp
in
xchg
stos
dec
mov
jb
int3
mov
adc
in
or
jne
in
out
mov
iret
cmp
jl
ficompl
pop
mov
xor
shrl
lcall
or
repnz
sub
ret
les
jne
lock
movsb
dec
shll
and
fimull
mov
jbe
dec
fisttpl
bound
imul
into
fisttpll
mov
push
call
jle
sbb
inc
xor
xchg
push
ja
in
push
inc
out
and
pop
and
adcb
xchg
sbb
bound
inc
jge
sbb
jmp
enter
adcb
or
jae
mov
sub
add
pop
js
jo
xor
xchg
mov
jmp
lds
repz
push
mov
sub
aaa
mov
rclb
jmp
mov
sbb
adc
aad
add
push
pushf
lcall
cmp
pop
mov
mov
and
adc
push
and
dec
stos
push
add
inc
push
add
mov
mov
pushf
sbb
mov
dec
mov
lcall
jmp
cmpsb
hlt
into
arpl
ficoms
cmpsb
sub
and
push
mov
mov
lods
aas
arpl
dec
lcall
fnstenv
insb
cmc
sub
push
pop
leave
mov
fldcw
into
lret
mov
xor
pusha
pop
in
popa
mov
add
cli
xchg
adc
mov
cmpsl
enter
lods
mov
push
lret
jmp
fistpl
mov
outsb
jo
mov
nop
int3
jb
push
push
adc
or
mov
push
subb
mov
orb
adc
cmp
hlt
int
push
sbb
mov
das
rolb
inc
fwait
dec
imull
mov
enter
lds
dec
xor
shlb
addr16
push
cmp
fwait
jmp
fisubs
jle
cli
js
ja
adc
into
imul
inc
mov
add
pushf
leave
or
or
cltd
cmp
fisubl
xchg
pop
outsb
or
je
imul
flds
pop
push
cld
xchg
sbb
enter
aad
xor
adc
fidivs
and
mov
int
mov
sbb
dec
push
iret
lea
xchg
hlt
addr16
sbb
sub
sbb
repnz
add
insl
cwtl
jg
inc
add
fwait
jecxz
sbb
repnz
lods
xor
inc
out
pop
mov
push
jo
stos
js
mov
js
xor
aad
and
std
pop
dec
in
xchg
mov
in
adc
loopne
mov
dec
adc
xor
mov
mov
lods
push
enter
repnz
lods
mov
filds
mov
mov
movsb
outsl
lods
add
sub
sub
dec
pop
repz
aam
push
lods
faddp
je
divl
std
or
lods
out
mov
hlt
or
insb
fwait
aaa
lret
hlt
mov
and
pcmpgtw
fcomi
test
jmp
es
sbb
enter
adc
adc
into
ret
out
inc
ret
loop
imul
sti
jle
divl
pop
popa
ja
inc
stc
jle
fwait
test
ds
mov
out
lods
mov
jmp
stos
mov
inc
or
jns
xrelease
fdivl
and
lret
adc
daa
or
jo
into
inc
xchg
adc
xor
jae
call
and
mov
mov
push
inc
xchg
jecxz
icebp
jne
push
dec
sbb
arpl
cwtl
aaa
fmul
inc
jecxz
mov
cmp
dec
dec
sbb
push
xchg
xlat
arpl
jmp
and
test
jns
popa
stos
aam
pop
push
cmp
fdivr
adc
cmp
xor
jns
jp
hlt
cltd
or
stos
sbb
movsl
lods
cmpb
push
scas
xlat
push
das
mov
mov
test
xor
xor
bound
cmp
cld
mov
or
lock
push
rclb
test
fldt
add
hlt
push
xchg
orl
cmp
cmpsb
adc
lret
xor
pop
xchg
mov
mov
mov
cwtl
dec
insb
adc
rorl
fildll
outsb
pusha
cmp
inc
mov
mov
sarl
nop
pop
enter
inc
pop
xor
sub
testl
insl
loope
or
push
lret
repnz
add
pusha
inc
popf
imul
testb
mov
ja
xchg
add
pop
xor
mov
adc
add
xor
das
fstp
js
sub
xchg
sub
mov
loopne
ficomps
ja
cmp
cmpsl
jge
fwait
cmp
add
mov
movsb
pop
sbb
fildl
and
lret
jnp
xor
xor
mov
push
and
stos
adc
xchg
fcmovne
insb
jmp
stos
mov
iret
lods
ret
adc
ss
sbb
test
or
cltd
mov
hlt
cli
jno
sub
pop
movsb
fwait
xchg
ljmp
jno
call
fs
xor
lock
fimull
xor
adc
cmc
pushf
in
adcb
fstpl
xchg
in
in
ret
or
dec
or
cs
dec
test
inc
pop
push
push
cltd
insb
jle
lret
shll
cmp
cs
dec
pop
ljmp
fsubp
in
sarb
or
push
hlt
mov
icebp
sti
les
jl
aas
jnp
shrl
mov
xchg
jg
xlat
addr16
pop
fldcw
xchg
pop
loopne
sub
push
test
xchg
and
or
or
pop
sbb
stc
pushf
adc
movsl
jno
jns
jle
outsb
mov
cmc
mov
adc
ss
outsl
pop
mov
sbb
lcall
sbb
mov
push
cmpsl
cmpsl
xor
call
xor
xlat
dec
push
jl
pusha
or
or
test
pop
jle
fnstcw
aam
enter
inc
lods
test
push
pop
push
divb
mov
sahf
iret
jge
pop
inc
mov
jg
mov
add
push
dec
stos
and
add
pop
shl
mov
or
mov
popw
pop
das
push
jbe
push
push
or
je
inc
fcmovu
mov
daa
cmpsl
mov
jle
scas
jne
dec
lock
fcom
sub
push
jmp
mov
and
inc
add
mov
inc
sub
dec
lods
xor
sub
ficoml
mov
mov
fsubrl
pop
in
dec
push
lahf
xchg
xchg
movsl
loop
jns
inc
pop
dec
loope
mov
add
cli
push
mov
mov
inc
dec
scas
push
std
insl
mov
mov
orl
sbb
dec
scas
pop
stos
pop
arpl
mov
sti
mov
xor
sahf
lods
add
mov
mov
xchg
test
int3
add
fwait
xlat
movntps
push
gs
sub
je
jl
dec
shll
test
adc
ficomps
add
add
xor
xor
in
xchg
and
fnstsw
popa
mov
lret
push
lret
and
xor
js
lock
jo
pop
mov
pop
mulw
dec
pop
sbb
push
mov
arpl
xchg
out
dec
and
push
inc
mov
pop
lcall
inc
cmc
outsb
dec
push
in
jns
lods
btr
subb
mov
repnz
dec
leave
cmp
cmp
icebp
and
sbb
add
and
sub
andb
jl
pop
loope
mov
lock
pushf
ret
xchg
test
xlat
out
mov
mov
mov
pop
push
dec
mov
popa
int3
iret
adc
int3
sub
fstl
lahf
lret
mov
popf
subb
scas
mov
ret
jge
cmp
xchg
sub
mov
mov
loopne
cmpsl
repnz
inc
fucom
sbbb
add
std
decl
sbb
dec
test
mov
or
mov
jecxz
inc
mov
push
lods
mov
dec
mov
sarb
int3
mov
adc
ljmp
push
aam
clc
push
scas
fs
or
inc
inc
sub
mov
pop
adc
xchg
das
sarl
subl
sti
mov
cmp
mov
adc
push
enter
xchg
aad
push
push
enter
mov
notb
mov
stc
xchg
popf
cmpb
or
dec
xchg
nop
data16
adc
add
pop
xor
sbb
fildl
test
and
push
mov
in
test
ds
lock
push
or
testl
testl
lock
in
lcall
mov
daa
movsl
push
inc
jbe
adc
out
nop
mov
in
scas
sub
pop
daa
in
into
stos
in
adc
int
cmp
mov
shlb
mov
mov
cmp
and
mov
repz
out
xor
mov
jmp
popa
es
xchg
sub
repz
pop
int3
and
sbb
inc
push
cld
mov
pusha
fdivl
arpl
adc
xlat
xchg
cmpsl
inc
lahf
adc
addr16
mov
mov
fimull
and
stc
jno
sbb
xchg
mov
icebp
inc
cmc
ss
insb
lahf
jmp
jl
popa
sbb
xor
sti
lret
cmp
push
pop
push
pop
inc
sub
mov
dec
jl
xchg
dec
popa
mov
dec
push
jmp
fs
mov
inc
inc
and
loop
gs
xchg
pop
dec
mov
adc
sbb
inc
das
movsl
sub
aam
mov
dec
dec
idivb
mov
ja
jns
inc
ds
cmp
inc
jns
sti
popf
out
std
and
jnp
ljmp
scas
add
or
pop
cld
jae
jns
add
negb
xor
fwait
sahf
lret
xchg
mov
or
cmp
arpl
jecxz
or
sub
pop
xor
xor
xor
and
lods
jo
mov
jae
inc
into
sbb
test
pop
test
mov
shrl
inc
fisubrs
xor
repz
xor
mov
mov
js
icebp
addb
gs
mov
jno
cltd
into
hlt
jmp
pop
aas
sub
in
pop
mov
mov
xorl
dec
daa
xor
dec
ss
fs
fmuls
mov
push
xchg
iret
in
cmp
scas
jns
leave
ret
test
mov
sbb
and
je
adc
cmp
jp
jnp
mov
xchg
mov
loopne
fs
add
dec
mov
xorb
pushw
push
fistpll
addb
test
addb
ffree
aam
lret
xchg
push
in
test
mov
push
scas
lcall
lock
stos
push
push
into
cmp
mov
cmpsb
jge
dec
xchg
lods
mov
inc
popf
ss
es
push
int
sub
sbb
xchg
dec
xchg
lods
mov
inc
popf
ss
es
push
int
sub
sbb
xchg
dec
xchg
jne
mov
ss
es
pop
in
push
sub
sbb
insl
cmpsb
jge
int
pop
mov
pop
cld
lea
inc
gs
add
xor
and
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
test
dec
aam
stos
fstpl
sub
sbb
push
stos
xor
add
adc
in
imul
les
pop
movsb
sub
xor
je
push
push
push
mov
imul
adc
sub
cmp
jmp
fsubs
mov
push
call
andb
pop
das
or
addb
mov
fbld
inc
add
repz
pop
pop
fdivp
sub
scas
add
adc
lahf
mov
fidivrs
jb
mov
jbe
and
and
mov
and
mov
xchg
stos
mov
mov
dec
and
arpl
cmp
adc
add
dec
stos
cmp
sub
sub
sbb
pop
mov
fdivrl
movsb
adc
mov
xor
clc
xor
push
mov
popa
out
hlt
idivb
pop
jno
sub
dec
repz
insl
pop
pushf
cli
mov
mov
mov
xlat
imul
les
pop
movsb
sub
cmp
out
pushf
lret
dec
fildl
mov
xchg
outsl
cmpb
dec
mov
push
xchg
dec
cmc
dec
add
scas
xor
fidivs
push
aad
push
jl
subl
pop
int
aad
call
mov
cmp
jno
push
hlt
xchg
das
xor
mov
test
xchg
sbb
sti
inc
lret
push
xor
add
adc
in
hlt
jnp
dec
aam
movsb
sub
fs
sti
inc
lret
push
xor
add
adc
in
xor
insb
cmpsb
mov
in
lock
daa
add
pusha
arpl
cmpsl
cmp
cmpsl
dec
or
cmpsl
outsl
cmp
loop
mov
mov
mov
jb
and
nop
rolb
and
xchg
mov
insl
or
jecxz
inc
dec
stos
push
push
or
jns
sahf
or
or
pop
xchg
icebp
das
mov
ds
fnsetpm(287
mov
test
add
push
sti
jo
imul
js
das
jp
pop
ds
xlat
mov
in
mov
jo
testl
ja
pop
test
fcompl
or
int
shl
inc
adc
in
xchg
loop
dec
outsl
or
ds
ret
fwait
mov
sahf
mov
or
inc
data16
ret
add
cmp
xchg
int
xchg
add
mov
clc
sub
sub
add
mov
fdivr
mov
out
gs
push
sub
test
jne
movsb
and
xchg
xchg
or
push
jmp
add
jmp
ja
pop
sub
fisttps
ds
pop
and
xchg
jmp
xchg
add
push
cmp
add
jae
pop
test
cmpsl
imul
or
xor
aam
test
fidivl
rol
iret
iret
adc
pop
mov
and
cs
inc
lods
xchg
jnp
popa
aam
mov
push
or
ljmp
imul
es
mov
sbb
lcall
in
cli
inc
bound
inc
adc
sti
ds
in
insb
pusha
add
add
mov
push
fisttpl
push
or
mov
stc
dec
push
inc
dec
pop
into
mov
mov
lret
mov
iret
fisubs
daa
cli
mov
lahf
dec
sub
mov
aaa
adc
and
jns
xchg
and
dec
iret
push
add
pop
mov
jae
jno
clc
ljmp
lret
xlat
add
push
scas
dec
lret
push
test
dec
fs
fcmovb
popf
repnz
adc
adcb
aad
testb
int3
out
mov
sub
ds
sti
dec
aad
mov
je
dec
xor
xchg
sbbl
fisubl
outsb
mov
out
adc
mull
and
push
out
sub
aaa
movsl
mov
call
cmp
ret
in
adc
mov
cs
into
sbb
jecxz
js
sahf
cmc
fistps
mov
adc
xchg
dec
iret
or
xor
cs
adc
aad
inc
ds
nop
xlat
cmp
lahf
es
or
xor
inc
out
cmp
cmp
mov
xchg
and
or
iret
arpl
dec
jnp
aas
cmpsl
jge
jmp
push
int3
sbb
jo
adc
pushw
pop
xchg
or
adc
lods
fwait
das
adc
mov
jnp
test
sbb
das
popf
fbld
add
jp
add
pop
add
mov
push
mov
les
fbld
stc
sbbb
jp
xchg
cmp
add
pop
adc
je
jl
inc
inc
loope
add
inc
aaa
cltd
jae
mov
rcll
pop
sbb
sub
outsl
mov
aas
iret
xchg
enter
lods
mov
mov
adc
lock
sbb
outsb
rcrl
test
xlat
dec
fnsave
xchg
shlb
inc
jle
popl
out
test
std
jne
fdivl
add
pop
aaa
shlb
arpl
jl
out
inc
cwtl
pop
sbb
mov
adc
mov
jmp
push
xor
inc
pop
xor
xor
xor
inc
movsl
bound
in
push
scas
lods
ja
icebp
lret
and
cmp
push
lcall
add
cmc
std
xchg
sarl
clc
pusha
jecxz
sbb
xchg
xchg
ret
xor
mov
sbb
add
dec
aas
jecxz
pop
adc
push
sbb
movsl
or
js
or
cmp
inc
push
inc
mov
into
or
scas
mov
jmp
sub
maxps
ret
test
lock
cltd
pusha
adc
stos
sbb
jno
sti
clc
aas
data16
dec
adc
fcoml
cmc
mov
push
xlat
cmp
aad
push
dec
mov
mov
jecxz
mov
xor
jb
cmp
data16
adc
sbb
mov
nop
mov
out
xchg
pusha
punpckhdq
mov
mov
sti
cwtl
movsl
mov
adc
daa
inc
into
fwait
les
sbbb
ret
xor
pushf
lahf
cmp
insl
ret
pop
or
int3
inc
mov
pushf
test
aam
cwtl
enter
lret
pop
xor
push
mov
loop
fadds
bnd
outsl
outsb
sahf
mov
addb
cmpsb
jno
xor
cwtl
nop
mov
scas
ja
movsb
sahf
jns
lret
pop
call
cmp
mov
push
sub
xchg
das
jne
imul
push
stc
mov
jmp
js
rcrb
mov
stos
sub
add
aas
jbe
popa
test
jl
xchg
adc
or
adc
test
movsl
dec
pop
xchg
push
dec
rorl
fcmovb
jl
mov
bnd
sbbb
lret
int
cmpsb
insb
push
mov
incb
xor
lock
jo
or
pop
cmp
dec
insb
int3
mov
cmp
out
addr16
xor
sub
xchg
movswl
pop
pop
adc
aas
jns
cmp
stos
out
cli
cmp
rcr
aam
mov
test
incb
push
mov
movsb
add
into
mov
cmpsl
push
xor
adcb
or
jmp
in
shrb
sbbb
mov
push
sub
cmp
sbb
fwait
fs
add
into
jecxz
imul
cltd
sbb
ret
clc
mov
jp
add
out
mov
push
stos
jge
ror
rcrb
pop
clc
filds
xchg
popa
in
hlt
xchg
icebp
inc
adc
sub
dec
jns
add
scas
xchg
shrb
aad
fistl
fs
xchg
or
inc
movsl
scas
sub
stos
mov
mov
pop
cmp
fistpll
bound
lods
lahf
jle
sub
or
aas
mov
jmp
xorb
dec
xlat
mov
cmp
and
or
sub
loope
cwtl
sbb
mov
pusha
scas
push
leave
xchg
loop
xor
add
cmp
popa
push
daa
mov
dec
test
dec
or
into
cli
xorb
jae
adc
fmuls
pop
mov
sbb
clc
popf
test
adc
nop
arpl
or
sub
xchg
jle
mov
inc
xchg
xchg
and
pop
cmpsl
adc
rorb
fadds
dec
enter
sbb
pop
mov
int3
add
sub
adc
sbb
or
jne
cwtl
jmp
loope
stos
jmp
push
cmp
pop
and
xchg
dec
sbb
in
xchg
cmpsb
mov
iret
jne
fisubl
mov
imul
addl
dec
js
iret
add
insl
inc
push
pop
test
sbb
adc
subb
jl
lcall
lods
ljmp
xor
or
mov
jg
data16
pop
add
sub
xchg
sub
jmp
gs
stos
push
je
add
enter
push
je
lahf
fidivrl
pop
mov
fdivrs
dec
ret
stos
jnp
cmp
mov
pop
ror
bound
mov
jl
push
xchg
and
xor
xchg
sarl
mov
jne
sbb
pop
sbb
ret
add
push
push
jl
and
sbb
sti
mov
ret
flds
or
es
clc
xor
std
sbb
rolb
nop
mov
mov
fwait
jp
arpl
push
in
aad
insl
adc
int
enter
adc
insl
xor
fistpl
addr16
leave
js
sar
dec
rcr
clc
pop
push
out
mov
rorb
mov
test
xlat
or
sbb
rolb
aam
orb
mov
push
bound
repnz
mov
xlat
push
or
push
mov
imul
jne
push
stos
adc
adc
inc
xchg
push
fstpt
jns
out
sbb
in
fs
push
pop
xor
sub
or
mov
loop
adc
insb
pusha
add
loopne
aad
addr16
lahf
sub
or
cmc
add
popf
inc
pop
andl
test
repz
repnz
mov
hlt
leave
stos
mov
das
subl
jb
inc
pop
ja
dec
jae
out
xor
nop
push
or
psadbw
mov
shrl
dec
mov
and
shrl
mov
popf
mov
inc
int3
js,pn
scas
mov
imul
inc
add
mov
xor
out
cmp
push
or
aad
dec
adc
aam
cli
xor
bound
mov
jno
insb
std
adc
roll
lcall
adc
and
int
or
dec
mov
test
xchg
cmp
fmull
stos
leave
dec
jbe
sbb
ficoms
cltd
pushf
cmp
xchg
fs
outsl
sub
enter
inc
subl
int
jle
jb
xchg
sub
push
dec
mov
cld
xchg
mov
mov
inc
dec
aad
cmp
inc
mov
aad
stc
ljmp
popa
add
rcrb
dec
cmp
jb
adc
fiadds
pushf
roll
int3
push
repnz
push
adc
loopne
xchg
mov
sbbl
adc
inc
sbb
pop
lods
popa
or
adc
mov
cmp
out
xor
cmpsb
pop
xchg
dec
pop
rorb
xchg
jo
lret
push
or
sub
cmp
xor
push
mov
xor
xchg
adc
call
dec
incb
xchg
pop
pop
in
movsb
push
aaa
test
int
mov
cmpsl
cmpsb
jno
sbb
mov
rol
pusha
dec
in
icebp
jmp
je
or
aam
mov
push
push
rclb
dec
fisubl
jo
push
rcll
xor
cwtl
adc
xlat
inc
push
cld
mov
push
cmp
cmp
mov
pop
inc
movsb
add
cmpsb
aad
inc
sbbl
jmp
fsubl
in
scas
adc
nop
clc
pop
lods
mov
rcr
push
jp
sbb
loop
sbb
lret
dec
aaa
push
add
or
cmp
mov
add
dec
lds
push
rcll
dec
scas
adc
sub
pusha
and
shlb
sarl
shrl
fwait
in
cwtl
add
jne
subl
and
out
push
fs
cli
subb
push
or
lcall
popa
and
mov
repnz
fbstp
cmpsb
inc
push
sbbl
fcomp
out
and
jne
aas
pop
dec
add
inc
ja
push
dec
or
pop
xchg
fisttpll
pop
cmp
in
dec
inc
push
adc
int3
stos
xlat
cltd
sub
sahf
mov
pop
repnz
test
sti
call
sub
and
jg
inc
xchg
sub
fs
inc
test
adc
repnz
lods
ds
add
out
inc
cmpsb
add
and
stc
or
mov
out
sbb
xchg
negb
fstpl
jmp
mov
js
and
cmp
or
and
push
pushf
out
mov
jmp
sub
pop
mov
add
div
or
pop
int
jb
inc
adc
cwtl
dec
pop
sub
add
sbb
xchg
pop
adc
cmp
dec
aaa
sbb
icebp
sub
inc
mov
xchg
xchg
mov
adc
ficomps
fbstp
jle
pop
enter
mov
lock
arpl
cltd
inc
cmpsl
idivb
call
popf
scas
dec
mov
jae
xchg
shrb
dec
adc
ffreep
js
jne
xor
adc
inc
inc
cmp
rclb
mov
mov
cwtl
out
and
stos
dec
imul
cmp
mov
or
insb
incl
ud2
sbb
inc
cmpb
fldcw
mov
jmp
stc
mov
inc
lods
push
mov
scas
cmp
push
loop
call
lods
dec
popa
or
add
inc
push
adc
outsb
into
mov
push
gs
fstpt
mov
ja
pop
test
std
sti
fucomip
push
mov
jecxz
push
jns
lea
mov
adc
popf
inc
push
or
int3
push
out
cmp
mov
leave
mov
out
jp
loope
cmpsl
pop
fildll
es
rcl
shr
pop
xor
jbe
out
cmp
add
push
pop
xchg
xlat
fdivr
or
jns
pop
enter
mov
test
insb
rcrb
ljmp
std
cmc
dec
push
xchg
or
push
iret
pop
repz
cli
addr16
pop
push
jo
xor
sub
mov
jge
enter
jg
orl
scas
xor
jge
push
movl
adcl
fs
jno
xor
pop
sub
push
xchg
sbb
cmp
jmp
int
mov
leave
fcmovb
pushf
cmp
or
cmp
xor
and
and
imulb
xchg
xor
pop
addr16
outsb
xchg
pop
lock
inc
sbb
mov
dec
xor
sbb
in
std
sbb
aam
gs
xchg
sub
psrad
pop
out
sbb
enter
aaa
mov
je
loopne
lret
je
pop
sub
xor
in
xor
and
das
fdivrl
push
cs
test
jnp
into
xlat
push
in
ror
mov
cmpb
pop
sbb
fwait
inc
rcl
scas
add
push
clc
out
das
jae
scas
mov
mov
push
and
push
pop
xor
mov
popa
adc
arpl
jp
hlt
test
cmpl
add
cmp
and
mov
pop
mov
insb
bound
aaa
nop
fisttps
stos
cs
sub
mov
lret
mov
xchg
pusha
push
dec
les
pop
negb
mov
outsl
xchg
out
xchg
and
push
lahf
dec
cmp
inc
ret
flds
das
adc
xchg
mov
jmp
loop
sbb
pop
insb
imul
jnp
mov
inc
ja
jp
mov
push
icebp
cld
fimuls
mov
out
cmp
jne
hlt
imul
ffree
push
dec
ja
pop
sbb
in
or
lods
leave
sub
adc
out
mov
into
rolb
push
dec
push
movsl
mov
in
addr16
push
sahf
sbb
xlat
popf
jl
push
sahf
test
test
sub
mov
es
hlt
imul
jg
int3
test
xor
leave
inc
shlb
inc
push
sbb
insb
shl
mov
adcb
insl
sbb
push
jp
gs
orb
xchg
lods
dec
shll
push
cmp
inc
pextrw
push
mov
inc
sub
clc
cmp
aaa
enter
sub
and
loope
leave
jb
shll
xor
cmp
orb
mov
adc
imul
js
stc
cmc
push
pusha
push
jl
xor
aaa
aad
popf
jne
imul
jmp
xchg
pop
mov
or
sbb
nop
adc
rol
fwait
data16
xor
xor
lret
adc
pop
ficomps
mov
pop
fiaddl
adc
pop
or
sbb
in
jl
ficoms
dec
int
push
jl
in
or
jmp
sahf
xchg
jmp
push
xchg
lcall
icebp
mov
les
loopne
mov
movsl
out
test
stc
test
pusha
pop
in
test
cld
xchg
push
hlt
jp
iret
sar
scas
shll
stc
leave
stos
hlt
insb
lcall
call
dec
sbb
shrl
push
jge
lock
fmul
std
jne
outsl
or
dec
repnz
xlat
or
add
jp
pop
bound
xor
mov
negl
sbb
bound
cmp
mov
and
shrb
inc
mov
cwtl
shll
mov
addb
mov
pop
pop
jae
ss
mov
pop
jbe
clc
call
xchg
ljmp
addl
sub
add
mov
arpl
dec
hlt
aaa
lods
dec
jns
xor
mov
aad
xlat
mov
mov
std
fisttps
mov
inc
rcrl
adc
push
cld
sub
cld
jbe
aam
cmpsb
int3
rorb
mull
fwait
or
std
push
cmpsb
dec
jecxz
mov
std
pushf
shlb
xor
adc
icebp
xor
shrb
jns
shl
cmp
jnp
mov
cmp
shl
outsb
mov
sbb
into
enter
xchg
push
xor
cmc
cmpb
movsl
mov
out
mov
outsb
les
adc
and
cmp
aad
out
ljmp
loop
pop
mov
mov
nop
sar
dec
mulb
xor
lock
sbb
jmp
rclb
leave
sub
and
loop
cmp
pop
fwait
push
xchg
xchg
aam
cmp
out
xor
dec
pushf
mov
add
fnstenv
iret
sbb
dec
add
repnz
fnsetpm(287
or
cmp
mov
inc
test
cmpsb
or
nop
lock
pop
aas
lcall
mov
sbbb
fsub
bound
sbb
sbb
daa
xchg
out
mov
sub
cmpl
addl
add
pop
nop
mov
jecxz
add
data16
dec
js
or
xchg
add
hlt
cld
jo
or
sbb
jb
push
mov
or
mov
push
lahf
add
adc
push
cmpsl
stc
push
jne
mov
test
adcb
dec
je
push
adc
adc
xchg
or
orb
jae
cmc
inc
test
mov
sahf
out
cmp
sbb
rcll
add
jb
lods
dec
xchg
xor
jle
pop
imul
push
add
sahf
sub
jb
je
inc
cld
cld
popf
test
jns
dec
cld
xlat
add
inc
adcl
mov
xchg
jb
int
scas
jmp
cltd
pop
ror
repz
ss
jae
lock
pop
leave
sahf
mov
fdivs
dec
insl
sti
adc
mov
and
bswap
add
cmp
into
push
scas
std
call
or
lahf
push
dec
mov
and
call
cmpsb
daa
push
movsb
xchg
lea
sbb
repnz
in
mov
mov
out
popf
cs
jae
cmpsb
rcll
ret
cmc
jae
xlat
fildll
xchg
jno
dec
lcall
sub
arpl
adc
insb
testl
je
inc
std
xchg
pop
push
jnp
sub
in
ljmp
test
push
std
cmc
ja
or
pop
and
mov
mov
pop
out
fcomp
daa
push
daa
insb
rorl
ds
jge
dec
xchg
add
lahf
push
test
xor
out
xchg
out
add
fdivp
mov
mov
pop
or
sbb
sub
sub
cli
pop
inc
data16
and
cmpsb
and
jle
adc
jb
nop
mov
call
pushf
imul
movsb
push
cmp
gs
sub
in
mov
dec
arpl
dec
pop
add
adc
inc
push
xor
fnstsw
in
cmp
jg
in
pop
or
sub
cs
inc
insl
cltd
pop
ljmp
xor
aaa
enter
repnz
mov
jecxz
xchg
hlt
pop
aam
daa
xor
mov
sub
jp
mov
rorl
std
xchg
addr16
rclb
push
push
adc
outsl
cld
xor
xchg
inc
scas
or
add
enter
jns
sarb
subb
pop
ja
and
or
addr16
je
data16
enter
pop
mov
push
loopne
jge
inc
jnp
mov
cld
mov
aaa
pop
cmp
dec
sahf
hlt
sub
ret
ja
sarl
xchg
test
jnp
mov
cltd
sbb
cmp
ss
fst
call
cmc
sub
or
test
sbb
dec
lea
pop
mov
and
and
adc
mov
push
lods
jae
repz
jae
pop
dec
adc
adc
mov
enter
mov
in
mov
icebp
lret
outsl
xlat
pop
add
rcrl
pop
dec
pop
inc
popf
lea
dec
inc
dec
jns
pop
cltd
insl
mov
dec
sbb
loopne
jns
xor
xchg
sti
test
sbb
das
mov
inc
scas
and
xor
nop
dec
out
jo
je
dec
testb
jl
lcall
sub
lcall
pop
movsb
sub
fs
sti
inc
lret
push
xor
add
adc
in
hlt
jnp
dec
aam
movsb
sub
fs
sti
inc
lret
push
xor
add
adc
in
idivl
dec
aam
movsl
sub
sbb
je
dec
lret
push
sub
fwait
cld
imul
dec
dec
cld
pop
movsb
sub
fs
push
out
lret
push
lods
push
and
sbb
cltd
inc
test
ja
daa
mov
inc
or
lea
xchg
cmpsb
dec
rcrl
jns
jns
mov
cltd
push
test
mov
inc
jmp
xchg
sbb
dec
clc
pop
imul
cltd
shrb
jmp
xchg
sbb
sub
push
cmp
cltd
inc
in
jmp
mov
mov
push
lret
repnz
fcoml
clc
fxch
inc
int
mov
jo
mov
mov
cmpsb
cltd
popa
jge
stos
or
cwtl
pop
cmpsb
outsl
fcom
int
push
mov
or
pop
mull
cmp
dec
push
cltd
push
mov
push
es
inc
cmc
jbe
mov
jmp
adc
data16
cmpsl
test
or
je
data16
cli
lret
lods
fldenv
roll
mov
lcall
cmp
mov
xchg
jmp
cmp
sub
adc
test
pop
pusha
mov
cmp
sbb
lcall
leave
push
flds
jbe
hlt
or
cmp
imul
pop
testl
add
inc
adc
cmp
orb
fldl
dec
lods
add
adc
pop
adcl
in
xchg
add
xchg
jmp
out
pop
cltd
dec
mov
flds
jbe
or
cmp
imul
cltd
push
test
push
flds
jbe
or
cmp
imul
pushf
push
and
jmp
mov
fisttps
cld
stos
daa
xor
push
jge
scas
fnsave
jmp
into
add
imul
jle
negl
out
pop
add
push
jecxz
jl
and
ffree
dec
addl
pop
js
test
call
fsubrs
fs
jnp
lahf
lods
dec
add
cli
mov
lcall
or
or
stc
mov
pushf
sub
adc
insb
loop
dec
jg
sbb
shl
inc
mov
iret
mov
mov
mov
repnz
pushl
sbb
inc
adc
je
aam
dec
pop
push
add
push
popl
xchg
insb
sub
mov
dec
adc
xor
insl
test
out
sub
call
nop
in
xchg
and
or
push
push
xchg
int3
dec
push
sbb
adc
pop
pushf
mov
mov
loop
jnp
pushf
mov
and
xor
hlt
pop
jle
lock
jns
in
xchg
xor
cmpsb
lret
xchg
xor
xchg
cmp
int3
fcomps
ja
out
out
addr16
loop
sbb
cmpsl
insb
jnp
add
cmpl
stos
xchg
lret
lea
inc
push
mov
cltd
inc
sub
lods
sub
clc
ljmp
lret
sbb
mov
push
sub
or
sbb
pushf
data16
test
cmp
jnp
mov
test
and
mov
push
xlat
addr16
cld
gs
pop
mov
or
mov
add
push
mov
mov
iret
adc
inc
pop
dec
pause
xlat
jb
xchg
jg
and
mov
scas
je
insl
je
loope
mov
mov
je
test
movsl
add
icebp
popf
mov
stos
xchg
mov
lahf
or
sub
push
pop
cmp
fdivr
ljmp
sub
mov
int3
pop
push
sbb
in
in
sbb
imul
inc
lds
sarb
daa
pop
and
pop
imul
mov
clc
bts
jne
xor
mov
pop
or
xlat
int
xor
test
out
ss
push
dec
das
stos
xchg
fwait
addr16
filds
xchg
dec
pop
cs
fstpl
in
jo
jg
push
dec
xchg
mov
inc
mov
fmuls
outsb
and
aas
iret
hlt
lods
dec
cmp
add
add
test
pop
repnz
fbstp
testl
or
lock
sub
push
sahf
ss
jl
ds
sbb
stc
shl
bound
jne
test
sub
orl
popa
inc
std
out
in
adc
call
dec
and
test
ds
push
dec
dec
and
je
aam
scas
stos
pushf
lods
push
sbb
cld
xor
add
cmp
fnstcw
add
mov
or
push
iret
rcrb
inc
jmp
xchg
sbb
push
daa
scas
jb
mov
gs
add
int3
bound
pop
push
cmpl
jp
ss
int3
out
inc
push
jmp
lds
push
xchg
mov
out
adc
movb
dec
mov
mov
pop
dec
shll
jmp
fstl
dec
das
call
pop
mov
dec
cmp
pop
sbb
cs
sub
shlb
pushf
es
int
out
or
in
push
inc
push
rcr
pop
xchg
js
repz
ss
and
sarb
dec
sub
lea
jne
mov
les
jbe
xchg
xchg
jno
mov
cmp
sti
sbb
sbb
scas
add
movsl
lcall
inc
cwtl
and
inc
nop
test
pop
sbb
adc
pushf
addb
adc
cmpsl
idivb
repnz
adc
push
popa
aad
xchg
push
aaa
es
dec
and
xor
fisubrs
fidivs
jmp
sbb
adc
push
add
in
and
testb
push
lods
sbb
push
fldt
je
adc
adcl
lods
xchg
cmp
pop
mov
pop
xchg
dec
dec
jae
stos
push
jmp
imul
sub
fdivr
clc
arpl
ret
in
dec
outsl
inc
into
loope
xchg
mov
push
je
aam
xchg
cwtl
mov
lahf
xor
xchg
ss
daa
mov
scas
gs
mov
add
incl
addr16
jns
ja
xor
loopne
lea
xchg
fiadds
and
jns
mov
inc
add
jb
lahf
cmpsl
sub
cmpsl
outsl
and
jbe
out
cmp
test
aaa
and
sbb
imul
push
dec
int
cmp
iret
pop
push
cmp
pop
push
movsl
gs
mov
sub
mov
lret
cld
pop
mov
into
cmpsb
rorb
incb
test
mov
sub
stos
jecxz
pop
mov
fs
dec
mov
inc
mov
or
or
add
dec
dec
out
and
mov
mov
es
dec
add
ficoms
jns
jge
es
fidivrs
movb
and
mov
mov
push
sbb
jo
pushf
cmp
lods
nop
shll
mov
mov
mov
adc
pop
mov
mov
xacquire
cld
adc
adc
push
cmp
ljmp
nop
imul
mov
and
dec
rcrl
ret
addb
pop
cmc
mov
mov
xchg
add
loopne
adc
xor
insl
dec
loop
cli
scas
pusha
xlat
add
ret
ficompl
push
add
in
je
push
test
mov
stc
pushf
mov
add
add
adc
jns
ljmp
aad
adc
movsl
out
insl
lret
jno
push
jle
xor
outsb
out
das
ljmp
and
lahf
xor
rorb
fildll
cmpl
xor
ja
popa
add
inc
inc
xchg
enter
or
sbb
pop
push
cmpsb
arpl
xor
or
fwait
sbb
imulb
test
jg
sub
and
mov
repz
mov
pop
lcall
mov
xchg
outsl
mov
xchg
jb
jl
cli
andb
jns
cli
test
fsubs
pop
loope
adc
and
or
js
addr16
xor
fnsave
gs
mov
or
or
xchg
aad
cmp
adc
out
imul
push
lea
mov
movsb
ret
sbb
sbb
loopne
repnz
arpl
sbb
mov
out
sbb
sbb
mov
mov
jns
cwtl
mov
xlat
rolb
repz
jno
stos
ret
mov
pusha
loope
jmp
mov
mov
lcall
mov
pop
movsl
iret
cmp
jnp
dec
popa
push
xor
jb
mov
je
push
sti
das
pop
jns
push
aam
mov
sbb
xchg
lcall
mov
ret
sub
cmp
dec
call
lret
jb
aaa
inc
bound
popa
mov
mov
cld
pop
push
cmpsl
mov
roll
jge
mov
enter
stos
std
lret
es
aam
std
outsl
sub
or
inc
sub
cmpsl
cli
fs
mov
hlt
lcall
rolb
jnp
mov
inc
cmp
divl
pop
call
aas
repz
xchg
push
cmpsl
push
xor
sbb
call
sub
mov
jp
lds
adc
or
cmpl
add
dec
mov
std
outsb
leave
mov
xchg
mov
sbbb
add
dec
jnp
leave
xchg
movsb
loop
pop
out
pop
push
xor
cld
pop
pusha
fstp
and
fisubrl
dec
lock
cmp
cltd
xchg
outsl
mov
mov
wbinvd
daa
cmp
jecxz
iret
aam
fldl
xchg
cmp
into
outsb
repz
xorb
rcr
push
pop
cld
mov
sub
jmp
cmc
pop
testl
int
enter
fiaddl
incl
add
sbb
inc
lret
push
test
push
into
in
bound
adcb
sti
mov
cltd
sub
lret
imul
push
inc
ficomps
or
jae
repz
test
cmp
lcall
addr16
out
sub
xchg
ds
pop
addr16
enter
xchg
jmp
adc
and
pop
inc
sub
fld
cmp
dec
xchg
pop
dec
sbb
outsb
dec
xchg
imul
int3
into
fnstcw
and
sub
pop
mov
iret
fcomip
std
mov
cmpsl
test
or
loope
cmp
inc
nop
sti
repnz
push
hlt
repnz
js
cmp
and
mov
lds
xor
xlat
inc
arpl
pop
add
cmp
das
int3
pop
unpckhps
or
push
jle
mov
outsb
pop
ss
arpl
push
sub
out
xchg
js
mov
loopne
xchg
imul
pop
insb
ss
mov
fldenv
add
push
jp
sbb
aas
adc
repnz
dec
xor
scas
sahf
xlat
sub
xor
out
ror
rcr
xorl
cmp
push
mov
push
not
lcall
adc
fwait
add
ss
jno
inc
jmp
scas
xchg
loopne
mov
add
mov
sti
icebp
mov
imul
push
dec
adc
mov
iret
stc
rclb
inc
pushf
stos
out
idivb
test
xchg
out
cmp
push
fidivs
ret
mov
addb
shlb
stos
xchg
enter
pushf
int3
fisubl
pop
ret
mov
ret
sub
fwait
xchg
into
icebp
into
pop
sbb
dec
sbb
rcrb
sbb
cmpsb
outsl
mov
repnz
xchg
int3
mov
test
xchg
jecxz
push
xor
stos
or
scas
lret
jo
lock
cmp
ret
sub
add
scas
pusha
movsb
scas
jg
cmpsl
mov
dec
inc
mov
sbb
fsub
mov
bound
mov
cmp
xchg
int3
add
mov
out
sbb
inc
push
fcoms
idivb
lock
fisttpl
data16
shrb
lds
add
repz
add
sbb
aaa
mov
repz
lock
mov
fiadds
sub
xlat
ret
mov
xor
daa
jno
scas
fldcw
out
xchg
cmp
and
nop
cmp
call
cli
jl
mov
fimull
lods
inc
pop
nopl
addb
mov
xorl
popa
push
sarb
in
js
cmpsl
test
shl
lahf
in
add
rcr
jmp
and
xchg
out
xchg
sbb
and
cmc
add
sbb
dec
imul
cmp
ljmp
inc
fucomi
stos
ja
xchg
int
push
test
ljmp
push
sbb
pop
xorl
cs
xchg
mov
sub
outsb
inc
mov
jp
pop
adc
mov
sub
call
pusha
out
rcrb
mov
mov
cmp
xor
dec
cmp
xor
iret
pop
outsb
ficomps
and
add
jne
fcoml
sub
jae
sbb
mov
in
addb
inc
sub
adc
dec
outsb
mov
ljmp
mov
lds
stos
mov
sbb
shrb
dec
ja
xchg
mul
ljmp
in
pop
pop
add
pop
lock
mov
lahf
or
adc
cmpsb
inc
sub
jl
js
adc
repnz
jns
sub
popa
jge
mov
mov
fsubr
xchg
jb
notb
push
aaa
outsb
mov
push
sub
sub
test
mov
pop
mov
pop
adc
out
fistpl
mov
push
fnsetpm(287
cpuid
sub
test
repz
xchg
mov
ret
ss
jne
inc
lods
xchg
dec
call
psubusw
pop
dec
mov
fistpl
pop
jecxz
shrl
or
fstpt
jle
cmpsl
and
jecxz
les
or
lret
subl
and
pop
dec
test
cmp
mov
mov
xor
mov
in
ds
mov
sbb
cli
cli
aad
imull
lcall
imul
mov
test
mov
cmp
ja
dec
outsb
pusha
xor
or
ljmp
imul
cmpsl
test
adc
push
or
incb
pop
mov
lods
cmp
sbb
ret
jo
inc
dec
xchg
and
aam
sub
mov
mov
lret
movsl
dec
adc
ss
rorl
imul
mov
scas
sbb
sub
push
pop
xlat
stos
fs
xchg
jbe
inc
push
jae
insb
xor
add
dec
nop
orl
dec
push
adc
imul
mov
mov
fucomip
add
icebp
outsb
addr16
mov
cmp
sub
int3
fucomp
pop
mov
ret
lds
xchg
psllq
jl
xchg
push
stc
aas
cwtl
movsl
mov
mov
int
cmp
and
in
lock
push
and
push
shll
lds
xchg
std
mov
test
notb
and
cmpl
fldln2
sub
jecxz
pop
cmp
insl
shl
ljmp
or
jb
test
push
adc
loopne
sbb
imul
xor
loope
push
adc
mov
jle
leave
fdivrs
repz
inc
sbb
arpl
movsl
imul
dec
leave
andl
push
mulb
xchg
sub
outsb
cmp
push
mov
jp
int
pushf
mov
imul
mov
lret
adc
mov
std
mov
dec
or
and
aam
out
call
ret
jp
or
imul
inc
sbb
inc
rcr
fcmovnb
or
mov
aam
je
fcos
rcrl
test
push
lcall
xor
jp
xchg
test
fbstp
push
pushf
add
aas
lods
xchg
adc
and
inc
pop
push
mov
adc
inc
xor
stos
mov
pop
and
outsl
fisttps
xchg
test
nop
gs
movsl
negb
dec
pop
insb
mov
in
fsub
data16
push
push
pop
lods
mov
and
xchg
gs
sbb
jge
mov
push
sarl
cmp
mov
xchg
xor
arpl
cmpsl
pushf
stos
inc
scas
sahf
mov
rep
addl
test
mov
xchg
pop
and
adcl
stos
outsl
mov
dec
mov
in
jecxz
or
stos
imul
or
inc
xor
sub
push
push
jg
lock
jecxz
das
cmc
mov
jl
int3
rcll
outsb
enter
and
push
mov
jg
and
dec
push
fwait
mov
loope
xchg
adc
repz
notb
in
fs
imull
lock
mov
int3
cmp
xchg
leave
fmul
cwtl
ja
push
or
cmp
aaa
out
mov
fcomps
call
cli
ret
pop
push
push
and
pop
mov
sbb
add
mov
ds
outsb
sub
sbb
jo
cld
roll
adc
call
in
popa
or
sbb
testb
mov
pop
jno
and
adc
bound
cmp
or
xchg
jb
sbb
test
xor
negb
repnz
pop
sub
ds
addl
ds
mov
dec
and
cmp
repnz
sub
jp
cmc
outsl
pop
out
xchg
and
loope
out
cmpsb
xor
sub
adc
leave
aad
dec
and
pop
and
imul
dec
jo
mov
mov
adc
jb
lahf
into
outsb
sbb
in
jle
adc
ljmp
ss
ja
pop
jbe
sti
out
js
dec
out
in
hlt
into
or
dec
dec
shrb
or
lods
inc
push
mov
jge
sbb
sub
fildl
rol
mov
shr
xchg
pop
xchg
and
xchg
adc
setns
rolb
xlat
sbb
stos
jecxz
popa
push
mov
sbb
jae
sub
loopne
jmp
mov
cmpsl
decl
push
and
jnp
mov
mov
mov
in
aad
mov
cmpsb
clc
aam
call
gs
pop
xchg
lret
cmp
xchg
xchg
ret
xchg
in
imul
ja
mov
mov
xchg
and
in
ss
push
lods
xlat
mov
mov
inc
repz
jbe
imul
sti
out
jnp
and
imul
mov
cmpl
addr16
fsubl
sub
sbb
stos
sub
std
mull
orb
mov
cmpsb
sub
out
sbb
push
jp
add
nop
mov
inc
movsb
es
cmp
aad
out
sbb
test
pop
or
hlt
jbe
js
xchg
adcl
add
pop
mov
lods
inc
pop
push
into
cmp
lahf
xor
stos
mov
add
mov
dec
leave
xchg
adc
arpl
fimull
in
and
enter
lahf
mov
mov
imulb
movsb
out
fwait
ss
mov
cmpb
repz
aas
pop
pop
or
mov
loope
and
fwait
popf
shlb
xor
fs
pop
mov
sbb
inc
sahf
orl
fwait
test
scas
movsb
dec
out
pop
rolb
jo
push
dec
cmc
sub
or
mov
cmp
sahf
loopne
mov
sub
sti
or
mov
loope
rcl
in
mov
mov
mov
repnz
nop
push
jae
pop
jae
inc
into
push
std
aad
sbb
arpl
scas
jecxz
and
mov
sahf
cmp
inc
outsl
add
fildl
jmp
jle
inc
test
lods
dec
sarb
js
sub
roll
push
pop
fsub
add
and
lock
iret
add
shll
shrb
call
sbb
nop
xor
and
pop
jae
loope
add
repnz
inc
div
dec
test
pop
push
std
divb
hlt
mov
loopne
pop
add
dec
jno
inc
and
call
push
mov
loopne
test
outsb
fsub
sbb
jg
xlat
fwait
movsl
cmp
fsub
jne
movsb
mov
in
imul
fistl
insl
adc
push
sbb
das
cli
cmpsb
mov
sar
push
mov
dec
fmull
sub
pop
aas
mov
lret
cmp
cld
inc
mov
icebp
lret
xchg
dec
mov
mov
jmp
imul
pop
adc
movsb
jo
jmp
pop
or
adc
cltd
int
dec
push
inc
push
frstor
nop
lea
ds
push
and
xlat
aad
mov
push
in
ljmp
aam
sbb
mov
and
aad
pop
pushf
jnp
sub
fistps
fs
icebp
sbb
sbb
rcll
das
dec
ror
and
pusha
adc
push
push
dec
dec
xchg
mov
push
repz
cwtl
jl
outsb
loopne
jo
fdivs
jo
pushf
push
push
aam
les
leave
push
ret
into
push
cmp
dec
std
pushf
push
int3
aam
ljmp
shlb
pop
xchg
leave
ret
mov
mov
cltd
push
sub
mov
test
das
jne
xor
test
int3
or
cmp
dec
or
movq
push
push
lea
and
adc
cmpsb
lahf
dec
orb
lods
jnp
mov
in
pop
pusha
es
ja
or
test
std
out
xchg
sarl
sahf
push
into
or
adc
in
int3
dec
outsb
pop
or
mov
and
mov
jp
inc
sbb
insb
xlat
mov
xchg
sti
pop
sbb
aam
mov
jbe
sub
fdivr
jo
push
cld
xchg
cli
in
mov
cmpsb
pop
pop
out
cld
fstl
mov
pushf
xchg
xchg
pop
daa
std
adc
cmp
and
ljmp
sti
addr16
addr16
push
fwait
xchg
mov
sahf
or
sub
pusha
mov
roll
add
dec
or
bnd
outsl
pop
dec
dec
and
out
inc
std
cli
out
push
inc
or
addr16
sub
mov
mov
mov
pop
xor
lea
xor
lock
imul
adc
push
cmp
xor
aam
cmp
mov
inc
jmp
xchg
sbb
dec
pop
imul
cltd
push
test
push
flds
jbe
or
cmp
imul
cltd
or
push
fldcw
or
cmp
imul
cwtl
loop
sarb
inc
jmp
imul
sarl
scas
sarl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
in
mov
lret
lock
daa
lods
pusha
and
adcl
add
add
push
add
inc
add
xor
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
nop
add
add
add
sub
roll
add
add
push
add
add
add
and
add
adc
testb
add
int3
add
add
mov
add
add
add
add
pop
add
add
add
sbb
roll
roll
movsb
add
add
add
push
add
add
add
insb
add
add
add
add
add
add
add
add
pop
add
add
and
insb
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
bound
sub
push
add
add
add
movsb
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
or
bound
xchg
add
add
add
xor
iret
add
or
movsl
add
add
add
add
adc
add
add
add
add
cmp
add
add
push
add
and
addl
or
aas
add
add
add
add
add
popf
add
int
add
sub
add
add
add
add
jo
insl
add
add
add
xor
add
add
add
add
add
stos
add
add
add
add
add
add
add
add
jb
xor
add
add
add
inc
add
test
xor
add
add
add
add
add
cmp
mov
add
pop
add
add
popf
add
add
cmp
jns
scas
add
enter
pusha
add
roll
cwtl
add
roll
push
add
add
and
add
or
add
add
add
outsb
add
mov
add
add
add
add
sbb
pop
add
push
add
add
add
bound
add
in
add
add
sub
mov
bound
xor
lock
add
sub
adc
mov
add
popa
add
add
add
cmp
out
ret
add
add
add
add
add
add
add
filds
jno
enter
mov
inc
add
scas
add
add
add
aas
add
add
add
add
add
add
and
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
addb
add
add
add
add
add
sbb
add
add
add
add
mov
pop
add
sub
cmp
push
add
add
sbb
roll
pop
add
add
add
aaa
add
add
add
pop
add
add
stos
jge
sbb
loopne
add
es
out
rcrl
push
sbb
rcll
dec
imul
out
lret
cmp
dec
movl
pop
gs
mov
add
mov
scas
cmpsb
or
sbb
inc
dec
nop
repz
sbb
xor
shlb
mov
add
pop
sub
decb
jle
repnz
movsl
push
scas
scas
pop
mov
outsl
into
shlb
lcall
xchg
xchg
push
sti
jl
insb
fcomps
incl
arpl
call
push
scas
jecxz
push
push
lods
mov
fincstp
and
test
data16
cs
push
lods
cmp
jbe
mov
int
xchg
jge
test
xor
mov
jmp
and
add
mov
sbb
or
lock
ret
dec
movsb
mov
adc
fwait
pop
sub
addb
movsl
adc
flds
mov
rorb
fcmovb
nop
mov
jle
add
roll
sub
mov
popa
repz
int
pushl
mov
xchg
or
dec
dec
push
mov
mov
mov
fcom
sub
rcrl
pshufw
jb
push
xchg
scas
mov
repz
rcrl
sbb
sbb
adc
imul
jns,pn
addr16
inc
xchg
es
imul
inc
or
cmp
cmpsl
in
mov
das
in
sahf
pop
mov
mov
aas
in
pop
push
add
shlb
sahf
inc
test
jo
fdivrl
mov
sahf
fists
cvtdq2ps
jnp
into
jbe
push
inc
cmpsl
xchg
sbb
ja
gs
fwait
out
hlt
test
lahf
test
cmpsb
dec
enter
pop
outsb
shlb
jl
xor
test
xchg
sub
jl
pop
lds
mov
shrl
fistps
or
cmp
jb
jle
into
inc
mov
add
hlt
mov
out
nop
fwait
sub
cltd
aad
jecxz
xor
imul
xchg
jmp
rolb
lahf
mov
fs
das
mov
add
jl
xchg
outsl
xchg
xchg
dec
jno
pop
sar
je
xchg
ss
mov
or
cmp
in
js
clc
dec
stos
jb
cmp
jbe
pop
popa
mov
xchg
es
push
insb
inc
push
mov
ficompl
push
sbb
bound
push
sbbb
lahf
inc
or
xor
jns
mov
cwtl
in
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
