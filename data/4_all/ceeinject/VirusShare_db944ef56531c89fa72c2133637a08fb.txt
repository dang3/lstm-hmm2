call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
xor
insl
jp
inc
jge
pop
out
dec
mov
std
push
jp
or
cmp
dec
fidivrl
insl
cli
sbb
stos
sub
jp
push
jp
lea
mov
pop
dec
fidivrl
insl
clc
sbb
inc
sub
cmp
pop
out
jae
pop
ret
cmp
dec
mov
lahf
pop
scas
pop
mov
bound
dec
pop
loopne
test
cmp
negb
fs
inc
icebp
lret
mov
mov
ljmp
jo
push
fnstcw
fbstp
fstps
inc
or
xor
cmpsl
filds
out
idivl
ljmp
or
in
inc
sbb
push
inc
inc
fnsave
lret
xchg
in
mov
fistpll
xor
mov
push
fistpll
sub
int
xor
lods
fs
pop
sbb
mov
addr16
shl
int3
sbb
ljmp
add
or
add
dec
sub
insl
lock
jo
cmp
int3
int
std
jp
xor
sub
ficompl
test
inc
cmc
pop
ret
insb
fistps
adcl
stc
imul
pop
aas
fwait
sub
in
test
mov
push
sbb
iret
dec
lods
push
xor
sub
sbb
stos
sub
pop
std
push
jp
or
cmp
dec
fidivrl
insl
cli
sbb
stos
sub
pop
std
push
jp
or
cmp
call
adc
icebp
mov
mov
rclb
cmp
jl
xor
stc
mov
sub
es
push
xor
in
ret
cmc
sub
in
sbb
xor
xchg
bound
popa
icebp
ss
inc
mov
xchg
loop
pusha
iret
leave
daa
js
subb
push
fldl
clc
cmp
das
pushf
movsl
insb
cli
aas
mov
lea
cmp
fstpt
loope
ds
lds
inc
pop
ret
ds
popl
bound
fwait
insb
xchg
scas
and
and
insl
inc
dec
mov
jl,pn
nop
mov
or
adc
adc
popa
push
gs
jge
cmp
mov
or
repnz
movsb
add
push
jmp
or
adc
mov
hlt
pop
jno
mov
aas
filds
sub
push
jl
pminub
decb
push
dec
add
clc
pop
sub
xor
add
mov
loop
xor
xchg
and
xchg
sub
in
fsubl
push
data16
in
xor
lods
out
sbb
movsl
push
jo
xchg
sbb
loopne
pop
mov
lret
mov
rol
cs
add
popf
pushf
jp
xlat
cmp
adc
js
push
loop
sub
pop
fbstp
loop
data16
adc
or
lea
fcmovb
pop
dec
cmp
dec
rcll
or
or
arpl
mov
sub
lret
xchg
lahf
in
cmpl
add
lods
xchg
in
fldenv
test
das
mov
subl
stc
pop
and
xor
add
jl
cmp
cli
mov
gs
push
out
loop
mov
add
test
push
js
mov
xor
cmp
inc
adc
imul
sbb
and
dec
mov
outsb
shrl
movsl
arpl
lea
mov
ret
push
or
sbb
into
adcl
pop
mov
nop
test
add
add
add
adc
lcall
pop
or
cmp
arpl
dec
pop
insb
test
cmp
mov
in
sub
xor
jbe
sub
mov
sub
mov
ds
pop
ljmp
repz
fimuls
xchg
pop
movsl
rclb
out
stos
gs
cmp
inc
ja
lahf
lds
pusha
aad
ss
or
push
and
jo
xchg
mov
push
loop
js
adc
push
pop
mov
sub
pushf
imul
test
insb
sbb
sub
xor
or
xchg
fdivrl
movsb
xchg
lods
aam
and
ret
es
or
cli
xchg
jne
mov
data16
lret
or
hlt
scas
pop
pop
iret
xchg
icebp
stc
movsl
out
mull
mov
cmp
je
inc
sbb
push
aas
clc
or
xchg
repnz
stos
out
adc
pop
xor
jl
imul
test
es
mov
arpl
fbstp
mov
add
mov
dec
rol
rcll
fst
dec
mov
push
or
leave
and
mov
jo
popf
dec
daa
daa
lahf
add
pop
and
aam
pop
ja
outsb
mov
push
lret
cld
mov
in
movsb
fwait
mov
pop
test
xor
cmp
xor
arpl
inc
pushaw
jno
aam
fwait
cmp
pop
out
fwait
mov
xor
stos
add
push
xchg
mov
stc
das
mov
stos
sbb
int3
sbb
rcrl
jo
inc
das
sub
in
ja
mov
push
fucom
dec
addb
outsb
daa
pop
imul
sbb
cmpsl
xor
aam
imulb
mov
jmp
adc
xchg
aas
sbb
jp
insl
add
mov
repnz
add
xchg
into
xchg
lods
sti
js
out
shlb
adc
sti
adcl
std
stos
cmpsb
mov
mov
jl
lds
xor
inc
mov
and
xchg
cld
icebp
add
push
xor
stc
mov
mov
out
call
xchg
loop
out
pop
cs
push
push
mov
add
in
inc
xlat
jl
test
push
movsl
adc
mov
sub
sbb
cmc
jmp
jg
and
ja
xor
hlt
and
aad
add
xor
js
insb
mov
cmp
mov
push
add
mov
hlt
mov
push
iret
jbe
lret
add
push
rcrb
test
enter
dec
sub
jg
in
inc
outsb
ret
outsl
and
shl
xor
fcomps
fistl
loop
fldt
adc
arpl
mov
movsl
fistl
mov
cmp
test
iret
pop
lret
pop
insb
cmp
cli
cmc
cmpsb
sbb
mov
lea
push
in
pop
push
pop
insl
pop
cwtl
fld
pop
sbb
les
pop
dec
cmpsl
fs
pop
jmp
push
fistpll
adc
in
jg
in
lret
xchg
bound
int3
pop
out
lea
jnp
push
pop
add
mov
ret
jae
test
and
jge
inc
cmpl
loop
jmp
imul
ret
pop
test
ficompl
or
das
pusha
push
popf
mov
dec
adc
test
jnp
ret
addr16
push
cmpb
or
mov
push
jo
pop
test
stos
or
mov
inc
adc
aam
aas
les
jg
cwtl
push
sub
xchg
and
push
or
scas
ret
out
pop
jl
mov
sub
xchg
mov
adc
gs
popf
push
push
sbb
xor
fildll
and
cli
mov
rcl
das
lahf
xchg
arpl
aad
pusha
insl
mov
inc
cmp
push
xchg
mov
push
pop
lds
sbb
test
pop
cli
lods
sub
das
int
sbb
dec
push
out
adc
insl
pushf
sbb
pop
xor
bound
scas
pusha
fsubs
mov
ljmp
cmp
mov
dec
lods
xor
test
xchg
xchg
jg
lods
xchg
roll
pop
repz
add
xlat
sub
pusha
out
xor
or
jl
or
sbb
test
stos
add
pop
dec
rcrl
or
xor
pop
imul
push
popf
pop
mov
jo
and
pop
mov
les
mov
movsb
xchg
outsl
lret
mov
mov
add
add
push
xchg
add
shrb
cmp
insl
cmp
aaa
adc
sbb
inc
jnp
test
adc
and
add
fwait
jno
lcall
inc
xor
adc
cs
mov
xor
out
movsl
aam
jno
out
sbb
jae
insl
outsb
pop
popa
sbb
inc
in
das
sub
cltd
xchg
repnz
mov
push
fsubrs
popa
cmc
xor
and
hlt
je
rcrl
xchg
add
and
in
enter
stc
sbb
mov
fimull
mov
xor
push
lods
loope
iret
sbb
subb
cmp
mov
aad
xchg
andb
xchg
iret
lods
push
andb
js
push
mov
test
cmp
jge
pop
out
sbb
xchg
ficomps
adc
mov
test
jbe
inc
adc
mov
xchg
fcoml
mov
cltd
mulps
mov
inc
cld
inc
inc
lcall
adc
test
cld
rorb
and
dec
aam
jne
shll
aaa
arpl
jmp
jns
stos
pop
cmp
add
push
jae
jp
cwtl
jge
mov
enter
cmp
xor
mov
xor
cmpsl
push
std
mov
mov
jbe
mov
mov
into
hlt
jp
cmpsb
movsl
dec
xor
mov
push
aaa
rclb
and
pop
mov
mov
aaa
or
data16
add
adc
mov
cmp
mov
jl
adc
mov
xor
xchg
ljmp
cltd
orl
cmp
imul
push
xor
dec
adcl
ret
repnz
jle
jo
inc
sbb
jbe
shl
ljmp
rcrb
push
movsb
or
out
pop
mov
loopne
inc
loop
pop
add
aam
xchg
cld
dec
mov
xor
add
test
xor
ret
aas
mov
sub
cmpsb
repnz
sub
add
popf
pop
jo
add
out
movsl
xchg
aas
filds
faddp
aad
adc
lock
insb
jnp
adc
cli
mov
dec
push
aad
divl
mov
xorl
test
stc
out
roll
das
and
push
xlat
inc
jno
mov
cmpsb
or
shl
or
insl
inc
dec
cmp
and
out
xor
pop
loope
pushf
adc
out
push
jno
mulb
sub
ljmp
lret
add
cmp
insl
data16
push
mov
push
xchg
push
fst
in
stos
mov
inc
sub
push
mov
lods
cmc
test
je
sbb
jo
and
fcompl
push
cmp
ja
pop
lods
aas
lods
mov
push
xchg
pop
jmp
pop
fisttpll
push
inc
arpl
and
je
jmp
fists
sbb
int
jecxz
inc
fbstp
repnz
and
es
loope
dec
adc
nop
or
popl
sub
dec
cmp
loop
imul
mov
outsb
sub
cmp
lahf
mov
inc
test
cmp
cmp
inc
test
mov
sub
dec
nop
xor
ret
nop
dec
jl
mov
pop
cli
push
ljmp
loop
fwait
jb
mov
jg
adc
cs
adc
push
cmp
test
pop
shrb
cmp
and
out
or
inc
inc
xor
test
push
jo
call
ficomps
inc
jle
push
dec
addr16
ja
xchg
mov
hlt
nop
out
or
mov
dec
or
out
and
pop
ds
cmpsl
daa
clc
leave
fistl
es
orb
lret
sahf
adc
stos
jnp
sub
jno
cmp
jo
rcrb
fiaddl
fsubrs
leave
jns
repz
hlt
sbb
arpl
fldl
jmp
mov
mov
xor
xchg
push
cmp
repnz
imul
out
aad
sub
jb
idiv
inc
xor
or
icebp
sub
adc
xchg
lods
jmp
sub
inc
adc
pop
pusha
repnz
and
cmpsl
cmpsl
push
rcrb
inc
jg
jge
cmp
shll
adcb
cmp
cmpsl
imul
or
incb
mov
ds
pop
push
insl
clc
mov
xchg
ljmp
mov
inc
jae
jg
sbb
xchg
jmp
add
xchg
or
adc
stos
cmp
mov
test
sti
aad
imul
adc
mov
mov
mov
outsb
inc
mov
std
push
das
jp
aad
inc
imul
jne
cmp
cmp
jns
pop
lahf
cmp
adc
mov
data16
negl
jns
aas
ja
pop
cmpsb
xchg
iret
js
loope
fldcw
bound
inc
test
mov
iret
popf
xchg
sbbl
int3
insb
xchg
faddl
sarl
scas
popf
fstpt
pop
xchg
mov
and
in
cmp
popf
test
in
jl
sub
and
int
pop
in
icebp
ljmp
lods
or
mov
sub
jb
rep
in
stc
push
outsb
dec
pushf
inc
dec
cmc
pop
push
xchg
ds
pop
xor
jge
inc
inc
pop
mov
jg
rcll
cmc
jnp
rcll
jge
sti
lahf
push
mov
cmpsl
push
mov
mov
or
push
and
inc
and
movsl
outsb
mov
or
frstor
out
sub
xchg
fbld
mov
jbe
fisubrs
test
add
xchg
mov
xchg
bound
daa
fimull
mov
mov
and
or
dec
inc
xchg
push
dec
jmp
add
pop
pusha
adc
je
aas
xchg
lock
cwtl
jle
push
sub
stos
add
fcomip
jg
mov
cmp
rcll
mov
xor
outsb
fdivrs
dec
cld
push
push
ss
xor
popa
mov
rcll
pushf
outsl
jae
inc
lcall
fadds
fidivrl
dec
add
outsl
inc
mov
ljmp
ds
mov
cmp
shrl
jno
aas
or
cmp
add
add
add
insl
push
ficompl
test
mov
fdivl
jp
mov
nop
in
repnz
xor
jns
es
ss
mov
mov
push
dec
mov
enter
push
gs
lret
icebp
and
push
pushf
and
fprem
xor
sbbb
ss
fsubrl
inc
cltd
mov
stos
int3
fcomps
mov
call
pop
mov
mov
adc
pop
mov
ss
xor
or
mov
push
and
jno
sub
sbb
mov
mov
xchg
ljmp
and
lods
out
mov
pushf
out
sub
mov
or
in
fs
mov
repnz
enter
jae
push
arpl
ljmp
loope
inc
sub
xor
xchg
jne
andb
insb
inc
jb
pop
pop
jle
mov
insb
sub
sbb
rolb
aam
les
mov
pop
cmpsb
cmp
cmp
sub
xchg
test
push
push
es
int3
nop
dec
jns
jb
test
jbe
in
sub
pop
les
jmp
lret
sub
push
cmpl
ret
xchg
incl
xor
lret
call
fmuls
lods
dec
mov
push
inc
sub
cmp
out
inc
xchg
cmp
mov
mov
xchg
push
out
int3
dec
int3
aas
cmp
xchg
push
sbb
das
loope
insl
test
stos
out
mov
gs
dec
aaa
or
rcll
jecxz
pop
lods
sbb
iret
imulb
ret
sbb
rol
jnp
fbld
sub
inc
push
xlat
jg
stos
pop
lret
or
push
loope
cwtl
xchg
lahf
mov
inc
pop
xchg
cwtl
dec
cld
rcrb
add
sub
jb
or
ret
bound
sub
test
lea
push
adc
jne
inc
iret
sti
inc
lret
mov
sub
cltd
xor
pop
xchg
repnz
mov
add
es
fisubs
mov
mov
xchg
push
mov
fldt
jg
ret
arpl
mov
mov
lock
mov
pop
xchg
inc
outsb
lods
out
xchg
pop
comiss
je
ja
and
xchg
int3
xor
jb
popf
jmp
and
ss
daa
or
popa
mov
sbb
cmp
mov
push
and
mov
xchg
add
adc
inc
lea
lds
or
shl
imul
stc
xorps
loope,pt
xlat
orb
inc
xchg
test
cmpsl
sub
xorl
ffreep
mov
cmp
lcall
push
test
adc
add
rcll
pop
sub
out
mov
fsubp
sbb
imul
and
push
mov
adc
mov
repz
in
jl
xchg
stos
xor
xchg
sbb
sbb
rorl
shl
lret
cmp
lods
fdivs
mov
scas
sar
adc
mov
movsb
icebp
sarb
daa
mov
or
xor
adc
jns
mov
jp
hlt
loop
repz
cmpsb
add
fs
cmpsl
jne
in
mov
jg
lods
and
mov
repnz
jmp
add
pop
xor
cwtl
shrl
push
aaa
push
iret
mov
dec
xor
shrb
xchg
inc
and
lret
fwait
jmp
arpl
adc
aas
sub
sbb
fucom
xor
xchg
je
add
jnp
in
dec
xor
and
les
mov
push
mov
jp
push
ss
xor
pop
sub
in
mov
dec
mov
xchg
dec
push
xor
aad
das
gs
mov
mov
in
jno
adc
adc
cmpsb
push
add
aad
jne
lahf
sbb
decb
mov
mov
cs
adc
mov
shll
test
and
out
xor
enter
fwait
add
pop
pop
loope
iret
push
std
inc
das
out
inc
rolb
adc
inc
js
and
fstps
mov
jl
pushl
jne
idivb
leave
fistl
mov
addr16
sub
inc
loopne
lcall
ret
pop
jmp
mov
nop
test
adc
pop
pop
jae
sub
xor
mov
inc
iret
scas
test
or
and
inc
xor
push
xor
fbld
vpsrlq
dec
pop
and
rcrl
stos
jmp
adc
jp
xor
pusha
adc
pop
and
mov
or
bound
jg
lea
push
or
adc
xor
out
lods
test
test
jmp
pop
aas
inc
push
jbe
loope
inc
cli
push
andl
jns
push
pusha
bound
pop
or
mov
inc
lock
cmp
xchg
xlat
jl
mov
bound
jle
xchg
mov
mov
xor
or
movsb
mov
clc
ljmp
push
aam
daa
push
cmpsb
cmp
jl
jno
or
dec
xor
bound
stos
pop
pop
inc
nop
push
mov
xchg
pop
sbb
push
jb
inc
and
adc
adc
adc
idivl
aaa
sbb
lea
cmp
pop
cld
std
test
in
push
pusha
sbb
jl
inc
stc
jp
rcrb
xor
stc
in
fwait
in
mov
pusha
icebp
mov
lock
inc
divb
fdivrs
shll
jae
mov
pushf
addr16
lds
lods
mov
fs
out
mov
mov
xor
lods
xor
lahf
xchg
aas
outsb
ja
leave
xor
aad
movsl
and
sub
mov
push
ret
or
sub
repz
dec
int3
insb
fcompl
sbb
lahf
pop
nop
out
sub
lahf
dec
mov
bound
xorl
adc
aaa
dec
push
test
xchg
scas
jp
mov
and
js
cmc
and
subl
jbe
ds
loop
add
add
lret
pop
cltd
fadds
shl
jns
int
mov
test
mov
mov
in
dec
cmp
ror
pop
in
pop
sub
imul
or
call
call
movsb
loop
imul
xor
rcl
scas
sub
into
mov
std
jb
sub
mov
mov
das
pop
nop
out
push
test
push
into
imul
cmp
sub
insl
mov
inc
mov
dec
or
les
pop
cld
push
mov
loop
jmp
outsl
les
je
xchg
lcall
ret
inc
jl
and
pop
out
nop
cmp
dec
ss
xor
adc
push
xchg
sbb
xchg
cmp
add
ret
shll
addl
adc
jno
jae
jae
and
add
fdiv
lock
inc
push
mov
and
ds
cmp
cs
imul
xlat
adc
inc
pop
inc
stos
mov
popf
lods
inc
mov
mov
loopne
sub
pop
or
xor
out
mov
jb
daa
mov
jns
arpl
xchg
mov
test
nop
add
xlat
push
sbb
push
iret
scas
jmp
test
sub
js,pn
insl
or
or
mov
pop
pop
dec
and
inc
jp
mov
iret
ljmp
jmp
pop
clc
js
jle
push
xlat
adc
jg
add
cmp
test
and
addl
push
mov
pop
ljmp
or
dec
ror
sub
mov
fldl
fiadds
xor
add
push
cmp
mov
inc
mov
cmp
push
je
inc
scas
sahf
jecxz
imul
mov
lods
fwait
into
dec
pop
pop
xchg
ds
jl
inc
inc
sbb
fcmovbe
and
ja
cmp
mov
nop
lea
aaa
outsb
arpl
add
dec
std
cmpb
sub
pop
cmc
imull
inc
in
jbe
fdivs
push
mov
adcb
and
sub
inc
fcmovnu
cmp
or
mov
std
push
jp
or
cmp
dec
fidivrl
insl
cli
sbb
stos
sub
pop
std
push
jp
or
cmp
dec
xchg
jge
insl
cli
sbb
stos
sub
pop
std
push
jp
or
cmp
dec
fidivrl
insl
sti
sbb
sub
lock
push
or
inc
aad
lds
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
jp
dec
inc
pop
push
and
xor
and
dec
cmc
fcmovbe
stos
mov
lcall
inc
pop
push
sub
sbb
ljmp
aad
mov
xchg
push
jp
dec
fistps
sub
sbb
ljmp
cmpsl
stos
test
leave
div
icebp
push
and
xor
push
xor
and
xchg
or
xchg
ds
jge
mov
xchg
mov
xor
mov
push
sbb
xor
and
ljmp
adc
sbb
movsl
jg
call
dec
push
in
in
les
stos
push
xor
push
lcall
inc
pop
push
inc
xor
add
sbb
adc
cli
mov
cmp
adc
cmp
cmpsl
stos
aad
sbb
les
mov
cli
iret
cmp
push
lcall
add
scas
jne
adc
mov
movsl
cmp
mov
dec
int
lock
imul
push
sub
sbb
lret
jmp
mov
sbb
or
sbb
dec
adcb
jo
push
lcall
mov
loop
icebp
ljmp
sbb
dec
ja
addr16
insb
pop
es
test
in
ljmp
or
sub
cmp
cmp
ljmp
aad
movsl
mov
xchg
push
jp
dec
inc
pop
push
sub
sbb
lret
aad
movsl
mov
xchg
push
sbb
xlat
cmp
cmp
lods
test
pop
stos
sub
addl
mov
sub
adc
mov
in
mulb
mov
cltd
fcom
mov
pop
or
std
lahf
and
adc
jno
loop
rorb
int3
sub
pusha
movsb
fdivs
jno
jecxz
movsb
sahf
or
shlb
ljmp
pusha
inc
xchg
iret
dec
push
scas
jo,pt
adc
ljmp
jecxz
mov
test
sahf
cmpsb
xor
fucomp
adc
mov
imul
and
dec
sti
call
pop
gs
in
mov
pop
je
push
jbe
loope
mov
push
cmp
repnz
inc
leave
or
aam
cwtl
sub
mov
xor
cld
hlt
dec
push
out
popf
or
test
mov
jle
cltd
stc
enter
and
or
insb
fldcw
lds
ljmp
mov
xchg
cmpsb
jns
or
pop
aad
cmp
and
icebp
mov
jno
insl
out
iret
and
movsl
adc
sbb
pop
sub
sti
mov
dec
js
and
adcl
push
mov
push
ret
ss
movsb
fld
inc
fildl
mov
adc
cli
lea
inc
repz
or
pushf
pusha
sbb
rcrb
dec
xor
mov
mov
cmpsb
addr16
sbb
imul
mov
xor
and
jb
mov
sar
jnp
mov
insb
fsubrl
and
push
sub
ficompl
insl
repz
fldcw
mov
stc
mov
sub
and
repz
adc
mov
pop
ret
sub
out
xor
test
lea
scas
cs
xlat
and
nop
xchg
popf
push
sbb
andl
pop
fbld
adc
and
fimull
lahf
aad
mov
xchg
into
sbb
cwtl
stos
in
add
pop
pop
push
dec
mov
pop
int
int
sub
lahf
inc
pop
mov
ja
sbb
xchg
mov
or
pushf
push
push
idivl
rorb
mov
mov
insl
push
adc
dec
cwtl
jge
pop
aaa
fwait
mov
mov
das
jae
int3
fsubrs
leave
aam
nop
mov
sbb
inc
shll
popf
jle
imulb
sahf
shrl
pop
dec
xorl
out
and
sarl
je
rclb
je
xor
int
dec
push
mov
pop
stc
nop
and
scas
decb
mov
out
cmp
rolb
inc
mov
or
dec
pop
add
call
pop
sbb
clc
xchg
mov
dec
out
adc
pop
sub
or
mov
xor
mov
test
ljmp
jae
mov
cmp
jg
nop
ror
xchg
lods
add
out
adc
jge
das
sti
dec
movsb
adc
fimull
push
test
fadds
hlt
outsb
rcrb
push
aad
inc
enter
jo
sub
xor
test
lds
mov
mov
or
cli
jbe
fisttpl
jae
adc
xchg
adc
stos
add
pop
add
fidivrs
or
test
inc
xchg
je
cmpsb
mov
in
sti
add
push
xor
sub
xchg
out
inc
xchg
mov
mov
ljmp
push
lods
imul
add
jne
or
fadds
adc
or
xor
ja
aam
or
fs
jl
in
jp
dec
mov
fwait
or
jnp
out
sti
lret
in
cs
negb
mov
pop
lret
jl
sub
loopne
cmp
movsl
fdivs
mov
xor
mov
lcall
das
lahf
mov
dec
push
call
adc
jge
dec
push
cmp
inc
xchg
icebp
in
and
ja
xor
aam
sub
fisttpll
dec
mov
jns
pop
push
sbb
in
mov
adc
pop
push
gs
cmp
sub
popa
sub
in
xchg
push
negl
add
gs
xlat
cmp
jne
sbb
push
daa
lea
jae
and
jae
icebp
push
repnz
sub
mov
xor
cmpl
cmp
jae
mov
pusha
cs
sbb
xor
or
icebp
loope
fst
and
mov
cmpsl
addb
loopne
xchg
xchg
and
test
xchg
cmp
aam
lods
mov
sarb
es
or
insl
sbb
or
iret
pop
mov
cld
sbb
pop
push
mov
xchg
into
adc
shll
les
fistps
testb
pop
mov
inc
int3
dec
mov
jo
push
mov
jo
stos
cmpsl
xchg
test
mov
sbb
xchg
popa
jae
orb
fisttps
xchg
xor
out
dec
pop
rorb
lret
test
jmp
or
imul
andb
push
mov
shlb
jbe
lock
cmp
sti
sahf
xor
shll
subb
mov
pop
cmp
je
or
add
sbb
std
pop
sub
out
repz
mov
push
sbb
sahf
cmp
add
ret
add
lahf
adc
or
xchg
pop
mov
push
sbb
xorl
pop
pop
mov
jmp
push
test
mov
mov
int3
xchg
xchg
aas
sbb
movsl
push
sub
in
mov
movsb
mov
mov
call
xchg
add
pop
jmp
xchg
rorl
and
inc
fmul
popa
mov
and
sbb
push
in
adc
leave
fldt
lcall
adc
call
lret
dec
out
das
push
sbb
pop
xor
mov
dec
and
mov
in
out
mov
out
xchg
adc
or
ds
scas
loop
mov
jecxz
cmp
jbe
daa
adc
notl
mov
mov
stos
adc
in
xor
mov
dec
cmc
or
iret
in
push
daa
test
inc
das
aam
negl
mov
jnp
inc
cmp
dec
xchg
lea
pop
mov
test
xchg
jmp
fistpl
cmp
imul
testl
nop
xor
lcall
subb
sarb
mov
xor
xchg
cltd
lahf
inc
icebp
mov
ficompl
pop
jecxz
popf
addr16
mov
shll
dec
lcall
int3
cmp
inc
fbld
add
out
mov
adc
adc
loop
jp
mov
sub
lea
cmp
in
lea
rol
insb
mov
jns
test
cmp
xchg
pop
fwait
loope
lds
jo
popa
sub
sub
dec
test
xlat
add
mov
dec
repz
jge
pop
repnz
stc
mov
add
test
lcall
out
loope
or
adc
and
sub
sub
shlb
clc
sub
sub
mov
es
lds
sbb
mov
movb
addr16
jns
jge
out
xchg
xchg
sbb
pop
fcoms
add
scas
inc
mov
sahf
lds
scas
adc
add
mov
adc
int3
sub
stos
xchg
pop
xor
insb
xchg
xlat
dec
movsb
jecxz
add
jae
push
daa
pop
shl
mov
cmp
lock
add
push
gs
xchg
into
ss
cmp
les
daa
out
sub
adcl
int
pop
mov
adc
scas
lret
out
adc
mov
scas
mov
loopne
xor
fldt
outsl
xor
loop
mov
ljmp
inc
das
dec
pop
addr16
add
enter
lret
sarb
and
div
bswap
mov
orb
mov
xor
mov
and
bound
inc
xchg
and
pop
inc
sub
mov
aad
sbb
std
jnp
in
push
push
out
cmc
stos
fstpl
loopne
pushf
in
shlb
shll
aas
js
add
adc
push
out
in
mov
xchg
movb
pop
mov
daa
cmp
xchg
arpl
pop
xchg
xchg
jle
mov
push
pop
cmp
mov
popf
cmp
out
sar
cmp
mov
testl
repnz
sti
lret
xchg
sub
xchg
jp
xchg
in
push
jnp
iret
in
into
dec
adc
inc
mov
or
enter
out
pop
in
fidivs
out
sahf
cltd
pop
adc
mov
repz
xchg
ret
sub
adc
sbb
xchg
sub
cmp
sub
es
das
mov
sub
and
add
and
fidivl
jg
mov
pop
scas
add
inc
js
mov
mov
mov
dec
sbb
add
les
mov
in
pop
enter
loop
ja
out
insl
in
into
jbe
mov
pop
rolb
mov
stc
jg
cltd
mov
push
and
and
insb
aam
lea
dec
cmp
test
sub
fldcw
cltd
bound
jno
ja
inc
cs
out
sbb
sub
inc
das
jmp
imul
jne
mov
or
fcmove
jb
xchg
out
repnz
xchg
adc
sub
pop
int3
movsl
jo
xchg
cmpsl
addr16
pop
in
xor
iret
imul
mov
lea
and
imul
mov
mov
lret
mov
lcall
js
iret
add
jmp
xor
aam
je
adc
and
cmpb
fadds
xor
cmp
push
mov
sbb
cmp
add
pop
add
pop
scas
jae
push
popa
call
pop
loop
mov
or
mov
pop
jnp
mov
mov
lret
mov
push
and
imul
and
mov
jae
inc
aam
out
cmpsl
push
mov
sbb
and
bound
stc
push
inc
inc
sbb
jno
fsubs
mov
cwtl
jb
mov
xchg
ret
mov
add
jecxz
or
pusha
sbb
add
adc
fiaddl
or
pop
push
lcall
movsb
addl
push
out
xchg
mov
outsl
mov
xchg
shr
or
push
mov
scas
sub
push
jg
outsl
push
es
cmp
inc
mov
jle
cmp
sti
gs
ja
inc
clc
into
test
dec
inc
xchg
js
push
fisttpll
adc
ds
mov
push
pop
outsl
dec
or
cmp
mov
xchg
pop
push
jae
cld
aas
xor
mov
push
adc
flds
xchg
fcoms
cltd
loope
and
movsl
sti
or
shrl
pop
or
cmpsl
outsl
or
mov
sub
repnz
push
jle
into
jae
jp
lock
push
js
push
push
mov
scas
movsl
repz
int
jns
rcrb
push
in
loop
push
mov
orb
sub
aam
in
push
mov
cmp
lret
adc
leave
jecxz
pop
out
push
and
mov
xor
jae
mov
test
in
sub
and
shr
jmp
dec
sub
adc
in
loop
pusha
mov
setne
dec
paddusb
lea
cmp
cltd
lcall
lret
fisttps
pop
in
out
pop
sub
imul
sub
dec
jl
sbb
mov
push
hlt
cmp
repnz
inc
inc
sub
inc
jae
mov
lcall
lock
push
aad
movsb
push
jbe
xchg
mov
mov
xchg
mov
ja
or
mov
dec
fldt
ss
pop
iret
mov
xlat
add
jecxz
clc
pop
daa
jns
jae
pop
orb
jg
paddsw
adc
lcall
pop
jecxz
dec
jmp
jp
or
arpl
add
popa
fdivp
inc
or
inc
jb
fucomip
add
sub
sbb
xor
pop
cmp
dec
mov
ja
inc
fcoms
ret
mov
mov
jbe
inc
jnp
pop
mov
or
inc
dec
popf
push
mov
cli
adc
pop
movsl
gs
aam
mov
rol
jae
cmp
aam
fsubrl
cmc
dec
add
adc
lret
mov
mov
jbe
mov
mov
imull
pop
mov
and
mov
das
cld
cmp
jg
shlb
inc
sbb
jb
mov
jnp
std
and
cmpsb
enter
lret
pop
jae
inc
jne
jbe
mov
cltd
ja
xor
addr16
dec
xor
fcomip
int
movsb
std
sub
inc
mov
jge
das
mov
mov
ljmp
and
push
cmp
push
jo
cwtl
cmpsl
addb
ja
iret
dec
mov
and
dec
call
sbb
lods
fldt
cmp
adc
sahf
and
pop
sbb
insb
push
fstl
lret
cwtl
inc
sbb
inc
add
pusha
mov
and
dec
pop
jl
idivl
lcall
and
gs
in
vpsubq
loopne
or
sbb
mov
movsb
stos
cltd
cmp
aaa
push
aas
imul
or
jecxz
or
push
icebp
mov
mov
mov
call
stc
rcr
cld
inc
cmp
outsb
pop
pop
sbb
shll
push
mov
fisttpl
mov
cmpsb
xchg
inc
andl
adc
sti
test
cmp
xchg
insb
jmp
not
inc
xor
xor
xlat
rdtsc
notl
mov
jb
mov
xor
pop
mov
mov
inc
jmp
xchg
mov
lds
cmp
mov
fnstsw
xchg
sarl
vpshufd
imul
das
mov
mov
hlt
push
ffreep
loopne
sbb
into
pop
jne
in
fwait
jne
adc
xlat
sub
dec
in
pop
sti
adc
mov
or
aad
ljmp
call
fadds
loop
cwtl
cmpsl
adc
jb
lods
loope
xor
pop
jg
add
jne
cltd
jl
ficomps
repz
pop
dec
push
inc
fdivrs
pop
sub
bound
mov
addr16
mov
movsl
push
fdivrp
inc
in
push
insl
into
jecxz
fbld
loopne
inc
ss
lods
arpl
mov
xchg
mov
cmp
pop
cli
aad
movl
inc
xchg
mov
imulb
test
in
sub
inc
push
lods
ljmp
jae
mov
les
pop
imul
dec
into
sub
loope
or
mov
adc
xchg
pop
cmp
into
dec
xchg
and
insl
loope
xchg
jecxz
lret
inc
lret
outsl
mulb
or
pop
mull
sbb
xlat
hlt
stc
jae
aaa
dec
jb
or
enter
mov
cmpsb
mov
aam
dec
repz
jne
lret
jbe
scas
dec
xchg
push
ds
jp
clc
lock
inc
pop
and
loopne
xor
push
enter
das
daa
jge
sahf
xlat
icebp
or
or
jo
mov
movsl
dec
add
xchg
mov
or
ror
shlb
and
fs
lret
xor
or
mov
loopne
mov
cmpl
aad
or
fsubrl
push
cmc
lock
mov
std
cmp
push
cmp
fstpt
sub
mov
imul
ret
scas
xchg
stos
mov
out
imul
inc
add
test
data16
push
inc
xor
jnp
aaa
jae
outsl
imull
int
xchg
lret
test
cmp
sub
jl
lahf
jo
call
cld
ret
scas
pusha
dec
stc
cmp
inc
fs
and
scas
ret
dec
fs
xchg
or
pop
mov
dec
adc
jno
cmpsl
xor
jbe
icebp
fwait
cmp
test
lock
popl
imul
add
subb
ret
jge
shlb
cmp
and
ds
jmp
sbb
sbbb
sub
xor
dec
lods
mov
sbb
jnp
mov
push
jp
scas
les
mov
outsb
out
pop
sub
or
xchg
adcb
lahf
iret
mov
icebp
or
movsl
aam
mov
les
sbb
popf
xrelease
adc
lds
or
dec
repz
lods
jns
mov
les
inc
inc
mov
cld
shll
push
jl
cmp
pushf
xchg
pop
add
shrb
push
rcl
adc
clc
cli
xor
dec
mov
mov
jp
adc
jp
xlat
adc
iret
divl
cld
cmpsb
inc
push
mov
xor
jbe
xor
and
mov
loope
ficoml
loop
dec
sbb
loopne
add
inc
jno
jae
and
jecxz
out
dec
push
dec
inc
sbb
pop
inc
push
adc
cmc
jb
cmpsb
push
test
jno
pop
stc
movsb
stc
repnz
sbb
xchg
mov
into
add
xchg
daa
incl
xchg
aaa
shl
dec
cmpsb
punpckldq
mov
in
dec
inc
mov
scas
std
icebp
fnstenv
mov
dec
inc
pop
loopne
add
push
push
xor
imul
int3
adc
or
xor
aad
je
test
insb
cmp
ret
pop
testl
fwait
and
adc
inc
mov
or
or
jns
int3
scas
jp
hlt
mov
fsts
and
pop
jnp
jno
xor
into
mov
xchg
stos
test
sub
out
jnp
inc
lds
jg
dec
inc
mov
out
idiv
sub
cmpsl
imul
sbb
or
xor
arpl
aaa
push
add
cwtl
add
lcall
pushf
and
xor
mov
mov
cmp
imul
pop
sahf
ror
and
add
xchg
pop
pop
subl
pop
in
add
clc
pop
sbb
das
mov
mov
cltd
in
push
xor
dec
cld
or
mov
cmp
lods
outsb
push
xor
call
sub
lock
jae
fsubs
and
cmp
enter
cmp
arpl
mov
add
sbb
or
addr16
jns
hlt
ret
pop
cld
aaa
aam
scas
cltd
inc
subb
push
incb
xchg
stc
les
orps
int3
mov
mov
mov
and
daa
dec
das
adc
push
lcall
movsl
cmp
mov
fdivl
bound
cmp
insb
inc
filds
sahf
pop
pop
sarl
mov
mov
sbb
xlat
outsb
push
scas
scas
inc
pop
aaa
jno
or
hlt
cmp
in
test
stc
push
cmpl
loop
dec
dec
xchg
pop
gs
mov
sarl
inc
icebp
mov
mov
xchg
in
xor
shl
or
into
enter
or
test
sub
add
inc
adc
push
mov
add
dec
psubb
sbb
pop
adc
shll
decl
call
mov
add
pop
pop
rorl
inc
orl
xchg
ljmp
jnp
mov
loopne
lods
pusha
fbstp
jno
adc
cltd
mov
cld
rolb
pop
pop
and
push
xchg
mov
jge
cmp
adc
jns
and
shl
test
test
mov
fisttpl
addr16
dec
adc
add
mov
movsl
aam
daa
mov
lea
jno
insb
jmp
iret
xchg
enter
mov
lcall
fldl
cld
jmp
dec
enter
and
loope
push
sbb
push
rcrl
pop
xor
orb
mov
popa
pop
addr16
inc
cs
lret
xchg
add
cmpsl
dec
mov
imul
dec
call
aad
lret
scas
fldcw
xor
jnp
dec
jo
clc
out
fcom
xor
mov
and
cmpsb
sbb
push
hlt
cmp
test
data16
xchg
sub
xchg
jge
sti
sbb
mov
push
pop
or
addr16
mov
mov
mov
fcomp
adc
aaa
mov
cmpsb
sub
or
adc
pop
jbe
jae
mov
adc
and
and
mov
stos
in
pop
push
testb
mov
and
popa
aaa
xchg
cmp
dec
lret
sarl
jp
sbb
pop
mov
mov
xor
int3
notl
mov
or
fisubl
mov
or
in
pop
lods
decl
int3
scas
add
insb
outsl
jns
jnp
shl
mov
mov
frstor
hlt
or
lock
adc
lgs
stos
out
push
repz
mov
dec
mov
inc
enter
mov
mov
shll
xlat
cs
pop
mov
ret
je
arpl
xchg
cmp
mov
push
pusha
jle
jne
aam
sbb
rorb
jne
pop
push
sub
sbb
lret
aad
movsl
mov
xchg
push
jp
dec
inc
pop
push
sub
sbb
lret
aad
movsl
mov
xchg
push
jp
dec
pop
pop
push
sub
sbb
lret
fsubrl
mov
xchg
dec
mov
cmp
adc
fstp
xor
jb
in
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fnstenv
movsb
cli
fisubrl
mov
xor
and
push
or
cmp
lret
mov
movsb
cli
aam
les
inc
dec
add
sbb
jp
imul
cmp
add
xor
sbb
sbb
adc
push
jp
dec
sbb
pop
cmp
lret
lock
shll
addl
roll
cmp
sub
loope
es
push
popa
cwtl
xchg
rcrl
test
cmp
pusha
xor
jp
jp
aad
cmc
sub
ja
xor
and
pop
fdivl
push
push
iret
sti
lcall
leave
sbb
lcall
aad
cmp
repnz
add
push
movsl
and
fildl
popa
mov
jns
dec
adc
inc
data16
lods
mov
lret
das
daa
jp
bound
sub
lds
lds
pop
mov
jnp
nop
sbb
dec
xor
pop
inc
outsl
xor
je
cmpsl
lret
mov
enter
sbbb
push
xchg
inc
in
jae
arpl
pop
or
out
repnz
jmp
sti
mov
movb
fs
inc
adc
add
and
mov
lcall
cwtl
into
xchg
sub
inc
cmp
dec
cmp
js
jne
inc
and
mov
xchg
out
lcall
add
xor
and
push
or
sub
lret
mov
movsb
cli
aam
les
adc
add
xor
and
push
or
sub
lret
sbb
sti
jmp
xchg
push
adcb
mov
adc
sti
jbe
jo
xor
pop
xlat
push
stos
jae
jmp
pop
out
pop
shll
call
push
mov
jmp
xchg
or
subb
or
push
xchg
in
push
aad
and
data16
adc
outsl
popl
insl
jl
and
push
push
je
mov
negl
dec
dec
adc
test
mov
xor
xor
ror
pop
xchg
or
jmp
and
and
pop
cld
out
cwtl
arpl
push
mov
clc
jmp
xchg
xor
add
jb
xor
repnz
cltd
popa
pop
rep
jne
lods
and
jp
dec
daa
sbb
mov
or
stc
sahf
mov
mov
push
dec
jnp
cmc
inc
cmc
push
xor
repz
fiaddl
dec
xor
cmp
aam
rcrb
and
rcl
test
mov
xchg
cs
xor
scas
xor
scas
divl
mov
cmc
lahf
xchg
sub
fadd
push
icebp
jns
add
fs
adc
shlb
push
enter
push
xchg
jmp
jo
sub
pop
bound
or
mov
push
lcall
ds
lock
jbe
das
negb
rcrb
sbb
js
xchg
mov
shrl
pop
adcl
jb
cvtps2pd
daa
xchg
jbe
sub
push
add
stos
xlat
add
and
loope
xchg
sbb
push
sahf
lods
in
mov
dec
and
or
arpl
ss
shr
xchg
and
xor
lcall
push
push
sahf
xor
push
das
sub
scas
addr16
sub
pop
sub
mov
sar
fwait
stos
pop
xchg
and
mov
cmp
push
sbb
push
push
xchg
and
mov
inc
jecxz
rcrl
and
sbb
xchg
add
or
rcrb
jae
jns
leave
push
jl
jno
xchg
leave
inc
outsb
testl
and
cmp
movsb
xor
sub
sbb
enter
cmpsb
add
pop
ret
mov
or
ja
loop
call
sub
xchg
movsb
in
test
test
arpl
mov
loope
aad
add
sbb
jb
test
addr16
jl
pop
or
push
rorl
pushf
jns
jno
clc
imul
add
fs
sub
mov
cmp
jp
outsb
lock
test
int3
xchg
mov
add
inc
loope
mov
xchg
mov
add
lcall
adc
lods
jp
stos
outsb
dec
out
pushl
xchg
cld
sbb
xorl
in
loop
or
xor
test
mov
jge
loop
lods
xor
mov
lcall
pop
push
std
push
mov
cltd
mov
and
mov
mov
xor
jnp
sub
outsl
lods
fisubrs
gs
xchg
pusha
jbe
hlt
sbb
cmpsl
dec
push
sarb
mov
sub
test
or
pop
aas
sub
mov
dec
es
jecxz
stos
dec
inc
add
push
subb
cmc
iret
dec
in
ret
test
or
inc
xchg
or
fsubrl
push
int3
push
fwait
stc
repz
stos
testl
and
jecxz
add
std
mov
leave
test
sbb
insb
fldenv
inc
fnsave
daa
out
loop
test
in
mov
push
je
or
jno
iret
cmc
push
cltd
lret
jge
aas
adc
pop
adc
pop
sahf
mov
lahf
mov
clc
stc
jle
mov
dec
popa
scas
loop
fstpl
loope
fucom
jge
cmp
inc
pop
sbb
add
mov
xchg
sbb
mov
lods
dec
add
int3
mov
inc
orl
popa
dec
je
rcrl
movsl
add
sbb
aaa
add
lret
pop
std
enter
mov
fbld
pop
aas
inc
jmp
mov
mov
jo
lret
push
jne
jle
addr16
inc
inc
dec
icebp
fidivrs
nop
pushf
add
andb
loopne
stc
sbb
lods
mov
cmc
cltd
mov
test
lret
nop
imul
add
lock
ret
rol
jecxz
popa
sbb
mov
lahf
lea
jecxz
cwtl
bound
imul
and
out
xchg
movsl
push
mov
dec
mov
jne
sub
sarl
push
popf
addr16
sbb
inc
into
xchg
mov
mov
mov
outsb
or
and
dec
fwait
jae
mov
rcrl
xchg
push
stc
adc
sarb
push
test
shlb
cmpsb
aas
sub
pop
mov
stos
jle
gs
mov
ss
push
mov
xchg
add
jb
jne
push
decb
push
test
cmp
and
mov
fisubrl
jnp
cld
mov
adc
and
inc
fwait
mov
icebp
xchg
mov
outsl
inc
dec
clc
push
fistl
cltd
cltd
repnz
mov
mov
xchg
add
fldenv
sub
in
cmpsl
mov
fisttps
mov
in
jnp
cmp
rcrl
cli
mov
add
mov
xor
aad
das
inc
mov
pop
mov
pop
out
mov
push
or
in
mov
inc
into
cmp
pop
and
mov
int3
aad
sbb
mov
call
loope
sub
inc
jne
cmc
aad
mov
add
imul
shll
mov
adcl
xlat
iret
aaa
testl
mov
pushf
fdivl
xchg
cmp
xchg
clc
sub
jae
jle
inc
jecxz
xchg
imul
insl
dec
dec
pop
insl
jno
dec
jecxz
or
cmp
mov
stc
ljmp
pop
sarb
fwait
pop
add
inc
mov
inc
imul
inc
stos
dec
fcomps
mov
jb
sub
sbb
jb
sbb
popa
test
push
mov
fsub
loop
push
cld
out
cmc
rdmsr
stc
dec
ss
fadds
test
out
shrl
xlat
and
aam
ror
xchg
and
push
popf
dec
inc
pop
rolb
insb
xor
divb
out
fsubs
cli
push
filds
pop
xlat
push
xchg
pop
aam
jle
fwait
xor
clc
ja
leave
dec
dec
cli
xor
mov
mov
adc
sub
mov
cltd
aad
mov
inc
and
or
imul
mov
mov
mov
push
sbb
mov
pop
ret
jmp
cmp
or
loope
out
insl
mov
dec
out
xorb
fcoms
adc
jp
sub
fmuls
add
sub
test
xchg
xchg
cli
add
lret
repnz
or
jge
push
or
lret
xor
aam
out
hlt
insb
in
sub
std
mov
mov
lahf
jmpw
shlb
loope
dec
sub
insl
pop
and
mov
cmp
jmp
xchg
or
lods
jo
xor
cwtl
lret
lods
addr16
lds
fsubs
mov
mov
jg
adc
add
mov
xchg
testb
or
mov
sub
je
enter
ljmp
fnsave
je
xchg
jbe
push
pop
mov
dec
iret
mov
push
loop
cltd
mov
pushf
loopne
xorb
mov
dec
dec
cld
stos
sbb
data16
and
mov
addr16
shl
or
mov
mov
sbb
inc
mov
or
mov
jb
cmp
adc
mov
xor
push
idivb
arpl
sahf
mov
movsl
sbb
idivl
es
movups
jg
and
and
push
push
sub
xchg
jp
repz
and
popa
adc
xchg
xor
js
lods
pop
mov
jbe
outsl
jle
push
add
clc
jb
mov
daa
ds
lods
mov
fldl
xchg
adc
das
add
fucomi
outsb
or
sbb
push
push
cmpsb
mov
or
add
mov
xorl
mov
lods
and
cltd
mov
pop
ljmp
dec
sub
mov
xchg
test
cmp
loop
imul
mov
cld
or
andb
pop
shlb
gs
mov
ss
out
loope
call
out
scas
insb
ljmp
ret
jp
mov
mov
mov
push
shll
enter
rorb
or
dec
popa
rol
mov
das
sbb
sbb
imul
and
push
push
cmc
dec
jp
repz
inc
imul
lcall
lods
jl
mov
push
jns
shl
aas
push
jmp
pop
xchg
mov
mov
dec
stos
dec
sbb
pop
sub
scas
data16
addr16
test
test
ret
dec
imul
inc
push
fstpt
fldl
mov
jecxz,pt
imul
popl
adc
fadds
daa
shrl
orl
pushf
adc
dec
jae
or
mov
aam
mov
add
mov
sub
jb
popf
xor
pop
ja
mov
cmp
and
outsb
and
in
cs
imul
mov
jno
inc
inc
dec
lcall
mov
ljmp
in
movsl
mov
sub
dec
ljmp
jg
hlt
cmp
cmc
out
adc
clc
cmp
stos
adc
jl
or
test
mov
mov
xlat
pop
loop
rclb
rcll
sti
mov
mov
aad
mov
stc
mov
fidivrs
cwtl
push
repz
pop
push
sbb
cmp
mov
popa
push
inc
dec
and
das
xchg
popf
lods
ss
ljmp
add
scas
mov
push
push
sub
and
stos
jge
test
adc
dec
push
or
movsl
adc
test
jmp
les
pop
add
mov
mov
mov
ss
insl
es
sub
out
fnstsw
sbb
shrb
add
js
aad
cmpsl
pop
pusha
push
mov
lahf
jmp
or
aaa
call
and
cmp
add
and
pop
fsubrs
and
mov
dec
push
adc
inc
rorl
lds
mov
popf
aas
fidivl
lods
pop
pop
jno
mov
mov
cmp
sti
clc
inc
int3
push
repz
loope
repz
fnstsw
loop
out
pop
push
loopne
pushf
lods
ret
mov
sub
dec
clc
jg
push
mov
loope
mov
mov
shr
negb
outsl
bound
loopne
cli
mov
inc
add
in
popf
popa
pop
jp
jmp
mov
inc
dec
je
ret
in
mov
lahf
nop
xchg
mov
mov
out
lock
out
loope
andl
lock
ss
les
int3
adc
test
ljmp
lcall
add
cmp
out
test
or
xor
into
push
jge
fwait
imul
xchg
mov
or
roll
arpl
cltd
divb
push
nop
addr16
je
cmp
jp
pop
push
outsl
adc
stos
jns
mov
inc
lods
mov
or
rorl
add
int3
neg
lock
fwait
lea
je
fxtract
dec
dec
adc
push
xchg
frstor
and
ret
ljmp
pop
mov
xchg
adc
pop
call
sti
inc
int3
jle
and
cmp
jmp
aam
lods
adc
and
into
inc
movsl
or
int
lock
dec
int
cld
es
pop
dec
test
loop
jnp
loope
and
xor
and
out
idivb
cltd
cli
mov
sbb
lods
or
adc
mov
fbstp
cltd
cli
das
pop
js
xor
jbe
jp
cwtl
mov
pop
inc
mov
cltd
mov
mov
jne
sar
fs
iret
and
mov
pop
fs
js
inc
adc
pop
rorl
pop
mov
mov
dec
shrb
nop
ret
call
pop
cmpsl
mov
push
fsubr
pop
cltd
lods
lock
repnz
sbb
cltd
xchg
fld
inc
sbb
mov
push
push
mov
adc
jle
mov
mov
ficoms
xor
and
popa
ret
mov
mov
jno
repnz
inc
sbb
shlb
pop
enter
arpl
cmc
push
mov
arpl
mov
xor
rclb
imul
dec
pop
imul
dec
adc
int
push
add
jno
nop
rorb
scas
call
jnp
lret
lcall
add
adc
dec
mov
sbb
xchg
mov
pushf
in
stc
lock
cmpsb
sti
mov
rorb
inc
sub
lahf
icebp
je
insl
xchg
rorb
pop
test
in
shl
cwtl
into
aam
sahf
push
emms
xchg
dec
cmp
jno
mov
hlt
pop
fbstp
mov
jmp
cld
fchs
rcrl
cmp
addl
pop
inc
jne
sahf
jg
mov
cs
inc
or
jae
push
fidivs
ficoms
les
fs
jmp
sub
add
fidivrs
andb
stos
testl
pop
push
ficoml
fdivrl
jl
loop
imul
sub
xor
sti
sub
jmp
add
loop,pn
decl
lea
lcall
pop
jnp
push
cwtl
mov
xchg
push
aaa
lret
mov
sbb
push
dec
rorl
rolb
cmp
adc
scas
jl
push
cli
arpl
and
sbb
mov
ja
std
push
imull
push
fadds
sahf
add
stos
fwait
inc
or
inc
sub
shll
jecxz
or
mov
aam
dec
push
add
mov
dec
pop
sub
test
dec
pop
cmp
sahf
mov
bound
roll
jnp
into
push
mov
cltd
or
rcrl
xor
fidivrl
push
cmp
scas
mov
lock
push
sbb
in
mov
adc
inc
xchg
std
lret
aam
add
rorl
neg
jl
add
sub
push
sbb
push
push
imulb
mov
push
inc
out
lock
int
mov
inc
lcall
ret
and
pop
dec
lds
icebp
mov
mov
ret
pop
jns
lods
mov
mov
les
push
mov
add
add
roll
rclb
jle
push
sti
and
mov
outsb
add
scas
adc
xor
sbb
int3
mov
xor
mov
je
xlat
xor
xor
sbb
negb
xchg
movsb
jmp
lods
lret
adc
jne
outsl
insb
lret
adc
outsl
mov
cld
loop
xchg
mov
loope
or
mov
inc
push
mov
pop
pop
mov
cmp
jmp
mov
addr16
and
and
dec
fwait
loope
push
sub
pop
into
mov
pop
clc
sarb
stos
mov
ja
pop
push
movsl
jecxz
inc
jae
xchg
inc
fdivl
out
pop
negb
rcrl
mov
dec
adc
rclb
mov
stos
loope
push
data16
outsl
sub
or
pop
test
int
std
fsts
add
popf
pop
test
dec
dec
fldenv
and
je
and
mov
dec
inc
loope
loopne
jne
and
sbb
fldl
aad
rcl
int3
test
pop
lcall
push
xor
je
jl
sarl
test
fs
fsubs
adc
fldenv
aas
push
push
jp
sti
and
inc
xchg
mov
lods
lods
cmp
dec
inc
dec
testl
mov
push
inc
push
mov
sub
imul
mov
js
frstor
insl
hlt
movsl
ljmp
ficoms
pop
ret
mov
or
jbe
jae
mov
mov
movsl
call
sbb
push
loop
xor
in
cltd
insl
mov
xchg
and
jb
adc
mov
icebp
movsb
outsl
loopne
addl
lods
push
cmpsl
sbb
mov
movsl
jle
push
shl
andb
mov
loopne
ret
loope
and
mov
and
sbb
test
movsl
insl
out
sub
xchg
shlb
fsubs
xor
push
cs
test
xchg
push
clc
stc
addr16
sbb
xchg
jge
adc
cmp
mov
movsb
mov
inc
sti
stos
xchg
adc
dec
das
add
jb
aam
xchg
jnp
add
inc
pop
sbb
xchg
cmpsb
push
cmp
xchg
jle
out
mov
push
enter
mov
call
add
rolb
mov
cmpsb
arpl
lock
push
xchg
inc
cltd
push
pop
pop
pushf
or
adc
xor
sbb
popf
and
sbb
andb
imul
cwtl
sbb
out
add
add
and
test
inc
or
dec
mov
orl
lcall
inc
addr16
nop
inc
xchg
sub
push
xchg
addps
cwtl
push
adc
rclb
sbb
imul
js
lods
xor
loopne
xchg
divb
insb
and
jp
or
pop
add
cmc
test
das
cs
jmp
inc
jae
in
sti
stos
test
xor
sahf
push
cli
lret
fs
icebp
daa
xchg
cli
loope
ret
data16
add
mov
fdivrs
lret
mov
outsl
jle
pop
testl
fisubl
loope
jno
addr16
or
ja
add
jb
in
loop
in
xchg
mov
scas
aas
push
dec
fstpt
out
shlb
inc
jno
inc
adc
sbb
cmp
sahf
loop
in
loope
out
or
das
leave
mov
mov
leave
adc
add
pop
mov
in
aaa
out
pop
stos
ret
addr16
mov
incb
push
lahf
icebp
dec
mov
sahf
outsl
mov
xlat
mov
clc
das
push
sahf
movsl
test
testb
daa
jle
dec
jnp
pop
mov
adcl
sarb
mov
into
add
fldl
sub
outsb
and
repz
in
daa
sub
cmp
leave
adc
dec
sub
fcomip
lea
adc
mov
pop
out
pop
in
cwtl
adc
jmp
test
ret
popa
lea
lcall
fiadds
and
mov
mov
mov
mov
lret
jno
sbb
lock
jb
mov
add
xor
mov
test
fiaddl
leave
pop
scas
sbb
xor
lcall
pop
sub
fmull
frstor
loopne
in
add
adc
pop
loop
mov
or
jg
pop
mov
ficoml
es
movhps
out
sbb
das
in
cmpsl
ds
sub
outsb
sbb
stc
stos
outsl
enter
mov
and
arpl
mov
add
jo
cmp
add
pop
mov
decb
sbbb
lret
mov
mov
test
add
cwtl
adc
das
mov
outsb
add
sbb
mov
adc
adc
mov
dec
dec
cmp
roll
ds
mov
daa
jb
sarl
fistpll
mov
mov
dec
lret
dec
sub
fldcw
in
enter
add
jno
mov
adc
or
nop
and
shl
push
sti
outsb
cs
sub
sub
idivb
cmp
repz
and
int3
pop
repnz
jb
add
repz
fdivl
cmp
push
mov
push
shr
movsb
ds
out
jmp
mov
jnp
imul
adc
jae
sub
aaa
nop/reserved
and
or
adc
mov
xchg
daa
adc
movsl
dec
out
pop
outsb
xchg
jle
mov
pop
ja
xchg
inc
dec
addb
flds
scas
addr16
lahf
fwait
pop
repnz
lret
ja
xchg
pop
mov
adc
and
jae
jecxz
and
xchg
push
movsb
mov
cltd
sbb
test
add
adc
and
les
ret
lods
lods
pop
sti
stos
add
add
push
xorb
jno
call
sub
inc
pop
sbb
push
or
mov
push
xchg
call
sbbl
mov
int3
sbbb
or
cli
aam
les
adc
add
xor
and
push
or
sub
lret
mov
movsb
cli
aam
les
adc
add
xor
and
push
or
sub
lret
movsb
ljmp
hlt
stos
in
adc
pop
cmp
or
jo
push
cmp
mov
aam
aam
hlt
stos
fs
sahf
push
or
mov
fwait
lds
push
push
inc
bound
addr16
pop
pop
daa
xchg
rol
loopne
shl
adcb
cmpsl
push
push
push
inc
push
ja
add
adc
and
xor
enter
xchg
xor
adcb
cmpsl
pop
push
dec
inc
jp
push
sbb
or
cmp
and
mov
fucomip
rol
sbb
or
out
in
in
lret
and
dec
sub
sub
outsb
or
mov
ffreep
bound
bound
shlb
sti
or
sub
push
loop
imul
test
push
push
sub
adc
xor
lret
shrb
cmp
xchg
xlat
inc
or
cs
inc
inc
les
push
pop
pop
lret
fdiv
or
stos
loop
scas
mov
std
sarl
pop
sub
repnz
cwtl
push
push
rclb
xor
and
or
daa
sub
dec
sub
adc
sahf
mov
inc
sbb
cmp
out
out
addb
adcb
bound
adc
or
and
sub
fcmovnbe
lret
imul
out
xchg
mov
xor
aaa
inc
pop
push
push
push
data16
pop
and
ja
mov
mov
lahf
pushf
mov
mov
out
push
push
inc
pop
ja
adc
dec
inc
ja
shrb
mov
hlt
loope
rcl
mov
sub
pusha
adc
pop
jb
jp
adc
and
xor
ret
loop
repnz
xchg
xchg
xchg
push
push
inc
bound
add
adc
and
xor
ret
loop
repnz
xchg
xchg
xchg
push
xchg
push
cmp
sbb
sub
dec
push
in
xor
lds
ds
fidivl
and
jg,pn
cwtl
aas
xchg
pop
dec
mov
les
cwtl
call
fs
outsl
cmpl
or
cmp
or
and
fsubrs
leave
xchg
aas
push
mov
orb
std
jbe
mov
mov
dec
cmp
sub
mov
stos
hlt
pop
mulb
push
test
aas
adc
fcmovnu
fcos
insl
or
faddl
in
xor
icebp
movsl
dec
ret
xor
loop
jnp
leave
and
imul
cmp
inc
neg
lds
mov
into
rcr
rolb
xchg
imul
aam
es
mov
ja
add
cmp
xlat
nop
inc
aam
mov
and
dec
mov
mov
insl
dec
movsl
mov
cwtl
movsl
aas
arpl
push
pop
sub
add
and
mov
inc
arpl
pop
cmp
test
clc
add
leave
dec
adc
xor
add
mov
iret
cli
loope
mov
ljmp
stc
xor
push
gs
std
dec
into
adc
cld
or
sub
notl
cmc
mov
xor
and
mov
dec
repnz
dec
inc
xchg
and
sbb
push
push
shl
push
fsubs
js
mov
clc
int3
insl
xchg
mov
test
in
push
pop
stos
sbb
ret
or
mov
std
cmp
movsl
pushf
imul
in
push
lret
cmp
dec
arpl
je
nop
dec
push
mov
enter
sahf
sub
hlt
cld
sub
les
test
lret
pop
dec
push
jns
jo
fs
out
outsb
mov
or
rcr
rcr
or
lret
mov
sub
push
leave
jg
sub
fsubrl
jne
sub
arpl
dec
out
aad
mov
fs
loop
lret
insb
or
xchg
jnp
add
mov
ja
or
rcll
arpl
pop
xor
ljmp
int3
push
dec
xlat
adc
movsb
push
xor
sti
std
push
mov
push
stc
in
cmp
lret
sbb
xor
cmp
movsb
mov
jne
bts
lods
aam
sub
testl
stos
stc
jge
mov
lret
out
dec
and
fbstp
cwtl
dec
shl
sahf
pop
jno
test
cmp
outsb
daa
into
push
imul
test
cmp
loope
test
test
dec
and
sbb
aas
in
lahf
pop
xchg
leave
rorl
lods
jle
popf
inc
pop
xor
pop
push
and
in
aad
sub
iret
mov
cmp
push
mov
push
insl
loop
in
movsl
dec
dec
out
xchg
add
and
fwait
jle
popa
mov
sub
fwait
mov
rcrb
and
xlat
xchg
push
pusha
adc
mov
in
cld
aam
mov
adc
dec
xchg
frstor
out
and
repz
sbb
or
filds
int
stc
sti
std
mov
outsl
push
lods
pushf
pop
jecxz
cld
sbb
or
jbe
imull
jecxz
adc
test
xchg
fs
inc
movsl
in
clc
mov
cmp
ret
loope
call
xor
cmpsl
xor
add
mov
negl
das
inc
jg
lods
mov
imul
ljmp
arpl
inc
pop
rorb
mov
xchg
inc
icebp
shrb
fildll
insb
adc
out
rclb
push
and
ja
pop
pop
ret
fisubl
je
aaa
insl
insl
shll
add
and
rolb
mov
lds
or
xor
xor
popa
inc
mov
jbe
out
xchg
les
mov
lret
fwait
adc
roll
test
cwtl
xor
iret
fwait
mov
inc
fisttpl
or
xchg
mov
js
insb
rcll
push
popa
pop
into
int
fadds
icebp
fucomp
sbb
icebp
dec
jmp
or
int
aas
add
fcmovb
xor
imul
pop
push
mov
in
add
movsb
mov
or
mov
lods
scas
scas
cld
mov
ja
sahf
lret
cmp
cmp
in
pushf
repnz
leave
fucomip
push
add
mov
clc
cmpsb
xchg
adc
cld
inc
dec
test
mov
add
push
cmp
sub
std
lea
push
gs
or
fs
ficoms
aad
in
imul
mov
push
mov
or
loope
or
pop
mov
test
orb
mov
mov
inc
xor
xor
leave
adc
les
rcrb
mov
ljmp
sahf
xchg
loope
xchg
inc
and
push
cld
cld
mov
dec
in
xor
in
scas
inc
dec
in
cmpsb
mov
mov
jae
into
rorb
cmovno
outsb
mov
xor
sub
imul
cmp
gs
cmp
push
test
xchg
jnp
pop
dec
pop
xchg
imul
xchg
out
jl
jp
or
jae
mov
mov
sub
mov
and
mov
out
ss
push
xor
js
sbb
ja
test
icebp
jmp
adc
cmp
cmpsb
xchg
mov
push
shl
or
into
in
dec
mov
or
jmp
shll
inc
mov
clc
jne
sar
in
mov
lea
aaa
xchg
sbb
cmpl
pop
repz
push
int3
in
mov
pop
mov
in
xchg
push
add
sub
xchg
mov
call
insb
stos
cmp
inc
leave
xchg
adc
fsubrl
or
out
ljmp
or
lods
sub
push
in
add
mov
jecxz
sub
mov
xchg
adc
pop
add
inc
rorl
popf
enter
mov
add
add
loop
outsb
adc
push
cmp
sahf
je
dec
sub
cli
incl
loopne
rcr
sub
cltd
repz
mov
inc
mov
leave
repnz
pop
sti
mov
mov
lea
push
push
jecxz
dec
xchg
out
mov
test
test
xor
test
sbb
fdivrl
cmp
movsl
arpl
imul
push
loopne
adc
and
lahf
test
cld
jle
xchg
lea
jae
stos
mov
cltd
sub
pushf
cmp
jno
or
int3
cmp
icebp
mov
dec
mov
pop
scas
stc
jp
inc
dec
cmpsb
leave
stos
ja
ret
movsb
and
ds
sbb
mov
cltd
mov
xor
mov
stos
push
fiaddl
xchg
mov
mov
sub
ss
loopne
lds
int3
dec
aad
imul
loopne
cs
lds
negb
jnp
faddl
inc
jns
adc
dec
cmp
and
sbb
pop
mov
or
mov
xor
aaa
cmp
sbb
add
cmp
lcall
mov
orl
mov
add
fxch
sub
test
rolb
loope
shlb
pop
or
dec
test
and
popf
mov
lcall
sbb
mov
movlps
std
imul
push
cli
mov
pop
lcall
insl
xchg
dec
cli
pop
clc
cs
frstor
mov
sub
xlat
dec
push
enter
inc
mov
negb
push
inc
inc
mov
cltd
and
dec
scas
iret
add
pop
rcl
pop
mov
jne
and
xchg
add
ss
adc
jns
ljmp
cmp
scas
mov
ja
das
mov
xor
sbbb
andb
lret
mov
cmp
shl
sub
mov
mov
out
push
and
cmc
int3
lret
pusha
pop
push
lock
push
add
outsb
pop
jle
in
xor
rcr
in
push
ret
push
pusha
jo
lahf
push
jge
test
sbb
lahf
dec
repnz
cmp
inc
xlat
rol
jae
loope
das
lret
icebp
addl
inc
pusha
fsubrl
rorb
stc
mov
insb
pop
push
push
int3
jg
cmp
sub
add
push
sbbl
nop
or
cwtl
push
orl
push
jae
fnsave
in
mov
or
cmp
adc
incb
cmp
mov
adc
pop
mov
inc
pop
fcmovne
addr16
xor
push
dec
cmpsb
out
addr16
or
add
add
sub
ja
and
xor
push
push
dec
lock
pop
cltd
sub
rcll
mov
fisubrs
jae
mov
fistps
inc
push
sub
orl
mov
push
test
outsb
add
dec
adc
jmp
xor
imul
jl
cld
xchg
add
fadd
repnz
shlb
mov
daa
push
popa
xor
cmc
mov
jb
mov
push
ja
mov
adc
mov
pop
cmc
or
adc
nop
inc
push
adc
mov
mov
cli
ret
fidivl
addr16
in
mov
adc
sub
mov
sbb
mov
cs
xchg
mov
das
push
jns
call
ja
fstpt
xchg
mov
ss
jge
stos
cmpsb
dec
mov
inc
in
cwtl
lret
push
mov
inc
dec
jns
fcomp
jg
cmp
neg
mov
mov
les
inc
cltd
pop
cli
mov
pop
or
mov
bsr
pop
pushf
add
jmp
xor
addb
mov
add
jbe
inc
sub
lods
cltd
jne
stos
mov
xor
xchg
call
and
push
or
lods
sarb
aaa
or
ljmp
inc
dec
loop
inc
int3
mov
adc
in
stc
mov
or
ljmp
fdivl
xor
loopne
push
or
ret
cmpsb
scas
xor
adc
push
ror
cmp
jne
mov
inc
es
into
aad
inc
test
sbb
into
adc
jmp
dec
cmp
stc
cmpsb
in
sbb
add
dec
cmc
pop
pusha
lret
outsl
push
jg
mov
dec
rorl
pop
jge
add
or
je
insl
pop
xor
xchg
out
aaa
dec
nop
loope
push
dec
push
outsl
lret
mov
sub
aaa
mov
sub
pop
loop
mov
out
lods
aas
cmp
dec
mov
mov
negb
sbb
pushl
movsl
cmp
cmc
outsb
pop
fiaddl
dec
cmp
outsb
mov
or
popf
push
sub
or
mov
xchg
and
arpl
mov
std
and
xor
and
out
inc
shll
testb
or
enter
ret
jnp
cmp
sbb
loope
mov
js
jp
push
arpl
cmc
push
fisubrs
or
enter
outsl
mov
popa
insl
add
jg
inc
xchg
jo
push
arpl
paddb
pop
cwtl
cmp
or
inc
xchg
in
mov
mov
sbb
mov
sbb
ljmp
jmp
insl
lahf
push
push
int
push
sbb
cmp
cmpb
das
lea
sbb
sbb
mov
push
pushf
sub
sbb
add
insb
jae
mov
lods
js
or
daa
push
cmpsb
lock
xchg
jp
call
and
cltd
mov
push
dec
inc
lods
fidivrs
push
pop
sbb
add
mov
popf
lahf
and
gs
ffree
pop
dec
mov
jp
sahf
and
mov
cli
in
xchg
cld
lcall
scas
push
adc
mov
and
mov
inc
xlat
mov
adc
aam
jmp
sub
cmp
sub
out
xchg
sbb
in
bound
ss
mov
dec
enter
mov
mov
div
sub
inc
and
insb
dec
and
lret
xor
adc
pop
aaa
and
sub
push
mov
mov
pop
sbb
lods
lcall
mov
loope
or
mov
arpl
cltd
xchg
jnp
in
sbb
test
cmc
rcrb
cld
cltd
les
addr16
nop
mov
and
push
int3
cmp
pop
pusha
fildl
lret
cmp
jg
pushf
out
fisubl
cmp
xlat
xchg
fyl2x
jb
mov
bound
mov
repnz
fimuls
mov
sub
mov
jnp
inc
and
jno
cmp
push
andb
xchg
xor
mov
mov
test
jle
into
ljmp
xchg
std
jnp
sub
inc
les
lahf
xor
adc
xorl
into
test
inc
hlt
mov
je
sti
lds
sbb
bound
das
mov
pusha
or
cmpsl
or
out
in
roll
add
mov
xlat
pop
andb
jb
jl
fwait
rol
loop
cli
xchg
push
push
push
in
mov
and
xlat
cmp
jne
dec
aad
shlb
xchg
cmp
aas
dec
add
fisttps
inc
or
in
ds
scas
dec
idivb
lock
daa
adc
pop
rorb
movsb
clc
ficoms
inc
xor
jmp
adcb
push
insl
mov
adc
inc
push
testb
mov
mov
mov
ds
test
xchg
std
sub
hlt
push
inc
je
adc
in
addr16
leave
mov
mov
loopne
rep
je
adc
mov
jns
jge
jbe
mov
movsl
sahf
inc
rcll
mov
adc
in
int
xchg
mov
cmpsl
bound
out
pop
iret
sarb
cmpb
mov
lret
dec
mov
add
mov
jg
push
and
fs
jbe
stc
addr16
test
ret
aas
mov
stc
repnz
push
sbb
mov
pop
ffreep
enter
sub
out
pop
xchg
sub
or
mov
bound
push
xchg
movsb
movsl
mov
add
xchg
push
shll
cmpl
and
push
jno
or
mov
adc
inc
sbb
dec
dec
mov
test
and
mov
lods
imul
xor
jbe
stos
lcall
popf
pop
pop
add
test
mov
add
mov
std
xlat
aaa
mov
mov
pop
fwait
mov
pop
leave
fistps
jl
dec
testb
aas
fidivs
rorl
pop
xchg
dec
lret
xchg
or
sub
or
dec
scas
cs
xor
testl
int3
jle
adc
push
stos
pop
dec
pop
outsl
nop
push
in
sbb
mov
add
lret
sbb
in
xchg
push
mov
pop
call
leave
mov
jbe
mov
xchg
or
mov
dec
in
jl
lods
rol
les
push
idivl
scas
daa
dec
sbb
push
xlat
push
cltd
int3
cmp
adc
jns
negb
movl
xor
sub
repnz
lds
jne
orb
push
jle
adcl
insb
and
add
mov
dec
pop
inc
cmp
or
cmp
les
jno
fadd
shll
inc
jmp
sbb
push
das
mov
sbb
test
and
out
dec
mov
pop
inc
jp
fcomps
and
xor
add
xchg
and
clc
push
mov
adc
les
xchg
stos
jb
or
insb
sbb
mov
fldl
inc
aaa
adc
popa
or
sub
mov
mov
inc
movsl
into
push
addr16
ljmp
or
push
mov
clc
jge
mov
xchg
jnp
insb
mov
mov
or
fistps
cltd
sbb
pop
in
sbb
ffreep
bound
jl
out
sub
xchg
sahf
push
jo
ljmp
lods
lret
test
jae
or
pop
aam
add
loop
ret
ret
enter
jo
lea
inc
shrb
cwtl
jmp
ret
fdivrl
adc
mov
icebp
dec
mov
sub
push
dec
mov
fstps
scas
dec
pusha
pop
mov
jle
fwait
mov
lea
fsubr
adc
cmpb
in
dec
js
out
xchg
andl
add
popa
jne
mov
mov
push
and
mov
mov
inc
sahf
xorb
loop
pushf
adc
insb
outsl
xchg
adc
das
jmp
add
jno
mov
push
in
es
jmp
mov
pop
or
pushf
mov
pop
jns
inc
cmp
scas
sub
jno
fiadds
jmp
inc
add
imul
in
shld
or
jle
fisubrl
inc
sbb
jae
mov
les
pop
sub
mov
lcall
cwtl
mov
pop
xor
fwait
xchg
insl
and
cld
stc
mov
outsl
mov
push
xchg
into
push
call
sub
sbb
insl
roll
inc
jb
int
idivb
cmp
aam
das
faddl
loopne
push
sub
jo
xor
sub
outsl
sbb
push
push
ret
icebp
imull
out
ljmp
pop
mov
leave
pop
std
sbb
arpl
lcall
xchg
cli
lcall
jb
xchg
stc
rolb
inc
adc
mov
jl
loop
cmpsb
xchg
add
xor
lock
add
ljmp
pop
lcall
dec
xlat
fdivrl
sysret
into
add
mov
fstps
xchg
adc
imul
call
mov
movsb
ds
mov
leave
pop
test
xor
xchg
jg
loope
scas
dec
clc
in
xchg
divl
fcmovne
enter
cmp
cli
xor
xchg
cmp
or
stc
pop
sub
rol
lret
out
jne
inc
iret
rcrb
add
js
ljmp
dec
mov
push
sbb
loope
push
inc
test
pop
mov
jno
popf
mov
pop
push
push
iret
out
ja
test
daa
dec
jne
fsubr
std
sbb
repz
push
pop
dec
movsb
aas
and
adc
jge
jo
mov
pop
iret
fldcw
mov
leave
adc
pop
ret
popf
inc
push
pop
ja
push
add
xor
mov
mov
cwtl
stc
stc
push
cwtl
push
dec
or
mov
insl
data16
in
or
jmp
mov
ja
mov
cwtl
jnp
jnp
fwait
ja
stc
sub
lods
sti
cld
push
push
mov
enter
and
enter
stos
or
inc
lahf
cmp
mov
movb
data16
in
xlat
out
popf
movsb
scas
inc
mov
les
xchg
int
push
sbb
stos
ret
mov
mov
lods
insl
shlb
out
lea
cmp
cli
mov
and
lea
push
mov
push
bnd
adc
in
or
add
xchg
je
rclb
cs
cmp
popa
data16
outsb
push
dec
es
sbb
mov
ret
bound
stos
ss
push
cmp
rclb
jmp
leave
jo
jo
les
jecxz
imul
fistpll
testl
and
xchg
hlt
addr16
or
ja
pop
xor
mov
xchg
daa
leave
add
pop
pushf
dec
dec
cmpb
popa
std
aam
xor
movsl
repnz
mov
std
lods
cmp
repz
xchg
mov
jne
loop
xchg
fnstenv
outsl
movsb
cmp
insb
mov
sub
popf
xlat
jne
cmp
repnz
je
pop
lret
sbb
cmp
sbb
push
hlt
sbb
xchg
sbb
movsb
mov
or
push
cmp
shrb
mov
mov
test
repnz
pop
xchg
adc
imul
push
fmul
cmc
in
mov
stos
inc
test
stos
xor
inc
cld
fcoml
mov
and
jl
andl
cmc
clc
out
aad
and
sub
je
fadds
rcr
fs
jae
inc
mov
push
push
sbbl
xchg
int3
call
xchg
jae
pop
rclb
mov
xchg
lock
mov
pop
outsl
mov
fs
cltd
or
push
adc
or
push
aam
lock
mov
mov
gs
das
xor
mov
pop
adc
rclb
push
aad
in
in
jb
mov
pop
ja
cli
call
jne
or
lahf
pop
test
cmp
addl
and
icebp
sbb
arpl
insl
fnstcw
fmuls
movsl
imul
sar
push
and
out
cmp
stc
pusha
movsl
mov
test
insl
daa
mov
xlat
push
fistpll
out
fcompl
xchg
rol
ds
cltd
inc
insl
ja
add
adc
and
xor
ret
loop
repnz
xchg
xchg
xchg
push
push
inc
bound
add
adc
and
xor
ret
loop
repnz
xchg
xchg
xchg
push
push
divl
add
adc
ret
out
repnz
xchg
xchg
xchg
push
inc
push
ja
add
adc
mov
xlat
sub
nop
cmc
pop
sbb
dec
dec
pop
mov
cmpsb
call
cmp
xchg
mov
js
push
jbe
pushw
inc
or
fadds
test
cwtl
mov
js
push
mov
data16
inc
or
fadds
test
cwtl
mov
inc
add
dec
jbe
or
sub
jmp
mov
insl
imul
fs
pop
xor
and
pop
xchg
inc
sar
sub
aaa
or
push
sub
or
pop
stc
dec
mov
addr16
lret
hlt
out
scas
ds
das
rep
jge
xchg
and
cwtl
or
mov
mov
cmp
sbb
out
or
flds
mov
mov
cmpsb
insb
mov
imul
aad
jae
dec
gs
adc
push
jns
scas
mov
sbb
cmp
jnp
and
sbb
dec
jge
adc
or
stos
pop
push
or
jmp
jmp
adc
cmpsb
call
idivb
mov
js
push
jbe
data16
inc
dec
notl
out
mov
xlat
xchg
jmp
ss
add
ss
ja
push
xor
mov
ljmp
notl
adc
push
and
push
or
insl
xor
test
pushf
stc
lods
ljmp
cwtl
mov
js
push
jbe
data16
inc
or
fadds
test
cwtl
mov
js
push
jbe
data16
inc
or
sub
mov
inc
popa
pop
lods
adc
push
pop
jp
jmp
bound
pop
aas
jmp
jae
fldenv
stos
push
sub
jmp
sbb
cmp
data16
notl
push
mov
test
repz
test
mov
pusha
jg
add
xchg
inc
addr16
mov
jecxz
shrb
xor
loopne
xlat
insl
aaa
mov
xor
pop
cmc
sbbl
mov
dec
mov
and
sub
sbb
push
fs
cmpsl
in
cld
mov
sub
stos
xlat
imul
ljmp
rcl
in
cwtl
cmp
mov
mov
imul
push
dec
adc
push
dec
inc
xor
add
or
icebp
aaa
jmp
xor
mov
out
repz
shlb
pop
pop
mov
bound
mov
in
add
test
push
inc
jne
add
inc
or
push
sub
or
pop
mov
popf
fwait
in
arpl
inc
inc
mov
mov
imul
in
rcll
pop
sarl
mov
push
dec
and
adc
push
lahf
shr
out
mov
aad
inc
fbstp
aam
xchg
xor
ds
pop
push
mov
call
fbstp
lods
pusha
jl
xchg
das
cmp
xchg
in
and
sbb
mov
cld
or
pop
stos
mov
loop
mov
arpl
jo
das
adc
adc
ss
push
data16
loopne
fs
cs
add
arpl
jecxz
adc
lock
pop
xor
and
popa
pop
ja
push
cmp
push
icebp
push
dec
fucom
dec
adc
test
push
movd
push
mov
les
adc
jmp
pop
xor
add
loop
xchg
or
inc
cld
or
push
jbe
popa
push
add
sub
add
dec
lods
sub
push
out
cmpsl
in
hlt
nop
inc
pop
mov
scas
scas
cltd
push
push
adc
inc
inc
push
sahf
insb
sub
xchg
mov
in
xchg
xchg
call
cltd
jno
mov
mov
cwtl
jno,pt
movsl
dec
xor
and
gs
add
cld
push
pop
imul
mov
push
and
dec
mov
ficomps
mov
lret
mov
mov
xorb
repz
and
adc
pop
push
loop
mov
pop
lea
mov
and
mov
sbb
inc
rclb
fcomp
or
xor
rcll
dec
push
sar
lds
or
fisubl
cmc
fs
inc
pop
mov
push
cld
jmp
lret
aaa
pop
jmp
or
in
shll
ja
in
into
lret
mov
xchg
pop
mov
add
repz
mov
jns
jnp
cmp
or
aaa
repnz
lret
popa
shll
and
fsubs
fbstp
jb
fwait
addr16
sbb
in
sub
push
inc
movsb
hlt
dec
aad
sbb
loopne
pop
rolb
std
adc
inc
mov
scas
arpl
pushf
mov
lcall
xchg
sbb
shll
jp
pop
dec
insl
icebp
cmp
dec
aad
bnd
xchg
pop
js
xor
pop
ja
pop
idiv
cmpb
cmp
or
and
or
and
xor
sub
call
mov
dec
mov
rolb
test
and
inc
loopne
bound
adc
mov
jns
mov
mov
jnp
outsb
jo
xchg
lock
cli
add
outsb
dec
mov
inc
adc
loop
and
xchg
inc
dec
dec
push
and
push
pop
cmp
inc
jl
pop
in
jecxz
in
daa
xchg
pop
in
cwtl
push
or
inc
dec
and
cltd
les
out
sti
mov
and
adc
push
jmp
sub
in
dec
add
mov
mov
imul
insl
xchg
push
jge
xchg
or
jge
fwait
cmp
xchg
lcall
outsb
push
cltd
das
ror
mov
adc
pusha
adc
push
dec
dec
in
push
test
xchg
call
outsl
and
shrl
aad
jl
pop
xchg
push
sbb
gs
dec
cmc
sub
mov
jno
fnstenv
and
jmp
push
pop
or
pushf
xchg
xchg
jl
xchg
sahf
xchg
lods
pop
xchg
sub
and
pop
and
into
push
pop
jnp
imul
adc
inc
add
or
inc
mov
ret
pop
aam
and
in
mov
mov
push
adc
cs
jg
jp
test
dec
mov
out
popf
mov
mov
movsl
cmp
out
cmp
lret
xchg
fisttpll
aam
push
xchg
cmp
sti
adc
mov
movsb
dec
shlb
cmc
shll
lock
mov
jmp
mov
ss
push
and
fstp
out
xor
imul
push
cmpsl
push
dec
fiadds
sti
stc
aad
add
out
sbb
push
mov
scas
pop
push
push
out
mov
jl
mov
lea
cld
loopne
dec
mov
xchg
mov
ljmp
pop
add
in
sahf
je
aaa
sbb
xor
aaa
pop
mov
and
test
jge
rol
push
repz
mov
xor
xchg
cmpl
and
clc
cmc
push
negb
movsl
aas
inc
adc
dec
subb
fs
lds
cmp
adc
iret
mov
int3
mov
jecxz
lcall
xor
mov
out
or
es
sbb
imul
add
nop
dec
xor
jmp
aaa
dec
push
mov
andl
and
popf
lret
les
outsb
xchg
fdivs
adc
lods
push
inc
loope
in
and
or
lds
imul
xchg
into
adc
les
repz
or
dec
pop
push
aam
lret
jl
and
pushf
bound
sub
cmp
push
rcll
sbb
add
loop
xor
std
xor
nop
stc
push
and
lret
adc
mov
lods
lret
add
pop
scas
push
mov
mov
mov
inc
cwtl
xchg
lret
xchg
movsb
sbb
sub
jmp
push
xchg
std
pop
fldcw
mov
out
lahf
lds
jb
test
shrb
ret
or
push
xor
or
mov
push
inc
cmp
insb
addr16
mov
pop
iret
jo
mull
add
pusha
cmp
call
xor
mov
dec
into
test
lods
and
inc
es
cmpl
mov
divl
mov
mov
dec
sub
imul
dec
or
aaa
pop
sbb
cltd
das
adc
bound
cmc
iret
sbb
pop
pop
xchg
xchg
mov
cmp
sbb
or
popa
dec
xchg
idivl
pop
mov
push
cmp
les
rorb
rclb
icebp
mov
sub
iret
imul
sbb
in
dec
inc
pop
xlat
notl
sub
adc
and
repnz
or
repz
mov
adc
mov
cmp
and
outsb
or
mov
jns
mov
jbe
pop
fimuls
mov
push
fwait
sbb
jne
lds
xor
jb
inc
mov
andb
push
fcmovb
fdivr
pop
xchg
mov
sahf
sar
pushf
pop
lret
outsb
into
je
imul
addr16
insl
jp
loop
ret
xchg
subl
inc
cmpsb
loop
xchg
lods
out
outsb
cmpsl
movsb
mov
sub
std
jnp
sti
test
or
mov
jle
jmp
pop
or
mov
repnz
mull
sahf
scas
xorb
aas
pop
nop
mov
mov
neg
mov
sarl
ja
jge
fistpll
aaa
nop
nop
jmp
fsubrl
iret
mov
cmp
or
outsl
in
hlt
jg
rolb
clc
push
xchg
push
sub
mov
imul
or
cmpsb
cmp
lcall
loop
mov
repnz
jae
cmpsl
out
pop
mov
jecxz
repz
sbb
inc
mov
fnstsw
notl
xor
ret
lcall
lcall
pop
rcrb
mov
sub
dec
cmpb
and
rcl
js
push
jns
sub
add
xchg
pop
inc
jbe,pt
loope
xchg
lret
mov
dec
js
jbe
sar
push
out
xlat
xchg
sub
rcll
dec
imul
jmp
mov
nop
dec
mov
testl
pop
inc
fstl
cwtl
sub
dec
stos
fists
pop
xchg
inc
divb
mov
mov
lret
mov
inc
adc
fisubl
inc
push
orl
push
jb
into
xchg
dec
mov
mov
inc
popa
arpl
test
xchg
dec
jg
rolb
ret
stc
imul
cltd
push
cld
ret
aad
lock
xchg
test
outsb
sbb
push
cmp
rcl
nop
xchg
mov
pop
mov
roll
jg
sub
mov
es
add
fnstsw
mov
fildl
and
fisttpl
mov
or
mov
incl
push
ret
dec
mov
ljmp
xchg
xchg
int3
add
testl
jnp
lea
loopne
dec
mov
mov
js
adc
enter
outsb
insb
cld
cmpsl
or
je
push
or
xor
adc
testb
xchg
imul
add
aas
xor
cmp
inc
add
mov
sub
nop
in
in
xchg
adc
inc
pop
pop
fcomp
jbe
mov
aad
in
in
aas
andl
or
stc
clc
loope
lahf
mov
std
aam
ss
cs
je
lods
scas
addr16
cmpsb
mov
popa
push
movsl
mov
sarb
fdecstp
sub
loop
xchg
jl
shl
lock
fdivl
inc
lret
enter
popa
lods
idivb
imul
into
call
sbb
adc
pop
mov
cmp
cmp
icebp
cmp
fnstcw
bound
insb
mov
loop
xor
xchg
bound
cmp
xor
push
out
mov
jo
lods
mov
or
cmp
repz
cmpsb
testl
xchg
loop
fsubrp
popa
and
test
or
push
bnd
sahf
jae
fwait
hlt
dec
cmp
mov
daa
add
fsts
cmp
inc
push
pop
add
icebp
test
jns
fists
xor
adc
dec
cmp
stos
out
ljmp
data16
in
loope
and
ljmp
outsl
xlat
cld
outsb
fstl
adc
xorl
sub
jno
sub
xor
jg
pop
fimuls
movsl
jg
sti
movsb
mov
mov
jae
movsl
shlb
pop
repnz
ja
fs
or
sub
es
dec
dec
dec
out
rol
push
and
pop
in
pop
push
cmp
mov
xchg
adc
and
sub
enter
mov
push
xchg
test
sti
lcall
into
stc
fcmovne
add
pop
imul
cmc
mov
and
leave
or
or
push
mov
pop
gs
fimull
hlt
adc
lods
mov
cmp
in
and
sti
vcvtsd2si
sub
mov
repnz
in
mov
mov
mov
sub
loop
push
dec
add
sub
jbe
iret
mov
pop
push
and
push
popa
ja
shlb
icebp
mov
fists
ficomps
push
or
and
rcl
pmaddwd
aad
out
adc
cmpsl
mov
jbe
adc
movsl
or
or
dec
enter
push
lret
das
adc
push
inc
cmp
push
xchg
mov
fsincos
out
xor
movsl
fildl
dec
loope
clc
mov
sub
adc
inc
xor
ret
out
mov
cmp
add
test
jae
fs
adc
aaa
cmpsb
movsl
mov
inc
mov
mov
test
push
test
insl
sbb
dec
mov
insb
es
cmp
test
sub
out
adc
push
enter
scas
ja
movsb
mov
add
xchg
ret
adc
idivb
insb
mov
xchg
cmp
cmc
mov
int3
lds
pop
xor
je
popa
aad
fdivl
mov
xor
sbb
cmp
cwtl
push
or
mov
xchg
mov
push
and
fs
lock
push
jnp
sar
dec
inc
mov
ds
add
scas
lock
adc
test
repz
dec
or
addr16
lods
jbe
dec
mov
push
lcall
jbe
lcall
push
xchg
imull
jp
sbb
or
mov
inc
rcrl
pop
lock
dec
addr16
loop
rolb
lret
jp
xor
sub
lahf
xchg
aas
xchg
gs
inc
push
stos
lahf
pop
stc
jbe
sbb
mov
call
aaa
int
std
lahf
jo
cmp
adc
and
mov
aaa
push
push
push
movsl
mov
mov
insl
lret
cmc
ljmp
xchg
sub
pop
mov
push
adc
stos
adc
pop
adc
scas
dec
sti
aam
pushf
js
lock
jecxz
pop
xor
xorb
repz
mov
xchg
push
insb
lds
cmc
jecxz
add
cs
xchg
cmp
jge
ds
sahf
add
movsb
loopne
sarl
hlt
xchg
push
pushf
push
fisttpl
cmp
add
int
inc
lcall
jg
push
insb
insl
jb
sub
jecxz
jb
lahf
ret
mov
imul
cmp
stos
int
mov
mov
dec
inc
ficoms
xchg
dec
sub
sbb
or
dec
shlb
stc
into
push
pop
stc
out
and
cmpsb
mov
jno
jg
pop
pop
mov
sahf
icebp
and
cli
fsub
movsl
xor
xchg
out
xchg
aas
xor
daa
xchg
xchg
loopne
lret
leave
or
fcomp
cmpb
cmp
cli
outsb
xor
bound
xchg
stos
lahf
pusha
push
dec
pop
mov
rcrl
int
rorb
cltd
nop
inc
or
lcall
sbb
sub
mov
fcompl
mov
icebp
xor
in
sbb
sbb
orl
bound
dec
leave
ja
push
adc
pop
in
pop
xchg
insl
xor
mov
hlt
pop
negl
mov
cltd
mov
sub
push
outsl
mov
jns
push
out
in
and
nop
mov
pop
les
popa
mov
test
push
jno
vmwrite
pusha
shl
popa
scas
mov
cli
xor
popl
mov
inc
inc
popa
sahf
push
test
cwtl
pusha
xlat
mov
sbb
test
test
xor
shll
or
addr16
cmp
enter
adc
cmp
das
and
cmp
mov
jp
iret
sub
out
arpl
mov
pop
clc
and
push
shlb
jmp
cmp
xchg
jae
push
sub
insl
in
in
fisubl
cld
adc
lods
arpl
leave
mov
push
lcall
push
and
inc
loopne
inc
jl
int
das
cltd
xor
jae
jb
ret
and
adc
push
push
ljmp
es
fcomps
push
push
sbb
push
adc
imul
push
sbb
xchg
push
dec
pop
insl
mov
mov
or
and
mov
es
call
push
rcll
inc
out
pop
js
repnz
in
add
test
divb
stos
mov
negl
mov
adc
inc
push
les
mulb
daa
insb
mov
inc
aaa
xor
add
inc
inc
adc
sbb
bound
jmp
mov
sbb
jge
dec
or
jnp
nop
jbe
daa
out
xor
divl
xor
push
fwait
hlt
jg
push
jne
sub
push
pop
roll
lahf
xor
lahf
mov
or
dec
notl
xchg
les
mov
hlt
ret
and
xchg
scas
push
aaa
ljmp
sub
cmp
lock
or
lods
dec
push
mull
xchg
leave
lds
stc
pop
cld
dec
ror
int
jmp
push
adc
js
es
mov
rorl
xchg
rcll
or
imul
or
lds
and
cmp
lahf
fldcw
loope
jo
fs
mov
scas
shrd
insb
int3
adc
test
out
and
cmp
mov
mov
mov
repnz
jo
sbb
jns
inc
cli
ss
daa
call
pusha
sub
adc
push
sbb
rorb
addl
popf
mov
daa
ljmp
cmp
inc
dec
cmpl
data16
test
pop
mov
in
punpckhdq
adc
sub
outsb
lods
cwtl
lret
and
sub
orl
aaa
fists
mov
fstp
jmp
shl
mov
ljmp
and
mov
jae
or
or
call
adc
mov
es
repnz
mov
sahf
mov
data16
cmpl
aad
xchg
stc
repz
bound
test
scas
ss
lds
out
imul
sarl
cli
sbb
shlb
cmp
mov
test
sbb
stos
jle
xchg
mov
bound
aad
ljmp
push
popa
in
aas
cli
je
ret
mov
es
aad
cld
add
call
mov
rclb
pop
jo
dec
lods
sub
mov
jo
sub
mov
add
mov
xor
xlat
sbb
mov
add
fildll
icebp
jg
std
stos
mov
aas
adc
add
xor
mov
out
inc
dec
cmp
push
inc
inc
cmp
std
pop
jl
outsl
pop
adcl
sbb
ljmp
mov
sbb
incb
sti
daa
sub
cmp
movsl
pushf
push
adc
dec
push
shl
out
loop
cli
adc
pop
push
push
test
daa
add
xchg
pop
shrb
xor
dec
push
cmp
in
jg
cmp
cltd
push
es
mov
repnz
inc
shlb
sti
loop
sub
test
mov
movsb
sbb
sub
inc
int
shll
scas
cli
outsl
fisttpl
xor
lods
xchg
cmp
aam
cwtl
push
push
divl
adc
xor
test
jns
jp
movsb
add
sub
into
push
inc
incb
and
outsl
out
int3
pop
mov
xchg
push
and
push
ret
mov
pop
push
nop
nop
add
xchg
insl
xchg
loop
sarl
adc
ds
scas
leave
sub
mov
test
subb
scas
pop
inc
xor
test
mov
popf
pop
mov
xorb
push
xchg
inc
push
pusha
cli
mov
pop
cmc
loop
sbb
mul
pop
and
loop
dec
xchg
cmpsb
xchg
jg
loop
stos
paddsw
cltd
pop
push
nop
sbbl
popa
fnclex
icebp
push
fnstsw
sub
ja
into
ret
or
mov
in
push
das
sub
daa
jle
push
popl
jge
sub
test
bswap
add
cmp
out
or
addr16
mov
insl
pop
push
call
or
jg
push
std
cmpsl
xchg
and
or
test
or
jb
test
mov
lods
push
rcrb
mov
stos
cmovge
sbb
and
add
jae
mov
decb
hlt
std
les
fmull
cmpsl
sarb
daa
inc
adc
ss
das
or
sbb
out
add
cmp
or
int3
scas
int3
loope
push
mov
and
lea
cmc
or
inc
xlat
mov
loope
cwtl
out
xor
shl
cmp
aam
push
outsb
in
xor
imul
je
pop
hlt
pop
arpl
or
dec
xor
popa
int
sub
jp
sub
test
sti
js
dec
or
mov
xchg
mov
mov
sbb
scas
dec
and
hlt
popl
push
fisubs
push
lret
xchg
adc
les
out
cmc
mov
push
push
mov
pusha
mov
scas
rclb
adc
fbld
test
cwtl
mov
sbb
fbld
cmpsb
call
xlat
adc
sub
dec
mov
xchg
sbb
push
xchg
flds
test
cwtl
mov
js
push
jbe
data16
inc
or
fadds
test
cwtl
mov
js
push
jbe
data16
inc
or
fadds
test
cltd
inc
mov
js
imul
cmp
push
sbb
mov
cmpsb
call
idivb
ja
xchg
ret
push
aas
push
mov
xlat
es
imull
cli
cmp
lret
bswap
insl
mov
pop
push
pop
popf
dec
in
cmp
sub
sbb
or
cmp
lret
jge
dec
lcall
in
pop
popf
dec
lods
push
std
sub
sbb
or
fcmovb
lret
sbb
mov
jp
dec
in
clc
sub
je
jns
mov
or
lcall
ljmp
xor
xchg
fsts
test
cwtl
dec
inc
mov
rolb
or
adc
mov
pop
sar
js
js
or
movsb
mov
sub
outsb
sub
out
add
sub
mov
icebp
popf
xchg
sbb
mov
pop
je
test
stos
adc
std
aam
adc
or
mov
mov
xchg
xor
and
lock
stos
lea
fmuls
imul
hlt
sarb
addr16
jecxz
xchg
mov
push
cmp
imul
sbb
pop
jbe
imul
ficompl
stos
dec
lcall
sti
pop
lods
dec
movsl
cmp
sub
sbb
arpl
stos
jns
gs
adc
cmp
pop
fisubrs
aas
clc
ds
jns
dec
movsb
arpl
jg
jl
add
sbb
mov
xor
adc
push
xchg
sub
push
mov
ds
jge
dec
lcall
lea
dec
in
cmp
sub
sbb
or
ficompl
stos
dec
lcall
lea
dec
in
cmp
sub
sbb
or
aaa
fisttpll
mov
adc
dec
icebp
out
sbb
test
mov
imul
sti
cltd
or
dec
mov
sub
popf
cmpsb
test
xchg
roll
cmp
jg
add
dec
inc
xor
xchg
cmp
sbb
sbb
fistpll
fs
movsl
mov
test
mov
or
fxch
cmp
leave
mov
mov
or
cmp
jmp
mov
pop
outsl
push
adc
sbb
mov
mov
testl
pop
xchg
bound
test
sub
jne
in
ds
xchg
dec
out
push
and
xchg
icebp
les
orb
adc
in
lahf
faddl
jmp
or
cs
add
dec
aam
andl
or
fildl
push
mov
insb
or
add
in
sbb
push
sub
fwait
jl
dec
mov
out
imul
out
adc
stos
movsb
lds
std
mov
adc
adc
jl
push
sarl
cmp
dec
lock
xchg
jl
ret
hlt
stc
out
cli
jno
ret
push
test
pop
mov
jne
pop
mov
fdivs
cmp
outsl
mov
xlat
inc
cld
mov
subl
cli
cmpb
popa
lea
jecxz
dec
mov
mov
and
lds
in
and
push
lock
add
sbbb
adc
sbb
ror
ret
adc
xchg
pop
or
xchg
fisttpll
pop
inc
ljmp
ret
jne
inc
lahf
cmpsl
push
add
adc
aaa
fwait
mov
int
cltd
push
icebp
cmpsl
jl
pop
outsb
sub
dec
push
jmp
popf
ljmp
hlt
je
sbb
mov
push
imul
ret
pop
sbb
int
mov
lods
ljmp
mov
mov
sub
or
ret
push
push
addl
xor
dec
mov
repz
les
or
iret
mov
fcmovnbe
xor
mov
xchg
daa
clc
shlb
lret
bound
test
or
dec
addr16
sti
mov
hlt
fcompl
mov
jnp
mov
dec
enter
rorl
cwtl
inc
loop
in
sbb
mov
test
pop
lea
push
xchg
pop
adc
pop
hlt
pusha
pushf
pop
enter
adc
dec
lds
ss
stos
jbe
cmp
sub
cld
mov
int
sbb
pop
fs
out
mov
les
pop
push
sbb
lahf
aam
lods
sahf
push
outsl
sub
xchg
lcall
ds
push
sub
pop
in
movsl
lea
mov
lea
ja
shrl
outsl
sbb
sbbl
ds
outsb
or
xor
xchg
sbb
sbb
dec
pusha
sarl
enter
jbe
push
jno
adc
inc
cmp
movntps
add
cmpsl
push
pop
jecxz
mov
push
push
stc
stos
loopne
leave
leave
xor
aam
push
xlat
adcl
cmp
inc
push
sub
fcmovu
fnstsw
jno
inc
shll
xlat
xlat
loope
xchg
iret
push
add
repnz
push
xor
out
mov
mov
ds
aad
pop
lahf
stos
enter
sub
ja
inc
inc
pushf
xchg
xchg
shrb
mov
xlat
cmpb
inc
sub
pop
push
outsb
or
cmp
jmp
ret
add
ret
arpl
xor
adc
xchg
iret
adc
fmul
sub
mov
push
push
std
sti
imul
dec
sbb
and
call
mov
bound
or
xor
xor
subb
push
xorl
pop
outsl
pop
popf
dec
cltd
out
cmpsl
push
mov
dec
imul
sbb
or
push
jbe
lahf
dec
and
pushf
mov
lea
sub
vmulps
jnp
aam
cmpsb
jne
inc
jmp
pop
cmpsl
fmull
xchg
push
and
pop
mov
jae
ret
push
out
sti
xchg
out
jbe
js
mov
jo
sbb
xchg
mov
or
and
clc
sbb
stc
out
xchg
popa
sarl
inc
std
mov
pop
test
mov
ret
jge
inc
test
mov
shrl
mov
fisubrl
addb
adc
int3
mov
and
push
pop
push
leave
insl
into
cwtl
xchg
dec
mov
shrl
mov
push
jo
stos
push
lea
repz
stc
test
or
inc
xchg
dec
aas
xchg
test
sti
int3
push
enter
pop
stos
arpl
in
std
lret
push
pop
jae
pop
jmp
into
iret
pop
adc
rcr
mov
cmp
sar
cmp
stc
icebp
es
mov
in
popa
adc
lock
out
into
mov
es
xchg
jno
lock
sub
xchg
out
fistl
out
movsl
shll
cli
push
lret
adc
and
shll
xchg
add
lret
dec
jle
data16
out
hlt
ja
adc
jns
sbbb
shrl
mov
and
es
add
xor
push
mov
mov
jmp
movl
mov
sub
mov
pop
push
push
cmp
push
mov
mov
test
movsl
loopne
sub
sub
sub
dec
jb
sbb
dec
outsl
cmc
xor
movsb
jecxz
mov
adc
pop
enter
gs
pusha
or
mov
stc
and
push
lods
int3
in
xchg
and
xor
into
inc
ret
dec
sbb
fidivs
sub
jmp
mov
negb
scas
add
outsb
insl
push
pop
inc
and
icebp
or
inc
push
push
sbb
push
xor
clc
pop
pop
add
fistpll
pop
idivl
lcall
lods
cmp
gs
sub
cmp
inc
inc
xlat
mov
stos
frstor
out
jp
adc
aad
fimull
insw
int3
push
out
and
xchg
jmp
sbb
popf
mov
mov
dec
mov
pushf
push
xlat
fisttpl
pop
cmpsl
push
mov
imul
arpl
or
insl
mov
mov
mov
mov
lahf
inc
mov
xor
and
mov
into
out
and
lods
mov
pop
cli
fnstcw
add
xor
das
mov
xor
adc
dec
mov
dec
pminub
outsb
xlat
jmp
or
es
notb
sbbb
arpl
push
sbbb
aas
cmc
scas
insb
and
mov
fiadds
mov
adc
jbe
pop
movsb
outsb
mov
ret
shll
iret
aas
lea
jg
jecxz
push
add
push
dec
mov
shl
jnp
xchg
fdivs
push
and
push
repnz
fucomip
sbb
and
ss
jno
xchg
shl
mov
mov
sbb
push
jp
scas
add
fsub
add
sahf
cmp
fstpl
sbb
and
mov
xchg
dec
outsb
inc
mov
pop
jl
inc
lret
int
mov
or
jmp
inc
xchg
inc
fcomps
adc
xacquire
push
xchg
icebp
lods
ficompl
mov
imul
rcl
jmp
sub
push
lahf
mov
xchg
add
scas
dec
cs
sbb
js
repz
and
fstpt
mov
jns
leave
ret
jp
or
dec
jne
mov
pop
stos
mov
cmp
shll
cwtl
sysenter
mov
push
loope
repz
push
test
or
pop
push
jecxz
mov
and
adc
les
cltd
mov
inc
fcmovu
jecxz
jno
in
scas
mov
sub
ds
pop
rcl
pusha
popa
pop
mov
sbb
dec
repnz
out
movsl
je
jbe
mov
stos
and
insb
inc
push
and
jp
adc
push
lcall
movsb
stos
cmp
mov
cmpsb
xchg
and
gs
lods
inc
dec
xchg
enter
dec
cmc
xchg
in
pop
and
cli
inc
add
cmpsl
mov
nop
push
push
jecxz
inc
mov
shlb
fdiv
or
cmpsl
sbb
sahf
ljmp
mov
out
push
repz
cltd
sub
sahf
mov
fwait
stc
push
test
inc
rcll
push
or
aaa
pop
jno
nop
xchg
mov
hlt
mov
sbb
mov
clc
mov
lcall
fmulp
loop
push
mov
sub
mov
pop
and
fsubrl
addb
arpl
and
sbb
cmp
jnp
add
jbe
mov
test
dec
outsb
in
jno
inc
fs
mov
pop
cltd
xchg
xchg
pop
sarl
jecxz
jecxz
aam
lahf
sub
push
mov
subb
test
sub
cmp
es
rol
dec
sub
xchg
add
pop
test
add
dec
jns
out
jns
test
and
leave
rclb
out
xor
mov
adcl
push
push
test
aam
les
into
or
mov
sbb
pushf
outsl
loope
lsl
xchg
cmc
jle
int3
dec
dec
inc
or
add
sbb
mov
outsl
pusha
out
mov
flds
psadbw
mov
mov
pop
sbb
dec
xchg
ja
jbe
mull
push
mov
xchg
ds
pop
imul
call
mov
dec
and
shrl
je
and
push
lods
dec
dec
sub
mov
dec
dec
fsubs
mov
out
or
pop
lods
pop
xor
add
sti
pop
std
dec
push
mov
loop
pop
sbb
loopne
jecxz
jge
or
mov
arpl
aad
cmp
in
movsb
cltd
adc
and
cmc
adc
mov
outsb
imulb
pop
addr16
dec
jbe
xchg
enter
push
mov
xchg
dec
push
inc
leave
cwtl
outsb
cld
cs
aam
daa
addl
das
xchg
mov
loopne
repz
xchg
mov
adc
in
fndisi(8087
push
negl
out
xchg
mov
les
jmp
outsl
stos
out
fsubrl
xchg
icebp
sub
add
xchg
je
aam
mov
inc
cmpsl
scas
in
sbb
sbb
hlt
xor
dec
jnp
xchg
xor
je
fidivrl
lret
lcall
push
inc
or
dec
adc
jecxz
mov
popa
scas
ja
jg
sub
mov
mov
sbb
movsl
dec
adc
cmp
xchg
xor
adcb
add
sbb
out
out
cmp
xor
icebp
sbb
psadbw
add
sub
push
jmp
mov
sbb
sub
mov
xchg
rorb
pop
adc
cmp
xor
xchg
fs
sahf
jge
and
cltd
sub
ds
fldl
lods
xchg
shll
pop
mov
shl
xor
jno
cwtl
ss
loope
xorb
jb
xchg
inc
out
push
cld
xchg
enter
cmp
mov
inc
push
mov
mov
jb
int
or
xchg
sub
scas
movsl
popf
xchg
test
hlt
sub
das
and
cmpl
and
cmp
lcall
outsl
ljmp
pop
jp
xlat
mov
xor
xor
scas
dec
mov
dec
push
mov
dec
xchg
test
add
add
xlat
xchg
lods
call
cmp
fcompl
add
in
out
lret
testl
sti
jg
adcb
push
jbe
lret
orb
jmp
int
pop
cltd
lahf
movsb
sub
icebp
add
jle
inc
lods
inc
ss
pop
jbe
mov
mov
into
out
sbb
data16
je
rcl
xorb
push
data16
push
xor
aam
lahf
xlat
cmc
or
inc
int3
ret
fs
push
adc
or
inc
mov
sbb
hlt
or
adc
pop
or
or
jmp
movl
cld
leave
int3
dec
xlat
repz
lahf
cmp
sbb
pusha
lock
frstor
jmp
add
pop
in
rcll
pop
and
jecxz
fdivrl
jle
adc
dec
xor
clc
xchg
mov
pop
imul
dec
cwtl
xor
adc
int3
xchg
add
lcall
subl
mov
add
jle
ret
inc
arpl
jl
sbb
jp
leave
sbb
mov
jae
lret
sbb
inc
mov
inc
adc
popf
imul
mov
lods
dec
iret
test
xor
mov
pusha
cmp
adc
lea
mov
xchg
jge
out
lea
shr
js
les
jl
subw
daa
inc
cmpsl
mov
test
mov
inc
dec
ljmp
cs
cli
sti
fldl
mov
idivl
sub
lods
pop
sbb
sbb
fcoms
out
dec
aas
test
push
dec
mov
mov
addb
fdivl
arpl
cltd
bound
mov
jg
xor
xchg
sub
push
xchg
xor
iret
jp
lcall
mov
inc
pop
inc
test
popa
lahf
clc
mov
rclb
cmp
imul
idivl
daa
arpl
lds
fistl
xor
dec
pusha
xchg
shrb
out
xchg
les
cmpsl
adc
dec
pushf
arpl
adc
mov
cmp
xchg
mov
sbb
push
and
lods
outsl
mull
hlt
push
icebp
or
popa
fisttps
int3
pop
or
cwtl
fwait
adc
xchg
xchg
jb
xchg
sub
xchg
sar
lcall
aaa
sub
sarb
inc
inc
hlt
mov
in
or
ret
jmp
insl
pop
js
int3
cs
dec
mov
in
jge
filds
sbb
jne
dec
jle
inc
sbb
mov
mov
repnz
rol
movsb
inc
scas
fwait
sar
dec
test
xchg
lahf
jecxz
lahf
roll
and
aam
outsl
sub
movsb
cld
jnp
insb
lods
les
pop
xor
pop
sahf
pop
and
cltd
or
push
loop
popf
shl
mov
cs
sbb
jns
adc
ds
cwtl
jno,pt
adc
loope
xor
mov
in
repz
cmp
mov
cli
clc
data16
enter
xchg
mov
sbb
outsl
sub
dec
ret
jbe
dec
dec
jb
or
idivb
sarb
lret
sbb
hlt
jnp
xchg
sub
pop
out
hlt
xor
xchg
pop
popf
mov
push
les
and
push
or
je
icebp
sbb
in
jbe
out
faddl
push
dec
stc
sub
pushf
inc
and
mov
movsl
popa
lcall
lret
icebp
xlat
dec
mov
lret
subl
pop
add
adc
lahf
gs
movsb
daa
dec
mov
xor
fs
movsl
shl
jle
lods
addr16
mov
and
mov
push
repnz
dec
jle
mov
dec
jnp
icebp
mov
ds
scas
js
lods
imul
xchg
jecxz
add
lods
in
dec
loopne
sbb
mov
sbb
pop
icebp
aad
and
mov
ljmp
dec
out
cmp
bound
lods
jg
hlt
sbb
jl
dec
rolb
adc
cmp
into
jnp
repz
aam
ds
xchg
pop
jl
lcall
sahf
push
fstpl
cld
fs
xor
loop
je
loopne
cmp
das
out
xchg
pushf
inc
nop
mov
adc
pop
mov
jecxz
mov
mov
and
push
sarl
and
popa
mov
push
shlb
je
push
xorb
addr16
cld
das
pop
stos
jo
rclb
or
cltd
push
sarl
scas
jle
mov
push
cli
inc
adc
mov
sbb
int
cltd
outsb
jge
negl
bound
pop
lret
stc
outsl
xchg
inc
aas
jns
imul
mov
cmp
cmp
daa
mov
xchg
testb
or
cwtl
or
ds
add
mov
or
ret
rcrl
xchg
adc
mov
les
and
pop
pop
sub
pop
pop
mov
inc
inc
stos
cmp
lock
pop
repz
or
jbe
orb
out
es
and
xor
sub
arpl
ss
and
ljmp
and
lods
lds
inc
mov
js
aas
mov
div
jl
cmp
popw
xchg
dec
or
dec
imull
push
sub
mov
fs
mov
movsl
jl
sub
movsb
pushf
addl
cmpsb
fsubrs
and
push
in
repnz
mov
push
repz
pop
sarb
lock
xchg
push
test
outsl
cmpl
imul
shrb
jnp
rol
shll
xor
and
dec
loope
aam
idiv
xlat
push
sbb
xor
mov
sbb
push
and
adc
xchg
in
loopne
aam
sbb
ror
repnz
out
hlt
xchg
pop
or
lret
add
dec
rcrl
xor
jp
xchg
cmp
sub
push
ret
int
mov
sbb
mov
inc
in
test
repnz
xchg
clc
dec
movl
inc
in
ret
pop
pop
inc
jnp
and
or
repnz
in
test
js
clc
pop
cmp
test
fidivl
adc
inc
mov
jmp
xchg
add
mov
das
fwait
sti
mov
imul
push
call
pop
push
out
repnz
es
mov
xor
mov
daa
inc
xchg
xchg
loop
xchg
std
or
cmp
scas
cmp
adcl
inc
dec
mov
cli
repz
push
dec
jecxz
dec
lock
or
aaa
xchg
cld
add
mov
imul
loopne
cmp
adc
push
mov
sub
inc
sub
adc
in
movsb
mov
daa
mov
test
fisttps
dec
push
dec
push
push
loope
nop
sarl
xor
inc
or
and
insb
inc
pop
or
cmc
mov
xchg
pop
jecxz
enter
pop
inc
lods
rcr
stos
shll
sub
jb
out
stos
outsb
push
stc
fbld
push
sbb
addr16
test
cmp
jo
repz
lock
lods
decl
or
cwtl
dec
shl
cmp
dec
es
dec
imul
fisubl
push
dec
mov
or
jg
fdivrs
sub
xor
sub
in
xor
push
and
subl
xchg
mov
cmp
imul
notb
dec
cld
xchg
pushf
inc
fcompl
adc
out
movsl
insl
dec
or
inc
jecxz
outsl
aam
stos
sbb
jb
das
rorl
push
adc
fwait
test
repz
ja
fldt
push
test
int3
xor
inc
add
lock
jmp
jecxz
add
scas
push
enter
lahf
fs
popa
sahf
jo
in
adc
add
int
movsl
cld
cwtl
cmp
jge
pop
pop
inc
cli
add
add
mul
pushf
inc
jmp
mov
add
adc
rcl
cwtl
add
mov
mov
les
out
aad
mov
sub
mov
in
or
enter
adc
popa
mov
fmul
sti
pop
ja
mov
inc
xor
movsb
xchg
stos
shll
mov
repz
cmp
or
mov
clc
dec
dec
mov
mov
stos
pop
icebp
std
inc
in
lahf
call
push
or
cli
jmp
cmp
int
jno
sarb
mov
test
adc
push
sbb
xchg
rcr
fwait
xor
dec
scas
dec
addl
popf
pop
test
clc
xor
in
pop
cmc
call
dec
cmp
add
imul
sbb
lcall
ret
test
nop
fcmovnu
popf
add
fs
dec
push
in
out
push
add
adc
pop
push
popa
das
jmp
fsubl
lahf
dec
jo
dec
ret
jae
stc
dec
cmp
mov
clc
pusha
jb
popf
push
sub
sbb
ds
les
scas
xor
xor
dec
or
xchg
push
push
sarl
xor
jae
sarb
mov
mov
arpl
jno
add
mov
jbe
mov
inc
inc
sbb
jp
and
xor
fsubs
fucomp
mov
push
fcmovnu
out
mov
jle
xchg
xor
and
xor
popf
xchg
in
mov
sub
movsl
xchg
mov
or
jne
adc
mov
ja
in
xchg
pusha
pop
fisubrs
stos
inc
sbb
bound
add
ret
arpl
mov
push
pop
and
and
loope
imull
cmc
test
lahf
push
dec
add
rcll
call
xor
in
adc
adc
dec
ficompl
stos
dec
lcall
lea
dec
in
cmp
sub
sbb
or
ficompl
stos
dec
lcall
lea
dec
in
cmp
sub
sbb
or
ficompl
stos
dec
lcall
jge
popf
dec
in
cmp
sub
sbb
ljmp
insl
stos
dec
lcall
daa
pop
popf
cmp
xor
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
add
xor
stos
cmp
or
jno
mov
nop
xor
roll
loope
icebp
xchg
add
xor
inc
lds
popa
in
add
mov
jne
jne
gs
mov
pushf
or
pop
fisttpll
jns
imul
mov
fcomps
push
mov
movsl
sub
ljmp
mov
nop
xor
and
mov
cmp
push
push
mov
jp
int
sbb
xor
mov
nop
jle
outsl
leave
icebp
fisttpl
mov
lcall
adc
outsb
push
lret
jle
and
xchg
or
fs
mov
pop
xchg
out
jl
andl
adc
add
add
cmp
std
inc
push
push
gs
test
out
cmp
inc
inc
sub
adc
outsb
xor
aad
lods
ret
inc
rorl
gs
sub
hlt
push
pusha
in
and
jmp
jne
adc
push
xor
negl
add
inc
aad
cmc
popa
cld
push
sub
fstps
outsl
sti
gs
add
arpl
inc
rcll
mov
adc
out
imul
pop
mov
popf
cli
push
aad
mov
adc
pusha
hlt
xor
mov
roll
xchg
test
add
adc
inc
int
popf
jb
push
cmc
popa
in
adc
mov
inc
shll
gs
xchg
add
xor
inc
lds
popa
in
adc
mov
inc
shll
gs
xchg
add
xor
scas
and
sbb
fnstcw
adc
cmp
mov
outsb
insb
mov
rcrb
push
out
and
das
cli
adc
fmull
push
negb
lret
popa
leave
repz
mov
mov
aad
jle
insb
xchg
xor
out
dec
jmp
stc
pop
jbe
sub
add
stos
jno
push
pop
movsb
mov
mov
xor
or
push
cmpsl
in
mov
push
and
xor
add
xlat
jnp
aas
add
and
jns
daa
fisubrs
das
repz
lods
pop
adc
cmp
pop
jne
outsl
out
test
aas
push
lea
out
inc
and
movsl
and
cmp
mov
movsb
sbb
lahf
cld
mov
inc
lods
cmove
push
in
mov
sub
mov
cld
repnz
or
adc
lcall
cltd
xor
xchg
movsl
nop
loop
sti
test
pop
dec
cmp
scas
or
xor
rclb
xchg
or
icebp
mov
in
jns
cmp
test
into
inc
cmp
push
sbb
daa
out
sahf
dec
in
xor
cmc
jmp
mov
xor
stos
lds
orps
cmc
pop
pop
and
xor
xor
fdivs
mov
ror
dec
push
jp
cld
icebp
jecxz
or
mov
push
cld
out
jl
ret
test
ljmp
int
xchg
dec
outsb
mov
add
dec
xchg
test
je
add
fs
out
js
xchg
fcmovne
jp
or
xor
jnp
xchg
loope
jae
cmpsl
xchg
jle
pop
icebp
or
loope
dec
jge
mov
popa
mov
mov
push
jp
mov
pop
roll
lcall
push
sub
daa
aam
jl
xor
sbb
test
cmc
jp
out
mov
pop
dec
cli
mov
ficomps
jns
stos
clc
dec
pop
std
xchg
mov
shrb
push
pop
idivl
mov
movsb
les
mov
sbb
xor
xchg
jae
or
mov
jne
mov
xor
fildll
nop
add
add
dec
rclb
and
cmp
add
insb
xlat
xorl
test
repnz
xchg
mov
sub
lcall
mov
xchg
pop
mov
push
xor
leave
call
es
mov
dec
rorl
and
add
xor
mov
hlt
xchg
cmp
pop
sar
adc
outsb
jnp
lock
bound
js
push
pop
mov
repz
outsl
ja
xor
inc
cmpsl
cmpsl
adc
movsl
dec
dec
sarb
sbb
dec
scas
mov
bound
test
or
xor
es
out
inc
pop
outsl
inc
hlt
cmpb
jmp
inc
sbb
mov
and
mov
in
test
test
les
pop
cmc
push
mov
and
xchg
inc
lcall
loope
fnstsw
mov
cmp
mov
mov
mov
loop
inc
mov
dec
ret
repz
cmp
pop
push
xor
gs
icebp
in
insb
xchg
fsubrs
dec
jg
dec
in
pop
mov
dec
lea
stos
inc
pop
jmp
push
ret
jg
mov
jo
dec
into
imul
inc
test
fisttpl
mov
rolb
test
cli
rolb
test
ret
arpl
adc
jno
incb
sbb
mov
jg
mov
or
add
mov
or
leave
lcall
mov
pop
in
push
pop
popa
add
push
int3
cmp
adc
jno
xchg
mov
je
daa
fucom
jae
cs
mov
lods
and
sarl
inc
or
mov
mov
rcll
cs
fwait
ret
testb
ficompl
cmpsb
out
pop
sbb
clc
fcoml
pop
lea
scas
fs
jmp
aas
sti
test
movsb
imul
cmpsl
addr16
and
or
pmaddwd
xor
ljmp
leave
das
ret
mov
mov
add
fbstp
stos
adc
jmp
loopne
js
and
idivb
cmp
stc
or
mov
clc
push
xor
adc
sub
cmpsw
call
ja
in
jnp
pop
or
xor
leave
aam
xchg
lea
lea
fucomip
stos
sub
lods
push
pop
xchg
mov
and
jle
or
cmp
loopne
mov
push
xchg
shrb
pop
sbb
std
mov
lcall
cli
or
into
mov
jnp
mov
xor
sub
sarl
jmp
lods
push
stos
es
ljmp
mov
push
push
pop
std
mov
inc
into
sahf
fcomps
mov
shl
hlt
cmp
inc
lea
push
xchg
xchg
mov
aas
sub
mov
adc
fistpll
movsb
inc
xorl
xor
incl
test
fimuls
sub
bound
fbstp
dec
in
fs
mov
addr16
cmp
cmp
mul
push
test
cld
xorl
mov
insb
inc
jno
incl
adc
and
mov
pop
mov
out
stos
xchg
je
fs
pop
mov
xor
insl
rorl
jo
cltd
aaa
jo
movsb
enter
pop
mov
mov
and
lods
jnp
xor
add
mov
dec
or
cltd
stc
fistpl
add
pop
fpatan
lret
push
out
repz
mov
dec
jl
jne
sbb
adcl
out
jg
or
cwtl
ja
leave
xor
add
xchg
clc
int
cmp
int3
push
and
xchg
mov
stc
mov
divb
adc
jecxz
andl
dec
jle
stos
pop
pop
outsl
xor
xor
or
adc
mov
jg
lds
dec
fwait
xchg
adc
jno
les
and
gs
in
insl
add
sahf
hlt
popa
sbb
jge
sbb
jb
push
int
testb
mov
out
mov
xchg
in
xchg
loop
fsubrs
rol
int3
rcrl
and
jns
cmc
rolb
ret
fsubr
es
fldl
imul
lock
ja
xchg
add
sbb
push
push
xor
lods
cwtl
rorl
xor
dec
sahf
lahf
cld
jg
hlt
lret
test
in
int
stos
inc
xor
ds
sahf
inc
and
inc
cmpsl
mov
aad
or
and
cwtl
in
jae
mov
fs
lods
dec
call
or
add
mov
push
pop
shlb
cld
pop
push
mov
out
mov
dec
push
jns
cwtl
icebp
int
inc
xor
pop
out
mov
or
lret
movsl
sub
push
xchg
sahf
rclb
jnp
ja
mov
dec
jg
mov
inc
and
addr16
jb
push
insl
and
and
in
repz
and
hlt
mov
loopne
xchg
mov
sbb
mov
in
push
iret
jnp
cld
mov
sbb
xchg
mov
jl
xor
stos
out
and
loopne
not
in
or
gs
add
lcall
pop
popa
or
inc
push
xor
ficomps
test
dec
aaa
arpl
xchg
ficoms
shl
mov
push
pusha
fsubrs
or
stos
add
fnstenv
lods
inc
xchg
sbb
inc
enter
sub
jbe
mov
xchg
dec
popf
xchg
sbb
add
subl
stc
sub
lods
outsl
adc
mov
sbb
and
mov
jae
sub
rcrl
adc
lock
fdivrp
jmp
shl
repz
mov
daa
out
mov
xor
mov
cmp
fstps
lret
test
adc
imul
aas
adc
xchg
gs
mov
lock
sub
shlb
add
dec
inc
jo
fs
jo
negl
push
inc
mov
push
les
jle
mov
or
jne
dec
mov
rol
mov
push
or
jns
rorl
sbb
lret
les
xchg
nop
ret
lock
dec
stc
arpl
inc
pop
cmc
xlat
xchg
pushf
insl
jns
movsb
leavew
push
in
and
lds
loop
inc
cmp
pop
jns
adc
push
push
pop
mov
add
fldl
dec
xor
test
push
fiadds
push
sbb
idivl
or
push
and
loopne
dec
mov
or
cwtl
sbbl
xchg
xchg
movsb
mov
lds
pop
cwtl
cmpsl
xor
push
xchg
xchg
es
jmp
sarb
lea
or
popa
sbb
pusha
jp
mov
or
gs
add
scas
out
mov
jg
mov
mov
mov
cmp
movsb
insb
insb
push
cmpsb
out
jg
adc
lea
in
addr16
gs
push
loope
mov
inc
jle
inc
ds
mov
ja
jae
mov
ja
cmpsb
xor
ficomps
mov
mov
test
jg
mov
push
out
insb
push
jge
jne
pop
imul
js
mov
das
xchg
add
sub
adc
rorl
pop
in
add
mov
xlat
xchg
inc
adc
arpl
jp
out
ljmp
pmullw
divb
loop
pop
testl
dec
ret
insb
in
mov
sbb
icebp
enter
popf
in
fisttps
pop
iret
out
out
xchg
stc
ret
cwtl
sub
int
jp
jecxz
ss
jecxz
lods
xor
sub
cmpsl
adc
je
pop
cmp
sub
js
mov
inc
mov
xor
jne
lods
add
insb
and
test
rorl
test
or
pop
xchg
test
orl
rcll
rcll
je
movsl
es
inc
sbb
cmp
pusha
lcall
xchg
mov
and
adc
movl
and
xor
push
pusha
outsb
xchg
shrl
jnp
push
daa
xchg
adc
mov
lock
lret
cmp
aas
sub
cmp
inc
xor
shlb
aam
fdivrl
xchg
push
adc
xchg
and
pop
push
test
jle
enter
out
ljmp
sbb
mov
outsl
les
js
test
adc
ret
pop
or
mov
ret
inc
xor
fildl
cwtl
rorl
mov
jl
ja
xchg
inc
nop
shl
lcall
fidivrl
fildl
ljmp
adc
sub
sub
fidivs
lcall
shrl
movsb
mov
mov
push
clc
mov
add
add
mov
push
repnz
cmp
jo
int3
or
divl
xchg
lods
cmpsb
aas
dec
sub
mov
loope
mov
lods
and
enter
sar
hlt
movl
test
xor
jb
push
mov
mov
mov
adc
xchg
inc
pop
cli
aad
xor
fwait
adc
cmp
mov
jnp
push
mov
fcoml
push
stc
rorl
sub
test
mov
into
in
sub
sarl
int3
loopne
std
push
repnz
cmc
dec
lods
aas
inc
mull
mov
and
sub
sti
loop
jnp
repz
or
fs
jecxz
add
arpl
jbe
xchg
cld
mov
dec
jl
sub
lret
adc
mov
adc
fbstp
sbb
sub
leave
mov
jmp
sbb
xchg
and
fisubrl
push
xor
jns
cmp
fistps
scas
jne
push
fwait
imul
enter
cltd
lret
adc
add
ret
insb
mov
sbbl
sub
add
sbb
in
out
lods
inc
lods
ret
cmp
or
pop
in
inc
add
mov
into
lods
pop
bound
mov
xor
fisttpll
cmp
movsl
lcall
add
out
scas
push
jo
adc
push
std
xlat
adcb
lret
repz
test
add
push
sbb
sti
addl
test
dec
push
in
fidivl
shl
inc
add
push
adc
xchg
lea
jbe
sub
adc
xchg
mov
incl
and
rclb
iret
lock
es
ret
push
dec
push
bound
mov
inc
mov
mov
les
jnp
and
icebp
mov
sub
jae
filds
cmc
aaa
fwait
lock
add
xor
fdivrs
sbb
fdivrl
push
cltd
daa
mov
and
adc
pop
mov
lret
loopne,pn
out
stc
jno
mov
cld
int3
aas
cld
dec
pusha
jo
les
dec
arpl
fdivrp
push
enter
jecxz
loope
faddl
xchg
aad
jne
xor
test
pop
enter
int
jmp
mov
rorl
stc
lret
mov
in
aam
cmp
lock
cmpsb
test
inc
loope
mov
mov
push
mov
sub
sbb
dec
push
daa
js
mov
push
ret
push
inc
adc
inc
into
clc
add
mov
and
mov
mov
mov
xchg
sbb
fwait
lahf
pop
leave
pushf
loopne
dec
mov
aad
cmp
dec
mov
lahf
sbb
mov
ja
cmpsl
mov
mov
fs
mov
jne
in
icebp
leave
lds
ret
mov
lock
pop
iret
jb
jno
add
jnp
or
sti
sub
and
xor
sti
xchg
sbb
ja
stos
shl
mov
jae
xlat
out
outsb
xchg
dec
stc
mov
xlat
fistpl
adc
mov
gs
push
pushf
cli
dec
jle
ljmp
lcall
repz
dec
or
loope
adc
dec
imul
testl
in
or
jle
enter
dec
inc
mov
dec
sarl
jns
rorb
mov
cmc
mov
test
imul
push
cmpsb
mov
dec
bts
lcall
xchg
test
pop
mov
jne
mov
outsl
hlt
adcl
clc
stos
and
push
aam
cmp
leave
jecxz
test
call
dec
add
loope
sub
xor
test
push
push
dec
fmul
sarl
idivl
xchg
fsubrl
mov
mov
shll
jmp
sbbl
cmp
test
push
mov
or
lods
std
int
stos
out
adc
ficoml
aaa
or
and
lods
or
les
jno
mov
repz
sbb
fidivs
icebp
sub
jmp
shrl
cmp
enter
lods
cmp
gs
xor
mov
mov
ja
push
in
movsl
int3
dec
stc
jno
and
jp
fimuls
aad
rcll
push
cld
cmp
push
jl
cmp
cmp
or
push
loop
gs
in
xor
aam
xchg
xchg
repnz
insb
sbbb
push
mov
inc
mov
adc
mov
imul
xor
cmp
and
pushf
adc
iret
adc
imul
inc
test
add
xorl
dec
and
insl
out
mov
and
les
add
pusha
mov
hlt
arpl
mov
out
and
outsb
std
jb
dec
loopne
cwtl
lahf
pop
arpl
lret
jno
mov
pop
xor
lea
xor
mov
in
adc
aam
push
push
fsubl
and
mov
inc
in
cmpsl
sbb
repnz
in
push
sbb
adc
dec
loop
xlat
ds
xchg
ret
mov
ds
in
pop
leave
sbb
inc
iret
mov
sub
xchg
daa
out
mov
pop
aas
cli
xchg
add
lcall
dec
cmp
cmp
xchg
sub
mov
mov
jo
or
cli
inc
xor
inc
mov
das
pushf
popa
push
std
cmp
sub
popf
stos
fidivl
cld
out
dec
int
mov
adc
xor
jl
xor
push
stos
fnstsw
and
pushf
call
ret
lods
loopne
loop
lock
push
xchg
adc
lahf
decl
add
add
or
js
sbb
jmp
xchg
mov
ss
fstp
pop
fsubrs
cli
and
ret
xchg
fcmovnu
push
lock
sub
jg
call
rolb
pop
int3
into
dec
cmp
cmc
mov
jl
jb
sahf
mov
jb
in
sub
addr16
outsb
pop
add
add
in
data16
imull
mov
ss
sub
sub
or
pop
push
mov
daa
adc
mov
xor
sub
arpl
cwtl
mov
adc
push
or
adc
push
push
aam
cmp
leave
addl
mov
sbb
bndstx
popf
dec
xor
add
test
mov
and
adc
loopne
leave
inc
js
testl
push
jbe
mov
mov
mov
mov
xlat
mov
push
cltd
push
jo
mov
lret
sti
scas
pop
mov
in
sub
shll
icebp
insb
test
movsb
mov
test
mov
movsl
repz
mov
jge
mov
cltd
cmp
ret
mov
gs
mov
push
xchg
mov
test
out
icebp
sub
jp
inc
cmp
pop
mov
cmp
sbb
sahf
add
mov
mov
jne
call
dec
lods
add
xchg
mov
notb
push
fnstsw
sbb
and
mov
jle
mov
inc
cmp
or
clc
repz
imul
mov
pop
mov
xchg
das
push
cmpsl
js
cmp
test
loopne
das
gs
pop
out
cmp
add
jp
fistpl
dec
outsl
nop
cmp
and
or
jns
mov
inc
jle
aad
inc
or
cld
jns
adc
imul
popf
cmc
jnp
shrl
hlt
adc
dec
sub
arpl
jb
jo
lcall
shll
sub
jno
cmp
popa
out
mov
hlt
jle
pop
and
fs
push
add
mov
adc
call
xor
mov
xorb
addb
idivl
xchg
jge
push
sbb
mov
mov
and
xchg
mov
icebp
adc
mov
hlt
pop
cmp
fs
jae
call
mov
sbb
rorb
ja
xlat
pushf
loope
imul
sti
sbb
call
inc
inc
inc
mov
adc
or
push
push
xor
inc
es
pop
repz
push
sub
test
and
jae
xorl
adc
int
shl
pushl
pop
std
push
cmp
mov
call
or
js
outsb
movsb
push
mov
mov
ljmp
jp
sbb
pshufw
outsb
cld
cmp
rcll
adc
call
xchg
clc
mov
pop
cmc
popa
cmpsb
push
inc
and
xchg
out
xor
push
add
and
int
and
cwtl
movsl
in
test
rorb
lcall
push
sbb
jae
dec
movsl
inc
fwait
cwtl
mov
ffreep
or
fcompl
or
mov
pop
jo
cltd
push
fwait
sub
sbb
shlb
inc
int
gs
pushf
and
aam
int3
cmc
sub
inc
lods
mov
adc
and
imul
js
or
push
lea
addb
aam
aad
lcall
es
in
jle
and
sar
lea
inc
pusha
adc
xchg
clc
mov
dec
or
push
stos
lods
sub
sub
jmp
mov
sahf
test
cmp
or
je
dec
call
jnp
roll
pop
movsl
insl
mov
int
or
arpl
mov
pushf
mov
add
insb
movsl
pop
mov
cltd
icebp
rcrb
push
iret
out
repnz
xor
daa
stos
clc
pop
and
cmc
pusha
aam
jno
out
xchg
sti
and
pop
scas
jl
push
insb
filds
out
nop
inc
push
std
es
cmc
push
add
mov
insl
add
addr16
jle
ror
mov
mov
das
mov
mov
popa
mov
rcrl
aam
sub
push
mov
adc
movsb
and
jbe
push
lret
dec
push
movsl
xor
inc
lds
popa
in
adc
mov
inc
shll
gs
xchg
add
xor
inc
lds
popa
in
adc
mov
inc
shll
gs
xchg
add
xor
inc
lds
popa
in
adc
mov
inc
shll
addr16
xchg
add
movsl
xor
inc
lds
popa
gs
cmp
and
scas
mov
dec
mov
mov
movsl
dec
fcmovnu
xchg
leave
xor
or
sbb
pop
test
mov
sbb
or
cmp
sub
cwtl
or
sbb
dec
test
mov
sbb
or
cmp
sub
fldcw
leave
sbb
sub
sub
out
lret
xor
push
sub
enter
test
notb
push
xchg
loop
push
out
mov
lahf
or
les
sbb
push
jbe
inc
pop
push
lods
cmp
les
jnp
and
mov
or
xorl
sub
in
xchg
dec
inc
cmp
in
xchg
sahf
es
scas
pop
sahf
test
sbb
and
cmp
xlat
pinsrw
add
test
imul
icebp
pusha
add
lcall
test
cmp
imul
mov
repz
shll
out
push
sub
aas
mov
in
jp
sub
stos
dec
mov
sbb
or
cmp
sub
fldcw
leave
cmp
or
sbb
dec
test
ret
daa
ficompl
insb
jle
dec
scas
mov
jnp
xchg
pop
lea
pop
lds
cmp
ds
or
or
test
mov
mov
dec
subl
jmp
ljmp
pop
sti
cmp
sub
fldcw
leave
cmp
or
sbb
dec
test
mov
sbb
or
cmp
sub
fldcw
leave
cmp
or
sbb
dec
test
xchg
hlt
in
pop
push
add
pushf
fnstsw
into
cmp
int3
cwtl
or
adc
and
and
lahf
cs
cmp
push
fprem1
jb
xchg
icebp
pop
adc
imul
push
addr16
jmp
in
cmp
addl
push
rcrb
pop
scas
and
pop
jae
sbb
hlt
mov
and
sub
jecxz
pop
iret
mov
sub
add
mov
enter
js
dec
xor
cmp
rcrl
lock
rcr
mov
xchg
mov
in
aas
mov
or
jg
cmc
or
push
aas
jmp
add
jmp
mov
jns
iret
pop
inc
fcoms
test
int
fistpl
or
stos
dec
adc
dec
sub
mov
pop
dec
xorl
loop
sub
loopne
test
cld
cmp
adcb
push
xor
rcll
sub
sbb
push
ret
lret
or
lea
mov
mulb
mov
pusha
cwtl
pop
lods
push
xchg
push
push
dec
push
inc
int3
int3
lret
insb
sbb
add
mov
test
cmp
push
or
jge
cmpl
addr16
add
adc
sti
lock
stos
mov
jne
pop
rclb
push
fldt
out
adc
cwtl
jle
test
mov
mov
mov
xchg
idivb
inc
mov
pushf
loopne
dec
dec
call
xchg
and
push
imul
insb
fs
sahf
stc
out
aas
aad
cmp
pop
outsl
sbbl
push
jae
inc
inc
ret
insb
lcall
and
dec
cwtl
xchg
sarl
mov
xchg
xchg
push
cmc
mov
jmp
outsl
lret
and
sbb
rol
xor
movsb
mov
test
outsl
pushf
or
jge
aaa
loopne
cmp
mov
in
mov
xor
mov
inc
aam
add
fsubs
jl
cld
mov
add
cmpsb
lret
dec
insl
pusha
in
inc
sbb
xor
cld
lds
mov
and
loopne
fidivrl
outsl
ficoml
xchg
inc
cmpsb
mull
ss
xorb
dec
add
enter
outsb
inc
xchg
in
ja
sub
sbb
int3
lock
fsubrl
outsl
and
push
lods
cltd
data16
mov
cmp
jp
subb
mov
jp
data16
lcall
pop
dec
ss
scas
js
lret
rcll
push
sti
and
test
sub
pop
pop
push
and
rorb
or
cmp
aas
roll
cmp
or
lcall
pop
clc
int
je
sub
loope
inc
fwait
adc
xchg
mov
inc
ds
sbb
mov
xor
push
pop
shrl
subb
push
cmpb
dec
sbb
adc
sbb
jl
sub
jmp
xchg
cmpsl
call
das
ljmp
mov
insb
popa
push
scas
repz
aaa
xchg
iret
ret
sbb
or
pcmpgtb
adc
cld
jmp
mov
jo
call
jmp
xchg
push
loop
fucomp
dec
push
cmpb
lahf
ds
mov
xor
scas
rcr
insl
insb
dec
push
enter
sub
divl
test
in
sbb
cmp
loope
mov
scas
icebp
cmp
aas
test
mov
sti
inc
xor
in
xchg
mov
arpl
xlat
xchg
out
push
sub
xor
movsl
lods
sbb
xor
jg
dec
enter
pusha
dec
out
repz
hlt
enter
and
js
scas
push
jns
dec
cmp
sub
xchg
xchg
cmp
mov
ds
cwtl
stc
mov
daa
test
repnz
cmp
ja
repz
inc
jns
in
lods
pusha
sbb
std
addb
jge
dec
gs
movsb
ret
jno
adcl
pusha
jp
adc
xchg
rcrl
dec
jae
sbb
pop
test
dec
inc
in
mov
cmc
lods
scas
pop
or
fwait
test
fists
repz
fdivs
sbb
stos
add
inc
in
xchg
jge
add
mov
mov
out
insl
insb
push
sbb
out
test
bound
imul
jp
in
fsub
cltd
sub
cli
sbbl
sub
lcall
fmuls
mov
mov
jmp
jns
cmpsb
test
or
sahf
dec
shll
xchg
mov
sub
lods
out
add
pop
or
add
jnp
mov
mov
adc
jnp
sbb
pop
inc
mov
pushf
xor
out
scas
push
pop
cmp
xchg
pop
sub
cltd
mov
push
lods
sti
inc
loopne
inc
push
inc
movsl
mov
out
movsl
test
sub
mov
inc
cmc
pushf
dec
pop
xchg
mov
sbb
xchg
inc
aad
xlat
mov
fsub
pusha
pop
aad
cmp
ja
jmp
sbb
and
inc
xlat
popa
lret
rcrb
aam
out
sbb
jp
mov
stc
pop
sbb
bound
fimuls
mov
loop
jbe
imul
mov
repz
cmp
xchg
ror
sahf
or
repnz
push
xchg
cli
fsubs
or
sbb
fdivrs
dec
jle
inc
aas
movsl
cmc
push
cmp
rorb
adc
aad
jmp
loopne
jb
inc
lock
mov
xchg
pop
stos
lahf
mov
iret
add
fstps
pop
or
stc
add
xor
and
add
sub
test
movaps
and
xchg
dec
shr
sbb
mov
mov
fistps
mov
ret
inc
lods
iret
sbb
push
loope
jae
mov
popa
stos
jb
movsl
push
outsb
orb
or
or
push
xor
dec
les
mov
xchg
sub
inc
int3
adc
movsl
int
mov
es
cmpsl
lods
mov
sti
jg
dec
aas
cmp
sbb
lock
xor
push
adc
pushf
inc
jne
and
dec
push
jae
xor
insl
adc
add
out
dec
sub
dec
xor
out
adc
xchg
test
mov
cmp
adc
or
fstpl
jmp
pop
push
xchg
bound
sarl
iret
or
loopne
mov
fs
cmp
xor
sbb
mov
mov
push
cmp
jecxz
push
jns
ret
movsl
cmpsl
enter
push
mov
in
ret
sub
adc
test
inc
cmp
lds
xchg
sarb
mov
jns
jb
jl
inc
popa
or
adc
xor
sbb
xchg
inc
push
mov
xchg
loopne
stos
clc
in
fimuls
les
rorb
hlt
outsl
jns
dec
cmp
dec
mov
and
mov
or
jnp
xorl
inc
lret
mov
insb
mov
and
cmp
mov
icebp
xchg
xor
flds
mov
and
jle
mov
sarb
cmp
jge
imul
xor
jge
lret
sub
xchg
scas
pop
dec
and
mov
ret
ds
mov
lcall
scas
cmc
mov
insb
add
xchg
sub
mov
movl
xchg
jle
cmc
pop
insl
cli
xchg
xchg
addb
movsl
ss
pusha
gs
shll
jae
hlt
dec
cmp
xor
mov
imul
cwtl
jne
cmp
xchg
fisttpl
lret
lods
mov
inc
jbe
cld
jecxz
out
mov
cmp
mov
cltd
enter
and
sbb
mov
stos
lret
test
xchg
xchg
xchg
insb
inc
fs
jmp
out
push
cmpsl
cwtl
out
push
outsb
fisubl
data16
pop
and
ss
adc
add
das
cmp
inc
or
sbb
sbb
sbb
or
adc
js
les
xor
fucomip
mov
mov
jmp
jle
in
stos
or
testl
nop
fisttpll
clc
shl
push
xchg
repnz
add
fwait
push
rcll
test
push
cwtl
cmp
mov
jns
push
fisttps
out
in
out
repz
push
or
pop
sub
cmp
sbb
lcall
push
cmpsb
mov
jb
icebp
pop
ret
rorb
or
cmp
cs
icebp
jl
lahf
mov
sub
cld
lret
repnz
jo
shll
je
ljmp
sahf
ss
dec
fisubrl
int3
stos
sub
inc
mov
mov
pop
sub
lock
inc
stos
test
icebp
add
pop
dec
das
mov
sub
adc
cmc
fs
jnp
mov
pop
push
xor
in
add
xor
fisttpll
xchg
adcb
iret
and
andb
xchg
push
outsl
fiaddl
push
or
cmpl
lods
inc
shrb
sti
or
lods
mov
xor
je
rep
loopne
vpsubsb
in
test
sbb
inc
sbb
jo
dec
sub
xor
insb
clc
repnz
je
xchg
cmp
loopne
movsl
push
xor
rcrl
call
aam
adc
incb
ret
pop
cmp
cmp
in
cmc
mov
mov
imul
jg
out
insb
or
dec
lea
add
pop
push
jb
xchg
xlat
cmpsl
pop
mov
sbb
xchg
cld
jmp
mov
jle
xchg
push
sub
fwait
aam
lods
mov
mov
push
push
aas
ja
scas
push
ret
std
scas
arpl
sbb
mov
lds
movsb
scas
xchg
arpl
push
arpl
pushf
imul
shrl
aas
xchg
scas
dec
lret
ret
clc
cmp
sub
sub
and
cmc
imul
sbb
jae
push
adc
sbb
jmp
aad
push
popf
in
or
push
fstpl
das
adc
jnp
mov
pop
fwait
in
add
lock
xor
add
rcr
imul
inc
sub
ja
adc
or
clc
stc
adc
fcmovnbe
enter
xchg
fistpll
mov
shlb
xchg
fsubl
pop
clc
xor
stc
mov
daa
cmp
mov
pushf
add
or
cmpsl
scas
jns
lods
mov
jno
fistps
adc
add
lock
lods
fcmovnbe
roll
and
insb
sub
popf
jno
repnz
pop
sbb
dec
jecxz
fnstsw
rcrl
adc
fcoms
mov
pop
or
cmp
sub
mov
push
push
adc
clc
daa
push
mov
call
lods
mov
sub
mov
dec
jle
fistps
cmp
mov
jae
outsb
mov
or
loop
or
or
fisubl
clc
sub
cmp
cmp
out
cltd
jo
sub
je
cmp
or
fwait
shl
jb
aas
ja
iret
dec
and
jp
pushf
adc
arpl
rclb
mov
into
jl
inc
lods
vmovaps
test
sub
sahf
jne
pop
inc
sarb
sbbl
jno
jns
dec
leave
mov
ret
ds
lret
push
test
pop
add
cmp
jg
sub
test
in
cmpl
add
nop
idivl
mov
push
xor
fiadds
add
loop
xchg
cmp
jg
xchg
push
jle
adc
xchg
inc
arpl
sbb
xor
or
cmc
ljmp
mov
xlat
push
cmp
mov
data16
sub
das
movsl
mov
dec
jg
push
jne
arpl
dec
add
inc
addr16
push
mov
mov
cmp
mov
push
clc
ss
cltd
stos
hlt
lcall
ret
xchg
ljmp
mov
shl
lds
mov
pop
cmp
inc
pop
sub
lods
int3
addr16
aam
jnp
xchg
xchg
xchg
push
enter
cli
add
shll
outsb
in
push
pop
add
stos
hlt
inc
in
or
add
inc
out
pusha
mov
outsb
xorb
push
inc
mov
rclb
mov
add
jmp
sub
sbb
ret
xchg
mull
loop
pop
mov
imul
arpl
negb
add
test
lcall
or
jp
in
inc
mov
inc
ret
xchg
lods
out
push
jns
outsb
xlat
push
or
dec
xchg
pop
push
lea
por
ljmpw
adc
out
cli
cmp
stc
xor
pop
add
cmp
rcrl
cmp
or
push
adc
into
or
xchg
cmp
lahf
xchg
jne
out
xchg
pop
js
cmp
xchg
pop
xor
cmp
mov
test
aaa
mov
outsl
fsubr
jp
aam
scas
imul
fistpl
imul
mov
loop
push
cmc
mov
icebp
mov
and
fdivp
iret
jecxz
jne
cwtl
sahf
pop
xor
nop
pop
lcall
adc
fs
mov
aam
sbb
mull
pop
and
test
or
inc
sbb
cmpsl
orl
xor
mov
pop
and
fcomi
mov
inc
sub
sbb
pop
ficoml
sar
pop
repnz
lock
mov
roll
add
mov
xlat
cmp
lcall
xor
sbb
enter
xor
adc
add
jae
enter
push
sub
inc
inc
scas
ja
lods
jle
push
ja
and
loop
mov
fwait
aaa
xor
inc
mov
stc
sahf
rcl
sbb
loopne
cli
jns
sarb
lret
dec
mov
hlt
push
testb
bound
xor
pop
outsl
dec
fcmovnbe
es
cmp
loop
mov
mov
orl
rcr
mov
repz
mov
dec
mov
push
outsb
inc
mov
xchg
mov
cli
es
sub
push
push
outsb
movsl
daa
fwait
pushf
fs
jg
lret
lods
mov
inc
mov
in
adc
pop
aad
in
sub
subb
test
cmp
xbegin
mov
dec
xchg
cmp
dec
dec
mov
std
mov
inc
or
dec
nop
ss
sub
loop
int
int3
sbb
ss
push
and
sub
arpl
sbb
jecxz
pop
shlb
push
pop
in
mov
jmp
adc
sti
ljmp
pop
inc
xor
aam
push
call
test
pop
mov
fsubrs
int
aam
fs
push
pop
in
sub
loopne
push
pop
jno
xor
sbb
add
cld
insl
mov
mov
sahf
push
mov
mov
xchg
clc
jl
push
jnp
pop
imul
and
shl
std
push
addl
imul
inc
adc
dec
mov
mov
mov
jae
adc
adc
hlt
dec
hlt
out
cmp
inc
ret
sar
dec
js
pop
imul
arpl
mov
push
faddl
sub
out
pop
mov
or
mov
inc
cmp
mov
cmp
stc
popa
xor
neg
adc
jmp
and
clc
push
popf
dec
or
pop
and
mov
mov
in
call
int
cli
jnp
mov
lock
sub
pop
jne
add
push
fmuls
in
dec
sub
loopne
or
xchg
mov
pop
stos
lret
popl
aaa
xchg
and
pop
dec
dec
xchg
mov
mov
cmp
subl
aaa
xchg
cmpsb
xor
sahf
daa
push
push
lds
sub
cltd
aas
shlb
stc
add
fbld
icebp
daa
fistpl
add
cmc
ret
hlt
jge
cmp
lahf
sbb
sbbl
sahf
xchg
sar
adc
pop
jo
rcl
sub
es
jno
pop
sahf
xchg
lock
fstps
nop
sub
es
xchg
ja
lcall
test
mov
and
cmp
dec
clc
rorb
in
hlt
pushf
pop
incb
push
scas
movsl
sahf
adc
sbb
shlb
iret
sbb
xchg
inc
sarb
push
and
sbb
sarb
leave
pop
jl
cmp
mov
cmp
push
xchg
ss
int
push
push
inc
daa
std
mov
dec
dec
nop
cltd
loop
aam
push
jg
sahf
movsl
sbb
add
xor
popa
sahf
sub
xchg
loopne
mov
jge
xchg
cmp
mov
mov
push
dec
test
stc
xchg
pop
std
test
cld
ss
mov
jp
mulb
fidivrl
insb
arpl
mov
mov
imul
scas
pop
iret
das
clc
rclb
movsl
mov
pop
xchg
sbb
xor
lea
jecxz
fsincos
mov
inc
sub
sub
pusha
mov
rolb
add
fwait
invd
jl
inc
lret
mov
adc
ficoms
sahf
and
ja
jl
push
sti
loopne
daa
leave
sub
in
mov
jae
xchg
les
jle
xchg
mov
pop
jo
mov
adc
pop
cs
lret
fs
test
insl
inc
insl
nop
int3
adcb
xchg
sti
lock
in
cwtl
sarl
or
fcom
sar
and
dec
pop
mov
std
or
xor
xor
inc
orb
mov
push
in
lea
mov
test
nop
rdmsr
or
cld
sub
push
xchg
pop
xor
ja
aad
lds
jno
call
jl
dec
fdivl
pop
adc
and
pop
add
sub
mov
mov
movsb
jecxz
insl
mov
or
mov
insb
adc
shrl
pusha
sub
cmp
daa
jnp
test
and
sub
out
dec
dec
test
mov
pop
mov
outsl
loope
jmp
pop
fdivrs
imul
roll
xlat
xchg
fucomp
push
in
movsl
inc
fidivrs
cs
ljmp
jnp
adc
mov
cmp
inc
sahf
idiv
mov
cmp
jg
call
sub
mov
stos
ljmp
cmp
jno
fstps
dec
push
les
xchg
call
popa
popa
push
stos
dec
rcll
xchg
xor
sbb
lea
bound
mov
xor
dec
jae
pop
cmp
pop
and
xchg
mov
sahf
and
das
loope
clc
dec
scas
xchg
xchg
or
mov
cmpsl
mov
repz
out
sub
cmpsl
fiaddl
leave
push
jl
dec
lods
test
xchg
arpl
sbb
or
popa
dec
addr16
cmp
sub
add
lret
pop
mov
add
pop
and
repnz
mov
or
inc
outsb
nop
out
ss
push
sub
pop
mov
shll
cwtl
jb
movsb
mov
test
dec
ja
decb
xchg
mov
push
std
hlt
icebp
mov
adc
mov
xchg
repz
fwait
jb
fbstp
es
mov
lock
pop
mov
in
cmp
das
ffreep
xchg
repz
shll
pop
adc
adc
filds
xor
adc
insl
mov
jne
add
xchg
dec
cli
push
mov
push
mov
mov
xchg
xor
dec
daa
or
or
xor
push
test
mov
cmpsl
mov
sti
sub
and
daa
cmpsl
fsubrp
mov
or
out
rorb
popf
and
mov
inc
mov
lret
shll
adc
mov
lea
outsl
jnp
sub
cmp
add
mov
xchg
icebp
inc
dec
dec
cmp
dec
xor
xchg
and
and
icebp
rorb
repz
xchg
cmc
mov
sbb
push
pop
mov
and
push
stos
repz
daa
leave
sti
xchg
inc
cmp
jno
xchg
push
pop
mov
sbb
push
nop
mov
imul
pop
stos
xor
dec
add
sub
pop
lock
jmp
xor
loopne
jge
push
jae
jge
push
cli
dec
pusha
out
inc
lcall
mov
push
push
or
or
mov
cmp
cs
nop
mov
into
add
jecxz
jbe
idivl
mull
cmp
cwtl
sub
xchg
xchg
arpl
fld
movsl
and
lcall
imul
mov
add
sub
lahf
movsb
mov
fnsave
mov
or
lods
sbb
pusha
js
ss
lret
pop
gs
popf
mov
ss
leave
xchg
dec
in
xchg
mov
mov
in
mov
dec
sbb
push
hlt
and
pop
jo
adc
mov
fidivs
cmpl
pop
int3
test
imul
cmp
add
std
mov
fwait
sbb
or
cmp
sub
fldcw
leave
cmp
or
sbb
dec
test
mov
sbb
or
cmp
sub
fldcw
leave
cmp
or
sbb
dec
test
mov
sbb
or
cmp
sub
fldcw
leave
cmp
or
sbb
dec
test
pop
stos
dec
mov
sbb
or
cmp
sub
fldcw
leave
xchg
push
or
insb
out
jecxz
test
push
movsb
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xchg
inc
pop
pop
sub
mov
pop
add
add
pop
add
add
add
add
add
add
add
add
mov
insl
add
add
mov
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
ljmp
add
dec
add
mov
loope
and
dec
add
add
add
add
add
add
cltd
add
add
add
and
pop
add
add
jno
mov
cltd
add
add
add
add
push
add
add
add
pop
add
add
add
add
inc
add
add
roll
add
fiadds
lret
add
add
add
testb
add
add
add
add
add
add
inc
add
add
into
add
add
add
add
arpl
insl
add
add
add
into
add
add
add
add
popa
add
arpl
add
popf
add
add
add
popl
sub
arpl
adc
dec
add
add
in
sbb
and
xchg
add
add
add
loop
sbb
jo
fiaddl
xchg
add
add
add
add
add
add
add
add
add
adc
enter
or
or
jle
fldl
add
add
add
push
add
add
add
outsl
add
mov
or
cltd
add
add
or
or
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
cmp
cwtl
add
dec
add
add
add
stc
add
add
add
add
pop
add
pop
add
add
add
add
cmp
jnp
popa
add
and
add
add
mov
add
add
flds
pop
add
add
add
add
add
popf
add
insl
add
add
add
add
add
add
add
fiaddl
sub
dec
add
ja
or
jle
xchg
add
add
testl
dec
add
add
add
xchg
add
add
imul
test
movsl
push
xchg
add
add
add
add
add
xor
cmpsl
add
add
cltd
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
imul
add
add
testl
add
insb
add
add
add
add
imul
cmp
mov
sbb
test
movsl
push
inc
add
sbb
leave
add
cltd
add
add
add
mov
add
add
inc
add
add
pop
add
add
or
or
stos
add
add
sub
pop
add
add
pusha
add
push
add
add
add
add
add
add
add
add
dec
add
ret
add
add
ror
faddp
icebp
loope
imul
push
xchg
add
dec
into
les
mov
push
dec
mov
mov
int3
fs
movsb
bound
in
push
movsl
push
cmp
lods
inc
and
sub
jb
scas
pop
jne
shl
adc
pop
hlt
sbb
jecxz
mov
adc
je
jns
push
push
cmpsb
pusha
xchg
push
xor
push
push
int
mov
inc
sub
jg
and
dec
xor
das
jle
adcb
sbb
mov
cs
adcb
mov
imul
out
jp
js
stos
adc
dec
pop
ret
dec
inc
mov
xchg
jo
lock
aad
push
xor
pop
ss
sub
rcrb
out
adc
adc
mov
xor
jp
pop
or
dec
cltd
push
cmp
test
dec
mov
push
repnz
ret
jbe
pop
incl
pusha
push
aas
aaa
jne
ss
in
stos
clc
out
aam
cmpsl
orl
lock
push
ja
shlb
nop
push
gs
and
rorb
adc
jge
outsl
push
mov
test
mov
pop
push
gs
pop
test
mov
leave
addr16
push
dec
xor
jo
mov
sbb
aam
inc
jae
mov
dec
cmc
rol
mov
sub
add
gs
jmp
loope,pt
cmpsl
pop
cmp
cmp
push
xchg
adc
cmp
insb
add
fdivs
dec
inc
push
or
inc
xchg
inc
jo
es
fnstcw
sbb
cmp
mov
sub
cmp
dec
stos
jge
insb
adc
mov
push
and
pmullw
sbb
inc
xchg
ljmp
xor
cmovnp
xchg
adc
mov
xor
jo
aad
lods
jno
or
rol
pop
mov
mov
sub
xchg
sub
mov
mov
pop
cltd
push
sbb
jo
jo
xchg
adc
xchg
dec
cmc
or
outsb
out
gs
stos
cwtl
fsubr
mov
in
ljmp
and
push
inc
push
mov
leave
pcmpeqb
out
sbb
inc
xchg
sub
pop
stos
dec
jno
jb
or
pop
xchg
movsb
sbbb
ret
je
pop
sbb
add
jmp
cwtl
xor
aaa
leave
lods
add
or
xor
call
add
push
inc
in
ret
lret
les
cmp
imul
fcmovu
frstor
loop
loope
sub
pop
jnp
xchg
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
