call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
mov
cld
into
int3
adc
inc
sub
sbb
or
jl
jmp
mov
loope
xchg
cld
sub
pop
cmp
dec
adc
jl
insb
xor
and
fsubrs
cld
cwtl
in
test
xchg
dec
sub
js
or
cmp
cs
dec
mov
repz
fstpl
push
pop
enter
and
dec
lea
cmp
shr
dec
sub
cli
icebp
jae
jg
adc
push
rorl
or
fisttpll
sbb
mov
jno
cmp
push
sarl
out
jge
lods
fwait
mov
shrl
adc
mov
mov
inc
jno
cmp
xchg
jno
enter
ds
test
xchg
jae
std
inc
stc
mov
sarb
mov
mov
rcll
insb
jne
mov
popa
push
test
mov
or
rorl
dec
adc
mov
fdivrl
sub
sbb
or
jl
insb
xor
mov
cmc
test
cmc
nop
in
in
mov
int3
pushf
and
je
dec
jge
gs
push
pop
inc
or
xchg
pushf
jecxz
in
out
mov
stos
in
push
inc
inc
pop
xor
adc
je
jb
inc
cmp
sbb
cmc
repz
sub
push
cmp
sub
sbb
or
jl
insb
xor
sarl
mov
fsubl
sub
sbb
or
jl
insb
xor
sarl
lret
mov
mov
xor
test
lods
mov
cmp
mov
loop
sarb
std
xor
loop
out
aas
cmpsl
pop
add
sub
std
nopl
push
adc
out
test
ja
and
popa
adc
push
cltd
mov
xor
adc
xchg
xor
and
cwtl
int3
jbe
aaa
cmp
ds
cltd
xor
lods
mov
push
test
sub
out
xchg
shll
insb
dec
push
dec
ss
cwtl
testl
sbb
outsl
mov
mov
jecxz
int
push
lds
pop
test
xor
fdiv
jecxz
ret
xchg
and
insl
add
aaa
dec
push
mov
aam
and
ja
lcall
push
orb
jno
sub
sub
pop
popf
or
mov
testl
adc
into
movsb
mov
scas
or
mov
dec
hlt
pop
sbb
xchg
lea
cmp
inc
shll
aas
aad
lods
inc
and
outsb
subl
scas
and
rclb
fwait
dec
fwait
cld
int3
movsb
jno
mov
jbe
sbb
jmp
sub
jb
iret
cmp
mov
sarb
lds
push
jo
setle
or
mov
mov
cmc
xlat
mov
cmp
daa
fsts
in
mov
adc
jmp
popf
orl
and
pop
jo
push
xchg
inc
sub
cmp
icebp
sub
iret
sub
andl
xchg
outsb
jnp
mov
inc
jle,pt
ds
jbe
cmp
gs
mov
repz
outsb
lcall
add
mov
gs
inc
xlat
fmull
inc
jne
add
adc
sbb
inc
mov
and
xor
arpl
mov
dec
push
push
lock
pop
inc
xor
std
jle
adc
push
mov
movsl
mov
cmp
jg
call
cmp
cmpsb
insb
jp
dec
int
mov
jnp
push
xor
testb
add
mov
dec
sub
lods
ror
bound
and
inc
sub
fsub
xlat
jle
dec
pop
sbb
mov
xchg
xor
movb
sarl
mov
inc
cmp
fdivrs
add
jns
cmp
pushf
cmp
mov
pop
lcall
insl
in
sbb
jnp
xor
mov
cltd
pop
pop
mov
or
mov
daa
mov
into
imul
pop
add
fs
out
mov
clc
sub
or
xchg
sbb
xchg
sbb
xchg
dec
or
push
call
jb
adc
xor
and
add
jg
sbb
cmp
imul
aam
sbb
dec
add
mov
mov
inc
mov
lock
int3
cmp
call
aad
and
adc
mov
pop
dec
clc
or
fnstcw
add
jns
lret
mov
incb
les
xchg
ja
test
data16
lea
add
or
cmpsl
add
fidivl
daa
mov
pop
es
ss
xor
stos
push
adc
jbe
cmp
dec
stc
leave
xor
call
jmp
into
test
jge
ss
cmp
fcom
cvtdq2ps
or
dec
push
mov
jge
and
xlat
nop
in
das
lahf
sbb
stos
repz
xchg
les
inc
aad
in
mov
and
mov
xchg
inc
fidivrl
mov
mov
mov
adc
jmp
int3
xor
jb
push
sub
mov
test
in
pop
test
push
stos
dec
xlat
adc
les
sbb
jge
and
xchg
jb
push
push
and
inc
xor
jge
sbb
cmp
popa
jecxz
scas
out
xchg
jp
and
iret
out
cmp
out
popf
cmp
lods
sahf
pop
arpl
sbb
cmpl
sub
inc
fadd
imul
cmp
pop
sahf
dec
call
loopne
push
mov
pop
pop
pop
push
mov
stos
mov
pop
cmp
add
ret
movsb
js
enter
mov
and
or
lret
lahf
jb
insl
imul
push
divl
pushf
fisttpl
dec
test
inc
xorb
adc
mov
or
outsl
and
jmp
dec
out
insb
cwtl
jnp
sbb
and
cs
mov
gs
xchg
imul
inc
lock
cmp
mov
xchg
cmc
das
add
mov
push
test
push
push
call
mov
mov
clc
and
or
mov
je
adc
sbb
jge
enter
enter
ret
push
sbb
and
push
pop
inc
test
lods
and
pop
mov
mov
fwait
pop
and
adc
ljmp
dec
test
rorl
mov
dec
iret
loopnew
mov
lret
mov
cmpsb
psubusb
daa
mov
or
mov
jae
and
es
lret
insl
xchg
pop
sbb
inc
dec
mov
mov
xchg
call
sahf
push
in
and
and
shl
dec
mov
out
jnp
add
xor
jecxz
jne
shlb
cmpsb
add
or
and
addr16
cmpsl
sbb
inc
pop
push
cmp
call
loope
mov
cwtl
jmp
jecxz
fnstenv
push
sbb
inc
out
add
in
mov
loope
test
mov
xchg
xor
inc
adc
iret
adc
stos
sub
push
inc
test
pop
mov
add
out
push
in
or
xchg
push
movsl
xchg
jecxz
pop
lea
sbb
sub
pusha
jne
sub
mov
popf
aad
pop
insb
mov
push
shlb
neg
arpl
and
divb
insb
mov
in
pop
inc
mov
loop
mov
or
xor
sbb
call
inc
push
and
pop
push
adc
popf
les
xor
pusha
js
fcomp
cwtl
es
adc
repz
test
add
add
or
mov
jp
iret
mov
pop
pop
scas
psubq
xchg
aad
lods
and
notb
push
and
dec
mov
sub
movsb
pop
cmp
shlb
cmc
inc
lods
push
add
cmp
xchg
inc
xor
les
mov
or
popa
xlat
mov
adc
data16
addr16
jle
push
loop
push
mov
add
jne
sbb
cmp
add
bound
push
ss
mov
in
push
mov
push
sbb
vshufpd
push
lret
push
stc
iret
mov
pop
xchg
mov
fists
push
xchg
dec
jle
mov
mov
aaa
sbb
fs
xchg
pop
sarb
xchg
cmpsl
jae
in
in
loope
sub
je
rcl
jge
ljmp
add
inc
jle
arpl
roll
adc
les
test
notb
movsb
clc
cmp
jle
call
xchg
cmp
and
repz
jbe
and
and
insb
cmc
lret
les
int
push
mov
add
sub
xchg
out
and
add
les
mov
sbb
cmp
vpsraw
sbb
adc
in
inc
popa
sbb
jb
fnstsw
je
and
add
xchg
jle
pushf
ds
mov
addr16
cmc
sbb
cmpxchg
sbbb
or
or
mov
ret
jns
ljmp
add
dec
insl
sbb
cmp
xor
les
into
ds
pop
sbb
lea
cli
cmp
daa
lds
adc
mov
or
aad
mov
jg
loopne
negl
call
push
mov
mov
or
sbb
pop
xor
mov
js
push
ja
jge
mov
add
ret
cld
xchg
ljmp
test
in
fcomps
sub
test
adc
lock
fimull
push
lahf
adc
fldcw
inc
cli
loope
jbe
shrb
mov
lret
inc
cwtl
imul
adcb
add
les
outsl
push
mov
data16
sub
sub
xchg
pop
dec
jne
movsb
arpl
mov
adc
lahf
aaa
or
into
lcall
sub
mov
inc
cmp
mulb
lret
lret
xor
cmp
lods
mov
xchg
mov
in
sbb
adc
lods
rcll
imul
dec
repnz
adcl
mov
xor
and
pusha
stos
xchg
add
dec
or
add
loope
adc
jns
jae
mov
inc
dec
ret
and
int3
shll
mov
jae
or
inc
aas
adc
jp
xchg
sbb
fadds
mov
leave
xor
int
add
mov
pop
loope
mov
dec
lds
and
aad
jns
pushf
idivb
rcll
adc
daa
loop
aas
xlat
outsb
verr
loope
push
jecxz
mov
push
cmp
popf
aaa
adc
fsubrl
cltd
xor
xchg
mov
bound
jno
in
push
xchg
into
popl
fnsave
sub
int
mov
stc
fiaddl
push
addr16
sbb
cwtl
inc
xlat
fcompl
xchg
mov
data16
call
mov
fwait
popa
lods
into
mov
data16
dec
fisubl
lea
mov
faddp
das
test
leave
insb
ret
pop
add
adc
in
data16
clc
pusha
mov
dec
xor
std
testb
cs
mov
ja
pusha
jns
jmp
xchg
mov
dec
loopne
push
cmp
xor
std
push
push
mov
sar
lods
movsb
nop
inc
addb
addr16
das
enter
jb
push
nop
jne
xor
mov
push
cmp
jne
jle
hlt
jp
daa
cld
push
mov
push
pusha
sub
adc
jp
and
mov
mov
mov
mov
push
stos
dec
dec
mov
sti
sbb
cltd
mov
loope
shll
imul
leave
hlt
aam
sahf
sub
pusha
xchg
jns
pop
push
jns
pop
cmpsl
das
mov
fmull
leave
mov
test
rorl
out
sub
jb
lret
out
cmp
add
jmp
idivl
pop
mov
xchg
in
rep
ja
fdivr
inc
das
cmp
loope
cmp
pop
shld
or
int3
repnz
xlat
sbb
mov
cltd
pop
js
out
repnz
or
cwtl
in
ss
sub
xchg
dec
add
jb
push
xor
cmpsl
mov
scas
imul
lcall
xlat
xor
lret
dec
int3
push
je
rcrb
mov
adc
sub
cs
outsb
dec
xchg
test
mov
imul
fstl
test
mov
jmp
sub
xchg
sbb
sub
or
out
clc
mov
lock
lea
std
dec
bound
fnstenv
ficoms
sti
pushf
icebp
icebp
mov
push
jbe
pop
fisubrs
iret
inc
jae
jo
pop
xor
dec
gs
lock
xor
sub
xchg
push
subl
into
mov
jg
dec
test
shl
scas
and
mov
js
mov
mov
pop
cmp
inc
sbb
xor
fidivrs
scas
dec
adc
sub
stc
xchg
mov
cli
pop
xchg
aas
out
xchg
cs
mov
inc
fiadds
in
cltd
movsl
nop
jo
mov
cmp
push
xor
push
rol
adc
lds
ss
xchg
pusha
in
or
fisttps
inc
into
dec
and
cmpsl
les
btr
fwait
cld
addr16
rol
dec
inc
dec
or
scas
movsb
js
test
in
fnstenv
mov
xchg
push
ljmp
jecxz
pop
mov
and
sbb
sub
inc
insl
and
mov
sub
xor
psrlq
mov
orb
mov
imul
mov
iret
mov
out
mov
sbb
fld
lea
movsb
cmp
popa
adcb
lds
ficoms
or
in
out
sti
fwait
push
sub
xchg
jp
adc
sbb
std
mov
dec
inc
push
push
out
sahf
mov
sbb
inc
dec
hlt
sub
add
subb
jns
adc
xchg
in
add
fbld
or
data16
mov
and
sbb
fsts
sub
sub
cwtl
ljmp
shll
aas
rcll
scas
mov
xor
mov
dec
loope
mov
lcall
dec
mov
jmp
mov
mov
mov
dec
pusha
aaa
push
jge
pushf
mov
rolb
sbb
mov
lods
xchg
fs
add
data16
jecxz
jp
or
std
sub
popa
push
and
cmp
add
mov
push
push
jbe
jecxz
push
subl
jg
mov
in
ret
subb
inc
mov
addb
xor
push
addr16
lods
orl
and
int
data16
enter
loope
loope
pop
test
cmpsl
adcb
imul
add
cmp
ror
ljmp
mov
add
adc
xor
push
jl
cmp
or
mov
jmp
dec
cmpsl
xor
pop
jecxz
xchg
inc
pop
loop
rcrl
subb
sbb
ljmp
ljmp
mov
jo
push
lods
mov
inc
or
xor
ss
cmpsb
ja
xor
xchg
neg
cmp
xchg
and
push
sub
stc
cltd
roll
mov
jae
out
dec
ret
sub
sub
enter
shll
inc
add
pop
mov
mov
out
xchg
pusha
push
cmp
and
mov
push
inc
jns
iret
pop
aad
xor
push
mov
mov
mov
cmpb
add
mov
push
jmp
es
fs
cld
mov
pop
testl
leave
push
mov
int3
insb
repnz
repz
movd
or
enter
mov
cmpsl
xor
xor
mov
push
aad
or
xchg
js
sub
aad
inc
pop
xor
in
mov
inc
xchg
iret
out
cmc
dec
mov
int
outsl
mov
sub
cli
aam
and
xchg
push
and
mov
push
add
dec
dec
fwait
xchg
scas
cmp
ljmp
inc
pop
sbb
pop
fstpt
aam
push
sbb
addr16
das
adc
repnz
jo
sbb
mov
nop
mov
add
mov
rorl
sub
fldt
pop
xchg
or
dec
fstps
outsl
inc
pop
inc
fstpl
push
filds
adc
std
push
enter
jge
xchg
cs
fnstenv
lahf
movsl
ljmp
dec
fadds
dec
sbb
dec
jns
add
data16
add
popa
xor
inc
mov
orl
sarl
xchg
mov
out
fistpl
mov
scas
out
movsl
lret
pop
sbb
popa
and
dec
or
or
mov
pop
insl
pushf
sbb
aam
and
and
in
in
xor
inc
inc
pop
xor
jp
andb
pop
xor
jp
add
cltd
cmpsl
mov
cmp
cs
inc
nop
mov
test
scas
fxch
add
dec
lods
cld
stc
sbb
mov
add
loop
pop
pop
jbe
and
frstor
sbb
jno
cmp
dec
aaa
out
push
sub
orb
dec
test
jne
lods
fs
and
adc
push
push
gs
or
int
adc
xor
push
pop
lock
mov
xchg
sub
gs
mov
push
mov
mov
fistl
int
mov
aaa
gs
jg
arpl
into
pop
sbb
and
inc
dec
cmp
push
jmp
in
dec
js
push
pushf
into
push
int3
and
dec
push
icebp
jl
add
push
jl
leave
mov
and
shlb
or
fstp
lcall
mov
mov
lret
andb
jbe
xor
je
push
aas
pop
es
and
cmpsl
jb
clc
fidivl
xchg
sbb
push
mov
jmp
pop
int3
add
imul
xor
lock
sbb
mov
cmp
sbb
dec
mov
daa
sahf
test
mov
push
arpl
fs
sub
out
imul
push
sub
add
mov
bound
mov
jbe,pn
sbb
mov
stos
dec
ret
xor
cmp
out
pop
shrl
push
jno
sub
pop
cmp
lods
xlat
inc
mov
jns
lods
jl
push
divl
lret
push
cwtl
repnz
insl
cli
sub
inc
inc
jp
push
dec
and
cs
and
out
add
adc
jae
pusha
dec
out
fisubl
adc
enter
aas
andb
add
popa
xchg
sbb
or
jb
sub
dec
les
sbb
inc
add
lcall
aas
inc
shl
aam
lods
pop
sub
pop
pop
cmpsb
dec
push
xchg
or
stos
xor
xchg
outsl
arpl
in
insb
sbb
inc
and
xchg
ret
lret
inc
sbb
test
or
jo
sahf
inc
cmp
push
shll
cs
into
sub
subb
stc
xor
xor
pop
xor
pushf
jle
jp
cmp
mov
xor
push
push
pop
imul
xor
int
mov
loop
sbb
push
push
js
sbb
fwait
pop
or
repz
bound
or
pusha
mov
pop
lret
dec
cli
cmp
pop
xchg
js
cmpsl
adc
ds
filds
cmp
and
mov
jmp
xor
add
js
sub
inc
and
xchg
push
jnp
sahf
js
cwtl
sub
daa
jns
add
clc
lods
insb
jl
leave
jmp
adc
jne
cld
stos
pop
push
push
ja
cli
dec
in
stc
dec
mov
dec
or
or
and
adc
icebp
mov
dec
xor
loope
and
push
fldenv
mov
sub
mov
mov
fwait
xor
adc
sti
lret
push
xor
and
inc
adcl
pop
in
loop
xor
xor
je
mov
mov
sbb
inc
add
xor
xor
loope
add
mov
in
call
movsb
sbb
mov
dec
push
cmpsl
sti
int3
pop
mov
je
pop
mov
add
inc
rcll
mov
pop
data16
adc
fwait
pop
mov
and
mov
push
shl
mov
ja
out
dec
sub
adc
loop
sbb
mov
pop
mov
cmp
lret
inc
mov
add
sub
mov
inc
insb
push
sub
mov
push
pop
xor
mov
push
aaa
mov
test
and
dec
pop
hlt
xchg
push
outsb
loop
and
sub
out
and
mov
pop
mov
cmp
cmp
or
adc
mov
pop
jae
jne
pusha
add
daa
adcl
dec
push
and
mov
and
jmp
dec
mov
lea
pop
mov
fdiv
push
icebp
pop
jg,pt
or
mov
adc
mov
popa
sub
mov
shlb
xor
mov
jb
inc
xchg
cmc
cwtl
mov
shrl
stos
fsubs
cmp
or
xchg
mov
fisubs
add
hlt
dec
out
sti
nop
sbb
push
rcrl
decb
adc
sub
push
popa
dec
fldt
cmp
out
mov
push
sahf
adc
inc
xor
or
dec
push
pop
add
inc
mov
xchg
xchg
call
fcmovnu
sbb
ja
xchg
cld
mov
sub
mov
pop
xchg
scas
movsl
adc
outsl
push
jmp
jg
aaa
cmp
notb
out
adc
adc
scas
mov
int3
divb
fildll
fmull
xor
add
jb
xchg
enter
in
jp
lock
push
lahf
xchg
mov
mov
ljmp
and
mov
xor
je
or
inc
push
outsb
cmp
mov
push
inc
mov
test
outsb
stc
mov
mov
arpl
lods
push
and
sahf
je
mov
cmc
push
addl
mov
call
dec
sbb
out
in
ja
cmpsl
and
into
add
fcompl
lods
xor
in
mov
mov
sub
sbb
or
jl
insb
xor
sarl
mov
fsubl
sub
sbb
or
jl
insb
xor
sarl
mov
fsubl
sub
sbb
or
jl
insb
xor
in
cmc
lods
pushf
loope
xchg
cld
sub
scas
cmp
xchg
sbb
jnp
hlt
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
pop
fnsave
aaa
sarl
dec
and
insb
adc
or
sbb
cmp
mov
std
nop
loopne
lock
sarb
or
jge
or
inc
cmp
mov
cwtl
std
mov
fdivrs
or
je
or
mov
lods
sbb
bsr
push
pop
mov
int3
stos
pop
mov
add
mov
cwtl
std
push
icebp
cwtl
or
daa
dec
enter
mov
adc
in
and
dec
pop
fdivl
loop
pushf
hlt
mov
enter
or
xchg
mov
fnsave
mov
fnsave
shlb
pop
jo
iret
insb
loopne
out
in
xor
cmp
cwtl
and
jg
jo
rclb
and
inc
jge
pop
or
test
ret
scas
fstl
cmpb
ficoml
push
cli
jnp
mov
mov
adc
sbb
inc
xchg
mov
std
mov
fnstcw
sub
jge
or
inc
cmp
mov
xorl
mov
add
jg
or
dec
cmp
cltd
lock
call
movsb
lds
je
push
inc
adc
jge
and
mov
fucom
int3
mov
rorb
pop
xor
jge
or
inc
cmp
mov
cmp
loopne
lock
sarb
insl
add
or
inc
cmp
aaa
pusha
mov
xchg
xchg
fistpll
pop
mov
pop
out
mov
sbb
sbb
xor
inc
adc
cwtl
mov
push
inc
cmp
cmpsl
mov
mov
jae
popa
dec
test
rcr
adc
popa
fs
xchg
lahf
mov
loopne
and
movsb
into
push
and
mov
sub
jnp
scas
xor
addr16
mov
lret
rcr
push
mov
push
mov
loope
or
js
in
leave
xchg
and
inc
inc
mov
push
sbb
ss
scas
add
mov
ror
mov
adc
push
jl
sbbb
mov
mov
and
pop
xor
movsb
xor
out
enter
mov
test
ja
mov
fnstcw
jmp
or
data16
jae
sub
xchg
sbb
es
js
enter
ret
sbb
mov
jns
or
pop
imul
cmp
inc
dec
or
or
sub
or
dec
mov
xor
mov
insl
dec
sbb
ja
jp
pop
xchg
pop
aas
stos
add
mov
inc
movb
hlt
push
int3
test
negb
fisubl
popl
testb
icebp
cmpsl
mov
inc
aam
jo
ljmp
in
pop
cmp
in
jmp
pop
xlat
xchg
fs
scas
ret
mov
mov
jge
mov
pop
mov
les
sbb
add
popf
inc
mov
xor
xchg
dec
xor
or
mov
mov
test
aam
mov
popa
cmc
jge
sti
das
in
push
shl
stc
into
sub
repnz
and
fdivl
add
jp
jecxz
dec
out
bound
push
xor
cmp
leave
lds
pop
dec
xchg
pop
mov
imul
mov
roll
fdivl
roll
out
fmul
es
les
mov
in
pop
pop
add
sbb
inc
fistpll
xor
enter
int3
dec
sbb
push
fmull
xor
ret
sub
lea
das
shlb
sbb
dec
dec
sarb
add
mov
cmp
les
outsb
fmul
nop
fstpl
insl
enter
addl
sub
push
inc
mov
add
add
addr16
xor
inc
outsl
jmp
lret
pop
push
pop
jb
pop
pop
scas
fisttps
aas
and
sub
cli
cmc
fs
icebp
loopne
shl
lea
pop
test
scas
dec
and
push
jae
add
lock
in
cli
shll
xor
popa
fnstsw
push
and
mov
mov
ja
mov
and
mov
and
movsl
and
movsb
adc
dec
cmp
dec
adc
out
push
out
jae
daa
xchg
nop
loop
xchg
fildl
adc
test
cltd
xor
or
iret
pushf
fidivrl
mov
roll
shlb
push
or
dec
lds
addl
and
cltd
sub
push
xorl
mov
test
sbb
movsl
sub
aam
inc
jecxz
xor
incl
fstpl
sub
fwait
aad
pushl
test
stos
incb
out
shrl
test
mov
jo
out
cwtl
or
pop
andb
adc
pop
push
shl
stos
xchg
push
loop
or
clc
fisubrl
xor
sbb
push
push
or
inc
push
iret
pop
jnp
cmp
sub
lcall
mov
jecxz
dec
into
test
pop
inc
lea
cs
sbb
inc
push
xchg
hlt
jo
andl
or
cltd
lret
shll
stos
rorb
fdivs
test
mov
or
aam
mov
cmp
jle
jle
lea
xor
aam
jo
xchg
xor
nop
pop
lods
jne
fisubl
dec
in
fwait
cli
ljmp
outsl
jbe
push
mov
ss
mov
mov
pop
fucomi
and
shlb
lods
das
xchg
pop
loope
dec
cwtl
out
pop
pop
adc
adc
popf
fisubs
data16
cmpsl
jmp
pop
xchg
jno
insl
mov
lahf
insb
call
orl
test
cmp
mov
pop
push
adc
jb
push
std
pextrw
lret
cmp
cmpb
adc
movsb
divb
out
lds
sub
sbb
ss
xchg
or
pushf
lahf
lret
jb
mov
movsb
aad
pop
sub
stos
imul
xchg
repnz
call
sub
cwtl
xchg
aas
push
ja
xchg
cmp
xor
sub
pop
dec
sti
into
in
jmp
push
mov
mov
adc
daa
outsb
or
mov
into
sahf
sub
icebp
or
fdivrs
sbbl
or
outsb
int3
into
xchg
int3
je
fstl
push
adc
and
imul
jns
mov
sbb
pop
add
adc
push
xchg
add
pop
inc
lods
shll
add
rorl
jl
adc
inc
cmp
and
push
sub
in
sbb
dec
mov
insb
dec
sub
inc
aam
dec
xchg
xor
mov
aam
xor
adc
bound
lret
xchg
push
scas
lahf
pop
in
popf
xor
sbb
and
mov
jecxz
fucom
xchg
das
pop
sar
pusha
notl
hlt
mov
jmp
push
ljmp
clc
pop
inc
xchg
test
ljmp
out
cli
mov
das
mov
enter
mov
outsl
jp
dec
rcrl
jl
pop
out
or
aad
xchg
xor
sbb
movsl
pushf
push
add
and
adc
cltd
mov
mov
jae
jg
push
xor
jae
dec
dec
pop
add
movsl
sub
in
pop
or
test
xor
inc
mov
sarb
mov
insb
fildl
add
in
lret
shrl
jns
mov
test
vpaddq
adc
dec
fimuls
fidivs
and
xchg
pop
cltd
stos
sub
cmp
aad
sti
popf
and
popa
imulb
divl
xor
sub
and
xchg
test
in
fcoms
xchg
addr16
pop
enter
push
dec
sbb
pop
jne
xchg
pop
out
ja
sti
lods
push
dec
xor
adc
push
push
sbb
dec
cmpsl
jne
movsb
jns
cmc
inc
mov
push
je
in
enter
jne
divl
or
pushf
stos
test
cmp
ja
sub
xlat
mov
adc
out
mov
or
jb
test
sbb
and
outsl
xchg
inc
fwait
inc
mov
sti
cld
mov
stc
mov
stc
jle
loopne
int
insb
into
adc
adc
out
push
push
jg
mov
dec
je
mov
adc
daa
sbb
hlt
out
pushf
xchg
fdivs
pop
sub
pop
mov
push
jmp
jmp
jecxz
movhps
mov
mov
add
mov
loopne
loope
xor
mov
or
push
gs
sub
pop
add
cwtl
cmp
pop
or
xchg
mov
sbb
leave
inc
pop
or
sbb
in
sub
push
jne
sbb
sub
imull
iret
inc
cmp
shlb
out
movsb
fwait
adc
or
data16
xchg
pusha
xchg
mov
sbb
or
js,pn
and
push
nop
lret
cmp
dec
or
xchg
inc
add
mov
inc
adc
push
into
pop
mov
in
xor
mov
insb
push
cwtl
add
push
shll
xor
lods
pusha
push
xchg
jge
aam
mov
int3
pop
test
daa
loop
ds
test
mov
mov
pushf
popa
jb
nop
xchg
addl
sahf
sbb
dec
add
out
aam
shr
sub
and
push
loope
shrb
iret
push
xor
subb
fs
xor
cmc
or
cmp
stc
push
jo
leave
pop
mov
jecxz
adc
mov
xchg
rcrl
add
mov
nop
cld
or
arpl
jbe
dec
push
xchg
std
or
ret
in
int
cltd
jb
arpl
fldl
xchg
lods
and
stc
pop
inc
inc
xor
sub
shrl
dec
push
inc
cmc
fistl
push
into
xor
sbb
inc
lods
xchg
jge
push
mov
lcall
xor
xchg
inc
cltd
data16
hlt
repnz
or
and
fnstenv
fwait
xlat
mov
dec
mov
cld
idivb
outsl
or
push
icebp
andb
adc
xor
cli
xor
mov
jecxz
aas
cmp
out
mov
lods
in
mov
insl
mov
movsb
and
mov
push
push
int
imul
mov
out
mov
push
movsl
add
mov
adc
mov
and
or
aam
mov
stc
sahf
in
cmpsl
jge
mov
and
mov
mov
cmc
insl
gs
in
mov
add
push
iret
mov
pop
out
mov
cltd
sti
and
dec
sbb
gs
ljmp
cmpsl
add
int
imul
scas
pop
fdivs
bound
and
subl
or
lock
pop
cmpsl
inc
addr16
loop
repz
lcall
pop
test
fwait
and
js
pushf
nop
gs
ret
push
scas
sub
das
jne
adc
add
adc
push
and
jns
cwtl
dec
outsl
test
cmp
mulb
dec
add
xor
and
nop
sub
std
rclb
jnp
lahf
mov
mov
xor
push
leave
popa
and
scas
xor
repnz
pop
inc
out
in
mov
jb
mov
dec
jecxz
ret
dec
popa
pop
jle
or
jmp
sub
mov
andb
xor
js
cmp
sarb
mov
sti
repnz
adc
push
adc
xor
mov
cmp
add
cltd
rcl
mov
mov
push
int
or
xor
jl
stc
js
push
inc
pop
cmp
sub
xor
mov
inc
repz
insl
dec
sub
adc
xlat
mov
hlt
mov
and
shll
jno
scas
xchg
pop
dec
dec
cmp
pop
pop
jnp
inc
adcb
cmp
repnz
shlb
mov
movsl
cmp
push
xor
stos
in
pmulhw
inc
cmp
pop
das
dec
ss
mov
in
inc
hlt
ficoml
aaa
loopne
test
adc
sbb
pop
out
adc
add
loope
shll
jle
xchg
ljmp
shlb
inc
test
add
cmpsl
insb
inc
jne
mov
je,pt
or
adc
push
ret
mov
xor
inc
xchg
pop
aad
mov
sbbb
inc
in
in
cmc
or
enter
test
into
and
pop
and
icebp
shll
mov
inc
popa
jae
in
addb
pop
cmp
push
xchg
inc
aas
mov
arpl
or
xchg
sti
stos
sub
adc
insb
in
push
rcll
ja
add
jbe
mov
xor
jmp
iret
pop
push
add
shr
xchg
lcall
gs
mov
lahf
dec
shlb
xor
dec
dec
test
cld
aam
dec
sahf
int
push
adc
add
lret
lahf
cld
xchg
dec
inc
jmp
or
and
test
jne
inc
jae
mov
pop
repz
jle
stos
dec
add
or
lds
arpl
pop
sbbl
addb
mov
jns,pn
popf
jmp
or
into
xchg
insl
lea
das
pop
test
jge
and
mov
sub
add
dec
sbbl
mov
cmpsb
dec
mov
fstl
sub
adc
mov
add
sarl
mov
jne
outsl
sub
xlat
mov
dec
xlat
mov
gs
mov
add
in
jl
mulb
lret
cmp
sar
sbbb
out
mov
ljmp
or
dec
movaps
push
xchg
push
mov
pop
inc
stos
pop
lret
pop
js
in
out
call
inc
roll
in
out
pop
ret
inc
rcll
jge
loop
jl
inc
test
popa
cmp
loopne
pop
sbb
imul
lret
cmc
stos
xchg
inc
test
dec
xchg
int3
inc
or
shrl
aam
jno
pusha
sahf
mov
mov
jle
cld
movsb
jg
xor
mov
lahf
lock
mov
add
je
xchg
fdivrs
mov
xor
fadds
cmp
sbb
pop
jbe
pushf
mov
xchg
fcom
jno
out
xor
adcb
or
cmp
or
mov
jbe
mov
mov
and
daa
sbb
pop
add
xor
pop
sbb
xor
out
subb
pop
lds
addr16
testb
or
pop
lret
cmp
jp
mov
push
arpl
testb
je
jge
in
pop
in
fsubl
gs
loope
pop
in
lds
sbb
pop
ja
ret
jb
dec
mov
stc
roll
rclb
ret
out
ja
mov
inc
sbb
push
inc
shr
sbb
nop
lods
add
test
add
sub
rolb
fcompl
insl
cmpsl
push
ljmp
in
mov
popa
jmp
push
fninit
push
adcl
aad
mov
jge
adc
repz
xchg
pop
mov
pop
mov
fistpl
jnp
and
jg
add
scas
ss
mov
imul
mov
int
and
push
into
add
subl
mov
pop
nop
push
pop
insb
mov
add
sahf
outsb
ror
repnz
xchg
dec
pop
call
pop
dec
lret
add
mov
jge
and
pop
mov
xchg
movsl
icebp
scas
test
jmp
ljmp
dec
jg
fsubs
mov
cmp
rcl
divl
add
insl
daa
xchg
daa
sub
decb
ret
pop
ds
fwait
inc
sub
cmp
jae
in
jmp
and
cmpsl
push
lret
xor
xor
pop
fcomip
seta
loopne
add
inc
out
mov
cmp
insl
cwtl
jbe
sub
sub
xchg
daa
lret
sti
call
mov
sbb
call
ss
push
ljmp
jno
outsl
sbb
fdivl
mov
outsl
jae
jg
dec
ficomps
cmpsl
das
repnz
mov
fs
inc
clc
and
dec
xchg
cltd
xchg
rclb
ljmp
inc
sbb
push
out
movsb
pop
and
or
dec
nop
test
and
mov
shll
cmp
jb
adc
jmp
fcomp
das
es
fistpll
fwait
in
insl
inc
and
out
loopne
mov
movsb
sub
xor
xorb
push
or
stos
into
pushf
psraw
fdecstp
xor
lret
jmp
in
jne
mov
pop
ds
dec
push
insl
adc
push
lret
xchg
es
add
pop
js
ret
xor
and
out
test
incl
xor
xchg
push
repz
cltd
loope
mov
push
pop
mov
and
enter
popf
insl
mov
sbb
push
mov
dec
jbe
sti
cmpb
jmp
jno
inc
aad
or
cmp
xchg
mov
pop
mov
stos
sub
mov
xchg
jmp
divb
popf
lock
jmp
jl
and
test
insl
nop
or
push
js
pop
jne
pusha
dec
and
in
lret
daa
adc
ja
ror
mov
leave
pop
sbb
jle
mov
mov
add
cli
iret
movntq
out
xor
xor
push
lods
or
and
or
mov
out
std
mov
negl
lret
cltd
ret
insb
pop
jp
and
into
mov
push
orl
sbb
dec
sbb
cs
nopl
inc
scas
mov
mov
test
fwait
dec
test
mov
pushf
rcll
add
aas
outsl
mov
leave
and
inc
in
std
insl
mov
inc
sbb
ja
push
dec
mov
xor
movsl
mov
dec
rorl
leave
pop
stos
mov
call
lcall
push
and
insb
rorl
or
stc
jl
push
js
jo
xor
pusha
mov
lahf
jle
pop
xchg
push
stos
in
mov
adc
je,pt
sub
lret
cmpsb
cmp
imul
loopne
insb
repz
mov
out
xor
scas
fs
jl
test
cltd
mov
push
adc
rorb
mov
sbb
hlt
push
idivb
dec
lods
lods
std
push
and
arpl
adc
or
inc
cmp
inc
jns
sarb
call
in
icebp
rcll
or
or
cs
das
push
inc
gs
outsl
sub
subb
or
xlat
addr16
xchg
push
movsl
mov
daa
enter
cmp
xchg
int3
cmpsb
pop
shr
xchg
aad
aaa
mov
fists
arpl
jo
sub
loope
cmp
out
inc
test
fidivs
adc
jge
bound
xchg
or
popf
mov
inc
inc
push
rclb
push
lcall
adc
sbb
jne
push
mov
gs
fcmovbe
in
adc
popf
cwtl
pop
pop
cmpsb
add
pop
iret
rcl
jnp
leave
in
pop
jp
and
fisubl
jp
mov
mov
cltd
shld
jl
adc
je
jo
inc
fsts
fs
push
cmpsl
cs
xor
push
jae
cmpsl
pushf
stos
leave
cmp
leave
push
mov
mov
adcb
enter
in
repnz
ret
stos
fsubs
jns
push
sbb
ret
mov
mov
inc
mov
push
adc
mov
ljmp
out
push
popa
js
mov
mov
inc
pushw
loopne
jecxz
xor
lcall
jp
xchg
loop
insb
lcall
fwait
test
xchg
dec
nop
xor
pop
in
outsb
roll
and
bnd
insb
push
shld
iret
fstl
lret
mov
pop
ds
mov
mov
loop
mov
xor
mov
lods
sub
repz
or
jl
jle
cmp
sbb
add
push
in
fnstenv
bound
sub
mov
daa
xchg
and
add
insb
push
xchg
xor
add
out
pcmpgtd
ret
rcll
sbb
push
adcb
xor
js
push
xchg
fs
mov
andl
fildll
pop
mov
xchg
mov
into
mov
pop
fwait
insl
push
pop
fistl
jns
xchg
mov
xchg
loop
xor
arpl
fsts
add
sbb
enter
scas
fucomp
imul
mov
pusha
sbb
test
dec
pop
jnp
mov
mov
sub
cli
test
mov
test
shlb
mov
in
xchg
mov
cmpsl
jbe
dec
sub
cmpsl
jp
sarl
mov
and
push
ficoms
aam
leave
cmpl
ficomps
mov
jle
test
fdivl
pop
out
mov
and
mov
frstor
repz
sti
into
push
xchg
mov
ss
loopne
in
mov
push
subb
mov
xchg
cltd
push
subl
cmpsl
in
push
stos
sbb
es
aaa
cwtl
dec
in
pusha
xchg
cli
push
push
outsb
xor
xchg
pop
lock
pop
stos
rclb
sti
test
jmp
sbb
adc
add
movsl
daa
cmp
call
sub
xor
fnstenv
ljmp
stos
sub
push
lods
mov
jle
jmp
testb
pop
scas
add
or
addb
add
std
shrb
dec
and
sbb
jo
out
push
push
push
pop
pushf
inc
jl
repnz
jbe
jns,pn
sbb
out
js
sbb
rclb
lea
push
in
mov
dec
add
imul
ss
sbb
jg
add
adc
mov
lcall
xchg
pop
mov
push
lea
shl
ret
or
scas
add
jp
daa
push
adc
lods
mov
push
cld
add
cltd
mov
sub
test
js
push
sbb
in
dec
lret
xorl
test
into
inc
jne
mov
or
test
aaa
add
jp
mov
fidivs
cmc
push
imul
jle
jp,pt
jmp
lods
movsl
ret
xchg
mov
mov
dec
sub
enter
fildll
pop
stos
in
cmp
call
outsl
fistpl
std
nop
loopne
lock
sarb
insl
add
or
inc
cmp
mov
cmp
loopne
lock
sarb
insl
add
or
inc
cmp
mov
cmp
loopne
lock
sarb
insl
add
or
inc
cmp
int3
mov
std
nop
loopne
lock
sarb
movl
xchg
sarb
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
mov
gs
jne
or
incb
push
inc
mov
adc
cs
test
pop
movsl
jle
jle
mov
gs
jne
add
out
xor
push
xchg
das
cmc
test
xchg
pop
movsl
outsb
mov
inc
mov
gs
jne
add
out
xor
cmp
in
or
add
or
or
push
out
push
std
pop
fildl
adc
sti
pop
lea
loop
jne
jne
movl
mov
ficoms
je
push
sti
loope
shll
jp
addb
sahf
ficomps
jl
jns
addl
xor
mov
shll
jne
add
push
mov
mov
add
push
loope
call
std
mov
mov
push
dec
mov
inc
push
xor
xor
aad
sub
cmc
sarl
sbb
mov
mov
adc
push
fisubl
xchg
push
mov
sarl
fldl
gs
jne
add
out
xor
push
in
cmc
test
pop
movsl
outsb
mov
add
adc
imul
roll
xchg
dec
loopne
cld
sbb
sbb
sbb
daa
repnz
lea
and
imul
movsb
dec
mov
loopne
ror
or
int
lret
je
add
out
xor
push
in
cmc
test
pop
movsl
outsb
mov
inc
mov
gs
jne
add
out
xor
push
in
cmc
test
pop
movsl
outsb
mov
inc
mov
mov
rcll
cmp
sbb
cmpsl
jmp
fs
mov
int3
push
and
out
mov
repz
arpl
clc
mov
prefetch
or
das
outsl
cmp
ret
movsl
jge
rcrb
aaa
mov
ss
mov
mov
xchg
xchg
das
xor
nop
jb
cmp
fidivrs
cmp
cs
out
rcr
or
push
repnz
add
mov
dec
call
movsb
adc
in
fsts
ror
and
stc
fstp
lods
out
mov
cmp
stos
dec
outsl
cmp
jbe
cmc
mov
xchg
iret
es
les
pushf
dec
in
sbbb
xor
jbe
sbb
addr16
fadds
lods
or
ficompl
push
roll
repz
test
pop
dec
nop
add
pop
sub
push
fsts
stos
xchg
xchg
inc
lods
add
cmp
pushf
pop
jmp
cs
fucomip
jecxz
mov
test
mov
out
pop
cmpsl
mov
ds
enter
inc
sbb
daa
push
fldt
add
mov
cmp
sbb
pop
mov
dec
pop
daa
cmp
mov
xadd
movsl
lret
sahf
imul
dec
ds
pop
xchg
mov
cmp
std
aas
mov
mov
dec
add
js
adc
cli
jno
test
xchg
push
leave
xchg
and
fdivr
fucomi
or
and
dec
push
add
ficompl
pop
enter
scas
cmpsl
mov
in
cli
cli
xor
and
rorl
jbe
aas
jmp
mov
rclb
cmpsl
fisttpl
arpl
bound
lea
add
leave
cmp
push
dec
jg
xor
shrb
sub
jcxz
adc
dec
fdivrl
ja
cmp
cltd
mov
ds
fcmovu
in
ss
add
ds
mov
pop
test
imul
pushf
adc
stc
push
lds
mov
inc
xchg
xchg
iret
pop
dec
mov
test
mov
leave
aad
mov
mov
xor
pushf
adc
outsl
or
out
mov
sub
pop
cld
xchg
pop
xchg
not
mov
sub
xchg
mov
sub
mov
pop
cmp
cmp
out
test
adc
sub
cli
inc
xchg
iretw
pop
xor
jle
arpl
mov
xchg
scas
xor
or
cmp
sbb
js
sbb
rcl
data16
in
aaa
enter
mov
push
mov
or
dec
gs
sub
and
push
pop
mov
and
out
dec
jbe
pop
push
and
xchg
xchg
push
or
std
sub
int
pop
xor
ss
lret
pusha
jae
mov
cltd
jno
popa
mov
sub
cmp
inc
cltd
into
lock
push
fdivs
add
pop
mov
js
push
adc
and
daa
xchg
je
or
jecxz,pn
negb
xchg
jnp
add
xchg
xor
push
dec
in
push
push
and
or
mov
mov
retw
pop
outsb
push
mov
cs
inc
test
xor
mov
xor
cmpb
xor
mov
testl
fwait
stos
dec
xor
scas
outsb
in
out
aas
push
ret
fcomp
mov
test
push
mov
jecxz
dec
mov
fucomp
lods
xchg
test
adc
jno
orb
fcomi
mov
test
cltd
cltd
fists
cmp
dec
int3
xor
enter
cli
nop
scas
push
adc
add
and
lcall
pop
mov
dec
jbe
aad
push
mov
ss
xor
sbb
fs
sub
notl
mov
pop
cs
ss
aas
mov
mov
sub
fbld
dec
insb
mov
add
xchg
mov
push
sahf
stos
dec
into
dec
xchg
pop
notb
jae
xchg
sub
popf
bound
dec
cltd
sbb
xor
pop
test
nop
mov
cltd
mov
out
jae
mov
sbb
data16
push
dec
pop
fnsave
sub
sub
inc
notl
aaa
push
aam
mov
push
xchg
pop
into
sub
enter
loopne
lods
jmp
arpl
cli
call
icebp
pop
mov
dec
pop
sbb
sub
addr16
mov
mov
or
scas
push
lock
rcrl
cs
repnz
cwtl
pop
pushf
movsb
adc
inc
mov
cmp
stos
imul
mov
push
hlt
or
fwait
pop
add
test
rcll
push
fcomps
mov
xchg
mov
add
jae
jmp
mov
mov
mov
xor
gs
dec
fcoml
imul
test
dec
inc
ja
ficomps
sbb
dec
mov
sbb
imul
iret
dec
ss
dec
cs
mov
sub
inc
ja
pop
mov
fistps
cmpl
daa
subl
negb
lahf
sbb
movsl
iret
in
imul
daa
dec
add
and
in
es
ficoms
nop
add
lds
sub
scas
dec
mov
dec
sub
xlat
xchg
mov
pushf
xchg
inc
fcmovne
sahf
push
aad
insl
fnsave
push
loop
cltd
jns
mov
sub
pop
cmp
mov
pop
int3
xor
int
movsb
and
in
enter
cmp
arpl
mov
xor
ljmp
pop
data16
stc
mov
cmp
stos
fildl
out
outsb
movsl
scas
pop
aad
xlat
dec
mov
int
andl
fidivrs
aam
fadd
mov
mov
cmpsl
pop
dec
scas
push
mov
or
sbb
jg
or
mov
add
xor
add
mov
mov
lret
jl
imul
mov
arpl
std
mov
jne
mov
push
call
jnp
scas
mulb
jmp
outsl
xor
mov
imul
dec
daa
cld
jne
push
mov
push
dec
sbb
std
in
js
frstor
jb
nop
dec
mov
aam
jmp
shrl
rcl
mov
es
leave
add
and
test
jo
cmp
jmp
jno
ja
mov
or
test
xchg
push
mov
imul
in
xchg
sub
or
mov
icebp
pop
inc
pop
sbb
test
imul
in
inc
xchg
std
sbb
xor
stos
insb
arpl
sbb
arpl
sub
fcoml
jbe
sahf
cmpsb
mov
roll
faddl
jnp
les
adc
pop
xlat
sub
sbb
xchg
xchg
mov
xor
xchg
push
sahf
fisubrl
jmp
and
and
dec
or
xchg
inc
inc
sbb
adc
cmp
mov
and
ret
mov
xor
lret
mov
pop
test
out
xchg
and
divl
mov
neg
jno
aas
push
adc
icebp
push
scas
pop
or
pop
jbe
mov
imul
cmp
jmp
outsl
dec
sbb
mov
mov
sbb
pop
mov
imul
outsb
in
subl
xor
sub
dec
int
mov
test
sub
movsb
dec
and
or
mov
outsl
outsl
xchg
push
sbb
fsubp
dec
cmp
vsubsd
mov
mov
sbb
sub
pop
cli
sub
add
test
push
fsts
push
aaa
sub
xchg
fucom
icebp
push
sbb
fwait
pop
mov
xor
xchg
mov
push
jno
adc
jmp
add
mov
jns
insl
jmp
cli
adc
jae
or
jns
movsb
push
jo
cmpsb
mov
dec
xchg
roll
pop
lahf
pop
shll
push
mov
sub
out
push
popa
outsl
mov
je
sub
or
test
xchg
lahf
xor
xchg
shll
mov
enter
out
scas
int3
mov
mov
fwait
dec
outsl
and
mov
mov
dec
xor
fildll
xor
or
sub
lahf
lods
jae
test
dec
cmc
mov
mov
je
cltd
mov
jge
and
rolb
cmp
xchg
push
std
jp
xchg
ljmp
adc
test
mov
pushf
flds
sub
cs
adc
addr16
mov
loopne
lsl
or
int3
fsubrl
push
mov
stos
mov
mov
ss
outsl
out
jbe
ds
cmpb
js
mov
pop
sub
hlt
xchg
push
jbe
ret
movsl
scas
bound
or
lock
loopne
addb
cmp
xchg
mov
call
les
and
xchg
mov
add
sbb
mov
cs
fistpll
mov
sub
push
pop
dec
fdivl
jb
ror
or
loope
sti
dec
fchs
sub
xchg
adc
out
sahf
iret
into
xor
add
jp
mov
mov
dec
jb
js
add
movsb
adc
out
lcall
fcompl
aaa
adc
adc
sbb
inc
jae
or
sub
push
mov
in
inc
pop
push
inc
mov
xchg
xlat
ja
notl
sub
cvtps2pd
and
jne
xchg
inc
stos
jmp
mov
lret
adc
movsb
sub
into
push
mov
ss
adc
sbb
jb
fwait
mov
pop
cmp
xchg
inc
mov
imul
ret
scas
addb
fsubrp
shll
add
jns
or
data16
test
push
mov
inc
shll
testb
cmc
lods
ljmp
and
sbbb
sub
nop
adc
add
xchg
cmp
lds
cmpsl
hlt
movsb
aas
or
xchg
mov
or
out
leave
pop
shll
jo
dec
inc
mov
jae
es
sbb
jecxz
and
loope
jmp
xchg
sbb
xorl
sti
or
dec
push
push
or
roll
daa
movsb
xchg
sub
sbbl
lret
push
mov
xor
xlat
push
test
js
push
ds
sbbb
mov
sub
and
jmp
or
dec
push
adc
xchg
pop
inc
xchg
mov
adc
stos
pop
mov
nop
sbb
xor
adc
mov
dec
or
mov
imul
lret
push
lahf
pop
fs
mov
add
int3
cmpsb
enter
lahf
cmp
push
push
and
cmp
pop
adcl
shrl
in
sbb
movsb
cltd
divl
mov
jns
lahf
push
pusha
add
pop
xchg
jne
xchg
test
jge
dec
ret
pop
cmp
push
sar
mov
ss
sbb
daa
sbb
fldenv
movsl
jno
insb
fwait
xlat
out
arpl
in
mov
fs
sbb
adc
and
fmulp
outsb
jno
jmp
scas
out
andl
cmpsl
cmp
xchg
jge
in
and
cltd
mov
push
inc
adc
imul
dec
lcall
push
mov
ret
mov
das
in
stc
jno
inc
pop
cs
daa
sti
sub
lods
icebp
adc
stos
xchg
mov
scas
add
mov
xlat
int
pop
mov
mov
ja
leave
cmpsb
mov
dec
cmp
add
cmc
fstpl
xchg
xor
push
jno
jnp
mov
dec
add
stos
lret
xchg
and
and
sub
xchg
into
aaa
sbb
mov
xor
test
mov
xor
jmp
lea
adc
and
sbb
ss
or
push
jmp
xchg
lahf
test
dec
xchg
and
push
mov
aad
add
xchg
and
pop
cmp
les
scas
fwait
int
jbe
imul
push
adc
jb
shll
sarb
xchg
sub
dec
adc
stc
arpl
jo
xchg
out
pop
mov
in
dec
icebp
or
pop
sub
adc
adc
shrb
jp
push
push
pop
js
repnz
mov
sub
cwtl
mov
add
pop
inc
or
pop
aam
repz
ss
test
xchg
subl
das
cli
imul
iret
jecxz
aad
xor
xchg
mov
dec
fs
ret
ds
dec
or
push
xor
mov
imul
fucomi
lret
pop
pop
mov
mov
dec
push
mov
or
inc
clc
sbb
mov
mov
cmp
push
mov
pop
lds
test
mov
mov
imul
mov
mov
mov
dec
ljmp
je
pusha
roll
dec
divl
or
dec
dec
push
ljmp
sar
xchg
shlb
mov
mov
sahf
mov
jle
das
ja
test
adc
inc
test
jg
adc
jnp
neg
in
rcrl
adc
xchg
xchg
add
inc
xchg
jl
cwtl
frndint
test
sbb
cmp
cmpsb
sbbl
and
sbb
icebp
js
mov
lret
hlt
sbb
push
cmp
mov
loope
add
ljmp
push
mov
push
in
dec
out
movsl
and
insb
sbb
jnp
jmp
mov
inc
cmp
fs
sti
je
push
sbb
jnp
sub
leave
std
dec
jge
ss
loop
add
xchg
cltd
aaa
or
cmc
fwait
dec
jmp
int3
push
xchg
pop
movhps
cs
popa
inc
jg
xchg
aas
jmp
sub
repz
mov
dec
sti
icebp
fidivrl
movl
movsb
jno
inc
cmpsl
adc
repnz
add
ret
arpl
push
insb
push
out
lea
lahf
mov
add
or
in
fldl
nop
fsubl
or
movsb
lahf
popa
or
jg
push
or
xor
and
push
mov
push
jbe
adc
xchg
dec
add
add
in
mov
inc
addr16
shrb
shll
nop
lods
jmp
and
adc
lds
mov
add
inc
xor
hlt
js
adcl
rcl
lods
jnp
addr16
enter
inc
push
xchg
je
jl
sbb
fs
xchg
push
pop
jge
mov
cltd
imul
sbb
insl
shr
xor
stos
ja
cmc
sbb
and
hlt
data16
out
fcoms
ret
mov
inc
cmpsl
pop
dec
ljmp
scas
push
dec
add
jl
mov
mov
pusha
mov
fstl
scas
push
cld
cmp
cs
or
insb
push
pop
xlat
rorb
cld
xor
pop
mov
pop
nop
adc
mov
xor
pop
push
jb
mov
mov
xor
cli
cmpsl
inc
lahf
lahf
push
fimull
imul
in
shll
jnp
ljmp
or
mov
mov
cmp
jecxz
sbb
lods
cmp
cltd
scas
fcom
pop
call
dec
adc
sti
lret
and
inc
test
inc
mov
data16
or
lret
push
mov
icebp
fistpl
xor
sar
or
jmp
xor
jne
movsl
xchg
cmpsb
imul
scas
adc
repz
push
mov
movsl
lret
cli
dec
push
subl
cmpsl
cmpsl
sub
sbb
push
mov
jecxz
xchg
addb
cmpsb
dec
scas
xchg
loope
push
cwtl
out
or
push
icebp
movsl
lods
push
mov
test
mov
push
inc
aas
add
adc
push
jecxz
fstl
sub
addl
cmpsl
addl
mov
lret
test
and
cs
sub
out
fwait
imul
or
dec
adc
xor
lret
in
cmp
idiv
pop
jnp
cmp
lods
int3
in
and
shrb
sbb
outsb
dec
mov
negb
push
xchg
jp
dec
das
fcomip
insb
jb
adc
jne
outsl
cwtl
fstpl
push
aad
lds
fs
sub
mov
repnz
sbb
ret
xor
inc
insl
jl
add
loop
fwait
dec
scas
stc
subb
adc
mov
and
dec
daa
mov
add
out
pop
cld
or
in
jge
loop
scas
or
jns
add
push
mov
int3
mov
les
cmp
push
cli
test
rcll
inc
movsb
fwait
jp
inc
testl
sub
inc
imul
hlt
adc
sbb
insb
mov
push
and
jl
fwait
and
hlt
repnz
stos
mov
cmpsb
mov
push
cmpl
mov
loope
lods
xchg
ja
incb
out
cmc
cld
add
jmp
cmpsb
sbb
pop
test
cmp
lds
repnz
fsubs
imulb
lret
sub
push
add
mov
adc
pop
push
scas
sahf
mov
pop
icebp
inc
cmp
lods
lds
sbb
or
outsb
sbb
in
add
out
push
fdivl
add
inc
imulb
cwtl
test
out
push
rorb
pushf
push
lahf
xlat
mov
mov
popa
imul
aas
push
movb
mov
pop
fnstsw
sub
nop
xchg
and
dec
inc
sti
or
lahf
ret
mov
in
fs
cmp
and
inc
es
ss
xor
jo
fcompl
xchg
stos
outsl
dec
sub
rol
and
rcrb
sub
repz
fistpll
pop
push
pushw
mov
andl
lcall
iret
pop
es
or
cld
xor
or
in
adc
js
jl
fchs
jge
ja
adc
inc
repnz
packssdw
cmpb
xchg
mov
lahf
cwtl
push
cmp
mov
cltd
lret
or
xchg
xor
stc
adc
movsl
dec
icebp
sub
dec
stos
sahf
icebp
sarl
lea
rorb
sbb
add
jnp
mov
mov
repnz
lret
mov
xchg
clc
jg
inc
jo
pop
sbb
xchg
and
mov
movb
sbb
leave
ret
sub
rolb
inc
test
dec
inc
xchg
pop
and
push
imull
je
fsub
mov
pusha
adc
push
xchg
mov
jmp
hlt
test
lods
mov
mov
fwait
xor
nop
inc
xor
iret
in
or
mov
mov
lods
and
lret
out
sbb
mov
cwtl
stc
dec
mov
gs
inc
cltd
lods
adcb
add
cmp
js
push
add
adc
dec
subb
addb
cmp
mov
cwtl
adc
cmp
mov
js
jne
fwait
loope
mov
xor
adc
imul
movsl
icebp
orl
fiadds
dec
call
xor
cmpsl
insb
sub
cmc
jo
cmp
inc
cs
outsb
push
and
out
push
sbb
sub
sbb
out
push
insb
cwtl
sbb
pop
pop
pop
or
repnz
inc
mov
jmp
leave
notl
test
ja
cmp
outsb
xchg
adc
sbb
rclb
inc
lcall
fwait
xor
and
mov
mov
sub
inc
lods
cmp
mov
hlt
mov
out
stos
xor
sub
or
mov
pop
mov
mov
movsl
xor
jmp
lock
popa
xchg
cmpsl
call
ficoml
shrl
adc
int3
lds
xchg
stos
or
push
mov
sub
mov
sub
pop
adc
or
xor
fsubr
adc
pop
pop
xor
pushf
fstpt
xor
mov
adc
inc
add
cld
test
lcall
or
pop
repz
xchg
fstl
push
pusha
fcom
rcrl
pop
add
lock
mov
sub
sarb
outsl
inc
sub
xor
jecxz
sbb
loop
cmc
mov
das
leave
adc
adc
and
mov
push
jnp
vcvttsd2si
test
and
loopne
jg
int
xor
fmulp
push
arpl
movsb
jb
jo
fwait
cmp
lcall
faddl
cltd
lock
loopne
and
fidivrl
in
mov
fiadds
adc
sbb
imul
das
lret
jno
fs
or
mov
cwtl
idivl
xchg
scas
mov
or
cld
fimuls
aam
fstpt
sqrtps
cmp
xorb
in
sbb
dec
mov
mov
xchg
fisubl
lock
mov
inc
bound
cmp
leave
sahf
iret
scas
jne
add
out
xor
push
in
cmc
test
pop
movsl
outsb
mov
inc
mov
gs
jne
add
out
xor
push
in
cmc
test
pop
movsl
outsb
mov
inc
mov
gs
jne
add
out
xor
push
in
cmc
test
pop
movsl
outsb
mov
inc
mov
gs
jne
add
out
xor
mov
cs
dec
repnz
sbb
or
lock
loopne
fdivr
jecxz
nop
mov
dec
push
pop
inc
imul
add
xor
and
rcr
shr
stc
loopne
nop
cltd
subb
pop
inc
imul
add
xor
and
rcr
shr
stc
loopne
nop
cltd
subb
jp
sbb
sbb
or
push
push
push
mov
cwtl
nop
loopne
mov
test
xor
xorl
xchg
adc
mov
es
push
lods
add
mov
push
stos
cmc
and
mov
pop
adc
leave
jg
push
int
lcall
arpl
cmc
testl
cld
xor
add
cmp
sub
mov
xor
lock
mov
pop
adc
sarl
mov
lcall
insl
jbe
mov
orb
or
repnz
inc
cltd
add
xor
fdivp
push
and
loopne
mov
or
inc
sbb
cltd
mov
jne
adc
out
xor
xor
jmp
nop
cltd
subb
pop
inc
imul
add
xor
dec
lods
aam
subl
idivb
inc
sbb
pop
gs
dec
dec
outsb
mov
xchg
mov
int3
in
frndint
les
sbb
cmp
jns
jle
add
push
dec
scas
xchg
int3
mov
mov
inc
imul
add
xor
and
rcr
shr
stc
loopne
nop
cltd
subb
pop
inc
imul
add
xor
and
sarb
and
imul
es
mov
adc
and
sub
jl
aas
cwtl
aad
cld
test
jmp
inc
sub
and
pop
test
jp
ljmp
push
movsb
es
arpl
mov
sub
mov
imul
mov
push
inc
insl
call
jecxz
xchg
and
lods
iret
or
mov
sub
cmpsb
sar
scas
sti
in
or
lods
jno
fistl
jbe
inc
out
daa
xlat
into
out
mov
pop
dec
scas
mov
inc
ret
adc
sbb
or
jbe
or
repnz
orl
vcvttpd2dqy
flds
add
movsl
insb
aas
ret
pop
cmp
scas
mov
cmc
mov
or
ljmp
cltd
push
out
cmp
xor
mov
test
and
int3
push
repz
dec
call
rcrb
pop
stc
leave
cwtl
dec
jmp
mov
xorl
push
hlt
cltd
repz
xchg
je
adc
popa
lock
adc
mov
push
loopne
notl
or
out
jg
dec
negb
dec
call
hlt
add
xor
and
sub
push
cmp
sarl
pop
xchg
xor
add
push
xchg
icebp
in
lahf
movsl
sbb
mov
jbe
sub
jnp
int3
mov
xchg
std
jmp
jae
aam
jmp
cmpsl
jne
mov
xor
jbe
popa
or
mov
dec
add
hlt
mov
sbb
cmp
dec
push
sub
pushf
sbb
and
jmp
arpl
pop
test
sbb
loop
in
jno
cmp
inc
sbb
jno
adc
mov
and
mov
dec
pop
or
rcrb
cmp
sub
add
mov
or
xchg
adc
push
pop
pop
ret
cltd
sbb
mov
nop
mov
sub
cltd
imul
sahf
ljmp
imul
pop
mov
scas
xor
jle
sahf
inc
in
sub
xor
out
loopne
pop
pop
cmp
pop
xor
cmp
cmp
pop
and
push
push
xor
push
mov
pushf
imul
idivb
aad
sub
negl
clc
and
cmp
bound
push
fstpl
mov
cmp
sub
xor
test
xor
adc
jo
dec
jae
lods
pop
push
dec
sbb
inc
jo
data16
pop
mov
and
in
test
mov
pop
in
jns
lea
lds
or
and
adcl
lahf
gs
nop
jmp
insl
bound
lretw
into
stc
je
inc
sarb
dec
lods
lds
inc
lret
xor
push
pop
icebp
in
ret
test
subb
mov
pop
mov
jge
inc
in
mov
inc
lret
xchg
adc
sbb
add
loop
gs
xor
dec
loope
out
dec
lea
jl
mov
out
dec
les
es
outsl
jmp
inc
mov
std
incb
inc
xchg
std
bnd
decl
dec
aaa
lsl
jmp
repz
clc
jmp
fdivrl
jmp
and
cs
add
adc
nop/reserved
or
mov
leave
imul
negb
icebp
inc
push
repnz
lahf
dec
je
push
scas
jp
mov
or
pop
or
sub
int3
xchg
cmpsb
adc
mov
fs
jne
lret
mov
imul
mov
dec
lods
adc
and
sub
sahf
adc
push
jl
lret
xor
mov
in
sbb
adc
mov
lret
int
adc
ret
xchg
add
cli
cs
mov
arpl
lea
and
inc
adc
mov
aaa
pop
cltd
dec
inc
cld
mov
xchg
pop
shlb
push
fdivs
data16
aaa
in
cmp
inc
js
in
js
inc
das
out
pop
inc
mov
out
rorb
popa
enter
adc
mov
stos
out
sub
jmp
inc
pop
or
aad
ds
rcl
int3
jne
cwtl
cmc
xor
adc
mov
mov
jnp
outsb
cld
arpl
fists
adc
sbb
int3
add
in
mov
popl
ficompl
xchg
imull
shlb
jno
cltd
mov
push
jmp
mov
xchg
xchg
mov
adc
inc
jmp
or
sub
popf
dec
mov
jnp
add
push
ss
push
shll
sbb
rclb
xor
xlat
sbb
iret
adc
xor
movsl
push
xor
mov
push
jle
std
rolb
movsl
mov
pop
loope
xor
mov
dec
push
hlt
outsl
cmp
mov
adc
add
or
xchg
dec
adc
jbe
add
stos
jbe
out
mov
dec
jo
mov
inc
pop
inc
inc
aaa
cmp
lea
xchg
dec
mov
push
cmp
or
lds
bound
hlt
shl
es
loopne
arpl
push
ds
and
pop
repz
fs
repz
inc
jbe
or
scas
popa
xchg
repz
cmp
cs
insl
push
mov
ljmpw
or
push
pushf
lret
enter
mov
faddl
clc
pop
xchg
dec
inc
pop
jge
aad
icebp
mov
out
xor
jbe
iret
cwtl
jne
xor
outsl
pushf
mov
sub
insb
sub
inc
cmc
scas
idivb
jmp
cmp
fmuls
ror
cli
xor
fnstenv
mov
push
fldt
push
int3
sahf
mov
cmc
roll
int3
cmpsb
aad
pop
and
scas
lcall
pop
hlt
ret
adc
add
lock
and
sub
push
lcall
insb
jbe
loope
inc
add
int
ret
dec
cmp
lahf
loope
sahf
std
dec
fisttps
add
sarl
dec
mov
lret
push
lahf
mov
inc
fcoml
out
filds
ror
shlb
test
mov
mov
pop
inc
xor
or
iret
or
dec
adc
inc
xor
sarl
inc
mov
shlb
push
repnz
mov
xchg
jnp
mov
mov
clc
js
add
xor
mov
xlat
jbe
in
mov
inc
mov
dec
in
dec
mov
mov
add
push
inc
gs
push
insb
call
pop
popa
push
out
and
sbb
jmp
or
cmp
adc
sub
es
data16
enter
fidivrl
movsl
dec
push
in
test
out
lods
in
xchg
ds
adc
and
or
sbb
sti
neg
sub
shrb
mov
fidivrl
sbb
cmp
dec
flds
pop
scas
rclb
jmp
mov
mov
in
mov
jne
fs
jb
mov
test
andb
xchg
mov
adc
push
xor
add
andnps
repnz
sub
and
sbb
clc
mov
pop
test
add
xor
pusha
xor
out
movsb
cmc
fsubrl
mov
stos
mov
jecxz
add
cmpsl
pop
xchg
xchg
push
lahf
jnp
out
xchg
cmc
mov
xchg
stc
fsubrp
in
pop
jns
lods
fdivs
mov
popa
push
test
sahf
ret
js
mov
lods
adc
sahf
enter
inc
dec
xor
mov
and
lret
out
jbe
push
lea
addb
pusha
inc
loop
imul
jo
pop
adc
lahf
cmpb
gs
jl
sbb
int3
call
cmp
jg
sarl
dec
pusha
jno
pop
cmp
cmp
sbbl
mov
pop
lods
pop
mov
dec
lds
dec
or
sahf
add
fdivr
call
push
cmp
in
sbb
fidivrl
dec
sub
sbbl
insl
lcall
mov
cs
nop
pusha
enter
hlt
xor
xchg
addr16
inc
push
inc
push
loop
sub
dec
dec
test
or
and
fisubs
xchg
adc
into
push
movsl
jp
xor
pop
sbb
repz
add
sahf
and
pop
lds
xchg
loop
xchg
loopne
imul
add
stos
test
mov
je
js
inc
pop
sbb
jge
xchg
cltd
dec
addr16
mov
sbb
pop
lahf
fwait
arpl
pop
or
mov
jo
adc
cmp
pop
addr16
jmp
or
push
pop
orl
aam
bound
dec
cmc
push
inc
mull
cmp
sbb
inc
xchg
lods
pushf
or
je
test
jno
call
pop
sub
test
push
ficoms
sub
push
rorl
push
dec
in
pop
cmc
not
lret
aam
jb
dec
sbb
faddp
and
enter
jns
out
fcoms
xor
mov
stos
adc
cmp
jns
xor
or
aaa
es
push
inc
inc
lods
leave
inc
fstl
hlt
dec
int3
pop
or
fsubrl
icebp
imul
push
dec
mov
xor
dec
call
mov
and
xchg
or
add
pushf
pushf
jb
loopne
cmp
cltd
fstl
ss
adc
js
mov
mov
je
stos
mov
push
cmp
push
mov
xchg
mov
or
and
mov
xlat
or
mov
xchg
xchg
cs
dec
fs
fucomi
addr16
push
inc
inc
dec
adc
cmp
ljmp
xor
call
aad
mov
daa
and
andb
aad
insb
xorl
xchg
dec
insl
push
mov
cmpsb
cld
xchg
rolb
sarb
pop
pcmpgtb
sbb
mov
es
les
cmp
pop
cmp
push
xchg
xchg
add
imul
lahf
aad
jge
xchg
mov
mov
dec
insl
fcmove
fistl
in
sub
mov
and
inc
jg
lods
cmpsl
stc
dec
adc
cs
jmp
enter
sub
shrl
xor
jecxz
xchg
repz
cmpsl
ret
test
adc
cmpsb
or
xchg
adc
and
movsl
lret
push
xchg
xor
enter
pop
mov
and
sbb
cmc
leave
int
push
mov
mov
jmp
adc
mov
lods
stos
sub
mov
fs
sbb
inc
xor
jb
repz
popf
sbb
and
ja
outsb
popa
pop
jl
jne
mov
out
lods
pop
xchg
fldcw
ret
mov
and
in
js
sbb
ds
insl
leave
faddp
aaa
dec
and
mov
inc
test
dec
mov
dec
out
and
fidivrl
leave
pop
push
xchg
mov
shll
test
loope
ret
loope
dec
xor
push
sbb
lahf
je
dec
push
fcmovu
sub
fsubl
pop
in
xor
sub
adc
sahf
jns
pop
inc
jle
pop
inc
xorl
mov
popa
in
xlat
lret
nop
dec
fldenv
mov
dec
mov
into
pusha
add
dec
inc
jbe
adc
out
movsb
cmp
shll
aad
mov
lcall
cmp
xor
sub
subl
mov
dec
and
sti
or
cli
idiv
push
xlat
mov
mov
push
repnz
in
xchg
dec
or
xchg
or
fstpt
or
insl
test
jle
mov
imul
mov
mov
pop
jmp
dec
inc
insb
iret
sbb
mov
addr16
rcrb
icebp
cmp
fs
add
sbb
and
mov
sbb
add
cld
stos
push
shrl
sahf
fwait
jg
icebp
cmpsb
ss
dec
mov
imul
cmpsb
fisttpll
and
fildll
mov
es
leave
icebp
loope
or
jle
sahf
xchg
test
mov
inc
push
sub
ret
ret
adc
stos
push
cmp
imul
jno
outsl
int
int3
ror
fcompl
xor
sub
ljmp
or
imul
insl
arpl
xor
andl
add
test
sub
int3
dec
ja
repz
loop
icebp
repz
das
out
es
inc
mov
or
xchg
mov
xor
out
mov
jmp
dec
push
clc
ljmp
or
mov
lret
notb
pushf
sub
and
psubw
or
pop
ljmp
imul
dec
mov
push
rorl
enter
mov
mov
or
xchg
lea
pop
das
or
test
dec
sti
pop
cmp
adc
fcmovnu
and
pop
sbb
adc
lds
icebp
xor
dec
out
jbe
and
cli
ret
or
sti
fs
int3
push
mov
js
out
pop
mov
addb
add
mov
xor
roll
movsl
add
das
mov
fwait
sarb
sub
push
and
imul
xor
mov
cmp
inc
pop
xor
movsb
fsts
pop
call
mov
mov
arpl
mov
mov
push
dec
pop
int3
mov
in
dec
dec
push
scas
mov
iret
jae
mov
jg
fnsave
test
xchg
fnsave
aad
test
xchg
cmpsl
inc
sub
shll
imul
push
shll
testb
clc
idivb
inc
sub
sub
icebp
imul
jg
pusha
xlat
repz
inc
daa
icebp
clc
loopne
jns
imul
nop
aaa
mov
sbb
pop
ds
and
fwait
mov
mov
push
sub
sahf
pop
mov
jo
jmp
movsl
adc
add
int3
xchg
and
inc
iret
mov
insl
dec
mov
mov
mov
out
popf
std
xlat
outsl
in
jp
popa
jge
ljmp
cmpsl
push
imul
loope
mov
mov
xor
imul
xchg
leave
outsb
sbb
hlt
loope
pushf
mov
xor
fstpt
cltd
call
mov
dec
orb
cwtl
xchg
cld
imul
int
dec
rorl
mov
push
call
add
movsl
lcall
out
or
adc
cmp
mov
pop
ds
outsl
fcmovne
jns
add
xor
mov
add
mov
dec
pop
std
xor
mov
push
cmp
xchg
imul
test
gs
xor
cmpsb
mov
inc
push
loope
cmp
jbe
test
ljmp
cmpsb
aaa
xor
pop
popa
xchg
out
cs
fidivl
pop
xchg
fnsave
aad
dec
cmp
sti
nop
lock
sub
sbb
sub
jmp
repz
cwtl
lcall
adcb
add
jo
dec
pop
lock
add
call
pushf
jmp
and
enter
mov
or
sti
push
incb
push
push
mov
or
popa
push
add
mov
pop
pop
mov
cmp
dec
in
xlat
pop
pop
mov
jecxz
int
repz
jo
pusha
data16
push
nop
incl
adc
adc
sbb
ret
pop
out
sarb
push
movsl
cmp
push
icebp
pop
xor
sub
shr
hlt
push
pop
addr16
xor
push
xchg
test
cmpsb
and
cmpsl
stos
scas
rcll
ljmp
xchg
sbb
jle
xor
sbb
jmp
cwtl
and
add
ljmp
test
lds
cltd
mov
pop
dec
hlt
fsubr
sti
sub
adc
sub
test
jmp
xchg
push
sub
addr16
mov
ret
push
dec
les
push
ret
dec
xor
inc
jae
es
pop
jecxz
in
push
and
pop
push
stos
adc
fstpl
mov
lret
jmp
xor
es
scas
test
cmc
iret
inc
xchg
sbb
jae
pop
xor
aaa
cmpsl
pop
push
aam
jge
mov
ret
aad
aad
lock
fiadds
ret
jmp
cld
loop
lret
adc
lock
pop
mov
scas
sbb
and
cld
and
push
mov
leave
push
pop
insb
xchg
and
push
insl
fildll
xor
pop
dec
in
std
push
mov
inc
mov
and
mov
loop
aam
sbb
jmp
in
lahf
lods
arpl
inc
jp
scas
out
sbb
add
imul
xchg
cltd
cli
cmc
jnp
pushf
fildl
xchg
jne
aaa
adc
shrb
pop
pop
dec
sahf
repz
bnd
dec
pop
jl
rcl
or
or
pop
dec
inc
jp
xor
mov
inc
or
negb
insb
sahf
test
pop
cmp
sbb
jbe
sbb
mov
testl
cld
jl
movsb
add
fsubr
adcl
cli
xchg
mul
popf
pop
aas
mov
cmp
std
mov
aam
cld
jg
cmpb
xor
pop
arpl
sbb
test
fs
pop
inc
gs
pop
cs
pusha
adc
push
jp
out
adc
mov
xorb
movsb
aas
mov
push
aam
jl
pushf
aam
xchg
inc
xchg
cld
cmp
push
xchg
sbb
das
mulb
gs
cmp
jo
dec
mul
add
int3
xchg
adc
sbb
pop
inc
fmul
lods
mov
xchg
movsb
sub
xchg
in
ficoms
push
jbe
push
insl
mov
aaa
inc
test
pop
movsl
imul
and
mov
mov
inc
scas
in
mov
int
inc
adc
lret
cli
aas
xchg
test
out
adc
jg
imul
enter
mov
hlt
out
add
mov
dec
std
divl
and
fs
lret
push
xchg
mov
cmp
add
pop
mov
push
outsl
out
inc
es
pop
dec
and
and
aam
inc
sbb
pusha
ficoml
jp
adc
mov
push
iret
popl
loopne
rolb
xchg
outsl
test
xchg
push
dec
xchg
loope
mov
movsl
lock
repnz
pop
lods
push
repnz
push
lcall
cmc
mov
jl
int
in
je
cmp
dec
push
cmp
xor
adc
mov
js
push
xor
iret
push
cltd
xor
jp
cs
xchg
roll
fwait
rcrl
or
cmpl
das
sbb
mov
outsl
ficompl
and
lret
cmpl
sahf
mov
fs
loopne
jbe
or
stos
es
sub
pop
divl
ret
sahf
cmp
aam
pop
sub
fisubrs
inc
movb
cmp
mov
lea
jge
add
shrb
dec
pop
lods
pop
fisttps
mov
dec
iret
cmp
popf
cmp
ficoml
mov
or
and
or
and
mov
pop
inc
add
stc
xchg
fcmovnbe
insl
test
mov
fninit
cmp
inc
and
xchg
mov
cli
push
mov
xor
and
in
cmp
and
jle
xchg
int3
or
mov
in
mov
in
jne
int
arpl
clc
xchg
into
lea
lcall
ret
xchg
add
mov
jae
les
mov
adc
or
mulb
sti
cli
jge
mov
adc
sub
in
adcb
das
addr16
subl
mov
adc
xlat
sahf
or
lret
dec
jecxz
adc
and
push
adc
jge
rcrl
roll
cmp
daa
lods
outsl
call
das
push
out
sub
int3
xchg
int
sbbb
je
cwtl
cmp
shrl
test
mov
inc
icebp
pop
sub
repz
scas
inc
shl
cli
cmpsl
jmp
xchg
push
inc
or
jae
arpl
ss
cmp
pop
subl
lods
push
sahf
push
sbb
daa
arpl
xorl
scas
mov
es
mov
adc
lea
and
xlat
fiadds
fistps
ror
sub
cwtl
dec
xchg
xor
sbb
pop
or
mov
jge
push
adc
pop
ret
jb
xor
jns
lret
sub
shrb
sbb
fdivs
pop
mov
pop
fisubrl
rclb
mov
dec
xchg
jge
inc
xchg
lea
adc
cmpsl
sbb
jns
fnsave
fdivrs
or
jle
cmp
or
enter
test
add
addb
lods
fisubl
mov
fidivrl
jb
xlat
and
inc
lret
cld
mov
int
push
divl
jl
pop
or
cmp
jmp
popf
mov
dec
sbb
das
rcl
stc
loopne
nop
cltd
subb
pop
inc
imul
add
xor
and
rcr
shr
stc
loopne
nop
cltd
subb
pop
inc
imul
add
xor
and
rcr
shr
stc
loopne
nop
cwtl
subb
pop
inc
imul
add
xor
and
rcr
shr
stc
loopne
nop
cltd
subb
cmp
ret
jo
pop
jle
xchg
call
iret
rcr
sub
xchg
sbb
stos
push
fistps
lods
xor
add
in
jne
inc
int
frstor
or
cmc
jge
dec
aad
and
lea
std
inc
int
frstor
or
cmc
jge
dec
aad
and
std
adc
cltd
xor
rorl
imul
mov
inc
mov
call
and
xor
in
and
push
sbb
sub
adc
pushf
lcall
and
cmp
jno
cmp
fsubl
mov
pop
xor
xor
movsl
shlb
or
insb
loopne
inc
movsb
aad
test
mov
sti
jae
bound
xor
pop
mov
shll
loopne
insl
cmc
addb
or
call
push
mov
pop
test
lds
push
push
dec
xchg
fdivs
lds
adc
or
fcom
mov
test
cmc
jge
dec
aad
and
lea
std
inc
int
fwait
in
shr
dec
cld
pop
in
xchg
sub
sub
add
xorb
dec
adc
loopne
stc
dec
in
mov
mov
call
adc
xchg
sub
mov
ljmp
jge
dec
aad
and
lea
std
inc
int
frstor
or
cmc
jge
dec
aad
and
lea
std
inc
int
frstor
mov
imul
and
push
mov
jns
sub
loope
add
xchg
cmp
mov
push
repz
mov
sbb
fimull
out
int
xchg
xorb
jns
lea
xchg
adc
shrb
mov
pop
sub
xor
cltd
lret
daa
outsb
repnz
sahf
aam
cltd
hlt
mov
add
xchg
loope
inc
push
xorb
cmc
lods
and
enter
pop
jmp
xchg
stc
dec
ffreep
pop
or
data16
pop
push
mov
jp
xchg
xor
lahf
out
mov
je
push
and
loope
loop
test
lds
outsl
jg
mov
js
inc
loope
out
into
mov
lods
cmp
outsb
mov
cmp
jno
popf
fnstenv
add
enter
cmpl
sub
lcall
sbb
adc
dec
lock
sub
pop
cmp
lret
scas
test
outsl
pop
push
or
fldl
test
in
mov
nop
frstor
ljmp
mov
popf
xor
in
add
cld
and
iret
sbb
sbb
andl
adc
out
stos
adc
fistpll
orl
ss
stos
mov
inc
or
movsb
daa
and
cli
sbb
ds
xchg
je
dec
test
repnz
fnsave
cli
inc
mov
mov
mov
js
roll
xchg
adc
cmp
imul
add
outsl
cmp
pop
cmpsl
inc
hlt
inc
xchg
insb
jp
sub
jne
ss
push
movsl
push
inc
mov
cltd
iret
or
int
dec
xabort
inc
mov
pop
push
imul
xchg
scas
test
mov
push
or
nop
jne
addr16
push
mov
sbb
je
dec
pusha
jmp
dec
repz
xchg
dec
and
mov
xor
push
mov
arpl
add
jg
data16
mov
adc
fisubrl
jg
xor
sbb
ss
add
inc
jno
or
cmp
lret
dec
dec
push
loop
push
data16
push
faddp
dec
mov
leave
jb
xchg
jg
lea
iret
jge
arpl
push
fnstenv
popa
xchg
or
cmpsb
lods
dec
mov
fnclex
shll
jne
and
xor
push
inc
add
cmpsb
roll
mov
shrb
nop
push
mov
les
sub
gs
out
cmpsl
mov
inc
es
push
jb
cmp
ss
fsubp
hlt
sbb
into
ret
cmp
test
movsb
testl
jo
clc
sbbb
pop
jmp
sbbb
cli
xchg
add
sub
hlt
hlt
lahf
adc
sahf
jl
cld
mov
stos
xor
cltd
push
xchg
adc
das
cmp
js
outsl
dec
xchg
cmp
or
jbe
shl
outsl
arpl
adc
push
das
mov
push
mov
xchg
out
int3
sbb
lcall
jbe
loopne
outsb
jge
gs
sbb
fldl
jg
mov
pusha
shlb
stc
cmpsb
push
pop
negl
adc
jb
jl
repnz
pusha
mov
xchg
jno
sub
and
jmp
aas
push
jo
fistps
cmpb
lock
stos
lods
inc
inc
call
int
sti
jno
push
jl
jnp
test
dec
nop
pushf
imul
mov
xor
push
clc
cmp
push
cmpb
loope
xchg
enter
repnz
jbe
xor
dec
sub
cmc
or
shll
mov
scas
seta
fildl
jo
pop
popa
mov
shl
sub
imul
cmc
in
in
lahf
shll
sub
inc
cwtl
mov
or
aam
stos
or
pushf
add
push
mov
iret
mov
mov
inc
mov
push
mov
bound
ds
andb
addl
leave
fidivrs
and
sub
xchg
mov
js
popf
test
xchg
mov
aaa
movsl
negb
jp
push
icebp
fpatan
fwait
push
test
shlb
out
xor
popf
inc
rcrb
dec
imul
add
negl
adc
fdivs
negb
out
mov
or
scas
out
rcrl
or
or
dec
jbe
out
inc
fs
cltd
cmp
xor
jnp
sub
jbe
fiadds
add
sbb
and
fsub
adc
jno
lea
pop
dec
or
cmp
fdivrs
fmuls
push
cmpsl
aaa
or
mov
enter
int
lahf
rol
aad
clc
sti
cmp
cmpsl
push
cs
lock
movsl
pop
in
mov
xor
and
les
inc
mov
sahf
cmpsl
jb
jl
pop
scas
mov
aam
loope
push
pop
ret
lds
cmp
rcrb
imull
mov
pop
xor
shrb
lods
je
stc
jmp
cmp
out
push
cli
mov
cld
enter
in
and
mov
lods
jp
jnp
adc
dec
mov
xor
repnz
loopne
mov
pop
mov
dec
sbb
cmp
add
subl
jbe
fs
sbb
lahf
ret
pop
pop
cmpsb
dec
xor
xchg
and
test
jecxz
rcrb
adc
and
cmp
xchg
std
addr16
jno
leave
and
sbb
add
jo
adc
xor
div
pop
sbb
lret
ret
outsb
xchg
sub
fcomps
addb
push
xchg
mov
in
jg
nop
adc
mov
and
mov
cmp
dec
xlat
sbb
pop
pop
mov
cmp
fisubrs
ds
dec
sbbb
in
pop
imul
pop
and
or
gs
in
push
pop
xchg
or
xor
pop
xlat
inc
mov
pop
xlat
sbb
fisttpll
cld
movsl
cmp
test
pop
xchg
test
cmpsb
or
jns
and
push
aas
cmc
or
mov
push
pop
sbb
aaa
stos
adc
test
sub
repz
fdivs
outsl
or
inc
mov
jg
popa
ret
lret
js
arpl
imul
movsl
pop
repnz
enter
push
mov
xor
xchg
xor
mov
insl
popa
mov
sbb
mov
test
aad
add
adc
insb
pushf
xchg
mov
xchg
xchg
aad
lret
jno
insl
cld
pop
enter
mov
hlt
mov
testl
fidivl
push
rol
icebp
xchg
loopne
scas
dec
or
arpl
sub
pop
movsl
addr16
cli
mov
pusha
fdivl
push
pop
dec
fdivl
dec
mov
push
pop
jl
insb
push
das
dec
push
and
jge
mov
cmp
adc
pop
in
mov
push
mov
fnstcw
popf
jge
cmpsl
pop
mov
int
repnz
add
xor
fstl
xchg
outsl
popa
push
je
aas
aaa
cmpsb
jns
sahf
iret
push
mov
insl
gs
rclb
pop
adc
push
add
rclb
adc
idivl
test
int3
insb
xor
adc
aam
insb
jne
in
push
sub
cmp
xor
mov
or
inc
ljmp
inc
sbb
mulb
push
fnstsw
push
dec
push
popl
sub
mov
stos
sar
test
cmp
mov
xor
je
pop
xor
loopne
or
stos
add
adc
repz
and
add
into
lea
pop
push
add
cltd
test
stos
cmp
xorb
pop
pop
rclb
daa
fwait
lock
test
pop
pusha
flds
or
mov
push
hlt
rcrl
mov
pop
mov
xchg
adc
push
mov
sahf
jl
popa
fnstenvs
fistps
push
pop
insb
and
pop
inc
in
mov
daa
test
xor
shll
setne
adc
xchg
push
add
jnp
in
aaa
cli
mov
fs
xlat
mov
inc
test
shll
sub
mov
outsb
sbb
out
push
mov
iret
pop
mov
call
mov
outsb
stos
bound
cmp
ret
and
adc
jo
shl
inc
sbb
xchg
test
inc
stos
adc
pop
es
mov
jle
xor
xor
inc
jl
nop
loopne
lds
stos
cs
and
daa
mov
rorl
adc
dec
cmp
push
cmpsl
mov
movsb
xor
in
lcall
popa
sub
lcall
ljmpw
push
xchg
fistpll
xchg
aas
or
daa
push
jb
jecxz
aam
fmuls
movl
jp
sub
aas
mov
ss
lods
sub
aaa
push
mov
outsb
dec
push
push
mov
adc
or
xchg
add
insl
xor
stos
out
and
xchg
jmp
cld
stos
out
clc
push
lea
ficomps
and
mov
push
jmp
divb
pop
fnstcw
xchg
mov
cltd
aam
xchg
push
into
loop
add
inc
xchg
cmp
push
clc
sbb
dec
push
addr16
jno
mov
mov
lods
call
sub
test
imul
outsb
aam
cmp
push
or
insl
inc
bound
mov
out
mov
and
sahf
pop
inc
in
jp
lock
push
cmpl
cmpsl
sub
je
mov
jo
and
adc
mov
out
ret
push
xor
lret
loopne
movsl
outsl
pop
adc
jle
in
in
jmp
repz
jbe
push
rorb
mov
test
and
stos
jle
dec
jmp
xchg
fldl
pusha
mov
push
rolb
int
and
cwtl
or
adc
push
mov
mov
cs
mov
fnsave
mov
push
leave
je
dec
ljmp
into
push
cmove
pop
sbb
iret
test
jne
rcl
and
daa
mov
out
mov
pop
repnz
and
mov
sarl
mov
fdiv
pop
ds
loope
int
jp
into
xor
sbb
and
test
push
adc
adc
outsb
out
add
jns
int3
jne
jg
dec
push
jo
lds
icebp
shll
sub
in
cmp
div
call
adc
stos
test
cwtl
push
es
cmp
fnstsw
iret
push
xor
lcall
jecxz
fimull
cltd
test
or
cmp
jmp
adcl
aas
push
sub
loop
jmp
mov
add
jge
es
mov
out
add
add
dec
clc
adc
clc
sahf
lret
pop
leave
sub
pop
adc
pop
sbb
test
push
cmpb
iret
sub
scas
push
xor
mov
pushf
sti
fstpl
mov
stos
jbe
mov
sub
jbe
inc
adc
sbb
fisubrs
stc
testl
push
push
pop
iret
jnp
daa
add
xchg
pop
and
in
jle
or
lret
dec
cmp
sub
clc
testl
aaa
push
lcall
xchg
cmp
insb
inc
cmc
jbe
jno
sub
je
out
cmpsb
lods
cmp
cmp
or
lock
mov
jo
sahf
addb
mov
adc
clc
sbb
outsb
mov
imul
jnp
scas
lea
mov
or
movsl
loope
sub
jno
ret
mov
gs
mov
loop
pushf
jnp
out
insb
or
cltd
cli
aam
aaa
xor
out
aad
mov
mov
lahf
push
outsb
lcall
ja
or
adc
mov
movsb
adc
or
fcoml
mov
or
dec
lds
fmuls
das
repz
mov
cmp
stos
repnz
sub
mov
dec
xor
aam
outsl
push
pop
fsubp
jmp
dec
mov
pop
mov
mov
loope
ficoms
out
or
ret
ljmp
adcl
cli
movsb
insb
and
dec
cmpsb
add
jmp
fadd
push
call
mov
rorl
dec
lret
popf
mov
jb
cmpsb
popf
mov
mov
push
add
nop
cld
inc
idivb
xchg
gs
pop
push
dec
add
and
sbb
imul
jo
stos
rolb
sub
sbb
arpl
mov
rorb
cmp
push
pop
xlat
mov
dec
ds
leave
int
or
cmc
imul
cmp
nop
push
scas
adc
sbb
push
and
lds
cmc
jb
pop
inc
imul
repnz
cmp
xchg
xlat
mov
mov
sbb
mov
pop
adc
pop
sahf
adc
rol
and
daa
xor
sub
inc
popa
shrb
daa
jae
jb
mov
jns
lea
repnz
repnz
inc
lret
lret
test
pop
cwtl
mov
push
scas
adc
daa
dec
into
xor
add
ja
stc
sub
out
push
dec
dec
add
insb
pop
adc
mov
sbb
cmc
mov
icebp
push
jecxz
mov
sub
and
pop
insb
adcb
add
push
dec
push
mov
gs
movsb
jnp
fstps
mov
lods
xlat
push
xchg
xlat
jae
test
sbb
push
insb
popf
andb
sub
mov
mov
insl
scas
xchg
lods
pop
add
adc
mov
mov
sbb
lods
dec
test
shlb
or
add
ja
pop
sub
rcr
pop
cld
inc
ret
lds
rorb
push
xchg
dec
xchg
das
testb
lods
xchg
in
and
xchg
or
out
fildll
pop
outsb
into
leave
dec
cwtl
mov
adc
sbb
pop
ret
xchg
aam
ss
insb
inc
cs
fmulp
lods
mov
lods
xor
jne
outsb
bound
or
xchg
fmull
xchg
mov
lods
jno
mov
adc
push
stos
aam
cmp
pop
gs
clc
and
negb
xchg
nop
mov
icebp
push
xor
mov
or
sbb
cmp
inc
xchg
jecxz
mov
jns
mov
sub
cmc
icebp
inc
lret
mov
test
pop
cltd
jle
pusha
push
adc
loope
cld
mov
out
int
mov
je
and
data16
xchg
das
lods
scas
mov
out
or
lds
jno
jnp
dec
fisttpl
rcl
mov
stos
shll
rorb
jle
cmp
sbb
out
adc
push
loopne
outsl
mov
dec
and
cmp
sbb
add
jecxz
sti
outsl
stos
cmp
mov
mov
bound
adc
mov
shrl
push
sbb
adc
xor
add
and
dec
cmp
lcall
jns
testl
shl
fabs
jb
icebp
inc
sahf
mov
push
jp
shrd
xchg
lods
mov
add
pop
xchg
xor
aaa
push
in
jmp
dec
mov
inc
enter
push
das
stc
add
popf
repnz
jl
testb
push
jmp
or
mov
pop
pop
sub
pop
dec
push
les
mov
dec
aas
mov
shlb
or
mov
pusha
out
cmp
mov
and
push
mov
cs
inc
enter
mov
jae
jb
out
adc
cld
cmp
sbb
repnz
sar
test
inc
xchg
cli
sbb
adc
lea
push
pop
and
fcoml
orl
fadds
lods
inc
pop
pop
pop
and
dec
mov
xor
in
insl
dec
jb
stos
movsl
loope
pusha
add
mov
jns
test
xchg
xor
and
or
pusha
push
add
dec
or
push
cmp
popa
iret
call
and
hlt
ret
in
out
jbe
repz
or
mov
xor
scas
and
add
pop
pop
ret
pop
jge
cmpsl
jmp
or
cmp
mov
insl
fnstcw
mov
addb
ret
fstl
add
pop
clc
mov
ljmp
test
xor
ret
movb
xor
jo
dec
xchg
and
or
fs
inc
pop
dec
sarb
out
add
pop
mov
xlat
aas
or
fisttps
push
fwait
inc
int
bound
shll
nop
pusha
andl
cmp
lock
adc
scas
mov
inc
into
lods
xor
imul
xchg
mov
xor
inc
daa
pop
ss
iret
sahf
and
lcall
daa
add
iret
fnstsw
and
movb
mov
roll
div
jo
xchg
cwtl
lock
cmp
add
inc
mov
ljmp
mov
ds
mulb
divl
popf
and
std
inc
xchg
movsb
cwtl
bound
std
out
dec
je
mov
pop
push
xor
sub
test
outsl
loope
cs
pop
lahf
mov
push
js
mov
nop
in
add
sub
mov
loope
fcmovne
mov
sbb
outsb
in
dec
ret
push
mov
scas
lret
test
push
sbb
lret
into
or
addl
fistpl
fadds
jmp
es
adc
sub
mov
mov
in
mov
inc
arpl
push
mov
hlt
fdivp
loope
adcb
or
mov
xchg
orl
add
aas
xor
in
inc
iret
mov
jnp
movsb
movsb
pusha
xchg
imul
xor
aaa
bound
mov
jns
sub
or
cltd
jnp
fstps
sub
xchg
loop
lds
leave
pop
pop
je
push
insl
inc
and
std
push
shrl
cmovb
jg
xchg
xor
cmp
loop
loope
mov
test
add
je
lahf
push
adcl
aam
xlat
inc
jb
mov
stos
inc
repz
mov
mov
mov
jne
outsl
pushf
push
mov
mov
ja
outsb
xlat
imul
das
cmpsb
dec
xchg
push
outsl
push
dec
insb
pop
in
cld
add
or
fmul
push
mov
repnz
mov
rcl
btc
aad
aas
jne
in
pop
jl
outsb
test
cmp
cmp
aas
mov
xchg
jecxz
xchg
jg
ljmp
push
jl
push
push
add
in
rclb
cmp
fmull
adcl
or
pop
add
pop
pop
test
cmc
in
mov
pop
cmp
sub
xchg
jp
fs
cmpl
jge
sub
out
outsl
ficomps
or
pop
mov
mov
jb
mov
sub
negb
stc
inc
daa
push
movsl
bnd
mov
addr16
ljmp
sbb
fstl
pop
mov
int
xchg
push
cwtl
ds
test
xor
mov
cmpsl
cmpsb
mov
cs
sub
inc
int3
and
pop
iret
dec
mov
sub
ds
push
fscale
cmp
dec
into
out
jp
sbb
js
xchg
dec
adc
pop
pop
out
cmpl
dec
mov
xor
sahf
dec
jns
fiadds
jno
or
arpl
pop
or
int
add
jnp
dec
dec
adc
or
mov
pop
cmp
push
inc
jmp
dec
pop
clc
lret
lcall
movsl
mov
imul
ss
and
add
orb
xorl
fistpl
mov
mov
mov
dec
dec
scas
aam
test
mov
cmp
and
leave
or
inc
cli
mov
je
in
shrb
repnz
push
dec
xchg
test
sti
sbb
leave
jno
repz
sbb
push
sbb
adc
lods
dec
jecxz
jno
mov
jge
inc
push
cmpl
test
mov
pop
icebp
sbb
clc
sahf
stos
inc
jg
jg
inc
push
pushf
pop
sub
mov
cmp
sarl
movsl
das
dec
repnz
sub
jmp
fcompl
ljmp
test
cmp
imul
xchg
inc
shr
std
pop
std
stos
shll
xchg
mov
shr
xor
jmp
int
and
sub
xchg
aad
mov
mov
mov
xor
sub
enter
jo
add
test
xchg
add
adcl
incb
push
ja
jl
loop
insl
ret
fistps
push
xchg
jge
fwait
or
and
aaa
pop
pop
or
add
mov
pushf
les
fadds
test
push
push
pop
scas
jo
xchg
adc
test
inc
pop
xor
lea
lds
xor
sbb
mov
test
pop
loope
iret
lds
arpl
adc
jp
inc
lea
aaa
and
test
insl
sti
push
idivl
push
pop
sub
mov
cmp
in
cmc
jge
dec
aad
and
lea
std
inc
int
frstor
or
cmc
jge
dec
aad
and
lea
std
inc
int
frstor
or
cmc
jge
dec
push
pop
and
lea
std
inc
int
frstor
or
cmc
std
vpmullw
scas
lea
add
jo
pusha
sub
cmp
clc
mov
dec
push
jns
add
les
cld
nop
cld
orb
pusha
sub
cmp
dec
xor
adc
cld
pushf
loopne
shlb
mov
adc
dec
and
push
sub
or
lock
mov
pushl
out
gs
adc
pop
loope
repz
lods
and
dec
xor
int
lea
ljmp
pop
shr
out
jmp
push
push
addb
ror
in
pusha
add
in
loopne
fbld
pop
mov
mov
loopne
mov
and
in
nop
cld
lds
scas
sbb
mov
pop
xor
adc
dec
xor
nop
pop
cmc
xchg
lahf
mov
lock
push
and
mov
or
pop
lods
sub
mov
mov
ret
in
add
imul
test
cwtl
adc
mov
cld
xchg
addr16
inc
pop
xor
adc
xchg
lock
mov
movsl
test
mov
pusha
jo
adc
dec
and
and
mov
fsubs
sahf
call
or
dec
das
and
pop
outsb
insb
fs
xor
test
test
mov
lcall
pusha
inc
xor
add
insb
adc
lock
loopne
sarb
in
nop
cld
orb
pusha
sub
cmp
dec
xor
adc
lock
loopne
sarb
in
nop
cld
orb
jae
xlat
dec
inc
and
mov
sbb
enter
inc
mov
fstl
das
adc
enter
icebp
out
mov
arpl
int3
xchg
pushf
stos
imul
std
test
popf
adc
shl
scas
xchg
imul
sti
in
roll
es
xchg
stc
or
mov
cmp
ror
mov
mov
popf
xchg
cmpsb
adc
lods
jg
dec
leave
rol
scas
std
pop
and
push
xor
aas
fsubl
and
insl
dec
stc
push
mov
pop
adc
repz
flds
scas
xchg
push
mov
sbb
into
fcompl
or
repz
inc
mov
push
or
loopne
sub
mov
cmc
mov
cwtl
inc
stc
or
push
fcom
shl
add
aas
rorb
mov
xor
push
pushf
xor
inc
inc
subl
aam
ja
loop
mov
ds
cmp
rcrl
je
ljmp
sysenter
sub
dec
repz
cmp
cmp
repnz
dec
dec
jmp
mov
mov
add
int3
shll
mull
mov
fdivrs
dec
jns
pop
stc
sub
sbb
pop
insl
cmp
popf
insl
aas
scas
jnp
data16
out
adc
ljmp
lcall
stos
pushf
mov
mov
popf
jne
call
lods
mov
out
jnp
lods
nop
imul
ja
shlb
pop
outsl
push
add
cld
outsb
jge
dec
lock
sbb
bound
jno
xchg
jge
lds
adc
aam
test
nop
jl
mov
mov
add
outsb
or
adc
adc
fdivrp
stc
les
sahf
sbb
sbb
jle
fisubl
and
mov
xchg
imul
enter
jae
dec
cmp
sbb
fdivl
xor
mov
cmpb
bound
adc
cmp
cwtl
cmp
and
mov
push
adc
test
movsl
nop
push
pop
aaa
lock
mov
adc
xchg
jb
in
in
pop
jle
fisttpll
add
das
dec
std
xlat
sbb
cli
fstp
mov
cmp
inc
push
add
or
jle
mov
imul
lret
mov
xor
xchg
pop
in
xchg
fwait
leave
imul
push
sahf
vmovdqa
sub
mov
scas
clc
and
xchg
ljmp
loop
dec
pop
shlb
xchg
hlt
sbb
cs
adc
inc
lret
push
test
cltd
mov
push
mov
cmp
aas
push
pop
or
push
cmp
pop
stc
iret
test
xlat
jl
jnp
jae
mov
or
fs
dec
divl
out
push
add
xor
sub
insl
adc
es
je
push
dec
adc
xchg
sub
add
pop
aam
fisubs
js
sbb
add
jae
fstl
fdiv
daa
pusha
popl
and
mov
and
scas
add
lret
cmc
or
xchg
push
cli
adc
loope
jg
setnp
lret
push
loopne
aad
rorl
jne
mov
push
add
sti
adc
add
ljmp
adc
push
dec
push
addr16
lods
je
mov
or
mov
test
stos
lret
xchg
inc
mov
push
pop
xchg
shrb
pop
lcall
adc
xchg
pop
mov
adc
inc
cli
fwait
push
ret
pop
jle
sub
lea
pop
or
mov
push
push
addr16
mov
mov
xchg
inc
inc
and
out
sbb
dec
mov
mov
dec
inc
fwait
cld
addr16
loope
ficompl
fmul
js
push
in
test
add
stc
add
sbb
psubd
xor
or
repz
jmp
cltd
sbbl
mov
repz
fistl
cmpsl
xlat
dec
xchg
sub
and
add
mov
push
scas
fidivrs
loopne
cmc
jp
dec
outsl
test
std
and
lret
inc
push
outsb
sbb
xor
aas
fs
and
mov
fisubs
and
add
jecxz
fsubp
stos
xchg
adc
sub
dec
mov
int3
pop
call
jno
mov
pop
lret
jo
cwtl
out
mov
and
inc
imul
adc
sbb
cli
push
sub
lcall
xchg
mov
in
mov
es
loope
aam
rcrb
sub
insb
stc
outsb
push
jg
cmp
mov
movsb
pop
cmpsl
fldl2e
repz
in
push
daa
movsb
fimull
push
lds
arpl
arpl
inc
and
mov
cmp
pop
imul
fcompl
call
test
push
out
mov
insb
ja
cmp
scas
mov
rcrb
fldenv
sub
cmc
push
lods
shrl
sub
outsb
inc
lods
dec
inc
pop
pop
and
lods
mov
inc
das
scas
xchg
jl
and
adc
jnp
std
sbb
sbb
sub
sub
test
mov
cli
pusha
ljmp
rcll
cmc
fists
js
push
int
aad
test
je
adc
sahf
jmp
jecxz
adc
dec
out
mov
or
mov
xchg
cmp
dec
mov
fisttpl
mov
or
idivl
mov
in
push
mov
and
shll
xor
repz
lahf
and
fistpl
dec
fcom
insl
cmp
inc
fs
inc
dec
aam
in
add
xlat
sbb
fildll
andb
or
sbb
push
xor
or
sub
movsb
xor
and
out
loope
add
enter
jnp
pushf
or
lcall
sahf
sub
cmp
and
fiaddl
daa
jle
sbb
fcoml
jge
add
pop
rolb
dec
xor
mov
test
pop
jo
fisubs
jns
dec
or
das
lcall
cmp
or
mov
gs
push
aas
les
inc
sub
push
xchg
mov
arpl
push
xor
int
stc
pop
fstpl
incb
xor
fistpll
gs
add
roll
or
aas
adc
push
in
test
dec
enter
popf
test
add
aas
notb
mov
imul
mov
cmp
inc
aad
push
in
push
leave
and
mov
movsb
inc
xor
sub
pop
push
pop
mov
inc
add
mov
mov
out
cmp
scas
sbb
in
jae
push
jmp
idivb
sbb
cmp
into
cmp
mov
push
push
cmpsl
int3
push
cmp
dec
cmp
mov
push
add
and
popf
movsb
dec
or
sub
dec
mov
mov
inc
pop
icebp
inc
aaa
insl
dec
or
mov
clc
xchg
pop
int
hlt
shrd
adcb
icebp
fisubrs
dec
clc
cmp
pop
loope
test
and
ficompl
dec
aad
xchg
sbb
pop
cltd
leave
adc
into
add
fildl
subl
dec
jb
inc
push
ficompl
pop
cmp
sbb
fmul
into
mov
in
fcompl
inc
pop
xchg
inc
adc
mov
mov
inc
wrmsr
dec
movsl
aaa
fsubrp
movsb
push
or
inc
or
cli
cmpsb
pop
into
dec
popf
imul
stos
add
dec
mov
imul
and
fcmovb
push
fs
jge
jmp
call
jbe
int
push
push
and
adc
fs
jae
or
mov
das
mov
dec
inc
dec
lret
mov
lret
pop
inc
pop
mov
mov
jno
cwtl
sbb
ja
gs
inc
pop
push
fcoml
mov
or
test
cmc
sbb
in
add
xor
stos
icebp
dec
rcr
aas
ret
sbb
in
pop
loop
pop
sti
mov
mov
or
imul
xchg
xchg
inc
fwait
cmp
mov
std
sahf
fsts
icebp
fimuls
inc
pop
enter
shrl
jmp
xor
push
and
push
adcb
cmp
jmp
jne
cwtl
add
ret
pop
cwtl
js
std
scas
adc
inc
loopne
or
inc
xchg
mov
pop
dec
adcl
icebp
add
xchg
cli
jmp
and
addr16
fmul
inc
pusha
add
mov
daa
pop
out
std
lods
mov
dec
dec
cmp
cmp
mov
aaa
push
sub
clc
sub
push
ss
movsl
push
cmpsl
xor
xchg
pop
sub
sbbl
icebp
ret
and
jg
aaa
sub
iret
rclb
outsb
push
xor
loop
inc
add
cmp
sbb
jno
fisubrs
cli
and
jae
sbb
out
ljmp
push
or
sbb
int3
jbe
cs
mov
cltd
add
aam
nop
les
inc
jb
sbb
add
clc
test
push
mov
cmp
and
pop
loopne
mov
push
mov
jo
fdivp
rorl
scas
rolb
gs
mov
dec
xlat
js
ret
sqrtps
and
movsb
lods
add
xor
mov
shr
aaa
data16
mov
pop
out
fwait
pushf
push
jge
stc
jae
adc
pop
bound
add
push
sub
aad
test
faddl
lods
pop
jp
enter
les
adc
sbb
cltd
scas
pop
scas
jge
cli
imul
flds
jg
pop
inc
cli
incb
sub
add
jecxz
sbb
cmpl
int
jmp
jle
sbbb
mov
push
xor
xor
out
dec
adc
mov
stc
push
das
and
popf
adc
push
fildl
fmul
cmpsl
inc
movsl
mov
jge
add
shrb
mov
je
cmp
imul
sti
cltd
aam
fwait
inc
scas
add
mov
sbb
pop
inc
leave
pop
incb
xchg
sbb
dec
inc
xchg
icebp
pop
rcl
jne
hlt
mov
jns
ret
movsb
clc
pop
fnstsw
cwtl
fincstp
stos
jno
lcall
cmp
mov
inc
sub
add
fs
dec
adc
xor
test
sbb
push
pop
shlb
or
inc
cld
push
cmpsl
jg
repz
movsl
lea
jne
repz
or
push
gs
cs
or
or
push
mov
stos
dec
addb
jmp
aaa
or
stc
or
lret
inc
shrl
neg
jp
loopne
mov
xchg
out
punpckhbw
add
pop
push
out
scas
les
call
shr
adc
dec
fidivs
orb
inc
mov
ficomps
out
std
pop
lods
jnp
xlat
hlt
or
add
clc
mov
pop
mov
inc
popf
sub
fisttpl
mov
lret
jl
jmp
add
xchg
mov
shll
insb
mov
xchg
xchg
pop
xchg
out
jb
daa
mov
xor
sbb
outsl
xchg
sti
stos
fnstenv
and
xchg
sti
add
sub
push
sti
inc
mov
mov
add
xor
stos
push
push
xor
fisubs
jmp
ret
incb
movsb
jmp
cld
mov
clc
mov
or
ja
int
xchg
sbb
mov
test
arpl
rorb
mov
mov
sbb
push
mov
jecxz
pop
or
xor
cmc
jp
fldl
lds
inc
imul
dec
pop
insb
mov
xor
sti
daa
scas
jle
xchg
xchg
inc
mov
stos
loope
sahf
cmp
fsubl
ds
enter
mov
lahf
popf
mov
xchg
sbb
shll
into
into
outsl
mov
bound
enter
std
mov
push
dec
rcrb
mov
and
cmc
jg
insl
dec
fsubp
movsl
mov
jbe
sahf
cmp
dec
dec
fmuls
xchg
jl
xchg
loopne
jb
adc
inc
xchg
in
ds
mov
pop
loopne
sub
mov
add
jae
jnp
sbb
inc
fstl
xchg
fistpll
cmpl
sbbl
sub
add
loop
aad
xchg
pop
sub
stc
sbb
jnp
arpl
fnstcw
push
jae
lret
dec
xor
lret
xor
test
ss
add
dec
aas
insb
pop
cmp
cmp
inc
clc
fsubrs
mov
cmp
pop
mov
scas
out
inc
sub
xor
cmp
xchg
jbe
jle
test
or
leave
les
rcr
cmp
pop
and
and
xorl
repz
push
push
je
fdivr
adc
dec
in
and
fwait
clc
loopne
or
icebp
incb
pop
adc
adc
pop
or
insb
push
xor
xor
and
push
pop
fcoms
aad
push
lcall
dec
and
mov
out
test
push
xor
push
xor
aas
xchg
xor
aad
pop
lea
cs
pushf
lcall
pop
ljmp
push
add
mov
in
stos
add
pop
in
xchg
sub
es
dec
xchg
add
xchg
dec
gs
jb
dec
ret
adc
mov
and
out
jb
and
jp
mov
je
sbb
add
mov
jge
fs
fsts
mov
mov
aad
pop
sbb
inc
int3
aas
sub
mov
xor
jae
mov
mov
mov
fwait
insb
xor
fcomi
inc
data16
xor
push
add
sub
or
cmp
cwtl
cld
imul
xor
andb
mulb
bound
cmp
cmp
hlt
fs
lods
lods
pushf
imul
dec
pushl
rcr
jle
mov
insl
adc
dec
stos
std
call
insl
sub
xchg
sub
cltd
push
inc
call
push
push
hlt
and
sbb
xor
jmp
sub
movsl
mov
fisubrl
inc
jbe
pushf
inc
jo
sahf
pusha
mov
rcl
addr16
sub
aas
push
mov
out
imul
in
stos
ds
pop
jg
xor
aas
ficompl
test
jmp
insb
jae
mov
fmulp
ds
jle
pop
sbb
aas
mov
xchg
in
or
hlt
lods
mov
test
xchg
add
lret
iret
loope
inc
push
cmp
mov
jb
mov
xchg
dec
ret
jns
out
mov
dec
cmp
pop
ljmp
fdivp
pop
in
push
sbb
xchg
into
sbb
pop
mov
add
test
cmp
mov
jnp
aas
mov
shrb
sbb
sub
push
add
cmpsl
test
iret
xchg
mov
mov
dec
out
jo
jecxz
push
xchg
out
sub
ret
cmp
mov
sub
mov
dec
cmp
shrl
movsb
rcr
test
hlt
dec
sub
mov
jp
push
popf
xor
push
sbb
pop
imul
aaa
push
andb
adc
dec
aam
or
push
mov
addr16
aaa
add
and
or
mov
xlat
es
and
xorb
mov
insl
cli
adc
pusha
xor
test
les
inc
sub
call
sbb
dec
jo
mov
test
stc
pop
dec
jae
or
stc
and
cmp
dec
outsl
xchg
inc
pop
dec
xchg
xchg
sub
push
jae
mov
push
dec
ds
loope
hlt
outsl
cmp
sub
fdivs
xchg
jbe
fnsave
mov
hlt
jno
ja
pop
ss
or
xor
pop
iret
jno
fldcw
insl
fisubs
sbb
das
add
cmp
call
pop
jmp
test
test
mov
jle
adc
insb
or
shl
into
fistpl
mov
test
sbb
stos
jnp
pop
cmpsb
lret
sbb
loope
cmpsb
std
and
mov
aam
mov
mov
cmp
pop
test
jb
sub
aad
lock
out
lock
adc
call
rcr
loop
aas
arpl
adc
aam
mov
inc
push
cwtl
dec
insb
adc
or
xor
sub
imul
cmp
jb
dec
ret
pop
test
inc
ds
sbb
retw
sub
stos
xchg
and
loopne
and
jno
and
scas
mov
imul
xchg
sbb
mov
fs
imul
dec
and
fldenv
loop
mov
sbb
add
inc
jns
mov
mov
idivb
and
mov
dec
adc
jnp
mov
int
popf
dec
xchg
push
addl
lods
bound
nop
ds
mov
or
push
lcall
test
incb
mov
jecxz
insl
add
notl
into
stc
sbb
mov
subl
je
movsb
adc
sbb
cwtl
ret
and
jno
mov
test
dec
shll
pushf
inc
mov
mov
fwait
push
adc
dec
sbb
into
gs
daa
loop
pop
jge
and
int
dec
jmp
iret
mov
sahf
movsl
out
cld
std
adc
xchg
mov
mov
das
rorb
inc
hlt
in
cli
cltd
push
pop
lahf
pop
mov
push
jl
xchg
pop
push
pop
jns
lods
lods
or
mov
mov
adc
jae
inc
data16
jbe
inc
jbe
mov
and
mov
cmp
lock
shlb
data16
jae
scas
cmc
adc
add
data16
jmp
mov
adc
and
or
aam
rolb
sbb
xchg
cld
add
aas
xor
and
mov
lea
lods
jg
cld
shrb
or
lds
cli
fdivrp
dec
cmpsb
fs
pop
inc
outsb
pop
fldcw
insb
movsb
sub
adc
xor
sub
and
dec
iret
scas
out
sbb
cmpl
rcrb
adc
scas
je
out
scas
imul
icebp
add
mov
mov
jp
dec
jb
loope
int3
dec
cmc
cmc
push
stc
outsb
inc
scas
cmp
iret
cld
fsubl
into
jbe
sub
or
jl
mov
jmp
mov
sbb
push
xchg
dec
sub
stos
scas
xor
xor
jl
push
imul
shll
daa
pop
mov
je
fdivrl
loop
pop
in
mov
add
or
adc
inc
mov
sub
push
into
fldt
xchg
add
mov
std
jbe
sti
xor
cs
out
movsl
sti
xchg
mov
xchg
jno
or
leave
pop
adc
pop
mov
and
leave
push
push
ficoms
mov
addb
and
jge
push
add
js,pt
xchg
and
sub
xchg
pop
les
test
jb
lahf
fcmovu
aas
cmp
push
jg
shll
xor
loope
xor
cltd
mov
mov
xor
ret
mov
nop
js
sbb
xchg
cwtd
divl
les
arpl
mov
pusha
lret
fwait
loop
fnsave
sbb
mov
inc
xchg
repnz
sub
mov
and
je
add
mov
mov
sti
pop
shrl
loop
dec
pop
js
jne
and
xchg
in
loopne
mov
jge
addr16
imul
in
cmp
pop
mov
mov
test
add
xor
sbb
jp
ljmp
shll
xchg
sbb
test
cmpsb
push
or
lret
add
arpl
sub
ljmp
mov
mov
sbbl
jno
adc
movsb
jecxz
mov
shrb
shlb
pop
adc
dec
bound
mov
fstl
push
xor
clc
movsb
fdivrl
jge
cmpsl
mov
dec
loope
dec
mov
jle
popf
inc
push
or
lods
add
addr16
jmpw
adc
insl
enter
dec
push
outsl
aam
jbe
out
jl
cmpb
pop
out
push
int
pop
cmp
stc
in
cmp
cwtl
or
push
jns
mov
dec
adc
pop
in
sbb
jmp
or
jo
pop
push
adc
push
xchg
and
sbbb
sub
lods
iret
fstpt
mov
mov
push
mov
std
bound
fwait
dec
fcos
testb
add
sub
xchg
mov
cmp
jmp
test
fbld
and
loop
cli
cld
sbb
cmp
lods
fwait
pop
or
lods
cmp
sub
pop
jl
adcb
sbb
pop
repnz
pop
arpl
push
cmp
leave
mov
int3
imul
cmp
dec
xor
adc
lock
loopne
sarb
in
nop
cld
orb
pusha
sub
cmp
dec
xor
adc
lock
loopne
sarb
in
nop
cld
orb
pusha
sub
cmp
dec
xor
adc
lock
loopne
sarb
in
xchg
incb
push
cmp
dec
xor
adc
shlb
dec
push
sarb
adc
add
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
dec
mov
cld
loope
pop
cld
dec
loop
jo
int3
cld
sbb
or
jl
insb
mov
fsubrs
lock
mov
in
mov
or
push
jge
or
cmp
insb
mov
add
pop
jl
in
pop
loop
mov
ret
add
xor
lahf
je
imul
shrb
pushf
cmp
or
sbb
mov
adc
les
pop
inc
inc
push
sbbl
out
insl
sbb
or
shrb
inc
pop
lret
lods
cltd
movsb
lock
subl
adc
jmp
jb
jg
add
stos
call
or
push
insb
mov
mov
pusha
lods
les
pusha
in
sub
push
and
int3
jecxz
adc
cwtl
stc
repnz
fs
iret
inc
jns
xchg
mov
or
add
sbb
mov
dec
fdivrl
ljmp
popf
inc
arpl
xor
popf
pop
jb
add
mov
paddsb
xchg
xchg
xor
icebp
lods
aas
inc
pop
mov
out
cli
mov
xchg
cmp
push
cli
push
cmp
cmp
xor
inc
outsb
mov
fidivrs
hlt
jb
pop
adcb
int3
jns
stos
jg
jns
imul
icebp
sub
cmp
xchg
inc
mov
sub
jo
mov
sbb
je
add
in
or
cmp
sbb
aas
scas
dec
in
cmp
or
sbb
in
sub
sbb
or
jl
insb
mov
mov
dec
mov
in
cmp
or
sbb
in
sub
sbb
or
jl
insb
mov
mov
out
dec
jo
mov
pop
mov
outsb
push
push
sub
xchg
jg
daa
jbe
into
mov
and
push
mov
dec
test
jg
cmpsl
ja
mov
mov
inc
fldt
jmp
mov
pop
aaa
mov
fstps
enter
pushf
mov
mov
and
hlt
vsqrtss
lcall
jl
jmp
pop
dec
sbb
cmp
pushl
sub
mov
daa
movsb
jne
xor
jl
sti
stc
dec
outsl
lret
and
repz
lret
test
and
sbb
mov
add
mov
div
adc
fisubrs
popa
loop
in
mov
or
pop
ljmp
sbb
imul
sub
lods
sub
mov
scas
stos
cmpsl
scas
pop
pusha
or
lock
xor
sbb
dec
loop
adc
les
daa
push
mov
push
dec
aam
inc
xchg
sbb
test
inc
inc
sub
mov
cmp
xchg
loope
movsb
pop
pop
fiadds
fistps
aam
test
sbb
xor
sbb
pop
lcall
rorl
jl
cltd
pop
cli
test
lret
cmp
addb
mov
xlat
add
stos
lods
mov
into
ret
jae
mov
cmp
xlat
cmpsl
js
fs
pop
or
pusha
xchg
insb
dec
arpl
lods
xor
out
and
jmp
pop
mov
push
jb
push
cmc
push
mov
das
int3
out
adc
jle
es
push
das
jb
rcr
mov
iret
aam
stos
dec
stos
lahf
push
xchg
sbb
and
cmp
insl
mov
xchg
movsl
inc
jecxz
aam
mov
mov
shll
insl
sub
inc
les
xchg
add
loopne
jecxz
add
movsb
push
cmp
in
jae
ss
je
js
add
lret
cmpxchg
add
rolb
ret
mov
mov
add
mov
addr16
and
push
sub
sub
je
leave
cmc
push
mov
cltd
mov
je
adc
ja
mov
mov
aam
fsub
cld
mov
loope
popa
jne
fwait
aad
adc
js
and
int3
or
out
jnp
fstpt
lods
popf
mov
test
xchg
orb
sbb
inc
test
imul
hlt
daa
je
mov
or
push
and
or
faddl
mov
pop
sbb
jns
sti
xor
lea
icebp
mov
pop
jo
inc
fiadds
ffreep
testl
andb
jne
cmp
and
mov
hlt
lock
mov
sub
dec
std
xor
add
ss
pushf
or
xchg
cld
cmp
pusha
mov
popa
and
sbb
jnp
incl
lcall
cmp
rcrb
mulb
clc
adc
out
cs
mov
xchg
xchg
and
data16
call
push
jg
push
sti
jo
faddl
jp
arpl
mov
xchg
fsubr
clc
or
bound
stos
aaa
sbb
or
cmp
in
test
cmp
mov
mov
cmpb
adc
mov
imul
mov
pop
adc
mov
pop
popa
push
jge
mov
mov
clc
jnp
add
cwtl
push
mov
sub
xchg
push
sub
xor
dec
xchg
mov
test
lcall
jb
ljmp
test
out
fisubs
rorb
int3
and
jb
or
and
call
orb
je
xlat
in
or
pop
fsubrs
shlb
jmp
or
movsb
mov
jno
inc
in
ss
adc
dec
jae
call
mov
insb
addr16
xor
scas
into
jae
push
xor
out
shlb
pop
pop
shll
adc
jbe
cmp
jnp
adc
sbb
inc
xor
mov
or
lret
xor
or
inc
push
iret
mov
cmpl
jnp
or
orl
dec
jbe
jle
jae
or
mov
and
push
test
adc
push
jo
sarb
pop
xchg
and
out
sbb
sub
add
xchg
and
push
aaa
sti
jno
outsl
lea
pop
cmc
sub
mov
psubsw
add
lea
sti
add
jmp
xor
cltd
into
loope
pop
popf
adc
imul
push
sub
push
call
shrb
lret
push
clc
lret
scas
int
cs
scas
cmp
out
mov
hlt
cmp
jmp
scas
cmp
lods
pop
sti
adc
repnz
int3
xchg
mov
fwait
jmp
jecxz
cmpsb
aam
push
inc
faddl
fsubrl
mov
mov
xor
pop
in
std
push
jae
jo
out
pusha
xchg
and
inc
inc
loopne
outsb
xor
or
faddp
cli
push
pop
and
push
push
xchg
and
jb
sub
sti
jbe
leave
jo
mov
xor
imull
push
arpl
icebp
mov
xor
cmpsb
jg
sti
es
lea
cs
jle
xchg
push
insl
xor
and
jbe
shlb
cltd
out
xlat
push
add
jnp
push
push
pmulhw
mov
wrmsr
mov
cltd
sub
mov
inc
sti
outsb
xchg
or
stos
mov
aaa
in
cs
sbb
xor
mov
cwtl
mov
inc
aaa
ss
in
sbb
data16
push
adc
mov
push
repnz
popf
ja
mov
sbb
mov
sub
out
mov
or
push
lret
lds
test
jb
dec
mov
lret
jae
imul
and
mov
mov
xchg
adc
xchg
lds
sub
lods
rcrl
enter
jb
inc
adc
mov
lds
adc
mov
pop
push
cld
out
sub
je
inc
sub
jbe
test
adc
add
out
pop
bound
sbb
or
dec
push
adc
add
jmp
les
arpl
pop
orb
adc
pop
push
popf
out
sbb
ret
sbb
pop
fsts
push
test
test
pop
aas
mov
push
pop
test
jge
imul
es
mov
lods
call
adc
stos
sub
xchg
stos
xchg
jb
nop
sbb
mov
sbb
inc
mov
xor
imul
idiv
dec
lods
xor
imul
inc
lods
pop
jae
fwait
cwtl
test
sub
add
inc
or
jle
dec
out
mov
add
hlt
jp
mull
sar
mov
std
mov
popa
adc
out
je
rclb
and
ss
addl
sbb
push
lcall
xchg
jecxz
xchg
jp
sub
es
pop
dec
and
add
sub
lods
jns
xor
insl
inc
mov
fdivrl
push
push
inc
mov
push
test
jecxz
xchg
sbbl
dec
ret
cltd
adc
dec
ljmp
mov
lahf
mov
aad
cmc
scas
xor
fwait
jg
test
lods
mov
cli
out
test
dec
xor
cli
jg
jmp
out
out
test
loopne
cld
scas
nop
mov
test
jnp
sub
in
pop
inc
clc
lcall
pusha
sub
mov
leave
mov
push
cmpb
sahf
out
ds
adc
shlb
or
push
add
push
and
jbe
mov
out
daa
add
lcall
and
out
gs
bound
jge
out
lahf
add
mov
push
lret
or
ficomps
inc
outsl
add
dec
xchg
dec
and
fbstp
rcrb
lret
out
shrl
dec
roll
std
push
dec
push
push
cmp
xor
mov
cltd
or
and
pushf
push
stc
pop
or
inc
jp
arpl
hlt
dec
push
mov
sub
stos
dec
pop
mov
dec
ds
outsl
pop
dec
cmp
inc
and
or
adc
clc
scas
negl
inc
push
lret
nop
and
cld
mov
pushl
cmpsl
dec
mov
lret
cltd
mov
popa
add
pushf
xchg
psubb
and
cmpsb
leave
pop
push
xchg
add
imulb
xor
cmpsb
loop
xor
inc
orb
pop
dec
stos
insb
cmp
sub
nop
aad
push
sub
dec
mov
inc
sar
mov
cmp
adc
pop
ret
and
sbb
or
and
mov
frstor
jne
outsb
loopne
mov
push
cmpsb
pop
idiv
ja
test
inc
pop
arpl
push
fildll
fwait
imul
fstl
mov
pop
sub
xchg
outsl
cmc
xor
ja
insl
mov
nop
stos
addl
fiaddl
xchg
imul
outsb
and
sub
cli
add
test
sbb
mov
repnz
cmp
imul
add
push
jge
imul
jbe
leave
frstor
es
push
jl
and
add
pop
insb
mov
int3
mov
ret
sub
cmp
shlb
nop
lds
pop
xor
insl
outsb
mov
add
pop
mov
inc
jmp
inc
fld
in
jae
dec
pusha
ret
pop
ret
mov
xor
scas
dec
xor
mov
movsl
mov
clc
xchg
jne
stos
jge
in
mov
shll
inc
subl
inc
addr16
add
insb
mov
adcb
stos
inc
and
test
cld
push
mov
inc
movswl
pop
aad
pop
sbb
add
mov
stos
popf
into
mov
out
out
enter
cmp
gs
outsb
cli
add
insl
lahf
push
sbb
push
imul
inc
dec
add
repz
aam
cmp
pop
mov
fmull
push
leave
mov
add
mov
into
jo
jnp
xor
lock
lods
and
or
int
bound
mov
xchg
pop
fbld
adc
and
insb
aam
and
stos
aam
pop
cld
inc
pop
cltd
les
mov
fbstp
xlat
jbe
ds
mov
out
movsb
gs
add
cmpb
push
loope
xor
sub
pop
sub
out
aam
push
sub
les
sbb
fsubrs
mov
aaa
cmp
xor
adc
test
scas
xor
add
jle
adc
cmp
gs
leave
hlt
fwait
das
pop
je
sbb
fcoml
pop
mov
cmp
mov
std
push
mov
and
xchg
mov
popa
sarl
mov
stc
mov
push
add
int
xor
fisubs
stos
mov
js
dec
fiaddl
adc
dec
xchg
inc
mov
pop
jl
push
ret
imul
movsl
adc
outsl
xor
jbe
xchg
das
inc
jno
addr16
movsb
call
stos
and
cltd
mov
cli
fsts
in
dec
push
iret
dec
fstps
and
dec
popl
pop
test
popa
mov
test
cmp
imul
push
cmp
jo
clc
xchg
aas
ja
lahf
fisttps
jae
add
int3
cmp
jb
stos
cmp
push
lret
ss
scas
cmpl
push
mov
aas
xchg
out
xchg
mov
and
repnz
lahf
pop
sti
add
in
pushf
dec
outsb
sti
ja
cmp
into
cmp
jnp
and
pop
mov
push
inc
xor
int
sahf
xor
mov
adc
outsl
mov
jp
fs
adc
kxorb
and
dec
mov
punpckhbw
ss
xchg
dec
push
jo
sub
mov
xchg
imul
push
bound
push
jno
jne
push
lcall
dec
js
popf
xchg
imul
rclb
aam
lret
fistpll
bound
sub
subb
stos
ds
pop
cmp
enter
pop
out
adc
or
inc
inc
stos
dec
leave
pop
sub
cmc
fildll
arpl
fnstsw
loop
cmp
outsl
loopne
data16
push
repz
xchg
mov
or
adc
es
jbe
les
movsb
ret
pop
push
dec
icebp
mov
ljmp
insb
stos
jnp
in
cmp
inc
stos
sar
xor
insl
das
aad
arpl
fsubrl
jle
aam
rcrl
lods
das
push
ficomps
push
xor
sbb
jle
cmp
imul
movsb
jns
pop
in
or
xchg
add
pop
insl
inc
dec
shrb
jnp
push
jge
dec
push
xor
sub
int
cltd
adc
sbb
ret
mov
inc
jns
ljmp
mov
mov
ljmp
sub
shr
das
sti
ja
mov
mov
shrb
mov
or
mov
stos
sbb
gs
pop
int
das
xchg
movq
in
lods
shll
cmp
push
scas
xor
aaa
cmp
push
aam
xchg
arpl
aas
in
sub
push
jle
xor
aam
and
sahf
loope
in
cltd
jl
jbe
bound
adc
jge
fldl
notb
inc
daa
mov
and
mov
fisubs
pop
mov
mov
sti
lcall
sbb
adc
out
cmp
pop
pop
sbb
mov
dec
pop
in
jecxz
or
mov
das
daa
inc
shl
lcall
jns
scas
clc
mov
xchg
in
pop
push
cmc
mov
movsb
cmp
sar
jmp
push
xchg
mov
and
inc
adc
dec
or
push
adc
adc
test
dec
push
inc
incl
mov
mov
sbb
push
out
imul
inc
adc
sahf
rorb
cltd
cmp
das
sarb
mov
push
scas
movb
ret
inc
popf
jne
call
lds
leave
dec
adc
push
out
push
scas
cmp
aam
pop
mov
test
jp
cmpsb
jecxz
out
dec
mov
xor
add
add
cmpsl
aaa
jecxz
ja
sub
pop
shlb
lcall
xchg
xor
add
lret
add
push
mov
scas
stos
repz
xchg
shr
lods
sub
or
js
out
addr16
sbb
loopne
mov
or
imul
lret
dec
push
jp
outsl
bound
adcw
pop
and
inc
cmp
dec
push
jnp
jmp
cwtl
popa
aam
repz
pop
dec
pushf
scas
insb
adc
inc
and
pop
ljmp
pop
stos
popa
add
sar
je
push
js
pushf
test
inc
lock
fs
push
lea
push
push
outsb
push
rcrl
mov
jmp
pop
mov
hlt
loop
aaa
sbb
mov
add
pop
xchg
xor
in
push
or
lret
pop
cmp
adc
lds
dec
testl
loope
push
cltd
dec
xor
add
ja
sub
xor
or
xchg
cltd
cmp
jb
xor
mov
sarb
fadds
sub
lea
dec
in
sub
xchg
test
out
or
call
push
scas
pop
add
stos
cli
loop
test
and
call
arpl
inc
orb
js
fimull
dec
jns
lret
adc
jecxz
lock
push
jge
in
jle
or
dec
cltd
and
xor
fsubl
fists
inc
ss
aad
fisubrs
loop
insl
or
icebp
push
dec
scas
cs
lds
and
popf
aad
xchg
mov
hlt
or
inc
bound
sbb
std
nop
inc
mov
ret
sbb
rclb
jle
add
push
cmp
lret
decb
inc
dec
sub
cld
mov
dec
lahf
and
shr
sti
dec
xor
sub
nop
add
xchg
fcompl
int
jge
xor
ret
ja
mov
sub
dec
mov
test
int
mov
rorl
pushw
insb
pop
in
invd
push
push
xchg
rcl
push
lret
pop
cmp
cmp
push
inc
pusha
sbbb
addr16
cmpsb
and
pop
in
outsl
mov
jns
ret
enter
scas
xchg
sub
xchg
shr
data16
and
push
dec
xchg
and
rol
dec
ja
es
add
arpl
push
ljmp
bound
lret
dec
inc
jle
cltd
sub
dec
xor
jb
and
cltd
mov
and
mov
je
call
cmp
testb
push
mov
and
lret
push
and
pop
or
xor
fdivs
adc
push
pop
call
xchg
les
or
jae
aaa
push
stos
loope
jmp
js
ret
or
push
jae
dec
addr16
xor
and
mov
insb
bound
rorl
or
jecxz
push
jno
xor
and
dec
sbb
cmc
mov
lret
jl
aas
iret
clc
loop
test
xor
lods
fists
pop
aas
mov
repz
hlt
and
push
adc
repz
add
repz
xor
pop
fwait
dec
xchg
notb
mov
cltd
cmp
push
cmp
mov
sahf
cmp
mov
in
iret
dec
incl
sbb
ljmp
push
insl
xchg
fildll
add
sbb
pop
add
imul
test
cmp
xchg
fdivs
aad
sbb
sarb
lods
in
jmp
push
sub
dec
mov
and
and
xchg
sub
xchg
sbb
xchg
repnz
repz
imull
jp
xchg
mov
mov
inc
cli
mov
je
rcl
and
xchg
roll
mov
jecxz
je
movsb
jns
add
xlat
cmp
testl
xchg
popf
inc
and
inc
movsb
inc
out
mov
mov
subb
icebp
inc
scas
xlat
mov
pop
out
pop
fcompl
or
lea
xor
and
and
sub
leave
mov
and
clc
pop
dec
push
pop
fwait
insl
insb
xlat
add
dec
xchg
push
outsb
dec
sahf
imul
repz
out
add
inc
mov
jp
lods
cs
or
nop
jno
pusha
xchg
xchg
jmp
cmp
rcr
mov
pop
mov
inc
jae
cltd
test
mov
out
fisubrs
mov
repz
int3
rol
mov
sub
sahf
insl
scas
sbb
cwtl
mov
pop
fists
jp
int
frstor
xchg
sbb
stc
pushf
cltd
in
aaa
movsb
enter
rolb
aas
repnz
xchg
aaa
les
leave
insl
pushf
xlat
sbb
in
pop
jp
or
outsb
mov
shll
push
xchg
mov
and
sbb
jl
sbbl
inc
fists
stos
iret
dec
push
sub
push
pushf
mov
pop
daa
mov
out
adc
pusha
xor
jnp
movsl
nop
dec
shrl
and
and
pop
in
dec
inc
jns
mov
mov
mov
into
fcmovbe
nop
push
jbe
inc
out
and
aas
lods
cli
jmp
out
adc
ret
mov
movsl
fld
push
jle
cli
pop
mov
mov
sub
jle
pop
add
add
and
adc
fisubrl
enter
ss
fnstenv
push
stos
and
push
and
ss
leave
xorb
ja
es
mov
jae
pop
sub
call
scas
mov
dec
nop
push
pop
int
adc
movsl
jecxz
test
inc
addr16
repnz
ljmp
test
push
cmc
cld
cwtl
mov
jg
in
and
pop
test
sbb
pusha
loope
mov
addr16
and
inc
xchg
mov
xor
shlb
or
loope
hlt
sarl
cltd
cmp
mov
loopne
sub
stos
adc
popa
bnd
push
cld
inc
jle
sti
pop
je
sbb
dec
push
in
pusha
out
inc
stc
ja
jb
jo
ds
or
cmp
icebp
lret
and
pop
pushf
int
and
fsub
fsubl
std
call
mov
sbbb
lea
push
inc
fsubs
mov
sarl
pop
xchg
subl
mov
xor
and
test
xchg
jge
hlt
paddsw
or
mov
xchg
aaa
mov
sahf
xor
push
rorb
adc
out
xlat
cwtl
sub
int
gs
aaa
loop
add
jl
and
fmull
sbb
in
sub
sbb
or
jl
insb
mov
mov
dec
mov
in
cmp
or
sbb
in
sub
sbb
or
jl
insb
mov
mov
xor
pop
insb
sub
xchg
fmull
sbb
xor
cld
in
int3
or
jl
jl
pop
lods
movsb
pushf
test
lock
dec
lods
pop
cld
sub
cmp
mov
adc
push
mov
or
or
inc
mov
jbe
and
push
stc
inc
xchg
lock
fnsave
aam
sbb
pop
jmp
or
sbb
xchg
cmp
jmp
xor
sub
repnz
loop
fidivrl
or
adcb
pop
movsb
outsl
enter
add
push
sbb
dec
repnz
mov
loope
les
dec
out
ss
and
cmp
mov
sbb
shrb
scas
insb
insl
or
lds
mov
fldenv
test
cmp
push
xchg
sub
mov
test
mov
cltd
sbb
cmp
or
add
call
pop
or
cmpsb
repnz
roll
pop
fiaddl
inc
mov
bound
data16
ja
add
xchg
test
decb
lahf
push
scas
cmp
in
shl
decb
xor
cli
fcomps
mov
rorl
fstps
add
popa
shrl
inc
add
add
test
ficompl
out
jle
call
jmp
xor
and
repnz
dec
mov
addr16
imul
scas
or
out
in
dec
mov
mov
xchg
cmp
mov
pop
out
jmp
xor
and
and
loopne,pn
clc
jo
jnp
xor
sbb
jp
jl
pop
idivl
mov
ds
and
repnz
loop
sarb
or
cmp
jmp
xor
add
pop
loop
sarb
or
cmp
inc
das
cmpsb
lods
lds
sub
mov
call
push
popf
push
mov
inc
lret
fs
jmp
lret
scas
repz
jge
aaa
outsl
enter
mov
sbb
push
rcrb
adc
xor
dec
clc
outsl
dec
insb
inc
pop
es
pop
gs
mull
ret
lods
cmp
fstps
or
lcall
pop
pop
pop
xchg
or
mov
jl
sub
daa
jg
cli
dec
je
fsubrp
leave
jp
xorb
popf
fnstcw
clc
fisubl
push
jne
dec
shrl
sbb
aam
mov
push
cmp
inc
imul
sub
int
cmp
out
mov
int3
mov
jae
cmc
dec
cltd
in
xchg
add
testl
jg
ja
fbld
push
test
hlt
rcl
outsb
cltd
cld
xchg
cld
lea
in
push
fadds
dec
sbb
sub
or
movsb
orb
stc
dec
in
inc
negl
popa
test
int
xchg
push
mov
jae
pop
divb
xor
adcb
or
mov
sbb
jno
push
aas
out
icebp
sbb
push
jmp
mov
mov
lcall
jmp
mov
inc
sahf
seto
or
popa
sti
cli
daa
push
adcb
jg
rclb
push
lds
sarl
push
xchg
popf
sub
adc
push
loope
scas
inc
das
mov
pop
scas
cli
mov
mov
cmp
or
mov
leave
inc
ret
mov
movsl
adc
stos
push
shlb
icebp
add
mov
and
jb
mov
sbb
mov
scas
fwait
push
sahf
mov
push
lock
add
inc
and
cld
aas
xlat
mov
in
sbb
sub
lods
sbb
inc
pop
inc
jo
pop
inc
js
imull
pop
dec
inc
xchg
and
mov
dec
inc
and
and
adc
mov
sbb
mov
sahf
xor
sub
and
inc
push
pop
aaa
jns
and
in
popa
jmp
mov
mov
imul
ss
fdivs
leave
mov
outsl
xor
repnz
mov
pop
aam
loop
sti
int3
pusha
sub
mov
inc
pushf
add
lea
xchg
pop
sub
int
dec
mov
dec
insb
mov
sub
mov
mov
mov
sub
test
fs
popf
lock
cmp
movsb
mov
dec
imul
fistps
push
aaa
div
std
nop
xor
out
push
lret
pop
dec
movsl
in
jno
push
xor
lods
ret
fsubrs
lods
leave
sbb
pop
test
out
mulps
fdivrl
fdivrl
jbe
lea
imul
xchg
adc
xor
clc
lret
std
push
mov
cs
pop
shl
push
xor
cmp
cltd
cmp
mov
stc
xor
mov
jne
jmp
push
subb
into
lds
fiadds
daa
cs
xor
jnp
cmc
pusha
fimuls
inc
in
jo
pop
test
cmp
mov
loope
sbb
jp
mov
loope
mov
xor
mov
scas
mov
cwtl
sub
xchg
cmp
sub
cmp
notb
xchg
iret
mov
incl
dec
xor
movsl
out
imull
jl
push
cmp
mov
sahf
out
cmp
xchg
jle
cmc
mov
inc
pop
or
aaa
jbe
add
dec
jo
sub
mov
jp
pop
xchg
mov
loopne
shlb
sarb
insl
mov
stos
aad
sub
inc
xor
mov
ret
imul
call
xor
mov
jecxz
cs
xor
icebp
dec
sbb
mov
pop
imul
mov
sbb
pop
aaa
mov
push
aas
lock
movsl
sbb
insl
lea
insb
pop
adc
stc
and
inc
or
adc
out
cmp
cmp
incl
jge
mov
jb
adc
adc
dec
cli
sbb
add
sbb
jle
dec
push
fisubrs
mov
out
or
out
mov
out
stos
pop
aam
push
pop
cmp
sbb
cli
mov
in
mov
les
aam
dec
shlb
mov
dec
push
jle
rorl
add
xor
in
insl
inc
and
lea
mov
fwait
or
dec
popa
fucomi
icebp
mov
add
jge
adc
push
cmp
add
lea
jge
adc
mov
cmpb
andl
aad
add
mov
or
loopne
repz
or
out
pop
subl
ljmp
add
adc
xchg
and
aas
jnp
ds
sub
ret
push
or
dec
push
sar
int3
pop
ficomps
mov
jle
mov
xchg
sahf
stos
push
jbe
lret
cld
stos
sti
mov
mov
test
mov
cmp
repz
idivl
enter
lds
add
mov
and
adc
xchg
rcr
bound
jae
pusha
add
mov
cli
imul
pop
xchg
push
add
sbbl
sbb
inc
sub
js
pop
mov
push
scas
jl
inc
sbb
jmp
test
push
les
xorl
mov
aaa
mov
mov
outsb
cmpsl
ja
add
adc
aam
test
add
loop
adc
cltd
xchg
or
sub
aaa
lods
cmpb
shll
ljmp
jbe
ljmp
xor
adc
xchg
add
lahf
sbb
and
sub
jae
outsb
push
imul
sbb
xchg
outsl
jp
in
ffreep
sub
xchg
addr16
inc
stos
jle
pushf
pop
add
outsb
testl
test
enter
jp
imul
mov
lea
gs
mov
mov
push
nop
inc
rclb
cs
xchg
inc
push
fmulp
push
cwtl
popa
inc
fwait
aas
in
cmpsb
lods
xlat
cmp
mov
jnp
xchg
in
sub
mov
mov
lahf
rcrl
mov
cmpsb
pop
xor
rorb
and
nop
adc
sbb
lea
and
stos
ret
movsl
mov
cmp
lock
fcoms
mov
jae
fs
pop
cmp
dec
mov
and
sub
test
xlat
mov
add
dec
mov
shrl
mov
je
jmpw
outsl
pop
es
push
jle
out
ljmp
push
mov
cltd
cmp
pop
mov
lods
insb
iret
mov
ljmp
mov
jne
hlt
sti
bound
sub
mov
scas
lods
jbe
inc
inc
add
sub
jg
popf
jae
lods
jno
lods
sub
mov
cmpsl
jmp
rcrl
popa
iret
aad
shrl
fcmovu
test
fnstcw
adc
ror
mov
loope
inc
negl
and
pop
add
repnz
movsb
cltd
nop
mov
pop
fdivs
mov
push
lcall
leave
dec
xor
movsb
incl
rcrl
xchg
add
and
inc
cmpsl
inc
je
shll
xchg
fucomi
leave
push
cs
cltd
repnz
mov
out
mov
push
add
loope
push
sbb
int3
dec
scas
lcall
movsl
nop
lahf
imul
pop
push
std
das
imul
jnp
jp,pt
repnz
icebp
mov
mov
in
ss
mov
or
bound
and
sbb
lcall
inc
sti
xchg
hlt
xor
ljmp
mov
jb
fisttpll
scas
jle
inc
push
xor
fwait
cmp
jmp
xchg
jg
cmp
sarl
lock
idiv
xchg
popf
mov
ret
sbbl
push
sub
jae
add
int
push
ffree
test
jb
je
les
push
pusha
scas
jae
cmc
mov
stos
sbb
mov
sbb
pop
cmp
mov
movsb
push
scas
fisubl
test
or
adc
adc
cld
pushf
and
call
xchg
dec
mov
repnz
push
pop
adc
out
iret
subl
es
cmp
pop
pop
xchg
lret
mov
out
or
mov
jno
and
sbb
sbb
cld
addr16
std
sub
push
mov
jb
mov
push
jnp
inc
popa
mov
sti
jecxz
push
fistpl
jle
addr16
dec
push
ret
and
loope
push
pop
rcll
mov
loope
mov
fsqrt
pop
ret
pop
je
push
leave
mov
add
jge
enter
xorb
fmuls
ds
cmp
int
lcall
cld
clc
push
pop
or
enter
es
ret
pop
bound
loopne
add
mov
bound
ljmp
out
and
mov
cmp
xor
push
popa
cmp
xchg
in
ja
adc
movsl
xchg
aas
mov
push
mov
es
clc
aam
inc
es
sbbb
iret
cmpsb
mov
pushl
sub
xchg
dec
out
fildl
inc
stos
adc
jp
push
push
out
bnd
xchg
pop
push
into
rcrb
bound
pop
int3
dec
jne
out
dec
inc
or
sbb
xchg
stos
das
jle
fstpl
pop
enter
mov
sbb
dec
cmp
dec
ljmp
cmp
inc
shlb
mov
sbb
cmpsb
xlat
rcr
jmp
push
lock
mov
outsb
or
outsl
pop
lds
sahf
sub
sbb
mov
lret
dec
call
daa
inc
xor
out
jge
imul
or
and
cmc
inc
rcll
xlat
xor
dec
pop
les
pop
adc
sti
les
es
movsb
fwait
cltd
xor
jae
pop
mov
bound
pop
icebp
mov
rcrl
mov
insl
aaa
and
fs
shll
fs
mov
push
sub
not
mov
jne
mov
cmp
testb
in
mov
and
inc
aaa
lods
xor
test
div
and
gs
pop
mov
and
sarb
and
bound
les
sbb
loope
sub
sarl
movsb
pop
mov
mov
hlt
push
cmp
cli
int
jle
push
adc
pop
mov
mov
ljmp
xor
rcl
lret
adc
mov
lahf
mov
and
push
iret
sbb
mov
cmpb
cli
mov
lahf
ret
mov
jl
in
mov
add
pushf
in
incb
lds
jmp
dec
dec
push
repnz
push
or
push
fs
add
and
and
mov
lds
adc
sub
mov
int
push
add
lahf
or
sbb
imul
imul
push
push
inc
jo
mov
emms
jns
std
sub
xor
or
add
mov
and
inc
enter
sbb
and
xchg
add
mov
inc
jg
decl
mov
cmp
shlb
je
cmpb
lret
adc
pop
jmp
outsb
scas
sbb
mov
xchg
std
rcrb
mov
push
sahf
out
dec
icebp
sahf
imul
in
mov
dec
movsb
mov
rcrl
jne
mov
popa
inc
out
fsubl
mov
test
mov
xor
add
sbb
insb
pop
cmp
repz
fsubs
icebp
fwait
dec
enter
idivb
mov
or
adc
cli
lods
and
cmpsb
dec
fisttpl
inc
push
ja
data16
adc
shr
dec
ret
lahf
pusha
cwtl
iret
loop
inc
dec
loope
push
or
pop
and
sub
leave
pusha
mov
aad
mov
sbb
add
or
fwait
jecxz,pn
imul
stc
sub
nop
dec
fisubl
sub
rcll
sti
xchg
movsb
jg
xchg
lods
cld
aas
inc
pop
scas
adc
or
cltd
mov
aaa
or
inc
jbe
and
in
lds
push
je
pop
ss
std
push
push
push
jg
push
sub
dec
mov
imul
pop
mov
jne
fcoml
push
fbstp
push
pushf
jmp
mov
jmp
notl
mov
cmpsb
jns
int
cmpsl
inc
sti
jnp
ss
dec
js
xlat
movsb
loope
adc
push
outsl
ss
and
pop
adc
xchg
iret
rclb
roll
ficomps
ret
pop
fcomps
imul
inc
push
testl
icebp
lods
dec
pop
stos
adc
adc
pop
mov
cmp
ja
lret
orl
jmp
icebp
sahf
in
cmpsb
stc
addr16
push
pop
lret
and
jne
and
out
fildl
in
test
or
test
xchg
movl
cmp
out
aaa
mov
fwait
mov
add
repz
jne
mov
dec
jg
lea
inc
jge
dec
xchg
fwait
jg
into
cs
adc
cmp
xchg
ss
xchg
ja
das
dec
mov
fdivl
mov
aad
mov
push
cmp
add
nop
aaa
mov
adc
aaa
cmp
stos
mov
push
lret
adc
cmc
outsl
dec
xchg
mov
popf
cwtl
popf
js
push
push
imul
test
and
sub
push
out
add
jmp
outsb
add
in
aam
fs
jl
lock
dec
lea
js
pop
ret
and
xor
outsl
fistl
fwait
sbb
jmp
push
subl
pop
and
neg
add
arpl
in
fisttpll
pop
lahf
push
shlb
jecxz
insb
das
sbb
imul
xor
nop
rorl
test
add
pop
add
inc
cwtl
js
xchg
testl
in
pop
push
sahf
and
jle
aad
outsb
xchg
cmpsb
cwtl
push
xor
inc
xchg
repz
lea
dec
loop
loopne
push
rorl
push
cmpl
enter
sbb
mov
xor
setbe
les
sarl
hlt
pop
insl
ljmp
nop
in
int
out
popa
adc
jl
inc
cmpsb
mov
push
sahf
sub
test
xchg
jae
fdivrs
add
movaps
stos
icebp
add
jns
enter
xchg
dec
mov
pop
dec
mov
cmp
cmpsb
cmp
inc
mov
ret
lds
or
xchg
inc
leave
dec
fcomps
mov
pop
pop
fistps
test
inc
cld
sbb
dec
xor
sub
cmp
inc
dec
hlt
mov
lret
xor
adc
xor
sub
push
push
arpl
pop
lods
and
lds
xchg
stos
gs
push
loop
icebp
add
loope
adc
rcr
loopne
sbb
or
push
xor
js
push
xor
xchg
add
inc
rol
in
mov
mov
out
push
stos
mov
push
mov
sbb
ret
inc
cmpsl
pop
scas
loope
fcoms
dec
mov
data16
mov
fucomp
gs
xchg
jle
dec
sub
roll
sbb
add
lahf
xor
mov
adc
add
inc
into
fidivs
mov
mov
stos
rcl
call
fnsave
rorb
inc
mov
dec
out
sar
dec
fisubl
icebp
push
lds
or
mov
icebp
add
push
adc
mov
jecxz
mov
pop
negl
inc
jl
nop
cmp
add
inc
dec
movsb
pop
stos
mov
mov
mulb
fldcw
ret
loope
rorb
pop
mov
pop
mov
or
out
mov
cmp
and
jp
cld
push
xor
cmc
jo
or
pusha
stc
mov
and
roll
xchg
loopne
ret
pop
inc
stos
pop
testl
mov
ds
dec
cmp
mov
gs
hlt
adc
test
stc
out
call
mov
sahf
lods
lock
add
pop
outsl
cmp
dec
les
sub
loope
jns
or
or
aam
mov
mov
shrl
cmp
je
jb
scas
pop
ljmp
cmpl
lret
loop
xor
ficompl
rcll
jl
lods
in
inc
shr
in
jge
lcall
cmp
clc
xchg
dec
enter
cmpsb
cli
lret
and
xor
je
push
sub
pop
out
mov
imul
dec
aas
idivl
dec
mov
call
ret
add
icebp
and
clc
ss
lods
jbe
in
add
push
sbb
add
call
or
push
cmp
xchg
jbe
jle
lcall
scas
nop
cmc
pop
xor
idivl
cmp
and
sahf
sbb
and
divl
out
sbb
pusha
nop
rcrb
xlat
push
inc
mov
mov
scas
cmp
stos
inc
repnz
out
fwait
icebp
xchg
nop
sub
movsl
mov
cmc
push
adc
mov
enter
movsb
jae
sarl
out
dec
fistpll
jmp
xchg
xchg
mov
inc
or
cld
xchg
sbb
pusha
jae
xchg
add
fucomp
js
jbe
roll
add
and
scas
sar
xor
jb
push
push
insl
sub
cmp
xchg
dec
mov
dec
out
mov
out
popf
loopne
or
outsb
in
jmp
das
jle
mov
lock
jns
gs
dec
or
je
decb
aam
push
inc
adc
push
xlat
xor
and
out
pop
sbb
sbb
lea
stos
mov
outsl
lds
push
mov
ret
add
movsl
dec
rcll
cmp
mov
sub
insb
test
cmp
xchg
mov
stos
loopne
jbe
icebp
out
jb
outsl
adc
insb
add
pop
pushf
int3
mov
add
or
add
xchg
fisubl
jle
xchg
cmpsb
ja
and
stos
or
xlat
and
add
orl
sahf
push
cs
cmp
lcall
sbb
sbbl
pushf
fbstp
lods
insl
enter
int
mov
add
je
idivl
loopne
int
add
jne
jns
xchg
xchg
int3
mov
in
xor
icebp
es
loope
inc
out
jo
jbe
imul
pop
aas
in
mov
inc
jle
mov
wrmsr
pop
adc
dec
js
and
add
fcoml
or
aam
ret
outsl
lds
mov
jno
xchg
in
lahf
daa
popa
iret
push
mov
icebp
push
dec
mov
outsl
shl
sbb
faddl
inc
in
stc
jecxz
scas
mov
inc
pushf
mov
lock
sarb
or
xlat
cmpsb
testl
insb
and
mov
push
popf
and
cmp
hlt
or
sub
into
sarl
pop
and
fildll
xlat
jp
push
xchg
jg
out
fdivr
push
or
and
jae
and
mov
jbe
inc
lret
xchg
adc
subb
push
and
or
adc
jmp
jno
xor
mov
leave
jnp
jnp
std
stos
aas
jl
xchg
cltd
push
pushfw
sbb
sbb
jle
sub
sub
insb
cmp
dec
jecxz
es
dec
sbb
mov
int3
dec
add
sbb
divl
xchg
cmp
pop
aam
test
or
insb
dec
mov
rolb
dec
push
test
and
int
fmul
dec
jo
add
stc
test
dec
insb
in
rclb
sbb
insb
and
and
add
fstps
scas
lds
cld
decl
jbe
lret
push
mov
int3
je
cwtl
pushf
add
sub
stos
lcall
lds
mov
gs
xor
sub
inc
sarb
dec
jl
cwtl
or
or
inc
jg
test
dec
ds
push
rcll
sub
loope
lods
loop
std
push
dec
pop
in
mov
lods
lods
popa
rcrl
pop
lods
add
and
in
fnsave
push
js
jmp
daa
jge
cmpsl
lock
jge
adc
dec
stos
stos
lds
fisubl
mov
sahf
cmp
lds
popf
cmpsb
inc
xchg
push
aas
cmp
bound
lcall
xchg
mov
fcmovne
dec
iret
add
jo
mov
sbbb
xchg
inc
mov
pop
add
pop
push
push
push
push
fwait
inc
push
lret
arpl
aam
orl
pushf
cmpsl
mov
adc
movsb
repz
dec
and
inc
daa
jg
inc
mov
rcrl
loopne
loope
ja
add
push
jo
push
rcr
lret
enter
divb
mov
out
daa
xlat
xchg
xchg
inc
flds
and
jg
aad
jbe
cmpsl
cmp
inc
mov
das
mov
jg
sti
mov
mov
stos
movsb
mov
arpl
pop
or
mov
jbe
dec
mov
pop
lret
inc
push
push
aad
adc
scas
push
in
mov
cltd
and
repnz
loop
sarb
or
cmp
jmp
xor
add
pop
loop
sarb
or
cmp
stc
dec
stc
inc
mov
popf
dec
test
repz
out
sarb
or
or
xchg
cmc
xchg
roll
mov
mov
test
or
jns
jle
xchg
fcmovbe
ljmp
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
leave
ror
inc
mov
jns
and
pop
push
add
or
add
add
add
add
push
add
cmpsl
add
add
add
add
add
add
and
mov
add
add
add
add
pop
sub
and
add
pop
outsb
add
add
add
add
add
add
add
add
add
pop
stos
add
add
add
add
add
add
movl
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
stos
add
add
add
add
stc
add
xor
outsb
add
pop
add
or
add
clc
add
add
sub
dec
add
leave
add
movb
add
add
add
pop
int3
add
add
add
add
add
pop
add
add
add
cmp
mov
add
add
pusha
add
add
add
pop
dec
add
add
movb
add
add
add
pop
cmp
mov
or
add
add
add
and
jne
jbe
add
and
push
add
cmpsb
add
add
test
inc
add
nop
add
add
jg
xor
add
add
add
add
add
add
mov
add
cmp
xchg
add
adc
xor
mov
addl
nop
add
add
add
add
add
add
add
add
mov
add
add
addl
add
add
add
add
addl
xor
mov
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
sti
add
add
xor
add
add
and
xchg
add
xchg
add
and
jae
add
xchg
add
add
add
add
xor
jge
xlat
pop
dec
add
add
add
add
xchg
add
add
add
inc
add
add
add
add
add
add
add
dec
add
add
add
add
pop
test
ja
stc
add
add
mov
add
add
inc
add
xor
outsb
add
add
add
add
pop
out
add
add
add
add
addl
scas
add
mov
mov
and
add
add
add
add
add
add
add
add
xchg
add
add
sti
add
add
outsb
add
inc
add
pop
ljmp
add
pushf
add
xchg
add
add
and
mov
add
add
outsb
add
or
sub
add
dec
add
lret
add
add
add
adc
sti
add
push
add
inc
add
add
add
addl
imul
mov
and
jae
add
daa
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
loopne
and
pop
pop
mov
bound
sub
fst
jb
shrb
cmp
test
fistl
rorb
int3
push
inc
sub
xchg
leave
popa
outsb
pop
insl
sbb
cmc
gs
add
inc
sbb
hlt
lods
xchg
jl
mov
mov
aas
ret
test
addr16
hlt
aas
sbb
shll
mov
cmc
in
pop
sub
and
dec
inc
xor
adc
and
sub
scas
loope
and
add
ss
jge
cmp
adc
setnp
std
jo
rcll
test
ljmp
data16
and
mov
not
in
out
cmp
sub
sbb
pop
aam
jns
sub
bswap
push
cmp
insb
pop
cli
lret
ret
xor
push
dec
jg
mov
jge
sbbb
lods
scas
addb
flds
leave
cs
mov
mov
daa
out
repnz
call
mov
loope
cmpsl
jge
idivl
in
pushf
cli
adc
jecxz
int
jl
cs
dec
hlt
movl
int3
cltd
or
add
cmp
mov
test
in
clc
ret
pushf
push
lods
mov
sbb
in
jne
xchg
lea
inc
jns
dec
cmpsb
xor
sbb
xor
repnz
pop
loop
loope
adc
clc
sarb
sbb
cli
xchg
dec
dec
test
and
inc
in
pusha
push
push
leave
xchg
dec
scas
lods
test
sbb
push
outsb
add
add
loope
test
sbb
pop
add
test
sub
sbb
pop
or
ds
cmc
mov
add
sub
imul
and
dec
aam
dec
movsl
jb
mov
pop
pop
js
jbe
push
das
pop
shll
cmp
out
and
jae
cmpb
sahf
in
jne
pop
jb
dec
lds
add
jbe
insl
mov
lock
lcall
ret
add
addr16
lds
jnp
imul
test
dec
repz
sub
shll
mov
xchg
xchg
push
into
sbb
lods
lods
icebp
jae
push
outsl
mov
mov
pop
sahf
and
jno
push
aam
jle
sub
out
adc
outsl
sub
jnp
xchg
pop
aad
aaa
adc
js
sbb
mov
adc
jae
or
js
icebp
or
and
test
insl
je
stc
sub
xor
cmp
push
pop
push
pop
fcompl
rcrb
add
dec
mov
or
pushl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
