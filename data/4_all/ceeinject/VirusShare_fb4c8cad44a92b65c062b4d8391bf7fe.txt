call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
adc
pop
sbb
jle
adc
xor
and
ficoms
mov
scas
cli
mov
sbb
jle
push
dec
push
pop
cs
jp
mov
lcall
lahf
or
adc
jbe
and
push
pop
inc
ss
pusha
into
imul
mov
fnstsw
jae
pop
adc
sbb
add
adc
scas
adc
cli
and
cmpsb
push
mov
dec
push
rcrl
mov
loope
fsubp
div
pop
or
jb
mov
leave
popl
xor
daa
jne
pop
inc
sbb
pop
cmp
es
int3
mov
mov
fcmovu
fiaddl
jns
sahf
pop
dec
sbb
push
lcall
mov
out
dec
mov
and
scas
xor
ficompl
fisubs
movb
lcall
lahf
push
and
inc
add
and
repz
mov
xchg
mov
xor
ljmp
dec
adc
pop
or
push
dec
add
jae,pn
arpl
xchg
movb
rolb
sahf
cmp
sub
cmp
jae
sub
push
pop
mov
call
mov
ljmp
or
aas
jp
jo
inc
push
jnp
int3
repz
stos
fimuls
mov
xchg
jg
dec
jle
jbe
push
pop
cs
jp
mov
lcall
sahf
fisubrl
or
outsb
sub
push
dec
push
pop
cs
jp
mov
lcall
sahf
fisubrl
or
sub
ja
aas
xchg
xchg
loopne
lods
icebp
adc
leave
mov
mov
repz
nop
inc
dec
ficoml
xor
sub
mov
push
test
call
and
and
push
iret
sub
aas
aaa
shl
sbb
scas
inc
dec
mov
adcb
into
call
fists
xchg
sahf
cwtl
xchg
inc
test
pop
std
mov
add
xor
sbb
pushf
testb
xchg
inc
insb
cld
pop
mov
ret
push
mov
dec
rorl
pusha
sbb
push
push
sub
or
and
out
jl
iret
aas
adc
jmp
pop
jge
outsb
or
hlt
int
mov
cmp
mov
subl
and
xchg
fcmovbe
cmc
rcr
shl
aaa
push
mov
xor
dec
push
mov
add
fists
adc
mov
sbb
imull
fmulp
lahf
push
xchg
mov
lods
fisubs
push
cmp
lcall
cmp
movsl
test
orl
sub
ds
jp
and
and
dec
shlb
fistpll
jle
stos
and
cmp
jbe
and
orl
mov
xchg
mov
test
clc
cmp
repnz
mov
les
std
sbb
dec
cmpsb
sti
test
xchg
fiaddl
push
pop
aas
pop
or
iret
dec
push
mov
stos
call
inc
fmull
mov
xor
decl
xchg
test
mov
xor
inc
jg
sbb
cs
cs
adc
xabort
and
xor
mov
push
int
lcall
insb
cmp
dec
pop
repz
lea
dec
out
jl
sbb
arpl
dec
dec
xchg
adc
pop
fidivs
push
mov
aad
ficomps
sub
mov
cmpl
ds
push
sbb
adc
xchg
iret
jnp
enter
lods
push
sahf
cmp
inc
jnp
jne
or
xlat
add
sub
fcoml
jle
in
into
push
clc
out
inc
out
popa
mov
rcrl
dec
rolb
fidivrl
stos
mov
in
jle
rcll
loope
shlb
jae
test
jge
mov
mov
aaa
mov
adc
stc
push
jae
mov
push
inc
jae
arpl
pop
sub
andl
and
arpl
aam
clc
xchg
push
xor
ss
in
cltd
adc
aas
cmpsl
fcmovnbe
mov
rol
push
dec
outsl
lods
mov
int3
ficompl
xchg
dec
cmpsl
popf
push
mov
loop
movsl
out
divb
mov
pop
inc
divl
aaa
xchg
sbb
jae
sub
xor
test
fildll
daa
adc
xchg
lods
jl
mov
cmp
es
jge
js
pusha
lret
fcmovnb
cltd
ja
inc
ja
insb
push
loope
mov
icebp
fld
ss
inc
fstpl
push
pop
shrl
xchg
or
int
push
leave
in
fistl
insb
fistps
mov
jle
mov
lahf
or
push
out
sahf
cmp
mov
es
and
addr16
sbb
dec
int
int
inc
lock
mov
jne
repz
pop
push
cmp
dec
xor
nop
and
dec
sbb
repnz
sbb
addr16
shrl
jne
sarb
cmpsl
mov
cmp
ljmp
es
lods
nop
andl
movsl
fists
push
sbb
insb
gs
inc
lret
mov
dec
lods
xchg
xchg
mov
xchg
lret
bnd
jbe
flds
jg
jae
jp
sarb
add
shrl
add
lods
xor
lock
rclb
pop
fdivrs
enter
or
cmc
push
ss
fists
pop
or
fidivs
out
les
mov
xchg
cwtl
das
gs
out
mov
mov
mov
lret
cmp
and
or
inc
dec
test
inc
lcall
xchg
lods
imul
call
sub
mov
pop
cmp
repnz
aas
xchg
repz
and
lods
fs
ds
jp
stc
enter
pop
leave
shrl
mov
in
jne
pop
and
inc
popf
jae
and
test
mov
in
fucomp
std
mov
fbld
cmp
icebp
jns
cmpsl
push
aam
jns
xor
jae
repnz
jmp
shrb
dec
int3
out
clc
ror
jecxz
lret
xor
pop
or
xor
add
push
pop
xor
cmp
leave
stc
scas
inc
daa
scas
cmc
xor
adc
shll
fwait
popa
lds
fsts
fs
shll
and
lret
or
mov
adc
or
push
xlat
insb
jmp
add
leave
pushf
xor
xor
mov
mov
jne
cwtl
ficompl
hlt
shl
sbb
cmp
sahf
fsubs
call
addb
fldt
aas
fsubl
int
inc
pop
and
pop
pusha
xchg
lods
roll
add
jno
icebp
xchg
xchg
std
ljmp
cmp
mov
sub
push
xorl
pop
imul
cmpb
xor
and
or
insl
mov
mov
mov
inc
fcoms
mov
dec
leave
jg
hlt
and
sti
mov
push
stos
mov
outsl
imul
test
rol
dec
and
jnp
das
or
jecxz
loope
arpl
mov
std
and
xchg
xchg
mov
sub
ss
and
loopne
adc
sbb
fwait
cmp
pop
push
repz
sbb
ret
mov
dec
jecxz
sbb
bound
addr16
call
xchg
aam
xor
shr
movsb
or
into
adc
xchg
lods
cmp
sbb
dec
pop
pop
je
mov
mov
out
ret
xor
loop
mov
lret
aad
push
sahf
and
les
shl
cmpsb
in
ds
rcl
lcall
or
cmc
popf
int
lahf
icebp
lahf
adc
xchg
inc
and
cmpsb
fs
push
cwtl
stos
or
ljmp
pop
and
or
sbb
dec
cmp
inc
or
lret
push
cmp
lods
cmp
addr16
push
ljmp
jle
xor
cs
cmp
ss
daa
cld
lds
inc
pop
rolb
out
mov
divb
and
in
loop
jo
pusha
jno
out
mov
sahf
pop
sbb
out
mov
pop
rorb
sub
scas
rdmsr
mov
sahf
jno
icebp
cmp
ljmp
shlb
or
hlt
aas
inc
out
pop
or
push
frstor
es
dec
nop
add
mov
xchg
push
dec
or
in
stc
and
lret
mov
repnz
iret
pusha
push
xchg
adc
or
mov
xorb
xchg
adcl
addr16
ljmp
jle
push
cmp
dec
mov
dec
push
or
and
xor
xchg
inc
fdiv
xor
daa
adc
ret
leave
add
xchg
pop
push
stc
popf
push
and
pop
mov
mov
rcrb
xor
insb
xor
scas
cmp
scas
arpl
or
push
stos
orb
mov
js
stos
cmp
jne
lahf
or
rorb
inc
movsl
add
or
add
mov
arpl
popf
cmpsl
xor
mov
pop
dec
or
mov
adc
xor
sbbb
aam
fisttpll
adc
inc
fidivrs
addl
ja
adc
dec
icebp
loope
xchg
mov
roll
rolb
filds
pushf
and
scas
js
cltd
sub
jecxz
xor
jl
sbb
pop
sub
push
in
lods
push
stos
cltd
aam
es
pop
mov
mov
ret
xor
xlat
shll
add
push
mov
cltd
repnz
lock
rolb
xchg
pop
sbb
icebp
leave
lret
mov
shlb
daa
fisubrl
scas
icebp
push
test
mov
adc
mov
push
sbb
dec
sub
frstor
into
sub
jbe
xchg
popf
mov
loop
movsb
orb
outsl
lods
or
pop
mov
lcall
popl
insl
jge
xor
imul
arpl
mov
sub
pop
lret
das
aad
pop
mov
and
add
insb
gs
idivl
or
jne
sbb
mov
ds
in
mov
addr16
icebp
inc
movsb
adc
dec
sarl
jnp
sahf
cmp
fs
dec
movsl
lea
jo
cmp
ss
cmpsb
stc
loope
jne
or
mov
aas
mov
push
out
inc
mov
jae
xor
test
test
aad
pop
jmp
mov
fs
hlt
imul
inc
addl
stos
mov
iret
lea
cmc
jno
lock
mov
push
mov
xor
imul
out
lds
andb
sbb
rcll
adc
jp
cmp
movsl
sbb
jl
lods
std
pop
push
repnz
imul
outsb
jecxz
mov
cld
jle
enter
jecxz
das
push
pop
mov
sbb
add
xchg
hlt
data16
lods
pop
mov
push
mov
jne
int3
add
jg
rcrl
dec
jecxz
dec
mov
jge
xor
pop
push
stc
je
adc
jae
icebp
insl
xchg
loope
jae
add
rclb
rclb
xor
ds
push
dec
gs
adc
and
mov
sub
jl
stc
ja
add
or
mov
adc
nop
xchg
sub
fisubrl
adc
jl
ja
or
inc
pop
sti
push
dec
xor
lahf
fsub
or
in
mov
pop
fs
mov
add
popa
adc
iret
jg
jmp
jle
xor
xor
std
or
add
mov
jg
imul
push
sti
ret
mov
push
pop
inc
dec
lahf
sub
ljmp
push
cmp
xchg
add
das
mov
cwtl
mov
jecxz
pop
loopne
push
xchg
push
in
and
xor
add
test
push
mov
adc
mov
loop
dec
xor
int3
bswap
lahf
rclb
arpl
push
add
sub
clc
sar
sub
mov
lret
mov
inc
adc
es
inc
mov
or
popa
mov
movsb
push
filds
cmpsb
test
lds
incl
cld
out
je
int3
cmp
push
fnsave
fisubl
popa
int3
xor
add
mov
incl
add
xor
enter
shl
out
stc
and
nop
pusha
jns,pn
push
pop
sti
mov
mov
pop
add
push
pop
outsb
mov
fadds
push
incl
mov
add
push
fadd
adc
shlb
cs
mov
loope
and
lock
fsubrs
or
mov
jne
dec
gs
rcrl
add
sbb
and
add
dec
adc
fists
dec
jmp
stos
pop
int3
inc
inc
mov
mov
popa
mov
cmp
cmpsl
cwtl
xor
hlt
xchg
push
imul
daa
xchg
notl
js
jbe
fildl
push
icebp
xchg
jmp
xchg
jae
enter
dec
dec
inc
arpl
pop
adc
push
loopne
decb
mov
dec
out
lods
add
pop
jle
inc
jns
sbb
outsl
iret
test
scas
sub
push
sub
xor
rclb
or
and
pop
pop
push
loop
dec
inc
fs
aas
outsl
xor
jmp
pop
push
repnz
pop
jle
stc
jge
inc
jae
lret
cmc
cwtl
sbbl
shlb
xchg
fdivl
rcll
outsl
cmc
inc
scas
push
mov
arpl
test
lahf
outsb
jle
testb
mov
subb
daa
gs
sub
nop
add
fwait
xor
mov
xor
jg
ja
mov
sub
fldenv
je
roll
push
sub
ss
outsl
lret
xor
inc
xlat
movsb
insl
enter
rcrl
cmp
push
sahf
mov
push
mov
out
lcall
mov
and
cmpsb
xor
hlt
pushf
xchg
in
test
mov
ds
adc
cmp
jg
mov
in
mov
push
mov
nop
add
fwait
xchg
mov
sbb
pop
test
pop
cli
ret
fiaddl
sbb
push
inc
mov
pop
pop
sbb
js
xchg
bound
sbb
in
lods
and
push
aaa
xor
sbb
repz
fadds
pop
insb
test
xchg
push
sub
ds
fstp
add
rorl
pop
jle
loope
ret
push
clc
cmpsb
jmp
aaa
sahf
sahf
arpl
or
mov
pop
ds
mov
push
cmp
inc
loope
lods
inc
fsub
add
je
daa
xor
pop
sar
mov
mov
out
inc
sarb
inc
xchg
lods
rclb
add
and
lahf
push
dec
lds
push
mov
add
fsubp
cmpsb
add
inc
out
sbb
ss
mov
pop
dec
cmpsb
test
sub
push
xor
and
push
inc
insl
xchg
sub
pop
sbb
push
lcall
jbe
xor
sarb
pop
std
and
divb
insl
js
mov
inc
jmp
add
repz
jbe
loopne
inc
aaa
lret
addb
mov
pop
pop
xchg
xchg
fcom
mov
cmp
mov
sub
pop
add
aas
sub
leave
xor
pop
js
test
icebp
push
shrb
cmp
int3
dec
movsl
pop
mov
pop
push
nop
jnp
shrl
or
xchg
rcll
inc
push
mov
aaa
or
scas
adc
jnp
pop
out
dec
iret
outsl
fdiv
sbb
or
hlt
mov
ss
pop
frstor
add
rcr
push
popf
lods
jle
jmp
fcmovbe
pop
ljmp
pop
push
pop
popf
push
movsl
cmp
xchg
sub
dec
ret
fcompl
lret
lret
test
inc
and
add
pop
in
xor
add
cld
out
inc
mov
sub
xlat
aaa
mov
mov
add
dec
jns
push
sub
or
cmp
xor
adc
push
sbb
in
ret
cltd
jmp
and
cmp
pushf
jb
cmp
mov
in
sarb
out
mov
push
int
stos
fcoml
out
andl
lds
mov
outsb
jecxz
mov
daa
in
mov
inc
jns
mov
icebp
dec
dec
divl
xchg
xchg
jge
bound
hlt
pop
bound
jns
in
xor
inc
adc
mov
adc
jl
sub
pop
inc
pop
in
mov
cld
lea
mov
lods
jmp
mov
in
cmp
stos
insb
or
jl
adc
enter
in
stc
mov
rclb
add
insl
sti
sub
popf
js
jmp
lcall
fimull
cmovge
fistpl
mov
adc
push
repz
sbb
fisttpll
leave
pop
int3
ja
les
orl
or
jns
push
xor
xchg
push
mov
stos
shll
scas
or
fs
and
dec
or
dec
lods
sub
test
mov
test
sti
das
jge
fisubrs
dec
shll
xchg
xchg
cmpsl
inc
xchg
ljmp
test
jne
fcoms
cli
xchg
or
mulb
fisttpll
sbb
in
xchg
mov
mov
xor
xor
pop
mov
push
cmpsb
mov
jp
and
mov
outsl
jbe
xor
add
pop
les
ltr
xchg
xchg
and
sbb
cmp
xchg
out
arpl
mov
cwtl
push
pop
mov
pop
aad
dec
mov
arpl
push
cmp
sub
cli
sbb
cmp
daa
test
dec
popa
xchg
sub
mov
sbbl
mov
cli
xor
stos
inc
loopne
test
fsubrs
xor
pop
rcll
jb
push
imul
jmp
mov
rclb
or
cld
inc
fistl
in
sub
sbb
testl
jo
scas
fs
cltd
push
enter
push
jle
or
cmp
push
and
fs
std
pop
mov
mov
cltd
ds
and
xchg
popf
fcmovu
js
cmp
push
mov
lret
shl
sub
mov
add
and
repz
test
xor
or
sbb
inc
fdiv
les
add
cltd
out
js
push
insb
call
xor
roll
xchg
jmp
test
shlb
push
fstl
cs
lret
lcall
pushf
fs
mov
loopne
adc
out
xchg
pop
jno
adc
aaa
gs
pop
pop
leave
add
or
shrb
adc
out
jmp
jp
inc
jne
jnp
mov
or
mov
ficomps
jnp
aas
icebp
popf
inc
lea
pop
jl
jle
les
test
ja
mov
mov
rcll
pop
loop
in
pop
jge
cltd
sub
mov
mov
inc
jb
sbb
cltd
mov
loope
xor
and
dec
shll
mov
sub
adc
imul
mov
out
sbb
xchg
and
mov
pop
and
push
xchg
add
cmpsb
hlt
stos
push
push
out
mov
sbb
mov
leave
and
shl
pushf
sbb
stc
or
dec
imulb
adcb
inc
add
xchg
mov
add
xchg
shll
insl
push
mov
cmc
mov
jge
dec
dec
data16
add
and
ret
sbb
movsb
mov
leave
psubb
mov
mov
adc
mov
mov
push
iret
mov
arpl
popa
aas
adc
dec
scas
fs
dec
add
bound
sbb
xor
daa
pusha
repnz
xor
or
cli
jns
cwtl
adc
inc
lods
or
and
fistl
imul
and
inc
push
daa
ret
ljmp
dec
push
xor
jecxz
and
mov
or
mov
add
fwait
jns
mov
sub
xor
mov
stos
mov
arpl
sbb
mov
mov
push
mov
adc
insl
scas
mov
es
mov
xchg
jae
xchg
movb
test
jg
test
and
xor
in
lds
sbb
mov
outsb
xor
jl
fcoml
jno
lahf
test
mov
inc
push
or
jo
rol
aam
and
outsl
adc
pop
ret
repnz
js
push
xor
cmp
sbb
stos
xchg
add
mov
sbb
pop
pop
scas
mov
or
in
lcall
divl
mov
mov
int
add
test
imul
pop
dec
pushf
adc
leave
add
and
fiadds
push
ss
sub
push
mov
push
jecxz
divl
ffreep
jg
mov
filds
icebp
pop
rcll
add
mov
push
sbb
add
adc
mov
jge
jecxz
je
test
jne
lcall
jne
cli
jecxz
ljmp
add
xchg
cld
mov
aam
insb
mov
cld
pop
cmp
xchg
mov
ja
and
notb
popa
dec
pop
test
sub
add
je
clc
sub
test
mov
loope
mov
cmp
xchg
inc
imul
bts
push
js
xchg
xchg
out
aas
pop
xchg
xchg
cltd
cmp
dec
sbb
rcl
mov
iret
cmp
and
jno
outsb
lods
and
ja
insl
xor
out
jle
sbb
xor
ss
outsb
popa
and
cmp
repz
idivb
movl
push
and
shlb
or
dec
shl
lods
sarb
jne
ja
mov
ret
insl
adc
inc
pop
or
adc
cmp
mov
fistpll
andb
ljmp
aad
ret
mov
popa
adc
dec
jp
fisubl
inc
add
cltd
xor
das
ret
enter
int
ret
add
aas
int3
adc
movb
dec
jp
pop
dec
xchg
inc
loop
cmpsb
clc
out
lret
lds
push
dec
push
pop
cs
jp
mov
lcall
sahf
fisubrl
or
outsb
sub
push
dec
push
pop
cs
jp
mov
lcall
sahf
fisubrl
or
outsb
sub
push
dec
push
pop
cs
jp
mov
lcall
lcall
or
pop
sub
push
dec
push
pop
scas
push
jp
mov
xor
int
inc
push
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
es
ss
insb
push
adc
jl
pop
dec
push
fsubr
int3
mov
xchg
xchg
pushf
out
idivb
dec
ss
insb
push
sbb
or
cmp
sub
fsubl
in
xchg
pushf
mov
pop
es
ss
insb
push
sbb
or
cmp
sub
fsubl
ret
mov
mov
adc
outsb
push
push
pop
inc
or
mov
xlat
fstpl
inc
push
ret
xor
mov
out
dec
in
mov
jne
mov
ss
aaa
dec
ficompl
loop
jno
imul
mov
es
cmp
sbb
add
lock
cmp
filds
neg
inc
insb
outsb
sbb
adc
cs
inc
sbb
sbb
ret
test
pop
fmull
add
jbe
out
or
cmp
push
push
fwait
cmpsl
out
pop
cmp
pop
xor
in
jns
xchg
adc
mov
mov
in
int
ret
dec
cmpsl
adc
test
movsl
mov
es
ss
insb
push
sbb
or
cmp
sub
fsubl
in
xchg
pushf
out
idivb
and
push
jo
inc
pop
pop
add
popf
mov
jecxz
loop
movsl
in
clc
mov
ds
sub
or
pop
or
cmp
sub
mov
aad
repz
mov
test
bound
jle
je
jae
dec
or
cmp
sub
fsubl
in
xchg
pushf
out
idivb
dec
ss
insb
push
sbb
or
cmp
sub
fsubl
in
xchg
pushf
out
idivb
jmp
aam
adc
adc
dec
mov
repz
jl
and
popa
jmp
mov
fucomi
dec
cld
mov
xor
jl
movsb
dec
add
xor
adc
or
sbb
mov
lds
adc
sti
stos
mov
enter
push
lods
fisttpll
scas
add
xor
imul
movsb
leave
mov
shll
pop
xchg
jle
mov
sbb
shrl
stos
mov
fcoms
add
push
pop
mov
pop
repz
dec
dec
push
or
mov
or
jne
dec
push
or
dec
xchg
pushf
mov
sbb
mov
mov
nop
cmpsb
sbb
sahf
cmp
ja
fcomip
int3
inc
in
popf
icebp
cmpsb
fs
cwtl
cltd
jmp
mov
popf
rsm
popf
mov
loope
jnp
mov
inc
cltd
push
cltd
or
xchg
iret
in
and
jmp
pop
mov
jnp
fwait
sbb
addr16
mov
pop
mov
push
fmuls
lahf
and
pop
mov
outsb
adc
insl
push
lock
mov
mov
adc
xchg
shll
add
sub
push
ret
adcl
cmp
rol
pusha
insl
jo,pn
int3
xchg
adc
inc
push
shll
test
sbb
fisttpll
add
in
mov
push
dec
repz
pop
dec
adc
daa
mov
insl
insb
pop
and
mov
sub
cmp
pusha
daa
iret
cld
fisubl
arpl
fs
dec
dec
or
cmp
cmpsb
out
xor
addr16
fwait
lods
lret
loopne
jp
cld
inc
clc
mov
int3
arpl
jb
xor
push
xor
cmp
out
jnp
sbb
push
enter
in
fsts
imul
daa
or
jmp
jnp
outsl
fmuls
xchg
fstp
xchg
pop
push
xchg
or
inc
push
jg
test
int
push
xchg
xchg
bound
into
dec
pop
xchg
mov
add
fs
inc
push
dec
dec
or
gs
xlat
movsb
addr16
sbb
pusha
movsl
xchg
adc
xchg
push
in
loope
rcll
dec
movsl
push
loope
mov
mov
mov
cmp
cwtl
mov
mov
fstl
out
imul
mov
lret
out
xor
jle
mov
test
dec
dec
fsubrl
lock
push
push
jl
dec
jae
pop
test
add
or
sub
pop
xor
push
shll
mov
add
lods
add
or
cmp
sbb
cltd
out
mov
dec
icebp
aad
sub
inc
pop
pop
cmp
add
out
ljmp
test
mov
dec
or
sbb
push
loopne
divl
xor
mov
popf
jp
mov
xchg
xchg
sub
pop
ror
shrl
lods
test
movsl
sub
fsubrl
cli
repnz
pop
dec
lods
xchg
iret
xor
outsb
fwait
add
test
test
inc
adc
and
insl
les
inc
int
or
imul
jb
lds
sub
inc
jl
xchg
mov
out
subb
enter
jno
jns
add
in
sbb
inc
enter
clc
das
jecxz
cmpb
lods
jbe
out
cmp
and
xor
mov
stos
je
inc
adc
cmp
ret
or
pusha
jne
xor
pop
lret
xchg
adc
cmpsb
aam
int
fisttpl
sbb
sub
enter
push
adc
xor
test
xor
dec
out
shrb
jl
lret
mov
mov
lods
lcall
shlb
movsb
addr16
sub
mov
pusha
xor
jno
xchg
pushl
test
jb
into
insb
jb
outsb
mov
jne
es
push
jge
or
inc
add
int
fists
cmp
and
cmp
pop
sahf
sub
and
fidivrs
add
out
js
pop
pop
mov
jmp
fcoml
mov
dec
jne
cmp
push
inc
out
lock
push
pop
push
mov
sub
cltd
mov
enter
mov
aaa
dec
push
push
xor
pop
test
sub
in
mov
js
add
cmp
jne
pop
ficompl
stos
mov
add
pushw
push
mov
pop
adc
ja,pn
mov
frstor
rolb
popa
sahf
sub
lods
jae
cld
pop
xor
repz
adc
cmp
fucom
xor
inc
out
ja
pop
dec
scas
sub
xchg
push
jo
mov
das
lahf
jle
pop
je
in
cld
mov
push
dec
jge
jmp
sub
dec
mov
pop
and
adc
or
aas
cmp
les
aad
outsl
repnz
rcrb
stc
mov
sti
jbe
adc
clc
fistpll
test
or
pop
cmp
outsl
sbb
xor
mov
daa
xor
sti
cmp
jg
ds
arpl
ja
cmp
insl
and
daa
xor
add
xchg
adc
int3
or
inc
xchg
or
pop
cmp
inc
mov
and
lcall
es
in
idivb
adcb
js
pop
in
mov
aas
or
push
jae
mov
push
gs
aad
or
jg
roll
pushf
repz
pushw
pop
fdivrl
loopne
fucomi
insl
push
sti
gs
cmpsl
test
jae
fadds
push
push
xor
ret
cmp
call
add
push
push
js
dec
add
dec
xchg
add
ss
lcall
cmp
sbb
sbb
in
cld
imul
mov
fnstenv
mov
xchg
lcall
or
adc
jno
pop
xchg
imul
xor
pop
ja
lret
jp
rol
in
mov
fcompl
insl
pop
inc
and
cmc
scas
ret
loopne
xchg
cli
adc
adc
ds
dec
dec
imul
sub
xor
dec
mov
add
imul
cmp
lock
loop
fsubp
ds
bound
addr16
lods
into
dec
dec
scas
loope
stc
hlt
mov
mov
mov
fstpl
repz
or
mov
mov
sub
add
add
lds
sti
push
int3
dec
insb
jne
jp
add
inc
in
stc
rolb
xchg
cltd
cld
int
jmp
xchg
jp
sub
nop
orb
insb
and
subl
stc
js
or
imul
rorl
dec
jb
loopne
int3
in
mov
jp
iret
lea
add
jg
out
push
sbb
xor
negb
inc
nop
jns
dec
out
add
shl
inc
aad
fisttpll
hlt
daa
xchg
jo
dec
or
push
push
shlb
stc
fwait
jb
lahf
enter
test
pop
xchg
xchg
push
mov
add
jae
push
and
pop
pop
push
xor
in
xchg
dec
test
add
mov
aam
jmp
es
fdivl
mov
xor
push
imul
add
inc
popf
fcmovne
repnz
fstps
jb
and
pop
xchg
cltd
test
push
in
or
cmp
scas
push
inc
in
stc
imul
sub
jno
mov
movsw
mov
arpl
push
sub
jnp,pn
cmp
nop
mov
cmc
insl
repnz
shr
js
and
outsb
ror
insl
fwait
stc
fmul
push
mov
jp
xlat
popa
xor
mov
pop
divl
aas
ret
nop
ret
shlb
sub
and
scas
fcoms
cmpl
dec
push
jne,pt
mov
out
jnp
iret
jo
inc
aam
in
sbb
mov
sub
push
subb
jmp
cli
mov
add
sbb
dec
lret
add
ret
dec
movsb
kmovb
and
jg
push
fidivs
fistpl
clc
mov
push
jp
repz
addr16
adc
add
popf
add
inc
push
push
xchg
lcall
jo
sub
out
jg
ljmp
cmp
or
insb
into
sbb
test
cmp
mov
mov
push
popa
and
pop
ret
test
pop
in
or
ret
inc
popf
add
cmp
cli
in
dec
icebp
pushl
outsb
sbb
and
push
arpl
stos
xor
les
pop
inc
cmp
ljmp
in
int3
mov
sbb
inc
in
jmp
int3
lea
iret
rolb
lods
inc
or
dec
pop
bound
mov
popa
and
sub
sbb
test
cltd
adc
push
xchg
mov
push
ds
lcall
enter
jns
jmp
xchg
mov
mov
dec
loopne
cmp
adc
and
mov
movsb
or
add
mov
push
jp
into
xchg
pop
push
gs
pushf
cmpsl
xchg
sahf
scas
loopne
mov
mov
fisttps
sub
fidivs
inc
test
push
sub
out
mov
mov
or
pop
fcmovnbe
xor
push
stos
in
loopne
into
fdiv
lea
and
lretw
dec
dec
mov
push
xchg
mov
jp
dec
jle
push
je
mov
cmp
outsl
sub
sbb
cmp
mov
cmp
pop
scas
xor
imul
push
sub
movsb
push
test
ret
and
jg
jb
push
and
dec
xor
push
je
inc
mov
sbb
cmp
mov
arpl
shlb
loope
lret
shlb
adc
sbb
mov
mov
push
jmp
pop
and
push
jmp
jge
ja
leave
cltd
dec
movb
xor
outsb
sub
lret
sbb
jns
and
cmpsb
push
cwtl
or
or
and
sub
iret
add
mov
mov
sub
pop
in
xor
cmpl
push
pop
mov
jno
push
stos
mov
cli
rol
add
cli
add
adc
cmpsl
arpl
or
ja
xchg
into
mov
sub
stc
iret
int
test
test
cmp
push
movsb
push
dec
fdivrl
mov
cmc
movsl
addl
pushf
jp
pusha
fsubr
testb
je
bnd
push
xor
push
aas
outsb
fmull
andb
rcrb
ret
ret
sbb
mov
loope
add
nop
inc
push
enter
fmuls
fnsave
adc
test
xchg
jmp
sub
aas
cmp
jmp
repz
cwtl
in
pslld
mov
mov
jp
cmp
clc
fnstenv
ja
xor
jo
push
cmp
cmc
xchg
mov
mov
ja
aas
popf
push
add
daa
jne
adc
aas
rorb
movsl
loopw
test
xor
lods
loop
xchg
into
daa
in
sbb
dec
fimull
pop
dec
push
lock
push
in
and
fisubrl
stos
daa
fmuls
frstor
scas
pop
fidivrl
fwait
mov
in
test
jmp
inc
int
dec
pop
ljmp
jg
mulb
push
mov
lret
pop
xlat
or
aad
pop
mov
cltd
xchg
and
jno
jbe
jb
notb
mov
inc
data16
test
push
rcll
jo
or
mov
iret
adc
xor
jne
adc
out
push
adc
add
js
mov
xchg
outsl
dec
sbb
add
mov
loopne
jmp
movsb
aaa
lahf
dec
add
and
rclb
test
xchg
pop
sub
lcall
ja
sub
xlat
xor
inc
inc
les
mov
sbbb
adc
xchg
and
dec
hlt
push
clc
insb
jae
stc
dec
icebp
loope
imul
das
hlt
jne
fwait
adc
hlt
push
outsb
cmp
pushf
notl
out
arpl
add
stos
xor
pop
dec
and
jecxz
in
daa
adc
xor
mov
fsubs
sub
bound
xchg
inc
mov
fldenv
cmpsb
hlt
subb
inc
dec
jg
lods
xor
xchg
cltd
mov
fisubrs
clc
pop
insl
jno
pop
aam
je
sbb
pop
int
jp
jg
addr16
pop
iret
lods
mov
pop
lahf
imul
test
mov
fiadds
pop
pop
push
pop
stc
dec
cmpsl
orb
cmpsb
jno
je
pop
fcmovnbe
scas
and
mov
outsl
mov
lcall
in
xlat
jmp
jl
mov
cmc
jns
enter
aam
fildll
mov
jno
cld
rorl
xor
int
insl
xchg
sub
fcompl
fstl
or
std
dec
popa
push
mov
test
jl
sub
push
pop
in
lret
push
scas
xor
rorl
scas
ds
adc
xchg
mov
sbbl
mov
push
lods
ffree
or
dec
out
xchg
inc
in
das
push
inc
std
inc
xor
fucomi
outsl
dec
xchg
enter
repnz
addr16
pop
push
ds
sbb
daa
fxtract
divb
pop
ja
ss
xchg
hlt
fisubrs
aaa
sbb
add
into
lret
jnp
fsubp
fcom
add
nop
push
cmp
mov
xchg
add
rcrb
jp
maxps
stos
dec
push
push
push
adc
fsubrl
pushf
or
and
mov
call
scas
push
xor
repnz
out
ffreep
adc
clc
mov
aad
or
loope
and
popf
test
push
rcr
popf
xchg
cwtl
jl
xchg
adc
ljmp
cmp
shrl
insl
sbb
rcrl
cmp
jge,pn
mov
js
cld
cmp
test
out
pop
xlat
ja
xor
insb
sub
mov
lret
mov
or
push
cltd
rol
xor
pusha
jnp
enter
rcrl
addb
popf
fistpll
push
cld
outsb
dec
in
xchg
xchg
decl
rclb
lret
loop
pop
inc
int3
nop
mov
mov
xchg
std
nop
fstl
lahf
or
mov
mov
lret
cmp
cs
jo
mov
das
sub
push
cmp
loopne
ljmp
insb
sub
call
add
ljmp
scas
fs
jg
push
or
in
adc
testl
sahf
push
inc
scas
or
mov
js
xor
mov
sub
push
jl
loop
mov
arpl
shll
test
mov
test
jbe
xor
jno
jmp
aas
inc
mov
fcompl
test
mov
mov
pop
sub
std
cmpsl
mov
jns
fwait
xchg
lea
cmpsl
or
xor
cmp
into
scas
inc
jg
fimull
pop
mov
scas
mov
sub
ljmp
pop
out
pop
fisttps
jl
enter
push
lock
mov
sbb
daa
ret
jne
add
aam
fidivrs
repz
push
add
xchg
xor
mov
xor
in
push
sahf
push
inc
mov
jo
mov
shlb
xor
cmp
jg
xchg
mov
and
fsubs
ss
add
xor
jle
data16
scas
ja
sarb
push
incl
sahf
push
xor
adc
dec
out
icebp
dec
sbb
sbb
pushf
shlb
push
lods
int
aam
cli
cmp
icebp
mov
jae
lods
sub
movsb
sahf
dec
pop
jl
dec
aas
bound
dec
cs
mov
nop
xor
testb
mov
ret
insb
adc
repz
shll
push
mov
mov
adc
scas
insb
pop
mov
dec
shll
xchg
jmp
mov
jbe
cmpsb
mov
xchg
fidivs
sbb
rcr
test
ret
imul
test
push
pop
flds
cmpb
or
stos
pop
adc
mov
push
cmp
hlt
int
adc
mulb
mov
jg
pop
scas
inc
push
sbb
test
xchg
xchg
push
mov
cmp
negl
jnp
dec
pop
pop
cs
pop
xchg
das
rorb
ret
movsb
icebp
fcompp
pop
iret
inc
js
jns
aaa
jp
mov
add
pop
or
insb
jecxz
push
dec
aam
push
xor
push
dec
cmp
and
dec
dec
xchg
xor
sub
sub
inc
flds
nop
cmpl
sub
jns
xchg
pop
repz
jle,pn
lea
inc
pop
jb
popa
sbb
or
lcall
xor
add
jae
xor
jne
hlt
mov
iret
push
push
sbb
dec
pop
pop
loopne
jl
mov
and
test
adc
pop
sub
cltd
lods
aam
cli
cmp
movsb
pop
fidivs
dec
push
daa
add
out
mul
push
xchg
mov
divb
scas
mov
dec
cmp
push
orl
das
sub
and
frstor
shl
lods
add
pusha
pop
xchg
fiadds
mov
imul
lcall
push
jmp
in
clc
stos
mov
ljmpw
or
lods
dec
lea
and
jb
pop
adc
lret
pop
mov
or
mov
and
sub
or
mov
pop
sbb
xorb
mov
pusha
xor
aad
ss
add
pop
pmaddwd
call
xor
icebp
je
mov
lcall
lea
out
xchg
fsubp
loop
mov
test
add
pop
scas
shl
leave
and
sti
adc
mov
lret
shll
cmp
mov
dec
dec
push
cmp
dec
add
insb
fmulp
add
push
sahf
test
sub
lea
add
dec
push
mov
mov
jnp
insl
jo
mov
dec
adc
dec
jge
pop
adc
dec
lea
movsb
iret
test
fidivl
insl
repnz
push
pop
push
aas
mov
push
and
subl
fcompl
lahf
inc
and
mov
sub
mov
jne
inc
adc
sub
movsl
xchg
les
mov
fiadds
ja
adc
inc
dec
inc
adc
movsb
ficompl
lock
add
inc
lock
fildll
int3
shrb
arpl
or
cmpl
filds
inc
lods
sti
lret
scas
add
popf
insb
les
jl
fstps
into
push
ret
imul
pop
inc
aam
xchg
das
mov
jge
cmp
mov
rorb
fldl
mov
jb
pop
add
aad
ret
jp
stc
xlat
adc
cltd
mov
and
xchg
out
pop
les
popl
fildl
dec
ss
popa
xchg
js
inc
xor
out
xchg
rorl
loopne
and
cmp
sub
ret
push
cmpsl
mov
jg
imul
add
mov
mov
jo
ja
mov
xchg
mov
sbb
in
push
ret
test
and
xchg
dec
pop
and
in
test
les
mov
shr
dec
pop
jo
inc
aas
inc
inc
fmul
adcl
pop
sbb
movsl
stos
frstor
es
push
cmpsb
ficoml
and
pop
sbb
push
xchg
inc
dec
loop
sub
cld
ds
and
add
adc
push
adc
and
je
pop
mov
pop
xor
shlb
nop
mov
cmp
aad
icebp
adc
mov
xor
aad
xchg
out
call
jae
iret
out
into
xor
ficompl
aas
andnps
adc
sbb
xlat
ja
loopne
icebp
ss
mov
add
ficoml
xchg
mov
mov
inc
xor
push
or
test
test
pushl
ret
std
sahf
adc
addr16
loope
movsl
jns
test
mov
and
shll
xchg
popf
sti
out
in
nop
fstps
call
orl
into
arpl
push
rcll
cwtl
popf
out
ja
cli
mov
push
test
aam
in
mov
sbb
loop
sbb
or
outsl
sbb
cltd
push
outsl
xchg
mov
fists
xorb
inc
mov
mov
mov
xchg
jno
add
mov
lock
xchg
push
xchg
mov
ja
add
subb
jmp
jg
cli
loopne
push
push
xor
mov
add
sub
pop
add
in
sbb
mov
insl
sub
mov
cmp
fmuls
mov
jg
jno
test
sbb
adc
ss
in
or
adc
jae
mov
cwtl
mov
aam
pop
lea
lcall
in
insl
mov
cmp
imulb
lcall
dec
stc
inc
cmp
pop
das
movsl
pushf
xlat
sti
ja
bound
mov
and
fxch
ss
insb
push
sbb
or
cmp
sub
fsubl
in
xchg
pushf
out
idivb
dec
ss
insb
push
sbb
or
cmp
sub
fsubl
in
xchg
pushf
out
idivb
dec
ss
insb
push
sbb
or
cmp
sub
fsubl
in
xchg
pushf
out
idivb
dec
ss
insb
push
sbb
or
cmp
sub
fsubl
in
loope
outsb
add
inc
cmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
movb
imulb
enter
clc
les
in
xchg
pop
test
movsb
movsb
ss
movb
notb
add
xor
and
aam
les
addr16
xchg
arpl
push
movb
notb
add
xor
and
aam
les
add
dec
xchg
inc
lret
inc
and
inc
cmpsb
cmp
and
iret
movsl
pop
mov
sti
cmp
adc
fldcw
repnz
leave
movb
and
sbb
push
cmp
imul
pop
addr16
inc
push
jnp
add
pop
mov
inc
xchg
push
mov
stc
inc
sub
stos
loope
xchg
dec
inc
ret
push
xrelease
aam
and
les
or
je
xlat
mulb
mov
sti
cld
or
and
mov
cltd
in
push
in
push
xor
lods
lahf
inc
sar
loope
hlt
leave
int3
sbb
sub
push
adcl
test
movsl
leave
or
inc
je
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
jo
movb
sbb
popa
loop
ret
inc
ret
jbe
fwait
xor
enter
rclb
stos
pop
mov
jno
pusha
shll
pop
cwtl
xchg
test
and
arpl
and
mov
test
addl
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
mov
xor
unpckhps
rclb
push
popf
dec
ja
mov
jge
popf
add
push
add
jns
and
push
jnp
add
xor
aaa
mov
loopne
and
dec
lahf
pushf
mov
pushf
jne
mov
inc
or
sub
push
inc
inc
sbb
iret
pop
dec
vpackuswb
xor
sub
inc
enter
xor
pmaddwd
hlt
or
xor
or
imul
popf
cmp
out
dec
imul
inc
mov
int3
add
int
scas
stos
cld
xor
jo
dec
and
add
das
aaa
in
ret
jno
les
jne
or
pop
cmp
scas
or
ret
push
movsb
gs
sub
xchg
mov
mov
sub
xchg
stc
int
cli
divl
mov
push
dec
cltd
mov
cmc
outsl
add
adc
jne
xchg
xchg
and
sbb
out
lock
imul
jmp
ljmp
jp
in
test
mov
ljmp
cs
xor
mov
inc
into
in
outsl
int
js
push
insb
aas
mov
nop
mov
iret
je
sbb
into
dec
jns
dec
out
jl
stos
adc
insl
push
dec
push
into
cmp
inc
sub
push
cmp
in
and
rcl
sbb
inc
adc
mov
cmp
scas
aam
or
xchg
jb
push
sar
push
cwtl
adc
mov
push
movsl
iret
sub
icebp
call
dec
and
and
push
leave
xor
mov
aad
pop
insl
cmp
leave
cmpsb
mov
adc
push
sahf
jecxz
ja
mov
daa
fdivr
popf
sub
sub
dec
push
fiadds
inc
dec
cwtl
lret
int
cli
adcl
je
imul
out
sbb
out
rcrl
push
sbb
out
sbb
and
sbb
adcb
adc
push
fisttpl
adc
jbe
shl
add
push
dec
out
imul
xor
mov
bound
xchg
ljmp
cmc
ds
lds
jp
in
xchg
push
imul
dec
mov
xchg
dec
movsb
jle
inc
mov
in
and
push
in
sub
sub
jno
test
jmp
sbb
dec
hlt
jmp
mov
add
fsubs
test
lret
cmp
lcall
inc
es
popa
sub
jecxz
nop
cltd
fwait
out
lea
mov
mov
sub
pushf
movsl
ja
add
insl
lcall
cli
fnstsw
lea
dec
push
add
pop
outsl
add
push
fdivl
xchg
dec
xchg
jns
test
imul
fs
sbb
out
mov
inc
and
and
push
add
movsl
test
push
int
andl
out
and
cmp
cmpsl
xchg
inc
movsl
sbb
out
inc
bound
xor
lock
pop
hlt
xchg
lock
inc
push
scas
sub
lret
cli
dec
gs
cltd
lret
xchg
xchg
sub
xchg
and
push
push
repz
push
movsl
mov
push
hlt
lret
jbe
cmp
cmp
je
scas
sbbl
push
sbb
mov
push
lcall
negb
je
add
cmpsb
cltd
clc
test
mov
js
fsub
scas
push
fdiv
repz
in
inc
mov
cmp
sub
jnp
xchg
add
repnz
pushf
push
push
rorl
add
pushf
or
test
shl
lock
test
out
jno
scas
sub
dec
mov
rorb
add
clc
imul
scas
mov
arpl
pushf
jne
lods
add
inc
call
mov
or
cltd
ds
adc
addl
jo
insb
cmp
sahf
stc
mov
lods
jle
xchg
mov
jecxz
or
xchg
mov
jns
xchg
std
mov
sar
lea
cmp
imul
aas
pop
mov
das
and
hlt
push
sub
out
gs
loop
fidivrl
cmp
mov
shll
out
add
or
xchg
jbe
lods
scas
out
sub
mov
xchg
sbb
mov
cmp
jmp
adc
sbb
and
lods
mov
sbb
add
fiaddl
dec
sbb
xor
das
ss
ficompl
mov
jle
test
adc
push
push
cmc
aam
fldenv
lahf
mov
mov
xchg
inc
in
mov
mov
es
daa
fdivr
lret
xchg
adc
push
lods
adc
mov
jmp
loope
rcr
dec
sub
dec
aas
push
inc
aam
shr
xchg
add
xchg
in
xchg
pushf
pop
dec
mov
or
xor
lock
xchg
popa
iret
rorb
test
cwtl
lret
call
outsb
dec
cmp
pop
shrl
data16
cli
rorl
sti
dec
scas
sti
inc
cld
cs
dec
aam
jae
adc
aam
adcl
push
push
inc
mov
es
imul
mov
movsl
or
cmc
lock
imul
andb
mov
pop
push
cltd
push
rep
or
rcll
pop
shl
mov
jns
dec
movsl
mov
out
adc
movsb
adc
test
testb
aam
es
test
fisttps
xchg
mov
inc
push
pop
pop
cltd
lahf
fsubrl
xor
popf
cmp
enter
and
pop
mov
int3
inc
xchg
aad
xor
rcll
xchg
test
cmp
xchg
cs
xchg
add
cmpsb
adc
add
das
adc
sti
adc
mov
inc
scas
mov
adc
push
dec
addr16
es
gs
sarl
pop
loopne
mov
fs
cld
push
inc
or
pop
mov
pop
sub
xchg
or
pop
xchg
ja,pn
push
pop
jne
ds
adc
cs
and
test
dec
nop
xchg
push
fstpt
dec
mov
push
push
out
cmc
inc
lret
or
sub
sbb
loop
cld
mov
cmp
cs
das
or
fnstcw
sbb
mov
loope
loop
jo
xchg
lcall
mov
das
xchg
lds
leave
jp
push
sbb
mov
outsb
fmull
push
add
xor
in
push
leave
lret
sarb
leave
stc
pop
aaa
icebp
pop
aaa
sbb
pusha
mov
dec
cli
movsl
add
pop
pop
call
shll
pop
addr16
lahf
addr16
push
aaa
cld
mov
jg
mov
fdivl
lcall
iret
sbbb
test
sbb
frstor
jmp
test
pushf
mov
jno,pt
mov
adc
lock
in
push
vsubpd
mov
dec
mov
dec
rclb
sahf
pop
cld
jns
cmpl
fidivs
xchg
ja
out
notb
cltd
rcrl
adc
addr16
cmpl
cmp
cmp
sub
dec
inc
mov
lret
or
mov
xor
ljmp
lret
cwtl
pop
out
clc
imul
xorl
addr16
push
push
mov
cmp
and
pop
movsb
add
xchg
popa
or
push
fisubrs
push
mov
cld
mov
loop
in
repz
pop
in
jp
jp
and
and
xchg
or
cmp
fwait
push
jnp
and
les
sub
cld
jns
xchg
iret
or
inc
jmp
push
es
testb
adc
push
and
xchg
pop
leave
add
inc
push
push
dec
inc
xor
push
cli
rorb
sbbb
fisubrl
pop
mov
dec
shlb
insl
fcoms
mov
jae
stc
mov
das
mov
jno
movsl
and
lds
fisttpl
loope
loop
mov
mov
dec
sahf
stos
and
daa
jnp
test
push
scas
pop
push
mov
push
into
push
nop
push
adc
movsb
std
lods
sbb
xchg
test
and
pop
sbb
dec
test
or
out
repz
shlb
cmp
pop
mov
sbb
or
cmp
mov
mov
mov
add
mov
sbb
or
xor
mov
sbb
jg
dec
push
mov
sbb
cmp
mov
test
push
movsl
sbb
or
mov
int3
fwait
mov
mov
test
cli
cli
data16
call
fisubrs
jge
xchg
or
nop
sub
rolb
std
into
test
and
mov
jecxz
and
push
xor
data16
fistpll
or
sub
push
jb
adc
push
mov
inc
icebp
cmp
repnz
incb
fcomps
cmp
sbb
bound
iret
add
sbb
inc
pop
int
inc
shrl
out
movsb
dec
dec
addb
ret
and
sub
xor
call
xlat
stos
sub
les
cld
cltd
cmc
cltd
fistl
pop
jge
xor
sub
jg
rcr
das
shll
jg
sbb
fdivrl
test
inc
adc
pop
leave
xorl
jmp
xchg
cmpb
lods
sahf
pop
xchg
out
sub
sbb
les
movsl
mov
sbb
in
mov
mov
repnz
push
inc
adc
std
pop
pop
mov
jne
cs
popf
mov
cltd
testl
lods
lods
enter
mov
push
lret
test
cwtl
cmpsl
xor
xchg
mov
hlt
xor
out
mov
test
xchg
pop
jge
scas
inc
std
repz
popf
jmp
movsb
fldcw
daa
xchg
sub
adc
pop
jmp
inc
xor
add
sbb
xchg
push
aam
lds
mov
lcall
cmp
mov
mov
shrl
inc
out
into
pop
cmp
pop
and
sbb
test
cmp
dec
cmpsb
int
jmp
popa
sub
xor
pop
xor
jo
fsubs
rcrb
mov
or
push
or
dec
leave
xor
pop
cmp
rorl
and
cmpsl
pop
mov
arpl
gs
decl
mov
lcall
movsb
add
mov
adc
xor
mov
mov
bound
test
or
setg
clc
cmp
push
adc
sahf
jb
sbb
lock
imull
cld
jne
add
mov
cli
sbb
or
jg
movsl
adcb
insl
loop
mov
std
pop
push
popa
and
fdiv
pop
inc
sub
xor
mov
cmp
sbbb
scas
or
and
jne
xchg
pop
and
mov
sub
inc
mov
je
es
mov
sub
out
dec
dec
sahf
sub
dec
push
add
mov
fsubp
pop
mov
dec
out
data16
test
sti
adc
loop
std
imul
mov
call
mov
inc
out
int3
jb
pop
adc
test
lret
xor
data16
js
mov
dec
inc
test
inc
adc
mov
cmp
xor
fisubrl
jmp
mov
icebp
xlat
xor
xor
je
nop
mov
xorl
mov
stos
jecxz
imul
mov
xor
lods
or
mov
or
shlb
shrl
push
int
cmpsl
out
xchg
lea
add
adc
clc
cmp
xor
dec
jmp
fadds
hlt
inc
leave
mov
ss
fcomps
int
popl
push
insl
aad
sub
scas
jns
inc
xor
dec
mov
xlat
adc
sar
cli
and
xor
lods
adc
adc
add
stc
mov
in
mov
dec
loope
scas
test
leave
adc
or
jecxz
loope
loop
scas
in
outsb
test
cmp
cmp
cli
subl
inc
mov
mov
popf
jl
cmp
ret
into
jnp
and
pusha
sbbb
ss
jae
cmp
adc
scas
stos
cmp
push
clc
xchg
mov
cmp
outsb
fidivl
sbb
int3
lock
pop
push
test
in
mov
cs
dec
and
sbb
in
notb
sbb
jae
xchg
adc
jl
inc
push
pop
add
jb
in
cmp
push
fwait
or
inc
mov
push
addr16
imul
mov
lahf
or
mov
imul
sub
sbb
test
aad
cmpsl
out
pop
jnp
ds
sbb
pop
mov
sub
sub
ljmp
mov
inc
pushf
dec
out
push
pusha
adc
dec
dec
insl
in
lret
dec
mov
adc
lock
jae
sbb
or
add
cmp
in
in
sbb
loopne
js
push
mov
jecxz
les
xchg
cld
std
daa
stc
movsl
enter
sbb
sub
xor
jp
cmpsb
dec
popa
lret
mov
add
jae
sub
mov
cmp
jmp
mov
jae
sub
rorl
lock
add
sub
push
mov
xor
and
cmpb
push
mov
adc
in
std
out
shll
std
mov
scas
push
mov
clc
xchg
cltd
mov
push
aaa
jle
cmc
xor
xor
jmp
pop
out
cmp
mov
je
in
jbe
jl
push
out
call
pop
scas
das
ror
inc
cmp
int
dec
fbld
xor
lea
or
xor
sahf
inc
xor
xor
adc
movsl
scas
xorl
jne
popf
popa
std
pop
xchg
mov
ljmp
mov
sbb
or
push
out
push
mov
lahf
cmpsb
into
inc
daa
push
jns
xor
cltd
cmpsb
gs
es
jno
jns
push
es
pop
js
ja
loop
test
imul
lock
dec
add
icebp
shll
xor
mov
mov
and
outsb
pop
mov
mov
pop
outsl
xchg
cmpsb
mov
push
gs
and
mov
sbb
push
adc
out
into
loope
in
push
out
rol
add
inc
xlat
outsb
jno
insb
jbe
arpl
jmp
loope
pop
sbb
pop
jno
mov
outsl
xchg
std
jl
ja
leave
imul
xchg
je
lcall
inc
jge
loope
push
lcall
ja
pop
push
scas
jg
inc
and
add
sbb
daa
xchg
lcall
or
mov
add
mov
xlat
cmpsl
pop
sti
mov
xor
mov
pushf
cmpxchg
sub
push
inc
add
rcrb
dec
jge
push
loop
ror
jne
sar
mov
push
mov
adc
outsl
add
shl
ljmp
fadd
cld
stos
mov
xchg
sbb
mov
mov
pop
test
icebp
hlt
pop
add
jge
sbb
hlt
test
lret
xchg
das
adc
push
rclb
das
mov
int
push
int3
mov
mov
adc
mov
dec
sub
inc
out
cs
dec
xlat
xor
adc
add
and
inc
xor
scas
ja
push
ss
add
ret
in
push
imul
cmp
bnd
jbe
inc
mov
ret
aas
or
js
popf
std
sub
inc
or
shrl
cmc
cmc
push
cmpsb
dec
pushf
loopne
adcl
cmc
pop
fldenv
or
shlb
ja
insb
add
xchg
push
mov
pop
or
rorl
dec
nop
movntps
sarb
mulb
js
push
btr
out
inc
push
fnsave
ja
clc
jnp
lret
stos
in
out
fldl
insl
xor
mov
push
cmp
sub
jbe
cwtl
and
cli
aad
rcl
push
cmp
outsb
mov
jne
mov
and
dec
sti
rclb
inc
or
lretw
test
pop
int
out
jg
adc
jecxz
sbb
in
addr16
into
push
push
inc
movsl
ret
add
lcall
and
add
sub
jge
adc
jae
and
roll
xchg
aaa
in
daa
lds
pop
and
mov
lret
push
pushf
in
inc
cld
mov
or
jo
xchg
test
pop
js
shlw
loope
jmp
xchg
loope
jl
xchg
js
imul
shll
mov
fldcw
lds
decb
inc
rol
xlat
ljmp
sahf
fwait
idivb
cwtl
negl
fsubl
push
das
data16
lea
cmp
add
mov
or
jno
pop
adc
cltd
pop
test
jl
dec
mov
inc
adc
push
into
hlt
testl
rcrb
enter
arpl
fisttpl
mov
pop
jmp
jp
jmp
cmp
ss
clc
xchg
xchg
idivb
push
cwtl
pop
imul
mov
daa
jecxz
movsl
sub
cmpsb
movsl
or
decb
xchg
insb
shr
sbb
sbb
inc
arpl
xor
or
pop
jbe
enter
jmp
lahf
shlb
inc
aad
cmp
insb
pop
add
nop
cmpl
xor
orl
dec
int3
popf
shl
rcrl
test
pop
mov
fcmovnu
das
mov
mov
xor
cmp
fistpl
xchg
push
push
lock
push
and
shrb
call
clc
stos
mov
adcb
bound
pusha
ja
mov
add
mov
dec
subb
aad
loope
cmpsl
cmp
pop
shll
push
mov
lock
cmc
push
das
jl
fnop
dec
into
leave
stc
jmp
inc
pop
sbb
fnstcw
or
ja
aaa
pop
xchg
js
std
mov
mov
sub
and
pop
js
ret
into
cltd
jmp
mov
gs
lock
addr16
push
mov
out
push
push
jnp
inc
jo
pop
fimuls
shl
clc
imul
bound
lea
popf
scas
mov
xor
jno
mov
cld
sub
add
sub
xchg
inc
jne
insl
cmp
std
pusha
xorl
fisttpll
mov
into
pop
ret
mov
jae
inc
adc
add
repnz
sub
sbb
add
in
je
mov
sub
sbb
or
mov
xlat
lcall
mov
das
loop
cmpsl
push
shrb
inc
adc
pop
inc
lea
cmp
pusha
sar
inc
xchg
cs
insb
mov
mov
je
jae
sub
jecxz
push
sbb
out
into
ljmp
or
out
pop
out
out
xchg
mov
pusha
repz
popa
ss
jae
cmp
dec
jle
cltd
mov
mov
xchg
add
pop
sub
pop
jge
dec
and
jmp
and
aad
mov
and
movsl
xchg
jno
fstpt
push
or
sub
mov
inc
adc
and
mov
inc
ror
fs
leave
sti
loope
and
xor
mov
lcall
aad
cltd
mov
mov
ret
lods
pop
pop
in
inc
xor
in
fbstp
imul
dec
add
push
movb
out
xchg
push
mov
lods
bound
vmovq
mov
aaa
jecxz
push
sub
lods
jno
xchg
arpl
cmp
roll
out
decb
lcall
sarl
loopne
aas
cs
data16
cmp
std
arpl
fadd
aam
mov
dec
call
shl
inc
inc
add
mov
xchg
mov
xchg
mov
mov
dec
cmpl
xchg
dec
stos
push
inc
jg
bound
lcall
mov
adc
mov
mov
cmp
dec
jmp
mov
lret
push
and
add
inc
pop
fsub
sbb
nop
cmpl
mov
adcl
inc
dec
pop
cmpsb
inc
cmc
hlt
mov
mov
and
int3
push
ret
cmpl
cmp
and
or
mov
jo
jg
mov
insb
mov
xor
lods
stc
sahf
mov
pushf
shll
adcl
int
insb
aad
icebp
add
je
jae
das
jne
cmp
mov
sahf
mov
mov
bound
mov
das
add
jg
leave
fcoms
mov
cmpsl
icebp
shll
mov
cmpsb
pop
outsl
dec
dec
mov
xchg
mov
dec
cmp
mov
fsts
movsb
push
jecxz
pop
aad
femms
out
and
ss
clc
subl
inc
inc
movsl
push
cmpsl
push
inc
fs
and
int3
or
mov
push
test
sub
jl
cltd
popf
cmp
loopne
pop
hlt
clts
scas
sub
les
dec
lds
mov
out
mov
loop
stos
push
jb
xchg
push
mov
xchg
sub
xlat
jbe
shrb
imul
push
add
dec
xor
cmp
loope
fdivs
or
and
lea
lcall
andl
aas
mov
daa
adc
out
xor
sbb
xchg
adc
data16
mov
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsl
ss
movb
out
notb
add
xor
and
aam
cld
pop
data16
jecxz
or
dec
fstps
pop
xor
and
adc
add
add
xchg
mov
mov
xlat
repz
mov
pop
xor
and
adc
add
inc
arpl
addr16
xchg
mov
mov
pop
repz
jecxz
shl
ret
pop
xor
and
adc
add
inc
arpl
addr16
xchg
lea
xlat
mov
mov
dec
xor
aaa
ja
out
sahf
mov
mov
imulb
data16
hlt
cmpb
pop
jecxz
pop
cmp
test
inc
pushf
mov
dec
push
add
dec
xchg
pop
subb
push
inc
pmaddwd
in
outsl
fsubl
call
xchg
jae
pop
mov
addr16
xchg
mov
ret
pop
and
daa
pop
jo
push
jae
mov
add
sub
shl
call
push
jae
pushf
hlt
lods
and
xor
mov
cmp
cmpsb
cmpsl
shl
xchg
ljmp
jbe
mov
addr16
ja
dec
xchg
popl
mov
addr16
pop
and
adc
add
inc
arpl
addr16
xchg
mov
mov
xlat
repz
jecxz
shl
test
jae
pop
push
dec
inc
push
sbb
and
ss
std
fucomip
sahf
lcall
bound
adc
push
push
add
cmp
inc
repnz
iret
mov
cmpsl
out
pushf
test
lods
jb
pop
push
pop
addr16
ja
pop
inc
arpl
addr16
xchg
mov
mov
xlat
repz
jecxz
shl
ret
pop
xor
and
adc
add
inc
arpl
addr16
xchg
mov
mov
xlat
repz
jecxz
shl
ret
pop
xor
ss
loope
shrb
add
cmp
mov
sahf
lds
mov
daa
and
in
pop
jo
sub
mov
mov
or
adc
bound
push
inc
lahf
add
fidivrs
mov
add
mov
xchg
jne
jo
ljmp
mov
push
jle
mov
hlt
std
push
sbb
fsubs
cwtl
mov
pushf
int3
jle
mov
dec
popa
sbb
push
xchg
mov
sub
ret
jle
fisubl
arpl
stos
pavgb
mov
in
rclb
mov
shrl
lds
mov
popf
adc
sti
ret
add
mov
pop
pop
aam
repnz
xor
and
mov
les
pop
jl
cli
xchg
mov
and
cmp
insb
push
les
lcall
leave
dec
mov
int3
hlt
dec
pop
stos
mov
jb
mov
decl
arpl
jo
inc
es
test
ret
mov
fs
mov
mov
push
pop
cmp
outsb
xchg
fcom
mov
sub
in
mov
jns
aam
mov
mov
stos
setno
mov
xchg
and
mov
xlat
fdivp
sub
jl
lret
push
stos
and
cmp
out
mov
je
mov
daa
sbb
xorl
cmp
jl
add
push
js
xchg
clc
es
inc
xor
fistpll
int
aad
xor
mov
xor
jns
jmp
repz
lcall
movsb
cmpsl
call
dec
ret
and
hlt
push
aaa
mov
rcl
mov
push
dec
xor
sbb
sub
adc
nop
shll
mov
and
jp
cmp
out
lret
xchg
iret
xor
sarb
adc
mov
sbb
int
fadd
ljmp
sub
mov
je
lock
mov
stos
sub
daa
in
sub
rcl
mov
outsl
jecxz
cld
jl
adc
cli
fisubrl
cmp
mov
mov
push
mov
mov
popl
push
imul
call
mov
mov
repz
sub
jge
dec
mov
cs
jb
lock
xor
into
xchg
jno
lret
pop
jle,pn
out
jb
xor
xchg
push
sar
popl
pop
cld
mov
aam
jmp
xchg
cmpsb
movsl
jo
lahf
imul
scas
lcall
mov
in
push
mov
xlat
mov
dec
lahf
fs
dec
movb
mov
xor
mov
sti
stos
ds
out
sub
xchg
sbb
push
pop
lea
push
mov
addr16
lret
scas
pop
pusha
test
cli
das
aas
inc
movsb
mov
dec
subb
adc
and
or
sub
or
shrb
jo
pop
andb
push
adc
fldt
ds
or
mov
test
cld
in
and
mov
jb
mov
lea
fnstsw
push
dec
loopne
jnp
cs
cmp
fists
shlb
push
cli
push
xchg
mov
sbb
movsb
add
ret
pop
into
add
xchg
mov
sahf
dec
jno
pop
xchg
mov
mov
je
pop
lods
cmpps
aam
mov
mov
out
cmpsb
pop
mov
add
imul
push
pusha
dec
movsl
or
lret
jmp
push
stos
inc
data16
xchg
je
cmp
outsb
incb
hlt
jle
and
iret
nop
mov
stos
xor
fildl
inc
xchg
or
jnp
cltd
sbb
sbb
xor
out
cld
ret
insl
std
jecxz
mov
and
push
push
mov
mov
mov
nop
sbb
and
sbb
add
pop
jge
jle
adc
inc
popa
mov
and
or
aad
ds
sbb
andl
aaa
popa
mov
daa
push
push
out
out
scas
cmpsl
addb
stos
xor
nop
adc
sarl
pop
data16
add
add
add
test
gs
or
sbb
jne
cwtl
aaa
sub
add
inc
push
jno
fimull
sbb
sub
adc
mov
shll
mov
mov
and
or
insb
imul
add
pop
and
loop
sub
leave
lcall
leave
inc
cli
aad
mov
iret
and
inc
int3
mov
ljmp
sbb
push
jp
dec
lea
adc
repz
xchg
cli
shl
cmpsb
mov
cmp
xchg
mov
pop
punpckhbw
movsl
lret
and
inc
imul
insl
inc
lret
jmp
mov
cmp
mov
push
into
lret
jecxz
xchg
fstpt
adc
xchg
cli
cs
pop
sbb
inc
es
cmp
cli
mov
int
xchg
testb
push
pop
mov
lret
push
push
xor
mov
aas
aaa
mov
test
lcall
cmp
iret
out
mov
pop
pop
hlt
out
sub
clc
pushf
std
rcrl
lret
pop
cltd
js
xchg
int
cli
jmp
in
aad
jge
dec
jne
sbb
mov
dec
mov
cmp
dec
sub
iret
daa
sub
pop
test
fucom
fldt
dec
mov
push
mov
aam
fnstcw
scas
push
xchg
add
cmc
aas
mov
dec
hlt
cwtl
sbb
mov
sbb
dec
inc
lds
shlb
cmp
fcom
dec
jle
fcmovu
mov
sbb
call
mov
xchg
scas
in
hlt
test
lods
stc
cmp
mov
loope
out
lret
dec
enter
ja
sub
imul
arpl
push
push
stos
idivb
sbb
ja
ret
or
out
cvtps2pd
sub
inc
xchg
ljmp
lods
fisubs
repnz
into
dec
sub
lods
pop
dec
cltd
shl
mov
pop
jbe
fucom
cs
push
popf
bound
or
xchg
fs
jle
scas
mov
xchg
mov
popf
and
mov
fldt
test
cmp
pop
pop
ret
and
aas
lds
mov
in
movsb
mov
sbb
sbb
and
iret
push
fiaddl
jne
sbb
fnstenv
pop
add
out
int3
adc
adcl
cmp
js
icebp
subb
pusha
mov
add
adc
out
pop
xlat
pop
pop
mov
xchg
cmc
clc
mov
xor
jns
push
andb
mov
or
push
int3
mov
sahf
sub
outsl
std
add
flds
or
inc
movsb
adc
frstor
fwait
add
dec
push
call
jp
and
lret
jno
pushf
pop
mov
into
pop
adcb
pop
cmp
xchg
mov
sarb
and
pop
scas
lods
call
imul
imul
mov
adc
mov
mov
sbb
mov
lods
call
lret
sbb
repz
nop
pusha
call
or
xor
cmp
enter
hlt
arpl
jb
jne
mov
cmpsb
int
xchg
jmp
add
jp
pop
movsb
push
lret
ljmp
ret
insl
xrelease
and
adc
popa
xchg
outsl
ror
cmp
adcb
dec
inc
mov
mov
jno
mov
test
cmpsl
jmp
ret
addr16
jne
adc
pusha
cli
sarb
mov
push
mov
pop
jnp
sbb
xchg
mov
lahf
pop
cmp
out
repnz
lods
inc
pop
dec
popf
aam
push
push
mov
inc
xchg
idivb
sbb
push
std
lea
cs
pop
scas
out
mov
adc
jl
andl
aas
push
sbb
inc
mov
cwtl
sub
xchg
addl
mov
pop
aas
add
dec
mov
cmp
ja
push
leave
andb
clc
cmp
jle
cltd
aam
lcall
cmpsl
cmp
and
out
repnz
test
sub
push
xor
cmpsb
pop
push
pop
test
lds
fwait
mov
out
out
push
mov
adc
sub
jo
hlt
adc
mov
or
xor
int
cmpsl
cmp
out
adc
sbb
lods
xchg
in
dec
mov
jb
cmpsl
fs
cli
setle
dec
test
lcall
lods
cli
in
inc
mov
mov
cmp
in
out
leave
outsb
push
mov
jmp
data16
xor
mov
dec
addr16
jno
adc
dec
pop
hlt
jno
jecxz
jne
ret
jp
gs
mov
mov
std
cmp
mov
push
add
xchg
cmc
and
xchg
push
daa
pop
ja
subb
lods
out
lret
fsubrl
shrl
rolb
inc
mov
int3
imul
shrd
xor
outsl
popf
mov
mov
mov
push
and
or
cmp
dec
pushf
call
mov
adc
inc
sti
scas
cli
outsl
stc
aad
sbb
rorl
flds
insb
sub
jp
fnstsw
loopne
cmp
adc
push
pusha
xor
pop
movsb
pop
je
mov
cmp
xchg
ds
xchg
lds
adcb
popf
pop
add
cmpsl
hlt
dec
mov
xchg
adc
in
sbb
push
nop
cmp
and
lret
or
js
out
clc
out
outsb
inc
xor
pop
push
add
sub
les
outsl
add
rolb
fs
sub
mov
in
xchg
fdivrl
jge
jmp
aas
inc
add
and
sarb
pop
sub
sbb
jmp
push
jae
xor
lret
adc
pop
ret
mov
notb
pop
jle
jge
test
data16
adcb
imul
pop
lcall
jb
jl
cwtl
cmp
add
adc
mov
jg
movsb
mov
bound
mov
clc
jae
jno
mov
es
jne
push
mov
jp
jo
and
mov
jp
or
mov
pop
test
ds
test
test
mov
sbb
push
scas
fildll
sti
xlat
fistps
pop
xor
lods
adc
dec
loop
cmpsb
sbb
test
mov
jne
in
jmp
jae
adc
mov
popf
call
aas
stos
dec
push
test
or
scas
call
sub
jne
inc
xor
adc
pop
add
xor
andb
sub
pop
inc
dec
lods
pop
mov
mov
pop
aam
sub
leave
adc
fbstp
imul
mov
push
ret
xchg
leave
fcomps
lahf
jge
imul
iret
inc
adc
aam
jns
or
mov
jmp
adcl
loope
stos
lds
jbe
cmpsl
hlt
inc
inc
adc
jmp
movl
xchg
test
test
sbb
ss
and
inc
and
test
test
pop
jp
jle
jae
lcall
inc
test
stos
fcomi
sbb
into
and
fs
mov
in
push
xorl
insb
shll
and
and
inc
mov
jl
and
loop
or
notl
fucomp
and
lds
push
shll
gs
in
mov
sub
cs
push
scas
fdivrs
mov
lock
add
je
les
cltd
scas
pop
push
inc
xlat
ss
pcmpgtd
pop
mov
imul
mov
mov
pop
fsubl
sbb
push
dec
mov
aas
cmp
les
movsl
sub
add
rorl
and
cmp
cmc
push
shrl
cmc
arpl
fcmovne
std
leave
jge
dec
pop
mov
cld
mov
cmp
xor
xchg
xor
aad
stos
in
xchg
inc
test
jbe
in
pop
in
fmulp
push
xchg
imul
mov
xchg
adc
jns
and
xchg
std
clc
xchg
push
adc
out
add
daa
xor
mov
pop
jns
mov
jae
xlat
cmpsb
out
sub
jmp
cltd
and
popa
pop
insb
jle
push
in
and
and
ret
xchg
push
jne
dec
pextrw
sbb
imul
mov
mov
add
mov
mov
out
mov
jl
cmp
mov
adc
xchg
stc
mov
repz
and
std
mov
dec
mov
sbb
aad
int3
arpl
dec
mov
das
xor
mov
xor
test
mov
push
or
je
jmp
int
hlt
lcall
scas
leave
fdivrs
xchg
pop
jnp
and
and
ret
inc
push
in
lret
push
arpl
jg
pop
push
push
into
and
mov
push
jle
push
sub
jno
xor
push
sbb
jg
inc
cmp
fidivl
aam
repz
icebp
cmpl
cwtl
and
iret
rcrb
pushf
sahf
push
in
xlat
lods
sarb
les
fwait
xor
out
pop
cltd
cmpsb
adc
push
test
add
xchg
call
push
fiadds
jne
inc
push
aam
scas
jmp
dec
cmp
pop
stos
sub
jmp
dec
fistpll
repnz
fistl
lock
rcr
push
test
iret
lret
push
pop
push
and
mov
or
xchg
je
cmpsb
mov
mov
mov
enter
divb
shrb
pop
into
lret
fisubs
push
mov
or
and
repnz
push
sahf
scas
adc
push
popf
inc
cmpsb
push
cmp
dec
lcall
xorb
gs
dec
lret
daa
mov
adcb
push
xor
int3
jge
cli
outsl
push
out
inc
aad
repz
ud0
adc
cmpsb
dec
mov
mov
mov
dec
flds
mov
sti
and
lcall
pop
xor
scas
pushf
mov
xchg
adc
ret
xor
fildl
pop
lcall
cmpl
loope
test
mov
aam
inc
inc
in
div
mov
stc
out
xchg
mov
pop
push
cld
lock
cmp
inc
mov
ss
mov
sub
cmp
xor
pop
psraw
mov
sbb
loope
dec
imul
dec
jle
lea
mov
xor
testb
in
movsl
pop
movntq
outsb
notb
or
lds
repz
add
fdivrp
jo
pop
je
aad
repz
cmc
clc
adc
cld
inc
lock
dec
fistl
push
inc
iret
sub
push
xlat
stc
loopne
mov
sbb
and
stc
fiadds
in
sahf
in
xchg
dec
lret
adc
es
pop
sbb
das
scas
mov
jbe
or
xchg
adc
addl
inc
dec
cmp
sub
sti
ss
or
sbb
fistl
in
enter
inc
fldt
adc
and
hlt
aaa
xlat
pop
push
cmp
jmp
rcrb
pop
mov
ret
scas
push
lea
mov
jne
xchg
call
test
cmp
sbb
xor
mov
lock
sub
xchg
push
movsl
or
aad
and
sbb
xlat
mov
sub
mov
sbb
adc
imul
push
add
mov
mov
sbb
add
xor
inc
xchg
xchg
ficoms
lea
ret
inc
inc
adc
outsb
push
mov
jecxz
sti
nop
xor
sub
xchg
xchg
sbb
orb
cmp
fcoml
and
pop
mov
mov
cmp
test
push
inc
push
or
sbb
cmp
in
mov
or
lcall
pusha
sub
sub
dec
pop
pop
push
push
les
or
loope
iret
in
sbb
addr16
jo
fbstp
adc
jne
or
mov
xorb
mov
mov
jecxz
jge
add
cmp
push
das
fwait
into
cli
xchg
xchg
rorb
xchg
in
mov
fwait
arpl
and
pop
cmpsl
xor
in
sbb
pushf
push
pushf
cwtl
movsl
jo
dec
push
shrl
lcall
bound
push
mov
stos
xchg
cmpsb
pop
lcall
push
sbb
aam
stos
je
mov
cmp
movsb
cld
jno
sbbl
fistpl
ret
shlb
mov
push
xchg
outsl
ret
out
inc
inc
lea
enter
scas
out
outsl
cmp
jp
loop
stos
daa
mov
inc
xchg
mov
sbb
ss
ljmp
jl
daa
and
fidivrs
sahf
xor
sbb
repz
add
insl
mov
add
or
into
jmp
fidivl
jns
mov
cmp
xchg
into
mov
je
dec
js
inc
leave
xor
mov
sbb
stos
scas
mov
fdiv
in
mov
sbb
pushf
add
sbb
fs
mov
aam
add
div
fidivl
mov
imul
aam
cmc
sbb
add
icebp
push
xchg
pop
inc
fwait
xor
out
out
inc
mov
jne
aad
mov
ljmp
push
out
push
daa
dec
cmp
dec
adc
in
or
loope
mov
mov
jmp
dec
je
mov
jne
stos
fnsave
jb
imul
icebp
sub
and
popa
jb
in
addr16
xchg
cmp
ret
xor
scas
fiaddl
clc
or
jno
inc
stc
xchg
or
leave
in
xchg
lods
adc
sbb
inc
gs
mov
mov
xor
ja
cs
mov
adc
repz
and
sti
mov
push
repnz
aad
pop
movsb
lahf
mov
shlb
or
xlat
mov
jg
ljmp
popf
mov
stc
daa
pushf
xchg
adc
testb
in
lret
daa
shlb
stos
rep
movsl
lahf
dec
aad
fsubs
mov
dec
inc
shl
push
mov
shll
int3
jl
sub
inc
in
mov
lea
cmc
inc
popa
mov
mov
rcll
cmp
insl
pop
stc
out
mov
adc
fimuls
jae
sub
leave
lcall
xchg
ss
jbe
xchg
jae
into
bnd
test
mov
ficomps
insl
push
mov
js
mov
jge
push
pushf
adc
dec
or
lahf
jae
fdiv
or
mov
mov
mov
sub
mov
add
std
cmp
mov
pop
shl
sbb
adc
cltd
and
jae
in
lock
dec
lret
pop
outsb
outsl
in
lods
mov
popl
add
imul
mov
iret
mov
xchg
add
inc
subl
or
loope
mov
loop
mov
pop
jb
inc
and
ljmp
jg
mov
movsb
scas
dec
or
lret
push
in
sub
test
arpl
sahf
out
push
loopne
sub
mov
arpl
cs
xor
push
in
pop
test
sub
fwait
lcall
sbb
cli
pushl
push
jecxz
jnp
mov
mov
pop
inc
mov
test
jne
pop
movsb
loop
lcall
and
aaa
enter
and
sub
xchg
aad
add
push
sahf
outsl
dec
xchg
mov
sub
push
insb
shlb
mov
jle
stc
pop
pop
adc
aaa
jb
inc
test
pushf
mov
std
repnz
inc
and
ss
std
dec
sub
nop
add
fadds
jl
xchg
hlt
into
jg
test
outsb
mov
aam
jle
and
arpl
inc
in
adc
movl
jb
cmp
movsb
jp
aam
nop
push
cmc
xor
test
addb
clc
inc
lret
inc
insl
testb
leave
or
bound
mov
lea
int3
fiadds
call
or
outsl
int
je
xchg
cmp
jmp
lahf
xor
mov
sahf
sbb
ficoms
dec
mov
push
mov
leave
jnp
fcmovnb
cmp
mov
test
xchg
cmp
sbb
movsb
in
pop
cmp
scas
rcrl
jecxz
sarl
or
jmp
xor
shl
es
xchg
ret
xchg
das
jle
pop
xor
xchg
xchg
xchg
xchg
icebp
mov
movl
data16
getsec
cmp
lock
je
xlat
xchg
mov
stos
xchg
dec
adcl
and
pop
mov
xchg
push
insb
mov
dec
and
mov
int
push
jp
adc
add
inc
arpl
addr16
xchg
mov
mov
xlat
repz
jecxz
shl
ret
pop
xor
and
adc
add
inc
arpl
addr16
xchg
mov
mov
xlat
repz
jecxz
shl
ret
pop
aaa
xchg
mov
daa
add
jae
arpl
out
xchg
mov
mov
xlat
repnz
jecxz
shl
ret
pop
xor
and
adc
pop
push
jae
jecxz
shll
xchg
dec
xchg
sbb
jnp
sbb
sub
cmp
cmp
sub
sbb
or
adc
adc
dec
cmpb
mov
sti
shrl
fcomi
lret
add
adc
and
xor
inc
jnp
imul
dec
xchg
mov
mov
jmp
cltd
repz
sbb
or
cmp
sub
pop
jnp
imul
dec
lcall
mov
mov
movsb
lret
push
jl
and
adc
dec
add
into
jmp
lret
cmp
pusha
cmp
ret
insl
in
stos
pop
jge
hlt
imul
out
push
push
mov
push
xchg
mov
pop
jecxz
or
cld
arpl
cmp
in
jne
xor
mov
aam
insb
push
fwait
pop
jbe,pt
cli
das
sub
and
inc
add
add
mov
aam
mov
pusha
xchg
xchg
fs
fstpt
rcll
and
inc
push
fistpl
hlt
mov
dec
or
inc
push
cld
mov
jmp
pop
sbb
jecxz
jmp
repz
jge
repnz
jnp,pn
jl
push
stos
fimuls
subb
repz
or
and
xor
push
jnp
imul
dec
lcall
mov
sti
lret
jmp
fcomi
mov
inc
jb
bound
pop
xor
sbb
repz
int
lcall
insb
cmp
dec
sbb
das
xor
arpl
dec
rol
fisubs
cwtl
mov
fwait
data16
js
jae
outsb
or
imul
dec
cmpl
mov
sti
shr
jecxz
repz
add
adc
and
xor
inc
jnp
imul
dec
cmpl
mov
sti
shr
jecxz
repz
add
cmp
pushf
test
xor
popa
and
shl
dec
add
out
stos
lods
popf
lea
cli
sarl
stos
in
dec
push
pop
enter
inc
sbb
cmp
dec
sbb
xchg
inc
leave
mov
nop
inc
div
pop
rclb
and
cmp
mov
lds
jne
loopne
stos
jle
pop
xor
test
stc
inc
xlat
scas
inc
push
pop
leave
jmp
push
adc
aad
xor
or
mov
out
inc
das
cli
pop
cmp
or
jns
cmp
out
outsl
popa
aad
mov
fwait
cli
shrl
leave
inc
and
mov
mov
sub
sar
pop
inc
add
fbstp
cmp
xor
cli
or
arpl
movl
jnp
testl
cwtl
sub
dec
fs
pop
pop
jne
ds
pop
jp
ss
mov
and
stos
inc
adc
dec
cmp
cmpsl
das
rcl
lahf
js
iret
dec
pop
fiaddl
negb
xor
imul
mov
insl
sub
mov
xor
and
scas
and
popf
and
clc
pop
push
lcall
jg
pop
int
pop
sub
fnstsw
in
mov
js
pop
pop
add
sti
mov
xor
sbb
push
add
add
push
jecxz
test
pop
xor
enter
or
bswap
sbb
out
aaa
xorb
lds
repz
cmpsl
push
jge
push
loopne
cltd
push
dec
inc
je
js
jns
rcr
cwtl
stos
xchg
in
aad
dec
mov
push
das
icebp
sub
syscall
imul
lea
stc
push
and
cmp
paddd
cs
insb
inc
mov
jmp
mov
out
test
in
sti
lret
aad
jl
pop
out
cmp
cltd
jnp
lret
sahf
int
pop
pop
cmp
fs
insl
subb
addr16
dec
adc
jle
or
jns
fidivrs
les
sbbb
adc
dec
call
mov
xchg
sbb
cld
repz
outsb
add
xlat
int3
push
pop
mov
mov
mov
inc
ret
cmp
popa
jmp
ds
mov
lods
loope
sub
cld
pop
xor
mov
imul
and
test
and
aaa
hlt
cmp
and
pop
fcmovu
das
nop
sarl
bound
icebp
je
test
and
or
jge
repnz
lcall
sbb
sub
sub
and
push
sar
and
dec
sahf
sub
mov
aad
or
adc
add
add
push
mov
jo
std
add
test
or
lea
call
andb
mov
inc
xchg
imul
mov
es
xor
sub
inc
jmp
lea
xchg
movl
mov
shll
in
mov
jbe
sub
cmp
dec
pop
pop
inc
sbb
add
xor
mov
out
mov
aas
xchg
lea
sub
lods
loope
aad
inc
fbstp
sub
pop
jb
mov
push
cmp
xlat
pop
les
jecxz
inc
adc
sbb
xlat
xor
jecxz
addr16
sarl
sub
mov
cmp
jl
mov
fwait
xchg
or
cmp
and
fldcw
aas
fidivl
jno
adc
loope
jns
fstpl
pop
mov
push
adcb
test
loopne
sub
cmp
repnz
stc
ret
pusha
and
fiaddl
xor
mov
in
push
pop
dec
cld
mov
bound
mov
jg
add
nop
jo
mov
gs
push
add
add
addb
pushf
xchg
jge
mov
ret
insl
xchg
dec
icebp
sbb
cmp
in
test
out
aas
ljmp
lea
xorb
cwtl
cmc
mov
out
enter
hlt
cmp
fwait
cmp
mov
xchg
pop
adc
jmp
xchg
push
data16
inc
pop
or
cwtl
and
xor
jb
jecxz
cmp
push
out
xlat
xchg
pusha
mov
jg,pn
mov
xor
ss
sbb
mov
inc
stos
sahf
push
in
jmp
scas
add
dec
test
mov
gs
sub
cwtl
repnz
jg
sti
out
pop
je
test
mov
sahf
dec
out
pusha
test
push
jle
push
sti
dec
ja
mov
cltd
gs
js
loop
jnp,pn
cmp
insl
arpl
fildll
mov
or
pop
add
aam
push
ret
adc
add
out
movl
inc
fnstsw
mov
clc
sbb
es
loop
iret
roll
iret
sbb
and
and
xor
jne
or
mov
je
sbbb
or
push
leave
inc
add
xchg
xor
mov
cltd
rcrl
mov
into
mov
out
fwait
mov
dec
es
mov
mov
shl
iret
sub
bound
call
lock
je
add
mov
dec
sbb
stos
or
and
jo
adc
aas
mov
xchg
xchg
scas
in
cltd
push
call
inc
sub
adc
jo
sarb
cwtl
in
and
mov
pop
imul
out
idivb
cmp
pop
mov
jg
sbb
sub
das
adc
stos
adc
int3
loopne
jo
xchg
outsl
push
movsl
xor
movsl
test
jae
jo
mov
dec
jecxz
or
or
jl
xchg
push
xchg
insb
push
mov
xchg
or
mov
mov
push
xor
aaa
push
mov
mov
cwtl
jns
fwait
xchg
pop
inc
mov
pop
cs
adc
xchg
and
stos
shll
iret
pop
les
nop
add
mov
dec
nop
ja
pusha
repnz
push
cltd
sahf
pop
dec
icebp
cmp
inc
jp
adc
sbb
xorb
loope
mov
push
xor
push
scas
push
scas
arpl
cmp
mov
push
cwtl
aaa
push
push
in
xlat
je
sti
jp
push
jbe
jne
jmp
cmp
adc
lcall
ja
test
enter
enter
repz
pop
iret
mov
cmp
add
mov
sahf
and
xchg
pop
inc
aad
fldt
jb
fnstcw
fimull
test
hlt
js
add
ret
pop
push
leave
lds
jp
mov
sub
inc
fildll
cltd
rorb
inc
pop
loopne
mov
out
or
jl
pop
in
out
mov
jle
jnp
mov
pop
gs
shrb
std
sub
xchg
outsl
xor
pop
imul
mov
pushf
mov
insb
je
or
loopne
in
sahf
outsb
or
sbb
imul
mov
push
sbb
push
push
jae
stos
out
jbe
pop
jbe
jbe
stos
popa
lds
lret
push
dec
sbb
push
popf
push
bound
jbe
mov
sub
roll
lahf
in
jge
push
add
popf
sub
sub
pop
lds
push
dec
mov
dec
lcall
ret
fisttps
imul
fs
adc
mov
cli
sub
inc
pop
leave
repnz
stc
sbb
nop
and
cmp
and
cli
in
cmp
jecxz
or
xchg
sbb
movsb
push
inc
xchg
push
jecxz
xor
jnp
js
mov
insl
les
in
add
dec
or
adc
sbb
adc
lret
add
ret
popa
and
pop
jg
test
imul
mov
mov
dec
jb
lods
mov
cmc
push
inc
ret
int3
mov
mov
fmuls
sbb
add
add
into
xchg
push
push
out
test
pop
jo
sbb
pop
ret
dec
fs
add
inc
mov
out
iret
push
adc
in
xor
add
iret
inc
icebp
sub
pop
lret
jnp
fdiv
out
shrb
pop
sub
xchg
lds
inc
push
adc
daa
gs
insb
loope
jecxz
aas
mov
pop
dec
sbb
imul
aas
pop
mov
mov
and
mov
mov
cs
and
and
mov
pushw
and
mov
pop
add
jge
icebp
jae
into
sub
push
test
xchg
fisubs
push
adc
xor
lcall
fisubrl
pushf
and
mov
jg
dec
roll
orb
cmp
xor
sub
mov
jle
fld
jp
pushf
scas
test
cld
jns
jbe
dec
add
cmp
inc
pop
in
syscall
sbb
psubq
das
stos
inc
call
jns
es
fwait
cld
lcall
push
aas
push
mov
inc
test
ficoml
or
add
stos
pop
daa
pop
stc
neg
inc
ljmp
in
aaa
adcb
sub
mov
add
xor
arpl
xchg
pop
or
dec
outsb
shll
mov
pop
jle
jne
hlt
bound
into
mov
adc
jae
call
add
lcall
fisttps
jo
and
psraw
lahf
movsb
std
sub
andb
cmp
sbb
xchg
shlb
lcall
jns
enter
jg
insl
repnz
pop
or
aas
cmp
mov
test
push
pop
inc
adc
rcrl
mov
icebp
test
xor
sti
test
aad
nop
push
pusha
mov
in
adc
outsb
inc
mov
pop
lret
dec
fdivrp
or
lock
enter
add
mov
and
ljmp
mov
cmpl
sbb
test
fwait
mov
jl
mov
scas
mov
ja
scas
and
stos
mov
mov
arpl
pushf
dec
ds
clc
inc
xchg
add
fmuls
stos
xor
mov
mov
jge
cwtd
mov
repnz
xchg
es
aam
adc
lds
sub
pop
or
insl
sbb
cld
fistps
inc
call
imul
punpcklwd
fsts
dec
cmpsl
iret
cmp
jg
xor
mov
lcall
push
and
in
and
push
loop
movswl
loop
cmp
frstor
mov
push
jo
mov
pop
adc
and
xor
mov
aad
and
push
notl
das
sub
mov
or
mov
fcmovne
jns
cmp
push
lds
dec
push
ljmp
stos
lods
pusha
cmp
repnz
add
mov
arpl
cmp
das
xlat
pop
jg
mov
sub
andl
xchg
pusha
pop
jecxz
fbstp
ljmp
cmpxchg
mov
icebp
xchg
pop
xor
dec
pop
mov
push
sbb
loope
fsubrl
ror
mov
pop
testl
notl
decb
ret
or
xor
loopne
push
ds
push
jecxz
addb
fistpl
cmp
imul
and
sar
jae
cmp
push
mov
shlb
sub
xorb
jno
jae
adc
pop
inc
in
pop
jne
sbb
icebp
push
cmpsl
scas
push
xor
les
loop
into
jge
sub
je
pushl
imul
ficompl
mov
mov
rorb
mov
add
in
in
mov
sbb
arpl
or
adc
loopne
adc
pop
pop
jns
rcrb
movsl
ja
outsb
mov
test
lcall
les
js
sbbl
ss
or
xchg
int
stos
adc
shrb
aad
lock
icebp
ret
or
ljmp
sbb
sub
mov
outsl
arpl
xor
jle
sbb
pop
fs
loopne
fistps
mov
out
adc
sahf
vmptrst
cmp
mov
pushf
pop
jg
add
xchg
mov
lahf
fcompl
cltd
jnp
lcall
or
popa
addr16
cmpsl
cltd
cmpl
sbb
and
or
mov
inc
and
scas
adc
outsl
andb
add
xchg
stos
jge
test
enter
cmp
scas
push
push
xor
insb
idivb
dec
sub
out
test
lcall
shll
mov
lcall
sub
movsl
dec
add
or
lds
xor
mov
xor
xor
pop
mov
call
stos
ret
cmp
pop
imul
push
inc
mov
pop
insl
xchg
push
and
push
mov
lea
or
mov
push
das
xchg
cmpsl
cli
add
loope
sti
aam
scas
sbb
imul
repz
jb
mov
lcall
loopne
xchg
rcr
ja
das
cmpsl
jo
maxps
test
mov
aas
mov
jnp
lahf
in
popf
mov
sbbl
push
fiaddl
pop
push
leave
stc
scas
mov
inc
mov
inc
imul
mov
fs
and
pop
int
mov
mov
fdivs
xlat
mov
adc
shr
mov
inc
pusha
inc
adc
aad
push
lret
push
mov
jnp
dec
clc
add
xor
bound
scas
stos
stos
jbe
pop
jmp
or
dec
push
xchg
mov
mov
add
mov
repz
aam
jbe
xchg
add
lret
fs
arpl
mov
in
inc
push
add
jg
fadd
repnz
ficoml
pop
mov
or
gs
sub
addr16
mov
cmp
enter
push
roll
das
fs
add
out
mov
add
in
gs
fisubs
sub
pop
xor
cmp
popf
in
mov
fwait
mov
and
or
mov
jbe
in
std
aaa
dec
adc
push
pusha
mov
sbb
fnstenv
dec
sub
test
add
mov
inc
jb
arpl
mov
shl
xchg
mov
loopne
aaa
je
jae
cmp
push
fs
adc
jecxz
or
xchg
imul
ss
popa
add
pop
ret
fwait
outsb
pop
fcompl
int3
pop
adc
adc
jmp
lods
dec
sub
fnstenvs
cmp
push
aad
and
ret
fcmovnb
pop
popa
int3
jbe
in
je
test
sbb
div
or
mov
pop
sahf
inc
pop
movsb
rorb
mov
or
add
std
sub
pop
pavgw
jge
adc
cmc
sbb
test
popf
mov
es
adc
loop
pop
cmpl
shrb
mov
inc
pop
imul
outsl
mov
into
and
inc
sbb
push
ret
mov
dec
push
pop
cmp
ficomps
mov
in
push
mov
nop
dec
mov
fadd
push
fidivs
lods
inc
mov
ja
aas
lds
inc
mov
popa
outsb
lret
xor
sbb
sbb
lcall
fcmovbe
inc
jnp
and
jl
cwtl
loopne
int
jp
repz
or
cmp
add
fwait
cld
pusha
shr
les
xchg
in
sarb
sahf
lcall
ret
lods
repz
push
lcall
cmc
lock
sbb
repz
or
mov
sbb
cmp
fildl
cmp
scas
push
push
xchg
mov
xchg
jns
pusha
sub
sti
dec
adc
adc
jae
dec
mov
push
jo
scas
lds
arpl
lcall
mov
fcoml
repnz
dec
popf
fimull
call
inc
and
cltd
inc
ljmp
fisubrs
into
mov
mov
cmc
jb
inc
mov
fistl
ja
enter
cmpsb
test
xchg
je
dec
push
cld
mov
mov
sub
dec
mov
jo
adc
inc
pop
sahf
add
mov
add
and
mov
mov
xchg
push
sub
mov
dec
sbb
add
je
sbb
mov
push
dec
mov
add
cwtl
mov
cltd
cmp
pushf
xchg
xchg
mov
out
rcll
divl
inc
pushf
leave
loop
gs
lahf
mov
into
rcrb
mov
push
jp
testb
dec
ja
sub
xor
add
inc
mov
xchg
out
fcoms
enter
int
lahf
aad
pop
repz
int3
lret
lea
ss
clc
out
or
daa
push
lds
pop
cmc
push
in
lret
sub
or
mov
adc
jmp
mov
jg
or
adc
rorl
or
mov
push
fisttpl
and
add
bound
je
mov
inc
iret
cs
cmp
pop
push
push
xor
movsl
adc
add
call
fcomps
pop
aaa
pop
sub
sti
sub
pop
dec
ds
bound
bound
or
fbld
js
lcall
sub
mov
or
mov
pop
jno
mov
mov
mov
pop
lret
fwait
sbb
push
fcoml
jns
or
daa
sub
into
jg
and
dec
dec
lock
repnz
cmp
mov
pusha
push
cltd
fwait
mov
dec
popf
mov
lcall
adc
pop
dec
insb
enter
int3
cmpb
in
mov
dec
mov
loop
and
and
xor
fisubl
call
adc
lea
xchg
imul
jb
enter
pop
xor
enter
enter
imull
nop
xor
les
stos
fs
cltd
stc
mov
data16
and
fistpl
fldz
test
fidivrs
fstpl
mov
cmp
mov
xor
dec
cmc
push
stos
rolb
mov
push
and
adc
xor
into
cli
mov
into
call
cli
mov
pop
jns
mov
jb
pop
insl
cmpsb
or
jp
push
xor
add
adc
out
adc
push
adc
pop
call
and
mov
ret
push
das
pusha
pop
jle
cmp
dec
lods
stc
cmp
stos
pop
cmp
shlb
or
movl
aad
push
std
mov
fbstp
and
add
adc
loopne
mov
xor
insb
xor
mov
inc
jp
mov
inc
out
lods
inc
inc
jp
shl
cwtl
push
adc
jge
push
push
dec
hlt
xchg
mov
sbb
aaa
jle
shlb
pusha
adc
movsb
jg
dec
xchg
mov
adc
mov
jp
adc
sbb
xchg
pop
jle
out
push
jne
sbb
div
sub
dec
ret
mov
pop
xor
jmp
popa
inc
std
popa
inc
sub
lods
pop
xchg
add
sbb
dec
std
into
stos
dec
lods
cwtl
cltd
jns
jp
add
outsl
dec
into
xor
push
test
mov
mov
loope
xchg
in
adc
fistl
mov
lahf
mov
fwait
sti
pop
out
mov
sub
sbb
xchg
dec
mov
fnstsw
int
lcall
sub
insl
mov
cmpsl
adc
sti
cmp
in
or
aad
mov
shll
mov
js
add
sbb
mov
lods
pop
movsl
jo
sbb
push
push
div
xor
shll
pop
pusha
dec
xlat
lret
push
cld
gs
jle
jg
sub
adc
dec
or
dec
imul
es
daa
mov
mov
fildll
xchg
outsl
arpl
push
or
and
jno
das
mov
mov
sbb
xchg
push
lock
push
pop
and
ljmp
xchg
ret
fiaddl
sbb
in
pop
xor
clc
cmp
push
or
hlt
movsl
cltd
inc
ja
mov
cmp
and
inc
cwtl
fstl
enter
pop
cmc
adc
int3
dec
or
jp
push
jg
idivl
pusha
mov
nop
fcompl
inc
pextrw
push
cmp
mov
mov
jbe
mov
sub
sub
pop
xchg
inc
or
repnz
mov
and
rorl
pusha
inc
adc
js
jge
aas
outsb
mov
mov
popa
ja
out
inc
pushf
aam
push
pop
inc
mov
shrl
xor
lcall
pop
dec
pop
test
or
and
das
outsl
xchg
jnp
sub
pop
xchg
jo
stos
loope
jp
jg
push
sub
jl
pop
call
stc
mov
adc
mov
je
mov
repnz
ret
push
movsb
lods
pusha
out
int3
sub
push
idivl
add
pop
stos
clc
aad
aaa
xlat
aaa
jp
dec
shlb
jg
xchg
subl
inc
cld
call
xor
and
lret
shll
lcall
test
cli
inc
xchg
add
or
xor
sub
sbb
or
push
imul
dec
cmpl
mov
sti
shr
jecxz
repz
add
adc
and
xor
inc
jnp
imul
dec
cmpl
mov
sti
shr
jecxz
repz
add
adc
inc
jnp
jmp
pop
jae
cmpl
stos
mov
sti
shr
jecxz
icebp
lret
add
adc
and
xor
inc
jnp
imul
repz
jl
insb
add
fwait
mov
mov
pop
adc
and
xor
out
gs
push
into
inc
fidivs
out
sahf
mov
pop
lds
movsl
mov
push
xchg
push
adc
gs
cmp
inc
fidivs
mov
jle
dec
lds
pop
movsl
cmp
push
test
int
xchg
out
popf
sub
add
pop
mov
popa
xlat
dec
sarl
mov
sub
xor
jg
insl
jno,pn
mov
xor
movsl
mov
icebp
andl
mov
dec
cwtl
jno
popa
add
cmp
xchg
jp
mov
xchg
and
push
cmp
mov
in
shlb
pop
push
mov
add
scas
and
sbb
mov
adcb
rorl
movsl
mov
mov
add
fsubrs
sahf
xchg
adc
sub
cs
pop
mov
push
ss
sbb
xor
movb
adc
mov
mov
xchg
or
sbb
stc
xor
push
xlat
inc
scas
pop
mov
xor
mov
ss
cmpsl
adc
pop
sbb
pop
mov
stos
cmp
fbld
add
jle
dec
mov
cmp
popa
loopne
cmp
and
pop
scas
inc
lock
push
lods
xchg
sbb
pop
int3
pop
lret
imul
xor
push
fwait
popfw
and
sahf
cmc
outsb
in
aad
lds
movsl
ds
push
test
jne
gs
push
into
inc
fidivs
mov
jle
dec
lds
movsl
ds
push
test
jne
ret
in
xchg
dec
test
cli
and
cmpsl
sbbl
inc
std
dec
inc
and
sub
or
and
lret
jae
test
lret
stc
push
inc
in
push
push
sub
insl
push
andb
cmp
xor
test
jge
mov
adc
xchg
sub
movsl
or
mov
and
sub
jg
ja
stos
jae
jno
add
rcr
lahf
jmp
loopne
loop
icebp
aad
sub
xor
adc
icebp
icebp
xor
xor
xor
js
data16
mov
xor
adc
mov
lret
sahf
adc
cwtl
push
stos
push
or
scas
aad
and
jp
shrl
movsb
in
push
dec
xlat
aaa
jmp
push
daa
add
dec
arpl
sub
push
into
pop
or
stos
mov
pop
push
xchg
dec
stos
std
push
test
push
bound
jno
pop
adcb
xchg
aam
mov
pop
stos
jb
scas
mov
cmc
mov
xchg
dec
test
add
mov
les
lret
aam
xorl
popf
xchg
xchg
loopne
enter
lcall
inc
in
out
sbb
mov
in
add
outsl
jo
mov
xlat
adcl
jnp
xchg
push
xor
ja
pop
dec
test
lods
jo
sub
pop
jbe
int
pusha
pop
repnz
xor
sub
push
ljmp
mov
jle
imul
lcall
ret
negl
sbb
jl
lret
xchg
add
adc
in
lds
testb
push
jmp
add
cmpsl
aam
xchg
sbb
loop
sub
fisttps
mov
sti
or
fmull
cmpsb
cmp
pop
setle
cwtl
inc
daa
add
scas
adc
xor
jmp
sbb
pop
and
cmp
pop
fidivs
mov
push
scas
xchg
jb
adc
rclb
pop
push
out
sub
xchg
ret
cld
gs
fdivrs
mov
sbb
or
sbb
adc
mov
popf
lret
cmc
or
test
in
mov
pop
inc
dec
imul
lret
push
jp
mov
or
pushf
test
les
adcb
mov
popa
xor
cmp
sub
cmp
push
jns
lea
pop
movsb
cmc
fidivs
or
cwtl
mul
mov
notb
pop
fbld
mov
adc
ror
mov
scas
adc
and
rol
add
movsb
mov
or
movb
xchg
dec
inc
hlt
cmpsl
ret
and
and
loope
xchg
cwtl
iret
xchg
and
jg
rorb
mov
inc
cmp
push
inc
xor
adc
dec
dec
shl
mov
stos
shl
stos
js
lods
sub
xor
call
lods
xchg
jmp
mov
pushf
aas
fwait
push
repnz
pushf
mov
stc
cmp
imul
jne
cmpsl
push
inc
out
std
not
or
je
push
lods
test
pop
and
mov
test
out
fiaddl
or
call
jns
fcoml
and
adc
call
cs
or
mov
xor
mov
mov
pop
arpl
lds
inc
mov
mov
std
push
cmp
mov
cld
pop
jmp
out
cvttps2pi
inc
insb
popa
das
rolb
cmpl
mov
mov
in
loop
xlat
inc
aam
fxsave
movsl
jbe
jbe
mov
jno
push
push
adc
scas
cwtl
negl
mov
push
pop
lods
pusha
mov
pushl
xchg
and
jg
sbb
xor
inc
pop
mov
out
xchg
adc
jbe
rcrl
mov
jbe
add
fildl
and
cwtl
imul
sub
fs
inc
mov
xor
in
sbb
inc
inc
mov
sbb
or
test
jge
icebp
and
test
ja
mov
in
xchg
cmp
sub
mov
int3
mov
in
xor
lahf
and
stos
xchg
stc
outsb
pop
sbb
js
repz
out
or
je
sub
ja
jge
scas
rorb
jae
mov
repz
sub
sub
xchg
adc
push
cmp
test
or
xchg
rolb
adc
inc
cwtl
jo
and
add
jmp
int3
xor
push
adc
pusha
ljmp
ret
icebp
lock
ds
out
dec
mov
jmp
les
ficoms
sub
and
hlt
xorl
jo
sbb
push
sbb
shrb
inc
enter
ret
nop
loope
xorb
inc
mov
pop
sub
pop
mov
inc
mov
cmpl
mov
addr16
dec
negb
ret
lea
pop
lcall
push
inc
pop
lea
adc
lcall
pop
push
mov
and
inc
in
sahf
vpxor
es
fisubl
jne
scas
testl
pop
sti
in
pop
cmc
jo
lahf
sub
sub
sbb
jae
mov
ja
xor
pop
mov
adc
mov
jl
loop
mov
cmpsl
scas
jb
dec
movsl
sub
repnz
adc
mov
push
andb
cld
mov
xor
sub
in
ret
mov
adc
dec
mov
inc
mov
adc
fildl
inc
xor
insb
dec
imul
roll
in
cmpsl
sbb
pushf
aaa
repnz
jmp
mov
adcb
dec
and
negb
stc
cli
es
hlt
and
xchg
cmp
cmp
sub
or
mov
sbb
loop
pop
faddl
adc
xchg
or
ss
pop
int
push
inc
mov
imull
mov
lds
ljmp
es
lods
mov
stos
and
xchg
lea
shlb
pop
in
iret
mov
and
test
subw
lret
outsb
jge
mov
movsl
jg
inc
in
xchg
sbb
add
fsubrl
aam
add
jl
xor
mov
jo
inc
dec
push
or
mov
repz
lret
push
ficomps
push
dec
out
sbb
xchg
pusha
adc
pop
aam
xchg
jb
cmc
div
mov
sbb
stos
lods
mov
ljmp
lea
xor
and
ja
cmp
inc
sbb
push
rcl
or
cwtl
out
mov
mov
mov
repnz
pop
push
pop
scas
popf
or
dec
lock
loopne
scas
hlt
lock
jbe
mull
xchg
dec
dec
jo
out
push
mov
mov
int3
repz
mov
xchg
dec
or
lods
mov
cmpsl
pusha
pop
loopne
mov
insb
push
dec
pop
jnp
mov
mov
lahf
cmpsb
mov
mov
add
pop
fidivl
sbb
sbb
adc
std
ds
push
aad
mov
dec
fdivrs
mov
out
in
hlt
testl
mov
mov
cltd
xchg
fbld
push
and
fwait
mov
movsb
ret
dec
pushl
xchg
testb
cwtl
mov
sbb
nop
hlt
in
sbb
and
lea
call
cmp
movsb
fstl
xchg
sub
xor
aad
xor
fmuls
push
addl
jo
and
out
mov
dec
sbb
cmpb
bound
cmp
jmp
fsubl
lods
mov
aas
stos
xchg
aam
lods
fldl2t
xchg
jne
addl
lret
inc
xchg
push
arpl
and
jns
call
int
push
das
iret
arpl
ljmp
inc
mov
xchg
enter
cmpsl
pop
imul
test
jno
lea
mov
xchg
jb
and
mov
or
adc
pop
cmp
mulb
push
or
cmp
sahf
mov
push
jb
adc
xchg
in
sti
mov
mov
lret
mov
inc
pop
pop
jno
adc
imul
and
jecxz
jae
mov
add
push
pop
and
jmp
pusha
and
mov
pop
inc
cld
stos
popf
dec
xlat
stos
and
push
lods
sbb
mov
push
or
outsl
shrb
mov
pop
adc
mov
mov
mov
and
adc
dec
add
bound
xor
test
sbb
int3
popf
in
pop
pushf
fwait
std
insb
and
xchg
sti
xchg
adc
push
mov
sbb
fsubl
lret
xchg
push
mov
andb
mov
sub
sbb
jecxz
pop
adc
mov
sbb
jo
or
xor
jmp
sarl
outsb
pop
ss
lcall
lods
sbb
cmp
sub
popf
mov
inc
mov
dec
lret
pop
out
jp
ret
in
js
stos
sbbl
adc
out
mov
sub
shll
nop
negb
insl
sub
rcr
outsl
test
jmp
pop
ljmp
sahf
xor
dec
add
mov
cs
test
xchg
nop
mov
addl
in
add
fwait
ds
or
ljmp
push
pop
push
fisttpll
aam
pusha
lea
inc
push
bound
pop
push
mov
pop
push
jle
test
or
clc
push
push
sbb
xchg
push
mov
into
adc
adc
inc
or
push
xchg
cmp
push
push
movsl
cmpsl
or
jecxz
add
jb
je
lods
cld
repnz
or
inc
je
mov
inc
jno
stos
sbb
lahf
aad
mov
inc
add
call
rcll
push
mov
fistpl
or
xchg
lods
addr16
mov
test
out
movsb
push
xchg
dec
or
or
fwait
cmp
loopne
pop
dec
cmpb
je
stos
movsl
xchg
dec
loop
loope
in
dec
pushf
iret
xor
adc
fs
enter
out
add
enter
mov
cs
jo
ljmp
mov
push
addr16
adc
and
rcrb
and
sub
push
int3
mov
sahf
mov
sti
inc
push
rolb
fisttps
lcall
adc
adc
pop
xor
sbb
in
dec
shll
pop
cmp
dec
arpl
jno
pop
out
lcall
jge
and
popf
rcll
or
xchg
lahf
mov
stos
jl
js
sahf
notl
std
fcompl
in
or
cmc
shll
or
pop
sti
sub
into
loope
xchg
adc
arpl
popa
xchg
pushl
arpl
lret
pusha
movsl
cmp
fs
js
sbb
xor
mov
clc
add
jns
and
dec
mov
lcall
lods
mov
imulb
rcrb
fisubs
jl
cmp
pop
pop
jl
jp
sbb
or
mov
push
test
jne
inc
and
ret
jmp
out
sub
call
xchg
mov
dec
in
push
in
xchg
sub
insb
sbb
inc
idiv
sub
imul
push
out
stos
pop
pop
into
daa
sub
cmp
lods
fists
inc
and
mov
test
daa
data16
mov
das
rcrl
test
xor
rorl
xchg
in
pop
mov
mov
inc
pop
cmp
out
aam
jp
outsb
icebp
push
mov
xor
mov
addr16
mov
mov
xlat
pusha
mov
inc
stos
add
jle
sbb
push
ret
pop
outsl
scas
or
repz
pop
xor
je
jae
push
pop
or
push
test
cli
in
xchg
rclb
fmull
shlb
push
jae
adc
ljmp
mov
das
movl
dec
push
pop
mov
ss
movsb
andb
sti
arpl
xor
mov
pop
test
dec
repnz
lret
jge
adcl
xor
cmp
cmp
jno
sysenter
outsb
pop
inc
popf
mov
adc
cli
xchg
stos
clc
jecxz
mov
adc
jp
mov
push
jbe
xchg
adc
xchg
cli
mov
push
inc
ss
ret
xor
or
aaa
cli
adc
and
aas
xor
sub
push
in
add
inc
daa
enter
fstpt
neg
dec
lret
scas
mov
out
scas
scas
rclb
push
fisttps
imul
push
mov
dec
adc
cmp
xchg
mov
fadd
sub
cli
stos
jno
and
sub
inc
test
jns
hlt
fisttps
aad
gs
xor
into
mov
out
or
sub
sbb
mov
sub
pop
out
mov
into
insb
lods
pusha
xchg
sahf
pusha
test
xchg
bound
pop
mov
jge
ds
movl
and
imul
in
imul
cmpsl
mov
and
in
iret
bound
popf
stc
sbb
sti
xor
out
adc
adc
out
sbb
sbb
out
das
shll
clc
dec
or
and
fsubs
jmp
dec
xchg
mov
sub
cli
jae
xchg
lret
rorl
cld
std
mov
lds
loop
sub
pop
adc
inc
sahf
xchg
nop
lret
repnz
sub
hlt
mov
out
mov
test
cwtl
and
jle
cmp
xchg
and
cmpl
loope
push
dec
jge
push
repz
jbe
cmp
jmp
ret
dec
movsl
xchg
mov
xor
xchg
dec
in
stc
and
adc
jnp
inc
les
jns
jge
pop
cmp
std
sub
xor
push
xchg
out
idivb
add
or
pop
scas
jle
pop
pmaxub
out
aam
aaa
pushf
int
push
test
aaa
lahf
fstps
mov
push
pop
je
inc
data16
mov
pop
rcrl
or
add
xorb
leave
call
andb
push
lcall
or
jns
ret
pop
push
test
dec
enter
sbb
int
mov
mov
enter
fwait
movsl
push
or
sahf
sbb
push
es
andb
pop
jne
in
rclb
insb
dec
push
out
inc
xchg
insb
mov
nop
or
movsb
scas
pusha
mov
push
rorb
loope
cmp
adc
push
icebp
mov
push
aam
push
inc
nop
ss
xor
sub
je
cwtl
xlat
into
lods
mov
pop
imul
enter
lret
insl
sub
xor
sub
ss
fisubs
xchg
sahf
call
add
into
jmp
addr16
push
jnp
pop
je
sti
dec
and
nop
rcll
inc
add
cwtl
idivb
ret
mov
fstps
int
mov
cwtl
hlt
pop
sub
movsl
loop
hlt
addr16
xor
xchg
adc
push
clc
cmc
push
mov
addr16
sbb
sub
jmp
fldt
mov
in
aas
mov
leave
mov
loopne
js
iret
mov
mov
pop
mov
jmp
sbb
dec
adc
and
mov
mov
aaa
xor
and
out
cmp
push
or
cmp
sub
rorl
sbb
dec
imul
ficomps
lods
inc
in
sbb
mov
sub
mov
addb
in
test
inc
cmpsl
jmp
pslld
sbb
insl
lret
mov
mov
add
call
int3
pop
out
out
out
mov
jns
hlt
jp
idivb
mov
fsubrl
mov
ds
stc
test
push
inc
mov
adc
rcr
andl
sbb
push
or
imul
sub
lret
pop
dec
stos
push
mov
enter
and
repnz
imulb
rorb
pop
rol
jo
sub
movsb
or
jno
xor
call
push
out
and
sub
pop
sub
inc
ljmp
push
fs
ss
enter
fldcw
sbb
mov
imul
movsb
sar
ret
lret
insl
jnp
int
scas
sub
mov
ret
out
sahf
loopne
sahf
orl
ret
xor
fwait
daa
sub
addr16
dec
pop
pop
xchg
xchg
movsl
push
mov
add
movl
imul
in
jle
mov
pop
push
and
test
lret
adc
fsubrp
mov
xchg
cmp
xchg
faddl
inc
jg
sahf
xchg
adc
jns
xor
dec
adc
out
push
add
ret
jmp
xchg
lods
int
and
ss
lret
out
dec
sbb
insb
mov
jae
ja
xor
xor
mov
lods
stc
xchg
xor
mov
and
push
mov
pop
mov
xchg
imull
adc
out
inc
xchg
sbb
mov
es
clc
fdivl
outsl
es
adc
call
cmp
pop
add
xchg
push
arpl
xor
adc
mov
cltd
sub
sar
cmp
in
push
sbb
push
xor
add
push
popa
fildl
stos
adc
and
fisttps
popa
xchg
andb
sar
cs
hlt
push
shrb
mov
add
jmp
cmp
in
inc
push
into
frstor
xchg
es
push
cli
adc
add
mov
scas
sub
add
out
push
dec
ss
jecxz
insb
jl
xlat
push
es
js
cmc
aad
xor
pop
loope
loope
or
fisubs
mov
shlb
xor
mov
rcrb
mov
lock
ljmp
add
cmp
mov
jns
or
pop
xchg
pop
lods
loope
lea
aas
xchg
dec
es
jge
mov
mov
stos
scas
mov
sti
push
sub
mov
and
jecxz
gs
pop
cltd
ja
mov
test
nop
sub
xor
imul
mov
mov
mov
pop
pop
fisttpl
and
das
inc
jne
test
in
imul
jge
xchg
jp
jnp
push
push
repz
xorb
xor
aam
inc
shll
mov
lret
adc
xchg
cmc
cld
pop
cmp
dec
into
or
arpl
pop
aaa
mov
cmp
das
mov
lcall
ficompl
push
das
out
aas
sbb
ja
mov
mov
cli
mov
js
jb
lock
inc
notb
mov
jb
lret
fadds
pusha
mov
jae
pop
sbb
fistps
popa
cmp
or
mov
sbb
or
sub
movsb
jae
cmpsb
movsl
scas
push
pop
jne
mov
hlt
in
cmp
pop
into
negb
push
inc
adc
adc
psubusw
lret
cld
call
bound
xchg
inc
ret
fstpl
aad
pop
loopne
or
dec
pop
or
data16
fstp
push
hlt
daa
cwtl
add
mov
push
ljmp
imul
inc
outsl
shl
pop
pusha
loope
ficomps
shlb
sarl
and
outsb
adcb
add
jb
inc
mov
mov
je
adc
push
loope
add
lcall
inc
test
ljmp
hlt
fnstsw
push
aad
pop
out
daa
mov
popa
rorl
addr16
or
aas
pop
xchg
js
inc
roll
xlat
fidivrl
aad
or
and
pusha
jg
pop
mov
xor
push
leave
mov
cmp
jae
mov
push
popf
pop
mov
das
mov
inc
loope
or
ret
dec
lahf
imul
pop
pop
in
in
jbe
orl
mov
out
out
push
xchg
sbb
xlat
repnz
int3
cmp
mov
repnz
push
jne
imul
mov
cmc
mov
sub
add
cmc
mov
push
xchg
je
sub
sbb
ljmp
and
pop
imulb
lods
bound
push
lods
inc
out
jb
test
add
cmp
cmp
icebp
sbb
cltd
out
rol
xchg
xchg
fwait
inc
shrd
pmullw
fisubs
push
inc
fnstsw
cmpsl
data16
ljmp
into
inc
fidivs
mov
jle
dec
lds
movsl
ds
push
test
jne
gs
push
into
inc
fidivs
mov
jle
dec
lds
movsl
ds
push
test
jne
push
xor
scas
and
sahf
cmc
outsb
in
and
cs
xchg
or
popa
ljmp
xor
mov
aam
dec
lds
ret
inc
push
jp
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
data16
pop
inc
insl
push
std
das
rclb
imul
ffree
in
std
cmpsb
lea
mov
inc
insl
push
jge
or
push
dec
out
idiv
in
std
cmpsb
loop
popf
xchg
xchg
mov
inc
lds
xor
and
ret
push
and
mov
mov
cmpsb
fcmovb
hlt
mov
inc
sbb
sub
cmp
in
xor
addr16
das
sarl
outsb
call
mov
stos
shll
ss
insl
jg
call
sub
icebp
mov
xor
ja
push
jae
in
int3
mov
pop
inc
jecxz
pusha
push
jo
lods
cmp
lods
lea
test
lds
leave
jne
push
ret
jnp
daa
fsubrs
add
mov
out
xor
ds
clc
fldcw
push
pop
cli
and
dec
dec
sub
neg
ss
jns
xchg
inc
pop
lea
inc
or
insl
push
shll
mov
bound
xchg
cmp
jmp
ss
out
negb
std
mov
mov
xchg
roll
pop
adc
push
inc
jns
jb
inc
xchg
pop
xchg
mov
xchg
and
imul
jecxz
out
adc
add
bound
inc
inc
push
push
xchg
test
mov
fst
shr
int3
cld
add
jbe
add
ss
out
neg
in
std
cmpsb
lea
mov
inc
insl
push
jge
or
push
cmp
in
std
cmpsb
lea
mov
fcmovne
sub
xchg
les
push
jae
jbe
or
mov
lea
pop
pusha
imul
aas
inc
or
jge
sbb
lea
sahf
pop
mov
stc
sbb
popa
push
push
bnd
cltd
lods
sbb
cmp
xchg
or
or
xchg
pushf
mov
sub
dec
es
test
push
pop
jns
lahf
xchg
pop
push
inc
pop
aam
sbb
loope
jle
sahf
cmc
inc
xchg
xor
sbb
pop
subb
ret
mov
pop
dec
pop
nop
imul
fdivs
cltd
mov
out
cltd
dec
inc
xor
out
mov
out
pushf
cli
out
pop
int3
push
mov
push
mov
pop
inc
jno
arpl
jb
aad
push
fistps
mov
aad
or
jnp
push
push
pop
ja
jle
sub
xchg
loope
xor
and
addb
mov
or
push
insb
push
mov
jmp
pop
jle
cmpsb
movsb
mov
sbb
sbb
repnz
pop
push
jecxz
in
inc
push
inc
iret
shl
lcall
or
xchg
push
xchg
lret
xchg
fs
adc
inc
sar
adc
mov
dec
mov
add
adc
inc
inc
mov
mov
lods
fidivrs
icebp
pop
mov
loop
push
xor
imul
fwait
mov
fcmovbe
inc
aad
rclb
lretw
mov
ds
jne
loop
loop
mov
add
fistpl
push
icebp
pop
add
shlb
ds
sbb
xor
js
stc
out
sub
inc
jne
push
pop
push
test
inc
dec
xor
xchg
inc
xchg
daa
ljmp
imul
add
inc
and
xor
fwait
scas
out
push
aad
js
es
stos
int3
loop
das
std
mov
jne
adcl
iret
or
pop
jns
xchg
int
scas
nop
in
and
mov
sbb
pop
insb
repz
mov
cld
stos
mov
mov
subl
jns
adc
jle
xchg
test
lock
xchg
dec
shll
pop
jle
and
in
dec
mov
stc
in
mov
cmpb
jl
dec
jp
xchg
dec
dec
out
fdivr
movsl
adc
adc
push
push
in
inc
jns
daa
mov
aas
inc
popa
orb
jae
jge
or
nop
lods
in
dec
lcall
pop
fcomi
insb
je
fdivr
sub
lock
in
int3
adcb
push
bound
int
mov
ljmp
popa
add
mov
jb
dec
popa
jne
scas
xchg
push
dec
add
mov
aaa
stc
out
test
add
das
xor
fisubl
jo
lds
and
mov
jl
lret
and
stc
and
int3
pop
cmpsb
xlat
test
sub
or
in
xchg
mov
imul
jle
sbb
xchg
push
outsb
insb
and
inc
fsubrl
push
jbe
mov
mov
movsl
xor
ljmp
cmp
jg
and
movsl
ljmp
aaa
xchg
sbb
js
jnp
xorb
push
pop
cmp
cld
les
shrb
sub
or
sub
stos
sub
xchg
sbb
repz
xchg
adcb
xchg
inc
pop
in
pusha
je
pop
sbb
lock
ss
fmull
add
out
sub
pop
xchg
add
into
ror
mov
cmp
sarb
pop
mov
std
leave
imul
pop
mov
jae
dec
sbb
jp
sbb
mov
mov
lcall
jbe
lahf
cmpsl
testl
mov
movsl
or
xchg
roll
ss
sahf
test
xor
imul
cwtl
mov
inc
ss
pop
push
pop
lahf
push
insl
cmp
add
mov
pop
mul
scas
out
cmp
dec
jp
shlb
dec
or
out
inc
shll
mov
aas
xchg
icebp
clc
fnstsw
std
mov
test
and
mov
and
cs
mov
mov
out
xchg
into
in
mov
outsl
dec
push
mov
inc
fstpt
mov
mov
jo
ljmp
inc
pop
or
fs
shl
sub
movsl
inc
out
cwtl
ret
movsl
inc
dec
sub
movsb
sbb
into
jae
mov
push
std
out
jo
jo
aaa
fnsave
insl
mov
inc
seto
repnz
push
loope
xchg
pop
test
repnz
insb
push
cwtl
in
in
cltd
mov
lahf
pop
inc
stos
pop
das
and
or
cmp
idivl
outsl
popf
sub
mov
push
movsl
sub
ds
pop
mov
fwait
mov
and
sbb
ljmp
add
jmp
clc
xchg
inc
and
sub
or
pop
dec
jbe
mov
jno
xchg
pop
dec
pop
push
mov
jne
pop
fucom
xchg
jg
cmp
fldenv
mov
inc
gs
jb
mov
mov
enter
adc
mov
mov
jp
scas
int3
outsl
sti
cmp
adc
je
int
push
or
sub
adc
mov
ror
mov
shll
or
add
rcrb
lret
aad
xchg
pop
mov
push
aad
sub
push
les
mov
rorb
mov
xor
dec
neg
jno
push
mov
jae
inc
add
imul
or
push
inc
aas
push
push
jmp
pop
lahf
dec
clc
loopne
or
xchg
pop
mov
in
mov
jp
cli
out
ret
push
sbb
xchg
mov
mov
adc
mov
aas
mov
ja
xchg
jns
mov
fstp
xchg
sub
daa
jg
fsubrl
int
cmpb
and
dec
fwait
call
xchg
call
cmc
mov
aad
dec
sub
jnp,pt
add
mulps
ficoml
scas
sbb
outsl
inc
jo
jae
pop
test
arpl
xor
lret
or
ljmp
xchg
jmp
pushw
das
outsl
mov
sbb
mov
lock
jl
sub
test
push
adc
push
inc
movsl
lods
inc
mov
ficoms
in
sub
mov
mov
jecxz
mov
test
test
mov
sub
xor
dec
fcmovbe
pushf
pushf
repz
movsb
mov
mov
lock
pop
and
cmpsb
xchg
jae
cwtl
fistpl
jns
scas
in
popa
adc
xchg
push
stos
push
scas
int3
stos
jo
pop
fs
aam
mov
shrb
scas
rorb
es
scas
mov
xchg
and
jecxz
out
mov
xchg
jg
mov
test
scas
cmp
and
mov
xor
data16
inc
aad
adc
mov
fwait
in
loope
inc
inc
cmpsb
mov
mov
jne
movsb
test
push
rcr
sbb
lahf
add
rorl
push
fisttpl
es
cmp
mov
mov
repz
data16
cli
mov
inc
jmp
out
jge
into
lods
cli
fisubrl
imul
or
inc
mov
adc
cs
aad
pop
in
jns
ror
stc
data16
ds
adc
les
hlt
jg
jle
int3
or
xchg
fldl
gs
in
cltd
jbe
mov
loopne
ja
enter
mov
insl
push
fstps
xchg
fmuls
add
repz
and
sbb
pusha
inc
cmp
daa
mov
loop
adc
movsl
mov
gs
jb
into
cwtl
pop
insl
repz
inc
int3
pop
mov
stc
fmull
add
xchg
pop
xor
lods
test
cmp
pushf
mov
mov
sub
xchg
sub
cmp
bound
push
add
fsubrp
iret
fsubrl
movsl
sbb
adc
out
jae
sbb
shr
push
outsb
and
cmp
repz
outsl
xlat
or
pop
xchg
push
leave
lods
mov
ljmp
xchg
shrb
mov
mov
pusha
pusha
push
mov
jl
testl
gs
pop
filds
dec
inc
inc
fstpl
sahf
xchg
fdivr
imul
test
sbb
js
mov
cmpsl
icebp
pop
inc
adcl
mov
ja
lods
iret
mov
repz
ss
nop
mov
mov
lahf
push
or
pushf
mov
insl
adc
or
int3
shlb
add
lcall
push
dec
and
and
adc
xor
add
xorb
ja
fistpll
loop
test
aaa
mov
cs
stos
dec
dec
sub
lret
xchg
and
jle
lods
push
pop
sbb
test
or
movsb
mov
sbb
dec
inc
subl
and
add
shrb
dec
xchg
push
sbb
fwait
xlat
arpl
xchg
jb
lea
iret
jg
inc
add
push
rolb
fsubrp
dec
addr16
or
inc
mov
inc
mov
scas
xor
sub
mov
jmp
fstpl
or
scas
mov
cmp
xchg
rol
icebp
scas
add
fnstsw
dec
inc
dec
jl
ret
mov
pop
cmc
xor
ljmp
cmpsl
push
push
stos
lahf
inc
or
xorl
movsl
xchg
iret
jmp
inc
sub
cmp
ret
jg
lcall
scas
ret
cwtl
sub
sub
cwtl
in
test
lea
and
and
scas
cmpsl
imul
movsl
jbe
dec
jnp
leave
dec
mov
insl
stc
xchg
pop
jl
xor
push
adc
inc
or
iret
shr
and
inc
xlat
lods
jo
sahf
xorb
mov
repz
popa
aas
test
rcr
push
sbb
in
mulb
push
mov
jo
sbb
stos
add
call
scas
ret
push
mov
jno
or
es
dec
fisttpl
jp
insl
adc
lret
pop
pop
imul
lret
ret
dec
sahf
inc
pop
adc
out
fldcw
xchg
jns
xchg
sub
fwait
enter
fmuls
and
test
dec
adc
ljmp
out
gs
mov
add
jns
scas
fcompl
xor
dec
fists
xrelease
hlt
lods
adc
xchg
mov
outsb
pop
jae
jo
mov
leave
push
mov
lahf
movsb
movsl
jns
pop
adc
add
or
push
xchg
fnsave
cmp
rcrb
fsts
mov
aad
adc
cli
loop
jmp
sbbb
xchg
or
dec
xor
pop
and
iret
push
mov
sub
mov
out
pop
dec
mov
pop
out
xchg
mov
dec
rcr
lahf
sub
mov
dec
xchg
aaa
jbe
mov
cld
mov
mov
shlb
ljmp
mov
xor
inc
es
mov
push
jbe
lret
xor
sub
fdivr
flds
daa
mov
push
xchg
negl
or
int3
mov
mov
int
inc
addr16
pop
push
cmp
pop
fsub
or
lcall
cmpb
mov
out
pop
mov
inc
or
mov
and
and
jnp
das
enter
jp
mov
xchg
mov
or
and
cmc
xchg
ret
cmpl
loop
hlt
adc
fstpl
inc
mov
aaa
or
pop
out
in
xchg
sub
invd
push
fadd
rorl
pop
pushf
jp
jmp
adc
mov
mov
mov
js
and
cmpsb
sbb
mov
mov
push
lahf
aam
imul
mov
rorl
xchg
addr16
ficompl
jnp
and
cs
dec
lods
inc
xrelease
and
notl
jle
daa
lret
movsb
stc
dec
std
div
popa
cmp
dec
pop
sti
test
fucomp
into
adc
inc
xor
lock
ss
test
imul
sbb
sbb
imul
in
pop
scas
sbb
daa
and
jo
mov
or
roll
push
fstpl
xor
cmp
lds
aad
sbb
stos
or
in
les
shrl
notb
inc
popf
mov
out
xor
lcall
jg
test
ret
dec
xlat
jle
pop
cld
add
vmaxpd
push
arpl
test
or
sub
mov
mov
adc
stc
push
xchg
push
sub
mov
pop
mov
adc
scas
or
cmpsl
sbbl
outsl
incl
andb
test
jns
cmpsb
push
jmp
mov
jle
pop
dec
pop
adc
dec
bound
jno
xchg
lahf
imul
cld
adc
and
outsl
mov
decl
ret
mov
gs
fsubl
dec
mov
sbbl
adc
cld
jmp
and
rclb
in
sub
or
pusha
aas
jecxz
jg
xchg
clc
xchg
shll
xchg
ss
decb
add
shlb
jb
add
cli
mov
mov
inc
xor
sub
in
push
test
sahf
mov
lock
mov
or
jle
adc
or
sbb
iret
je
push
divl
rorl
out
cmp
mov
les
mov
iret
into
xchg
cli
movsl
mov
cmpb
clc
jae
sti
xchg
stc
rol
in
je
decl
adc
jne
pop
sti
fidivrs
xchg
mov
cmc
jno
mov
jmp
mov
push
lods
adc
mov
push
xor
fists
lret
or
sbb
jecxz
mov
mov
out
sub
or
pusha
xor
cli
xchg
int3
popa
jmp
in
aam
sub
movsb
es
outsb
jbe
sbb
rolb
repz
out
test
jmp
jo
mov
pushf
inc
xor
xchg
in
rorl
fdiv
mov
imul
lret
xor
or
jge
in
xor
lret
sub
mov
fdivrp
lret
mov
cld
dec
fnsave
enter
fcmovb
outsl
sub
xor
jge
xor
out
jp
xor
outsl
daa
and
adc
xchg
loop
and
test
push
xor
xchg
mov
dec
loopne
leave
pop
cs
scas
mov
sbb
pop
xor
inc
inc
mov
mov
or
xchg
das
shll
inc
xor
test
add
push
fwait
mov
mov
xchg
fucomp
push
inc
movsb
mov
sub
inc
cmp
pop
aam
jg
movsb
repnz
mov
xor
mov
inc
lds
sbb
test
cmc
roll
shrb
pop
dec
jle
sub
dec
scas
sbb
lret
lea
icebp
cmc
jnp
mov
or
imul
and
sub
adc
mov
out
ljmp
aad
mov
or
or
das
or
adcb
out
mov
enter
cmp
aas
out
sub
xchg
push
ret
leave
es
sbb
mov
push
adc
xchg
scas
cmpsl
xchg
push
dec
xor
sub
shll
jbe
jnp
sub
lods
js
sbb
mov
xor
dec
push
repz
fstpl
inc
mov
xchg
insl
lea
fsubl
and
roll
mov
das
shlb
lods
icebp
imul
xchg
movsb
fwait
jno
and
sub
or
mov
fsubl
sub
xor
push
out
xor
nop
dec
push
and
mov
push
mov
arpl
stc
mov
or
push
xchg
in
rcll
call
nop
push
cs
pop
or
ds
and
sbb
sub
dec
adcb
xchg
fisttpl
shrb
fcoml
push
pop
repnz
add
sbb
jns
cmpsb
je
adc
in
inc
inc
sub
push
imul
xor
in
andl
repnz
mov
cmp
pop
cmp
mov
popf
mov
add
inc
daa
push
stos
call
push
mov
out
andl
es
xor
xchg
test
sbb
adc
call
addb
sub
cwtl
sub
sbb
mov
in
mov
sub
idiv
shlb
mov
pop
popa
lock
orl
sub
cmp
jmp
clc
out
mov
sbb
mull
pop
dec
mov
xlat
mov
xchg
mov
cmp
sub
push
add
test
out
sbb
pushf
jno
mov
sub
int3
in
dec
jl
lret
rolb
add
mov
ss
jl
mov
movsl
das
sbb
adc
lods
out
subb
dec
pop
stos
jae
sub
repz
and
cmp
lahf
dec
xor
mov
pushf
stos
andb
xchg
cmpsl
addr16
int
shrl
divb
hlt
jg
mov
shll
inc
lds
push
pop
pop
or
pop
and
mov
pop
jl
mov
icebp
mov
sub
repnz
mov
jmp
jns
in
inc
and
shlb
or
imul
sub
mov
test
pop
xor
mov
and
push
cmp
push
sbbb
or
popf
jbe
jle
fisubl
cltd
add
das
dec
mov
adc
and
pop
repz
lods
addr16
dec
xorb
decb
mov
idivb
inc
and
adc
lret
ss
push
inc
ja
rol
xor
jb
xor
add
jae
dec
xor
mov
clc
rolb
mov
xor
cmpb
xchg
movsl
sbb
setp
and
xchg
xchg
dec
hlt
jp
mov
and
xchg
test
imul
push
mov
push
ss
scas
sti
aas
jecxz
movsl
scas
sub
out
or
shr
lods
inc
mov
cmp
sub
jne
stos
fwait
add
movsb
call
mov
and
jg
shr
int3
jl
int3
or
jle
imul
xchg
add
add
imul
cmpsb
mov
jo
ret
ljmp
cmc
mov
push
aaa
lea
inc
xlat
push
idivb
mov
mov
xchg
mov
cmpl
jecxz
ret
fldenv
xor
shrl
dec
je
push
test
mov
inc
jl
les
mov
jne
nop
mov
push
nop
xchg
movsb
mov
cltd
lods
lds
mov
dec
mov
out
xorb
pusha
cld
mov
sbb
mov
shlb
into
shr
and
cmpsl
push
sbb
push
pop
xchg
jno
sub
or
ss
in
fisttpl
push
xchg
call
rclb
xchg
jae
cmp
ffreep
lcall
mov
in
sahf
add
aas
sbb
shl
imul
pusha
rorb
push
jp
icebp
xchg
je
xor
push
out
insl
ja
push
cmp
and
sti
pop
xchg
xchg
push
jns
jp
jo
in
xor
mov
sarb
rorl
mov
nop
cmp
mov
sub
fdivs
dec
cmp
ds
aaa
aaa
ljmp
cs
ficomps
jg
inc
pop
test
push
lret
sbb
cli
pop
jo
add
sub
test
mov
sbbl
shl
push
bound
xor
jg
fwait
xchg
pushf
jno
cmovle
xchg
insl
out
xor
sbb
adc
scas
sub
mov
jne
jl
dec
test
cmp
inc
pop
jl
jo
dec
sub
ret
cmp
popl
pop
out
movsb
add
outsl
ds
push
push
push
and
push
and
push
fbstp
adc
insb
into
jl
loopne,pt
js
xor
add
sbb
cmpsb
int
stc
push
addr16
in
pop
cmp
jle
shlb
push
ficomps
and
loope
pushf
sbb
jg
mov
jno
xchg
cmp
lret
repz
sahf
enterw
dec
insb
add
lahf
mov
pop
inc
shl
loopne
xchg
idiv
stc
sub
jge
jne
hlt
pop
inc
push
lahf
mov
xchg
mov
fwait
jmp
sub
and
jp
lahf
pop
dec
test
out
lds
push
addr16
popa
shlb
les
arpl
adc
pop
out
lahf
mov
and
out
adc
in
cmp
mov
test
lahf
mov
faddp
and
mov
cld
pop
adc
repnz
xchg
sub
push
jo
dec
loopne
sbb
pop
andnps
sbb
mov
add
fcomps
stos
popa
cmp
sbb
inc
repnz
dec
and
push
mov
sub
cli
imulb
std
mov
dec
test
clc
enter
ds
vprotw
divl
cmp
pop
jns
push
jge
or
push
cmp
in
std
cmpsb
lea
mov
inc
insl
push
jge
or
push
cmp
in
std
cmpsb
lea
mov
inc
adc
aaa
mov
sub
neg
in
xlat
std
cmpsb
lea
mov
inc
insl
push
jl
or
xchg
cmp
insb
in
mov
add
outsb
inc
push
xor
sub
push
push
and
or
add
stos
mov
hlt
enter
call
and
adc
add
dec
popa
js
push
mov
fcomp
lods
loope
shr
rol
mov
mov
inc
add
push
pop
nop
jae
mov
sbb
leave
repz
mov
fwait
movsl
pop
jne
pusha
jl
pop
sarl
cwtl
jl
imul
shll
push
sub
mov
pop
loop
mov
ljmp
jne
inc
outsb
inc
rcrl
pop
mov
dec
pop
sbb
dec
test
rcrb
push
sbb
mov
mov
nop
push
jg
add
or
jo
inc
adc
mov
jns
push
lea
inc
test
push
adcb
insb
in
cs
mov
in
call
pusha
cmp
and
inc
jno
jno
fwait
enter
popf
dec
popf
into
or
fs
rcl
ds
std
and
icebp
mov
cltd
enter
clc
stos
sub
inc
add
or
js
rcl
push
sbb
pusha
xchg
mov
mov
leave
mov
push
jle
jl
inc
insl
ss
or
and
push
stc
repnz
shr
xor
loop
mov
mov
andb
jecxz
xor
sub
adc
sbb
ror
aam
ret
les
lea
rorl
insl
sbb
push
push
mov
fdiv
enter
call
and
adc
add
dec
popa
js
push
mov
fdiv
enter
call
ja
insb
ja
adc
daa
push
cmp
lahf
add
dec
pop
pop
pop
xchg
mov
popa
pop
push
aam
stos
lods
ret
mov
pop
mov
mov
jne
call
xor
push
push
in
xor
aaa
cmpsb
lods
ja
fstps
je
loop
mov
push
xchg
jp
shlb
sub
cmp
push
pop
clc
push
pop
xchg
arpl
sub
pop
pop
fsubr
mov
mov
in
loope
add
jbe
mov
xchg
dec
test
lods
daa
sbb
push
sub
sbb
jp
jmp
add
jo
inc
xor
rcr
xchg
push
clc
mov
pop
push
mov
sub
sub
jle
or
xchg
xchg
mov
lods
cmp
dec
testl
cmp
cld
mov
mov
push
dec
dec
leave
je
hlt
cmp
pop
inc
daa
cwtl
inc
inc
test
mov
in
loope
sbb
and
std
cmp
lcall
icebp
inc
jns
or
sti
or
push
andl
mov
push
loope,pt
jbe
fs
lahf
mov
jne
dec
mov
loope
sub
pop
cltd
xor
lcall
mov
scas
push
push
repnz
lret
sbb
ret
dec
nop
ret
popf
call
ds
into
test
dec
jge
add
jne
sbb
ficomps
shl
pop
push
cmp
cmp
inc
and
mov
mov
test
in
cmp
sti
mov
xchg
jge
iret
aam
test
mov
adc
insb
and
mov
mov
int
jb
ror
leave
mov
jge
xor
je
movsb
jb
mov
mov
or
jno
or
push
incl
fs
ret
sub
jno
mov
push
fisubl
jae
pop
leave
pop
movsb
jno
lods
clc
xor
mov
jo
cmc
or
cmpsl
mov
mov
test
cltd
cltd
or
sbb
xor
dec
pop
test
adc
dec
scas
add
and
cmp
and
push
mov
out
adc
enter
jle
ss
adc
push
lcall
pop
push
or
ret
mov
sub
push
dec
xor
sub
dec
ret
cmp
mov
call
test
fsubrs
or
jg
jnp
sub
or
mov
inc
ss
pushf
pop
jae
pop
cld
arpl
xchg
and
loope
notb
push
mov
mov
lock
call
in
jbe
inc
imul
inc
sub
cltd
call
jecxz
test
inc
xor
lret
mov
fisubs
test
mov
sbb
ret
mov
push
cwtl
out
cmpsl
repnz
fsubrl
dec
cwtl
call
enter
sbb
cmpsb
add
aam
loope
xor
or
lahf
xlat
xlat
sub
daa
daa
sti
sbb
test
mov
and
sarl
jmp
cmp
nop
xchg
andl
fimull
mov
sbb
stos
cmp
lods
clc
adc
jp
jns,pt
rcrb
xlat
ret
adc
shl
and
and
pop
test
xchg
push
lods
xor
or
mov
cwtl
insb
insb
shr
xchg
fcomps
popf
call
out
mov
dec
xor
adc
pop
je
imul
int
out
cld
in
fidivs
sub
adc
inc
lret
or
repz
icebp
jne
dec
sub
add
push
cmp
xor
push
subps
mov
push
pop
sbb
and
cli
pop
in
sbb
cmpb
mov
push
enter
mov
cmp
xchg
inc
fimull
jnp
fdivrl
popf
xchg
jae
stos
stos
test
addr16
cmp
sub
scas
sbb
adc
xchg
add
subl
dec
jg
scas
imul
or
out
dec
int
pusha
xor
or
call
rcrb
test
fiadds
incb
imull
mov
push
cmp
popa
pop
in
xchg
ret
cmc
in
and
pop
cwtl
jmp
loop
out
jmp
idivb
not
xchg
popf
into
dec
xchg
inc
inc
rorb
fs
sbb
xchg
pop
inc
rcll
aam
cmpsb
dec
lock
add
int
jle
jb
popf
xor
nop
mov
sbb
mov
ret
rorb
jbe
xor
cltd
lahf
fldl
jne
adc
inc
mov
shll
add
or
pop
add
inc
xor
call
mov
sub
push
jb
aad
aas
inc
aas
add
mov
ret
pop
lret
lods
iret
push
mov
rorb
jge
mov
mov
or
cltd
loope
or
xchg
dec
xor
cmp
xor
cltd
jecxz
sub
call
nop
dec
xchg
sbb
bswap
cwtl
xor
jg
ja
or
cli
mov
movsb
je
les
push
aam
push
push
sub
sub
push
je
out
out
mov
push
sub
pop
mov
cmp
or
and
inc
and
sbb
jae
or
jb
call
fcmovu
int3
lret
repnz
jge
fnstenv
adc
dec
test
mov
jo
mov
or
push
in
out
mov
imul
jmp
push
pop
push
pop
addr16
clc
mov
xchg
xchg
push
cltd
sti
in
sub
nop
call
xlat
loope
js
movsl
pop
movsl
sbb
idivl
mov
mov
cltd
call
jmp
testb
loope
movsl
cmp
out
fiadds
push
stos
sbb
jne
jp
pop
push
cmp
adcl
icebp
out
outsb
lcall
push
int
sub
or
dec
lret
lds
xchg
mov
lods
inc
int3
mov
jg
add
cld
insl
adc
cwtl
push
out
sub
mov
lods
push
insl
pushf
mov
movsb
mov
add
out
xor
mov
clc
movl
leave
ds
and
pop
into
sarl
orb
mov
lret
fisubrs
ds
mov
pop
mov
mov
push
rolb
adc
int3
bnd
pop
aas
mov
and
dec
xchg
fs
pop
les
ret
fstpt
gs
mov
push
nop
mov
daa
repz
xor
xor
push
adc
pop
xor
jl
pop
adc
lock
cmpsl
insl
add
dec
mov
mov
test
xor
sub
aas
mov
fisttpll
lock
xorb
call
pushf
xor
push
push
mov
sahf
test
rorl
in
push
jnp
arpl
push
sub
add
adc
fcmovne
scas
sar
in
inc
mov
push
push
std
mov
add
sahf
ja
mov
push
jne
and
loope
jb
rcrl
push
test
push
push
jb
or
subl
mov
das
idiv
jbe
xchg
dec
xor
jns
and
pushf
mov
push
jae
pushf
fisttps
adc
and
push
jp
imul
aaa
xor
nop
jge
or
shlb
pop
dec
jg
pop
jb
scas
imul
push
out
ret
out
push
cltd
mov
lcall
dec
adc
cmp
test
das
in
js
xor
push
clc
inc
and
xchg
es
dec
cli
sub
inc
dec
dec
jge
stc
and
aad
dec
les
mov
and
out
xor
gs
dec
lds
adc
xor
sub
nop
xchg
sub
sbb
stc
movl
inc
add
andb
mov
jo
jecxz
repnz
xchg
xor
out
push
lock
enter
rorl
xchg
mov
outsl
loop
ds
mov
mov
mov
jle
cmp
jge
pop
jecxz
inc
nop
xor
adc
andl
enter
mov
loope
jns
jno
dec
lcall
fwait
nop
es
jns
sub
nop
add
dec
push
iret
roll
lcall
shrl
shrb
xchg
aad
adc
aaa
ljmp
cmp
aaa
repz
sbb
dec
data16
fsubl
sub
stos
xchg
leave
scas
sub
jg
lret
mov
ja
push
sbb
rorl
sub
pop
test
mov
popa
leave
sbb
mov
push
mov
ja
lahf
xchg
jle
mov
rcr
xchg
push
and
mov
sub
add
leave
mov
ss
xchg
adc
inc
insb
lcall
je
push
dec
dec
into
sbb
push
icebp
in
jl
cmp
aas
rcr
push
push
inc
int
mov
add
mov
lret
adc
mov
outsl
enter
cwtl
sub
rclb
fsubrl
sub
add
jmp
mov
add
int
in
cmpsb
or
cltd
jb
push
pop
gs
or
pop
fstl
stos
xchg
hlt
ja
jns
pop
and
inc
mov
inc
mov
xchg
mulb
dec
adc
addr16
ljmp
sbb
into
lea
loope
jge
pushl
mov
movsb
xchg
cmpsl
aas
movsb
sub
pop
xor
ds
xchg
xlat
dec
loope
sbb
fs
jae
hlt
mov
imul
xor
fisubs
push
sbb
pop
xchg
nop
outsl
iretw
ja
stos
notb
and
or
pop
repnz
sbb
sahf
cmpsl
pop
cli
iret
xchg
push
cld
imul
test
pop
lods
in
xor
fxch
std
mov
jbe
push
jge
or
jl
mov
add
mov
stos
push
jno
mov
mov
adc
daa
hlt
push
sbb
cmp
sub
orl
in
xlat
test
mov
outsl
hlt
jne
jne
aam
adc
iret
push
add
ja
adc
mov
xlat
pop
xor
adc
arpl
in
es
inc
jp
xor
movsb
and
test
mov
scas
dec
mov
loope
arpl
mov
push
loope
and
pop
add
lahf
cli
add
lea
lret
rcrl
scas
js
out
stc
adc
scas
ja
push
out
pop
cmp
pop
push
imul
outsb
lds
or
aas
data16
jmp
ljmp
xchg
outsl
mov
incl
fists
in
sbb
and
sub
xor
in
pop
pop
cld
inc
or
rcr
ljmp
out
cmp
mov
mov
pop
push
shlb
mov
mov
lret
repz
lods
pusha
push
jne
int3
xor
out
mov
notb
dec
pop
sahf
adc
fisubl
adc
cs
shlb
jge
mov
mov
adc
movsl
cli
jnp
sbb
or
inc
scas
clc
add
test
pushf
shrl
cs
out
test
ljmp
or
inc
int3
enter
cmpsl
les
push
test
shld
push
dec
inc
iret
push
stc
iret
inc
push
cli
test
jp
popf
push
lods
push
mov
dec
xor
lods
cmp
repz
push
mov
lods
pop
mov
out
les
xor
mov
inc
aad
add
lahf
inc
arpl
ds
imul
call
cmpsb
inc
add
and
xor
outsl
pop
cmc
pop
add
add
mov
xchg
add
jle
and
clc
sbb
push
xor
outsb
sbb
xor
cwtl
aad
lea
shrb
mov
fs
inc
jl
ret
cmp
mov
insl
xor
xchg
hlt
rorl
pop
cmp
inc
sbb
aam
bound
sbb
inc
or
mov
loop
adc
xchg
movsb
pop
sbbb
jns
sbb
adc
test
jmp
xchg
xor
ret
mov
jge
push
in
jno
inc
cmpsl
pop
sar
mov
mov
mov
icebp
cmp
into
add
add
sbb
cmpsl
adc
xlat
push
hlt
test
shlb
cmp
daa
pop
add
fildll
mov
xor
js
sahf
add
in
jmp
lret
lret
push
das
xchg
or
popf
mov
mov
popa
sub
bound
jmp
popf
jecxz
push
ss
inc
or
rcll
xor
fs
lcall
repnz
clc
mov
xchg
inc
xor
jnp
xchg
jbe
int
mov
imul
stos
sub
sbb
jae
mov
xchg
inc
scas
push
sbb
sti
xor
lahf
push
lea
pushf
lea
popf
fwait
or
mov
in
xor
test
adc
in
jge
cmp
rol
add
jge
lret
adc
xor
inc
imul
and
add
or
xor
add
leave
aas
xor
fwait
pushf
cmp
sub
jle
inc
lods
pop
out
xchg
ret
fsub
sbb
idivb
fcmovb
push
add
dec
into
jno
std
lock
jbe
jo
pop
pop
xchg
loope
rcr
inc
xchg
fmull
add
movsb
jne
jmp
jo
cmp
jbe
jbe
cmp
dec
loopne
push
push
popf
je
cmp
test
xor
or
inc
dec
stos
and
sti
sti
ret
movsb
stos
cld
out
mov
mov
es
sub
lcall
cld
adc
lret
adc
aad
jns
call
sarb
xchg
es
and
adcl
push
out
rol
xchg
sub
sbb
xchg
adc
loope
mov
insb
aad
and
mov
dec
pop
shrl
jg
outsb
fstl
pop
or
repnz
insl
rcrl
mov
and
aam
push
fmull
lods
pop
in
sbb
pop
lods
or
xlat
inc
dec
insl
ficompl
int3
xor
sbb
and
into
push
in
mov
xor
xchg
ret
mov
outsb
jl
xchg
xchg
iret
icebp
adc
push
lea
cmp
push
out
xorb
or
add
xor
pop
les
sbb
add
add
jne
ret
pushf
test
popa
mov
lods
fmulp
stc
push
inc
xchg
push
mov
imul
in
sbb
inc
scas
clc
pop
shll
jp
jmp
add
sarb
fsubrl
in
sahf
jl
inc
dec
push
or
es
gs
add
pop
pop
mov
into
movl
cmc
push
xorb
adc
stos
cmp
movsb
shrb
pop
add
fdivr
sbb
les
xlat
repz
int3
loop
js
add
lcall
int3
mov
fsubrl
incl
jnp
jmpw
mov
cltd
mov
jae
and
lret
fiaddl
cmp
repz
mov
movsl
mov
mov
lods
ljmp
sti
insb
imul
popa
mov
mov
repz
mov
sub
nop
cmp
fildl
adc
inc
mov
outsb
xor
out
push
cmp
jmp
mov
and
stc
cmp
mov
adc
xchg
xchg
xchg
lret
mov
out
popf
lcall
ljmp
cmpb
nop
lret
out
pop
es
xor
xor
push
cmc
pop
das
push
popa
push
cmp
jge
daa
frstor
xchg
or
ret
into
pop
or
sub
in
sub
ljmp
adc
mov
and
and
mov
adc
fdivp
insb
or
cmp
mov
mov
push
mov
xchg
mov
mov
cli
mov
in
xchg
and
mov
test
rcrl
leave
dec
in
jbe
xor
out
test
mov
mov
dec
pusha
inc
mov
cmp
stos
fcomp
push
pop
hlt
and
xchg
jp
test
or
pop
xor
cmp
pop
insl
mov
mov
in
inc
add
jb
xor
pop
rcrl
mov
stos
fcompl
mov
imul
stc
lods
lret
mov
dec
sarl
inc
push
movsl
rclb
test
imul
and
inc
lcall
ja
sbb
gs
sbb
mov
sub
or
push
jp
sub
push
sub
bound
fnstsw
ret
sarb
pop
pop
pop
fildl
dec
in
leave
pushf
std
sbb
sbb
loope
sub
jl
push
rol
adc
stc
insb
inc
jb
enter
xor
xchg
sub
jp
lret
adc
and
repnz
push
shl
sub
mov
stos
cmp
je
push
mov
dec
and
repnz
add
mov
pop
cli
xor
imul
fs
lock
ja
mov
ret
imul
or
aaa
pusha
mov
cmpsl
adc
or
mov
cmp
mov
xchg
out
jmp
xlat
call
in
dec
jge
cmp
adc
xor
stos
outsb
cwtl
ret
mov
sub
data16
subl
adc
mov
sbb
cmp
mov
dec
sbb
je
cmp
inc
xchg
pop
mov
sbb
xchg
cmpsb
jp
mov
mov
fnstsw
mov
add
jns
mov
mov
xchg
cmp
ss
scas
js,pn
fmulp
dec
scas
jae
je
jns
cwtl
aad
and
pop
push
loopne
cmp
loop
int
mov
imul
test
out
mov
loope
cmp
lds
mov
push
sub
cmp
or
sub
lods
out
mov
lods
call
pop
inc
xor
mov
fstps
loope
adc
fdivrs
cmpsl
loope
leave
loope
inc
popa
loopne
pop
jecxz
ds
mov
adc
int3
scas
lock
ja
pop
cmp
outsb
dec
xchg
xchg
repnz
or
or
inc
movsl
popa
cmp
jbe
adc
add
clc
dec
icebp
and
test
jno
int3
xor
mov
sbb
rcrb
jno
pop
push
sbb
jno
es
xchg
mov
or
repnz
jno
pop
xor
xchg
mov
fucomi
repnz
add
jb
js
sbb
push
pop
popa
mov
aam
mov
or
std
mov
mov
lcall
inc
mov
jnp
sahf
mov
test
ror
les
shrb
imul
popa
xchg
rcrb
xchg
pop
popa
jmp
repnz
addb
fists
test
mov
or
ljmp
cmp
pop
and
adc
clc
daa
cli
mov
mov
inc
mov
test
push
test
and
lods
xor
xor
push
xor
test
outsb
popf
adc
add
mov
and
aas
push
loopne
ret
sbb
xor
sub
ror
cmpb
and
mov
movsl
push
fwait
test
pop
pop
fcoms
icebp
inc
xor
push
add
dec
jp
mov
push
add
lsl
sub
gs
in
pop
sub
dec
loope
push
scas
sub
fsts
mov
arpl
xchg
jns
pop
pop
push
add
stc
jne
mov
lcall
xchg
fwait
std
xchg
mov
xor
sub
pop
xor
xor
movsb
xor
movsl
dec
in
fldenv
fimuls
gs
xor
pop
fldl
fistpll
xor
scas
mov
inc
insb
mov
mov
mov
movsb
push
fyl2xp1
jg
daa
out
jns
and
mov
mov
movsb
inc
or
pop
push
adc
mov
jmp
add
and
gs
loope
mov
in
lock
out
je
jg
push
icebp
push
dec
or
outsl
add
xor
sub
ficoml
push
outsl
aas
xchg
mov
movsl
jecxz
push
sbb
ja
and
inc
dec
out
jo
orb
xor
and
push
mov
shll
fnstenv
inc
add
ficoml
mov
loopne
xor
sbb
je
add
test
xchg
xor
test
cmp
inc
lret
dec
es
jbe
fdivrp
scas
mov
xchg
movsl
sub
mov
sub
cmp
inc
mov
test
adc
out
cltd
fwait
sbb
xchg
movsl
add
or
fists
add
pop
rorl
inc
sub
sti
gs
and
adc
add
dec
popa
js
push
mov
fdiv
enter
call
and
adc
add
dec
popa
js
push
mov
fdiv
enter
call
das
sub
sub
js
imul
xchg
lods
mov
cmc
shl
cld
fcomp
and
mov
add
jno
popa
js
call
or
xchg
test
scas
mov
pop
test
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
sbb
pop
jno
pusha
adc
out
sub
or
add
push
add
add
pop
add
dec
add
add
add
add
jg
rolb
les
addl
lods
add
add
add
add
inc
add
lea
test
jae
les
cs
add
add
jno
cmp
out
mov
add
add
add
int
lea
jg
add
nop
add
add
add
enter
pop
add
push
add
adc
sub
roll
mov
sub
pop
add
scas
add
add
add
add
add
add
data16
add
add
cmp
cmp
cs
add
add
add
aam
out
add
add
add
cmp
mov
add
add
add
add
add
add
add
add
mov
mov
add
add
cmp
dec
add
add
add
add
cmp
add
cld
add
add
xchg
repz
add
add
add
add
add
jg
add
outsl
add
add
add
add
add
add
add
add
jae
out
push
add
add
mov
add
add
add
push
add
or
xchg
add
and
adc
popf
add
push
add
add
popf
add
add
add
add
add
add
add
add
mov
add
add
add
add
sub
test
sub
or
cmp
cmp
push
add
add
add
add
insl
add
add
add
jge
cmp
roll
xor
adc
rolb
add
sahf
add
add
add
mov
add
add
add
add
pop
add
add
int
ss
add
add
add
mov
pusha
add
add
add
add
add
add
add
add
iret
add
repz
add
add
push
add
add
add
add
add
add
add
add
adc
inc
add
add
add
add
add
add
cmp
ss
add
add
add
sub
mov
jo
xor
add
lea
outsl
add
add
add
add
add
cmp
nop
add
mov
add
add
add
add
add
sahf
add
add
faddl
dec
add
add
add
jns
pusha
add
out
add
sub
pop
add
add
add
add
cmp
jae
out
jo
jo
add
add
add
add
add
add
add
mov
lea
xor
addb
add
testl
jge
add
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
cmp
flds
cwtl
add
add
add
add
add
add
add
add
add
pop
add
add
add
test
jb
jno
lea
pop
add
add
add
jg
popa
add
mov
add
jno
cmp
flds
push
add
add
add
add
add
add
add
mov
push
cmp
or
sbb
sti
jns
es
outsl
nop
in
or
sbb
inc
and
cwtl
mov
stc
mov
outsb
xor
add
test
push
insl
insl
mov
icebp
ret
push
es
es
ret
xchg
pushf
sbb
lods
push
sarb
xchg
pop
mov
outsl
inc
xor
fisubrs
add
xchg
push
mov
cmp
jae
xor
sahf
dec
add
icebp
ss
repnz
lea
aas
adc
jecxz
mov
xor
and
xchg
aam
aad
and
mov
mov
push
daa
fists
adc
repnz
dec
cmpsl
out
pop
les
js
or
jl
movsb
shlb
push
xchg
mov
xchg
fstpt
jmp
ret
call
scas
mov
test
adc
ljmp
push
mov
push
jmp
loopne
mov
xchg
push
push
pushf
insb
push
jae
cmp
iret
mov
loopne
cld
stos
ljmp
mov
js
outsb
jb
inc
incb
cmp
dec
pop
sbb
lea
out
cmp
mov
or
popf
push
cmp
fdivs
dec
dec
push
push
and
mov
repz
lcall
stos
push
ja
mov
adc
push
cld
push
mov
sarl
cmp
jae
xchg
mov
mov
pop
mov
loop
jbe
mov
mov
insl
lods
int3
gs
imul
mov
pop
out
call
repz
dec
les
aaa
iret
cmp
mov
jle
jbe
xlat
add
clc
insb
movsl
sbb
arpl
lea
ret
sub
pop
negb
mov
mov
push
push
shll
cmpsl
fistl
inc
cmpsl
jl
cli
sbb
rcrb
cmpsl
rol
repz
push
sbb
test
fnstcw
rolw
jmp
jle
mov
push
sbb
sbb
imul
mov
sbb
sbb
xor
pusha
or
cmp
pop
cmpsl
pop
hlt
xchg
jo
lods
push
hlt
outsb
xrelease
pop
sbb
push
into
into
and
sbb
out
mov
arpl
mull
push
mov
mov
fsubr
jne
cwtl
mov
ds
dec
enter
or
add
mov
test
arpl
dec
xchg
sbb
out
cmc
cltd
pusha
and
loop
mov
push
xor
hlt
enter
lea
shrl
loop
fincstp
mov
mov
imul
jecxz
shll
stc
xchg
mov
aam
rcll
stos
mov
lcall
mov
lahf
mov
sbb
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
