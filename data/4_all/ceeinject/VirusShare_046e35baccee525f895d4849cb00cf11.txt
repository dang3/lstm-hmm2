fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
bound
jb
inc
es
ss
push
cmp
pop
jbe
mov
xchg
ret
cmpsb
mov
out
mulb
jb
inc
es
and
inc
add
add
mov
xchg
ret
mov
mov
aam
out
mulb
jb
inc
ds
and
dec
add
insb
loop
shll
mov
xchg
sti
cltd
push
dec
adc
inc
cmp
mov
jmp
pop
enter
das
cmp
sbb
mov
lea
xor
pop
jns
push
cmc
cmpsb
mov
aam
ret
push
popf
lcall
ja
loopne
enter
pop
xchg
xchg
ror
push
dec
mov
out
mov
pop
push
jmp
dec
inc
int
pop
adc
repz
push
repnz
mov
jp
sbb
xor
scas
inc
fldl
cltd
push
jecxz
cli
imul
xor
jge
xchg
jae
stc
mov
fisubrs
repz
add
mov
xor
dec
inc
out
loope
inc
in
lock
aas
push
and
push
add
outsl
loop
repnz
mov
mov
cmp
testl
inc
adc
inc
inc
pop
aaa
insl
or
xchg
mov
xchg
shll
repz
mov
lcall
adc
inc
jns
inc
adc
nop
repnz
repz
mov
jmp
clc
addb
aaa
jae
jne
push
add
jbe
xchg
xchg
ret
mov
mov
and
mulb
jb
inc
es
and
push
add
jbe
xchg
xchg
ret
mov
mov
and
mulb
adc
repnz
enter
imul
mov
adc
push
in
test
dec
or
ss
inc
jae
js
xchg
nop
movsl
xor
jg
or
stos
xchg
lcall
pop
scas
xchg
loopne
rcrb
xchg
mov
mov
nop
sbb
ljmp
test
cmpsb
mov
adc
xchg
jg
aaa
push
rcll
movsb
repz
loop
pop
jo
fwait
sti
pop
mov
hlt
es
mov
mov
aam
and
fcmove
nop
fisttpl
ret
dec
out
or
mov
outsb
pop
cltd
jbe
sub
mov
sarl
push
in
xlat
imul
xchg
jmp
dec
outsl
cwtl
inc
mov
mov
roll
mov
lock
xor
sub
cmpsb
mov
push
add
int
ss
sbb
sub
loopne
or
xchg
xlat
sub
cmp
pop
add
test
sbb
and
xchg
fwait
lret
cwtl
loop
pop
mov
rcl
icebp
xchg
cmova
mov
test
add
fdivl
mulb
outsl
dec
jecxz
sti
pop
mov
out
cmpsl
int
xor
jae
dec
pop
push
insb
add
xchg
and
jne
xchg
xor
cs
pop
ffree
or
mov
xchg
shll
push
or
in
call
push
in
test
adc
pop
faddl
aad
test
adc
push
movsl
in
dec
shrl
hlt
jge
shrb
insb
stc
jb
int3
mov
in
outsb
jmp
icebp
and
inc
jmp
jno,pt
or
cli
mov
and
mov
dec
jo
mov
out
add
fnsave
movsb
je
mov
in
icebp
lods
ret
xchg
cmp
aaa
xchg
dec
inc
addb
and
pop
jl
xchg
outsl
jbe
mov
xchg
push
push
push
lods
mov
lods
fildll
dec
pushf
fwait
test
shll
mov
subb
jle
lods
ss
lahf
jo
adc
dec
dec
adc
cli
jg
sar
in
push
push
cmp
jo
pop
enter
fimull
aas
outsb
sub
or
test
inc
adcl
or
fsts
fs
cli
flds
jmp
test
lret
js
mov
cmp
push
rcrb
jp
pop
mov
mov
mov
xor
ss
dec
xlat
negl
nop
pusha
minps
imul
ret
push
xchg
aam
sub
push
rcrb
repnz
aad
addl
ficoms
cmp
jl
mov
adc
stos
cltd
stos
pop
push
scas
xchg
loop
mov
xlat
xor
dec
push
aaa
or
fldcw
xchg
mov
out
jno
jns
gs
rorl
pop
mov
arpl
scas
and
jecxz
mov
push
scas
hlt
mov
test
add
pop
cli
xor
call
test
ret
lods
mov
sbbb
sbb
fcomps
call
out
or
pusha
and
xor
imull
and
inc
push
inc
dec
outsb
popa
mov
popa
sbb
push
shrl
lock
mov
pop
iret
inc
jg
andl
mov
or
pushf
stc
popf
cmp
mov
jg
pop
sbb
jg
mov
addr16
adc
ret
mov
jl
mov
mov
fmulp
clc
pop
out
testl
jae
test
shlb
outsl
mov
sbb
xor
adc
inc
jns
dec
xorb
dec
inc
dec
push
jb
jmp
arpl
lods
lds
mov
cwtl
cmpsb
movsb
sub
mov
pop
call
js
out
adc
fnstcw
mov
mov
nop
push
xchg
push
movsl
stos
fiadds
lcall
mov
aaa
mov
nop
cmp
sbb
sbb
pop
pop
out
cmp
mov
adc
mov
dec
hlt
jns
adc
test
test
mov
cmc
repnz
lret
mov
shr
jp
repnz
or
adc
push
in
out
in
les
les
lods
ror
movsb
jnp
dec
sti
enter
pop
stos
push
out
mov
dec
mov
les
pop
xchg
mov
popa
rcl
test
inc
cmpsb
push
inc
mov
xchg
movsb
or
or
je
mov
outsb
out
sbb
scas
dec
outsb
stc
pop
push
and
inc
sub
cld
addr16
arpl
add
add
and
dec
stos
stos
call
popf
sub
cmpsb
or
test
mov
mov
add
and
sbb
lods
xorb
push
fistps
dec
mov
dec
imul
sbb
sbb
outsb
or
jecxz
adc
repz
and
jge
rclw
pop
pop
push
fwait
dec
cmpsl
add
mov
mov
in
xlat
push
dec
in
stos
xchg
gs
mov
cmc
and
pop
push
in
jne
shlb
dec
pop
andl
mov
sbbl
pop
mov
mov
notl
inc
test
call
pushl
ljmp
es
int
sbb
loop
mov
in
insl
xlat
inc
sub
fisubs
jbe
mov
inc
imul
mov
xor
lods
pop
lea
dec
int
sub
sub
imul
outsb
xchg
sbb
xor
jae
adc
popa
outsb
sub
dec
mov
cs
mov
mov
fadds
test
jb
test
test
jle
leave
xchg
xchg
rcrl
cmp
pop
pop
int3
mov
stos
fwait
jo
or
ja
mov
adc
inc
ss
xlat
mov
clc
test
dec
movsl
jb
pop
push
in
cs
xlat
test
lahf
or
mov
adc
mov
loopne
mov
dec
jns
xlat
inc
push
shrb
sub
shrb
jl
jg
sahf
mov
clc
dec
push
cmp
stc
leave
out
int
and
int
jnp
add
fcmovnb
xor
addr16
jecxz
pop
lds
cmpsl
or
rol
sub
jmp
add
movsb
adc
jecxz
repnz
dec
cli
and
dec
sub
inc
pop
xchg
or
mov
xchg
cmpsl
lock
or
rclb
out
push
test
mov
mov
push
sbbl
decb
stc
fsts
loope
push
sub
out
adc
lret
add
fistpll
in
push
fwait
test
repnz
fnstenv
cmp
adc
ret
sbb
cmc
nop
push
fcmovu
sbb
or
outsb
roll
imul
jp
cmp
push
xchg
mov
add
in
repnz
mov
adc
pop
mov
rcl
daa
xor
pop
jno
aaa
test
hlt
lahf
movsb
rol
test
rclb
mov
cmc
mov
test
mov
test
mov
xchg
adc
out
rcll
xchg
pop
enter
mov
mov
mov
xchg
fidivrl
jg
testb
rolb
out
lcall
xchg
pop
out
aaa
or
mov
mov
std
jmp
sub
in
add
rolb
sarb
loope
mov
jle
adc
sub
dec
sub
pop
jmp
cmpsl
sub
ljmp
dec
dec
pop
in
jecxz
sbbb
or
ljmp
mov
jae
enter
jg
es
xor
ror
mov
xchg
dec
add
xchg
loop
stos
and
lea
pop
insb
test
dec
sbb
push
xchg
outsl
cmp
sub
sti
mov
stos
in
insb
sti
nop
lds
xchg
xchg
jbe
add
sub
and
xchg
into
out
jne
mov
dec
movsb
mov
mov
out
cltd
pop
mov
push
fstl
outsb
jle
cli
jecxz
adc
cmp
out
nop
mov
out
jae
sbb
jae
cmpsl
js
shll
mov
cmp
aaa
jb
outsb
cmp
test
sar
dec
scas
mov
xchg
jae
xchg
dec
lds
repz
aam
and
inc
out
xchg
and
mov
pop
cvtps2pd
pop
sbb
insl
cltd
xchg
add
and
testl
or
xor
js
jmp
in
fwait
stc
push
sub
sbb
xchg
popf
imul
std
out
push
ret
in
test
push
and
push
adcb
dec
pop
adc
bound
test
add
dec
leave
mov
imul
out
cmp
in
adcb
mov
mov
in
je
and
ret
shrb
ljmp
mov
mov
fidivs
mov
leave
fcmovb
inc
cmp
insb
push
fs
jecxz
cs
in
out
add
iret
fcomps
je
xchg
cmp
xor
dec
adc
testb
sub
movsb
fisubs
xor
fsubp
lods
pusha
faddl
inc
sbb
idivl
insl
loop
xchg
sbb
hlt
push
loop
loope
int
cwtl
jmp
inc
sahf
sbb
or
insb
xor
scas
rclb
ret
in
add
push
movsb
push
mov
mov
and
inc
jle
icebp
mov
mov
push
sbb
cmpsl
fs
sbb
psrld
cwtl
iret
push
outsl
mov
cmp
push
fiaddl
mov
or
jmp
pop
in
imul
scas
mov
shlb
cmp
or
mov
nop
ret
fisubs
mov
cli
shlb
mov
push
mov
adc
cmpsb
loopne
jp
enter
add
add
rcl
lds
sti
pusha
cwtl
mov
mov
test
call
fnstsw
mov
cmp
cli
cmp
mov
cmpsb
adc
jo
push
hlt
nop
push
or
movsl
pop
jnp
mov
xor
or
jne
jl
fs
out
dec
repz
add
cmp
pusha
fwait
or
jl
ret
xor
pop
push
add
adcl
ds
dec
push
adc
push
lret
sub
std
std
loopne
mov
out
pop
repz
dec
and
or
rclb
ja
or
adc
subl
mov
push
mov
dec
pop
mov
testb
jl
icebp
popa
sti
pop
pop
std
jnp
lock
js
add
xchg
jno
pushf
jnp
jmp
inc
notl
popa
pop
mov
xlat
lods
int
mov
push
sbb
add
subl
mov
add
jmp
add
xlat
jo
pop
lahf
push
or
maxps
mov
les
jae
pop
ss
ror
pusha
mov
aas
or
xchg
mov
cmp
lahf
movsl
fxch
cli
pop
xor
push
aam
sahf
mov
ret
xchg
cmc
idivb
pop
lea
movsb
fstl
mov
sbb
dec
dec
xchg
test
pop
enter
pop
push
mov
outsb
shr
add
out
daa
iret
pop
roll
inc
mov
nop
sti
enter
adc
jge
gs
imul
bound
rorl
inc
int3
mov
int3
or
aam
jne
xchg
sub
cmpsb
gs
mov
out
sub
out
popf
rolb
ss
sub
fsubp
push
bound
or
or
pop
cmc
cmp
xchg
and
ss
daa
or
cltd
pop
fimull
push
sbb
ret
cmp
pop
push
xor
shlb
xchg
cli
insl
iret
arpl
push
sub
or
xor
xlat
jbe
mov
insl
out
sbb
out
sub
cli
cwtl
mov
out
ljmp
xchg
adc
sbb
push
mov
pop
shlb
push
cwtl
out
in
and
mov
movsb
pushf
push
pop
xchg
xchg
lcall
push
adc
loopne
sub
sahf
dec
xchg
subl
adc
mov
cwtl
mov
mov
incb
aam
add
fucomi
jl
sti
mov
or
repz
jmp
pop
insb
dec
dec
aaa
ret
mov
fidivrl
mov
lods
adc
adc
mov
xchg
mov
test
xchg
stos
aam
cmpsl
int
push
jge
dec
inc
jne
and
cmp
repnz
sbb
daa
xchg
mov
gs
mulb
mov
fadds
and
ret
mov
movsl
std
clc
cmp
jb
lea
dec
jle
xchg
push
jge
pop
cwtl
pop
jecxz
jb
push
gs
xchg
mov
fimuls
inc
xchg
inc
popf
shrb
enter
inc
xchg
push
pop
in
movsb
push
xchg
jl
insl
xor
sbb
in
push
sidtl
dec
out
jmp
or
aaa
loop
aas
mov
sbb
inc
cwtl
push
mov
mov
pop
jo
mov
movsl
cmpsl
cld
add
loop
fst
sbb
add
roll
xchg
loop
xchg
xor
jne
sbb
bound
xor
adc
pop
mov
hlt
jne
push
fs
xchg
fidivl
cmp
mov
xchg
icebp
sti
and
vpshuflw
mov
insb
mov
xchg
es
cmc
sbb
mov
decb
cltd
imull
popf
mov
mov
dec
outsb
jnp
rcll
cmc
add
dec
lock
hlt
jg
push
inc
loope
inc
jp
addl
std
xor
push
rcl
sti
lds
mov
sti
mov
push
add
xor
cld
outsb
aaa
call
inc
fs
jb
sbb
movsb
lods
nop
adc
or
jne
jne
or
mov
xor
call
mov
decb
push
jno
jp
sbb
and
xor
addb
cs
xor
dec
mov
jnp
or
add
ret
into
mov
jb
roll
or
icebp
inc
mov
cmp
rcr
and
lcall
adc
push
nop
cli
xor
jecxz
mov
mov
aaa
outsl
cmp
sbb
pusha
pop
lret
fldz
aas
cltd
arpl
cmp
cmp
ret
lcall
mov
xor
pop
inc
adc
push
sahf
ljmp
insl
outsb
mov
mov
stc
popa
fsubs
mov
and
add
loopne
iret
push
lods
vmovups
inc
int
rcll
push
jno
scas
gs
mov
xchg
and
mov
xor
hlt
jmp
testb
add
xchg
or
cld
imul
jbe
sbb
subl
imul
jb
mov
nop
cmpl
inc
xlat
fimull
add
out
push
aaa
pop
fwait
inc
cwtl
leave
icebp
adcl
pop
in
int3
jecxz
nop
jae
test
scas
inc
add
mov
push
mov
pop
pop
inc
mov
out
ljmp
movq
int
in
cmp
loopne
into
addl
frstor
push
cmc
mov
sbb
mov
sbb
sbb
ret
int
and
xlat
subl
mov
ljmp
stos
aam
adc
adc
mov
xchg
addr16
insb
mov
lea
inc
mov
mov
push
in
addl
in
xchg
mov
shll
outsb
xchg
les
scas
push
xor
jmp
cmpsl
js
sarl
cli
movsl
sub
in
popa
stos
jb
mov
push
lods
mov
push
pop
inc
in
dec
inc
add
movsb
push
xor
rcr
addr16
std
add
repz
cmp
push
out
repnz
xor
push
pop
pusha
pop
pop
cs
loopne
lods
popa
je
pop
xchg
mov
pusha
xchg
sbb
loop
imulb
inc
pop
popf
inc
cmp
adc
pushf
jmp
sbb
sub
xorl
fs
fldl
jmp
test
mov
into
mov
ret
jno
xor
cwtl
adc
cli
pop
mov
jno
stc
dec
mov
scas
jl
pop
test
sar
push
fadds
and
sbb
xchg
dec
sbb
xorl
jne
jae
push
cmp
mov
pop
mov
dec
outsl
repz
inc
and
faddl
pop
jbe
mov
mov
rclb
std
imul
and
and
in
adc
ljmp
cmp
dec
popw
das
cmp
aad
adc
or
sub
fcom
jmp
inc
pop
lds
xchg
rolb
outsl
inc
and
gs
mov
sub
push
and
cmc
cs
fiaddl
stos
int3
mov
sbb
and
lods
imul
xor
fldt
ja
mov
or
or
popf
in
mov
cltd
loopne
lods
inc
push
pushf
fidivs
repz
ret
icebp
sub
or
jecxz
ss
mov
adc
popf
sub
or
and
movsb
push
dec
sub
pop
mov
dec
popa
pop
std
orb
xor
imul
sbb
lds
jl
dec
rorb
dec
lds
movsb
dec
or
lcall
sub
jnp
mov
jae
dec
movsb
test
sti
jbe
jb
dec
insb
popf
leave
test
int
jne
and
or
pusha
js
fs
cs
xchg
push
scas
test
mov
jns
jo
xchg
sbb
sbb
in
or
dec
aam
sbb
out
mov
add
divb
shrl
mov
lds
xchg
testb
fnstsw
inc
push
push
pop
movsl
nop
sbb
shrl
cmp
cltd
aas
incb
xchg
jno
div
enter
aas
lds
and
xchg
out
mov
cmp
mov
shl
push
xor
sbb
dec
fsubrl
xchg
xchg
fdivrs
loope
pop
int3
push
in
sbb
mov
scas
jo
jp
lcall
repz
jbe
iret
flds
xor
outsb
es
cmp
dec
mov
in
pop
ss
fcmovbe
xchg
iret
mov
and
push
movsl
int
lret
inc
jg
and
pop
xor
or
mov
pop
leave
imul
outsl
jb
sahf
test
cmpsl
jne
mov
adc
xor
inc
jg
mov
or
shr
pop
jnp
scas
xor
stos
xchg
jo
xchg
mov
cmp
inc
fs
sub
das
push
push
sub
stos
mov
xchg
inc
lds
dec
je
cmpsb
dec
mov
sbb
add
fists
dec
rcr
scas
dec
adcl
add
pushf
pusha
push
push
sarl
js
cmp
mov
add
lds
pop
cmp
xchg
sahf
cmp
out
xor
xchg
and
sbb
fucomip
pop
and
iret
mov
pop
xor
imul
dec
imul
and
mov
inc
aad
dec
cld
popa
add
mov
aas
loope
mov
add
mov
pop
xchg
inc
data16
iret
jp
inc
rol
xchg
pusha
hlt
loopne
aad
leave
fbld
mov
dec
es
setge
jo
xchg
mov
push
adc
push
out
icebp
mov
inc
jmp
mov
cs
mov
les
xchg
adc
inc
and
jnp
loop
icebp
enter
cwtl
xorl
sbb
mov
pushf
adc
push
mov
push
fildl
mov
test
sbb
jg
push
enter
push
mov
stc
aas
ret
mov
std
sub
sysenter
jno
idivb
adc
xor
addr16
xchg
sbb
mov
cli
mov
jnp
cmp
xchg
fmull
and
test
xor
sbb
lds
xor
xor
pop
mov
push
pop
jnp
xchg
daa
aaa
loope
jbe
mov
or
insl
sbb
cltd
add
cmp
cmp
lds
pop
add
cli
jbe
aad
sti
popa
inc
rcll
outsb
or
mov
lret
and
mov
jl
int
push
je
xchg
or
cli
fstps
int3
mov
mov
mov
lods
aam
pop
enter
outsl
cld
popf
repz
enter
and
int3
push
cld
js
adc
pop
imul
fildll
sub
cwtl
loopne
pusha
ret
sbb
daa
bound
es
mov
inc
dec
xor
inc
sub
push
sbb
cmpsl
pop
mov
dec
fwait
sahf
sbb
stc
out
lret
inc
ss
xor
dec
jl
dec
test
mov
clc
pop
imul
jp
sti
daa
mov
outsl
mov
pusha
mov
xchg
push
repz
or
inc
mov
cs
shlb
jnp
cmp
dec
insb
mov
fwait
xchg
cli
push
jge
push
and
push
add
jbe
xchg
xchg
ret
mov
mov
and
mulb
jb
inc
es
and
push
add
jbe
xchg
xchg
ret
mov
mov
and
mulb
jb
inc
es
and
push
add
jbe
xchg
xchg
ret
mov
mov
and
repnz
jb
inc
and
and
push
andb
sbb
cmpsb
rol
aad
cmp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
clc
pop
sbb
push
sti
insl
mov
mov
pusha
and
push
jo
xor
inc
adc
rolb
aad
pusha
and
push
jne
add
push
inc
inc
adc
and
shl
pushf
lods
mov
outsb
cmp
adc
and
cmp
je
adc
loopne
sahf
shll
mov
dec
push
arpl
lret
mov
scas
fsubl
mov
mov
lcall
inc
inc
shlb
sub
inc
lock
repz
enter
mov
xchg
fiaddl
mov
in
ljmp
xor
and
loopne
rcl
push
aam
outsl
and
cli
lods
clc
and
inc
call
pop
sbb
inc
push
or
nop
cmc
xor
ljmp
xor
and
ljmp
cmp
int
fstpl
adc
add
iret
adc
push
xchg
xchg
movsl
add
mov
jge
out
mov
push
sbb
adc
add
jle
mov
lock
nop
ffreep
jmp
fs
sbb
or
add
movsl
sub
cmc
pushf
iret
test
or
and
add
add
mov
mov
nop
les
aad
lds
adc
and
push
add
mov
movsl
lock
rolb
aad
lds
adc
and
push
add
mov
popa
daa
cmp
cmp
xchg
sbb
es
loope
mulb
cmp
inc
sub
nop
cs
xor
inc
jbe
sub
addl
ja
or
jp
inc
pop
inc
jo
mov
in
jno
nop
jmp
sbb
cmp
popa
dec
test
stc
xor
sub
stos
pushl
pop
push
fldt
inc
xchg
pop
aad
int3
shll
add
add
adc
ja
cmpsb
or
adc
jle
dec
pop
mov
je
add
outsb
adc
sub
movsl
fucomi
mov
in
arpl
jne
shll
xchg
sbb
sub
or
fcomps
dec
xor
mov
mov
and
jle
imul
notb
nop
mov
out
movl
pusha
sub
xor
in
mov
fstpt
addr16
jnp
xchg
sbb
out
sub
xchg
adc
jmp
icebp
xor
sbb
testb
mov
bnd
popf
in
xchg
addr16
pusha
sub
dec
add
jp
dec
push
dec
pusha
pop
je
scas
aam
fs
inc
adc
loopnew
xor
fimuls
jecxz
sbb
test
fisubl
cmpsl
push
mov
jp
adcb
inc
loop,pt
hlt
repnz
fsubrl
leave
pop
pusha
fcmovnb
or
shll
lret
sub
mov
daa
lcall
ja
aas
xor
add
cwtl
std
fdivp
adc
cmpsl
in
imul
repz
aas
dec
popa
jae
pop
mov
loopne
xchg
push
push
bound
outsl
jb
xchg
cmpsb
jle
push
mov
and
mov
inc
imul
add
xchg
fdiv
pop
push
inc
popa
mov
ror
roll
mov
cmp
loop
cmp
aam
mov
sbb
sbb
jge
jp
mov
dec
jnp
mov
cmp
sub
xlat
popa
xor
fmulp
sbb
jg
cmpsl
stc
mov
popa
pop
pusha
pusha
out
test
jnp
in
mov
push
gs
jmp
adc
stos
xchg
arpl
xchg
add
movsb
inc
fcomps
and
gs
mov
xlat
cmpsl
mov
test
scas
fcomp
lret
sub
ja
cmp
mov
mov
out
loope
fdivrs
stc
jge
aaa
inc
jae
mov
xchg
dec
add
dec
mov
mov
ds
inc
out
dec
cmpsb
pop
out
cld
mov
sbb
pop
adc
dec
daa
test
mov
ss
das
dec
int3
movsb
jecxz
mov
jmp
scas
movsb
mov
adc
rcrl
sbb
mov
fxch
fidivrs
repnz
lods
loope
out
xor
and
push
push
test
loopne
aad
neg
enter
add
mov
jecxz
or
loopne
and
jg
les
stos
mov
mov
mov
in
and
lcall
push
cmp
mov
mov
cmp
xor
mov
jle
stc
jns
fsubrl
out
jge
js
push
cmpb
nop
adc
cmp
jle
push
cld
mov
inc
jns
xor
inc
cmp
cld
xor
adc
inc
fdivrl
inc
pop
inc
push
out
mov
pop
sub
mov
jno
into
in
int3
int
sub
lcall
int
cmp
inc
addr16
inc
fcoms
pop
lret
ja
addr16
into
push
mov
pop
jecxz
repz
cmp
leave
inc
and
and
sbb
mov
lock
inc
test
fidivl
mov
cmpsl
inc
shrb
mov
and
mov
lods
mov
or
cmc
sub
pusha
aam
pop
fmuls
jno
in
rsqrtps
cs
filds
cmp
sub
lock
push
add
push
mov
inc
jge
ds
scas
and
adc
scas
pop
test
xor
imul
popa
ss
add
jnp
xchg
lea
gs
mov
repz
cltd
sub
outsl
lods
sbb
jno
jnp
pop
mov
or
rcll
jle
filds
sbb
mov
xor
daa
inc
dec
xchg
xor
std
popa
pop
lock
jo
lea
lods
add
lock
jne
lods
push
and
fists
nop
out
aam
push
pop
jb
xchg
mov
push
xchg
push
out
std
inc
cmpps
das
fwait
pop
jo
or
pop
or
sub
sub
ljmp
rep
lods
jns,pn
fidivl
insb
sbb
add
bound
mov
lds
test
inc
sbb
xchg
pusha
push
scas
lods
xchg
in
xchg
push
xor
pop
loop
mov
cmp
dec
jno
xchg
jne
pop
inc
jae
jmp
jl
jge
gs
add
dec
jns
xchg
test
repz
xor
pusha
add
fwait
cmp
decb
aaa
and
popf
pop
mov
jle
in
jbe
ficoms
pop
stos
mov
push
cmpsl
or
loope
cmp
shlb
sbb
fdivl
xor
test
sub
fs
sbbb
fs
mov
mov
sbb
cmpsl
adc
jo
mov
cwtl
insl
ret
push
cmp
addr16
mov
add
lods
jl
lret
xchg
call
negb
jge
mov
nop
jnp
jns
test
je
mov
inc
and
jns
jne
push
inc
mov
jle
and
mov
aaa
xchg
test
addr16
and
jg
dec
pop
enter
xor
fists
ds
xchg
sub
ljmp
jle
fadds
push
dec
add
push
std
js
mov
in
arpl
cmp
popa
loope
add
or
fs
mov
xor
inc
stc
lahf
gs
dec
jno
mov
push
lret
mov
movsb
sub
cmpsl
popa
cmpsl
mov
js
mov
hlt
cld
xor
fsubrl
ljmp
nop
and
push
cmp
inc
call
dec
push
jns
and
inc
jp
test
stos
int3
xorb
xchg
loop
inc
mov
dec
loope,pn
cld
mov
addr16
mov
add
and
mov
out
pushf
imul
add
dec
sbb
adc
xor
fisubrs
stos
adc
std
mov
shll
loopne
xchg
pminsw
stc
sbb
jle
jp
sub
in
mov
xor
mov
xchg
mov
and
mov
push
push
pushf
mov
repz
push
pop
adc
loopne
scas
insb
lahf
sbb
or
ret
iret
lret
xor
sbb
addl
les
ret
jns
mov
pop
push
sbb
out
lret
pop
aad
dec
mov
xchg
outsb
rorl
into
push
dec
inc
or
and
xor
arpl
mov
mov
cli
dec
push
inc
push
stos
out
test
adc
pop
cli
adc
xchg
jo
jecxz
inc
and
loop
andb
or
xor
xchg
add
xchg
xlat
push
or
cmp
push
inc
mov
out
fs
jbe
test
pop
add
pop
and
roll
sub
mov
push
push
loope
push
divl
mov
mov
adc
rcr
aaa
idivl
mov
mulb
cmp
outsb
jae
push
addr16
pushf
outsl
sbb
dec
jbe
pop
fcomip
movsb
dec
jae
movsl
pusha
sub
jl
subl
xchg
stc
test
cmp
dec
sbb
pop
push
adc
pop
rorb
into
popa
jae
clc
pop
fbstp
and
cli
pop
insb
and
push
xor
lret
loopne
sub
mov
pop
test
add
icebp
ss
sub
fsubl
adc
in
lcall
mov
xor
cli
sub
sub
dec
push
mov
stos
rorl
repz
divl
aaa
mov
push
in
jle
shrl
jae
call
lret
push
idivl
mov
dec
sbb
dec
roll
cmovp
mov
xor
cmp
mov
mov
cmpsl
sahf
xlat
mov
jecxz
shr
leave
push
jg
shrb
pop
push
int
mov
xchg
cs
jae
lahf
data16
cmpsb
test
dec
mov
or
lods
mov
test
aad
mov
rorb
call
aad
jp
sbb
inc
xorb
xchg
aaa
lcall
jb
shl
aam
fldt
das
xchg
push
jns
jmp
pop
push
stc
jge
jne
js
add
and
xchg
adc
push
pop
ds
cmpsb
repz
out
pop
add
cmpsb
fnsave
enter
pop
sub
rclb
in
fiaddl
xchg
add
aad
cmp
inc
imul
add
psubd
shlb
test
mov
sbb
clc
lea
in
les
cmc
mov
imul
mov
outsl
adc
adc
sahf
adc
mov
imul
xor
rcrb
into
loopne
dec
lds
out
jge
dec
xor
test
js
jle
lret
insb
mov
pop
dec
aam
call
out
jb
sub
mov
ret
leave
in
pop
mov
cmc
cmp
and
and
add
gs
and
fmul
scas
or
mov
or
das
cmp
aam
stc
sub
mov
push
in
jl
test
pop
sti
mov
cmp
dec
jbe
test
mov
inc
jecxz
push
in
inc
cmp
sub
pop
cwtl
pop
insb
adc
cs
mov
test
enter
push
and
sbb
cld
aad
add
out
xchg
mov
movsl
in
sbb
dec
mov
dec
pop
arpl
sbb
add
arpl
cmp
mov
mov
xor
aad
push
nop
xchg
xchg
xorl
push
or
sbb
out
dec
pop
pop
ss
nop
loope
push
cmp
mov
dec
xchg
sbb
lock
push
stos
dec
in
adc
cmpsb
and
ja
cs
jb
inc
ret
arpl
xor
mov
movups
adc
pushf
lods
shl
stos
mov
jo
and
push
xchg
adc
sbb
test
pushf
movsb
mov
out
sahf
insb
push
lea
pop
push
data16
subl
cmc
pop
inc
cltd
mov
pop
loope
or
insl
mov
xchg
inc
push
fcom
xchg
std
mov
aam
data16
jbe
xlat
add
mov
adc
push
adc
push
mov
inc
subl
ret
xorl
cmp
movsl
pop
sub
jns
push
clc
or
popf
dec
jno
dec
out
outsl
adc
add
mov
rol
loope
les
pop
scas
pop
and
inc
inc
sub
sub
imul
xchg
mov
mov
jnp
test
mov
mov
sbb
leave
sub
fs
arpl
popf
xchg
sti
mov
imul
andb
jo
es
and
decl
pop
cmp
jb
pop
rorb
and
cmovns
jl
sbb
mov
sbb
mov
bound
lahf
jbe
fdivrl
add
mov
lock
inc
pop
in
or
sbb
repnz
push
insb
xchg
test
sub
mov
out
mov
aas
aam
pop
pop
dec
shl
aad
arpl
mov
and
in
fidivs
pop
mov
cmp
cmp
jle
call
rclb
jmp
sar
lret
xor
inc
out
arpl
pop
pusha
mov
jg
mov
test
push
fstpl
adc
ljmp
out
movsl
test
mov
push
mov
push
adc
cmp
mov
jbe
adc
adc
mov
lret
shl
add
or
into
subb
loopne
lahf
test
enter
pop
mov
ja
lret
sbb
fisubs
gs
mov
pop
cli
sbb
push
sbb
or
jp
popf
xchg
aam
adc
out
fsts
mov
adc
mov
jo
das
mov
fldcw
ror
dec
mov
mov
sub
sub
xchg
stos
leave
xchg
imul
test
lock
adc
jnp
iret
jbe
ret
jae
jle
sbb
xchg
push
sbb
jmp
cli
and
push
pusha
out
test
mov
movsl
stos
lods
mov
jmp
lock
xor
add
cli
daa
lea
jnp
insl
sub
insb
in
mov
sub
push
fimull
inc
push
mov
hlt
outsb
mov
in
mov
adc
out
lods
les
and
xor
xchg
dec
inc
ficoms
dec
movsb
aad
lea
insb
pusha
jo
adc
stos
sbb
xchg
ja
cltd
shlb
rep
mov
push
subb
push
enter
gs
jbe
inc
lcall
fimuls
cwtl
insb
stc
ret
arpl
int
sti
xor
cmpsb
lods
outsb
bound
xchg
nop
dec
js
cmp
jle
lock
adc
das
cmp
ja
cltd
pop
leave
enter
icebp
lods
mov
mov
cmp
test
mov
stos
xor
xchg
mov
add
inc
add
mov
and
xchg
aas
dec
mov
jne
int3
push
int
jmp
adc
ljmp
dec
jg
ja
lock
add
mov
mov
add
decl
mov
add
add
and
mov
sub
nop
sar
xchg
mov
and
or
inc
in
insl
pop
icebp
imul
pop
mov
xadd
insl
ret
mov
dec
pop
test
or
adc
cmc
inc
dec
rcll
cwtl
jecxz
jmp
lea
xchg
xchg
cmpsl
xor
sub
imul
adc
movsl
notl
lock
push
loopew
push
loope
xchg
adc
xchg
cld
sbb
jecxz
add
test
test
ja
mov
mov
jne
and
or
mov
pop
pop
int
dec
incb
jno
push
mov
xchg
push
fwait
mov
stos
lods
dec
rolb
shlb
adc
xor
dec
mov
and
adc
icebp
or
xchg
add
jg
mov
jae
fwait
aam
fnstcw
adcl
jge
cmp
lock
inc
jg
dec
fmuls
lock
jns
into
je
lds
and
es
dec
and
cs
dec
sbb
mov
jae
add
jno
mov
lret
pop
xchg
gs
das
popf
cld
sarl
dec
cli
cmp
sub
and
loop
cmp
in
lret
jb
push
loope
iret
inc
aad
mov
pop
adc
mov
xchg
add
mov
mov
jae
in
in
or
int3
insl
daa
push
daa
mov
test
push
cltd
xor
in
cmpsb
or
sub
ja
push
rcll
pop
cmpsb
data16
jne
push
mov
add
xor
into
sbb
pop
push
pop
mov
mov
insl
inc
mov
inc
mov
enter
inc
cli
push
xchg
sbb
stos
orl
stos
and
invd
add
add
jo
push
or
dec
mov
mov
xchg
cmp
daa
nop
fwait
stos
test
mov
test
inc
sbb
mov
sbb
push
mov
push
pop
xor
imull
mov
mov
insb
fcompl
out
mov
rcll
and
jne
das
enter
aaa
roll
xchg
push
mull
xor
jmp
or
adc
out
cmp
jecxz
aaa
push
mov
ds
mov
dec
adc
mov
pop
decb
mov
jns
daa
mov
cmp
ret
test
lcall
in
adc
mov
fs
sbb
xchg
and
xchg
mov
sub
cwtl
xor
and
mov
jns
sbb
hlt
lcall
int3
pop
lcall
out
repnz
cmpsb
or
sahf
mov
sbb
scas
gs
adc
xchg
pop
into
mov
loope
jge
loopne
mov
scas
mov
or
or
enter
jno
lret
lods
scas
sub
cltd
cmpsb
stos
mov
xchg
aam
pop
pop
loopne
mov
xor
add
dec
pop
push
fadds
lods
fiaddl
jno
dec
sub
or
mov
loope
cmpsl
outsl
or
scas
sbb
mov
dec
add
add
ss
and
and
sbb
mov
lret
imul
sbb
sbb
xlat
lods
fisubs
sub
adc
xor
scas
jae
les
cmc
push
jo
test
stc
mov
ret
icebp
cmc
xchg
mov
jmp
adcb
sub
pusha
cmpsb
jae
mov
arpl
dec
mov
leave
adcl
addr16
push
pop
in
push
scas
dec
popa
ss
lahf
imul
adc
movsb
mov
xor
pop
jbe
add
sbb
jmp
push
movsb
fstl
pop
mov
cmc
ret
std
fcoms
and
jecxz
in
inc
pop
insb
push
das
pop
xor
imul
sub
jno
testl
pop
test
cli
imul
sbb
lret
aad
inc
aam
imulb
fisttpll
repnz
inc
std
lds
push
pop
jb
sbb
sub
mov
and
test
pushf
jnp
hlt
and
les
jnp
lret
jmp
shll
stc
jl
repz
mov
ss
xchg
mov
sbb
mov
clc
jp
rorb
jp
pop
adcl
mov
shr
mov
stos
pop
fwait
lret
xchg
dec
repz
or
xchg
and
sbb
cwtl
out
dec
xor
pop
adc
movb
popf
xor
sarb
int
fmuls
xchg
ret
xchg
xchg
adc
adcl
or
out
inc
xlat
mov
lcall
sbb
stos
mov
add
test
rclb
add
sbb
pop
hlt
adc
popf
mov
shr
es
jns
mov
inc
jmp
fmul
scas
push
inc
mov
shr
ret
xchg
push
sub
push
dec
dec
fdivl
imul
xchg
cmp
pop
xchg
data16
jb
bound
push
jp
scas
cmp
cmp
shll
pop
xchg
jg
mov
lret
jge
aad
nop
loope
cmp
js
rcll
dec
scas
je
mov
inc
and
cmc
insb
mov
ret
mov
jbe
outsl
dec
imul
into
xchg
or
pop
in
push
repnz
call
scas
pop
jns
shll
ds
imul
add
adc
fldl
add
ljmp
xor
adc
jge
int3
movsl
std
mov
movsl
lods
sub
sub
mov
mov
cmp
mov
call
mov
test
pop
loop
dec
outsb
cs
cmpsl
push
int
ds
cmpsb
clc
lock
repz
fdivs
sub
inc
dec
mov
js
push
pop
jg
fstps
sahf
imul
arpl
pop
xor
cmp
ss
inc
cmpsl
clts
ret
jl
adc
nop
cltd
fmul
inc
add
dec
jbe
mov
arpl
cmpb
pop
lock
lret
popf
mov
negl
mov
or
je
xchg
scas
ret
test
fadd
xor
xchg
add
cmc
add
cli
cmp
in
mov
jg
outsl
inc
pop
lods
cwtl
or
mov
push
lods
imul
inc
and
xlat
inc
inc
pop
mov
aad
push
cltd
xchg
daa
daa
xchg
sbb
idivb
test
gs
mov
pop
cmpsl
fwait
inc
std
add
ja
lret
xor
mov
hlt
cmp
test
inc
shr
das
out
mov
adc
xlat
dec
or
push
shrb
lea
jg
jbe
sub
psubd
mov
call
jns
cmp
popa
ds
inc
xor
mov
xor
and
ss
jno
sarb
cli
sub
ljmp
dec
out
mov
loope
xchg
sahf
stc
dec
adc
subb
fcoml
pop
ror
sub
push
mov
loop
cli
mov
sub
mov
sub
pop
div
cmc
lods
cltd
shl
mov
lds
adc
and
push
add
mov
movsl
lock
rolb
aad
lds
adc
and
push
add
mov
cmpsb
mov
hlt
mov
les
sbb
add
and
and
lods
loopne
lock
mov
inc
nop
xor
inc
add
iret
stos
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
ss
push
ja
fcoml
and
xor
cmpsb
imul
xchg
cmpsl
cmpsl
es
ss
pop
ja
addr16
jbe
inc
aaa
push
inc
cmpsb
xlat
mov
out
xchg
out
repnz
push
ss
push
ja
addr16
jbe
inc
aaa
push
daa
cmpsb
xlat
mov
out
xrelease
sarb
aaa
dec
and
add
lods
push
call
daa
push
mov
mov
repnz
dec
pop
arpl
mov
ljmp
and
fisttps
sbb
sbb
mulb
movsl
ja
bound
leave
int
and
cmpsb
xlat
out
shl
imul
inc
cmp
push
es
cli
xor
pop
pop
cmpsb
aas
push
mov
jo
xchg
jle
push
xchg
cmpsl
fistl
add
pushf
jle
inc
push
daa
into
sub
rcl
or
xchg
inc
fildll
inc
fimuls
ss
mov
xchg
outsl
xchg
mov
xlat
pusha
ret
repz
xchg
xchg
xlat
mov
pop
jns
ss
push
ja
addr16
jbe
inc
aaa
push
daa
cmpsb
xlat
mov
xchg
xchg
out
xchg
testb
push
jb
push
pop
es
push
xor
cmpsl
add
jmp
jecxz
shrb
jne
jb
pop
add
push
adc
pusha
cs
mov
mov
nop
repz
repnz
xchg
ror
repz
push
sbb
and
push
daa
cmpsb
xlat
mov
xchg
xchg
out
xchg
testb
push
ss
push
ja
addr16
jbe
inc
aaa
push
daa
cmpsb
xlat
mov
xchg
xchg
out
xchg
testb
push
xor
sbb
loop
test
mov
flds
hlt
mov
jecxz
fwait
mov
pop
es
dec
cmpsb
inc
fdivrs
fbld
fwait
pop
rorl
popa
call
xchg
mov
enter
fs
nop
lods
sub
mov
out
add
and
dec
sbb
sbb
push
scas
mov
xor
and
mov
and
inc
lea
fists
clc
sub
push
cmc
mov
add
xchg
repnz
sub
les
in
inc
lea
pop
test
dec
push
push
popa
gs
cmpsl
lea
xchg
pushf
ficoml
daa
push
fisubrl
enter
rcrb
lods
in
and
daa
popf
add
mov
mov
mov
ret
pop
push
mov
inc
cs
xchg
lock
pop
adc
aaa
lahf
cmp
add
or
loop
mov
pop
add
loope
movsl
insl
jecxz
sti
les
aas
icebp
scas
cmp
push
add
sub
icebp
mov
mov
daa
push
cmp
outsl
adc
iret
in
and
ss
mov
stos
movsl
inc
inc
pop
loop
rorb
mov
nop
and
jb
fsubrl
sti
mov
cwtl
out
aad
nop
movsb
pop
dec
hlt
stc
mov
jns
jmp
mov
or
test
add
mov
das
sub
inc
pushf
sbb
or
in
ret
push
mov
in
insb
cmp
in
dec
pop
popa
scas
xchg
lea
adc
xchg
cmp
test
or
mov
ret
mov
cmp
pop
cld
jne
push
adc
sub
rclb
insl
das
push
daa
mov
adc
xchg
cmp
sahf
inc
jbe
jge
pop
xor
mov
adc
cli
mov
jae
and
aas
jl
jecxz
neg
idivl
scas
jecxz
xchg
sub
lock
out
stc
adc
fstp
cmp
aad
xchg
shlb
enter
mov
xor
sbb
and
dec
cmp
cwtl
xchg
xchg
pushf
dec
mov
cmp
xorl
mov
and
fstpt
jnp
push
cmpsl
pusha
mov
add
jl
into
cmp
int
and
jg
dec
pop
ljmp
dec
sbb
mov
xor
icebp
es
xor
cmp
jnp
jae
aam
and
enter
cwtl
aam
cltd
dec
movsb
xchg
icebp
in
add
adc
mov
push
jl
xchg
popa
mov
sbb
add
mov
scas
sub
mov
test
jnp
dec
loopne
dec
rcr
lock
into
aam
or
das
out
inc
fwait
and
repnz
inc
mov
or
dec
mov
sbb
pop
add
dec
jge
clc
mov
aam
cli
ss
out
ds
popf
ja
sahf
cmc
xor
jp
repnz
or
roll
push
outsb
mov
sbb
pop
adc
adc
or
scas
and
inc
repnz
xor
es
or
sbb
and
push
pop
mov
aad
add
dec
lahf
mov
rcl
lret
xlat
notb
mov
jmp
rcrb
test
adc
jb
bound
push
out
sbb
jl
inc
cwtl
xlat
shll
xorb
sub
pushl
push
stc
cmp
loop
mov
lods
call
add
sub
mov
jmp
repnz
insb
push
shrl
pop
dec
mov
jb
mov
sbb
mov
lret
xor
in
mov
dec
and
jle
pop
xor
and
push
loopne
subl
pop
lahf
pop
divb
xchg
es
mov
addl
ret
add
dec
movsl
test
push
cli
test
dec
icebp
fs
xchg
pop
or
js
in
or
and
jns
mov
rcrl
stc
gs
xchg
movsb
iret
adc
je
nop
cs
dec
test
pop
jecxz
jle
shrl
inc
push
mov
push
pop
addl
cmp
ret
add
pop
xchg
sbb
mov
loope
inc
stos
xchg
ljmp
out
cwtl
sub
div
movsl
test
cs
mov
xchg
stos
test
adc
les
repnz
adc
push
mov
add
adc
mov
adc
mov
mov
cmp
clc
mov
je
punpcklwd
negl
sub
decl
push
lock
nop
mov
dec
imul
hlt
sub
cmc
jg
adc
adc
lods
and
add
push
test
add
flds
add
cmp
inc
xchg
inc
fcmove
enter
mov
repnz
in
mov
sti
and
or
fisubrs
pop
add
out
mov
jecxz
push
lret
hlt
ljmp
push
or
bound
ljmp
inc
addr16
dec
out
sub
mov
stc
mov
shl
stc
popf
ret
and
jecxz
cmpsl
push
in
push
dec
inc
pop
jnp
insl
dec
push
sub
xchg
adc
xchg
add
inc
movl
pop
push
movsb
sub
out
adc
jmp
mov
mov
cs
and
xchg
and
pop
mov
adc
mov
adc
xor
rorb
sub
dec
jne
and
cwtl
std
adc
xchg
jo
sub
dec
out
xchg
ss
xchg
shrb
xchg
jmp
flds
push
xchg
add
js
and
icebp
jmp
adc
cmpsl
sbb
lret
outsl
cmpsl
cld
je
not
popa
dec
add
mov
or
stos
cli
icebp
andb
mov
sahf
mov
sbb
scas
xchg
movsl
pusha
xor
jb
push
out
mov
and
cmpsb
adc
pop
mov
lds
inc
lcall
sahf
pushl
xor
cld
xor
jg
jle
mov
push
mov
adc
mov
in
lret
mov
add
rcrb
push
adc
xchg
xchg
lea
lcall
push
rep
inc
mov
scas
out
fsubl
sub
add
adc
fsubrl
mov
inc
push
das
repnz
mov
in
jge
sbb
or
fildl
sub
dec
mov
mov
mov
sbb
xchg
push
jecxz
popf
pushf
pop
shl
xchg
mov
jge
ret
rclb
fnstenv
aas
sub
adc
roll
idiv
fwait
lods
jnp
dec
lds
insl
mov
mov
mov
jmp
jae
cmpsb
pop
or
jne
jge
push
mov
or
repz
jmp
lods
loop
mov
or
xchg
adc
sti
enter
or
and
incb
pop
add
sarl
add
lret
adc
push
mov
cltd
pop
orb
and
mov
and
roll
imul
dec
mov
inc
xor
imul
dec
xor
sbb
xchg
mov
pusha
in
xchg
in
pop
cmpsl
sub
clc
xor
xlat
inc
nop
je
mov
or
xchg
jae
inc
fs
sbb
std
icebp
mov
dec
daa
into
rcll
inc
inc
jnp
push
lods
imul
rep
inc
add
fcomip
aaa
stc
pop
cmc
jno
fsts
cs
mov
mov
js
mov
je
mov
mov
js
hlt
fisubrs
scas
inc
cmp
ret
sbb
ret
fcoms
xchg
mov
insl
negl
aaa
jmp
cmovg
or
loop
lock
sub
xor
dec
jmp
jnp
dec
loopne
fldenv
cmp
xchg
cmp
loopne
fistl
mov
rclb
add
bswap
jne
xchg
push
loope
cwtl
xchg
sbb
xchg
xchg
bound
xchg
mov
dec
mov
mov
incl
loop
ds
and
jnp
mov
mov
sub
or
sbb
mov
and
push
lcall
pop
in
or
or
lcall
jp
add
mov
add
int
test
loop
adc
lea
xchg
loop
cmc
aad
lret
adc
mov
sub
dec
jl
lret
cld
sbb
rcll
shlb
aad
loope
pop
lcall
outsb
and
pop
jnp
mov
lods
arpl
ja
mov
xor
jge
push
lock
xorl
adc
les
int
and
jne
repnz
or
pop
sub
inc
loop
dec
add
xchg
dec
shlb
or
jle
mov
mov
mov
imul
nop
inc
cmp
out
das
aaa
sbb
jae
cmp
mov
ja
dec
adc
mov
dec
mov
fcoms
out
loop
jbe
and
mov
pop
addb
xchg
and
cmpb
push
pop
vrcpps
pop
pop
cwtl
xchg
mov
xchg
enter
mov
imul
fsubp
inc
sbb
ss
or
mov
fs
push
out
pop
xor
xchg
mov
addr16
mov
jne
inc
add
in
push
fnstsw
adc
pop
fst
rolb
jbe
inc
mov
push
jnp
xchg
dec
mov
lea
fwait
push
cltd
pop
icebp
dec
mov
les
mov
and
push
push
sub
jg
or
jmp
imul
adc
push
pusha
jbe
stos
addl
inc
faddl
adc
daa
and
mov
jmp
inc
push
mov
pushf
int
sub
inc
hlt
sbb
arpl
lret
mov
jp
sub
sbb
and
dec
push
xor
fwait
mov
mov
mov
sub
xor
out
mov
jne
lcall
in
popf
lds
dec
add
fidivrl
jp
lret
fwait
jns
jnp
add
data16
std
pop
cs
stc
fs
out
jo
fwait
out
movsb
and
addl
xchg
xchg
mov
pop
push
in
std
pop
pop
and
inc
movsb
pop
imul
dec
xchg
pop
jg
sbb
popf
call
fnstenv
mov
lcall
stc
je
aas
lea
adc
in
in
mov
lods
imul
ffree
mov
mov
push
leave
je
insb
sbb
pop
fnstcw
or
xchg
cli
jl
mov
add
fildll
mov
dec
pop
inc
aaa
repnz
lds
jno
arpl
fwait
test
fwait
xchg
out
jge
xchg
out
sub
or
sub
in
mov
or
and
push
inc
cmp
mov
push
push
imul
or
lock
lea
mov
enter
jne
fiaddl
push
lret
mov
lret
ret
mov
movsl
mov
sbb
mov
jmp
xchg
bound
int
push
or
sbb
jo
fs
and
dec
and
sub
adc
ja
inc
insl
jle
sub
paddq
xlat
je
pop
loopne
cwtl
sub
fstps
sbbb
insl
or
or
or
mov
push
cwtl
adc
push
mov
fucomip
pop
sub
add
xlat
idiv
push
test
pop
sbb
sub
popa
pop
inc
pop
rorb
movsl
mov
mov
into
rol
inc
xchg
in
dec
jmp
push
sub
pusha
pop
lret
lock
push
loope
les
popf
imul
dec
imul
sub
fcmovbe
shll
adc
mov
jg
sub
push
xchg
xlat
sbb
jb
sbb
push
xchg
loopne
fiadds
mov
sub
movsb
mov
sahf
add
insl
dec
sar
call
sbb
imul
dec
mov
jp
push
xchg
fidivs
push
bound
movsb
iret
in
xchg
je
or
xchg
dec
mov
flds
push
add
leave
xor
mov
leave
sub
ds
add
movsl
adc
inc
xchg
mov
lods
in
je
push
mov
hlt
dec
push
dec
inc
xchg
repnz
inc
mov
sbb
sahf
mov
fwait
inc
test
pop
ljmp
jnp
mov
and
data16
mov
jecxz
add
in
sbb
fcomip
push
cli
std
mov
dec
sbb
push
adc
shll
rcrl
test
add
repnz
jge
faddl
pop
imul
xor
push
push
or
inc
jae
data16
test
pop
mov
cmp
cmp
sti
pop
xor
fstpt
cmp
insl
idivl
sub
fidivrs
out
sbb
jmp
and
bound
and
into
mov
push
cmpsl
pop
xlat
sub
es
daa
jle
inc
lret
add
test
ss
xor
push
mov
dec
sub
movsb
popf
ljmp
or
push
pop
jno
int
pop
fisttpl
push
and
dec
mov
sarb
fnstsw
insb
inc
fildll
pop
inc
jo
xor
testb
and
push
pushf
jno
hlt
mov
cmp
jae
jbe
icebp
and
pop
mov
lock
cmpsl
xlat
imul
jo
jns
das
cmc
fiadds
test
stc
push
dec
mov
push
xlat
jle
jns
push
ret
icebp
pop
lea
mov
sbb
scas
mov
ret
fsubs
jge
or
or
mov
arpl
xchg
fwait
mov
mulb
sub
push
ljmp
sub
sub
push
loopne
pop
leave
ret
mov
fs
sub
loop
or
lock
adc
cld
dec
jns
jno
push
cli
jge
push
aam
in
sub
dec
adc
pop
fimull
sti
push
xchg
sub
enter
mov
mov
cmp
ret
dec
dec
aam
fcmovnbe
loopne
sbb
leave
push
and
in
xor
xchg
sub
cmpsl
test
fidivs
push
cli
and
fcmove
cmp
sub
dec
dec
mov
dec
shll
fimull
les
outsl
mov
shll
dec
sti
inc
mov
repz
mov
stc
jno
jle
cmp
jb
xchg
xor
dec
sub
cmp
imul
cmpsl
lret
xchg
jl
mov
sbb
negb
stos
idivb
mov
pop
adc
es
xlat
jnp
scas
xchg
lret
dec
mov
icebp
stc
and
imul
test
shlb
fwait
adc
into
fsubr
mov
jecxz
movsl
in
test
mov
cltd
jnp
fsubl
test
clc
cmp
cwtl
xchg
movsb
out
mov
sub
adc
clc
aaa
cmp
test
je
xchg
out
and
pop
pop
mov
cmp
and
dec
subb
xor
jb
mov
ds
pop
mov
nop
out
sub
pop
add
xor
repnz
pop
jbe
add
push
mov
lds
mov
jno
mov
inc
rorl
shrb
xchg
and
mov
enter
sub
xchg
mov
in
xor
mov
ja
dec
clc
dec
testb
out
mov
mov
out
fnstsw
mov
dec
popa
repnz
mov
mov
jae
pop
sub
jmp
test
es
jl
adc
cltd
cmp
xor
xor
dec
mov
sbb
mov
mov
xchg
mov
aas
push
fwait
inc
push
iret
jb
stos
rorb
push
pop
imul
adc
aaa
adc
popa
mov
push
sarl
cmp
mov
dec
mov
jns
mov
iret
push
stos
inc
and
mov
cmp
test
or
mov
fiadds
cmpsl
mov
inc
cli
out
inc
mov
mov
bound
cmpsb
out
dec
dec
ds
into
mov
jle
push
sahf
sbb
jg
imul
aam
pop
push
lds
adc
lret
mov
pusha
push
cmp
iret
adc
cmpsl
adc
bound
mov
push
loopne
cmpsb
jle
sub
sub
aaa
mov
scas
cmp
xor
lea
ds
fldl
sahf
sbb
pop
testb
jg
xchg
repnz
mov
dec
shl
and
test
stos
and
pop
fs
xor
nop
sub
jl
scas
add
out
gs
imul
test
jle
aaa
cs
pop
std
ret
sub
add
aaa
das
pop
and
sub
lcall
hlt
dec
flds
stos
push
mov
ja
and
testb
inc
inc
add
ret
mov
dec
or
xchg
lods
push
ds
popf
dec
aam
push
sub
dec
mov
out
incl
jae
in
and
cmp
mov
xor
adc
cmpl
jno
push
add
xlat
jnp
imul
sbb
or
int3
xchg
imul
xchg
imul
cli
lods
test
cmc
mov
jo
fidivs
sbb
leave
sarl
sbb
mov
leave
push
fwait
mov
data16
loop
add
mov
pop
adc
sbb
gs
lahf
pop
lret
mov
out
xchg
roll
arpl
dec
xor
gs
inc
daa
int
xchg
iret
cli
repnz
mov
mov
mov
ljmp
mov
fcmovnb
and
in
xor
sbb
or
je
adc
test
repnz
and
gs
incb
or
sub
mov
push
jp
mov
js
test
fneni(8087
nop
jne
pop
jge
add
fwait
adc
pusha
sbb
jb
insb
arpl
ds
ss
mov
pop
dec
and
or
jl
jnp
imul
cmp
sub
push
das
sub
pop
push
rorb
xchg
mov
pinsrw
pop
aas
push
cmpsb
call
jge
cwtl
imul
dec
fidivrs
enter
movsl
rcll
stos
push
mov
shrl
jbe
add
jge
fldcw
stos
pop
out
rcl
loop
push
dec
cmpl
mov
in
xchg
adc
mov
mov
int3
push
mov
stos
push
mov
cld
div
mov
xchg
pop
stc
adc
lahf
test
idiv
push
daa
mov
pop
xchg
xchg
inc
bnd
ror
sbb
inc
icebp
test
push
das
jns
aam
or
or
in
stos
cmp
repz
xchg
shll
adc
jnp
and
pop
fcmovnu
jge
lahf
push
outsl
cmp
sub
paddb
int
or
add
daa
sbb
mov
test
mov
sub
jge
nop
test
xor
enter
pop
dec
add
dec
add
inc
xor
ret
sub
mov
xchg
ds
dec
pop
mov
stc
pop
and
push
mov
sub
arpl
in
add
cmp
scas
mov
pop
mov
dec
in
xchg
cmp
fnstenv
int3
icebp
jb
cmpb
push
xchg
xchg
or
mov
aam
je
pop
lahf
cltd
cmpsl
add
pop
ret
lock
fwait
js
adcl
mov
addr16
push
xorl
rcrl
nop
mov
inc
add
cmc
sub
scas
das
hlt
movsb
je
cmp
mov
ljmp
lock
lret
fdivrs
and
mov
push
add
fidivl
in
dec
mov
push
add
mov
por
jnp
aam
or
rorb
loopne
dec
arpl
pop
or
jmp
adc
mov
mov
push
icebp
shlb
mov
loop
xlat
mov
lock
mov
push
fmuls
dec
out
cmp
xor
inc
sub
inc
das
dec
cmp
xor
mov
jge
bound
insl
inc
rolb
mov
out
xor
ds
enter
nop
mov
lret
imul
lds
mov
sbb
pop
scas
mov
mov
push
mov
or
test
sbb
adc
mov
mov
loopne
sti
les
lds
adc
pop
xor
and
inc
jl
lods
lret
stos
insl
pushf
pop
push
repnz
clc
fisttpl
movsb
inc
shlb
xor
sbb
test
jl
push
and
cmpsl
repz
lods
push
insb
mov
sub
nop
icebp
bound
addb
mov
pop
dec
add
imul
lds
cs
xchg
stc
jnp
cmp
adcl
sbb
push
dec
inc
add
pop
sub
out
sub
inc
popf
add
lret
decb
mov
xlat
stos
test
dec
clc
imul
jae
in
and
mov
cmova
ja
addr16
jbe
inc
aaa
push
daa
cmpsb
xlat
mov
xchg
xchg
out
xchg
testb
push
ss
push
ja
addr16
jbe
inc
aaa
push
daa
cmpsb
xlat
mov
xchg
xchg
out
xchg
testb
push
ss
push
ja
addr16
jbe
inc
aaa
push
daa
cmpsb
xlat
mov
xchg
xchg
out
xchg
testb
push
aaa
inc
pop
ja
addr16
jbe
inc
aaa
push
out
xlat
mov
sub
xchg
nop
xchg
pop
jle
cmp
pop
mov
and
cmpl
and
adc
inc
cmc
push
cmc
mov
and
repz
ret
shll
xchg
xchg
add
jae
inc
in
cmc
mov
cmp
repz
ret
jge
outsl
and
scas
outsl
rclb
mov
test
ss
cmc
cld
add
mov
enter
inc
push
cld
push
mov
ss
jmp
cmp
insb
leave
sbb
rep
cmp
add
in
mov
inc
jb
adc
fidivrs
test
push
push
adc
push
add
shll
xor
push
aad
sbb
mov
and
out
inc
cmp
mov
std
inc
jns
pushf
xchg
xor
shrb
pop
cmp
insb
aad
gs
lret
or
xchg
outsb
mov
lods
mov
in
or
dec
cmc
inc
and
add
test
cmp
xchg
mov
outsl
add
xchg
das
jecxz
repz
ret
jl
insb
and
adc
in
xchg
loop
adc
jecxz
cmpl
and
push
in
add
imul
test
xchg
in
cwtl
jge
adc
jecxz
mov
mov
cld
hlt
add
adc
bound
es
movb
inc
incl
sub
push
ret
shll
test
xchg
add
jae
inc
in
cmc
mov
and
repz
ret
shll
test
xchg
add
jae
inc
in
cmc
mov
add
es
fldenv
add
sub
xchg
enter
mov
fsubs
mov
lret
inc
mov
fsts
push
mov
ds
fsts
sub
testl
xchg
sub
les
ret
xchg
out
pop
pop
mov
inc
mov
xchg
das
imul
pop
je
mov
lcall
cmp
push
sbb
insl
dec
pop
mov
push
shlb
and
pop
stos
fistpll
fldenv
int
mov
mov
fists
iret
cmpsb
cmp
testb
add
out
adc
ljmp
das
scas
push
push
mov
test
ret
mov
pop
daa
push
jp
lcall
aas
cli
mov
sbb
out
dec
aaa
adc
cmc
cmp
push
pop
pusha
dec
ljmp
dec
mov
adc
cs
test
lods
sti
sub
aas
mov
imul
icebp
mov
arpl
mov
int3
pop
jecxz
mov
test
inc
xor
inc
or
sub
call
mov
pop
inc
add
vpcmpeqd
xor
mov
jp
fcompl
leave
aad
pop
jne
les
xchg
cmp
pop
or
repnz
push
and
and
xchg
shrb
mov
lret
es
add
leave
pop
xchg
fcoms
mov
repz
mov
dec
and
cli
xor
bound
lea
sbb
push
xchg
outsl
xchg
stc
icebp
lcall
nop
imull
dec
sub
mov
jns
dec
mov
outsl
div
pop
add
mov
push
push
ds
push
mov
add
movsb
js
cmp
sbbb
and
ret
pop
cmp
popa
push
out
or
dec
mov
xor
enter
inc
das
and
negl
divps
cmc
loopne
das
push
pusha
subb
cmp
arpl
push
idiv
cmc
xor
xchg
out
cmpsl
fdivrl
mov
mov
cmp
movsl
int3
sbb
lds
call
int3
mov
sub
lret
dec
fldl
xchg
push
incl
cmp
jno
xlat
jp
pop
fistps
inc
test
movb
dec
repnz
pusha
in
inc
sbb
sahf
inc
test
aam
cmpsb
das
pop
mov
aam
mov
xchg
cwtl
push
inc
jbe
xchg
dec
push
pop
inc
pushf
xchg
jne
dec
rol
dec
clc
mov
les
addb
push
dec
ret
icebp
xchg
sbb
push
cld
int3
cmp
sub
lds
jae
pop
or
arpl
pop
add
test
xchg
or
pop
into
out
rcrl
outsb
test
sub
pop
dec
movl
das
fucomi
pop
out
mov
aam
adc
clc
rcl
bound
pslld
dec
mov
jg
mov
das
ror
js
lret
stos
pop
scas
std
xor
mov
inc
and
les
jg
dec
or
jo
jmp
pushf
arpl
aas
into
push
inc
popf
inc
movd
cmp
loopne
xchg
fwait
std
inc
idivb
mov
inc
lahf
cmpsb
push
ror
adc
test
adc
jbe
lret
adc
popa
in
xor
mov
loopne
pop
mov
fdivr
sbb
mov
fdivl
mov
mov
stc
sbb
cmp
cmovno
jae
xor
push
push
cmpsb
loop
stc
loope
cmpsl
sub
sbbb
and
pop
xlat
packuswb
or
cmp
mov
mov
scas
cmp
dec
mov
push
jnp
lods
fcmovu
imul
pop
ja
clc
mov
mov
fdivrl
test
lcall
cmp
jnp
xor
mov
and
adc
cmp
push
adc
push
sar
fisubrl
pandn
jp
jmp
mov
xchg
fists
out
js
xchg
sub
push
cli
cmc
daa
mov
inc
and
sbb
leave
outsl
arpl
lret
jo
shll
gs
aas
xchg
lds
inc
daa
jge
xor
pop
adc
jbe
inc
push
add
mov
jg
push
jae
mov
mov
mov
in
scas
dec
cmp
jecxz
inc
and
jl
jg
outsl
fldcw
out
xchg
jbe
in
scas
push
adc
xor
rcr
push
loope
mov
lds
sbb
loop
sub
mov
jnp
pop
jne
xchg
add
aam
mov
sbb
sbb
mov
sbb
push
add
ss
hlt
fmulp
and
mov
mov
sahf
sub
mov
xchg
int
sbb
sub
pop
push
cmp
lods
je
idiv
and
xchg
jle
inc
in
hlt
cmpsb
push
movsl
inc
xor
lcall
mov
rcll
mov
ljmp
inc
sti
lret
pop
scas
idivb
sbb
push
aam
std
imul
les
movsl
cli
xchg
xor
in
mull
lret
add
inc
aam
movsb
loope
mov
js
mov
dec
insb
cmp
jge
test
fcoms
and
cmp
sub
setns
or
push
out
stc
test
and
mov
mov
in
pop
mov
mov
push
orl
mov
inc
sbb
lret
aam
push
out
fsubrs
or
cwtl
stos
shl
addb
or
xor
lods
jg
popa
out
ds
je
aas
push
sub
cmc
int3
sti
xchg
push
push
mov
scas
scas
xchg
bndstx
and
and
jno
cmp
loopne
test
lea
inc
popa
adc
push
push
rcrl
ror
mov
sbb
arpl
rorl
inc
in
repnz
and
dec
inc
sbb
add
pusha
or
sub
ljmp
xchg
lock
adc
add
cmp
mov
addr16
daa
and
jle
mov
arpl
jmp
cmpsl
pop
xchg
fstl
mov
addr16
gs
pop
mov
or
inc
dec
ds
jmp
mov
pop
and
ret
sarb
sub
ficompl
fistpll
xchg
or
repnz
or
cmc
popf
lahf
push
dec
xchg
and
aad
dec
stc
cltd
and
mov
xor
sbb
jle
pusha
lahf
jg,pn
and
xlat
jnp
xchg
or
cmp
jns
pop
jl
fsubs
xchg
orb
cmc
lods
xor
sahf
jp
aad
jge
add
icebp
jmp
push
mov
int3
jg
les
xchg
mov
pusha
jge
jl
test
sub
shrl
jns
pop
ss
out
in
sbb
add
stc
scas
dec
sbb
pop
xchg
test
jg
jge
testb
xlat
add
add
xchg
jle
dec
push
addr16
shrb
and
pushf
in
sub
inc
or
adc
repz
jp
mov
cmc
shll
sub
cmp
sbb
adc
nop
outsb
lock
test
nop
fwait
add
cltd
icebp
mov
sahf
ljmp
leave
in
stc
loopne
mov
mov
aad
insl
pop
xor
mov
data16
cmp
pop
ret
js
rcll
test
fistpl
into
sarl
js
push
xlat
xor
inc
mov
aam
andl
and
js
mov
mov
jg
cmp
add
and
dec
int
add
jmp
movsb
lds
dec
pop
mov
inc
xchg
mov
inc
inc
mov
aaa
adc
sub
sbb
rcrl
arpl
add
fsubrl
out
inc
mov
leave
mov
pop
pushl
mov
pop
add
sub
pop
in
sti
sbb
or
and
int3
mov
cmp
out
loope
sub
test
cli
out
stos
adc
jae
loop
test
or
loop
or
dec
lret
mov
and
xchg
mov
out
push
cltd
and
push
aad
mov
and
inc
icebp
repnz
adc
popf
jp
cltd
jle
xor
mov
mov
lcall
sbb
aad
or
push
mov
ljmp
and
pop
jo
pop
inc
out
rcll
sti
push
std
sbb
jns
outsl
out
loop
sarb
inc
pop
fdivrl
imul
or
inc
setl
js
aam
in
push
aam
stc
xchg
ret
test
scas
xor
fisubrs
loop
push
enter
pop
test
nop
dec
je
sbb
imul
aad
repz
inc
enter
lock
dec
pop
popf
int
push
popf
push
data16
sbb
push
mov
mov
insl
dec
xchg
and
dec
rcll
pushf
mov
mov
fidivrs
jg
fwait
out
leave
bound
cmp
dec
scas
jbe
jmp
pop
xchg
int
jge
dec
stos
mov
in
cld
push
pop
and
popa
lods
shrl
fincstp
or
add
test
add
sub
fnstsw
jmp
imul
fidivs
mov
int
sbb
push
lea
adc
out
outsb
into
xchg
in
out
iret
jne
cld
xor
ds
mov
jmp
add
pushf
stos
jg
mov
jns
mov
mov
adc
sub
pop
pop
pop
outsb
push
into
nop
nop
leave
clc
xor
test
or
imul
mov
std
push
shr
call
mov
sbb
bound
aas
movsl
ja
lret
out
mov
out
jge
std
cmp
je
mov
xor
cmp
fs
call
icebp
push
jnp
ss
sbb
xchg
test
fwait
popf
cld
and
outsb
cwtl
in
sbb
nop
pop
sbb
mov
mov
test
mov
cld
cmpsl
stc
std
movsb
andb
xchg
lret
stos
push
fsts
xor
add
mov
pop
repnz
loop
xchg
pextrw
mov
jg
add
and
outsb
repnz
push
fsubrl
push
xchg
scas
das
repnz
mov
sbb
mov
popa
xchg
jae
adc
cmp
aaa
jp
or
sub
pop
and
pop
push
cmc
adc
cmpsl
push
jo
or
add
test
or
test
mov
and
lret
aaa
loop
pop
ret
pop
das
repnz
inc
in
cmp
sahf
js
arpl
jl
aaa
jnp
lret
movl
or
xorb
or
jle
cmpsb
jecxz
lea
inc
jns
dec
cmpsb
cmp
jae
sub
pushf
fists
in
and
adc
jmp
js
adc
test
inc
enter
mov
clc
or
imul
push
or
mul
jg
add
sbb
lret
jl
xchg
dec
mov
jb
and
mov
sbb
out
pop
lcall
pushf
add
mov
mov
stos
clc
push
mov
pop
pop
sbb
imul
jnp
in
pushf
fstps
pop
push
jno
icebp
lret
cmp
stos
jae
mov
scas
add
mov
pop
adc
insb
icebp
inc
pop
mov
adc
mov
jl
fbld
mov
and
sahf
shlb
lods
xlat
dec
popa
loope
pop
addr16
add
fildll
pop
adc
in
mov
mov
push
cld
leave
push
sub
sbbl
dec
mov
subps
inc
popa
dec
and
jp
lock
pop
inc
and
les
stos
inc
lods
loope
sub
cwtl
jno
xchg
xor
mov
mov
andb
and
push
imul
dec
push
xchg
or
cmp
add
xlat
push
testl
outsb
lcall
xchg
push
shrl
scas
add
sub
rcrb
call
mov
dec
stc
mov
xchg
enter
sub
fwait
fwait
adc
and
sti
sub
push
imul
push
out
ljmp
sub
pop
notb
xchg
push
pop
sbb
sbb
and
inc
mov
fcoml
push
mov
fs
xchg
and
mov
fnclex
aas
sbb
xchg
and
in
pop
fiadds
add
push
pop
ljmp
dec
je
cmp
xor
sti
in
mov
ds
repnz
sbb
leave
stos
filds
stc
push
fiaddl
in
ljmp
xor
mov
xchg
push
movsl
xor
div
or
cld
mov
ljmp
adc
pop
jecxz
js
roll
fs
hlt
hlt
push
loope
sub
or
pop
sbb
clc
jle
push
jl
imul
and
aad
dec
dec
mov
adc
imul
mov
loope
scas
push
sub
sbb
aas
mov
mov
or
and
or
sahf
mov
mov
dec
push
mov
data16
fstl
jne
or
mov
insb
xchg
rep
jge
ds
push
pusha
sti
and
popa
xchg
dec
repnz
testb
in
ljmp
cmp
add
xchg
shl
inc
outsb
inc
jecxz
test
xchg
sub
into
cmp
shl
in
lahf
add
mov
les
daa
add
movsl
mov
xor
inc
jne
add
outsb
push
sar
jb
jnp
rclb
mov
and
ja
push
mov
arpl
fs
xor
and
mov
dec
stc
fdivp
sbb
xchg
xor
js
test
rclb
xchg
jnp
sub
dec
lea
inc
js
pop
sbb
lret
pop
cld
subb
out
add
push
icebp
add
and
jo
repz
test
sub
inc
arpl
mov
ds
aas
jg
addl
mov
lret
fnop
mov
mov
mov
scas
or
mov
mov
es
xor
repnz
lds
mov
scas
xor
cmc
sub
sbb
aas
es
inc
add
leave
or
pop
add
and
scas
and
pop
add
test
mov
int3
mov
popf
xchg
jge
pop
ds
fwait
aam
sbb
pop
rcrb
cmpsl
insb
pop
jge
mulb
xor
push
adc
cmp
mov
jg
dec
jne
pop
and
fcompp
mov
outsl
andl
mov
aam
insl
out
jle
mov
xchg
mov
adc
faddp
sti
insb
mov
insb
mulb
fisubl
push
sbb
ds
mov
notl
jmp
in
xchg
mov
jle
pop
insl
lcall
pop
idiv
mov
push
adc
fnstenv
notb
dec
jmp
dec
outsl
push
and
cmc
mov
dec
jmp
out
into
jg,pt
fldenv
xchg
dec
sbb
popa
insl
xor
sub
jae
decl
add
cmp
sti
scas
movsl
pop
inc
sbb
add
sub
pusha
sub
adc
xchg
mov
stc
dec
repnz
or
jbe
dec
rorl
in
cs
jecxz
xchg
add
out
push
jle
fldenv
fisttpl
lods
dec
adc
mov
adc
mov
mov
xor
xor
add
xchg
int
mov
xchg
insl
insl
inc
sbb
clc
dec
jne
call
xchg
iret
loopne
xor
mov
push
mov
sub
add
cmpl
push
cmc
mov
subb
cmp
or
daa
mov
xchg
pop
lods
push
int3
sbb
js
sahf
cltd
sub
add
test
dec
mov
xchg
or
sarb
dec
lret
inc
xor
pop
jle
jne
faddp
test
sbb
sub
imul
aad
insb
mov
xlat
push
mov
mov
popf
es
pushf
jne
fwait
jl
sub
xor
xchg
sub
xchg
and
jge
sahf
and
fidivrs
outsb
test
shrb
in
mov
cmp
icebp
inc
lcall
adc
xchg
or
clc
leave
imul
push
inc
lds
in
shll
add
mov
cmc
outsb
jno
ljmp
stos
dec
das
sbb
add
loopne
int3
sbb
repz
or
push
arpl
inc
jg
dec
jle
adc
xchg
xlat
mul
insl
out
jmp
pop
data16
mov
pushf
push
and
rcrb
cs
mov
insb
adc
or
push
xor
into
push
lds
mov
jmp
mov
arpl
loope
sub
aaa
xor
outsb
mov
mov
push
sbb
mov
push
sbb
sbb
shll
inc
jl
ret
adc
ja
xchg
push
xor
add
mov
jb
mov
mov
push
mov
mov
shlb
mov
push
loopne
push
out
int3
fsubrs
adcl
shrl
adc
in
stos
xchg
mov
rorb
out
addb
leave
mov
and
frstor
fnstcw
mov
ss
in
stc
jbe
push
or
andb
lods
in
pop
cmp
xor
clc
inc
cltd
sub
ss
scas
loopne
out
faddl
das
xchg
cltd
or
lcall
jo
push
shlb
pop
dec
xchg
cmp
popf
sbb
in
sti
filds
pop
dec
lahf
dec
xor
int3
push
lds
dec
jl
icebp
push
jmp
cmpsl
jmp
mov
gs
sub
adc
fucomp
mov
lds
repnz
test
push
pop
cmc
cltd
rcrl
data16
in
push
xor
push
xchg
xchg
xor
sub
popa
fsubr
pop
mov
pushf
out
ret
ja
adc
or
call
sub
test
daa
cmp
mov
mov
cmp
shll
add
and
dec
mov
arpl
dec
js
lods
scas
mov
and
imul
add
dec
and
jg
pop
jg
and
or
mov
xor
lea
mov
cwtl
ficompl
sbbl
scas
loope
data16
cmc
mov
inc
mov
fld
xor
mov
movsl
in
mov
sbb
push
xlat
cmp
stos
roll
xlat
enter
adc
fwait
xchg
es
dec
mov
or
push
scas
push
movsl
inc
pop
add
push
aas
mov
pop
adc
mov
or
call
imul
sarl
je
jg
ret
aad
sub
popa
lahf
adc
lea
inc
imul
cmpsb
ja
sub
cmp
cmp
repz
in
cwtl
ds
fistl
inc
sbb
sbbb
cmc
popa
sub
push
jbe
mov
imulb
jge
add
pop
mov
lret
out
cmp
js
insl
and
lock
cmp
cmpsl
mov
sub
adc
mov
jne
cwtl
lock
mov
xchg
xlat
pop
cmp
addl
xor
push
in
mov
pop
pop
gs
fidivrs
sbbb
sbb
inc
push
mov
mov
sub
inc
enter
movb
jne
mov
add
and
shl
sbb
in
loopne
test
in
in
es
mov
xlat
cmpsl
mov
subl
pop
push
in
ret
inc
sub
push
lods
lea
pop
add
jns
fwait
test
sti
push
stos
inc
dec
or
jno
pop
sarb
std
dec
or
inc
fcmovnu
xor
jne
pop
cli
test
sbb
mov
jmp
test
push
aas
push
push
inc
adc
movsb
xchg
cmc
jle
rcrb
mov
push
push
inc
outsb
xchg
iret
xchg
push
and
mov
push
cs
xor
dec
and
nop
adc
popf
mov
pusha
and
xor
xor
ja
in
popa
mov
cmp
fildl
mov
inc
sbb
and
xor
inc
cmp
inc
das
cld
pop
sbb
xor
int3
cld
inc
fistpll
mov
jns
ds
mov
imul
cmpsl
pushl
jae
bswap
and
mov
cs
or
pop
xor
xchg
lods
xor
inc
mov
jbe
aaa
cmp
int
sub
loope
cmpsb
mov
scas
add
pop
bound
cmp
sbb
mov
pusha
in
mov
pop
rcrl
add
pop
pushf
inc
xor
xchg
out
xorl
mull
lret
pop
test
je
mov
rorb
arpl
xchg
xchg
and
or
cmpsl
jl
jp
ja
xor
push
test
fsubr
int3
movsb
lcall
xchg
push
xor
push
out
cmpl
popa
mov
pop
sub
add
mov
cmp
cmp
mov
inc
inc
xlat
insl
cli
out
add
mov
xchg
outsl
aad
leave
dec
fcomps
xchg
jmp
xchg
xor
ret
shll
test
xchg
add
jae
inc
in
cmc
mov
and
repz
ret
shll
test
xchg
add
jae
inc
in
cmc
mov
and
repz
ret
gs
jne
test
xchg
add
jae
inc
in
cmc
mov
and
repz
ret
shll
test
aas
test
dec
add
xor
and
in
testb
cmp
insb
cmpsb
sbb
xchg
movb
in
es
ss
push
mov
testb
insl
cmpsb
sbb
xchg
add
jbe
daa
cmc
push
in
data16
lea
mov
add
push
out
sbb
aaa
xchg
pop
add
push
out
cs
xor
push
iret
dec
leave
mov
mov
or
mov
inc
xor
mov
addl
pop
or
mov
xchg
ret
nop
and
xor
add
rolb
ss
adc
and
popf
outsl
icebp
div
mov
movsl
jbe
fdivl
push
cld
push
adc
outsb
jae
into
imul
dec
and
insl
pop
or
mov
ret
in
push
rcrl
mov
mov
orb
cs
cld
sbb
lcall
ss
out
sbb
sbb
sub
jns
mov
popf
iret
sub
enter
mov
or
insl
inc
sbb
xor
xor
shrw
cmp
xor
push
lahf
pop
test
mov
scas
add
mov
xchg
push
sahf
and
mov
loop
leave
jae
stos
sbb
add
dec
rcrl
push
ret
push
add
fstpl
pop
lea
push
fimuls
adc
or
fnsaves
inc
std
push
in
es
lea
mov
testb
insl
cmpsb
sbb
xchg
sub
inc
std
push
in
es
lea
mov
push
sbb
push
subl
add
xchg
xor
setb
jns
jnp
ss
mov
jg
dec
cmp
std
add
dec
mov
push
push
xchg
or
pop
cmp
add
pop
fs
jnp
jnp
mov
imul
loopne
ret
leave
jnp
xchg
xchg
cmp
rcrb
and
mov
loopne
aad
mov
cli
lods
lahf
rol
add
int3
and
pop
jge
rclb
out
popa
adc
mov
pop
int
insl
add
adc
jp
idivl
mov
cmp
jae
aad
lahf
jmp
add
loopne
cmp
mov
pop
dec
cmp
push
dec
stos
fadds
push
mov
add
pusha
push
hlt
xchg
add
sub
notl
xor
pop
stos
loop
cmp
inc
out
lcall
push
and
jbe
sub
push
insb
out
jbe
jl
jbe
mov
cmp
adc
addl
cmp
popa
or
push
adcb
jg
pop
es
ljmp
int
sub
sub
cmc
adc
adcb
out
movsl
jns
jbe
pushf
cs
ficomps
xlat
cmpsl
inc
cmpsb
je
loop
mov
in
lret
test
scas
and
mov
pop
mov
aas
mov
pushf
mov
clc
ja
in
or
dec
adc
jle
sti
mov
sub
rol
adc
adc
mov
mov
or
test
mov
das
mov
xlat
fmuls
push
pushf
jge
push
mov
psubusw
sub
in
add
fsubp
or
and
in
sbb
sbb
or
or
fldt
pushf
cmpsl
arpl
mov
inc
pop
daa
jne
out
sahf
stc
jnp
ret
rclb
mov
loop
mov
ja
in
mov
xchg
mov
imul
in
mov
mov
hlt
mov
or
fdiv
mov
push
xchg
mov
loop
gs
scas
repz
lods
xchg
cmp
push
adc
or
into
scas
subb
std
push
stos
out
mov
addr16
push
mov
mov
and
dec
push
push
loop
pop
push
jb
pop
aam
mov
sbb
inc
popa
mov
xor
aaa
in
out
loop
pop
imul
xlat
notb
xor
cs
ljmp
adc
mov
cmpsl
xor
xor
sub
loop
lahf
ret
sub
test
push
int
pop
and
inc
mov
mov
mov
ret
or
int
cmp
inc
xor
mov
inc
xchg
jae
cmp
pop
loope
xor
push
movsl
adc
jp
add
add
push
sbbb
mov
lcall
or
mov
je
cwtl
jne
femms
cmc
mov
fiadds
clc
scas
enter
imul
roll
lret
mov
popf
mov
jo
in
int
push
jnp
xor
inc
pop
mov
jl
adc
in
add
and
jbe
lea
push
mov
popa
add
movsl
fmulp
jg
mov
cmp
aad
ja
icebp
cmc
xchg
xchg
xor
dec
mov
inc
repz
jmp
push
jne
aam
out
ret
jae
mov
ret
inc
addr16
jl
das
cmp
mov
mov
stos
adc
mov
inc
js
xor
sub
popa
push
int
mov
inc
cs
scas
popa
push
add
pop
xchg
add
lret
out
add
or
add
jne
inc
ja
les
sti
mov
ficoms
mov
jecxz
dec
dec
push
lock
sbb
dec
and
out
out
cmp
ja
or
xchg
iret
push
push
cld
pop
mov
fwait
test
jne
popa
push
jno
test
mov
cmc
or
pop
scas
jb
push
cmp
push
push
addr16
aad
mov
dec
pop
sbb
in
out
dec
sub
sbb
jecxz
das
out
jnp
mov
adc
adc
xchg
das
jno
adc
adc
jle
cwtl
pushf
push
xor
xorl
into
xchg
lods
ret
ja
fcmovbe
or
addr16
mov
cmp
sti
insb
mov
mov
loopne
dec
loope
inc
jle
lock
lea
nop
dec
hlt
pop
sub
call
xchg
inc
dec
or
ja
xor
fbstp
into
mov
xchg
ds
shlb
pop
cs
movswl
sub
cmp
cmp
push
cmp
mov
lret
rcl
bound
xchg
ds
lock
push
xor
mov
xor
xor
push
inc
ja
add
mov
arpl
push
icebp
outsl
andb
jae
js
jle
call
dec
aam
mov
mov
fucomi
loopne
sub
iret
jno
xchg
out
repnz
arpl
pop
out
sbb
push
mov
iret
jb
lahf
test
xchg
sar
push
arpl
cmp
sub
adc
roll
add
movsl
mov
cmp
lahf
decl
mov
fimull
mov
mov
mov
pop
adc
sti
sbb
pop
xchg
pop
and
jbe
ret
pop
mov
int3
aad
lods
ficoms
repz
pop
xor
sub
lea
xchg
lea
xrelease
mov
pushf
hlt
push
cwtl
mov
jl
xor
pop
and
mov
push
cld
outsb
push
mov
rcrb
movb
mov
inc
cmpsl
lds
fwait
mov
pushf
pop
adc
test
jmp
fstp
inc
dec
sbb
push
cmp
fstpl
outsb
shl
test
lods
imul
sbb
and
xchg
mov
pop
adc
test
dec
add
mov
pop
aaa
in
dec
push
push
insl
aaa
jl
cmpsl
xor
adc
xchg
dec
pusha
jne
xor
add
mov
inc
push
fnstcw
mov
pop
jne
sbb
mulb
push
add
mov
jno
xor
push
adc
cmpsb
std
hlt
mov
mov
mov
mov
leave
out
inc
sahf
mov
add
pop
mov
and
cmp
adcb
loope
out
inc
out
dec
ljmp
loop
fs
xchg
mov
xor
pop
xchg
mov
mov
sbb
stos
and
push
lcall
in
movsb
sti
ret
loop
incl
subb
sbb
mov
add
and
sub
ds
add
dec
xor
and
ljmp
push
cmpsl
push
popa
add
ret
inc
int3
add
ret
mov
jg
dec
add
int
cmc
jo
ret
mov
push
stos
jns
je
push
cmc
inc
sub
push
jns
fists
test
inc
jge
sti
adc
mov
pusha
sub
data16
inc
shrl
jbe
and
in
int3
add
gs
cmp
adc
loop
lock
out
jmp
add
gs
mov
ss
jecxz
shld
lret
stos
in
std
test
jo
jno
call
mov
aad
testb
in
test
ja
mov
and
aas
das
xchg
sbb
popa
nop
fsubrp
inc
clc
adc
pop
subl
lds
mov
or
popa
movsb
push
test
sbb
insb
mov
cmpsb
inc
arpl
inc
or
outsb
xchg
sti
pusha
aaa
and
mov
fisubl
push
or
cmp
adc
push
lahf
fidivs
pop
les
dec
clc
icebp
and
mov
lret
nop
stos
sahf
or
out
sub
lret
imul
in
repnz
add
adc
xchg
adc
xorl
jne
fmuls
and
jno
nop
adcb
pop
push
std
fdivrs
nop
pusha
pop
nop
add
addr16
mov
or
lea
or
mov
sbb
add
jb
popf
in
push
jecxz
pop
push
fldl
cmp
addb
jmp
dec
mov
lods
xor
ret
sbb
orl
mov
out
cmp
fldcw
out
loop
mov
ljmp
jo
sub
inc
popa
sub
cmpsl
xor
sbb
outsl
arpl
cwtl
bound
dec
mov
push
jle
rol
pop
xchg
sbb
mov
enter
jns
fcomps
mov
dec
out
das
mov
cltd
mov
leave
xchg
jne
lock
mov
sahf
cld
pop
push
adc
inc
inc
mov
xor
jns
and
movsl
add
call
lret
ficompl
ret
jl
fiadds
push
imul
dec
mov
cmovle
ror
xor
cmc
sbbl
sub
xchg
mov
jae
cmpsl
pcmpeqd
xor
in
dec
add
inc
lods
outsb
rcll
jnp
mov
inc
loopne
out
shlb
dec
dec
pop
shl
mov
dec
pop
bnd
xor
dec
popa
jo
test
mov
cmp
lea
jge
inc
in
sbb
mov
mov
or
mov
insb
movsb
pop
fstl
lahf
xchg
ja,pt
mov
sub
inc
fwait
push
lock
dec
inc
push
push
dec
in
jne
in
cwtl
jecxz
lea
cmp
cmp
dec
or
jno
repnz
lock
cmp
cltd
mov
jns
in
cmp
add
and
addb
in
pop
shlb
iret
and
add
outsb
pop
mull
in
push
and
cltd
inc
aaa
bound
sbb
and
or
pop
jmp
sbb
jp
and
xchg
push
jle,pt
sbbl
shlb
jge
sbb
cwtl
jns
dec
xchg
push
sarl
mov
leave
rclb
or
add
mov
xchg
adc
dec
clc
test
or
xor
adc
xor
mov
sub
inc
xlat
xor
sbb
and
inc
call
pop
cmp
cmp
sub
sbb
jns
fs
pop
and
lods
lret
xor
stos
pop
dec
outsb
sub
pop
adc
fisttpll
push
mov
sbb
adc
inc
cmc
xchg
lea
fisttps
mov
insb
add
jns
push
xchg
add
xchg
xchg
xchg
jecxz
push
cmp
inc
insl
add
call
push
repz
iret
adc
imul
ror
popl
call
jp
pop
lods
pop
pushf
jmp
mov
leave
mov
mov
jnp
inc
cmp
outsb
or
sub
jb
sbb
push
outsl
and
rcll
push
sbb
lods
in
shll
jbe
jne
and
iret
push
mov
iret
sbbb
and
lret
fisttps
lahf
push
sbbb
cmpsl
cltd
and
inc
jne
sti
std
outsb
inc
push
idivb
int
loope
mov
arpl
sub
nop
flds
jns
fnstenv
bound
mov
and
or
scas
xor
xchg
sbb
pop
add
mov
inc
jbe
mov
push
aaa
jle
cs
cmp
mov
adc
sub
test
les
and
jmp
add
lds
or
scas
add
sti
push
jno
dec
push
add
and
cmpl
je
scas
es
adc
or
xor
lahf
jmp
dec
js
loopne
repz
push
jmp
sbb
stos
mov
es
aaa
jnp
stos
add
sub
cmp
mov
xor
pop
outsb
cld
mov
mov
xchg
cld
outsl
jbe
das
jo
int
fcom
dec
dec
sahf
push
outsb
sahf
shrb
and
mov
addr16
push
add
jno
fistpl
xchg
dec
vminps
out
lds
and
xor
int3
insl
lea
sub
ret
or
mov
enter
xchg
int3
sbb
xor
mov
in
jmp
inc
jp
aad
or
sarb
mov
xchg
inc
test
xchg
ss
rorl
xchg
mov
enter
sub
mov
mov
mov
adc
mov
pop
stos
and
and
repz
negb
xchg
add
sub
sub
cmpsl
int
xchg
cmp
leave
mov
stos
cmp
clc
lods
ret
or
rsqrtps
pop
in
xchg
xor
in
pop
mov
xor
jno
and
inc
sahf
testb
adc
fidivrs
pop
rorb
flds
mov
xor
mov
push
dec
xor
add
jl
and
hlt
or
sbb
test
mov
iret
loopne
mov
jmp
cmpsl
mov
pop
xor
stc
pop
jns
scas
movsb
pop
mov
sbb
xchg
mov
fstps
dec
xor
mov
nop
adc
sarl
lret
jl
sub
push
and
and
mov
mov
dec
in
in
mov
push
pop
movsl
mov
test
xor
inc
mov
cwtl
mov
addl
mov
insb
mov
mov
push
rcll
into
lretw
mov
movsb
xlat
arpl
fisubrs
jmp
popa
pop
jbe
notl
jle
js
or
notb
push
mov
xchg
xchg
in
fcmovnbe
das
hlt
repnz
test
cmp
fnstcw
loope
push
mov
push
mov
enter
xor
xchg
mov
add
pop
jge
or
add
mov
xchg
test
aad
pop
mov
mov
repz
movsb
inc
mov
rcl
je
mov
stos
sahf
sahf
icebp
pop
dec
jnp
lret
dec
cld
jno
gs
ds
xor
push
mov
aad
mov
stos
fcmovne
movl
pop
jo
inc
dec
xchg
mov
dec
push
xchg
add
cltd
fisttps
jl
int
pop
mov
jle
call
aas
ficomps
mov
hlt
inc
cmp
popf
mov
call
xorl
out
lcall
xlat
addr16
mov
sbb
inc
popf
aaa
mov
stc
jnp
data16
mov
inc
sahf
sbb
insb
and
lret
mov
mov
addl
inc
adc
mov
push
out
mov
dec
cmp
xlat
popf
test
dec
sete
sbb
jne
push
pusha
fmull
xchg
pop
cmc
dec
adc
pop
sub
movl
faddl
adc
fcoms
push
jno
or
mov
ror
fmul
jno
mov
jne
test
push
out
test
cmp
xchg
sahf
sub
cmc
cmp
cmp
jo
pop
leave
or
cmp
and
push
mov
push
or
jl
jp
adc
dec
xchg
xor
push
stos
pop
pusha
ret
movsl
mov
cmpsl
fiadds
xchg
mov
pusha
cmpsl
dec
test
xchg
shl
xchg
pusha
or
loopne
fadds
jns
fcom
in
imul
jle
inc
loope
mov
stc
mov
mov
fstp
clc
or
mov
in
inc
mov
ds
jl
insl
nop
xchg
ror
in
or
fdivl
dec
add
lahf
or
sti
aam
sbb
inc
or
stos
mov
ljmp
addb
pushf
pop
movsl
inc
mov
jne
push
aam
sbb
mov
push
mull
out
cmpsl
stos
lods
mov
loop
mov
push
testb
xor
and
insl
ljmp
pop
data16
ds
sub
push
jle
jo
push
mov
xchg
lock
push
ja
push
mov
ficompl
clc
mov
movsl
mov
pop
inc
aam
stos
test
insb
mov
out
xor
ret
push
aaa
add
mov
jo
data16
pop
fistps
mov
sub
movsb
mov
cwtl
in
cmp
dec
divl
cmp
jmp
mov
jl
mov
insb
jg
hlt
add
mov
xlat
nop
cld
adc
mov
subb
mov
cltd
insl
lret
pop
aas
addr16
enter
mov
jecxz
mov
loopne
in
cmp
xchg
push
xor
xor
enter
adc
lods
scas
adc
inc
push
imul
popf
mov
int
es
frstor
inc
jno
bound
push
pop
ja
mov
and
jbe
mov
jecxz
dec
test
idivb
sti
cmp
xor
aam
int
or
adc
lea
and
clc
je
dec
loop
cmovl
or
mov
std
nop
in
pop
jle
push
cli
sub
fcoml
aam
push
mov
cs
pop
std
xchg
adc
mov
jne
ljmp
xchg
notl
mov
rorl
das
inc
adc
idivb
push
fs
outsb
mov
jle
pop
mov
popf
xchg
jo
sub
es
mov
mov
mov
addl
test
xchg
daa
sbb
lret
cmp
mov
lcall
pop
aam
jno
sbb
xor
adc
push
fisubrl
jmp
mov
mov
pop
fxch
andl
mov
xor
idivb
adc
in
mov
stc
pop
aad
xchg
adcb
xor
mull
inc
sti
lret
test
add
movsl
push
daa
lret
movsb
cld
lret
and
inc
mov
arpl
sbb
imul
sbb
ret
nop
iret
xor
sub
jno
nop
cs
sbb
inc
repz
xchg
sbbl
fistpl
or
je
pop
dec
xchg
mov
ret
es
shl
cmp
inc
sub
repnz
std
data16
push
jecxz
mov
je
jp
xchg
cmpsl
xchg
push
xor
push
cmp
movsb
push
lock
out
add
and
stos
jne
mov
loop
mov
push
pop
fwait
pusha
pop
lds
std
xor
stc
inc
xchg
xchg
aas
outsl
mov
pop
std
dec
pop
enter
jmp
push
sub
dec
xor
bound
rcrb
cmp
dec
mov
inc
in
les
std
push
dec
cli
mov
jae
pop
and
ds
sub
fiaddl
loop
outsb
mov
pop
iret
mov
adc
das
jno
push
inc
test
xchg
mov
sub
cmpsl
jb
mov
ret
mov
and
sub
dec
lcall
sub
cmpsl
add
jnp
push
dec
xor
adc
insb
das
imul
cltd
xchg
div
aas
into
add
or
xacquire
jl
mov
pushf
add
negb
js
push
jne
mov
xchg
or
adc
cli
cmp
ret
popa
dec
mov
jle
test
xchg
mov
dec
dec
insl
int3
inc
aad
add
hlt
adc
pop
inc
aam
jecxz,pn
or
jmp
lahf
sub
cmp
mov
sub
aam
dec
pusha
mov
adc
mov
xor
or
pop
dec
shl
cmp
pop
clc
jge
imul
insb
clc
mov
ss
add
or
mov
mov
or
test
aad
xchg
imul
arpl
jnp
or
ja
nop
mov
xor
in
ljmp
in
iret
stos
xor
cmp
sbb
and
daa
imul
ja
pusha
sub
mov
fisttpll
insl
es
or
pop
xchg
fists
arpl
cli
mov
cmp
std
mov
sti
mov
mov
inc
fisubl
cs
enter
popa
sbb
and
sub
push
push
jae
arpl
dec
cmp
mov
jmp
rcrb
ret
fwait
dec
lahf
inc
ret
nop
dec
jp
adc
xchg
sub
aaa
jl
xchg
sub
add
mov
push
cmpl
into
push
lcall
icebp
pushf
iret
data16
dec
rclb
ret
xchg
add
lods
add
xor
jnp
idivl
jns
sub
jo
int
stos
inc
cld
cltd
xchg
fsubl
into
jl
fidivs
add
pushl
inc
sbb
mov
sub
in
cmp
and
cwtl
je
cmp
out
mov
dec
in
leave
jne
mov
imul
filds
push
pop
mov
je
adc
cli
cltd
call
pusha
jge
aas
mov
test
push
dec
cmp
xor
ret
mov
popf
and
std
movsl
jbe
mov
inc
int
mulb
sti
push
imul
jecxz
pop
push
inc
test
dec
cmpl
or
fnsaves
inc
std
push
in
es
lea
mov
testb
insl
cmpsb
sbb
xchg
sub
inc
std
push
in
es
lea
mov
movb
imul
cmp
data16
mov
push
in
cltd
lea
mov
dec
repnz
imulb
xchg
mov
std
push
lcall
jmp
and
aas
mov
cmpsl
jae
inc
xor
and
xorl
jecxz
roll
mov
movsl
and
jae
arpl
push
lds
and
xchg
or
push
roll
lods
xor
in
jae
arpl
push
lds
mov
orb
loop
cmpsl
or
inc
lret
jnp
add
fadds
enter
pushf
pop
pop
sti
jge
repz
pushf
xor
pop
stos
in
dec
cmp
push
pop
push
dec
mov
or
jmp
repz
push
sarl
data16
add
pop
mov
fisubrl
sub
out
jecxz
push
inc
jnp
jbe
pop
pop
cmp
bound
cmp
mov
and
cli
arpl
flds
in
sub
inc
mov
sti
std
ljmp
jecxz
adc
cmc
xchg
rcll
pop
mov
scas
rolb
jp
or
stos
es
int
lret
lock
repz
roll
jl
mov
add
jae
arpl
push
faddl
mov
mov
insl
repz
dec
roll
fnstenv
shlb
icebp
add
adc
dec
mov
jne
add
ficoml
inc
cli
jbe
add
cmp
ficoml
popf
push
loop
test
lods
shlb
imul
in
mov
arpl
push
lds
mov
mov
jne
gs
roll
mov
movsl
and
jae
arpl
push
lds
mov
mov
jne
gs
roll
mov
mov
test
pop
xchg
pop
gs
rcrl
out
sub
sub
and
jmp
push
sbb
xor
mov
mov
jle
outsl
xchg
cld
sti
mov
cmp
inc
cmp
mov
mov
inc
nop
into
lahf
or
and
cld
aaa
adc
push
clc
dec
xlat
adcl
daa
xlat
int
push
ficoms
adc
dec
jbe
lahf
adc
call
push
dec
cmc
es
arpl
aad
sbb
dec
cmpsb
push
xchg
lret
push
sti
push
jb
inc
cltd
inc
dec
cmovnp
mov
jl
ret
jbe
mov
dec
stos
dec
mov
add
iret
and
sub
in
popa
adc
hlt
jg
adc
adc
push
jecxz,pt
push
push
daa
xor
mov
xor
loope
dec
inc
sarb
enter
cmp
imul
cmp
sub
sbb
dec
movsb
scas
sbb
fnstenv
rclb
jae
mov
sahf
mov
rcr
jg
fldcw
cmp
adc
inc
imul
inc
insb
idiv
mov
das
aad
push
xor
dec
lret
push
pop
ja
mov
outsl
fcom
lret
mov
ljmp
xchg
ret
std
jb
jo
xchg
inc
jmp
movsl
call
jo
mov
lcall
cltd
orl
sbb
cltd
xor
outsb
adc
enter
cwtl
or
data16
fxch
arpl
jg
js
pop
adc
rcll
icebp
cmp
add
dec
bnd
sbb
mov
inc
mov
pop
or
dec
xchg
or
jecxz
dec
xor
lahf
ss
adc
push
stos
iret
sub
scas
pop
cmpsl
stos
jle
mov
mov
pop
imul
mov
mov
lret
loope
fcmove
sarb
mov
pop
cmp
xchg
jae
inc
mov
fdivl
bswap
add
dec
shll
out
adc
cli
in
pusha
loop
movsl
mov
and
jp
aas
in
vandps
in
addr16
and
adc
add
pop
hlt
ja
out
mov
jnp
mov
cli
cmpsb
mov
sub
push
mov
dec
cmpl
ja
jb
adc
push
cmp
jle
test
hlt
pop
in
sub
mov
dec
in
inc
and
mov
mov
mov
mov
push
movsb
pop
cmp
enter
stc
sub
lret
loopne
jae
fiadds
bound
cmpsb
dec
ja
arpl
cmp
push
cmp
xchg
and
rorb
jbe
lods
popf
push
fmull
loope
fwait
loope
mov
sar
idivl
rcr
decl
dec
push
jns
inc
cwtl
jmp
scas
gs
push
outsb
push
inc
sub
sub
sbb
das
ret
inc
mov
xchg
stos
lcall
mov
test
adc
cltd
imul
jg
push
adc
sbb
sbb
sbb
push
add
inc
jge
push
cmp
leave
cmpsl
js
mov
jne
or
push
push
pop
push
int3
dec
mov
inc
out
mov
push
jecxz
mulb
aas
adc
inc
inc
push
sub
mov
lods
jae
scas
movsb
fs
in
popa
sbb
mov
sti
add
repnz
cld
mov
loop
mov
mov
ljmp
jecxz
lret
cltd
cmc
xchg
sti
in
push
pop
test
push
mov
push
sbbl
notb
negb
xor
push
lods
mov
lahf
inc
or
xchg
movsl
mov
bnd
pop
insb
mov
insl
inc
pop
mov
sarb
in
mov
test
pusha
xchg
das
dec
lods
leave
pop
mov
inc
mov
mov
ja
fwait
int3
leave
dec
movsl
lock
dec
test
pop
cli
ss
stos
int
je
mov
dec
or
xchg
outsl
cs
push
ljmp
loop
popf
sbb
sahf
inc
scas
push
jae
pop
mov
push
xor
hlt
je
leave
stc
xor
lcall
jnp
pop
jbe
jecxz
dec
std
shrb
dec
inc
cmpsl
jne
push
mov
mov
xor
scas
sbb
pxor
insl
popa
pusha
mov
jmp
pop
dec
bound
or
movsb
sub
or
add
xor
jb
fcmove
sub
dec
lahf
and
bound
hlt
jg
addr16
cmp
mov
and
dec
pop
adc
xchg
ljmp
cmp
jnp
jecxz
sub
xor
testb
fwait
mov
mov
mov
icebp
popf
stos
or
fcmove
and
in
pop
cltd
cs
inc
inc
femms
mov
dec
mov
pop
mov
shlb
jle
push
adc
loop
cmpsb
jl
popf
das
xchg
pop
adc
cmp
mov
adc
stos
je
mov
cli
push
lea
and
shl
cmpsb
pop
fldenv
jae
jmp
jmp
cs
mov
pushf
cmp
arpl
fsub
mov
pop
or
push
mov
xor
cmp
jbe
push
sbbl
aad
sub
and
push
xchg
out
and
sub
dec
lock
out
sbb
leave
movsl
outsl
push
inc
jp
sbb
mov
pop
xchg
fucomp
das
mov
push
stos
mov
xor
xchg
in
push
jnp
das
int3
mov
mov
or
pop
inc
int
call
pusha
inc
jmp
or
popf
sbb
push
mov
inc
es
add
mov
inc
or
sbb
mov
cli
out
push
imul
rcrl
add
pop
repz
push
pop
imul
mov
dec
fs
daa
and
sbb
and
push
enter
cwtl
cli
push
push
bound
mov
sbb
mov
into
jne
jo
ljmp
xor
inc
mov
xor
aaa
ljmp
xchg
adc
jo
add
adc
aam
sub
stos
call
rorb
xchg
or
mov
dec
imul
lods
xchg
pop
repz
cmp
push
xlat
aaa
sahf
cmc
pop
icebp
xchg
adc
sbb
adc
sbb
adc
fs
push
xor
push
cmp
test
pop
stc
stos
adc
push
lcall
or
mov
xchg
jmp
jb
stc
fs
inc
add
and
dec
scas
lods
dec
fdivs
cli
and
mov
jno
js
adc
leave
xor
fwait
dec
xchg
add
and
test
imul
push
stc
mov
incb
adc
dec
lahf
xchg
sub
fnsave
cwtl
mov
out
sbb
arpl
je
mov
add
inc
out
iret
test
bound
sbb
stos
aaa
jmp
fsubrs
xor
jg
jno
stc
mov
call
ljmp
pop
movsl
orl
add
push
sub
orl
adc
push
pop
push
add
or
test
xchg
psrlw
or
cmpsb
push
ja
pop
out
fdivrl
sbb
es
inc
std
mov
mov
je
repnz
push
addr16
push
push
adc
clc
add
sti
adc
rolb
jle
push
test
lahf
mov
int3
push
or
insb
and
dec
jo
pop
mov
jne
or
jl
inc
repnz
sbb
cmp
and
into
nop
xor
mov
adc
icebp
repnz
cmp
cmpsb
sbb
into
imul
mov
ja
mov
andw
mov
fucomi
xlat
sbb
int3
cld
data16
xor
push
xor
call
jbe
rcl
mov
mov
ljmp
daa
fsubrl
scas
iret
push
fldenv
data16
add
xchg
test
sbb
cmp
out
jb
add
jnp
jle
roll
cltd
add
out
idivl
in
push
test
cmpps
jg
jne
int
or
push
pop
arpl
into
hlt
and
pushf
outsb
and
imul
mov
iret
mov
sarb
push
sti
arpl
jne
mov
es
sub
cmp
inc
icebp
inc
ds
sarb
xchg
les
add
rorb
das
cwtl
lcall
ljmp
andb
cmpsl
xchg
jo
mov
jnp
mov
mov
cmpsl
repnz
xor
test
outsb
fwait
data16
xchg
add
leave
xor
fs
or
int
repnz
out
andl
insl
add
jg
or
adc
rolb
add
aas
add
sbbb
test
insl
xlat
pop
rolb
mov
xchg
jg
cmp
mov
jae
jge
sub
adc
mov
cmp
or
dec
int3
push
or
xchg
jnp
mov
cmp
int
or
push
or
iret
xchg
inc
test
mov
test
mov
aam
out
data16
push
popa
mov
cmp
push
ljmp
and
nop
or
sub
pop
les
stos
mov
mov
sbb
pop
mov
mov
fdiv
mov
faddl
sub
ds
lds
dec
leave
jg
test
imul
cmc
push
pop
rcrl
ljmp
je
nop
mov
enter
sbb
out
rcl
jp
stos
les
dec
pop
scas
cs
gs
push
imul
push
or
mov
sbb
mov
or
mov
or
cmc
xchg
pop
mov
jp
xlat
push
push
jo
iret
jmp
cmp
pop
xor
mov
mov
pop
push
out
push
push
loopne
lcall
sbb
jno
xchg
adc
imulb
cli
in
xchg
into
xchg
mov
addr16
or
ficompl
test
mov
pop
mov
outsb
int3
test
pop
mov
mov
xor
mov
inc
lahf
mov
gs
push
bound
addb
jns
push
negb
shl
sbb
mov
inc
mov
aaa
aaa
ljmp
fstpl
lcall
push
push
inc
mov
sti
xchg
dec
xchg
int3
movsb
mov
aad
push
push
aam
test
sbb
repnz
mov
mov
clc
or
mov
pop
loopne
out
mov
cli
inc
popf
aaa
fs
or
pop
aam
sub
jns
dec
stc
cmp
out
repz
cmp
mov
imul
lahf
daa
inc
push
repz
mov
dec
push
out
fsubrs
xor
jp
rcrl
imul
sbb
test
lret
aas
fidivrl
sub
ficoms
icebp
aaa
jo
or
imul
jnp
xor
int3
jge
mov
dec
push
mov
mov
pop
or
add
loopne
pop
cld
dec
in
and
clc
psrld
stos
jge
mov
cmc
pop
popa
adc
mov
aaa
lea
aaa
mov
push
pop
sub
jg
lcall
sub
fdivs
jo
lret
clc
sahf
push
stos
lcall
dec
mov
jg
mov
adc
adc
xrstors
fwait
imul
push
and
and
pushf
arpl
or
add
out
pop
mov
dec
loop
pop
leave
outsb
jle
int3
bound
arpl
aam
cmc
xchg
stos
sbb
lahf
je
xchg
sbb
out
cmp
bound
jns
dec
out
aas
xchg
adc
cmp
push
int3
out
scas
mov
insb
jmp
jp
gs
add
mov
push
pop
or
adc
jmp
lea
and
pop
mov
pop
fstl
dec
out
leave
push
push
sub
fidivrs
xchg
fwait
sub
rclb
pop
or
jns
xor
fildll
mov
or
shl
xor
ja
pop
sub
lahf
lock
and
lahf
ja
dec
jmp
enter
movsl
lods
popa
lods
lock
lods
sbb
xlat
or
add
shll
test
inc
out
pop
cwtl
jle
jl
xlat
xor
mov
mov
dec
nop
ret
pusha
decl
xchg
xchg
movsl
xor
mov
ret
jns
mov
adc
and
pushf
sbb
sub
int
stos
and
dec
scas
in
aam
faddl
sbb
stos
in
mov
mov
jnp
fdivrl
cmp
fbld
fstpl
stos
lcall
mov
dec
dec
jge
mov
mov
repnz
loopne
inc
lret
or
aam
insb
fs
mov
in
inc
push
mov
dec
or
ljmp
sahf
xchg
bound
mov
clc
sub
xlat
dec
and
sbb
rorl
cmc
iret
clc
pop
lcall
xor
popa
movsl
test
jle
lret
stc
jae
mov
and
mov
dec
repz
int3
popa
push
out
push
mul
and
movsl
mov
jge
pop
cmpsl
repz
xor
or
arpl
xor
cmpsl
leave
xchg
lret
lcall
out
pop
lret
xor
cwtl
mov
dec
or
enter
out
sbb
jno
mov
setp
pop
xor
pop
rclb
xchg
lea
sub
jecxz
and
cmp
repz
jmp
xor
hlt
or
add
adc
imul
or
pop
test
test
hlt
push
sub
pop
add
out
push
and
add
inc
jns
jg
cmp
lret
lret
fwait
dec
dec
cmp
push
loop
std
mov
mov
test
insl
fnstcw
push
icebp
push
xor
jp
mov
cmpsb
push
lods
pushf
ds
shlb
sahf
lods
cmp
push
pop
jno
mov
lods
lret
outsl
stc
fbld
outsl
cmp
leave
mov
cmp
and
sub
cmp
mov
sahf
outsl
stos
mov
out
out
out
test
test
xchg
cmp
imul
pop
aas
sub
pop
movsl
sbb
sub
sbb
notl
jl
das
jl
cmp
mov
data16
in
lret
jne
sbb
push
cli
rcrl
mov
icebp
and
mov
iret
jp
fwait
pusha
imul
inc
push
sbb
enter
xchg
arpl
dec
das
rolb
add
dec
mov
xor
cmp
mov
or
xor
addb
sub
and
icebp
std
xor
loope
es
in
out
mov
jne
les
addb
ret
pushl
xchg
push
shrb
fldl
push
je
mov
rorb
push
out
dec
jecxz
stc
jns
cmp
mov
xchg
push
aas
subl
inc
sahf
sub
movb
inc
fcompl
fildl
add
inc
pop
mov
aas
hlt
jns
mov
xlat
jg
ficompl
push
xlat
mov
sbb
cmpsl
iret
lock
xchg
in
cmc
fldcw
movsb
cmp
scas
pushf
jnp
and
ss
stc
jmp
mov
xor
jnp
pop
mov
dec
fwait
or
push
jo
mov
ret
iret
sbb
sahf
pop
or
lcall
and
pop
loope
mov
mov
int
out
push
clc
je
adc
outsl
or
dec
gs
mov
out
dec
pusha
push
js
incl
xor
sub
xchg
add
or
dec
call
fs
adc
cmpsl
push
mov
adc
mov
jns
pop
sub
and
stos
ja
jno
xor
xor
imulb
ret
aaa
repz
jo
shlb
pop
push
stos
in
push
and
mov
iret
inc
adc
push
pop
lsl
dec
dec
push
mov
insl
sub
cmp
fdivrs
in
or
cwtl
les
cmp
mov
in
fisubrs
sbb
push
jecxz
nop
sbb
push
dec
xor
cmp
mov
arpl
arpl
lret
cmpb
jo
xorb
dec
out
out
pop
out
xor
decb
and
lret
shll
jno
xor
xor
push
hlt
mov
fwait
xor
mov
sti
push
fst
pop
cmp
push
xchg
movl
pop
fistl
mov
es
pop
adc
xor
pop
cmp
sbb
sti
daa
add
rcll
lcall
push
mov
test
es
sbb
xchg
xor
push
adc
cmpl
pop
mov
sbb
mov
mull
hlt
pusha
or
fcmovu
nop
add
mov
pop
push
push
adc
addr16
sub
sbbl
pop
mov
push
insl
ljmp
add
push
insl
sahf
ljmp
cmpsl
cmpsb
jl
jle
pop
out
cmp
sahf
dec
mov
add
inc
test
adcl
out
das
ss
add
aad
push
mov
mov
in
fmull
aad
sbb
xchg
ror
adc
bnd
xchg
pop
cmpsl
adc
dec
push
xchg
or
sub
and
testl
cwtl
rcll
test
idivl
and
addr16
gs
ret
dec
sub
jnp
lret
in
outsb
xor
jbe
in
push
rcrl
xor
push
cmp
xchg
outsl
push
inc
mov
add
pushl
and
push
jnp
lahf
into
adc
sbb
xor
fidivs
cwtl
xor
stos
cmpsl
shr
js
or
and
andb
bound
rcll
in
je
cltd
mov
mov
movsb
ret
add
sbb
hlt
mov
mov
add
scas
cwtl
stos
push
sbb
fwait
in
pop
in
ret
push
je
out
test
mov
nop
dec
jp
and
movl
insl
cmc
in
xor
sar
idivb
dec
in
cli
movsl
push
loopne
jmp
lret
push
jle
sbb
or
push
mov
out
out
xchg
fwait
xor
mov
xlat
repz
pusha
xorl
fsubrs
mov
inc
int3
add
mov
push
repz
xor
add
adc
ret
push
push
in
cltd
outsl
les
sub
divb
outsb
fcmovb
ds
int
xor
lods
fcmovnu
mov
shll
mov
cmp
cmp
mov
jp
add
sub
mov
out
popf
movsb
xchg
lea
out
cmp
xchg
stos
mov
pop
mov
nop
mov
or
addl
sahf
nop
pop
sahf
jl
xor
dec
aad
pushl
sub
mov
sub
add
lea
sub
mov
push
and
sahf
adc
xor
fiadds
inc
sub
push
cmp
xor
cli
sbb
enter
sub
adc
inc
cmp
cmp
mov
sbb
into
mull
push
push
fcmovu
push
xchg
pop
inc
jno
outsb
inc
sbb
push
jl
aad
xchg
pop
and
xor
and
loope
push
addr16
push
mov
or
jbe
call
cwtl
cmpsb
fiaddl
dec
icebp
punpckhbw
adc
push
mov
jp
imul
std
inc
cltd
aas
or
push
add
xchg
movsb
test
shrl
enter
int3
adc
mov
xchg
inc
sahf
xor
inc
sbb
mov
ds
pop
cwtl
or
push
lods
pop
inc
sbb
cmp
mov
cmpsb
xor
fbstp
dec
mov
imull
jge
cmpb
pop
inc
into
add
inc
xchg
mov
icebp
sub
dec
outsb
fdivrs
in
xor
arpl
adc
sahf
popa
xchg
mov
mov
sbb
mov
adc
jbe
popa
in
lds
add
aam
add
xor
sub
arpl
mov
inc
test
jae
aad
cmp
rcl
loope
dec
in
add
mov
push
insl
ret
jge
add
test
mov
test
into
loop
jnp
ret
lret
push
jbe
or
pop
and
xchg
dec
xor
adc
imul
and
cs
push
lds
or
push
lods
cs
xor
adc
inc
sbb
mov
mov
inc
xchg
jb
jmp
leave
test
push
cwtl
das
gs
mov
inc
bound
inc
in
decl
andl
push
mov
or
or
icebp
jno
add
add
cmp
test
inc
dec
and
jne
dec
and
push
add
dec
scas
ds
add
arpl
aad
ds
and
jae
arpl
push
lds
mov
mov
jne
gs
roll
mov
movsl
and
jae
arpl
push
lds
mov
mov
jne
gs
roll
mov
movsl
and
jae
arpl
push
lds
mov
mov
jne
fs
roll
mov
cmpsl
and
in
push
push
inc
inc
lret
or
jnp
sbb
sub
cmp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
jno
inc
rclb
ds
int3
and
jle
movsb
jb
push
icebp
inc
mov
adc
loop
rclb
and
adc
movsl
push
adc
xor
add
push
ret
sub
loope
cli
lods
and
inc
bnd
add
bnd
or
je
arpl
xchg
call
aaa
or
adc
mov
cld
mov
out
into
pop
icebp
sahf
fmuls
ds
faddl
repnz
insl
adc
in
out
xor
and
xor
adc
push
pushf
xchg
push
sbbb
adc
in
push
add
rcr
add
and
jmp
inc
cltd
ja
lods
lea
shr
and
add
aas
jno
icebp
pop
adc
aam
aaa
push
arpl
scas
shll
cli
mov
or
imul
rcr
mov
jns
mov
push
lea
jae
push
rolb
int
popa
pop
xchg
add
rolb
xor
or
fsts
inc
mov
adc
xor
xor
jecxz
idivl
push
icebp
or
pop
aad
in
hlt
addr16
mov
test
rclb
push
xlat
pop
mov
push
and
icebp
push
test
les
dec
icebp
addr16
insb
or
push
mov
fidivs
mov
loope
icebp
push
roll
xor
add
jno
inc
rclb
and
adc
rcll
mov
adc
negl
and
adc
ja
mov
lds
iret
imul
sbb
jecxz
in
inc
inc
jmp
cmpb
fcmovnu
mov
push
rorb
dec
xlat
ljmp
imul
dec
sub
push
ret
lods
addr16
nop
outsb
in
inc
pop
inc
incb
dec
insb
sbb
cmp
scas
inc
and
push
loope
adc
mov
dec
mov
mov
inc
in
jp
loop
mov
xchg
pop
push
xchg
rorl
push
jg
xchg
dec
mov
xor
test
lods
pop
arpl
jo
pop
popf
arpl
fwait
sahf
insl
inc
repz
inc
lcall
dec
out
js
cs
fimull
data16
inc
fwait
dec
imul
mov
leave
test
jbe
xor
push
xchg
mov
cwtl
and
push
lret
cmpsb
cli
outsl
popa
movsb
int3
lds
fdivp
xchg
push
push
in
jno
cli
data16
inc
sub
adc
data16
inc
inc
inc
inc
addr16
dec
mov
into
dec
pop
xlat
lahf
stos
sbbl
push
sbb
sbb
daa
leave
inc
cmpl
push
xchg
xchg
mov
push
and
jbe
inc
scas
stos
shlb
repnz
lret
fildl
addr16
push
scas
mov
test
ljmp
loope
lcall
in
mov
push
cld
scas
dec
ss
repnz
lea
mov
jne
repz
jns
mov
stc
in
fs
fsub
cmpsb
or
jb
je
sub
mov
lock
mov
xor
adc
je
mov
test
outsb
mov
scas
pop
mov
stos
cmc
fsubrs
fildll
xor
pop
lds
repz
push
movsl
int
mov
jo
cmp
xor
outsl
rcrb
push
lds
scas
aas
iret
loopne
lret
loopne
mov
test
cs
popa
push
cmp
loope
jecxz
lock
dec
div
call
inc
sub
push
enter
adc
divl
aam
mov
and
mov
cld
push
addr16
jg
mov
pop
lds
fimuls
in
int
test
cmp
repnz
aad
movb
aas
fistps
xchg
stos
arpl
xchg
xor
sub
inc
sbb
fcoml
ja
daa
je
mov
mov
test
call
pop
and
data16
dec
mov
sbb
pushf
jo
enter
cltd
jnp
sbb
out
insb
fsubrl
ret
pop
fwait
inc
out
stc
inc
sbb
mov
sbb
test
cld
dec
pop
in
pop
les
loope
sub
push
lcall
or
leave
clc
js
or
ret
pop
jge
cmpsl
jmp
dec
pop
xchg
fidivl
push
addr16
in
mov
mov
sbb
rcrl
out
les
ds
cwtl
jns
movaps
pop
fidivrs
pusha
pop
mov
lcall
insb
data16
jno
jb
mov
pop
mov
lret
jo
enter
push
dec
daa
loopne
push
daa
cmp
mov
push
inc
fwait
lcall
adc
jge
out
ret
cli
mov
pusha
out
lods
jmp
push
cmp
lods
ffreep
mov
adc
or
frstor
ret
cmp
movsb
jmp
inc
lock
and
daa
xchg
pop
movsl
adc
jge
aam
test
push
gs
sbb
mov
inc
cwtl
cmc
pusha
imulb
fdivl
mov
loope
xor
mov
mov
dec
xorl
and
inc
in
and
sbb
xor
pop
outsl
inc
sub
inc
lcall
out
mov
insb
and
dec
movsl
pop
test
mov
dec
rcrl
xchg
out
cmp
sbb
in
lea
rorl
and
add
add
mov
inc
cltd
and
inc
pop
fisubrs
pop
xchg
js
jno
push
sti
jno
lods
dec
out
xchg
dec
jg
add
sbb
fs
mov
xchg
les
pop
add
pop
aad
orb
pop
pop
and
adc
pop
push
imul
mov
movsl
sbb
mov
das
jo
iret
add
ja
or
js
mov
mov
cmp
out
out
ja,pt
pop
xlat
sbb
cmp
rcll
je
xchg
outsl
cs
inc
mov
or
xchg
push
fimull
dec
adc
xlat
push
aaa
addr16
lret
and
mov
imul
and
fchs
dec
xor
pop
sub
push
jns
jp
xchg
fucomp
jge
cmp
or
mov
xchg
inc
xor
xor
fcoml
or
fwait
jecxz
mov
mov
xlat
mov
lret
aaa
sar
inc
sub
xchg
cmp
pop
xchg
xchg
xchg
cli
dec
jp
push
cmpsl
xchg
pop
inc
jmp
jae
mov
js
dec
push
cli
js
ljmp
cmpsl
xchg
pop
gs
adc
mov
es
add
js
aad
jno
push
stos
imul
fsub
push
enter
dec
out
inc
frstor
and
pop
fisubrl
cwtl
jne
popf
pop
push
mov
outsl
sub
pusha
imul
jae
imul
push
xor
jg
xor
pop
push
icebp
aad
and
cmp
fimull
push
out
mov
test
fisubrs
ljmp
ja
push
sbb
dec
fwait
cmpsl
inc
ret
or
std
or
loop
leave
test
rol
cmp
movsl
lods
push
shlb
lods
jmp
fs
fildl
sbb
imul
in
addr16
jbe
pop
icebp
movsb
sbb
rcll
insb
mov
test
pop
and
add
outsl
imul
hlt
pop
lret
pusha
and
mov
insl
and
fmull
adc
pop
and
and
v4fnmaddps
hlt
cmp
gs
sbb
add
test
pop
sbbl
adc
and
cltd
ret
lods
lcall
loope
pop
bound
bound
std
fisttps
or
xor
aas
shll
dec
add
jbe
scas
stos
sbb
push
mov
push
cmpsl
xchg
lret
rcrb
pop
movsl
int
cmp
in
scas
shll
xchg
add
pop
fcom
movsb
push
test
push
es
adc
adc
loope
imulb
movsb
imul
mov
cmpsb
icebp
add
cs
stos
out
xchg
mov
lcall
outsb
mov
dec
fisubrl
dec
xchg
cmp
out
sub
shlb
jae
mov
or
inc
and
lret
call
mov
dec
mov
insl
outsl
cmp
cltd
jmp
or
add
aam
adc
sbb
dec
adc
gs
push
test
or
cmp
fidivrs
add
pop
push
cs
lea
sysenter
or
push
lods
fidivrs
insl
insl
imul
jmp
sbb
xchg
rcl
xlat
movsb
push
scas
cmp
cmp
pop
jb
test
lahf
dec
pop
push
into
jbe
jl
adc
movups
ja
rep
sti
push
and
inc
jg
mov
fidivl
imul
nop
push
out
shrl
ds
cmovs
mov
imul
loopne
loop
and
mov
popa
xchg
lods
popf
add
mov
movsl
jns
lock
xchg
dec
cmp
mov
lds
add
cmovnp
inc
add
repnz
mov
push
mov
jecxz
js
outsl
bound
addl
push
es
mov
cmpsl
and
fisttpl
bound
mov
aam
xor
dec
mov
mov
inc
jns
in
jo
fstpl
scas
adc
je
lcall
mov
int
sarb
push
ret
lods
mov
lea
andl
ret
xor
mov
pop
mov
gs
enter
xchg
pop
inc
das
mov
push
loope
data16
inc
shll
mov
data16
pop
xchg
fs
cwtl
aad
sbb
ret
mov
subb
fisttpl
sub
jl
inc
js
push
js
cmp
movsb
mov
adc
mov
fwait
out
mov
in
jne
jo
aam
push
lret
in
rclb
mov
push
and
mov
inc
out
or
fstpl
repz
mov
adc
inc
divb
nop
mov
shll
and
dec
cmpsl
cli
jns
fistpl
data16
push
subb
pop
lret
jge
jle
rcl
and
cs
repnz
idivl
adc
mov
sub
dec
pop
test
inc
mov
aaa
or
fs
dec
aaa
lret
adc
xor
insb
repz
leave
push
mov
andl
arpl
sahf
dec
add
cmc
out
pop
sub
div
cld
push
dec
pop
andl
cmpsl
xchg
test
movsb
mov
jge
xchg
cmp
ficoms
cmpsl
rcll
adc
cltd
cmp
test
add
push
mov
fsubrs
jnp
push
pop
xor
inc
mov
xor
add
push
mov
jp
fsubrl
mov
jbe
cmp
jae
sbb
pushf
mov
dec
sub
push
pop
cltd
daa
jo
pop
push
jno
mov
jecxz
push
fwait
pop
push
jl
fidivs
test
and
emms
mov
je
adc
sub
push
sbb
aaa
ss
bound
adc
in
bnd
or
std
jl
cltd
scas
push
xor
mov
cmpsl
mov
xchg
push
mov
lahf
sbb
mov
leave
lea
cmp
xchg
cmp
daa
enter
fdivrl
mov
cmp
add
cmp
jb
cmp
cwtl
add
repz
mov
ror
subb
imul
lock
out
in
cmp
ret
rolb
cltd
xchg
cmp
sbb
sar
xchg
sbb
jmp
es
mov
and
xchg
mov
fdivr
jnp
push
and
loopne
pushf
das
push
inc
cmp
shll
xorb
pop
inc
and
xchg
jo
insl
js
pop
daa
rcrl
and
call
das
or
mov
aad
pop
adc
mul
push
mov
shlb
pushf
mov
int
mov
push
cmp
scas
fdivrp
in
enter
adc
add
cltd
imul
cmp
adc
sbb
add
std
cltd
pop
paddq
stc
mov
in
shl
push
std
cmp
iret
push
aas
sub
xchg
and
addr16
subl
cmp
mov
sbb
xchg
aaa
int3
jno
es
xor
rorl
loopne
repnz
data16
and
stos
inc
xor
adc
mov
mov
xchg
fiaddl
xorl
pop
adcl
jecxz
jbe
xchg
pushf
and
jns
inc
add
cwtl
test
cli
sarl
loop
push
gs
outsl
addr16
sbb
pop
aaa
ja
repnz
test
mov
mov
inc
cmovp
rcrl
lcall
inc
std
fwait
mov
fcmovnbe
adc
and
inc
pusha
scas
cmp
sti
adc
cltd
cmpl
lret
xchg
and
bndldx
or
and
movq
add
loop
leave
fsts
lods
fcomps
int
sub
mov
dec
jbe
fs
les
rorb
daa
and
subb
lock
int
or
enter
lods
aam
insl
jbe
std
adc
pushf
leave
dec
int
cmp
lds
sbb
std
xorl
pop
repz
mov
mov
rol
add
test
push
ja
mov
jmp
fldl
cltd
sbb
loopne
mov
pop
dec
or
jo
testl
pusha
or
clc
rcrl
jg
sbb
cmp
scas
daa
pop
test
stos
shrb
jno
movsb
mov
dec
out
inc
xchg
lods
repz
ss
test
jno
adc
push
arpl
data16
pop
push
jne
das
push
dec
shll
xorl
icebp
addr16
add
push
jbe
aam
pop
push
add
lds
sub
repnz
sub
aaa
inc
mov
adc
cs
mov
enter
ja
push
lds
rcr
fistps
inc
xchg
int3
add
jns
scas
fistps
xchg
aad
lcall
push
fisubl
nop
inc
insl
out
inc
or
add
mov
sbb
jl
sub
dec
cmp
push
out
pop
popa
cmpsl
test
xchg
xchg
push
cmp
sub
jns
jnp
hlt
or
sub
lret
jp
adc
xchg
test
insl
aas
nop
ret
lret
xchg
int
les
inc
fstpl
push
int3
int
sub
loope
test
jne
push
sbb
ss
push
mov
andb
sub
int3
mov
add
push
sub
mov
scas
pop
mov
adc
out
xchg
adc
aam
cld
ret
out
mov
popa
stos
pushf
pushl
inc
push
jecxz
jne,pt
sub
mov
dec
push
inc
shlb
fldl
jns
pusha
mov
cli
cs
or
pop
push
bound
pusha
dec
sbb
rol
sarl
jp
push
mov
fisubrl
movsl
xor
movzbl
jl
addb
sub
aad
repnz
push
jl
fdivrl
dec
int
push
sbb
popa
xchg
lea
iret
jp
cltd
outsb
sbb
hlt
xor
insl
xor
ja
sub
cwtl
pop
jmp
mov
and
sub
push
or
cmp
mov
jg
push
loope
jmp
and
jle
mov
cltd
out
push
mov
sti
pushf
jno
mov
xchg
jg
out
mov
popa
cld
mov
sbb
cmp
mov
inc
and
fsubl
xchg
movsb
add
jbe
int
jne
sbb
movsl
pop
jnp
dec
mov
jnp
hlt
call
fld
pop
lea
cmp
mov
ds
cmpsb
mov
fildl
dec
jl,pt
mov
sub
mov
xchg
fisttpl
mov
mov
cmc
addr16
jb
in
mov
fwait
push
pusha
jbe
enter
cltd
push
sbb
in
cmp
mov
and
xor
jg
scas
mov
or
ficoml
pushf
dec
mov
enter
xor
das
jl
pop
insl
push
fs
dec
add
in
mov
push
stos
sahf
imul
or
push
aad
lret
arpl
hlt
pop
sub
push
push
ffree
in
xor
popa
data16
xchg
inc
push
ds
rolb
mov
hlt
pushf
repz
movsb
nop
mov
aaa
cmpsl
sub
xchg
mov
cmp
mov
push
lea
mov
cmp
mov
or
rcrb
clc
in
push
mov
mov
mov
in
popf
inc
fs
xor
add
sub
mov
sbb
shl
ss
lret
je
sub
or
mov
icebp
push
in
daa
xor
or
xchg
sbb
fdivp
shlb
bt
dec
push
lods
aas
les
inc
orb
aam
testl
andb
mov
dec
inc
fsubrs
mov
icebp
fs
ss
lock
mov
cmp
daa
push
and
xchg
mov
mov
mov
push
out
cmp
fstp
fldz
aaa
lods
nop
in
sbb
xchg
jno
adc
sbb
adc
clc
loopne
js
lods
hlt
movsl
jbe
mov
test
xchg
mov
es
xor
jbe
shrl
addb
cmp
jo
es
jp
mov
or
dec
lret
pop
cmc
mov
outsb
lcall
sbb
or
sbb
xor
movsl
orl
pop
call
inc
sbb
sub
fisttpl
fildll
fldcw
push
adc
add
mov
or
mov
aad
adc
cmp
mov
pop
and
xchg
lock
cltd
xor
dec
mov
pusha
shl
mov
xchg
jecxz
int3
or
dec
lret
push
stos
lret
adc
mov
les
fstl
daa
add
inc
lock
jae
les
hlt
stos
adc
insl
lret
ss
std
stos
and
jle
cmc
pop
jle
push
adc
jg
fnstsw
lret
xchg
sahf
jp
jae
jmp
pushf
scas
leave
cld
into
stc
sbb
inc
push
jecxz
arpl
and
xor
into
pop
inc
cmpsb
or
lret
cmc
jecxz
add
push
mov
mov
lods
add
outsl
aad
pop
sub
mov
daa
jmp
xor
jo
inc
mov
pushf
movl
sti
dec
mov
das
mov
or
push
scas
addr16
aas
aam
cmpsb
xlat
sub
xor
shrl
sbbb
xor
dec
shr
bound
orl
pop
enter
add
push
js
lds
push
cmp
or
int3
mov
ret
cwtl
mov
jle
mov
sti
inc
xorb
test
inc
dec
xchg
out
pop
mov
int3
clc
pop
lcall
int3
push
lods
fwait
and
fisttps
push
adc
out
lret
fadds
popf
and
push
imul
push
fisubrs
stc
jnp
mov
pop
mov
inc
popf
xchg
and
mov
hlt
arpl
sbb
fdivs
rorb
jle
loopne
int3
cwtl
icebp
stos
int
shlb
bound
jl
sti
push
imul
cs
mov
pop
int
sbb
pop
cmp
and
adc
pop
jecxz
rolb
lods
loopne
outsl
pop
inc
push
lret
jno
outsl
xchg
pop
jo
out
jae
bound
out
and
cmp
ljmp
or
pusha
cli
adc
jns
sub
adc
jl
out
jmp
aad
adc
mov
negb
inc
jg
sbb
out
adc
imul
pop
dec
dec
lock
sbb
jbe
data16
popf
push
sub
sbb
xor
out
pop
leave
nop
jnp
and
push
mov
sahf
mov
lahf
sbb
lahf
pop
xchg
cmp
mov
ret
adc
ja
pusha
pushf
xor
scas
push
pop
das
pop
pop
or
lods
adc
sub
in
push
cmp
out
clc
xor
shlb
mov
stc
stc
leave
orl
cmp
xchg
mov
roll
cmpsb
lock
jno
test
repnz
sti
movsl
push
outsl
data16
mov
pop
das
xorl
inc
cmp
adc
mov
push
in
cmpsb
adc
push
or
adc
cmp
lret
push
dec
jae
push
outsl
movsl
mov
inc
out
jg
xchg
pop
cmpsb
icebp
rcl
add
daa
jbe
imul
push
rcll
cmp
mov
cltd
arpl
daa
dec
es
aaa
shrl
mov
inc
pop
and
inc
jp
cwtl
jmp
aaa
loope
mov
xor
dec
mov
pop
fs
out
popf
aaa
lock
sbbb
dec
push
rorl
xchg
ljmp
pop
es
lret
adc
shld
insl
push
and
bound
mov
cmp
mov
aas
dec
cmp
out
xor
or
rolb
or
sahf
fnsave
mov
fnsave
pop
decb
int3
add
je
fucomp
mov
jecxz
sbb
data16
scas
in
pop
pusha
push
fstl
mov
loop
pop
dec
sti
jno
mov
dec
pushf
cmp
outsb
in
jg
dec
jb
xor
sbb
lahf
or
pop
hlt
cltd
inc
idivb
sub
outsl
lcall
shll
or
stos
adc
mov
aam
jle
lods
in
mov
pop
lea
mov
imul
sahf
test
bnd
lcall
xrelease
add
jp
mov
sti
lds
loop
int
xchg
cmp
pop
lods
push
fstps
xor
test
fsubrs
stos
push
ja
jl
outsb
ss
add
add
sbb
rcll
lods
fstpl
inc
xor
imul
xchg
inc
mov
jnp
push
and
mov
inc
mov
sub
imul
imul
insb
sbb
test
pop
dec
lea
repz
cli
xchg
in
imul
xor
sub
or
imulb
ds
into
sbb
fisubs
stc
adc
xchg
mov
outsl
je
mov
ret
pop
ljmp
ss
mov
adcb
push
push
sbb
jmp
add
sbb
aam
dec
rcll
and
adc
rcll
mov
adc
loop
rclb
and
adc
rcll
mov
adc
loop
rclb
and
adc
lds
inc
mov
adc
loop
rclb
and
xchg
jge
lea
enter
xor
jle
outsb
std
or
sbb
sub
cmp
inc
stos
sub
or
sbb
mov
pushf
adc
in
arpl
jae
sbbl
mov
pop
shrl
repz
pushf
jae
and
in
and
jae
sbbl
mov
pop
shrl
repz
xchg
xor
xchg
jae
sbbl
int3
dec
loop
add
xor
cmp
sbb
mov
test
fsubs
mov
adc
lds
sub
in
mov
jmp
in
and
cmp
in
xor
and
fistl
fists
dec
dec
add
mov
imul
push
jecxz
into
insb
inc
push
xchg
mov
adc
mov
rcll
fmuls
xor
mov
in
pushf
repz
inc
es
test
jge
pushf
jmp
mov
push
fisubrs
repz
fmull
mov
pop
xchg
xchg
notl
fdivl
adc
xor
push
fstl
sbbl
mov
pop
shrl
repz
pushf
adc
fcoml
arpl
sbb
jne
dec
lret
and
cmp
addr16
dec
shlb
and
xor
subl
mov
xor
jmp
inc
stc
pop
test
push
cld
and
js
inc
lret
cmp
shrl
repz
pushf
adc
fcoml
arpl
jae
sbbl
mov
pop
shrl
repz
pushf
adc
fcoml
arpl
jae
cmpl
xchg
outsl
aad
arpl
ds
insl
push
sub
pop
mov
mov
mov
icebp
sub
mov
scas
ffreep
popa
mov
xor
and
jno
popf
dec
fucomi
scas
adc
push
outsl
outsb
mov
inc
jp
vmovntpd
push
sahf
movb
inc
enter
imul
pop
outsl
mov
insb
push
sub
je
shll
sbb
mov
idivl
dec
scas
in
ja
xchg
adc
mov
loope
imulb
and
aam
sbb
jp
aad
ljmp
sti
loop
cmpsb
fidivrs
push
hlt
pop
mov
push
adc
adc
aad
add
orb
xor
call
lcall
push
xor
mov
and
xchg
pop
stos
pop
outsb
imul
add
mov
rclb
xchg
add
enter
mov
push
cs
dec
push
fisttpll
nop
int3
mov
iret
les
idivl
mov
mov
mov
xor
sbb
xchg
ret
mov
pop
mov
xchg
pop
in
mov
sbb
xor
fldt
mov
push
sub
inc
sub
and
sbb
arpl
cmpsb
in
out
mov
jecxz
pop
sub
sbb
shr
adc
shll
imul
stos
fsts
dec
xlat
repz
or
jecxz
jae
adc
std
pop
insl
idivb
jle
or
cli
sbbl
fcomp
pop
xchg
in
cmp
inc
sarb
fistl
jp
in
mov
inc
mov
lock
enter
xchg
stos
and
cmpsb
mov
pop
mov
add
aaa
adc
dec
inc
sbb
jnp
cmpsl
jmp
mov
sbb
push
inc
add
pop
cmp
xchg
xchg
cli
jne
cli
fsubl
sbb
xor
mov
lock
adc
lea
pushf
push
rcll
das
dec
or
cld
mov
mov
icebp
std
clc
lea
xor
adc
push
mov
jo
addr16
je
sub
xchg
add
es
mov
fistpl
out
out
fs
mov
lahf
add
gs
push
sub
inc
or
xchg
lods
adc
clc
xchg
stos
adc
stos
rorl
loopne
pop
push
fimull
xor
jb
mov
mov
inc
aaa
xchg
repnz
in
ret
paddsw
inc
movsb
mov
arpl
pop
mov
movups
negl
aam
push
xor
fnsave
movsb
daa
jnp
leave
adc
inc
jecxz
xchg
in
add
cmpsl
mov
mov
sub
mov
das
and
xchg
jbe
fnstcw
rol
mov
or
mov
pusha
xchg
rolb
ffreep
push
add
or
push
adc
or
or
insl
sbb
adc
mov
inc
jp
dec
adc
movsl
clc
mov
pop
in
adc
cli
lret
out
shl
pop
cmp
push
pop
test
push
pop
outsb
test
adc
sub
fiaddl
or
xor
push
adc
fsubs
inc
dec
dec
jae
out
lcall
or
bound
loopne
insl
xchg
addr16
imul
sub
ds
mov
xor
cmpsb
scas
stos
into
push
jns
push
inc
pop
ror
inc
mov
mov
stos
mov
sub
nop
repz
dec
cmp
xorb
mov
xor
es
xor
test
mov
loop
mov
inc
lcall
jo
jmp
inc
loope
pusha
add
cmpsl
shl
inc
mov
push
push
popa
pop
or
mov
sbb
push
xor
cmp
mov
in
mov
rorb
stos
out
inc
jno
mov
mov
fdivs
jle
jne
mov
mov
out
repz
jbe
fucomip
push
and
add
xchg
test
cmp
and
and
insb
scas
ja
adc
test
adc
lods
je
addr16
push
popf
push
xchg
mov
and
xchg
arpl
js
fldl
and
movsb
mov
push
inc
sbb
in
adc
call
pop
loopne
push
mov
xchg
outsl
cmp
cltd
ljmp
insb
iret
bound
incb
mov
mov
or
xchg
cmpsl
scas
icebp
fistps
add
leave
adc
and
scas
sub
fdecstp
pusha
lods
cwtl
das
add
sbb
mov
dec
inc
fstp
out
loop
aad
subl
imul
adc
mov
shrb
xor
push
sbb
repz
ds
in
xchg
aad
inc
mov
mov
jmp
xchg
mov
fmuls
or
ret
lret
in
mov
jnp
push
inc
fsubl
cmp
aam
inc
loop
sbb
sbb
jp
jbe
xchg
sti
push
inc
mov
insl
imul
jbe
mov
mov
cld
add
or
ret
xchg
repnz
roll
adc
jg
iret
sbb
xchg
rcl
pushf
fpatan
xorl
sbb
pusha
fidivrs
test
icebp
sbb
xor
arpl
out
sub
inc
pop
and
mov
pop
scas
fldl
insl
pop
jbe
andb
imul
mov
stos
mov
das
mov
jae
xchg
cmovnp
adc
ss
add
and
inc
fnstcw
inc
jbe
sub
sar
and
ret
je
or
cmp
loopne
cmp
fsubl
enter
xor
jae
testl
scas
mov
cmp
lds
xchg
or
gs
ret
sub
ss
js
dec
pop
adc
jecxz
xor
mov
cmp
lods
cmp
jmp
lock
mov
inc
xchg
and
clc
ljmp
push
jns
mov
mov
push
pop
pop
hlt
pop
mov
mov
int3
lods
cli
test
pop
sti
cmp
sub
adc
or
lret
cmp
ds
out
pop
fwait
jnp
rorl
loop
xor
pop
and
xchg
pop
stos
push
cmp
xor
jle
clc
push
dec
adc
add
out
movsl
aaa
inc
mov
push
in
and
mov
or
sti
das
push
dec
xchg
push
add
push
dec
in
lcall
xlat
frstor
out
sub
mov
in
pop
add
dec
leave
push
ret
sub
jp
push
out
int
xlat
mov
pop
ret
ljmp
lds
push
jae
xchg
add
sbbb
pop
jg
mov
mov
push
addb
shlb
bound
fs
push
aam
lcall
jo
or
sahf
into
push
mov
fwait
lret
out
aaa
sbb
and
sub
mov
jle
addr16
test
test
data16
add
jae
movsb
push
inc
int3
fnsave
bound
adc
cmpsl
push
mov
stos
cmp
lods
sahf
int
dec
popf
pop
ss
iret
adc
in
js
jno
cmc
add
sahf
scas
jecxz
insb
inc
sub
xorb
orl
stos
xor
mov
pop
push
subl
inc
cli
rcll
xor
cmpsl
aaa
mov
sti
jbe
scas
or
add
lock
xorb
int
xor
lahf
pop
loop
call
jle
int3
stc
ficompl
test
loopne
inc
stc
call
fcompl
rclb
repz
jbe
sbb
lahf
movsl
sbb
dec
push
mov
mov
mov
or
shrl
cmp
mov
pop
mov
push
cltd
gs
test
sbb
xor
sub
push
mov
ficoms
das
psubq
mov
rcrb
int3
sub
cmpsb
pop
cli
fwait
add
jle
inc
sub
pop
std
and
sbb
dec
mov
mov
sbb
movsb
jmp
and
xchg
dec
or
xor
fcomps
cli
repnz
in
es
pop
fcomi
dec
push
cmpsb
xor
and
lret
mov
xchg
mov
insb
out
into
adc
lods
test
mov
imul
cmc
idivl
pop
icebp
popa
lods
clc
or
cmc
stos
shlb
mov
in
sub
test
pop
or
roll
imul
sbb
subb
test
xor
ds
mov
adc
or
in
xchg
insl
jp
push
loope
xchg
jb
in
rclb
insl
into
lea
jl
jecxz
push
jae
jns
sub
and
ror
or
adcb
sarb
mov
dec
test
sbb
xchg
enter
call
push
icebp
cmpsb
add
loopne
and
rcrl
out
or
mov
and
sub
jo
data16
inc
mov
cld
scas
pop
fildl
jbe
add
loopne
lds
and
mov
fucomip
jge
icebp
insb
push
sub
mov
push
call
mov
add
add
test
or
jge
or
iret
pop
sub
cmp
cli
pushf
pop
jns
push
xchg
add
sub
scas
and
sbb
or
xchg
imul
inc
dec
cli
orl
xchg
movsl
mov
fst
out
mov
adc
fidivs
or
jo
adc
into
mov
lds
daa
call
iret
add
mov
xchg
xor
lods
pop
insb
jge
mov
adc
inc
sub
mov
jb
xorb
pop
dec
mov
loop
mov
daa
fucomp
lds
je
idivl
pop
or
mov
pop
xor
xchg
mov
clc
pusha
cmp
inc
mov
lret
jnp
orl
test
add
cltd
or
sub
lea
int
in
mov
push
dec
andl
roll
adc
je
sub
jo
cmp
mov
mov
cmp
xchg
push
dec
cmc
push
das
shlb
push
ret
fs
inc
push
sbb
mov
mov
pop
lods
fcmovnb
stos
out
jno
adc
jne
call
es
xor
lea
iret
mov
imul
cli
sbb
xor
ret
test
fwait
cmp
jl
push
iret
push
xchg
push
add
jp
mov
mov
inc
div
sub
cmpsl
testl
movsl
lea
cwtl
jns
push
cwtl
adc
mov
cld
add
push
jbe
xor
add
xchg
jle
dec
fmul
cld
int
jp
mov
scas
imul
aad
mov
inc
shrl
and
jmp
movsb
gs
repnz
jns
adc
dec
cmc
dec
sbb
sub
insl
mov
inc
or
adc
leave
cmp
adc
shll
cmp
mov
inc
gs
mov
pop
cmp
clc
cmp
out
stc
loope
ffree
sbb
mov
push
or
fwait
sub
mov
cmc
out
or
mov
cmp
movsb
sbbl
test
andl
rcr
pop
lds
rol
pop
dec
ret
xor
xor
sub
insb
push
inc
iret
or
pushl
loope
jae
in
insb
pop
hlt
in
insb
es
fcomps
or
add
inc
add
out
mov
jae
lcall
xor
popf
adc
stos
and
lahf
sbb
mov
cltd
scas
add
sub
xor
mov
xor
shrl
out
xchg
push
mov
push
popf
fstpt
pop
mov
mov
arpl
aaa
shll
jmp
xchg
ror
loop
jae
scas
shlb
and
into
ficoml
shl
inc
aam
mov
outsb
insb
xor
scas
gs
pop
testl
inc
nop
dec
je
call
mov
fmulp
and
dec
push
cmc
data16
push
pop
daa
jp
loope
movsb
sbb
arpl
xlat
inc
aaa
idivb
stos
pushf
cmp
ja
xor
ljmp
lock
aad
pop
int
sub
push
icebp
cmovl
fistps
inc
repz
movsb
mov
push
dec
push
cli
dec
xor
pop
ret
mov
add
clc
dec
test
sarl
jle
push
mov
mov
fprem1
pop
add
push
and
xchg
jae
sarl
fists
mov
dec
xchg
and
sbb
mov
add
inc
rol
dec
ret
inc
aad
fstl
xor
notl
pop
mov
mov
jle
or
cwtl
out
push
jb
mov
pop
std
mov
xchg
subb
adc
dec
add
lret
adc
arpl
pusha
int3
js
dec
jae
jo
mov
mov
adc
mov
out
nop
mov
fisubl
addr16
and
pop
jmp
cmp
cmpsl
pushf
push
ljmp
adc
inc
jmp
xchg
add
mov
inc
jle
notb
cmp
jne
cmpsl
sbb
jbe
sbb
pop
sbb
cli
leave
lcall
mov
push
xchg
std
stos
mov
pushf
sarl
shlb
ss
es
enter
stos
sarb
fnstsw
xchg
dec
cmc
mov
cld
mov
pop
xor
scas
push
out
arpl
pusha
cmpsl
nop
pop
fsubrl
xchg
ret
push
lret
fs
xorl
sub
in
cmp
popfw
popa
jl
fistps
cmp
fcom
sub
jno
movsb
ficomps
std
shrl
mov
inc
fnstenv
mov
push
in
das
addl
jne
ret
adc
mov
test
jno
and
addr16
jle
data16
jmp
addr16
inc
dec
sar
and
out
pop
jb
push
lods
inc
xchg
cli
int
inc
fistpl
sbb
sub
jge
mov
loop
mov
add
push
sub
cmp
mov
push
pop
inc
loopne
add
sti
mov
int3
xchg
dec
clc
aam
aam
mov
sti
dec
or
mov
out
push
ds
decb
popa
and
ds
add
sub
bnd
pop
ret
xchg
shrl
sub
repnz
imul
sahf
mov
lret
stos
idivb
jo
xchg
int3
outsb
push
sbb
pop
jns
mov
jecxz
pop
mov
sbb
xor
iret
out
scas
mov
adc
cmpsb
lret
mov
xor
rcl
loop
arpl
lahf
or
cli
scas
cmp
pusha
leave
xor
addb
push
push
mov
push
iret
cmpsl
mov
std
cmp
test
arpl
std
int3
mov
jb
cmc
jmp
mov
in
push
iret
mov
adc
mov
bound
adc
mov
sub
and
jbe
cmp
dec
cmpsl
jae
das
rorl
mov
adc
adc
outsb
mov
shlb
push
les
jo
or
push
push
mov
push
je
lds
xchg
inc
add
scas
dec
rcll
lods
lahf
sub
or
and
fsts
imul
scas
mov
xchg
mov
ss
xchg
xor
mov
xchg
adc
inc
orl
cli
insl
sub
add
cld
push
push
fnstsw
maskmovq
mov
cld
gs
int3
dec
jg
leave
jbe
popf
repz
nop
test
push
xorl
lahf
leave
fnsetpm(287
outsb
xor
mov
mov
mov
in
sbb
adc
cmc
sbb
inc
out
pop
icebp
sub
xchg
cmpsb
in
gs
out
fimull
jp
out
pop
lds
pop
shr
jno
pop
push
pop
test
fdivs
mov
add
inc
test
int
push
mov
notb
dec
lret
pop
jae
and
enter
fucomp
sbb
mov
mov
xor
mov
mov
push
aas
xor
adc
std
cmpl
xchg
daa
inc
push
mov
mov
dec
sbb
push
sbb
out
cmp
push
cld
loope
xchg
test
mov
sub
push
mov
cmp
outsl
xchg
sbb
out
or
imull
or
or
inc
sub
sbb
int3
push
xchg
xor
js
pusha
mov
jae
ss
and
ret
mov
scas
in
mov
mov
outsb
jge
mov
mov
or
out
inc
xor
push
lods
mov
mov
or
mov
xchg
xchg
pop
cmp
adc
mov
sbb
jns
push
mov
pop
lret
cs
mov
cmp
cmp
daa
sbb
addr16
mov
jmp
mov
xchg
ljmp
inc
inc
add
sbb
inc
sti
out
xor
xor
or
repnz
into
jnp
imul
push
pop
icebp
xchg
adc
sub
insl
add
mov
xor
out
test
push
ja
push
call
mov
int
mov
pushf
stos
and
xchg
add
inc
sub
mov
push
and
sub
outsb
clc
hlt
mov
das
sub
or
or
adc
xchg
xor
jno
push
cmpsb
and
loope
out
jl
xchg
mov
mov
aas
dec
aad
fsub
aaa
pop
jecxz
sbb
daa
sub
les
les
sbb
cld
pop
bound
je
test
add
in
insb
les
movsl
das
mov
mov
sub
fcomps
mov
mov
call
pop
push
cmc
jne
jbe
lret
xor
ja
cmp
inc
inc
sbb
pusha
pop
cld
inc
out
push
xchg
xor
aad
mov
push
mov
and
adc
sub
or
mov
imul
pop
rcll
cmc
rorl
hlt
daa
mov
sbb
cmpsl
push
xor
loop
cmp
outsl
icebp
in
icebp
xor
push
bound
scas
hlt
into
xchg
cmp
add
adc
outsb
inc
mov
mov
pushf
mov
in
jbe
xor
loopne
sbb
cmpsb
lods
cmp
test
cmp
ret
std
jge
insb
mov
imulb
repnz
sbb
push
flds
add
add
xchg
lahf
mov
push
lret
mov
mov
jae
sub
addr16
jge
xchg
les
mov
aas
std
push
pop
arpl
icebp
lods
add
jg
cmp
jo
dec
mov
int
add
out
out
xchg
sub
cmpsb
aad
adcl
leave
in
push
xor
inc
ss
lret
pop
data16
sub
xlat
sarb
adc
xor
loope
push
jae
cmp
pop
ret
and
or
xchg
test
leave
add
les
in
and
dec
xchg
std
mov
pop
dec
clc
cli
lods
push
outsb
ljmp
xchg
pop
push
dec
int3
subl
pop
addr16
mov
push
popf
add
mov
cmp
addr16
sbb
into
or
inc
sub
pop
mov
fnstenv
mov
mov
cmpsb
shr
scas
push
imul
push
fs
insl
loope
push
push
out
sbb
pop
std
xor
xor
push
cltd
and
sbb
sub
or
ret
sbb
into
cwtl
mov
dec
aam
cmp
out
lahf
push
pop
mov
push
add
push
cmp
and
xchg
das
cmp
iret
enter
xor
lret
mov
pop
in
es
pop
test
push
add
aas
dec
cmp
jp
push
dec
pop
adcl
cmpsb
lock
xorl
aad
cmp
sub
adcl
scas
lahf
push
pop
mov
sbb
push
inc
xchg
test
sahf
movsb
faddl
incl
lock
inc
mov
shrb
push
outsl
rcrl
cmpb
xchg
mov
mov
inc
push
jno
popa
fidivs
push
pop
std
scas
shl
out
gs
mov
cmp
add
scas
roll
push
shrl
xchg
loopne
push
testl
or
pop
ret
fsub
cmc
push
adc
call
movsl
xor
fdivl
add
arpl
cmp
arpl
xor
push
lahf
pop
mov
ffree
mov
push
cs
das
daa
popl
sub
in
rorl
push
push
sub
cmp
dec
mov
mov
and
sbb
jb
cmc
scas
ret
jae
pop
bound
or
add
push
add
push
add
or
cmp
pop
shrl
repz
pushf
adc
fcoml
arpl
jae
sbbl
mov
pop
shrl
repz
pushf
adc
fcoml
arpl
jae
sbbl
and
dec
ret
pop
push
insb
jecxz
repz
mov
push
in
arpl
jae
sbbl
mov
pop
shrl
repz
pushf
mov
mov
pushf
add
mov
movsb
push
minps
in
or
mov
pop
add
add
add
push
add
or
jae
xchg
add
add
mov
add
push
add
int
adc
pop
add
inc
add
add
push
add
add
add
add
incb
roll
add
add
add
dec
add
add
add
add
add
es
add
add
incl
cmp
cwtl
add
pusha
add
add
add
add
add
add
add
add
add
or
add
add
add
icebp
add
add
add
popa
add
add
or
jecxz
mov
add
or
xchg
add
add
add
push
add
add
fldl
mov
aaa
add
add
add
add
add
push
add
add
mov
add
mov
add
add
add
add
jno
pop
add
add
jl
ds
add
add
push
add
add
add
add
dec
add
pop
add
add
add
add
jl
or
insl
add
insb
add
add
testb
add
add
add
add
out
add
add
add
sbb
add
add
add
add
sbb
adc
add
add
push
add
add
add
inc
add
add
add
add
adc
clc
add
cmp
insb
add
sub
popa
add
or
sub
xor
sub
sbb
mov
add
jl
jle
int3
add
call
add
add
pop
add
add
add
jecxz
je
add
add
and
ltr
or
jl
and
mov
add
add
dec
add
dec
add
add
add
mov
jb
aad
fldl
mov
int3
add
add
add
and
mov
popa
add
cmp
add
add
add
push
add
push
add
sub
add
add
add
add
add
dec
add
add
add
popa
add
add
mov
add
add
add
add
sbb
dec
add
repz
mov
add
add
int3
add
add
je
xor
movsb
add
add
add
add
add
add
add
add
xchg
add
adc
add
add
mov
add
add
cmp
add
add
add
add
xor
fiadds
add
add
add
add
add
add
or
jg
pusha
add
add
add
add
inc
or
xor
add
add
add
add
add
add
add
add
add
cmp
test
add
int
gs
add
inc
add
add
jg
and
icebp
add
add
add
add
in
add
add
xor
jge
pop
add
add
add
popa
add
pusha
add
inc
add
push
add
add
add
add
mov
add
popa
add
insb
add
add
xor
int
push
cmp
dec
add
xchg
add
add
add
ljmp
push
push
add
mov
mov
ret
nop
inc
add
xor
xchg
outsb
in
aam
push
aam
arpl
mov
inc
inc
mov
jne
inc
add
bound
sbb
out
repz
iret
push
xchg
pop
xchg
fidivl
divl
or
mov
dec
lahf
cmp
jle
pop
adcb
outsb
ss
imul
adc
pusha
idiv
pop
jmp
adc
xchg
mov
shlb
xchg
inc
mov
rcll
mov
sbbl
sub
scas
mov
adc
in
test
mov
inc
cmpsb
xchg
xor
ljmp
into
add
dec
notl
insl
cmp
pop
lret
int
push
inc
or
jecxz
sbb
sbb
in
jae
xchg
in
and
mov
cli
dec
or
sub
popl
push
sti
arpl
shll
in
push
pop
dec
movl
push
push
adc
push
les
icebp
xchg
lods
add
inc
inc
fisubs
test
push
in
mov
lret
and
add
xor
sbb
daa
ss
add
ljmp
shlb
add
bound
rorl
fisubrs
test
fcompl
lods
sbbb
jp
subb
mov
insb
mov
ficomps
cmp
cwtl
sbb
out
inc
stos
push
xor
cld
test
jl
adc
add
sbb
shrb
out
sbb
push
mov
testb
jo
bnd
mov
adcb
fiadds
pop
fimuls
mov
cmp
rol
test
call
popf
dec
sbb
mov
iret
or
add
add
mov
mov
sar
cmpsl
imul
jp
into
shrl
mov
fcmovnbe
cltd
xor
cmpl
nop
jmp
push
cmp
loope
aam
mov
ja
ss
or
jecxz
test
jo
add
dec
mov
lret
pop
mov
mov
jne
lds
imul
or
lcall
sar
push
sbb
push
roll
add
jle
into
cmp
daa
es
dec
in
xchg
mov
jmp
push
pop
mov
ljmp
mov
mov
xor
enter
adc
and
stos
clc
nop
and
xchg
mov
pop
xlat
push
lea
dec
xor
loopne
xchg
inc
push
lds
leave
mov
mov
aaa
hlt
movsl
push
add
cmp
cmpsb
aad
jae
jno
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
