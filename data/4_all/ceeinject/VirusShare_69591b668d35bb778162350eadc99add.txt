call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
mov
in
xchg
fsubl
ljmp
insl
adc
pop
and
aam
les
xchg
cld
test
mov
shrl
inc
insl
jne
fs
jno
add
xor
and
aam
les
cld
test
mov
movsb
sub
cmp
insl
adc
rsqrtps
push
fcompl
int3
andl
out
mov
add
dec
das
pusha
popf
call
loopne
aam
aam
sahf
test
or
test
mov
xchg
add
pop
inc
mov
andl
and
fnstenv
inc
outsl
test
inc
pop
jb
fwait
shr
mov
call
lods
loope
mov
xchg
rolb
test
mov
mov
in
inc
push
and
adc
cmp
or
imul
fsubl
mov
aas
inc
adc
leave
pop
mov
rolb
dec
sbb
or
xor
xor
sbb
jns
xchg
fwait
sbb
pop
fcomi
aam
les
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
fcom
clc
mov
scas
rcrl
rolb
pop
arpl
js
sbb
inc
and
inc
repz
aam
mov
cwtl
ror
movsb
mov
push
ss
jns
daa
jno
xchg
sbb
inc
jo
xchg
xchg
xchg
out
xchg
mov
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
les
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
in
add
testl
cmp
popl
inc
mov
ja
outsl
push
clc
mov
mov
shll
movsl
sub
test
inc
lea
jne
aam
cmp
and
es
fldcw
push
out
pop
xor
stos
sbb
add
pop
das
add
ret
adc
dec
mov
out
outsl
cmpsl
pop
loopne
mov
jl
dec
adc
rol
mov
aas
push
mov
inc
inc
xor
add
cmpb
or
insl
fidivl
fadds
bound
jecxz
cld
stos
xchg
xchg
fiaddl
pop
mov
popf
out
xchg
imull
sub
and
std
scas
mov
popa
movsl
mov
mov
push
sub
jbe
out
inc
jb
pop
leave
loope
lea
pop
jmp
inc
mov
mov
add
cmpb
test
jns
mov
or
mov
stos
or
mov
cmpb
movsl
mov
pop
sbb
leave
and
cmp
dec
outsl
lods
jno
cmp
insb
xor
push
mov
cmpsb
mov
stc
test
pop
or
dec
mov
or
fdiv
adc
pop
cmpsb
test
jne
xchg
xor
sbb
mov
jnp
mov
lods
or
lock
mov
pop
das
ss
xor
jp
lods
in
jecxz
lahf
das
sub
inc
fs
jmp
lds
pop
inc
in
jb
dec
stos
push
ja
mov
aam
cmp
push
cmpsb
xor
ja
adc
cmp
jo
push
fcomip
pop
fisubl
pop
test
mov
ret
in
sub
sbb
and
popa
cli
inc
loope
push
je
je
lods
push
das
out
xor
jbe
sbb
fdivl
test
mov
mov
sub
or
lahf
sti
fwait
pop
sbb
mov
adc
mov
mov
xor
fldcw
push
mov
xchg
mov
inc
loop
mov
jmp
adc
mov
lret
sbb
sti
xor
push
and
mov
or
sahf
inc
popf
orl
mov
dec
fmull
out
push
mov
stos
dec
popf
cmp
dec
fmul
adc
stos
iret
aaa
xor
mov
lret
inc
test
sarb
sub
imul
leave
mov
sti
sahf
dec
daa
xchg
or
mov
mov
stos
hlt
adc
xchg
jbe
jmp
inc
push
xor
lods
cmp
mov
cli
jae
and
cmc
inc
pop
cmp
and
jbe
dec
push
pop
xchg
adc
cmp
mov
in
or
sbb
data16
aas
dec
cmpsb
xchg
pop
pop
cwtl
dec
out
adc
jg
popf
mov
les
dec
push
fs
pop
insl
out
pfrcpit1
shrb
bound
sarb
cmp
sub
adc
in
stos
lock
sahf
in
inc
pop
push
adc
lahf
and
jmp
aam
cmp
lock
inc
dec
add
and
inc
call
sahf
add
xchg
mov
ljmp
and
adc
ret
cmp
nop
scas
lret
in
or
enter
adc
aam
inc
std
and
sub
mov
ljmp
xchg
push
stos
xchg
mov
dec
test
sbb
ret
fwait
test
pop
pop
insb
jo
cs
pop
leave
outsb
insb
xchg
pop
and
sti
pop
mov
xchg
call
jae
pop
sbb
clc
inc
dec
push
ficomps
hlt
cmp
push
xor
mov
mov
outsb
cltd
stc
mov
icebp
insl
cwtl
mov
cmc
jle
pop
mov
mov
subb
mov
in
mov
push
cmpb
pop
and
mov
sub
sahf
bsr
ret
sbb
ss
aad
and
sarb
loop
mov
mov
imul
scas
cmp
cmpsb
ficompl
push
or
mov
shll
popf
or
xchg
test
inc
xchg
sti
bnd
push
cmc
pop
adc
out
cmp
je
fildl
and
lcall
aam
movsb
push
sub
and
out
jge
pop
add
sbb
pushf
fstpt
jb
sub
int
jmp
dec
xchg
adc
adc
mov
fsts
push
lock
pop
push
sbb
adc
mov
push
adc
jno
loope
jle
arpl
mov
adc
bound
or
jno
dec
jp
or
imull
sub
divb
roll
mov
push
pop
cmp
pop
ja
jns
adc
rorb
dec
push
mov
testl
out
xchg
jmp
out
mov
sarb
inc
fistpll
sahf
mov
mov
sti
iret
insl
outsl
xchg
xorl
xor
pop
sti
cmp
xor
neg
mov
sub
mov
adc
mov
loop
push
jle
es
std
sub
fdivl
sub
mov
popf
add
mov
mov
and
mov
sbb
push
call
stos
orb
sbb
inc
lea
insb
stc
push
call
dec
push
add
out
add
xchg
popa
pop
scas
shlb
dec
or
xchg
sbb
inc
push
scas
mov
jmp
lret
sbb
add
insb
mov
push
mov
insl
lcall
lret
sbb
fwait
aam
pop
ret
cmp
ja
movsb
test
pusha
xchg
pop
xchg
pop
or
pop
xchg
fs
adc
ret
stos
add
push
or
mov
pop
aad
in
imul
inc
cmpsb
int
ja
push
imul
and
fsubs
add
push
mov
orb
mov
or
repnz
mov
and
jo
mov
addr16
pop
cli
jns
mov
subl
sub
mov
jns
daa
scas
mov
mov
adc
cmp
hlt
jg
cmp
sbb
xor
adcb
nop
cmp
inc
cmpb
pop
ljmp
xor
mov
leave
pop
daa
sbb
dec
aaa
sub
xchg
cmc
pop
xor
inc
fldcw
enter
adc
xor
xchg
aas
data16
int
mov
cmpb
outsl
imul
xchg
sbb
ds
lret
outsb
loop
in
push
pop
inc
js
push
adc
adc
and
inc
je
push
je
outsb
ja
cld
pusha
addl
dec
cli
or
inc
out
scas
lea
xor
test
into
pop
xchg
inc
push
sbb
mov
pop
mov
out
jb
mov
in
xor
add
mov
movsb
outsl
js
or
pop
pop
sbb
fistpll
mov
jge
push
push
hlt
or
adc
pop
cmp
je
fsubp
aam
sbb
loope
bound
pop
data16
cs
andl
in
or
fsubl
sub
popf
ss
adc
jo
cmp
js
icebp
popf
imul
in
paddsb
xor
or
pop
fimull
cmp
test
push
jg
mov
ret
mov
stc
xor
push
xchg
dec
fdiv
stos
jnp
pushf
xor
das
cmpl
jg
add
inc
lea
push
push
push
imul
and
inc
dec
sbb
push
fisubrs
inc
dec
xchg
adc
push
fnsave
mov
cld
mov
xchg
clc
dec
lret
inc
jecxz
daa
in
outsl
pop
or
cmpsl
sub
xchg
ret
xor
pop
add
inc
jnp
icebp
jl
mov
dec
icebp
mov
add
dec
data16
mov
cmp
mov
addr16
dec
pushf
mov
push
push
pop
mov
aas
punpckhdq
mov
mov
rcrb
dec
push
xchg
adc
sahf
addb
fsts
dec
adc
pusha
sbb
iret
inc
fdivrl
daa
insb
outsl
icebp
lret
sbb
ret
mov
pop
add
arpl
push
pop
mov
inc
and
sub
jbe
stos
sub
roll
sbb
fadds
inc
aam
mov
dec
mov
mov
insb
push
loop
lahf
in
xchg
scas
pop
lock
test
add
insl
cltd
icebp
loop
and
lcall
mov
and
lret
test
sub
es
xchg
adc
adc
xchg
inc
dec
add
mov
ljmp
leave
or
pop
jp
mov
adc
loop
fstl
rcll
mov
or
je
dec
lret
into
mov
in
insb
sub
movsl
mov
lahf
bound
pop
fcoml
stc
lock
addr16
add
sub
pop
pop
cmp
cmp
inc
arpl
lahf
in
lods
shlb
push
inc
stc
bound
mov
fistl
sub
ja
pop
pop
or
cs
lods
insl
cmpsb
setl
nop
mov
xchg
mov
xor
xchg
stc
mov
ss
cmpsl
enter
xchg
leave
jbe
addb
int3
sbb
rcr
cmp
pop
push
enter
mov
sub
pop
ds
mov
mov
pop
xchg
dec
pop
repz
aam
fs
mov
in
in
rorb
xchg
xorb
jae,pt
or
cwtl
call
scas
das
mov
adc
ret
cmp
cmp
jecxz
mov
rorb
aas
and
fstp
sub
xor
mov
dec
pop
xchg
jge
xor
icebp
dec
fstps
mov
xchg
mov
or
or
xor
lock
test
and
int3
decl
icebp
ret
sahf
sbb
pop
cltd
cmc
addb
pop
pop
repnz
sbb
xor
dec
mov
push
inc
es
xchg
mov
mov
lret
ja
mov
dec
adcl
outsl
lcall
es
andl
aam
cmc
dec
pop
adc
div
ljmp
shlb
inc
sahf
add
add
adc
cld
test
inc
repz
outsb
push
cmc
add
and
and
scas
adc
xchg
das
xchg
xchg
or
sbb
add
mov
enter
jne
xor
and
and
insl
mov
lods
push
mov
push
push
in
mov
and
push
jle
mov
xchg
mov
sub
pop
add
push
cmp
shll
dec
xchg
repz
out
out
ret
mov
sub
lds
pop
aad
out
ret
or
pop
xor
lahf
push
insb
shlb
xchg
lcall
mov
dec
add
fsubl
mov
dec
push
test
ss
imul
sbb
cltd
mov
xchg
bound
xchg
mov
sbb
mul
rol
in
xchg
pusha
ret
std
xchg
fcmove
pop
push
bnd
xchg
nop
xlat
fwait
xchg
xchg
inc
dec
add
push
fldt
mov
hlt
mov
sahf
addb
lahf
in
test
add
jmp
gs
loopne
jno
divb
or
cmc
outsb
xor
std
mov
mov
push
sbb
add
push
paddb
pop
add
xor
fwait
inc
cmp
mov
adc
jg
or
or
imul
rcr
inc
insl
orl
xor
stos
sbb
inc
xlat
mov
fs
pop
and
jbe
xor
pop
out
sub
lock
out
mov
sbb
cmp
xchg
loope
dec
mov
add
mov
xchg
sub
sub
sbb
dec
sbb
jle
out
int
sbbb
cmp
xchg
fadds
les
pop
inc
scas
sbbb
sbb
hlt
or
das
lret
dec
insl
xlat
mov
sbb
ds
or
ja
xchg
jl
cmp
add
xchg
pusha
xlat
xor
iret
or
fisubrl
and
and
mov
and
popa
das
lds
and
fs
xchg
add
lods
test
cld
es
fstpl
repnz
popf
aaa
repnz
fisubs
mov
sub
jmp
enter
enter
dec
jg
dec
lcall
or
jno
pop
aas
and
lods
or
add
popa
test
jl
aas
xchg
inc
push
cmp
add
xchg
jno
xchg
sarb
call
notb
pop
test
repnz
jb
testb
mul
or
inc
daa
dec
and
mov
mov
add
pushl
divl
lea
aad
jae
adc
scas
sbb
js
push
sbbl
jno
shl
cwtl
or
xchg
pop
inc
les
or
pop
mov
push
daa
mov
add
pusha
sbb
fisttpll
in
push
movl
stos
loopne
mov
add
hlt
inc
xchg
insb
aam
xor
mov
jmp
add
insb
or
movb
adc
inc
push
add
in
movsl
mov
push
push
cmpsb
outsb
mov
pop
push
xor
lahf
mov
mov
aad
outsl
ret
xchg
fmull
mov
cltd
and
int
pop
push
push
js
es
in
das
mov
shlb
loopne
cmpsb
out
and
es
dec
pop
push
in
and
movsl
fstpt
cmp
scas
jge
push
pusha
pop
inc
lds
subb
jne
adcl
mov
sbb
push
out
push
mov
cltd
hlt
stc
xchg
mov
sbb
call
mov
lret
cmp
mulb
add
mov
pop
sbb
daa
les
add
dec
push
add
fidivl
clc
or
xor
and
hlt
negl
inc
or
mov
sahf
lock
cmpsb
pusha
stos
fwait
xor
cmpb
jnp
insb
mov
jg
adc
imull
repnz
shrd
jg
inc
mov
out
jns
dec
jnp
imul
aam
or
imul
repnz
flds
and
fwait
imul
gs
sub
push
push
push
loop
xchg
adc
push
cwtl
test
jp
push
jmp
mov
daa
inc
push
jb
push
call
fmuls
mov
xchg
mov
out
jnp
or
mov
lcall
mov
lcall
test
and
xchg
fwait
add
and
sub
inc
push
aam
mov
and
jae
mov
inc
lahf
out
test
cmc
sub
shrl
push
ja
mov
aam
xor
ja
xchg
sub
and
pop
lahf
push
stc
test
mov
test
fidivrl
mov
les
imul
inc
push
in
popa
popl
out
cwtl
mov
repnz
repnz
push
jg
mov
test
pop
loopne
in
xor
hlt
inc
push
pop
add
fucomp
pop
incb
call
lret
insb
adc
push
xchg
xor
jno
push
arpl
daa
jp
cmpsb
lcall
xchg
xorl
sahf
test
lods
push
add
lahf
sub
add
adc
lods
xor
idivb
lods
sub
lea
lea
adc
popl
or
movsb
add
popf
jne
sahf
inc
decb
mov
pop
repnz
mov
xor
adc
hlt
mov
xor
jmp
int
xchg
test
push
mov
daa
lret
push
xchg
mov
push
arpl
jne
push
shll
jmp
xor
dec
pop
pop
cmp
sub
icebp
test
inc
arpl
and
inc
add
push
push
xchg
lds
lcall
sbb
cmp
cmpsl
add
or
mov
mov
imul
in
nop
shll
mov
fists
inc
mov
push
fbstp
stc
dec
jb
popf
mov
shll
notb
dec
mov
mov
sbb
jno
lret
cmp
fcoml
sub
mov
adc
les
or
xor
sub
lea
jecxz
jo
addr16
enter
xorb
sub
je
dec
jbe
mov
jle
jne
add
fdiv
sbb
xor
pop
gs
hlt
add
insl
aaa
shlb
mov
loopne
cwtl
rclb
sahf
sti
jg
ja
push
mov
mov
stc
cmpsb
shl
sbb
insb
dec
sti
dec
fstps
leave
inc
rorl
clc
pop
sub
fnstcw
add
notl
es
xchg
andl
adc
sbb
mov
mov
clc
outsb
bound
scas
sbb
xchg
or
dec
xor
repz
fidivrl
push
popf
mov
hlt
or
push
rcr
fbld
inc
repz
dec
aad
xor
sbb
lret
rcrl
neg
xchg
lahf
pop
loope
aad
xchg
sub
and
sub
cld
jp
inc
ret
mov
inc
add
ret
pop
pop
pop
push
inc
mov
jl
mov
lret
shlb
cltd
mov
ljmp
pop
mov
inc
push
das
stos
cltd
sbb
inc
sbb
test
nop
push
push
add
push
popa
std
scas
es
or
adc
bound
mov
ss
ss
in
jno
sbb
hlt
add
mov
enter
leave
and
push
scas
mov
cmp
lock
fists
pop
es
pop
mov
mov
fwait
and
adc
pop
or
jle
addb
sub
add
adc
pop
enter
lods
add
xor
push
sarb
outsl
clc
xchg
out
push
leave
addl
push
fmuls
cs
dec
cmpb
sub
je
sub
xchg
sub
mov
jne
dec
out
jge
inc
mov
out
gs
push
pusha
iret
insb
add
shll
jns
sub
orl
and
xchg
xchg
inc
sbb
inc
pop
pop
shlb
lods
in
and
push
mov
movsl
xchg
pop
mov
stos
dec
outsb
cmpsl
xor
sub
nop
sbb
movsl
and
xchg
scas
ja
push
hlt
sub
sti
sbb
and
mov
gs
push
xchg
clc
cs
mov
lea
fiaddl
or
lds
adc
inc
inc
sbb
mov
jnp
into
xchg
out
movsl
mov
pop
lret
jecxz
jecxz
scas
sarl
sub
rcrl
rol
jbe
jbe
pop
cwtl
add
test
mov
mov
cmp
adc
jns
add
mov
mov
jl
popa
gs
js
or
es
sub
lods
xchg
mov
lods
jl
mov
inc
pop
xchg
lock
shrl
dec
sub
mov
stos
jns
xchg
stos
pmaddwd
sub
in
jne
pop
out
repz
dec
pmaddwd
sbb
negl
out
or
adc
sbb
ja
rolb
pop
repz
or
add
cmp
ss
lds
inc
cli
les
jmp
add
loope
movsb
cld
rclb
es
and
repnz
divl
mov
pop
sbb
pop
cmp
rcrl
pop
or
inc
rcrl
pop
iret
test
repz
xor
mov
daa
adc
mov
push
inc
fistl
cld
cmp
je
pop
int
sbb
xchg
add
pop
cld
daa
sub
orb
in
cmp
in
inc
sar
jp
adc
add
push
xchg
mov
mov
out
push
xor
push
and
adc
xchg
xchg
mov
out
dec
add
or
lahf
repnz
xchg
inc
fldenv
adc
dec
daa
jbe
adc
mov
outsl
cld
fwait
or
mov
and
jge
add
test
fwait
imull
and
push
adc
movsb
lods
aas
outsl
sbb
idiv
rcrl
adc
push
and
sbb
loope
imul
jl
shlb
fcoms
das
mov
and
call
push
adc
dec
scas
pop
aas
pop
lea
dec
cmpb
mov
and
push
xlat
nop
jp
arpl
inc
lods
je
aam
push
cwtl
dec
stos
gs
cld
mov
movsb
pop
or
jl
push
mov
outsb
jo
aam
loope
mov
leave
push
and
xchg
inc
and
in
mov
or
mov
outsl
xor
cld
xor
lahf
push
aas
mov
clc
jge
mov
aad
and
outsl
dec
sub
and
out
push
dec
dec
daa
jecxz
call
inc
xchg
lret
jecxz
xchg
js
bound
les
pushf
in
xchg
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
les
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
les
cld
test
mov
movsb
sub
cmp
or
sbb
insb
adc
add
xor
and
aam
les
xchg
cld
test
mov
fs
cmp
cmpsb
je
adc
pushf
hlt
sti
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
es
insb
sbbl
and
pop
mov
mov
xor
and
mov
xchg
insb
subl
cmp
sub
sbb
or
notb
in
and
cmp
inc
pushf
xor
inc
sbb
out
xor
sti
cld
int3
out
mov
mov
sub
pop
in
or
insb
in
adc
and
xor
rorb
out
cmc
cmp
adc
adc
scas
push
into
xchg
cmpl
jmp
sarl
in
mov
mov
and
xor
push
sti
xorb
out
icebp
xchg
insb
xchg
subb
sahf
adc
inc
jae
inc
ss
jae
push
jl
mov
sarl
stos
hlt
or
enter
faddl
nop
fistpll
push
mov
pushf
xchg
es
imul
xchg
sbb
hlt
inc
adc
leave
hlt
int3
and
add
pushf
pushf
push
insb
adc
cmpsl
inc
cld
mov
pop
add
adc
int3
int
jl
mov
out
xchg
insb
jae
aaa
pop
test
sbb
adc
aad
movsb
jg
mov
xadd
cmpl
sub
push
lcall
scas
inc
mov
aaa
stc
xor
add
ret
dec
xchg
inc
lock
dec
jbe
push
cltd
push
mov
paddsb
mov
adc
jecxz
rolb
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
scas
push
add
dec
add
mov
rcrl
mov
xor
xchg
out
test
jmp
sub
inc
cli
xchg
sub
pop
mov
test
add
add
cmc
js
dec
push
outsl
loop
repnz
mov
fiaddl
movsl
clc
push
xorl
or
call
and
pop
mov
lods
stc
mov
pop
sub
adc
mov
repz
in
test
add
mov
loop
fs
sbb
inc
cmp
repnz
shrb
enter
enter
dec
ret
mov
gs
xorb
fiadds
cmpsl
test
add
adc
inc
dec
dec
loop
ljmp
add
outsl
dec
pop
insb
push
push
push
cs
dec
enter
inc
pop
ds
int3
arpl
ret
leave
cmp
insb
test
adc
push
and
push
negl
sub
push
xchg
fwait
das
es
xor
cld
in
mov
pushf
sbb
cltd
pop
mov
in
mov
movsb
cmp
std
test
inc
mov
mov
nop
mov
pop
pop
cltd
cmp
stos
fwait
imul
push
outsl
outsb
lock
out
push
fsubrs
push
shr
and
push
adc
mov
mov
xor
insb
xchg
and
popf
std
jns
xchg
or
xor
push
sub
les
ss
shll
shld
arpl
pop
in
repz
sub
xor
push
xchg
test
pop
aaa
js
stos
lds
inc
data16
dec
sahf
shrb
mov
xchg
and
aaa
xor
repnz
pop
pop
mov
push
subl
jne
dec
repz
push
mov
idiv
adc
jae
or
xor
mov
mov
sahf
sarb
sub
hlt
mov
es
xchg
call
jbe
or
cmpsl
push
sahf
fldl
xchg
or
mov
adc
dec
or
imul
mov
nop
out
jo
mul
or
mov
int
cmp
rorb
rcll
add
xchg
mov
inc
push
dec
into
sbb
outsb
out
mov
lcall
dec
iret
mov
mov
and
int3
mov
jnp
pop
pop
lahf
add
jb
les
loope
mov
out
add
pushf
outsb
mulb
lods
or
loopne
shlb
mov
cli
jnp
sub
inc
dec
dec
mov
xchg
scas
orb
mov
dec
xchg
arpl
jecxz
sub
inc
lds
filds
data16
repnz
dec
leave
add
sahf
loopne
and
fs
stos
jge
repnz
push
call
sbbb
or
or
out
loopne
movb
xchg
into
aas
pop
shll
jge
fs
fstps
inc
cld
and
adc
dec
xchg
jp
xor
leave
push
xchg
push
jns
mov
aam
jo
shll
stos
pop
hlt
add
pushl
cs
push
mov
xchg
aam
aaa
cli
xlat
in
mov
loope
or
mov
test
clc
in
mov
stos
pop
and
inc
sbb
mov
sub
sbb
idivl
xchg
sub
divl
mov
movsb
mov
jnp
pop
dec
sub
cwtl
cli
dec
or
pop
cmpsb
imul
xlat
or
gs
repz
pop
popl
cmp
xchg
or
lcall
movsl
std
xor
dec
fbstp
lahf
mov
mov
sbbb
fnsave
ss
hlt
mov
pop
cmp
movsb
in
clc
int3
divb
and
lret
xchg
es
xlat
cld
jb
mov
loopne
popa
xchg
out
sbb
jg
les
push
sahf
sbb
icebp
dec
dec
xor
ds
stos
lahf
sub
fistps
adc
repnz
test
shll
bnd
xor
divb
inc
iret
movsl
std
rcrl
imul
hlt
sub
cmpsl
dec
xor
mov
jge
dec
mov
dec
mov
pop
jle
jmp
aaa
xchg
mov
lret
inc
pop
or
les
add
movb
or
inc
push
fistpll
js
sbb
cmp
dec
xchg
sbb
xchg
add
inc
xchg
sub
and
and
mov
popf
mov
int3
xchg
sbb
jno
add
xor
cmpsl
push
or
jecxz
lods
mov
or
cmp
arpl
hlt
pop
jmp
lcall
inc
notl
data16
mov
sbb
in
xchg
shl
sub
xchg
cmp
mov
jge
xor
cltd
push
idivl
scas
inc
push
in
sub
loop
in
test
sti
out
xchg
dec
gs
pusha
movsl
push
into
adc
ljmp
pop
or
jge
jmp
jp
mov
adc
sub
adc
dec
sub
cltd
xchg
imul
out
sbb
jne
outsl
dec
or
jno
movsb
arpl
sti
iret
je
ds
sbb
inc
in
mov
fimull
out
xor
lods
sub
shlb
add
jo
mov
dec
xor
sahf
addb
aad
add
sub
addl
fisubl
jae
jmp
mov
jns
and
add
sub
pandn
jl
hlt
mov
mov
jne
data16
es
sub
xchg
lea
out
inc
xchg
lcall
scas
dec
mov
outsl
imul
and
sub
add
mov
mov
push
cltd
inc
and
aaa
sbb
mov
push
in
lds
sbb
sbb
mov
iret
ljmp
lcall
stc
mov
pop
dec
fwait
sub
in
and
mov
rolb
lret
int
gs
rclb
add
insl
lock
xchg
jp
xchg
inc
adc
insl
lods
adc
xlat
mov
xlat
loop
push
xlat
cwtl
int
imul
test
adc
push
imul
mov
xchg
out
dec
push
fimull
shl
stc
test
or
repnz
xor
jnp
jmp
sbb
loopne
call
out
hlt
ret
inc
sbb
xchg
fsubr
xchg
scas
cmp
or
mov
cmp
popf
cmpsl
xor
in
adc
mov
lock
jge
cmp
imul
mov
popa
sub
cmpsb
mov
fcoms
sub
lods
or
test
mov
std
sbb
cltd
lea
dec
cmp
xchg
ret
subl
mov
clc
xchg
xchg
roll
clc
jl
push
roll
loop
lret
mov
mov
cmp
mov
cmpsb
adc
bnd
dec
movsb
pop
mov
pushw
xor
xorps
or
or
adc
add
sbb
mov
test
mov
sub
and
mov
je
hlt
or
pop
sbb
add
xor
mov
test
push
lea
inc
add
mov
rol
and
sub
rorb
inc
xchg
add
insl
out
cmp
or
lock
in
mov
imul
dec
add
cltd
stos
popf
test
and
movsb
cmp
jae
jb
push
and
imul
icebp
outsb
mov
test
mov
inc
jmp
cmp
insb
sub
mov
sar
fwait
mov
pop
stc
or
fwait
jecxz
ds
stc
out
mov
add
or
xor
pop
mov
mov
sbb
arpl
push
adc
mov
sub
sub
int
addl
push
je
jecxz
xchg
mov
and
or
call
outsl
push
clc
jecxz
cmove
xchg
js
das
js
imul
gs
xor
adc
add
or
mov
arpl
imul
outsl
gs
jmp
das
sub
pop
mov
sbb
aaa
add
outsl
adc
movsl
pop
mov
incb
mov
mov
incl
sarl
cwtl
sub
fldenv
ret
cmp
mov
sbbl
stos
mov
sbb
insl
int
scas
insb
push
faddl
inc
loope
arpl
push
movsl
fs
es
xchg
push
hlt
lock
shlb
movsb
mov
pop
and
dec
sub
sub
icebp
cltd
movsb
xchg
int3
inc
xchg
pop
test
cwtl
dec
cwtl
ja
pop
sub
clc
jecxz
jge
movsb
iret
and
into
jle
sbb
inc
addl
and
sub
push
adc
lcall
dec
adc
or
ficoml
ret
jae
test
mull
in
jbe
sbb
mov
push
adc
arpl
add
std
lods
cmc
pop
insb
cmpsb
pop
je
rclb
sub
ret
sbb
xor
aam
xor
in
pop
push
sub
jb
fldl
dec
test
imul
aas
xchg
rcr
jle
mov
int
sub
lcall
xchg
push
ss
cs
rclb
lock
orl
xor
sbb
jb
mov
jp
add
adc
ljmp
enter
fnstenv
insb
jle
add
adc
xchg
mov
hlt
pop
mov
mov
fcmovb
xor
lods
repnz
loope
cmp
scas
cmp
xchg
aaa
jae
ret
lret
push
sub
xor
mov
pop
movsl
inc
std
repnz
sub
mov
jnp
lods
sub
je
inc
mov
xor
adc
shl
xor
aaa
emms
lods
movsb
and
adc
mov
sbb
subb
add
mov
dec
inc
mov
and
out
cmp
xor
jmp
sbb
mov
arpl
or
jl
fiadds
fcomps
cmpb
pop
sbb
and
movntq
lea
addr16
lret
imul
int3
test
push
roll
shr
and
dec
sbb
xchg
fcmovnbe
push
sti
imul
insl
mov
jp
cmp
jle
jae
icebp
dec
push
dec
in
xchg
inc
fwait
repnz
xlat
cwtl
mov
sbb
and
aad
push
aaa
sti
inc
xorb
mov
mov
pop
dec
lods
xorb
and
push
js
jl
sbb
xor
stos
push
leave
push
imul
add
testl
stos
lahf
stos
mov
mov
mov
add
mov
pushl
adc
test
xchg
addr16
or
and
pop
mov
jnp
stc
dec
sub
inc
gs
sbb
pop
ja
inc
icebp
xchg
push
fisttpll
ja
jl
xchg
add
popf
xchg
cltd
xorb
rol
inc
clc
fdivrs
lret
testl
dec
imul
vmwrite
and
loop
mov
fcomp
jg
iret
jg
inc
iret
movsb
rol
mov
rcll
inc
and
jp
movsl
and
push
or
xchg
xchg
cmp
push
addr16
adc
xchg
stos
push
subb
mov
aas
or
xor
shlb
lahf
out
or
adc
mov
lods
inc
cmp
adc
clc
aad
iret
mov
sbb
inc
push
nop
dec
sti
rolb
dec
mov
push
les
mov
mov
out
push
push
inc
fnstsw
xchg
pop
fiadds
js
and
lahf
push
out
push
jmp
mov
sub
fstpt
ret
mov
sti
incl
mov
out
loop
push
data16
daa
stc
lods
lods
push
mov
insb
pop
sahf
mov
xchg
ret
jae
cmc
pop
mov
aam
xchg
arpl
sub
insb
inc
cmp
aam
fcoml
inc
into
xchg
imul
adc
decl
stos
loope
popf
add
push
xchg
mov
mov
and
daa
jp
adc
sub
add
in
scas
dec
loope
cmpb
lds
inc
cmc
std
inc
dec
dec
add
std
or
lds
xor
dec
xchg
dec
inc
insb
and
mov
sbb
repnz
fnsave
or
pop
je
test
lods
fbstp
xor
aad
in
mov
insb
mov
cmp
cmp
pop
stos
jle
jbe
aam
mov
mov
inc
sahf
jmp
fsub
xor
loope
addl
mov
inc
shl
fmuls
adc
sub
sahf
xchg
push
ja
jle
out
pop
icebp
mov
fwait
xchg
push
mov
addb
inc
into
xor
push
dec
sub
xor
out
xor
or
mov
jge
sub
add
divb
les
mov
test
leave
add
popf
mov
pop
and
insb
sub
xchg
daa
or
in
or
or
jbe
test
mov
xlat
cmp
js
xchg
jnp
jbe
int
mov
mov
jmp
aaa
ljmp
nop
push
cmp
push
daa
out
pushl
gs
push
in
fwait
lret
and
inc
xchg
fsub
scas
cltd
fstpt
in
ret
xchg
dec
hlt
jl
push
test
in
xor
mov
sbb
lahf
movsl
mov
les
in
dec
clc
sbb
pusha
push
adcb
adc
pop
movsb
nop
pop
lret
or
sub
pusha
mov
sahf
stos
and
push
cmp
test
das
xchg
cmc
push
loopne
cmpsl
jmp
inc
cmp
sahf
aas
add
inc
add
inc
jge
sub
iret
mov
xor
and
inc
pop
mov
scas
out
insb
lods
push
dec
fwait
arpl
movsl
adc
xchg
inc
dec
pop
cltd
adc
cs
popa
jns
jp
sahf
xor
adc
dec
cwtl
loope
mov
es
int3
call
movsl
lahf
mov
test
in
mov
lea
xor
popa
mov
mov
pop
popf
scas
adcl
int3
jne
insl
in
lahf
or
xor
imul
jecxz
xchg
iret
inc
iret
lret
push
jnp
aaa
mov
out
bnd
ss
outsb
add
sbb
ds
jmp
test
inc
xor
mov
sub
cmp
dec
addb
jl
add
sahf
shl
adc
scas
add
pop
xchg
xor
lock
std
movsl
sub
mov
repnz
loop
mov
bound
push
mov
gs
push
mov
outsl
and
jmp
sbb
cmp
xor
jae
or
pop
inc
rcrb
fwait
in
cli
inc
dec
jg
mov
inc
xchg
xchg
imull
shl
movsb
addr16
add
xor
mov
jbe
mov
mov
out
hlt
repz
sbb
sub
insl
add
mov
sub
adc
dec
cmpsb
fcoms
cltd
mov
pop
adc
imul
xor
sar
push
sub
mov
mov
rclb
or
dec
aas
outsb
aad
mov
cld
test
sti
adc
mov
adc
inc
js
je
xchg
insl
aaa
xchg
sbb
dec
sbb
ficomps
test
mov
pop
stos
sub
mov
adc
mov
dec
addr16
lea
add
jns
mov
cs
mov
bnd
roll
aas
adc
and
sub
js
dec
lret
ss
sbb
mov
mov
loope
mov
push
daa
sti
fwait
test
cs
fdivr
jnp
add
popf
or
xchg
scas
sub
mov
inc
sub
test
xchg
sarl
fmull
dec
mov
sbb
lock
cld
xor
jae
aaa
jnp
cmp
bound
cs
in
push
dec
inc
leave
push
and
add
pop
and
gs
js
xchg
rcrl
xchg
jns
xor
xchg
in
ret
push
bound
adc
dec
and
jp
rcrb
pop
cltd
xchg
dec
and
sbb
adc
fldcw
adc
outsl
gs
cmovs
sub
mov
ret
sbb
mov
fisubl
mov
or
idivb
xchg
inc
andb
and
arpl
pop
adc
push
xchg
sti
fldl
jmp
rcl
mov
adc
shr
addb
fwait
dec
mov
pop
mov
xor
add
out
dec
or
imul
clc
test
leave
sub
mov
sub
incb
mov
and
cs
jae
xor
sbb
xor
mov
xor
sbb
fwait
pop
cmp
fnstenv
out
hlt
fiaddl
xor
sbb
ja
rcl
bound
popf
mov
xor
in
mov
inc
addr16
dec
rcll
lods
mov
push
dec
mov
cmpsl
mov
pop
mov
into
subb
fstpl
mov
sbb
popa
stc
insl
mov
push
mov
mov
xor
cli
enter
ror
xchg
cmp
pop
jg
jbe
test
inc
or
mov
outsb
daa
or
int
pop
insl
cmp
test
arpl
dec
cmpsl
xchg
mov
mov
pop
inc
jns
jp
in
push
sub
mov
inc
inc
inc
inc
cmp
xacquire
imul
add
scas
and
movsb
aas
add
mov
sub
nop
test
jp
incb
mov
ret
and
sbb
jg
fcompl
cmpsl
cmp
pop
push
mov
or
dec
std
cmp
jecxz
out
jno
popf
mov
xor
cmp
inc
pop
les
xchg
push
inc
ret
movsb
cli
adc
push
in
je
or
push
xor
dec
loopne
fisubrl
sbb
adc
jbe
xchg
push
xchg
and
sbb
sbb
cmpsl
int
ja
push
repnz
enter
xor
push
mov
xchg
outsl
xchg
je
sbb
in
leave
gs
mov
mov
loope
pop
call
dec
into
lods
rolb
push
and
fistps
hlt
pop
arpl
testb
mov
push
sbb
dec
imul
popa
cwtl
scas
push
inc
nop
and
jb
int
mov
or
mov
cmp
push
push
add
xor
cs
xlat
bound
stos
mov
cmc
nop
addr16
jbe
rclb
fdivr
inc
xchg
leave
sbb
and
lock
add
call
lret
int
jl
jl
sub
ja
push
pop
push
mov
test
cmp
mov
mov
jne
push
daa
and
pop
and
push
jne
orl
hlt
imul
out
pop
fistpll
sbb
jbe
cmc
xchg
stos
das
pop
mov
loopne
das
push
xchg
cmp
fs
or
cmpsl
adc
mov
jns
lods
push
cmp
hlt
jo
leave
insl
cwtl
push
addr16
iret
insb
insb
pop
das
dec
and
insl
sub
ret
jae
xor
in
nop
xor
add
cltd
mov
push
pop
mov
bound
pop
cld
add
cltd
and
rol
dec
mov
repz
cmp
sbb
jle
mov
adc
ja
nop
push
movsl
movsb
sub
shrb
ficoms
clc
test
sahf
int
mov
xor
orl
jecxz
push
sub
sub
sub
xlat
push
popa
sbb
inc
lahf
jg
test
pop
lret
and
add
rolb
int
xchg
adc
push
jle
push
mov
les
pop
sbb
mov
fwait
inc
cmp
fnstsw
mov
mov
xor
mov
and
mov
add
sahf
inc
cmp
lahf
outsb
cltd
lret
shl
dec
cmpsl
xor
inc
push
aad
lret
inc
or
jne
cwtl
scas
pusha
jne
cmp
test
dec
cmp
lcall
add
push
test
addr16
mov
pop
ret
pop
add
inc
mul
in
fcomps
adc
xor
lahf
jmp
jnp
xchg
inc
sarb
lcall
mov
mul
xchg
xor
sbb
jo,pn
push
mov
sti
hlt
ss
jle
sub
xchg
imul
out
int
jno
mov
xlat
shrl
les
bnd
out
inc
aaa
popa
pop
jo
sub
aas
imul
fdivl
cmpb
pop
mov
insl
lahf
adc
xor
or
mov
pop
fucomp
out
rcrb
sbb
mov
mov
xor
push
mov
cmp
cli
outsl
jge
or
fldenv
ds
rcrl
daa
jecxz
fldt
sbb
and
rcll
add
imul
rorb
push
mov
dec
mov
das
sbb
push
int
pop
sub
clc
sub
xchg
in
out
mov
mov
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
sbbl
cmp
sub
sbb
or
cld
adc
add
xor
and
mov
xchg
insb
lret
pop
lret
dec
mov
sbb
or
cld
lret
in
add
xor
and
mov
subl
mov
pushf
jae
jecxz
in
adc
lret
arpl
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
iret
mov
lock
sahf
sarb
outsl
jg,pn
dec
push
pop
jle
outsb
mov
mov
iret
mov
scas
out
mov
outsl
cs
push
push
pop
jle
outsb
aas
pop
dec
dec
pop
mov
iret
mov
scas
out
mov
ds
jg,pn
sub
pop
push
push
push
adc
pop
imul
scas
mov
mov
push
xor
ja
sbb
cmc
call
push
fnsave
test
push
aad
cmp
enter
xchg
dec
mov
sbbl
dec
inc
mov
in
push
cmp
mov
and
outsb
mov
xchg
inc
and
mov
cmp
mov
call
scas
mov
ds
adc
inc
push
rcrb
xchg
inc
pminub
hlt
dec
mov
inc
scas
in
fistps
shrb
push
mov
lahf
repz
insb
ret
mov
jns
add
test
das
xor
cli
inc
jg
sbb
pop
dec
pop
inc
cmp
pop
sbb
push
loopne
scas
lcall
scas
out
mov
outsl
jg,pn
dec
push
pop
jle
outsb
aas
pop
cmovle
add
sti
cmpsb
jmp
xchg
ret
cmpsl
mov
jg
sub
jge
bound
sbb
dec
sbb
fdivr
into
iret
jmp
mov
clc
into
lahf
pop
pop
sub
pop
cs
xor
dec
cmp
dec
dec
xlat
cmpsb
lret
cmpsl
mov
fimuls
jg,pn
dec
push
pop
jle
outsb
aas
pop
cmovle
mov
iret
mov
scas
out
mov
outsl
jg,pn
dec
push
pop
jle
outsb
aas
pop
cmovle
mov
jge
cwtl
and
inc
add
rcrl
lea
mov
pop
lcall
xlat
fdiv
rcrb
push
jp
inc
push
es
cs
xor
test
or
movsb
add
negl
mov
lret
jmp
call
pop
cmp
sarl
popa
jmp
or
inc
jae
and
call
and
rcr
adc
js
outsb
movsl
cli
xor
jnp
mov
xlat
fcmovbe
insl
cmp
pop
adc
mov
in
xlat
adc
loopne
popf
outsl
js
or
mov
outsl
loope
ret
push
add
ss
leave
les
rcll
mov
sbb
sub
sbb
and
pop
popa
or
push
add
mov
imul
out
hlt
add
fcmovbe
push
stos
test
push
jno
jne
insb
stos
xlat
cmp
iret
sbb
test
xor
cltd
push
xchg
stos
fsubrs
jb
jmp
push
insb
popa
mov
sub
ret
mov
pop
jge
jge
mov
loopne
mov
mov
push
add
mov
push
mov
mov
inc
decl
push
xor
clc
xor
adc
fdivr
pop
imul
das
call
mov
ja
arpl
jmp
sahf
push
lahf
sub
mov
jnp
cmp
fmul
push
outsb
sahf
lods
xchg
xor
test
sbb
iret
lods
movsl
shlb
xchg
xor
sbb
jge
jmp
jno
jne
dec
xor
add
xor
jecxz
test
pop
rcll
inc
stos
mov
pushf
movsl
sbb
cmpsl
je
pop
mov
mov
push
repz
and
mov
lods
dec
adc
or
sub
insb
ja
popf
pop
inc
xor
xor
sahf
push
jg
sbb
push
sahf
xchg
das
clc
ret
push
sub
xor
loop
mov
xor
cs
jl
xchg
pusha
pop
xchg
test
fdivl
xchg
es
sbbb
push
xchg
fnsave
sub
xchg
into
hlt
idivb
bound
and
lods
or
pop
mov
lock
out
arpl
xor
mov
add
cmp
xor
and
aad
sbb
repz
dec
orl
push
sbb
add
sub
dec
push
and
fsubrl
cmp
fwait
out
inc
mov
enter
cwtl
loop
pop
jmp
xor
int
cmp
mov
jg
stc
rcr
daa
repnz
mov
sub
or
fistpl
test
outsb
xor
mov
sub
xchg
divl
or
test
sbb
push
push
ss
inc
stc
dec
aad
and
sbb
and
loopne
jg
es
mov
sbb
adc
cmp
adc
inc
cmpb
aaa
inc
pushf
pop
shll
sbb
shrl
pusha
xor
cmc
outsl
div
mov
push
dec
or
loop
xchg
mov
outsl
imul
lods
and
xor
and
lret
das
or
scas
in
int
adc
call
push
loop
repnz
fiadds
xchg
inc
mov
outsl
stos
js
xchg
adc
out
std
pop
add
adc
repz
lcall
enter
adc
int
adcb
mov
rcpps
xor
lds
cli
je
sbb
jp
in
jg
popa
bound
inc
fstl
into
pop
pop
fucomi
gs
fs
gs
mov
pushf
notl
divb
adc
jl
cwtl
lahf
inc
jle
fisubs
and
data16
dec
add
addr16
xchg
lods
cmp
mov
push
adc
or
jne
push
mov
adc
data16
dec
adc
shll
aam
scas
push
xchg
out
cmp
mov
xor
jge
int
dec
aas
jbe
jo
or
sbb
sub
jmp
mov
push
mov
mov
push
test
sarl
lods
pop
adc
mov
test
xor
out
cmc
mov
mov
jb
cmc
add
sub
inc
lods
mov
shrl
bound
loope
lcall
aaa
inc
lcall
cs
roll
lods
xchg
scas
divl
jne
inc
dec
repnz
mov
lahf
inc
inc
js
jmp
outsb
shrl
adc
test
sbb
push
popa
cmp
call
push
cmpsb
pop
mov
movsl
div
or
inc
push
pusha
ror
sbb
mov
loopne
mov
loop
andb
cmpsb
lock
outsl
in
and
aas
jne
cmc
lods
jnp
leave
jno
mov
nop
mov
sbb
cmp
pop
gs
sbb
push
push
js
pop
pop
mov
and
loop
and
das
mov
addl
inc
sbbb
js
jmp
mov
rolb
cltd
jno
out
out
mov
push
adc
dec
mov
or
sub
push
cli
adc
pop
pop
loope
sub
push
push
scas
rcrb
inc
movsl
hlt
lret
int3
inc
nop
push
data16
xor
js
jns
in
jb
cmp
popf
add
outsl
xchg
in
lcall
fwait
mov
cltd
add
and
mov
rorl
push
or
lds
adc
popl
lret
in
ds
fmul
idiv
mov
in
dec
or
inc
cwtl
xor
push
pop
jmp
arpl
jl
mov
push
jo
jo
mov
pop
shld
mov
loop
negb
addl
adcl
dec
cmp
push
dec
push
add
dec
rcrb
sub
mov
sbb
dec
aas
aad
add
push
mov
add
lods
xor
test
enter
fidivl
popa
ficompl
pop
cmc
cwtl
pop
out
push
ret
out
imul
adc
sbb
mov
negl
cmp
pop
sbb
into
ja
pop
insl
loope
test
sub
xor
mov
add
inc
push
push
aad
inc
push
imulb
pop
or
popa
les
dec
xchg
jb
sbb
scas
xchg
jae
icebp
xor
jne
add
mov
mov
jo
insb
xchg
push
mov
pop
add
and
mov
push
jns
add
test
and
ja
dec
imul
push
xchg
les
push
inc
out
aam
mov
jns
or
mov
mov
sbb
cld
movsl
mov
jge
dec
mov
shlb
cltd
popf
hlt
pop
mov
sbb
aaa
mov
mov
ja
jbe
fcomps
xchg
fnsave
bound
cmp
xchg
imul
rorl
xor
lods
movsl
mov
sti
andb
xchg
lea
mov
ret
xchg
popa
or
lcall
shrl
lret
add
and
sbb
mov
mov
mov
mov
leave
mov
cmp
push
push
loop
jae
mov
fmul
mov
das
hlt
sub
jecxz
daa
pushf
xchg
jecxz
imul
ret
sbb
fistl
push
xchg
shrl
push
mov
mov
mov
jae
ficoms
pop
pop
inc
inc
xchg
mov
pop
popa
sub
jmp
scas
jl
mov
in
inc
xchg
xor
outsb
rcrb
fwait
xor
pop
arpl
jg
xchg
add
stos
scas
jle
cmp
cld
je
and
mov
cmp
dec
adc
into
mov
das
ret
sbb
incl
insb
loope
inc
xchg
or
les
sub
les
out
fstpl
sub
pop
adc
xchg
dec
push
xchg
int
pop
xor
aad
mov
arpl
sti
sbb
ds
daa
mov
ret
inc
pushf
cmc
and
jecxz
filds
mov
shr
icebp
ficomps
mov
jnp
add
addr16
lods
pop
sub
push
xchg
push
and
pop
insb
mov
mov
inc
call
std
ficoml
mov
cmp
mov
test
cmp
xchg
lds
cmpb
xchg
pusha
in
or
cmp
fiadds
sub
add
inc
sbb
push
push
rolb
cli
xor
cli
push
stos
cmp
add
jno
out
mov
add
pop
repnz
out
insb
in
xchg
jle
adc
jl
test
xchg
mov
jae
outsb
dec
leave
sbb
addb
popa
push
pop
sbb
cmpsl
ljmp
jecxz
lea
pop
cmp
mov
pop
xor
rcrb
popa
mov
xchg
mov
iret
add
arpl
adc
fwait
scas
das
or
aaa
jns
iret
divb
mov
cmp
cld
das
sbb
mov
fldcw
jne
fmuls
into
sbb
in
push
test
sub
frstor
loopne
lds
jno
push
push
add
mov
and
stos
jmp
xlat
push
push
pop
test
and
inc
aad
and
add
leave
xorl
in
scas
orl
push
mov
iret
insl
cmc
xor
add
lds
jle
jne
cmp
lea
loop
adc
xchg
pop
or
xchg
xchg
sub
and
cmpsb
sbb
std
xchg
mov
add
xor
adc
xchg
rclb
mov
test
insb
addb
sahf
dec
pop
out
xchg
mov
pop
push
sub
rcl
clc
and
out
cmp
push
sti
mov
movsb
movl
and
jecxz
sarl
test
sub
shll
insl
icebp
ficompl
mov
out
int3
int3
pushf
lods
sti
pop
pop
ss
mov
inc
push
dec
sti
sub
popa
push
and
enter
out
or
lods
rorb
sarb
orl
repz
push
out
addb
cmp
cltd
loope
int3
icebp
and
stos
lcall
aas
xchg
adc
mov
popf
fsts
or
orl
out
hlt
popf
dec
lods
mov
popa
pop
jle
scas
fmull
jae
xor
mov
sahf
daa
pop
or
fwait
mov
mov
and
pop
cmp
pushf
push
dec
mov
pop
push
mov
daa
sahf
mov
pop
sub
data16
std
repz
mov
mov
out
pop
iret
testl
es
jno
iret
pop
mov
lods
aad
xchg
cmp
jne
dec
pop
fidivs
sti
fidivl
repz
push
stos
cltd
iret
jbe
cmpb
nop
out
push
outsb
mov
xor
outsl
xchg
les
addr16
mov
cmp
cmp
lahf
into
stc
lcall
pop
xchg
push
test
dec
fstps
dec
icebp
out
loope
mov
subb
sbb
push
xor
push
fwait
and
mov
xchg
subb
lcall
push
mov
cmc
pusha
repz
fwait
push
les
mov
dec
mov
das
call
mov
out
aas
inc
imul
push
xor
lcall
mov
je
xchg
inc
inc
push
jbe
in
mov
dec
fdivl
dec
mov
push
jb
mov
loope
fisubrl
xchg
xchg
test
lods
adc
out
int3
test
cld
or
jb
dec
or
sbb
imul
mov
iret
cmp
sub
mov
out
adc
xchg
bound
rol
mov
popa
pop
shlb
in
mov
aas
cld
xchg
push
sbb
adc
sub
adc
cmp
mov
jae
jmp
pop
sub
xchg
ljmp
dec
idivb
iret
es
sbb
int3
jge
and
in
dec
leave
sar
mov
lods
movsl
mull
mov
push
inc
test
int3
jecxz
xchg
sbb
sub
mov
cmp
xchg
mov
divb
and
dec
jg
mov
cli
dec
cmp
xchg
fistpll
add
add
es
out
inc
cmpsb
loopne
mov
or
xchg
pop
pop
cli
cmpsb
insb
xor
or
pop
mov
fwait
repnz
insl
push
xchg
pop
inc
ret
arpl
jl
cwtl
inc
cmp
movsl
xchg
scas
mov
inc
stos
les
mov
xchg
and
call
sti
cmp
popf
inc
mov
inc
outsl
enter
pop
mov
popf
adc
adc
je
jno
in
xchg
leave
outsb
aad
inc
popf
xor
repnz
lock
scas
in
push
sub
add
dec
pushf
jle
sub
sub
ljmp
push
sub
dec
popa
sbb
fstpl
pop
pusha
pop
xor
mov
or
lcall
xchg
lahf
cltd
fcmove
sti
pusha
lahf
sarl
sub
xor
inc
push
fidivs
fcos
movl
inc
fistps
ja
pop
lods
lea
insb
mov
daa
mov
push
jne
test
inc
lea
aas
sarb
dec
adc
push
mov
lahf
jo
out
arpl
pop
test
sbb
mov
aam
pop
jle
mov
push
and
jno
in
mov
les
xchg
xor
inc
xor
jmp
test
push
cmpsl
scas
popa
pop
inc
sbb
cmpl
cli
fildl
or
loop
insl
and
outsb
lds
and
stos
adc
js
repnz
inc
lahf
ljmp
add
pop
sbb
nop
mov
and
jl
popf
jle
div
mov
push
cltd
dec
icebp
cmp
into
or
sti
xchg
mov
inc
push
mov
rclb
repz
scas
test
xor
iret
and
mov
shr
imul
je
adc
inc
repz
inc
add
cmp
inc
xchg
jno
popf
test
sub
or
pop
rcr
imul
jmp
inc
xchg
outsb
not
xor
dec
mov
scas
test
test
mov
adc
mov
jecxz
xor
js
lods
lret
mov
mov
int
lock
mov
pushf
jp
or
inc
xchg
mov
xchg
stos
sub
and
insb
jecxz
inc
int
lock
sarb
ficoms
dec
xor
or
jne
lea
aaa
out
cmp
push
aad
cmp
push
xor
adc
stos
jmp
mov
arpl
lret
loopne
fbld
sahf
dec
dec
addr16
push
outsb
int
test
dec
jmp
or
in
pop
imulb
jp
scas
enter
fdivs
mov
cmp
rcll
das
sub
jno
outsl
out
mov
nop
xchg
pushf
mov
aaa
xor
outsl
out
dec
cmp
xor
lods
fiadds
inc
fsubrs
mov
mov
popa
in
sbb
jns
pushf
pop
mov
adc
pop
mov
mov
scas
push
mov
sub
xchg
es
out
lret
inc
sti
aad
loopne
pop
sbb
xor
mov
sbb
mov
test
mov
test
xorps
addb
dec
arpl
add
aam
in
xchg
testb
add
fcmove
out
dec
mov
mov
repnz
push
das
xchg
cmp
sbb
inc
add
inc
mov
push
jp
sub
outsb
rcrl
xchg
dec
sbb
or
push
mov
in
xchg
push
dec
add
les
mov
adc
cmp
rcl
pop
xchg
ljmp
gs
dec
mov
fstps
stc
icebp
scas
stos
or
adcl
insb
ficoms
and
sti
sbb
jne
dec
je
mov
lret
fdivrp
lock
xchg
push
dec
cmpsl
jle
jo
dec
mov
or
mov
mov
cwtl
scas
out
lcall
addl
loop
sbb
hlt
mov
jno
mov
adc
cmp
jp
inc
rol
mov
push
das
dec
cmp
mov
dec
rcr
repz
mov
xchg
rolb
aas
inc
push
mov
ljmp
jl
outsb
int3
inc
cmp
mov
cmp
jns
test
or
jb
mov
int3
lea
aam
dec
popa
adc
movsb
daa
insl
add
std
cltd
ljmp
sub
adc
mov
fcmovnb
loopne
enter
push
pop
xchg
inc
sarl
in
adc
mov
je
pop
leave
testl
pushf
push
loop
or
sbb
xor
pop
dec
and
in
or
imull
ficoml
jns
lock
mov
mov
ret
sti
incl
fdivs
dec
rorb
push
add
loopne
add
jge
xchg
inc
mov
js
gs
inc
rcl
mov
call
dec
sbb
dec
pop
jl
dec
mov
sub
xchg
mov
and
sub
pop
adcb
dec
mov
aaa
int3
mov
mov
jp
das
je
addr16
and
popa
test
imul
pusha
sahf
repnz
pop
bound
and
lcall
cmpsl
mov
pop
shlb
push
push
add
enter
or
in
and
fwait
inc
mov
push
push
ja
and
dec
sub
jb
jns
jne
jo
fistl
sarl
dec
pop
cmpsb
test
jecxz
mov
push
repnz
pop
push
shrb
mov
fistps
fs
jo
sbb
mull
and
test
add
data16
pop
pushf
pop
or
add
mov
shrb
push
xchg
or
pop
sub
push
int
adc
add
jo
push
int
dec
xor
jl
rcrl
cmc
jbe
mov
loope
mov
cld
in
cmpsl
ss
xchg
iret
fcoml
fwait
or
jb
mov
dec
sti
inc
sub
and
imul
adc
mov
adc
imul
arpl
cmp
mov
dec
in
fdivrl
repz
repz
sub
fs
dec
add
or
jne
xchg
in
out
scas
jne
fsubr
enter
adcl
jne
adc
dec
test
and
fldl
lahf
inc
data16
nop
xor
fnsetpm(287
xor
push
lods
fstp
cwtl
cmpl
dec
flds
sbb
sbb
adc
pminsw
jo
nop
mov
subl
js
shrl
jge
inc
mov
into
adc
mov
pop
adc
test
or
test
insl
xor
or
int
dec
dec
test
add
dec
jmp
mov
in
aad
out
jae
cmc
insb
mov
insb
push
jecxz
test
divb
sbb
push
ret
icebp
fmull
cmpsl
pop
cmp
testl
jb
insl
push
inc
sbb
push
pushf
xchg
ljmp
push
push
aam
inc
test
mov
stos
xor
xchg
sti
sbb
xchg
std
lock
push
lret
jnp
stos
xchg
dec
loope
cmp
scas
xchg
outsl
shr
aad
add
lods
ffreep
xchg
shlb
cmp
sbb
sbb
or
cmp
xchg
lds
lcall
cmovbe
fistl
in
pop
test
mov
in
xchg
mov
mov
incl
add
pop
rclb
inc
mov
mov
loope
sbb
mov
inc
aad
in
pop
push
outsl
stos
mov
ss
out
jb
mov
scas
test
dec
mov
xor
in
imull
pop
lock
ds
cmp
mov
movsl
mov
push
xchg
push
in
sahf
dec
mov
jmp
fildll
stc
push
adc
push
enter
cmp
es
xchg
les
stos
mov
jg
lret
shlb
mov
stos
inc
popf
push
adc
aad
loope
sbbb
sub
sti
jnp
iret
sbb
test
push
mov
idivb
dec
xor
push
repz
out
pop
lcall
cmpsl
xchg
pushf
push
imul
inc
pop
in
push
scas
loop
jbe
xor
mov
fstpl
in
push
xcrypt-cbc
cmpsl
adc
ljmp
adc
ljmp
xor
push
popf
andb
xchg
and
xchg
fldenv
ja
in
aaa
and
mov
out
outsb
loope
xor
xchg
out
mov
arpl
push
push
add
in
jne
add
xchg
mov
int3
dec
adc
pop
xchg
scas
mov
jb
test
rcrl
and
js
shlb
dec
inc
pop
adc
test
push
pop
out
jecxz
xor
pushf
leave
jp
cmp
int3
mov
jmp
scas
out
mov
outsl
jg,pn
dec
push
pop
jle
outsb
aas
pop
cmovle
mov
iret
mov
scas
out
mov
outsl
jg,pn
dec
push
pop
jle
outsb
aas
pop
cmovle
mov
dec
mov
scas
out
aas
fimuls
jg,pn
dec
push
pop
jle
outsb
aas
pop
cmovle
mov
iret
mov
scas
out
mov
outsl
cs
dec
push
sub
cmpsl
out
mov
inc
ljmp
dec
lds
add
rcrb
dec
lock
or
fisubl
jo
add
dec
push
push
pop
loopne
lock
sbb
jecxz
repz
ret
jo
add
xor
dec
repz
aam
movl
test
fimull
mov
adc
cld
and
mov
lds
add
cmp
jnp
adc
cmc
nop
add
cmp
mov
das
cmpsb
cmc
mov
push
cmp
mov
push
pop
sub
mov
or
nop
adc
dec
gs
mov
nop
sbb
cli
je
dec
out
daa
inc
mov
mov
icebp
aas
imul
fs
lds
or
push
xor
std
inc
mov
adc
lods
pushf
pop
pop
mov
nop
in
sbb
lds
fstpl
add
jne
shl
andl
sbb
jg
jns
sbb
repz
fisubl
jo
add
xor
jb
inc
loopne
lock
or
xchg
inc
adc
gs
jns
data16
push
shrl
test
test
ret
dec
cmc
push
and
mov
pop
lcall
test
cmp
inc
xchg
insb
imulb
lahf
add
sbb
cs
adc
shrb
loopne
lock
or
fisubl
jo
add
xor
push
pop
loopne
lock
or
lea
lcall
sub
dec
mov
push
xchg
rcrl
push
sbb
inc
sub
fisubl
xchg
les
mov
dec
cmp
shrl
push
mov
dec
lcall
cs
lret
or
cmp
or
inc
lock
push
jecxz
fildl
rorb
sbb
mull
ljmp
mov
ret
divl
sub
cs
or
in
add
inc
add
stc
loopne
out
adc
jg
insl
idivb
add
mov
push
pop
pop
xchg
pop
into
mov
add
es
stos
rcll
push
jp
mov
sub
lret
sub
lret
xacquire
sub
arpl
mov
cmp
push
mov
sbb
int
xchg
into
pushf
movsb
adc
mov
dec
mov
push
cmp
out
dec
aam
daa
push
and
cwtl
cmp
mov
nop
daa
mov
sub
frstor
jb
jnp
mov
xchg
or
jle
test
mov
cs
mov
jbe
aas
inc
jns
test
popf
sub
dec
mov
hlt
mov
pop
ds
dec
out
and
xor
jle
test
inc
add
xor
mov
out
ffreep
mov
cs
das
rorb
jge
push
lock
dec
hlt
and
jge
frstor
add
daa
inc
repz
mov
in
aaa
mov
mov
out
sub
or
mov
sahf
or
cmp
cmpsb
and
je
mov
xchg
ficoms
xor
jp
notl
stos
push
stc
outsl
ja
inc
mov
mov
xor
lahf
push
cwtl
jbe
xchg
rolb
ret
mov
sbb
add
repz
lods
pop
fcoml
mov
and
adc
push
mov
dec
xor
push
ret
jmp
shrl
adc
sub
cmpsl
sub
and
in
mov
cmpsb
bound
jle
loop
fsts
pusha
stc
lods
mov
push
push
shlb
xchg
and
addl
inc
mov
xchg
pop
push
lea
pushf
pusha
xchg
jg
xchg
sbb
sbb
mov
call
jmp
mov
lret
cs
mull
dec
pop
sti
or
dec
jl
dec
or
or
lcall
xor
ficoml
add
repz
pop
notl
sahf
jge
shlb
inc
push
call
ja
mov
mov
mull
pop
mov
sub
roll
push
mov
outsb
aam
rcrl
dec
cwtl
pop
push
pop
sti
adc
jo
inc
fwait
movsl
cmp
dec
xor
inc
pop
add
push
inc
movb
cmp
cld
jmp
and
in
insb
cmp
mov
pop
or
out
mov
jo
pop
lods
and
dec
adc
sub
mov
bound
add
fldt
sahf
loopne
mov
adc
scas
cmp
pop
add
push
std
rclb
in
mov
xchg
and
out
insl
in
in
cltd
add
and
xchg
mov
jnp
sub
mov
or
ret
and
movsb
mov
stc
jl
adc
cld
add
pop
lcall
push
lret
iret
sbb
and
dec
pusha
lods
out
adc
movsl
xchg
ret
xor
out
icebp
mov
js
pop
mov
mov
gs
dec
ds
ljmp
aaa
hlt
in
mov
xchg
mov
daa
sbb
mov
cmp
notb
ss
and
jge
nop
jae
and
lret
int3
iret
xchg
in
lcall
xchg
gs
cmp
pop
sarl
or
mov
pop
lods
mov
sub
cli
lods
adc
xchg
jns
adc
jg
imul
repz
test
sarb
inc
pop
mov
out
imul
mov
cmc
fistl
inc
mov
and
es
mov
push
mov
icebp
mov
sbb
jle
arpl
mov
inc
push
pop
xor
push
and
add
jmp
scas
rorb
inc
repnz
mov
mov
pop
bound
pop
inc
mov
add
dec
sub
jae
sbb
fs
lret
add
imul
or
aas
leave
movsb
and
push
addr16
add
jp
pop
movsb
test
pop
popf
mov
jns
lahf
mov
aad
popa
inc
rorb
andb
and
rorl
adc
stos
and
dec
inc
sub
loopne
and
ds
clc
in
mov
lret
test
push
xchg
push
sbb
ret
cmp
xchg
xchg
in
sahf
icebp
ret
lret
sub
int3
in
out
inc
pop
xchg
pop
push
test
test
xchg
dec
sub
pop
repnz
inc
scas
sub
mov
xchg
cwtl
push
int
mov
adcl
sbb
lret
fmul
or
sbb
push
mov
inc
pop
dec
xchg
dec
aam
ret
cmc
jnp
ss
pop
inc
loopne,pn
mov
inc
sub
cltd
pop
sub
jg
cmp
xorb
mov
fcmovu
or
sarw
popf
stos
mov
sarb
fwait
xor
dec
pop
xlat
das
xor
int3
mov
jle
or
xor
mov
rorb
and
shrb
or
pop
inc
roll
ss
or
cmp
stc
sti
add
dec
clc
mov
add
scas
test
jl
popa
stos
int
icebp
loopne
pop
xchg
xor
push
into
mov
pop
jne
mov
mov
das
sub
lock
iret
fisubs
xor
inc
lock
jb
inc
jnp
jno
scas
leave
and
sub
pop
negb
push
jns
hlt
cmpsl
mov
test
cmp
lret
rorb
mov
mov
je
scas
xchg
xor
mov
fwait
mov
dec
je
push
inc
mov
cli
xor
mov
mov
mov
shrb
xchg
cmp
fildll
pop
jnp
bound
inc
iret
xchg
xor
xor
xchg
fldl
sbb
andl
xchg
dec
cmpsb
add
fdivrs
xchg
nop
push
outsl
xchg
in
or
je
jp
jb
dec
adc
daa
jnp
or
push
push
or
fistl
push
movsl
sub
dec
insl
fwait
sahf
out
xor
sbb
jnp
dec
test
lock
xor
mov
push
gs
fs
dec
inc
sub
lea
movsb
pop
aam
sub
stos
divb
ljmp
mov
sub
push
pop
sub
inc
xor
fistps
mov
movsl
rolb
push
cli
sub
sarl
sub
or
pop
mov
dec
test
mov
adc
add
add
movsl
jae
int
inc
aaa
jmp
aad
mov
jge
cs
ret
or
cmp
sub
cmp
add
cli
adc
mov
in
fucom
test
adc
push
lods
pop
mov
inc
sahf
stos
add
andb
fistpl
cld
jnp
lret
in
pop
xor
stc
dec
faddl
pop
fsubrl
imul
pop
stos
bound
xchg
dec
ljmp
and
outsl
outsl
or
out
loopne
and
roll
fisubl
inc
in
lahf
xor
sub
lahf
clc
adc
fcmovne
pop
repz
fnstenv
push
in
xor
outsl
push
cmp
ficomps
add
adc
int
or
mov
push
inc
scas
ja
loop
push
mov
aas
dec
xchg
or
lret
clc
clc
movsb
and
sub
imul
aad
xlat
xor
inc
mov
or
ficomps
shlb
sub
lods
and
and
jb
adc
arpl
mov
mov
xor
xchg
add
fmull
mov
test
pop
adc
dec
mov
jmp
ret
jmp
loope
xchg
xor
dec
lods
sbb
lea
ret
cmpsb
leave
mov
push
or
icebp
add
xchg
fldpi
pop
dec
adc
push
jg
push
je
aam
add
andl
shrb
test
insb
dec
out
sti
mov
lcall
add
push
sarl
xor
mov
mov
add
cmc
je
xor
sub
mov
or
pop
outsl
mov
cmp
mov
es
inc
mov
push
ja
sub
aas
pushl
xchg
inc
pop
pop
xchg
js
out
xor
and
and
insb
jnp
xor
mov
sub
dec
inc
fisubrl
push
xchg
fwait
adc
adc
sti
pushf
xor
fiaddl
push
fsubrp
dec
jb
xor
mov
sub
push
divl
aas
inc
pop
and
xor
add
subl
out
push
push
popa
inc
mov
pusha
nop
out
aas
ja
hlt
inc
push
fdiv
mov
bound
fldcw
xor
lea
aam
pop
push
xchg
lret
mov
outsb
mov
xlat
push
iret
xchg
loop
xchg
dec
mov
mov
test
mov
jae
cli
inc
rcll
clc
loope
iret
stc
faddl
cmp
jge
dec
xchg
jb
andb
cltd
cli
iret
cmp
sbbb
push
dec
sbb
inc
mov
sbb
adc
jle
sub
xor
ljmp
into
sbb
addr16
ljmp
nop
xchg
cld
rcrl
sbb
jp
outsl
and
and
add
adc
jb
aad
mov
es
das
decl
pushl
mov
jno
or
in
aam
mov
jne
mull
lock
cmp
popf
jge
push
insl
jl
out
pusha
lds
xchg
clc
aad
imul
sbbl
sbb
cmpsb
stc
xor
jg
nop
add
jmp
and
iret
fld
aas
addr16
mov
and
sub
popf
aam
add
test
push
push
fsubl
push
lods
rclb
inc
pop
mov
and
jbe
lret
dec
push
jl
mov
jg
fcoml
rorb
jbe
lret
in
lret
repz
and
nop
je
add
fsts
or
scas
stos
cltd
ss
sub
pop
or
jnp
and
repz
inc
sbb
add
adc
lds
negl
mov
adc
fsubr
test
scas
fnstcw
aas
sub
xlat
jne
js
ss
and
cld
inc
dec
jnp
lahf
in
andl
mov
or
push
lds
ss
icebp
lcall
das
cmp
fsub
cwtl
pop
and
mov
mov
pop
scas
sbb
xor
aas
sub
int
stos
lcall
imul
shll
inc
mov
sti
mov
cmpsb
popf
std
imul
xor
inc
jo
cmpb
repnz
mov
pop
jnp
xchg
xor
xchg
data16
sub
push
imul
pop
pop
pop
xor
jne
aas
fwait
cmp
in
mov
jl
xchg
jmp
lea
or
imul
sbbb
out
inc
inc
insb
sub
inc
cs
inc
add
std
lret
push
cltd
mov
nop
int
add
imul
inc
js
popl
xchg
test
cmp
pushf
aad
and
add
lahf
insb
mov
and
stc
xor
fiadds
push
std
nop
dec
mov
test
push
ljmp
cmp
cmp
sub
mov
int
dec
pushf
or
data16
pop
jno
pop
mov
sti
pop
movsl
imul
cli
jecxz
shll
inc
gs
outsb
push
hlt
push
shl
jle
mov
mov
std
outsb
sbb
xor
leave
push
push
mov
sub
mov
lods
mov
lret
jb
pop
mov
popa
push
mov
test
mov
mov
shl
xor
unpckhps
mov
ficoms
mov
in
jecxz
xchg
and
lret
movsl
rcrl
sub
jne
mov
push
lock
jb
sbb
fnsave
adc
hlt
pop
adc
mov
cwtl
call
push
std
push
mov
cmc
shl
jo
mov
loop
mov
xor
test
lahf
data16
inc
xor
add
pop
pushf
into
scas
xor
loopne
add
addb
push
out
adc
dec
paddusb
test
mov
push
in
mov
cli
adc
push
test
or
rcrl
test
jle
mov
sub
loopne
test
fs
call
add
jae
sti
pop
add
out
stc
jmp
fwait
xchg
or
scas
push
test
mov
or
mov
inc
push
sub
lahf
adc
mov
push
cmpsl
push
add
negb
cld
imul
rep
in
cmp
clc
ja
lret
pop
cmc
lcall
addr16
mov
mov
add
mov
push
outsl
es
mov
decb
lcall
subb
xchg
fimull
mov
sub
cmp
sahf
mov
xor
sub
dec
daa
out
mov
das
into
sbb
pmulhuw
into
xor
jns
jnp
and
negb
push
insl
inc
out
cmp
int3
lea
dec
jb
jmp
rcrb
push
outsl
enter
ret
fxch
test
mov
mov
lock
jae
adc
int3
and
mov
pop
cmp
push
outsl
or
sub
testb
xor
and
imul
adc
stos
adc
in
ficoms
cmp
fisubs
in
repz
xchg
in
lods
aas
scas
in
mov
popf
mov
les
xchg
xor
xchg
fxch
ss
xlat
pop
pop
xchg
adc
das
mov
push
mov
jmp
cs
fisttpll
dec
cwtl
clc
pop
loopne
dec
push
pop
mov
fdivs
mov
lcall
mov
loopne
cli
mov
sti
sub
pop
mov
mov
outsl
and
pop
jl
dec
shrl
jle
add
push
lds
mov
hlt
sti
mov
out
outsl
movsl
repnz
in
xor
and
push
jmp
mov
mov
push
sub
insb
pop
sbb
lret
pusha
out
sbb
decl
ret
mov
adc
jl
mov
xchg
jmp
mov
js
fistl
mov
sub
cltd
ret
cmp
aas
mov
shll
adc
je
in
cs
outsb
push
jo
xchg
cmc
idivl
add
lcall
cwtl
inc
jae
xchg
lret
inc
test
mov
clc
shr
inc
dec
jecxz
xor
insb
jle
inc
sbb
adc
out
sahf
mov
pop
inc
lret
hlt
daa
aaa
or
lea
dec
scas
sbb
pusha
cmpsl
out
iret
loopne
scas
cld
cmpsb
and
jmp
cmpsb
movsb
mov
movsb
enter
pop
arpl
pop
insl
aaa
insl
push
pop
pop
shlb
cmpsl
push
mov
movsl
adc
fildll
mov
cmc
fimull
out
xchg
push
out
inc
mov
out
gs
jmp
mov
int
mov
jnp
pop
fwait
mov
sbb
fsubs
xor
aad
pop
imul
sbb
dec
inc
fsubrs
jmp
in
clc
dec
cmpsl
dec
aam
mov
in
sbb
push
cs
ret
xchg
sbb
dec
iret
adc
xor
cmpsb
sub
inc
mov
mulb
and
sub
outsb
mov
fldl
popf
jno
data16
mov
sahf
inc
mov
push
aas
mov
jl
mov
and
sub
lock
icebp
fisubrs
gs
fisubl
mov
sub
jbe
push
and
jne
push
lea
fildll
lahf
mov
in
fwait
ja
push
and
dec
mov
pcmpeqb
push
lahf
lcall
pop
sarl
push
fmuls
lret
cli
faddl
xor
cpuid
inc
addb
outsb
in
xchg
fists
jae
je
cmp
imul
imul
pushl
insl
outsb
jo
jmp
push
adc
out
or
pop
adc
push
mov
jae
jl
dec
jne
dec
test
cmpsl
push
dec
sbb
add
sub
pop
or
stos
xchg
shl
cltd
mov
xchg
fwait
pop
xchg
cmp
and
mov
lcall
or
std
jg
xor
insb
js
stos
or
pop
out
pop
clc
jno
push
xchg
sahf
mov
cmpb
push
sub
dec
or
fsubrs
or
in
cmp
xchg
mov
imulb
xchg
mov
push
mov
clc
xchg
or
mov
pop
mov
imul
imul
aam
cmc
mov
and
push
fldlg2
imul
enter
imul
mov
cmp
and
imul
push
stos
sarl
idivl
and
mov
mov
inc
stos
and
out
push
in
and
int
cwtl
outsb
xchg
xchg
jecxz
and
mov
sbb
pop
into
xor
int
nop
and
shll
inc
aaa
cmp
push
hlt
ret
xchg
jo
or
leave
push
and
jo
jb
test
jl
xchg
mov
fstp
mov
or
xorb
inc
mov
cmp
jecxz
arpl
sahf
paddusb
xchg
stos
xor
popa
mov
jge
mov
repz
test
test
jcxz
rol
pop
push
and
lcall
sub
dec
jnp
adc
loopne
ret
xor
xchg
sbb
mov
mov
pop
rorb
sub
inc
in
ja
inc
sbb
pop
mov
push
mov
movsb
and
pop
xlat
sub
adc
xchg
je
and
push
mov
or
jl
inc
ja
mov
jle
insl
xchg
pusha
adc
adc
xorb
insb
push
fmull
inc
add
fdiv
outsb
testb
aaa
gs
mov
les
loop
dec
pextrw
das
sub
ficoms
fwait
outsl
imul
rcrl
fwait
mov
clc
cmc
adc
call
dec
cmp
cmp
push
out
xor
add
mov
das
xchg
scas
mov
jns
andl
xor
xor
xchg
sbb
clc
mov
lods
sub
shr
lea
mov
in
pop
daa
xchg
icebp
jno
or
mov
cli
sbb
jge
insb
sti
or
aam
shll
jle
add
push
push
mov
imul
jecxz
pop
inc
xor
xchg
outsb
call
dec
mov
push
jae
out
mov
sbb
xchg
aaa
jno
xchg
push
pop
fnstsw
sub
iret
pop
mov
insl
das
push
mov
lds
fs
outsl
mov
pop
add
or
into
xchg
push
sub
shr
mov
xchg
inc
push
jge
add
add
ret
and
jns
mov
mov
ja
push
fs
fstpt
test
push
pop
lret
lret
jo
ja
stc
fs
push
mov
fidivs
outsl
pop
movsb
sahf
mov
add
push
je
sub
add
or
rolb
pop
sub
mov
and
scas
shll
xor
cwtl
cmp
adc
mov
or
sbb
ret
sbb
out
inc
orl
cwtl
pop
cmc
push
cs
sar
mov
add
popa
movsb
int3
out
popa
cmc
jb
leave
psrad
imul
dec
cs
xlat
into
xor
js
jle
sub
xchg
insb
pmulhw
or
imul
adc
insl
and
lea
bound
lds
cli
mov
mov
push
in
mov
mov
aas
sub
sbb
movsb
push
hlt
pop
wrmsr
jae
sar
bound
mov
cmp
scas
sarl
aad
mov
popf
xor
lahf
mov
idivb
sarb
jns
dec
xlat
push
outsl
inc
inc
in
and
outsl
cmp
lods
in
pop
out
jg
lret
mov
push
xlat
in
pop
jbe
cmpl
xor
sub
jp
sbb
jnp
push
cltd
mov
cmp
stc
mov
mov
lret
in
sbb
adc
or
fdivrs
pop
cmpsb
sbb
xor
fisubs
jmp
lods
cwtl
and
jle
leave
sbb
jl
dec
rep
add
mov
mov
adcb
jmpw
lret
sub
dec
call
ret
push
jmp
xchg
addr16
gs
addl
pop
inc
dec
xor
andl
push
xchg
inc
negl
stos
cmpsl
push
fdivs
rolb
cmp
mov
jbe
nop
push
jge
mov
popa
stc
stos
movsl
mov
inc
dec
jnp
xor
xchg
aad
push
lea
xchg
xchg
aad
cbtw
and
lcall
sbb
ja
lds
insb
adcb
pushf
adc
gs
adc
adc
xchg
inc
fsubrl
gs
or
mov
jbe
sbb
shlb
jo
add
xor
push
pop
loopne
lock
or
fisubl
jo
add
xor
push
pop
loopne
lock
or
fisubl
jo
add
xor
push
pop
loopne
lock
or
jo
add
xor
loopne
xchg
mov
dec
ja
fstl
inc
std
cli
fsts
jns
or
pop
xlat
insl
jge
or
xchg
push
in
inc
std
aaa
lea
popf
pop
lods
pop
mov
xlat
insl
jge
or
xchg
push
in
inc
std
aaa
lea
popf
pop
lods
pop
mov
mov
pop
enter
jmp
test
decb
pop
sbb
lcall
push
sub
pop
insl
push
sub
or
xor
or
mov
jmp
lock
dec
int
xchg
shrb
or
xor
pushf
stos
pop
cmp
lea
mov
repnz
fdivrl
mov
lea
jle
dec
sub
out
adc
mov
mov
and
lea
bound
mov
push
xchg
mov
pop
sub
insl
mov
and
cmc
inc
aad
lcall
dec
sub
jge
repnz
sarb
pop
cmp
push
in
inc
std
aaa
lea
popf
pop
lods
pop
mov
xlat
insl
jge
or
xchg
mov
cs
jae
add
xor
add
fs
scas
rcrl
add
aaa
call
push
mov
aad
adc
pop
repnz
adc
sub
pop
lods
pop
mov
xlat
insl
jge
or
xchg
push
in
inc
std
aaa
lea
popf
pop
lods
pop
mov
xlat
insl
jge
or
xchg
lret
sub
dec
and
ret
adcb
ss
cmp
and
dec
inc
fmull
pop
nop
fsubrp
int
and
psraw
xor
neg
icebp
rcrl
sub
xlat
pop
and
sbb
shll
out
je
std
popa
pop
xor
inc
push
push
imul
dec
mov
into
hlt
iret
or
inc
idivb
push
pusha
rorb
fsubl
mov
inc
daa
cmpsb
add
out
in
pop
xchg
mov
scas
ds
jo
pop
sbb
scas
xchg
inc
dec
jmp
and
test
sbb
test
and
in
push
enter
cmpsl
pop
pop
add
jl
setae
popf
xchg
shrl
mov
fistpl
mov
pop
xchg
fsts
jo
cmp
inc
lds
push
mov
pusha
leave
xchg
add
cmp
cmove
or
add
jmp
inc
inc
cwtl
dec
push
xchg
dec
lds
jns
jg
test
xchg
push
sbb
iret
cmp
push
out
xchg
les
test
xchg
inc
pop
stc
dec
enter
out
and
cmpsb
push
pushf
cmp
inc
pop
lds
jmp
mov
xlat
mov
rclb
dec
mov
push
jmp
sbb
loope
bound
popa
sub
dec
mov
add
jbe
out
inc
sub
ret
pushf
popf
dec
nop
sbb
pop
sub
popf
popf
adc
aad
sbb
xchg
mulb
xor
shll
or
add
pushf
sub
cmp
mov
adc
test
dec
test
jae
sbb
mov
data16
pop
punpckhbw
cmpb
xchg
xchg
xor
mov
orb
jecxz
inc
fcmovu
je
subl
add
fmull
push
stc
and
dec
hlt
adc
xlat
jp
xor
pop
or
add
jmp
bound
push
inc
xchg
aad
dec
inc
rclb
leave
xchg
add
push
repz
inc
stc
out
daa
or
mov
jle
pop
mov
xor
in
in
xchg
fwait
shlb
pop
xor
sahf
into
js
mov
in
push
std
push
aaa
arpl
pusha
lods
fidivrl
hlt
push
insb
inc
sti
jge
daa
stos
sbb
arpl
xchg
jg
mov
inc
iret
aaa
sbb
rcl
aam
lea
or
cmpsb
push
xlat
push
test
cmpsl
test
clc
repnz
mov
xchg
cs
mov
sub
push
popa
and
xor
or
or
jbe
mov
or
test
imul
sub
decl
sbb
push
cwtl
lds
mov
stc
sti
stos
movsl
andb
dec
js
fs
xlat
push
popa
dec
movsl
in
jecxz
ja
addr16
outsl
bound
loop
sub
leave
bound
pop
and
mov
mov
add
xor
stos
scas
or
xor
popf
mov
repz
bound
push
daa
leave
mov
add
mov
mov
ret
mov
jmp
filds
xor
xor
dec
jb
sub
lcall
lods
movsb
andl
sub
mov
aam
fucomi
sahf
xchg
xchg
fs
cwtl
outsb
jno
lock
mov
adc
sbb
stc
int3
cmp
adc
sub
sub
popl
pop
dec
insl
or
sbb
xchg
hlt
cmp
popa
mov
mov
xorl
mov
popa
shll
fadds
xor
stos
adcb
arpl
ja
movsb
out
loopne
fisubl
subl
jns
orb
push
ds
in
lahf
jle
je
inc
ret
jmp
mov
mov
inc
pop
daa
movsb
movsl
arpl
xchg
lea
adcl
lret
lahf
sub
shl
fbstp
or
shrb
dec
jl
xor
iret
les
imul
sbb
shrl
mov
out
jns
jl
xlat
pop
dec
xchg
mov
std
fs
and
mov
dec
sar
xchg
cmp
and
lods
fldcw
das
pop
int3
call
ret
pop
clc
imul
leave
push
cld
pop
mov
in
lock
enter
push
in
in
lahf
pop
jne
int
ds
icebp
call
outsl
jl
sub
inc
adc
lret
cs
enter
subb
dec
dec
push
jg
lock
rorl
ds
lea
sub
mov
add
push
mov
pop
and
sbb
add
das
mov
bound
sar
and
test
pop
out
push
xor
cli
fs
push
push
and
les
adc
mov
pusha
or
mov
clc
lods
cltd
pop
pushf
cmp
push
sarl
iret
cli
int3
pop
mov
lret
inc
test
out
add
jno
push
sti
jno
mov
shrl
mov
push
sub
ret
pop
or
outsb
jmp
jle
push
cmp
mov
dec
int
push
jmp
jl
dec
in
sub
xchg
cli
inc
add
jl
loop
imul
sub
jge
fisubl
iret
sbb
inc
imulb
mov
pmaxub
dec
dec
repnz
mov
jecxz
mov
cmp
sahf
jecxz
add
mov
lods
fdivs
jo
ljmp
cmp
imul
out
push
inc
mov
mov
fcoms
cld
or
mov
pop
ljmp
sbb
lods
loopne
or
or
clc
jne
divb
and
adc
jb
and
rcl
xchg
mov
enter
mov
cmpsb
add
fldt
std
push
cmp
sbb
cmpsl
std
rcll
mov
in
test
dec
imul
in
insb
sub
outsl
ja
xor
fs
pop
dec
inc
add
ja
popa
fmuls
movsb
sub
jo
insb
int3
lahf
mov
in
ret
rolb
lods
mov
test
cwtl
dec
mov
test
daa
push
outsb
sbb
xchg
push
mov
dec
jmp
lret
rcrb
pop
cmpsb
add
xor
call
outsb
pop
insb
lods
hlt
imul
jns
in
pop
sbb
xchg
popa
cmpsl
cmp
mov
outsl
lods
fldt
jns
push
in
pop
or
mull
and
xchg
lahf
xchg
subb
call
jbe
push
or
adc
sbb
imul
out
imul
lds
adc
movsb
movl
adc
lret
inc
test
sbb
push
out
rcrl
cmp
in
jne
out
lods
xchg
popf
mov
and
push
jo
jmp
enter
jo
inc
sbb
jae
stos
sbb
xchg
loopne
out
shlb
push
jo
mov
mov
push
push
lahf
jg
in
cmp
fsubrs
mov
lcall
iret
adc
ret
adc
fs
xchg
or
sbb
daa
pop
sub
addl
push
push
jmp
call
jne
cmpsl
cmc
fmuls
jmp
or
sub
mov
sub
mov
push
cmc
and
sbb
lds
gs
and
stos
inc
and
mov
jae
jmp
jne
dec
mov
incb
dec
jne
es
sbb
clc
divl
dec
add
sub
pop
imulb
add
sbb
add
jp
pop
adc
mov
inc
insb
cmpl
shrb
lods
fdivrs
fcmovnu
mov
lret
mov
imul
rep
inc
inc
fs
les
jae
pop
xchg
js
adc
mov
and
jae
cs
lret
or
lods
mov
xor
cld
je
or
fildll
and
jge
insl
or
mov
pop
mov
pop
out
pop
rclb
xor
movsl
dec
repnz
stos
pop
in
add
lea
test
cmpsl
or
push
cltd
or
faddl
arpl
fwait
imul
daa
mov
inc
vmovd
xor
in
inc
mov
lret
cmp
push
loop
push
arpl
aaa
mov
pop
xor
push
xlat
sbb
cmp
int
pop
out
pop
push
mov
add
push
hlt
push
push
jmp
sub
xor
mov
sub
orb
repz
pop
sbb
lea
push
clc
sbb
jmp
fdivr
insb
fisubrs
adc
cltd
jl
insl
push
sub
stos
cs
pop
mov
imul
dec
xchg
inc
ficomps
out
scas
ficomps
inc
rcll
cmpsl
xchg
xor
adc
in
ficoms
repz
push
cmp
gs
cltd
or
insb
xor
or
movsb
sub
rcl
orb
mov
push
push
dec
xchg
into
mov
jmp
mov
xchg
mov
sbb
pop
mov
mov
aam
in
or
sbb
divb
cli
or
push
pop
int
jo
in
add
xlat
and
pop
dec
in
xor
sbb
sub
bound
dec
sub
cmp
xor
movsb
mov
sti
ds
dec
xor
ljmp
stc
lret
mov
repnz
stos
hlt
in
das
xor
push
loop
inc
sub
outsl
inc
in
push
ror
data16
sbb
lds
imul
loopne
jnp
repz
mov
jo
xchg
jg
int
imul
out
push
imul
or
push
jno
arpl
jecxz
inc
mov
rorb
jg
and
fmuls
dec
int
jbe
sti
es
xchg
cmc
hlt
mov
pop
lea
sbb
aaa
ss
aas
popa
pop
divl
scas
cmpsl
inc
test
scas
ds
mov
popa
int
rclb
fwait
rcll
stos
iret
adc
outsl
mov
fnstenv
push
testb
imul
fs
and
cmc
push
xchg
hlt
addr16
lock
inc
push
stos
enter
test
insb
in
xchg
adc
je
cs
jp
sbb
ret
jp
call
sarb
mov
pusha
fs
xor
cwtl
push
nop
xchg
push
iret
push
and
jbe
lods
shl
addr16
aas
shll
sub
imul
aad
cli
adc
fldenv
bound
std
aas
pop
dec
mov
lret
dec
sub
push
sub
mov
test
ret
dec
jno
dec
jecxz
movsb
iret
inc
dec
test
dec
push
add
cmpsb
loopne
bound
push
scas
push
and
rclb
add
ds
fptan
adc
xor
inc
leave
orb
fld
pop
push
lock
test
imul
pop
inc
push
pop
into
sti
in
cwtl
xchg
fldenv
popa
cmp
daa
loopne
bndldx
mov
mov
scas
std
lods
movsb
iret
rcll
cmpsl
add
cmp
pop
movsl
xchg
jb
mov
pushf
add
stos
mov
jp
sub
xor
pop
or
aad
dec
sub
shll
jb
jae
mov
icebp
sub
out
cmp
dec
adc
nop
mov
pop
loopne
insl
add
adc
mov
sub
push
push
or
test
xor
imul
imul
lcall
addr16
in
mov
push
test
stos
pushf
lock
and
dec
sub
in
divb
imul
mov
decl
mov
xchg
push
aas
adc
jecxz
rcl
push
add
jle
xchg
icebp
mov
cs
pop
gs
aam
int3
icebp
dec
mov
cmp
and
pop
bound
out
fidivs
xchg
xchg
xor
jnp
fsubl
mov
jmp
mov
aas
idivl
aam
lahf
pop
sub
dec
dec
or
dec
jle
je
dec
add
push
loope
repz
imul
mov
jb
lret
mov
nop
xchg
mov
aam
adc
pop
mov
xchg
cltd
xor
and
jle
loopne
jg
sub
xchg
xor
pop
leave
lock
mov
push
aad
out
pop
mov
popa
push
mov
mov
adc
mov
cmp
in
es
subl
cmp
leave
ret
mov
pop
add
cmc
mov
test
stos
into
popa
push
xchg
lret
jno
inc
cmc
push
inc
adc
xchg
ss
rdmsr
int
push
repz
vunpcklpd
inc
mov
out
sub
push
pop
push
pop
roll
fdivrl
jae
clc
jg
xchg
push
loop
xlat
ja
jg
add
inc
xchg
mov
cmp
sti
mov
cltd
jbe
push
roll
jo
sub
xor
lea
jecxz,pt
xchg
mov
cmpl
shr
popf
cmp
pop
clc
jns
jns
cwtl
decl
cmp
cmpsl
clc
das
sti
mov
jl
repnz
clc
push
loopne
ret
push
sbb
aad
xlat
xchg
mov
inc
add
jmp
inc
lods
ret
push
data16
jg
ss
pusha
sub
daa
loop
jg
pop
xchg
test
mov
fadd
push
aam
aad
aaa
and
inc
adc
mov
pop
adc
push
jmp
repz
gs
adc
jae
scas
test
xor
test
and
jg
jnp
or
int3
mov
movsl
daa
js
ss
xchg
mov
inc
lock
mov
stos
cmpsb
mov
or
mov
mov
imul
sarl
and
or
test
or
adc
ror
jae
cmp
sbb
pusha
cltd
adc
and
inc
or
aas
test
cmp
hlt
leave
repz
popf
mov
push
and
pop
mov
xchg
cmpb
and
xchg
jns
arpl
cld
inc
xchg
scas
rep
mov
pop
jg
out
add
insb
push
mov
xor
sti
xchg
jl
push
in
push
mov
adc
sub
cmp
push
xor
inc
push
addb
repz
jp
test
push
and
imul
dec
cmp
mov
out
push
inc
add
cmc
std
movsl
mulb
lret
aas
push
cmp
mov
pusha
popf
sub
lcall
xchg
sub
cmp
push
push
pop
loop
mov
cmpsb
adc
cmpsl
mov
jns
loop
sarl
scas
cli
push
xchg
and
push
faddl
movl
cltd
mov
or
or
mov
vpmullw
or
jbe
movsb
das
jmp
jmp
mov
shrl
xchg
into
mov
push
xchg
mov
add
dec
dec
push
ficompl
jae
xchg
fwait
mov
push
xlat
rcrl
sbb
into
xor
nop
push
loopne
test
stos
lret
mov
clc
or
insb
mov
popa
xor
mov
pop
cld
mov
jno
jns
mov
subl
inc
xchg
jno
jmp
pusha
shll
jecxz
mov
add
xor
fimuls
jb
pop
or
adc
sub
jp
movsb
popf
hlt
push
mov
adc
inc
in
jns
sub
pusha
iret
lcall
cmc
icebp
call
cmp
cmp
stc
jecxz
inc
sbb
in
shrl
mov
push
inc
jo
imul
adc
sub
stos
jmp
lcall
sbb
shr
scas
jecxz
push
mov
loope
sub
pop
lods
arpl
cmp
ja
xchg
xor
push
lea
imul
roll
ror
xchg
cmp
popa
xchg
add
in
push
divb
dec
sbb
test
sbb
ljmp
xchg
jae
mov
in
sub
out
stc
or
inc
loopne
icebp
fisttps
inc
mov
sub
xchg
ss
mov
or
int
sub
lds
in
cs
push
xchg
ja
ficoml
js
jp
gs
in
xor
in
mov
out
out
push
mov
add
fldt
lods
adc
or
cmp
dec
push
or
xchg
mulb
jecxz
out
andl
in
mov
mov
jge
gs
icebp
repnz
mull
adc
inc
pop
xor
xchg
lahf
das
mov
jne
movl
adc
xchg
jae
cmp
int3
or
dec
mov
into
pushf
test
andl
movsl
push
fiadds
dec
sub
jb
pop
int3
mov
lahf
jg
inc
adc
dec
cli
adc
cmc
int
jmp
popf
inc
mov
mov
jecxz
lret
gs
rcrl
std
push
xchg
movsb
dec
bound
sbbb
add
sub
lcall
test
dec
stc
push
scas
xchg
dec
inc
addr16
loopne
imul
aad
repnz
and
lock
or
and
enter
mov
ret
sbbb
pop
inc
push
xlat
das
inc
mov
push
out
iret
pop
fld
lds
cmpsb
dec
inc
xchg
hlt
add
out
jg
ret
mov
pop
add
mov
test
ljmp
loope
jb
sbb
jp
cwtl
fs
inc
shlb
sub
fnstcw
dec
and
jnp
inc
in
inc
adc
jp
mov
dec
pop
ret
jle
push
orl
xlat
push
jge
dec
xlat
lds
fwait
test
adc
jnp
xchg
xchg
or
ljmp
stos
ljmp
fsubr
lods
and
xor
mull
sbb
test
cmp
pushf
scas
scas
xlat
outsb
xchg
cmpsl
cld
inc
sbb
mov
pop
lds
pop
xchg
imul
je
jmp
imul
adc
mov
push
andl
jmp
lds
xor
jg
inc
pop
decl
insl
out
push
gs
sarb
pop
mov
push
es
push
inc
push
push
pop
ljmp
ret
push
jo
outsl
adc
pop
testl
push
pop
cmp
add
fwait
shlb
in
icebp
pop
ljmp
jg
inc
jne
lret
xor
int3
sarl
imul
push
inc
loopne
xchg
xorb
andb
outsl
cmp
pop
pop
jae
cmc
push
inc
std
stos
push
js
movsb
icebp
aas
in
out
in
push
jmp
into
outsb
rcrb
out
mov
pop
movsb
outsb
xor
addl
fcompl
pop
adc
lea
or
inc
pop
cmp
add
push
ret
xorb
inc
xor
jne
out
and
sub
pop
mov
out
xor
mov
xor
gs
lods
sbb
insl
jge
out
or
sbb
ficomps
mov
insl
pop
mov
jo
imul
jae
mov
je
xchg
push
cmp
out
mov
cmpsl
sbb
mov
test
cs
cltd
and
stos
das
inc
mov
test
jmp
add
cld
sbb
lock
jns
test
or
lcall
loope
sbb
sbb
aad
inc
loopne,pt
push
sub
push
loopne
dec
mov
stos
sbbl
cmp
lahf
cmp
loopne
adc
mov
xchg
stc
cmpsb
add
gs
xchg
dec
add
fcmove
sub
push
pop
or
push
cmpsl
cmp
adc
sbb
xor
cmp
xchg
mov
mul
mov
push
and
mov
dec
ja
jae
in
push
or
imul
xchg
push
push
lcall
pop
sti
ror
shl
dec
or
mov
dec
ret
fcmove
push
jge
mov
push
movd
cmp
loopne
ljmp
aam
adc
fidivl
fisttpll
int
mov
aaa
and
rclb
and
outsb
inc
mov
lret
loop
clc
mov
sbb
ljmp
cli
or
push
in
dec
movsb
mov
and
mov
outsb
out
in
mov
mov
mov
adc
fbld
jbe,pn
jl
movsl
mulb
mov
sbb
mov
cmpsb
adcb
sub
push
xor
mov
out
dec
xor
dec
mov
xor
pop
test
inc
pop
pop
mov
cs
push
aas
xor
pop
dec
clc
mov
js
jbe
mov
icebp
xchg
push
shlb
xchg
or
mov
sub
sub
mov
mov
fisubrs
cmp
inc
js
push
ficoms
push
xchg
jmp
imul
mov
hlt
pop
fadds
sub
hlt
popa
je
add
stc
call
test
divb
int3
outsb
cmp
jmp
pop
popa
mov
jns
mov
and
out
inc
mov
push
inc
icebp
jle
add
dec
and
or
call
add
adc
cmpsl
out
nop
push
xchg
mov
fwait
sub
xlat
test
inc
pop
insb
sti
shr
pop
pop
aad
mov
cltd
andl
xchg
xchg
out
jp
lahf
shlb
and
adc
and
adc
or
pop
mov
add
fstl
inc
std
aaa
lea
popf
pop
lods
pop
mov
xlat
insl
jge
or
xchg
push
in
inc
std
aaa
lea
popf
pop
lods
pop
mov
xlat
insl
jge
or
xchg
xlat
in
inc
cld
mov
daa
popf
pop
lods
xchg
xlat
insl
jge
or
sbb
ja
fstl
inc
stc
aaa
lea
sbb
divl
or
test
loop
shl
ret
ljmp
sbb
or
pop
fadds
cli
adc
mov
das
cld
aas
in
bswap
pop
int3
out
cmp
sub
sbb
or
jl
insb
pop
lahf
dec
outsl
mov
pop
mov
lahf
ds
fcompl
int3
out
and
fists
popl
outsl
pop
pop
xchg
aas
jmp
dec
orb
fwait
cmp
inc
iret
push
call
lea
cwtl
pop
fisubl
and
add
insl
xor
xchg
jae
ja
sarl
inc
mov
mov
mov
adc
xchg
stos
movsl
inc
xchg
push
inc
sub
mov
pop
and
or
in
mov
mov
pop
int3
out
insb
fsubrs
sbb
cmp
pop
inc
lods
add
mov
in
repnz
scas
jl
jae
scas
aas
adc
push
xchg
cmpsb
mov
jecxz
in
push
pop
lahf
nop
jae
adc
outsb
xor
ret
mov
mov
xor
xor
int3
cmc
sbb
movl
cmp
lret
scas
insb
cltd
enter
sub
cmp
or
push
scas
jl
insb
popl
push
outsl
movsb
jg
dec
test
das
in
sti
paddusb
test
pop
pushf
sub
sbb
rolb
loopne
sbb
pop
aad
aam
leave
sbb
test
fsubrl
cltd
inc
mov
insb
sahf
or
pmuludq
cmp
and
call
pop
andl
test
mov
jns
adc
dec
outsl
mov
pop
mov
cld
aas
in
paddusb
int3
out
cmp
sub
sbb
or
jl
insb
pop
lahf
dec
outsl
mov
pop
mov
cld
aas
in
paddusb
int3
out
cmp
stos
push
cmp
dec
or
loopne
movsb
fsubrl
lods
jo
xor
xor
scas
popa
or
push
and
std
push
lretw
inc
addl
jecxz
push
jbe
scas
cmp
sbb
gs
mov
mov
xor
jp
dec
and
mov
mov
sahf
dec
jo
mov
dec
or
push
inc
sub
ret
je
je
adc
arpl
adc
js
mov
fistl
data16
daa
sbbl
or
mov
mov
xor
xchg
and
dec
fidivrs
iret
pop
in
mov
fadds
pop
or
mov
ss
jp
mov
sbb
pop
loopne
fs
xchg
ret
fwait
cmp
into
xchg
ret
xchg
xchg
push
sbb
sbb
push
jmp
insl
xchg
mov
mov
aam
xchg
je
jb
dec
sub
dec
inc
push
mov
fildl
mov
dec
fcoms
inc
outsl
sbb
jno
jbe
or
mov
lahf
decb
daa
in
int
sub
jb
data16
xchg
xchg
mov
cmc
dec
sahf
loope
mov
dec
xor
cltd
jecxz
cli
mov
loop
popa
mov
cmp
mov
aam
movsb
daa
sti
dec
insb
lret
fimuls
inc
jmp
stc
and
ljmp
xor
jecxz
loopne
ds
shrb
in
rcrb
repnz
and
rcl
sub
ret
test
mov
ror
sti
sahf
testb
sarl
inc
cmpsb
jb
fsubs
xchg
jmp
gs
push
je
push
and
aaa
cmp
ret
mov
into
outsb
mov
mov
xchg
dec
scas
and
ja
pop
incl
divl
add
outsb
adc
std
leave
sub
adc
mov
cmp
xor
add
mov
repz
sub
push
inc
inc
xchg
into
sub
push
cmp
in
push
inc
pop
cmp
and
mov
jne
aad
imul
cmc
add
flds
inc
mov
add
fwait
or
mov
xchg
hlt
sub
test
mov
popa
das
pop
and
pop
pop
popa
xor
sub
imull
loopne
int
cmp
aam
sub
mov
fisubrs
dec
mov
xor
fbld
push
sbbb
popa
pop
rep
add
test
add
pop
sti
pushf
lds
gs
stos
cmp
pop
xchg
lret
lcall
std
je
push
pop
jno,pt
daa
inc
jmp
push
xchg
test
ja
daa
sbb
int
repnz
xor
pop
stc
jb
push
mov
xlat
loope
shrb
nop
filds
mov
aaa
sbb
iret
xor
cwtl
xor
pop
xchg
loop
mov
inc
xchg
subb
push
and
scas
sbb
or
dec
mov
lds
shl
movsl
jge
jns
scas
addr16
push
pusha
sbb
dec
scas
cmpl
cmovno
in
aaa
imul
out
or
cmpsb
iret
jl
and
mov
jbe
mov
or
ret
and
mov
or
filds
inc
shrl
mov
mov
sub
cmc
push
cwtl
fwait
sti
xchg
pop
sub
xchg
or
add
scas
ja
sub
inc
mov
repz
sub
push
sbb
xor
addb
data16
js
xor
out
leave
cmp
jnp
adc
and
movb
lods
mov
xor
es
sbb
jo
cmc
test
dec
ja
ret
mov
xchg
les
fdivrs
mov
xchg
dec
sbb
xor
int
fldenv
rcl
pushf
inc
int3
and
mov
pop
push
outsl
pop
xor
sbb
das
adc
aas
cmc
loope
ds
xchg
jo
sub
out
mov
sahf
mov
pop
popa
addr16
dec
mov
pop
call
loopne
insb
pusha
xchg
leave
xchg
lods
mov
jo
push
sbb
cmp
daa
ret
add
cld
xor
sub
add
xchg
pop
out
or
jb
in
inc
mov
jae
mov
lcall
leave
add
pop
mov
jnp
sti
ljmp
nop
insl
push
repz
shl
aam
inc
incl
lahf
jp
mov
call
cmpsb
mov
mov
push
in
mov
pop
je
pop
push
pop
pushf
pop
pop
jno
in
ss
or
ret
adc
loope
dec
jmp
push
xor
aam
jmp
push
xchg
rolb
notb
insb
movsl
cld
in
mov
jecxz
mov
cwtl
and
cmp
ljmp
push
mov
test
ret
sbbb
mov
add
inc
adc
dec
mov
adc
xchg
mov
push
adc
pusha
icebp
mov
or
add
xor
into
mov
aad
mov
pop
mov
fimuls
pop
sahf
dec
jae
jne
stos
sub
pop
mov
outsb
fs
insl
xor
add
mov
into
push
outsb
adc
jo
add
sub
jno
jecxz
imul
fidivrl
sub
pop
nop
mov
dec
push
cs
out
call
xlat
shll
or
fdivrl
mov
stc
jle
fstl
lods
jmp
mov
sarl
ficompl
add
inc
push
mov
loope
push
addb
frstor
sbb
dec
aaa
jmp
hlt
fmuls
adc
pop
in
pop
lahf
pop
add
mov
mov
movsl
lahf
push
fldcw
dec
cmp
adc
or
pop
lods
inc
or
jno
jl
sahf
in
adc
aad
ficoml
jo
sbb
mov
dec
jbe
sbb
push
mov
aad
sti
jno
or
les
ret
adc
adc
mov
xchg
adc
jmp
mov
insl
add
adcl
jno
xor
jp
xor
dec
cld
lds
test
sbb
or
js
and
mov
and
mov
cmp
sarl
sbb
scas
inc
testb
cli
adc
fmuls
or
fisttpl
or
cmp
xchg
cmc
outsb
shlb
jno,pt
push
add
sti
mov
das
mov
add
test
stc
jno
and
nop
clc
stos
mov
push
pop
clc
lcall
add
mov
cli
adc
pop
and
mov
aas
subb
push
pop
add
es
push
out
or
adcb
and
adc
pusha
mov
in
out
sarl
sahf
cli
loop
fwait
dec
push
and
aad
mov
mov
jg
sub
stc
lock
pop
push
dec
xorb
inc
add
xor
gs
inc
idiv
xchg
ffreep
push
cmp
or
push
aas
js
mov
adc
dec
insb
pop
mov
jb
lahf
add
testb
ret
pop
mov
pop
insl
sbb
lods
fldcw
daa
mov
mov
sub
mov
or
mov
mov
mov
ja
adc
shrl
mov
adc
aaa
pop
ja
pusha
cltd
mov
jge
cwtl
ret
sbb
call
cmp
xor
adc
ja
dec
scas
cmpsb
aad
repnz
mov
sub
jno
pop
jbe
sbb
adc
lock
xchg
mov
pop
jle
inc
jmp
pop
lods
lock
fcomi
and
inc
sbb
mov
push
mov
icebp
mov
stos
sbb
fsubrs
icebp
pop
mov
mov
pushf
inc
dec
add
sub
shrb
push
adc
fldl2e
sub
cmc
and
push
out
pop
xchg
in
xchg
sahf
out
scas
mov
insl
out
test
push
aam
push
imul
dec
pop
imul
jns
loope
dec
cmc
lods
ljmp
push
ret
ret
jno
fwait
sub
xchg
je
sub
lods
jg
dec
fdivrp
pop
in
lods
mov
add
adc
int3
jno
lods
nop
sahf
out
sub
cli
sbb
sub
lret
sub
dec
cmp
xor
loop
std
pop
sbb
rcrl
push
sbbl
sbb
push
idiv
cmp
jge
xchg
arpl
push
and
pop
cmp
cmp
imul
inc
ret
cli
dec
or
mov
mov
cmpsb
fadds
inc
test
add
cmc
add
mov
sbb
fbstp
sub
dec
or
cld
imul
adcl
stc
push
ss
push
loop
fcoml
fmulp
jecxz
mov
rcr
std
adc
push
xchg
je
push
jge
jns
and
or
sarb
xchg
add
cmpb
push
popa
ss
repnz
orb
mov
in
stos
and
scas
sbb
and
or
lcall
lods
ret
gs
pop
daa
and
inc
mov
decl
test
or
xor
inc
xor
addb
inc
dec
push
inc
xlat
adc
lcall
mov
push
movsb
adc
mov
cmpb
jecxz
dec
add
sti
dec
and
lods
fnstsw
mov
xchg
test
in
mov
lret
jmp
mov
and
sbb
fidivrs
mov
jb
jnp
in
sub
add
aam
insb
incl
sbb
pop
push
xchg
loopne
imul
lret
or
dec
push
inc
xor
sbb
push
and
std
repnz
jbe
push
and
out
mov
hlt
aam
int
sub
add
push
adcb
push
aaa
add
ss
pop
iret
and
enter
hlt
add
mov
and
testb
inc
aad
lcall
cmp
adc
pop
adc
pop
lret
arpl
push
rcrl
push
mov
cmp
sub
push
aas
dec
hlt
insl
pop
sub
cmpb
clc
and
push
push
jmp
andl
push
inc
pop
outsb
lea
stos
push
test
mov
ficoms
mov
push
leave
inc
mov
sbb
roll
dec
lcall
shll
adc
pop
mov
scas
ficompl
push
stos
out
xchg
in
or
je
dec
clc
jb
cmp
sahf
test
arpl
cmpsl
in
push
push
ljmp
mov
subl
mov
jle
jo
and
sub
mov
test
fnstenv
mov
and
repnz
pop
push
ss
insb
adc
insb
fnstcw
and
out
adc
mov
bound
decl
fwait
push
call
fistps
push
push
xchg
fisubl
pop
jmp
fiaddl
cld
pusha
inc
add
andb
gs
incb
dec
cmp
testl
addr16
jbe
jbe
rclb
stos
pusha
rcrb
popf
cmp
mov
mov
mov
xor
dec
faddl
xor
test
cmpsl
sub
incl
inc
xor
jecxz
inc
mov
and
aam
in
popf
int
push
sarb
cmc
mov
ret
jno
lock
jae
and
add
jno
dec
add
test
outsb
outsl
test
in
fs
pop
push
popa
xor
cld
xchg
lret
mov
mov
fcoms
stos
and
pusha
inc
xchg
aaa
and
cmc
add
mov
arpl
mov
loopne
rcr
hlt
and
js
outsb
pop
sub
scas
bound
into
ss
mov
mov
sbb
sbbb
add
pop
dec
out
dec
out
cmp
test
cmp
add
cs
xor
xchg
das
xchg
loop
dec
mov
or
cmpsl
lea
mov
push
push
mov
cmc
test
cld
test
xor
cmpsb
jb
dec
mov
mov
jb
sar
xor
or
outsb
sbb
xor
in
imul
jno
imul
mov
xchg
js
dec
pop
aad
xor
mov
stos
scas
lea
xchg
xor
push
xchg
and
ljmp
icebp
mov
cli
popa
mov
push
in
inc
cmp
xor
je
xchg
mov
ja
repz
jp
fsubrl
dec
xchg
hlt
add
and
xor
jecxz
sub
cmpsb
jle
in
hlt
into
mov
xchg
leave
jp
loope
ja
push
out
scas
incl
js
cwtl
aas
dec
dec
pop
adc
daa
jecxz
push
dec
shrb
push
mov
dec
in
inc
sbb
das
sbb
push
ja
mov
aaa
int3
fcmovnu
xor
cltd
test
movsl
mov
and
mov
adc
adc
mov
leave
sub
pop
shrl
pop
mov
dec
dec
xor
hlt
xlat
loopne
pop
mov
repz
inc
popa
mov
pop
and
xor
cmc
push
in
out
fs
cltd
push
xchg
mov
jmp
pop
inc
inc
adc
and
xchg
lods
and
insl
sbb
jge
pop
testb
xchg
pop
jno
repnz
add
sub
fldcw
punpckhbw
jmp
test
pop
jle
xor
push
dec
xor
les
pop
stos
lcall
mov
sub
outsl
sub
inc
ret
ret
outsb
cmpsb
adc
test
sbb
notb
cwtl
lret
push
xor
dec
loope
das
xchg
enter
dec
jp
cltd
inc
popf
jp
jecxz
inc
jnp
lret
clc
into
push
mov
pop
mov
pop
jecxz
mov
mov
or
xchg
jns
inc
and
leave
andl
fcomps
in
pop
and
cmp
mov
cmpsl
das
fstps
daa
jl
in
push
rolb
inc
lock
mov
aas
lods
fiadds
push
add
pop
mov
jae
into
insb
xor
pop
jmp
inc
cmp
dec
sahf
cmc
imull
and
mov
adc
fistl
sbb
sahf
sub
or
cwtl
pop
into
iret
add
or
xchg
jl
nop
cmp
dec
sbb
out
jle
inc
xchg
je
adc
lods
roll
or
andb
jae
pop
mov
pop
mov
and
dec
iret
ljmp
sbb
call
push
sub
or
sub
enter
jp
push
loop
and
int
shl
mov
sbb
popa
dec
dec
mov
das
lret
lds
pop
pop
js
inc
mov
leave
jns
and
push
and
inc
sbb
cmp
mov
aaa
pop
cmp
cs
das
ret
xchg
mov
lret
jns
sub
sub
xor
dec
mov
jmp
outsb
xchg
cmp
lods
mov
lcall
mov
lcall
xlat
fwait
jo
scas
push
pop
negl
sub
ret
pop
pusha
jmp
aam
jmp
aaa
jo
lcall
pop
lds
ret
mov
add
xor
xor
movb
sub
fidivrl
inc
idivl
cmc
repnz
mov
orb
sbb
lcall
cmpsb
aaa
jo
xor
adc
jmp
rcrb
jmp
mov
pop
inc
push
bnd
cmpsb
scas
xlat
arpl
mov
out
mov
test
and
mov
das
dec
test
insl
aaa
cmp
loopne
sbb
data16
push
mov
cmp
jbe
jbe
es
mov
fldenv
bound
mov
fisubs
sub
lds
mov
into
stc
ljmp
imul
mov
xor
xchg
push
push
sub
cmp
test
cmp
rcpps
sbb
cmpb
stos
std
fwait
bound
xor
or
in
incb
mov
clc
adc
test
pop
pop
pop
gs
sbb
out
xchg
dec
je
data16
fistpll
in
cmp
aas
xchg
push
movsl
lock
iret
jno
cmpsb
aaa
jmp
mov
dec
cs
ljmp
shll
mov
xchg
jne
jb
loop
scas
mov
repnz
ret
call
push
xor
lods
cmc
divl
cmp
jns
js
in
sahf
lcall
and
sub
or
js
repz
add
jbe
push
out
rorl
imul
cmp
jae
xchg
je
in
sahf
scas
in
add
jecxz
scas
call
notb
repz
in
xchg
jmp
add
insl
ficompl
ret
push
cmp
movsl
mov
lahf
mov
mov
push
pop
add
scas
add
repz
loop
add
insl
or
adc
jp
hlt
sbb
dec
pusha
cmp
mov
shl
sub
or
call
or
jne
fadd
gs
pusha
lods
cs
mov
mov
cmp
pop
or
push
pop
bound
or
mov
pop
shrb
inc
mov
mov
jg
mov
inc
outsl
push
aas
or
iret
pusha
stos
pop
mov
jo
add
push
jmp
daa
dec
jae
insl
repz
cmp
aaa
sub
inc
insl
iret
pusha
sub
and
mov
mov
and
mov
mov
scas
mov
or
and
sub
xchg
and
popa
repnz
das
cli
and
iret
in
leave
stos
sbb
inc
dec
cmpsl
or
cld
add
cmpsl
sbbb
pop
inc
inc
stos
popa
add
lds
sti
add
outsb
insl
mov
xor
jns
icebp
in
ret
into
ret
arpl
subl
add
ja
pop
jo
xchg
in
mov
xor
in
xchg
movsl
pop
aas
dec
push
mov
xchg
jns
inc
lahf
ficompl
mov
test
cmp
pop
mov
sub
outsb
jne
mov
inc
push
mov
dec
add
mov
jb
inc
pusha
mov
pop
hlt
jno
push
lock
xor
out
or
out
dec
adc
dec
pop
lcall
les
inc
push
mov
and
add
inc
int3
and
adc
and
inc
xor
lret
pop
rclb
leave
jle
fsts
inc
loopne
clc
mov
mov
cmp
inc
test
fcoms
into
lret
mov
arpl
es
lcall
or
dec
jl
pop
lods
cmp
jmp
outsl
sub
pop
xor
jb
cs
dec
in
dec
and
mov
fisttps
jo
xchg
inc
cmc
xlat
mov
xor
adc
pushf
and
adcl
mov
int3
pop
mov
lods
mov
xchg
es
in
leave
arpl
cmp
lret
insb
sbb
gs
fldenv
push
pushf
dec
xor
bound
aaa
jns
mov
adc
fisubrs
mov
or
leave
int
ficompl
adc
push
ja
test
push
push
es
mov
push
ret
push
adc
cmp
hlt
clc
imul
mov
and
dec
pop
and
jge
cmp
lods
stos
aaa
dec
xchg
leave
sub
and
cs
stos
imul
sbb
and
pop
xor
insb
addr16
cmpsl
inc
push
and
ret
jns
cs
out
inc
popf
sti
hlt
inc
dec
push
mov
shll
mov
adc
sub
and
mov
pop
lock
aam
xor
dec
add
ljmp
cmp
add
scas
and
mov
mov
out
sbb
add
mov
rcll
pop
or
jne
clc
jb
aas
dec
xchg
cmp
push
inc
pop
mov
cli
cmpsl
loopne
adc
push
or
jp
jecxz
adc
roll
and
cmp
push
mul
repz
and
and
and
and
jne
mov
test
adc
decb
sbb
ds
outsb
jns
xchg
aas
nop
xor
std
lea
fimull
jae
adc
cmp
jne
jns
mov
gs
das
scas
ret
adc
nop
cmpsl
xchg
pop
adc
pusha
or
imull
cltd
out
jb
scas
inc
or
adc
shrl
leave
cmp
dec
lods
push
roll
insb
cmp
shll
testb
xchg
mov
mov
rclb
sahf
cltd
cmc
cmpsl
pmaxsw
fisubrs
cltd
test
fmulp
push
aas
sub
ret
cmp
idiv
cmp
outsb
iret
sbb
cmc
imul
or
bsr
mov
ss
cli
pop
xchg
mov
scas
mov
ret
out
push
and
aas
int3
cmp
stc
push
adc
mov
add
mov
out
mov
cmpb
push
push
mov
inc
pop
and
mov
inc
inc
xor
xor
inc
sub
mov
mov
je
pop
push
test
outsb
xchg
sub
repz
jl
insb
pop
lahf
dec
outsl
mov
pop
mov
cld
aas
in
paddusb
int3
out
cmp
sub
sbb
or
jl
insb
pop
lahf
dec
outsl
mov
pop
mov
cld
aas
in
paddusb
int3
out
cmp
sub
sbb
or
jl
insb
pop
lahf
dec
outsb
mov
pop
lea
cld
aas
in
push
fstpl
int3
out
cmp
sub
sbb
or
jl
insb
subps
dec
nop
mov
pop
sti
pop
je
adc
and
xor
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
pop
les
xchg
inc
loopne
jmp
out
push
lret
xor
add
cld
jle
outsb
aam
les
movsb
ds
push
test
repnz
jp
inc
into
xor
inc
lods
adc
add
cs
inc
add
daa
in
ss
decb
int
cmpsl
and
fisubl
ja
mov
les
nop
cmp
out
nop
std
xchg
inc
and
mov
out
inc
popa
and
clc
jle
in
push
dec
push
in
pop
fnstsw
add
xor
outsb
mov
loop
add
cmp
aad
loopne
mov
out
stos
mov
xor
sbb
lret
mov
pushf
xchg
test
ds
ds
push
mov
aaa
adc
inc
mov
popa
sti
sahf
jno
sbb
dec
daa
pop
rclb
int3
data16
xor
stos
es
ja
mov
jno
jno
in
sub
pop
mov
pop
jge
mov
inc
xor
pushf
adc
imul
dec
mov
loopne
xchg
push
cmp
xchg
div
mov
pop
xlat
push
cmpsb
cmp
xchg
sbb
cmp
dec
xchg
imul
and
lods
pusha
icebp
inc
loop
pop
insb
pop
xchg
sub
lds
push
cmp
mov
int3
inc
into
inc
scas
popa
stc
inc
cli
xchg
outsb
movsb
cmp
cs
push
test
je
fs
push
fiadds
mov
add
hlt
jle
outsb
aam
les
movsb
cs
push
test
je
fs
push
fiadds
mov
add
hlt
jle
jge
fstps
mov
shl
adc
addr16
jae
fwait
cltd
mov
shll
aas
inc
arpl
sahf
imul
sahf
adc
push
push
or
jl
xlat
mov
stos
andl
das
add
push
bound
sbb
jno
or
inc
pop
or
insb
test
sbb
ss
or
popa
cli
or
sbb
lods
xchg
cli
je
and
jl
sbb
lock
pusha
adc
mov
stos
call
pusha
jl
and
cmp
jae
lcall
mov
sbb
mov
push
xor
pop
out
cltd
jp
enter
mov
adc
mov
fmull
insl
aam
repz
test
jl
pop
es
inc
ret
fldt
dec
imul
pop
add
scas
call
or
in
call
push
out
cmpsb
cmp
pop
idivl
leave
mov
cmpsl
and
sbbb
mov
out
fcomps
mov
jg
shlb
rcrl
cmp
mov
sub
jbe
movsl
fwait
sarb
gs
jge
aas
es
xor
iret
mov
sbb
cmp
leave
sahf
das
mov
xchg
mov
sbb
cmp
lods
inc
cmp
scas
inc
or
sbb
pop
in
pop
sarl
dec
ja
jo
or
fisubrs
xor
mov
push
aas
mov
cli
xor
and
adc
arpl
mov
outsl
sbb
mov
mov
das
ja
adc
cmp
jp
je
push
mov
xor
xchg
cmp
push
mov
imul
xor
inc
call
push
jl
push
jo
jno
stc
icebp
inc
push
sti
fdivrl
ficoml
pop
cmp
nop
movsb
int
repnz
sub
xchg
pusha
add
addb
mov
lea
dec
push
mov
int
out
rorb
dec
sbb
jge
push
ficomps
mov
jnp
call
lods
outsl
ss
insb
sbb
add
data16
and
dec
cmpl
out
mov
sub
cmp
dec
pop
mov
lods
mov
stos
sbb
mov
cmc
jno
inc
xchg
fcomp
sbb
pop
ja
pop
out
mov
or
inc
adc
popa
shl
outsl
movsl
inc
adc
cmp
out
add
mov
dec
scas
les
pusha
bts
xchg
inc
mov
js
aad
sbb
push
sub
mov
mov
mov
stos
insb
fdivr
xor
in
outsb
or
enter
sahf
xlat
jecxz
mov
sbb
shrl
sbb
push
xchg
or
loopne
out
or
mov
adc
mov
dec
sbb
inc
or
insb
xor
shr
in
cmp
fmuls
mov
mov
fmuls
daa
adc
and
lds
jle
cltd
dec
push
cmc
xor
jge
jns
orb
in
jmp
push
or
pop
push
mov
mov
insl
call
shrb
ud1
ficoms
cmpb
outsl
lods
pop
das
or
adc
call
xchg
cmp
out
xor
orl
mov
cmc
pop
sbb
cmp
add
cmp
stos
ja
push
test
test
and
cltd
cmp
mov
adc
rcr
orl
mov
jp
xlat
push
add
iret
icebp
mov
push
adc
lahf
ficompl
mov
xchg
dec
and
icebp
inc
sub
xchg
sub
push
dec
call
outsb
cmc
xchg
lds
int3
adc
push
out
dec
xor
push
cmp
xor
ret
imul
movsb
lock
shlb
and
les
scas
dec
mov
or
sub
aaa
add
arpl
cltd
mov
popa
clc
fwait
mov
and
es
sahf
cmp
mov
in
popf
out
scas
push
xlat
mov
adc
pop
loopne
ret
cmp
jmp
loop
mov
xchg
stc
cmpsl
lret
ret
ss
cmp
stos
mov
bound
xchg
add
or
sti
fwait
xor
cmpsb
rcll
out
or
jecxz
data16
out
xchg
cld
cmpsl
pop
scas
ds
cwtl
mov
cmp
rolb
or
mov
clc
inc
inc
loop
insb
lods
mov
pop
test
dec
ja
mov
adc
push
aaa
pop
push
push
push
out
dec
std
mov
jne
ret
rcrl
ljmp
cmp
dec
data16
push
je
call
xchg
mov
sahf
add
xlat
aam
jno
rcrl
mov
push
testl
hlt
int
and
mov
adc
push
imulb
popf
cmpsb
test
jp
mov
int3
mov
pop
and
rorl
dec
clc
enter
and
outsb
iret
into
jecxz
cwtl
leave
jne
mov
pop
rol
in
xlat
or
and
mov
cmpsb
imul
gs
pop
aaa
popa
rcll
mull
mov
pcmpeqb
dec
mov
mov
xchg
out
lea
sub
mov
adc
sub
pop
mov
push
push
push
pop
sub
adc
arpl
lcall
add
out
inc
rclb
addr16
arpl
adc
xchg
fmulp
inc
inc
test
rolb
pop
leave
idivb
cs
add
sbb
pop
lcall
pop
xchg
repnz
nop
fsubs
cmp
push
adc
push
fnstcw
xchg
mov
lahf
in
mov
push
ret
mov
mov
cwtl
lea
jbe
cmc
fbld
stos
jae
inc
jge
push
fisttpl
movsl
push
mov
roll
bound
inc
jb
mov
ret
test
dec
mov
jno
mov
cli
je
mov
jne
fnstsw
cmpsl
dec
cmpsl
cmp
test
subl
rolb
push
mov
sbb
stos
mov
mov
push
jge
jae
xchg
jne
sbb
insb
sbb
js
out
sbb
inc
out
or
xchg
fdivrl
insl
xchg
out
dec
imul
and
push
jmp
cld
dec
xor
cmp
push
or
data16
ja
ret
sbb
ja
push
aad
inc
sub
mov
dec
iret
cli
mov
int3
fimull
inc
pop
add
xchg
rolb
call
adc
cmp
or
movsb
test
test
pop
fistps
push
push
cmp
test
adc
add
adc
mov
dec
add
mov
in
jo
mov
jg
fisttps
div
in
imull
fstl
scas
gs
jl
mov
rclb
or
mov
xchg
mov
scas
mov
adc
mov
movsb
xchg
dec
or
mov
lahf
in
jne
jo
dec
pop
or
movsb
and
sbb
mov
dec
pop
pop
je
cmp
pop
mov
dec
dec
in
enter
sbb
scas
pop
popf
loop
xor
mov
ret
add
mov
sub
ret
mov
jno
ja
test
cmp
and
mov
and
push
jb
dec
outsl
and
or
xor
shrl
xchg
ds
mov
xchg
cld
adc
scas
inc
iret
xchg
divb
xchg
lds
push
dec
cltd
push
test
inc
cli
adc
and
inc
flds
inc
sub
mov
movsl
les
push
leave
arpl
mov
movsl
shll
pop
int
rorb
cmp
dec
stos
sub
add
cmp
popw
mov
lahf
jno
lret
fiaddl
dec
pushf
cmpsb
std
sub
mov
pop
xchg
or
aaa
and
outsl
shll
dec
mov
mov
nop
mov
arpl
les
mov
lods
jmp
push
pop
sub
xchg
sarl
movsb
lock
jbe
cmp
mov
push
and
mov
xor
jle
ret
inc
in
and
mov
jmp
sub
mov
mov
dec
inc
inc
arpl
imul
icebp
loope
into
pop
lock
or
pushf
adc
test
in
mov
lock
scas
mov
inc
outsl
pop
testl
repnz
pop
repnz
loop
push
and
pop
inc
mov
lret
jg
xor
iret
mov
jp
mov
push
pop
std
sbb
dec
lcall
retw
in
mov
sub
adc
push
insl
ljmp
sub
jmp
xor
xor
testl
pusha
bound
shll
ror
daa
mulb
jmp
popa
push
cmp
fsubp
orl
mov
mov
or
leave
lock
lret
in
sbb
lods
jo
ljmp
lds
dec
jl
loopne
aad
xchg
or
es
jne
or
out
frstor
xor
sub
shr
dec
aaa
inc
pop
incl
and
pop
mov
pop
or
fsts
out
push
fmuls
mov
inc
call
jmp
xor
add
pop
cmp
sub
and
xchg
cmpsl
sub
jecxz
outsb
stos
or
cmpl
and
lods
sahf
or
out
movsb
pusha
out
pop
imul
out
push
fdivs
and
ror
fdivrl
enter
gs
mov
push
push
aaa
xchg
push
lret
jg
xchg
pop
mov
mov
mov
cwtl
mov
lret
pop
int3
jge
or
lock
ljmp
pushf
jmp
lcall
repnz
push
inc
loop
pop
movsb
imul
out
or
xchg
shrb
cmpsb
icebp
inc
adc
cmp
mov
push
push
pop
sub
or
sbb
mov
clc
mov
pushf
push
pop
icebp
int
jnp
arpl
sub
mov
fnsave
or
xor
push
int
jg
cld
add
divb
pushf
xor
adc
arpl
jg
insl
imul
mov
fwait
out
inc
inc
jb
mov
outsb
rorb
mov
mov
xorl
lods
mov
mov
ret
jl
daa
stos
cmp
push
cmp
popf
add
sti
pop
ret
xor
sub
mov
jbe
data16
inc
popf
ret
lret
test
ret
pusha
cld
cltd
ja
sbb
mov
loopne
aaa
jge
aas
int
in
add
sti
ret
jg
dec
pop
pop
add
bound
sub
test
out
mov
fstl
mov
jecxz
and
lods
scas
mov
mov
mov
adc
shll
aam
xchg
out
lahf
cmc
xchg
mov
adc
add
aam
pop
and
adc
mov
fld
out
adc
inc
adc
mov
outsb
ret
jbe
ss
in
stc
push
scas
outsb
push
shl
jns
push
mov
xchg
fwait
mov
push
out
fcompl
mov
sbb
pusha
out
mov
loopne
addr16
ljmp
and
xor
adc
push
push
stc
fildll
fadds
aam
and
cmp
test
mov
mov
in
jo
adc
arpl
ja
push
adcl
add
scas
push
sub
xchg
lret
dec
jp
pop
cmpsl
push
jge
loopne
ds
xorl
stos
sbb
popa
jne
rcll
enter
adc
ret
dec
mov
je
ret
ret
cmp
or
imul
push
jmp
adc
pop
mov
outsl
xchg
ja
jl
in
nop
add
into
ds
mov
mov
and
pop
mov
xor
mov
xchg
out
test
loope
addr16
movsb
push
cmp
jno
imul
ret
pushf
loop
mov
dec
nop
sbb
in
rorb
dec
pop
xor
cwtl
or
outsb
mov
dec
insl
sbb
rorl
fwait
pusha
std
jns
jg
inc
call
sbb
cmp
scas
mov
test
sarb
fdivrl
inc
add
scas
into
xor
fdivr
mov
jp
push
push
adc
enter
pusha
pop
push
pop
add
mov
in
inc
push
mov
stc
js
add
pop
pop
icebp
mov
dec
sub
mov
outsl
cmp
dec
mov
ret
dec
insb
adc
mov
in
lds
icebp
push
pop
lds
lods
pop
in
scas
repz
xor
xor
jecxz
or
mov
rorl
ljmp
jmp
sub
inc
inc
jmp
int3
pusha
into
adc
dec
mov
jns
dec
loopne
xchg
or
aas
adc
mov
pushf
mov
xor
mov
fnstenv
ja
leave
jb
scas
add
push
cmpl
xchg
fimull
push
or
andl
mov
cltd
icebp
rcll
sbb
adc
mov
nop
lods
jns
dec
mov
jle
jbe
push
stc
push
push
inc
push
stos
fdivrl
inc
pop
aaa
dec
sbb
ljmp
mov
testl
mov
xchg
and
les
mov
scas
fwait
pop
bound
dec
xchg
roll
jne
fildll
out
popf
cmp
icebp
pop
stos
ljmp
insb
out
pop
fwait
aad
fcoms
sub
mov
test
out
in
cmpl
cmp
sbb
mov
shrb
xchg
fstl
jp
add
xor
out
in
test
jg
mov
jns
xchg
or
and
push
ret
jmp
aam
pop
xchg
xlat
cmp
int3
in
clc
fcomps
add
jne
pop
xchg
inc
or
lret
or
int3
mov
stos
in
js
enter
jb
mov
xchg
cmpl
cmp
adc
dec
ss
sbb
xor
sbb
sub
pop
mov
les
sub
add
jmp
sub
std
adc
orb
int
ds
xchg
xchg
cltd
pop
cld
stc
lods
sbb
push
cmp
imul
cld
adc
outsb
ds
lret
fisttps
pop
add
aas
sub
jp,pt
test
cltd
adcl
in
or
dec
fstps
fimuls
mov
mov
xchg
sti
cmpsl
mov
jge
nop
nop
add
jp
int
test
mov
mov
fs
and
add
scas
lret
xchg
stc
imul
lock
mov
sbb
or
adc
stos
imul
loope
inc
jp
mov
add
push
pop
xor
dec
xchg
or
inc
xchg
dec
daa
and
mov
js
push
sahf
fildl
dec
push
sahf
add
xlat
pop
lret
subl
outsb
imul
imul
and
push
push
xchg
inc
jae
std
pop
test
bound
mov
pop
sahf
lcall
imul
addr16
pop
pop
mov
ret
jns
sub
int3
enter
or
add
mov
lea
jo
push
lds
and
subb
mov
imul
scas
mov
jecxz
lock
pop
loopne
mov
divl
adc
jae
and
push
mov
xchg
outsl
outsb
test
test
loope
pop
pop
xor
pop
lar
mov
ds
dec
mov
mov
jno
adc
and
add
andl
in
fucomip
push
inc
cmc
cmp
adc
adc
dec
aas
xor
push
pop
movsb
in
stos
clc
pop
aas
es
cmp
and
ret
sbb
mov
push
dec
add
in
mov
outsb
cli
and
xchg
jp
fnstcw
inc
in
sub
imul
dec
test
popf
adc
xchg
fwait
sbb
or
add
jno
cmp
push
int
sbb
shlb
mov
jg
rorb
sbb
cmp
insb
test
icebp
loopne
dec
jle
push
pop
adc
mov
bound
icebp
jp
cld
pop
ss
sub
cmc
clc
push
popf
cmp
aad
call
mov
hlt
cld
outsl
cltd
fbld
mov
pop
test
leave
add
test
fdivrs
mov
andl
lcall
aaa
mov
mov
mov
pop
and
sbb
hlt
hlt
sbb
mov
into
push
xor
jne
xchg
divl
stos
aas
and
aad
mov
movl
jge
sub
clc
dec
mov
lahf
inc
add
scas
and
into
mov
jns
mov
adc
sbb
push
push
adc
cmpsb
pop
cwtl
push
outsl
lcall
mov
mov
fwait
jle
bound
cli
cs
nop
sub
jecxz
push
lds
movsl
push
sub
jno
mov
mov
ret
jmp
dec
mov
cmp
out
or
icebp
stos
xchg
fistps
mov
int
shl
ret
idivl
push
rorl
mov
jp
leave
cmpsl
pushf
jo
dec
popa
mov
mov
cmp
jp
jecxz
adc
lret
leave
inc
scas
arpl
int
into
sbb
popa
hlt
lods
mov
push
lea
jbe
loopne
jle
pop
mov
jmp
xchg
imul
and
mov
or
cmpb
jno
inc
std
xlat
iret
jmp
sbb
mov
bound
lods
xor
adc
shlw
push
rolb
xchg
sbb
and
xchg
jg
notl
adc
pop
movsl
jnp
stos
lea
mov
sub
mov
xchg
mov
adc
out
dec
xor
pop
nop
push
xor
sbb
fistps
das
rclb
aas
inc
pop
les
rcll
bound
or
out
addl
lret
xchg
add
imul
lods
jecxz
mov
mov
arpl
xor
mov
xor
clc
out
je
mov
dec
fwait
icebp
xchg
mov
pop
mov
or
shll
xchg
xchg
jp
or
pop
clc
sbb
add
fsts
and
mov
mov
stos
popf
jbe
in
jbe
test
inc
add
jp
xchg
sbb
sub
aaa
lea
das
imul
int
scas
cmp
ret
repz
in
cltd
add
xchg
sbb
neg
loop
fimull
mov
dec
pop
cmp
pop
lds
fmuls
dec
or
sbb
mov
fmull
aam
jae
leave
ret
mov
mov
dec
add
nop
jo
xchg
push
pop
cmp
negb
push
mov
je
sbb
jge
sbb
lret
jecxz
mov
and
mov
jno
das
mov
mov
faddl
dec
lea
ret
jp
loopne
sbb
inc
cmpsl
incb
mov
addr16
and
cld
sub
fistpll
jno
xchg
xchg
mov
jne
ljmp
xchg
adc
mov
pusha
dec
add
and
push
or
jp
jmp
xchg
lahf
lret
jae
cs
dec
pop
pop
or
in
or
pop
adc
ljmp
stos
fsubs
ljmp
adc
mov
cmp
fwait
repnz
int3
jp
arpl
mov
pop
jge
adc
inc
push
mov
call
pusha
sub
lea
pop
dec
push
jl
push
or
dec
add
cs
and
mov
int
loop
or
inc
out
jno
das
and
or
aam
jge
jno
adc
cmp
sti
mov
pop
push
push
fisttpl
cmp
push
mov
scas
push
or
jle
xchg
cmpb
int3
nop
sub
rcrb
push
sbb
sub
mov
cmp
jno
xor
pop
sbb
outsl
sub
dec
and
push
test
aad
pop
in
sbb
popa
xlat
lcall
cmp
nop
dec
lret
std
sub
mov
popf
jg
mov
xchg
mov
mov
test
lret
sub
xor
cmpsl
cltd
push
mov
mov
rolb
test
insb
cmp
cld
enter
sti
pop
iret
or
push
imul
das
jmp
cmpsl
or
out
js
sahf
jge
subb
sub
adc
push
xchg
dec
pushf
dec
popa
out
les
xchg
cmpsl
sub
sub
inc
and
stc
xlat
mov
jecxz
scas
xor
adc
cmp
outsb
or
repnz
enter
sub
mov
hlt
sub
out
mov
mov
insl
and
clc
outsb
sbbl
mov
movsb
cs
push
test
je
fs
push
fiadds
mov
add
hlt
jle
outsb
aam
les
movsb
cs
push
test
je
fs
push
fiadds
mov
add
hlt
jle
outsb
les
dec
mov
mov
push
jo
fs
pop
fiadds
xor
cmp
mov
jp
push
pop
in
dec
mov
mov
xchg
push
add
je
fwait
inc
fiadds
lods
shr
loope
icebp
arpl
inc
push
push
inc
and
inc
inc
and
ds
xor
jmp
loopne
shlb
addb
push
push
inc
and
xor
add
adc
loopne
lock
fcom
shl
mov
adcb
cmpsb
ror
mov
add
push
sbb
xor
mov
lret
jecxz
aam
int3
in
xor
and
cmp
ficoml
ret
pop
lahf
xchg
pop
sub
push
xchg
lret
mov
mov
push
and
popf
call
je
nop
pop
movsl
in
incl
sbb
mov
fdivl
or
and
icebp
lock
sarb
mov
cmc
pop
dec
inc
lods
inc
mov
push
mov
adc
rclb
loope
lock
rcrl
sub
lahf
cmpsb
jge
pusha
lods
int
faddl
mov
cld
rcl
mov
xor
mov
ret
pushf
or
inc
and
jmp
add
mov
and
sub
jl
ljmp
push
inc
les
dec
and
adc
dec
mov
loopne
call
mov
sysenter
cmp
sub
xchg
pop
dec
je
adc
mov
nop
movsl
jne
mov
jmp
ss
sub
bound
cmc
jns
xor
subb
jmp
add
and
sub
jl
and
adc
add
lock
rcl
shlb
nop
andb
pusha
inc
push
push
inc
and
xor
add
adc
loopne
lock
rcl
shlb
nop
andb
subb
sub
mov
mov
sti
push
cmp
enter
and
test
mov
sub
push
sbb
inc
das
testb
cmp
out
sar
icebp
mov
in
mov
adc
addr16
inc
adc
hlt
xchg
pop
mov
adc
jns
adc
lock
and
das
push
and
or
inc
dec
int
jb
fdivs
inc
push
or
mov
add
or
xchg
mov
sub
sbb
mov
nop
mov
lock
jns
mov
adc
test
mov
movb
jl
sbb
fstl
jg
in
add
xchg
dec
into
dec
and
mov
sbb
and
inc
adcl
fldz
push
or
add
roll
sub
xor
dec
push
sub
out
mov
jmp
and
mov
mov
lret
mov
call
dec
sub
in
repnz
jmp
lock
inc
ficoml
cmp
test
mov
or
aad
sbb
pop
sbb
insb
lcall
push
lods
dec
and
jb
cmpsb
add
ret
pop
aam
pop
scas
ret
enter
adc
jbe
sbb
mov
punpcklwd
adc
repnz
out
xor
add
sbb
lods
or
push
shll
xor
movsl
sbb
in
fstpt
iret
sub
dec
pop
int3
push
cmp
repnz
mov
scas
jmp
mov
cmp
sbb
xchg
xchg
rorl
jno
and
cmp
adc
xor
mov
jno
mov
fcomp
lahf
xor
lret
mov
lods
push
sbb
jo
jmp
xor
stc
cli
sti
dec
testl
pop
repz
fcomps
mov
jne
inc
scas
inc
and
mov
cmp
mov
cld
mov
push
add
push
outsl
xchg
cld
les
sbb
xchg
rolb
fisubrl
mov
lds
aas
xchg
mov
ret
dec
in
bound
fbstp
fsub
and
add
cmpsb
movsl
insb
cld
jecxz
into
pushf
cmp
test
dec
movsb
in
iret
cmp
mov
icebp
cmpsb
xchg
idivb
xor
ss
pop
inc
cmp
jmp
andb
int
mov
fwait
cmpl
inc
inc
aaa
mov
test
movsl
and
xor
mov
mov
jg
mov
xchg
pop
popa
mov
xchg
popf
scas
push
lea
sub
dec
mov
cmpsl
enter
test
cmp
outsb
push
xchg
fldt
cmp
adc
mov
es
push
xor
inc
sub
dec
js
and
test
push
cltd
pop
in
test
aas
and
xchg
ljmp
sbb
aas
in
repz
insl
pop
fidivrl
jae
outsl
sbb
xchg
pop
clc
mov
decl
outsl
mov
fidivs
xor
push
dec
stos
clc
shl
jecxz
adc
inc
fldcw
jmp
or
push
cmp
xor
js
ss
outsb
xor
jle
sbb
sbb
mov
out
cmpsl
cmp
aaa
sarl
cld
mov
adc
mov
call
cmc
lds
lret
pop
and
mov
lret
dec
mov
in
pop
ss
add
dec
dec
pop
xchg
or
je
aas
xchg
shll
lret
out
fwait
xchg
in
or
clc
stos
ror
roll
scas
xchg
call
dec
jb
push
aad
push
mov
sbb
aaa
std
sbb
mov
sahf
dec
inc
dec
lds
inc
and
lods
jg
rcr
cmp
je
pop
ret
mov
adc
push
push
out
leave
stc
jge
aam
xor
jno
xchg
xchg
mov
adcl
and
lcall
popa
inc
jmp
mov
mov
int
and
inc
xchg
xchg
add
fcomps
call
ret
stc
pop
test
mov
sbbl
pusha
mov
std
adc
inc
orl
test
or
pop
pop
push
popf
mov
fcmovb
dec
scas
inc
cmp
dec
pop
cmp
rep
or
dec
dec
mov
cwtl
dec
js
cmp
stos
and
sub
jmp
xchg
mov
movsl
lret
mov
mov
mov
fistps
imul
dec
outsb
mov
or
mov
push
sbb
xchg
fucomi
iret
dec
test
adc
jmp
lahf
or
dec
in
shl
sub
sbb
jp
std
cmp
mov
jle
stos
push
push
dec
loopne
scas
das
cmpsb
mov
mov
imul
roll
stos
iret
iret
dec
test
arpl
fsubrs
sbb
ret
dec
jmp
xchg
xchg
pop
jg
enter
mov
and
out
jnp
jl
inc
mov
pushf
xchg
and
dec
or
scas
and
sbb
shrb
test
insl
inc
dec
dec
stos
lds
sbb
adc
push
mov
adc
sbb
hlt
cmp
or
adc
xchg
cmpsl
stos
push
fs
mov
aad
cld
ss
sbb
fnstcw
movsl
lods
test
push
cmp
push
ret
and
lea
mov
add
lea
rdtsc
inc
jnp
mov
inc
scas
push
test
pop
ficomps
lods
icebp
mov
inc
and
leave
mov
xor
push
cmp
insl
pop
add
sub
adc
xchg
pop
mov
cmpsl
nop
stc
xchg
sbbl
out
mov
divl
out
add
cmp
pushf
cmp
dec
js
jae
xchg
push
pop
dec
shlb
loope
xchg
xlat
mov
add
sbbl
popf
mov
and
into
ret
incl
cltd
push
out
xor
mov
fisttps
adc
sbb
sbb
sbb
push
adc
imul
jl
sbb
push
xchg
loop
and
nop
ret
aaa
and
addl
sahf
fistpl
popfw
nop
lret
jbe
outsb
sub
and
leave
jmp
jns
sub
push
inc
adc
je
outsl
lods
cli
mov
iret
mov
sar
loop
mov
pop
mov
in
stc
push
sbb
push
adc
iret
lods
push
xchg
pushf
imul
sub
jae
pop
sahf
mull
and
xchg
pavgb
cli
adc
push
aam
mov
xchg
mov
xor
pusha
insb
cwtl
push
stos
clc
mov
jecxz
sub
pmulhuw
mov
icebp
mov
fldcw
outsl
clc
sbb
sarb
xor
fucomp
rcrb
and
dec
or
in
mov
mov
jge
ficoms
repnz
outsb
add
fs
ja
jae
and
sbb
call
ja
test
mov
inc
daa
fdivr
push
nop
xchg
das
or
lock
negb
out
outsb
inc
push
shl
sub
mov
mov
loop
stc
in
aas
ja
mov
xchg
xor
or
insb
outsb
inc
ljmp
pop
fisttpll
leave
repnz
cltd
dec
inc
stos
pushf
or
add
add
pop
mov
xchg
jo
nop
push
mov
loopne
sub
das
mov
xor
adcb
fldenv
cli
std
jmp
pop
cmpsb
mov
nop
xlat
sbb
inc
cmpsl
jne
xor
pavgw
cli
adc
mov
mov
xlat
scas
in
inc
in
cwtl
jge
fsubrs
xchg
bound
jb
test
jmp
fsts
cs
repnz
sti
scas
mov
mov
test
out
popa
cli
test
inc
adc
and
inc
fcmovb
push
leave
aad
popf
sbb
pop
jnp
mov
mov
stc
lret
inc
stos
inc
pop
push
icebp
sub
lods
mov
jo
add
dec
lock
fwait
jbe
adc
stos
cmpsl
iret
test
jmp
sub
push
or
lea
adc
inc
jle
sbb
xor
aad
lea
aas
xchg
mov
mov
int3
pop
or
in
mov
ret
dec
sub
aad
xchg
add
cmp
mov
adc
rorb
loop
push
pop
cld
jno
repnz
push
sbb
jl
ret
icebp
out
cmp
inc
data16
cli
mov
test
lds
arpl
inc
pop
xchg
mov
push
shrb
or
ret
int3
mov
cltd
or
js
sub
push
fdivrl
xchg
mov
pop
fs
orl
movsb
int3
out
call
dec
lods
push
pop
jecxz
jecxz
inc
sbb
xchg
inc
and
insb
shlb
mov
out
int
pop
insb
dec
stos
inc
lret
cmp
arpl
xor
andb
scas
popf
cli
lods
pop
pop
loop
xchg
mov
pop
in
and
lea
stos
loop
cli
hlt
pop
jne
repnz
or
aas
push
mov
xchg
or
xchg
out
sub
add
pop
jge
test
call
pop
cmovbe
cmp
lds
push
cmp
out
hlt
push
or
push
mov
inc
pusha
dec
xchg
mull
push
dec
mov
mov
sbb
cmp
add
inc
or
out
add
arpl
mov
cmp
xchg
in
sub
lea
dec
int
test
lods
xchg
or
mov
mov
in
jge
rcl
jno
pop
aam
xlat
cmp
cld
cmpsb
pop
insb
xor
dec
fistpl
imul
jae
jp
dec
xchg
sbb
pop
mov
fwait
xor
mov
cmpsb
inc
sub
aas
pop
orl
cmp
leave
fdivrl
and
in
stos
mov
repnz
pop
inc
stos
andl
aaa
fidivs
add
xor
push
stc
into
aaa
dec
pop
mov
jae
shrb
pop
inc
lods
xor
or
dec
and
pushl
aam
inc
jb
clc
mov
dec
outsb
stos
mov
in
outsb
push
push
lock
test
add
sbb
dec
ja
xchg
jp
out
sahf
sub
push
sub
sub
rcr
mov
into
inc
jno
ret
imul
into
adc
lea
cmp
daa
cmp
dec
and
icebp
mov
cli
loop
addr16
adc
sahf
sti
rorl
rcrl
in
cmp
into
and
fidivrs
in
xchg
pop
rol
out
and
fcomi
push
push
or
sbb
int3
test
mov
fsts
mov
jg
mov
hlt
or
cld
xchg
sbb
push
je
sbb
popa
mov
ret
sbb
jne
call
xor
or
pop
shlb
data16
jno
pusha
leave
rcll
jns
cld
sbb
mov
cmc
or
call
cmpsb
mov
cmpb
mov
rol
adc
mov
inc
sub
pop
test
popa
sbb
sbb
xchg
dec
mov
adc
aas
sub
jecxz
inc
push
pop
icebp
mov
sub
into
add
mov
fsubs
mov
insb
xchg
adc
mov
dec
iret
fisttpl
pop
or
fdivs
sub
in
jmp
es
push
fsubrs
jp
into
popf
and
sarb
and
jnp
dec
sbb
test
into
ds
lcall
aam
shrb
fistl
sbbb
testl
jle
add
repz
mov
xchg
popa
repz
sbb
adcl
adc
cltd
push
filds
sub
enter
lock
stc
pop
int3
xor
filds
or
das
adc
inc
outsb
sbb
mov
add
inc
xchg
repnz
mov
je,pt
inc
push
subb
icebp
sbb
shlb
or
mov
or
fwait
jge
scas
mov
dec
mov
xchg
dec
in
xchg
push
shll
xchg
sbb
pop
test
leave
imul
movhps
nop
into
rorl
repz
call
mov
movsb
lock
sub
test
nop
push
inc
lret
subb
mov
add
cli
and
mov
lea
jp
fisttpl
mov
sahf
les
aaa
push
leave
arpl
cmpsl
cld
lds
jae
loope
mov
cmp
jmp
aaa
outsb
pop
ljmp
cld
cld
adc
jns
sub
shl
cmp
mov
and
imul
pop
cmpsb
notb
out
add
dec
scas
mov
push
xlat
mov
add
scas
push
sbb
sti
pop
in
xor
gs
pushf
jne
xchg
push
mov
iret
mov
cmp
jae
fistl
push
data16
mov
aad
movsl
mov
xchg
sub
sahf
stc
aas
imul
outsl
xchg
push
mov
shlb
frstor
dec
inc
out
insl
push
sub
scas
iret
adc
popf
cwtl
sub
add
repnz
int3
or
cmp
test
push
lods
in
mov
inc
dec
xor
cmp
sbb
cmp
imull
jge
sbb
xchg
gs
call
push
fildl
push
jmp
stos
aam
shlb
inc
push
pushf
mov
xchg
fcmove
sbb
pusha
mov
mov
sbb
scas
sub
pusha
ret
es
ds
add
ret
inc
fnstsw
mov
movsl
popf
mov
mov
mov
dec
idivl
lods
jae
out
aam
das
in
jbe
fisubrs
mov
pop
mov
jnp
inc
or
dec
adc
loope
jb
out
xor
addr16
mov
adc
outsl
jge
sbb
sahf
repz
out
pop
xor
inc
mov
cs
sahf
std
test
pop
xchg
pop
out
shl
or
movsl
iret
cwtl
fmuls
ds
push
test
shr
inc
and
arpl
jns
stc
fidivl
int3
fwait
sub
cmp
jae
popf
inc
testb
push
shll
out
cwtl
fldcw
push
lods
add
mov
pop
sbb
mov
mov
cwtl
outsb
mov
scas
jb
inc
jl
push
sub
fwait
mov
loop
adc
in
jle
or
mov
stos
mov
enter
cmp
mov
stc
add
xor
cmpl
and
int
lret
xor
sub
sbb
setg
lahf
lock
aas
es
call
pop
into
mov
leave
jae
stc
or
repnz
in
cli
imull
sbb
leave
add
mov
sub
jae
ret
in
fs
je
push
dec
jle
xor
push
push
insb
mov
outsl
pop
loope
aas
jno
inc
stc
xchg
test
sbb
cmpsb
inc
daa
cmpsb
or
pusha
xchg
bound
mov
insl
push
out
popa
mov
mov
cli
or
ret
repnz
push
sbb
aad
cltd
aaa
jbe
xchg
addb
repnz
mov
popf
sbb
loop
ja
cmpsl
leave
mov
jne
loop
xchg
les
inc
jae
push
and
dec
out
pop
pop
xchg
mov
mov
cmp
idiv
xchg
and
push
push
rcrb
dec
pop
mov
mov
ja
lcall
mov
movsl
fmuls
pushf
push
flds
and
add
paddusb
ret
mov
pop
in
in
jp
faddl
ds
aaa
mov
ljmp
adc
in
ret
pop
daa
xchg
mov
sbb
xor
pop
addr16
mov
out
fdivrp
daa
cltd
nop
add
int3
in
cltd
sub
mov
cld
nop
push
shlb
push
sub
mov
clc
add
mov
xor
leave
mov
sbb
into
cld
lcall
mov
cmc
int3
call
test
ss
mov
and
push
frstor
repnz
jne
rorl
mov
mov
sub
add
or
inc
cmp
js
imulb
or
insl
pop
jnp
popf
xor
and
imul
adc
in
adc
xchg
push
or
loop
cmp
data16
mov
mov
jmp
jge
test
ds
lds
insb
ss
sahf
shll
sbb
mov
xchg
adc
pop
or
stos
push
cli
sub
fidivl
mov
sub
sub
cmp
mov
dec
sub
adc
and
aas
pop
loop
iret
ss
jle
pop
outsb
or
aaa
out
adc
movsl
xchg
aas
jne
push
and
iret
into
pop
inc
bound
adc
addr16
cmp
pop
aaa
add
jb
ja
lret
sub
test
cli
call
hlt
add
jmp
pusha
jge
pusha
dec
mov
pop
daa
xchg
pusha
mov
or
pusha
adc
lds
push
xchg
cmp
jne
bound
sbb
mov
lods
xchg
mov
inc
stc
dec
lock
cmp
loop
mov
mov
je
xlat
jg
gs
les
xchg
add
and
lods
inc
jb
shll
lcall
add
xchg
mov
xor
jmp
test
stos
lods
je
addl
out
push
and
adc
jno
stos
pop
mov
pop
push
pushf
sarl
sahf
cld
jp
stos
out
xchg
dec
add
mov
pushf
mov
test
xchg
shlb
mov
sub
aas
in
leave
push
push
adc
pop
or
icebp
nop
psubq
cli
cmp
xchg
cwtl
sbbl
jecxz
pop
xchg
adc
dec
pushf
inc
pop
cmp
add
mov
xchg
adc
xchg
xchg
popa
pop
enter
insb
scas
rcrb
stos
sub
add
imul
sarb
or
pop
cmp
mov
js
sbb
jne
push
testb
xor
sub
add
popf
lahf
xlat
or
inc
in
or
pop
push
inc
popa
orb
in
sub
sbbl
fimuls
cmp
mov
push
outsb
dec
pushf
mov
cmpsl
mov
mov
sti
jp
mov
mov
jo
push
jecxz
subl
mov
shrb
aam
aaa
cld
test
jmp
std
pop
xor
fistpl
mov
push
or
and
or
or
pushf
inc
push
fadd
shl
cld
mov
xor
xchg
pop
pop
je
jmp
incl
pop
push
imull
mov
movsb
movsl
xchg
add
inc
inc
or
xor
clc
pusha
mov
test
xchg
fildll
push
pop
push
push
dec
cmp
and
bound
data16
sub
dec
es
push
push
add
jnp
cmpsb
ljmp
lahf
popa
sarb
cli
sbb
leave
inc
add
sub
mov
mov
iret
fistpll
shr
adc
push
test
imul
popa
clc
sub
inc
stos
push
fnstenv
jl
int
xor
mov
stos
lock
ret
icebp
cmp
bound
data16
adc
jmp
adc
scas
mov
mov
cmc
mov
dec
push
shr
sbb
or
push
inc
daa
inc
xor
bound
shll
jne
neg
push
and
or
decl
xchg
xchg
loop
or
sbb
pusha
mov
and
mov
push
xchg
clc
das
test
mov
dec
scas
xor
repz
mov
pop
shll
adc
jg
push
xor
clc
mov
mov
fsub
mov
jp
andl
dec
add
test
shlb
jbe
xchg
push
movsb
xchg
sbbl
lret
mov
in
loop
jo
push
insl
xchg
fnstenv
das
stos
jne
jbe
fcomi
hlt
push
leave
jnp
dec
xchg
and
inc
push
cmpsb
int
fnstenv
and
rolb
sub
mov
aas
cwtl
pop
adc
pop
cltd
mov
aad
popa
lds
clc
xchg
aam
loop
jno
pop
xchg
ja
adc
subb
dec
in
popf
push
in
cmc
xchg
dec
xlat
loop
jp
or
pop
pop
je
insb
les
adc
and
into
and
fistl
or
call
add
das
inc
push
test
mov
repz
test
mov
add
add
mov
lcall
xlat
testb
enter
mov
in
or
mov
subb
and
lods
inc
adc
inc
push
pusha
pop
push
push
inc
and
xor
add
adc
loopne
lock
rcl
shlb
nop
andb
pusha
inc
push
push
inc
and
xor
add
adc
loopne
lock
rcl
shlb
nop
andb
outsb
and
inc
mov
xor
adc
add
icebp
lock
rcl
leave
mov
cltd
js
je
sub
sbb
and
nop
nop
shl
cmovp
shlb
jg
outsl
clc
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
hlt
jge
mov
js
fimuls
xor
loopne
add
add
add
add
add
add
add
push
add
add
add
add
add
add
and
sub
movb
add
inc
add
add
cmp
add
or
movb
add
add
add
add
int3
add
add
xor
add
push
add
add
add
add
add
add
int3
add
add
add
push
add
add
add
add
add
add
mov
movsl
add
js
cs
add
add
cmp
or
je
or
or
pop
add
add
add
add
add
or
add
push
add
add
add
add
add
or
xor
xor
lds
and
push
add
add
pop
add
add
add
jl
push
add
add
or
jne
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
pop
add
add
add
add
push
add
add
add
add
arpl
inc
add
jo
jb
push
add
add
add
add
add
sbb
movsl
add
add
in
add
dec
add
add
add
add
mov
add
xor
aad
lods
add
out
xor
push
add
add
add
add
add
movsl
add
scas
add
add
add
add
lods
add
lds
push
add
add
add
add
loopne
sub
add
add
add
push
add
add
add
add
add
or
outsb
add
add
add
or
xchg
add
add
xor
dec
add
add
push
add
xor
add
add
add
add
leave
add
add
out
movsb
add
add
mov
pop
add
add
jo
lods
add
add
pop
add
add
add
add
add
add
sub
movb
add
add
add
push
add
and
and
or
inc
add
add
add
add
add
scas
add
stos
add
add
add
add
test
add
add
add
add
add
fiaddl
cmp
sub
inc
add
add
add
add
add
add
add
add
add
add
jne
nop
add
add
and
rolb
dec
add
inc
add
ja
fildl
sbb
or
add
fiadds
ret
add
add
add
add
add
add
out
pushf
add
add
add
add
add
add
add
add
add
movb
add
add
add
jo
or
add
add
add
or
or
or
pop
add
add
add
add
cmp
or
arpl
jp
lahf
add
add
add
add
je
or
test
push
add
adc
add
add
mov
adc
add
add
or
sbb
movsb
add
add
add
add
adc
dec
add
add
add
add
add
add
add
rolb
add
add
nop
add
add
add
mov
sahf
xor
lret
cmpsb
cmp
out
hlt
cmp
fwait
inc
psrlw
aam
test
sub
filds
fstps
sbb
les
adc
xchg
divb
pop
je
pop
ret
cmp
addr16
loopne
stos
in
mov
in
mov
mulb
inc
out
sbb
in
inc
dec
cmp
arpl
or
push
pop
gs
enter
jne
popf
pushf
push
ret
add
test
xchg
add
xor
ljmp
inc
push
pop
loop
in
inc
fstpl
adc
ret
or
pop
cmp
jns
mov
sub
pop
add
ds
bound
push
jge
test
mov
test
dec
lahf
ss
xchg
jb
push
pop
push
or
movsl
lds
push
pop
rcrb
jno
outsl
mov
fcoms
mov
xor
jg
nop
cmp
sub
inc
cltd
out
xchg
jnp
push
sti
sbb
pushf
ljmp
jmp
jnp
fwait
and
xor
iret
mov
fbstp
sbb
test
fidivs
mov
push
adc
lahf
movsb
sub
test
push
ljmp
pop
push
xchg
lcall
pop
pop
jl
nop
push
push
ficompl
lret
movsb
or
das
repz
mov
mov
aaa
stos
test
test
arpl
pop
push
jo,pn
jg
loopne
mov
addl
loope
or
test
jmp
ja
aaa
fisubs
insb
lock
sub
in
sub
lds
jno
push
lcall
cmp
cmpsb
add
aaa
lahf
xchg
leave
xchg
divb
cmp
adc
xchg
and
sahf
sbb
xchg
mov
idivl
insl
pop
imul
mov
cli
outsl
ja
adc
mov
jmp
cli
test
scas
mull
test
in
fsubrs
xor
push
pop
pavgw
mov
dec
lret
and
sti
dec
imul
mov
loope
pop
cmp
xor
inc
scas
and
push
iret
out
cmp
ja
lcall
or
lods
mov
pusha
clc
incl
mov
and
pop
ss
das
mov
jge
les
and
jae
jmp
iret
xchg
sub
xchg
movsl
lahf
mov
insb
ret
xchg
ds
nop
mov
or
aad
or
pop
inc
neg
sarb
push
stos
fs
push
fstps
ret
imul
mov
ds
rcrl
repnz
inc
iret
adc
das
cmp
hlt
ficoms
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
