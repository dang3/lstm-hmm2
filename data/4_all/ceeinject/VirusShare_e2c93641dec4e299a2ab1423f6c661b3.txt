call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
sub
imul
cmp
repz
xchg
imul
fst
int
cmp
pop
or
inc
pop
push
xor
test
xchg
xchg
in
fst
int
cmp
rorl
imul
cmpsl
mov
imul
test
movsb
mov
inc
jne
or
inc
push
xchg
pop
mov
mov
cmp
mov
adcb
sub
movsl
aas
inc
sahf
mov
jge
call
and
dec
push
js
jl
std
data16
fstpl
ja
daa
and
ja
or
jne
in
xor
dec
and
imul
xor
mov
js
or
inc
pop
data16
mov
inc
in
xchg
sbb
push
cmc
adc
xlat
sub
mov
dec
xlat
sbbb
pop
insl
addr16
out
js
xchg
mov
imul
xchg
frstor
mov
ljmp
or
dec
incb
std
idivl
adc
aaa
sub
addr16
insl
inc
pop
out
dec
push
mov
mov
fnsave
insb
inc
sbb
add
sbb
sbb
imulb
mov
nop
andl
mov
or
sub
sub
into
sti
call
mov
xchg
mov
ja
push
push
inc
pop
push
dec
cmpsl
mov
xchg
out
imul
fst
int
cmp
pop
or
inc
pop
push
dec
cmpsl
mov
xchg
out
imul
fst
int
cmp
dec
iret
sub
sbb
in
push
mov
and
mov
push
and
jo
decb
lea
push
jb
lods
iret
pushf
xor
stos
nop
sub
out
out
loopne
loopne
test
inc
enter
imul
fxch
push
or
mov
xchg
cs
pop
mov
mov
lods
pop
or
adc
data16
arpl
or
testb
mov
in
adc
ret
push
add
cmp
lock
into
jmp
cli
xorl
xlat
mov
mov
jge
hlt
rolb
xchg
mov
int
dec
xchg
loopne
or
adc
cs
adc
mov
inc
inc
je
push
icebp
mov
sbb
sbb
cwtl
lret
inc
jle
stc
push
jo
scas
xchg
pushw
mov
lock
sahf
push
fidivrl
jmp
pop
push
leave
sub
jge
jp
adc
les
xchg
movsb
sti
or
xor
stos
mov
sarb
pop
xor
mov
iret
sarb
orl
call
fcmovne
addr16
in
lea
out
leavew
in
incb
into
inc
push
stos
lds
aam
and
fcmovbe
or
hlt
in
and
fs
iret
out
fmull
fbld
pop
int3
leave
mov
or
sub
push
jbe
lods
mov
and
pop
sbb
jbe
sub
aam
scas
aam
hlt
cmp
gs
fnstcw
movsb
or
xchg
in
sbb
and
cltd
pop
pop
cld
fwait
mov
cli
push
into
daa
sub
sti
jne
xor
inc
adc
pop
movsb
hlt
pusha
pushf
fldenv
mov
mov
jo
or
into
sub
or
cmpsb
inc
cltd
mov
stos
xor
cli
loope
popf
std
je
pop
imull
jmp
into
adc
pop
bound
pushf
outsb
jecxz
push
rorb
jb
rclb
inc
test
lret
sbb
loopne
rcr
dec
leave
test
cmpsl
std
test
pusha
repnz
bnd
pop
sti
cmpxchg
ljmp
sub
sti
and
sbb
stos
mov
mov
jecxz
push
jg
and
orb
xor
cmp
popa
mov
sbb
add
fldl
inc
orb
pop
cltd
adc
loop
stos
jbe
jns
xlat
adc
aas
adc
fwait
adc
xor
add
fistpll
sub
push
mov
jp
xchg
push
dec
jl
jo
xchg
jnp
iret
fdivp
sub
add
adc
rcll
inc
js
nop
push
xchg
in
enter
jmp
jnp
jbe
add
rol
sub
lret
subl
test
jno
inc
pop
shll
je
sti
add
in
call
jb
mov
ljmp
int3
mov
inc
popf
pop
cmp
push
sbb
jg
mov
outsb
xchg
xlat
xchg
in
mov
cmp
xlat
pop
add
ljmp
mov
dec
cmp
or
xor
inc
add
into
pop
or
int3
pusha
mull
cli
mov
leave
lock
test
popa
iretw
dec
test
mov
jle
repz
xchg
outsl
mov
sub
inc
test
pusha
movsb
mov
sub
xchg
sub
xchg
fistl
icebp
mov
test
outsb
movsb
lods
jo
test
les
xchg
dec
mov
fucomi
sbb
inc
mull
into
aad
sbb
stc
push
shll
icebp
pop
jmp
repnz
xchg
cld
xchg
add
shr
cs
xchg
fidivrs
scas
push
lret
cmp
imul
pop
and
out
shlb
xor
cli
out
jmp
daa
inc
in
dec
mov
jge
imul
add
jg
sbb
sub
mov
mov
adc
movsb
pop
mov
sbb
loop
push
or
iret
push
or
sub
inc
inc
out
shrb
cmp
mov
add
adc
xchg
lods
add
pop
jmp
out
jp
addr16
cmpl
jge
xchg
aaa
pmullw
jl
inc
test
and
xchg
push
push
ss
cmpl
pop
push
or
cmp
inc
jge
cmc
mov
aam
push
in
ja
push
stos
pop
or
addr16
xchg
push
insb
cmp
push
movsb
leave
cmpsb
shll
outsb
aaa
fnstsw
inc
movsl
je
dec
in
daa
je
pop
mov
add
dec
pusha
mov
cmp
loope
inc
into
mov
ljmp
mov
inc
pop
fimull
cmp
cmp
ljmp
push
mov
pop
pop
out
adc
mov
jns
jle
ds
dec
cmp
dec
sbb
fs
call
fisttpl
pop
lret
or
jle
dec
imul
divl
data16
or
out
mov
leave
imul
in
push
push
inc
jmp
push
aaa
outsb
nop
mov
cmp
pop
rcll
dec
leave
push
xlat
andl
mov
lods
push
mov
mov
cmpsb
mov
fldpi
dec
jno
add
sbb
cli
fdivs
xor
inc
int3
add
inc
cmpsl
add
sahf
mov
fldcw
mov
jno
adc
add
mov
cmp
xor
jbe
ja
or
mov
shrb
fsubs
test
imul
cltd
cmp
and
popa
test
adc
push
loop
mov
and
adc
jmp
push
push
mov
inc
cmp
and
fimuls
movsl
lock
call
daa
fimull
inc
std
ja
fwait
daa
dec
sbb
and
data16
dec
inc
cs
repz
xor
lea
ljmp
adc
icebp
out
sub
hlt
aad
push
add
cltd
mov
adc
lret
sbb
pop
mov
pop
loopne
xchg
xchg
fcomps
rclb
psrad
add
popf
mov
dec
out
cmp
add
aad
push
ja
lock
sbb
push
pushf
sub
cmp
decl
mov
fs
addr16
push
push
int3
and
test
sbb
sub
dec
push
jmp
mov
add
mov
test
in
or
scas
insb
and
or
mov
sub
inc
fninit
adc
cmp
repz
push
in
adc
sub
or
mov
inc
add
xor
ret
jg
int
out
rorb
gs
inc
pop
xor
or
sub
lods
repz
test
add
and
pop
test
stc
dec
inc
dec
rorb
jno
adc
icebp
stos
mov
jno
fwait
jge
push
enter
cs
hlt
or
mov
lds
test
inc
xor
dec
jne,pt
adc
cmpsb
stos
rcr
jmp
add
mov
iret
jecxz
das
xchg
jle
mov
inc
adc
lahf
mov
adc
les
mov
jb
mov
iret
imul
sub
ficoms
add
sbb
or
add
xchg
mov
or
or
adc
add
orl
ficoms
jbe
mov
fwait
mov
lds
mov
push
movsb
pop
jne
xor
jo
les
cmpb
ljmp
shrl
and
adc
dec
dec
mov
add
aam
jle
lahf
stos
push
out
push
sbb
dec
inc
and
pusha
pop
xor
lods
add
andl
std
mov
je
mov
adc
imul
out
xchg
icebp
xchg
push
insb
repnz
inc
push
fwait
shll
loopne
sub
adc
mov
or
sub
jo
mov
jge
pusha
and
jno
out
cmp
divl
dec
scas
aam
xchg
dec
cld
sub
jbe
lods
xchg
ja
fsubl
loope
mov
into
nop
fiaddl
test
ljmp
out
test
mov
insl
and
arpl
and
mov
mov
dec
cli
jmp
pusha
sbb
ficompl
pop
jnp
mov
mov
add
add
or
cmp
sbb
cmpsl
pop
adc
push
push
mov
les
cmp
sub
movsb
mov
and
js
pop
inc
cmpsb
sbb
rcl
xchg
jnp
lea
push
push
xor
negl
inc
jmp
mov
cld
icebp
aaa
sbb
icebp
and
sbb
das
mov
inc
daa
add
or
pop
sub
mov
dec
jl
cmp
into
xor
mov
mov
adc
inc
lock
aad
pusha
sub
adc
push
xchg
push
xor
mov
imul
or
sar
loopne
and
lahf
dec
mov
loope
inc
jb
inc
daa
mov
xchg
dec
stos
push
mov
or
mov
in
jne
push
loope
pop
or
lods
adc
cwtl
in
mov
int
incl
jle
jns
and
fwait
test
xor
stos
xor
jmp
push
fcmovnu
fisttpll
lret
jnp
jb
fldcw
or
lods
adc
jb
xlat
es
adc
mov
dec
mov
lock
inc
xchg
scas
in
dec
stc
js
pop
decl
inc
push
mov
aaa
ds
dec
add
lret
mov
gs
mov
mull
adc
inc
pop
into
and
outsl
mov
out
xchg
xor
ret
xchg
mov
jns
outsl
les
mov
adc
push
jns
nop
pop
lds
adc
rcr
bound
idivb
out
test
pop
push
cwtl
pop
pop
divb
cmpsb
aam
pop
pop
add
stc
jge
jne
pop
les
jae
outsl
dec
mov
adc
mov
das
jnp
divl
into
negl
fadds
repnz
outsb
cld
loope
cmc
lods
rorl
dec
or
cmpb
cmpsl
or
and
dec
in
adc
mov
jle
inc
mov
pop
pop
and
in
push
dec
xchg
jle
test
and
into
cmp
xor
jle
shr
popa
daa
push
lds
dec
aaa
push
shl
and
dec
lret
clc
push
mov
lahf
repnz
xor
lods
and
int3
mov
movsl
fsub
dec
dec
sub
pop
xchg
movl
adc
leave
out
test
or
fucomi
stc
std
mov
bound
ja
jns,pt
inc
arpl
and
filds
lods
mov
loope
outsl
sub
loopne
shl
frstor
jo
sub
int
sbb
mov
push
add
dec
pushf
fwait
cmc
pop
lcall
mov
mov
daa
xor
scas
jne
into
pop
push
adc
pop
fsubrl
and
and
cmp
xor
iret
repz
jno
pop
inc
xor
jmp
ds
out
jb
sbb
push
ss
jnp
movsl
jnp
xlat
xor
mov
fs
sub
inc
scas
mov
ret
lret
push
adc
ret
mov
pop
out
jle
xorl
daa
lock
sub
shrb
xor
dec
ret
mov
bound
cld
mov
sub
ret
jnp
ret
iret
cmp
cs
stos
xor
sti
or
lock
in
push
call
js
std
add
lds
shll
ret
repz
ljmp
pop
fidivl
fcomip
dec
mov
arpl
pop
int
xchg
mov
or
movsb
shll
mov
and
jo
mov
cmp
test
pushf
mov
pop
mov
cltd
dec
clc
mov
jns
mov
cmpsl
bnd
jbe
imul
pop
loopne
push
pop
dec
aad
mov
inc
pop
xchg
push
mov
sub
xor
add
lods
fwait
es
adc
jmp
push
rclb
mov
cltd
sub
dec
cmpsb
shrb
pusha
loope
add
dec
and
add
loope
iret
lds
mov
add
fsubs
inc
cs
cmp
sub
pop
add
inc
subb
lds
js
repnz
scas
rcr
cmp
es
cs
sub
ret
push
sub
pop
lcall
ljmp
jno
cmove
cs
mov
inc
hlt
cli
mov
add
adcl
lret
sbb
xchg
mov
arpl
jbe
cmc
data16
mov
sbb
scas
jb
bnd
sub
fs
popf
out
sbb
push
inc
jg
pop
nop
gs
pop
and
dec
sub
cwtl
movsb
mov
test
lret
jbe
mov
mov
xlat
push
in
jae
xlat
push
push
xor
nop
repnz
repz
test
mov
xor
or
pop
aaa
lods
repnz
sarb
lcall
jmp
insb
xchg
stc
push
sub
insb
stc
pop
add
mov
push
mov
adc
loopne
aas
sti
xor
cli
rcll
int
adc
popf
mov
pusha
clc
call
dec
jne
ret
in
mov
movsb
lcall
dec
hlt
fisttpl
aam
cmp
adc
loope
xor
bound
int
out
xlat
aas
pop
sub
mov
sbb
push
data16
cmpl
mov
pop
mov
cmpsb
inc
add
ja
popa
and
mov
movsb
filds
repz
sbb
mov
sbb
sbb
adc
int
xor
mov
fisubs
nop
and
cmc
mov
int
lea
mov
fwait
clc
scas
sub
fdivr
ja
push
mov
mov
add
insl
out
jmp
loopne
jmp
pop
mov
stos
adc
outsb
and
clc
sbb
xor
fildl
hlt
xchg
sar
inc
mov
mov
and
dec
mov
dec
and
aad
push
fcoml
mov
outsb
fcomps
or
mov
xlat
mov
aad
ret
and
cmc
pop
out
imul
jbe
enter
dec
outsb
push
loopne
dec
push
test
lea
mov
bound
or
push
mov
xor
cltd
in
clc
int3
mov
lret
outsl
int
rol
cmp
or
leave
mov
testl
add
push
mov
call
mov
mov
mov
jp
mov
repz
push
shlb
jge
mov
inc
push
roll
cmp
sub
aam
dec
add
add
push
sarb
rcrb
mov
stc
mov
adc
imul
scas
dec
cmp
mov
mov
aas
fiadds
mov
iret
aad
in
jge
test
cmp
xchg
scas
stos
pop
jo
out
inc
mov
sbb
adc
in
mov
mov
in
push
mov
cmp
xor
fs
out
mov
mov
jne
lock
mov
sub
mov
push
dec
adc
xor
sub
xor
push
push
subb
std
lret
push
mov
bound
jg
mov
cltd
jge
inc
sbb
in
aas
orb
cs
mov
add
repz
outsb
sbb
in
mov
jl
call
sub
push
ds
add
push
and
dec
mov
jle
jle
je
adcb
js
in
roll
cmpsb
push
orb
scas
cmpsb
mov
daa
jl
icebp
cs
lret
pushf
mov
fisubs
loopne
cmp
mov
js
dec
dec
jno
arpl
insb
pop
or
fs
in
jmp
hlt
or
sbbl
jb
xchg
clc
je
xor
popa
mov
xchg
mov
loop
jg
adc
push
cmp
adc
mov
fists
mov
inc
imull
shlb
dec
pusha
daa
leave
daa
int3
dec
xor
push
div
add
mov
arpl
dec
inc
inc
push
mov
test
icebp
imul
mov
filds
jl
xchg
pop
ljmp
aaa
es
insb
lret
fwait
scas
cld
jge
xor
imulb
popf
mov
mov
shlb
rcl
lcall
pop
out
push
push
xor
or
int3
repz
mov
addr16
inc
cmp
add
sub
cltd
add
shr
sub
or
xchg
mov
push
mov
dec
out
jbe
adc
cltd
jg
cwtl
push
push
lds
push
jmp
test
pshufw
push
adc
xchg
push
lcall
push
sti
out
insb
jg
out
pop
jge
sub
dec
shll
fldt
dec
sbb
repz
or
ret
pop
sub
cmp
fwait
xchg
xor
xchg
xor
icebp
push
pop
lcall
fdivl
sbb
movsl
fdivl
adc
push
fsubl
push
loopne
pusha
in
jo
decb
sub
xlat
and
and
xchg
inc
push
xchg
and
aad
cld
pop
int3
mov
cmp
xchg
jb
imul
jp
sub
push
jge
and
es
pop
cmp
popf
aam
cld
cld
push
jl
fcos
fcmovb
lock
jnp
stos
out
movsb
call
repnz
cmp
mov
mov
or
mov
insb
xchg
sbb
jbe
xchg
insb
notl
jle
dec
sbb
insl
cld
fcom
lea
aad
adc
xor
movsb
icebp
sbb
ss
cmpsl
imul
lods
fdivrl
push
out
mov
pop
pop
cmp
mov
lock
ds
mov
jmp
cmp
xchg
aad
pop
popf
push
fs
cwtl
movsb
mov
pop
lret
xor
test
icebp
mov
and
push
adc
and
jne
mov
jo
je
jbe
pop
adc
push
and
jmp
arpl
outsl
pop
stos
jecxz
in
inc
in
pushf
test
mov
ds
push
hlt
sub
testb
imul
lret
xor
fsubr
pop
sbb
mov
fs
inc
jb
mov
btc
jb
fs
lods
pop
pop
ret
out
je
cld
cmpsl
inc
or
sbb
mov
jle
scas
stos
das
fwait
lret
cltd
testl
dec
mov
imul
enter
fwait
stc
push
or
inc
jecxz
adc
shll
into
cwtl
int3
mov
outsb
ret
scas
shl
cs
xlat
or
insb
popf
inc
pop
cltd
jecxz
lret
cmp
es
add
inc
lret
mov
mov
or
dec
lret
scas
mov
repnz
mov
and
mov
rolb
cltd
add
pop
cmp
insl
sbb
aad
sbb
mov
adc
sub
sahf
loope
mov
popf
mov
inc
push
mov
sub
ret
ljmp
mov
or
mov
sub
ja
ds
adc
pusha
lea
jecxz
inc
pop
add
std
xchg
xchg
mov
test
out
movsl
outsb
push
sbb
in
mov
leave
sub
jg
out
mov
notb
xchg
push
and
fldt
and
xchg
aad
or
sbb
mov
mov
into
inc
add
xor
xor
in
test
inc
inc
dec
pop
jo
aaa
lret
rolb
loopne
dec
or
or
nop
adc
inc
out
nop
out
imul
jecxz
jns
nop
mov
pop
out
int3
repz
sub
pop
fsubrs
dec
xor
bound
sub
cmp
ds
icebp
push
mov
scas
fmulp
lods
or
xor
cmpl
scas
jecxz
ret
xorb
cmp
mov
or
pop
pop
popf
lods
adc
pop
push
out
sti
pop
dec
xchg
movsl
mov
add
and
test
push
xor
xor
xchg
repz
mov
test
push
hlt
aas
lahf
ret
inc
pop
dec
stos
inc
popa
mov
jl
jo
fldcw
outsb
push
daa
push
gs
xchg
and
push
or
xchg
std
dec
mov
and
mov
pop
jnp
jb
scas
jb
ja
test
les
stos
scas
or
adc
cld
scas
scas
int3
lret
cmp
ja
aam
xor
das
sub
and
leave
lcall
clc
mov
add
cmp
adc
sti
int3
sar
sbb
xor
xchg
and
fsubl
mov
loope
or
inc
pop
push
dec
cmpsl
mov
xchg
out
imul
fst
int
cmp
pop
or
inc
pop
push
dec
cmpsl
mov
xchg
out
imul
fst
int
cmp
pop
or
inc
pop
push
dec
mov
popf
xchg
out
out
in
ret
fucom
int
cmp
aas
or
inc
pop
xlat
dec
cmpsl
mov
xchg
cli
nop
jne
adc
and
xor
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
stc
loope
icebp
fcmovb
lret
cmc
fcomp
mov
popa
mov
inc
dec
push
cmp
sub
add
adc
ror
mov
orl
push
jp
sub
sbb
or
inc
loope
icebp
dec
rcll
movsb
mov
mov
xor
das
push
push
jae
push
dec
fs
adc
mov
jo
andb
add
es
push
mov
fcoms
jmp
dec
cs
pop
sub
lea
cltd
mov
push
adc
inc
mov
vpcmpeqd
add
scas
daa
scas
fdivrl
xchg
xchg
dec
inc
dec
xchg
sub
outsl
add
adc
push
xor
shlb
inc
mov
mov
jnp
push
fidivrs
sub
decl
xor
pop
push
sub
mov
add
pop
and
jo
mov
sub
push
inc
add
shlb
push
mov
dec
mov
pusha
roll
push
mov
jns
sbb
adc
ror
pop
mov
sub
mov
inc
jp
jb
and
sub
or
mov
xchg
aad
lock
in
loope
or
das
aas
dec
dec
inc
dec
jae
outsl
je
mov
stos
xchg
iret
lahf
outsl
out
fists
pop
pop
xor
jae
dec
jg
mov
test
int
mov
orl
push
cmp
sub
sbb
or
cli
loope
icebp
fcmovb
lret
mov
mov
pop
inc
dec
push
cmp
sub
sbb
or
cli
loope
in
xor
add
inc
cmpsl
hlt
sub
adc
mov
sbb
cmpsl
bswap
arpl
lock
push
mov
xlat
pop
mov
fnstsw
mov
adc
imul
mov
aam
inc
inc
cmp
iret
scas
xor
cs
repz
adc
adc
mov
rcrl
mov
inc
fwait
loope
int
lods
pusha
or
inc
and
stos
fadds
lds
ds
mov
pop
das
sub
rclb
jle
pusha
lods
lods
out
lahf
stc
push
sarb
rcrl
out
xchg
popf
pop
mov
int
test
aad
cmp
or
and
and
mov
lea
cmp
fdivs
ja
cmp
adc
push
xor
daa
mov
out
scas
jno
repnz
push
subl
xor
cmc
cmp
dec
mov
xchg
dec
aad
and
mov
incb
out
test
sbb
std
out
out
and
add
adc
xorl
popa
mov
int3
add
cmp
fnstcw
data16
pop
add
adc
rcll
xchg
into
push
push
push
and
mov
cmpps
imul
push
xchg
jo
out
int3
mov
std
jecxz
jle
mov
add
adc
or
ficoms
mov
fiaddl
repnz
stc
mov
mov
shll
inc
mov
je
cmp
jg
cmp
push
and
shll
pop
bound
jae
mov
jle
xchg
jmp
mov
imul
rorl
outsb
test
movl
int
dec
xor
jae
mov
roll
inc
nop
dec
or
ret
insl
aad
out
ret
or
cmp
sub
jno
shll
mov
insb
jno
jb
add
push
push
cmp
jne
movsl
imul
ret
lahf
push
or
fmull
sbb
jno
xor
sbb
addl
or
sbb
fstp
add
mov
mov
pop
xchg
cmc
push
arpl
jne
xchg
pop
aam
pop
sahf
stos
jb
scas
adc
loop
pusha
inc
outsl
mov
jecxz
test
iret
jne
loope
pop
aam
inc
mov
cli
pcmpgtb
out
jno
mov
out
add
aaa
mov
mov
out
and
in
jbe
add
stos
lea
or
cmc
daa
scas
push
push
popa
adc
loop
mov
repz
dec
icebp
hlt
cltd
mov
mov
ret
push
shr
sub
aas
push
adc
into
xchg
repnz
ljmp
pusha
mov
test
jmp
sbb
stos
jecxz
lods
xlat
sub
fldenv
jb
cmp
mov
inc
jle
movsl
add
roll
cmp
adc
pop
int
cld
xchg
add
push
je
mov
ljmp
fidivl
add
cmpsl
test
lcall
inc
add
je
pop
in
es
aas
lret
ffreep
hlt
and
movsl
in
js
cmp
lds
xor
cmp
xchg
jg
inc
scas
push
fwait
mov
or
lods
sbb
movsl
dec
or
pop
negb
fldl
fdivl
cmpsl
lods
movsl
in
outsb
pop
stos
xchg
popa
and
rolb
pop
sub
stc
cltd
xchg
fwait
xchg
ret
outsl
rorl
mov
add
add
cmpsl
mulb
rcrb
push
es
sbb
andl
pop
je
icebp
jns
adc
div
adc
and
add
addl
aaa
jnp
pop
jge
xchg
push
mov
inc
shll
sahf
pop
push
sbb
sbb
add
jecxz
inc
mov
pop
insb
es
sbb
subb
cmpsb
lock
cmp
faddp
into
sbb
pop
xchg
mov
fs
mov
dec
inc
imul
xchg
loopne
adc
nop
out
jmp
sub
ror
int
rcl
dec
stos
jns
popa
loopne
test
mov
xchg
cltd
and
sub
pop
outsb
adc
or
gs
lds
cmp
dec
mov
sbb
sub
xchg
xchg
mov
gs
sbb
dec
xor
add
aas
decl
jb
notl
jle
ljmp
shlb
imul
dec
ftst
sbb
fsubrs
ljmp
pop
xchg
mov
cbtw
push
pop
fs
std
sbb
mov
stos
mov
and
sbb
dec
sahf
xchg
jo
sbb
enter
in
pop
jl
pusha
mov
mov
sub
jo
pop
ds
jbe
mov
jnp
xorl
mov
ja
cmpsb
mov
in
inc
cld
xchg
gs
out
loopne
inc
pop
and
dec
inc
sbb
jmp
push
push
clc
jbe
inc
incl
add
fidivrl
add
mov
loopne
in
das
mov
mov
xor
ffree
mov
fsubrl
push
xchg
mov
jnp
inc
pop
xor
mov
adc
cmp
addl
push
sbb
pop
in
mov
cmp
and
rcrl
cmc
aas
ss
jmp
pop
mov
clc
inc
out
mov
mov
insb
sbb
insb
mov
xor
divl
jne
pop
lret
sarl
push
gs
ret
in
rorb
push
testb
inc
mov
lret
push
data16
into
xorb
sarb
cli
sahf
dec
out
push
adc
sarb
mov
push
sbb
inc
pop
gs
sub
loopne
xlat
sub
inc
gs
popa
xchg
testl
popf
and
mov
push
pushf
pop
into
jg
inc
leave
div
dec
inc
sbb
xchg
lahf
test
inc
push
clc
dec
push
subb
lahf
pop
xchg
cwtl
xor
mov
repnz
cmp
aaa
push
pop
scas
ja
imul
test
mov
push
cs
add
inc
xor
mov
push
sbb
jb
fistps
in
mov
stos
xor
cwtl
test
cmp
push
mov
and
jmp
jnp
pop
sub
add
popa
fisubrs
push
sub
addr16
fwait
movsl
adc
jl
push
push
mov
xor
or
mov
cwtl
xchg
push
repnz
pushf
aam
enter
push
mov
ljmp
add
cwtl
ficoml
lods
cwtl
jo
leave
pop
or
je
xchg
pusha
mov
mov
push
cs
jmp
sbb
mov
sub
fbstp
inc
xchg
test
adc
jns
cmp
movsl
xchg
adcl
ds
loope
adc
lock
idivl
sub
xor
pop
adc
mov
xor
mov
xor
or
leave
pop
nop
add
cmpsl
pop
mov
xchg
adc
sub
nop
pop
mov
mov
add
cmpl
mov
daa
fidivl
sti
dec
pushl
pop
out
dec
mov
inc
mov
or
push
test
jecxz
repz
ja
inc
test
xlat
stos
cld
dec
dec
lcall
dec
dec
lahf
jne
bound
stos
cwtl
xchg
fcoms
push
xlat
pop
outsb
in
mov
dec
test
mov
loope
mov
jb
repnz
rol
int3
cli
mov
shll
bound
mov
aad
stos
in
lret
xor
arpl
sub
xchg
cltd
repz
andb
mov
jne
push
rclb
roll
in
inc
icebp
lods
iret
out
call
mov
mov
cmpsl
add
ljmp
adc
shrl
scas
xor
aas
les
je
aam
enter
pop
in
pop
repnz
jl
add
stos
jg
jmp
mov
ljmp
sub
jae
aaa
xlat
lcall
jo
xchg
xlat
negb
cmp
test
mov
call
or
cltd
lock
lahf
int3
scas
data16
aam
je
lret
enter
dec
mov
push
es
std
mov
in
lret
jecxz
sub
mov
aaa
pop
nop
into
or
in
mov
repz
xchg
xchg
inc
rcl
fcmovb
mov
outsl
roll
and
and
faddl
aad
pop
or
or
mov
out
loope
out
in
add
lcall
cmp
push
dec
pop
out
and
fcmovnb
xchg
addr16
xchg
add
dec
mov
push
dec
fidivrl
or
aaa
and
stos
dec
into
and
ljmp
cld
repz
ret
inc
testb
call
lea
xor
stos
stos
pop
sub
lret
xchg
push
inc
or
call
pushf
rcrl
stc
movsb
xchg
int
insl
cmpl
movsb
jb
fldcw
sti
nop
imul
loopne
call
nop
add
adcb
add
xchg
or
add
leave
pusha
jb
fstl
rol
fwait
ss
and
mov
ficoml
lds
xchg
mov
xor
pop
sbb
xor
mov
sub
insb
rcrb
clc
insb
mov
dec
cli
mov
pop
into
jge
xor
clc
or
test
sub
lcall
fmull
sub
cli
mov
pop
push
sbb
mov
cmp
add
xchg
lcall
shl
and
in
dec
sahf
cmp
mov
out
test
inc
xchg
cmp
push
call
div
or
cmpl
das
inc
shlb
aas
ret
lock
addl
mov
shrb
addr16
mov
addr16
dec
jne
popa
out
sbbl
mov
jmp
jecxz
and
jo
and
or
test
adc
adc
mov
cli
in
ret
scas
dec
jle
mov
fs
mov
scas
cld
push
inc
pusha
sbb
iret
inc
push
xchg
data16
push
fs
xor
sbb
cmp
cwtl
push
ror
push
mov
or
pop
dec
cmp
roll
fsubl
jb
adc
lods
dec
pop
fdivs
cmp
les
add
sub
enter
repz
mov
mov
lret
xchg
fucomi
outsl
out
mov
stos
js
popa
xor
aas
xchg
stc
push
sarb
add
mov
sbbl
les
xor
sbb
lods
mov
mov
mov
sbb
mov
mov
add
cmp
cmp
dec
popf
mov
loop
cmc
ljmp
jp
push
outsl
sub
or
vpsubsb
add
and
inc
push
aaa
ja
movsl
sub
enter
fstpl
adc
push
lret
repnz
mov
out
sub
dec
repnz
mov
add
iret
inc
fwait
adc
cli
mov
jno
sarb
mov
int3
out
push
cmpl
jns
adc
and
sbb
cmc
sahf
out
jge
fsubl
fcmovbe
jmp
pop
popa
sbb
add
dec
push
rolb
sub
xchg
inc
push
xchg
aaa
pop
mov
ja
sub
xchg
and
test
outsb
jno
cmp
mov
rolb
cld
cli
add
cmp
sub
or
lds
sbb
mov
jb
ljmp
inc
sbb
inc
js
push
lret
mov
sub
adc
enter
loope
sbb
xor
cmp
fidivrs
adc
int3
cmp
test
mov
add
xchg
incl
lock
addl
ret
jmp
ja
arpl
mov
scas
sbb
leave
and
push
lret
arpl
sti
das
push
add
cmp
das
jp
xchg
sbb
cmp
push
push
mov
push
jno
loope
popa
dec
mov
rcl
push
pushw
mulb
sbb
int
das
test
ds
adc
or
push
mov
fisttps
sbb
sbb
imul
mov
clc
loopne
insl
push
jo
cli
test
repz
add
movl
cmp
stos
idiv
push
ja
lods
add
sub
cmp
cmp
adc
xor
decb
es
pop
mov
lret
pop
pop
cs
cmpsb
loope
push
lock
loopne
xchg
js
or
out
out
insl
icebp
fdivl
pop
and
sub
in
cmpsb
jne
repnz
pop
lods
int3
inc
bound
inc
cmp
sub
jge
inc
pushf
fldt
arpl
xlat
sbb
inc
xor
sub
mov
push
sahf
repz
scas
xchg
xchg
jns
jne
pop
xchg
js
push
ja
or
sub
add
js
jno
push
data16
mov
and
sahf
leave
mov
dec
imul
iret
sbb
dec
xor
lcall
push
jp
push
movsb
out
jns
daa
movsb
lock
jno
sbb
cltd
in
aaa
scas
lods
lret
mov
bound
pop
adc
pop
enter
dec
add
cmpsb
push
mov
iret
jne
push
rorl
pop
jp
sub
xchg
imul
stc
pop
sahf
sarb
pop
rcl
cmpb
jo
pushf
mov
or
sub
or
adc
das
and
and
mov
sarb
xor
out
insl
sbb
sub
arpl
ror
inc
sub
and
setae
add
out
jl
dec
add
or
and
cmp
add
xchg
push
loopne
ljmp
loope
add
push
jmp
fisttpl
cmp
xlat
ljmp
ret
nop
push
dec
repz
out
xchg
add
push
xor
inc
push
jg
push
mov
dec
out
push
fdivs
mov
or
ja
jl
push
or
sub
mov
fsts
rcrl
fcoml
outsb
and
and
sub
mov
jnp
inc
pop
sub
fxch
mov
mov
xchg
dec
ljmp
push
cmpsl
sbb
rorb
or
popa
xchg
mov
sub
ret
test
je
ret
jle
stc
xchg
lret
icebp
cli
addb
stc
mov
push
fnstenv
data16
dec
pop
cmpb
jbe
ja
aas
mov
mov
push
cltd
out
jns
in
mov
xchg
jns
mov
mov
xchg
cmp
roll
pop
movl
inc
add
or
mov
or
stos
push
test
adc
pop
loop
and
push
sub
mov
rorb
cmpsl
es
cmpsb
pop
mov
inc
dec
push
out
nop
cld
sub
pop
mov
mov
push
aad
push
out
pop
mov
mov
frstor
scas
mov
sbb
in
clc
jmp
jecxz
mov
fcompl
into
xor
and
leave
sarb
xchg
mov
fwait
jnp
dec
cmp
xchg
jl
cwtl
jp
scas
mov
int
mov
lea
fdivrl
pusha
nop
dec
inc
mov
outsb
jo
test
test
add
xchg
jne
aaa
ret
dec
fldl
mov
in
jne
mov
lods
fisubrl
andb
cld
add
test
daa
pop
push
popf
out
mov
dec
ret
xor
xchg
mov
data16
xor
ret
and
stos
or
lcall
lea
and
xchg
inc
fdivr
test
scas
lcall
xor
or
pop
rcll
arpl
popf
and
pushf
sbb
icebp
daa
add
sub
pop
add
mov
pop
sub
mov
scas
je
mov
icebp
sub
inc
inc
icebp
repz
cwtl
push
popf
orl
mov
out
sbb
ss
or
or
fcoml
xor
add
cltd
xchg
or
adc
test
jno
push
sub
popf
outsb
int3
xchg
ss
movsl
sub
or
icebp
or
push
fstpl
jmp
lock
lods
sbb
xchg
sub
lds
dec
sbb
mov
xor
dec
loope
add
inc
or
push
cmp
push
int
push
scas
icebp
xor
sbb
jecxz
insl
lret
testb
cmpsl
pop
repnz
enter
out
fmul
xchg
int3
mov
negb
sti
and
inc
jns
test
cmpsb
outsb
movsb
pop
cwtl
sti
movsl
loope
cmp
addl
sbb
sbb
dec
add
je
or
cmpsb
mov
add
pop
xor
jne
and
dec
repz
ja
jg
nop
cmp
xchg
int3
test
adc
jecxz
xlat
pop
fs
dec
sub
push
mov
xchg
xchg
adc
sbb
mov
rcrl
or
push
aam
scas
add
cmp
gs
inc
aaa
pop
xchg
fdivs
mov
into
fsubrs
jno
xchg
inc
bswap
cmp
fcomip
les
popa
and
or
fcoml
test
pop
insl
ja
xchg
out
jle
adcl
shl
shll
xchg
lea
leave
adc
jl
sub
mov
sbb
in
pop
lret
or
jb
jno
jmp
xor
cmpsb
in
out
push
in
lcall
loopne
dec
inc
sbb
mov
sbb
rcrl
inc
xchg
xchg
jle
push
jns
sub
cmp
sub
pop
mov
sub
test
pushf
mov
mov
fwait
pop
inc
in
and
and
cwtl
inc
jno
test
out
cltd
mov
push
aam
inc
stos
mov
xorl
imul
adc
xor
adc
loope
daa
cld
lea
mov
ret
out
aad
or
movsl
and
xor
popl
pop
int
loope
ja
stos
dec
out
adc
roll
idivl
sbb
mov
or
push
pop
iret
lock
test
mov
and
mov
xchg
mov
mov
ljmp
mov
mov
insb
rcll
pop
aam
pop
or
xor
test
mov
and
cli
sub
call
jno
dec
cli
je
ja
push
inc
pusha
je
push
cs
xor
sbbb
xor
jmp
mov
ds
rorl
xor
mov
stos
addr16
in
icebp
les
push
scas
imul
mov
lea
dec
sbb
jl
out
and
roll
fldt
stc
pushf
insl
dec
xchg
shrb
dec
call
loopne
lret
out
inc
mov
pop
fmull
add
int3
mov
jge
cmp
push
lret
js
xchg
addl
arpl
add
test
ret
pop
ds
mov
sbb
mov
pop
and
fsubp
in
test
adc
aaa
ds
repnz
out
mov
out
xchg
or
pusha
popf
inc
out
cs
xchg
icebp
mov
es
sahf
movsl
sbb
shr
xchg
fwait
repnz
add
mov
inc
movsb
roll
adc
adc
hlt
sahf
lret
mov
dec
cltd
pop
xchg
or
inc
adc
jno
test
scas
repnz
or
faddl
mov
mov
jb
scas
xchg
cmpsb
dec
fstps
mov
and
xor
jp
jb
aas
dec
pushf
mov
mov
mov
pop
fwait
jae
pop
xor
dec
data16
test
add
cli
ret
fcompl
jp
mov
cld
adc
and
push
pop
push
test
js
xor
testb
mov
cmpsl
push
dec
inc
push
jle
sub
clc
ljmp
jle
sub
fnstsw
sub
test
xor
pop
cmp
xchg
les
je
push
xor
out
in
dec
inc
or
xlat
daa
scas
sbbb
mov
mov
movsb
ja
mov
or
scas
adcb
inc
xchg
xor
pop
add
arpl
add
xchg
dec
sub
or
shrl
test
leave
jns
mov
cmpsl
xchg
inc
jp
xchg
jbe
jae
and
adc
dec
push
dec
das
push
mov
rcrl
fnsave
xchg
pop
std
insb
outsl
shlb
test
in
mov
nop
loop
mov
loopne
mov
adc
mov
dec
push
pop
mov
orb
push
or
push
lret
in
sar
pop
bound
mov
mov
pop
loope
sbb
xchg
mov
inc
xor
movsl
mov
mov
lret
ljmp
jns
adc
sbb
add
mov
sarl
orl
push
cmp
sub
sbb
or
cli
loope
icebp
fcmovb
lret
mov
mov
pop
inc
dec
push
cmp
sub
sbb
or
cli
in
icebp
mov
mov
dec
xchg
jp
push
stos
inc
dec
push
cmp
cmp
sbb
loop
out
loope
icebp
add
aad
mov
or
sahf
xchg
fcomi
inc
dec
es
test
cmc
out
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lods
push
out
xlat
jb
bound
adc
and
shlb
push
repnz
xchg
addr16
pop
mov
mov
out
bound
xor
mov
aaa
xchg
adcb
pop
mov
iret
jb
bound
xor
ret
xor
sbb
push
shrb
push
out
fwait
sbb
pop
loope
call
lahf
lret
stos
addr16
push
fisttpl
pop
mov
push
xlat
adc
popf
jo
pop
std
addr16
bound
repz
outsl
mov
jo
sti
loop
repz
out
sahf
test
roll
das
cwtl
cmp
enter
mov
inc
test
xchg
adc
fldl
ldmxcsr
sbb
push
dec
out
das
pop
mov
mov
out
addr16
xchg
xchg
mov
inc
or
es
dec
ljmp
pop
out
cwtl
adc
fwait
or
ja
lods
ret
cwtl
ret
inc
jecxz
xchg
inc
mull
out
xlat
jb
bound
xor
ret
pop
loop
xchg
aas
adcb
push
lret
test
mov
add
mov
mov
lcall
jb
inc
mov
lds
ret
pop
leave
data16
inc
ret
stos
addr16
xchg
xor
xlat
pop
repnz
sbb
adc
adc
and
addr16
inc
loop
xchg
daa
adcb
pop
mov
xlat
jb
bound
xor
ret
inc
loop
xchg
daa
adcb
pop
mov
mov
scas
and
sub
pop
xor
test
popa
xchg
xchg
les
sbb
pop
dec
cmp
xchg
and
dec
lods
enter
iret
xchg
jmp
in
test
inc
sbb
xor
fstl
fnstsw
xlat
xor
xor
inc
test
aad
js
pop
repnz
sbb
jbe
imul
jo
jg
aad
push
cmp
jge
sub
adc
insb
outsb
sbb
xchg
lret
pop
and
orl
xor
push
cld
int
mov
pop
rorl
sub
inc
adc
les
in
inc
out
mov
sub
inc
stc
cmpb
ds
sbb
push
push
xor
mov
imul
loopne
outsb
pusha
sub
add
and
jl
mov
sub
lcall
mov
fistpll
mov
inc
sar
pcmpeqb
jp
ja
xchg
ja
dec
and
jo
loop
and
or
mov
jl
fdivrs
lcall
add
cmc
in
mov
bound
xchg
mov
jns
push
inc
out
ficoml
lea
add
dec
push
jae
jecxz
pop
dec
mov
lret
mov
inc
mov
aaa
mov
cmp
inc
adc
mov
push
iretw
repnz
push
stos
cltd
xchg
or
inc
jbe
jmp
push
ja
mov
and
xor
dec
daa
sub
shl
sub
xchg
test
mov
int
ret
inc
dec
mov
mov
fisttpl
insl
test
ss
mov
data16
jg
push
mov
push
jo
in
pop
sbb
cmpsb
je
inc
addl
icebp
adc
xor
dec
push
adc
adc
mov
mov
aad
mov
xor
jmp
jmp
jnp
xchg
cmpsl
push
movsb
cltd
mov
xchg
addr16
in
mov
and
and
jp
sbb
jge
pop
mov
enter
ret
push
mov
sbb
lods
adcb
repz
insb
and
clc
xor
cmp
loop
scas
inc
dec
add
dec
in
pop
movsl
test
loop
mov
pop
in
out
add
imul
xchg
in
ret
in
sub
mov
loop
xchg
cmpsb
lock
stc
aas
cmp
push
inc
xor
popaw
dec
inc
ja
nop
jecxz
and
test
push
push
add
jmp
mov
jle
notb
jnp
test
xchg
ret
and
push
popf
pop
pop
lock
in
jp
ret
cmp
cmp
cmpb
dec
insl
add
hlt
enter
rcll
imul
sub
sub
dec
xchg
add
mov
pop
jp
or
mov
andl
xlat
mov
sub
std
roll
or
cmp
push
sti
lret
adc
or
loopne
repz
clc
jmp
jle
test
fs
jb
cmpsl
icebp
and
rcrl
movsb
out
inc
aad
add
push
in
es
shl
push
dec
xchg
add
mov
in
jl
lods
clc
sub
sti
sub
test
sahf
xor
xlat
outsl
out
push
mov
jbe,pt
popa
mov
or
push
subb
xor
lea
xor
push
mov
test
sub
gs
mov
push
fildll
imul
pop
mov
es
push
in
enter
xor
or
mov
lcall
out
mov
cmp
clc
mov
popf
jge
mov
std
inc
xor
test
jmp
push
les
cld
jb
stc
and
fisubs
std
sub
fadd
fisttpll
loopne
lcall
xor
pop
cld
inc
mov
push
mov
pop
mov
lods
imul
ret
shlb
cmp
test
adc
cltd
or
pop
das
out
test
testl
das
lahf
arpl
and
fildl
inc
mov
mov
mov
jle
pop
stc
adcb
sub
pop
fwait
lods
lock
mov
jae
inc
out
mov
mov
insl
stos
inc
jae
mov
adc
sbb
xchg
adc
test
sub
cmp
iret
divb
enter
scas
mov
add
mov
int
adc
mov
test
mov
dec
sub
cmpl
cmp
or
pop
dec
int3
xchg
jle
lock
mov
jnp
mov
adc
dec
xchg
inc
das
lahf
jg
lods
into
cmp
cmp
pusha
rcr
jmp
sub
lret
movsb
je
sar
addb
pop
jle
pop
insl
rcr
addr16
sub
push
fdivr
test
in
cmpsl
pop
adc
xchg
adc
mov
inc
out
aad
lds
mov
loope
cmp
mov
addr16
in
fadds
fcoml
ret
mov
insl
call
push
js
icebp
loopne
stos
inc
or
mov
int3
das
rorl
into
cli
sub
mov
jl
pop
cmpsb
push
nop
inc
sarb
rcrl
js
fs
aam
lahf
in
push
inc
push
lds
mov
fisubs
loopne
push
jmp
subps
cmpsb
repnz
mov
push
dec
inc
negb
mov
loopne
outsl
nop
push
dec
das
inc
stos
mov
sub
adc
mov
mov
fwait
pusha
ret
sbb
lahf
inc
add
xchg
jae
dec
loop
inc
pop
and
enter
les
decl
iret
fidivs
cmp
jecxz
mov
xor
or
mov
push
jmp
xchg
loope
push
ljmp
or
or
sbb
inc
jo
and
xor
ret
sub
xor
push
sub
bound
insl
subl
scas
out
scas
cltd
cltd
mov
adc
sub
lds
stos
push
inc
mov
jmp
mov
sub
cmp
sub
lods
movsb
out
jbe
adc
loop
mov
jnp
push
xchg
int3
das
fwait
mov
jo
test
int
mov
mov
inc
jbe
xchg
mov
inc
repnz
sbb
stos
movsl
lcall
cmpsl
mov
enter
inc
fiadds
adcb
imul
push
mov
push
push
lods
test
je
xchg
cmp
adc
andl
xchg
xchg
or
call
xchg
push
xchg
test
mov
jl
xchg
nop
scas
jno
aas
out
int
dec
fdivrl
in
dec
out
scas
cmp
jns
mov
out
test
mov
sbb
sub
xchg
dec
pushf
add
scas
inc
nop
and
test
popf
cmpsb
push
pop
inc
nop
push
sub
cmp
js
pop
es
test
inc
xchg
inc
sub
inc
test
jle
push
repnz
dec
and
stos
in
jecxz
inc
lret
mov
mov
dec
flds
push
and
xchg
dec
pop
leave
daa
out
lahf
xlat
adc
push
dec
pop
adc
xor
dec
ss
cli
andb
enter
mov
fwait
outsb
jb
cmp
fcmovbe
movsb
xchg
inc
daa
loopne
test
adc
push
cmc
pop
push
xchg
cld
ret
fcoms
and
test
xor
xor
dec
and
cs
lods
sti
je
mov
xchg
push
inc
in
in
stc
pop
xchg
movl
adc
mov
mov
jb
je
add
gs
xchg
push
xchg
xchg
int3
inc
cmc
lock
jge
das
sar
data16
cltd
sub
fs
in
das
fiadds
lcall
arpl
xchg
std
push
mov
adc
pushf
inc
pusha
faddl
lock
ret
dec
subl
and
mov
and
or
add
adc
pop
lea
es
jns
and
jb
hlt
pop
jmp
mov
loopne
aaa
vpmacssdqh
inc
bound
add
inc
dec
lds
push
repnz
jmp
sub
rcl
push
jecxz
fisubrl
out
in
add
cs
popa
outsb
imul
or
mov
inc
data16
loopne
ljmp
ja
in
ret
xchg
xor
in
xorb
adc
jae
or
cmpsl
sbb
mov
out
cwtl
stc
scas
stc
ret
je
jecxz
imul
insl
sbb
aam
push
xchg
pop
sub
adc
xchg
fwait
stc
lea
adc
mov
imul
fwait
imul
push
popf
mov
adc
or
adc
xchg
ss
add
cmp
lods
insb
inc
pop
sbb
lret
mov
ljmp
nop
or
sub
and
dec
xlat
dec
mov
icebp
xor
dec
jo
std
idivl
pusha
fsubrl
or
cmp
mov
mov
iret
pusha
pushf
std
dec
jmp
je
cmpsl
jae
and
dec
cwtl
mov
lea
cmpsl
cmp
jo
xchg
out
sbb
pop
dec
shrl
jle
adc
pop
add
xor
or
dec
xchg
std
pop
push
jns
out
call
mov
sbb
jnp
xchg
test
push
les
mov
xor
out
es
cmpsl
mov
cwtl
cld
in
mov
mov
sub
mov
sbb
xor
arpl
pop
jp
sbb
imull
mov
test
in
stc
je
ss
add
aas
jge
dec
push
mov
adc
pop
inc
xchg
iret
push
dec
pop
cli
outsb
cmp
jo
and
stos
sub
aaa
jbe
mov
fwait
or
mov
lahf
dec
int3
stos
pop
arpl
mov
int3
add
dec
pop
inc
xor
hlt
pop
fcomps
dec
lock
jbe
dec
mov
int3
pop
loope
negl
cmpsl
mov
lea
push
cs
adc
test
jo
leave
enter
inc
dec
dec
cmp
inc
cmp
push
mov
dec
jae
out
adc
mov
inc
out
inc
mov
ret
jne
xor
inc
mov
outsl
mov
js
add
mov
add
out
inc
dec
ja
call
or
in
mov
mov
fdivrs
insb
push
adc
cwtl
fwait
cmpsb
push
daa
gs
push
ljmp
cmp
lock
inc
rcrl
push
adc
aas
das
mov
cltd
cwtl
inc
ds
dec
sbb
mov
push
shl
xlat
jne
xor
push
xor
or
clc
stc
dec
movsb
pop
mov
add
fisubrl
pop
rcll
cmpb
aaa
adc
out
aaa
sbb
add
lock
cmp
sub
push
mov
negl
jb
and
fstpl
fldenv
pusha
push
inc
sarl
pushf
inc
cltd
jne
push
aas
mov
xchg
stos
sbbb
jmp
or
sahf
add
dec
inc
sub
cli
cli
das
xor
push
and
mov
in
push
outsl
jo
lret
push
std
mov
sbb
and
cmp
faddl
shlb
add
mov
jbe
sbb
fldt
call
xor
jle
jb
ficompl
pop
sub
cmp
adc
xchg
or
jmp
sti
lret
pop
jg
aad
int
sub
sahf
stos
outsb
je
div
mov
stos
jle
stc
inc
mov
jns
pop
dec
add
dec
mov
hlt
je
xchg
or
pop
sub
pop
dec
ja
add
rcll
aam
mov
xor
or
jmp
jb
mov
cld
pop
inc
imul
sub
repz
dec
outsl
mov
jecxz
xchg
sbb
and
call
in
stos
pushf
ret
out
lea
das
xchg
out
xchg
mov
mov
incl
stos
pop
insb
scas
xor
push
and
ret
ljmp
call
loop
adc
dec
xor
lahf
add
popf
inc
cmp
mov
lea
jle
rclb
aam
shlb
pop
sbb
fidivl
int
popf
and
fldcw
xor
and
jp
xchg
inc
je
xor
add
and
fisttpll
push
lcall
in
xor
rorb
or
cmpsl
loopne
and
push
aaa
mov
test
cmp
mov
loopne
inc
cld
mov
gs
loope
sbb
pop
push
add
sub
enter
in
pop
loop
jmp
in
jl
mov
or
sti
inc
mov
push
and
adc
dec
in
cli
sbb
dec
push
push
and
iret
lea
mov
pop
in
insb
out
shlb
jno
cmp
pop
lret
out
mov
cmp
call
hlt
in
sahf
clc
scas
and
pop
or
enter
adc
push
cmp
add
es
pushf
stos
out
mov
dec
mov
push
clc
dec
gs
std
imul
adc
pop
outsb
imul
xchg
sbb
jnp
mov
aas
mov
dec
push
cmp
pop
or
xor
xlat
push
mov
subb
push
mov
cltd
push
push
icebp
lods
mov
fbstp
inc
xor
das
inc
inc
cltd
push
mov
fsub
push
pop
push
dec
dec
test
idiv
inc
or
push
inc
shll
add
dec
sbb
jns
jge
xor
out
mov
or
pop
xchg
inc
jne
sub
adcl
cmp
sub
push
jecxz
fdivr
or
mov
into
stc
inc
in
mov
outsl
inc
pop
cmp
mov
stc
sets
or
nop
xlat
aas
adc
in
hlt
lea
push
dec
movsl
jl
js
fisubrl
test
rorl
stc
xchg
jp
movsl
mov
fdivrl
cmp
out
cli
push
mov
push
repz
push
js
and
je
decl
cmpsl
cmp
adc
ret
scas
dec
xchg
jae
mov
or
pop
add
lock
mov
and
push
test
mov
xor
push
mov
lock
fisttpl
pushf
loope
cmpl
jae
lret
mov
cmp
and
jle
stos
pushf
and
loop
fdivr
jl
test
xchg
shll
outsl
test
mov
xor
je
lret
pop
push
lods
cmp
clc
sub
cli
iret
sbb
dec
insl
int3
ja
gs
mov
ret
jnp
rcrb
pop
mov
push
cwtl
jp
sbb
xor
cmpsb
push
je
mov
and
pop
idivl
out
fstps
loop
push
fwait
int3
xor
pop
push
jb
mov
xchg
mov
pop
xchg
mov
add
test
popf
mov
jae
mov
cmpb
into
in
jbe
xchg
jae
mov
jp
mov
adc
xor
jb
shl
clc
jns
pop
jg
or
jnp
cmp
lahf
cmp
outsb
ret
data16
clc
ljmp
jne
cltd
or
xor
sbb
out
adc
xchg
xchg
jne
lret
dec
and
cmp
push
xchg
jno
in
dec
pop
sbb
sbb
in
jae
xchg
sbb
dec
ret
arpl
xchg
jbe
cmpsl
int
lods
mov
pop
sub
xlat
push
pop
push
cltd
clc
fbstp
stc
addr16
sbb
pop
inc
popa
std
jns
or
pop
inc
movsl
lds
das
pop
xchg
and
push
mov
es
out
mov
shlb
xchg
push
mov
push
adc
rolb
fs
test
adc
cmc
lret
outsb
jns
xor
js
lods
xchg
push
and
cmp
jl
sub
mov
inc
jp
cmp
mov
je
cli
lcall
xchg
adc
fnstenv
or
test
xchg
popa
test
int3
xchg
mov
ja
jecxz
xlat
insb
in
aaa
mov
rorb
int3
movq
incl
sti
lea
mov
mov
push
fcmovne
cmpsb
insb
mov
ret
pop
pop
lods
push
push
enter
gs
mov
push
ss
das
inc
push
ja
push
add
int3
pop
mov
xor
xor
rorl
imul
das
sub
mov
add
ret
push
bound
sub
jne
mov
hlt
pop
pop
push
xchg
add
cmpsl
loop
jno
call
int3
mov
adc
sbb
push
icebp
insb
test
and
push
pop
mov
or
sub
and
cld
stos
adc
push
mov
cmpsl
xchg
aas
sub
cmp
cld
or
mov
test
das
pop
xchg
in
les
stc
aad
xor
mov
xchg
sub
mov
ret
out
aaa
loope
pop
mov
push
loop
ljmp
adc
ret
xor
and
aaa
push
mov
xchg
sbb
stos
adc
mul
mov
sub
or
pop
in
pop
lret
sub
insl
sub
mov
sub
dec
pop
pop
fmul
xchg
sarl
or
mov
lock
and
dec
sbb
pop
inc
lock
gs
pushf
mov
push
adc
lea
add
lods
pop
xor
outsb
iret
xchg
stos
dec
sub
lret
dec
xlat
addl
push
gs
cwtl
fidivl
mov
clc
lret
cmp
adc
popf
movsb
or
cmpsb
je
mov
push
in
sbb
arpl
aas
push
push
pop
repnz
stos
jns
jecxz
add
dec
mov
clc
arpl
in
xchg
daa
dec
push
push
mov
mov
fwait
shll
sub
insb
adc
pop
mov
jmp
jecxz
nop
div
and
add
jnp
jge
pushf
addr16
es
or
outsb
xchg
inc
popf
or
mov
adc
push
rcr
add
xchg
std
je
mov
test
repz
mov
ror
mov
mov
test
out
add
repnz
leave
repnz
stos
imull
add
push
jae
loope
inc
mov
sbb
pop
shrb
arpl
int3
mov
push
jo
xchg
cmc
std
sub
or
or
arpl
in
insl
xor
mov
shlb
cmpsl
sub
cmp
jg
dec
sarb
xor
loope
pop
push
xchg
jecxz
sbb
into
outsb
stc
xchg
sti
jae
sub
xchg
jg
inc
mov
mov
mov
push
mov
mulb
pop
ss
testb
sbb
leave
out
mov
aaa
xor
out
in
fisubrl
or
pop
arpl
ror
xlat
lds
bnd
stos
cld
movsl
push
nop
push
xchg
rcr
fldt
ret
lds
xorl
scas
jnp
mov
dec
shrb
aaa
xchg
call
sbb
mov
adc
cld
popf
notl
loope
movl
test
push
jmp
std
out
jae
fildll
rcrb
dec
test
lret
imul
jp
pop
movsb
roll
push
adc
jecxz
add
cmpsb
orl
cmpsb
sub
adc
je
push
fcomp
and
mov
aas
pop
push
roll
rcr
pop
iret
cmp
mov
push
setge
movsl
repz
loop
das
mov
stc
mov
addr16
in
or
outsb
es
mov
and
popf
push
lds
out
out
sbb
push
fbld
cmp
dec
add
fimull
stos
pop
into
das
ss
ljmp
adc
sub
dec
sbb
in
cmc
inc
xchg
cmp
ss
jge
xchg
cmp
loope
out
xor
inc
jb
orl
in
rorl
cmp
mov
leave
icebp
repnz
ljmp
repz
je
adc
insl
scas
in
add
pop
fisttpll
or
gs
jae
imul
lcall
mov
mov
hlt
sub
inc
hlt
jo
mov
jo
hlt
mov
ret
cld
pop
pusha
mov
fsts
pop
xchg
sub
mov
sub
fwait
sarl
inc
addb
push
ljmp
cmc
push
ret
cmc
arpl
int
rcrl
and
out
mov
mov
loopne
jbe
insb
cmp
dec
fs
scas
cmp
cmp
xchg
sarl
aam
cmpb
es
dec
call
ret
pushf
mov
jmp
add
and
int
popf
andl
stos
or
arpl
lods
test
xor
jne
mov
xor
jnp
scas
mov
sub
cmpsl
or
sbb
xchg
negb
jmp
addr16
arpl
inc
pop
cmp
das
push
push
inc
and
cmp
insb
push
and
jns
mov
pop
or
pop
push
fs
scas
mov
mov
mov
out
hlt
xchg
adc
mull
sbb
sbb
js
call
inc
cs
sbb
scas
enter
test
std
pusha
pop
imul
fnstsw
fmuls
mov
mov
xor
repz
sbb
scas
imulb
out
mov
cmp
pushf
out
mov
arpl
mov
dec
sahf
mov
ss
inc
dec
jb
bound
xor
ret
inc
loop
xchg
daa
adcb
pop
mov
xlat
jb
bound
xor
ret
inc
loop
xchg
daa
adcb
pop
mov
xlat
repnz
bound
xor
ret
inc
loop
xchg
and
ret
push
roll
jb
bound
xor
and
repnz
xchg
inc
sbb
pop
test
mov
lret
push
addl
repnz
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
push
out
xor
inc
int
outsb
mov
ja
jle
push
mov
les
aam
in
hlt
add
or
sbb
sub
aaa
shrb
fcomps
sahf
int
xchg
pop
xlat
cmp
aad
rcl
outsl
nop
pandn
gs
jne
lret
iret
inc
inc
sub
xor
rdpmc
sub
push
cmp
out
test
xchg
repnz
cmp
test
sub
mov
stc
insb
adc
lcall
repnz
jle
pop
in
fnstsw
sarl
jle
dec
xor
sbb
loope
mov
adc
mov
add
hlt
jnp
loopne
into
mov
mov
in
cmc
pop
adc
call
fmulp
push
xor
lods
sahf
jecxz
push
xchg
cmp
adc
xchg
push
out
jle
jno
js
push
lret
fs
mov
outsb
xchg
imul
hlt
pop
add
adc
and
xor
inc
mov
test
ret
jle
dec
rcrl
js
push
andl
xchg
pop
mov
ret
cmp
xrelease
out
hlt
rcrl
pop
mov
jb
xchg
push
lahf
gs
add
push
loop
sti
in
das
lock
das
mov
les
ds
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
stc
pop
outsl
nop
dec
push
adc
pop
mov
imulb
arpl
int
in
movsl
mov
pop
dec
into
mov
out
lcall
sbb
and
loopne
dec
push
pop
push
out
jnp
add
add
jne
shlb
pop
popa
je
out
push
sbb
jmp
push
cmp
xchg
lods
dec
mov
out
dec
sub
push
cmp
imul
lods
push
pop
xor
int
dec
xor
push
pop
test
pop
mov
or
enter
test
jae
fdivs
fisttpll
pushf
jp
lds
in
in
ja
movsl
sub
movsl
insl
jo
dec
pusha
push
xchg
movsb
jnp
out
cs
cmpsl
xorb
adc
aam
iret
fldcw
addr16
xchg
sbb
leave
cmp
adc
adc
fisttpll
add
sub
and
xor
sbb
sub
leave
movsl
insl
ret
dec
outsl
sbb
sahf
mov
sbb
test
inc
or
icebp
xchg
dec
cbtw
cmp
cmc
push
or
jge
mov
ljmp
cld
out
dec
sti
fistpll
int
xor
mov
mov
fisttpl
cmp
ret
aaa
repz
mov
push
jb
imull
sbb
ret
jo
xor
push
cmp
scas
cwtl
lds
mov
fsubr
sbb
pop
imul
in
mov
cli
pop
xchg
xchg
jae
mov
les
dec
and
cmc
push
aam
xchg
stos
mov
dec
int3
mov
repnz
xchg
test
ljmp
and
out
inc
sbb
sbb
inc
pop
bound
or
and
cmp
roll
mov
adc
adc
sub
xor
mov
push
lret
pop
repz
jge
fdivrs
sbb
scas
jb
cmp
mov
sbb
or
jmp
xchg
lds
add
mov
imul
movsl
or
sbbb
ss
jle
fwait
loopne
mov
dec
outsb
daa
pop
mov
mov
pop
or
fwait
clc
mov
les
daa
in
sti
cmpsb
rclb
leave
lea
jae
outsl
imul
stos
gs
xor
adc
and
lahf
mov
repz
outsl
sbb
cmpsb
sub
jnp
inc
ljmp
and
jmp
loop
insb
or
xor
sahf
xorl
popf
imul
sarl
nop
push
jecxz
je
lret
aam
shlb
jne
je
sbb
roll
es
ja
pop
int
fimuls
lods
fsubrl
sbb
insb
lods
mov
sbb
sbb
cmc
adc
dec
cmpsb
pop
in
pop
adc
ss
inc
ret
push
push
sahf
cmc
inc
mov
cmpsl
mov
ljmp
push
jae
lods
scas
ljmp
jl
cmpsl
sbb
cltd
dec
bnd
das
add
jmp
leave
mov
pop
rcrl
add
out
and
xchg
adc
or
mov
sbb
movsl
ret
in
pop
out
movsl
mov
and
jno
jb
jno
add
imul
push
inc
cmp
cmpsl
inc
ds
rolb
fcmove
ds
in
xor
mov
jecxz
out
xchg
mov
in
inc
or
loopne
push
mov
shlb
xor
adc
addl
fisttpl
sub
jbe
sahf
int3
sbb
mov
mov
inc
mov
mov
aad
mov
daa
xlat
loopne
pop
lret
fcmovbe
lret
xchg
xchg
jp
sub
push
fs
mov
bound
and
sbb
pop
xchg
xchg
fcomps
iret
xchg
xchg
push
mov
data16
xchg
rclb
mov
in
and
leave
popf
cmpsl
movsb
repnz
ret
cmp
in
jbe
jae
push
xor
dec
pushf
mov
jge
xchg
out
adc
outsb
scas
cmp
sbbl
fcmovu
nop
mov
arpl
push
xor
jns
mov
lea
clc
jbe
push
mov
inc
sbbl
xchg
insl
fnsave
into
shll
shl
stos
inc
cmp
sbb
cmpsb
test
sbb
stos
add
dec
iret
or
dec
dec
jnp
iret
mov
shlb
lcall
push
movsl
jmp
adc
std
xor
mov
jns
cmp
push
push
dec
mov
pusha
fstpt
pop
xchg
mov
out
inc
pop
xor
scas
jmp
dec
and
cmp
ret
addr16
jbe
cli
dec
cs
jnp
data16
or
not
es
lds
jmp
or
addl
imul
movsb
aad
and
pushf
add
ds
arpl
push
sbb
fstpl
dec
or
pop
add
stos
mov
or
mov
pop
je
aas
aam
lods
out
insb
or
dec
pop
popa
mov
pop
lods
push
adc
push
pop
sub
push
aam
addr16
and
inc
xchg
daa
icebp
push
loop
push
inc
in
addl
mov
repz
pop
cmp
outsl
test
cli
or
inc
add
lock
mov
inc
popf
dec
test
adc
sub
lcall
sub
jmp
mov
mov
lret
xor
imul
lret
dec
lret
es
adc
push
pop
xchg
stos
hlt
sahf
mov
cmp
mov
ficomps
movsb
filds
cmpsb
pop
gs
stos
push
push
aam
pop
imul
call
fnstsw
popf
lret
test
jo
cmp
adc
ss
mov
test
dec
imul
pop
add
mov
jge
xorb
nop
lods
adc
pop
outsb
cmpsl
out
cmp
out
lds
adc
push
jne
cs
jp
adc
xchg
cmpsl
in
xor
mov
cmp
mov
xchg
mov
add
mov
sbb
mov
stos
inc
lret
pushf
call
enter
cmp
ret
mov
jge
lock
loope
in
dec
into
dec
andl
cmp
arpl
repz
pop
repnz
or
rclb
movntq
and
or
aad
inc
pop
in
std
dec
jl
out
mov
into
pop
push
rcrl
sub
push
or
sahf
xchg
inc
shl
cmc
xor
xor
movsl
arpl
popf
fs
dec
int3
pop
sarb
pop
sbb
sub
fcomps
dec
inc
xchg
push
gs
dec
sub
mov
iret
mov
movsl
lds
and
sarl
or
push
addr16
fistpl
or
xchg
sbb
jo
pop
adc
arpl
sbbb
mov
xor
mov
bound
mov
fcoms
andl
or
insl
jl
mov
pop
icebp
xchg
add
sub
aam
ret
in
xchg
jns
mov
stc
decl
push
enter
movsl
cli
sahf
fcmovnb
arpl
lock
movsl
insl
scas
add
outsb
int3
scas
jge
lcall
jmp
orb
add
mov
xchg
push
add
and
cmpl
mov
mov
icebp
sbb
jae
cli
sub
mov
push
popa
cmpsb
cld
push
fs
adc
popf
push
xlat
fs
insl
in
adc
in
xchg
pop
mov
xchg
fcomps
das
das
push
orl
xchg
mov
mov
xor
aad
and
pop
test
jns
pushf
push
movsb
lock
out
pushf
ficompl
or
rcrb
hlt
ficompl
mov
fadds
inc
and
orl
inc
mov
cli
call
or
leave
lahf
enter
ret
cmp
fwait
lea
sarl
sub
fcom
dec
push
ret
pop
xchg
or
lcall
mov
mov
sbb
add
es
mov
mov
xchg
out
outsb
scas
xor
pushf
sbb
xchg
cmp
mov
std
adc
cs
sub
test
or
xchg
cs
jl
push
mov
dec
xor
dec
cmp
sub
pop
mov
arpl
push
test
cmp
or
mov
movl
repz
lods
je
mov
mov
stos
adc
ficoml
or
gs
sbb
lret
dec
fldenv
test
add
mov
sbb
sahf
cmp
ss
jl
punpckhbw
adc
push
jp
add
push
push
jne
mov
lods
pop
aam
test
cli
fwait
cltd
and
mov
aam
lret
push
ss
fcomp
fimull
fistl
sub
in
mov
scas
shll
cli
mov
les
and
call
aad
push
repnz
mov
xor
mov
mov
aaa
mov
call
int
mov
hlt
mulb
jp
mov
pop
fdivp
dec
js
je
es
jbe
pusha
aam
pop
test
jae
leave
je
cmp
sahf
cmp
jne
icebp
aas
push
and
adcl
rclb
mov
mov
dec
lret
push
insb
add
adc
aam
mov
push
sub
push
sbbb
dec
rorb
mov
js
push
adc
pop
outsb
in
cld
incl
test
mov
out
xor
repnz
sarl
cmp
pop
mov
sub
mov
inc
inc
pop
setae
cmpb
sar
arpl
or
das
test
mov
cmp
test
hlt
lahf
and
cld
mov
sbb
add
cmovp
loope
sti
jne
pop
dec
scas
lret
inc
xor
in
lods
faddl
iret
mov
add
xchg
cmp
cmpsl
jae
xchg
sub
dec
cmp
pushl
cltd
repnz
xchg
jge
call
lds
or
push
cltd
lds
mov
dec
in
iret
jno
fisttps
cmp
lods
orb
jl
adc
add
push
xor
push
and
mov
sub
pop
sub
aas
xchg
fisttpll
pusha
lret
enter
imul
xor
arpl
push
dec
xchg
imul
push
outsl
cmpsb
jecxz
xchg
ss
lea
fnstenv
adc
xchg
jecxz
xchg
dec
adc
in
jne
repz
les
pop
dec
cmp
cmp
notb
jle
inc
xchg
cltd
aam
push
cld
sbb
aam
lods
add
dec
and
gs
popa
ficomps
inc
aas
mov
rolb
inc
push
mov
mov
outsl
add
cmp
or
sarb
fwait
insb
fisubrl
adc
push
cmpsb
inc
inc
mov
and
sub
sbb
xchg
inc
shll
ja
movsb
js
push
in
mov
fnstcw
int
test
int
lret
push
adc
sub
or
lock
das
cmpl
push
or
mov
xchg
movsb
add
pop
or
cmp
in
insb
xlat
arpl
imul
inc
xchg
outsl
jno
js
jae
mov
adc
jo
dec
push
pop
ss
or
fwait
mov
shlb
pushf
push
test
pop
push
fisttpl
mov
cmp
sbb
sti
sbb
mov
or
pop
insl
inc
xchg
shll
mov
shr
adc
dec
mov
lds
jns
and
pop
out
sub
jge
fnstsw
pop
cmpsl
sbb
mov
lret
sbb
xor
lds
cwtl
xchg
rcrl
mov
cmpsl
inc
dec
push
sub
adcl
adc
xchg
or
push
aad
mov
movsl
dec
mov
xor
pop
xacquire
pop
pop
stc
xor
loop
int
repnz
pop
addr16
ds
outsb
data16
mov
jmp
fistl
imul
pop
jns
push
and
add
and
in
inc
mov
shl
or
or
fildll
jbe
xchg
fisttpl
mov
insb
inc
sub
icebp
xor
jb
mov
mov
test
mov
dec
dec
ds
lret
insl
mov
jp
push
sub
mov
mov
cmpsb
enter
mov
js
push
jmp
int
xchg
xor
imul
push
lret
stos
push
sbb
cmpsb
aam
rorb
into
nop
call
outsb
xchg
in
js
sub
inc
mov
mov
lcall
ss
jno
sbb
fdivrs
jge
cwtl
pop
inc
test
daa
mov
pusha
jno
mov
enter
inc
mov
and
fwait
jae
es
dec
lods
xchg
jl
pop
cmp
ret
jb
sub
fmul
add
or
pop
xchg
js
loope
xor
jnp
sbb
dec
ret
in
pop
jo
shr
aaa
jno
inc
loope
fs
dec
test
xchg
push
clc
fcompl
movsl
xor
call
out
jns
sbb
pop
mov
faddl
int3
call
mov
stos
xchg
stc
mov
clc
fs
jge
push
inc
sbb
add
inc
out
mov
inc
aad
cmp
lret
sub
outsb
jne
in
inc
arpl
lock
dec
movmskps
aad
sub
scas
bnd
inc
stos
mov
mov
mov
jle
out
cmp
movsl
shll
loopne
idivb
clc
lret
stc
add
fiaddl
xchg
mov
arpl
test
inc
push
pop
xlat
fisubrs
xor
rcrl
pop
cwtl
ffree
fwait
mov
and
mov
outsb
sub
add
idiv
popa
push
insl
mov
test
into
xor
jp
jg
adc
lret
adc
inc
ss
pop
repnz
jne
mov
loop
jno
aas
aaa
and
fimull
negl
jae
divb
test
pop
xchg
cs
lcall
add
dec
cmpsb
sbb
rorb
out
mov
jbe
outsl
repnz
std
xchg
and
scas
fs
mov
push
push
fwait
add
and
cli
push
inc
sbb
xchg
dec
inc
jae
add
xchg
je
pop
notl
cmpl
or
mov
xlat
psadbw
cmp
mov
into
pusha
mov
fistps
jecxz
dec
mov
mov
mov
ja
in
pop
aad
mov
arpl
iret
mov
cmpsb
add
test
test
pop
sub
cld
aam
nop
je
cmp
stc
or
sbb
sahf
push
gs
cmp
dec
mov
push
mov
or
mov
push
dec
or
mov
dec
test
popf
and
cmp
push
fimuls
pop
in
cmp
jle
movsb
push
test
push
in
cld
pop
xchg
ret
lods
inc
loope
loop
sub
out
loopne
das
rcll
dec
fdivrl
leave
push
into
jle
xchg
loope
mov
data16
or
mov
sarb
xorl
lock
add
lea
xor
and
xchg
mov
dec
add
inc
arpl
popa
and
xchg
mov
xor
dec
inc
js
push
sub
out
rorb
mov
sub
lea
cmp
inc
cmpsb
jb
aad
ret
out
aam
add
adc
jmp
cmp
sbb
lea
addr16
fdiv
fadds
push
test
ljmp
fistl
arpl
adc
int3
lret
shl
mov
sub
pop
push
jo
jge
and
lahf
push
adc
cmp
xor
mov
jmp
out
out
aam
mov
sarb
lretw
add
and
jg
ljmp
add
insb
xchg
mov
loope
js
sbb
push
fisttpll
into
mov
add
adc
inc
rcr
ret
add
cmc
push
jl
test
lahf
pop
std
rcrb
sbb
ljmp
pushf
adc
adc
int3
int
and
bound
inc
and
out
fdivp
or
dec
cltd
jnp
in
negl
fdiv
mov
cwtl
pop
jno
and
mov
inc
jecxz
jmp
jne
sahf
push
dec
jge
stc
mov
insl
mov
divb
in
jg
aad
dec
push
dec
lret
mov
add
or
cmp
push
push
enter
imul
iret
rcrb
xchg
mov
mov
negb
je
and
dec
in
xor
cwtl
mov
sbb
imull
pop
and
in
push
dec
flds
inc
jbe
scas
into
testl
sub
or
fnstsw
dec
and
rcrb
xchg
or
mov
mov
ret
enter
adc
jmp
shll
push
fs
jp
or
jmp
dec
insb
jo
aas
mov
and
push
dec
pop
dec
int3
or
movsl
xchg
inc
add
pop
idivb
loope
mov
fldl
or
rorb
fdivrl
cli
pop
adc
test
nop
lcall
ds
inc
xor
enter
xchg
addr16
pop
mov
je
scas
xchg
push
movsl
out
gs
mov
addr16
fistpl
imul
icebp
lods
in
pop
pop
test
fistl
xchg
push
jbe
rcrb
scas
xchg
fisttps
mov
mov
sbb
stos
push
adc
mov
sbb
xchg
mov
xlat
pop
push
add
xchg
aas
insb
xchg
inc
cmp
ret
xor
push
mov
cld
call
cmp
or
mov
push
push
xchg
or
imul
mov
int
mov
movsl
sbb
out
jecxz
nop
jle
sub
sbb
inc
sbb
push
pop
test
adc
rorl
out
mov
inc
and
ljmp
jb
mov
mov
mov
arpl
stos
mov
cli
jp
mov
rclb
lds
and
jbe
stc
add
rcl
stc
aas
iret
sbb
nop
loope
das
scas
mov
rep
cmp
sbb
push
push
fwait
jmp
jae
in
push
xchg
cmpsb
add
stos
mov
pop
push
repz
popa
loope
and
test
xor
and
nop
fsubrp
cmpsl
lret
xchg
sti
int
mov
shrl
aas
enter
jle
hlt
or
rolb
daa
insl
cmp
jns
arpl
inc
daa
idivl
rorb
fidivrs
shrl
stos
push
jmp
daa
cmp
icebp
enter
hlt
mov
andl
mov
cmp
cmpsl
dec
es
ss
sbb
cmp
inc
xorl
imul
pop
xchg
xchg
rcl
addl
mov
inc
cmpsb
cmp
cmc
mov
mov
ss
cmpsb
jge
out
pushf
lds
mul
int
movsl
sbb
pusha
scas
test
int
mov
daa
rcll
and
fwait
scas
ds
bound
je
lret
mov
js
cmp
stc
test
xor
jnp
mov
cmp
adc
add
cli
nop
mov
das
mov
lea
mov
enter
movb
aaa
fwait
cmp
xchg
push
jnp
call
ljmp
push
fcmovb
sub
test
add
lods
pop
mov
gs
push
pop
and
in
pop
ret
punpckhwd
js
jp
push
inc
into
inc
mov
adc
add
or
sub
cmp
sbb
mov
mov
mov
pop
mul
sub
push
jae
in
pop
jmp
dec
ljmp
xchg
push
stos
cmp
cmp
roll
cmc
adcb
ret
negl
scas
pop
lret
fisttpl
shlb
stos
movsb
sbb
fs
mov
icebp
mov
or
mov
shlb
pop
call
lea
mov
push
sti
imul
xchg
mov
xchg
sub
outsb
out
sarl
iret
test
jb
mov
cmp
rorb
gs
xlat
push
and
lret
rcrb
push
cmpl
data16
and
inc
hlt
test
in
pushf
out
push
mov
inc
jnp
std
push
aam
pushf
aaa
dec
popf
mov
ret
sub
push
loop
xchg
inc
filds
and
pop
lret
mov
fcmovu
rolb
ljmp
mov
mov
fdivl
rol
jecxz
jae
lret
xor
jle
mov
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
and
xor
inc
scas
push
mov
test
jle
dec
mov
les
aam
in
hlt
push
add
adc
mov
xor
xor
faddl
jno
popa
fs
je
inc
mov
inc
mov
in
cmc
pinsrw
movsb
pop
mov
test
outsb
fs
je
inc
mov
xor
add
adc
in
hlt
push
les
aam
fs
dec
test
outsb
xchg
cmpsb
push
mov
xor
add
adc
in
xlat
sub
movsb
adc
cmp
or
add
rclb
incb
leave
in
push
mov
add
cmp
nop
pop
sub
incl
mov
fldt
jmp
lock
rcrl
mov
rorl
jl
inc
lea
icebp
scas
push
inc
in
int
mov
push
mov
shl
sti
leave
mul
jle
sub
jno
inc
push
std
add
and
orl
mov
lret
pop
andl
fidivrl
xor
xchg
push
xchg
mov
xchg
negl
aam
xchg
jmp
popa
mov
xchg
and
push
imul
add
cmp
cld
shl
jbe
scas
sarl
mov
cmpsl
push
scas
and
xor
add
adc
in
hlt
push
les
aam
movsb
inc
mov
test
and
fstpt
scas
pusha
xchg
push
mov
jno
push
les
lods
dec
movsl
cmp
add
adc
and
cmp
and
jno
jl
inc
faddl
pop
aam
movsl
fimull
sbb
sbb
sahf
je
sub
cmp
push
adc
in
hlt
push
les
aam
movsb
pop
mov
test
outsb
fs
je
inc
mov
xor
add
adc
in
hlt
push
les
aam
movsb
pop
mov
test
outsb
fs
push
popf
fnstcw
jnp
ficoml
push
out
xor
icebp
xchg
xchg
repnz
es
jns
scas
lds
sub
fwait
cli
js
xchg
push
inc
test
mov
divb
andl
lds
adc
inc
push
lods
addr16
jp
xor
sub
adc
mov
sub
pop
in
lds
dec
sub
or
dec
test
inc
cmpsb
cwtl
cmp
inc
ret
rcr
out
xchg
lret
xchg
cwtl
cli
es
xor
movsb
std
mov
mov
addr16
push
xchg
add
in
rorl
add
push
mov
scas
dec
push
inc
or
in
dec
fnstsw
push
fcomps
call
xchg
arpl
xchg
cmc
fisttpll
test
roll
daa
enter
jge
xor
mov
outsb
adc
mov
add
or
fiaddl
cmp
pop
dec
cmp
sti
push
inc
inc
cmpsb
inc
je
push
xchg
shr
fsubrl
bnd
sub
inc
xchg
xchg
int3
mov
fiadds
mov
stos
adc
nop
add
hlt
ret
mov
arpl
mov
in
gs
mov
cmp
sbb
jmp
inc
jge
sub
lret
mov
fnstsw
add
dec
rolb
inc
sbb
out
mov
jle
fs
sub
cmp
das
loopne
push
adc
jg
or
lods
mov
push
mov
inc
sub
push
sahf
xchg
ss
aad
iret
pop
dec
push
adc
xchg
les
ljmp
add
mov
loop
gs
and
push
pop
and
xorb
ret
stos
adc
ret
subl
add
imul
dec
mov
out
cld
push
cwtl
loop
pop
insb
test
je
xor
push
outsl
mov
fs
pop
cmp
lahf
fs
sbb
aam
mov
cmp
scas
movsl
in
mov
jle
sub
mov
jns
dec
xchg
and
test
or
dec
cmp
mov
push
into
mov
jnp
cvtdq2ps
rcrb
push
scas
pop
or
push
or
sbb
xchg
push
cmp
in
inc
add
inc
adc
jo
lcall
pop
mov
mov
addr16
inc
inc
mov
out
es
out
jo
mov
faddl
sbbl
in
cmpsl
lods
or
lret
push
inc
sbb
ss
mov
sarb
test
cmp
add
gs
repnz
insl
fadds
xor
stc
in
pop
sbb
dec
aam
and
xchg
cld
popf
xor
rorb
addr16
adc
daa
aaa
jb
into
dec
call
shlb
cmp
sbbb
xor
push
pop
gs
xor
sub
xor
mov
nop
add
das
or
insb
mov
fcomi
scas
hlt
sub
je
aad
lea
pop
stc
ja
in
dec
pop
cmpl
mov
or
popa
sub
adc
inc
jecxz
pop
sbb
adc
or
imul
mov
int
push
push
mov
cwtl
sahf
fdivr
sbb
fnsave
fwait
daa
or
repnz
jno
pop
imul
cmp
sbb
or
add
xor
mov
jle
dec
pushf
or
and
mov
out
add
sub
lret
sub
and
jle
ljmp
lret
sbb
addr16
xor
mov
jecxz
jl
or
xchg
incb
push
in
mov
aaa
movb
mov
jmp
decb
and
mov
sbb
add
push
xor
in
frstor
mov
leave
mov
rcll
scas
jmp
ds
sub
shrb
dec
loopne
and
loopne
xchg
pop
mov
sub
imul
mov
mov
push
or
icebp
xchg
lahf
cwtl
cmpsb
shrl
cli
in
sub
add
push
push
xchg
xchg
loopne
mov
jmp
ds
stos
rcll
icebp
sbb
xor
fs
and
xchg
ror
in
inc
nop
mov
sub
dec
ds
sbb
sbb
filds
cltd
cmp
data16
test
mov
data16
mov
cmc
push
js
and
loopne
xchg
sbb
loop
das
shrl
or
and
mov
mov
rol
mov
ret
cltd
fwait
adc
push
iret
shll
test
sbb
divl
int3
cs
int3
mov
sti
ja
xchg
jb
cmpsl
jmp
inc
in
jle
mov
and
ret
add
fs
mov
popf
xor
stos
ds
mov
test
xor
jnp
pop
add
mov
orb
dec
sbb
cmc
ja
daa
das
fnstsw
out
ja
push
pusha
xorb
ret
cmpsl
cmp
dec
mov
mov
into
sub
sbb
jo
movsl
cmp
loop
je
adcb
dec
in
call
add
bound
scas
stc
movsl
daa
dec
repnz
pushf
add
sbb
push
les
add
out
pop
lods
fimuls
lahf
pop
leave
jmp
xor
popa
mov
pop
jne
cwtl
aad
nop
popa
cltd
mov
insl
gs
jae
inc
push
insl
push
iret
pop
xor
push
push
push
rorl
call
cmpsb
dec
xor
xchg
clc
movsl
ljmp
sub
pop
popf
mov
fcmovu
stc
cmp
jge
js
pop
xchg
jg
sti
xchg
ficompl
nop
test
out
out
pop
fists
call
xlat
call
push
lds
int
scas
jp
xchg
xor
out
lock
push
pop
push
into
std
xor
out
mov
cmp
jae
mov
xor
inc
mov
mov
jns
scas
call
lcall
pop
repz
and
movsl
jge
in
xchg
sahf
lock
aad
inc
pop
stos
jp
rorb
push
sbb
xchg
movsl
add
aad
fwait
imul
stc
mov
fdiv
mov
pop
mov
dec
cmp
cmp
or
scas
dec
push
cmp
clc
imul
mov
fsubr
roll
movsb
xor
add
cltd
lea
jns
mov
jmp
cmp
insb
push
call
out
push
mov
mov
in
insl
jle
cmpsb
mov
mov
sbb
jle
mov
dec
sub
mov
push
dec
insl
and
mov
mov
imul
gs
cmc
hlt
sub
dec
sub
popa
xor
ja
les
adcb
xchg
and
push
repnz
push
test
and
mov
jo
sbb
push
mov
cli
stos
xchg
mov
mov
loope
shl
popa
inc
xor
cltd
dec
ds
ss
aad
jmp
fistl
push
cmp
lcall
pushf
xor
xchg
js
mov
push
cmp
push
xchg
cmp
mov
sbb
lahf
xchg
mov
mov
lea
mov
xchg
pop
push
pop
inc
inc
or
in
out
das
cmp
add
loope
aaa
test
pop
loop
out
scas
inc
test
jmp
sahf
sahf
jae
lcall
andb
mov
lahf
stos
int
or
cmp
shl
sbb
pop
leave
mov
stc
lret
test
adc
fidivl
jge
test
loope
fbstp
add
jne
scas
xchg
jo
mov
dec
cmp
sub
cmp
es
lcall
sub
add
or
fsubrl
jno
xchg
cltd
mov
mov
popa
cmp
jp
mov
sahf
pop
jg
and
xchg
adc
ss
dec
cmp
and
in
imul
dec
stos
sub
push
cmpsb
out
xorb
mov
xchg
lret
cli
add
mov
scas
jg
jo
repz
call
scas
xor
pop
ja
in
adc
mov
push
push
xchg
leave
leave
call
aad
push
mov
sahf
movsb
leave
mov
addr16
dec
push
stos
test
imul
clc
cmp
add
push
sti
jecxz
scas
mov
or
out
mov
mov
pop
sub
cmp
data16
push
icebp
push
xchg
jns
xchg
adc
repnz
adc
dec
mov
mov
ret
mov
jmp
pop
jmp
jmp
dec
cmp
cld
hlt
xlat
pop
sti
jb
mov
push
fwait
xor
sbb
mov
inc
mov
fstpt
in
hlt
nop
push
popf
mov
mov
shll
rcrb
dec
push
sbb
pusha
lret
pop
sbb
xchg
jge
push
adc
lahf
dec
jl
dec
xor
nop
pusha
inc
jge
cmp
fwait
aaa
lock
pop
adc
adc
sub
push
push
popa
aas
enter
mov
cmpsl
insl
test
ficompl
movsb
js
ss
int
push
mov
jbe
rorl
adc
xchg
pop
jmp
pop
leave
jmp
addr16
xor
xor
nop
call
cmp
lahf
xor
sbb
adc
mov
pushf
xchg
fs
je
stos
jle
xchg
push
inc
pop
pusha
push
into
and
iret
mov
arpl
jnp
push
pop
push
pop
jnp
mov
dec
mov
into
insl
push
aaa
andl
xor
cmp
push
imul
jno
jecxz
sub
test
ret
xchg
adc
in
lock
imul
sbb
rclb
test
fildll
cmpsl
and
mov
jno
cmpsl
push
outsb
xchg
fwait
daa
mov
addl
inc
inc
rcr
clc
stos
hlt
xor
insl
scas
and
pop
xor
and
rorl
mov
jge
jg
test
mov
popf
stos
mov
mov
mov
lods
mov
xchg
cmp
mov
lret
push
fwait
pop
or
fistl
cltd
sub
out
in
or
leave
cmp
fcomps
add
pop
or
mov
sbb
sub
lods
lods
lea
decb
or
push
inc
cmp
rorb
lock
sbbl
jl
lcall
in
push
hlt
push
or
aas
pushf
fwait
cmp
jecxz
sub
xchg
in
dec
sbb
xlat
xor
rorl
add
push
sbb
lahf
orb
sub
jne
mov
sub
lret
xchg
repz
int3
ret
movsl
test
shrb
dec
sub
jno
popa
pop
mov
mov
jge
jns
repnz
ret
repz
psubb
adc
lahf
das
and
arpl
mov
dec
jecxz
enter
jecxz
into
ficompl
shlb
es
mov
sub
test
cmp
inc
push
pop
arpl
inc
loopne
ret
loope
or
pop
nop
cmp
sub
fisttps
popa
lret
mov
mov
lds
imul
mov
cwtl
mov
xlat
ds
mov
sbb
into
or
loopne
test
sti
sub
pop
lcall
dec
rol
lds
and
loopne
das
in
jno
adc
ds
push
icebp
xorb
lcall
sbb
fwait
add
and
pusha
cmpsl
repnz
xchg
cmp
push
out
jbe
adc
loope
out
dec
lock
mov
icebp
sarb
int
xor
cli
rclb
xchg
js
push
dec
sbb
arpl
int
push
fdivrs
lahf
fsubl
cmpsb
movsl
mov
cmp
and
push
test
xchg
cmp
clc
negl
push
xor
sub
add
xchg
lods
jno
shl
pop
dec
mov
xchg
push
sbb
xor
add
mov
and
aaa
std
aaa
or
test
inc
push
out
std
xchg
xchg
or
into
jbe
out
jo
shlb
and
mov
stos
lea
inc
out
jno
mov
je
jae
stos
pop
mov
movsl
pop
in
and
cltd
xorl
jbe
or
int3
sub
fiadds
pop
inc
fwait
jno
inc
adc
and
jnp
mov
fildll
inc
push
xlat
dec
mov
cmp
decl
sub
xchg
push
cmpsb
outsl
cmpsl
sbb
shll
cli
gs
and
inc
stos
and
push
mov
pop
dec
jmp
subb
pop
inc
inc
or
std
adc
pop
call
pop
enter
xchg
rclb
push
aad
add
jnp
and
imul
sub
xorb
scas
and
mov
cmc
clc
jge
xlat
mov
cmp
das
dec
mov
arpl
xchg
cmp
fcomi
xlat
ja
call
call
inc
push
testl
dec
les
popa
loopne
pop
insb
loope
cmpsb
in
pushf
dec
sub
rcll
ret
js
imul
push
popa
dec
pop
xor
or
xchg
lods
in
fcmovnb
sahf
and
in
sub
mov
pop
mov
or
cmp
fdivrl
push
add
roll
push
inc
scas
mov
or
xor
bound
xchg
fadds
xchg
mov
mov
jmp
inc
push
and
dec
jl
mov
or
cwtl
orl
out
xor
mov
int3
push
outsl
jge
mov
enter
sbb
fdivl
lret
out
jne
fdivs
mov
loopne
push
fsubl
push
and
xor
addb
push
xor
in
adc
minps
xor
mov
jl
mov
push
jmp
aam
jl
hlt
or
xchg
adc
loopne
pop
sub
or
dec
and
addb
push
cmpsl
dec
mov
sbb
adc
fcompl
cwtl
outsb
and
dec
cwtl
std
sub
inc
xor
in
or
mov
mov
daa
imul
jbe
loop
pop
sub
push
lods
fldt
ffreep
xor
sub
jo
clc
aam
xchg
push
les
repz
out
sub
push
sub
insb
fidivl
movntps
lahf
push
std
in
cmp
daa
fucompp
lret
daa
test
arpl
mov
inc
and
xchg
cmp
out
movsb
dec
inc
or
mov
push
fisttpl
popf
cmpsl
call
sbb
pop
bound
mov
push
dec
xlat
shlb
mov
pop
das
sub
jg
iret
fwait
cmp
cs
ljmp
mov
mov
jb
movsb
aam
fists
mov
cwtl
test
stc
repnz
cli
ret
inc
hlt
sbb
fisttpl
xlat
mov
xchg
sar
data16
sub
adc
fwait
sar
mov
ss
xchg
fs
in
push
xchg
bound
jae
pop
lock
xchg
es
pop
push
sbb
jg
ljmp
ds
aam
lods
push
sti
cmpsb
aam
push
dec
or
int
push
fs
mov
push
or
xor
das
push
xchg
jle
iret
add
pop
clc
mov
sbb
shl
inc
mov
inc
push
int3
and
test
mov
xlat
mov
mov
push
test
inc
shll
es
insb
popf
lret
lret
push
mov
mov
jns
jne
inc
adc
loop
mov
popf
das
inc
lods
sub
inc
in
mov
pop
jmp
jle
pop
stos
sbb
std
jge
arpl
sbb
mov
js
dec
mov
mov
pop
loope
add
xor
fwait
xchg
pop
sbb
int
fwait
mov
incl
mov
shlb
dec
ficoms
mov
rol
push
mov
in
jmp
lret
jns
jno
and
pop
push
xor
push
add
xchg
jo
push
pop
fnsetpm(287
shll
aaa
fildll
in
push
enter
in
xchg
mov
lds
cmp
cmp
std
mov
stos
xchg
jnp
push
mov
fwait
cli
movsl
pop
mov
in
rcll
pop
xchg
sarb
jecxz
fnstcw
jae
bound
movsl
jo
leave
mov
mov
mov
rorl
dec
cmpb
cmp
in
fcoml
leave
cltd
mov
sbb
or
jg
je
pop
cmp
daa
mov
pop
xlat
jb
push
push
xchg
fiaddl
dec
jle
mov
mov
imul
mov
dec
jmp
lock
and
mov
or
push
xor
push
pop
jl
cmp
or
or
dec
aas
lods
pop
lock
xchg
mov
jg
adc
add
str
push
nop
jp
inc
lcall
test
mov
jecxz
int3
daa
sarl
cmp
inc
sub
or
jge
test
xchg
jo
lods
inc
shl
das
aaa
or
adc
mov
or
add
dec
imul
aam
or
aam
mov
in
or
daa
test
pop
cmp
aaa
mov
adc
clc
ror
in
inc
push
daa
mov
xor
jg
add
cmc
shrb
push
add
mov
dec
repnz
push
in
in
ds
xor
fs
or
insb
jne
test
add
push
mov
cmp
je
pop
mov
loop
jne
mov
pop
mov
fsubrp
or
add
adcb
aad
shrl
jg
in
sbb
push
inc
and
sub
inc
lahf
je
aaa
mov
xchg
gs
sarb
push
and
es
push
loopne
ljmp
mov
gs
dec
cltd
iret
or
call
or
addb
cmp
push
loopne
jl
inc
jae
cmp
mov
mov
or
movsl
dec
cmp
ret
and
mov
mov
mov
dec
daa
pop
ret
pop
cmp
push
push
fmuls
in
popa
bound
lods
dec
aaa
xor
or
mov
into
add
js
lods
mov
cmpsl
or
fcoml
insl
outsb
into
mov
popf
leave
stos
lret
es
mov
xor
and
lret
push
divb
inc
cmc
mov
test
jecxz
inc
subl
push
fwait
or
push
or
sbb
cmp
jge
movsl
or
ds
test
popf
gs
xor
movsb
outsb
out
jno
pop
mov
loopne
pusha
shll
jns
loopne
sarl
mov
pop
repz
mov
ja
outsl
jmp
pop
mov
or
xchg
dec
inc
jo
cmpsl
in
adc
cmp
sub
xchg
push
cwtl
iret
outsb
xchg
sbb
or
xor
push
leave
mov
aaa
pusha
dec
in
pusha
cmp
outsl
or
lock
dec
mov
or
push
and
nop
push
aaa
sbb
sti
inc
stc
inc
pop
pop
int3
jnp
push
fadds
lret
push
cld
sbb
jmp
enter
inc
mov
jno
sbb
mov
jl
aaa
cmpsb
push
jb
test
add
push
rcrb
loope
xor
or
cmp
lods
inc
cltd
shrb
jecxz
pop
jno
push
xorb
dec
dec
jg
push
cwtl
xchg
adc
fdiv
sbb
fisttps
lret
sahf
push
mov
or
mov
inc
add
mov
mov
mov
test
hlt
inc
sub
lods
dec
mov
push
adc
das
les
cmp
les
stc
jl
int
clc
jnp
insb
pushl
in
mov
pop
scas
jo
xor
mov
cmp
aam
movsb
out
cmc
dec
shlb
xchg
sti
mov
pusha
sub
dec
xor
dec
sbbl
sub
xor
es
stos
out
enter
jle
stos
in
in
jmp
jnp
cli
xor
outsl
pop
or
dec
push
dec
jle
inc
fidivs
cmp
dec
fisubrs
adc
stos
push
outsb
xchg
pushf
pop
leave
arpl
add
lock
icebp
add
test
data16
dec
sar
jmp
mov
lea
or
loop
daa
cld
enter
adc
fwait
scas
pop
insb
dec
mov
xor
insl
movsb
fs
xor
dec
bound
jae
rcll
jmp
xchg
cmc
xchg
test
fcmovb
jecxz
cmp
fldcw
iret
jmp
les
xlat
cmc
sahf
or
in
dec
mov
xlat
aas
movsb
mov
subb
int
movsb
xchg
sub
hlt
mov
inc
and
js
lret
xor
insl
mov
lret
jmp
cmp
in
mov
rcrb
xchg
test
push
xor
addr16
pushf
pusha
pushf
adc
ljmp
adc
fcoml
adc
pop
fdivrl
jb
es
xor
cmp
xchg
jg
rclb
jle
sbb
cmpxchg
mov
sarl
sti
sbb
out
icebp
jo
in
lods
sbbb
dec
negb
push
dec
jnp
pop
sbb
mov
pop
into
cmc
or
push
in
cmpb
repnz
fldt
xchg
leave
test
and
xor
add
adc
in
hlt
push
les
aam
movsb
pop
mov
test
outsb
fs
je
inc
mov
xor
add
adc
in
hlt
push
les
aam
movsb
pop
mov
test
outsb
fs
hlt
mov
mov
xor
add
xchg
out
in
hlt
push
les
aam
movsb
pop
mov
test
push
lcall
and
xor
add
adc
in
hlt
movsb
outsb
ds
aam
les
hlt
add
adc
mov
lock
xor
ljmp
mov
int
std
jo
add
xor
loopne
lock
sbbb
pop
push
fstl
pusha
std
jle
add
and
fxch
leave
dec
clc
aad
outsl
cltd
and
xor
aas
mov
jg
jl
lods
test
or
xchg
ja
fisubrs
lods
or
add
clc
add
inc
das
pop
cwtl
daa
dec
shrl
jge
outsl
popf
pushf
xchg
mov
push
pushf
add
mov
sub
adc
inc
inc
dec
adc
sub
scas
dec
pop
jo
pusha
add
xor
sub
aad
sbb
mov
lret
and
push
enter
pushf
adc
push
xor
nop
dec
pop
movsl
insl
cs
jg
mov
xor
xchg
frstor
sub
into
adc
popf
xor
cmpsl
insb
xorps
xchg
mov
mov
movsl
sbb
pushf
inc
jb
mov
leave
mov
xchg
sbb
test
or
imul
lods
lgs
test
imul
dec
inc
fwait
cmp
adc
jne
push
cld
pop
int3
scas
sbb
dec
in
jb
mov
mov
xor
push
fcoml
or
enter
mov
fstl
pusha
std
jo
add
xor
loopne
lock
sbbb
sub
pusha
std
jo
add
xor
pop
fiadds
mov
sbb
insl
inc
sti
incl
sub
ja
push
lret
mov
push
stos
xchg
cmp
cmp
lret
mov
mov
pop
movsl
mov
jo
adc
xchg
js
cld
std
sub
and
pop
mov
add
sti
xchg
mov
push
fisttpll
mov
call
xlat
adc
dec
and
push
or
push
sub
cmp
cmp
cli
int3
pop
xor
pop
dec
mov
or
aas
xchg
push
pusha
mov
xchg
xor
pop
enter
movl
mov
pusha
inc
jg
shrb
fstl
enter
repz
pop
cmp
scas
push
inc
sub
push
popa
xchg
push
rorb
insb
add
fildl
mov
jle
sub
das
stos
and
mov
lret
mov
pop
mov
dec
jle
iret
fcmovnbe
aam
test
loop
xchg
push
andl
fs
fisubl
imul
push
pop
mov
shrl
sub
out
aad
push
mov
xor
inc
push
mov
imul
jno
fs
aas
mov
aaa
add
leave
daa
sub
jns
pop
ja
jbe
mov
dec
sub
jp
decb
and
mov
loope
movsl
pop
les
nop
jp
je
mov
inc
xchg
rcl
xchg
dec
mov
dec
jno
xchg
pop
xor
das
dec
leave
mov
fwait
hlt
sub
fldl
cli
sbb
loope
lea
jl
hlt
or
adc
push
fstl
mov
mov
or
xorb
mov
fldl
jmp
or
dec
negb
fnstcw
xor
adc
mov
dec
dec
std
mov
or
test
mov
add
sub
jns
daa
cmpsl
mov
in
inc
sub
stos
jp
mov
pusha
or
inc
mov
dec
jp
mov
inc
aaa
mov
mov
out
fmull
hlt
gs
ret
je
cmc
addr16
xchg
hlt
into
add
cmpsl
andl
jecxz
or
es
popf
mov
pop
inc
adc
xchg
and
jle
std
movsb
sahf
pop
icebp
dec
pop
cli
mov
jmp
sti
jge
in
pushf
shl
fisubs
hlt
jmp
lods
ffree
pushf
fldl2e
and
or
add
dec
loop
ss
jno
dec
cmp
loopne
dec
cwtl
jmp
mov
ret
pop
pop
sbb
add
scas
sbb
add
mov
sbb
hlt
jge
ret
lock
movsl
pop
ret
jo
push
fs
popl
dec
mov
sub
push
push
sbb
dec
or
jae
add
stc
adc
addr16
mov
pop
push
and
cld
push
outsb
mov
loope
testl
cld
push
sbb
mov
lods
jmp
jmp
cwtl
rorl
mov
jo
xchg
jecxz
lret
or
aaa
stc
cmp
movsl
mov
jnp
inc
leave
ret
and
add
mov
xor
fiadds
dec
and
and
pop
and
sub
sahf
adc
dec
scas
xchg
inc
sub
and
dec
push
in
sbbb
pop
pop
xor
jbe
addr16
popa
jnp
adc
scas
mov
ja
xor
xchg
xchg
clc
mov
int3
pop
xchg
mov
mov
call
inc
add
push
pop
rclb
in
rorl
movsl
mov
rolb
inc
mov
scas
add
adc
xor
adc
scas
adc
pushf
inc
aaa
dec
and
scas
pop
cmp
sbb
mov
xor
fs
pop
repz
add
and
rcrl
cli
loop
fisttps
jmp
arpl
in
push
in
sahf
pop
cmp
adc
out
mov
push
dec
jge,pt
sahf
push
dec
lods
ljmp
adc
daa
stos
and
fdivrs
aam
cli
leave
or
mov
mov
mov
push
mov
pop
push
ret
arpl
cmpsl
adc
out
repnz
aad
cwtl
inc
xchg
jmp
ljmp
mov
sbb
into
filds
negl
push
and
dec
aas
imul
add
mov
sub
sti
inc
shrb
or
stc
sahf
dec
stos
dec
dec
push
and
mov
or
neg
ret
push
jge
add
and
outsl
add
out
sbb
jb
js
js
dec
fidivs
fadd
pusha
cmp
push
sub
mov
mov
ljmp
xor
inc
cmp
mov
adc
js
adc
lahf
cmpsl
arpl
jmp
mov
sub
cmp
bound
popa
mov
cmpsl
add
fcoms
iret
push
or
adc
mov
rorl
mov
jno
mov
mov
aad
sub
dec
xlat
and
xor
lret
push
jp
outsb
lea
test
xchg
push
insb
inc
xlat
sbb
scas
push
and
pop
push
out
pop
lds
mov
lahf
dec
cmpsl
cmpsl
bswap
jecxz
lret
leave
mov
mov
push
je
in
inc
fiaddl
fnstcw
icebp
or
push
cmp
daa
xchg
mov
adc
clc
arpl
out
sbb
movl
popf
add
mov
push
test
por
mov
sub
shlb
pop
scas
das
stos
sub
lods
xor
dec
in
cmp
jle
push
stc
jmp
in
ljmp
sub
scas
cmpsb
int3
cmp
mov
push
mov
pop
aaa
pop
sub
ffreep
mov
int
mov
iret
mov
std
orb
lock
std
push
test
or
push
out
cmp
shlb
xchg
sbb
dec
cmp
arpl
and
push
sbb
pop
inc
in
pop
sbb
xchg
stc
adc
sub
shrb
mov
push
jp
and
lea
jmp
cltd
scas
mov
inc
stos
fnstsw
fwait
xor
les
dec
xor
mov
xchg
adc
or
icebp
out
cmp
adc
mov
iret
enter
pop
and
adc
sbb
js
xchg
ljmp
sub
mov
push
sub
jo
hlt
dec
in
sbb
mov
sbb
les
sub
mov
lret
lret
cmp
xchg
mov
shlb
mov
addr16
inc
loop
pop
shl
cmpsb
testb
push
xchg
inc
inc
daa
ret
push
imul
int
pop
std
int
dec
rorb
enter
fdivrs
jns
cmpsl
mov
lea
fcomp
mov
dec
aas
mov
pop
fmull
fidivrl
divl
sub
out
mov
push
jb
xor
mov
call
add
stos
xchg
push
mov
and
cmpsl
mov
mov
ss
subw
xor
inc
cld
out
pusha
mov
mov
rorl
xchg
hlt
jns
mov
cmp
clc
test
dec
push
xor
jbe
cmp
enter
add
mov
sbb
sbb
filds
ret
xchg
shl
jmp
jmp
push
nop
mov
lahf
pop
ja
ss
neg
mov
pop
push
add
inc
je
xor
xorl
adcl
imul
dec
push
lcall
sahf
adc
pushf
cmp
push
outsb
push
mov
mov
or
sub
xor
rcl
inc
lds
adc
cli
icebp
cmp
in
lcall
into
xor
mov
enter
pop
jmp
adc
mov
jno
push
mov
dec
mov
cmpsb
xor
outsl
jg
push
mov
hlt
mov
or
leave
iret
es
mov
sub
cs
out
sbb
mov
es
test
subl
cmp
inc
pusha
ffreep
xchg
xlat
jb
cmp
push
adc
mov
lods
data16
es
or
xchg
inc
lods
pop
bnd
mov
add
xchg
sbb
push
daa
mov
fnstsw
lods
sahf
dec
pop
jp
loop
and
cwtl
mov
mov
lcall
xchg
cmp
dec
or
shlb
test
jne
adc
sub
pop
pextrw
and
cmpsb
lret
sahf
push
add
jnp
int3
xchg
inc
mov
shl
fildl
int3
cmpsl
mov
rcll
and
cmp
test
dec
scas
lds
xor
imul
loop
cmpsb
lret
adc
xchg
clc
in
ret
repz
lcall
das
inc
or
mov
in
sub
mov
cs
sbb
jmp
dec
fldt
xchg
insl
std
aaa
js
or
dec
cmp
adc
cmp
push
fs
iret
jae
push
add
dec
pop
and
lahf
fidivrs
ljmp
out
stc
jmp
adc
dec
lods
pop
inc
inc
cmpl
mov
dec
and
dec
out
scas
dec
ljmp
test
adc
sub
pushf
fsubs
stc
adc
mov
inc
sub
fcomp
popa
mov
loopne
xor
ljmp
nop
fiadds
xchg
cmpsl
icebp
jns
add
mov
and
das
adc
xor
pop
outsl
pop
push
shlb
fadds
push
jl
enter
jae
dec
jge
xchg
mov
mov
test
push
int3
xlat
or
roll
xlat
jnp
dec
std
cmpl
jo
inc
jbe
sbb
or
sub
inc
std
les
movsl
arpl
psadbw
lret
into
jnp
insb
lock
cwtl
addr16
scas
push
rcrb
adc
push
adc
inc
push
push
jno
fldpi
aaa
jl
push
ret
pop
dec
daa
into
adc
mov
dec
mov
andb
mov
out
add
test
les
shrb
pusha
inc
shll
cmp
cld
out
movsl
daa
or
testb
fwait
das
out
jns
push
out
loop
mov
adc
jp
and
and
push
imul
pop
push
jae
xor
outsb
mov
add
dec
cltd
pushf
iret
mov
pop
add
gs
and
jge
push
mov
je
cmp
popf
fimuls
xchg
xor
sbb
pop
adc
jge
dec
int
repnz
jmp
or
jg
xor
cmp
pop
shll
ret
adc
or
xchg
add
mov
test
inc
ja
out
mov
adc
xlat
in
fnstsw
jg
lcall
add
sbb
fwait
xchg
and
aam
mov
jp
push
mov
pop
movsb
mov
popa
aam
aam
cmp
dec
adc
es
and
inc
sti
xor
loope
mov
in
sti
dec
jecxz
inc
xor
js
add
sahf
hlt
mov
pop
test
push
stc
fsubs
sbb
mov
enter
leave
fldpi
sahf
jnp
pop
lods
shlb
imul
ljmp
lea
test
push
mov
shl
or
sub
lahf
loopne
fucom
or
pushf
loopne
inc
addr16
inc
jecxz
mov
mov
push
adc
and
movq
sahf
mov
or
cli
outsw
mov
add
push
ficoms
sub
das
lds
loope
call
cmpsb
mulb
shlb
fisttpll
test
jb
ret
xchg
pop
shll
sub
inc
inc
test
mov
insb
cmp
enter
jp
jecxz
mov
jle
subl
mov
add
sub
in
out
mov
testb
or
shll
mov
mov
sbb
je
das
mov
jns
rcrb
es
frstor
sbb
mov
dec
icebp
test
and
jnp
mov
ret
xor
dec
jmp
push
cmp
or
fimull
inc
push
test
push
test
push
cli
mov
orl
jb
push
int3
ljmp
cmpsb
mov
jbe
imul
add
dec
pusha
dec
sub
enter
and
je
mov
inc
aad
sub
xor
sbb
cmpsb
cmp
mov
jecxz
mov
icebp
pop
pop
jg
jecxz
leave
sub
lods
je
mov
pusha
mov
jmp
pusha
pop
jnp
adc
lock
jne
xor
rcr
scas
or
sub
ret
inc
sub
call
ror
push
cmp
adc
ror
push
add
xchg
sub
int
dec
cmp
inc
or
movsb
loopne
enter
mov
shll
inc
sub
mov
sbb
addr16
lcall
sbb
ljmp
push
inc
or
jno
inc
iret
add
inc
and
clc
push
dec
mov
mov
push
movsl
ja
lret
dec
cmp
lcall
mov
mov
xchg
dec
cli
xchg
push
popl
sub
js
shlb
push
sub
add
add
jo
outsl
insl
mov
test
dec
popa
cmp
jnp
rol
in
movsl
aas
imul
and
dec
sarb
dec
or
getsec
adc
aad
cmp
out
mov
or
cmp
jecxz
add
jmp
lods
push
bound
int3
mov
in
inc
out
rorb
sbb
test
test
bound
or
xor
out
fildl
inc
mov
movsb
mov
inc
pop
jno
mov
jg
push
popf
dec
push
lret
cmpl
cwtl
sbb
dec
jmp
cmp
mov
jne
adc
in
pop
cmp
dec
jl
ret
mov
push
pop
dec
jbe
cmp
in
and
pusha
mov
cmp
cmp
idivl
fwait
data16
jnp
cmp
sub
xchg
int
or
clc
in
adc
mov
xchg
sahf
mov
push
mov
mov
faddl
lcall
xor
sbb
ret
push
xchg
aas
cmp
jb
mov
int3
inc
pusha
sub
fwait
lcall
push
push
jbe
sbb
push
mov
icebp
in
lods
negb
test
push
jle
adc
lds
ret
push
rcrl
les
arpl
xor
cli
gs
repnz
cmp
mov
pop
cmc
lds
outsb
xchg
jp
cmpsb
pop
adc
stc
jl
adc
jl
mov
and
xchg
imul
fimuls
mov
inc
cli
add
lea
popa
mov
lahf
inc
int3
ljmp
jae
ficoms
cmc
mov
mov
add
loope
xchg
pop
js
adc
das
addr16
sub
js
cmp
mov
popf
subl
inc
movsb
adc
inc
inc
mov
sbb
enter
adc
mov
les
cltd
xor
inc
lret
xchg
cmp
sahf
fmuls
mov
pop
lret
in
mov
into
fdivrl
mov
dec
cltd
adc
mov
mov
pop
push
inc
push
jne
imul
insb
xor
clc
or
push
dec
cwtl
push
arpl
pop
push
lahf
aad
mov
mov
insb
xor
add
test
das
sarl
cs
push
jno
dec
pop
test
push
into
and
es
mov
rcrb
aam
jnp
lods
int
ret
mov
dec
mull
or
and
ret
add
push
jg
push
push
aam
cld
pop
push
jns
or
add
inc
out
cmp
mov
xchg
or
sbb
xlat
lods
inc
lock
mov
sub
and
aad
push
neg
cs
add
out
dec
adc
inc
nop
sub
mov
pop
cwtl
mov
mov
cld
mov
xchg
mov
cltd
sub
aaa
push
cmc
pop
xchg
push
movsb
pop
xchg
int
xchg
lods
into
or
fcomp
ret
inc
pop
iret
scas
or
test
pop
pop
mov
xlat
aaa
jg
pop
inc
pusha
sbbl
pop
or
inc
inc
add
arpl
pop
push
xlat
enter
mov
xchg
mov
out
mov
mov
xchg
fnstcw
aas
loopne
and
adc
leave
push
and
dec
jne
jb
and
and
pop
cwtl
stos
test
fwait
dec
sbb
ret
jo
jmp
bound
mov
mov
data16
mov
pusha
xchg
pop
push
xchg
lret
pusha
lods
dec
insl
stos
mov
in
aad
rorb
popf
ljmp
or
data16
mov
lret
inc
jp
add
xor
push
cmp
sub
gs
pop
dec
mov
int3
push
fwait
out
int
adc
dec
sbb
pop
imul
mov
mov
idivb
inc
lea
setbe
loopne
fldl
imul
sahf
jne
xor
cmp
mov
fsubrs
push
fsubp
adc
out
test
packsswb
inc
xchg
sub
aam
hlt
sbb
data16
push
or
push
cs
xor
mov
lock
pop
sahf
enter
sub
popa
aas
int
dec
cmpsb
stos
mov
mov
xor
hlt
leave
fs
mov
pop
aaa
xor
movsb
inc
jno
enter
jge
in
sbb
adc
in
jnp
mov
push
movntps
out
sbb
scas
scas
mov
rcl
mov
sbb
cmpsl
push
repz
cmpsl
inc
sti
lods
pop
xor
sbb
fwait
loopne
ret
add
sar
inc
mov
leave
idivb
addr16
mov
jecxz
pop
xor
push
jl
xlat
and
mov
faddp
or
lds
xlat
enter
sbb
stos
out
fldt
add
add
pushf
inc
out
pusha
out
popf
or
test
nop
pop
sahf
sub
test
pop
mov
mov
dec
addr16
or
ftst
int3
sbb
and
repnz
adc
and
js
es
iret
cmp
push
mov
xlat
repnz
insl
push
aam
mov
pusha
inc
lret
mov
mov
loop
loope
jns
adc
daa
cmpsl
outsb
or
cmpsl
and
xchg
fwait
pop
rcl
cmp
cltd
jnp
sbb
fwait
test
xor
push
mov
inc
mov
pusha
pop
mov
ret
inc
adc
movsl
mov
je
inc
shlb
jno
imul
pop
jl
or
xchg
movsl
stos
or
clc
jo
cltd
mov
ds
pop
cmpsb
cmp
shll
adc
fsubrl
add
mov
sub
or
hlt
negb
dec
lret
xor
ror
mov
pop
and
xor
or
testb
jns
add
add
push
lret
add
and
cwtl
sbb
loopne
int
imul
cmpsl
push
pop
aam
pushf
gs
loope
push
adc
xchg
mov
ret
dec
test
cmpsb
dec
imul
mov
xchg
lods
pop
out
cmp
adc
pushf
xchg
jmp
push
clc
jl
roll
sarl
push
sbb
mov
rorb
mov
test
fsubrs
jne
pop
ret
out
jl
flds
lock
test
fsubs
arpl
xchg
pop
insb
ljmp
lret
sub
sbbl
sub
js
sub
lds
rclb
add
push
push
jnp
aas
mov
jmp
push
rdmsr
jnp
stos
add
and
or
in
ja
stos
mov
lds
jp
cld
or
loopne
js
and
imul
je
fstps
pusha
xchg
sub
ds
sbb
cmpsb
xor
push
push
xchg
cltd
sub
cs
adc
push
xchg
fcmovnbe
push
cli
and
push
mov
test
sbb
cmp
xlat
push
pusha
sbb
mov
add
loop
cs
into
jae
cs
mov
push
test
fucomip
imul
dec
mov
rcll
mov
lahf
fdivs
dec
mov
data16
adc
lahf
mov
pusha
pop
and
pop
pop
push
xlat
pushf
scas
aam
or
jbe
loope
or
push
jmp
mov
es
fdiv
cs
or
in
mov
pop
inc
pop
pop
mov
bound
stc
imulb
dec
lahf
scas
adc
fcomps
and
cli
mov
popf
cs
lahf
mov
xor
aad
mov
push
and
sti
xorb
adc
je
add
iret
sub
lcall
xchg
push
jmp
ljmp
or
inc
fstl
pusha
std
jo
add
xor
loopne
lock
sbbb
sub
pusha
std
jo
add
xor
loopne
lock
sbbb
sub
pusha
std
jo
add
xor
loope
lock
sbbb
sub
lret
lcall
iret
push
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
scas
mov
mov
out
cltd
ret
rol
sub
adc
add
jle
dec
inc
pop
inc
scas
mov
mov
out
repnz
loop
rcr
cmpsl
xor
and
adc
add
jg
dec
push
pop
inc
scas
mov
mov
out
repnz
loop
rcr
ret
sbb
insb
outsb
xor
ds
mov
mul
loope
test
out
adc
dec
jecxz
cmc
pop
cmpsb
lods
sbb
jno
arpl
out
loop
outsl
xor
dec
xchg
and
pop
cmp
cmp
ljmp
in
xlat
inc
mov
or
and
adc
std
outsl
cmc
pop
int
pop
mov
xchg
loop
fcmovu
and
into
mov
out
aam
xchg
bound
mov
aad
std
jb
pop
or
adc
or
das
int
aaa
sub
add
and
jb
cmp
xchg
jmp
mov
sub
mov
mov
into
dec
imul
je
mov
xor
mov
mov
out
repnz
loop
rcr
ret
and
adc
add
jle
dec
push
pop
add
mov
fcmovne
rcr
ret
mov
pop
mov
inc
pop
cmp
pop
jb
push
aas
and
fcomp
lret
fcmovu
loope
mov
cmpsl
mov
pop
push
jae
push
push
cltd
pop
sbb
daa
aaa
xor
leave
repz
cli
stos
sar
into
rcr
ret
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
repnz
loop
rcr
ret
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
std
loope
ds
or
sahf
test
popf
and
cmp
pusha
jae
inc
adc
jb
out
leave
mov
xlat
fsubr
imul
jg
dec
fs
loope
std
cmp
xor
rcll
repnz
aam
shl
xchg
jle
ds
aad
outsb
xchg
push
jle
or
cli
inc
mov
imul
shll
divl
icebp
add
shrl
fwait
scas
ret
xor
popf
enter
cmp
jmp
int3
mov
and
jle
mov
inc
das
imul
outsb
stos
jmp
or
shll
insb
push
cmp
ds
pushl
mov
mov
mov
pop
aam
loopne
jmp
and
fiadds
and
jp
jb
sbb
mov
test
jle
into
and
inc
sbb
fisttps
popf
lods
mov
jae
add
adc
aaa
std
mov
sarl
lods
mov
xchg
fnsave
mov
pop
pusha
mov
xlat
pop
and
dec
mov
cmp
out
mov
xor
pop
loopne
mov
mov
push
pop
testl
xor
adc
jle
pop
lret
mov
mov
jo
mov
sub
push
dec
sti
add
pusha
iret
ljmp
ret
xchg
push
jmp
aas
insl
jecxz
adc
or
pop
lds
leave
push
lods
cld
aaa
sub
mov
sbbl
cmpsb
xor
shr
sub
mov
or
cmp
int3
mov
mov
cltd
mov
lods
add
int3
xchg
into
sub
mov
mov
loop
imul
dec
sbb
aaa
mov
sub
shl
js
das
sub
out
outsl
loop
xchg
push
add
or
test
lahf
js
mov
loope
mov
shlb
fldenv
cmp
je
adc
or
xchg
nop
lcall
dec
pop
out
dec
mov
push
js
sahf
hlt
test
add
adc
rclb
lock
mov
cwtl
mov
xor
iret
jne
mov
aaa
or
jnp
sbb
xchg
sbb
sbb
test
mov
idivl
stos
xor
dec
mov
mov
test
adc
or
test
mov
xor
xchg
cmpsb
mov
iret
aas
dec
in
mov
insl
sti
sub
sti
xchg
fwait
dec
pop
inc
jmp
sub
lahf
clc
nop
or
mov
nop
iret
ss
cwtl
xchg
push
add
stc
dec
lahf
or
fiadds
lods
subb
xchg
sub
mov
pop
lahf
jns
stos
lahf
ljmp
dec
push
orb
js
lds
sar
mov
repz
inc
test
mov
into
add
inc
mov
cld
or
icebp
test
and
popa
jp
loopne
mov
lds
mov
je
clc
imul
jp
pop
jmp
push
and
nop
and
mov
icebp
outsl
or
push
add
sbb
sub
out
mov
dec
and
out
xchg
xchg
jae
testb
hlt
jecxz
pop
adc
in
lods
test
inc
cld
adc
out
push
imulb
lret
roll
jbe
xchg
xor
lahf
pop
ds
xchg
pop
ficoms
repz
das
ret
xor
mov
pop
xchg
adc
rcr
ljmp
inc
add
invd
mov
fisubl
xor
fcmovnb
stos
sub
pop
aaa
loopne
imul
pusha
or
inc
dec
pusha
movsl
int
mov
mov
shll
sub
xor
loop
or
adc
xor
inc
pop
push
bound
fwait
cmp
into
test
imul
test
cmp
cmpsl
dec
fs
or
push
jmp
dec
fcomps
push
sbb
inc
icebp
pop
and
repz
mov
cmp
div
xor
push
xchg
stos
pop
test
ret
test
push
dec
cli
xor
jns
xchg
mov
sbb
dec
sahf
scas
mov
jmp
jne
pop
inc
xor
stc
lret
clc
dec
fdivs
inc
push
jl
mov
fstpt
add
or
add
fildll
add
rcr
lds
daa
jg
pop
xchg
mov
xor
mov
add
div
pop
adc
xor
cmc
ret
inc
mov
push
cs
mov
fsubl
call
xorl
cmp
pop
sbb
adc
test
add
xchg
xor
mov
cmp
scas
push
stc
cld
adc
sbb
xor
sub
jbe
pop
rcrb
add
orl
cvtdq2ps
dec
push
dec
pop
pop
mov
fistpl
fidivrl
pop
fcomps
loop
push
out
dec
inc
jp
xor
inc
dec
repz
pop
loopne
or
outsl
loope
pop
xchg
dec
pop
out
xor
outsb
sub
inc
pop
cmp
push
lret
jl
push
adc
inc
in
pop
roll
mov
xor
add
cld
push
frstor
fcmovb
mov
and
subl
cwtl
repz
ja
int
cld
movsl
cmp
bound
sbb
test
mov
sbb
cmp
adc
stos
rclb
jns
jle
push
jo
in
jb
or
call
jle
or
loop
add
mov
ja,pn
aaa
mov
push
ds
lret
adc
xchg
pop
and
shr
test
fdivrl
cmp
xor
cltd
lret
jno
jmp
fcoml
movb
add
cwtl
hlt
jo
stos
repz
add
cmp
outsb
insb
fldenv
ficoml
xor
mov
adc
movsl
sub
sarl
mov
fiaddl
sahf
xchg
mov
mov
inc
jb
dec
xchg
out
and
je
push
push
in
out
push
xor
add
fiadds
xlat
por
imul
xor
stos
push
cmp
scas
loop
pop
into
shll
push
cmp
push
xlat
xlat
xchg
adc
sahf
pop
arpl
sahf
mov
outsb
decb
pop
jl
add
add
add
xor
and
adc
pop
xor
aaa
pop
fnsave
call
int
or
testb
outsb
push
sti
aas
mov
movsb
fstps
call
shlb
ss
mov
or
inc
leave
sub
outsb
std
jne
loope
lret
arpl
jp
repz
insl
les
cmpsb
jge
jo
lods
cld
sarb
and
sarl
int3
cmpsb
push
mov
and
cmp
cmpsl
xchg
ja
jmp
clc
popa
pop
rol
push
mov
push
and
jg
frstor
cmpsl
and
fwait
imul
cwtl
les
mov
mov
je
push
mov
repnz
mov
cmp
dec
shlb
xor
jmp
adcl
xchg
scas
imul
cltd
mov
pop
ljmp
dec
insb
sbb
int3
dec
push
sub
adc
std
sbb
fidivrs
push
fiadds
push
lret
mov
punpcklbw
or
mov
xchg
or
pop
stc
inc
int3
mov
jo
sub
mov
dec
or
bound
loop
adc
pop
mov
ds
mov
push
cli
imul
mov
fldl
aad
jb
int3
mov
or
sbb
out
or
or
out
mov
aam
jbe
cmp
sub
sbb
jno
shl
into
hlt
out
cmc
aad
addr16
insl
jg
add
insb
mov
inc
mov
insl
cltd
dec
lods
loope
insb
dec
imul
shll
mov
repz
pop
mov
in
and
mov
push
cmp
jl
mov
je
int
pop
imul
mov
shll
popa
pop
mov
repz
in
jp
mov
sbb
push
sbb
inc
cmp
icebp
jecxz
jae
rolb
jns
out
addl
ret
adc
stos
mov
xchg
mov
push
enter
adc
xor
ja
clc
sbb
mov
pusha
mov
scas
mov
fwait
mov
and
add
int3
inc
jg
int3
cmc
and
les
jbe
dec
cmp
mov
es
jnp
lods
push
lock
jle
call
das
sub
test
aam
push
hlt
cmp
add
pop
sahf
das
or
out
sub
fsubrs
rep
jbe
fmul
fistl
scas
xor
mov
and
mov
push
push
imul
jle
subb
mov
xchg
xor
cli
push
adc
jl
adc
push
fwait
jmp
jmp
scas
in
sar
xor
push
subl
xor
es
packsswb
sti
incb
adc
or
int3
add
ret
dec
ljmp
mov
pop
xchg
and
in
push
xchg
cmp
pop
xor
lds
aaa
mov
inc
sub
push
rclb
imul
adc
dec
sbb
cld
mov
mov
dec
repz
add
push
int
jnp
add
mov
imul
jno
pop
and
adc
lods
test
fbld
iret
sub
and
mov
enter
daa
pop
jo
call
add
dec
fistps
lods
sarl
pushf
and
xchg
dec
jb
mov
fstps
lods
xchg
push
mov
mov
lret
les
pop
inc
dec
loope
inc
clc
or
lock
cmpb
jecxz
or
xchg
dec
mov
sbb
pop
mov
jb
xchg
pop
das
pop
repnz
jge
pusha
adc
xor
xchg
pop
cmp
mov
mov
fs
mov
in
call
inc
sahf
shlb
jo
inc
adc
and
es
push
jo
aas
std
in
fidivs
inc
add
lret
xlat
fsts
je
das
test
cmpsb
pop
lahf
cmp
mov
sbb
dec
into
pop
sbb
lock
or
jle
popa
sub
lret
jb
push
arpl
push
pushf
push
enter
pop
xchg
icebp
orb
inc
ud2
mov
fmull
add
jb
inc
and
adc
nop
sub
fldenv
mov
sbb
xchg
imul
pop
jmp
insb
cmp
push
popf
repz
cs
push
mov
inc
stos
mov
int
out
ret
cmpsl
or
arpl
mov
bnd
jg
or
push
jo
xlat
cmp
test
jg
lods
popa
adc
xor
jae
std
sbb
mov
insl
out
insb
jbe
push
sub
xor
xor
call
leave
adc
add
push
jno
jae
mov
aam
or
fs
inc
ficoml
fsubrp
mov
clc
sub
pop
adcl
jno
xlat
clc
sti
cmp
outsb
ret
or
add
xor
jnp
xchg
cmpsl
fnsave
mov
inc
lahf
repz
jp
ss
xchg
mov
ja
leave
adc
jge
pop
push
sbbl
sub
test
fbstp
xchg
notl
int3
repnz
jns
sahf
imul
cwtl
into
pop
pop
mov
ljmp
sub
lds
jae
pop
cmp
mov
stc
add
and
ljmp
int
test
push
addl
test
cmp
outsl
jbe
push
repz
imul
inc
cld
mov
or
cmp
cmc
sbb
push
out
sub
and
mov
fdivl
push
scas
mov
jmp
adc
pop
ret
movl
clc
cmp
or
pop
test
add
lret
jle
cmp
sub
in
lret
stc
cwtl
aam
inc
sub
add
pop
cmp
insb
jmp
pop
sub
push
adc
jnp
gs
sbb
inc
repz
test
inc
jmp
les
dec
iret
add
adc
jne
pop
pop
xor
dec
cmp
imul
lods
pop
movsb
rolb
dec
dec
sbb
pop
enter
lret
jle
xor
push
lcall
lahf
arpl
mov
mov
jg
jo
pop
cmp
mov
push
adc
outsl
xchg
addr16
inc
or
notb
sub
push
mov
mov
or
xchg
hlt
aaa
enter
mov
and
cs
gs
inc
sbb
addr16
push
es
sub
push
ja
scas
pop
xchg
sbb
div
das
pop
dec
and
mov
imul
in
pop
shll
adc
xor
ljmp
fnsave
add
push
pop
jmp
push
sub
mov
sbb
push
repz
adc
push
andb
loope
and
jg
ficoms
add
dec
xchg
pop
and
insb
loop
mov
push
rcrb
cmp
cmc
rcll
adc
insl
insl
sub
popa
pop
inc
mul
xchg
adc
mov
xchg
shlb
push
sbb
cmpsb
pop
mov
out
mov
in
xlat
lods
push
push
insb
push
mov
shlb
push
mov
dec
ds
add
lret
arpl
push
push
idivl
xor
cmpsb
stc
pushf
arpl
and
sbb
aas
loope
les
cmpsb
xor
sub
jl
popa
push
imul
and
stos
stos
cwtl
es
out
inc
out
and
nop
dec
sbb
jno
jp
and
sub
mov
sti
mov
notb
orl
cmp
add
aad
inc
shl
xor
mov
mov
xchg
stc
push
xor
sti
movsl
imulb
movsl
mov
repz
icebp
sub
mov
push
faddl
sbb
sub
add
cmc
mov
and
pop
sub
pushf
jb
dec
lods
cmp
inc
mov
push
addr16
pop
jae
dec
lret
lahf
cmp
and
add
outsb
add
idiv
lcall
scas
fimull
jg
movsl
mov
and
push
push
and
jmp
cmp
jnp
rcl
pushf
les
sub
push
xchg
inc
lods
cmp
pop
adc
xchg
call
in
push
incb
pop
and
testb
push
dec
dec
ljmp
cmp
cmp
jp
fists
add
pop
xor
adc
orb
in
mov
pop
repz
call
lods
stc
push
push
inc
dec
das
dec
push
rcl
fs
xchg
jbe
fistpl
outsb
sub
jmp
xor
xchg
cli
aad
cmp
sub
mov
push
pop
inc
jno
clc
cmpsl
mov
mov
mov
push
xor
adc
xchg
pop
mov
leave
mov
test
inc
xor
pushf
sub
dec
mov
shlb
inc
jnp
fistpll
xor
shl
ljmp
lldt
add
insb
add
fwait
pop
and
mull
mov
inc
jnp
sbb
inc
xchg
or
mov
push
mov
daa
mov
lret
sbb
push
xchg
sub
dec
pop
out
rclb
sbb
shrl
mov
out
stos
adc
add
mov
hlt
sub
xor
cmpsb
cmc
mov
xchg
mov
xchg
xor
mov
fldcw
xchg
mov
mov
aaa
shl
fucomi
pop
add
sbb
lods
sbb
ficoms
ss
movsb
jl
dec
shll
push
es
and
es
popa
jl
dec
cmp
jo
push
mov
add
cmp
xchg
outsl
cmp
and
test
mov
push
leave
test
iret
dec
mov
mov
dec
sub
aam
stos
in
leave
pop
shlb
jl
mov
lds
and
inc
push
call
mov
xchg
dec
sahf
mov
arpl
mov
add
out
mov
int
jge
mov
aad
cmpsb
popf
xor
push
xchg
and
pop
push
push
xlat
cmp
gs
aam
out
jl
sub
lcall
fwait
outsl
or
les
mov
push
insb
pushf
xchg
inc
pop
insb
and
pop
lea
push
dec
cmp
aad
inc
mov
int3
or
nop
cmp
insl
and
xchg
sahf
and
cmp
dec
inc
push
mov
jmp
loop
rolb
enter
push
mov
test
push
icebp
jnp
shlb
dec
push
mov
outsl
imul
cmp
jl
jmp
mov
call
sub
stos
popa
xor
mov
sti
lods
cmpsb
es
and
xor
pop
test
add
xlat
scas
bt
pop
cmp
push
test
testb
xor
je
sub
mov
mov
lcall
add
enter
in
sbb
add
scas
pop
std
add
pop
adc
inc
mov
imul
jb
hlt
cmc
addr16
mov
inc
push
cltd
sub
mov
outsb
push
int
adc
roll
cmp
adc
movsl
and
dec
sbb
mov
push
jnp
clc
pop
int3
cmp
test
cmpsb
out
lcall
add
aad
test
xchg
insl
inc
sub
add
inc
xchg
cmpsb
inc
data16
and
xchg
lods
mov
mov
push
les
fidivrs
je
lcall
xchg
dec
shrl
dec
imul
shlb
sub
sub
scas
cmp
loopne
daa
imul
dec
cmpsb
fs
push
incl
aam
push
inc
pop
add
jno
lock
jp
subl
push
jl
or
shll
xor
jnp
fidivs
mov
add
bnd
pop
and
sahf
fxch
jnp
pop
mov
cld
mov
sub
faddl
pop
mov
jnp
jae
xchg
insl
mov
inc
clc
test
mov
add
addb
rclb
mov
cwtl
dec
adc
inc
inc
ljmp
lret
xor
popa
mov
leave
rolb
jl
movsb
test
xchg
scas
xchg
mov
sti
ljmp
imul
jmp
push
lahf
aas
dec
inc
fstps
push
xchg
cmpsb
jp
jmp
mov
in
inc
test
xchg
fldcw
call
addr16
out
mov
mov
push
sti
cmc
scas
and
pop
scas
mov
rclb
jge
lds
push
scas
or
mov
getsec
rclb
xor
out
mov
imul
inc
shll
mov
xchg
outsl
mov
frstor
jp
cmp
dec
call
push
and
jmp
gs
push
xchg
in
test
xor
js
inc
add
fldenv
out
jb
loop
cli
iret
push
pusha
jo
mov
sbb
enter
fsts
repnz
movsb
inc
adc
inc
and
mov
jnp
xchg
test
sub
vpunpcklwd
dec
sub
hlt
mov
shll
and
jle
fs
xor
ss
xchg
mov
dec
sti
in
es
xchg
inc
sub
in
mov
scas
mov
mov
ja
sub
out
mov
xor
sub
loope
and
sub
cwtl
and
or
cmp
xchg
popa
ficompl
popa
rol
pushf
shl
add
adc
jns
lock
add
xchg
jb
std
inc
cld
jno
or
pop
add
or
repz
sub
ret
repnz
fstps
adc
mov
xor
jno
fisttpll
outsl
aas
jl
test
sarl
push
xor
jns
and
les
lret
les
hlt
scas
sarb
xchg
xchg
push
ja
lcall
pop
xchg
pop
lret
or
mov
add
inc
dec
out
in
je
jbe
and
das
jbe
or
and
std
and
cmpsl
jns
dec
daa
sarl
fistps
lea
pusha
int
adc
jge
loope
sub
jb
pop
notl
adc
loope
xor
jno
jo
push
stos
movsb
cli
leave
xchg
data16
out
dec
sub
fsubp
mov
ja
push
xor
dec
stos
lcall
cmp
mov
xchg
popf
in
leave
clc
loop
or
jl
jle
sbb
cmp
cmpsb
and
push
fildll
mov
por
in
add
out
repnz
loop
rcr
ret
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
repnz
loop
rcr
ret
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
bnd
into
rcr
ret
and
adc
add
jle
dec
push
pop
inc
scas
mov
mov
out
repnz
loop
rcrb
shll
rorl
cli
negb
cltd
sbb
sub
push
repz
or
sbb
stc
test
mov
pop
stc
cmp
or
jb
inc
cmp
and
imul
cltd
repnz
leave
mov
mov
cmp
or
sbb
adc
imul
cltd
ror
mov
mov
leave
lock
idivb
sbb
adc
ret
lret
xchg
orl
cmpsb
sub
lds
mov
pop
popa
xchg
mov
ss
dec
aaa
push
mov
cld
sbb
xor
xor
es
loope
add
mov
sbb
sbb
dec
into
ror
loop
or
mov
leave
loop
ret
inc
sub
push
sbb
push
mov
jb
inc
aad
dec
ss
mov
jns
cltd
addr16
adc
mov
aas
stc
jge
out
hlt
mov
jp
sub
mov
ret
jns
loope
in
movsl
stc
and
cmpsl
insb
roll
pop
icebp
popf
sbb
test
jb
adc
dec
mov
mov
outsb
clc
clc
push
out
sbb
cmp
and
imul
cltd
pop
test
sahf
fstps
stc
mov
inc
ja,pn
or
sbb
loope
sub
mov
testb
pop
xor
sub
cmp
and
xor
rcll
stos
mov
out
loope
adc
xchg
dec
sbb
or
xor
jns
mov
cltd
repnz
mov
stc
xchg
or
jb
inc
cmp
and
imul
cltd
repnz
mov
stc
xchg
or
and
aas
imul
lea
sub
inc
enter
neg
pop
test
in
mov
xlat
add
inc
push
xlat
inc
adc
cmp
lret
mov
movsb
popa
repnz
dec
mov
mov
hlt
fdivrl
mov
fsubl
cmp
stos
rcrb
sub
clc
scas
inc
or
push
into
mov
inc
shl
repz
inc
leave
dec
or
adc
dec
lahf
cs
inc
movsl
mov
movsl
pop
popa
xchg
jno
adc
adc
lods
adc
inc
push
xor
mov
add
mov
imul
vpaddusw
shrb
pop
nop
push
arpl
sahf
jo
int3
dec
lock
shrb
jecxz
out
jmp
push
xchg
xchg
push
jnp
mov
jo
stc
or
jns
sub
mov
xlat
pop
mov
movsb
pop
sti
mov
push
pop
pop
push
decl
mov
std
push
btc
cs
mov
pop
mov
cmc
ss
sbb
icebp
ja
inc
cmc
pminub
hlt
pop
xor
fistpl
mov
add
leave
shll
mov
pusha
jbe
mov
mov
push
cmpsb
dec
nop
xchg
xchg
fcmovne
stos
pop
imul
bound
outsb
pop
jno
and
pop
inc
arpl
xchg
out
test
icebp
xor
cmpl
inc
clc
hlt
push
xchg
cmc
xchg
andl
enter
and
mov
lahf
repnz
pusha
rcrb
jae
push
hlt
aad
loop
fld1
pop
rolb
mov
or
fldl
inc
dec
rolb
fdivrs
int
outsb
xor
leave
or
mov
mov
fbld
sbb
cmp
xchg
xor
push
clc
or
mov
rolb
clc
cltd
cwtl
lret
adc
push
dec
cli
stos
sub
daa
cmp
sbb
mov
sub
das
cmpsl
mov
sbb
adc
cmp
pop
fdivs
enter
adc
cmpsb
adc
in
fidivl
push
add
imul
enter
dec
sub
xchg
lods
imul
clc
xchg
js
and
stos
mov
mov
or
call
sbb
loopne
movsl
xor
jo
popf
push
outsb
add
mov
and
loopne
mov
sarb
fwait
aad
pop
adc
aaa
dec
arpl
ret
int3
and
je
das
pushl
jnp
add
push
hlt
mov
cs
rorb
sbb
pop
shl
cmp
fidivs
xor
gs
loope
shl
sarb
sbb
sbb
or
dec
test
pushl
lock
jbe
cmpsb
push
hlt
mov
orb
out
mov
lods
gs
sub
sbb
sub
lcall
movl
pop
cmp
adc
loop
sbb
out
repnz
push
sbb
or
cmc
push
lret
int3
xor
push
mov
mov
lret
lock
pop
lret
clc
mov
fildll
arpl
popa
orl
add
xchg
mov
inc
nop
repz
mov
in
inc
mov
sub
movsb
dec
pop
out
sbb
cmp
repz
lcall
and
div
sub
out
ljmp
in
hlt
in
jae
sbb
push
mov
leave
lret
fistps
sub
gs
sbb
pushf
and
js
xchg
sub
cmp
mov
jg
jmp
imul
adc
dec
inc
cmp
cmp
int3
mov
mov
scas
xor
ret
adc
sub
xor
stos
lea
jnp
push
lods
pop
aad
icebp
pop
nop
jbe
dec
rdpmc
fdivrl
movzwl
sbb
stos
push
sbb
sub
loopne
push
clc
fdivrl
int
push
cli
jbe
test
mov
pop
es
add
hlt
sbb
dec
popa
repnz
xchg
lea
stc
aas
aaa
sbb
sub
jmp
or
mov
mov
adc
sub
in
stos
divb
inc
dec
lahf
fldl
jecxz
mov
push
and
xor
ret
xchg
test
pop
cmp
or
dec
leave
fbld
shrl
push
dec
mov
adc
cld
repnz
ja
out
cmc
or
mov
sar
mov
jmp
mov
ss
subl
addr16
inc
bound
nop
dec
pop
jmp
jns
push
jp
sbb
test
sti
and
fistpl
lcall
or
sbb
push
pop
test
push
or
cmp
orl
lea
lret
out
insb
jns
mov
mov
add
shlb
xchg
rcrl
mov
cmp
xor
dec
stos
test
adc
push
sub
stos
mov
iret
loop
jge
dec
mov
mov
jmp
xchg
and
xor
mov
in
jae
sub
xor
jle
adc
or
mov
int3
mov
cmpsb
outsl
jns
mov
xchg
daa
add
mov
push
daa
out
test
xchg
aas
lcall
pusha
push
ds
scas
fistpll
mov
shlb
pop
outsb
pop
ret
lods
inc
xchg
mov
lret
out
push
movsl
push
xor
jg
rorb
cmpl
test
test
clc
aaa
cmp
stos
sub
cmp
and
or
mov
sti
fistpll
jae
fimull
stos
xchg
mov
popa
into
loop
test
gs
mov
inc
xchg
or
in
xor
mov
or
call
add
std
lods
in
insl
movsb
add
lds
clc
or
movsb
fisubl
pop
pusha
sarb
test
lcall
ret
daa
stos
xchg
dec
cmp
data16
adc
jns
loope
jno
inc
dec
bound
jno
adc
leave
enter
repnz
mov
fcoms
mov
jp
cmp
mov
push
dec
mov
add
scas
xchg
sub
lods
insb
or
cmpsb
into
jbe
xchg
sbb
fwait
xchg
dec
or
or
aas
call
arpl
mov
lods
xchg
adc
dec
in
xor
jb
push
jo
daa
mov
sarb
shl
push
sbb
cwtl
fadd
mov
push
add
lret
mov
std
stos
mov
jp
test
test
ficoml
bnd
shr
jge
jb
mov
mov
mov
mov
sub
xor
add
cmp
mov
push
cmpsb
cld
outsb
call
lret
mov
mov
jne
mov
sbb
in
cmp
fxch
push
sub
loope
sti
out
clc
pushf
bound
or
clc
test
pop
xor
movzwl
mov
dec
ret
push
add
mov
add
mov
stos
fs
mov
mov
mov
push
cmpsl
mov
in
pop
xor
dec
pop
add
fisubs
lahf
outsl
das
and
xchg
add
popf
hlt
inc
into
xchg
and
std
pop
mov
pop
test
cwtl
scas
mov
xlat
pop
jns
xchg
jb
xor
mov
or
clc
xchg
divl
mov
adc
push
xchg
xchg
pop
rcll
sarl
xchg
or
lock
and
lds
repz
jo
bound
or
pop
sbb
adc
mov
dec
lock
jae
shll
mov
adc
pop
or
cmc
inc
and
jge
jno
mov
aaa
mov
daa
pop
adc
sbb
pop
and
fs
into
xor
sub
or
sbb
cmp
lcall
pop
cmp
pop
insb
push
gs
xchg
lahf
ds
and
lods
lret
jo
lret
dec
imul
cwtl
ss
int
pop
cmp
adc
mov
enter
dec
jno
mov
mov
ret
inc
repz
js
ja
mov
xor
ret
xchg
int
and
push
xchg
idivl
imul
push
add
and
int
or
pop
mov
mov
push
std
in
notb
push
rorl
fnstcw
sahf
cmc
push
sbb
xchg
sub
in
pop
mov
pop
dec
mov
xor
addr16
sub
adc
mov
test
outsb
xor
pop
add
lock
xchg
and
pop
enter
gs
fsubrs
cmp
movsb
mov
adc
jge
cmp
aam
xchg
test
insl
cmc
cwtl
aad
xchg
sub
adc
mov
xor
les
sub
cmpsb
lret
mov
or
push
or
test
cli
pop
lret
mov
cmc
rolb
out
mov
test
setbe
mov
jae
mov
out
testl
adcb
cmp
lret
lods
or
stos
rclb
idivl
lods
adc
fcompl
sti
sbb
mov
test
pop
dec
jmp
dec
mov
adc
pop
adc
ss
popa
cltd
xchg
mov
aaa
divl
dec
test
das
scas
cwtl
orl
ret
jecxz
test
std
add
insl
jb
ja
mov
dec
push
push
mov
xchg
cmc
in
jns
in
sbb
mov
in
in
gs
adc
sbb
inc
add
popf
mov
in
imul
xor
mov
xchg
mov
cmp
insl
sub
mov
out
int3
add
cld
test
lds
fsts
ja
mov
das
mov
sti
pop
xchg
ja
inc
ror
mov
add
sub
pusha
imul
insl
lds
mov
push
ret
mov
fcomp
mov
fwait
ljmp
sbb
adc
xor
popf
mov
rcrb
mov
int
scas
nop
js
pop
dec
lahf
aam
push
test
inc
aaa
fnstsw
xchg
dec
pcmpeqw
xchg
mov
jbe
jae
sarb
jns
dec
lret
jl
aaa
arpl
inc
fiaddl
sbbb
in
int3
jmp
fidivrs
mov
mov
bound
pop
dec
mov
test
fidivl
das
xlat
add
hlt
mov
push
popa
cmp
aaa
aad
das
or
repz
xchg
inc
daa
dec
pop
fxch
pop
imul
fmull
xchg
mov
mov
icebp
xor
clc
pushf
cmpsb
fs
loopne
in
sbbb
int
hlt
xchg
testl
hlt
int
insl
or
mov
push
shlb
jb
jp
test
mov
pop
push
repz
je
push
and
inc
mov
cmpl
ror
pop
scas
add
mov
jmp
outsb
mov
push
daa
test
lcall
inc
and
adc
mov
les
mov
jle
out
test
xchg
xor
loop
gs
sbb
mov
cld
xor
adcb
gs
out
push
in
std
add
mov
push
repz
xchg
inc
outsw
lods
sub
xor
fdivs
test
repz
xlat
or
push
cmpsl
mov
mov
stos
data16
outsb
adc
fisubl
push
ret
and
mov
inc
dec
ljmp
sahf
jge
and
popa
ret
sub
orb
mov
push
fldenv
in
dec
xchg
sahf
clc
sub
arpl
addl
xchg
sbb
pushf
mov
in
sti
int
gs
aaa
jge
inc
push
add
fcompl
xchg
pop
fstl
mov
add
cmp
mov
movsb
stos
push
outsl
repz
add
mov
aam
outsl
jnp
sbb
movsb
sbb
inc
cmp
andb
xchg
icebp
or
sbb
mov
jecxz
cmp
enter
shll
int
fsubl
lret
pop
or
enter
ficoms
fiadds
ss
jb
aam
testl
jg
lock
repz
jo
xchg
test
clc
xchg
in
fsubrs
cmp
in
iret
dec
jb
mov
shrl
negb
and
inc
jne
push
xor
xchg
fisubrs
cmc
mov
mov
ja
pop
in
mov
daa
aam
subb
mov
in
jmp
mov
rorb
jbe
sbb
mov
dec
cmpsb
icebp
repz
cs
js
mov
hlt
adc
rorb
xchg
ds
lock
loope
out
mov
sub
adc
out
aaa
mov
test
lcall
insb
lds
jo
fwait
add
iret
jo
jle
repnz
inc
scas
ja
xchg
mov
sbb
push
jae
rorl
push
and
mov
repz
push
jl
dec
cmpl
adc
je
pushf
push
mov
add
lods
pop
pop
mov
in
inc
daa
mov
sbb
in
dec
fmul
jns,pn
stc
lea
movsb
fdivl
lret
popa
cli
mov
repnz
cmp
leave
jne
xor
int
sahf
adc
es
mov
pop
das
test
lods
js
or
iret
fadds
cmp
pop
pop
push
mov
aad
repnz
lret
stos
adc
sbb
aaa
outsl
cmpsl
and
xor
repnz
push
cmovl
xor
dec
repnz
and
xor
mov
les
clc
push
jecxz
xchg
fs
mov
lahf
in
xchg
and
and
es
sbb
aaa
in
xchg
pop
fisubs
lds
rcll
sub
add
adc
pop
gs
cs
imull
push
ret
fidivrl
xchg
out
call
lcall
loop
xchg
dec
cs
stos
push
out
addb
push
hlt
add
pop
mov
test
adc
xchg
in
mov
dec
gs
xor
inc
cmpsl
cmp
rcrl
pop
xor
push
add
dec
int
and
enter
sbb
or
jle
ficomps
sub
hlt
xor
ss
cmpb
sbb
stos
pop
or
xor
js
jle
dec
ja
or
fistpll
dec
out
jne
pop
fistps
out
mov
je
fsubs
inc
sbb
shll
or
nop
fcom
aaa
sub
and
insl
adc
mov
das
in
jle
sahf
jmp
mov
mov
imul
shlb
in
jb
pop
ja
imul
inc
popa
jp
jno
xchg
pop
repnz
push
xor
sbb
movsl
pop
cmp
xor
imul
shl
outsl
xchg
mov
push
fistps
lcall
xorb
and
lock
mov
jp
sub
mov
mov
insb
out
push
or
loopne
in
push
cmpsl
rolb
fwait
xor
test
test
pop
fmul
cmp
inc
rol
ljmp
ficomps
mov
lods
imul
jmp
scas
push
fwait
cmp
dec
cmpsl
in
insl
rolb
call
idiv
xchg
test
out
sbb
shll
mov
xchg
add
xor
ss
pushf
test
push
pop
mov
mov
push
cmp
or
inc
pop
icebp
test
jl
stos
sub
inc
ret
xorb
and
pop
mov
sub
insl
adc
push
int
dec
xchg
popf
push
ds
pop
stos
mov
dec
dec
cmp
in
xor
lcall
divl
rclb
cld
insb
push
and
pop
sbbb
sarl
fdivp
lds
sbbl
push
and
push
or
mov
jge
orb
lods
dec
int3
pop
fcoml
pop
cmpsb
dec
mov
hlt
mov
mov
dec
movsb
scas
mov
pop
loop
inc
in
fcompl
push
or
and
adc
aad
aas
push
push
xchg
pop
pop
data16
jo
leave
enter
mov
out
inc
mov
mov
sarl
popa
fstpt
mov
add
mov
test
cmp
lahf
sbb
xor
jp
into
sbb
iret
xlat
and
mov
inc
mov
test
jae
xor
push
test
sub
dec
enter
jge
inc
aam
sbb
movsb
cld
mov
pop
xor
jp
push
js
push
mov
nop
lret
loope
xchg
mov
lods
lret
sub
dec
push
jmp
mov
lret
pop
mov
or
jae
inc
add
mov
xchg
dec
pushf
stc
sub
mov
ret
leave
or
es
fmull
dec
and
add
imul
inc
insl
loopne
imul
mov
cmp
mov
fdivrl
jb
in
sbb
ss
push
pop
xor
cmpsl
sub
enter
imul
rcll
pop
js
insb
adc
fcmovnb
js
mov
ja
or
loope
scas
adc
popf
push
cmp
int3
xchg
cld
popf
add
orl
jmp
jnp
shr
mov
out
popa
push
std
xchg
add
popf
mov
mov
movsb
cmp
inc
sub
sub
fs
push
pushw
xchg
insb
push
jo
add
mov
mov
cmp
addb
sbb
inc
and
and
pop
jl
jmp
loopne
pop
dec
in
mov
or
mov
int
sbb
and
in
xchg
sbb
or
sbbb
and
jno,pt
mov
bound
je
lock
in
add
sbb
aam
mov
push
mov
enter
add
dec
jnp
or
push
inc
adc
or
gs
pop
mov
aad
jne
xchg
xor
dec
negl
sub
insb
pop
jbe
imulb
imul
shll
lds
cld
mov
xor
lret
divl
inc
jle
in
push
lret
lea
lcall
jg
adcl
cli
inc
cmp
xchg
dec
addb
stos
add
mov
into
sub
jbe
inc
jno
enter
hlt
imul
inc
scas
stos
xor
fwait
or
pop
ds
test
inc
dec
pop
push
lret
fiaddl
lret
pop
pop
out
or
sbb
mov
decb
mov
xchg
fsub
jbe
lods
cmp
out
nop
inc
xor
js
pop
popf
fs
fistps
pop
lock
outsl
aas
arpl
sbb
pmullw
pop
dec
sub
inc
cs
aam
mov
jns
dec
stc
mov
rorl
mov
bound
xchg
fstpl
mov
jmp
movsl
or
cmp
push
test
cltd
sarl
sub
xor
test
sub
push
daa
in
loop
xchg
or
xchg
or
mov
sub
ds
dec
and
inc
jo
xor
jno
pop
adc
insl
xor
ret
jb
insb
out
ret
xor
mov
push
push
imul
cld
jmp
xchg
dec
insb
sbb
dec
insl
push
and
or
sarb
jp
pusha
push
dec
mov
hlt
lock
pusha
or
fs
stc
pop
cmp
pop
lea
fisubrl
mov
mov
add
icebp
push
add
mov
dec
sbb
test
xor
jmp
inc
hlt
call
ret
fadds
shll
stos
je
inc
shrl
dec
cmc
xchg
xor
mov
xor
in
rorl
jno
dec
roll
cmp
loopne
daa
mov
jecxz
mov
mov
hlt
inc
lret
inc
paddq
stc
outsb
cltd
int3
call
loope
xchg
mov
loop
clc
mov
je
sbb
icebp
lods
add
mov
aad
aas
push
ss
jg
add
sbb
push
sub
cmp
js
push
cld
mov
pop
ret
pop
in
push
xchg
adc
lret
clc
dec
sbb
sti
mov
repz
repnz
stc
lds
sub
inc
sbb
push
shll
jl
inc
mov
out
adc
dec
aam
test
movb
xor
fidivrl
and
les
cltd
sahf
out
dec
mov
jb
gs
jmp
mov
cld
inc
xchg
and
inc
ja
push
out
movsb
cltd
xchg
imul
das
jmp
out
popf
mov
lret
xor
adc
sub
and
xlat
and
jl
mov
sbb
add
ja
out
sub
or
mov
lret
rcl
repz
xor
push
mov
sub
sbb
seta
xchg
push
jle
inc
bound
mov
pop
sbb
or
nop
rorl
cld
mov
mov
test
addr16
subl
das
rorb
popf
inc
cmp
jae
mov
push
dec
and
imul
cltd
repnz
mov
stc
xchg
or
jb
inc
cmp
and
imul
cltd
repnz
mov
stc
xchg
or
jl
pop
cmp
and
imul
cltd
imulb
cmpsb
fnstenv
or
cmp
dec
and
imul
mov
lret
push
ljmp
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
daa
testb
inc
test
push
mov
pop
add
or
push
pop
add
push
add
add
and
add
add
add
add
xlat
add
add
add
add
sub
add
lods
add
xlat
add
add
pop
add
add
add
add
add
fiaddl
xor
xchg
add
pop
pop
add
xchg
push
add
add
fiaddl
or
push
add
add
add
add
add
add
add
and
daa
add
add
add
cmp
xor
movsb
add
add
add
push
add
add
add
add
add
add
add
nop
add
add
adc
stos
add
lods
add
add
add
add
add
flds
jo
mov
mov
add
add
add
add
add
add
out
add
add
add
aaa
add
add
lods
add
add
add
add
add
aaa
add
add
pop
pop
add
add
add
add
add
add
push
add
add
add
add
adc
add
add
xor
add
add
add
add
add
sti
push
mov
add
add
adc
add
add
add
in
pusha
add
add
add
add
sbb
mov
test
push
add
add
out
add
add
lods
add
add
add
add
add
add
add
add
add
add
push
add
add
add
sub
out
add
add
add
add
in
pop
inc
add
add
xor
pop
add
add
add
push
add
add
jmp
add
push
add
push
add
dec
add
add
lret
add
pop
jnp
out
add
pusha
add
add
xor
add
add
xor
add
add
mov
add
add
add
out
add
add
add
jns
pop
add
sub
movsb
add
add
add
add
add
movsb
add
movsl
add
add
add
add
sub
add
add
add
mov
add
add
add
add
add
add
add
adc
pop
add
add
add
inc
add
add
push
add
add
mov
add
aaa
add
roll
and
add
add
add
push
add
add
add
add
sub
add
add
jo
pop
add
mov
data16
add
add
add
add
pop
bound
mov
fiaddl
mov
add
add
push
add
movsl
add
add
add
add
add
dec
add
add
mov
pop
sub
inc
add
add
mov
add
add
add
ret
add
add
insl
add
add
in
push
movsb
and
mov
outsb
mov
mov
ret
pushf
mov
push
clc
add
enter
lret
sti
jle
stos
es
pop
xlat
outsb
cmp
cmp
or
pop
xchg
out
xor
push
mov
loop
leave
out
cmpsl
dec
andl
sbb
in
scas
xchg
test
push
lret
mov
rep
inc
push
scas
pop
sbb
icebp
aam
cmp
mov
inc
js
cmp
sub
jg
mov
cld
fldl
loope
clc
sub
mov
cmp
sub
mov
xchg
fdivr
fcoms
add
mov
or
jb
fs
in
nop
xor
sbb
cmp
push
jecxz
shlb
fstps
sbb
mov
clc
cmpsb
mov
imul
pusha
pop
cli
or
lret
loop
lcall
arpl
mov
scas
out
aas
data16
ficoms
mov
inc
lock
insb
popa
and
rorb
jb
push
mov
fidivl
lods
xor
int
adc
pop
aaa
mov
sahf
and
and
xchg
loopne
fldenv
mov
mov
test
pop
sbb
and
or
mov
or
out
out
fwait
mov
pop
add
or
icebp
loopne
icebp
in
pusha
add
cmpsb
inc
imul
and
xlat
sub
adc
push
ds
repnz
and
cmp
pop
cmp
inc
pop
mov
arpl
lea
add
outsl
ljmp
icebp
popf
enter
daa
scas
sbb
inc
arpl
lea
je
dec
sbb
or
pop
mov
enter
cmp
cmp
cwtl
xchg
cs
movsl
push
ror
jl
mov
hlt
mov
insl
xchg
mov
cmp
xchg
imul
enter
xchg
das
fs
mov
imul
mov
sub
xor
loop
dec
decl
xchg
imul
mov
add
inc
dec
lcall
mov
pop
or
add
and
in
gs
mov
pop
cltd
and
mov
or
adc
icebp
mov
pop
scas
adc
sar
loopne
lahf
test
dec
ret
popa
push
lahf
fisubrs
mov
adc
inc
ds
insl
stc
mov
mov
in
xor
loopne
push
mov
shll
repnz
loopne
jbe
sbb
imulb
and
movsl
bound
std
out
xor
daa
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
