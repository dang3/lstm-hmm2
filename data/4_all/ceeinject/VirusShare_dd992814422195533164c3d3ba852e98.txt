call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
or
push
addr16
or
js
pop
pop
aaa
xchg
xlat
xlat
out
div
addb
mov
inc
push
push
addr16
pop
pop
pop
pop
daa
daa
aaa
aaa
xchg
xlat
mov
out
testl
inc
xlat
push
loope
mov
pop
pop
pop
pop
or
iret
aaa
outsl
mov
mull
aad
mov
inc
ja
and
add
mov
push
hlt
and
xor
hlt
pop
aam
call
inc
rcrb
scas
xchg
adc
xlat
pop
add
mov
call
ja
das
sub
sbb
sbb
add
push
jnp
idivl
out
pop
inc
inc
addr16
negl
push
pand
sub
daa
or
js
sbb
pop
call
aam
stos
and
push
call
enter
mov
or
xchg
push
ret
test
loop
mov
push
xchg
add
jg
pop
cmp
aaa
je
xchg
imul
ret
rcll
cwtl
add
mov
push
into
xlat
aas
mov
xlat
out
div
add
cmpsl
mov
inc
push
push
addr16
pop
push
pop
daa
daa
aaa
xor
out
mul
xchg
fidivs
push
sbb
imul
cmpsb
mov
xchg
mov
out
in
movsl
lock
push
and
add
dec
push
inc
aaa
mov
fwait
cwtl
hlt
in
cld
rol
mul
xor
adc
pop
pop
daa
daa
aaa
aaa
mov
div
xchg
mov
inc
inc
push
push
addr16
pop
pop
pop
pop
daa
daa
aaa
aaa
mov
div
xchg
mov
inc
inc
xchg
push
iret
aad
xor
js
inc
pop
push
icebp
test
sub
adc
enter
adc
movb
mull
xchg
cmovbe
mov
or
call
out
mov
insl
repnz
xor
jb
sahf
inc
loop
stc
mov
imul
mov
push
fmulp
dec
cmp
arpl
imul
and
adc
aad
xchg
inc
stc
jle
data16
dec
pminub
and
sbb
add
fidivrs
sbb
cmc
jb
add
xor
push
xchg
xchg
xchg
cld
repz
imul
leave
je
mov
mov
xchg
sbb
push
aam
push
xchg
fmulp
mov
mov
mov
jl
pop
rorl
test
or
sahf
push
push
loopne
add
out
sbb
xchg
sbb
popf
add
adc
sub
ret
fmulp
mov
xor
add
into
addb
movsl
loope
pop
cmpsb
xchg
xchg
test
out
xchg
push
add
xor
movsb
mov
mov
in
scas
jnp
lods
ss
mov
fdivs
ss
adc
aaa
ret
test
mov
mov
ja
adc
cmpsl
mov
outsl
pop
shr
fs
fucom
aad
loope
pusha
movzwl
jmp
inc
push
outsb
xchg
in
pop
in
xchg
or
push
divb
mov
xor
mov
aas
faddp
inc
leave
mov
add
push
adc
mov
loop
push
mov
mov
int
dec
jle
ret
loope
cmc
pop
jns
std
or
fimull
or
add
insb
fwait
repz
cmc
adcb
loope
push
daa
sub
jl
call
lds
clc
es
xchg
insb
mov
mov
int
aam
inc
arpl
mov
cwtl
dec
cli
jecxz
adc
mov
add
add
sahf
pop
or
mov
aam
or
into
repnz
leave
repz
iret
bound
popf
lret
cmc
dec
int3
scas
push
daa
xorb
inc
pop
imulb
aaa
mov
cmpsl
test
add
dec
imul
sub
repnz
sub
push
xchg
loop
jmp
sbb
ds
mov
mov
inc
cmp
cmp
push
inc
scas
inc
mov
mov
lods
push
dec
dec
cli
cmp
cltd
sub
mov
inc
sbb
out
xchg
aaa
xchg
data16
loopne
cmp
jge
lret
add
lds
or
iret
insl
jns
ret
es
pop
lcall
mov
shll
repz
cmp
outsb
push
dec
hlt
cmpsl
shlb
je
cmpsb
inc
imul
lock
cmp
push
jae
pop
rcrl
mov
adc
stos
repnz
mov
jae
xchg
loope
push
inc
mov
out
ret
sub
mov
mov
push
adc
mov
mov
and
adcb
int
push
mov
jbe
icebp
insb
mov
push
mov
xchg
xchg
sub
mov
xchg
fwait
sti
cld
rcrb
adc
xor
divb
aaa
les
lock
xchg
jno
cli
mov
outsl
cmp
jmp
in
fnstenv
hlt
fisttpl
jmp
push
xor
adc
inc
push
jge
call
xorl
push
loop
mov
stc
cmpb
and
leave
adc
stc
push
pop
sbb
pop
in
inc
mov
sbb
xor
xchg
subb
ret
pop
jno
jnp
cmp
mov
xor
imul
pop
in
cld
in
aas
push
mov
mov
jnp
xor
lods
arpl
decl
divl
rol
xchg
push
fidivl
pop
inc
out
cmp
cmp
movsb
mov
cmc
test
into
fldl
rcl
int3
mov
shll
or
sbb
adc
nop
mov
mov
mov
pop
pop
ret
lcall
dec
mov
in
xchg
xchg
dec
mull
xchg
pop
fcomi
scas
sub
mov
pop
bound
and
xor
imul
addr16
sbb
lcall
sbb
mov
aad
js
mov
push
out
in
std
inc
fildl
and
push
cmpb
adc
cli
outsb
sub
push
pop
aaa
mov
stc
mov
push
incl
jge
cmp
cmpsb
cli
sbb
and
or
push
inc
rcl
hlt
out
mov
js
dec
xor
xchg
mov
or
dec
dec
aad
imul
ret
int
inc
cmpsl
pop
lcall
cltd
movsb
cmc
inc
push
pop
cmp
repz
cwtl
push
fbld
jnp
cmp
pop
add
inc
mov
popa
push
outsl
andb
mov
jo
xor
adc
sbb
incl
loopne
xor
adc
jge
xchg
leave
dec
and
and
sbb
and
cmp
xor
pop
mov
or
cmp
xorb
dec
jae
dec
loope
jns
xchg
or
mov
or
je
stc
mov
movsb
pop
addl
imull
fists
ret
mov
xchg
dec
lds
int3
adc
cmp
and
push
fisubs
sbb
and
ljmp
in
stc
fs
in
push
sti
hlt
ja
dec
pop
inc
lock
cmpsl
in
push
ljmp
jae
mov
aaa
stos
ret
repz
add
pop
xor
jmp
and
xor
push
jmp
dec
neg
scas
popa
sbb
imul
add
sbb
jae
hlt
ret
jmp
lret
or
xor
nop
or
cmp
push
jp
inc
lea
shl
mov
aaa
gs
dec
lret
xchg
pop
inc
std
in
ret
sbb
sbb
xchg
leave
insb
test
mov
das
pop
add
lcall
cmp
leave
minps
hlt
xchg
jmp
sbb
pop
sarb
jge
and
jmp
and
dec
xchg
sbb
adc
push
add
cmp
aas
popf
xorl
pmaxsw
pop
lods
inc
mov
sub
rcrl
sbb
xchg
push
xor
xchg
insl
cmp
and
and
or
adc
lock
dec
xor
movsl
jg
scas
inc
imul
rcll
fstps
sub
xor
aaa
and
mov
aam
xlat
and
sub
jg
jno
in
mull
clc
icebp
mov
into
mov
jbe
neg
dec
mov
repz
fcmove
shlb
cwtl
mov
cmp
int3
ljmp
sbb
xchg
outsb
mov
add
loope
in
mov
mov
mov
mov
inc
mov
xchg
inc
cmp
xchg
mov
inc
cmp
pop
iret
addb
cmp
fcompl
adc
in
popf
and
xchg
jle
push
inc
mov
add
and
mov
sub
push
inc
sub
mov
mov
hlt
jnp
ljmp
jo
lcall
out
shlb
rclb
movsb
lret
sbb
lods
push
sub
push
xor
xor
add
mov
pop
xchg
mov
inc
xchg
mov
cmpsb
push
test
mov
pop
xchg
cli
push
in
rol
das
jo
pop
xchg
mov
add
test
inc
fistl
es
idivl
inc
pop
arpl
mov
addb
and
cmp
in
and
rep
mov
pop
gs
stos
push
add
inc
sbb
repnz
sub
fadds
sub
push
into
mov
test
loope
call
ret
jno
mov
cwtl
inc
test
out
push
insl
js
or
dec
stc
mov
xchg
cmp
or
push
mov
xchg
jnp
sbb
or
movsl
repnz
push
fldenv
aad
and
nop
lret
test
add
and
pop
loope
repnz
scas
adc
dec
addb
decb
jl
pushw
jecxz
test
and
je
aas
sub
mov
test
ljmp
mov
cmc
push
lock
jle
sub
out
dec
pusha
addr16
or
xchg
leave
sub
sub
mov
sbb
iret
lcall
dec
and
int
insl
or
cmp
sub
inc
mov
xchg
imul
add
inc
repz
nop
adc
or
mov
gs
std
es
enter
push
fsubrl
cmp
rclb
imul
lock
in
out
add
int
mov
dec
sbb
out
pusha
mov
scas
jge
or
cmp
or
xchg
jbe
pop
mov
mov
ficompl
shrb
cmpb
dec
mov
pop
mov
je
repz
jge
sbb
daa
mov
mov
add
and
or
in
jae
and
cmp
leave
add
fbld
cmpsb
adc
sahf
push
add
sbb
popa
ret
jle
lret
pop
mov
inc
fyl2xp1
xor
mov
rorb
cwtl
jno
clc
outsl
sbb
push
pop
inc
daa
jle
mov
adc
sbb
in
xchg
prefetch
or
mov
sahf
in
lock
in
jge
lahf
nop
stc
jb
inc
outsb
aad
aad
jg
dec
fisttps
adc
push
xchg
cmp
outsl
inc
cld
jae
push
inc
xchg
movsb
and
lcall
add
mov
daa
js
xchg
jle
fs
lds
fldl
mov
mov
imul
mov
out
je
jmp
subl
adc
data16
mov
push
pop
test
nop
stos
add
jmp
dec
dec
lea
pop
inc
sub
push
adc
adc
in
call
mov
test
rolb
sbb
sbb
push
add
mov
outsb
cmp
out
push
scas
cmpsl
xchg
mov
jne
mov
push
ret
jo
adc
aaa
xor
mov
flds
test
sbb
sub
dec
jg
push
negb
popa
repz
and
mov
jbe
or
pop
add
xlat
xchg
and
out
ss
fsubp
outsb
jmp
mov
rcll
mov
dec
mov
pop
test
pop
mov
inc
xor
cld
adc
stos
or
sbb
fwait
pop
adc
loope
xchg
jle
or
es
les
pop
sbbl
popa
lock
push
int
movl
lods
cmpsl
mov
je
inc
icebp
xchg
pop
sti
jno
xchg
mov
ret
out
divb
pop
dec
sub
fcompl
xchg
adc
jge
jns
xor
je
xor
loop
lds
mov
outsb
sub
push
push
adc
pop
jecxz
pop
stos
aas
or
fwait
adc
cmc
data16
push
loopne
push
fisubs
mov
ficomps
mov
sti
xchg
xchg
push
inc
xlat
mov
loope
xlat
call
pop
cmp
dec
cmp
ror
jl
sarl
sub
hlt
pop
xor
jp
lock
arpl
lret
sub
cld
and
rorl
add
push
mov
jmp
mov
mov
sub
fcoms
fldcw
mov
testl
xor
sub
cli
scas
addr16
push
mov
xchg
dec
sub
dec
or
lret
add
fnstsw
dec
mov
mov
lea
inc
mov
mov
push
lret
lea
jo
sbb
cmp
in
add
cmc
int
adc
and
jg
push
fisubrs
push
stos
sub
lret
jno
mov
push
xor
enter
xchg
jmp
pop
jmp
enter
cmpsl
daa
aas
fnsave
rorl
orl
inc
std
enter
adc
movsl
gs
mov
cmpl
or
xchg
add
lock
out
xor
sub
xchg
cltd
and
mov
hlt
xchg
rcr
lock
pop
stos
aas
bound
mov
pusha
insb
fistl
mov
adc
xchg
add
xchg
pop
pop
jb
out
push
imul
les
xchg
mov
int
push
loopne
jle
int
adc
xchg
push
or
es
adc
clc
shrb
aam
push
fsts
pop
mov
js
cmp
inc
cs
ds
in
adc
ljmp
lock
loopne
arpl
inc
enter
jae
xlat
cmp
cmp
ljmp
xchg
jle
push
inc
xchg
inc
mov
mov
jge
imul
sub
jge
mov
outsb
mov
iret
cmc
xchg
sti
mov
in
push
sbb
jg
pop
into
stos
mov
gs
push
sbb
cmp
mov
push
push
popa
push
xor
adc
imul
adc
or
push
push
hlt
orb
jl
or
xorl
call
push
pop
adc
sub
sub
add
or
clc
inc
dec
mov
xchg
test
imul
xchg
pop
xchg
out
adc
xchg
mov
lret
in
ret
pop
add
mov
inc
xor
jns
addb
outsl
pop
pop
jg,pt
lods
enter
int3
ljmp
fldcw
cmpsb
fs
jecxz
mov
dec
xor
push
mov
mov
popa
adc
cmp
push
dec
dec
je
pushl
movsl
mov
ret
lret
inc
jmp
aas
jbe
cs
addr16
aas
adc
aam
push
or
rolb
mov
cmc
nop
fs
jmp
les
inc
out
and
lret
jp
add
cli
and
stos
and
pop
cli
cmp
arpl
pop
jo
pop
push
mov
ljmp
insl
js
jg
lahf
add
test
jbe
cmpsl
fisubl
mov
rcrl
daa
gs
cmc
negl
addr16
repz
test
mov
cmp
and
mov
mov
dec
flds
xchg
scas
mov
andb
add
stos
adc
aas
test
arpl
popf
pop
or
scas
xor
push
int
out
add
xor
inc
mov
push
xor
inc
fisttpl
gs
gs
sub
add
addr16
cmp
xchg
cmc
pop
jns
adc
add
scas
stos
pushf
imul
movsl
test
out
mov
sub
je
dec
dec
in
jns
mov
push
pop
iret
clc
mov
push
call
mov
orl
je
push
mov
mov
xlat
lds
sub
hlt
cmp
icebp
push
lahf
cli
dec
bound
cmp
adc
xchg
cmc
push
loope
pop
jne
cmpsb
jecxz
lods
loop
pop
push
scas
lcall
insl
mov
inc
loop
testb
mov
sti
clc
jmp
hlt
sub
sub
movsl
int3
fs
mov
bound
push
cmc
outsl
jecxz
test
or
push
mov
gs
mov
loopne
call
lods
cmp
fidivl
dec
js
les
call
imul
cmp
push
mov
subl
dec
loopne
push
sti
xchg
xchg
mov
dec
bound
outsl
xchg
pop
inc
mov
jg
jb
xlat
inc
adc
dec
in
or
and
pop
in
jno
cmpl
test
lcall
popf
or
test
dec
mov
rorl
pop
rcrb
inc
scas
jbe
xchg
and
repz
dec
adc
fisttpll
sbb
adc
pushf
pavgb
fwait
and
and
adc
dec
clc
out
dec
dec
sbb
push
add
fsubr
sbb
and
cli
enter
xorl
sahf
pop
js
out
stos
push
inc
int3
adc
das
lods
dec
add
pop
repnz
mov
aam
cld
movsl
test
and
sbb
into
adc
test
test
dec
dec
test
cmpb
lods
cmp
xor
test
daa
sbb
mov
pop
fildl
inc
movsb
lock
or
leave
repnz
dec
sahf
ret
out
and
adc
push
div
xchg
jne
repz
and
sub
mov
mov
lods
gs
cmp
test
cltd
jmp
out
mov
lock
jmp
pushl
dec
pop
dec
sahf
dec
repz
scas
push
in
into
sbb
std
jbe
std
jle
add
xor
es
cwtl
testb
les
dec
cmpb
rorl
ret
and
xchg
cmp
or
sbb
hlt
popf
xchg
sub
cmp
mov
je
test
shrl
pop
sub
xchg
test
jg
xchg
mov
xchg
push
inc
xchg
xor
push
xchg
adc
xor
xor
or
leave
inc
cld
popa
lcall
loopne
in
fldt
addr16
xchg
mov
std
pushw
xor
test
shll
and
into
out
and
dec
popf
cli
jg
mov
addr16
adc
inc
xor
mov
sub
lea
mov
test
sbbb
shlb
mov
scas
push
mov
test
add
push
pop
out
and
push
adc
jnp
stos
and
das
jbe
ds
lahf
jl
popf
scas
pop
or
ljmp
sub
mov
scas
cmp
cmp
inc
adc
cmp
and
into
pop
clc
mov
push
push
or
pop
jne
rclb
jg
lock
loop
xchg
clc
daa
and
mov
mov
xchg
jecxz
mov
xor
cli
lret
jae
push
or
add
push
add
pop
inc
cs
leave
pop
mov
sbb
xchg
adc
add
adc
jp
faddl
fdivs
inc
xchg
fs
std
or
btcl
pushf
call
cmp
das
and
push
sahf
mov
cltd
rorb
hlt
andb
out
inc
push
inc
push
cmp
push
sub
lret
mov
xor
aad
lea
ja
scas
pop
or
int3
iret
iret
int3
xor
dec
dec
push
xor
std
cmpsl
les
scas
pop
add
lock
push
adc
adc
hlt
mov
sbb
cmpsb
mov
popa
push
ret
jg
insb
inc
fs
faddl
movsb
test
pop
movsb
mov
inc
mov
lock
ja
repz
mov
pop
cmp
enter
repz
xor
nop
call
outsb
jg
out
cmpsl
mov
cltd
pushl
ds
adc
pop
sub
mov
add
add
sarb
mov
add
or
testb
pusha
jnp
in
lods
adc
iret
iret
scas
cmp
lcall
push
jecxz
sub
lcall
mov
push
nop
pop
mov
movsl
xor
add
xor
inc
adc
sbb
adc
test
lret
adc
call
ror
mov
mov
mov
ret
xor
and
icebp
ja
les
testl
sbb
pop
dec
movsl
out
icebp
jle
lods
mov
push
ret
mov
ret
repnz
sub
lcall
and
add
add
out
jbe
and
lea
clc
or
in
xchg
mov
pusha
std
push
popa
je
xor
push
pop
mov
mov
sbb
jge
inc
xor
outsb
repz
pop
mov
cmpsb
sbbb
stos
or
push
scas
or
push
xchg
lcall
jecxz
movsl
cli
or
mov
lcall
hlt
jns
sahf
or
hlt
repz
dec
shrl
dec
test
and
mov
mov
jne
mov
iret
and
daa
add
and
mov
xchg
pop
addr16
push
addl
and
rep
or
xchg
outsb
in
jne
rorb
insb
or
inc
ja
inc
cmc
mov
inc
sub
mov
add
and
fwait
push
cmp
pop
jl
daa
into
push
loope
mov
mov
inc
movsl
push
into
sub
imul
sub
aad
mov
sti
cltd
sbb
jmp
imul
add
popf
cmp
push
xor
ret
or
enter
aam
lock
xsaves
or
xchg
jecxz
mov
jmp
and
fchs
loop
push
lret
dec
push
pop
imul
pop
pop
daa
daa
aaa
aaa
mov
div
xchg
mov
inc
inc
push
push
addr16
pop
pop
pop
pop
daa
daa
aaa
aaa
mov
div
xchg
mov
inc
inc
push
xlat
ja
ja
push
pop
adc
ret
inc
xlat
xlat
out
out
testl
inc
jnp
out
addr16
ja
pop
pop
pop
daa
daa
mov
mov
testl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
repnz
loop
rcrb
ret
pop
rolb
cld
pop
mov
mov
inc
mov
clc
and
adc
add
repnz
sub
sbb
or
pop
orb
bound
repnz
and
adc
add
repnz
sub
add
adc
inc
adcb
inc
xchg
ds
inc
mov
mov
insb
enter
inc
shrb
jnp
sub
adc
lods
and
pushf
sbb
adc
inc
and
xchg
mov
nop
cmp
xchg
insb
sarb
cmp
inc
lods
mov
mov
mov
inc
mov
cmp
xlat
push
jb
ss
call
add
repnz
ret
pop
mov
pop
add
push
lods
js
ja
stos
bound
xchg
push
aaa
mov
xor
cmp
xchg
adc
dec
lcall
mov
frstor
fadds
aaa
getsec
sbb
ret
jo
push
mov
bound
mov
bound
sbb
cmp
aas
rorb
ret
js
push
jb
bound
xor
and
adc
add
sbb
push
divb
and
push
int
out
xchg
and
xchg
inc
xchg
mov
scas
or
ljmp
leave
push
in
inc
lret
xor
ja
xchg
jns
dec
mov
adc
push
jb
bound
xor
and
adc
add
repnz
sub
sbb
or
pop
orb
bound
xor
and
adc
add
repnz
scas
dec
cmp
sbb
or
add
adc
mov
push
rol
or
inc
cmc
sbb
and
test
jg
mov
sahf
in
and
mov
clc
repnz
pop
incb
cmc
stc
out
push
cmp
outsl
dec
sbb
insb
pop
jmp
leave
or
inc
dec
push
es
mov
add
data16
adc
cmp
sbb
movsb
jno
mov
push
mov
xor
movsb
std
mov
iret
mov
lret
loopne
mov
push
jg
lcall
or
cmp
jl
jbe
cmpsl
cltd
pop
cli
pop
jl
shr
xor
push
adc
lret
mov
xchg
cmpsb
mov
fwait
sarl
into
test
cmp
pop
inc
mov
mov
scas
xor
push
fcoml
dec
jecxz
xchg
adcl
push
jg
arpl
inc
add
int3
pop
dec
adc
and
aad
cmpsl
out
inc
out
movsb
fwait
mov
sarb
fistpl
xor
ret
sahf
sub
sbb
aam
push
into
push
fisubs
out
jne
in
popa
add
jnp,pn
mov
and
outsb
cld
test
ss
cmp
pop
or
data16
add
loopne
pop
int
add
cmpsl
jo
jns
lds
cmpb
out
adc
add
adc
sbb
inc
inc
movsb
outsl
jb
pop
sbb
daa
sub
cmp
mov
arpl
mov
or
je
push
or
ss
xchg
pop
lahf
ret
int3
dec
xchg
repz
adc
dec
push
push
dec
testb
fwait
mov
sti
je
repnz
nop
mov
cmp
mov
push
dec
test
int3
xchg
mov
sub
mov
leave
frstor
xor
dec
loopne
cld
mov
and
jle
add
ljmp
scas
sbbb
sti
dec
add
leave
sti
mov
aaa
fwait
lea
cmp
jnp
xchg
jge
ficoms
test
cltd
test
roll
scas
cmpsb
pushf
mov
mov
rcrl
mov
icebp
rcrb
scas
shlb
movsl
loope
xchg
mov
out
mov
fdivs
insb
shlb
pop
push
push
xsave
mov
pushl
pop
mov
icebp
mov
fbstp
inc
popa
dec
addl
inc
cmp
pop
adc
int
mov
cmp
push
jae
push
jg
mov
xor
imul
or
push
fildl
jns
lret
add
stos
pusha
jb
addr16
mov
cltd
movsb
addb
cmpsl
mov
out
push
push
ss
pushf
sub
inc
mov
fadd
inc
scas
cmpsb
xchg
lret
lods
test
jnp
xchg
data16
and
sub
es
mov
mov
ja
decl
mov
cmp
jle
inc
outsb
loop
cmp
lock
imul
pop
or
pop
les
inc
cmp
adc
xchg
and
cmp
cmpsb
pop
sub
pusha
dec
xor
scas
clc
fistps
add
insl
aad
jmp
lret
push
into
arpl
xor
mov
push
cs
cmp
push
and
push
arpl
popa
push
test
xchg
lods
mov
sub
into
lea
insl
imul
add
icebp
rclb
fistps
jl
lret
adc
jno
mov
inc
jp
mov
mov
mov
repnz
or
cltd
xchg
mov
shlb
mov
mov
repz
jne
fcompl
stc
out
xor
sub
sarl
push
mov
adc
movzbl
negb
out
fwait
sbbb
sub
and
and
mov
loop
inc
add
adcb
cli
sti
cmpsl
xchg
iret
mov
outsl
pop
inc
pop
notl
addl
andl
cmpsb
int3
xor
pop
inc
cmp
sti
out
jl
orb
in
sub
sbb
xchg
sbb
test
push
pop
or
inc
sub
mov
pop
and
imul
pop
ret
popf
push
xchg
scas
decl
inc
lods
hlt
sbb
mov
adc
add
pop
jno
test
mov
insl
stos
and
sbb
cmc
dec
rclb
add
std
push
test
pop
lods
push
pop
jo
adc
scas
scas
adc
or
cmpsl
add
mov
int3
loopne
xor
mov
jp
mov
inc
xchg
sbb
out
inc
sub
daa
inc
jb
stos
stc
xor
cmp
mov
cli
jbe
shlb
ret
lods
inc
or
popa
jo
gs
sbb
in
pop
add
test
or
or
lcall
jne
gs
mov
xchg
pusha
jne
sbb
icebp
xchg
cmp
es
pop
test
aam
and
pop
push
jnp
iret
jg
mov
popf
xor
insb
test
xchg
test
xchg
sub
pop
jns
and
enter
inc
daa
ljmp
lahf
cmpsb
cmp
jmp
cmp
data16
test
loop
push
xlat
lock
repz
mov
cmpsb
cs
sbb
test
or
sub
adc
fucomp
jl
mov
leave
test
xor
adcl
cmc
dec
dec
in
dec
dec
test
imulb
into
out
fistl
push
inc
cs
stos
pop
sarb
mov
aam
or
sbb
repnz
ss
out
pop
ret
daa
into
xchg
ret
rcrl
xchg
xchg
dec
ret
adc
mov
insb
xchg
hlt
hlt
lahf
aad
mov
adc
imul
inc
dec
data16
pop
aam
jle
loopne
nop
rcll
xor
inc
pop
rcrl
shll
enter
and
lret
pop
jno
mov
xlat
call
inc
shr
sub
pop
lret
in
ret
mov
lea
mov
pop
sub
dec
cmp
test
call
inc
inc
jge
sub
out
inc
outsl
or
cmpsl
mov
mov
adc
or
insb
adc
jecxz
lods
je
cmp
out
dec
jne
inc
jbe
xchg
daa
push
aaa
sbb
flds
fistps
clc
inc
pop
dec
mov
push
ret
inc
xor
scas
dec
push
sub
outsl
sub
xor
sarb
push
addl
inc
hlt
loopne
pop
or
outsb
sub
xchg
ret
mov
cmp
xor
xor
test
arpl
cmc
xchg
fs
out
pop
shrl
inc
mov
icebp
mov
mov
inc
xchg
mov
into
or
sahf
jb
xchg
sbb
cvttps2pi
int
sbb
test
inc
and
mov
roll
mov
out
adc
and
repnz
cltd
test
pop
std
mov
sbb
lds
das
or
ficoms
shlb
nop
mov
lock
cmpsl
mov
pop
shl
pop
jmp
mov
incb
mov
mov
mov
insl
outsb
loope
loopne
and
and
add
adc
mov
push
or
and
shlb
push
insl
sbb
push
sarb
sub
test
in
xor
add
addr16
aad
mov
stc
adcl
loop
dec
icebp
and
jp
jb
dec
sbb
es
rcr
fwait
and
jno
lret
ret
jp
mov
jmp
add
mov
cwtl
sub
dec
into
das
aaa
push
push
cs
and
fldl
add
cmp
inc
sbb
xor
leave
mov
inc
clc
jbe
add
sub
sub
jmp
dec
scas
jl
cmp
jmp
popf
xchg
aaa
pop
xchg
mov
aaa
mov
xor
loop
sbb
rcrl
pop
fsubs
pushf
lock
mov
cltd
in
rorb
mov
ljmp
mov
adc
or
jecxz
scas
sbb
cmc
or
jp
xor
popa
inc
aas
pop
mov
or
dec
rcrl
test
in
cli
add
jmp
jae
cmpsl
ficomps
dec
into
test
jo
dec
mov
gs
aam
jae
enter
mov
mov
arpl
cmp
mov
jg
cmpsb
push
sbb
lret
push
pop
rclb
cltd
pop
dec
mov
push
pop
popf
cmpsl
call
scas
loop
notl
xor
mov
cmpsb
push
in
sub
lods
insb
aad
lret
pusha
repnz
les
incb
es
mov
mov
mov
sub
pop
dec
push
addr16
or
arpl
mov
aam
arpl
rcl
rcll
stos
pop
pop
fs
mov
or
data16
aam
imul
jle
cmpsl
fildl
dec
xor
jno
mov
popf
stos
cli
mov
push
push
ret
cmp
das
xchg
loop
pop
jmp
pop
xor
inc
pop
pop
mov
hlt
add
bound
loopne
cmp
mov
jne
je
inc
pop
andb
sbbb
jbe
mov
lods
sub
mov
pop
jecxz
fidivrl
imul
sub
push
addb
push
rcr
fdivrl
adc
mov
es
movsb
es
inc
out
mov
lods
inc
add
inc
push
fisubrl
stos
sahf
mov
call
and
inc
jle
jb
jl
arpl
lahf
vpxor
inc
xor
negl
loop
mov
xchg
es
xchg
mov
out
ljmp
push
jo
popl
pop
push
sbb
enter
and
divl
cld
push
sbb
dec
je
and
or
push
popw
cmp
mov
les
idiv
in
insb
push
leave
mov
mov
fdiv
xchg
sub
enter
int3
mov
mov
arpl
jmp
jns
leave
pop
mov
mov
cli
arpl
stos
aad
subl
movb
flds
xchg
xlat
test
in
jns
shlb
xorl
pop
add
mov
sub
xchg
xchg
mov
sub
ret
add
es
sub
mov
add
fisttps
add
gs
add
cmc
icebp
mov
or
jnp
inc
xor
dec
and
pushf
movb
aaa
mov
mov
aas
or
clc
iret
mov
jbe
push
jle
xchg
dec
punpcklwd
das
int3
sub
or
in
mov
sahf
adc
sub
xchg
push
je
adc
fstpt
loopne
sub
xchg
jns
test
cld
jecxz
bound
pop
stc
pushf
xor
add
cmp
xchg
stc
andl
pop
push
ds
xor
mov
adc
js
mov
and
loop
and
dec
sar
add
pop
rorl
push
mov
les
jmp
push
jmp
fisubrl
add
or
mov
in
pop
jle
dec
xchg
adc
outsb
pushf
outsl
fsubp
mov
retw
lahf
outsl
inc
pop
out
into
andl
ss
loop
dec
sti
lods
inc
or
add
add
pop
popf
sbb
aam
mov
das
dec
mov
in
lea
mov
jb
pop
jl
jnp
and
test
pop
aaa
in
aaa
icebp
clc
jecxz
test
cmp
pop
jne
push
test
push
mov
dec
mov
sbb
pop
adc
popa
xor
inc
cmc
sbb
cmp
push
sub
adc
lret
imul
cmp
aam
add
dec
dec
iret
outsb
xchg
mov
sub
in
pop
orl
push
movsb
incl
ret
js
add
out
movsl
pop
jp
out
xchg
ffreep
stos
mov
sub
lds
scas
jecxz
neg
ljmp
popa
sti
inc
test
jecxz
dec
test
popf
mov
mov
mov
dec
mov
js
repz
cs
inc
popa
mov
push
or
jp
xchg
ret
data16
int3
xor
sbb
arpl
roll
cmp
jle
xchg
and
jmp
stos
into
sti
cld
int
pop
jb
jno
jmp
aad
pop
add
sbb
cs
pop
dec
test
mov
notl
imul
iret
fwait
iret
cmp
mov
data16
stos
or
orb
sub
mov
mov
dec
ja
jg
mov
mov
ret
push
add
loopne
divl
mov
fldenv
push
out
mov
xchg
dec
cmpl
shl
dec
std
push
cmp
push
mov
syscall
push
and
cmc
mov
lods
pusha
out
mov
push
movsb
out
lcall
sbb
xor
pop
mov
hlt
xor
pop
fildll
test
pop
cmpsb
mov
pop
in
mov
dec
lds
je
subl
incb
push
fwait
icebp
push
aaa
dec
add
lret
es
ljmp
mov
mov
xchg
inc
out
mov
sbb
xchg
cmc
cmc
cmp
notb
test
out
or
dec
shll
es
fwait
rolb
movsl
jne
sbb
aaa
jp
scas
jns
push
mov
dec
cs
xchg
push
dec
imul
icebp
call
sub
jae
dec
cmp
push
leave
or
sub
mov
int
aam
jne
xchg
mov
loop
insb
or
jecxz
add
rol
jnp
data16
jae
cli
push
movsb
adc
push
sbb
or
icebp
and
aaa
xchg
movb
inc
mov
xlat
ss
test
dec
xlat
sbb
mov
dec
cmp
fidivrs
sbb
lods
daa
ja
inc
push
fwait
fwait
sti
aam
jae
jo
add
push
fs
mov
mov
aam
xchg
bound
sub
mov
ds
sbb
sahf
sahf
stos
adc
dec
fwait
mov
pusha
add
repz
add
testl
mov
stos
ret
and
leave
pop
xor
jbe
cmp
add
inc
aam
xchg
adc
scas
repnz
inc
jl
pop
and
xchg
and
or
shlb
arpl
pop
mov
pop
imul
ljmp
pop
mov
stc
push
or
int3
pop
loope
fdivrl
js
or
push
cmp
sbb
arpl
in
jb
in
jae
push
int
mov
xor
mov
ja
ss
lahf
test
pushf
cmp
adc
insl
mov
clc
faddl
mov
jg
rorl
jle
sbb
repz
jle
jb
pop
mov
push
movsl
rclb
pop
push
jne
xchg
out
repz
ljmp
and
into
jnp
mov
sbb
push
clc
push
call
cmpsb
test
sub
cld
pop
ja
cmp
jmp
add
cmp
in
xchg
lea
pop
pop
sub
add
cmpsb
add
mov
sub
dec
arpl
mov
out
negl
sub
jne
and
or
int
inc
in
or
sub
jae
icebp
add
in
fwait
je
xchg
mov
cli
nop
imul
lods
aas
or
dec
sub
notb
or
pop
clc
arpl
xchg
adc
in
adc
ret
push
arpl
int3
xor
sub
es
push
dec
sub
lcall
iret
dec
jge
cmp
pop
xor
shlb
sti
std
mov
jl
popa
sbbb
lret
ror
lret
popa
lds
outsb
stos
mov
and
stos
mov
mov
data16
popf
lea
ret
dec
and
jp
pop
sub
jle
lret
mov
xchg
ljmp
xor
ljmp
fisttpl
dec
xchg
pop
mov
out
pop
int
fsubrs
push
jg
xor
add
lret
daa
adc
jl
outsb
xor
adc
inc
pop
shll
mov
sub
dec
push
sub
out
dec
xchg
out
rorb
ss
lock
repnz
daa
inc
push
xlat
inc
std
sub
into
add
inc
inc
adc
adc
mov
pop
fmuls
pop
aad
repnz
mov
sbb
sub
mov
jp
mov
xchg
cmp
sahf
in
push
sti
add
cli
xor
push
xlat
jecxz
cltd
or
fwait
adc
add
mov
add
xchg
into
je
jle
mov
xor
test
arpl
xchg
int
mov
rcrb
sahf
and
sbb
jle
leave
dec
mov
cmp
mov
push
rol
adc
cmp
dec
jg
or
push
les
subl
add
and
stos
xor
in
jns
add
sbb
mov
insl
in
das
push
adc
or
into
mov
bound
fmul
xchg
out
jecxz
scas
cmp
das
add
jg
sbb
imul
shrb
push
jle
push
out
stos
ds
lahf
push
and
sarl
decb
inc
fwait
test
sub
addb
xlat
xor
lcall
cmp
sbb
and
sbb
lcall
iret
push
pop
and
pop
pop
inc
push
pop
cltd
cmp
push
xchg
xor
addr16
imul
hlt
xchg
adc
pop
mov
xor
or
cmc
adc
repnz
std
scas
sub
mov
das
nop
mov
xor
pop
pop
adc
jae
adcb
sub
rorb
lahf
ja
xor
stos
inc
push
and
pop
push
out
or
movsl
and
ja
mov
or
or
fbld
fiadds
sbb
outsl
push
and
mov
sub
insl
in
sbb
in
pop
clc
call
push
dec
adc
mov
scas
or
push
cmp
xor
xchg
jecxz
addr16
or
scas
lods
nop
xor
ljmp
popf
mov
dec
push
mov
in
pusha
mov
sbb
mov
mov
dec
je
aaa
cltd
or
push
pop
cmp
cmp
stos
or
out
sub
sub
cltd
rorb
enter
or
mov
std
add
test
dec
lds
arpl
outsb
insl
outsl
data16
fidivrl
mov
icebp
xor
pop
and
mov
inc
and
xor
and
stos
pop
insb
pop
test
xchg
jae
movsb
andb
movsb
cmp
fmuls
mov
sbb
gs
push
cs
neg
mov
push
dec
ja
adc
inc
loopne
into
mov
xchg
out
sub
adc
aam
xlat
shlb
fbstp
mov
sub
push
dec
int3
cmpsb
mov
stos
testl
fimull
out
test
clc
mov
or
lods
mov
pop
out
testl
push
adc
xchg
xchg
loopne
out
sub
mov
mov
scas
push
push
aas
fdivrs
rcrb
pop
jge
aam
push
mov
adc
mov
rcr
add
add
xchg
push
das
movsb
cmp
push
orl
ss
xchg
add
in
push
cmpsl
and
out
mov
hlt
fstpt
sbb
js
pushf
mov
out
pop
mov
jne
shll
xor
push
mov
cmp
dec
test
mov
cmc
sub
sbb
inc
mov
int3
fisttps
fwait
hlt
pop
nop
xchg
mov
cltd
push
das
lret
dec
out
outsl
add
jae
icebp
in
add
addr16
test
mov
adc
jge
arpl
lahf
cmp
push
add
cltd
cli
faddp
add
scas
aam
dec
lods
xchg
out
andb
mov
xor
or
stos
cmp
cmpsl
push
test
mov
outsl
inc
sub
in
mov
dec
add
jb
xchg
ljmp
test
idivl
test
js
push
sbb
jmp
in
out
shr
fiadds
pop
push
in
adc
xchg
mov
cmp
sbb
mov
cmpsb
sahf
xchg
pop
sbb
sub
ljmp
fsubs
xchg
sub
loop
adc
cmp
in
lods
mov
fisttps
daa
std
fwait
test
add
pushf
ficomps
in
or
cli
insb
addl
lods
inc
or
jmp
adc
sbb
lret
out
dec
pop
dec
sar
in
sub
sub
cmp
daa
int
nop
shl
lahf
adc
addr16
clc
or
mov
and
xor
inc
lods
push
scas
add
pop
cmp
shl
ret
js
push
jb
bound
xor
and
adc
add
repnz
sub
sbb
or
pop
orb
bound
xor
and
adc
add
repnz
push
sbb
or
js
push
jb
bound
xor
and
adc
add
repnz
sub
sbb
or
pop
orb
bound
clc
cwtl
inc
incl
push
pop
bound
jb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
es
ss
push
jbe
pushw
and
xor
cmpsb
cwtl
mov
xchg
xchg
out
xchg
testb
push
ss
push
jbe
data16
jbe
inc
ss
pop
cmpsb
mov
repnz
xchg
mov
cmpsb
es
ss
push
jbe
data16
jbe
inc
ss
cmpsb
mov
cmc
test
rorl
and
fs
int
lods
lods
fs
lds
dec
cmp
mov
repz
orl
sub
mov
adc
mov
neg
push
mov
pusha
cmp
xchg
lds
dec
jns
cld
mov
cmpl
xor
push
arpl
aaa
bound
xchg
xor
popw
mov
sub
push
sbb
aam
fldenv
inc
push
insb
es
sahf
jge
inc
pop
push
push
mov
dec
mov
es
pop
push
lret
inc
data16
sahf
pop
mov
mov
fcoml
ficoml
mov
inc
push
jbe
data16
jbe
inc
ss
cmpsb
mov
xchg
xchg
out
xchg
testb
push
pop
pop
arpl
data16
outsl
and
jb
scas
mov
in
cli
xchg
adc
jecxz
iret
sub
xor
adc
and
dec
inc
pop
push
inc
ret
popf
mov
movsl
roll
mov
leave
dec
adc
outsl
add
add
jbe
inc
ss
cmpsb
mov
xchg
xchg
out
xchg
testb
push
ss
push
jbe
data16
jbe
inc
ss
cmpsb
mov
xchg
xchg
out
xchg
testb
push
xchg
cs
fucompp
mov
rcrl
les
pop
or
jg
daa
fs
dec
or
mov
bnd
cld
fidivrs
xchg
mov
mov
out
pushf
push
into
ss
jl
int3
rorb
imul
pop
das
shrb
scas
pushf
xchg
push
jp
fcmovnbe
adc
mov
fisttpl
pusha
mov
sub
call
fdivs
aas
jmp
cmpsl
xor
push
and
into
sbb
rorl
xchg
jnp
out
push
add
ja
test
pop
insb
in
add
jge
jne
sbb
fdivrp
adc
in
cmp
push
std
sub
aas
roll
add
and
aam
enter
outsb
adc
push
mov
push
mov
rol
mov
pop
or
and
fsubrp
mov
fsubs
jle
cmp
mov
pop
sti
pop
test
lock
out
sub
or
sbb
sub
stc
push
sub
mov
pop
lods
xchg
imul
out
outsb
lods
push
test
sub
das
dec
sar
inc
dec
pop
ja
mov
daa
ret
jmp
jb
and
fcmovnu
das
je
rorb
cmp
adc
and
xor
push
mov
xchg
daa
jg
dec
gs
cli
loope
cmpsl
jbe
dec
sti
bound
xchg
shll
xchg
sub
mov
push
scas
call
adc
dec
imul
lret
and
sub
cltd
test
inc
mov
sahf
insl
bound
imul
das
mov
xchg
jge
mov
rclb
std
sahf
and
adc
scas
jecxz
xchg
out
xchg
mov
pop
mov
jbe
sbb
daa
mov
adc
push
mov
arpl
ret
repnz
mov
dec
xor
xlat
xor
jae
leave
add
mov
jge
push
insl
mov
rcrl
add
cmp
xchg
ss
mov
and
mov
push
sti
aam
cmc
mov
sub
mov
sub
andl
in
fidivs
cmp
mov
sbb
call
sti
push
cli
or
xor
mov
ficoms
xchg
push
test
mov
sub
addr16
mov
push
fsubrp
inc
aas
sub
lods
jno
iret
int
scas
fnstcw
jge
pop
push
test
lods
mov
inc
cmp
push
das
or
movsl
adc
sbb
ljmp
and
mov
inc
out
xor
hlt
test
test
dec
lock
and
fdiv
lret
add
imul
das
mov
jmp
data16
inc
loop
outsb
mov
mov
and
xor
scas
scas
push
leave
add
jno
fbstp
xor
addl
xor
leave
jp
nop
jmp
add
roll
mov
addr16
and
and
and
insb
cld
arpl
mov
subb
mov
xlat
lahf
ret
inc
cmp
ret
jno
mov
pop
and
imul
mov
mov
nop
enter
xchg
lock
pop
jp,pn
xchg
inc
fs
in
mov
mov
fdivrl
js
lret
inc
fcomp
inc
cmp
push
les
jo
leave
shll
mov
push
push
mov
inc
in
loopne
xor
pop
stc
mov
cmc
iret
xor
inc
pop
xchg
and
int
xchg
cmpsb
rcrb
mov
fisttpl
in
inc
xor
and
sbb
outsl
lods
outsb
pop
imul
aad
cwtl
dec
cmp
and
push
mov
cli
push
movl
push
dec
gs
lods
mov
mov
inc
mov
gs
fdivs
outsb
sub
lretw
loope
push
mov
mov
pushf
out
scas
pop
xor
adc
cmpsb
fstl
xchg
fistl
into
clc
aas
cli
lods
pop
jmp
add
sbb
data16
jnp
fs
inc
mov
test
flds
inc
mov
cmp
pop
mov
stos
mov
in
popf
sub
stc
cmp
fnstenv
mov
cmp
outsb
ret
mov
cmp
mov
sub
pop
push
inc
ret
sub
lods
sbb
jg
lds
mov
or
mov
mov
inc
jmp
out
fiadds
jle
mov
cmpsb
mov
ds
test
popf
inc
mov
sbb
add
mov
and
adc
and
out
or
or
rcr
jnp
jg
sub
pop
and
aaa
int
mov
fdivrs
sub
xchg
inc
das
lret
mov
pop
mov
scas
cltd
sbb
lods
sti
es
arpl
jl
rcrb
pop
mov
sub
jno
sbb
pop
pop
enter
je
mov
stc
ret
int3
repz
int
mov
mov
mov
ficoml
sub
push
imul
add
fs
das
jg
jl
sbb
fcmovnbe
icebp
incb
dec
pop
push
mov
jbe
lods
lea
mov
pop
lcall
push
pop
popa
mov
negl
and
and
rcll
inc
ret
sbb
test
xchg
xchg
out
xchg
sti
in
cltd
loop
mov
shl
insb
push
outsb
lahf
fs
mov
popa
test
popa
push
out
fwait
lret
jp
outsl
sbb
pop
add
dec
dec
xchg
test
pop
add
scas
mov
stos
arpl
inc
mov
repz
cmc
or
leave
les
out
sub
test
daa
popf
aas
xchg
xchg
movsl
sti
and
cmp
mov
jp
jb
mov
mov
or
fidivl
int
into
jl
mov
clc
test
fnstsw
rcrl
sbb
xor
fiadds
mov
push
jge
mov
aaa
dec
and
js
inc
sub
push
mov
xchg
pop
add
ja
cmp
sub
cmpsb
adcb
sub
inc
sahf
je
cltd
sbb
xor
push
into
out
sbb
sahf
cmc
test
xchg
and
xchg
jbe
test
ds
mov
xor
fistpl
int
orb
or
xchg
mov
or
dec
xchg
clc
popa
inc
mov
filds
adc
movsb
shrb
addr16
fidivl
sub
aaa
loop
fcmovu
prefetch
or
jnp
sub
aaa
add
inc
mov
shrb
jg
mov
int3
jmp
call
enter
push
leave
rcll
add
mov
fwait
int3
cli
cs
ficoml
cmpsl
jmp
jmp
flds
in
add
add
cmp
mov
leave
inc
insl
jmp
cmp
xor
lcall
lock
mov
adc
jo
cmpsb
repnz
add
xchg
adc
xchg
push
mov
xor
ljmp
int
std
ds
loop
mov
and
dec
mov
mov
rcl
sbb
fadds
lea
or
test
jecxz
popa
les
pop
insl
aam
insl
stc
rorb
clc
decb
push
lods
movl
cmp
push
xor
lea
sbb
sub
push
pop
cmp
jne
mov
gs
lret
es
test
in
jmp
icebp
xor
jne
aaa
xchg
outsb
jo,pt
cmp
fmuls
jne
sbb
jo
sub
xor
scas
jge
pop
nop
cmp
fisttpll
or
das
pcmpgtw
jae
mov
es
jmp
cmp
jbe
pop
lock
push
idivl
rcl
int3
imul
std
repz
test
fcomi
inc
push
rcl
in
je
in
lret
data16
inc
in
inc
mov
popf
ret
sbb
es
add
test
decl
test
inc
or
mov
enter
xchg
cmc
push
xlat
into
xchg
lret
pop
test
es
sbb
cmpsb
jo
adc
pop
je
addl
inc
pop
jle
xor
pop
out
dec
push
testl
loopne
push
shll
repz
or
data16
icebp
pop
pop
dec
xor
sbb
int3
pop
dec
mov
or
rorl
cmpsb
subb
and
ds
scas
pop
imul
or
xor
repz
mov
pop
ljmp
je
insl
rep
add
pop
mov
jmp
sub
dec
imul
mov
in
pop
decl
es
ret
inc
cmp
sarb
pop
mov
push
push
jp
insl
test
push
cld
jae
jge
adc
and
testl
dec
push
mov
stos
cs
and
loope
repnz
xor
sub
sbbb
stos
push
imul
inc
mov
cmc
sbb
lahf
adc
movsl
xlat
pushf
adc
dec
das
repnz
icebp
pop
dec
inc
pop
sahf
jmp
and
jbe
iret
lea
sbb
iret
movsb
lcall
or
adc
call
fdivrs
test
incb
shl
cmp
jo
sub
mov
test
enter
mov
int
dec
push
stos
clc
pop
or
aad
popa
addr16
incb
loope
fnsave
ffreep
add
xor
pop
pop
mov
pop
sub
xchg
hlt
loope
or
xor
jnp
lock
std
sub
jl
pop
and
jle
xchg
pushf
and
and
pop
leave
cmp
jbe
das
push
mov
out
scas
fimull
inc
fs
xor
out
outsl
inc
mov
and
push
pop
xor
arpl
mov
jle
fucomi
xor
dec
sub
pop
in
ljmp
das
andb
je
cmp
push
adc
mov
imul
in
repz
popf
loop
add
lcall
mov
cltd
pop
out
add
jnp
mov
mov
aam
daa
xchg
jg
xor
out
cmp
mov
ljmp
mov
into
addr16
sbb
cmp
cmp
adc
xor
jbe
mov
push
add
shll
imul
mov
pop
and
js
mov
mov
mov
push
das
dec
in
int3
test
jp
gs
jge
push
mov
je
fists
in
popf
mov
lret
aad
mov
inc
mov
es
or
call
sub
rcrb
aam
int3
add
popa
in
lcall
shrb
int3
add
ret
out
pushf
cmp
mov
sub
xchg
and
xlat
xor
jb,pn
and
mov
and
scas
js
jae
outsl
mov
lcall
push
daa
adc
mov
sbb
pop
call
repnz
inc
cmpsl
leave
adc
inc
push
int3
or
push
push
jo
jg
mov
and
test
add
ret
leave
bswap
sbb
xor
xchg
test
adc
mov
loope
push
and
rcl
testb
lcall
or
lds
psubq
push
jle
loop
adc
leave
jo
inc
push
inc
int
inc
adc
inc
lock
xchg
enter
sub
push
aad
jns
or
push
mov
pop
lret
mov
ljmp
out
jo
cs
lock
fs
lods
adc
leave
mov
push
push
sub
test
pop
jbe
add
iret
pop
lea
testl
repz
dec
pop
jne
and
insl
frstpm(287
dec
addr16
rdpmc
push
data16
sub
xchg
idivb
clc
in
sub
and
std
leave
and
nop
lods
dec
clc
cmpsl
imul
xlat
sti
dec
sub
pop
pop
push
inc
pop
cltd
loop
dec
mov
fiaddl
lods
jle
or
adc
xchg
lods
xor
iret
pop
xchg
push
pop
push
jmp
int
push
adc
test
cmp
jbe
mov
lods
cwtl
ja
add
push
repz
jecxz
das
sub
scas
jle
inc
sti
mov
fbld
adc
or
cld
pop
pop
fs
outsl
mov
cli
push
mov
orl
popf
fbld
pop
bound
cmpsl
mov
sub
imul
cmc
lds
xor
test
stc
iret
jne
and
sub
out
mov
movsb
and
cmpsl
dec
or
loopne
mov
sub
mov
add
sbb
xchg
fcoml
cmp
xchg
jb
cmp
xchg
popf
add
mov
or
cmp
and
ja
xor
push
pop
cld
ret
add
xchg
mov
negl
fneni(8087
in
outsb
movsl
das
arpl
cmp
sub
xchg
fwait
test
cmp
lcall
or
out
add
sti
mov
mov
aaa
or
sub
mov
scas
cwtl
xlat
cwtl
das
sarl
cmp
mov
xchg
mov
mov
pop
clc
sbb
ja
iret
jns
adc
dec
mov
sub
outsl
jle
pushw
dec
cmp
xor
int
sub
cld
or
xor
push
lret
sbb
fmull
sbb
jnp
lods
push
cmp
pop
mov
mov
jle
sub
or
arpl
fdivrl
xchg
inc
sarl
pop
mov
sbb
sbb
add
sub
es
js
push
inc
push
add
adc
cltd
push
and
scas
adc
add
xchg
loopne
jge
sub
pop
pusha
inc
and
add
mov
pop
jnp
in
subb
add
pushl
and
sti
xchg
sbb
adc
jne
clc
xchg
push
nop
fwait
jg
sbb
popa
lock
xchg
mov
sub
fstpt
clc
pop
out
in
movsl
or
or
lret
pushf
mov
push
loopne
push
fsubrl
cmpb
push
sarb
pop
cwtl
in
inc
repz
add
push
sbb
aas
push
iret
mov
push
sbb
fstpt
lock
push
pop
sbb
ss
bound
orl
lock
pop
ds
sub
pop
sbb
mov
push
mov
mov
ss
jg
mov
adc
pop
sbb
idiv
test
icebp
les
cmpsl
test
xchg
jg
pop
mov
or
call
leave
push
mov
mov
into
enter
sbb
aaa
int
sub
lcall
lahf
jno
push
dec
ret
push
jno
mov
fcompl
je
fadds
jp
mov
pushf
std
jne
popf
mov
xchg
arpl
cmp
cmp
jae
cmp
xor
leave
sub
cmp
mov
mov
cltd
enter
out
mov
dec
mov
dec
inc
std
daa
stos
gs
incb
cmp
inc
mov
cmpsb
sti
mov
cwtl
loope
push
ret
lods
ljmp
xor
xor
mov
adc
dec
lret
nop
push
out
je
leave
test
sbb
pop
mov
mov
test
lret
or
add
rcrb
mov
add
inc
into
xor
std
in
scas
dec
popf
rcr
xchg
shll
jns
xchg
or
sub
sub
sbb
dec
mov
sbb
add
jnp
add
sbb
jo
sub
and
mov
scas
mov
inc
inc
cmc
cmp
into
fisubrl
insb
jbe
sbb
mov
jns
pusha
dec
fsubl
cwtl
adc
mov
mov
fstpt
sub
cmp
fimuls
pop
push
mov
popf
sbb
or
push
ret
xchg
aaa
dec
mov
dec
jmp
xor
mov
cwtl
add
mov
shrl
jae
add
out
push
lahf
fwait
scas
push
or
test
dec
and
scas
or
add
inc
je
das
jl
push
mov
mov
loopne
lock
push
rcll
inc
imul
dec
pop
mov
lea
inc
in
xchg
popa
mov
lret
out
push
cmpsl
ficompl
xchg
ja
mov
inc
cmpsl
add
lahf
insl
sarb
push
lcall
cmp
mov
lods
sub
cmpsl
in
pop
repnz
in
int
fwait
shrb
pop
adc
sysenter
pop
xchg
pop
pushf
or
jl
push
dec
jmp
movsl
jp
fs
pop
gs
sahf
mov
shll
dec
xlat
in
arpl
sub
sub
out
dec
std
xorb
js
add
sub
hlt
mov
mov
fildll
sub
mov
cmp
stos
mov
push
push
jb
jae
xor
movsl
sub
std
jbe
sarb
incb
gs
pusha
mov
outsb
outsl
jno
icebp
out
cli
mov
pop
lds
popa
cmp
aas
orb
add
mov
push
pop
xchg
je
pop
ljmp
andl
mov
jae
push
inc
hlt
fwait
sub
add
mov
pop
push
adc
cmp
ss
push
pop
mov
xor
jp
mov
insb
dec
lods
ljmp
fs
xor
es
pusha
add
inc
loope
mov
or
jno
loopne
mov
mov
aaa
jne
inc
xchg
inc
aam
mov
mov
dec
sbbb
pop
stos
push
and
inc
and
mov
sub
test
and
movsl
daa
dec
cmp
les
js
loop
mov
scas
push
test
fisttps
test
dec
push
std
xlat
sbbl
leave
add
xor
arpl
hlt
cmp
in
aam
add
push
xor
fwait
lds
test
mov
ss
es
pop
adc
sbb
fsubs
call
adc
jns
ret
cmp
mov
nop
jp
scas
jb
and
add
pop
mov
cwtl
jno
pop
jp
imul
mov
daa
stc
popa
push
aaa
dec
aaa
inc
adc
sub
cmp
inc
cs
imul
pop
arpl
jecxz
icebp
cmpsl
add
mov
and
push
adcl
cmpsb
cmpsb
dec
dec
pop
xor
mov
fiaddl
bound
pushf
xlat
inc
xchg
jae
stos
inc
aad
iret
add
pop
cmp
dec
movsb
movsl
adc
test
scas
cmpsl
int
pop
loope
push
fwait
leave
mov
mov
out
mul
or
push
sbb
clc
fwait
out
or
cld
scas
out
mov
or
push
adc
adc
pmullw
pop
push
cwtl
pop
pop
jno
scas
xchg
in
mov
cmove
in
cmpl
cmp
inc
cmp
pop
lret
sub
rolb
push
push
jp
aam
jge
les
pop
pop
inc
xchg
pop
jl
in
fwait
sub
pushf
sub
sbb
cmp
and
mov
mov
push
xchg
xor
mov
mov
inc
and
push
ja
aad
dec
adc
lods
and
int3
insb
push
sub
push
fisttpl
inc
fbld
xorb
sub
dec
fiaddl
push
jmp
les
xor
adcb
sub
fsubrp
xchg
inc
and
lret
pop
sub
shlb
jge
sti
js
xor
and
js
cld
dec
insl
jno
xor
out
fadd
add
movsl
cs
pushf
sahf
imul
ja
sbb
sbb
add
xor
and
xor
in
inc
cmp
iret
shlb
je
psrld
jge
xchg
movsl
gs
mov
pop
gs
xor
add
out
lea
out
int
in
xchg
sbb
mov
pop
or
lea
pushl
fs
lret
and
lods
test
inc
call
fimuls
mov
mov
push
pusha
pop
mov
movsb
mov
sub
stc
sbb
mov
fstps
pop
jp
mov
into
scas
dec
jno
mov
shll
inc
fs
dec
and
in
add
icebp
addl
add
nop
add
mov
sbb
jl
mov
jge
clc
inc
mov
iret
mov
cltd
mov
or
ss
pop
lock
fimull
xchg
lock
cld
inc
dec
icebp
popa
insl
ss
mov
ds
push
rcll
icebp
lcall
push
mov
push
pop
out
out
cmp
inc
lds
dec
fcomip
je
mov
jg
xchg
mov
xchg
movsl
pop
popf
rcll
daa
sub
add
inc
push
jbe
data16
jbe
inc
ss
cmpsb
mov
xchg
xchg
out
xchg
testb
push
ss
push
jbe
data16
jbe
inc
ss
cmpsb
mov
xchg
xchg
out
xchg
testb
push
ss
push
jbe
data16
jbe
inc
ss
cmpsb
mov
xchg
xchg
out
xchg
testb
push
ss
push
jbe
data16
jbe
inc
ss
cmpsb
mov
sub
xchg
xchg
xchg
push
jle
cmp
pop
mov
push
popl
xor
add
iret
ljmp
outsl
mov
pusha
repz
popl
xor
and
adc
gs
lock
loopne
rorl
sarb
outsl
mov
pop
jo
pusha
or
xor
add
or
ja
push
adc
sbb
not
cmp
adc
mov
iret
add
jae
sbb
mov
aad
outsl
dec
inc
push
jo
jo
cmp
int
and
push
cwtl
inc
mov
loopne
pop
lcall
sti
pop
sub
mov
ss
out
xlat
lret
cld
ret
imul
outsl
dec
sub
std
jne
inc
arpl
add
out
and
sbb
loopne
or
pop
fwait
push
icebp
inc
andb
addb
lahf
mov
mov
inc
add
shrd
das
dec
sarb
outsl
mov
clc
inc
pusha
inc
sub
jbe
out
jno
add
stos
and
sub
xchg
movsl
sti
aas
repnz
dec
jg
jo
pusha
lahf
push
popl
xor
add
lock
imul
mov
jo
sbb
adc
add
jne
je
cmpb
push
or
loop
in
sbb
or
sbb
and
inc
lcall
mov
xchg
push
aad
ss
push
aam
xor
xor
xor
out
and
adc
add
lock
loopne
rorb
sarb
mov
mov
push
popl
xor
and
adc
add
lock
loopne
rorb
sarb
mov
mov
aas
dec
xchg
lds
mov
push
loopne
jl
and
loop
mov
xchg
jmp
and
dec
mov
lods
in
andb
mov
sbb
into
orb
pusha
cli
aad
mov
aam
das
mov
add
stos
in
pop
insl
loopne
test
push
aaa
cmpsl
cmp
sub
insb
testl
add
fsubs
cmp
xchg
lds
cwtl
xchg
dec
loop
insb
add
push
call
pop
decb
shlb
jge
xor
adc
int3
add
pop
mov
cmp
jle
sub
adc
fcoml
pop
lods
adc
xor
add
movsb
loop,pn
testb
dec
fcmovbe
fwait
sbb
mov
cmc
or
pop
inc
jns
inc
and
mov
stos
test
cmp
es
clc
and
adc
shr
nop
xchg
sbb
cmp
or
mov
imul
push
cs
in
call
xchg
es
std
sub
mov
or
aaa
mov
outsb
call
inc
leave
popa
cs
ljmp
enter
sub
int3
cmp
mull
icebp
pop
aas
mov
or
inc
or
jne
nop
ret
int3
int3
sbb
or
push
pop
or
jb
scas
add
push
dec
cmp
out
adc
inc
insb
push
push
out
jg
pushf
lcall
jb
dec
daa
xor
negb
or
fimull
outsl
pop
imul
test
aam
iret
jle
cs
and
or
call
or
jno
dec
push
or
sub
test
enter
pushf
btc
sbb
mov
les
cmpsl
xchg
xor
xor
ja
xor
cltd
rcrb
inc
xchg
frstor
and
fyl2xp1
inc
pop
mov
mov
cwtl
mov
sub
jle
sub
mov
pop
or
lock
push
xchg
sub
xor
inc
out
out
lret
sbb
js
xlat
xchg
jecxz
jne
out
mov
push
iret
lcall
rcll
mov
ret
jecxz
popa
mov
mov
push
xorl
rcl
out
clc
mov
out
dec
lea
int3
mov
push
jns
shlb
std
aam
xor
in
inc
sub
or
and
add
sbbb
push
addl
xor
pop
inc
cmp
test
xor
pusha
fs
insl
sti
rcr
sahf
adc
pop
mov
into
in
fmul
push
inc
mov
fucomip
cs
bound
sbb
shll
lods
inc
sub
ret
arpl
es
mov
xchg
mov
fs
aam
out
adc
cmpsl
fldt
rorb
mov
jg
or
cli
fcompl
out
in
mov
arpl
sti
fisttps
and
repnz
sbb
ficompl
cmpsl
pop
lods
jne
or
js
or
xor
test
jge
xchg
dec
out
add
ljmp
adc
pop
inc
xor
cmpsb
sub
sti
sub
jbe
cmp
sbb
xor
setno
mov
sbb
inc
in
inc
pop
inc
push
in
outsl
jle
xchg
add
mov
xchg
mov
push
aam
movsl
sti
cmpsl
mov
pop
lea
ds
test
pop
jbe
xchg
fs
test
mov
and
xor
dec
push
sti
mov
pop
movntq
rcrl
dec
xor
shrb
data16
mov
xorl
adc
adc
popa
fnstsw
orb
aad
es
daa
push
imul
int3
mov
das
xor
or
sub
fimull
cmp
cli
inc
push
jge
cld
pop
js
jle
ficoml
jno
mov
xchg
andl
add
lret
shll
fwait
pop
adc
insl
scas
or
jge
sub
stos
pop
stos
mov
mov
and
xor
mov
repnz
push
fwait
sbb
xchg
loop
ljmp
xor
add
sti
test
cmpsb
mov
clc
or
bound
lods
push
mov
cs
sbb
aaa
arpl
in
pop
inc
sbb
sub
mov
ja
aam
in
dec
popl
cmp
lods
lea
xor
mov
orb
xchg
sbb
movsb
mov
dec
insb
les
push
scas
out
out
cld
stos
movsl
gs
jne
push
xor
or
cld
push
mov
fbstp
std
push
outsb
push
enter
adc
jne
inc
lcall
jbe
outsb
in
or
fs
mov
sbb
mov
insb
mov
imul
xor
into
and
mov
fisttps
push
out
out
pusha
sub
pop
sub
cmp
cltd
sub
fwait
mov
pop
fidivl
mov
inc
inc
ja
inc
sbb
test
daa
mov
dec
popa
addl
lods
inc
cmp
jo
mov
aam
testl
repz
mov
test
sub
leave
std
pop
sbb
iret
dec
jl
inc
jmp
test
sub
inc
lds
jp
aam
xchg
repnz
push
sbb
mov
jb
shl
lret
cmc
addr16
lods
bound
adc
cmpsb
xor
insl
jg
imul
je
xor
test
ds
rcrb
std
pop
aam
mov
or
jo
sub
jbe
cmpsl
sbb
ret
ss
add
arpl
mov
adc
rcll
daa
gs
iret
pusha
dec
scas
or
jle
cmp
cmp
inc
in
dec
inc
xor
les
int3
imul
cmpsb
jmp
inc
jmp
sbb
ret
push
insl
push
test
adcl
out
aam
loop
je
lock
loopne
fs
jb
in
xor
mov
cmp
push
stc
cmc
out
je
in
es
sbb
sub
fwait
das
ficoms
jnp
mov
cs
sbb
add
xchg
xchg
lock
fisttps
mov
notl
add
inc
mov
jnp
pop
lods
xchg
add
xchg
iret
or
push
sbb
inc
std
imul
lock
push
xlat
jmp
ret
std
and
movsb
cwtl
mov
stc
pop
cmp
jnp
push
cmpsl
cltd
cmc
mov
jb
xchg
push
icebp
das
cli
sub
sbb
add
jle
enter
xchg
dec
and
or
fists
js
aaa
jo
sbb
cmp
mov
mov
dec
nop
and
mov
sbb
pop
icebp
add
ret
lcall
jo
dec
sub
sub
cmp
sbb
push
mov
adc
faddl
cmp
dec
inc
lock
insl
push
insb
mov
jle
ds
fsubr
jp
les
int3
jg
sub
aas
mov
int
enter
lret
loop
int3
xor
push
push
imul
push
ret
cmp
in
js
std
inc
or
test
adc
or
shrb
jp
in
pop
xor
loope
or
or
rep
mov
xor
and
call
push
stc
push
pop
mov
sahf
js
daa
xchg
cmpsl
xchg
lret
into
or
mov
rcll
or
jmp
arpl
and
xchg
mov
mov
lret
jno
pop
cld
cmp
scas
cmc
push
xchg
out
mov
push
push
in
incb
movsb
pusha
xchg
xchg
xor
mov
and
scas
pop
pop
xchg
push
addr16
pop
mov
ficompl
lcall
push
sahf
dec
mov
cmp
loop
gs
or
sbb
fcompl
cld
scas
and
aam
or
push
sbb
movsl
jb
mov
inc
jns
push
inc
imul
and
xchg
pop
in
lock
inc
loope
jl
and
pop
shrb
pop
lods
adc
in
jae
xchg
dec
sub
dec
push
pop
mov
push
fcoms
xchg
push
cli
pop
dec
dec
rolb
fidivrs
es
inc
mov
push
jmp
jae
pop
and
call
jge
xor
call
lods
jne
test
cmpsb
add
lods
mov
daa
dec
in
or
cmc
inc
dec
enter
sbb
and
ucomiss
jb
lahf
outsb
ds
lods
movsl
test
mov
push
mov
cmp
sbb
adc
and
ret
insl
icebp
sub
xchg
xor
dec
adc
cli
imul
cltd
sub
bnd
jecxz
loop
xor
out
inc
xor
push
mov
test
test
into
xchg
add
fucom
adc
and
add
ljmp
dec
cmp
lods
push
mov
hlt
push
rcll
xchg
sbb
scas
inc
or
cld
sbb
mov
sub
add
dec
adc
insl
mov
lret
divb
mov
addr16
push
xor
push
cs
or
fildll
or
fsts
mov
inc
adc
add
sbb
fsubrs
loope
push
inc
dec
or
cmp
sbb
add
stos
cld
push
mov
mov
pop
push
mov
push
aam
test
aad
imulb
push
andb
cs
insl
pop
mov
imul
mov
jno
lahf
push
push
ja
and
out
push
cmp
sbb
pop
js
and
rcl
mov
and
adc
mov
addl
xchg
jo
jge
sub
movsl
mov
dec
cmp
push
stos
dec
dec
in
push
adc
xlat
jbe
cmpsl
hlt
jle
test
jge,pt
cmp
lret
jo
loop
imul
mov
push
mov
je
icebp
mov
mov
mov
xor
repz
test
sub
cmp
jg
mov
loop
xchg
dec
pop
test
fs
mov
or
fadds
aaa
mov
gs
repz
fidivrl
sbb
adc
push
sbb
fdivrl
add
clc
insl
movsl
or
xor
int3
or
clc
fnsave
sarb
ds
rclb
cwtl
pop
xchg
lock
mov
mov
inc
inc
pop
push
or
push
jnp
cli
cld
inc
cmp
frstor
mov
gs
sbb
jg
adc
cld
push
adc
push
aas
add
mov
cmpsl
fcmovnbe
xchg
fimuls
and
sbbl
das
inc
les
or
and
fcmovb
arpl
mov
jp
daa
pop
fdivrl
rcrl
mov
cltd
mov
sub
loopne
push
xchg
push
push
xchg
jge
xchg
movsl
cmp
or
add
push
stos
test
sbb
push
xor
push
addr16
stos
outsb
xor
movsb
aaa
jp
adc
mov
mov
xchg
mov
js
push
out
cmp
lds
cmc
xchg
xor
into
out
add
jg
mov
sub
es
mov
mov
jae
push
or
jo
cwtl
ljmp
fistps
xor
sbb
in
fstcw
movb
pop
xlat
movsb
fcmovnu
dec
inc
popf
dec
enter
sbb
lods
imul
sbb
fstpt
cmp
loope
ss
pop
adc
mov
push
cmp
cltd
sbb
xor
xor
xchg
jae
xchg
push
cmp
in
push
push
dec
add
cmpl
mov
dec
pop
and
pop
dec
test
outsl
adc
jecxz
in
sub
cmp
pop
movsb
or
in
xor
ret
jecxz
mov
dec
xchg
lods
addr16
aad
lret
inc
nop
cmp
sub
std
pop
pop
adc
sbb
jb
adc
mov
jle
mov
fldt
mov
mov
or
arpl
sahf
ds
lods
fadd
aas
fisubrs
clc
mov
lea
push
mov
fs
ss
or
aam
int3
movsl
mov
jg
lret
loope
push
fcmovnb
int
cmp
mov
inc
jbe
xor
and
xchg
stos
sub
cmp
xorl
test
cmp
lret
sub
add
xchg
adc
das
jbe
cmp
inc
sbb
fbstp
in
xor
int3
adc
and
mov
in
daa
pop
cmp
dec
cmp
imul
movsl
in
mov
lds
push
or
inc
pop
js
aad
int3
fnstenv
bound
mov
stos
push
pusha
push
fisubs
sbb
xchg
xor
cmp
cmpsl
push
mov
push
jnp
testl
push
mov
popa
adc
dec
xchg
push
ds
inc
mov
mov
test
pop
push
aam
fdivs
push
lods
sbb
inc
push
fldcw
sub
loop
fdivl
movsb
aas
cli
mov
test
mov
sbb
out
pop
in
fiaddl
cs
pop
shl
sub
xchg
into
dec
inc
sarb
and
lea
pushf
ss
push
lea
scas
int
jne
cmp
in
pop
ret
push
sahf
inc
push
pop
mov
push
or
mov
lods
outsl
pop
lea
lahf
mov
out
or
popf
inc
hlt
repz
push
fs
jmp
sbb
loope
pop
inc
inc
push
sub
in
add
movsl
ror
sub
mov
push
mov
inc
andb
inc
add
jmp
je
je
cmc
pop
inc
xor
loope
cmp
enter
movsl
sub
jne
pop
stos
push
mov
ret
shlb
pop
or
je
adc
add
and
ret
nop
mov
mov
idiv
stos
divb
test
mov
pop
lret
decl
leave
mov
es
adcl
fsub
aas
aaa
xchg
cld
out
lret
inc
ljmp
mov
or
add
cmpsb
add
mov
mov
icebp
jl
cmp
inc
xor
pop
push
xor
mov
mov
mov
incl
fnstenv
push
push
cmp
fbstp
jl
repz
adc
and
jmp
imul
push
jp
mov
scas
sbb
lea
mov
sbb
cmp
fs
int
sahf
xchg
ret
out
test
js
mov
mulb
loop
fidivs
lods
aad
mov
lret
je
nop
mov
mov
test
aas
adc
or
push
pop
push
xchg
and
adc
out
adc
xor
xchg
sub
cmpsl
hlt
les
mov
scas
jg
jp
dec
sub
pcmpgtb
divl
xchg
int3
mov
xor
je
inc
xor
jno
clc
ret
cmp
shll
test
bound
push
push
xchg
lret
inc
dec
inc
leave
stos
lock
and
ss
mov
push
orb
test
xchg
xchg
jmp
jbe
fidivl
xor
xor
mov
push
lods
setns
sbb
fnsave
jmp
push
loopne
loop
cmp
mov
mov
out
scas
jle
je
mov
enter
jnp
repz
out
in
pop
icebp
adc
mov
push
loop
popw
adc
sub
xorl
cmpsb
jmp
in
inc
push
mov
lods
repnz
push
adc
add
jmp
sub
sub
xchg
adcb
movsb
dec
xor
add
loop
inc
insl
mov
adc
xchg
into
hlt
ss
push
int3
or
scas
and
sti
aas
dec
dec
insl
ret
shll
or
and
cwtl
cmpsl
imul
add
mov
lock
xchg
sub
movsl
lods
lahf
sbb
and
push
ret
push
or
push
pushf
les
push
mov
xchg
and
xor
xor
imul
jno
xchg
mov
sub
add
cmpsb
out
imul
lea
cli
in
fnstsw
inc
jge
call
nop
dec
in
aad
mov
add
inc
outsl
jne
scas
das
in
inc
jle
mov
cmp
xchg
nop
movsl
stos
or
pop
sub
testb
inc
mov
pop
int3
dec
xor
sbb
sti
pop
push
fcomps
cmc
popl
add
and
mov
pop
and
mov
testl
push
xor
push
hlt
or
mov
jle
sub
push
aam
mov
sbb
into
outsb
and
push
ljmp
xor
mov
repnz
xchg
sbb
ss
sub
pop
stos
roll
repnz
jle
daa
sub
mov
scas
dec
inc
or
dec
jmp
jbe
mov
mov
loop
insl
push
jge
mov
cmp
dec
js
adc
test
push
sarb
xchg
and
add
lret
mulb
or
mov
adc
fstpt
push
aaa
cld
insl
add
sbb
dec
add
fcomps
rorl
sub
call
data16
outsb
pop
mov
cmpsl
and
fucom
or
sbb
sbb
sbb
test
fildll
cmp
out
fdivs
mov
mov
es
add
pusha
int
negb
scas
or
clc
stc
inc
sub
int
adc
int
lock
adc
adcl
jg
int
lret
sub
push
sub
mov
loopne
ficomps
gs
in
das
into
imul
test
xor
mov
roll
cmpsl
xor
push
pop
jb
scas
add
dec
pop
and
jge
add
out
jle
aaa
test
pop
mov
mov
and
mov
mov
pop
cs
pop
std
push
movaps
mov
shlb
push
repz
add
jnp
nop
and
cwtl
xchg
xchg
push
push
inc
insl
test
or
dec
repz
mov
popf
jle
sub
daa
and
jo
and
xor
data16
inc
in
sbb
hlt
xchg
outsl
les
jae
inc
mov
cmp
mov
sbb
aaa
movsl
mov
adc
lret
paddsw
hlt
rcll
rorb
movsl
aaa
icebp
inc
mov
fs
movsl
hlt
out
xor
shrb
test
mov
mov
and
data16
inc
jbe
jno
jge
rcrb
xor
lock
dec
out
hlt
stos
fs
xlat
sbb
in
lods
mov
insb
jl
int3
lds
xor
in
jecxz
dec
inc
dec
jno
clc
mov
icebp
mov
shrb
rcr
cmp
push
mov
jmp
daa
jne
push
lods
sub
jns
mov
leave
ja
lock
mov
mov
and
sbb
bound
lcall
gs
inc
jmp
sub
push
xor
jp
adc
imul
mov
out
insb
pop
daa
loop
js
cmc
sarb
xchg
push
sbb
jns
and
add
xorl
sahf
inc
jno
jo
mov
xor
scas
xor
xchg
sbb
mov
sbb
mov
popf
pop
sti
mov
mov
arpl
test
and
daa
jle
xchg
xchg
lahf
adc
jb
xchg
lcall
and
punpcklwd
pop
cld
push
mov
push
push
nop
or
push
popf
ds
dec
sub
stc
adc
gs
mov
cwtl
rorb
addr16
fdivp
outsl
mov
push
mov
fucomi
push
xchg
int3
lods
xor
push
out
mov
xchg
lcall
fwait
adc
shrl
adc
repnz
pop
sub
push
mov
in
inc
add
xchg
out
dec
movl
mov
push
or
cltd
inc
mov
fmul
lock
cld
xchg
loopne
jbe
adc
jb
push
or
rol
lods
and
lcall
xchg
mov
mov
iret
mov
dec
out
xchg
ss
sbb
test
adc
mov
xor
dec
icebp
fs
fs
imul
mov
sbb
xchg
ja
push
inc
lds
in
movsb
push
pop
dec
sub
push
bound
std
xchg
push
pop
aaa
push
push
cmc
sub
fdivrs
push
push
pop
frstor
scas
test
std
and
int
lret
leave
loope
das
dec
rorl
aad
sahf
les
lahf
dec
cli
loope
fistpll
clc
xorl
fstpl
cmp
sti
xchg
fists
pop
lock
lods
add
jge
out
repnz
pushl
cmp
iret
imul
sahf
clc
movsb
and
pop
sub
mov
fsubr
dec
mov
dec
ret
hlt
int3
inc
adc
lcall
inc
fcompl
mov
xor
out
scas
mov
pop
adc
push
adc
and
mov
mov
insl
xor
jp
jns
sub
dec
and
nop
adc
decb
xchg
popf
pusha
fcoms
inc
pushl
out
and
adc
add
lock
loopne
rorb
sarb
mov
mov
push
popl
xor
and
adc
add
lock
loopne
rorb
sarb
mov
mov
push
popl
xor
and
adc
add
lock
loopne
rorb
sarb
mov
stos
jo
pusha
lds
inc
pushl
jmp
fists
dec
sarb
rorb
rorb
mov
cmp
pop
mov
outsb
add
xor
pop
dec
or
pop
push
sub
icebp
mov
sbb
scas
adcb
loop
add
dec
and
sub
jb
bound
ljmp
rolb
lcall
cmp
sbb
push
jne
xchg
ljmp
std
stc
faddl
add
jle
dec
aas
pop
and
fldt
jp
jnp
dec
xor
jne
rcll
imul
mov
cmc
stos
in
adc
scas
mov
xchg
in
add
lahf
add
and
loopne
sbb
inc
ret
pusha
cli
jp
nop
jmp
ljmp
xchg
pop
and
jp
dec
test
or
outsl
ljmp
mov
or
repnz
push
movsl
add
cmpb
lret
jb
lcall
sub
ret
scas
jg
sbb
repnz
add
out
gs
leave
xchg
jp
sbb
jge
dec
sbb
mov
ret
adc
lock
add
ds
cmp
jnp
mov
lcall
xchg
ficoml
sti
test
push
adc
ss
das
push
jo
minps
test
int3
mov
xchg
incb
cmp
cmp
ss
push
nop
mov
ljmp
loop
jnp
xor
sub
cmp
bound
xchg
ljmp
shrb
loop
adc
jp
dec
and
sub
jb
bound
xchg
ljmp
shrb
loop
adc
sub
aaa
dec
mov
dec
outsb
xor
mov
icebp
orb
outsb
dec
jb
call
dec
add
arpl
das
notb
out
and
mov
fsubrl
mov
lds
push
mov
stc
in
shll
data16
lret
ret
mov
imul
cmp
lahf
test
or
add
cwtl
jl
cwtl
fs
cld
sar
jl
adc
dec
in
lret
leave
push
fisubrs
push
or
xchg
lret
aam
test
pop
in
inc
mov
adc
aad
add
sbb
ret
movsb
or
cmp
out
dec
and
adc
in
dec
popf
cmp
sbb
int3
imul
adc
int
movsl
xchg
out
xor
into
jbe
adc
mov
jno
pop
fwait
aad
stc
hlt
aas
xchg
mov
sarb
pop
jmp
or
das
gs
btr
dec
ljmp
mov
jae
lret
mov
loope
and
scas
and
mov
into
cs
inc
jno
outsl
mov
pop
sahf
xchg
rorl
push
iret
add
mov
stos
inc
cmc
lods
loope
enter
mov
dec
gs
sbb
jb
mov
adc
lods
iret
stos
adc
scas
mov
cli
das
inc
sbb
addr16
pop
iret
sub
out
adc
bound
cld
out
xchg
inc
popa
jmp
inc
ret
in
jnp
or
xchg
int3
rep
loopne
inc
mov
inc
rcll
and
in
sub
or
push
xchg
mov
xchg
test
pop
mov
push
loope
mov
lock
fcoms
in
cmp
sbb
push
shr
enter
sbb
pmaxsw
lods
lods
idivl
clc
aam
sbb
push
mov
aam
xor
je
cmp
cmc
xor
mov
insb
inc
pop
cmp
mov
data16
mov
out
and
fs
dec
jle
mov
sbb
pop
fucomp
stos
ror
ds
cld
imul
mov
cmp
testb
inc
inc
sbbb
sbb
adc
sub
ror
je
xchg
mov
and
stos
popa
adc
mov
inc
aad
inc
in
fistpll
lret
rolb
adc
lcall
lods
xor
pop
arpl
push
daa
insl
sti
into
sbb
jg
mov
repz
push
jmp
sbb
in
testl
or
aas
test
adc
and
ret
jl
sbb
xorl
faddp
xor
jb
or
push
fucomp
jb
jbe
cli
fwait
jbe
xlat
arpl
shl
mov
pop
cwtl
mov
or
arpl
cmp
sub
dec
jl
push
enter
mov
lahf
push
pop
mov
mov
inc
jbe
faddl
scas
in
dec
lods
insb
dec
aad
xor
jne
push
movsb
imul
fidivl
xchg
movsb
cs
mov
xor
xchg
push
add
xor
lret
into
mov
ds
xchg
ds
cltd
inc
imul
push
mov
jg
pop
push
mov
ss
in
mov
jne
ffree
inc
inc
xor
out
mov
xchg
scas
stos
adc
pop
inc
mov
mov
in
sub
inc
fmulp
arpl
or
cmp
ret
enter
into
dec
push
mov
fildl
push
in
dec
or
aad
out
aaa
cmpsb
iret
lods
xor
loopne
xor
cmpsl
jge
gs
sub
orl
pop
les
or
cmp
fmuls
xor
ljmp
inc
inc
inc
fiaddl
out
cvtpi2ps
push
mov
lea
mov
rcrl
pop
bound
pop
and
lret
fisubrs
jns
out
stos
xor
or
mov
adc
add
adc
xor
dec
aas
mov
pop
cs
clc
mulb
xor
lds
dec
fbstp
lds
mov
push
in
inc
push
leave
dec
outsl
fidivrl
sbb
jo
into
push
push
sbb
mov
and
mov
sub
ljmp
cmpsl
pop
jnp
iret
call
in
mov
push
or
xchg
mov
mov
test
into
pop
push
pop
popf
sahf
je
cmp
dec
mov
or
popf
divb
cmpsl
aaa
mov
xchg
add
dec
sub
mov
lret
push
lods
add
cld
jg
ljmp
faddl
mov
add
data16
add
or
mov
out
movzwl
lcall
out
sub
mov
push
and
lock
jb
sbb
xlat
in
inc
sbb
adc
dec
cli
or
lret
int
dec
cmp
and
pop
and
movsl
push
xor
pcmpeqd
shl
add
data16
mov
dec
push
div
or
xor
outsb
cmpsb
dec
cltd
imul
inc
stc
int
xchg
es
xor
adc
xchg
test
jnp
or
fists
add
leave
dec
int3
pusha
rorl
sahf
push
lods
and
mov
and
inc
mov
into
xchg
inc
cmp
jmp
cwtl
sbbb
shl
jle
mov
cmp
adc
sahf
push
test
test
ss
sbbb
fsubp
mov
enter
mov
out
aad
fsts
stos
test
jns
jne
lea
fidivrs
pop
test
xor
mov
aam
lahf
std
lods
rcr
stos
xor
lret
aaa
xchg
cmpsb
push
fdivs
stos
std
movsl
stos
idivb
jo
sub
loopne,pt
lea
push
mov
add
pushf
adc
cmpsl
inc
dec
aad
xchg
cwtl
movb
fldenv
xor
das
inc
aam
sbbb
pop
jmp
cmpsl
scas
adc
pop
xchg
sub
cmpsb
outsl
add
ret
insb
daa
ds
into
cltd
ja
shll
mov
mov
lahf
arpl
das
test
inc
sti
loope
les
enter
sahf
mov
xor
rorb
dec
adc
xchg
addb
fucomp
mov
push
mov
arpl
cmp
in
sub
rol
ret
add
fadds
cmpsb
inc
outsb
aas
mov
jnp
mov
sar
jb
fidivs
popf
mov
fcom
cmp
pop
pop
push
jb
out
das
inc
mov
or
daa
xor
arpl
dec
jp
inc
lret
les
imul
mov
mov
jg
inc
adc
jge
push
jo
push
pop
and
les
sub
in
je
pop
je
repnz
cmp
xchg
sbb
idivb
mov
in
push
cmp
cmp
mov
xor
aas
out
ror
enter
dec
add
das
xor
mov
ja
add
sbb
and
add
mov
incb
ficoms
cmc
cmp
add
jecxz
inc
out
mov
mov
rcrl
pushf
cmp
add
aad
shlb
loopne
jl
and
ficoml
ret
lea
lret
cli
pop
adc
out
and
sti
int3
idivb
pop
adc
cmp
cmpsl
leave
test
sub
int3
xor
jmp
icebp
xorb
aad
loopne
popf
and
addb
push
aam
inc
mov
and
inc
inc
fld
add
test
insl
xor
jb
loopne
mov
or
les
lret
aad
stos
or
xchg
ljmp
iret
jbe
xchg
pop
fidivrl
jno
test
xchg
fwait
rcrl
ret
mov
push
fwait
and
cli
data16
icebp
fdiv
adc
push
and
cmp
add
and
dec
insl
pop
xchg
pop
into
scas
lods
xor
pop
aam
in
cld
mov
in
jge
inc
and
pushf
xor
dec
std
push
dec
cmpsl
ljmp
xchg
call
or
mov
mov
mov
repnz
int
nop
and
inc
int3
dec
inc
jl
pop
fadds
int
adc
ds
mov
inc
inc
aad
das
jmp
sbb
popa
jp
hlt
notb
sbb
mov
cmp
repnz
lock
loopne,pt
fiadds
lods
push
mov
dec
jbe
fidivl
xchg
jmp
pushf
icebp
iret
call
mov
jo
mov
test
add
xor
dec
mov
les
jecxz
ret
mov
xchg
or
popa
mov
push
mov
or
sbb
add
add
neg
cmpsb
lea
mov
or
imul
mov
and
xor
neg
popf
and
roll
mov
ret
and
cmc
nop
jl
push
pop
xchg
psrlq
ljmp
lock
mov
xlat
hlt
pop
dec
pushf
sub
xor
jle
or
arpl
pop
push
sbb
inc
jl
popa
jne
cmc
int
cmc
aam
push
lea
das
jle
add
xchg
jp
rorb
stc
mov
sub
push
test
ljmp
xchg
sbbb
dec
xchg
popf
stos
sbb
ficoms
ret
add
jo
pop
out
mov
cmpb
dec
leave
lret
stos
xorb
stos
js
and
inc
cmpsb
xor
data16
add
mov
lds
adc
xchg
imul
mov
daa
pop
xor
insb
imul
je
rcll
shll
pop
pop
mov
jne
cld
outsb
push
popa
lcall
sbb
jg
std
ljmp
int
fwait
nop
push
sbb
nop
notb
out
xchg
xchg
daa
mov
icebp
jle
dec
mov
sbb
sbb
loop
cs
mov
pop
push
and
jno
in
ret
mov
pop
sbb
push
cmp
xor
arpl
mov
into
or
jae
xchg
daa
movsb
cmpl
fisttpl
cs
fs
xchg
fxch
sbb
xor
cmp
mov
xor
enter
lds
mov
push
inc
in
call
push
fpatan
pop
cwtl
pop
lahf
cwtl
adc
cmpsb
adc
dec
stos
enter
imull
xor
int
pop
int3
cmp
xor
jg
push
adc
jle
test
xchg
dec
xchg
add
push
push
sub
loop
add
aad
mov
fcom
scas
les
imul
push
mov
std
inc
loopne
inc
xor
adc
mov
pop
jo
es
dec
je
mov
jmp
push
movsb
push
dec
jg
cmp
ljmp
loopne
mov
jecxz
gs
mov
mov
mov
push
xor
jecxz
fwait
cmp
mov
movsl
or
das
movsb
jns
int3
xlat
mov
scas
jbe
mov
fldl2t
sub
shlb
xchg
sub
or
fwait
loopne
pop
test
sbb
and
clc
push
cmpsl
jnp
jae
scas
pop
inc
imul
adc
xor
shll
daa
in
stos
dec
adc
xchg
jmp
decl
lods
call
jge
sub
and
or
jae
xchg
or
lret
pop
cmp
xchg
jmp
sbb
xchg
or
test
cmpsb
mov
loope
lea
push
and
lds
ret
push
jns
add
stos
add
lahf
lods
inc
cli
push
outsl
repnz
scas
mov
test
mov
lods
subl
mov
iret
inc
lcall
jge
ficomps
mov
lret
pop
add
bound
inc
dec
orb
cltd
or
cmp
cs
pop
cmp
addl
mov
cwtl
mov
pop
mov
aaa
and
nop
sub
jg
test
arpl
mov
and
or
push
inc
or
or
jns
out
jmp
or
sbb
fsubs
xlat
inc
arpl
out
unpcklps
push
xchg
testl
clc
push
pop
push
push
les
sbb
rol
adc
fadds
in
mov
push
jecxz
stos
inc
cmp
sub
mov
mov
fsub
imul
cmpsl
jl
imul
in
lahf
xchg
or
mov
mov
push
cli
sbb
cmp
sub
jae
stc
mov
sbb
roll
ljmp
insb
lahf
xor
filds
xchg
jbe
xchg
fnstenv
mov
sti
data16
mov
addl
cmpsb
adc
cmp
pop
jp
mov
cmp
cmp
lahf
lret
insb
push
push
sub
loopne,pn
call
mov
jbe
cwtl
loope
jle
cmp
mov
insl
inc
ret
cmp
jp
xlat
lods
sub
or
inc
push
std
and
fstpt
push
inc
fadds
aas
std
out
add
mov
loop
mov
jns
aad
inc
and
adc
pop
aad
shrb
inc
or
cmp
lcall
insl
inc
test
xchg
loope
or
xchg
aas
cmp
out
jnp
mov
sub
out
sbb
dec
pop
in
push
and
lods
mov
repz
lret
dec
push
and
lods
jl
or
dec
out
and
sbb
sar
xor
xchg
call
xchg
mov
mov
call
inc
lret
mov
call
mov
xchg
iret
jge
mov
sahf
and
test
xchg
nop
pop
fidivrl
sti
les
mov
inc
lock
xor
in
ds
sbb
sub
call
orb
mov
enter
dec
or
inc
repnz
push
idivl
ja
sub
push
inc
xchg
out
mov
cmpsl
ja
loop
and
stos
fsubl
and
nop
stos
int
xor
xchg
sbb
mov
pop
mov
fs
inc
pop
or
mov
inc
test
and
shl
mov
mov
add
js
ja
xchg
ljmp
cwtl
add
jbe
add
js
arpl
and
mov
mov
xchg
inc
add
and
dec
out
out
in
adc
adc
sub
mov
sub
push
movsb
dec
push
icebp
imul
pop
ret
mov
mov
repnz
pop
sub
or
scas
pusha
lret
push
sbb
inc
dec
lcall
lods
inc
or
pop
push
enter
scas
lret
inc
push
das
aam
mov
scas
pop
or
pop
stc
in
xlat
push
shlb
decb
dec
inc
dec
cld
cmp
test
mov
xor
pop
es
das
scas
inc
mov
or
adc
push
jg
mov
xchg
push
out
fistps
cmp
xchg
bound
cmp
jne
out
pop
push
add
je
lods
jecxz
sub
lret
js
fstpl
pop
imul
jle
mov
mov
rep
sbb
pop
jae
mov
enter
cmp
xor
mov
cld
ss
xchg
call
sub
jne
fdivrs
and
adc
mov
cmpsb
fsubr
call
out
mov
inc
jbe
sub
or
or
xor
add
popf
aaa
test
inc
or
or
imul
dec
dec
mov
pop
dec
adc
pop
inc
jecxz
nop
sahf
dec
pop
in
pop
mov
mov
mov
sbb
jne
push
xchg
and
xor
sbb
dec
cwtl
and
enter
add
pop
xchg
iret
cmp
outsl
aam
dec
mov
cmpsb
inc
add
sub
pusha
jmp
sbb
and
and
aaa
xchg
mov
loopne
mov
daa
dec
sbb
xor
adc
mov
lahf
loop
or
shll
orl
hlt
push
sbb
inc
popa
fs
arpl
and
or
add
hlt
sbb
lahf
jnp
mov
mov
dec
scas
dec
jp
xchg
js
scas
in
stc
std
cmp
hlt
jns
xchg
xchg
mov
sub
enter
jmp
aad
fs
fucom
cmp
inc
das
aaa
or
pop
mov
pop
popa
pushl
pop
xor
aaa
in
dec
jle
fwait
gs
popf
fbld
andb
inc
jb
enter
shrl
mov
pop
sbb
dec
and
jle
add
sub
mov
push
fisubs
or
divb
cmp
jp
into
in
push
mov
adcl
adc
push
mov
cltd
andb
loope
aaa
scas
mov
sub
sarl
pop
js
popf
jnp
imul
xchg
sbb
or
push
rcrb
js
pop
in
negb
sub
loop
imull
jno
dec
out
and
ror
lock
pop
popf
cmpb
jge
ficompl
jg
pop
aad
imul
scas
clc
push
insb
imul
adc
xlat
aam
sub
sub
insl
bound
loopne
sub
push
pop
andb
scas
push
orb
jno
or
in
sbb
insl
xor
iret
mov
cmpsl
jmp
jns
mov
pop
inc
inc
and
out
in
or
jmp
cwtl
mov
jmp
pop
pop
inc
cmpsl
or
push
jmp
pusha
mov
adc
mov
jb
push
sub
movsl
jb
sbb
add
popa
rcrb
adc
cli
ds
popf
frstor
dec
addl
sbb
dec
scas
push
jne
mov
addr16
inc
call
stos
xrelease
es
cmp
dec
push
loopne
adc
cmp
fsubl
ret
mov
push
ret
loope
inc
dec
outsl
add
lea
or
add
das
lods
subl
clc
clc
pop
push
sbb
test
imul
xchg
inc
mov
add
popf
adc
mov
ss
add
mov
xchg
push
mov
dec
sub
mov
adc
adc
adc
movsl
bound
pop
sub
xchg
pop
lea
mov
push
shr
in
cmp
ja
loopne
or
inc
hlt
mov
je
scas
shlb
rolb
std
pop
cmp
xchg
loope
mov
leave
sub
add
sub
jp
mov
in
pop
js
daa
xorl
mov
sti
xlat
mov
mov
gs
push
popf
mov
and
mov
inc
arpl
jg
imul
cld
mov
jl
and
mov
push
mov
jp
fisttpl
sbb
sahf
imul
push
lods
lret
fidivrs
iret
repnz
pop
sub
and
or
push
mov
ret
jb
imul
std
inc
xchg
push
push
and
push
into
cmp
aad
mov
and
add
push
jmp
cmc
pop
inc
xor
pop
nop
cs
add
xor
fchs
into
add
mov
dec
add
ret
test
and
scas
testb
dec
scas
xchg
sahf
and
cmp
xchg
test
push
pop
sub
jb
jecxz
mov
cmp
dec
xchg
add
pop
jbe
fildl
sahf
repz
mov
enter
pop
test
inc
inc
xchg
imulb
push
es
xor
in
repnz
xor
and
gs
cmp
int
cwtl
or
clc
call
inc
clc
sbb
push
jae
iret
in
les
adc
orb
mov
pop
aad
repz
pushf
imul
sub
pop
push
imul
nop
lret
cwtl
dec
stos
push
mov
pop
add
cwtl
mov
je
or
cmp
inc
mov
mov
and
bound
cmp
sbb
faddl
push
xor
insl
inc
das
cmp
or
jmp
popf
out
mov
mov
or
imul
jle
mov
sub
addr16
adc
lret
mov
xor
pop
jl
xchg
dec
les
fsts
cmpb
pop
sahf
in
rcll
jg
dec
mov
dec
sbb
mov
cmp
scas
fdivl
imul
sbb
cmc
push
or
or
ret
and
popa
clc
inc
test
loop
lret
pop
in
xor
psadbw
inc
sarb
lret
insb
mov
cmp
push
ljmp
adc
jp
mov
test
shlb
sub
imul
mov
dec
cmp
pusha
mov
das
fldl
xchg
xchg
mov
addr16
jecxz
or
add
sahf
pushf
adc
push
js
jp
fwait
add
aam
flds
lods
icebp
xchg
pushf
sub
xchg
mov
mov
les
and
outsb
adc
adc
lret
jb
mov
pusha
jp
dec
and
sub
jb
bound
xchg
ljmp
shrb
loop
adc
jp
dec
and
sub
jb
bound
xchg
ljmp
shrb
loop
adc
je
push
and
sub
jb
bound
xchg
jmp
mov
mov
mov
mov
sahf
add
and
push
sub
repnz
fisubrl
jge
sbb
mov
ret
sbb
mov
xchg
xchg
shlb
pop
cmpsl
es
xchg
xchg
push
out
hlt
ss
inc
push
cmpsb
ss
xchg
xchg
data16
testb
mov
mov
xchg
cwtl
push
out
jbe
inc
push
aas
cmpsb
das
mov
xchg
xchg
jg
outsb
negb
push
mov
jbe
push
out
cltd
adc
cmpsb
pop
ret
pusha
jp
and
xchg
xchg
xor
clts
into
inc
out
popa
imull
cmpsl
scas
leave
idivb
stos
imul
fisubs
fwait
lahf
push
jp
push
std
movb
fnstenv
push
cli
movsl
mov
jge
rcll
mov
data16
mov
es
xchg
sbbb
push
xchg
clc
imul
dec
mov
mov
imul
cmpsb
andb
and
divb
cmp
push
into
and
dec
inc
xchg
jecxz
sub
pop
push
pop
fnstcw
daa
sti
add
push
mov
push
push
out
cmpsb
das
mov
xchg
xchg
jno
data16
mov
push
push
data16
jbe
inc
adc
push
gs
rclb
mov
ficompl
push
xchg
les
cld
imul
add
pop
xchg
jp
or
cmp
pop
ret
jle
mov
inc
push
cmpsb
es
xchg
xchg
push
out
divb
inc
push
cmpsb
ss
xchg
xchg
data16
testb
cmpsb
es
xchg
xchg
push
out
divb
inc
push
cmpsb
sbb
or
adc
inc
xchg
xchg
test
aas
div
push
mov
dec
mov
aam
mov
cmpsb
fdivrs
mov
and
lahf
loop
push
fildll
rorb
clc
adc
mov
iret
addb
ja
dec
cmpsl
push
test
xchg
jl
mov
push
pop
inc
loope
pop
pop
insl
stc
mov
test
mov
push
mov
add
jbe
sbb
jne
pusha
lock
sub
add
adc
mov
inc
lahf
fnsave
pop
xchg
pop
mov
pop
icebp
pop
mov
inc
out
repz
shrb
adcl
inc
aam
pop
mov
jmp
lock
xor
loope
xor
sbb
es
mov
xor
popa
xor
rclb
lea
ss
adc
or
rcrb
xchg
scas
pop
psubd
cmpsb
aaa
add
dec
inc
cs
addr16
mov
data16
inc
push
mov
daa
mov
dec
shlb
pop
add
out
popa
sub
sub
push
adc
fsubs
jmp
mov
sbb
es
rcr
mov
cmp
fldt
sbb
cs
jb
ret
add
scas
push
push
push
sarb
loope
and
ljmp
andb
bound
add
lods
movl
jo
loopne
adc
in
fsubrp
cmp
mov
pop
outsl
cmp
sahf
xor
imul
in
cmp
in
mov
cwtl
int3
mov
add
scas
sbb
jmp
scas
outsb
inc
jae
jne
or
fists
es
mov
lea
stos
xchg
mov
loope
inc
push
icebp
pop
test
dec
daa
xchg
out
out
addr16
mov
pminsw
pop
ljmp
or
jo
dec
fwait
das
or
xchg
ja
xchg
repnz
insb
pop
cld
out
fwait
lods
loop
push
clc
shlb
mov
cmpsl
or
ret
dec
sbb
mov
insl
mov
xchg
fs
in
cwtl
outsb
sub
cmpsl
xchg
test
dec
xor
jle
outsl
sub
sub
fs
lea
fnsave
negl
out
cmp
jns
std
lods
pop
pop
pop
mov
int3
imull
mov
push
sbb
out
test
mov
mov
test
xchg
mov
fidivl
add
test
jo
je
cmc
dec
fsubrl
sahf
mov
mov
push
iret
cmp
sub
mov
dec
sub
add
xchg
jae
jbe
mov
scas
je
and
fdivrs
mov
pop
inc
sbb
or
and
loop
add
stos
adc
pop
sbb
sbbl
jne
sbb
sub
mov
sbb
mov
pushf
dec
mov
adc
jecxz
jl
enter
dec
xor
in
aaa
das
pop
pop
dec
das
fcomps
outsl
add
or
dec
sbb
push
sbb
pop
push
ds
xor
and
orb
in
mov
xor
dec
inc
mov
pop
inc
loopne
daa
fidivl
addb
fstpl
cs
jg
push
hlt
sti
stos
sub
incl
mov
jbe
mov
pusha
test
imul
imul
sub
adc
sub
cli
aaa
dec
dec
dec
lcall
adc
imul
adc
adc
mov
mov
or
add
fcmovnb
inc
cli
lock
das
xor
sbb
xchg
mov
rolb
daa
mov
pop
out
fstps
repz
dec
ljmp
add
dec
cmp
imul
into
pop
inc
mov
push
pop
mov
or
mov
dec
mov
lcall
sbbb
sub
push
dec
dec
or
add
xchg
out
ret
xorb
aas
xchg
push
ret
cmp
push
mov
mov
cltd
popf
rorb
lret
lahf
in
or
roll
pop
inc
sub
shr
cmp
adc
add
xor
sbb
gs
idivb
scas
mov
push
hlt
repz
aas
stc
notb
ljmp
cld
orl
jg
sub
xchg
js
cmpsb
push
xchg
cmpsl
inc
adc
mov
add
push
scas
xor
and
and
jae
daa
daa
push
les
add
xor
bound
cmp
arpl
cmp
cmp
push
mov
mov
push
sub
es
adc
jp
cli
mov
sbb
xor
jbe
jl
outsl
mov
inc
gs
push
shll
inc
sbb
mov
xor
pop
stc
sub
fistl
pop
mov
repnz
hlt
jmp
push
aas
mov
adc
mov
dec
mov
setno
gs
data16
test
stc
fs
pusha
insl
mul
xchg
es
jg
or
inc
push
and
fs
sub
or
jnp
call
cs
mov
sbb
sbb
lods
cmp
xchg
gs
lods
ja
je
adc
aad
pop
movsb
adc
pop
xchg
push
or
lods
movl
mov
ficompl
push
ja
cmp
push
aam
loop
sar
mov
insb
pop
incb
xchg
stos
xor
pop
inc
cmc
xor
pop
push
mov
cmp
adc
ret
rcrb
mov
outsl
xchg
jne
lret
lds
scas
sub
or
mov
jg
pop
out
inc
jne
lods
or
jno
insb
inc
cmpsl
mov
push
cmp
or
xchg
push
xor
mov
loopne
dec
push
out
jno
popa
mov
jnp
adc
cmp
je
test
cltd
pop
inc
ja
mov
loope
dec
dec
inc
xchg
adc
inc
push
enter
std
push
insb
imul
pop
loopne
add
icebp
mov
shll
les
xor
int
dec
add
cltd
mov
pop
call
pop
push
int3
dec
mov
fs
xor
and
leave
scas
mov
sbb
sub
int
mov
sub
insb
cld
sbb
xorl
push
cltd
stos
jbe
dec
xlat
adc
dec
add
mov
fs
sbb
jne
mov
fstpl
into
hlt
in
sub
fbstp
loop
pop
call
ret
pop
data16
cmc
adc
mov
les
or
lahf
adc
jb
push
lds
mov
and
lods
pop
push
aas
pop
mov
xor
loopne
scas
jp
push
aas
pop
cmc
xchg
fwait
int3
inc
sahf
cmp
repz
addl
inc
dec
shl
std
out
fnstsw
dec
leave
cmpsl
in
rorl
fisttpl
cmpsb
ret
movsb
fdivrs
push
sarb
sbb
xchg
jnp
outsb
fnstenv
sub
sbb
in
mov
lea
js
js
loop
int
cli
mov
mov
fbstp
mov
push
into
pop
sahf
rclb
cmp
pushf
inc
arpl
jle
push
insb
push
imul
addb
daa
enter
outsb
pop
fld1
sub
jb
inc
fmull
sbb
xor
shrl
dec
push
mov
pushf
xchg
cld
imul
leave
lods
arpl
iret
out
test
cmp
mov
nop
scas
scas
xor
pop
mov
das
jle
adc
lods
xchg
sbb
icebp
arpl
lea
insl
sbb
cmpsl
push
outsb
cmpsl
push
outsl
scas
fbld
xchg
add
daa
inc
mov
push
rol
inc
dec
notb
punpckldq
stc
int3
sbb
daa
in
divl
mov
push
outsl
stos
xor
cwtl
jecxz
lods
nop
mov
mov
inc
testl
pop
sbb
cltd
jl
adc
mov
sub
jae
je
push
fs
imul
or
or
and
dec
xchg
nop
adc
arpl
aam
dec
mov
sub
mov
lods
fs
dec
jp
mov
scas
adc
in
mov
cld
jmp
pop
inc
and
lret
push
xor
xchg
mov
sahf
aaa
stc
sub
xchg
cli
ss
dec
sub
push
mov
inc
test
subl
inc
push
leave
mov
fistps
jae
in
cmpsb
mov
insb
mov
add
insb
mov
jne
adc
cwtl
stos
lods
aad
mov
fnsave
imul
ret
mov
xor
pushf
pop
mov
ficoms
fcompl
jb
pop
es
lds
adc
in
daa
mov
enter
jg
xchg
add
in
mov
fstp
lods
xor
cltd
xchg
movsl
add
or
push
test
pop
out
sub
fsubr
aaa
mov
add
sbb
lret
aas
mov
push
test
cmp
jl
icebp
push
or
jge
int3
mov
jb
mov
icebp
stos
out
test
mov
sub
pop
loop
es
xor
cmpsb
loop
push
jb
ja
jne
xchg
out
stc
sbb
std
jge
hlt
cmp
add
aas
jp
ret
jp
data16
adc
test
sbb
adc
push
xor
and
jno
pop
scas
push
xchg
mov
out
push
push
push
les
sbb
cmp
push
mov
mov
pop
mov
orb
mov
xlat
stc
xchg
adc
nop
lds
loopne
popa
ja
arpl
jg
dec
lea
dec
andb
mov
inc
push
push
sub
lea
jne
iret
pusha
jge
lea
dec
adc
push
cmp
xchg
jmp
dec
test
jbe
pushf
rcr
xchg
sub
cltd
fdivrs
mov
xor
mov
lret
adc
pop
mov
lcall
mov
push
push
loope
jg
or
sub
cltd
or
ret
xchg
popf
sbb
adc
push
xlat
xchg
aad
xchg
inc
aad
and
sar
dec
rorl
pushf
rclb
inc
mov
mov
or
cmp
pop
xor
cwtl
add
adc
or
in
pop
enter
mov
mov
stos
adc
int3
jne
push
jns
mov
or
aaa
sub
mov
mov
call
push
lea
gs
cmc
adc
xchg
mov
les
or
cli
jge
shll
out
dec
lods
loope
mov
jl
lret
adc
cmp
sub
insl
cltd
rclb
daa
sbb
stos
lretw
ret
and
rcrl
mov
add
repnz
fs
inc
cwtl
insl
orb
lret
adc
lret
mov
dec
shll
cmp
loop
push
mov
adc
adc
iret
jns
fwait
enter
int
lea
xorb
jno
push
mov
ja
push
dec
jmp
xor
rcrl
scas
pop
fld
mov
mov
ljmp
in
dec
pushf
outsl
fcmovne
aaa
lock
dec
sub
inc
in
push
and
loope
adc
mov
push
ds
xchg
js
xchg
mov
movsl
movsl
les
lods
andb
xor
loop
rolb
aam
jo
test
fcomps
cmpsl
inc
out
popf
xchg
fucomip
jbe
pop
mov
iret
ljmp
xchg
jne
es
jns
aaa
fidivl
push
xchg
mov
xchg
cli
jle
jge
cmpsb
xchg
in
das
xchg
sbb
dec
push
mov
je
dec
or
sbb
mov
emms
cmp
enter
popf
pop
mov
int3
add
dec
enter
push
pop
add
imul
xor
flds
repz
pmulhw
or
xor
xlat
mov
mov
xor
cmp
push
jno
mov
and
pop
cmp
push
sti
mov
subb
xchg
jecxz
mov
xchg
jge
adc
fsts
int3
ret
cmpsb
lock
jno
aas
sarl
pavgb
sub
push
bound
sahf
xchg
xchg
dec
xor
push
lcall
scas
mov
cmp
mov
xchg
mov
mov
xor
adc
test
int
nop
or
or
test
cmp
aas
adc
push
test
jle
mov
shll
ds
sbbl
out
jae
sub
cmp
mov
adc
insl
daa
cmp
xor
cmpsb
mov
nop
mov
xchg
jg
or
push
push
out
or
push
cmp
adc
in
pop
fwait
arpl
arpl
or
pop
leave
rcrb
aad
sub
ds
xor
adc
inc
mov
sub
outsb
lcallw
shll
lods
and
aad
cwtl
loop
sub
orl
testl
jo
dec
ljmp
ret
jmp
xlat
xchg
sub
subl
hlt
sbb
cmp
out
adc
dec
and
aam
dec
push
in
movsb
jbe
mov
enter
dec
jns
push
loope
xor
mov
mov
push
mov
and
xor
test
jno
xor
ss
cmpl
loopne
jg
or
sarb
pop
lret
mov
movsb
inc
sti
bound
xlat
cmpsb
cmp
mov
dec
xor
adc
push
cmp
lahf
inc
das
mov
nop
notl
sbb
mov
jb
cmp
sarb
xchg
xchg
mov
into
cmp
mov
js
fdivs
addb
insb
aam
xor
fs
int
or
jns
scas
push
sbb
mov
pop
ds
lods
add
xchg
out
dec
jmp
dec
push
or
repz
dec
cs
das
fisubs
fstps
les
pop
movsb
xchg
imul
sbb
sbb
xchg
mov
pop
mov
fistl
jns
dec
xor
cwtl
lahf
arpl
mov
int3
clc
testb
and
and
xchg
cwtl
fs
inc
push
mov
imul
sub
into
xor
xchg
pop
popa
pushf
addr16
je
push
dec
jmp
leave
testb
rorb
jl
or
push
movsl
mul
mov
cld
xchg
in
or
inc
dec
mov
cmp
lds
jg
and
aas
mov
js
add
bound
sub
lds
mov
insl
jns
mov
popa
in
pop
icebp
bound
in
add
outsb
mov
fisttpl
dec
cmp
jns
andb
movsb
xchg
ret
std
das
push
ja
pop
pop
mov
sbb
cwtl
push
adc
arpl
outsb
xchg
mov
adc
sub
push
inc
jae
out
adc
fwait
cmp
dec
mov
xor
ljmp
outsl
imul
test
loope
inc
push
shrl
lods
loopne
xchg
fists
out
push
add
lods
sbb
pop
lds
hlt
lods
shl
mov
stos
inc
icebp
insl
add
into
das
add
cmp
sbb
insb
xchg
js
sub
jae
leave
pop
stos
xor
xchg
and
loopne
adc
xchg
adc
test
push
mov
xchg
inc
xlat
add
lcall
in
add
pop
int
insl
mov
mov
jmp
sbb
jle
loope
in
mov
pop
testl
adc
mov
lcall
jno
popa
xchg
int
fdiv
and
cmpsb
mov
bound
in
jecxz
xor
lahf
mov
mov
pushf
add
jb
in
pop
dec
jge
shr
loope
xor
sarb
sahf
test
sbb
cs
sub
loope
pop
xchg
and
mov
repnz
push
mov
aad
sti
cltd
fwait
outsb
out
push
xchg
sub
mov
movsl
sbb
fisttpl
cltd
stos
dec
shr
in
dec
int
hlt
js
cmp
xlat
aad
sub
cmp
int3
push
mov
inc
xchg
insb
mov
outsb
ret
cmpsl
sbb
adc
jae
shll
mov
in
and
sub
adc
dec
xchg
xor
add
lahf
les
jmp
push
outsb
sub
and
xchg
pop
pushf
adc
push
xchg
inc
js
dec
cltd
xlat
sbb
into
mov
cs
xor
arpl
loop
jmp
sub
int
xchg
out
dec
loop
fildll
setno
xchg
jg
or
jnp
insl
scas
test
in
insl
outsb
dec
mov
roll
mov
sbb
fadds
jp
sub
push
mov
jg
dec
ja
mov
mov
or
out
test
lret
push
or
bnd
in
pop
sbb
sub
cmpsl
cmp
push
lods
stos
sbb
pop
push
fdivs
pop
pop
add
pop
fwait
stos
and
jo
xchg
iret
fs
scas
imul
jb
dec
adc
into
sub
pop
mov
adc
out
lret
push
int3
aam
insl
aaa
xor
fistpll
xorb
out
fprem
dec
fsubs
mov
xchg
loop
inc
pop
or
mov
je
or
dec
push
mov
repnz
aaa
leave
jno
xor
mov
arpl
jne
inc
mov
into
inc
dec
adc
loopne
or
hlt
imul
int
shr
mull
test
mov
jnp
inc
lret
leave
cmp
pop
in
xchg
dec
dec
push
or
mov
out
fldl
daa
adc
xchg
lret
jbe
cmpsl
arpl
xchg
push
mov
xor
push
ret
clc
cmc
dec
lahf
cmp
iret
jo
scas
sub
xchg
out
out
lock
daa
stos
mov
aas
or
jecxz
fstpl
inc
mov
add
out
mov
dec
mov
mov
loopne
sub
aam
xchg
adcl
sbbb
fstpl
xchg
sbb
adc
pop
jp
sub
jl
mov
sbb
movsb
inc
push
mov
xor
mov
sahf
xor
xchg
xchg
sahf
jne
test
inc
or
dec
and
adc
frstor
iret
out
pusha
lret
mov
je
adc
mov
and
into
scas
xlat
fdivl
aaa
inc
inc
mov
mov
pop
xchg
in
sbb
xchg
aas
in
pop
xor
or
imul
ja
dec
mov
pop
mov
cli
cs
std
sbb
sub
pop
jl
fisubrs
mov
ret
pop
ss
xlat
inc
inc
sarb
popa
jg
in
fs
movsb
add
pop
mov
pushf
lods
pop
ret
iret
jp
cmp
lea
xchg
mov
ljmp
jnp
sub
jl
push
xlat
sub
xchg
imul
inc
mov
pop
xchg
cld
sub
inc
mov
sbb
jl
xor
xchg
xor
push
in
and
lea
fisubl
jae
arpl
add
lea
stc
jmp
jg
inc
nop
mov
mov
add
jle
ja
jg
enter
jecxz
sub
dec
jmp
sti
and
sbb
xlat
push
add
sub
adc
adc
pop
fldt
test
jl
sbb
mov
jne
cmp
adc
je
adc
and
sbb
mov
jg
pop
jno
aaa
push
xor
out
sbbl
pop
int
mov
cld
push
loopne
cmp
shrl
and
lods
adc
dec
pop
cmp
test
stos
push
inc
pop
cwtl
loop
xchg
push
ljmp
or
hlt
mov
push
mov
fcomip
xchg
sahf
xor
popa
in
aas
xchg
and
adc
dec
scas
lret
mov
cmp
cs
jle
cwtl
pop
dec
xchg
pop
sbb
jl
int3
icebp
xchg
pop
or
lret
jp
daa
sbb
jg
stc
outsl
jp
mov
mov
arpl
adc
mov
mov
dec
lods
or
cmp
in
jge
movsb
add
aam
imul
mov
das
and
std
cmp
jbe
pop
inc
cltd
add
je
xchg
jp
dec
mov
lods
rclb
dec
ss
mov
lods
adc
icebp
mov
in
sbb
push
ret
mov
iret
xchg
jnp
movq
pop
addr16
sbb
jbe
dec
shrb
ffreep
and
cwtl
rclb
popf
lock
pusha
in
das
or
ss
adc
xchg
insl
mov
pop
int3
loopne
daa
push
addl
cmp
js
jg
aam
fxch
and
jg
jl
lcall
ret
sbb
loope
sub
sbb
jno
shll
mov
scas
lods
sbb
mov
mov
sbb
cmp
ficoms
lcall
ljmp
fidivrs
dec
fidivrl
test
cmp
cmc
adc
mov
mov
sbb
ds
into
mov
sbb
dec
stc
sbb
mov
insl
mov
scas
insb
mov
ret
push
lea
mov
imul
push
call
out
notl
push
out
ret
testl
inc
xchg
mov
xchg
xchg
data16
testb
cmpsb
es
xchg
xchg
push
out
divb
inc
push
cmpsb
ss
xchg
xchg
data16
testb
cmpsb
es
xchg
xchg
push
out
divb
inc
push
mov
push
xchg
data16
testb
cmpsb
es
xchg
xchg
push
out
divl
inc
aam
cmpsb
xor
pop
xchg
xchg
fs
jbe
inc
sub
dec
pushf
sub
xchg
popa
xchg
out
jle
cmp
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
add
xor
and
pop
mov
imul
xchg
movsb
test
cmc
out
aad
lds
and
push
jne
jmp
xchg
mov
test
vpmuludq
add
xor
and
push
dec
inc
pop
je
fs
xchg
push
mov
shl
mov
lds
gs
xor
dec
push
pop
inc
adc
lahf
dec
out
popf
pop
mov
pop
mov
or
sbb
mov
xor
dec
fnstcw
mov
or
dec
std
pop
xchg
xor
mov
xor
and
insl
sub
es
pop
mov
cmp
or
aad
in
adc
and
cmp
mov
mov
push
mov
les
or
outsl
xchg
inc
and
subb
out
inc
xchg
out
mov
push
das
test
in
sub
cld
cwtl
push
add
aas
jg
iret
out
adc
ror
push
popf
xor
xchg
sbb
aad
inc
xlat
xor
and
push
jne
gs
lds
movsb
int
fld
sbb
jno
addr16
xor
sub
sbb
and
repz
loope
in
push
lcall
bound
fs
je
and
sbb
push
xor
and
out
jecxz
leave
lock
loop
movsl
mov
scas
jae
add
jb
inc
adc
inc
gs
fs
xchg
mov
movsl
mov
movsb
test
cmc
in
aad
lds
and
push
jne
gs
fs
xchg
mov
movsl
mov
movsb
test
cmc
in
aad
lds
pop
sub
sti
push
daa
jne
int
repz
das
std
xchg
cmc
cmc
enter
xchg
inc
sar
inc
adc
inc
lret
cmp
scas
inc
lret
in
cmp
loopne
pop
sti
and
jl
enter
add
add
pop
add
dec
push
add
sub
outsl
push
lods
sahf
or
pop
xor
xor
pusha
push
test
adc
xchg
ret
jnp
cmp
cltd
daa
lods
sbb
cmpsb
jo
mov
lods
add
cli
pop
push
push
aaa
push
out
lahf
jecxz
sub
mov
add
out
movsl
mov
fistpl
fs
push
out
sarl
loop
jnp
mov
lret
jg
cltd
mov
push
mov
jns
dec
jge
cwtl
mov
dec
lds
cmpsl
hlt
jns
inc
iret
shll
pop
sub
xchg
lret
popf
jl
mov
ficoms
test
inc
xor
ja
sbb
incl
and
dec
mov
cld
mov
or
lods
fs
xorl
or
lock
or
js
jle
sti
or
add
test
sbb
and
stos
jae
jecxz
or
and
int
rcll
inc
adcl
test
lock
jg
jge
pushf
fstp
addb
fs
or
outsb
pop
rorb
pop
ret
dec
aaa
into
sti
add
sbb
xor
addr16
into
in
add
hlt
xchg
imul
les
mov
mov
add
mov
lods
insl
ret
mov
jecxz
idivl
push
and
jecxz
je
xor
jns
inc
dec
dec
pop
pushf
in
std
iret
pop
out
dec
adc
cltd
push
testl
cltd
lea
movsl
mov
dec
mov
sbb
and
push
mov
pop
pop
imull
fidivrs
inc
loopne
insl
push
mov
in
add
inc
mov
and
cmp
sub
dec
xor
push
call
mov
fisubs
rorl
xchg
mov
push
icebp
insl
clc
faddl
popa
jb
pushf
adc
inc
int
lods
dec
repnz
inc
cmpsb
leave
xchg
jecxz
lret
xchg
test
stos
push
sbb
xor
ret
pop
int
imul
sbb
sti
ret
dec
sarb
loop
pop
jg
pop
mov
fisubrs
movsb
inc
les
jns
rorl
mov
sar
scas
mov
jne
rolb
or
mov
push
add
jle
out
mov
push
sub
adc
mov
ja
sbb
insl
jae
shlb
mov
ljmp
and
inc
int3
mov
mov
jb
push
decl
cli
arpl
jmp
cmp
xor
js
test
push
mov
push
push
daa
cmp
add
pop
fcmovb
jmp
cli
int
pop
add
sahf
jo
mov
sbb
mov
es
sahf
inc
std
popa
aad
test
loop
shl
fldln2
je
xor
jle
adcl
cmp
dec
jecxz
repz
add
or
dec
stc
adc
mov
out
shlb
in
mov
inc
add
xor
mov
imull
fidivrs
outsl
jns
xor
dec
adc
jo
mov
cmp
shrb
mov
mov
cltd
mov
addr16
int
lock
iret
mov
inc
push
cmp
andl
mov
fs
pmaxub
push
pushf
jb
cs
xchg
addr16
cltd
jb
adc
inc
or
imul
arpl
ret
fcom
adc
mov
mov
imul
aad
cld
or
stos
fcmovnbe
xchg
mov
cmp
dec
dec
pop
jo
in
jo
xchg
sbb
icebp
jbe
cmp
jns
sarb
outsl
inc
jns
in
loope
and
in
cmp
outsl
fbstp
pop
movsb
adc
call
pop
pusha
cltd
jmp
xor
xlat
sar
roll
or
ljmp
pop
mov
cmpsl
mov
inc
out
ss
fmuls
dec
cmp
mov
sahf
mov
cmc
pop
loop
mov
jnp
inc
or
lret
inc
mov
mov
testb
dec
and
scas
xor
pop
sub
jnp
out
pop
ret
insb
mov
lock
inc
ret
jp
cmp
xchg
fwait
ds
inc
mulb
loope
adc
lods
jbe
inc
mov
xor
stos
loopne
jp
decb
and
shll
fs
sub
aas
mov
shrb
push
mov
fsubrl
add
ja
shlb
out
xchg
xlat
sahf
mov
lods
cmpsl
daa
cmp
jmp
insb
popa
or
xor
dec
addb
les
push
mov
or
repnz
aad
addr16
cwtl
sbb
mov
mov
pusha
fisttps
pop
push
cmp
mov
in
inc
imul
sbb
mov
push
mov
mov
mov
rorl
lods
mov
fwait
pop
sub
add
iret
in
adc
dec
test
into
sbb
inc
ret
pop
popf
mov
icebp
dec
mov
xchg
xor
inc
jge
pop
pop
into
pop
dec
pop
cmp
fbstp
in
int3
lods
sbb
add
subl
inc
push
mov
push
cmc
pop
mov
lods
movsb
insb
lret
pop
push
xor
mov
lea
dec
pop
xchg
fildll
out
lds
or
ret
mov
push
inc
pop
sub
sbb
pop
dec
rcll
or
mov
xor
and
gs
call
fs
inc
aas
cwtl
adc
sahf
leave
pop
or
push
aaa
and
neg
sub
sub
adc
popf
movzbl
adc
dec
mov
movsl
lds
inc
push
cli
ja
push
lcall
inc
cwtl
push
push
movsl
popa
pop
inc
jmp
hlt
enter
mov
subb
fldenv
out
sub
int3
imul
call
jmp
sets
pop
out
jl
adc
sbb
cmc
dec
inc
clc
jne
out
sti
into
fs
pop
mov
lret
mov
inc
nop
popf
stos
jge
push
popa
fdivrs
xor
mov
mov
jb
repnz
xor
cmc
xchg
int3
inc
push
push
fwait
leave
xchg
aaa
scas
sub
mov
scas
inc
push
sahf
in
out
xor
cwtl
pop
push
mov
sbb
stos
mov
movsb
fisubl
jg
cmp
cmpsl
aaa
aaa
adc
loop
jnp
aam
jne
mov
cmp
ret
xchg
add
mov
push
xor
mov
fstps
sub
and
or
rcr
jns
push
lds
pushf
xchg
mov
push
daa
in
xor
popa
pop
jbe
call
sahf
in
aad
lcall
cmp
sbb
jmp
push
xchg
mov
sub
jno
adc
lods
lret
imul
cmp
daa
sub
out
hlt
fdivs
fsubs
xlat
dec
lods
or
pop
xchg
les
sarb
or
or
out
mov
in
or
out
lock
shll
push
imul
dec
fidivrs
test
je
jno
sbb
jg
or
leave
sbb
popa
movsb
popa
inc
mov
mov
xor
inc
gs
int
dec
insl
movsb
xchg
mov
iret
mov
cli
ficomps
add
mov
and
mov
cmp
mov
jae
or
aad
mov
and
gs
hlt
lods
adc
imul
adc
jne
jne
insb
arpl
sti
pushf
jp
mov
mov
jo
jb
insb
lret
pop
mov
and
add
jb
push
test
leave
pop
call
add
fstpl
xchg
mov
decb
daa
pop
mov
sbb
adc
cmp
inc
xor
into
jb
xchg
or
je
add
fmull
adc
mov
test
mov
mov
aaa
test
adc
pop
add
loopne
add
lahf
out
adc
sub
fmuls
pusha
mov
scas
sub
pop
shr
pop
stc
cltd
jno
mov
push
xor
arpl
jb
pop
roll
pop
jo
cld
xor
xor
scas
call
lea
cmpsl
xchg
jg
popf
in
sti
es
xchg
lods
mov
fildl
popf
flds
push
sbb
add
cmp
xlat
test
mov
add
mov
or
fldenv
nop
fcmovbe
adc
mov
push
shll
loop
iret
xchg
cltd
jns
stos
cmpsb
or
sti
inc
popf
adc
mov
xorl
movsb
sbb
cld
popa
call
inc
or
mov
test
pushl
daa
mov
add
ret
jl
push
test
fcoml
lds
jp
cltd
xchg
int3
jmp
cmp
test
mov
out
ret
xchg
mov
imul
test
xchg
aam
mov
loope
mov
js
in
and
mov
jns
loop
sub
or
lcall
and
jns
mov
mov
xor
lahf
out
xor
adc
test
fs
loop
pop
idivl
dec
mov
pop
stos
and
add
push
push
inc
inc
xchg
sahf
inc
dec
mov
sbb
sub
addl
scas
jno
out
jb
mov
mulb
xchg
add
or
ss
fldt
nop
dec
jb
repnz
pop
out
test
test
insb
scas
aam
pop
stos
mov
add
call
and
push
inc
mov
cld
xchg
cmp
clc
shr
push
push
ljmp
out
xlat
push
pusha
or
fiadds
orb
pop
mov
enter
cwtl
dec
fnstcw
ret
jmp
inc
cmc
out
jo
add
idiv
loop
iret
mov
adc
mov
mov
mov
orl
les
dec
or
jbe
sbb
adc
xchg
sbbb
cmp
aaa
push
mov
jo
cmp
cmp
insb
ret
adc
dec
in
cmp
fcmovnu
dec
cwtl
out
push
xchg
mov
or
mov
outsb
shlb
call
pop
sub
outsl
jg
test
inc
popf
ret
dec
sbb
in
lret
cmpsl
pop
and
ret
or
cltd
mov
xchg
fcomi
xor
sbb
adc
mov
inc
enter
sbb
or
pop
je
mov
arpl
hlt
fimull
adc
mov
aam
jmp
cmp
inc
dec
or
cwtl
xchg
xor
fisubs
sub
in
mov
or
fidivl
xor
sub
pop
sbb
mov
jp
test
jecxz
out
shl
loopne
lea
adc
psrad
pop
mov
int3
adc
lahf
sbb
pop
or
jae
lock
sbb
sbb
out
arpl
ret
je
add
addw
mov
mov
pop
adc
pop
stc
cmp
lcall
sti
and
sahf
test
cli
loopne
insl
fistpl
mov
xor
pop
inc
cmp
push
mov
pop
leave
mov
dec
idiv
in
cltd
js
xor
xchg
iret
adc
imul
outsb
adc
adcl
imul
mov
mov
jns
jmp
flds
repz
rorl
cld
inc
jg
mov
aad
mov
xor
paddb
cwtl
xchg
mov
loopne
jb
dec
pop
popa
xor
cld
mov
sahf
mov
pop
adc
adc
lret
adc
das
jg
shlb
sahf
mov
and
mov
sub
xlat
mov
outsl
repz
lcall
mov
or
int3
cmpsb
mov
jo
mov
in
push
sbb
outsl
pop
jne
dec
inc
rclb
mov
aam
cli
and
sti
jg
bound
inc
lock
fcmovnu
jbe
inc
icebp
sub
adc
push
jp
xchg
or
loope
mov
jmp
int
loopne
push
xchg
aad
jnp
lahf
dec
jge
pop
pop
or
xchg
cmp
pop
mov
mov
mov
repz
sbb
and
jnp
xor
fistps
outsb
pusha
les
stc
mov
imul
rol
fwait
loopne
out
cltd
mov
aaa
sub
xchg
sbb
cld
insb
xlat
arpl
gs
mov
push
rorl
imulb
lahf
dec
test
test
in
test
or
ret
mov
dec
cmp
pop
mov
cld
out
dec
mov
in
cmc
sbb
ljmp
rcrl
out
dec
pop
jae
popf
inc
pushf
add
jbe
cmp
jle
cmp
xchg
shl
in
push
pop
jo
mov
mov
xchg
scas
mov
mov
mov
rcr
lcall
pop
fstpt
popf
je
out
shll
add
jle
shll
push
sub
ss
cmp
pop
cmp
cwtl
mov
popf
jbe
jbe
sbb
in
mov
dec
xchg
jne
fwait
sahf
dec
jl
adc
aam
imul
push
fxch
push
dec
ret
push
mov
jnp
pop
dec
stos
push
popl
jno
aaa
pop
or
gs
lods
push
pop
movsb
add
mov
adcb
shlb
inc
daa
adc
adc
sbb
xchg
test
cli
fldl
fildll
loope
dec
inc
xor
sarl
push
nop
xor
pop
push
pop
xor
ret
aas
dec
rol
arpl
lcall
xchg
stos
imul
cwtl
mov
or
aam
inc
jnp
sbb
inc
outsb
dec
adcb
loopne
push
jo
mov
mov
fucomi
xor
dec
call
sbb
push
lea
inc
and
push
push
or
cmpsb
mov
std
loope
aam
popf
clc
adc
or
xchg
dec
shll
lret
movsb
lock
push
cmp
mov
std
js
mov
out
cmpsb
jg
fwait
pop
jb
xchg
out
xchg
push
lahf
mov
rol
lods
dec
add
mov
fstps
test
sarl
add
adc
ret
xor
add
outsl
mov
push
xchg
mov
loop
icebp
out
icebp
cld
in
or
subb
sub
inc
push
fwait
ja
iret
jae
scas
cmpsb
xchg
shrl
enter
adc
cs
pusha
push
pop
inc
jp
dec
adc
mov
nop
and
cmpsb
fdivl
mov
xor
xor
push
pop
aam
clc
es
cwtl
daa
lahf
out
retw
xor
vmptrld
nop
mov
inc
cmp
ds
outsb
ljmp
push
xchg
xchg
fistps
mov
int
dec
mov
mov
sub
or
call
movsb
pop
inc
shll
imul
push
jnp
xchg
dec
mov
mov
push
scas
lds
or
daa
pushf
jns
scas
cltd
add
dec
pop
pop
or
mov
push
jo
sbb
incl
mov
arpl
mov
dec
dec
in
call
push
mov
das
ror
inc
cmpsb
dec
jg
cmpsl
aam
aam
insb
sub
arpl
in
in
jl
adc
es
iret
in
mov
cmpsb
lret
dec
ret
cmp
sbb
inc
adc
dec
adc
push
ss
fidivs
push
cld
sub
push
jnp
addb
push
xchg
and
popf
or
inc
add
jo
and
xchg
dec
fwait
cmp
ja
inc
dec
fnstsw
lods
push
or
inc
into
call
fcom
ss
outsl
dec
mov
sbb
movsb
int
pop
leave
or
jle
xchg
dec
subl
pop
mov
scas
iret
in
xchg
mov
mov
xchg
rorl
jge
jae
pop
daa
test
mov
aas
inc
and
call
shll
jmp
mov
cmpsl
pop
rorb
adc
jo
jmp
mov
mov
fadd
push
into
sub
and
adc
push
cli
push
shrb
xchg
fstpl
jl
dec
jo
mov
inc
daa
add
xchg
push
xchg
popf
popa
data16
jp
dec
scas
fdiv
test
sbb
mov
or
push
test
push
sub
adc
dec
daa
mov
mov
sbb
jecxz
or
leave
xor
mov
push
lret
test
xor
xor
mov
push
add
outsl
test
negl
and
int3
cltd
addr16
sub
inc
lock
mov
and
inc
mov
sti
rcll
jg
xchg
xchg
jbe
js
clc
imul
mov
fcmovbe
mov
enter
outsl
sub
jecxz
jmp
fists
xor
aaa
loopne
jle
xlat
lcall
movsl
mov
bound
and
leave
mov
pop
fldcw
mov
xchg
mov
adc
gs
pop
out
mov
mov
ljmp
mov
mov
push
sbb
hlt
in
shll
jne
out
or
insb
cwtl
cmpsl
in
inc
out
mov
push
sti
push
cmc
pop
xlat
cmp
adc
xchg
cs
fstpl
dec
xor
pop
sbb
dec
inc
lea
jo
adc
cltd
jecxz
jmp
mov
cmpsb
sbb
cmc
std
mov
and
add
loopne
loope
sub
lcall
outsb
push
and
adc
lds
mov
loopne
pop
popf
fdivr
andl
add
inc
pop
push
sti
addr16
pop
icebp
scas
daa
jg
bswap
and
mulb
icebp
clc
pop
and
dec
imul
popa
dec
into
inc
adc
sub
scas
mov
imul
adc
outsl
or
rcrl
enter
int
std
test
insb
lock
sarb
ja
inc
pop
gs
mov
adc
sti
shrl
in
stc
add
loop
enter
aam
lahf
lahf
or
pop
fcomps
sub
lods
jecxz
sahf
pop
push
aam
lods
in
xor
mov
push
inc
repz
imul
ja
and
adc
mov
push
insb
adc
nop
and
pop
je
mov
ss
cmpsb
or
inc
and
add
negb
fsubl
pushf
fxch
daa
push
jb
push
dec
out
clts
mov
movsl
mov
cmpsl
cmpsl
adc
or
addl
outsb
out
cltd
hlt
add
xor
in
les
lret
fisttpl
fdivl
out
jb
out
or
scas
xchg
pusha
lds
pusha
mov
mov
add
mov
lcall
sbb
adc
xchg
mov
mov
shll
fidivrl
mov
rcll
mov
fucomi
sbb
shll
stc
in
mov
insb
push
in
mov
push
pop
mov
pop
add
mov
or
inc
in
add
ljmp
mov
sbb
aas
and
ja
inc
cli
jno
popa
aas
jae
xor
and
orl
adc
out
jl
test
or
push
lret
stos
fbstp
out
js
fisttpl
push
ror
pop
jno
in
push
std
ljmp
mov
xchg
fisubs
inc
mov
adc
cmpsb
pusha
mov
inc
in
rcl
inc
ficoms
mov
lahf
dec
inc
mov
lret
shlb
in
pop
js
push
out
xchg
out
jne
add
mov
or
outsl
imul
mov
lahf
out
repz
pop
cs
mov
mov
in
or
shrl
fdivrl
ja
push
dec
jle
jmp
add
fwait
sub
pop
scas
push
les
dec
push
insl
fdivrs
enter
push
fidivl
push
jmp
sahf
adc
out
jnp
push
insl
pop
cmp
ret
loop
std
jb
icebp
cmp
stos
ret
outsb
hlt
adc
std
push
loop
jecxz
dec
pop
scas
sbb
jbe
mov
dec
mov
push
mov
pop
mov
aad
fdivl
movsb
jl
js
pop
adcl
inc
rcrb
jno
data16
mov
push
or
mov
xor
dec
cmp
cmp
jg
or
lock
les
js
jl
mov
arpl
add
leave
mov
xor
mov
imull
mov
repnz
aaa
es
ja
and
sbb
mov
dec
jno
clc
dec
shl
cmp
xor
cmc
imul
mov
mov
popf
xchg
xorb
bound
mov
jg
dec
jb
push
pop
sti
shrl
sti
and
lds
push
cmp
fucomip
rcrl
insl
addr16
mov
cltd
out
add
shlb
inc
mov
pop
adc
xchg
jecxz
cltd
lods
xchg
cmp
jnp
and
scas
and
push
jne
gs
fs
xchg
mov
movsl
mov
movsb
test
cmc
in
aad
lds
and
push
jne
gs
fs
xchg
mov
movsl
mov
movsb
test
cmc
in
aad
lds
and
push
jne
int
push
fs
xchg
insl
test
aam
in
cmc
in
adc
add
xor
and
push
jne
gs
aad
inc
imul
push
xchg
movsb
repnz
sub
cld
loope
icebp
dec
rcrl
sbb
outsb
call
cld
jo
push
faddl
and
adc
icebp
dec
rcrl
cmp
or
sbb
in
insl
cld
jno
inc
fcoml
push
mov
adc
call
sub
cmp
or
sbb
in
popa
cld
push
lods
cmp
inc
lods
jae
jle
lods
jl
add
jo
bound
jle
mov
lea
fldcw
mov
cmp
icebp
jnp
enter
shll
inc
xchg
outsb
cltd
sahf
add
push
inc
inc
outsl
test
fs
inc
repnz
lcall
lods
jno
sub
scas
adc
push
stos
mov
mov
sub
adc
cld
cmpl
fmull
mov
xchg
add
ds
movsl
les
les
sbb
test
fsubr
jmp
aam
or
xchg
xchg
push
jl
cmp
pop
int3
sub
adc
sbb
adc
sub
mov
or
xor
jl
dec
fcomps
mov
sbb
in
popa
cld
imul
cmp
sbb
cmp
outsl
mov
jns
test
dec
jno
inc
mov
xor
outsb
call
cwtl
cmp
pop
decl
xchg
adc
and
push
out
iret
xor
andw
push
icebp
das
movsl
jl
insl
xchg
cmp
or
sbb
in
popa
cld
jno
inc
fcoml
and
insb
loope
icebp
dec
rcrl
cmp
or
sbb
in
popa
cld
jno
inc
fcoml
and
insb
loope
loop
inc
push
rcrl
aaa
das
jle
call
lea
addl
xchg
dec
cmp
movsb
pop
cmp
and
mov
js
repnz
push
fistpl
dec
lea
mov
jns
movsb
push
lahf
testl
xor
rorl
push
int
mov
adc
stc
push
loop
stc
cmp
add
push
jns
cmp
lahf
jbe,pn
repz
or
repnz
sarl
int
das
enter
aad
in
out
aam
or
out
add
push
movsb
mull
jae
jecxz
not
js
les
insb
les
mov
clc
int3
mov
call
xchg
xchg
test
push
sub
addl
push
int
push
fs
push
jmp
push
inc
repz
xor
jle
lret
push
arpl
inc
sub
movsl
repnz
add
cmpsl
fwait
movsb
adc
fisubl
mov
inc
bound
push
ret
test
cmp
push
and
cmp
sbb
add
inc
fdivs
sub
movsb
inc
and
orb
hlt
movsb
push
cmpsb
jne
lods
sub
cld
jecxz
lcall
xor
push
adc
movsl
shl
inc
notl
xor
pop
add
in
add
mov
mov
adc
popa
jmp
mov
mov
xor
pushf
test
cmp
out
movsb
into
jmp
cmp
mov
pop
pop
adc
pop
cmc
pop
imulb
xchg
vmovhps
mov
jb
dec
out
push
sarb
jne
inc
mov
push
stos
inc
popa
sar
mov
fmulp
mov
push
pushl
push
cld
push
add
aaa
pop
xor
into
sbb
xchg
sarb
mov
in
clc
push
jns
int
pop
imul
mov
adc
loope
fmuls
rcl
ret
pop
jne
cwtl
stos
mov
fisubrs
xchg
push
int3
les
ds
xor
push
jbe
call
cltd
xchg
fcoms
jae
out
lods
and
cmpsl
xorb
ss
gs
mov
add
sub
scas
mov
cltd
dec
jbe
loopne
xor
inc
rcrl
lods
scas
jnp
push
xchg
gs
lret
sub
inc
sub
stos
lds
loope
in
icebp
pop
mov
leave
xchg
jae
les
scas
roll
or
cmpsb
lret
daa
xor
stc
inc
cmp
shll
iret
push
ja
lahf
sub
fsubl
test
pop
mov
dec
aaa
mov
jecxz
push
out
testb
movsl
cs
test
sti
test
cmp
sbb
vandpd
popf
mov
in
jns
mov
pushf
fisttps
js
and
pop
cltd
and
jne
dec
out
loope
push
int3
jnp
ja
ljmp
ljmp
movsl
xchg
sahf
jae
sub
add
out
add
mov
push
in
hlt
sbb
push
sbb
ret
jae
cmpsl
xchg
pop
mov
loope
mov
pushf
insl
xchg
xor
cli
retw
outsb
iret
sbb
std
hlt
adc
and
sbb
pop
daa
jns
mov
icebp
pop
lds
outsb
aas
inc
mov
jmp
mov
stc
jns
pusha
lds
mov
addr16
mov
push
lcall
fsubr
push
in
scas
rcl
jp
xchg
cmpb
outsl
sti
pop
xchg
inc
add
pop
pandn
rcrl
dec
shl
push
pop
mov
jl
dec
or
cld
cmc
cltd
leave
enter
sbb
mov
outsb
adc
mov
ds
sub
xchg
adc
xor
jl
sbb
fs
loopne
dec
inc
push
mov
popf
dec
cltd
addr16
push
adc
popf
pop
push
lock
xor
xchg
jo
rorb
jb
or
or
ss
pop
mov
mov
jp
xlat
add
insb
mov
add
or
mov
testl
mov
add
shlb
mov
mov
lock
iret
inc
jmp
jmp
push
mov
jae
sub
dec
out
stos
sbb
xchg
lret
mov
push
bt
jbe
cli
outsl
cmp
sbb
push
jns
call
pop
mov
fadd
or
and
xor
inc
jg
jb
sbb
dec
cmp
add
je
iretw
add
mov
dec
adc
push
jne
sub
dec
mov
push
xchg
pop
jbe
sbb
aam
mull
pop
in
test
mov
pop
int
int
mov
cmp
mov
sahf
pop
cmp
adc
dec
bound
inc
xor
sub
adc
pop
mov
fimull
push
popf
inc
sbb
jle
push
mov
pop
cmpsb
push
xchg
pop
repnz
cmp
and
inc
mov
pushf
push
pop
iret
mov
pushf
jmp
pop
and
std
sbb
sbb
inc
jnp
test
add
pusha
inc
mov
movsl
int3
sbb
outsl
mov
cld
xor
push
mov
mov
cmpsl
sub
inc
lret
pushw
daa
mov
decl
out
cmc
sbb
lcall
out
push
lods
mov
test
rcrl
ret
push
je
test
loopne
jo
iret
sub
pop
daa
jae
dec
pop
pop
mov
jl
xor
pop
push
inc
mov
outsb
out
push
clc
jns
shrb
ret
cmp
insb
dec
loop
pusha
mov
rol
adc
faddl
xlat
mov
lahf
lods
out
mov
cmc
cmp
lret
les
in
cmp
fs
or
xchg
jmp
lods
and
inc
xor
ja
adc
fistpl
lahf
or
xchg
shl
stos
test
ss
pop
inc
sub
mov
decl
adc
push
loopne
adc
inc
out
cmp
mulps
mov
adc
out
pop
test
movl
sub
sti
imul
push
dec
xchg
xchg
fmul
push
rcr
ret
repnz
cmpl
push
sbb
into
and
pop
and
jle
xor
push
push
sti
std
mov
or
test
add
mov
sbb
dec
mov
ficomps
cmp
mov
gs
xor
jg
xchg
xor
bound
dec
and
call
mov
sarl
pusha
dec
mov
repnz
xchg
test
out
pop
or
int
int
sbb
repz
out
or
lret
fidivl
mov
stos
mov
shll
lret
sub
jno
loopne
popa
test
andl
inc
add
mov
lahf
push
and
lcall
aaa
es
inc
repnz
push
xor
popf
in
sbb
or
call
cmp
scas
push
iret
stos
aad
mov
mov
fisubs
rorb
data16
push
lds
addb
pop
pop
dec
push
mov
pop
mov
pushf
sub
xchg
cmpsl
dec
mov
aaa
xchg
in
cwtl
push
xchg
ret
or
shlb
ret
cmp
sti
push
aas
or
in
pop
das
enter
push
sbb
shlb
and
sbb
xor
push
fsubs
jmp
stos
fists
jb
je
mov
add
cmp
push
enter
mov
repnz
sub
ret
repnz
sti
fdivs
mov
pop
in
mov
lock
add
pusha
pop
cld
push
movsb
ljmp
pop
iret
ret
mov
add
pop
xor
mov
pop
push
and
aam
mov
call
cmp
lock
add
out
sbb
sahf
out
mov
pop
into
data16
jo
shrb
stc
dec
cmp
adcl
leave
add
ljmp
xor
mov
inc
xor
lar
sub
xchg
aam
cli
out
les
pusha
fstpt
push
inc
int
scas
outsl
imul
pop
push
cld
in
pusha
add
jne
push
jne
mov
or
mov
mov
fdivrs
je
out
sbb
in
fs
push
inc
pop
mov
jo
push
mov
mov
movsl
inc
push
inc
sub
ficompl
jo
hlt
mov
and
mov
clc
mov
push
push
jmp
add
and
xor
scas
jno
jae
ret
aad
mov
xor
popf
pop
adc
test
xchg
stos
dec
inc
popf
sub
or
test
or
inc
or
jb
test
add
jle
lods
mov
push
sbb
add
add
dec
mov
pop
and
sahf
inc
fdiv
mov
mov
mov
mov
mov
sbb
in
pop
das
xchg
movaps
pop
jno
rolb
push
mov
and
popa
fsubl
stc
xlat
cmp
leave
xor
mov
test
ret
loopne
orl
xchg
or
mov
aad
push
inc
mov
mov
xchg
and
dec
mov
imul
mov
mov
jmp
dec
mov
and
mov
xchg
imulb
xchg
jecxz
jmp
sbb
call
fldt
push
cmpb
testl
xor
imul
std
xchg
and
xchg
mov
out
les
sti
mov
test
push
push
mov
inc
pop
pop
ficoml
cmp
xor
leave
in
push
mov
lcall
pop
je
push
popf
cmp
jb
ret
mov
or
pop
jne
repnz
adc
cmp
or
cs
cltd
xchg
sbb
adc
push
daa
pop
push
sub
movsl
sub
lahf
push
push
out
test
pop
cwtl
inc
rol
pop
mov
pop
in
jnp
data16
jg
push
pop
aaa
sti
pop
sbb
inc
lds
insl
cltd
push
add
shrl
inc
push
cli
scas
enter
popa
xor
jbe
call
jp
pop
out
inc
lods
jle
dec
mov
push
sbb
lea
push
test
dec
push
and
jecxz
mov
in
shll
out
dec
jge
out
or
ficoml
or
pop
loop
cmp
push
lds
adc
dec
jp
lea
mov
push
cli
aas
sbb
push
call
popf
mov
movsb
ficoml
inc
push
aad
mov
push
or
loopne
out
xchg
fdivrs
mov
jecxz
sbb
andl
test
jecxz
iret
aas
int
sbb
push
xchg
mov
subl
aaa
shrl
add
cld
pusha
int3
pop
in
scas
popf
lahf
xor
inc
in
jmp
and
outsl
inc
outsb
xchg
fisttpl
pop
repz
jne
xchg
mov
adc
or
adc
and
cwtl
cmp
cmp
sbb
gs
movsb
push
leave
aad
mov
mov
xchg
cmc
mov
xor
ret
aaa
repnz
sti
push
inc
loopne
adc
fdivrs
orl
es
cmp
sub
push
gs
jbe
dec
mov
inc
ja
pop
movsl
inc
orl
inc
rol
stos
orb
inc
div
iret
lock
mov
xorl
xchg
andb
dec
fprem
int3
pop
dec
jle
lock
sahf
fldcw
jno
dec
dec
scas
dec
cmp
add
and
dec
cltd
mov
push
int3
jbe
pusha
mov
ljmp
cmp
dec
in
in
mov
push
pop
repz
into
mov
iret
add
mov
dec
push
mov
mov
add
pop
stc
push
lock
push
out
hlt
sbb
push
or
adc
out
aaa
into
test
push
inc
xor
push
pushaw
shll
pop
sub
mov
jae
xor
xchg
add
hlt
addl
fs
addb
fiadds
lret
mov
adc
jecxz
jae
or
lods
mov
int3
jmp
mov
pop
cmc
in
pop
pop
sti
out
popa
sbb
ret
rclb
sbb
sub
fildll
xchg
lods
mov
test
ss
dec
push
out
in
test
and
lods
push
gs
jl
je
mov
pop
movsb
outsb
xchg
loope
and
pop
and
mov
fistl
dec
out
call
mov
int3
cs
cs
roll
ret
jno
adc
daa
call
mov
aaa
fdivrs
push
or
xor
add
pop
imul
insl
xchg
inc
sub
iret
loopne
int
jmp
lcall
iret
mov
jg
add
pop
rcrb
mov
loop
enter
loopne
inc
stc
adc
mov
pushf
adc
pop
stc
repnz
sbb
stc
aas
ljmp
sub
je
mov
dec
cmp
cli
rorb
cmp
xchg
push
push
popa
inc
outsb
shl
or
inc
or
repnz
in
into
sbb
and
xor
sarb
xchg
and
out
pop
push
cmp
xchg
pop
xchg
pop
jl
cmp
rcrb
push
rol
sti
or
or
sti
imul
or
jae
mov
mov
mov
out
movl
mov
mov
sub
push
insb
sahf
icebp
jp
xor
nop
cmp
push
fs
insl
dec
xchg
jecxz
push
les
ljmp
push
jae
jb
inc
shlb
dec
inc
jle
inc
xor
mov
xchg
stos
loop
xchg
outsl
xchg
imul
mov
mov
nop
pusha
xchg
dec
mov
testl
dec
addr16
xchg
adcl
daa
pop
xorl
jne
loope
or
mov
scas
pop
stc
cmp
sbb
push
addr16
loopne
stos
cmc
out
jp
xor
push
inc
cwtl
jecxz
aaa
sahf
push
stc
insl
mov
and
inc
pop
or
mov
add
jns
add
mov
arpl
cmc
adc
ror
sahf
push
jae
hlt
outsb
jns
rorl
xchg
test
jl
cld
call
arpl
inc
fildll
int3
adc
lcall
adc
dec
or
pushf
dec
inc
xchg
std
inc
add
mov
or
pop
or
test
sub
and
xchg
popa
and
jg
dec
pop
mov
fcoml
mov
test
hlt
rorb
pop
jg
mov
push
fimuls
daa
popa
and
out
pop
lock
xor
cwtl
pop
xor
inc
jns
push
andb
jge
dec
jmp
adc
sbb
fildll
lsl
add
mov
aaa
jp
or
fsubl
inc
mov
int
daa
cmp
mov
lea
add
inc
out
dec
cmp
mov
dec
lock
xor
notb
imul
inc
fisubrs
das
cmpsl
pop
pop
clc
jno
lds
enter
bound
subb
xchg
data16
repz
popa
inc
out
adc
add
pushf
ficoms
jae
xorl
mov
push
sub
mov
movsl
in
push
jle
imull
das
dec
sub
mov
jl
pop
sbb
xchg
loopne
dec
in
fldt
xor
xlat
ret
mov
or
mov
fldcw
sbb
or
xor
mov
sub
cltd
pop
adc
add
jnp
outsb
test
mov
push
scas
mov
ljmp
in
movsl
adc
xchg
lahf
mov
lcall
shlb
fcompl
lret
cmpsb
pushf
pop
mov
rcll
add
jno
sub
pushf
xchg
imul
mov
pop
sarb
cmp
out
add
pop
gs
std
les
add
mov
rcrb
mov
pop
and
and
mov
mov
mov
aam
push
xor
xor
and
mov
xor
in
jo
mov
fcom
pop
scas
js
jb
or
inc
pop
icebp
inc
and
jne
cld
jecxz
dec
hlt
push
imul
jae
push
imul
mov
fsts
insl
cld
rcl
pop
je
je
in
sbb
mov
jg
lcall
sti
xor
cld
pop
fistl
test
mov
inc
inc
or
adc
and
nop
loop
icebp
shlb
push
adc
adc
subl
test
clc
imul
xlat
adc
not
xchg
cmp
idiv
pop
sarl
jns
mov
xor
dec
sub
adc
push
cmp
lods
cmp
ljmp
cwtl
icebp
mov
dec
in
or
mov
push
inc
inc
adc
imul
leave
out
pusha
sbb
pop
lret
cmpsb
stos
mov
jmp
xor
xor
push
push
sub
cmpsl
js
scas
in
mov
fstpt
xchg
test
push
or
lret
in
jmp
dec
mov
mov
ljmp
int
leave
xor
or
jo
cld
enter
inc
xchg
push
lds
xor
xor
fdivr
and
in
andb
inc
outsl
movb
popa
push
movsl
fs
lods
and
out
lods
stos
adc
mov
adc
cli
xchg
adcb
mov
push
dec
pusha
fwait
gs
dec
inc
dec
hlt
fisubrl
pop
jb
xor
test
cwtl
fiadds
adc
rorb
jae
sub
add
lret
push
in
icebp
push
fistl
push
xchg
jb
push
rep
mov
hlt
adc
ja
xchg
and
pop
sub
movsb
aam
imul
aad
mov
inc
add
dec
jecxz
fwait
cmpsb
cltd
mov
cs
xchg
xor
int3
sbb
xor
mov
das
jmp
bound
jb
test
jmp
cmp
int3
xchg
jecxz
add
aad
jmp
test
imul
xchg
stos
ret
sbb
sbb
int
cmp
mov
or
dec
rcrb
cltd
inc
and
scas
add
gs
dec
cmpb
icebp
into
xor
or
ds
and
and
mov
adcl
mov
jge
in
into
jae
cmp
loope
add
mov
xor
out
dec
aaa
loopne
jbe
insl
xchg
cmpl
clc
mov
cwtl
aaa
bndldx
or
sbbb
or
lods
adc
adcb
mov
inc
fistl
xchg
rolb
cltd
mov
pop
fbstp
mov
inc
adc
aad
add
push
or
lret
xor
int
cmp
mov
push
inc
push
xor
jns
addb
dec
bound
cltd
frstor
out
mov
cmp
es
movsb
out
jmp
xor
stos
mov
cmp
jno
lss
lods
add
repnz
popa
imul
in
movsb
daa
push
cs
sbb
sbb
movsl
jge
mov
pop
cmp
or
xlat
fsubp
rorb
and
ljmp
jmp
mov
stc
push
pop
or
jne
push
adc
filds
pop
add
rol
rcr
dec
cmpb
pop
cmp
inc
sarb
icebp
mov
aad
out
dec
imul
lods
negl
pop
push
xlat
jnp
add
add
neg
pop
les
into
ret
or
mov
adc
jge
cmp
jae
dec
lock
jle
rorb
call
aad
push
sub
clc
or
lret
mov
fcoml
lods
ret
loope
ds
push
movsl
fs
aas
cltd
cmp
insl
jae
out
jb
sahf
mov
add
mov
inc
and
clc
sbb
push
adc
push
push
outsl
fwait
imul
pushl
repnz
push
xchg
adc
push
adc
ja
ja
sahf
push
pop
mov
push
int
mov
movsl
pop
out
ljmp
out
fsubr
in
aaa
adc
les
adc
repnz
xchg
push
fdivrl
add
mov
pop
jg
and
adc
xchg
sub
jmp
cmp
dec
movsl
ljmp
xor
push
in
and
add
and
pop
or
jmp
and
test
stos
mov
outsl
lods
sti
roll
or
andb
mov
adc
cwtl
lret
aaa
inc
xor
in
jno
movsl
push
mov
jp
pop
sbb
jo,pn
mov
jge
adcb
lahf
repz
xor
stos
daa
jmp
sbb
in
pop
shrl
cmp
or
sbb
in
popa
cld
jno
inc
fcoml
and
insb
loope
icebp
dec
rcrl
cmp
or
sbb
in
popa
cld
jno
inc
fcoml
and
insb
loope
icebp
dec
rcrl
cmp
or
sbb
in
popa
cld
jno
inc
fcoml
and
insl
in
cmc
dec
lds
mov
sbb
in
popa
cld
fsubl
fldt
arpl
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
inc
adc
mov
call
test
add
pop
add
add
add
add
add
add
add
add
add
add
lods
add
mov
add
add
add
mov
inc
add
mov
pop
add
xchg
add
xchg
add
add
add
add
add
add
push
ja
testb
add
add
xchg
add
mov
add
dec
add
add
add
add
add
ljmp
add
add
add
add
add
js
data16
adc
add
add
add
add
xchg
add
add
roll
add
add
xchg
add
add
add
add
add
inc
add
inc
add
add
add
add
add
data16
add
add
inc
add
add
add
add
jns
popa
add
add
add
add
add
add
add
add
add
cmp
jno
sbb
pushf
add
add
add
insl
add
add
add
pop
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
mov
add
add
dec
add
pop
add
enter
mov
add
add
add
add
and
mov
mov
add
jae
outsb
add
add
add
xchg
add
add
push
add
add
add
add
add
add
add
in
add
add
add
add
add
pusha
add
push
dec
add
jle
ret
add
add
xchg
add
or
or
clc
add
inc
add
daa
add
add
and
scas
add
add
fiaddl
loop
or
fwait
add
add
add
data16
add
add
adc
rolb
mov
loop
add
add
pop
add
mov
add
jnp
xchg
add
add
add
add
add
add
add
add
mov
mov
pop
add
add
add
add
add
sbb
add
add
imul
xchg
add
add
add
enter
roll
add
mov
add
add
add
add
mov
add
xor
add
add
jle
flds
aam
xor
dec
add
ljmp
add
in
add
pusha
add
pop
add
add
add
add
or
sbb
test
lea
pop
add
xchg
add
add
add
add
mov
add
add
cmp
insb
add
add
mov
cmp
insb
add
add
jns
mov
add
xchg
add
data16
add
add
add
add
add
add
data16
sub
fiaddl
cmp
js
mov
add
add
add
aam
ljmp
add
add
data16
add
add
xchg
add
add
add
add
add
add
cltd
andb
mov
fldl
cmp
inc
inc
push
ret
add
jecxz
push
jb
out
inc
cwtl
in
lea
and
ret
test
ja
or
xor
push
adc
xor
lods
cli
push
sbb
jge
jne
mov
sub
xor
cli
in
sub
pop
adc
pop
rcrl
lret
pop
data16
call
shll
pushl
ret
mov
sub
xlat
fstps
stc
dec
stos
jle
fwait
lods
lret
js
jne
mov
repz
pop
or
jnp
adc
lret
sbbb
mov
test
aad
fisttpll
mov
jle
lcall
decb
mov
in
mov
js
leave
aad
sti
and
std
mov
mov
loopne
sub
or
push
jl
cwtl
xor
jnp
pop
push
movsl
fisubrl
adc
aaa
sbb
mov
repnz
and
das
sbb
in
mov
in
addr16
inc
movsb
push
pusha
mov
xchg
jge
addr16
cmp
add
mov
movsl
sub
in
pop
aaa
jecxz
add
jno
out
pop
inc
insl
sbb
mov
push
mov
sub
sub
dec
fiadds
sbb
fwait
imul
xchg
inc
pop
pop
lea
mov
into
adc
ljmp
dec
setae
xor
cli
and
xchg
dec
and
mov
out
lahf
lods
pop
mov
adc
les
inc
jnp
cmpsl
sbbl
inc
jl
sub
scas
fstpl
inc
inc
mov
in
xchg
ret
loop
pop
scas
add
mov
lahf
sub
or
sub
rorb
enter
xchg
dec
sub
push
lahf
push
fildll
fwait
push
or
lods
cltd
sub
xlat
es
repnz
jo
add
mov
xor
or
stc
ss
mov
imul
and
stos
cmc
sub
repz
hlt
pop
dec
push
sti
jb
test
adcb
or
clc
pop
int3
out
mov
popa
inc
adc
aam
arpl
sub
imul
and
filds
adc
xor
int3
cmp
pop
mov
in
dec
fmulp
or
xor
shl
sti
jmp
std
sub
cmp
ja
xlat
xor
imul
mov
cmp
mov
pop
cs
mov
jnp
lds
mov
scas
xchg
loopne
not
mov
mov
cmc
cmc
scas
pmaddwd
mov
lcall
iret
out
movsb
pop
cmc
aad
mov
push
loop
mov
and
lds
pushf
imul
repnz
cmpsb
lods
and
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
