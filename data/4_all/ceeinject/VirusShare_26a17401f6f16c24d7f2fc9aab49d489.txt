call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
mov
repz
jecxz
sub
out
cmpsl
mov
inc
addr16
daa
adc
pop
xor
and
shl
ret
div
xlat
jecxz
xchg
mov
xchg
ja
and
arpl
popa
add
xor
and
lret
fucomip
iret
sti
mov
stos
cmpb
or
push
or
je
jle
xchg
lahf
divl
scas
pop
dec
inc
mov
outsb
dec
pushf
mov
pusha
push
jmp
mov
int3
sbb
sarl
cli
mov
jecxz
jo
dec
pop
pop
scas
lods
mov
fwait
jae
pop
jmp
lcall
rclb
xchg
orb
pop
sbb
mov
aaa
out
daa
or
mov
xchg
mov
es
mov
mov
mov
int3
xor
push
or
or
xchg
notl
notb
scas
mov
adc
adc
sub
mov
or
sbb
cmp
addr16
repz
cmp
pushf
out
daa
jecxz
xor
and
ljmp
xchg
outsl
pop
pop
push
jp
or
sbb
sub
and
mov
ret
xchg
test
cli
adc
inc
xor
jbe
add
jb
out
imull
rcll
rclb
add
and
arpl
push
pop
push
mov
xchg
xlat
cmpsb
fbld
xchg
mov
inc
jae
arpl
adc
add
xor
and
shl
ret
repz
jecxz
xchg
mov
xchg
ja
inc
jae
arpl
adc
add
xor
and
shll
sahf
je
loope
sbb
mov
mov
loop
rorb
mov
shl
sbb
cmp
pop
xchg
test
sub
imul
daa
mov
sub
jb
add
lret
push
pop
xor
mov
ljmp
icebp
jge
aaa
or
adc
dec
in
pmaxub
scas
pop
xor
fsubrl
pop
repz
push
clc
mov
ss
nop
xchg
push
stos
push
xor
mov
push
mov
stos
add
jae
adc
jg
jb
push
xchg
into
mov
push
pop
inc
mov
push
mov
push
xor
cmc
fldt
pusha
cli
lock
in
insl
dec
mov
pusha
mov
mov
lock
js
or
pop
popf
add
adc
or
and
insb
shll
vmulsd
dec
outsl
cwtl
xchg
cli
cmp
fcoms
mov
pop
call
fldenv
mov
pop
lahf
ds
and
test
insl
rcrb
call
jl
ret
aas
icebp
inc
or
and
jae
cmp
lahf
mov
fwait
mov
sbb
fsubrs
xlat
push
cmpsb
jle
das
lahf
mov
stc
jle
sarl
out
push
pop
btc
icebp
pop
mov
and
fbld
fwait
aas
push
jns
jo
fistps
es
stos
hlt
cmpsb
sahf
outsb
imul
sub
mov
scas
cmp
mov
outsb
xor
xchg
xchg
pop
push
stos
sbb
inc
dec
jns
rolb
mov
test
sbb
enter
inc
pushf
dec
lds
shl
in
in
push
sbb
sub
adc
inc
and
cmc
dec
xor
aas
fidivrl
sti
add
mov
sahf
lea
scas
popa
inc
cli
out
and
or
jno
pop
pop
sub
or
xchg
cld
pop
add
add
enter
fwait
push
incb
dec
dec
dec
xlat
lock
sbb
jecxz
xchg
cmp
adc
lcall
pop
mov
test
popa
inc
mov
sti
mov
sbb
xlat
clc
xchg
outsw
insb
arpl
bound
cmp
mov
sub
push
lcall
mul
test
fadds
out
jns
lods
imul
xor
loop
jp
inc
je
cmp
cmp
ret
sub
dec
jg
fcmovb
sub
mov
mov
fs
adc
stc
dec
stos
pop
iret
int
adc
sbb
jns
adc
ljmp
adc
fimull
xor
add
imul
xor
adcb
add
in
lcall
fdivrl
outsl
decb
aad
mov
rcll
adc
outsl
sbb
or
push
addb
cli
jmp
data16
fldenv
xchg
or
push
out
sub
out
ret
mov
lahf
iret
ret
push
jle
test
mov
dec
mov
sub
rorb
aam
add
push
inc
and
fbstp
cmp
popw
divl
test
lcall
mov
fisttpll
enter
pop
sbb
cmp
adc
sbb
lock
adc
push
add
jg
mov
cmpsb
scas
pop
enter
cld
xor
xchg
cmp
cwtl
push
add
divl
in
movsl
in
out
pop
pop
js
adc
mov
cld
dec
adcb
mov
sub
dec
jecxz
and
pop
xchg
push
aaa
push
sbb
xchg
jno
cmp
jbe
ja
push
mov
outsl
or
cmp
xor
xchg
out
adc
and
lcall
cmp
lock
xchg
push
stc
scas
iret
out
mov
xchg
sbb
movsl
jae
and
loope
pop
pop
dec
aaa
jae
out
aad
jb
sub
mov
inc
test
dec
jns
and
add
orb
mov
ret
cmp
dec
pop
adc
adc
and
xor
ds
fwait
popa
arpl
sub
iret
push
aad
shr
dec
pop
and
adc
cmpsb
push
xchg
sbb
ret
mov
push
aas
add
leave
in
movsb
sbb
sub
shlb
std
lock
sahf
addr16
mov
loopne
push
gs
jecxz
or
in
rep
mov
push
shlb
jne
jns
adc
mov
fcmovnbe
arpl
mov
mov
dec
inc
dec
lcall
mov
mov
mov
test
repnz
and
flds
jno
clc
aaa
sbb
mov
cli
sbb
pop
and
pushf
push
or
aas
popf
adcb
pop
imul
aas
add
aad
push
adc
and
add
xchg
sbb
mov
inc
lods
cmp
push
test
pop
push
dec
push
inc
add
cltd
xor
loop
cmpb
sbb
push
lea
push
pop
xchg
pop
lret
mov
pop
lds
mov
leave
mov
mov
dec
aam
xor
inc
fcmove
enter
and
int
dec
clc
mov
mov
jp
clc
mov
cmp
lahf
push
adc
or
daa
and
mov
sub
frstor
call
stc
jl
out
xchg
and
test
jmp
negl
or
mov
sub
dec
adc
inc
cltd
add
scas
mov
aaa
fld
mov
frstor
dec
out
psllw
and
and
jle
ffree
popf
push
mov
outsl
test
xchg
or
cmpsl
and
cmp
xchg
xchg
pop
sub
mov
fisubl
popf
mov
inc
or
push
stos
xor
lret
mull
add
mov
or
outsl
pusha
dec
cmp
push
or
leave
sarb
cli
insb
cwtl
inc
subb
sarl
addr16
insb
gs
adc
pop
mov
cmp
inc
repz
xlat
adcl
cmp
push
cmp
push
pop
pop
inc
push
pop
sbb
pop
ret
out
sti
lods
sub
inc
icebp
ficompl
jge
mov
cwtl
cmc
inc
cmp
mov
fs
push
sarb
and
ss
xor
lret
clc
andl
or
mov
xor
adc
icebp
fadds
xchg
repz
sub
outsb
inc
cmp
jg
icebp
jl
cmp
inc
add
push
pop
or
pop
adc
adc
xchg
add
sbb
xor
into
jb
add
sbb
mov
movsl
pop
add
push
ja
pop
lods
pop
mov
in
sub
in
in
pop
ljmp
inc
ja
jg
fstl
frstor
inc
rol
fiaddl
sbb
out
jp
xor
sarb
dec
shl
sti
data16
ret
sti
sbb
pusha
aas
sub
in
gs
cmp
pop
in
cmp
add
out
sub
or
stos
mov
pop
pop
insb
sbb
out
cltd
mov
daa
iret
mov
std
lods
lcall
leave
jno
mov
dec
in
adc
lea
xor
cmp
std
inc
leave
add
leave
les
mulb
aad
mov
pop
imul
or
mov
in
fwait
mov
mov
xor
push
or
clc
or
and
pop
xor
mov
adc
xor
inc
mov
scas
clc
jmp
sbb
and
xchg
sbb
cmpsb
rclb
mov
jmp
mov
sahf
sbb
mov
inc
add
adc
shrb
filds
ja
mov
xchg
xlat
popa
pop
sbb
ret
xchg
dec
int
mov
jge
xor
mov
andl
or
add
jmp
ja
pop
xor
jmp
cld
sbb
jns
ds
scas
xor
xchg
jg
pop
push
push
lods
cli
adc
and
xchg
mov
mov
rol
movsl
inc
mov
inc
lret
psubusw
dec
sbb
jecxz
mov
stos
aaa
nop
xor
nop
pop
idivb
fwait
add
cmp
fnclex
add
and
ret
fildl
std
outsl
jne
movsb
cmp
pop
xchg
add
mov
mov
mov
jge
outsl
popf
sub
sbbb
sbb
adc
out
daa
test
test
add
adc
mov
pop
arpl
dec
dec
inc
loope
sbb
call
pop
inc
fwait
or
jae
data16
lcall
loop
xor
out
mov
xor
jmp
mov
popa
xchg
mov
das
push
jb
adc
jnp
out
imul
js
std
rcrb
imul
in
and
xchg
pushf
into
adc
inc
jnp
pop
adc
adc
daa
dec
xorl
movl
ret
or
std
cmp
xchg
sbb
adc
adc
or
lods
fimull
pop
cltd
xor
inc
loop
cmpsl
rclb
bound
imul
imul
or
lahf
sub
in
ret
jmp
sti
sub
mov
xchg
or
insb
adc
xor
sbb
insl
lods
packsswb
sub
xlat
xchg
test
or
xor
mov
jge
sub
dec
jmp
push
sbb
loope
outsb
out
adc
pop
test
lret
pop
jp
pop
pushf
js
pushf
inc
shll
adcb
jb
lahf
test
data16
cmp
subb
fs
cmp
jl
ja
sub
mov
in
mov
jbe
popf
cld
jecxz
in
out
push
mov
jb
dec
test
xor
and
mov
arpl
sbb
fbstp
out
jno
sbbl
cwtl
mov
movb
lret
mov
in
jmp
inc
and
test
ds
add
xchg
ds
add
aad
xchg
popa
popf
jl
mov
pop
inc
mov
arpl
cld
sar
je
stc
mov
mov
dec
xchg
xchg
out
jmp
dec
sub
jl
and
or
lods
mov
jle
fisttpl
sahf
inc
cmp
int
std
out
cmpsl
inc
or
dec
mov
rclb
push
mov
ja
inc
icebp
pop
xor
xor
add
mov
jae
pop
stos
adc
and
out
sbb
call
inc
push
mov
enter
fsubrs
add
cmp
sbb
jb
lea
add
out
push
dec
fsts
jmp
jo
loop
mov
imul
into
adc
add
popa
jecxz
jo
cmpsl
push
and
sub
sub
mov
push
fcomps
outsb
inc
push
jno
jmp
clc
mov
dec
push
sarb
out
pushf
adc
stc
xor
cmp
adc
push
addr16
sub
mov
jl
xor
stos
les
sbb
push
loope
and
mov
iret
ss
jbe
add
leave
fs
and
or
enter
or
rorb
xor
test
push
pushl
or
dec
cmp
push
jge
js
sub
pop
std
and
jmp
pop
mov
inc
repnz
inc
xchg
push
int3
adc
bound
pop
repz
faddl
sarl
push
outsb
mov
cmp
pop
cltd
lret
sub
int
fiadds
negl
repz
test
sbb
xchg
int
mov
bound
inc
aas
push
pushw
xchg
mov
cmp
mov
or
cmpsl
addr16
xchg
in
xor
inc
bound
ret
inc
in
loopne
out
or
cmp
fs
push
xchg
daa
pop
out
fstp
mov
xchg
rolb
xor
imul
andb
mov
imull
and
insl
mov
push
or
push
pop
xchg
decb
cmp
js,pt
mov
sub
sub
add
mov
ds
xchg
xchg
arpl
and
ljmp
and
sub
jl
sbb
and
mov
cld
pop
lods
mov
fdivrl
stc
out
cltd
sub
dec
insb
push
in
in
loopne
inc
iret
dec
and
jp
mov
cmp
aam
or
clc
imul
sahf
jae
pusha
cmc
push
add
test
inc
pop
insl
sbb
call
jle
je
xchg
mov
lods
dec
dec
les
loope
fstpt
ljmp
inc
outsl
outsl
pop
popf
jmp
jbe
out
xor
cmc
sahf
mov
stos
bound
insb
adcb
pop
push
mov
pop
fcompl
ds
adc
fucom
cmp
add
es
repz
iret
mov
xchg
xor
lret
push
mov
imul
out
jnp
and
mov
lds
inc
xchg
jne
sbb
mov
cmpsb
insb
sbb
in
adc
mov
or
pop
aaa
andb
pop
or
sarb
lds
mov
enter
or
lea
pop
or
es
je
popa
adc
cwtl
mov
add
or
pop
mov
xchg
incb
xorl
jle
test
push
nop
repz
in
adc
sub
adc
jbe
pop
xchg
loope
lea
xlat
mov
pop
mov
mov
daa
sub
and
fwait
push
pop
in
lret
jbe
mov
mov
out
push
aas
cmp
mov
je,pt
xchg
test
sbb
js
sub
pop
cmp
nop
cwtl
mov
mov
push
xor
add
mov
loope
aad
movsl
pop
mull
mov
int3
movsl
jg
cld
lret
lods
sub
dec
push
ss
call
jl
loope
cmp
les
int3
in
addb
mov
cmc
fwait
dec
in
mov
push
jno
push
and
mov
pushf
mov
and
inc
fwait
sub
fimuls
jae
out
mov
lret
xor
nop
mov
loopne
push
dec
repnz
sub
dec
add
inc
jle
outsl
ret
xlat
mov
push
inc
xor
out
adc
xlat
icebp
repnz
xchg
test
ret
rcrl
push
cmp
lcall
stc
and
push
fstpl
sbb
mov
inc
and
jno
sbb
inc
aaa
in
stc
sub
in
ret
test
imul
mov
ljmp
push
pushf
push
push
jle
ss
and
or
jne
int3
adc
and
and
popa
loop
leave
jge
push
in
inc
dec
pop
loope
mov
cmp
notb
or
mov
mov
mov
jae
xchg
and
imul
sub
adc
pushf
fwait
jge
mov
popa
mov
loopne
xchg
mov
or
bound
xchg
push
xchg
sahf
mov
call
jo
gs
es
nop
push
push
std
xor
jp
inc
mov
dec
inc
cmp
mov
push
adc
jnp
xchg
sub
push
stc
lea
mov
add
sbb
pusha
insb
xchg
push
lahf
inc
and
out
add
mulb
ss
out
mov
fiaddl
inc
ja
sbb
cli
loop
int
adc
into
xchg
jns,pn
inc
pop
and
sub
aam
and
xorl
imul
or
mov
mov
add
sub
jbe
fld
out
mov
and
mov
push
mov
jno
ficompl
fdivr
stc
cmc
cmp
out
dec
xor
sub
fildll
icebp
cmp
loopne
mov
leave
js
push
push
es
enter
inc
pop
nop
imul
xor
jl
and
and
stos
mov
sub
out
mov
lahf
sti
lods
jns
adc
js
cmp
sbb
ret
insb
sbb
pop
insl
push
inc
cmp
mov
xor
std
or
repz
loopne
cmpsb
sar
std
shrl
sub
arpl
push
sbb
sti
lea
mov
es
cmpsl
scas
js
mov
jns
jmp
add
into
jo
pop
inc
adc
xchg
xchg
cltd
shll
adcb
lock
dec
outsb
das
adc
fstpl
sbbb
stos
shll
sbb
xchg
pop
cmpsb
aam
cmpsl
mov
jno
sub
inc
popf
pop
mov
jmp
out
xor
mov
dec
and
fxch
jge
test
in
xchg
dec
xchg
lret
icebp
cltd
cltd
lret
pop
repz
daa
dec
mov
cmpsl
das
out
addb
push
jns
push
daa
mov
sbb
stos
xchg
pushf
fcoml
out
fwait
pop
xor
add
dec
push
lcall
arpl
pop
push
cmp
pop
push
push
fs
jmp
stos
and
xor
sbb
xchg
loope
fdiv
adc
or
jle
xor
repnz
cld
es
outsl
sub
and
test
pop
test
testb
rorb
xor
cmp
imul
test
ret
lods
outsl
shll
push
and
rolb
push
pop
inc
xor
aad
adc
test
add
or
cmp
clc
rorb
push
faddl
jg
pop
sub
xchg
mov
out
adc
xchg
push
cs
ret
dec
mov
add
enter
mov
add
add
or
je
sbb
dec
mov
cmp
push
into
and
loopne
ljmp
insl
or
xor
xor
jg
out
cmp
adc
rcr
adc
dec
insb
pop
fwait
lea
aad
icebp
xor
add
lds
inc
jp
sbb
jbe
nop
jl
lahf
add
xor
dec
aad
xorb
out
jno
mov
adc
jae
adcl
sub
daa
push
cs
adc
adc
xor
aad
imul
pop
aad
insl
jp
loopne
xor
pop
fs
push
inc
sbb
mov
lock
int3
cmp
pop
mov
adc
je
sub
out
gs
or
repz
jb
pop
fsubs
insl
sarb
outsb
sub
mov
inc
stos
lds
fnstenv
in
test
xor
icebp
add
add
leave
fs
icebp
mov
mov
stos
and
push
inc
push
fcoml
inc
popa
gs
rcrb
shrb
imul
jmp
inc
pushf
sub
push
sbb
icebp
out
push
aas
daa
scas
cltd
pop
gs
aaa
int
iret
cli
popa
fidivl
fisubl
add
pop
int3
clc
or
mov
mov
inc
lea
out
int3
pop
mov
ss
inc
rorb
add
cltd
das
je
mov
pop
into
es
sbb
push
test
pop
insb
mov
je
sbb
push
mov
push
insb
cmp
pop
ror
add
push
repz
mov
add
stos
aas
ror
push
sbb
arpl
mov
cs
push
aas
popf
ret
xchg
das
aad
xchg
enter
and
mov
xor
fidivl
call
loopne
inc
sub
push
rcrl
dec
mov
and
ss
aad
xchg
lret
popf
xor
jge
and
xor
in
scas
add
cld
or
pusha
pop
adc
push
adcl
inc
cwtl
es
in
xor
mov
add
fsubl
iret
push
fscale
movb
pop
ret
inc
loope
js
xor
jge
push
repz
push
aaa
ja
adc
in
ds
jne
mov
in
ss
mov
adc
sbb
testb
loop
loop
mov
repz
jecxz
pop
scas
je
xor
mov
dec
jnp
je
jge
shlb
mov
sti
dec
pop
cmp
or
ss
push
cltd
and
adc
loope
mov
push
andb
jle
add
adc
jmp
clc
es
push
mov
shll
sbb
mov
jne
xchg
lret
xor
mov
push
cli
stc
in
dec
negl
mov
and
js
hlt
out
push
movsb
sub
add
add
or
mov
pop
push
mov
cli
pop
movsl
add
leave
mov
xor
cmpb
mov
xchg
leave
inc
stos
sti
enter
pop
fwait
cs
outsl
and
jge
pop
test
push
in
jmp
mov
out
push
jecxz
iret
add
jb
dec
fsubl
cmp
sbb
lret
fiadds
popa
fnstsw
lea
lret
scas
in
sub
inc
lahf
fsub
jno
add
daa
rcrb
sbb
cld
into
xchg
dec
test
stc
pop
pop
add
outsb
add
add
outsb
pop
xchg
test
inc
inc
subl
pop
rol
inc
mov
pop
popf
push
pop
jne
roll
push
leave
enter
sbb
mov
xchg
ss
sbb
and
insb
out
scas
sub
xchg
jno
dec
inc
iret
imul
icebp
pop
test
cmp
aas
adc
jns
jecxz
xlat
jecxz
xchg
mov
xchg
ja
inc
jae
arpl
adc
add
xor
and
shl
ret
repz
jecxz
xchg
mov
xchg
ja
inc
jae
arpl
adc
add
xor
and
shl
ret
repz
jecxz
xchg
mov
xchg
ja
inc
jae
addr16
adc
add
aaa
es
rcl
ret
icebp
not
jecxz
xchg
mov
pop
mov
arpl
jae
adc
fwait
mov
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sarb
xchg
repnz
in
cmpsb
scas
repnz
add
jb
bound
adc
push
xor
jb
add
repnz
sbbb
mov
xor
bound
adc
and
adc
xchg
repnz
mov
incb
ljmp
pop
inc
adc
dec
jb
andb
popf
cmc
aad
pop
sub
lcall
jb
mov
gs
or
push
xchg
ret
subb
mov
iret
inc
mov
and
add
sub
mov
push
ljmp
push
xchg
bound
mov
mov
in
xor
jge
jmp
mov
inc
xchg
pop
popf
into
inc
inc
add
adcl
mov
repnz
push
dec
add
in
xor
adcb
and
enter
mov
mov
pop
jp
fisttpll
sub
inc
push
lods
cmc
bound
notb
add
repnz
xchg
ret
mov
mov
aam
xor
adc
stos
xor
sbb
shlb
pushf
divl
es
and
add
pop
xchg
sub
push
adc
mov
loope
mov
sahf
and
inc
cmova
in
addr16
pop
add
mov
ret
repnz
xlat
cmpsb
adc
loop
repnz
add
jb
bound
adc
push
xor
jb
add
repnz
adc
loop
repnz
add
jb
bound
adc
push
xor
jb
andb
inc
pop
jo
loop
cmp
jp
inc
sets
and
inc
push
notb
lods
pushf
sub
push
sub
push
stc
jp
gs
jp
call
xchg
adc
push
lods
aam
std
bound
add
push
xor
ret
jecxz
leave
jmp
cltd
les
dec
mov
pop
push
hlt
and
ja
add
jp
andl
rcrl
xchg
mov
mov
inc
jne
test
add
inc
sub
xor
sub
jp
push
dec
jg
sbb
adc
out
arpl
cmp
movsl
lock
iret
lea
jecxz
dec
mov
outsb
sbb
ffreep
sbb
rorb
arpl
pop
pop
int
ljmp
cmpsl
aas
jb
jl
mov
jmp
sbb
pop
xchg
das
inc
loopne
add
cmp
dec
stc
lds
push
xor
xlat
adc
jae
stos
not
cmp
negl
ret
push
sub
sub
push
nop
mov
fwait
and
xlat
push
rcrb
or
mov
xor
cmc
sub
in
sbb
testl
pop
pop
ja
or
orl
xlat
xchg
lcall
test
hlt
int3
int3
cmp
gs
fwait
mov
inc
jb
fimuls
push
movsb
arpl
xchg
or
scas
jge
movsb
and
sub
hlt
out
push
cmp
sub
and
or
xchg
out
lahf
jmp
loop
icebp
jle
filds
ficomps
mov
pop
or
fstpl
in
jecxz
adc
shlb
sub
mov
or
shrb
dec
notb
push
jmp
leave
sbb
and
hlt
xor
adc
xchg
jb
stos
addl
mov
stos
adc
enter
add
aad
mov
cmp
xchg
lds
sub
sub
mov
add
stc
frstor
iret
jg
push
into
jbe
std
movsl
xchg
std
pop
cli
pop
test
xchg
mov
mov
xchg
sbb
pop
push
ss
mov
push
movsb
jns
sbb
ljmp
or
pop
mov
dec
insb
imul
into
gs
into
insl
dec
call
or
loop
jmp
ja
outsl
js
je
sub
mov
add
cmp
lahf
adc
and
out
push
nop
das
aaa
inc
jb
inc
shrl
ret
push
push
pop
lahf
dec
arpl
cmp
sti
ss
imul
and
mov
sahf
loopne
loopne
add
cwtl
cmp
cltd
fs
cmp
add
xor
fninit
adc
dec
outsl
sbb
adc
call
mov
inc
jp
or
sarb
cmp
pop
lret
lret
stos
or
xor
sti
lock
dec
out
out
mov
and
clc
stc
aaa
stc
repnz
lock
popa
adc
ljmp
insl
xchg
sub
shrl
pop
sub
dec
cmp
fsubrl
imul
xor
add
jns
outsl
sbb
aam
sub
cmp
adc
lods
or
jmp
shll
pop
je
jb
push
xor
ret
fldcw
xorl
pop
cmpsl
jge
push
and
and
sti
lret
cmp
and
push
xchg
arpl
and
lea
enter
sub
push
and
orl
imul
and
inc
cmp
ds
xorb
mov
popa
inc
mov
repnz
loopne
lahf
mov
jae
jl
lahf
pop
cmpsb
ds
pop
jmp
fisubl
popw
mov
movsb
push
cmpsb
push
or
and
sbbb
insl
cmpsb
fsubl
lcall
pop
add
mov
mul
mov
cmp
push
xor
in
sbb
mov
fsubl
push
xor
xlat
dec
push
fimuls
in
out
addr16
std
mov
cmc
shrl
ficomps
fildll
inc
xchg
mov
mov
pop
mov
pop
scas
push
testb
pop
sbb
mov
xor
cmp
ljmp
popa
adc
divb
fldt
jg
sub
ret
ret
std
add
je
pusha
sub
mulb
mov
aad
je
fbld
or
mov
movl
call
cwtl
mov
adc
pop
pop
push
fnsave
cwtl
cltd
pop
int
jp
sub
xchg
repz
shl
es
mov
fcoml
xchg
loop
xchg
cli
or
idivb
and
jno
mov
sbb
ds
xor
sub
aam
sbb
xchg
jge
out
sti
mov
lcall
ss
mov
imul
jae
sub
add
mov
push
packssdw
divl
pop
fisttpll
pushf
test
fdivs
into
sub
sbb
sahf
mov
je
dec
in
in
in
jb
aad
xchg
inc
scas
inc
push
out
movsb
testb
scas
test
iret
xlat
inc
jmp
sub
andb
dec
ror
jge
xor
cmp
cld
and
insl
jl
sbb
mov
sub
mov
nop
xchg
and
sbb
stos
push
fnstenv
fs
fcomi
xchg
push
std
loopne
stos
mov
or
jnp
ljmp
arpl
aam
sbb
mov
test
sbb
mov
sbb
ljmp
pop
cli
movsb
mov
and
insb
inc
je
fidivl
xor
jecxz
pushf
das
mov
loop
xor
inc
aad
in
shrb
or
sbb
cmp
test
dec
or
in
imul
add
data16
push
xchg
xor
or
and
jmp
sbb
xchg
or
xchg
icebp
jo
daa
lahf
ss
int3
loop
repz
les
cmpsb
fwait
cmp
les
pop
cmpsl
std
push
lcall
insb
mov
sbb
sub
les
in
fisubrs
jge
out
fcoms
lods
cmp
loop
mov
or
testb
shlb
add
int3
lret
mov
cmp
sbb
dec
and
scas
and
or
pushf
mov
shll
push
mov
push
pop
xchg
mov
das
inc
in
popf
sub
and
inc
xchg
and
push
mov
cltd
lahf
push
fwait
int3
push
adc
leave
loop
cmp
je
pop
inc
shll
hlt
stos
sub
sub
out
xchg
sbb
bound
inc
fdivrs
shll
xor
pop
sbb
lods
adc
dec
inc
and
popf
cmp
fcomps
xchg
inc
fs
fs
cmp
xor
movsl
xor
ja
fdivr
lods
loop
flds
rorb
push
dec
mov
xlat
jno
sbb
cli
stos
pop
imul
mov
mov
addr16
lods
sti
dec
mov
scas
dec
movsb
push
fstpl
xchg
or
mov
aas
test
push
mov
lret
add
cmp
xchg
lret
pop
stos
add
dec
pusha
mov
hlt
mov
sbb
bswap
fdivrl
xor
stc
pop
inc
push
mov
cwtl
into
lods
insl
pop
mov
aam
sbb
ss
push
cmp
aad
mov
fwait
imul
mov
push
rorb
ss
outsl
lds
mov
data16
dec
or
fmulp
fbstp
inc
roll
lcall
inc
mov
shrl
shrb
xor
mov
xor
pop
cltd
pop
shlb
sbb
push
and
add
mov
ja
pop
stos
insb
fistl
dec
imul
xchg
jb
shrl
mov
outsb
cs
popf
lcall
dec
adc
out
cmpsb
out
mov
sbb
pop
dec
pop
loop
dec
std
mov
jbe
pop
aad
mov
cld
aam
push
jle
dec
into
lea
xor
sbb
ja
push
mov
mov
enter
jmp
mov
xchg
pop
lock
fstpl
test
cltd
xor
push
cli
cmp
adc
imul
push
lcall
xor
fs
push
imul
xchg
cmp
repnz
inc
shlb
aad
cmp
lds
jmp
xchg
mov
orl
push
push
repz
pusha
xor
sahf
xor
dec
dec
jae
jle
lea
inc
sbb
push
ret
cltd
sub
push
popf
inc
mov
out
jae
hlt
add
sub
push
or
dec
sub
in
cmpsl
jbe
ljmp
aam
stc
mov
dec
pop
lret
insb
in
pop
nop
pop
ffree
in
xchg
inc
test
or
fsubrl
bound
nop
repz
lahf
cmp
mov
and
add
fisubl
inc
jns
xchg
mov
out
pop
bound
cli
pop
and
mov
pop
shl
lret
mov
insb
and
inc
aad
pop
hlt
mov
ret
or
leave
sbb
stos
jne
pop
sub
mov
cmp
push
xor
pop
adcb
movsl
xchg
mov
cmp
cmc
pop
adc
xor
jne
rolb
add
mov
mov
jns
sub
iret
fiadds
inc
js
jecxz
push
push
sti
adc
jno
sbbb
jl
mov
cmpsl
stos
sub
adc
test
ja
mov
or
mov
jae
mov
fs
cmp
xchg
imul
sbbl
stos
xor
fdivrl
das
into
hlt
ljmp
test
xchg
lcall
push
and
jp
push
sub
inc
ljmp
ja
leave
jmp
and
cltd
push
push
int3
ss
addr16
push
xchg
ret
sub
aaa
and
shr
mov
rcrb
cmc
test
adc
lock
imul
push
insb
lods
add
fs
pop
int
push
es
mov
jg
aaa
jle
mov
mov
js
outsb
dec
sti
jb
or
std
inc
or
gs
int3
mov
mov
test
dec
and
daa
test
movlps
cwtl
cmp
or
mov
mov
ret
mov
jecxz
mov
push
fldenv
idiv
cmpsb
sbbb
pop
mov
sbb
orl
xor
enter
lcall
loop
mov
push
mov
inc
pushf
jb
daa
fcomi
cli
cmp
mov
cwtl
js
mov
test
xor
xchg
jne
jl
sbb
inc
out
hlt
enter
dec
int3
cltd
lahf
cmp
sub
fwait
push
sti
cwtl
cld
int
and
cmpsb
sbb
shr
xchg
fisttpl
or
or
pushf
mov
hlt
cwtl
aas
clc
pop
pop
mov
insl
lea
lret
lahf
mov
mov
sub
sarl
subb
lea
movsl
push
roll
mov
daa
loopne
jbe
push
repz
insl
push
mov
mov
lock
sbbl
cli
sbbl
negw
push
sti
xor
adc
push
pop
les
inc
in
test
jp
xchg
sbbb
addb
dec
or
lret
movsb
inc
push
jecxz
ss
repnz
mov
filds
in
ds
xchg
jecxz
dec
outsl
repnz
sub
cmp
cmp
insb
inc
pop
je
jmp
jge
jae
lss
cmp
xorb
shrb
stos
je
xor
mov
scas
fidivrl
popf
sbb
iret
lea
mov
and
movsl
ficoms
xchg
jb
xor
fiaddl
xchg
call
sbb
hlt
mov
push
mov
mov
sub
cmp
xor
out
js
mov
jo
int3
sbb
mov
and
and
pop
dec
mov
xchg
dec
test
adc
adc
jle
mov
pop
out
add
mov
sub
popf
leave
mov
ljmp
lret
adc
aam
loop
lods
subb
lret
fidivl
or
adc
and
sbb
sub
mov
pop
roll
mov
sar
pop
and
lods
push
fbstp
aad
pop
sbb
sbb
ret
mov
push
shr
push
std
adc
frstor
sub
mov
ret
fdiv
jns
in
aam
adc
les
mov
in
shll
ret
inc
xor
mov
xchg
and
push
sbb
lret
adc
fidivl
mov
shlb
int3
dec
lret
ja
or
inc
fistpll
aas
push
push
xchg
add
push
mov
sub
leave
push
daa
inc
incb
sahf
add
es
pop
dec
add
sub
lcall
shl
jle
mov
fildll
fnsetpm(287
xchg
mov
mov
sub
cmp
pop
pop
jp
push
test
add
adc
into
and
sbb
test
pop
jle
push
inc
mov
jp
mov
mov
xchg
loope
sub
dec
std
xchg
sbb
push
cmpsl
jbe
stos
pop
movl
cmp
push
out
mov
in
xchg
into
jecxz
mov
dec
push
inc
xchg
push
jecxz
xchg
jo
sbbl
inc
mov
or
out
push
jp
in
sti
icebp
movq
inc
lea
scas
aad
shl
into
mov
mov
or
push
clc
imul
mov
adc
mov
dec
sbb
dec
std
sbb
pop
jp
mov
xchg
lret
mov
loope
loope
js
sbb
or
sbb
mov
movsl
mov
inc
fists
hlt
jle
mov
or
sub
pop
les
sbb
add
fdivrl
mov
test
cs
mov
jns
test
mov
lcall
insb
inc
xchg
inc
xor
or
ljmp
imul
pop
adc
ror
adc
into
push
adc
inc
sbb
jne
xor
pop
mov
push
aaa
add
jge
and
mov
and
cmpsb
out
mov
in
inc
mov
or
or
jmp
lds
insb
sbb
xor
sbb
dec
outsb
mov
pop
mov
sbb
xchg
jbe
insb
and
out
popa
jecxz
in
mov
or
push
push
push
cmp
jg
test
mov
aam
xchg
pop
pop
mov
add
jbe
jp
push
lods
pop
ret
sub
xchg
jne
aad
jns
adc
pop
subb
xor
ljmp
sbb
sahf
andb
add
mov
adc
loopne
arpl
add
pop
xchg
rcl
roll
iret
mov
loop
lret
xor
filds
and
mov
shll
cmp
fistpl
cltd
xor
stos
lods
mov
jns
and
outsb
loop
hlt
mov
out
and
mov
data16
into
imul
sub
xchg
lock
inc
push
xor
jecxz
inc
out
inc
adc
jl
icebp
lahf
cs
loop
pusha
in
lret
lods
inc
pushf
test
dec
pop
in
or
aad
out
add
cmp
mov
push
jnp
add
test
popf
push
and
mov
loop
nop
in
test
push
sbb
loop
xchg
sub
jl
and
std
mov
lea
xor
cmp
in
mov
shrb
mov
adc
lods
adc
mov
rcrb
hlt
mov
shrl
xorl
scas
sub
and
cmp
ss
adc
jl
push
push
aad
shrl
loope
pushf
pop
test
lock
daa
outsl
pop
ds
add
inc
aas
mov
mov
testl
sub
push
icebp
dec
dec
movsb
inc
xchg
shl
adc
pop
mov
push
or
pop
cmpsb
push
sub
enter
jecxz
in
in
lahf
jbe
push
xchg
out
scas
sbb
dec
movsb
rclb
mov
or
nop
push
nop
mov
in
jne
mov
pop
out
push
mov
or
jmp
lock
addr16
jne
testl
add
or
mov
xor
outsb
out
jnp
insb
fstl
pop
sub
cmc
into
dec
xchg
add
std
mov
lret
add
test
or
fisubl
cmp
test
fsubrs
add
fidivl
sub
and
jg
rcll
mov
in
lds
test
cmp
outsl
adc
sti
and
icebp
idivl
inc
xor
leave
adc
push
cmpsb
mov
cmp
mov
mov
dec
mov
jae
inc
clc
pop
xlat
jl
es
ljmp
das
cmp
cmp
xlat
mov
shlb
js
sbb
xchg
xor
rcll
test
pop
call
push
rcl
and
in
gs
inc
pop
jno
pushf
daa
daa
sti
cmp
jl
aaa
add
loope
xlat
mov
notb
push
fstpt
dec
pop
stos
movsl
xorb
bound
int
jp
mov
mov
js
insl
in
cmp
mov
xchg
mov
into
mov
add
jl
sarb
xorl
fsub
rep
cmp
jbe
dec
sti
or
daa
enter
call
adc
popa
mov
ret
test
daa
adc
mov
and
icebp
rcrl
cmp
inc
aas
pop
int3
jno
fdivl
pop
idivb
push
pushf
aad
xor
loop
das
fisttpll
dec
push
es
mov
or
adc
mov
dec
lcall
in
pop
or
leave
pop
sub
cmpb
enter
mov
jmp
mov
push
ljmp
xchg
mov
pop
in
repnz
arpl
in
pop
jnp
test
mov
sub
mov
adc
clc
mov
pop
mov
insb
je
scas
mov
cmpsl
cmpsb
stos
jge
lods
popf
or
shrb
or
and
push
scas
and
add
cwtl
or
sub
push
cmpsl
cmp
ljmp
ja
fldenv
push
les
test
cmp
outsb
add
hlt
enter
add
and
enter
sbb
addr16
lds
xor
cmp
xchg
xchg
sahf
pop
dec
repz
es
pop
ds
mov
and
sbb
scas
cmp
push
in
lret
int3
dec
jbe
xor
add
ret
sub
push
les
mov
push
mov
cvttps2pi
xor
sub
insb
fmuls
xchg
repnz
mov
rol
arpl
mov
into
push
xchg
xchg
test
lods
shrb
sti
les
stos
call
lret
adcb
and
xchg
dec
les
lret
lret
mov
movsl
push
mov
pop
push
movsl
push
loopne
iret
gs
aad
sub
sarl
leavew
cmpsb
sbb
adc
cli
pusha
outsl
test
dec
push
loop
xor
xchg
out
out
sahf
sbb
movsl
sub
into
mov
mov
and
sub
mov
ds
movsl
loop
xchg
nop
test
sbb
xor
jecxz
inc
loope
or
jp
sbb
pusha
push
mov
jb
mov
mov
push
mov
mov
mov
es
mov
add
aad
mov
xchg
push
movsb
and
loopne
pusha
popf
sbb
aas
mov
js
pop
adc
mov
fnstsw
in
into
push
imul
pop
xchg
popa
adc
mov
adc
mov
sahf
cs
sbb
add
aam
test
sbb
jb
mov
push
popl
sbb
push
scas
fadds
loopne
das
cmpsb
push
sub
jecxz
xchg
cld
loop
adc
xchg
mov
fdivs
dec
ds
mov
fnstsw
xor
xor
xor
call
jae
dec
call
mov
out
or
fists
ret
jno
push
cld
jno
ret
lods
pop
mov
and
test
or
mov
fsub
adc
adc
dec
inc
mov
dec
pop
jecxz
cmc
pop
xchg
sub
addl
jno
or
xchg
mov
roll
add
adc
jl
aam
jp
mov
icebp
xchg
xchg
int
loop
xchg
ret
mov
mov
adc
bound
adc
push
xor
jb
add
repnz
adc
loop
repnz
add
jb
bound
adc
push
xor
jb
add
repnz
mov
ret
mov
mov
adc
arpl
adc
push
xor
jb
add
repnz
adc
bound
repnz
std
mov
inc
gs
lret
lea
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aam
push
lock
xor
inc
loopne
hlt
in
cmp
xor
adc
inc
mov
inc
mov
je
add
adc
and
xor
les
aam
test
hlt
adc
mov
inc
push
push
jbe
sbb
rclb
and
xor
les
aam
test
out
std
push
test
in
icebp
sub
and
out
xor
filds
adc
xlat
iret
jmp
movsl
sti
mov
aas
sbb
mov
xor
jnp
aas
inc
das
mov
sub
mov
jne
das
lods
lret
dec
sbb
imul
pusha
add
or
and
cmp
icebp
xchg
andl
nop
add
cmp
les
xor
aam
adc
in
sbb
fs
std
mov
mov
dec
aaa
jge
outsl
in
rcrl
and
xor
lods
add
loopne
or
and
dec
fnstsw
icebp
inc
in
faddl
fdivl
add
jns
lock
sbb
nop
fs
je
add
adc
and
xor
les
aam
in
hlt
sub
pop
xchg
sahf
movsb
pop
mov
xor
cmp
inc
inc
jno
arpl
inc
mov
fcomps
leave
xor
cmp
out
notb
repz
popa
mov
mov
xchg
inc
mov
and
das
out
hlt
and
jp
pop
in
push
cld
inc
lods
adc
and
xor
les
aam
in
hlt
adc
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
adc
mov
inc
mov
es
xchg
stc
push
imul
dec
addr16
test
lret
mov
pop
addr16
dec
adc
es
out
fcomip
fiadds
outsl
incb
jg
xor
push
imul
sub
enter
test
xchg
push
ljmp
rcrl
jmp
push
sti
pop
ss
dec
or
mov
cmp
mov
cwtl
cmp
insb
jae
push
inc
in
xchg
cmp
gs
mov
lods
pushf
popf
fcmovne
sarl
scas
xor
fistpll
mov
outsb
lods
adc
roll
xor
imul
mov
aad
push
adc
hlt
jb
je
sbb
repnz
lock
movsl
fadd
pop
push
cli
into
push
shlb
pop
stos
aad
mov
cmpsb
cwtl
insb
or
dec
pxor
mov
iret
xlat
inc
movsl
fbstp
xchg
or
movsb
out
push
pop
clc
xchg
sub
mov
sub
pop
ret
mov
aas
ror
jmp
add
or
js
push
mov
sbb
sbb
adc
jmp
push
aad
adc
inc
add
scas
cmp
test
or
mov
pop
fwait
jle
cmpl
cmp
js
int3
sbb
ljmp
mov
dec
pop
ret
xchg
sar
clc
pop
jns
ficompl
sbb
dec
mov
cld
aas
inc
jg
push
dec
rcrl
pop
jbe
adc
xorl
jecxz
outsl
xlat
and
stos
push
ds
inc
xchg
mov
xchg
cmpl
xchg
mov
jmp
sub
dec
sub
icebp
stos
pop
pop
fsubrl
ljmp
mov
out
fs
and
sti
push
jge
stc
cmp
inc
mov
mov
fiadds
mov
xchg
movsl
mov
push
mov
fwait
fnstsw
fdiv
adc
loopne
adc
sbb
cmp
clc
jnp
in
mov
and
sub
imul
jne
dec
jo
stc
outsb
or
sarl
inc
aam
nop
and
nop
mov
pop
or
in
jle
xchg
mov
ret
mov
jl
in
popa
aad
sub
popa
aaa
inc
popf
stc
test
scas
les
pushf
mov
dec
lods
fwait
xor
mov
icebp
jmp
dec
xor
test
call
dec
push
out
inc
add
mov
rclb
mov
inc
stos
fyl2x
cli
mov
cmp
rorl
mov
cmc
ret
sahf
ds
mov
pop
sub
aaa
sbb
fs
cmp
pushf
inc
cmp
sbb
pop
jmp
mov
test
das
arpl
aas
adc
arpl
mov
decl
mov
jne
and
push
mov
jno
fimuls
lret
inc
adc
jne
push
orl
inc
cld
sbb
in
iret
idivl
je
aad
mov
push
dec
jnp
sub
add
aaa
cmp
sbb
cltd
or
addr16
and
leave
sahf
push
rorl
jae
shr
or
icebp
xchg
lods
scas
pop
dec
mov
incb
and
mov
lahf
add
out
mov
cmp
dec
sub
pop
fwait
mov
pop
imul
stos
iret
shl
jb
xchg
push
test
push
and
jl
fwait
xchg
sbb
ljmp
mov
imul
jo
aaa
adc
sahf
xor
fnstcw
xor
lea
cmp
mov
mov
out
clc
test
push
fistpl
mov
inc
call
mov
sti
js
mov
jo
pop
sub
sub
divl
lret
int
repnz
lods
fldl
js
mov
cmp
pop
jnp
lods
jb
mov
cmpsl
scas
pop
mov
mov
subb
jns
pop
jbe
std
sub
mov
in
xor
icebp
cmp
push
fdivs
jle
cmp
addr16
adc
popa
jb
dec
movsb
push
jb
adc
lea
jnp
adc
movsl
leave
adc
sti
jg
xlat
enter
and
loopne
xchg
push
cltd
sub
inc
fwait
mov
fs
xor
push
inc
ds
jle
dec
inc
cmc
popa
icebp
cmp
inc
dec
jo
add
repnz
insl
xchg
push
mov
inc
cmp
xor
ja
inc
xor
fdivl
rcrl
shl
std
and
aas
out
dec
xor
in
inc
sbb
rcrb
std
xor
cs
dec
icebp
fisubrl
mov
xor
dec
lea
inc
mov
movsl
mov
lret
popf
mov
pop
pop
in
inc
mov
test
leave
add
shll
imul
inc
arpl
adc
loopne
stc
and
inc
das
pushf
pop
pop
push
frstor
cmpsb
cwtl
fdivr
outsl
xchg
neg
ds
pop
repnz
pop
inc
inc
mov
cmpsl
mov
adc
aas
mov
or
ds
sar
and
xchg
push
and
data16
adc
test
jp
pop
addr16
xchg
aam
push
pop
es
incb
cmp
jns
jb
dec
xchg
std
fbld
jnp
in
subl
jmp
outsb
stc
daa
addl
adc
dec
sbbl
pop
mov
add
scas
cmp
add
cmp
insl
jecxz
outsb
ja
cs
test
lock
sub
into
adc
lret
mov
mov
and
stos
pop
or
mov
mov
shlb
cmp
fsubs
jle
in
notb
pop
push
or
inc
push
ds
fcomps
in
pushf
shrl
aaa
enter
jb
or
push
mov
add
gs
add
dec
in
pop
sbb
out
sbb
insb
xor
jp
jle
fidivl
lock
jo
test
popa
or
lock
aas
int3
pop
xchg
sub
lds
push
jp
ja
fdivs
jl
pop
add
out
sbb
mov
scas
adc
lcall
pusha
sar
js
add
fiadds
cmp
enter
mov
ret
cmp
shrl
jge
and
hlt
adc
aad
add
gs
mov
cmpsl
out
outsb
sub
push
dec
lahf
xor
pop
mov
int3
mov
sarb
cltd
and
push
fwait
jne
inc
movsl
cmp
call
jb
sbb
out
or
sahf
jge
xchg
sub
cmp
sbb
pop
mov
fwait
aas
inc
dec
xlat
sbb
xchg
xor
shrb
lret
mov
repz
xchg
pop
cmp
cli
jg
jg
mov
aam
dec
pop
stos
add
iret
push
jle
mov
jnp
test
jl
outsb
mov
adc
jno
sti
push
xchg
mov
out
fldl
xchg
dec
repnz
ds
xor
in
fcompl
cmpsb
sub
adc
incb
inc
shlb
aas
mov
xlat
mov
mov
andl
pop
mov
mov
je
xchg
sbb
jns
jge
push
sbb
xor
mov
or
js
int3
mov
sub
popa
xchg
push
inc
in
or
imul
pop
cli
test
push
cmc
jne
movsb
mov
add
adc
jge
test
and
je
fwait
cmpl
mov
into
mov
je
adc
xchg
cmpsb
push
push
push
movsb
xor
dec
inc
add
pop
inc
pop
sbb
mov
lret
fistl
or
cmp
push
pop
mov
sbb
test
js
test
xchg
into
cmpsl
popa
ret
js
mov
lret
jmp
dec
xchg
loop
cmp
fstl
xor
out
add
subl
mov
pop
pop
or
mov
nop
jno
fidivrl
subb
jecxz
out
inc
xchg
shrb
outsl
popa
in
lret
adcb
gs
push
lret
outsb
push
mov
mov
xor
je
inc
mov
into
mov
sub
imul
jle
sar
cmp
movsl
pushf
in
enter
mov
jg
loopne
int3
cwtl
out
shll
adc
mov
arpl
rcrl
add
mov
sbb
loopne
xor
testb
add
cmp
inc
lea
dec
stos
ss
mov
or
ret
mov
aad
jae
lret
insl
push
dec
out
push
outsb
sub
or
mov
push
shlb
cmpsl
inc
push
and
call
cmc
in
jg
push
pop
xchg
inc
xchg
sbb
lock
gs
sbb
sti
aas
lods
loop
jbe
das
mov
insb
andb
cli
and
xor
cwtl
and
push
cmpsl
cltd
stc
mov
lahf
fsubl
int3
pop
outsl
jne
xor
int
sub
lea
mov
xorl
adc
inc
and
add
push
xchg
mov
fdivs
vmread
xchg
cmpsl
xor
movsb
lahf
jo
pop
jmp
mov
lods
dec
data16
scas
pop
cmpsb
push
shl
inc
movsb
dec
sub
mov
add
xlat
jecxz
fmul
mov
jo
sub
pop
stos
cmp
sbb
mov
in
mov
adcl
pop
lock
xor
or
pop
cmp
add
inc
bound
sub
or
jbe
and
pop
push
push
xlat
aad
xchg
movsl
sbb
ja
cwtl
sbb
inc
frstor
adc
and
sub
hlt
inc
pushf
or
jle
pushf
push
mov
and
es
mov
nop
cmp
scas
int
pushf
jnp
faddl
lcall
icebp
xor
adc
adc
mov
jecxz
cmp
xor
lea
or
lock
xchg
pop
or
add
xor
scas
sub
jg
popa
arpl
mov
out
lahf
mov
mov
mov
ficoml
pop
pop
jp
movsb
dec
fstpl
mov
lods
inc
daa
test
inc
and
mov
jno
xor
std
push
mov
sub
jl
mov
loope
jp
inc
or
lods
lcall
jge
sub
movsl
js
cmpsl
aam
fs
dec
push
jns
dec
popa
popf
icebp
icebp
cmp
mov
sahf
sahf
movsl
loopne
cmp
icebp
inc
sbb
jl
push
push
sbb
in
sbb
aam
rcrl
cmp
push
or
movsb
lea
aas
xor
ljmp
daa
imul
lret
xchg
arpl
lock
repz
lcall
mov
xor
fwait
push
sub
adc
sub
push
mov
jecxz
gs
jg
test
push
add
xor
jns
dec
cld
or
jbe
repz
jb
mov
fsubl
pop
insb
jns
pop
pop
dec
pop
fiaddl
jmp
push
ds
jle
loope
paddd
ja
add
out
in
test
sub
sub
mov
sub
jno
hlt
sbb
adc
sbb
xchg
jmp
mov
add
test
or
push
pop
push
in
jecxz
rolb
sarl
sbb
sbb
inc
hlt
in
sbb
xor
cmpsl
pop
push
and
and
dec
dec
xchg
push
sub
and
sbb
pop
add
cmp
or
test
lahf
in
dec
addr16
adc
push
adcl
ds
sub
mov
pop
add
pushf
andl
mov
or
xchg
mov
mov
popa
or
std
outsl
inc
in
sbbb
ss
xchg
mov
push
test
test
sub
add
sbb
stc
jmp
jg
inc
mov
lock
push
je
shrl
dec
mov
ljmp
pop
add
fnstenv
ss
mov
icebp
bound
idivl
push
repz
mov
outsb
adc
iret
pop
pop
adc
roll
out
inc
stos
sti
xchg
addl
out
xchg
fistpll
sbb
arpl
fisttpl
fmuls
in
fwait
xchg
mov
push
imul
out
or
pushf
addr16
mov
divb
lcall
bound
xor
xor
sub
push
ja
popa
mov
and
dec
insb
mov
adc
movsb
add
adc
cmp
mov
arpl
mov
add
test
cmp
push
rclb
fisttpll
movsb
xor
aam
jl
aad
pop
add
add
push
mov
fimull
sar
aaa
push
insl
xchg
adc
pop
lea
xlat
pop
int3
jle
arpl
jmp
inc
call
sub
jl
ss
mulb
jno
sbb
or
fs
out
cld
add
mov
hlt
sar
jne
repz
mov
lods
pop
mov
or
in
xchg
mov
das
pop
test
xlat
add
sub
or
dec
jmp
notb
cmp
inc
mov
push
fwait
in
or
cmp
pop
xchg
add
insl
sbb
add
lret
into
ficoms
push
push
cmp
out
lret
sbb
ror
lret
enter
jmp
int
sti
jl
lods
push
gs
sbb
dec
sahf
test
and
xor
fisttps
lds
mov
jno
push
pop
js
xor
mov
movsl
add
or
mov
addr16
call
lock
test
pop
and
adc
test
into
js
adc
pusha
imul
daa
inc
in
cmp
int3
jo
sbb
jo
mov
push
ljmp
jbe
iret
xchg
aaa
cmp
mov
mov
sbb
enter
mov
jge
dec
pushf
neg
pop
jbe
pop
mov
add
addr16
add
imul
arpl
dec
enter
mov
scas
fsubl
push
mov
outsb
cmc
rcrl
out
inc
sub
popf
popa
repz
dec
xor
shll
mov
cmp
pop
mov
push
inc
xchg
dec
ret
in
cs
lahf
cwtl
in
mov
inc
mov
jecxz
xchg
push
push
btc
cltd
xor
fisttps
pop
push
das
lods
sbb
jle
inc
xchg
loope
imul
jmp
inc
xor
jnp
lcall
lock
push
inc
push
adc
filds
inc
sub
inc
sti
shl
pop
mov
pop
xor
sub
leave
loope
stos
imul
sub
mov
fcoml
lods
ja
rcrl
xchg
xchg
mov
sbb
and
lret
cmp
popf
push
push
xor
in
add
add
lock
jbe
dec
cmc
movsb
mov
adc
pusha
shrl
jg
dec
test
mov
sbb
leave
lret
scas
jp
mov
fbld
push
insl
cld
aaa
aas
and
jno
in
into
iret
rclb
dec
dec
imul
out
test
push
clc
stos
jmp
dec
jno
mov
sbb
outsl
ret
ds
cmp
push
std
movsb
lret
cmp
xchg
inc
jge
cmpl
add
mov
jp
jns
sub
aad
incl
sahf
jo
pop
xchg
imul
push
into
scas
fiadds
and
or
jmp
fmul
lret
sahf
xor
lods
xor
sbb
lods
or
xchg
lods
push
gs
pop
lahf
dec
fs
lods
xchg
cmpsl
push
mov
jmp
jecxz
adc
jnp
jecxz
dec
dec
insb
xchg
mov
mov
mov
mov
jae
cmpsl
push
psubd
or
pop
imul
lret
xchg
enter
hlt
movsl
cmpsb
cmp
xchg
mov
xchg
arpl
and
push
test
out
mov
mov
daa
lock
ret
dec
xchg
add
mov
lods
arpl
cmp
jns
mov
jne
pushf
adc
data16
mov
jmp
enter
insl
sbbb
sub
sti
and
inc
dec
push
pop
dec
scas
addr16
imul
xchg
lock
pop
in
inc
sbb
push
inc
pop
das
fstpt
ljmp
pushl
mov
jae
loop
push
rcrl
xor
hlt
mov
jae
pusha
pushf
mov
in
loope
xor
mov
or
sub
xlat
aam
jne
xchg
mov
sub
pop
add
and
dec
cmp
pop
pop
adc
dec
mul
xor
jp
inc
cmpsl
jae
dec
fwait
ret
cltd
push
jg
mov
dec
xchg
mov
aas
sbb
adc
xchg
xchg
mov
shrb
pop
aad
push
insl
ss
pop
pop
fs
ss
xchg
mov
jg
ja
sarl
movb
js
xor
cld
push
sub
xchg
jo
imul
push
test
jge
pop
shlb
add
xor
dec
lock
inc
pop
dec
jb
into
and
imul
aad
je
test
rorb
ss
pop
iret
xchg
andb
xor
jbe
rcr
rcll
mov
mov
imul
xchg
sarb
inc
xchg
and
cs
loopne
jmp
aaa
fld
dec
sti
sub
lods
pop
or
imul
pop
mov
or
iret
add
jo
mov
popf
pop
push
and
mov
add
cwtl
lret
dec
in
test
loop
test
xchg
sub
adc
in
js
xor
iret
test
mov
dec
xchg
stos
dec
pop
and
sbb
cmp
imul
and
loopne
add
rolb
jbe
enter
pop
adc
mov
in
pop
lods
lds
sti
dec
in
xchg
hlt
clc
inc
faddp
dec
into
out
test
pusha
adc
frstor
lret
popa
into
jo
adcb
dec
std
dec
mov
push
negl
mov
or
jbe
jb
ret
inc
test
push
jl
xor
es
sbb
xchg
cwtl
xor
pop
mov
ss
outsl
dec
inc
icebp
shrb
jo
mov
into
cmp
adc
dec
pop
sub
pusha
and
sub
sub
mov
test
add
shll
push
je
inc
sub
sti
aas
adcb
mov
out
dec
mov
pushf
test
outsl
int
shlb
and
mov
fidivl
cmp
mov
mov
int
pusha
cld
mov
pushl
mov
xchg
xchg
dec
outsl
jecxz
jae
mov
fildl
loop
push
bnd
aad
adc
xor
cmp
in
mov
mov
push
stos
shr
and
enter
xchg
fdivrp
ds
scas
test
add
outsb
cmpsl
popa
push
mov
xor
lods
jle
fadd
popl
hlt
pop
pop
out
or
ljmp
insl
ficompl
push
test
xor
jle
mov
inc
pop
lods
sti
jge
outsb
out
les
nop
mov
push
pop
negb
into
mov
xchg
push
movsl
test
inc
shlb
cmp
test
adc
cli
dec
or
ret
push
out
scas
xor
int
and
jp
pop
repnz
push
cmpl
pop
mov
bound
and
mov
shll
call
pop
xchg
cmc
inc
repz
push
test
fstl
fld
rep
rcrl
xor
cmp
adc
mov
sbb
mov
loopne
lahf
xor
jg
cmpsb
into
cmpb
dec
inc
dec
sub
mov
xor
sub
dec
stos
adc
cli
out
xchg
xchg
popa
in
sahf
xor
and
xor
sub
movsb
lods
sbb
insl
lds
jle
sbb
or
outsb
js
jg
ret
mov
and
jbe
push
mov
adc
pop
xchg
std
in
test
sbb
insl
aad
sbb
inc
pop
fxch
movsl
lahf
xchg
pop
in
je
mov
inc
test
das
jbe
inc
sbb
lret
pop
push
fwait
xchg
mov
movb
loopne
push
xor
enter
mov
xchg
adc
in
stos
xchg
scas
iret
adc
dec
push
ja
sub
sahf
rcrl
jo
sbb
adc
xchg
push
cmp
jns
mov
fiadds
mov
sti
adc
data16
mov
out
arpl
mov
jns
push
dec
dec
pusha
sub
std
xor
testl
xchg
aas
cmp
and
pop
outsl
mov
push
and
push
ljmp
leave
sub
notb
pop
leave
sbb
push
mov
cmpsl
fstl
or
xlat
dec
mov
popa
push
xor
jno
loop
mov
stc
fists
jge
fsubr
mov
jecxz
in
fimull
sub
cmp
cs
mov
inc
aad
inc
andnps
imul
pop
lcall
call
int3
add
jo
jp
pop
int3
adc
movsb
sub
repz
out
je
add
adc
and
xor
les
aam
in
hlt
adc
mov
inc
mov
je
add
adc
and
xor
les
aam
in
hlt
adc
mov
inc
movsb
push
mov
add
adc
and
xor
les
aam
in
hlt
sbb
mov
inc
inc
push
push
gs
add
adc
and
xor
lcall
sbb
pop
cmp
shlb
loope
xchg
lods
repz
xchg
loopne
rcrb
add
adc
jo
inc
xor
mov
loope
xchg
loopne
lock
mov
xor
add
push
or
jo
inc
and
mov
cmp
scas
shlb
sbb
jno
xor
daa
gs
mov
call
xor
push
ret
jb
cs
in
push
xor
repz
adc
cmp
sub
cmpsl
push
xor
je
pusha
pop
mov
das
mov
notl
mov
jbe
mov
add
jo
lds
xchg
adc
or
icebp
dec
stos
mov
iret
cmc
test
mov
dec
and
aam
loopne
sarb
push
sub
jno
ret
jmp
push
xor
jo
inc
sub
cmp
outsb
loope
cmp
xchg
xchg
bound
inc
arpl
clc
xchg
add
xor
inc
mov
loope
jne
stc
lock
pop
rclb
add
pop
pusha
or
inc
and
mov
sbbb
lds
adc
adc
add
arpl
outsl
adc
pushf
lds
clc
mov
mov
imul
jno
sbb
push
outsb
jno
push
pusha
aas
mov
repnz
ret
lock
mov
xor
popa
adc
pusha
add
inc
and
mov
loope
xchg
loopne
lock
mov
xor
popa
adc
pusha
add
inc
and
mov
and
xchg
imul
cmp
mov
adc
jne
mov
xchg
stos
mov
jne
fstl
lcall
nop
popl
fisubrs
jp
or
loope
mov
lods
outsb
xchg
push
and
ja
or
sbb
cltd
pop
cmp
cmp
sarl
sub
and
fidivrs
push
ja
dec
repz
xchg
jge
xchg
repz
xchg
inc
ret
sahf
push
push
inc
pop
rcr
lcall
fdivl
xor
int3
sbb
pop
xchg
mov
js
inc
mov
pop
xor
mov
movsl
inc
cmp
inc
pop
rorl
xor
loopne
fldt
adc
sub
outsl
scas
call
xor
test
pop
int
sti
add
xor
call
int
push
mov
sbb
vpsubq
sbb
sub
imul
aaa
cmp
jae
pop
jg
jl
xor
out
aam
pop
xlat
lock
xor
cmp
lds
stos
cmp
in
pop
xor
pop
lret
std
sti
sub
jns
lods
das
pushf
mov
int3
jne
in
or
sbb
popf
outsb
bound
jmp
sarb
cmp
and
mov
xchg
xchg
div
in
xor
inc
mov
out
xor
push
dec
sbb
mov
arpl
out
leave
cmp
mov
popa
enter
int
push
mov
xor
daa
jge
pusha
xor
decb
mov
add
pop
lcall
or
cltd
and
adc
outsb
sub
and
lods
add
testb
aam
cwtl
clc
mov
js
shr
xchg
sbb
xlat
adc
xor
add
int3
xor
in
pop
rcr
mov
pop
mov
dec
lcall
pushl
es
std
adc
and
cli
mov
lret
clc
cmp
mov
orl
stc
cltd
sub
mov
fdivr
mov
ret
dec
mov
push
push
cmpsb
dec
and
sbb
push
xchg
sti
pop
cwtl
or
js
js
dec
cli
cmp
xchg
and
rorb
movsb
xchg
jl
mov
test
pop
in
mov
sub
mov
lret
insl
mov
adc
xchg
test
add
bound
enter
fdivr
aaa
jo
imul
sub
leave
in
sbb
jbe
out
sub
js
lock
adc
hlt
jle
stc
adc
mov
enter
dec
data16
add
mov
ror
out
mov
push
insb
inc
and
pop
pop
pop
arpl
inc
mov
rcl
addb
inc
out
xor
jp
push
pop
insb
sbb
ljmp
push
call
movsb
out
mov
xor
imul
je
adc
mov
divb
neg
cmp
push
pusha
ret
push
insl
inc
jbe
or
hlt
xchg
imul
or
xchg
scas
clc
movsb
loop
inc
sbb
fnstcw
jg
outsl
inc
xchg
roll
jmp
pop
in
pop
bnd
cmp
jge
mov
in
xchg
out
popf
inc
addr16
add
add
dec
clc
out
lock
loope
mov
and
shr
stc
pop
push
cmp
fcmovne
xor
sbb
adc
out
cli
test
dec
fisttpl
push
mov
push
out
push
xor
loopne
and
jp
addr16
adc
pushf
add
aaa
sub
dec
das
xchg
mov
into
scas
push
mov
daa
leave
subb
pop
mov
jbe
or
bound
pop
jmp
iret
shrb
mov
es
mov
add
xor
orb
push
mov
lret
mov
jno
jnp
testl
xchg
push
adc
loopne
mov
and
and
xor
and
mov
xor
ficomps
roll
cltd
cmp
mov
mov
dec
lock
push
out
xchg
aaa
mov
sbb
lock
xlat
push
pop
stos
arpl
mov
xchg
add
scas
mov
repz
int
xchg
xor
aad
inc
sahf
jg
cmpsb
jl
out
pushf
rclb
jg
adc
sbb
insl
xor
mov
and
mov
mov
mov
adc
ja
je
mov
mov
ja
in
ja
into
mov
ret
cltd
pop
and
cmp
push
jp
inc
movsl
cmp
sub
jmp
pop
or
mov
fwait
jno
jae
nop
iret
sbb
shll
xchg
test
decb
inc
cli
mov
xlat
or
and
out
leave
push
or
mov
mov
inc
xchg
imul
mov
movsb
and
push
mov
dec
les
cmp
xchg
jo
stos
adc
and
mov
cmp
outsb
and
mov
addr16
call
xor
inc
inc
mov
divb
out
lea
stos
inc
insb
push
mov
or
and
dec
js
fsubr
xchg
int
adc
adc
fadd
dec
sub
lret
and
cmp
xchg
fwait
push
stc
xor
stos
ret
inc
popf
sbb
aas
aaa
aaa
std
loop
pop
and
jo
arpl
movsb
aam
inc
daa
gs
cmpsl
inc
scas
scas
mov
and
xor
dec
dec
insl
or
iret
lcall
mov
mov
addr16
sbb
fwait
xchg
cmp
jo
push
add
mov
mov
jg
lret
sti
pop
push
imul
sub
test
popf
sub
into
in
cltd
sbb
pop
adc
sbb
mov
ret
dec
mov
sbb
add
add
pop
aam
fstl
loopne
or
imul
pop
fucomp
std
lret
out
xor
sbb
test
push
adc
pushf
roll
dec
movsl
xchg
cs
orb
and
scas
or
cmc
jno
mov
nop
enter
pop
jmp
mov
mov
cwtl
test
mov
sarl
arpl
arpl
leave
lret
lcall
add
inc
pop
xchg
pop
stos
dec
push
fwait
cmpsb
in
xor
lock
negb
ja
cltd
and
dec
fbstp
add
lock
stc
jmp
insl
outsb
in
sbb
pop
add
push
in
push
lock
shl
shrl
test
pop
in
pop
sbb
cmpsl
or
das
pop
xor
push
dec
cmp
adc
fs
pusha
mov
fdivrl
out
sti
repnz
mov
es
inc
inc
divb
adc
mov
movsl
les
sbb
mov
mov
dec
adc
xlat
lock
cmp
mov
mov
add
pushf
jmp
cmp
dec
movsl
cmp
jp
out
ret
dec
aad
mov
enter
push
xchg
add
jo
and
pop
je
xor
int3
sub
cmpsb
mov
lea
or
ja
mov
iret
jo
mov
jle
push
icebp
repz
pop
hlt
dec
push
movsb
testb
inc
sub
int3
adc
in
inc
bnd
xorps
adc
test
jae
dec
stos
cmp
pop
adc
or
psrlq
rclb
mov
jbe
lahf
in
push
jo
xchg
repnz
ret
fsubrp
mov
mov
xchg
cmp
in
mov
sub
push
xor
jge
jnp
sub
outsb
and
in
outsl
lret
or
ds
int
add
mov
cld
adc
lods
stos
inc
lock
repz
iret
leave
xchg
mov
push
cmp
fisttpl
adc
aad
push
cmp
addr16
ljmp
test
mov
pop
xchg
push
inc
cwtl
rclb
fldl2t
cli
filds
adc
mov
mull
into
out
xor
cmp
pusha
rcr
movsb
test
mov
inc
mov
adc
sbb
dec
add
gs
mov
js
push
and
xchg
sub
cmp
mov
cmp
shl
xchg
and
mov
or
in
imul
call
mov
or
and
jle
pop
mov
inc
xchg
push
clc
or
mov
into
leave
ret
pushw
rcrb
js
in
idivl
lcall
or
fnstcw
dec
movsl
pushf
out
mov
je
scas
push
mov
mov
and
rcrb
imul
adc
sbb
xchg
inc
adc
and
repz
or
or
loop
ljmp
xor
lock
pop
fadds
data16
pop
aas
dec
inc
or
jge
sbb
dec
push
fsubl
cld
sbb
jb
mov
mov
shll
fs
shll
nop
cmp
and
icebp
sbb
pop
arpl
mov
cli
dec
pop
jbe
mov
xor
mov
adc
cs
xchg
or
scas
jo
jmp
and
repnz
stos
ja
sbb
pop
xor
ds
xchg
in
repnz
jecxz
dec
divl
mov
pop
imul
or
sarl
leave
adc
repnz
hlt
push
dec
or
or
push
xchg
outsl
or
xchg
in
sbb
xchg
gs
mov
sarb
cwtl
jne
and
stos
jno
scas
or
and
out
test
repz
mov
notl
pop
push
xor
jmp
push
mov
mov
or
out
faddl
aam
adc
out
mov
mov
stc
mov
push
adcl
pop
movsb
inc
out
adc
push
mov
cmpsl
pusha
pop
cmp
gs
test
clc
repnz
outsl
lock
into
imul
icebp
inc
jmp
adc
push
mov
test
and
stos
aad
ja
fmul
nop
xchg
lods
xchg
add
pop
stos
aas
or
aas
mov
or
add
add
push
adc
lea
mov
stos
test
lahf
loop
add
push
sub
jae
dec
fcmovbe
ja
and
lret
aam
push
mov
fisubl
jb
inc
mov
icebp
and
ljmp
mov
das
aad
leave
push
and
xorb
mov
repnz
dec
imul
dec
dec
pop
jl
push
nop
cwtl
fisubrl
ja
push
popf
mov
and
pop
pop
or
inc
mov
mov
sahf
xor
or
jns
into
sbb
inc
xabort
adc
xor
pop
jmp
fdivs
test
pop
cld
ja
inc
clc
ret
ss
test
pop
inc
cmp
dec
add
mov
clc
aam
adc
mov
int3
aam
mov
jp
fstpl
jo
shr
sub
loope
rolb
jmp
jns
popf
and
xchg
mov
stos
xchg
jle
mov
push
add
mov
lahf
mov
xchg
cmpb
sbb
enter
mov
mov
outsl
fs
fwait
mov
inc
sub
pop
orb
lds
loope
jmp
movsl
stos
shlb
imul
jns
jns
add
clc
and
jns
jns
js
inc
bound
and
push
ret
cmc
xchg
lret
and
cmc
fucomip
movsl
push
call
rorl
sbb
jnp
and
int3
pop
repz
arpl
xor
mov
and
fcomip
aad
cmc
push
daa
add
ds
out
ftst
cmp
push
in
and
enter
fsubrl
movsb
mov
fxch
pop
sbb
pop
arpl
and
xor
loop
fidivrl
mov
xlat
pop
cltd
pop
adc
pop
jg
xchg
jno
jno
pop
inc
scas
aas
mov
stos
push
mov
daa
imul
test
mov
inc
mov
movsl
mov
outsl
subl
xor
push
adc
jmp
sbb
pop
mov
jne
sbb
fldenv
fnstcw
into
pop
jns
pop
out
daa
pushf
inc
mov
inc
cmp
fidivl
and
and
mov
scas
push
mov
jmp
jne
fildll
add
mov
lret
movsl
movsl
pop
jno
addr16
cltd
leave
repnz
jg
mov
lret
dec
test
push
push
enter
into
pop
jns
cwtl
lret
ret
cmp
fwait
sub
jmp
sbb
ja
ror
dec
lds
mov
dec
daa
xchg
xlat
imul
jno
pop
push
adc
sub
inc
out
in
adc
lea
cltd
cmp
out
sub
pop
idivl
repnz
into
dec
test
cltd
jnp
mov
daa
test
cli
clc
xchg
cmp
repz
out
inc
aam
stc
cmp
test
imul
idivl
adc
push
mov
or
in
dec
out
inc
cmp
pop
stos
mov
stos
es
xor
jl
inc
and
lods
loopne
hlt
pop
bound
addr16
xchg
cmp
decb
xor
mov
xchg
lret
inc
cwtl
jge
popf
xchg
jl
gs
lret
sub
mov
sub
shrl
scas
test
orl
push
in
loop
mov
sbb
shrl
lods
mov
nop
jo
out
test
add
cmpsl
jae
addl
call
push
xor
cmpb
out
inc
in
enter
fsubl
fstps
mov
sbbl
xchg
xor
mov
sti
dec
imul
mov
outsb
mov
fldt
sub
mov
inc
sbb
mov
mov
mov
fadds
mov
lds
add
fucomi
add
pop
or
test
pop
mov
inc
mov
inc
xchg
and
je
leave
stos
in
cmc
push
rcll
xchg
jne
hlt
daa
jecxz
test
fdivs
cmp
rolb
mov
push
push
lea
hlt
cltd
and
mov
test
xlat
dec
aaa
inc
sbb
pop
jge
mov
out
xor
push
cmpsb
jp
shlb
and
or
cmp
jmp
out
jecxz
pop
push
leave
push
or
pop
mov
or
jmp
xor
in
inc
pop
test
inc
adc
mov
push
mov
xchg
cmp
aaa
push
push
mov
iret
nop
jbe
imul
mov
jae
push
jno
dec
into
jns
stc
sub
mull
push
cmc
add
pop
and
lahf
out
jg
aam
lahf
stos
fimuls
pop
shl
jl
push
add
in
sbb
sub
in
icebp
push
sub
add
sbb
orb
mov
test
nop
or
mov
test
mov
nop
pop
xchg
stc
data16
lret
mov
setl
cld
dec
jl
sarb
adc
xor
inc
add
inc
sub
cmp
inc
inc
int
fs
inc
dec
lock
in
sbb
imul
cmp
outsl
out
shl
idivb
ds
orb
xchg
pop
jp
adc
cld
jae
mov
dec
mov
arpl
mov
jmp
test
out
fdivs
mov
subb
das
sbb
fincstp
xor
xor
test
pop
ljmp
loopne
dec
pop
push
icebp
cwtl
lods
mov
popa
push
lcall
into
xor
lret
test
cmp
imul
mov
cmp
out
mov
loopne
pop
dec
aas
enter
inc
jge
rcl
dec
inc
inc
enter
pop
shll
ds
and
add
jmp
mov
imull
mov
mov
int
mov
test
xor
xor
pop
cmpb
icebp
gs
push
decb
shll
xchg
sub
mov
cmpsb
pop
scas
iret
xor
in
mov
sub
pop
enter
in
daa
cmpsl
add
mov
hlt
sub
inc
pop
jae
lods
lea
cmp
pop
adc
call
push
insb
int3
inc
pop
nop
xchg
jecxz
movsl
data16
mov
mov
daa
push
test
xchg
pop
loopne
mov
mov
sub
aam
cs
dec
nop
mov
mov
mov
test
jecxz
das
movsl
dec
dec
repz
cmpsb
ds
mov
stc
aam
cli
ficoml
push
xor
addb
mov
xorb
jmp
mov
or
fwait
lds
and
call
das
xchg
xor
xchg
rcr
dec
pop
jg
clc
jp
fldl
enter
sbb
mov
push
mov
add
mov
xchg
xlat
pushf
xor
and
push
pop
mov
add
gs
stos
out
inc
in
adc
ret
psrld
or
fcoml
pop
loope
test
mov
or
xchg
shrb
xor
es
mov
inc
xchg
xchg
divb
shlb
push
xor
jns
imul
test
out
xchg
mov
xchg
inc
add
aas
sarl
hlt
xchg
pop
mov
cmpsl
jne
mov
xchg
fstpt
test
jb
sahf
aam
push
rcrl
fwait
shll
xchg
jb
sbb
dec
xchg
shufps
add
adc
aaa
or
lret
pop
movsb
pop
jb
gs
int3
fwait
push
dec
fadds
out
rorb
mull
mov
push
jae
in
inc
xchg
lahf
movsb
dec
mov
imul
dec
outsb
ds
add
mov
scas
inc
outsl
std
push
jg
out
or
push
and
xor
push
dec
leave
aas
adc
push
mov
mov
hlt
xchg
stos
push
lea
push
cld
sbb
sbbb
andl
dec
pop
mov
mov
shll
aaa
cmp
ror
xor
cmpsb
outsb
shll
outsb
mov
or
mov
inc
xor
shlb
jle
inc
jg
pushw
add
inc
or
addr16
push
push
fcompl
lock
adc
lcall
mov
mov
xorb
sub
sar
add
and
adc
and
in
or
or
mov
pop
test
ret
sub
shll
movsb
dec
js
hlt
lret
sbb
loop
out
orb
sbb
rorl
add
sub
scas
dec
lods
inc
clc
ret
rcll
cmp
test
shl
add
and
arpl
imul
inc
imul
lods
mul
ljmp
mov
pop
xchg
xchg
add
mov
lret
xor
xchg
in
scas
adc
fldt
cmp
mov
mov
pop
lock
jns
jl
test
pushf
aas
jb
stos
pusha
cmpsb
fwait
imul
pop
or
sbb
in
ja
jmp
outsb
out
ss
ror
adc
and
ljmp
nop
ss
or
xor
in
push
mov
icebp
add
enter
outsl
cmp
popl
testb
neg
divl
lahf
inc
test
pop
dec
dec
add
in
mov
push
pop
mov
mov
pop
out
test
xlat
aas
or
in
call
mov
minps
xchg
mov
jae
push
jbe
fs
push
imul
loop
adc
pop
andl
dec
xor
fxtract
sub
and
or
inc
lods
cld
sbb
sahf
dec
inc
cmp
sbb
rcl
imul
aad
xchg
sbb
adc
arpl
mov
sbb
loop
roll
cld
cmc
push
fs
or
dec
sbb
xor
jne
into
int
lea
xor
popf
adc
xor
negb
dec
popf
sbb
sub
mov
sbb
add
dec
cmpsb
dec
out
les
test
jne
lret
fstps
cmp
lahf
out
push
mov
lahf
out
lcall
movsb
dec
push
push
sub
or
addr16
jmp
mov
and
gs
xor
mov
jnp
stc
cmp
sahf
push
cltd
cmp
push
or
rorl
and
jae
rcr
mov
xchg
mov
mov
inc
add
outsb
das
xor
cwtl
mov
cmpsl
pushf
dec
cmp
adc
and
lock
xor
scas
xor
and
add
jne
sbb
in
push
pop
shlb
fmuls
arpl
nop
insb
shll
xor
mov
jnp
lods
fildl
ja
pop
push
das
inc
dec
mov
and
xchg
loopne
lock
mov
xor
popa
adc
pusha
add
inc
and
mov
loope
xchg
loopne
lock
mov
xor
popa
adc
pusha
add
inc
and
mov
loope
add
xor
push
and
addl
adc
inc
leave
push
lds
rcll
shlb
push
and
addr16
into
mov
iret
jmp
fucomi
lret
sub
loopne
int
mov
imul
dec
pop
cmp
or
sti
iret
jmp
fucomi
lret
lahf
mov
scas
mov
dec
or
popa
dec
pop
cmp
sub
pop
das
or
sti
jmp
fcomi
lret
xchg
scas
mov
insb
imul
pop
dec
pop
jle
inc
arpl
or
mov
lcall
push
arpl
push
aaa
into
pop
cld
push
mov
pop
lods
xor
mov
push
cmp
xchg
sbbl
dec
dec
pop
aas
dec
rcrb
mov
test
jp
fldt
or
loop
pop
cmp
jmp
in
sbb
fildll
pop
lret
lret
pusha
mov
scas
je
mov
nop
sbb
push
paddq
inc
adc
pop
sysenter
pusha
mov
pop
or
mov
movsb
lahf
mov
sub
xlat
shl
xchg
insl
das
adc
mov
lea
dec
out
cmpsl
imul
aas
dec
pop
cs
in
aas
comiss
push
sti
jmp
fucomi
lret
mov
mov
inc
jnp
imul
dec
pop
cmp
sub
xchg
stos
jmp
mov
mov
repnz
fistpl
and
or
or
dec
sbb
mov
scas
jmp
repz
iret
mov
add
push
jg
cs
pop
fs
dec
jle
pop
mov
mov
scas
xlat
mov
scas
mov
dec
imul
dec
pop
cmp
sub
sbb
or
sti
iret
jmp
fucomi
lret
lahf
mov
scas
mov
dec
imul
dec
pop
cmp
sub
sbb
or
sti
loopne
inc
imul
jle
sysexit
xchg
ret
in
pop
ja,pn
inc
and
sbb
scas
loopne
call
xor
test
inc
inc
xorl
loope
xlat
int3
pop
loop
lret
cmpsb
xor
dec
mov
and
lfs
xchg
or
es
pusha
cmc
scas
in
inc
lret
lock
pop
popf
js
xchg
jno
mov
sti
mov
cs
mov
iret
pop
gs
or
mov
and
mov
out
and
loop
jb
push
xor
in
scas
lods
push
mov
ss
aad
jle
mov
xlat
jg
jbe
data16
jg
std
mov
fildl
mov
cmp
pop
xor
jne
repz
cmpb
je
ds
mov
jecxz
lods
test
push
loopne
xchg
mov
lcall
rcr
pusha
in
int
int
sbb
xchg
push
cld
ja
sar
lock
and
mov
rcll
test
mov
loope
addr16
xor
loop
sbb
insl
sbb
or
mov
cmp
and
jge
mov
scas
pop
or
dec
movl
mov
pop
inc
dec
adc
sub
pop
inc
jo
dec
es
dec
cli
ds
les
rcll
or
jle
xchg
or
or
mov
mov
bound
mov
push
loop
sbb
xor
jb
daa
fs
adc
mov
push
cli
ror
insl
out
movl
gs
cwtl
dec
dec
and
sub
push
negl
sbb
mov
incb
mov
pop
sub
cmc
push
test
or
imul
xor
or
addr16
scas
movsb
mov
js
lret
and
stos
aam
xor
pop
das
in
addr16
cmp
ljmp
or
jno
inc
adc
xchg
das
mov
sub
std
out
lcall
std
out
mov
imul
in
xchg
int3
add
inc
jns
xchg
aas
cmpsl
mov
xor
test
and
mov
push
cmc
lahf
js
mov
inc
lock
fwait
add
xlat
les
fs
mov
mov
sub
mov
push
cmp
add
or
inc
xchg
jae
mov
je
pop
xor
adc
outsl
mov
aad
lea
je
mov
sub
xor
xchg
or
shl
aaa
inc
pop
fwait
xchg
push
push
push
cmp
idiv
divb
sarl
add
and
push
jge
mov
test
cs
push
cmpsl
lock
adc
movsb
nop
testl
test
movsb
xchg
aam
mov
out
pop
fwait
sub
adc
fwait
mov
test
scas
or
cmp
mov
jmp
into
test
hlt
mov
pop
jmp
cmc
push
aas
loop
pop
xor
ljmp
inc
or
inc
jno
in
loop
popa
int
imul
shr
inc
shrb
pop
jns
push
add
pop
push
cld
icebp
rorb
dec
pop
dec
push
or
dec
lods
sub
in
nop
test
inc
mov
lods
xchg
pop
cmpl
cmp
push
sti
incb
imul
and
fxtract
lods
xchg
pop
gs
push
sub
pop
test
and
loop
outsb
bsr
fisttpll
mov
mov
xor
into
dec
jmp
adc
sub
in
jns
cld
mulb
test
pop
lods
cld
push
jnp
or
xor
cmp
xchg
or
pop
inc
push
jne
adc
out
cltd
cld
dec
jns
imul
dec
imul
xor
xlat
out
cld
clc
push
add
repnz
stc
jae
jbe
cs
int
mov
adc
divb
movsl
outsl
shlb
sahf
gs
inc
ret
jg
fldl
mov
push
packsswb
pop
xchg
aas
xor
inc
push
and
pop
test
cld
mov
and
pop
adc
xlat
cld
repz
dec
adc
lcall
mov
xor
shrb
int
or
loopne
arpl
test
mov
ljmp
out
ja
jg
hlt
ss
xor
mov
mov
mov
insl
push
ja
jp
xchg
cltd
insl
pop
push
ss
lods
dec
fbstp
adc
cmp
jne,pn
ss
loope
aad
push
xor
insb
push
pop
and
outsb
sahf
icebp
pop
push
aad
and
test
insl
cmp
adc
mov
mov
and
cmp
inc
inc
adc
mov
pop
jg
inc
lcall
sub
clc
xchg
inc
xorb
and
call
dec
xor
sbb
aaa
imul
aad
lahf
orb
jno
es
lds
xlat
lds
mov
int3
push
inc
push
loopne
enter
imull
stc
fdivrp
xorb
shrl
popa
out
sbb
sub
sub
pusha
sbb
sub
mov
inc
scas
not
push
into
pop
pushf
add
sahf
testb
aaa
pushf
or
rcrb
gs
jge
xchg
mov
inc
pop
mov
jl
adc
je
push
cmp
dec
aas
and
push
cs
cmp
js
ljmp
testl
mov
test
cltd
out
ret
inc
aad
dec
mov
push
push
xchg
das
cwtl
mov
std
add
sbb
jae
imul
pop
out
add
aaa
scas
ffreep
dec
sub
cmp
pop
or
ss
sbb
imul
or
and
or
shlb
test
insl
pop
insb
ja
mov
sahf
out
push
int3
ds
faddp
dec
push
mov
sbb
aaa
xor
shlb
inc
pop
jno
in
rclb
mov
movsl
or
pop
lahf
inc
imul
xchg
adc
stos
adc
clc
pop
icebp
dec
notb
pop
inc
pop
je
enter
mov
push
sbb
and
mov
nop
iret
mov
mov
sub
shr
xchg
out
enter
mov
je
orb
or
add
in
pop
mov
add
fcmovbe
test
inc
dec
cld
adc
sub
in
push
pcmpgtd
push
out
sbb
push
jne
lret
mov
loopne,pt
mov
test
leave
mov
cld
adc
int3
in
cmp
aas
cmpsb
inc
push
xlat
sbb
dec
or
pop
stc
roll
mov
jmp
out
jl
shl
enter
push
into
and
scas
push
pop
push
repz
inc
mov
loope
mov
js
xchg
mov
int
pop
mov
dec
mov
pop
inc
outsb
aad
add
in
xchg
inc
into
scas
xchg
lock
cld
push
popa
jp
dec
jl
add
push
add
adc
and
jle
cltd
nopl
push
scas
popf
xor
scas
lds
adc
push
jae
pop
adc
push
or
add
push
xor
daa
sbb
test
xorb
cwtl
psubsb
ljmp
jmp
xor
adc
xor
pop
add
inc
cmp
ss
sbb
and
or
mov
xchg
lret
lret
lods
scas
in
add
xor
adc
es
rorb
mov
push
sub
lret
mov
stos
in
rcl
data16
jmp
ljmp
repz
xchg
xchg
cmp
mov
pop
mov
push
leave
dec
cmpsb
mov
lgdtl
pop
cli
pop
mov
mov
adc
arpl
loope
sbb
push
push
mov
imul
popa
xor
mov
popa
dec
mov
sub
mov
cmpsl
lds
add
add
sub
aad
pop
jmp
sbb
jo
ret
mov
icebp
iret
pop
push
xor
aaa
and
cmc
loopne
cs
add
loopne
cmp
stos
xchg
inc
insb
lods
ror
loop
loop
movsb
adc
call
loop
jmp
inc
sbb
or
aad
rolb
clc
cmp
das
dec
int
cmpsl
sti
popf
pop
xchg
ss
xor
xlat
jo
movsb
adc
xlat
enter
sub
sbb
add
pop
inc
fcmovu
in
out
mov
out
rol
loop
dec
cmp
jg
push
xchg
mov
out
in
cmp
sbbl
dec
push
pop
vpminub
addr16
in
in
mov
xchg
or
mov
out
lahf
push
mov
mov
jle
les
jp
cmpsl
in
repnz
loop
popf
jno
popf
movups
dec
jle
aas
adc
mov
addr16
inc
ja
movsb
imul
into
push
daa
inc
adc
ret
jp
jb
jo
call
clc
notb
or
or
pop
sub
cs
push
pusha
or
cmp
loope
sbb
mov
test
push
outsl
push
repz
pop
lods
sub
out
clc
out
jnp
js
jmp
add
mov
mov
jne
frstor
aam
sbb
adc
jns
add
and
inc
leave
popf
rorl
in
sti
imul
jae
jecxz
or
inc
pop
adc
sub
add
lret
jp
add
int3
or
cmp
or
jo
insb
sub
mov
jns
or
sbb
cltd
cmpsl
rcr
add
mov
inc
push
add
or
mov
and
js
das
cmp
ss
add
xlat
ss
lret
sbb
lods
mov
add
sub
cmc
xchg
fcomps
adc
pushf
hlt
addb
fldenv
pop
mov
out
ja
jge
mov
iret
inc
dec
jno
dec
push
dec
push
inc
mov
shl
mov
push
shlb
push
inc
jmp
movsb
pusha
adcl
rclb
imul
dec
imul
js
xor
add
pop
test
xor
aad
sub
xchg
and
inc
sbb
or
and
iret
push
testl
cmp
cmp
test
adc
cwtl
push
inc
mov
push
adc
sub
add
inc
jge
inc
dec
jns
test
testb
sub
fdivrl
popl
cmp
jg
dec
xor
pusha
push
sbb
data16
iret
pop
jp
test
pop
sbb
iret
cli
les
pop
push
into
sbb
out
in
dec
pop
test
icebp
leave
push
jb
test
mov
mov
push
sub
in
mov
fisttpll
ds
fsubl
jle
mov
je
les
cli
fld
mov
aad
add
jmp
lahf
ja
add
cmp
pop
out
bound
aaa
jae
test
aam
pop
mov
ja
xor
xor
clc
ret
icebp
test
and
xor
xor
and
scas
ret
mov
jle
jmp
inc
xchg
or
xchg
enter
inc
daa
test
movsl
dec
pop
xchg
outsl
popa
cmp
push
jns
push
dec
dec
push
lds
jne
sbb
mov
dec
add
ljmp
pop
adc
rclb
aaa
push
adc
dec
es
add
repz
mov
cwtl
ljmp
push
mov
orl
push
mov
ret
faddl
xchg
aam
movsb
in
jne
dec
inc
or
pop
fwait
pop
mov
fisubrs
mov
push
insl
insl
jge
add
clc
aad
mov
push
in
icebp
test
rcl
movsl
jb
and
in
movsb
cmp
nop
leave
out
and
inc
stos
jne
and
scas
add
jne
andl
dec
stos
ror
mov
int
imul
mov
jb
push
jg
sub
mov
fs
aad
add
jns
iret
hlt
pop
inc
xchg
bound
lret
xor
jle
add
and
cld
pop
test
cmp
ret
icebp
fcmovu
jp
xor
sub
xchg
sub
sarb
jnp
sbb
add
iret
sub
mov
aaa
dec
sub
rorb
pop
pop
ficomps
in
jnp
imulb
sub
cmp
xorl
or
push
aas
cmp
fadd
test
nop
mov
out
push
push
jecxz
mov
in
sub
into
aam
pop
stc
ret
mov
rorl
ss
fdivl
popl
push
cmc
jp
add
mov
adc
cmc
cmp
mov
aad
rclb
imul
mov
inc
sbbb
repz
pop
or
addr16
call
dec
daa
movsl
mov
xor
sbb
jne
xchg
addb
and
mov
insb
cmp
addr16
lods
enter
insl
outsl
xorl
cmp
loope
outsl
mov
pop
scas
xor
sub
jge
fistps
adc
loope
popa
int
xor
pop
cmc
sarb
mov
sub
fsubl
enter
into
push
test
push
andl
lods
es
sbb
xchg
jle
push
negb
mov
in
pop
push
test
dec
xor
les
inc
loopne
popa
js
hlt
fisttps
mov
stc
sbb
inc
movsb
data16
adc
inc
mov
sbb
test
sub
pusha
mov
inc
mov
sub
fstpt
cli
dec
sub
int3
lret
fs
mov
mov
repnz
sahf
xchg
jmp
xchg
mov
test
cmpsb
push
sub
xchg
push
mov
lret
and
pop
sbb
xchg
enter
lds
ret
fs
in
pop
ja
cmpsl
jns
add
lods
hlt
mov
adc
ljmp
insl
mov
repz
out
sarb
mov
repnz
pusha
nop
scas
pop
mov
js
cmp
lods
fsts
dec
pop
mov
cmp
sti
push
std
ret
pop
sub
dec
inc
cmp
enter
inc
dec
ss
inc
icebp
xchg
mulps
jge
sbbl
icebp
std
pop
in
lahf
pop
into
mov
insb
pop
jl
stc
jno
mov
push
ja
jmp
cmp
xchg
mov
iret
jge
js
mov
enter
mov
loope
aas
movsb
pusha
jnp
xlat
lret
nop
stc
rorl
clc
cmp
outsl
test
arpl
xor
stc
push
pop
loop
cmp
int3
mov
pop
gs
xor
dec
out
jmp
sub
lea
xchg
xor
sub
movaps
and
sub
lret
aas
push
leave
jne
jle
iret
mov
xor
add
or
xor
mov
in
push
push
push
jae
dec
cmpsb
jle
cmpsl
jle
xlat
mov
repz
jno
lods
add
dec
insb
je
popa
adc
xchg
shlb
mov
daa
mov
pop
mov
stos
push
xchg
cmp
dec
xchg
xchg
dec
inc
xor
pusha
push
outsl
dec
sub
pop
notb
out
mov
jp
push
test
mov
leave
adc
mov
jl
inc
out
mov
push
sarl
or
pop
jb
icebp
aad
push
xor
xchg
popf
mov
pop
fsts
adc
fidivrs
dec
rolb
xchg
pusha
pop
int3
sbb
lar
ret
ljmp
test
add
in
or
les
and
ss
sbb
mov
inc
sub
or
adc
and
cmc
sbb
sti
setge
mov
jmp
out
and
and
cli
mov
mov
add
pop
jmp
lods
pop
mov
loope
jg
lcall
jl
in
mov
sub
sub
insl
lahf
insl
into
cmove
rol
jb
adc
sbb
pushl
movsb
enter
fs
push
call
jle
cs
xchg
rcl
lods
fdivs
cmp
pop
inc
xchg
xchg
push
lods
out
mov
loop
mov
es
jle
dec
add
mov
push
add
js
cmpsb
insl
sub
fst
mov
aas
pop
push
jl
dec
jmp
xchg
fadd
jmp
outsl
push
das
je
add
cmc
fistpl
lea
dec
mov
ja
push
adc
mov
ret
sbb
add
mov
or
out
jl
cmp
iret
pop
popa
lret
mov
loope
dec
lcall
rcrl
pushf
add
sub
ss
jg
dec
ret
pop
shll
push
icebp
cmp
fldenv
stc
insb
repz
dec
dec
and
in
xchg
mov
inc
push
insb
ljmp
or
xrelease
pop
and
and
mov
ficomps
inc
xchg
sarl
mov
adc
and
adcl
mov
pop
repz
int
push
rolb
pop
push
jno
aaa
inc
outsl
dec
mov
fs
ror
xchg
adc
nop
mov
dec
add
pushf
call
sub
testl
inc
stos
push
pop
arpl
and
adc
cmc
cmpsl
mov
es
add
gs
xor
jbe
cs
push
jge
imull
push
in
scas
repnz
push
nop
stos
mov
outsb
xor
xchg
and
jnp
add
jae
mov
dec
int
ss
jp
stos
mov
repnz
inc
leave
movsb
insl
sbb
and
test
mov
jmp
pusha
ljmp
pushf
call
xchg
fisubs
pushf
inc
pop
popf
inc
rcl
sub
mov
insb
dec
sub
aad
jge
add
sub
inc
fisubrs
mov
cmp
push
pusha
inc
lock
out
bound
sbb
pop
std
lds
or
dec
push
pop
lahf
into
inc
call
hlt
clc
clc
mov
add
and
pop
mov
pusha
jo
inc
lret
test
cmpsl
out
jno
ss
mov
outsl
sbbb
pop
pop
mov
xor
xor
into
inc
mov
sbb
cmp
inc
loop
mov
and
rorl
mov
sub
nop
mov
sti
mov
mov
mov
in
fistpll
dec
push
push
push
out
inc
test
jno
mulb
jl
fs
lret
inc
sub
mov
in
jae
push
in
or
mov
pop
xchg
push
ja
ror
lahf
jnp
rcll
fsubrs
jnp
jp
sub
mov
sarl
mov
jecxz
outsl
addl
xchg
jmp
lcall
shrl
push
inc
sbb
add
pop
int
lods
iret
loop
insl
test
cmp
inc
sbb
or
int3
fadds
cmpsl
mov
aaa
push
std
xor
sbbb
lea
js
sbb
mov
cmp
cli
jecxz
mov
mov
nop
cmpsb
loop
je
dec
dec
jg
leave
in
xchg
sub
aas
pop
test
into
xor
mov
push
mov
aad
or
mov
pop
fnstenv
data16
cs
cld
enter
sbb
scas
jns
and
mov
push
adc
adc
sub
jne
pusha
or
or
or
push
nop
icebp
dec
mov
cwtl
arpl
pop
add
xor
lods
cmc
mov
enter
or
cltd
test
bnd
jp
fwait
nop
lret
mov
inc
loopne
pop
and
mov
adc
pushw
adc
xchg
cmc
and
outsl
sub
hlt
insb
lods
cmp
leave
dec
xor
test
inc
and
imul
sub
push
jbe
jmp
add
lock
pop
imul
and
daa
jns
push
or
insb
dec
fidivs
shll
js,pt
cmpsb
out
call
mov
jae
popa
addb
xchg
jno
in
pusha
push
inc
xchg
xlat
scas
out
xchg
xchg
sub
imul
sub
cmp
push
lret
xchg
int
lret
fisttpll
cmp
fcomps
xor
iret
xchg
jo
cmp
push
inc
dec
outsb
dec
mov
mov
ret
cmp
fisubs
or
push
scas
test
xor
out
or
mov
aaa
clc
or
mov
xchg
mov
cmp
mov
ds
andl
and
pop
pop
jne
sahf
popa
test
fs
sti
stos
and
arpl
out
ret
lret
fisubs
pop
sub
xorl
inc
cmpb
xchg
add
fiaddl
sub
int
jno
icebp
mov
or
fldenv
push
dec
je
inc
pop
pop
push
or
ss
data16
lret
and
movsb
xchg
pusha
imul
push
rolb
out
cmc
out
push
imulb
jmp
fucomi
lret
lahf
mov
scas
mov
dec
imul
dec
pop
cmp
sub
sbb
or
sti
iret
jmp
fucomi
lret
lahf
mov
scas
mov
dec
imul
dec
pop
cmp
sub
sbb
or
sti
iret
imul
out
lret
lahf
mov
scas
mov
dec
imul
dec
pop
cmp
sub
sbb
jmp
fucomi
lret
popf
mov
das
mov
pop
outsl
cmp
mov
aam
in
hlt
cmp
sub
sbb
or
mov
sbb
xor
inc
mov
lcall
pop
fisubrl
lret
iret
sub
sbb
or
jp
push
pop
scas
dec
mov
lcall
pop
fisubrl
lret
iret
sub
sbb
or
jp
push
pop
scas
dec
mov
negb
mov
pop
test
dec
movsb
aas
gs
dec
stos
sbb
loope
push
lods
mov
fistl
or
outsl
dec
sub
movsb
into
divb
mov
add
mov
das
aas
outsl
jne
add
das
inc
ret
push
and
sbb
fcomps
adc
test
ds
push
mov
mov
xor
fidivs
or
pop
mov
filds
out
aaa
jl
dec
fs
loopne
add
sar
push
lds
and
cmp
add
push
psubsw
cld
pop
pop
xchg
testl
lret
outsl
dec
aad
fldz
orl
in
mov
dec
imul
lahf
cmp
test
fistps
out
or
jp
push
pop
scas
dec
mov
lcall
pop
fisubrl
lret
mov
arpl
ds
mov
add
adc
ljmp
mov
jg
data16
ljmp
fisttps
sti
xor
pusha
test
pop
mov
stos
jne
mov
jecxz
lahf
pop
scas
dec
mov
lcall
pop
fisubrl
lret
iret
sub
sbb
or
jp
push
pop
scas
dec
mov
lcall
pop
fisubrl
lret
iret
bswap
xchg
push
ror
fwait
fwait
cltd
xor
cmp
fwait
dec
or
shll
push
adc
stc
je
sub
adc
lahf
pop
rcr
ljmp
nop
int
nop
bound
lods
sbb
out
shlb
and
and
push
pop
push
ss
push
adc
xchg
scas
cs
jle
cmc
adc
lock
fucomi
jb
push
sub
cld
mov
lcall
outsb
mov
xlat
pusha
lahf
mov
sbb
pop
xchg
sub
mov
xor
shlb
outsb
mov
xchg
pop
cld
sti
jp
insl
cmpsl
adc
pop
sub
and
xor
mov
out
cmpsl
adc
xchg
imul
mov
jle
mov
sub
mov
icebp
sbb
xchg
loope
push
scas
push
or
test
adc
ds
pop
mov
jle
and
add
add
iret
and
into
fcomps
fwait
mov
rcrb
mov
xorl
pop
jecxz
mov
lret
dec
imul
outsb
inc
in
mov
incb
out
sub
dec
sub
movsl
imul
fwait
inc
sub
dec
fiadds
sub
out
arpl
sbb
mov
inc
cmpsb
repz
rcrb
fsts
push
lods
ret
sbb
pop
xchg
mov
xchg
dec
inc
sub
ret
insb
dec
xor
push
shl
mov
lea
add
mov
mov
enter
je
je
test
lds
test
outsb
inc
sub
sub
fmul
loope
add
loop
add
sub
stos
dec
push
lahf
and
les
cs
pop
xorb
data16
repnz
mov
lret
fstl
arpl
add
pop
scas
scas
out
sbb
cwtl
shl
aaa
lods
add
xlat
cmc
fiaddl
lods
sbb
mov
push
lret
jg
mov
xchg
add
inc
inc
push
mov
mov
sbb
mov
xor
lds
or
popf
cli
adc
nop
add
sub
pop
dec
xor
sahf
xor
movsl
pushf
icebp
lds
rorb
repz
mov
addb
call
xor
sub
popa
neg
out
adc
inc
outsl
push
test
or
adc
xor
mov
imul
mov
push
mov
adc
mov
scas
stos
mov
testl
mov
or
xchg
lret
hlt
roll
aaa
pop
or
push
and
out
mov
and
dec
sub
push
dec
xchg
outsb
dec
mov
adc
pop
push
pop
sarl
xchg
or
cmp
jle
push
xchg
mov
test
mov
popa
pop
or
cmpsl
iret
sub
push
fstpt
xlat
sbb
push
addb
fsubr
rolb
lahf
dec
xor
cltd
lods
leave
mov
mov
leave
loopne
cmp
pop
lret
mov
or
jb
bound
out
fnsave
scas
adc
pushf
idivl
mov
xor
sti
mov
repz
mov
in
je
pop
and
int3
xor
lods
pop
jnp
push
sarl
pop
cmp
in
mov
sub
xchg
inc
flds
jbe
pop
iret
call
dec
shr
push
cmp
xor
and
push
call
inc
lock
mov
cmpsl
mov
cmpsl
outsl
cmp
int
mov
mov
pop
mov
mov
daa
add
sarb
cmpsb
mov
aad
push
arpl
xor
sub
and
ja
inc
arpl
cmp
sti
mov
cmp
mov
hlt
sbb
popa
jecxz
into
lahf
inc
fisttpll
movsl
add
pop
int3
mov
add
notb
mov
mov
lods
rol
pop
test
cmpl
cmp
xor
jno
and
sbbl
sub
cmp
lahf
rcl
test
into
xchg
fs
ficompl
jge
in
sahf
ja
cli
in
scas
jnp
pop
aaa
lahf
dec
inc
cltd
jbe
adc
cs
add
inc
pop
xchg
xchg
push
dec
nop
xchg
lock
or
sub
dec
test
jno
sub
mov
out
cmp
adc
cmpsb
mov
pop
xor
adc
rcrl
dec
mov
ja
push
in
loopne
add
jmp
out
sub
cmc
aad
outsb
fstpt
push
push
pop
and
add
xchg
add
into
stos
scas
mov
dec
lds
inc
inc
pop
add
xor
jbe
cli
loop
aas
inc
jmp
fwait
js
adc
pusha
mov
ror
xchg
lret
flds
dec
arpl
enter
or
mov
pop
pop
inc
fcomps
daa
sbb
cmp
cmc
jecxz
mov
adc
inc
jge
mov
dec
cwtl
mov
inc
test
cwtl
push
test
adc
inc
rolb
test
push
fidivl
jg
jp
sub
aas
sti
aam
fnstcw
ror
fs
arpl
pop
mov
or
insb
mov
idivb
fs
push
jb
subb
sti
xchg
jg
lret
shl
test
jne
cmpsb
addr16
adc
jno
add
xor
insl
mov
cwtl
fldl
nop
scas
pushf
ret
xchg
push
out
sbb
ret
dec
mov
xchg
push
ljmp
fsubr
ficomps
mov
pop
aaa
jb
aas
sub
dec
out
xchg
test
mov
daa
jecxz
gs
and
fdivl
push
mov
jno
aam
cltd
and
inc
sub
bound
mov
xchg
ret
aaa
sub
fidivl
in
push
and
cmc
hlt
cwtl
stos
or
xor
push
imulb
icebp
lret
orb
sub
push
scas
jbe
roll
sbb
and
js
arpl
nop
daa
popa
xor
dec
jl
inc
fdivl
xor
mov
out
and
pushl
sub
data16
icebp
and
fnstsw
or
cmp
in
scas
push
sub
xor
es
das
and
imul
fcmove
roll
jbe
jp
es
scas
mov
fsubrp
jne
loop
cmpsl
mov
mov
test
stos
or
sbb
int
mov
mov
sub
push
add
insl
stos
rcrb
mov
test
sbb
cmp
pop
pop
test
push
enter
cmp
mov
mov
sbb
mov
ljmp
xchg
stc
cltd
push
mov
inc
pop
jle
ret
enter
xchg
add
xor
mov
xchg
inc
xchg
xchg
jno
xor
das
sbb
inc
popf
ss
std
inc
dec
inc
mov
inc
xor
ret
push
sub
gs
cli
sbb
push
or
mov
mov
mov
idiv
in
stos
push
ja
mov
xor
fcmovnbe
inc
in
push
es
xor
or
push
sbb
push
mov
xor
inc
ss
add
sub
outsb
aam
ds
add
pop
addr16
out
test
mov
push
or
mov
rorb
dec
testb
repz
xor
inc
movsb
dec
movsl
fldcw
cltd
fwait
dec
das
xchg
lods
movsl
sub
dec
mov
subb
sub
loopne
mov
cmp
and
mov
cmp
sub
lods
jb
clc
and
add
xor
sahf
js
cmp
mov
add
jge
ja
dec
loop
ja
lds
int3
loope
cmp
adc
sub
mov
daa
dec
jnp
push
mov
and
lods
fisubs
in
inc
in
ljmp
aam
cmpl
jns
cmpb
ror
pop
pop
inc
jge,pn
bound
or
push
or
stos
fidivs
mov
dec
push
call
jl
ficompl
mov
dec
out
loop
cmp
mov
pop
and
mov
sub
pop
nop
or
lret
sub
jo
enter
pop
xchg
add
popa
mov
cmpsb
je
fidivrl
sbb
or
stc
nop
and
pop
or
add
cmpsb
repz
jnp
pushf
je
jo
shrl
enter
filds
aad
sbb
stos
dec
cmp
es
addr16
enter
aam
aaa
sub
dec
sub
bound
lcall
cmp
int
jp
int
jmp
adc
stos
sbb
stos
shl
jp
mov
test
adc
dec
and
mov
cmp
cmp
cmc
test
rcll
dec
jbe
jno
inc
sub
cmova
shlb
xchg
movsl
inc
xor
pop
sti
adc
pop
mov
stc
or
stc
movsl
enter
jl
sbb
fldenv
add
push
dec
inc
loopne
stos
movsl
mov
into
pop
sbb
iret
sub
daa
adc
lret
and
fwait
std
loope
daa
pop
push
mov
mov
inc
enter
dec
clc
dec
rep
pop
pop
add
lcall
dec
add
xor
out
aaa
loopne
push
sub
les
mov
or
stc
jmp
push
fst
xor
imul
imul
and
adc
sub
adc
movsb
jg
test
pop
movsb
jnp
or
rclb
out
sbb
in
mov
leave
fisttps
xor
repz
dec
mov
dec
pop
mov
gs
xchg
nop
or
fdivp
jb
dec
mov
push
data16
fcoms
fwait
rcrl
stos
test
cmp
idiv
pop
scas
jmp
roll
scas
lcall
addb
iret
stos
imul
sbb
sub
inc
sbb
adc
cmpsl
mov
adc
dec
xor
mov
rorl
mov
sub
sbb
outsb
fcomi
daa
xchg
push
mov
test
add
ficompl
ficomps
jmp
lods
push
jp
mov
out
push
mov
shll
aas
ja
pop
scas
adcb
mov
ss
sub
xchg
adc
pushf
jg
pushl
and
xchg
and
jo
gs
jne
and
cld
pop
push
add
mov
fimull
jg
inc
sub
mov
cmc
outsl
loopne
jae
jmp
cmpsb
mov
ret
dec
lock
mov
movsl
sub
orb
inc
and
adc
cmc
fwait
cmpsb
cmpsl
fs
in
cmp
and
adc
mov
popf
outsb
mov
icebp
jb
sbb
in
cmc
xchg
fcompl
fwait
cltd
and
decb
adc
daa
or
jg
jecxz
mov
or
lcall
xor
mov
ds
mov
shll
movsb
popa
jl
mov
sahf
and
xorl
aaa
push
fdivs
stos
ret
xchg
cmp
andb
stc
outsl
enter
testl
sub
and
mov
fldt
div
add
ficoml
imul
mov
pop
mov
mov
xchg
pop
cwtl
inc
mov
mov
lods
test
lock
stos
ds
loopne,pn
xchg
cmp
add
test
jns
fdivrl
arpl
sbb
lea
adc
add
ja
mul
in
sub
mov
cli
inc
or
popf
js
cmp
repz
inc
dec
push
mov
mov
add
in
inc
pop
sub
mov
insb
js
rorl
ja
adc
add
iret
mov
or
lea
pop
add
sub
movsb
std
push
push
inc
aad
xchg
push
fisttps
loope
push
cmc
mov
adc
icebp
js
rclb
inc
mov
movsb
outsl
dec
inc
dec
addr16
xor
imull
cmc
fisubrl
into
cli
lret
sub
cli
xchg
in
inc
in
push
scas
shll
ljmp
dec
inc
sbb
jl
adc
cmp
mov
mov
aas
mov
cmp
add
test
and
mov
and
jmp
lods
jge
out
les
ss
into
stc
push
adc
lea
xlat
cmpsl
mov
sbb
jg
movsl
addr16
cmpsl
mov
sub
xlat
icebp
sbb
dec
mov
stos
mulb
andb
sahf
fs
hlt
sub
mov
cmpsl
pop
aad
adcl
pop
mov
inc
ljmp
cmp
mov
in
jle
dec
jecxz
and
aam
test
mov
or
out
xchg
lret
js
jo
jae
ss
push
loop
inc
insl
or
fdivrl
add
adc
sub
test
stc
insb
pop
add
stos
call
in
out
sbb
push
pop
nop
call
mov
dec
aam
mov
pop
jo
adc
jnp
mov
mov
pop
xorl
jl
jne
sbb
dec
pop
jmp
cmp
and
add
sbb
push
jl
shl
jns
cmp
in
das
shlb
or
or
and
test
cmpl
or
push
in
stc
sub
jecxz
fwait
jl
and
insl
jmp
rcrb
mov
and
push
movsl
adc
imul
aam
add
gs
jge
cmp
xor
stos
and
dec
mov
lcall
push
inc
pop
push
outsb
sahf
outsl
mov
out
pop
data16
mov
rol
sbb
leave
cmp
sbb
sub
jo
xor
lock
fildl
lahf
push
pop
scas
xchg
sbb
mov
inc
push
fsubrl
insb
lods
repz
mov
loop
push
mov
sub
aam
mov
fstl
movsb
xor
scas
dec
ds
sbb
movsb
fiaddl
mov
orb
xchg
adc
iret
push
insb
jno
iret
mov
lret
and
andl
mov
aas
xchg
xlat
pop
je
fwait
xchg
loope
xchg
icebp
daa
pop
je
mov
js
inc
faddl
push
out
mov
cs
xor
xchg
popf
mov
add
jmp
add
jle
sub
testb
mov
xchg
mov
push
lcall
lock
shl
and
imulb
fyl2xp1
xchg
bound
aas
cmp
int
mov
idiv
mov
js
lret
mov
push
in
lock
and
cmpsl
lea
pop
aam
int3
stc
dec
imul
dec
test
fldenv
xor
mov
sbb
inc
mov
aam
pop
pop
lds
add
shrb
push
jmp
push
pcmpgtd
ds
mov
je
in
iret
cld
movsl
or
sbb
je
pop
jge
into
mov
and
pop
ds
mov
shll
bswap
gs
cwtl
sub
push
adc
orb
es
lahf
aad
push
mov
das
and
pusha
shlb
test
sbb
dec
hlt
mov
push
mov
daa
or
add
mov
imul
stos
pop
fiaddl
add
sub
pushf
jge
dec
mov
or
or
in
xchg
jns
mov
sbb
jp
jb
decb
mov
stc
mov
cwtl
push
rcrb
mov
pop
sahf
addb
fwait
or
pop
scas
pop
lahf
or
mov
lea
shrb
aad
outsl
add
sbb
test
repnz
lea
or
into
int3
jmp
into
fisttpl
sub
dec
sbb
std
cmp
cmpl
inc
and
jne
jnp
and
sti
inc
xchg
jae
lods
pusha
inc
pop
mov
popf
cmp
sahf
shll
mov
mov
out
sub
out
pop
mov
jnp
icebp
add
insl
test
icebp
and
gs
gs
popl
or
repz
mov
mov
jle
jns
jmp
std
testb
incb
fmuls
sub
cmp
loop
inc
mov
xchg
xchg
push
shlw
int
cmc
mov
mov
mov
cmp
popf
popa
aas
popa
inc
adc
mov
loopne
mov
jne
lds
in
fimull
dec
cs
stc
sahf
nop
aam
in
sbb
jmp
dec
add
pop
rorl
rcll
fidivrs
push
js
mov
test
cmp
push
xor
jnp
sub
rorl
xor
push
aad
lea
mov
dec
lods
test
out
std
out
fwait
sti
jnp
hlt
push
nop
dec
fmuls
je
jg
add
add
repz
cmp
jg
mov
pop
mov
pop
ds
jnp
dec
push
inc
sbb
mov
xor
iret
add
sbb
mov
push
scas
movsb
inc
mov
popa
jb
mov
push
pop
cmc
pop
imul
in
pop
jb,pt
mov
inc
loopne
xor
iret
or
sbb
not
test
insl
jle
mov
pop
mov
and
push
cmp
mov
cmp
or
ljmp
lcall
je
add
iret
sbb
int
cs
jnp
jns
test
mov
stc
faddl
orl
inc
mov
inc
cmp
add
bound
or
ret
iret
and
into
decl
mov
clc
fildl
push
or
or
popf
inc
xchg
mul
or
add
lahf
sub
mov
xor
jne
pop
inc
std
ret
cs
pop
dec
pop
jns
pop
mov
cmp
cmp
cmp
lds
inc
push
enter
push
jns
jle
pop
xor
hlt
icebp
push
dec
loopne
lods
pop
xchg
loop
sbb
push
std
lock
ja
mov
sbb
gs
jb
xchg
xor
inc
jg
cmpsb
dec
addr16
jbe
icebp
jne
sarb
repz
mov
test
mov
nop
inc
sub
jl
cmp
cli
sbb
icebp
push
movsb
fimull
cmp
mov
je
mov
sub
incb
fs
push
mov
mov
jo
fld
pop
pop
inc
fmull
bound
xchg
adc
sahf
test
insl
ds
jmp
inc
ficomps
dec
dec
mov
dec
rcrl
movsl
jmp
std
xchg
jno
xchg
test
xor
inc
pushf
inc
loopne
cs
xor
sub
das
mov
aad
test
ja
lock
clc
ja
addb
add
jge
loopne
ja
inc
adc
test
scas
xchg
pop
push
shrb
xor
aas
inc
push
repz
mov
cmpsb
fdivrl
shr
mov
dec
leave
arpl
mov
imul
sbbl
jl
ret
test
jnp
jmp
std
addr16
std
cltd
arpl
mov
or
cltd
aad
xchg
pusha
mov
jnp
mov
test
push
jne
xlat
in
sbb
xchg
inc
push
pop
mov
and
std
imul
sub
dec
pushf
inc
sub
inc
lcall
insb
daa
pop
pop
loope
jg
xor
jecxz
incl
lea
sbb
sbb
pop
mov
pop
pop
das
xlat
push
lahf
jp
lea
or
adc
mov
xlat
cmp
sbb
mov
add
jl
insb
jnp
cs
int
ljmp
ss
fisttpll
dec
and
or
rcll
lds
pop
sub
iret
cmp
add
aam
je
cmp
pop
jmp
jl
ljmp
xor
enter
sub
cmc
leave
insb
sahf
xor
popf
lahf
xchg
notb
sub
out
pop
or
mov
in
inc
pop
add
pop
pop
adc
in
icebp
xor
es
push
icebp
jnp
xchg
js
lds
insl
xor
xchg
xchg
loope
fmul
sbbl
push
ds
and
inc
scas
mov
ja
jo
mov
inc
iret
cmp
fistps
stos
cmpsl
inc
rep
xchg
mov
data16
xchg
pop
repnz
ja
notb
xor
dec
fsubl
test
in
or
push
clc
sub
dec
shlb
fstps
imul
xor
inc
divb
jmp
mov
sbb
push
lret
add
pop
mov
xchg
xchg
std
or
xor
clc
mov
pop
mov
adc
xchg
push
pop
pop
mov
xchg
push
jb
cmc
xor
mov
fs
pop
jno
inc
faddp
add
dec
mov
mov
movsl
rorb
adc
lcall
fstpl
xchg
and
shl
scas
jmp
xchg
pushf
push
pop
xchg
arpl
inc
mov
cwtl
aam
test
dec
jle
push
xlat
leave
pusha
fs
cmpsl
push
dec
ss
incb
loop
push
aad
fistps
out
or
jp
push
pop
scas
dec
mov
lcall
pop
fisubrl
lret
iret
sub
sbb
or
jp
push
pop
scas
dec
mov
lcall
pop
fisubrl
lret
lret
stos
fistps
scas
lret
dec
stos
pop
lcall
pop
fisubrl
lret
iret
sub
sbb
or
jp
push
pop
das
dec
inc
mov
outsl
mov
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
repnz
pop
add
jo
das
stos
mov
lea
mov
outsl
rcrl
loope
adc
and
push
out
inc
fbstp
popa
outsl
xchg
das
xorl
mov
adc
dec
loope
or
add
sub
out
dec
cmpsl
pop
repz
mov
pop
nop
xor
adc
stos
je
stos
cwtl
fucomi
int3
mov
adc
sub
sbb
clc
inc
cmpsl
mov
adc
mov
mov
xchg
fdivp
ret
out
mov
inc
ja
sahf
inc
stos
add
rolb
or
loop
lods
movups
cli
inc
xlat
add
xor
adc
jno
sbb
sarl
lock
repnz
jnp
mov
sub
pusha
into
dec
roll
insb
mov
lcall
and
mov
cmp
cmp
scas
loope
xor
ljmp
ss
nop
xlat
xchg
push
movsb
cmpxchg
subb
push
pop
icebp
mov
scas
push
lahf
and
cmp
push
stos
inc
fildll
js
mov
mov
pop
icebp
sub
loope
xchg
pop
lcall
clc
outsb
stc
dec
in
into
push
mov
or
inc
inc
and
and
or
jp
arpl
or
or
int
pushf
fs
push
into
push
mov
jno
popa
aas
xchg
das
sbbl
shrl
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbbl
shrl
pop
icebp
dec
loope
adc
aaa
adc
xor
int
mov
ljmp
cld
call
inc
lret
cmp
pop
adc
push
jmp
mov
inc
ljmp
or
jg
dec
ss
lods
push
jge
xchg
push
jle
mov
cmp
pop
push
xlat
pop
sub
cmp
roll
push
inc
push
icebp
adc
out
out
xor
fwait
mov
test
out
addr16
fisttpl
scas
mov
pop
and
mov
sub
pop
add
mov
insb
inc
fidivrs
inc
outsl
or
and
rcrb
dec
ljmp
jle
or
dec
mov
daa
decb
icebp
jno
mov
lds
mov
xor
add
in
pop
rcr
call
cmpsb
push
sbb
sbb
cmp
clc
ja
cmp
sbb
mov
jp
or
pusha
mov
test
nop
inc
jge
pop
repnz
pop
roll
pop
adc
mov
dec
fidivs
mov
xlat
lret
mov
cmp
cwtl
idivl
fbld
jge
std
xchg
mov
mov
xor
lahf
movsl
pop
sti
ror
add
xchg
inc
add
pop
mov
jecxz
shll
pop
mov
fsts
cmp
mov
mov
pop
push
pop
or
mov
jecxz
jmp
push
sbb
ret
or
jmp
sbb
lcall
jbe
aam
push
sbb
popa
lods
cmp
adc
fstp
fbstp
mov
call
sub
cli
xchg
lret
call
dec
xor
inc
fs
cmp
sub
sub
jl
sti
test
jnp
dec
adc
xchg
mov
jb
dec
loope
pop
pushf
ret
cmp
cmp
xchg
adc
jp
sub
ljmp
ret
pop
or
mov
and
movsb
idivl
fsubs
clc
popf
jge
xlat
arpl
nop
jae
cmpsb
or
lock
movsb
pop
xlat
xor
push
out
xchg
pop
jg
pop
in
pop
lods
scas
enterw
inc
mov
mov
rolb
mov
fisttpl
cmp
test
mov
and
out
loop
jmp
loope
jo
mov
pop
arpl
popf
cmpsb
imul
mov
mov
sbb
sbb
sbb
fs
cmp
sarb
inc
mov
mov
out
mov
cmp
inc
lds
jo
xlat
shll
jne
je
fstpl
jae
mov
jnp
rol
jnp
mov
scas
test
inc
shrl
pushf
jmp
dec
push
ss
call
pop
ret
es
push
push
jp
sub
and
cld
leave
add
sbb
popa
fwait
in
push
dec
push
inc
dec
jnp
mov
pusha
jmp
movsb
pop
cmp
fld1
popa
xchg
pushf
je
pop
adc
xchg
xchg
xchg
das
movsb
les
inc
bound
in
pop
insb
js
stc
vpunpckhdq
test
mov
dec
cmc
divb
popf
inc
cld
andl
mov
ja
mov
aad
mov
jge
sbb
pop
dec
sub
lret
outsb
movsl
add
sti
mov
js
cmc
sub
and
mov
or
test
sub
cmpsb
les
jl
adc
cli
loopne
pop
cmp
inc
push
scas
lret
xchg
pushf
jno
je
addl
pop
js
dec
bound
stos
lock
in
cwtl
pop
mov
mov
sub
add
xchg
push
ret
je
aad
jno
inc
xchg
aam
test
xchg
cld
cwtl
mov
jbe
jge
mov
dec
rclb
mov
dec
sbb
or
pop
imul
add
nop
bound
push
outsb
or
ljmp
mov
push
mov
push
cld
cmpl
sti
fcoms
lcall
mov
test
outsl
or
into
lods
mov
scas
add
lret
int
jo
rcrl
outsb
pop
jo
add
mov
ljmp
or
add
or
xlat
push
adc
mov
xor
in
mov
in
xchg
xchg
and
or
xor
aam
in
mov
sti
inc
lret
xchg
jg
pop
in
xchg
sbb
sub
std
xchg
std
mov
insb
xlat
shrl
jp
sub
jmp
mov
cmc
mov
and
pop
jne
das
add
jmp
js
mov
pop
nop
lret
sbb
push
mov
sub
cmpsb
mov
dec
jg
sbb
or
insb
xor
ss
pop
mov
sbb
and
mov
popa
adc
test
sahf
mov
pop
in
xchg
inc
push
cmp
aam
xchg
sar
notb
mov
rcr
call
notl
mov
cmpsb
in
xor
inc
addb
in
loopne
jl
inc
jo
sbb
imull
dec
loopne
mov
pop
test
lods
lock
leave
cmp
rcrb
xor
adc
arpl
into
mov
insl
mov
pop
sub
xorl
mov
inc
dec
clc
mov
aad
outsl
pop
andl
mov
adc
rcr
mov
xchg
inc
in
push
mov
fdivr
mov
push
push
ret
push
lock
cltd
push
sub
jmp
arpl
out
sbb
lret
push
les
inc
push
adc
sbb
xor
push
stos
cmp
pushf
mov
xchg
pop
mov
pop
mov
dec
adc
add
pop
outsl
cmp
stc
loope
sub
addb
xor
cmp
xchg
je
std
mov
inc
xchg
pop
sahf
lea
repz
sti
ret
cmp
xchg
pop
mov
push
cltd
imul
inc
jl
push
pop
iret
adcl
push
fwait
hlt
cmp
mov
pop
xor
in
inc
cmp
test
fistpl
daa
aaa
mov
mov
dec
sub
jb
xor
dec
xchg
xor
test
les
sub
fdivl
loop
ficompl
xor
stos
ja
aas
loope
and
and
cmc
gs
push
repnz
pop
cmpl
enter
jnp
cmp
sahf
hlt
sub
inc
repz
jb
outsb
in
shl
adc
or
pop
dec
jb
loope
rorb
jl
imulb
xchg
dec
xorb
cmpsb
arpl
or
pop
clc
mov
test
pop
mov
sbb
ds
jno
or
pop
divl
dec
push
mov
or
pop
inc
push
out
roll
shlb
pop
in
ja
mov
sbb
divb
or
push
int
in
lods
daa
stc
lock
sbb
scas
pop
aaa
aam
leave
inc
sbb
push
fsubr
les
cld
mov
scas
pushf
mov
mov
aam
fists
roll
outsl
movsb
xor
fidivrl
loop
test
rorb
or
fidivrl
jae
lret
sbb
lret
iret
xchg
xor
pop
iret
out
adc
ss
pop
out
push
mov
rcll
in
fidivs
and
loopne
sbb
in
cmpsb
inc
xor
dec
lret
jle
or
addl
rcr
dec
call
int
pop
jo
push
sub
dec
scas
lcall
fwait
in
scas
push
les
jmp
xor
call
mov
push
les
ljmp
inc
fdivl
pop
jae
scas
inc
dec
pop
jmp
jp
pop
jg
or
insl
lods
jns
lcall
test
adc
hlt
cmpsb
dec
rcl
aad
out
pop
and
xor
test
xchg
push
lods
insl
push
cmp
test
jl
mov
mov
pop
cltd
orb
jecxz
cli
jae
loope
fwait
scas
add
and
popa
imul
les
ret
and
mul
mov
cs
lods
sbb
pop
mov
xchg
xor
pop
pop
sarb
pop
pop
popf
dec
repz
add
push
rcrb
or
and
mov
mov
lcall
sbb
and
mov
sti
xchg
loope
loop
mov
repnz
pusha
in
test
cbtw
mov
out
nop
adc
fnsave
mov
arpl
andl
mov
push
cmp
ss
or
cmpb
or
popa
outsl
daa
mov
addr16
cmp
iret
jbe
mov
dec
inc
out
cmp
test
loopne
cmpsl
sbb
shll
fstl
jle
mov
pop
iret
jmp
adc
popa
mov
inc
int
xor
loope
popa
sub
pop
jle
cltd
into
push
adc
sahf
repnz
cmpsl
xchg
jno
roll
xor
jnp
mov
test
addr16
insl
or
loopne
popf
adc
negb
mov
mov
incb
lods
sbb
das
jmp
dec
rcrb
adc
or
jne
and
push
adc
xlat
negl
pushf
dec
test
insl
sub
rolb
mov
xor
loope
pop
scas
dec
outsb
mov
mov
in
ss
mov
lret
lea
or
out
icebp
shlb
jo
jns
out
sbb
enter
mov
gs
xor
repz
imul
cmpsb
dec
faddl
jle
sub
into
push
mov
es
mov
loopne
sbb
mov
nop
lret
outsb
lahf
push
popa
or
aas
sub
and
jnp
mov
xlat
cmp
and
mov
aaa
inc
pop
adc
or
dec
int3
mov
jno
dec
popa
js
in
push
out
and
scas
daa
adc
cmp
mov
lods
mov
stos
aam
fcompl
mov
sarb
in
xbegin
push
xor
cmpb
adc
and
jbe
or
adc
inc
mov
sbb
and
orb
push
cld
dec
cld
pusha
xchg
jmp
insl
pop
jle
mov
xchg
fnstcw
add
shrd
test
inc
or
pop
or
cmpsb
add
push
loop
mov
popf
push
inc
shrl
lods
sbbb
adc
xlat
push
sub
mov
js
pcmpeqd
aam
and
mov
aas
xchg
cmp
outsb
sbb
cs
sbb
and
add
xchg
in
adc
push
lret
dec
les
xchg
xor
std
jge
mov
loope
mov
sub
bound
mov
xchg
cmp
jmp
into
repz
inc
mov
pop
dec
mov
mov
add
xor
fadds
and
dec
pop
fwait
imul
adc
sbb
jnp
stos
iret
and
xchg
cmpb
aad
jge
mov
pop
scas
cmp
push
rorb
pop
adc
jb
mov
xor
jnp
cmp
inc
cmpsb
test
push
push
mov
mov
mov
pusha
and
sti
jg
shrl
pop
or
jge,pt
push
int3
push
ret
xor
ljmp
xor
fdiv
cwtl
imul
pop
mov
pop
sbb
adc
fwait
pop
adc
jae
lret
fcompl
inc
data16
dec
ss
insl
sub
ljmp
fidivrl
pusha
add
fistpll
sahf
leave
mov
movsl
ds
test
xchg
xchg
aam
push
jmp
clc
and
fmuls
cmp
icebp
sub
and
orb
jmp
mov
dec
fstpt
jecxz
push
inc
push
jnp
push
dec
sub
inc
movsb
xor
or
and
loop
push
cwtl
and
js
call
data16
xor
popf
push
scas
jmp
test
imulb
push
xchg
add
js
xchg
or
xchg
roll
xor
pop
dec
push
int
mov
cwtl
add
dec
pop
repnz
mov
xchg
aas
push
movsb
loop
stc
xor
jo
js
imul
push
fnstenv
aad
cmp
xchg
jg
pop
neg
mov
xchg
inc
cmp
cmc
mov
shll
mov
cwtl
in
call
ret
xor
idiv
sbb
push
out
icebp
movsl
aaa
inc
mov
ret
mov
cmp
insb
push
jl
imul
addr16
dec
stos
ret
clc
fs
and
jnp
add
sbb
out
cmp
adc
aas
into
lock
les
nop
rorb
mov
es
sub
dec
adc
out
clc
mov
test
roll
mov
subl
inc
sarb
inc
nop
inc
xorb
mov
mov
sbb
push
in
popf
es
or
or
mov
push
int3
into
decb
aam
sub
les
mov
out
or
pop
mov
mov
fiadds
and
movsl
sub
mov
xchg
mov
push
xchg
rcrb
jno
pop
and
lds
call
push
xor
dec
pop
cmp
insl
jg
test
nop
mov
outsb
dec
push
inc
dec
cmpsb
loop
ljmp
ret
jg
or
popf
cmp
jae
push
xlat
loop
push
in
push
push
mov
addr16
jp,pt
insl
or
add
loope
shrl
jo
mov
mul
jne
push
pop
or
scas
push
fisubrl
push
sub
ss
pop
cmp
fwait
rorb
into
or
movsb
cmp
push
lock
popf
xor
adc
cmp
sub
je
and
sbb
lods
push
cwtl
and
addl
pop
cmpsl
mov
sub
mov
loopne
ss
int
bound
sub
out
xchg
push
lock
cli
movsb
pop
mov
push
cs
add
mov
sbb
test
jae
push
orl
js
lods
dec
shll
add
pushf
sti
mov
or
mov
pop
inc
test
sarb
rclb
xor
jg
ljmp
loopne
stc
sbb
div
mov
subb
sub
add
mov
sahf
jno
adc
test
cltd
sub
jmp
xchg
push
das
or
dec
dec
inc
ja
cmp
ds
mov
clc
jbe
shll
push
mov
mov
mov
fs
cmp
stos
or
cld
pop
das
pop
das
xchg
pop
xorb
mov
mov
sub
pop
adc
jp
nop
leave
push
sbb
adc
xor
stos
lea
loope
push
addr16
sbb
iret
jns
pop
loop
push
imul
lods
pusha
out
imul
jle
and
in
lock
pop
cmpsb
push
sar
push
jle
in
mov
inc
test
lods
stos
jbe
jp
in
or
xor
and
cwtl
dec
pusha
ss
divb
inc
lods
dec
cmp
mov
iret
dec
cmpsb
jge
or
dec
enter
divl
into
xchg
mov
push
sub
orl
adcb
jecxz
xor
inc
repz
fdivs
xchg
push
int
iret
dec
fs
outsb
mov
mov
push
pop
stc
lret
fimull
mov
js
cmp
sbb
ja
jg
mov
mov
adcl
and
cmp
into
cmp
lahf
mov
outsl
jno
rorb
aad
sbb
aas
cli
in
inc
pop
cs
shrb
dec
cmp
loope
hlt
out
jo
sbb
bound
pop
hlt
sbb
xchg
int
dec
jnp
push
xlat
out
jp
lods
cmp
pop
or
push
pushf
fnstenv
xchg
pop
mov
lret
mov
sbb
scas
or
les
xchg
scas
cmp
andb
xchg
dec
fs
out
in
push
xor
lods
mov
mov
sbb
xchg
mulb
sbb
inc
ret
or
xchg
sbb
loopne
gs
cltd
jae
mov
lret
lret
clc
dec
pop
push
nop
call
or
in
imul
mov
clc
dec
cmp
adc
cltd
loopne
dec
stos
or
outsl
lcall
mov
mov
mov
outsb
shl
jae
jecxz
xor
leave
aad
adc
mov
movsl
inc
test
jne
jne
push
push
std
pop
mov
out
ja
xlat
fbstp
orl
push
sub
sub
mov
sbbb
cld
in
std
int
xor
ret
pop
mul
std
in
fidivl
pop
dec
adc
rcrb
xchg
or
pushf
inc
add
pop
out
divb
jne
dec
jecxz
out
or
jl
flds
cmc
sub
movl
pushf
mov
aas
sbbl
scas
popa
int
imul
jb
dec
push
jmp
jae
lods
imul
outsb
std
sbb
sub
movsl
jge
dec
mov
mov
loopne
int
gs
test
out
les
or
mov
add
lds
xor
jno
mov
test
pop
jmp
or
fsubl
fldenv
nop
xchg
shll
ret
insb
and
push
xor
nopl
mul
loope
pop
insb
mov
outsb
aas
sbb
cmp
pop
mov
pusha
inc
lahf
repnz
cmpsl
add
inc
or
and
xchg
mov
stos
shlb
inc
fs
nop
ljmp
icebp
cli
sarl
pusha
jecxz
inc
adc
arpl
jmp
jb
sub
xchg
lods
adc
cmc
mov
or
sub
mov
xchg
fmul
xor
rolb
imul
jp
out
pusha
test
cmp
cmpsl
stos
sbb
in
rolb
xor
push
cld
in
sub
test
or
stos
popa
fcmovnu
push
xor
lock
jecxz
rorl
fadds
sbb
mov
rorb
xchg
sub
xor
xor
addr16
stos
mov
mov
dec
adc
lds
rorl
xchg
cld
xor
fsub
cmp
mov
cltd
add
adc
bound
jb
in
je
into
jge
mov
mov
mov
mov
test
xchg
mov
iret
int
xchg
xlat
pop
cmpsb
das
ljmp
add
rcrb
jne
lcall
mov
push
xor
stos
adc
jbe
xchg
or
or
pop
sahf
or
inc
xlat
push
or
jp
inc
cmp
pop
stc
ret
dec
cltd
icebp
or
movsl
cmp
out
sub
ja
pop
jae
imul
or
jmp
bswap
hlt
sbb
insl
ret
xchg
subl
icebp
ffreep
push
fs
adc
dec
xor
cmc
add
aaa
mov
daa
push
cli
addr16
loopne
cld
cmpsb
rcrb
pop
xchg
hlt
adc
test
and
lea
and
decb
test
add
int3
push
cs
xchg
jns
mov
push
mov
sarb
pop
out
jg
push
push
mov
mov
hlt
cmpsb
dec
cmpsb
cmp
scas
sbb
pop
test
into
stos
rcr
fnsave
cmpsb
sub
popf
std
pop
repz
push
jg
jnp
loop
add
cmpsl
aad
sub
cmpsb
lods
pop
les
pop
mov
nop
jae
sub
sub
mov
test
cmpsl
lods
pop
or
adc
inc
sbb
rcrb
sub
xchg
sub
shll
jp
lret
or
xchg
shll
mov
add
rolb
fcoml
jecxz
mov
add
orb
shl
mov
mov
jmp
les
mov
in
and
arpl
cld
fsubrp
movsl
adc
and
bound
xchg
xor
jnp
int3
fwait
pop
pop
or
fistl
xchg
pushf
fisubrs
fbstp
xchg
jo
push
dec
rolb
and
ret
xchg
push
insl
lcall
mul
xchg
hlt
lcall
loop
aam
jp
imul
xchg
sub
les
and
bound
pushf
and
pop
xor
testb
cmp
daa
pop
ficoml
xor
subl
lea
leave
and
add
pusha
pop
xchg
mov
cltd
pushf
push
lret
jmp
inc
sahf
jp
int
adc
push
mov
pushfw
mov
cwtl
push
mov
fbld
daa
xor
push
xchg
sbb
lcall
stos
in
dec
inc
jge
adc
sub
pop
rcrw
in
out
fidivl
insb
ret
jge
adc
adc
hlt
divb
xchg
or
add
mov
or
rcrl
bswap
push
pop
xchg
es
mov
notl
lahf
mov
cli
xchg
jmp
jecxz
shlb
fistps
push
pop
mov
idivl
fs
sbb
and
stos
cwtl
push
push
pop
pusha
fwait
subl
or
movsl
cmc
and
cmp
jle
sub
xchg
pop
es
pop
xchg
and
mov
cwtl
fs
xchg
ffree
mov
inc
jbe
ss
cwtl
sub
xchg
and
push
out
inc
fbstp
popa
aas
xchg
das
sbbl
shrl
pop
icebp
dec
loope
adc
and
push
out
inc
fbstp
popa
aas
xchg
das
sbbl
shrl
pop
icebp
dec
loope
adc
push
jmp
fbstp
popa
cmp
or
pop
lock
cmpsl
adc
and
push
incl
jno
popa
aas
xchg
shrb
mov
or
mov
push
jp
dec
pop
pop
and
dec
sbb
jg
ljmp
fisubrl
lcall
dec
dec
pop
pop
sub
cmp
or
sbb
ljmp
stos
iret
mov
lcall
pop
pop
sub
cmp
or
sbb
ljmp
mov
in
out
hlt
in
and
jp
cmp
sub
push
cmp
orl
and
add
stos
iret
pop
jne
pop
loope
push
and
xlat
add
mov
nop
sbb
aam
inc
xor
scas
loope
xor
jp
mov
je
sub
ja
hlt
fldl2e
ljmp
or
xchg
pop
pop
push
das
out
outsl
cmp
fisttpl
sub
cmp
add
ljmp
pop
push
mov
cwtl
lcall
bound
mov
sbb
cli
adc
push
fisubl
stc
mov
jp
xor
or
gs
mov
adcb
xor
mov
gs
jp
dec
dec
pop
pop
sub
cmp
or
sbb
ljmp
fisubrl
mov
add
or
sbb
jae
outsl
outsl
pop
outsb
stos
lcall
iret
std
into
clc
into
ljmp
or
sbb
aas
cmp
jg
pop
sbb
clc
mov
iret
out
sub
out
lcall
das
pop
and
sbb
cmp
or
sbb
ljmp
stos
stos
mov
lcall
pop
pop
sub
cmp
or
sbb
ljmp
fisubrl
mov
push
icebp
and
xchg
mov
cmp
in
mov
or
dec
xor
outsl
push
xor
fucompp
arpl
lods
jns
or
jp
es
or
mov
pop
push
mov
cmp
out
popf
dec
sub
sbb
jle
test
jno
xor
cltd
mov
jnp
jle
dec
sub
pminub
iret
mov
xor
push
in
jb
mov
dec
or
dec
mov
push
std
das
sahf
outsl
sahf
in
stos
jecxz
insb
dec
fildll
iret
mov
shrl
cmpb
out
add
lock
adc
sub
iret
fcoms
lods
fwait
cmpsb
mov
aaa
dec
add
inc
sarb
xchg
mov
pop
ja
adc
sub
in
cmp
or
sub
xchg
pop
mov
push
lcall
insb
push
popa
jo
test
cwtl
sub
sahf
cmp
dec
push
add
push
popf
xor
stc
dec
push
xor
out
fdivl
rorl
mov
xor
out
loop
es
jbe
lods
jmp
xchg
call
imul
sbb
jle
fsubrl
jecxz
andl
ret
pop
xor
cmpsb
jne
cli
cli
mov
aaa
in
imul
rolb
pop
loope
cmpsl
sbb
jecxz
push
aad
cmp
jbe
mov
mov
inc
ret
sbb
push
push
movq
repnz
dec
fst
cltd
lcall
mulb
in
sub
or
cltd
add
push
add
mov
xchg
call
cmp
lahf
fsubp
data16
jmp
xor
mov
sub
jnp
inc
mov
jge
mov
and
movsb
sbb
mov
ret
lods
loope
rcl
adc
cmp
dec
cmpsb
aam
cmc
dec
fwait
imul
fcoml
add
push
insl
jo
pop
pop
bt
in
nop
iret
pop
inc
dec
cmp
aas
dec
pop
test
push
scas
mov
test
sbb
xor
lcall
fsubl
push
and
ds
pop
mov
fldt
sbb
mov
pop
adc
xor
sahf
shl
outsl
cs
and
out
ja
or
add
repz
fldl
icebp
mov
add
mov
rcrl
add
jnp
add
divb
jecxz
fists
mov
and
in
fdivl
leave
lds
fcmovnu
xchg
xor
sbb
jo
mov
lock
mov
jl
jo
arpl
xor
adc
mov
xchg
xchg
jle
jns
fidivl
xchg
mov
das
imul
sub
sahf
xchg
sbb
bound
les
sbb
jbe
test
sub
daa
xchg
lret
jmp
or
lock
mov
pop
cli
lods
dec
sahf
iret
pop
dec
fs
mov
dec
or
lock
sbb
xor
mov
loop
cmpsb
js
in
mov
scas
cli
lods
test
sbb
pop
lcall
sbb
sahf
loope
xchg
gs
jmp
scas
inc
icebp
mov
in
dec
ret
pop
rep
sub
bound
jmp
jno
push
mov
mov
cltd
aad
jl
mov
arpl
sub
mov
stc
andb
fcomp
mov
pop
xor
popf
xchg
sbb
fdivs
and
push
scas
enter
jbe
push
xor
or
sub
daa
js
push
sub
and
push
or
or
inc
or
ret
frstor
add
cmpsb
sub
mov
dec
add
push
jne
ffree
adc
cmp
mov
xchg
sbb
fsts
and
cmp
fwait
xor
and
pop
imul
popa
xchg
in
bnd
adc
mov
pop
in
mov
jmp
pop
shl
dec
stos
in
sbb
xchg
push
add
nop
push
inc
ret
repz
test
cmp
pop
xchg
int
jecxz
incl
fwait
dec
iret
jns
or
xor
dec
cmp
loope
xchg
ss
or
dec
jl
mov
jp
lods
dec
icebp
inc
cwtl
push
push
sub
sbb
loope
sahf
push
into
xor
sbb
add
or
xlat
dec
or
in
mov
pop
lahf
push
or
mov
int3
rcl
push
fstl
mov
add
sbb
popf
iret
in
test
pop
inc
pminsw
fildll
psrlw
or
lret
and
dec
ljmp
sub
push
xchg
in
fidivrl
and
dec
lods
inc
repnz
aam
stos
test
pop
daa
js
fs
inc
add
lea
push
shr
lcall
mov
and
aam
dec
rclb
xchg
xor
cmpsl
jecxz
dec
or
scas
jae
xchg
mov
nop
ret
sub
test
add
js
outsb
and
addr16
hlt
cmp
and
mov
push
in
mov
xorl
cmpsl
jle
es
cmpsl
mov
push
outsl
pop
test
add
or
push
inc
shlb
daa
mov
inc
jecxz
add
lahf
or
lods
xor
or
dec
sbb
jg
aaa
out
inc
cli
push
jb
mov
insb
xor
cmp
add
adc
movswl
sbb
sbb
pushf
cld
mov
enter
sbb
dec
sbb
ljmp
shrb
pushf
les
loop
int3
enter
stc
mov
jp
rorb
jg
sbb
ret
sahf
stos
stos
jae
fisubs
cld
sub
insl
lock
inc
dec
pushf
lods
das
or
mul
pop
inc
sti
fstps
push
add
inc
mov
mov
jne
hlt
push
fstl
in
inc
es
xchg
xchg
add
xchg
mov
insl
test
push
sti
pop
or
dec
xor
inc
mov
cmp
int3
xlat
xor
inc
ljmp
cmp
daa
iret
pop
stos
add
mov
test
xchg
inc
adc
imull
subb
fisttpl
stc
push
mov
jp
test
sbb
scas
sbb
adc
sbb
dec
sub
lock
jl
and
push
cmp
lds
lds
mov
sbb
mov
add
jl
adc
add
fwait
jmp
sbb
iret
mov
sbb
cmpsl
stc
add
jecxz
repnz
jmp
fsubl
xor
mov
sbb
aas
mov
add
or
sti
xor
adc
in
mov
aam
mov
loope
inc
rclb
mov
xchg
sub
pusha
xchg
push
inc
movd
aad
or
lcall
test
int
aas
mov
fadds
movsl
add
stos
or
sti
popf
in
pop
fnstcw
xchg
lret
add
cmp
addl
movsl
xchg
mov
push
pop
and
arpl
popf
hlt
sbb
or
mov
mov
push
inc
dec
ret
push
push
adc
xor
in
fs
add
jmp
xchg
ss
jb
sbb
call
jmp
pop
cmp
aad
mov
stos
bound
add
cmp
and
push
mov
dec
adc
jae
inc
xchg
inc
or
notl
jo
mov
pusha
inc
add
add
loop
jne
outsb
inc
mov
repnz
jp
xchg
rorb
in
shll
lahf
gs
xor
xchg
mov
push
aas
adc
jnp
cmpsl
jae
fsubrl
shrb
jnp
jbe
lea
push
fidivrl
ss
sub
mov
push
lds
sahf
imul
in
add
insb
je
gs
add
je
dec
dec
fstpl
xlat
outsb
fdivl
lahf
xor
inc
inc
addr16
in
mov
mov
add
cld
fwait
inc
in
data16
mov
lds
stc
cwtl
xchg
mov
jg
or
add
mov
cli
mov
push
popf
loope
cmp
mov
stos
inc
fistpll
lock
gs
inc
xor
test
xor
mov
mov
cltd
mov
inc
xchg
pop
nop
test
mov
repnz
mov
cmp
sub
in
dec
jge
mov
inc
xor
movsb
push
neg
aas
outsb
fsts
icebp
call
mov
inc
addr16
pop
lock
pop
outsb
pop
push
aam
sbb
adc
arpl
xor
scas
mov
push
mov
sub
adc
movsb
jne
pop
icebp
out
jecxz
lcall
and
sti
sub
xchg
orb
outsb
idivb
outsb
xor
ret
sub
aad
comiss
cli
aad
sbb
ljmp
das
stc
scas
dec
aaa
sbb
test
into
inc
in
add
lock
fs
sub
add
push
dec
outsl
xchg
insl
fists
pop
out
pop
lahf
fs
pop
movaps
bound
inc
aad
xchg
aaa
nop
int3
mov
aad
popa
sbb
jns
sub
or
pop
jle
and
mov
outsb
push
sub
mov
and
inc
in
out
mov
mov
out
or
test
pop
xchg
push
and
push
dec
ficoml
sbb
in
cmp
inc
adc
pusha
jecxz
cmp
mov
iret
ljmp
jl
xchg
pop
xchg
fdivl
mov
leave
test
lods
push
nop
in
icebp
shll
or
cmp
sub
stc
push
in
dec
fwait
lret
inc
out
sbb
mov
dec
imul
jl
add
mov
jle
mov
andb
inc
xlat
fdivr
shlb
fisttpll
push
inc
stos
daa
mov
repz
js
test
add
icebp
inc
mov
rclb
lds
add
mov
inc
push
fsubl
mov
pusha
mov
xor
push
repz
adc
pop
fidivl
cmp
outsb
push
cmp
mov
jnp
out
and
in
xor
xchg
sub
dec
push
jl
mov
jbe
mov
hlt
or
lahf
xorb
jbe
ja
imul
sbb
xchg
mov
inc
adc
jno
out
mov
mov
mov
push
addl
add
scas
mov
testl
rcll
mov
dec
lcall
mov
and
lcall
xchg
fistpl
sub
jmp
fcmovu
lods
inc
movsb
out
sub
lahf
out
lea
pop
and
mov
and
inc
pusha
pop
outsl
arpl
mov
aaa
mov
xchg
mov
or
popa
mov
and
nop
mov
icebp
lret
jns
jl
adcl
repz
test
xchg
or
pause
and
scas
jnp
mov
push
mov
fwait
jp
and
loopne
add
mov
xlat
fs
fmulp
rolb
shll
pop
roll
dec
cmp
xor
sbb
cmc
adc
add
sbb
adc
imul
sub
inc
cmp
or
subl
invlpg
push
mov
push
add
rcrb
push
mov
cwtl
inc
fst
das
add
sbb
cmp
cmc
pop
icebp
xor
dec
ficompl
cld
insb
xor
jecxz
sarl
dec
jne
out
arpl
hlt
rcll
dec
add
inc
int3
xchg
imul
or
xchg
subl
jne
mov
mov
xchg
xor
xlat
push
cmp
sbb
push
add
pop
ficomps
dec
addr16
fdivs
fsubr
fwait
testb
daa
sbb
fstp
mov
rclb
int
mov
inc
xor
outsb
cmpsb
mov
cmp
mov
pop
mov
test
jae
andb
pop
mov
cs
xlat
lcall
mov
out
push
xchg
ds
pushf
mov
in
pop
ja
mov
shl
repnz
int
add
inc
lods
repz
sti
jns
or
out
es
pop
or
and
scas
les
xor
leave
in
insl
xor
push
mov
mov
push
mov
jne
popa
adc
popf
dec
pusha
and
insl
std
mov
jns
mov
leave
cmp
fdivs
cmc
xchg
mov
and
jnp
pusha
pop
push
insl
mov
aam
xchg
das
shrl
xor
mov
insb
sti
aam
scas
stos
test
sub
push
inc
stc
xor
cmp
xchg
enter
rcl
mov
jg
sbb
sub
sbb
int
jmp
pop
sbb
push
int3
mov
inc
fwait
sbb
and
xor
cmp
vzeroall
fst
and
arpl
pushf
sbb
sub
sub
fdivrl
lret
stos
adc
movsb
mov
adc
jae
ljmp
cmpsb
test
in
lret
inc
and
jno
test
adc
xchg
adc
dec
ret
jg
jcxz
enter
cmp
xor
cmpsb
mov
xor
in
mov
fst
shlb
aas
call
push
fs
imul
jne
cmp
fsubl
sahf
call
xchg
mov
lods
push
dec
rcl
outsl
jg
out
out
jge
cmp
arpl
push
into
das
add
dec
adcb
mov
adc
lcall
mov
xchg
cltd
lret
dec
les
test
and
mov
cmpsb
movsl
cltd
into
sbbb
pop
outsb
mov
test
mov
pop
adc
mov
inc
jmp
push
xor
shll
cs
xchg
shrl
mov
pop
xchg
sahf
ret
cmp
and
test
movsl
fwait
loop
or
scas
mov
xor
jne
ret
pop
xor
xchg
cmpsl
xorb
mov
cltd
retw
pop
adc
lods
xor
loope
insl
xlat
mov
pop
sbb
jae
lret
push
xchg
lock
fs
and
aam
jno
cmc
mov
adc
lret
adc
loope
out
jmp
xchg
aas
negb
test
push
mov
ja
icebp
push
inc
les
adc
push
xchg
loope
sub
push
imul
insl
faddl
lods
mov
pop
repnz
push
dec
dec
stc
lock
jo
sbb
cltd
mov
loop
sbb
jecxz
iret
xchg
pop
jnp
jp
fnstsw
mov
testl
push
push
and
mov
adc
and
mov
fnstcw
or
ret
pop
mov
mov
jns
or
adc
mulb
aam
dec
adc
mov
mov
adc
in
sti
shl
xchg
rclb
or
push
or
push
int
add
sbb
subl
sbb
outsl
divl
cmp
rcll
sahf
jmp
scas
loop
rcl
push
fistl
dec
testl
mov
stc
sub
dec
or
fwait
shr
xor
hlt
stc
loopne
push
mov
popa
cli
aaa
mov
ss
or
shrb
inc
cmp
es
cmp
bound
push
jmp
lret
pop
xchg
cmp
mov
stos
xor
lods
test
mov
push
ret
loop
xchg
fwait
paddsb
js
lea
sub
sarl
rcl
out
testl
bound
sub
xchg
inc
or
ljmp
je
mov
push
adc
aad
and
add
rorl
jp
idiv
sbb
lock
add
push
imul
pop
adc
dec
sbb
lods
pushf
es
pop
rcr
or
mov
in
ret
in
dec
cmp
jb
add
fs
xchg
pusha
enter
inc
mov
lret
stos
aad
jnp
pop
data16
mov
jmp
pop
dec
jle
jge
cmc
int
sti
dec
push
jne
aas
insb
scas
push
jb
imul
in
ss
int
cli
fs
mov
sub
lds
data16
jbe
pop
lret
sbb
push
push
jb
mov
lea
insb
shrb
movsb
aad
in
rcrl
and
pop
mov
imul
mov
add
sbb
fisubl
in
sub
sub
icebp
shrb
push
out
addr16
imul
pop
ret
cmp
dec
outsb
stos
pop
or
mov
pop
lret
mov
inc
push
xchg
cmp
bound
insl
sub
inc
daa
jp
ret
nop
dec
sti
add
add
mov
adc
mov
insl
pop
push
dec
out
mov
xchg
sarl
inc
pop
loopne
hlt
test
inc
xor
out
pusha
cmp
inc
mov
lret
xor
inc
mov
xchg
add
pop
adc
in
xchg
lods
pusha
mov
hlt
jae
stos
lea
sbb
arpl
ljmp
iret
push
cli
xorl
mov
mov
add
test
mov
addr16
mov
scas
into
xchg
push
push
jb
adcb
incl
dec
pusha
clc
xor
mov
int
push
mov
cmp
rclb
roll
push
push
repz
mov
sub
cwtl
dec
repz
int3
xor
es
inc
mov
outsb
cs
loope
mov
sbb
inc
test
incl
push
ffreep
push
sub
pop
add
and
rcrl
xchg
adc
pop
inc
push
shl
mov
inc
ret
addl
mov
jno
scas
push
lock
inc
mov
dec
mov
aaa
or
mul
jp
std
inc
sahf
lret
ja
jg
mov
push
sar
push
hlt
shl
xor
dec
ljmp
fwait
jne
enter
js
cmp
aam
ret
and
fidivs
push
sub
mov
lods
imul
and
lret
jae
sbbl
xor
in
cmp
pop
fsubl
pop
pop
lret
mov
jp
shlb
add
lahf
mov
dec
sub
fs
js
mov
stos
pop
lret
xchg
out
stos
rcl
fbstp
inc
pop
leave
iret
mov
js
stos
call
sub
sub
sahf
gs
out
clc
call
xchg
mov
inc
cmpsl
aam
adc
and
push
arpl
jno
jae
sarb
sbb
mov
inc
fwait
xor
adc
pop
push
push
stc
jno
inc
data16
xchg
cld
test
leave
enter
jp
jle
xor
lock
dec
sub
pop
jle
adc
addb
int
mov
mov
sub
fildl
jle
int
mov
mov
xchg
leave
mov
leave
imull
jnp
jae
add
jge
idivb
and
or
mov
ja
cli
cmpsb
mov
sti
jmp
jne
mov
push
lahf
leave
iret
fwait
or
std
ud1
inc
sti
pop
cld
dec
aam
adc
mov
cmpsb
ja
in
sub
mov
mov
movsb
test
imul
test
call
repnz
or
mov
call
enter
jo
cmp
adc
jns
aas
and
jns
out
fcomi
and
mov
push
or
nop
dec
pop
mov
cmpsl
mov
jle
repnz
adc
neg
std
add
movl
fmull
icebp
aaa
xor
and
and
rcrb
xchg
cwtl
adcb
pop
pop
dec
sbb
sub
jno
pusha
idivl
xchg
dec
lcall
lods
movsb
fisubrl
add
pop
ficompl
call
push
jecxz
repnz
cmc
jb
inc
dec
cmp
lds
mov
out
lea
pushf
insb
mov
sbb
shl
push
push
dec
push
lahf
dec
decl
mov
mov
icebp
rorl
lods
pop
rcrl
sbb
sub
ja
push
jmp
ljmp
mov
push
enter
std
or
call
cmp
or
std
push
test
mov
cmp
cwtl
daa
idivl
mov
and
pop
dec
sbbl
testb
int3
test
mov
repz
out
push
jns
push
jmp
mov
int3
mov
pop
push
mov
inc
xchg
call
mov
jns
fiaddl
inc
pop
cmp
loopne
xchg
popf
lcall
loope
mov
mov
add
mov
dec
push
and
and
loopne
icebp
sti
sbb
jne
idivl
push
jp
dec
pop
pop
sub
cmp
or
sbb
ljmp
fisubrl
mov
jp
dec
pop
pop
sub
cmp
or
sbb
ljmp
fisubrl
mov
jp
dec
pop
pop
sub
cmp
or
sbb
ljmp
fisubrl
mov
jp
dec
pop
pop
sub
cmp
or
sbb
ljmp
lods
frstor
xor
jne
gs
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
fcmovbe
cmp
mov
hlt
pop
add
or
or
pop
push
add
push
add
inc
add
add
add
jg
lret
add
add
add
push
add
add
add
add
add
add
add
add
add
add
jnp
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
sbb
add
int
push
add
add
add
cli
add
add
add
pop
rolb
enter
add
xor
les
xchg
add
iret
add
stc
add
add
add
add
cmpsl
add
add
add
add
add
sbb
add
add
add
add
add
xchg
add
add
add
mov
add
add
outsl
add
inc
add
lret
add
add
add
inc
add
xchg
add
outsl
add
add
jge
inc
add
jno
and
add
add
add
add
inc
add
add
add
loopne
xor
or
push
add
daa
add
add
add
add
ret
add
add
add
add
sub
xor
jnp
adc
int3
add
sbb
cmp
or
jns
cmp
test
sbb
add
add
add
add
test
lret
add
or
cli
add
push
add
add
add
add
add
and
add
cmp
add
add
add
add
add
add
js
xor
jae
rolb
add
ljmp
add
and
dec
add
dec
add
add
add
dec
add
jmp
add
add
add
add
add
int
xor
cmc
add
add
add
add
xchg
add
rolb
ret
add
add
xchg
add
xor
add
add
loopne
sbb
jecxz
popl
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
mov
fadds
popa
add
add
stos
add
cmc
add
add
add
add
add
add
add
add
add
add
add
add
adc
mov
jg
sub
add
add
jecxz
iret
add
xchg
add
xchg
add
mov
add
add
add
enter
pop
add
sbb
add
add
add
add
stos
add
ja
outsl
add
jae
inc
add
add
mov
add
add
push
add
add
addl
ret
add
int3
add
add
jecxz
cltd
add
add
leave
add
add
add
add
add
add
inc
add
add
add
add
add
insb
test
cmp
cmpb
adc
dec
hlt
cli
testl
mov
mov
jmp
dec
or
and
pop
and
movsb
pop
sbb
nop
mov
pop
rolb
lea
add
mov
insl
or
xchg
es
ja
pop
add
cli
push
add
pop
loop
fcomps
xchg
jecxz
test
mov
ja
xchg
pop
sbb
mov
lret
outsl
popf
addr16
mov
imulb
mov
mov
out
adc
ss
jle
dec
clc
mov
mov
loop
jmp
lahf
popf
cltd
add
push
cltd
out
and
jae
out
fcoml
repz
int
aaa
xor
mov
jg
fsts
mov
iret
mov
or
adc
stos
les
sbb
js
mov
shlb
add
sti
fchs
filds
cmp
dec
dec
xlat
or
push
push
and
mov
fstps
outsb
pop
or
lahf
test
cltd
adc
ljmp
in
mov
cmp
push
xorl
jns
jb
xchg
rorb
mov
xchg
mov
popf
push
jb
adc
lea
mov
cmp
test
push
push
cmp
jnp
gs
test
ja
les
xor
add
xchg
dec
sub
and
lahf
inc
inc
jbe
cmp
cmp
fisttps
adc
inc
rclb
mov
ja
add
nop
iret
insb
inc
mov
inc
imul
sahf
addr16
or
and
or
inc
inc
adc
cld
push
jmp
jmp
dec
stos
es
push
arpl
pop
push
insb
add
fists
mov
out
lcall
mov
xor
dec
xlat
or
fld
dec
jg
sbb
xor
pop
xchg
mov
pushf
lcallw
fwait
add
in
aam
sbb
push
pop
jecxz
push
lahf
mov
adc
jecxz
mov
fmulp
lahf
cs
repz
mov
das
aas
sbb
sbb
out
dec
test
push
sub
mov
outsl
cwtl
mov
scas
or
and
aam
jg
mov
test
cmp
outsl
jge
mov
fdivrl
xor
int3
add
out
adc
dec
sub
fisubs
mov
inc
xchg
sbb
inc
jge
jo
aad
lea
sub
aas
jne
xor
clc
das
add
jmp
and
call
js
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
