call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
pop
ficoms
and
xor
pop
shlb
in
inc
sahf
sbb
cmpsb
jle
outsb
les
xchg
push
in
hlt
cs
adc
adc
xor
inc
sahf
push
mov
mov
dec
sarb
les
push
in
hlt
cs
sub
pop
sahf
dec
mov
scas
test
insl
enter
jmp
cltd
pop
xchg
push
popf
pop
je
adc
push
mov
lea
insl
mov
push
mov
sub
in
mov
jno
lea
imul
mov
mov
imul
or
jns
mov
adc
insl
xchg
imul
or
insb
sti
xchg
imul
daa
dec
cmp
xchg
push
dec
mov
add
mov
mov
je
mov
cld
mov
cli
call
lock
xor
das
in
jmp
jge
inc
arpl
xchg
pop
je
mov
mov
outsb
dec
aad
imul
adc
imul
scas
stc
lahf
filds
mov
jmp
dec
imul
push
les
ds
cmp
ficoms
and
and
push
sahf
dec
mov
scas
popf
pop
mov
jle
outsb
fcompl
int3
push
in
in
inc
ja
jno
inc
push
out
and
cmp
data16
sbb
lock
xchg
dec
sbb
sbb
inc
xchg
pusha
add
adc
inc
fwait
ss
xor
cmp
or
xor
xchg
rorl
jo
sete
inc
insl
lcall
cmp
push
mov
scas
test
dec
movsb
jle
outsb
les
aam
in
hlt
cs
adc
and
xor
inc
sahf
push
mov
scas
test
dec
movsb
jle
outsb
les
aam
in
hlt
cs
xlat
cmpsb
jge
pop
sub
ljmp
stos
mov
aad
orl
shlb
pop
in
ss
nop
xlat
icebp
mov
mov
pop
sbb
imul
lret
das
in
dec
call
adc
sbb
arpl
pushf
mov
dec
stc
lahf
push
rorb
jle
sub
lret
sbb
orl
dec
icebp
jns
push
dec
les
jg
add
test
jg
push
jmp
or
insb
inc
jnp
push
push
cli
sbb
and
mov
mov
stc
adc
cmp
jo
mov
pop
pop
pop
cmp
mov
lret
or
push
loop
js
pop
imul
and
fs
mov
test
ljmp
mov
pusha
pop
xor
mov
std
jle
mov
or
lock
arpl
insb
int
xor
mov
mov
aam
stos
loope
sbb
insl
leave
cli
imul
fldenv
pop
xchg
dec
inc
fstpl
pop
jnp
fwait
incb
cmpsb
xor
test
lods
test
loop
lea
mov
xor
dec
pushf
mov
inc
pop
fs
data16
popf
dec
outsl
outsl
loopne
out
push
jle
inc
out
mov
outsb
lret
hlt
enter
addr16
sbb
jg
and
mov
jae
inc
fs
aam
jns
nop
jb
xchg
cmp
sbb
sub
xor
push
sub
inc
mov
sbb
jg
enter
loop
jo
inc
sahf
pop
movl
lods
sbb
jb
jnp
pop
adc
push
les
sti
lods
lret
es
push
or
pop
mov
loop
mov
sbb
enter
push
mov
cwtl
xor
xor
jo
loope
xlat
dec
shr
jecxz
outsl
aam
mov
sub
scas
jge
mov
lods
int3
xchg
sub
sbb
repz
or
mov
add
mov
cmc
sbb
ds
je
das
shlb
lods
inc
xor
adc
out
shrl
outsl
adc
and
iret
lcall
ds
mov
jge
out
pop
insl
arpl
jecxz
jl
std
fs
cmp
mov
and
dec
shll
pop
xchg
add
jnp
out
push
pop
mov
sub
test
test
cmp
insl
xor
loope
loope
ret
imul
sub
mov
or
out
fistl
inc
mov
fs
loope
xor
lock
xchg
cltd
jo
sbb
stos
ja
clc
cld
pop
sbb
lods
in
fstpt
mov
mov
aaa
idivb
mov
in
jl
jmp
repz
into
data16
mov
out
cmpsl
test
stos
cmp
or
cmc
pop
adc
push
sbb
dec
mov
daa
or
idivb
and
mov
jae
pop
les
sbb
sbb
popa
push
ret
fimull
xor
push
mov
addl
push
pushf
xor
cmpsl
adc
xchg
xor
sbb
sbb
mov
jae
mov
add
in
repnz
fwait
push
pop
xchg
decb
lcall
mov
loop
in
inc
insb
mulb
call
scas
test
movl
xchg
pop
stc
les
xchg
sbb
cld
cld
and
push
loope
lcall
add
fldenv
pop
jp
fsubp
push
outsb
pop
movsb
mov
je
aam
push
icebp
js
insl
in
stc
js
sub
xchg
insl
inc
inc
mov
mov
fstpl
sbb
push
arpl
add
push
cmp
sbb
jle
lods
xchg
dec
jae
push
push
outsb
cmpsl
pushf
je
movsl
inc
xor
mov
ret
int3
push
sbbl
inc
or
iret
push
cli
adc
jmp
xorl
cwtl
push
call
int3
mov
inc
leave
inc
xor
cmp
adc
lret
loopne
aad
pop
or
jmp
push
push
lods
mov
cld
cmp
cmp
push
outsl
xor
or
add
dec
roll
pop
mul
aas
es
sbb
xchg
push
mov
aam
mov
int
sbb
cmpsb
test
ljmp
icebp
dec
addb
dec
or
xor
ret
hlt
ret
inc
mov
aas
or
ret
insb
jno
loopne
mov
call
into
add
mov
sub
dec
sbb
push
test
jmp
rorb
std
or
daa
push
cli
hlt
jae
popa
in
push
xchg
and
lcall
ret
pop
movnti
xchg
je
or
jno
stc
cmp
rcll
nop
pop
movsb
movsb
sbb
push
pop
sub
scas
mov
mov
movsb
cmp
or
pop
xchg
std
adc
mov
inc
mov
xchg
dec
popa
mov
adc
loopne
out
call
jne
shll
mov
notb
mov
mov
dec
jmp
es
in
imul
dec
and
mov
sub
cli
cmc
cmc
clc
hlt
cwtl
iret
xchg
leave
inc
loopne
mov
push
dec
loopne
subl
cmpl
add
imul
add
cld
ret
jge
cmp
imul
das
push
push
pop
std
cmp
divl
mull
mov
fisttpll
inc
xchg
movsb
jnp
and
sbbl
je
fucomip
cmp
movsl
lret
scas
dec
ss
imul
lret
push
pusha
rolb
mov
adc
loope
mov
cmp
inc
xchg
cmpsb
cmp
pop
add
repnz
dec
jnp
outsl
loopne
repz
cmp
mov
mov
test
adc
xchg
pop
sub
mulb
pop
push
insl
dec
dec
loopne
xor
shll
dec
testb
fs
xchg
or
imul
push
pop
dec
leave
mov
jp
sbb
imul
mov
jnp
mov
call
pop
cmp
fucom
lods
cmp
orl
xor
add
push
loope
cmc
or
sbb
jg
mov
xchg
inc
jp
pop
mov
movsb
or
sub
add
aam
jb
lods
cld
sbb
mov
stc
clc
stos
dec
push
iret
js
mov
jno
mov
insl
popf
mov
sub
ficoml
xlat
icebp
xor
ja
push
push
fistpll
push
add
loope
jl
rolb
jle
int
iret
mov
cltd
clc
mov
dec
fstpt
and
mov
test
pop
xchg
aam
lea
fsubrs
mov
das
cmp
fs
jns
and
and
rolb
lds
insl
cmp
mov
lods
pusha
fisttps
pushf
test
and
mov
aas
faddl
ja
test
in
xchg
mov
mov
lret
inc
cltd
mov
dec
adc
rcr
rolb
cmpsb
mov
pop
subl
dec
xchg
push
dec
mov
aam
mov
xor
jae
dec
mov
mov
dec
clc
pop
dec
push
push
mov
push
lock
pusha
mov
lea
and
cmp
xchg
les
hlt
enter
sti
push
sahf
dec
and
dec
mov
scas
mov
xchg
push
ljmp
mov
sbb
orl
cmpsl
jge
sub
stos
push
mov
insb
pushf
dec
sti
enter
fistpl
sub
pop
adc
sub
aam
lahf
cmp
sbb
sbb
push
pusha
xchg
leave
lea
into
pop
push
push
adc
shrl
ret
rorl
rorb
mov
test
xchg
pop
shrb
imul
mov
dec
test
repz
jns
cwtl
xlat
pop
shl
je
dec
gs
mov
mov
rorb
mov
inc
xor
inc
cmc
fiaddl
lret
sub
mov
into
jae
insb
dec
sti
js
lcall
xchg
or
iret
pop
dec
jp
jne
sub
cltd
movsl
in
out
mov
je
insl
sti
mov
mov
decl
jbe
and
ret
cltd
out
int
rcll
mov
hlt
into
aam
vpcomq
and
jge
pop
mov
cmp
gs
jecxz
outsl
movsb
xor
scas
inc
lods
pop
aas
cwtl
stc
or
hlt
mov
repz
inc
cmp
cmc
in
pop
loop
cmp
add
sti
add
jl
inc
jl
mov
sbb
inc
out
test
pop
push
fsubrl
mov
jle
cmp
shl
sbb
jge
cmpsb
pop
into
xor
ret
add
pop
cmpsb
and
stos
outsb
xor
mov
xchg
scas
sub
mov
inc
jno
cmp
aad
js
push
filds
jbe
jb
fistpl
fs
clc
leave
jne
fs
sahf
in
dec
pop
mov
mov
bound
fsubr
lret
cwtl
xor
xchg
xor
gs
mov
sub
cmpsb
pop
sbb
jp
icebp
inc
out
outsl
cmc
or
push
mov
pop
js
clc
fdivr
add
addr16
outsl
insl
into
xchg
inc
adc
rol
sub
dec
ret
and
fcoms
aad
les
scas
xchg
pop
dec
cmp
lods
aad
cmp
adc
xchg
loope
faddp
imull
mov
push
add
and
stos
arpl
arpl
sbb
iret
jb
cmc
stos
dec
jo
and
scas
mov
cs
mov
test
sub
sbb
enter
xchg
xchg
jge
shlb
dec
stos
fwait
iret
daa
lods
push
xor
adc
xchg
cmc
mov
pushf
ja
rcrl
js
jbe
mov
dec
lea
xlat
lret
mov
aas
sbb
pop
xchg
xor
mov
fdivrl
into
inc
out
or
out
sbb
add
dec
cwtl
js
xor
mov
icebp
unpcklps
and
scas
mov
mov
shlb
pop
mov
inc
mov
add
rclb
add
push
add
pop
sarl
xchg
pop
push
inc
push
sbb
or
mov
sub
mov
lcall
cmp
std
pop
lea
lea
pushf
sub
daa
fsubrl
inc
add
pop
ds
push
lret
xor
aam
das
jo
bound
shlb
clc
xor
xlat
inc
push
stc
pop
sbb
repz
jge
xchg
pusha
ret
inc
jns
roll
idiv
push
lods
xchg
aad
inc
ja
and
aaa
popa
mov
dec
lcall
repz
fstpl
aad
es
out
cwtl
loop
nop
int3
insl
repz
hlt
int
sub
pusha
stos
and
ret
repz
data16
and
test
xchg
enter
mov
dec
test
ret
scas
faddl
mov
or
faddl
or
arpl
fwait
xchg
imul
pushf
inc
sub
dec
inc
mov
mov
mov
stos
vpcmpgtw
mov
popf
out
shlb
mov
inc
dec
fsub
cmp
call
mov
inc
adc
mov
cwtl
into
mov
mov
inc
xor
pop
inc
ss
xor
fldcw
mov
jns
sahf
sbb
stos
jno
and
adc
xchg
jbe
repz
push
xchg
popf
stos
stc
fs
nop
ja
jmp
dec
int3
dec
fidivrs
and
insl
inc
dec
mov
divl
jbe
jo
pop
subl
xchg
insl
out
inc
pop
push
daa
add
adc
mov
stos
shl
dec
inc
fsubrl
sti
sbb
push
mov
and
ja
mov
mov
mov
mov
outsb
fildl
in
sub
aad
inc
or
in
push
arpl
pop
fbstp
cli
mov
cld
mov
insl
pop
sub
pushf
dec
cmp
jmp
mov
jnp
rcrb
push
add
fnstsw
pop
scas
aam
es
shl
jl
mov
mov
cmpsb
jmp
in
icebp
mov
movsb
xor
mov
and
push
bound
insl
out
add
jno
leave
lcall
xchg
mov
mov
and
into
jmp
xlat
sbb
pop
loope
imul
pop
cmpsb
jge
rcrb
outsb
fsubrs
pop
outsl
lods
nop
mov
repz
xchg
lret
aam
mov
lret
dec
data16
sub
pop
in
lea
xchg
in
out
pop
xlat
and
mov
or
sub
addr16
int3
push
aam
movsl
xchg
jns
xchg
jg
or
enter
sbb
pop
xlat
push
rcll
mov
push
mov
nop
popf
add
jb
mov
popa
inc
or
out
sahf
dec
sbbb
aas
stos
mov
fnsave
pop
push
test
push
xor
xchg
mov
mov
leave
cmpsl
dec
daa
ficompl
pop
cli
movsl
or
pop
push
loope
adc
dec
cltd
inc
ss
fneni(8087
dec
test
in
pusha
pop
sbb
call
hlt
in
pop
imulb
aas
lods
pop
int3
sti
arpl
mov
lcall
cmpsb
sbb
ljmp
shll
or
imul
aam
lret
mov
stos
mov
gs
test
sar
stos
stos
sub
adc
add
xor
mov
ret
pop
daa
leave
and
dec
push
jns
inc
aaa
adc
pop
xchg
pop
test
mov
fldcw
push
cmpsl
inc
testb
mov
dec
aad
mov
loopne
test
ljmp
pusha
or
movsl
and
pop
xor
popl
stos
pop
cmc
repnz
push
aam
les
and
xchg
jnp
mov
outsl
push
iret
gs
sbb
push
push
mov
popa
push
and
ja,pt
inc
in
pop
js
sub
shlb
xchg
lret
es
andl
push
mov
sbb
xor
jb
xchg
add
cmp
rorl
adc
sahf
push
and
rol
push
call
mov
and
adc
mov
sar
adcl
aad
cmpl
inc
jae
cmpsl
mov
sbb
mov
insb
and
ret
out
or
aam
je
push
and
mov
sub
enter
mov
dec
inc
out
loope
push
cmp
in
mov
in
aad
dec
sub
xor
or
lret
mov
idiv
lret
rcrb
push
clc
mov
add
mov
lock
stos
xchg
inc
xchg
sbb
loop
insb
mov
pop
mov
xchg
xchg
push
jle
jne
addr16
sub
push
push
mov
mov
jmp
jge
movsb
push
int
push
aad
pop
sub
jbe
jnp
sar
scas
mov
shrb
sti
lahf
sub
add
inc
ret
jle
stos
mov
pop
mov
dec
push
repz
adc
xor
inc
stc
mov
add
fldenv
loopne
and
push
cld
jp
hlt
js
mov
rcll
in
sbb
stos
mov
movsb
cmp
jne
xor
inc
pop
lods
xor
xor
or
xchg
or
sbb
loop
aaa
testb
cs
mov
and
int3
add
out
push
lret
insb
xlat
mov
and
nop
aam
and
xchg
inc
adc
push
pusha
das
lock
add
ss
inc
rcr
cmpsb
xor
ds
mov
xchg
pop
mov
mov
xor
into
lock
adc
cmpsl
or
fiadds
ficomps
fnstenv
lea
and
add
xchg
push
mull
pop
pop
stos
jecxz
xor
add
bound
or
pop
shr
cmpsl
mov
pop
fcoml
pop
das
cld
sub
inc
inc
pop
idivb
sbb
and
lret
fwait
lds
lea
sbb
dec
sbb
cmpsb
cltd
xor
pop
xor
pushf
popf
shll
xchg
cmp
adc
dec
jmp
and
cmpsl
out
imul
dec
ljmp
cwtl
pop
insb
cmp
test
imul
testl
stos
lret
and
jb
push
push
gs
xchg
aas
or
push
jl
es
rcl
out
pusha
mov
aam
mulb
call
les
mov
xor
aaa
sub
sub
xchg
add
movsb
bound
test
int3
add
cmpsb
push
xchg
movsb
push
scas
cld
iret
insb
jnp
dec
pop
andb
jno
arpl
push
pop
xchg
inc
add
imul
sti
dec
ss
jno
ss
jnp
dec
adc
push
sbb
fmul
push
clc
jbe
sub
adc
es
push
sti
jge
adc
jnp
mov
decb
jb
or
sbb
mov
test
or
call
sbb
sub
and
push
mov
lods
or
inc
mov
jbe
mov
mov
clc
sti
or
jge
iret
adc
out
adcl
out
in
or
stos
jns
in
loope
scas
fisubrl
jge
push
roll
mov
dec
add
inc
into
in
fiaddl
jb
jno
mov
ja
mov
mov
cwtl
adc
cmpl
sub
mov
hlt
push
arpl
out
lret
push
jle
ljmp
out
std
ljmp
mov
inc
adc
test
js
cld
mov
adc
add
mov
std
mov
aam
cmp
cmpsl
jne
int3
sub
je
cmp
dec
and
inc
inc
cmp
loope
fsubl
bound
cmp
cmp
imul
push
mov
leave
or
xchg
adc
repnz
sub
sbb
sbbl
fmuls
fisubrl
ds
out
and
fcmovb
stos
bound
mov
insl
add
hlt
adc
es
int
movsl
aad
pop
mov
push
pcmpeqw
incb
enter
add
xchg
int3
push
xchg
in
enter
icebp
push
fiaddl
subb
or
inc
inc
xor
inc
adc
repz
pop
push
iret
xchg
xor
inc
dec
jb
push
cli
scas
imul
lahf
sub
mov
pop
xor
inc
push
insl
pop
popf
mov
pop
fcomps
inc
pushf
hlt
ret
inc
imul
inc
xchg
dec
cmp
aam
push
mov
lcall
mov
push
xchg
xchg
mov
mov
test
jmp
je
loop
fnstcw
in
addr16
mov
in
or
notl
insb
xchg
pop
aad
out
inc
inc
adc
push
push
jge
mov
icebp
sub
fwait
push
movb
jmp
fcoml
fwait
add
mov
sbbl
pop
adc
dec
loop
and
std
xchg
inc
inc
push
xchg
mov
and
sahf
xor
inc
inc
xlat
mov
gs
pop
and
hlt
hlt
mull
iret
xchg
lods
rcll
cmpsb
lods
mov
xor
push
adc
sub
xor
test
pop
push
mov
inc
leave
add
add
jae
or
dec
rolb
add
out
mov
add
cli
loop
jmp
test
mov
jbe
rolb
inc
cmpsl
adc
shr
add
lods
lret
pushf
rcr
push
push
in
imul
xchg
push
cmovae
xor
push
aas
icebp
xor
pop
jmp
add
sbb
or
repnz
clc
jecxz
push
xchg
ljmp
or
cmp
arpl
fadds
mov
push
sar
xchg
cwtl
jle
sbb
push
mov
or
jns
sub
add
pop
roll
push
mov
pop
out
ret
cmc
test
fsubp
int3
push
popa
stos
test
xchg
and
push
jo
sar
dec
int
jle
add
mov
mov
das
or
insb
jae
push
jp
sub
clc
dec
div
xlat
ret
out
arpl
mov
cmpsl
jmp
cli
test
mov
sahf
out
arpl
pop
frstor
ds
or
gs
subb
std
lods
cmp
inc
enter
jmp
nop
jmp
out
shrl
sub
inc
movsb
arpl
lcall
pop
xor
es
and
out
add
sub
mov
push
aad
jle
in
xchg
in
jns
lods
xchg
jns
test
or
xlat
push
ljmp
jne
mov
fldcw
into
fdivrp
xor
inc
sahf
push
mov
scas
test
dec
movsb
jle
outsb
les
aam
in
hlt
cs
adc
and
xor
inc
sahf
push
mov
scas
test
dec
movsb
jle
outsb
les
aam
in
hlt
cs
adc
and
xor
inc
sahf
push
mov
scas
test
dec
mov
push
rorb
in
lds
xor
and
adc
xor
inc
sahf
push
mov
mov
imul
jle
sbb
rorl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
into
bound
push
add
push
pop
add
jnp
mov
imulb
mov
rclb
and
push
add
jb
bound
push
push
insb
mov
mulb
cmpsb
loop
rclb
in
mov
sub
pop
out
jo
mov
andl
mov
push
arpl
inc
and
jge
fwait
add
adc
pop
leave
rcrb
jge
repz
ret
sub
and
jle
jbe
leave
jmp
bound
pop
cmp
shlb
out
mov
ss
data16
dec
repnz
sahf
inc
fwait
jb
sbb
xchg
sub
cmp
jne
leave
add
cmp
add
daa
leavew
push
pop
xchg
adc
repz
movsl
inc
insl
sub
xchg
sub
mov
mov
inc
mov
inc
xchg
pop
mov
cmp
jb
cwtl
mov
and
fnstsw
cmp
out
inc
push
loope
repnz
ret
xchg
inc
data16
es
bound
push
scas
rclb
or
nop
enter
test
xchg
repnz
add
jle
outsb
dec
xlat
inc
unpckhps
ja
xchg
mov
xchg
aaa
mov
iret
mov
repnz
shrl
add
outsb
dec
and
push
gs
shll
mov
mov
xlat
mov
inc
inc
ret
pop
outsb
arpl
bound
push
push
inc
out
mulb
cmpsb
repnz
xchg
xchg
ret
jbe
inc
adc
es
bound
push
push
inc
out
mulb
cmpsb
repnz
xchg
xchg
ret
mov
out
outsl
or
push
pop
imul
jge
std
inc
fsub
add
push
xor
stos
add
lea
sbb
mov
adc
leave
and
sti
bound
fldl
mov
out
rcl
dec
test
xchg
and
loope
cmp
and
xchg
iretw
jmp
aaa
or
inc
jecxz
outsb
xchg
adc
sarb
dec
mov
jge
mov
mov
xor
adc
sub
mov
and
lret
or
movsb
jne
and
inc
or
and
push
into
test
outsb
and
push
jmp
xchg
loopne
pop
test
mov
leave
andb
bound
mov
xchg
cmp
fildll
mov
jae
cs
loope
dec
fidivrs
adc
and
jne
push
and
stc
jns
aam
imul
and
mov
mov
cmpsb
pop
and
insb
dec
loopne
or
jmp
and
mov
roll
or
rcll
add
popf
jnp
movsl
pop
fstps
int
dec
in
cmc
and
inc
push
xchg
into
mov
orb
cmp
decb
ja
ret
jno
xchg
mov
mov
lods
adc
pusha
je
or
jl
add
push
out
rcrl
push
cli
adc
hlt
dec
test
mov
mov
clc
sub
stc
addr16
scas
loope
mov
jecxz
adc
lds
sub
pop
jbe
int
sub
idivl
push
jnp
dec
xor
ja
dec
punpckldq
or
repz
jo
add
ljmp
movsl
mov
dec
dec
push
jns
push
loop
lods
add
and
jo
ljmp
pop
mov
ret
mov
pushf
jmp
sub
fwait
xor
fmul
add
xchg
inc
testb
lods
imul
orb
jo
sub
popf
popa
daa
arpl
adc
sub
movsb
mov
pop
std
fwait
sbbb
stc
mov
loope
inc
mov
fcomip
sub
sub
fsubrl
mov
mov
dec
mov
mov
inc
outsl
imul
push
pop
pop
out
or
cmp
cmpl
loopne
jns,pn
and
test
push
int3
push
mov
push
std
popf
fucomp
push
xor
test
push
sbb
adc
lods
packssdw
jle
cs
adc
push
cltd
popf
aaa
daa
push
int3
push
xor
sub
insl
cld
xor
test
shl
mov
in
cmpsb
stc
sbb
adc
loop
xor
mov
out
clc
call
sub
data16
test
and
stc
fsub
outsl
or
lcall
jmp
sbb
dec
cmp
cwtl
sub
push
cmp
add
pop
sbb
or
mov
shlb
sahf
leave
jmp
mov
loope
xchg
add
add
sub
scas
dec
nop
sti
into
fadds
mov
ret
neg
adc
mov
adc
inc
inc
cmpsl
pop
push
jae
stc
sbb
lfs
into
cmp
enter
xor
into
sub
ror
mov
sub
fxtract
mov
lods
pop
test
add
shrl
push
hlt
hlt
lock
arpl
push
popa
push
in
lea
jns
jnp
ljmp
dec
cmpsl
xor
and
or
jmp
jb
sbb
loopne
mov
and
mov
lods
in
or
test
mov
add
pop
inc
les
sub
mov
rcll
pop
push
pop
data16
cmp
cld
mov
xchg
pop
sbb
ss
jle
jb
outsb
stos
ror
movsl
push
mov
hlt
fmulp
clc
add
into
dec
jo
adc
fimuls
inc
mov
pop
adc
stc
aam
daa
in
jl
mov
movsb
and
jle
mov
push
pop
daa
mov
xorb
fadds
lock
jmp
xor
sbb
jb
or
dec
outsb
jno
and
pusha
jnp
cld
sub
popf
fbstp
push
or
iret
xchg
jns
mov
loopne
mov
fidivs
leave
movsb
mov
imul
xor
jbe
pop
pop
testl
inc
fistpll
and
add
adc
roll
push
icebp
outsl
std
mov
repz
and
lea
pop
xor
or
add
adc
adc
enter
js
mov
or
and
pop
jns
push
cmp
and
xchg
pop
xchg
mov
and
xchg
shll
arpl
aas
outsb
lds
arpl
stc
push
sti
dec
push
sti
push
pusha
clc
sub
push
adc
jb
cmc
out
pop
push
inc
lods
cld
stc
push
aas
subl
cld
lret
ja
xor
or
xor
es
mov
add
mov
roll
ljmp
jno
in
sub
mov
pusha
adc
scas
sbb
pop
push
or
in
push
neg
out
ret
inc
repz
and
lods
aad
roll
icebp
mov
mov
out
jmp
jo
decl
pop
js
popa
add
loopne
pusha
stos
add
xorl
xchg
shrb
iret
in
lcall
add
enter
adc
inc
ljmp
loopne
mov
cld
add
cs
lods
push
adc
sub
mov
inc
mov
sti
or
dec
pop
stos
sub
mov
jae
mov
cli
dec
cmp
jecxz
lret
pop
imul
mov
xchg
ror
mov
pop
loopne
fistpl
push
and
shll
or
jns
mov
sti
cmp
cld
leave
and
fsubrl
imul
jb
mov
sbb
js
repz
outsb
les
cwtl
sti
push
flds
ss
xchg
mov
icebp
js
mov
adc
jb
pop
sub
pop
stos
pop
dec
dec
das
out
in
and
or
xor
mov
addb
mov
jns
pop
shrb
data16
movsb
sahf
xor
shlb
jno
cmp
dec
pop
lahf
gs
stc
in
fldt
pop
mov
xor
push
mov
aas
daa
fidivl
sbb
sbb
das
loop
mov
arpl
call
or
in
arpl
sbb
mov
mov
dec
adc
shll
andb
sub
mov
int
and
and
les
notl
sub
jns
push
or
dec
dec
or
sub
dec
imul
add
ds
mov
ret
sbb
inc
add
test
rclb
into
xchg
ja
and
cmp
test
hlt
jg
inc
int3
sbb
loop
add
fwait
test
pop
inc
xor
stc
dec
addb
or
adc
sbbl
pusha
aam
lock
xchg
jp
mov
lahf
inc
sub
jbe
fsub
mov
cmp
leave
and
mov
mov
subl
push
adc
inc
push
out
int3
rcll
and
fwait
jns
adc
cwtl
ja
int3
cli
stos
cmpsb
lahf
popl
jns
cltd
jo
jp
adc
push
or
add
int3
lret
outsl
or
test
fwait
aaa
sti
cmc
ds
incl
mov
jmp
loop
inc
or
imul
sub
add
outsl
fisubs
xchg
mov
push
xchg
dec
icebp
hlt
outsl
xor
jmp
push
pop
jmp
test
inc
push
cmp
out
inc
inc
push
xchg
jl
mov
js
dec
in
in
fmull
xchg
pop
or
xor
cmp
les
mov
push
xor
adcl
cld
aam
dec
sbb
pop
mov
xor
scas
push
or
in
dec
call
jp
pop
stc
jnp
cmp
inc
mov
in
popf
xchg
push
lods
cmc
out
push
pop
iret
xchg
add
inc
ja
and
mov
bound
xor
loope
loope
xchg
loopne
repnz
dec
fistps
daa
cmp
out
pop
push
clc
mov
mov
jns
inc
rcr
fsts
repz
subl
jg
adc
fcompp
pop
xchg
out
and
jno
add
mov
sbb
or
jb
jo
mov
call
and
lods
push
xor
shll
jg
or
fdivrl
aaa
test
sub
sbb
ds
jns
in
stos
cmp
in
cmp
loope
mov
xchg
jle
insl
inc
sub
or
xchg
sub
lea
jnp
roll
pop
or
mov
scas
jge
or
into
sbb
push
pop
sbb
adc
xchg
and
lds
scas
ljmp
inc
jne
rolb
pop
dec
mov
inc
lcall
shrb
loop
repnz
mov
mov
push
out
call
dec
movsl
test
cs
add
fwait
xchg
push
stos
out
outsb
add
into
xchg
cmp
lret
mov
sbb
cwtl
not
in
ja
sarb
orl
adc
sbb
push
dec
sub
sub
sub
roll
es
fidivl
in
pop
fimuls
add
mov
sbb
adc
outsl
stos
mov
ficomps
adc
dec
and
cltd
push
stos
sbb
mov
push
cltd
mov
and
push
cmpsl
hlt
adc
orb
movsb
mov
or
leave
push
push
int3
push
fwait
ds
xchg
inc
pop
call
mov
pushf
rol
aas
in
cli
mov
movsl
push
jg
xor
xor
sbb
push
cs
fst
jo
ss
mov
cld
aam
adc
cwtl
mov
or
mov
movsl
mov
dec
mov
cmc
loopne
fsubrs
sar
in
decb
cmc
jmp
test
xchg
xchg
outsb
aam
adc
out
mov
fadd
add
imul
mov
mov
mov
jp
mov
negl
and
cltd
cmpsb
mov
mov
xchg
inc
dec
mov
inc
nop
push
cmpsb
int
push
add
push
call
cmpsl
push
fcoms
jge
lret
cmp
out
push
pop
xor
xchg
push
add
lods
sub
dec
aaa
mov
loopne
int3
mov
pop
or
lods
movsl
shlb
inc
pop
mov
bound
mov
push
divl
outsl
hlt
hlt
popf
push
and
cmpb
enter
cli
push
les
fisttpll
imulb
mov
rorb
jl
jge
lret
jb
pop
sub
add
and
and
jp
push
pop
loopne
in
inc
adc
inc
mov
out
xlat
dec
dec
pop
xchg
andb
xchg
scas
div
xchg
push
insl
outsl
jae
outsb
mov
and
pop
adc
loope
dec
std
scas
and
dec
lahf
cli
inc
sbb
jbe
vpcmpeqb
lret
jne
fcoms
adc
mov
sbb
outsb
xor
std
test
and
or
adc
xchg
adc
rorl
jmp
mov
sarb
lock
leave
std
jle
pop
mov
jne
or
ja
xchg
mov
idiv
pop
mov
jle
lahf
jbe
lcall
in
xchg
lds
pop
ret
mov
dec
jl
add
outsl
adc
pop
outsb
fdivrs
jne
loopne
ds
into
lods
in
ljmp
xor
ljmp
movsb
pusha
lret
adc
pop
loop
cmovnp
xor
mov
and
mov
adc
push
repz
add
decb
or
and
ds
scas
cmp
jne
mov
cmc
mov
sbbl
in
arpl
mov
adc
xor
aam
sbb
lcall
push
fcomp
xor
jnp
and
dec
pop
sub
mov
enter
cmpsl
cmp
movsb
movsl
mov
nop
pop
adc
sbb
dec
xchg
out
lret
scas
mov
sub
daa
add
jmp
and
or
pop
movsb
jmp
les
test
jbe
xchg
lods
push
xchg
xor
jo
push
pop
test
enter
or
dec
test
sbb
xor
mov
movsb
stos
pop
test
mov
push
push
mov
xchg
adc
push
push
inc
daa
xor
cmp
into
pop
cmp
adc
je
pusha
addr16
pop
out
add
lahf
push
sbb
fstpt
sub
es
fiadds
jo
xchg
add
arpl
or
lret
xchg
aaa
popa
jmp
push
jl
pop
aaa
mov
fists
insl
not
call
push
xchg
push
cmp
aad
mov
clc
cmp
test
xor
lcall
push
push
stos
clc
jl
or
leave
or
pop
inc
movsl
sub
mov
or
push
aad
xor
popa
lods
fisttpl
shl
push
scas
call
aaa
lret
vmovq
or
out
sub
ljmp
ljmp
sbb
adc
xchg
push
mov
mov
mov
mov
test
fdivr
loopne
inc
mov
sub
loope
dec
adc
pop
lds
jne
push
sarb
sahf
xor
sub
add
repnz
mov
jmp
jo
inc
lea
lea
and
unpcklps
cld
scas
std
sbb
sarb
mov
pop
divb
enter
sub
fldl
pop
mov
xchg
pop
ror
sub
out
push
test
push
mov
push
fs
rcrl
pop
cmp
bswap
les
loopne
imul
and
push
push
nop
xchg
pop
inc
loopw
add
fidivrs
mov
rcrl
cltd
lods
adcl
pop
mov
mov
addb
add
mov
pop
idiv
fidivl
mov
test
pop
adc
es
mov
ja
inc
popa
push
clc
addl
ret
cwtl
jae
pusha
add
out
mov
push
int3
aam
out
inc
mov
ds
jns
fisttpl
pop
cltd
js
pop
sbb
cmp
sbb
cmp
iret
cltd
std
mov
inc
mov
mov
inc
pop
and
inc
jns
cld
dec
movsb
inc
out
push
cmp
xchg
test
loopne
mov
dec
das
mov
ret
lret
push
mov
fcomi
push
dec
or
loope
jp
add
mov
xor
inc
jg
sbb
or
push
lahf
xchg
fldcw
mov
pop
mov
or
jb
mov
mov
mov
sub
aas
stc
mov
jl
clc
xor
fs
push
les
repnz
leave
repnz
jmp
fcomps
mov
pop
sbb
mov
sbb
scas
sbb
xchg
mov
mov
dec
scas
mov
mov
or
jecxz
imul
push
lods
into
rcll
xorl
sbb
je
pop
cmp
mov
inc
cmp
imul
sub
mov
xchg
mov
stos
enter
popf
cmpsb
sarl
popa
mov
gs
add
sar
testb
mov
fdivl
pop
andl
cmc
push
fisubl
jge
sub
es
ja
test
aam
insb
js
cld
push
add
out
inc
into
push
inc
pusha
push
test
aaa
aad
dec
xor
jno
sbb
xlat
inc
mov
mov
sub
in
jl
push
sarb
mov
test
aas
jge
mov
test
or
mov
jb
je
dec
cmp
das
jbe
sub
dec
movsb
stos
mov
loope
iret
push
xchg
cmp
jmp
jmp
cltd
xor
xchg
push
clc
mov
into
or
sbb
or
sub
inc
push
sbb
in
sbb
push
adc
and
push
cmp
sbb
cmpsb
cmpsl
mov
xor
push
jge
adc
mov
ret
inc
add
sub
lea
jle
test
adcl
ljmp
pop
std
repz
push
outsb
push
in
inc
inc
add
xlat
mov
push
lret
jne
and
xchg
xchg
cmp
or
mov
pop
out
insl
fs
cwtl
fimuls
imul
sub
mov
js
fdivrl
int
out
and
jg
sub
inc
aad
push
add
popa
and
xchg
outsb
shlb
dec
outsb
jl
repnz
push
mov
test
pop
nop
inc
aam
dec
loop
test
out
loopne
sarb
loopne
cmp
dec
sar
aad
ret
lock
ret
arpl
dec
dec
ss
push
mov
stos
dec
test
add
mov
lods
jbe
test
rclb
insl
lcall
pushf
hlt
xor
or
cmp
dec
jnp
repz
and
xchg
out
ret
jo
mov
mov
xor
cmp
add
divb
andl
xchg
leave
outsb
adc
clc
push
leave
test
sub
pop
stc
mov
pop
mov
mov
out
xchg
and
push
mov
mov
cld
jo
mov
dec
out
push
xchg
pushf
addl
rolb
jle
inc
mov
xor
cli
xchg
xchg
dec
dec
pop
ret
test
scas
push
test
rorl
loope
push
add
adc
cmp
test
ret
or
adc
xchg
mov
stos
xchg
xor
mov
xchg
mov
ja
and
stos
bound
xor
and
cwtl
mov
test
mov
bndstx
mov
nop
and
and
das
push
jo
xchg
add
rolb
movsl
xor
mov
clc
rcr
leave
cli
cmovne
int
ret
and
adc
jge
lea
mov
xlat
stos
adc
aam
cld
fbstp
add
sub
xchg
test
and
cli
fidivrs
sub
in
cwtl
cmp
push
or
arpl
push
outsl
cmp
je
jmp
jl
lods
cli
cltd
inc
fbld
enter
loope
pop
pop
sub
jne
or
inc
loop
mov
dec
lea
pop
inc
jmp
rclb
inc
mov
cmp
sti
push
cmp
popf
sub
pop
lcall
xor
push
cltd
cmpsl
mov
ret
pusha
ret
mov
nop
test
fisubrs
int
cmc
lods
lods
pop
pop
sbb
mov
mov
or
and
jnp
mov
call
mov
dec
jge
inc
std
adc
jns
sbb
fsubrl
jge
jg
imul
pushf
jecxz
rep
lcall
add
mull
jmp
stos
ficompl
repnz
aad
lods
lods
jmp
shrl
and
xchg
add
mov
aaa
cmpsb
adc
xchg
or
lods
or
inc
adc
mov
mov
push
addr16
mov
aas
inc
xor
fcoms
and
mov
loopne
sbb
hlt
jp
js
pop
orb
enter
mov
mov
adc
fucomi
enter
fwait
mov
fisubrl
mov
mov
dec
je
inc
repnz
cmp
int
and
adc
mov
jbe
movsb
jb
mov
xor
cmp
mov
stos
inc
sub
mov
sub
jp
data16
mov
lcall
orl
lods
xchg
mov
push
shrl
push
push
xor
sub
mov
movsb
sbb
stos
xchg
lods
xchg
pop
push
fwait
pop
popa
dec
jo
into
pop
rorb
mov
sub
fisubl
inc
or
lahf
cmp
dec
jb
adc
ljmp
sti
sub
or
mov
inc
mov
sub
int
jb
cmpsl
les
push
sub
pop
fiaddl
je
jecxz
dec
jecxz
push
loope
inc
pavgw
jne
in
ret
dec
lock
pop
adc
dec
lcall
xchg
inc
mov
dec
push
jg
icebp
stc
push
daa
and
fstpt
jno
mov
enter
mov
fmuls
xlat
or
inc
mov
pop
leave
pusha
pop
imul
mov
pop
jo
es
xlat
iret
or
push
ficomps
bound
fistpl
jae
test
rol
pop
xchg
lock
mov
adc
repz
sahf
pop
les
pop
jns
es
pop
out
enter
xchg
sub
aaa
dec
sbb
adc
sbb
push
mov
and
fnstenv
daa
sbb
lods
jp
andl
sahf
mov
sahf
cli
nop
jb
pop
cld
inc
int
mov
add
dec
cmp
fbstp
in
sbb
sub
jno
in
dec
add
jb
bound
push
push
inc
out
mulb
cmpsb
repnz
xchg
xchg
ret
jbe
inc
adc
es
bound
push
push
inc
out
mulb
cmpsb
repnz
xchg
xchg
ret
jne
push
or
daa
jb
or
push
pop
inc
loop
mulb
cmpsb
imulb
es
pop
into
idivb
es
bound
rclb
or
cmc
rorl
imul
add
add
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jb
inc
rcll
mov
pop
xchg
jecxz
bnd
inc
rclb
and
adc
jb
inc
rcll
mov
adc
repnz
bnd
inc
fcoml
inc
xorb
add
icebp
pop
rorl
mov
adc
popf
and
aas
mov
lds
lods
sbb
mov
sbb
pop
ret
adc
fs
lea
mov
stos
test
inc
pop
mov
loope
stos
out
pop
or
xchg
addr16
mov
mov
mov
inc
popf
icebp
mov
mov
adc
loope
mov
mov
push
mov
or
scas
mov
mov
in
aam
xchg
mov
adc
popf
repz
xchg
rorl
je
adc
and
push
iret
ds
sub
shl
xchg
loop
xor
ret
mov
mov
jge
xor
mov
lods
out
xor
icebp
or
sbb
xor
scas
out
loope
addb
out
stos
loope
icebp
inc
rcll
mov
or
fiaddl
push
mov
add
mov
andb
push
out
lds
adc
loop
sahf
push
mov
jae
je
lea
popf
sub
loop
hlt
add
inc
mov
ret
add
testb
push
mov
push
xor
loop
bnd
inc
rclb
and
adc
jb
inc
rcll
mov
adc
ret
push
mov
add
fscale
scas
and
dec
push
push
xor
xlat
jne
jno
outsl
cs
xchg
out
lret
jl
lea
mov
mov
xchg
xchg
push
loopne
ds
jno
in
push
xor
push
fistpll
add
mov
rcrb
xlat
pop
div
jno
adc
push
out
push
mov
add
sub
test
int
pop
adc
hlt
push
ja
or
hlt
ljmp
push
nop
in
mov
roll
cli
sbb
dec
in
scas
push
jo
ja
lret
popa
cmp
add
jp
addr16
aas
dec
not
or
aam
jl
aaa
fdivr
aam
scas
rol
lahf
mov
jnp
push
dec
iret
jmp
int
aad
dec
dec
in
cmp
pop
and
dec
mov
arpl
sub
pop
inc
or
shrl
inc
ret
enter
pop
xchg
mov
movsb
mov
int
sbb
arpl
and
add
stos
int
or
push
inc
mov
fadds
sub
or
insb
nop
repz
dec
popf
push
sub
cmp
jle
dec
je
mov
ds
pop
mov
ret
in
jg
les
cli
push
jo
inc
inc
or
mov
rclb
sbb
out
je
fcomps
ljmp
inc
es
cmp
xchg
add
sub
xor
int3
jb
adc
std
lret
ljmp
xchg
jne
pop
jns
adc
pop
leave
xlat
jmp
mov
or
cmp
jge
cmpsl
dec
mov
pop
mov
imul
xchg
push
add
shll
push
and
jecxz
inc
mov
ljmp
std
pop
mov
mov
fld
cmp
rcll
xchg
rcll
mov
adc
cmp
mov
lds
sbb
push
jae
jb
int
sbb
sahf
lods
mov
fildl
pop
mov
or
jb
loopne
lods
arpl
jmp
jmp
outsb
pop
jp
je
bound
jb
cmpsl
push
sbb
mov
mov
push
pop
movsb
dec
or
imul
inc
xor
les
inc
pop
or
lea
movsl
and
inc
stos
roll
loope
adc
aam
outsb
xchg
lea
pushl
jg
lret
enter
lea
das
lcall
and
adc
in
fildll
ss
sub
cmp
dec
sbb
leave
std
enter
pop
dec
xor
or
les
add
pop
mov
jbe
cmp
lea
ja
mov
and
mov
or
pop
aaa
cltd
mov
pop
mov
and
mov
or
mov
call
xchg
push
push
jl
add
cmp
sahf
xor
cld
neg
jns
xor
xchg
xor
mov
dec
sbb
mov
mov
mov
cwtl
push
adc
push
fldenv
movsb
jbe
and
mov
xchg
cmpl
popa
sbbb
repnz
iret
push
ds
subb
aaa
mov
cmpsb
mov
inc
or
hlt
xchg
or
movsb
aam
test
sbb
popl
xchg
mov
std
mov
fs
addr16
jnp
xchg
test
mov
mov
xchg
xchg
mov
inc
aas
adc
insl
push
xchg
mov
hlt
and
xchg
jo
fbstp
lock
push
push
jno
xchg
ret
adc
cmp
or
cmp
dec
add
push
cmc
cmpsb
mov
cmp
xor
cld
and
mov
fdivrs
jno
mov
ds
test
into
test
jno,pn
adc
cmpl
adc
pop
ret
mov
push
dec
jecxz
clc
jo
adc
nop
and
shl
jnp
cs
loope
jo
pop
fwait
rcr
xor
xchg
jb
push
lods
xor
inc
sbb
ds
mov
mov
pusha
imul
ljmp
scas
jmp
je
pop
cmp
data16
outsl
rclb
mov
adc
sub
xchg
loop
fimull
sti
mov
out
pop
dec
fildl
ret
jmp
fwait
dec
ret
mov
sub
mov
pusha
lea
and
inc
mul
andb
in
mov
mov
add
mov
dec
add
ds
adc
data16
lods
repnz
mov
push
add
mov
cli
add
jl
jg
mov
out
jbe
das
inc
ja
mulb
outsl
mov
in
and
ret
xor
popa
data16
sarl
inc
iret
nop
xchg
mov
fmulp
inc
outsl
jg
inc
push
sbb
stos
inc
sbb
retw
out
mov
cld
xor
or
imul
and
mov
aad
cmp
push
mov
outsl
aas
and
in
sub
mov
inc
loope
sbb
inc
lcall
nop
inc
jmp
fcoml
jecxz
call
pop
and
outsb
adc
int
movq
lods
mov
popa
inc
xor
addl
inc
push
mov
sbb
jg
test
add
mov
push
dec
or
lahf
cmp
mov
cmpsl
jg
jle
and
out
mov
loop
adc
insl
push
mov
ficomps
or
jl
cmpsb
test
dec
lret
push
shll
cmp
mov
fcomp
fstl
aam
cmpsb
es
pop
xchg
sti
dec
roll
push
bound
cmp
inc
mov
push
outsb
and
xchg
mov
loopne
fdivs
sub
bound
nop
push
jge
or
es
fdivl
dec
stos
jl
push
xchg
hlt
je
cmp
lret
jne
cmp
mov
fisubrl
nop
push
ret
push
arpl
pop
lods
cmp
adc
insb
adc
movsl
adc
orps
mov
je
jb
mov
sti
and
les
fwait
jcxz
enter
sbb
inc
pop
out
jbe
rorb
sbb
stos
pop
test
push
cmp
xor
jp
mov
aam
dec
push
enter
rcll
ret
add
ficoml
out
daa
push
xor
frstor
mov
mov
es
xor
cmpsl
xchg
jbe
ret
pushf
test
stos
repnz
push
lods
rol
test
adc
sbb
mov
xorl
das
fwait
loopne
popa
push
jecxz
js
sub
leave
mov
int
divl
sub
repnz
movsb
stos
movsl
xor
and
push
movsb
fs
test
lcall
call
mov
dec
and
add
lods
bound
dec
lret
xchg
leave
inc
pushf
notb
push
adc
rcll
xor
fiaddl
ja
nop
mov
dec
inc
xor
pop
jp
addr16
fsubp
std
push
mov
shld
inc
cwtl
adc
xor
idiv
mov
push
iret
inc
xchg
mov
push
dec
push
iret
or
cmc
xchg
mov
mov
mov
push
enter
jns
fnstenv
lahf
int3
mov
cmp
inc
xor
add
ret
nop
fsubrs
jne
cmp
out
mov
lahf
out
xor
cwtl
cltd
dec
push
xchg
das
mov
jecxz
lcall
in
mov
push
arpl
les
inc
jl
mov
out
xchg
jmp
adc
out
cmp
fistl
call
fwait
or
xor
mov
mov
adc
and
pushf
mov
imul
std
jns
lods
insl
xchg
movsb
sarl
out
out
mov
lret
mov
popf
push
xor
mov
js
inc
loopne
jno
or
or
xchg
gs
sub
mov
scas
rolb
dec
pop
fiaddl
pop
mov
fwait
cltd
inc
xor
jo
mov
mov
dec
imul
iret
fsubrp
push
add
push
or
popf
fcompp
aad
neg
clc
push
sbb
ds
mov
and
sub
adc
pop
loop
pop
dec
js
sarb
cmp
fistps
sbb
mov
cmpsl
test
repnz
xlat
popf
jp
push
out
push
test
mov
push
insb
or
gs
pop
inc
or
repnz
cmp
sub
or
xor
movsl
fsub
push
inc
leave
cmp
and
xchg
punpckhdq
fs
imul
sbb
shrl
popf
jne
dec
push
sbb
int
inc
pop
xchg
pop
rcl
or
dec
shrb
ja
lcall
push
fimuls
mov
push
add
jno
cmp
testb
lret
pushl
aad
xor
dec
sub
push
stc
xor
adc
xchg
test
sbb
add
push
leave
mov
clc
lret
sub
mov
xlat
and
cld
data16
test
inc
adc
adc
pushl
mov
pusha
ret
test
or
lods
and
ja
sbb
psrad
or
xor
cmp
jle
shlb
and
lods
push
jne
xchg
add
loope
dec
popf
pushf
adc
sbb
ja
outsl
or
rol
adc
movsl
orl
jbe
jns
cltd
std
nop
ficomps
sahf
aas
negl
jle
or
clc
enter
hlt
popf
in
xchg
xchg
mov
jge,pn
aad
rcrb
pop
cli
ror
dec
aas
and
not
lods
fcompl
or
or
fs
mov
pusha
addr16
add
ja
jp
add
jo
stos
shrl
testb
in
fisubs
or
mov
dec
dec
fnsave
xchg
add
call
mov
ja
dec
pop
mov
xchg
adc
pop
int3
loope
call
push
or
and
aas
mov
jecxz
adc
addb
sub
mov
and
xchg
ficoml
mov
lock
fisttpll
dec
push
lcall
mov
into
add
add
cmp
xchg
mov
xchg
mov
test
inc
adc
jg
cli
inc
and
or
pop
xor
sbb
iret
or
jne
jb
jnp
aas
ds
jae
push
xchg
out
and
sbb
cwtl
daa
mov
das
call
mov
test
movsl
div
mov
jno
in
xchg
out
imull
xor
ret
dec
jg
push
jne
inc
mov
rcll
lret
icebp
adc
pop
cmc
outsl
push
gs
stos
adc
pop
ds
push
add
adcb
mov
mov
repz
insl
push
xor
mov
leave
push
addr16
div
cmp
jecxz
loopne,pn
ficomps
test
inc
dec
dec
sbb
les
push
sub
cwtl
inc
push
cmpsb
hlt
xor
xor
cli
xor
mov
daa
mov
cwtl
dec
test
hlt
gs
ret
jl
js
lret
sbb
xchg
rcll
xchg
pusha
mov
insl
cmp
push
pop
xlat
cmp
fs
sub
fnstsw
icebp
xchg
jno
mov
and
test
movsb
movsb
xchg
nop
mov
jo
sub
pop
cmpl
adc
mov
jge
xor
push
aam
rolb
push
xor
enter
out
inc
in
out
in
and
aam
push
push
out
adc
shrb
sti
mov
es
adc
xor
daa
shlb
sbb
push
jl
push
rcr
shll
pop
scas
adc
push
mov
push
xor
lret
test
ret
xor
addb
enter
insl
cmp
cmp
out
jbe
dec
jp
int3
pop
jl
lock
mov
jle
lods
rol
fdiv
push
push
fimuls
jecxz
push
sub
aas
loope
data16
dec
mov
push
sahf
pop
ret
xlat
add
insb
in
adc
and
xor
xchg
xlat
cmp
int
push
mov
lock
loope
adc
popa
loope
cmc
in
aad
or
sub
dec
test
cmpsb
xchg
test
notb
mov
inc
cs
add
js
leave
xchg
hlt
adc
mov
out
decl
inc
clc
not
stos
cmp
xchg
pop
mov
cmc
xor
es
fiaddl
mov
rolb
xchg
mov
aad
cli
dec
in
add
insl
out
pop
mov
std
int3
cmp
fldl
test
cmp
ds
pop
aas
shl
adc
xor
xlat
es
sbb
and
shll
dec
add
mov
or
iret
shl
pop
adc
scas
mov
stos
xchg
inc
xchg
mov
enter
xchg
rolb
lcall
test
scas
ja
ljmp
xor
mov
push
aam
repz
addb
daa
nop
inc
pop
arpl
mov
and
lods
pop
dec
inc
xor
mov
imul
aas
outsb
sbb
and
cmpsb
pop
cmp
pop
push
sbb
ja
lret
outsl
and
cmpsb
sti
mov
push
inc
xorps
push
in
push
loope
pmulhuw
into
arpl
inc
and
xchg
rcl
mov
std
or
addb
dec
stos
faddl
rcrl
fistl
cmp
inc
cmp
outsl
addr16
mov
jp
js
fiadds
mov
dec
repnz
mov
jae
adcb
loope
rcll
mov
dec
ja
loop
in
mov
adc
inc
xor
mov
xchg
in
push
jne
add
cs
stos
cs
cmp
pop
xchg
jae
pop
nop
push
mov
adc
add
test
in
push
push
and
push
js
xchg
add
push
mov
imul
rcrl
pushf
inc
or
pop
fwait
test
inc
scas
add
jne
bswap
in
cmp
dec
ret
jno
out
ds
push
pop
mov
dec
xchg
outsl
add
int3
cwtl
loopne
add
insb
mov
cltd
movsb
in
inc
pusha
fnsave
fildll
xor
js
ja
outsl
fsts
fs
dec
test
cmp
dec
popf
mov
ds
pusha
and
test
xor
inc
test
pop
sahf
pop
jno
je
xlat
sub
popf
jo
clc
xor
sbb
in
xor
mov
mov
xchg
jg
push
jge
jmp
dec
inc
daa
add
cmp
addr16
andl
int
push
sbb
stos
xor
sahf
or
iret
or
push
fucom
add
sti
dec
xor
adc
shlb
jmp
push
mov
pop
mov
xor
jno
lods
sbb
jp
das
and
mov
jmp
xchg
xchg
inc
gs
fisubrs
inc
jg
jo
or
jo
or
mov
xchg
mov
add
xchg
jge
sarl
dec
jb
push
int
stos
jecxz
add
mov
movsl
pop
scas
and
add
cmc
push
mov
js
cmpsb
insb
pop
pop
inc
cmpsb
int
and
inc
dec
mov
orl
nop
mov
imul
roll
loop
out
push
jmp
push
repnz
aam
call
mov
and
dec
dec
cmp
stos
sahf
je
sub
and
sbb
push
inc
ds
inc
pop
add
mov
and
cmp
xchg
outsb
inc
inc
jns
call
das
es
mov
imul
xchg
xchg
lret
pop
push
cmpsl
jno
fwait
adc
arpl
sub
clc
aas
inc
adc
cmpsl
cwtl
push
jl
fnstenv
push
xlat
inc
jne
adc
pop
or
and
inc
frstor
mov
inc
mov
roll
sbb
out
test
add
push
pushf
jbe
adc
or
dec
jl
pop
sbb
mov
not
push
dec
imul
mov
add
js
push
adc
adc
sub
adc
enter
or
mov
inc
notl
fnsave
arpl
hlt
test
or
scas
rolb
repz
sub
sahf
cmp
out
repnz
aam
sbb
push
pop
lds
sub
mov
addb
inc
adc
jne
fisubrs
cmpsl
xchg
cwtl
mov
stos
jns
enter
xchg
sub
and
xchg
xchg
xchg
pop
push
sbb
testl
js
hlt
mov
filds
mov
inc
push
pusha
jnp
pop
les
xchg
pop
pop
and
dec
pop
and
mov
mov
ds
push
jecxz
in
stc
fldl
xor
test
call
adc
in
add
pop
je
jb
push
aaa
mov
mov
iret
sbb
xor
inc
int3
fcmovnu
dec
xlat
popa
or
movsl
and
les
xlat
mov
loopne
mov
xlat
cmp
sarl
in
insl
loop
lret
repnz
in
push
sbb
pop
dec
popf
lret
adc
cwtl
negl
inc
shl
stc
inc
dec
or
or
xchg
jg
aad
and
call
push
mov
add
and
lret
fsubrl
and
mov
push
jl
push
cmpsl
cwtl
cmp
fcoms
inc
data16
pushf
push
push
add
pop
aad
jmp
sub
int
cmp
jns
out
insl
cmpsb
cmpsl
dec
bnd
aaa
ja
push
ss
adc
sti
inc
push
test
push
inc
cmp
or
into
sub
mov
scas
icebp
push
gs
cwtl
pushf
sub
ret
pop
jb
sub
pop
cmp
sahf
jne
xchg
cwtl
icebp
push
jmp
or
jp
pop
and
insl
inc
xor
bound
xchg
mov
pop
jno
int3
sti
mov
dec
push
adc
pusha
out
aam
jmp
sub
cvtdq2ps
push
pop
jge
push
mov
test
lret
test
test
pop
xchg
out
je
aas
aas
pop
repnz
jno
insl
test
inc
and
icebp
fidivs
xchg
fcomi
int
mov
and
pushf
push
jle
fucomp
jg
and
mov
or
adc
add
push
cmp
pop
pop
xor
out
push
xlat
fldt
dec
cmc
xchg
jg
add
movsb
mov
stos
or
mov
push
bound
xorl
mov
mov
xchg
mov
hlt
in
sbb
cmp
loop
mov
xor
mov
adc
cmp
adc
lcall
xor
psadbw
mov
out
pop
sub
fistps
mov
xchg
add
fdiv
sti
ss
imul
or
jne
test
xor
sub
es
cli
push
xchg
cmp
clc
aas
dec
mov
xor
mov
xor
movsb
movl
add
cld
jns
int
sti
add
cmp
jne
xor
andb
insl
data16
sub
mov
fisttpll
and
mov
arpl
ret
test
mov
sub
shrb
repnz
or
sbb
insl
gs
pop
jle
sub
out
cmc
mov
dec
iret
xchg
aas
aaa
xchg
add
adc
stos
push
mov
jb
push
into
ret
outsb
dec
adc
out
mov
sub
add
cmp
cltd
lahf
mov
call
add
fimuls
pop
js
xchg
out
ficomps
jo
inc
pop
cltd
movsb
xor
or
xor
jbe
test
jecxz
mov
xchg
pop
sarb
in
das
movsb
int3
leave
cld
cld
fnstenv
jo
pop
test
push
inc
ja
or
aaa
fcomip
inc
iret
sbb
mov
lods
push
mov
rcr
scas
fs
jecxz
sbb
adc
or
or
adc
ret
push
mov
inc
fcom
xchg
stos
push
das
andb
pop
xchg
push
mov
dec
insl
je
js
cmp
mov
push
lahf
orb
bound
jno
xlat
inc
shll
push
push
rorb
mov
pop
mov
lret
and
popf
out
add
cwtl
ja
inc
inc
insb
or
ja
pop
or
mov
mov
cmp
sbb
mov
stos
adc
adc
aaa
xlat
sbb
imul
inc
push
cli
fisttpll
mov
andb
push
fstpt
daa
adc
insb
cmp
xchg
insb
les
cmpl
test
dec
add
scas
mov
cmpb
fcoms
in
xor
sub
ret
xor
lods
cmc
into
cmp
and
mov
adc
sti
pop
xor
xchg
mov
in
pop
and
iret
loop
lods
notl
dec
add
cld
jp
push
sbb
les
pusha
aaa
ljmp
dec
jmp
mov
icebp
dec
rcll
mov
adc
ret
push
mov
add
icebp
inc
rcll
mov
adc
ret
push
mov
add
icebp
inc
rcll
mov
adc
ret
push
mov
add
icebp
inc
rcll
mov
xchg
push
sbb
inc
shlb
aad
cmp
jge
insl
out
lods
cmc
mov
enter
test
fbld
pop
push
outsl
xor
dec
add
jecxz
lahf
pushl
das
jns
outsb
push
pop
inc
das
inc
jg
dec
adc
dec
cld
sbb
lods
lahf
mov
dec
jne
inc
addr16
xor
or
push
mov
mulb
adc
scas
or
push
push
xchg
inc
sub
jg
dec
ljmp
paddusb
xchg
rol
push
inc
push
jp
mov
mov
and
in
std
push
imul
lcall
in
fdivrs
aas
sbb
pop
mov
xchg
xlat
sbb
jae
adc
filds
cs
aas
fwait
mov
jg
dec
ljmp
scas
sub
mov
jne
rolb
in
jns
pop
cld
sub
jg
mov
push
adcb
xchg
mov
push
add
xchg
ljmp
stos
jmp
loop
sub
dec
pop
pop
add
loop
cmc
int3
lahf
lds
mov
movsl
iret
xchg
jns
jmp
dec
das
pop
daa
sub
pop
add
cmc
int
sti
mov
mov
mov
sbb
push
jp
sbb
jp
imul
cmpsb
stos
xchg
mov
wrmsr
addr16
push
inc
adc
ret
cmc
shl
out
mov
cmpb
test
jne
andnps
inc
outsl
xor
pop
add
aad
jmp
das
jne
andnps
inc
outsl
xor
pop
add
dec
push
pop
and
pop
cmp
in
int3
cltd
insb
dec
xor
repnz
cmp
dec
ret
xadd
lods
push
fs
test
out
cmpsb
je
loop
mov
xchg
jno
sbbb
mov
or
cmpsb
mov
mov
aam
jmp
std
js
insb
sbb
out
scas
mov
inc
cmpsl
xchg
mov
sbb
dec
mov
imul
xor
inc
mov
mov
fiaddl
cmp
into
push
rcrb
inc
dec
out
into
jae
pop
mov
hlt
das
cmp
or
sub
stos
test
in
lods
add
aad
loopne
sbb
jns
icebp
enter
mov
or
mov
fmuls
xor
mov
mov
cltd
fstl
insl
rorb
icebp
xlat
xor
int3
adc
jnp
icebp
and
jb
enter
xchg
cmc
cmp
mov
hlt
sub
and
loopne
mov
sub
andl
sbb
stc
fwait
inc
mov
mov
pop
outsb
gs
aaa
dec
inc
mov
cmc
dec
pop
and
and
mov
out
inc
lds
mov
cmp
in
jae
rcll
mov
roll
or
mov
jle
call
int3
inc
js
jmp
fst
leave
xchg
sbb
lea
sub
dec
mov
sub
cmp
bound
add
inc
and
rol
mov
sub
lods
mov
dec
filds
loope
jecxz
cmp
pop
hlt
mov
je,pn
mov
mov
dec
scas
xchg
mov
xchg
dec
sarb
push
xchg
xchg
cmp
js
test
push
mov
stos
xchg
enter
fs
and
lods
loop
sbb
icebp
xchg
sub
scas
adc
push
cmp
cmp
jle
mov
rclb
ja
aad
test
clc
popa
adc
test
mov
in
ja
nop
ficoml
mov
gs
push
repz
enter
xchg
fisubl
in
mov
dec
xor
fwait
dec
out
push
test
in
scas
stos
mov
xchg
clc
into
mov
adc
imul
lock
cs
sti
cmpsl
imul
inc
pop
jno
shll
dec
ljmp
std
mov
scas
sbb
insb
iret
jp
fistl
test
pop
xchg
mov
shll
cmpsl
imul
add
ja
pop
mov
jnp
shrl
in
push
sahf
lods
inc
dec
cmpsl
rcl
ds
mov
sub
jns
cmpsl
iret
fdivl
add
jge
pop
lret
sahf
mov
jne
dec
jae
loop
nop
xchg
pushf
mov
mov
loope
lods
adc
dec
inc
popl
cmc
hlt
or
cli
inc
mov
ficomps
add
dec
daa
repnz
jle
popa
or
mov
jge
out
mov
sbb
or
out
push
mov
inc
arpl
mov
and
or
and
mov
push
inc
xchg
xlat
sti
fwait
sbb
mov
movsb
xorb
xor
xchg
imul
pop
push
les
ja
lcall
jns
adc
repz
cli
pushf
mov
fucom
aaa
jo
fldl
test
sbb
es
int
das
lcall
push
add
sti
dec
lahf
sbb
cli
aam
xor
cmp
add
cmc
cld
fsubp
pop
xchg
icebp
and
push
in
cvtps2pi
sbb
push
test
inc
and
sub
jne
pushf
add
in
in
lea
ss
int
stos
pop
ljmp
icebp
imul
mov
imul
dec
pop
std
fistl
cmpb
jl
and
repnz
inc
je
repz
mov
lods
or
xor
dec
es
inc
fsubrl
in
stc
push
mov
adc
mov
mov
mov
dec
mov
mov
les
into
xchg
bound
daa
out
jecxz
and
leave
outsl
xor
and
call
shrl
cmpsl
enter
insb
sub
sahf
lcall
cld
adc
cmp
lret
xchg
nop
es
into
sbb
ja,pn
daa
pusha
test
inc
les
add
leave
sbb
rclb
in
push
lods
mov
sbb
adc
xor
pop
aas
lahf
repnz
jbe
fdivrl
lret
fiaddl
inc
cmp
xor
cmp
mov
lock
inc
movsl
dec
or
mov
sub
stos
int3
jno
jge
pusha
sahf
movsl
fs
dec
xor
and
xor
dec
mov
mov
add
sub
push
in
repz
pop
das
iret
es
in
aaa
xor
cmp
iret
rcr
sbb
adc
jp
or
cmp
sub
cld
jmp
add
in
adc
jl
orl
fdivr
mov
aaa
sbb
addr16
pop
xchg
in
cld
mov
fadd
stc
sti
lods
in
loop
mov
adc
ret
pop
mov
mov
stos
mov
shr
adc
stc
addb
out
dec
cmp
xchg
sub
jb
scas
call
mov
popf
push
pusha
push
or
lcall
inc
dec
clc
mov
pop
dec
ss
addl
loopne
popf
pushf
or
jmp
sub
inc
aad
lods
fistpll
and
stc
adc
pusha
and
cmp
leave
fmuls
loopne
clc
mov
ret
das
jnp
or
fwait
int
mov
pextrw
adc
out
mov
sub
enter
testb
sarb
inc
movsl
nop
xor
inc
mov
jnp
loope
sbb
jmp
scas
xor
jle
lds
mov
sub
in
in
sub
shrb
adc
and
xchg
cld
sar
je
push
push
pusha
bound
bnd
push
sbb
shll
mov
ja
cld
mov
and
add
stc
test
mov
sbb
cmp
push
fidivrs
mov
adc
mov
dec
fidivrl
ljmp
addr16
popa
mov
dec
pop
je
daa
adc
std
scas
jp
mov
enter
push
and
pop
icebp
pop
hlt
mov
and
pushf
sahf
dec
mov
add
mov
push
notl
sub
jbe
mov
fists
wrmsr
test
in
sbb
pop
add
add
mov
stc
rcl
data16
sarb
xor
cmc
or
aaa
or
hlt
rcrl
mov
jno
js
test
cmp
stc
sub
hlt
mov
mov
out
repnz
mov
in
fxch
mov
dec
fisttps
jg
pop
outsl
dec
imull
test
push
jno
pop
lods
imul
dec
inc
ficompl
jne
adc
fmull
cli
arpl
addr16
push
or
sub
push
ss
jmp
sub
dec
sub
cmpsl
arpl
fisttps
sbb
mov
pop
xor
fisubs
movsb
pop
ret
xlat
iret
jnp
mov
or
lahf
push
jne
in
lds
sbb
mov
mov
in
in
mov
mov
movsl
mov
push
mov
mov
fwait
adc
mov
jo
push
mov
loopne
jnp
add
ds
sbb
movsl
xchg
outsb
leave
cmp
les
stc
ss
and
push
and
and
xchg
jge
call
clc
rcr
int
pop
pop
inc
or
push
or
jo
xchg
cmp
gs
fsubrl
inc
push
out
ficompl
insl
mov
add
push
call
mov
cmpsb
sbb
or
mov
ret
ja
ror
lods
jae
imul
clc
int
sbb
scas
mov
in
adc
dec
inc
call
jecxz
push
popf
push
ss
or
int
xchg
lret
fsubs
cmp
pusha
int3
rorb
jo
fcmovne
in
pushf
sub
xchg
or
add
loope
das
xor
in
lock
pop
mov
mov
popa
dec
mov
outsl
cmp
lock
rclb
jae
add
mov
push
pop
push
jmp
xchg
or
xchg
xchg
decb
mov
and
or
cmpsb
movsl
test
or
mull
aas
mov
sub
mov
cmp
outsl
push
orl
lret
stos
inc
or
push
dec
xchg
sub
clc
mov
ljmp
lods
mov
pop
mov
lcall
mov
sub
mov
in
and
les
std
std
cmpsb
mov
je
fidivl
scas
sahf
lea
mov
mov
scas
clc
pop
pop
mov
jmp
cmp
push
leave
xor
mov
jl
push
sub
and
scas
sub
idivl
xor
lea
or
mov
jmp
stc
pusha
pop
std
sbb
cmpsb
jbe
xor
sub
pop
mov
and
sub
cld
adc
jmp
dec
lahf
dec
pop
imul
pusha
jno
or
loop
dec
leave
adc
lret
inc
lds
mov
pop
fiaddl
xchg
jp
int3
pop
loopne
jl
jl
inc
scas
inc
arpl
jo
std
sub
or
adc
or
aas
neg
mov
mov
in
sub
ja
sbb
nop
mov
add
jg
lea
dec
flds
xchg
nop
pop
test
insb
adc
adc
fs
insb
dec
loop
lds
adc
ja
std
push
lahf
jg
cld
xchg
pop
imul
jp
adcb
enter
or
stos
sahf
lret
in
push
test
imul
in
adc
call
das
push
jge
psubq
in
stc
outsl
jg
jle
fstpt
jmp
jbe
arpl
movsb
fdivs
xor
cmp
jge
xlat
jae
cmpsl
cmpsb
xchg
mov
or
out
lea
jl
xchg
jb
loope
mov
xor
outsl
jge
jno
adc
popf
sub
jecxz
outsb
push
test
js
xor
arpl
ret
out
jl
xor
xchg
dec
cmp
test
sarl
orl
mov
mov
imul
jle
lret
sub
mov
out
in
repz
lahf
fdivrs
inc
cwtl
cmpsl
inc
pop
je
das
fistps
inc
sub
dec
dec
out
fdivrs
xor
incb
mov
fisubrl
pop
mov
push
stos
jle
cmp
mov
xor
jmp
enter
cmp
push
mov
test
mov
xor
sbb
aad
add
ret
add
roll
pop
movsl
mov
inc
out
fmul
and
push
or
icebp
ficompl
cli
inc
mov
rcr
jbe
and
cli
sbb
xor
add
dec
cli
jae
fwait
inc
and
fiaddl
xor
out
test
add
stos
mov
add
jns
adc
call
pop
mov
mov
ds
xchg
scas
or
lock
ljmp
ret
dec
cltd
dec
sbb
fiadds
mov
xor
dec
and
outsl
scas
push
ljmp
xor
hlt
mov
lds
mov
aam
xchg
cmp
test
das
jbe
js
lock
out
mov
mov
or
cmpsl
ror
xor
xchg
lret
add
push
jmp
lahf
add
loope
imul
cmp
mov
jle
push
bound
jmp
pop
add
mov
push
inc
xorb
cmp
dec
cmpl
add
in
icebp
push
movsl
xlat
and
sti
loopne
xchg
fiadds
cmpsb
jbe
push
sub
orb
pusha
push
lret
lds
lds
popa
shlb
mov
loope
imul
jno
psubsb
xor
gs
in
jns
and
shlb
pop
in
mov
sub
nop
subl
bound
mov
xchg
mov
in
insb
xchg
jae
ljmp
sbb
sahf
sbb
cmp
mov
mov
loopne
in
sbb
outsb
mov
xchg
cmp
jp
push
xor
fidivl
sub
jb
push
jnp
cmc
out
jle
insl
daa
inc
mov
pop
xchg
dec
add
adc
cmp
lods
mov
xor
aas
inc
icebp
mov
insb
dec
shlb
out
xchg
rorl
rcr
dec
enter
das
adc
pop
sbb
std
adc
pop
test
dec
int3
dec
add
call
test
out
add
nop
orl
popa
rcrb
divb
inc
xchg
pop
xchg
icebp
jbe
mov
xchg
push
xchg
mov
xlat
test
data16
sahf
jle
sbb
push
js
scas
cli
lahf
add
or
xor
cwtl
repnz
pop
in
cmpsb
xor
scas
xchg
inc
popa
lahf
mov
cmpl
jmp
shll
je
cmp
inc
xor
mov
cwtl
xchg
cs
out
adc
xlat
xor
fwait
sub
test
push
inc
lret
testb
xor
xchg
add
nop
pop
sbbl
xchg
cs
add
and
add
mov
ja
or
jmp
into
shrl
xchg
and
mov
arpl
loopne
inc
pop
mov
insb
incl
out
dec
sub
and
or
adc
out
negl
aam
mov
pop
inc
mov
sbb
in
cmp
adc
mov
shll
xchg
out
or
pop
sahf
mov
fldt
inc
bound
sub
xor
lret
inc
adc
ds
lahf
adcl
es
jne
das
pop
add
sub
ljmp
adc
stos
sbb
daa
add
mov
or
sub
jbe
pushl
test
or
inc
xchg
leave
imul
pop
push
mov
mov
rcl
mov
xchg
dec
mov
sub
jmp
jbe
mov
stos
mov
sbb
sub
and
mov
xor
ja
mov
pop
icebp
or
pop
and
out
sarb
push
mov
icebp
cli
cmp
sti
add
add
je
imul
dec
add
dec
hlt
scas
insl
sbb
outsb
xor
sahf
movb
sbb
push
subb
in
hlt
dec
shrl
add
inc
add
pop
scas
xlat
neg
adc
repnz
dec
stc
xchg
push
mov
dec
push
push
xchg
pop
cmp
movsb
jnp
or
cli
das
es
mov
xor
mov
loopne
lret
adc
cmp
pop
xor
sbb
cwtl
notb
out
imul
movsl
repnz
arpl
fcoms
add
rorb
aaa
push
nop
imul
test
dec
push
mov
jmp
jl
imul
mov
sub
and
pusha
adc
mov
jb
mov
mov
dec
and
adc
pop
std
daa
jae
xor
or
dec
repz
cmc
sbb
out
jl
rcl
addr16
mov
fiadds
bsr
or
mov
sahf
and
inc
cmpl
cmp
andl
comiss
sbb
adc
mov
jne
mov
movsb
test
push
adc
adc
pop
es
xlat
scas
dec
add
ljmp
rcrb
testb
mov
inc
and
sub
cli
cmp
fisubrl
dec
arpl
stos
imul
aaa
add
dec
aad
jp
in
dec
and
movsl
fneni(8087
call
iret
xchg
lock
shlb
and
test
sahf
pop
mov
xchg
cli
movsl
je
or
mov
out
inc
mov
mov
rolb
or
into
mov
lea
jge
mov
dec
je
das
sbb
insb
jge
or
hlt
pop
mov
adc
xchg
movsl
fcompl
fsubl
nopl
pop
imul
lret
adc
add
inc
pop
repnz
pop
bound
loope
mov
lret
lahf
sub
xor
lret
pop
dec
test
xchg
xlat
out
loope
and
aaa
inc
or
cltd
jg
push
xchg
pop
mov
add
sahf
rclb
pop
clc
or
inc
call
mov
cmc
mov
cmp
adc
jmp
xor
push
cmp
pop
ret
aad
enter
pushf
push
aas
ds
daa
fisubrs
rclb
sahf
aaa
out
cmp
ja
sub
mov
rcrb
outsb
sarl
sbb
mov
xor
sub
outsl
pop
push
test
mov
lock
push
pop
dec
scas
xor
mov
pop
pop
pop
mov
sbb
lret
jae
xor
cmp
jns
mov
call
ret
mov
addr16
cltd
shlb
xchg
mov
test
clc
and
stos
mov
push
cs
addr16
sbb
xchg
repz
xchg
lods
jae
pop
inc
jg
push
mov
mov
mov
jnp
or
inc
andb
add
inc
outsl
mov
ss
mov
fnstenv
sub
subl
mov
and
imul
fstp
mov
xchg
mov
cs
or
push
mov
mov
js
push
push
aas
cltd
cmc
or
sbb
push
sub
xlat
scas
cmp
and
jbe
sbb
jae
lret
loopne
loope
not
pop
out
mov
push
jno
or
hlt
std
ja
ds
cmp
mov
cli
sahf
stos
add
test
add
pop
shll
xchg
jle
push
inc
imul
fwait
or
cmpsb
scas
push
mov
ljmp
xor
stos
insb
js
movsl
dec
dec
in
mov
pop
mov
pop
lret
loop
test
loop
fcomip
mov
pusha
in
aaa
or
adc
stos
adc
fcmovnu
in
or
jge
mov
mov
mov
add
push
and
int3
sbb
mov
jl
add
mov
mov
arpl
stc
jns
popa
rcl
add
bswap
add
push
cmpsl
das
sbb
push
mov
push
dec
adc
mulb
add
insb
out
cmp
ljmp
xor
addb
loope
xor
sub
mov
aad
in
xchg
mov
mov
lock
pop
push
fsubs
hlt
jge
sahf
ret
scas
call
mov
jecxz
loopne
dec
in
repz
pop
jl
rorb
xor
in
ss
mov
mov
pop
lahf
push
imulb
xchg
cmp
shlb
pop
jne
lea
mov
dec
ret
test
shrb
idivl
test
fwait
mov
loope
dec
xor
cld
pop
jnp
adc
cmpsl
xor
sbb
aas
xor
sbb
sbb
out
pusha
sbb
nop
pushf
push
aas
jecxz
ds
ret
mov
loopne
push
cmc
lahf
mov
scas
test
js
jae
pop
mov
int
push
jecxz
sub
fwait
aam
movsl
jle
sbb
xchg
sbb
jnp
shl
cmp
lock
adc
xchg
jnp
dec
lea
mov
adc
jle
ffree
adc
cwtl
push
add
push
addr16
pop
insb
pop
xor
jle
push
mov
lock
push
or
lahf
fwait
or
int
imul
lock
scas
xor
jae
data16
in
pop
popf
push
inc
jbe
ljmp
dec
cs
in
xchg
xor
adc
movsb
bound
stos
mov
cmp
insl
fisttpl
pusha
icebp
xchg
and
push
rorb
mov
add
lret
pushf
std
mov
mov
imul
and
push
jnp
sub
js
push
test
in
pop
scas
sbb
imul
add
and
push
das
mov
arpl
fisubrs
cmp
jmp
push
cmpsb
scas
aas
loope
cmpsb
fstpl
loop
iret
push
popa
rol
icebp
adc
mov
cmp
pop
dec
sahf
movsb
bound
xor
roll
lahf
jmp
dec
lods
push
arpl
fistpll
adc
lock
negb
and
inc
cli
cmp
push
push
mov
mov
xor
fcoms
scas
mov
pop
in
gs
mov
sahf
fwait
and
push
shlb
hlt
daa
outsl
and
rorb
lods
push
in
loop
cmpsb
fs
or
fimuls
pop
in
insl
push
cs
ficompl
push
les
and
sub
push
imulb
ret
test
push
std
arpl
mov
outsb
cwtl
jnp
in
mov
mov
cltd
cmpsb
in
aad
jmp
das
jne
andnps
inc
outsl
xor
pop
add
aad
jmp
das
jne
andnps
inc
outsl
xor
pop
add
out
aad
lds
jmp
das
jne
call
inc
outsl
xor
mov
mov
sarl
movsl
iret
xchg
pop
inc
das
jne
iret
movsl
push
pop
xor
mov
mov
xor
or
jne
or
sub
inc
push
mov
orl
cmp
sub
sbb
or
jl
insb
jno
inc
dec
push
mov
orl
cmp
sub
sbb
or
jl
insb
jno
inc
dec
push
mov
icebp
jmp
xchg
lahf
movsb
movsl
rorl
dec
inc
sbb
gs
jae
cmp
je
xchg
xchg
orl
sbb
sub
jno
adc
out
jl
insb
mov
sbb
shll
jae
stos
and
jp
rcrl
jbe
inc
jge
ss
rolb
popa
mov
push
std
loope
ret
int3
sarb
or
filds
or
add
xchg
and
mov
mov
outsl
mov
icebp
in
andl
mov
in
mov
jge
mov
and
int3
addl
add
fs
stos
out
clc
mov
pop
jmp
xchg
sbb
mov
sar
and
sbb
or
jl
insb
jno
inc
dec
push
mov
orl
pop
dec
dec
loop
inc
dec
push
sbb
add
xor
and
int
fsubr
out
leave
jp
lods
mov
pusha
pop
jnp
add
sbb
pop
sbb
or
in
fucom
xlat
mov
or
cmpsb
mov
pop
jne
cmp
dec
push
mov
orl
cmp
sub
sbb
or
jl
insb
jno
inc
dec
push
mov
orl
cmp
dec
and
repz
lods
movsb
sahf
addr16
shrl
jg
mov
iret
frstor
mov
inc
dec
sub
mov
imul
cld
xor
mov
mov
orl
imul
or
lcall
jns
adc
push
jns
add
adc
das
push
shrl
ds
jecxz
cwtl
ss
inc
fs
mov
cwtl
lret
ja
jae
loope
fists
mov
pop
loopne
and
mov
ss
mov
dec
or
stos
mov
sarb
jge
cmpsb
push
sbb
shl
rclb
popa
ficomps
and
clc
push
enter
cmp
pop
cmpsb
inc
je
in
insl
pop
cmpsl
mov
roll
mov
out
inc
mov
add
sbb
or
cmc
out
andl
pop
cmp
add
mov
das
int3
mov
fisubrl
push
daa
out
das
fisttps
mov
mov
mov
sbb
sub
push
out
jbe,pn
jge
psubusb
es
pcmpeqb
das
std
or
movsb
mov
fnstenv
mov
mov
push
in
sbb
cwtl
adc
mov
rorl
pop
stc
jmp
test
into
sbb
mov
js
mov
stos
test
add
shlb
stos
dec
fwait
lret
mov
xchg
jp
pop
mov
xor
rcrl
pushf
jp
adc
enter
pop
sub
sub
stc
push
out
or
and
mov
xor
inc
pusha
pop
es
out
xchg
adc
nop
and
xchg
movl
out
inc
push
mov
jo,pt
test
in
lods
xor
mov
xor
mov
mov
sub
rep
jecxz
ret
inc
testb
fs
ss
repz
rcll
outsl
movsl
scas
adc
psllq
imul
ds
pop
in
mov
aaa
ror
arpl
sbb
les
shlb
stc
inc
jmp
imulb
lret
arpl
lcall
mov
sbb
xor
or
mov
add
or
scas
mov
jns
out
push
xor
pop
xor
rcll
in
mov
add
cs
dec
iret
bnd
lcall
sub
pop
das
dec
pop
add
jb
aaa
pop
icebp
lods
in
cwtl
fwait
push
xchg
lods
adc
test
sub
dec
stos
dec
arpl
jo
mov
xor
icebp
cmp
int3
pop
lock
mov
loope
mov
sbb
jno
add
rcrb
loop
in
call
mov
mov
pop
arpl
jmp
mov
lret
sbb
ret
add
xchg
dec
loopne
fwait
in
pop
stos
vpshab
cmpsl
jnp
stos
add
addr16
pop
in
sbb
arpl
outsb
cli
sti
int3
dec
pop
mov
sub
xchg
sub
lds
adc
and
push
int3
sbb
lcall
dec
or
adcb
or
jmp
lcall
xor
mov
test
and
out
inc
out
adc
mov
push
add
sahf
mov
loopne
cwtl
push
scas
adc
into
sbb
mov
mov
in
movsl
xor
mov
call
insl
imul
fnstsw
repz
or
fs
jno
push
and
add
invd
push
jae
loop
mov
xor
enter
gs
cmc
jle
add
sti
jae
add
pushf
out
sub
jns
and
stos
movsl
dec
notb
mov
mov
adc
std
xor
jl
cmc
mov
fs
mov
jmp
mov
push
jb
or
jb
xchg
pop
or
mov
jo
sti
adc
loope
int
es
inc
cwtl
aad
repz
fisubs
sbb
popf
popa
pop
dec
lods
lret
xor
in
aas
pop
popf
decb
out
sbb
ljmp
inc
ret
cmp
ljmp
call
xchg
sub
push
push
rcrb
add
push
dec
mov
aas
cmp
adc
dec
sub
add
add
test
add
mov
out
push
or
pinsrw
testl
push
int3
xor
mov
imul
arpl
dec
sub
or
out
push
mov
mov
fidivl
lret
adc
push
cmc
jl
jb
clc
xor
or
and
mov
jl
ss
or
push
mov
lret
subl
ss
cltd
mov
in
mov
cmpsb
pop
and
add
jl
jle
cmp
aam
pop
sarb
out
cmp
dec
gs
pop
xchg
mov
sbb
test
jb
or
xchg
out
nop
push
mov
aaa
dec
int
popf
jae
inc
add
push
mull
orl
inc
jg
lret
xchg
leave
xchg
dec
shll
test
xchg
outsl
xchg
fwait
add
iret
pop
lods
push
mov
push
div
xor
sahf
cmp
sbb
lock
and
mov
cmpb
movsb
arpl
jno
xor
cmp
jp
jmp
loop
and
lea
lret
mov
pop
mov
or
adc
cwtl
mov
push
inc
or
mov
imul
jg
stos
rcl
or
mov
push
sub
xchg
in
dec
pop
cmp
scas
cmp
xchg
test
je
or
xchg
outsb
out
lds
ret
sub
jle
sahf
mov
mov
or
jecxz
repnz
push
icebp
scas
sbbb
jmp
into
dec
je
hlt
pop
sub
stc
fildl
scas
mov
xor
imulb
xor
cmpsb
lods
mov
addr16
sbb
and
sbb
xor
lcall
sahf
add
ss
sub
mov
int
cmp
xchg
andl
mov
add
gs
dec
movsl
fisttpl
mov
adcb
jae
sbb
in
test
xor
mov
lret
or
hlt
fmuls
lret
add
push
xchg
adc
and
add
xchg
leave
lahf
pop
lret
mov
sbb
sub
sysret
pop
int
sbb
sbb
das
adc
jb
dec
popa
mov
push
int3
jg
out
orl
mov
loopne
lcall
fcoms
scas
push
sbb
push
mov
push
call
pop
aad
inc
cmp
mov
pop
push
push
mov
push
aam
out
adc
movsb
aam
inc
xchg
xchg
in
cmp
xchg
fdiv
pop
std
in
cmpsb
mov
aaa
sub
push
or
xchg
sub
or
aad
jb
xor
cmpsb
fistl
mov
or
pop
jbe
sbb
hlt
stos
mov
stos
push
cli
mov
cmpsl
and
dec
ja
test
sbb
mov
mov
test
aam
and
shrb
aas
mov
xlat
sbb
fdivr
pop
jno
xorb
sub
loopne
mov
imul
pop
sti
cmpsb
or
xor
dec
fwait
les
insb
js
loope
cmc
and
incb
sbb
add
inc
ja
push
sarb
jmp
dec
adc
aad
mov
je
xor
jg
mov
and
sub
add
test
xchg
push
pop
xor
mov
outsb
xchg
fsubs
push
mov
imul
subl
clc
rorl
mov
cmp
pop
subb
call
xchg
stc
loop
mov
aam
movsb
aaa
mov
jns
test
insl
fidivrs
pop
push
push
lcall
cli
sar
or
loop
lea
mov
sbb
adc
push
sub
mov
inc
or
rcl
out
repnz
iret
loop
push
js
sbb
insb
rcrb
mov
iret
loope
mov
jl
cli
ljmp
push
mov
mov
popf
call
outsl
inc
ss
xchg
daa
fisttpl
lds
icebp
push
enter
shll
enter
xorb
daa
push
test
stos
pop
cmp
nop
mov
push
repnz
aas
sub
rclb
repz
ds
nop
pop
sahf
xor
pop
mov
and
jns
shr
sbbb
or
or
lret
adc
mov
sbb
mov
test
pusha
cs
bound
and
inc
or
inc
decb
push
out
clc
cmp
fstpl
stos
mov
fisttpl
fwait
int3
ljmp
push
jge
inc
push
fstl
in
mov
sub
in
ror
add
ja
sbbb
or
pusha
mov
xchg
xchg
inc
sub
mov
xor
cmp
sahf
xor
call
lahf
sub
outsl
cmp
xlat
jmp
roll
test
test
push
or
std
fcoml
dec
test
add
cmp
cmp
dec
and
popf
cmp
into
jge
leave
into
scas
data16
xchg
jl
icebp
popa
push
mov
ja
shrl
fimuls
jo
sbb
mov
js
jae
movsl
or
pushf
push
adc
push
adc
add
sbb
push
ret
pop
es
mov
lea
inc
mov
lahf
es
xchg
inc
mov
add
mov
fcompl
ja
or
subl
cmp
sub
dec
ret
add
push
jecxz
pop
aas
jnp
cmp
scas
mov
xor
dec
mov
scas
fsubrs
dec
pop
in
ss
imul
add
dec
xchg
inc
adc
add
sub
dec
pop
sbb
adc
sub
fs
xor
sarb
sbb
or
adc
je
lcall
std
loope
inc
addl
pushf
out
mov
pop
push
push
loope
mov
scas
jbe
movsb
mov
or
sub
mov
pop
rorb
sbb
ja
push
cmc
mov
in
fdivs
cld
jne
pop
sub
jae
adc
movsl
in
jge
and
ret
push
insl
add
push
mov
xor
push
inc
push
repz
rcrb
adc
shlb
test
add
mov
or
cmp
mov
cld
push
pop
push
je
mov
xchg
xchg
add
cmp
mov
aaa
sub
jbe
xchg
mov
xor
xchg
insb
mov
loope
ja
popa
fimull
mov
int
add
pop
mov
ret
arpl
decl
add
jbe
dec
dec
lcall
adc
adc
mov
mov
jo
scas
sub
test
mov
mov
jl
test
out
lods
shl
adc
sbb
jo
aam
dec
jns
ds
mov
call
icebp
je
mov
ja
cmp
test
jg
mov
cmpsl
cmp
sbb
jo
jmp
inc
stos
xchg
jmp
mov
push
adc
lahf
out
adc
dec
stos
or
inc
adc
push
pop
test
pop
mov
push
ret
out
ror
adc
lret
stos
jns
cwtl
outsb
push
mov
jg
jno
mov
repz
cmc
rorb
imul
push
xorl
or
push
mov
and
and
xor
sbb
xchg
into
inc
cmc
sub
int3
mov
inc
push
aad
adc
mov
test
addr16
movsl
subl
pop
xchg
in
aaa
ret
lea
push
ljmp
das
lahf
xor
mov
xchg
sub
imul
cmp
push
fs
loopne
dec
pop
jno
pop
daa
lock
hlt
lret
mov
outsl
mov
cltd
sarb
cli
loopne
ret
lahf
cmc
sbb
hlt
std
or
mov
fisttps
or
rclb
testb
lahf
adc
push
push
data16
fsubs
vpunpckldq
loop
mov
imul
push
pop
bound
aas
mov
jmp
push
sbb
mov
or
cld
idiv
lea
and
hlt
add
out
push
inc
ficoml
divl
lret
aam
lret
mulb
bnd
jp
add
mov
adc
cmp
vshufps
fisubl
lcall
sbb
adc
mov
pop
out
pop
xchg
enter
enter
addr16
mov
sbb
rcr
sub
cmc
test
push
lret
outsl
test
add
lods
dec
pop
fs
push
jge
fildl
movsb
hlt
movsb
xor
pop
adc
fmull
stos
mov
out
and
mov
incb
cmpsb
inc
xor
mov
lcall
push
scas
pop
cld
push
cltd
mov
enter
sub
or
add
popf
lods
adc
aas
std
xchg
mov
daa
arpl
call
rorb
jnp
sub
xor
in
jnp
in
enter
outsb
sahf
loop
daa
mov
dec
cld
xchg
jbe
jge
call
loopne
sbb
cmc
sub
jmp
clc
mov
or
xor
sub
loopne
iret
aad
and
xlat
push
pop
lret
fwait
cld
subb
mov
fists
lods
int3
push
mov
cmp
and
inc
jg
divb
mov
mov
lds
or
sysret
xchg
out
jmp
sub
std
rorb
lds
ds
xchg
add
addb
fdivr
jno
iret
jge
push
inc
sbb
nop
sbb
cmpsl
dec
push
sub
dec
lret
ss
push
cmpsl
xchg
repz
jno
and
addr16
inc
sub
pop
jp
in
sysexit
lods
daa
call
ss
xor
lcall
imul
push
jl
sub
mov
cmpsb
and
jns
imul
das
jl
sbb
add
add
test
jne
add
jns
jl
or
push
jae
sub
sti
je
xor
jns
inc
insb
sub
mov
into
outsl
hlt
and
push
insl
and
mov
jl
std
adc
add
cltd
pop
nop
les
sahf
sbb
nop
mov
shrb
ljmp
sahf
or
call
int
cmp
lahf
mov
jp
add
popf
adc
mov
or
pop
repnz
or
je
dec
imul
cwtl
ds
test
ss
xor
sbb
movl
adcb
jecxz
std
or
add
cmp
ljmp
push
or
push
sbb
into
mov
cmp
push
gs
fiadds
data16
mov
scas
fcoms
stos
repnz
and
dec
adc
sub
sbb
xor
shl
pop
dec
push
outsb
ljmp
mov
stos
and
enter
mov
adc
cmp
fscale
daa
imul
mov
and
xor
mov
faddp
outsb
fst
push
or
jmp
mov
mov
push
mov
icebp
dec
clc
pushf
stc
into
and
popf
test
xchg
test
inc
mov
push
pushf
push
imul
sbb
dec
std
test
xor
dec
and
test
sti
andnps
lds
adc
shrl
jb
int
aaa
dec
push
sbb
rcll
lcall
mov
fadds
nop
pop
inc
adcb
inc
mov
dec
dec
sbb
jbe
inc
sub
pop
add
outsl
add
mov
fldcw
ret
push
imul
insb
push
xchg
lahf
sbb
outsb
hlt
cmp
mov
cltd
push
mov
or
add
hlt
in
pop
fs
stos
adc
sub
jg
mov
and
xor
punpcklwd
mov
sub
outsl
xchg
and
dec
aam
movsb
pop
jmp
addr16
push
pusha
dec
cmp
sbb
lea
fcompl
mov
xchg
rcrb
int
sbb
shl
pushf
cmp
xchg
jo
cwtl
sub
lcall
hlt
pop
or
aaa
pop
jle
cmpsl
das
sbb
pop
stos
dec
ret
lds
arpl
jae
and
mov
inc
inc
pop
add
push
loope
ret
inc
xor
mov
test
in
out
push
shr
ja
jecxz
fmuls
jl
mov
or
pop
shlb
mov
push
aas
xchg
and
hlt
test
push
movsb
lods
mov
rorl
mov
loope
adc
mov
adc
in
cmp
loop
in
or
push
dec
adc
push
lret
repnz
mov
arpl
or
sti
adc
xor
scas
int3
and
sub
push
dec
cmp
mov
jle
imul
sbb
out
push
jl
mov
mov
mov
jbe
shlb
fdivl
sbb
icebp
idivl
insb
inc
clc
jno
std
imul
jle
shlb
aaa
jns
mov
adc
sub
mov
dec
mov
xor
aaa
pop
fidivrl
iret
xchg
fs
rcrb
sbb
jae
dec
adc
adc
and
jp
push
sar
push
push
icebp
pop
pushf
or
mov
ret
roll
and
insb
arpl
cmpl
in
fstl
out
cmc
add
in
fstl
xchg
int
fcmovnu
push
inc
mov
in
sub
shrl
adc
push
data16
inc
adc
mov
sub
test
inc
mov
lea
cmp
pop
pop
sub
mov
adc
ja
pop
fnstenv
mov
jmp
test
js
add
cmpsl
aam
vpshlq
shl
imul
aaa
xor
push
bound
or
imul
data16
mov
jb
fcmovnb
pop
orb
sbbl
jnp
inc
clc
rolb
pop
shlb
push
jmp
mov
movsb
mov
aas
mov
mov
push
shl
cwtl
xor
clc
mov
lea
mov
jb
pop
cmp
ja
push
adc
inc
enter
mov
cwtl
add
pop
sbb
sahf
push
jae
incb
mov
sti
or
push
push
aaa
push
daa
mov
std
adc
jmp
aas
add
fistl
jae
insb
jecxz
sub
je
cmpsb
movsl
loopne
add
jmp
fbld
jbe
add
xor
in
pushf
add
cmpsb
mov
push
sub
cmpsl
add
inc
sub
ret
and
inc
jg
mov
sbb
mov
leave
addl
rcrl
mov
push
dec
cmp
movsl
int
adc
js
cwtl
sbb
loopne
inc
cmp
stos
lcall
xchg
aas
xchg
inc
sahf
xor
mov
inc
jp
pop
adc
cmp
sbb
jge
cmp
mov
cmp
sarb
cltd
cwtl
cs
sub
jbe
cmp
xlat
mov
loope
mov
sub
out
mov
imul
shl
clc
and
subb
adc
sbb
add
imull
cmp
rol
jb
mov
leave
dec
push
push
lock
mov
xchg
fcmovnu
xchg
cmp
fs
in
pop
les
subl
fmull
in
mov
jmp
cmp
cmp
fistpll
dec
xchg
insb
lea
push
push
adc
insb
inc
jg
adc
jmp
sti
xchg
loop
pop
and
stos
jle
mov
loopne
push
aam
cs
or
fmull
mov
xorb
rolb
push
dec
bound
insb
xchg
lods
push
fwait
loope
fisubrl
andl
popa
xchg
lret
mov
pop
lret
mov
dec
gs
sub
xchg
pop
pop
imul
adc
sub
xor
stc
jo
mov
adc
lods
movsl
ficoms
cmp
es
movsb
idiv
mov
aas
add
cli
jne
mov
mov
stos
and
test
shlb
add
mov
fdivrl
repz
hlt
stc
imul
gs
jmp
jle
jns
lcall
jnp
cmp
xor
xor
xor
push
test
out
out
xor
scas
sahf
sub
idivl
push
dec
xor
jl
nop
cmpsl
push
mov
cmpb
mov
cmpsl
leave
testl
xchg
cld
enter
add
leave
pusha
add
popf
inc
jno
sbb
mov
rcrl
ret
pop
push
mov
es
lret
addr16
nop
das
loopne
shrb
sbb
mov
cmpb
or
jae
or
mov
push
mov
push
gs
push
icebp
xchg
mov
and
addr16
mov
pop
sub
and
or
jl
insb
jno
inc
dec
push
mov
orl
cmp
sub
sbb
or
jl
insb
jno
inc
dec
push
mov
orl
cmp
sub
sbb
or
jl
insl
jno
inc
dec
push
mov
orl
sarl
sub
sbb
or
jl
insb
icebp
fadd
int3
scas
inc
pop
push
sbb
orl
mov
inc
push
push
shrl
inc
inc
bound
add
icebp
mul
rcl
shll
xchg
andl
push
inc
daa
xor
lods
pop
adc
jne
icebp
test
cmpsl
fidivs
andl
push
inc
daa
or
pop
sbb
testl
leave
in
subl
and
adc
push
aaa
stos
mov
sub
subl
lret
jo
or
std
or
push
loope
adc
fnstenv
pop
mov
bound
jo
fs
dec
fildll
bound
sbb
stc
mov
jl
cmp
pop
xchg
mov
and
stc
daa
xor
dec
stc
ljmp
dec
in
cmp
xchg
rcrb
add
pushf
adc
push
add
mov
pop
shrl
mov
addb
dec
faddl
inc
mov
fbstp
mov
mov
popf
mov
cs
fstps
xchg
incl
inc
aad
dec
daa
xor
and
lret
pop
and
rcl
cmpsl
popf
mov
xchg
push
popa
and
xor
inc
jle
bound
cmpsb
mov
movsb
movsb
movsl
mov
aad
rol
loopne
xor
and
xor
fs
pop
pop
adc
jg
insl
adcb
ret
in
cmc
lock
ljmp
push
and
push
aaa
and
adc
add
icebp
mul
rcl
shll
xchg
andl
push
inc
daa
xor
and
adc
add
icebp
mul
rcl
shll
xchg
andl
jae
std
test
add
xor
imul
push
mov
add
xchg
or
leave
mov
mov
cmc
pop
inc
mov
mov
mov
jecxz
jge
aad
adc
inc
out
jp
fs
hlt
lods
push
dec
shr
jnp
pop
cmp
imul
pop
data16
inc
pop
jb
lgs
mov
sub
fcomps
cmpsb
mov
adc
daa
cmp
stc
jge,pn
cmc
mov
mov
xor
mov
in
pop
mov
out
xlat
shlb
lahf
in
movsb
adc
and
add
jns
loope
and
movsl
push
mov
sub
lret
test
jmp
mov
addr16
cmp
mov
xchg
aaa
push
xlat
or
or
push
xchg
mov
mov
outsl
shl
jnp
test
mov
fistps
jmp
cmpl
enter
cmp
rorb
inc
sub
shrb
mov
xchg
push
rorl
mov
jns,pt
sbb
dec
mov
pop
les
pusha
ficoms
xor
mov
add
rorb
cmp
ds
adc
lods
mov
lret
adc
pushf
jae
xchg
pop
pop
hlt
sbb
mov
int3
cwtl
daa
fisubrl
push
cwtl
xchg
cs
imul
adc
push
xor
cmp
cmp
lret
xor
fmuls
je
icebp
aaa
divb
adc
sbbb
add
aas
sub
lahf
add
sbb
test
xchg
icebp
fbld
sbb
mov
mov
jb
xor
cmp
movl
jp
movsb
cmp
lds
lcall
icebp
out
sub
add
mov
add
or
mov
dec
mov
mov
mov
into
ret
mov
cld
or
mov
ljmp
pop
xchg
sbb
push
lahf
aas
mov
rcrl
out
sub
mov
les
push
pop
mov
mov
js
pop
fcmovnu
add
insl
inc
push
lret
cld
popa
add
lds
mov
inc
or
sti
and
rcrl
adc
dec
aaa
add
pmaxub
call
stos
je
lcall
lret
jg
add
adc
into
pop
fbld
adc
add
adc
sbb
icebp
mov
clc
fcoml
mov
ja
xchg
je
xchg
push
test
test
push
xchg
repnz
movsl
sbb
pop
or
test
dec
xor
sub
sbb
pop
xchg
popf
scas
push
rolb
or
movsb
xlat
mov
dec
and
pop
push
hlt
lods
sbb
shl
inc
fcmovu
fadds
jmp
imul
imul
jne
fdivr
xor
out
mov
or
daa
fmuls
push
push
imul
loope
lcall
xchg
repnz
add
add
hlt
sub
add
push
dec
sub
enter
stos
xor
clc
mov
push
movsl
cmc
sbb
aaa
clc
ret
mov
inc
movsl
fwait
sahf
call
test
cmp
dec
in
xor
aam
add
arpl
xor
adcl
mov
add
or
stos
int
insb
call
push
xor
repz
in
jno
push
fwait
int3
insl
cmp
jbe
dec
mov
dec
movsl
add
data16
ret
out
or
jbe
dec
sub
sub
jge
into
or
ljmp
cmp
mov
sub
movsl
jb
fnstenv
ret
xor
movsl
leave
icebp
jno
js
xlat
fwait
outsw
dec
lret
or
dec
gs
add
jb
clc
mov
xor
mov
or
ss
testl
out
ret
popf
dec
jno
push
outsl
cwtl
leave
add
lcall
sbb
in
lods
cmp
cmp
xchg
decl
ret
test
out
mov
mov
push
idiv
jno
adc
loopne
repz
cld
cs
aam
xchg
out
lcall
iret
cld
sbb
lcall
stos
adc
mov
outsl
or
lahf
jb
lcall
jecxz
es
andl
cmp
xchg
sahf
sarb
pushf
mov
mov
mov
shll
popa
insb
imull
ljmp
mov
cwtl
loope
lods
mov
and
dec
mov
clc
xor
and
sbb
pop
mov
pop
push
fsubrs
dec
dec
push
outsb
dec
rcll
or
cmp
into
jge
imul
aas
or
push
sub
mov
push
icebp
sub
pop
jo
pop
jmp
dec
in
loopne
repnz
xlat
addr16
cs
xor
dec
cmp
sbb
sbb
adc
stos
lret
loopne
andb
jb
cmp
cmp
pop
adc
jecxz
icebp
mov
lods
into
int3
repnz
clc
loop
jl
xor
mov
std
int3
cmp
gs
push
cld
idivl
xchg
sti
das
aad
dec
jecxz
dec
jo
aam
cmpsl
daa
xchg
out
aam
sub
and
lock
pop
push
ret
sub
outsb
lahf
movsb
test
jo
xchg
adc
xor
push
adc
cmc
xor
fimull
dec
adc
mov
sub
std
ret
lods
and
push
dec
stos
aaa
lds
fimuls
out
loopne
mov
add
sbbb
subb
in
loopne
popf
dec
ret
cs
cmp
mov
mov
xchg
jge
mov
std
dec
mov
mov
in
add
or
out
leave
xor
mov
movsl
pop
arpl
fsubr
rcrb
xchg
sbb
pushf
xchg
jns
jnp
xchg
inc
pushf
inc
leave
int
mov
cltd
shlb
pushf
in
arpl
push
sub
jmp
mov
mov
dec
adc
inc
xor
fisubrl
sub
test
pop
or
mov
adc
in
ja
ja
jmp
cltd
mov
jl
or
pop
sbb
fdivr
push
nop
jmp
jg
xchg
enter
dec
jl
cmpsl
imul
ss
push
mov
mov
test
dec
lcall
adc
or
xchg
push
in
mov
dec
imul
call
adc
dec
xchg
test
and
pusha
pop
shld
push
insb
lock
or
lods
mov
pop
xchg
jmp
push
and
pop
add
fwait
push
mov
sub
and
mov
pop
or
cs
mov
hlt
push
pop
cld
mov
add
bswap
mov
mov
xor
in
sub
cs
movsl
mov
call
or
aas
not
jmp
mull
sbb
push
mov
inc
dec
dec
mov
push
mov
add
inc
inc
lds
fwait
xorb
fisttpl
ret
leave
pop
xor
inc
jae
aad
jnp
aaa
or
and
mov
cmp
das
ljmp
xchg
shll
mov
xchg
add
jnp
jo
or
rcll
mov
daa
cld
adc
cmp
jae
int
shlb
jmp
mov
dec
jmp
pop
fbld
mov
add
xorb
mov
cli
push
cwtl
out
repz
adc
in
jg
std
inc
lods
das
pop
cmp
mov
xchg
lods
loop
fistpll
inc
sbb
int
push
popa
jg
mov
push
rcll
pusha
jns
idivb
lock
push
lahf
jp
jae
inc
jg
aam
inc
and
adc
iret
push
mov
mov
lds
pop
push
hlt
add
push
push
inc
or
mov
push
ds
pop
test
jnp
xchg
stc
popa
xchg
mov
insb
pop
mov
adc
inc
sti
push
out
adc
sti
hlt
xlat
aad
or
cltd
pop
call
mov
in
cmpsb
loop
mov
js
pop
cli
fwait
insb
enter
out
hlt
jl
jae
bound
or
and
and
sub
cs
lcall
and
mov
xor
cmp
sbb
xchg
jb
mov
movsl
jae
mov
nop
adc
insb
add
dec
sti
fcompl
and
fucomi
mov
jne
push
xor
lock
mov
aam
stc
lock
dec
clc
out
stc
push
mov
and
int
in
insb
adc
mov
sub
scas
out
xchg
imul
dec
add
pop
sub
push
js
js
pop
jne
in
add
gs
cmc
inc
and
pop
adc
repnz
jne
fcmovnu
fmuls
jne
pop
std
sti
shl
adc
inc
push
pop
shll
push
push
rcrb
xor
ljmp
into
jo
jmp
data16
push
push
sarb
repnz
cld
xchg
push
and
aad
cli
mov
pop
sbb
mov
sub
push
sub
in
sub
pop
jge
sti
xchg
out
pop
aas
das
pop
jnp
cmc
and
lahf
cmpsl
stc
jno
mov
or
subb
push
lock
mov
add
mov
xchg
out
iret
icebp
not
pop
cmp
cmp
ss
test
push
lods
js
iret
sub
sbb
cmp
roll
jecxz
inc
dec
jecxz
das
rcrl
pop
fstl
test
arpl
out
mov
cmp
mov
xor
lock
mov
andb
das
dec
cmpsl
dec
xor
in
inc
rdrand
sbb
fiadds
mov
out
sahf
arpl
or
jge
adc
add
sbb
out
cmp
sub
xor
loop
test
mov
mov
lods
and
in
cmp
dec
push
ljmp
std
cmpsb
lret
add
pop
mov
sub
xor
xor
xchg
ror
dec
push
arpl
cmpsb
ret
and
fistpl
outsb
jb
cmp
ja
aad
mov
lds
mov
jp
push
dec
icebp
fldl
hlt
pop
in
in
or
popa
sbb
add
jp
jne
mov
mov
cld
stos
fstp
fs
push
mov
mov
pop
push
xchg
push
dec
lcall
cmp
lahf
fsubrl
jo
push
jae
pusha
ljmp
pop
push
in
bound
mov
push
pop
hlt
lret
mov
push
inc
mov
jecxz
jg
into
das
pop
daa
stos
mov
add
pop
xchg
add
subb
sub
out
loop
mov
push
sbbb
shrl
in
dec
aaa
cmpl
enter
lret
sbb
jnp
jo
xchg
or
mov
dec
popa
jecxz
adc
movsl
push
clc
adc
mov
fisubrl
or
xchg
das
jmp
arpl
stos
sbb
dec
jno
mov
push
jecxz
insb
shll
sub
roll
fwait
or
and
int3
add
xor
pop
outsb
xchg
loop
testl
loop
pushf
shr
xchg
in
testb
scas
push
out
lahf
out
cmc
inc
into
andb
loope
cmp
jbe
mov
jne
sub
lock
lret
in
lds
cmp
dec
adc
fisubs
xchg
mov
sar
push
sbb
subb
pop
mov
cwtl
and
pop
stc
sbb
dec
jo
in
mov
pop
push
dec
push
aam
loopne
xor
xchg
rol
jg
push
mov
pop
rol
repz
mov
fmul
push
cmc
aad
std
mov
jg
jp
cmp
dec
js
cmp
popf
push
in
clc
sarb
jle
sbb
ror
dec
ljmp
dec
movsb
test
mov
nop
pop
mov
xchg
jno
xchg
jecxz
xor
or
jmp
shll
insb
pop
outsb
dec
inc
or
rolb
sub
dec
sbb
pop
imul
mov
data16
leave
mov
cmp
je
dec
mov
push
cli
pop
xchg
dec
out
nop
or
lods
xchg
pop
ror
pop
in
fucomp
fcom
out
or
mov
and
mov
cmp
lds
xchg
mov
sub
pop
mov
jb
mov
jbe
mov
stos
pop
inc
stos
aad
lret
lret
cmp
push
mov
jge
jo
es
sbb
cmpsl
lahf
addr16
repnz
xlat
mov
inc
arpl
movsb
cmp
lea
stos
and
dec
daa
loop
pop
in
mov
sti
pop
data16
repnz
dec
push
push
int
notb
movsb
and
cmp
cmp
aas
pop
int
pusha
inc
or
sbb
shrl
leave
inc
stc
ret
add
aaa
leavew
imul
lret
mov
or
inc
pop
and
dec
imulb
into
scas
incl
cmp
jne
out
cltd
out
outsl
sti
sbb
and
loope
or
pop
fnstenv
fstps
adc
sbb
pushf
jno
cmp
and
lret
call
jg
dec
rorb
jo
stos
inc
sbb
cmc
xorl
push
jmp
das
ds
lods
mov
or
ds
ljmp
sbbb
or
ljmpw
sbb
add
and
shlb
xor
cmovle
or
xor
lock
and
xchg
jae
sub
inc
inc
int
sub
fildl
push
xchg
shl
push
mov
cli
adc
dec
aas
pop
xchg
push
mov
pop
lods
movsl
and
add
fidivl
dec
out
fsubl
mov
xor
sbb
aad
int3
pop
shrb
mov
aam
inc
dec
insl
mov
mov
repnz
rorl
fdivs
movb
in
push
cwtl
andl
aam
xchg
stos
fcom
call
ret
cmpsl
push
jo
test
inc
test
mov
push
mov
or
cltd
mov
or
mov
xor
xchg
cltd
ljmp
je
and
jns
fmuls
pushf
xchg
inc
and
and
pop
mov
pop
pop
jmp
ljmp
cmp
inc
or
fldenv
adcl
xor
push
mov
sahf
movsl
movsb
jle
cmpsl
test
mov
add
mov
jb
sar
sub
hlt
and
mov
sbb
mov
lock
test
or
lods
xchg
outsl
int3
xchg
or
push
sbb
stos
cmpsl
shll
dec
or
fidivrl
push
decl
js
jmp
add
jmp
or
push
imul
es
fdivrs
and
aam
shlb
inc
arpl
jmp
mov
enter
push
mov
subl
mov
pop
pop
fadd
xchg
pop
sti
mov
andl
out
in
push
ja
imul
cmp
mov
addr16
xchg
inc
loopne
mov
fstps
mov
adc
das
pop
mov
loopne
lcall
stos
pop
pop
mov
xor
fldenv
mov
dec
push
xor
orb
xchg
mov
inc
push
je
dec
adc
adc
nop
hlt
sub
or
les
jl
pop
movsb
or
push
pop
movsb
cmpsb
mov
rorb
mov
jo
js
jno
adc
dec
out
or
das
inc
xchg
sub
xor
jno
outsb
push
or
out
sub
lods
mov
fisubrl
into
mov
adc
cmp
or
lods
or
xchg
mov
iret
test
and
pop
adc
loope
xchg
aam
outsb
xor
stos
outsl
popa
andb
xor
mov
les
push
inc
imul
mov
out
or
pop
fadd
cmp
loop
add
loop
stos
pop
push
nop
inc
aad
loope
icebp
outsl
hlt
add
xor
sbb
pop
or
xchg
aam
inc
stc
je
sub
pop
mov
push
jge
in
lods
mov
push
xchg
jo
add
jg
mov
mov
mov
adc
mov
roll
pop
pop
dec
lds
mov
in
cmp
dec
pop
cmc
dec
dec
cmc
and
cmc
test
out
es
xchg
jae
adc
mull
mov
push
sbb
fistps
jl
inc
jbe
nop
push
in
pop
push
lret
mov
sbb
repz
jne
leave
mov
mov
fs
out
js
stos
sbb
rcrl
pop
jbe
xor
inc
push
xor
pop
mov
ljmp
mov
cmp
pop
clc
divb
mov
mov
xchg
mov
testb
pop
jp
xchg
or
imul
cmp
push
fildll
fmul
sbb
cltd
mov
pop
out
clc
leave
icebp
mov
rolb
insl
out
xchg
inc
xchg
scas
dec
push
ds
push
push
xor
jbe
push
xor
sti
xchg
pop
and
xlat
mov
adc
xchg
insb
inc
das
pop
jp
arpl
mov
repz
mov
jge
xor
jns
fidivrs
pop
mov
lret
int
repz
dec
leave
add
fldt
xchg
outsb
push
add
and
pop
jae
icebp
popl
in
repz
rorl
jmp
insl
push
pop
stos
fisubl
rcll
xor
rolb
mov
js
or
mov
sbb
lock
mov
adcl
filds
mov
fistl
sbb
mov
divb
xor
xchg
clc
mov
imul
lock
mov
jo
in
jmp
xchg
mov
or
cmp
dec
add
arpl
inc
js
js
sbb
and
mov
jb
sbb
nop
pop
dec
hlt
mov
mov
adc
std
or
cli
xchg
push
jno
push
add
or
aad
jb
pusha
test
inc
cmp
mov
pop
in
mov
push
push
xchg
jp
mov
jmp
jb
sub
test
mov
cmp
jp
pop
pop
rclb
mov
or
jg
inc
insb
add
xchg
and
dec
cwtl
lea
popf
jo
pop
or
mov
rorb
mov
fmuls
fcoml
imul
push
pop
mov
adc
test
pop
ret
xor
add
push
push
push
mov
xor
or
mov
inc
mov
repz
in
inc
ss
iret
jg
test
fprem
inc
insl
sbb
push
shll
sub
push
stos
jg
push
push
mov
test
fldt
pop
mov
shlb
xor
inc
xor
fsub
dec
cmp
imull
add
add
dec
and
cwtl
popf
loopne
cld
mov
fldcw
mov
push
in
out
outsb
push
pop
in
inc
test
pushf
mov
add
mov
mov
daa
fcmovbe
out
loop
push
test
int3
in
sub
shlb
push
sbbb
stos
xchg
jnp
add
inc
jno
dec
int3
sub
dec
in
das
xchg
sbb
enter
xor
and
jnp
adc
xor
sub
dec
add
faddl
rorl
jo
sub
mov
cmp
gs
xor
enter
imul
mov
and
int
enter
imul
test
inc
cmp
push
or
inc
out
mov
notl
push
push
aam
sub
outsl
mov
cmc
jbe
jle
jne
fwait
mov
jl
out
rcrb
and
mov
dec
mov
stos
sub
jp
xchg
insl
mov
sbb
mov
arpl
dec
jp
or
stos
cmp
loope
jp
jl
ficoms
sbb
push
inc
jo
jge
sti
push
enter
stos
pop
movups
adc
jle
inc
adc
lret
scas
stos
insb
mov
mov
stos
inc
les
loop
pop
pushf
or
ja
jg
shll
popl
jecxz
pusha
fsts
mov
inc
out
xor
xchg
aas
mov
outsw
mov
pop
outsb
jnp
mov
loopne
xchg
jg
fdivr
incb
inc
pop
in
push
jne
fistpl
out
fstps
lret
push
add
push
jo
fs
mov
call
sub
hlt
pop
adc
jno
push
mov
cmpsl
dec
lret
lds
push
adc
mov
je
nop
sti
js
mov
xchg
jl
aad
inc
cmp
jo
cli
mov
add
stc
push
into
push
mov
ja
xchg
int3
jecxz
in
sub
push
lock
push
popf
ds
fistpl
jae
mov
dec
lcall
push
xor
mov
inc
sbb
dec
xchg
cmp
aaa
and
adc
add
icebp
mul
rcl
shll
xchg
andl
push
inc
daa
xor
and
adc
add
icebp
mul
rcl
shll
xchg
andl
push
inc
daa
xor
mov
adc
add
sub
loope
rcl
shll
xchg
andl
push
inc
daa
xor
and
xchg
pop
add
push
testl
cmp
pop
js
push
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
enter
call
nop
ljmp
jno
insl
push
xor
and
add
add
icebp
fsub
call
mov
mov
dec
jae
popa
push
push
sbb
sub
cmp
enter
call
test
mov
dec
xchg
jnp
add
js
or
dec
pop
inc
push
add
movsl
xchg
dec
inc
pop
adc
cmovo
cli
xchg
ljmp
pop
sbb
subb
ja
cwtl
pop
push
sbb
mov
fisttpll
divl
dec
cwtl
push
shlb
mov
mov
dec
hlt
or
push
and
dec
out
cmp
enter
adc
icebp
scas
xchg
lea
leave
mov
sahf
xchg
mov
mov
stos
fwait
or
add
cs
and
xchg
cwtl
pop
sub
std
andb
add
lods
js
cmp
xor
shll
dec
mov
and
jo
jne
inc
push
push
pop
bound
adc
fdiv
call
mov
mov
dec
imul
or
sbb
sub
cmp
xchg
lods
loope
rclb
iret
int3
std
mov
sbb
add
or
dec
adc
lods
mov
les
cmc
ljmp
and
jbe
inc
jge
lods
mov
test
fstpl
orl
js
or
sbb
sub
cmp
enter
call
mov
mov
dec
jno
popa
push
xor
and
adc
add
icebp
std
data16
xlat
shlb
lcall
out
or
inc
dec
mov
or
cmp
jns
and
mov
lds
push
hlt
sbb
test
mov
xlat
xchg
adc
adc
imul
inc
lret
das
cltd
jb
mov
cmpb
pop
dec
lods
mov
sbb
sti
js
dec
mov
xchg
arpl
pop
xor
dec
mov
int3
jmp
jle
cmp
in
mov
mov
jle
in
pusha
jae
aad
daa
out
pop
aam
adc
sbbl
xchg
jnp
int
add
sti
adc
jo
xor
int
daa
sub
int3
and
addr16
xlat
fbld
mov
inc
xor
in
loope
add
in
pop
imul
pushf
xorb
add
into
push
mov
mov
in
sub
bound
mov
dec
mov
loope
js
call
stc
sub
movsl
repz
fildl
jmp
in
lret
shll
adc
adc
sub
dec
mov
xchg
pop
dec
shlb
push
stc
ds
movsb
lds
add
andb
and
dec
addr16
mov
mov
les
or
inc
push
xchg
jb
mov
mov
push
mov
jmp
out
cmp
jp
mov
sub
mov
stc
imul
and
int
dec
pop
mov
sbb
pop
popa
xchg
cli
daa
xchg
and
xor
cmp
pop
andl
dec
jg
mov
int
xor
inc
sbb
stc
push
aaa
insl
xor
push
scas
stos
sub
dec
leave
loope
pop
sub
adc
pop
call
or
call
dec
sub
jg
mov
pop
sarb
adc
mov
adc
adc
push
and
outsl
sbb
adc
fidivrs
or
das
push
ret
cmp
dec
shl
mulb
xchg
insl
pusha
add
xchg
dec
push
inc
xchg
imul
shll
movsl
mov
push
mov
mov
jmp
iret
xchg
push
negb
lahf
and
xor
mov
and
enter
in
inc
outsl
xor
addr16
test
je
ret
test
mov
cli
lods
push
fldcw
jns
inc
dec
sub
mov
stos
xor
xchg
hlt
and
mov
cmpsb
data16
mov
sub
mov
or
rol
push
out
imul
call
lret
mov
dec
or
les
test
std
pop
add
mov
mov
mov
movsb
ja
xchg
hlt
xor
and
mov
insb
les
inc
int
lcall
shl
lret
and
adc
cwtl
mov
sub
pop
shll
dec
or
cwtl
and
dec
mov
cmc
sahf
xchg
pop
mov
fucomi
push
pushw
arpl
sub
jmp
addr16
aam
addb
call
jle
mov
jns
push
mov
aad
repz
push
cmpsl
in
aam
hlt
lods
in
outsl
mov
xchg
sub
outsb
push
pslld
sti
jno
xchg
enter
mov
insb
push
pop
mov
push
stos
cmp
mov
cmpl
or
jmp
and
xorl
mov
cmp
mov
jmp
lahf
lret
push
test
jne
xlat
push
fdivrs
xchg
pop
movsl
push
mov
jns
pop
jns
mul
sbb
mov
jnp
dec
mov
ret
fsqrt
stc
xchg
shl
xchg
xchg
movsb
xor
lds
dec
repnz
mov
pop
add
jmp
inc
jb
mov
and
lods
int
stos
xor
jecxz,pn
inc
jno
mov
subl
or
sbb
mov
or
cmp
xchg
aad
dec
sarl
jno
gs
rclb
sbb
mov
and
jmp
xor
inc
es
arpl
and
jne
mov
scas
fadds
push
repz
adc
pop
sti
pop
subb
cmp
dec
test
mov
insl
inc
jmp
adc
outsl
call
push
dec
lods
pop
out
js
in
addr16
ret
sbbl
sbb
inc
cmp
test
mov
iret
insb
cmp
les
adc
pushf
or
and
mov
inc
ljmp
mov
mov
add
and
push
fstps
jecxz
je
pop
stc
inc
insb
repnz
push
dec
add
stos
rol
outsb
xor
add
mov
inc
cwtl
jecxz
sbb
movsl
pop
divl
pushf
cli
lret
pop
mov
cs
cld
cs
nop
dec
hlt
dec
cmc
push
test
fadds
loop
sub
adc
jmp
xor
xchg
jbe
or
sub
pusha
mov
xor
arpl
mov
adc
sub
repnz
popf
jnp
push
ret
pinsrw
aam
imul
inc
jo
lods
push
stos
js
adc
call
arpl
jnp
mov
or
push
and
mov
lds
ret
jae
sub
nop
cmpsb
push
mov
and
sub
call
cmp
mov
test
adc
andb
mov
inc
ja
and
add
pop
xchg
and
test
jno
adc
xchg
cmp
and
jl
mov
mov
jo
mov
jp
jecxz
push
sub
jb
fprem1
mov
xchg
add
fucomi
shll
inc
or
inc
inc
in
push
xor
jecxz
mov
jmp
mov
mov
xor
xchg
rsqrtps
aaa
les
mov
xor
pop
mov
fs
pop
sub
add
jp
inc
lcall
sbb
hlt
cmp
nop
jno
dec
sub
mov
ret
cmp
jp
xchg
cmp
orl
fnsave
add
cmp
xlat
mov
push
adc
or
mov
insl
cs
aaa
jp
mov
cli
mov
or
push
pcmpgtw
lcall
adc
sbb
and
jns
mov
or
mov
mov
cli
or
push
into
popa
push
mov
stos
jae
lcall
push
ret
mov
movsb
push
xchg
sbbb
dec
les
push
je
stc
sbb
sbb
and
cmp
out
imull
xor
xchg
mov
iret
lret
cmpsl
cltd
inc
or
push
dec
inc
cli
sub
or
cltd
fcomps
roll
push
orl
xchg
dec
cmp
push
scas
fisubrl
lcall
sub
es
sbb
sbb
and
xchg
and
loop
fldenv
push
pop
mov
bound
dec
pop
nop
test
jnp
outsb
mov
and
xchg
jbe
mov
jl
pop
sub
cld
in
pushf
pop
xchg
fcomps
mov
mov
out
adc
dec
jbe
dec
or
mov
xchg
adc
mov
iret
stc
mov
gs
push
mov
in
fidivs
sbbl
push
push
lahf
mov
loopne
inc
mov
pop
rcr
enter
and
std
scas
sub
adc
mov
adc
fisubrs
ja
xchg
jecxz
leave
mov
in
xchg
shr
jno
mov
inc
mov
aam
adc
data16
add
mov
imull
push
dec
pop
test
movsl
lock
fdivs
mov
ss
ficoml
movsb
lods
inc
lds
cmp
ret
lcall
mov
add
sbb
pop
jae
js
loopne
scas
mov
mov
pop
mov
js
cmp
test
repz
mov
adc
or
inc
adc
int3
xchg
out
xchg
ljmp
outsl
cmp
mov
das
adc
sbb
mov
inc
xor
cli
and
fwait
add
in
call
inc
xor
sbb
mov
in
inc
jne
scas
lret
and
sub
and
ret
push
imul
test
inc
popa
je
out
mov
xor
pop
lock
mov
dec
lret
sti
jg
sub
mov
jno
xor
pushl
adc
arpl
pop
xchg
jle
push
cmp
mov
test
mov
ret
iret
inc
popa
mov
xchg
push
add
mov
sub
shrb
xchg
xchg
stos
or
cmp
xor
ud0
test
xor
sbb
mov
cltd
inc
xchg
out
mov
mov
iret
mov
xchg
dec
dec
dec
data16
js
add
mov
mov
push
xchg
mov
inc
xchg
jle
lret
pop
ficompl
pop
inc
inc
stc
mov
jl
xchg
push
addr16
mov
insl
loop
pop
divb
ss
nop
roll
mov
test
dec
mov
xor
add
pop
cmp
scas
int3
out
shl
scas
icebp
and
pop
dec
lods
push
je
xchg
dec
mov
or
cmp
push
aad
aad
sbb
loop
fstps
dec
mov
cmp
popf
popf
lret
sti
rorb
dec
test
jno
sbb
iret
and
imul
xor
jbe
roll
pop
mov
jb
mov
jb
lods
jne
loop
dec
in
addr16
mov
icebp
xor
aad
xor
pop
cli
jns
adcl
mov
loop
fbstp
cmp
fistps
push
cmp
ds
inc
dec
sahf
scas
in
fwait
mov
movsl
popf
std
dec
inc
mov
imul
or
sahf
sub
aam
clc
ss
xchg
push
gs
and
pop
add
xor
xor
bnd
insb
xlat
mov
push
movl
or
inc
pop
sbb
fldt
outsl
imul
mov
rolb
push
jmp
mov
xchg
loopne
xchg
mov
push
add
push
cmp
push
mov
mov
sub
mov
lret
xor
pop
cmp
cmp
imul
lock
jg
mov
pop
insl
mov
imul
test
dec
shll
call
mov
arpl
mov
pop
shrl
xchg
mov
shrb
or
pop
sub
imul
add
out
mov
jecxz
cmp
imul
imul
gs
lret
lret
hlt
xorl
add
or
and
sub
es
ds
jp
lcall
bound
mov
jbe
dec
dec
xchg
mov
mov
mov
stc
mov
insb
push
int
and
push
pop
outsb
lds
ljmp
imul
cltd
cmp
mov
jnp
and
dec
lea
cmpsl
cmp
sub
fwait
das
aaa
sahf
push
push
pop
cmp
clc
jle
jbe
jge
adc
xchg
lcallw
insb
sbb
jp
jg
shll
mov
xlat
and
stos
and
out
stos
jmp
sbb
aaa
dec
imul
int
sub
clc
push
lds
mov
rep
ficoml
adc
push
loope
mov
loop
lret
adc
mov
xor
pop
ljmp
mov
mov
sbb
xchg
push
pop
sub
xor
jns
iret
ret
xor
add
mov
lcall
fxch
add
xor
and
lcall
push
iret
mov
jne
arpl
daa
add
cmp
mov
int3
and
xchg
lcall
sbb
mov
mov
push
and
nop
sarb
mov
jbe
jp
out
ljmp
cmp
mov
outsb
imul
pop
xchg
jmp
xchg
movsl
cmp
shrl
push
movsl
cld
cmovb
jnp
ud2
cmp
mov
add
call
mov
xor
push
loop
sbb
cli
push
adc
rorl
into
mov
xchg
add
lea
jle
xor
sbb
sbb
push
mov
insl
cwtl
mov
add
cmp
lret
inc
scas
cmpsl
jne
gs
xchg
push
fwait
jo
int
idiv
xchg
and
dec
lds
mov
sti
mov
scas
push
fistps
sti
in
inc
leave
add
jns
orps
add
daa
jo
push
adc
int3
loopne
add
mov
jp
inc
test
notb
mov
aad
lock
das
push
loopne
jne
add
arpl
cwtl
and
out
inc
cmp
fidivrs
in
les
push
mov
inc
clc
mov
jo
fs
das
test
fmulp
push
cwtl
xchg
mov
rolb
adc
jnp
jecxz
and
in
cs
jbe
addr16
stos
xlat
dec
add
ja
cmp
and
lcall
cli
movsl
jmp
jmp
insb
shrb
jge
sub
jg
cmp
rorl
add
pushf
add
subl
ja
dec
loop
xor
hlt
test
aam
jae
xchg
fucom
repnz
mov
adc
mov
faddl
mov
add
imul
xor
mov
call
pop
test
adc
les
push
and
test
mov
cmp
mov
divl
push
mov
and
clc
and
shrl
push
pop
push
pop
aas
mov
push
adc
fsubl
and
stos
adc
notl
pop
shl
lcall
push
test
scas
xchg
mov
shl
add
adc
gs
cmp
imulb
lcall
push
pop
cmp
test
lea
add
sahf
cmpsb
imul
and
xor
mov
xchg
lcall
leave
in
dec
lods
out
and
lods
fwait
cwtl
jb
dec
insb
lcall
pop
xchg
inc
pushl
in
or
adc
xchg
push
pop
jp
jae
clc
add
sub
ret
iret
xlat
rorb
mov
fdiv
mov
fdivl
jb
mov
mov
mov
inc
or
mov
shl
jno
inc
jl
pop
sahf
mov
and
dec
xor
mov
cld
sbb
cmp
mov
add
out
cmovl
loope
lea
int3
bswap
pop
sbb
xchg
shlb
popa
int3
jecxz
mov
frstor
call
pop
loopne
xchg
sbb
adc
lock
fdivrs
pusha
sarl
push
sub
jmp
push
loopne
xchg
inc
adc
add
movsl
lea
push
ret
xor
lds
jne
mov
xor
inc
pop
enter
push
xchg
sub
pushf
jecxz
aas
adc
mov
cwtl
call
add
test
divl
arpl
ret
push
iret
sub
and
lcall
push
nop
xor
shll
push
dec
pop
movsb
or
jns
shrb
ret
jae
inc
mov
lea
pop
mov
rcrl
or
stos
jg
xchg
push
mov
mov
loopne
sahf
adc
out
pop
adc
or
lahf
outsl
imul
adc
push
imul
lcall
mov
out
loop
mov
call
xchg
rcr
mov
int3
pop
shll
fisttpll
insb
daa
push
jl
int
mov
gs
adcl
inc
insb
insb
movsb
sbb
add
stos
xor
scas
mov
test
in
pop
lods
iret
mov
or
xchg
sbb
cmpsb
cld
cmp
cltd
sbb
pop
and
adc
lods
repz
ja
sahf
cmp
push
xlat
sbb
inc
cmp
ficompl
das
and
stc
js
inc
bound
mov
test
ret
in
stc
add
dec
inc
or
insb
cwtl
xchg
ljmp
fldt
fisttpll
xor
outsb
pop
sbb
aad
xlat
adc
xor
sbb
lods
test
adc
sub
pop
call
adc
test
push
subl
sbb
fdivs
jno
mov
jmp
sub
aaa
aad
and
pushf
mov
or
pop
fbld
add
jnp
push
or
xlat
in
fcmovnu
scas
ljmp
sbb
dec
cwtl
fs
pmuludq
lret
stos
sub
insl
fcomip
or
push
xchg
xchg
dec
jecxz
inc
int3
insl
dec
mov
inc
and
mov
aaa
xchg
mov
cmp
into
ss
mov
jno
pop
xor
pop
fdivl
fimull
ret
js
adc
pop
mov
das
adc
stos
mov
nop
push
enter
push
inc
sub
insb
push
xor
or
or
scas
movsl
adc
xor
push
js
pusha
addr16
out
jle
mov
mov
pop
addr16
jle
or
and
jne
ror
outsl
jmp
adc
lcall
sbb
std
bnd
fdivrs
shlb
mov
push
inc
stos
push
cs
outsl
xchg
orl
jp
xor
pop
movsb
in
push
mov
fsubrs
mov
aaa
or
scas
fwait
andl
pop
mov
pop
xor
loop
jmp
mov
xchg
sti
std
mov
jp
popa
mov
popf
push
int3
jge
ss
js
pop
push
stos
sarb
clc
sub
call
lods
cmp
xchg
iret
pop
shrl
sub
aam
test
movsb
out
aaa
shr
icebp
sbb
lahf
push
and
orb
mov
rcl
cmpsl
xchg
nop
mov
pop
fcomps
fs
jecxz
dec
xor
mov
fsubr
es
fsts
add
push
cmp
sub
jns
cmp
xchg
add
xor
fwait
int
mov
mov
add
sub
push
add
aad
sbbb
in
xchg
loopne
ret
out
hlt
std
mov
addl
push
cmpsb
fidivl
sti
cwtl
add
in
lcall
push
push
mov
sti
arpl
dec
test
jbe
fiadds
mov
icebp
insl
cmp
sub
mov
scas
xorb
cltd
adc
into
dec
push
lods
negl
sahf
cmp
dec
sub
test
fdivp
pop
mov
insl
dec
insl
adcb
jmp
sub
ja
les
movsl
into
lcall
sub
lea
insb
lods
out
push
pushf
and
aaa
jecxz
iret
outsl
xchg
mov
sahf
fldl
cmc
sbb
mov
outsl
add
jmp
cmp
add
inc
jnp
jbe
bound
dec
xor
in
or
cmp
scas
pop
aaa
bound
ljmp
ss
subb
lret
jbe
mov
mov
pop
insb
ljmp
pop
sbb
inc
xchg
daa
imul
lret
sub
mov
nop
xchg
fcoml
jo
icebp
push
adc
jbe
sbb
sbb
lea
sbb
testb
mov
notl
je
sub
fsubp
daa
xor
xchg
ljmp
clc
xchg
sahf
pop
mov
xor
and
and
pop
loopne
pop
push
push
scas
sets
mov
enter
cmpsb
add
inc
jle
out
ljmp
jmp
pop
in
jo
sahf
xchg
xchg
jge
sub
or
push
cltd
xor
aas
test
sbb
daa
in
jae
lods
dec
pusha
mov
mov
sub
adc
mov
and
pop
jns
jmp
pop
cmp
push
push
ret
inc
pushf
lea
gs
aam
inc
popf
inc
int
cli
xchg
jge
fstp
push
add
cmpsl
js
lock
pop
adc
mov
cwtl
aam
adc
sub
movsl
dec
mov
iret
or
fs
inc
push
pop
mov
hlt
and
pop
dec
push
push
mul
lcall
sbb
test
adc
push
jp
and
movl
jnp
and
inc
mov
jge
cmp
dec
cltd
shrl
popf
arpl
adc
push
das
fildll
idiv
jno
mov
mov
pop
push
ja
cs
xchg
sbb
adc
add
xor
scas
testb
xor
test
jl
adc
push
inc
xchg
pop
jo
inc
xchg
insb
cmp
repnz
or
aam
adc
sbb
loope
ds
rorl
mov
popa
push
xor
and
adc
add
icebp
fsub
call
mov
mov
dec
jno
popa
push
xor
and
adc
add
icebp
pop
loope
sar
rorl
cwtl
mov
dec
jno
popa
push
xor
and
adc
add
icebp
fsub
call
mov
mov
dec
jno
lret
ret
ss
push
pop
mov
clc
mov
xchg
mov
into
dec
ds
imul
sbb
cmp
dec
enter
jmp
cwtl
out
test
mov
dec
or
js
or
outsb
sub
dec
enter
call
cwtl
out
test
mov
or
push
imul
add
sub
dec
mov
icebp
test
add
mov
lret
pop
es
sub
jg
mov
popf
call
mov
adc
fmul
mov
pop
cmc
xor
out
and
rcrb
out
mov
mov
aas
and
or
fiadds
scas
stos
mov
fsubrs
mov
mov
dec
push
mov
inc
imul
dec
xchg
cmp
daa
push
mov
call
dec
and
sub
into
pop
outsb
jo
lods
mov
fcoms
clc
jge
push
stos
jle
mov
mov
sbb
imul
sub
dec
xchg
mov
clc
mov
fidivrs
cs
jle
outsb
sub
daa
mov
divl
out
out
nop
fstpl
pop
jbe
dec
jl
push
sbb
xchg
mov
mov
in
mov
mov
inc
xor
popa
inc
sbb
daa
push
mov
neg
jmp
cwtl
out
test
mov
cs
jle
outsb
sub
dec
enter
call
cwtl
out
test
mov
cs
jle
outsb
sub
dec
enter
gs
leave
sti
xor
or
add
xchg
imul
pushf
mov
lock
cmp
or
add
and
xchg
inc
cmp
sub
add
push
es
push
movsl
sarl
mov
jge
leave
jne
data16
loope
outsl
stos
push
addr16
lahf
movl
sarl
xchg
pusha
pop
xor
push
and
subl
inc
sub
or
imul
in
or
repnz
out
call
jns
jno
ret
dec
icebp
insl
cmpl
testl
cli
clc
fucomp
adc
or
imul
pop
xchg
imull
cmp
leave
stos
gs
xorb
rolb
popf
xchg
mov
ss
loope
cmp
lahf
adc
pop
pusha
push
mov
arpl
mov
jns
mov
leave
push
out
call
dec
std
jmp
push
lods
scas
cmc
xor
cmp
lods
int3
call
out
loopne
adc
pop
push
cld
push
fdivrs
xchg
jge
sub
sub
xor
push
mov
push
arpl
loopne,pt
sub
aad
pop
adc
mov
xchg
cmpsl
dec
clc
in
push
sti
add
and
push
sbb
sbb
fldcw
cmp
sti
cmc
mov
sub
xor
dec
cmove
cmp
push
stc
aad
mov
ljmp
ret
sub
mov
arpl
xchg
testb
jae
push
jnp
adc
add
pop
or
or
cmpsl
cltd
mov
push
mov
icebp
cmp
cmpsl
inc
dec
in
lret
push
mov
test
lods
jle
cmp
cmp
repnz
xor
std
mov
fs
and
fcoml
dec
cli
fstl
sub
jmp
sbb
mov
mov
sahf
push
test
outsb
push
jo
dec
stc
jbe
pop
ficoml
out
ret
loope
pop
mov
scas
cmp
out
jns
cmpsl
insl
pop
lods
pop
dec
stos
jmp
jnp
roll
push
xor
xchg
out
pushf
dec
mov
jo
call
jbe
in
pop
fs
notl
push
shl
push
mov
out
cld
aad
push
or
aaa
cmc
outsb
mov
xor
fsubl
push
dec
cmc
mov
jecxz
push
lock
mov
fildll
imul
ja
jg
lret
sahf
sbb
dec
and
mov
jnp
jo
xchg
add
sbb
pop
ret
cmp
xchg
jno
sub
xchg
cli
cmp
fisubs
flds
dec
std
sub
aad
shl
sbb
sbb
int
add
push
rclb
into
incb
mov
scas
jmp
shl
add
imul
imul
jno
xchg
lahf
mov
jo
inc
fcoml
loop
negl
xchg
pop
mov
cltd
jno
aad
mov
xchg
cwtl
push
pop
pop
mov
xchg
push
data16
dec
or
dec
xlat
lods
std
sub
sub
mov
mov
aaa
sub
and
imul
xchg
sub
jne
sbb
dec
mov
test
ljmp
fs
pop
cmp
add
loop
jb
push
mov
mov
nop
cwtl
leave
push
adc
ja
push
int
jbe
xor
rorb
aam
jle
out
sbb
sahf
sarb
cld
movsb
lret
mov
pusha
xchg
xchg
fisttpll
and
or
push
cltd
push
in
test
hlt
pop
nop
je
dec
sub
lock
dec
push
icebp
rolb
add
idiv
clc
cmpsb
mov
adc
xor
gs
inc
mov
sbb
xchg
fldl
in
xchg
in
std
ss
outsb
rdtsc
push
test
ret
int3
cmpsl
mov
mov
shll
repz
pop
xchg
cmpsl
std
dec
outsl
std
fstpt
dec
test
mov
adc
imul
out
es
stos
fcomps
and
cld
fwait
or
mov
cmp
fldt
jl
ljmp
xchg
and
ret
test
insb
cmpsb
stc
repz
mov
test
dec
daa
cmp
and
ss
dec
and
addb
add
cmc
ret
xchg
adc
shrb
pop
popf
mov
leave
addr16
pop
mov
sub
adc
movsl
scas
jo
mov
mov
cld
cli
popf
fsub
call
popf
push
fnstenv
xchg
fadd
gs
pop
je
outsl
and
es
cmp
scas
jge
jno
xor
outsl
jmp
inc
or
add
mov
inc
cmpl
mov
icebp
xchg
call
lea
es
shrb
jo
adc
xor
fdivl
pop
in
es
stos
mov
subl
push
popa
jp
xchg
das
sbb
add
lahf
adc
add
fimuls
push
mov
push
adc
push
ret
mov
xchg
or
adc
inc
stos
adc
loop
js
sbb
xor
shl
mov
popf
cld
dec
inc
int3
dec
test
xchg
dec
out
cld
push
adc
mov
fs
int3
cs
mov
inc
sar
xlat
ret
mov
shrb
xchg
jbe,pn
push
cmpsb
sahf
mov
xor
cmc
inc
push
inc
out
jne
jne
mov
jb
cmp
push
cmp
jbe
hlt
xchg
push
jne
adc
inc
int
dec
in
mov
lret
and
xor
das
push
sub
and
cmp
loop
loop
lds
add
pop
ss
push
mov
inc
lea
lahf
shll
lea
nop
inc
or
push
jnp
dec
scas
cmc
or
adc
loopne
mov
pop
mov
mov
adc
mov
insb
cmp
mov
pop
jmp
loope
lods
pop
mov
or
pop
fs
pusha
mov
or
lea
or
ret
pop
aad
mov
mov
sub
xchg
shl
lods
xor
jns
testb
imul
mov
mov
push
mov
sub
into
dec
and
xchg
hlt
pop
sahf
pusha
jae
sub
adc
movsl
loop
add
mov
loope
outsl
mov
adc
jno
inc
rcl
lahf
pop
imul
fldenv
adc
cmp
xor
in
into
lcall
dec
mov
xchg
dec
adc
mov
pushf
cmp
cmp
sarl
daa
and
mov
mov
pop
loop
lret
stos
nop
adc
adc
mov
ret
push
pushf
ds
cmp
or
les
sub
and
dec
cmp
mov
ret
idivb
push
and
push
mov
movsb
rorb
adc
cmp
sbb
add
sub
mov
lret
push
or
lret
scas
fistl
mov
imul
scas
mov
rolb
hlt
stos
outsl
loop
sti
sbb
sub
add
push
jb
inc
mov
jle
pop
or
out
les
gs
mov
adc
sbbb
mul
lock
stos
into
push
mov
fcmovne
mov
pop
in
in
jnp
lea
push
jl
inc
loopne
sbb
and
fbld
test
es
aas
or
add
pop
xchg
pop
sahf
pop
dec
pop
dec
cltd
adc
int
cs
or
pop
push
jo
cmc
cwtl
cltd
xchg
sbb
popf
mov
das
into
push
pop
enter
mov
xor
adc
mov
mov
jnp
bound
ja
add
fnstsw
jl
insb
push
loopne
shl
js
add
in
mov
add
cmpsl
mov
shll
jecxz
xor
jo
push
rorb
dec
mov
mov
aaa
rcrb
or
js
cmp
arpl
mov
xchg
ja
and
icebp
or
dec
inc
popa
pop
pop
push
push
rcrb
xor
dec
inc
clc
jnp
xor
add
push
lret
nop
pushf
scas
fcoms
cs
rcll
popf
xchg
pop
and
cwtl
pusha
xchg
das
jno
xchg
into
inc
lcall
inc
mov
pusha
dec
sbb
cmpsb
aas
loop
lret
int
mov
call
xchg
sub
pop
pushf
or
add
jmp
mov
out
cmpsb
sub
xor
addr16
sbb
popf
cmp
lds
lds
mov
mov
pop
test
addb
adc
aam
xlat
fisubl
cmp
loopne
shlb
add
das
insb
adc
jae
jmp
movsb
add
push
ret
and
sub
mov
sbb
pushf
out
int
jp
xchg
inc
mov
jecxz
test
shll
dec
sbb
dec
cmp
pop
lods
ljmp
dec
xchg
sub
push
fcomip
and
push
mov
in
adc
lahf
addr16
sarb
sbb
and
inc
mov
daa
inc
movsb
ljmp
jae
shrb
or
lds
adc
xor
mov
inc
cmp
jl
push
inc
inc
sbb
shrl
gs
mov
cmc
push
icebp
popa
xchg
bound
add
xchg
push
dec
jns
cmpsb
push
mov
adc
imull
out
mov
icebp
out
xor
mov
inc
mov
popa
out
in
or
test
inc
dec
aas
hlt
clc
pop
sarb
lea
xchg
jl
dec
add
pusha
mov
clc
cltd
mov
imul
mov
push
mov
cmpsl
inc
push
and
sbb
jbe
push
mul
lret
rclb
push
xor
or
in
jns
sbb
scas
daa
pop
fmuls
into
mov
js
outsl
out
sub
adc
fiaddl
pop
lahf
xor
lret
popf
cmp
aam
aas
sarb
lcall
arpl
cmp
fadds
daa
mov
xchg
cmc
popa
sub
inc
movsb
js
jbe
add
jno
scas
dec
cmpsb
and
mov
lds
inc
xor
or
inc
out
enter
dec
in
je
mov
aaa
fnstenv
mul
movsb
pop
inc
xor
movsl
adc
ret
lods
cmc
mov
fldt
add
arpl
call
xor
mov
mov
test
aas
sbb
fsubrs
xlat
fcomip
jo
fisubs
dec
mov
rcll
sbb
outsl
push
sub
cmc
xchg
add
test
fistps
imul
js
into
push
push
jle
outsl
lahf
aaa
xchg
cli
sub
pusha
xchg
jno
xor
xor
mov
stc
in
lcall
push
pop
lds
leave
ja
push
cli
pop
pop
loop
pop
add
lret
or
out
pop
mov
lock
test
stos
fimuls
mov
mov
and
pop
push
sbb
loopne
mov
imul
xchg
adc
lret
loope
xchg
dec
push
adcl
cld
movb
shlb
rorl
lret
ljmp
mov
jbe
clc
xor
call
jnp
sub
xchg
out
xor
test
add
icebp
es
mov
out
test
in
add
pop
mov
mov
add
fistpl
test
add
xor
jp
sbb
stc
movsb
adc
add
pop
jecxz
ds
fsubrs
mov
jbe
pop
xchg
pop
xchg
out
push
mov
jnp
mov
inc
adc
mov
add
dec
inc
lret
adc
enter
pop
jno
testl
dec
aaa
jmp
mov
repnz
imul
cmpsl
jl
aad
sbb
int
dec
aam
cs
xchg
jle
pop
divl
push
mov
sbb
xchg
das
int3
push
push
push
outsb
loopne
add
hlt
mov
add
jnp
xor
adc
int
lock
push
or
fidivl
call
dec
out
xlat
cli
insb
xchg
inc
hlt
aas
lret
ss
mov
mov
dec
inc
ss
out
fwait
or
hlt
mov
out
ret
jo
push
push
arpl
inc
jp
xchg
mov
sub
cltd
push
add
andb
aam
mov
add
sbb
and
xlat
ja
or
mov
fwait
lea
gs
mov
scas
mov
int
push
pop
jbe
inc
xchg
hlt
imul
add
inc
jg
ljmp
or
or
or
jle
in
mov
clc
jg
cmp
dec
sahf
mov
inc
pop
add
mov
push
clc
jb
cltd
and
xchg
mov
insl
hlt
jge
mov
adc
mov
mov
test
mov
cli
push
mov
arpl
loopne
outsb
loope
cmp
inc
jecxz
fnstenv
int
std
xchg
lds
sub
and
and
pandn
inc
dec
inc
and
push
dec
lretw
mov
jb
das
inc
xchg
test
rcrl
pusha
ficoms
lea
loop
into
sub
cmp
sbb
xchg
mov
out
jp
pop
lock
stos
or
xor
adc
push
shr
loope
stos
ds
loope
mov
cmp
cltd
bound
add
aaa
xchg
pop
std
addr16
cmp
ret
fs
mulb
add
mov
push
ret
inc
lret
shlb
add
out
pop
lds
sbb
xor
cmp
sbb
outsb
pop
add
lahf
imul
mov
fs
insl
inc
clc
dec
fcomps
cmp
and
in
ret
pop
xchg
aaa
in
add
movsl
or
pop
push
pop
test
rcrb
lock
add
and
pop
pop
inc
insb
bound
subl
imull
mov
add
fdivrp
or
adc
mov
lahf
xlat
pop
or
outsl
lds
daa
fwait
xchg
mov
cmpl
ja
pop
lret
scas
imul
mov
and
arpl
pop
aam
add
clc
leave
jmp
popf
test
jge
and
or
push
mov
sub
jp
decb
shll
sbb
leave
ja
sbb
arpl
jae
cmp
fcompl
pop
in
add
jmp
fs
dec
sbb
pop
imul
push
lods
adc
adcl
cmp
mov
aad
inc
imul
int
aas
out
sub
test
pop
cld
lret
push
mov
lcall
jmp
scas
jmp
sbb
aad
xor
mov
nop
xchg
fdivrl
inc
pop
cmpsb
shr
push
inc
repz
mov
xchg
dec
cli
mov
das
and
ds
and
scas
xlat
xor
test
mov
hlt
sti
lret
inc
push
jne
arpl
mov
call
test
xlat
jle
popf
popf
xchg
divl
cmpsb
cli
mov
sub
lea
pop
gs
push
ljmp
sbb
jmp
fldt
pushf
addl
jb
cltd
xchg
adc
pop
xchg
roll
jle
inc
cmpl
test
or
imul
jmp
mov
sub
cld
push
mov
aad
mov
add
push
jno
sahf
sbb
pop
aad
xchg
mov
add
data16
mov
mov
lods
in
or
and
sub
push
js
ret
lcall
fmull
mov
mov
pop
jns
cld
mov
int
cwtl
les
out
and
pop
lret
shll
iret
repnz
test
loopne
jo
sub
mov
rorb
mov
hlt
and
inc
aam
and
mov
mov
mov
jae
shr
iret
mov
je
ds
or
push
xlat
aam
lret
jg
dec
into
das
sti
jp
loop
sahf
mov
sar
daa
stos
lret
mov
xor
arpl
mov
out
pushf
in
lods
je
lret
scas
xor
rorl
std
xchg
lea
sub
mov
mov
sti
in
icebp
subb
push
jle
or
ss
mov
cltd
adc
std
jo
aam
sarl
outsl
aas
mov
scas
into
mov
sbb
push
testl
dec
and
pop
cmp
popa
adc
leave
rolb
inc
out
stos
lret
mov
pop
dec
clc
in
imul
adc
ss
inc
cwtl
adc
pop
je
inc
sub
pop
repnz
nop
sub
ss
or
xchg
and
hlt
es
xchg
xchg
push
repz
jbe
je
and
xor
arpl
mov
shlb
movsl
xchg
jno
jbe
mov
cs
push
dec
inc
jno
mov
cmpsb
in
pop
inc
xlat
and
scas
push
and
pop
ror
test
int
loop
je
fwait
fs
inc
mov
jnp
jp
pusha
test
push
xor
or
aas
jge
dec
loop
movsb
div
sub
movups
ret
mov
aad
daa
rclb
stos
imul
scas
sahf
mov
or
stos
fsubr
xor
lret
adc
push
and
movsb
subb
outsl
aad
adc
sub
dec
loope
mov
cwtl
jge
adc
sub
mov
push
jns
test
lea
dec
and
out
sub
mov
jmp
pushl
ja
ja
in
outsl
cmp
call
add
imul
push
or
xchg
out
subb
rorl
sti
add
and
das
push
dec
idiv
sahf
in
daa
pop
stos
es
cmpsb
xor
adc
xor
loope
lea
fwait
ret
movsl
mov
stos
sub
push
out
ret
lcall
insb
jns
and
pop
rcrb
scas
lds
stc
mov
ds
movsb
ljmp
or
mov
fwait
idivb
dec
xchg
cld
add
adc
mov
sbb
mov
popa
lods
add
or
inc
adc
out
adc
ds
pushf
push
fistl
dec
push
out
movsl
push
cli
test
mov
push
push
xchg
sahf
cs
test
repnz
test
mov
or
out
jae
daa
inc
insb
adc
xlat
bound
out
push
xchg
dec
idivl
inc
inc
inc
cld
lds
adc
movsl
xor
aas
lods
dec
and
sub
xor
dec
sti
adc
gs
jg
sub
adc
test
fmuls
sbb
jl
jecxz
shll
cmpsb
cltd
xchg
jecxz
adc
xor
imul
in
inc
fimull
sbb
cmp
pop
adcl
xchg
dec
rcrl
fnsave
pop
std
bnd
push
push
jnp
inc
mov
movl
pop
icebp
shlb
inc
xchg
xor
jmp
push
inc
cmp
sbb
push
fwait
fs
and
xor
sub
ret
arpl
sbb
mov
stos
dec
aam
or
rolb
dec
ret
xchg
mov
lods
mov
add
mov
dec
fsub
sbb
pusha
gs
test
add
lret
sub
call
push
cmpsb
jno
mov
sub
dec
sub
or
inc
xchg
push
int3
movsl
stos
sub
cli
in
cltd
pushf
dec
jmp
scas
outsb
mov
imul
xor
mov
das
push
xor
out
scas
push
jb
ljmp
jl
xor
es
push
clc
lahf
stos
or
insl
and
call
cmp
or
cmc
rcl
ja
cmpsl
insb
out
or
test
lods
push
cmc
fcomps
jl
fistpl
enter
setbe
xor
aas
cmpsl
out
inc
adc
outsl
aas
mov
jmp
add
repnz
insl
mov
mov
es
xchg
mov
mov
xchg
rsqrtps
scas
push
sub
or
adc
lahf
into
jae
in
xchg
insb
xlat
rorb
push
sbb
mov
mov
mov
dec
out
inc
in
jmp
cmp
je
pop
push
lods
outsl
ja
fidivrs
xor
mov
fsubs
inc
call
jbe
aaa
in
cmp
or
dec
insb
dec
dec
mov
push
das
push
nopl
inc
fsubl
into
push
jmp
push
jns
repz
ficoms
lahf
stos
ret
add
cmp
or
lea
jl
inc
movsb
sbbl
fcompl
push
xor
xor
aaa
xchg
jg
jb
mov
inc
xorl
push
xchg
adc
in
les
out
dec
hlt
cmp
int3
int3
jle
xchg
pop
jle
int
ja
clc
mov
fidivrs
cs
jle
outsb
sub
dec
enter
call
cwtl
out
test
mov
cs
jle
outsb
sub
dec
enter
call
cwtl
outsb
test
mov
cs
jle
outsb
sub
dec
leave
mov
clc
mov
fidivrs
test
push
js
jg
nop
xchg
xlat
mov
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
stos
addr16
cmp
jmp
jge
das
mov
add
push
add
add
add
pop
add
add
add
add
add
add
add
jmp
add
add
push
test
add
add
cmp
mov
fwait
add
add
add
add
push
add
add
test
mov
inc
add
add
add
add
jmp
add
add
pusha
add
add
add
dec
add
popa
add
add
add
add
inc
add
dec
add
add
add
add
add
add
add
add
xchg
add
add
and
inc
add
add
add
add
add
and
add
add
add
add
mov
test
cmp
and
add
add
add
add
add
fiaddl
jmp
add
add
add
add
mov
mov
cmp
or
jmp
ret
add
push
testb
add
add
add
add
pop
push
test
xor
inc
add
add
and
push
add
repz
add
add
jo
dec
add
add
testb
add
jbe
inc
add
dec
add
add
add
add
add
gs
add
inc
add
add
add
add
add
add
pusha
add
addb
add
add
add
add
cmp
add
add
xor
test
mov
add
add
add
add
add
add
add
pop
add
add
push
add
add
add
push
test
inc
add
add
add
add
aam
imul
add
inc
add
sbb
movsb
add
movsb
add
add
jbe
test
stc
add
dec
add
add
add
add
bound
mov
cmp
add
mov
add
add
pop
add
add
add
add
add
add
add
sbb
cwtl
add
add
add
stc
add
mov
mov
jo
mov
inc
add
add
popl
add
stc
add
dec
push
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
dec
add
add
add
pop
push
in
dec
add
rolb
mov
cwtl
add
add
dec
add
jb
fwait
add
xor
mov
stos
add
push
add
bound
scas
add
add
and
push
add
fwait
add
add
add
movl
push
add
add
add
rolb
add
add
pop
add
add
test
popl
add
add
add
add
mov
rolb
add
add
rolb
jmp
add
add
add
add
add
test
add
pop
add
add
popl
add
add
add
add
add
add
add
and
inc
push
mov
cmpsb
mov
inc
icebp
popa
mov
mov
mov
div
fidivs
insb
imul
fwait
nop
sub
mov
scas
mov
ret
out
push
xchg
cwtl
lret
into
mov
jl
and
or
and
mov
ja
addr16
cld
jb
in
mov
pushf
push
ss
jmp
jo
pop
out
adc
test
icebp
or
mov
in
orl
fidivrl
repnz
das
cmp
fcmovnu
xor
xchg
push
outsb
xchg
xchg
mov
mov
push
jne
ficoml
leave
push
sub
jl
cmp
sbb
dec
mov
jl
aam
jp
xchg
outsb
cmp
sbb
xchg
ds
jecxz
or
inc
inc
ss
std
mov
in
outsb
cmp
outsl
or
jne
add
push
xor
pop
and
in
mov
add
mov
shlb
aam
push
or
pop
dec
pushf
jb
jg
es
add
test
xchg
hlt
xor
push
leave
pop
dec
cmp
call
mov
or
add
xchg
nop
push
add
add
push
ja
xor
insl
mov
test
fs
mov
sbb
dec
in
xor
lods
xor
in
hlt
rclb
xchg
iret
xchg
mov
xlat
dec
in
push
pop
imul
mov
dec
pop
lds
mov
mov
adc
aam
clc
repnz
pop
sub
mov
or
test
call
sbb
rorl
inc
aam
inc
xor
inc
cltd
and
lea
bound
inc
push
je
jns
sahf
jno
aaa
and
mov
in
or
dec
push
push
int3
xor
sbb
adc
cmp
shll
dec
call
mov
sbb
rcr
fsts
push
divl
popf
mov
ffreep
daa
cld
outsl
xchg
adc
test
jno
adc
sub
lcall
sbb
std
jecxz
adc
inc
mov
lds
mov
cmp
shll
lods
cmp
jno
dec
dec
hlt
cli
or
bound
subl
add
adc
mov
fcmovbe
adc
cmpsl
in
adc
aaa
sbb
jp
sbb
nop
dec
sahf
pop
dec
jge
mov
ret
fstpt
rorb
lds
or
test
push
sbbb
repnz
movsl
cmp
xchg
dec
in
xlat
mov
mov
arpl
mov
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
