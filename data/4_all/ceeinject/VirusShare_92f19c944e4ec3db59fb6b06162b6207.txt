call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
insb
inc
jl
dec
cltd
pop
mov
fmuls
xchg
jns
in
cmp
and
lods
jns
imul
pop
mov
cmp
or
sbb
in
cmp
sub
sbb
insb
mov
pop
nop
sub
cmp
or
sbb
in
adc
cmp
pop
ret
dec
and
in
add
xor
mov
mov
daa
xchg
lods
push
add
shr
adc
jne
jb
pop
pop
push
ljmp
or
push
cld
test
add
inc
imull
test
aam
jb
sub
and
xor
xor
dec
sub
jge
cmp
sub
repnz
stc
cli
notb
aam
mov
sahf
and
imul
enter
sub
pop
push
or
adc
mov
mov
dec
or
std
or
jecxz
inc
mov
or
sbb
cmpsb
hlt
pop
xor
pop
xchg
sub
cmp
or
sbb
in
and
xor
add
adc
pushf
sub
sub
jne
imul
mov
leave
adc
cmp
pop
enter
push
test
push
push
fisttpl
decb
insl
cltd
dec
leave
or
push
xor
sbb
and
xchg
cmp
or
sbb
in
cmp
sub
sbb
or
pushf
dec
insb
mov
pop
mov
cmp
or
sbb
in
cmp
sub
sbb
or
pushf
dec
insb
mov
js
test
mov
scas
mov
xchg
mov
dec
je
nop
cld
pop
push
push
imul
push
daa
mov
xor
fstps
loopne
mov
icebp
out
hlt
repz
fstpl
jno
scas
sub
xor
xor
xor
and
push
or
dec
movsl
sbb
and
sub
dec
iret
xchg
xchg
mov
inc
lret
jmp
mov
aam
or
pop
lcall
lcall
sti
add
or
sbb
mov
fisttpl
mov
test
jb
pop
in
bound
pop
and
fsubr
sbbb
mov
ret
inc
shr
mov
mov
aad
dec
stc
mov
fidivrl
insl
mov
xchg
loop
lahf
repnz
cs
mov
jbe
ret
hlt
mov
arpl
fistps
and
daa
pushf
inc
out
mov
stc
sub
cmpsb
imul
fidivrs
bound
jle
cmp
dec
push
pop
mov
lods
push
sub
and
and
out
stc
jp
iret
cmovs
iret
stc
add
push
and
dec
rclb
fmuls
into
pop
mov
inc
adc
cmpsb
or
push
or
cmp
sub
and
out
mov
aam
sbb
rclb
xchg
and
jbe
arpl
push
lret
push
xchg
sub
adc
push
arpl
lods
nop
cltd
pop
pop
std
push
loope
scas
cld
stos
mov
sub
int
sbb
mov
jg
into
pop
push
stos
push
adc
pop
mov
mov
cmp
cmc
arpl
es
adc
push
pop
jne
sub
cmp
mov
mov
pop
mov
lds
dec
int
mov
pop
pop
pusha
dec
out
jle
inc
inc
stos
gs
icebp
movsb
push
pop
push
sub
xchg
push
test
imulb
call
out
addr16
sub
add
pusha
clc
movsl
adc
xor
shl
insl
dec
dec
pop
jo
mov
daa
fisttpl
out
and
sbb
mov
ljmp
add
je
repnz
adc
iret
sbb
adc
sbb
test
mov
dec
add
and
cwtl
frstor
cmp
mov
mov
jecxz
jo
or
mov
sbb
and
cmpsl
daa
cltd
fs
lret
fistps
jge
les
rclb
jno
or
pushf
sti
les
stos
lods
icebp
pop
add
push
stos
cltd
lea
lock
iret
into
roll
mov
out
and
or
jl
sbb
xchg
inc
es
or
cmp
pusha
dec
push
lahf
mov
js
mov
js
orb
push
adc
mov
jbe
call
add
xor
cltd
stos
cmp
shrl
test
cmp
push
daa
or
std
shrl
xchg
pop
push
adc
pop
add
and
or
or
xchg
mov
cmp
pop
andl
xchg
mov
sub
addr16
xor
mov
pop
fsts
mov
xchg
fs
mov
add
jb
inc
jecxz
mov
inc
mov
dec
cld
out
aas
mov
cltd
xchg
mov
push
lea
cli
fsub
mov
scas
fsubl
in
outsb
imul
out
lret
push
push
cld
xchg
clc
and
cmp
push
mov
adc
dec
mov
bound
push
and
rorb
add
addr16
and
lods
cmp
mov
mov
cld
and
mov
pusha
insl
nop
xchg
jmp
dec
or
popa
pop
mov
lret
push
stos
aaa
adc
mov
mov
andl
popa
popf
sahf
lock
dec
jp
cmp
lds
aam
loopne
or
xor
xchg
cvttps2pi
push
cmc
cmp
pop
insl
add
mov
int3
adc
push
out
inc
iret
xor
push
sahf
mov
aas
js
xchg
mov
test
es
jmp
js
fiaddl
test
rcll
ss
addr16
pop
inc
mov
xlat
sbb
pusha
data16
and
pop
inc
dec
shl
or
inc
loope
adc
cli
jno
mov
push
add
mov
outsl
xor
mov
in
sub
cmp
mov
sub
repnz
mov
pushl
jnp
insb
outsl
inc
jp
iret
pop
in
imul
adc
and
test
jl
push
adc
xchg
add
mov
add
scas
mov
stos
sbb
add
roll
lock
mov
xchg
sahf
int3
sub
dec
sbb
xchg
les
call
push
mov
cmp
add
imul
sub
std
mov
adc
test
mov
insb
cld
scas
aad
subl
mov
sub
inc
stc
cltd
lods
pop
cmp
test
lock
jno
push
imul
push
outsl
scas
sbb
jl
cli
add
cmp
fldl2e
pusha
mov
add
lods
lret
cmc
sti
lock
sbb
out
loope
mov
ficoms
adc
movsl
inc
push
mov
sbb
sarl
inc
add
sub
pusha
and
pop
shlb
jns
mov
lock
insb
jb
jno
mov
xchg
mov
adc
testb
mov
xchg
sarb
iret
jns
or
notl
xor
push
inc
inc
cmpsb
adcl
add
outsl
dec
xchg
pushf
lcall
lds
push
icebp
pop
lea
fsts
gs
sbb
xlat
loope
cmpsl
pusha
push
js
lods
sub
pop
xor
xchg
loop
mov
into
gs
fsubl
frstor
adc
lahf
addr16
popa
push
fildll
dec
push
adc
adcl
inc
push
icebp
mov
sub
sarb
mov
test
mov
lret
mov
adc
mov
add
cmp
jg
push
inc
dec
lds
insb
cs
jg
icebp
repnz
int
sbb
pop
stos
jns
xor
sbb
stc
adc
rcrb
stos
sbb
xor
push
ljmp
inc
sbb
stos
cmp
int
cmp
lahf
outsl
push
pop
or
mov
test
add
xorps
xchg
addr16
cmp
inc
xchg
xor
ja
or
jle
movsl
test
stc
icebp
ss
and
add
add
dec
dec
cltd
cli
aas
cli
outsb
mov
mov
mov
or
pop
and
and
mov
js
gs
fldcw
add
mov
adc
faddl
movd
popa
sarl
inc
movsl
sub
icebp
cmpsl
mov
push
cmp
mov
push
out
inc
imul
out
push
addr16
mov
push
test
clc
mov
pop
and
into
loopne
sub
inc
loope
shll
test
and
ljmp
inc
shll
pop
shll
sub
xor
or
ficoml
jbe
lret
add
adc
xchg
sahf
or
test
lods
arpl
add
repnz
xor
pop
lds
bound
push
xchg
cld
xchg
mov
pop
call
mov
cwtl
push
cmc
or
adc
loop
cli
les
into
imul
mov
xlat
jns
ljmp
data16
ljmp
mov
pop
push
in
jle
push
js
adc
jecxz
push
pushf
add
jl
dec
and
xor
mov
insl
mov
jbe
out
xlat
cmp
insb
outsl
out
mov
mov
dec
in
adcl
ret
sbb
je
pop
das
out
push
stos
cmp
insl
and
mov
sbb
mov
adc
insl
in
xchg
bound
cmp
add
out
mov
aad
mov
cmp
popf
or
leave
fisubrl
sarl
dec
sbb
mov
fbstp
incb
sar
mov
push
push
jge
das
jp
pop
divb
iret
dec
sarl
mov
loope
or
inc
pop
arpl
cmpsb
add
cmp
xor
add
lret
in
push
mov
add
out
and
outsl
mov
cmpsl
leave
gs
xor
inc
call
pushf
in
push
sarl
adc
inc
mov
jnp
or
xchg
mov
sub
dec
imul
xchg
aas
push
jge
mov
bound
xor
xchg
gs
inc
mov
cli
sub
int
fs
shlb
cwtl
dec
clc
insb
movsl
fmuls
push
mov
sub
fstpt
jo
sub
add
jbe
push
cmp
ret
dec
sub
xorl
imul
aas
or
das
sub
jbe
iret
adc
lret
ficoms
inc
sti
jae
pop
jg
push
adc
add
cli
test
hlt
clc
rorb
lods
call
and
insb
pop
inc
dec
sbb
jo
mov
or
arpl
out
cltd
or
push
xlat
jge
add
jmp
call
test
loope
or
or
int3
sbb
inc
adc
fsubrp
xchg
mov
mov
lds
andl
bt
jb
aam
into
insl
sub
cmpsb
pop
or
xchg
pop
in
lret
jnp
jno
pop
int3
nop
je
scas
out
shll
repz
xchg
or
in
aas
cli
jo
sub
or
adc
cmpsl
hlt
pop
sarb
cwtl
xchg
fs
jg
outsl
lahf
inc
xchg
mov
pop
mov
sub
arpl
mov
jnp
in
push
inc
pop
les
add
xor
dec
rcrl
jmp
and
cld
mov
cmp
nop
sbb
mov
lcall
lods
fnstcw
push
lock
les
add
loope
mov
subb
fisubrl
popf
loop
out
cmp
sub
stc
jno
pop
hlt
mov
scas
call
ljmp
dec
pop
adc
xor
and
pop
out
test
movsb
xchg
fcomps
int
cmc
inc
rol
jns
xor
pop
push
pop
out
or
aas
scas
cmpsb
and
adc
xor
in
inc
sti
std
decl
pop
loopne
xchg
cmp
dec
push
mov
jg
arpl
add
hlt
jmp
pop
ret
xchg
mov
mov
xlat
loope
out
inc
cli
je
push
push
daa
aam
jo
mov
inc
adc
repnz
pop
push
adc
xor
push
aas
push
mov
sub
out
fstpl
jge
test
adc
cs
adc
lret
nop
sbb
xchg
inc
cs
loopne
cwtl
xchg
jg
mov
dec
scas
popa
leave
sti
sbb
push
cmc
cltd
or
lcall
popa
mov
lcall
lret
test
add
movb
xchg
inc
push
mov
and
dec
outsb
xchg
sahf
sahf
xlat
cmp
dec
lcall
push
in
inc
cli
lock
aam
sarb
imul
fdivrl
mov
outsl
scas
adc
add
shll
ficoml
imul
in
push
jae
fwait
std
sub
shll
adc
es
dec
je
jecxz
int
into
icebp
cmp
shl
cld
lods
mov
lock
jle
shr
xchg
inc
xchg
stos
dec
xchg
pop
pop
iret
movhps
stos
mov
xor
cltd
sub
test
repz
adc
xor
out
cmp
bound
xchg
sbb
push
cld
dec
popf
sbb
jl
cmc
scas
pop
fistpll
pop
mov
leave
out
inc
lods
insb
loope
sti
inc
jns
clc
push
inc
data16
imul
mov
mov
mov
lea
ss
lock
jno
clc
mov
adc
jo
add
jg
inc
jge
mov
int
xchg
cmp
adc
jno
stos
cli
bound
or
cmpsl
es
stos
xlat
add
adc
rorb
mov
adc
adc
insb
mov
lds
jne
cmp
std
fisttpl
push
add
insl
stc
pop
lret
cmp
cmp
stc
mov
and
pop
xchg
and
lds
mov
icebp
pushfw
cwtl
shll
ljmp
cli
cltd
and
fimull
loop
or
mov
inc
mov
lea
or
push
fildl
enter
sbb
push
jb
mov
jmp
ror
sbb
xlat
and
rcll
pop
scas
pop
xor
lods
push
sbb
pop
mov
scas
jmp
test
xor
sbb
fimull
and
in
in
push
mov
cmp
dec
cmpsb
loop
ret
or
xchg
inc
popa
mov
test
mov
inc
lea
jg
cmpsb
test
movsl
call
mov
lahf
jle
adc
fisubs
cmp
movsb
loope
mov
xor
fwait
loope
imul
stc
mov
mov
out
dec
xlat
cmpb
xchg
das
sbb
outsl
ficompl
scas
daa
out
inc
mov
mov
cld
cmpsl
push
jge
push
or
xchg
dec
push
push
inc
jle
adc
insb
flds
insb
out
repz
dec
movsb
fcompl
arpl
bound
sbb
xchg
shl
jge,pt
xorl
pop
cmpl
or
out
enter
jecxz
push
dec
mov
pop
mov
rclb
es
add
push
add
addl
mov
mov
pop
sbb
cmpsb
and
mov
enter
scas
xchg
loopne
hlt
push
scas
and
jns
pop
mov
jae
insb
and
jo
ja
int
xchg
cmp
jg
mov
and
cltd
xor
lds
xchg
cwtl
or
xchg
push
aas
ficomps
jmp
adc
lods
ficoml
mov
xchg
mov
xchg
outsl
sbb
outsb
mov
or
sub
mov
or
popl
scas
sbbb
stc
jne
mov
int3
pop
pop
add
mov
insb
outsl
jb
in
push
mov
and
mov
sub
leave
cmp
scas
mov
add
mov
fldcw
dec
sbb
adc
adc
shl
mov
mov
xchg
pop
mov
pop
sbbl
xchg
push
test
lahf
cmp
lret
cli
and
and
or
in
pop
mov
jb
pop
push
jno
dec
push
sarl
or
dec
mov
inc
push
jb
rclb
mov
mov
shrb
sbb
int3
adc
dec
pushf
iret
insb
cltd
repz
mov
mov
dec
lods
inc
ret
jecxz
stos
sti
sub
dec
std
in
lock
inc
cltd
adc
jae
mov
push
pushf
repnz
pop
and
mov
icebp
jb
mov
das
or
cli
rcl
or
fdiv
push
add
ret
bound
dec
les
sbb
jo
inc
dec
mov
test
gs
xchg
loop
mov
push
sarl
dec
bound
sub
pop
mov
push
loop
bnd
pop
cmpsl
orb
jae
ljmp
jp
push
stos
pop
in
mov
into
push
sahf
nop
jne
cs
xchg
test
sahf
cmpsl
adc
popf
int
xchg
lcall
and
popa
xchg
push
repnz
or
out
sbb
int
call
mov
fcomp
enter
inc
and
sub
loope
pop
inc
mov
dec
cs
pop
outsb
jne
scas
mov
xchg
cld
or
mov
push
das
sbb
xlat
cmpsl
mov
push
out
mov
push
sub
inc
push
in
push
adc
cmp
rcrb
aaa
jmp
xchg
pusha
add
enter
imul
into
cltd
cmpsb
jae
cmpsl
int3
dec
test
push
mov
mov
xchg
and
mov
dec
push
ja
xor
cmp
adc
jp
stos
sbb
lret
lcall
xchg
lret
in
or
out
push
and
out
pop
mov
cwtl
mov
addl
std
outsl
sub
sub
fsub
xor
imul
xchg
jae
imul
ss
adc
in
pusha
push
and
pavgb
or
fldl
xorl
sar
fdivl
mov
sub
les
inc
xor
cmpsb
dec
push
xchg
andb
pop
insb
pop
adc
fstp
repnz
arpl
pop
push
outsb
mov
ror
out
pushl
ret
int3
jmp
xchg
mov
das
xchg
jb
xor
popf
sahf
jl
pop
out
scas
das
negl
and
pop
outsl
out
xchg
pop
inc
movsb
add
nop
ret
xchg
in
add
xchg
daa
add
adc
xchg
dec
adcl
inc
or
fistps
cmp
sbb
jb
paddb
out
inc
dec
push
inc
bound
mov
outsb
pusha
jmp
out
pop
and
fldcw
adc
nop
mov
scas
add
push
stc
pop
ds
out
mov
mov
jbe
outsb
xor
insl
sbb
mov
jle
push
dec
mov
loopne
int
or
lods
push
mov
enter
pop
les
daa
adc
push
jns
adc
xchg
xchg
mov
movsb
xchg
movsb
pop
cmp
in
in
das
pop
int3
lds
inc
data16
dec
xchg
aas
jae
jnp
sti
and
mov
sbb
daa
shl
inc
insb
or
adc
xchg
js
jmp
mov
jle
push
in
cmp
in
sbb
mov
jo
mov
dec
xor
adcl
in
mov
pop
out
repnz
pop
or
mov
mov
adc
stos
cmp
test
sbb
inc
push
idivl
and
out
mov
and
test
mov
lret
sbb
or
enter
sbb
jae
sbb
pop
andb
add
dec
inc
xchg
sar
in
in
sahf
mov
mov
out
scas
mov
add
and
pop
ja
or
sub
lret
xlat
ret
loope
push
push
adc
dec
mov
xor
inc
test
push
xchg
push
arpl
dec
ret
mov
or
fbstp
pop
decl
jae
jb
xor
outsb
sbb
xor
jg
rcrb
pmaxsw
xor
mov
push
lods
adc
cld
jbe
jbe
mov
inc
scas
inc
out
in
imul
fsubs
sub
sbb
fchs
imul
inc
sub
mov
dec
loope
rolb
cmp
mov
loopne
fnsave
lods
cmpsb
cmp
push
adc
into
in
and
xchg
sti
push
rorl
notl
and
cli
xchg
dec
dec
rcr
stos
xor
xlat
imul
in
aad
inc
xor
repz
dec
sub
loopne
stos
pop
in
adc
sbb
xchg
or
enter
mov
mov
jge
dec
fstpl
or
int
movsl
sbb
mov
popa
jge
pop
inc
in
subl
mov
mov
mov
adc
cmp
or
pushl
test
push
add
fldenv
dec
and
fs
ds
gs
jge
popf
jae
nop
cltd
fldcw
and
fwait
inc
jb
add
mov
jae
stc
sub
jno
xchg
xlat
sbb
adc
adc
xor
jno,pt
mov
sarb
push
std
fdivrl
and
mov
shrb
out
fwait
iret
inc
inc
aaa
loopne
mov
inc
lahf
incl
daa
pop
movsl
xor
mov
mov
cmp
push
sbb
pushf
inc
inc
dec
xchg
ja
inc
push
decl
push
xchg
flds
in
in
stos
leave
push
out
xchg
mov
and
or
cli
nop
je
in
push
and
fidivs
mov
jno
pop
ret
ljmp
ljmp
cwtl
add
and
in
ja
addb
add
stc
mov
cli
jb
pop
es
gs
js
ds
sub
pop
mov
test
out
ret
push
in
cmpsb
fisttps
xchg
std
int
enter
je
shll
ds
data16
jmp
out
movsl
add
sub
sti
xchg
in
push
pop
mov
rcrb
gs
dec
scas
xchg
addr16
sbb
mov
repnz
inc
nop
add
pop
add
add
mov
rorl
test
sub
add
xor
shlb
sbbb
ss
aas
inc
cltd
aad
outsb
sub
aas
xor
mov
xor
or
mov
test
pop
cltd
mov
sbb
or
pop
jge
out
arpl
sub
pop
std
inc
dec
xor
test
inc
adcl
sti
or
and
or
mov
cmp
or
sbb
in
cmp
sub
sbb
or
pushf
dec
insb
mov
pop
mov
cmp
or
sbb
in
cmp
sub
sbb
or
pushf
dec
insb
mov
pop
mov
cmp
or
sbb
in
cmp
sub
sbb
or
pushf
dec
insb
mov
pop
mov
cmp
or
sbb
in
cmp
andl
jle
icebp
xor
jae
arpl
in
sbb
jne
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
and
push
lds
jns
insb
dec
cmp
enter
call
rcrl
dec
add
push
inc
xchg
jno
popa
dec
xchg
enter
call
rcrl
pop
mov
xor
and
popa
and
pop
mov
mov
fdivrl
xor
inc
xchg
stos
xor
loopne
lret
mov
out
sub
xchg
je
adc
std
ret
std
dec
mov
movsb
les
shl
push
cmc
mov
pop
call
icebp
test
inc
pop
inc
jb
push
cwtl
pop
add
jns
push
mov
inc
sbbl
test
cwtl
cmp
test
mov
aam
int
scas
or
mov
popa
nop
aaa
orl
lock
loope
out
pop
or
adc
mov
pop
cli
and
cmp
das
in
xchg
fcmovnb
cltd
or
pushf
in
jns
inc
scas
dec
test
mov
les
pop
push
loopne
mov
cmp
dec
push
test
in
and
or
sbb
mov
xbegin
lret
pusha
ret
test
js
jae
inc
sub
jl,pt
ja
inc
popa
pop
xchg
mov
popf
aam
les
cwtl
jmp
sbb
inc
pop
cmp
sub
rorl
test
scas
aam
leave
mov
pop
push
cmp
add
jno
popa
cmp
call
rcrl
dec
add
push
inc
sbb
popa
cmp
call
rcrl
dec
cmpsl
repz
loope
sahf
xchg
test
jae
or
rorb
and
fnsetpm(287
inc
add
mov
cmp
lret
jno
lret
mov
mov
and
repz
cmp
add
out
dec
mov
xchg
fldenv
imul
lock
pop
fisubl
cmp
leave
jmp
in
shrl
mov
push
mov
pop
inc
pop
in
lods
or
sub
mov
int
fiaddl
ds
scas
mov
jge
mov
ret
dec
sub
dec
popa
fnstsw
sub
call
xchg
jnp
dec
jmp
in
inc
popa
popa
dec
rorb
mov
sub
nop
insb
inc
mov
imul
cmp
xchg
sub
in
sub
lret
dec
fildl
and
ljmp
mov
adc
dec
test
push
ret
lea
push
mov
xchg
push
mulb
sub
pop
sbb
jmpw
imul
imul
andl
repz
filds
in
hlt
jb
ss
stc
dec
pop
sbb
imul
add
sub
in
aad
xor
mov
daa
mov
std
dec
push
mov
int3
cmpl
mov
iret
mov
add
jp
data16
out
scas
and
popa
mov
fisubrl
aad
daa
cli
ljmp
imulb
mov
icebp
mov
ret
jae
les
in
and
pop
in
xchg
sub
mov
js
js
mov
add
add
pop
sbb
mov
mov
jmp
nop
dec
js
fstps
lcall
in
iret
xor
and
out
rcll
imul
sub
sbb
xchg
dec
into
je
or
fidivrs
mov
adc
fs
push
jno
andl
lods
push
jmp
jmp
int
mov
cmpsb
adc
jmp
outsb
pushf
jge
mov
ljmp
mov
ds
ja
cwtl
mov
pop
mov
jb
jecxz
addr16
sbb
test
iret
dec
outsb
pop
cmpsb
lea
sub
movsb
jl
inc
or
iret
icebp
outsl
xor
dec
loopne
sbb
or
dec
push
std
shrl
jns
push
jnp
sub
inc
jp
mov
aas
mov
cmp
push
repnz
mov
inc
lcall
mov
fstl
pop
aaa
cld
pop
mov
lods
imul
std
aaa
pusha
add
loopne
and
js
add
ret
push
cli
mov
jge
repz
lret
ror
daa
mov
movsb
insb
loope
add
lret
mov
jno
jp
dec
mov
lret
pop
lahf
dec
inc
pop
cs
stos
jecxz
dec
cmpsl
pop
cld
movsb
mov
adc
sahf
int
repnz
into
sub
popa
sub
rcrl
pop
or
jno
imul
inc
xor
ss
sbb
dec
or
mov
mov
lret
jno
dec
fidivl
cmpsb
adc
bound
pop
pop
inc
test
dec
and
mov
addb
jmp
nop
stc
push
mov
pop
mov
cmp
sbb
popa
cmp
dec
bound
adc
mov
mov
push
push
leave
sbb
inc
sbb
push
and
jle
add
dec
outsb
cmc
inc
xlat
push
jbe
packsswb
nop
mov
frstor
xchg
aad
loopne
mov
dec
xor
dec
pop
in
push
jmp
dec
dec
push
out
jo
pusha
mov
dec
stos
dec
sub
push
jno
pop
repnz
xchg
xor
orb
incb
lods
lods
out
int
mov
jge
and
test
addr16
jo
add
push
enter
test
and
lods
sbb
xchg
dec
test
addr16
mov
pop
in
sbb
and
mov
je
jbe
jb
adc
xchg
mov
jno
cltd
insl
xchg
inc
add
sahf
push
xchg
in
cmc
pushf
and
or
pop
out
add
mov
ja
add
mov
out
inc
leave
mov
test
pop
fdivr
mov
xchg
ds
jnp
jg
mov
outsl
or
xor
xchg
popa
fwait
ret
jb
pop
daa
pushf
adc
jo
xchg
pushf
push
outsb
dec
sahf
mov
lahf
frstor
push
or
test
fiaddl
ret
mov
mov
xor
in
in
mov
sub
cmpsb
sub
adcl
sub
ljmp
nop
popf
xor
and
stc
es
xchg
gs
aas
roll
shll
out
xor
call
dec
inc
or
gs
stos
xor
xlat
mov
ret
out
gs
fildl
rolb
xchg
push
sbb
mov
loope
mov
pop
es
lret
add
call
push
and
push
push
add
xchg
dec
mov
pop
inc
xchg
jge
xchg
jns
mov
mov
jmp
sbb
jne
push
movsb
jg
pushf
fsubs
jmp
ret
adc
out
je
inc
xor
mov
cmp
cmpl
add
xchg
pop
mov
mov
or
push
mov
mov
cltd
or
push
dec
cltd
mov
lea
lock
inc
xchg
mov
mov
push
xchg
mov
push
cmovno
ret
mov
mov
mov
xor
dec
pop
adc
and
add
xor
add
lea
sbb
bound
bound
shlb
add
push
jmp
stos
shlb
in
adcl
sub
dec
imull
test
add
sar
sub
dec
push
psrlq
pop
dec
repnz
inc
mov
push
xor
enter
aas
out
lahf
xchg
repz
xor
inc
or
jns
sbb
jne
or
and
jb
xlat
pop
pop
inc
imul
cmp
daa
negb
dec
or
pop
sub
or
lea
xchg
gs
pop
cmpsb
mov
sti
sbb
out
mov
push
push
mov
add
lods
mov
add
mov
rclb
in
sub
repz
mov
cmpsb
jl
jg
or
call
enter
lds
xor
cli
sbb
in
aad
loop
mov
jecxz
test
adc
cmpsl
das
mov
dec
xor
loopne
lret
test
inc
vandps
sbb
xchg
movsb
out
rclb
mov
arpl
mov
icebp
jecxz
dec
push
jg
filds
push
into
ret
lods
sub
clc
adc
in
lahf
pusha
sbb
jbe
insl
and
pop
sub
and
out
xor
icebp
das
sbb
mov
mov
rcrl
and
cmp
loope
mov
and
adc
pop
popa
mov
jmp
mov
movsb
daa
adc
scas
dec
out
jl
fidivrs
out
xor
cwtl
cmp
sahf
mov
aam
mov
ficoms
xchg
or
addr16
into
adc
mov
dec
mov
jns
sub
ror
fwait
xor
bound
pushf
imul
cmpsl
ja
pop
inc
jo
push
nop
push
and
xchg
cmpsb
inc
cli
ljmp
push
or
add
push
daa
sub
lds
test
mov
adc
xlat
loope
shlb
mov
adc
add
pusha
cli
xorl
sub
lods
cwtl
int3
fwait
jg
xor
push
dec
clc
mov
imul
xor
iret
xchg
jg
cmp
push
popf
fisubl
ret
icebp
dec
leave
dec
adc
hlt
push
and
ja
outsb
cmp
cld
add
cs
movsl
push
xchg
les
movsl
popf
xor
outsb
insl
cltd
sti
aaa
int3
add
andl
arpl
add
fwait
mov
shll
add
pop
test
push
stos
incl
enter
push
sahf
push
sub
shrl
cmp
mov
add
in
mov
push
dec
push
popf
mov
jo
and
loop
jecxz
mov
sbb
jns
repz
arpl
jg
ds
int3
fildl
and
cli
lods
clc
xor
mov
push
fistpl
jne
push
insl
mov
add
shlb
insb
lea
bound
sbb
xor
sub
pop
clc
and
xchg
ss
mov
mov
xor
jmp
js
xchg
cmc
fildll
rorb
xchg
xchg
mov
adc
orb
and
shrl
add
addr16
xor
inc
gs
inc
mov
stos
pop
xchg
out
es
inc
and
fimuls
out
outsb
sub
int3
je
pop
pop
mov
jg
mov
pop
cs
jbe
mov
cwtl
sub
bound
cmp
leave
mov
inc
jge
cs
testl
xchg
addr16
inc
mov
pop
dec
cmp
in
pusha
movsl
aaa
cmpsl
mov
mov
testb
bound
xchg
mov
sahf
push
negl
inc
in
mov
mov
jbe
lea
dec
and
sahf
fcomip
inc
je
jb
xchg
ret
in
int
jle
inc
mov
push
pop
cmp
push
ss
mov
sbb
sahf
test
lods
or
mov
dec
xchg
xchg
aaa
dec
nop
icebp
jle
pop
loopne
ret
fdiv
mov
push
movsl
adc
popa
jmp
mov
jo
add
xorb
add
in
cmp
pop
sub
out
jmp
out
xchg
or
mov
lcall
adc
loopne
xor
int3
ret
fdivl
aas
inc
bound
lret
fprem
into
inc
pushl
cmc
or
fwait
jge
nop
inc
xor
mov
cld
stos
sbb
es
xchg
aam
aam
pushf
inc
or
xor
push
adc
popf
test
xor
std
dec
pop
xchg
mov
push
jne
and
test
adc
test
sub
loope
int
add
cltd
into
enter
or
and
rclb
dec
cli
jae
loopne
in
shll
mov
call
adc
movsb
push
enter
loopne
jb
sub
int3
fisubl
loop
jae
dec
xor
and
or
aas
push
fs
imul
and
rorl
hlt
int3
xchg
dec
add
std
jge
mov
jge
repnz
call
or
nop
cmpxchg8b
pop
sbb
or
mov
sar
mov
and
lahf
movsl
dec
cltd
negl
outsl
cmp
xchg
jo
push
xor
and
mov
pop
in
arpl
cmp
jbe
lock
enter
pop
stos
hlt
sub
das
scas
mov
nop
insl
in
ret
test
dec
sub
jae
sub
pop
adc
xlat
aaa
out
fwait
xchg
rcr
sub
sub
xchg
cltd
xorb
cwtl
dec
rorb
cmpsb
jmp
lret
ret
mov
mov
scas
test
sub
mov
xchg
pop
xchg
jae
cmc
leave
or
out
frstor
loope
xor
push
lds
mov
jmp
dec
lahf
xchg
sarb
adc
xor
or
cmp
jge
into
xlat
addb
cmp
out
test
out
loopne
jg
mov
pop
xor
push
sbb
jae
cmp
inc
into
int3
lret
in
mov
std
pop
fneni(8087
fmuls
push
or
jge
lcall
pop
inc
outsl
cmp
push
jno
mov
mov
outsb
lods
int3
sbb
push
and
js
cli
jo
fdivrl
pop
mov
push
pop
mov
jno
mov
sub
mov
test
or
mov
add
out
mov
sbb
mov
xor
inc
insl
cmp
insl
jae
shll
jb
shl
push
pop
push
stc
xlat
inc
cmpl
xchg
fbstp
jle
inc
idivb
adc
jg
jb
cs
push
lcall
aaa
shrl
xchg
or
leave
or
jo
add
aad
dec
mov
fisubs
pop
sub
dec
pop
in
mov
outsb
xor
dec
popa
pop
adcl
in
mov
ret
lea
lret
orl
insl
out
jns
and
mov
push
cltd
add
ljmp
loopne
mov
test
addl
sar
jno
sti
mov
mov
ljmp
jbe
xlat
outsw
in
pop
jne
jne
push
jl
and
out
add
out
ret
ds
sub
mov
jmp
out
test
cmp
jb
lahf
out
lock
mov
xor
push
inc
sarb
iret
pop
mov
es
sub
add
jp
popa
sbb
lods
sub
push
lds
cmp
je
xor
jns
cmp
pusha
aad
movsb
arpl
roll
lds
mov
sub
nop
sub
data16
add
push
ljmp
and
shl
mov
jb
mov
push
sub
push
lret
inc
mov
pop
enter
orb
xor
in
inc
xchg
iret
cmp
sub
xchg
cmp
sbb
ja
xchg
pop
popa
mov
fcmovbe
fiadds
xchg
in
aad
inc
cmpsl
pop
add
adc
ficomps
mov
cld
push
jmp
das
rorb
add
into
add
fcoms
or
xchg
adc
addb
jns
lods
cmp
mov
scas
sub
int3
test
fdivrl
sub
dec
imul
negl
call
and
add
mov
lahf
test
or
in
stc
adc
mov
or
leave
rolb
test
cltd
add
sub
mov
stos
cmpsl
imulb
test
scas
nop
lods
pop
mov
daa
inc
fnstcw
jg
jmp
jl
push
jmp
in
outsl
xchg
cltd
add
clc
in
or
adc
pop
or
test
out
test
pop
ljmp
adc
std
jno
aas
stos
lret
dec
shlb
xor
aas
mov
xchg
or
test
jb
lret
loopne
adc
inc
jp
shrl
inc
mov
pop
add
xor
fwait
pop
jbe
mov
out
mov
adc
iret
gs
dec
fcomip
sub
dec
movsb
fcmovnbe
test
ss
mov
js
aaa
rcr
xor
xchg
mov
and
xchg
mov
fs
and
pop
je
sbb
adc
pushl
push
and
xor
xlat
and
or
sub
cmpsb
data16
xchg
jae
cwtl
setns
jb
cmp
and
pop
clc
in
add
inc
popa
xchg
fwait
xchg
cmp
in
movw
fxtract
sub
jae
add
and
xlat
and
and
xchg
mov
loop
xlat
adc
sub
data16
inc
nop
jnp
inc
sbb
cmpsb
out
sbb
lcall
cmp
je
shrl
mov
movsb
ss
outsl
xchg
jno
arpl
inc
xor
sbb
sbb
jnp
lods
or
mov
sbb
or
clc
std
fistps
xchg
cwtl
or
pop
inc
adc
lock
push
cmp
pop
lret
dec
cs
sbb
push
leave
or
cmpsl
inc
mov
jmp
clc
imul
cmp
js
out
fildll
inc
aad
mov
popf
add
push
adc
out
movsl
inc
sbb
filds
lret
repnz
enter
imul
fdivrl
std
xchg
sbb
add
test
aaa
and
xchg
stc
dec
pusha
daa
xor
js
lret
testb
repnz
pop
inc
add
into
enter
arpl
es
les
push
mov
adc
and
cli
or
xor
nop
test
repnz
sti
xor
mull
lds
push
mov
push
call
ret
clc
adc
push
les
cmpsb
dec
popa
xchg
inc
pop
or
mov
inc
xchg
in
push
and
jno
lahf
dec
add
out
and
std
and
cld
push
inc
mov
mov
cmp
jecxz
sbb
shl
inc
sub
mov
call
int3
test
mov
fimuls
jl
mov
dec
scas
icebp
or
cwtl
dec
xor
jmp
and
cmp
mov
rolb
shl
sub
and
cmc
pop
cltd
and
pop
out
pop
push
mov
mov
mov
loope
imul
pop
fcomip
inc
inc
insb
sbb
cmp
fnsave
sbb
lods
dec
dec
insb
popf
in
cmp
lcall
loopne
mov
cwtl
call
mov
int
xchg
incl
jns
in
xchg
int3
push
rcll
mov
mov
dec
loope
or
sbb
jbe
sub
ljmp
inc
inc
dec
mov
dec
push
fildl
popf
mov
push
es
mov
mov
mov
daa
jbe
jo
jnp
loop
arpl
movl
add
ret
xchg
ja
dec
push
jp
jb
pop
stos
pop
push
movsb
popa
push
faddl
sbb
cmp
cmpsb
les
mov
loopne
arpl
jecxz
lret
mov
jle
in
out
divb
and
inc
orb
xor
xor
add
in
jnp
in
push
cltd
into
iret
adc
dec
das
dec
fadds
jb
jp
iret
add
repnz
xor
inc
push
push
hlt
or
sub
das
ljmp
outsl
nop
pop
sar
mov
cmp
mov
fisttps
cmp
adc
ss
push
iret
add
jl
cltd
push
xchg
inc
mov
popf
imul
gs
into
arpl
incb
sahf
push
mov
dec
cmp
repz
mov
mov
int
fldenv
mov
call
or
mov
pusha
mov
stos
pop
sbb
cwtl
pushf
sbb
fdivrl
std
or
dec
xchg
shrb
dec
adc
cmp
mov
dec
fmul
sub
mov
xor
lods
test
rcrb
dec
add
lret
cmp
arpl
cld
mov
fidivrs
push
ja
push
popa
cmp
and
xchg
or
sub
movsl
sub
shlb
pop
nop
mov
xchg
add
xlat
and
mov
pop
inc
test
rcl
mulb
adc
inc
ss
pusha
mov
dec
mov
lret
icebp
idiv
inc
mov
pop
sbb
les
in
loop
dec
push
inc
mov
or
loop
cli
pusha
mov
mov
sti
and
sbb
jg
dec
popa
xor
loop
add
ljmp
push
or
jo
out
inc
push
mov
sarl
xchg
data16
cltd
or
fisubrs
insl
testb
sti
add
shrl
in
cmpb
adc
ljmp
add
jno
add
jno
mov
fisttpl
lods
adc
icebp
int
setle
scas
jbe
mov
dec
xor
push
mov
je
mov
jmp
cmpsb
pop
sbb
sub
fildll
add
idivl
mov
add
aaa
or
outsl
cmc
pop
dec
pop
and
mov
nop
xchg
mov
rcll
xchg
pop
pushf
stc
sub
jo
bound
bound
ds
sub
push
outsb
xchg
xchg
repz
dec
bound
in
int3
dec
mov
pop
fnsave
ds
adc
daa
imul
notl
in
cmpsb
pushf
push
push
sub
inc
mov
pop
pop
cmpb
xor
jmp
cld
loopne
inc
sub
cli
adc
jo
push
popf
aas
mov
orb
arpl
inc
and
aas
inc
xchg
shll
aaa
xchg
mov
aaa
stos
xlat
in
movsb
popf
mov
sub
xor
and
add
je
push
inc
and
les
lret
pop
stc
mov
xchg
adc
jae
stc
inc
mov
sbb
xor
mov
jo
clc
lret
xchg
adc
xchg
test
rol
mov
mov
lea
pop
stos
fimuls
into
outsb
pop
xor
mov
sbb
sbb
sbb
loop
dec
push
aas
stos
je
jb
mov
adc
sarb
pop
cmp
sub
shrl
cli
out
xor
push
ficoml
addr16
add
jl
out
or
es
xchg
pusha
iret
dec
adc
add
pop
inc
jg
rcrb
jbe
or
adc
ret
sarb
jmp
adc
sbb
xchg
aad
push
push
sarb
loop
roll
dec
ret
jmp
lahf
fcmovnbe
fcmovnu
test
dec
outsb
fisttpl
mov
sbb
jl
adc
sti
je
inc
pop
xor
xor
not
inc
mov
jbe
and
or
jno
popa
cmp
call
rcrl
dec
add
push
inc
sbb
popa
cmp
call
rcrl
dec
xor
push
adc
js
or
jno
mov
fadds
mov
cwtl
icebp
mov
mov
imul
push
or
jno
loope
xchg
aaa
jle
sbb
mov
addr16
push
push
inc
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
dec
test
ss
dec
int3
aas
pushf
adc
sbb
jmp
mov
ret
push
negb
lods
push
mov
inc
in
push
std
data16
repz
sub
mov
movb
out
negb
or
jmp
fstpl
mov
mov
xchg
xlat
outsl
out
mov
xchg
aas
test
inc
jmp
inc
clc
int
adc
dec
jne
mov
xchg
ret
cmp
jno
mov
push
or
mov
jbe
xor
and
shrb
pop
repnz
dec
inc
js
and
jnp
push
lds
in
aam
insl
into
add
add
cmp
imul
adc
lods
outsb
mov
inc
stc
test
push
xchg
test
fnsave
js
lock
and
jo
bound
or
and
push
in
mov
xor
push
adc
push
push
inc
fprem
xchg
dec
lret
mov
fdivrl
outsb
insl
cmpsl
cmp
and
popf
es
pop
popf
inc
in
adc
data16
dec
je
add
jle
test
cmpsb
push
enter
xchg
outsl
je
pusha
shlb
pop
icebp
sub
nop
jne
pop
lcall
xlat
jle
sub
xor
jmp
sti
popa
std
icebp
das
mov
add
dec
ret
pop
fisubrl
xchg
sub
pop
push
loope
icebp
add
jbe
xchg
mov
insl
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
lods
shr
mov
imul
fs
lds
inc
sbbl
mov
pop
dec
out
or
xchg
lahf
std
mov
and
dec
sub
add
testl
jne
pop
jle
lods
push
dec
push
fstpl
outsl
pop
fbld
cltd
xorb
pop
lea
mov
in
jp
adc
sbbl
and
jl
call
pushf
mov
mov
shlb
sub
jne
xor
out
push
jp
mov
xlat
test
xlat
mov
cld
adc
fucomi
lods
dec
dec
fsubrs
mov
lcall
inc
jmp
sbb
and
mov
in
jb
sub
dec
iret
lahf
push
insb
aas
test
add
pop
push
add
inc
aaa
add
fdivrs
and
push
clc
dec
dec
xchg
leave
add
sti
sbb
imul
push
cmp
incb
sahf
sbb
pop
add
mov
jmp
ret
xchg
jg
inc
or
sub
xor
in
dec
andb
inc
inc
or
inc
sub
inc
shl
repnz
sbb
fbstp
test
mov
mov
mov
xchg
pop
push
mov
jbe
pop
cld
jmp
sbb
mov
movsl
lcall
nop
mov
cltd
lret
inc
pop
lahf
or
cmpsb
or
xchg
lret
stos
adc
lcall
loope
testb
fnstenv
add
jmp
sbb
jno
push
adc
add
aaa
ja
sbb
jl
or
mov
or
pop
out
cltd
mov
ja
ljmp
mov
std
cli
jle
push
out
call
incb
cmc
iret
adc
aas
push
lcall
lods
dec
and
js,pt
adc
xor
xchg
cmp
out
lds
inc
sbb
mov
test
push
jmp
xchg
jmp
lcall
and
adc
out
es
pop
add
data16
flds
or
jp
inc
daa
cmp
lock
outsb
stos
sub
idivl
pushf
js
test
xor
mov
xchg
lock
jbe
test
cwtl
jnp
gs
fs
lods
xchg
clc
hlt
lcall
jmp
stos
mov
cwtl
hlt
das
insl
bound
lock
or
in
dec
inc
sbb
and
cwtl
dec
mov
jl
in
jo
scas
mov
push
sub
popf
add
lods
ljmp
enter
fs
mov
insl
jg
push
push
or
adc
arpl
lock
mov
sub
stos
enter
enter
xchg
add
shr
out
push
jl
add
clc
cmpsl
lds
aaa
lock
mov
jmp
negb
jmp
jle
dec
lahf
fldt
cmp
and
xchg
mov
pop
xlat
add
jnp
imul
mov
jno
lea
xchg
hlt
jg
mov
dec
pop
loop
push
adc
push
inc
adc
pop
hlt
and
jge
dec
stos
jne
inc
inc
movsb
mov
in
pop
repnz
into
xor
clc
cmc
inc
jmp
xchg
add
outsl
xchg
jne
mov
sub
jno
lahf
push
cmc
xchg
xlat
xchg
aad
mov
and
dec
hlt
sbb
cwtl
xlat
xor
icebp
mov
mov
les
or
inc
lret
pop
xor
fnsave
push
pop
jmp
scas
push
insb
and
jp
cmp
jp
or
inc
addl
pop
stc
rcrb
gs
mulb
iret
shrl
dec
mov
aam
dec
xchg
add
jno
push
sbb
xchg
add
xor
xchg
jae
xor
out
add
xorl
adc
push
pop
sub
pop
rclb
add
sbb
ss
clc
jg
jb
xchg
fsubl
jle
push
aam
jge
shlb
xor
jge
push
push
sbb
pop
xor
pop
pop
fs
ds
mov
and
popa
rolb
inc
les
jge
movsb
xor
push
in
jl
std
jmpw
add
icebp
cld
sub
movsl
mov
out
inc
popf
xor
inc
xor
stos
adc
ja
bound
inc
in
mov
sti
or
jbe
mov
icebp
inc
lock
add
add
ljmp
lahf
pop
or
cmc
rorl
cmp
sbb
orb
jl
push
pop
cmp
in
adc
inc
stc
mov
pop
sbb
and
mov
pop
jnp
dec
and
and
jmp
xchg
call
gs
jmp
push
lods
jb
loopne
cld
inc
push
pushf
xlat
dec
inc
out
popf
iret
pop
push
cmc
add
inc
fidivs
loop
jl
movsl
test
fisttpl
sahf
dec
mov
cmpb
xchg
pop
or
dec
fcom
mov
ret
das
imul
push
pop
adcb
sbb
repnz
mov
jae
es
je
cmp
dec
mull
mov
ja
in
pop
mov
int3
push
dec
inc
mov
adc
add
movsb
cmpsb
mov
test
scas
xlat
pop
jb
inc
test
fstpl
xor
mov
loop
push
rcll
mov
scas
int3
push
pop
bound
test
jno
out
and
sbb
out
pop
cs
jp
pop
pop
outsl
or
ss
es
cmpsb
es
cmp
mul
adc
divb
push
mov
subb
ja
std
mov
sbb
adc
inc
xchg
cmpl
inc
and
lock
lds
sub
sub
mov
pop
push
iret
pusha
mov
insl
adc
add
xchg
in
loop
in
not
out
sbb
or
mov
test
push
or
subb
jle
fistpl
inc
push
fists
cmp
xor
fs
xchg
jnp
in
cltd
cld
fwait
test
dec
dec
xchg
jge
movsl
or
mov
dec
shrl
call
test
xor
sub
int
sbb
int3
lods
add
inc
sahf
stos
jb
out
dec
mov
xchg
inc
cmp
push
add
in
jne
daa
dec
xlat
repz
pcmpgtb
and
test
push
cmp
test
sub
inc
fs
clc
cmp
fdivrs
push
inc
testb
sbbb
call
lods
ret
je
out
push
arpl
insl
xchg
divb
xchg
adc
lods
ret
cmp
in
jg
xchg
fldcw
jecxz
sbb
mov
push
sbb
pop
inc
sub
push
imul
nop
int3
add
xchg
pusha
jmp
inc
jecxz
and
add
lcall
add
xor
insb
cmpsl
push
shll
popa
adc
pop
sub
inc
or
add
in
add
int
xor
popa
push
jbe
dec
push
lcall
lret
insb
inc
dec
push
mov
mov
push
jg
pop
call
into
sbb
cmp
lods
or
dec
pop
pop
ret
add
out
movsb
push
clc
xchg
xchg
pop
inc
jge
leave
sub
pop
pusha
gs
push
dec
jae
jg
jns
push
add
into
leave
cmp
sbb
jmp
stc
out
clc
xor
movsb
mov
xchg
push
ds
push
add
inc
inc
dec
push
jns
shl
call
movsl
push
das
mov
dec
sbb
fistl
mov
in
adc
mov
lret
sub
xchg
out
aad
loopne
mov
je
push
xor
sti
push
fisubrl
adc
fwait
sub
xchg
mov
xchg
ja
les
int3
jle
jle
fcoml
mov
mov
cwtl
push
add
inc
aad
out
rolb
cmp
cs
stos
push
negb
dec
pusha
pop
xor
push
pop
int3
pop
orb
pop
adc
lret
test
mov
clc
add
inc
dec
cmpsl
dec
sarl
xor
in
or
insl
std
fdivrs
in
xchg
mov
xorl
xor
pop
sub
stos
mov
push
or
iret
roll
les
imul
cmp
sub
pop
mov
mov
cmp
inc
xor
clc
push
adc
ja
aas
add
in
add
shlb
mov
dec
xchg
jns
cmpsl
mov
bound
in
icebp
out
mov
cs
push
cmp
pop
dec
in
je
inc
fwait
lahf
xchg
test
rolb
paddq
fldt
icebp
cmp
addb
inc
nop
pop
shl
add
jle
fadds
in
ficoms
lret
sbb
mov
fdivr
dec
mov
imul
iret
inc
loope
stos
xchg
leave
loopne
lods
mov
pop
gs
sub
mov
mov
aad
mov
outsb
insb
dec
add
mov
out
in
adcb
sbb
enter
pop
jno
test
shrb
shlb
mov
push
jnp
flds
adc
inc
iret
addl
movsb
int3
std
adc
push
and
shrl
rorb
bnd
pusha
cs
rcrl
pop
ret
mov
mull
cmp
xor
or
pop
into
jae
test
bound
leave
je
adc
movsb
lds
xchg
inc
enter
xchg
add
aas
add
dec
push
push
imul
popf
push
hlt
mov
push
mov
bound
inc
jbe
imul
lods
popa
pop
jecxz
icebp
inc
push
cmpsl
push
lea
add
stos
add
push
aaa
xlat
test
rorl
cmp
jnp
fistpl
mov
or
push
cmp
loope
push
popf
popl
xor
dec
insb
jb
add
xor
int3
dec
dec
sbb
xchg
mov
cli
stc
fdivp
inc
ds
xor
jle
pop
hlt
adc
test
pusha
fimuls
and
pop
dec
divl
popf
nop
cltd
aaa
push
jg
mov
sub
inc
pusha
loope
in
aad
in
nop
ret
cld
cmp
mov
test
add
mov
movsl
mov
fwait
lods
xorl
jg
inc
stos
and
or
out
sub
sbb
es
repnz
loopne
mov
jp
movsb
or
in
inc
xor
loopne
imul
lds
mov
in
in
adc
and
sub
mov
inc
repz
sbb
jns
inc
add
mov
pop
out
mov
xor
cmp
sub
movsb
dec
pushw
mov
jmp
xchg
lds
fidivs
icebp
pop
jmp
and
inc
outsb
jmp
lret
push
jecxz
lret
sbb
xor
add
sub
sub
add
jecxz
out
stc
adc
iret
mov
ljmp
xor
imulb
out
jg
inc
inc
mov
filds
xor
mov
bound
pop
pop
popf
sbb
cld
aaa
xchg
fistpl
add
fisubrl
fmull
adc
sbb
insb
jbe
ja
mov
pop
inc
adcl
add
jne
mov
lea
push
faddl
jns
cmp
ret
mov
mov
mov
pop
fnstcw
ja
push
pop
add
mov
mov
push
add
cmp
rorl
sbb
dec
cmc
mov
movsb
or
xor
mov
xchg
test
sbb
push
bound
imul
rcl
xlat
repnz
jae
jbe
mov
cld
js
les
lods
adc
ret
mov
pop
hlt
push
pop
out
hlt
popa
sub
lahf
aad
mov
lea
rorb
das
push
push
dec
sub
dec
in
testb
dec
add
aas
pop
clc
lret
pusha
arpl
les
adc
xor
outsl
lea
movsl
jg
push
adc
movsb
xor
stc
in
xchg
dec
fisttpl
cwtl
xchg
out
std
fmull
mov
push
xor
lock
mov
fldenv
cmp
inc
mov
xor
pop
mov
loop
daa
jmp
adc
movsl
popf
or
aam
xchg
fld
clc
sbb
outsl
je
xchg
bound
lahf
inc
leave
xchg
imul
dec
fsubs
adc
scas
clc
lcall
and
or
nop
push
clc
ret
jmp
mov
int3
sarl
adc
xlat
imul
outsl
aam
fwait
insl
cmp
inc
hlt
int
aam
mov
mov
scas
jnp
cld
decb
dec
or
mov
adc
jmp
adc
in
daa
int
in
stos
std
push
xor
jp
lods
sub
cld
jge
push
pop
push
pop
data16
leave
in
or
xchg
test
add
sbb
mov
mov
xchg
dec
mov
into
dec
xchg
mov
call
mov
mov
sahf
scas
pop
pushf
or
shlb
sbb
mov
int3
fidivs
xchg
adc
loop
mov
out
repnz
fsubs
icebp
stos
imul
scas
mov
aad
dec
sbb
cmp
jno
pusha
imul
out
call
lret
add
loope
push
das
mov
in
push
pop
fbld
sbb
mov
dec
mov
ret
jae
xchg
negl
cwtl
mov
push
rcll
mov
or
loope
rcll
jge
add
inc
and
jmp
mov
xor
dec
inc
inc
push
add
dec
push
aad
stc
cmp
push
cmp
mov
stos
hlt
insl
into
ret
leave
cld
lret
or
sub
xor
out
mov
jg
data16
mov
push
adc
dec
cmpsb
movsl
insl
insl
sbb
mov
dec
rcrl
lret
in
xchg
lret
adc
jecxz
cmp
push
jno
lret
push
xchg
lret
in
add
nop
jmp
in
dec
in
cwtl
fstps
inc
push
cmpsb
cmp
xchg
add
pop
jl
inc
jl
pop
cmpb
xor
mov
add
mov
mov
push
mov
mov
inc
pop
lret
xor
and
popa
push
push
out
pop
mov
lock
pop
cmc
dec
adc
fnsave
popa
mov
cltd
std
jp
lret
mov
sbbb
adc
mov
ja
pop
push
stos
xchg
out
cmp
in
dec
shll
jno
mov
jo
les
push
mov
adc
pop
sbb
add
sbb
and
addr16
sbb
fidivl
sbb
mov
inc
cmp
mov
imul
fisttps
leave
into
stos
or
sbb
test
int
mov
xor
and
cmpsb
shrb
lcall
pop
sub
out
jb
mov
xchg
out
sbb
cmc
bound
inc
add
pop
push
sbb
push
push
mov
add
cwtl
lret
add
sub
ds
pusha
mov
mov
loopne
mov
popa
sub
rcr
mov
push
cmp
jp
mov
push
pop
mov
mov
xchg
mov
add
out
push
xchg
add
popa
jne
cmpsl
or
mov
push
cmp
and
or
in
xchg
and
pop
mov
mov
dec
aad
dec
xchg
dec
or
push
inc
and
jl
popa
frstor
ja
add
into
xlat
fwait
sahf
or
mov
lea
aaa
cmp
pop
dec
push
or
repz
jle
inc
rorl
fwait
push
sub
lock
dec
es
out
daa
cmp
movsl
and
push
xchg
jb
mov
xorw
xchg
call
cmp
stos
xchg
movsl
sub
inc
sbb
std
and
lods
or
stos
popl
mull
mov
test
mov
lods
adc
dec
decb
outsl
fyl2xp1
sbbb
adc
push
sbb
lret
sub
mov
loop
mov
rcr
dec
aad
mov
mov
icebp
lds
mov
faddl
insl
add
pop
xor
push
outsb
outsl
dec
mov
push
jp
xor
gs
mov
pop
mov
xor
arpl
fcmovne
jmp
push
mov
bound
or
stos
loop
sub
sub
insb
sub
mov
add
js
jns
push
xchg
hlt
mov
dec
aas
xchg
or
outsl
add
and
inc
or
cmp
es
std
icebp
pop
xchg
or
imul
jnp
cmp
jne
xchg
imul
loopne
sarl
rcrb
outsb
icebp
pop
es
into
lret
shrb
cmp
in
pop
out
pop
push
jae
mov
mov
pop
out
cmp
aaa
in
cmpsl
xor
mov
xor
jno
sbb
xchg
nop
xor
dec
mov
pop
mov
lcall
lods
adc
call
push
arpl
add
std
jno
out
jg
ja
std
mov
sub
and
mov
idivl
xor
xrelease
inc
lds
lods
jo
cs
xlat
arpl
ret
jb
push
jg
pop
stos
or
inc
pop
shrb
hlt
fidivrl
stos
sarl
adcl
sub
stc
inc
gs
inc
icebp
out
sub
push
test
cmpl
test
jle
jl
pop
enter
mov
xor
cwtl
imul
shll
inc
les
mov
nop
add
cwtl
call
jb
or
call
in
jg
ret
dec
imul
ss
aaa
roll
inc
sub
xor
aad
std
enter
testl
or
mov
repz
shrl
in
rcrl
and
jge
popa
fidivs
xor
cmp
ja
xchg
mov
or
pmaxsw
pop
inc
or
sbb
fincstp
fwait
push
in
roll
sub
rcll
jae
adc
jno
push
fwait
mov
pop
fisttpll
push
mov
mov
xchg
iret
les
dec
adcb
mov
das
dec
test
xor
mov
aas
push
cmpsl
addr16
sbb
pushl
outsb
push
jno
add
mov
lret
pop
and
and
cmpl
cmc
xchg
fldt
into
push
mov
adc
js
fwait
loop
fimull
inc
cmp
mov
pop
ja
rorb
in
loop
push
lahf
xchg
adc
cwtl
fisubrs
push
inc
sbb
and
out
mov
xchg
mov
arpl
scas
cmpsb
mov
cmp
enter
pop
or
enter
xchg
out
adc
xor
dec
push
xlat
pop
push
mov
push
mov
pop
xchg
dec
ds
pop
jg
xor
dec
sbbl
dec
lcall
sbb
mov
cmp
aam
add
fadds
mov
mov
ficomps
add
test
hlt
xchg
xchg
into
das
mov
pop
lahf
hlt
mov
mov
mov
cmp
push
xor
in
cmp
pop
adc
xlat
lret
jge
or
aas
hlt
div
or
cmp
push
sub
push
imul
ret
mov
mov
xchg
movsb
xchg
in
stos
sbb
push
into
mov
mov
icebp
adc
sbb
or
sub
icebp
inc
cmp
icebp
aad
push
out
sub
popa
cs
jno
pop
jp
pop
arpl
or
ljmp
xchg
sub
ret
idivl
imul
divb
and
sbb
mov
sbb
mov
mov
xchg
aas
mov
pop
pop
nop
xlat
pop
popf
dec
idivb
dec
scas
pop
cmp
or
loopne
adc
loope
xor
jmp
out
and
add
test
cmp
mov
lcall
clc
pushf
inc
insb
adc
lcall
mov
add
and
adc
xchg
sub
fwait
data16
shll
rorb
insl
pusha
mov
cld
jo
jp
sbb
xlat
loopne
mov
add
push
mov
and
xchg
outsb
add
ja
nop
lods
dec
roll
and
pushf
xchg
cmpsb
fsubl
inc
sub
fimuls
fwait
adcb
iret
fdivl
cmc
jno
push
mov
mov
pushf
pop
add
out
xor
mov
shrb
sar
fdivrs
adc
push
cmc
xor
xchg
or
repz
out
fldt
mov
sbb
aas
outsl
xor
mov
bound
subl
xor
xchg
jmp
stc
and
pop
and
inc
in
outsl
jne
push
or
push
imul
xlat
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
test
ss
inc
in
push
xchg
leavew
ja
subb
scas
or
iret
jge
inc
mov
scas
imul
std
dec
negb
or
mov
mov
pop
add
stos
lahf
mov
scas
pop
mov
mov
sub
cmp
or
sbb
push
js
pop
jg
outsl
stos
lahf
mov
scas
ljmp
out
cmp
cmp
aas
adc
push
dec
dec
dec
cmp
mov
scas
repz
iret
sar
xor
bound
push
adc
outsl
ret
lahf
aad
mov
in
mov
and
roll
push
stos
bound
imul
fldenv
push
rcrb
stc
dec
scas
scas
notl
lock
in
cmp
push
dec
das
movsl
ds
movl
sub
push
inc
mov
call
out
mov
scas
adc
jo
adc
shl
xchg
xor
pop
loop
jg
jo
cmp
adc
ljmp
or
ljmp
orb
or
int
gs
adc
mov
pmullw
emms
das
dec
cs
dec
sub
arpl
lcall
inc
out
xor
and
adc
add
jb
bound
jg
push
lock
cltd
mov
iret
xchg
push
jnp
push
jle
push
pop
cmp
jge
lds
ljmp
mov
jp
pop
pop
inc
push
adc
sbb
aas
iret
fsub
xlat
repnz
cli
iret
lret
out
sub
cmp
or
sbb
push
jp
dec
jg
outsl
stos
lahf
mov
scas
ljmp
out
sub
cmp
or
sbb
push
jp
dec
jg
outsl
stos
lahf
xchg
xor
adc
sub
std
jp
out
pop
ljmp
xor
aaa
cli
mov
mov
nop
fmull
jnp
inc
ret
sbb
xor
pop
call
cld
shlb
inc
arpl
testl
mov
stc
and
repnz
mov
push
mov
xchg
std
repz
int
imul
addr16
push
out
jmp
cmpsl
dec
sti
leave
scas
or
push
and
adc
push
jo
adc
push
lret
jne
mov
out
jg
and
test
sbb
inc
or
push
test
dec
xchg
flds
test
mov
push
cmp
jle
loopne
xor
cmpsb
in
div
inc
add
lds
cmp
mov
test
lret
mov
enter
addb
and
mov
scas
mov
and
addr16
pop
dec
shl
pop
addr16
xchg
pusha
stc
dec
cld
test
cld
xor
xchg
mov
cmp
dec
lods
xchg
fidivrl
xor
jg
jnp
outsl
sbb
lahf
int
out
sti
mov
dec
adc
gs
cmc
ficomps
rclb
scas
loopne
push
in
sub
rclb
pop
or
and
adc
in
add
dec
lcall
js
in
or
add
fwait
fs
stos
adc
hlt
jae
cwtl
push
add
ljmp
inc
jb
add
sbb
outsb
addb
mov
jge
pop
out
fistpll
icebp
xchg
push
mov
lcall
adc
xchg
jecxz
ss
mov
mov
mov
fistl
bound
mov
cmpsl
jno
mov
loopne
xor
and
xlat
pop
imul
xor
pop
sub
adc
scas
pop
jmp
jg
out
insb
xchg
jb
stos
pop
adc
lods
pop
pop
lock
and
push
mov
fld
out
lock
mov
and
mov
rorl
xchg
fcoms
mov
mov
fstpl
fld
and
push
stos
out
inc
cmp
xchg
jno
arpl
mov
fwait
movl
inc
adc
ljmp
enter
push
jbe
arpl
fisttps
loope
xor
and
cmpl
jns
lods
fs
inc
lea
xor
pop
outsb
sub
pop
loop
shlb
jle
xchg
sbb
stos
push
pop
xor
jmp
pushf
push
lea
leave
or
iret
call
shl
lods
pop
dec
imul
push
or
test
xchg
imul
jp
stos
out
mov
popa
pop
pop
jp
mov
jmp
cmpsb
lcall
dec
das
jg
push
ror
clc
inc
sub
insb
mov
movsb
mov
sub
hlt
ja
aam
aaa
push
mov
inc
push
or
data16
xchg
mov
sbb
popa
pop
int3
fsts
dec
jge
rcl
mov
mov
xchg
lds
je
jl
cmp
ret
adc
pop
pop
cmpsl
mov
shlb
xchg
and
ljmp
sbb
cwtl
push
pop
out
dec
cmpsl
fld
insb
mov
lock
loope
test
mov
mov
and
shll
mov
pushf
imul
pop
add
xor
jle
int
out
mov
jbe
or
push
dec
and
adc
adc
pop
into
movsl
iret
jnp
sub
mov
in
jnp
jno
pop
ja
popa
pop
shlb
int3
mov
nop
sub
inc
ljmp
andb
mov
inc
mov
imul
je
jmp
jle
ja
xor
cmp
arpl
pop
pop
xchg
push
cmp
fcomp
bnd
push
push
dec
aaa
mov
outsb
mov
call
pop
es
movsl
fisubrs
js
jg
push
xor
int3
lret
fmulp
cmp
pop
hlt
lock
jb
pop
cmpsb
add
and
fildl
xlat
mov
outsl
mov
je
cmpsb
cmpsl
mov
in
sbb
xor
inc
call
fcoml
push
imul
test
arpl
mov
shr
or
jg
cmp
dec
and
add
addr16
mov
mov
aaa
xor
mov
lahf
push
mov
lds
scas
cld
pop
repz
xor
mov
popf
ja
leave
dec
test
or
cmp
out
pop
inc
mov
pop
sbb
mov
out
push
leave
in
adc
cmp
sub
push
xor
lea
loope
fimuls
adc
cmp
jae
je
cmp
bound
inc
adcb
jmp
out
arpl
movsb
in
or
mov
in
mov
fs
add
stos
mov
mov
push
push
sbbb
mov
xchg
subl
inc
sbb
or
imul
pop
mov
frstor
mov
imul
fisubrs
jge
lahf
ljmp
leave
xor
mov
fsubs
mov
rolb
xchg
hlt
push
cmp
and
dec
test
mov
in
int3
sub
jns
out
aaa
sub
mov
sbb
shlb
jle
adc
mov
mov
outsl
loop
rol
jo
fsubr
adc
mov
push
cmc
xlat
int3
inc
popa
fiaddl
lea
pop
cmpsb
rol
ret
iret
outsl
aaa
mov
sbb
dec
stos
jb
mov
insl
stos
test
mov
fdivp
shrb
sbb
or
enter
jb
inc
push
xlat
sub
and
fisubs
mov
cmp
orb
fisttpll
push
cli
loope
mov
and
jl
aas
jmp
push
movsb
mul
lds
sbb
push
test
jnp
or
inc
sbb
cmp
mov
icebp
roll
mov
es
mov
icebp
test
pusha
adc
sub
addr16
fs
adc
notl
cld
outsl
inc
cmp
idivl
inc
aas
gs
mov
jb
es
sub
adc
imul
inc
inc
rclb
imull
mov
sbb
cmp
movsb
inc
cmpsb
faddl
jecxz
out
fcompl
mov
cmp
mov
mov
cli
or
in
xor
pop
loop
cli
pop
adc
ljmp
xchg
cmp
call
bound
loope
iret
mov
xchg
cld
push
mov
mov
jne
or
and
pop
out
in
lds
sahf
fstps
jle
xchg
jmp
pop
and
sbb
xor
rorb
xchg
enter
outsl
xchg
int
sub
jg
push
xchg
das
dec
and
incb
mov
data16
pop
lods
push
enter
divb
clc
jmp
or
bound
xor
push
or
mov
nop
mov
sub
rcrb
imul
mov
add
xor
and
xchg
in
pop
aas
lea
xor
scas
inc
scas
mov
mov
in
das
mov
mov
lods
jnp
fwait
sarl
pop
lahf
push
pop
test
aaa
cmpsl
xchg
dec
scas
aaa
jno
jle
cmp
lret
imul
sbb
dec
loop
jg
pop
out
fldl
sbb
dec
inc
enter
aas
xchg
jnp
hlt
sahf
popa
mov
repz
mov
lret
es
cltd
xor
ss
mov
cltd
lahf
adc
or
xchg
xchg
sub
insl
icebp
and
mov
hlt
fidivs
lods
mov
cmp
jge
cli
repz
xor
dec
dec
inc
mov
out
mov
loopne
mov
addl
push
push
add
sbb
xchg
ret
incl
das
cld
int
jno
adc
lea
cmpsb
js
aad
cmp
mov
jg
push
pushf
or
loop
sub
push
push
movl
fbld
pop
mov
inc
hlt
jge
insb
xchg
sbb
insb
scas
mov
pop
cmpsl
lcall
das
leave
rorl
adc
jne
jae
cltd
dec
mov
add
and
fisubl
loopne
add
sti
xchg
leave
pop
dec
sarl
mov
push
dec
ret
outsb
or
push
bound
arpl
addr16
adc
push
test
dec
iret
stos
js
push
inc
inc
pop
push
in
pop
daa
decl
push
fs
leave
dec
xchg
push
ret
mov
push
push
loope
xchg
jp
or
and
js
jne
dec
aad
mov
add
dec
lds
dec
mov
out
inc
arpl
mov
push
xlat
loopne
pop
pop
call
repnz
sub
inc
out
push
xchg
test
sub
xchg
jl
xor
stc
enter
hlt
ljmp
xor
cmp
arpl
popa
mov
dec
jbe
out
imul
mov
inc
stos
insl
aaa
clc
inc
into
mov
in
iret
fdivs
jmp
orb
fmull
popf
ds
mov
lods
fsub
or
sarb
loopne
lret
out
stc
mov
xchg
sbb
fisubl
xor
iret
jb
or
gs
es
xchg
loop
test
insl
repnz
inc
pop
fnstcw
adc
push
adc
mov
addr16
mov
pop
fcoms
pop
dec
pop
js
ja
in
cs
jle
or
xchg
movnti
or
push
stos
and
ljmp
aaa
or
add
mov
xor
je
cmp
adc
ljmp
cli
mov
repz
mov
sub
loope
and
mov
in
inc
cmp
test
adc
shll
lds
adc
lea
xchg
jbe
add
jecxz
adc
push
cwtl
mov
dec
and
mov
push
push
fwait
inc
inc
bound
adc
sub
mov
loope
loopne
mov
inc
mov
inc
pop
in
jle
sahf
cmp
into
sub
stos
mov
mov
and
int
dec
outsl
iret
pop
dec
iret
push
xor
cld
aaa
lahf
shr
sarl
and
js
inc
gs
stos
adc
mov
mov
xchg
in
dec
dec
mov
jp
dec
sbb
jp
push
stc
xchg
mov
stc
gs
jae
cmc
push
mov
idivl
dec
xor
add
out
mov
in
es
fs
mov
ljmp
or
jl
je
int3
lea
add
inc
gs
add
adc
dec
sbb
enter
mov
cmp
mov
sbb
mov
cs
enter
jl
sub
pusha
push
dec
jp
aad
push
push
xchg
jge
mov
stos
mov
mov
jno
jmp
pop
std
insl
add
sarb
loopne
jge
mov
mov
and
cmc
sub
mov
xchg
fnstcw
cmc
lcall
xchg
outsl
inc
ljmp
push
and
pop
lcall
int
adc
inc
les
sbb
repnz
fwait
mov
das
push
js
gs
and
cmpsl
dec
jl
mov
or
dec
inc
test
scas
cmp
dec
push
cwtl
push
mov
imul
cs
out
test
cs
push
add
ss
fucomi
fildl
fildl
and
arpl
push
inc
movsl
fdivr
xor
mov
int
pop
push
or
add
pop
je
lea
pop
add
test
mov
pop
push
sbbl
imul
decl
mov
sarl
cld
mov
xlat
fsub
sbb
add
xor
cmp
cli
leave
out
pop
mov
outsb
lods
pop
push
ffreep
pop
in
add
mov
sub
sub
jo
xchg
mov
or
loopne
cmp
mov
sbb
imul
jbe
sub
loopne
mov
test
scas
jp
pop
int3
cltd
gs
orl
sbb
int
inc
sbb
call
lea
loope
jae
mov
mov
sbb
movsl
lock
inc
xchg
fldcw
movsl
push
jae
int3
cmp
mov
rolb
lahf
test
add
in
jae
out
std
xlat
ljmp
push
jo
xor
dec
test
mov
inc
mov
mov
ret
lret
sub
fistl
imul
sub
inc
or
aam
int
aam
movb
std
cmp
test
in
push
push
sub
jnp
mov
cmp
aaa
outsb
fmuls
pop
mov
sahf
shr
pop
jmp
or
fisubrs
jb
inc
push
jecxz,pt
mov
push
nop
dec
call
addl
and
pop
dec
fildll
adc
mov
or
stos
sbb
push
mov
fsubrs
mov
andl
xor
pop
mov
fsub
fcmovnbe
mov
repnz
cmp
cli
jle
xchg
adc
pop
sbb
adc
mov
mov
int
and
adc
add
mov
mov
mov
adc
aad
sbb
sbb
dec
add
lret
cmpsl
cwtl
mov
cmp
stos
pop
jno
adc
insb
scas
sub
je
pop
sahf
cltd
int
push
cmpsb
jmp
stc
xchg
push
and
xchg
mov
adc
repz
pusha
push
push
inc
fsubs
xchg
adc
lock
xchg
out
mov
dec
add
movd
scas
stos
dec
ficompl
push
dec
sbb
adc
in
inc
xor
xor
pop
xor
push
push
xor
pop
pop
pop
rcrb
mov
out
mul
ss
or
pmaxub
push
sbb
pop
daa
mov
add
cmp
loopne
fadds
mov
or
sbb
xchg
mov
push
push
fwait
xorl
jl
insb
or
xorb
pop
sbb
jb
sbb
or
test
fucom
push
cmp
cld
test
adc
ds
int3
mov
out
setl
adc
es
fsts
add
add
xor
jge
dec
sub
adc
jmp
jns
out
pushf
sbb
cmc
sub
xor
mov
lahf
cmpsb
add
sbbb
enter
popa
cmpb
pop
addr16
js
pop
lcall
aaa
test
lods
lea
movsl
xchg
sub
mov
mov
sbb
arpl
leave
inc
mov
sub
xchg
popf
pop
movsl
orl
into
mov
mov
jbe
mov
insb
xchg
xor
push
push
jge
add
jne
movsl
and
pop
xchg
mov
sbb
test
flds
add
inc
and
lret
xor
in
and
fistpll
inc
sbbb
inc
jb
mov
mov
pushf
enter
push
lcall
sbb
inc
ss
and
outsl
or
inc
sub
mov
shlb
inc
xor
mov
hlt
inc
or
mov
dec
aaa
ret
xor
out
je
addr16
cmc
cli
and
fstpl
jge
sub
xor
inc
flds
cmp
fbstp
push
mov
dec
adc
mov
pop
test
jns
add
call
sbb
aad
cmpsl
xor
and
xor
jg
or
jg
add
dec
fs
xchg
pop
das
popf
in
adc
mov
jnp
jmp
out
xor
cmp
dec
sub
mov
dec
jle
mov
aad
and
je
call
rolb
cld
dec
out
mov
mov
sbb
ret
mov
ja
lcall
test
pop
and
xchg
push
add
outsl
dec
into
adc
test
mov
sbb
lods
jle
push
shrb
ljmp
cwtl
adc
comiss
loop
jp
xchg
jb
jae
push
mov
mov
or
inc
sub
fdivrs
cmc
push
mov
add
rcll
adc
jnp
into
jo
adc
cmp
subb
pushf
popf
mov
ja
scas
fcomps
jns
xchg
mov
es
scas
fwait
movsl
xor
mov
mov
mov
xchg
lea
xchg
or
shll
mov
jg
xor
cmp
mov
cmp
mov
push
je
jl
and
xchg
in
xchg
cwtl
mov
pop
cmpsl
pop
pop
insl
cltd
pushf
pop
movl
lods
xchg
mov
inc
inc
add
scas
popa
push
pop
ret
mov
mov
sahf
movsb
pop
pop
mov
mov
push
mov
xchg
loop
cmp
test
inc
hlt
popa
in
pop
sbb
ret
jo
add
or
popf
out
dec
dec
jle
ds
xchg
xor
loopne
fwait
andl
push
lods
pop
push
xlat
push
rcrl
push
cmpsl
xchg
xchg
mov
sbb
ja
out
push
in
aaa
inc
lcall
ljmp
inc
daa
sub
sub
dec
and
repnz
repz
sbb
clc
mov
shll
xor
or
adc
adc
outsl
pushf
push
cmpl
pusha
sub
mov
arpl
and
dec
cmp
movups
xor
cli
push
add
cmc
cwtl
jnp
pop
loop
pop
mov
loop
lret
xchg
push
stc
clc
xor
push
add
cmpsl
push
push
fucomip
aam
arpl
lock
add
fsubrl
test
dec
jle
add
mov
or
adc
test
mov
mov
cmpsb
es
jno
push
and
jp
jge
xchg
aaa
fs
test
pop
sub
fwait
jb
push
pop
daa
mov
scas
popa
adc
adc
aaa
movsb
mull
mov
xor
mov
movsb
fdivs
push
cltd
nop
shll
push
sbb
hlt
fsub
push
sbb
frstor
movsl
jno
sub
lea
stos
and
mov
enter
subl
xor
xlat
divl
xor
ret
push
lcall
out
stc
insb
cmp
pop
pop
sbbl
mov
mov
sbb
and
insl
out
sti
dec
aad
lods
push
out
cwtl
cmc
jg
sub
test
jp
xor
xchg
sbbb
inc
or
xor
icebp
adc
pop
cs
js
ss
ss
mov
cmp
fsub
pop
sti
pop
dec
nop
std
ss
fisubrl
mov
xor
adc
stc
push
cld
jne
sbb
cmp
jnp
addr16
mov
arpl
jecxz
xorl
test
cwtl
sbb
inc
lods
add
es
pop
loope
push
xchg
test
out
cwtl
jnp
mov
pop
les
adc
sbb
inc
mov
or
mov
fldenv
fcomip
pop
das
mov
pop
test
inc
and
mov
aas
sbb
arpl
and
sbb
jge
jmp
pop
pop
int
mov
inc
jns
ficoms
test
fwait
inc
add
leave
mov
out
jo
push
inc
addr16
fcmovnbe
lcall
jg
add
dec
into
inc
dec
jge
aam
sahf
shll
add
xchg
jno
adc
fs
push
fnop
mov
inc
pop
sub
mov
inc
push
into
jno
mov
mov
pop
outsl
xchg
push
inc
je
int
xchg
or
jl
inc
and
loop
clc
icebp
ja
hlt
js
stos
jb
inc
or
repz
adc
out
cltd
in
xor
jns
jge
test
push
in
mov
rcl
hlt
xchg
cmpps
pop
test
je
outsl
stc
call
xor
sub
sub
gs
popa
jno
data16
push
repnz
jl
dec
dec
hlt
sarl
in
pop
mov
out
out
sbb
xlat
jne
xchg
int3
test
out
mov
int
test
cli
push
jno
out
or
pcmpeqd
cwtl
fs
subl
sti
mov
push
cmp
loopne
data16
adc
pop
and
jno
mov
sahf
jge
push
aaa
mov
cmp
add
inc
xor
divb
dec
mov
mov
xor
fcoms
in
mov
inc
jmp
sbbb
mov
cli
push
push
sbb
loope
es
mov
pop
and
cmpsl
lret
lock
add
bound
sub
inc
mov
insl
fisttps
loop
jo
pop
push
fisubl
add
divb
xchg
pusha
subl
stos
cmc
jo
scas
add
stos
repz
dec
scas
aaa
add
pusha
mov
loope
repnz
dec
lods
rol
sti
repz
scas
xchg
in
and
inc
sbb
or
push
and
jbe
aam
sub
push
push
ljmp
shlb
xor
adc
popl
inc
mov
gs
or
fdivrs
adc
pusha
sarl
mov
adc
ss
das
out
lret
dec
push
pop
push
adc
popl
iret
lret
out
sub
cmp
or
sbb
push
jp
dec
jg
outsl
stos
lahf
mov
scas
ljmp
out
sub
cmp
or
sbb
push
jp
dec
jg
outsl
stos
lahf
mov
scas
ljmp
out
sub
sbb
push
jnp
dec
jg
outsl
stos
lahf
mov
scas
call
lcall
aad
lds
sbb
andb
rolb
shl
scas
shlb
bound
push
add
xor
jno
push
add
mov
rclb
rolb
push
add
xor
add
mov
rclb
rolb
and
jle
es
sub
and
add
mov
ret
or
mov
pop
inc
pop
mov
mov
pop
mov
mov
mov
pop
int3
xor
iret
scas
mov
sub
push
add
mov
jo
push
mov
lods
jb
pop
sbb
adc
and
inc
push
lahf
stos
dec
xchg
int
pushf
lock
mov
leave
enter
fsubr
iret
mov
mov
nop
call
pusha
gs
push
jg
popf
dec
imul
jno
push
adc
mov
mov
stc
sbb
fwait
scas
sub
dec
nop
pop
aaa
and
out
aam
jae
xlat
inc
add
rolb
mov
shlb
pusha
xor
inc
adc
pusha
and
inc
add
xchg
mov
xchg
aad
iret
test
movsl
add
add
sub
push
add
aaa
jne
jo
xchg
xchg
fdivl
mov
inc
pop
inc
sub
add
push
xchg
loope
jecxz
in
call
nop
rolb
push
add
xor
jo
inc
add
mov
rclb
rolb
push
add
xor
jo
inc
add
mov
mov
jae
xchg
pop
xor
xor
sbb
adc
sub
mov
fisubrl
inc
into
pop
mov
dec
cmp
cmp
xchg
sbb
jecxz
pop
fisttpll
outsl
xor
xor
mov
sub
and
sbbl
test
insl
pop
mov
mov
push
movsb
adc
inc
jnp
push
icebp
mov
or
scas
addr16
in
movsb
xchg
dec
inc
fnstcw
rcl
or
hlt
movsb
cmpsb
mov
sub
js
sub
sti
std
pop
jo
mov
enter
lahf
push
rclb
mov
xchg
ss
adc
push
sub
sub
mov
and
pushf
adc
xor
test
jg
push
or
subl
dec
adc
imul
mov
aam
push
mov
subl
dec
pushl
fidivrl
sub
stc
es
adc
test
pop
pop
pop
in
and
sbb
jg
dec
sbb
mov
out
lock
inc
mov
inc
inc
sahf
jmp
hlt
pusha
adc
aas
push
int
stos
addl
roll
push
out
inc
das
inc
movl
lret
adc
pop
ret
cli
mov
cmp
or
and
aad
lock
or
fmull
dec
xchg
sahf
mov
push
out
in
xchg
fs
pushf
loope
xchg
add
sub
add
xchg
adc
in
stos
out
sbb
incb
sbb
push
jb
or
sbb
nop
mov
roll
add
sub
xchg
push
ret
adc
test
dec
mov
test
insl
orl
jp
cmpsl
mov
lock
mov
jno
testl
and
stos
sbb
xchg
fisttpll
int3
or
inc
je
pop
cmpl
pop
push
and
imull
pushf
cmpsl
mov
shl
je
jp
and
cld
push
inc
int
sahf
aaa
in
leave
xor
push
jae
push
sub
sub
xor
lret
cmpsl
int3
shll
jmp
jl
xchg
movsb
add
mov
xchg
out
xor
xchg
ret
ret
inc
pop
jae
ret
cld
fiadds
sub
push
loopne
loopne
push
pop
xor
popf
popf
mov
pop
repz
jl
xchg
inc
cmpsb
mov
jbe
out
adc
jmp
cmpb
int
dec
sub
or
mov
pop
je
push
push
pop
ret
push
and
in
pop
add
jb
xchg
mov
sti
xchg
lahf
inc
dec
ds
and
xor
dec
pop
fs
sub
jnp
jns
ret
sub
test
scas
pop
nop
hlt
int
xchg
fists
fldenv
sarb
push
sbb
call
je
add
sbb
push
jo
mov
aad
sbb
shlb
mov
das
sub
xlat
add
insl
insl
call
cld
nop
repz
lcall
pop
cltd
push
enter
sub
pop
sarl
cmp
push
scas
popa
mov
lcall
lcall
fcomp
in
dec
sub
jg
fsubl
mov
pop
data16
lea
call
push
daa
jge
das
movsl
jae
pop
insb
jo
cmp
cld
adcl
mov
mov
pop
mov
mov
test
ret
push
mov
insb
xor
rclb
rcll
xchg
pushf
adc
popa
out
pop
cmp
cs
mov
pop
scas
push
sbb
inc
mov
aam
scas
int3
inc
test
unpckhps
or
push
push
inc
mov
insl
mov
add
imul
imul
adc
push
out
loop
push
les
dec
aas
push
movsl
pusha
stos
pop
mov
jecxz
fwait
pop
fstl
sub
sahf
imul
inc
xchg
mov
inc
test
xchg
mov
out
out
popf
pop
fs
dec
shrb
stos
rclb
adc
ror
in
mov
out
sahf
in
sarl
sub
call
xchg
add
jmp
out
xchg
fidivrs
sub
inc
sarl
adc
xor
lds
mov
ja
clc
clc
sub
sbb
shr
fldenv
mov
cmp
push
push
xorl
jns
stos
ret
aam
stos
in
stos
or
adc
int3
insb
andb
pop
shl
and
imul
sub
dec
aaa
stc
sub
dec
dec
orb
push
sbb
mov
sarl
add
push
out
sbb
ret
not
push
jb
stos
lret
jge
or
mov
test
inc
mov
pop
ss
xchg
or
shrb
mov
xlat
inc
mov
rorb
ret
mov
jno
mov
inc
adc
mov
sbb
ret
jb
mov
popf
iret
push
insb
test
mov
in
movsb
sarl
pop
aaa
dec
pop
pop
test
ds
sbb
adc
out
sub
loop
xor
sbb
out
dec
mov
pop
dec
popf
mov
aas
pop
add
inc
adc
sub
divb
popf
xchg
jno
xor
push
lret
xchg
add
add
enter
cwtl
loope
mov
popl
movsl
add
push
cmpsl
mov
aad
push
jne
sbb
scas
repnz
and
sbb
cmp
shlb
lea
xorb
into
leave
pop
xor
imul
pop
cmpsb
out
test
or
and
add
xorb
mov
popa
mov
mov
mov
jecxz
dec
pop
xchg
add
in
mov
out
test
inc
pushf
fdivl
imul
imul
jl
or
add
push
mov
mov
or
cmp
cmp
xlat
cli
xor
xchg
add
and
jns
adc
pop
cs
cld
fndisi(8087
outsb
popf
arpl
cmp
popl
or
jnp
jecxz
inc
lret
xor
test
sbb
cltd
push
inc
rcrl
jl
dec
or
jl
daa
aad
and
adc
into
stos
lds
push
mov
cmpsl
stos
outsl
dec
sbbl
add
outsb
and
jmp
jnp
sub
sub
orl
pop
inc
pop
cmpsb
jnp
xorl
xchg
add
dec
pop
dec
push
push
sbb
mov
into
mov
sub
pop
xor
cmp
jecxz
int
lods
ret
mov
pop
cmp
daa
jo
sbb
jge
int
jle
dec
mov
mov
pop
mov
jg
outsl
xor
mov
std
add
cld
pop
stos
or
sub
add
push
xor
sub
inc
cmp
xlat
and
cwtl
push
andb
loopne
xchg
sub
popa
push
xor
incl
and
outsb
filds
or
imul
push
into
cli
or
mov
mov
and
test
mov
imul
add
fdivrl
mov
dec
sbb
mov
mov
test
pop
jne
jg
pusha
lahf
xlat
push
xor
shll
sbb
lods
mov
and
cmp
cmp
rcl
ljmp
popf
xchg
test
shl
movsb
lods
divb
or
shlb
ret
out
pushf
xchg
or
sbb
xchg
pop
fsts
dec
xchg
xor
aad
negb
mov
cmp
adc
sti
sub
lods
arpl
pop
mov
xchg
pusha
pop
sub
push
ror
jg
mov
test
lea
out
aad
or
pop
fimull
xchg
scas
adc
jge
out
pop
call
jae
add
mov
lahf
push
repz
lock
pop
and
cmp
pop
push
push
push
mov
out
nop
add
pop
dec
cmc
iret
and
js
dec
iret
mov
fcmovne
cmpb
sub
jmp
adc
inc
mov
sti
out
inc
xchg
sub
mov
dec
jb
mov
jbe
adc
mov
pop
dec
pop
mov
int
inc
dec
hlt
mov
loope
dec
cmp
add
add
cmpb
in
stc
jmp
movsl
ss
data16
or
add
shrl
xchg
aad
dec
xchg
sbb
flds
or
sbb
lcall
sub
aam
addr16
push
mov
push
and
pop
fidivrl
inc
movsb
ds
roll
out
jle
inc
adc
gs
stos
lret
cs
jb
cmpsl
repnz
and
aam
dec
mov
xlat
jne
xor
mov
outsb
aad
pop
test
cmp
sbb
mov
push
and
push
cmp
sub
jg
mov
pop
and
bnd
imul
aad
test
pop
or
or
pushf
aaa
or
cmc
xchg
mov
push
jle
iret
loopw
push
out
inc
xchg
and
aam
cwtl
mov
sub
in
xor
imul
sub
shl
stos
fs
cmp
xlat
push
mov
or
insb
js
mov
fists
inc
pop
inc
js
fisttps
mov
inc
imul
cmp
push
xchg
jp
cmp
sub
cli
out
mov
sbb
jae
cwtl
xor
or
in
pop
sub
arpl
jno
dec
popf
lea
push
cmc
push
adc
fstp
fs
mov
in
dec
mov
outsl
or
scas
popf
jno
and
int3
lret
testb
push
cltd
xchg
xchg
pusha
in
mov
ds
lcall
lods
mov
adc
or
adc
les
lcall
imul
pop
cmpsb
es
inc
pop
sub
testl
xchg
fcmovnb
and
mov
out
push
dec
mov
push
inc
pop
xor
or
out
sub
sbb
xchg
outsl
push
mov
add
cmpsl
fwait
add
jb
loope
mov
rorl
mov
cmc
lahf
sub
dec
mov
insb
insb
shlb
pusha
popa
out
or
mov
movsl
sbbb
rcl
inc
jb
xor
mov
jp
mov
mov
pop
fwait
shr
sbbl
push
cltd
add
dec
test
pop
push
pop
leave
xor
dec
js
hlt
mov
add
data16
mov
movlps
xor
ds
andl
sub
xorb
idivb
and
xor
fisttps
cmpsb
jb
inc
mov
lcall
iret
lret
or
or
mov
cmp
xchg
imul
out
cmp
dec
lret
xlat
cmpsb
lea
or
imul
popf
pop
jge
sub
inc
jmp
imul
push
test
push
inc
in
cs
and
sbb
addb
inc
das
jae
popf
cld
das
push
aam
push
int
sbb
or
icebp
push
ljmp
out
pop
fidivl
ds
dec
stc
cmp
insl
jb
add
inc
test
or
sbb
jecxz
scas
les
push
cmovnp
sbb
mov
push
xchg
sti
in
dec
pusha
imul
lods
xor
cmc
fidivrl
iret
xchg
scas
and
fwait
xchg
sbb
mov
jg
idiv
push
rorb
test
jecxz
push
test
movsb
push
or
push
fistpll
lods
jle
and
clc
mov
xchg
psllw
pusha
andb
mov
pop
mov
cmpsl
sbb
xor
or
fs
test
xchg
cli
popa
shlb
cmp
pop
inc
inc
inc
loop
mov
outsb
dec
data16
das
xor
jecxz
stos
out
test
test
rcrb
jo
mov
inc
push
dec
push
prefetcht2
outsl
insb
jg
mov
inc
and
ljmp
cs
mov
jge
pop
push
inc
mov
push
loope
pop
orb
jcxz
popa
push
mov
xchg
cld
popf
adc
add
cmp
cli
ja
out
mov
dec
xchg
push
mov
push
mov
pop
rorl
xor
cmp
sbb
push
cli
xor
mov
aad
xchg
imul
icebp
sub
push
adc
jbe
pushl
mov
neg
sti
incb
fnstenv
gs
jbe
adc
stos
pop
adc
sub
dec
mov
lcall
fnsave
pop
movsb
add
fs
fistpl
stos
mov
cmp
mov
insl
bound
sbb
xchg
push
xor
sub
and
subb
cmp
or
push
mov
ret
bound
idiv
inc
xor
ret
sti
xchg
js
hlt
lea
mov
in
add
shrb
lret
ljmp
mov
jo
mov
push
rclb
sti
cmp
mul
xorb
xchg
clc
fcoml
or
data16
jg
flds
cwtl
js
push
xor
lock
dec
xchg
fildll
add
loop
sbb
mov
xor
cmc
cwtl
pop
and
adc
push
sarl
jno
fcoms
pop
loope
movsl
js
xlat
inc
je
inc
jp
in
cmpsb
push
imul
inc
jp
mov
int3
aad
test
call
mov
mov
mov
lret
outsl
or
mov
icebp
in
popl
xchg
adc
push
je
xchg
lods
cs
add
pop
lods
push
sbb
adc
adc
xchg
xchg
adc
xlat
popa
sbb
nop
lahf
pop
push
jecxz
lret
mov
xor
lods
sub
xor
sub
mov
jnp
in
cmp
mov
mov
out
add
js
or
mov
cmpxchg
xor
push
sub
out
pop
xlat
das
icebp
sbb
dec
rorb
push
sbb
adc
xchg
ret
pop
popf
adc
jbe
xorl
mov
sbb
cmpsb
and
nop
in
test
mov
cmpsl
in
dec
pusha
sub
ret
pushf
int
pop
test
loop
push
jmp
push
or
roll
lret
lods
fdivrs
fisttpll
push
dec
mov
mov
mov
nop
mov
mov
or
xchg
sbbl
jg
xchg
dec
int3
das
add
arpl
jbe
lret
lret
mov
imul
cmpsl
lret
and
mov
pop
adc
mov
in
pushf
insl
mov
into
fs
or
inc
lods
and
fcoms
add
test
jns
into
js
dec
dec
xchg
pop
insb
mov
stos
inc
mov
adc
ss
int3
sbb
mov
or
lahf
int
lods
in
fwait
out
jae
mov
inc
scas
ret
inc
pop
mov
call
pop
add
lret
mov
idiv
mov
jl
or
in
fyl2xp1
mov
sbb
pop
icebp
jmp
shrb
mov
cltd
popa
fisubrs
mov
fstpl
mov
enter
jge
pusha
push
mov
mov
ret
cmp
int3
sub
aas
sbb
jns
imul
mov
movsb
lcall
mov
adcl
adc
pop
sbb
push
cmc
adc
mov
and
std
into
xorb
les
sahf
mov
push
and
test
adc
fs
aas
mov
inc
cmpb
addr16
mov
cmpsb
add
ficomps
pop
mov
testl
int
rcll
movsl
outsl
and
jle
lcall
cltd
cltd
fdivl
adc
or
dec
insb
fwait
inc
inc
test
inc
add
adc
es
mov
or
add
cltd
or
and
xor
and
inc
cmpsb
nop
pop
shr
push
in
je
inc
pop
cmpsl
loop
shl
mov
aam
aad
subb
lcall
out
dec
fisubs
jp
daa
negl
jp
jne
xchg
insl
fnstcw
mov
mov
pop
xlat
aaa
push
les
outsb
push
addr16
fistl
sbb
inc
inc
sub
mov
cwtl
hlt
out
dec
sub
jg
mov
out
pop
shll
aas
imul
or
mov
xor
std
lods
sub
sub
push
adc
sahf
mov
fisttpll
push
lret
fdivrl
sub
mov
mov
sti
xchg
jo
mov
rcrb
mov
mov
addb
push
mulb
aad
mov
push
lcall
mov
ss
or
xor
ret
mov
das
ss
mov
mov
add
push
adc
adc
xchg
lock
dec
xchg
das
clc
mov
outsb
xchg
iret
imul
test
pusha
dec
fiadds
pop
scas
sbb
dec
das
je
pusha
pop
lret
cmpsb
cltd
out
inc
inc
rcrl
scas
push
jp
sub
leave
mov
inc
rorl
out
adcb
jno
decl
out
fldenv
pop
pop
dec
mov
cmp
daa
and
movsl
cltd
movsb
xor
pop
mov
xor
dec
mov
shrb
loop
inc
sahf
or
or
insb
sub
cmp
cmp
and
in
pop
mov
push
push
movsl
shlb
cmp
movsl
ja
mov
out
cs
loop
cmp
out
sub
popf
bound
lea
xor
pushf
ja
mov
sahf
lock
sbb
jge
sahf
test
mov
int3
loope
push
or
mov
loope
insl
ds
xchg
lret
mov
fdivrl
addl
clc
cli
int3
sbb
into
sub
aas
inc
lods
lock
add
cmp
lahf
inc
dec
or
sub
scas
inc
es
lods
jns
pusha
loope
int3
mov
xchg
ss
adc
xchg
arpl
testb
sub
mov
sbb
xor
out
pop
leave
sub
mov
ffree
xchg
rclb
or
in
insl
dec
adcl
and
iret
scas
xchg
and
xor
popa
cmp
int
mov
in
jg
xchg
sbb
pop
pop
test
nop
shrl
mov
xchg
test
inc
and
add
fisubs
call
rcrb
addl
pop
ror
add
nop
cmovg
add
or
fsubl
ja
stos
outsl
out
data16
std
and
ret
or
sbb
inc
xchg
inc
sub
xchg
in
jmp
lock
arpl
in
fnstsw
insl
cmpb
mov
sbb
lahf
jle
imul
mov
jnp
shlb
push
xchg
test
out
scas
iret
sbb
cmpsl
loop
decl
add
out
rorb
jg
adc
into
jns
int
cmp
cld
test
clc
rcl
sub
aas
adc
cmc
xchg
push
ret
andb
fmul
and
sbb
pop
inc
add
inc
dec
popf
rep
xchg
lods
fwait
or
pop
xlat
call
shl
pop
dec
lods
cmp
out
out
sbb
add
jo
jae
shrb
ret
in
sbb
lods
cmpsb
cs
xor
mov
xor
mov
mov
cwtl
insl
repz
push
stos
scas
insb
imul
jl
out
mov
or
addr16
dec
mov
leave
pop
mov
and
xchg
mov
sub
sub
mov
add
or
and
bound
cmp
cmp
rorb
out
daa
mov
popa
das
jnp
shl
jb
vmovd
imul
cs
loop
mov
ret
lock
mov
stos
test
xor
push
mov
inc
fs
lret
lcall
mov
iret
xor
nop
pop
cs
sub
xchg
xorl
loopne
jns
dec
xor
jge
pop
jne
mov
push
mov
mov
into
fs
faddl
ljmp
int3
add
jno
je
aam
push
mov
jno
fwait
mov
jbe
fisttpll
fs
push
lods
mov
push
jmp
fdivrl
pop
and
pop
or
lock
or
add
lret
std
cmpsl
jle
sbb
aad
icebp
xor
adc
call
dec
and
idivb
call
sbbb
push
and
das
je
insb
arpl
and
add
cmpsl
adc
xor
sbb
pop
inc
push
inc
cmp
jp
punpcklbw
cltd
shrl
sbb
lock
pop
sbb
stos
roll
sti
das
out
push
setle
inc
push
push
jb
ret
test
cmpsb
stc
ljmp
outsb
in
fidivrl
cmpsb
or
repz
addl
xchg
inc
imul
pop
fdivl
add
adc
popa
adc
jnp
fxch
rcrl
pop
xchg
jmp
mov
out
add
mov
mov
shlb
pusha
xor
inc
adc
pusha
and
inc
add
mov
rclb
rolb
push
add
xor
jo
inc
add
mov
rclb
rolb
push
add
xor
jo
inc
add
mov
rclb
rolb
and
addr16
call
clc
scas
ja
addr16
push
mov
push
mov
ret
testl
mov
cmpsl
push
xchg
bound
xchg
push
mov
daa
rclb
loop
mov
add
adc
and
xor
cmpsl
push
xchg
bound
xchg
push
mov
daa
rclb
loop
repnz
push
mov
enter
jmp
fistl
sub
sbb
jns
loope
addr16
jmp
dec
repz
loop
jmp
in
sbb
mov
push
jmp
jbe
in
sub
cmp
inc
cmpsb
fwait
shlb
daa
subb
enter
lret
pushf
adc
notl
xlat
jnp
out
ficoml
out
lret
addr16
mov
adc
rcll
std
in
sub
out
adc
mov
mov
xchg
mov
mov
pop
xchg
mov
pop
std
mov
push
fnstsw
push
bound
pop
xchg
mov
repnz
ret
aad
lcall
inc
sub
out
daa
out
sub
shlb
addr16
mov
daa
rclb
loop
repnz
xor
bound
sarl
mov
push
mov
idivl
adc
inc
mov
aaa
hlt
sbb
cmp
out
divl
sub
outsl
mov
xchg
dec
mov
aad
push
mov
leave
push
sti
xor
sbb
cmp
sub
jnp
daa
rclb
loop
repnz
xor
bound
xchg
push
mov
daa
rclb
loop
repnz
xor
bound
cli
lret
jo
mov
cmp
sub
mov
push
xor
popf
cmp
in
bound
adc
mov
aas
lea
mov
out
jle
push
mov
loopne
add
inc
mov
aad
stc
inc
jns
sub
iret
add
in
arpl
pop
out
fsub
push
mov
xlat
fdiv
xchg
mov
mov
sub
out
ja
ret
inc
shrl
insb
and
pop
leave
jne
lcall
cmc
ljmp
pop
xchg
aad
push
jne
push
inc
andl
adc
test
inc
mov
xchg
mov
ss
addb
and
fmuls
shlb
imull
jns
mov
push
insl
mov
mov
push
popf
and
mov
out
daa
push
fs
sub
xor
jno
xchg
invlpg
pop
lret
lea
icebp
pop
cmpsl
dec
xor
sbb
in
js
shrb
out
sbb
xchg
inc
mov
xor
cld
testl
sub
subb
std
push
pushf
es
lcall
mov
sub
sbb
mov
in
pop
jbe
ret
into
mov
addr16
ret
inc
push
mov
inc
pop
jecxz
divl
inc
imul
sti
inc
lret
in
dec
add
lods
sbb
inc
aad
xchg
push
jge
into
and
dec
nop
lea
lds
xorb
dec
aas
in
and
dec
aad
sysenter
lcall
push
sbb
loopne
imul
sub
es
push
cmp
xor
lret
mov
and
jg
xlat
and
xlat
xchg
inc
xor
orl
popf
xchg
adc
clc
nop
add
sahf
inc
inc
and
mov
cwtl
nop
adcl
sbbb
lods
fldt
and
iret
rclb
in
out
xor
xor
lds
orl
call
mov
int3
xlat
aaa
cmc
sbb
mov
lods
mov
std
add
inc
xorl
sub
in
nop
sub
inc
add
stos
inc
pop
mov
mov
jmp
sub
aad
scas
pop
cwtl
inc
dec
out
dec
scas
xchg
jmp
sbb
and
in
ss
mov
loope
and
push
cmpsl
divb
jae
dec
stos
insb
jae
mov
das
ljmp
adc
mov
sbb
fsub
cmp
scas
push
clc
iret
xchg
sub
xor
mov
or
or
iret
js
ljmp
mov
mov
es
rclb
rol
jl
sub
pop
sbb
sub
and
test
pop
xor
stos
loopne
lock
testl
popa
jle
mov
divl
stc
pop
loopne
lea
xchg
aad
xor
enter
jg
fidivs
cmpsb
movb
and
xchg
mov
rcll
shl
xor
sbb
inc
mov
cmp
push
mov
ja
or
fnstenv
std
xorb
aaa
cmp
notl
out
push
out
adc
test
out
pop
or
sbb
lds
lret
xor
and
adc
js
jg
es
mov
es
lds
xor
ret
stos
decb
repz
add
andl
test
shr
xchg
or
mov
sbb
lea
repz
cli
pop
imul
mov
jmp
xchg
testl
pop
inc
lret
sti
popf
enter
rorb
sub
int
and
pop
arpl
cmpsb
add
cwtl
daa
jo
pushf
jae
jge
mov
xchg
stc
es
or
movsl
mov
jbe
adc
aad
jns
movsb
sbb
pop
pop
out
dec
jmp
pop
test
int
aad
outsb
push
mov
cli
repz
adc
mov
popa
arpl
pusha
adc
dec
mov
xchg
cltd
testb
push
psubb
ja
call
add
mov
jnp
jg
mov
push
ret
push
fisttps
cli
bswap
std
ljmp
and
in
sub
int3
mov
mov
dec
and
popa
sti
push
xor
out
cmp
jns
repz
xchg
or
pop
adc
or
movsb
popa
sti
mov
cltd
mov
dec
pushf
and
cwtl
jmp
pop
lcall
aaa
add
mov
xchg
or
sub
mov
pop
add
mov
dec
ret
test
js
pop
pop
loopne
fstpt
movsl
in
and
jbe
lahf
dec
inc
lahf
mov
sbb
sbb
cltd
nop
or
sahf
lods
out
adc
inc
out
mov
or
std
mov
mov
insb
lret
adc
push
inc
pop
pop
test
mov
faddl
aam
das
out
insb
and
inc
lock
shr
xchg
loopne
xchg
dec
imul
jl
sbbl
xchg
addr16
ret
repnz
cltd
sbb
mov
mov
adc
outsb
idivl
and
aad
test
mov
xor
addr16
les
dec
in
clc
xchg
mov
jb
lret
mov
imul
adc
xchg
int
leave
xor
sbb
adc
push
lahf
xchg
leave
xor
add
fdiv
mov
hlt
mov
inc
loop
xor
lea
scas
and
sub
rcrb
inc
nop
cmc
jne
mov
jge
xor
pushf
xlat
pop
enter
cmp
jbe
out
push
je
xor
mov
add
or
cmp
repz
push
frstor
mov
pop
mov
dec
into
cmpsl
std
adc
test
xchg
mov
cwtl
mov
js
dec
push
add
cmpsb
ds
or
dec
repz
mov
shr
popf
stos
sub
loope
js
dec
sbb
pop
inc
rcl
out
pop
ja
sbb
scas
in
fisttpl
dec
jg
insb
push
adc
mov
xchg
in
cmpsb
jmp
mov
repz
ret
pop
mov
sahf
nop
inc
das
adc
and
add
lods
leave
pusha
in
xchg
pop
cmp
add
int3
mov
stos
fisttpll
out
icebp
dec
dec
mov
movsb
dec
idivb
inc
or
dec
push
addr16
jno
mov
loope
inc
jns
pop
or
jns
sub
push
add
insl
mov
int3
mov
jno
jmp
in
bound
mov
sbb
add
jle
repz
push
adc
mov
mov
outsl
movsb
pusha
arpl
jecxz
imul
aad
xchg
mul
punpcklwd
jmp
ret
jne
adc
sub
ret
inc
sub
jae
add
andl
sub
mov
push
stos
rorb
mov
jp
push
mov
xor
xor
or
dec
add
mov
call
filds
lret
and
xchg
or
pop
dec
dec
cltd
sbb
sbb
insb
jmp
push
fbld
dec
pop
dec
incl
jnp
enter
and
cmp
imul
cwtl
ja
testb
lods
cmp
pop
cmpsl
jns
popa
cltd
dec
pop
in
pop
mov
jb
jo
lcall
mov
cmc
adc
sub
lds
pop
test
fs
nop
inc
jmp
aad
fcompl
mov
clc
std
add
into
cmpsb
jns
test
add
adc
fwait
cmp
cmpsb
repz
icebp
fnstcw
pop
dec
pop
cwtl
xorb
lret
data16
jmp
mov
jl
out
out
xchg
add
jl
popa
jnp
or
mov
lret
jns
fcompl
pop
lods
int3
xor
loopne
mov
push
sbb
iret
adc
dec
inc
mov
lea
push
or
push
dec
pop
pop
xlat
call
sbb
aaa
pop
push
cmp
adc
lods
pushf
cli
shr
cmpsl
and
nop
push
cli
jmp
or
or
lcall
xor
push
adc
push
xor
iret
mull
fucomp
es
bound
inc
shlb
out
xor
pop
imul
jno
adc
lock
mov
movsl
push
icebp
scas
sub
add
fisubrl
push
out
icebp
jg
mov
stos
daa
push
push
loopne
mov
xchg
push
out
ret
jno
ja
adc
inc
cmp
mov
push
xchg
adc
dec
aam
out
inc
into
jl
pop
repnz
sbb
jle
xchg
jb
movsl
adc
repnz
call
pop
xor
inc
lods
es
lret
sbb
ss
push
sbb
fiaddl
push
jl
pusha
std
xchg
dec
inc
xchg
cld
mov
lds
mov
fwait
nop
cs
popf
cmp
test
rcrb
fildl
and
xorb
mov
mov
xchg
fstpl
cmp
add
sub
inc
pop
xor
pop
cld
sbb
mov
fidivrl
fldt
orb
mov
mov
jb
inc
bound
mov
sahf
rol
mov
adc
add
and
arpl
pop
test
mov
sti
sarl
jbe
pushl
or
sub
pop
dec
imul
push
leave
mov
ljmp
enter
sti
dec
repz
mov
and
test
lea
sahf
dec
insl
dec
xor
mov
testb
sti
pop
subl
inc
xchg
in
pop
and
imul
enter
mov
andl
adc
loopne
rorb
cmp
es
and
push
repz
call
aaa
jno
mov
out
dec
addr16
outsb
aaa
imull
jecxz
incl
cli
inc
jle
push
repz
ds
jmp
add
xor
movsb
push
xor
aad
xor
test
fld
scas
stos
rcll
mov
xor
int3
lds
and
fs
xor
dec
inc
pop
xchg
testl
lahf
inc
xchg
gs
mov
dec
cli
pop
push
cs
xor
in
pop
xchg
and
cli
hlt
adc
pusha
mov
pop
arpl
and
lcall
dec
inc
jle
jp
fisubl
repz
sbb
xchg
adc
mov
es
jne
mov
sbb
inc
mov
pop
or
sub
clc
hlt
pop
and
and
mov
icebp
in
lock
test
cmpl
mov
int3
cmp
dec
adcb
mov
or
sub
out
sbb
dec
jns
sbb
nop
mov
fwait
repz
popa
mov
scas
jne
jecxz
faddl
in
mov
sbb
fxch
sub
dec
jg
pushf
adc
sub
out
adc
arpl
ss
shlb
jecxz
mov
jmp
lret
lret
xlat
fmul
mov
into
cs
loope
mov
dec
mov
mov
aad
pop
into
addb
or
and
jb
ret
mov
out
aas
jp
ret
dec
fisttpll
pop
movsb
movsb
push
jg
sahf
adc
cmp
inc
sub
lods
bound
and
mov
out
inc
mov
xchg
mov
or
stos
arpl
adc
fistpl
iret
imulb
fbld
movsl
cltd
mov
adc
ret
mov
fsubr
test
cmpsl
repnz
lock
in
mov
ds
imul
mov
inc
in
and
loop
push
push
sbb
shrl
adc
out
movsb
cmp
mov
loop
int
ret
andl
iret
nop
push
xchg
push
data16
mov
jp
cld
addr16
xchg
xchg
in
xchg
sub
sahf
in
mov
and
stos
fbld
add
test
mov
sbb
mov
subl
add
repnz
in
mov
sub
lret
sub
pop
lds
insb
cld
imulb
cltd
xchg
inc
mov
mov
insl
gs
sub
stc
add
test
out
push
ljmp
das
enter
scas
push
out
into
mov
mov
mov
inc
xor
mov
pusha
lds
jp
bound
jb
and
cmp
dec
jnp
jae
and
mov
push
adc
mov
dec
shr
adc
add
mov
xchg
sbb
insl
nop
xchg
cmp
sbb
rcr
and
fisubrs
ficompl
es
sub
xchg
int3
sub
pusha
dec
jg
push
pop
push
or
xchg
jge
and
dec
pusha
loopne
scas
leave
pushf
jle
inc
mov
adc
scas
nop
outsb
jbe
add
push
sti
pusha
mov
cmpsb
push
pop
jnp
sarb
sti
rorl
or
ljmp
mov
in
mov
dec
cmp
stc
cwtl
mov
sbb
push
enter
sti
mov
out
leave
pop
mov
mov
inc
inc
jmp
xchg
cmp
outsl
cmp
add
dec
inc
or
shlb
jp
adc
mov
ret
jle
in
jle
je
pop
stc
cmp
xor
std
mov
xchg
cmpsb
lret
cmp
mov
clc
xchg
nopl
add
imul
fcoml
sub
pop
xchg
lea
icebp
rorl
stos
call
ret
test
nop
mov
imul
adc
jmp
inc
adc
jge
roll
or
xchg
sarl
mov
xor
dec
dec
push
mov
push
lcall
cmp
out
mov
dec
pop
test
fmuls
jmp
jge
jns
mov
iret
iret
pusha
dec
stos
push
out
inc
push
push
jb
cmc
je
into
lcall
out
ds
xchg
mov
cltd
xor
in
mov
sub
out
enter
test
push
jmp
xchg
rcrb
push
fwait
ljmp
jl
testl
enter
inc
mov
movsl
out
add
testb
out
sub
xchg
xlat
cmp
adc
enter
pop
lods
fdivr
sbb
dec
loope
hlt
sub
in
mov
push
lahf
jp
cmp
add
fwait
stos
cs
mov
adc
xor
mov
stos
adc
addr16
enter
js
cmpsb
shr
sub
pop
adc
call
sti
jns
sbbb
mov
lea
bound
sub
cmp
clc
xor
sbb
sub
loop
push
sub
jo
das
cmpl
dec
push
test
sbb
clc
dec
std
mov
push
xrelease
stos
xor
sub
in
arpl
pop
sbb
pop
ljmp
pushf
add
mov
loop
stc
sub
push
fbstp
mov
adc
imul
cmp
or
shr
cli
jp
repnz
test
jg
repnz
xor
rcrb
adc
mov
shl
mov
out
cmp
jmp
lret
stos
outsb
std
int
mov
std
xchg
out
ret
cmpsb
mov
js
push
and
push
push
sub
cmpsb
mov
fiaddl
clc
cmp
cli
shrl
and
test
sahf
addr16
insb
adc
imul
sub
inc
push
pop
xor
inc
dec
sbb
and
add
fldz
rcrb
mov
ljmp
push
mov
pop
into
ja
mov
xchg
clc
test
iret
lret
not
xchg
dec
push
mov
out
test
xchg
lods
pop
push
bound
mov
add
adc
sarl
aas
clc
mov
dec
cmp
repnz
lahf
icebp
aam
push
aaa
popa
pop
pop
cli
adc
push
pop
outsl
push
mov
xlat
dec
xor
adc
rclb
xchg
dec
daa
xchg
addr16
gs
xchg
push
xchg
adc
cmp
loope
test
sbb
mulb
ljmp
neg
cmpsb
mov
sbb
inc
dec
jle
shlb
pushl
loopne
cli
xchg
push
pushf
ret
lds
xchg
test
shll
adc
idivb
lods
out
movl
sub
ljmp
mov
int
in
addl
loopne
cmp
addb
nop
jecxz
jns
outsl
mov
sti
rcrl
fs
add
int3
sarb
pop
lahf
jns
pop
into
push
mov
or
inc
lods
stc
jns
and
test
and
dec
ficoms
cmp
jge
inc
neg
les
orb
pop
jno
push
lods
mov
imul
sbb
cmc
insl
movsb
in
adc
and
icebp
inc
cmp
pop
je
dec
pop
aad
clc
movsb
shrl
fiadds
cmp
sub
sub
fisttps
mov
ret
and
sub
cwtl
add
popa
rcrl
movsb
pop
mov
xor
shlb
mov
in
inc
xor
ret
sub
imul
daa
inc
aas
adc
roll
xlat
mov
pop
pop
sbb
add
lds
jno
mov
cmpsl
sub
pop
cli
dec
xchg
or
push
or
xor
sbb
cmp
jnp
or
movsl
sqrtps
test
sub
mov
inc
fdivr
out
jnp
jmp
mov
ret
pop
bound
ja
cmp
dec
xlat
rorb
mov
sub
cmp
insb
ror
xlat
pop
out
cmp
inc
push
lock
aad
jl
in
test
std
mov
pop
dec
add
sub
xor
dec
inc
lds
ror
mov
pusha
jle
cli
sbb
outsb
dec
cmp
sub
pop
outsb
mov
sbb
fldcw
pop
movsb
mov
push
jne
push
fs
xor
sbb
mov
jns
adc
or
mov
mov
xchg
xor
or
add
xchg
movsb
insl
stos
jmp
js
scas
test
cmpsl
pop
aaa
mov
fs
jae
sbb
xor
mov
pop
stos
sub
and
pop
enter
in
cmp
roll
add
popf
pop
out
cmp
testl
add
jl
fxam
mov
data16
xchg
push
arpl
lds
into
clc
movsb
sub
incb
fcoms
cmp
in
inc
fnstenv
mul
sbb
push
loopne
inc
add
cmpsb
cmp
and
scas
inc
call
lahf
dec
shrb
repnz
push
xor
lods
icebp
in
into
negl
ljmp
jns
icebp
mov
ficoms
push
jo
daa
fsubs
jne
jnp
mov
sub
cmp
jae
mov
shll
adc
and
push
repnz
pop
mov
jp
sub
xchg
out
xchg
lods
cmp
je
arpl
push
push
xchg
notl
scas
sub
lods
in
cmp
negl
mov
sub
xchg
pop
pop
flds
xchg
inc
leave
lds
or
movsb
sbbb
sbbb
subb
or
test
loop
rcll
xacquire
sub
or
xor
xchg
mov
mov
lret
adc
add
adc
ret
push
mov
cmpsl
call
insl
sbb
mov
sti
mov
and
push
inc
push
mov
scas
xchg
jne
adc
nop
jne
xorl
xor
mov
and
in
xchg
dec
inc
cld
pop
ret
or
fwait
sub
lock
push
add
push
adc
ljmp
data16
aam
or
fadds
insb
add
push
daa
mov
aas
lds
xchg
mov
and
jmp
cld
int
xchg
push
fwait
sbb
rcrb
mov
sub
push
push
jne
dec
mov
in
mov
or
loopne
push
push
shlb
mov
mov
cld
aad
pop
lods
jbe
sahf
cmp
psadbw
mov
outsl
outsb
xchg
xchg
popf
inc
jbe
test
fwait
lds
ret
mov
sbb
inc
aam
and
jae
push
or
mov
pop
push
test
xchg
lock
pop
xor
xor
jp
push
adc
dec
inc
pcmpeqd
ljmp
mov
mov
jae
scas
pushf
lods
cmpsl
fdivs
jns
mov
push
out
jo
lds
sbb
jle
add
xor
jbe
rcrb
daa
or
roll
ret
fsubrp
loope
add
mov
or
push
mov
daa
rclb
loop
repnz
xor
bound
xchg
push
mov
daa
rclb
loop
repnz
xor
bound
xchg
xlat
mov
daa
rclb
loop
repnz
xor
bound
xchg
push
mov
daa
rclb
loop
repnz
movl
popf
testl
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
lcall
mov
mov
sub
add
sub
inc
dec
mov
movsl
stos
xchg
lcall
aad
cmp
or
gs
pop
inc
dec
mov
movsl
stos
xchg
lcall
aad
add
jbe
push
or
sub
jne
sub
mov
aad
jle
lds
cs
sub
push
pop
jns
icebp
mov
ror
and
sub
loopne
les
add
adc
inc
xchg
dec
dec
sbb
loope
pop
mov
jl
insl
in
icebp
lods
outsl
popa
pop
fnsave
aam
pop
cli
lret
movsl
pop
movsl
add
inc
movsl
stos
mov
imul
and
in
cmc
xchg
sub
cmp
dec
imul
push
dec
nop
ja
cli
in
adc
pop
jg
sub
add
das
rcrb
sbb
movsl
push
pop
fwait
add
adc
adc
dec
lret
cmp
mov
add
inc
dec
ljmp
mov
cli
in
aad
cmp
or
gs
pop
inc
or
xlat
loope
stc
fmul
int3
mov
subb
push
xchg
inc
jp
popa
add
sub
cmp
xor
ljmp
fstl
mov
lret
dec
inc
insl
dec
pusha
ds
add
ljmp
mov
in
aad
cmp
or
gs
pop
inc
dec
mov
movsl
stos
xchg
lcall
aad
cmp
or
gs
pop
inc
dec
mov
mov
pop
xchg
out
cld
cmpsl
lea
mov
and
inc
pop
dec
je
xor
dec
stos
loope
test
icebp
push
test
dec
jmp
jnp
sahf
cwtl
sti
cwtl
fisubs
hlt
jae
jno
sahf
dec
jl
cmpsb
aaa
out
test
pop
sti
cli
icebp
mov
jbe
push
rolb
ret
int3
pop
or
adc
mov
cmpsl
cs
cmp
pusha
rolb
hlt
push
in
pop
lea
enter
pushf
das
cld
push
jecxz
fisttpll
sub
adc
ss
dec
daa
rorl
adc
std
sub
aas
add
loope
pop
and
sub
fnstcw
xlat
jecxz
push
pop
ret
cwtl
dec
sbb
loop
adc
mov
and
mov
popa
int3
test
cmc
jne
mov
loope
xchg
fwait
push
and
jp
enter
incl
js
cmp
fists
pop
loop
xchg
adc
es
stc
or
scas
push
shrb
dec
sbb
push
add
add
bound
aad
xchg
imul
sahf
rclb
icebp
cmp
aad
inc
xchg
cmp
mov
push
icebp
jb
jns
cs
out
or
out
mov
xor
mov
stc
dec
mov
adc
jl
dec
in
push
mov
ljmp
push
jecxz
sub
fisubrs
inc
mov
xlat
mov
in
repz
je
out
dec
daa
xor
cs
push
loop
mov
in
adc
cmp
lods
dec
nop
or
xor
push
stos
sbb
out
xchg
insb
leave
push
sbb
nop
mov
scas
enter
out
cmp
pushf
xor
dec
jl
mov
inc
pop
movsb
test
jp
nop
fs
jo
xor
clc
sbb
ffree
fisubrl
pop
lds
push
push
popf
mov
aad
pop
int3
cmp
and
scas
clc
es
nop
inc
scas
inc
and
push
mov
pop
jecxz
insb
mov
sbb
inc
pop
push
ficompl
pop
rcl
jge
aaa
ret
lds
jmp
mov
jne
jmp
cld
add
aam
jo
jae
popa
pop
arpl
cli
inc
cmp
mov
stos
pop
bnd
lret
mov
or
pop
imul
xchg
mov
xchg
lret
inc
push
fimull
jnp
test
punpcklwd
insl
pop
inc
insb
inc
push
pop
mov
sub
shrl
decl
push
sti
mov
imul
ja
pusha
dec
lods
jnp
fwait
aaa
lea
mov
jmp
adc
lods
lods
fs
pop
pushfw
out
das
out
mov
test
lods
xor
jne
js
arpl
push
shlb
sbb
shrl
out
gs
fsubrs
shlb
mov
insl
bound
dec
pop
daa
xchg
mov
lret
xchg
or
fidivrl
popa
insl
push
adc
sbb
dec
pop
jno
dec
cld
jae
test
in
pop
adc
inc
ljmp
rclb
call
push
inc
icebp
push
and
cmp
shlb
push
ja
pop
fimuls
and
mov
and
mov
ss
dec
pop
outsl
cmpsl
movsb
push
pop
sbb
insb
xor
cwtl
xor
cld
sahf
idivl
sub
pop
pop
fdivr
dec
jle
add
and
mov
and
subl
popf
lret
dec
test
sub
or
mov
out
inc
pop
mov
or
fidivl
into
xor
sbb
adc
js
pop
pop
cvtpi2ps
fcomip
push
sbb
mov
mov
cmp
pop
loop
mov
ds
subb
mov
std
xchg
or
jle
pop
aaa
pushf
ja
xchg
jns
cltd
or
in
scas
fildll
push
mov
dec
mov
shll
test
inc
pop
fs
nop
ret
cmp
hlt
mov
repnz
push
adc
and
loope
or
xlat
push
pusha
scas
jecxz
xlat
loop
xchg
rorl
cmpsb
test
das
lock
flds
xchg
dec
imul
fmulp
in
push
jbe
ljmp
cmpsl
push
push
mov
jle
aaa
test
xchg
or
bound
push
jno
insl
inc
adc
or
mov
and
add
ret
imul
sub
out
push
fmulp
insl
dec
int3
out
in
ret
stos
fwait
or
bound
adc
fsubrs
nop
rcrl
add
adc
mov
arpl
lock
mov
ret
loope
jmp
stos
jecxz
jp
mov
xor
mov
test
out
mov
lea
jl
aad
out
in
dec
ja
out
pop
shll
data16
jne
bound
pusha
and
or
cmp
adc
pop
add
mov
xchg
adc
lcall
mov
mov
pop
and
negl
mov
xchg
dec
push
push
inc
dec
push
xchg
pop
sub
mov
cmp
leave
cli
sub
rcr
test
xchg
out
dec
scas
mov
out
fadds
in
mov
ja
pushl
adc
inc
mov
mov
repz
mov
in
or
mov
loope
int3
sti
add
cli
inc
leave
jl
imull
scas
fldl
pop
das
xchg
jne
aad
mov
mov
mov
dec
push
bound
dec
dec
sbbl
add
arpl
ljmp
aad
mov
loope,pt
movsb
sub
std
cwtl
lock
xor
mov
lret
push
ljmp
jb
movlps
dec
push
mov
pushf
pop
xor
push
xchg
mov
movsl
mov
dec
sub
jnp
add
cli
lds
xchg
xor
cli
dec
cmp
lock
adc
sub
pop
or
cmp
mov
dec
pop
outsl
pop
mov
mov
loope
pop
rcrb
and
sbb
out
mov
adc
in
inc
pop
fcomp
or
and
aas
add
fsub
mov
mov
jge
and
fildll
push
fbld
adc
cs
sti
cmp
loopne
sbb
push
sbb
cmc
dec
push
mov
sub
dec
lahf
out
jmp
push
xor
enter
cltd
adcb
sbb
int3
xlat
gs
mov
add
push
out
loop
inc
mov
daa
jbe
jle
fisubrl
call
inc
dec
sti
insl
loopne
lds
push
push
lock
scas
adc
mov
gs
jmp
mov
push
dec
mov
push
insl
xor
xchg
push
aaa
adc
adc
fisttpl
mov
pop
outsb
mov
imul
jecxz
xor
mov
dec
mov
pop
dec
add
cwtl
pop
mov
jbe
fidivrs
shrl
xchg
ljmp
ficomps
jns
arpl
mov
clc
sub
xchg
fisttpl
fsubl
add
iret
inc
fwait
inc
pop
popa
sbb
in
jl
jp
cmp
sbb
inc
jb
jmp
cmp
fsubrp
cmp
push
leave
or
add
mov
push
das
jg
roll
leave
scas
mov
mov
fnsave
scas
jnp
repnz
or
xor
jns
sub
xor
outsb
scas
into
push
mov
aam
movsb
sub
cmp
push
sub
xchg
popf
out
mov
sarb
or
lods
and
rcl
xor
aas
shl
inc
addl
push
sbb
cmc
imull
into
out
push
call
fdiv
mov
mulb
jnp
inc
jbe,pn
mov
mov
add
popa
jae
cmp
test
jno
nop
lret
into
jne
dec
ret
in
cmpb
sbb
lock
inc
sahf
popf
mov
vpsllq
add
jne
scas
mov
movsl
out
sub
jl
iret
lcall
xchg
sbb
cmpsb
and
push
scas
xorb
test
xor
xlat
mov
push
leave
sub
fmuls
xlat
cmp
imul
test
enter
push
mov
je
repz
push
les
push
adc
and
mov
or
xchg
loop
dec
test
xchg
jg
cmp
pusha
nop
jnp
cmp
test
cmp
cmp
dec
cmp
int
ss
push
adc
aas
adc
and
pop
loope
push
and
outsb
jnp
sarb
cli
and
sbb
imul
cltd
idivl
add
popl
testb
cmp
push
pop
jb
popa
jp
lret
nop
gs
popa
jo
movsl
xor
pushf
loop
out
xor
mov
pop
jae
inc
push
pop
nop
pop
mov
aad
cmp
push
push
inc
js
movsl
into
pusha
dec
aam
gs
pop
sub
xchg
ret
rcrb
add
add
push
into
adc
push
lret
insl
mov
mov
mov
and
outsb
adc
xchg
lods
inc
ljmp
bound
ficoml
xor
dec
cmp
jg
adc
aam
mov
dec
cmp
adc
lds
and
mov
pop
jno
popf
es
out
test
push
push
sahf
mov
jmp
jp
sbb
daa
xchg
mov
stos
or
jecxz
test
imul
inc
mov
dec
sbbb
fstp
andl
xor
ret
jbe
mov
jge
xorl
mov
add
mov
int
test
jl
cmc
in
inc
mov
dec
push
hlt
adc
outsb
fldl
xor
iret
pusha
loop
in
mov
cmpsb
fisttpl
cmpl
push
mov
movsb
cltd
inc
mov
outsb
pop
lcall
push
testb
clc
shrl
adcb
and
mov
call
fldt
cld
lds
adc
push
fsubr
push
aam
int3
add
aad
imul
xlat
les
push
xchg
lcall
lret
sub
jp
lret
stos
sbbb
jg,pn
fdivrl
mov
pushf
mov
adc
repnz
pushf
push
cmp
ret
jg
push
sbb
and
cmp
adc
loop
sbb
lock
push
subl
and
xlat
jno
outsb
jo
jnp
add
dec
mov
shrb
fmuls
mov
xor
test
jbe
cmp
call
in
jne
outsl
or
or
hlt
ss
jmp
jae
dec
std
gs
and
jecxz
add
add
mov
jb
and
sbb
mov
nop
xlat
mov
std
nop
lock
fs
mov
dec
stc
insl
fisttps
cmpsb
leave
mov
cmp
jno
shll
cmc
adc
mov
loope
fnstenv
out
push
ss
cmc
jns
test
push
push
imul
test
sbb
xlat
scas
aad
add
or
mov
mov
sbb
pop
stc
xchg
fstps
fdivr
or
loopne
cmpsb
sar
insb
addl
mov
daa
cmp
jne
inc
pop
adcb
mov
add
daa
sbb
push
popa
pop
mov
push
jmp
into
cmp
sbb
ss
pushf
outsl
jne
pop
jnp
or
sub
jne
stc
xchg
mov
xorl
orl
dec
jnp
fdivs
inc
fcoml
pop
adc
mov
cmpsl
mov
stos
xchg
ds
xchg
rclb
in
ljmp
loop
js
xchg
mov
xchg
inc
stos
sahf
sbb
les
adc
cmp
cld
xor
mov
scas
fildll
ljmp
fisubl
push
mov
and
sbb
jge
jbe
scas
and
out
adcl
fbstp
mov
bound
aad
movsl
sub
cmp
jge
popa
cltd
mov
dec
sub
and
test
insl
cli
xchg
push
aad
pop
outsl
mov
in
enter
inc
mov
xor
pop
push
inc
sbb
lcall
pop
cs
jae
pop
jns
lock
out
arpl
mov
jnp
ss
push
je
pop
fwait
std
cmpsb
or
inc
push
outsb
sbb
inc
leave
popa
int3
cwtl
push
rorb
xor
dec
adc
xor
stc
int3
imul
lret
out
push
push
jbe
dec
scas
jmp
jne
repz
mov
js
push
adc
out
push
ja
movsb
ret
xchg
sahf
jo
or
inc
ret
test
sub
mov
test
aas
pop
jb
mov
inc
bound
lock
xor
and
outsl
xor
ror
push
leave
and
inc
movsb
jne
clc
xchg
enter
lcall
lahf
pop
in
stos
cld
and
pop
sbb
adc
ret
mov
scas
sbb
imul
hlt
push
stos
shll
mov
sub
cmp
push
and
inc
out
dec
push
clc
call
push
das
mov
je
fbstp
roll
insb
test
cmp
fsubl
jns
ret
sahf
jns
mov
jb
repnz
xchg
out
mov
jae
and
leave
sbb
jge
mov
sub
add
insl
movb
cmp
mov
popa
imul
xchg
adc
shlb
push
or
dec
inc
lds
shlb
mov
sub
addr16
bound
testb
sbb
in
dec
sti
ud2
cltd
popf
in
pop
outsl
out
pop
fcoml
in
mov
arpl
jns
inc
inc
lret
fwait
xlat
fldcw
xchg
inc
lahf
mov
and
jno,pt
insl
std
imul
or
pop
jo
sub
xor
or
xchg
sbb
push
enter
xor
shrb
mov
add
lds
or
into
pop
outsb
arpl
arpl
xlat
and
sarb
mov
rcrb
stos
arpl
leave
dec
int3
fmull
rcll
out
scas
in
add
push
or
and
lds
push
lock
xlat
inc
cli
inc
push
mov
leave
inc
sub
sbb
inc
das
mov
andl
or
push
mov
out
outsb
in
push
mov
hlt
and
push
sub
push
int3
dec
repz
jae
mov
call
pop
lcall
dec
adcb
or
pusha
sub
jle
pop
mov
sub
scas
hlt
bound
inc
dec
mov
iret
sbb
addr16
lock
daa
adc
xor
push
or
jbe
jp
ficoms
mov
push
inc
mov
inc
pop
jp
sti
xchg
jno
xchg
test
testl
test
mov
jnp
lahf
fwait
movsb
jb
add
cli
jg
cmpsl
cmp
adc
jle
add
mov
mov
add
xor
add
aad
scas
cs
mov
jle
test
pop
jb
out
outsb
fsubr
les
push
mov
inc
mov
dec
jle
popa
or
push
lea
mov
fiadds
outsl
out
xchg
gs
xchg
add
jmp
out
push
sbb
call
bound
sub
mov
imulb
out
add
dec
cmpsb
mov
and
arpl
repz
in
mov
add
add
sar
andl
in
shr
orl
push
bound
sbb
rorl
popf
out
ss
bound
dec
cmp
sub
test
sub
and
sub
bound
sbb
jae
test
mov
xchg
dec
mov
scas
shll
into
lds
push
scas
cs
stc
orb
dec
test
add
sti
and
xchg
mov
mov
fstpl
std
bound
mov
push
xorl
inc
cwtl
sbb
call
mov
scas
daa
mov
shrl
nop
and
cmp
imul
jo
mov
pop
cmp
xchg
or
dec
pop
sahf
pop
test
dec
mov
out
xchg
jo
shlb
adc
xchg
rcrl
sub
in
loope
cmp
js
bound
mov
and
rorb
cli
je
add
sbb
sub
jge
ja
ficoml
sbb
test
in
insl
test
movsl
mov
sub
xchg
test
push
imul
mov
mov
dec
or
shr
movsb
and
std
arpl
sti
in
xchg
pushf
jae
ss
push
xchg
std
gs
leave
cmp
push
jbe
xchg
lcall
fwait
sbb
imul
sub
jecxz
ret
in
stos
sbb
xor
pusha
adc
loope
add
push
push
outsl
fistpll
andl
lods
dec
fwait
and
sbb
cmp
fnstsw
adc
sti
cwtl
pop
shll
push
and
mov
add
inc
push
fwait
adc
and
cmp
sahf
sbb
les
loop
jns
cmpsb
lahf
mov
push
push
imulb
adc
test
pop
je
test
mov
mov
out
imul
cld
and
and
cld
sub
push
jae
mov
out
cld
mov
add
out
push
pop
out
push
mov
pop
sti
or
call
sarb
mov
push
ror
sbb
mov
push
mov
loop
pushf
cs
dec
xchg
cmp
push
push
clc
outsb
and
add
or
sub
pop
mov
adc
add
push
push
cmc
mov
and
mov
lahf
out
aas
mov
fidivs
inc
fisttpl
cmp
cld
and
sbb
fxrstor
or
lds
push
push
or
add
and
sbb
pop
or
test
adc
xor
gs
push
inc
jns,pt
add
push
popf
mov
push
jecxz
or
sub
mov
rorb
push
pop
cbtw
pop
pushf
inc
xor
xchg
sub
adc
arpl
ss
inc
xor
mov
mov
mov
xchg
pop
shrb
shlb
int
inc
push
cmp
int
sbb
int3
xlat
inc
imul
int3
lods
or
mov
cmp
fbld
cwtl
pusha
bnd
and
nop
xor
sub
pop
icebp
loopne
enter
jbe
adc
outsl
aam
push
mov
mov
jns
clc
lea
cli
mov
push
jg
jbe
xor
not
int
ljmp
das
test
lds
shlb
push
push
lds
cmc
test
out
scas
sbbb
les
insl
nop
adc
out
dec
mov
faddl
inc
pop
add
aam
jae
pop
add
ljmp
addr16
lcall
std
stc
jl
movsl
mov
insl
fwait
mov
or
in
notl
stos
cmc
repz
inc
and
std
mov
imul
lea
arpl
add
inc
push
sti
mov
je
cwtl
cmp
xchg
ja
mov
lret
add
fnstcw
js
lds
push
imul
in
mov
cmpl
mov
fs
je
nop
jecxz
sub
push
mov
movsb
mov
leave
xchg
ret
ja
and
pop
or
push
cmpsl
fldenv
in
jo
mov
mov
repz
arpl
scas
push
out
xor
jbe
outsb
mov
lods
or
mov
mov
inc
lods
daa
sbb
push
xlat
test
xor
push
jecxz
push
sbb
fmuls
sub
lret
jmp
lds
push
inc
mov
xchg
sahf
adc
outsb
jns
sub
mov
pop
lea
aaa
pop
popf
cmp
xorl
or
sub
pop
cli
cmp
mov
lds
mov
pop
inc
cli
es
out
lock
add
imul
push
les
add
ja
fbstp
ret
roll
jecxz
insb
sarl
cmc
popf
pusha
test
scas
sbb
scas
inc
pop
pop
sbb
negb
fstps
rolb
in
jno
shrb
mov
xchg
outsl
data16
call
pop
xchg
and
mov
mov
shrb
sub
jge
and
imul
pop
jge
mov
in
mov
push
mov
cli
ja
das
xor
cmp
mov
idivb
mov
push
jae
loop
pop
or
nop
pop
sub
xchg
ja
hlt
xchg
mov
adc
pusha
jns
fimull
arpl
inc
mov
test
aad
cmp
or
gs
pop
inc
dec
mov
movsl
stos
xchg
lcall
aad
cmp
or
gs
pop
inc
dec
mov
movsl
stos
xchg
lcall
aad
cmp
or
gs
pop
inc
dec
mov
movsb
stos
xchg
lcall
aad
lds
mov
repnz
xchg
stos
movsl
mov
nop
dec
mov
dec
mov
lods
xor
stc
and
pusha
cltd
jo
cmpb
mov
cmp
or
sbb
and
xor
pusha
cltd
jo
cltd
pusha
mov
inc
test
fldenv
enter
ljmp
lods
inc
xchg
hlt
and
adc
pop
sbb
jns
add
or
adc
add
pop
adc
add
and
xor
mov
xchg
or
hlt
sbb
dec
loopne
mov
and
pop
rorb
and
push
out
ss
iret
adc
nop
adc
in
jns
add
cmp
sbb
add
cltd
dec
es
push
in
jmp
mov
pop
shl
or
sub
loope
sbb
loopne
out
leave
filds
aad
lahf
jo
mov
sub
movsl
sbb
or
add
popa
cmc
mov
in
pop
aam
xchg
dec
mov
jmp
push
fmul
imul
jbe
xchg
jns
dec
mov
and
or
add
lock
or
cmp
sub
jp
jno
sbbb
lds
mov
mov
outsl
stc
adc
and
cld
sbb
jmp
pop
fistps
push
sahf
gs
pop
ret
stc
jne
inc
lods
xor
xor
push
stc
pop
cltd
add
orb
les
push
repz
or
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
mov
cmp
or
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
push
dec
adc
out
cltd
mov
aaa
cmp
addr16
sub
cmp
inc
mov
xchg
or
jge
add
inc
push
jg
sub
dec
in
adc
testl
cltd
or
jns
cmp
sub
testl
sbb
bound
ror
andl
cmc
aas
in
jle
pop
or
ljmp
fsubl
gs
imul
pushl
xlat
notb
push
dec
lret
fistl
cmp
scas
jp
pop
cs
enter
jb
inc
insb
lcall
into
stc
shl
cmc
xchg
inc
enter
mov
test
gs
mov
mov
xchg
mov
mov
int
xchg
scas
gs
mov
sti
in
js
ds
out
push
xor
inc
repnz
sti
jnp
pushf
xorb
adc
out
xchg
lcall
jae
inc
gs
cmp
test
repnz
mov
aaa
pop
cmp
sbbb
punpckhwd
out
mov
mov
fsubl
cmp
add
ret
cld
xchg
aam
xchg
imulb
loop
add
loop
jne
scas
add
rcl
fdivp
adc
cld
das
ret
jecxz
fsub
lock
cmpsl
aaa
adc
sub
gs
jnp
or
jnp
adc
cmp
cmp
xchg
data16
sub
test
adc
das
shlb
adc
lret
in
test
roll
jb
js
in
mov
xchg
pop
subb
jle
jl
add
ja
mov
lock
inc
inc
stos
xor
mov
mov
push
jae
cmp
ljmp
pusha
sbb
jp
push
addr16
mov
pop
sub
cmpsl
fdiv
xchg
shlb
cmp
jns
hlt
mov
dec
xor
dec
lcall
or
cltd
or
mov
jbe
xor
jmp
pop
jno
loop
lahf
ror
push
adc
ficoml
xchg
aam
in
and
fisttps
std
cmpsl
cwtl
notl
shll
push
sbb
out
popa
rolb
sub
add
pop
call
inc
xchg
insl
cmp
cmpsl
mov
fucompp
repz
sub
ss
or
shr
push
push
adc
jmp
hlt
mov
cmp
and
add
sbb
test
test
xor
sub
and
rcrb
shl
mov
jecxz
fs
les
mov
sahf
push
arpl
jb
dec
adc
into
outsb
cmpsl
cmp
inc
movsb
mov
in
mov
scas
mov
lods
cmp
aas
pop
clc
in
and
shl
int
sbb
push
lock
adc
jae
mov
and
push
loope
or
mov
loope
sarl
mov
fld1
xor
mov
pop
out
ror
xor
mov
nop
popa
rol
test
xlat
add
outsl
and
popa
sub
jl
mov
xchg
cwtl
add
mov
pushw
dec
bound
icebp
jno
sbbl
in
jge
jecxz
mov
shlb
fmul
add
pop
inc
fisubrl
mov
movsb
fdivs
jl
cmp
sbb
fisttps
sbb
mov
js
inc
push
push
jmp
dec
or
into
cmp
or
popa
inc
int
rorb
in
jl
hlt
outsb
push
sbb
jno
inc
and
imul
mov
mov
adc
int
or
adc
xorb
scas
xchg
repz
mov
jbe
pop
sbb
fcompl
jmp
inc
xor
jns
movsl
pop
lret
pop
sub
pop
imull
and
andb
cmc
ret
fcoml
inc
insb
and
dec
adc
test
add
cmp
mov
xor
jmp
cmpl
xchg
mov
pop
cmpsl
sub
lds
xor
jns
insb
and
insl
cli
and
pop
mov
push
stos
inc
fdivl
jns
testb
or
pop
jmp
mov
mov
leave
out
cld
fucom
outsb
or
test
inc
dec
mov
cwtl
or
add
je
cmpb
sbb
add
mov
mov
cmpsb
and
repz
divl
mov
les
scas
ficomps
inc
pusha
xchg
subb
or
sbb
clc
and
enter
cmpb
shl
shrl
add
pop
jge
dec
sbb
xchg
mov
inc
out
jns
out
sub
pop
pop
outsb
mov
push
xlat
shrl
outsb
fcmovu
mov
sub
xor
xchg
cmpsl
into
int
aaa
sbb
call
or
sbb
push
xor
mov
cmpsl
rcll
inc
xor
mov
pop
loopne
xor
fsts
pop
inc
fucom
insl
outsl
out
es
fdivl
dec
loop
ret
cli
and
movsl
mov
pop
rcrb
andl
jmp
sub
and
push
scas
gs
jge
jbe
loop
mov
jb
movsl
sbb
mov
jne,pn
ljmp
pop
lret
xchg
leave
sub
daa
or
aaa
sbb
mov
xor
cltd
inc
sub
cmc
aad
mov
mov
jle
pop
gs
jb
fchs
lea
mov
sbb
negl
push
test
dec
sti
xchg
add
cmp
mov
mov
pop
test
sbb
rolb
mov
fwait
inc
je
pushf
sbb
arpl
mov
lea
inc
jno
shr
into
lea
mov
adc
dec
push
push
mov
xor
divb
mov
popf
scas
xor
xor
jge
and
push
add
out
mov
xchg
ljmp
inc
in
fcmovne
bound
outsb
or
faddl
jb
jmp
jb
mov
call
or
lahf
mov
ret
movsb
std
pop
cmp
xchg
je
das
push
pop
shll
pop
out
xchg
mov
mov
aam
outsb
aaa
mov
sbb
mov
out
bnd
cld
icebp
je
lcall
sub
dec
inc
adcb
int
mov
fcmovne
add
push
sbb
mov
pop
leave
jne
je
sbb
nop
in
mov
xchg
leave
imul
cmp
into
into
repz
insl
pushf
popf
les
lea
mov
into
xor
aad
loopne
fcompl
sub
xor
pusha
xchg
clc
hlt
andl
jmp
push
cmp
or
lea
testb
sub
fsubs
fsubp
adc
xchg
xlat
clc
lock
rorl
fisttps
sub
inc
xchg
push
mov
inc
dec
mulb
inc
xchg
sarb
and
test
out
and
adc
xchg
mov
filds
jecxz
ja
pop
or
inc
inc
in
sarb
imul
rclb
or
cmc
cmp
in
cmpl
out
and
mov
fisubrl
adc
mov
adc
rorb
stc
jl
add
jb
ljmp
push
adc
out
mov
scas
or
inc
aas
gs
lock
adc
setl
mul
sbb
mov
mov
mov
lahf
into
push
add
pop
adc
add
pop
inc
or
loope
jmp
stc
and
and
add
sub
mov
push
sbb
mov
jecxz
cmpsb
jge
push
out
fistps
mov
jecxz
xor
leave
xchg
jnp
lea
inc
xor
ret
pushf
stos
js
inc
pop
push
aaa
shrb
ficoml
movsb
ret
or
repnz
jbe
sahf
sub
jbe
jl
lods
loop
popf
repnz
imul
int
push
adcb
xchg
imul
test
insb
outsl
ljmp
jae
lcall
hlt
push
ficomps
or
into
iret
leave
mov
adc
rorb
lds
jae
mov
mov
push
push
cmp
sahf
arpl
lcall
push
mov
insb
cmp
inc
inc
and
mov
mov
mov
mov
inc
add
pop
xchg
jns
xchg
in
mov
cld
mov
ss
push
insl
or
scas
addr16
jae
movsb
inc
ucomiss
mov
jp
mov
scas
xchg
iret
pop
out
adc
fstpl
xor
loope
in
jecxz
in
ds
pop
enter
fidivl
divl
scas
je
icebp
sbb
cld
in
jl
mov
sub
add
adc
pop
ja
jl
jno
lret
or
jle
mov
xchg
adc
mov
dec
mov
je
jp
inc
lods
sbb
xor
adc
pop
jb
divb
inc
movsb
repz
aam
into
and
sub
pop
jecxz
mov
loope
leave
jbe
imul
dec
inc
repnz
jmp
sbb
fldt
addr16
icebp
mov
xchg
mov
in
mov
test
les
or
push
xor
push
xor
mov
aam
push
cmpsb
call
movsl
xlat
mov
pop
mov
out
ret
add
cmp
inc
xchg
mov
or
cmpsl
push
push
daa
dec
cmpsl
adc
enter
rol
adc
stc
xor
adc
adc
add
pop
movsl
xchg
jg
mov
aam
and
mov
xor
outsl
cs
dec
mov
adc
mov
jns
adc
cs
or
jbe
test
nopl
enter
out
mulb
or
ljmp
mov
push
scas
out
xlat
cmp
ret
pop
pop
xchg
gs
imul
mov
std
and
mov
jle
cmp
sbb
xchg
dec
imul
xor
push
jae
jb
lcall
inc
retw
jno
out
out
in
adc
ds
bound
or
incb
adc
inc
cmp
or
aam
pop
test
cmp
and
or
pop
and
inc
xchg
imul
aad
daa
mov
xchg
mov
sbb
loop
inc
mov
jnp
pop
cmpsb
movsl
int3
out
xchg
sbbb
jbe
push
or
add
mov
xchg
loopne
fnstsw
inc
sbb
inc
mov
dec
loop
mov
sbb
adc
sub
loop
sub
in
pop
and
or
aam
sbb
pushf
xchg
dec
imul
or
pushf
pushf
inc
andl
test
mov
push
xchg
int3
in
testb
daa
hlt
in
rolb
out
push
in
testb
push
insb
into
add
inc
fwait
movsl
mov
push
jmp
mov
arpl
xor
out
mov
in
jge
jg
xchg
frstpm(287
cmpsl
shlb
in
repnz
inc
jo
ljmp
inc
cwtl
jle
dec
addr16
add
push
mov
dec
sbb
cli
push
int
enter
pop
dec
mov
inc
mov
cmovle
pop
vpcmpeqb
lret
sub
dec
mov
sbb
or
mov
fdivr
sub
int3
rcl
inc
add
pop
push
pushf
shl
hlt
xchg
imul
mov
push
or
iret
test
adc
xor
aam
int
sbb
fldt
lods
xor
adc
jo
addr16
rcrl
mov
xor
pop
inc
movsl
int3
add
imul
pop
outsl
pushf
mov
adc
push
leave
add
push
cpuid
and
loopne
or
mov
or
mov
mov
das
xchg
dec
sbb
std
or
test
cmp
imul
add
pop
sbb
xor
out
mov
jmp
mov
les
cli
sub
xchg
push
lea
std
pusha
pop
push
dec
popf
in
lods
jle
add
mov
mov
cmpsb
loop
in
cmp
sbb
and
or
cmc
and
pushf
fdivrp
fadds
xchg
inc
inc
pop
and
xor
add
or
adc
incw
in
cmp
jge
into
loopne
es
mov
mov
cmp
jno
es
pushf
push
loop
and
dec
fildll
pop
and
and
inc
mov
loop
xor
das
fwait
sti
mov
scas
mov
and
mov
jg
xchg
cmc
pop
adc
push
daa
insb
pop
notl
or
or
inc
add
setns
cmovle
ja
data16
ja
add
mov
scas
jl
dec
adc
fcoms
sbb
mov
stc
xchg
or
jle
inc
sbb
ss
add
or
pop
jge
dec
test
xchg
cwtl
mov
xor
dec
nop
jle
aaa
int
sbb
sbb
mov
out
rcrb
pushf
cmc
hlt
std
je
loope
push
lret
cld
shlb
add
cmp
sub
fistl
xor
push
lods
pop
add
pop
repz
stos
pop
popf
cli
add
addr16
lock
xchg
push
lret
xchg
fcomip
fildll
inc
sbb
adc
xchg
add
mov
cmp
fs
jbe
lea
das
mov
jge
fs
fimull
sbb
iret
mov
aaa
sti
rcll
jl
lea
movsb
sbb
aas
mov
repnz
sub
mov
adc
push
lods
insl
test
dec
jae
ss
xchg
jb
popa
and
mov
in
dec
push
cmc
rol
push
mov
outsl
jbe
pop
mov
das
and
push
mov
addr16
iret
fbld
xor
xchg
or
cltd
jno
cvtps2pi
pop
rep
push
push
jo
push
std
sbb
pop
or
aad
leave
inc
or
icebp
stos
mov
cmp
inc
sub
shrl
fwait
das
sub
xor
xlat
in
and
mov
sbb
or
dec
outsl
dec
pop
cmc
mov
inc
icebp
fdivs
mov
or
cs
and
add
push
maskmovq
notl
dec
mov
ret
inc
adc
sub
sub
leave
lcall
dec
adc
add
insb
outsl
lods
xor
push
mov
dec
data16
sub
ljmp
addr16
mov
aad
pop
iret
mov
cmp
xchg
insl
test
outsl
cmp
in
leave
in
sub
sub
shll
pop
out
fwait
lret
xchg
sbb
int
mov
sub
lods
cmpsl
pushl
outsb
add
daa
fidivrl
push
xchg
in
and
out
test
lahf
sahf
push
add
mov
push
in
push
outsl
test
nop
dec
arpl
push
gs
xor
xchg
sub
ja
xchg
pop
push
cld
out
pop
push
mov
mov
pop
bound
popf
inc
pop
or
js
mov
mov
push
add
xor
mov
mov
and
hlt
pop
push
sbb
jg
arpl
xchg
cli
andb
sbb
cmp
xor
jge
aad
enter
push
mov
in
jo
pop
xchg
add
outsl
push
mov
dec
nop
jmp
imul
cmc
adc
daa
ret
adc
out
loope
cld
and
push
mov
insb
mov
std
in
in
pop
mov
jp
and
adc
inc
ret
mov
lcall
out
adc
je
mov
cmp
dec
gs
jb
mov
mov
adc
push
cwtl
and
add
mov
xchg
jae
stos
jnp
or
imul
or
and
scas
ret
push
rolb
wbinvd
sarb
or
push
push
mov
in
push
cmpb
sbb
mov
movsl
or
push
jge
imul
outsl
add
lods
adc
add
mov
jae,pn
adc
adc
nop
push
cmpsl
mov
xchg
aam
mov
sub
jbe
push
lcall
inc
push
insb
stos
dec
cltd
cltd
lahf
stos
into
or
mov
fsubrl
iret
shrl
sti
js
mov
cld
mov
add
fstpt
fsubs
inc
lret
outsb
stc
adcb
aad
and
in
jg
xor
pop
add
or
cmp
in
sarb
fldcw
gs
and
test
mov
mov
js
adc
cld
push
popf
adc
mov
add
push
test
xchg
idiv
mov
xor
dec
lcall
xlat
lods
mov
mov
sbb
jo
test
pop
cmp
or
xor
insb
mov
cmp
gs
xor
xor
dec
jns
pop
ret
cmc
loopne
jecxz
or
adc
jne
mov
xchg
sub
repnz
js
sti
xlat
pop
add
or
mov
sbb
inc
mov
pop
add
scas
nop
jmp
lock
sbbb
mov
xor
daa
fiaddl
jge
and
push
insb
scas
dec
sti
or
aas
shll
and
aaa
mov
xor
loop
pop
adc
dec
push
test
iret
stos
adc
sub
adc
adc
sbb
jge
outsl
mov
mov
sbb
stos
stc
cwtl
cli
inc
push
cmp
cwtl
pop
push
pop
sbbb
lret
mov
cmp
push
aas
in
lods
mov
mov
in
mov
xchg
test
lcall
and
and
repz
in
adc
pop
insl
aaa
xchg
or
movsb
mov
fwait
mov
std
sbb
inc
jnp
cmp
es
adc
aas
sbb
xor
mov
imull
idivb
ljmp
lea
pop
adc
mov
adc
push
mov
movsl
in
std
rorb
or
adc
sarl
push
and
stos
dec
jl
inc
jp
out
out
sub
cmpsb
add
and
mov
mov
lret
jns
cmp
arpl
andb
add
mov
dec
or
mov
fcmovne
or
out
jne
xchg
call
or
mov
mov
cmp
pop
mov
push
ret
popf
sti
sub
jo
in
into
lock
ljmp
dec
xor
outsb
push
pop
in
stos
cli
pop
shrl
add
repnz
push
sbb
daa
lods
out
rcl
je
pop
mov
enter
and
cmc
mov
jl
sbb
push
mov
rcl
push
xchg
xchg
das
xchg
mov
jle
popf
xchg
add
scas
data16
fucomip
push
cmpsb
pop
stos
sahf
icebp
insl
cmp
jmp
clc
loop
out
xor
aas
inc
push
add
sti
aad
xorl
bound
dec
sarb
hlt
sbb
hlt
pop
das
lcall
mov
jge
std
pusha
std
sbb
leave
in
sub
dec
nop
xchg
fnstenv
das
pop
adc
cmp
cmp
and
call
push
in
rcrl
jmp
push
jl
push
movsb
popf
and
sbb
and
scas
cmpsb
sti
mov
adc
jbe
push
sbb
test
mov
dec
scas
mov
leave
mov
repz
mov
movsl
adc
aam
std
sub
dec
mov
subb
xchg
out
lret
test
mov
inc
pop
cmpl
out
jbe
mov
std
xor
xchg
mov
testb
push
shrl
inc
stos
sarl
mov
pop
in
mov
cmp
mov
jmp
fwait
lsl
dec
fstl
test
jge
xchg
push
mov
jb
cwtl
mov
sub
dec
test
in
sbb
fiadds
adc
in
sarb
xchg
ljmp
mov
gs
inc
in
and
cmp
ret
test
mov
or
add
xchg
mov
je
jbe
nop
adc
add
push
scas
cmpb
sbb
outsl
sbb
outsl
lret
out
orb
aad
pop
test
data16
aas
test
outsl
loopne
mov
sbbl
cs
das
fisubrl
insb
push
xchg
sub
out
lahf
popf
pop
leave
data16
ret
ja
sub
mov
clc
call
pop
fldcw
sub
dec
sub
fidivs
iret
xor
push
lcall
jl
pop
jp
mov
divb
out
testl
and
jae
test
sahf
add
mov
inc
stos
inc
jge
sbb
sbb
sub
push
xor
orb
cmp
test
jno
fwait
fwait
inc
pop
inc
inc
push
test
cltd
cmc
stos
cmpsl
outsl
and
jnp
call
mov
js
pop
stc
xor
loopne
xor
lea
aas
in
jmp
cli
lcall
mov
push
mov
lret
jbe
fisubrl
mov
adc
rol
pushf
fs
sbbl
sub
cmp
or
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
mov
cmp
or
sbb
jmp
and
xor
pusha
cltd
jo
cmpb
mov
cmp
or
sbb
jmp
and
xor
inc
mov
je
test
jg
pop
mov
sarb
mov
cltd
xor
add
mov
fmulp
xor
jbe
andnpd
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
push
push
divb
mov
nop
add
pop
add
add
push
add
add
add
add
add
add
add
mov
inc
add
add
mov
add
data16
add
jo
sub
jmp
add
add
add
add
add
add
add
add
add
and
add
push
jle
and
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
mov
in
iret
add
add
add
add
add
adc
mov
xchg
add
add
add
add
add
add
pop
add
call
add
add
add
add
add
add
add
lods
add
add
add
add
adc
adc
pop
add
add
add
and
sbb
mov
movb
add
data16
add
add
jl
or
imul
add
add
sbb
outsl
add
add
in
ja
jmp
add
adc
outsl
add
mov
add
add
add
add
add
mov
add
add
add
inc
add
cmp
add
push
in
mov
and
dec
add
add
add
inc
add
add
add
add
add
add
add
add
add
or
inc
add
add
add
mov
test
rolb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
xchg
add
adc
mov
add
add
push
int3
add
mov
add
jle
cs
add
add
add
add
arpl
mov
add
add
add
pop
add
add
add
addb
add
add
jle
and
add
add
add
add
and
inc
add
scas
add
mov
add
add
push
add
sub
mov
adc
push
add
add
add
add
mov
insb
add
and
add
inc
add
add
int3
add
add
add
add
sbb
outsl
add
mov
add
add
add
add
jge
sbb
add
mov
ja
sbb
jno
addb
push
mov
add
add
add
add
addb
add
lahf
add
add
add
add
and
add
add
add
into
add
push
add
add
add
movsb
add
add
push
add
add
and
test
pushf
add
add
add
add
mov
push
enter
pop
add
add
add
add
add
pop
add
add
adc
cmpsb
add
mov
enter
lret
add
add
add
add
add
add
pop
add
add
pop
add
pop
add
outsl
add
add
add
add
add
pop
out
std
into
jnp
mov
mov
sbb
aad
or
mov
mov
lahf
fstps
rolb
in
pop
mov
dec
rcl
fs
xchg
cmc
imul
inc
mov
mov
mov
das
xchg
sub
imul
inc
fsubrs
pop
mov
sahf
jmp
xchg
cltd
cli
push
sahf
mov
cmpsl
shlb
adc
adcb
cmpsl
enter
in
loope
popa
in
xchg
adcl
test
xchg
jmp
push
roll
inc
pushf
testl
mov
xor
stos
je
push
xchg
push
mov
push
adc
pop
int3
push
mov
adc
push
ljmp
xor
sbb
cmc
jb
stos
jne
cmp
add
add
jnp
pop
movsl
sbb
outsl
sbbl
mov
mov
mov
je
lock
lock
dec
lret
shr
pusha
outsb
test
test
cltd
lods
sbb
or
fildl
jmp
xchg
mov
pop
pushf
shlb
cmp
subb
popa
mov
test
xchg
cli
out
push
cmp
jbe
clc
pop
sbb
and
imul
nop
pushf
lcall
jne
add
imul
xor
xor
je
ljmp
adc
dec
dec
cld
add
pusha
lea
movsb
outsl
repz
add
pop
int3
mov
dec
outsl
test
cs
or
popf
adc
xor
pop
movsb
nop
stc
xor
add
lds
pop
stc
and
mov
mov
push
cwtl
loopne
inc
insl
xchg
inc
xchg
push
enter
and
hlt
mov
push
mov
mov
loop
fs
jo
lods
ljmp
sbb
jecxz
cmp
arpl
push
cwtl
insl
sbb
cmp
lea
out
mov
push
decb
xchg
xor
dec
mov
loop
xor
xchg
roll
mov
scas
mov
ljmp
lret
mov
adc
xchg
sub
fdivrl
and
or
push
inc
in
jg
jle
and
dec
jl
sbb
scas
mov
cmpl
mov
fists
mov
inc
divb
insb
scas
aad
and
popf
push
das
nop
rolb
movsb
or
sub
and
int3
add
xchg
inc
ret
pop
xor
and
daa
cmc
mov
push
repnz
xor
test
ss
loope
js
sub
and
push
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
