adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
lods
in
mov
mov
mov
or
sub
aam
or
lods
jmp
popf
fldln2
test
fnsave
jns
sbb
cmp
pop
sbb
push
popf
scas
in
cltd
std
icebp
int
jle
xor
add
jnp
jge
lods
mov
mov
inc
or
pop
out
loop
xchg
or
out
insl
xor
es
mov
sub
xchg
adc
xchg
cmp
dec
andb
inc
nop
adc
inc
mov
xor
sub
dec
ja
int
hlt
lds
fstpl
stc
sti
int
fldln2
mov
mov
sub
mov
pop
xchg
cmp
mov
negb
push
aas
leave
add
xor
es
lcall
cmp
test
jg
lods
pop
dec
xchg
push
push
test
lret
or
stc
push
cwtl
jge
push
sub
lahf
pop
xor
jl
dec
in
jae
gs
fldln2
test
fisttpll
sub
dec
sbb
xlat
dec
adc
jmp
aam
call
or
aam
cld
pushf
fisubrs
or
jno
or
push
or
jo
scas
iret
mov
stos
sti
xchg
jmp
loopne
stos
dec
or
or
sbb
or
cmp
insb
pop
push
lcall
in
in
mov
sub
dec
sbb
cmp
pop
sbb
leave
popf
fldln2
test
fstpl
or
sub
dec
or
lods
jmp
mov
mov
and
cmpsb
inc
es
add
iret
int3
orb
xchg
xor
data16
imull
jae
push
daa
xchg
enter
jg
dec
push
js
fsts
adc
xor
or
sbb
iret
and
ret
cmpsl
cmpsl
add
scas
xchg
jo
push
sub
lea
inc
xchg
sub
shrl
jge
loopne
xchg
lcall
aaa
ret
jecxz
adc
outsl
insl
push
inc
out
stos
mov
mov
inc
sub
mov
mov
add
movsl
xchg
inc
xchg
stos
xor
enter
jecxz
cmpsl
jmp
jbe
xchg
imul
loopne
adcl
enter
jnp
movl
add
push
lods
lea
cs
jnp
adc
pop
sbb
sub
push
lret
mov
mov
aas
mov
ljmp
out
cmp
pop
xchg
std
mov
jge
fldenv
mov
jecxz
jne
fiaddl
push
add
dec
adc
cmp
xchg
or
cld
cmp
aas
xorb
movb
fdivl
mov
lea
mov
sub
pop
rorb
neg
filds
dec
mov
ss
cmp
mov
push
pop
fs
movzwl
mov
outsl
clc
scas
imul
ljmp
jbe
and
mov
push
ljmp
mov
pop
inc
pop
int
jnp
call
pop
or
popa
push
outsl
sahf
jl
jl
push
pop
stos
sub
adcb
lret
jl
and
push
popf
fiaddl
std
xchg
dec
jae
or
jle
fisubs
test
jnp
decl
jl
sbb
fs
fwait
lahf
xchg
add
ret
xchg
xor
sbb
sbb
xchg
jecxz
and
add
loopne
sub
sti
daa
and
pop
and
dec
lods
dec
mov
je
loopne
in
ljmp
out
or
inc
push
scas
mov
mov
cvtps2pd
movsl
cmpps
mov
xchg
sub
mov
lahf
arpl
inc
lods
sub
sarl
xor
pop
out
mov
mov
sub
push
les
popf
cld
incl
into
outsb
imul
xchg
add
xchg
inc
inc
adc
mov
jp
dec
push
rcrl
push
push
jmp
sbb
std
sbb
xlat
int
sbb
jns
cli
xchg
enter
andb
shrb
loop
in
jb
push
decb
add
push
fldt
jae
sub
inc
stc
pop
mov
cs
in
ret
fxch
pop
arpl
sbb
inc
xor
fidivl
sbb
fnsave
lahf
sub
das
push
xor
mov
lea
cmp
ds
mov
xchg
xchg
stos
call
xchg
pop
pop
fmul
add
xchg
nop
shr
repz
push
pop
push
or
mov
call
scas
mov
ljmp
int3
loope
jp
mov
or
jne
push
jmp
mov
and
push
daa
inc
jae
mov
adc
mov
xlat
in
popa
lcall
mov
in
mov
mov
mov
adcb
jo
movsb
cmp
add
sub
daa
xor
or
pop
xchg
les
xchg
retw
sub
arpl
mov
mov
dec
mov
cltd
pop
mov
add
clc
ds
inc
fs
subl
mov
cmp
add
lock
andb
inc
push
xchg
ss
shlb
pop
xchg
add
js
mov
cmova
mov
push
and
mov
into
pop
jecxz
sbb
pop
and
movsb
sbb
addb
mov
push
or
pop
cli
adc
fldl
ljmp
xchg
jl
push
aad
mov
scas
fiaddl
inc
pop
xor
fistps
shll
push
xchg
shrl
lret
jmp
das
push
data16
inc
add
mov
adc
dec
gs
aam
push
mov
add
fldenv
sub
data16
sub
push
cmp
out
in
jo
adc
hlt
jbe
add
pop
inc
mov
add
push
orl
xchg
or
outsb
enter
xor
test
pop
xor
cmp
inc
inc
orl
xor
sub
addl
pushf
mov
test
sub
push
add
cmp
mov
sbb
orb
xor
jp
loopne
xor
mov
jle
mov
mov
stos
jg
les
sti
xchg
ret
jo
dec
pop
leave
sub
test
loopne
minps
jne
dec
push
or
mov
sub
fldcw
scas
mov
xor
cmp
pop
inc
sbb
mov
mov
sub
or
imul
adc
mov
loope
inc
js
mov
push
mov
xchg
xchg
ljmp
shl
imull
adc
test
xor
cmp
stc
cmp
pop
scas
pop
gs
mov
mov
repz
mov
pop
in
dec
cli
das
or
lock
xchg
movb
mov
lock
jb
jne
jge
push
int3
ja
out
or
add
stos
cmc
or
adc
sbb
shll
lahf
push
or
sahf
cs
or
sub
ss
insb
clc
mov
in
ret
xlat
dec
popa
and
out
out
pop
fsubrl
cltd
sbb
push
inc
inc
bts
std
mov
mov
int3
imul
cli
sbb
xchg
out
sbb
xor
xchg
mov
jno
cld
int
test
mov
fdivr
inc
ds
jge
sub
push
clc
loop
scas
ds
push
iret
mov
mov
xor
cmp
sub
lahf
push
push
mov
in
and
or
lods
dec
test
test
adc
ss
pop
jno
nop
movsl
sub
xchg
mov
pop
cmpsb
out
bound
dec
test
inc
mov
shl
out
xchg
js
lods
insb
cmp
xchg
sti
test
mov
adc
dec
xchg
movsb
cmc
or
lcall
xchg
jg
fwait
pop
xchg
mov
pop
mov
dec
mov
push
sub
repz
iret
pop
movsl
mov
out
std
cmp
xor
out
xor
ds
sbb
in
lds
dec
sub
je
int3
out
in
sub
shlb
push
xchg
and
lcall
int
pop
testb
inc
outsl
mov
popf
mov
call
dec
add
add
shrb
and
add
xor
in
out
inc
sub
js
sub
mov
mov
push
nop
in
pop
jbe
cmp
jp
in
cwtl
mov
cmp
fiadds
outsl
fists
lret
add
in
cmp
cmp
das
push
push
jp
rcl
add
shrb
dec
adc
pop
mov
loopne
push
sbb
jmp
stc
cmpl
imul
mov
xchg
bound
add
lods
lahf
sub
push
xchg
cmp
sbb
ret
test
mov
sub
pop
push
xchg
out
add
scas
int3
jno
imul
lahf
jne
lds
cmc
inc
sub
cltd
sbb
fs
dec
test
out
xor
addr16
aas
jno
push
fidivrl
cmc
lcall
xor
lods
jne
in
add
push
std
jnp
mov
push
lods
cmp
mov
or
jb
xchg
sub
out
bound
pop
data16
pop
fdivrs
and
enter
and
cmp
jnp
outsb
and
popf
subb
leave
fcoml
popf
nop
insb
imulb
stos
sub
testl
in
xor
aas
xor
popa
gs
dec
add
push
mov
cmp
dec
mov
and
aam
cmp
aam
xor
nop
and
jmp
or
lcall
test
xor
std
mov
clc
mov
dec
inc
lret
cld
fsubs
add
dec
nop
imul
js
mov
inc
mov
popa
enter
jg
push
cs
xor
shl
mov
mov
jl
mov
test
inc
sub
popf
add
sub
notb
movsl
sbb
sub
push
fwait
inc
mov
inc
stos
xchg
and
fs
xchg
data16
mov
divl
pop
rcrl
popf
sbb
sbb
lds
xchg
push
pop
adc
cld
adc
add
jp
mov
movsl
mov
leave
imul
imul
xor
dec
aas
dec
cli
ss
and
aad
or
jge
fsubs
xor
dec
mov
cwtl
dec
xlat
addr16
test
sub
jno
mov
pusha
mov
dec
int
das
fwait
cwtl
add
adc
movsb
fadds
jo
or
jne
push
jmp
test
je
scas
xchg
fdivl
cmp
pop
mov
pop
ja
jp
mov
int3
push
cli
and
pop
cmc
test
test
mov
cmp
stos
add
adc
cmp
ja
movsl
adc
les
jno
or
cmpsl
mov
or
sahf
add
mov
or
stos
pushf
es
xor
or
shr
int
adc
rcll
shl
fldln2
pop
fists
popa
xor
adc
mov
les
adc
inc
inc
scas
inc
std
mov
cmc
mov
lahf
shrb
pop
sbb
sbb
mov
arpl
repz
loopne
sahf
int3
add
sbb
repnz
sbb
xchg
push
out
cli
mov
pop
mov
cmpsl
mov
or
push
xchg
add
arpl
out
test
dec
out
pusha
sbb
or
add
cli
cmpsb
mov
loopne
ret
add
jns
adc
test
mov
inc
nop
scas
movsl
shlb
loop
adc
push
std
mov
ret
dec
inc
jle
push
rcrb
stc
mov
xchg
xor
aad
and
cmpsl
adc
fbstp
push
outsb
pop
mov
jmp
push
jbe
adcb
cs
js
cmc
cmpsb
add
jns
daa
stos
imul
cmp
popf
mov
ficompl
loope
mov
jecxz
jl
sub
imul
aaa
xchg
fldcw
imul
mov
xor
pop
xor
add
push
enter
idiv
in
add
xchg
clc
stc
dec
push
inc
xor
call
xchg
lods
loope
cmp
xchg
fstl
and
stos
fwait
lret
jb
inc
pushf
int
jle
in
sub
orl
sti
jg
and
into
jno
popl
hlt
xor
in
loope
and
or
fiadds
out
cmp
sub
xchg
mov
sahf
aas
aam
adc
sbb
mov
iret
mov
fwait
stos
pushf
xor
inc
in
aad
pop
mov
and
jb
mov
lods
push
in
pop
mov
rcll
cmp
cmp
lahf
sub
stos
mov
cwtl
push
dec
jo
jb
dec
mov
iret
adc
xchg
jae
stos
sub
in
xchg
xchg
insl
add
mov
jp
ljmp
sub
rclb
mov
test
data16
jne
xor
lcall
push
push
mov
in
leave
lret
mov
and
pop
push
push
movsl
add
push
or
xchg
mov
or
loopne
jg
cmc
inc
nop
push
pop
movsl
outsb
jnp
add
pop
push
mov
mov
inc
cli
jmp
mov
btr
test
pop
movsb
pop
sti
jecxz
outsb
lahf
push
xor
and
sbb
loopne
rdmsr
xchg
jmp
cmpsl
pop
adc
mov
shlb
orl
inc
jp
xchg
adc
icebp
and
cli
xchg
es
filds
icebp
ror
icebp
pop
or
dec
or
stos
pop
push
xor
xor
stos
filds
cmp
test
push
out
xchg
pop
into
lcall
insl
pop
sbb
jl
pop
jmp
push
pusha
xchg
roll
add
mov
jno
sti
mov
push
aaa
add
jne
mov
pmulhw
mov
dec
lds
xor
add
and
fs
fcmovnu
xor
idivl
sub
cli
pop
pop
stos
test
adcb
or
daa
in
mov
jae
das
pop
fbstp
dec
in
add
lret
xlat
pop
push
inc
iret
popa
fcoms
lock
loopne
push
sarl
pop
aam
add
inc
pop
pop
inc
icebp
int
jb
and
inc
xor
push
lret
sti
fcom
sbb
sbb
aaa
mov
jmp
mov
dec
fdivl
lock
adc
or
inc
mov
pop
sbb
lcall
mov
mov
pop
sti
fsubl
mov
adc
les
cmp
adc
pop
mov
test
daa
xor
movl
idivb
scas
in
rcrl
adc
push
push
jnp
cld
imul
mov
out
mov
xchg
inc
adc
inc
cld
adc
loopne
scas
lret
and
sahf
jp
push
dec
push
roll
lea
ljmp
lods
fcomp
stc
inc
sub
mov
shlb
add
pop
lret
cmpsb
pop
push
jo
adc
mov
mov
xor
sahf
push
mov
ret
les
add
push
mov
mov
nop
xchg
jns
lret
jne
sahf
sbb
mov
xchg
push
mov
xor
xchg
and
sbb
aaa
data16
aas
ljmp
addb
jmp
imul
andb
sbb
fcomps
std
aas
repz
outsl
pop
mov
out
mov
jle
pop
mov
mov
enter
sub
and
cmpsb
and
or
and
mov
sti
or
jo
iret
dec
inc
sbb
xchg
lock
fists
push
fucompp
fwait
sbb
mov
xorb
xor
adc
cmp
push
jl
xchg
mov
mov
jo
jge
xor
mov
mov
mov
push
and
pop
push
dec
insb
push
lret
mov
cmp
adc
scas
adc
pop
cmp
decl
mov
lea
test
lock
lahf
sub
mov
lret
or
lock
xchg
sub
mov
fcomip
lods
mov
mov
and
jnp
push
and
cmp
adc
dec
scas
pop
adc
mov
jecxz
std
fimuls
stos
xlat
fldt
xchg
adc
iret
lret
sbb
or
adcb
jg
test
push
push
pop
fs
dec
dec
inc
mov
mov
adc
in
sub
in
adc
not
dec
fdivrp
ja
js
sub
xchg
mov
test
or
pop
es
add
xor
gs
or
ja
sbb
mov
inc
scas
ja
ljmp
push
jb
mov
out
adc
aam
push
sub
clc
xchg
pop
mov
mov
push
std
dec
jp
mov
xchg
fs
jl
ficoml
mov
mov
mov
adc
xlat
adc
jg
push
imul
jg
mov
pop
ret
stos
mov
push
daa
js
cmpsl
sbb
cltd
jo
mov
sbb
ficoml
mov
pop
adcb
xlat
lods
mov
mov
movsb
int
xor
mov
push
mov
adc
and
sub
leave
inc
pop
dec
ret
arpl
test
rcrl
sub
arpl
stos
ss
std
add
mov
pop
jae
and
mov
aad
mov
push
jns
inc
jo
sub
lods
stos
cld
in
das
or
mov
bound
fcomp
inc
or
push
hlt
imulb
sarl
mov
sahf
mov
and
sbb
lock
dec
aaa
jb
adc
je
jnp
jg
and
cmpsl
and
add
pop
ret
sbb
mov
cmpsb
mov
or
pop
jo
out
nop
aas
add
dec
lret
sti
repnz
scas
or
pop
lock
xchg
scas
lds
loope
stc
jge
and
pusha
dec
aad
pop
lods
sbb
xchg
pushf
push
jmp
fcmovnbe
push
ljmp
push
sahf
nop
pop
adc
lea
adc
data16
or
sub
repnz
lret
sbb
imul
rcrl
push
data16
bound
add
lea
mov
xchg
in
push
jg
test
jno
push
inc
hlt
hlt
hlt
mov
insb
into
inc
cmp
cmp
xchg
loope
outsb
xchg
or
fidivrl
pop
xlat
push
repnz
jnp
outsl
mov
adc
cwtl
cs
xor
mov
inc
loopw
movsl
pop
push
dec
lock
and
sub
ss
sbbl
cs
mov
jae
jne
push
cmp
cmp
cs
dec
add
mov
call
lock
test
icebp
push
and
pop
movsb
in
nop
ret
icebp
bound
jb
movsb
fcomps
loop
fnstcw
out
pop
jbe
sbb
pop
es
pop
cmp
ss
jmp
sbb
pop
fiaddl
mov
repnz
or
jmp
ja
xor
outsw
push
sbb
ljmp
fcompl
mov
int
cmp
pop
sahf
lods
insb
mov
rep
fists
aad
jnp
gs
int
lcall
loopne
sti
inc
and
shrb
ljmp
fucom
stos
fstps
sbb
fsubrl
push
mov
add
filds
cld
decl
data16
push
mov
fcompl
mov
or
push
ljmp
xchg
jbe
sub
test
test
rcl
pop
in
icebp
or
mov
mov
sbb
push
mov
in
iret
inc
sarl
adc
or
sub
pop
mov
lds
xchg
xor
xchg
mov
xor
inc
mov
cmp
les
outsl
push
sbb
jl
xor
lea
test
and
test
xor
xchg
in
sbb
jo
les
push
outsb
sub
or
add
testl
stc
push
aas
and
les
adcl
lock
imul
inc
mov
jmp
push
fs
movsl
cld
aad
popf
push
dec
outsl
ljmp
pop
cmp
jo
je
xchg
aaa
std
ja
xchg
xor
inc
mov
sti
mov
xor
sub
xor
and
push
dec
jnp
sbb
popf
jbe
sarb
and
lret
call
or
add
imul
mov
cmp
popl
movsb
fst
cmp
xlat
inc
iret
lahf
lea
add
lret
mov
test
stos
aaa
add
cmp
in
cmp
mov
lods
loop
ret
je
inc
loopne
inc
cmpsl
push
pusha
test
mov
sub
mov
call
mov
add
xor
lock
cmpsb
loop
pop
test
sti
xchg
mov
cld
int
in
test
mov
in
jae
fwait
push
jo
inc
jbe
addr16
xchg
mov
movsl
pop
mov
jmp
outsb
mov
shl
mov
push
shlb
mov
push
inc
rorb
mov
push
fiadds
lahf
call
test
mov
xchg
pop
or
mov
jl
xchg
pop
xor
cmp
adc
dec
sub
lods
out
add
in
or
out
fs
xlat
mov
mov
aad
je
les
test
movl
in
lret
fnsave
lods
and
add
push
pop
pop
mov
sbb
int3
stos
lret
popf
out
cli
cli
filds
repnz
cmpsl
loop
cmp
and
scas
jl
rorl
leave
call
mov
xchg
sbb
push
xor
push
xor
mov
push
js
dec
pop
xchg
sbb
inc
scas
xor
jns
xor
push
and
into
aam
xor
sub
out
pushf
dec
sbbl
imul
pop
aam
stc
fsubl
mov
xchg
xchg
jo
jge
mov
inc
mov
fcomp
mov
pop
cmp
repz
shlb
ljmp
movsl
pushf
scas
test
mov
mov
sub
dec
aaa
ljmp
leave
fisubrs
push
js
in
push
insl
cmp
add
sbb
shrl
stc
nop
pop
test
jb
push
out
push
fadds
addr16
cmp
xlat
lret
movsl
mov
ret
adc
loop
xor
xor
pop
test
addb
push
xchg
ds
push
or
stc
mov
popf
fldln2
test
fstpl
or
sub
dec
or
lods
jmp
popf
fldln2
test
fstpl
or
sub
dec
or
lods
in
mov
fucomp
test
fstpl
or
sub
pop
std
lods
or
popf
cltd
in
test
fstpl
xchg
cmp
sbb
inc
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
and
xor
add
adc
imul
int
rcrb
jae
arpl
xor
arpl
adc
add
repz
add
adc
bound
push
andl
xchg
inc
loop
repz
adc
add
repz
add
adc
bound
push
andl
testl
jbe
add
push
xchg
add
and
pusha
push
cltd
mov
adc
xor
sti
sub
int
std
ret
bound
pop
mov
into
aas
add
inc
mov
repnz
adc
xor
aaa
in
sub
mov
popf
xchg
push
pop
and
jns
inc
in
rolb
and
xlat
or
push
rcll
aas
jbe
lods
insl
mov
cmp
pop
and
mov
xchg
push
pop
mov
ss
jo
sti
jb
cmp
jbe
sbb
shr
mov
js
mov
in
divl
push
clc
inc
push
int3
mov
add
repz
add
adc
bound
push
andl
xchg
inc
loop
repnz
adc
inc
inc
sahf
push
xor
test
fcompl
repz
xlat
or
cmp
mov
cmpsl
xchg
mov
test
pop
cmp
shlb
aad
incl
xchg
dec
stos
mov
mov
ja
daa
fbstp
inc
xchg
push
andl
xchg
inc
loop
repnz
adc
add
repz
add
adc
bound
push
andl
xchg
inc
loop
repnz
adc
add
repz
negb
jbe
mov
int
adc
cmpsl
mov
sbb
arpl
add
popf
inc
cmp
xor
inc
or
jmp
cmpsb
pop
test
addr16
fstps
popf
fs
or
out
jle
orb
adc
inc
mov
xlat
ja
sub
jle
ficoml
aam
ss
cli
cmpsl
lret
cmp
dec
xor
push
addl
enter
iret
rcrb
icebp
xlat
sbb
ljmp
int3
shlb
jno
mov
jmp
into
ret
out
dec
in
lea
pop
cwtl
adc
inc
jg
push
push
iret
lock
ljmp
fldcw
mov
mov
xor
cwtl
rcll
frstor
mov
mov
mov
dec
insl
sbb
cld
mov
push
jae
popf
inc
adc
push
dec
sarl
rolb
push
lcall
or
test
xor
aad
sti
adc
jp
loope
inc
lahf
xchg
cmp
pop
add
cmpsb
enter
mov
arpl
xchg
sti
push
call
and
fst
pop
jb
mov
xchg
sbb
mov
xor
and
sbb
sti
xchg
mov
scas
jne
mov
mov
fcoms
call
pop
cmc
ljmp
add
dec
cmpsl
jmp
sbb
mov
add
pop
les
les
cmpb
mov
cmpb
outsb
pusha
push
repnz
cmpsb
fs
xlat
std
xor
push
icebp
scas
stc
sub
into
inc
pinsrw
jns
pop
ds
insb
jns
ds
aam
mov
adc
cmp
sbb
call
ds
movsb
and
inc
push
jge
data16
push
cltd
insl
adc
push
lea
rolb
sbb
add
insb
mov
fbstp
mov
cld
mov
enter
mov
sbb
cld
or
cmpsl
jbe
mov
jb
cltd
xor
mov
dec
inc
sbb
pop
pop
and
test
outsl
loop
stos
test
icebp
inc
call
pop
cs
or
mov
aad
ret
and
sub
add
xor
inc
mov
xor
jl
je
lret
mov
test
into
jbe
test
add
fisubrl
pop
cmp
or
aas
in
xor
xlat
dec
dec
ljmp
shrb
lock
bound
xor
test
cwtl
xchg
mov
loop
mov
addl
in
mov
iret
push
jle
push
cmp
pop
push
imul
push
mov
daa
jne
in
mov
scas
push
push
sub
stos
sub
sbb
stos
pop
push
pop
adc
sbb
pop
sahf
fisubs
mov
mov
cbtw
dec
xchg
outsb
loope
push
jno
sar
and
jns
adc
cmpsb
inc
cmp
xchg
sbbl
mov
push
add
cmp
scas
rolb
loop
mov
add
pushf
pop
ss
ret
mov
pop
push
and
cmp
jae
divl
sub
jl
test
icebp
adc
hlt
bound
pop
hlt
push
jae
mov
sbb
shll
icebp
add
arpl
aaa
mov
jge
adc
mov
push
xor
push
daa
fbld
scas
fwait
cs
xchg
les
push
enter
jb
loope
dec
dec
gs
or
ja
and
pop
push
out
push
add
cld
pop
dec
ret
fcmovne
ljmp
and
push
fs
sub
and
dec
mov
pop
and
add
cmpsl
mov
pop
lods
xlat
notb
shr
loope
xchg
and
gs
add
xor
out
int3
mov
inc
cmpsl
ja
mov
mov
mov
xor
cmp
scas
jp
adc
jnp
or
sub
sbb
push
js
imul
pop
repnz
push
dec
fs
sub
xlat
push
cmp
outsb
pop
dec
cmc
mov
stc
add
add
popa
sbb
mov
jecxz
mov
icebp
sub
jmp
sti
call
inc
outsb
xor
and
lods
adc
jne
jbe
ror
mov
jecxz
sub
inc
daa
and
cmp
xchg
sti
adc
scas
and
jp
outsb
cld
popf
xchg
push
or
rcll
adc
cmpsl
jmp
adc
dec
sbb
hlt
adc
icebp
in
push
xchg
ror
mov
cmp
aam
fs
stos
inc
add
mov
jg
add
push
lds
aaa
inc
aas
pop
xor
push
xlat
test
xchg
and
rorl
dec
pop
sbb
push
data16
sbb
cmc
lods
fs
in
pop
jmp
push
adc
jbe
push
shlb
insl
int
xchg
and
movsl
lock
mov
or
data16
xchg
mov
jp
jnp
insl
pop
mov
and
or
ja
test
mov
std
fists
inc
cs
mov
sbb
cmp
les
sbb
fadd
xor
popa
jl
mov
cmpl
cmp
xor
xor
data16
mov
mov
sbb
leave
xchg
cltd
dec
push
xor
into
cmp
lret
jae
cmp
les
mov
adc
lea
jp
jo
sbb
movsb
jbe
dec
aaa
pop
ljmp
push
cs
movsl
lea
xlat
popl
sub
dec
mov
ret
out
dec
fidivrl
sub
and
or
shrl
inc
outsb
fwait
in
clc
mov
or
popf
addr16
dec
cmpxchg
nop
test
inc
mov
call
xor
cld
lods
mov
out
add
ror
stos
daa
push
fistpll
cmp
dec
ret
ljmp
mov
and
inc
dec
and
fimull
sti
jge
imul
shlb
adc
addr16
cmpsl
inc
stos
jecxz
cmp
pop
mov
inc
pushf
and
outsl
repz
loop
push
ffree
je
iret
cmpsl
js,pn
xor
and
ret
mov
icebp
popf
pop
push
mov
mov
mov
xor
or
gs
pop
inc
in
add
cmp
dec
dec
inc
cld
mov
push
mov
lret
push
mov
imul
push
dec
cmp
lret
mov
dec
mov
shlb
push
push
sbb
or
fmuls
inc
cld
pop
inc
adc
sub
add
daa
ljmp
test
imul
std
repz
push
xchg
add
inc
lock
add
add
inc
or
inc
lods
cmp
jl
cli
into
enter
push
nop
mov
mov
in
in
imul
sahf
clc
aaa
aam
stc
js
repz
pusha
adc
pop
pop
sbb
mov
popf
and
or
mov
mov
pop
icebp
lods
sbb
add
cmpsl
push
int3
movl
andb
xchg
inc
inc
cmp
add
es
or
push
addr16
dec
xor
push
push
dec
cli
aad
xor
mov
aam
fsubrl
xor
mov
mov
jbe
xchg
mov
ficompl
cwtl
sub
int3
add
cli
fisttpll
jp
adc
mov
pop
cmp
aad
movsl
ret
test
push
mov
add
aad
lods
in
daa
mov
ds
in
sub
shr
cmpsl
jno
or
sub
sbb
lods
leave
and
mov
jns
out
push
pop
adc
stc
call
push
push
jle
ret
in
jne
xchg
pop
sub
cmpl
imul
out
push
cltd
js
xor
add
mov
mov
xor
inc
mov
lock
sbb
add
inc
or
idivb
daa
cmp
inc
leave
out
orl
sub
std
or
test
ficompl
pushf
jnp
pop
mov
adc
ret
add
xor
add
sbb
lret
mov
xchg
ror
xchg
je
loope
cmpsl
mulb
add
idiv
ja
sbb
mov
outsl
dec
inc
out
cmpsb
outsb
test
xchg
push
add
mov
fwait
sbb
add
ss
pop
test
push
mov
push
fimull
les
or
loopne
jle
xorl
insb
dec
xor
popf
lcall
or
inc
lea
imull
mov
push
adc
sbb
stos
imul
jnp
mov
das
imul
sar
ficomps
aaa
mov
sbb
inc
dec
push
and
inc
sub
jne
test
xchg
fdivr
xor
scas
jecxz
test
js
or
jae
ret
loop
rcrl
mov
btr
sbb
ss
inc
rol
addr16
xchg
xchg
jge
cmpsl
push
mov
mov
or
loopne
push
test
cmpsb
idiv
mov
es
loop
adc
jmp
pop
dec
enter
scas
xchg
outsb
repnz
cs
fmulp
mov
fwait
pushf
and
into
sarb
ds
mov
jg
mov
int
cs
pusha
sbb
ficomps
mov
cmpsb
sbb
scas
cmpl
or
cmp
xor
repnz
xchg
aam
pusha
imul
mov
sub
outsb
jg
or
mov
mov
jmp
pop
sub
icebp
cltd
pop
sub
lds
daa
jbe
adc
dec
cmpsb
insl
addr16
pop
adc
ret
and
mov
cmpsl
jge
push
mov
or
push
fcmove
inc
popa
pop
mov
cmp
jmp
mov
mov
or
insb
jp
mov
inc
nop
dec
cmp
adc
fldenv
xlat
pop
sarl
enter
mov
insl
lods
sbb
xor
lds
push
pop
out
pop
jge
push
ja
jmp
xchg
mov
push
mov
mov
push
and
imul
iret
in
sti
ja
sahf
sub
lret
ljmp
and
and
movsl
sbbb
mov
pushf
xor
inc
sub
ficoms
cld
out
xchg
inc
dec
lods
sar
adc
or
daa
cmp
repz
cmp
mov
mov
mov
adc
fscale
mov
push
arpl
mov
imul
cmp
mov
push
pop
xor
and
enter
shll
sbb
icebp
mov
popa
xor
add
and
jne
pop
sbb
repz
jge
inc
add
dec
xchg
daa
mov
mov
imul
ret
jno
pusha
push
sahf
negl
inc
mov
pusha
push
push
ficoms
gs
fmull
sub
add
leave
fisubrl
pop
outsl
push
cmp
adc
xchg
inc
rcl
test
mov
fildl
es
lahf
aas
divb
imul
call
out
xlat
sub
aad
negl
pop
adc
mov
imul
roll
imul
outsl
cmpsb
insl
xchg
aaa
sub
mov
in
fisttpl
add
les
add
loope
popf
inc
rolb
aam
push
scas
cmp
pop
inc
pusha
fldt
add
out
jnp
jge
out
aaa
adc
shll
lods
lock
jl
repz
fidivrl
loope
jb
cmc
jne
add
pop
mov
jbe
sub
sbb
pop
jle
adc
xchg
xchg
cld
cltd
movsl
cmp
lret
sbb
fadd
push
add
fldl
clc
subl
jge
cmp
cmp
lock
jp
mov
fldenv
or
lds
mov
je
or
test
aas
aas
cmp
dec
pop
or
add
sub
outsb
stos
mov
aam
xchg
push
imul
xor
mov
sahf
js
xchg
cld
push
cmp
sub
xor
test
jmp
es
inc
jns
arpl
jb
push
andl
sahf
loope
das
pop
loop
lock
mov
lahf
mov
es
sar
pop
mov
mov
push
cmc
loopne
mov
pusha
subb
cmp
xchg
dec
xorl
stc
cmc
test
subb
int
push
fwait
loop
fs
mov
mov
mov
ficoml
push
pop
aas
filds
divl
dec
or
mov
aaa
inc
lret
stos
mov
lods
sbb
pushf
clc
mov
lods
lret
dec
xorl
sub
pop
mov
mov
sbb
dec
or
insl
xchg
cmp
xchg
push
cmp
stc
fsubl
in
gs
add
stc
aaa
cltd
xchg
pop
stos
cmp
dec
inc
loop
fimuls
jl
mov
in
shll
es
movb
rorl
add
test
test
jne
adcl
pushl
push
and
in
jmp
mov
xchg
adc
sbbl
sbb
repnz
lcall
xlat
into
aam
jbe
imul
in
das
gs
xor
fwait
data16
or
vmulss
cli
fucomip
out
nop
mov
pop
mov
in
jmp
ror
xchg
push
lret
cmp
pop
icebp
shlb
sub
or
jns
mov
lds
decl
lahf
xlat
xchg
adc
xor
jmp
mov
mov
or
mov
int
mul
mov
aas
sbb
lds
insb
sbb
sub
stos
cli
cltd
xchg
in
addr16
les
sbb
and
sbbl
jg
jg
inc
sbb
out
stos
dec
popa
sbb
mov
jge
xlat
xchg
aaa
loop
aam
in
lods
sbb
pop
pop
fwait
and
add
ljmp
call
insb
inc
dec
mov
mov
jp
mov
iret
cmp
mov
push
xor
sbb
adc
ja
stos
inc
dec
outsl
sti
add
mov
lds
push
xchg
das
shrl
push
or
sbb
push
or
mov
mov
mov
into
popa
mov
sbb
mov
or
cmp
push
push
pop
ja
cmpsb
mov
shll
dec
pushf
ficoml
jl
inc
les
push
test
iret
xchg
add
ds
mov
ret
adc
out
pop
xchg
sarb
subl
cmpsb
addb
lret
jo
mov
adc
mov
cmp
fdiv
lcall
or
int
sub
pop
imul
std
push
sbb
jae
sbb
pop
pop
imul
adc
pop
sar
and
sub
inc
in
cs
push
dec
dec
pop
ret
sbb
stos
rcll
adc
frstor
enter
or
shll
icebp
bound
jne
xor
pop
notb
and
mov
cmp
jle
mov
call
insb
leave
pop
loope
sbb
dec
push
mov
xchg
out
xor
sub
jns
cmpsb
stos
rclb
int
jns
jle
mov
fwait
mov
nop
xor
aaa
sub
rcrb
mov
jns
test
mov
pop
hlt
pop
xor
adc
cmp
pop
sub
xor
mov
push
shrb
popa
int
gs
and
ret
test
arpl
add
xchg
mov
stos
mov
cld
test
xchg
xor
xchg
pushf
add
mov
call
fidivrs
pushf
movsb
out
insb
sbb
mov
repnz
sbb
enter
jbe
dec
aaa
ja
inc
aad
xor
roll
shlb
cmp
mov
adc
cltd
aad
add
leave
mov
aad
pop
scas
jge
push
lods
jmp
inc
xor
sub
lea
cltd
mov
in
dec
loopne
iret
mov
andb
mov
cwtl
sti
bound
mov
subb
jg
jns
lds
loop
push
mov
std
xor
cld
stos
ficompl
mov
mov
lcall
in
mov
adc
aad
into
sub
push
rcrb
push
dec
lock
in
insl
outsb
pop
add
pop
sub
ljmp
add
mov
les
icebp
sub
mov
jns
stos
push
xorb
xor
mov
std
dec
shl
lea
rorl
test
hlt
leave
bound
sti
mov
and
fwait
std
sub
imull
xchg
sbb
xchg
movsb
xor
call
dec
lds
sbb
sub
fists
add
or
adc
sbb
pushf
leave
fmul
lock
sub
imul
add
push
pop
mov
les
lcall
daa
imul
ljmp
mov
sbb
mov
jbe
jg
sarl
aas
push
mov
jo
in
outsl
enter
mov
mov
inc
andl
and
jmp
jmp
dec
push
jmp
push
xchg
clc
loopne
jb
add
cmp
out
jge
pop
pop
jecxz
mov
test
inc
mov
push
push
jmp
push
int3
out
inc
xlat
xor
inc
xchg
jno
pop
fidivrs
sti
and
mov
mov
aad
and
xchg
popf
out
jmp
add
ljmp
push
cwtl
add
and
cmp
push
xchg
mov
mov
out
andb
jl
mov
cld
sub
jnp
push
pop
cwtl
sub
cld
or
jl
test
sar
mov
and
mov
inc
in
repz
cltd
mov
jne
andl
xlat
xchg
insl
aas
andl
call
push
jl
mov
mov
adc
leave
fadds
sub
or
test
aad
xorb
push
scas
xor
fwait
adc
mov
movsb
xor
and
adc
and
push
fs
jno
test
lahf
loop
jnp
dec
xchg
mov
pop
sub
fbstp
push
rep
movsb
stc
mov
push
jns
adc
rorb
cmp
into
pop
in
jae
mov
stc
push
jg
mov
or
or
and
lds
push
sbb
pop
les
xchg
or
push
shl
fistps
mov
adc
mov
loopne
aam
pop
imul
ret
mov
dec
movsl
cmp
mov
cli
mov
pop
dec
sub
cmpb
xor
out
adc
push
mov
jbe
out
incl
int3
outsb
ffreep
push
incb
cmp
xor
sub
scas
insb
idivb
imul
movsb
imul
push
cmp
aaa
out
cld
inc
add
mov
sbb
sbb
cld
js
notl
lods
test
mov
xchg
scas
data16
into
shl
lcall
gs
pop
xchg
pop
inc
pop
ret
stos
pop
cmpsl
repz
mov
lea
mov
push
lods
dec
icebp
dec
cmp
movl
rol
rcr
fistpll
movsl
jns
test
pop
pop
loope
xchg
cmp
mov
mov
sahf
and
lods
jns
aam
xor
rcrb
jle
cmp
fiadds
in
jns
inc
cmpl
mov
push
add
lods
dec
xorb
xor
cmc
lock
dec
cmp
xlat
push
mov
or
inc
sahf
pop
mov
cwtl
cmp
ja
mov
fildl
push
mov
cmp
mov
orb
mov
mov
mov
lret
aam
xchg
or
addr16
sub
cmp
jo
popa
dec
push
or
mov
dec
cmp
cmp
cmp
mov
jp
aad
cmpsb
aam
pop
jg
dec
clc
pop
cmp
and
test
push
pop
adc
mov
fisubrl
jns
test
sbb
jns
lock
ljmp
neg
ljmp
ret
test
or
push
push
xchg
mov
arpl
push
std
push
repnz
mov
aaa
adc
int3
push
jmp
sub
int3
or
out
daa
popf
add
xchg
je
and
sbb
cmp
xchg
dec
iret
xchg
sbb
mov
add
pop
mov
inc
adc
jecxz
orl
lret
shlb
jno
xor
push
jmp
lret
cmpsb
int
mov
sub
lods
es
shlb
adc
pusha
out
popa
cmpsl
mov
dec
jecxz
rclb
ret
bound
push
andl
xchg
inc
loop
repnz
adc
add
repz
add
adc
bound
push
andl
xchg
inc
loop
repnz
adc
add
divl
jecxz
rcll
ret
jae
inc
xchg
push
andl
xchg
inc
loop
repnz
adc
add
repz
add
adc
bound
sarb
dec
leave
sub
xor
mov
sub
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fists
pushw
mov
lahf
push
scas
pop
dec
out
imulb
pop
xchg
mov
fists
pushl
push
lahf
push
es
das
xchg
outsl
xchg
xchg
jge
das
inc
fists
pushw
push
lahf
push
es
dec
xchg
xchg
outsl
in
jmp
dec
fldcw
fists
sub
ss
frstor
stos
inc
rcl
jmp
fadds
test
aaa
cmp
dec
adc
sbb
mov
sub
jnp
imul
ret
xchg
imul
pushf
pop
lods
incl
mov
or
and
lret
inc
xor
pop
xor
push
test
and
sbbb
data16
lock
mov
xor
sahf
push
lcall
mov
scas
aad
repz
dec
mov
in
cltd
repz
out
fiadds
fmulp
lock
cmp
add
outsl
jnp
repnz
cs
push
iret
pushw
push
lahf
push
es
dec
out
imulb
pop
xchg
aas
mov
xor
cmp
popa
icebp
push
ljmp
pop
xchg
sub
jle
jl
cmp
adc
popf
arpl
jb
es
daa
mov
add
jl
negb
jg
xchg
js
add
lahf
push
es
dec
out
imulb
pop
xchg
aas
mov
inc
fists
pushw
push
lahf
push
es
dec
out
imulb
pop
xchg
aas
mov
inc
fists
jmp
and
jne
sbb
imul
out
stos
xchg
rorl
dec
adc
cmp
inc
cmp
mov
mov
push
lods
push
jns
push
inc
jne
scas
sti
ljmp
or
and
arpl
sbb
push
jae
push
cmp
pop
movsb
fsubl
or
aad
adc
in
idivb
sub
in
add
sub
pop
jp
cmpsl
mov
adc
loope
pusha
pop
jno
lea
inc
int
mov
xchg
in
or
or
add
jg
jnp
inc
push
addr16
inc
mov
lds
hlt
mov
pop
inc
and
shll
mov
js
xchg
sbb
loope
push
mov
pop
or
xor
test
ja
scas
xor
stos
adc
push
int
push
cmp
mov
dec
sbb
mov
xchg
outsl
loopne
ljmp
decb
stc
call
sub
sbb
or
arpl
ret
add
test
dec
inc
xor
cld
mov
mov
out
mov
dec
xor
dec
push
push
mov
jbe
jge
push
mov
and
jp
add
ja
sub
cltd
mov
add
sbb
sarl
shlb
mov
andb
mov
test
fcomi
dec
mov
sub
dec
inc
rcl
fdivrs
fists
pop
aaa
gs
ja
inc
int
cmc
loopw
rorl
adc
sub
and
frstor
rol
push
jl
popa
or
es
shlb
add
mov
popf
xchg
and
vpavgw
les
mov
push
rcrb
stos
sahf
jnp
scas
and
aaa
xchg
and
adc
imul
cmovp
scas
cmp
aas
jp
loopne
sahf
adcb
lock
inc
cmp
ds
mov
pop
inc
xor
or
xor
leave
out
sbb
aas
or
and
out
loopne
in
fidivrs
rdmsr
push
incl
ficoml
cmp
mov
add
mov
push
inc
into
mov
stc
lods
int
scas
or
loopne
dec
lcall
call
pop
mov
cmp
call
and
in
cld
xor
cmp
inc
cmp
jmp
or
aad
ja
addr16
out
jne
xchg
aas
jne
dec
xor
rclb
xchg
fdivs
mov
stc
sub
pop
lahf
idivb
leave
stos
fdivrs
xchg
mov
xchg
shll
jmp
aas
fs
loopne
rol
cmp
mov
cmp
movsl
and
dec
mov
mov
push
nop
cmp
xchg
mov
mov
imul
out
scas
dec
call
mov
and
mov
xor
fs
neg
mov
cltd
mov
push
popf
in
push
push
sar
ja
sbb
out
add
daa
pop
add
mov
xor
rorl
jnp
cmp
inc
ror
cmp
mov
or
int3
push
push
dec
xchg
aad
out
mov
fdivrs
xchg
mov
adc
push
jcxz
xor
ss
sbb
and
and
cmp
inc
insl
sub
xor
loop
xchg
adc
jl
and
add
and
cmp
xor
stc
dec
mov
jmp
push
adc
outsb
push
dec
xlat
ja
and
insl
aad
or
and
cmpsl
add
push
es
jb
cs
int
pop
arpl
mov
repnz
loop
jno
cltd
mov
in
push
xor
insl
cmp
lahf
aam
pop
mov
and
loopne
cmp
repnz
push
mov
jo
mov
jmp
adc
push
cmpsb
inc
mov
std
xor
sarb
paddusb
push
rolb
pushf
fwait
out
or
pop
xchg
inc
push
imul
mov
daa
bound
bound
leave
push
ror
cmp
inc
aaa
stos
data16
leave
mov
adc
push
das
adc
mov
ror
icebp
leave
rclb
mov
out
and
div
lds
cmc
cmc
push
push
pop
pop
adc
pusha
jb
insl
push
push
sbb
sbb
fiaddl
sub
jle
imull
pop
xchg
hlt
dec
out
ss
insl
pop
ja
push
jmp
adc
pop
jecxz
ficoml
xchg
negl
mov
xchg
adc
sti
mov
sub
cltd
jno
icebp
je
adc
aad
ja
xchg
test
sub
pop
stc
jns
mov
pop
orl
ficoml
jle
das
adc
jmp
push
loopne
mov
in
mov
cltd
push
shlb
scas
mov
sub
pop
pop
push
mov
jmp
pusha
cmp
loopne
shll
sbb
xor
sub
push
orl
cs
out
leave
loope
sti
pop
sub
loope
rorb
loopne
scas
ret
mov
or
ret
pop
xchg
icebp
sbb
lahf
cmp
adc
enter
imul
cwtl
fcompl
jmp
icebp
sbb
lock
push
or
mov
fs
jmp
jne
out
enter
push
jle
xchg
enter
sbb
fnsave
or
pop
sbb
cmp
push
and
jns
sti
sub
sub
xchg
sub
cmpsb
aad
sub
popa
and
pop
and
and
push
insb
mov
mov
clc
scas
push
jns
mov
xchg
arpl
mov
sub
cmp
xchg
lcall
dec
pop
jne
test
mov
xchg
mov
xlat
rorl
hlt
popf
std
imul
dec
jp
in
pop
int3
inc
adc
mov
xor
ds
std
sub
fldl
or
jg
dec
arpl
cmc
sub
rolb
mov
and
notb
pop
icebp
cmp
ret
pop
jb
pop
mov
add
and
xchg
dec
jmp
ret
jecxz
ja
xor
mov
inc
jmp
stos
pushf
push
add
pop
aaa
xor
sbb
fadds
sbb
push
push
popa
inc
rcrl
call
dec
outsl
int3
divb
xor
stc
lods
inc
mov
into
pop
sbb
inc
fs
adc
adc
test
int
xor
push
shl
sti
repz
popa
enter
adc
icebp
or
cmp
pop
mov
xchg
xchg
filds
das
push
dec
mov
mov
stos
lods
repz
jl
mov
lds
loopne
cmp
in
enter
lcall
cmpsb
dec
fs
shrb
and
aad
cmpsl
repz
iret
test
jmp
push
mov
jo
int3
int
fisttpl
or
xchg
fsubs
sub
cmp
out
jg
pop
lea
mov
ds
les
inc
mov
rclb
xor
and
and
sbb
adc
cmpsb
jl
insb
gs
mov
icebp
add
repnz
aaa
inc
inc
ja
xor
push
mul
sub
idivl
popf
sub
push
out
call
mov
jo
pop
out
lret
cmp
setp
pop
daa
cmpsb
in
bound
pop
xchg
mov
pop
xorb
insb
push
fiaddl
add
fdivrs
lods
or
cmpsl
xchg
or
test
les
pop
int
add
fwait
pop
inc
and
data16
mov
pushf
mov
adc
jae
mov
movsl
inc
inc
or
movsl
xchg
pop
decl
ret
lahf
sbb
pop
imul
inc
aad
pop
push
or
rcl
in
sbb
test
mov
movsl
into
addr16
loope
fwait
clc
cli
pop
insl
xor
mov
adc
leave
popf
sub
or
push
ret
adc
sub
and
repnz
cltd
cmpsl
jns
pop
call
mov
outsb
and
lcall
cmp
pusha
sahf
lahf
in
mov
pop
aas
jb
push
dec
pop
cmp
dec
push
aad
mov
jns
lret
popf
adc
push
out
jns
cltd
jb
fnstcw
sahf
cld
rcrl
in
pop
enter
negl
add
aas
push
lret
inc
mov
and
aad
jg
mov
loope
inc
aam
xchg
mov
inc
outsl
shrb
lods
jge
shr
or
jb
sahf
scas
xor
push
push
inc
lcall
outsl
mov
lea
push
aas
dec
pop
fisttpl
mull
repz
fs
mov
sarl
out
sbb
ss
lret
push
dec
insl
cld
jp,pt
xlat
adcl
jl
push
xchg
movsl
push
addr16
sub
fsubrs
and
repnz
sti
xchg
xchg
repnz
lret
xchg
int3
test
inc
test
jecxz
jl
arpl
scas
lods
enter
lea
enter
int
dec
cld
std
mov
inc
mov
mov
les
dec
sbb
lahf
out
dec
std
nop
scas
push
mov
pop
xor
repz
mov
sahf
push
shl
xor
loope
gs
aas
repz
push
cmpsl
mov
mov
push
lea
jp
xchg
mov
repnz
es
dec
mov
push
jecxz
or
int
adc
mov
sbb
incl
repz
insl
rcrb
scas
mov
xor
data16
cmp
fsubl
inc
push
xor
sbb
outsl
faddp
or
or
lret
ds
xchg
scas
cmp
into
push
dec
pop
mov
test
push
inc
cmp
test
add
sub
dec
cmp
sarb
xchg
ss
sub
idiv
jns
sub
pop
setg
mov
inc
push
inc
dec
cmc
mov
xor
mov
dec
xchg
rcrl
fmuls
leave
mov
pop
adc
or
mov
lcall
sbb
mov
push
pushf
scas
test
mov
push
je
jne
jae
mov
or
call
pop
loop
fldenv
lock
push
popf
and
int3
test
xchg
shll
sbb
das
xchg
jl
inc
mov
xor
icebp
push
pop
repz
fs
adc
xchg
mov
pop
xor
out
movsl
pop
or
mov
in
inc
movsb
sbb
lds
cmp
push
pop
jecxz
pop
and
scas
mov
mov
pop
clc
aad
sbb
pop
dec
inc
js
sbb
add
xchg
xchg
mov
mov
jmp
les
iret
sub
or
jp
cmpxchg
push
mov
pop
add
push
in
es
addr16
aaa
push
xor
push
jns
jp
outsb
ror
or
sbb
xlat
jns
dec
pushf
fiadds
cmpsl
ret
les
insl
idivl
jns
lcall
out
insl
test
xchg
stos
lock
lods
pushl
jne
insl
xchg
xchg
pop
pop
jne
inc
push
fsub
daa
inc
pop
outsl
cwtl
mov
into
jae
out
pop
pop
inc
gs
add
mov
sbb
lods
imul
enter
sbb
cmp
sub
or
mov
jo
ljmp
xchg
lret
cmp
jl
rclb
lods
and
cwtl
mov
fstpl
popf
jne
andb
cmp
scas
jecxz
ret
icebp
data16
aas
xor
fbld
pop
pop
pop
adc
adc
xchg
test
andb
dec
xchg
pop
xor
inc
sub
loop
out
jle
fnstsw
aas
xchg
test
fildll
dec
sub
cmp
mov
sub
mov
jnp
movsl
push
mov
push
daa
loope
mov
mov
je
mov
push
mov
dec
in
lods
fmuls
and
add
pushf
lods
clc
aas
pushf
inc
or
pop
insl
ret
sbb
dec
and
lods
mov
push
mov
sbb
mov
cltd
lahf
jae
repz
lahf
sbb
jl
dec
mov
sub
xor
add
inc
loope
ret
andl
je
xor
loope
or
inc
arpl
pop
mov
dec
lcall
lock
jns
dec
mov
mov
stos
ss
in
add
jle
push
inc
repnz
xchg
sub
sub
out
hlt
inc
lcallw
add
adc
cmpsl
lock
adc
and
enter
test
cmpsl
cs
ss
scas
mov
jg
add
lock
jl
inc
cmp
inc
lret
jmp
sarl
dec
int3
lcall
mov
loopne
gs
mov
sub
movsl
outsb
adc
mov
adc
shlb
push
lods
lea
cmp
inc
movsb
je
repz
out
loopne
mov
sub
mov
jmp
ss
bound
mov
jge
movsl
mov
dec
outsl
lock
cmp
lods
xor
in
xor
jp
sub
sub
cltd
das
adc
cmp
scas
mov
ljmp
sub
mov
jno
in
fbstp
stos
cltd
mov
das
mov
push
add
es
fistps
jo
inc
or
rorl
mov
pop
mov
lds
and
jo
add
jg
jle
fiaddl
cmp
insb
rolb
inc
arpl
inc
inc
scas
popa
pop
repnz
adc
pop
push
rol
cmp
cmp
ret
push
dec
nop
or
aad
dec
enter
inc
jbe
cwtl
pop
ljmp
dec
push
cltd
mov
sub
jbe
sbb
mov
xchg
addr16
sbb
out
in
push
add
dec
cmpsb
mov
inc
insl
rcrl
push
adc
push
pop
arpl
add
push
jnp
add
xlat
push
shll
nop
inc
popf
mov
int
sbb
dec
rcrl
mov
xrelease
inc
popa
sahf
lahf
dec
jge
push
insl
cmp
ss
mov
popa
mov
es
sbb
jle
inc
jne
out
pop
pop
push
fcoml
hlt
inc
adc
fisttpl
insb
hlt
int
mov
or
xchg
pop
out
jbe
out
sub
out
mov
aad
add
sub
in
test
and
xchg
pop
addr16
inc
je
insb
cltd
mov
pop
fbld
lods
sbb
imul
and
pop
push
andl
pop
aam
cmpb
sbb
jmp
jb
pop
and
adc
aaa
push
inc
dec
mov
push
inc
mov
das
sbb
jb
js
or
fildl
jp
inc
ds
inc
ret
clc
xchg
ret
lahf
shrb
ss
and
add
dec
cwtl
sbb
in
dec
adc
dec
ret
mov
cmpsb
pop
adc
mov
sub
xchg
fidivrl
popa
ja
pop
xor
inc
sbbb
and
pusha
xchg
fldt
add
iret
dec
sti
push
cli
sub
cmp
cli
stc
fs
push
aas
push
pushf
sar
fdivs
sti
mov
cmp
cld
das
dec
push
mov
enter
add
fs
lods
fisubrs
fistpl
and
sbbb
push
es
add
mov
addr16
leave
sbb
fcomip
fdivrl
mov
adc
xchg
sbb
or
cmc
fdivrp
mov
std
jmp
das
cmp
xlat
push
push
sub
push
xor
xor
bound
ds
and
cmpl
pop
sub
clc
mov
or
push
and
xlat
jecxz
lret
or
lahf
movsb
fucomi
push
push
bound
es
sbb
cmp
popa
or
outsl
and
mov
das
cwtl
cli
push
cmp
loop
lods
mov
cld
lods
stos
xchg
bound
push
mov
add
push
mov
adc
inc
sbb
sbb
lret
and
adc
cmp
in
fldenv
leave
cs
sub
sti
mull
sub
pop
or
loope
push
cltd
fcomps
pop
std
jmp
pop
inc
rolb
hlt
scas
jg
cs
inc
pop
cmp
mov
adc
pop
xchg
addr16
cltd
ficoms
add
ds
xor
out
push
aad
sub
cli
stos
mov
mov
add
push
push
data16
jmp
shll
xor
and
xor
pop
lret
sbb
jbe
push
jns
cld
xchg
dec
push
cmp
out
call
cld
aas
daa
lret
pushf
push
pop
cld
adc
jecxz
out
mov
or
dec
rclw
xchg
mov
test
jl
pop
or
xchg
mov
aam
sub
sub
jns
shl
movsl
popf
faddl
js
xor
jnp
jp
xor
cmc
dec
outsb
mov
mov
rcll
push
shrb
arpl
xchg
xor
fidivrl
dec
rorl
test
mov
and
mov
cmpsl
mov
cli
mov
repnz
ficomps
cmpsb
and
mov
jl
cmp
ret
popa
xchg
clc
jp
aam
mov
pop
push
decb
scas
frstor
pop
cs
xor
pop
fdiv
out
aas
test
add
dec
mov
fstps
cwtl
shr
or
push
in
xlat
ljmp
xchg
inc
mov
jg
cmp
push
cld
repnz
xchg
and
adc
popa
xlat
or
stos
js
inc
cmpsl
xor
xor
aam
ds
out
lret
fcompl
adcl
lret
jecxz
mov
xchg
ja
pop
pop
sub
jbe
pop
add
push
jae
or
lahf
cmp
xor
mov
shrl
repz
je
sbb
cmpsb
out
int3
test
in
movsb
lahf
fidivrs
mov
dec
rcr
js
pop
inc
decb
xor
dec
xchg
add
inc
test
adc
mov
scas
pop
mov
adc
js
push
sahf
fistpl
lret
and
pop
mov
nop
rcrl
xorb
lea
xor
mov
stos
clc
pop
imul
mov
inc
cmp
fcmovu
xor
imul
sub
int3
stos
cmp
scas
sahf
mov
mov
fcoml
negl
jmp
pop
pop
and
push
data16
mov
imul
scas
pop
adc
fstpt
xchg
jae
test
rol
int3
lock
mov
int
rol
dec
addr16
repnz
and
cmp
lock
xchg
test
add
jp
fimuls
add
pop
jo
stos
movsb
out
cmp
inc
dec
stc
and
rolb
fst
addr16
andl
adc
mov
std
cmp
inc
fwait
and
imul
les
jo
cmp
jge
push
out
pop
mov
and
or
inc
push
sbb
aad
xchg
sub
add
jno
xchg
push
imul
stc
push
test
cmp
xor
xchg
je
fiaddl
add
inc
loope
call
repz
ret
or
inc
fadd
mov
mov
js
mov
dec
test
mov
popf
adc
jo
sbb
jbe
inc
test
push
sbb
rcrb
jns
clc
ljmp
sub
sub
fwait
cmp
cs
or
dec
mov
lcall
cltd
xchg
outsl
push
fcmovnbe
sbb
sbb
dec
add
faddl
add
enter
stos
and
sahf
ljmp
in
imul
jno
lods
adc
int3
jns
mov
clc
add
es
ja
repz
sti
lds
rclb
inc
gs
add
or
xchg
ret
sbb
push
mov
decb
inc
mov
mov
addb
ret
lcall
imul
mov
add
loopne
mov
inc
jae
sub
dec
xor
or
test
stc
sub
popa
cld
inc
dec
mov
push
mov
test
dec
cmc
xchg
lock
sahf
pop
or
xor
aad
xchg
push
lock
add
in
mov
push
int3
add
jmp
stos
mov
fs
movsl
enter
mov
xor
inc
lcall
or
stc
fdivrl
clc
and
xor
scas
mov
movsl
cmpsb
ret
xor
sub
mov
ficoml
xchg
lods
cmpb
sbb
lret
pop
or
mov
cmc
js
andps
pop
out
enter
loopne
divb
cmc
popa
jae
mov
outsl
aaa
addr16
rorb
movl
xor
in
pop
rorb
pop
mov
mov
imull
pop
mov
es
cmp
aas
mov
sub
lcall
push
xlat
iret
scas
xchg
mov
out
leave
iret
jbe
push
lahf
push
es
dec
out
imulb
pop
xchg
aas
mov
inc
fists
pushw
push
lahf
push
es
dec
out
imulb
pop
xchg
aas
mov
inc
fists
data16
out
push
lahf
push
mov
dec
out
imulb
pop
xchg
aas
mov
inc
fists
pushl
push
lahf
push
es
in
jg
sbb
xchg
push
lock
rorb
shll
loope
nop
nop
mov
xor
and
jno
popa
jb
bound
push
and
mov
mov
loope
xchg
loop
shlb
and
jo
popa
mov
bound
push
xor
mov
mov
loope
xchg
loop
shlb
add
adc
push
or
push
in
popf
mov
mov
imul
shr
mov
ss
daa
je
into
inc
in
shrl
ror
fwait
jge
or
cmp
sub
inc
cmpsl
mov
lea
arpl
mov
jo
shrl
jns
xchg
dec
pop
push
bound
push
jbe
adc
sahf
and
pop
cmp
mov
mov
mov
nop
testl
in
mov
in
add
loope
inc
ja
dec
adc
jb
jge
stos
sbb
outsb
push
loopne
mov
xchg
mov
and
adc
pop
inc
rorl
xlat
push
dec
or
xor
adc
pop
cmp
sub
rolb
add
sahf
and
out
push
pop
xor
fidivrs
mov
loope
xchg
loop
shlb
and
jno
popa
jb
bound
push
xor
repz
mov
repnz
nop
cmc
mov
rcl
and
adc
jp
jae
bound
inc
add
xlat
mov
out
xor
cmpsl
les
xor
xor
push
add
jae
or
ds
aaa
jne
nop
mov
cltd
mov
mov
mov
adc
popa
jb
bound
push
xor
mov
mov
loope
xchg
loop
shlb
and
jno
popa
jb
bound
push
xor
mov
xchg
setle
add
out
inc
inc
inc
adc
add
mov
jb
push
mov
inc
dec
mov
and
fdivl
xchg
scas
aad
mov
nop
sahf
jp
fidivrs
xchg
decl
mov
sbb
adc
ljmp
mov
mov
lock
lcall
ss
scas
cmpsb
sub
xchg
pop
inc
fldcw
testl
clc
popf
sub
push
cmc
sub
cltd
or
adc
add
mov
fadd
ss
stos
jmp
cmp
std
push
push
clc
push
jbe
pop
sub
aam
jb
sti
ja
pop
pushf
sbb
mov
bound
arpl
mov
add
jl
movsb
aam
frstor
inc
lret
or
xlat
shll
cld
or
pop
clc
pop
sub
push
mov
mov
pop
jo
mov
outsb
and
out
and
insb
mov
adc
out
adc
ja
cld
push
add
or
stc
mov
mov
ds
mov
aam
fisubl
mov
fwait
fs
inc
cmp
ja
mov
outsl
push
mov
jo
out
dec
cmpsl
mov
sbb
idivl
pop
clc
or
iret
sbb
push
hlt
out
mov
inc
bound
xchg
jl
aas
sub
push
scas
in
gs
mull
xor
jle
sbb
ror
dec
ja
and
aad
incl
adc
dec
mov
scas
or
outsl
sbb
das
or
xchg
jle
pop
scas
xchg
sbb
xor
popa
aad
or
ss
aam
aaa
dec
and
add
decl
xor
inc
and
rorb
std
or
mov
and
aam
dec
lods
add
scas
push
and
setae
fwait
cli
add
lods
fnstcw
iret
repnz
add
int
imul
imul
cwtd
in
mov
mov
fiaddl
sti
adc
test
mov
addr16
xchg
sbb
dec
fisttpl
push
in
pop
mov
inc
loopne
ja
cmp
push
popf
jg
cld
xor
mov
shrb
sbb
movl
inc
adc
shrl
movsl
sub
inc
nop
jl
in
xorl
mov
cmpb
adc
adc
push
fsubrs
movsb
dec
dec
xchg
aam
lret
test
push
fildl
pop
test
orb
fistpll
inc
sbb
lret
jnp
or
push
xlat
cmp
out
xor
ja
push
xlat
sarb
push
add
xchg
jne
lahf
imul
mov
fmulp
icebp
daa
into
jns
and
jp
cwtl
mov
loop
and
aam
push
nop
jg
xor
push
pop
test
push
or
stos
addr16
mov
fmulp
pop
cmp
test
decl
lock
lahf
lock
gs
insb
insb
mov
cmp
pop
pop
pusha
negl
pop
pop
mov
dec
out
scas
xchg
cltd
pop
scas
and
xor
fsubrl
jge
nop
cld
xchg
lds
and
and
pop
loope
push
repz
xor
push
in
sub
ss
call
mov
xchg
ret
aaa
outsb
rorb
sbb
and
int
xor
adc
inc
fidivl
add
cmp
aad
imul
mov
test
int3
push
push
notb
cmp
mov
push
push
jb
cmpsl
lahf
test
clc
mov
dec
int3
jmp
jo
xchg
and
adc
inc
in
enter
fidivrs
subl
ljmp
inc
dec
mov
jno
in
mov
or
and
push
jg
and
mov
jno
cmp
jmp
cmp
push
and
jbe
push
clc
clc
or
sbbl
jb
inc
shlb
jb
xchg
mov
pop
dec
fisubrl
lock
or
mov
and
sub
mov
mov
gs
jo
add
aas
les
mov
pop
jbe
movsb
push
and
pusha
inc
jp
in
cwtl
cli
jno
jae,pt
xor
adc
dec
cmp
push
sahf
jae
or
cmp
fisttps
mov
fs
adc
test
pop
repz
sbb
nop
bound
ja
fwait
shrl
orb
out
andb
mov
and
xchg
push
cmpsl
xchg
scas
adc
mov
mov
cmp
test
hlt
dec
push
fcmovb
test
sahf
pusha
pop
pop
gs
jmp
sbb
jl
aaa
inc
sub
add
push
inc
push
sub
push
lds
jmp
faddl
outsb
push
rorl
xchg
sub
call
push
scas
aaa
jmp
cltd
pushf
mov
adc
rol
int
mov
stos
or
test
gs
lods
mov
outsb
or
cmpsl
dec
test
and
icebp
cwtl
mov
out
lds
das
mov
rcrl
das
aam
shr
es
cmpb
aad
push
xor
push
mov
push
dec
push
xor
fadd
or
mov
and
sub
stc
sub
ficoms
jbe
shlb
sub
add
fildl
cmpsl
xchg
push
sar
or
bound
or
mov
xor
xchg
push
popa
vmovsd
adc
in
std
xchg
fstpl
xor
arpl
push
jp
shl
loopne
pop
inc
xor
repz
mov
push
mov
aas
pop
cmpsl
dec
add
jg
test
push
dec
sbb
pop
mov
scas
stc
rcrb
dec
test
push
push
jns
dec
fcoml
enter
cmp
or
lds
pop
enter
int3
aad
and
pop
mov
mov
ret
sbb
pop
ret
and
xorb
inc
sbb
dec
fistl
adc
ret
ret
jnp
fbstp
repnz
mov
inc
rol
es
push
jmp
sti
mov
lret
test
aaa
aaa
shll
movl
push
and
push
inc
sti
pop
or
jnp
jecxz
mov
pop
movsb
jmp
out
lret
push
rcrb
loopne
in
loope
loopne
mov
lcall
lods
dec
sbb
xchg
lds
lods
adc
sub
cmp
xorb
daa
notl
iret
cltd
ja
mov
insl
mov
mov
pop
and
repz
dec
pop
fistpl
mov
aad
call
inc
pop
cmp
shlb
push
xchg
cmp
sub
xchg
std
fildl
push
into
int3
mov
xchg
or
lods
xor
dec
imul
repnz
jae
test
js
ja
sub
mov
xchg
pop
push
mov
cs
rorb
sub
pop
jae
push
in
pop
lods
ficoms
pusha
sbb
xchg
jp
in
cs
cmp
xchg
add
and
loopne
test
mov
les
lret
in
dec
cmp
or
cmp
rep
arpl
and
xor
icebp
cmpsb
inc
fldt
mov
and
fldenv
and
sbb
mov
int3
call
sbb
fucomi
pop
ds
in
push
hlt
push
jge
cwtl
ret
sar
cmp
add
mov
aaa
inc
pop
mov
jnp
outsb
fimuls
add
jl
sahf
sbb
hlt
sti
std
push
loop
sbb
lret
loop
aas
mov
test
iret
out
aam
into
adc
and
cwtl
cmpsl
stc
ficompl
mov
std
xor
fisttpll
dec
push
and
mov
push
ljmp
lret
dec
mov
add
lock
xlat
jge
mov
cwtl
adc
sbb
mov
add
shlb
rcrl
cwtl
daa
sti
hlt
fcmovb
mov
rolb
mov
lcall
fdiv
or
pop
inc
jp
pop
mov
dec
jecxz
push
insb
pop
insb
loopne
xchg
es
loopne
jbe
sub
inc
xor
mov
sarb
dec
ss
xor
in
cmp
inc
adc
fidivs
jmp
push
daa
ss
mov
jne
xchg
mov
pusha
mov
or
push
pop
pop
inc
xchg
sub
jae
fcomi
fwait
cmp
push
push
mov
push
mov
or
cmc
sub
jns
add
jl
pop
xchg
add
lock
jle
cmp
bound
jmp
jmp
mov
roll
out
cmp
push
in
jge
mov
push
sub
jl
cmp
xchg
pop
adc
mov
push
pop
sub
xchg
jne
repnz
das
cmp
pusha
push
pop
pop
cwtl
jnp
jmp
pop
repnz
jns
ret
adc
movsl
mov
iret
ret
push
lret
imul
push
sti
mov
sub
ffreep
xor
dec
and
adc
xchg
std
into
lock
adcb
pop
cmp
mov
or
push
arpl
cmc
in
inc
fstl
fistpll
cmp
mov
xchg
cmp
adc
push
or
lods
inc
mov
or
loop
je
mov
cmp
rcl
aaa
int3
lret
insb
mov
push
and
push
iret
ss
divl
call
notb
inc
arpl
xchg
dec
mov
stos
cmp
jecxz
mov
inc
xchg
and
push
cwtl
xchg
mov
lods
loop
jmp
sub
ficompl
adc
test
adc
dec
jbe
lods
xor
movsl
orl
outsl
sub
add
mov
scas
sbb
xchg
out
adc
jnp
mov
cmp
add
mov
nop
icebp
lret
movsl
out
mov
mov
sub
imull
inc
xchg
jns
inc
clc
fstps
mov
push
out
lret
pop
fimuls
fiaddl
andl
cmp
jmp
push
jbe
fmul
nop
insb
sbb
or
add
insb
mov
int
pop
jnp
inc
mov
push
ret
rolb
lds
addr16
cltd
inc
xor
test
lods
imul
mov
fdivrs
ja
jnp
jbe
mov
adc
cmpsb
cmp
dec
rcrl
or
aad
aam
roll
add
mov
je
mov
cmpsl
xor
les
add
out
loope
push
jl
pushf
mov
fwait
aam
inc
pop
push
out
mov
mov
fcmovnb
add
adc
sub
xor
push
imul
xor
push
dec
inc
ret
nop
mov
movsb
push
xor
ret
jbe,pn
adc
dec
sti
aaa
out
mov
cli
cwtl
repz
adc
js
push
xor
sub
scas
or
rclb
push
mov
lret
fsubs
jmp
adc
or
dec
lret
mov
ljmp
xchg
scas
ror
pusha
pop
push
xlat
jae
push
and
data16
std
decb
lods
pop
mov
mov
mov
cmp
mov
push
xchg
das
sbb
fcompl
pop
sbb
push
dec
push
mov
pextrw
and
xor
push
mov
test
and
xchg
sarl
push
sub
add
ss
insl
adc
and
lds
int3
push
arpl
xchg
insl
inc
push
xor
subb
sub
cmpsb
call
inc
pop
push
xchg
mov
pop
mov
loop
sub
push
sti
das
ret
rclb
aaa
jmp
sub
jle
sbb
sbb
and
jne
dec
xchg
push
cmp
sub
or
mov
sub
loopne
dec
xor
xor
int3
or
inc
fucomp
or
pop
cmp
pop
mov
cmp
pushf
gs
in
cmp
aaa
jmp
jnp
ss
in
enter
or
in
mov
mov
jno
leave
mov
call
add
inc
cltd
aas
cmp
jbe
adc
sbb
aas
les
insb
sbb
mov
mov
bound
cmpsb
rolb
lods
sbb
cmp
popa
lea
push
dec
xchg
shrl
int
pop
cmpsl
xchg
ljmp
mov
fwait
mov
enter
shl
fwait
mov
out
dec
enter
pop
inc
lcall
mov
cs
lods
bound
lods
inc
inc
push
lods
xor
or
sub
dec
imul
rorl
pusha
xchg
aad
out
and
sub
xchg
push
mov
dec
adc
push
dec
and
sub
inc
mov
aaa
push
int3
and
rorl
or
fcompl
mov
inc
push
rcll
lcall
icebp
inc
add
shlb
push
xchg
popa
nop
push
movsl
mov
inc
mov
movsl
mov
mov
andl
adc
push
and
push
loope
push
sub
mov
das
or
jp
aad
or
scas
xor
addr16
pushf
cmp
popf
scas
xor
pop
adcl
repz
es
sbb
xchg
mov
mov
push
mov
mov
xor
pushf
aaa
jae
andl
sbb
movsl
pop
mov
mov
jmp
inc
pop
jo
daa
xchg
ds
cld
adc
push
push
add
xchg
mov
mov
jo
out
add
push
jnp
cmc
mov
ds
shlb
jl
adc
dec
rorb
or
ds
mov
xor
pop
pushf
pop
push
inc
jmp
sbb
sar
stos
lods
push
dec
sub
and
rcr
xchg
fiadds
outsb
dec
sub
bnd
lds
mov
and
push
add
ss
pop
addr16
adc
xchg
and
jbe
negl
cmp
mov
and
push
in
mov
adc
rcll
mov
sbb
cs
and
sub
add
pop
mov
les
lret
mov
gs
or
sbb
hlt
icebp
subl
mov
or
and
pop
loop
outsb
imul
mov
out
rcrb
push
pop
pop
aas
mov
stc
cmp
loope
mov
sti
mov
mov
sub
ret
cmp
xchg
sub
arpl
sub
adc
jmp
mov
fdivrs
rolb
jno
bound
xchg
insl
cmpsl
mov
popa
hlt
xor
fs
xchg
mov
lret
in
sbb
aam
xchg
ja
lret
sahf
sub
cmpsl
inc
stos
jno
negb
sub
test
mov
inc
xor
and
xor
mov
cmp
sub
pop
dec
or
sub
lahf
mov
jnp
outsb
mov
jmp
or
sbb
xchg
aas
jl
insb
loop
fidivrs
fisubrs
xchg
adc
push
popa
or
std
cmp
or
pop
jmp
sti
ret
sub
insl
shrl
add
pop
cmp
jmp
mov
lds
inc
push
popa
int
lods
jnp
movsb
xchg
sub
jmp
inc
xchg
mov
dec
inc
mov
jecxz
pop
rol
xchg
lea
jne
inc
loopne,pt
stc
cmp
pusha
sbb
push
int3
pop
shll
or
pop
mov
mov
addr16
sbb
leave
insl
in
push
sbbl
jl
lods
addr16
mov
sub
ja
cmp
jge
lds
out
mov
ret
dec
popa
ret
idivb
jmp
pop
sub
pop
fwait
pop
test
in
popl
mov
pop
ret
sahf
add
add
pop
inc
or
ss
insl
mov
mov
xchg
int3
dec
and
enter
movsl
dec
cmp
sub
pop
adc
mov
push
or
test
add
adc
je
inc
icebp
push
mov
ja
mov
jl
pushf
pop
add
les
xchg
aam
jecxz
loope
xor
dec
out
push
dec
xchg
cwtl
jmp
mov
jl
sbb
xchg
jno
inc
pop
jno
and
fdiv
outsb
mov
test
testl
loopne
mov
push
stc
rep
out
lahf
in
popa
sub
xor
xor
push
xchg
xor
pop
cs
inc
sub
dec
xchg
arpl
nop
into
push
fs
pop
insb
fwait
mov
pop
mov
iret
lock
dec
lds
fstps
mov
add
mov
pop
out
adc
add
mov
cmpsl
xchg
push
dec
add
inc
adc
decb
gs
and
inc
inc
pop
fnstcw
and
inc
adc
lret
out
add
das
dec
push
aam
jmp
aas
inc
mov
test
outsb
mov
or
pop
ret
xchg
add
inc
jp
popf
and
stos
mov
sub
pop
and
jle
mov
xlat
scas
and
lods
xchg
popa
stos
test
adc
cmp
stc
xchg
sarl
aam
sbbb
sbb
cmpsl
idivb
popf
push
mov
outsl
add
mov
mov
bound
sub
mov
dec
out
mov
in
xchg
pop
test
fnsave
movsl
sarl
and
scas
cltd
int3
insb
pop
loope
mov
xchg
pop
imul
leave
mov
scas
out
mov
scas
adc
mov
adc
ret
pop
sub
lock
dec
icebp
rcrl
stos
sbbb
jg
inc
cmc
loop
dec
mov
mov
cmpsl
mov
xchg
push
or
fsubr
leave
cltd
outsl
mov
fbstp
test
test
cmp
sbb
insl
cmp
push
mov
mov
into
lcall
stos
mov
adc
xor
mov
lea
xchg
pop
mov
mov
xchg
inc
pop
cmp
test
dec
push
ds
icebp
shlb
sarl
in
outsl
add
addl
nop
push
sbb
into
or
es
or
rcl
sbbb
aad
pop
and
sub
lcall
inc
xchg
fdivs
inc
pop
outsl
pusha
outsb
mov
cltd
sbb
push
push
ljmp
rolb
insl
sub
xor
cmp
nop
jno
cmpsl
lret
push
xor
dec
rcrl
movsl
or
idivb
add
pop
mov
dec
pop
fisubrl
sub
sbb
add
pushf
adc
movsl
cmpl
pop
push
fucomip
push
icebp
cld
into
mov
dec
lods
dec
or
mov
mov
mov
sub
add
jmp
out
push
cmpsl
cmpsl
icebp
sbb
lahf
inc
and
xchg
inc
repnz
cwtl
mov
adc
cmp
mov
sub
cmp
in
mov
mov
add
lds
aaa
xor
gs
inc
pop
xlat
ljmp
and
pop
inc
clc
push
std
ret
inc
lea
mov
inc
adc
fidivl
imul
test
sbb
pop
xchg
lods
pop
adc
push
in
and
jmp
xchg
add
mov
movsb
mov
jb
bnd
dec
out
aad
xor
scas
addr16
cltd
xor
lods
aam
cmp
mov
loopne
push
les
or
pusha
cli
add
pop
inc
mov
jo
aas
lock
mov
xor
clc
sahf
mov
int
popa
movsl
push
out
dec
jge
movsl
add
push
js
pop
shlb
jnp
fpatan
adc
adc
or
jno
fstpt
sub
sub
sbb
xchg
add
mov
and
xor
mov
icebp
mov
inc
pop
pslld
rcrl
mov
aas
xor
or
andb
loop
lods
inc
insl
icebp
idivl
mov
fwait
mov
pop
int3
xor
cwtl
add
xchg
pop
push
mov
pop
push
fcomps
dec
shl
add
ds
cmpsl
xchg
mov
cmpsl
sub
pop
nop
cmp
pop
fisubrl
add
fcoml
inc
outsl
icebp
add
inc
dec
sarb
int
inc
ret
xchg
push
je
dec
inc
pop
cmpsl
lock
mov
mov
and
sarl
xchg
dec
aaa
shll
sbb
or
cmp
adc
loop
sbb
ds
or
insl
fstps
push
sub
cmpb
jb
mov
add
mov
mov
popa
xor
aad
jmp
adc
sbb
scas
movsb
pop
pop
xchg
data16
sub
and
xchg
loop
shlb
and
jno
popa
jb
bound
push
xor
mov
mov
loope
xchg
loop
shlb
and
jno
popa
jb
bound
push
xor
mov
and
adc
and
xchg
loop
shlb
and
jno
popa
jb
bound
push
xor
mov
mov
loope
xchg
loop
shlb
and
mov
cltd
adc
and
xor
mov
sti
ret
lret
repz
mov
enter
hlt
mov
dec
addr16
sub
jnp
or
sbb
cld
sar
ret
sti
repz
stos
xchg
mov
xlat
popa
pop
jnp
das
jae
arpl
popa
cmp
or
sbb
repnz
shr
ret
sti
mov
mov
mov
daa
or
push
add
jbe
js
jb
fwait
lahf
sti
mov
xchg
mov
mov
push
bound
orl
ja
pusha
pop
jmp
mov
int3
adc
jmp
jbe
lret
cli
lret
mov
jecxz
jo
dec
push
pop
mov
and
xchg
jae
pop
out
xchg
sti
test
rcrb
in
mov
imul
pushf
aam
jle
mov
jmp
sub
mov
xchg
scas
xchg
arpl
fwait
es
mov
mov
scas
das
push
xor
push
add
xchg
or
xchg
sti
push
jnp
fwait
mov
test
adc
adc
sub
mov
or
push
sbb
imul
sub
sub
jmp
sbb
lret
ljmp
mov
arpl
push
jp
or
sbb
sub
and
xchg
mov
loop
fcomip
pop
cmp
inc
cmp
push
inc
jbe
add
jle
jmp
sti
stos
scas
sbb
fists
ficoms
push
push
cs
dec
arpl
jnp
sbb
ror
ret
scas
xchg
mov
jnp
dec
jae
arpl
adc
add
xor
and
sar
ret
lret
repz
stos
xchg
mov
mov
dec
jae
arpl
adc
add
xor
and
sarl
rclb
sbb
mov
mov
insb
xor
loop
rolb
mov
xchg
lret
inc
jge
scas
popa
xchg
adc
aaa
dec
jnp
orl
mov
outsb
nop
push
push
push
xor
or
clc
jl
insb
add
test
sbbl
xor
push
lds
cld
pop
adc
call
mov
cltd
mov
cmp
pop
arpl
movsl
lods
lds
mov
inc
pop
ficompl
mov
loope
addr16
cmc
daa
mov
scas
enter
scas
push
cmpsb
cmp
incb
movsb
adc
test
movsl
mov
cltd
cmp
push
add
cmp
int
sub
mov
lahf
mov
jnp
lret
jp
or
lcall
cld
pushl
adc
bound
mov
cmp
fistpl
mov
push
jl
dec
iret
adc
jns
mov
and
mov
icebp
mov
cmp
lcall
lds
and
stos
inc
xor
mov
jno
std
or
hlt
xchg
xor
ds
ja
stc
sub
inc
jle
xchg
fsub
xor
mov
jmp
imul
inc
and
out
adc
dec
add
fwait
dec
leave
xor
push
jo
inc
cmpl
mov
mov
ret
mov
les
movsl
dec
add
aam
xlat
adc
jg
je
icebp
jecxz
cmp
inc
movsl
dec
adc
lock
or
movsl
je
jne
popf
cld
push
inc
stos
mov
ret
int
int
arpl
cmp
cli
dec
test
pop
push
xor
mov
popf
or
jnp
xchg
xor
or
add
shrb
aam
push
cmp
lods
xchg
adc
inc
dec
out
push
pop
aas
jle
jno
test
addr16
ss
notb
adc
dec
adc
movsb
scas
je
lods
push
mov
jne
sahf
scas
xor
xor
mov
xchg
push
and
adc
fidivrl
movsb
mov
out
jp
into
add
mov
dec
nop
hlt
out
fstpt
and
or
call
pushl
js
push
xchg
cmpsb
or
fisubrs
fldt
sub
shll
loopne
mov
push
leave
xlat
out
sbb
mov
and
jle
pop
jb
pop
sub
xor
imul
jge
inc
push
or
adc
loope
or
sub
pop
lcall
cs
inc
sarl
inc
lcall
xorl
or
jbe
fldcw
bound
adc
lcall
inc
cs
bound
jg
js
movq
loope
mov
adc
fldt
push
mov
cmpsb
repz
mov
cmp
and
lods
mov
cmp
xchg
ret
push
xchg
inc
xor
adc
jge
out
and
mov
pop
loop
js
cmp
cmc
or
cmpsb
push
inc
or
mov
icebp
mov
fst
add
icebp
xor
outsb
mov
mov
arpl
in
adc
ds
ret
bound
jg
jne
or
xchg
mov
mov
gs
mov
mov
add
inc
push
cltd
add
sbb
adc
roll
push
loop
push
dec
fbstp
test
cmp
add
addr16
loopne
bound
nop
inc
fs
fisttpl
imul
and
in
loope
daa
scas
out
mov
cmp
loopne
cmp
add
mov
mov
or
cwtl
sbb
sbb
mov
jg
push
mov
loope
ret
mov
arpl
jno
pop
jns
stc
shlb
lds
pop
sbb
roll
inc
int3
xor
loopne
cmp
std
jg
jge
jnp
mov
ffreep
pop
stc
or
cmp
sti
sub
inc
sbb
call
sub
cli
mov
mov
in
push
out
imul
fsubl
mov
xor
mov
xor
jmp
int3
ret
xor
adc
pushf
cmp
dec
jno
cmpsl
cmp
sbb
push
mov
icebp
movsb
and
dec
inc
imul
gs
pop
sbb
cmp
add
imul
lds
mov
call
cmp
mov
xchg
pop
push
int
loop
iret
test
jne
add
dec
adc
int3
bound
js
stos
xor
jge
leave
aas
mov
loop
enter
fidivs
outsl
imul
rol
xchg
aad
push
dec
or
add
mov
mov
or
unpcklps
mov
outsb
popa
aaa
fxch
sbb
addr16
pop
fs
mov
mov
ljmp
xor
jmp
jbe
xor
rcl
add
sub
aad
cmp
cld
jmp
or
outsb
adc
in
mov
pop
int3
pop
sub
push
stos
push
stos
in
lcall
push
jmp
inc
lods
mov
push
popf
and
aaa
push
je
xor
lock
push
enter
outsl
mov
nop
adc
and
sub
in
shrb
adc
add
faddl
pop
ljmp
push
in
xorb
bound
adc
mov
stos
sub
lret
lds
sub
addr16
xor
push
loop
aam
pusha
cmp
mov
and
popf
dec
les
mov
in
pop
xor
jmp
inc
xchg
jge
xchg
push
fcmove
shrb
lcall
sarl
outsl
insl
push
dec
add
das
mov
cmp
cmpsl
pop
sbb
pop
xor
pop
scas
dec
cwtl
fisttpll
lret
stc
dec
adc
subb
jb
or
out
je
cmc
out
sti
adc
cmp
sub
and
in
scas
adc
pop
push
loop
bound
sbbl
cli
arpl
jne
push
flds
jno
jno
ds
pop
daa
push
or
push
jo
aam
add
lock
int3
je
and
movsl
mov
sti
mov
inc
mov
jns
cmp
test
incl
pushf
shrl
out
leave
leave
or
ja
imul
clc
stos
rorb
jge
lds
pop
jns
cltd
imull
xor
ret
xchg
hlt
mov
pushf
fiadds
pop
hlt
clc
call
mov
cmc
std
insl
mov
xchg
cmpb
ss
dec
andb
enter
inc
adc
cmp
adc
or
or
mov
mov
std
aas
push
ds
daa
sbb
mov
mov
add
out
mov
int
or
lock
fisubrl
cmc
bound
cmc
sbb
int3
dec
fildll
pop
mov
ds
stc
sub
dec
stos
ss
pop
fwait
jbe
fidivs
mov
sbbl
fwait
sbb
lods
shll
xchg
fidivl
mov
add
fst
xchg
mov
icebp
fcompl
sub
aaa
and
call
hlt
mov
sahf
inc
jbe
in
scas
clc
fldt
int3
mov
inc
push
sub
jo
sub
add
cmc
mov
lahf
hlt
push
lahf
push
mov
cmp
repnz
cmp
cld
sub
int
lret
mov
jle
adc
mov
xchg
ljmp
xor
push
mov
inc
push
pusha
js
scas
cmp
mov
mov
xchg
int3
xor
test
rclb
inc
pop
incl
xor
adc
lcall
dec
in
jge
mov
loope
pop
mov
test
xor
and
push
outsl
das
ja
test
adc
fimull
xchg
sub
mov
xchg
mulps
xchg
adc
sub
lahf
xchg
into
inc
inc
pop
jp
addr16
jg
and
mov
sti
inc
pop
cmp
ljmp
jp
loope
xchg
popa
adc
or
and
mov
xchg
out
pusha
adc
lcall
popf
sub
ret
fstl
orb
mov
push
lds
push
enter
dec
mov
and
jmp
std
fiaddl
sbb
xor
js
jle
andl
mul
je
lcall
sub
ss
inc
push
push
jle
popf
sbb
mov
loopne
jae
push
inc
mov
repnz
ja
pushw
or
xor
jecxz
push
out
ljmp
cltd
push
and
test
push
add
push
cmpsb
push
xchg
mov
sbb
xchg
ret
std
js
lock
mov
arpl
xchg
jl
fdivs
mov
mov
ss
xlat
push
jge
xchg
mov
ficomps
or
mov
int3
lcall
mov
mov
mov
add
loope
xchg
mov
mov
aad
test
jl
xchg
bound
movsb
aad
inc
scas
push
jle
inc
xorb
sub
and
push
sarb
or
outsl
mov
shlb
outsb
stc
std
int
xchg
mov
sbb
aaa
aaa
xchg
out
jae
movsl
mov
int
out
push
fwait
mov
mov
lods
jne
push
jo
sbbl
repz
mov
jb
movsb
out
and
mov
or
in
mov
in
lock
iret
jns
dec
mov
adc
inc
adc
dec
push
pop
mov
aas
negb
cld
cmpsl
aam
jge
aas
jae
lock
jns
pop
pusha
or
cmpsl
dec
shll
fwait
jg
and
inc
mov
jl
or
lahf
movsl
sbb
mov
pop
aad
xchg
mov
dec
sbb
xor
mov
cmpsl
xor
push
popf
dec
pop
add
scas
xor
push
je
fs
push
xor
out
xchg
sbb
sub
imul
mov
pushf
jo
and
xchg
push
call
dec
cmc
mov
fdivl
int
xchg
push
imul
cmp
lods
outsb
add
add
jmp
dec
xchg
inc
pop
and
cmp
adc
mov
push
ss
inc
mov
movsb
xchg
ss
mov
dec
push
iret
dec
movsl
adc
popa
mov
lret
shrl
or
das
pop
scas
call
out
loopne
mov
je
mov
jb
ja
cmpsl
pop
mov
ret
pop
orl
mov
dec
shrl
mov
and
cmc
inc
iret
repz
scas
xlat
xor
mov
dec
and
push
add
fimull
jae
bound
inc
xlat
jns
test
icebp
jge
pop
xchg
ret
ljmp
cltd
enter
jmp
fsubp
dec
and
arpl
xchg
cs
mov
jnp
and
in
idiv
je
mov
loop
push
or
push
aas
andb
shll
mov
iret
adc
mov
push
sbb
push
add
hlt
jmp
xor
mov
adc
out
xchg
aam
sti
test
inc
xchg
loopne
flds
lcall
outsb
xor
ljmp
out
cmp
jmp
int3
out
addr16
or
xor
pop
mov
int3
outsl
inc
push
icebp
add
push
push
dec
in
hlt
cmp
scas
in
sbb
ret
sti
cmp
fdivl
cli
jmp
push
popa
stos
mov
inc
pushf
aam
jp
sbb
scas
push
xchg
jae
jge
mov
cmp
add
rep
cmc
dec
pop
jmp
iret
mov
mov
adc
add
fnstsw
push
xor
and
cwtl
loopne
adc
bound
dec
iret
pop
std
xor
jecxz
loop
or
adc
xor
jge
sub
push
out
dec
aaa
in
test
das
push
inc
mov
mov
mov
pop
sbb
movsl
cmpsb
daa
pusha
mov
dec
pop
int
lret
idivl
lcall
divl
call
popl
insl
push
xchg
pop
jl
jo
adc
sbb
fisubrs
lock
popl
mov
jns
pop
dec
mov
push
mov
xor
pushf
inc
jl
push
testb
pop
add
xor
xor
ret
pop
sarl
add
insb
adc
pop
mov
ja
sbb
add
dec
and
loopne
pop
dec
sbb
fcompl
and
inc
insb
or
add
add
cltd
cmpsl
stos
mov
xchg
out
pop
mov
imul
push
cltd
jp
xchg
sub
cltd
sbb
or
mov
or
sarb
addr16
and
fwait
addr16
repnz
sub
fisttpll
xchg
call
das
clc
jg
jo
fwait
xchg
pop
cmp
xor
movsl
shr
ds
in
leave
sub
fwait
mov
fidivrl
rclb
jg
and
ret
lahf
xlat
stos
mov
and
fisttps
fwait
jae
cmp
adc
inc
push
rorb
xorb
repnz
imul
add
push
stc
jnp
xor
push
push
xchg
fisttpl
fbld
in
pop
cmp
jecxz
mov
mov
push
iret
adc
and
in
jae
xchg
xor
push
xor
inc
pop
jle
fstp
sbbl
add
mov
dec
push
es
and
mov
sbb
cmp
loop
pop
adc
sub
imull
scas
xor
out
out
push
xchg
dec
out
iret
pop
ds
pop
pop
push
in
sub
sub
decl
cli
mov
xor
fimull
shlb
adc
shll
movsb
inc
jmp
enter
pop
in
adc
mov
dec
fmul
lar
mov
pop
andb
xchg
dec
lcall
mov
push
or
sub
loop
in
cmp
and
repnz
fisubrs
cmp
add
cmp
lret
je
and
pop
fsubrl
sub
cs
fisubrs
inc
xchg
lods
fildll
inc
mov
loopne
imulb
js
sub
cmp
mov
movsb
enter
inc
fcompl
sub
jno
xlat
dec
scas
cld
jbe
pop
or
outsb
bound
std
in
xchg
sbb
push
rclb
mov
ja
lods
or
mov
or
mov
repnz
lods
cmp
ret
pop
stc
test
inc
mov
jae
pop
cmp
insl
test
mov
xorb
xchg
add
arpl
mov
push
sbb
inc
lods
arpl
sbb
push
cltd
or
popa
jmp
int3
fs
shl
into
jns
ja
mov
shrl
xor
pop
es
push
inc
jnp
aaa
or
push
inc
sub
cmp
sbb
mov
data16
cmp
pop
push
xchg
mov
shlb
mov
and
lcall
bound
scas
test
jl
in
xchg
or
addb
push
lcall
push
fimuls
cmc
out
fwait
dec
mov
and
clc
sbb
cmpsb
jmp
rcr
adc
jp
fstpt
loope
xorl
xor
out
iret
leave
jp
dec
imul
out
cs
inc
mov
jp
mov
dec
daa
xor
xlat
lods
mov
out
and
cmc
iret
outsl
cmpb
icebp
cld
loope
mov
adc
subb
imul
and
out
sub
pop
in
popf
int3
test
movsl
pop
int3
pop
fcompl
sbb
dec
bound
xor
decl
push
out
add
xor
fldt
mov
aam
outsb
cmp
lea
cmp
ficoml
cmp
andb
test
sbb
into
imul
lods
add
leave
pop
cmc
jmp
test
push
xlat
sbb
inc
push
or
mov
jb
adc
aaa
sbb
mov
pmaxub
aam
sbb
cltd
sub
loope
add
mov
pop
cltd
std
push
or
dec
mov
jp
shll
movsb
mov
sarb
xlat
aaa
lods
mov
sbb
fucomip
mov
dec
icebp
mov
hlt
stos
xor
mov
xor
gs
cwtl
mov
jo
inc
mov
jmp
inc
or
and
pop
cmpsb
lret
in
jmp
mov
xor
test
xlat
jg
push
std
pushf
push
inc
xorb
mov
mov
sarl
or
gs
enter
jnp
aas
pusha
loop
cli
lds
pushf
pusha
filds
sahf
pop
add
inc
nop
loopne
pushf
stos
adc
adc
jnp
loope
inc
inc
sbb
iret
mov
add
lods
sti
adc
sub
mov
fidivrs
test
sbb
or
mov
mov
int3
fsub
mov
mov
sbb
push
xchg
mov
add
mov
mov
imul
loopne,pt
push
push
repz
iret
push
push
lds
fisubrs
idivl
in
mov
mov
sahf
std
push
les
adc
lcall
xor
mov
xorl
loopne
sahf
pop
fs
sbb
rcl
mov
rcll
cli
ljmp
mov
mov
add
cmp
or
xor
rorb
loope
shll
adc
in
sub
adcl
mov
lea
sar
popf
pop
cmp
xchg
ljmp
cmp
push
and
ja
mov
mov
sbb
in
shrl
sbbl
dec
bound
xchg
and
mov
xor
js
test
arpl
xor
mov
or
fs
mov
btc
xor
jp
arpl
test
adc
fsubp
sbb
lods
jp
add
sub
push
pop
mov
shrb
mov
leave
sub
scas
xor
into
push
dec
popf
sbb
fmull
adc
pop
mov
pusha
sub
fisttps
sarl
add
scas
enter
movsb
fdivs
mov
sub
mov
scas
insl
ret
mov
mov
cmp
lcall
and
push
add
rcll
mov
pop
cmp
mov
daa
mov
sub
out
enter
iret
adc
xor
inc
or
add
pop
enter
and
dec
adc
fistl
dec
dec
mov
scas
push
addr16
into
push
cmc
dec
ja
in
add
inc
xchg
mov
lods
xor
mov
mov
faddl
sti
lock
fistpl
je
cwtl
mov
mov
arpl
ret
mov
sub
xor
sub
push
fucomp
subb
lahf
sub
push
test
pop
mov
loopne
sub
or
repnz
xor
pop
dec
mov
xor
jnp
sbb
lret
xlat
repnz
shr
cmp
jmp
push
jae
mov
xor
fcmovb
cmc
push
inc
pop
sbb
mov
nop
push
jbe
adc
test
mov
jbe
test
leave
sahf
sub
mov
jo
cmpsb
nop
pushf
xchg
mov
mov
dec
xchg
fsub
into
mov
push
and
xorl
cltd
in
xor
pop
pop
into
dec
ljmp
sub
sub
xor
cmpsl
loop
xchg
add
out
out
arpl
dec
jp
cli
add
fcoms
repnz
pop
test
mov
lea
iret
lahf
mov
cs
sub
ret
dec
push
stos
rorl
mov
cmpsb
aam
imul
dec
test
cmp
lods
or
rcrl
arpl
push
add
cmpsl
adc
pop
push
sbb
inc
mov
or
loope
mov
cmpsb
push
lahf
add
ficompl
enter
lahf
inc
adc
push
and
jle
shll
out
pop
aaa
jns
clc
inc
and
ds
cld
ss
jmp
cld
je
xchg
pop
xor
push
add
inc
ss
cmp
inc
xchg
ljmp
or
mov
mov
jno
in
mov
arpl
xchg
push
jnp
mov
sti
pop
sbb
lods
and
pop
movsb
add
push
rol
repz
xchg
in
push
std
push
bound
push
or
push
fs
in
sbb
sbb
ficompl
popf
rcl
aad
or
cs
icebp
lret
subb
movsl
push
jg
sub
pop
mov
mov
adc
addb
fldcw
das
mov
sbb
mov
outsl
and
mov
das
mov
scas
mov
sub
fistl
xchg
dec
mov
sbb
rorl
aas
pop
je
rcll
xor
mov
loope
mov
imul
push
psubsb
sahf
notb
lea
jbe
icebp
enter
ret
repnz
stos
xchg
mov
mov
dec
jae
arpl
adc
add
xor
and
sar
ret
lret
repz
stos
xchg
mov
mov
dec
jae
arpl
adc
add
xor
and
sar
ret
lret
repz
stos
xchg
mov
mov
dec
jae
sub
aas
add
aaa
sub
iret
std
neg
jecxz
xchg
mov
arpl
pop
adc
fwait
mov
hlt
dec
in
push
sbb
sub
fcompl
inc
xchg
shll
jle
push
lods
push
frstor
int
std
adc
adc
or
rcrb
dec
mov
subb
pusha
lea
bound
loop
add
adc
lret
inc
mov
insl
mov
subl
pop
test
loop
fwait
cmp
dec
dec
imul
mov
add
leave
int
stc
jmp
mov
dec
test
jae
int
lock
sbb
stc
lcall
xchg
addr16
add
pop
jecxz
dec
jne
popf
cmp
jne
pop
jle
out
mov
lods
xlat
int
mov
xor
mov
repnz
shl
orb
fisubrl
pushf
xor
lods
and
int
mov
js
fiaddl
adc
add
not
out
mov
pop
call
mov
loop
nop
adc
rcrl
mov
mov
mov
push
pop
inc
push
jno
inc
std
std
out
add
pop
in
shrb
mov
fwait
lret
mov
pop
push
pop
popf
dec
xchg
cmp
and
je
jg
dec
ret
push
shll
hlt
and
or
insl
lcall
pop
enter
mov
jg
lcall
xor
sub
cli
sbb
adc
push
mov
ja
mov
jle
push
into
dec
mov
subb
bound
push
frstor
int
std
add
adc
ret
pop
mov
insl
xchg
popf
bound
push
frstor
int
std
add
adc
jecxz
rcll
iret
jp
hlt
jle
fmulp
xchg
pop
sub
and
dec
mov
add
lods
jp
add
in
xchg
popf
es
mov
xor
shrl
in
pop
js
mov
clc
aam
or
mov
and
lahf
dec
cli
loopne
mov
mov
lahf
cmc
sbb
mov
push
in
xchg
insb
mov
into
add
sbb
xchg
call
sahf
xor
repz
mov
cmp
pop
cmpsb
or
lds
dec
pop
sbb
fildll
mov
lock
pushf
lods
xor
inc
jnp
shrb
adc
lcall
mov
cli
insb
mov
xchg
mov
inc
mov
in
outsb
imul
cmpsl
inc
sub
seta
repz
icebp
test
mov
fwait
or
call
ret
out
nop
mov
jae
test
and
fisubrl
jo
popf
xchg
into
loope
pop
pop
pusha
mov
stos
mov
mov
mov
adc
jnp
cli
lcall
adc
ds
into
mov
xchg
mov
jo
cli
mov
out
mov
add
jl
pushf
pop
dec
lods
ljmp
jbe
mov
lds
mov
aas
sti
inc
fsubrp
inc
movl
mov
jbe
mov
aas
adc
inc
mov
adc
fstps
int3
lcall
scas
rcrl
jo
popf
out
mov
push
adc
sbb
enter
subb
aad
test
jecxz
cmp
out
ret
aaa
call
xor
push
repz
dec
sbb
pop
sbb
out
push
ss
push
jecxz
adc
pop
and
imul
addr16
fsts
mov
in
xchg
add
pop
fwait
dec
test
ret
xor
int3
fiaddl
sbb
or
adc
repz
movsb
out
and
add
push
push
push
fstps
push
mov
cmp
scas
lret
push
dec
pop
cmp
scas
movsb
popf
daa
scas
push
mov
sbb
int3
imul
packuswb
adc
inc
sar
lret
inc
ljmp
xchg
mov
sti
lods
mov
or
dec
movsb
fwait
sarb
mov
xor
cwtl
int
mov
xor
ror
add
cmc
push
into
push
xchg
adc
ss
and
imul
fldl
jb
dec
popa
xor
fnstcw
fcoml
out
lods
xchg
xor
sbb
stc
jno
pop
pop
mov
rolb
inc
addr16
push
movsb
ja
cmpsl
mov
imul
popf
jae
or
fisttps
clc
popf
mov
xor
sbbl
xor
ja
test
add
mov
adc
sub
leave
adc
loopne
mov
pop
mov
jge
jnp
mov
mov
ret
mov
xor
xor
hlt
xlat
jmp
sbb
cmpb
mov
fstps
adc
cld
mov
adc
xor
push
arpl
pop
cmp
aam
cltd
mov
jo
call
fnstsw
outsl
mov
xchg
pop
shll
cmpsl
mov
ja
test
cmp
push
in
mov
fidivs
cmpl
adcl
mov
mov
push
jl
and
sub
pop
icebp
sbb
or
xor
push
into
call
rorb
les
add
loopne
fnstenv
sar
sub
push
push
jle
aad
fists
pop
mov
add
sbb
lcall
mov
sbb
repz
repnz
in
test
pusha
or
xor
es
jl
in
mov
xchg
mov
mov
xchg
push
scas
idivb
sub
pop
sub
xor
lret
mov
in
inc
push
loopne
sahf
jge
mov
cltd
push
jecxz
pop
cld
test
fmull
push
popf
dec
sahf
mov
aad
mov
jo
adc
out
cwtl
test
push
stos
inc
stos
sahf
pop
add
lods
int
pop
or
enter
sub
lcall
cmp
jb
jg
jp
and
dec
push
pop
adc
mov
cltd
or
jne
dec
jns
shll
mov
jge
pop
scas
xchg
push
add
mov
outsb
sahf
xor
mov
jmp
cmp
into
dec
dec
dec
pop
xchg
cmp
mov
xchg
jne
mov
adc
sub
std
pushf
lahf
out
setge
lret
aad
jne
daa
fnsave
insb
inc
dec
xor
lcall
dec
mulb
lcall
inc
out
and
cld
pop
pop
add
pushf
fldl
mull
push
mov
xor
xchg
addb
dec
pop
jne
jae
fs
add
mov
pop
and
mov
xor
dec
es
std
sahf
mov
loopne
and
jge
insb
into
aad
inc
sub
jbe
or
in
cmp
repnz
enter
xor
pop
cmp
std
mov
xchg
call
cmpsb
inc
cmp
pop
addr16
insb
js
and
mov
fisttpl
lahf
mov
pop
imul
movsl
jecxz
popf
sub
add
dec
xchg
inc
sbb
and
dec
sub
and
fdivl
dec
push
dec
pop
add
stc
pop
lret
aad
dec
jp
xchg
dec
arpl
cmp
movsl
subb
adcl
loopne
mov
sbb
jle
mov
imul
push
and
push
cmpsb
fdivr
pop
sub
xchg
mov
enter
dec
pop
xchg
inc
push
scas
imul
lret
adc
pop
sbb
std
inc
out
scas
aad
inc
mov
outsb
pushf
cmp
loope
xchg
gs
sbb
adc
mov
xor
push
mov
push
mov
insb
push
mov
int
push
inc
out
or
rcll
push
repnz
push
push
or
xchg
mov
inc
pusha
stc
cmp
ljmp
mov
clc
ljmp
dec
sub
iret
sahf
mov
dec
in
outsl
repz
cs
cmc
cmp
in
stos
mov
cmp
xchg
mov
stos
fstpl
iret
popf
mov
nop
ljmp
and
fsubrl
subb
push
les
dec
lods
dec
popf
or
mov
xchg
and
repnz
inc
inc
xchg
stos
adc
xchg
fcomip
push
push
and
js
dec
test
push
mulb
mov
xchg
cmpsb
mov
sub
mov
sbb
dec
mov
jecxz
ret
jo
stos
int
stc
or
fcomip
arpl
or
stos
fimull
sti
mov
push
bound
sub
mov
inc
movsb
push
ja
add
bound
cs
sub
mov
gs
xchg
lock
mov
cli
lcall
cmp
or
mov
sub
adc
lcall
xchg
jb
or
das
ficoms
xor
enter
xor
mov
lods
fisubs
dec
sub
mov
fxch
out
pusha
movsb
jns
mov
shrb
cli
idivl
les
lock
jae
xchg
je
push
das
pusha
xchg
mov
push
out
mov
xchg
add
cmp
jle
or
das
xorl
test
daa
jae
dec
sbb
gs
mov
pop
cmp
mov
sub
aaa
adc
fcmovne
sahf
add
test
and
dec
repz
cltd
push
leave
xchg
mov
xor
gs
lds
roll
jp
xor
ljmp
mov
mov
cmp
pcmpeqd
scas
pop
jle
or
pop
sti
cmp
es
xorl
stc
jp
loope
in
test
insb
scas
ret
xor
sbb
ja
mov
pop
pop
sbb
inc
and
std
jp
sbb
mov
inc
fcmovnu
out
mov
jnp
xchg
jbe
jns
push
jnp
push
mov
push
cmp
addb
xor
jmp
int3
repnz
xor
mov
mov
and
pop
add
rcl
scas
inc
std
xchg
cmp
lods
leave
inc
ja
mull
or
inc
cmpsl
push
dec
insl
xchg
popf
std
push
or
or
aam
mov
sbb
dec
punpckldq
repnz
test
pop
push
mov
mov
inc
test
mov
sub
loopne
in
popa
dec
mov
sbb
bound
std
aaa
xchg
xchg
sub
fisubl
notl
adc
pop
fnstcw
scas
je
pop
jl
lds
orl
ret
lcall
jnp
inc
shrb
lret
rolb
popf
arpl
into
sub
mov
push
cs
andl
insb
loop
into
aas
cmp
jg
lods
test
mov
call
cmc
and
lds
mov
pop
xor
mov
ffreep
lret
shll
and
test
sub
push
add
mov
out
xchg
loope
mov
addb
inc
lods
sbb
iret
push
or
add
int
mov
dec
xor
lahf
or
pop
outsl
cld
xchg
std
scas
mov
ja
bound
cmp
vpshlb
fcoml
scas
ljmp
add
fistps
push
inc
push
pop
pop
enter
sbb
push
and
inc
push
iret
adc
adc
pop
ret
insb
ljmp
mov
scas
pusha
xor
cmp
push
imul
jl
cmp
mov
sub
insl
lock
arpl
or
mov
adc
in
xorl
dec
es
sarb
mov
inc
pop
cmp
xlat
dec
stos
std
adc
and
lcall
cli
movsl
push
add
je
mov
lret
das
mov
movsb
jno
popa
push
mov
stc
inc
xor
popa
xchg
popa
test
dec
stc
pop
cld
test
push
and
mov
mov
js
rcrb
xchg
mov
mov
out
push
jmp
push
mov
out
xchg
gs
mov
mov
hlt
fs
shl
adc
mov
hlt
arpl
mov
scas
mov
nop
fwait
pushf
test
xchg
fistl
lock
mov
xor
mov
insb
mov
sbb
push
fs
mov
jg
nop
addr16
mov
mov
in
pusha
or
sarb
cmp
cwtl
fisttps
sbb
or
popa
out
push
and
inc
xchg
loopne
dec
mov
pop
fnstcw
addr16
mov
movsl
push
loop
cmpsb
add
lock
pop
sbb
ret
sub
inc
pop
stos
imulb
lret
dec
inc
js
add
leave
jb
fisttpl
loop
push
cmp
shll
and
pop
xchg
pop
adc
xor
mov
inc
loop
mov
lods
xor
loopne
xchg
lock
fsubp
pop
data16
xor
dec
mov
dec
stos
mov
sbb
jb
movsl
sbb
mov
dec
test
xchg
hlt
mov
push
jne
mov
sbb
lret
outsl
mov
pop
mov
add
pop
scas
cmp
aam
push
mov
push
adc
mov
aaa
add
jecxz
pop
mov
mov
sbb
shlb
iret
push
mov
mov
int3
nopl
jo
adc
lods
mov
movl
insb
ljmp
in
aad
fisubs
lahf
push
cmp
stc
in
enter
inc
outsl
xor
adc
mov
adc
sahf
push
popf
mov
mov
xor
xor
call
push
mov
mov
jg
dec
push
out
xchg
call
mov
lods
xor
movsl
lret
outsb
push
test
cmpsb
push
loope
faddl
les
lock
popf
jl
push
testb
inc
jp
jne
jecxz
pop
jbe
out
adc
shl
test
xchg
or
aam
mov
fstpt
add
sub
out
call
add
jb
stc
pop
mov
dec
jg
fwait
xchg
dec
cmc
push
cmp
sub
jae
out
push
mov
movsb
jb
adc
or
das
movsb
aad
cwtl
and
lods
js
je
fsubr
jns
dec
lcall
outsb
enter
rclb
imul
outsl
rorb
inc
adc
test
out
pop
sbb
jb
bound
addr16
sub
data16
lods
out
rcll
nop
dec
dec
cmpsb
dec
xlat
aas
lods
sub
rcrl
fucomip
xlat
adc
jge
cmc
sbb
xor
fcomps
dec
add
xor
mov
stos
fwait
sar
shr
xor
cld
adc
std
lock
xlat
inc
sbb
dec
jae
addr16
jp
rcr
xor
sbb
setns
cs
stc
sub
cltd
iret
add
mov
into
pop
fsubrs
pushf
lds
push
cmp
jno
lock
mov
test
fiaddl
mov
dec
jnp
ss
outsb
mov
push
in
testb
pop
out
addr16
imul
sbb
or
test
sub
jne
dec
sbb
sbb
pop
subl
repnz
and
jl
out
rcrl
mov
inc
movsb
push
mov
in
mov
lds
mov
fsubr
data16
inc
rcr
adc
push
popf
orb
cld
mov
jne
lcall
add
in
or
push
mov
lret
insl
dec
xchg
or
adc
cltd
outsl
cld
jns
xchg
pop
pop
rclb
sub
dec
pushf
loopne
loope
outsb
clc
loope
das
pop
dec
mov
insl
les
jns
pop
cmp
call
push
ret
out
in
test
ss
lahf
cli
imul
mov
fdivrl
outsb
je
lret
dec
jae
jns,pt
lods
jo
mov
or
xor
loopne
insb
xor
or
in
xchg
js
jg
icebp
fstps
adc
scas
jbe
sbb
add
add
jnp
adc
fs
xchg
lret
and
sbb
sub
cmpsb
cmpsl
add
push
js
popf
inc
xchg
xlat
jg
cmp
loop
xor
adc
cmp
push
pusha
xchg
loop,pt
or
into
dec
mov
inc
jno
jecxz
inc
pop
ret
ljmp
pushf
test
aad
test
movsl
dec
fnstenv
sbb
fwait
mov
rcll
ret
jae
add
mov
es
jo
mov
cs
mov
pop
ret
and
pusha
jmp
iret
lods
inc
cli
pop
daa
pop
mov
sbb
cli
cmp
or
push
stos
jecxz
call
inc
bound
xorb
pop
dec
icebp
clc
imul
scas
and
inc
xchg
stc
hlt
xor
sbb
mov
fdivr
mov
pop
jge
push
jle
test
shl
dec
popa
cmp
jl
adc
inc
xchg
int
add
cmovbe
fbstp
or
sbb
imul
mov
in
mov
jnp
in
ret
dec
dec
mov
sub
in
pop
int
mov
cli
jg
xor
pop
push
mov
shll
dec
stc
jge
int
mov
adc
xlat
pop
sbb
jne
cld
lods
aas
or
ret
rcrb
cmpsb
lcall
pop
rolb
sbb
push
xor
outsl
je
sbb
pusha
lahf
push
notb
les
jae
mov
arpl
push
and
out
xor
xor
mov
clc
outsl
push
sub
lods
ja
mov
fcomi
sub
std
xor
inc
sub
sub
es
push
jl
aad
clc
clc
lret
mov
mov
clc
aaa
or
inc
inc
leave
or
cmpsb
xchg
sti
cmp
or
sub
ret
dec
out
stc
dec
add
pusha
repz
in
mov
fisttps
test
decl
subl
adc
sub
xchg
cmpsl
insb
or
sti
xchg
push
jne
out
loopne
mov
mov
pop
dec
lds
adc
pop
icebp
inc
test
out
jp
icebp
cmp
xchg
hlt
pop
cmp
dec
aas
fnstcw
jmp
mov
jg
adc
sbb
inc
popa
sti
test
out
dec
jmp
sub
xor
sbbl
pushf
cmc
xor
mov
aad
movsl
repz
cwtl
mov
xchg
adc
xor
enter
or
sahf
mov
jecxz
rcrl
lds
out
adc
pushf
aad
andb
xor
aaa
lahf
pop
inc
push
inc
xlat
jp
push
cmp
mov
xlat
pusha
mov
mov
mov
fimull
stos
out
cmp
and
sahf
inc
mov
out
loop
mov
xchg
xor
mov
cmp
es
xor
xor
test
jb
pushf
mov
ja
fnstsw
or
cli
xchg
xchg
lcall
cmp
incl
add
dec
pop
bound
bound
movb
pop
xlat
pop
addl
mov
movsl
das
pop
jmp
roll
movsb
rcll
lods
adc
pop
fstpl
arpl
add
sbb
shlb
adc
jp
jl
ret
leave
jno
loop
inc
xor
xchg
mov
sti
xchg
sti
loope
push
mov
cld
ljmp
data16
sbb
inc
or
mov
mov
and
inc
pop
or
or
pop
dec
movb
inc
sub
ret
push
lret
insl
mov
xchg
movsb
bound
jnp
cmp
push
fnsave
cwtl
xchg
imul
lret
lcall
cli
mov
jns
push
inc
sub
stos
cmp
jo
lret
mov
add
xor
pop
insb
leave
sub
mov
ss
repnz
rcl
push
mov
cmpsb
add
repnz
lahf
xlat
or
jbe
js
stc
xor
push
inc
insb
cmp
loop
mov
and
clc
popf
mov
push
popf
cmc
insl
stc
cmp
lret
lcall
lods
pushf
iret
lods
mov
push
mov
mov
rcll
iret
popa
into
and
push
add
loopne
mov
icebp
sahf
add
xchg
adcb
hlt
test
and
fimull
pusha
cmpsb
jmp
movsb
xchg
js
adc
in
out
cld
lea
fs
xchg
and
fdivrs
mov
sbb
stos
je
dec
mov
add
dec
add
flds
fisttps
mov
lea
mov
xchg
bound
cs
cmc
mov
mov
lods
mov
out
mov
push
fisubrs
cmp
jecxz
movsb
bound
mov
mov
mov
cmpb
outsb
iret
pop
aam
sbb
das
sbb
scas
pusha
popa
lods
lock
jbe
pmaxub
das
mov
popa
sbb
or
inc
mov
cli
stc
or
dec
aaa
cs
int
scas
je
xchg
daa
xchg
lcall
sub
data16
push
dec
ljmp
dec
xor
daa
mov
and
test
in
dec
movsb
les
mov
ja
mov
inc
ss
jb
sub
fisubs
lret
jmp
and
fmul
sub
mov
lcall
mov
mov
cmpsl
cs
pop
flds
aas
pop
addr16
ljmp
je
aaa
and
mov
mov
rorb
mov
adc
mov
outsb
xchg
sahf
inc
scas
add
sub
pop
sub
call
and
mov
addps
daa
push
add
lahf
adc
int3
lods
pop
mov
lods
decl
mov
mov
cwtl
out
adc
lods
lcall
rcrl
jg
bound
nop
pop
jns
mov
or
aad
sbb
xor
sti
sub
js
add
loope
add
mov
ds
bound
add
stos
int
sti
icebp
fs
xor
jg
pop
mov
ret
lock
repz
push
out
pop
mov
dec
mov
xchg
pop
push
adc
ret
out
shl
insb
push
pop
rcl
ret
test
mov
pop
fnstenv
rclb
cmp
inc
lea
or
div
sbb
outsl
lods
sar
cmp
loope
inc
std
mov
cmp
incl
enter
inc
sub
pop
jecxz
cld
std
arpl
cmp
sbb
xchg
jmp
mov
pushf
in
fisubrl
dec
dec
pop
call
push
les
inc
sahf
and
xchg
and
outsl
insb
repnz
jb
cmpsb
pop
jle
xchg
mov
dec
xchg
lcall
rorb
mov
sbb
and
adc
sti
scas
and
mov
daa
insb
mov
in
mov
test
mov
jne
cmp
outsb
into
and
mov
rcrb
dec
mov
subb
bound
push
frstor
int
std
add
adc
ret
pop
mov
insl
xchg
popf
bound
push
frstor
int
std
add
adc
ret
int
dec
mov
subb
dec
inc
lods
push
frstor
fnsave
std
add
bnd
pop
mov
in
xchg
popf
bound
pop
inc
lods
and
add
adc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
in
cmc
push
lds
lock
fidivl
fs
xor
rolb
push
lock
mov
cmc
push
lds
jo
add
inc
jne
jne
inc
loopne
lock
loopne
mov
shr
push
int
mov
into
xchg
sub
mov
mov
pop
stc
pop
aam
mov
inc
lcall
aaa
mov
inc
cmp
call
int3
and
sbb
fs
or
cmp
popl
mov
add
jb
in
cmpb
and
cmp
ss
pop
push
xor
push
xchg
xor
push
jge
fdivrs
mov
adc
inc
or
icebp
enter
js
fistl
jo
stos
or
xorl
mov
pop
and
push
enter
gs
mov
inc
daa
movsl
lock
xor
dec
or
jno
dec
pop
inc
mov
jbe
popf
int3
lcall
call
add
inc
in
mov
mov
movsl
adc
inc
insl
push
pop
lock
mov
pop
mov
nop
push
mov
je
jg
dec
xchg
push
xchg
xchg
ss
xor
ja
js
mov
movsl
push
leave
outsl
mov
test
pop
movsl
adc
and
shll
push
cltd
pop
test
fs
test
xchg
xor
jne
inc
loopne
lock
mov
cmc
push
lds
jo
add
xor
jne
inc
loopne
lock
mov
fiaddl
leave
cltd
xlat
xor
add
pop
fsubp
popa
orb
sub
lea
dec
out
mov
jno
dec
cmpsl
fidivl
outsl
daa
stc
sub
push
add
xor
fdivrs
divl
or
popa
push
and
addb
jbe
add
inc
sbb
pop
imul
movsb
test
cs
mov
push
mov
adc
xchg
xor
mov
and
sti
sbb
pop
in
or
mov
adc
jo
push
cmp
fdivr
sbb
add
pusha
nop
sahf
jmp
inc
es
cld
outsb
sar
arpl
mov
and
xlat
adc
notl
inc
mov
cmp
in
pusha
ja
mov
clc
ss
xor
sbb
rep
stos
add
cli
push
das
dec
pop
and
andl
or
dec
and
sub
out
dec
stos
add
dec
mov
fisubs
cmp
lds
xor
or
fnstsw
mov
in
movsl
nop
orb
fcoml
mov
sbb
push
xor
lea
ss
lds
push
jl
dec
add
sar
fisttps
mov
lcall
pop
shll
mov
xchg
adc
clc
dec
les
pop
mov
out
mov
cmp
mov
push
fisubrl
movsl
fimuls
int
push
fdivl
push
inc
or
lock
sarb
in
int3
imul
jns
andl
dec
add
adc
insl
sbb
and
mov
fcoms
fcmovnb
lods
int
enter
fldenv
mov
push
out
mov
dec
rcrl
ror
xor
xchg
xor
imul
dec
roll
fucomp
fmuls
or
lods
pop
faddp
std
push
out
and
push
stos
xor
adc
pop
xchg
mov
in
and
inc
or
icebp
clc
dec
shll
push
adcl
fdivrs
cmpsb
movsl
cld
cld
imul
xchg
lret
dec
mov
push
xor
xchg
divb
cmc
shrb
mov
andb
sub
repnz
inc
jo
cmp
mov
mov
repnz
jo
or
adc
or
dec
js
lds
mov
jo
push
movsl
xor
adc
int
inc
in
ffreep
push
mov
movsb
sbb
ret
mov
outsb
cmp
push
push
mov
test
pusha
dec
lods
fistl
mov
xchg
lea
dec
push
rcrb
pop
pop
mov
movsb
push
test
cld
adc
pusha
hlt
mov
sub
jnp
and
mov
gs
popf
fwait
sbb
loop
jnp
or
mov
push
pop
sub
addr16
and
mov
xor
jb
cmp
xchg
jns
mov
es
jmp
push
loop
in
jae
inc
divl
sbb
pop
or
push
and
sub
fs
mov
and
xchg
fisubl
inc
jmp
icebp
inc
stos
fistps
les
or
mov
mov
dec
jae
in
shlb
js
sub
lahf
cwtl
rcrl
and
xchg
xor
roll
xor
mov
mov
das
push
repz
push
fsubl
cwtl
mov
dec
mov
add
js
push
mov
xchg
outsb
imull
bound
cmpsb
shlb
test
cmc
mov
movsl
loop
push
sbb
arpl
mov
movsw
jl
mov
imul
popa
bswap
cmp
lcall
adc
testl
jge
push
mov
push
mov
pop
loopne
lds
push
fwait
insb
jo
in
xchg
dec
xchg
mov
mov
jb
dec
in
push
dec
ret
pop
jno
loope
aaa
cli
fstp
sbb
fs
push
adc
mov
adc
push
pop
hlt
cs
pop
lea
add
cli
sahf
adc
pop
jge
sbb
lret
out
adc
inc
movsl
sbb
repnz
mov
inc
ret
lcall
lahf
jo
test
iret
dec
jnp
mov
inc
or
fcoml
mov
mov
cltd
inc
mov
push
push
jge
call
and
inc
cwtl
and
leave
or
lods
mov
sahf
inc
lcall
pop
mov
cmp
xchg
adcb
dec
push
xchg
call
jns
mov
jle
sbb
int
add
lahf
mov
push
stos
cs
and
mov
pop
and
mov
push
pop
lea
or
addr16
cmp
negl
lret
dec
mov
add
out
push
popf
ss
push
movl
mov
pop
hlt
and
xchg
lret
icebp
subb
lds
cld
popa
test
xchg
jnp
inc
leave
dec
xor
fcmovnbe
shlb
xor
pusha
scas
jmp
mov
adc
js
divb
out
push
mov
push
cld
and
fildll
cli
inc
cltd
dec
or
adc
pmuludq
iret
fcompl
jne
jmp
nop
add
cmp
stos
adc
aam
scas
ret
scas
xor
imul
lcall
xchg
jae,pt
inc
int
push
outsb
cmp
add
jne
pop
fistl
ds
xchg
enter
cmpsl
les
pop
lea
sub
jae
bound
pusha
fidivrl
inc
nop
sarb
fsubr
in
xchg
out
imull
and
cld
or
xorps
lahf
std
scas
ret
cmp
pop
jae
xor
push
cmp
cld
sub
push
push
sti
push
jae
sbb
fnstsw
pop
mov
lea
fldcw
stos
in
fisubrl
push
jl
mov
cli
adc
mov
movsl
mov
leave
out
daa
add
dec
cmp
xchg
sub
pop
loopne
push
aam
aad
lret
pushf
sub
mov
nopl
bound
jp
popf
cmp
cmpb
push
lods
push
arpl
cmpsb
loopne
lret
xor
cltd
nop/reserved
fidivrs
int
sub
test
ret
xchg
stos
in
xor
rcll
js
and
outsb
in
mov
imul
adc
in
subl
mov
mov
mov
push
mov
popa
inc
shl
aam
xlat
out
stos
lcall
daa
jg
dec
mov
jno
les
jge
adc
add
dec
mov
mov
jb
adc
mov
loop
enter
mov
pop
sbb
scas
add
adc
and
int
jge
push
push
enter
mov
cs
inc
jle
and
movsb
bound
mov
insb
movsb
call
faddp
push
cmc
iret
ds
jne
fistpl
mov
ljmp
test
xchg
jle
pop
shrb
jmp
and
dec
stos
mov
es
mov
outsl
add
xchg
xlat
mov
or
mov
sti
out
jno
xchg
roll
jmp
es
mov
cmp
lahf
xchg
movsb
pop
aad
cmp
cmp
imul
pop
pop
jb
popa
jmp
push
inc
imul
ljmp
jl
jno
nop
mov
test
jae
push
mov
ss
jno
sub
xor
push
int3
fadds
js
push
xchg
cmp
loope
pusha
pop
pop
cmpsb
xor
adc
fs
dec
movsl
and
arpl
xchg
mov
jo
scas
sub
div
stc
xor
push
stos
mov
jb
sahf
and
dec
mov
sub
jecxz
lods
ret
jl
imul
mov
cmp
add
mov
push
sub
pandn
jb
push
jnp
daa
jns
add
jae
and
inc
loope
sub
shr
pop
aam
mov
cmp
pop
xchg
insb
stc
mov
out
roll
sti
xor
xor
mov
xchg
ljmp
lods
fdivrl
xchg
jge
mov
rcl
xchg
dec
jmp
iret
jge
shll
vpcmpeqd
mov
cmp
xchg
lods
aaa
imul
and
cmc
xlat
cld
mov
xor
in
test
test
leave
inc
in
fadds
cli
cmp
cltd
jmp
lea
or
sbb
sbb
mov
add
mov
inc
push
sbb
addl
mov
push
cs
fistps
add
dec
and
lods
cmp
in
cltd
cmp
sti
in
and
lods
or
aaa
xor
arpl
repz
sub
jp
int
jmp
rorb
daa
aad
jns
inc
add
sbb
rcr
inc
loopne
push
pop
and
incl
adc
enter
sahf
inc
out
roll
stos
test
data16
xlat
add
sub
or
mov
mov
push
mov
sub
jge
lcall
fsts
push
push
sbb
or
cmp
leave
cmc
xor
fildl
in
jge
les
in
cwtl
je
stc
nop
and
rep
jbe
dec
push
adc
imul
addb
lods
pop
pop
rolb
inc
or
aas
shlb
or
loopne
mov
inc
xor
cltd
mov
rcrl
pushf
mov
mov
repnz
jl
xor
mov
adc
or
jmp
adc
lahf
push
iret
push
cld
push
jne
cmp
cmpsl
sbbl
and
add
inc
lahf
mov
fwait
mov
cmp
lret
adc
addr16
mov
adc
add
push
xchg
into
aam
sub
mov
aaa
call
sbb
mov
sahf
lock
addr16
fwait
sub
pop
lret
push
cmp
js
and
shlb
cld
fs
mov
fxch
xchg
in
jo
push
push
pop
popf
data16
mov
sub
push
fstl
mov
fldt
orl
notb
ficoms
movd
andl
mov
push
es
out
mov
mov
sbb
pop
sub
mov
mov
xchg
push
jle
outsl
lods
jl
adc
cwtl
inc
ljmp
ss
jle
out
addl
xchg
mov
mov
mov
push
mov
imul
inc
mov
dec
loope
cltd
fwait
sarl
xlat
sub
loop
lods
lret
xorb
cltd
ret
add
movsl
por
ds
and
rorl
push
mov
shlb
mov
in
loopne
lret
imul
andb
test
cltd
xor
cmp
adc
mov
or
mov
pushf
cld
movsl
xor
in
or
cmp
fimuls
mov
pusha
jmp
lock
jle
xchg
or
push
mov
ret
mov
ret
jns
or
add
adc
push
add
in
xor
push
sbb
jno
stos
dec
xor
outsb
iret
test
lock
cmc
mov
dec
lahf
movsb
xchg
fists
pop
cmp
les
rcrb
cmpsb
pop
xchg
or
jg
test
dec
pop
xor
test
popa
cwtl
lods
inc
nop
nop
cmp
loop
nop
push
jb
pop
gs
cmp
outsl
icebp
stos
and
mov
cmpsb
xchg
icebp
or
pop
rcr
js
aaa
xor
test
add
rorl
movsb
out
mov
lret
das
jecxz
mov
inc
and
push
sub
fstp
rcrl
fwait
inc
jb
scas
sbb
into
and
sub
or
dec
add
inc
dec
in
sub
xor
loopne
pop
inc
mov
pop
xchg
pop
aas
mov
sbb
jb
xor
stc
insl
cmp
rolb
push
mov
incl
push
pop
mov
mov
xchg
hlt
mov
daa
push
push
xor
cmp
cmp
inc
int3
mov
in
cmp
js
xchg
lock
and
inc
sub
fldenv
jno
xchg
cmp
shl
imul
jge
daa
dec
rcll
inc
out
adcb
inc
jnp
loop
in
hlt
jg,pn
sbb
andb
cmp
inc
cltd
cmp
hlt
add
jl
loop
jbe
fsubl
xor
fstl
xor
aaa
push
inc
dec
arpl
sub
enter
rclb
iret
and
jno
das
pop
sbb
divl
push
lret
fwait
push
testb
repnz
sbb
sub
push
mov
test
pushf
cmp
jp
mov
scas
adc
inc
out
push
and
rep
les
inc
fists
pop
rorl
loope
push
loope
jne
insl
imul
jge
pop
or
mov
insl
fwait
ss
mull
stos
in
fsubrp
xor
lret
fidivrs
insl
out
lcall
test
shll
daa
adcb
dec
mov
fbstp
fs
movsb
mov
push
xor
fiadds
in
ret
shr
push
outsl
push
cwtl
or
dec
xchg
add
mov
fwait
loopne
pushf
sub
jge
jb
cmp
xor
ret
mov
and
pop
test
pop
js
jl
add
add
test
cmp
cltd
dec
push
push
push
arpl
bound
xor
mov
or
push
das
pop
add
inc
testb
jmp
cmp
push
pop
insb
inc
gs
test
sbb
and
sub
js
in
hlt
testl
in
adc
and
jbe
lcall
xchg
int
sahf
jle
or
adc
fstpt
mov
lret
push
int3
xor
adc
xchg
fwait
in
lret
test
test
sahf
dec
mov
dec
lcall
arpl
mov
jg
fistpll
addr16
push
dec
notb
mov
fstpl
push
decl
ja
dec
mov
adc
mov
jg
aad
add
jne
out
inc
dec
ret
or
out
enter
jle
je
xor
mov
imul
and
ljmp
xor
xor
cmp
pop
xor
jecxz
jp
sbb
xchg
lcall
xchg
lret
jno
jbe
lock
sbb
pop
add
and
icebp
data16
inc
cli
rcr
push
rorl
ss
sub
setno
scas
loopne
lret
imul
jp
sbb
jno
in
xchg
lds
call
lods
pushl
and
mov
and
add
xor
repnz
nop
mov
sbb
adc
and
jecxz
movsb
cmp
push
cmc
outsb
push
push
sbb
mov
pushf
jmp
cld
rorb
call
dec
sub
fldcw
pop
in
ficompl
aad
lods
pop
xchg
or
xchg
push
fcmovnb
adc
jge
inc
loopne
mov
mov
out
jb
enter
pop
imul
mov
insb
cld
lret
hlt
pop
or
lcall
pop
scas
dec
aas
into
inc
shrb
add
add
push
sub
jo
mov
jp
push
mov
mov
rcrl
fxch
fcoml
push
inc
push
pop
or
add
ret
mov
jp
sub
insb
mov
int
inc
sbb
pop
fs
jb
adc
out
xor
call
mov
adc
push
fwait
pop
addr16
das
popf
scas
add
hlt
call
adc
mov
enter
pop
out
addr16
jo
cmp
inc
cwtl
stos
push
movsl
stos
roll
mov
popf
jno
std
cmpsl
repnz
xor
pop
in
jno
fcoms
cmp
bound
push
dec
outsb
sub
les
rorb
loop
push
inc
mov
push
or
int3
adc
push
js
fsubrl
fwait
ret
sbb
mov
mov
outsl
loope
add
sub
mov
enter
sbb
adc
or
jbe
cmp
test
xchg
decb
cld
sub
ret
andb
add
daa
cmp
cmp
add
sti
imul
push
sub
push
popa
jns
fisttpl
dec
mov
dec
xchg
xor
sbb
jg
int3
rcrl
or
dec
mov
es
cmp
loope
inc
rclb
hlt
in
mov
ret
enter
sarb
iret
mov
adc
pop
and
int3
dec
sbb
cmc
jle
push
pop
and
inc
cld
in
xchg
je
std
neg
mov
cmp
mov
cltd
ret
inc
test
popf
aas
sbb
lds
iret
stos
mov
mov
out
inc
fldcw
mov
mov
mov
jae
adc
mov
mov
sahf
andb
mov
add
lcall
aad
mov
fimuls
inc
pop
mov
scas
adcl
ficomps
adc
and
out
cmp
fldl
movsb
adc
shll
dec
jbe
pop
adc
imul
inc
mov
out
mov
neg
mov
push
pop
mov
call
or
or
mov
cmpsb
out
lods
fisubs
loopne
outsb
in
add
ds
cmp
int3
sub
jno
repz
xchg
out
or
inc
mov
faddp
sbb
jo
sbb
inc
fwait
ret
cmp
daa
test
ror
push
test
fstl
or
arpl
cmp
imul
mov
or
adc
dec
enter
shrl
sbb
or
push
mov
mov
stos
add
xchg
push
fiaddl
stos
daa
dec
fldenv
push
mov
icebp
adc
mov
sbb
xlat
inc
inc
std
cli
mov
mov
and
repz
bound
xchg
inc
cmpsb
or
lods
sbb
inc
movsb
stos
pusha
and
aaa
mov
pop
ss
outsl
inc
jle
es
testb
aas
or
or
lea
rorl
dec
aaa
lret
pop
jle
fisttpll
xchg
fcomps
push
decb
xchg
inc
jmp
mov
or
movsl
leave
sar
add
and
cmp
jp
mov
mov
xchg
pop
int
jle
push
negl
testb
push
and
rcrb
cmp
leave
sub
push
sub
jae
clc
add
into
js
mov
xchg
call
jno
dec
cmp
dec
fdivrl
adc
inc
pop
xchg
sub
dec
inc
in
mov
pop
shl
add
or
mov
movl
sbb
out
int3
fldenv
and
sbb
nop
xchg
pop
push
mov
mov
or
xchg
dec
add
mov
das
sti
jb
xor
pushf
loopne
dec
adc
loope
jg
xchg
js
in
mov
ja
cmp
xor
out
fwait
xor
subl
mov
push
int
loopne
movsb
inc
adc
adc
shll
ficomps
xor
pop
lret
push
jns
popl
adc
test
jg
mov
lahf
add
add
popf
into
mov
out
loope
hlt
fadds
xlat
add
push
mov
pop
inc
loopne
pushf
and
and
arpl
cli
mov
inc
cmp
adc
insb
call
and
pop
pushf
in
pop
pop
adcb
clc
adc
stc
lds
orl
repnz
rclb
int
pop
xor
scas
pop
nop
aam
adc
inc
test
cwtl
roll
lock
into
sahf
push
mov
push
js
sahf
js
mov
aaa
push
add
push
sbb
cwtl
sbb
dec
xchg
iret
sahf
push
xor
in
ret
inc
xor
fwait
cmp
xlat
jne
fisttpll
dec
dec
or
shrl
mov
stos
pop
mov
jecxz
inc
mov
mov
sub
mov
lods
int3
sbb
sub
mov
pop
jnp
mov
push
and
ljmp
data16
cld
adc
push
jbe
aaa
ret
adc
cmp
jno
sub
cmpsl
push
adc
js
daa
and
repz
pop
mov
dec
lods
stos
insb
xchg
in
lds
and
popa
sbbl
fldcw
enter
jnp
push
out
mov
fdivl
pop
leave
lds
les
fstpl
inc
add
mov
cmp
movsl
pop
imul
fldt
mov
scas
and
or
jae
leave
fisttpll
sete
inc
scas
and
push
push
dec
mov
mov
int3
mov
scas
xchg
mov
cmpsl
ret
sti
mov
sub
nop
cwtl
jae
imul
loopne
dec
int3
add
jo
xor
xchg
stos
push
mov
push
bnd
jae
jmp
pop
adc
cmp
push
iret
or
jo
add
xor
jne
inc
loopne
lock
mov
cmc
push
lds
jo
add
xor
jne
inc
loopne
lock
mov
cmc
sbb
sbb
jo
add
xor
jne
inc
loopne
lock
adcb
in
notl
pusha
aad
cmpsl
add
xor
loopne
xchg
mov
dec
mov
into
mov
scas
repnz
aas
and
dec
dec
pop
pop
sub
aas
ds
pop
push
out
dec
into
scas
scas
mov
out
outsb
jg
popa
dec
pop
pop
das
inc
pop
ds
pop
push
xor
into
sbb
mov
mov
outsl
outsb
adc
cmp
aas
arpl
pusha
insb
insl
scas
popf
fbstp
and
cli
mov
pop
lea
xchg
es
imul
test
inc
jecxz
test
notl
inc
cmp
addb
cs
testl
movsb
pop
fsubs
cmpsb
into
ds
jge
lret
das
cmp
push
sarb
mov
cld
mov
stos
stos
xchg
mov
mov
mov
popf
pusha
jp
sub
pop
lret
mov
add
pop
push
add
push
es
lret
in
mov
mov
pop
pop
fdivrl
ds
push
push
push
pushl
fidivrs
and
data16
mov
dec
stos
cs
insl
dec
push
ud2
fsubr
dec
into
mov
scas
scas
sti
mov
popf
outsb
in
jle
dec
inc
pop
dec
and
femms
jnp
popf
ljmp
ror
xlat
pushf
enter
pop
jg,pt
sub
sub
push
pop
jnp
pop
push
out
mov
mov
fdivp
jecxz
in
cli
push
and
xor
pop
inc
pop
aas
jp
pop
jno
stos
int3
mov
mov
mov
sahf
outsl
outsb
jg
dec
dec
pop
pop
das
cs
ds
pop
push
out
out
dec
into
scas
scas
mov
sahf
outsl
outsb
jg
dec
dec
pop
pop
das
cs
ds
pop
push
out
out
cmp
jecxz
rclb
add
fsubrl
into
in
push
cmpb
lock
mov
ja
jmp
lahf
jns
rcl
fildl
lcall
cs
stos
fisttps
dec
cmc
jae
pop
ds
mov
cmp
jecxz
jmp
sti
push
imul
mov
ds
ss
repnz
push
repz
pop
pop
jae
pop
lret
nop
and
daa
leave
rol
jle
call
insl
xchg
fimull
movsb
lcall
cld
mov
repz
pop
popf
sub
xor
icebp
aam
pop
mov
adc
aad
loope
dec
pop
aad
insl
in
lds
test
adc
stos
mov
js
push
int3
fdivp
jae
push
mov
mov
dec
cmp
and
adc
fdivs
aas
push
mov
mov
bound
aad
sub
std
filds
cmpsb
pop
aam
loop
js
mov
mov
jae
daa
adc
sub
adc
mov
xor
fsubrl
adc
inc
pop
jg
pusha
sbb
ds
ret
adc
dec
lea
jmp
imul
or
adc
jmp
dec
fldenv
mov
inc
cld
mov
sbb
addr16
sub
mov
add
fstl
mov
and
sbb
inc
les
mov
stc
loope
aaa
add
adc
pop
lret
stos
and
cmp
sbb
jo
push
pop
or
jb
leave
pop
fs
popl
push
pop
sbb
jp
xor
sbb
cmpsb
jl
dec
pop
test
xchg
pop
subb
outsb
push
jle
push
mov
mov
pop
in
lret
notl
cmp
adc
pop
xlat
pop
mov
push
lret
sub
mov
jle
shlb
stos
aas
cs
lea
jmp
mov
addl
xchg
jns
imul
dec
mov
int3
hlt
das
roll
xchg
jb
sub
lahf
cmpsl
adc
cmc
adc
leave
aad
in
pop
lcall
inc
inc
or
leave
pop
lock
xor
outsb
into
push
and
das
arpl
ret
popf
pop
andl
pop
nop
cli
mov
pop
xor
cmp
mov
shlb
mov
pop
mov
lret
popf
sbb
les
out
shll
int3
imul
repz
shrl
sub
sbb
push
sahf
and
cmp
popf
ret
cmp
ret
mov
cmpsl
dec
call
xchg
mov
mov
dec
lods
pop
lahf
aaa
dec
iret
insl
aad
test
loopne
push
cs
jmp
addr16
mov
sbb
dec
divl
icebp
lods
pop
pop
outsb
xor
sti
mov
sahf
cmpb
shr
inc
repz
dec
mov
ret
pop
jo
adc
leave
fdivl
dec
xor
xchg
arpl
in
std
jns
xchg
std
adc
sbb
sub
add
xor
mov
cmp
loope
call
cmp
sbb
cmp
xchg
sub
fs
inc
mov
jmp
mov
negb
inc
xchg
ret
stos
cmp
les
cmc
in
pop
mov
inc
mov
ja
aam
inc
xlat
jbe
push
sar
stos
shl
mov
sub
mov
mov
shlb
out
into
ljmp
jl
rcrl
adc
sub
testl
stos
dec
and
sbb
xchg
js
stos
sub
pop
xlat
mov
adc
inc
sbb
push
rclb
movsb
rcrb
cmp
add
sub
gs
mov
outsb
mov
or
mov
sub
ja
and
dec
xchg
mov
pop
stos
ss
sti
pop
dec
pop
pop
int3
bound
and
mov
andb
pop
fsubrl
je
call
imul
stos
ret
btc
adc
jbe
jnp
out
iret
dec
je
mov
lods
and
push
jmp
enter
inc
jl
imul
mov
pop
adc
ja
shlb
int3
xchg
mov
sti
jg
jge
jb
xor
out
cmp
push
mov
or
or
pop
stc
iret
sub
popa
inc
mov
subl
pop
xadd
xor
jl
or
dec
aad
gs
repnz
mov
sub
cwtl
mov
es
add
inc
add
stos
dec
push
push
push
pushf
aas
nop
mov
sbb
imul
repz
mov
pop
sti
xor
lea
adc
mov
dec
push
mov
jle
jecxz
fwait
subb
out
inc
jb
mov
mov
pop
push
ret
cmp
dec
in
or
add
jle
jl
adc
pusha
orl
jb
aaa
andb
out
sbb
fbstp
shlb
mov
iret
mov
repz
add
mov
fisttpl
pop
mov
jae
lea
hlt
mov
inc
add
cld
mov
js
lock
aaa
lock
loop
sbb
mov
mov
ret
scas
fstpt
dec
dec
clc
adc
ret
xchg
in
push
inc
divb
icebp
fildl
repz
dec
and
push
xor
and
ret
fcmovb
adc
jae
cs
mov
jge
rorb
sbb
aam
pop
out
imul
mov
das
pop
fs
jnp
push
cmp
sahf
push
mov
insb
dec
addr16
xchg
and
push
in
shl
clc
pop
and
mov
fsts
mov
in
imul
and
inc
xor
int3
mov
lahf
push
xor
in
cwtl
imul
or
lock
inc
pushf
into
and
pusha
mov
enter
ljmp
adc
push
es
or
stc
and
inc
mov
dec
repnz
push
adc
mov
push
xchg
and
out
pop
jo
pop
pop
push
addr16
jl
bound
xchg
push
pop
or
add
sub
pop
mov
mov
in
mov
dec
cmp
ss
lods
insl
nop
xchg
into
in
inc
cmp
movl
or
mov
push
aam
cmp
mov
rcrl
fxtract
in
insb
repz
ja
jle
out
mov
lret
stc
adcb
in
xchg
icebp
push
int
nop
in
roll
jb
xchg
iret
xchg
mov
cmp
loopne
adc
lahf
add
insl
dec
je
jne
fnstcw
dec
pop
and
ljmp
pop
stos
xor
in
dec
sahf
or
push
pop
scas
cli
aam
xor
repz
cwtl
add
leave
xacquire
fcomi
rclb
xorl
test
dec
mov
jecxz
mov
data16
push
jo
jecxz
dec
lcall
jo
aas
cli
mov
mov
sub
shll
mov
add
je
idivl
test
cs
mov
dec
mov
sbb
add
dec
mov
adc
fcomi
repnz
jo
dec
mov
shr
lock
scas
sub
push
clc
out
in
mov
xor
sub
push
arpl
xchg
shr
xlat
sub
leave
insb
ljmp
sbb
repz
xchg
test
push
fistpll
dec
dec
shll
dec
xor
test
pop
xchg
jge
xchg
pushf
outsb
jnp
push
push
pop
hlt
sub
lcall
jnp
adc
xor
jno
lret
ror
repnz
sahf
xchg
xchg
sbb
loope
jecxz
dec
in
popa
add
fwait
xchg
sbb
xor
jns
fnstcw
fnsave
out
cmp
mov
jnp
xor
mov
sub
or
adc
xchg
mov
jo
out
inc
mov
xlat
add
or
lods
sbb
xor
movsl
cmp
cmp
pusha
subb
jno
add
pop
inc
sub
or
movsb
push
in
lar
cmp
add
jno
cmp
into
or
xor
out
mov
mov
pop
fldcw
dec
ljmp
xorl
adc
mov
mov
add
sarb
inc
push
out
mov
int
sbb
mul
or
xor
dec
jb
jbe
pusha
imul
xchg
std
push
icebp
push
das
mov
pop
test
gs
int3
jp
inc
and
pop
lods
cmp
pop
sub
mov
inc
leave
mul
push
popf
mov
cmp
dec
outsb
test
dec
popf
cmp
popa
or
xor
dec
cmpb
mov
stos
adc
sahf
rolb
add
xorb
push
mov
xchg
jmp
cmp
push
jbe
es
pushf
inc
or
jns
lcall
out
or
cmpsb
cmpsb
fwait
lds
aam
out
jmp
push
bound
daa
in
dec
and
adc
add
jbe
push
jmp
enter
je
pop
test
fcmovbe
jbe
cmp
or
loopne
setb
xchg
movsb
ret
nop
insl
rorb
xor
jp
fstps
shlb
cmpsl
out
xor
mov
inc
xor
push
outsl
sub
push
inc
inc
in
push
cmpsb
jmp
leave
jp
mov
leave
and
loopne
adc
adc
decl
xorb
ja
bound
bnd
mov
inc
jbe
xor
xchg
dec
mov
adc
imul
xchg
xor
ja
adc
push
add
ret
out
scas
fwait
xchg
xor
les
sbb
out
push
ret
out
mov
mov
mov
aaa
mov
stos
mov
ret
dec
popf
dec
or
sbb
and
dec
xor
pusha
mov
jmp
jbe
pop
mov
cmpsl
xlat
cltd
add
jb
daa
out
push
iret
movsb
and
aaa
mov
aas
test
mov
ret
test
xchg
aas
addr16
jne
mov
push
jge
push
cmp
xor
inc
mov
or
add
icebp
mov
xor
testb
mov
inc
push
mov
clc
into
mov
cli
adc
lds
pusha
icebp
xor
xor
mov
or
dec
out
jae
xor
add
pop
ret
loopne
or
fnstsw
push
mov
js,pt
daa
mov
loopne
sub
add
dec
jecxz
mov
jae
add
xlat
xchg
movsl
sbb
imul
insb
sahf
mov
bound
ja
ret
cmp
fwait
add
mov
add
lret
imul
xchg
mov
daa
sub
jmp
or
adc
ds
fmull
xor
clc
inc
in
jae
popa
andb
and
pop
jmp
add
mov
mov
paddd
fidivl
das
aam
jbe
andb
jae
fsubrs
sbb
sbb
inc
mov
add
dec
clc
repnz
aad
inc
fwait
rcl
sti
pushf
aaa
cmp
xchg
add
sub
sub
test
ror
inc
pop
jmp
fsubs
aas
mov
es
push
out
scas
push
popa
push
callw
arpl
hlt
gs
call
push
test
addr16
lcall
lcall
jle
enter
popa
aaa
sub
sbb
push
push
repnz
cltd
xchg
and
jbe
imul
cmp
and
and
inc
inc
in
or
cld
xchg
sub
sbb
dec
sub
jae
movsb
popa
add
mov
dec
pop
jp
or
adc
data16
mov
pcmpeqb
push
sub
xlat
int3
mov
aad
cmp
xor
aam
inc
pop
add
jb
jns
ret
mov
scas
inc
enter
loop
pop
ret
ficompl
repnz
cltd
lret
cmp
xor
sub
push
lcall
or
xchg
int3
mulb
push
mov
push
leave
or
insl
mov
mov
ffreep
pop
je
pop
fs
dec
add
or
pop
leave
add
mov
jb
fbstp
inc
loop,pt
pop
pop
ficoml
push
jl
inc
loopne
andl
xchg
push
sub
adc
jo
fldt
dec
mov
add
fsubrl
xchg
pop
inc
loop
int
inc
bnd
stos
mov
push
or
or
iret
in
jb
mov
bound
pushf
nop
cmp
lret
iret
mov
jnp
int3
lods
mov
mov
sbb
xchg
imul
icebp
cmp
outsl
es
test
sarb
fnstenv
push
ficoms
fisttpll
jl
ljmp
rorb
jp
repz
sti
testb
mov
in
add
cmpsb
or
popf
push
jbe
incl
push
adc
push
mov
xlat
mov
push
scas
xor
mov
cmp
xchg
xchg
push
push
movsl
movsb
inc
jl
andl
in
into
scas
pop
mov
push
sti
sub
cmp
inc
dec
add
xor
pop
pop
test
push
mov
xchg
adcb
sub
push
cmp
push
popf
mov
pop
sub
mov
mov
outsb
xor
in
arpl
add
inc
loope
dec
mov
popf
das
or
in
stos
dec
mov
out
cmpsl
in
sub
ret
dec
inc
pop
push
imul
inc
and
pop
divb
jo
mov
sbb
int3
in
fnsave
les
pop
adc
daa
data16
mov
push
ret
xor
je
aad
out
add
jno
push
cmp
cli
mov
inc
cwtl
sysexit
dec
lret
cmpsb
sub
sbb
mov
push
int3
mov
mov
shr
inc
icebp
imul
push
pop
aaa
pop
pop
out
jg
insl
insb
push
dec
or
loopne
or
int3
inc
fists
jnp
aam
loope
lret
mov
dec
enter
lds
cltd
mov
cmpsl
fidivs
sbb
lea
pop
mov
je
mov
push
jmp
mov
test
xor
push
or
mov
ret
or
sub
cmp
in
mov
shrl
dec
pushw
mov
sub
inc
jge
cmp
dec
mov
push
mov
mov
dec
dec
mov
push
xlat
jle
push
loope
es
inc
repnz
inc
fldl
push
arpl
int3
adc
sbb
les
test
imul
imul
shll
xchg
aas
and
xchg
dec
cs
out
jge
pop
or
sbb
lods
les
popf
cmp
std
mov
cmc
cmc
xlat
xchg
sahf
mov
mov
sub
outsb
dec
fstl
std
repnz
scas
jecxz
movb
cmp
stos
popf
movsl
test
cmp
or
add
cmp
dec
or
test
test
jle
and
mov
js
insb
pop
hlt
push
scas
negb
std
and
mov
cmc
pop
inc
movsb
add
loop
sbb
nop
xor
je
jecxz
dec
jbe
js
in
mov
or
test
sub
jns
pusha
out
push
loope
mov
cmp
sub
pop
sarb
sub
shlb
pop
icebp
fs
dec
sub
popf
icebp
aad
add
or
cmpsl
cmp
or
jne
stc
fnstenv
loopne
mov
jle
cmc
cmp
bound
mov
dec
test
pop
insb
push
cmovbe
test
ds
aad
add
jae
sbb
add
sar
stos
cltd
rcll
mov
dec
test
mov
mov
stc
dec
lahf
in
pop
pop
ret
rolb
lret
cmp
cmpsl
jbe
jge
mov
inc
jg,pt
lock
pop
loope
xlat
shll
mov
das
or
adc
mov
loop
cld
adc
mov
jl
mov
or
fldcw
pop
je
mov
out
push
rorb
pop
loop
movsb
sbb
xchg
int3
in
push
mov
mov
jle
stos
add
mov
cmc
lds
adc
int
xchg
in
ret
in
cmp
adc
inc
aad
push
pop
pop
pop
fsubrl
ret
int
scas
fildl
nop
push
push
jmp
lea
jmp
mov
add
push
mov
xor
int
cwtl
dec
outsl
jbe
scas
sbb
and
xchg
sbbl
cmc
insl
or
popf
call
mov
cmp
imul
loope
add
decl
inc
pop
mov
lret
fdivrs
pusha
stc
push
pop
mov
mov
mov
sub
xchg
pop
mov
scas
movsl
mov
push
test
jmp
xchg
mov
negl
testl
push
lea
push
push
and
push
stos
adc
and
xlat
dec
dec
and
jge
imul
mov
xchg
push
sbb
cmpsl
outsl
push
pop
repz
iret
push
mov
ret
inc
cwtl
out
dec
test
cmpsb
das
jno
pop
jnp
fdivrp
cmp
outsb
pop
cmpb
dec
xchg
fwait
add
mov
add
xchg
xor
pop
or
stos
mov
lea
pushf
pop
fldln2
jg
push
stc
push
out
pop
daa
loope
jl
push
cmpb
sbb
cmpsl
adc
outsb
int
xlat
mov
cmp
int3
rcrb
or
add
mov
jp
jp
js
and
pop
mov
add
xchg
pop
sub
popf
and
and
inc
lods
and
lea
lods
mulb
scas
mov
sahf
inc
dec
psubusw
mov
mov
jp
lods
into
pop
mov
cmp
mov
and
mov
cmpsl
pop
rcll
mov
fs
mov
cmp
addr16
popa
push
incl
arpl
daa
xlat
cmc
sbb
bound
jno
mov
mov
mov
lret
jge
fbstp
jp
push
mov
cmp
lock
fbld
add
adc
mov
push
mov
jecxz
cs
cmp
mov
in
inc
mov
shrl
lcall
leave
xor
call
es
mov
xorl
test
loop
lds
mov
cmp
xor
gs
addb
jns
les
sub
mov
ffreep
cs
cmpsb
aaa
push
fiadds
jmp
lods
sub
fbld
aad
insl
lea
xchg
cld
leave
dec
add
pop
ret
and
pop
fisubrs
movsb
das
xchg
pop
jno
out
lods
enter
dec
dec
dec
pop
loop
notb
scas
cmpsl
jns
loopne
dec
adc
mov
loope
xlat
lea
xor
pop
inc
push
adc
pop
mov
or
inc
add
mov
adcb
mov
xor
ror
or
jp
mov
leave
sti
sbb
push
adc
cmp
stc
fmuls
inc
orb
sub
mov
call
daa
sub
stos
sbb
lds
fisttps
jecxz
call
cmp
divb
fnstcw
mov
mov
pop
popa
shll
int
scas
int
das
adc
scas
lods
fucomp
lods
aam
jno
cmc
push
adc
negl
pushf
test
push
ret
fxch
fstpt
cmp
mov
bound
sbb
jae
jg
xchg
lret
and
dec
jbe
inc
lret
ds
pushf
std
xor
inc
xor
int3
xchg
or
push
test
sbb
fildll
lret
and
ja
arpl
jge
add
sub
clc
jmp
jb
adc
cmpsb
push
push
and
jae
in
fmull
rolb
xlat
jns
mov
lea
sarl
add
sub
jnp
push
push
cmpsb
mov
and
push
fistpl
in
or
in
sbb
gs
inc
js
push
cmp
or
mov
xchg
lock
fsubs
dec
gs
mov
mov
inc
mov
lods
leave
xor
les
aas
lret
in
dec
adc
mov
iret
sti
xor
inc
or
imulb
or
xchg
dec
fldt
insl
cmpsl
arpl
aaa
dec
cmp
push
iret
or
or
bound
cmp
jg
and
enter
sub
scas
jb
mov
sbb
sbb
inc
xchg
mov
shll
movsb
je
xor
dec
push
sahf
pop
jno
ret
fadd
std
inc
data16
pop
in
push
icebp
nop
adc
test
mov
xchg
inc
insb
in
outsl
xchg
imul
mov
sahf
outsl
outsb
jg
dec
dec
pop
pop
das
cs
ds
pop
push
out
out
dec
into
scas
scas
mov
sahf
outsl
outsb
jg
dec
dec
pop
pop
das
cs
ds
pop
push
out
out
cld
scas
scas
mov
sahf
imul
inc
dec
pop
pop
das
cs
das
push
imul
sar
inc
into
neg
scas
scas
scas
mov
outsl
outsb
adc
dec
pop
sub
mov
lock
loopne
out
ljmp
loope
frstpm(287
dec
out
std
rorb
add
add
add
add
add
adc
jnp
or
cmp
add
push
add
add
lahf
add
add
add
pop
add
push
add
push
add
clc
add
xor
lret
add
add
lret
add
add
push
mov
add
add
add
mov
rolb
add
add
add
sub
sahf
add
add
add
add
push
add
add
add
add
jl
or
lahf
add
add
add
add
add
add
ljmp
add
jecxz
fiaddl
ljmp
add
clc
add
push
add
add
add
add
daa
add
ljmp
add
add
pushf
add
add
add
add
add
add
add
add
fiaddl
flds
incl
test
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
sbb
sbb
rolb
mov
add
cltd
add
add
add
add
outsb
add
add
add
add
pop
add
roll
jb
push
add
int3
add
add
add
add
add
add
add
fildl
verw
cmp
mov
add
inc
add
flds
fiaddl
flds
das
add
add
adc
add
add
and
aad
pop
add
add
insl
add
add
add
add
push
add
add
jp
mov
add
add
flds
dec
add
add
add
add
add
lock
adc
jb
add
jl
pop
add
test
sub
add
flds
jp
scas
add
add
lds
bound
add
add
adc
add
add
add
push
add
add
add
add
add
add
add
add
flds
sub
and
pop
add
add
add
add
add
add
add
adc
jl
and
sbb
sbb
or
jl
outsl
add
jb
inc
add
add
sbb
bound
stos
add
pop
add
add
xor
push
add
flds
fadds
jae
flds
mov
fiaddl
fiaddl
pop
add
and
roll
add
add
inc
add
add
add
add
cmp
scas
add
add
sbb
flds
addb
add
add
add
add
add
add
add
add
add
add
imul
add
ss
add
fiaddl
aad
data16
add
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
add
imul
add
add
popa
add
add
add
inc
add
push
add
jmp
adc
imul
add
add
add
lcall
add
add
add
add
jne
inc
add
add
add
dec
add
add
add
xchg
add
add
int3
add
add
or
fiaddl
bound
add
add
add
add
lahf
add
dec
add
int3
add
add
add
add
rolb
add
add
add
add
add
inc
add
inc
add
iret
add
add
add
add
subl
fucomip
lods
jmp
lret
shr
jg
fbstp
sbb
adc
inc
mov
xor
lret
and
and
repz
dec
stos
inc
push
rolb
sbb
dec
pushl
lods
mov
xchg
sbb
cltd
idivl
add
jne
cs
sub
fdivrs
push
cmc
lahf
pop
fstpl
push
xchg
repz
mulb
loopne
push
xchg
pop
lods
fsubrs
xor
lods
add
dec
xor
ret
jb
add
mov
mov
mov
add
add
repnz
loopne
and
lahf
xlat
shrl
cld
sbb
push
cmp
jl
sbb
outsl
iret
pop
mov
cmp
dec
xor
sub
inc
ja
int
pop
iret
add
out
in
das
push
test
out
frstor
in
out
jno
mov
and
mov
shlb
ret
fwait
cmpsl
fisttps
push
sbb
xlat
testb
imul
sahf
push
push
xchg
push
loopne
js
repnz
fsubrl
adc
push
rcll
hlt
subb
std
insb
lret
out
scas
stos
mov
pusha
in
les
mov
mov
dec
daa
adc
into
mov
adc
mov
pop
fidivs
inc
xor
gs
int
dec
sub
iret
jnp
fsubs
cmpsb
mov
jnp
sub
pop
ds
or
jne
dec
jns
mov
mov
and
in
sbb
cli
or
flds
rcr
imul
jnp
inc
or
nop
je
addb
cmp
xor
outsb
out
xchg
add
nop
mov
and
cli
inc
sbb
dec
sbb
sbb
dec
sbb
adc
pusha
add
jmp
sbb
adc
jp
jmp
mov
mov
add
pop
ret
pop
movsb
popfw
pop
mov
vpcmpgtd
stos
sub
add
sbb
in
mov
mov
in
dec
call
or
sbb
mov
fs
inc
push
std
mov
xchg
push
nop
adc
test
in
mov
lods
aas
xchg
mov
bound
inc
mov
inc
daa
jg
xchg
mov
pusha
jne
jne
xchg
ror
cmp
jno
or
dec
mov
push
js
mov
mov
or
rep
or
push
sub
inc
hlt
sbb
jg
dec
xorb
dec
notl
mov
pop
cmp
pop
hlt
jle
insl
jge
aam
mov
arpl
ret
inc
ja
insl
jle
cs
push
stos
sub
push
jno
ja
pop
out
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
