fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
repz
sar
ret
out
pop
mov
mov
push
dec
inc
outsl
xor
and
add
add
repz
iret
sar
ret
out
mov
mov
andl
dec
outsl
xor
adc
adc
add
ljmp
cltd
stos
scas
mov
popf
push
inc
insb
or
cmp
dec
dec
push
dec
lcall
mov
nop
mov
outsb
cmc
aam
mov
cmp
and
lret
shlb
jb
sbb
stos
mov
cltd
mov
push
mulb
mov
push
adc
xchg
and
daa
jbe
dec
inc
hlt
and
pushf
pop
imul
xor
fcomip
adc
add
repnz
iret
sbb
out
dec
mov
and
fisubl
data16
rolb
mov
add
adc
mov
jle
push
jae
movsl
sbb
mov
lret
jne
sbb
insb
adc
xchg
mov
dec
shlb
scas
mov
pop
cs
jo
adc
add
push
cli
out
rorl
mov
xchg
mov
jnp
dec
jge
push
sub
cmp
or
add
mov
mov
sarb
loop
lret
jae
and
daa
or
pop
inc
pusha
popa
dec
outsb
inc
pushf
cltd
orb
int
fstl
ds
cmp
add
push
dec
pcmpgtw
pop
xchg
lods
das
mov
shll
scas
jae
arpl
jg
outsl
xor
and
adc
add
repz
iret
sar
ret
out
mov
mov
scas
jae
arpl
jg
outsl
xor
and
adc
add
repz
cltd
insb
xorb
xchg
push
inc
nop
push
adc
xor
enter
pop
insl
mov
add
xchg
out
or
mov
mov
cmp
lods
mov
outsl
les
sub
push
mov
movsl
sbb
mov
loop
verw
mov
dec
popf
push
jnp
pop
xorb
xor
in
pop
add
fs
cmp
test
js
or
push
ds
out
inc
dec
lods
and
sbb
inc
inc
cmp
jmp
and
data16
cmc
stos
ds
out
mov
mov
arpl
notb
pop
lcall
cmc
and
or
in
imul
out
mov
mov
into
imulb
fnsave
ficomps
lret
xor
cmp
out
inc
xor
loop
pop
sbb
je
jo
mov
ficoml
shl
cmpb
xchg
int3
mov
or
xlat
sbb
push
jge
cmp
adc
stos
leave
mov
inc
add
stc
mov
jg
jge
mov
fdivr
jb
pop
pop
insl
mov
mov
ds
add
out
movsl
adc
out
arpl
pop
mov
jb
sub
daa
adc
scas
xchg
stc
xchg
mov
dec
xchg
jle
push
fists
mov
mov
adc
mov
cmp
movsl
sarb
xchg
xlat
inc
mov
ds
jae
stc
testb
pop
mov
fidivrs
ja
or
or
daa
mov
push
cmc
dec
cmp
jne
outsb
xor
jae
push
popa
pusha
sahf
jns
addr16
rcr
lock
int
lahf
jae
je
mov
sbb
scas
stc
insl
leave
leave
push
dec
xor
jbe
or
mov
inc
inc
and
xor
in
lahf
lds
xchg
sbb
fisttpll
jb
aas
pop
mov
bnd
inc
xchg
mov
cmp
pop
pushl
in
mov
xor
stos
vmulss
iret
dec
es
lcall
mov
out
test
stos
aas
adc
cltd
fists
out
jmp
xchg
sbbb
loope
push
adc
nop
jne
sub
ja
hlt
inc
outsl
testl
sbb
jg
in
sar
fildll
mov
jno
xchg
mov
negb
mov
shr
jp
push
mov
int
add
fcmovnb
test
fwait
dec
testl
mov
sti
mov
mov
push
lahf
jp
mov
add
xorl
out
jo
les
jns
cmpb
daa
test
sub
or
enter
add
ret
xlat
mov
cmp
pop
ja
cmp
call
mov
and
lock
mov
test
sub
mov
xor
aam
out
jno
or
push
mov
pop
or
jae
jle
dec
mov
jae
xchg
push
icebp
stos
xchg
push
push
pop
out
mov
fwait
shrb
push
out
sub
pop
aaa
and
loope
out
movsb
adc
fimull
jecxz
dec
sub
lds
hlt
dec
mov
fdivp
fildl
mov
pop
stc
pop
lret
add
arpl
and
mov
push
loopne
sbb
pop
test
ljmp
add
mov
arpl
jg
mov
out
into
xor
push
out
push
loop
call
sub
fwait
jecxz
mov
cmpsl
cltd
ds
ja
call
into
inc
shr
cwtl
pop
push
pop
in
cmp
fsts
jle
mov
add
jno
mov
sub
mov
out
loope
repz
mov
stc
or
xchg
rorl
mov
xlat
fwait
push
in
xorb
xor
sbb
in
pop
jo
clc
jb
inc
movb
into
pop
xchg
jle
push
add
or
jmp
aaa
std
js
test
push
test
xchg
push
movsb
jnp
and
imul
jnp
cmpsb
push
dec
jns
std
mov
dec
sar
pop
cmp
mov
mov
cmc
mov
or
aas
pop
or
stc
jae
jbe
sar
dec
push
add
or
mov
cmp
fnsave
pop
cmp
leave
inc
xchg
push
fucom
movb
push
imul
xchg
jp
bound
fstps
push
push
lock
jg
cmc
pop
addb
lahf
mov
cmpsl
or
test
cmc
ret
fisubrl
imul
add
xchg
std
loop
adcl
cwtl
jo
cmp
mov
sti
and
push
pop
movsl
jge
jecxz
shlb
notb
rcll
add
push
sahf
push
sti
adc
nop
sub
xor
cmp
push
test
out
int3
fdiv
sbb
cmp
mov
call
mov
xor
addr16
in
jnp
dec
sub
inc
cs
inc
dec
adc
ret
loop
jbe
in
mov
mov
fmull
insb
or
xorl
xlat
pushf
dec
in
leave
add
int
loop
cmpsl
fimuls
dec
xlat
pop
inc
shl
cwtl
test
fdivr
aad
daa
push
fcomps
inc
enter
filds
hlt
fstl
xchg
call
cmc
cmp
fimuls
jl
in
and
lea
jp
mov
cmpsl
push
rorb
ss
or
out
cmp
fnsave
cwtl
in
lret
test
lret
mov
fldt
or
pop
and
divl
clc
pop
popf
stos
push
inc
shll
js
jno
ljmp
jge
sahf
adc
sbb
push
mov
imul
dec
sub
adc
mov
pop
dec
jae
jle
test
ret
xor
enter
shl
sub
cmp
aad
mov
or
aas
push
mov
or
idivb
xchg
mov
loop
stos
loope
add
mov
push
insb
sub
aaa
je
mov
xor
push
in
inc
pop
int3
mov
popf
dec
sub
cmp
jae
mov
mov
loop
mov
testl
mov
addb
lea
rclb
aas
cmpsb
stos
loopne
inc
adc
mov
cli
and
lea
push
dec
sub
imul
lds
stos
insl
pop
mov
clc
pop
test
loop
jecxz
bound
push
loope
dec
lahf
std
dec
lahf
jnp
jecxz
movsb
sbb
sub
cli
in
push
ds
lods
inc
jg
ret
xlat
add
stos
and
mov
jmp
mov
shrb
js
mov
out
dec
jecxz
in
adc
cli
jae
fcomip
outsb
stos
dec
bound
imul
mov
and
jb
inc
test
mov
inc
orb
stc
mov
mov
add
sbb
mov
orl
loop
pop
or
xor
sub
dec
mov
clc
mov
aad
push
sub
insb
ss
jnp
cmp
cmpsb
enter
xor
jo
clc
cltd
imul
icebp
cwtl
jmp
sub
sub
mov
lahf
and
xchg
mov
into
and
ret
mov
lret
mov
cmp
gs
mov
into
lock
add
out
repz
add
xchg
lods
mov
or
xor
andl
mov
xchg
call
movsl
stc
pop
loop
mov
jno
mov
cltd
dec
outsb
push
jl
aam
mov
lcall
push
sub
data16
arpl
out
outsl
mov
push
jae
dec
pop
fucomi
pop
ret
adc
cltd
jmp
arpl
jbe
cltd
add
out
pop
and
add
cwtl
jl
rorl
and
cmpsb
lods
mov
add
out
or
movsl
xchg
xlat
xor
hlt
mov
add
in
xchg
bound
mov
and
popa
rcr
sub
rcrb
jnp
aad
jns
negl
adc
inc
cmp
xchg
xorps
xchg
and
jno
mov
outsb
jnp
pop
mov
hlt
repz
push
pop
mov
jp
std
mov
ds
fldl
inc
fs
xchg
push
sub
adc
mov
mov
sahf
lret
mov
or
add
xchg
insl
jns
cwtl
fistps
test
or
jno
sub
lea
lret
shl
lods
or
or
in
call
cvtps2pi
mov
pop
cmpsb
fistpl
sbb
cs
pop
in
push
imul
dec
or
cs
pop
xor
out
insl
inc
sub
push
mov
push
clc
lods
mov
dec
out
rcll
sbbb
mov
and
fs
mov
iret
and
out
imul
jns
loop
pop
stos
inc
or
stos
daa
stos
jae
test
dec
cli
mov
fisubs
repnz
jl
cwtl
mov
out
mov
push
fidivl
and
jno
or
jne
push
call
aas
mov
adc
movsb
je
xor
add
inc
and
adc
mov
sub
or
jl
adc
mov
xchg
in
jno
gs
pop
adc
cwtl
repnz
loope
call
sbb
sti
adc
jo
jge
decb
sbb
das
or
inc
int
cli
hlt
pushf
push
aaa
stos
cmp
scas
aaa
hlt
sarb
lcall
inc
mov
js
mov
sbb
push
push
or
mov
push
ror
bound
sbb
fstps
jl
lods
push
cmp
je
push
xlat
repz
inc
xlat
push
aad
jae
inc
dec
fsubr
mov
scas
ljmp
loopne
push
inc
xor
cmc
out
jns
popf
mov
in
bnd
lret
fidivrl
cltd
jmp
icebp
jns
ss
lcall
mov
dec
iret
repnz
addb
jo
lret
je
test
pushf
aaa
jb
push
enter
lock
add
sbb
sbb
sar
add
sbb
rorl
jae
cmc
inc
adc
in
movsb
call
repz
dec
aas
xor
mov
dec
mov
adc
scas
lret
cs
cli
sub
fldcw
sarl
xchg
and
lcall
mov
stc
pushf
data16
sbb
xchg
popa
cmpsl
es
dec
xchg
mov
in
out
ljmp
pushf
je
push
sub
push
jns
or
xor
fidivrs
pop
aad
out
pop
mov
and
rclb
sbb
movsb
jp
jne
mov
lock
mov
ficoml
push
dec
sarl
ja
or
cmp
mov
in
dec
add
xchg
xchg
inc
xchg
mov
dec
cltd
jno
test
jns
sbb
std
mov
adc
xchg
push
inc
add
addr16
cmp
movsb
ds
lea
lret
add
out
bound
popf
xchg
out
dec
sbb
daa
and
adc
test
adc
fdivs
stos
rclb
sub
mov
sbb
add
sub
inc
scas
xchg
sbb
adc
lds
jnp
cmpb
roll
cs
sbb
insl
mov
xchg
lret
mov
fimull
rcr
shl
int3
inc
iret
cmp
add
push
xlat
or
push
in
movsl
sub
sbb
insl
push
les
lea
mov
push
cmc
rol
push
adc
jmp
bound
dec
psubsb
mov
add
lcall
int
enter
xchg
and
bnd
loope
rcrb
scas
push
loop
jge
sub
adc
lcall
ficomps
xor
xor
mov
ds
xor
inc
fdivrp
push
mov
fistps
ja
mov
popf
adc
xchg
fcomi
inc
push
mov
out
fidivl
popf
cli
insb
sbb
add
mulb
sahf
mov
mov
shr
imul
mov
loop
jge
mov
dec
inc
jbe
sub
mov
jae
sbb
dec
and
cmp
inc
xor
mov
test
sub
push
dec
ljmp
mov
je
jb
push
pop
ficompl
in
fwait
pop
popf
push
loop
icebp
ljmp
movsb
aaa
mov
clc
lret
aam
sarl
test
or
icebp
mov
pop
pop
mov
lock
ss
jp
mov
pop
rorb
or
sbb
or
inc
hlt
cmp
mov
sbb
jmp
inc
dec
and
cli
sbb
sub
lods
mov
scas
in
ret
cli
pushf
es
push
mov
pop
push
in
es
or
mov
test
jle
push
enter
pushf
adc
cli
push
adc
sub
dec
xor
ficompl
sub
movsb
lcall
jl
push
jle
xchg
repz
adc
inc
test
cmc
pop
sahf
fistpl
push
xorl
insb
jl
ret
mov
ret
adc
xlat
icebp
test
mov
sahf
jae
sti
adc
and
jl
pop
ss
fsts
push
adc
mov
in
mov
mov
dec
scas
jecxz
ret
scas
add
fadds
cmp
cli
cmp
fs
adc
in
and
scas
xorb
jecxz
nop
rol
shll
sbb
sub
sbb
out
lods
inc
sub
xchg
subl
scas
test
mov
fildll
cmp
inc
pop
pop
mov
mov
mov
push
mov
adc
xchg
push
lret
test
pushl
enter
sub
loop
mov
mov
sbb
push
mov
int3
mulb
sbb
stc
push
sub
in
fnsave
fcmovnu
scas
inc
rcll
mov
punpcklbw
mov
les
and
xor
or
push
andb
or
xchg
dec
fidivs
mov
sub
add
add
mov
jle
sub
cmc
xchg
jl
xchg
daa
test
sub
and
mov
and
lods
lock
shrl
and
dec
jnp
scas
push
add
inc
pusha
push
mov
push
add
in
scas
cs
sbb
leave
lret
inc
sbb
pop
pop
popf
inc
sub
jo
outsb
mov
xor
push
pop
jnp
xor
mov
push
aaa
sbb
popa
add
sbb
mov
rcrb
in
pop
mov
jle
mov
jp
jne
xor
pop
hlt
xor
dec
push
sub
in
or
pusha
pop
in
out
push
mov
mov
insb
sar
push
dec
jo
out
std
push
ja
sbb
fmul
dec
mov
aad
mov
addr16
and
decb
loop
shll
pop
shl
cmpsb
not
imul
sub
nop
aas
push
out
sti
sub
notb
mov
daa
push
cmc
and
insb
and
or
cmp
jns
inc
jmp
in
data16
mov
pusha
ss
mov
mov
roll
dec
sub
sbb
clc
sbb
sub
cmp
add
and
in
push
sbb
divb
cmp
jae
daa
mov
stos
stos
leave
leave
mov
or
outsb
scas
pop
std
or
adcl
add
push
movb
neg
outsb
js
xchg
ret
and
rclb
inc
mov
enter
dec
arpl
enter
push
xor
inc
fiadds
and
xchg
inc
mov
out
dec
push
sub
stc
xor
inc
scas
cmp
cld
test
mov
jmp
adc
movsl
pusha
outsl
sub
push
fbld
jmp
mov
mov
jb
divb
insl
mov
xor
cmp
mov
sub
ret
sbb
dec
xchg
jne
xor
or
test
addr16
or
mov
jecxz
xor
or
test
scas
hlt
pusha
mov
enter
sub
dec
hlt
lds
cmp
hlt
mov
push
pop
push
scas
pop
xchg
pop
mov
mov
cmpsl
lods
mov
ja
sbb
jbe
aad
push
hlt
mov
pop
or
push
jle
push
fwait
cld
or
rorl
rclb
pop
ffree
lds
cmpsb
arpl
and
push
out
mov
rol
adcl
out
adc
fs
cmp
push
mov
pop
ret
mov
add
lods
lcall
mov
push
stos
cmpsl
shr
popf
ds
jae
enter
repnz
clc
in
fisttpll
cmpsl
inc
addl
repz
arpl
cli
xor
xlat
lea
das
adc
mov
cmpsb
mov
sub
fisubs
dec
enter
test
adc
or
adc
mov
lcall
fsubrl
inc
ret
in
cmpsb
inc
mov
push
int
cs
ja
push
cmp
mov
or
push
push
ds
pop
shlb
loop
xor
inc
call
cmp
aad
jecxz
push
out
aad
adc
add
fisttpl
or
or
imul
outsb
or
out
inc
in
sub
dec
out
dec
lcall
popf
shll
lea
fwait
push
out
fadd
mov
js
xchg
fs
xor
add
cmpsl
jns
mov
out
push
lahf
pop
sbb
mov
test
pushf
sub
push
int3
rcr
iret
ret
pop
push
jbe
js
or
or
dec
adc
cmp
das
xor
cwtl
rcrb
push
ret
cli
mov
pushl
xchg
push
adc
loopne
push
fs
insb
mov
hlt
jp
loop
xor
jnp
call
push
aam
divl
xchg
add
shr
pushf
jmp
or
cld
sarb
pop
sub
xor
pusha
imul
mov
cmpsl
pusha
jg
xlat
jmp
mov
in
xchg
shrb
mov
sbb
xchg
je
push
push
add
cmp
mov
int
lcall
pushf
fisttps
mov
outsl
arpl
repz
popl
rolb
push
mov
hlt
adc
mov
jl
inc
cs
imul
mov
gs
clc
popf
pop
lods
scas
mov
fidivs
and
popa
push
int
pop
push
icebp
aam
cmp
mov
sub
inc
dec
inc
mov
mov
bound
stos
adc
xor
add
mov
or
mov
shll
pop
or
shl
stos
or
mov
je
pop
adc
filds
popf
pop
xchg
inc
inc
adc
jb
or
mov
stc
sbb
adc
mov
pop
mov
je
jecxz
add
cwtl
rorl
xacquire
adc
cmp
mov
movsb
adc
xchg
mov
loop
mov
and
fcmove
inc
inc
std
push
adc
das
cmp
inc
mov
scas
sub
dec
jo
scas
jbe
mov
inc
or
mov
xor
icebp
fdivs
add
inc
jmp
scas
inc
and
js
js
fimull
movsb
push
pop
xchg
pop
stos
std
xchg
pop
imul
push
mov
shrb
push
mov
sub
mov
jecxz
mov
push
sarl
pop
pcmpgtw
fwait
sub
clc
insl
test
add
mov
outsb
add
lods
mov
add
adc
and
lret
mov
out
shll
or
jmp
cs
mov
sub
push
ds
pushf
and
jl
and
cmp
inc
mov
inc
clc
test
push
xchg
push
add
mov
ds
cli
popf
loope
jb
xor
or
lea
push
stos
pushf
outsl
xor
out
cmp
test
add
fdivrl
xchg
into
shlb
cmc
and
pop
insb
mov
ficoml
icebp
jl
repz
ja
mov
dec
in
dec
mov
fyl2xp1
daa
shr
mov
rclb
pop
xorl
repnz
cmp
add
xchg
dec
faddl
and
aaa
xor
jnp
roll
jno
cmp
jecxz
push
or
jecxz
pop
and
ficompl
pop
adc
sbb
sbb
iret
mov
mov
or
jecxz
xchg
in
loope
in
dec
outsl
arpl
and
nop
cmp
repnz
in
int
pushf
out
cwtl
xchg
and
daa
sahf
sub
or
lods
inc
icebp
addl
movsb
xor
add
ds
adc
fldt
jnp
xlat
jbe
std
jb,pn
testl
out
and
movb
jb
mov
push
mov
std
push
mov
inc
or
jo
repz
lret
sbb
das
rcll
mov
enter
movsb
push
imul
repnz
idivb
jp
cmp
stc
lcall
cli
ret
out
mov
mov
scas
jae
arpl
jg
outsl
xor
and
adc
add
repz
iret
sar
ret
out
mov
mov
scas
jae
arpl
jg
outsl
xor
and
adc
add
repz
rcl
ret
jmp
lahf
mov
scas
jae
arpl
jg
xor
and
adc
add
repz
sub
sbb
scas
mov
mov
outsl
mov
inc
sbb
ja
inc
cld
push
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sti
inc
push
push
xchg
xchg
push
jns
je
aaa
data16
xlat
push
out
divl
data16
push
cmpsl
inc
mov
inc
cmpsb
push
xchg
xchg
pop
out
daa
aaa
data16
xlat
cmp
push
divl
add
insb
inc
es
adc
ja
pop
scas
pop
cli
daa
ds
ss
dec
mov
notl
cmp
and
xor
and
add
fwait
jge
mov
aam
mov
adc
jle
dec
icebp
pop
scas
jbe
mov
sub
mov
repz
negl
cmpsl
lret
dec
out
mov
xchg
nop
push
sbb
xchg
pushf
mov
pop
fldcw
jmp
xchg
movsb
movsl
pop
sbb
jmp
shll
push
sbb
xlat
into
les
hlt
jne
push
sbb
or
aam
movl
pop
stos
imul
mov
xorb
sbb
rolb
cmpsb
xor
xor
cmpsb
scas
imul
adc
in
aas
mov
cmp
pop
jecxz
div
js
arpl
mov
mov
inc
cmpsb
push
xchg
addr16
daa
jle
mov
into
out
notl
xchg
push
cmpsl
and
les
rolb
push
cmpsl
inc
push
stos
addr16
pop
ljmp
mov
cs
lahf
bound
aaa
push
andb
mov
fwait
add
rolb
fld
pop
xchg
and
adc
add
daa
aaa
ss
xlat
push
out
divl
xchg
push
cmpsl
inc
mov
inc
cmpsb
push
xchg
xchg
pop
out
daa
aaa
ss
xlat
push
out
divl
xchg
push
cmpsl
inc
mov
inc
bound
xchg
fldenv
mov
mov
adc
mov
cmc
lds
push
cmc
notl
sub
jg
iret
int3
out
in
mov
faddp
addb
xor
lret
es
repnz
stos
in
sbb
mov
nop
xchg
arpl
xchg
add
pop
in
pop
pushf
jns
stos
and
pop
fimuls
mov
pop
in
popf
pop
lods
jle
je
push
push
stos
mov
jl
orb
popa
popf
cmc
xor
push
js
insl
cmpsb
pop
inc
fwait
push
fisubs
cmp
dec
push
xchg
jmp
sbb
repz
aam
fimull
pushf
inc
mov
movsb
ret
jno
sbb
imul
and
cli
mov
out
lcall
cmpsl
xor
mov
pop
es
and
fcmove
stos
mov
fsubl
fstpl
jmp
int3
int3
jae
mov
dec
shlb
xor
movsl
cmpsb
and
rcrl
pop
jmp
aaa
movsb
sub
pop
adc
mov
lret
mov
xor
cld
nop
out
cmc
cltd
mov
jno
cmp
or
xlat
std
repz
ljmp
jno
and
sub
add
mov
cmp
mov
sub
leave
lods
loopne
inc
and
sbbl
xor
into
pop
insb
in
mov
jo
stc
mov
gs
jb
mov
sub
mov
sbb
std
popa
mov
out
imul
movsl
dec
cmp
rcll
push
in
into
js
rorl
jnp
fwait
leave
cmpl
cmpsl
mov
cltd
aam
pop
dec
jp
xchg
js
add
shlb
out
iret
movb
push
add
push
xchg
jle
xchg
shlb
sub
test
js
mov
leave
movsl
mov
call
add
jmp
scas
jp
loope
ds
mov
inc
inc
loop
add
mov
movsl
push
in
jge
pop
xchg
xor
les
sub
pop
push
rol
cmp
nop
loopne
icebp
neg
loopne
and
sub
gs
mov
dec
jne
and
rcrl
idivb
movsb
mov
cmpsb
js
fsub
and
xchg
xor
inc
test
test
xchg
hlt
pusha
popf
cmp
push
push
cmp
sub
or
push
xor
add
js
lcall
jle
mov
jne
ficoms
test
fs
ljmp
cmpsl
mov
dec
dec
cmp
add
mov
ja
movsl
sbb
out
add
xor
je
and
gs
aaa
mov
mov
insl
cltd
jae
add
push
pop
xchg
outsb
xchg
sub
ljmp
fisubrs
mov
sbb
or
or
jg
inc
daa
call
popf
jne
adc
hlt
inc
xor
lret
lret
aaa
and
add
addr16
scas
fldenv
dec
dec
inc
rclb
sbb
rcll
jge
mov
mov
inc
inc
xor
pop
mov
mov
dec
ljmp
jle
rolb
rclb
and
js
mov
ret
cmp
out
imul
jns
in
pop
ljmp
pop
outsb
sarb
inc
inc
int
inc
mov
adc
inc
loope
mov
cmp
mov
adc
jne
shr
cmc
pop
dec
imul
movsb
xor
pop
repz
jle
lahf
insb
push
inc
jo
xchg
movsl
int3
push
cmp
xchg
push
xchg
jmp
jbe
cs
or
xor
pop
add
test
jg
jno
sub
cmp
push
bts
test
adc
add
adc
pusha
pop
leave
stos
or
mov
movsl
les
cmc
and
test
mov
and
mov
push
mov
out
inc
out
sub
push
stos
jb
or
out
out
inc
mov
sahf
addr16
insb
jp
inc
ljmp
cmpsl
add
xchg
lods
movsl
push
into
mov
or
dec
jge
push
mov
aaa
rcl
fcmovbe
xchg
popa
mov
insl
imul
out
cld
rcl
rcrl
inc
mov
add
mov
shll
pushf
test
outsb
cmpsb
pop
xchg
push
cmc
adc
ja
out
push
fcmovne
loop
and
std
repz
cmp
inc
rorb
xchg
pushf
lahf
jge
or
aam
xor
pop
mov
push
pusha
arpl
into
lret
mov
out
add
hlt
jge
inc
jns
mov
and
sar
call
data16
push
adc
mov
add
push
push
aas
fwait
push
iret
aad
mov
imul
imul
inc
in
adc
les
pop
decl
loop
addr16
fldln2
lock
push
mov
or
jno
incl
out
out
xchg
push
mov
rcll
mov
add
sti
or
mov
jne
dec
nop
fsubrl
add
fwait
jge
pusha
outsb
mov
jl
pop
test
neg
ficoms
daa
pop
imul
inc
test
push
inc
mov
insb
pop
adc
pop
into
mov
mov
lds
mov
pop
ret
add
test
dec
or
insl
ss
mov
mov
in
inc
ja
lcall
roll
movsl
mull
mov
cmp
data16
hlt
inc
jo
mov
xor
jns
xor
jbe
insl
jbe
lahf
or
mov
in
imul
cmc
stc
movsb
cld
pop
nop
imul
mov
loopne
cmpsb
leave
into
mov
jge
roll
inc
sbbb
es
shll
jge
pop
jns
cmp
jmp
mov
push
xchg
pusha
loope
sub
scas
mov
mov
loope
orb
nop
push
xor
rclb
xchg
call
mov
bound
ret
cmpsl
adc
mov
adcb
call
ret
inc
adc
jae
stos
dec
cltd
xchg
push
stc
push
or
mov
xchg
loopne
cmp
mov
push
clc
insb
popa
out
sbb
pop
mov
lods
inc
mov
cli
xor
loop
clc
cli
mov
cmp
pushf
lds
xchg
mov
cmp
sbbl
cmpsb
lea
scas
in
test
xlat
push
pop
mov
or
sub
ss
jnp
outsl
jb
mov
ljmp
jecxz
fwait
inc
sub
jbe
int
mov
mov
scas
loope
out
xchg
push
or
mov
jl
cs
jge
enter
out
push
nop
or
jbe
or
lcall
into
dec
or
xchg
inc
push
xchg
mov
push
jge
pop
into
stos
jmp
push
cmp
sbb
sti
pop
sbb
lcall
insl
jb
lret
mov
sbb
cmp
xchg
sub
jecxz
lock
sub
sub
mov
test
pop
leave
popa
lods
outsl
add
sub
fs
sub
sbb
pop
repnz
into
dec
shr
rcll
scas
cli
xor
into
mov
std
fadd
outsl
adc
jno
insl
dec
lock
test
mov
mov
bound
ljmp
out
lcall
push
int
xor
insl
test
insl
fcompl
in
mov
lds
push
inc
into
cmpsl
pushf
je
xchg
cmp
dec
inc
ja
push
jnp
sbb
pushf
inc
daa
repnz
or
push
cli
or
scas
fldt
mov
pop
adc
fisttpl
jecxz
call
out
sbb
adc
addr16
movsb
subb
dec
mov
scas
dec
out
mov
cmp
bound
sub
ss
in
cmpb
fmul
sub
scas
enter
xchg
wrmsr
sub
mov
or
sbb
test
int
mov
fists
mov
ljmp
div
test
in
cmpsb
mov
or
enter
push
shll
fsubl
pop
insb
mov
cmc
xchg
movsb
push
dec
and
nop
xchg
cmp
ss
outsl
out
push
cmpsb
xchg
lret
push
jae
ret
vmovntdq
lahf
cmp
fistl
mov
shrb
pushf
ljmp
aam
mov
jb
cmc
xchg
mov
dec
xchg
loopne
xchg
xchg
xorb
sbb
mov
lods
lret
jmp
clc
mov
inc
inc
sbb
sbb
lods
sbb
cltd
add
imul
cld
jno
jle
jbe
xchg
mov
das
jno
or
mov
popa
lret
and
outsb
inc
cvttps2pi
aaa
jae
leave
mov
imul
in
inc
jno
stc
fstps
shr
jle
sub
cmpsb
pop
mov
mov
or
and
jae
test
pusha
cmp
adc
aad
sub
adc
pop
and
pop
mov
lds
ret
or
xchg
cmp
arpl
add
xor
sbb
fwait
enter
mov
stc
mov
dec
cltd
cmpb
mov
push
jge
pop
xchg
test
int3
cmp
mov
pop
addr16
cli
bswap
fwait
mov
outsb
aam
ficomps
lcall
push
jge
gs
movsb
repnz
sahf
inc
ret
xchg
aas
pop
add
insb
into
loop
xor
cmp
or
test
shlb
jp
sbb
rolb
xor
shll
imul
das
popa
xor
push
in
mov
inc
add
lea
mov
es
jg
aad
and
outsb
pop
adc
mov
push
add
into
int3
dec
loope
iret
ljmp
std
xchg
or
icebp
mov
cli
inc
cmp
mov
cmp
adc
mov
cmpsl
mov
sbb
addr16
mov
loopne
scas
rorb
xor
add
imul
cld
movsb
xchg
ret
pop
pop
jae
leave
scas
int
adc
imul
mov
iret
fisubl
clc
add
mov
cmc
stos
dec
push
xor
cmp
pushf
sub
and
inc
adc
inc
xor
sti
mov
call
fmuls
xchg
and
xchg
aaa
pop
aad
sub
adc
imul
cmp
shl
cmpsb
sar
xor
mov
inc
inc
out
jmp
sub
fimull
cs
mov
pop
inc
cmpsb
xchg
repnz
xor
inc
push
sub
movsb
addr16
jge
dec
inc
scas
aas
iret
pop
cld
jns
aaa
mov
add
das
es
inc
cmp
cmp
in
mov
lods
jge
hlt
mov
and
cmpl
popf
and
pop
add
push
dec
scas
test
add
lcall
flds
push
and
pop
ljmp
inc
push
mov
out
mov
outsb
add
stos
mov
shll
adc
clc
xchg
mov
or
sbb
fistpl
adc
in
jae
pop
cmp
add
fidivrs
jo
daa
test
add
jmp
sbb
pop
cmc
mov
aaa
pop
stos
testl
movsb
add
cmp
pand
inc
cwtl
mov
or
xchg
lcall
insl
lods
push
cmp
mov
inc
js
pop
mov
push
sub
mov
mov
scas
pop
xchg
cmc
incl
imull
xchg
lcall
pop
pushf
das
cmpsb
pop
enter
and
shlb
sub
dec
inc
hlt
test
mov
mov
jl
cmp
pop
cwtl
cs
popa
call
movsb
inc
test
mov
push
ret
rolb
insb
movsl
loopne
cltd
shl
fimuls
hlt
or
int
movb
pop
mov
push
in
sbbb
and
in
vpaddsb
mov
pop
andb
jae
imul
dec
call
push
mov
mov
sbb
jne
sbb
hlt
movb
mov
sbb
filds
or
jl
add
aaa
fistpll
loopne
mov
adc
or
and
sub
or
push
out
or
cmpsl
bound
and
xlat
out
and
sbb
mov
and
int3
dec
mov
dec
xchg
jno
mov
add
adc
subb
cmp
sub
mov
adc
cwtl
sbb
cld
test
push
push
and
xchg
das
xor
lds
mov
mov
xor
xchg
fists
out
iret
or
mov
push
mov
inc
addl
addr16
add
jae
icebp
mov
cmp
jge
mov
xchg
stc
mov
das
adc
add
inc
dec
stos
loopne
mov
popf
pop
adc
bswap
rcll
xchg
sub
pop
iret
fwait
aad
add
mov
mov
inc
aam
inc
xor
sbb
in
mov
mov
ret
xchg
shrb
mov
mov
sarb
out
jae
repz
pushf
shlb
xchg
inc
call
sub
insl
pop
adc
and
mov
lahf
dec
insl
mov
pop
mov
shr
shrb
cmp
dec
std
loope
dec
cmp
cmpsl
add
adc
xor
jg
mov
mov
clc
out
ror
test
jno
sbb
cli
cmp
int3
clc
mov
cltd
test
add
or
xchg
jb
test
sub
stos
jecxz
or
je
mov
push
in
pop
and
push
add
mov
inc
inc
xchg
adc
xchg
add
insb
cmpsl
push
jb
push
mov
mov
das
or
sbb
cmp
into
enter
push
mov
leave
jmp
push
fs
mov
mov
orb
out
incl
cltd
fisttpl
iret
movsl
repnz
lahf
testb
and
enter
xchg
and
or
sbb
ljmp
mov
ret
cmp
imul
sub
xchg
subl
dec
dec
jae
add
xchg
cmp
ficoml
gs
jo
push
jne
aas
shr
pusha
sbb
aas
cwtl
xchg
xchg
push
std
xlat
sbbl
jge
data16
cmpsb
mov
mov
mov
sbb
sub
sarb
cmp
cs
in
xor
call
mov
adc
jmp
dec
movsb
cmpsl
mov
xlat
xorl
addr16
sbb
push
aad
fsubs
ss
xchg
test
sarl
jae
inc
xor
adcl
into
mov
insl
lock
xor
xchg
cwtl
dec
outsb
jb
subb
mov
iret
xlat
pop
mov
dec
pop
cmp
xlat
jo
sub
jne
xchg
dec
cmpsb
ljmp
sbb
mov
jp
fsubl
adc
ds
and
sbb
jo
jecxz
jp
add
mov
popa
push
std
clc
or
push
dec
mov
out
int
push
ss
aas
pop
add
jmp
jns
divl
je
pop
jle
mov
fmuls
lret
hlt
mov
out
lds
ret
and
andl
je
jb
enter
xor
push
push
add
pushf
or
lods
rorl
mov
xchg
dec
mov
das
cltd
lock
jge
xor
cmp
mov
fwait
mov
jg
mov
and
fisubrs
pop
into
rcll
mov
pop
and
mov
cmp
add
cmpsb
xor
ret
mov
out
xor
test
fs
stos
ss
xchg
je
cltd
xchg
mov
scas
aam
xorl
or
xchg
fcmovb
iret
push
sub
lcall
sbb
push
movsl
inc
les
or
pop
jno
clc
fcmovnu
push
fisubrs
jl
and
test
fsubs
cs
mov
stos
daa
fbld
inc
mov
mov
jp
inc
add
jecxz
out
imul
xchg
cmp
and
push
fidivl
push
xchg
scas
push
xchg
xchg
xor
inc
lret
call
scas
push
adc
sarl
or
cs
mov
and
adc
movsb
cmp
adc
or
lahf
jb
loop
lahf
data16
mov
js
fs
dec
aas
and
jmp
loope
jmp
into
and
xchg
loop
and
sahf
dec
pop
jne
pop
negl
xchg
testb
or
pop
dec
add
stc
adc
test
add
sub
mov
cs
idivl
andl
inc
dec
xchg
mov
movsl
mov
xor
call
sub
into
sub
jp
mov
and
mov
mov
jne
xchg
cmp
sarl
pop
movl
test
or
and
adc
and
in
mov
and
add
sbb
add
jb
fstpl
push
jl
outsl
popa
fidivl
in
pop
dec
push
add
adc
aas
dec
sbb
push
in
push
add
ds
xchg
cmp
pop
lahf
cmp
out
loop
test
fstpt
cld
ljmp
sarb
xor
add
test
push
test
clc
enter
mov
xchg
and
sbb
adc
xor
dec
icebp
jae
cld
pop
dec
mov
js
movsl
mov
shrb
inc
ds
lods
lcall
add
aam
inc
push
int
ja
in
dec
aad
fnstsw
les
sti
ret
mov
or
lea
or
enter
cs
iret
inc
fistpl
pop
lret
ffree
pop
cmp
arpl
dec
xchg
mov
mov
lods
or
xchg
sahf
mov
add
cld
popf
push
je
jg
xor
loop
shl
push
sub
xchg
fldt
cmp
push
test
jb
cltd
inc
ss
ds
xchg
lahf
cmp
and
aam
aad
fcoms
inc
sbb
into
cmc
lds
loop
mov
aas
and
jmp
scas
ljmp
or
sbb
and
mov
mov
pop
cmp
sbb
push
cs
sub
adc
mov
push
cmpsb
mov
dec
js
inc
cmp
and
rorb
mov
cmpsl
pusha
popa
jo
add
shlb
sti
into
mov
push
push
inc
push
lret
adc
insl
pop
lods
ss
cs
mov
movsl
insb
pop
mull
inc
lds
int
sbb
mov
pop
cwtl
loop
jmp
dec
sbb
icebp
fwait
hlt
jle
or
sbb
mov
loopne
aaa
cmp
mov
jo
and
sub
inc
mov
sbb
and
insb
mov
bound
scas
xlat
outsl
jl
mov
adc
push
int
ffreep
popf
test
pop
gs
sub
popf
sub
rcl
adcb
mov
dec
cltd
lds
xor
adc
aad
cmp
sub
pushf
outsl
test
add
nop
in
stos
gs
adc
loope
imul
mov
push
push
stos
or
mov
adc
dec
or
sub
in
mov
in
push
sub
push
or
xchg
fmul
leave
cli
lcall
rcrb
lret
addr16
add
popf
test
pop
call
mov
inc
xor
nop
jl,pt
insl
loopne
insl
ja
jo
or
sarb
dec
add
push
nop
pop
jns
mov
sbb
rorl
jno
jno
mov
or
jecxz
mov
dec
xchg
ljmp
pop
bound
call
and
pushw
cmpsb
or
mov
test
pop
jno
xchg
mov
or
jae
movsb
or
and
jb
mov
jnp
xor
int3
shlb
mov
inc
mov
dec
and
sti
dec
xchg
adc
add
sub
mov
or
mov
sub
out
shrb
add
ja
rolb
aad
mulb
test
mov
cmc
out
mov
insb
adc
cmp
jmp
gs
and
test
inc
popa
aad
jmp
ror
fcmovne
dec
icebp
jl
insb
out
mov
mov
shld
aad
lds
out
sub
stos
loope
icebp
aad
shrb
xor
lods
fildll
lea
jo
cmp
or
jb,pn
sbb
push
adc
xor
cltd
in
dec
daa
fcomps
or
lahf
mov
decl
push
aas
lcallw
pop
daa
aaa
ss
xlat
push
out
divl
xchg
push
cmpsl
inc
mov
inc
cmpsb
push
xchg
xchg
pop
out
daa
aaa
ss
xlat
push
out
divl
xchg
push
cmpsl
inc
mov
inc
movsl
push
xchg
jbe
pop
loop
es
aaa
xor
es
pop
out
divl
jg
push
cmpsl
jbe
scas
inc
mov
scas
jae
pop
notb
ss
jge
out
addb
out
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
subl
sbb
shrb
dec
lods
lock
inc
in
push
js
int
fucom
sub
mov
shrb
loopne
lock
add
xor
pusha
jo
cmp
push
jge
dec
lock
fs
push
popf
sub
sub
out
sub
rcrb
inc
xor
mov
fdivrs
jbe
lds
jnp
mov
out
out
push
subb
sbb
movsl
mov
adc
popf
mov
aad
aad
cmpsb
jno
loopne
lods
call
push
adc
dec
xor
in
adc
push
pop
cmp
mov
aas
insb
sarb
ret
add
shll
push
add
jo
jg
popf
ret
sub
push
and
ljmp
push
add
mov
dec
in
sbb
lock
cmp
mov
test
clc
add
pusha
fnstenv
fldt
mov
and
test
loopne
push
pop
lods
mov
or
pop
std
push
int
mov
inc
loop
aam
enter
mov
or
inc
in
mov
mov
iret
adc
aas
rorb
mov
adc
aad
enter
repnz
xor
shll
xchg
insl
sarb
dec
lock
add
xor
pusha
int
fldl
or
sarb
dec
lock
add
xor
pusha
int
fldl
mov
cmp
mov
push
fwait
imul
pop
fstpl
mov
mov
mov
int3
cmpsl
pop
icebp
test
addb
loope
cmpsl
enter
pop
mov
test
pop
imul
loope
xchg
adc
fs
mov
dec
shll
jge
cmp
pusha
adc
jmp
in
mov
int
fistl
and
cmpsl
mov
fidivl
lret
inc
test
add
cmpsl
test
pop
clc
cmpsb
scas
mov
sbb
repnz
mov
jmp
xor
add
shlb
jnp
inc
nop
test
repnz
mov
out
mov
mov
mov
push
xor
in
pop
pop
out
cmc
orl
fsubrs
gs
cs
inc
inc
fmulp
orb
insl
cmpsb
icebp
push
call
jecxz
outsb
pop
and
inc
mov
movsl
arpl
les
push
fistpll
je
mov
xor
jecxz
fwait
cmp
mov
pop
push
test
sub
lock
sti
mov
lods
and
mov
inc
insl
sub
test
and
xchg
jno
add
pop
test
jae
bound
xlat
int
or
xor
mov
loopne
scas
pop
push
lods
imul
mov
pop
aam
and
insl
out
pop
aad
and
and
mov
jbe
cmp
cltd
std
dec
cmp
sbb
fsubr
enter
xchg
adc
xchg
pop
filds
cmpsb
push
add
mov
jl
fmul
sub
mov
push
iret
cltd
nop
xchg
cld
sahf
cmp
lock
pop
cli
xchg
clc
jb
mov
fbstp
xchg
sbb
cmpsb
add
jno
into
sahf
rcll
adc
add
stos
hlt
sub
stos
jnp
push
ja
mov
jecxz
push
jg
or
pop
imul
or
mov
negb
cmc
push
sarb
in
pusha
mov
out
enter
fwait
dec
mov
adc
pusha
mov
pop
ljmp
adc
push
in
xchg
push
sub
sub
loopne
loopne
leave
mov
xor
dec
mov
outsl
movsl
dec
inc
outsl
and
in
sbb
ret
xchg
jbe
dec
sbb
int3
sbb
das
pop
and
xchg
or
insl
push
dec
inc
test
pusha
imul
cmc
or
mov
addr16
pop
pop
mov
test
xchg
mov
adc
jne
mov
nop
vmwrite
je
stos
xchg
les
pop
xor
arpl
adc
imul
je
lahf
jo
dec
jno
rcrl
orl
cmpl
dec
ficoml
or
bound
sbb
pop
mov
dec
test
adc
sub
call
sbb
addl
pop
cs
test
ljmp
jno
xor
out
call
sbb
mov
cmc
xor
inc
mov
pop
push
jle
cmp
mov
shll
cmp
test
lcall
inc
or
cmp
fdivr
and
pushl
mov
fst
testl
cmp
push
or
lods
sbb
or
adc
repz
xchg
xchg
notb
xchg
mov
inc
lcall
push
xchg
add
ss
adc
inc
and
xchg
inc
mov
xor
sub
dec
mov
out
stos
adc
cli
jl
nopl
stos
or
ljmp
add
mov
sub
sub
in
out
xchg
bound
cli
dec
xchg
ss
pop
sub
lock
pop
fnstenv
imul
pop
test
ret
in
pop
repz
mov
out
enter
lea
rcll
jne
pop
cs
lods
adc
mov
into
sbb
push
and
mov
mov
icebp
mov
jle
xchg
aam
sbb
sbb
pop
dec
jne
mov
jmp
mov
scas
jp
out
pop
out
call
inc
enter
sbbl
subl
cmp
xor
ds
pop
or
push
dec
insl
out
mov
mov
adc
in
inc
inc
test
cmc
loop
dec
add
cmpl
mov
lahf
call
popf
aam
adcl
pop
loop
xchg
div
ljmp
repnz
repz
repnz
jbe
xchg
lods
lcall
test
xor
push
shrl
and
int3
scas
inc
xchg
sti
xor
pop
cmp
loope
adc
out
and
adc
call
dec
jmp
xchg
call
xor
pushf
inc
add
add
scas
mov
xor
aam
int
lds
jg
push
enter
xchg
cmp
in
mov
mov
enter
push
je
into
sbb
jecxz
sbb
push
cmpl
or
aad
add
int
aad
jge
jno
mov
call
ud1
mov
adc
lods
cltd
mov
sbbl
inc
lods
push
shll
ss
xchg
mov
fwait
test
dec
xchg
mov
addl
sub
cmc
sbb
jp
mov
push
shll
pop
xchg
jmp
ljmp
mov
push
dec
push
sub
mov
mov
cmp
in
mov
nop
and
add
movsb
or
inc
jnp
cli
cmp
push
push
loopne
enter
adc
cmp
outsl
mov
insb
jp
dec
or
jnp
inc
dec
adc
fimuls
test
add
jp
adc
stos
dec
cmp
mov
int
jb
ja
pop
pushf
xor
cwtl
scas
mov
adc
cmp
push
and
mov
sbb
das
ret
jle
xchg
cmpsl
rcll
cmp
or
cwtl
shlb
lret
mov
xlat
fmul
push
fisttps
sbb
movsb
sahf
hlt
xchg
popf
lret
xor
mov
adc
aas
dec
add
lea
in
cmpsl
push
add
gs
pop
and
ljmp
js
pop
in
sbb
leave
pop
cltd
inc
dec
xlat
cmp
sub
fdivl
sbb
sub
clc
cmc
rolb
repz
xor
inc
in
cli
sub
or
push
pop
lahf
lcall
in
fbstp
enter
out
xchg
les
js
push
mov
mov
mov
mov
pop
mov
xor
repz
push
sub
in
stos
mov
add
ljmp
inc
inc
add
mov
pop
mov
outsb
dec
jmp
sti
shrl
fdivrs
dec
mov
pop
repz
pop
cs
xor
pushf
outsb
andb
inc
aam
inc
or
xchg
pop
mov
ficoml
pushf
mov
cs
insb
or
mul
xlat
sbb
sub
mov
cmp
ss
mov
push
cltd
or
mov
and
jno
fimull
push
into
ss
cltd
js
and
imul
xor
mov
mov
cld
jecxz,pt
fs
sub
sti
xchg
inc
add
inc
dec
aas
add
in
push
jl
das
add
xor
cmp
repnz
xchg
popf
pushf
movsl
xlat
lds
lret
movsb
dec
mov
insl
rorb
imul
jge
adc
sti
cwtl
mov
mov
push
sbb
lock
fs
rcrl
jl
ret
or
test
sub
jecxz
fs
sub
sbb
les
mov
push
dec
andl
popa
inc
int3
test
sbbb
test
cmp
sub
outsb
shrl
test
stos
xor
imul
xchg
pusha
gs
outsl
cmc
pop
lahf
popf
sbb
fwait
in
mov
dec
push
inc
add
push
xchg
mov
int
and
dec
out
loopne
mov
fwait
push
out
pop
inc
mov
add
push
push
in
test
sbb
adc
hlt
add
mov
cltd
push
jbe
repnz
inc
jb
int
rolb
gs
sub
pop
mov
test
adc
or
std
adc
mov
adc
sbb
test
aam
loop,pt
jae
rorl
leave
lahf
sub
lahf
cld
pop
adc
imul
cmp
movsl
pop
add
add
mov
cmp
fmuls
and
xchg
clc
aaa
adc
push
in
sbb
jnp
or
gs
shrd
fdivrl
adc
pop
cmp
inc
incb
aam
cld
mov
dec
nop
add
stos
rorb
xor
fwait
adc
mov
push
xchg
push
cmpsb
inc
les
fisubl
lcall
hlt
negl
loope
and
mov
jbe
notb
lods
stos
adc
fnsave
adcl
in
out
sahf
lods
adc
ja
push
jb
and
test
stos
adc
fdivr
repnz
add
aad
push
sahf
test
push
add
mov
inc
xor
or
movl
mov
clc
arpl
and
popf
pop
push
lcall
sbb
out
mov
sbb
mov
mov
repz
pop
mov
test
fadd
fbstp
mov
sub
push
clc
lods
sub
push
mov
sbb
jge
mov
inc
out
ja
call
cmpsb
adc
xchg
sbb
adc
xor
les
sub
repz
xor
add
lods
push
loopne
pop
push
mov
xchg
dec
loope
xor
test
add
test
sbb
imul
mov
adc
adc
repz
pushf
or
inc
in
push
ss
jge
ficompl
pop
sub
cld
jmp
sub
inc
xorb
cltd
dec
add
movsl
enter
bnd
cwtl
and
cmp
rorl
insl
cwtl
inc
or
bound
dec
mov
gs
xor
scas
xchg
mov
repz
fwait
mov
push
lcall
hlt
push
bound
mov
jb
pop
jns
jbe
cmp
mov
lret
sub
jmp
xor
xchg
add
and
xor
fwait
jle
mov
movsl
dec
imul
addr16
push
pop
mov
lret
lods
sub
xor
adc
arpl
int3
das
mov
into
ds
leave
aad
sub
mov
cltd
sahf
gs
js
or
leave
movl
mov
mov
mov
testl
sub
repz
inc
int
popa
fs
inc
cmp
sub
mov
nop
mov
in
mov
dec
xchg
fisubrs
or
int
or
imul
sbb
call
adc
mov
ret
adc
sbb
fwait
cmc
into
jnp
xor
xor
adcb
test
sub
cli
jo
and
mov
push
sti
sub
clc
daa
aam
mov
mov
leave
dec
out
pop
xor
wrmsr
cmp
xor
or
push
push
pop
cmpb
adc
jo
mov
shrl
cmpsl
movsb
inc
mov
dec
or
xchg
mov
xchg
pop
xor
push
out
das
jg
jb
enter
jecxz
jge
pusha
fsubs
sbb
xchg
or
jno
pop
imul
ss
mov
das
ja
loope
add
fwait
insl
pop
cmp
imul
aas
stc
xor
sub
push
mov
fwait
xchg
dec
lahf
inc
rorb
mov
cmp
cmp
cli
jns
cmp
mov
call
fdiv
sub
rclb
jb
insl
pxor
jl
nop
icebp
bound
jno
xor
pushf
js
or
ret
nop
jecxz
xorl
mov
in
repz
std
jmp
mov
iret
pop
mov
andl
add
fldenv
xchg
popf
push
xor
add
call
inc
lds
add
lcall
push
icebp
clc
mov
xor
adc
push
cwtl
popa
jp
aaa
inc
adc
imul
inc
adc
add
add
adc
std
inc
xchg
lock
xchg
sahf
sub
das
movsb
sbb
lods
cltd
in
das
xchg
mov
xchg
sub
push
test
jecxz
pop
mov
test
out
cmpsb
das
insl
push
lods
scas
lret
jecxz
mov
and
les
jl
in
aam
jne
inc
call
rcrl
dec
outsl
dec
sub
cwtl
mov
test
int
cmp
loope
fucomi
cmp
mov
sahf
rorb
and
lods
push
jecxz
xor
movsl
push
in
imul
pop
popf
jle
push
and
add
inc
mov
mov
dec
popf
push
lahf
push
inc
adc
jne
push
xor
jae
push
xor
cmc
push
or
rcl
repnz
daa
mov
lret
push
int
inc
inc
mov
mov
cmp
bound
xchg
cmc
cmp
sub
test
out
jmp
mov
sahf
lahf
sbb
fldenv
es
pop
fbld
or
cwtl
ja
insb
sbb
outsb
daa
or
sbb
sti
push
cmp
push
popf
cmpsl
sbb
pushf
cs
or
cwtl
or
orl
jl
dec
jne,pt
mov
mov
mov
pop
in
ljmp
mov
sbb
adc
inc
and
xchg
repnz
mov
insb
push
setle
adc
aad
pop
std
mov
or
mov
das
jns
test
cmp
push
fsubrs
sarl
mov
mul
lds
scas
adc
jne
insl
jb
sbb
sub
sub
imulb
jmp
lods
subl
nop
mov
and
add
inc
push
push
cli
dec
je
sub
or
xor
cwtl
inc
pop
pop
jl
das
sub
mov
test
cmpb
stos
or
jmp
add
ss
sbb
iret
das
xchg
sub
loopne
mov
das
push
or
cmpsb
mov
xlat
repz
push
rol
push
xchg
fistpl
ljmp
add
pop
cmp
fwait
xor
jp
push
sub
or
outsl
and
mov
or
jmp
push
jmp
cltd
adc
sbb
outsl
mov
dec
popf
pop
cmp
lods
insb
int3
jle
mov
push
push
xchg
into
add
dec
mov
clc
inc
cmpsl
pop
xchg
inc
bound
pop
push
out
daa
inc
push
sbb
lods
aas
arpl
push
ja
mov
lret
std
mov
xor
clc
mov
add
xchg
sbbl
mov
addl
arpl
shl
sbb
out
std
add
or
xor
xlat
mov
mov
leave
push
pop
sbb
xlat
sbb
jmp
or
cmp
xor
add
enter
cltd
xlat
stos
adc
push
push
mov
sub
in
std
out
mov
mov
xchg
lret
in
jno
fcompl
xor
out
imul
inc
inc
fmulp
pop
std
pusha
push
inc
clc
jb
pushl
nop
mov
stc
ja
shrl
add
xor
xor
xchg
inc
inc
ljmp
lret
enter
and
cs
imulb
jge
jae
sbb
cmpsb
and
pop
pop
out
test
xchg
add
push
inc
into
pop
mov
push
js
cli
pop
mov
mov
pop
into
sub
movsl
call
notl
fldl
adc
clc
imul
pusha
fnsave
xor
sahf
add
lods
fildl
cli
sbb
scas
sahf
mov
mov
nop
push
add
xor
mov
cmp
mov
mov
xor
xlat
inc
test
fwait
xor
or
xor
stos
push
xor
out
xchg
mov
test
ss
lahf
adcb
xor
push
call
popf
lahf
sarb
adc
in
arpl
cmp
jno
mov
int
or
jns
xor
push
pop
pop
sub
ja
cmp
out
loope
mov
cmp
sub
ja
cltd
repz
jae
shrl
fnstsw
int3
fcomp
mov
and
mov
mov
insl
test
adc
push
sub
push
inc
pop
outsb
iret
mov
push
outsl
arpl
mov
cmpsb
leave
and
arpl
scas
push
lret
popa
push
mov
push
stos
scas
mov
int3
lret
push
imul
ljmp
pop
sar
aaa
cmp
push
sarb
xor
add
sahf
fildl
repnz
mov
jne
sbb
sub
mov
orl
cmp
mov
nop
xchg
mov
fstp
jne
enter
and
adc
fmul
jecxz
dec
push
insb
inc
jns
pop
sbb
mov
scas
out
dec
sbb
jmp
xor
imul
inc
add
mov
mov
imul
xor
fstl
xchg
jecxz
mov
mov
pop
lods
inc
adc
adc
test
mov
fistpll
repz
sbb
sbb
loop
mov
sbb
add
stos
por
nop
xor
subb
pop
and
bound
push
rorl
loope
xor
jecxz
cmp
and
push
inc
addr16
call
mov
mov
das
xorl
xlat
fadds
pop
mov
dec
sbb
push
aam
rorl
cwtl
call
jae
enter
not
pop
pop
int
sub
jb
imul
movsb
pushf
lds
xorl
cmp
out
xchg
pop
xor
xor
mov
push
add
fidivs
dec
xor
add
lea
jnp
inc
andb
cmp
push
fisttpl
xlat
jmp
cmp
mov
shl
mov
jecxz
es
or
pop
loopne
mov
xchg
mov
jb
mov
test
imul
mov
xor
mov
cmp
stos
out
int
sub
pop
and
xchg
rcrl
push
repz
cmpsb
aaa
arpl
test
inc
mov
cmp
add
insb
mov
mov
pushf
sub
or
addr16
mov
roll
sub
sub
les
mov
or
push
test
dec
mov
test
pop
xor
or
rolb
daa
add
push
ljmp
sarl
push
int3
dec
xor
mov
push
test
shll
les
addr16
xchg
cld
int
and
divl
mov
arpl
pop
ljmp
lret
movsl
clc
inc
mov
loopne
call
fdivrl
popf
ss
jno
inc
fstps
mov
leave
imul
mov
mov
fisubl
daa
sbbb
push
gs
push
icebp
push
std
or
jp
ja
sbb
push
jecxz
ret
ss
dec
sbb
and
int
mov
sub
cwtl
xchg
jno
jp
test
mov
aaa
and
adc
aas
icebp
dec
shrl
push
cmpsl
or
adc
ret
arpl
fs
notl
dec
push
sahf
imul
leave
rclb
pop
pushf
test
dec
mov
nop
out
cltd
addl
bound
mov
jb
mov
push
lods
add
inc
ljmp
ds
mov
jle
or
jb
mov
sbb
insl
out
das
adc
xchg
ret
or
aas
ja
lods
xchg
outsb
mov
jns
mov
mov
movsb
pop
loopne
jb
out
mov
lcall
loopne
lahf
xor
adc
pop
and
or
fs
adcb
test
pushl
add
jo
xchg
xor
jge
fildl
pop
and
dec
jmp
cwtl
dec
sahf
pop
shrl
and
mov
rorb
push
lret
jecxz
daa
loope
push
xchg
pop
push
lods
push
rcll
jmp
lret
dec
and
call
sbb
xchg
inc
pusha
aam
in
sub
pop
out
loopne
inc
push
aas
aas
fnstenv
out
leave
int
pop
cmp
jecxz
mov
pusha
sbb
mov
cmp
mov
sbb
aad
pop
bnd
leave
jns
rorl
arpl
imul
dec
movsb
pop
dec
push
xor
sub
mov
mov
cmp
shrb
loopne
lock
add
xor
pusha
int
fldl
or
sarb
dec
lock
add
xor
pusha
int
fldl
lea
std
loopne
xor
sub
xor
pusha
int
fstl
nop
sbb
loopne
jo
add
xor
aaa
fadds
lahf
xor
mov
xor
pushf
xchg
mov
fdivrl
sub
xor
sbb
push
jle
outsb
jl
pop
dec
pop
mov
mov
cld
fmulp
into
fdivrl
cs
sub
sbb
movd
mov
mov
cmc
out
in
aam
ds
or
sbb
sub
and
lret
clc
loop
aaa
add
aad
ss
xchg
or
dec
cmp
dec
pop
div
and
pusha
add
add
inc
xor
stos
aam
sbb
sbb
jmp
ret
adc
push
cmpsb
cmp
mov
nop
xor
test
into
cltd
jl,pn
jl
mov
pop
mov
mov
cmp
xchg
into
and
in
fs
aas
cs
jnp
inc
xchg
dec
pop
jle
jno
cmpsl
int3
out
add
mov
mov
jae
sub
dec
dec
mov
pop
mov
sbb
imul
jecxz
sbb
scas
stos
sahf
pushf
mov
into
lds
xor
and
adc
outsb
imul
cmp
leave
fidivrl
mov
int3
mov
inc
dec
inc
push
pop
jbe
jg
outsb
das
cmp
aam
mov
lahf
stos
into
cmpsb
test
mov
push
jg
sbb
push
pop
jg
add
xor
cmp
fucomi
scas
fyl2x
in
loop
mov
out
cld
fmulp
into
fdivrl
sub
cmp
or
sbb
insb
outsb
jl
dec
dec
pop
mov
mov
cld
fmulp
into
fdivrl
sub
cmp
or
sbb
insb
outsb
jl
dec
dec
pop
mov
lods
mov
cltd
xor
mov
aaa
adc
push
pop
push
mov
xor
dec
bound
xchg
pop
inc
mov
mov
jbe
fmuls
les
push
and
push
mov
test
xchg
dec
dec
lock
orb
jb
jmp
pop
shrl
xchg
lret
in
bound
je
xor
ds
je
push
push
bound
cmp
xor
decb
repnz
jbe
cmpsb
pop
lods
mov
loopne
sub
push
cld
sub
add
xchg
push
add
pusha
xor
das
ret
jmp
xor
pop
jo
shrl
gs
mov
cmpsl
push
push
inc
movsb
mov
cmp
xchg
aam
mov
add
inc
mov
pop
aas
push
sub
clc
rcr
xor
rorb
or
add
add
sbb
push
addb
shl
sbb
les
out
int
int
pop
lahf
jp
repnz
or
push
and
int3
mov
mov
shr
jl
and
and
decb
roll
in
lods
popa
inc
sar
sub
cmp
nop
out
push
jne
sub
push
pop
dec
lahf
sahf
cmp
daa
fwait
inc
xor
cmp
mov
imul
jecxz
cltd
adc
and
sbb
test
outsb
inc
mov
out
pusha
scas
dec
cmp
xchg
iret
jl
call
xchg
cli
in
add
push
sbb
pop
pop
fnstenv
jno
nop
dec
push
add
cmpxchg
iret
pop
inc
insl
pop
cmp
pop
insb
xor
add
mov
repnz
push
cltd
xchg
pop
pop
mov
ds
insb
stc
ss
cltd
jno
nop
aad
adc
sbb
xchg
cwtl
stos
outsb
jge
out
je
test
testb
popl
mov
jo
mov
es
clc
jnp
fdivl
mov
ds
xor
mov
xor
jae
fistpl
mov
push
gs
dec
iret
jns
push
es
sahf
arpl
cwtl
popf
shll
movsb
mov
jl
sbb
testb
in
data16
loop
mov
dec
ret
inc
push
push
in
xchg
mov
adc
or
insb
dec
add
mov
fsub
cmc
mov
xor
adc
les
xor
pop
add
mov
int3
lret
lcall
data16
or
jecxz
xchg
jbe
or
int3
idivl
jecxz
ja
xor
loop
mov
and
cmpsl
test
push
jbe
add
fstpt
fsub
mov
rcl
out
pusha
jns
incl
lahf
cmpsb
mov
outsb
je
xor
push
subb
jo
add
push
in
adc
rclb
fwait
mov
push
int
sbb
sub
sbb
pop
loopne
jecxz
lcall
xchg
mov
mov
in
fcompl
sbb
fs
xchg
mov
xor
inc
push
in
push
stc
les
jo
and
lea
push
cmp
xchg
js
mov
das
fmul
dec
and
das
sbb
mov
lea
out
xchg
hlt
lock
push
mov
xor
mov
mov
mov
inc
push
pushf
mov
cmc
fisttpll
das
push
xor
dec
mov
adc
fdivrl
in
and
and
mov
xor
fdivl
aas
aad
mov
test
imul
dec
cmp
hlt
mov
in
aaa
mov
adc
pop
xchg
jg
push
xchg
inc
cmp
int
adc
movsb
nop
in
int
cmpsb
je
sub
mov
addr16
or
add
jg
cwtl
movsl
dec
ja
dec
fs
fistpll
pop
xchg
jnp
jae
pushf
pop
aaa
gs
scas
mov
and
das
nop
inc
adc
imul
dec
xchg
sub
pop
xorb
adc
jns
rcrl
sbb
add
loope
imul
xchg
mov
sbb
vpunpckhbw
in
and
cmpsl
hlt
jmp
icebp
bnd
int3
mov
fnstenv
and
in
mov
jp
nop
test
imul
sub
mov
add
pop
in
repz
cmp
jmp
xor
sbb
lock
mov
in
push
xlat
cmpsl
inc
sbb
pop
sbb
jae
xor
dec
ss
arpl
adc
out
mov
pop
imul
mov
loopne
dec
add
mov
cld
mov
cmpsb
mov
xchg
or
push
push
and
in
lahf
cmpl
adc
xchg
xchg
insb
scas
mov
test
push
jnp
pushf
inc
mov
insl
and
pop
xor
cmp
push
dec
pand
and
in
dec
stos
jmp
lock
dec
out
jg
sbbb
push
aaa
mov
stos
cltd
pop
jl
cmp
leave
sbb
out
fpatan
minps
stos
mov
jecxz
lea
lds
jne
iret
stos
orb
loop
lret
jae
fisubs
insb
add
shl
jmp
js
rcll
push
xchg
mov
jmp
loop
lret
repnz
mov
imul
xchg
lret
xor
jmp
mov
sub
test
and
and
daa
sbb
inc
out
test
ficomps
push
and
sub
dec
fiadds
orl
mov
movsb
cmp
sti
stos
daa
jns
aaa
add
jmp
and
mov
pop
mov
cltd
pop
mov
xchg
cmpsl
iret
xor
stos
xchg
sti
pop
cmc
inc
jg
mov
and
data16
push
fstps
push
std
dec
mov
or
xor
add
lret
enter
jecxz
cmc
lcall
leave
lahf
push
sbb
lret
or
ds
in
push
shl
and
jge
xor
or
aam
sub
or
hlt
xchg
ja
sbb
mov
sarb
or
or
jecxz
cmp
push
loopne
fcoml
xchg
push
iret
or
xchg
or
loope
mov
mov
push
adc
or
outsl
dec
lea
sub
pcmpgtw
mov
sub
ds
xchg
dec
or
sub
movsb
push
fsts
pusha
add
insb
xchg
inc
mov
movsb
mov
inc
cmp
push
jecxz
repz
aas
and
pop
inc
shll
mov
bound
add
adc
mov
inc
mov
inc
push
test
int3
fs
add
jg
insl
test
and
pop
sub
jl
push
ffreep
test
mov
push
dec
sub
push
sbb
jecxz
and
xorl
cmc
scas
and
mov
in
or
aad
sub
jg
jle
pushf
xor
lret
jl
mov
and
pop
aad
and
push
jne
xchg
call
ja
dec
stc
ret
add
push
sbb
into
mov
pop
aaa
lret
add
inc
movsl
imul
nop
xchg
lret
pop
test
repz
aam
fsts
jae
and
inc
sub
mov
cmpxchg
or
mov
lods
inc
inc
mov
and
inc
dec
jle
les
faddp
and
push
adc
rcll
inc
xor
cmp
xchg
pop
fsubrl
jp
xor
fwait
pusha
rol
jbe
xor
fdivr
sti
inc
cwtl
inc
fists
lods
sbb
andl
adc
aad
in
push
sbb
mov
pop
jp
es
xchg
fucomp
mov
sahf
xlat
ds
ret
movsb
insb
shrl
aas
mov
jae
sbb
xchg
test
push
push
adc
fmuls
je
rolb
xchg
loope
sahf
pop
insl
js
or
packssdw
jne
scas
iret
push
mov
pop
divps
mov
fstps
mov
sbb
push
adc
scas
mov
push
nop
jae
jg
rcrl
pop
mov
in
adc
jp
mov
push
dec
jle
xor
mov
dec
xchg
sti
jns
mov
cmp
jmp
xchg
mov
jp
adc
xchg
out
punpckldq
or
push
and
push
shrb
push
mov
jne
shll
and
mov
scas
push
pop
sub
adc
imul
mov
lret
pop
pusha
add
out
push
mov
ret
jecxz
test
pop
add
ret
or
scas
inc
adc
xlat
pop
andb
adc
in
jb
xchg
pusha
xchg
dec
dec
cmp
inc
loopne
sbb
mov
cmpb
and
lea
cltd
jns
mov
lods
ss
insl
fnstcw
int3
or
fildll
pusha
jae
mov
cmc
pop
movsl
or
and
mov
aas
xor
jnp
push
dec
lea
ds
and
push
add
jmp
inc
mov
lock
sbb
push
cltd
mov
mov
fs
mov
bound
inc
insb
aad
inc
mov
and
ficomps
ja
es
fwait
mov
jg
pop
mov
mov
es
loop
pop
dec
jns
movl
std
imul
pop
sbb
pop
pushf
xlat
or
sbb
cwtl
xchg
std
add
sti
pop
push
fisubl
pop
fprem
sahf
arpl
mov
jl
ss
notb
repz
shll
pop
lea
mov
pop
pop
sbb
xor
stos
test
xchg
std
call
push
imul
mov
mov
jns
jbe
add
iret
ss
aas
fbld
pop
test
lock
cmp
or
pop
pop
mov
in
xor
add
cmp
leave
or
mov
popa
mov
test
adc
lcall
scas
lea
jmp
mov
ja
sti
mov
popl
movsb
sub
inc
inc
lcall
jnp
add
shrb
pushf
data16
mov
mov
mov
or
dec
addb
xorb
push
enter
leave
data16
mov
inc
push
sarl
das
test
cld
mov
rolb
ds
cmpsl
bound
adc
sbbb
leave
mov
mov
js
xchg
iret
lds
mov
sbb
push
push
pop
popf
int3
int3
fdivrl
pop
jno
lcall
xor
mov
mov
cmp
rclb
push
fstp
cmpsb
cmp
fbld
enter
ror
sbb
rclb
ds
int3
in
imul
int3
fsubs
sbb
lahf
jg
jbe
inc
cmc
cmc
jg
adc
lcall
and
je,pn
fdivl
push
cld
xlat
mov
cli
push
out
inc
mov
push
lahf
pop
test
jle
mov
sbb
xchg
leave
and
test
das
sub
pop
je
inc
inc
lds
push
movsb
jns
push
imul
in
cmpl
insb
jns
inc
imul
out
jmp
imul
pop
xchg
cmp
cmp
out
addr16
fs
pop
xchg
push
iret
xlat
jecxz
les
call
pop
ja
mov
xchg
mov
inc
int
sar
xchg
lock
std
ret
pop
cltd
and
and
push
dec
cmp
lret
inc
mov
sub
jl
orb
test
out
aaa
sub
jle
call
add
insl
xrelease
mov
lock
out
ljmp
ds
pop
sub
push
imul
jp
ja
xor
inc
adc
cli
dec
inc
idivb
leave
jg
loopne
jmp
cmpl
xor
cmp
shlb
sbb
inc
cmc
ret
ret
test
fwait
test
jns
sbb
and
scas
inc
adc
cltd
xchg
cltd
add
sbb
fmuls
imul
bswap
rcl
inc
fldl
sbb
shrl
jo
xor
push
mov
fbld
jp
xchg
fs
or
out
cld
inc
xor
aas
dec
lock
movsb
sub
mov
mov
inc
mov
rcr
fldenv
icebp
cmpb
inc
sti
das
or
adc
and
clc
mov
xchg
mov
sub
pop
orb
bound
pop
dec
adc
cli
movsb
push
push
in
and
mov
add
cmpsl
inc
or
xchg
mov
movsl
push
mov
shl
cmpsl
mov
aaa
jmp
jecxz
mov
rep
jo
ret
xchg
pushf
cmp
test
stc
dec
sbb
mov
push
jnp
sti
fcmovne
imul
repz
dec
inc
mov
movsl
push
jl
fs
jbe
imul
shlb
inc
xchg
and
aam
xor
dec
xlat
inc
inc
test
xor
inc
cmp
jo
in
outsb
inc
mov
xlat
jae
cmp
mov
movl
cmp
push
clc
aas
out
sub
sub
fcoml
mov
fisttpll
lcall
outsl
aam
repz
insl
cwtl
dec
js,pt
sbb
daa
das
pop
fstl
lcall
pop
or
or
push
or
sub
cli
loop
scas
bound
mov
sbb
mull
into
ja
insb
adc
nop
lea
test
jmp
mov
es
sub
push
das
scas
shll
mov
sti
add
pop
push
js
xchg
mov
cmpsb
jae
cmc
scas
sbb
mov
xor
fidivs
push
out
fbstp
xor
mov
inc
iret
or
mov
imul
xor
mov
push
bound
xchg
mov
daa
cmpsb
or
dec
pop
xor
mov
mov
fnsave
or
mov
data16
sub
jecxz
movsb
into
inc
pusha
sub
xchg
sbb
adcb
jnp
inc
out
js
mov
es
push
fistpll
js
sub
cmp
or
mov
xchg
leave
xor
cmp
sbb
test
mov
mov
sub
negb
arpl
dec
sub
daa
lds
pop
popa
pop
rcll
fwait
pop
cld
mov
out
out
ret
mov
inc
aaa
xor
and
daa
gs
movsl
icebp
lods
xor
push
lock
push
bnd
in
jg
mov
adc
in
ja
loope
cltd
sbb
xchg
add
jp
imul
daa
dec
test
dec
pop
leave
mov
fwait
gs
lock
dec
mov
pop
pop
popf
mov
das
lret
pop
ret
mov
ret
fisttpl
lcallw
mov
sbb
xlat
mov
jne
movsb
lahf
mov
dec
push
mov
xorb
cmpsl
icebp
cld
dec
pop
and
cli
popf
cmp
mov
mov
and
std
insb
data16
or
mov
push
and
gs
push
pop
cmp
fmuls
mov
push
imul
or
inc
std
sbb
in
in
dec
jle
cld
rcll
es
cld
stos
mov
clc
jl
ljmp
xor
scas
in
inc
push
dec
lock
enter
dec
jmp
push
add
loope
inc
pop
jmp
aad
pop
push
outsb
pop
xchg
push
dec
sbbb
jecxz
inc
inc
push
les
xchg
subb
fnstsw
xor
inc
cmp
scas
pop
enter
and
and
xchg
xchg
jmp
sbb
int
negl
int
mov
aad
in
and
cmp
and
mov
mov
or
les
mov
or
jb
pusha
stos
fildll
jns
fistps
fs
js
cli
inc
icebp
call
sarl
push
mov
mov
movsl
scas
push
and
pop
enter
cmp
xchg
or
clc
popf
das
add
out
mov
not
cmc
push
orb
lea
xchg
arpl
add
xchg
cmp
cld
js
jmp
pop
sub
popf
mov
fmull
ja
lock
sbb
inc
sti
sarb
stos
aad
sub
push
das
pop
daa
dec
imul
and
inc
jle
pop
cs
movsb
mov
cmp
mov
cmpsb
xchg
out
stc
push
aad
inc
pushf
xchg
aad
xchg
arpl
inc
imul
or
lods
ss
or
sbb
cmpsb
pop
fadds
ror
pop
out
xor
push
ds
adc
cltd
test
fimull
dec
mov
jb
sbb
add
mov
or
xchg
les
lods
insb
test
lea
fwait
inc
jbe
xchg
cld
xchg
mov
inc
enter
scas
sbb
enter
call
mov
pushf
xchg
adc
jns
cmp
stos
js
mov
fcoms
fidivrl
nop
test
rclb
pop
int3
cwtl
adc
sar
les
push
sbb
jmp
mov
dec
pop
insb
push
ljmp
aad
pushf
add
pop
shll
adc
jmp
jb
push
jo
popa
sbb
lds
push
push
xchg
jb
ret
orl
jo
stos
adc
cmp
cli
mov
mov
fstpl
cmpsl
ljmp
imul
addb
pop
xchg
movsb
xor
xchg
adc
mov
fiadds
cmp
and
mov
insl
in
andl
insb
mov
or
mov
fidivl
sarl
or
cmp
daa
dec
inc
adc
iret
dec
jp
lahf
add
gs
popa
in
xlat
jg
pop
push
xlat
push
xchg
in
mov
insb
cmp
add
jns,pt
sbb
sub
xor
icebp
pop
mov
out
cmpsb
push
xchg
jp
inc
xchg
xorps
enter
and
dec
movsb
ja
add
inc
daa
jecxz
outsl
push
push
jbe
pop
mov
mov
ljmp
jp
add
in
push
movsl
mov
insb
xchg
sub
adc
jns
arpl
sub
sub
sarb
cmp
cmc
imul
push
scas
push
add
push
loop
aas
or
xor
xor
xchg
mov
and
inc
cmp
sbb
pushf
jns
shld
mov
mov
imul
xchg
popf
cmp
cmp
imulb
pop
pop
repnz
ss
aad
aas
stos
bnd
or
adc
push
ljmp
outsl
adc
adc
out
mov
iret
ret
jno
xor
jo
insl
gs
mov
lods
sub
xchg
popa
inc
mov
and
rorb
inc
in
sub
test
jns
mov
xchg
sub
xchg
pop
sbbb
xor
xchg
ret
dec
es
jbe
orl
adc
xchg
mov
dec
jb
es
mov
pop
iret
adc
mov
jmp
mov
mov
sub
dec
jg
push
fucompp
addr16
inc
rcll
pop
jecxz
add
enter
dec
mov
lea
out
push
push
pop
sbb
repz
ficoms
leave
or
loop
xchg
mov
jmp
icebp
dec
dec
clc
cmc
cmp
adc
fcoml
inc
jbe
adc
stc
pop
lods
mov
fisubrs
stos
orb
fisubl
mov
inc
adcb
rclb
shll
or
sub
pop
sub
mov
mov
cmc
dec
popf
rclb
cmp
in
or
or
aad
out
scas
jne
je
cmp
and
mov
and
xchg
dec
mov
aad
xorb
pop
lret
popa
out
fcomps
imul
jo
sbb
test
mov
mov
dec
test
pop
stc
out
je
cmpsb
psrad
es
mov
push
jnp
and
sahf
scas
xchg
push
mov
push
jmp
les
les
inc
mov
inc
mov
pop
cs
mov
aaa
shlb
stos
sub
inc
mov
push
jg
shrb
add
pop
aas
cmp
pop
leave
mov
jo
jne
and
jns
jl
bound
jmp
inc
lcall
ror
push
ret
js
in
and
mov
xor
inc
stos
push
jge
mov
int3
xor
cli
inc
mov
stos
mov
inc
movaps
cmp
icebp
dec
cmp
fildl
leave
xor
mov
pop
mov
leave
out
adc
fbld
int
and
sub
inc
adc
cli
mov
lods
jns
lcall
insl
mov
jb
cmp
cmp
inc
int3
xchg
imul
dec
mov
stos
dec
cmpsl
mov
aas
or
insb
popf
xchg
ret
stos
xor
jle
orl
push
fldln2
and
jp
mov
sbb
aas
sub
mov
mov
jecxz
xor
lock
push
inc
daa
out
lcall
push
dec
adc
xor
lahf
arpl
cld
fmulp
into
fdivrl
sub
cmp
or
sbb
insb
outsb
jl
dec
dec
pop
mov
mov
cld
fmulp
into
fdivrl
sub
cmp
or
sbb
insb
outsb
jl
dec
dec
pop
mov
mov
cld
fmulp
dec
fdivrl
sub
cmp
or
sbb
pop
dec
dec
pop
mov
mov
cld
fmulp
into
fdivrl
sub
xchg
mov
push
imul
push
subl
mov
inc
ljmp
and
jg
movsl
jg
pop
ret
push
or
xchg
subb
cmp
jo
jo
push
cli
and
adc
ljmp
jp
js
sbb
shrl
pop
repnz
loop
xchg
sub
loopne
sti
jns
adc
repz
stc
push
adc
ds
sub
pop
xor
push
sbb
cmp
aam
dec
xchg
mov
lahf
inc
pusha
lret
inc
jecxz
stos
out
iret
imul
mov
movsb
aas
cmp
test
out
insb
ficompl
mov
fsts
mov
cltd
or
loop
cvtps2pd
scas
cmc
mov
mov
pusha
and
add
ficoms
aas
aam
cwtl
movsb
rclb
lahf
rcl
sub
adc
lock
adc
shld
xchg
rol
or
mov
or
xor
fnsave
add
ljmp
roll
pusha
sub
lret
inc
cli
xor
or
fdivs
arpl
xor
test
xor
inc
mov
add
jge
xchg
and
mov
sbb
inc
cmc
push
pusha
mov
push
xchg
push
mov
insb
ficoms
loop
lock
test
movsl
js
jp
sbb
dec
nop
dec
or
inc
fisubl
mov
adc
shrb
mov
sub
fiaddl
push
cli
and
adc
shrb
mov
sub
leave
sbb
clc
lidtl
mov
roll
sub
lea
jp
adc
jne
out
sub
mov
fsubr
jle
dec
loop
mov
or
xchg
inc
fsubs
rolb
mov
jmp
push
push
xor
push
pop
sub
and
xor
dec
andl
mov
and
xchg
mov
add
loopne
mov
das
pop
fimuls
ror
out
push
mov
call
dec
scas
stos
js
pop
sub
jp
push
lea
jbe
shrl
pusha
cmpsl
add
test
and
jb
in
add
lret
mov
daa
and
clc
loopne
mov
std
mov
lock
push
stc
out
test
or
xchg
and
dec
sahf
movsl
cmp
out
ds
adc
cmp
cmpsb
stc
jge
scas
in
mov
sub
sbb
in
jecxz
pushf
mov
clc
pop
repnz
adc
mov
jg
jbe
aad
ss
cmpsl
sub
mov
jmp
push
lea
and
xchg
bound
add
and
mov
addl
push
lods
loope
cli
adc
scas
jns
jge
into
push
fisubrl
cmpb
enter
sbb
out
lret
fwait
cmpsl
enter
mov
mov
loope
pop
sbbl
push
fidivrl
rcll
add
mov
movsl
in
mov
fwait
jnp
mov
mov
sub
and
out
imul
mov
pop
pop
shlb
lock
xlat
leave
in
and
stos
sbb
adc
or
arpl
jb
stos
dec
mov
xchg
mov
sbb
jecxz
lods
iret
nop
lods
xchg
lock
jb
arpl
loopne
push
jg
inc
fs
insb
sbb
cmp
stos
pop
sbb
mov
push
repnz
pop
xor
clc
cmpsb
rcll
loope
lds
aad
rcll
sub
adc
jge
imul
pop
fidivrl
ds
int
in
add
adc
andl
and
mov
push
jecxz
pop
cld
push
rorb
imulb
out
loope
dec
cmc
push
sub
or
mov
int3
mov
xlat
mov
mov
mov
push
dec
xor
out
out
mov
fnstenv
loope
in
dec
inc
mov
xchg
push
or
lahf
mov
fiaddl
shr
cwtl
fsubl
mov
fucomip
outsl
xor
mov
or
jmp
shlb
xor
imulb
roll
jbe
mov
push
cltd
jbe
insb
inc
incb
sub
mov
lods
jle
pop
xchg
mov
pop
bound
mov
inc
in
outsl
shlb
int3
cmp
jns
dec
test
lcall
es
pop
inc
or
popf
repz
ja
xchg
mov
stc
in
bnd
adc
je
xlat
adc
cs
sbb
js
ret
inc
bound
pop
push
or
inc
pop
sub
lret
aad
cs
xchg
push
filds
pop
jecxz
push
lret
cmp
mov
popf
jmp
lahf
int
fnstcw
in
gs
stos
lcall
imul
mov
pop
sub
in
pop
xor
or
mov
mov
push
jns
xor
aaa
sub
xor
push
xlat
push
push
out
jbe
mov
cwtl
push
and
cmpb
popa
cltd
icebp
mov
inc
jb
mov
pop
hlt
jae
mov
jp
shlb
adc
fstps
stos
mov
mov
test
cli
lcall
jp
jae
cmpsb
into
insl
xchg
xor
bound
push
lea
fisttpll
hlt
dec
push
aas
sbb
enter
fdivrp
cmp
and
xchg
stos
shrl
adc
jge
pop
out
lret
repz
loope
xor
mov
sbb
in
cwtl
gs
push
test
repz
pop
push
mov
mov
es
stc
lods
sbb
or
and
popf
pop
jne
jns
xlat
in
jbe
push
stc
xor
jge
std
pop
sbb
into
lret
mov
xor
lcall
sbb
or
sbb
daa
out
aam
xchg
cmp
in
mov
int
xor
mov
xchg
jae
push
inc
push
or
test
in
inc
or
mov
ja
xchg
sub
rolb
adc
lock
arpl
pop
jle
xchg
inc
pushf
lcall
or
imul
xor
mov
jg
mov
ds
or
mov
test
stos
loope
dec
ja
add
aas
popf
std
js
mov
mov
jp
aam
out
add
xor
jo
jmp
jle
pushf
or
jl
lret
cmp
mov
xor
and
push
push
int3
lret
push
cmp
cli
inc
xor
arpl
cmp
es
mov
mov
into
lahf
and
or
in
fsts
dec
nop
popa
lds
push
decb
sbb
pop
cmp
mov
push
jne
sbb
mov
mov
adc
push
test
insl
out
xchg
arpl
sar
ja
call
mov
mov
sub
cmp
in
out
clc
mov
scas
loop
stc
roll
mov
mov
popf
flds
cltd
pop
shlb
dec
aas
adc
bnd
cwtl
jns
xor
outsb
pusha
lods
xlat
gs
addr16
and
add
xor
adc
jbe
cmp
pop
adc
sub
jae
repz
pop
sbb
ja
and
fdivrl
aam
test
sbb
add
pop
pop
das
xchg
lods
mov
fwait
xor
xchg
xlat
push
push
mov
xor
add
mov
lea
loop
test
xchg
or
shr
xor
xor
lds
test
shll
mov
lods
mov
push
into
pop
or
iret
dec
andb
rclb
or
adc
imul
push
xor
popa
dec
adc
es
dec
jl
jge
and
outsl
and
fcomip
add
mov
mov
fwait
in
in
daa
xlat
sub
fnstcw
mull
ret
xchg
and
mov
loopne
mov
popf
negl
mov
js
fs
pop
dec
das
test
fcomip
loope
sub
je
mov
movsl
mov
clc
cmp
das
cmp
add
dec
jo
or
mov
iret
push
popa
lock
std
and
xor
lea
sbb
or
aas
dec
push
xor
inc
aaa
lods
pop
test
popa
xor
inc
or
mov
or
out
lret
repnz
ss
iret
fistpll
flds
inc
out
sarl
imul
add
test
sbb
add
mov
xchg
mov
data16
cmc
imul
nop
sbb
lock
dec
sbb
and
mov
xchg
inc
mov
sub
xor
xchg
js
rcrb
out
out
mov
iret
mov
mov
sbb
cmp
adc
sub
adc
mov
push
mov
pop
je
sbb
cmpb
fbstp
loop
sub
mov
dec
mov
lds
arpl
popf
jle
test
aam
je
fwait
mov
je
mov
jno
int
xor
cmp
call
punpcklwd
xor
jmp
sub
pop
roll
ret
lret
cmp
es
sub
lea
push
imul
insb
xchg
insl
jg
jle
sub
in
out
pop
scas
mov
orl
jmp
in
or
fisttpl
out
dec
add
ljmp
stos
mov
or
mov
call
out
sub
xor
fcmovu
or
rorb
push
or
sarl
inc
lcall
lahf
addb
call
jae
dec
jmp
cmpsl
sbb
adc
test
xor
dec
xchg
gs
ret
push
mov
scas
or
dec
outsl
lea
push
subl
add
cmp
addl
mov
lahf
bound
popf
lret
pop
xchg
push
aaa
ljmp
xchg
jo
shlb
dec
std
pushf
ja
sub
xor
or
mov
clc
scas
ret
dec
mov
xor
adc
sub
jae
and
cli
hlt
adc
outsb
xchg
cmpsl
movsb
cwtl
mov
jb
mov
jnp,pt
stc
je
ss
dec
mov
xchg
cld
and
shll
inc
jg
mov
in
es
fs
js
pusha
clc
or
cmp
adc
push
loop
and
test
call
jle
es
mov
cmpsb
sub
frstor
ljmp
cmp
addr16
or
bound
lods
decl
adc
lds
jnp
shr
cmc
fwait
arpl
inc
lret
icebp
xchg
std
in
je
inc
sub
mov
push
xlat
pop
test
icebp
pop
dec
dec
push
jnp
mov
icebp
out
or
jl
adc
sbb
dec
dec
jo
jns
dec
mov
nop
test
popf
cmp
stc
into
in
cs
gs
jl
loop
cmp
roll
adc
rcrl
mov
aad
in
test
xchg
add
dec
lret
cmpsl
loopne
mov
outsb
inc
push
sbb
lds
sub
insb
sbb
mov
nop
ret
in
outsl
lahf
loop
jp
push
lods
leave
fldcw
std
mov
aaa
ds
add
in
cmp
pop
mov
sub
call
adc
rcrl
inc
jle
pop
adc
push
out
adc
test
loop
push
cmc
lds
push
and
es
arpl
push
js
dec
mov
adc
lea
orl
pop
mov
push
add
flds
shr
or
lock
and
mov
lds
ret
xchg
rolb
inc
sbb
mov
mov
jbe
mov
shr
dec
les
mov
cmp
or
xchg
call
sti
outsl
adc
inc
jo
push
xor
lcall
mov
in
inc
inc
cvtps2pi
lcall
cmp
arpl
xor
sub
lds
pop
push
gs
jno
ss
cmc
sub
into
xchg
imul
ror
out
imul
xchg
aad
push
iret
dec
or
inc
inc
iret
cltd
cmp
outsb
dec
cmpsl
or
dec
fistpl
sub
sub
mov
sub
lds
shrb
daa
testl
out
or
xchg
movsl
xchg
aas
popf
into
insl
jecxz
sbb
imul
xor
mov
jl
ror
xor
sub
popf
cmp
inc
les
idiv
add
fsubr
out
push
fldt
divl
or
daa
dec
ja
inc
xchg
adc
popa
lahf
lods
mov
xchg
cmp
sbb
sub
gs
cmpsb
and
out
xchg
xor
mov
cltd
mov
jb
movsl
aad
jns,pn
dec
push
les
paddw
dec
xor
stos
les
xorl
filds
mov
adc
cmp
mov
std
shrl
sbb
adc
xchg
inc
push
fnstcw
push
adc
cltd
jae
inc
or
mov
aad
out
in
movsl
lods
pushf
mov
dec
mov
fdivs
pushf
cwtl
xchg
or
imul
adc
in
imull
je
cmc
repz
test
mov
les
push
dec
loopne
test
int
bound
repnz
lcall
xor
push
dec
rcll
fiaddl
mov
lret
sub
int3
sarl
cwtl
loope
mov
loope
movsb
mov
les
std
sbb
mov
enter
jp
mov
jmp
and
push
cmp
xchg
push
arpl
leave
sbb
out
fwait
mov
popf
push
movsl
mov
nop
push
add
and
out
mov
repnz
xchg
xlat
repz
push
fsubrl
aad
push
shl
adc
cmpsl
ret
cmc
les
lea
shr
pop
lret
fists
jmp
push
mov
rcll
shll
out
ljmp
icebp
xchg
xor
cltd
mov
aad
mov
scas
rcrb
enter
sbb
mov
rcl
in
mov
enter
dec
xchg
adc
push
jmp
in
popf
and
pop
sbb
mov
sahf
push
movzwl
pushl
in
pop
lcall
mov
data16
add
push
fildl
pop
aad
pop
mov
or
lock
or
jmp
cmpsl
fs
or
es
pop
repnz
xchg
test
jbe
in
mov
outsb
pop
push
pusha
stc
rorl
jmp
int3
jnp
jle
aas
add
pop
roll
and
aas
xor
push
jbe
jle
lds
and
push
cmp
cmp
mov
lahf
stos
mov
cmc
or
lock
lock
lret
fistl
in
mov
or
scas
pop
push
pop
stos
std
fs
dec
inc
shll
imul
xchg
mov
rdtsc
and
or
or
clc
dec
gs
push
adc
iret
xor
and
es
mov
cmp
sahf
mov
mov
icebp
loopne
stos
xor
jge
bound
ss
jl
cmp
jmp
loop
in
jp
pop
dec
ret
call
fs
movsb
cmpsb
or
sub
mov
dec
sar
js
push
fs
mov
add
test
daa
shlb
out
in
aas
push
icebp
mov
push
add
pop
dec
imul
mov
inc
inc
pop
xor
xchg
add
xlat
sub
int3
jg
inc
jae
mov
pop
push
jne
scas
cmc
push
sub
mov
jl
pcmpeqd
repz
mov
sub
mov
popf
pop
mov
iret
clc
xchg
cmp
loope
xchg
je
pop
adc
outsl
sub
push
cmc
inc
addl
lret
or
rcll
movsl
push
lret
mov
mov
push
cmpsl
lss
je
and
in
cmpsl
incl
fstl
test
hlt
arpl
cmp
or
rcrl
mov
in
jne
mov
push
fdivs
sbb
mov
xchg
cli
and
jne
mov
stos
cmpsb
lcall
mov
xchg
pop
add
test
dec
cmp
inc
push
les
push
jne
cmp
push
lods
ds
pop
add
inc
cltd
push
loope
adc
xchg
push
jge
subb
jl
icebp
sbb
ret
fs
std
or
and
push
daa
mov
push
jns
push
rorb
lcall
ljmp
outsb
inc
inc
aaa
inc
mov
push
or
adc
jno
fsubs
jl
dec
push
sub
data16
xor
gs
push
pushf
movsb
sbb
ja
or
insl
inc
add
mov
or
cmp
mov
imul
test
or
sahf
call
mov
sbb
push
jp
clc
orl
std
inc
pop
leave
aam
xchg
imul
or
sbb
mov
mov
mov
insb
or
sbb
xchg
scas
daa
mov
into
cmpsb
fadds
and
jmp
or
xor
cmp
mov
mov
shlb
mov
xor
and
aaa
jne
adc
movsl
cmpsl
dec
data16
or
stc
sub
add
pop
push
mov
cld
push
outsb
xchg
sbb
pop
add
push
inc
inc
xlat
stos
add
jb
imul
hlt
outsb
mov
push
or
pop
sub
rorb
push
and
inc
mov
out
out
lods
push
push
add
adc
sbb
jge
js
cltd
scas
adcl
xor
mov
pusha
push
inc
jle
add
pop
nop
jle
ja
xchg
mov
add
inc
pop
sbb
xchg
iret
mov
mov
repz
inc
pop
lahf
cld
dec
pop
inc
jo
and
loope
decl
jle
stos
dec
ret
pop
push
outsb
jne
lock
sahf
scas
add
testb
rclb
sub
and
and
test
xchg
shl
pop
push
les
and
les
stc
mov
scas
stc
outsb
aad
outsl
stos
popa
arpl
xor
mov
leave
adc
fldl
inc
rolb
push
rcr
cmp
sub
jns
cmp
pushf
jp
into
lds
mov
push
inc
ds
jns
stos
inc
outsl
xchg
shrl
or
rcl
xor
mov
inc
aad
sbb
or
stos
or
lret
xchg
mov
mov
notl
and
jle
jae
pop
hlt
fsubs
int
pop
pop
and
push
add
dec
lods
test
repnz
pop
mov
aas
adc
xchg
and
movsl
xor
inc
aas
lret
aam
insl
shl
loopne
fisttpl
sbb
fiadds
icebp
stos
sahf
int
xor
mov
aad
scas
push
mov
outsb
add
test
xchg
xchg
fsubr
inc
jge
jecxz
leave
cmp
push
lds
sbb
roll
aad
hlt
cmpsb
add
shl
fs
out
mov
ja
or
mov
aam
outsl
ret
push
pop
mov
out
in
out
int3
adcl
popa
jmp
vmovaps
scas
lret
pushf
lea
test
mov
lock
cmc
xor
pop
stos
xor
push
add
das
dec
cmp
and
inc
cmpb
nop
cmpsl
loop
adc
stc
stos
pop
xlat
movsl
scas
dec
xor
lods
pop
daa
in
cmp
aad
lods
nop
xor
pop
subb
sub
fwait
icebp
imul
jg
jno
mov
xor
xchg
push
cmpsl
push
jle
andl
lods
lcall
lds
les
cmp
mov
int3
pop
dec
dec
loop
xlat
jbe
push
lods
fistpl
lcall
xchg
das
fstl
gs
mov
in
xor
jb
fwait
ds
lcall
repz
mov
sbb
jne
sub
cmc
divl
lret
lahf
inc
xchg
xchg
cld
xchg
xorb
mov
stc
mov
cltd
mov
push
adc
sub
jae
loope
add
out
aam
sarb
mov
sahf
dec
ja
inc
shl
mov
sbb
dec
push
jge
call
stc
shrl
push
testl
xor
jmp
sub
jl
loopne
and
cmovno
ljmp
xor
mov
pop
sub
jmp
pop
sub
jle
push
mov
fwait
bound
lahf
mov
mov
addr16
ficompl
jo
pop
inc
repz
shll
cltd
loop
enter
das
repnz
aad
out
xchg
std
rcr
ficompl
push
lret
cmp
fstpl
in
dec
adc
xorl
jnp
sti
mov
pop
movsl
xchg
stos
pop
repz
or
mov
inc
pushf
sti
pop
pop
jbe
xlat
pop
mov
mov
mov
stc
adc
aam
cwtl
dec
dec
setno
adc
or
sarb
xchg
mov
push
test
test
test
pop
or
xor
cmpl
cli
push
xchg
cmp
leave
add
lret
cs
jo
js
dec
push
imul
incl
in
push
test
or
les
into
fldt
cltd
test
pop
push
pop
add
imul
inc
cmp
jo
enter
mull
jp
xchg
mov
test
adc
mov
and
adc
xor
sahf
ljmp
lods
pop
idiv
test
mov
mov
ret
hlt
add
cmp
xchg
mov
jb
xor
sub
das
insb
sub
jle
cmpsb
xor
add
cli
inc
adc
idiv
sub
out
aad
outsl
push
xchg
jae
inc
jle
nop
mov
sub
fiadds
daa
mov
xchg
nop
adc
insl
dec
push
mov
mov
adc
and
pop
lcall
and
mov
sti
push
jmp
fistps
mov
mov
cmp
push
repz
lahf
lds
cmp
jnp
mov
ds
or
xlat
mov
imul
out
pop
imul
cli
jmp
dec
repz
cltd
add
out
inc
imul
mov
xchg
fidivl
mov
lcall
lock
shrb
mov
sub
fiaddl
push
cli
and
adc
shrb
mov
sub
fiaddl
push
cli
and
adc
les
jle
or
push
into
inc
fidivs
push
cli
and
nop
jp
dec
push
rorb
jg
outsl
inc
stos
cli
mov
mov
mov
sub
sbb
dec
in
cmc
stos
add
fwait
xor
lret
fildl
sub
sbb
dec
movsl
pop
cmc
stos
xchg
mov
aaa
jmp
sti
imul
pop
sbb
jnp
jle
imul
cmc
filds
repnz
in
lods
fisubs
jns
lods
jecxz
adc
add
cmc
out
lock
mov
mov
jg
mov
inc
sti
test
xchg
mov
in
cmp
jnp
sbb
add
adc
aas
rcrb
mov
ret
test
xchg
or
adc
sub
aad
and
pushf
add
addl
xchg
sahf
fisttpl
ljmp
sub
adc
std
push
jbe
mov
popa
fistl
aaa
insl
push
jne
xor
cmp
pop
or
xor
xadd
jo
outsl
and
jle
sti
pop
jno
pop
sub
mov
pop
jno
add
fwait
aas
jmp
sti
push
lret
mov
cmp
mov
std
imul
sub
into
push
fcoms
mov
xchg
cmp
pop
sarb
pop
fsubr
stos
cmp
fldl
push
call
sub
sbb
pop
ret
jbe
sbb
pushf
xchg
push
cltd
and
push
int
push
scas
and
push
lret
test
xchg
or
jnp
dec
in
cmc
stos
add
fwait
xor
lret
test
xchg
or
jnp
dec
in
cmc
stos
add
in
cmp
or
cmp
inc
call
pop
inc
cmpsl
dec
lds
ljmp
nop
xor
mov
cmp
bound
xchg
push
ret
in
out
aad
popa
jmp
fisubl
xchg
xchg
jecxz
fidivl
xor
add
jp
jge
mov
scas
stc
test
xchg
imul
add
sub
out
int
cmc
aad
dec
xchg
mov
jecxz
xlat
xchg
scas
adc
xor
dec
ljmp
aaa
loope
pop
jb
sti
pop
mov
sahf
stc
mov
pop
shrl
lods
movsl
fmulp
and
mov
add
aas
fwait
pop
cmp
ljmp
sahf
inc
jnp
in
shlb
pusha
add
jae
add
xor
or
xchg
gs
lods
and
mov
lods
or
jb
stc
orl
movsb
xor
mov
nop
add
pop
stos
sahf
xchg
xchg
push
mov
inc
and
cltd
dec
ds
or
movsb
push
inc
mov
mov
xor
stc
fwait
xchg
add
aas
aaa
sbb
test
stc
push
rorb
pusha
rcll
cmc
and
add
mov
rcrb
xchg
push
or
fucompp
jb
xchg
inc
notb
sbb
ljmp
pop
gs
test
fnstsw
jo
lahf
sub
enter
repnz
jge
rcr
mov
jecxz
and
mov
int
ljmp
jb
pop
shlb
enter
or
push
inc
and
dec
pop
jbe
into
std
and
mov
mov
or
push
or
xlat
jns
mov
and
icebp
in
dec
pop
sarl
fstp
insl
jp
mov
cmpsl
insb
dec
lds
fwait
mov
fsubr
in
fdivs
in
xchg
xor
testl
lods
mov
xchg
out
scas
in
push
adcb
cmp
mov
mov
clc
add
sub
cmp
pop
out
and
cld
lock
xor
out
push
ja
lods
divb
jecxz
pop
jp
cmp
arpl
movsl
push
sub
cli
or
das
mov
cmp
lahf
push
testb
and
xchg
push
aas
xchg
pop
xchg
icebp
xchg
push
xor
mov
sub
push
mov
xchg
outsb
dec
rcrl
ror
test
cmc
cli
sbb
jmp
cwtl
ja
jnp
pop
add
xlat
mov
jno
mov
adcb
out
push
cmp
push
xlat
lock
jecxz
stos
shlb
xchg
lret
pushf
imul
inc
xchg
pushf
and
mov
test
cmp
test
sbb
or
test
in
pop
mov
shll
gs
mov
xor
jae
jge
out
and
xor
rclb
out
frstor
sbb
mov
xchg
and
ret
mov
mov
stos
mov
pop
mov
mov
adc
dec
adc
shlb
in
dec
xor
jmp
mov
mov
xlat
aaa
mov
jp
mov
xor
sahf
sbb
ljmp
arpl
cmp
hlt
jne
rcr
imul
jnp
shr
fcomp
mov
mov
pop
jecxz
fsubl
sahf
or
cs
ret
xchg
and
lret
int3
mov
xchg
cmp
int
repz
adc
jmp
loope
dec
mov
aad
lahf
lret
sub
push
adc
fcos
sarl
repnz
or
pop
cmp
sbb
lods
rorl
test
lods
xchg
mov
incb
and
push
ja
lds
mov
adc
aam
xchg
or
imulb
std
test
pop
ss
mov
inc
outsl
sub
loop
xchg
loopw
pop
sub
les
add
dec
xor
mov
ljmp
insl
pop
jo
inc
shr
mov
sub
hlt
leave
jne
mov
and
xchg
jnp
or
xchg
xchg
pop
mov
inc
lock
mov
sti
pop
std
loope
push
test
and
sbb
ds
and
leave
sbb
jl
cltd
in
cmp
inc
shrb
orl
imul
movsl
sub
shlb
pop
test
test
daa
cmpsb
sarb
jmp
push
mov
sub
jae
mov
inc
mov
movl
das
xchg
es
or
cmp
xchg
fsubl
iret
sub
push
mov
xor
pop
jmp
jnp
mov
jmp
fs
pop
and
test
cmpsb
dec
repz
insl
test
clc
pop
cmpsb
and
push
hlt
and
mov
outsl
jb
sbb
jp
sbb
cvtpi2ps
sbb
inc
mov
xchg
mov
sub
cli
and
jno
movsb
mov
pop
pop
sbb
call
or
leave
fwait
cmpsl
dec
cmp
imul
jb
xchg
call
inc
xchg
push
sub
call
rorl
or
add
and
adc
in
xchg
cltd
mov
push
rorl
outsl
adcb
mov
loopne
adc
outsl
add
outsb
shrb
fildll
sarb
fldcw
out
cltd
popf
push
fisubl
pop
push
pop
loop
aaa
insl
sbb
pop
dec
repz
out
sbb
mov
push
mov
or
inc
mov
add
or
das
and
cmp
ss
push
xchg
icebp
jnp
mov
cmp
in
push
xor
jae
pop
out
sub
sub
jnp
int
push
pusha
xlat
sbb
mov
out
ss
pop
outsb
inc
xchg
shll
mov
popa
jg
ds
mov
sbb
jno
jle
push
jns
cmp
cmp
mov
stos
clc
sbb
sub
cmp
cmpsl
imul
dec
out
mov
pushf
sub
dec
pop
and
dec
inc
adc
jmp
inc
cmp
mov
pop
dec
pop
pusha
or
jns
ljmp
out
xchg
and
jo
incb
insl
add
in
fdiv
and
stc
jecxz
adc
mov
push
lret
adc
sbb
inc
and
call
pop
mov
ffreep
jecxz
add
adc
rol
test
out
movsb
jl
lea
loope
adc
cld
pop
add
aam
ds
dec
jle
sti
movsl
lods
jp
psubusb
mov
fwait
cmp
outsb
movsl
cld
cmpsl
pop
mov
and
or
jne
lcall
fwait
stos
aaa
add
lock
add
mov
dec
notw
and
stos
pop
add
cltd
es
push
xchg
inc
test
pop
inc
es
std
adc
adc
add
or
xchg
xor
rol
lock
int3
push
add
add
mov
sub
dec
clc
dec
call
add
inc
mov
int
test
out
and
xor
push
bound
jne
insb
sarb
daa
and
shl
cmp
lds
inc
scas
stos
ror
add
mov
fldt
mull
cmp
ret
loop
ljmp
mov
out
or
pop
mov
inc
cmp
in
js
aaa
xchg
mov
fidivs
cmc
fcmovne
test
push
lea
stc
mov
fwait
sbb
fcmovbe
in
xor
pop
sub
xchg
mov
imul
je
inc
test
cmp
pop
jmp
adc
outsb
mov
or
pop
in
or
daa
jne
push
loope
xchg
fwait
xchg
lcall
int3
dec
cmp
xor
ljmp
mov
jae
addl
testl
dec
je
cmp
dec
push
pop
lds
in
push
in
inc
dec
add
inc
movsl
jg
push
pop
icebp
shlb
and
xchg
mov
mov
in
enter
mov
int3
jne
shr
test
add
pop
test
pop
add
jecxz
jle,pn
lock
test
in
jle
mov
push
shll
mov
xchg
xor
sbb
pop
sub
jmp
mov
outsl
imul
je
xchg
int
aas
or
leave
mov
inc
fmuls
jmp
lret
cld
std
sbb
jns
adcb
cmp
loop
scas
adc
adc
rcll
aad
or
adc
lock
subl
cmp
aam
leave
pop
pop
adc
imul
in
and
pushf
arpl
jp
imulb
leave
sub
adc
test
adc
rcrl
cwtl
fcompl
scas
inc
push
cmp
push
dec
pop
push
sub
inc
repnz
dec
xchg
je
in
xor
inc
clc
cmc
ljmp
xchg
ja
test
mov
sbb
cmp
out
xlat
jnp
dec
or
fnstsw
sbb
mov
int3
push
out
insb
movsb
lods
add
pop
js
push
add
out
lock
mov
inc
scas
shrb
test
lahf
dec
adc
mov
mov
test
mov
sbb
rolb
in
jmp
es
movsb
inc
cmp
mov
or
sbb
in
pop
jb
push
divb
inc
pop
shrb
cmpsb
movb
das
outsl
repnz
inc
add
push
test
sbb
fmul
lock
std
nop
adc
add
xor
dec
clc
mov
jnp
dec
sub
jp
hlt
rcll
adc
jnp
jmp
loopne
cmpb
pop
xor
pop
aaa
cld
xchg
xor
in
hlt
fisttpll
ja
jne
xchg
out
out
cmp
pop
aad
out
adc
neg
imul
xor
inc
mov
pusha
mov
push
cmp
add
or
push
jns
clc
in
data16
aas
inc
fisttpl
push
cmp
mov
cmp
insl
adc
mov
mov
cmp
jnp
in
jns
jne
aas
fsub
cmp
push
rol
icebp
repz
les
mov
xor
das
test
in
jno
push
daa
rclb
pop
adc
inc
mov
xor
jge
lds
lret
mov
out
sub
inc
inc
jecxz
js
sbb
sbb
out
and
xlat
dec
bound
stos
pop
fimull
cmp
out
or
popf
in
cmp
add
inc
mov
cmp
out
jp
fsubl
add
icebp
sbb
ljmp
add
les
movsb
int
or
iret
je
dec
popa
sbb
jo
pop
dec
cmp
jg
mov
adc
sbb
fstpl
mull
in
scas
adc
mov
xchg
xor
subl
add
ret
inc
mov
nop
scas
jbe
cmp
push
shll
rcrb
mov
push
mov
cs
int
and
repz
dec
adc
mov
xchg
xor
dec
or
scas
bound
scas
subl
rorl
jno
push
cmp
jge
jae
inc
or
mov
cmc
cmp
or
jnp
fdivl
cmpsb
ljmp
aam
in
mov
icebp
mov
popf
icebp
jb
push
aaa
cli
and
pop
push
adc
sarb
adc
icebp
adc
pop
pop
push
mov
pop
jo
ss
lds
jne
arpl
les
aam
aaa
jb,pt
int3
jae
mov
lcall
leave
xor
subb
imul
jg
sbb
inc
cmpsl
lock
popa
pop
ret
add
mov
scas
fsubrl
adc
scas
xor
enter
dec
add
mov
cmc
pop
enter
xor
fs
call
int
js
mov
je
add
push
add
jae
mov
push
dec
pop
out
mov
movsb
roll
fucomi
mov
jbe
and
pop
inc
shrb
push
xlat
xchg
or
int3
cmpsl
out
xchg
adc
sbb
dec
lahf
xlat
pop
add
add
loopne
fiadds
ficompl
test
inc
in
push
ljmp
out
cmpsl
cmp
rorl
mov
arpl
push
push
pop
mov
test
mov
push
or
pop
outsl
invd
add
ds
sub
lods
inc
cmpsl
inc
ds
out
xlat
mov
push
cmp
aad
add
fisttpll
xor
mov
pop
mov
jge
jnp
push
in
cmp
lahf
movb
clc
call
xlat
cld
push
iret
dec
imul
out
stc
sub
inc
out
test
rorl
xor
imul
int
je
sbb
adc
pop
inc
pop
cmp
jecxz
jmp
outsb
stos
into
ficomps
mov
jl
hlt
arpl
daa
fsubl
outsb
xor
and
cmp
pop
clc
mov
imul
sub
dec
out
add
out
mov
out
in
ja
pop
outsl
les
sub
or
stc
mov
fimuls
xchg
pop
sahf
xor
or
ret
pop
sti
and
sbb
ds
jae
lea
sub
adc
push
cmp
js
pop
jmp
rclb
test
mov
fwait
xchg
inc
mov
xor
push
xchg
pop
test
sbb
sbb
sub
push
pop
rcrb
mov
ss
lret
outsl
sbb
arpl
xchg
imul
sub
xchg
or
lret
cli
mov
imul
aad
and
sbb
out
pop
loopne
adc
add
push
sti
aas
scas
and
dec
sbb
iret
clc
shll
mov
outsb
jb
sbb
popf
sbb
or
pop
mov
mov
insb
mov
inc
inc
adc
roll
xlat
rorb
sub
ljmp
pop
fimull
xchg
and
int
push
in
aam
adc
adc
test
pop
into
lret
dec
xchg
sarl
daa
mov
mov
add
jnp
loopne
lods
aas
aas
cmp
jnp
pop
shl
nop
dec
leave
adc
pushf
xchg
dec
aaa
outsb
jb
xor
add
dec
or
movsb
movsl
mov
and
mov
mov
pop
sbb
mov
mov
mov
mov
jbe
enter
add
ds
jne
daa
mov
insl
or
push
pop
lcall
insl
adc
std
inc
dec
in
push
xchg
mov
sub
or
lcall
add
push
dec
test
jge
inc
test
mov
adc
xor
and
and
ret
sub
sarb
ss
mov
push
xor
and
xchg
mov
xchg
cmp
add
notl
jp
pop
mov
inc
sahf
imull
mov
out
inc
jl
dec
lcall
aam
pop
pop
push
dec
jne
sti
inc
xor
cs
int3
dec
loope
mov
cwtl
jnp
arpl
andl
out
mov
or
arpl
push
icebp
add
arpl
sub
mov
in
popf
push
icebp
addr16
inc
push
pushf
fs
push
movb
imul
mov
xchg
jno
fwait
add
mov
jae
fldl
adc
push
test
inc
push
loope
daa
dec
shlb
cmp
in
or
iret
jge
outsl
mov
mov
xchg
outsl
lcall
push
xchg
nop
or
or
push
adc
pop
cld
test
sub
mov
mov
or
std
jno
xchg
or
fs
or
insb
adc
js
icebp
or
out
aas
fnsave
and
test
and
adc
pop
jb
filds
mov
or
outsb
xor
std
mov
sbb
jbe
pop
inc
inc
adc
mov
pop
iret
ljmpw
mov
outsb
xchg
pop
sbb
push
repnz
fstps
jl
and
fdivrl
pop
mov
push
lcall
adc
lock
idivb
and
add
jecxz
push
or
mov
roll
adc
or
test
adcb
cld
lods
aam
mov
pop
ss
mov
jbe
aam
mov
test
push
aam
sbb
js
aad
cmp
fisubl
dec
xor
cmp
enter
and
lea
call
and
arpl
dec
popf
clc
sbb
cmp
clc
jae
mov
int
arpl
test
mov
popl
xor
cmpsb
cltd
iret
jo
dec
sbb
test
imulb
jecxz
push
in
cld
stos
inc
lret
lds
mov
lock
lods
adc
jg
fcomps
jnp
push
pop
xchg
fldt
inc
fnstenv
mov
jns
repnz
shrb
lock
fmuls
shlb
lret
into
stc
mov
mov
imul
adc
jne
ss
or
and
push
jo
out
xchg
cmp
cltd
bound
insb
fbstp
je
sbb
cmp
mov
push
aas
mov
mov
in
call
test
imulb
mov
int3
push
sbb
mov
xchg
lret
push
xlat
adc
mov
je
ret
xchg
fcoms
aad
sub
es
loopne
push
out
enter
mov
mov
test
mov
dec
inc
movl
dec
mov
ret
jb
jecxz
cltd
shrb
and
movb
movsl
icebp
and
imul
fdivrs
int3
test
clc
into
and
inc
dec
add
add
mov
cmp
inc
cmpsb
in
dec
das
dec
rorb
and
cmp
xchg
ret
push
sbb
mov
fisttpll
pop
pop
and
fldcw
cmp
fsts
push
test
addl
call
fldl
xor
cmp
push
sbb
ret
sbb
cltd
int
pop
mov
push
movntq
out
inc
inc
dec
sbb
mov
inc
adc
lcall
sub
in
inc
lcall
dec
es
jns
add
inc
mov
pop
add
xor
and
inc
mov
orb
sbbl
push
rcll
out
std
aam
test
jp
int
add
add
cmp
aam
psrad
lcall
test
push
pusha
or
jg
cmc
sub
mov
sbb
mov
sub
ja
pop
adc
dec
jg
lock
pop
or
inc
sub
je
icebp
pusha
call
push
push
sub
inc
jmp
pop
add
jb
pop
aam
data16
cmp
add
mov
jbe
out
arpl
pushf
stc
mov
or
add
jmp
loope
push
and
cmc
cmp
ret
sbb
sbb
sub
or
adc
xchg
jle
scas
shlb
shl
into
icebp
icebp
xchg
jbe
outsb
or
sub
in
cmc
push
popf
adc
pop
pop
jns
mov
push
aad
daa
or
push
les
xlat
cmpsb
xchg
loop
pusha
arpl
add
jg
pushf
jg
ss
xchg
and
dec
mov
ja
push
mov
push
mov
movb
push
aaa
ret
es
dec
loop
sub
dec
fcoml
push
outsb
mov
jo
ret
test
outsb
aaa
adc
mov
or
push
mov
xchg
jnp
mov
sbb
test
jne
fisubrs
lcall
add
scas
cmpsl
pop
and
jno
xor
gs
xor
push
push
add
mov
jne
lret
sub
push
shll
pop
mov
mov
fldt
xchg
in
mov
daa
xchg
imul
pop
jge
scas
ja
aam
imul
cwtl
xor
add
ljmp
clc
jmp
cwtl
subb
cmp
push
cs
or
xor
mov
sub
lahf
add
fldl
outsb
jne
jl
aad
lock
push
imul
dec
cmp
sti
scas
sahf
pop
mov
xor
push
insl
stos
scas
pop
adc
test
mov
xchg
aad
mov
sbb
ljmp
mov
jecxz
xchg
lcall
out
cmc
push
repz
ja
pushf
mov
fisttpll
adc
pusha
push
test
mov
cmpsl
mov
push
xor
cli
push
jmp
fadds
pop
and
jno
dec
pop
fwait
inc
pop
cmp
sbb
call
loope
push
xor
add
popa
stc
sahf
mov
or
sub
jae
push
xchg
iret
rcrl
stos
imul
xor
lret
test
xchg
or
jnp
dec
in
cmc
stos
add
fwait
xor
lret
test
xchg
or
jnp
dec
in
cmc
stos
add
fwait
xor
lret
pop
cmp
imul
aad
lds
stos
add
fwait
xor
inc
sti
push
dec
in
jne
jp
aas
mov
dec
repz
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
jnp
imul
dec
adc
jne
or
inc
lret
loope
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
sti
lret
jmp
lret
fimuls
mov
dec
imul
dec
sbb
or
cmp
sub
lret
enter
movsl
repz
call
cld
adc
dec
sbb
or
cs
orl
push
sbb
pop
xor
fidivs
fs
sarb
jnp
xor
xor
cmpsb
xor
in
jbe
outsb
fisubs
lock
imul
mov
jecxz
inc
jbe
in
rol
mov
xor
inc
add
push
testb
dec
ljmp
adc
fildl
fistl
sbb
jecxz
mov
mov
push
inc
mov
dec
sub
lret
add
jmp
lret
push
call
mov
jge
in
inc
jecxz
lret
xchg
mov
out
add
mov
mov
jnp
imul
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
int
jnp
adc
sbb
or
inc
pop
pop
jle
jg
mov
repnz
mov
in
jmp
cmp
sub
push
sub
outsb
cmp
mov
mov
fistpll
xor
das
cmp
ds
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
out
inc
shlb
ror
test
dec
xor
mov
mov
sbb
fdivrs
sarb
mov
mov
in
sbb
dec
jno
fisubl
in
test
xchg
xchg
pop
rorl
pop
ds
jl
push
dec
es
popf
int
outsl
push
mov
lahf
clc
or
inc
jmp
out
dec
in
or
or
daa
xchg
scas
xor
ds
mov
push
ja
pop
and
sbb
sahf
mov
mov
sahf
rclb
daa
shll
dec
andl
jb
ss
jno
cltd
lods
shl
push
call
clc
clc
ret
movsb
pop
push
adc
mov
mov
lsl
and
jg
mov
mov
cmp
orl
mov
stos
daa
and
dec
sub
faddp
or
sub
mov
je
mov
aas
lods
fdiv
mov
xchg
mov
sbbb
cmp
mov
hlt
push
sub
dec
cmp
pop
fwait
mov
imul
push
jno
stos
mov
lret
mov
orb
pushf
dec
ljmp
je
mov
push
lods
xchg
mov
pop
adc
jno
or
xor
pusha
push
clc
xchg
mov
neg
mov
cmp
jo
jb,pt
sti
imul
sti
or
shlb
mov
sbb
and
fucomip
movsb
pop
cmp
push
mov
addr16
adc
outsb
out
jl
pushf
mov
pushf
sbb
popa
test
lock
mov
and
testl
jno
popa
or
push
or
punpckldq
cmp
leave
sbb
rorb
rcl
ret
mov
shrb
mov
fmuls
daa
mov
and
dec
cli
mov
inc
sbb
lcall
sbb
cwtl
mov
aaa
add
sub
ud1
leave
inc
push
fs
mov
pop
sbb
push
mov
jle
cmp
repz
lods
imul
pop
fwait
sub
jns
mov
cs
out
sbb
cli
jmp
cmpsb
mov
adc
popa
or
pop
pop
xchg
adc
pop
and
add
sub
sbb
test
inc
mov
les
sub
and
es
mov
jnp
jbe
mov
sbb
xchg
lea
movsl
add
and
es
mov
insl
pop
adc
jecxz
aas
popf
pop
scas
xlat
xchg
mov
or
in
lahf
lock
jnp
enter
aas
mov
xchg
push
dec
pop
mov
mov
and
push
pop
and
lret
ja
cmp
ret
lods
xlat
xchg
int3
hlt
or
push
add
fisttpl
into
and
out
test
add
fsubp
int3
and
fwait
call
inc
mov
adc
add
movlps
fs
repz
and
adc
xchg
pusha
lcall
out
and
jmp
fxam
add
cmp
lcall
cld
inc
add
mov
sub
mov
jb
or
out
dec
cmp
and
and
je
outsl
add
inc
add
fs
popa
rcr
fucomp
push
jno
stos
adc
pop
int3
sbb
and
pusha
loopne
fsubl
loopne
rcl
arpl
test
jg
outsl
negl
xlat
fidivrl
xchg
movsl
mov
popa
adc
lea
sbb
insl
fwait
lret
add
dec
cwtl
pop
faddl
loop
dec
mov
mov
mov
pop
mov
and
imulb
adc
xchg
lods
mov
dec
aaa
repz
icebp
or
cmp
cmpsb
xor
xor
sahf
and
inc
das
inc
lcall
adc
test
stc
out
mov
lcall
xor
bound
leave
push
mov
gs
cmp
sub
stc
sbb
mov
cmp
data16
test
mov
ja
or
sbb
fmuls
mov
push
mov
and
push
inc
push
insl
clc
xchg
fisubs
xchg
and
imul
lret
mov
outsb
or
mov
cld
sub
pop
pop
les
mul
in
jp
in
cmpsb
adc
push
scas
enter
pop
sbb
push
jecxz,pt
div
add
adc
pop
xorl
mov
mov
jns
jl
cltd
dec
or
mov
rcll
and
repz
jge
jecxz
sub
mov
xchg
push
mov
jp
scas
and
aad
pop
add
adc
jmp
pop
pop
imul
pop
mov
pop
push
mov
dec
or
scas
xchg
in
pop
mov
lret
mov
mov
sub
push
pop
addr16
mov
stos
nop
ret
xchg
ficoml
rorl
or
insl
sti
mov
ja
shll
ds
sub
pop
mov
pop
mov
imul
arpl
es
mov
mov
sbb
daa
arpl
repnz
xor
cmp
adc
lods
sbb
je
movsb
jg
int
mov
sbb
and
mov
jns
xchg
inc
cwtl
ret
nop
cmc
add
mov
xor
or
ss
roll
scas
pusha
add
or
push
or
dec
inc
xchg
cmp
xchg
cmpsb
inc
and
or
pop
ja
lea
xchg
xchg
pusha
mov
repz
in
stos
std
daa
jbe
xchg
dec
jbe
push
gs
sub
mov
push
cmp
adc
mov
mov
mov
jb
sub
xor
sbb
popa
jecxz
mov
inc
or
adc
fmull
sbb
movsb
xchg
adc
cmp
and
push
icebp
loopne
scas
out
scas
mov
push
or
jnp
les
adc
cmp
nop
es
push
jb
lea
add
push
movsl
or
into
clc
xchg
jae
lea
cltd
add
sub
rcrl
adc
faddl
mov
jae
leave
in
dec
pusha
mov
push
inc
jae
adc
xchg
sbb
inc
mov
add
and
jo
sbb
sub
sbb
push
xor
and
lahf
inc
pop
enter
sub
pop
jno
pop
mov
add
push
fwait
test
inc
jae
xchg
mov
in
mov
decl
shll
mov
jne
push
fwait
sub
xchg
imul
test
mov
iret
lds
test
dec
add
outsb
fldenv
mov
lret
clc
daa
in
jmp
mov
xor
adc
jb
xor
adc
sub
cwtl
fdivrs
cltd
pop
das
addr16
xor
data16
push
js
pop
out
xchg
stc
lods
sbb
sub
int
fldl
loope
data16
dec
dec
mov
pop
iret
fstl
js
in
jo
mov
dec
mov
cmpsl
movsb
or
push
or
test
inc
cmp
or
push
mov
stos
pop
fs
wbinvd
push
ret
mov
rcrl
push
lds
sub
je
sbb
cmp
mov
or
cwtl
pop
hlt
jbe
insb
mov
mov
sbb
push
out
outsl
fs
xor
mov
jns
xlat
scas
sub
pushf
pop
sub
mov
fistps
nop
stos
or
sbb
and
jge
loopne
sbb
mov
ds
jmp
es
jne
pop
inc
pop
leave
add
sub
mov
inc
cmpsb
std
jle
mov
and
inc
push
scas
xchg
ss
jo
pop
push
sub
push
xor
shll
outsl
imul
in
ficompl
pop
icebp
test
jge
loope
inc
fistl
test
sbb
pushf
addl
adc
movsl
aad
inc
xor
pop
icebp
lret
into
setns
dec
icebp
popf
popa
or
xchg
add
fxch
sbbb
push
mov
popa
mov
pop
iret
cmp
aas
xlat
leave
mov
fdivp
jae
push
fistpl
mov
mov
pop
xchg
frstor
xor
lock
pusha
nop
shll
test
mov
lods
call
mov
mov
and
and
jecxz
iret
test
cmp
mov
fstpl
lods
push
inc
mov
inc
test
sub
adc
xor
inc
mov
andb
jno
adc
sub
scas
mov
push
ficomps
cmp
repnz
mov
das
mov
cmp
aad
cwtl
inc
dec
sbb
imul
inc
aam
fs
sbb
leave
jnp
push
jmp
rorl
and
iret
es
mov
mov
stos
and
call
outsb
and
and
cltd
xor
dec
dec
lea
and
mov
push
jmp
cmc
imul
in
rorl
pop
push
add
xchg
cmovbe
mov
push
xchg
rcl
test
data16
cmp
rclb
push
sbb
repz
cli
enter
haddpd
inc
adc
lods
mov
out
imul
insl
lods
ja
adc
and
outsb
in
xor
push
pop
scas
adc
push
mov
loope
out
rcr
xor
mov
out
sub
lock
pop
lock
add
dec
cltd
fs
mov
call
lods
rcll
dec
loop
outsb
mov
call
xor
mov
push
cmp
lret
gs
or
lret
clc
jb
cmc
and
adc
out
insb
call
loop
hlt
xrelease
test
cwtl
je
push
incl
sbb
dec
mov
cltd
enter
jns,pn
jmp
push
out
dec
jns
cmp
test
insb
jb
xor
lahf
jmp
xchg
das
mov
mov
sbb
cli
inc
push
sarl
lret
cld
lcall
pop
sub
jge,pt
pop
jne
jmp
mov
or
mov
xchg
mov
pop
xchg
movsb
lcall
repz
push
lea
and
scas
imul
mov
fldcw
inc
test
repz
icebp
inc
jl
adc
mov
jg
outsb
mov
xchg
les
pushf
push
xor
push
mul
ret
xlat
push
out
push
sbb
mov
jne
in
rol
jne
jle
cld
lods
dec
das
imul
dec
cmpsl
decb
xor
cwtl
int
sub
mov
mov
ljmp
fisubs
jmp
in
xor
xor
ja
add
sub
sub
sub
adcl
jno
jge
pusha
xor
repnz
and
ficoml
push
xchg
add
push
into
jle
push
cwtl
movsl
xchg
fidivs
cmp
or
in
pop
mov
mov
lock
add
fcmovnbe
inc
pop
mov
push
pop
out
movsb
push
adc
dec
sbb
push
jno
sub
push
rcll
aad
push
in
xchg
rcrb
push
incb
mov
inc
fs
pop
out
mov
push
mov
xor
jne
and
incl
stos
push
leave
push
imul
shl
add
scas
xchg
or
nop
mov
popa
mov
subl
adc
cmc
fmulp
add
jae
sbb
mov
mov
shlb
mov
mov
fwait
pop
lods
xchg
mov
sarb
push
pop
das
push
sarl
sub
mov
dec
in
in
es
js
or
xor
test
inc
add
lock
xor
sbb
shrl
std
adc
outsb
sub
loop
out
pusha
stos
sbb
dec
xchg
mov
into
hlt
insb
xchg
pop
add
xchg
or
lret
repnz
scas
outsl
inc
dec
inc
or
cmp
fldenv
xchg
dec
lret
fadds
xchg
test
push
mov
sahf
ret
test
popa
add
popa
jmp
mov
out
xchg
mov
adc
adcb
pop
xchg
scas
loop
jg
inc
dec
or
jbe
sbb
test
out
adc
lock
adc
in
cmp
lods
mov
or
aad
dec
mov
mov
adc
cmp
or
loop
xor
sahf
jo
cmpsb
adc
jle
out
fwait
loope
movsl
or
cmp
push
jp
aam
push
mov
mov
sub
fbstp
dec
ds
rcr
push
repz
dec
test
dec
mov
xchg
insl
or
addr16
xchg
push
shl
mov
xchg
xor
push
push
dec
add
push
push
sub
lret
push
inc
ret
push
add
cmp
pop
icebp
mov
addr16
pop
fbld
pop
mov
movsl
repnz
je
adc
xchg
je
cs
loop
dec
imulb
xor
movsl
dec
xchg
sub
sbb
dec
jno
arpl
int
mov
mov
lret
sti
mov
jo
loopne
sub
push
add
inc
dec
movsl
sahf
aad
push
fs
js
loopne
xchg
pop
fs
xor
pushf
mov
imul
cwtl
mov
rclb
daa
aas
dec
ret
mov
movsb
cmp
cmp
fsubl
bound
nop
jns
popf
sbb
cmp
int3
ljmp
jmp
jp
addl
daa
sti
icebp
mov
push
adc
imul
test
cmpsl
jl
inc
jge
adc
mov
xor
cmpb
xlat
cmpsl
cwtl
stos
in
xchg
fidivl
icebp
mulb
test
clc
stc
xchg
mov
pushf
pop
cld
pop
push
dec
push
in
dec
ds
mov
lahf
in
std
xor
in
fistpll
in
jnp
add
cltd
dec
leave
int3
hlt
jns
fcoms
les
jl
mov
sub
dec
inc
icebp
insb
push
icebp
mov
jbe
jge
inc
dec
in
or
jecxz
hlt
int3
cs
test
jp
and
adc
loope
ficoms
adc
idivb
mov
mov
test
int3
or
mov
jae
add
jg
scas
insl
push
fstpl
loope
popa
or
les
mov
mov
xlat
mov
push
jno
shlb
sbb
scas
or
movsl
push
push
sbb
das
jo
push
xchg
ret
fbstp
pop
inc
pop
mov
cmpl
mov
pop
pop
inc
jl
fiaddl
and
das
inc
stos
pop
fsub
fdivrl
dec
ficompl
mov
and
jecxz
lret
xorb
arpl
insb
cmp
mov
or
add
push
aas
xor
xlat
mov
inc
mov
adc
mov
mov
out
movsl
popa
filds
and
jbe
je
cmp
js
mov
dec
je
stos
add
and
mov
mov
push
sbb
sub
jge
dec
add
xor
xor
test
xorl
out
out
xchg
jecxz
add
outsb
cmp
jl
mov
add
fisttpll
lret
mov
pop
adc
and
lods
loope
push
aam
arpl
mov
les
dec
jne
adc
inc
inc
xlat
ret
mov
leave
rclb
or
pusha
sbb
dec
xor
insl
loope
aad
jne
add
stc
enter
mov
inc
lret
mov
iret
js
mov
lcall
cmc
and
stos
ja
in
jns
lods
arpl
lods
out
hlt
push
loop
pop
sarl
mov
cld
cmp
jae
xor
pusha
mov
push
loop
outsb
mov
or
mov
mov
add
or
sub
sub
xchg
mov
insl
xchg
xchg
call
fcompl
outsl
xchg
xorb
aas
inc
flds
or
jnp
in
adc
cmpsl
addb
mov
dec
fcmovu
pop
fwait
rcll
inc
xor
ss
mov
add
cmpsl
int
add
xor
ss
sub
ds
xchg
dec
mov
and
sub
sbbb
add
jge
or
mov
in
outsb
adc
xlat
cmp
shlb
jno
stos
pop
mov
repz
or
cmpl
mov
loop
lods
sti
adc
dec
or
inc
pusha
pop
loopne
jg
jo
inc
mov
repz
test
aad
aam
into
mov
and
and
push
cmp
xor
leave
daa
push
clc
pusha
dec
mov
jmp
in
fwait
decl
xor
shll
add
and
in
leave
ret
xchg
sub
push
shll
mov
jecxz,pt
adc
mov
aam
pop
mov
cmp
test
mov
lock
icebp
mov
hlt
mov
int
movsl
pop
fdivs
xorl
adc
pusha
aam
daa
adc
adc
dec
js
push
mov
pop
int3
pop
jp
cmp
movsb
lods
shll
jo
lahf
shl
loop
xchg
sti
or
adc
push
fwait
rclb
arpl
pop
jne
mov
xchg
popf
in
add
dec
cld
and
xchg
lea
adcl
cwtl
inc
fstpl
cmp
call
mov
pop
lcall
xchg
mull
in
add
stc
stos
lcall
and
test
and
mov
add
cmp
pop
fwait
dec
rclb
lret
popa
jo
or
popa
and
mul
lock
push
jge
ret
xlat
popf
push
imul
xchg
dec
icebp
mull
sub
push
dec
dec
jmp
push
push
loope
clc
orb
ss
aas
leave
push
std
mov
adc
push
imul
or
or
rcrl
cwtl
das
mov
insb
jge
mov
test
xor
push
dec
sub
bound
jno
inc
push
rol
inc
iret
sbb
loop
sub
scas
ja
ljmp
add
add
sbb
lea
fcmovne
in
bound
scas
pop
sarb
pop
dec
lea
pop
cmp
mov
add
jl
je
xor
inc
int
cmpsb
mov
xchg
cwtl
adc
outsb
sub
lahf
mov
clc
test
scas
pop
js
adc
and
jg
mul
test
cmpsb
pop
xchg
lea
inc
adc
mov
bound
mov
adc
or
pop
inc
pop
cmp
jbe
bound
test
fs
jnp
adcl
or
fistps
and
jle
inc
mov
xchg
adc
sti
push
lea
repz
adc
out
sarb
jmp
push
sub
mov
jo
shrl
cmp
jb
imul
movsb
pop
out
sbb
or
mov
dec
cmp
loop
mov
mov
leave
sbb
dec
jne
or
and
call
lods
xchg
mov
mov
xor
xchg
repnz
xchg
add
fsubrs
std
mov
stc
mov
jae
lret
mov
loop
js
fwait
xor
jo
insb
ret
out
shll
adc
jge
leave
test
pop
mov
xchg
xorb
xor
jecxz
inc
add
lds
xchg
jbe
push
std
mov
fldl
movsl
adc
jns,pn
fcoml
adc
je
test
repnz
mov
sbb
sub
pop
lcall
scas
jle
or
or
cmc
fxtract
out
je
iret
and
out
xchg
push
mov
xchg
xchg
es
dec
pop
jmp
and
or
jecxz
imul
aaa
cld
mov
cmp
and
shlb
std
out
mov
mov
jecxz
test
jp
push
fisubrl
lds
push
popf
jp
mov
mov
call
scas
add
or
cmp
in
sbb
lahf
stos
or
frstor
and
pop
testl
fistl
add
xlat
add
clc
sbb
fisttpl
ret
fsubp
cld
outsb
dec
push
enter
leave
rolb
add
cli
mov
fstl
add
mov
mov
pop
rcll
inc
adc
inc
inc
xor
ffreep
push
or
or
push
pop
inc
sar
and
pop
aas
mov
xorb
repz
repnz
pop
int
pop
mov
inc
pop
xchg
dec
mov
add
popf
pop
sub
dec
int3
jns
push
mov
pop
iret
arpl
mov
ss
or
in
rclb
mov
stc
sbb
loopne
jbe
sahf
in
adc
lret
or
orl
mov
lahf
stos
mov
enter
aas
rorl
pop
shr
rolb
xor
or
loope
mov
or
push
repnz
add
shl
jecxz
sbb
pop
pop
imul
inc
js
ret
add
mov
push
adc
and
push
fs
shl
addb
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
lret
jmp
fucomi
lret
fwait
mov
stos
mov
dec
imul
dec
sbb
or
cmp
sub
lret
inc
push
fucomi
mov
inc
fs
je
push
pop
inc
push
jp
mov
cmp
adc
lret
ret
jmp
cli
jecxz
xchg
fwait
cmpl
pop
inc
imul
or
sbb
sub
cmp
rcr
ret
mov
cli
jecxz
lcall
mov
push
jp
or
sbb
sub
cmp
lret
loopne
sbbl
sarb
and
sbb
arpl
mov
fnstenv
xchg
push
xchg
std
cmp
cld
pop
add
lret
pop
das
cmp
or
adc
sub
out
xchg
gs
mov
push
pop
dec
sbb
gs
sbb
jbe
test
mov
xchg
sub
lcall
lea
pop
addr16
pop
xchg
xor
mov
add
pop
cmp
fisubrl
cmp
ja
add
leave
jge
mov
movsl
adc
and
loop
adc
mov
or
out
shl
das
mov
pop
mov
pop
into
loopne
jmp
ljmp
xor
nop
lahf
or
xchg
lcall
push
pop
inc
push
jp
or
sbb
sub
cmp
lret
ret
ljmp
subl
push
add
jae
arpl
jg
insl
jne
ja
stos
push
xchg
rcl
out
lret
adc
push
xor
jg
dec
sub
inc
cwtl
cwtl
mov
xchg
mov
jmp
int3
cmp
je
or
pop
push
dec
cmp
cmp
lret
ret
ljmp
subl
pop
inc
push
jp
or
sbb
sub
cmp
lret
ret
ljmp
subl
pop
sub
sahf
sub
pop
mov
sbbl
cmpsl
xchg
or
imulb
push
sub
cmp
scas
xchg
add
mov
jo
mov
push
mov
mov
roll
gs
aam
inc
leave
push
iret
mov
clc
jg
inc
popa
jp
cmp
das
pop
in
xlat
data16
pop
dec
inc
mov
pop
cwtl
test
mov
mov
mov
push
pop
in
pop
outsb
cltd
addr16
pop
xor
or
adc
mov
sub
xlat
sbb
ror
fwait
enter
or
xchg
sub
cmp
dec
xor
xchg
mov
stos
add
sti
and
fiadds
popa
int3
pop
xor
sbb
jbe
mov
je
pop
jmp
gs
notb
lahf
add
movsl
sbb
jne
mov
rcll
fstps
nop
mov
std
xchg
movl
insl
aaa
stc
xor
std
testb
arpl
xchg
inc
cmp
imul
jnp
mov
das
xchg
add
test
lret
dec
push
or
rol
jbe
in
xchg
or
pop
and
adc
cmpsl
scas
jb
mov
ljmp
and
aad
sbb
sahf
lods
stos
inc
test
mov
cmp
and
adc
pop
rcr
daa
jg
sub
cmp
mov
xor
dec
cld
dec
xchg
int
enter
xlat
lods
xor
sub
xor
xlat
imul
mov
xchg
pop
lahf
leave
sub
cmp
scas
cli
shrl
inc
jl
add
aam
stc
xchg
loope
adc
jp
pusha
pop
es
pop
loop
inc
out
mov
arpl
cmp
icebp
rclb
sub
lods
push
mov
jl
xlat
orb
xchg
mov
and
in
ja
imul
cli
test
in
lret
faddl
nop
dec
testb
mov
icebp
sbb
and
xor
pop
push
jecxz
lds
pop
mov
mov
mov
out
jae
lds
roll
jp
lods
es
jbe
cmp
inc
test
cs
mov
pop
dec
inc
mov
lock
out
pop
out
cs
push
mov
test
jecxz
jo
push
daa
lods
es
les
movsl
adc
or
lods
jg
lds
bound
fs
cmp
repz
dec
mov
cli
cmpsl
sub
les
sub
cmp
jae
add
jnp
push
aad
push
sub
popl
mov
push
jbe
fmull
jno
lea
in
pop
mov
add
out
mov
lcall
and
stos
push
iret
dec
ss
jecxz
repz
mov
cs
xchg
out
daa
adc
xchg
xchg
push
stos
dec
jl
adc
mov
int3
fistps
add
add
mov
fcmove
sbbb
jo
mov
mov
pop
cs
dec
sub
inc
outsl
sub
das
jo
jbe
xchg
xchg
clc
dec
int3
je
push
push
jae
mov
ret
mov
and
adc
imul
mov
repz
xorb
jecxz
xor
push
cs
pusha
pop
mov
xchg
mov
mov
pusha
pusha
push
bound
popw
dec
not
jo
stos
lods
xchg
ss
mov
jp
inc
sub
dec
test
dec
adc
ljmp
jnp
mov
mov
aad
rclb
sub
loope
add
pop
aad
push
addr16
or
rolb
pop
and
and
dec
pop
aas
ret
leave
mov
lahf
nop
sbb
sbb
pop
loopne
pop
xchg
jne
inc
clc
sbb
addr16
jecxz
repz
in
mov
xchg
sub
push
movsb
outsb
pusha
stos
xor
cld
xchg
pusha
mov
call
sub
pop
dec
sub
pop
jo
mov
cli
cmp
js
inc
or
loope
outsl
aam
repnz
inc
adc
popa
dec
cmp
jg
cwtl
push
mov
sub
adc
ljmp
out
mov
push
dec
pusha
pop
pop
adcb
jns
lea
inc
ret
pop
lret
in
jp
icebp
pop
movsl
lahf
nop
loop
ljmp
loop
mov
scas
jp
iret
sbb
sub
popa
dec
out
mov
stos
test
in
xchg
inc
push
in
cmp
test
xchg
lods
jbe
repz
in
lret
ror
repnz
call
into
dec
stc
fidivs
lods
jno
cmp
fsubrl
cmp
dec
movsb
or
adc
nop
inc
in
sub
lret
mov
adc
jae
ds
mov
stc
sbb
pop
add
push
adc
mov
in
nop
dec
push
jbe
test
adc
fs
ret
in
sbb
mov
shll
mov
sbb
xor
sub
mov
jmp
rcl
mov
xor
test
scas
fwait
out
cld
jg
xchg
aas
out
dec
fwait
xor
cmp
adc
push
cmpsb
es
enter
bound
out
test
adc
clc
movsb
xchg
and
cmp
or
movsl
std
push
test
inc
inc
mov
rcll
inc
dec
jo
out
cli
in
adc
pop
in
pop
test
mov
andb
xchg
sbb
int
cmp
imul
pop
jge
out
sahf
stos
nop
call
push
jecxz
loope
cwtl
push
add
out
cmp
ret
push
leave
shrb
mov
mov
push
jne
or
push
push
fsubrs
sar
xchg
jae
push
aam
adc
lods
test
sbb
ljmp
fnstsw
mov
and
and
ficomps
inc
xchg
imul
pop
cmpb
movzbl
into
dec
mov
mov
or
jge
cmp
aaa
add
ret
lcall
push
data16
pop
popf
int3
xlat
add
add
cmp
ljmp
stc
push
mov
nop
scas
inc
pop
cmp
sbb
push
sarb
and
test
dec
xor
jae
mov
hlt
sarb
cld
mov
sub
push
push
push
mov
pop
data16
mov
mov
cmp
dec
mov
pushf
xor
sub
lea
pop
push
popf
xchg
or
icebp
out
mov
mov
fs
and
data16
ret
push
adc
adc
inc
dec
or
insl
aam
adc
mov
add
and
pop
add
adc
adc
mov
les
ret
mov
movsl
ret
add
add
scas
adc
outsl
sub
ss
push
les
mov
push
mov
xchg
daa
daa
icebp
sbb
jle
mov
pop
xor
popf
rcl
cmpsl
mov
fsubrl
cmpsb
enter
out
movsl
or
addr16
out
sub
lret
cmp
add
aad
insl
imul
pop
dec
fs
lock
mov
push
popf
dec
push
in
mov
stos
cwtl
xchg
mov
mov
cmp
jbe
mov
in
add
cmpsl
mov
adc
cmpsb
std
jg
mov
aam
cmp
int3
fdivrs
movsl
dec
std
clc
add
jl
loop
cmp
loopne
loopne
jne
fdivp
jecxz
sub
iret
mov
pop
sub
inc
lods
shrl
outsb
add
sub
inc
test
lock
stc
sub
xchg
add
sub
notb
shr
adc
pop
icebp
xlat
mov
mov
jp
jns
xchg
jle
sbb
stos
push
sub
clc
adc
xchg
mov
arpl
lahf
lock
inc
and
cs
jl
test
vcvttps2dq
add
push
out
sbb
loopne
jnp
inc
cmp
or
sub
mov
push
loope
adc
mov
inc
pop
mov
inc
xor
roll
in
int
enter
jl
in
out
or
push
jp
iret
clc
add
lea
xchg
repz
iret
cmp
paddq
pop
sbb
mov
mov
add
scas
sahf
stc
xchg
add
fwait
loopne
test
mov
pop
test
mov
jecxz
jo
jb
sub
push
ret
movsb
jae
cmp
testb
imul
mov
or
in
inc
out
lret
add
lret
dec
push
data16
xor
into
scas
mov
sub
mov
lods
xor
pusha
je
xor
rcrb
inc
jae
clc
pop
adc
add
cmp
push
sbb
int
mov
sbb
sbb
mov
cmp
jbe
or
out
xchg
xlat
push
push
mov
mov
sub
push
lret
push
cmp
call
in
into
and
cld
xor
mov
or
dec
xor
cmpsb
lods
push
ret
popf
aas
xor
push
push
cmp
pop
lret
xchg
add
cs
rcl
mov
push
inc
nop
xor
add
addb
push
pop
dec
sbb
pusha
cli
lret
or
mov
mov
iret
cmpsb
test
mov
in
sub
jae
pop
sbb
pop
scas
lds
ss
add
fnsave
jg
xchg
jb
add
xor
clc
das
cld
or
mov
jge
gs
addr16
lock
cltd
sti
in
sub
jmp
fwait
outsb
loopne
shll
adc
xchg
pushf
ret
lret
mov
dec
orb
fildl
hlt
imulb
mov
popa
mulb
sbb
and
dec
inc
sub
rolb
xor
xor
stos
xor
jb
imul
lcall
xor
clc
adc
push
jns
js
cwtl
call
inc
faddl
cli
xchg
int3
mov
mov
xchg
cmp
call
and
test
imul
and
pop
xchg
in
and
stos
cmp
xchg
jne
add
fisttpl
mov
imul
jecxz
push
rcrl
popf
cli
xchg
loopne
out
sub
int3
out
outsb
pop
xchg
dec
inc
adc
cmp
mov
test
ljmp
and
jp
nop
or
push
es
test
mov
mov
mov
inc
out
addr16
stos
jl
sub
stc
imul
add
imul
push
adc
mov
fistps
pop
fdivl
dec
and
jmp
lret
fnstcw
pop
push
in
mov
add
pop
or
jl
bound
xchg
xor
adc
pop
inc
push
push
jp
cmp
inc
xor
icebp
or
mov
push
and
and
dec
cmp
jo
add
jns
pop
or
in
mov
or
sbb
add
push
inc
inc
imul
arpl
loope
xchg
push
xchg
fwait
push
loop
shrl
addr16
push
fisubl
int
or
jns
adc
xchg
add
inc
test
mov
lea
push
mov
mov
aaa
cmp
bound
ss
xchg
std
negb
add
xor
and
or
in
gs
jo
cli
inc
adc
sub
cwtl
imul
je
and
adc
cmp
sbb
daa
mov
sub
mov
in
dec
sub
clc
das
stc
imul
fimull
inc
push
lret
cmp
xor
cvtps2pi
pop
cmp
mov
into
es
dec
mov
fsts
mov
sbb
and
fcoml
adc
push
xchg
mov
push
sti
mov
pop
dec
inc
sub
imulb
push
inc
xor
repnz
insb
nop
mov
and
jmp
fs
lock
jb
mov
inc
dec
pop
pop
mov
ficoml
test
mov
clc
xor
inc
push
cli
cs
loopne,pt
jnp
jnp
fmuls
insb
insb
jbe
xchg
sbb
popf
pop
fcmovne
dec
and
js
mov
insb
or
shll
lret
sarb
rorl
arpl
jns
das
arpl
fistpll
movsb
push
mov
xor
gs
lret
pop
fsubrs
cmc
pop
js
or
and
in
fst
xchg
js
js
xchg
arpl
sub
insb
mov
or
insb
pop
loope
loop
stos
pop
jo
ss
inc
cltd
xor
sub
sahf
dec
fstps
lret
fucomip
rcr
push
call
adc
jno
jb
adc
pop
repz
jg
fildl
repz
out
loope
jle
add
adc
push
add
ljmp
jo
adc
scas
inc
test
push
xchg
and
jg
and
aad
shll
and
sti
cmp
fimull
pop
sarl
shl
sbb
jbe
dec
imul
repnz
xor
rcrl
lods
and
sub
inc
push
pusha
push
sbb
test
cmp
fs
in
xor
das
adcb
jmp
push
or
outsl
or
aas
test
gs
scas
stos
adc
scas
mov
push
mov
mov
mov
jnp
shl
xchg
lcall
mov
jmp
jp
jmp
adc
mov
pop
mov
push
inc
or
popa
push
call
xchg
or
mov
jge
cmc
stos
stos
je
adc
add
pop
jns
rorb
xor
add
sub
xchg
sub
push
dec
pop
push
push
or
add
dec
xor
mov
icebp
mov
sbb
cmp
cld
or
repz
loope
pop
xchg
xchg
push
pop
mov
ffreep
push
jb
rol
das
add
xor
push
dec
mov
mov
loope
pslld
pop
or
sub
movsb
popa
movl
rcrb
roll
xchg
fnstsw
dec
lret
shlb
lahf
jl
popf
push
add
sub
xor
test
or
lcall
mov
sbb
or
fisubl
orl
outsb
xor
sbb
test
dec
ret
out
xlat
and
sub
pop
loope
mov
sub
js
out
fldcw
jl
inc
sub
inc
xchg
xchg
adc
roll
fisubrl
cmp
adc
push
mov
arpl
popa
push
in
shr
mov
and
sub
out
cmc
inc
sbb
outsl
mov
sub
pop
xchg
dec
mov
cmp
fdiv
or
and
mov
mov
jl
push
nop
jle
pop
out
mov
es
inc
fsubp
or
test
or
ret
or
insl
mov
hlt
wbinvd
and
dec
sub
pusha
mov
lret
fldenv
add
outsl
mov
jnp
outsb
inc
push
cld
dec
sbb
mov
dec
ficoml
pushf
hlt
lret
aaa
push
cmp
pop
lea
xchg
mov
adc
mov
insb
push
ret
dec
xlat
jno
pushf
cs
inc
mov
repz
idivb
sbb
push
mov
cmc
dec
popf
into
and
adc
mov
imul
jne
pop
div
pop
stc
hlt
lods
sub
jg
movsl
push
cmpsb
ja
das
int3
xor
adc
mov
cld
xor
jmp
push
pop
ss
js
pop
mov
das
movsb
cltd
jbe
push
pop
and
mov
data16
movsb
xlat
mov
or
mov
pop
jns
adc
aad
call
fiaddl
or
sbb
imul
popa
pop
xlat
jo
sbb
mov
hlt
in
xor
or
mov
test
enter
jns
add
push
xrelease
out
int
iret
into
xchg
stos
roll
cmp
cmp
lcall
xchg
jmp
arpl
inc
dec
mov
sbbl
and
and
xchg
dec
cmp
fisttpll
push
and
add
stc
mov
xchg
inc
push
enter
out
cld
or
cmp
jne
imul
sti
and
pop
push
inc
mov
adc
mov
outsl
rorl
jb
or
and
xor
xor
or
dec
or
mov
dec
lret
iret
cltd
addl
fistpl
push
pop
jecxz
adc
insb
jbe
arpl
je
movb
fndisi(8087
test
push
adc
ror
lea
ja
call
jle,pn
ds
xchg
mov
jb
cwtl
xchg
mov
push
ds
repz
xchg
push
inc
cmp
fs
pop
fildll
cmp
xlat
sub
insl
cwtl
repnz
adc
shll
les
mov
popa
jae
ret
insb
mov
jecxz
fdivrs
adc
mov
rol
add
mov
cld
mov
inc
bound
insl
repnz
push
and
cmp
daa
inc
outsl
inc
filds
dec
pop
cli
jmp
sub
push
stos
xlat
dec
or
icebp
push
mov
sbb
popf
mov
leave
adc
mov
loopne
push
inc
ljmp
inc
adcb
cwtl
insb
pop
cmp
out
test
insb
data16
cwtl
mov
pop
lods
mov
andb
mov
inc
jb
insb
or
xchg
lcall
cwtl
fs
pop
mov
cmp
push
cld
cltd
data16
cmp
cmc
rcl
aas
mov
pcmpeqw
xchg
lret
out
mov
jle
inc
mov
and
loop
test
xchg
mov
lock
enter
je
movsb
inc
lahf
sbb
outsl
jle
imul
outsl
sbb
aad
out
add
test
sub
in
out
xchg
loop
ret
xor
mov
repz
sahf
int3
xchg
sub
aaa
mov
or
xlat
pop
jecxz
mov
jne
repnz
mov
and
fwait
in
push
jbe
mov
inc
je
aad
mov
mov
mov
fdivr
sub
test
js
cs
lock
adc
loopne
add
xor
xor
xor
negl
sbb
sub
jns
loop
ret
mov
mov
pop
adc
pop
mov
jle
ror
cmp
shlb
imul
dec
lret
or
xchg
jl
mov
pop
xor
sub
adc
movsb
jp
fs
or
inc
outsb
sub
loop
out
lods
es
subb
pop
pop
fildl
mov
jg
shlb
lea
adcb
or
xchg
cmp
shlb
cs
push
popf
aas
arpl
add
sub
lock
test
scas
popf
adc
mov
sbb
js
pop
int
jle
push
shll
adc
lods
sub
jl
jo
jp
icebp
mov
jg
fmulp
fcomps
bound
sbb
push
aad
mov
fldt
sbb
fisttpl
cmpsb
cmp
loopne
imul
and
test
cmp
mov
lcall
mov
loopne
fcmovne
ja
iret
cltd
nop
jb
and
ljmp
jecxz
mov
leave
out
xor
cmpsb
mov
mov
cmpsb
les
add
lock
negb
sub
test
inc
sub
ljmp
push
sti
fdivrp
pop
jg
loopne
pop
adc
add
adc
repz
mov
ljmp
into
mov
jae
mov
ror
add
sahf
push
sbb
sbb
or
adc
hlt
clc
lret
dec
pop
sbb
cltd
jl
mov
imul
out
adc
jno
fs
fisubrl
ja
dec
scas
dec
jmp
adc
lods
xchg
or
dec
and
mov
xchg
or
icebp
lahf
push
dec
arpl
lcall
clc
aas
push
xor
dec
lcall
push
repz
call
repz
add
ja
sub
mov
mov
xchg
inc
lret
mov
mov
mov
fldenv
xchg
inc
loop
add
jo
arpl
fs
sbb
sbb
sbb
push
sbb
loope
ret
mov
nop
out
dec
test
jbe
idivl
iret
shrb
push
mov
xor
call
jb
push
and
repnz
mov
sub
cmp
cmp
aas
arpl
out
mov
push
imul
dec
pop
orb
bound
push
cld
adc
testb
into
dec
sub
and
add
sahf
and
loopne
test
push
xchg
mov
pop
mov
andl
inc
cltd
jae
arpl
adc
add
xor
and
rcr
ret
ljmp
subl
pop
inc
push
jp
or
sbb
sub
cmp
lret
ret
ljmp
subl
pop
inc
push
jp
or
sbb
sub
cmp
lret
ret
ljmp
subl
pop
inc
imul
or
sbb
sub
cmp
lret
imul
adc
inc
pop
mov
dec
pop
test
lods
mov
or
or
add
push
add
add
add
pop
add
add
add
or
add
add
add
add
jae
mov
add
add
add
add
jno
filds
xchg
pop
add
add
add
add
add
push
add
add
add
add
add
add
add
pop
add
add
add
cmp
add
or
aaa
add
add
add
xchg
add
add
add
add
mov
adc
iret
add
add
add
add
add
add
add
add
push
add
add
add
pop
add
add
dec
add
sbb
sub
roll
xchg
add
add
add
add
movsb
add
add
add
add
add
add
add
jl
fs
add
add
add
add
mov
add
cmp
add
or
add
dec
add
add
add
add
dec
add
add
add
add
add
pop
add
add
jmp
cmp
outsb
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
rolb
pop
add
add
jg
scas
add
outsb
add
add
add
add
add
add
add
jl
jl
rolb
add
add
add
add
cmp
mov
pop
add
in
add
add
push
xor
add
imul
add
add
add
das
add
aas
add
add
add
add
add
add
add
add
cmp
sub
filds
cmp
pop
add
add
dec
add
cmp
outsb
add
push
inc
add
adc
cld
add
add
add
add
add
inc
add
push
add
add
add
add
add
add
test
leave
add
add
add
jl
fldl
cmp
jl
jl
cmp
cmp
mov
add
sbb
xchg
inc
add
popa
add
imul
aaa
add
add
push
add
lahf
add
outsb
add
add
add
cmp
roll
inc
add
scas
add
add
add
add
popa
add
add
add
add
mov
lock
scas
add
add
filds
sub
sub
rolb
mov
lret
add
and
dec
add
add
sbb
mov
sbb
add
jbe
scas
add
dec
add
add
pop
add
add
add
adc
xor
jbe
pop
add
add
add
add
add
add
test
mov
add
add
add
add
add
add
add
add
lock
push
outsl
add
add
mov
push
add
add
imul
dec
add
add
add
add
add
sbb
js
sbb
jl
jl
dec
add
outsb
add
mov
mov
push
int
cmp
jl
jo
sub
enter
jmp
add
xor
xchg
jl
dec
add
addl
jno
aas
add
enter
scas
add
jl
jl
fs
add
add
add
add
add
cmp
add
jmp
fsubrs
sti
rcrl
pop
sub
movsl
mov
jle
imul
cvtps2pi
add
jbe
mov
repz
pop
xchg
loop
xor
and
and
jae
mov
jle
mov
xor
pop
pop
out
adc
data16
fdivrl
jns
mov
mov
jbe
xor
lods
adc
sub
sbb
lds
inc
push
pop
call
fcomps
jno
sbb
or
out
push
cmp
cmpsb
imul
pop
das
in
adc
loope
jle
subl
icebp
sub
or
movsl
xchg
pop
test
or
cmpsl
dec
and
in
fwait
push
fs
bound
xchg
out
mov
or
insb
push
test
fnsave
xchg
mov
roll
jg
lcall
jbe
in
stos
xor
xchg
adc
sbb
nop
push
inc
into
pop
mov
sbb
sbb
adc
dec
cmpsb
jmp
sbb
into
lds
mov
and
jnp
cld
vmwrite
pop
pop
out
dec
popa
rcrb
add
and
lods
xor
xchg
lret
push
call
iret
test
or
rcr
and
or
pop
inc
jnp
mov
mov
mov
nop
arpl
inc
dec
or
jge
xchg
inc
inc
stos
stos
add
add
sub
mov
xor
push
sbb
out
pop
ret
jecxz
pop
mov
mov
or
lahf
lds
add
pusha
mov
frstor
jecxz
adc
cmc
fisttpll
js
mov
add
jnp
or
inc
jp,pn
scas
out
addr16
pop
jmp
push
call
mov
adc
test
cmpsb
mov
dec
sbb
outsb
js
xor
lock
push
mov
sbb
imul
adc
jecxz
mov
insl
lahf
mov
or
xchg
test
dec
adc
stos
pop
outsb
and
incb
addr16
inc
pop
ja
clc
push
je
xchg
loopne
lret
pop
lret
movsl
ds
lcall
fistps
test
push
xor
clc
cwtl
aas
pop
popw
mov
mov
leave
cmp
push
imul
xchg
call
lret
pusha
test
int3
popa
mov
test
mov
cltd
inc
ss
aas
or
and
clc
out
xor
data16
lds
out
lahf
adc
sti
out
push
push
or
push
lahf
and
fadd
and
or
dec
jp
faddl
cmc
leave
fdivs
and
pop
push
int3
xchg
cmp
scas
mov
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
