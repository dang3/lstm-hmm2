call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
dec
movsb
jp
push
sbb
sub
fs
shlb
ljmp
je
test
dec
movsb
jp
push
sbb
or
cmp
dec
add
adc
and
xor
inc
call
fs
xchg
dec
movsb
jp
push
sbb
or
cmp
sub
aaa
jmp
inc
fsubl
daa
fistps
cmp
and
cmp
int3
pop
aas
ss
mov
outsb
push
adc
les
aam
sbb
cltd
xor
adc
and
mov
test
lods
xchg
push
push
les
loope
jmp
xor
mov
inc
fbstp
test
mov
outsl
mov
lods
sbb
or
es
xor
adc
push
push
iret
ljmp
and
hlt
in
imul
and
mov
lcall
insb
pop
sahf
les
out
push
pop
addl
push
into
aam
pop
adc
mov
pop
xchg
dec
movsb
jp
push
sbb
or
cmp
sub
adc
and
xor
inc
lcall
loope
divl
loop
repnz
pop
jo
je
jno
push
test
adc
iret
repnz
xor
or
insl
mov
jbe
jae
pop
popf
xor
mov
xor
sbb
subl
hlt
sub
adc
and
xor
inc
lcall
test
dec
movsb
jp
push
sbb
or
cmp
sub
adc
and
xor
inc
lcall
test
bound
adc
mov
aam
mov
insl
stc
gs
add
stos
dec
dec
mov
pop
pop
ja
cld
sbb
repnz
pusha
mov
jge
push
ds
jo
adc
dec
cmp
cmp
dec
push
xor
dec
push
xchg
aas
cmp
call
pusha
orl
push
outsb
test
out
inc
popa
ljmp
repz
bswap
xchg
cmpsl
cmp
enter
and
mov
pop
adc
sub
push
dec
into
add
test
sub
aaa
jecxz
jno
xchg
mov
adc
and
in
add
sahf
cmpsl
fistpll
cmp
add
insb
movsb
jmp
out
ret
incb
cltd
sbb
cwtl
fnop
xchg
jae
aad
lock
or
aas
push
sub
or
aas
lcall
cmp
mov
mov
jne
jmp
mov
imul
jne
mov
or
adc
test
push
mov
mov
inc
add
mov
addr16
addr16
sbbl
and
jb
cmp
or
cld
mov
jae
movsb
push
inc
inc
add
or
push
xchg
cwtl
fwait
out
cmpsb
cld
push
adc
sub
imul
adc
int
mov
je
or
fwait
cmp
stos
jecxz
jnp
mov
stos
das
ret
fnstcw
lret
or
aaa
jo
mov
pop
loopne
rcll
aaa
cmpsb
les
in
ds
push
pop
fdivr
pushf
leave
inc
cmp
mul
lds
mov
add
xor
leave
jo
leave
mov
sub
ja
test
inc
decb
fdivrl
mov
repnz
or
sahf
push
mov
je
lret
sub
pusha
cs
outsb
push
mov
dec
daa
adc
fsubs
mov
add
mov
in
and
xor
out
jmp
cmp
psubusb
cli
test
fstl
mov
dec
movsl
dec
cmp
jo
rol
pop
fldt
cli
mov
ds
xchg
mov
das
jns
cmp
inc
push
ljmp
rorb
and
sub
ficomps
push
out
loop
cmpsb
mov
xchg
shlb
push
shlb
or
js
stos
ss
in
pop
add
add
jne
stos
testl
repnz
insl
aas
dec
js
imul
lret
aam
xchg
jne
cld
xchg
jbe
fsubrs
push
xchg
adc
sbb
incl
sbb
hlt
sbb
in
cwtl
pusha
or
scas
pop
jl
mov
inc
aaa
xor
stos
and
mov
sbb
push
pushf
jbe
and
pop
push
sub
jge
es
xchg
inc
aad
stos
push
imul
rcrl
fs
inc
fcmovne
gs
cmpsb
xor
sbb
adc
dec
mov
mov
fnstcw
xor
cmp
icebp
outsb
xchg
outsl
xchg
pop
sbb
aam
or
pop
cwtl
jg
ljmp
lods
addr16
inc
cmc
sbb
arpl
ja
add
lock
jns
test
pop
call
sbb
mov
scas
test
leave
jl
and
lret
iret
push
mov
mov
xor
fmuls
inc
add
mov
fstp
lret
dec
fmull
insb
dec
xchg
xor
sub
pop
fmuls
add
in
xor
adc
jnp
rorb
dec
cmpsb
ja
sbb
fisttps
popa
fstpl
or
push
in
fnsave
or
mov
inc
xor
movsb
inc
stos
or
jns
push
and
mov
fisttpl
and
jo
fiadds
xor
xchg
stc
lret
jge
movd
inc
mov
cmp
mov
das
icebp
rorb
inc
repz
push
mov
add
popf
insl
push
or
out
lods
pop
and
int3
cmp
pusha
mov
addr16
sbb
sarb
push
mov
adc
inc
ja
mov
int3
scas
pop
lret
jbe
sahf
fidivs
push
cmp
or
and
dec
xchg
push
insl
or
rcrl
push
mov
repz
insb
mov
imul
xchg
add
adc
jp
cmc
adc
mov
je
es
cmp
and
jg
fwait
rol
xchg
mov
mov
out
dec
outsb
xchg
dec
jmp
lret
negl
cld
pop
in
mov
pop
loopne
jmp
mov
ja
int
outsb
rcrb
movsl
hlt
out
call
or
xor
xchg
mov
mov
sub
pop
mov
in
jae
roll
mov
xchg
mov
jl
inc
push
in
mov
xor
xchg
or
arpl
mov
lcall
push
into
push
push
rcr
fwait
out
lahf
xchg
ret
enter
sti
iret
ss
repz
cmp
xor
xor
pop
mov
das
call
movsl
push
dec
and
das
stc
sti
divl
repz
aas
jle
leave
pop
in
mov
push
xchg
mov
test
mov
pop
jmp
jae
in
or
ret
movsb
pop
pushf
lds
adc
rcrb
cli
fisubrs
add
leave
jg
sub
inc
sbb
mov
push
mov
cmc
fdivrl
fwait
and
pop
les
fbstp
jnp
mov
sbb
mov
imul
pand
or
and
and
je
sarb
in
ja
or
jle
dec
mov
orl
outsb
js
jge
add
jo
adc
fs
push
out
nop
pop
clc
movsl
pop
and
fiaddl
fildll
xchg
pop
cmpsb
jge
icebp
test
jmp
lds
add
add
mov
out
push
and
dec
loop
es
data16
bound
dec
lret
xor
and
xor
jb
add
adc
xchg
sub
dec
test
insl
fsub
fst
dec
or
pushf
jg
and
push
repz
mov
inc
pusha
fiaddl
adc
mov
ret
ljmp
sub
sbb
rcl
jge
and
pop
fldenv
fcomps
out
xor
aad
imul
mov
push
loop
push
mov
push
cmpsb
fiadds
icebp
push
cmp
lds
lds
aam
pop
push
das
in
mov
hlt
add
js
lcall
xlat
adc
and
cmp
xchg
aad
sub
lcall
sub
pop
inc
mov
fsts
dec
lcall
ja
stc
in
xchg
and
movsl
add
cltd
mov
jg
jo
enter
cwtl
shrb
xor
in
lret
and
aad
jge
cmp
and
mov
fmull
or
and
and
xchg
sarb
in
adc
cltd
xor
aam
movsl
paddusw
pusha
add
out
cmpl
xchg
hlt
adcl
fimull
js
mov
out
push
xlat
mov
clc
gs
adc
test
mov
jle
inc
in
or
sbb
xchg
les
lret
sub
dec
push
mov
lods
sub
mov
call
sbb
cmpsl
hlt
das
jecxz
mov
mov
or
xor
or
cmp
and
sub
mov
add
mov
and
bound
testl
mov
lock
dec
push
mov
jecxz
mov
outsb
clc
mov
jle
lea
xor
or
es
neg
adc
cmpsl
scas
sarb
repz
jae
adc
iret
lcall
xor
jno
pop
cltd
cld
sti
inc
addr16
lds
jbe
cmp
iret
mov
inc
cld
mov
cmp
fsubrl
mov
es
dec
daa
je
test
addr16
xor
lods
push
and
push
cmpsb
ds
dec
daa
adc
int
and
cmp
out
dec
movsb
in
inc
jmp
test
popa
loopne
scas
jl
loopne
and
xor
outsl
sbb
das
xor
xor
xchg
rolb
adc
mov
push
sub
push
rcl
mov
sub
mov
mov
cmc
fdivrs
outsb
das
mov
sub
mov
sbb
imul
mov
cmpl
jbe
pop
stos
pop
test
mov
fstpl
jne
inc
test
nop
cmc
sbb
test
or
jnp
lea
push
inc
lds
cmp
addl
je
movsb
xchg
xchg
insb
push
outsb
fldenv
test
mov
pop
loopne
xor
loope
lods
pop
push
loope
mov
add
pushf
push
addr16
lret
mov
iret
test
cmp
jp
mov
nop
clc
xor
dec
ja
clc
adc
aam
movsb
mov
icebp
cmp
repz
insb
inc
mov
fwait
idiv
movb
fcmovnu
outsb
outsl
fwait
dec
pop
push
dec
mov
into
dec
ja
je
push
rcrb
mov
or
xor
inc
idiv
movsl
lret
fcmovne
mov
jbe
out
jae
xchg
js
sub
cld
cltd
xchg
stos
cmp
jecxz
scas
sub
lods
push
xchg
xor
add
inc
jecxz
jge
loope
lahf
jae
mov
push
sbb
aad
mov
xor
stc
mov
jle
mov
push
fwait
scas
mov
mov
and
dec
sub
cwtl
dec
fs
lods
sahf
lods
mov
icebp
stc
scas
cmp
sub
push
enter
fistpll
popf
cmp
ja
cmp
adc
test
inc
xorl
ds
cmp
testl
fcoml
or
clc
fwait
xchg
mov
outsb
adc
inc
jg
stc
dec
sub
mov
jo
add
pushf
fwait
mov
adc
lret
inc
pop
pusha
push
dec
mov
repz
rcrl
dec
cmp
pop
fistps
lahf
xor
sub
cli
jl
aas
cli
loopne
cmp
mov
mov
movl
push
sub
add
push
cmc
pop
dec
mov
leave
neg
mov
xchg
pop
xchg
aaa
nop
cld
cli
pop
pop
xlat
push
add
les
test
fwait
daa
xchg
in
pop
mov
or
in
icebp
nop
call
dec
mov
mov
out
jge
fimull
jg
js
divb
stos
bound
cs
cli
aad
mov
cltd
pop
fistps
pop
fnstsw
jmp
push
popa
into
inc
mov
cltd
mov
pop
clc
mov
in
and
mov
stos
lahf
mov
jb
xor
sti
movsb
outsb
jo
iret
push
xor
in
inc
add
in
sbb
push
dec
inc
pop
jle
out
addr16
adcb
pop
or
dec
sub
inc
mov
stc
movsl
xor
inc
dec
jge
pop
mov
iret
xor
clc
fwait
pop
fisubl
fsubr
or
je
push
adc
dec
dec
mov
push
pop
roll
sti
inc
adc
inc
mov
cmpsb
cmp
mov
fistps
aaa
rorb
mov
xchg
aad
sub
fisubs
pop
inc
lds
ja
cmp
lcall
shl
jle
rcll
push
dec
popf
icebp
jmp
mov
hlt
pop
jecxz
inc
out
or
lods
sbb
jne
test
jmp
aad
lea
inc
int3
mov
adc
dec
test
rorb
les
pop
xrelease
xchg
gs
out
jne
jmp
add
pop
mov
or
pop
lahf
fcmovb
shll
dec
add
test
in
ret
add
bound
shrb
dec
xor
or
push
sub
pop
in
push
cld
fdivs
enter
lret
cltd
pop
mov
shr
pop
sarb
stc
sbb
jne
cli
movsl
push
xchg
pop
dec
xorb
or
data16
cli
xchg
movsl
ror
pop
lcall
cmp
mov
cmp
stos
repz
and
push
ds
cltd
nop
in
pushf
and
sbb
lahf
in
mov
jle
insl
jns
jmp
data16
outsb
sbb
or
inc
ret
cmpl
dec
cmp
mov
adc
outsl
jns
sub
enter
notb
sti
push
scas
jl
cmc
dec
cmc
push
out
jmp
nop
call
xchg
rcr
sbb
stc
fwait
outsl
testl
adc
jns
jge
das
pop
call
mov
inc
loope
jle
or
stos
out
roll
and
inc
cmp
xor
inc
cmovnp
mov
inc
lret
adc
insl
rolb
push
insl
push
aas
xchg
aam
ja
sbb
jns
push
test
lds
xchg
gs
cld
arpl
imul
add
jl
shlb
ljmp
or
rcll
xchg
sbb
idivb
fnstenv
rorb
dec
push
jmp
push
cmp
cmpsb
fdiv
jb
lods
movsb
outsl
pop
sbb
cmpxchg
les
inc
dec
sub
mov
ss
xchg
jl
imul
mov
mov
inc
cmp
mov
lcall
adc
je
xchg
or
imul
and
mov
loope
mov
and
mov
sub
insb
ja
mov
sbb
or
or
inc
dec
pop
or
jmp
test
jmp
mov
popa
rcrb
mov
sub
jle
pop
cmp
addr16
mov
adc
dec
aaa
add
fisubrs
loope
fs
movsl
push
or
pop
and
and
mov
cmp
pop
xchg
ret
sbb
pusha
in
mov
sbb
push
cmp
push
lcall
mov
xor
adc
popf
fs
out
jne
sub
scas
popf
jmp
xor
cmp
inc
xor
mov
pop
and
mov
sub
shlb
sbb
xchg
rcll
adc
movsb
jae
mov
xor
sbb
ss
and
fisubs
mov
pop
test
outsb
push
xor
out
push
push
inc
inc
adc
and
pop
test
add
push
mov
sub
sahf
push
in
int
push
mov
imul
xchg
pop
cmp
cmc
xor
xchg
pop
popa
cmp
inc
mov
push
test
fimuls
imul
sub
adc
xor
jo
mov
jns
and
je
xor
fisubs
or
xchg
sbb
inc
adc
dec
repnz
iret
xor
les
mov
gs
fcmovu
jl
push
jg
stos
xlat
in
dec
xor
mov
mov
test
push
xchg
xchg
dec
in
or
add
jmp
and
hlt
cmp
cli
imul
cmp
nop
sti
dec
aad
pop
in
das
nop
test
ret
dec
test
scas
push
cwtl
test
push
add
push
xchg
and
stos
rclb
add
jmp
fsubl
das
xor
gs
mov
push
insl
add
xchg
lock
out
mov
xor
stos
mov
mov
push
mov
pop
adc
call
add
popf
xchg
pop
mov
xchg
addr16
mov
int
jecxz
jmp
adc
add
rorl
out
jnp
ljmp
in
js
pop
push
lea
sub
fwait
or
push
sti
add
pop
jno
sahf
pop
mov
xlat
rcll
mov
mov
or
jmp
jno
pop
ret
sti
adc
push
adc
mov
cmp
xor
and
xor
cmp
or
idivl
ja
shl
mull
aas
xchg
mov
mov
in
mov
stos
xor
dec
ficoms
sbb
mov
clc
push
pushf
adc
sub
inc
sub
and
adc
cli
inc
adc
daa
inc
push
lods
or
ja
sub
jns
ret
rcrl
pop
test
jmp
loopne
inc
xchg
sbb
sti
inc
cmpsb
iret
in
adc
fcompl
cmp
push
rolb
lods
sub
sub
shr
inc
jle
js
ja
pushf
adc
nop
mov
inc
xchg
pop
jo
dec
xor
cltd
aad
lds
adc
mov
into
lahf
repz
or
mov
push
jno
icebp
push
pop
test
fstpl
mov
ja
pop
push
repz
jne
outsb
cmp
imul
jae
xchg
stos
jle
test
outsl
xchg
leave
push
xor
lods
pop
add
fldcw
adc
pop
push
or
fdivr
jae
or
sarb
bound
jae
cmc
nop
test
push
out
fidivl
ficomps
adc
mov
or
jl
scas
dec
push
inc
movsl
add
js
cmp
add
mov
in
inc
or
jno
mov
and
adc
xchg
aam
ror
fistps
add
shll
sbb
movsl
rcll
in
pop
idivl
xchg
mov
push
push
mov
es
cmp
gs
lods
out
push
shrb
jl
rcr
adc
mov
dec
sub
cltd
andl
jno
mov
cmp
dec
pop
jle
mov
dec
leave
jl
inc
dec
xchg
es
jp
lcall
inc
pop
andl
xor
adc
std
fstps
mov
add
inc
adc
cmp
fldenv
out
imul
jle
xchg
fistl
imul
mov
jno
xor
add
movb
imul
testl
inc
dec
xchg
mulps
adc
lods
cmpsl
adc
jl
push
push
jns
fwait
or
cli
ret
push
inc
repz
popa
test
push
negb
mov
out
repnz
jbe
mov
jl
mov
orb
xchg
lods
add
push
cmp
fisubrl
xchg
jl
adc
sbb
cmpsb
insl
pop
fdiv
sbb
mov
mov
mov
inc
jne
lret
xor
arpl
adc
push
add
int
cli
xchg
dec
fucomi
andb
or
mov
pop
push
je
adc
pop
es
xor
or
adc
cli
sahf
movsl
in
sub
jns
jo
addb
xorb
stos
incb
mov
pop
mov
xchg
sbb
add
mov
sbb
push
xchg
rcrb
add
clc
or
mov
xchg
dec
sub
mov
jge
xlat
mov
inc
mov
fsubl
cmp
es
inc
loope
sbb
sbb
sbb
in
arpl
push
push
into
pop
cmpsl
xchg
lds
push
stos
aam
movsb
or
mov
cmp
mov
push
cmp
inc
jle
mov
shrb
aas
pop
stos
divl
push
xchg
inc
sti
icebp
loop
jle
add
stc
push
xchg
lock
sbb
mov
push
pusha
fcmovnb
insb
outsb
sub
cmp
xchg
mov
sbb
ds
aad
jno
xor
mov
lods
or
push
jns
xor
lods
pop
out
push
lret
jge
jl
add
sub
lods
cld
sbb
add
jno
testb
pop
dec
pusha
aas
sbb
test
in
xor
sbb
test
aas
int
iret
and
or
movsl
je
out
lods
or
inc
cmp
mov
ret
data16
shl
das
and
aam
cmp
push
cld
rorl
leavew
fwait
mov
jb
ret
ss
xor
shll
mov
add
pop
and
mov
psubusw
push
mov
push
push
movsl
lea
call
in
fsubs
or
sti
jo
inc
xchg
das
inc
inc
pop
push
push
adc
push
cli
pop
ds
pop
add
cld
pswapd
movsl
mov
pop
adc
fiadds
xchg
int
adc
imul
sbb
fwait
in
rcrl
add
inc
mov
js
and
sub
or
push
cmp
outsb
jecxz
int3
adc
lret
test
loope
aam
cwtl
adc
or
dec
call
ds
nop
xor
cltd
inc
mov
decb
inc
mov
add
adc
in
add
inc
jl
push
or
in
cmpsb
loopne
inc
pop
popa
fdivr
cltd
inc
iret
movb
adc
stos
xor
inc
cs
mov
shrl
mov
and
sbb
stos
aam
lods
jmp
adc
movl
mov
lds
mov
aam
nop
test
mov
mov
mov
push
mov
test
inc
dec
lret
lock
fnstcw
iret
pop
mov
rcl
adc
sbb
int3
jg
daa
test
xchg
pop
sarb
sub
pop
fisubs
ret
out
xchg
hlt
sub
pop
outsl
push
jnp
ficompl
mov
les
aam
in
hlt
sub
adc
and
xor
inc
lcall
test
dec
movsb
jp
push
sbb
or
cmp
sub
adc
and
xor
inc
lcall
test
dec
movsb
jp
push
sbb
or
cmp
sub
cli
xor
mov
je
test
dec
movsb
jp
push
sbb
or
ljmp
xor
xor
fdivl
inc
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
popa
scas
push
mov
dec
mov
add
icebp
push
loope
sarl
rorl
loope
xchg
jle
mov
popa
scas
push
mov
and
adc
add
icebp
push
loope
sarl
rorl
mov
mov
popa
scas
push
mov
and
adc
add
iret
push
mov
es
lds
hlt
adc
fnsave
fsubp
adc
mov
shrl
lds
ds
add
inc
xor
in
or
clc
dec
xor
mov
dec
sub
cmpb
adc
sub
xchg
push
adc
rcl
push
add
mov
xchg
or
or
lahf
pusha
fcoms
push
into
xor
xor
clc
xchg
push
push
ret
mov
loop
icebp
outsb
outsl
jl
jno
ljmp
xor
fsubrp
out
call
mov
loopne
sub
pop
in
nop
imul
hlt
cmpsb
cltd
jmp
cli
pop
and
fidivl
pop
push
je
aad
shll
push
outsb
test
adc
push
mov
and
adc
add
icebp
push
loope
sarl
rorl
mov
enter
lret
pop
fildl
mov
je
jno
popf
sbb
sub
aaa
fsubrs
adc
in
xor
sub
push
fistl
mov
out
jle
add
sbb
outsl
xchg
sub
or
sbb
jle
out
cli
adc
into
pop
fisubs
out
adc
add
icebp
push
loope
sarl
rorl
mov
mov
popa
scas
push
mov
and
adc
add
icebp
push
loope
sarl
rorl
mov
mov
je
mov
jb
push
inc
loope
addr16
insb
xchg
lahf
out
repz
pusha
out
push
push
gs
inc
insl
insl
stos
push
jecxz
cld
cld
dec
lods
int3
mov
push
adc
xchg
push
dec
jmp
insb
cmpsb
mov
adc
repz
aam
addr16
dec
or
je
lret
cmp
xchg
pop
sub
or
push
sub
add
fbld
movsl
cwtd
gs
pop
movb
lock
ds
into
leave
or
movsl
sbb
lods
ljmp
cmpsb
mov
mov
or
mov
mov
clc
cs
repnz
pop
jle
push
inc
dec
sbb
push
jae
shl
das
mov
cli
mov
sbb
lods
cmpsl
mov
sub
cmpsl
leave
add
or
jmp
pop
xor
imull
cwtl
in
ds
pop
or
pop
push
sub
inc
add
mov
mov
jbe
bound
fdivrs
or
mov
push
sahf
rcrb
outsb
adc
popa
cs
fcoml
cvtps2pd
or
dec
or
fadds
sub
lods
jb
xor
ret
mov
pop
add
inc
loope
mov
test
mov
push
xchg
xchg
pop
and
sbb
rclb
mov
aad
cmpsl
add
push
or
ljmp
adcb
or
adc
pop
push
jne
and
imul
in
adc
loop
xor
test
inc
fcoms
pop
rcrb
push
mov
push
add
inc
mov
movsl
shrl
add
push
clc
hlt
lds
dec
mov
inc
les
in
sub
leave
adc
or
sti
inc
sti
fsubrs
aam
jmp
sbb
stc
in
filds
inc
fs
repnz
jns
loop
xchg
mov
pop
adc
mov
mov
js
and
mov
enter
ss
fildll
mov
adc
and
push
push
mov
push
ss
add
add
jbe
push
movsb
xchg
sub
or
inc
and
and
jge
stc
repnz
pop
xchg
cmp
dec
lods
addb
cld
sub
pop
mov
outsl
cmp
ret
cli
mov
gs
mov
mov
mov
ja
aam
dec
dec
and
cs
loope
sub
and
sub
jbe
mov
xor
das
push
std
cltd
sbb
ss
xor
addr16
inc
mov
aad
xchg
jmp
xlat
push
insl
psubsw
adc
or
movsb
push
sbb
loopne
mov
cld
sub
int
jne
dec
cmpsb
ljmp
stc
inc
inc
adc
sbb
and
pop
adc
mov
inc
push
hlt
out
mov
data16
and
cwtl
clc
iret
add
mov
lock
testl
loope
outsb
mov
xor
sub
loope
adc
out
lock
xor
ret
xlat
shl
dec
xor
jo
or
iret
lret
divl
faddl
insb
cmpl
ja
jb
bound
lods
loope
fwait
and
fwait
mov
scas
ret
inc
adc
rcl
in
pusha
add
inc
fstpt
scas
adc
jecxz
push
fimuls
mov
shrl
sarl
icebp
aas
sub
ja
shl
cmp
push
inc
cs
jae
outsb
call
push
ret
fidivrl
push
hlt
outsb
sbb
aas
and
movsl
xor
ss
or
jge
cwtl
push
and
cmpsl
cld
imul
call
filds
jp
fwait
pop
mov
es
add
push
adc
jecxz
push
cmpsb
cmp
inc
es
mov
jmp
out
push
sub
dec
xor
mov
inc
xor
inc
ds
mov
movsb
mov
xor
scas
push
sub
pop
mov
jnp
xor
imul
xor
sbb
sbb
bnd
cmp
leave
shlb
mov
cmpsl
push
mov
push
and
xor
adc
sti
mov
insl
xchg
mov
adc
push
in
mov
pop
aaa
cmp
loope
lcall
inc
inc
cmpsb
sbb
add
popa
test
shrl
pusha
sub
push
mov
xchg
rcl
hlt
ljmp
insl
test
jns
in
push
and
jp
mov
adc
or
lahf
sahf
lahf
mov
ja
in
in
and
mov
outsb
stc
ja
and
call
jl
jae
sub
inc
dec
iret
insl
ds
pop
inc
movsb
sbb
imull
data16
test
jns
cltd
mov
fsubl
xor
inc
add
aam
push
iret
sub
sbb
push
gs
lcall
cmp
and
mov
cs
fs
sbb
int3
loope
mov
mov
jecxz
and
cli
repz
cld
sbb
lret
sbb
popf
cli
mov
popa
out
icebp
int3
ret
inc
mov
adc
popf
and
cmp
and
jb
xor
jp
jge
mov
and
stos
dec
cmc
jmp
and
fisubs
popf
inc
or
test
pop
or
push
fldl
pop
mov
fndisi(8087
ss
jp,pt
push
add
mov
lret
test
xor
pop
xor
cmp
ds
inc
out
sub
decl
adcl
xchg
mul
stc
ljmp
push
loope
imul
fiadds
push
repz
dec
adc
add
cmp
test
push
pushf
cmp
xchg
mov
fildll
xchg
push
out
cmp
inc
stos
jl
int
mov
add
jbe
and
daa
adc
sar
add
cld
and
add
cli
jge
lods
in
dec
jns
sub
adc
icebp
repz
and
or
call
push
outsb
mov
xchg
inc
ds
push
mov
xchg
adc
and
sahf
popf
into
xchg
dec
dec
xor
pop
hlt
inc
sub
fidivrl
adc
ss
sbb
pop
lods
add
inc
pop
sti
shrb
jae
sub
fildll
sarl
dec
cmp
push
or
fsubrs
sahf
xchg
into
inc
jns
lock
cmp
and
xchg
mov
mov
pop
sub
mov
fisubrs
dec
scas
push
xchg
leave
scas
mov
lea
pop
mov
shll
divl
and
pop
jne
sbb
in
lahf
mov
push
sahf
push
test
lods
and
ret
mov
arpl
xchg
and
and
incb
jne
iret
cmp
hlt
jne
xor
pop
jb
out
cmp
jnp
out
push
inc
xor
aad
mov
fwait
jno
jmp
decb
pop
push
lahf
pop
xor
in
shlb
out
out
jge
jne
testb
cmp
stc
add
inc
pop
cltd
bound
mov
pop
or
enter
cmp
xchg
outsl
addl
add
jmp
loopne
scas
inc
enter
stos
into
jp
andb
mov
xor
sbb
into
bound
insb
pop
out
sub
xlat
push
std
and
pusha
mov
or
xor
and
sub
sub
add
adc
loop
das
pop
jnp
fcom
pusha
cmp
or
ss
xchg
cmc
pop
xor
push
stc
add
aaa
filds
js
mov
mov
sahf
xchg
jle
gs
daa
out
pop
int
pop
pop
fsubl
rcrl
imul
pushf
sbb
mov
addr16
mov
add
xor
add
bound
cmp
and
test
lea
cmc
dec
mov
and
cltd
jbe
adc
movb
jno
mov
or
push
pop
jb
movsb
outsl
jg
shrb
push
les
adc
movsb
sub
add
repnz
fcmovnu
inc
mull
int
push
movsb
hlt
mov
sub
or
scas
lahf
mull
das
pop
adc
inc
add
pop
jg
int3
data16
sbbb
cmpsl
adc
shll
ja
loop
cmp
lods
js
xor
xchg
mov
mov
lret
outsl
mov
int3
xchg
sbb
pop
aaa
push
xor
jne
sarl
push
cmp
repz
push
scas
push
jno
outsb
jg
stos
dec
cmp
insl
cmp
dec
xchg
mov
ds
lds
lcall
into
pop
add
inc
or
test
cs
data16
jmp
imul
rclb
mov
pop
sti
jo
fs
mov
in
stc
xor
cmp
jns
push
xchg
ds
sub
cmp
add
in
in
mov
cmpsw
mov
and
push
cltd
xchg
xchg
out
xor
xchg
xchg
mov
xchg
jecxz
mov
fcoml
addb
or
xchg
scas
movb
mov
cltd
lods
lcall
repz
mov
lods
sahf
shl
dec
cs
dec
das
mov
fcomps
jge
xchg
daa
ds
sub
pop
jns
mov
mov
dec
mov
ret
xchg
inc
sub
jnp
or
bound
leave
xchg
mov
xchg
pop
dec
cmp
sub
sahf
mov
mov
fisttpl
out
int
xor
enter
mov
leave
xchg
in
push
out
stos
loope
imul
mov
stos
jmp
inc
add
ds
jns
jns
inc
test
adc
adc
and
or
dec
fistl
push
lods
xor
xchg
mov
pop
cmc
outsl
pushf
sbb
dec
call
cmp
mov
mov
fsubrp
sub
mov
pop
mov
push
fcomi
jnp
cmp
fimull
pop
xchg
lret
dec
sub
cmp
jbe
or
push
and
scas
cmc
push
mov
std
adc
cmc
xor
jg
divl
add
jnp
fdivr
xlat
daa
jp
sbb
shll
jnp
xor
cli
mov
inc
inc
sbb
cmp
lods
aaa
ja
test
xchg
mov
sbb
aaa
sub
push
rcrl
jae
cmp
into
push
push
shr
dec
pop
mov
or
mov
xor
dec
ficoms
int3
gs
ds
es
aad
les
loop
or
call
dec
xor
mov
aam
inc
testl
xchg
hlt
or
lcall
or
inc
xorb
push
mov
or
aas
sbb
decb
mov
mov
or
add
push
sub
mov
or
mov
adc
insb
daa
leave
xchg
addr16
ficoms
push
js
mov
test
or
adc
cmp
xor
lods
into
fcmovb
inc
fdivrl
sahf
xor
and
icebp
mov
push
cld
push
push
loop
cld
aam
neg
sarl
sbb
add
sbb
shlb
push
lods
sub
es
mov
xlat
out
lock
fisubrs
enter
jae
xor
out
call
es
push
test
push
dec
xchg
mov
cmp
push
xor
pop
adc
lds
stos
mov
shll
fxch
add
pop
add
inc
dec
loope
stos
outsb
xchg
xor
or
push
movsl
sti
in
jmp
sub
pop
adc
jae
pop
cmp
xchg
popl
add
fiadds
sub
lods
or
mov
adc
gs
lcall
jb
hlt
sub
gs
and
or
lret
xchg
and
aaa
jo
push
enter
dec
jge
fs
sarb
jge
mov
add
push
and
xor
mov
sub
jb
shlb
cltd
loopne
sbb
insl
sbb
test
imul
dec
lods
dec
push
lock
xor
test
and
mov
in
cltd
mov
mov
adc
cltd
arpl
sbbl
in
cmp
mov
xchg
test
inc
in
or
cwtl
js
in
cmp
mov
mov
mov
xchg
sarl
adcb
xchg
aam
shlb
pop
sub
jnp
jge
xor
inc
mov
xchg
sub
scas
ja,pn
push
mov
jae
xor
or
ror
sub
push
mov
or
jge
outsl
in
sub
in
dec
adc
sub
mov
or
clc
or
ret
incl
sub
mov
push
in
sbb
mov
inc
int3
mov
pop
xchg
mov
roll
test
mov
roll
adc
mov
test
in
adcb
mov
pop
call
js
jg
lods
sbb
fsubrp
jns
lds
mov
popf
addb
push
ret
out
cmpsb
js
fnstcw
inc
and
daa
decb
and
push
mov
clc
test
stos
xchg
cs
sbb
ja
xor
int
xor
mov
aas
iret
data16
push
sarl
mov
insb
or
dec
sbb
cmpsb
xchg
push
aaa
lret
push
mov
rorl
ret
call
loop
shlb
test
push
jge
sbb
nop
xchg
add
cld
sbbb
jg
mov
dec
test
imul
adc
cmp
rcll
push
out
jns,pn
in
sbb
cmp
dec
jmp
faddl
test
lods
jp
cmpsb
jl
hlt
pusha
mov
cmp
sbb
mov
rorb
loopne
adc
test
ds
movsl
mov
stc
ss
jg
jmp
push
xchg
or
or
push
repnz
outsl
pop
push
scas
leave
rcll
mov
or
testl
ss
xor
int
sub
jmp
popf
cwtl
push
ljmp
test
mov
imul
cmp
mov
push
mov
lods
les
pop
into
insb
dec
mov
push
mov
ja
xchg
sbb
outsb
repz
pop
fwait
cmp
bswap
pop
ss
mov
ret
sbb
mov
inc
jmp
add
add
dec
lahf
clc
popf
or
inc
pushf
xor
jns
add
push
or
jns
sub
push
std
mov
stc
inc
sti
sti
mov
mov
add
sub
lods
pusha
scas
test
jne
mov
jl
mov
icebp
sub
push
repnz
push
out
or
outsl
ljmp
or
push
sahf
sahf
test
cld
inc
test
scas
pop
inc
mov
pusha
jno
fnstenv
mov
jmp
nop
lahf
out
xlat
adc
pop
jmp
adc
iret
aas
adc
movb
bound
imul
and
xor
sbb
jns
add
push
xor
xor
dec
mov
lcall
push
add
and
stos
push
cmp
adc
xor
mov
iret
scas
jae
ljmp
sub
inc
xor
fistpll
pop
stos
add
sti
pop
insl
clc
loope
dec
sub
movsl
jno
sbb
sbb
js
test
pop
inc
cld
in
fmuls
push
jmp
test
fnstenv
out
cmpl
fwait
push
mov
push
sbb
repz
jg
xchg
sbb
cmp
xor
out
sub
les
les
fdivl
pop
pop
stc
sub
sbb
jo
push
test
xchg
mov
lods
xchg
pop
push
outsb
cmpb
imul
push
es
sub
or
push
xchg
test
repz
mov
inc
sbb
jno
sbb
cmp
aam
aad
push
xor
pop
pop
outsb
jbe
mov
and
xor
mov
sub
pop
outsl
xlat
or
imul
ret
daa
pop
lods
cld
or
add
loop
mov
fidivl
jmp
outsl
ret
fld
roll
jnp
idivl
push
add
shrl
lds
bound
mov
xchg
pop
bound
insb
or
mov
shr
popa
sub
or
push
pop
or
add
push
or
jnp
inc
inc
xor
sti
mov
movsl
lcall
stos
daa
out
dec
outsb
xor
inc
lock
outsl
pop
icebp
push
aam
inc
cmp
cmp
and
iret
and
int3
cmp
adc
sub
mov
lret
inc
sarb
loope
mov
daa
jp
icebp
mov
xorb
das
aad
xchg
int3
lcall
mov
mov
add
daa
mov
lods
cmp
hlt
je
mov
psraw
scas
jnp
xchg
xchg
lds
mov
addb
cmpsl
lock
pop
xchg
insb
xor
xor
clc
inc
adc
cli
loope
aas
scas
add
bound
ret
mov
mov
sahf
lds
das
mov
xor
gs
adc
je
sbb
and
fmuls
cld
jae
enter
pop
mov
ficoml
cli
or
dec
and
push
shl
jbe
mov
andl
daa
fdivl
push
cmpsl
movsl
fs
scas
aas
clc
adc
stos
adc
fidivrs
adc
outsb
mov
arpl
mov
scas
das
or
nop
ss
insb
jno
stos
ror
js
incl
test
jae
and
call
shrl
or
hlt
sub
out
pop
cmp
fs
test
je
stc
insb
je
rcll
mov
imul
imul
sbb
mov
stc
ret
stos
aad
sub
out
enter
add
fcoms
dec
inc
mov
jp
stc
jo
movsl
sub
aas
les
hlt
adc
xchg
adc
imul
lods
and
xchg
outsl
cmp
iret
sub
pop
ret
je
mov
cmp
sub
sub
jl
rcl
test
negb
test
xchg
mov
cmp
imul
dec
es
cmp
sbb
mov
pop
int
lret
adc
imul
xchg
push
scas
clc
aad
mov
sub
jb
cmp
sar
push
sub
mov
jns
out
adcb
pop
je
lods
cmp
insb
into
jg
push
into
stos
push
mov
fs
add
mov
test
int3
daa
sbb
cmp
dec
inc
dec
repnz
and
lods
lods
stc
pop
div
inc
movsl
outsl
fisttpll
in
in
sub
push
scas
scas
cmpsb
lds
dec
leave
aas
fisttpll
jmp
rclb
xor
push
mov
lcall
jecxz
pop
decb
lea
mov
pop
shr
ds
jnp
dec
or
sub
clc
scas
movsl
jg
in
push
xlat
mov
and
add
cmp
jae
xchg
stos
rcrb
mov
das
jno
sbb
push
out
xor
inc
rcl
stc
mov
inc
aam
cmc
lcall
mov
mov
cmp
shlb
xor
pop
xchg
or
jecxz
es
mov
add
dec
add
pop
sahf
in
test
out
stos
outsl
je
cmp
test
mov
xor
adc
loope
lock
int
subb
and
jecxz
fwait
movsb
mov
cmp
das
xchg
mov
jne
mov
jbe
jl
addr16
ss
push
loopne
test
xor
jae
ss
pop
out
jbe
pop
mov
push
mov
scas
ds
gs
mov
ljmp
les
sub
je
cwtl
punpcklwd
push
ds
cmp
push
movsb
xchg
dec
pushf
push
or
jo
test
sub
jl
sub
jno
xor
xchg
out
test
int
xchg
push
lret
sahf
inc
sbb
cs
cmc
sti
fbld
movsl
xchg
xor
jb
or
xlat
out
jle
notb
adc
or
mov
xchg
xchg
inc
ret
adc
jo
push
insl
or
jg
or
std
mov
negb
fnstsw
mov
xchg
mov
cmp
inc
out
mov
push
cmp
fnstcw
sbb
sbb
mov
or
cmp
adc
std
and
js
jae
rol
aaa
ror
nop
push
scas
pop
adc
das
fcmovnbe
fcmovne
sub
mov
scas
insl
sar
push
pop
pop
mov
jle
adc
es
test
popa
cmp
sbb
push
adc
and
mov
jmp
repnz
test
daa
pushf
pusha
movsb
cmp
inc
das
sbb
daa
cld
push
leave
push
push
mov
sub
nop
mov
lcall
jo
sbb
xor
loop
mov
jae
or
push
push
mov
and
adc
add
icebp
push
loope
sarl
rorl
mov
mov
popa
scas
push
mov
and
adc
add
icebp
push
loope
sarl
rorl
mov
mov
popa
scas
push
mov
and
adc
add
icebp
push
loopne
sarl
rorl
mov
mov
popa
scas
push
mov
mov
push
push
push
dec
test
ds
cmp
pop
xchg
outsb
cmpl
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
add
xchg
xor
mov
cmc
js
test
mov
lds
loopne
push
cmc
inc
add
xchg
xor
in
aad
lds
adc
in
in
cmc
inc
sbb
or
cmp
cmc
dec
in
aad
lds
int
lds
mov
inc
insb
mov
cli
and
xor
movsb
roll
outsb
sub
int
aam
cmp
jecxz
and
outsl
jbe
sbb
shl
test
fnstsw
xchg
add
mov
add
jmp
jmp
out
xchg
mov
ror
push
popf
aad
clc
lds
in
cmc
int3
add
add
test
pop
je
push
out
xchg
dec
nop
ljmp
outsb
stos
cmc
enter
pop
test
aad
mov
rolb
movsb
ljmp
sbb
cmc
pop
lret
adcb
mov
sbb
andb
in
cmc
inc
int3
mov
movsl
and
cmc
inc
in
aad
lds
lods
add
call
sub
fidivl
inc
cld
inc
in
ss
xor
sub
stc
push
jge
inc
lds
push
xchg
push
cwtl
add
mov
cmpsl
dec
xchg
inc
imull
mov
es
lock
movsl
je
push
push
mov
adc
dec
std
pop
loopne
cmc
push
in
aad
lds
adc
aad
in
cmc
inc
add
xchg
xor
in
aad
lds
adc
aad
in
cmc
inc
add
daa
inc
ret
aaa
pop
stos
mov
movsb
xlat
aad
dec
mov
pusha
lods
and
and
outsl
or
filds
mov
inc
rol
loop
jbe
rorl
ljmp
push
inc
push
adc
jge
hlt
fs
loope
lahf
lret
mov
nop
jecxz
out
cmc
das
test
inc
jbe
or
mov
pushl
mov
inc
arpl
test
test
jno
call
and
ss
xor
inc
mov
add
jnp
lret
push
ljmp
ljmp
pop
push
adc
pop
test
push
in
imul
nop
pop
cmpsb
jmp
dec
notl
cmp
push
mov
push
std
xor
jge
pop
pop
addr16
ds
adc
das
mov
xchg
mov
push
push
mov
imul
add
mov
cmp
mov
push
out
and
mov
mov
sbbl
xorb
mov
jl
push
jmp
xor
and
fwait
lea
ss
arpl
xor
mov
call
push
cmp
cmp
push
adc
or
lea
jl
addr16
imul
mov
inc
data16
out
xor
pop
pop
mov
adc
adc
stos
dec
and
or
sub
cld
outsl
mov
xchg
arpl
dec
mov
lahf
adc
cmpsl
mov
rorb
popf
push
jbe
lret
xchg
cmp
loop
lods
add
popa
fdivl
rorb
sbb
mov
mov
sbb
xchg
fnstcw
cli
and
test
outsb
mov
and
lret
movsl
cs
jge
push
stos
jp
ffree
cmp
cmpsl
or
or
scas
inc
inc
mov
dec
mov
test
in
mov
inc
push
dec
mov
xor
aaa
or
popl
pusha
xchg
leave
and
loopne
dec
out
pop
arpl
out
sbb
add
js
or
xor
mov
xchg
inc
sbbl
ret
mov
and
cmp
cmp
lahf
add
aaa
inc
fs
mov
add
les
fistpll
mov
xor
xor
inc
icebp
xor
cmp
sub
mov
pusha
xor
jae
mov
subl
push
test
cmp
decb
xor
adc
mov
adc
xchg
insl
push
lea
decl
mov
and
mov
mov
sub
sub
or
cmpsl
push
inc
push
dec
repnz
cltd
cmc
roll
sub
pop
popf
dec
sub
cmp
mov
mov
sub
in
xchg
cmp
mov
outsl
adc
sub
lods
sub
or
sbb
sbb
out
push
cmp
cwtl
fiadds
mov
arpl
or
xlat
inc
shlb
pop
sbb
mov
clc
lahf
pop
imul
and
jne
scas
jo
mov
test
push
in
add
lret
sub
jmp
xor
cwtl
test
or
filds
in
xchg
xor
xor
cmp
mov
mov
loop
and
nop
pop
push
cld
in
fmulp
adc
movsb
add
hlt
jmp
xor
pop
sub
jecxz
mov
rcr
push
sbb
insl
adc
pop
or
aam
popa
ljmp
test
cmp
out
js
or
and
hlt
mov
std
mov
sahf
pop
stos
fwait
mov
repnz
inc
test
mov
pushf
pop
shl
leave
ret
cmc
int3
lcall
adc
outsb
dec
add
aad
aam
fs
leave
jne
imul
dec
out
xlat
and
int
fdivrp
std
cwtl
pop
add
cmp
jg
sub
jp
push
movsl
sub
jg
lea
aam
adc
or
or
xchg
cmpl
fidivs
addr16
cli
and
scas
ficoms
add
lods
push
shr
pop
cld
bound
pop
scas
aaa
xor
dec
jmp
stos
mov
or
roll
lods
lret
adc
or
je
lods
ficomps
xor
stos
or
sbb
mov
stos
stos
jmp
xchg
or
xchg
and
pop
or
pusha
push
pusha
cmp
inc
cmc
insl
xchg
mov
testb
std
xor
add
fbstp
icebp
sub
mov
pop
fcompl
imul
sbb
pop
sbb
ret
dec
push
loop
cltd
pop
ror
cmp
lret
xor
cmc
data16
push
lock
dec
andl
dec
dec
xchg
and
xlat
xlat
push
sub
cmp
mov
push
xchg
sbb
xchg
xor
mov
jecxz
jmp
xchg
push
xchg
jle
cmp
mov
jmp
adc
clc
cmp
mov
js
rcll
pop
dec
pop
dec
xor
repnz
pop
jl
repz
push
cwtl
mov
jmp
je
fsubrs
les
cmp
ret
js
xchg
je
sbb
je
leave
ret
in
mov
pop
dec
fwait
push
cli
dec
aas
lret
rcll
lahf
cmpsl
stc
adc
loop
jb,pn
ficoml
ret
pusha
dec
mov
std
int3
push
mov
frstor
jns
cli
fcmovnbe
xor
cmp
loop
sti
mov
stos
cld
push
mov
addr16
push
stos
scas
or
lock
jno
mov
mov
mov
xchg
xchg
push
je
inc
lock
ss
inc
out
and
mov
and
jp
ficomps
xor
sbb
pushf
jb
xor
mov
jl
xor
test
cwtl
shlb
dec
jg
rcrl
fildl
adc
mov
lret
mov
adc
cli
in
in
testl
jle
cld
mov
popa
xchg
ss
loope
mov
mov
cli
jnp,pt
adcb
out
push
push
aas
sub
insb
addr16
out
rol
cmp
cli
mov
dec
ja
xlat
fldt
into
cwtl
adc
mov
xor
out
je
outsb
aad
adc
xchg
jg
inc
pop
sub
fimuls
lret
addr16
ja
aad
inc
jne
movsl
fstl
aad
scas
insb
sbb
mov
subl
pop
fsubs
bound
and
mov
dec
loope
cmp
cmp
ja
xchg
jne
or
js
adc
incb
addr16
xchg
sbb
add
je
push
enter
and
add
movsb
jb
pop
lods
mov
mov
mov
inc
addr16
pop
lds
cmp
mov
dec
outsl
stc
xor
rolb
stos
cmp
xchg
push
push
cli
mov
or
in
cmpsb
and
pop
mov
cmp
inc
movsl
lock
push
mov
iret
bound
out
push
or
subb
or
pop
lahf
insl
add
sub
push
adc
xchg
mov
and
mov
scas
sub
mov
jnp
sarl
int3
inc
lahf
in
jmp
ja
pop
loope
inc
insb
pop
in
push
mov
stos
xchg
push
into
push
push
fcompl
and
push
mov
push
divl
out
out
leave
or
mov
sbbb
xchg
pop
mov
leave
mov
nop
jae
and
out
dec
sub
dec
shrl
fstl
inc
mov
and
push
push
push
testb
dec
lods
loope,pn
add
cmpsb
add
add
popa
dec
xor
imul
insl
pusha
test
hlt
sbb
in
dec
mov
or
or
xor
clc
addb
aaa
lret
and
and
and
das
cs
stos
mov
xchg
inc
fisttpll
mov
and
int
std
pop
dec
and
sub
mov
lahf
lods
loope
in
js
mov
pusha
jbe
mov
sub
ds
cmp
pop
cwtl
inc
add
adc
sbb
std
cli
test
jmp
mov
faddl
sarb
cmpsb
jns
mov
shll
out
mov
je
pop
add
or
addr16
das
push
and
sbb
dec
cld
bound
sahf
je
adc
arpl
shl
sub
stos
mov
mov
scas
adc
push
outsb
in
jae
mov
xchg
cltd
pop
and
in
jl
cmc
or
outsb
mov
xor
lahf
jl
testl
mov
xlat
loope
int
andb
jg
clc
imul
pop
sbb
cmp
hlt
push
cli
fcoms
or
les
mov
xchg
nop
inc
mov
jmp
inc
fs
loopne
fcmovnu
sbb
inc
mov
cmpsb
mov
push
lret
sub
cmp
and
movsb
pop
cli
fisubs
sub
jg
inc
push
orb
xchg
rorb
call
pop
mov
aad
mov
inc
fldl
aaa
jmp
sbb
sarb
leave
adc
push
mov
pushf
jbe
jmp
and
repz
lcall
pop
dec
cmp
cmpl
fbstp
xchg
adc
push
bound
ds
push
loop
mov
in
xor
int3
inc
xchg
sub
stos
xor
dec
lods
xchg
jae
jb
sub
mov
in
add
pop
ror
cmp
repnz
ds
lock
roll
std
mov
jae
mov
dec
jb
loope
adc
stos
loopne
les
adc
jo
jne
mov
jge
xchg
jbe
pop
push
int
lock
inc
pop
sbb
stos
push
daa
dec
pushf
stos
sub
or
dec
or
call
repnz
fcmovu
loope
outsl
scas
xchg
add
or
pop
adc
sti
sarl
push
es
pop
stc
mov
jno
fdivrs
stc
test
rorl
into
call
loope
xlat
mov
int3
out
ds
or
insl
repnz
scas
ljmp
test
cmp
xlat
aaa
push
icebp
xchg
mov
stc
dec
in
xor
outsb
decl
pop
pop
sub
push
mov
and
add
jae
popf
inc
push
mov
mov
incl
or
mov
cli
and
in
test
add
insl
xchg
inc
xchg
sub
and
mov
dec
xchg
push
sbb
mov
je
lret
rcl
jmp
or
aam
rcrl
jp,pn
mov
loope
pop
cld
sbb
xchg
mov
jae
sbb
popf
xor
mov
sub
jo
movsl
and
stc
xchg
adc
add
mov
push
lock
lods
adc
and
stc
push
stos
add
sbb
scas
push
ljmp
push
cmp
dec
fsubrs
add
int
loopne
pop
mov
push
sbb
mov
and
push
add
call
inc
scas
and
cmpb
mov
xchg
xchg
out
arpl
loop
mov
movsl
push
jno
jb
lret
fnsave
outsl
xor
sub
add
rcll
arpl
lds
fisttpll
push
adc
xchg
xchg
ror
int3
rcrb
incb
push
sbb
popf
lods
sub
cltd
xchg
aam
cmp
dec
ljmp
sti
cs
jbe
xorb
aad
lods
sub
hlt
xchg
xchg
push
xchg
xchg
sahf
mov
dec
lods
add
xchg
hlt
je
mov
cmp
adc
negb
pop
cmp
divb
cmpb
cmp
stc
and
sahf
shr
jecxz
js
xlat
outsl
push
stc
aad
sbb
and
in
stc
pop
call
push
push
sbb
out
sub
mov
adc
out
jmp
adc
repz
fcomi
sub
inc
shrl
pop
inc
in
xchg
mov
ret
lods
or
cld
inc
mov
sbb
repnz
ret
xchg
fwait
mov
fsts
xchg
outsb
outsb
lret
mov
movsb
pop
push
pop
cmpsb
negb
test
mov
enter
jl
cs
pop
jmp
pusha
lds
out
lret
jl
shll
cld
js
adc
lea
mov
pushf
mov
pop
sbb
cli
movsl
in
jmp
mov
pop
ror
mov
cwtl
hlt
ficoml
or
push
addb
mov
jae
xor
hlt
das
movsl
mov
cmp
mov
popf
or
aad
and
cmpsb
jno
fisttps
xchg
mov
pop
sbb
rclb
lret
mov
cmpsl
push
jo
ret
pop
inc
mulb
scas
mov
out
jp
cmpsl
ja
test
xchg
add
jle
xor
jge
repz
jbe
popa
jp
stc
sbb
in
push
fisttpll
test
rcrl
lods
aaa
pop
cmp
pop
jns
sbb
sahf
das
mov
xchg
xor
jge
pop
xor
ret
out
push
fcompl
xor
icebp
in
pop
sbb
dec
iret
xchg
xchg
sbbl
dec
lcall
jecxz
test
shlb
mov
jns
mov
mov
in
jbe
faddp
cmc
mov
or
and
insb
cmpsl
push
or
mov
cmpl
dec
hlt
xchg
push
mov
out
loopne
jbe
mov
sbb
mov
test
push
insb
out
xchg
adc
or
mov
add
push
fidivs
sbb
shrl
mov
fwait
sbb
dec
test
jno
or
lahf
in
cmp
pop
in
sub
xor
cmp
and
lock
rcll
dec
mov
jne
mov
adc
mov
fcompl
mov
lods
test
repz
rorb
pop
sbbb
test
adc
jge
gs
adcb
in
xchg
pop
imul
call
jo
adc
int
and
mov
pusha
mov
push
push
sbb
jns
lea
leave
mov
cmp
dec
fmul
push
cs
xor
xor
jnp
xchg
sarb
ror
mov
dec
or
inc
lahf
mov
sbb
dec
jnp
dec
outsb
fnop
add
add
sbb
lods
js
rcl
outsb
or
sar
pop
inc
dec
ret
dec
in
xor
call
enter
je
and
std
fcmovnbe
mov
add
xor
mov
loop
adc
jnp
cmpsl
pop
out
push
push
push
fucom
pushf
mov
or
loopne
add
jge
and
jmp
jbe,pn
pushl
mov
mov
das
lahf
mov
cmp
cmpsb
xchg
adc
dec
mov
dec
sub
cmp
push
push
popa
sub
xor
arpl
mov
sub
rolb
aaa
inc
jne
clc
jns
pop
xor
cld
jl
addb
xchg
out
aaa
add
icebp
xchg
push
pop
imul
call
xchg
cmp
xchg
inc
aam
push
mov
popf
inc
mov
mov
inc
push
sbb
gs
jl
cmpl
push
popf
xorb
jo
mov
push
dec
adc
cmpsl
int
adc
cmc
cmp
loope
cld
movsb
pop
mov
lods
bndstx
outsb
xchg
or
enter
sarb
pop
jns
test
cmp
clc
sub
outsb
aaa
out
sbb
les
add
sub
rcll
in
aas
les
inc
push
lds
in
sbb
subl
into
dec
sbb
loope
fsubl
in
lods
pop
movsl
test
cmp
xorl
mov
test
xchg
mov
xchg
jnp
outsb
xchg
je
fildl
lea
test
cld
mov
int
jl
lock
std
xchg
push
add
notb
rcrb
jecxz
or
xchg
cmc
push
mov
loopne
scas
adc
test
cmpsl
xor
rcl
int3
push
movsl
mov
lods
xchg
aaa
inc
mov
ret
pop
cltd
lods
orl
sbb
jp
add
in
pushf
mov
adc
and
dec
mov
xchg
mov
roll
mov
push
and
and
mov
repnz
ret
sbbb
mov
fcmove
repz
adc
mov
add
mov
inc
mov
sub
push
xchg
enter
in
movsl
adc
push
mov
adc
inc
js
lds
and
fldt
bound
push
loop
add
mov
xchg
std
cmp
stos
dec
cmp
mov
out
mov
push
fsubs
fisubl
xchg
xlat
idivl
out
lods
lds
push
lret
cmc
addl
xchg
int3
cwtl
mov
mov
pop
mov
and
xchg
mov
sarl
cli
popa
divb
sti
push
mov
and
or
leave
pop
cmp
pop
jl
lds
xlat
xor
mov
test
pop
repnz
aaa
xchg
outsl
sub
mull
xor
sbb
addr16
shll
jne
gs
std
mov
mov
ficomps
in
cmpsl
add
in
cmp
push
hlt
das
xchg
mov
es
push
rcr
pop
jne
ret
pop
and
sub
cmp
add
es
movsb
mov
jle,pt
out
pop
pop
cmpl
jbe
lahf
cmp
inc
dec
pop
push
rol
jbe
cmp
fmulp
call
fisttpll
lods
enter
int3
mov
loopne
push
cmp
stos
or
dec
add
jle
add
mov
push
mov
mov
pop
sar
and
jbe
jae
sbb
or
lret
iret
or
mov
aas
lods
push
or
dec
adc
sub
cli
lret
pop
jmp
adc
lock
lea
call
gs
sbb
daa
and
pushf
pop
int
cmp
push
push
jecxz
jp
cmp
lret
or
add
ljmp
shrl
out
xchg
sub
int
mov
add
bnd
inc
sub
aas
dec
in
negb
dec
fsubl
mov
xor
adc
mov
cltd
aad
jo
scas
sti
aam
and
imul
testl
jae
imul
dec
mov
mov
loopne
mov
inc
sub
lock
push
aam
ret
shrb
dec
int3
inc
jne
mov
test
cmp
or
jmp
xchg
mov
std
jle
xchg
jge
fisttps
mov
push
mov
rorb
pop
inc
push
cmp
scas
int3
xor
ficoml
sar
sbb
test
aad
pop
fcompl
std
add
stos
jae
add
xor
dec
ds
add
call
lcall
sub
sbb
stos
dec
mov
jae
add
lahf
xor
mov
jle
ss
mov
mov
dec
mov
cli
rcrb
mov
idivl
shrl
jbe
loop,pn
test
incl
movsb
cmp
sub
cmp
xchg
xchg
sbb
shll
sar
xchg
shrb
jp
sbb
ret
jle
jb
es
sahf
negb
gs
push
xor
and
jno
clc
cmpsl
insb
push
or
xchg
leave
test
sub
xor
jl
inc
mov
sbb
pop
and
ds
cwtl
xchg
cmp
sahf
leave
aad
popf
lods
adcb
or
add
ljmp
xchg
rclb
mov
pop
bound
xchg
call
pop
and
call
add
das
jno
shr
push
fsts
sti
jnp
sub
outsl
call
jbe
lds
out
inc
push
popl
pop
daa
and
mov
test
imul
aas
hlt
jns
imul
mov
cltd
push
scas
sbb
scas
mov
aam
fs
pop
mov
jge
pop
daa
imulb
adc
addb
into
mov
jns
arpl
imul
lret
add
dec
test
mov
rcll
adc
pop
pop
out
scas
and
inc
adc
fisubrl
sbb
vcvtdq2ps
and
push
adc
leave
dec
and
and
pop
push
xor
pop
sbb
and
push
imul
das
xchg
xor
in
aad
lds
adc
aad
in
cmc
inc
add
xchg
xor
in
aad
lds
adc
aad
in
cmc
inc
add
adc
push
gs
lds
adc
aam
in
testl
xchg
xor
in
aad
lds
push
unpckhps
lcall
fists
and
xor
gs
cmp
test
insl
mov
mov
les
das
hlt
aas
hlt
fadds
adc
and
xor
inc
lahf
push
scas
fs
xchg
or
add
in
hlt
sbb
out
xchg
pop
xchg
test
dec
addr16
scas
add
or
mov
hlt
mov
push
xchg
mov
pushf
cli
inc
mov
xcrypt-ctr
cmpsl
pop
cmpsb
mov
jecxz
daa
sbb
scas
iret
pop
push
push
out
lods
out
enter
stos
pop
out
jbe
xchg
jl
mov
mov
inc
dec
add
sti
fists
rcll
push
mov
add
xor
aam
aam
sbb
hlt
pop
push
iret
adc
and
add
mov
aam
imul
dec
mov
sahf
das
cmp
cmc
mov
mov
fbld
mov
or
mov
lods
push
pop
mov
or
hlt
mov
jle
mov
pop
xchg
stc
mov
mov
movsb
iret
xchg
pop
iret
sbb
in
add
add
xor
cs
inc
test
cmpsb
insl
push
pushf
inc
mov
lods
pop
faddl
ret
das
in
nop
mov
and
repnz
in
pop
in
sbb
test
pop
cltd
iret
jl
adc
push
std
xor
aaa
icebp
retw
add
sbb
pop
cmc
sub
or
push
insb
mov
cmpsb
inc
in
jno
inc
incl
sub
je
test
outsl
movsb
jg
pinsrw
das
in
hlt
iret
add
adc
and
xor
inc
lahf
push
scas
fs
xchg
outsl
movsb
jg
pinsrw
das
in
hlt
iret
add
xchg
mov
xchg
daa
mov
fsub
pushf
popa
adc
xchg
cs
mov
and
xchg
iret
sbb
dec
sub
test
inc
in
xor
je
imul
scas
sbb
leave
xor
push
dec
push
push
aas
sarb
mov
wrmsr
cmpsb
or
xor
iret
mov
scas
inc
je
xchg
outsl
xchg
cmp
andb
adc
mov
adc
call
jnp
inc
add
or
mov
lret
arpl
cld
bound
xlat
lcall
lea
pop
lds
sbb
pop
add
jno
or
cmc
icebp
cmp
test
enter
push
out
push
loope
aaa
dec
cs
sbb
je
push
aad
add
jmp
leave
fcomps
mov
sub
jne
push
aas
inc
fldenv
scas
bound
xor
outsb
xor
push
dec
cmpsb
hlt
jno
or
pop
jae
lcall
mull
cmpsb
jb
test
out
addr16
mov
lcall
pop
call
popl
loop
imul
jns
dec
pop
fistps
data16
dec
adc
xchg
ret
mov
ljmp
push
push
call
inc
popa
pusha
push
xor
cmpsl
push
xor
sbb
mov
or
mov
es
mov
sub
loopne
push
or
stc
sti
sbbb
push
ja
add
lahf
icebp
outsl
sub
std
add
or
dec
dec
mov
jecxz
test
inc
adc
inc
mov
insl
pop
aas
push
stos
test
orl
pop
adcb
sub
jle
adc
add
mov
jnp
sub
fcoms
flds
dec
mov
mov
arpl
lea
fldenv
aam
sub
jecxz
xchg
jg
addb
push
mov
add
rcll
fldenv
dec
xor
nop
aaa
mul
repnz
xchg
inc
daa
push
fsub
adc
in
lock
subb
sbb
add
pop
and
in
pop
sarl
mov
pop
sbb
cmp
lds
nop
ret
lea
adc
sti
cmp
add
xchg
jmp
push
xchg
mov
loop
leave
adc
or
lods
sbb
repz
popf
inc
lret
iret
xchg
insl
and
loopne
out
pop
lock
sarb
mov
mov
jp
pop
push
popf
call
sbb
cwtl
fistpll
insl
dec
push
clc
sub
mov
ljmp
lret
stc
mov
xor
pop
xchg
jg
xchg
xor
sub
jge
jecxz
jnp
jns
cmpsb
fwait
xor
movsb
outsb
jbe
in
adc
lods
dec
mov
fdivrp
test
out
jb
fildll
lods
mov
lea
mov
sub
aam
outsl
mov
adc
cmp
jp
mov
loope
dec
je
jbe
loope
imul
xchg
pop
push
push
jge
imul
push
ret
sbb
jle
push
fimuls
cmp
aas
xchg
movsb
dec
mov
leave
imul
lods
adc
mov
pop
subl
pusha
aad
inc
hlt
ret
shll
stc
pop
std
cld
les
xchg
lcall
outsl
sbb
xchg
sti
mov
sbb
pop
into
inc
in
push
push
sbb
adc
repnz
sbb
call
fcompl
xchg
sti
in
and
mov
push
cmp
lahf
shrl
jo
sbb
call
rolb
or
int3
adc
pop
out
lock
jb
cmpsl
sti
pop
mov
and
pop
scas
in
fcompl
cmc
push
pop
or
enter
push
cmc
push
dec
cltd
je
fcoms
je
shrb
cmpsl
pushf
stos
test
xchg
mov
mov
insb
jp
inc
shrl
xlat
shrl
stos
and
sub
inc
jno
sahf
sub
pop
inc
sbb
xchg
jle
inc
hlt
xchg
jge
xor
mov
sub
or
jle
push
xchg
les
loope
dec
jl
add
mov
push
mov
fwait
rorb
jb
push
mov
inc
arpl
cmp
imul
test
or
pop
or
sub
mov
shll
push
insl
sub
jbe
incb
mov
fdiv
and
daa
push
jae
ljmp
clc
out
fdivrs
ja
cli
test
pop
test
mov
pop
sbb
jae
and
inc
ljmp
movntq
js
jle
adc
mov
pop
sti
gs
imul
scas
ret
ljmp
mov
xchg
sahf
insl
addr16
imul
pop
mov
push
jnp
sarb
push
push
ja
lea
mov
shrb
inc
in
call
test
inc
pop
ja
icebp
pop
shlb
shl
sbb
hlt
ret
jae
cmp
loop
mov
enter
sub
lret
hlt
push
cmp
iret
add
jge
add
sar
adc
popa
jbe
icebp
or
lahf
lret
mov
movsb
call
leave
ljmp
sbb
sbb
cmp
mov
mov
clc
mov
fldl
bnd
cli
mov
aad
jne
fchs
pushf
mov
loope
mov
pop
out
push
mov
add
xchg
vphaddubd
repnz
loopne
mov
or
push
mov
fldl
dec
clc
xchg
pop
pop
outsl
addr16
fbld
inc
xchg
jae
sbb
jbe
push
dec
pop
dec
rcll
roll
int3
outsl
lret
mov
testl
int3
nop
arpl
mov
dec
cmpb
xchg
dec
aas
or
jg
dec
mov
cmpsb
popa
int3
imul
cwtl
icebp
cld
inc
cmpsb
and
jmp
test
call
dec
adc
cmp
nop
pop
cmpsl
cmp
jp
stc
sub
mov
ret
sub
cmpsl
xchg
jmp
xchg
sbb
cwtl
cwtl
or
mov
lahf
mov
jg
mov
push
sarb
cmp
mov
jno
pop
pushf
mov
in
pop
rclb
add
cmp
sub
ret
pop
inc
jbe
cmp
test
aas
push
dec
mov
push
je
cmp
mov
jnp
jo
cmp
mov
pop
scas
mov
mov
mov
sbb
fnstenv
cwtl
mov
lcall
out
in
or
push
jecxz
insb
icebp
xor
shlb
mov
mov
push
and
jb
mov
xor
sbb
imul
xchg
and
xor
cs
cld
and
and
sbb
mov
adc
cmp
lea
mov
or
insb
add
push
sub
cwtl
lea
loopne
cmp
mov
int3
sahf
pop
int
push
mov
cmp
pop
mov
cltd
adc
imul
mov
cmp
roll
push
adc
cmc
out
add
inc
push
lret
fisttpl
insb
daa
mov
or
add
test
mov
and
enter
mov
push
and
js
adc
xor
dec
insb
ja
mov
idivl
cli
ljmp
ret
adc
push
cli
filds
push
call
leave
data16
test
add
mov
dec
fsubrl
add
adc
into
sub
ljmp
pop
dec
stos
xor
mov
insb
cmp
les
dec
sti
arpl
jmp
and
cld
es
xor
xor
sub
and
mov
iret
mov
cmp
mov
fcmovnb
add
and
hlt
mov
and
jmp
adc
add
imul
mov
aas
fistpll
jne
push
sahf
lahf
mov
jmp
dec
das
or
movsb
jne
cmp
aad
cmpsl
inc
lods
arpl
and
mov
mov
cmpsb
cwtl
adc
mov
test
xorl
jae
or
rcll
jge
adc
lods
inc
insl
divl
inc
cmp
mov
and
xor
inc
es
mov
adc
popa
icebp
cmp
dec
jge
cmp
sbb
popf
sbb
and
lods
mov
fbld
and
cli
inc
or
inc
mov
xlat
movsl
repnz
sbb
sbb
shlb
sub
mov
mov
fiadds
mov
in
rorb
xchg
stos
dec
test
jns
add
pop
mov
aaa
push
in
sarl
mov
pop
add
xor
fcmove
test
xor
lods
in
and
push
rcll
test
push
and
jo
mov
mov
shlb
xchg
xorb
xchg
and
xchg
mov
xor
adc
or
cmc
jmp
scas
ffree
xor
into
rcll
fcmovne
ret
sbbb
xchg
lret
xchg
mov
xchg
push
out
mov
add
dec
loop
dec
xchg
hlt
and
lret
sub
enter
imul
xor
jle,pt
into
mov
ja
sbb
mov
ret
push
insl
add
lret
jnp
aas
pop
fcoml
mov
cwtl
push
adc
pop
call
stc
sub
mov
cli
adc
insb
ret
gs
dec
mov
push
and
test
in
lods
mov
fabs
pop
or
jmp
cli
out
inc
mov
fs
sar
pop
mov
notb
ja
aad
dec
add
xor
add
out
push
push
adc
hlt
inc
xchg
iret
std
jge
divl
shrb
xchg
jecxz
repnz
mov
push
xchg
push
dec
fimull
inc
dec
add
sub
mov
add
mov
mov
xchg
pop
ficomps
and
dec
sti
icebp
cmp
or
cmp
xor
pop
int3
imul
adc
clc
inc
or
xchg
add
adc
and
int3
bound
jle
pop
cltd
aad
push
sbb
addr16
mov
mov
lods
das
data16
adc
out
mov
pop
icebp
int3
jmp
sub
sti
ds
or
paddusw
add
mov
or
push
jns
std
into
pop
sbb
in
out
adc
ret
mov
jg
cmpsl
xor
lods
daa
add
push
and
ret
lea
mov
add
mov
test
sbb
int
jmp
fdivrs
sub
dec
mov
xor
fbstp
xchg
adc
jbe
hlt
mov
and
mulb
xchg
xor
sbb
jnp
cmp
adc
sbb
inc
fists
add
push
test
cmc
sbb
or
popl
cmpsb
cwtl
lret
or
stos
enter
popa
cmp
sbb
negl
insb
or
cld
adcb
out
adc
xchg
mov
notl
inc
loopne
ret
out
gs
xor
faddl
push
mov
nop
ds
lods
popf
cmp
mov
jno
in
stos
jnp
out
js
movsl
add
pop
cltd
mov
mov
test
les
fidivs
pop
pop
xchg
mov
test
lods
sbb
ror
in
cltd
ret
scas
or
popf
call
jmp
cmp
add
je
test
pushl
or
int3
pop
sti
movsl
xorl
pop
js
ret
je
sub
adc
push
adc
cmp
js
pop
lods
lea
mov
jg
mov
movl
rcrl
or
popa
xchg
aaa
or
rclb
dec
mov
and
mov
or
cmp
adc
pop
cmp
sub
fstpt
lret
mov
xchg
inc
lret
inc
fldenv
in
mov
stos
lret
decb
pop
test
rol
sub
xor
les
into
jl
cmp
sub
and
xchg
in
jp
mov
inc
pop
jg
cmp
add
inc
inc
xchg
mov
pop
cs
cmp
outsb
sub
fldenv
inc
outsl
pop
std
jnp
js
xchg
inc
roll
aas
sahf
xor
cmc
dec
xorl
sub
xchg
lods
mov
sub
and
or
xchg
jmp
xor
ja
fwait
leave
and
repz
jg
inc
aas
mov
xor
xor
fwait
add
int3
subl
mov
lods
push
jmp
popf
inc
lods
xor
pop
mov
and
nop
mov
add
or
sti
mov
xor
adc
mov
movsl
insl
sar
sbb
fs
mov
fdivrs
xchg
push
and
ret
movsb
adc
repz
daa
out
push
mov
cmc
and
cwtl
test
orb
test
clc
and
mov
add
cmp
call
push
int
rclb
sbb
mov
and
iret
mov
cltd
pushf
mov
sti
ret
mov
jae
adc
pushf
movsb
pusha
push
lahf
ds
mov
or
add
cld
adc
xor
sbb
ss
es
loope
push
jo
mov
gs
pop
loopne
sbb
cmc
test
in
stos
sub
fadds
aas
movaps
cmp
popa
add
cmp
int3
mov
xchg
imul
out
xor
mov
adc
bt
jp
cmp
ja
pop
test
mov
dec
rol
dec
jmp
outsl
or
lahf
adc
rcll
cmp
clc
add
or
lods
pop
lock
sahf
xor
test
sub
les
icebp
repnz
push
rolb
or
add
std
and
repz
inc
and
dec
mov
insl
movsb
subl
ljmp
out
movsb
clc
stos
enter
inc
cmp
sub
mov
in
scas
imul
pop
popf
lea
ljmp
mov
and
data16
lret
or
stos
add
or
add
iret
jbe
ja
in
jno
jecxz
mov
xchg
popf
jecxz
inc
push
lods
xchg
xchg
mov
jne
xchg
mov
cmc
ljmp
or
fcomps
sbb
pop
lds
jbe
out
mov
sub
pop
adc
lahf
loop
pop
imul
int3
out
enter
in
es
idivb
in
out
sbb
adc
std
mov
add
push
adc
cwtl
aas
cmpsb
data16
outsl
jo
ja
push
pop
cli
pusha
xchg
aaa
or
mov
fdivl
pop
sub
add
mov
xchg
adc
xlat
adc
movsl
addb
enter
or
push
sarl
and
and
popf
xorb
popf
hlt
aaa
inc
sub
pop
adc
int3
jb
push
movsb
sbbb
aam
pop
mov
push
aaa
push
push
push
das
mov
mov
hlt
popa
aas
fmulp
test
in
ret
or
roll
pop
adc
adc
fadds
or
rol
ficompl
cmp
mov
push
addr16
outsl
into
xor
inc
mov
push
dec
mov
mov
sub
or
cmpsb
dec
out
ss
mov
mov
lcall
cmc
insb
push
sahf
out
or
cli
jg
adc
mov
cltd
ret
pushf
or
cmp
push
nop
push
movsl
add
dec
lcall
cmp
testb
sub
addr16
loop
or
dec
enter
icebp
dec
loope
inc
pop
add
push
mov
out
popa
scas
xchg
int
add
jg
mov
mov
pop
and
arpl
mov
mov
xchg
rolb
lods
imul
xchg
sub
fadd
mov
andb
add
adc
sub
outsb
mov
dec
aad
pop
test
rorl
lcall
jmp
mov
cmp
ret
add
mov
or
mov
push
into
jp
mov
outsl
aas
fs
jp
fdivrs
push
push
cmp
jmp
and
push
inc
roll
lds
fxch
lret
sbb
sub
dec
mov
hlt
mov
or
fadds
inc
adc
icebp
jp
jle
add
jb
mov
aam
cmpsb
add
sub
flds
outsl
mov
cmp
scas
loope
add
stos
mov
xchg
jmp
leave
movsl
rcr
lods
cmp
into
or
xchg
lea
pop
aam
mov
lret
adc
scas
andl
nop
dec
xchg
pop
xchg
pop
push
sbb
testl
pop
mov
xchg
sbb
pop
add
lret
xchg
inc
pusha
pusha
enter
test
sub
sub
xor
sub
inc
repnz
repz
lods
mov
aas
push
pushf
fsubs
aad
jecxz
and
lods
mov
push
fs
mov
in
or
mov
or
fs
mov
js
xchg
in
cmc
fwait
add
test
adc
iret
cmp
cwtl
lahf
or
pushf
cmc
dec
adc
jp
mov
ljmp
imul
mov
add
dec
mov
in
test
movsl
in
lods
or
push
repz
scas
push
inc
mov
mov
icebp
int
int3
push
je
jbe
xchg
inc
mov
pop
sarb
mov
cltd
xchg
adc
sahf
data16
xchg
push
jbe
ret
mov
das
pushf
in
cmp
std
xchg
ret
dec
xchg
mov
pop
mov
mov
sub
xor
push
ja
aas
lahf
fldcw
rclb
notb
pop
mov
adc
jo
aas
bound
out
adc
mov
push
mov
lret
jmp
les
adc
out
xchg
add
pop
mov
xchg
divb
out
popa
push
add
mov
mov
mov
sub
dec
repz
pop
in
jge
lods
fdivrs
inc
mov
adc
in
hlt
roll
fadds
lds
add
mov
repz
cmp
or
cwtl
pop
jbe
pop
cmp
sti
add
push
in
jl
icebp
and
mov
mov
lea
dec
hlt
pop
filds
cmp
mov
jl
push
cmp
cld
mov
add
push
push
stos
inc
js
lock
fisubrl
fdiv
jle
xor
push
adc
fwait
xor
cmp
inc
lea
stc
data16
mov
jb
ljmp
les
push
adcl
push
mov
ss
mov
sub
cmpsb
sbb
call
dec
test
popf
popa
leave
sub
xlat
in
or
or
inc
out
and
fildll
jg
dec
int
clc
push
cmpsl
mov
xchg
mov
pop
mov
xchg
ja
add
divl
sub
imul
loop
outsb
jo
mov
decb
out
cli
push
or
clc
nop
call
push
push
push
mov
int3
fisubrl
das
xchg
mov
adc
in
jle
addr16
cmpsb
jb
xchg
rorl
jg
push
out
rcrb
jo
adc
fidivrl
jg
test
clc
clc
je
enter
sbb
dec
scas
pop
pusha
mov
iret
fdiv
ret
cmp
mov
pop
repz
pop
enter
rcrl
cmp
lods
and
int3
adc
sti
mov
lods
cmovno
mov
inc
aad
and
cmp
or
std
loope
sbb
bound
push
cmc
mov
loopne
cmp
out
mov
shrb
pop
and
jmp
push
dec
push
dec
aad
dec
mov
push
xor
int3
mov
data16
xchg
ds
jo
dec
cmp
pop
mov
jo
jecxz
sub
lds
mov
cli
mov
fs
test
cwtl
fucomi
push
pop
mov
and
ffree
adc
movsb
sbb
imul
rclb
dec
pop
or
in
mov
in
call
fisubs
pop
imul
icebp
sbb
sub
fwait
das
scas
outsl
jge
icebp
mov
sub
test
ljmp
cmc
das
orl
sbb
cmp
ja
clc
or
sbb
popl
icebp
mov
leave
sub
std
roll
dec
test
sbb
iret
jno
adc
aad
negl
hlt
cmpsl
push
mov
std
pop
cmp
pop
ljmp
aad
inc
push
xchg
xchg
mov
dec
lret
dec
add
out
lock
rolb
jne
fldt
mov
inc
pop
shr
sti
repnz
loope
shr
dec
or
inc
mov
loopne
mov
mov
test
fstl
lods
adc
out
xchg
jno
sub
push
mov
or
movsl
je
jb
data16
pop
mov
rcrl
dec
fmull
mov
adc
lret
pushl
inc
lahf
push
scas
fs
xchg
outsl
movsb
jg
pinsrw
das
in
hlt
iret
add
adc
and
xor
inc
lahf
push
scas
fs
xchg
outsl
movsb
jg
pinsrw
das
in
hlt
iret
add
adc
and
xor
inc
lahf
push
scas
fs
xchg
imul
das
in
hlt
sti
add
adc
and
xor
inc
lahf
push
das
fs
je
test
ret
js
xchg
sub
sbb
or
std
xchg
in
mov
add
xchg
lea
dec
adc
xor
cmp
jno
cmp
mov
sarl
stc
add
insl
inc
pop
xor
dec
push
das
popa
sbb
xchg
hlt
mov
movsb
shll
add
dec
inc
and
cmp
jb
pop
inc
outsl
push
mov
popf
in
mov
icebp
insb
sbb
bound
pop
pusha
dec
dec
ss
je
std
sbb
aam
lock
ror
pop
imul
je
out
xchg
js
mov
jae
in
mov
add
nop
xchg
ss
xchg
test
add
insl
ja
into
mov
cwtl
xchg
xchg
loop
xor
inc
mov
pop
sahf
sarl
or
popf
xlat
xchg
and
add
jl
outsb
adc
and
loope
icebp
in
andl
aas
cmp
jns
xchg
cltd
sub
sbb
sbb
pop
push
mov
push
int
pop
jo
fsubrp
xchg
std
mov
mov
icebp
xchg
add
jne
inc
xor
push
xor
cmc
std
aad
int
ljmp
cmpsb
icebp
xchg
call
dec
pop
push
sub
jb
popa
ficoms
mov
loope
mov
pop
cmp
dec
and
idiv
mov
mov
popf
icebp
lea
jge
insl
and
dec
inc
cmp
jno
cmp
mov
sarl
lea
jge
insl
and
dec
inc
cmp
jno
cmp
jecxz
mov
fidivl
xchg
push
add
xchg
mov
int3
push
out
jg
aad
imul
data16
mov
stos
lret
in
rclb
or
and
fwait
shll
or
xlat
testb
icebp
nop
mov
rcl
mov
ja
cmc
push
ds
ljmp
jmp
add
jae
movsl
adc
pop
jo
dec
inc
aam
dec
mov
dec
das
mov
mov
mov
sub
or
xchg
out
dec
fnstenv
sub
insl
popf
xor
scas
sub
loopne
aam
gs
popa
out
jmp
dec
int3
jl
insb
loop
xorb
fsubrl
mov
jl
adc
jle
and
sarl
mov
popa
pop
hlt
jns
sbb
test
push
mov
lahf
fimull
mov
add
xchg
fmul
mov
add
or
sbb
int3
movsb
out
dec
push
test
jae
lea
out
orl
mov
scas
pop
imul
sbb
pop
call
dec
loopne
push
dec
add
mov
or
adc
mov
mov
adc
inc
jb
xlat
lods
sbb
cmpsl
mov
push
lret
cld
cli
out
leave
fwait
popa
dec
inc
or
jno
mov
inc
push
popl
mov
xlat
pop
pop
pop
enter
pop
xor
add
inc
mov
je
fldln2
jno
xlat
mov
pushf
mov
mov
insb
fildl
test
push
fcoml
cmc
stos
lret
out
push
dec
mov
scas
std
push
popf
das
xor
loope
fnstcw
dec
mov
pop
adc
out
sub
in
into
mov
mov
cs
push
dec
adc
leave
scas
lock
ret
ja
jmp
lock
int3
scas
jp
inc
sub
sbb
loope
add
popl
rcrl
xor
call
out
aaa
mov
xchg
and
mov
int
stos
adc
stos
mov
icebp
and
pop
xchg
lret
dec
sbb
mov
mov
add
push
xlat
dec
aam
lret
add
push
inc
icebp
aas
mov
jmp
xchg
gs
mov
insb
cmp
stc
xor
xchg
shlb
lret
cmp
and
pop
pop
pop
iret
rclb
rol
cmpsb
pop
and
or
pop
inc
dec
stos
xor
mov
dec
cs
jae
and
loopne
fs
sub
mov
lahf
adc
rorl
sbb
pop
fucom
mov
push
jecxz
xlat
mov
addr16
push
or
in
lahf
jns
lods
sbbb
sahf
adc
loop
sub
adc
int3
jb
loopne
jae
push
aam
mov
pop
outsb
xor
subb
les
inc
popa
push
daa
jecxz
mov
sti
fstpl
out
cmp
and
sti
adc
cmp
filds
jne
setnp
pop
sub
sbb
lds
das
pop
bound
out
dec
repz
add
loope
push
jns
push
andl
jns
in
cmp
pop
subb
aaa
cmp
dec
std
and
es
divb
sbb
aas
repz
cmpsl
add
jo
xchg
xchg
lods
ss
call
jnp
dec
repz
xchg
mov
stos
inc
push
mov
cmc
dec
mov
pop
xlat
push
jp
push
clc
jns
aas
push
dec
adc
mov
imul
scas
mov
fincstp
jbe
lcall
jmp
leave
test
push
lods
mov
in
mov
ror
cmpb
mov
arpl
jp
mov
xor
inc
addr16
mov
mov
sub
or
rol
mov
pop
ljmp
imull
mov
movsl
push
xor
sub
mov
test
fdivr
adcl
ret
in
loope
fistps
pop
sbb
out
gs
popf
jge
leave
jge
push
sti
imul
adc
inc
mov
imul
mov
mov
mov
mov
data16
shr
rorl
jno
pop
sbb
sub
add
mov
outsl
cmp
cwtl
sub
fimuls
xor
les
cmp
jae
ss
sub
and
pop
sbb
inc
push
xchg
sub
push
fld
stos
pusha
dec
nop
out
xchg
out
cltd
and
lea
rclb
mov
insb
sbb
sub
mov
jl
push
mov
clc
mov
xchg
xchg
fisubs
popf
xor
adc
scas
fisubs
xchg
dec
js
call
enter
xchg
inc
jno
aaa
pop
pusha
pop
insl
mov
test
sbb
test
test
xchg
loop
pop
mov
or
push
dec
xchg
ret
xchg
xchg
cmpsl
xchg
pop
sahf
movlps
iret
cmp
mov
xchg
pop
cmp
cwtl
jb
jne
push
cltd
ljmp
and
and
add
add
cmp
loopne
leave
icebp
jmp
mov
mov
inc
fimull
sbb
jo
mov
daa
or
mov
or
inc
in
imul
pop
xchg
or
das
int
sbb
lret
lods
xchg
loop
xor
rcll
xchg
jo
add
add
pop
lock
dec
data16
fiadds
mov
aam
adc
pop
fs
outsb
flds
je
jae
stc
cltd
sarl
aas
inc
out
call
xchg
xor
hlt
int3
ljmp
arpl
subl
rorl
cs
movsl
or
loope
rolb
rclb
mov
xchg
jle
mov
or
stc
jns
arpl
mov
test
dec
addr16
xor
cmc
ja
dec
mov
insb
loopne
jbe
roll
mov
cwtl
pop
push
test
mov
outsl
popf
cltd
push
pop
icebp
cmpsl
leave
pushf
movsb
lds
push
rclb
sub
xchg
or
movsl
das
mov
push
push
loopne
outsb
out
jp
imul
push
push
push
sub
leave
je
fstps
in
push
and
pusha
stc
popa
push
cmpl
pop
and
or
sahf
loope
mov
dec
int
push
aad
repnz
and
push
jnp
sti
push
xor
sbb
cwtl
mov
or
lcall
or
mov
pop
scas
imul
ss
mov
and
jmp
mov
stc
stos
lods
nop
and
pop
leave
mov
lds
into
cli
repz
mov
mov
cmpsb
xchg
aam
mov
jne
xchg
out
mov
jge
sub
rorb
add
pop
imul
mov
mov
aam
push
add
adc
movsl
cmp
xor
adc
cmpb
subb
mov
pop
pop
ljmp
mov
mov
stos
xorb
lahf
lcall
mov
cli
imul
icebp
stos
inc
sub
orl
xchg
sti
test
movsl
mov
cmpsb
dec
adc
xor
mov
shll
jnp
gs
xchg
pushf
lods
push
aam
fisubs
mov
out
lods
jnp
add
jecxz
or
pop
dec
js
leave
pusha
dec
std
add
sub
push
mov
pushf
es
mov
cwtl
sahf
sub
mov
inc
ljmp
fsubl
sub
les
jge
jge
lret
cltd
adc
je
adc
xor
xchg
adc
inc
in
mov
cmp
cmc
rol
xor
daa
arpl
fisttps
mov
sar
sub
inc
gs
stos
adc
das
testb
or
rolb
cli
lahf
sbb
mov
inc
jge
inc
mov
mov
lods
xchg
and
daa
ret
push
das
and
pop
movsb
sbb
int
mov
fcmovbe
sbb
inc
jo
cmp
aad
scas
mov
gs
or
sarb
inc
shlb
push
ret
sbb
fwait
out
adc
cmc
cmpb
adcl
cmp
push
dec
shlb
inc
and
ret
lret
lock
mov
push
cmp
fs
mov
sub
add
out
pop
addl
mov
sub
int3
sbb
dec
int3
in
xor
cltd
xorl
cld
out
outsl
daa
movsl
push
cmp
cwtl
fcompl
loope
cmp
ja
faddl
mov
lods
out
xor
jg
mov
test
in
add
addr16
popf
mov
into
ret
shl
fistps
ljmp
xchg
cmp
and
sbb
and
jmp
insl
cmp
jle
sbb
sub
sub
push
movsb
adc
or
test
rclb
insb
aas
popf
jg
sub
sbb
shrl
push
aad
push
xchg
insl
sbb
mov
adc
cmpsl
sarl
cmpsb
cmp
jb
das
daa
rcr
lret
lahf
adc
jnp
xchg
mov
adc
test
jl
pop
popf
or
mov
std
sub
test
repz
and
or
fdivr
ljmp
mov
lods
outsl
lahf
inc
push
push
mov
cmpsb
push
pop
fiaddl
cmp
pop
inc
cmp
sbbb
pop
xchg
fs
test
dec
loop
iret
stos
mov
pusha
dec
mov
test
add
sarb
stc
stos
xchg
mov
adc
loop
mov
jns
nop
out
test
fbld
lods
in
mov
jmp
lahf
push
sbb
pop
out
call
je
icebp
lods
and
xchg
mov
pop
je
les
or
sbb
add
cmpsl
imul
add
lret
and
mov
dec
ficoms
inc
movsb
sub
mov
sahf
adc
imul
ficompl
or
ficoms
jle
fmull
bound
pusha
adc
aaa
dec
lods
pop
and
lret
pop
jno
icebp
and
movsb
pusha
lds
adc
adc
sbb
aad
std
mov
jne
mov
ds
dec
lcall
nop
in
enter
cmc
daa
test
leave
clc
pop
mov
xlat
sarl
pop
mov
out
insl
pop
cli
shl
sbb
repz
jbe
ljmp
decl
idivl
jnp
stc
jbe
outsl
mov
fiaddl
lahf
int
adc
inc
jl
add
das
dec
fidivrs
jg
and
mov
push
and
mov
sbb
clc
out
cmp
test
cmp
and
rol
lods
movsl
ret
lret
fcoms
iret
and
imul
pushf
hlt
mov
sub
and
lds
fsts
das
xor
sub
or
stc
push
in
mov
xchg
movsl
jle
loope
cmp
leave
cmp
sub
adc
in
es
xor
or
bound
cmp
testl
or
cmp
xchg
xchg
jle
jnp
and
cltd
push
push
fmull
push
xchg
fnstsw
lock
push
sub
in
and
loope
adc
xchg
inc
sub
cmp
mov
push
mov
xchg
or
repnz
shll
pop
pushf
outsl
movsb
pop
pop
rorl
in
popf
sub
fsubr
and
sub
repnz
movsl
xor
outsl
imul
jmp
mov
cmpsb
shl
loop
lea
ret
scas
ret
push
xchg
outsb
jno
sub
lcall
daa
mov
insb
stc
pop
arpl
sahf
pushf
mov
lcall
dec
mov
loopne
cmp
add
enter
hlt
ficoms
pop
push
ja
mov
sahf
jae
push
add
push
sbb
ds
sub
dec
xor
hlt
xor
fsubrs
ja
xlat
xchg
push
add
sbb
insb
out
iret
xor
jbe
sbb
loopne
sub
je
sbb
icebp
dec
je
cmp
mov
jmp
inc
imul
xchg
lock
leave
adc
daa
sub
ss
add
sub
subl
shlb
fs
jp
jle,pt
and
nop
jb
icebp
sbb
push
and
lock
in
rolb
lcall
xor
loopne
pop
dec
jne
inc
and
lcall
push
ja
lret
mov
inc
cmp
iret
nop
jle
lcall
mov
pop
mov
lret
aas
pop
scas
adc
push
leave
dec
js
inc
adc
and
mov
aas
mov
and
and
jmp
out
rcr
nop
cmpsl
insl
mov
pusha
jnp
mov
adc
aaa
lods
fsubrl
inc
mul
or
mov
xor
lahf
and
dec
mov
jo
aam
mov
in
ljmp
mov
mov
stc
xchg
sub
lcall
fcoms
sub
cmp
pop
stc
mov
sub
xchg
outsl
and
and
adc
cs
fbstp
int3
jnp
mov
leave
sub
push
inc
lcall
jg
repz
call
fisubl
jg
clc
push
fs
sub
jno
mov
cld
dec
lods
jo
aam
or
jb
xchg
mov
sbb
add
jl
scas
push
push
arpl
sub
stos
xchg
lods
mov
cs
jne
fwait
or
xlat
sbb
cli
lods
lods
fcoms
cwtl
add
or
xchg
mov
mov
mov
push
mov
or
pop
mov
out
in
loop
cld
insl
or
xchg
push
mov
jecxz
addr16
rolb
mov
test
nop
es
xlat
leave
test
pop
in
loopne
jle
loop
scas
icebp
dec
or
rorb
loope
mov
mov
sti
sti
sub
mov
xchg
or
or
push
data16
push
jp
push
dec
js
addr16
ret
cltd
in
insb
aam
out
mov
push
adc
lock
mov
sub
and
ss
pop
mov
mov
cmp
fcmovnb
pop
sbb
dec
push
adc
jge
sbb
leave
rclb
rcl
ud2
imul
push
fsts
pop
and
dec
popa
inc
iret
pop
ss
andl
enter
lods
pop
dec
adc
jge
addr16
addr16
cmp
nop
pop
ret
fcoms
in
jae
popa
mull
push
inc
jne
js
dec
pop
or
fisubl
xor
mov
mov
jae
dec
xchg
les
scas
int3
cs
mov
mov
cmp
cmp
dec
or
cmp
mov
mov
jo
mov
and
mov
push
int3
bound
nop
std
pop
repz
push
or
lods
pop
sub
and
mov
cmp
push
mov
dec
ljmp
sbb
leave
pop
shrl
mov
in
and
jae
sbb
leave
cwtl
aam
jo
sti
ret
push
pop
bound
roll
call
fisttpl
and
dec
jecxz
add
fs
out
rclb
fwait
adc
out
mov
xorl
in
aas
jno
pop
mov
lcall
scas
stos
pop
filds
scas
repz
leave
mov
cmc
mov
psubq
mov
stos
ja
in
inc
leave
pop
aam
mov
adc
pop
cmp
mov
xchg
add
xchg
sub
cs
pusha
or
incl
test
cld
js
jl
scas
lret
ljmp
cmp
fadds
xchg
out
int3
add
inc
xchg
mov
insb
sub
lret
cmp
mov
jbe
arpl
pop
outsb
xchg
imul
rclb
mov
mov
bound
into
pop
dec
push
clc
dec
or
ret
stc
cmc
mov
xchg
xor
adc
dec
xlat
and
jl
jmp
test
dec
sbb
iret
cmp
in
jns
xorb
daa
cmp
ljmp
jnp
call
pop
sbbl
out
push
pop
sbb
fstpt
mov
cmp
cmp
sub
pop
lods
jb
nop
imul
push
lock
aas
lea
jae
sti
push
aas
push
imul
outsb
pop
aaa
sub
or
push
lods
iret
push
lret
subb
dec
dec
scas
inc
mov
test
cmp
cld
addr16
jmp
aas
pop
or
addb
out
psraw
jle
rorb
xor
pop
sub
popf
sbb
popa
rcll
inc
insb
imul
bound
or
cmp
icebp
fbld
outsl
movsb
js
cld
pop
mov
pop
out
int
loop
mov
mov
out
and
push
mov
cmp
mov
les
push
lods
xchg
mov
inc
fwait
jp
das
out
xor
sbb
rorl
add
sub
sub
sbb
xchg
aam
push
mov
lea
sub
idiv
inc
sub
es
xor
xchg
cmp
push
jecxz
dec
cmp
and
ljmp
mov
lret
mull
or
adc
sbb
in
xor
into
outsb
loopne
popf
push
cs
loope
loope
push
mov
outsl
jnp
in
out
ja
fadds
stc
stos
jl
sub
jge
xchg
sub
cmpsb
mov
sbb
fdivrp
dec
sub
das
repz
loope
insb
xchg
adc
je
jle
scas
in
cmp
imul
testb
mov
aaa
faddl
sub
stos
cmc
ret
jg
inc
mov
gs
dec
xchg
in
ret
f2xm1
pop
xor
sbb
fnstcw
mov
add
mov
sub
lods
and
jb
mov
mov
in
sbb
mov
mov
loope
push
mov
mov
movsb
add
sbb
stos
loopne
pop
jae
inc
into
cmp
adc
nop
dec
into
adc
cmp
add
aas
bnd
pop
pop
ret
cmc
mov
shll
popf
outsl
movb
int
sbb
or
loop
dec
add
sti
add
add
loop
pop
jle
cmp
and
leave
lcall
cmpl
dec
or
adc
fsubrl
or
push
ror
mov
ret
stos
sbb
mov
mov
inc
aaa
add
adc
xor
cs
mov
push
pop
xor
mov
xchg
xor
mov
dec
mov
jnp
push
dec
cmpsl
lods
into
mov
xor
sahf
adc
or
bound
jmp
stos
iret
in
or
jmp
xchg
inc
loope
mov
or
fsubrl
negb
add
lcall
mov
pusha
repnz
call
ds
popf
mov
rorb
mov
xchg
pop
test
jnp
in
and
xchg
aaa
xor
xchg
jo
mov
mov
xlat
imul
cltd
add
cmp
push
outsb
stos
imul
mov
cli
mov
jp
ljmp
lret
rcll
cmpsl
lds
mov
popa
popa
mov
outsl
jp
mov
out
dec
mov
dec
pusha
dec
lcall
sbb
sbb
xchg
jmp
out
inc
mov
xor
lcall
fidivrs
imul
scas
xlat
mov
mov
scas
test
mov
lods
in
adc
call
aam
xchg
adc
pop
cs
jl
push
sti
test
lods
insl
jg
pop
sub
sub
sbb
jle
mov
sbb
fldt
add
inc
pop
test
nop
and
cmc
inc
dec
cmpsb
into
imul
pop
insb
and
adc
xchg
jg
ss
push
xchg
push
or
shlb
jo
and
test
adcb
in
dec
cmp
aad
sub
xchg
xor
sbb
inc
mov
sub
sbb
icebp
pop
dec
adc
pop
xchg
sbb
mov
adc
pop
hlt
xchg
aas
icebp
adc
dec
mov
and
pop
movsb
shr
push
loope
fwait
sahf
popw
cli
das
push
xlat
movsl
cmp
add
mov
xor
mov
mov
xlat
aas
xorl
mov
lods
add
je
mov
mov
inc
fdivrs
sbb
push
xor
cmpsb
xchg
aad
fwait
inc
fisubs
jg
cli
leave
loopne
stos
jno
test
cmpsb
test
stos
mov
stos
jecxz
stc
dec
sahf
js
repz
inc
sbb
xor
movsl
cmp
flds
mov
popf
fsubl
adc
jmp
inc
movsl
mov
int3
xchg
push
mov
movsl
adc
loope
sbb
lcall
xchg
xor
fldenv
cld
fsubr
test
imul
jns
inc
daa
and
add
dec
mov
fnsave
lods
loope
icebp
lea
jge
insl
and
dec
inc
cmp
jno
cmp
mov
sarl
lea
jge
insl
and
dec
inc
cmp
jno
cmp
mov
sarl
lea
jge
insl
and
dec
inc
cmp
jo
cmp
jmp
sarl
dec
add
mov
cmp
mov
push
sahf
bound
pop
inc
push
cli
ljmp
cmp
lret
ljmp
xchg
ja
inc
push
jp
or
xchg
pop
sub
dec
out
idiv
ljmp
xchg
xchg
mov
inc
ret
daa
ss
es
les
and
adc
xlat
mov
fdivrp
mov
inc
pop
cmp
out
cmp
out
loop
leave
cmp
sub
mov
out
xchg
in
sar
sbb
test
fmuls
aaa
out
push
js
out
jb
cmp
mov
shrb
jg
inc
jo
push
lods
pop
inc
and
mov
ja
stos
lret
push
stos
mov
sub
or
jb
rcll
lds
jb
cmp
mov
gs
mov
mov
cmp
pop
test
push
cmp
cltd
mov
cli
hlt
xlat
mov
mov
test
inc
in
lds
mov
pop
mov
adc
cmp
stos
pop
ds
dec
ja
inc
out
push
jo
or
sbb
lock
mov
cli
xlat
mov
cmpsb
mov
xchg
add
sub
push
daa
jle
jne
inc
adc
lahf
sahf
scas
xchg
cmpsb
in
out
in
rcr
add
adc
and
cmp
gs
jg
inc
push
subb
popf
cmpsb
fcmovu
jmp
loop
add
sbb
imul
pop
sub
cmp
lret
ljmp
xchg
ja
inc
push
jp
or
sbb
sub
cmp
lret
ljmp
xchg
push
fcmove
js
fsts
loopne
nop
or
mov
mov
push
and
mov
pushf
loop
aam
sarl
mov
cltd
push
lahf
pop
loope
es
pop
lods
adc
mov
cmp
jmp
mov
ja
nop
jp
insb
mov
jl
dec
shlb
dec
cmp
push
and
cltd
jg
dec
jmp
int
push
xor
xchg
sbb
jecxz
dec
adc
pop
sub
mov
cwtl
fwait
push
push
call
cmp
mov
jl
shrb
or
lock
addl
test
lcall
and
rcl
flds
ror
lock
mov
testl
fcoms
leave
aad
pop
xchg
inc
sub
adc
push
idivl
sbb
lret
xchg
jg
stos
jae
js
adc
insl
mov
ret
adc
movl
xor
jmp
shlb
inc
fbld
push
inc
mov
mov
inc
shrl
and
xor
insb
jno
push
xchg
or
and
xchg
jno
fs
aam
push
mov
arpl
and
dec
mov
jne
sbb
rorl
inc
sbb
lods
cltd
testl
icebp
addr16
leave
insl
sarb
dec
lock
xor
adc
add
ret
mov
pop
into
push
repnz
sub
sarl
in
shl
es
mov
inc
xor
fadd
mov
popa
pop
sub
popa
cltd
pop
sub
inc
push
sbb
push
mov
jecxz
ja
mov
lods
mov
inc
mov
jbe
dec
sub
int3
or
sbb
xchg
ret
int3
jb
cltd
and
mov
shl
mov
dec
ds
mov
cmp
jb
shll
negl
sub
cli
inc
xor
lods
mov
sbb
xor
and
ficoms
inc
xchg
xor
fstpt
loopne
jecxz
jl
inc
insb
repnz
std
xor
iret
call
sbb
add
adc
xchg
lods
jb
div
inc
aaa
out
int
mov
aad
cmpsb
push
xchg
ds
js
in
cmc
rdpmc
jg
dec
dec
div
xchg
mov
sbbl
pop
xchg
std
inc
cwtl
test
xor
xchg
fs
jo
xchg
jbe
adc
fwait
rcrb
cmpsl
insb
nop
pop
sti
rcr
ss
mov
mov
push
rolb
or
sbb
pop
lcall
fwait
pop
fucomip
cwtl
mov
mov
mov
ja
leave
movsb
loop
subl
shll
mov
pushf
int
sub
pop
pop
push
cmp
sub
sbb
movsb
outsl
add
sbb
xor
and
addl
jl
cmp
in
cmp
push
in
out
mov
jmp
test
movsl
data16
jg
jl
aas
mov
pop
jnp
aad
pop
inc
mov
mulb
push
int3
cs
fsubl
mov
and
negb
xchg
int
sub
int3
push
jo
mov
mov
cmpsl
pop
lods
sbb
mov
testl
or
inc
test
fcmovnb
in
pop
xchg
xor
mov
push
dec
fmull
inc
cmc
mov
add
outsb
sbb
mov
daa
leave
pop
cmp
movsl
mov
cmp
xor
rorl
lock
fiaddl
pop
or
leave
clc
sti
lahf
pop
xchg
test
stos
popa
cmc
daa
sarb
ror
fisubrs
jb
push
out
adc
jbe
dec
mov
or
lcall
or
cmp
xchg
lock
or
das
jmp
push
sarl
push
sub
cltd
jp
add
pushf
sub
lea
dec
xor
dec
cmp
mov
mov
cli
rcl
std
inc
loop
loope
xchg
movsb
icebp
jns
dec
pop
fwait
push
jnp
dec
cmp
sub
lahf
jge
lock
gs
cs
in
xchg
cmpsl
or
enter
add
pop
loopne
popf
in
jo
nop
sahf
push
cmp
sub
outsb
add
mov
push
push
js
mov
cwtl
xor
and
sub
jl
mov
fs
pop
or
dec
xchg
fbstp
jo
mov
jnp
fistps
fsubl
lea
lahf
sub
pop
lret
add
ja
pop
xchg
insl
lock
mov
bnd
mov
jp
insl
jg
inc
mov
dec
call
xchg
adc
xchg
xchg
cmp
pop
xor
pop
sbb
inc
add
ds
and
dec
test
sbb
jmp
ds
subb
cmpsb
insl
test
pop
inc
scas
jb
loope
add
push
mull
cltd
stc
ret
sbb
out
add
les
add
mov
fnstcw
cmp
sahf
lea
int
out
xor
divl
dec
rcrl
lret
cmpsb
or
add
scas
sarl
adcl
pushf
add
dec
les
push
ljmp
int
mov
adc
scas
jne
xchg
scas
inc
adc
loopne
xorb
xchg
xchg
outsb
or
add
adc
movsb
pop
in
xchg
scas
dec
aam
popf
or
ret
xchg
test
sbb
cmpsl
xchg
popf
jnp
pop
stos
sbb
mov
stos
or
dec
inc
jns
push
pusha
xor
sti
sbb
add
and
jge
insb
lret
adc
jge
or
iret
stc
jle
out
mov
jo
cmp
lret
sbb
rorb
fisubrl
jns
push
sti
arpl
pop
out
sahf
les
call
pop
pop
stc
pop
popa
or
out
dec
push
lds
jne
mov
stos
add
add
lods
sbb
cld
lock
push
lods
mov
xchg
cs
outsl
lcall
icebp
add
sbb
imul
inc
out
inc
loope
mov
pop
or
xchg
or
leave
and
pop
mov
daa
call
push
das
sbb
pop
xor
fnstcw
xor
jp
sub
cmpsb
fwait
gs
xor
sahf
rol
mov
mov
mov
xor
arpl
lret
fistl
inc
jae
ret
xchg
push
mov
jecxz
int3
cld
jbe
call
fildll
adc
jg
adc
push
xor
pop
scas
sti
sub
sbb
int3
mov
xchg
or
frstpm(287
addr16
adc
push
sbb
mov
cmp
mov
xor
lods
outsb
ret
push
and
inc
roll
lock
fmul
cltd
imul
in
xchg
rcr
enter
icebp
lcall
adc
std
mov
les
inc
push
and
int3
cmpsl
testb
xchg
fsubrs
fstl
mov
dec
dec
sbb
jecxz
shrl
xchg
cs
xchg
jmp
jb
mov
lahf
lea
mov
int
cmp
mov
data16
pushf
mov
nop
dec
pushl
lods
jmp
xor
jno
lods
cld
aad
cli
jae
push
sbb
cmp
outsb
pop
dec
ja
mov
out
sbb
loop
in
out
sbb
icebp
inc
dec
sub
pop
fnstcw
mov
into
pushf
mov
mov
mov
daa
ds
fnstenv
or
jbe
or
movb
add
test
mov
test
cli
outsb
ja
sub
icebp
stos
iret
test
mov
fs
pop
imul
xor
adc
mov
push
push
out
push
cltd
lretw
dec
mov
cwtl
call
inc
xchg
movsb
enter
inc
in
mov
mov
ret
cli
nop
cmpl
adc
lea
or
arpl
imul
push
cmp
scas
in
fdivrs
jnp
leave
inc
adc
hlt
mov
jle
pusha
setno
xchg
cmp
mov
mov
sub
dec
xchg
mov
inc
outsl
testl
fstpl
arpl
mov
fmulp
cld
mov
ret
push
pop
add
repz
das
dec
mov
stos
xchg
xchg
fadd
sub
add
cmpb
mov
in
cmp
lret
int3
popf
mov
cmc
data16
fcoms
sbb
sbb
adc
inc
incl
test
push
sub
mov
outsb
sbb
test
ds
fstpt
xor
aas
cwtl
dec
insl
sub
add
cli
push
push
mov
pop
add
mov
lret
clc
add
enter
cmpsb
cmp
pop
sub
add
mov
adc
andl
lds
add
inc
and
pop
or
mov
add
lock
gs
inc
lods
cltd
and
pop
push
adc
sub
push
mov
scas
push
loope
insb
add
lcall
mov
cld
idivl
jbe
pop
xchg
mov
psubusb
cli
out
in
mov
inc
push
or
xchg
mov
insl
out
hlt
ffreep
aad
sahf
les
es
push
xor
popa
pop
push
cmpsl
cmp
adc
sti
push
xor
add
push
lret
int
test
sub
sbb
imull
gs
sub
popa
bound
jecxz
xchg
inc
cmp
ljmp
mov
outsb
cmpsb
cmp
sbb
mov
xchg
scas
fnsave
iret
decb
cmp
pop
push
mov
aam
fs
mov
xchg
lahf
adc
mov
mov
ret
pop
js
sub
or
push
cmc
rcr
mov
mov
fstl
cmpsb
inc
gs
popa
push
xor
push
pop
xchg
xchg
or
push
out
fldt
sbbb
xchg
add
xor
inc
lock
xor
pop
int
clc
in
mov
jp
dec
add
outsb
adc
xchg
push
or
sub
sbb
data16
call
xor
sub
push
ficoms
aad
cmc
inc
bndldx
pop
push
pop
adc
rcrb
push
insl
jmp
adc
pop
out
test
mov
repz
cwtl
icebp
jno
scas
loop
cmp
and
test
test
dec
xor
pop
mov
sub
aad
jnp
je
dec
add
jns
xchg
enter
adcb
pusha
fdivrl
mov
mov
pop
dec
faddl
mov
sahf
mull
fs
stos
add
add
and
imul
add
inc
loope
jne
jge
lret
cmpsb
xchg
out
mov
sub
mov
shrb
xor
ljmp
fs
push
loope
test
mov
sbb
imul
xchg
rep
add
sub
mov
mov
lods
and
out
inc
or
stc
mov
sub
mov
sbb
adc
jmp
mov
pop
iret
cld
inc
divl
ret
cltd
icebp
notl
jnp
in
sarl
cmc
shrb
mov
add
mov
sbb
ss
inc
aas
insl
ds
jg
dec
inc
and
dec
imulb
cmp
pop
dec
mov
hlt
divl
mov
push
fisubs
dec
ss
lret
cs
jbe
fistpl
adc
ss
mov
lds
fdivrl
xlat
cmp
hlt
mov
or
adc
jmp
clc
lcall
jecxz
cmp
daa
xchg
lret
scas
insb
lahf
push
lret
iret
fdivl
mov
js
and
and
xor
or
inc
lcall
das
mov
pushf
inc
add
sub
aam
cmp
dec
leave
test
es
dec
rcr
rorl
loopne
outsl
pop
movsl
dec
cmp
ljmp
leave
fcmove
lds
lods
adc
ja
mov
gs
inc
mov
loope
dec
xchg
mov
insb
mov
jbe
inc
push
jg
aas
xchg
push
data16
push
aam
push
ds
cmpl
dec
in
cmp
int3
in
enter
rorb
add
inc
addr16
and
or
push
mov
sti
ficoml
iret
std
movsl
dec
dec
movsl
cmc
cmp
popa
adc
lea
sub
out
lods
pop
cmp
cwtl
push
fcmovnb
and
jbe
stc
add
loopne
adc
dec
adc
out
cmp
test
dec
sbb
mov
scas
push
push
add
idivb
xchg
sbbb
pop
imul
jg
int3
dec
adc
int
loopne
outsl
inc
push
adc
lcall
fcmovbe
add
lods
jbe
cmp
sbb
cmpsl
je
dec
test
ss
gs
data16
dec
mov
lcall
in
out
sub
adc
push
cmp
shrb
mov
add
hlt
ret
sahf
xchg
aas
inc
stos
cmpsl
mov
into
sbb
cmp
dec
wrmsr
push
mov
lret
cmpsl
loop,pn
adc
rcrl
out
insb
movsl
sub
in
sbb
and
jne
mov
inc
push
popl
stos
mov
nop
movsl
push
xchg
xchg
fildl
push
sbb
push
xlat
pushf
push
stos
testl
fnstenv
cmp
test
stc
mov
les
int
fldt
jmp
arpl
push
inc
inc
mov
pop
cmp
cmp
pop
jnp
fnsave
jmp
call
mov
or
xor
push
sbbl
sub
imul
in
ret
test
inc
xor
mov
jecxz
sub
lock
dec
out
dec
outsl
dec
jl
mov
jp
aaa
mov
enter
sub
mov
add
xchg
ljmp
pop
ds
sub
or
mov
xor
inc
push
pop
adc
sub
xchg
roll
hlt
push
add
neg
outsl
pop
add
pop
inc
in
rorl
loope
lods
test
loop
stc
pmulhw
loopne
mov
sar
mov
stc
pop
jne
ljmp
bound
xchg
jmp
cmpsl
and
xchg
movsb
popf
sub
sub
fnstsw
int3
es
loop
pop
push
cmc
int3
out
imul
or
add
out
and
inc
movsl
scas
pop
rclb
ret
mov
sbb
minps
pop
pop
cld
and
in
sbb
jl
testb
mov
xchg
pop
pop
cmc
xchg
gs
js
addr16
js
dec
xor
ja
mov
xchg
mov
cmp
fbstp
jo
stos
xor
fstp
sbb
xchg
dec
sub
outsl
jno
cltd
sbb
push
adc
call
xchg
pop
fildll
ret
cltd
in
lds
mov
jmp
lret
jnp
mov
mov
mov
call
das
push
inc
arpl
mov
xorb
adc
test
fisubl
jno
scas
sbbb
jp
lods
inc
shll
cmpsl
add
mov
hlt
xchg
int3
xlat
cmp
mov
pop
or
dec
push
push
dec
cmp
pusha
add
xchg
lret
mov
add
cmp
push
dec
les
jecxz
add
push
int
shll
and
shrb
aaa
mov
mov
mov
lock
xchg
stos
or
push
lock
pusha
ljmp
movsb
push
loopne
mov
mov
or
xchg
add
push
sub
jbe
sbb
sub
mov
clc
sub
xor
pop
push
outsb
pop
loop
dec
sub
dec
sti
sub
push
sbb
mov
clc
movsb
push
pop
cs
xchg
ds
add
adc
ret
out
loopne
ss
lahf
idivl
and
into
clc
enter
push
scas
mulb
je
in
inc
loopne
push
not
xchg
mov
mov
sti
add
xchg
push
test
mov
int3
mov
xchg
pop
or
ljmp
add
pop
pop
sbb
add
xchg
sub
in
or
push
push
fstpl
push
int3
aam
and
aas
pop
or
sti
sbb
addr16
mov
icebp
mov
mov
ret
mov
mov
mov
test
test
mov
shrl
shl
cli
out
jg
push
fadd
test
cmp
xchg
loopne
xor
sar
fucom
loopne
icebp
mov
es
or
mov
mov
mov
push
in
pusha
int
mov
fldl
stos
rorl
adc
jle
cmc
arpl
test
test
jle,pt
sti
imul
jne
dec
jb
fisubl
jo
pushf
adc
test
andb
cmp
outsl
pxor
and
mov
push
sahf
cmp
mov
into
inc
mov
sub
xchg
das
or
arpl
fs
mov
mov
xchg
fnstsw
test
imul
and
fdivr
mov
adc
add
in
mov
pop
popa
jecxz
and
push
pop
sub
rcll
and
add
mov
popf
push
pop
lds
lcall
shlb
mov
xor
dec
sub
lret
xchg
call
sahf
cmpsb
fwait
test
pop
inc
pop
insb
shl
mov
inc
gs
flds
loop
jmp
ss
jne
sbb
test
mov
cmc
mov
fstp
outsl
inc
cmp
inc
jae
loope
enter
and
push
xor
cltd
jge
cmp
sub
in
jp
pop
repnz
push
outsl
mov
stc
mov
adc
sbb
mov
cmp
pusha
lahf
lret
jle
into
test
movsl
xor
lahf
mov
add
outsb
addr16
inc
push
or
xor
and
dec
mov
dec
lods
mov
pop
push
dec
adc
aam
push
mov
pop
popa
adc
inc
xchg
cltd
xchg
cld
insl
lds
sahf
inc
cmp
repnz
jp
mov
clc
dec
icebp
sbb
cwtl
cvtdq2ps
inc
and
sub
fcomps
inc
cmp
pop
das
out
fwait
mov
xchg
xchg
mov
imul
push
xchg
cmp
cmpsb
call
mov
jb
fstpt
xchg
insb
sub
das
jns
mov
scas
dec
imul
clc
int
lret
subl
repz
mov
jmp
ljmp
add
inc
dec
add
mov
jns
mov
jnp
icebp
or
inc
push
mov
add
lea
repz
lret
loop
fnsave
insb
in
out
shrb
add
test
pop
and
test
repz
inc
test
sub
int3
and
cmp
imul
jmp
add
sti
ret
jge
int
xor
out
stc
mov
das
pushf
jno
xchg
int
popf
push
pop
popa
mov
cmp
add
ljmp
pop
pop
mov
cmp
and
js
jl
pop
ret
arpl
test
mov
xor
adc
sub
and
cmpsb
lret
or
dec
and
mov
ja
push
push
rcrb
sub
jae
mov
fwait
push
sub
mov
or
roll
iret
add
addb
aam
paddsb
hlt
or
xchg
outsb
push
cwtl
rorb
xchg
repnz
sbb
adc
dec
push
subb
fidivs
insl
das
in
fiaddl
adc
sbb
jge
pop
push
push
jno
dec
xchg
jo
lret
xchg
push
pop
inc
cli
movsl
inc
repnz
jl
jae
imul
les
xor
lret
out
fldcw
js
ds
mov
insb
or
adc
pop
insl
push
mov
cmpsb
adc
inc
jne
gs
sbb
test
ljmp
cmpsl
sbb
popf
push
ja
or
adc
push
call
cmp
jle
add
mov
xchg
in
loopne
sbb
lret
arpl
pop
and
cs
insl
dec
popl
sbb
cmc
mov
aaa
add
sarl
cmp
cmp
add
inc
sbb
dec
in
je
je
aaa
jo
rolb
xor
test
in
push
dec
stos
lock
sub
inc
pop
jg
nop
out
stos
bound
jb
rcll
pop
or
jecxz
inc
inc
inc
and
ds
nop
outsl
mov
inc
shlb
jnp
jnp
push
mov
push
add
cltd
das
push
adc
mov
cmc
dec
xor
cwtl
mov
aad
inc
hlt
add
adc
adc
daa
stos
jp
insl
or
sti
push
jge
and
sbb
shrl
jo
pop
inc
push
push
jp
or
sbb
sub
cmp
lret
ljmp
xchg
ja
inc
push
jp
or
sbb
sub
cmp
lret
ljmp
xchg
notl
adc
cmpsl
or
mov
sub
fcmovb
ljmp
xchg
ja
inc
push
jnp
or
sbb
stos
pop
cmp
xor
xlat
xlat
add
notl
inc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
push
pop
inc
dec
jbe
insw
push
push
je
push
sbb
es
std
out
xchg
popf
xchg
xor
dec
sbb
insl
push
sbb
es
ffree
int
std
out
icebp
xchg
out
pop
mov
in
mov
or
mov
in
sahf
popl
sar
fidivrs
or
adc
push
or
mov
cmpsb
xchg
ds
mov
rcr
xchg
mov
and
call
mov
test
sbb
mov
pop
cld
test
add
pop
jo
fists
adc
inc
jecxz
out
xchg
lcall
push
mov
jmp
push
es
and
xor
sbb
mov
cmpsb
lods
test
sub
mov
and
testb
jmp
dec
mov
fcmovnb
ja
cwtl
sub
leave
xor
ret
add
aad
mov
movsl
mov
jbe
insw
repnz
subb
std
in
ficomps
cmpsb
les
pop
xor
add
insl
jns
push
jns
movsb
xchg
int3
xchg
cwtl
sbbl
cmp
sub
pop
insl
jg
arpl
push
jae
mov
xchg
mov
scas
sahf
mov
repz
ret
sub
inc
xor
or
ffree
int
std
out
xchg
popf
xchg
push
pop
inc
dec
jbe
insw
push
sbb
es
idiv
out
xchg
popf
xchg
push
pop
loopne
mov
cmpsb
scas
fldcw
loop
mov
outsl
mov
mov
bound
outsl
pop
add
mov
xchg
fildll
mov
inc
gs
mov
pop
out
mov
add
dec
xchg
test
mov
jns
dec
aad
and
jb
and
frstor
sbb
in
stc
ss
aas
in
in
mov
add
xchg
push
aas
dec
xlat
or
leave
aam
adc
sbb
xor
repnz
adc
ret
fs
lret
jge
pop
xorl
test
sub
addr16
adc
xor
out
leave
mov
push
sbb
inc
aad
mov
daa
test
push
push
xchg
icebp
lods
jnp
push
jg
inc
outsb
data16
pop
popa
add
xlat
add
test
popf
stos
xchg
jl
ficoml
insb
adc
lea
sbb
xor
cmp
add
pop
sub
lods
in
shll
call
dec
lock
jbe
mov
inc
mov
dec
dec
jb
lock
mov
mov
pop
adc
xchg
mov
adc
rol
sub
and
sub
pop
push
iret
bnd
and
leave
dec
mov
ds
xchg
inc
push
into
cltd
adc
add
gs
rol
out
sub
aad
pop
xbegin
test
test
jnp
push
repz
mov
aaa
pop
imull
fwait
mov
inc
cwtl
mov
push
pusha
xchg
mov
enter
nop
push
xlat
dec
sub
ret
xchg
int
push
jg
or
inc
nop
pop
or
jp
jnp
bound
stos
dec
cmpsb
xchg
add
dec
pop
loopne
pop
test
jne
sub
sub
test
mov
push
incl
xchg
fcom
cs
mov
xchg
or
mov
out
xor
mov
ljmp
mov
popa
dec
loope
mov
fsub
inc
xor
rolb
fsts
insb
pop
imul
mov
imulb
fistpll
dec
pop
leave
jno
jecxz
pusha
mov
dec
in
jbe
jb
cmpb
and
fs
jg
cmpsl
outsl
loope
andb
leave
push
mov
xor
outsb
lods
mov
add
outsl
or
inc
iret
hlt
das
aas
imul
ss
fcmovnbe
ds
dec
fs
mov
fstl
inc
xor
cmc
sub
mov
sbbl
adc
in
and
sub
xchg
repz
fldenv
sarb
lods
add
push
mov
lds
dec
mov
rcr
cld
orl
adc
lcall
aaa
cmp
std
aam
daa
pop
mov
pop
or
andl
aas
dec
imul
aam
inc
out
aad
test
pop
iret
mov
rclb
mov
fs
or
add
pop
rcrl
jo
and
adc
lret
xor
or
jp
inc
dec
pusha
mov
ja
mov
es
in
sti
mov
jp
jno
and
int3
lret
in
pop
mov
fisubl
ja
lods
xchg
pop
mov
js
cmc
mov
fs
pop
sbb
stc
sub
dec
jecxz
ja
lret
and
cltd
mov
push
or
aas
pop
loope
push
mov
ljmp
lret
in
cmp
dec
out
mov
push
scas
sarb
push
stos
arpl
shl
mov
repnz
mov
cmc
lea
cmp
aad
sub
push
jle
xchg
cmp
fdiv
mov
add
mov
cld
mov
xor
insl
pop
jne
repz
pushf
inc
inc
add
and
xor
imul
mov
incl
dec
movsl
lea
sbb
pop
loopne
mov
inc
sbb
push
pop
sti
pop
lock
lds
aad
into
mov
enter
gs
rol
sub
jb
inc
inc
enter
xchg
push
xor
mov
andb
xor
out
mov
insb
mov
cmpsl
sbb
daa
dec
xchg
pop
pop
cmp
ret
inc
movsl
inc
lret
dec
sbb
cmpsb
mov
dec
cltd
adc
arpl
mov
cmp
daa
cmp
shr
pusha
mov
cmp
js
fadds
lcall
mov
pop
or
push
fimull
mov
adc
cld
inc
lret
out
adc
xchg
movsl
mov
js
sti
dec
cwtl
push
dec
xchg
add
mov
adc
stos
mov
dec
jle
push
popf
repnz
or
test
repnz
call
aam
and
insl
pop
push
std
in
xchg
ds
mov
fisttpll
fcoms
fsub
pop
repz
dec
add
mov
mov
out
inc
push
popf
dec
call
adc
popa
data16
arpl
scas
sub
rclb
adc
xchg
aas
fists
insb
stos
xor
jnp
cwtl
push
cltd
pop
arpl
ljmp
test
xchg
jp
xor
lret
jg
or
push
shrb
das
push
cs
ja
sahf
push
cli
mov
jb
jae
aaa
xchg
or
scas
mov
nop
jb
pop
or
or
pop
js
and
sbb
sbb
sbb
jl
inc
repnz
and
lret
xchg
cmpsb
sbb
jo,pt
jbe
push
mov
adc
or
test
push
xor
add
adc
adc
je
movl
and
jo
cmpsb
shlb
mov
add
sarl
shll
add
rclb
xchg
mov
pop
call
pop
add
jl
sbb
out
xchg
iret
jns
push
jecxz
xchg
jecxz
ja
push
stc
dec
clc
mov
rol
dec
cmp
loopne
or
adc
cmp
inc
sub
and
xor
cwtl
pushf
or
push
lds
sbb
loopne
out
cmp
loop
fistps
push
lcall
aaa
add
mov
adc
cmp
or
loopne
popa
mov
add
push
data16
mov
fiadds
dec
subb
sbb
out
insb
inc
nop
pop
sti
mov
fs
into
loop
push
and
loop
xchg
xor
xor
dec
push
mov
jl
and
dec
mov
xchg
scas
mull
xchg
sub
outsl
push
dec
xor
sti
mov
hlt
push
rep
rolb
movsb
sti
arpl
pop
mov
mov
xchg
mov
fsub
mov
inc
pushl
jle
push
fcmovnb
fwait
int
fildll
aad
imulb
lods
xchg
pushf
mov
sahf
pusha
dec
aaa
test
cmp
decl
xchg
mov
jmp
mov
mov
dec
or
cmpsb
test
pop
cmc
xor
adc
and
sahf
mov
ret
sbb
cli
movsl
pushf
call
scas
xchg
out
jecxz
sub
xor
arpl
sbb
and
mov
xlat
xor
or
in
cmp
mov
clc
ret
inc
jecxz
ficoml
jg
sub
inc
aad
xchg
enter
cmp
add
gs
outsb
sub
and
mov
mov
inc
mov
dec
sti
sar
jne
cmp
jno
cmp
scas
cltd
shrb
mov
pop
out
dec
push
ja
cli
and
cmpsb
cs
insb
push
pop
cmpsb
mov
mov
adc
adc
popa
cmc
repz
dec
daa
out
ds
jp
pushf
mov
pop
popw
and
xchg
jae
fdivr
add
mov
xor
cli
fimull
push
inc
cmp
or
mov
mov
in
inc
orb
imul
popf
stos
sub
rcr
mov
insl
mov
ja
xor
int3
and
cmc
xor
stos
adc
jge
or
lds
cmp
xchg
mov
leave
imul
add
push
push
cs
xchg
daa
iret
sub
mov
xchg
movsl
dec
mov
inc
adc
push
cmpb
fdivr
das
jbe
vmwrite
mov
dec
mov
js
int
addb
dec
mov
mov
xchg
sbb
dec
pop
pushf
xorb
insl
test
xor
push
daa
cmc
and
shrb
mov
sahf
xor
mov
inc
push
mov
cmp
addr16
jp
fiadds
adc
cs
push
icebp
xor
dec
dec
je
xor
ret
test
je
decb
jno
sub
dec
pushf
sub
jno
push
mov
mov
scas
call
mov
push
mov
push
xor
or
dec
popf
fildll
sbb
adc
pop
mov
mov
mov
mov
popa
jge
aaa
adc
sub
jno
imul
xchg
sti
stos
decl
andl
clc
in
mov
dec
inc
fists
inc
into
and
pop
jo
lret
xchg
stc
add
fcoml
add
cmpsl
sarb
jns
fprem1
sbb
xchg
xor
sbbl
adc
mov
movsl
xchg
popa
pop
pop
aad
jle
sbb
jl
ljmp
fdivl
movsl
stos
lock
jb
int
xchg
xor
mov
sub
mov
fcmovnbe
in
jo
mov
mov
cltd
sub
jno
add
mov
lock
mov
cmp
scas
xchg
cmpsb
xlat
sbb
sti
ja
push
dec
test
mov
push
lods
fsubl
mov
mov
repz
sahf
sbb
adc
rol
mov
jo
sbb
fmuls
pop
cmpsl
fidivl
inc
adc
popf
lret
add
in
xchg
lret
std
push
and
sub
leave
push
cmc
call
inc
lret
divb
inc
sbb
movups
mov
and
add
mov
negl
fmulp
and
pusha
setg
mov
dec
dec
stc
xchg
mov
push
in
cmpb
mov
xor
js
and
xchg
or
jbe
mov
icebp
aam
jp
loope
jae
emms
fnstcw
mov
mov
cmp
xchg
lcall
cmp
les
pop
push
xchg
fistpl
mov
scas
adc
out
xor
jg
jnp
dec
jmp
fucompp
mov
pop
fists
adc
ficoml
imul
mov
rorb
mov
wrmsr
mov
adc
gs
lea
and
xchg
mov
sub
mov
cltd
adc
in
inc
jnp
sti
pop
cmpsb
enter
cmpsl
cmpsb
lret
rclb
xor
out
rclb
cmp
lcall
mov
pop
and
clc
in
mov
or
mov
push
fs
or
popa
ret
out
dec
aam
push
sbb
dec
push
xchg
cld
repz
pop
sti
jbe
pop
xchg
adc
sbb
addr16
sub
pop
lds
rcrb
das
xor
cwtl
add
or
lahf
scas
xchg
cmpsl
fwait
pop
popf
mov
xor
xor
test
stos
inc
sub
mov
push
adc
daa
std
mov
xor
inc
jge
lods
rorb
out
js
bnd
or
fldl
in
ror
sub
sbb
dec
ret
das
push
or
pop
mov
cmpsb
push
aaa
aas
push
insl
sbb
jne
in
mov
icebp
xchg
xchg
jmp
cli
cld
mov
sbb
or
mov
xchg
mov
or
jbe
xchg
out
cmp
jg
mov
aam
lea
loopne
inc
inc
and
aad
push
iret
notb
inc
sbb
jge
cmp
fxam
jo
xchg
insl
cmp
mov
cld
mov
mov
sub
in
cltd
push
roll
test
xchg
mov
int
mov
mov
outsb
xchg
adc
mov
inc
or
sub
dec
adc
hlt
sbbb
add
into
jp
mov
adc
cmp
cmp
jnp
jae
xchg
cmpsl
adc
dec
cmp
cltd
xchg
jo
pusha
call
aam
cmp
sub
push
xchg
aas
popf
cwtl
ljmp
mov
clc
ret
or
xorb
inc
and
or
hlt
pop
addr16
jns
mov
jo
xor
cwtl
mov
pop
jnp
push
insb
insl
in
in
mov
pop
sbb
sbb
sub
mov
loopne
mov
push
mov
pop
and
dec
in
pop
les
repnz
cld
adc
xor
out
xchg
arpl
fucomip
mov
sti
outsb
cli
enter
sahf
sahf
xchg
adc
cmp
add
push
inc
pop
jle
xchg
cmpsl
mov
and
and
dec
mov
mov
ficomps
inc
xchg
out
fcomps
pop
push
hlt
fmull
xor
sbb
lcall
or
xchg
test
jno
add
and
lods
push
mov
or
add
pop
push
test
and
jno
cmp
imul
add
addr16
jge
in
jp
mov
xor
dec
imul
dec
sbb
push
jp
and
cli
inc
scas
icebp
cmc
push
mov
stc
dec
and
in
inc
outsl
cmp
pop
ret
add
cmpsb
into
dec
cmp
mov
dec
cmp
insb
and
xor
jmp
and
cmp
aaa
out
lea
inc
leave
sbb
shr
adc
ljmp
jmp
mov
lods
add
fimuls
enter
cmp
mov
sbb
and
push
sub
jg
mov
sub
push
and
push
insb
cmp
icebp
xorb
mov
push
adc
mov
xlat
loopne
ret
mov
inc
jno
cmp
or
addb
and
ret
outsb
jp
lcallw
in
or
dec
les
jmp
push
add
cs
jge
cltd
imulb
mov
notl
inc
repz
pop
inc
arpl
cs
sbb
cltd
and
inc
or
loope
mov
xlat
xchg
inc
jbe
mov
xchg
and
mov
cld
pop
icebp
inc
jl
imul
or
movsl
fnstcw
dec
std
xchg
jns
fsubs
jnp
pop
cltd
pop
xchg
insl
xlat
dec
xchg
or
bound
cmp
icebp
je
sbb
addr16
pushf
shll
mov
gs
jg
mov
push
scas
inc
lcall
adc
xchg
cmp
cmp
test
rol
es
xchg
mov
dec
pop
iret
clc
push
fsub
hlt
mov
and
mov
dec
dec
psadbw
jmp
aad
out
or
push
shrl
sub
clc
das
cmp
stos
loop
enter
sbb
lcall
out
subb
jns
loop
cli
mov
hlt
lock
add
push
scas
repz
mov
adc
mov
mov
cmp
jns
adc
xchg
and
popf
dec
lods
imul
cs
test
lods
jp
iret
insl
leave
dec
fscale
sbb
out
cmp
aas
dec
xchg
ficompl
lock
cwtl
add
sar
test
les
ss
fidivrl
lahf
cs
mov
aam
popa
xor
ret
imul
sub
cwtl
cmp
add
pushf
xchg
rorb
outsb
inc
sti
xorb
popaw
or
into
mov
sahf
jg
xchg
test
sub
push
jo,pt
mov
pop
fstpl
mov
and
pop
pop
cmp
arpl
fwait
cmc
mov
add
cmpsb
cmp
insl
jmp
mov
jecxz
or
jbe
add
dec
das
jbe
jbe
psllw
push
popf
pushl
and
shrb
adc
xchg
mov
mov
inc
jno
ja
arpl
mov
in
cld
lods
jne
dec
jmp
mov
and
insb
bound
jns
push
xchg
mov
shll
adc
push
dec
icebp
xchg
clc
jecxz
test
test
sub
xor
mov
mov
inc
push
div
repz
sysret
test
gs
mov
dec
out
imulb
aas
adc
cwtl
add
enter
daa
push
mov
jl
adcb
loope
mov
scas
sub
pop
pop
out
jb
push
clc
mov
fbstp
mov
stos
movsl
testl
adc
adc
and
xchg
dec
inc
mov
std
mov
jns
inc
std
xor
lods
push
in
lea
fnsave
clc
jle
jnp
mov
mov
test
into
jno
lock
call
xchg
sub
out
push
orb
cmpsl
stc
movsl
inc
mov
outsb
icebp
xchg
cmc
hlt
clc
jb
push
movsl
pushf
sbb
arpl
mov
mov
ret
or
mov
sbb
ret
xchg
test
imul
test
fisubrs
pop
adc
xor
mov
fdivs
jnp
xchg
test
mov
mov
xor
out
ljmp
and
mov
pop
mov
lock
lcall
shr
ret
pushf
xchg
xor
repnz
dec
add
or
or
aaa
jne
call
inc
inc
or
fs
ljmp
jmp
sub
aas
inc
sahf
iret
add
cltd
mov
dec
xchg
or
not
xchg
and
mov
rorl
mov
xchg
adc
pop
xor
xor
stc
lods
aas
lea
frstpm(287
jne
sub
lods
inc
iret
mov
xchg
mov
pushf
mov
rcll
shlb
enter
add
pop
decb
in
inc
fcompl
ss
add
inc
jg
scas
adc
mov
movsb
and
lods
mov
pop
les
xor
push
jecxz
sahf
pop
dec
lods
cmpsl
xchg
fs
sti
dec
push
test
loope
xchg
aaa
mov
fstpl
repnz
mov
jb
xchg
sbb
mov
je
test
ret
fwait
imul
fs
lods
in
cmp
sahf
adc
out
dec
cli
ret
lods
mov
xchg
sub
das
jecxz
ja
mov
rcr
dec
fisttpll
pavgb
xor
jb
sbb
cltd
mov
cs
pop
sahf
xchg
sub
outsl
and
iret
add
pop
and
mov
subl
fildl
xor
leave
orl
mov
sbb
sub
repz
dec
add
inc
aam
push
dec
mov
xor
cpuid
les
pop
push
inc
pop
sahf
loop
mov
insl
rorb
and
cli
inc
in
xchg
pop
pop
cmp
pushf
dec
xor
jae
test
push
add
xchg
inc
or
test
inc
push
lret
or
xchg
mov
or
idivl
test
dec
sbb
adc
and
mov
aas
cli
xlat
lods
inc
or
ljmp
jmp
push
int
sbb
sub
daa
in
jb
xchg
mov
xor
cwtl
xchg
jno
call
inc
pop
xor
lcall
sbb
adc
adc
icebp
sub
add
push
ss
fidivrs
jae
ljmp
mov
aaa
jae
sbb
cmc
pop
shlb
pusha
cmpsb
ljmp
dec
jp
sbb
int
or
test
out
ret
sbb
insl
push
cwtl
lret
fildl
sub
je
xor
lock
or
push
lret
xor
and
popf
sub
jbe
das
adc
out
fsubrl
pop
outsl
push
xchg
sub
and
xor
cmp
loope
orl
sub
or
sahf
cmp
iret
sub
loopne
imul
ds
loope
add
push
cmp
das
fdivrs
outsb
iret
in
jmp
out
hlt
inc
sub
lds
dec
loopne
jno
inc
in
xchg
push
xor
inc
dec
je
jb
pop
push
test
das
loope
lods
jo
and
lcall
sub
jnp
inc
int3
test
mov
enter
push
cmp
xchg
mov
andb
sbb
push
inc
fnstsw
sahf
cmp
push
stos
push
mov
cmp
sbb
pop
fbstp
shrl
pop
xor
jle
jnp
adc
mov
test
jl
daa
lock
nop
in
in
pusha
fisubrs
mov
inc
push
inc
jae
and
inc
cld
jns
mov
xor
pop
in
sahf
mov
xchg
sbb
jecxz
fbstp
pop
dec
push
xchg
push
outsb
mov
js
mov
mov
negb
push
add
jecxz
jne
in
sub
hlt
leave
lods
fs
jbe
lahf
push
shlb
pop
mov
shl
sub
daa
cmpsl
dec
mov
dec
in
or
pop
xchg
dec
daa
int
sub
pushf
cmp
adc
mov
jle
jb
out
aam
adc
dec
xor
insl
push
sbb
es
idiv
out
xchg
popf
xchg
push
pop
inc
dec
jbe
insw
push
sbb
es
idiv
out
xchg
popf
xchg
push
pop
jbe
push
jge
insl
xchg
out
ffree
int
std
out
xchg
popf
xchg
lea
pop
sbb
jge
insl
push
sbb
cmpsb
sub
pop
std
out
loope
push
jb
inc
pop
push
dec
adc
xor
dec
jo
and
push
pop
inc
rclb
mov
aam
sub
icebp
repnz
adc
add
xor
and
push
inc
bound
dec
rclb
mov
ret
shl
repnz
mov
movsb
stos
hlt
push
push
popa
sbb
dec
jnp
push
adcb
shl
orb
inc
push
xor
bound
leave
pop
pop
mov
mov
xchg
jle
repz
or
stos
push
adc
sbb
ficoms
inc
lods
lret
negb
pop
dec
pop
icebp
inc
les
arpl
lods
push
jns
pop
and
ror
mov
dec
cmp
nop
insl
xchg
pop
mov
pop
cmp
and
push
pop
xor
lods
jno
mov
in
xchg
adc
popa
mov
dec
mov
testl
out
cld
repnz
mov
popf
inc
mov
pop
push
mov
xor
xchg
adc
fldl
iret
push
stos
mov
add
shll
mov
loop
xor
pop
and
push
inc
bound
repz
add
jp
lods
popf
mov
jmp
outsb
pop
pop
dec
sub
daa
sub
add
es
shl
repnz
ret
mov
mov
push
lcall
add
adc
sbb
push
mov
jecxz
xchg
mov
mov
xchg
xchg
mov
jo
and
push
pop
jae
pop
sbb
jb
adcb
mov
loop
repnz
adc
add
xor
and
push
inc
bound
popa
adcb
mov
loop
repnz
adc
push
mov
push
ss
pop
rcr
sti
test
insl
xor
lea
lahf
hlt
aas
xor
test
ficoml
and
icebp
fldenv
loopne
pop
mov
sub
cmc
pop
dec
push
jb
ljmp
mov
pop
hlt
cmp
inc
fdivrl
std
mov
aas
push
aam
sbb
mov
sub
mov
iret
je
inc
outsl
dec
dec
test
shll
imul
int3
sbb
add
sbb
inc
and
pushf
sbb
sub
outsb
mov
test
ficomps
add
repnz
xor
and
pusha
and
mov
mov
xchg
sarl
mov
inc
daa
ljmp
jle
cltd
hlt
les
pushf
mov
inc
fst
inc
cli
add
sbb
ret
mov
mov
sbb
rclb
dec
add
shll
shrl
data16
mov
jne
out
shrb
rorb
mov
adc
or
inc
shll
mov
jns
and
mov
mov
pop
iret
outsl
mov
push
aaa
movsb
jg
push
lods
je
repz
xchg
add
xor
lret
test
fistpll
mov
cmp
dec
repnz
or
adc
dec
sbb
xor
mov
jp
arpl
jno
adc
add
sub
imull
cmpb
push
adcb
imul
sub
mov
sub
mov
dec
pop
xchg
dec
addb
pop
ret
adc
or
leave
lock
outsb
rorl
adc
xor
mov
int
jecxz
ficompl
iret
adc
sahf
jo
dec
xor
scas
push
dec
xlat
int3
push
or
xor
and
push
push
add
dec
movsl
fstpt
subl
xchg
mov
frstor
lods
leave
xor
and
xchg
mov
out
inc
rcll
pusha
xchg
cmp
adc
aam
nop
push
insl
jmp
inc
jg
mov
inc
repnz
aam
sub
rolb
cmpsb
inc
xchg
addr16
clc
mov
jge
or
mov
pop
sbb
test
sub
adc
sbb
pop
aaa
jne
adc
adc
mov
mov
pop
popf
mov
dec
sbbl
iret
cwtl
cli
jb
enter
inc
jle
into
dec
and
push
mov
xchg
fisubrl
and
insl
sar
je
inc
push
xchg
and
icebp
aas
jns
dec
movsb
lret
movsb
jle
push
mov
push
pop
mov
arpl
ds
pop
sub
call
xchg
mov
je
cmp
xlat
sbb
lahf
mov
call
cmpsb
int
mov
lock
sub
int
rclb
mov
test
and
mov
test
les
xor
imul
push
adc
sbbb
ret
jle
xchg
out
aaa
shl
push
pushf
int3
sbb
mov
push
sub
and
add
rcrb
jecxz
jmp
cmp
inc
mov
cli
xchg
sub
add
movsb
in
enter
jb
mov
xor
pop
push
orb
dec
jecxz
xchg
cwtl
inc
mov
jp
cmp
jo
dec
shl
aas
push
jbe
sbb
push
jmp
xor
lcall
inc
cmp
push
pop
fimuls
movsb
mov
pop
push
dec
or
sbb
adc
aaa
xor
push
xchg
sbb
and
dec
call
shrl
pop
sub
pop
jp
in
stc
sti
xor
xchg
push
or
sbb
xor
adc
mov
add
jmp
fdivl
aaa
loopne
jns
lcall
sti
cmc
jmp
mov
mov
insb
aaa
sub
iret
jb
xchg
paddsb
adc
pop
out
gs
sti
ficompl
ret
pop
stos
jnp
mov
add
mov
mov
xchg
andb
xor
inc
in
jbe
repz
cmp
scas
pop
sub
in
rcrb
and
mov
rcrl
icebp
test
mov
mov
into
pop
xor
fdivrl
cmp
xchg
jp
std
pop
push
inc
xchg
mov
ja
clc
ljmp
sub
mov
pop
inc
xchg
sbb
into
sub
cmp
inc
fisttps
ss
fmul
push
cmp
daa
das
popf
dec
cmp
mov
pop
mov
dec
sbb
cmpl
sub
jae
cld
mov
mov
test
cltd
ds
dec
xor
sub
cld
dec
jne
xchg
lahf
dec
loope
cmc
jae
push
sub
dec
sbb
adc
pop
mov
cmp
pop
mov
mov
dec
jecxz
and
push
repnz
repz
lret
jno
outsb
pusha
jnp
add
or
es
mov
sub
and
mov
nop
popf
cli
loopne
jmp
adc
in
arpl
mov
xor
mov
jle
pop
mov
xchg
jbe
add
lods
adc
cmp
push
inc
xchg
cmp
pop
and
clc
mov
scas
sbb
jo
jno
mov
fdivs
jno
mov
or
into
inc
dec
sahf
pop
cld
xchg
fsubrs
and
and
outsb
pushf
inc
sahf
cltd
mov
xchg
ret
ret
and
xchg
mov
fidivrl
rclb
out
inc
out
adc
insb
pushf
cwtl
outsl
or
and
or
push
adc
and
xor
cmp
popl
jae
jg
scas
std
pop
and
xor
xor
jne
mov
test
sub
jg
mov
sbb
add
clc
and
out
push
nop
test
mul
pop
cmp
ljmp
mov
out
xchg
test
or
jge
inc
ljmp
dec
fisubs
std
scas
ss
push
cs
fs
mov
aaa
adc
jbe
mov
mov
cwtl
xchg
aad
call
aaa
mov
mov
sbb
aad
fldl
insl
aaa
add
out
test
add
cmp
mov
sub
xor
inc
movups
int3
add
repz
fs
push
push
sub
pop
in
xor
cmpsl
push
inc
push
mov
arpl
test
xchg
test
popf
xchg
mov
adc
push
push
nop
movsb
clc
lret
mov
xor
cwtl
jns
cwtl
je
pop
cmp
fimull
cmpsl
cmpsb
imul
imul
imul
jmp
sub
xchg
add
inc
add
outsl
push
ljmp
and
jbe
loopne
dec
ja
mov
push
sbbl
lahf
scas
ficomps
mov
mov
sahf
push
std
dec
cld
ja
cmpsb
mov
sub
sti
fs
leave
add
sbb
loope
in
xchg
mov
jmp
fsts
jecxz
xor
add
xchg
dec
mov
adc
cmp
cwtl
sarl
sbb
cltd
mov
stos
jp
jmp
dec
dec
ret
repz
sarl
jo
cmp
imul
int3
pop
aam
xchg
frstor
xchg
or
xchg
or
xlat
enter
fcomps
adc
xchg
inc
sti
and
push
cltd
inc
xchg
push
add
inc
cmc
pop
xchg
cmp
das
sub
daa
jle
mov
push
push
std
outsb
movsl
cmp
rcrl
adc
jmp
push
jmp
daa
enter
jl
in
pop
xor
cs
cli
daa
or
mov
into
dec
adc
mov
xchg
adc
lret
jg
addb
sbb
fnstcw
cmp
push
daa
push
jae
jns
sbb
iret
lods
int3
mov
pop
sub
lret
pop
fcoms
sub
jb
stos
cmpsb
mov
repz
out
xor
cmp
rolb
or
test
rclb
lahf
mov
push
negl
ffreep
data16
adc
cmpsl
sbb
lds
or
mov
adc
sti
lds
jg
call
sub
cli
cmc
jo
scas
cmp
fcoms
test
jle
dec
ret
imull
push
out
sti
push
int
mov
lahf
cmpsb
enter
xor
mov
idiv
dec
out
aam
push
adc
mov
cmp
push
ljmp
arpl
enter
push
mov
test
mov
adc
jmp
jbe
mov
mov
sub
lea
int3
enter
daa
decb
mov
icebp
adc
mov
and
inc
and
mov
fwait
repz
or
jmp
add
subb
sbb
mov
inc
pushf
stos
loop
dec
or
sbb
loop
daa
shrb
inc
mov
sub
lock
aaa
and
loope
mov
cmc
adc
add
cmc
test
mov
inc
fistpll
push
and
loop
push
mov
cltd
dec
or
je
jmp
insl
in
iret
push
in
cmp
mov
adc
call
movsb
mov
jne
pop
nop
jmp
mov
fistpll
fisubl
mov
out
sbbb
mov
bound
inc
xor
fsts
jbe
iret
adc
stc
push
js
dec
sub
lea
mov
sbb
xlat
mov
lock
mov
sarl
adcl
outsl
mov
cmpl
pop
or
pop
and
and
cmpsl
testb
sub
imul
push
adc
push
in
xor
xchg
pop
dec
loop
dec
hlt
inc
xchg
clc
jnp
in
clc
dec
add
js
push
sbb
fiaddl
cmpb
push
std
mov
xchg
imul
add
aaa
pop
pop
adc
add
add
and
insl
cs
lahf
popa
subb
bound
cmpsb
push
jg
daa
mov
movsb
xor
jb
jecxz
jbe
shrb
cmp
push
iret
cmc
pop
xor
stc
in
push
nop
adc
sub
jns
lcall
shlb
xchg
dec
lcall
addr16
std
ficomps
loopne
int
add
outsb
mov
stos
sub
inc
and
stos
mov
jb
dec
sbb
dec
cli
pop
push
push
dec
decb
mov
cmp
rorl
insl
mov
sbb
sub
fnsave
cmpsb
hlt
outsl
xlat
repnz
test
bound
mov
cmc
out
cli
add
ljmp
sarb
shrl
xor
xchg
add
imul
mov
mov
ja
loopne
and
lods
fnsave
fnstcw
faddl
lret
mov
mov
test
dec
xor
xchg
int3
cmp
pushf
mul
addb
inc
movsl
sbb
mov
xor
scas
pop
jmp
loope
sub
push
lret
or
sub
xchg
andb
jg
lods
pop
inc
push
sub
sarl
roll
jns
jne
jmp
je
xchg
mov
pusha
and
and
pop
xchg
movsl
int3
data16
dec
xor
inc
sub
cli
inc
add
fnsave
cli
cwtl
pop
jae
or
cmpsl
push
jno
rcrb
mov
repnz
setp
popf
ljmp
repz
or
jle
lods
outsb
fs
gs
mov
push
iret
sarl
xlat
bound
mov
sbb
out
mov
mov
lahf
ds
cwtl
sarb
push
fs
movsl
sub
xor
iret
xor
pop
pushl
mov
push
ja
icebp
add
mov
int
push
and
xchg
push
addl
aas
xchg
sbb
pop
lret
sbb
mov
xor
stos
mov
mov
sub
scas
in
pop
xchg
aam
dec
pop
pop
add
test
fsubs
xor
aad
pushf
ret
hlt
mov
negb
js
out
and
xor
adc
xor
sbb
sub
mov
cli
jle
fcomi
mov
mov
mov
cmp
cld
dec
dec
sub
je
mov
dec
and
dec
or
aam
xchg
nop
mov
iret
std
or
sti
shlb
and
pop
push
xchg
int3
out
xchg
fwait
jae
ret
mov
jp
push
push
sbb
dec
mov
lock
dec
test
adcb
cli
jecxz
or
jle
fistpll
gs
mov
fwait
cmc
mov
sti
repz
jle
bound
cli
cmpsl
je
cld
mov
enter
sub
mov
into
lret
cli
cmp
xchg
test
mov
test
and
push
imul
in
inc
aaa
ds
mov
repnz
imul
mov
mov
dec
loopne
dec
cmp
mov
ds
fisubrl
cmpsb
pop
xor
shl
test
int3
leave
arpl
fs
add
fdivl
in
xchg
cmpsb
fstpt
cmpsl
cltd
jle
or
sub
inc
adc
push
add
pusha
pop
test
inc
inc
inc
jge
pop
data16
outsb
sbb
or
add
sbb
arpl
pusha
dec
push
stos
imull
leave
xor
xchg
cmp
sbb
sti
push
stos
pminub
mov
pop
push
and
sahf
clc
sub
sub
int3
push
lahf
int
jg
xchg
fisubrl
adc
mov
jecxz
sbb
scas
lods
mov
xor
or
in
mov
fsubp
push
bound
and
repnz
xorl
jg
roll
adc
test
mov
mov
jle
ljmp
pop
repnz
shll
pop
or
int3
into
cmc
mov
and
inc
mov
mov
xchg
sub
outsb
xchg
insb
cmp
xor
hlt
inc
mov
sahf
popf
imul
scas
daa
ret
cmc
or
pushf
lahf
sub
lea
adc
dec
ja
push
lods
aas
sub
jae
and
mov
adc
popf
adc
negb
inc
pop
pop
or
sarl
enter
popa
jne
mov
rcl
aad
mov
or
int
and
sbb
inc
dec
inc
mov
loop
test
mov
or
out
and
stos
pop
sub
iret
inc
fldenv
andl
push
cli
inc
sub
mov
mov
xor
andl
cmpsb
in
aad
sub
nop
add
notb
pop
pop
jge
imul
sub
or
push
repz
mov
rcrl
rol
sti
daa
or
shll
addps
pop
xchg
iret
inc
mov
stos
or
add
dec
xchg
mov
push
fwait
loopne
and
cs
xor
add
fbstp
pop
sub
mov
aas
mov
inc
lret
mov
clc
lret
dec
add
and
stc
cmp
scas
daa
mov
je
xor
mov
add
cmpsb
jnp
jecxz
lods
jp
test
clc
sub
xchg
xlat
cli
ljmp
aas
inc
dec
pushf
and
inc
vpmacsdql
and
pop
mov
sub
mov
int
xchg
ljmp
push
sbb
sbb
add
rdmsr
lds
mov
aad
sub
xchg
in
fs
and
test
ds
mov
mov
cs
test
mov
add
cs
stc
lcall
adc
in
and
test
aaa
out
dec
mov
adc
mov
pop
add
subb
or
cli
sahf
cmpl
cmp
cmp
cmc
jo
inc
stos
ja
add
fisttpll
movl
mov
jl
xor
cmc
xor
or
dec
lock
mov
outsb
and
ds
sbb
es
mov
fabs
shrl
sub
dec
roll
pop
pop
stc
push
inc
jl
in
mov
cmpsb
xchg
pusha
in
sbb
iret
lea
in
stos
lcall
xchg
mov
andb
cmp
sbb
in
scas
insb
mov
fcoms
sub
pop
repnz
loop
jno
imul
inc
mov
mov
aaa
lret
into
call
xor
jo
gs
in
mov
fincstp
fsubs
stos
stos
xor
inc
inc
mov
push
movsb
popa
mov
mov
stc
pop
and
mov
push
stos
lcall
test
ds
popf
mov
xchg
add
or
mov
jb
aaa
mov
fs
test
fdivrs
inc
dec
popf
push
test
jmp
mov
out
jbe
or
in
pop
fldl
inc
cmp
scas
scas
dec
and
inc
int
add
jl
add
pop
int
push
mov
xor
imul
loopne
sub
fsubrs
lcall
rcrl
lods
mov
lcall
jae
es
jbe
lahf
lds
ja
or
cmp
sahf
mov
cmp
dec
pop
lods
mov
jge
or
in
jecxz
enter
ljmp
sbb
push
jno
xlat
push
fbld
outsb
add
mov
or
fldl
shll
addr16
xchg
cmpsb
inc
mov
push
into
mov
test
sub
cmp
roll
imul
and
pop
inc
call
icebp
mov
mov
inc
pushf
pop
adc
inc
mov
stc
mov
push
sbb
add
mov
scas
lods
mov
and
out
xchg
bound
sbb
adc
inc
fdivrs
dec
or
jb
dec
cmp
pop
mull
mov
mov
mov
mov
xchg
addr16
js,pt
cmp
xchg
lahf
mov
test
aaa
div
lret
mov
inc
int3
rcrb
jb
jo
pop
mov
and
lcall
add
call
imul
cmp
lret
into
adc
roll
pop
xchg
dec
pmullw
mov
ret
pop
pop
outsb
gs
clc
ljmp
xor
dec
jno
dec
push
cmp
in
mov
push
lods
adc
dec
je
lea
or
pop
repnz
jecxz
cmc
fldl
dec
sub
rorb
pop
jb
insl
inc
mov
add
sbb
xchg
jmp
scas
pop
cltd
cmp
lret
dec
or
jge
es
stc
out
dec
inc
negb
add
stc
and
rorl
xor
imul
sub
mov
subl
fnstcw
cltd
mov
and
cmovns
push
cltd
lods
cwtl
insl
cmpsb
test
pop
jecxz
out
lcall
jle
push
push
adc
adc
lahf
or
pop
jne
imulb
movsb
ror
fistpl
insb
stos
add
mov
fists
jne
jns
push
sub
push
out
test
pop
mov
fimull
inc
add
rorl
add
fwait
and
in
and
bound
cmpsl
repz
movsb
add
lahf
xor
lds
repz
fwait
jp
aad
xchg
shrb
aam
rclb
pop
xchg
dec
lret
data16
adc
lret
mov
and
xor
aam
push
test
ja
xchg
adc
xor
ret
nop
dec
cmp
sub
push
pop
in
sbb
ljmp
popf
sub
mov
outsl
push
cmpsb
sub
mulb
insb
jb
or
push
push
test
inc
xor
push
dec
adc
pop
inc
cltd
xor
xchg
mov
clc
cmp
aam
sti
faddp
out
add
pop
pop
push
fdivp
pop
rorl
xchg
mov
jno
dec
mov
out
repz
ja
dec
sbb
or
scas
push
leave
stos
mov
out
mov
dec
or
xchg
scas
fs
xchg
in
loopne
cmp
sub
adc
push
cmp
mov
and
mov
add
and
sub
mov
push
cmp
ret
push
stos
dec
or
xor
jns
dec
test
pushl
xchg
adc
inc
dec
mov
outsb
js
dec
mov
cmpsl
imul
dec
fdivr
adc
adc
dec
aas
and
dec
jmp
xchg
mov
mov
mov
movsl
rcrl
test
adc
fdivrp
mov
iret
sub
es
aad
sti
sbb
mov
push
cmpsb
add
fidivs
add
lret
mov
lds
sbb
cmp
insb
mov
int
ljmp
dec
pushf
fnstenv
mov
test
lock
rdtsc
add
fstpl
and
sub
aam
data16
sub
daa
dec
inc
or
dec
pop
jg
cmp
jmp
pusha
push
mov
xchg
add
lea
popa
mov
xor
fnsave
xor
subb
fs
rcrl
and
push
inc
bound
popa
adcb
mov
loop
repnz
adc
add
xor
and
push
inc
bound
popa
adcb
mov
loop
repnz
adc
xor
bound
popa
xchg
mov
ret
shl
ret
cmc
ds
aad
popa
inc
push
inc
inc
repnz
or
pop
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
orl
hlt
push
push
inc
or
or
push
or
add
test
add
jae
add
add
add
arpl
pushf
add
add
add
inc
add
dec
add
pushf
add
add
add
push
add
add
ljmp
add
add
add
pop
add
add
sub
add
add
mov
pop
add
mov
pop
add
add
add
pop
add
mov
add
inc
add
add
add
add
add
jae
movb
add
add
xor
sbb
inc
add
add
jle
jle
ljmp
add
add
add
and
sbb
or
ret
add
add
aad
add
mov
add
inc
add
mov
add
add
test
lret
add
add
add
or
add
jle
out
xchg
add
xor
mov
add
add
iret
add
add
add
add
insl
add
mov
add
add
adc
pop
add
add
add
add
add
add
inc
add
xor
aad
arpl
movl
add
dec
add
add
add
add
add
add
addb
add
add
add
add
add
add
xor
jno
push
add
add
add
add
add
add
jbe
sti
add
add
add
add
add
add
insl
add
add
push
add
add
jle
mov
add
push
add
adc
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
add
add
pop
add
add
push
add
jae
pop
add
add
add
add
add
roll
add
add
add
add
add
add
add
lcall
add
inc
add
add
add
jne
add
test
adc
and
add
add
addl
push
add
jle
jns
adc
jle
icebp
add
push
add
cmp
lcall
add
pop
add
adc
and
roll
add
add
add
add
dec
add
ret
add
add
add
pop
add
add
dec
add
add
add
add
add
mov
sub
add
add
rolb
add
add
inc
add
add
rolb
add
mov
add
lret
add
add
add
add
sub
icebp
add
add
add
inc
add
ret
add
mov
popf
add
sbb
je
push
add
add
add
mov
sbb
add
add
add
add
add
add
mov
jle
xor
adc
inc
add
add
add
add
sub
add
rolb
and
ret
add
outsb
add
sub
add
add
add
add
mov
jle
xor
push
add
add
add
add
add
xchg
add
add
add
insl
or
sbb
add
mov
mov
stos
jae
mov
pop
or
cmp
outsb
fs
xchg
cmpb
aaa
and
dec
orl
enter
pop
cmpsb
lock
les
push
xor
std
cmc
xchg
pop
add
rorl
and
xchg
adc
mov
sub
mov
and
mov
rcrb
cltd
push
jne
inc
or
je
call
cmp
inc
mov
mov
xor
call
test
xchg
push
mov
je
stc
adc
int
mov
sub
js
mov
lods
fs
cmp
cmp
jge
sahf
cs
in
test
push
in
shll
movsl
movl
cmp
imul
outsb
inc
xchg
cld
cltd
push
dec
push
xchg
out
xrelease
or
leave
jge
mov
enter
out
mov
sbb
mov
mov
lock
jmp
or
cmp
js
daa
icebp
testl
lret
mov
push
sub
lds
xorb
add
mov
in
es
mov
fisubs
pop
movsw
jns
cs
sbb
pusha
mov
lret
pop
lea
push
and
cmp
in
jns
inc
xchg
adc
cmpl
popa
roll
mov
mov
xorl
loop
jno
xchg
mov
mov
cmp
call
aam
daa
adc
nop
enter
mov
imul
push
inc
je
int3
test
test
jb
sub
dec
and
jmp
add
pop
mov
sbb
push
pushf
jae
sub
pop
sbb
cs
sbb
enter
xor
cmp
mov
mov
adc
aaa
adc
fisubl
inc
push
dec
dec
and
jge
push
addl
mov
add
mov
and
fcmovne
inc
ss
add
adc
jge
mov
iret
jae
call
mov
or
shlb
loopne
xchg
sbb
dec
sar
jns
lcall
cld
inc
mov
xchg
and
pop
hlt
lods
dec
mov
mov
jno
pop
dec
xchg
rclb
aas
test
xchg
xor
jecxz
sub
mov
xchg
fadds
cmpsb
push
xor
cmpsl
xor
shll
cwtl
enter
adc
mul
and
test
ror
movsl
cmc
xor
mov
xchg
pop
fadd
fsts
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
