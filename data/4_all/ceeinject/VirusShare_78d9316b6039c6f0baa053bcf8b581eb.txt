adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
inc
push
btc
mov
sbb
cmp
pop
popl
fcmovnu
sub
sbb
imul
or
das
fwait
pop
jmp
ja
lret
outsl
scas
xchg
sub
sbb
add
jnp
or
pop
push
cmp
mov
inc
xlat
push
addr16
test
push
fldt
cmp
adc
pmullw
inc
into
push
fdivl
add
xorl
xor
testl
subb
ljmp
push
push
jo
inc
arpl
mov
xchg
stos
movsbl
in
mov
mov
ja
popf
cmpsb
jo
out
xchg
and
jnp
mov
dec
iret
imul
fistps
pop
xchg
xchg
xor
stos
aam
imul
pushf
test
mov
pop
push
bswap
mov
xchg
js
sub
cmp
jp
pop
pop
movsb
ljmp
push
jo
mov
js
mov
sub
inc
hlt
scas
add
push
test
dec
out
stos
cmovnp
dec
jmp
sti
jg
jbe
xchg
mov
movl
xor
pop
enter
lahf
and
insl
jle
jg
jb
add
setp
mov
pop
out
psubd
sub
enter
mov
dec
insl
cli
outsb
fidivrl
mov
xor
cmp
clc
daa
dec
sti
jg
outsl
fistpl
or
jnp
dec
out
pop
pop
stos
btc
mov
fwait
pop
jmp
sti
jg
outsl
fistpl
or
jnp
dec
out
pop
pop
stos
int3
insb
data16
jo
arpl
rclb
cli
mov
pop
int
mov
dec
insb
inc
lods
add
pusha
cmpb
mov
jne
imul
inc
fidivrs
rcrl
aaa
pop
lret
and
adc
ljmp
jns
and
ja
shll
sbb
jg
cwtl
xor
dec
test
push
data16
mov
mov
insl
jb
rcrb
sub
or
insb
pushf
pop
movsl
push
mov
inc
jae
xchg
mov
fld
pushf
push
mov
and
add
xchg
push
push
jns
pop
or
std
sub
sbb
insl
xchg
faddp
pop
das
das
sti
mov
add
lcall
clc
js
mov
pop
lods
jmp
mov
xchg
xor
xchg
ja
int
std
imul
pop
mov
jne
add
sub
lret
pop
call
jae
lock
js
das
je
lds
arpl
es
scas
push
or
lods
mov
inc
fldt
xchg
mov
lods
loope
sub
adc
mov
add
sub
aam
jns
out
fdecstp
push
xchg
fbld
shrl
paddsb
iret
add
and
mov
inc
fs
inc
jno
popa
sub
sarl
lock
jae
or
bound
lods
dec
push
stos
in
aam
pop
into
sarl
ljmp
dec
pop
push
sbb
pop
adc
repz
hlt
sbb
pop
xchg
push
call
jno
out
sahf
stos
mov
movl
in
inc
lcall
jne
cmp
push
mov
push
in
addr16
in
jmp
push
cmp
not
js
movsl
lods
jl
pop
sbb
sahf
enter
push
and
inc
cmpsb
mov
dec
dec
mov
xchg
cmp
and
mov
or
adc
and
jecxz
xlat
repz
repnz
or
pop
test
jmp
test
and
movsl
sbb
jmp
push
dec
pop
and
hlt
lods
or
outsl
int3
jmp
sbb
or
pop
fdivs
cmp
in
mov
insl
imul
sbb
push
jp
loope
pop
in
lret
fimuls
pop
ret
mov
fs
jb
ror
push
call
test
das
mov
ficomps
in
testl
or
idivb
cmpsb
jne
push
fwait
mov
jbe
add
in
clc
pop
xor
rcll
arpl
jo
xor
dec
pop
repz
pop
out
mov
dec
icebp
cmp
ret
and
mov
jecxz
pop
xchg
aad
fstpl
jl
mov
fsubrl
mov
or
icebp
sub
inc
mov
sbb
xchg
pusha
adc
mov
sbb
ds
nop
jmp
vrcpss
into
sub
movsb
bound
pop
inc
cmpsb
mov
out
push
int3
sub
fbstp
lea
fsubl
movsl
add
and
xchg
xchg
pop
test
fsubrl
cmpsl
cmc
jne
cmp
mov
sbb
add
imul
mov
outsl
cmpsb
cmp
loope
push
xchg
stc
or
add
sbb
jecxz
aam
adc
test
cmp
xchg
xchg
cmp
adc
adcl
or
lds
sbb
pop
shr
test
inc
inc
add
ficompl
sbb
lods
dec
mov
out
int
push
cmp
je
sbb
dec
jnp
cmp
push
cmp
insb
mov
inc
std
xor
mov
roll
lcall
fisubrs
adc
inc
repz
pop
sub
scas
fisubrs
pop
xchg
lcall
in
or
rorl
xlat
pop
scas
sub
fucomp
pop
or
test
insl
and
sbb
std
push
aaa
and
cmp
fisttpl
subb
pop
sahf
mov
xchg
call
fwait
push
iret
fs
xchg
cmc
push
js
or
mov
xchg
call
lea
leave
xor
jl
es
lea
sahf
cwtl
iret
mov
in
mov
xlat
mov
mov
cmp
loope
iret
lock
inc
icebp
pop
push
xor
aaa
daa
fistpll
sbb
add
cmc
fdivr
jg
cld
push
out
int3
test
and
mov
dec
nop
cmpsl
push
cmp
ficoms
iret
sub
cmc
push
mov
cmp
inc
jecxz
adc
inc
cmp
mulb
push
xchg
mov
out
nop
std
mov
jb
xor
ret
cmp
ret
jmp
popf
arpl
out
inc
stos
jno
push
mov
mov
xor
push
cmpl
inc
cs
movsl
jle
push
mov
inc
shrb
xchg
cs
icebp
xchg
pop
sahf
mov
popa
sub
icebp
test
add
mov
fbld
mov
xor
fimuls
pop
sbb
push
and
outsl
add
out
xchg
in
inc
mov
popa
pop
in
loopne
stos
movl
cs
lds
mov
push
sbb
fmul
mov
jecxz
not
push
movsl
mov
mov
sub
push
je
in
xchg
push
sub
sbbl
das
add
push
stc
mov
outsb
mov
pusha
adc
push
jae
mov
sbb
out
mov
mov
or
bound
jo
jle
mov
inc
je
cli
shrb
mov
in
out
fcmovbe
je
inc
mov
test
dec
xor
mov
mov
dec
or
jns
mov
xchg
or
stos
fwait
or
and
repz
rclb
call
stos
outsl
jno
imul
ss
lcall
repnz
sbb
fistl
test
into
fildll
cmp
pop
enter
jmp
jmp
hlt
repz
outsb
or
sub
push
adc
xchg
jmp
add
xchg
push
sar
adc
stos
in
fbstp
adc
lea
xchg
and
movsb
sub
fsub
hlt
mov
sarl
rclb
pop
sarb
xor
sbb
lahf
iret
mov
pop
inc
loopne
out
imul
test
call
mov
sub
and
mov
jmp
cmp
mov
sahf
adc
rcrl
aad
inc
sub
jbe
stc
test
or
pop
jmp
mov
xchg
gs
in
fwait
push
xchg
add
addl
and
xor
xor
pop
ss
dec
outsl
mov
daa
mov
icebp
add
xchg
sbb
movsl
movsb
scas
jle
push
cmp
sub
and
sbb
sub
inc
bound
idivl
sahf
movsl
imul
ficompl
nop
xor
repnz
jne
sar
inc
jb
lods
repnz
inc
push
fstps
sahf
cmpl
call
aad
test
fcmovnu
or
jp
pop
mov
mov
dec
adc
mov
mov
fsubrs
loopne
inc
add
movsb
mov
cmp
icebp
add
dec
xchg
enter
sbb
stc
cld
test
xchg
outsb
outsb
sbb
jecxz
cmp
push
repnz
push
pop
aam
mov
es
jmp
sub
pop
fldt
dec
sbb
or
cmpsb
repnz
cmp
ret
filds
push
pop
push
cmpsl
sub
movsb
dec
cmp
lcall
jecxz
gs
jno
aam
add
cmovae
int3
mov
push
mov
pop
clc
mov
movsl
adc
inc
cmp
cld
cmp
cltd
inc
sarl
mov
lds
enter
or
or
loope
les
aam
dec
pop
adc
insl
sbb
out
and
in
addps
pop
sbb
mov
jb
cwtl
push
mov
dec
decb
mov
pop
jns
aaa
test
mov
mov
push
cs
ljmp
and
das
push
icebp
jl
cmp
imul
sub
lds
lret
jne
cmpsb
mov
add
fsubs
call
push
and
ret
mov
sub
jno
dec
popfw
xchg
pop
cmp
loop
ss
aad
mov
jne
mov
ret
fdivrl
popfw
out
or
cmpsl
jmp
xchg
daa
mov
mov
arpl
or
cmp
add
mov
imul
lods
or
mov
sahf
pop
roll
push
xchg
jo
aaa
inc
xor
pop
int
add
iret
ja
adc
inc
jg
mov
movsl
pusha
push
adc
pop
mov
mov
dec
pop
lea
mov
sub
popa
adc
je
jno
lret
fwait
mov
in
scas
lcall
push
xor
shl
shlb
lods
cld
cmpsb
sahf
jp
testb
mov
mov
jno
cmp
les
es
adc
xor
call
cmpsl
rcrl
dec
add
mov
pop
addr16
imul
pop
dec
ds
test
lahf
cld
dec
inc
es
decl
xchg
pop
mov
push
xor
out
push
std
jo
push
arpl
pop
ret
outsb
es
stos
or
mov
bnd
stos
in
lcall
in
xor
xchg
dec
push
movsl
sti
dec
dec
iret
push
jle
jmp
and
inc
jmp
cld
popa
sub
lods
clc
sahf
inc
cld
push
jnp
int3
xor
aad
pop
mov
xchg
enter
dec
xor
aad
mov
add
loopne
cmp
outsl
repz
dec
jnp
inc
mov
sbb
mov
xchg
mov
lds
mov
or
xchg
das
xor
out
xchg
dec
fiaddl
xlat
stos
adc
lock
inc
or
adc
test
add
gs
xchg
mov
into
out
xor
adc
lock
jmp
xchg
inc
xor
ja
out
push
popa
push
pop
out
jns
add
xor
mov
aad
es
es
ret
mov
int
or
inc
adc
cmpsl
dec
mov
movsb
clc
dec
cmp
adc
inc
into
and
popa
xchg
add
mov
ret
mov
pop
in
sarw
dec
ljmp
inc
popf
cmpl
insl
adc
mov
jecxz
mov
or
test
out
or
fwait
jae,pt
push
cmp
dec
insb
aam
aaa
push
fmull
loop
aaa
inc
xor
jg
jbe
mov
iret
sbb
sti
or
iret
mov
cmp
mov
jne
lcall
sbb
xor
movsl
pusha
scas
rclb
jmp
and
cld
dec
in
jg
imul
aad
leave
push
sbb
dec
adc
jb
add
in
mov
je
arpl
or
movlps
jmp
fstp
or
hlt
cmpsb
mov
or
jl
and
fistl
mov
fidivrl
push
insl
mov
jno
adc
fldl
lods
test
mov
cmpsl
mov
out
push
jae
pop
sbb
sub
push
jno
jae
add
adc
pop
add
leave
cmpb
add
test
dec
dec
jno
es
lret
jmp
or
loope
es
in
mov
pushf
out
aam
jo
or
iret
lock
jecxz
inc
cld
xchg
push
or
mov
mov
fbstp
jl
stos
and
cmp
mov
orl
shll
cli
pop
pop
jne
repz
roll
data16
rcr
sti
cmp
fldl
dec
xchg
sbb
hlt
stos
ds
fldcw
imul
ss
scas
push
mov
negl
mov
pusha
xchg
in
mov
notb
incl
push
in
pop
cmc
enter
or
repz
xchg
aas
lock
inc
mov
fsin
sti
mov
mov
testl
jns
pop
arpl
scas
scas
bound
jns
test
aam
mov
push
lea
enter
sbb
adc
lock
cmp
bound
pop
jecxz
push
cmp
scas
dec
mov
and
xchg
adc
pop
icebp
push
inc
inc
flds
and
adc
flds
negb
in
adc
pop
mov
sub
pushf
add
cmp
xchg
adc
outsb
xchg
ret
mov
mov
dec
push
adc
loopne
xchg
out
jp
fcmovnu
aam
loop
daa
insb
into
vphaddudq
or
mov
push
imul
and
pusha
clc
cmc
add
pop
inc
stc
mov
or
fdivl
addr16
pop
pop
adc
aad
bound
int
fs
fsubrs
and
xor
pop
clc
pop
shl
fs
adc
jg
push
inc
inc
call
fimuls
jge
cmc
jnp
jnp
arpl
push
adc
loope
cmp
jne
test
dec
and
ljmp
xchg
ljmp
popf
lahf
cmp
adc
notl
dec
data16
int3
mov
xchg
rcl
cmp
cmp
adc
in
dec
mov
push
enter
xor
ja
test
adc
jp
jmp
dec
mov
std
lds
es
fs
loop
pop
shll
adc
mov
test
movl
adc
adc
push
aas
inc
lcall
jno
or
push
dec
dec
iret
sub
adc
sbb
pushf
add
dec
jmp
arpl
add
je
jo
mov
stos
icebp
and
dec
cmp
jnp
rcrl
jb
jmp
jno
cmpsb
mov
ss
fcmovu
int
fnsave
pop
insb
add
test
and
dec
or
push
insl
or
or
or
push
lcall
mov
test
das
dec
je
jle
sbb
js
xchg
aas
xorb
and
loopne
jae
das
mov
or
fsts
push
push
xchg
jecxz
and
mov
je
fmuls
push
xchg
jo
rorb
popa
xor
or
inc
adc
cltd
inc
mov
mov
repnz
inc
sbb
outsl
outsl
maskmovq
in
fmulp
mov
loope
add
shll
jmp
mov
cmp
inc
add
mov
cmp
mov
lods
cmp
inc
into
cmp
lret
insl
ret
dec
or
mov
add
inc
dec
push
out
jno
mov
xchg
scas
mov
js
sbb
mov
adc
gs
enter
loopne
inc
imul
jge
inc
fucomp
add
xor
cmp
or
call
xor
mov
mov
mov
or
cs
mov
adcb
dec
aaa
jne
sahf
push
fdivrs
mov
sub
jns
xor
sub
in
nop
lods
sbb
lret
pop
std
int3
loopne
das
iret
fnstcw
repnz
inc
sub
push
pop
jbe
xor
aas
or
mov
lsl
imul
adc
mov
xorl
fcoms
push
xor
or
xor
cmpsb
pushf
dec
icebp
push
sarl
pop
xchg
jbe
sbb
mov
jns
arpl
arpl
adc
and
loop
ja
xchg
aam
push
cmp
dec
in
mov
mov
pop
mov
cmp
xchg
mov
or
mov
stos
xor
jl
mov
mov
mov
std
leave
icebp
adc
xlat
xor
and
es
xchg
stos
pop
sub
stos
and
and
xchg
mov
xor
xor
add
mov
daa
xchg
mov
mov
mov
cld
imul
rolb
dec
jne
into
adc
jge
push
pop
push
das
cmp
xlat
int3
mov
jg
js
xlat
push
shlb
mov
loop,pn
int3
repz
pop
and
fdivr
mov
jbe
stos
lods
mov
cmp
cmp
xchg
insb
cltd
popl
jne
push
or
dec
ss
divb
pop
ljmp
add
mov
and
sti
xchg
mov
es
push
cwtl
add
leave
mov
jb
inc
sbb
test
jecxz
std
sbb
cli
adc
mov
mov
cs
data16
xchg
inc
xchg
mov
fistpl
ficoms
lods
shrb
adc
sti
testl
sub
mov
add
ja
inc
jmp
jne
or
adc
cwtl
xlat
in
add
fcompl
jmp
cmpsb
inc
popf
imul
ljmp
popl
xchg
enter
test
movsl
push
jnp
ja
jne
out
popf
cmp
cmc
mov
aam
lret
or
mov
dec
loop
les
arpl
add
adc
sbb
jecxz
gs
stc
xchg
insl
dec
stc
jb
cmp
sub
cmp
fadds
test
mov
sub
sub
loope
sahf
or
sub
push
push
js
pop
xor
outsl
jecxz
or
nop
pop
js
xchg
imul
mov
aad
out
popf
and
pop
clc
out
xor
popa
xor
les
bound
repnz
movsl
ljmp
int
sub
outsb
inc
scas
push
mov
imul
movsl
adc
jp
adc
sub
sbbl
loopne
or
or
mov
push
dec
subb
iret
mov
cmp
sbbl
or
xor
push
sbb
inc
iret
mov
sbb
leave
inc
dec
rorb
push
in
mov
and
call
push
push
int3
and
push
cmp
mov
xlat
sub
inc
xor
dec
xor
cmpsb
pop
das
adc
addr16
push
jns
test
sub
xor
call
inc
ficompl
push
movsl
jns
fstpl
mov
repz
mov
or
mov
inc
mov
xor
mov
inc
sbb
orl
lahf
outsb
xchg
lods
xor
test
push
leave
inc
rcrl
mov
add
aaa
and
inc
rclb
add
fadd
xchg
sub
jb
outsl
inc
pop
xchg
cltd
jl
fmuls
jle
dec
pop
dec
push
adc
andb
push
jae
mov
addb
jns
outsl
adc
test
mov
xchg
imul
and
cmp
mov
aam
sub
enter
cwtl
out
or
enter
push
xor
aam
pushf
imul
jl
lods
out
lahf
mov
jbe
push
jae
cmp
and
inc
insl
shll
icebp
iret
xchg
pop
fwait
xorl
mov
loop
pop
add
cmpsl
lahf
pop
mov
in
dec
xchg
add
call
int
aaa
lahf
xlat
addr16
push
adc
lods
inc
and
cmp
push
dec
pop
sahf
adc
jge
mov
sub
xchg
sbbb
push
sub
int
jecxz
xchg
not
mov
les
aaa
bound
mov
adc
sbb
inc
adc
fwait
jb
and
dec
add
pop
dec
icebp
stos
lods
mov
inc
fistl
lret
loop
daa
pop
les
js
fwait
nop
enter
insb
jp
sahf
mov
add
jmp
call
lahf
cmp
orl
fisttps
push
sub
mov
mov
nop
imul
push
enter
sub
inc
ja
ljmp
pop
dec
or
shlb
xchg
sub
addr16
dec
movsl
sbb
lahf
iret
das
mov
push
add
xchg
jp
loop
sub
push
inc
cmp
fwait
shlb
add
mov
jne
or
xchg
push
xorl
bound
push
cmc
subl
aad
lea
mov
dec
add
push
mov
aad
sub
lods
out
jae
jbe
clc
lahf
bound
mov
stos
and
mov
adc
sbb
lods
mov
das
push
lods
xchg
inc
pusha
sahf
bound
jno
cli
xchg
xor
enter
push
lds
mull
mov
aad
xor
jno
setno
or
cmpsb
add
es
cld
xchg
int3
jle
imul
mov
ljmp
push
cmpsb
lods
sti
cs
dec
adc
stc
pop
cwtl
cmp
pop
fwait
in
movsl
mov
popa
movsb
rsm
xor
scas
pop
mov
pusha
push
jp
push
loope
jno
xlat
pop
pop
sub
ret
jp
mov
out
inc
and
loopne
nop
test
std
push
aas
cs
cs
push
xorl
sbb
xor
mov
mov
jnp
xchg
imul
jle
jne
pop
jne
fimull
jae
mov
imul
push
shll
test
ljmp
mov
fwait
cli
lods
mov
rol
ss
fldt
outsb
add
inc
stos
stc
sub
push
sarb
rcll
nop
jge
inc
sahf
xchg
xor
mov
in
dec
and
lea
pop
jmp
sti
jg
outsl
fistpl
or
jnp
dec
out
pop
pop
stos
btc
mov
fwait
pop
jmp
sti
jg
outsl
fistpl
or
jnp
dec
out
pop
pop
stos
psllq
repz
fwait
pop
jmp
push
jg
outsl
fistpl
or
jnp
imul
sub
das
lcall
out
jo
adc
jecxz
test
mov
movsb
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
sub
jnp
imul
cmp
push
dec
sbb
pop
fisubrl
jmp
fwait
call
stos
fcomps
dec
cmp
imul
push
sub
test
mov
fwait
call
stos
fadds
push
cmp
jae
add
js
dec
sub
xchg
call
cwtl
fwait
mov
cld
fdivs
sub
jnp
sbb
mov
pop
mov
in
jb
mov
xchg
out
mov
arpl
adc
and
xor
mov
fadds
mov
jae
enter
cmp
sub
repz
jmp
mov
inc
ret
lea
fwait
call
stos
fstps
pop
cmp
imul
or
lret
jbe
addr16
stos
stc
or
mov
in
adc
fucomi
or
stos
arpl
mov
mov
stos
sarb
insl
in
or
andl
and
inc
test
ficoms
fmuls
cmp
imul
push
xor
test
mov
sub
clc
mov
inc
cs
dec
pop
pop
push
sub
cmpsl
rorl
test
or
imul
dec
ja
or
daa
js
cwtl
in
scas
aam
fisubrs
xchg
int
iret
mov
js
dec
pop
jl
insb
push
add
js
dec
sub
test
mov
fwait
call
stos
fcomps
dec
cmp
imul
push
sub
test
mov
fwait
call
stos
fcomps
fs
ja
imul
mov
in
das
dec
jge
and
stos
mov
pop
lods
fisubl
xor
or
jns
shll
mov
add
mov
cmp
cmc
fisubs
adc
mov
dec
test
filds
fsubr
inc
div
add
jp
add
mov
mov
cmpsl
insb
ret
ret
pop
in
into
xchg
arpl
lret
inc
xlat
mov
dec
js
jbe
mov
xlat
ja
add
notb
inc
and
push
gs
mov
jb
sub
push
es
scas
push
xchg
orb
dec
mov
stc
mov
push
cmp
push
out
cld
mov
pushf
push
pop
adc
loopne
dec
mov
sub
jne
pop
xchg
mov
push
xor
push
mov
or
inc
std
mov
and
jno
xor
mov
mov
xchg
aaa
xchg
outsl
in
pop
or
add
add
and
xor
adc
mov
adc
idivl
repz
dec
mov
sbbl
aaa
subl
sub
jnp
je
adc
push
mov
lea
add
cmc
dec
shlb
fdivs
mov
pusha
fcmovu
insb
dec
mov
and
sub
cmp
daa
lods
test
bound
out
inc
and
mov
add
mov
std
adc
aam
notb
mov
xlat
icebp
xchg
sub
lahf
icebp
mov
test
cwtl
call
pop
lods
jnp
lea
pop
push
fsts
push
sub
shlb
jne
pop
push
sbb
movsl
mull
loopne
test
lds
mov
gs
gs
stos
mov
in
push
pop
es
imul
nop
mov
lret
jb
lods
cld
iret
push
mov
clc
rcrb
xlat
jmp
dec
es
and
push
inc
andb
xchg
pop
and
lret
dec
mov
and
outsl
pop
add
jne
loop
pop
lea
jne
or
in
nop
sub
cli
icebp
xchg
movsb
jmp
ljmp
scas
mov
mov
mov
xor
or
loope
push
pop
stos
out
notrack
in
cld
pop
pop
pushf
and
xor
inc
dec
ret
and
jl
pop
pushf
or
push
dec
cmp
pop
fisubrl
adc
lock
and
out
jnp
sbb
sbb
ret
into
mov
fs
insb
dec
mov
ds
pop
bound
mov
adc
and
adc
movsb
jb
or
nop
fists
imul
call
into
sahf
mov
lcall
jmp
add
ljmp
xor
dec
cli
cs
mov
fldl
in
push
stc
push
xchg
mov
cmpsb
gs
pop
xchg
or
addr16
outsb
shll
data16
nop
in
dec
lds
cmp
and
cmpb
xor
int3
xor
add
sbb
pusha
xlat
dec
addb
push
aas
scas
adc
xlat
sbb
mull
fnstcw
and
aad
mov
jne
pmaddwd
test
sub
xchg
loope
shlb
loopne,pn
jmp
lret
or
xlat
mov
dec
and
pop
push
lods
mov
push
iret
fwait
mov
fsubl
add
subl
cli
popa
adc
mov
sarl
cmp
mov
ror
xchg
insl
lret
xor
mov
cmpsl
movsl
push
jmp
inc
mov
mov
mov
add
hlt
jno
or
ret
out
push
add
jbe
shlb
xchg
mov
dec
mul
sbb
fsubl
jns
mov
jae
push
arpl
dec
pop
repz
xchg
adcb
mov
dec
mov
inc
push
daa
mov
rorb
aam
add
aad
cli
arpl
int
mov
xchg
in
inc
ds
insb
jmp
mov
insl
cli
add
inc
mov
mov
push
in
inc
shrl
or
pop
ja
add
aaa
dec
aam
xchg
cld
jmp
shr
sahf
jle
sbb
or
sahf
mov
popf
sub
sbb
dec
mov
imul
rcll
xor
adc
shrl
adc
imul
lahf
fnsave
fwait
xchg
push
lods
mov
sbb
xor
into
in
mov
sahf
rorb
idivl
push
addr16
mov
loopne
imul
jnp
hlt
mov
xchg
ficomps
lahf
testl
mov
push
adc
shlb
fs
pop
push
jmp
scas
inc
es
loop
add
addb
sbb
addr16
xchg
inc
pop
pop
and
inc
jecxz
lods
sbb
nop
repnz
push
sub
or
add
mov
inc
shlb
lea
mov
sub
sub
cmpsl
adc
dec
xor
push
or
xchg
rcr
jecxz
rclb
mov
push
addr16
sub
pop
jo
hlt
xlat
add
iret
xor
mov
nopl
push
pop
and
cmp
sub
mov
mov
icebp
or
lcall
dec
sbb
rol
fisubrs
inc
sbb
and
sbb
das
push
fnop
es
xchg
push
das
adc
mov
push
dec
adc
push
lahf
sub
push
xchg
mov
adc
rcrb
mov
mov
jge
andb
mov
ret
sub
adc
push
cmp
shrb
mov
lahf
scas
push
xchg
push
dec
jns
sbb
out
aas
sub
sbb
xor
mov
jae
xchg
imul
jl
push
out
mov
out
lret
popa
mov
stc
mov
dec
loop
xchg
mov
jb
notl
das
std
jb
or
rorb
sarl
mov
in
icebp
stos
out
mov
xchg
rcrl
int
ss
jmp
jmp
repz
orl
lods
mov
mov
inc
cs
je
sbb
js
lock
push
ffree
inc
in
mov
js
std
cwtl
cmp
push
jge
adc
daa
add
jne
xchg
ret
cld
xchg
cmp
ljmp
cmp
or
bound
aaa
in
ljmp
repnz
cmp
and
fsubl
cld
jle
fldt
incl
dec
pop
gs
fnstsw
sbb
adc
and
je
inc
dec
mov
xor
xor
push
movsl
shlb
fildll
jecxz
aaa
cmp
push
es
dec
xchg
mov
push
cmpsb
js
and
dec
sti
jecxz
insb
enter
xor
rcll
movsl
jno
mov
out
cmc
xor
cmp
cmp
dec
jge
sahf
or
adc
insb
cs
pop
mov
jg
lea
mov
inc
or
out
adc
sub
aad
ds
out
cli
pushf
pop
addb
jae
loope
jg
dec
adc
sub
pop
cmp
push
addr16
les
rcl
repz
xchg
fmull
inc
scas
pop
ret
or
sti
xor
sub
dec
cmc
add
ss
das
mov
fiaddl
jo
push
lret
mov
sbb
testl
fisubs
mov
aaa
sbb
insl
cmp
testb
test
hlt
test
xchg
test
mov
into
cmc
dec
mov
rorb
pusha
mov
push
mov
fsubl
sarl
xchg
adc
inc
testb
and
mov
outsl
sbb
jmp
jecxz
lods
sub
mov
mov
je
icebp
fadds
jge
rol
push
cmp
adc
xor
data16
jmp
or
testb
addr16
mov
lcall
popa
fsts
sbb
jle
jb
dec
sbb
and
lahf
mov
cmp
sub
lret
sbb
out
dec
xlat
mov
add
pop
test
sbb
xchg
shlb
inc
or
mov
dec
adc
mov
popa
cld
ret
cs
inc
sbb
jl
js
mov
inc
sbb
std
mov
mov
mov
arpl
add
dec
adc
sub
mov
sbb
jg
or
dec
testl
in
mov
or
sahf
andl
fildll
in
mov
mov
pop
mul
or
xchg
lea
pop
push
or
sbb
cltd
iret
lds
adc
outsb
adc
and
jl
jp
imul
xor
mov
mov
aas
movl
or
dec
test
xchg
test
mov
sub
xor
sub
sub
ja
cli
push
call
test
test
and
sbb
dec
and
mov
lock
cmp
les
xchg
mov
xor
lret
in
xchg
dec
sub
sahf
adc
cmp
roll
push
das
imul
add
loope
gs
add
fcoms
xor
sub
mov
nop
jle
dec
adc
decl
into
in
inc
cmpsl
pop
and
sub
adc
xchg
popf
cmp
sbb
stos
outsl
xchg
pop
sub
lds
out
ret
push
inc
lcall
loopne
pop
xor
ror
inc
and
push
adc
cld
push
into
das
inc
lods
add
add
das
enter
test
pop
sub
nop
nop
xor
xor
and
xchg
jmp
inc
jno
mov
sub
out
sahf
dec
inc
sub
mov
jmp
dec
fistps
scas
mov
frstor
out
jbe
sahf
call
je
xchg
aam
sub
cmp
sub
jmp
pop
loopne
pushf
add
aad
push
clc
cmp
fistl
fdivl
repz
push
in
jmp
jle
loope
xchg
data16
subb
sti
es
test
or
cmpb
data16
pop
mov
in
cltd
inc
xor
sbb
jne
pop
js
popl
clc
fisubl
pop
lret
push
xor
sub
fldl
repz
rclb
push
sub
je
int3
out
push
pop
mov
sub
jle
mov
mov
adc
adc
sub
mov
cmpsb
cwtl
mov
test
syscall
jl,pt
data16
in
sahf
ffree
pop
mov
push
and
in
jno
repnz
imul
inc
aas
sbb
ss
mov
mov
jecxz
inc
or
cltd
pop
sub
pop
ds
push
and
inc
add
repz
outsb
aaa
xchg
pop
in
pop
mov
pop
adc
pop
sub
add
insb
jb
or
dec
into
jae
mov
mov
leave
pop
mov
nop
and
imul
out
pop
pop
xchg
lea
push
rclb
lods
dec
ljmp
inc
add
sbb
or
sub
and
mov
ss
xchg
movsl
jbe
push
dec
cmp
xor
or
shll
inc
loopne
sub
mulb
adc
mov
xor
les
cld
pop
dec
mov
ljmp
pusha
adc
sbb
outsl
loop
adc
pop
sub
pop
lods
imul
mov
ret
dec
xor
pop
sub
rcrb
inc
add
repz
xchg
push
sub
jns
sub
ja
xor
mov
shll
sahf
nop
scas
mov
xor
int3
inc
pop
lods
lods
pop
out
mov
push
push
shr
dec
cmp
dec
add
popl
inc
in
lods
test
jecxz
cmc
mov
lret
add
fmull
es
lds
hlt
xchg
outsb
pop
cmpsl
into
sub
repz
movsl
fldl
addb
mov
sub
enter
add
arpl
fucom
xor
icebp
lret
popa
je
add
and
popf
enter
ss
insl
xor
shrb
out
cmp
int
jmp
pop
xor
stos
insb
inc
rcll
pushf
pop
nop
in
or
add
dec
mov
cmp
into
les
adc
dec
lahf
xchg
fcomps
pop
nop
cmpsb
outsl
xor
lret
sub
pusha
mov
sub
or
push
push
mov
das
dec
dec
adc
push
adc
xchg
fisubrl
std
mov
rcrb
ret
push
jmp
jo
outsb
or
js
xchg
dec
in
pusha
bound
xor
add
ret
jne
pop
leave
inc
add
jo
hlt
fwait
or
push
inc
fldt
jnp
mov
add
mov
pop
xchg
push
clc
stos
repnz
xchg
xchg
sub
pusha
inc
icebp
xchg
lods
aaa
push
push
testb
dec
es
mov
pop
call
ret
add
test
jne
pusha
test
cld
les
xchg
jo
sbb
sub
push
or
lds
sarl
sub
int3
sub
popf
sub
xor
inc
dec
sub
loope
mov
ljmp
enter
pop
push
pop
or
and
push
aad
mov
cwtl
ret
sbb
insb
push
insl
xor
in
inc
int
aad
pushf
int3
in
pop
cwtl
mov
pop
test
iret
fwait
bound
fs
or
pop
cltd
jbe
lds
and
insl
push
je
sub
inc
testb
mov
xor
repz
mov
decb
or
das
repz
sbb
lock
lret
notb
and
mov
or
ja
out
pushf
lock
fisttpll
test
inc
shll
ja
loopne
ja
mov
ja
xchg
lahf
loopne
test
rcrb
hlt
mov
insl
xor
xor
or
inc
test
sbb
shlb
mull
cmp
jo
shll
popa
push
fstp
xchg
mov
fldenv
mov
nop
or
push
jge
int
add
jl
pop
stos
mov
xorl
sbb
rcr
inc
loopne,pt
lcall
dec
xor
ds
imul
cmpsl
xor
push
cmp
mov
lock
mov
mov
aad
pop
idiv
and
and
test
push
in
repnz
cmpxchg
pop
mov
out
enter
add
or
push
sub
imul
testl
cmp
mov
andb
lret
negb
in
xchg
outsb
jbe
cmp
in
dec
mov
iret
and
pop
xchg
mov
push
mov
xchg
in
jne
in
ret
mov
jge
movsl
xlat
stos
cmp
pop
stos
and
into
das
lock
fcoml
jbe
call
addr16
mov
rolb
cmp
sub
andb
popf
cltd
push
hlt
mov
pop
jns
mov
cmpsl
dec
outsl
xor
adc
and
fs
call
pop
js
loop
scas
mov
mov
and
cld
add
in
jno
cmp
cld
addr16
fcoml
or
mov
and
es
mov
movsb
mov
xlat
jnp
out
dec
enter
test
shrd
sub
aam
mov
mov
xor
aam
pushf
lock
ljmp
sar
push
add
sub
pop
sbb
fimull
test
aad
inc
pop
bound
les
xchg
add
sarb
ljmp
cmp
enter
subl
shlb
or
mov
push
mov
ret
xchg
inc
hlt
pop
sub
push
fsubl
mov
sub
lock
cli
push
cmp
iret
mov
xchg
and
xchg
shrb
insb
and
and
mov
cltd
xchg
xor
mov
ja
push
ficompl
iret
mov
in
xor
scas
fsubrp
sbb
leave
lret
lret
push
mov
cmpb
les
jne
je
and
test
cmp
pop
ja
xchg
mov
jne
fs
movnti
cltd
jg
pop
mov
fildl
lea
inc
jle
fsubrl
or
ret
push
and
mov
fs
adc
out
xchg
cli
shll
repz
out
pop
ljmp
pop
sub
mov
cltd
fldt
mov
lahf
and
jns
fs
scas
pop
outsl
jno
outsl
lods
jmp
lock
rcrb
sub
out
subl
sbb
mov
test
sub
mov
lock
pop
mov
mov
adc
mov
mov
bound
pop
sub
push
call
lret
mov
mov
sub
jns
test
outsb
sub
cli
xchg
cmp
shrb
pop
dec
sti
jnp
cli
mov
sbb
mov
shrl
jecxz
nop
pop
push
mov
fildll
sahf
aad
xchg
push
jg
adc
mov
in
lret
scas
or
fisttpll
jg
fldenv
pushf
cli
fnsave
js
repnz
mov
mov
sbb
sub
sbb
clc
movsb
sbb
cmp
or
mov
dec
adc
push
es
sahf
mov
fdivrp
jle
fmuls
pop
xchg
aam
sbb
out
ljmp
jmp
lret
pusha
movsl
sbb
ss
dec
cs
loope
fistpll
xchg
inc
add
jl
sbb
fdivrl
dec
or
xchg
dec
push
jecxz
sarb
xor
imul
insb
ror
sti
div
push
and
mov
loopne
inc
and
add
mov
mov
aas
repnz
mov
or
idivb
inc
pop
mov
scas
mov
or
mov
xlat
sti
bound
or
adc
out
xchg
pop
jg
imul
mov
sarl
mov
mov
out
iret
sarl
sbb
divl
xchg
dec
test
sub
imul
test
xchg
pop
xchg
and
or
cmp
xor
insl
stos
jnp
jl
dec
fisttpl
lcall
lods
pushf
shl
fdivrl
incl
int
in
jge
mov
inc
ss
bndstx
in
mov
pop
ficompl
xor
adc
ret
out
fbstp
es
icebp
test
pop
mov
insl
mov
fcoml
daa
mov
sub
cmp
adc
inc
push
pop
cmpl
xlat
lods
inc
outsb
push
or
push
cmp
ljmp
mov
fdivrl
inc
cltd
movsl
dec
pop
adc
push
in
fidivl
mov
ret
insl
pop
daa
add
adc
inc
pop
mov
outsl
bound
push
arpl
inc
inc
jae
cmp
imul
push
add
and
pop
cmp
cmp
sub
insb
fsubs
int
cmpsb
nop
sarb
adc
fcmovb
popa
sbb
inc
test
clc
xlat
push
dec
jecxz
mov
ja
add
cs
or
arpl
jnp,pn
add
out
pop
inc
xor
pop
sub
scas
or
adc
push
lahf
push
xchg
repnz
imul
jge
idivl
shll
dec
out
xor
std
jo
std
sbb
mov
jo
cltd
sbb
scas
lahf
cmc
flds
dec
in
xchg
test
lods
outsl
leave
insl
dec
ds
pop
lds
fidivrl
mov
xlat
mov
push
mov
jl
sub
pushl
push
xor
pushf
jle
movsb
push
imul
jecxz
ss
ret
int3
subl
cmp
sub
adc
mov
xchg
cli
sub
pop
cmp
sub
jnp
scas
test
jns
sbb
imul
jo
jg
jp
and
es
or
xchg
jnp
sbb
pop
push
push
imul
in
js
or
sbb
mov
mov
add
push
dec
mov
fiaddl
test
ret
insb
aaa
add
xor
dec
cmpl
test
xor
movsl
inc
fimuls
stc
pop
arpl
push
cmpsl
lcall
lret
mov
movsb
mov
inc
adc
xor
push
ret
lea
pop
repz
mov
in
sbb
hlt
nop
mov
mov
fildll
inc
inc
insl
std
fistpll
xchg
or
sbb
js
dec
sub
test
mov
fwait
call
stos
fcomps
dec
cmp
imul
push
sub
test
mov
fwait
call
stos
fcomps
dec
cmp
imul
push
sub
test
mov
fwait
jmp
test
cmp
imul
or
mov
push
xor
push
mov
out
in
pusha
add
inc
aaa
push
daa
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
dec
xchg
xor
popa
xlat
lods
imul
pop
mov
inc
mov
cmpsl
insb
mov
xchg
out
negl
or
lods
daa
in
aaa
repnz
int3
pop
mov
inc
mov
cmpsl
in
mov
xchg
divl
hlt
xlat
cld
daa
adcb
lods
jbe
xor
and
sub
and
aam
sbb
cmp
sbb
iret
out
inc
ror
inc
outsl
addr16
addr16
mov
aas
fs
adc
jb
iret
mov
js
adc
and
daa
jae
addr16
push
sub
jl
pop
in
int3
xchg
mov
pop
ja
xor
cmpb
inc
inc
jb
ja
ret
cmp
adc
and
shl
sbb
fdivrs
divl
scas
mov
rcll
sbb
outsl
scas
jle
lods
inc
idivl
mov
adc
lods
ja
inc
stc
test
mov
out
aas
cltd
iret
cmc
xchg
add
adc
int3
add
lods
and
inc
pushf
inc
dec
cmpsl
insb
mov
xchg
xchg
cmp
push
xlat
push
daa
jle
add
rclb
fsubl
ja
inc
call
negb
xchg
xchg
push
sbbb
subl
mov
arpl
and
adc
ds
sbb
rcrb
loop
xchg
push
mov
jo
jg
les
mov
or
jbe
adc
cmp
jecxz
ljmp
sub
sbb
or
cld
daa
in
aaa
faddl
int3
pop
mov
inc
mov
cmpsl
insb
mov
xchg
out
negl
or
cld
daa
in
aaa
faddl
int3
pop
mov
inc
mov
cmpsl
test
hlt
push
push
jo
inc
sbb
xchg
mov
sbb
dec
dec
adc
pop
dec
imul
test
xor
stos
adc
lcall
arpl
imul
scas
xor
sbb
sbb
xor
mov
lock
ror
mov
ret
add
roll
xchg
jge
mov
push
in
and
mov
push
aaa
cwtl
mov
mov
enter
inc
sub
push
ds
or
jg
pop
or
test
fdivrl
push
movsb
outsb
xor
cmp
adc
lods
stc
int
and
xchg
push
mov
sarl
inc
dec
ret
push
lahf
xchg
or
sahf
enter
dec
stos
sbb
scas
insl
jb
fisttpll
aaa
mov
mov
jns
shlb
xchg
pop
rorl
fadd
ja
and
cld
jge
fnsetpm(287
test
push
fwait
int3
and
xchg
push
sbb
and
inc
stos
push
pop
mov
mov
pop
push
das
mov
push
pop
jg
cs
mov
mov
xor
pop
cmc
jbe
xchg
imul
cli
or
in
outsl
ret
mov
xchg
xchg
stos
add
jnp
cltd
aaa
sub
mov
inc
xorb
shrl
data16
outsl
negl
popf
jl
cli
jb
cld
stc
push
inc
orb
jmp
mov
sub
nop
sar
inc
pop
mov
pop
jecxz
mov
push
out
sbb
adc
fisttps
sti
outsb
ret
dec
pop
add
dec
inc
inc
nop
pushf
xchg
add
dec
mov
sti
adc
stos
test
testb
pop
std
ficoms
add
mov
push
dec
popa
repz
pop
pop
pop
movsl
mov
push
insb
orl
adcl
mov
std
sahf
cli
jecxz
into
mov
push
jo
vunpcklps
mov
js
out
sahf
jae
sub
jno
sbb
mov
not
xor
fcoml
or
loopne
cmp
mov
sub
dec
mov
cwtl
cmp
mov
or
pushf
mov
cwtl
push
push
cwtl
ds
fiadds
pop
mov
std
mov
inc
cmp
fsubrl
aaa
xor
test
outsb
lods
sub
das
int
jb
jno
nop
icebp
daa
sub
push
jg
fsubs
lock
aas
sbb
jmp
or
jl
scas
fs
js
cwtl
lcall
dec
push
cs
pop
movsl
push
xor
sarl
sbb
lahf
rep
int
enter
add
test
stos
movb
or
inc
lock
aad
repz
mov
ss
gs
pop
add
repnz
aas
mov
mov
sarb
push
xlat
popa
cmp
gs
addl
mov
mov
stc
cwtl
xchg
es
shr
cmp
loopew
xor
sub
pop
push
ss
sbb
push
test
test
ret
loopne
cli
fldt
push
xchg
fs
and
ret
iret
xlat
adc
push
sub
ret
ret
cmp
pop
push
js
dec
arpl
pop
lods
mov
out
lods
jl
jmp
xchg
cmovb
sahf
push
cmc
mov
sti
sbb
inc
push
xchg
fldt
jp
shr
pop
imul
mov
loope
int3
in
loope
xchg
sub
repnz
mov
stos
subl
inc
movntq
pop
ror
mov
nop
icebp
inc
xor
adc
xchg
cmpsb
xorl
push
icebp
mov
mov
pop
movsl
jns
sub
xchg
pop
xor
jne
std
inc
or
mov
mov
mov
push
fsubl
pop
adc
xchg
sub
cmp
sbb
or
cld
insl
cmc
mov
aam
lock
xor
mov
hlt
mov
repz
lds
aad
dec
lea
mov
mov
xor
and
cmp
hlt
jbe
add
mov
movb
repz
pop
aad
repz
ret
scas
icebp
dec
stc
aad
mov
in
mov
sbb
ja
sub
cld
jae
xchg
dec
movzwl
inc
sbb
xchg
or
addl
in
push
xor
or
inc
lods
cmp
sti
xchg
bound
fisubl
adc
jne
test
inc
pop
fcmovnbe
add
mov
xchg
cmp
adc
sbb
inc
or
jbe
in
fpatan
xor
pop
push
jmp
clc
mov
sbb
popa
sbb
aam
nop
out
pop
jmp
mov
xor
andb
mov
lahf
lock
mov
std
pop
insl
xor
test
mov
scas
cmp
jbe
adc
inc
enter
xor
xor
xchg
repnz
jb
jp
push
scas
sbb
ds
ljmp
jmp
mov
xlat
cmpsl
xor
notb
push
lods
cmp
lcall
sbb
lret
cwtl
mov
nop
mov
jle
xor
or
cwtl
pop
push
inc
add
xchg
gs
inc
jmp
fisttpl
sbb
rolb
dec
adc
sarb
or
mov
push
mov
mov
sub
inc
sub
out
xchg
pop
aaa
andb
or
jmp
ss
aaa
xchg
push
ret
aaa
stos
jb
daa
jo
jp
pop
pop
or
mov
je
push
test
popa
sub
fs
push
dec
lret
jne
andl
and
popl
daa
inc
jno
xorl
lret
add
cmp
je
cld
pop
xchg
dec
mov
xor
mov
push
xchg
dec
outsw
sahf
nop
popf
push
hlt
sub
inc
push
sbb
fisubrs
stc
popa
daa
mov
and
rorb
dec
fmuls
xchg
push
stc
cwtl
xchg
mov
sbb
cmpl
stos
addl
ret
ret
rcll
add
nop
mov
dec
pushl
push
mov
cmp
pop
test
outsl
pusha
add
cmp
out
xchg
aad
mov
lock
loopne
imul
jne
pop
cmp
lret
outsb
fldl
push
pop
sbb
lock
jb
sub
jge
mov
in
mul
push
sub
jns
imul
push
sti
test
int
cmp
sub
adc
fwait
clc
push
inc
fs
inc
mov
icebp
or
adc
cs
dec
and
push
push
jne
push
std
loope
adc
testl
mov
push
and
mov
adc
int3
roll
mov
imul
jle
xchg
mov
leave
cli
jge
out
int3
jno
mov
lret
std
xor
mov
loope
add
inc
mov
mov
mov
insb
dec
mov
imul
ljmp
inc
ret
mov
jecxz
mov
push
testb
sbb
mov
sub
jb
imul
outsb
cld
mov
fs
inc
test
lea
decl
mov
jb
js
and
dec
mov
addr16
rcrb
and
out
xchg
sbb
sarl
lret
and
cmp
movl
cmp
daa
lcall
jns
popa
and
ret
add
cmc
dec
push
insl
push
and
push
lods
sahf
add
jns
das
jge
repnz
rclb
cmp
ret
cltd
vmovlps
out
sbb
test
pushf
dec
pop
in
stos
movsb
inc
and
add
sbb
fs
out
daa
adc
adc
cmpsb
in
mov
inc
push
es
sub
adc
in
add
ftst
pop
fstl
bnd
outsl
push
dec
cwtl
and
xor
mov
rcr
data16
add
scas
pop
pop
ja
idivl
pop
sbb
andb
stos
jp
xchg
mov
push
popf
add
fistl
mov
sahf
pop
xor
dec
bswap
lret
and
dec
mov
add
push
int
sub
jecxz
mov
fsubrp
sub
cmp
push
jns
shrb
jge
pop
xchg
outsl
sbb
jno
out
adc
ja
daa
paddsw
and
scas
rclb
sbb
or
sub
daa
xchg
aad
add
push
enter
xor
aad
jecxz
mov
sub
sub
pop
sub
add
sbb
or
sbb
cmp
jp
ret
in
jno
mov
jno
or
dec
popf
cmpb
dec
sub
jnp
jp
lret
mov
jl
sbb
call
movsl
lods
push
outsb
or
sub
pop
mov
insl
sahf
inc
aam
in
jmp
push
aas
lret
iret
xor
fwait
xchg
dec
cltd
bound
dec
fistpl
mov
push
mov
sub
sbb
xchg
stos
xchg
xor
xchg
lods
push
aas
and
fs
rclb
jne
push
dec
xchg
rclb
sbb
mov
rolb
lahf
sub
cmp
outsl
ret
ds
jno
add
xor
scas
xchg
in
adcl
arpl
xor
and
mov
push
stc
into
lahf
dec
xchg
arpl
dec
int
adc
xchg
xor
sub
jae
adc
fists
scas
and
pop
mov
adc
nop
push
sbb
sub
push
or
mov
outsl
arpl
jb
push
jmp
stc
aaa
inc
cmp
mov
lds
bound
cld
fmuls
xchg
or
inc
sub
sti
stos
pop
or
adc
sbb
fnstsw
popf
and
xorl
push
mov
ja
jp
daa
jge
xchg
or
sbb
scas
scas
xor
xor
jbe
pushf
in
xor
mov
stos
inc
and
push
es
insb
push
rorl
outsb
mov
movsb
out
xchg
mov
jo
add
shrb
mov
lock
xchg
mov
dec
dec
in
sbb
or
push
mov
clc
sub
cmp
jns
js
jge
jmp
lock
dec
cwtl
pop
add
jl
xlat
test
roll
sub
sub
in
mov
mov
mov
sub
dec
out
aam
nop
dec
lcall
xchg
xor
nop
dec
sarl
mov
and
ret
dec
ret
gs
leave
test
mov
add
cmp
in
loope
ds
lret
push
pop
punpckhbw
test
push
push
mov
adc
enter
and
mov
imull
inc
lahf
loop
shrl
icebp
cmp
mov
push
mov
test
jmp
pop
xchg
xor
cs
in
add
call
repnz
lea
gs
in
mov
aas
mov
ret
fidivrs
stc
sub
popf
cmp
xor
pop
rclb
or
cld
gs
add
push
mov
sub
pop
xchg
lods
clc
adc
mov
xor
xchg
movl
aas
push
loop
test
shll
pop
sbb
roll
adc
cwtl
mov
pop
jnp
pop
jne
iret
js
int3
dec
clc
and
pop
mov
nop
or
imul
jecxz
std
jecxz
clc
insb
negb
stos
inc
insb
mov
cmc
adc
add
movsl
inc
pop
popf
out
dec
mov
mov
in
shll
mov
push
shlb
push
mov
flds
and
and
adc
je
cmp
jns
mov
xchg
and
insb
les
mov
fildll
push
pop
dec
adc
mov
loope
gs
xchg
movsl
inc
or
fstpt
adc
imul
pop
rol
cmp
jg
sub
dec
push
xor
adc
fs
add
jecxz
in
fnstenv
xchg
lock
add
ljmp
mov
dec
inc
lea
out
jp
divb
jle
rorb
out
cmpsl
inc
lock
mov
sub
inc
and
aas
lcall
addb
push
push
dec
mov
fsub
mulb
cmp
sub
sbbb
sbb
mov
mov
lods
shll
arpl
push
fwait
daa
mov
push
inc
xorb
arpl
shrb
cmp
mov
adc
fstpt
xor
cli
mov
dec
pop
pop
xchg
sub
jle
insb
and
add
ljmp
cs
in
jns
push
push
push
aam
xor
xorb
test
mov
dec
lret
inc
sub
mov
aaa
xchg
int
out
push
stos
repnz
mov
push
sub
divb
sar
daa
pusha
jl
lods
stc
or
add
repnz
and
xchg
sub
xchg
aaa
mov
sbb
test
mov
aaa
mov
cmp
dec
add
mov
mov
add
mov
test
scas
outsb
int3
fdivl
mov
inc
mov
or
andl
hlt
test
mov
jmp
pop
lea
push
xchg
sarb
and
pxor
out
rclb
inc
jnp
dec
inc
lea
sub
out
fs
add
dec
mov
and
push
jge
and
jle
mov
cmp
outsl
pop
sub
push
xor
sahf
imull
mov
out
clc
out
push
and
and
call
mov
fs
jmp
sbbb
dec
lods
sub
sbb
inc
pop
mov
mov
xchg
inc
scas
and
add
into
add
mov
fstp
pop
xchg
insb
in
jg,pn
pop
hlt
mov
mov
dec
sub
cld
aas
in
jge
outsb
mov
stos
add
xchg
scas
or
int
pop
adc
sub
das
push
jne
pop
dec
push
xchg
fcmovnu
and
rcrl
mov
or
cmc
rcrb
loop
iret
outsl
and
call
jge
iret
xor
mov
inc
fs
lods
fstl
mov
dec
mov
pop
lcall
pop
pop
fidivs
add
lahf
mov
push
mov
js
dec
add
popf
pop
fisttpll
enter
jbe
pop
loopne
test
push
imul
push
arpl
sarl
dec
orb
lcall
mov
or
xor
es
fdivrp
cmp
cmp
lret
in
xchg
mov
pushf
inc
cmc
cmp
jae
mov
stos
mov
scas
subb
pop
inc
call
xchg
add
pop
lcall
jmp
or
sub
daa
adcl
mov
dec
push
fxch
pushl
in
push
mov
or
imul
jnp
lock
mov
and
ror
pop
push
mov
fmuls
inc
in
xor
cmpsb
sub
push
fwait
les
out
xor
or
insb
mov
arpl
mov
cmpsb
push
int
dec
mov
lods
push
ljmp
cmpsl
mov
xor
xor
pop
pushf
mov
and
ljmp
fldcw
jb
add
mov
cmp
into
fsub
mov
ja
xchg
mov
fadd
test
sub
inc
mov
push
jb
fmuls
xchg
or
fsubl
push
cmc
push
into
insl
test
jb
fmuls
mov
cmp
enter
push
out
push
fbstp
jae
jle
pop
rcrb
test
or
jg
loop
repz
fsts
jecxz
mov
or
and
lods
shll
repnz
inc
decb
add
pushf
push
sbb
mov
dec
cwtl
ret
movsb
test
dec
dec
ret
rolb
inc
jp
rcrb
xorb
scas
jae
xor
aas
sbb
fs
push
push
mov
xchg
push
mov
or
movsl
dec
repnz
jg
pop
add
mov
xchg
rorb
jbe
inc
pop
mov
sub
repnz
insl
test
mov
inc
mov
mov
call
loope
cld
sbb
push
into
mov
dec
inc
nop
outsl
into
outsb
in
inc
fmul
in
xchg
rorb
inc
cmp
or
scas
popa
dec
inc
testb
in
inc
xchg
daa
out
add
sub
mov
sub
xchg
imull
icebp
push
loopne
popa
mov
pop
aas
icebp
jno
dec
or
mov
andb
sahf
movsb
xchg
enter
inc
inc
xchg
push
cs
sbb
dec
stos
enter
cli
jno
xchg
clc
jnp
fs
sbb
dec
add
fs
rorb
push
jns
pop
sub
and
imul
jmp
push
push
push
xor
mov
clc
shrb
aas
mov
call
pop
int3
push
out
adc
jl
es
add
repz
or
add
std
mov
sahf
ret
loope
aam
mov
jae
int3
sbb
popa
cmpb
cltd
inc
pushf
sub
add
push
xchg
inc
or
mov
sub
sbb
and
data16
repnz
and
pop
popa
cmpsl
lock
jae
popf
mov
mov
bound
fldl
gs
pop
mov
push
mov
arpl
and
test
push
dec
xchg
das
outsl
sbb
cmpsb
loopne
pop
push
cmp
lods
cs
and
add
loop
cmp
loope
mov
out
adc
rclb
lods
iret
push
xchg
dec
inc
sti
adc
push
sbb
xchg
adc
inc
dec
cmpl
xor
dec
sub
incl
repz
push
mov
xor
pop
imul
out
add
imul
mov
ret
push
push
jle
aad
in
mov
test
cmc
scas
mov
js
cmp
xor
jmp
mov
stc
mov
orl
jo
lahf
shl
aam
mov
cmc
jp
adc
mov
lahf
cmc
std
and
dec
stos
push
cld
push
fstp
ja
mov
add
push
fdivs
iret
mov
or
shl
fwait
cs
test
lahf
sbb
aaa
adc
jno
mov
jnp
and
out
jle
mov
sub
fnstenv
jb
inc
shr
orl
mov
push
cwtl
pusha
cmp
movsb
xchg
bound
dec
mov
inc
add
gs
dec
sti
data16
aaa
sahf
ret
cmp
mov
push
add
movsl
xchg
js
repnz
adc
xchg
xorl
mov
es
popa
push
xchg
push
xchg
pop
je
adc
cmp
mov
stos
sbb
stc
push
add
adc
ss
fdiv
jmp
push
ret
scas
push
cmp
daa
mov
push
out
pop
in
lret
insl
fmull
dec
mov
sti
insb
mov
insb
jg
dec
cld
cmpsb
cmp
daa
mov
push
cmpsl
into
sbb
cmp
shll
insl
in
ret
dec
add
loope
sbb
cmp
movsl
cmpsb
ret
rorb
or
int3
pop
xor
js
jb
adc
enter
int
or
int
add
dec
mov
sub
iret
push
aaa
or
cltd
std
out
jb
xchg
cwtl
or
fldl
mov
imul
pop
pop
mov
cmpsl
repnz
addb
push
mov
cmc
loope
lock
pusha
arpl
push
cmp
lock
and
cltd
jb
jb
pusha
lods
inc
dec
xchg
mov
loop
or
cmp
pop
jnp
mov
mov
cltd
gs
popa
lds
stc
iret
shrl
xchg
xchg
imul
out
jg
jmp
add
add
out
fisubs
pop
add
fsubrs
sub
lods
inc
stos
xor
les
sbbb
int
out
push
mov
sub
xchg
jns
or
fnstenv
jnp
ss
int
xor
popf
les
imul
je
sub
pop
jae
bswap
stc
sub
mov
repnz
mov
mov
and
xor
shrl
mov
pop
test
popf
cltd
into
fstp
daa
rclb
mov
lret
and
pop
repz
stc
mov
pop
pop
adc
hlt
push
ds
adc
and
mov
cmp
pop
xchg
repnz
pop
xchg
movsb
dec
jmp
pop
addb
cli
adc
enter
cld
mov
hlt
xor
outsb
sbb
std
and
les
sub
sbb
or
cld
daa
in
aaa
faddl
int3
pop
mov
inc
mov
cmpsl
insb
mov
xchg
out
negl
or
cld
daa
in
aaa
faddl
int3
pop
mov
inc
mov
cmpsl
outsl
mov
xchg
out
negl
or
aaa
aad
enter
mov
cwtl
inc
mov
mov
xchg
out
negl
mov
cld
daa
adc
lret
out
and
arpl
jle
dec
out
xchg
inc
hlt
push
xchg
mov
sbb
cmpsb
jbe
data16
scas
push
cmp
mov
sahf
mov
jle
dec
out
xchg
xchg
mov
cmpsb
push
push
out
inc
sahf
pop
into
data16
push
mov
outsb
outsb
xor
fs
ds
mov
out
test
cmpsb
push
xor
push
stos
add
jge
je
cld
jp
mov
and
sbb
jo
imulb
fwait
jmp
push
imul
pop
cmp
cmp
jbe
arpl
cmp
sub
push
xor
repz
lcall
fcompp
iret
sub
subl
xor
out
mov
adc
arpl
and
scas
inc
jle
jno
pop
or
std
adc
xchg
dec
andl
mov
les
inc
aaa
jno
adc
mov
adc
das
push
sub
adc
test
push
mov
sub
sub
pop
xor
pop
outsl
mov
jnp
gs
inc
ficoms
jns
lcall
testb
jb
ds
add
nop
out
fdivr
add
push
ficomps
or
add
idivl
daa
sahf
aaa
stc
inc
call
dec
push
mov
cwtl
fs
push
fistps
dec
xchg
data16
inc
jns
push
xor
push
mov
int
aad
jmp
into
mov
es
lds
xchg
mov
cmpsb
push
push
out
inc
jbe
data16
scas
push
mov
outsb
jle
dec
out
xchg
xchg
mov
cmpsb
push
push
out
inc
jbe
data16
scas
push
mov
outsb
pusha
aaa
xor
sbb
outsb
sbb
add
aas
or
leave
shll
inc
ret
fisttpll
push
or
cmp
or
in
fs
shrb
push
test
fsubrp
aas
js
in
mov
mov
adc
jbe
sub
push
add
xor
int3
paddw
enter
sub
out
cmp
lods
mov
sbb
sar
mov
mov
in
and
shll
push
shrl
leave
imul
adc
imul
inc
push
lcall
clc
fscale
cltd
leave
arpl
lahf
cwtl
mov
imul
sub
lret
nop
sahf
xchg
sub
fcom
adc
or
add
or
mull
push
dec
pop
ja
scas
or
fwait
xchg
sub
out
in
push
daa
fdivrs
sbb
cmp
dec
push
push
movsb
data16
cmp
sub
dec
push
pop
aad
aaa
pop
mov
frstpm(287
sub
pop
jecxz
repnz
repz
subb
aad
leave
loopne
shlb
sbb
jmp
cs
push
mov
xchg
sbb
dec
test
imul
sub
dec
jno
repz
pushf
sahf
inc
popa
hlt
push
mov
popa
je
sbb
popa
jl
lcall
int
dec
jp
push
and
sbb
mov
imul
dec
insb
fwait
inc
pop
pop
std
jg
idiv
imul
inc
xchg
pop
mov
xchg
xchg
stc
pop
or
aas
and
dec
repnz
cli
or
pop
dec
sub
stos
and
pop
xchg
xchg
loopne
cli
push
mov
jns
mull
ljmp
inc
cmpsl
push
or
dec
dec
xor
add
sbb
mov
pop
repnz
popf
jns
add
dec
icebp
adc
pop
push
loop
inc
push
mov
mov
add
mov
enter
out
subb
mov
cmc
fiaddl
pusha
mov
pop
adc
inc
or
bound
mov
es
sub
push
or
incb
repz
ja
ret
mov
sub
xchg
adc
scas
mov
cmp
or
fnstsw
shlb
or
adc
das
in
imul
dec
movsb
out
mov
mov
pop
mov
pop
jmp
test
mov
push
cmc
mov
fdivrl
mov
popf
sarb
daa
repnz
stos
aad
xcrypt-cbc
cmpsl
pusha
jb
fdivp
push
push
push
xchg
es
mov
inc
lock
sbb
pop
cmpsb
adc
and
pop
popf
outsl
or
mov
adc
movsb
cmp
sar
push
movsb
mov
arpl
inc
cli
and
out
jae
cmp
mov
push
mov
adc
outsb
addr16
sub
loop
xor
xor
cli
cltd
lods
cmp
pop
jne
mov
push
jle
insl
mov
and
in
insb
outsb
add
sub
mov
loopne
mov
xchg
cli
lods
shlb
push
lcall
gs
push
sub
les
enter
dec
jg
daa
cltd
cmp
ret
and
pushf
pusha
dec
xorl
int3
mov
jp
xor
and
inc
mov
int
fistps
or
rep
or
add
add
xchg
inc
jne
movsb
mov
insl
pusha
fbld
dec
lret
aam
and
xor
push
and
int3
lods
jle
ljmp
mov
xchg
push
jge
pop
popa
test
dec
roll
cmpsl
incl
sub
sbb
stos
jecxz
xchg
aaa
jo
pop
mov
pusha
stos
add
out
lea
mov
push
movsb
jnp
mov
pop
xchg
out
scas
daa
fwait
stos
xor
das
mov
ja
dec
mov
push
aaa
test
mov
cmp
jns
insb
lret
xchg
inc
pop
cmpsb
adc
cld
push
jae
daa
jo
sub
mov
adc
imul
xor
dec
pop
jp
stos
int
lods
xor
sbb
jmp
mov
and
push
insb
shlb
out
sub
xor
lahf
insb
xchg
mov
pop
or
mov
not
rolb
repz
mov
lods
mov
ret
aaa
lods
ror
pop
xor
mov
pop
push
call
sbb
cmp
femms
mov
xor
iret
push
rcrl
xor
fst
frstor
sahf
adc
decl
mov
xchg
mov
dec
out
lods
pusha
pop
sahf
cmp
aas
lret
dec
cmp
into
mov
psrlw
pop
mov
sub
mov
fnstsw
jae
cmp
cs
call
idiv
mov
es
cmp
leave
pop
inc
out
mov
arpl
adc
xor
jno
rolb
mov
fldenv
push
adc
xchg
push
push
xchg
call
stos
test
out
lea
insl
jo
sbb
jmp
insl
rcr
pop
push
push
add
cli
dec
stc
subl
and
add
add
cs
jnp
push
mov
movsb
add
mov
inc
adc
pusha
test
cld
lods
cli
les
cli
adc
dec
and
test
xchg
xchg
shl
xorl
dec
shll
jmp
pop
cld
xor
loope
cld
int3
or
lret
int3
adc
packssdw
mov
int
sbbb
lcall
sub
sub
in
mov
mov
xor
test
shrb
sti
xlat
lock
mov
jmp
psubsw
repz
or
push
sbb
mov
insl
daa
into
adc
sub
gs
mov
arpl
les
xor
stos
jl
pop
mov
sar
xchg
xchg
ret
or
dec
sti
ficomps
sub
pop
sub
jp
mov
sub
or
xchg
ss
aas
mov
test
rcr
and
rcrl
jp
enter
dec
stos
scas
fwait
add
ret
je
lock
dec
fistl
rcll
pop
pop
sbb
xorl
popa
pop
jge
push
cmpsl
mov
mov
jge
xor
pop
gs
movsb
mov
icebp
push
subl
mov
inc
mov
and
jg
adc
in
adc
add
lret
imul
jnp
ss
dec
pop
je
in
jmp
push
adcl
mov
inc
out
loop
pop
xchg
subb
out
add
int3
call
outsb
js
add
pop
sub
test
cmpsl
insl
movsl
enter
cmp
sbb
subb
cmc
lret
cld
outsl
mov
jns
cmc
xchg
test
adc
out
es
cmpsl
xchg
ss
adc
add
loopne
xchg
insb
fucom
jmp
shll
fisubrs
in
sti
std
lcall
ret
and
jb
ret
jbe
mov
notb
adc
dec
pop
pop
sub
movsb
cmp
and
pop
jb
ja
outsl
cmp
iret
iret
and
inc
ss
repnz
loop
xor
mov
xor
mov
ds
aaa
iret
popf
mov
mov
mov
pop
nop
push
pop
and
aam
push
xchg
pop
sub
outsb
inc
int
scas
pop
push
sti
add
add
das
xchg
lock
rorl
jmp
push
adc
push
lock
addr16
xchg
jnp
popf
mov
dec
xchg
ret
mov
sub
repnz
and
stc
je
pop
cli
xor
add
shlb
insl
mov
sbb
mov
imul
xchg
inc
ficoms
pop
out
sub
iret
out
dec
cmpsl
adc
out
nop
jnp
cwtl
xchg
sbb
or
jno
dec
mov
fs
jae
xlat
mov
jmp
or
loopne
stos
jp
dec
mov
mov
pop
jno
int3
decb
xchg
xchg
ficompl
les
mov
lock
push
aad
pop
das
lahf
jns
and
ljmp
ficoml
fnstenv
xor
mov
int
inc
iret
add
shrl
ss
cld
pop
add
and
pop
rorl
into
push
imul
fidivrs
icebp
mov
pop
aas
and
jp
xlat
imul
xlat
shrl
pusha
js
xor
fchs
lods
mov
insb
movsb
movsb
mov
lock
in
jnp
mov
xchg
repnz
dec
sbb
dec
iret
mov
sub
sub
notb
cmp
sti
imul
cs
dec
or
fsubrl
sub
lods
mov
jb
cmp
mov
idivl
lods
fisttps
fs
mov
sahf
repz
fdivp
xchg
dec
sub
jg
out
pop
xor
mov
movsl
push
or
adc
pop
sar
jns
inc
enter
mov
cmp
in
pop
gs
jns
in
flds
es
std
bound
mov
xor
xchg
cmp
mov
int
loope
pushf
pop
push
jo
mov
add
cli
or
ljmp
ret
jno
pusha
or
inc
fwait
adc
jo
aam
and
dec
pop
ljmp
jbe
sbb
push
add
push
or
mov
jns
pop
stos
xchg
mov
mov
and
xor
mov
mov
outsl
test
inc
outsb
cmpsl
xchg
mov
cmpsb
xchg
xchg
and
fistps
mov
je
data16
jecxz
inc
push
mov
cmp
mov
fabs
imul
xchg
jnp
mov
lret
mov
push
jmp
ret
popw
jns
mov
and
add
cwtl
outsb
clc
addr16
pop
addr16
lea
stc
sbb
jbe
mov
sbb
dec
andb
pop
dec
dec
subl
pop
mov
adc
sbb
sub
clc
cwtl
sar
js
shrb
aam
movsl
sub
mov
lods
cs
adc
pusha
popa
and
loope
and
nop
mov
and
push
mov
jmp
jl
addr16
or
scas
mov
mov
dec
dec
lods
test
xor
add
cmc
rcl
lret
xor
cmp
jp
das
movsb
fcoms
jmp
jno
scas
and
stos
mov
jp
adc
mov
xor
add
dec
jecxz
dec
fldt
cmp
jg
cs
push
xchg
adc
cmp
mov
sbb
gs
lock
xor
pop
jge
shl
fstpl
loop
lock
sar
jae
xlat
dec
or
lock
sti
test
imul
dec
idivb
fstpt
rcll
mov
rorb
es
repnz
push
daa
in
sub
out
mov
pop
mov
clc
xor
or
cmpsl
dec
int3
jno
adc
iret
jmp
sahf
sub
adc
imul
lret
mov
into
in
jp
test
xor
mov
outsl
dec
int3
call
adc
mov
rcr
fs
push
mov
dec
addr16
xchg
inc
push
neg
lock
mov
pop
and
popa
inc
push
lds
xlat
test
cld
lret
int
or
or
pop
jnp
shl
cmc
mov
scas
lock
cmc
dec
cwtl
std
push
xchg
sub
out
test
jae,pt
xchg
cwtl
pusha
pop
divl
adc
push
outsl
ret
pop
pop
adcl
adc
sub
inc
cmp
cmp
daa
dec
ljmp
cwtl
jno
pop
or
cltd
mov
imul
and
fnstcw
sub
jge
xchg
mov
dec
jge
mov
adc
rcll
hlt
xor
daa
mov
repnz
inc
test
inc
inc
jp
mov
shll
les
fs
or
lods
inc
xchg
outsb
in
and
and
gs
icebp
lret
sbb
pop
mov
stos
xor
mov
rclb
push
test
add
dec
ds
mov
shlb
int3
lods
push
fistpl
in
sbb
adc
push
mov
xchg
fcompl
shrl
inc
pop
inc
mov
stos
pop
xor
pop
xchg
enter
mov
fwait
cmpsb
repz
repz
lret
stos
pusha
inc
mov
popa
push
iret
daa
xchg
mov
inc
in
mov
fmul
hlt
jnp
push
enter
stc
sbb
lea
jnp
push
dec
or
rclb
stos
xor
into
testb
insb
inc
mov
xchg
test
fldenv
cltd
into
and
mov
inc
subb
hlt
add
adc
bound
aaa
or
je
aad
push
adc
inc
test
gs
repnz
push
lret
mov
push
sar
inc
mov
fbld
ljmp
lcall
ret
push
fnsave
mov
icebp
rorb
push
movsb
loope
mov
sbb
inc
and
xor
das
mov
and
xor
outsb
push
mov
xchg
dec
xchg
pxor
mov
sti
inc
push
pushf
add
push
cld
and
pop
ds
movsl
pop
jno
mov
jle
xchg
out
leave
mov
lds
in
movsb
loope
jg
into
pop
lret
push
jmp
add
and
fildl
adc
cmpsb
je
rcll
xlat
std
add
pop
popf
into
mov
addr16
pop
adc
fidivrs
and
inc
xchg
jb
push
cmp
enter
inc
sub
push
fldcw
add
cwtl
pop
sub
push
imul
stos
cmp
daa
cmpl
push
or
dec
clc
jmp
in
push
jo
pop
push
mov
cmp
stos
gs
add
fprem1
repnz
scas
ret
aad
fildl
pop
jmp
fisttps
xchg
xlat
push
mov
movsb
fs
sbb
outsl
sub
mov
mov
sub
iret
adc
xchg
mov
push
out
mov
adc
xchg
cmpsl
test
pop
jnp
stc
or
cmp
cmc
add
sbb
ljmp
mov
out
mov
mov
or
aad
sub
fmull
push
or
std
sub
call
fsubl
loope
dec
xchg
adc
dec
pop
popa
mov
sub
hlt
jmp
orb
jno
gs
inc
dec
in
sbb
ss
out
push
mov
push
adc
ljmp
or
jne
imul
sbbb
mov
sub
mov
fadds
pop
or
fs
fptan
jl
insb
sbbl
int3
pop
test
and
push
xchg
cwtl
dec
inc
aad
shl
mov
or
test
or
push
aaa
cmp
xor
adc
jne
and
lods
loope
lea
push
jg
cmpsb
mov
push
sarb
clc
sbb
shlb
inc
push
xor
sub
call
mov
aaa
lret
jae
pop
icebp
test
ss
cmp
jmp
and
loop
ret
dec
inc
mov
mov
movhps
or
lret
movsl
js
pop
test
movsb
dec
out
pop
or
sub
jb
push
cmp
jg
lods
jne
loope
inc
leave
cmp
jg
test
or
ret
pop
fwait
fs
loope
es
fisttpl
jno
sbb
mov
fistl
adc
cmpsb
sbb
cltd
enter
les
pop
pop
icebp
movsb
cmp
mov
sti
mov
neg
orl
xor
pop
popa
mov
mov
pusha
stos
adcl
insb
into
jae
movsb
dec
push
adc
pusha
sub
push
mov
cmp
push
movl
xor
pusha
int
add
mov
mov
sbb
clc
mov
sbb
bnd
sarl
xchg
sbb
jo
insb
stos
and
out
pusha
inc
mov
mov
mov
adc
addr16
popa
sbb
jp
sub
dec
jmp
adc
out
jo
mov
push
stc
bound
sbb
fwait
or
xchg
mov
out
pop
inc
cmp
jge
fisubrs
out
aas
lods
jo
jp
sti
jo
imul
sub
jbe
lret
or
fistps
ss
mov
flds
mov
sbb
xchg
jns
int
and
xchg
cwtl
popa
sbb
out
and
sti
mov
data16
mov
push
pop
popl
lds
xor
mov
sub
mov
lret
sub
inc
cmp
xchg
mov
mov
adc
adc
fidivs
add
addr16
jb
push
push
ljmp
or
sbb
les
mov
cmp
aas
test
cwtl
popl
inc
jecxz
outsb
fdivrl
aaa
jge
sub
cli
ficompl
push
cmpsl
or
sbb
pop
iret
ss
push
and
mov
adc
cmpsl
aad
in
mov
outsl
scas
sub
mov
mov
sub
out
iret
or
xor
daa
jne
sub
or
int3
xchg
add
or
sbb
hlt
lods
shlb
scas
push
fsub
sub
call
cmp
sbb
and
mov
lret
add
mov
insb
pusha
adc
jns
loope
out
pop
mov
xchg
into
gs
fistpl
jbe
sub
mulb
outsl
in
adc
xchg
jg
js
dec
jnp
jne
roll
lock
subl
mov
and
subl
dec
daa
test
cmp
pop
arpl
mov
sbb
sub
sub
sbb
sbb
add
sbb
push
sub
ljmp
push
lret
in
std
mov
or
jmp
xor
pop
out
pop
push
or
popa
andb
mov
cs
pop
fwait
rcrl
mov
add
adc
mov
dec
push
inc
stos
adc
stc
inc
mov
mov
lock
sub
sarb
sub
hlt
loopne
add
je
xor
mov
xchg
mov
inc
js
mov
jb
sbb
idivb
stc
adc
fcoms
mov
xchg
adc
pop
call
loop
ret
jo
and
mov
std
movsl
mov
cmp
jecxz
movsb
mov
pop
or
mov
xor
pushf
cmp
xchg
mov
pop
aam
mov
shl
mov
xor
jmp
bound
push
cs
sbb
xchg
mov
imul
dec
imul
arpl
int3
scas
fimuls
fdivr
popa
mov
sbb
or
push
or
cmpsb
cld
pop
jge
fstp
xor
mov
repz
jp
xchg
inc
test
mov
push
push
imul
mov
mov
jb
fistpll
push
mov
sbb
js
sti
add
out
lret
mov
cmp
outsl
pusha
loop
pusha
add
cmp
dec
mov
jecxz
and
mov
mov
mov
int
lcall
test
insb
arpl
lahf
leave
mov
out
sahf
cmp
mov
movsl
test
into
adc
mul
enter
shlb
sbb
xchg
xchg
adc
xchg
mov
add
push
push
xchg
int
add
mov
mov
dec
clc
call
mov
or
cmc
scas
dec
jo
ret
adc
pop
clc
sub
enter
js
pop
lea
adc
lods
outsl
les
mov
sub
add
loopne
cmpsl
std
clc
lea
aad
cmp
lcall
sbb
dec
mul
gs
repz
mov
lock
andl
fdivl
popf
jmp
mov
mov
into
jmp
addb
sub
hlt
mov
inc
idiv
sbb
adc
xchg
lock
jmp
div
mov
xchg
or
xlat
js
cwtl
lret
xor
adc
imul
stc
fwait
mov
fs
adc
add
loope
add
adc
nop
ret
inc
and
jmp
mov
push
xor
inc
mov
lret
adc
sbb
cmp
mov
sar
jmp
mov
sbb
fidivrl
cmc
or
ficomps
repnz
in
pop
mov
dec
pushf
jl
into
and
jp
lock
mov
sbb
jae
in
push
orl
lds
xchg
out
rolb
insl
js
les
or
jmp
xchg
xlat
call
lods
adc
and
int
outsl
xchg
xchg
out
xchg
push
ds
in
dec
mov
push
movsl
cmp
sarl
fcoml
outsb
xchg
vunpcklps
adc
std
rolb
mov
fcmovb
jmp
cmp
stos
sbb
leave
add
testb
dec
fcoms
lods
sti
push
pop
cwtl
pop
push
adc
stos
rcrb
adc
xor
inc
push
cmp
adc
pop
cwtl
insl
pop
movsl
cmpsl
jae
add
cmp
push
mov
iret
movsb
lds
and
dec
out
xchg
xchg
mov
cmpsb
push
push
out
inc
jbe
data16
scas
push
mov
outsb
jle
dec
out
xchg
xchg
mov
cmpsb
push
push
out
inc
jbe
data16
scas
push
mov
outsb
idiv
xchg
into
out
push
xchg
push
outsb
inc
incb
scas
push
mov
ret
jle
dec
pop
xchg
cs
ds
es
push
out
mov
test
leave
jno
popa
push
xchg
xchg
add
mov
js
push
adc
or
push
clc
cmpsl
call
xchg
mov
mov
js
push
pop
cmp
cmpsl
sbb
push
clc
mov
enter
test
cwtl
fisttps
or
pop
es
sbb
adc
mov
cwtl
sbb
or
push
stc
lods
imul
mov
or
cli
imulb
insb
cmpsl
or
dec
std
pop
or
pop
lds
and
inc
lock
jmp
repz
mov
cmp
cmp
push
mov
call
push
aas
imul
mov
xchg
mov
lahf
mov
push
out
call
or
add
mov
ja
mov
adc
dec
pop
imul
cli
popf
inc
imull
push
xchg
pop
frstor
pusha
std
dec
pop
xchg
mov
pop
dec
xor
add
mov
call
lea
fimuls
das
pop
push
dec
push
cmp
pusha
sbb
xor
xchg
fildll
fimull
push
sub
dec
or
inc
jl
cmpsl
fildll
xchg
fstl
mov
and
push
jae
pop
sbb
pop
xor
out
loop
mov
xlat
js
push
pop
cmp
ja
inc
or
cmpsl
call
xchg
mov
mov
js
push
pop
cmp
ja
inc
or
cmpsl
in
xor
lcall
jnp
aas
outsl
mov
out
gs
cmp
ljmp
xor
sub
pop
xchg
fisttpl
test
icebp
or
sti
cmpsb
and
cmpsl
inc
sbbb
outsl
divb
mov
push
mov
out
jbe
fmul
fcoms
in
jbe
mov
repz
mov
jmp
mov
aad
adc
mov
call
imul
rcr
pop
das
mov
shrl
call
xchg
cwtl
mov
push
sbb
je
add
cld
inc
push
add
push
and
mov
dec
mov
jns
jne
or
pushf
ret
mov
sub
arpl
adc
jmp
call
mov
lret
sbb
fsts
or
dec
or
in
hlt
mov
or
push
xor
lds
or
adc
adcl
pop
imul
call
pop
adc
dec
jl
jl
sub
enter
push
ss
sti
lret
arpl
and
jno
insb
cmp
lock
popf
loope
mov
or
lahf
cld
call
mov
jle
lret
jne
cmp
fistps
lds
inc
xchg
arpl
outsl
sbb
mov
outsl
jg
ficoms
inc
out
movsl
mov
loop
jns
jecxz
imul
push
in
imul
adc
aam
pop
in
aas
test
aad
jnp
add
aad
ss
or
cltd
lret
out
jp
mov
sbbl
imul
fmull
jne
mov
lock
sbb
jno
outsb
xor
ret
add
sbb
sbb
jo
jmp
sub
sbb
or
stos
jecxz
gs
hlt
imul
add
xor
xor
fstpt
cmpsb
mov
dec
popa
test
sbb
mov
into
push
and
stos
jecxz
xchg
cltd
fsubrl
sbb
imul
lods
mov
and
push
sarl
dec
xchg
mov
xchg
add
sub
sub
dec
cmc
mov
shrl
push
es
mov
mov
into
mov
outsb
repnz
stos
sahf
xor
ljmp
rolb
or
mov
add
sbb
add
cmpsb
out
push
stc
aaa
mov
jmp
jecxz
jg
imul
pushf
mov
leave
cmp
lea
inc
in
jge
out
push
fld
in
push
cmp
xchg
insl
fldcw
sub
inc
lcall
adc
mov
pop
xor
dec
mov
pop
gs
push
out
ffree
cli
cmp
cli
rol
frstor
sub
imul
gs
ds
and
jnp
test
add
cmp
cmp
movsb
addr16
rcll
push
ret
int
inc
sbb
call
cwtl
addr16
in
mov
out
cltd
jg
int
pop
pop
aas
adc
out
decb
xlat
mov
scas
push
sbb
or
mov
inc
shll
pop
call
loop
andb
and
cs
mov
mov
cmp
xchg
mov
jo
xor
push
mov
inc
stos
js
aad
fists
test
aam
adc
and
add
lea
inc
cmp
fnstenv
sbb
testl
sbb
jg
jne
add
sub
jle
cwtl
aad
xor
movsl
inc
adc
aad
in
pop
or
push
out
push
and
out
or
jge
and
sbb
adc
fucomi
adc
out
and
leave
xchg
cmovae
shll
int
mov
sbb
outsl
ja
adc
jmp
aas
or
or
lcall
adcl
lret
scas
dec
outsl
sbb
imul
dec
test
and
das
fadds
cmp
mov
dec
mov
bound
stos
outsb
nop
or
sbb
mov
adc
sbb
mov
pop
adc
xor
insl
insl
int3
aad
adc
xlat
pusha
mov
mov
sbb
pop
sbb
sti
pop
sub
popf
insl
les
dec
pop
arpl
gs
mov
inc
in
pop
in
hlt
dec
fmull
adc
dec
adc
jg
xchg
and
movsl
sar
in
stos
clc
push
dec
push
push
lahf
mov
lret
roll
scas
mov
jb,pt
fsubrs
mov
arpl
cmp
push
jnp
pop
pop
rcrl
adc
hlt
movsb
sti
leave
ficoms
xchg
lcall
xor
loop
mov
push
daa
sub
sarb
aam
xor
scas
imul
pusha
popa
ret
pop
fisubl
sbb
xchg
icebp
xchg
mov
xchg
xchg
cmc
pop
rcll
out
xor
out
mov
push
daa
jbe
push
pop
shr
mov
adc
sbb
aad
mov
ljmp
mov
call
xchg
shl
adc
dec
cmp
pop
or
add
jbe
rolb
fsubs
clc
and
adc
dec
jmp
pop
divb
jns
icebp
mov
dec
pop
jbe
cmp
mov
in
std
pop
lds
lds
insb
in
sub
add
push
jno
inc
cltd
inc
movsb
jp
inc
loopne
sub
dec
lea
xchg
hlt
shlb
adc
add
gs
push
pop
jne
push
lock
ror
cmc
cmc
inc
sti
aam
jo
add
shll
notl
push
mull
cld
and
mov
gs
xchg
cli
int
fcoml
popa
leave
insl
pop
mov
mov
pop
jae
push
pop
scas
sub
jmp
sub
negl
jae
inc
mov
lahf
filds
andl
ss
scas
int
aaa
cs
cmpsb
sub
sbb
mov
out
lods
imull
sbb
sbb
mov
adc
push
lret
sbb
leave
jae
out
push
out
push
movsl
lret
mov
jle
mov
pop
cld
ror
inc
xchg
pusha
or
cmpsb
add
mov
mov
xor
push
scas
mov
repz
mov
out
pop
xor
lds
adc
lcall
arpl
adc
loope
xchg
add
popa
imul
xchg
std
fmull
jp
mov
out
or
test
pop
xchg
jb
addr16
push
subb
jo
push
pop
ret
sub
jb
js
mov
daa
inc
adc
xor
jle
fcomps
dec
jecxz
mov
and
push
mov
std
stos
sbb
mov
out
inc
add
jno
push
add
mov
daa
popa
lock
shrl
pop
add
out
mov
cmp
adc
xchg
cwtl
xor
gs
and
out
xor
mov
aaa
mov
out
mov
ret
cmp
pop
cli
cmp
push
lahf
sbb
scas
and
mov
pop
cmp
mov
pop
mov
mov
sbb
xlat
std
mov
cmpsl
lock
fidivs
fwait
and
lods
dec
cmpsb
ja
test
push
inc
jge
dec
inc
cwtl
lods
sbb
push
push
movsb
or
inc
ret
aam
subb
lods
cli
rolb
lret
fiadds
and
jp
out
scas
test
mov
scas
jo
idiv
jo
fucomp
pop
popf
pop
or
lods
pushf
inc
test
add
shlb
sub
mov
and
inc
ljmp
cmpb
mov
mov
sarl
mov
sub
imul
push
int
push
popf
cmpsl
popf
ret
pushf
out
aaa
je
int
push
sbb
xor
nop
inc
push
push
outsb
icebp
dec
mov
push
cli
dec
in
sbb
cmp
mov
loop
mov
sub
dec
cmp
mov
adc
xor
subps
push
and
imul
mov
xchg
sub
in
mov
and
mov
aas
roll
popf
mov
adc
mov
push
cmp
mov
addl
stos
or
insl
mov
and
lcall
popl
filds
outsb
dec
cmp
fidivrs
sarb
inc
adc
lds
gs
jmp
fs
jae
les
into
xchg
dec
in
cmp
dec
jo
or
dec
mov
faddp
mov
inc
fwait
aam
aad
rcll
or
cmp
push
pop
adc
jp
ret
addr16
sbb
xor
sbb
enter
or
ret
jns
jp
fstpt
fsubs
sahf
lods
xlat
add
mov
push
or
adc
ret
push
mov
mov
fdivrl
sarb
add
push
fdivs
mov
sub
jecxz
jp
dec
xor
cmp
mov
std
in
inc
or
mov
jnp
adc
mov
iret
das
jo
je
cmp
fucomip
insl
sti
xor
cmp
mov
pop
push
push
sub
popa
popa
pushf
push
mov
in
mov
inc
dec
je
jb
repnz
cmc
add
loope
sbb
lds
ja
adc
push
sub
mov
es
outsb
mov
movsl
inc
fisttpll
xchg
loop
cld
pop
inc
ss
repz
lar
fidivrs
int3
dec
cld
and
jecxz
sbb
xlat
or
lahf
test
and
jbe
push
aad
sub
js
orb
cli
mov
repnz
jo
insl
mov
mov
mov
popl
sub
popf
mov
push
fmuls
pop
xor
insl
inc
sbb
fs
stos
push
and
mov
prefetch
mov
clc
jp
xlat
and
mov
pop
fwait
xor
shlb
add
or
xor
add
fdivl
xchg
push
mov
js
add
cmp
adc
outsl
xchg
cli
sbb
jecxz
dec
xchg
stos
loopne
xchg
ja
adc
push
add
push
dec
mov
stos
in
pop
inc
xor
out
mov
push
imul
cmp
mov
jg
sbb
cmp
loop
leave
gs
jmp
xchg
adc
push
out
pop
jns
out
xor
dec
cltd
push
mov
mov
mov
push
pop
out
rolb
xorl
push
jbe
inc
insb
pop
ret
or
lock
cli
out
or
mov
inc
cs
sub
xor
add
mov
push
mov
xor
mov
cltd
nop
mov
inc
iret
push
mov
fisttpll
dec
jbe
movsb
shll
aas
lock
jg
lea
xchg
lahf
mov
es
call
aas
push
stos
or
lods
adc
add
sti
loopne
inc
leave
fmulp
dec
lcall
sbb
cmp
pushw
or
lock
xchg
sub
xchg
call
sub
cs
aad
jne
mov
ret
and
mov
xchg
push
mov
xor
scas
xor
pop
add
pop
xchg
cmpsb
inc
insl
jns
shll
adc
pop
xlat
rcrb
mov
mov
cld
push
adc
jmp
pop
in
outsb
and
insl
ja
dec
pop
cltd
and
rclb
inc
mov
insl
sub
clc
stos
inc
mul
xchg
imul
adc
mov
jl
or
inc
xchg
loope
arpl
mov
prefetch
shll
das
loopne
add
insl
shlb
sbb
lods
cmc
or
adc
adc
pop
int3
cmp
sub
pop
xor
mov
dec
mov
fstl
mov
ret
cmp
pop
rcrb
xchg
scas
mov
pushf
movsl
push
xchg
test
shrl
aad
pushf
push
adc
pop
outsl
cmp
popf
je
repz
dec
sub
out
xor
dec
pop
or
xchg
rorl
loope
xchg
ja
bound
or
fucomp
mov
pusha
cld
ret
add
and
dec
movsl
loope
and
add
stc
push
lea
rclb
out
fists
lret
mov
imul
orb
mov
sbb
je
xor
test
sbb
lret
add
adc
and
lret
lods
pop
lods
icebp
mov
cmp
sub
dec
pop
ret
out
xor
bound
add
mov
shll
mov
call
jns
push
test
iret
jl
lret
xlat
pop
cmpsl
inc
cmp
jg
xchg
out
jb
cmp
cmp
push
pop
mov
and
std
ds
mov
js
test
cmp
add
dec
adc
xor
fbstp
outsb
cmp
lret
ja
roll
iret
mov
mov
mov
imul
addb
mov
in
and
loope
mov
push
and
mov
shl
add
cltd
insl
sub
jmp
or
mov
fs
pop
inc
xchg
nop
mov
push
xorl
dec
or
mov
push
push
or
sbb
jno
sub
stc
bound
sbb
out
fst
mov
mov
xlat
cwtl
jno
push
cmp
sub
js
bound
mov
mov
dec
xor
jae
xchg
inc
xchg
imulb
mov
push
push
xor
mov
inc
loop
insb
jo
clc
shl
and
mov
insb
fstl
enter
jge
cmpsl
jmp
xlat
insb
pop
xchg
lods
into
mov
jmp
data16
rorl
std
int
dec
pushf
cs
into
sbb
add
inc
mov
mov
iret
scas
sub
cmp
sbb
jb
dec
add
outsl
xchg
scas
mov
inc
inc
sub
stos
pop
test
mov
push
cs
les
mov
cmp
fldenv
out
rcrb
shl
out
pop
repnz
ficomps
lret
jp
or
mov
inc
lods
outsl
pop
or
adc
jmp
scas
xchg
arpl
xchg
lret
jle
je
sti
sahf
sub
xchg
mov
mov
mov
lahf
stos
or
jne
mov
clc
ljmp
pop
mov
daa
push
insb
adc
int3
ret
ret
lods
movsb
jno
push
fsubl
cmp
stc
repz
xchg
jle
add
mov
lea
lret
jns
mov
pop
insl
sbb
inc
mov
push
outsl
frstor
push
xchg
shrl
cmp
add
stos
jge
push
inc
dec
lahf
adc
adc
rcrb
sub
call
xchg
loop
or
xchg
xchg
andl
sbb
mov
ja
add
shll
outsl
push
cmp
clc
jl
sbb
xchg
dec
in
pop
mov
and
sub
mov
or
aaa
mov
jbe
mov
mov
add
pushf
xchg
in
les
and
adc
rorb
int
sbb
push
stos
pop
lea
jl
and
aas
cmpsb
cmp
jl
sahf
sub
loop
mov
mov
mov
or
dec
fst
gs
push
loop
pop
push
push
sub
mov
icebp
xor
pop
test
and
and
push
movsb
aam
test
arpl
pop
adc
sbb
imul
popf
and
xlat
test
mov
leave
enter
arpl
data16
stos
mov
push
adc
push
dec
pop
lcall
push
test
pop
hlt
and
sub
xor
pop
push
cmpsb
jge
in
popa
push
les
jns
or
push
bound
mov
dec
mov
add
js
add
dec
subb
test
mov
cs
out
rcl
mov
mov
xor
fs
inc
out
push
loopne
loopne
insb
adc
movsb
mov
xor
test
jle
pop
aam
pop
and
sub
popf
sti
lods
clc
mov
andb
xor
cmp
cld
jg
lcall
imul
inc
mov
scas
ret
inc
add
pop
xor
pop
pushf
in
out
div
cmp
mov
leave
mov
jns
js
pop
scas
mov
sbb
mov
sub
hlt
daa
out
xchg
fbstp
xchg
pop
fwait
sti
jge
lret
mov
mov
divb
and
js
outsl
pop
shlb
dec
sub
jb
jl
shll
call
mov
out
rorl
sbb
scas
mov
aaa
cmp
jge
inc
int
ja
jmp
fbstp
push
cmp
pop
jne
mov
mov
xor
lcall
fnstcw
dec
sub
jl
mov
xor
mov
cmp
inc
push
int
sub
shrl
push
push
push
shrl
cmc
mov
adc
mov
icebp
mov
mull
inc
push
repz
jne
xor
js
dec
in
out
cld
xlat
icebp
inc
out
out
addr16
popa
lea
push
jno
push
cmc
sbb
int
pushf
repz
dec
mov
ficoml
and
mov
mov
sub
iret
into
je
add
cwtl
mov
sahf
lods
addr16
gs
mov
jl
sti
fwait
arpl
or
push
or
mov
stc
mov
sub
in
sti
clc
xchg
adcl
cmpsb
sbb
movsb
jecxz
push
lcall
js
push
int
imul
sbb
xor
testb
or
das
mov
mov
jnp
push
cmp
cmp
and
gs
iret
xor
jae
scas
fiadds
arpl
mov
insl
bound
adc
insl
clc
insl
iret
lret
pop
aad
pop
push
jg
arpl
insl
push
out
in
je
lret
mov
mov
and
xor
stc
xchg
in
mov
jle
fbld
sub
insl
xor
movsl
movsb
push
dec
out
test
adc
sub
aaa
call
fwait
mov
dec
nop
lahf
cmp
push
add
adc
mov
ss
test
aad
xor
or
inc
stos
push
int3
scas
and
lret
in
pop
fbld
cmpl
pop
stos
cltd
out
push
push
scas
scas
mov
ret
xor
mov
push
int
mov
add
lret
mov
lds
scas
mov
inc
mov
sub
loopne
mov
adc
and
adc
orb
mov
lcall
pop
jno
jne
lods
mov
leave
sub
sub
and
push
fidivs
rorl
mov
push
enter
in
cltd
adc
ss
mov
std
xchg
or
ds
sbb
sub
dec
jo
pop
sbb
daa
or
sti
pop
jnp
loop
sbb
add
pop
test
out
xor
loope
or
sldt
add
popa
cmpsl
jns
mov
pop
arpl
test
lret
cmp
enter
add
out
xchg
adc
push
lods
out
add
jno
aas
cmpsb
dec
jns
or
mov
fwait
scas
mov
loope
mov
aaa
imul
movsb
je
mov
jg
ljmp
inc
mov
test
divb
cli
cmc
push
adc
fldl
or
test
or
adc
pminub
mov
les
js
xchg
lock
pop
push
cltd
lret
loopne
push
pop
int
rep
out
cmp
or
fsts
fdivrs
notl
push
xor
jbe
lret
sbb
xchg
mov
aas
aam
movsb
or
aas
mov
and
or
xchg
push
xchg
mov
jmp
lods
es
outsl
cmp
fwait
stc
adc
popa
pop
test
out
icebp
xlat
mov
in
shrl
xchg
jle
pop
lds
clc
or
je
sub
clc
mov
mov
push
jmp
bound
and
out
shll
xchg
jmp
dec
inc
xchg
adc
iret
or
lds
adc
out
clc
mov
mov
popf
xchg
and
leave
jb
ss
cld
mov
ret
flds
cmp
inc
lock
ljmp
lret
mov
jnp
mov
xchg
cmpsb
mov
rcll
in
test
inc
or
pop
mov
xchg
sub
fwait
sub
faddl
arpl
mov
loopne
fcompl
jecxz
push
xchg
ret
aaa
std
xchg
inc
fisttpl
loope,pn
inc
shrb
out
xchg
mov
sbb
popf
dec
ja
loop
mov
mov
incb
fildl
stc
xchg
sbb
sbb
cmpsl
aaa
cmp
and
adc
imul
pop
mov
xlat
xchg
pop
sbb
mov
movsb
das
jl
imul
and
inc
and
fsubs
fildl
dec
push
data16
data16
dec
mov
dec
loop
daa
fiadds
mov
push
test
cwtl
mov
js
push
pop
cmp
ja
inc
or
cmpsl
call
xchg
mov
mov
js
push
pop
cmp
ja
inc
or
cmpsl
call
xchg
mov
mov
js
push
push
cmp
ja
inc
or
cmpsl
jmp
xchg
mov
mov
js
push
pusha
dec
out
mov
test
js
push
out
cwtl
inc
mov
int
jmp
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
cmp
sbb
jl
hlt
aas
call
outsl
lret
dec
cwtl
pop
mov
inc
lahf
push
out
and
xor
add
adc
clc
sbb
jg
jp
outsl
testl
sbb
lock
and
push
out
and
loop
hlt
and
js
loop
push
bound
out
dec
out
notl
mov
aaa
cmp
jg
sbb
jo
in
add
imul
mov
sub
call
outsb
sbb
pop
int
es
xchg
dec
cmpsl
cwtl
sbb
insb
fisttps
out
daa
loopne
aas
test
mov
aam
cld
std
cmp
adc
fistps
adc
add
pop
andb
jno
mov
pop
or
mov
pusha
ret
je
imul
pop
push
daa
jne
mov
pop
mov
js
inc
lahf
dec
out
cmp
sub
sbb
adc
clc
aas
lock
shrl
jg
dec
sbbb
js
sbb
cmp
nop
dec
mov
xchg
pop
call
jmp
imull
in
adc
add
sub
daa
mov
mov
mov
pop
mov
jb
pop
lret
sbb
enter
leave
cmp
or
iret
sbb
or
clc
aas
call
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
sub
sbb
or
clc
aas
call
outsl
mov
pop
mov
fnstsw
dec
aas
mov
mov
inc
pop
pushf
popa
in
dec
push
sub
and
mov
inc
stc
dec
outsl
mov
cmp
imul
push
fdiv
rcll
rcl
jle
inc
add
and
ljmp
pushf
imul
mov
or
adc
bound
push
pop
sbb
pop
add
sbb
xchg
push
mov
repz
mov
repz
jb
jb
pop
xchg
out
pop
xor
mov
pop
pop
and
jns
xor
xor
sbb
loopne
mov
mov
aam
xchg
adc
pop
push
outsl
mov
push
lret
xchg
leave
int3
mov
mov
shl
dec
push
js
mov
xlat
icebp
std
jl,pt
cmp
shl
ret
sbb
mov
ja
rcl
ss
jmp
das
out
pop
mov
jae,pn
mov
in
push
loop
mov
hlt
movsb
clc
aad
rcr
add
out
sti
xchg
mov
cmp
fisubl
xlat
push
das
cs
or
adc
xchg
stos
mov
out
push
or
push
daa
ljmp
inc
ds
jae
test
stos
or
cmpsb
dec
mov
mov
push
lods
sub
mov
loop
mov
cli
ret
mov
bound
cli
and
push
in
or
push
shlb
lock
movsl
scas
pushf
mov
cmp
jp
je
out
lods
jns
dec
jp
sub
rcl
add
xor
hlt
and
into
cld
loop
add
loop
add
and
mov
sub
movsl
jno
int
add
xlat
mov
cmp
push
test
xor
loop
or
inc
cmp
xor
cmp
adcb
pusha
sub
fidivrs
imul
push
mov
sbb
fbstp
jb
inc
xchg
xchg
add
lock
xor
inc
inc
dec
jge
movsb
add
jle
imulb
adc
movsb
pop
ret
xchg
sbb
lds
arpl
pushf
les
pop
lods
sbb
je
ja
inc
cmc
cld
jle
shlb
cmc
and
shll
jo
xchg
out
xchg
movsl
xorb
testl
es
xor
sub
jne
or
es
push
xor
push
push
mov
xchg
int3
cmp
xor
repz
sahf
inc
xor
xchg
ret
add
addr16
pop
adc
nopl
jne
test
jnp,pn
into
dec
sbb
stc
jle
and
or
push
mov
push
lret
loope
pop
jne
push
shlb
in
and
xchg
sti
jne
in
clc
clc
js
lock
push
jnp
push
add
jnp
fld
sbb
out
out
test
mov
aam
mov
int
xor
sub
fimull
xchg
push
loop
sub
mov
int
and
xor
aam
mov
xor
or
fnstenv
loop
xor
in
lods
adc
mov
das
xchg
adc
sbb
pop
dec
bound
insb
jge
add
sbb
popa
or
xor
rcll
mov
aaa
test
ret
and
notl
sub
sub
xchg
stos
insb
jo
xchg
pop
mov
jo
les
fcompl
fwait
scas
adc
lahf
imul
cmc
sbb
idivl
mov
jnp
icebp
inc
test
mov
lret
pop
ret
dec
or
pop
sub
rorb
jae,pt
xchg
aad
jmp
push
negb
sahf
mov
out
cmp
cmp
nop
sbb
fisttpl
adc
lret
or
mov
out
test
divb
aas
lock
adc
push
cmp
adc
in
pop
push
insb
push
push
iret
ljmp
fcmovnu
sbb
cs
push
es
mov
adc
dec
pop
jge
arpl
mov
cli
popf
jns
xor
fs
jmp
popa
xchg
cmp
stos
or
lea
aam
xor
pusha
aad
cmc
rclb
pop
add
call
inc
std
push
mov
fdivr
aad
out
pop
and
imulb
fwait
imull
mov
pop
mov
fcoml
aad
mov
sbb
xor
in
mov
leave
add
and
inc
pop
outsb
pop
inc
ss
mov
sti
das
stos
mov
fisubrl
bound
and
sbb
and
lds
mov
dec
mov
sbb
loope
push
mov
add
push
insl
cmpsl
fdiv
mov
mov
shl
mov
jno
popf
movsb
pop
mov
es
stc
pop
dec
test
sub
lock
jne
xchg
cmp
inc
subl
push
insb
roll
and
int3
mov
add
xor
pop
and
mov
iret
adc
jo
mov
aaa
jne
imul
int
sti
mov
ss
add
js
imul
push
jle
aaa
and
and
pop
test
cmp
fstps
nop
mov
xchg
mov
pusha
ret
adc
out
rorl
xchg
call
lcall
in
mov
stos
lret
pushf
sub
aas
cmpsl
js
push
pop
adc
ljmp
and
repz
mov
mov
dec
divb
lods
lea
fwait
out
mov
push
dec
popa
int
and
xor
add
int3
lret
test
xchg
cmp
sub
mov
aas
mov
or
orb
inc
inc
imul
push
push
mov
and
xchg
dec
sti
imul
cmpsb
addr16
xchg
cmpsb
fisubl
scas
lods
mov
push
jmp
pusha
mov
repz
test
fsubs
cltd
dec
stos
pushf
ljmp
gs
push
mov
test
ffreep
xor
cwtl
lds
pop
cltd
int3
sarl
sub
or
iret
leave
push
push
fwait
jnp
aad
cmp
cmp
aaa
adc
rep
mov
mov
sub
jg
sbb
insb
rol
dec
repnz
rcrl
lds
out
jae
xor
and
sahf
mov
sbb
inc
inc
enter
inc
ljmp
in
pop
add
push
add
adc
xchg
inc
shrb
mov
dec
bound
insb
sti
lret
stos
or
nop
cmp
and
fwait
nop
les
jp
dec
mov
test
mov
xchg
adc
loopne
cmp
cmp
data16
hlt
push
testl
and
sub
inc
mov
xor
and
fidivrl
xchg
sbb
mov
push
sbb
dec
aad
lret
cmp
shrl
test
outsl
test
mov
das
xor
jmp
cmp
dec
jb
pop
fcoml
int
sbb
jb
lret
or
xorb
jg
andl
or
and
add
data16
scas
xchg
sub
popf
cvttps2pi
fimull
mov
push
stc
mov
jae
ds
pop
xchg
push
xchg
push
dec
mov
fwait
or
cld
lods
pop
cmp
js
mov
sub
shl
push
aad
icebp
std
inc
lds
push
push
pusha
sar
movsl
icebp
sbbb
addb
imul
dec
sbb
in
mov
inc
dec
les
enter
call
js
dec
icebp
je
movsl
xor
or
pop
xor
mov
push
mov
test
mov
or
add
repz
bswap
scas
sub
push
sub
push
movsb
dec
aam
stc
repnz
jmp
cld
push
call
mov
mov
cltd
jns
cmp
insl
sbb
pop
pushf
mov
vfmsub231pd
leave
jp
pushl
pop
nop
ja
and
pushf
ss
jmp
enter
insb
sahf
jo
jb
aam
pop
jno
aad
cmp
icebp
nop
or
xchg
add
mov
clc
jo
add
jno
jp
xchg
jo
adc
adc
nop
mov
pop
mov
add
lret
push
insl
or
shl
inc
or
lret
cmp
push
rcl
data16
inc
or
jb
sub
lods
cwtl
or
mov
fwait
xchg
xchg
dec
loop
movsb
mov
xchg
icebp
lcall
mov
mov
pop
xlat
dec
enter
rorb
jno
fadds
testb
cmpsb
push
dec
add
push
sub
and
lret
fwait
xor
or
rcll
cld
call
pusha
sub
dec
mov
add
dec
push
mov
jmp
cmp
es
in
jl
xchg
mov
test
pusha
mov
hlt
mov
cmp
xlat
mov
dec
imul
stos
push
xor
and
ss
mov
aad
and
les
orb
mov
rorl
jmp
nop
clc
das
test
int
lret
and
mov
mov
addl
into
scas
nop
or
sub
and
stos
out
sbb
mov
enter
push
clc
jmp
daa
fnstsw
or
mov
mov
ss
cmp
cltd
into
push
imul
mov
outsl
aas
sbb
clc
xor
cmpsb
xchg
jmp
movsl
nop
mov
test
pushf
fistpl
loope
xor
pop
sahf
sbb
cmp
push
rcr
out
cmp
fs
in
stc
pop
sbb
jno
ss
and
pop
mov
fst
push
adc
adc
sbbb
insl
mov
jp
inc
pop
das
leave
cmp
sbb
lock
stos
fistl
jp
xor
mov
jne
push
push
shl
ss
iret
jmp
pop
dec
jp
out
sarb
dec
jno
repz
test
sti
sub
call
inc
inc
ftst
pop
sti
stc
mov
dec
jecxz
testl
push
inc
mov
nop
sbb
inc
cli
sbb
push
xchg
mov
pop
decl
inc
xchg
outsb
push
jno
cmp
or
in
test
fiadds
ja
into
xchg
imul
jge
lahf
test
push
mov
xchg
lds
ret
cmp
sub
aas
adc
sub
dec
adc
xor
xchg
mov
popa
sbb
inc
xchg
mov
adc
decl
cs
cmpsb
adc
sbb
cmpb
cmp
xchg
mov
cmp
imul
stos
fnstsw
inc
add
ret
movsl
push
add
sub
cmpsb
lods
ds
jmp
and
ja
jl
xchg
or
mov
push
cmp
sbb
xchg
and
pop
jg
fisubs
push
les
fstpl
mov
lahf
or
pop
adc
in
mov
popl
xchg
inc
jns
inc
xchg
lods
repz
push
insl
dec
inc
xchg
cmp
pop
add
loopne
push
scas
negb
mov
xor
fisttpl
push
loope
stos
lods
add
push
roll
test
and
xchg
and
cmc
and
sbb
clc
and
dec
sbbl
in
or
shll
add
lea
jae
xor
cmp
mov
pop
sbb
xchg
jbe
jle
dec
ljmp
leave
cmp
jno
jno
bound
xchg
mov
inc
pop
cmp
sbb
mov
push
lods
lahf
or
sti
pop
or
fbld
mov
jbe
push
repz
aam
fbstp
sub
shlb
rcrb
jle
mov
cmpsl
jns
xor
hlt
xor
sbbl
lods
stc
xor
rorb
shlb
jecxz
xchg
es
add
jp
fisttpl
ljmp
mov
icebp
pushf
cltd
or
leave
arpl
arpl
cld
dec
imul
sub
jp
mov
fstps
and
imul
sub
sarl
dec
lock
pop
movsb
mov
test
mov
xchg
mov
repz
call
push
inc
outsb
iret
sbb
or
xchg
data16
mov
insb
inc
mov
mov
gs
repz
or
jg
pusha
push
or
subb
jl
sbb
ds
pop
jb
add
movsl
xchg
stos
jae
cmp
push
sbb
movsb
mov
or
arpl
sahf
fisubl
outsl
inc
dec
add
mov
mov
inc
or
pop
gs
shl
lcall
in
leave
sarl
jle
jg
sbb
cmp
push
dec
movnti
stos
mov
cmp
in
in
xor
arpl
enter
dec
lods
nop
cmp
jmp
movsl
jl
imul
test
mov
fwait
jmp
scas
fwait
xchg
inc
les
ja
incl
shll
inc
sub
lds
adc
push
push
adc
jo
xor
lcall
int
dec
push
lret
mov
xor
das
cmp
cld
xchg
out
push
stc
ss
mov
mov
jle
add
lea
lahf
push
gs
cli
fildl
popf
dec
shr
jge
jmp
push
in
pop
xor
orb
jo
scas
movsb
daa
cwtl
and
in
test
or
rolb
cs
mov
jb
stos
addb
mov
loop
jno
notl
fs
pop
add
xchg
repnz
xor
fwait
inc
inc
std
xor
pusha
cmpsb
je
cmpb
stos
dec
jmp
or
popf
mov
inc
icebp
cli
cld
xor
sarl
stos
movsb
nop
pop
sarl
ficomps
loop
aam
cmc
sub
scas
xchg
sub
testb
inc
add
dec
jg
andb
nop
push
cli
shl
jo
and
pop
pop
sbb
pusha
inc
in
and
add
pop
sub
cltd
mov
sbb
pushf
sub
in
pop
test
out
cli
xchg
std
inc
cmp
iret
and
sbb
mov
push
call
cs
imul
incl
jne
xor
sbb
inc
jno
test
dec
addr16
stos
flds
cmp
mov
xchg
out
in
inc
xor
adc
cli
fdecstp
mov
adc
and
loope
test
cmc
orb
inc
dec
in
lea
mov
or
jecxz
addr16
aad
aaa
ret
test
mov
xchg
sahf
sbb
orb
push
int3
stc
jne
int3
jmp
lods
mov
rcl
daa
inc
xchg
les
jo
out
jg
sub
rcrl
sub
in
loop
mov
es
cltd
out
adc
test
mov
leave
add
fists
or
mov
and
leave
test
or
sbb
adc
loop
in
xchg
ja
sbb
outsl
xchg
and
jno
mov
sub
add
mov
outsl
xor
xchg
orl
loopne
dec
in
mov
in
mov
xchg
jge
mul
jb
jg
add
xor
xchg
mov
popa
jns
xchg
loope
cmp
push
pop
fwait
and
mov
out
movsb
jl
inc
cmp
mov
inc
push
pop
enter
push
clc
mov
cmc
lea
clc
es
jne
jge
mov
test
push
push
outsl
push
xor
sti
test
ss
mov
fisttpl
jb
xor
and
dec
sub
adc
movsb
add
xchg
jge
cmpsl
dec
stc
arpl
jbe
xchg
add
ja
jmp
adc
push
sub
and
mov
add
xchg
jmp
lret
fxch
jecxz
mov
and
cmp
dec
push
lods
jbe
mov
and
xchg
inc
loopne
push
cmp
fbld
inc
and
scas
fadds
xchg
xor
shll
pop
loop
mov
std
inc
sbb
mov
adc
icebp
popa
cmp
mov
cmp
out
pop
pop
shrl
daa
mov
jmp
push
loop
push
cmp
cmpsb
cs
pusha
cmc
loop
mov
mov
add
dec
dec
xor
pushf
sti
ficomps
or
sbb
cmp
ja
ds
ret
push
xchg
adc
mov
inc
fstps
xchg
jmp
mov
xchg
jns
add
in
mov
inc
mov
and
div
or
out
mov
test
jae
inc
mov
mov
jge
ss
xchg
jnp
cmc
sub
mov
xor
jbe
jo
push
cmpsl
inc
jmp
addb
lcall
adc
ja
adc
aas
cmp
lods
loop
divl
std
jno
mov
or
das
fldenv
arpl
xor
les
mov
mov
cmpsl
adc
cmp
pop
inc
pop
ret
xor
cld
xchg
pop
adc
pop
ret
jne
mov
adc
int3
sub
mov
sub
fldz
pop
adc
inc
fsts
btrl
xor
dec
cmp
out
fcmovb
adc
in
in
jne
mov
lahf
cmp
add
ss
jle
dec
jns
push
pop
adc
sahf
repnz
cmp
or
push
and
adc
xor
xchg
out
jbe
scas
rclb
xchg
cltd
jecxz
lock
inc
mov
inc
dec
push
xor
adc
test
adc
adc
stos
mov
ret
orl
fimull
cwtl
push
sbb
or
pop
in
cmpsl
lcall
mov
jns
imul
and
out
fstp
pop
xchg
pop
cmp
and
enter
adc
leave
int
cmp
fmuls
sarl
add
loopne
pop
adc
ljmp
mov
outsb
xchg
add
cltd
jnp
push
dec
insb
scas
movsl
mov
ljmp
adc
scas
xchg
mov
or
scas
loope
mov
lret
imul
sti
cmp
sbb
push
insl
test
and
pushf
adc
xor
daa
jnp
pop
cs
cwtl
test
into
lock
dec
mov
push
std
push
and
sub
stos
jns
out
xchg
and
cs
cmp
ror
xor
jp
mov
jle
add
repz
push
mov
xor
repnz
inc
test
pop
adc
arpl
xchg
pop
push
shll
mov
xor
and
xchg
xchg
out
aas
cmpsb
std
andl
andb
pop
push
push
xorl
int3
jl
js
or
ret
dec
stos
sahf
and
stos
mov
lret
sbb
inc
adc
sub
repz
stc
xchg
add
push
fwait
mov
mov
insb
aaa
xchg
notb
fcomp
mov
mov
xchg
xchg
fnsave
repz
insl
test
add
daa
daa
and
frstor
mov
dec
and
loop
cmpb
shlb
sbb
ds
jle
and
adc
std
mov
dec
jno
stos
xchg
mov
mov
push
push
std
jo
dec
mov
clc
rorl
mov
sahf
push
push
je
jns
out
sti
sbb
pop
std
loope
inc
xchg
cmp
ljmp
jp
jmp
sbb
cmc
jne
insb
xor
or
movsb
lods
xchg
call
and
pop
sub
sub
adc
pop
rcrb
dec
mov
clc
cmp
dec
sub
cmp
mov
inc
addr16
dec
lcall
mov
inc
andl
xchg
lahf
pop
dec
fidivl
xchg
hlt
aam
push
or
push
pop
lds
inc
mov
lret
add
fmul
notl
inc
jp
das
or
jg
or
test
insb
mov
repz
dec
orl
sbb
xchg
pavgw
sti
aad
out
ljmp
pop
mov
pop
into
and
push
jne
pusha
pop
push
leave
rclb
cwtl
xchg
lcall
dec
cmp
xor
push
js
je
arpl
inc
lods
pop
fwait
ret
dec
xchg
aad
cmp
lock
adcl
mov
out
fmul
scas
xchg
js
inc
mov
iret
and
push
add
mov
pop
scas
xchg
xor
jmp
push
inc
and
mov
aaa
stos
scas
mov
pop
fcoml
popf
imul
sub
push
test
and
sti
jae
call
mov
mov
enter
mov
mov
xchg
mov
lret
push
cmp
negb
int3
dec
push
testb
adc
in
ret
fists
mov
cltd
fisubl
mov
push
or
outsb
fcompl
flds
sub
fxtract
and
mov
inc
clc
pop
ss
mov
inc
jl
and
push
cmp
pop
shlb
test
adc
out
and
mov
repnz
push
cmp
loopne
mov
lahf
dec
out
cmp
sub
sbb
or
clc
aas
call
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
sub
sbb
or
clc
aas
call
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
sub
sbb
or
clc
aas
call
outsl
mov
pop
mov
pop
lahf
dec
out
cmp
sub
pop
enter
inc
movsl
fcomps
mov
mov
cmpsl
notl
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pushf
cmp
adc
dec
xchg
xor
dec
sbb
or
mov
jmp
lret
pushf
cmp
fdivrl
push
pop
in
das
sbb
or
cmp
sub
pushf
lahf
dec
ljmp
mov
mov
jp
push
pop
in
dec
sbb
das
mov
sub
pop
mov
add
mov
rolb
pop
adc
jge
ret
push
mov
in
rcrl
or
aam
pop
cmp
jo
xchg
push
out
rclb
shl
mov
rcrl
sub
fwait
int3
sub
push
aaa
mov
mov
pop
stos
cmp
in
jne
add
insb
push
pushf
mov
aas
shrd
push
push
in
stos
xchg
inc
mov
pop
inc
bt
or
ljmp
insb
aad
in
pop
test
int3
test
test
mov
pop
mov
sub
insl
sub
jae
jg
daa
add
xor
in
ret
dec
mov
add
or
sarl
cmp
fdivrl
push
pop
in
dec
sbb
or
cmp
sub
pop
cli
dec
ljmp
clc
push
aad
lds
cmp
out
ds
imul
pop
test
scas
stc
push
jmp
imul
or
pop
fdivrs
std
sub
pop
lahf
and
sbb
sarl
jb
dec
int3
push
pop
in
dec
sbb
or
cmp
sub
pop
cli
dec
ljmp
mov
mov
jp
push
pop
in
dec
sbb
or
cmp
sub
pop
cli
dec
ljmp
test
int
into
jmp
imul
sahf
in
popa
cmpsb
jnp,pn
inc
or
icebp
cli
outsl
test
lcall
xlat
imul
inc
inc
add
dec
cltd
xchg
adc
scas
sub
mov
jb
or
orl
mov
xor
stos
fiadds
and
mov
ret
mov
pop
ljmp
mov
pop
mov
lret
inc
inc
jae
sahf
lret
add
jns
scas
xor
xchg
lret
cltd
data16
out
nop
mov
mov
jo
into
xchg
mov
pop
test
arpl
sub
test
pusha
dec
in
sub
leave
adc
push
lcall
repz
sub
stos
jnp
sbb
je
aad
stos
in
mov
fidivrs
int
jmp
xchg
fadd
jnp
int3
cmc
mov
cmp
mov
call
call
cmp
stos
mov
mov
jno
sbb
push
dec
shlb
xor
push
add
xchg
inc
mov
mov
fs
clc
adc
fnsave
pop
mov
and
stos
jb
into
inc
addr16
ja
xchg
cmpsb
jo
jge
repnz
inc
ja
icebp
inc
xlat
mov
cmpsb
jb
imul
movsl
imul
pop
lock
imul
jmp
addr16
inc
mov
out
mov
add
stos
push
push
xchg
std
mov
popl
lds
dec
movsl
insl
aam
inc
jmp
inc
out
mov
push
push
xchg
mov
mov
pushf
jne
cmp
push
push
test
in
xor
inc
cltd
imul
cmp
out
lret
dec
xor
mov
dec
in
enter
mov
add
dec
mov
incb
aaa
sub
out
cmpsl
movsl
mov
sahf
cmpsl
scas
sbb
xchg
popa
je,pt
ficompl
repnz
stos
pusha
and
pop
mov
and
push
mov
and
xor
rcrb
call
jo
lret
xor
int3
movsl
cld
mov
les
mov
pop
mov
and
mov
xor
mov
ljmp
push
jb
xchg
pop
test
xchg
test
dec
xchg
pusha
fistps
insb
cwtl
popf
mov
dec
loop
push
cltd
insb
ret
pop
xchg
push
mov
sub
imul
or
add
push
inc
hlt
xchg
jb
xchg
jl
mov
popf
mov
loopne
pop
push
mov
jg
mov
outsl
cld
mov
lock
jecxz
stc
dec
out
jno
mov
aam
dec
repz
or
push
xchg
hlt
std
add
rcr
mov
in
rol
or
adc
xchg
test
lock
je
cmpsb
lret
fs
jo
adc
pop
sbb
and
into
arpl
inc
test
dec
xor
nop
push
loop
pushl
icebp
notl
std
stos
xor
mov
mov
movsl
lods
rorb
rcrl
andl
gs
scas
xor
mov
out
fs
in
fs
leave
mov
insl
mov
ret
mov
aad
and
gs
gs
dec
psllq
adc
outsb
imul
inc
inc
xor
inc
fbld
pop
pop
adc
sbb
out
pop
xchg
xor
mov
gs
lahf
xlat
jns
inc
cmp
mov
and
and
out
cmp
adc
dec
mov
inc
movsl
push
ja
aam
call
mov
les
in
call
pop
sbb
push
mov
pop
jmp
cmp
xchg
mov
xbegin
xor
pusha
popf
sbb
dec
imul
dec
sbb
xor
fidivrs
jb
adc
mov
ret
xorb
jp
movsb
mov
data16
xchg
adc
sbb
mov
cmp
movsb
mov
xor
data16
inc
mov
add
sub
aam
xor
je
mov
mov
mov
push
cmp
bound
es
jg
ds
xor
cmp
imul
and
dec
jbe
mov
lock
sarb
sbb
mov
mov
lods
push
or
popa
jle
pop
sbb
mov
mov
sahf
mov
lret
and
mov
in
inc
sbb
mov
mov
adc
into
xchg
push
shrb
pop
add
rol
loope
push
fsub
adc
sub
xor
mov
loope
jns
sub
sahf
repnz
int
xchg
mov
pop
jge
pop
add
rol
pusha
sub
cs
dec
and
in
dec
xlat
cmp
cld
pop
jp
pop
adc
add
test
cmp
in
fs
fs
inc
dec
xor
inc
clc
jne
in
inc
mov
lret
xlat
daa
js
inc
inc
in
int
xchg
pop
arpl
sub
hlt
lods
push
mov
xor
out
ss
aad
iret
pop
adc
mov
outsb
lea
xchg
fsubs
add
push
faddl
xchg
mov
dec
je
mov
loopne
inc
xchg
cmpsb
push
jp
mov
cmp
pusha
jno
cmp
push
les
or
xchg
inc
and
or
xor
pop
aas
lret
sub
mov
sbb
sbb
push
adc
in
addr16
scas
push
std
into
lret
sub
xor
sahf
pop
jb
jae
push
lcall
in
dec
cld
std
sub
xchg
popa
xchg
mov
es
enter
loop
push
jp
xor
inc
inc
rcr
cmp
daa
jb
jne
fisubrl
addr16
cmp
sbb
jecxz
inc
mov
clc
sti
cli
in
fisubl
mov
filds
arpl
es
outsb
inc
push
mov
cmpsl
ja
pop
ja
lcall
icebp
xchg
insl
mov
pop
in
mov
repnz
imul
rcr
stc
jo
or
adc
xchg
fsubs
push
xor
out
xchg
jae
adc
fistl
add
add
out
pop
popf
xchg
xchg
dec
sbb
andb
jb
lock
mov
test
and
jg
or
mov
int
js
or
rcrl
dec
rorb
lock
mov
movsb
inc
and
addb
loopne
imul
adc
sbb
mov
in
inc
and
fldenv
xchg
aas
xchg
xlat
push
stos
hlt
adc
mov
out
sbb
mov
add
pop
fisubrl
add
cwtl
push
jae
fimull
fs
repnz
gs
js
sarb
clc
push
mov
out
inc
rol
mov
xor
roll
enter
into
dec
shlb
cmpsb
mov
data16
sbb
cmp
jae
lods
sub
mov
inc
dec
pop
out
in
imul
ds
repz
cmc
pop
jne
int
in
les
sbb
sub
adcl
inc
push
xor
or
cmp
adc
js
fstl
inc
addl
hlt
fwait
lds
nop
cltd
inc
push
inc
loopne
cli
loope
mov
bound
scas
orb
mov
dec
lds
cmp
in
sbb
pop
xchg
jbe
or
xor
sahf
or
and
or
pop
mov
shrl
popa
out
inc
push
in
add
inc
je
dec
xchg
ljmp
fwait
ret
mov
and
mov
popf
xor
push
loopne
inc
cltd
fldenv
popf
in
pop
nop
gs
sub
mov
sbb
loop
jecxz
incl
test
andl
insl
in
lcall
addl
mov
sub
xchg
sbb
in
push
push
xor
inc
xchg
leave
icebp
push
push
push
xor
ja
ss
in
cmp
out
imul
es
push
add
and
or
outsl
cmp
mov
leave
cs
daa
xsha256
cmpsb
push
or
fistl
inc
lret
inc
xor
mov
xor
xor
test
test
int3
das
stc
test
or
call
add
or
push
paddb
out
adc
mov
icebp
or
sub
testb
add
lret
movsl
mov
shlb
add
lods
jae
lret
jle
stos
mov
ja
inc
inc
jo
aam
fwait
insb
dec
jle
adc
stos
lods
mov
pop
das
push
test
jg
inc
sbb
and
and
mov
adc
cmp
jle
xlat
mov
pop
les
sbb
sarb
adc
leave
or
xor
mov
inc
pop
cli
outsl
cli
add
cld
mov
mov
fiadds
lcall
cmp
push
iret
jno
call
mov
mov
xchg
bnd
jno
testb
mov
mov
jns
and
mov
fs
fmull
in
sbb
cmp
mov
sbb
cmp
jg
out
scas
faddl
roll
mov
xchg
faddl
mov
mov
inc
mov
jns,pn
aas
sbb
pop
sub
test
and
out
shlb
icebp
mov
xor
jge
jp
pop
iret
in
sbb
loopne
jns
clc
cmpsl
lock
mov
xchg
lret
je
stos
imul
add
fdivrs
inc
stc
cld
mov
inc
cmp
or
enter
imul
mov
or
outsl
adc
pusha
xor
rorb
aaa
jo
out
out
mov
jne
mov
ja
lret
outsl
rcrb
sbb
xchg
inc
or
lahf
add
pushf
jno
leave
and
mov
mov
lret
sahf
ret
loop
jmp
data16
dec
mov
addr16
mov
cld
add
inc
inc
jnp
xor
rolb
jecxz
icebp
jmp
add
repz
data16
sbb
jnp
imul
cmp
xor
or
add
pop
dec
scas
add
dec
and
loope
sub
test
ss
jmp
outsl
xor
addr16
xchg
cmp
and
into
add
dec
mov
je
es
push
clc
cld
xor
loop
mov
xchg
shrb
push
shrb
lss
cmp
testl
xchg
inc
and
insb
mov
xor
hlt
push
fstpl
xchg
xchg
out
and
stos
jbe
cmp
mov
stos
cmc
xchg
pusha
cmpsb
shr
jmp
inc
shlb
pop
add
mov
sbb
xchg
pushf
xchg
test
ljmp
mov
mov
imul
push
fdivs
cmp
sub
call
xchg
xor
inc
lods
clc
inc
push
mov
cmp
test
nop
in
test
iret
je
aas
aad
mov
jge
or
pop
orb
incb
add
shll
int
mov
jle
mov
cmp
sub
imull
aad
push
and
test
dec
push
leave
mov
pop
xchg
data16
insb
es
mov
arpl
push
lods
push
lock
outsb
push
xchg
pop
pop
dec
dec
mov
imul
out
mov
xor
test
mov
sbb
dec
roll
jae
inc
xchg
and
pop
loope
loopne
outsb
push
mov
and
dec
pop
or
incl
stos
inc
insl
shrb
addr16
add
gs
xchg
xorl
xchg
mov
inc
dec
movsl
xor
or
mov
adc
daa
push
and
cli
adc
lods
lahf
jo
stos
cmp
sub
es
mov
dec
cmc
inc
sbb
lret
or
lods
fistl
sub
jno
outsb
pop
add
dec
xchg
jge
cmp
loop
dec
push
dec
ficoms
xor
xchg
adc
and
add
mov
dec
pop
loopne
sti
fidivl
mov
mov
movsl
rorb
inc
sub
push
loopne
sub
adc
cmp
sub
popf
hlt
xor
fbld
fwait
jbe
fsubl
xlat
jae
daa
inc
insb
mov
xchg
lret
cmc
pop
pop
repz
test
rolb
push
fst
icebp
lods
and
add
pop
dec
rcrl
hlt
fisubrs
cmpsl
inc
in
aad
gs
add
sbb
cltd
stos
icebp
mov
and
lcall
popf
popa
imul
and
jbe
jecxz
aaa
push
or
leave
out
push
clc
jecxz
push
add
pop
jne
test
mov
push
jmp
mov
iret
adc
mov
stos
jp
push
mov
mov
fiadds
mov
shll
enter
jp
push
mov
xlat
stos
lret
jmp
cltd
aad
cli
xchg
push
sbb
cmc
jp
insb
test
dec
jmp
je
add
rclb
add
incb
inc
jnp
ret
ret
stos
sub
jae
loope
add
mov
xchg
dec
popf
or
test
mov
dec
mov
sti
jl
xchg
test
mov
popf
out
out
mov
test
popa
in
dec
mov
bound
pop
cmc
mov
mov
out
filds
stos
lret
or
sub
sub
aad
mov
cmpsl
test
push
and
in
bnd
push
sarb
push
movl
and
dec
add
pop
repnz
mov
jl
cmp
lock
add
add
sub
push
xor
xor
movsl
pop
cwtl
loop
mov
int3
push
rcl
imul
mov
popa
inc
pop
cmp
sub
mov
xchg
sbb
aam
scas
sbb
adc
rorb
das
mov
repnz
cwtl
push
icebp
mov
pop
cmp
arpl
pushf
xor
movsl
sbb
xlat
cs
scas
lret
xchg
sub
push
movb
test
lret
sub
mov
mov
mov
roll
mov
push
icebp
jge
jecxz
or
andl
fcompl
dec
cmp
mov
mov
sub
test
call
sbb
dec
mov
xchg
add
push
inc
ds
push
xchg
sbb
out
pop
jl
add
iret
sbb
mov
dec
dec
and
mov
and
stos
or
or
test
xchg
ss
pusha
adc
push
sbb
jecxz
push
imul
push
sbb
fs
scas
ljmp
dec
xor
jle
dec
push
pusha
pop
fcompl
add
loopne
xchg
rolb
mov
dec
push
icebp
add
xor
movsb
push
aaa
add
subl
dec
test
and
int3
and
sbb
lods
mov
js
push
add
push
mov
sbb
mov
xchg
ficomps
bound
out
xor
mov
inc
out
out
dec
adc
popa
cli
outsb
mov
mov
push
shll
das
rorb
mov
loopne
aas
rolb
test
into
loope
cmp
loopne
xchg
aad
lcall
ja
push
jmp
inc
dec
int
cltd
cmpsl
mov
call
pop
and
fimull
xchg
test
inc
and
cmp
adc
xor
dec
std
cwtl
dec
stc
jno
sub
mov
je
push
lcall
cwtl
fmuls
dec
cmpsl
sbb
pop
jbe
mov
sbb
fiaddl
pop
pop
inc
lods
faddl
scas
mov
addr16
push
stos
movsl
mov
or
lret
adc
pusha
lea
cmp
aad
lcall
js
xor
imul
mov
dec
xchg
add
fldcw
fmul
js
jecxz
aam
ds
pop
dec
pop
pop
mov
xorb
mov
xchg
dec
xor
nop
rcll
and
jge
inc
loope
push
cmpsb
mov
add
movsl
nop
mov
sub
add
sbb
mov
xor
xor
push
sahf
mov
xchg
mov
pushf
mov
jle
aam
shlb
mov
mov
rol
enter
scas
pusha
les
jmp
fmuls
mov
leave
mov
mov
add
roll
lock
xor
xor
xor
lahf
xchg
cmp
repnz
mov
fsts
mov
inc
mov
loope
shll
add
push
dec
aaa
xor
stos
mov
jbe
sub
es
bound
mov
int3
cld
adc
jbe
add
jle
mov
jne
cmp
add
mov
pusha
scas
jecxz
and
addb
cmpl
cltd
je
mov
mov
mov
or
jno
ja
dec
xchg
xchg
adc
dec
cwtl
mov
js
out
outsl
add
daa
mov
xchg
cbtw
inc
fs
and
leave
ds
add
jp
adc
or
cmpsl
xor
ret
inc
and
jne
mov
jmp
sti
push
fnstcw
icebp
inc
insl
mov
rorl
gs
inc
xchg
out
loope
cld
pop
push
xchg
jae
add
aam
push
inc
jle
and
push
dec
jnp
fildl
xor
xchg
icebp
lret
sub
or
cmp
mov
rorb
pop
push
ss
scas
repnz
out
lds
mov
mov
movsb
test
loop
push
stos
push
mov
push
inc
cli
push
inc
pop
out
mov
dec
in
mov
lods
mov
test
enter
and
cld
push
notb
ljmp
roll
mov
cld
xchg
push
sub
imul
idivl
jg
push
aam
inc
inc
sbb
repnz
sbb
hlt
push
out
mov
out
mov
faddl
loope
dec
sub
push
and
adc
mov
dec
sbb
cmpl
mov
jle
out
test
cmpsb
lret
loope
test
pop
das
arpl
out
rcr
cmp
daa
shrb
mov
sub
dec
jbe
push
sahf
jne
or
popa
into
sub
and
sbb
pop
int
adc
out
xor
xlat
push
outsl
in
pop
cli
movb
clc
cltd
bts
sbb
fcoms
popw
push
out
data16
mov
cmp
jns
inc
xlat
xchg
adc
out
mov
mov
mov
pop
ret
add
mov
movsl
shrb
jns
sahf
mov
movzwl
mov
jbe
imul
xor
sbb
mov
dec
cmp
fcmovnu
dec
cwtl
rcrb
lret
adc
push
inc
pop
dec
dec
push
arpl
dec
cmp
inc
inc
icebp
fcoml
pop
xor
std
xor
adc
push
test
sub
and
or
leave
adc
or
mov
das
jne
ja
cmc
dec
pop
scas
pop
jae
adc
sbb
push
fldl
rcrl
or
push
sar
xchg
test
mov
fdivrs
pop
mov
mov
lahf
xchg
jecxz
daa
xchg
or
decl
mov
mov
inc
sbb
mov
loopne
or
push
mov
cmp
icebp
ret
sub
sub
insl
aaa
imul
add
out
dec
rcrb
jp
inc
jg
sub
rcr
cmp
icebp
jno
dec
ret
fildll
js
test
sbb
jmp
dec
dec
out
dec
push
xchg
lods
mov
fcmove
mov
mov
pusha
cltd
pop
cmpb
sbb
std
out
into
mov
and
pop
roll
mov
popa
xlat
and
xchg
pop
shll
sbb
mov
dec
lea
inc
lods
xchg
and
inc
xchg
xchg
fisttpl
mov
loopne
and
mov
xor
sbb
jb
push
xor
fildl
mov
es
dec
movsb
pop
rclb
xlat
test
mov
jo
leave
and
push
test
out
leave
sbb
pop
clc
out
push
or
dec
lock
cmc
mov
into
pop
hlt
xorl
mov
xchg
mov
out
lahf
mov
repz
pop
or
int
cmpsw
mov
jle
repnz
subl
fsubl
adc
adc
mov
sbb
mov
jbe
dec
pop
std
push
inc
inc
test
fwait
pop
inc
sub
jle
test
jecxz
or
or
push
push
test
jns
pop
xor
pusha
dec
test
je
jo
ja
push
insl
movsl
daa
pop
sbb
jle
add
dec
sbb
and
data16
adc
add
jmp
push
in
mov
addr16
sub
xor
xchg
pop
lcall
repz
mov
push
sbb
out
sub
inc
adc
xor
mov
mov
sub
jg
mov
xor
imul
jo
jecxz
popf
xchg
insl
mov
xchg
pop
adc
and
mov
jp
push
pop
in
dec
sbb
or
cmp
sub
pop
cli
dec
ljmp
mov
mov
jp
push
pop
in
dec
sbb
or
cmp
sub
pop
cli
dec
ljmp
or
cmp
lods
or
push
pop
insb
dec
sbb
or
cmp
sub
pop
cli
dec
ljmp
mov
mov
jp
push
pop
in
mov
or
xchg
lcall
or
sbb
xchg
insb
test
mov
movsl
pop
fisttpl
mov
nop
sub
repz
lods
inc
push
jne
gs
xchg
push
movsl
pop
aad
lds
cmc
or
ss
shlb
jne
gs
xchg
into
test
aad
lds
add
sub
test
fidivrs
cli
or
fsubrl
cmp
jle
push
arpl
pop
std
mov
fidivs
mov
ja
rcrl
imul
inc
cmp
cmpsl
cmp
adc
jecxz
sub
aaa
mov
out
add
and
sub
rorl
outsl
call
cmc
pop
int3
inc
adc
shrb
js
dec
and
aad
aad
or
lea
mov
mov
addr16
mov
popf
cmpsl
outsb
sbb
cmp
leave
in
add
sub
xchg
push
mov
mov
js
sbb
outsl
test
push
pusha
mov
rolb
or
pop
mov
movsl
pop
aad
lds
cmc
or
mov
lret
push
xchg
inc
push
jne
gs
shrl
pop
shlb
xor
lea
push
stos
add
xor
sub
xor
xor
xchg
idivl
in
shlb
test
sub
pop
lea
call
pop
in
gs
sbb
cwtl
fsubl
xor
lds
cmc
or
sbb
enter
test
mov
xchg
push
movsl
pop
aad
lds
cmc
or
sbb
enter
test
mov
xchg
push
xorl
jl
jb
imul
imul
test
in
imul
gs
jnp
inc
jns
lods
ljmp
inc
movsl
dec
xor
sub
adc
add
inc
xchg
xchg
mov
sarl
stc
aad
dec
lods
jecxz
push
inc
xor
cmp
icebp
lock
mov
mov
sti
in
pop
cld
xor
adcl
lret
inc
stos
mov
inc
loopne
cmp
ljmp
push
ljmp
es
jp
mov
hlt
js
and
imul
mov
aam
or
aas
sub
fmulp
xchg
xchg
and
repnz
mul
jl
insb
dec
xchg
in
cmp
jg
jae
jp
imul
test
jo
aam
xor
push
test
mov
inc
jp
and
sbb
ds
add
inc
int
mov
dec
je
dec
push
cmp
loop
mov
xchg
dec
je
fdivl
add
xor
inc
cmp
mov
aaa
inc
add
xchg
jnp
nop
ss
leave
xor
jbe
sti
aas
repz
xchg
cwtl
or
fistps
mov
std
push
dec
mov
lea
jmp
int3
out
inc
jge
mov
in
jp
loopne
push
pop
lock
add
loope
clc
xchg
adc
mov
fistps
jno
mov
xor
mov
stos
jecxz
mov
cmc
stos
dec
cmp
mov
les
xchg
lret
pop
pop
in
inc
mov
jmp
loop
pop
push
add
enter
out
test
insw
sub
mov
xchg
cmpsb
pop
lahf
pop
jle
push
inc
outsb
fwait
stos
cmpsl
in
loop
add
lds
adc
cltd
ret
aam
push
fsubrs
rol
out
add
sbb
dec
pop
popa
nop
xchg
dec
mov
iret
inc
outsb
out
cmc
outsl
lds
xchg
idivl
imul
rcr
inc
sarl
outsl
std
lods
loopne
adc
adc
or
popf
scas
xchg
gs
daa
enter
mov
sub
out
or
inc
adc
mov
cld
pusha
and
arpl
insb
or
stc
xchg
idivb
into
ret
adc
mov
lret
leave
loope
cmp
mov
scas
scas
imull
mov
push
test
movsl
xchg
add
mov
inc
mov
movsl
bound
stos
mov
inc
jo
in
test
aad
movsl
mov
jae
stc
in
bound
out
jno
pop
dec
insb
rclb
adc
in
jae
popa
sarl
mov
hlt
cld
test
push
test
xlat
dec
sbb
jp
shlb
add
pop
loopne
arpl
test
and
push
inc
pop
test
push
xchg
movsb
dec
mov
es
sub
inc
mov
jecxz
xchg
push
xlat
push
and
lret
icebp
mov
jmp
div
mov
inc
sti
enter
bound
lds
xor
int3
sub
popf
xchg
sub
push
or
int3
arpl
jl
stos
jp
pop
rcl
push
lock
cltd
sub
dec
hlt
int3
mov
popa
push
std
mov
int
mov
sub
adcb
ja
jge
add
sub
mov
xchg
hlt
je
lock
sub
sarb
mov
or
aaa
xor
pop
mov
mov
mov
ss
iret
mov
pop
ficomps
repz
dec
xchg
or
mov
stc
pop
test
clc
add
shl
mov
test
jns
xor
and
or
xchg
es
pop
mov
lret
aaa
aam
xchg
dec
test
mov
add
fcoms
mov
into
mov
adc
out
out
mov
hlt
inc
aaa
mov
dec
ficoml
lods
stos
xchg
shl
xchg
fldcw
dec
and
scas
into
in
pop
jp
adc
and
aas
inc
popf
add
lock
xchg
call
xchg
sub
mov
jne
inc
enter
mov
cltd
out
ret
xor
lods
arpl
add
xor
add
dec
jb
sarl
xor
call
je
sahf
inc
mov
outsb
lahf
repnz
mov
xor
repnz
call
inc
mov
iret
loopne
pop
ja
push
cmp
jnp
pushf
into
jae
jmp
pop
stos
xor
sbb
jp
faddl
imull
fs
adc
into
loopne
and
adc
sbb
ret
adc
ret
dec
jecxz
adc
daa
pop
test
movsl
popf
cld
or
pop
es
pop
xorb
xchg
popa
mov
inc
push
movsl
adc
add
and
clc
out
dec
cmpsb
scas
xor
xchg
pop
lahf
cwtl
rcrl
loop
mov
sbb
jmp
or
adc
out
jb
dec
mov
inc
jnp
sbb
sbb
mov
sar
mov
lret
mov
outsl
popa
dec
test
daa
mov
or
mov
insb
sbb
or
loop
sbbl
pop
rcll
into
aad
jno
stos
adc
push
out
es
mov
pop
pop
cmpsl
push
jecxz
cmp
sub
out
cs
cmp
jns
enter
mov
les
pop
int
push
insb
pop
loopne
scas
inc
jo
or
fistl
mov
mov
movsb
cmpb
dec
and
in
xchg
ret
inc
sti
cmp
mov
adc
scas
outsl
jecxz
mov
ret
scas
aad
inc
imul
insb
inc
je
xor
xor
inc
push
inc
pop
aaa
jle
out
xor
mov
jb
pop
mov
orl
fiadds
into
adc
movsb
jle
mov
sbb
lds
push
xrstors
pop
mov
or
std
imul
add
xor
mov
ficoms
out
lcall
iret
and
decl
in
mov
adc
and
dec
mov
int
data16
mov
clc
scas
dec
pop
sbb
shl
fadds
scas
push
ja
mov
jnp
sub
push
rcrl
pushf
xchg
and
sub
mov
aaa
daa
aad
adc
xchg
ret
xchg
cmp
pop
sbb
test
fwait
and
nop
cmc
negl
xor
and
add
negb
pop
add
pop
xor
fsubr
gs
inc
push
std
pop
push
in
adc
outsl
inc
and
or
xchg
negb
add
lret
cli
pop
mov
imul
mov
adc
jne
shl
js
arpl
mov
xor
add
es
inc
aas
inc
addr16
add
rcrb
scas
pop
and
cltd
repnz
rorl
push
repnz
lea
mov
xor
out
and
stos
pop
int3
ret
add
in
mov
lods
popf
push
add
les
push
jae
xchg
stos
jne
lock
jp
arpl
and
enter
icebp
mov
adc
lods
scas
xchg
adc
and
gs
cld
lods
stos
xor
ror
and
jecxz
repnz
fdiv
mov
xor
xchg
mov
das
dec
dec
lret
adc
xor
mov
pushf
or
into
or
and
adc
iret
sub
add
mov
movsb
rolb
loop
cmp
andb
js
inc
jo
leave
mov
adc
cld
int
sub
adc
pop
bound
sub
cltd
gs
push
add
int3
inc
or
jmp
popa
push
in
aas
mov
mov
movsb
sub
mov
gs
fnstenv
mov
mov
test
xorb
ficoms
jnp
jo
leave
mov
sub
xor
jo
dec
cmpsl
xor
add
enter
in
mov
fbstp
lcall
push
xchg
lock
mov
dec
rcrl
loope
cmp
enter
loope
stc
or
ret
ret
push
xor
pop
lahf
pop
out
and
hlt
fs
imul
xchg
ss
fwait
xchg
push
sub
mov
sbb
mov
and
or
jecxz
lods
and
into
test
dec
addl
and
xchg
inc
push
cmpl
lea
xor
mov
dec
pop
adc
daa
mov
cwtl
push
add
ret
or
fsts
and
sbb
cmpsl
mov
leave
test
inc
pop
addr16
dec
mov
pop
mov
pop
push
ret
or
fs
fcoms
xchg
or
lea
imul
add
jp
jo
aas
out
jl
into
or
ror
shrl
dec
push
add
mov
or
sub
or
ja
lea
cmp
out
js
cmp
mov
cmpsl
gs
xchg
cmp
insl
lock
cmpsb
inc
xchg
sbb
push
push
xchg
and
dec
mov
fstp
sub
jge
push
inc
and
mov
out
jle
inc
mov
sti
xchg
pop
mov
mov
out
inc
sub
popf
mov
lea
fsubrl
pop
test
sbbl
divb
mov
cmp
out
outsb
stos
or
and
repnz
xor
test
mov
cli
pop
mov
ret
mov
lret
mov
lea
mov
js
and
push
push
push
mov
pop
xchg
cmpb
stos
cmp
loop
mov
xchg
shl
cmpsl
adc
lret
sub
dec
mov
es
mov
imul
mov
std
sub
dec
mov
add
push
orps
adc
push
sbb
sti
test
jbe
mov
or
xlat
sbb
aas
lret
aaa
or
fimuls
ret
fisubrs
or
mov
or
outsb
stos
shll
arpl
push
lcall
cmc
cmp
jg
push
pop
adc
xchg
cmp
imul
out
push
jns
cmp
push
ds
je
sarl
sti
inc
test
popf
cmp
fs
mov
mov
push
scas
mov
mov
and
cwtl
rclb
push
faddl
or
dec
jmp
addr16
arpl
lret
and
daa
call
jnp
xorb
fistps
jmp
fistpl
mov
mov
nop
xchg
jmp
xor
bnd
adc
pop
or
stc
xchg
mov
dec
cmp
or
arpl
add
arpl
xchg
mov
sub
push
push
add
adc
sbb
ja
jns
jmp
jo
sbb
add
mov
cmp
je
sbb
sbb
cli
fcomps
fs
push
outsb
sbb
movzbl
std
mov
jno
popa
xchg
or
inc
fdecstp
addb
and
and
lret
and
pop
cmpsl
dec
push
lret
cmpsl
mov
cmp
jne
cmp
cmp
xor
adc
js
es
sbb
movsl
jg
xor
enter
shlb
sub
stos
mov
dec
jge
adc
popf
adc
push
movl
dec
in
cmpsb
cmpsl
jb
cmp
leave
mov
cvttps2pi
insb
mov
inc
xor
das
hlt
std
out
jbe
jo
dec
lret
cmp
push
jmp
mov
jo
push
sbb
mov
aaa
stc
enter
mov
cmp
mov
out
dec
movsl
sbb
push
imul
jno
decl
mov
jbe
jp
push
pop
dec
mov
jbe
sbb
jp
xchg
cmp
faddl
cmpl
fidivl
ret
mov
inc
cld
scas
dec
push
enter
xchg
push
pop
icebp
mov
aas
push
test
dec
fdiv
ss
add
pusha
and
mov
mov
lock
sub
sbb
mov
leave
xor
add
inc
mov
and
or
pushf
xchg
repz
cmp
cmpsb
jp
aad
ljmp
xor
mov
gs
ficompl
xor
fucomip
xor
add
adc
in
mov
loopne
sbbb
and
and
loope
or
or
cld
adc
idivl
sub
pop
inc
sti
sbb
and
cmp
jae
ficoms
outsl
fs
dec
inc
xor
xchg
add
jnp
inc
jns
sbb
imul
mov
add
sbb
add
sbb
jl
push
push
fstpt
fs
aad
xchg
dec
adc
inc
inc
cmp
sub
in
stc
jno
jbe
and
test
push
pop
jns
jae
in
jnp
jg
add
sbb
cltd
iret
test
loop
call
jb
cwtl
dec
sbb
xchg
in
add
jbe
inc
xlat
ror
or
fucomp
push
push
pop
mov
xor
ss
xor
adc
outsb
and
sbb
js
aam
push
pop
xor
je
and
stos
mov
jmp
cmpsb
addr16
dec
icebp
add
add
icebp
mov
push
shll
sbb
or
lods
inc
mov
js
lret
jno
cmp
adc
sbb
pop
push
dec
pop
xor
stos
into
je
pop
jo
pop
les
xor
mov
inc
jo
or
movsl
sbb
dec
leave
xchg
imul
fstpt
jg
jbe
repz
jl
aad
fucomip
jo
lret
ja
or
dec
jne
cmpsl
data16
xchg
pop
cmp
rcrl
shrl
sarb
lret
pop
mov
jbe
dec
fldt
jl
jmp
addr16
daa
add
mov
dec
cmpsb
lahf
xor
es
inc
xor
icebp
cld
dec
roll
lcall
or
orl
fidivrl
test
mov
cld
into
mov
sbb
inc
cmp
adc
mov
push
fnclex
sti
cli
jae
jl
sbb
jge
loop
jo
and
and
movl
ja
pop
outsb
bound
add
sbb
push
mov
cmpsl
mov
jecxz
jns
fisttpll
sbb
mov
pop
fcoml
or
fs
rcll
ljmp
push
mov
rcrl
pop
or
mov
idivb
loope
cli
mov
fwait
cwtl
push
jp
jmp
fwait
les
mov
imul
ret
inc
insl
jo
add
addr16
ljmp
leave
inc
pop
les
jmp
pop
xchg
mov
pushf
push
inc
js
cmp
and
mov
out
cld
popf
loope
pop
adcb
in
pop
test
fsts
mov
jnp
scas
inc
mov
jnp
iret
add
mov
cld
adc
sbb
insb
cmp
insl
inc
push
fsts
dec
sbb
js
loopne
movsl
push
cmc
int3
jge
insl
push
ds
scas
out
cmpsl
and
add
js
mov
and
aam
mov
mov
lods
add
into
insl
popf
dec
jmp
sub
jmp
push
sub
mov
pop
cmpsb
dec
adc
cltd
out
je
cmp
flds
jl
cmp
fsubr
and
cmp
cmpsl
pop
xor
lock
data16
sahf
jle
dec
add
mov
sbb
mov
dec
inc
xor
mov
cmp
sbb
cld
dec
iret
lods
jne
fcmovne
mov
dec
and
pop
inc
test
lahf
xor
adc
jge
jnp
int3
xchg
or
shll
add
add
mov
into
lahf
jo
and
mov
je
clc
sub
inc
mov
lods
jae
adc
jo
mov
or
xchg
push
sub
pop
sbb
into
filds
scas
decb
es
add
xchg
adc
arpl
dec
mov
xchg
sbb
cmp
fimuls
lods
dec
mov
bound
dec
mov
jp
in
pop
lock
pop
out
clc
rclb
testl
inc
pusha
jo
adc
outsl
into
push
cmc
lahf
je
xchg
cmp
cs
jnp
mov
mov
ret
jb
mov
shrl
jns
mov
call
add
insb
daa
iret
push
push
xchg
jp
adc
stc
clc
repnz
cmp
add
scas
lcall
icebp
imul
or
lcall
pop
jp
sub
enter
insb
shlb
and
jb
rcrl
push
or
shl
cmp
rcrl
outsl
loopne
xchg
sbb
mov
flds
xchg
and
jbe
sub
mov
mov
inc
arpl
fimull
mov
push
mov
dec
mov
das
add
lahf
inc
mov
adc
adc
sub
mov
inc
fnstsw
sub
xlat
mov
call
mov
je
into
adc
sbb
movsb
ret
js
and
ja
jge
cmp
sbb
cwtl
dec
outsl
mov
mov
cmpsb
gs
xchg
cmp
xchg
pop
cmp
add
add
gs
xor
or
adc
sub
mov
xlat
push
lret
push
or
cld
outsb
sbb
cwtl
ja
adc
inc
or
frstor
mov
mov
or
xor
in
or
add
out
or
inc
call
cmp
cmp
inc
arpl
sub
das
jns
adc
xlat
or
adc
jge
mov
ds
lret
sbb
js
push
jge
testl
cltd
sbb
cmpsl
test
repnz
imulb
inc
gs
mov
push
scas
adc
insb
and
or
add
fbld
clc
das
xor
or
scas
inc
and
mov
lcall
mov
aaa
lahf
fstl
sub
test
and
std
jb
lret
and
adc
sbb
lret
clc
sbb
daa
sbb
adc
cmpsb
and
mov
in
les
int
jne
adc
fdivrl
cwtl
adc
loopne
movsl
addr16
popf
out
pop
sbb
pop
jecxz
subb
rorl
add
movsb
les
push
mov
mov
pop
or
pop
mov
aam
shl
orb
pop
testl
stos
mov
inc
repz
fcoms
and
mov
out
popf
pop
pop
loope
cli
je
lret
push
stos
std
fbstp
out
ljmp
pushf
subl
mov
test
call
sub
addl
push
js
rorl
iret
dec
inc
pusha
stos
int3
sbb
popl
mov
cmp
hlt
cld
aad
in
loop
test
lods
jecxz
fstpt
jb
jne
shll
inc
jle
pushf
popa
xlat
sub
xchg
mov
js
andb
int3
aad
arpl
jns
mov
push
sub
mov
mov
in
inc
push
and
ret
repnz
sti
outsb
rcrl
in
pop
bound
in
out
gs
push
test
cmp
or
sbb
insl
call
fsubr
sbb
jo
sub
and
jge
cwtl
dec
mov
pop
jae
jae
adc
fbstp
cltd
add
adc
xchg
and
push
mov
loop
pop
mov
dec
pop
mov
mov
mov
shl
insb
pop
ret
outsb
fidivl
sbb
into
in
test
mov
shlb
jecxz
sub
out
stos
cld
scas
push
push
stos
xlat
iret
rcrl
leave
cmpb
int3
sti
out
push
lods
and
scas
mov
ret
mov
loope
imul
pop
cmp
dec
jp
push
ljmp
mov
sub
movsb
push
inc
in
add
cmp
jns
stos
add
sub
sub
inc
aam
inc
and
data16
test
push
dec
pop
les
and
mov
orl
clc
inc
mov
fisubl
shlb
xor
aas
cld
lret
or
shll
xor
xor
gs
imul
adc
daa
scas
mov
add
fsubrs
aam
iret
xchg
mov
xchg
mov
adc
ret
pop
push
std
push
jno
adc
mov
lea
push
xor
mov
xchg
pop
loope
jae
popw
mov
mov
xchg
imul
xchg
xchg
xor
adc
sbb
adcl
mov
jb
mov
xor
fisttpll
or
sbb
sti
aaa
cld
lahf
aas
aas
dec
xor
in
mov
into
aad
or
lret
pop
jo
inc
or
add
jnp
gs
jae
lds
into
movsb
push
dec
pop
pop
or
sbb
loop
jbe
sbb
test
pop
xor
lods
mov
push
mov
adc
pop
notl
pop
sub
gs
sahf
in
js
dec
movsl
pop
aad
lds
cmc
or
sbb
enter
test
mov
xchg
push
movsl
pop
aad
lds
cmc
or
sbb
enter
test
mov
xchg
insb
test
push
movsl
pop
aad
lds
or
sbb
enter
lods
inc
mov
xchg
mov
sbb
sub
cmp
mov
fcoms
enter
ror
rorb
cli
xchg
rcrb
fwait
pusha
jno
lods
cmpsl
stos
es
add
add
pop
or
pop
add
add
mov
xor
cltd
add
add
add
add
add
add
push
add
add
add
add
mov
and
adc
add
icebp
add
add
add
add
add
add
mov
add
add
mov
sbb
mov
outsl
add
add
add
add
jns
and
add
add
add
inc
add
add
add
add
add
add
add
adc
add
add
add
add
add
jno
or
das
add
add
jnp
fldl
push
add
sahf
add
fldl
out
sub
push
add
add
push
test
addl
or
sbb
je
add
jl
push
add
push
add
jecxz
add
add
addb
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
lahf
add
add
aad
add
add
and
add
add
add
push
add
incl
mov
imul
add
add
add
add
add
les
rolb
add
add
xor
pop
add
add
add
push
sub
roll
add
pop
add
lahf
add
add
rolb
add
add
xchg
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
aad
or
repz
add
add
add
add
add
add
les
stos
add
add
pop
push
add
add
roll
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
add
add
adc
add
rolb
add
add
add
add
add
sahf
add
add
lcall
add
imul
add
add
add
add
lahf
add
add
cltd
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
arpl
arpl
fldl
cld
add
add
add
add
add
roll
add
and
out
add
add
add
sub
push
add
add
test
add
add
add
adc
dec
add
add
test
mov
add
add
add
add
add
add
sldt
add
add
add
add
dec
add
add
aaa
add
add
add
add
add
repnz
add
pop
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
xchg
adc
cmp
and
sub
cmpsl
push
mov
jle
in
jp
cmpsl
in
cmp
mov
jnp
jmp
sbb
lds
lahf
sub
fwait
pusha
jp
xchg
sbb
aam
outsb
mov
jg
aas
pop
adc
add
ds
mov
xor
movsl
daa
or
movsb
outsl
xchg
cld
lret
cmpsb
in
movsl
mov
xor
sbb
in
sub
mov
sub
xchg
xchg
and
fildl
xor
sbb
addr16
jae
sub
mov
sbb
in
sub
aaa
xor
jns
add
adcl
inc
jo
pop
arpl
jmp
rcrl
sub
lods
outsl
in
ljmp
inc
mov
sub
das
xor
cmc
inc
mov
cmpsl
js
outsl
jae
mov
jp
testb
fs
sahf
stc
in
cmp
addr16
outsb
push
stos
stos
push
notl
push
mov
scas
pop
xor
fidivrs
sbb
dec
mov
sbb
push
int
fcmovne
cmpsl
shrl
or
add
dec
fsubrl
fiaddl
lds
push
sub
pop
cmp
xor
loope
dec
out
dec
stc
scas
xchg
stos
cmp
bound
les
pushl
sbb
lcall
add
scas
push
jecxz
in
adc
mov
xchg
adc
sub
daa
push
in
sahf
cmp
add
clc
mov
std
add
pop
ret
popf
xor
inc
pop
mov
sahf
jmp
cmc
adc
sbb
pop
in
adcb
push
int3
push
ljmp
cs
cmp
shrb
into
jecxz
push
mov
mov
mov
or
or
add
lods
mov
inc
pop
inc
insb
fucomip
xchg
xchg
mov
pushf
push
pop
jge
arpl
mov
sti
scas
add
mov
gs
sti
mov
mov
jge
iret
push
fsubs
push
int
jecxz
xchg
fisttpl
ret
or
rcll
fldt
mov
not
test
inc
jge
loope
idivl
fmull
mov
mov
iret
jl
pop
jg
xor
dec
in
in
adc
and
out
pop
das
push
xchg
push
sbb
pusha
or
xchg
jmp
jns
test
movsb
ljmp
clc
sbb
jns
jno
xor
ja
mov
jo
add
push
xor
iret
fistl
pop
psubw
push
adc
in
jle
in
fsubrp
mov
and
add
imul
mov
sbb
mov
cmp
or
mov
test
sub
lods
ljmp
daa
add
cmp
stos
in
jl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
