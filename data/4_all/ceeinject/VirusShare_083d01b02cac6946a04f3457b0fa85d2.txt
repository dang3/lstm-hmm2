call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
cmp
das
push
pop
addr16
jg
sbb
aaa
repz
lahf
repz
out
xchg
sbb
cmpsl
fbstp
jae
emms
jg
outsl
pop
pop
daa
dec
inc
mov
out
idivl
cmpsl
iret
mov
pop
fisttpll
jg
outsl
popa
push
cmovno
dec
sub
negl
popf
jecxz
aad
fcoms
arpl
pop
add
jnp
outsl
test
fs
sbb
add
mov
pop
lret
into
roll
fstpl
ja
in
fadd
enter
sub
mov
or
out
leave
fists
dec
rcr
cmp
push
sbb
mov
cs
adc
push
scas
xlat
mov
stos
cs
cmpsl
repz
inc
test
cwtl
jecxz
addb
pop
mov
daa
scas
sub
sbb
add
iret
cmpsl
rol
test
cwtl
xchg
add
das
les
cmp
lahf
pop
lret
test
xchg
hlt
ret
xor
mov
icebp
std
orb
mov
push
sbb
jb
mov
mov
push
jns
pop
jle
ja
pop
pop
pop
pop
daa
jmp
iret
jmp
lahf
in
in
mov
pop
and
adc
dec
push
mov
jecxz
xchg
loop
xchg
mov
stos
dec
ds
adc
sbb
pop
or
push
sbb
lahf
xor
xchg
adcb
inc
inc
push
jle
pop
xor
outsl
pop
pop
daa
dec
aaa
mov
out
idiv
xchg
xchg
fbld
das
push
pop
addr16
jg
outsl
pop
pop
daa
dec
aaa
mov
out
idiv
xchg
xchg
fbld
mov
iret
jne
mov
sub
pop
pop
sub
jmp
push
ljmp
pop
or
aas
aaa
and
adc
in
sarb
in
test
loope
lret
pop
mull
data16
cmp
push
test
int
dec
std
clc
std
mov
or
mov
sub
xor
adc
mov
mov
cmp
sub
cmp
in
sub
or
insb
mov
daa
push
fs
and
cwtl
mov
lods
xchg
push
test
loope
into
test
and
shr
xor
push
sub
inc
cli
lcall
pop
and
mov
inc
push
into
out
mov
hlt
insb
inc
repnz
test
scas
ds
das
mov
jle
leave
cmp
push
mov
dec
pop
sub
xchg
sub
jecxz
fisttps
insl
jp
int
mov
addb
sub
leave
adc
cmp
in
fldcw
adc
mov
gs
ficomps
push
xchg
iret
xlat
lret
jle
inc
insl
movsb
dec
push
cmp
add
je
inc
jb
xor
movsb
sarb
lods
insb
mov
mov
pop
aad
call
mov
xchg
lods
popf
lcall
fucomip
and
jmp
test
xchg
cli
movsb
inc
lret
jae
int
stc
inc
xchg
push
mov
xchg
xor
pushf
fwait
push
lret
jns
jl
push
or
cmp
imul
jns
mov
imul
add
call
jle
negb
aad
jg
iret
add
mov
stc
shlb
sub
pop
pop
lret
push
adc
push
inc
int
popa
das
push
mov
xchg
jb
fidivrs
push
pop
jmp
aas
cmp
jg
push
pop
movsb
xchg
movsb
ds
repz
in
dec
inc
pop
adc
cmpsl
jge
sbb
jmp
es
mov
in
xor
mov
inc
mov
mov
mov
mov
jg
add
and
cmc
jne
fnstsw
lea
call
dec
xor
sahf
pop
es
out
jae
and
inc
pusha
fcmovbe
sahf
cli
sbb
sub
push
repz
mov
push
mov
test
stos
add
ljmp
push
imul
adc
jno
push
and
js
mov
scas
sub
rcll
cld
add
push
cmp
push
adc
imul
aas
pusha
inc
call
cmpsb
sub
loopne
in
call
xchg
lods
push
icebp
pop
push
das
jae
pop
movsb
aad
or
cmp
fsts
fdivrs
pop
and
call
or
ret
or
arpl
out
fisubrs
push
nop
xchg
sahf
or
or
xchg
std
adc
test
push
mov
aad
add
jl
outsl
xorl
sbb
mov
cmp
hlt
mov
test
fiadds
mov
subb
pop
mov
ret
rcrl
xchg
cmp
inc
lds
sub
cltd
inc
dec
adc
sbb
push
add
sbb
fisubs
jge
cmp
sbb
sahf
push
daa
mov
mov
xchg
scas
add
filds
popf
sbb
inc
bound
inc
push
xor
mov
unpckhps
xchg
js
inc
and
lods
je
jge
test
test
push
mov
jne
push
pop
lahf
fmull
popf
push
sbbb
iret
popa
std
in
jnp
cmp
and
scas
inc
scas
mov
shrb
popa
cmpsl
insb
sbb
popa
cmp
arpl
push
imul
scas
sub
pop
das
push
in
lods
pop
xchg
ret
or
xchg
and
cs
jmp
int
sbb
mov
push
push
fstpt
mov
sbb
push
mov
adc
cld
bnd
mov
sub
inc
outsl
push
and
inc
lcall
mov
insl
inc
out
loope
dec
lcall
xor
mov
out
pop
int3
aam
pop
xchg
in
lahf
push
popf
inc
or
adc
loope
aaa
jnp
aas
pop
dec
in
cmp
aam
out
push
sahf
xchg
sarb
jns
jl
mov
xchg
or
inc
cltd
xor
scas
dec
fcoml
or
or
mov
cltd
imulb
stos
outsl
fisubs
lcall
push
out
inc
mov
add
orb
mov
push
add
jno
pushf
aas
in
and
movsb
mov
mov
inc
cmovno
sub
adc
std
rcrb
cmp
mov
xchg
rcr
ljmp
movsb
shl
int3
aam
movsb
or
scas
in
jmp
xchg
lret
fimuls
sahf
bswap
inc
mov
lods
aam
addr16
inc
int
out
push
es
mov
rcrl
xor
imul
rcr
sub
insb
shrl
mov
inc
lret
xor
fwait
cmp
sahf
cmpsl
lds
pop
push
and
mov
mov
dec
cmp
rcrb
jo
push
pop
xchg
add
jb
negb
in
lret
fldenv
sub
shll
xor
dec
adc
popf
xchg
sub
mov
or
jp
hlt
add
clc
outsb
push
jmp
mov
dec
shrb
xchg
xchg
adc
pop
xchg
imul
xor
ds
arpl
and
ljmp
subb
stc
mov
xchg
cmpsl
jo
xorb
push
insb
push
test
mov
dec
push
jae
std
xchg
inc
fcomp
shlb
les
push
test
xchg
popf
mov
cmp
insb
jle
pop
shll
jo
sti
jno
push
xchg
aam
in
lret
xchg
imul
in
cli
sahf
js
xchg
outsl
xchg
xchg
or
jecxz,pt
push
push
fldcw
repnz
adc
push
pop
jno
cmp
in
sahf
in
or
in
add
aas
fisubrl
jbe
mov
mov
pop
shrb
mov
or
subl
cmp
lret
loopne
xchg
mov
repz
les
jl
mov
bound
popa
pop
outsl
sub
imul
cmp
cld
aam
jne
mov
and
inc
test
lret
stos
or
popa
or
xchg
rcrb
inc
jmp
dec
add
shrb
jp
sbb
cmp
dec
int3
adc
in
dec
jp
xor
stc
insl
sub
lret
mov
imull
mov
push
cmp
xor
xchg
xor
xor
and
test
hlt
aad
fs
inc
inc
inc
inc
inc
mov
mov
inc
pop
or
gs
push
ret
push
add
js
mov
in
sub
push
data16
das
sti
sub
imul
lods
xor
and
jl
mov
inc
and
lock
daa
loopne
leavew
and
lea
test
dec
pop
imul
test
cmp
test
es
pop
xchg
movsl
and
pop
jnp
scas
xor
sub
cs
repz
xor
cmpl
mov
sbb
stos
outsb
test
mov
movsb
movsb
in
sub
cmpsl
mov
and
lds
mov
inc
lret
and
iret
sti
cmp
imul
push
xchg
lods
xchg
ss
pop
dec
cmp
mov
mov
fsubrl
inc
add
stos
sub
and
je
scas
out
insl
aas
pop
decb
inc
lods
js,pt
and
enter
in
enter
ficoml
test
mov
dec
xchg
inc
sbb
cld
push
clc
cltd
jmp
inc
push
pop
out
insl
enter
xorb
pop
fstps
fidivl
lock
outsl
add
jecxz
dec
or
loope
sub
stc
mov
mov
dec
test
pusha
xchg
out
mov
int3
gs
loop
push
dec
add
shlb
jl
arpl
mov
dec
xchg
fnstcw
repz
push
mov
call
and
stc
mov
insl
idivl
mov
push
pop
dec
movsl
stos
xchg
mov
sub
lahf
rclb
out
insb
int
icebp
lahf
cli
mov
js
addr16
in
loopne
daa
jb
sar
inc
aas
inc
movsl
add
sub
iret
jb
mov
int
in
xchg
rcrb
ds
cmpsl
jno
dec
test
fists
dec
adc
add
mov
pop
rcll
loop
ret
aas
push
in
test
xor
jns
mov
pop
pushf
xor
jp
push
jmp
mov
xlat
sub
and
push
loopnew
gs
cmp
popa
out
jmp
mov
in
cmp
jmp
xlat
add
aad
push
imul
fidivl
mov
sbb
cmp
lods
mov
in
pop
shl
push
adc
stc
adc
inc
call
or
ss
mov
mov
popa
inc
adc
dec
inc
mov
pop
aaa
mov
mov
fcomps
out
fidivrl
dec
call
cli
dec
mov
repz
jnp
pop
xor
push
in
xor
lret
xchg
adc
mov
pop
sbb
out
cmp
nop
out
lahf
and
pop
aas
dec
pop
scas
lahf
imul
icebp
ss
adc
xchg
mov
push
jae
sub
mov
repnz
mov
fistpll
call
ja
hlt
or
mov
pop
push
pop
push
pop
stos
loopne
sahf
xchg
sbb
mov
lret
popa
mov
xchg
inc
push
outsl
push
in
sbb
aaa
sub
add
gs
jnp
adc
mov
add
or
movsb
sub
fists
hlt
pop
data16
hlt
sub
inc
or
add
rolb
jle
aaa
jo
sub
out
cmp
inc
mov
fbld
fstps
pop
stos
and
pop
jnp
mov
sbb
mov
shl
mov
jns
or
lea
adc
adc
sti
push
push
inc
int
in
pushl
subl
fisubrl
out
push
push
mov
mov
lea
cmpsb
idivb
push
je
inc
pop
dec
mov
and
sub
adc
mov
jg
cmp
mov
mov
int
push
sbb
and
fmuls
cmp
aad
ja
outsl
test
adcl
cmp
popa
leave
jae
xchg
vmovaps
ljmp
cltd
xchg
sub
cli
call
das
lds
jl
rorl
and
sbb
int
imul
jb
pop
or
jnp
sub
loope
or
xchg
xchg
cltd
movsb
leave
adc
jnp
notb
xchg
push
inc
push
jnp
mov
and
sahf
sbb
les
sarb
cmc
add
push
imul
or
addr16
sub
lret
scas
sbb
push
loop
mov
xlat
sub
scas
push
xchg
or
in
jo
lods
negb
mov
lods
inc
repz
jle
pop
fisubl
rorb
fs
test
xchg
mov
cwtl
int
movsl
inc
pop
decb
xchg
idivb
or
pxor
lock
cmp
into
pusha
mov
shlb
mov
fdiv
jmp
jp
sbb
sub
jecxz
mov
push
sub
cmp
xor
loope
outsb
cmp
testb
cmpsl
dec
mov
sbb
mov
dec
push
mov
push
push
push
jnp
add
mov
pop
stc
push
push
sar
inc
pop
cmp
cmp
mov
sbb
sub
dec
mov
fcoms
xor
dec
sub
xor
jo
inc
in
sub
aas
ja
sub
test
out
fcomps
in
xor
inc
imul
adc
fldt
pop
mov
inc
mov
jp
inc
and
dec
mov
lss
fs
lock
das
jno
inc
cld
xchg
lret
stc
das
push
xor
scas
shl
ss
frstor
cld
std
ja
shlb
cld
movl
jmp
sahf
cmp
sub
enter
ljmp
enter
adc
fwait
call
xchg
bound
out
jns
repnz
repz
xchg
cmp
pop
xchg
in
and
shrl
cli
mov
imul
mov
cmpsl
ficoms
mov
jne
dec
cmp
decb
out
add
jge
mov
push
lret
lods
inc
cmp
orb
lds
lea
stos
lret
sbb
fisubl
push
mov
cmc
sahf
cmp
push
fcmovne
int3
cmpsb
pop
repz
pop
cmpsl
jl
repnz
sub
add
xorl
fstps
push
inc
dec
fildl
std
mov
cmp
out
dec
je
mov
popf
pop
mov
inc
mov
ficomps
dec
stos
cltd
aam
rcrb
cmovbe
outsl
lock
sbb
clc
inc
in
xchg
or
pop
add
xor
lahf
lret
xor
pop
insb
addr16
inc
lahf
cli
not
xlat
jmp
push
lea
sub
cmpsb
fwait
mov
out
add
xlat
jge
iret
into
int3
mov
and
test
int
dec
push
jns
in
cwtl
inc
cmp
pushf
enter
dec
cld
add
add
fwait
sub
mov
mov
and
ja
rorb
cs
and
mov
fsubr
stc
mov
mov
adc
mov
sar
sbb
stos
jae
or
xor
pop
outsl
xor
mov
mov
jo
or
add
bound
in
mov
cmp
or
jp
jb
push
cwtl
cli
mov
xor
or
in
xchg
call
xchg
adc
pop
jl
inc
lcall
xor
test
xor
aam
mov
and
or
scas
cmp
add
adcb
sbb
mov
fbstp
enter
andl
into
cs
ficoms
inc
dec
sub
pop
iret
loop
or
sub
pushf
cli
jmp
jnp
outsb
dec
cmp
lods
pop
mov
adc
push
lcall
fmull
or
jo
dec
xor
cltd
aas
inc
sub
lds
mov
jno
mov
and
scas
mov
adc
idivb
sub
ret
dec
or
push
aad
jne
lret
adc
in
imul
or
pop
jl
inc
stos
loope
lods
clc
or
push
ja
jne
sub
adc
jge
cld
je
add
dec
iret
popa
pop
aas
push
push
in
and
lahf
hlt
fs
push
out
and
add
mov
pop
or
cmc
lods
sahf
mov
insl
rorb
rcr
add
lods
push
pop
mov
cmpsl
pop
push
inc
jnp
and
repz
es
jno
shr
dec
fildll
mov
mov
sahf
and
xchg
insl
inc
mov
ja
mov
imul
inc
or
sbb
jge
loopne
mov
loop
dec
jg
int
sbb
xlat
fstps
scas
mov
xor
ds
repz
adc
push
sbbl
xor
cmp
xor
jae
sarl
adcl
adc
shl
dec
add
jl
xlat
jecxz
loop
mov
pop
repz
cmp
loop
pop
push
test
test
xlat
push
fstpt
lods
mov
xor
out
dec
rcrl
andl
sti
or
push
subl
mov
repnz
push
cmp
xchg
mov
and
mov
int
add
stos
mov
jge
mov
lret
xor
dec
stc
ljmp
xchg
adc
rol
repz
mov
adc
mov
lcall
pop
lock
test
insb
sub
rol
jns
dec
test
stc
push
mov
mov
loopne
cld
or
or
nop
fdivr
std
jecxz
outsb
mov
callw
xlat
mov
mov
xor
mov
push
mov
dec
pop
lea
and
clc
dec
roll
movsl
cmpsb
xor
xchg
add
ret
test
fstpl
lods
push
xlat
add
sti
inc
lods
cld
adc
pop
int
jb
dec
shll
mov
mov
out
lret
mov
adc
kmovb
repz
mov
mov
sbbl
das
push
inc
or
adc
test
fs
pop
add
and
outsb
sbb
fildll
xchg
push
call
movsb
roll
clc
push
add
xor
stc
sti
nop
arpl
mov
adc
cmp
sbb
cmp
dec
adc
mov
test
test
jge
cwtl
test
pop
or
xor
cmp
andb
test
or
sub
adc
nop
cmp
test
cmp
scas
inc
negl
arpl
xchg
mov
call
rorl
outsl
scas
sub
push
arpl
test
popa
lret
sbbb
into
arpl
add
mov
clc
add
mov
or
mov
sub
mov
rol
into
sbb
cld
push
cs
xor
add
sti
adc
mov
xchg
adc
lahf
fcoms
inc
nop
lods
lods
add
call
cmp
popf
adc
inc
call
out
out
and
lods
movsl
pop
rcl
cs
fidivs
and
mov
enter
cmpsl
add
mov
push
xor
xchg
inc
lahf
in
fs
sbb
push
cmp
mov
dec
xorb
mov
pop
mov
add
sti
xchg
hlt
loopne,pn
roll
stos
pop
add
add
xor
leave
movsb
adc
into
mov
push
push
fildll
mov
cmp
je
cs
lods
mov
inc
mov
mov
sub
push
add
movsl
rcrb
and
sbbb
dec
cmp
fmull
addb
cltd
jecxz
push
nop
cmp
dec
sbb
int
dec
fldenv
xor
inc
or
jae
lcall
inc
rcll
popa
cmp
cltd
or
inc
mov
and
jecxz
leave
jbe
inc
popa
inc
push
mov
cmpsl
and
push
mov
into
dec
cmp
int3
ret
js
push
gs
and
sbb
lea
mov
cmp
xchg
push
adc
cmp
pop
loop
int3
mov
and
iret
push
rcrl
sub
pop
loop
rcrb
nop
into
mov
mov
push
sbb
enter
repz
sub
cld
loopne
out
das
mov
xor
outsb
mov
out
pushf
rcrb
lcall
int
cmp
out
adc
hlt
test
je
or
jns
jne
in
mov
xlat
out
and
lods
icebp
cld
mov
jmp
jecxz
and
adcb
sbb
adc
push
je
adc
cs
inc
stc
cwtl
sub
add
xor
popf
cmp
cmp
push
push
jl
jmp
insb
mov
inc
out
xlat
out
mov
pop
in
outsb
movsl
orl
hlt
nop
lds
ljmp
push
ret
in
xchg
pop
inc
aam
int
pushf
sar
repnz
out
xchg
cltd
insb
mov
pop
pop
push
sarb
shrb
jle
mov
imul
xchg
jns
imul
fsubrl
inc
mov
enter
pop
xor
decb
xcrypt-ofb
cmpsl
outsb
repz
nop
outsl
cmp
mov
movsl
sub
mov
jl
cmp
fists
test
and
sbb
outsb
xor
or
add
ja
cli
or
jne
sbb
imul
test
xchg
test
loope
pop
jle
out
ret
inc
hlt
sub
jb
xchg
mov
mov
xor
test
pop
outsl
or
mov
adc
dec
pop
push
cmc
mov
adc
cltd
scas
add
mov
pushf
dec
jmp
aam
sahf
xchg
mov
mov
or
mov
loope
aam
pop
cmpsl
and
jnp
sahf
fiaddl
ret
bound
mov
dec
or
sub
cmpsl
mov
lahf
int3
sbb
sub
xchg
fisubl
sub
stos
scas
insb
cmp
push
imul
mov
scas
jbe
movsb
xchg
sub
cmp
ds
and
mov
jno
rcr
pop
mov
inc
adc
xchg
mov
ds
pop
mov
out
push
ljmp
add
mov
mov
fwait
sub
jg
scas
mov
ffreep
cmp
xlat
add
xchg
inc
jg
mov
lea
pop
jno
repz
mov
mov
les
sbb
inc
adc
ficompl
inc
sbb
mov
sbb
cld
mov
xchg
pop
or
test
addr16
jg
outsl
pop
pop
daa
dec
aaa
mov
out
idiv
xchg
xchg
fbld
das
push
pop
addr16
jg
outsl
pop
pop
daa
dec
aaa
mov
out
idiv
xchg
xchg
fbld
pop
push
jg
emms
out
pop
outsl
pop
pop
daa
aaa
mov
out
repz
daa
mov
inc
jae
inc
arpl
ja
pop
jg
pop
daa
iret
idivl
out
orb
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
pop
popf
dec
push
fisttpll
scas
jno
cvtps2pi
in
fistps
scas
pop
pop
lods
jg
outsl
mov
dec
in
aas
std
das
int
cmp
iret
insl
fidivrl
dec
lahf
pop
lods
jg
outsl
lea
dec
in
aas
std
das
int
fisttpll
sub
mov
adc
insl
cli
xor
fnsave
mov
sub
ffree
ss
or
dec
test
jmp
dec
clc
jg
jg
xor
repnz
pop
out
ret
and
hlt
inc
daa
movsl
fisubrs
outsl
mov
mov
jb
loope
les
out
pop
xor
inc
mov
inc
push
mov
sbb
shrl
sub
add
adc
cmc
dec
lea
push
push
mov
mov
mov
ror
fisttpll
inc
add
pop
and
mov
push
es
inc
or
xchg
sbb
js
nop
xor
scas
jge
dec
lahf
pop
jo
jg
outsl
lea
dec
in
aas
std
das
int
fisttpll
sub
fistps
scas
dec
lahf
pop
leave
fnstcw
push
loope
rorl
scas
js
pop
mov
jnp
mulb
jns
sbb
xor
and
sub
repnz
add
pop
aad
mov
int
movsl
and
push
popf
jne
js
fimull
cmp
ds
cmp
cmp
das
int
fisttpll
sub
fistps
scas
dec
lahf
pop
lods
jg
outsl
lea
dec
in
aas
std
das
int
fisttpll
sub
fistps
scas
dec
lahf
pop
lods
jg
inc
add
iret
mov
dec
sub
cmp
fs
mov
sub
push
and
ficoml
movsb
push
adc
pop
fwait
mov
push
pop
movsb
mov
cltd
pop
jno
cmp
je
out
pop
and
mov
mov
lahf
stc
lahf
test
repnz
aam
sub
jnp
sbb
cmp
push
fmuls
push
pop
gs
dec
inc
mov
stos
xchg
and
int
pop
rcl
pop
or
xor
xchg
mov
int
sub
outsb
jb
shlb
pop
int3
mov
dec
sti
les
cmp
aad
xchg
pop
stos
in
mov
sub
add
dec
test
jp
push
xchg
push
ror
xor
scas
pop
pop
popf
fs
inc
into
icebp
in
int
mov
in
dec
xchg
movsb
fstp
xchg
and
jle
adc
push
mov
mov
xchg
in
mov
incl
add
leave
sbb
dec
cmpsb
xlat
sbb
and
pop
mov
mov
mov
out
xchg
or
sbb
out
lret
sbb
push
xlat
jae
add
inc
jo
fwait
cs
bound
sub
xchg
test
out
push
pop
mull
jl
sub
pop
mov
xchg
dec
xchg
mov
outsl
fnsave
cmp
mov
add
and
fcmovbe
pop
adc
iret
sub
loop
push
add
xchg
adc
stos
xchg
repz
aas
jge
mov
push
mov
jbe
popa
loopne
in
sahf
cmp
and
push
movsb
add
jecxz
and
cmp
loop
cmp
stos
sub
sbb
fwait
push
push
das
les
and
mov
or
movsl
and
sahf
aaa
movsl
cmp
jne
or
push
inc
sbb
cmp
mov
lret
pop
mov
ficoms
jg
fidivl
fisubrl
dec
fstpl
pop
pusha
pop
mov
mov
orb
lret
in
lcall
mov
ds
gs
mov
cmp
lahf
sub
out
leave
lods
dec
inc
or
xor
ljmp
aad
daa
mov
sti
push
cmpsl
xchg
outsl
add
mov
rolb
jmp
cs
inc
in
add
fldenv
add
xchg
pop
idivl
mov
jecxz
cmpsb
cmp
insb
in
int
imul
mov
mov
fcoml
lea
shll
and
lods
insl
jg
repnz
mov
mov
adc
movsb
js
ficompl
push
pop
mov
jbe
outsb
fidivl
sti
sub
mov
rcll
into
stos
push
xor
or
xor
mov
insb
mov
lods
rol
or
adc
push
test
leave
xchg
bound
and
adc
lds
lcall
pop
pop
es
outsb
ja
pop
out
cwtl
add
jmp
jle
bndldx
add
push
mov
mov
sub
push
loopne
jg
push
cltd
test
mov
adc
insl
repz
dec
mov
cmpb
aaa
lods
ljmp
xchg
xchg
jns
mov
stos
add
mov
push
jmp
xchg
daa
je
cmp
push
leave
pusha
or
out
stos
pop
mov
xor
cltd
lret
in
ret
push
sbb
pusha
pop
sbb
rol
and
xchg
cmp
and
loope
inc
in
push
inc
pop
imulb
loop
fisubrl
je
test
rolb
cmpb
and
pop
and
and
pop
jge
pusha
and
dec
arpl
arpl
dec
cmpsb
add
cmpl
fisubs
in
lcall
sbb
and
js
and
popf
adc
lret
mov
hlt
mov
push
imul
mov
xor
movsb
dec
lahf
loop
mov
aas
xchg
fnstsw
popa
cltd
add
cmp
lcall
in
insl
pop
fwait
ret
outsl
mov
arpl
xchg
cmp
jle
ret
mov
hlt
sub
xor
insb
inc
jae
jbe
fisttpll
push
leave
lcall
inc
cmpsb
test
aaa
push
test
and
mov
mov
negl
push
cmp
adc
lret
andb
or
xchg
lea
or
das
test
stos
jbe
push
inc
outsb
mov
out
test
movsb
insb
and
testb
scas
mov
ds
lret
popa
stos
mov
adcl
xor
adc
xor
dec
and
and
subb
inc
ret
lods
rcrb
adc
jbe
inc
out
or
les
lods
lods
movsb
out
lcall
sbb
jne
dec
xor
int
or
sub
cmp
xor
jae
push
sub
inc
dec
adc
jl
inc
xor
aad
mov
ja
push
jge
test
and
mov
icebp
cmp
inc
pop
ficoms
jg
out
je
test
and
fwait
jnp
mov
dec
pop
lret
testb
fadds
imul
sub
mov
sbbb
test
lret
mov
mov
je
xchg
jns
and
test
imulb
and
enter
loopne
loope
sbb
pusha
enter
out
test
rclb
cmpsb
sbb
xchg
roll
in
xchg
cmpsl
test
sub
jge
push
mov
loopne
cwtl
push
ss
lds
inc
add
adc
cli
aaa
lds
in
cs
jns
nop
cwtl
add
add
mov
shll
cmp
adc
mov
sahf
out
xchg
xchg
imul
xor
in
adc
mov
or
lret
fisttpll
sub
outsl
scas
daa
xchg
add
push
dec
lcall
xchg
ss
fiadds
jb
add
mov
lods
mov
jmp
dec
mov
jecxz
mov
mov
fs
out
dec
popf
cmp
cltd
cmp
dec
in
rclb
push
fstp
cmp
sbb
mov
cmp
sub
adc
shrb
push
jne
ds
lret
mov
pop
inc
xchg
xchg
out
test
xor
mov
sub
stos
lods
fistpll
leave
inc
pop
mov
inc
sti
in
cli
xchg
cmp
cmp
ja
sub
mov
sub
pop
add
sub
mov
pusha
mov
xchg
je
seta
ret
stc
push
lods
pop
out
loop
out
hlt
jmp
xchg
fstpl
dec
xchg
mov
cmp
jp
cmp
mov
ss
sbb
jl
adc
dec
sbb
mov
test
xor
xchg
inc
cmp
fwait
imul
push
dec
push
add
mov
push
mov
xor
out
push
or
add
outsl
lods
sahf
add
and
adc
push
sub
std
inc
jb
fldt
mov
test
inc
mov
push
or
jnp
lock
insb
mov
push
aaa
mov
and
scas
adc
xchg
jnp
xchg
push
push
pusha
inc
pusha
arpl
cli
adc
lods
dec
jae
cmp
inc
insl
xor
inc
and
fxch
jo
push
dec
push
cmp
add
or
mov
cmpl
insb
insl
push
and
cld
jae
dec
rcll
iret
add
mov
sbb
gs
movsw
rcrl
aam
and
loope
xchg
nop
inc
push
xor
leave
lods
loope
imul
stc
xchg
addr16
imul
xchg
jb
popa
ljmp
movsl
or
sbb
lods
test
cltd
out
gs
dec
pop
popf
sub
imul
pushf
jle
outsb
sbb
imul
push
fisubs
mov
movsb
sbb
xor
fwait
dec
xchg
aam
jnp
fisttpl
cmp
mov
int
push
testl
jbe
test
adcb
push
push
stos
mov
jg
cmp
jge
xor
fnstsw
pop
mov
fwait
daa
pop
setle
cltd
jge
and
and
cmpsb
dec
jp
addb
jne
xchg
pop
in
inc
lods
sub
stos
lret
push
or
js
addr16
jmp
addr16
aas
adc
cmp
jo
mov
xchg
rcrb
inc
jo
shr
pop
xor
jno
fildl
xchg
inc
inc
pusha
pop
and
adc
push
mov
jnp
adc
mov
push
pop
lods
neg
cli
mov
add
es
jne
xchg
fistpll
xchg
gs
xor
mov
xor
adc
sub
rcrb
push
push
fmul
jbe
and
jg
in
add
jp
inc
sbb
mov
and
push
mov
in
push
sbb
jne
bound
mov
mov
jo
push
cmp
pop
rcrb
imul
adc
div
jecxz
imul
pop
or
les
ror
fimuls
mov
shrl
in
pop
or
pushf
rcrl
pop
pop
mov
dec
pop
movsl
push
lds
sti
into
imul
dec
shl
out
xchg
or
data16
mov
and
stc
adc
pop
push
inc
jb
cmp
jbe
sub
loope
mov
cmp
mov
inc
or
inc
jb
jns
pop
mov
jmp
imull
pop
push
mov
std
pop
xor
bound
dec
fnstsw
dec
jecxz
leave
int
lret
mov
mov
test
sbb
sbb
push
jle
sbb
imul
push
decb
add
xlat
mov
cltd
push
das
push
pop
xchg
adc
sarl
xchg
cmp
jne
add
call
mov
pop
loop
cld
lcall
out
add
lods
mov
mov
out
fmull
sub
add
mov
lods
jg
jno
clc
loopne
daa
mov
es
inc
ud0
dec
add
shll
sarl
dec
inc
pop
ret
jnp
cmp
push
fisubrs
imul
lock
test
imul
arpl
inc
lea
mov
inc
enter
test
cs
mov
cmpsb
mov
in
mov
aaa
iret
add
jo
adc
lods
xor
push
cs
mov
fiadds
icebp
pusha
je
aad
jge
push
mov
lock
lahf
mov
in
lods
stc
jmp
mov
cld
jmp
leave
mov
in
mov
push
enter
imul
test
lock
movsl
push
mov
adc
pop
popa
ret
popa
pop
xor
leave
icebp
in
jmp
loopne
or
jmp
sahf
xor
sbb
mov
pop
xchg
scas
and
scas
ret
mov
enter
mov
ds
gs
cmp
inc
xor
push
mov
imul
mov
pop
xor
xor
cmp
loop
cmp
jmp
stc
popa
scas
aam
adc
rolb
pusha
repnz
jns
cmpl
fcmovb
add
adc
jg
push
cs
mov
jbe
lds
sub
inc
inc
movsl
js
inc
or
mov
jg
sarl
adc
push
push
call
cmp
sub
fidivl
outsb
mov
xchg
sub
xchg
lret
xchg
rcrl
xor
inc
lock
fstpl
es
push
inc
sub
int
cmp
xchg
es
fcmovbe
mov
ds
mov
fs
loop
sbb
fs
jg
xor
std
sub
scas
pop
xchg
jb
and
mov
addl
rcll
mov
testl
lds
sbb
imul
dec
mov
mov
loope
jne
jmp
xchg
fimull
sbb
mov
lods
add
or
cli
test
iret
mov
cmc
xchg
test
push
inc
xor
in
mov
add
inc
mov
addr16
leave
aad
in
roll
stc
jae
xchg
into
cmp
or
push
mov
lahf
js
and
cmp
inc
sub
dec
push
iret
sub
adc
mov
fwait
jb
je
popa
and
jecxz
jl
mov
xor
sbb
jae
ret
dec
out
jnp
fs
mov
pushf
nop
jp
lcall
iret
mov
mov
adc
cmp
iret
jle
mov
jmp
rclb
and
cmpsb
lods
inc
mov
sub
sbb
ljmp
dec
inc
lret
pop
sbb
mov
js
cmp
push
dec
push
fdivrl
stos
outsb
jg
stos
test
push
outsb
mov
sub
int
mov
mov
mov
pop
and
mov
push
loope
ret
add
aad
jb
leave
mov
mov
int
data16
inc
int3
adc
jg
ss
rcrb
cltd
scas
jo
imulb
xor
inc
ficompl
maxps
mov
int
push
imull
jmp
add
loopne
lahf
scas
and
shlb
push
call
inc
sti
andb
or
leave
test
mov
pusha
xchg
iret
sbb
ds
add
negl
xor
cld
movsl
mov
jnp
lahf
test
mov
decl
inc
jae
jge
dec
in
cld
in
inc
dec
adc
dec
or
adc
add
mov
pushf
push
stos
movsl
arpl
repnz
scas
imul
adc
pop
adc
jb
test
je
dec
cmp
or
add
cmp
xchg
jecxz
dec
lret
sbb
xchg
mov
mov
test
iret
std
inc
mov
int
cmp
and
xchg
push
pop
hlt
mov
mov
push
fs
adc
jns
xchg
test
xor
sub
xlat
dec
outsl
push
adc
dec
stos
test
lock
sub
sub
mov
fbld
cmpsb
jb
pop
clc
pop
push
cmc
shrl
cwtl
jb
ljmp
cmpsb
sbb
mov
dec
cmp
xor
mov
lods
enterw
inc
adc
lret
mov
jg
xor
mov
lods
dec
ss
fidivrs
mov
add
inc
js
leave
stos
adc
push
out
inc
aam
cmp
xchg
stos
outsb
pop
jo
sub
ret
shl
cmpsw
jmp
jb
xchg
and
cmpsl
push
jns
sbb
xor
sti
xchg
notl
leave
mov
enter
test
in
mov
movsl
jo
sti
push
sbb
hlt
cmp
adc
pop
test
xchg
mov
adc
adc
pop
rcrl
fiadds
pop
dec
cld
int3
sbb
mov
mov
mov
std
ret
dec
jge
push
mov
ljmp
ret
mov
jae
adc
lds
push
sbb
sbb
out
mov
out
add
mov
in
in
outsl
xlat
sti
cmp
popa
adc
dec
lahf
xchg
xchg
mov
mov
ljmp
push
inc
test
mov
test
add
sub
push
xor
pop
cmpsb
inc
cwtl
sti
jno
mov
inc
pusha
in
std
and
jp
jnp
icebp
cmpsb
ret
inc
ret
mov
or
push
int
cmp
ljmp
cld
test
loopne
fldcw
loopne,pn
shll
lods
fnstenv
mov
mov
sbbb
fcmovnu
or
mov
or
clc
ss
jne
cmp
cltd
negb
and
push
aam
cmp
pop
scas
sbb
mov
add
pop
mov
insl
sbb
nop
jb
lahf
pushf
or
sub
addr16
jnp
jmp
out
stc
call
jne
lods
mov
mov
and
xchg
sbb
push
mov
or
jmp
sbb
repnz
vmovsd
and
movsb
adc
add
orl
fbld
lret
or
xchg
dec
ret
jae
adcl
aad
push
fildl
stc
popa
jne
inc
xor
jecxz
int
iret
enter
imul
repnz
aam
add
mov
mov
xchg
push
xchg
insb
or
rolb
mov
add
inc
lods
cmp
test
js
dec
cmp
add
sbbl
add
jecxz
nop
push
sbbl
popa
sub
pop
adc
push
adc
js
sbb
lret
ret
mov
ret
xchg
dec
cmp
inc
repnz
mov
outsl
stc
stos
icebp
mov
adc
cmp
mov
jmp
adc
lahf
add
pop
les
fisttpll
cmp
es
dec
jae
adc
rcll
sub
sahf
add
inc
stos
das
mov
rcl
rorl
sbb
enter
inc
in
jbe
mov
adc
cmp
dec
jae
fwait
daa
in
out
and
into
stos
mov
das
in
push
fnstcw
xchg
xchg
jo
and
fwait
inc
adcl
sbb
or
inc
movsl
push
xchg
cmpb
ficoml
push
cld
shrb
imul
sbb
movsl
adc
and
filds
fisttpl
push
jl
fadds
pop
and
adc
rcrb
rorb
fmull
aaa
xchg
mov
cmp
dec
lret
and
mov
lods
fistl
mov
test
xorb
enter
int
rolb
xor
push
hlt
pop
loopne
out
add
dec
and
ss
nop
test
movl
cwtl
daa
ds
cmc
out
leave
push
pop
xor
jmp
pop
stos
dec
dec
fldcw
nop
push
pop
inc
and
cmp
adc
dec
dec
xchg
push
and
mov
inc
cs
out
and
jle
xchg
jmp
or
pop
push
ds
cltd
aas
test
mull
lcall
xchg
jl
mov
test
ret
sbb
ja
mov
call
out
imul
and
cld
sbbl
mov
sub
mov
mov
sbb
fucomi
xchg
ret
lods
shrl
popa
popf
shlb
ficompl
nop
jne
cmp
xchg
stos
mov
xchg
in
push
xchg
out
mov
dec
mov
int
xchg
popf
adc
push
mov
jbe
mov
add
inc
pop
or
inc
xchg
lret
adc
cld
imul
push
insl
and
mov
js
and
mov
inc
and
mov
sub
mov
lds
mov
jno
aam
mov
ficoms
xlat
rcll
loope
and
inc
add
push
icebp
inc
movsl
sbb
xchg
cmp
inc
mov
dec
addr16
repnz
push
or
inc
mov
inc
aas
and
or
mov
mov
ret
shrb
xchg
daa
fwait
sbb
dec
lods
gs
lahf
xchg
push
sub
pop
imul
mov
shr
push
pop
pushf
xchg
fdivs
out
cld
push
mov
mov
fbstp
test
orl
aam
adc
jl
cmp
je
mov
xlat
inc
fstps
testl
push
push
push
mov
arpl
scas
and
push
push
and
lret
mov
mov
sbb
sub
xchg
into
mov
faddl
jge
pop
push
sbb
sti
arpl
mov
xor
sub
jge
add
fcomps
lock
pop
adc
xor
fdivs
adc
cmc
addr16
lret
jns
icebp
jns
aas
sarb
mov
push
popa
fwait
cld
fwait
or
inc
push
jp
mov
mov
push
push
iret
jo
push
pop
mov
mov
jmp
sub
cli
mov
add
das
gs
lea
adc
xor
out
enter
mov
cli
out
adcb
cmp
call
cmp
dec
push
fisubl
imul
lods
lods
xchg
xchg
outsl
or
jne
test
outsl
stos
lea
fcomps
inc
shlb
fyl2xp1
ljmp
addl
mov
nop
test
jnp
mov
adc
mov
adc
js
lret
add
js
xor
jo
test
or
shll
or
in
cmpb
jle
cmp
mov
pop
in
or
inc
incl
daa
sbb
inc
repz
sbb
bound
aas
or
clc
mov
inc
or
cmp
pop
je
jge
dec
cwtl
xor
jge
into
mov
out
push
loop
sub
inc
push
mov
push
in
shll
into
inc
add
push
push
pop
lret
cmp
out
lahf
bound
push
leave
push
xchg
mov
sbb
jns
in
add
outsl
sahf
fldcw
pusha
lcall
push
push
outsl
push
pop
popf
dec
in
aas
std
das
int
fisttpll
sub
fistps
scas
dec
lahf
pop
lods
jg
outsl
lea
dec
in
aas
std
das
int
fisttpll
sub
fistps
scas
dec
lahf
pop
lods
jg
outsl
lea
dec
in
aas
std
das
int
fisttpll
sub
fistps
scas
dec
lahf
pop
lods
jg
outsl
mov
dec
in
aas
std
das
int
sub
fistps
push
mov
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
inc
mov
das
icebp
inc
int3
cmp
pop
add
fcmovb
sarl
orl
push
punpcklwd
jno
add
jg
outsl
inc
xchg
rorl
fucomip
into
xchg
jmp
out
mov
rcll
push
daa
leave
aaa
jae
cmp
js
lahf
push
test
lock
cmp
aad
mov
inc
jae
inc
and
ss
dec
cmp
ja
jbe
inc
mov
jge
sbb
in
out
pop
lret
aas
cmp
int
add
jae
in
addl
cwtl
push
adc
andps
in
pop
adc
sub
ja
popf
dec
jo
out
insb
push
jl
mov
sub
fbstp
leave
jp
pop
jns
fisubrl
stos
ds
mov
sbbb
push
lock
push
outsl
sub
xchg
xchg
jo
stos
es
icebp
jne
into
nop
jb
pop
dec
incl
mov
xchg
lahf
popa
inc
int
shll
push
scas
jmp
pop
mov
pop
aas
in
jnp
add
jg
jbe
xchg
pop
cmpsl
icebp
mov
lods
xlat
imul
adc
pop
and
cmp
jle
dec
add
xchg
int
rcrl
loopne
rcrb
add
adc
sub
and
dec
sub
movsb
popl
mov
shr
jbe
cmp
adc
gs
adc
outsl
xor
loope
icebp
filds
out
mov
inc
sqrtps
popa
das
jno
add
jg
outsl
xor
loope
icebp
filds
out
mov
inc
int3
xchg
inc
pop
jo
arpl
sarb
mov
cld
mov
arpl
jg
repnz
loopne
stos
push
movsl
jle
in
cmpsl
in
pop
cld
in
lahf
fcmovbe
cs
jge
stos
ljmp
aaa
mov
mov
cmpb
out
jmp
imul
stos
jmp
rcl
popf
xchg
into
mov
inc
inc
addr16
movsb
push
cmpsl
outsb
lods
mov
iret
push
loop
rol
xchg
jmp
hlt
push
pop
shr
xchg
lea
rolb
cmp
mov
pop
sti
icebp
pop
std
push
loop
jmp
pslld
aad
mov
insw
adcb
dec
ja
add
jno
imul
adc
sti
cld
insl
dec
cmp
dec
adc
xchg
faddp
insl
mov
test
out
outsb
lea
push
jecxz
test
add
push
mov
mov
into
sahf
subb
mov
add
out
fildll
push
push
xorl
enter
lock
pushl
push
pop
cmc
cmp
push
outsb
sub
inc
outsl
xlat
cld
adc
je
mov
repz
repnz
mov
jle
xchg
sub
repz
jge
mov
sti
fsubl
adc
xor
mov
cmp
cmpsl
fistpll
lret
xchg
leave
data16
mov
mov
or
dec
es
mov
xchg
or
sbb
and
sti
sub
xor
repnz
push
fwait
sarl
fidivrs
leave
dec
movsl
mov
push
cmpb
cmp
jg
jnp
pop
leave
lahf
les
loope
fcomps
jg
movsb
idivl
xor
mov
dec
int3
enter
mov
fucomip
mov
es
sub
adc
popw
stc
xchg
fsubrl
add
push
out
cld
pop
mov
mov
lods
fwait
rclb
sub
dec
jns
and
jg
fstpt
inc
cmp
push
jge
xchg
aas
or
add
xchg
lds
inc
and
pop
jns
mov
inc
pop
mov
into
jecxz
shll
andl
insl
mov
xor
jnp
cmc
and
jle
mov
xchg
push
sub
cmp
loope
dec
sahf
mov
or
sub
push
inc
cmpsl
jmp
cmp
inc
dec
rcr
push
adc
mov
rorb
adc
cltd
adc
pop
and
sub
cmpsl
and
xor
mov
les
icebp
in
lahf
fdivr
pop
push
lods
mov
data16
icebp
movsb
outsl
mov
sub
idivl
pushf
aaa
and
ss
mov
xchg
jb
push
mov
ret
xchg
pushf
inc
cmp
xchg
push
fdiv
mov
cmp
dec
arpl
popa
or
ja
test
and
xchg
xor
xor
std
inc
fcompl
and
jg
mov
mov
cmpsb
sub
inc
ss
mov
ja
dec
push
lock
sbb
jae
cmpsb
xchg
test
xchg
push
add
mov
imul
and
outsl
in
cwtl
out
test
sahf
push
mov
push
aaa
inc
adc
and
shll
xorl
lods
insb
int3
je
lods
ds
repz
push
ret
fstpl
jb
mov
inc
rcrb
adc
mov
loop
push
sub
add
in
aas
sub
xchg
lahf
into
enter
or
xchg
mov
pop
stc
mov
inc
ljmp
push
adc
lods
les
pushf
push
mov
in
inc
fcoml
mov
mov
hlt
test
in
lock
jecxz
push
aas
cmp
into
cwtl
outsl
mov
lock
cli
out
pop
sbb
inc
lret
sub
inc
mov
stos
ret
and
adc
int3
and
loopne
inc
xchg
sub
jecxz
mov
xlat
les
fstps
add
sbb
repnz
sti
test
mov
adc
and
dec
fnstenv
lret
ret
jp
push
pop
jb
xor
sti
push
push
addl
fdivl
pop
or
xor
jmp
cmp
dec
push
mov
insl
inc
push
loopne
inc
es
hlt
lock
pop
test
leave
xchg
pop
fisubs
pop
stos
outsb
jl
or
dec
outsb
out
jmp
push
or
gs
scas
fs
add
push
pop
jno
or
out
sbb
adc
dec
std
jne
push
stos
and
jno
fwait
lds
jl
jb
ret
aam
aaa
imul
cmpsb
repnz
adc
dec
pop
and
fdivr
iret
sbb
xor
es
add
outsb
xchg
sahf
push
rclb
lcall
mov
or
or
xor
stc
xchg
xchg
rolb
inc
cmp
push
jmp
cmp
pop
sub
sub
xor
int
leave
dec
mov
or
sar
test
lahf
and
aad
outsl
popf
lcall
fdivp
dec
pop
or
test
pop
cmc
pop
movsb
lods
addr16
das
add
push
jo
insl
inc
sub
jne
push
pop
xor
hlt
push
inc
decb
adc
push
pop
mov
mov
xchg
mov
das
pop
jae
dec
les
jae
xor
cmp
pop
outsl
loope
mov
in
push
data16
leave
scas
mov
cmc
movsl
aaa
or
jno
cmpsl
bound
icebp
leave
gs
jo
mov
xchg
inc
mov
mov
xor
outsb
mov
dec
insl
movups
aad
decb
mov
push
xor
gs
in
mov
fs
add
movsl
ret
sbb
xchg
cld
xor
inc
push
mov
in
int
sub
mov
loope
aad
lahf
xor
and
adc
cmp
out
cwtl
xchg
cmp
pop
hlt
dec
mov
mov
popf
pop
jb
arpl
rorl
or
cmp
sub
pop
sbb
into
ret
popa
test
lret
ja
mov
inc
addr16
dec
xchg
mov
sbb
sbb
push
mov
sbb
mov
gs
inc
xor
test
mov
lcall
rcll
test
inc
push
js
out
mov
rorb
dec
adc
lahf
dec
clc
int3
xor
jle
jg
popa
loope
adc
xor
adc
addl
inc
cmp
jo
out
cmc
ret
pushf
inc
add
es
push
fcoms
js
jnp
mov
jmp
cmp
ffreep
mov
mov
adc
scas
jno
pop
arpl
adc
adc
dec
mov
adc
dec
add
repnz
jl
repnz
mov
int3
mov
out
pop
cmp
and
pop
push
xlat
aam
sbb
pop
in
addr16
fisubl
mov
gs
or
test
mov
inc
rclb
mov
rcrb
mov
xorb
xor
cmpsb
and
and
push
jmp
push
movl
pop
rolb
mov
pop
inc
jl
in
mov
xor
add
xchg
cmpsl
int
or
imulb
ret
dec
sbb
pop
push
aad
pop
sahf
sbb
sti
sahf
adc
lock
cmc
sarb
outsl
push
lret
std
adc
mov
inc
cmp
mov
andb
nop
stos
dec
iret
sub
sbb
loope
imul
inc
lods
es
ret
out
movsb
iret
aam
dec
push
arpl
xchg
lods
scas
adc
dec
dec
cmc
test
mov
add
xlat
sbb
cmpsl
sbb
je
jl
neg
pop
lock
js
adc
xor
imul
sub
xchg
mov
in
rorl
jg
popf
lods
push
add
movsb
iret
sahf
xor
pop
add
stos
xchg
aas
sti
mov
jmp
mov
roll
pop
mov
sub
mov
xor
mov
cmpsb
push
mov
repnz
cmpl
in
and
test
js
xor
aas
lahf
adc
and
add
out
adc
sbb
popa
and
test
adc
rcl
repz
std
cmp
jne
mov
int
add
in
int
cmc
testl
push
pop
adc
movsl
ret
mov
adc
sbb
adc
push
jns
cld
popa
xor
aaa
sbbl
or
fsubl
fstl
jl
pop
push
and
popf
xchg
pushf
cmp
sub
shll
mov
sub
xchg
jge
sar
inc
ret
mov
arpl
in
icebp
ljmp
jp
stos
ss
jbe
stos
loopne
sti
ja
push
push
cmp
xor
jns
cmp
hlt
js
mov
xchg
in
mov
pop
xor
lret
adc
pop
dec
dec
xlat
repz
ds
in
into
icebp
das
cli
inc
popf
iret
ja,pt
pop
lret
test
les
sbb
cmp
adc
fists
shl
inc
sub
jl
sub
cmpsl
enter
sub
nop
lods
gs
add
xor
and
pop
sub
inc
call
adc
insb
mov
jg
int
push
or
pop
mov
pop
lock
xchg
dec
or
loop
pop
or
sahf
push
test
std
stc
test
mov
xor
out
out
ret
inc
ss
cmc
and
sahf
jmp
test
and
sar
mov
arpl
testb
cmp
pop
clc
jge
inc
shrl
push
adc
aam
and
aaa
or
inc
stc
add
inc
fisttpll
insb
fidivrs
sub
add
mov
mov
add
loope
inc
and
push
lock
mov
repz
loop
add
je
jno
andb
push
xchg
mov
outsb
mov
lds
jne
pop
lock
mov
pop
lods
jnp
adc
adcl
push
shll
movsb
mov
dec
sub
fstpl
inc
movsl
loope
inc
shrb
mov
or
loopne
and
sbb
lea
sub
push
lcall
dec
cmpsb
andb
lcall
xor
pop
outsl
dec
sbb
imul
js
xor
adc
inc
inc
lods
lock
sub
pop
dec
push
push
mov
mov
movsl
and
insl
or
pop
push
or
lds
inc
mov
aam
and
stc
jp
fstpl
push
daa
loop
add
dec
jl
insl
or
add
movsl
inc
sub
call
stos
xchg
pop
cmc
cli
imul
and
sub
lret
jb
mov
mov
push
push
push
mov
cwtl
mov
lods
push
sub
fwait
mov
lds
mov
insl
fcmovne
fs
movsb
scas
loop
movsb
std
fwait
insl
mov
mov
cmp
imul
add
out
adc
jb
call
dec
pop
stos
les
xorb
or
mov
lahf
cmpb
icebp
sub
mov
daa
shlb
dec
je
lcall
xchg
xchg
add
and
sbb
push
sub
push
mov
and
shl
and
mov
imulb
sub
jle
in
inc
and
fwait
inc
push
pusha
dec
mov
int3
ret
mov
scas
pop
push
aaa
jg
jb
lds
and
lahf
mov
lret
and
push
xor
add
into
enter
cwtl
subl
call
faddl
movl
into
loop
shll
call
sub
out
dec
mov
fbld
sbbl
sub
mov
pop
arpl
int
pop
cmp
mov
fs
inc
icebp
lods
movsl
sarl
xor
loopne
adc
cmpsl
ret
iret
pushw
aad
xchg
out
cltd
mov
aam
das
imul
bound
jle
mov
stos
xchg
mulb
cld
dec
add
fdivs
mov
jmp
adc
mov
call
imul
insl
or
xchg
inc
sub
xor
inc
emms
inc
mov
and
fadds
mov
loopne
icebp
and
push
push
adc
jg
xchg
mov
add
insl
push
cmc
inc
jnp
ficompl
jmp
mov
movsl
and
jnp
or
dec
sbb
cmpb
imul
bound
filds
pusha
fildll
xor
or
loop
cli
movsl
jno
sahf
sub
aam
adc
sub
dec
shl
jmp
pop
xor
aad
sbb
mov
xchg
inc
stos
or
dec
iret
aad
adc
outsb
xor
lahf
sub
scas
adcb
xchg
cld
sti
addl
and
loope
arpl
sub
dec
and
xor
xor
lods
xchg
sub
jg
rcr
mov
and
pop
clc
into
iret
xor
sbb
repnz
je
int
test
mov
std
jl
and
call
lock
test
adc
and
xchg
cs
ffreep
sbb
inc
hlt
adc
out
popf
or
scas
lahf
stos
lret
adc
mov
add
into
cmp
push
add
or
jp
mov
rcl
lods
inc
shll
adc
hlt
or
cld
lods
lcall
in
je
jb
inc
out
xor
scas
xor
hlt
lock
push
jmp
jl
dec
mov
stos
mov
inc
cltd
push
push
cld
push
inc
je
adcb
pushl
or
xchg
gs
and
out
xchg
push
ret
or
out
cmp
pushf
lcall
inc
imul
sbb
cmpsl
pop
jge
fstpl
das
daa
mov
push
sbb
int3
jo
icebp
pop
pop
push
and
shll
ss
push
adc
mov
xor
fildll
bound
loope
lret
dec
mov
in
aas
mov
aas
add
mov
ljmp
cwtl
fisubl
ja
loop
nop
pause
rcr
push
add
test
stos
jecxz
imul
repnz
push
dec
or
mov
mov
pop
and
icebp
ret
mov
fwait
xor
shll
in
fs
pusha
pusha
xor
in
adc
cmpsb
pop
sub
leave
xchg
and
add
push
dec
data16
or
cmp
sub
mov
scas
or
xchg
mov
in
cmp
and
cmp
cmc
imul
loope
mov
popf
add
incl
add
mov
mov
sub
mov
rcrb
sub
cmp
sub
es
fwait
dec
arpl
mov
sbb
inc
out
xor
xor
sbb
int
push
cltd
jnp
inc
loopw
ret
sub
adc
call
cltd
xor
adc
sbb
into
scas
fisubl
inc
shll
mov
cmpb
push
mov
pushf
aas
addr16
mov
xchg
sbbl
shll
xchg
cs
repnz
inc
mov
ja
mov
sub
iret
dec
sahf
pop
and
sbb
cwtl
cld
push
test
xchg
cmpsl
mov
pop
xor
hlt
xchg
xchg
iret
xor
rcrb
test
out
sbb
adc
mov
pop
mov
jne
lea
loopnew
lock
mov
popa
cmp
xor
loop
movsb
popf
mov
adc
adc
xor
add
es
pop
or
add
popf
xor
adc
loopne
jmp
pop
stos
fwait
loope
mov
xor
lcall
int
bound
outsl
in
outsb
shl
jne
insl
repnz
adc
lea
cs
jmp
pop
xchg
js
and
push
dec
mov
addr16
call
fldl
into
sub
sub
cmp
add
jnp
sahf
mov
aaa
adc
or
imul
adc
push
out
sar
pop
das
loop,pn
insb
mov
daa
aaa
dec
movsb
pop
and
rcrl
popa
adc
cld
jg
imul
rclb
mov
cmp
test
or
jno
imul
dec
mov
lea
mov
aad
mov
dec
sub
cltd
lret
jecxz
scas
xchg
lods
mov
clc
push
or
and
add
pop
dec
sbb
xchg
jo
stos
daa
push
outsl
sub
jno
nop
sarl
xor
pop
fstpl
mov
loopne
sub
and
shlb
pop
xchg
push
sub
add
je
mov
loope
inc
add
int3
nop
dec
inc
repnz
out
xlat
fsubrl
idivb
inc
loop
or
push
cltd
aaa
mov
lds
xorl
es
or
or
gs
or
cwtl
dec
rclb
fsubr
lea
clc
dec
sbb
mov
and
pop
xchg
negb
xor
rcrl
push
pop
ror
mul
sbb
gs
pop
in
aas
enter
and
jns
xchg
aam
xchg
movsb
icebp
stos
push
jo
xlat
xlat
js
insb
shrb
and
ret
orb
ljmp
adc
mov
dec
cmpsb
pop
adc
mov
dec
into
sbb
outsl
pop
sbb
lea
jl
addr16
out
je
push
push
int
adc
dec
adc
aad
stos
aaa
in
push
inc
xchg
or
jge
cmp
in
imul
mov
mov
fistl
aad
bound
mov
outsb
int
sarl
leave
cmp
fs
pop
insb
mov
shlb
xchg
test
dec
inc
push
cmp
push
insb
adc
mov
cwtl
jmp
jl
push
xor
mov
addr16
cli
mov
cmp
imul
dec
test
cmp
and
push
mov
lcall
bound
loop
inc
out
mov
sbb
mov
sub
sahf
push
mov
inc
pop
mov
jnp
add
sub
pusha
roll
inc
lret
shr
jne
adc
outsb
cli
push
push
cmpsl
jle
je
inc
js
sub
out
mov
xchg
cmp
lret
inc
push
divl
cmp
cmp
movsb
sub
or
push
xchg
popa
xchg
lock
xchg
iret
test
mov
xchg
sti
and
into
or
or
loop
aad
stos
push
js
jle
jne
mov
sbb
dec
mov
xor
hlt
cli
test
dec
push
mov
push
out
and
sbb
sbb
sbb
es
orl
xchg
inc
xchg
or
mov
cld
es
aam
vmovntpd
call
das
jno
jae
add
xchg
fidivrl
mov
push
dec
push
lret
jnp
jae
push
fsubl
fistpl
mov
and
or
loop
outsl
sbb
aas
dec
mov
xchg
push
sub
lock
es
cmp
cmpsb
mov
jg
jl
xchg
inc
pop
scas
lods
inc
jge
cmp
mov
mov
stc
sbb
push
rcll
ret
or
aad
cs
jmp
or
push
sti
repz
pop
push
sti
in
push
sbb
mov
pop
enter
lret
loope
aas
sbb
fisttpll
sbb
cmc
in
out
mov
sbb
jno
push
jle
int3
dec
and
call
sbb
pop
mov
adcb
loope
test
ret
outsb
adc
imulb
push
int
push
ret
ss
cmp
test
stos
sub
xor
js
bound
pop
push
test
movsb
push
xchg
xlat
js
xlat
popf
fldln2
enter
pusha
sahf
mov
mov
dec
adc
leave
popf
loop
dec
test
mov
jbe
xor
in
inc
add
xchg
out
loop
fs
and
cs
add
pop
movsb
push
mov
mov
and
mov
scas
aaa
fnstsw
andb
jae
xchg
and
pop
jmp
pop
jg
xchg
push
loopne
stos
mov
cltd
push
xor
das
fstpt
jae
mov
gs
push
fcomps
xchg
insb
in
jo
cltd
iret
push
xchg
xchg
push
lods
cltd
mov
or
push
add
loope
repz
inc
jecxz
and
sbb
sbb
ja
fs
daa
pusha
gs
pop
aad
mov
mov
mov
ja
pop
cwtl
xchg
mov
pop
dec
je
clc
imul
jmp
pop
xor
out
sbb
repz
or
ja
loopne
mov
imul
cli
add
jg
jg
xchg
pop
push
adc
dec
fs
repnz
in
xor
aaa
stos
cmp
in
std
movsb
lea
cli
sub
in
xchg
xor
ret
loop
test
imul
push
push
dec
jnp
or
inc
loop
jge
clc
pop
sub
popf
xor
cmp
ret
mov
icebp
mov
mov
push
mov
add
stos
leave
jp
int
sbb
dec
mov
out
mov
pop
push
gs
dec
adc
outsl
xor
loope
icebp
filds
out
mov
inc
sqrtps
popa
das
jno
add
jg
outsl
xor
loope
icebp
filds
out
mov
inc
nopl
sbb
jno
add
jg
outsl
xor
loope
icebp
filds
fidivs
or
jo
add
jmp
jo
adc
or
add
dec
cld
xchg
in
sbb
int3
mov
stc
shr
jecxz
adc
xor
push
sub
sbb
or
cld
xchg
in
sbb
int3
mov
pushf
repz
jl
insb
arpl
xor
push
sub
sbb
or
cld
xchg
in
sbb
int3
mov
pushf
repz
jl
insb
add
push
bound
push
push
dec
sub
add
mov
in
fsubrl
adc
and
sub
mov
popw
cmpsb
mov
cmp
xchg
jnp
mov
sub
inc
pop
xchg
push
sub
cmc
jp
mov
inc
cld
shll
leave
scas
ret
cmp
add
addr16
adc
inc
iret
loop
mov
out
push
cld
mov
push
movsl
cmpl
ljmp
dec
mov
bound
jl
jl
ror
push
ret
mov
add
jl
ss
pop
pop
shlb
pusha
insb
out
nop
push
dec
int3
inc
cs
add
sub
inc
cmpsb
insl
dec
arpl
push
add
sub
bound
mov
mov
pushf
repz
jl
insb
add
and
sub
sbb
or
mov
fisubrl
ret
stc
mov
push
gs
xor
pop
jno
and
xchg
sahf
orl
mov
sbb
jbe
push
or
js
outsb
push
or
xchg
fimull
mov
repz
jl
insb
add
and
sub
sbb
or
cld
xchg
in
sbb
int3
mov
pushf
repz
jl
insb
add
and
sub
sbb
or
cld
xchg
dec
lret
call
jg
lea
pop
into
stos
push
out
mov
xchg
negl
fsubs
or
sti
out
jno
icebp
adc
call
inc
ror
sti
sub
ds
daa
jo
mov
pop
mov
pop
movsl
testb
or
call
sti
xor
dec
mov
or
fistpl
rcll
inc
mov
je
sbb
ja
sub
std
das
stos
xor
jg
add
jle
imul
add
shl
int3
dec
xlat
movsl
sahf
mov
cmp
lcall
mov
fsubrs
xchg
pop
jg
pop
mov
mov
jb
call
pop
xor
lea
sahf
sbb
rorb
daa
sub
mulb
fwait
and
fnstsw
xchg
dec
push
sbb
sub
jge
mov
push
sbb
fidivs
sub
pop
sti
cmp
adc
sbb
mov
mov
sahf
pusha
or
xchg
sbb
clc
ljmp
inc
pushf
jmp
dec
pop
sbb
jcxz
push
lahf
je
jge
inc
mov
push
and
mov
mov
xor
mov
aaa
sbb
push
push
mov
jb
push
das
rcr
ds
and
add
inc
xchg
sub
sub
and
lods
xor
or
fwait
jnp
mov
adc
fimuls
bound
push
dec
test
dec
lods
sbb
inc
bound
mov
repz
jl
lret
rorb
inc
pop
jle
xor
mov
je
xchg
jl
dec
std
jb
pop
and
rol
push
divb
lret
int3
sbb
xchg
xor
shlb
popa
xor
lret
mov
mov
int3
fstps
loop
outsl
xchg
sub
adc
push
lret
iret
xchg
add
lock
cmp
pop
testb
pushf
fstpt
jno
or
push
or
lock
shrb
dec
mov
sahf
adc
andb
pop
shlb
jnp
dec
rol
cmpsb
out
mov
or
or
push
cwtl
xchg
push
mov
add
or
or
outsl
cmpsb
mov
xchg
mov
adc
adc
std
mul
in
movsl
in
fdivl
arpl
inc
je
lds
cmp
outsl
sbb
clc
scas
daa
add
bound
inc
ltr
int3
jbe
int3
mov
pop
xchg
push
pop
scas
mov
dec
or
add
test
insb
cld
jg
repnz
mulb
dec
mov
movsl
gs
cltd
push
js
xchg
aas
mov
jl
shlb
int
outsb
mov
add
std
sbb
inc
and
clc
or
aam
inc
mov
or
mov
jl
shufps
fistpl
dec
test
xchg
cs
pop
mov
neg
leave
jbe
popf
cli
and
stos
mov
imul
push
mov
fsts
aad
mov
mov
add
jns
mov
out
pop
cs
cmp
fadds
imul
cmc
stc
aam
scas
orb
and
mov
or
sldt
fisubrl
xor
or
pop
xchg
je
push
jo
or
add
shrb
loope
mov
dec
shl
sub
fwait
es
inc
fdivr
sbb
inc
lahf
lock
repz
icebp
test
mov
dec
inc
ss
push
add
push
data16
cmp
fildll
jae
xchg
imul
pop
mov
mov
movlhps
jle
sti
xor
stos
cmp
addr16
cmpl
cli
mov
test
jge
mov
addr16
jle
leave
push
lods
ljmp
mov
mov
mov
mulb
ss
fwait
inc
jo
test
gs
bound
inc
mov
dec
int
jp
idivl
insl
test
jle
cmp
sti
add
pop
ds
popf
cmp
sub
fbld
and
sub
lahf
adc
mulb
mov
out
icebp
inc
gs
fcompl
sbb
je
test
or
mov
pop
pop
add
mov
jno
push
sbb
and
stos
lret
int
arpl
subb
push
in
pop
dec
mov
pushl
jp
mov
ret
mov
cmp
inc
inc
mov
mov
mov
mov
lret
sbb
fdivrl
jge
hlt
jnp
jb
pop
les
jecxz
adc
cmpl
dec
outsl
test
or
inc
sub
cmp
cld
push
lret
hlt
call
cmp
test
outsl
cmpsb
jnp
pop
ss
xor
gs
and
sbb
stos
dec
sbb
mov
shll
mov
mov
xor
rcrb
mov
sub
insl
daa
call
repnz
push
out
and
push
out
inc
push
jmp
sbbb
in
and
enter
iret
nop
repz
cmc
jne
inc
bound
das
push
fidivrl
push
mov
lcall
mov
cmpsb
jnp
mov
adc
in
or
jnp
iret
es
pop
xor
ret
call
jg
pop
adc
arpl
fdivrl
and
bound
sub
sub
aam
xor
add
xor
jle
in
jle
out
mov
sub
pop
cmpsl
mov
sub
adc
fmul
outsb
mov
leave
xchg
rcl
sub
rclb
inc
sbb
jns
push
jo
sub
ret
or
add
pushf
add
or
add
scas
add
mov
pop
xchg
pop
and
jg
test
cli
inc
jge
aas
sbb
insb
mov
ljmp
and
adc
out
loope
les
aad
test
in
jmp
fistpl
test
sti
cld
sbb
testb
pop
pop
lcall
fsubrl
adc
dec
std
xchg
jecxz
xor
fldl
xchg
and
pop
mov
jnp
or
push
pop
cmp
push
push
sbb
clc
add
rclb
addr16
sbb
cmp
sub
lock
xchg
aas
out
dec
sbbb
rolb
mov
fwait
adc
aam
movsl
xchg
arpl
inc
insb
push
lea
popa
pop
fsubs
adc
out
fists
ljmp
jne
je
mov
xor
jmp
hlt
sbb
pop
pop
pop
js
icebp
clc
mov
xchg
in
or
pushf
pop
adc
scas
repz
inc
ja
aad
fidivrs
out
outsl
cld
pop
mov
jne
xchg
ficoms
jnp
or
xor
add
test
cmp
fcmove
mov
mov
cmpsl
cmp
and
cmp
mov
sub
popf
or
das
inc
lock
ffreep
mov
dec
adc
test
xlat
mov
inc
pop
movsb
outsl
lret
cmp
and
scas
cmp
push
mov
cmpsl
lods
push
aaa
pop
call
mov
dec
xor
lods
xchg
or
cmc
jecxz
dec
aad
or
adc
xchg
ss
sti
jns
fcoms
ret
rcrl
mov
and
add
lds
fadds
pop
cld
dec
push
mov
mov
push
sub
inc
mov
mov
xchg
xor
popa
int
xchg
sub
sbb
jae
cmpsl
mov
aam
cmp
pop
clc
sub
dec
loop
in
fisubrl
xor
inc
xchg
test
cmp
dec
cmp
test
mov
addr16
ret
ror
sbb
mov
mov
jecxz
jl
mov
inc
ds
add
mov
loop
jno
mov
push
jp
jmp
jecxz
mov
test
stos
or
xor
inc
xorl
repz
mov
push
jb
ret
jb
push
jecxz
bound
push
xor
push
test
sub
xor
sbb
mov
xorb
xchg
cmp
subl
dec
dec
outsb
push
push
enter
pop
push
xor
ret
cwtl
sub
rorl
add
jb
mov
ficomps
frstor
es
sbb
int3
jne
push
xchg
add
sub
jmp
lret
mov
push
and
in
mov
add
test
loope
push
stos
gs
stos
popa
pop
inc
test
or
jmp
xchg
xchg
mov
mov
jl
mov
fs
xchg
xchg
cwtl
pop
pop
addr16
lcall
ret
cltd
adc
adc
popa
outsl
or
into
xchg
jb
adc
push
cmp
mov
subb
pop
xor
jo
mov
mov
mov
insb
mov
scas
xchg
mov
xchg
lret
add
dec
dec
dec
and
stos
pop
add
push
or
out
out
hlt
out
mov
jmp
xchg
ret
pop
jbe
fwait
inc
mov
movb
aad
js
inc
mov
sub
xchg
add
push
dec
int3
sub
fs
negb
imul
jno
fiadds
or
sbb
leave
idivl
pop
pusha
js
shl
sbb
daa
addr16
sbbl
or
out
xchg
cwtl
movsb
testl
xchg
or
hlt
leave
int3
sbb
mov
mov
jg
jl
fldl
cwtl
dec
xchg
stos
inc
xchg
lret
movsl
pop
jnp
sbb
ficoms
pop
je
mov
sub
out
lods
les
push
lea
xchg
outsb
test
sub
inc
pop
mov
push
out
mov
pop
jle
or
out
inc
into
sub
cmp
popa
adc
das
cli
cmp
test
aad
movsl
shlb
jmp
addr16
pop
ljmp
or
push
test
stos
addb
and
jbe
push
fwait
ret
mov
jnp
add
dec
push
test
test
mov
scas
outsl
repnz
in
ljmp
sub
push
push
push
sbb
outsb
sahf
stos
or
dec
cmc
int3
cmp
gs
push
xor
ret
js
rolb
out
mov
int
pop
pop
sbb
cmc
mov
mov
dec
imul
iret
test
and
push
push
push
mov
jbe
pop
xorl
rolb
jge
inc
and
mov
movsb
test
imul
call
inc
pop
imul
sbb
pop
adc
je
add
dec
imul
sbb
jg
mov
lods
dec
div
jno
mov
cmp
arpl
movb
cli
push
xchg
fiadds
adc
jnp
in
lock
lcall
inc
cmp
iret
sub
shl
push
into
adc
xchg
out
adc
mov
hlt
adc
push
pop
jne
cmpsl
orb
or
xchg
scas
push
loop
vpackuswb
into
ja
enter
sub
test
mov
pop
daa
lcall
dec
inc
pushf
js
mov
mov
dec
jle
je
popa
jp
mov
pop
inc
stos
into
sbb
std
xor
jb
pop
xlat
outsb
mov
es
mov
fstpl
pushf
stc
xchg
xchg
fstps
jnp
aam
hlt
lret
sub
and
push
mov
xchg
cmpsl
aas
xchg
popf
fcompl
mov
pop
cmp
xchg
or
lock
sbb
cmp
jmp
flds
clc
push
aas
mov
in
lods
ds
iret
adc
rorl
xor
mov
jmp
mov
mov
or
jg
das
inc
sub
loope
mov
xor
sub
arpl
ds
into
insl
cmc
dec
cmp
inc
sub
dec
popa
lds
mov
andl
push
stos
sbb
or
in
shrb
test
cwtl
jg
fdiv
push
mov
mov
jl
icebp
test
or
call
sbb
adc
addr16
add
leave
jmp
lock
adc
sbbb
lods
pop
xchg
inc
scas
jle
jecxz
roll
pop
jmp
pop
in
roll
mov
adc
pop
inc
sub
mov
jl
xor
fidivl
fisubs
jge
mov
test
and
push
stos
mov
aas
or
mov
jnp
mov
sub
sub
sub
mov
dec
xchg
or
adc
loop
in
cmpsb
stos
fstpt
sub
lds
cwtl
or
mov
stc
add
mov
inc
test
add
mov
repz
or
out
arpl
arpl
add
aam
aas
and
inc
push
out
push
jbe
testb
mov
nop
push
adc
lret
rcll
test
or
xchg
sbb
mov
cmc
push
xchg
pop
sbb
push
loopne
push
and
mov
int3
orb
scas
test
icebp
sub
jl
mov
mov
add
adc
xor
dec
mov
or
pop
arpl
imul
scas
pop
lcall
fsubrp
iret
or
ret
je
iret
mov
pop
jbe
sbb
jmp
mov
shrb
out
aad
hlt
xor
sub
and
rorl
cmp
jg
stos
call
sub
or
pop
nop
insb
inc
jns
jmp
xor
adc
rolb
jae
lods
in
imulb
pop
arpl
mov
in
xor
and
dec
xchg
sbb
adc
cmp
sbb
adc
mov
inc
shlb
sbb
lret
xchg
inc
aas
mov
dec
jne
cltd
cmp
les
lcall
orl
jle
or
xchg
pop
je
fcoml
pop
mov
jg
jp
fwait
adc
fnstcw
lahf
dec
daa
stc
aaa
jns
push
add
pop
pop
mov
push
push
add
call
push
cmp
mov
sbb
mov
and
out
jl
scas
shrl
mov
addr16
sub
mov
std
shlb
pop
jecxz
movsb
mov
mov
sbb
pop
sbb
add
lods
sbb
mov
es
imul
das
lock
enter
rorb
inc
pop
jle
mov
cltd
push
xchg
push
cmp
jmp
in
push
out
iret
cmp
into
sub
push
inc
mov
jp
cmp
dec
xchg
dec
jp
in
mov
daa
ret
cmp
inc
sahf
mov
callw
and
pop
xchg
push
lea
push
js
ret
loopne
ljmp
jge
mov
int3
inc
add
jno
mov
sub
inc
push
sbb
add
xor
add
loop
stc
cltd
aad
xchg
add
out
bound
arpl
xlat
inc
fsubrl
pop
mov
push
cmp
push
or
cli
pop
xchg
cmp
faddl
out
mov
frstor
adc
dec
fidivs
sub
orl
push
lds
in
adc
stos
fldenv
out
pop
cmp
jg
leave
ficomps
lea
pop
xchg
rcll
loopne
fdecstp
mov
xchg
xor
lret
inc
scas
jecxz
aad
mov
je
sub
pop
jbe
lock
sub
js
xchg
mov
inc
loop
fs
out
in
mov
xor
enter
add
cmp
jae
adc
jp
aas
mov
jbe
cli
push
mov
pushf
add
inc
cli
in
lret
add
push
add
pop
adc
ds
je
ds
gs
imul
mov
mov
adc
pop
divb
push
movb
repnz
or
cwtl
lcall
xor
and
inc
cmp
popf
sub
popa
sbb
je
pusha
js
xor
addl
lods
mov
out
das
mov
push
and
or
mov
ljmp
movsl
push
aaa
dec
fs
bound
sub
scas
add
mov
pop
and
jmp
les
sub
push
int
xor
lahf
jbe
divb
push
ja
inc
insb
adc
lret
adc
pop
add
int
iret
mov
jo
roll
enter
cmpsb
adc
mov
idivb
js
lret
mov
shlb
cwtl
sub
mov
filds
sti
sbb
shl
cmp
jmp
repnz
iret
xor
pop
jecxz
fdivr
ljmp
out
ret
movsl
pop
mov
mov
push
int3
out
dec
aad
cmp
outsb
or
outsb
lds
out
cltd
pop
push
shl
adc
imull
sbb
es
or
adc
iret
and
sbb
sti
aad
outsl
ror
out
xchg
mov
lds
jne
lods
fildl
pop
mov
mov
xchg
mov
cmp
popa
mov
add
inc
inc
ret
ret
pop
or
in
xchg
fidivrl
sbb
dec
popf
sub
cwtl
cli
iret
ficoms
pop
xor
or
fistps
jbe
leave
idiv
stos
or
ret
pop
dec
subl
pusha
not
repz
hlt
jno
loope
xchg
addr16
popa
jns
mov
mov
ljmp
jl
ss
mov
fstpl
fnstcw
cmpsl
das
xchg
je
scas
jo
clc
mov
addb
xor
jl
add
shll
xlat
push
xchg
cli
add
push
jno
or
jge
out
cmp
or
test
rorb
icebp
xchg
stos
leave
ret
sbb
pop
or
jl
jge
mov
in
pusha
sahf
stc
aas
add
and
inc
jl
es
nop
mov
inc
mov
dec
inc
mov
jecxz
push
icebp
sbb
movsb
mov
mov
add
movsb
lahf
test
push
sar
stc
loope
lret
pop
mov
jnp
or
int3
mov
pop
daa
xchg
aam
sbb
xorl
scas
cld
sbb
cmp
bound
pop
adc
inc
and
scas
in
ret
enter
lods
xchg
adc
in
sub
loope
sub
push
lds
scas
and
pop
arpl
mov
and
cmp
imul
nop
xchg
dec
das
push
rol
cmp
lods
lret
cmc
sub
xor
push
pusha
in
mov
icebp
push
pop
inc
or
lret
stos
pop
sub
inc
sub
roll
push
repz
and
gs
jg
jmp
add
sar
mov
cmp
and
push
popf
mov
and
aam
hlt
int3
jnp
mov
sbb
sub
popf
sbb
mov
outsb
aaa
and
mov
arpl
ja
sti
push
pop
cmc
xchg
loopne
mov
gs
cmp
xorb
or
fdiv
data16
xchg
xor
mov
add
les
sub
cmc
pop
bnd
in
loope
rorl
data16
fwait
and
loopne
pop
iret
xchg
push
popf
xchg
xchg
scas
xlat
andl
ss
lret
jmp
loopne
lahf
or
shl
rclb
xchg
jmp
adc
fsub
or
sub
mov
sarb
xchg
push
out
xchg
push
xlat
jno,pt
fdivrl
jae
icebp
imul
filds
sbb
imul
push
pusha
dec
je
xchg
jecxz
das
in
xchg
or
add
mov
jne
hlt
hlt
mov
add
sub
ja
cmp
iret
or
jne
mov
rclb
dec
pop
in
mov
dec
pop
dec
xchg
es
xchg
xor
mov
imul
lods
sbb
pop
imul
fstpl
nop
push
out
xchg
dec
or
fisubl
xchg
leave
mov
fwait
into
mov
add
dec
mov
out
xor
xchg
stc
xchg
icebp
sarl
in
fwait
jnp
mov
sub
popf
outsb
inc
enter
lret
test
popf
mov
bnd
insl
out
xchg
or
xor
mov
jbe
sub
and
stos
pushf
stc
or
pushl
in
daa
pop
mov
xor
jecxz
pop
xchg
stos
push
jo
mov
add
sub
lret
fnstcw
rorb
stos
sbb
inc
stos
jp
or
cmp
adc
jae
icebp
inc
stos
adc
lods
or
xor
dec
mov
cmp
cmp
cmp
iret
cmc
jmp
xor
popf
push
mov
ds
pop
roll
mulb
aaa
jecxz
mov
jecxz
sub
ljmp
daa
fiadds
mov
add
lods
ret
pushf
repz
jl
insb
add
and
sub
sbb
or
cld
xchg
in
sbb
int3
mov
pushf
repz
jl
insb
add
and
sub
sbb
or
cld
xchg
in
add
xor
mov
pushf
repz
jl
insb
add
and
sub
sbb
or
cld
xchg
in
sbb
int3
mov
pushf
repz
jl
insb
test
dec
add
adc
and
xor
adc
je
test
mov
rclb
add
adc
and
xor
inc
push
push
bound
xchg
test
mov
in
hlt
sbb
adc
and
xor
inc
dec
push
jp
jb
fwait
mov
lret
xchg
mov
hlt
imul
adc
mov
add
imul
lret
or
outsl
ret
cmp
pop
xor
push
stos
out
out
pop
cmp
mov
add
pop
loop
or
ret
je
adcl
mov
aad
insl
push
mov
cs
sbb
cmc
add
add
mov
lea
or
dec
dec
cmp
sbb
aad
cltd
lahf
call
mov
fwait
andb
rcll
inc
xchg
or
xchg
sbb
xor
inc
mov
scas
jp
jge
pop
test
mov
andl
lret
add
adc
and
xor
inc
inc
push
bound
fwait
test
mov
lret
in
mov
imul
xor
xor
das
add
sub
std
ror
fcmovb
test
lahf
xchg
insl
inc
jae
dec
and
arpl
and
bound
and
idiv
mov
stos
mov
lcall
pop
inc
or
push
push
bound
addb
ret
aam
in
hlt
add
adc
and
xor
inc
push
push
bound
addb
ret
aam
in
hlt
add
in
xorl
or
ljmp
xchg
mov
popa
jno
cmpsb
cli
nop
lods
inc
es
mov
out
mov
sub
add
scas
jmp
into
push
xchg
dec
and
daa
lea
jg
insb
cmpsl
pop
push
repnz
daa
enter
add
and
sub
sub
mov
scas
js
mov
loope
mov
out
lds
cmp
cwtl
xor
jp
adc
dec
and
dec
dec
mov
test
lret
jmp
cmp
inc
repz
ja
add
mov
and
xlat
pop
xchg
cld
movsl
sbb
mov
aam
jne
adc
cmp
push
xlat
out
adc
sbb
mov
jae
cli
xchg
cmp
push
xchg
iret
xor
mov
nop
sub
mov
aaa
dec
add
shl
mov
std
clc
push
hlt
xor
xchg
call
or
arpl
js
loope
mov
xor
aad
mov
in
inc
adc
pop
imul
lcall
or
jns
pop
pop
sub
data16
in
jne
insl
stos
or
cmpsb
mov
dec
adc
xchg
std
sbb
xchg
push
or
xchg
jmp
leave
movsl
jo
xchg
dec
mov
sub
aad
push
dec
out
out
stos
pop
mov
test
and
adc
sub
ss
shlb
cli
scas
push
fsubs
mov
jb
mov
cmp
sbb
cmp
or
or
negb
cmpsl
adc
mov
inc
add
xchg
mov
test
enter
insl
mov
cwtl
mov
jmp
mov
mov
ret
push
dec
inc
mov
test
decb
xor
mov
lret
dec
aam
xchg
js
sbb
jmp
push
cmp
int3
fs
pop
imul
aas
nop
ja
in
jb
fidivrs
xor
mov
xchg
data16
push
jns
xchg
adc
roll
or
sub
nop
in
mov
xchg
in
mov
repnz
gs
mov
inc
lods
add
clc
mov
push
imul
adc
push
push
cmp
cmp
mov
mov
xchg
into
lret
xchg
xchg
dec
and
sahf
ds
push
pop
fs
xor
out
stc
in
pop
xor
push
out
xchg
sbbl
mulb
subb
sti
mov
jno
aam
iret
cmp
and
subb
daa
clc
or
shr
fidivs
test
movsb
push
lock
ficompl
data16
dec
mov
andb
adc
and
dec
jnp
insb
xorl
xchg
stos
or
mov
or
fwait
and
insb
add
lock
xor
jnp
sbb
test
or
mov
inc
and
jl
rorb
sub
lods
jle
aad
mov
outsl
xchg
sub
add
jbe
aam
int3
push
adc
and
stos
pushf
or
and
cwtl
sbb
test
xchg
pop
fisubrl
das
repnz
pop
lret
xor
out
cmp
and
sbb
cmp
or
xchg
fadds
ja
dec
cmpsl
jecxz
jmp
mov
movsb
arpl
cmp
repz
aaa
xchg
aad
mov
aam
clc
push
mov
add
adc
sahf
std
xchg
arpl
xlat
int3
aad
sbbl
ds
ss
mov
mov
adc
or
cmp
jae
sbb
lahf
popf
ja
mov
fldt
pop
mov
mov
movsl
lahf
loope
mov
lcall
add
test
fstpl
or
cmp
aam
hlt
xchg
or
repz
cmpsb
lds
mov
mov
mov
je
jg
mov
lret
in
and
mov
fs
xlat
cmp
mov
movb
dec
cld
adc
in
or
mov
insb
pop
ss
cwtl
aaa
popf
push
jmp
pop
dec
cmpsl
out
lret
test
cmpb
mov
xchg
or
mov
loop
es
push
jo
lock
inc
fidivrl
int
mov
and
sub
fcmovbe
out
leave
std
adc
cmp
jl
jmp
mov
mov
mov
rolb
loopne
cmp
mov
stos
cmp
loope
adc
loope
insl
inc
mov
xor
add
pop
dec
dec
ljmp
inc
ror
inc
mov
lret
cmp
jp
mov
fimuls
mov
into
sahf
and
sub
js
or
test
jnp
std
std
imul
push
stos
jb
xor
loop
std
sub
rolb
push
jnp
cmp
test
dec
sahf
xor
pop
mov
shll
pop
push
sbb
add
repz
inc
xchg
xorl
xchg
jg
ja
hlt
sub
cmc
or
pop
stos
jae
push
xor
and
les
lahf
mov
aad
mov
add
fwait
pop
insb
arpl
cld
daa
fwait
inc
jo
mov
add
je
in
fmull
cmpsl
dec
fidivl
imul
das
sbb
sub
mov
sbb
and
sbb
jp,pn
lea
lods
mov
xchg
mov
aaa
sbb
push
pop
push
fimull
mov
add
mov
es
jb
ret
mov
jo
fsubl
adc
int
mov
sub
rorb
push
jge
dec
sub
adc
mov
jl
jle
imull
cmp
stc
into
shll
mov
mov
lods
in
movsb
ret
ret
sub
xchg
xor
movsl
rcl
stc
pop
jno
cs
lods
xlat
mov
mov
repnz
bound
pushf
sbb
insl
add
mov
into
and
add
leave
sarb
pop
test
pop
inc
add
push
scas
jbe
xor
enter
inc
int
push
lods
pop
fs
popf
sub
stc
jecxz
jg
mov
xorb
push
cmpsb
cmp
jg
rolb
and
pop
sbb
xorb
nop
push
ljmp
sahf
dec
hlt
cltd
pusha
fisubrl
mov
loop
movsl
xor
inc
repnz
std
fwait
sbb
loope
std
in
pop
dec
inc
jmp
rcl
sbb
mov
mov
jns
jno
icebp
jbe
sbb
cs
adc
ljmp
xchg
adc
out
ljmp
loopne
mov
jecxz
out
inc
fcmovu
fs
jecxz
subw
mov
sub
jbe
pusha
js
movsl
pop
or
or
push
rcrl
cmpsl
lods
sbb
imul
sub
xlat
stos
scas
pushf
call
push
push
dec
dec
iret
jl
and
bts
push
test
sbb
in
outsl
or
sub
xchg
out
sub
or
pop
shll
xor
pop
push
pop
orl
inc
xchg
ss
rclb
xor
pop
pop
pop
scas
mov
xlat
cmc
adc
les
ret
pop
repz
and
mov
jge
cmp
xchg
imul
inc
xor
aam
out
cmpsb
or
pop
test
xlat
push
stos
sbb
push
mov
roll
cmpsl
in
jmp
lods
in
xchg
arpl
xor
into
aaa
dec
imul
enter
inc
lods
enter
xchg
dec
shlb
pop
dec
jb
negb
test
push
das
mov
fiaddl
inc
or
dec
fcmovnb
and
xchg
aaa
hlt
sbb
bound
and
stos
sahf
les
insb
into
cmc
inc
xlat
dec
or
pop
scas
ret
sub
cmpsl
mov
xlat
mov
hlt
mov
sbb
loope
iret
je
imul
pop
pop
mov
add
add
xchg
insl
movsl
lock
mov
xorl
and
sbb
inc
rcll
pop
adc
rcrl
push
fprem
call
mov
pop
in
xchg
fmul
inc
or
test
xchg
ljmp
fwait
mov
xchg
outsb
mov
loope
pop
test
sbb
jb
pop
jbe
cltd
add
sbb
and
flds
out
adc
mov
fdivrs
add
pushf
pop
stos
inc
pushf
jns
mov
rcll
in
out
dec
push
lea
pop
mull
adc
dec
xchg
push
popa
mov
sub
repz
pop
pop
sbb
mov
mov
and
stc
xor
inc
adc
cmp
or
mov
sub
inc
movsl
add
loopne
ljmp
sbb
xchg
jbe
mov
adc
mov
push
xchg
push
pusha
fcompl
movsl
scas
and
push
dec
adc
mov
jmp
pop
hlt
inc
iret
cltd
int3
pushf
xchg
lahf
or
mov
inc
cmp
jae
bts
outsb
iret
fisttpl
inc
arpl
ficompl
mov
es
mov
mov
scas
sbb
sbb
bnd
daa
mov
or
scas
into
cli
loopne
mov
out
cwtl
and
movsl
mov
rcll
idivl
push
dec
cmp
and
scas
xchg
sub
xor
iret
sbb
lea
xchg
sub
ss
cmp
shld
arpl
and
adc
and
call
mov
mov
add
or
lods
stos
inc
daa
jae
leave
inc
outsl
out
push
push
loopne
mov
int
and
dec
adcb
in
push
push
jae
stc
cltd
sbb
or
ret
std
pop
fcoms
xchg
out
push
and
sub
sub
inc
mov
jo
sub
mov
adc
dec
cltd
mov
cli
enter
and
jp
push
ja
popa
addl
out
fcomps
push
mov
loopne
cmp
or
adc
sbb
lret
mov
push
out
mov
and
dec
outsb
jmp
cmp
dec
clc
dec
outsb
stos
loope
lods
add
es
mov
ja
and
roll
xchg
lea
shl
sbb
and
adc
jge
mov
cmpb
adc
aaa
lahf
pop
pop
loop
and
fstl
outsl
rcr
movsb
and
popa
aaa
or
adc
leave
mov
dec
pusha
mov
mov
mov
insl
cmp
pusha
outsl
inc
pop
cld
sarl
or
push
inc
xor
sub
mov
add
std
push
mov
push
push
sub
fdivl
cmp
cltd
sbb
jo
jo
mov
dec
dec
sbb
push
and
mov
cltd
pop
lock
jecxz
jne
push
xor
xchg
dec
cmc
test
xchg
jns
jnp
shlb
mov
xor
or
jno
in
mov
fs
popw
add
out
or
notl
cmp
or
cmpsl
imulb
inc
xchg
in
cmpsl
ret
jb
ret
es
cmp
daa
outsb
mov
mov
inc
dec
pushf
js
lods
add
sub
rcl
jl
sbb
cmp
int3
jae
fwait
mov
add
outsl
lods
push
mov
pop
adc
mov
fxch
jb
or
fdivrl
push
xchg
mov
adc
pand
cmc
aaa
or
xor
xor
mov
in
xlat
xor
lcall
push
aas
and
push
pop
fwait
or
pop
cmp
dec
or
push
loopne
jnp
pop
push
imul
mov
cmpsl
or
out
add
inc
or
jns
cmp
outsl
sbb
lods
rolb
mov
jbe
scas
fwait
jne
inc
mov
sbb
sub
mov
shl
movsl
mov
dec
xor
dec
lea
mov
inc
inc
pushf
adc
jl,pt
inc
mov
jbe
and
pop
dec
out
cmp
xchg
sbbl
inc
push
out
insb
cwtl
leave
mov
repnz
pop
jmp
stc
stos
aad
pop
stos
jae
or
movsb
and
incl
or
dec
push
sub
dec
inc
push
inc
push
scas
into
pushf
aaa
xchg
inc
and
scas
jns
dec
jl
lahf
fidivrs
sub
jmp
pushf
loope
xor
lock
fimuls
out
fdivl
pop
mov
clc
or
arpl
jge
jl
pusha
movsl
orb
pop
dec
movsb
cmp
loope
add
sahf
flds
add
xchg
rcr
js
inc
test
or
xor
loope
push
jg
mov
testl
mov
sbb
shrb
or
xchg
mov
dec
xchg
inc
xchg
cmp
cld
xchg
enter
into
neg
jb
mov
xor
pop
xlat
jns
push
sub
frstpm(287
js
scas
cmp
imul
pop
mov
push
cld
rcr
mov
aad
inc
jecxz
out
and
popa
out
jp
xlat
adc
lcall
notb
xchg
adc
cmp
adc
fdivrs
pop
inc
xor
xor
pop
inc
pop
lahf
fildl
xor
xor
pop
lds
pop
push
popf
lock
add
mov
push
cmc
inc
sub
pop
sbb
jg
or
cltd
pop
imul
mov
in
xchg
pop
cs
popf
aad
jle
outsl
in
adc
jo
pop
xor
pop
cmp
jecxz
mov
ficompl
sti
dec
stc
aaa
cltd
mov
jmp
add
aam
xor
mov
mov
fldl
popf
mov
out
lcall
jl
push
fistpll
leave
or
stos
ret
lret
push
cs
sbb
rolb
jle
arpl
mov
pop
bound
aas
out
in
push
xlat
push
mov
cld
cltd
dec
lret
cli
add
jae
gs
icebp
xchg
add
xor
adc
push
fistps
das
outsb
fists
js
iret
stos
mov
stc
xchg
pop
pop
fcmovnbe
sub
jb
stos
lds
mov
loopne
mov
lock
repnz
xchg
lds
mov
shlb
stos
mov
fists
fimuls
push
ftst
ret
cwtl
sbb
rcll
fdivrs
test
arpl
iret
add
addr16
int3
xchg
dec
test
cmc
or
mov
negl
ret
or
jecxz
test
inc
lret
stos
in
xchg
mov
mov
pop
sbb
vmwrite
push
lea
stos
jl
and
xchg
shll
or
bound
pusha
and
fdivs
push
test
cmp
xor
mov
jp
sbb
sahf
dec
dec
out
xchg
shrb
popf
std
sbb
inc
fs
test
loop
shrl
or
movsb
lahf
pop
jae
cmpsb
aad
and
mov
fidivrl
push
push
mov
sub
pop
mov
scas
sub
mov
lock
sub
addr16
mov
int
cwtl
call
push
push
fisubl
and
xchg
imul
mov
cmc
dec
je
pop
xchg
and
adc
mov
push
movsb
xchg
div
les
dec
in
pop
adc
pop
movsb
out
ljmp
xchg
sbb
fs
inc
xchg
mov
add
lods
inc
mov
shlb
shl
leave
iret
sbb
pushf
sub
jmp
mov
mov
inc
mov
dec
shl
pop
lea
ss
jle
js
enter
xor
sub
into
sub
mov
pop
add
hlt
push
or
loop
mov
movsl
add
in
loope
jne
inc
pop
mov
loope
mov
cltd
hlt
cld
sbb
add
jo
imul
mov
jg
inc
inc
jmp
hlt
sahf
ffree
push
lahf
test
dec
xchg
mov
adc
fs
sbb
sub
mov
jno
inc
repz
orl
pop
dec
push
mov
rol
push
sbb
lcall
xor
das
jge
adc
in
or
lcall
fcoms
xchg
lods
ds
add
pop
loopne
xlat
mov
push
cltd
or
mov
test
dec
lret
lahf
mov
xor
adc
mov
scas
jo
arpl
ret
inc
adc
ret
lret
in
ret
fiaddl
shrl
sbb
add
fcmovnu
call
loope
push
ret
and
pop
xchg
jp
fwait
idivb
xchg
sbbb
les
arpl
pop
sbb
movsb
jb
adc
int
and
idivb
jmp
sub
dec
jno
xor
insb
dec
js
or
call
pop
and
pop
mov
jg
cld
push
dec
mov
lods
push
cmc
push
aaa
fcomps
arpl
inc
inc
ss
notl
cmp
xlat
loop
fistps
pop
push
lret
mov
shll
inc
jnp
xchg
jmp
pop
ss
ljmp
loopne
dec
jl
sub
adc
inc
sbb
inc
jbe
or
rcl
adc
sub
adc
cmp
jecxz
pop
pop
mov
imul
lds
movsb
cmpb
jle
sti
jno
loop
incl
mov
cmp
lds
mov
mov
imul
loopne
scas
xor
mulb
adc
fdivs
mov
mov
sbb
cs
andl
fdiv
mov
push
jl
mov
xor
and
fsubl
and
ja
loope
mov
jg
jo
jp
mov
push
xlat
repz
xor
cmp
cmp
pop
push
pop
stos
or
dec
mov
add
pop
in
and
fisubrs
sbb
xlat
pop
mov
or
dec
test
arpl
lods
imul
push
jnp
xchg
xor
mov
out
or
adc
mov
cmp
clc
sbb
adc
jmp
out
jne
stos
imulb
loopne
sub
sbb
adcb
fsubs
test
lahf
cmp
dec
add
ficompl
fistps
sbb
dec
pushf
xchg
cmp
loop
sbb
pop
out
jl
ss
or
add
mov
cmpsb
out
out
nop
clc
jne
jae
jle
psadbw
push
movsl
nop
xchg
mov
cld
mov
cltd
mov
jbe
stc
push
cli
fcmovu
fistpl
add
pusha
stc
testb
sbbb
xlat
sbb
cmpsb
ss
rolb
adc
xor
or
xchg
notl
aaa
iret
mov
mov
mov
or
in
mov
cmp
neg
addr16
pushf
sub
mov
inc
adc
lahf
dec
das
xor
lea
ss
ja
clc
pop
or
adc
jl
mov
scas
popf
hlt
push
test
scas
sahf
out
push
ljmp
sbb
das
aas
mov
lock
mov
jmp
in
adc
mov
mov
out
mov
mov
cli
pop
ret
in
mov
scas
or
push
scas
outsl
sub
ja
into
cwtl
mov
insl
xor
inc
fs
mov
sbb
test
xchg
imull
pop
fmul
push
and
mov
mov
fs
aad
adc
mov
lds
cmp
pop
push
pop
mov
push
dec
adc
adc
add
iret
out
jle
mov
stc
push
cmp
insb
mov
daa
jmp
xchg
jne
adc
cltd
xchg
xchg
mov
dec
fsts
xchg
cmp
jno
mov
xor
imul
inc
repnz
cmp
test
jbe
lea
cmp
adc
lcall
and
mov
pop
pop
dec
or
les
decb
dec
hlt
xchg
addl
clc
into
push
test
cld
xchg
push
mov
int3
mov
mov
cmpl
adc
mov
sbb
xchg
sbb
adc
aam
xbegin
fisubl
push
sahf
pop
roll
loop
daa
rclb
jmp
or
xchg
inc
mov
jo
and
xchg
je
iret
cmp
mov
sub
sub
int3
cs
mov
xor
xor
push
pop
out
xchg
pop
stc
les
mov
hlt
inc
sbb
mov
lret
dec
dec
and
sub
sbb
jp
lcall
outsl
mov
loopne
and
adc
mov
test
loop
cwtl
mov
mov
fldenv
inc
xchg
lret
cmpsl
jnp
bound
xchg
adc
fidivl
push
xor
popa
push
pop
adc
lret
or
out
sahf
icebp
stos
outsl
mov
test
xchg
or
xchg
push
mov
add
inc
dec
sti
xchg
pop
jno
ficoml
xor
mov
gs
jecxz
adc
js
int
sub
push
push
bound
addb
ret
aam
in
hlt
add
adc
and
xor
inc
push
push
bound
addb
ret
aam
in
hlt
add
adc
and
xor
bound
je
test
mov
loop
lock
add
adc
and
xor
push
aam
in
mov
insl
or
sub
and
xor
add
adc
bound
mov
xorb
loop
repnz
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
xor
ret
xor
add
adc
inc
mov
inc
mov
pop
repz
pop
mov
loop
fwait
adc
leave
cmp
mov
push
cmpsl
cltd
loop
dec
jne
jno,pn
mov
andb
pop
dec
pop
pop
fisttps
xchg
notb
adc
je
arpl
mov
adc
push
repnz
hlt
inc
aas
jb
test
mov
addr16
push
and
cmc
inc
ljmp
lods
mov
fisttps
push
lea
loop
or
enter
push
push
bound
setg
mov
pop
sub
jb
pop
pop
out
jge
xchg
push
mov
repnz
xor
cmpsl
sub
test
dec
mov
loope
jp
xchg
loop
mov
add
shlb
loop
repnz
inc
mov
inc
mov
jb
add
adc
and
xor
movsb
add
int
ss
xor
aaa
mov
out
out
mov
inc
pushf
mov
cmpsb
push
andl
ds
divl
xor
xor
div
mov
dec
xchg
pop
mov
movsb
jo
ja
dec
xchg
jb
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
pop
jg
rclb
pusha
popf
repnz
adc
dec
subl
sub
jo
js
mov
cld
decl
jp
shrb
int3
cmp
into
repnz
call
clc
test
add
jl
addr16
jecxz
sbb
es
int
jae
into
xor
data16
pop
sub
cmpsl
pop
push
ret
cmp
lret
call
out
dec
pop
out
fwait
sti
movsb
ljmp
decl
sbb
mov
std
inc
imul
lcall
jne
lea
int3
test
out
inc
scas
push
mov
mov
addr16
or
sub
js
xor
in
cltd
popa
xlat
jb
pop
mov
mov
inc
imul
enter
jmp
rol
pop
sbb
loope
mov
aad
cs
fstp
aaa
inc
testb
ficompl
lret
js
push
fdivrs
and
add
xchg
rol
xor
out
idiv
cmp
test
ret
mov
add
repnz
test
and
subl
pop
xchg
cmp
jg
xlat
adc
fsubs
add
repz
jecxz
pop
pushf
cltd
mov
fimull
add
mov
int3
adcl
scas
sub
rcrl
pop
mov
mov
ds
test
cli
jecxz
add
jbe
ficompl
mov
adc
lock
cmpsl
fwait
mov
jp
loopne
cmpsl
int3
addr16
out
push
push
xor
pop
mov
inc
cmp
xchg
inc
adc
mov
mov
lock
jo
mov
mov
bound
daa
xchg
ljmp
iret
dec
xor
test
push
inc
lahf
bound
pusha
xchg
in
cmp
push
jecxz
mov
fstpt
jmp
jp
lahf
cld
into
fidivrl
and
adc
mov
xor
pop
cmpb
repnz
mov
fwait
es
sbb
or
aam
mov
stc
and
xor
mov
jg
fdivl
movsl
dec
ret
gs
mov
jnp
ss
sub
xor
adc
insl
iret
pop
das
jne
outsb
xorb
add
mov
inc
mov
xchg
jge
add
inc
fsubr
and
adc
cmp
lret
xor
xchg
sbb
push
fsubrp
enter
dec
imull
clc
dec
push
loopne
xchg
jmp
jmp
xor
jne
sti
out
sbb
imul
sub
jnp
and
mov
cmp
std
add
mov
sub
rsm
inc
push
icebp
movb
lret
fimuls
fmuls
jns
das
dec
aas
pop
xor
ret
in
or
out
scas
bound
xor
movsb
es
lahf
popa
shl
jecxz
stc
sub
jae
inc
ret
popf
ljmp
jns
and
mov
sbb
or
pop
xor
dec
sub
filds
sbb
add
mov
xor
push
jg
jae
sub
dec
add
or
sbb
push
in
mov
dec
pop
mov
lods
mul
xchg
pop
jnp
or
mov
cmc
bound
lret
push
cld
out
inc
rcrl
in
mov
add
mov
mov
and
jle
push
or
sbb
or
mov
addr16
rclb
jns
std
js
repz
test
xchg
sbb
jnp
pop
jae
orb
mov
out
cmp
push
repnz
pop
cmp
js
inc
sub
dec
sub
sbb
packsswb
loop
xchg
cs
sbbl
fimuls
or
sbb
repz
repz
cmp
push
popf
adcl
mull
jnp
fisubrs
or
enter
xchg
sub
loop
or
dec
mov
xor
dec
das
adc
jb
js
jb
cltd
mov
cwtl
sarl
fsubrs
xchg
and
in
mov
into
not
imull
cs
xlat
cmp
inc
divl
pop
mov
pop
inc
arpl
fldt
stos
fistl
mov
and
out
adc
and
outsl
jns
pop
fsts
clc
adc
test
pusha
lods
xor
rclb
sub
dec
cmp
mov
pushf
dec
xchg
dec
or
sahf
jg
iret
in
gs
mov
mov
or
xor
adc
mov
and
bndldx
push
mov
push
mov
sbb
mov
jge
xchg
movsb
mov
lock
loope
push
movsb
dec
ja
adc
ds
push
push
out
jno
inc
nop
fistpl
jnp
inc
rcrb
xchg
inc
and
mov
cmp
insl
xor
or
xchg
outsl
add
stos
adc
push
jmp
icebp
and
push
lahf
scas
mov
scas
jnp
shll
mov
pop
sub
mov
sbb
mov
jo
nop
dec
pop
mov
scas
cltd
adc
pop
cld
fcmovbe
dec
push
xor
cltd
and
and
ficomps
pop
cli
pop
loope
inc
test
in
sbb
loopne
add
rcrl
pop
sbb
mov
aam
shlb
lret
ret
pop
pop
sub
cmp
pop
mov
les
cmp
and
nop
jne
divl
mov
adc
int3
mov
repz
mov
in
aas
pop
sub
stos
or
repnz
cltd
stos
dec
pop
cld
mov
inc
mov
cmp
or
pop
mov
mov
out
movsb
jno
dec
fcoml
dec
pop
int3
sti
and
in
cmp
jl
idiv
or
shr
dec
out
in
sar
cwtl
push
mov
ljmp
pushf
cld
enter
push
fldcw
push
inc
subl
or
mov
xlat
int
xlat
add
inc
addr16
gs
mov
pop
adc
pop
xor
mull
sub
or
cld
jecxz
push
mov
movsb
mov
fwait
mov
notl
adc
cltd
sub
inc
push
shll
ss
jb
adc
mov
fs
or
popa
movb
inc
out
lds
push
mov
fsts
rcr
mov
outsl
addr16
adcl
pop
je
and
clc
aad
fwait
movsb
hlt
out
dec
ljmp
subl
add
hlt
push
outsb
ds
sub
int
mov
or
or
dec
enter
mov
and
test
mov
aas
mov
test
lods
lea
mov
inc
loopne
cld
adc
xchg
fcmovu
outsl
push
sarb
stc
ljmp
imul
mov
scas
mov
enter
add
add
scas
popf
mov
xorb
negl
mov
mov
in
subb
clc
lret
pop
mov
xor
je
inc
orl
inc
jle
cmp
mov
push
sar
jne
jae
lods
ret
adc
dec
insl
push
jne
xor
sbb
push
push
sbb
insb
mov
leave
xchg
ret
call
jp
je
lahf
mov
aas
push
test
jne
pop
mov
push
adc
lcall
das
lcall
mov
clc
adc
ja
mov
pop
sub
in
iret
jg
mov
pop
and
loopne
pusha
std
or
stos
int
mov
loope
cmpsl
cmp
sahf
mov
mov
dec
pop
jnp
sub
lea
lods
jmp
and
out
inc
jle
js
leave
mov
test
jo
js
push
addr16
fcmovnb
mov
clc
xchg
daa
insb
add
adc
daa
xor
jge
xchg
ljmp
xchg
mov
imul
lods
ljmp
sbbb
pop
xchg
mov
dec
andb
pop
xor
xchg
fidivrl
xchg
jmp
mov
test
aad
mov
mov
jl
out
xor
in
cmp
inc
lret
mov
mov
lods
jge
add
xchg
fs
icebp
cli
dec
scas
and
cli
stc
int
into
xchg
inc
adc
loope
push
xor
pop
or
shlb
lea
add
in
jns
subl
push
cmp
push
dec
push
imul
jne
cld
leave
xor
jb
insl
and
jns
mov
pop
les
stos
shll
adc
out
cmpsb
je
arpl
fisubl
push
sarl
mov
mov
dec
and
insb
hlt
orl
and
sbb
mov
je
mov
mov
shll
dec
jl
and
lcall
inc
push
jae
test
into
and
push
out
orl
fistl
dec
cmp
outsb
mov
and
jno
mov
xor
cmp
adc
pop
xor
popf
test
adc
and
enter
pop
loope
out
push
sbb
pusha
jne
mov
xor
jb
sub
pop
testl
jecxz
dec
iret
xor
mov
and
cli
inc
push
pop
mov
push
cmpsb
add
rcll
idivb
fdivs
dec
xor
out
pop
outsb
lods
or
add
mov
inc
fwait
adc
sahf
fbstp
dec
pop
jne
cmp
pop
arpl
pushf
pop
out
cmp
hlt
jle
sbb
fwait
sbb
insl
xlat
nop
mov
andb
jge
xchg
jl
aam
mov
adc
hlt
andb
nop
cmp
inc
mov
std
cmp
sahf
aam
or
jae
daa
push
adcl
popf
sbb
or
clc
lahf
cli
inc
cmc
push
xchg
popa
pop
aam
roll
aad
dec
xchg
mov
push
sub
mov
xchg
xor
xor
cld
fadds
int3
dec
and
dec
aad
out
lahf
repz
push
sub
push
jns
mov
ss
push
leave
out
out
mov
ja
or
xchg
mov
lcall
jbe
jae
xor
or
mov
jl
aam
add
pop
jmp
cmpsb
mov
imul
loope
cmp
xor
mov
ret
or
sarb
bound
add
cmpsb
mov
andb
lret
xchg
xor
adc
push
or
stos
fsubl
cmp
dec
ss
dec
inc
lea
movsl
mov
pop
and
cld
enter
jae
stos
cmpsl
add
jecxz
cmp
out
xor
push
popf
mov
pusha
mov
cltd
neg
cmp
jge
popa
aad
in
fwait
push
inc
mov
in
scas
xor
mov
outsb
mov
fcomi
jecxz
cmp
in
and
loop
inc
addr16
xchg
push
out
push
dec
xor
pop
insb
js
subl
and
mov
mulb
sahf
cmc
fisubl
lea
pusha
dec
lea
and
sahf
jo
aam
inc
rorb
mov
out
loopne
add
ds
xchg
sbb
test
dec
dec
mov
arpl
cli
shlb
pop
sub
cs
scas
or
in
jbe
nop
mov
insb
test
xor
imul
add
pop
lret
mov
leave
xchg
adc
mov
mov
ret
repz
out
dec
repz
push
mov
rcrb
sub
dec
inc
dec
lods
xchg
popf
mov
aad
fsubrl
push
or
xorl
into
cmp
lds
dec
mov
cmp
add
test
mov
daa
mov
mov
sbb
sbb
lods
and
push
add
inc
scas
xchg
jp
mov
sbb
inc
insb
xor
add
es
jb
xor
imul
jb
lahf
test
push
sbb
fbld
sub
dec
rclb
aaa
aam
adc
in
mov
mov
jle
dec
movsb
imul
pop
dec
pop
sub
testb
sub
add
fisubrs
fnsave
ret
sbb
dec
cmp
out
cmpsb
mov
sarb
xor
push
lods
mov
inc
mov
push
ja
lds
lock
loope
das
inc
add
xor
jb
inc
cmp
les
mov
dec
into
and
clc
mov
jnp
push
xor
adcl
test
mov
shlb
in
mov
pop
out
or
inc
or
push
gs
dec
or
push
xchg
xchg
push
jns
iret
jecxz
movsl
rol
sub
pop
inc
aad
add
or
xor
lret
add
int
mov
lock
cmp
loopne
lret
mov
lahf
sbb
jbe
sbb
jns
adc
xchg
xor
xor
cmpsl
dec
call
enter
movsb
rolb
mov
icebp
dec
out
inc
lahf
sahf
cwtl
adcb
sbb
pop
dec
aas
sahf
jge
cs
enter
enter
imul
dec
mov
push
int
adcb
popf
mov
mov
dec
or
pop
in
rol
int3
push
jbe
xor
jno
adc
sub
xor
adc
aaa
adc
xchg
jo
sbb
pop
lahf
addr16
mov
ljmp
lock
ficompl
cltd
mov
mov
sub
imul
xchg
pop
xor
popa
jnp
or
sar
aad
mov
dec
test
dec
das
lret
in
pop
cmp
fwait
and
dec
gs
mov
mov
pop
rcll
data16
inc
cmp
jae
lods
jno
cltd
ljmp
outsb
push
inc
or
lret
dec
je
cmc
xchg
negl
pop
fisubl
fwait
jnp
test
sbb
sarl
hlt
lahf
dec
stos
xor
shll
cmp
add
cli
mov
and
xchg
insb
rol
pop
lock
lret
sub
push
fnstsw
lahf
xchg
out
xchg
mov
push
mov
aaa
imul
mov
push
imul
jb
add
jo
mov
push
popa
shlb
xchg
cmpsb
xor
ret
aaa
movsb
xor
enter
adc
pop
sub
mov
add
mov
jno
cmpsb
insl
lods
mov
loopne
test
mov
xchg
flds
mov
jl
aad
xor
rcrl
in
ds
cmp
or
jl
jbe
adc
sahf
and
ljmp
dec
fnstenv
push
addr16
add
movsl
shlb
xchg
int
inc
adc
cmp
lcall
mov
stos
pusha
lret
jb
inc
inc
fcmovnbe
mov
mov
xchg
lods
pop
frstor
mov
add
mov
fcmovnbe
data16
jg
and
dec
mov
fisttpll
je
xor
sub
cs
sbb
pushf
mov
lahf
sbb
push
mov
mov
mov
adc
dec
push
xor
mov
rcrb
mov
xor
dec
pop
cmp
adc
inc
leave
and
dec
je
inc
jle
int
mov
dec
xchg
push
outsl
add
pop
fistpl
lds
enter
test
outsl
lock
negb
mov
mov
lcall
add
repz
adcb
or
andl
sub
addb
sbb
cmp
xlat
push
and
scas
dec
jge
push
out
iret
data16
cmp
mov
mov
and
in
scas
xchg
repnz
adc
add
jmp
lret
ret
dec
inc
mov
subb
and
sbb
dec
mov
pop
push
addr16
xchg
shr
push
shlb
sub
cmp
fnstenv
push
push
mov
addr16
add
or
fwait
inc
test
inc
and
repz
inc
and
sub
stos
les
push
push
mov
mov
cs
idivb
int3
gs
nop
ret
mov
shrb
pop
mov
outsb
call
inc
pop
xchg
or
pop
sub
jbe,pn
jecxz
xor
mull
inc
rcrb
inc
xchg
or
daa
add
push
pop
add
sub
pusha
push
stos
xchg
pop
xor
addr16
sbb
push
sti
icebp
mov
in
or
sbb
jg
insb
dec
dec
lods
out
shll
jg
mov
inc
imul
fisttpll
shll
rcrl
insb
jno
jne
and
js
nop
jo
pop
in
lds
mov
fnstcw
push
mov
daa
add
cmovp
pushl
test
pop
jl
enter
mov
jo
or
mov
push
roll
sarb
xchg
fwait
jne
in
cmp
std
xchg
cmp
or
lea
jns
loopne
sub
icebp
sub
xor
xchg
mov
jb
int
cli
loop
lcall
mov
push
loopne
data16
jge
mov
cmpsl
fstl
js
xchg
sub
aad
fs
dec
mov
test
mov
cmp
adc
lds
lahf
f2xm1
and
sbb
sbb
lea
fstps
jae
stos
movl
int3
leave
movsb
ds
mov
push
arpl
mov
cld
outsb
imul
aam
aas
pop
jle
enter
rcr
cmp
cli
lcall
pop
les
cmc
mov
mov
or
or
lret
jbe
push
inc
sbb
clc
ljmp
adcb
add
jmp
addr16
and
mov
out
and
mov
adc
xlat
ja
pop
lock
dec
popf
rcl
divb
imul
cmpsl
mov
pop
enter
push
in
cmpsb
dec
push
hlt
movsl
stc
mov
loopne
ret
adc
or
sub
shl
iret
jns
cli
push
ljmp
jb
addl
push
mov
mov
shl
push
sub
ficoml
orb
and
cmp
jo
aas
cmpsl
fisubrl
stos
fdivrl
jo
out
cltd
sbb
mov
rcrl
ret
mov
lds
cmpsl
xchg
mov
or
mov
xchg
fists
fisttpll
loopne
mov
rcl
xchg
rcrl
mov
call
cld
fs
dec
stos
push
je
orb
fisubs
cmc
sbb
mov
stos
push
sub
xor
push
adc
sbb
inc
int
xchg
pop
xchg
inc
xor
pop
lds
mov
insb
sbb
push
lahf
nop
out
int3
fisubrs
adc
frstor
mov
clc
mov
lret
mov
sahf
iret
add
xor
dec
sub
scas
fildll
not
shll
pop
shll
mov
jge
pop
lock
sti
stc
mov
imul
mov
jl
inc
pop
pop
cmp
lcall
rolb
cmp
out
sahf
cmp
shrb
fisubs
shl
ret
shl
jge
cmp
les
movsb
clc
cmp
ljmp
ret
cmpsb
dec
nop
scas
leave
and
aad
dec
xor
popf
jg
dec
cmp
mov
jmp
inc
outsl
jecxz
push
lahf
adc
sti
lcall
cmpsl
loop
in
dec
nop
xor
test
insb
fdivrl
mov
nop
mov
dec
push
jecxz
mov
inc
int
lcall
stos
sbb
add
push
dec
sub
jecxz
lods
pop
jnp
pop
idivl
test
ja
sbb
arpl
xor
dec
mov
nop
ds
cmp
lods
cwtl
lret
je
pop
insb
and
and
lods
lret
loope
cwtl
lods
outsl
cmc
dec
imul
push
fiaddl
inc
ficomps
push
pop
stos
loope
imul
popa
ret
mov
dec
sbb
fsubrl
out
mov
sub
sbb
out
dec
insl
lcall
scas
shrl
lahf
add
sahf
lret
orb
xor
mov
dec
ret
and
mov
jb
loopne
je
cli
cmpsb
movsl
xchg
sbb
in
loope
cmp
jg
mov
cmp
xchg
insl
jmp
jns
adc
cmp
xchg
sti
pop
jmp
mov
or
and
repnz
jmp
pop
cltd
insl
xchg
movsl
movsl
jp
mov
inc
push
sub
adc
ljmp
jle
cmc
dec
sbb
push
cmp
sbbb
int3
imul
lods
fcom
stc
test
stos
inc
or
sbb
outsl
and
jge
gs
lock
ror
cmp
push
outsl
pop
mov
gs
dec
pop
movsl
lret
add
daa
dec
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jb
add
adc
and
xor
ret
xor
add
adc
inc
mov
inc
mov
jae
add
adc
and
xor
ret
xor
add
adc
inc
xor
mov
jb
jne
lcall
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xor
mov
pop
mov
mov
movsb
add
pop
in
aad
lds
popf
and
lods
jne
gs
std
inc
in
mov
movsl
or
xor
jge
insl
xor
movsl
add
aad
in
divl
dec
test
mov
popf
inc
in
leave
imul
pop
arpl
xchg
inc
jnp
mov
jno
add
int3
dec
xor
xor
popf
and
push
jp
or
in
cmpb
bound
leave
decb
sbb
mov
icebp
int
addl
mov
lds
int
lea
add
or
cmp
repnz
rorb
push
movsl
mov
div
pop
lret
insb
cmc
inc
cli
dec
sub
gs
lods
add
pop
nop
repz
cmpsb
xor
les
mov
xchg
sub
movl
push
lods
cmp
nop
addb
popf
and
mov
frstor
push
in
hlt
mov
movsl
adc
cmc
inc
in
aad
lds
je
push
lea
lods
jne
pop
mov
mov
shlb
std
inc
hlt
xor
push
mov
addl
in
lea
imul
shlb
xchg
dec
test
das
mov
mov
fsubl
fdivrs
mov
int
std
inc
in
mov
movsl
or
cmc
pop
in
aad
lds
popf
and
lods
jne
gs
std
inc
in
mov
movsl
or
cmc
pop
in
aad
lds
popf
add
mov
test
inc
mov
ret
xchg
mov
and
xchg
fs
push
or
imulb
xlat
mul
rorb
test
jmp
mov
jl
push
push
stc
cmc
jo
dec
inc
pop
call
stos
jbe
les
mov
dec
and
btc
push
int
jmp
push
ds
xlat
cmp
rorb
cmp
hlt
ds
cmpsb
in
sub
push
sbb
inc
popf
lcall
paddusw
xor
jbe
adc
jno
push
xchg
mov
cltd
jecxz
push
loope
mov
dec
mov
stc
xor
push
or
aas
sub
jbe
push
add
dec
in
roll
mov
je
enter
setnp
xor
jns
pop
mov
repnz
push
jbe
lret
arpl
in
clc
shrl
or
out
or
popa
loope
cmp
and
movsl
or
aaa
scas
pop
add
nop
pand
aam
scas
shrl
js
imul
iret
xchg
push
sbb
push
cli
sbb
int3
jge
cmp
push
jl
fisubrl
push
mov
mov
adc
pusha
xchg
popf
cmp
stc
cwtl
repnz
neg
nop
cld
cmpsb
loope
shrl
and
xchg
frstor
adc
pushf
mov
pop
gs
repz
jno
xor
leave
lcall
movsl
lret
fcomip
and
push
jno
push
inc
or
jg
or
lret
inc
insl
pop
in
leave
mov
cli
inc
add
lret
jbe
push
jle
cmpsb
mov
in
sub
popf
pop
sbb
loope
mov
jo
mov
insl
sti
cltd
mov
or
ror
lods
add
lock
adc
outsl
jnp
add
pop
adc
into
xor
push
bnd
arpl
test
jge
jecxz
xchg
dec
push
xor
lds
int3
sbb
mov
loop
dec
jmp
pop
adc
sbb
out
jb
rcrl
outsl
cmc
mov
outsb
and
fdivr
cmp
cmpsb
sarl
jl
insl
mov
in
inc
inc
or
mov
adc
sar
push
loope
fnsave
adc
stc
and
push
mov
dec
pop
lcall
xor
adc
or
sub
jns
shr
sbb
and
mov
and
sbb
xor
div
mov
jp
std
mov
mov
call
and
mov
ret
subb
push
ror
mov
out
loop
shlb
leave
fwait
dec
call
cmpsb
dec
mov
fiadds
push
mov
dec
int3
push
aam
call
sbb
mov
das
add
fldenv
sbb
jg
daa
loope
jb
lock
mov
xlat
popa
xchg
mov
mov
orl
cmc
imul
xchg
xlat
ja
mov
shlb
cli
xlat
cmpsb
imul
test
xchg
xchg
jo
mov
fstpl
adc
sahf
cwtl
scas
xchg
mov
inc
cmp
mov
jle
cmpsb
pop
pop
insl
aad
mov
push
int
dec
repnz
push
pop
aam
push
int3
sub
jnp
aaa
popf
push
pop
aam
lret
xchg
out
jge
jae
jecxz
enter
add
xchg
cmpsl
push
sbb
mov
mov
xor
stos
fstpt
leave
mov
inc
icebp
in
mov
push
out
mov
hlt
repz
sub
jp
maxps
aas
pop
mov
pusha
rorb
pushf
jmp
inc
icebp
xlat
sub
out
pop
sub
je
xchg
lock
mov
inc
push
or
imul
jo
daa
sub
ret
ficoml
aam
add
les
mov
mov
lock
push
vmovddup
imul
push
icebp
das
mov
sahf
dec
inc
add
mov
or
popa
mov
sbbb
sbb
and
push
adc
insl
fimuls
sbb
mov
movsb
xchg
setae
imul
clc
or
out
inc
insl
gs
mov
adc
and
dec
cmpsl
sbb
stc
sub
sbb
pop
dec
cmp
xchg
sbb
inc
stos
pop
mov
sbb
lds
mov
jecxz
inc
sbb
lods
sbb
movsl
lods
sahf
loop
pop
adc
pop
jge
movsl
outsl
and
mov
mov
xchg
scas
clc
push
jne
push
push
cmc
lea
cwtl
xlat
mov
out
test
rcl
add
in
hlt
imulb
lret
bound
mov
pop
push
jge
neg
dec
jge
inc
adc
inc
incl
cmp
pop
lods
xor
sbb
outsl
mov
cli
jns
movsl
pop
sar
sub
aam
es
xchg
add
fnstsw
and
stos
pop
mov
jne
sub
xchg
inc
negb
movsl
fisubs
sbb
out
dec
clc
sub
fdivrl
adc
repnz
test
dec
mov
lcall
mov
js
adc
cmp
add
lret
xchg
movsl
mov
xchg
out
adc
mov
adc
or
and
aam
mov
xor
cwtl
fsub
push
les
mov
fdivl
push
int3
jns
stos
xchg
sbb
aas
stc
cmpb
daa
add
mov
clc
lret
pop
mov
mov
gs
dec
loop
push
sbbl
pop
pop
ds
lret
mov
das
leave
jns
mov
cmp
js
mov
in
sbb
inc
int
adc
push
cmp
push
out
pop
dec
fwait
cmc
push
inc
push
and
std
push
int3
loope
xlat
push
cld
push
pop
cld
push
mov
cmpsl
sub
nop
ljmp
es
es
mov
push
sbb
or
pop
cmp
push
insb
mov
mov
adc
sub
daa
jle
mov
dec
sbb
pop
mov
out
dec
cwtl
cmp
loope
lds
out
stos
lret
xor
cmovp
fnstcw
popa
sub
fisubrl
in
fwait
xchg
inc
inc
sub
push
mov
mov
fs
mov
insl
push
or
leave
sbb
loopne
dec
add
inc
push
jns
lods
add
push
dec
pop
push
sbb
mov
sahf
adc
pop
pushf
rclb
lahf
mov
ljmp
adc
pop
test
aam
mov
std
fbstp
cmp
pop
test
mov
setae
sub
cltd
add
inc
mov
jbe
sub
mov
sbb
xor
jl
movsb
jno
inc
mov
mov
lock
or
or
mov
fwait
sbb
mov
aaa
xor
popa
ss
mov
repz
or
rcl
cmpsb
xchg
cld
sub
jae
jle
ja
out
lea
lock
mov
mov
pop
in
pop
lret
add
ljmp
dec
inc
fildll
stc
roll
dec
orb
icebp
ss
lods
cmp
mov
ret
xchg
mov
jo
pusha
ret
repnz
xchg
adc
pop
fs
jns
add
push
pusha
stos
mov
mov
pop
stc
sarl
inc
int3
ljmp
iret
js
or
mov
movsl
jae
repnz
ds
mov
into
cmpsb
add
inc
mov
xor
xor
inc
ja
push
mov
mov
cmp
fnstenv
aad
mov
mov
insb
shrl
adc
inc
jb
push
xchg
lcall
and
std
mov
fdivl
cmp
movsl
xchg
in
andb
idivl
jle
mov
xchg
sub
sub
sbb
or
lds
add
loopne
mov
mov
sbb
rorb
push
gs
lret
mov
dec
arpl
jl
inc
outsb
loopne
sbb
fcompl
roll
aad
sbb
movsl
sub
jmp
sub
mov
cmp
and
jge
jle
pcmpeqb
mov
ret
mov
out
jnp
fwait
xor
adc
loopne
xor
aad
in
loope
dec
pop
jns
shrl
sub
jno
sub
jne
jge
adc
out
jo
imul
mov
roll
jae
sbb
add
dec
jp
or
push
aaa
stc
sbb
icebp
cmpsl
xor
repz
jae
or
and
push
mov
and
stos
cli
cmpl
mov
lods
pop
icebp
lea
sbb
jg
xor
stos
or
and
in
inc
push
test
into
lods
xchg
iret
lods
les
icebp
mov
ss
mov
cwtl
sahf
scas
jmp
lea
movb
test
insl
sub
sahf
fisttpl
mov
mov
dec
fcomps
xchg
aaa
sub
cmp
pop
xchg
add
adc
into
pop
sub
jmp
lock
push
aas
testb
dec
cmpsb
out
mov
lret
jge
jnp
dec
pop
pop
pushf
add
rol
jns
lock
jbe
sti
fcomip
mov
or
push
pop
adc
stc
scas
stc
jne
mov
andl
imul
frstor
shll
dec
jmp
xchg
mov
imul
fistpl
pop
adc
das
mov
inc
pushf
xor
add
dec
xor
push
and
jbe
idivb
add
push
sub
push
ss
push
hlt
loope
jge
gs
sarb
repz
mov
es
push
and
push
xor
lcall
sbb
sbb
sbb
rorb
push
imul
inc
mov
shlb
adc
xor
les
mov
sti
int3
fnsave
ret
out
in
cmpsl
shrb
push
inc
jns
in
in
insl
jg
dec
movsb
pop
popf
or
mov
pusha
push
or
movsl
mov
pushf
out
or
or
jb
mov
cmp
xor
repnz
and
ja
push
mov
test
adc
dec
in
adcb
mov
xchg
jmp
stc
adc
lahf
cmp
repnz
pop
js
repnz
pop
fisttpl
pop
mov
fcmovnb
adc
mov
repz
into
push
out
in
into
add
imul
cmp
ret
vpsubw
mov
les
int3
jo
jge
sub
mov
mov
lahf
sahf
ljmp
xor
xor
add
ret
lods
mov
mov
aad
sbb
in
ss
insl
and
pop
push
inc
dec
stos
sub
inc
mov
lcall
sub
and
in
xor
xchg
jecxz
or
add
push
pushf
cmpsb
jb
js
sahf
jmp
cmp
aas
push
imul
sub
mov
dec
xchg
aaa
pop
and
fistl
lds
jns
jl
cs
shr
dec
aad
jle
ficompl
jmp
inc
repnz
xchg
cmp
sub
mov
test
mov
xor
rorl
or
cld
sub
cmp
outsl
xchg
fisubrl
jle
jl
lods
imul
mov
lea
call
mov
cmp
pop
nop
push
fcomps
das
ljmp
je
out
repnz
dec
mov
bound
adc
jp
xchg
in
loopne
arpl
jmp
test
js
inc
mov
addr16
push
cmp
sahf
outsb
in
jecxz
movsb
or
cmp
or
sub
add
xor
mov
stc
jb
cmp
xor
int3
mov
add
adc
push
cmp
pop
xorl
cmp
lds
orl
repz
push
sub
push
jb
out
cld
pop
daa
adc
cmpsl
xchg
mov
sti
leave
inc
inc
and
pop
loope
jg
xor
insl
mov
cltd
jo
mov
add
bound
lock
lcall
jg,pn
pop
andl
mov
pusha
clc
popf
rol
xor
inc
xchg
rolb
gs
dec
jbe
dec
in
inc
inc
aas
pop
fsub
inc
bound
inc
hlt
sub
movsl
ljmp
or
cmp
divl
and
push
sbb
mov
jg
arpl
lahf
fistps
xchg
les
push
push
adc
pop
cs
enter
rcrl
jmp
std
imul
icebp
pop
adc
insl
inc
pop
sub
push
push
push
dec
test
imul
arpl
es
int
stos
sub
aam
icebp
sahf
imul
xor
jmp
mov
push
push
mov
call
fs
mov
leave
cmp
aas
test
sub
arpl
rcll
pop
daa
dec
mov
data16
push
daa
es
add
js
cwtl
stos
lret
push
xor
imull
or
cmp
dec
lret
mov
test
test
mov
mov
dec
inc
es
jl
adcb
lods
dec
and
aam
sub
mov
or
inc
stc
daa
mov
sub
pop
cld
pop
out
mov
ds
xor
insl
mov
ret
hlt
mov
iret
xchg
stc
loopne
fs
add
pop
scas
push
xchg
int
cmp
pop
cmpsl
shrb
mov
imul
fisubrs
fldl
shlb
and
leave
cli
mov
inc
sbbb
add
jle
rcrl
lods
aas
jo
cmp
push
lmsw
mov
cld
dec
mov
popa
pop
jns
and
bound
ret
leave
sub
int3
lea
fwait
and
pop
lea
xor
ds
mov
push
push
lret
adc
ja
mov
push
mov
push
fsubrl
cltd
jns
arpl
cmp
jecxz
mov
adc
leave
into
pop
in
loop
adc
xchg
mov
mov
test
ja
addr16
push
rorl
xor
mov
xchg
push
jge
xor
xlat
movsb
or
testl
jbe
sbb
xor
stos
pop
stc
push
fcoml
fld
mov
mov
push
cmpsl
dec
imul
mov
cmp
mov
repz
dec
inc
and
cld
das
add
push
cmp
or
dec
pop
pop
mov
ret
outsb
jmp
sbbl
out
dec
xor
and
push
outsl
xor
mov
or
movb
and
jnp
add
xor
mov
mov
in
push
and
mov
mov
lods
jns
xchg
cmp
mov
jne
xchg
push
xor
and
adc
iret
sbb
add
sbb
rcrl
jecxz
add
jg
xchg
scas
imul
addr16
cmp
mov
fstps
push
xlat
push
xor
out
sahf
pop
out
sbb
cmp
movsl
int
mov
jo
fs
inc
pop
jno
jne
sub
sub
or
decb
sbbl
bound
lods
dec
stos
jnp
adc
sbb
sarb
out
and
mov
mov
hlt
mov
pop
sbb
cmpsb
lret
and
xor
cltd
stos
pop
movsl
sti
xchg
sub
cltd
add
mov
scas
sbb
pop
pop
fdivp
cmp
pop
and
into
mov
mov
mov
sbb
movsl
cmp
in
pop
jb
aas
js
sbb
jae
notl
ss
insb
xchg
inc
jno
mov
mov
lahf
adc
jl
pop
cmp
lret
movsl
iret
and
adc
out
stos
add
dec
dec
xchg
imul
lcall
mov
cmp
rclb
pop
gs
or
flds
test
sub
ror
movsl
sub
pop
rol
rcll
or
mov
push
xor
icebp
lret
mov
dec
movsb
stos
cltd
dec
push
stos
int3
sti
pop
enter
mov
repnz
mov
xchg
addl
leave
faddl
loope
jno
mov
adcl
pandn
rclb
cmpsb
push
outsl
xchg
out
fidivs
jp
mov
and
mov
ljmp
inc
lcall
and
roll
sub
sub
arpl
dec
xor
xchg
shrb
or
iret
jne
fnstenv
and
gs
inc
movsl
pop
inc
dec
movsb
nop
test
lds
adc
scas
insl
lea
push
sbb
filds
xor
ja
cmp
sub
pop
mov
fistps
cltd
sub
rorl
cmp
push
fcompl
filds
std
dec
or
mov
sub
xchg
dec
das
xchg
jno
cmp
test
sub
orb
out
dec
lods
xchg
mov
xor
adc
test
hlt
clc
adc
xchg
into
xor
inc
jmp
add
enter
mov
dec
stos
inc
mov
adc
pop
push
sti
or
dec
je
mov
push
faddl
xor
es
jg
inc
push
sub
xor
adc
popf
and
daa
out
push
ret
popa
mov
pop
ljmp
scas
mov
xchg
pop
loopne
sub
sub
into
xorb
loopne
popa
mov
jb
xor
rcrb
lock
lret
jo
scas
cmp
shll
repz
stos
jl
ja
mov
movlps
mov
cld
test
mov
sbb
or
test
mov
in
xchg
and
ret
add
ja
mov
pop
pop
add
dec
pop
nop
clc
sbb
cli
sbb
mov
mov
mov
les
sub
push
mov
and
imul
repz
xchg
xchg
dec
ret
mov
cmpb
xchg
pop
fs
push
add
test
sti
fcom
push
in
test
cmp
jne
out
push
popa
lods
and
lahf
add
or
mov
ficoml
lret
xchg
cmp
push
icebp
jae
mov
jg
test
fsubs
int3
out
pop
sub
add
lret
xor
pop
and
stc
push
mov
mov
jns
nop
push
jg
inc
out
sti
jecxz
movsl
inc
xor
outsb
jg
adc
xor
mov
mov
dec
fnstsw
cmpsb
or
mov
xor
mov
jbe
cmovo
inc
lahf
or
mov
xchg
or
ret
rorl
lds
mov
adc
sbb
adc
insl
imul
out
or
sub
dec
pop
pop
in
mov
or
outsb
out
xor
push
std
insb
lods
mov
xchg
jb
or
pushf
imul
lcall
icebp
add
loopne
orl
xorl
inc
add
cmpsb
scas
fs
or
mov
mov
mov
jno,pt
jb
mov
dec
int3
test
sahf
fildl
cld
mov
popf
rcrl
and
pop
add
mov
push
fisubl
es
ja
jecxz
push
out
mov
or
mov
jns
pop
dec
sub
inc
mov
push
push
add
adc
and
shr
cwtl
mov
jno
or
inc
jp
adcb
mov
fimuls
mov
lret
add
out
xchg
mov
dec
notb
out
dec
cld
inc
jbe
insl
push
push
mov
mov
and
testl
repz
xor
mov
loop
fwait
int
js
into
insb
mov
arpl
lea
jnp
outsl
stc
sahf
adc
cld
xchg
ds
jp
and
xor
inc
or
aam
test
xchg
adc
xchg
and
cmpsl
dec
add
loopne
jmp
imul
jmp
je
mov
cli
push
mov
in
adc
in
jmp
icebp
and
pop
les
xor
std
int
clc
fisttpl
or
xchg
jp
testl
mov
and
cs
inc
mov
xchg
test
fdivl
in
sub
adc
push
test
cmc
fnstsw
dec
jne
or
push
and
sub
push
xchg
pop
cmp
adc
sub
pop
stc
out
js
outsl
fs
bnd
sub
bound
add
jnp
pop
aas
in
dec
xchg
std
xchg
xor
xchg
sbb
insb
jbe
push
and
add
out
es
jl
shl
jbe
daa
fnstenv
aas
out
sbb
das
stc
cwtl
aam
or
add
cmp
test
loop
push
pusha
or
add
les
mov
rclb
loop
and
cs
push
push
adc
mov
addr16
inc
in
cmp
out
hlt
push
sub
jp
lret
imul
push
mov
mov
out
mov
cmc
sti
lds
imul
add
int
std
inc
in
mov
movsl
or
cmc
pop
in
aad
lds
popf
and
lods
jne
gs
std
inc
in
mov
movsl
or
cmc
pop
in
aad
lds
popf
movsl
lea
frstor
push
std
sbb
test
jl
insl
xor
mov
gs
std
inc
in
mov
movsl
cmpsl
aas
cmp
xchg
mov
xorb
add
sbbl
mov
mov
test
push
loopne
cmc
ffreep
add
adc
ret
mov
push
mov
stos
dec
xchg
push
in
xchg
xor
add
adc
inc
mov
sbbl
jne
cmp
mov
jecxz
hlt
and
jno
push
mov
cmpsb
jbe
cmpsb
adc
mov
lods
xor
add
xchg
jmp
push
mov
cmp
pop
sub
bound
cmp
mov
cmp
shrl
popf
dec
mov
jle
pusha
aaa
fs
inc
mov
jne
and
and
dec
add
xor
leave
in
dec
bound
imul
mov
pusha
loop
bnd
inc
shlb
addb
mov
out
xchg
mov
idivl
mov
aas
aad
lcall
outsb
gs
in
jp
xchg
mov
xchg
push
mov
or
call
repnz
xchg
pop
xor
test
ja
out
lds
outsb
xor
shlb
xor
push
bound
ficompl
mov
push
jmp
lds
mov
push
loop
popf
inc
scas
jnp
or
add
push
divl
aad
hlt
xor
xchg
jnp
movsb
mov
mov
sub
mov
loopne
stc
bound
addr16
popa
push
xchg
push
adc
push
mov
inc
adcb
bound
push
in
cmc
xor
add
adc
ret
mov
push
xchg
movsl
bound
push
in
cmc
xor
add
adc
mov
sbb
out
add
mov
les
stos
pop
ljmpw
mov
shl
mov
jno
cmp
dec
ret
ss
pop
cwtl
lcall
scas
cmpsl
xchg
jmp
fisubrl
mov
lahf
lods
push
iret
scas
and
xor
fnstsw
out
mov
sub
mov
add
jge
push
lret
imul
add
xchg
mov
pop
hlt
outsb
outsl
hlt
jecxz
into
popa
enter
movsl
ret
xor
mov
inc
lods
lret
or
aam
or
sbb
pop
and
test
add
pop
mov
shl
in
cltd
in
cmc
subl
lods
cltd
data16
testl
or
sbb
sbb
aad
jp
pop
dec
push
leave
adc
es
fcompl
dec
subl
xchg
adc
shr
int
repnz
pusha
out
jb
xor
rcrb
ja
pusha
lods
push
jbe
dec
push
clc
outsb
jns
and
sbb
push
mov
cli
or
into
nop
scas
mov
ret
xor
xor
inc
mov
jecxz
sbb
xchg
jae
fisttps
imul
push
push
or
aam
or
adc
fstpt
jns
add
je
dec
mov
popa
cmp
addr16
cmpsl
cmc
lods
sti
addb
push
jne
add
mov
xor
cld
test
lret
jle
mov
stc
push
xor
ja
pop
ret
mov
faddl
xchg
lret
inc
pop
mov
outsb
and
pop
mov
pop
dec
dec
mov
int3
ds
jbe
mov
lahf
mov
out
imul
orl
xchg
repz
jne
js
mov
pop
out
mov
push
lret
cmpsl
scas
inc
int
push
movzbl
flds
jge
xor
or
mov
or
ret
push
jmp
mov
iret
jo
sbb
outsb
aam
fidivrl
dec
pop
outsl
test
inc
mov
sahf
sarb
jae
cld
cmp
inc
test
fisttpll
dec
das
movaps
outsl
cltd
mov
xchg
mov
sub
in
imul
in
imull
dec
sub
or
sti
leave
mov
test
xchg
shlb
inc
sbb
or
or
push
jge
outsb
and
or
sbb
enter
test
xchg
aaa
movsl
cld
sbb
adc
xchg
stos
test
sub
xchg
jns
xchg
push
test
hlt
cld
out
push
xchg
push
int
sar
pop
rcll
dec
push
repnz
push
sahf
or
fidivl
je
sbb
jl
stos
or
cltd
mov
inc
lods
aam
push
dec
rolb
daa
cmp
pop
add
cmp
push
or
jp
loopne
dec
fisttps
das
popa
sub
xchg
mov
das
fcomp
decb
nop
loopne
xchg
nop
cmc
jmp
mov
add
mov
es
mov
sti
ror
lcall
mov
fstpl
test
xor
inc
sete
lods
push
push
jge
in
dec
mov
sbb
xlat
mov
ljmp
fwait
pop
daa
pop
cmpsl
cmpb
mov
test
mov
sub
pop
int3
lret
dec
pop
mov
sbb
xchg
mov
test
test
mov
push
mov
dec
movsl
bound
dec
dec
sub
repz
cmp
push
mov
repnz
add
jbe
dec
dec
add
xor
das
cmp
jae
xchg
mov
xor
lahf
mov
outsl
xor
mov
xchg
into
adc
jne
sbb
sub
mov
call
jb
ud2
push
inc
cmpsb
and
aaa
test
in
stos
pop
test
xor
dec
xlat
mov
fsubrp
xor
js
int3
cmp
mov
out
ljmp
xor
adc
cmp
aam
xchg
ret
pop
push
call
lds
icebp
xchg
lock
fistl
je
ds
popa
xlat
out
dec
iret
cmpsl
pusha
mov
testb
push
insl
aad
int3
outsl
rcrb
mov
adc
lods
mov
adc
add
mov
mov
flds
add
jb
sub
ret
dec
or
mov
pop
mov
adc
add
out
pushf
scas
out
mov
addr16
inc
subb
nop
lds
or
aam
xchg
fimull
inc
aad
out
je
inc
pusha
pushf
push
mov
aam
addr16
fldt
outsl
push
dec
je
into
stos
out
or
cmpb
mov
test
cltd
or
stos
jge
shrl
movsb
stos
push
pop
inc
push
icebp
adc
inc
adc
shlb
dec
inc
jae
imul
in
jo
fcompl
push
scas
push
mov
sub
inc
out
adc
ds
and
in
imul
push
ficomps
das
push
fists
lahf
ja
dec
pop
enter
push
pop
int
andb
lcall
mov
sub
popf
cmpsb
jmp
cmp
mov
mov
icebp
sbb
addl
adc
jns
dec
ret
jno
arpl
mov
jge
xor
test
push
pop
sbb
sbb
ss
lret
sub
roll
rcr
dec
ret
jb
in
stc
ret
or
mov
ss
bnd
lds
xor
lahf
scas
mov
cmp
pop
nop
ja
cmp
andl
pop
mov
sub
mov
cmp
xor
cwtl
pop
xchg
loope
fildl
jne
inc
add
sbb
or
add
fs
popf
ljmp
sbb
cwtl
push
cmp
int
mov
sub
mov
fildl
int
jns
xor
push
mov
add
ret
fildl
push
sub
inc
js
orb
loope
lret
adc
int3
jne
jb
lcall
mov
repnz
jle
xchg
repnz
out
and
or
and
movb
scas
cmp
adc
jecxz
js
cld
out
sub
mov
lea
add
insl
clc
out
imul
rcrb
sbb
ret
test
inc
jns
pop
dec
sti
mov
mov
jmp
fistps
into
cmp
iret
testb
lcall
mov
cmp
adc
jg
jecxz
inc
xchg
insb
mov
mov
fldcw
lret
jno
cmp
add
fmull
mul
cwtl
pop
fwait
cmp
inc
mov
pop
mov
in
inc
call
out
xor
mov
out
les
repnz
mov
pop
sub
push
inc
psrld
icebp
mov
sbb
mov
sbb
lahf
mov
mov
adc
popa
dec
or
in
cmc
mov
jmp
mov
cs
add
bound
add
push
ja
stos
scas
in
shr
mov
fistpl
pop
sub
xchg
repz
sbbl
pusha
sahf
sub
adc
pop
out
add
sti
cmp
rcl
lods
adc
cltd
pop
sub
jmp
add
lcall
push
mov
cmp
dec
inc
leave
iret
pop
adc
cmp
push
mov
insb
push
sbb
into
loope
sbb
aas
sub
add
push
dec
or
loop
cs
ds
icebp
jnp
inc
jecxz
pop
iret
pop
cmp
fistl
dec
loope
mov
div
mov
push
cmp
fwait
sti
data16
pop
loopne
mov
leave
sub
fisubl
stos
cmp
cmp
aam
sub
lods
int3
fcompl
add
mov
push
loopne
mov
out
add
inc
xor
fcoms
sarl
or
cmpsl
jmp
adc
ljmp
pop
dec
cld
cmpsb
jne
adc
adcb
lock
movsl
sub
adc
cltd
popf
orl
decl
sbb
stos
ror
das
aas
or
fnstcw
pushf
jp
xchg
int
push
xchg
sub
pop
andb
stos
out
add
lock
cmp
push
arpl
lock
push
test
fsubrp
sub
sbb
test
icebp
loop
xchg
loope
add
testl
mov
cmp
push
pop
push
cmp
out
sahf
aaa
mov
adc
aas
and
scas
push
mov
cmpsb
mov
aas
mov
lds
xchg
repz
rclb
sub
mov
std
push
dec
mull
pop
scas
xchg
test
mov
cmp
mov
cs
fucomip
fisubs
jae
fiadds
cmpsb
shl
daa
roll
pop
sub
push
inc
popf
mov
or
rclb
jmp
lds
mov
cmc
sbb
jmp
invd
clc
cmc
ficoml
imul
fstpt
fwait
data16
fistl
jg
subb
repz
inc
fadd
mov
xlat
jb
xor
popa
sub
pop
lods
imul
or
iret
jne
pop
fistps
std
iret
out
repnz
xchg
cmp
or
outsl
mov
pusha
aas
lcall
test
xorl
fwait
mov
mov
mov
push
xlat
xchg
call
sub
cmp
inc
push
adc
scas
aaa
test
adc
ror
in
test
jbe
mov
or
mov
mov
pushf
das
ja
push
std
xchg
loope
repz
add
out
in
push
cmpsl
mov
mov
xchg
inc
mov
sub
sbb
daa
ret
das
cmp
mov
ljmp
subb
fidivrl
sbb
jmp
mov
or
arpl
fmul
shll
jbe
popf
push
xchg
xchg
xor
lods
inc
fwait
jbe
stos
pusha
mov
loopne
push
fs
push
sbb
cmp
filds
cld
stc
xchg
imul
xor
cmp
dec
inc
jb
push
push
push
push
jns
mov
repz
daa
icebp
and
aas
in
xlat
mov
sti
xor
jg
loope
sub
adc
xchg
das
mov
push
push
cmpsl
dec
xchg
inc
dec
jnp
or
mov
sbb
leave
sbb
outsb
insb
mov
inc
lods
dec
sbb
rol
add
mov
jno
fisttpl
push
les
push
add
inc
mov
in
xor
push
pop
mov
push
xchg
push
sti
in
js
dec
icebp
sbb
xchg
mov
jp
hlt
xor
scas
aad
jge
adc
inc
loope
xchg
cmp
sub
call
and
cli
jbe
mov
ja
outsb
cld
ljmp
sbb
mov
fldl
clc
mov
inc
push
mov
test
jle
sub
sub
add
roll
jno,pt
xlat
xlat
cmp
sbb
sub
loop
jl
adc
xchg
pop
mov
iret
mov
pop
xor
mov
cld
jne
leave
fisubrl
loopne
shrl
aaa
out
outsb
dec
pop
mov
and
in
xor
add
adc
call
push
fcoms
mov
cmpsb
jmp
xchg
jae
loopne
mov
mov
mov
xchg
ds
sbb
push
mov
loop
xlat
es
out
xor
rcll
push
pusha
mov
ret
cwtl
test
mov
dec
and
pusha
cwtl
out
xchg
lret
pop
shr
or
dec
aas
add
sti
xchg
es
xorb
mov
lock
in
add
sahf
mov
mov
mov
dec
inc
out
fwait
ret
xor
push
scas
adc
xchg
mov
mov
cmpsl
xchg
addl
pop
aam
arpl
subl
sbb
sti
inc
gs
and
dec
ret
scas
pop
sbb
pop
hlt
jbe
popa
pop
dec
js
lds
dec
lcall
out
cld
jle
lods
cwtl
xor
lds
iret
mov
pop
push
inc
mov
repnz
jo
cli
mov
divb
cmpsb
and
mov
mov
cli
fildll
dec
cwtl
std
jb
cli
xor
enter
test
sbb
scas
clc
insb
adc
outsb
sub
xor
outsl
jl
cmp
inc
and
loop
pop
popa
sarb
or
push
cmc
and
xor
loop
inc
ss
and
loop
add
push
ss
sub
out
jae
insb
dec
orb
jl
dec
mov
sbbl
jge
ret
sar
push
push
fs
cmp
pusha
ja
push
mov
rolb
adc
mov
mov
in
or
inc
xor
and
dec
mov
lcall
dec
out
mov
adc
in
or
mov
and
ret
movsb
pop
int
cmc
sub
jg
in
lahf
jmp
cmp
add
sbb
popf
lcall
xchg
mov
push
fldpi
dec
fcompl
xor
ja
dec
es
aas
loope
mov
gs
xchg
shll
sbb
pushf
mov
outsl
clc
stc
sbb
mov
or
jb
and
mov
pop
push
iret
jb
sbbb
dec
mov
sbb
loope
inc
cmp
dec
xchg
xchg
pop
xchg
fwait
inc
mov
sarb
pop
sbb
jnp
outsl
mov
mov
dec
aas
mov
in
call
test
int
int
mov
push
lds
fadd
ret
mov
ds
cmc
xor
lds
and
aad
test
mull
xor
push
sbb
mov
mov
imul
xchg
pushf
mov
jmp
mov
lock
sbb
cmpl
shrb
ret
add
push
push
scas
stos
xchg
inc
lods
sbb
sbb
stc
push
lods
cli
mov
movsl
bound
scas
aaa
jmp
mov
test
or
jnp
mov
jge
dec
push
or
ret
cmp
gs
dec
dec
sbb
or
dec
xor
test
cmpsb
push
lock
mov
mov
popf
pushf
cmp
pop
or
cmp
sbb
cs
gs
data16
xor
dec
into
adc
push
pop
adc
idivl
outsb
scas
imul
loopne
dec
jno
fimuls
or
cmp
cmpsl
test
addb
mov
dec
cmp
aas
mov
jecxz
ss
aam
ud2
call
lods
lret
in
dec
daa
add
add
dec
loop
xchg
add
pop
int3
mov
aas
lret
push
add
xchg
pop
mov
lods
dec
jno
cmpsl
pop
lcall
es
sbb
jge
out
jge
jmp
das
std
mov
repnz
stos
push
inc
mov
dec
jle
xchg
in
rcrl
push
sub
ss
push
test
jb
mov
mov
ret
xchg
aaa
aam
divb
cmp
adc
fdivl
dec
sub
push
in
rcrl
pop
push
or
ljmp
lcall
mov
cmp
xorl
xchg
xchg
jae
mov
stos
loop
mov
jge
les
rcr
out
repnz
xor
mov
movsb
je
pop
jbe
stc
cltd
pop
aam
mov
fcmovb
ja
in
inc
push
push
add
js
out
sarl
mov
sbb
mov
jge
test
scas
xchg
hlt
add
push
xlat
push
or
cwtl
int
loopne
jae
cmp
mov
sub
dec
adc
or
or
jmp
push
lods
xor
or
push
jns
in
loope
add
xchg
rorb
sarl
imul
add
andb
cmpsb
ljmp
or
insl
jno
jecxz
imul
xor
and
repz
and
sbb
add
and
mov
xor
jnp
cmp
inc
orb
and
lret
fdivrl
mov
dec
cs
mov
hlt
mov
hlt
test
pop
inc
rclb
xor
mov
mov
cwtl
sub
shrb
push
mov
loopne
pop
imul
sub
nop
mov
mov
xchg
or
cmc
lods
adc
pop
fnstenv
mov
push
adc
fs
rclb
sub
addb
xor
hlt
and
and
add
and
dec
mov
fistps
test
inc
loope
mov
cltd
sbb
aaa
ret
mov
sti
jle
fistpl
xor
inc
fcoms
dec
jns
js
mov
lret
lds
lret
addr16
in
jmp
or
cs
xor
or
ds
and
push
sub
jmp
mov
loopne
in
sahf
jae
cmp
xor
insb
jne
insb
inc
sub
jno
setns
mov
cmpsl
clc
add
ljmp
push
cmpsb
sbb
inc
inc
jmp
push
push
add
jnp
xor
out
clc
or
xchg
xchg
int3
or
fisubrl
sub
or
jne
mov
dec
ret
jl
add
jae
jne
pop
push
mov
mov
clc
dec
aad
cld
lods
pop
mov
ds
jns
fs
mov
and
pop
mov
push
dec
pop
mov
cmpsl
push
jo
out
inc
pop
mov
jb
mov
popf
sti
cli
fidivrs
rcrb
leave
xor
and
ljmp
stc
jmp
insl
sti
pop
cmpsb
xchg
stos
fsubrl
rcrl
subb
mov
les
adc
imul
call
jle
jns
movsb
inc
daa
xchg
add
pop
mov
push
sub
movsb
and
push
pop
adc
test
push
xchg
and
jbe
repz
jle
pop
xchg
repnz
inc
jno
aam
leave
mov
inc
outsl
push
inc
mov
inc
ret
shrl
jbe
jnp
adcb
movsl
arpl
jne
or
push
mov
dec
in
inc
lcall
cmp
xchg
aam
in
ds
xchg
pop
aas
cmp
test
into
sub
jbe
sarb
push
xor
pop
xor
lahf
pop
insl
push
add
mov
ljmp
pop
jb
insl
mov
dec
cmp
and
leave
adc
dec
sub
add
sarl
orl
push
sub
adc
ret
sub
call
pop
push
lret
or
xor
pop
push
outsb
sahf
shrb
imul
sub
lret
vcvtss2sd
and
popf
add
cmp
in
cmpsb
jns
rcrb
push
xor
popf
or
insb
mov
in
mov
jbe
mov
pop
arpl
rcrb
incl
sub
or
popa
lods
ss
mov
or
jns
sti
loopne
sbb
or
loope
into
sbb
add
aas
lcall
rcl
xchg
sub
jbe
xchg
xchg
cld
pop
push
je
les
sbb
aam
sub
into
jbe
mov
pop
and
gs
jp
adc
fisttpl
xor
cmp
xor
pop
or
invd
sbb
inc
imul
add
ret
out
popa
xor
movhps
call
xchg
scas
imul
adc
add
in
pop
imull
xor
lock
scas
lret
loop
push
fstps
xchg
mov
enter
popa
ret
pusha
sbbl
inc
iret
aam
outsb
stos
cs
int
push
pop
shl
in
pop
std
push
and
sarl
dec
inc
ljmp
cmp
pop
add
jp
into
into
jnp
dec
jp
push
lock
mov
test
fildll
lret
xor
dec
ja
insb
outsb
gs
and
in
aam
mov
data16
out
xchg
mov
and
dec
jo
imul
nop
in
lods
mov
mov
mov
push
movsl
mov
mov
fwait
cld
adc
inc
int3
ds
ljmp
xor
rcr
icebp
mov
dec
lret
inc
cmpsl
mov
xchg
xchg
dec
or
loop
jl
mov
in
fstl
or
jnp
adc
lods
rolb
dec
btr
cltd
sbb
mov
rcl
pop
push
xchg
je
mov
mov
mov
pop
xor
cmp
test
pop
mov
imul
mov
out
mov
and
pushf
rcrl
push
push
insl
ss
shl
and
aam
jne
push
push
xlat
stos
jmp
pop
out
out
and
lods
xor
add
adc
add
jp
call
out
pop
popa
call
subl
scas
adc
xchg
mov
inc
cmp
popf
push
mov
test
inc
aad
mov
push
jo
loop
xchg
or
mov
push
xchg
movsl
bound
push
in
cmc
xor
add
adc
ret
mov
push
xchg
movsl
bound
push
in
cmc
xor
add
adc
ficoml
flds
push
xchg
mov
inc
xchg
pop
in
in
xor
or
idivb
es
mov
add
push
movsl
popf
dec
fsubrs
inc
xchg
and
cmp
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
and
pop
les
ljmp
pushf
or
add
add
add
add
add
add
movsb
add
cmp
mov
xchg
inc
add
add
add
lcall
add
add
add
push
add
add
add
add
add
dec
add
add
add
add
arpl
add
xlat
add
add
add
add
add
push
add
test
incl
push
add
add
aam
inc
add
jl
mov
test
dec
add
jo
push
add
add
mov
and
out
add
add
add
add
push
add
mov
add
add
imul
data16
lods
add
add
add
and
rolb
les
push
pop
test
pop
add
add
lods
add
add
add
add
add
add
add
pop
add
daa
add
add
add
jo
rolb
push
add
pop
add
add
add
add
sub
and
add
add
add
sub
add
add
add
insb
add
mov
add
dec
add
les
jb
addl
push
add
add
add
add
add
add
iret
add
add
add
add
pop
add
add
add
add
cmp
add
pop
and
add
add
add
add
add
add
add
add
add
add
add
add
add
and
xchg
add
add
push
add
add
cmp
add
add
add
cltd
add
add
add
mov
iret
add
add
add
mov
movsb
add
or
cmpsl
add
add
mov
add
add
adc
push
add
pop
add
add
add
pop
add
add
add
add
add
add
add
cmpsl
add
stos
add
or
adc
addl
add
mov
enter
adc
test
add
inc
add
add
add
inc
add
add
add
add
add
add
and
int3
add
add
add
add
push
add
add
xlat
add
iret
add
add
add
add
jns
push
add
test
add
add
add
push
add
add
xchg
add
add
stc
add
add
add
and
imul
xlat
add
add
lods
add
add
add
add
push
add
add
add
add
push
add
in
add
push
add
aas
add
dec
add
sub
pop
add
add
popf
add
add
add
add
mov
add
pop
add
add
add
add
add
add
dec
add
add
pop
add
add
add
add
add
add
cmp
dec
add
add
mov
sub
les
aad
sub
add
add
inc
jg
dec
jo
adc
test
and
daa
out
inc
inc
outsl
and
add
jmp
repnz
dec
and
mov
dec
ret
mov
cli
mov
aam
push
andb
jp
decb
sub
addr16
in
sti
out
jbe
fs
enter
or
enter
xchg
pop
flds
xor
aas
imul
clc
aaa
lock
shll
iret
xchg
je
ret
adc
jbe
xor
jae
inc
sub
scas
mov
shrl
or
pop
mov
or
pop
mov
mov
pop
cmpsb
dec
jp
or
push
ss
mov
jl
jnp
or
cmp
jbe
jl
fcmovnu
cwtl
jmp
in
pop
push
aad
pop
adc
sub
or
sbb
in
outsb
repz
and
jmp
xchg
xchg
pop
push
ret
mov
push
xchg
inc
sbb
adc
loope
fidivrs
pop
int
sbbl
sub
fsubrs
mov
fdivr
dec
jno
bnd
cli
add
gs
fs
ja
lock
add
dec
lods
outsl
lods
xchg
cmp
sti
adc
popf
cli
dec
jo
xchg
pop
bound
pop
aad
mov
inc
jne
cwtl
inc
xor
xchg
mov
shrl
cli
mov
movsl
out
add
int
leave
pop
cmp
insb
das
xchg
push
iret
jb
adc
cmp
dec
mov
pop
or
mov
arpl
mov
xchg
jp
loopne
mov
sub
das
stc
enter
cmpl
or
xchg
mov
lahf
scas
repnz
les
aad
enter
outsb
jmp
clc
adcb
faddl
leave
adc
pop
fisubrs
xchg
call
xor
jno
push
jnp
mov
fisubl
jno
inc
int
subl
adc
pop
mov
int3
jnp
jns
fdivp
sub
or
jb
dec
popa
mov
mov
in
negl
movsb
aaa
sbb
or
xor
imulb
cmp
pop
in
js
je
mov
mov
pusha
pop
je
xlat
cmpsb
cmp
inc
cmp
inc
pop
mov
pop
inc
mov
push
adc
hlt
stc
push
push
mov
mov
sbb
sbb
cli
push
stc
je
sti
adc
add
shlb
mov
dec
mov
rolb
cmpl
rclb
sahf
aas
gs
loop
mov
imul
lods
ret
pop
cmpsl
mov
jg
mov
lods
out
mov
and
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
