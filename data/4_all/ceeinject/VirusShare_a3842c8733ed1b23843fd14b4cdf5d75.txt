call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
aam
sahf
ja
pop
mov
push
into
addr16
jae
arpl
mov
dec
loop
sbb
jle
cltd
daa
sahf
aaa
sahf
pop
mov
ja
inc
jns
cmpsl
push
mov
cld
xchg
dec
leave
pop
imull
jle
xchg
addl
aas
testb
push
cmpsl
adc
in
mov
xchg
sbb
arpl
jb
push
pop
xchg
cmc
sub
dec
out
sarb
mov
pushf
mov
hlt
scas
jae
call
push
mov
loope
sarl
repnz
add
outsb
out
jl
orb
or
cmpsb
loope
jle
shrl
sbb
les
mov
aaa
dec
add
inc
push
xchg
fidivrl
and
js,pn
xchg
lret
repnz
stos
outsb
icebp
popa
lret
lret
push
push
jbe
xchg
stos
push
test
loopne
addr16
pop
loop
xchg
xchg
fcomps
jae
push
test
aaa
aad
icebp
hlt
loope
rcll
std
mov
jle
dec
stos
sahf
pop
scas
jae
pop
fisubs
ja
inc
out
pop
cmpsl
push
pop
test
stos
push
fildl
outsb
fbld
std
daa
sti
pop
lret
imul
stos
ret
in
xor
pop
and
and
sbb
lret
je
jnp
xor
mov
ret
dec
cmpsl
sub
jle
out
lods
xlat
lret
imul
out
inc
push
push
cmpsl
push
mov
xchg
xchg
dec
out
imull
jle
mov
sahf
aaa
scas
pop
mov
ja
inc
push
push
cmpsl
push
mov
xchg
xchg
dec
out
imull
jle
mov
pop
popa
idivl
stc
loope
bnd
out
cmpsb
push
rclb
or
repnz
dec
arpl
cwtl
bound
pop
das
popa
cmp
hlt
inc
sub
dec
lock
xor
inc
xchg
mov
fldenv
mov
xchg
popf
mov
mov
push
ror
divb
xor
cmp
fisttpll
imul
testb
or
addr16
pop
and
stc
out
and
pop
sub
and
mov
xor
ja
pop
lock
push
iret
mov
dec
xlat
in
xchg
mov
xor
mov
gs
sti
jo
shlb
int3
mov
inc
mov
fwait
stos
pop
std
std
rolb
sub
jb
dec
mov
inc
and
add
or
call
push
add
mov
cmp
cwtl
fsubrl
push
daa
sub
xlat
outsb
push
out
scas
int3
mov
das
mov
xchg
es
sub
sbb
pushf
jbe
mov
mov
xchg
mov
mov
cs
insb
mov
inc
pop
push
xor
dec
xor
subb
fdivrp
filds
mov
and
rol
jp
gs
insb
aad
xorl
xlat
out
fldl
iret
sbb
mov
sahf
out
lods
mov
test
jmp
mov
aam
cmc
pop
cld
dec
add
in
out
faddp
hlt
mov
js
lret
fists
sahf
addr16
and
push
loop
jecxz
aad
mov
sub
je
jno
dec
fistps
mov
pop
mov
cli
dec
push
mov
fwait
call
mov
int3
mov
fisubl
dec
je
dec
mov
add
std
xchg
adcb
ss
pop
jb
test
lcall
sbb
pusha
pushf
xor
insl
out
add
enter
pushf
in
test
xor
int3
inc
xchg
or
dec
push
and
xor
enter
mov
ljmp
mov
leave
xor
fnstenv
mov
xchg
sub
fcompl
adc
inc
adc
insb
xlat
je
adc
jl
mov
fcmovnb
mov
dec
inc
mulb
jg
out
test
enter
cmp
neg
inc
cmp
fildll
fwait
or
and
cmp
push
dec
sbb
notb
hlt
outsl
push
mov
mov
lret
push
xchg
mov
push
gs
pushf
mov
lcall
repz
mov
popf
out
jnp
pushf
test
jo
push
push
shr
movsb
jmp
cmp
sbb
fldt
lret
sbb
add
and
scas
cmp
cmp
jge
pop
jbe
push
ja
mov
data16
arpl
pop
lret
xor
mov
loopne
pop
inc
aam
jne
loope
das
xor
mov
push
sarb
pop
xchg
mov
rcr
dec
ret
push
fwait
mov
push
push
int3
loope
xor
pop
pop
lods
mov
leave
sub
pop
adc
inc
cmp
inc
movsb
jmp
pushf
add
hlt
add
lea
cmp
int3
xor
pop
int3
inc
xor
and
cmc
and
lcall
rolb
inc
add
insl
cmp
iret
inc
or
or
insb
dec
mov
jmp
lods
pop
sbb
lods
jbe
ret
lahf
inc
sub
push
inc
pop
jnp
and
gs
and
xchg
add
bound
movsb
out
or
sbb
movsb
lahf
push
mov
push
cmp
fsubl
mov
mov
imul
sub
xor
jge
out
mov
mov
popf
iret
dec
push
mov
cmp
movsl
ret
movsl
lret
push
ja
or
adc
iret
and
cmc
out
addr16
mov
ret
or
int
mov
loopne
mul
in
jbe
add
jg
lock
mov
dec
mov
imul
iret
sub
das
pop
lods
mov
cmp
sub
fimuls
shlb
mov
sub
xchg
or
stc
stos
out
daa
in
mov
cmp
data16
call
or
inc
cmp
cwtl
cmp
in
out
sbbl
pop
pop
pop
sbb
dec
sub
popf
imul
fs
adcb
or
aad
jp
iret
push
leave
hlt
or
sbb
repnz
ss
add
push
movsl
cmpsl
jl,pn
or
cli
xor
mov
cmp
fadds
xchg
mov
stos
jl
arpl
push
or
cltd
cs
rcrb
push
fidivl
jmp
pop
loop
mov
cmp
or
lcall
ret
xchg
loopne
aad
mov
push
dec
inc
inc
lret
jno
mov
dec
push
nop
fwait
cli
sahf
into
adcb
lds
inc
mov
test
mov
lods
popa
and
in
lret
ss
enter
loopne
out
mov
repnz
pop
push
ja
jo
xor
mov
fcmovnbe
xchg
mov
push
fidivl
mov
mov
mov
xor
dec
imul
mov
rcll
xor
popa
pop
test
xchg
inc
mov
pushf
loop
scas
addb
adc
mov
addr16
enter
cs
lahf
stos
andb
std
movsb
rcl
cmp
fstpt
pop
dec
bound
loopne,pt
mov
cltd
jp
test
jle
ds
sti
sub
sub
xlat
dec
cmp
out
dec
scas
movsl
subb
lds
in
repz
pushf
out
jg
jmp
shrb
inc
and
lret
pop
addb
mov
lock
mov
push
mov
cmp
jns
stc
and
int3
xor
pop
inc
icebp
test
sahf
mov
ficoml
shl
roll
pop
sub
cmp
push
adc
int
sub
cmp
jns
jns
adc
mov
pop
movsb
jg
xor
inc
sub
fildll
adc
loope
pusha
fs
add
mov
dec
outsb
cmp
mov
std
ja
int3
ds
scas
out
add
cmp
push
lods
adc
les
lods
xor
repz
inc
loope
sbb
push
data16
je
sbb
add
sahf
lret
mov
jl
fsubrl
xchg
outsb
or
out
sbb
mull
pop
js
cmp
mov
or
fisubl
mov
movsb
aad
jo
imul
sahf
or
jo
mov
pop
inc
sub
stc
pop
push
xchg
aas
cmc
adc
xchg
adc
push
inc
mov
out
fldcw
jmp
cmpsb
scas
pop
sti
mov
lret
adc
pop
pop
repnz
shlb
bnd
je
movsl
xor
mov
or
lcall
loop
push
gs
and
ja
das
inc
roll
xchg
sub
insb
into
test
out
sar
pop
inc
and
mov
pusha
mov
xor
add
aam
lret
fstpl
sub
jbe
cmp
and
cmp
push
lods
pop
outsb
sub
jns
mov
out
ficomps
pop
mov
aam
movsl
adc
push
inc
insb
push
mov
xchg
mov
fs
mov
inc
and
xlat
jmp
xor
pop
add
jne
ljmp
outsb
ret
or
or
cld
pusha
negb
inc
sbb
sub
sub
inc
dec
loopne
inc
jle
test
data16
add
cmp
or
push
stc
and
mov
mov
dec
cmpsb
mov
xchg
mov
gs
cmpb
jb
adc
sti
push
jge
xchg
in
xchg
mov
and
ret
in
pushf
mov
or
pop
mov
fmull
mov
xor
pop
mov
loope
in
xchg
sti
ss
mov
hlt
jl
xor
jl
inc
push
maxps
sub
repnz
pusha
mov
dec
lds
andps
push
je
mov
sbb
lret
frstor
dec
rorl
mov
insb
cmp
push
loopne
loopne
pop
clc
fimuls
or
push
arpl
fsubrs
xor
add
xor
and
es
call
mov
test
pushf
pop
es
cmp
push
aas
add
pop
shlb
jle
mov
jns
push
sub
and
scas
cmp
fstpt
inc
decl
pop
lock
mov
push
add
adc
pop
push
mov
and
sbb
sub
in
pop
insb
movb
lahf
cmp
xor
pushf
mov
ret
shll
std
xchg
js
out
mov
push
aas
jmp
inc
js
mov
jl
out
xorl
cltd
rcll
xor
ss
jns
lea
push
outsl
pop
out
push
xor
lods
xor
test
ds
addr16
in
pop
popf
dec
les
mov
clc
ljmp
clc
ss
jg
mov
sub
stos
or
daa
loope
dec
jp
cmp
adc
mov
mov
xor
xor
daa
jo
outsl
dec
xor
fisttps
mov
xor
addr16
and
or
dec
sbb
sub
adc
xchg
jg
ret
mov
lds
fildl
outsl
sbb
lods
jmp
test
fistpl
nop
idivl
push
dec
push
inc
je
add
mov
jae
sbb
repnz
out
pop
or
movsl
jns
sub
int
pop
in
inc
sbb
int3
xchg
imul
int
push
pop
cmpsb
fldenv
dec
stc
push
adc
fstl
sbb
out
or
stos
in
gs
jp
fstps
adc
mov
stc
imul
imul
sub
in
fwait
mov
data16
in
int
dec
push
test
out
xor
ret
push
jge
dec
jmp
inc
icebp
shrb
adc
push
sbb
scas
sti
fstl
push
mov
mov
int
loope
mov
sti
dec
pop
sub
mov
jne
pop
push
cmp
jg
lcall
shlb
mov
rcl
cmpsb
pop
divl
mov
stos
or
aas
out
lock
mov
cld
das
adc
cmp
cli
xor
xchg
test
sub
sbb
int
inc
push
dec
fs
xor
xchg
in
push
cli
rcrl
lea
or
rcrl
mov
xor
push
jns
push
sahf
pop
dec
mov
mov
inc
aad
enter
popa
andb
bound
lods
lahf
hlt
les
dec
fidivs
add
addl
push
push
ss
inc
and
add
mov
mov
cmp
adc
pop
cltd
mov
push
js
jae
jnp
jb
mov
mov
repz
std
sub
push
inc
sub
mov
insl
push
jl
fnsave
cmp
movsb
mov
mov
dec
repnz
xchg
outsb
inc
inc
add
ja
clc
add
leave
pop
pusha
inc
and
aam
fsts
jae
add
pop
xor
scas
out
mov
or
push
add
dec
pop
pop
aad
jns
add
pushf
sbb
cmp
mov
rcll
in
sbb
xchg
ret
and
push
xor
bound
sub
mov
xchg
pop
sbb
xor
jmp
test
pop
jmp
rol
mov
mov
es
out
jns
inc
aam
sbb
mov
test
cmpsb
mov
dec
aam
mov
outsl
lret
into
loopne
or
mov
scas
jmp
mov
or
inc
cmpsb
mov
fnstsw
push
into
pop
in
call
repnz
mov
lret
lahf
lds
jno
mov
int
or
pop
fistl
movsl
in
cmp
std
or
cli
cmovl
arpl
mov
mov
mov
and
jl
cmpsl
mov
lods
movl
outsl
fldcw
shr
xchg
insl
loop
dec
into
sbb
mov
and
rcrb
loopne
pop
insl
mov
ss
or
push
or
sub
in
add
sub
fsubr
pop
test
ds
es
add
push
or
pop
dec
movsl
inc
pusha
fnstcw
mov
jmp
push
pop
dec
push
aad
mull
aam
loopne
cwtl
mov
or
lds
mov
addr16
in
push
push
cmpsb
ja
or
icebp
jl
daa
inc
mov
imul
cmpsb
sti
ss
inc
repz
test
enter
ds
jecxz
mov
dec
aam
fs
mov
cmp
andb
rorl
dec
sub
mov
in
test
and
push
mov
add
xor
orb
push
cmp
lds
sahf
cmc
iret
fimuls
fcmovne
out
adc
sbb
mov
clc
aam
repnz
jbe
ret
jns
cltd
inc
cltd
inc
stc
mov
pop
inc
push
test
xor
cmp
mov
lret
lods
or
insb
jno
cmp
iret
test
add
fistpl
mov
outsb
push
sbb
xchg
cmp
in
dec
xchg
xor
dec
movsb
dec
iret
aad
popa
xchg
adc
dec
mov
inc
bswap
pop
inc
mov
loop
pop
mov
je
or
cmp
testl
out
aad
int3
adc
mov
add
mov
popf
push
aad
int
sbb
dec
ret
stos
and
dec
jp
xchg
dec
sbb
aaa
xchg
mov
push
sub
fs
scas
xor
das
push
add
jg
pop
out
dec
mov
adc
dec
cmp
getsec
push
sbb
dec
adc
hlt
push
or
int
or
pushl
ret
or
xor
inc
mov
mov
mov
lods
pop
cmp
scas
inc
or
test
xor
xor
lahf
push
popl
pop
xor
mov
adc
std
and
ss
faddl
int3
sub
lret
xor
int
lock
mov
cs
leave
lahf
in
movsb
mov
inc
mov
mov
mov
pop
dec
les
xchg
and
jb
js
add
lahf
mov
mov
jbe
or
lds
frstor
or
out
adc
add
fistpl
mov
bound
xchg
push
incb
xchg
inc
pushf
sub
dec
loop
mov
mov
or
orb
pop
sti
data16
cmpsb
push
mov
int3
arpl
outsb
add
repz
lods
repz
movsb
outsl
pop
mov
pop
pop
jnp
shlb
loopne
jns
mov
adc
fldl
call
jns
in
cmpsl
loopne
mov
and
push
mov
push
icebp
fmull
or
les
sbb
add
movsb
push
insb
sub
xchg
out
sub
stc
inc
dec
adc
ret
or
cmp
xor
jecxz
sub
das
mov
inc
rolb
aad
add
out
pop
scas
outsl
stos
lahf
sbb
dec
out
push
divb
enter
vpsubusb
out
nop
push
dec
add
push
sub
sub
and
add
jo
hlt
mov
imul
mov
ret
inc
push
mov
cmp
ds
fidivl
adc
or
fisubrl
dec
shll
iret
insb
pusha
jecxz
jmp
into
addr16
or
cmp
jne
inc
movsl
jp
cmp
fdivl
xchg
sahf
push
es
icebp
push
mov
loopne
jp
mov
sarl
cs
inc
xor
imul
iret
cltd
aas
lea
fldl
push
xchg
mov
icebp
mov
lahf
fmuls
rcrb
aam
aam
inc
adc
outsb
subb
adc
and
cmp
inc
pop
pop
xchg
insl
icebp
lods
out
mov
mov
mov
cmp
in
lret
insl
sub
or
push
stos
sti
mov
lods
mov
sub
hlt
mov
shrl
sahf
fwait
pop
or
out
pop
adc
xor
lods
fsubrl
xchg
sbb
jge
adc
fdivr
int
ret
cmp
cmpl
lds
mov
gs
stos
jle
adc
int
out
sti
xor
lret
xor
gs
lcall
mov
add
inc
jecxz
mov
xchg
outsb
fcompl
push
outsb
imul
xor
mov
lods
sub
dec
sbb
mov
lret
js
push
lods
loope
inc
dec
dec
imul
fistpl
inc
or
push
jp
cmp
xlat
stos
pop
shll
out
or
js
rcrl
aas
cmp
sub
aam
jae
shrb
fsubrs
add
lahf
pop
jecxz
arpl
xor
fwait
adc
cltd
in
jle
nop
push
repnz
mov
aad
pop
les
cmp
jbe
std
jmp
loop
xor
jno
jl
testl
sbb
int3
and
xor
xchg
jmp
divb
lcall
lds
jp
adc
mov
lahf
and
mov
jnp
dec
int
or
loope
adc
sbb
push
iret
stos
cld
mov
add
pop
nop
rcrb
rol
dec
aam
sub
dec
dec
lahf
pop
and
rol
jmp
dec
sbb
xchg
mov
push
pop
jmp
xchg
aaa
cld
aas
inc
ljmp
rcrl
out
bound
ret
shll
test
mov
fs
test
daa
mov
mov
mov
repnz
int3
push
jb
insb
mov
addl
mov
inc
outsb
or
xor
scas
mov
clc
xlat
xchg
mov
mov
iret
int
adc
sbb
icebp
sti
push
orl
or
jecxz
push
mov
mov
or
std
adc
lds
mov
aaa
mov
dec
pop
clc
and
mov
les
add
jns
push
mov
jecxz
out
cmc
std
or
xchg
clc
dec
dec
sbb
into
aam
aad
jmp
rcrb
lahf
bnd
push
mov
mov
mov
cli
int3
dec
out
fsubs
xchg
mov
inc
out
inc
and
dec
mov
cltd
pop
inc
push
mov
aam
dec
mov
repz
adc
pusha
incw
jl
pop
cmp
push
add
jae
test
incb
es
xor
outsb
push
mov
and
rolb
ss
xchg
mov
fstps
cmp
imul
cmpb
pop
cmp
cmp
sbb
data16
cmp
push
and
push
out
in
in
in
lock
xor
into
movsb
lret
push
and
cli
mov
jno
aaa
push
dec
aam
ds
mov
in
fwait
inc
xchg
fsubrs
subb
mov
popa
out
push
jge
cmp
pop
sub
adc
xor
add
mov
test
cmp
mov
sbb
nop
out
popf
inc
pop
out
std
lds
gs
jmp
aaa
lock
push
imul
rcll
xchg
xor
icebp
pop
pop
push
jo
popa
outsb
dec
int3
jl
cmp
in
xor
pop
push
adc
cli
xor
adc
push
loopne
and
adc
icebp
xchg
push
stos
add
jl
or
sub
stos
cmpsb
push
int3
dec
push
add
das
shrb
mov
adc
mov
inc
enter
pop
sub
cmp
mov
sbb
movsb
dec
dec
sbb
out
repnz
add
leave
xchg
shl
pop
adc
inc
sub
invd
pusha
sbb
and
jp
xor
and
ljmp
and
shlb
insl
jne
outsb
int
sub
lds
pop
insb
mov
or
fimull
scas
ret
jl
mov
ret
bound
sub
push
or
sbb
pop
unpcklps
lea
adc
mov
insl
imul
lret
adc
jbe
hlt
sbb
mov
and
and
or
jecxz
and
push
sbbl
out
adc
adc
clc
movsl
pop
xchg
inc
ficomps
cmp
mov
sub
cmp
xchg
pop
jbe
inc
cmp
cmp
pop
icebp
sbb
lcall
out
ss
or
inc
mov
scas
add
addr16
in
std
lcall
movsl
lods
sahf
add
roll
mov
mov
lret
mov
mov
inc
loop
jge
push
and
pop
lea
hlt
nop
insb
or
call
int3
popf
sub
dec
mov
lcall
cmpsl
push
cmp
into
mov
add
ja
inc
push
push
cmpsl
push
mov
xchg
xchg
dec
out
imull
jle
mov
sahf
aaa
scas
pop
mov
ja
inc
push
push
cmpsl
push
mov
xchg
xchg
dec
out
imull
jle
mov
sahf
cmp
ficomps
out
inc
push
push
cmpsb
push
mov
xchg
sahf
dec
jecxz
imull
dec
xor
jecxz
push
into
fidivs
jle
icebp
pop
loope
test
xchg
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
cmpsl
push
xchg
xchg
incb
jbe
mov
xchg
pop
mov
cmpsb
ja
addr16
push
out
divb
xchg
testl
add
mov
xchg
pop
cmpsb
pop
mov
mov
aam
out
divb
xchg
negl
dec
xlat
jle
insb
aaa
xchg
ja
adc
adc
cs
ret
dec
xchg
inc
out
push
clc
mov
cltd
lcall
sbb
ds
pop
mov
push
pop
pushf
push
ss
sub
stos
push
and
push
push
dec
lcall
mov
push
cwtl
sub
int3
orb
in
outsl
aam
inc
mov
pop
sub
flds
inc
mov
repz
data16
push
daa
cli
addr16
scas
sbb
out
andl
adc
jp
or
dec
push
ss
imul
mov
jae
stc
pop
bound
int3
insb
repz
xlat
es
cld
out
insl
dec
xchg
out
xor
nop
in
lock
cmpsl
push
xchg
aas
xchg
testl
outsl
aaa
xchg
mov
mov
addr16
push
cld
inc
not
push
les
rcll
mov
mov
jmp
inc
shl
mov
aaa
lcall
pop
xchg
inc
lods
sbb
repnz
repz
pop
mov
mov
subl
jae
jne
push
xlat
data16
jbe
xchg
xchg
pop
cmpsb
pop
mov
addr16
push
out
divb
xchg
testl
jbe
xchg
xchg
pop
cmpsb
pop
mov
addr16
push
out
divb
mov
adc
imul
push
adc
pop
jo
out
jle
test
popf
pop
jecxz
lahf
nop
iret
test
jp
enter
inc
xchg
mov
mov
popa
push
adc
orl
test
fxch
push
fcom
out
mov
dec
nop
sbb
inc
nop
negl
push
push
inc
cmp
lcall
loop
dec
mov
jb
sbb
or
loope
and
mov
test
adc
aaa
into
rclb
push
sub
dec
mov
fidivrs
xchg
mov
fnstenv
flds
push
das
push
fdivrl
test
sub
add
stos
xchg
dec
add
add
loop
jle
xlat
outsb
inc
cmp
cmp
clc
sub
or
daa
movsl
dec
cmp
push
test
dec
xchg
pop
mov
subb
pop
xorl
jg
in
stos
fdivl
les
add
xor
or
clc
das
inc
cmp
cmp
mov
daa
hlt
add
decl
add
test
push
sahf
fimuls
sti
add
test
push
aam
loop
adc
ss
hlt
sub
jns
sbb
nop
mov
rcrl
xchg
enter
mov
outsl
ds
cs
imul
call
mov
pusha
sbb
add
sub
mov
out
push
pop
jle
sub
cwtl
lock
add
inc
movsl
cmp
cmp
bnd
add
push
test
popf
test
loop,pt
call
icebp
fwait
pop
outsl
sbb
xchg
enter
mov
and
je
pop
add
dec
lock
pop
nop
aas
adcb
daa
cltd
pop
loopne
add
bound
pop
cmp
jle
aam
andw
sub
jl
int
jb
imul
pop
imulb
js
push
jg
das
jbe
insl
or
push
enter
inc
int3
xor
and
lea
mov
call
fs
xchg
test
mov
mov
inc
mov
and
test
cmp
cmp
mov
and
pop
cltd
enter
pop
jbe
xor
pusha
or
add
or
inc
repz
aam
testb
lahf
mov
into
push
insl
push
dec
add
inc
jecxz
push
push
cwtl
sub
aad
das
sbb
mov
sti
dec
push
and
cli
sub
or
fsubrs
push
rol
cmp
fidivrl
test
sub
aaa
test
inc
push
xchg
clc
cmpsb
lea
lret
inc
loop
aad
mov
mov
nop
mov
imul
and
ret
xor
je
xchg
push
leave
pop
adc
rorl
mov
xchg
pop
cli
xor
pop
movsl
ja
shlb
fstpl
push
dec
loope
sub
cmp
xor
inc
mov
fcmovb
clc
and
mov
clc
aas
mov
lea
mov
add
pop
pusha
out
jb
add
xchg
fs
leave
pop
jle
movsl
pop
popf
xchg
xchg
inc
add
test
and
ja
stc
cwtl
dec
sub
jg
cmp
mov
aaa
mov
jnp
faddl
test
mov
push
mov
xchg
int
in
pop
gs
pop
xchg
push
and
inc
xor
lret
jo
pop
xchg
inc
xchg
mov
push
cltd
xchg
loopne
pop
inc
sub
fldt
rclb
cmp
jns
fdivl
loop
pop
push
daa
dec
fbstp
or
ffreep
sbb
mov
icebp
push
push
xor
push
orb
inc
mov
fadds
xchg
lds
pop
das
adcl
jg
pop
xlat
fmuls
xor
loope
lods
mov
sti
cmp
dec
jnp
and
fcoml
mov
xchg
lods
fwait
sub
in
fwait
test
mov
mov
mov
ds
test
xor
inc
or
sbb
xchg
xchg
les
pushf
in
ss
ss
daa
pop
adc
in
cmp
in
push
cmpsb
inc
sub
int3
xchg
aas
shrb
icebp
enter
lahf
push
xor
mov
jmp
pop
inc
mov
test
ss
cmpl
dec
mov
fistpll
inc
adc
stos
cmp
xor
jnp
enter
push
pop
outsb
das
mov
xor
xchg
mov
jecxz
mov
imul
pop
pushl
add
mov
cltd
push
out
xlat
dec
mov
inc
xorb
aam
pop
loopne
enter
out
dec
and
dec
dec
outsl
test
cmp
adc
jle
sbb
mov
clc
addr16
sbb
imul
xchg
or
and
or
popa
xor
or
sbb
push
add
push
cmp
jo
dec
stos
in
dec
ficompl
test
or
and
outsl
sbb
cmpsl
gs
or
popa
cld
ret
lret
lods
lds
enter
daa
mov
jg
xchg
xlat
add
int
sbb
mov
mov
add
xor
push
mov
lea
scas
sub
out
dec
icebp
rorb
cmp
sar
add
les
insb
sbb
pop
stc
or
cmp
nop
pop
fisubs
repnz
test
std
and
shlb
sub
xchg
sti
out
shlb
pop
adc
fsubrp
jecxz
pop
lret
push
and
out
xor
in
arpl
imul
jecxz
lret
js
jecxz
scas
cmp
or
sub
push
js
jne
add
lods
mov
push
mov
jp
mov
lret
iret
rcll
pop
into
lret
or
mov
sahf
call
jnp
cmpb
loop
cmpsl
mov
dec
jnp
xchg
or
int
shlb
mov
and
jmp
ljmp
fwait
loope
or
cwtl
add
jnp
sub
adc
ljmp
jbe
mov
scas
out
dec
dec
cmpsl
pop
jns
or
jo
cwtl
mov
add
mov
pop
addr16
ret
add
fdivrs
pushf
or
jmp
sbb
sbb
add
jmp
enter
adc
mov
iret
frstor
xchg
out
inc
xchg
jge
jmp
nop
inc
mov
push
addr16
andb
fsubrs
mov
clc
fiaddl
lret
sahf
jbe
mov
sbb
xchg
pop
gs
daa
mov
xchg
lea
mov
xor
icebp
jg
aad
std
dec
and
xor
int3
lea
and
jb
jb
ss
jno
mov
stos
cli
mov
xchg
mov
mov
sub
or
fs
jns
clc
aaa
outsl
ret
mov
xor
out
push
stc
stc
movl
sbb
test
and
jl
dec
sbb
sub
cmpsb
and
fwait
movsb
or
test
jae
ja
and
pop
xchg
ss
dec
mov
mov
or
adc
pop
mov
mov
push
ja
adc
mov
notb
sbb
testl
mov
sbb
mov
add
cs
and
mov
in
jle
int
push
cmp
mov
out
hlt
pop
cli
mov
push
inc
push
outsb
push
lods
insb
es
fistl
mov
repz
hlt
in
ret
adc
or
pusha
loope
test
cmpl
loopne
and
pop
add
movsl
out
int
push
mov
pop
or
mov
add
outsb
cmc
sbb
pop
dec
imul
repnz
push
xchg
nop
jo
mov
sub
dec
cmp
push
adc
dec
inc
mov
cli
scas
mov
fdivs
mov
out
or
cmpsl
xchg
pop
add
mov
leave
mov
ljmp
mov
inc
popf
stos
cmp
cmp
stos
sbb
mov
daa
aam
sbb
mov
vunpckhps
in
movsb
push
fisttpll
test
push
scas
and
push
fsubl
lods
push
in
sahf
push
addr16
sbb
jns
scas
fbld
sub
mov
repnz
in
test
xor
sarl
jmp
adc
mov
mov
inc
xchg
gs
jo
sbb
fldt
ret
test
cmp
aaa
test
pop
imul
out
or
clc
mov
sub
mov
sub
int3
cltd
popa
iret
dec
in
sub
jmp
push
dec
jns
add
mov
fistl
nop
jl
int3
in
mov
mov
iret
out
cmp
cmp
lds
push
sbb
dec
test
dec
pop
mov
shrb
fs
sarb
lds
fsub
bound
sti
or
hlt
clc
bound
arpl
or
dec
fdivrs
loope
iret
jnp
push
sbb
jb
shlb
inc
jp
rcrb
test
sub
outsb
jb
cltd
shll
add
cmp
icebp
mov
test
ret
mov
insb
enter
aam
loope
cmp
pop
es
cmp
dec
dec
sub
pop
mov
sbb
mov
pop
cltd
jns
xor
inc
popf
stos
cld
cmp
in
bound
notl
cmp
pop
adc
leave
jns
daa
ljmp
xchg
iret
mov
inc
and
mov
push
push
popf
cs
dec
ljmp
pop
sti
and
jbe
dec
mov
and
iret
jl
push
icebp
mov
sbb
das
cmp
test
add
push
pop
jp
popf
jnp
sub
loope
or
add
popa
std
imul
popa
sub
mov
inc
cmpxchg
scas
and
add
mov
sbb
out
pop
into
and
popa
leave
xchg
pop
jnp
xchg
aam
add
insb
lods
or
fisubrl
fsubrs
lods
rol
pop
adc
and
mov
pop
adc
cmp
sahf
movsl
mov
sub
push
mov
outsb
and
aas
call
jge
inc
int3
addr16
imul
dec
loop
jge
jp
out
in
dec
mov
aas
sub
pop
aad
xchg
push
bound
and
xlat
loope
pop
inc
cmpsb
pop
jbe
in
popa
rcrb
mov
xchg
adc
pusha
out
xchg
or
int3
push
xchg
jl
mov
cmp
repnz
adc
jecxz
jo
lock
loope,pt
jb
sahf
rorb
jecxz
add
nop
lahf
lods
or
pushf
push
push
cmpsl
inc
pop
mov
out
mov
cmp
call
subl
xchg
mov
iret
push
in
jl
adc
mov
fs
movsl
inc
ds
mov
pop
mov
xor
sbb
jae
js
push
and
leave
in
in
mov
mov
cmpsl
sarl
pushf
shll
xchg
pusha
scas
push
inc
jp
inc
and
das
icebp
sbb
jns
jbe
adc
pop
add
xlat
inc
or
mov
xchg
mov
mov
std
mov
and
enter
xchg
jno
je
lock
test
pop
pop
mov
clc
shlb
or
outsl
and
leave
mov
mov
iret
popf
xadd
push
scas
imull
sbb
lea
popa
sbb
mov
and
std
and
or
adc
cs
xorl
push
arpl
call
inc
xor
add
xor
sbb
inc
mov
xor
adc
movb
imul
gs
mov
push
fucomi
loopne
jae
scas
jo
rorb
xlat
dec
add
into
insl
rorl
inc
cli
push
inc
adc
shrl
in
xor
push
test
fidivl
loope
out
filds
push
rclb
cmc
andb
idiv
cs
lahf
popa
cmp
mov
call
clc
in
jle
enter
sbb
fstpt
lahf
xchg
mov
mov
iret
jae
sub
out
gs
fwait
push
stc
in
cwtl
mov
les
mov
enter
sub
mov
lods
lock
cmc
cmp
sbb
mov
sbb
mov
cmp
xor
test
lods
lahf
divb
insl
cmpsl
sti
mov
aaa
ret
mov
shll
dec
jne
mov
sbb
xchg
mov
push
ljmp
mov
ret
aad
ja
or
mov
int
rclb
xor
mov
mov
sahf
mov
ljmp
icebp
jl
xlat
js
jmp
lock
push
loop
or
std
lock
mov
mov
pop
mov
mov
push
adc
mov
xor
mov
mov
pop
ljmp
jbe
lcall
and
mov
xchg
or
outsl
jl
cmp
mov
push
stos
xor
and
mov
test
lahf
popf
adc
xor
sbb
jae
adc
push
mov
sbb
insl
sub
jg
in
add
cld
add
sbb
popf
ret
idivb
out
inc
xor
xor
iret
xchg
xor
repnz
jb
cltd
jo
dec
or
inc
ja
enter
pusha
imulw
and
dec
cs
sub
jno
testb
xlat
fdivrl
clc
das
push
push
pusha
in
les
lahf
dec
inc
cmp
repnz
sar
inc
push
dec
imul
pop
icebp
mov
jp
loopne
pop
insb
out
adc
push
outsl
arpl
jae
rclb
popf
jle
insl
ds
mov
add
stos
jnp
fstpl
push
xchg
sub
push
dec
sbb
nop
lahf
sbb
arpl
adc
data16
imul
mul
loopne
cmc
scas
add
das
add
jge
std
lock
lods
test
sbb
and
pop
test
lods
mov
popf
push
add
int3
push
adc
adc
add
mov
adc
sub
mov
lds
pushf
lods
push
xchg
iret
iret
push
pushf
sub
pop
lock
jae,pn
jmp
xchg
push
stos
add
push
sub
roll
xchg
add
cmp
push
addr16
xchg
adc
jp
call
ja
inc
out
je
ds
call
cmpsb
jb
mov
fbstp
lret
fs
inc
pop
xchg
enter
cld
jne
xor
jge
cmp
loop
jne
add
push
xor
nop
aad
pushf
in
or
das
xor
add
scas
jns
pop
add
cmpsb
repz
or
xor
out
xor
bound
std
inc
fdivl
icebp
dec
sbb
mov
mov
dec
dec
adc
jecxz
inc
cmp
push
push
adc
mov
jmp
in
fimull
bound
sbb
jbe
cli
insl
cmc
pop
jbe
mov
and
xor
mov
ja
sub
xchg
pop
adcl
ss
insl
dec
adc
dec
or
cmpsl
lds
shl
test
arpl
sub
xchg
dec
jnp
xor
mov
hlt
mov
movl
xchg
std
imul
cmp
xchg
jp
mov
scas
push
shrb
and
gs
fisubs
push
ror
jo
xor
mov
xchg
pop
jae
outsb
lods
mov
movsb
xchg
int
cmp
pop
pop
decl
rorb
imul
rcr
mov
pushf
movsb
inc
icebp
jns
jle,pn
or
je
mov
xchg
in
xor
bound
cwtl
mov
fwait
sbb
mov
or
adc
pop
sti
lds
dec
adc
pop
jge
mov
cmp
and
xor
pop
add
pop
inc
shlb
in
xor
popf
xlat
sub
addr16
xchg
lahf
out
loop
adcl
xchg
pop
cmp
mov
jg
out
shll
in
cmpsb
mov
lahf
mov
xorb
dec
adc
std
xchg
push
cmp
sub
test
cmp
loop
jnp
mov
cmp
inc
xchg
std
pop
shlb
or
pop
loopne
movsb
icebp
aam
into
and
mov
xor
out
sub
or
cwtl
mov
ja
lret
hlt
scas
or
pop
xchg
sub
jecxz
jl
push
jns
loop
cld
sub
add
call
and
xlat
sbb
push
adc
cmc
push
inc
shr
push
sub
sub
jne
push
sbb
push
inc
int3
pop
jmp
in
dec
pusha
int3
push
mov
scas
ja
imul
inc
mov
and
aas
pop
jmp
xlat
jecxz
mov
and
push
imul
adc
sub
or
popf
lods
movsb
cmp
pop
sub
and
in
pop
xchg
xchg
jnp
sbb
xor
dec
fwait
dec
dec
call
lahf
sub
cmp
popa
aam
out
inc
and
pop
xor
pop
inc
mov
lret
mov
adc
daa
jo
stos
mov
dec
xor
mov
push
xchg
mov
xchg
shl
push
xor
xor
or
in
insl
outsb
mov
xchg
pop
or
mov
add
stos
lods
cmp
add
mov
pusha
jno
fcmovb
push
and
xchg
sarl
xor
push
adc
sbb
mov
sbb
xor
inc
inc
mov
movsb
fisttps
jecxz
dec
enter
mov
add
fiaddl
xor
ja
pop
leave
adc
faddl
scas
or
imul
jmp
mov
in
lret
adc
mov
mov
jl
add
mov
cmp
xchg
ljmp
shll
loopne
std
push
ror
scas
sub
cmp
cltd
lret
mov
fistps
sbb
ret
mov
popa
mov
cmpb
or
rol
and
jbe
pop
dec
ljmp
jg
pop
mov
mov
inc
or
cmp
cmp
ficomps
add
or
pop
cmpsl
xchg
mov
sub
stos
mov
ljmp
mov
sub
jmp
pushl
mov
sub
into
shrb
ja
in
push
jae
or
cmc
pop
rol
call
andb
push
mov
xchg
mov
mov
and
rorl
and
aam
jp
loope
push
ss
scas
sub
pop
mov
mov
daa
leave
cmp
jne
lods
sbb
mov
jp
add
mov
and
lea
xor
out
dec
or
sahf
repnz
adcl
int
sbb
jns
and
lcall
sti
xor
dec
jecxz
adc
repnz
fldt
jp
push
jne
call
add
or
cmp
das
enter
imul
scas
inc
dec
not
hlt
mov
mov
add
xor
jno
stos
imul
scas
add
mov
mov
xchg
mov
into
mov
jl
push
add
or
xchg
and
cmp
push
jnp
cmp
ds
inc
xchg
sbb
inc
jo
scas
jmp
ljmp
cmc
or
push
add
cwtl
lods
out
fisubrl
mov
and
mov
adc
imul
ret
mov
and
or
pop
fcom
dec
inc
mov
jecxz
or
cmp
test
xor
cmpsl
push
pop
scas
aas
dec
or
push
sbb
mov
add
repz
xchg
push
add
jb
lds
add
cld
dec
stc
xor
jmp
add
inc
out
lret
inc
inc
aas
add
out
inc
inc
in
mov
lahf
mov
push
push
cmp
fcmovb
jb
sbb
pushf
mov
sub
xchg
mov
sarb
adc
out
pop
push
adc
sub
xor
pop
fists
dec
test
or
popf
sbb
cwtd
and
imul
push
sahf
push
sbbb
movsl
mov
xchg
cmp
mov
jnp
jnp
mov
in
and
test
mov
pusha
cwtl
cmp
jae
pop
insl
data16
in
mov
mov
add
mov
xchg
inc
adc
stos
pop
ds
mov
paddsw
xorl
fadd
fdivl
popa
jne
mov
mov
push
lods
mov
add
ret
imul
and
ret
popf
mov
mov
aad
jns
enter
mov
cmovp
push
je
or
sub
in
cltd
int3
push
scas
jge
mov
cmp
mov
ss
sub
in
outsb
xor
scas
test
jbe
fcoms
test
xchg
testl
jbe
xchg
xchg
pop
cmpsb
pop
mov
addr16
push
out
divb
xchg
testl
jbe
xchg
xchg
pop
cmpsb
pop
mov
addr16
push
out
divb
xchg
testl
jbe
xchg
xchg
pop
cmpsb
push
mov
addr16
push
loop
repnz
cmpsl
adc
inc
out
push
inc
mov
xchg
cmp
cmpsb
pop
roll
out
test
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lret
dec
fistpl
insl
sti
jge
inc
jmp
cmp
imul
std
or
cmp
jmp
sti
jge
or
mov
jnp
lret
loope
popf
sub
fistpl
insl
sti
jge
or
mov
incb
lahf
jnp
or
je
pop
ret
push
into
xchg
ds
jge
sub
inc
mov
cs
test
and
test
pop
lea
aas
loop
push
push
aad
xor
je
fwait
cwtl
push
and
fisubs
xchg
clc
test
jl
mov
fwait
dec
rcll
pop
mov
add
in
dec
fwait
imul
dec
sub
add
addl
sbb
inc
mov
and
lea
test
push
mov
or
fwait
xchg
sub
sbb
out
adc
stc
pop
fsubp
popf
jnp
cmp
enter
jge
cmp
es
stos
mov
xchg
into
outsb
lods
mov
pop
jmp
sti
jge
or
mov
jnp
or
cmp
mov
sbb
insl
xchg
jge
push
mov
fsubrl
add
dec
aam
repz
sub
jge
popa
ficoms
inc
jmp
movsb
imul
dec
shrb
pop
xchg
sbb
and
cmp
imul
std
or
cmp
jmp
sti
jge
or
mov
jnp
or
cmp
jbe
aam
jne
cltd
repnz
mov
push
push
push
push
sti
pop
xor
xchg
cmp
lds
jns
dec
push
xor
cmpsl
mov
jb
stos
inc
sbb
xchg
push
imul
jnp
aad
lret
outsb
cwtl
aaa
in
sbb
lret
xor
pushf
inc
push
adc
add
mov
aas
test
in
xor
lods
xor
adc
pop
jl
mov
pop
dec
jmp
aaa
cmp
jmp
jno
sub
loope
jl
out
cli
push
jl
fwait
or
push
cld
in
out
pop
inc
cld
fucomip
cltd
xor
cmc
bound
jo
cltd
clc
sub
adcl
add
shl
pop
xchg
pop
in
mov
lcall
leave
add
jns
xchg
fwait
pop
push
gs
jo
sbb
imul
lods
test
mov
push
popa
leave
cwtl
mov
jge
sarl
jb
in
pop
jmp
inc
cmc
xlat
sub
push
pop
in
sbb
add
cmpsl
mov
mov
jno
mov
loopne
bnd
outsl
shl
fs
ds
jae
mov
lds
mov
loope
daa
pop
inc
js
sbb
fwait
cmp
fists
dec
test
test
imull
inc
notb
gs
je
in
xchg
lret
xorb
je
cmp
ret
loopne
xchg
cmpsb
xchg
je
jg
mov
ss
sbb
or
sbb
push
push
pop
dec
or
xchg
push
and
test
jae
mov
lds
and
fidivl
and
int
add
or
jbe
pop
jne
shl
jge
es
mov
pop
mov
pusha
cmp
lock
sub
pop
data16
jge
mov
add
adc
in
test
mov
in
push
xor
aam
xchg
inc
test
dec
mov
sub
push
add
jo
jg
xchg
dec
pop
jne
lret
jg
in
lea
ret
into
dec
popa
mov
push
inc
jae
mov
jmp
mov
jbe
xchg
int
ror
inc
clc
push
mov
xor
test
mov
aaa
dec
cmc
int3
cmpsb
ljmp
enter
out
in
and
adc
movsb
mov
add
ds
sbb
inc
arpl
sti
adc
iret
pushf
xor
or
mov
pusha
int
adc
xor
pop
inc
imul
dec
mov
cmp
movsb
xor
mov
loopne
cmp
addb
jae
clc
sbb
out
cmpsl
xor
cmp
fst
mov
cld
sub
jns
mov
inc
jb
mov
mov
insb
mov
jge
out
dec
lahf
nop
mov
cli
inc
xor
sbb
dec
jmp
je
out
pop
aas
adc
stos
into
cmpsb
imul
pusha
popa
scas
mov
pop
inc
cs
faddl
movsl
push
nop
into
dec
int3
in
ss
or
sti
mov
sbb
add
rcr
scas
sbb
pop
sub
fimull
or
pop
add
lods
jmp
out
mov
js
pop
push
xchg
jg
rdpmc
inc
inc
jg
jbe
in
ficomps
je
mov
sbb
mov
enter
sti
lds
in
mov
adc
jmp
sub
sbb
rcr
jg
rorl
or
sbb
sbb
pop
shll
shl
jge
cmpsb
sub
mov
jne
sti
push
sbb
loope
movsl
nop
sub
mov
jae
push
xor
scas
mov
lret
cs
and
jnp
lods
movsl
cmp
pop
mov
pop
jbe
out
imul
xor
sub
enter
in
pop
inc
out
xor
gs
mov
pop
icebp
in
lds
mov
repnz
dec
lret
or
ss
adc
outsb
outsb
cmp
xlat
mov
stos
add
jnp
cli
lcall
jae
aaa
mov
adcl
imulb
jo
xchg
push
cmp
and
ret
popf
repnz
add
or
mov
jno
sub
jp
cmp
out
push
jo
or
sbb
or
rep
and
js
push
xchg
xor
mov
enter
cli
fcmovu
and
cmp
ljmp
dec
mov
xchg
pop
aad
mov
push
mov
movsl
mov
in
xchg
popf
inc
loope
testb
clc
lahf
jge,pn
insl
dec
scas
adc
lods
ja
rorb
andl
fwait
pop
mov
in
pop
xchg
inc
inc
add
sbb
adc
xor
outsb
xlat
pusha
fsubr
sub
testb
add
inc
mov
jecxz
pop
in
and
mov
mov
and
enter
add
aam
xorb
jle
clc
mov
or
sti
stc
xor
or
ret
sub
xchg
incl
pop
jnp
icebp
fisubrs
push
mov
fnstcw
lods
fisubl
push
adc
lock
cmp
pop
push
push
mov
gs
and
fidivrs
stos
test
inc
cltd
frstor
jp
fisttpl
dec
enter
cs
xor
xchg
pop
mov
pop
jnp
cmpb
out
stos
dec
test
dec
sti
ss
jns
mov
pop
fs
popf
ret
mov
push
insb
in
sarl
add
mov
lods
jb
pop
push
push
out
add
mov
out
inc
out
aam
lock
test
jae
push
sbb
je
mov
mov
sbb
in
push
pop
das
pusha
and
cs
nop
xor
sub
js
mov
push
icebp
pop
mov
iret
mov
cmc
and
or
in
lcall
adc
stos
not
popa
repnz
push
or
jl
out
or
inc
sti
push
dec
in
icebp
or
fs
adc
je
pop
add
xlat
add
xor
xchg
insb
repnz
adc
add
cmp
pushf
jbe
mov
sahf
ja
pushl
ljmp
loope
or
xchg
mov
shlb
loop
ss
dec
xchg
repz
and
sahf
in
mov
ss
sbb
outsl
pop
xlat
mov
mov
mov
fcomps
xchg
cmp
ret
fbstp
pushf
inc
mov
lret
idiv
cwtl
cmp
call
and
inc
cmp
lret
lock
push
and
jnp
cmp
dec
aas
hlt
cmpsl
and
lods
aam
mov
sahf
outsb
mov
iret
lret
jo
lods
pop
or
in
add
arpl
loopne
dec
sbbl
fisubrs
sub
mov
add
xchg
insl
xchg
mov
out
and
mov
push
push
call
jne
jecxz
lret
in
push
leave
pop
sbb
popa
dec
popf
ljmp
mov
repz
mov
in
cli
in
xor
xchg
scas
imul
in
aas
sarl
xchg
int3
in
mov
jmp
jnp
jns
pop
movsl
imul
test
cmp
das
icebp
pusha
mov
mov
fisttpl
mov
test
sbb
inc
ljmp
inc
xchg
xor
in
sahf
pop
imul
imulb
dec
xor
dec
ret
loope
push
int
repnz
and
pop
and
inc
pusha
ret
int3
sub
incb
inc
clc
push
push
or
test
xchg
out
sub
sbb
mov
cmc
rcl
push
cld
in
jb
repnz
mov
aam
xchg
push
xchg
push
xchg
fisubl
ret
mov
sub
adc
dec
lcall
stos
repnz
leave
jno
hlt
inc
inc
bndstx
push
fidivs
push
jp
sub
pop
xor
sub
mov
lock
popf
jle
ret
pop
mov
xor
mov
and
fisttpll
mov
out
test
fidivl
or
insb
dec
jmp
popf
pop
jns
lcall
pusha
xchg
js
fs
in
popl
imul
and
mov
fmull
push
fsubrs
xchg
xor
xor
mov
enter
daa
bnd
adc
ljmp
cmpsb
clc
test
lea
data16
sbb
cmp
or
push
mov
into
xchg
gs
push
lret
inc
data16
sbb
enter
lcall
inc
ja
in
pop
add
lea
orb
mov
in
frstor
adc
out
test
xor
pop
out
jno
push
loope
xor
popf
xchg
cltd
repnz
sub
mov
cmp
lret
xor
dec
jl
clc
and
in
loop
mov
shl
add
movsl
push
xchg
ret
call
push
test
jns
jp
cmpsb
push
mov
ficomps
div
insb
mov
inc
mov
and
lret
or
outsl
call
lret
or
pusha
jg
lods
fcmove
stc
jge
roll
and
clc
jg
je
xchg
inc
sbb
jmp
xchg
daa
xchg
adc
rcrb
cld
leave
jnp
jp
fadd
fiadds
or
push
mov
imul
je
ss
add
pop
loope
call
mov
jb
sub
rol
cmp
pushf
insb
insb
je
fwait
push
lahf
das
push
lcall
cmp
push
lret
fs
inc
aam
ret
xchg
test
xchg
mov
push
xchg
ret
movsl
and
fiadds
or
xchg
imul
inc
lcall
jae
daa
pusha
adc
inc
inc
or
adcl
dec
and
inc
cmpsb
xor
mov
daa
fildl
mov
push
adc
mov
sbb
push
xchg
inc
ss
popa
adc
je
in
xor
fs
xchg
lds
sahf
xor
sub
push
jo
dec
hlt
dec
int3
adc
lret
ljmp
xor
or
jecxz
inc
jmp
mov
fmuls
inc
cmp
test
mov
jb
out
cwtl
andl
adc
repz
inc
stos
pop
adc
js
cwtl
mov
dec
xchg
nop
sbb
mov
xor
add
and
dec
push
mov
cwtl
js
or
lahf
bnd
leave
jmp
clc
cmp
sub
pop
je
push
arpl
sahf
adc
and
lock
mov
cmpsb
mov
jnp
push
aam
sub
xor
call
test
fs
imul
cld
mov
jne
repz
mov
nop
or
or
sbbb
bound
pop
addr16
push
out
ja
xchg
loopne
add
mov
dec
std
xor
mov
pop
test
push
pushf
test
jl
test
das
sub
jp
add
sbb
sbb
inc
pop
xchg
jne
push
icebp
punpcklwd
sbb
loopne
cld
dec
cmovs
gs
xor
xchg
pop
lods
scas
adc
or
nop
push
cli
in
mov
movsb
pop
add
sub
in
add
stc
ret
mov
cli
call
pop
mov
cmp
sub
or
shll
outsb
and
aaa
rcrl
rorl
dec
sbb
movsl
dec
xor
test
stc
fstps
mov
push
stc
xchg
or
or
aas
imul
hlt
pushw
outsb
adc
inc
cmp
fimuls
popa
stos
test
out
jns
testb
xorl
pop
mov
and
jnp
int3
xchg
pop
shr
loope
xor
add
adc
add
sar
movsb
lret
pop
das
jle
mov
inc
or
mov
adc
add
adc
sbb
adc
adc
dec
jo
jge
pop
test
pop
pop
and
scas
dec
movsl
hlt
push
xor
pop
stos
call
addr16
fwait
and
or
push
push
mov
push
or
rolb
cmp
adcl
mov
dec
cld
pop
mov
push
jns
dec
lock
aad
int3
jnp
mov
or
inc
pop
pop
mov
outsl
sbb
fsubp
sahf
jnp
push
sbb
gs
nop
fnstcw
pop
dec
xchg
fidivrl
xchg
outsl
movsb
scas
scas
inc
xor
lret
and
arpl
and
mov
jmp
jo
jp
adc
pop
jnp
sub
stc
jl
daa
and
cs
inc
push
ret
pop
lahf
dec
pop
jne
ret
popa
rolb
mov
stos
mov
sbb
push
mov
dec
dec
notl
or
push
fmuls
jle
mov
inc
es
xor
movsb
push
fidivs
lea
cld
sub
cmpsl
add
fdivs
adc
xchg
xor
fidivrl
inc
in
mov
insb
pop
xchg
jo,pn
sbb
repnz
dec
ret
inc
jo
mov
sbb
stos
arpl
dec
and
xchg
mov
and
es
ror
push
bound
mov
push
cmp
or
push
out
and
leave
stos
adc
jle
mov
mov
leave
push
vsubps
inc
pop
call
add
jl
sti
cmpsb
pusha
cs
pop
or
sub
xor
pop
cmp
pop
sub
stc
jge
loope
inc
inc
cs
shrl
jle
mov
ja
inc
std
mov
roll
outsl
and
lods
mov
push
pop
inc
pop
in
pushf
xor
xchg
das
aaa
push
mov
jl
test
jb
ds
ret
jns
in
jno
sub
sub
mov
subb
addr16
or
pop
fdivs
out
pop
repz
dec
sbb
cmp
and
add
cmpsb
adc
aas
out
mov
mov
das
jmp
lahf
lods
cmpl
sub
shlb
or
cmpsl
inc
xor
ds
mov
in
xchg
test
pop
in
adcl
dec
push
jbe,pn
sahf
ss
xlat
mov
leave
pop
add
pop
mov
adc
cmpsl
fmull
pop
sbb
iret
leave
cmc
xor
sub
fs
sub
push
mov
add
les
adc
addr16
in
cltd
or
je
mov
rep
mov
fsts
dec
xchg
dec
add
loope
sub
jb
mov
cmp
iret
mov
in
dec
fidivs
mov
sti
data16
jge
cmp
dec
xchg
std
leave
arpl
pop
dec
iret
movsb
push
mov
or
movsb
shrb
mov
les
test
dec
ret
js
insl
push
shlb
pop
lods
ficomps
jb
cwtl
cmp
data16
pop
cmp
iret
pushl
lcall
mov
jae
push
xchg
jb
out
aam
call
sbb
icebp
mov
pop
mov
shlb
lds
imul
in
testl
jge
jg
xchg
xchg
dec
cmp
jbe
pop
cmc
test
mov
push
in
and
and
adc
push
cmp
cmp
push
or
pop
push
jae
xor
jnp
push
idivb
out
ss
push
sbb
rcr
fcoms
movb
jg
test
or
dec
mov
out
pinsrw
sbb
mov
movsl
call
incl
sub
mov
cli
fwait
pop
mov
fs
xchg
mov
pop
cmp
ljmp
icebp
inc
lods
push
and
loope
shl
jmp
mov
insl
add
bound
mov
sub
cld
out
add
js
aad
cwtl
cmp
fldcw
add
mulb
dec
mov
jno
enter
dec
fwait
sbb
out
hlt
push
je
mull
fnsave
fsubrl
repnz
or
imul
pop
add
testl
jl
jp
adc
int
icebp
movsl
pop
and
add
jnp
inc
push
ljmp
int
mov
test
lret
fdivs
test
mov
pop
cmp
pop
mov
sbb
enter
or
cmpsl
rcll
pop
fnstsw
orl
repnz
lret
mov
mov
leave
mov
jl
cs
xor
imul
orl
icebp
xchg
jg
ss
idiv
mov
fsub
lcall
xchg
jge
xor
insl
testl
add
mov
lods
enter
fs
mov
fsubp
cmp
jmp
add
jo
cs
inc
dec
cmp
mov
cltd
les
sbbb
push
jp
outsb
cmp
mov
mov
ret
jne
data16
cld
fs
and
into
add
arpl
les
fcomp
std
fcompl
cmpsb
pop
notl
in
jmp
fidivs
sub
or
out
xlat
outsb
fs
push
je
leave
sbb
cmp
movsl
lods
mov
pop
and
cmp
insb
inc
mov
push
jle
adc
cwtl
jne
adc
xor
imull
dec
xchg
pop
or
aas
mov
sub
inc
mov
push
div
mov
or
xlat
xchg
lret
inc
jl
mov
lods
cmc
divb
mov
or
mov
lods
lods
xor
add
ja
sbb
push
nop
cld
lods
xor
lock
dec
jmp
mov
aaa
xor
lahf
lret
mov
add
sti
in
inc
xor
xchg
or
enter
pop
aaa
sbb
push
xchg
rcr
xor
ljmp
add
mov
adc
xchg
adc
and
insb
or
inc
call
mov
daa
cltd
dec
jae
mov
xchg
mov
xchg
enter
fs
xchg
in
movsl
stos
pop
push
pop
je
icebp
or
sbb
pop
dec
adc
mov
cltd
fwait
scas
sub
test
div
inc
sarb
aad
in
and
std
loopne
and
in
popf
dec
mov
mov
jmp
adc
je
lds
or
cmp
adcl
or
push
sbb
push
push
icebp
aaa
movsb
movsb
test
shlb
arpl
dec
pop
dec
xchg
jbe
imul
push
pop
xchg
lods
push
xlat
dec
jb
das
jge
sbb
mov
scas
sbb
push
arpl
test
es
dec
adc
aas
xchg
dec
or
test
pop
rorl
or
lahf
mov
out
xchg
and
jne
shll
pop
pop
bnd
mov
clc
hlt
lcall
int
pop
in
sub
adc
or
cmpsl
repnz
aas
repz
adc
push
inc
sub
aad
xchg
out
scas
outsl
sbb
sub
and
xchg
fnsave
or
push
hlt
arpl
mov
cmp
mov
stc
add
rcll
ljmp
jae
push
push
cmp
test
fs
int
cltd
mov
xchg
inc
pop
testb
adc
inc
xor
das
in
inc
dec
nop
into
aaa
aam
dec
jne
fnsave
mov
into
pushf
sbb
inc
push
scas
call
lock
dec
dec
and
and
test
push
outsl
push
movsl
mov
ss
xchg
jle
lret
cmp
mov
js
jmp
arpl
lock
xor
fcmove
cmp
shlb
das
dec
mov
lods
xlat
xor
jae
leave
sub
or
sub
xchg
cwtl
stc
sbb
iret
cmp
sub
mov
push
sarb
mov
dec
cld
ja
test
sbb
xor
jne
xorb
imul
mov
ljmp
push
jle
ror
es
xor
cmc
pop
call
jo
adc
stc
es
sub
mov
mov
xchg
pop
mov
mov
mov
nop
int
pop
jl
adc
push
mov
mov
sub
vpcmpgtd
xchg
sbb
negl
addl
xlat
jp
cmpb
push
incb
dec
clc
jecxz
add
sahf
dec
add
push
adc
sub
sbb
adc
xchg
imul
in
pop
fsubrl
fmuls
cli
adc
push
andl
add
jnp
or
xchg
push
add
addr16
leave
nop
ret
adcb
jns
jae
push
xchg
sub
push
inc
adc
mov
mov
inc
mov
jne
pop
mov
or
jo
fldenv
scas
out
sbb
outsb
sahf
inc
popf
pop
hlt
or
out
xadd
mov
inc
sbb
sub
pop
push
test
out
jecxz,pn
int3
int3
cmp
xor
enter
dec
sbb
xchg
loopne
fldt
sbb
lret
out
cmp
ja
jl
das
mov
ljmp
sbb
dec
int
jnp
or
cmp
jmp
sti
jge
or
mov
jnp
or
cmp
imul
or
cmp
imul
std
or
cmp
jmp
sti
jge
or
mov
ja
in
jnp
jnp
imul
dec
inc
sub
cmp
or
sbb
fdivs
bound
sbb
mov
in
in
popf
decb
fdivrl
cmp
or
sbb
insb
sbb
pop
sub
mov
xchg
in
in
popf
int3
int3
fsubrl
adc
add
jne
fs
mov
lahf
int
cltd
in
in
fcoms
lods
inc
pop
push
adc
push
aas
fidivrl
out
sub
inc
inc
lds
pop
std
push
adc
in
outsl
lods
or
int
sbb
repnz
cmp
insl
sub
bound
call
and
roll
pop
add
jge
sar
inc
xor
add
inc
fsubl
mov
insl
xchg
sbb
or
daa
push
mov
mov
inc
inc
fsubl
jl
mov
cmp
sbb
sub
lea
insb
sub
xor
and
lret
fdivl
xchg
push
push
int
test
int
in
int3
in
test
test
and
insl
jnp
insb
or
mov
movsb
int
std
test
hlt
popf
in
mov
pop
dec
imul
or
lods
mov
clc
stos
in
cld
cltd
mov
pop
pop
dec
arpl
pop
add
imul
mov
in
xchg
out
fdivrs
push
pusha
adc
jl
dec
cmp
mov
in
in
popf
cld
int3
mov
cmp
or
sbb
insb
sbb
pop
sub
mov
pushf
in
in
popf
cld
int3
mov
adc
iret
outsl
sub
rcrl
mov
inc
cltd
jmp
aas
cld
xchg
pusha
subl
test
mov
insl
and
sbbb
jmp
addr16
out
or
jmp
mov
mov
js
inc
imul
leave
inc
out
std
mov
movzbl
dec
jno
jmp
sahf
mov
arpl
cmp
mov
sub
push
or
jo
mov
ljmp
mov
fildll
sub
hlt
xor
xchg
inc
addl
sbb
mov
mov
les
sbb
jo
mov
xchg
stc
and
sub
clc
adc
and
add
test
aaa
sbb
dec
leave
mov
cmp
xchg
jne
mov
js
push
xor
stc
scas
sbb
jae
and
push
int
mov
iret
push
dec
scas
add
jle
scas
lcall
lret
rorl
mov
xor
mov
add
xchg
popf
xlat
mov
pop
and
pop
cld
mov
dec
mov
jbe
popa
insl
decb
mov
dec
inc
in
sub
xor
lock
insl
lds
bound
mov
dec
lahf
mov
loopne
jg
call
push
lcall
loopne
nop
mov
clc
test
insl
xchg
rorb
arpl
dec
jp
mov
mov
mov
pusha
adc
xchg
imul
xor
cmp
jbe
xlat
push
sbb
inc
divb
cwtl
lock
mov
sahf
xchg
out
push
clc
das
insl
movsb
rcrb
jecxz
imull
cltd
add
les
movsb
dec
sub
dec
int3
xchg
adc
andb
mov
xchg
loop
xor
xchg
adc
push
in
mov
pop
in
incl
fsubs
push
lea
into
add
enter
ss
xchg
enter
into
aam
mov
dec
sbb
loope
jne
data16
mov
xchg
out
aas
xchg
xchg
mov
inc
mov
and
dec
icebp
lret
mov
test
push
xor
jns
test
mov
lcall
aaa
cmp
xor
loopne
out
rclb
pop
repz
movsb
in
jae
mov
sbb
pushf
xchg
cmp
pop
movntq
out
xchg
mov
dec
out
mov
mov
sbb
inc
xchg
popa
jp
das
mov
imul
shll
sub
sbb
es
xor
and
xchg
decb
push
fisttpl
popa
faddl
inc
fmuls
imul
rclb
in
loopne
xchg
pop
in
int
sub
out
int3
inc
arpl
dec
sub
sub
and
and
dec
xor
lods
or
fisttps
aaa
data16
icebp
push
mov
int3
cmp
adc
out
pop
out
fldcw
cmp
and
repz
lods
jne
xor
stos
lret
stc
aas
arpl
scas
pushf
and
out
inc
sahf
sub
out
mov
jae
jmp
mov
ja
hlt
in
es
jns
inc
es
enter
fwait
shll
inc
push
shll
fidivrs
xchg
fdivrs
into
das
enter
mov
mov
outsl
mov
cld
mov
pop
sti
adcb
mov
jbe
sub
mov
imulb
mov
cltd
addr16
pop
inc
sbb
and
es
pop
push
movsb
dec
add
pop
cs
xor
xchg
mov
divb
or
mov
or
jge
andb
jle
push
jnp
cmc
stos
jge
les
das
aas
int
inc
scas
sbb
xor
mov
mov
inc
insb
push
pop
adcb
mov
hlt
add
fwait
mov
sbb
pop
and
lods
sub
pop
mov
shlb
xlat
jl
fcoml
stos
outsb
adc
jb
add
ljmp
and
jmp
ljmp
addr16
cmp
lock
out
mov
subl
inc
add
outsb
jb
jo,pn
inc
mov
sbb
int
mov
les
push
repz
xchg
inc
add
call
xchg
add
jge
or
mov
push
pop
sbb
cmp
enter
push
ret
push
lods
mov
inc
lret
cmpsl
pop
xor
aaa
sub
repnz
xor
xchg
ja
mov
and
add
in
mov
push
jg
lcall
push
mov
nop
mov
ljmp
xor
pop
into
cld
imul
cld
inc
mov
cmp
ds
mov
invd
dec
repnz
cmc
cmp
ss
adc
jecxz
dec
data16
or
mov
data16
mov
mov
movsb
rcrb
dec
jmp
test
inc
cmp
arpl
mov
jbe
mov
fwait
cli
jecxz
xor
data16
fimull
push
cmp
outsl
cmp
jb
cmp
dec
cmpsb
jp
outsl
mov
je,pn
pop
les
sbb
fstl
pusha
pop
jmp
out
lds
imul
ret
mov
push
pop
es
popa
xor
test
jecxz
aad
loopne
xchg
popa
jne
push
push
aaa
or
ja
sub
insl
add
sbb
les
or
jg
daa
push
popa
sti
scas
push
dec
call
cmp
push
or
mov
loop
dec
dec
pop
ja
jne
xor
pusha
mov
cmp
push
bound
fistpll
iret
sahf
orl
ds
push
xchg
cmpsb
or
loopne
addr16
in
sub
mov
std
pop
xchg
add
pop
repnz
ret
pop
adc
into
adc
lcall
mov
pop
pop
out
add
xchg
int
pop
addb
out
add
inc
xor
xchg
push
hlt
inc
notw
loop
mov
push
int
adc
mov
addb
stos
ja
pop
bound
dec
lods
scas
inc
popa
popf
nop
lahf
xor
jb
hlt
adc
dec
jne
dec
repnz
scas
inc
movsb
and
adc
push
ljmp
jl
or
in
sub
push
mov
mov
mov
arpl
in
out
pextrw
pop
or
test
and
in
mov
push
pop
mov
stc
mov
push
lret
sub
inc
imul
cli
jo
int
xchg
mov
sbb
vmovq
movsl
push
xchg
leave
fildl
xor
shll
or
mov
dec
lock
mov
and
dec
movsb
cmp
sbb
dec
push
add
lcall
in
stos
ds
jo
call
aaa
pop
inc
mov
push
data16
inc
push
imul
and
and
cmp
xchg
imul
inc
xor
cmp
push
shll
dec
sub
sbb
jp
sub
aaa
dec
in
jae
mov
mov
jmp
pop
add
ljmp
popf
int3
push
ss
push
mov
mov
lret
push
adcl
aad
mov
hlt
inc
cmc
negb
jae
shrb
adc
lret
sub
dec
jne
stos
xchg
out
adc
adc
xor
inc
ror
xorb
icebp
sub
lea
lds
adc
mov
adc
sub
int
xchg
sub
aaa
sbb
fdivl
sub
ljmp
loope
cmp
nop
adc
push
imul
cli
xor
pop
cmp
aad
push
shlb
xchg
sarb
fistps
data16
out
arpl
jmp
dec
mov
add
jge
sbb
mov
arpl
push
nop
and
inc
aad
push
push
lret
int
leave
cs
and
ds
mov
lcall
hlt
sub
fucom
mov
aaa
cwtl
lret
and
cmp
push
rep
jne
rol
incl
push
cli
or
test
pop
mov
xchg
cmp
out
pop
mov
mov
shll
cld
xchg
mov
shrl
mov
jbe
pusha
lret
mov
imul
ss
call
fcompp
push
lahf
fistpl
xchg
not
add
and
mov
aas
add
mov
push
int
jge
daa
dec
jl
mov
jnp
jge
push
jnp
test
mov
roll
ret
sbb
sbb
subb
sahf
jecxz
ret
inc
dec
std
jge
shlb
test
jo
sti
or
scas
mov
stc
cvtps2pi
lea
jle
hlt
cmp
imul
push
fwait
xlat
int
arpl
add
ljmp
and
je
fistps
sbb
mov
sub
rcr
push
pop
aam
fs
ja
sti
sahf
insl
stos
into
enter
stc
lods
int3
pop
in
repnz
ds
or
xchg
adc
repnz
int
xchg
incb
lods
mov
loope
cli
jbe
repz
stc
enter
data16
mov
jae
mov
push
mov
popa
rorl
sub
sbb
out
cld
mov
fisubrs
das
mov
scas
jne
sbb
mov
enter
pop
and
dec
cli
stc
out
jmp
out
adc
push
insl
inc
lahf
cltd
aas
or
loope
xchg
lahf
xlat
inc
mov
jle
std
fst
sub
outsb
push
mov
insl
arpl
sarl
iret
bound
imul
xor
mov
push
and
cmpsl
sub
push
mov
sub
int
fwait
add
outsb
or
pop
das
or
mov
shll
jp
xor
mov
ret
xchg
dec
jno
into
popf
add
jge
data16
or
sahf
unpcklps
mov
scas
into
pop
or
aad
cmpsb
mov
std
das
pop
cmp
jmp
sbb
sbbb
cmp
pop
adc
loopne
mov
cmp
cs
lock
sbb
jnp
mov
pop
int
mov
or
or
xchg
mov
or
inc
lret
mov
rol
and
mov
std
mov
sti
inc
not
imul
push
sahf
mov
pop
repnz
lods
cld
xchg
call
push
pop
cmc
push
test
push
cwtl
mov
pusha
jo
daa
push
pop
mov
push
mov
pop
xchg
pop
cmp
push
test
es
xlat
cld
xchg
xchg
into
imul
xchg
sti
xor
pop
stos
mov
inc
cwtl
push
push
cwtl
add
pop
lahf
rorb
push
pop
inc
or
imulb
mov
lods
mov
mov
mov
aas
loope,pt
shrb
mov
lock
into
sub
cmp
adc
stc
push
pop
lea
xlat
addr16
adc
cmc
and
aam
push
scas
scas
fstpl
add
test
addr16
cli
jo
aaa
pop
dec
pop
and
imul
fists
lret
mov
and
sbb
mov
sti
js
push
aam
es
out
cmc
enter
mov
add
inc
mov
jmp
inc
pop
outsb
pop
cmp
add
add
in
mov
pusha
push
jno
imul
and
push
xchg
repz
aam
xor
jo
movsl
pop
cmpsl
js
cld
pop
fwait
lock
jge
fildl
jle
in
inc
or
stc
mov
xchg
pop
mov
orl
imul
lret
cmp
xlat
push
icebp
aas
xchg
repz
sub
adc
pop
repz
loopne
ret
into
cmpsb
in
inc
dec
adc
test
jae
insb
sbb
ljmp
sti
scas
mov
add
ret
mov
lds
fistps
jle
inc
and
and
xor
push
sahf
mov
iret
sub
hlt
popl
fistpl
popf
lahf
popf
repnz
mov
sti
adc
fisubrl
das
inc
mov
add
fcoml
aad
push
cs
aad
xor
push
adc
pop
nop
or
nop
add
xor
adc
sub
mov
pop
fcmovbe
js
jmp
daa
jne
mov
inc
fcomi
ja
jg
sti
cmc
dec
mov
aad
push
pusha
add
out
ja
int3
jmp
pop
cmp
ja
and
sarb
lds
jno
add
pop
in
inc
mov
imul
cmp
lret
adc
pop
dec
orb
xlat
test
sbb
stos
scas
mov
jo
adc
arpl
push
leave
pop
jp
popf
cmpsb
push
imul
int3
mov
lods
mov
in
rorb
dec
fiaddl
lea
mov
cmp
add
xor
lock
push
adc
stos
mov
dec
inc
xor
lea
adcl
cli
gs
lcall
lods
das
mov
ljmp
test
cmpsb
jge
mov
adc
bound
fimull
inc
sbb
mov
mov
cmp
mov
rclb
rcr
jnp
xor
sbb
sbb
inc
jp
mov
gs
sub
or
in
decb
mov
cmp
pop
adc
cmpb
inc
pop
pop
lcall
push
jae
fmull
ret
xor
lods
jmp
leave
inc
pop
push
jecxz
aas
sub
sub
mov
xchg
and
outsl
pop
popf
rcll
sbb
mov
or
loop
and
je
fbstp
cwtl
pop
imul
repnz
pop
inc
hlt
pushf
ss
add
push
push
cltd
xor
clc
cmpsl
arpl
or
in
dec
pop
push
fs
cltd
inc
paddsb
lock
scas
push
aas
imul
mov
push
push
lcall
xor
xlat
xchg
jne
iret
sahf
pop
pop
jg
push
call
cwtl
jle
and
ja
push
add
mov
repz
in
outsb
mov
xor
fs
cmpsl
mov
mov
push
dec
shll
aaa
push
leave
xchg
andl
mov
sub
push
popa
lds
sbb
test
imul
rcll
inc
fidivl
loop
mov
pop
test
adc
mov
inc
xlat
out
jle
lds
push
and
outsb
push
and
out
xchg
sub
es
xchg
pusha
insl
bound
mov
les
mov
aam
dec
fbstp
cli
xorl
or
pop
daa
or
shrl
xlat
stos
pop
mov
loopne
inc
jg
sti
adc
push
bound
cmp
and
cmp
cld
xlat
imul
jns
dec
scas
arpl
pop
inc
in
push
or
xor
sti
addb
add
stc
dec
scas
test
jo
out
mov
mov
cli
jb
cld
ret
push
test
out
stc
push
fstpt
sub
dec
pop
xchg
notb
inc
jo
ljmp
push
addr16
negl
mov
andl
jp
shlb
xor
ds
jl
addr16
outsb
mov
xchg
mov
or
or
repnz
arpl
xor
mov
add
and
jl
sbb
cmpsl
test
and
call
test
add
scas
xchg
cmc
popa
sbb
cli
cmp
jg
call
xchg
sbbb
dec
mov
jne
das
lods
push
xor
xor
mov
mov
lds
int
mov
pop
xorl
inc
mov
dec
push
sub
inc
imul
or
xchg
and
and
and
adc
hlt
mov
aad
push
in
mov
jle
lret
je
gs
loope
adc
xor
push
mov
fsubl
add
movsb
jnp
bound
mov
xchg
outsb
divb
pop
int3
repz
ljmp
test
loopne
pop
das
xor
in
call
pop
inc
sub
lds
call
add
push
mov
add
adc
jl
pop
fistpll
jo
out
addl
pusha
ss
imul
sbb
pop
adc
mov
xchg
jmp
sbb
and
xor
add
mov
mov
out
mull
repnz
jle
clc
fs
test
push
mov
aaa
sbb
adc
xor
add
add
mov
push
out
enter
lret
mov
shrb
dec
cmp
xor
mov
cs
ret
sbb
inc
mov
out
ret
fistps
jns
imul
xchg
jp
roll
sbb
mov
faddp
push
cmp
mov
pushf
jle
loopne
pop
and
inc
jmp
mov
or
xchg
aad
fsts
mov
in
ljmp
push
fists
mov
pop
ljmp
push
iret
movsb
leave
sbb
xor
rorb
pop
lret
ret
sbb
lcall
push
in
pop
mov
and
sbb
mov
out
push
cmp
push
xorl
push
fwait
aam
mov
mov
rorl
jae
lahf
sub
jb
cmp
sbb
mov
add
int
cmp
mov
fldenv
loop
dec
arpl
aam
ret
pop
and
dec
in
jo
ljmp
add
out
mov
and
lods
dec
popf
idivb
mov
cmc
mov
sub
test
enter
add
fists
lret
cmp
mov
xchg
fs
sarb
xchg
xorb
shrb
mov
ja
sub
dec
clc
jb
lcall
mov
scas
sub
mov
cmpsb
cmpsb
xor
jne
repnz
cmovno
daa
in
sub
sbb
cmp
aam
adc
sub
scas
je
mov
cwtl
sbbl
sahf
test
cmp
rcr
sbb
or
popf
add
push
add
ss
shll
cwtl
mov
aas
cwtl
pusha
jb
sub
mov
shrb
dec
push
xlat
stos
dec
jp
inc
or
sahf
mov
cs
cmpsb
mov
test
pop
imul
or
pop
rcr
out
inc
mov
mov
cmp
and
add
cmpsl
xchg
and
or
pop
ja
jnp
xor
mov
xlat
jne
pop
mov
pop
and
xchg
test
push
rcr
gs
addr16
push
fisubs
add
aas
sbb
mov
lret
in
cmpsb
inc
andl
pushf
cmpsb
dec
pop
lea
adc
das
or
xor
mov
int3
and
fnsave
jl
bound
push
and
lret
shlb
je
jo
mov
cmc
icebp
add
cmp
nop
clc
in
xchg
pop
inc
je
and
addr16
nop
in
test
and
pop
pop
pop
cs
mov
insb
inc
int3
jl
adc
sbb
fdivrl
lret
stc
popa
mov
ret
ss
adc
jge
jmp
test
ret
sbb
mov
dec
cmpsb
es
adc
lock
xchg
cs
mov
pop
pop
punpcklwd
lret
xchg
test
jle
test
dec
mov
xor
dec
stc
shlb
mov
arpl
lahf
jnp
jmp
xchg
xchg
ret
stos
cld
enter
mov
dec
mov
mov
sbbb
cmpsb
clc
mov
es
setne
in
push
mov
xchg
cli
fmuls
add
std
cmpsb
test
inc
xchg
sub
or
lret
mov
jle
sbb
fxch
add
adc
cmp
fdivs
popa
xchg
add
ljmp
fs
ja
xchg
mov
cmp
pop
adc
mov
out
jne
cmpsl
loopne
xchg
inc
push
sbb
and
mov
js
push
sbb
cmpsb
jae
mov
mov
or
mov
dec
fs
or
cmp
sub
lea
dec
adc
jge
mov
push
cmp
or
loope
push
lret
inc
cmp
jge
mov
test
bound
mov
jb
jo
and
gs
cmc
ljmp
jl
mov
shlb
lcall
fwait
dec
imul
jnp
mov
enter
out
les
dec
mov
mov
jmp
cmpl
insb
inc
icebp
shrb
and
dec
sbb
out
stos
cmp
push
movsb
fldenv
or
psrld
mov
mov
popf
add
andl
insb
sbb
pop
sub
mov
pushf
in
in
popf
cld
int3
mov
cmp
or
sbb
insb
sbb
pop
sub
mov
pushf
in
in
popf
cld
int3
mov
cmp
or
sbb
insb
sbb
pop
sub
mov
pushf
in
in
popf
std
int3
mov
ds
or
sbb
fsubrl
es
pushf
lcall
and
or
sbb
sub
cmp
sbb
xor
mov
mov
pop
in
pop
cld
xchg
or
sbb
sub
cmp
dec
cmpsl
pop
xchg
insb
xchg
addr16
lods
inc
mov
pop
in
pop
cld
dec
or
sbb
sub
cmp
dec
pop
mov
adc
and
mov
cltd
or
push
mov
cmpsl
popf
dec
outsl
lods
lahf
xor
lret
lret
daa
add
add
sbb
pop
push
cmp
daa
mov
xorl
mov
push
pop
in
clc
add
sbb
push
jle
out
lahf
imul
test
out
fists
cmp
sub
sbb
dec
dec
cmpsl
dec
push
mov
mov
mov
adc
fisttpll
xchg
ljmp
dec
das
mov
push
leave
in
push
push
add
out
in
or
sub
dec
pop
push
jae
fisubrs
je
pop
stc
add
lods
or
sbb
sub
cmp
dec
fistps
and
std
pushf
and
fsubl
popa
xchg
iret
mov
and
sbb
ja
xor
xor
and
inc
mov
bound
movsl
sub
imul
ret
add
jl
leave
xor
rorb
dec
mov
cltd
inc
xchg
fwait
pop
mov
pop
xchg
dec
in
cmpsl
pop
xchg
insb
xchg
addr16
push
lods
inc
mov
pop
in
pop
cld
testl
cmp
dec
cmpsl
pop
xchg
insb
xchg
addr16
push
lods
inc
mov
pop
in
pop
cld
testl
in
js
dec
dec
stc
cmp
pop
xor
insb
cli
stos
loop
mov
sbb
cmpsb
sub
dec
fbstp
pop
scas
or
cs
mov
push
lahf
subps
pushf
int3
push
lcall
add
push
ret
inc
inc
jecxz
loope
or
lods
out
jae
lret
mov
test
mov
mov
lcall
xorl
jmp
fwait
sahf
mov
xor
jns
pushf
pop
popf
icebp
mov
mov
mov
push
test
dec
xor
dec
call
mov
jnp
aad
sahf
addb
in
daa
jb
mov
in
je
push
pop
test
mov
mov
jbe,pn
pop
cs
xchg
dec
in
jge
push
pop
movsb
jne
sub
jp
pop
add
mov
ret
mov
lock
mov
mov
sarb
cmp
or
cmp
stos
inc
mov
or
fwait
out
mov
pop
imul
mov
cmp
push
mov
cmpsb
bnd
subl
xchg
mov
popf
sti
arpl
stc
pushf
test
je
jmp
fisttps
les
mov
sub
dec
and
add
cmp
pop
test
sbb
mov
jge
mov
pop
fwait
jle
or
or
adcb
add
addr16
mov
pop
test
and
inc
loop
pop
jle
sbb
mov
or
repz
cmp
push
inc
shll
ret
cwtl
rcll
pushf
sbbl
dec
pop
enter
push
lahf
aam
fidivl
xor
mov
lcall
arpl
lret
clc
inc
in
pop
mov
mov
and
push
in
in
pop
out
les
sbb
notl
call
xchg
jmp
pushf
jl
lods
ret
sub
mov
mov
inc
sbb
mov
pop
sbb
pop
xchg
insb
sbb
jno
daa
dec
and
and
pop
xchg
sub
aas
add
lahf
mov
subl
fwait
cli
sbb
pushf
lds
sub
ss
inc
ret
and
fistl
pop
xchg
iret
dec
mov
xchg
js
stos
sbb
scas
fidivrl
jne
loopne
clc
lea
pop
push
mov
inc
ficoml
and
arpl
and
lret
sarl
mov
cld
jo
pop
aad
ret
jmp
insb
jmp
sti
popf
mov
hlt
xchg
test
mov
dec
sbb
cmpb
dec
hlt
cmp
sbb
mov
stos
or
pop
scas
xchg
adc
mov
pop
cmp
inc
inc
cltd
xor
in
xor
xor
in
scas
jmp
xchg
mov
gs
lret
xor
mov
push
outsb
data16
clc
sti
movl
jbe
es
scas
xchg
adc
push
pushf
sbb
shll
scas
jecxz
insl
sahf
cld
lret
adc
ficompl
and
cmp
sar
call
out
lret
ret
ljmp
and
mov
mov
fldl
mov
adc
in
mov
mov
xchg
stos
jbe
push
enter
cltd
cmpsb
add
xchg
adc
jo
ficompl
dec
movsl
jmp
mov
fistpl
add
cmp
adc
jl
scas
sub
int3
ret
bound
cmp
fstps
cs
sbb
scas
cs
mov
es
mov
xchg
jl
mov
mov
mov
iret
lcall
rorl
test
lret
int3
repnz
add
fwait
imul
sub
sub
add
push
test
mov
enter
aas
aam
stc
add
in
sub
mov
dec
rol
xchg
jb
frstor
and
adc
aad
es
push
adc
push
gs
and
icebp
outsb
and
inc
adc
and
xchg
lahf
bswap
inc
mov
fsubrp
pushf
push
cmp
sbb
inc
fwait
jae
sbbb
loopne
jle
jp
push
pop
aam
int3
ds
inc
lcall
sbb
cmp
push
sub
pop
mov
mov
lcall
mov
add
movsl
popf
and
jge
xor
mov
arpl
cmp
push
popa
xchg
jl
jmp
or
fs
push
push
dec
js
or
imul
jp
movsl
push
xor
pop
and
push
add
gs
mov
push
lds
pop
xor
pushf
mov
dec
dec
dec
jo
in
xor
push
loope
mov
stos
das
inc
inc
stos
es
push
sbb
lret
or
sub
dec
out
insl
mov
fcmovbe
adc
xor
loope
cmpsb
mov
cmc
loop
xchg
gs
test
test
dec
fsubp
sarb
push
shll
xchg
add
push
jp
push
in
mov
or
pop
fisubs
sub
ljmp
xchg
push
in
pop
sbb
xor
movsb
lods
pop
jmp
enter
adc
repnz
or
aam
mov
fmuls
cld
sub
push
sub
push
xor
xchg
rorb
mov
in
lea
iret
mov
maskmovq
ljmp
mov
mov
and
cmc
lods
inc
repz
cwtl
test
pop
mov
xor
mov
mov
scas
xchg
cli
insl
push
std
add
mov
mov
cltd
add
lret
xor
sub
add
inc
flds
movsl
mov
adc
lds
popa
xchg
addl
test
pop
les
hlt
ret
mov
dec
pop
sahf
inc
and
int3
into
rolb
outsb
imul
call
sub
sbbb
pop
aam
add
jle
hlt
adc
ja
xchg
cmp
jno
push
xor
test
daa
jge
shll
rol
push
addr16
and
push
int3
jo
jmp
pop
cmp
add
aad
or
setge
fisubs
mov
sub
roll
lcall
data16
pop
mov
in
jg
lods
pop
ljmp
pop
xchg
fldl
push
mov
xchg
add
sbb
js
mov
jp
insb
mov
pushf
cmp
data16
jl
mov
adc
ss
push
pop
mov
xchg
mov
sub
rclb
adc
mov
push
push
in
push
pop
out
sbb
shrb
xchg
or
add
cmp
daa
or
sbb
sahf
fisttpl
xchg
mov
shrl
shlb
pop
push
xor
mov
xchg
cmpsb
pop
inc
inc
dec
test
stc
jle
in
xlat
or
xchg
mov
es
adc
sti
pop
frstor
inc
mov
loope
std
jg
lods
les
in
lock
lret
aas
mov
adc
lahf
test
test
lods
xchg
add
data16
xor
pop
push
sub
mov
sub
mov
aam
subb
jg
sahf
hlt
push
pusha
fldenv
push
lods
mov
adc
cmp
js
stos
ss
mov
movsl
cmp
in
loope
fiadds
leave
decb
rorl
mov
scas
sub
scas
in
out
out
stos
subb
mov
add
fwait
das
test
add
idivb
sbb
cmpsb
fwait
cmc
cmp
add
dec
cld
push
enter
outsl
add
popf
pusha
dec
inc
mov
mov
add
cmp
sbb
mov
pop
xchg
fisubs
and
adc
pop
mov
jnp
adc
leave
in
and
enter
jb
dec
adc
inc
pop
jb
jnp
or
mov
enter
loop
and
rcll
jns
mov
sbb
cmpsl
mov
repz
dec
scas
sbb
or
mov
popf
int3
lods
inc
lods
mov
cs
inc
ss
das
dec
jp
int3
enter
nop
insl
clc
cmp
incl
mov
add
in
stos
jnp
pop
scas
jne
add
pushf
cli
mov
int3
frstor
pop
fbstp
push
adc
ss
cltd
addr16
jecxz
sub
xchg
es
orb
and
mov
in
movsl
sub
add
fildl
ja
xorb
jnp
repz
sub
sbb
rol
push
sub
xlat
dec
jnp
mov
dec
jle
subb
stos
mov
je
popf
out
mov
push
insb
dec
fldcw
jp
subb
mov
cld
fwait
inc
jo
fstpl
pop
test
mov
mov
and
jne
xor
lret
sbb
push
in
add
mov
pop
iret
adc
cli
xchg
loop
roll
shll
jb
and
xor
ljmp
jg
adc
xchg
mov
icebp
test
maxps
rorb
mov
rclb
mov
int
cmp
scas
xor
sub
outsb
ret
sbb
pop
add
sahf
cmp
int3
out
mov
ret
cwtl
ret
in
jb
xor
les
push
cli
xchg
lds
pop
test
push
enter
inc
addr16
sbb
dec
fcmovbe
mov
js
sbb
mov
test
jmp
adc
in
mov
sahf
lret
xchg
pop
sbb
leave
dec
lret
movsl
push
cmc
sbb
mov
jae
fbld
dec
ficoms
sub
jmp
hlt
pop
xor
add
rorl
imul
or
imul
cli
cmpsl
cmp
hlt
adc
mov
fistpl
sub
sub
and
in
xchg
and
cld
mov
ss
jecxz
push
xchg
fisubs
and
out
es
jmp
sbb
lret
lcall
fcom
test
xchg
adc
xlat
push
cltd
in
stos
loopne
sbb
test
lods
xchg
add
jle
js
pop
push
or
cmp
les
lret
insb
cmp
and
popa
xchg
cltd
adc
repz
sub
push
mov
repz
icebp
push
leave
ret
outsb
ss
or
pop
roll
jbe
ret
cld
std
cld
add
mov
xchg
daa
das
mov
nop
inc
adc
fbld
test
mov
insb
pop
fidivrl
xchg
popa
sbb
push
inc
jmp
das
lea
pop
xchg
dec
xor
mov
punpckhbw
mov
push
cmp
imul
aas
add
dec
enter
sti
shll
outsb
mov
sbb
sbb
mov
lahf
loopne
adc
xor
sbb
adc
mov
lock
sbb
mov
jns
icebp
xor
cmp
xor
push
dec
stos
cmp
fsubr
outsb
dec
jmp
aam
pop
lock
mov
cmp
outsl
jle
data16
sahf
push
cmp
push
test
test
mov
pushf
repz
and
repz
imul
cmp
js
jecxz
push
jle
mov
cs
cli
in
jnp
dec
inc
imul
out
inc
mov
mov
add
icebp
inc
icebp
jo
ljmp
jnp
cmp
les
fcompl
adc
fidivrl
push
cli
push
mov
mov
ss
mov
xchg
cmp
jbe
cmpsb
out
stc
in
ss
in
and
adc
adc
and
xor
in
scas
xchg
ja
and
cld
in
adc
add
mov
sbb
fwait
push
loop
scas
popa
int
jo
mov
pop
dec
cmp
xchg
mov
and
mov
fs
jb
jno
enter
jo
or
push
xchg
jl
aad
xor
sub
xchg
lret
loope
rcl
jge
sub
ret
hlt
cmp
cmp
cmp
fsub
adc
xchg
lcall
sbb
test
enter
or
mov
push
test
lret
fnstenv
dec
and
ja
ds
insl
test
xorb
mov
std
inc
cld
scas
outsb
adc
hlt
gs
popa
dec
pop
mov
pop
out
test
and
lea
scas
jl
sahf
insb
and
cwtl
ja
sbb
lcall
lods
inc
and
dec
jle
fisubs
push
cmp
sarl
sbb
ds
sbb
mov
jae
decl
ss
iret
xchg
xor
stos
in
in
stos
pop
adc
sbb
xor
add
adc
pop
mov
or
jl
mov
cs
dec
and
ret
adc
clc
xor
cld
push
jle
loop
pop
jo
mov
out
out
jns
sar
lret
aam
inc
xchg
pop
mov
cli
sub
imul
lret
jmp
adc
sbb
inc
cwtl
lds
fsubrl
mov
jae
icebp
inc
xchg
sbb
add
test
fdivp
in
mov
lds
ret
or
or
mov
lcall
mov
or
and
pop
sub
push
stos
jae
add
aas
cmp
and
iret
adcb
mov
adc
sbb
divl
and
xorb
mov
subl
shlw
push
jno
aas
fcomi
jae
push
sarb
fwait
add
push
sbb
sub
into
ret
out
js
pop
pop
dec
les
pop
mov
leave
sub
xchg
pop
stos
addb
mov
fdivp
mov
mov
lods
loopne
pusha
dec
jne
pop
int
xor
and
xchg
scas
xchg
cmp
jp
pop
mov
adc
sti
in
inc
jo
xlat
out
scas
mov
and
flds
fs
mov
xchg
call
and
jle
xchg
or
decb
jnp
hlt
mov
mov
cmp
dec
movsl
jl
dec
xchg
ret
inc
cltd
push
cmc
int
or
and
or
mov
sbb
add
imul
mov
jns
mov
ss
dec
mov
cmp
test
jecxz
pop
pop
fs
xchg
push
shl
imul
scas
pop
xorb
xchg
cmc
xlat
subb
xor
add
mov
inc
mov
dec
sti
xlat
test
inc
cmp
push
jb
mov
push
popf
aam
mov
arpl
xchg
nop
out
and
pop
movsb
test
mov
aam
mov
dec
outsb
dec
jb
dec
lock
sbb
and
addr16
lock
lcall
arpl
cmpl
filds
push
or
and
and
int3
scas
int3
test
imul
ljmp
or
jmp
addr16
sbb
dec
or
xor
mov
dec
xchg
cmpps
je
or
inc
lcall
lahf
cmp
es
je
and
and
sbb
shl
dec
dec
jmp
jmp
addb
addl
dec
adc
sbb
mov
mov
mov
and
in
mov
fnstsw
jp
fldl
mov
jo,pn
das
mov
or
jae
add
mov
lahf
imul
outsl
push
insb
mov
shrl
cmp
mov
add
push
notb
sbb
movsb
dec
and
mov
or
lods
dec
faddp
hlt
rclb
cmc
fildl
js
cs
mov
add
or
rorb
out
push
and
dec
in
outsl
cmp
call
repnz
adc
fstps
call
pop
shll
fadd
subl
push
pop
sub
add
mov
sar
dec
push
stc
stos
movsb
ds
leave
lcall
leave
gs
inc
in
out
and
ja
in
hlt
inc
inc
js
mov
insb
icebp
cwtl
dec
jae
lods
mov
adc
cltd
pop
aaa
sbb
push
push
adc
cmp
movsb
sbb
aam
jecxz
sbb
and
pop
cmpsl
sub
les
jle
sub
cmpsb
pushf
jle
enter
push
add
push
mov
jno
xchg
fdivs
lds
iret
and
dec
pop
popa
mov
pop
jp
sub
push
gs
imulb
jae
xlat
stc
add
fdivr
popa
mov
sbb
les
and
jne
cmp
icebp
orb
hlt
imul
inc
sti
cld
in
cmp
loopne
jo
add
cwtl
lods
nop
mov
pop
sti
push
mov
mov
fistpl
pop
push
mov
lods
xchg
add
fimuls
push
iret
dec
ss
mov
xchg
daa
xor
xchg
imul
jecxz
mov
or
push
pushf
outsl
sbb
cmpsb
xchg
and
ss
imul
cmp
mov
pop
rcrb
push
mov
pop
pusha
repnz
push
mov
hlt
push
in
xor
cmp
popa
mov
imul
jmp
addl
jae
and
test
iret
or
hlt
mov
jp
mov
cmp
jp
lea
lret
sub
sti
dec
std
movsl
shrb
inc
cmpl
xorb
stos
mov
les
out
scas
dec
lret
sub
dec
xchg
inc
push
fisttpll
fsubrl
mov
int3
xchg
mov
pop
add
addr16
or
push
rcr
jecxz
sarb
or
pop
aad
jp
adc
lahf
cwtl
jmp
sbb
aaa
xchg
mov
jle
popa
sbb
push
aaa
imul
stos
xor
test
cmpsb
cmp
int3
loop
inc
iret
push
fwait
inc
test
mov
call
xchg
mov
cmpsb
push
mov
dec
lds
jbe
push
ret
jmp
pop
std
sbbb
xor
xor
mov
les
stc
dec
mov
mov
add
stos
leave
xor
scas
cmp
sbb
or
jl
in
imul
and
xchg
xchg
aaa
and
out
and
cwtl
negl
hlt
iret
cmp
out
pop
test
aad
adc
xor
orb
jg
mov
rcrl
push
lret
data16
pop
mov
pop
sub
aad
inc
arpl
xor
or
and
push
fisttpll
cmpsl
and
mov
jno
sbb
or
add
mov
jp
int3
push
mov
ds
loop
inc
cmp
jg
or
dec
mov
jno
pop
lods
lock
je
mov
je
sub
in
jbe,pn
js
scas
mov
push
xor
pop
inc
lock
mov
mov
mov
pop
addr16
push
mov
into
das
je
aad
push
bound
push
mov
inc
fldenv
cmp
sub
rcrl
sub
mov
push
stos
xlat
aaa
insb
ficomps
xor
sbb
cmpsl
sbb
popf
ja
mov
sbb
dec
flds
mov
inc
xor
aad
mov
jle
xchg
push
rclb
out
xorb
xor
into
cmp
mov
mov
or
cmp
inc
icebp
loope
ficomps
add
roll
mov
and
jo
push
sub
imul
mov
mov
out
jle
jbe
push
sahf
addr16
mov
xor
daa
or
pop
divl
stos
mov
add
imul
testl
adc
and
test
and
clc
mov
sbb
enter
cmp
cs
inc
data16
jae
setne
pushf
mov
comiss
ds
pusha
sbb
icebp
in
stos
xchg
sbb
pop
push
jbe
cmpl
arpl
mov
insl
aam
fcom
repz
lock
inc
scas
sbb
into
push
insb
out
fcompl
leave
jb
fs
xchg
push
jo
xor
hlt
outsl
xchg
scas
bound
jge
jns
outsl
mov
and
inc
jmp
cmp
adc
insb
sahf
mulb
fsubrs
mov
dec
sbb
push
sbb
aad
leave
fcoml
or
cmpsl
xorl
or
cli
hlt
js
ss
out
jle
sbb
mov
testb
loopne
push
es
mov
push
lcall
cmp
xor
cmc
pop
xor
sbb
fdivrl
mov
leave
insl
clc
out
mov
fsubs
inc
add
adc
and
add
pop
cld
cmp
and
shrl
jmp
popa
clc
and
scas
mov
sahf
adc
std
adc
decb
in
sti
iret
notb
dec
push
cmp
aaa
mov
jge
dec
leave
xchg
mov
nop
sub
cmpsl
pop
xchg
insb
xchg
addr16
push
lods
inc
mov
pop
in
pop
cld
testl
cmp
dec
cmpsl
pop
xchg
insb
xchg
addr16
push
lods
inc
mov
pop
in
pop
cld
testl
cmp
xchg
insl
inc
jl
mov
cmpsl
lods
inc
mov
pop
in
out
cld
jecxz
mov
cmp
in
pop
xorl
ss
lods
inc
lret
inc
inc
scas
and
adc
add
loope
icebp
in
addb
and
xor
popa
adc
add
inc
xor
mov
loope
icebp
jecxz
repz
ret
mov
xor
pusha
adc
fs
inc
and
mov
loope
icebp
jecxz
repz
ret
mov
xor
add
pop
or
dec
or
lea
xchg
mov
mov
jmp
cmp
mov
into
ficoms
cmc
sub
xadd
push
jl
xchg
ja
enter
aad
sbb
fs
adc
inc
cltd
lods
pusha
pop
sarl
adc
sbb
mov
jp
jb
inc
pop
push
cld
addr16
ret
cli
sub
out
mov
cmc
hlt
adc
cmp
mov
xor
icebp
inc
push
push
xor
cs
or
jle
lock
adc
jno
mov
cwtl
mov
les
stc
sbb
xor
cmp
pop
cmp
pop
push
sti
adc
mov
jb
inc
and
into
std
shll
jecxz
repz
ret
mov
xor
popa
adc
add
inc
and
in
fisubrl
pop
mov
lds
aaa
dec
pusha
xor
push
jne
push
pop
push
pop
push
mov
test
lahf
aam
not
lahf
inc
and
and
push
and
fs
xchg
inc
push
gs
sub
xchg
mov
mov
xchg
ret
mov
xor
popa
adc
add
inc
and
mov
loope
icebp
jecxz
repz
ret
mov
xor
popa
adc
add
inc
and
mov
mov
adc
int3
push
dec
push
inc
dec
xchg
adc
ljmp
std
and
fdivrp
inc
fnsetpm(287
stc
in
push
push
lret
inc
adc
cmpsb
lahf
hlt
xlat
outsb
cmc
adc
add
cmc
ss
fs
jnp
sbbb
fistps
in
or
inc
filds
and
mov
inc
push
cmc
imul
frstor
or
mov
imul
popf
xchg
mov
test
sbb
xchg
lret
pop
mov
sub
imul
inc
jbe
or
xlat
and
sub
mov
iret
add
in
sub
hlt
outsl
test
arpl
inc
xchg
xchg
xor
es
jl
inc
inc
lds
push
jl
push
repnz
mov
xor
or
mov
and
divb
loope
xor
sbb
fwait
push
mov
test
pop
push
sbb
stc
jg
fcmovne
cs
or
fwait
pop
dec
jo
in
test
pushf
sub
out
into
call
inc
sbb
adc
dec
subl
in
rclb
sbb
lret
out
inc
aad
pop
mov
pop
dec
lahf
xchg
xor
mov
dec
add
push
dec
lock
fsts
std
sub
fs
hlt
sbb
sarl
aaa
adc
ja,pn
insl
arpl
mov
subl
scas
adc
cli
cmp
push
div
sbb
nop
call
out
dec
repz
jmp
nop
lea
dec
roll
std
iret
sub
dec
cmp
fnsave
scas
loope
dec
lds
in
and
std
pusha
add
sbb
lea
cmp
inc
aam
sbb
ficompl
call
push
fcomps
xchg
lods
mov
sti
mov
jno
pop
sbb
jge
lret
jb
jb
sub
fmulp
out
mov
enter
mov
mov
addr16
int
mov
dec
jo
and
dec
mov
add
mov
dec
das
nop
adc
jecxz
add
pop
inc
push
fdivs
cmpsb
rclb
xchg
lahf
push
or
sub
stc
rcrl
stc
stos
cmc
cmp
lret
push
enter
aaa
mov
stc
jae
sbb
data16
cmp
or
loop
mov
fcompl
lds
mov
iret
or
adc
mov
mov
lahf
pop
adc
push
push
inc
jge
movsb
fsubs
jno
xor
mov
aas
subl
or
ljmp
mov
mov
sbb
xor
cmp
pop
inc
xchg
rclb
sbb
bound
pusha
in
xor
mov
push
jg
leave
adc
dec
ds
xor
push
fcoms
xor
cmp
inc
imul
sbb
cwtl
jp
jl
rolb
xchg
or
pusha
aam
or
jno
sub
dec
or
enter
and
inc
xchg
clc
add
push
jb
lahf
mov
push
mov
sub
shll
pop
leave
xlat
add
loope
repz
adc
mov
xchg
aas
scas
enter
pop
fldl
in
pop
mov
dec
imul
dec
adc
xor
mov
and
or
lcall
jl
pop
pop
iret
dec
mov
ja
scas
hlt
sub
add
imul
insl
fldcw
add
pusha
iret
push
mov
mov
outsl
decb
cmc
ljmp
jg
out
mov
ljmp
outsb
ja
dec
scas
lret
mov
cmpsb
scas
dec
push
mov
xor
or
icebp
pop
ljmp
les
fwait
shll
sbb
jp
or
cs
fwait
mov
add
mov
lcall
out
mov
and
mov
imul
call
ret
popf
in
lret
out
pop
mov
dec
and
ljmp
mov
in
enter
imul
push
fidivl
push
mov
das
cld
rorl
stos
sub
jns
dec
stos
popf
sbb
cmpsl
loop
push
sub
dec
xchg
mov
jne
or
and
sbb
xlat
adc
dec
lcall
xchg
adc
add
lcall
ds
xchg
roll
cmp
ret
mov
xchg
stos
ret
jns
inc
pushf
dec
nop
ret
dec
adc
test
mov
cld
mov
add
mov
gs
nop
loop
jp
int
adc
jmp
adc
repnz
inc
sti
mov
push
ljmp
call
xchg
dec
xchg
xchg
lahf
and
dec
std
adcb
pop
cmp
aas
jge
cmp
scas
xor
int
cwtl
or
mov
fwait
jg
dec
xchg
mov
add
sub
xchg
mov
or
cmpsl
xor
icebp
jns
stc
inc
std
lods
cmp
test
sahf
cmpsl
shlb
ret
or
mov
jecxz
dec
sbb
and
mov
ss
aam
mov
push
sbb
mov
mov
lret
test
je
sbb
xor
lret
mov
loope
mov
sbb
inc
mov
sbb
sti
adc
add
scas
jbe
inc
fidivs
fwait
rcl
dec
gs
push
mov
push
es
mov
xchg
pop
call
jp
dec
push
pop
test
icebp
leave
xlat
pop
pop
ficomps
cmp
and
dec
mov
jge
dec
daa
mull
pop
sahf
pop
in
inc
dec
push
shrl
mov
mov
lock
mov
mov
ficoml
in
in
nop
dec
and
aas
adc
and
mov
jp
call
in
add
sbb
orb
repz
data16
fwait
and
nop
jg
xlat
cltd
mov
mov
shl
int3
jecxz
out
hlt
scas
and
mov
movsb
sbb
add
mov
mov
fstl
or
lods
fidivl
ds
js
shl
shlb
push
and
inc
fstps
mov
icebp
movsb
daa
adc
and
cmp
test
cmp
cmp
cmp
fisttps
iret
or
sub
je
mov
sbb
insl
sbb
cli
or
and
xchg
out
add
imul
test
pop
and
sbb
and
cmp
adc
lods
decb
adc
jmp
fistpll
lds
call
fs
shll
push
inc
jmp
int3
sub
add
add
loopne
je
cld
xor
mov
xchg
inc
jae
sahf
stc
ret
and
and
xchg
push
jle
sub
mov
pop
inc
sbb
fstl
pop
stos
fs
pop
test
dec
fnstcw
ds
lcall
ljmp
adc
or
cmp
jmp
sbb
popa
shl
ljmp
outsb
mov
jmp
push
loop
es
out
ret
mov
push
or
scas
test
testb
pop
aaa
dec
mov
daa
aam
notb
test
cmpsb
es
sub
pop
or
ficoml
inc
das
jmp
ret
popf
lock
jl
mov
push
mov
out
xchg
out
ret
fstpl
addl
sbbb
cs
push
pop
mov
adc
or
cmp
iret
cmp
lock
mov
push
pop
clc
mov
fidivl
imul
xchg
or
and
stc
push
cmp
loope
push
scas
imul
lods
in
addr16
xchg
imul
in
add
sti
jae
mov
jge
push
mov
push
push
dec
xorl
jg
arpl
fst
adc
jge
inc
testl
iret
inc
lea
int3
out
xchg
sub
xor
popf
mov
mov
lcall
cmp
adc
loopne
adc
mov
mov
lret
test
push
mov
mulb
xor
enter
sbb
sahf
test
cmp
adc
and
or
lahf
dec
pop
out
sub
inc
mov
dec
mov
adc
stos
fsub
jae
loopne
push
in
cmp
cmp
shrb
inc
jne
mov
jl
adc
out
lods
adc
scas
ljmp
rol
and
cmpb
shl
jg
loope
jbe
fiaddl
sbb
cmp
cmp
xor
pusha
xor
int3
xor
bound
push
shlb
mov
sbb
xchg
push
es
in
pop
movsl
ja
lea
js
mov
insl
inc
dec
cli
sbb
mov
pop
mov
mov
les
int3
add
stc
jnp
pop
cmpsl
xchg
movsb
sub
xor
movsl
rcll
xchg
jnp
out
pop
popf
ret
bound
or
mov
loop
lea
dec
movsl
jecxz
mov
out
jne
arpl
mov
js
cmp
xchg
push
aaa
int3
adcb
fadds
ljmp
jecxz
fadds
push
xchg
adc
loop
jecxz
in
std
adc
push
stc
pop
loopne
out
ds
hlt
and
sbb
icebp
xlat
mov
sti
sbb
fidivrl
bound
jne
lret
lret
mov
inc
dec
mov
adc
in
lret
mov
lods
jb
test
push
pop
mov
add
into
jno
mov
fwait
and
fbld
dec
add
dec
mov
std
jmp
sbb
sub
out
pop
jns
adcb
scas
mov
add
stc
sbb
pop
fcmovnb
or
aas
xor
lahf
jg
out
mov
mov
mov
mov
jge
cmp
mov
or
cmpsb
enter
aad
hlt
cs
sbb
shll
sub
jmp
pop
aad
xor
aam
adc
icebp
fwait
cs
ss
aam
shrl
xor
movsl
js
jnp
xorb
sbb
loope
mov
pop
adc
ds
loopne
orb
cmpl
xor
push
mov
xchg
push
sub
jp
jns
mov
push
lock
lahf
cmc
push
ss
adc
adc
mov
sub
lods
fisubrs
loop
enter
jo
cwtl
push
stos
repz
stc
jg
xchg
jp
shll
xchg
sbb
pop
push
ss
sbb
movsl
adc
or
xor
mov
lahf
xor
jbe
insl
cmp
jnp
rclb
repnz
out
cltd
das
ss
js
jae
adc
mov
cmp
sahf
sub
outsb
fsts
dec
cld
pop
cmpsl
xchg
jl
cmp
or
xchg
dec
xchg
mov
mov
mov
mov
lret
mov
aad
sbb
xchg
pop
scas
sahf
jbe
jae
jnp
push
arpl
pop
mov
push
inc
stos
dec
inc
rcll
xlat
pop
cli
fnsave
stos
push
add
dec
add
adc
cmc
pop
lcall
fcoml
jl
frstor
cmp
rorl
aaa
fiaddl
or
scas
adc
fistpll
sub
sahf
mov
xchg
mov
notl
ss
lret
into
pop
inc
loope
push
repz
push
or
in
mov
shlb
sub
jae
cmp
arpl
movsb
mov
mov
jb
negb
rcll
and
cld
mov
loop
movsb
stos
mov
and
and
jae
movsb
inc
adc
dec
nop
fistl
sub
outsl
mov
pop
inc
sub
lcall
negl
sub
sar
out
fucomp
ret
mov
orb
fisttpl
sbb
daa
jmp
add
inc
mov
test
and
test
xor
shrl
adcl
enter
int3
mov
cmp
mov
jle
mov
add
xlat
dec
andl
testb
jo
sub
imul
fiadds
xor
jle
fadd
iret
sti
add
push
fisttps
loopne
int3
push
cmpsb
nop
cmpl
xor
cmp
stc
pop
push
sahf
or
xchg
gs
pop
sub
out
cmp
add
lea
mov
sbb
notl
xor
and
jle
adcl
je
aad
push
and
dec
mov
aas
adc
inc
iret
leave
mov
fbstp
mov
jne
mov
mov
sub
jg
xor
cli
cmp
shrb
mov
lods
add
jne
inc
mov
pop
cmp
mov
xor
faddp
arpl
cmpsb
mov
mov
sbb
cld
xor
xchg
shrb
sub
push
jle
cmp
scas
pop
mov
fldcw
jae
dec
pop
xchg
test
xchg
inc
in
into
fninit
addb
movsl
into
pop
aad
dec
js
and
dec
cmp
nop
jns
nop
arpl
cmpl
call
xor
clc
xor
outsb
cmp
dec
jne
jnp
in
out
enter
rcrl
cmp
mov
xor
or
call
xor
pop
repnz
out
inc
dec
adc
jno
testb
inc
dec
clc
lock
out
xchg
cmp
jno
cmp
xlat
jno,pn
ds
mov
ja
lock
out
arpl
xchg
cs
xchg
rcrb
or
adc
mov
clc
jno
out
shrb
pusha
dec
xchg
add
and
imul
cwtl
std
syscall
incl
push
dec
out
add
sub
mov
cmp
push
pop
fcoml
sbb
cli
jmp
clc
adc
cltd
test
pop
jnp
mov
faddl
cmpsb
push
cmp
jno
adcb
dec
dec
sub
sub
iret
bound
adc
jmp
mov
adc
cmp
push
jnp
ror
mov
push
xlat
jbe
mov
xchg
inc
add
stc
iret
out
jne
mov
in
shrl
pop
lods
sub
and
out
lods
and
in
ret
loopne
pop
mov
lods
je
and
adc
cli
or
jmp
cs
enter
imul
adc
push
clc
js
inc
xchg
or
mov
mov
pop
faddl
leave
mov
jge
sbb
out
cmpsb
mov
rcrl
fdivl
iret
aam
mov
pop
mov
loopne
lods
add
pop
shlb
ss
enter
lret
fldt
mov
xchg
push
popf
xchg
add
mov
jns
iret
incb
insb
call
jno
ljmp
jbe
cwtl
mov
fldt
cld
movsb
pop
and
jecxz
into
bt
rol
addr16
xor
cmpsb
xchg
or
xchg
ja
push
outsb
push
mov
jle
push
jno
pushl
xchg
jmp
incb
fcom
pop
ljmp
mov
es
add
scas
je
out
mov
xchg
mov
jnp
loope
pop
cld
imull
push
js
push
or
push
adc
in
sbb
mov
and
pop
pop
add
and
shll
sbb
jmp
loop
aas
decl
adc
into
xor
sub
loop
imul
dec
mov
in
jmp
call
shlb
pop
pop
jmp
xchg
call
mov
lds
loop
clc
loop
mov
fsubs
lods
insb
sub
push
std
xchg
jns
ss
stos
mov
cmpsl
push
mov
and
push
std
mov
mov
cmp
test
xor
test
outsl
cmpsl
sahf
and
fs
outsb
es
fdivrl
fbstp
or
jne
add
xor
jecxz
stc
add
add
stc
stos
push
repz
loop
xchg
lcall
xor
lahf
stc
inc
pop
push
sahf
test
fidivrl
unpckhps
cmpl
push
mov
lods
add
mov
dec
dec
xor
mov
outsb
loope
stos
mov
cmp
lret
adc
adc
cmc
adc
js
out
or
or
gs
test
mov
icebp
cmp
je
dec
call
inc
adc
sub
mov
popl
xchg
lods
jl
lock
jge
inc
jo
mov
fidivl
sbb
xor
inc
enter
add
lret
cmp
or
dec
push
xor
add
xlat
nop
loop
mov
pusha
ffreep
int3
mov
mov
jbe
sbb
push
mov
movsb
fwait
loop
ret
jbe
inc
mov
add
std
scas
ss
and
test
and
mov
movsb
outsl
mov
adc
inc
xchg
sbb
in
ficoms
jae
pop
popa
cmc
mov
push
stos
cmp
fbstp
and
mov
ret
movsb
into
jb
pop
sub
hlt
jle
or
cmp
cld
ja
shll
sub
call
in
pop
mov
xchg
adc
pop
adc
pusha
sub
stos
imul
nop
pop
test
add
xchg
jle
mov
jmp
popf
jle
cmovle
js
mov
dec
aad
or
inc
pop
orb
cmp
movsb
outsl
push
fistpl
mov
adc
lret
arpl
fnstenv
cmovne
addb
sbb
add
fistps
andps
adc
add
cmp
insl
push
adc
rorl
xor
mov
nop
test
lock
pop
subl
mov
push
ljmp
mov
jge
sbb
in
nop
cmpsb
push
rol
out
pop
jmp
scas
push
mov
out
jge
lods
cs
ja
push
sti
jp
cltd
insb
out
sti
add
call
or
sub
jg
adc
sub
and
outsb
inc
mov
in
push
fnstenv
xrelease
icebp
or
mov
out
aam
loope
dec
lret
stos
gs
sahf
lahf
daa
mov
gs
fcmovne
out
sahf
jecxz
add
sub
out
push
stos
sbb
es
in
jl
adc
sbb
outsb
cs
rolb
mov
enter
mov
in
packsswb
push
lcall
scas
add
insb
cmp
xor
and
mov
mov
mov
add
and
push
mov
sbb
nop
jnp
cld
loopne
mov
mov
or
in
addr16
out
push
rep
push
pusha
insb
push
mov
popf
sbb
or
push
cli
add
rorl
sar
out
sbb
ds
jne
lock
pop
xchg
add
dec
scas
sub
je
sbb
sbb
xor
dec
stc
add
hlt
push
cmp
scas
adc
add
sub
lret
test
adc
ret
sbb
sahf
ds
fwait
cmp
bound
xor
adc
mov
in
cld
xchg
add
lock
insb
dec
adc
inc
and
xchg
sub
inc
movsb
adc
xchg
nop
jnp
out
jmp
xchg
les
loop
inc
out
into
stc
mov
sti
insb
sub
rcl
subl
pop
jecxz
xor
add
and
int3
jno
cmp
or
inc
das
popa
addl
inc
cmp
xchg
in
push
jnp
dec
push
xchg
sti
in
bound
pop
pop
icebp
xlat
les
loope
xor
jl
ljmp
fistpl
xchg
mov
lods
inc
movsb
lea
push
dec
mov
fldt
int3
repnz
adc
sbb
inc
jmp
or
mov
xchg
pop
inc
ret
push
rcll
jne
repnz
sub
inc
xchg
imul
shrb
add
imul
or
ss
jg
xchg
push
xchg
and
xchg
lahf
xchg
call
insb
je
or
leave
add
push
aas
call
xchg
iret
lds
mov
xor
repnz
and
fbstp
pop
jmp
cltd
adc
js
test
mov
pop
daa
jge
dec
push
xor
dec
and
aad
stos
dec
pop
mov
xlat
jg
fnsave
lods
sub
scas
aaa
movsb
or
mov
std
sbb
sub
push
jbe
xor
dec
cli
mov
int3
rorl
cmpxchg
mov
pop
or
out
jl
cmp
pop
into
imul
cmp
mov
xor
mov
inc
xor
popa
adc
add
inc
and
mov
loope
icebp
jecxz
repz
ret
mov
xor
popa
adc
add
inc
and
mov
loope
icebp
jecxz
repz
ret
mov
xor
popa
adc
add
inc
and
mov
loope
icebp
jecxz
repz
ret
mov
xor
test
mov
out
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
insl
shl
loope
icebp
mov
fdivs
gs
jae
add
xor
rcl
in
cmc
icebp
test
mov
adc
inc
jne
add
and
shll
xor
xchg
cwtl
fisttpll
inc
mov
adc
and
ja
xor
cmpb
rorb
aas
mov
jbe
push
fisubrl
daa
fsubrp
push
sub
leave
pushf
adcb
or
mov
xor
rol
mov
addb
xchg
lds
mov
in
rcl
lea
les
hlt
cli
adc
xor
loope
roll
dec
push
adc
scas
jne
mov
xor
sub
sbb
xor
insl
loope
std
mov
int3
add
jno
imul
xor
loope
cmp
mov
dec
cmp
inc
lods
inc
fs
popa
adcb
pusha
fisubs
in
cltd
jmp
adc
test
pop
dec
mov
sbb
push
and
movsb
mov
lock
loopne
mov
aam
and
adc
xor
insb
jnp
push
and
lds
ds
in
repnz
mov
jge
adc
add
jo
push
dec
je
mov
out
xchg
xorb
mov
push
push
gs
jne
add
and
shl
loope
icebp
test
mov
inc
inc
push
push
gs
jne
add
and
push
dec
shrb
lds
in
inc
jmp
jge
jnp
cmp
xchg
xchg
jge
into
adc
out
adc
fstps
or
cwtl
fwait
xor
pushf
dec
mov
cwtl
cmp
testl
push
push
aaa
pop
adc
repnz
jmp
insb
out
sahf
mov
ja
int3
shll
in
ret
aam
mov
loop
sub
fistpll
mov
lahf
lods
fcoms
mov
daa
and
arpl
outsb
hlt
sbb
mov
sahf
js
mov
movsl
or
jbe
inc
push
xlat
mov
push
add
add
rcrl
pop
mov
jae
jmp
dec
cmp
aas
mov
jmp
sbb
jecxz
or
push
inc
out
arpl
je
stos
std
mov
pop
repnz
daa
aas
xlat
or
insl
mov
and
loope
scas
pushf
in
sbb
frstor
mov
outsl
push
adcl
xchg
enter
cwtl
xor
mov
es
mov
int
dec
pushf
jge
and
add
xchg
xchg
cld
test
cmpsb
ljmp
push
inc
add
jns
sub
pusha
cld
jno
xor
repnz
mov
sbb
and
adc
lret
pop
es
sbb
or
jp
out
jbe
cmc
add
fcmovbe
ret
push
inc
xchg
xchg
jne
mov
scas
push
data16
test
pop
dec
in
adc
hlt
out
push
bndstx
xchg
loope
shll
push
aam
inc
mov
mov
rcrl
mov
and
in
int
in
cmp
clc
pop
dec
sbb
push
cmpsl
dec
ret
mov
sahf
pop
and
jbe
push
push
sub
cmp
dec
rcrl
push
clc
out
mov
pop
sahf
jo,pn
or
in
dec
jmp
cmp
sbb
cmovl
mov
inc
cmc
pop
adc
clc
mov
xchg
lcall
leave
mov
daa
dec
data16
fst
fdivrl
arpl
mov
add
jg
mov
repz
adcl
cmp
icebp
xchg
int3
cli
mov
pop
call
iret
jge
in
int
ret
mov
bound
lods
push
jo
push
add
je
add
sbb
or
mov
hlt
je
ja
loop
sub
jae
icebp
mov
jp
add
repnz
fisttps
sti
sbb
imull
outsl
inc
lods
mov
pusha
cmp
xchg
xchg
mov
ljmp
int3
cld
jnp
dec
enter
pop
and
pushf
mov
or
ret
mov
mov
pop
jo
fsubrl
mov
xchg
xor
dec
mov
jmp
push
dec
or
mov
mov
adc
div
jns
mov
push
xchg
sbb
cmc
pop
xchg
xorb
cmp
fldcw
cld
mov
aad
outsl
push
in
mov
jae
jmp
test
pop
push
mov
push
jl
jae
lret
loope
das
add
rcl
ffree
pop
cli
xchg
jg
add
pop
test
jne
or
adc
icebp
in
xor
push
xlat
fsts
xchg
dec
lods
jne
ss
pop
movsl
push
jp
mov
push
add
dec
shl
pop
jmp
push
mov
aaa
loope
jo
stc
fidivrl
or
lods
and
mov
xchg
cltd
mov
push
jae
jne
insb
insb
enter
test
mov
cwtl
out
sub
sti
jge
jp
pop
sti
jne
cmp
arpl
adc
rcrb
das
mov
popf
pushf
aaa
adc
pop
cs
dec
xchg
jl
sbb
adc
cs
adc
scas
daa
inc
mov
inc
inc
xchg
fdivr
xchg
mov
into
jne
push
xorl
push
inc
jnp
mov
outsb
sbb
cmp
shlb
in
in
add
xchg
pop
mov
push
gs
or
shlw
test
loop
add
jne
jge
jne
or
aam
call
fs
push
pop
xchg
cltd
mov
mov
mov
decb
add
sahf
call
cmp
push
cmpsl
fwait
je
fisttps
shrl
int
dec
add
shrb
sub
mov
loop
dec
jmp
jne
ret
sub
dec
adc
or
lock
and
adc
push
ss
mov
es
push
popa
sub
sarb
cld
outsb
test
xor
rcrb
add
jnp
push
sbb
insl
sbb
movsb
or
fs
daa
sarb
xchg
enter
add
cwtl
cmc
adc
outsb
sub
and
pop
or
stc
xchg
shll
mov
movsl
xchg
add
inc
insb
scas
xchg
idiv
aaa
mov
sti
add
icebp
les
pusha
add
jg
dec
xor
jmp
adc
es
pop
cld
ss
cmp
and
je
in
std
add
jmp
push
lds
pop
xor
mov
out
pop
jno
ljmp
cmp
adc
mov
jle
outsb
lods
sarb
jnp
shll
add
add
in
vpsadbw
jnp
xchg
push
pop
aam
ss
das
xchg
add
test
addb
jae
and
or
stos
adc
and
and
xchg
outsl
fldt
out
cltd
movsb
icebp
xchg
mov
push
push
rcrb
loope
xchg
fs
cmp
sbb
sub
movsl
dec
add
dec
jg
ret
jge
cmc
mov
mov
mov
or
out
jo
xchg
jmp
xor
int
mov
inc
pusha
cmp
xchg
dec
sbb
mov
icebp
popa
xchg
push
ds
fstps
icebp
fcmovnb
ror
cmpl
sarl
xchg
sub
test
push
xor
add
xlat
fisttps
test
push
and
jmp
xchg
push
orl
cld
and
mov
dec
ljmp
sahf
pushf
and
dec
stc
add
das
and
push
jae
xchg
repnz
sbb
mov
mov
mov
mov
imul
nop
dec
mov
fidivs
scas
aas
dec
ds
icebp
add
dec
mov
lret
insb
loopne
imul
jb
add
jbe
push
lds
lock
dec
and
fldenv
cli
or
ret
movl
xchg
cld
adc
jl
push
loope
nop
cmpsb
rcll
sbb
jae
cld
sbb
xchg
cmp
mov
aaa
fmulp
movsl
out
inc
addr16
mov
mov
pushf
inc
xchg
and
push
push
cmpsl
scas
add
sbb
push
mov
ret
cwtl
or
xor
daa
mov
pop
loopne
addr16
loop
clc
pop
out
cli
mov
pop
aaa
inc
out
inc
push
lds
stc
mov
sub
mov
add
jmp
jnp
xor
mov
ljmp
loop
sarl
imulb
mov
xlat
jle
xor
sbb
test
and
std
jle
xor
inc
add
leave
cmp
sub
insl
js
insl
sarl
and
mov
into
jb
shlb
mov
add
pusha
cmc
cmp
mov
mov
les
pop
lea
jmp
sbbl
fistpl
ud0
mov
pop
lcall
and
push
pop
xchg
test
mov
inc
mov
movsl
outsl
add
test
xchg
or
mov
rcrb
jbe
clc
popf
fsub
repz
std
out
adc
stc
out
js
mov
sbb
sub
jo
loop
inc
lahf
bound
mov
ljmp
jno
fidivl
fstpt
add
pop
xor
cwtl
movsl
das
mov
inc
test
es
pushfw
stc
paddusw
or
sbb
jb
jb
mov
jp
enter
push
lods
add
addr16
mov
cmp
cmp
mov
cmp
out
mov
jp
stc
fs
add
js
call
push
fimull
or
fcmove
jg
or
cmp
dec
cs
mov
sbb
sar
mov
mov
jmp
xor
pop
js
mov
adc
sti
cltd
in
mov
repz
push
xchg
popa
push
shr
in
mov
and
mov
testl
mov
movsb
lret
divl
jno
adc
and
cmpsb
xor
xchg
aas
gs
fdivs
fstpl
sub
aas
cmp
mov
sbb
test
in
xchg
push
add
into
imul
lret
lock
push
bound
lcall
sub
push
addr16
pop
mov
xorl
jnp
mov
inc
or
xor
jnp
fidivl
loop
dec
xchg
rorl
mov
nop
movsb
iret
xchg
out
adc
and
scas
dec
mov
cmp
xchg
pop
ret
adc
ret
sub
lcall
notb
addr16
js
xor
in
add
cwtl
xor
call
mov
add
and
cmpsb
xchg
icebp
inc
jns
jle
jbe
ljmp
and
dec
push
dec
jo
clc
loop
sarl
ror
jl
in
repnz
test
mov
lock
in
imul
pop
sub
xchg
sub
rclb
clc
mov
xor
dec
cmpb
xchg
jp
in
cli
pop
xchg
dec
adcl
push
jp
clc
jne
lahf
leave
into
add
das
scas
mov
scas
pop
mov
mov
pusha
leave
jo
mov
aaa
fisubrl
out
add
int
mov
xchg
adc
idivl
bound
pop
push
jae
and
das
out
dec
cmc
lahf
jb
jg
push
int3
lret
mov
sbb
lcall
push
mov
add
mov
cmp
mov
jmp
jle
mov
xor
sub
add
ret
cltd
addr16
and
mov
dec
insl
movsb
imul
les
pop
jg
or
push
pop
push
mov
push
loope
cmpsb
push
xchg
mov
push
xchg
push
sbbb
push
jge
push
cld
adc
stos
fildl
mov
xchg
ret
rclb
mov
mov
mov
xchg
mov
les
lret
push
shll
in
push
add
mov
dec
jecxz
out
cmp
inc
xor
shl
mov
xor
sub
jbe
add
jge
test
call
pusha
jl
mov
sub
pusha
push
xor
movsl
or
lret
stos
fbstp
stos
outsb
xchg
push
rol
xor
sti
mov
out
sbb
and
rolb
and
mov
imul
addr16
jmp
cmp
sbb
movsb
pusha
dec
dec
ljmp
xlat
and
imul
in
xchg
mov
mov
dec
add
add
pop
mov
in
xchg
aam
sub
pop
adc
fcoml
leave
ficoms
inc
adc
loopne
pop
adc
push
jl
sbb
sbb
test
ret
lods
lahf
mov
push
mov
cs
or
mov
mov
xchg
fimull
enter
dec
and
xor
sbb
inc
add
mov
jmp
mov
or
outsl
push
push
jno
pop
cld
jmp
or
gs
inc
mov
imul
cli
inc
xchg
pop
bound
and
mov
test
mov
jo
sub
xor
cmp
and
aam
cld
arpl
mov
repz
fsubr
fsubl
xchg
aam
sub
out
mov
sub
fldt
popf
mov
xchg
lds
dec
pop
xchg
pusha
cmp
push
push
faddp
push
pop
jo
mov
daa
mov
jnp
adcb
mov
jmp
push
adc
mov
inc
adc
popa
xchg
imul
outsb
iret
js
cmp
adc
nop
add
dec
mov
aas
movsb
sub
insl
sub
pop
mov
stc
mov
std
mov
mov
dec
hlt
cs
repnz
repz
dec
jmp
sub
jmp
mov
popf
adc
adc
add
sti
inc
inc
movsb
adc
pop
aaa
stc
ss
add
psrlq
test
jmp
or
addl
iret
adc
sub
jns
adc
aad
jb
push
xchg
jbe
test
sahf
je
push
pushl
insb
push
out
push
mov
push
xor
jg
sbb
mov
jg
inc
negb
or
out
pop
clc
or
sti
pop
xor
lahf
xchg
ja
and
push
dec
aas
push
movsl
dec
or
mov
add
cmc
mov
mov
push
xorb
xchg
cmp
insb
lds
inc
adc
jle
mov
je
sbb
jb
into
dec
pop
stc
xlat
rcll
cmp
cltd
xor
sbb
and
cmp
xor
gs
add
or
hlt
adc
cmp
sbb
sub
and
iret
lret
call
sub
jp
or
mov
inc
dec
cmp
mov
pushf
mov
faddp
loopne
in
jge
mov
lock
push
outsb
mov
mov
sub
les
mov
imul
cs
push
dec
shlb
dec
jecxz
data16
sub
sub
mov
imull
ds
ret
dec
push
push
out
and
add
lahf
clc
outsb
pop
int
popf
xchg
ret
jns
int
out
lods
xchg
dec
lea
popa
add
mov
bound
jg
int3
iret
mov
arpl
mov
xor
pop
dec
cwtl
fs
cmp
fisttps
imul
lods
pop
push
cltd
jo
and
inc
fiadds
sub
imul
and
mov
mov
mov
pop
sub
mov
ljmp
mov
xor
shlb
push
and
mov
cmp
push
inc
imul
or
idivl
rolb
jecxz
inc
xchg
push
jle
subl
dec
mov
lods
and
mov
mov
loop
cmp
ret
adc
xor
xor
pop
dec
jg
bound
stos
xchg
xlat
nop
pop
jl
inc
pop
jg
ret
pop
push
sbb
push
mov
sub
mov
pop
or
pop
mov
mov
das
sbb
jns
insb
inc
xchg
mov
mov
jl
push
popf
stc
cmpxchg
mov
in
push
subb
sub
scas
dec
xor
mov
mov
and
dec
or
mov
jle
pop
add
ficomps
push
sub
je
dec
test
cmp
add
dec
sti
cmp
jl
mov
cmpsb
es
nop
data16
repnz
sar
xchg
mov
mov
aad
out
outsl
jb
sbbl
mov
js
js
xchg
sub
mov
xchg
dec
sahf
shrb
jle
dec
xor
pop
out
stos
inc
inc
and
out
ja
jne
xor
or
dec
fs
dec
push
and
and
daa
cld
push
pop
mov
roll
sub
ss
mov
and
xchg
mov
sbb
cmp
sub
adc
lock
push
adc
or
sub
jl
mov
rcll
sarb
andb
cltd
fstpl
xor
mov
insb
or
bound
out
popf
mov
call
pop
fldt
sub
and
test
loop
cmpsl
int3
add
ret
lods
mov
mov
xchg
inc
loope
repz
test
and
dec
notl
ficompl
xor
in
ja
sbbl
pusha
jo
sub
pop
sub
xchg
cmpsb
xlat
insb
xchg
aam
xchg
adc
icebp
mov
repz
popa
mov
fld
pop
and
xchg
fimull
daa
mov
or
jle
cmp
mov
xchg
and
add
sbbl
xchg
daa
adc
mov
adc
scas
mov
jo
call
cmp
pop
xor
jle
pop
ja
sbb
xchg
in
das
arpl
fisubrs
lret
push
pop
cs
leave
stos
push
jno
pop
sbb
addl
dec
aam
sarb
mov
lahf
out
mov
mov
shrl
inc
ret
sbbl
jmp
fistl
jge
and
lret
call
sti
dec
lea
mov
test
inc
mov
jmp
orl
add
stos
insb
mov
or
lock
add
sbb
adc
inc
adc
popf
xor
stos
repnz
aaa
mov
xchg
stos
cld
mov
push
test
inc
mov
dec
mov
sbb
push
pushf
inc
outsb
cmp
lea
mov
stos
pusha
xlat
or
jg
sub
mov
sub
jb
stos
xchg
orb
pop
add
sbb
adc
push
xchg
sub
inc
dec
test
sbb
mov
subb
es
pop
and
and
ss
cmp
ret
mov
add
jecxz
les
jne
leave
sahf
loope
rcll
inc
mov
aas
push
xlat
sbb
inc
sahf
cltd
enter
test
cs
inc
popa
in
pop
das
sub
or
call
jo
mov
pop
imul
mov
in
push
jbe
xchg
imul
fs
out
cmpsb
leave
push
mov
dec
movsb
leave
jno
shrl
cltd
cli
xchg
jbe
in
popa
pop
cmpsb
and
xchg
and
fiadds
fs
rorb
arpl
xchg
testb
shl
or
test
push
or
push
cwtl
push
push
xchg
sub
bound
or
dec
outsl
xor
push
cmp
arpl
mov
inc
jb
cmp
sub
sahf
cli
outsb
mov
jg
or
cmpsb
jl
les
mov
lods
mov
xor
cmpsb
mov
jg
and
push
adc
push
mov
in
push
push
or
shrb
adc
mov
test
fisttpll
push
pop
xchg
xor
and
lret
rcll
or
push
mov
mov
sub
pop
sbb
leave
pop
mov
jns
pushf
mov
inc
out
bnd
jmp
sbb
dec
fwait
les
sub
jp
cmp
push
mov
in
into
cmpsl
and
mov
lahf
lods
das
imulb
test
inc
leave
adc
shlb
mov
cli
dec
pop
nop
aam
adc
sbb
les
jnp
ds
pop
cmp
inc
not
jecxz
lods
ljmp
adcl
aam
and
add
daa
xor
mov
mov
xchg
dec
inc
lock
push
inc
push
inc
in
mov
cmp
adc
movsb
pop
jmp
sub
mov
das
push
std
xchg
mov
cmc
inc
cmp
insl
sbbb
push
out
xor
outsb
stos
pop
out
inc
push
and
mov
rcl
and
sbb
xor
push
push
dec
in
or
push
or
dec
sub
out
sti
aas
les
or
push
pop
mov
fists
call
les
mov
sbb
and
mov
jmp
pop
mov
inc
xchg
cmp
jne
in
adc
cmpsl
add
aam
mov
xor
xchg
or
inc
pop
sbb
pushf
cmp
cwtl
xor
pop
push
xlat
aas
pop
mov
rcrb
shlb
dec
mov
cld
movsl
imul
mov
pop
add
das
push
imul
push
mov
in
cmpb
mov
add
jmp
push
test
in
dec
das
pop
add
rclb
push
inc
jmp
cltd
adc
imul
lds
mov
sub
xrelease
das
jle
mov
xchg
sub
push
popf
jmp
dec
sub
sub
in
lcall
mov
out
pop
cmpb
add
call
mov
push
data16
les
xlat
gs
loope
loop
add
ret
bound
clc
flds
mov
xchg
pop
out
push
add
mov
enter
je
cmp
sbb
jmp
inc
enter
sti
sub
sbb
inc
lret
push
movsl
inc
inc
ss
cmp
add
fisttps
mov
xchg
ja
lahf
jnp
icebp
xchg
push
testb
inc
lods
imul
pushf
scas
cmp
fistpll
cwtl
into
into
pop
sub
and
add
test
jecxz
roll
jmp
mov
fs
mov
enter
dec
sub
adc
sub
repz
add
sbb
nop
cmc
xchg
test
ljmp
jmp
adc
ss
cli
cltd
cmpsb
fs
adc
push
je
jnp
clc
pop
and
push
pop
popf
sti
rcll
mov
cli
lret
movsb
out
add
sbbb
fcoms
dec
cmp
aam
pusha
pop
adc
insl
sbb
adc
idiv
or
xchg
push
jmp
xchg
movsl
mov
push
push
gs
jne
add
and
shl
loope
icebp
test
mov
inc
inc
push
push
gs
jne
add
and
shl
loope
icebp
test
mov
inc
inc
push
push
insb
popa
jno
add
and
shrl
test
xor
sti
iret
popa
jne
jb
popf
out
fcmovu
lret
mov
data16
lods
int3
es
gs
xor
rol
mul
out
xchg
addl
push
ja
data16
add
popf
and
inc
rol
xchg
loope
icebp
xchg
out
xchg
push
roll
jbe
data16
cmp
es
push
mov
mov
out
clc
xchg
aad
mov
inc
inc
aas
cmp
and
ss
lds
and
sbb
in
out
add
lret
inc
add
daa
int
add
in
mov
in
subl
mov
inc
push
jns
pop
pop
adc
sub
dec
xchg
push
mov
mov
jecxz
xchg
addl
push
add
jns
fisubl
into
add
jbe
aad
cmpsb
dec
lods
loop
push
mov
hlt
and
xor
es
nop
xor
inc
in
cld
jo
dec
testb
into
popa
loopne
sub
adc
loop
xchg
mov
inc
mov
push
add
adc
sti
es
inc
pop
div
out
xchg
lods
xchg
mov
add
and
pop
push
jne
jle
dec
inc
push
mov
xchg
sbbb
loopne
rorb
add
adc
add
push
jae
bound
ss
pop
pop
test
xchg
fst
cmc
fucom
sarb
adc
gs
adc
and
xor
rol
mul
out
xchg
addl
push
jbe
data16
add
adc
and
xor
rol
mul
out
xchg
addl
xchg
ret
gs
or
jp
add
pop
xchg
jecxz
subl
add
dec
daa
fbld
movsl
int3
xlat
inc
js
dec
cmc
out
lret
test
add
fstl
scas
imulb
xor
adc
adc
fs
or
fwait
adc
mov
call
shrl
cwtl
lret
mov
scas
dec
and
xor
or
sbb
mov
cli
xchg
mov
scas
in
cmp
fnsave
fimuls
bnd
rcr
fdiv
sub
jo
mov
pop
mov
aad
popa
adc
aaa
shlb
mov
lahf
mov
sti
add
stos
xchg
adc
sub
inc
into
mov
mov
xor
pusha
xor
add
psubsb
push
mov
xchg
aam
dec
pop
rolb
mov
sub
inc
xchg
jns
inc
clc
cmp
sub
and
test
mov
shlb
sbb
test
cmc
or
push
mov
rcrb
mov
jns
xchg
ja
test
addl
loope
xchg
idiv
arpl
arpl
icebp
push
cmp
inc
jne
jae
popa
data16
xchg
sahf
ja
push
insl
adc
imul
add
xchg
xor
pop
push
clc
sbb
or
insb
push
fbld
int
outsb
aad
arpl
das
in
repz
xor
cmp
mov
or
pop
lahf
jecxz
jge
shrl
cld
in
lret
jbe
xchg
push
or
mov
repz
adc
and
and
test
jne
cmp
pop
add
lret
mov
fstps
add
rcrl
push
adc
push
mov
jmp
mov
pop
inc
fidivl
loopne
jg
fbstp
xor
add
js
int
ffree
adc
or
rol
add
or
in
call
rorb
insl
int3
xor
fcmovnbe
sub
adc
add
dec
mov
mov
add
mov
mov
push
pop
in
mov
clc
push
cltd
inc
and
in
dec
xor
and
push
arpl
jmp
xlat
shll
popa
cli
outsl
and
sbb
sub
mov
das
int3
es
mov
add
cmc
jle
imul
inc
fstpl
or
fwait
int3
and
push
mov
cmp
inc
dec
adc
fcom
mov
jns
scas
leave
in
cwtl
sbb
inc
je
out
movsb
out
in
pop
push
jno
mov
mov
lock
or
adc
repnz
mov
gs
xor
insb
test
das
cmp
and
nop
dec
sarb
adc
xor
cmpl
lea
pusha
xor
mov
popa
sub
pushf
dec
inc
mov
jo
lds
mov
jecxz
sbb
imul
mov
jae
sbb
in
loop
mov
inc
or
int3
pop
and
add
test
je
cmp
dec
mov
or
dec
stos
scas
test
inc
sub
int3
xor
adc
mov
sub
arpl
sahf
xor
mov
pop
push
idivl
outsb
sub
sarb
dec
fisubrl
xchg
mov
and
mov
or
sarb
fstl
mov
sbb
push
xor
mov
adc
hlt
xchg
cmp
mov
ds
test
jp
shlb
aas
mov
xchg
sahf
dec
jb
cltd
xor
lret
sub
test
sti
aad
push
cmpsb
imul
pop
adc
xor
and
and
aas
sbb
push
jb
fisttps
add
mulb
lock
call
stos
std
jmp
cld
and
sbb
js
aaa
movl
movsl
or
aad
mov
pop
idivb
sbb
xor
and
stc
adc
addl
fstpl
movsb
mov
addr16
jle
pop
and
push
add
sahf
sub
in
push
xor
push
aas
add
push
pop
in
add
icebp
push
dec
adc
lods
jns
sarl
mov
sub
jb
stos
in
cld
pop
mov
leave
les
aam
push
cmp
and
inc
in
daa
dec
mov
icebp
aad
insl
test
data16
enter
jae
out
sub
inc
lods
dec
rcrb
cmp
sub
push
xor
in
push
in
sbb
out
out
sub
stos
cld
xchg
loope
push
pushl
inc
ja
push
subb
loop
jbe
cld
push
fwait
hlt
or
mov
jge,pn
sbb
jns
or
mov
test
daa
sbb
xlat
aad
adc
mov
xchg
lret
sbb
pop
int
inc
iret
jecxz
int3
add
and
enter
outsl
sub
mov
jnp
jnp
xor
mov
imul
xchg
nop
insb
pop
cltd
jo
aam
cli
mov
in
ljmp
adc
and
sub
push
inc
mov
ret
push
div
test
jge
and
mov
test
push
or
lahf
je
or
adc
test
cmpsb
cld
cmp
shlb
out
jle
xchg
outsl
loope
sub
pop
mov
cli
test
inc
mov
pop
ficompl
adc
pop
lods
inc
xchg
jmp
insl
cmp
dec
jbe
cmc
pop
push
push
fwait
inc
lods
xchg
cli
lods
add
jp
mov
cmpsb
push
or
imul
dec
xor
clc
in
jle
cld
pop
inc
inc
push
or
pop
mov
jmp
mov
adc
ret
inc
lret
rcll
fstps
dec
mov
mov
mov
cs
repnz
dec
dec
loope
dec
dec
les
mov
lods
cli
or
xchg
aaa
mov
mov
bound
jo
dec
jmp
and
add
mov
adc
stos
dec
xchg
jb
and
xchg
cmp
lret
cmp
jb
inc
mov
aam
in
pop
mov
mov
jmp
dec
push
mov
xor
sub
push
and
jbe
inc
insl
dec
sub
mov
int
mov
pusha
ret
fsubs
dec
push
dec
pusha
repnz
mov
mov
push
xor
push
pop
fimuls
sti
fistps
or
xchg
or
adc
push
aam
cld
push
outsb
clc
jge
pop
dec
mov
rolb
arpl
lahf
popf
xchg
pop
push
adc
jp
fbld
push
test
shlb
sbb
push
pop
jecxz
int3
insl
movl
adc
sbb
jo
inc
das
inc
or
xor
mov
pop
xchg
aad
cmp
push
xor
cmp
pop
aaa
das
out
std
cs
sbb
les
data16
or
in
rcll
fdivrl
aas
inc
adc
xchg
cmpsb
js
mov
pop
hlt
sbb
out
inc
sbb
or
fwait
sbb
fbld
test
jl
sub
or
jo
pop
cmc
out
pushf
and
add
or
push
pop
mov
inc
leave
add
cltd
add
scas
sti
cmp
and
cmpb
xor
or
fcmovnu
jns
int
sbb
into
mov
xchg
dec
and
xor
pop
xchg
cwtl
sbbl
cmp
arpl
cmp
out
lods
gs
lea
add
pop
sub
dec
push
loopne
and
cmp
and
clc
jno
pushw
push
movsl
mov
sub
aas
sbb
lea
insl
outsl
shr
loope
cld
cmp
faddl
lret
stos
sub
pop
xchg
fs
mov
lea
mov
dec
daa
pop
out
inc
cs
adc
or
dec
lcall
adc
mov
mov
les
jmp
jns
inc
or
in
jmp
mov
and
mov
add
sbb
mov
in
out
fsubrs
xchg
push
out
cmpsb
mov
insl
adc
jae
mov
cmp
or
mov
mov
mov
sub
ret
out
xchg
adc
lds
jns
inc
pop
push
inc
pushf
scas
pop
jl
ret
jle
inc
sub
or
sub
or
push
das
fmull
sbb
nop
insl
cmpsb
mov
fsubr
rorb
cs
pop
pop
or
xchg
or
mov
mov
mov
push
push
jns
cmp
dec
jmp
ret
mov
push
lret
ret
xor
ljmp
pop
mov
rep
call
mov
iret
xchg
mov
cmpsb
sbb
jecxz
inc
je
or
lds
fs
push
cld
int3
xchg
lcall
mov
pop
repz
mov
incb
jb
dec
or
inc
dec
add
jecxz
jns
scas
jle
and
xchg
mov
push
fildll
xchg
cmp
ja
addr16
out
cmp
xchg
int
adc
in
jecxz
pop
pop
les
lret
loope
inc
aaa
movsb
stos
pop
xchg
pop
in
xchg
or
lods
push
insb
or
jl
ja
mov
jbe
jmp
push
fstl
xchg
add
test
dec
jns
jo
push
negb
enter
lods
xchg
inc
pop
xchg
jbe
pop
xlat
jno
jns
push
or
aad
clc
xor
push
jmp
je
push
dec
push
sti
sti
jle
ret
sbb
pop
xchg
lahf
sub
push
icebp
sub
mov
test
sub
cmc
push
cmpb
or
out
frstor
jp
out
mov
insb
ja
shll
sub
test
out
inc
enter
mov
pusha
jmp
mov
rolw
dec
into
cmpsl
test
adc
outsl
je
lea
dec
mov
iret
cmp
outsl
add
mov
push
pop
sbb
push
cld
js
addr16
xchg
jnp
shll
in
pop
dec
test
jge
out
jmp
jno
out
add
jle
xchg
jae
or
mov
loop
push
leave
mov
ret
mov
push
dec
inc
and
mov
cwtl
adc
icebp
lret
jbe
pop
mov
pushf
mov
or
adc
fnstcw
cmp
andb
aaa
or
mov
push
ss
stc
sbbl
arpl
pop
movsb
leave
add
xchg
fstpt
jbe
fs
sub
mov
pop
or
mov
in
fld
bound
pop
ficompl
cltd
aad
popa
movsb
or
mov
scas
jnp
fwait
jmp
clc
ffree
ret
aad
fcmove
std
inc
mov
lcall
push
add
jae
stos
sbb
and
jb
pop
test
daa
or
adc
sbb
lea
mov
cmp
pushf
and
cs
sbb
cmp
xor
xchg
jecxz
rcll
and
imul
xlat
imul
mov
loope
fidivs
imul
lret
pop
clc
sbb
rorb
jg
stos
sub
clc
lds
adc
imul
cwtl
mov
cmpsl
xchg
loope
mov
fcoms
lcall
push
fwait
pop
es
push
scas
out
imul
xor
pop
in
les
pop
push
stc
popf
inc
jbe
into
xor
fsubp
fstpl
jl
push
hlt
fs
pop
xorb
mov
pop
out
inc
in
add
sarl
shl
push
push
iret
push
mov
enter
adc
push
cmp
std
xlat
jae
int
int
cmp
icebp
int
mov
dec
push
fwait
cmp
movsl
add
movsb
insl
pop
jg
or
pop
mov
mov
jns
mov
fadds
lods
fcomps
mov
dec
xor
cmp
lock
aas
in
fistl
int
sub
mov
test
add
aad
out
test
sbb
mov
and
cmp
mov
cmp
in
dec
jp
loop
mov
cmpsb
out
jae
pop
dec
add
xchg
sub
xor
sbb
rorl
stc
dec
daa
pushf
and
jb
das
add
dec
aam
popa
cmc
and
mov
sbb
and
mov
dec
jne
push
jmp
cmp
cmp
push
fcompp
sub
popf
das
cltd
data16
cmp
orb
dec
test
inc
sub
pushf
mov
aas
mov
xchg
add
sbb
adc
mov
add
or
inc
cs
mov
mov
or
aaa
jle
or
jmp
cld
cmp
xchg
aad
shrl
adc
xor
pushl
fisubs
add
jno
push
jl
fldenv
add
inc
xorl
insl
or
xor
nop
jbe
adc
xchg
in
sbb
or
mov
dec
test
adc
jl
iret
mov
pop
adc
push
fwait
out
jl
add
xor
mov
ds
aaa
ljmp
mov
mov
leave
jno
icebp
jge
daa
mov
and
xchg
punpcklbw
ret
add
push
mov
test
out
jge
dec
cmp
jbe
loop
pop
xor
sbb
mov
imul
mov
rcrb
dec
mov
popa
movsb
aas
xlat
dec
sbb
jmp
scas
es
and
jbe
mov
repz
aam
lret
xchg
enter
shr
rcrb
pop
fldt
xor
jns
aaa
inc
pop
addr16
imull
test
rcr
dec
jo
and
sub
daa
outsb
call
shll
sbb
jne
test
or
jno
fs
mov
jne
dec
jmp
cltd
dec
xor
pop
mov
int3
and
jle
jp
push
sbb
popa
xor
ds
test
cmp
stos
mov
add
je
into
sti
rcrb
xor
rcrl
adc
sub
jbe
scas
pop
pop
ljmp
ss
xchg
jge
int
mov
repz
dec
daa
cltd
adc
cmp
add
mov
ljmp
aam
xchg
and
mov
cwtl
mov
push
in
pop
xchg
adc
mov
aas
fimuls
pop
push
std
inc
ljmp
adc
or
inc
mov
lahf
fstpl
gs
dec
mov
mov
iret
and
sbb
inc
cmpsl
shll
xor
icebp
xor
fucomp
push
inc
cmp
cmpb
and
cltd
xorb
ja
xchg
push
into
loopne
xchg
aaa
aaa
in
loope
inc
xchg
cmpsl
mov
scas
push
stos
sbb
cwtl
xchg
push
aas
or
test
testl
cmpsl
in
xlat
push
in
add
outsl
dec
out
mov
xor
xor
push
jne
xchg
or
fidivs
add
inc
sub
cmp
dec
dec
push
and
adcb
ja
shll
mov
stos
cmp
hlt
ret
enter
cmp
push
inc
xor
loop
rcrl
sub
xchg
xor
pop
aas
fneni(8087
sarl
jge
push
mov
testb
fidivrs
lahf
iret
int
das
shlb
fwait
dec
sti
test
xchg
sbb
xchg
add
mov
insb
sbb
int3
xor
mov
mov
outsb
shl
sbb
or
jno
sub
xchg
mov
fistpll
dec
movsl
cld
out
js
push
lret
mov
adc
shrl
lahf
add
pop
push
jno
cmc
test
ror
mov
int
pop
mov
xlat
repz
pop
jb
cmp
adc
int3
pusha
in
addb
sub
xor
aas
ret
sbb
jno
dec
leave
stc
ss
sbb
push
mov
imul
add
add
mov
mov
and
popf
push
push
lods
lret
jbe
in
decb
in
cld
push
stc
sub
push
call
arpl
imulb
test
xor
xchg
push
add
loopne
push
lret
lods
add
jge
dec
lcall
stos
add
scas
mov
arpl
dec
out
jo
ljmp
ljmp
outsb
cwtl
mov
addr16
xchg
jl
mov
fwait
imul
jmp
popa
adc
xor
xlat
lret
or
call
inc
cmp
jo
and
pushf
xchg
les
sub
aad
ja
cmp
xchg
xlat
xorb
arpl
and
jbe
mov
pop
movsb
das
xor
jge
adc
out
push
mov
rcrb
cmpb
mov
adc
ret
mov
orl
dec
xchg
adc
mov
loope
adc
jg
push
mov
aaa
in
rcll
sahf
push
mov
xor
inc
repz
push
inc
or
sbb
push
adc
sub
sub
xchg
mov
sti
ret
add
adc
ljmp
lods
daa
lret
test
jae
jg
add
icebp
repz
inc
inc
xor
ljmp
xchg
or
add
mov
mov
push
lret
inc
arpl
mov
aas
push
ja
ja
sbb
sbb
andb
xlat
cmp
je
cmpsb
fdivl
les
fdiv
int3
rcll
test
fwait
test
popa
sub
xlat
loop
lock
mov
dec
xlat
mov
lret
xchg
cmpsl
sbb
loope
dec
pop
movsb
adc
mov
aad
jp
add
sbb
ja
mov
jo
or
add
add
loope
jae
leave
pop
imul
mov
arpl
shrb
das
xchg
or
out
adc
mov
sub
jo
daa
jle
dec
iret
test
push
adc
push
ret
lret
cmp
lret
mov
dec
aam
lcall
insb
jnp
push
repz
ja
lret
or
mov
jle
and
leave
jne
sahf
inc
cli
enter
inc
and
pop
and
adc
sub
js
sbb
add
xchg
hlt
or
stc
mov
jne
mov
fstpt
cmpsl
or
mov
mov
inc
pop
sbb
jle
jmp
in
aas
pop
ret
xchg
in
out
cld
mov
incl
aas
push
pcmpgtb
sub
or
xor
out
adc
in
pop
and
push
out
leave
xchg
out
repz
and
in
insb
xchg
pushf
jno
out
lock
ja
movntps
and
cmp
sqrtps
scas
aam
std
loope
cmp
push
sub
sbb
outsb
dec
pop
ss
push
dec
lds
test
cmp
push
gs
loop
xchg
cmp
cmovb
mov
iret
repnz
mov
pop
lods
das
pop
mov
or
inc
inc
add
lock
xchg
xchg
das
out
xchg
mov
stc
inc
ret
in
mov
aad
insb
mov
jae
dec
test
xchg
push
push
add
inc
push
xor
or
out
and
ljmp
imul
cli
test
inc
test
subl
shl
adc
test
fists
fisttpll
mov
sbb
inc
push
rolb
stos
xchg
mov
cmp
cmp
icebp
pop
xchg
js
cmpsb
or
push
ret
fs
xor
inc
aad
js
jne
lods
stos
mov
mov
es
sahf
mov
mov
pop
jp
xor
cmpsb
fwait
ret
shrb
push
push
movsb
cli
mov
adc
sub
xorb
ja
addr16
xor
gs
out
xchg
les
dec
and
shll
xchg
jb
jmp
fimuls
add
adcl
pusha
call
imulb
inc
sar
xchg
aas
pusha
sub
cld
dec
mov
cmp
sbb
loopne
jne
mov
mov
sub
inc
pop
adc
jge
mov
jb
jmp
push
mov
adc
sbb
xchg
push
jle
shl
sbb
mov
xor
hlt
jmp
mov
inc
pop
xchg
xchg
pop
aaa
mov
std
and
pop
pop
jbe
test
push
and
sbb
jp
push
pusha
mov
fpatan
shll
adcb
insb
dec
jl
jp
mov
popa
roll
inc
add
push
pop
xor
in
xor
subl
pushf
cwtl
pop
mov
sbb
mov
mov
cmp
inc
sub
jno
out
pusha
sti
sbb
fidivrs
push
repnz
mov
ljmp
mull
ljmp
and
push
sbb
xchg
sti
pop
mov
xchg
push
pop
ja
int3
xor
xchg
sbb
movsb
ret
dec
gs
or
add
ljmp
add
out
sbb
loope
sbbb
rolb
test
fnstsw
cltd
lock
push
and
xchg
and
and
add
and
adc
int3
fimull
fcmovnbe
mov
data16
add
adc
and
xor
rol
mul
out
xchg
addl
push
jbe
data16
add
adc
and
xor
rol
mul
out
xchg
addl
sbb
data16
add
mov
sbb
shl
loope
icebp
xchg
addl
push
ja
data16
add
adc
mov
jnp
loope
xchg
or
outsb
dec
pop
pop
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lds
mov
das
bswap
inc
dec
int3
add
add
push
add
add
add
pop
add
add
add
inc
add
rolb
add
add
inc
add
add
add
add
add
add
add
jns
mov
roll
add
add
add
add
nop
add
add
add
mov
jbe
mov
addl
mov
pop
add
add
js
addb
add
add
add
or
rolb
dec
add
add
add
xchg
add
add
add
add
add
xchg
add
add
inc
add
add
add
or
add
push
add
add
sub
add
test
rolb
or
scas
add
add
add
and
fldl
pop
add
dec
add
add
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
sub
add
add
add
add
inc
add
add
add
stos
add
mov
aam
int
pop
add
inc
add
add
add
add
and
leave
add
add
add
add
insl
add
pop
add
add
add
add
dec
add
add
xor
push
add
add
sahf
add
add
add
add
add
add
add
add
push
add
add
add
out
arpl
in
or
insl
add
add
add
add
push
add
outsl
add
add
add
add
add
insb
add
inc
add
add
add
add
insb
add
add
add
add
add
sub
addb
add
add
add
add
add
inc
add
add
add
mov
dec
add
add
add
and
cmp
imul
in
add
add
aaa
add
add
lock
add
xchg
add
outsb
add
mov
jns
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
je
xchg
add
adc
push
add
rolb
add
add
add
add
add
or
add
add
add
add
add
insb
add
add
inc
add
add
add
add
add
jecxz
and
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
roll
add
add
add
sub
add
add
int
pop
add
add
add
add
add
xor
dec
add
add
filds
and
mov
jl
out
and
and
add
add
or
fldl
jno
enter
movl
or
add
add
add
addb
add
add
or
cmp
addb
add
add
add
add
add
add
cmp
pop
add
add
add
sub
add
add
lods
add
add
jl
add
enter
xor
roll
add
test
add
dec
cmp
sub
je
dec
pop
vpsubw
xchg
dec
push
pop
inc
pop
sbb
inc
lds
mov
mov
loope
cmc
scas
xor
sub
sub
popa
cmpsb
mov
insl
xor
mov
negl
push
and
xchg
push
movsb
cmp
mov
aam
pop
sub
nop
les
mov
push
dec
shll
jbe
push
das
push
scas
or
out
xchg
jns
mov
loop
push
in
fisttpl
xchg
sarb
jno
mov
popa
into
sub
loopne
leave
mov
push
iret
mov
test
dec
ss
dec
inc
lahf
jge
push
enter
mov
ja
or
xchg
movsb
xchg
adc
in
pop
lcall
xchg
in
push
shlb
pop
sbb
mov
xchg
lods
xor
iret
xor
in
int
popa
dec
push
xchg
and
test
mov
int
insb
iret
mov
mov
fstl
in
pop
ret
cltd
call
test
jge
dec
add
mov
mov
xor
test
lahf
scas
mov
xor
sub
cmpsl
xorl
adc
mov
xchg
dec
xlat
and
bound
jo
mov
scas
sbb
cmp
mov
inc
shlb
pusha
scas
mov
shll
lods
scas
xor
mov
scas
mov
xor
faddl
dec
ljmp
test
mov
jp
call
dec
out
mov
addl
mov
adc
scas
popa
xor
inc
das
push
mov
bound
int
mov
mov
or
fildll
add
aaa
lret
daa
insb
shll
sub
mov
jns
fbstp
and
or
xchg
jmp
and
pop
jnp
shll
js
mov
sub
cmp
bnd
loop
hlt
push
mov
pop
push
push
push
pop
jecxz
and
adc
pop
sbb
sbb
lcall
xor
rcr
mov
arpl
outsb
pop
cmp
cld
lds
mov
ret
or
add
fnstcw
aas
loopne
pop
pop
ficompl
and
jge
pop
jae
add
xor
push
popw
mov
enter
in
inc
lea
dec
mov
movsl
out
popa
sub
pop
popa
mov
jle
lcall
push
pinsrw
int3
adc
mov
ret
mov
inc
sbb
and
cltd
aas
push
mov
push
faddp
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
