adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
push
int3
inc
fdivl
gs
adc
mov
mov
cmc
insb
in
xchg
or
sbb
sub
cmp
int3
inc
fcompl
in
gs
adc
lods
and
pop
xchg
insb
in
aad
test
int3
mov
out
mov
pushf
sub
jg
push
sbbb
inc
stc
dec
cmp
or
adc
aaa
xchg
scas
imulb
stos
movsl
push
or
cmpsl
mov
push
cmc
mov
jns
mov
mov
cmp
sbb
mov
pop
insl
stos
int3
add
add
inc
sbb
pop
push
jmp
loopne
in
test
rcrb
sub
stos
ljmp
inc
aam
lds
push
test
mov
movsl
cmp
push
mov
lea
cmc
mov
adc
xchg
mov
sbb
sub
ret
fcoms
cld
fwait
mov
lret
stc
out
rorl
xchg
adc
or
dec
mov
cmpsb
sub
int3
adc
jne
gs
icebp
mov
xor
dec
pop
pop
subl
or
sbb
sub
push
cmp
aaa
popf
add
sbb
cmc
inc
ljmp
nop
or
jns
push
shlb
and
jl
pusha
rol
lds
mov
xchg
and
in
ljmp
mov
xchg
adc
ss
inc
mov
and
pop
cmc
insb
in
xchg
or
sbb
sub
cmp
int3
inc
fdivl
gs
adc
lods
and
pop
cmc
insb
in
xchg
or
sbb
sub
cmp
int3
jecxz
mov
movsl
ds
in
jae
and
xchg
sub
sbb
shlb
insb
xchg
add
dec
adc
scas
xchg
sbb
iret
aas
mov
fadd
std
outsl
inc
dec
dec
sti
mov
mov
jae
cmp
in
add
pop
in
out
data16
cltd
sti
jnp
xor
xchg
and
ror
rcr
cmp
xchg
jne
std
test
cmpl
jb
js
mov
add
xor
sub
mov
repz
js
cmpsb
sbb
movsb
nop
mov
mov
xor
pop
dec
inc
mov
ret
xchg
fldcw
pop
mov
or
cmpsl
jns
sarl
mov
xor
and
out
cwtl
loope
lcall
jae
fidivs
sub
test
outsl
out
mov
xchg
mov
nop
mov
mov
and
movsl
enter
dec
inc
push
subb
and
movsb
sbbl
out
and
outsb
fs
sub
adc
fcomip
testl
mov
cmp
repnz
fildll
or
jecxz
test
push
and
int
jo
mov
dec
test
push
mov
and
push
push
ss
cmp
push
pop
in
cmp
lret
adc
dec
add
or
in
clc
rcrl
add
roll
adc
cmp
jle
sub
sbb
or
test
jbe
xchg
out
mov
xlat
ficomps
xor
testl
mov
push
pop
bound
cmpsb
pushf
lret
or
iret
add
fnstcw
fcmovnbe
sbb
cltd
mov
fimull
push
wrmsr
jg
cmpsl
ja
add
add
push
fs
imul
hlt
arpl
rol
int
lea
mov
mov
out
pop
arpl
xchg
xor
out
les
ja
cmpsb
or
push
call
xor
sub
lea
insb
popa
into
sahf
clc
outsl
inc
test
div
add
nop
cli
in
mov
cwtl
cld
lock
rorb
jmp
and
cld
out
loope
xlat
xchg
xchg
jo
lds
cmc
pop
sbb
je
xchg
cmp
movsl
adcb
sub
aam
add
add
sub
xor
hlt
cwtl
push
imul
cld
or
test
mov
popa
push
sbb
sarl
sub
pop
mov
pop
rolb
test
adc
insl
or
xor
mov
xchg
inc
rclb
pop
xor
mov
mov
lds
outsb
rcll
cwtl
stos
test
adc
adc
fs
lock
out
jbe
sti
cmc
into
cli
stos
test
stc
mov
inc
push
ret
loopne
mov
mulb
insl
fwait
sbb
push
ret
mov
mov
jnp
in
scas
stos
jmp
cmp
mov
lods
pop
js
out
and
mov
not
add
ljmp
fwait
jns
pusha
movl
pop
fadds
pushf
jbe
xchg
out
or
pop
ljmp
cmp
mov
xor
xchg
idivb
push
cld
popa
pushf
mov
inc
and
ljmp
sub
xchg
lock
add
int3
fimuls
mov
xchg
xlat
mov
lcall
lods
lods
adc
imulb
mov
adcb
mov
test
pop
or
push
lahf
dec
insb
aam
lods
pop
dec
push
jns
aaa
dec
sbb
ss
pop
outsl
pop
mov
sub
rcrl
cwtl
push
jmp
pusha
inc
out
sti
outsl
inc
mov
push
lahf
mov
mov
mov
addr16
movsl
push
fcoms
shr
pushf
pusha
adc
pushf
push
aam
mov
adc
into
inc
cs
jae
mov
pop
or
sub
xor
sub
cli
out
mov
test
sbb
cs
jmp
outsb
inc
clc
pop
aam
dec
sub
loope
fsubl
mov
mov
mov
mov
int3
stos
shrb
jae
popw
dec
std
or
pop
pop
add
lods
sbb
in
addr16
pop
xor
pop
test
or
mov
and
mov
pop
xchg
leave
sub
push
push
adc
pusha
mov
shl
pop
inc
lahf
lock
and
push
cmp
add
pop
mov
loope
mov
add
loopne
jbe
xor
add
leave
shll
or
xchg
fs
ret
inc
jnp
hlt
mov
scas
cmc
imul
mov
xor
psraw
aas
out
push
pop
mov
pop
test
mov
jne
mov
ret
pop
repz
mov
dec
into
add
js
xor
clc
dec
je
dec
xor
xchg
in
xchg
fwait
ds
sub
dec
pop
jne
dec
push
sarl
pushf
lret
lods
addr16
cmp
adc
adc
xor
out
adc
clc
pop
mov
fstpt
add
sahf
inc
ret
out
dec
dec
and
imul
xchg
ljmp
mov
lcall
stos
xorb
mov
sub
xor
jp
xor
push
lock
push
mov
out
mov
mov
sub
fisubs
lret
push
je
push
push
cld
and
or
mov
aam
js
stos
stc
mov
pusha
xchg
push
xlat
add
adc
fldpi
xor
adc
inc
in
repnz
sbb
test
mov
and
xor
adc
aaa
mov
int
cmp
ss
mov
test
adc
xor
mov
jle
ds
iret
mov
data16
and
push
push
inc
mov
les
pop
adc
dec
xchg
sbb
pusha
fildll
adc
aas
dec
adc
dec
inc
jno
push
testb
mov
push
cmp
mov
out
pop
cmp
mov
mov
sbb
inc
push
test
inc
sbb
mov
lret
pusha
jl
pusha
fsubrs
shl
jg
xchg
mov
xor
insb
popf
sub
ret
cmp
testb
lahf
test
pop
or
lahf
call
sub
cwtl
push
mov
sbb
cmp
cmp
cmp
mov
jno
cmp
cltd
pop
cmp
ljmp
xchg
es
inc
inc
jg
pop
push
sahf
sub
outsb
inc
and
mov
fldenv
mulb
push
test
xorl
out
scas
shrb
out
push
jbe
lds
and
sub
loope
ljmp
inc
inc
lea
ret
inc
push
aaa
shrl
loope
jecxz
out
repnz
scas
test
xor
or
popf
jle
lea
loop
and
enter
ljmp
sub
mov
push
push
xor
mov
sub
int
adc
jbe
jno
es
aam
pop
repnz
lcall
mov
or
aas
pop
sahf
jmp
loopne
pop
ret
sar
mov
sub
ja
jns
add
cli
scas
mov
jl
dec
scas
inc
sahf
outsl
or
add
inc
js
dec
scas
mov
inc
jb
push
sbb
mov
test
popa
rcrb
push
decl
sub
call
jmp
cmpsb
aad
ret
mov
rolb
add
fdivs
cmp
pushf
sub
sub
pop
adc
shrl
les
in
inc
cli
js
popf
pop
loope
je
lods
or
xchg
mov
xlat
mov
mov
sbb
sti
popf
or
ljmp
outsb
enter
icebp
xchg
iret
xchg
pop
push
jecxz
pop
pop
lea
adc
mov
sbb
fnstenv
lock
mov
xchg
fstl
lods
inc
ljmp
int3
in
shlb
dec
dec
sub
clc
lock
imull
ljmp
lea
sub
mov
mov
or
adc
add
and
pop
dec
fcomp
lret
mov
adc
push
xchg
fisubs
pop
sbb
out
cmpsl
stos
sub
iret
sbb
mov
jnp
subl
mov
stos
rol
sub
insl
sbb
push
fwait
cld
mov
shrb
into
das
pop
push
nop
in
test
xchg
iret
fisttps
or
call
rol
mov
push
sbb
push
jbe
test
cmc
int
and
loop
icebp
xchg
jb
shlb
add
addr16
add
sub
pop
sub
scas
ds
mov
lods
pop
incb
inc
add
fwait
and
jmp
imul
lahf
adc
mov
sarb
sub
repnz
mov
dec
daa
cmp
inc
rorl
stos
xadd
ljmp
push
dec
ret
and
je
inc
call
push
inc
sub
out
mov
imul
hlt
iret
stos
add
jmp
mov
xor
adc
popa
jmp
inc
and
jg
cmp
jbe
mov
stos
jbe
pop
fldenv
lods
sub
gs
push
push
jge
pop
out
movsb
push
cmc
stos
pop
inc
aaa
cmpsb
mov
scas
add
fimull
lods
hlt
fdivl
cs
lret
push
and
or
addb
rcll
pop
cmp
insb
xchg
xchg
mov
movsb
mov
xchg
inc
shlb
decl
adc
pop
jle
out
out
cmc
pop
xchg
ret
test
ja
cmpsl
or
or
mov
mov
insb
test
and
adc
sub
or
mov
call
int3
cmp
fdiv
mov
add
mov
aas
or
pop
cmpsl
mov
das
jl
jp
je
mov
enter
js
aam
insb
stos
dec
ret
test
or
cltd
arpl
xchg
ja
mov
fcoms
rcl
xor
jb
out
test
out
inc
popf
je
jmp
jb
dec
mov
mov
jmp
xchg
and
mov
pop
add
aas
sub
lahf
fs
pop
push
and
mov
testb
mov
enter
xlat
jb
mov
adc
cli
mov
add
mov
sbb
stos
jmp
jp
push
rclb
popa
pushf
mov
outsl
enter
loope
jecxz
or
popa
push
aaa
jl
ds
sub
push
in
cwtl
pop
insb
sbb
testl
daa
push
adc
cmp
leave
cmp
adc
fisttps
cmpsl
add
data16
push
pop
lods
xor
jl
xor
pop
lahf
jne
cld
push
or
jne
cmp
mov
scas
xor
dec
push
lods
stc
movsl
ficompl
xor
call
mov
test
in
lcall
mov
xor
mov
sbb
inc
xor
mov
push
outsl
test
pop
movsl
movsb
test
pusha
pop
scas
mov
push
dec
mov
clc
fwait
scas
fnsave
cltd
loopne
les
mov
in
mov
iret
or
lahf
int
fcoml
dec
popa
gs
sbb
or
inc
push
or
orl
data16
jbe
and
call
cmp
inc
daa
xor
inc
push
std
cmpl
icebp
lds
roll
jge
stos
mov
out
pop
mov
in
cmp
sahf
and
and
xchg
sub
mov
push
pop
pop
fwait
in
ret
pop
sbb
clc
or
sub
add
jmp
das
or
aaa
mov
jmp
sti
mov
mov
jbe
adc
ret
jnp
movsb
andl
out
lret
orb
push
cld
ret
icebp
arpl
pop
lea
addr16
daa
mov
cmc
pop
dec
and
xor
add
les
xor
xor
add
arpl
mov
mov
bound
add
and
out
and
neg
rcrb
jb
dec
lea
icebp
inc
scas
mov
and
iret
and
fnstcw
mov
jnp
sahf
mov
adcb
cmc
mov
ja
out
out
jecxz
out
sub
inc
adc
mov
imul
insl
sub
push
adc
aaa
inc
mov
dec
repz
sub
cmp
popa
int
popf
cmpsl
test
xlat
or
inc
and
pop
pop
cmpl
jne
cmp
jbe
daa
pushf
adc
dec
mov
pop
je
push
push
jg
xchg
push
adc
adc
xchg
pop
in
out
inc
pusha
daa
sub
add
cmp
ja
jbe
push
push
add
add
sub
loope
and
jo
cli
xchg
and
pushf
mov
stos
imul
lds
sub
sub
mov
mov
cmp
in
rol
leave
lret
mov
cld
sbb
das
push
jmp
mov
push
fmuls
sbb
push
loop
inc
fildll
inc
mov
xchg
adc
push
push
sub
sbb
lcall
dec
xor
push
cmc
jmp
iret
fimull
arpl
mov
ret
jg
scas
clc
fistpl
lods
xchg
cli
sar
cmp
stos
mov
xlat
pop
dec
push
jnp
mov
and
mov
sbb
lods
mov
push
push
fstpl
cmp
rcll
cmp
int
fdivl
mov
xorb
mov
lcall
dec
lret
xor
inc
mov
shll
scas
mov
aaa
inc
mov
pop
fmuls
shl
out
pop
ror
xchg
test
stos
stc
cwtl
cld
sbb
xlat
jne
mov
push
out
xchg
stos
xchg
or
lret
popa
and
je
push
sahf
lret
jne
mov
ljmp
daa
int3
repnz
inc
nop
xlat
pop
ljmp
repz
dec
les
mov
enter
add
outsl
in
aam
adc
sub
cmpsl
cmpsl
mov
xor
push
or
imul
out
dec
imul
push
inc
add
insb
xchg
sub
adc
xor
push
dec
in
jne
mov
insb
xor
push
cmp
sbb
jecxz
and
mov
xchg
cmpsl
mov
pop
std
in
fiadds
insb
inc
mov
sarl
in
js
std
gs
jp
cmpsb
inc
pop
fsubr
pop
mov
dec
in
hlt
test
pop
popf
sbb
adc
and
inc
lea
pop
jnp
subb
xor
in
add
inc
mov
fisubs
push
inc
dec
push
movsw
aam
mov
push
test
insl
mov
addl
jb
movsl
call
mov
push
inc
lahf
stos
data16
jns
xchg
add
mov
adc
inc
lahf
jae
sub
js
es
test
push
scas
sbb
mov
insb
jle
cmp
outsl
iret
sbb
dec
popa
or
pop
aam
loop
xchg
repz
jno
inc
xor
fidivl
push
mov
dec
mov
stos
mov
hlt
push
mov
push
mov
mov
cmpsl
cmpsl
pop
add
sub
or
sahf
data16
jnp
adc
inc
movsb
bound
lods
adc
aad
outsb
add
or
dec
test
push
inc
and
dec
sahf
js
xchg
or
mov
jnp
dec
stc
jo
inc
inc
push
pop
sbb
pop
xor
mov
lret
pop
jp
lcall
data16
jne
cltd
push
dec
aad
and
pop
lahf
cwtl
test
xor
mov
lret
in
pop
imul
cld
push
sbbl
sahf
inc
jg
jmp
daa
js
roll
push
xchg
insb
xchg
add
out
rcr
jb
popf
jecxz
vpsllw
push
loope
inc
out
jle
inc
mov
outsl
sub
lcall
cmp
jns
popa
ficomps
cs
ljmp
sbb
adc
push
mov
cmpsb
xor
xchg
sbb
rol
pop
mov
xor
cs
test
idiv
push
mov
jbe
mov
push
fisubl
pop
shll
ljmp
push
pop
shll
movl
or
popa
leave
bound
mov
mov
and
sub
imul
and
sbb
cmp
xchg
add
fs
pop
cmp
mov
test
xor
jnp
aad
push
lods
jmp
xor
mov
xor
lds
or
inc
outsb
dec
rolb
pop
mov
in
pop
jne
pop
push
or
ja
gs
ljmp
das
inc
sub
cmpsb
adc
xor
cmp
cltd
ret
push
sbb
xchg
xchg
mov
or
dec
cs
lds
inc
rcr
icebp
sub
adc
xor
lret
jp
rorl
cmp
fld
mov
hlt
push
pop
movsl
adc
dec
ret
movsb
aam
dec
ja
pop
jg
cmpsl
cld
aaa
scas
out
dec
or
cltd
push
dec
repz
popf
std
negb
movsb
lcall
pushf
ljmp
or
cmc
inc
fldt
fucom
push
js
das
cli
int3
adc
jp
xchg
fwait
sub
or
ret
aam
jle
pop
mov
hlt
jns
stc
add
pop
cli
movsl
shll
sbb
push
sti
mov
nop
ja
iret
movl
inc
movsb
mov
or
push
stos
inc
mov
jns
and
xchg
xor
popa
scas
divl
outsl
push
dec
sbb
jmp
mov
clc
cmpsl
mov
sti
shlb
lcall
pop
mov
or
mov
jae
leave
pop
js
dec
in
and
inc
jae
push
inc
cwtl
jmp
mov
push
sub
rcll
lcall
lds
and
out
int
in
cmp
lahf
mov
dec
cmp
xor
call
jge
sti
out
clc
xchg
or
bound
fsts
fsubrl
addr16
push
dec
sbbb
dec
mov
xchg
scas
pop
lcall
dec
mov
std
lods
or
insb
mov
jne
shlb
push
jnp
mov
aas
xchg
mov
adc
xchg
push
mov
rclb
dec
add
rcrl
mov
test
ja
test
stos
fsub
mov
cmpsb
cmc
adc
lods
xchg
mov
test
cmpb
cmp
xchg
into
xchg
pop
subl
popa
cmp
push
sub
sub
sub
imul
mov
leave
ja
stos
push
cwtl
test
ljmp
iret
popa
dec
imul
in
mov
adc
or
sbb
mov
dec
nop
pop
std
cli
loop
faddl
cs
loope
lock
dec
xor
jno
mov
and
mov
scas
inc
clc
xor
fwait
xor
loope
fwait
pop
in
push
sub
jmp
loop
jae
ss
rcrb
clc
ret
ret
jge
sbb
out
fnstsw
push
pop
movsb
data16
out
xchg
mov
xor
push
das
mov
inc
push
sub
test
loope
gs
and
inc
fistpll
push
out
sbbl
adc
push
fsubl
jbe
sti
out
cmp
xchg
xchg
insb
push
fdivs
into
xchg
sbb
insb
cli
loop
popa
cmp
adc
stos
sub
push
xchg
cmp
add
lret
or
data16
shlb
aad
sbb
adc
arpl
adc
mov
fst
addr16
out
xor
loopne
ljmp
sub
add
jmp
daa
test
pop
or
and
xor
dec
xchg
arpl
jo
add
out
divb
sub
mov
inc
dec
gs
mov
adc
lods
mov
in
xchg
adc
mov
popf
hlt
mov
add
dec
lret
mov
mov
adc
shrb
repz
push
mov
dec
movsb
test
mov
cmp
shrb
enter
add
dec
mov
js
dec
jnp
push
jge
and
out
lock
cs
and
or
pop
push
pop
pop
cmpsl
rclb
fsubrl
jbe
xchg
mov
sbb
dec
pop
xlat
adc
adc
or
stc
adc
xor
cmp
cmp
cmp
aas
loop
inc
pop
inc
or
jg
mov
cs
mov
loop
int
hlt
sub
inc
loope
aas
dec
mov
mov
and
mov
mov
mov
cmpsb
mov
mov
aam
push
bound
push
cli
pusha
jo
add
call
jbe
add
adc
dec
and
pushf
test
outsb
pusha
sbb
pop
push
faddl
mov
das
cmpsl
jg
enter
repnz
dec
iret
in
cmp
and
addr16
mov
xor
gs
adc
lods
and
pop
cmc
insb
in
xchg
or
sbb
sub
cmp
int3
inc
fdivl
gs
adc
lods
and
pop
cmc
insb
in
xchg
or
sbb
sub
cmp
int3
jne
adc
mov
mov
add
or
sbb
sub
cmp
int3
sbb
das
in
inc
cld
adc
lods
movsl
mov
pop
insb
in
loop
or
ret
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
cmp
faddl
push
xor
cmp
pusha
push
imul
mov
mov
xchg
repz
jl
add
and
and
adc
add
movsb
xchg
in
cli
mov
mov
xchg
mov
jecxz
adc
add
xor
inc
cmp
arpl
cmp
mov
jecxz
mul
xor
pop
xor
xchg
popa
mov
or
dec
outsl
adc
dec
sar
mov
js
xor
fs
mov
jo
sbb
das
xor
or
push
les
ficoms
pusha
xor
mov
sbb
cmp
shrb
add
fldt
push
sbb
sub
adc
xor
cld
push
pushf
loope
mov
les
cmp
jnp
icebp
repz
cld
stos
mov
fmul
push
cmpsl
push
push
dec
loopne
outsl
mov
sub
inc
ret
movsb
aas
les
outsb
icebp
test
push
loope
mov
push
std
orl
adc
les
shl
xchg
loop
adc
xor
and
pusha
inc
adc
mov
orl
mov
xchg
repz
push
jl
add
pop
sub
aas
push
inc
pop
cmp
movsl
testl
ret
mov
adc
push
pop
sbb
js
ja
int3
jmp
divb
mov
test
xchg
lds
and
add
inc
adc
add
hlt
xchg
in
aam
les
xchg
repz
je
add
and
and
adc
add
hlt
xchg
in
aam
les
xchg
repz
je
mov
fs
dec
pushl
movsl
mov
push
sub
data16
aaa
sti
test
ret
es
cmc
aad
ret
xor
and
xchg
xchg
imul
jbe
mov
xchg
iret
orb
inc
push
jmp
mov
loope
mov
dec
fcompl
jb
xchg
and
adc
jno
jmp
mov
sbb
ja
xchg
inc
push
test
ja
mov
xor
cmpsl
leave
and
lahf
inc
xchg
enter
sub
pop
ret
mov
je
repnz
dec
pop
xor
xchg
test
orb
xchg
in
xchg
inc
adc
add
loopne
mov
or
xchg
jecxz
orb
test
lods
cmp
inc
not
and
dec
lea
jae
sub
scas
pop
mov
clc
loope
inc
xchg
fisttpl
xor
add
jne
out
adc
xor
test
shll
xchg
pop
adc
or
in
mov
push
fbld
lods
or
pop
lret
mov
pop
lahf
cmp
pop
loope
fistl
mov
lea
leave
shl
nop
xor
cld
push
jp
sbb
ret
sbb
mov
sbb
in
fisttpl
and
xlat
scas
dec
and
pushf
popf
mov
jbe
imul
outsl
xor
andl
scas
test
cmpsl
inc
stc
xchg
inc
jo
adc
loop
mov
mov
xchg
inc
add
les
imul
js
push
lret
data16
cmpl
xor
adc
stc
dec
mov
cltd
mov
dec
sbb
lahf
test
inc
das
cmp
ss
sub
daa
in
and
sub
gs
mov
and
aaa
xchg
mov
dec
xchg
mov
mov
pop
subl
dec
xchg
js
and
fwait
lahf
sub
cmc
adc
es
mov
jge
adcl
dec
cmpsl
push
add
pop
cmp
push
into
mov
adc
pop
sbb
fiaddl
inc
jl
shrl
cs
jmp
xchg
pop
mov
mov
nop
fndisi(8087
out
xchg
push
pop
loope
shll
sub
imulb
testl
unpcklps
rcrl
mov
push
sbb
repnz
scas
js
imulb
inc
sti
lcall
sub
push
inc
js
xor
orl
cwtl
iret
jmp
iret
aaa
jg
insb
data16
mov
bound
pop
stos
test
stos
enter
and
repz
fsubrl
xor
jne
adcb
mov
in
cs
aas
cmp
sbb
jle
hlt
or
jp
xor
sbb
xchg
push
xchg
loope
out
adc
xchg
or
pop
pusha
and
or
jbe
lret
popf
cmpsl
jp
add
aas
pop
sarl
lahf
xchg
mov
cltd
xchg
adcl
repz
repz
add
xor
add
out
cmp
cwtl
mov
push
sarl
add
cld
adc
notb
repz
jae
call
mov
addr16
lret
add
enter
xor
addr16
dec
pop
imull
jne
leave
jae
iret
out
push
imul
sbb
repz
pop
push
pop
add
es
das
lods
negl
imulb
shlb
dec
xchg
daa
mov
mov
push
mov
sbb
jnp
test
cmp
or
int3
dec
mov
jne
xchg
cld
jb
shl
lahf
test
jge
in
pop
jno
aam
cltd
iret
fldcw
push
ret
adc
sti
cmpsb
shll
pusha
mull
out
mov
push
add
dec
push
in
sbb
dec
and
into
jns
lds
jecxz
pop
in
xor
xor
mov
sbb
and
inc
mov
or
lods
add
scas
addb
dec
gs
inc
cmp
lea
stos
adc
xchg
dec
hlt
ljmp
insl
or
sti
stos
jge
mov
clc
mov
aam
push
sub
pop
sti
mov
in
in
push
mov
std
cmp
xor
sbb
orl
imul
pop
mov
shrb
scas
cmp
jge
pop
je
and
dec
loope
or
out
lea
cmp
adc
popf
aam
add
movsb
jmp
xchg
imull
inc
mov
insl
popa
inc
and
mov
mov
jmp
add
mov
inc
pop
xor
xchg
jne
xchg
mov
sbb
sbb
fs
mov
xchg
std
pop
stc
dec
inc
adc
xor
sub
mov
inc
int
into
nop
mov
imul
pop
push
push
sub
mov
lahf
push
cmp
nop
sub
jo
stc
jbe
ret
fldl
and
sbb
bound
xchg
adcl
pop
cld
stc
data16
xchg
lea
loop
out
mov
push
popa
sub
jecxz
fincstp
stos
loopne
in
loopne
adc
inc
jno
lahf
ja
int
jg
data16
gs
or
call
rcl
pop
pop
mov
dec
jo
lcall
rcl
loopne
shl
std
mov
lock
insl
sub
push
ja
adc
dec
xlat
mov
or
push
sub
jo
mov
inc
dec
jp
gs
xchg
sub
jo
cltd
subb
and
test
cmpsl
mov
shrb
dec
scas
sbb
inc
add
adc
jle
not
sbb
mov
sub
arpl
pop
or
decl
pop
xchg
dec
lea
bound
mov
lds
xor
mov
fwait
mov
scas
xchg
inc
pop
xor
outsb
sti
fiaddl
xchg
xchg
adc
push
add
cmc
pop
outsl
add
bound
lods
and
cs
aam
mov
xchg
mov
imul
movsl
lds
aad
cld
push
push
adc
pop
out
xchg
dec
cwtl
push
fsubr
pop
in
mov
xchg
add
push
jg
mov
push
push
or
push
ss
jp
out
rolb
mov
push
pop
push
mov
test
mov
xor
dec
into
sub
scas
xchg
ret
jmp
cmp
or
fisubl
lret
mov
je
int
lret
das
dec
mov
enter
push
rclb
insl
popf
xchg
or
es
dec
sub
push
cltd
hlt
mov
dec
out
stc
push
dec
aad
or
out
aaa
cmp
pop
jb
xchg
mov
leave
adcl
lret
into
repnz
or
int3
hlt
xlat
shll
shl
faddl
shrb
int
hlt
in
rcrl
call
out
sbb
xchg
aaa
in
cmp
pop
rorb
call
sti
push
hlt
into
xchg
sarl
es
adc
ja
mov
jecxz
lods
fimull
adc
ja
fisubrl
je
and
adc
or
cmc
push
sbb
dec
push
mov
mov
dec
je
mov
mov
add
pushf
xchg
add
mov
mov
mov
push
pop
bnd
data16
mov
mov
adc
enter
push
mov
fistl
adc
inc
lods
adc
clc
cmp
jo
xchg
add
ja
pop
inc
das
rcll
jno
sbb
fcmovnu
xlat
jnp
jbe
cmp
mov
add
je
xchg
push
pop
jle
mov
cld
xor
mov
sahf
rcll
push
aas
flds
pop
adc
stos
int3
mov
je
cmp
movsb
icebp
xlat
ja
or
rclb
fists
adc
jne
call
or
lret
bound
add
lods
dec
xor
mov
mov
pop
jo
and
in
movsb
mov
xor
adc
stos
cwtl
cmp
psubsb
pop
push
pop
add
daa
fstpl
xchg
arpl
andl
clc
adc
ds
nop
mov
adc
sub
xchg
mov
mov
mov
jno
sbb
mov
int3
addr16
out
out
jg
xchg
hlt
sub
xchg
inc
adc
hlt
mov
add
dec
out
lea
or
add
daa
cltd
popa
ret
cmp
dec
fsubrs
adc
js
fsubrp
sbb
dec
inc
sub
mov
adc
add
and
xchg
repnz
and
mov
inc
fcomp
sub
mov
sar
in
stos
pop
in
dec
je
mov
pop
add
or
arpl
lds
add
testb
into
decb
lea
jae
sub
aam
cmc
fidivrs
mov
mov
mov
and
jle
jmp
inc
xchg
jae
insl
fstpl
insl
pop
xchg
mov
mov
pop
sub
out
inc
es
mov
data16
push
loope
pop
jmp
movsl
sub
in
sbb
mov
dec
and
cld
dec
mov
push
stos
divl
stc
xorl
fcompl
pop
xor
into
add
insb
dec
loopne
mov
or
fildl
jecxz
push
push
mov
aas
xlat
push
scas
pop
xor
pop
ljmp
or
repz
sub
scas
mov
add
cltd
into
sbb
or
data16
jno
mov
adcb
sub
pushf
cld
or
or
rcrl
adc
pop
fisttps
lods
lods
mov
shrl
xorl
std
jnp
scas
aaa
int3
les
hlt
sti
fildll
pop
adc
push
leave
jno
adc
repz
movsl
xor
imul
aad
in
lds
xlat
jle
or
mov
movsl
pushf
dec
es
xorl
cmp
mov
cltd
ljmp
addb
and
notb
jge
lcall
mov
ljmp
in
imul
jmp
push
stos
into
neg
push
and
mov
push
mov
mov
je
fnsave
pop
loopne
jae
mov
movups
mov
mov
mov
ljmp
mov
adc
inc
mov
sbb
cmp
add
pop
mov
adc
jno
scas
sub
jmp
xchg
insb
std
sub
jle
sub
cli
in
mov
cmpsl
jmp
mov
push
push
xchg
and
int
mov
mov
lods
add
jo
roll
push
add
fisubs
sub
mov
aas
rcll
pop
and
fdecstp
dec
pop
jae
or
xor
iret
push
jge
aad
xor
aam
inc
jmp
fs
adc
mov
mov
subl
xor
xchg
into
mov
stc
xor
or
cld
stc
pop
jo
jnp
sbb
into
pusha
adc
and
mov
xchg
inc
pop
cmp
or
xor
inc
clc
pop
enter
add
push
cs
mov
inc
add
add
cltd
js
ja
lahf
mov
xchg
xchg
decb
movsb
cmpsb
fwait
lods
cmpsb
jle
lcall
in
in
mov
mov
mov
pop
mov
mov
outsl
sahf
mov
pop
mov
jb
push
pop
xchg
mov
sbb
nop
ds
ret
outsl
addr16
movsb
xor
cmc
cwtl
pushf
std
repz
mov
idivl
sbb
xor
pop
gs
mov
xor
test
dec
adc
outsl
inc
jle
cmpsl
div
sbb
outsl
andl
rorb
sub
lret
or
je
push
je
xchg
shrb
stos
adc
adc
femms
hlt
in
pop
xor
jne
push
cmp
ds
jge
pop
mov
xchg
jnp
ljmp
shl
jbe
or
pop
sbb
mov
cltd
loope
sub
daa
mov
or
cmc
xchg
or
add
cmpsl
xchg
clc
sbb
jno
out
cmp
stc
in
ljmp
inc
push
je
mov
mov
hlt
lods
xchg
outsb
sbb
inc
ja
cmpsl
fs
movsl
dec
rol
nop
out
jnp
ja
or
cmp
int
pop
jle
subl
jo
mov
and
xor
movsl
jne
xor
outsb
cld
aaa
outsb
dec
mov
pop
dec
imul
ljmp
fisttps
imul
inc
jge
adc
or
sbb
cmpl
int3
in
adc
pop
mov
out
rorl
adc
out
jae
fstpt
mov
out
lods
inc
loope
iret
push
ret
cmp
int
leave
cmpl
sti
sub
jo
enter
outsb
in
xor
or
pop
sub
mov
jnp
push
mov
sub
add
xchg
cmpsl
dec
add
dec
es
jecxz
mov
push
and
fistps
mov
ljmp
jns
dec
jp
jg
add
adc
adc
cwtl
mov
mov
cmpsb
jmp
mov
inc
fstpt
stos
xor
xchg
ret
imul
pop
in
and
or
ret
repz
lods
sub
shll
in
mov
inc
jne
mov
movsl
add
ljmp
out
repnz
xor
pushf
clc
icebp
adc
sub
xor
fwait
lahf
adc
cmp
push
adc
icebp
aaa
icebp
mov
push
insb
sub
scas
inc
push
ja
add
fcoms
ret
ds
in
cmp
cmp
pop
rcrb
add
sub
mov
or
sbb
insl
xchg
cmp
push
out
mull
outsb
aad
lods
push
mov
jle
add
jmp
jmp
cmp
scas
pop
mov
mov
mov
push
and
xor
xchg
push
sub
test
jmp
mov
or
push
bound
jge
icebp
dec
mov
xor
adc
jmp
xor
and
push
sbb
rcl
cmp
pop
movsl
ss
jae
rorl
ss
jecxz
negb
sahf
mov
mov
push
mov
sbb
data16
aam
lods
cmpsl
orl
cmpsb
dec
jno
pop
jg
add
jmp
jp
sub
xchg
pop
pop
lock
lahf
mov
aam
xchg
iret
dec
sub
insl
and
fisubrs
ja
stos
roll
loopne
das
or
xchg
out
adc
jno
shlb
js
adcl
notl
int3
mov
icebp
aaa
shrl
sub
fisubrs
inc
cmpsb
sahf
jecxz
lea
inc
das
inc
cmp
int
fmull
jno
mov
dec
stos
pop
mov
push
push
bound
push
loopne
ds
cmp
call
aam
ret
into
addr16
icebp
out
and
jae
cmpsl
mul
sub
scas
push
sbb
or
mov
push
push
adc
mov
pop
cld
adc
shlb
call
pop
popf
ss
mov
adc
xor
loope
std
jb
xorl
seta
call
push
push
dec
aaa
sahf
mov
nop
cmp
or
mov
adc
fstp
shll
xchg
and
stc
push
cld
or
and
scas
cmpsb
inc
in
cmpsl
movsb
aaa
mov
jmp
clc
mov
and
std
inc
ja
fs
repnz
js
add
push
inc
and
push
mov
rcrl
mov
pop
fwait
insl
adc
cld
aad
jecxz
adc
push
repnz
xchg
imul
lret
inc
inc
xchg
icebp
or
scas
mov
lods
mov
mov
into
adc
push
lret
and
jno
mov
cmp
cmpl
mov
stc
clc
cld
insl
aaa
call
inc
fwait
inc
rcll
push
adc
fwait
xor
push
xor
mov
mov
rcrb
jecxz
add
dec
inc
and
mov
add
outsb
pop
rcrl
dec
mov
pop
fcomps
mov
or
cmpsl
mov
inc
xor
cmpsl
mov
lds
popf
adc
subb
jp
and
lahf
or
loopne
icebp
stos
int
pop
lods
inc
adc
sbb
stos
push
inc
xchg
aam
ret
add
repz
inc
imul
pop
add
mov
ja
mov
lret
scas
cmp
mov
fdecstp
pop
sbb
push
add
adc
mov
and
push
repnz
shlb
or
inc
push
and
orl
sbb
sahf
ret
arpl
in
aad
add
xorb
lret
sbb
fcmovb
mov
out
dec
int
loop
jne
jmp
sbb
mov
cmp
jl
aam
jle
add
pushf
stos
add
addr16
test
xor
fcomps
sbb
inc
push
aam
or
insb
cli
xor
adc
push
mul
mov
cmp
xor
test
int
rcrl
xchg
mov
mov
xchg
mov
dec
lods
js
loop
in
jg
cmpsb
bndldx
jmp
jmp
outsl
mov
inc
je
dec
gs
xchg
xor
popa
into
jmp
adc
or
push
xor
imul
push
pop
lea
imul
xor
enter
fdivrp
xor
repz
pop
nop
jmp
repz
hlt
jmp
adcl
xchg
or
sub
mov
mov
jle
addr16
pop
js
and
out
ljmp
out
xchg
stos
jl
daa
scas
pop
inc
fdivl
jg
push
dec
aaa
fildl
fcomp
clc
js
repnz
daa
aad
out
cmp
or
and
pop
pop
adc
pop
cld
xchg
je
pop
orb
pop
fildll
aaa
mov
ljmp
es
pop
mov
ja
and
repnz
bswap
rolb
xor
mov
cli
out
pop
mov
imul
sbb
push
dec
adc
pop
call
pop
jne
das
out
ljmp
push
mov
dec
mov
pop
js
testb
mov
lcall
inc
aaa
das
dec
gs
mov
pushl
ds
sbb
push
mov
jecxz
scas
mov
ljmp
mov
lock
inc
imul
dec
xchg
das
inc
and
and
fcmovnbe
addr16
lods
pop
pop
sub
push
insl
cld
insb
orl
push
sahf
sti
inc
sbb
sbb
push
push
mov
pop
pop
adc
adc
dec
mov
or
add
adc
cmp
movsl
jl
xchg
in
repnz
mov
call
in
sub
dec
mov
sub
jae
add
outsb
aaa
fstpl
mov
mov
loope
xchg
iret
xor
cld
fstps
mov
dec
rcrl
xchg
lret
jg
sub
adc
mov
push
movsl
inc
sub
out
jno
out
mov
lret
mov
sarb
add
cmp
fdiv
add
mov
push
mov
rorb
inc
outsb
ljmp
lods
aas
pusha
jae
addr16
lahf
xchg
mov
dec
xchg
dec
pop
lods
fistpl
pop
and
pminub
push
lock
loopne
pop
inc
shll
int3
xchg
dec
lret
insl
inc
fldl
fcoml
mov
mov
cmp
cmc
add
les
mov
mov
adc
push
arpl
adc
in
mov
icebp
mov
push
das
or
dec
loop
inc
pusha
sbb
fcoms
in
bswap
fstp
test
cmpsl
scas
xchg
loope
insl
sbb
scas
out
inc
ret
out
cmp
cmp
inc
lcall
pop
and
mov
adc
data16
insb
repnz
pop
data16
and
lahf
pop
unpckhps
xchg
fildll
decl
movd
cmp
xor
dec
mov
sar
imull
aaa
jne
or
in
jnp
or
push
pop
cmpsb
jle
adc
fsubrs
sbb
les
mov
sbb
je
stos
shlb
sub
sbb
aam
in
loope
jne
add
subl
mov
xchg
fisttpl
mov
xchg
jmp
jbe
jmp
cmc
ret
inc
addr16
sub
aad
mov
push
xchg
pop
aaa
fbld
out
mov
in
int3
cli
test
sarb
imul
int
rorl
mov
and
fcomps
mov
ja
shl
xchg
stos
ret
cmp
add
dec
add
push
inc
jp
out
ljmp
fcoms
or
das
jns
push
mov
add
inc
mov
jno
cld
lret
adc
push
fsubl
sub
jns
jb
stc
popa
imul
push
push
xchg
xor
mov
push
sbbl
fdivs
mov
popa
lods
xchg
jno
adc
pop
out
xchg
adc
mov
movsl
testl
lret
pop
adc
add
dec
jg
scas
popa
cmp
cmp
or
imul
pop
and
and
adc
add
hlt
xchg
in
aam
les
xchg
repz
je
add
and
and
adc
add
hlt
xchg
in
aam
les
xchg
repz
je
addl
and
jae
arpl
adc
sbb
shlb
repz
insb
adc
fdivl
insb
and
xor
adc
test
xchg
sbb
jle
aam
pop
sub
imul
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
adc
bts
les
mov
mov
jns
imul
xor
add
jno
popa
fsts
inc
sub
pop
cmpl
dec
shll
xchg
add
jno
popa
rcll
and
jno
jns
push
test
xor
push
cltd
jne
in
stos
mov
mov
mov
xchg
push
jno
push
or
cmp
loope
xor
sahf
pop
pop
pop
dec
mov
xchg
testl
inc
and
imull
iret
insl
cmp
insl
ljmp
pop
and
rcrb
dec
sarb
lods
adc
es
sub
mov
dec
loopne
lods
and
adc
imul
xchg
scas
cmp
cmp
out
mov
cmpl
pop
xchg
push
mov
adc
push
mov
rol
dec
movsb
mov
xchg
pop
cmpl
dec
shll
and
jno
popa
fsts
inc
and
adc
inc
rorl
aad
int3
repnz
push
std
inc
mov
and
inc
enter
out
jns
or
sub
movsb
jo
imul
stc
push
xchg
adc
dec
fnstcw
lcall
dec
in
jns
add
fsubl
push
cmc
gs
mov
jmp
inc
cmp
or
pop
rorl
mov
adc
popa
fsts
inc
cmp
or
pop
rorl
mov
jecxz
rclb
push
or
sbb
adc
sbb
mov
and
in
sub
pop
push
mov
inc
bound
cmpsl
cmp
mov
stc
or
pop
lcall
test
jnp
adc
sbb
dec
and
mov
jp
aad
add
cmpl
dec
ret
scas
stos
nop
lock
add
dec
mov
cmpsb
test
xor
das
mov
pop
imul
aas
adc
pop
andl
mov
lods
jne
mov
out
enter
lret
add
push
mov
jmp
das
dec
movsb
das
shrb
aad
cli
fnstenv
rorb
in
pusha
repnz
sub
mov
dec
std
cmp
jmp
and
and
jecxz
push
clc
jb
mov
insl
sub
outsb
jecxz
insl
xchg
adc
dec
mov
mov
cmp
dec
xchg
jnp
mov
movsl
pop
adc
add
out
or
push
fiadds
sub
mov
mov
inc
nop
xchg
test
aas
punpckhbw
outsb
stos
imul
adc
pop
jle
cmc
cmp
cmp
hlt
shl
or
mov
add
fsubs
add
dec
daa
pop
jmp
jns
leave
mov
loope
pop
pop
shlb
in
test
pusha
dec
push
push
add
xchg
xor
jne
in
imulb
dec
xchg
faddl
adcl
movsb
mov
mov
lock
stos
aas
mov
push
cmp
in
mov
cmc
pop
mov
jo
mov
mov
jge
notb
pop
adc
xor
mov
or
inc
cmp
fldt
mov
cwtl
scas
out
sub
inc
or
rcll
dec
sub
sahf
adcb
inc
mov
or
cmp
rolb
push
mov
aam
push
sub
cmpsl
shrl
pop
and
xor
rcrb
out
xchg
rcrb
daa
gs
lret
xchg
loope
addr16
call
mov
arpl
or
xchg
jne
stos
adc
xor
ret
jl
das
push
out
hlt
xchg
movsb
shll
fidivrl
or
pop
pop
dec
jb
sbb
daa
add
lods
push
or
daa
jne
pop
rdpmc
je
push
cltd
lret
shrl
subl
xchg
loope
nop
ficompl
xchg
xor
in
inc
shlb
out
xor
and
add
and
jns
call
out
and
xchg
adc
fistl
fwait
inc
add
lods
cmp
push
std
in
repnz
shlb
dec
push
int
jp
movsb
and
mov
pop
inc
cmp
lcall
test
hlt
sbb
pop
fstpt
insb
jmp
mov
sti
jnp
fists
ljmp
mov
sub
or
dec
in
fisttps
xlat
and
push
or
sbb
sbb
das
add
xchg
repz
addl
stc
call
out
iret
inc
and
stos
cmp
inc
cmp
gs
fsts
jge
in
pop
int3
cli
mov
xchg
and
outsl
stc
jnp
sbb
mov
int
outsl
jp
sbb
adc
adcb
or
je
xchg
push
dec
lcall
ror
daa
aaa
ss
mov
les
lds
testl
sub
outsb
mov
loop
lret
cmp
jnp
fstps
push
adc
aad
test
push
insb
cmpb
lcall
icebp
jecxz
fcoms
and
xchg
movl
mov
scas
push
in
fsubrs
ja
and
xor
movsb
xchg
jno
and
add
into
pusha
push
add
fs
xchg
std
insb
jge
dec
xlat
dec
pop
cmp
dec
mov
pop
dec
inc
aaa
iret
push
push
jmp
dec
negb
cwtl
andl
xor
push
popl
daa
pusha
dec
aam
inc
adc
ficomps
push
outsl
pop
repz
mov
inc
cmp
xchg
push
cmpsl
and
adc
ljmp
and
les
xor
int3
inc
push
adc
cmpsl
mov
pop
loope
jb
sub
push
sub
xor
dec
sub
cs
pop
ljmp
adc
mov
fdivr
xchg
sbb
cmc
add
imulb
ja
pop
push
cmp
es
test
fwait
add
aad
mov
jb
lds
nop
sub
inc
xor
push
sub
sbb
lea
push
xchg
cmp
inc
cmp
test
xor
in
jp
cmp
mul
inc
cld
adc
sahf
sbb
xchg
cmpsb
decb
rcrl
xchg
cmpsb
insb
lcall
sbb
lahf
cmpsb
mov
lahf
dec
das
pop
hlt
dec
and
jmp
pop
shlb
adc
xor
sbb
or
out
push
mov
sub
mov
mov
pop
push
jb
repnz
daa
and
pop
loopne
inc
mov
je
jmp
lds
shlb
cli
xor
jae
leave
movsl
adc
adc
add
sbb
mov
out
sub
fldl
mov
add
into
mov
sub
lds
dec
and
and
insl
subb
push
insl
insb
aas
in
je
divl
jmp
cwtl
add
loopne
dec
push
mov
icebp
sbb
fwait
xchg
sub
jge
movsl
cmpl
insl
adc
xlat
leave
dec
pop
test
xchg
cmc
inc
and
sti
ret
cmc
scas
nop
push
in
push
xor
mov
pop
mov
stos
sbb
nop
jne
mov
stc
mov
push
cmp
xchg
cmp
mov
xchg
mov
jle
add
xlat
inc
mov
or
push
mov
jl
or
lods
dec
cmp
jge
lcall
jmp
cs
bound
sbb
jg
pop
mov
pop
xor
xor
pop
std
stos
icebp
or
lret
pop
jg
sub
mov
mov
movsb
add
and
bnd
push
arpl
sarl
je
or
mov
incl
popl
sahf
push
nop
popa
iret
push
xchg
xchg
xchg
inc
mov
movsl
jbe
mov
or
mov
sbb
jecxz
push
mov
jge
xchg
mov
movsb
rol
ret
sub
cmp
scas
jb
lods
stc
shrl
inc
ss
cmp
lds
arpl
xchg
addr16
push
push
jae
mov
mov
fsubr
jle
mov
aam
mov
cmp
std
or
mov
xor
dec
dec
outsl
adc
aad
leave
add
in
or
and
addr16
movb
push
push
loop
adc
std
movsb
push
and
cltd
es
into
imul
xor
cmp
fs
lods
lcall
mov
fsubs
jmp
das
in
out
loopne
and
testb
ljmp
inc
and
pushf
cwtl
int3
pop
xchg
cltd
adc
mov
cmp
inc
lahf
mov
add
movsb
xchg
inc
bound
push
jecxz
andb
fwait
in
loope
arpl
jb
inc
xor
push
sbb
inc
scas
jb
or
jb
pop
fcomi
loop
mov
out
insb
push
dec
or
outsb
fstpl
lods
ret
aam
stc
mov
frstor
mov
in
push
push
xlat
or
gs
lret
aaa
nop
div
lahf
pop
jmp
and
in
jg
or
outsl
sub
xchg
popa
cmc
mov
cmpsb
push
add
scas
adc
inc
pushl
mov
dec
adc
mov
lcall
xchg
inc
negl
ljmp
and
scas
ret
adc
push
mov
arpl
pop
stos
sti
fs
mov
int3
mov
pop
call
cltd
add
mov
bound
cmpsb
into
data16
stos
pop
dec
push
pusha
std
dec
cmpsl
in
imul
mov
cltd
xchg
cmp
enter
jp
mov
pop
enter
test
aas
stos
mov
scas
jne
and
push
rcrl
pop
out
pop
subb
push
loop
lods
sahf
das
or
add
cmc
es
cmp
xchg
push
xchg
insb
out
pop
sub
in
lea
lret
sub
in
or
lea
pop
push
pop
and
sub
punpckldq
das
cmp
into
sbb
repz
xchg
push
jge
pop
out
repnz
add
int3
sbb
mov
cmc
xchg
into
inc
jge
cwtl
mov
jbe
push
lret
dec
and
aam
negl
das
fiadds
cmp
inc
mov
pop
push
in
xchg
and
sub
rcr
cs
aas
movsl
int3
loope
ja
xchg
lds
pop
nop
aad
imul
push
xor
jecxz
mov
dec
or
shll
push
mov
stc
je
mov
cld
test
fmull
pop
loopne
mov
dec
adc
mov
pusha
loope
stos
div
stos
aaa
stos
fstpl
mov
jmp
in
andl
les
inc
scas
data16
sahf
or
inc
fstpl
sbb
fidivrs
shll
cltd
push
imul
add
fcomps
add
jnp
pop
movsl
mov
dec
lret
xor
add
les
insl
sbb
dec
insb
sbb
dec
xchg
int3
adc
data16
hlt
adc
pushf
leave
subb
lea
push
outsl
jmp
pop
pop
dec
sub
test
push
xchg
mov
sbb
inc
adc
xor
shlb
cld
and
xlat
stos
push
in
cmp
ds
shlb
pushf
pop
std
or
shlb
push
cmp
enter
push
add
or
fwait
movsl
add
cmp
xchg
daa
sti
loop
push
pop
add
jmp
or
sbb
and
jmp
stos
inc
mov
dec
mov
rcr
call
add
lcall
leave
ja
out
popa
insl
mov
fisubrl
in
xor
jno
sti
and
or
sbb
popf
clc
push
out
out
mov
fs
xorb
aaa
in
pop
xorb
and
in
test
loopne
pop
mov
lock
add
xlat
cmp
mov
outsb
ds
mov
out
sub
orb
sbb
loope
movsb
lods
test
js
or
mov
or
sti
mov
push
outsl
insl
repnz
mov
test
jp
mov
dec
dec
nop
les
sbb
aas
cmp
cltd
push
mov
jge
dec
ror
cmp
dec
outsl
sti
test
test
movsl
fdivs
in
mov
dec
xchg
xchg
lret
or
jns
sub
out
mov
dec
ss
push
arpl
pop
cmpsb
pop
mov
test
add
sub
je
cmp
push
mov
negl
dec
insb
pop
adc
lods
mov
sti
stos
cmovae
cli
xchg
test
or
mov
mov
push
mov
add
stos
mov
je
iret
rcrl
xchg
mov
inc
dec
pop
subl
mov
mov
fnsave
xor
hlt
clc
outsb
in
pop
mov
inc
clc
cmovno
xchg
popa
mov
add
addb
pop
loop
hlt
xor
add
sbb
xor
insb
sbb
cmpsl
lea
aad
mov
sbb
ljmp
int3
and
jnp
mov
pop
add
rorl
adc
cmpsl
mov
lods
bound
arpl
pop
add
shlb
xor
jo
sbb
push
jb
jb
sub
mov
daa
sub
lods
and
je
mov
ds
aaa
pop
sub
int
and
fisubrl
roll
jmp
mov
sbb
jmp
les
dec
mov
ds
pushf
pop
ds
cmp
aaa
aaa
out
xor
mov
stos
cmp
fdivrs
inc
out
adc
lahf
test
mov
xchg
adc
cmpsb
xchg
fs
xchg
push
ficompl
cmp
push
hlt
loopne
aas
cli
cmp
jp
mov
jmp
ror
jecxz
dec
mov
mov
push
sbb
xchg
out
hlt
test
test
inc
xor
inc
dec
dec
add
clc
dec
mov
cmpl
test
pop
adc
jge
lret
pop
test
out
add
test
lcall
lods
adc
movsl
aas
leave
cmp
sbb
jbe
jmp
dec
dec
dec
leave
data16
sub
add
jle
sbb
adc
psrlw
cltd
jge
add
ror
scas
dec
dec
mov
add
cltd
hlt
shrb
cli
es
lahf
mov
or
mov
sub
lods
sbb
push
sub
aam
add
xor
or
and
es
xor
cmp
xor
or
pop
and
jle
push
jne
sahf
mov
sub
inc
sar
fisttpl
out
sbb
sbb
xor
shlb
pop
outsb
mov
inc
mov
test
and
dec
leave
add
sub
xor
xchg
nop
mov
lret
ja
inc
sarb
xor
mov
jge
inc
cmp
movb
push
mov
outsl
add
push
jmp
jge
je
mov
lods
mov
imul
jns
out
cltd
cmp
popf
inc
add
add
push
icebp
movsb
cld
jae
test
cmp
pop
cmpsl
or
cld
dec
cmpsl
aad
ljmp
sbb
xor
push
test
inc
xor
leave
movsb
sbb
subb
mov
ret
cltd
and
shrl
mov
out
xchg
jae
xorl
fld
sar
xchg
ja
push
pop
mov
idivl
mov
or
lcall
xorb
clc
ja
mov
dec
sub
jle
push
adc
push
jbe
movb
repz
xor
rolb
les
lret
iret
mov
or
pop
jnp
adc
adcb
pop
inc
sbb
stos
push
mov
add
decb
lods
mov
xor
adc
and
shlb
shrb
add
loop
or
jno
aas
lahf
lcall
push
leave
mov
into
xor
xchg
xchg
dec
lret
aad
xor
jb
jl
lahf
rorb
mov
loopne
xor
mov
xor
sbb
out
xchg
out
lods
jb
mov
sbb
and
cld
adc
or
fwait
jl
ss
mov
filds
xor
pop
and
add
xchg
push
sub
outsb
je
daa
xor
mov
aam
popa
mov
and
cmpsl
xchg
icebp
daa
arpl
ret
jl
mov
jle
inc
xchg
pushl
inc
or
inc
mov
movsb
cs
push
into
arpl
sub
and
jns
mov
cli
add
mov
push
cltd
jg
enter
adc
sub
mov
cmpl
sbb
out
jae
js
push
or
shr
add
cltd
fmull
sbb
rep
aam
dec
xchg
rcrb
in
dec
mov
mov
pop
shl
adc
push
shrb
inc
insb
bound
in
nop
mov
cmp
dec
and
adc
mov
jbe
imul
jmp
lret
enter
jns
dec
outsl
xchg
test
push
mov
sub
mov
dec
mov
popa
pop
into
push
fs
xchg
mov
push
inc
and
or
adc
push
ja
xchg
out
adc
andl
mov
nop
inc
xor
pop
inc
adc
nop
sub
cmpsl
push
fnstenv
aam
call
xor
lods
pushf
into
push
push
and
push
push
cmp
or
push
stos
shlb
sbb
bound
jne
mov
jp
gs
xlat
loope
jns
leave
stos
pop
movsb
aad
sub
xchg
sub
jmp
adc
pusha
pop
push
jo
mov
xchg
mov
popf
lret
xchg
adc
repnz
mov
dec
mov
add
icebp
sub
loopne
push
pop
dec
mov
push
cmpsl
mov
out
push
je
insl
outsb
dec
sub
cmpsb
and
je
testl
fs
bound
fistl
xchg
unpckhps
inc
in
pop
aad
rcr
push
fwait
dec
movsl
fdivr
sbb
adc
mov
jae
or
mov
test
cmp
jecxz
push
cld
sub
jo
fcomp
test
jp
fcmovnbe
das
mov
jle
repnz
fs
dec
cmp
cmpsl
xor
daa
xchg
pop
or
insb
into
in
xchg
repz
lods
add
mov
xor
inc
into
fstpt
test
and
adc
pop
bound
idivl
sub
fldl2t
cmc
in
rclb
test
jb
pop
inc
frstor
jo
ss
add
jl
add
andb
pop
add
test
loopne
in
js
adc
in
std
add
repnz
pop
pop
mull
or
mov
jne
mov
mov
push
mov
call
xor
mov
and
ret
fistpll
mov
in
fcomps
add
js
leave
int
stos
sarl
mov
jns
jb
aaa
sub
sub
jl
xor
movsb
lret
fimuls
jns
and
jno
cmp
xlat
stos
adc
xchg
stc
lahf
mov
pop
lods
lcall
fiaddl
shlb
stos
xchg
scas
add
into
cld
rcl
xchg
movsb
mov
into
sub
push
sub
cmp
pop
insl
adc
mov
mov
mov
aaa
cmp
pusha
lret
mov
push
push
cmp
loope
or
sar
cli
rcrb
xlat
add
inc
sbb
jns
out
jg
push
cwtl
pop
fisttps
mov
das
shll
push
in
mov
push
mov
cmpsl
push
subl
mov
jmp
xchg
sbbl
xchg
jne
and
shrb
xor
cmpsb
mov
push
jns
data16
cmc
jmp
data16
cmpsl
pop
out
mov
hlt
movsl
dec
xchg
pop
in
push
and
sahf
pop
mov
xor
out
pusha
adc
das
arpl
cli
addb
adc
cmp
xor
xchg
fmul
xchg
mov
or
pop
imul
popf
push
ja
xor
nop
and
adc
mov
fisttpl
add
call
dec
push
lods
inc
pop
xchg
xchg
jb
jmp
xchg
or
xchg
mov
lods
cmc
mov
sbb
pushf
cmpsb
imul
fxch
lret
jmp
push
inc
jmp
fidivs
arpl
int
out
subb
pushf
rorb
test
les
into
les
mov
ret
or
cmpsl
and
mov
xor
arpl
sub
lahf
dec
cli
out
test
sub
inc
lahf
divl
dec
and
push
pop
mov
stos
pop
in
ret
lds
sbb
or
bound
sub
adc
xlat
clc
mov
leave
dec
mov
mov
inc
lea
js
das
ret
lcall
out
mov
mov
add
addl
iret
loopne
pop
enter
xchg
hlt
mov
jae
cmpsb
mov
pop
mov
inc
stc
pop
insb
or
hlt
lea
lahf
ret
lods
nop
cmpsb
or
cli
aam
adc
inc
ss
adc
adc
lea
imul
shll
adc
scas
jne
fdivrl
pop
add
outsb
pop
fimull
shrb
xor
pop
xchg
cmp
inc
ret
mov
mov
insb
mov
or
pop
lret
xor
pop
and
pop
dec
pop
dec
fs
add
rolb
insb
in
sub
cmp
inc
aad
sub
jne
xchg
test
subl
out
mov
xchg
shrb
mov
out
push
push
jle
pop
push
out
fsubrp
sarl
iret
or
push
xchg
popa
arpl
in
inc
leave
int3
and
jae
movsb
mov
pop
pop
aas
adc
bound
fisubs
int3
jb
test
lods
xchg
fldcw
pushf
movsb
mov
mov
mov
pop
push
inc
or
inc
push
sahf
jge
and
sbb
pushf
addl
mov
jge
push
lahf
dec
pop
xchg
jl
mov
test
mov
ss
sbb
stos
ss
mov
les
insb
xchg
adc
adc
cmp
xchg
popf
outsb
jb
push
mov
xchg
movl
or
jl
mov
lock
imul
movsb
stc
jbe
cs
out
imul
mov
xor
push
and
cmpsb
jne
inc
push
stc
adc
pop
jle
jne
adc
lods
ljmp
mov
cld
sbb
out
mov
mov
mov
mov
add
fsubrl
movsl
xchg
lea
xchg
mov
adc
cmc
cmpsb
xor
mov
and
jno
popa
fsts
inc
cmp
or
pop
rorl
mov
adc
popa
fsts
inc
cmp
or
pop
rorl
mov
adc
popa
fsts
inc
cmp
or
pop
rorl
mov
adc
loope
rorl
dec
or
jns
push
cmpsb
cs
divl
pushf
xlat
lods
cmp
add
mov
ja
addr16
sub
cmp
dec
daa
pop
pop
insb
pop
jl
mov
pushf
xlat
lods
mov
xchg
in
xchg
and
cmp
and
pop
pop
sub
jl
push
out
xlat
add
mov
xchg
add
jg
jae
dec
pop
sbb
sbb
mov
fnstenv
push
sbb
jl
mov
mov
jl
mov
rcrl
pop
pop
lea
testb
int
and
dec
dec
fiaddl
enter
push
insl
stc
icebp
jge
dec
xchg
jmp
dec
imul
mov
scas
pop
jb
insb
mov
out
mov
int3
mov
imul
ja
ficompl
popa
ror
dec
mov
or
cmp
lods
cltd
xchg
in
cld
addr16
fwait
or
jmp
cmp
pop
and
orl
fbld
nop
mov
pop
push
or
je
roll
and
dec
mov
test
sub
mov
int3
cmpsl
fcoml
mov
push
cmp
je
pusha
daa
movsb
pop
insb
pop
adc
out
mov
mov
test
cltd
ss
arpl
pop
sub
and
push
sub
xchg
fldl
mov
xchg
push
dec
add
sbb
adc
pop
pop
sahf
fiaddl
fbstp
in
xchg
ja
addr16
sub
cmp
dec
daa
pop
pop
insb
pop
jl
mov
pushf
xlat
lods
mov
xchg
in
xchg
ja
addr16
sub
cmp
dec
daa
pop
pop
insb
pop
jl
mov
insb
pavgw
cs
mov
int3
adc
adc
dec
clc
sahf
rcr
adc
and
cmp
je
out
push
xchg
mov
push
inc
jns
hlt
cmpsb
pop
jge
nop
mov
jbe
mov
mov
aad
sbbw
aaa
div
in
into
test
nop
dec
ds
int3
cmc
ret
push
mov
stos
jb
pop
data16
xchg
icebp
or
ss
es
fcmovnu
es
pop
sub
fdivl
mov
push
shll
pop
into
lods
xor
sbb
inc
adc
push
pushf
ror
outsb
jno
push
sub
sbb
xor
imul
dec
xchg
xchg
push
clc
lret
jnp
cmpsl
push
test
dec
scas
and
imul
lods
stc
jmp
adcb
xchg
ljmp
cmp
mov
add
fwait
add
ret
iret
lahf
stos
lods
mov
loopne
or
push
jo
cmp
out
fidivs
mulb
xchg
xor
mov
int3
cmp
jb
arpl
xor
sarl
sbb
jle
adc
jmp
sub
out
sbb
out
sti
in
arpl
dec
mov
jo
ret
xchg
mov
push
out
out
mov
in
inc
adc
jp
and
xlat
cmp
mov
xor
jo
inc
lahf
pop
faddl
sti
xor
and
mov
pop
jnp
into
sub
call
sarb
fildll
adc
outsl
adc
std
insb
lock
adc
mov
lcall
mov
and
mov
or
test
cli
movsl
add
hlt
filds
test
adc
aad
cmc
pop
push
push
cmpsl
sbb
inc
movsb
test
shlb
std
mul
popf
std
sub
and
mov
clc
daa
icebp
add
dec
rolb
pop
stos
addb
sbb
pop
hlt
sub
data16
ja
in
sub
cmp
insl
rclb
sbb
xchg
pop
mov
inc
test
jne
adc
push
push
std
hlt
xor
dec
push
movsb
mov
and
cs
in
rcrl
test
mov
sub
and
gs
jp
mov
sahf
fbstp
data16
xlat
xchg
mov
and
jae
stos
lock
dec
imul
rcr
das
mov
call
cmp
dec
pop
insb
lods
daa
xchg
jns
pusha
inc
mov
cmc
add
push
out
sub
jge
in
mov
jle
pop
pop
pop
sahf
add
mov
div
mov
in
dec
cld
jnp
push
mov
movsl
inc
push
sar
stc
jne
sub
aam
stos
mov
push
inc
jl
sub
xchg
gs
imul
cmp
jo
or
inc
cmp
es
jg
in
je
or
aaa
xor
aam
dec
jge
dec
movsb
dec
imul
xchg
xchg
ja
lcall
or
pop
mov
out
mov
inc
iret
sbb
jne
pop
fdivrs
xchg
into
sahf
inc
jle
mov
mov
inc
mov
jnp
mov
fwait
mov
xor
loopne
ret
inc
out
fistl
imul
and
pop
inc
or
lods
sbb
jge
das
xchg
icebp
les
pop
cltd
mov
jg
mov
insl
ljmp
adc
insb
mov
ss
fimuls
mov
out
mov
sbb
roll
mov
add
hlt
test
inc
and
jmp
aad
cmpsb
scas
leave
push
cltd
dec
inc
adc
push
jno
mov
mov
lcall
rclb
out
test
mov
ret
mov
jg
insb
xchg
mov
fdivr
test
lods
roll
sbb
xor
dec
xchg
and
push
movl
lods
sub
mov
scas
mov
popf
in
rorl
enter
lea
push
mov
out
adc
or
je
js
xor
pop
mov
add
xlat
mov
cld
fbstp
rcrl
lds
ficoms
gs
das
mov
test
push
cmp
ljmp
mov
push
add
jg
and
sbb
loopne
or
outsl
fbld
mov
pop
stc
ficoms
negb
jne
scas
sub
add
dec
sbb
push
and
int3
cmp
ficomps
cmpsb
outsl
arpl
jbe
push
inc
enter
ja
popa
cmpb
pop
loop
cmpsb
push
inc
push
movsb
sub
lods
lahf
out
lcall
mov
pop
lret
mov
arpl
loop,pt
fisttpll
jmp
pop
repnz
jmp
adc
test
add
fdivl
sarl
pop
dec
nop
jge
test
push
imul
rorl
pop
repz
mov
lods
mov
jmp
frstor
pop
xor
add
push
fs
mov
sbb
test
lret
in
mov
fldcw
jne
lahf
mov
dec
fnsave
pop
xchg
ret
repz
sti
adcb
adc
adc
add
lea
pushf
dec
push
mov
or
adc
mov
sub
xor
add
cmp
stos
jmp
push
jge
mov
pop
test
call
and
jl
lods
lods
add
movsl
div
int3
sub
inc
adc
xor
jns
aas
xchg
popf
push
dec
mov
xor
cmp
push
xchg
jmp
ficomps
ret
test
scas
xchg
xor
inc
ja
fdivl
jbe
mov
sbb
mov
lea
loopne
fmull
arpl
ret
cs
xor
clc
mov
xchg
mov
out
notb
sub
loop
mov
movsl
in
sub
bound
push
pop
inc
dec
mov
outsl
cmp
sahf
mov
jmp
sub
out
cmp
pop
inc
mov
mov
mov
push
ret
pushf
mov
mov
xchg
xlat
cltd
lcall
repnz
shll
dec
test
push
push
leave
pop
push
adc
and
movsl
enter
or
jns
pop
dec
mov
iret
mov
aas
mov
adc
into
add
scas
dec
jp
sbb
aad
insb
cmp
push
mov
mov
test
lcall
ljmp
int
dec
and
js
ss
and
jmpw
lret
hlt
mov
out
xchg
push
ficoml
push
and
xchg
and
mov
andb
pop
inc
arpl
cmp
xchg
xchg
pop
addr16
es
out
pop
adc
dec
inc
arpl
fbstp
sbb
jmp
lea
aas
push
pop
adc
mov
adc
cmp
mov
adc
pop
mov
popa
dec
daa
push
rolb
xchg
xlat
xchg
flds
mov
and
and
mov
bound
call
dec
jg
in
xchg
insl
inc
xor
xor
movsl
clc
sub
lret
jnp
jg
inc
or
fcompl
push
cs
cmp
aas
cld
cmp
xchg
lods
stos
aad
and
fwait
arpl
test
cmc
loop
pop
and
pop
xchg
xor
pop
xlat
push
add
sbb
jne
adc
jnp
or
xorl
jo
sbb
xor
out
ljmp
and
or
pop
fs
adc
std
push
xchg
pop
mov
mov
arpl
mov
pop
mov
fs
das
sbb
adc
test
jno
icebp
cltd
sub
call
inc
scas
loop
dec
sbbb
jp
cmpsl
and
cs
mov
xchg
push
mov
mov
inc
jno
test
imul
jb
nop
jmp
sbb
adc
dec
mov
and
xlat
test
xor
pop
xchg
or
mov
pop
mov
lret
pop
xchg
rol
jae
es
cmp
mov
lods
xchg
gs
aam
pop
xor
gs
lods
stc
cmp
popa
jle
mov
addr16
shrb
leave
cli
xor
lahf
sahf
jb
lods
ja
adc
cli
test
lock
es
lea
and
les
lea
lods
jl
in
mov
mov
outsb
push
ret
test
xor
lahf
bound
outsl
nop
jae
jecxz
push
loop
cs
in
adcb
dec
mov
mov
or
ja
jno
jb
pop
in
scas
cmpsl
clc
or
xor
negl
inc
dec
xor
stc
or
cmpsl
lahf
jae
insb
in
lahf
cmp
jne
dec
stc
xchg
les
cmp
decb
sub
xchg
in
mov
rcl
add
sub
push
jae
or
je
ja
stos
fdivl
mov
cmp
xlat
aam
rclb
mov
or
clc
pop
repnz
nop
xor
jg
jae
mov
adc
outsl
sahf
mov
jle
jmp
cmpsl
push
push
mov
add
dec
ret
or
jg
sar
pop
shrl
mov
cmp
lods
test
scas
repnz
mov
loopne
pop
scas
gs
dec
ja
in
jge
mov
push
or
out
imul
mov
adcb
pop
outsl
pop
xor
mov
push
sbbl
mov
jne
test
dec
stc
movsl
test
hlt
cmp
and
push
scas
aaa
add
int3
xor
push
push
out
mov
mull
sbb
mov
push
jmp
dec
pop
data16
inc
jb
scas
lahf
sub
jle
push
cmpsb
and
popf
popf
sub
pushw
imul
sbbb
inc
movsb
dec
movsl
sahf
enter
int
mov
pop
divl
sub
jne
jmp
and
mov
js
or
mov
lret
xor
push
fcoms
mov
gs
andb
lock
stc
pop
push
jmp
cmc
xorb
test
xchg
xor
lock
jnp
dec
in
or
pop
adcl
push
add
into
loope
jnp
lahf
loop
sub
dec
add
enter
mov
aam
aas
add
jmp
mov
xchg
push
iret
loopne
pop
pop
xchg
lcall
pop
add
sti
pop
inc
stos
fnstenv
sub
inc
mov
mov
add
into
mov
or
ss
mov
ret
or
shll
ja
jae
mov
imul
sahf
mov
mov
sub
test
pop
loope
mov
out
fldt
add
scas
mov
lret
lret
ret
sbb
lret
leave
mov
mov
lret
enter
lods
cmc
or
popf
sbb
call
mov
push
fsubrl
imul
fwait
ret
fstps
sbbb
data16
adc
jmp
sbb
and
stos
adc
sahf
popf
int3
lahf
sub
movsb
xor
sub
push
ljmp
in
pushf
insl
xor
cmp
xor
loope
jp
and
and
rorb
adc
xor
js
stc
mov
std
sbb
or
mov
or
inc
xchg
xchg
outsb
mov
sub
push
mov
jb
arpl
fbstp
dec
mov
mov
jae
jecxz
sub
mov
pop
and
inc
aam
xor
in
fisttpll
icebp
xor
jne
js
jp
cmp
clc
xor
xchg
push
aaa
xchg
je
aas
loopne
mov
je
xor
les
icebp
push
mov
sbb
lret
mov
ss
dec
rcl
sti
xchg
sub
jns
rcrl
add
mov
add
inc
mov
push
je
lods
lock
cld
mov
sub
fdivrl
mov
cmc
mov
adc
cmpsl
loopne
out
int
or
jae
or
adc
cmp
jb
push
cmpl
xchg
cmp
inc
out
test
mov
dec
inc
jbe
dec
adcb
mov
push
iret
xchg
popa
mov
clc
clc
stc
into
cmp
mov
or
dec
cmp
dec
cmc
pop
jl
sbbb
mov
repnz
lds
xchg
mov
xchg
or
adc
cmp
das
mov
pop
or
push
aas
jo
push
cltd
mov
push
xor
mov
dec
pushf
cwtl
lds
xchg
lea
mov
outsb
jp
stos
dec
dec
push
cmpsb
shll
xchg
mov
add
xor
or
pushf
stc
sub
xchg
pop
push
push
mov
ret
mov
lcall
xchg
inc
push
xchg
fidivrs
mov
jae
mov
in
pop
lcall
dec
loopne
call
loop
daa
cmp
or
push
mov
cli
pop
test
dec
or
xor
lcall
test
pop
dec
xor
mov
push
or
lods
test
and
gs
pop
jle
movsb
xor
mov
push
mov
mov
int
xor
loope
popf
pop
pop
pop
pop
add
popf
adc
mov
fwait
or
cwtl
sbb
mov
outsl
adc
aas
mov
push
sub
ret
idiv
inc
xor
inc
add
mov
pop
xor
pusha
addb
int
mov
xor
pop
into
mov
sbb
idivb
insl
mov
push
inc
loopnew
leave
pop
adc
imul
dec
adc
and
add
adc
inc
mov
fsubrp
test
jp,pn
mov
adc
pop
test
pusha
add
inc
int3
mov
push
stos
popf
push
pop
in
adc
jge
or
mov
aas
add
push
adc
or
adc
push
adc
int
and
sub
pusha
cld
dec
lea
xor
adc
lcall
sbb
xor
xchg
sbb
int3
mov
ljmp
cmc
ret
sbb
inc
loopne
or
inc
outsl
mov
cli
sub
lds
sub
sahf
int3
dec
mov
dec
mov
stc
cli
push
sub
and
out
addb
cmc
lcall
imul
daa
mov
insb
pop
xchg
dec
rolb
movsl
repz
fcmovbe
jle
test
fstp
loope
outsl
cmpsb
imul
mov
lret
sub
lret
inc
mov
icebp
dec
imul
jl
or
mov
lods
test
inc
iret
pop
pop
lret
jmp
adc
imul
out
outsb
push
stos
icebp
outsb
push
movsl
std
mov
lds
pusha
push
test
icebp
cmp
push
push
push
xor
aaa
ds
and
lret
jnp
push
js
mov
sarb
pop
cmp
inc
clc
cwtl
in
cmp
cwtl
cmp
out
xchg
jnp
pop
faddl
cmp
test
push
test
mov
lods
shll
icebp
and
add
xchg
popf
in
and
lods
sub
cmpsl
loopw
mov
mov
dec
sub
divb
xchg
mov
xchg
pop
das
aas
and
jno
mov
ret
rcrb
mov
int3
stos
add
and
std
mov
dec
arpl
dec
xor
inc
fidivrs
popf
and
inc
adc
push
imul
add
pop
pop
jg
movsl
sub
pop
shrl
mov
dec
xchg
pop
icebp
stos
ffree
je
or
add
mov
pop
add
push
int
aad
sbb
cmp
or
fdivr
sbb
fcomip
mov
and
dec
xlat
add
sbb
mov
lcall
jge
loop
fsts
push
fs
lret
or
cs
rolb
rcrb
shlb
jb
insb
mov
pop
je
pop
push
add
and
push
adc
scas
lods
add
cld
and
jp
and
cmp
dec
or
jbe
inc
int
push
mov
mov
adc
jecxz
mov
arpl
mov
and
out
and
or
dec
out
fs
and
xchg
out
or
aad
lahf
pusha
adcb
loopne
sub
sbb
sarb
fdivl
mov
cmp
xchg
mov
pop
mov
je
cmpl
stos
test
mov
jbe
out
ret
out
adc
push
cmc
lock
pop
sub
sbb
jae
xor
pop
jg
cmp
gs
push
jns
mov
loop
xor
xor
mov
sub
sub
xchg
dec
scas
add
cmp
push
inc
rcrl
lcall
loope
jns
cmp
sbb
mov
xor
rcll
aaa
dec
pop
inc
jmp
adc
xor
inc
ljmp
xchg
lahf
and
std
fiaddl
inc
cmc
int3
lcall
cs
dec
mov
pop
pusha
loope
jo
mov
dec
add
push
rclb
les
in
pop
movsb
push
loop
movsb
cmp
lret
xor
xchg
lock
pusha
dec
sti
std
add
and
insl
inc
cmp
into
fwait
add
in
ret
fidivrs
mov
cmp
insl
push
out
loopne
or
cmp
and
jnp
push
sub
mov
jae
or
loop
push
lret
jne
xchg
adcb
sbb
adc
cmp
lret
ds
mov
mov
or
test
pminsw
dec
fstpl
xchg
out
outsl
or
cmpsb
loop
ret
jl
cmpsb
insb
jge
mov
sbb
cli
adc
dec
cmpsl
clc
sub
add
inc
loopne
xchg
ja
pop
addl
ret
xor
fidivrl
data16
sub
out
pop
jno
in
fldcw
jecxz
bound
push
out
cmc
xlat
insb
sahf
nop
fsubrs
xor
pop
shr
sahf
xor
aaa
gs
pop
push
dec
adc
mov
pop
jo
sbb
test
into
and
inc
dec
testb
js
ss
addr16
addr16
insb
js
jb
outsl
xor
mov
outsb
xchg
out
iret
mov
xchg
push
aad
lea
jl
cld
inc
xchg
out
test
jns
scas
sbb
repnz
sbb
fucom
cmp
pop
xchg
pop
jnp
in
daa
or
pop
nop
std
int3
mov
lahf
mov
sbb
ja
cmpsl
mov
jbe
fldt
xor
xchg
xor
dec
push
dec
mov
mov
popa
dec
cltd
shl
test
daa
aaa
or
cli
imul
fists
push
call
bound
dec
push
icebp
pop
dec
pop
jmp
lcall
sub
mov
movsl
cmp
in
xor
sbb
pushl
and
jl
insb
pop
flds
push
mov
pop
or
out
jge
xchg
lcall
mov
adc
adc
in
test
mov
int3
xchg
addb
ret
addr16
jg
fisubrl
jg
outsb
fucomi
ds
hlt
pusha
int3
orb
nop
mov
iret
ret
lret
pop
xor
cwtl
nop
xor
cltd
dec
sub
js
movsb
inc
test
sbbb
ss
cli
outsb
cmpsb
imul
lcall
push
dec
mov
fwait
insl
cwtl
and
mov
sbb
dec
inc
sbb
inc
icebp
ljmp
je
sub
adc
cli
out
pop
xchg
pop
negb
repz
addr16
lahf
std
and
scas
jecxz
xchg
fisttpl
pop
fisubs
divb
xchg
jp
and
mov
add
loopne
pop
aaa
test
cwtl
mov
les
les
mov
bound
dec
aas
lcall
cmp
fcoml
insb
add
inc
mov
xchg
adc
sub
jno
negb
ud0
or
lret
xor
xor
mov
jle
cmp
sbb
dec
dec
adc
pop
into
lahf
and
mov
pop
fidivrl
out
cmp
cwtl
out
das
adc
or
cmp
test
fstps
rolb
mov
enter
int
jb
ss
ficompl
lret
jns
pop
or
jnp
daa
insl
mov
dec
sbb
sbb
xchg
mov
adc
push
sub
mov
lods
cmp
lret
stos
cwtl
add
pop
movsl
aas
stos
sub
fwait
pop
je
call
lcall
push
push
dec
xorb
rcrb
aas
repnz
cmp
loope
lret
stc
jmp
inc
sbb
and
or
pop
out
pushf
test
lock
cmp
std
sarl
dec
mov
mov
repnz
lods
push
call
rol
mov
cmpsl
fcoml
or
sbb
sub
cmp
dec
daa
pop
pop
insb
pop
jl
mov
pushf
xlat
lods
mov
xchg
in
xchg
ja
addr16
sub
cmp
dec
daa
pop
pop
insb
pop
jl
mov
aam
aam
mov
xchg
in
xchg
ja
addr16
sub
cmp
dec
daa
pop
pop
dec
pop
jl
mov
pushf
xlat
lods
mov
xchg
insb
xchg
ja
addr16
sub
dec
inc
les
addl
inc
popa
xor
or
and
inc
ret
mov
xor
sub
icebp
mov
inc
adc
popa
xor
add
inc
and
dec
rcll
mov
mov
mov
popa
stos
jno
add
or
jnp
push
rcll
roll
sbb
xor
bound
inc
push
pop
inc
mov
or
cli
jle
repz
sbb
dec
push
imulb
sahf
inc
mov
add
fisttpll
pop
jge
dec
push
icebp
les
lods
mov
push
ret
mov
jg
les
andb
cmp
inc
adc
mov
inc
out
jno
mov
in
xor
popa
add
mov
pop
push
cmp
in
mov
bound
inc
fnsave
insb
push
jp
sarl
mov
jge
test
icebp
sub
lcall
ret
adc
lret
gs
mov
sbbb
and
push
adc
jno
repz
popf
sub
mov
and
xor
pop
aaa
dec
fs
jle
dec
add
es
mov
xchg
adc
ret
shrb
aaa
push
and
dec
add
sbb
lock
pushf
jecxz
xchg
jbe
hlt
ror
fistl
daa
pop
adc
inc
sbb
xor
xchg
roll
adc
mov
inc
adc
popa
xor
add
inc
and
popa
rcll
mov
mov
adc
push
cld
dec
push
iret
shll
jecxz
jno
scas
pop
jb
add
fisubs
pushf
xor
popf
test
add
movsb
xchg
mov
xchg
test
push
cmc
or
and
jge
ds
push
xchg
cld
push
pop
sub
sti
mov
out
mov
push
es
push
sarb
push
cmp
xlat
and
push
xor
mov
sahf
inc
inc
or
lret
in
vpcomb
popf
fs
mov
sti
and
nop
push
das
inc
fucomi
rorb
pop
push
inc
dec
sbb
flds
stos
out
nop
push
dec
adcl
sub
pusha
dec
fisubrl
xor
add
xor
adc
or
iret
je
in
adc
mov
call
std
test
xor
leave
fstps
lods
sahf
jnp
repnz
push
push
dec
cmp
pop
add
xchg
call
repnz
jge,pt
test
sbb
xchg
xor
aad
dec
loop
clc
pop
jl
int
bound
bound
mov
mov
hlt
pop
test
xlat
cmp
cltd
xor
xchg
pop
dec
daa
cmp
mov
in
popa
cltd
sbb
xchg
arpl
jno
and
mov
sbb
in
mov
mov
jns
and
mov
inc
add
loop
mov
stos
push
mov
pushf
xchg
jecxz
rolb
dec
test
dec
cmpsl
or
jb
pop
fildl
jne
mov
es
push
ljmp
dec
inc
jb
pop
dec
loopne
inc
and
call
js
icebp
scas
es
xchg
ret
xchg
fimuls
lahf
fnsave
mov
push
lods
push
insb
dec
cmp
loop
mov
lret
push
test
test
inc
int
repz
pusha
pop
or
pop
lcall
fwait
adc
xor
lods
das
insb
imul
push
in
ret
cmp
mov
ljmp
in
sbb
mov
dec
in
insl
stc
into
out
jbe
ds
mov
pop
roll
and
lock
in
mov
mov
mov
addr16
adc
lcall
xor
xchg
ret
idivl
xchg
adc
mov
out
jp
ja
sub
and
mov
pop
out
cmp
jmp
loope
addb
jle
fs
or
adcl
icebp
test
clc
dec
add
lods
jg
push
jne
arpl
jecxz
insb
add
out
pop
sbb
fsubrl
cli
cs
mov
jge
addr16
loop
mov
mov
std
cltd
imul
inc
xchg
sub
rol
dec
lret
sbb
icebp
sub
lods
inc
or
enter
das
mov
mov
sub
push
lock
int
mov
add
rol
inc
push
stc
cmp
add
rolb
jecxz
filds
sbb
jns
mov
bound
xchg
xchg
flds
jg
test
jle
into
xlat
lcall
or
xchg
mov
pop
sti
in
mov
cmp
std
pop
jg
xchg
stc
divl
dec
mov
sub
push
jo
push
ds
mov
jle
js
ljmp
cmpsl
adc
popa
lahf
push
or
pusha
cmpsb
daa
push
sub
xor
ds
cmp
je
push
in
aam
mov
add
push
call
imulb
jnp
mov
out
adc
jbe
loop
pop
repz
jecxz
stc
int3
sti
test
xor
jne
dec
mull
ficomps
or
mov
insl
dec
outsb
in
sub
stc
add
lods
xchg
sbb
loope
repnz
xor
add
mov
lret
mov
push
or
inc
sub
movsl
sbb
xchg
xor
inc
ret
fwait
mov
and
xchg
fdivl
insl
dec
out
xorb
mov
mov
subb
add
adc
in
lcall
xchg
and
imul
push
pop
and
lods
push
sub
and
cmp
cmpps
inc
sub
inc
sbb
mov
cli
insb
icebp
movsb
and
jp
lret
mov
das
aad
nop
push
push
or
sub
out
push
ljmp
movsl
test
ret
hlt
xor
ja
cmp
dec
xlat
popa
ljmp
outsl
test
lods
xor
rclb
adc
fsubrl
scas
out
sar
sbb
cmp
roll
and
or
mov
sbb
pop
xchg
inc
daa
imul
adc
mov
shll
cmp
hlt
mov
cltd
cli
push
popf
dec
ret
jge
fmuls
sub
loopne
jmp
ret
lds
adc
dec
jns
aam
inc
stc
dec
cld
and
std
dec
mov
cmc
adc
adc
dec
mov
mov
dec
cmp
add
sub
cmp
aam
mov
pop
jp
mov
in
sub
mov
mov
mov
push
ficoml
mov
add
inc
inc
adcl
and
lret
adc
or
scas
cmp
aam
pop
das
push
lods
popa
pop
sbbl
cwtl
pop
mov
sub
pusha
mov
add
push
repz
jmp
cmpsl
mov
or
xchg
je
cwtl
mov
cmp
dec
aaa
orb
jecxz
jg
mov
jmp
pop
into
push
cmpl
aas
into
pop
ss
in
mov
idivl
call
test
in
cmpsl
jp
loope
mov
fdivrl
add
fsubrl
sbb
mov
stc
inc
adc
mov
div
mov
dec
divl
in
movsb
shr
loopne
scas
js
pop
dec
iret
sti
int3
xchg
nop
scas
push
push
mov
outsb
and
mov
cmpsb
mov
pushf
mov
mov
pop
and
adc
mov
inc
sub
inc
or
jbe
aad
mov
test
mov
imul
mov
cwtl
cld
dec
push
cli
rclb
data16
inc
push
xor
stos
or
das
inc
xchg
mov
add
fisttpl
add
and
pop
les
mov
outsl
and
popa
push
add
dec
fs
cs
loope
adcl
pop
stos
test
rol
lods
pusha
xor
sbb
lods
and
pop
jmp
outsl
mov
testb
inc
cli
out
stos
rcll
adc
and
or
iret
mov
gs
push
cmp
es
or
ficompl
leave
fistpl
jbe
sbb
mov
or
xor
rcll
sbb
jp
cmpsl
push
rcrb
sbb
xchg
or
iret
pop
dec
jp
cmp
imul
mov
inc
add
out
push
test
dec
adc
subl
iret
rcr
push
sahf
or
cs
inc
xor
mov
call
cmc
insb
lea
hlt
push
mov
in
push
push
fsts
cli
cmpsl
icebp
inc
pusha
lods
add
int
lock
push
jae
inc
iret
outsl
test
and
enter
ss
out
lret
or
xchg
sub
dec
and
and
popf
cmpsb
adc
movl
in
sbb
movsl
outsl
mov
jle
es
xchg
enter
inc
stc
add
lret
mov
imul
pop
mov
lock
push
lods
repnz
lcall
jae
lcall
int
pop
mov
jecxz
xor
jl
add
jbe
dec
push
adc
lret
cmp
adc
popa
idiv
movsb
lret
sarb
stc
sub
insl
mov
cltd
push
dec
movsb
lcall
rcr
out
inc
ret
loop
mul
mov
sub
xchg
mov
cmovbe
mov
mov
pop
cli
cltd
mov
pusha
and
mov
stos
jmp
lods
ja
andb
hlt
sahf
test
xor
inc
mov
push
inc
push
fmull
or
shr
cmpsl
jbe
jae
les
fsqrt
loopw
inc
xchg
xchg
sbb
jmp
aad
int3
xchg
adc
mov
aas
jnp
mov
aad
cmp
aaa
sti
pop
mov
sub
cs
cmp
imul
sbb
jle
mov
mov
inc
icebp
xchg
sarl
mov
xchg
cwtl
adc
aaa
push
mov
mov
lds
stos
clc
push
sub
repnz
icebp
add
cltd
mov
sbb
mov
jge
pop
rol
rcl
push
loope
stos
in
sbb
and
dec
xchg
add
pop
cwtl
leave
inc
call
inc
dec
imul
mov
mov
mov
mov
int3
adc
ljmp
call
cmp
fistps
call
cmpsl
and
pop
push
inc
inc
cmp
incl
iret
cmp
jg
xor
inc
xor
or
inc
mov
int
es
push
push
dec
mov
popf
aad
fisttpl
xchg
sbbb
or
push
dec
sahf
cmpb
jl
push
sbb
inc
shr
jmp
dec
sbb
ljmp
xchg
push
jne
test
call
in
cmpsb
fsubp
stos
roll
jno
adc
outsb
iret
cmp
mov
ret
jmp
adc
leave
pop
jae
mov
lods
pop
adc
xor
loop
scas
cli
je
fstps
cs
shr
mov
add
sub
ret
lahf
xlat
mov
fmuls
cmp
fisttpll
jns
xor
insb
insb
push
mov
aaa
and
cmc
dec
out
nop
mov
cmp
es
xor
outsb
xor
out
jg
push
mov
insb
outsl
cwtl
test
jae
jb
test
mov
test
mov
fistpll
or
sub
pop
fisubl
lods
dec
push
mov
pop
xor
lcall
out
or
sub
mov
enter
sub
pop
sti
addr16
dec
mov
hlt
mov
imul
push
jmp
dec
inc
in
dec
in
xchg
jnp
sbb
mov
cmpsb
stos
call
push
mov
sbb
loope
cmp
pop
or
lcall
ljmp
pop
ret
sbb
pop
jno
rclb
xor
leave
mov
mov
repz
push
loop
and
or
cmp
enter
or
cmp
insl
xchg
jae
sarb
mov
dec
and
sar
mov
ficoms
aad
negb
pop
xchg
lcall
pop
outsb
sub
shll
iret
rcrb
xlat
lods
or
loop
or
jmp
push
lar
dec
lods
add
mov
mov
add
or
mov
insb
adc
mov
pop
shr
inc
clc
inc
sub
lret
pop
icebp
sti
push
jnp
in
ds
call
dec
cmpsb
cwtl
sbb
jbe
push
mov
pop
test
jnp
jp
incb
out
jne
gs
xchg
mov
push
ja
jne
nop
andl
adc
jg
cli
addr16
lret
cmp
mov
adc
movsb
insb
push
mov
movsb
in
icebp
inc
push
inc
push
or
cli
sti
mov
pop
lcall
cmp
xchg
aaa
push
ffree
fldcw
inc
ja
call
push
cmp
rcll
mov
add
and
or
movsl
xchg
loope
jmp
popa
int3
adc
cli
jp
ret
xchg
fwait
enter
repnz
or
js
lcall
xchg
jno
in
je
add
testl
jno
mov
push
data16
jecxz
lock
and
pop
das
shr
fisttps
shrb
or
or
insb
repz
adc
in
dec
mov
notb
cmp
jmp
adc
aaa
push
push
push
jb
pop
enter
adc
xchg
addr16
test
inc
xor
bound
test
jmp
mov
xlat
std
ret
pop
pop
or
xor
mulb
movsl
lahf
mov
enter
in
cmc
adc
ret
bound
inc
fcomp
adc
sbb
xchg
bound
out
xchg
sahf
push
mov
fistpll
fdivrl
lret
repnz
mov
jb
movsl
call
dec
xor
mov
cmpsb
xor
out
mov
push
adc
adc
mov
push
jb
mov
xchg
std
adc
insb
ss
and
mov
add
ficoms
lods
mov
add
shll
mov
push
int
xchg
mov
ret
popa
inc
insb
jae
and
jle
xchg
lret
dec
mov
popf
mov
movsl
mov
imul
arpl
adc
dec
loopne
outsl
outsl
jg
push
push
test
stos
sbb
inc
lock
jg
push
jne,pn
scas
xchg
sub
push
repnz
testl
push
push
cmp
pop
adc
mov
shlb
lods
or
and
lret
addb
mov
mov
test
outsb
pop
shll
stos
pop
xchg
push
fisttps
out
pop
jle
jmp
movsl
mov
push
and
pop
invd
pusha
in
daa
and
push
scas
pop
mov
imul
xchg
lret
mov
add
stos
adc
mov
bt
sbb
inc
ficoml
sbb
sbb
push
jl
int3
stc
and
push
or
scas
in
and
xchg
repnz
cmp
fcomps
dec
push
outsl
jg
loopne
inc
push
rep
cmp
push
mov
dec
les
pop
lea
or
pop
add
lds
cmpsb
cwtl
popa
mov
xor
pusha
sbb
sbb
pop
loope
mov
shll
adc
stc
aad
mov
xor
data16
outsl
loop
add
jb
cmp
and
repz
mov
std
jbe
test
in
out
mov
cs
mov
jp
imull
pop
sysenter
xor
pop
lods
cmp
cmp
into
in
mov
sub
inc
inc
add
das
insb
jns
sub
in
std
mov
xchg
leave
jp
lea
mov
dec
xchg
mov
jecxz
fcomps
popf
mov
and
enter
retw
pop
pop
mov
mov
cld
out
aad
dec
test
mov
ret
popa
mov
push
pop
dec
mov
mov
mov
mov
cld
int
std
aaa
sar
pop
adc
xor
iret
call
dec
adc
pushf
fwait
enter
or
arpl
lods
daa
mov
aam
mov
nop
adc
push
push
sub
mov
adc
sbb
arpl
shrb
xchg
jno
add
sbb
pop
in
sub
and
and
arpl
adcb
aad
push
xor
ja
subps
or
loop
loope
arpl
cmp
pushl
jg
movsl
shrl
pop
dec
inc
or
cli
jne
pop
inc
dec
pop
rcrb
subl
push
jmp
es
roll
pushf
lea
out
add
dec
jb
mov
fisttpl
sub
jne
xor
scas
push
lds
cld
lret
loope
out
push
into
jge
sahf
daa
xchg
mov
or
flds
rorb
lret
mov
xor
pop
xchg
ret
repnz
popf
leave
sbb
cmp
xchg
cli
push
pop
idiv
test
test
pop
push
hlt
dec
lret
jle
mov
lret
cmpsl
jmp
xor
mov
cmp
or
jnp
cld
adc
xlat
pop
scas
sti
add
repz
ja
dec
aam
jecxz
aam
inc
es
mov
test
aam
xchg
hlt
test
daa
jnp
in
mov
mov
aas
adc
addr16
je
ror
movsl
orb
add
xchg
nop
push
jno
fldl
fisubs
adc
xchg
pop
jg
jo
or
add
and
leave
fdivrl
dec
inc
stos
add
movl
sbb
mov
xchg
stos
in
sub
cmp
hlt
hlt
fsubs
and
roll
push
dec
scas
adc
xchg
fisttps
ret
mov
jmp
mov
jmp
cmp
pop
sbb
pop
xchg
in
out
scas
sbb
pop
lcall
aas
cmp
mov
add
push
adc
xor
cmpsb
lock
xchg
scas
inc
cmp
out
sbb
adc
xchg
or
inc
mov
dec
pop
adc
push
out
dec
cmp
mov
popa
pop
cmp
lock
in
mov
aas
xchg
pop
fdiv
ds
adc
lods
or
sbb
scas
cld
xchg
insl
mov
and
inc
mov
popa
fmull
or
pop
push
xchg
outsb
insl
roll
mov
out
test
xchg
and
dec
adc
out
jle
jno
sbb
repz
adc
ficoml
nop
aas
xor
aaa
push
fmul
jl
push
pop
out
fistps
dec
repnz
ss
aad
push
repz
add
aaa
scas
call
xchg
pop
xlat
sahf
push
inc
sub
cmc
fildll
repz
mov
sbb
mov
and
les
ret
jmp
lret
sbb
mov
jmp
stos
int3
or
cmp
cmp
push
lods
rol
aam
int3
test
clc
dec
loope
and
js
int
pushf
imul
repz
cld
pop
pop
popa
push
popf
dec
mov
out
addr16
sub
push
leave
insl
adc
sar
or
rcrb
mov
fcmovb
lods
popa
jb
adc
adc
inc
inc
push
aam
or
hlt
xchg
imulb
lods
shl
push
popa
test
sub
mov
mov
jge
add
in
xlat
mov
int3
cli
insl
imul
ret
fmuls
cmovae
in
test
in
ja
lock
fcomp
mov
inc
lret
out
or
jo
cli
xchg
seta
aas
repnz
xchg
iret
jbe
iret
push
clc
daa
dec
adc
sub
sbb
enter
xor
repz
xchg
pusha
aad
jne
ljmp
mov
loope
in
fidivs
xchg
aad
pop
cmp
rclb
sbb
jg
inc
ljmp
pop
xchg
xchg
lret
sub
xor
jbe
fucomp
sbb
shrl
into
xorb
jl
and
jae
sarb
jle
jb
inc
out
icebp
pusha
iret
push
mov
movb
arpl
push
cwtl
mov
or
xchg
adc
xchg
add
call
in
enter
lahf
and
fnstcw
push
add
mov
xchg
std
outsl
mov
testb
les
mov
loope
dec
xchg
leave
push
shlb
movntq
out
int3
pop
aam
pusha
xchg
stos
mov
out
sbb
fwait
repnz
mov
sub
ja
push
cld
mov
insl
jmp
popf
shlb
insb
fisubs
push
aad
popa
xchg
mov
and
ja
repz
jns
shrl
inc
jmp
cmp
xlat
fistpll
scas
test
cmp
sbb
cs
xor
ss
out
add
push
fsubrp
out
cmp
clc
pop
and
int3
sbb
lods
mov
test
icebp
sbb
inc
xchg
jmp
rol
icebp
xchg
mov
dec
insl
sbb
jnp
jp
dec
sti
and
int
inc
xchg
mov
loop
inc
mov
movsb
in
ljmp
dec
or
mov
and
push
xor
push
test
ss
es
arpl
add
pop
mov
cltd
negb
adc
es
cmp
into
mov
das
sub
push
xor
repz
lea
sbb
jb
jb
xor
and
sbbb
xorb
daa
inc
mov
or
movsl
stos
ds
ret
ds
test
clc
outsl
scas
out
sbb
insl
mov
js
lret
mov
xor
sub
nop
scas
adcb
loop
sarl
js
dec
jo
pop
jb
lea
test
inc
sub
lret
ljmp
daa
pop
or
xor
cltd
push
popf
jmp
mov
inc
call
loopne
push
add
pop
stos
gs
leave
scas
pop
mov
int
sti
jno
mov
int
data16
or
shll
aam
enter
adc
adc
test
int3
lods
int
in
sbb
nop
and
push
cltd
pop
mov
inc
sub
stos
sub
dec
pushl
pop
mov
popf
xchg
imul
ret
in
cmp
xchg
lahf
mov
mov
jp
popf
in
stos
fwait
in
ret
adc
fsubr
js
jno,pt
fcoms
pop
inc
test
mov
jb
mov
cmp
loopne
or
inc
cmp
mov
push
dec
sub
inc
in
dec
dec
and
sarb
dec
push
std
push
ficoml
add
sbb
and
repz
pop
mov
mov
rcrl
dec
enter
mov
add
jno
add
inc
and
popa
rcll
mov
mov
adc
popa
xor
add
inc
and
popa
rcll
mov
mov
adc
jno
add
sub
jne
popa
rclb
test
aad
shll
push
in
aad
popa
add
inc
mov
outsb
sub
icebp
imulb
dec
cltd
int
frstor
in
adc
add
out
push
ret
cmp
mov
or
sarl
and
adc
add
push
mov
mov
int
sbb
ret
int
fnstsw
in
or
sbb
dec
mov
addb
jge
or
mov
mov
fs
mov
inc
lods
sub
xchg
out
in
mov
push
test
push
test
jb
popf
nop
push
lods
inc
mov
xchg
ret
cmpb
mov
popf
scas
aad
ljmp
dec
es
jecxz
dec
mov
mov
pop
push
pusha
pop
dec
sarl
faddl
jae
jae
daa
mov
pop
xchg
insb
pop
push
repnz
pop
data16
sub
shll
mov
fmull
mov
push
cs
clc
sub
imul
pop
icebp
loop
jge
cmp
xor
and
jmp
mov
outsl
and
adc
fldt
jl
fistl
lds
and
xor
or
add
push
mov
mov
or
leave
cmp
push
test
lea
add
aas
mov
mov
or
sbb
scas
test
mov
insb
lea
sub
sub
or
outsl
idivb
or
jae
inc
mov
mov
xor
and
inc
popf
arpl
mov
mov
or
sarl
and
adc
add
push
mov
mov
or
sarl
xor
rolb
jae
lahf
std
inc
popf
dec
pop
cmp
insb
pop
outsb
mov
add
sahf
ss
mov
adc
out
xchg
and
cs
sub
pop
rorl
movsl
sbb
lcall
or
add
scas
int3
mov
pop
iret
jecxz
xor
jge
jae
xchg
cmp
les
mov
scas
add
jmp
jae
xor
push
js
adc
xor
lea
mov
das
xlat
pop
dec
add
mov
cmp
dec
dec
int3
xor
daa
jnp
aaa
fidivrs
jo
out
mov
test
or
leave
inc
test
xor
xlat
repnz
cmp
add
add
aad
sub
sbb
and
or
mov
leave
out
int
fnstsw
testb
dec
sub
ret
aaa
fisttpl
cwtl
dec
inc
in
ja
iret
xchg
lods
add
arpl
ljmp
jl
data16
aad
cmp
jp
fsubrl
movsl
jnp
push
add
dec
scas
ret
mov
adc
jne
xor
sub
ret
xchg
int3
add
scas
jg
mov
and
pop
cltd
add
js
icebp
or
jno
mov
popa
into
adc
in
inc
and
pop
ljmp
and
out
ss
pop
rcl
movsb
xor
mov
and
lahf
jmp
fimull
les
or
mov
add
mov
mov
xchg
orb
adc
sbb
jle
pop
lahf
leave
inc
int3
std
shll
filds
push
add
mul
in
mov
addr16
int3
or
push
shl
dec
andb
sbb
cmp
pushf
sub
inc
adc
mov
or
jns
xchg
lds
in
fstpl
mov
jns
lds
idivb
daa
mov
test
mov
loopne
pop
ret
insl
xchg
cld
into
aas
cmpsl
xchg
data16
or
jge
pop
sarl
mov
and
hlt
inc
jmp
push
js
scas
mov
pop
pop
sbb
aad
cmp
xchg
stc
adc
push
adc
jo
xor
dec
push
sti
push
mov
test
popa
add
or
sbb
sahf
mov
int3
lcall
cld
jle
adc
xchg
xchg
jne
int3
sti
and
push
xlat
loope
xchg
add
push
cld
ret
cmp
dec
std
pop
push
mov
ljmp
shlb
lret
mov
inc
cmp
fsts
test
aam
icebp
loop
repz
pusha
pop
add
outsl
lret
dec
mov
mov
ja
fwait
ss
xor
sub
stos
mov
cmpsl
pop
cld
push
stc
sbb
add
jnp
gs
mov
addl
and
push
loope
push
cmp
fisttpl
pop
call
xchg
jb
adcb
insl
sub
ja
fwait
or
in
rorb
cmpsl
adc
popa
xor
imul
shll
jl
push
test
lock
cmp
mov
scas
shll
daa
data16
ja
mov
int3
imul
test
insb
testl
gs
add
cwtl
repnz
sub
clc
push
lods
fs
mov
rcr
inc
andb
jmp
ret
cmp
sbb
pop
jle
fcmovb
or
lahf
inc
mov
cwtl
pop
adc
dec
mov
sbb
sbb
ljmp
or
xchg
jmp
adc
mov
mov
mov
ds
sub
ja
pop
xchg
ds
add
ja
int
mov
push
sub
lret
adc
testl
and
iret
hlt
fwait
insl
dec
cmpsb
adc
cmp
imul
cmp
or
push
dec
add
xor
test
cwtl
xchg
lret
repz
js
cmc
jno
pop
nop
or
negl
dec
daa
fimuls
cmpsl
push
xor
cmp
repnz
popa
pop
dec
test
push
in
dec
dec
loop
adc
lret
or
mov
fstpt
sbb
out
sarl
pop
cmp
mov
sbb
fimuls
and
adc
outsl
repz
jecxz,pt
mov
lods
lret
push
sti
mov
sbb
xlat
jg
les
test
xchg
or
pop
push
and
arpl
jmp
outsb
aad
xor
shrl
aam
pop
sbb
dec
cmpsl
les
mov
pop
inc
jmp
pop
aaa
ja
je
or
mov
bound
imul
packssdw
in
push
aad
stos
adc
xchg
sub
sbb
adc
stos
std
inc
lret
ss
mov
add
repz
call
aad
jae
stos
mov
int
inc
xchg
and
fwait
mov
xor
jns
sbb
insb
push
xlat
sbb
adc
push
imul
xchg
or
stc
test
sbb
iret
sti
jns
xchg
pop
or
cmp
xor
inc
imul
xorb
mov
scas
pop
lea
sub
cmp
mov
dec
add
mov
jne
das
sti
mov
shrl
arpl
pop
fs
and
bound
xor
mov
cmp
inc
dec
cmp
movsl
mov
mov
andb
or
fwait
lahf
shll
sbb
ja
jmp
cltd
adc
xchg
cmp
and
mov
nop
movsl
adc
int
sbb
pusha
xchg
add
xchg
int
or
fdivs
outsb
add
inc
adc
popa
clc
sahf
int3
pop
mov
scas
call
sbb
rorb
lret
dec
jl
pop
inc
cmp
xchg
sub
xchg
pop
push
lcall
and
inc
call
or
bound
loope
pop
lret
add
aaa
shlb
fidivrs
inc
js
loopne
enter
ss
cld
stos
stc
pop
or
push
in
call
inc
push
shlb
xchg
add
lret
sahf
push
jae
jb
sbb
or
notb
aaa
sti
mov
sahf
aad
mov
rol
xchg
xchg
cli
jecxz
in
aad
jle
sbb
jno
loop
and
adc
repnz
stos
mov
cmpsb
mov
lods
shlb
stos
jmp
ficomps
xchg
mov
faddp
addr16
mov
int
or
mov
cmp
nop
jo
xchg
cmp
xor
xchg
ds
das
fcomi
mov
xor
pop
mov
push
adc
aam
adc
enter
sahf
jb
lahf
push
push
sub
dec
push
xchg
adc
fstps
add
inc
addr16
mov
dec
fiaddl
cmp
add
dec
std
pop
inc
xchg
sbb
xor
jnp
push
fs
xor
mov
ljmp
out
sahf
mov
cmpsl
pushl
rcll
repnz
fs
inc
xor
sub
fmull
decl
sub
dec
sbb
inc
or
repz
or
into
jb
cmc
mov
pushw
jae
shll
pop
xchg
int3
arpl
jo
in
ss
imul
scas
xor
cli
sbb
dec
push
fistps
pop
cmpsb
jno
outsb
fdivs
test
or
push
inc
mov
xor
add
dec
cs
adc
pop
pop
cs
push
rolb
loope
jmp
into
imul
push
daa
jmp
insb
dec
outsl
adc
or
jge
pop
mov
ds
push
jg
mov
mulb
or
push
xchg
idivl
dec
iret
push
mov
fmul
mov
fidivrs
or
pop
sti
adc
popa
js,pt
jae
xchg
inc
xchg
fisttpl
vandps
les
sarl
scas
in
inc
sbb
aas
sub
loop
movsbl
add
xlat
cmp
test
int3
nop
mov
cltd
inc
scas
and
ficomps
xchg
jecxz
adc
out
push
ss
daa
insl
sbb
push
mov
dec
cmp
cs
nop
mov
fldt
lods
cmp
je
mul
push
pop
push
loop
stc
cmpsl
xor
dec
mov
insb
mov
add
nop
and
cmp
outsl
pop
data16
shl
add
pusha
aaa
lods
call
xor
push
repnz
mov
xchg
lret
jno
or
xlat
dec
in
movsl
cli
cmp
rcrl
xor
xlat
aaa
push
pop
ljmp
mov
fs
mov
and
cmp
jecxz
dec
stos
inc
add
xchg
mov
fxch
sbb
fs
pop
loopne
es
or
pop
xor
inc
and
hlt
imul
jecxz
inc
cmp
adc
sbb
or
imul
jge
sar
cmp
push
es
push
in
add
mov
roll
ret
push
ljmp
aas
dec
lahf
sbb
mov
fbld
out
mov
mov
fdivrl
jns
mov
mov
out
mov
ret
sub
xchg
sub
add
sbb
jle
fwait
adc
stc
pop
or
fstp
int
shr
addl
mov
push
or
aam
sarb
add
xor
cs
int3
lds
push
in
repz
adc
call
pop
and
iret
pop
push
mov
pushf
jp
and
jbe
push
mov
or
jg
das
mov
or
push
dec
mov
dec
dec
fmul
es
hlt
aaa
pop
sbbl
mov
push
sbb
xor
jae
iret
pop
mov
dec
out
sbb
pop
out
subl
pop
lret
ja
cmp
lret
lods
mov
lods
pop
pop
cmp
shlb
jb
push
xor
pop
xor
loope
push
xor
fiaddl
scas
js
stos
aam
adc
enter
pop
ret
shlb
push
and
xor
and
sub
shll
sarb
lcall
push
push
test
addr16
sbb
dec
clc
add
das
pop
xchg
xor
dec
mov
cmp
xchg
adc
pop
mov
fwait
ss
mov
mov
popf
mov
jne
inc
out
aaa
ljmp
int3
inc
ds
sahf
inc
inc
lret
divb
aas
es
test
mov
mov
jae
xchg
sub
adcl
add
in
mov
shll
cmp
pop
fisubrl
nop
cmp
inc
push
lea
ds
frstor
xchg
mov
or
mov
out
orb
mov
enter
iret
mov
pop
cld
pushf
xchg
aad
lahf
push
cmpsl
mov
and
pushf
and
and
je
cmc
into
and
jg
or
out
testl
lret
xchg
movsl
dec
insb
sbb
xor
bound
push
add
icebp
les
or
xor
lds
addl
icebp
test
rorb
push
hlt
inc
mov
test
sbb
xchg
mov
out
js
loope
pop
push
clc
mov
dec
inc
sbb
loope
or
xor
jo
arpl
jae
dec
loop
js
aam
es
add
xchg
ret
std
mov
xchg
clc
inc
js
stc
in
insl
bswap
xchg
scas
loope
jecxz
jg
les
sahf
inc
addb
out
subl
int
nop
sbb
cmp
ljmp
jl
into
jae
dec
add
cmp
jo
mov
test
dec
je
pop
mov
mov
mov
dec
cmp
xchg
sub
push
dec
mov
loopne
andl
call
mov
pop
adc
mov
arpl
and
andl
adc
cmpsl
arpl
pop
cld
adc
add
jp
imul
cmp
pop
xchg
test
pop
jle
loope
inc
or
and
sbb
lahf
popl
dec
push
xchg
repnz
pusha
lods
and
inc
sbb
int
cmp
mov
lret
cmp
sub
in
dec
and
mov
xor
mov
xor
rorb
sbb
xlat
push
test
and
mov
push
jnp
repnz
test
dec
scas
call
push
aaa
xor
stos
repnz
loopne
xchg
int
mov
test
jmp
xor
data16
or
hlt
pop
sti
jmp
repz
and
lea
jcxz
enter
lcall
and
lret
xor
aam
bound
dec
push
dec
mov
in
add
repz
cs
fs
cmp
add
lods
dec
pop
pop
mov
xor
stos
inc
jbe
push
sbb
pusha
jl
sti
lret
push
and
jbe
jne
test
xor
aad
lea
cmc
pop
and
xchg
inc
xchg
mov
sbb
sub
cld
and
fildll
cmc
lcall
xor
imul
cmp
inc
nop
adc
sahf
cltd
leave
lcall
mov
adc
and
and
and
cmpsl
ret
sti
pop
add
dec
mov
out
cmp
xchg
mov
or
xor
jns
arpl
pop
aad
std
mov
sub
pop
push
ss
and
shl
repz
rcr
pop
fwait
sbb
adc
std
loope
enter
xor
jge
xor
xchg
imul
mov
mov
push
scas
mov
cmpsl
sbb
push
fs
pop
push
mov
jae
dec
sahf
lea
shlb
sub
dec
cmc
jge
sarb
fxch
sti
data16
mov
in
add
fsubrs
arpl
imul
xor
ret
enter
sti
mov
rcr
sbb
jb
pop
dec
fmull
leave
ficoml
mov
lret
push
adc
fistps
in
lahf
sbb
xlat
std
ja
insb
mov
mov
mov
jmp
lods
xchg
xlat
xor
mov
add
ss
mov
inc
aaa
xorb
cltd
push
mov
cmpsl
xchg
dec
int3
jmp
adc
imul
mov
adcb
bound
jnp
jp
and
push
je
roll
fwait
enter
sbb
cmp
jl
xchg
outsb
pushl
sbb
xor
mov
pop
pop
adc
xchg
mov
les
sbb
push
mov
jne
add
int3
push
jl
repnz
or
movsl
mov
lret
popf
xor
cltd
subb
sbb
loopne
xor
cli
jne
int3
inc
adc
xchg
nop
pop
fcoml
inc
xchg
push
mov
adc
jle
and
dec
adc
lret
nop
mov
pop
dec
pop
mov
lret
mov
out
cmp
push
pop
cmp
int3
movsb
push
imul
dec
insb
in
dec
mov
push
or
icebp
aaa
dec
test
das
cmp
jmp
inc
push
dec
stos
fbstp
jo
cmp
jns
mov
fnstcw
mov
sbb
dec
pop
dec
in
ret
arpl
jp
data16
mov
bound
jmp
lods
inc
mov
cmp
ret
daa
cld
push
inc
dec
movsl
cmp
scas
xchg
and
pop
cmc
xlat
pop
xchg
daa
mov
mov
cmpsl
andl
push
cmc
cmpsb
insl
add
bound
sbb
or
mov
xor
mov
adc
out
or
inc
arpl
jns
imulb
dec
loope
out
pop
mov
cmp
repnz
es
mov
mov
divb
push
xor
test
aam
dec
sbb
pop
stos
inc
imul
aaa
lahf
or
leave
mov
xchg
push
mov
jmp
inc
in
jns
fidivrs
and
clc
stos
jno
gs
fsin
in
and
scas
pusha
stos
jns
inc
popa
sbb
or
mulb
ja
aam
and
mov
outsl
push
jg
cmpsb
roll
mov
jno
mov
cmp
pushf
ss
fnstenv
pop
or
mov
mov
jecxz
push
jecxz
lea
jns
xor
fisttpl
mov
mov
outsb
inc
rcrl
repnz
hlt
stc
scas
xor
xor
shrl
scas
mov
mov
lret
bound
aam
andb
add
shr
negl
std
dec
adc
mov
inc
ljmp
int3
rol
push
and
pusha
jne
add
mov
jle
jno
push
jnp
out
mov
scas
ja
nop
xchg
out
mov
test
test
push
pop
sbb
jge
mov
jo
js
sub
dec
ljmp
xchg
mov
movsb
jl
icebp
xchg
pop
lcall
jg
mov
rcrl
jp
loope
push
flds
out
pushf
and
rcll
xchg
lret
and
xchg
dec
in
es
sti
jge
cmp
pop
and
popa
scas
mov
int3
sbb
add
push
subl
fwait
cmp
inc
bound
pop
stc
jl
out
mov
mov
xor
add
roll
fcmove
cmp
lret
adc
out
add
outsl
pop
in
arpl
rolb
push
sahf
leave
nop
stos
mov
xor
loope
test
mov
adc
inc
test
ret
adc
push
insb
cmp
dec
jae
lcall
dec
adc
divb
mov
das
and
jb
cmpsl
das
ficomps
in
sbb
push
and
adc
xchg
xor
add
out
cltd
repnz
out
sub
frstor
jp
pusha
xchg
js
shrb
or
xchg
push
add
cs
push
out
and
cmpb
lret
in
inc
adc
negl
cmpsl
fiaddl
xor
lock
dec
ljmp
adc
xor
mov
insb
scas
sahf
cmp
lret
pop
pop
clc
ljmp
mov
fnstcw
ficoml
repz
dec
cltd
cmc
sub
mov
mov
mov
fidivl
or
add
enter
addr16
push
repz
dec
loopne
mov
xchg
or
into
push
cmp
inc
cli
jbe
bound
iret
data16
repnz
xor
lods
outsl
in
imul
xchg
dec
and
push
jb
mov
ret
sarb
inc
cld
pusha
mov
pop
cmp
dec
lret
jo
xor
and
add
xlat
dec
fsts
and
das
test
cli
xor
pop
rorl
call
add
push
sbb
mov
insb
pop
das
inc
dec
and
xor
shrl
ds
and
mov
js
pop
xchg
out
shlb
aas
dec
add
js
cs
inc
pushf
cmp
dec
bound
notb
je
mov
cmp
popf
and
stos
sbb
pushf
in
xchg
sbb
cmp
pop
sbb
mov
or
fwait
jnp
mov
dec
push
cmpsb
sub
mov
jb
es
aaa
sub
push
mov
call
ret
inc
cmp
popf
ret
ficomps
int3
pop
push
aad
xchg
and
dec
mov
inc
adc
mov
shlb
inc
push
out
or
ljmp
dec
cmpsl
sti
scas
pop
adc
cmc
cltd
shr
inc
add
ljmp
lds
jle
mov
sbb
mov
je
lds
adc
pusha
sub
out
cmp
adcb
and
push
bound
rolb
imul
dec
mov
add
imul
call
add
xchg
xchg
aad
lret
cmp
out
jbe
std
mov
out
inc
stos
notb
or
jmp
loop
jl
in
add
mov
ljmp
mulb
mov
dec
xchg
rolb
or
lret
pop
sbb
cwtl
adc
out
sti
enter
iret
fs
adcb
frstor
out
ljmp
iret
adc
iret
cmp
sbb
adc
push
mov
cmpsb
push
enter
stc
add
push
xchg
repnz
xor
add
mov
dec
leave
fbstp
xor
leave
int3
xor
addl
cs
xor
cmp
mov
imul
xor
popaw
sub
dec
sbb
ss
and
outsb
xchg
push
cmp
cltd
xchg
cmp
addr16
decl
xchg
sbb
lds
cmp
jo
adc
popf
out
lods
pushf
sbb
or
daa
mov
jns
jae
stos
stos
inc
xor
loope
pop
and
mov
insb
pop
cmp
sub
cmp
lahf
lahf
mov
or
mov
iret
cltd
and
jle
pop
push
dec
jo
popl
and
mov
mov
pop
xlat
mov
sbb
sbb
js
insb
lret
hlt
cmpsl
and
adc
add
push
mov
mov
or
sarl
and
adc
add
push
mov
mov
or
sarl
and
std
add
push
cmp
mov
or
xlat
cmp
daa
in
pop
std
add
push
mov
or
xchg
jge
jge
insl
pushf
pop
lods
dec
mov
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
pop
popa
adc
inc
xor
and
adc
pop
adc
pop
nop
sti
mov
mov
lock
pop
popa
adc
inc
xor
and
pusha
add
mov
nop
icebp
shlb
shll
sbb
jno
inc
sub
and
js
adc
ror
movsb
les
xchg
in
out
sub
pop
xor
fwait
lods
ficoms
mov
bound
imul
call
popa
popf
popa
and
and
xchg
scas
mov
dec
icebp
outsl
push
pop
ds
ljmp
adc
push
insb
push
pushl
push
lock
dec
cs
pop
xchg
lea
aaa
pop
shr
add
mov
xor
sbb
in
push
inc
mov
push
mov
mov
inc
pop
adc
pusha
adc
ds
push
shll
loopne
adc
mov
mov
jg
outsl
cmc
pop
mov
add
lock
shlb
and
push
push
and
pusha
add
cltd
loope
icebp
mov
mov
jmp
or
push
adc
cmp
gs
xchg
nop
call
lods
aad
testb
adc
xor
je,pt
push
xor
and
lds
nop
in
lds
and
inc
and
sub
adc
pusha
add
and
icebp
mov
mov
lock
add
jno
inc
xor
and
pusha
add
and
icebp
mov
mov
lock
add
pop
jns
pop
xchg
outsl
aam
mov
push
sub
scas
icebp
jecxz
pop
mov
push
jl
pusha
cmp
push
lcall
mulb
ret
shrb
xchg
and
stc
inc
mov
push
and
pop
fstps
adc
stos
test
lret
mov
adc
push
pushf
mov
stos
mov
rol
pop
push
iret
pop
sub
popf
in
fisubrs
imul
push
mov
dec
xor
xchg
mov
mov
gs
sub
sbb
mov
cld
jl
aaa
pop
jle
cmpsb
adc
outsb
mov
sbb
loop
jl
outsl
lret
xor
mov
inc
in
testl
rcl
data16
movsl
les
test
bound
cmp
std
pop
adc
pop
or
sahf
mov
sub
lahf
mov
jg
push
sar
fldenv
mov
sub
xchg
aam
les
xchg
ja
clc
arpl
pop
sti
add
ljmp
into
mov
mov
out
mov
mov
insb
mov
and
push
fistpl
je
ja
lods
rorl
add
xchg
mov
push
dec
lahf
sub
jne
sbb
lods
inc
test
adc
cmp
inc
xor
pop
divl
mov
pop
jne
push
jmp
adc
mov
inc
cltd
push
xchg
sahf
rolb
inc
add
insb
push
mov
shll
sub
sbb
cmc
xlat
pop
and
adc
outsl
shrb
test
mov
cmp
mov
lock
or
inc
mov
mov
ss
mov
loope
or
sub
mov
mov
and
nop
sbb
push
mov
stos
fisubrl
xor
lds
lea
mov
shll
push
sub
or
add
inc
inc
in
testl
mov
add
mov
or
sub
imul
and
popf
add
ret
or
in
and
and
lods
xchg
lcall
add
mov
cmp
or
repz
sahf
mov
imul
enter
call
popf
ja
nop
cwtl
dec
push
or
aas
insb
mov
push
pop
insl
arpl
push
sub
shlb
pop
lea
mov
jne
xor
pop
push
jns
test
add
inc
sub
and
xor
shlb
insb
das
into
jge
clc
mov
cli
inc
btc
lret
stc
movsl
stos
sbb
test
cli
dec
cs
aad
jl
jl
sahf
jno
fistps
repnz
and
mov
loopne
push
in
and
or
push
push
xchg
jb
xor
adc
aam
mov
cwtl
mov
addl
inc
ja
fistpl
pop
sub
in
sub
addr16
insb
cmp
jns
lret
imul
ret
xor
push
pop
xlat
push
pop
cmp
jno
fadds
mov
jns
jp
push
xchg
xor
out
outsb
xchg
pop
mov
cltd
imul
ja
push
jbe
mov
icebp
inc
mov
out
push
jbe
xchg
xor
stos
xchg
pop
subb
sub
or
test
sub
gs
dec
pop
sub
sub
lea
arpl
xor
jno
shlb
in
lcall
rclb
jns
xchg
push
xor
cs
mov
cmp
pop
divl
or
cmp
push
sti
jbe
ds
outsl
dec
js
mov
lcall
dec
loop
cmpsb
repnz
dec
cmp
out
ljmp
pop
push
cmp
nop
fdivs
jp
inc
in
jno
inc
inc
out
push
pop
hlt
jae
lods
push
clc
sahf
cmp
cmp
push
inc
sbb
pusha
int
mov
mov
loopne
jge
movl
outsb
mov
fstl
outsb
pushf
sbb
test
fadd
das
add
inc
shlb
xchg
lahf
adc
lock
cmpsl
cmp
jbe
lcall
into
and
mov
push
push
enter
pop
jl
sbb
jnp
push
aam
mov
repz
aad
push
mov
push
pop
mov
out
mov
ds
xor
cmp
xchg
and
jae
pusha
cmc
push
jl
sub
dec
arpl
dec
jo
push
jecxz
pop
aad
jns
xchg
fiadds
or
stc
iret
daa
leave
test
push
cld
mov
pop
in
sbb
mov
fstp
push
out
insb
xor
inc
xchg
xorl
cmpl
scas
ret
jne
fwait
pop
or
test
in
lea
adc
lea
xor
lods
jo
sbb
push
inc
sbb
das
sbb
or
outsl
sub
call
loopne
fdivr
mov
mov
fcmovnbe
pop
or
sahf
frstor
inc
imul
jge
xor
adc
adc
je
pop
pop
dec
and
fwait
sbbb
dec
out
dec
aas
aaa
stos
fsts
lret
xor
out
das
pop
inc
mov
nop
pop
sbb
rolb
jne
lret
and
mov
das
insb
sub
add
xor
push
std
and
xchg
outsb
std
fdivs
add
mov
std
dec
loopne
inc
inc
outsl
int
xchg
jg
add
mov
fisttps
mov
xchg
dec
xor
stos
scas
fdivs
inc
and
out
insl
mov
divl
inc
dec
jne
stos
ss
out
mov
jae
mov
jp
stc
or
shlb
cmpsb
xchg
out
mov
xor
xchg
aad
and
and
fisubrl
das
pop
pop
sbb
jno
out
std
out
adc
clc
mov
cltd
mov
testl
mov
push
jbe
je
sub
testl
mov
pop
inc
jmp
pop
push
in
in
dec
pusha
dec
insb
test
push
xchg
test
and
xchg
xchg
rolb
pop
push
leave
dec
sbb
pop
and
les
mov
jge
aad
call
adc
out
bound
lea
pop
jge
and
inc
or
xchg
adc
aam
sbb
pop
or
or
xchg
sbb
mov
push
in
push
sub
sub
cmpl
out
in
push
xor
or
ss
out
mov
pusha
mov
lock
push
mov
xor
add
loopne
and
xchg
addr16
lods
js
arpl
jnp
jo
push
inc
push
test
mov
lods
xor
in
cmp
nop
fldt
mov
cmp
push
ffree
in
jmp
jbe
addr16
jmp
les
and
and
sub
inc
sub
push
stc
cmp
or
adcb
push
and
arpl
dec
enter
mov
insb
xor
and
or
gs
or
pop
fcoms
adc
mov
xchg
int
add
push
mov
push
cs
imul
es
dec
rcrl
and
mov
sub
sub
push
xor
and
ja
sbb
or
cmp
mov
cwtl
add
and
xlat
or
ja
fimull
movsb
xchg
sbb
fdivp
adc
subb
ds
movsb
test
jecxz
mov
jl
sbb
inc
or
push
xor
xchg
xchg
lahf
adc
pop
pop
adc
jmp
xor
test
jecxz
pop
insb
jne
stos
inc
mov
mov
cs
fcomi
lcall
repnz
leave
or
pusha
and
jecxz
test
or
inc
pop
and
cli
jg
insb
faddp
inc
adc
jge
and
mov
fmuls
mov
xchg
pop
pop
xor
add
shlb
xor
test
ret
cwtl
mov
les
xor
cmpb
int3
fwait
add
bound
jecxz
xchg
or
subl
dec
mov
mov
dec
lret
dec
stos
pop
imul
mov
repz
nop
cli
inc
jl
push
cmc
mov
add
mov
inc
call
mov
adc
fldl
pop
xor
or
xchg
pop
movsl
or
pop
loopne
adc
and
sbbl
dec
and
ja
int3
daa
iret
or
jle
add
lea
test
leave
out
pop
or
dec
pushf
xchg
std
stc
mov
mov
sti
leave
push
rolb
jge
test
mov
cli
pop
lods
mov
xchg
dec
dec
dec
xchg
loopne
ss
jo
pop
sub
cmp
fbld
or
or
mov
sub
into
mov
daa
mov
inc
inc
mov
pop
pop
push
add
les
sub
daa
popl
and
jnp
gs
fdivrl
jge
rcl
ljmp
test
sub
jnp
andl
stc
dec
mov
stc
wbinvd
int3
mov
stos
push
pusha
cmp
bound
cmp
or
sub
push
jecxz
add
lahf
sbb
scas
out
daa
fiadds
lods
push
push
insb
pop
adc
stos
cmp
pushf
mov
daa
push
lods
popf
les
aad
add
and
xor
cmp
hlt
lahf
ret
and
pushl
jae
lahf
sbb
imul
fistpll
notl
or
push
insl
or
mov
push
jne
push
mov
pop
mov
clc
xchg
sahf
loope
inc
subl
sbb
push
imull
xlat
add
jge
fmuls
xchg
int3
mov
in
stos
mulb
aad
and
mov
enter
mov
ret
push
cmpsl
int3
dec
mov
clc
push
pop
shrb
add
cwtl
mov
sbbb
fisttps
lods
pop
ja
aad
add
iret
je
add
mov
dec
rolb
mov
and
jo
mov
sub
xor
xchg
push
arpl
add
cltd
inc
xor
push
iret
hlt
iret
mov
add
loopne
mov
and
dec
sub
jnp
testb
insb
jo
fnsave
push
js
sbb
sbb
shrb
aas
sub
je
jnp
or
test
ficompl
out
sbb
aam
cli
out
cmc
or
cmpsl
xchg
andl
xchg
jns
mov
es
rcrb
repnz
int3
cltd
stos
ret
sbb
adc
bound
adc
jg
outsb
push
insl
pop
xlat
stos
push
push
mov
adcl
mov
xor
mov
int
and
sbb
dec
outsl
movsl
or
mov
fwait
mov
mov
jmp
push
stos
cmpsb
add
xor
sub
aam
jecxz
bound
cmp
sub
in
adc
dec
add
and
sub
sbb
sahf
imul
push
fcmove
aad
lds
add
rolb
arpl
cmp
pusha
fisttps
mov
test
popf
movsl
in
imul
imul
inc
jle
jl
inc
sub
lods
dec
xchg
xchg
iret
inc
movsl
clc
inc
lcall
push
mov
lret
mov
gs
xor
jb
mov
movsb
shll
aas
sti
or
ds
sbb
inc
add
push
mov
push
fimull
stos
negb
andb
push
loopne
push
outsb
fiadds
inc
sarb
ret
lret
stc
jp
popf
xchg
or
ret
jle
frstor
sub
lea
leave
lea
sbb
leave
mov
in
cmp
cmpb
daa
in
out
sbb
cmp
add
incl
ret
rclb
test
cmp
sub
or
xchg
arpl
and
out
ret
mov
into
ss
or
xchg
dec
mov
lea
sti
mov
jmp
pop
add
inc
pop
jns
mov
pminub
xchg
adc
push
cmp
fsubs
ja
xchg
sub
pop
xor
pushf
push
adc
cwtl
loope
pop
in
xsha256
cmpsb
xchg
mov
mov
in
and
js
and
sub
lcall
cmpsl
push
adc
aam
inc
mov
into
mov
enter
testl
lds
rorb
std
ret
ret
call
ss
lret
out
movsb
test
int3
aad
mov
mov
lret
ficoms
sbb
push
scas
clc
fstl
out
into
loope
call
xor
jno
mov
std
clc
leave
xchg
jo
out
mov
mov
inc
push
shrb
dec
std
inc
adc
push
pop
arpl
ljmp
adc
repnz
cmp
out
outsl
stos
fldcw
imul
neg
sbb
xor
dec
jl
ret
cmpsl
sarb
in
sub
ljmp
dec
out
adcb
out
push
ficoms
adc
ror
push
negb
scas
xor
cli
repz
ret
clc
cmp
mov
nop
cmp
dec
inc
dec
je
fsubl
outsb
cltd
pop
std
add
push
push
mov
test
push
fs
jp
sahf
movsl
setne
jnp
jne
sbb
cmpsb
cmp
sub
arpl
add
loope
push
addr16
add
int3
sbb
push
fs
ret
iret
jl
xchg
or
dec
lods
dec
xchg
push
ds
pusha
popa
invd
js
xor
in
jl
dec
mov
or
scas
push
in
ret
loop
inc
addl
mov
add
dec
out
pusha
aas
rcr
mov
and
notb
mov
fsubp
or
fnstenv
mov
dec
sub
pop
adcb
aam
cmp
add
mov
mov
sbb
xchg
jp
cwtl
jp
mov
push
hlt
fcomps
or
or
jnp
xchg
push
push
or
pushf
aam
lock
fidivs
lods
test
in
call
sub
nop
xchg
jno
push
rol
ret
rcrb
imul
dec
jl
scas
ljmp
mov
push
mov
pop
jns
pushf
mov
ficoms
pop
cld
rclb
divb
outsl
mov
push
xchg
and
leave
ljmp
ljmp
mov
sub
fimull
or
int3
movsb
xlat
ret
cs
adc
cld
push
cwtl
inc
mov
jmp
push
les
mov
inc
repz
fadds
iret
test
scas
mov
cld
adc
cmp
sarl
inc
outsb
out
popa
xchg
mov
push
int
fbld
cmp
ficomps
in
aaa
or
pop
call
int
jmp
jmp
popa
lret
decb
fnsave
jb
xchg
out
out
pop
nop
je
lds
xor
dec
push
insl
dec
pop
mov
adc
cwtl
mov
mov
jmp
mov
sbb
faddp
jecxz
and
rorb
loop
xor
addr16
adc
pusha
dec
popf
adc
fwait
cld
int3
xchg
scas
mov
sub
addb
rolb
out
push
xchg
xor
sti
aaa
cmp
mov
stos
pop
leave
sbb
cmpsl
and
test
jne
or
push
dec
pop
dec
scas
inc
xor
jecxz
inc
sub
loopne
and
xor
rorb
dec
rcl
jo
je
scas
aas
sbb
les
movsl
jge
xor
adc
xchg
mov
jge
xor
push
pusha
dec
sti
cmp
jge
out
jl
or
leave
das
sub
cmpsb
ss
mov
movsl
or
lahf
sbb
sbb
stc
cmp
sub
and
adc
fistpll
mov
nop
fistpll
mov
cs
lock
xor
adc
imul
xchg
or
mov
dec
lock
dec
dec
adc
addr16
aad
fisubl
mov
lcall
into
cltd
mov
or
xor
rclb
lea
imul
sub
or
cmp
xor
insb
inc
pop
std
movsb
xchg
mov
mull
mov
in
jl
lahf
mull
xor
clc
sbb
loopne
cmpsb
mov
repnz
push
and
insl
dec
push
jbe
daa
add
popf
mov
xchg
hlt
jno
mov
mov
lea
push
sub
out
jnp
dec
mov
jl
adc
arpl
ficoml
jo
xchg
dec
jno
sbb
pop
cmc
push
dec
jo
into
fxch
xchg
mov
pop
xchg
mov
movl
in
push
push
pop
lods
idiv
and
rorl
adc
aam
xchg
int
push
je
dec
lahf
popf
inc
pop
clc
outsl
xor
add
or
xchg
aas
addb
addr16
push
test
scas
cmp
aas
rsqrtps
dec
jge
popa
les
rorl
push
inc
data16
fs
popa
out
mov
ljmp
xchg
pop
xchg
mov
push
inc
cmp
in
out
pop
cmp
dec
bound
out
test
sbb
cld
mov
out
mov
aad
pop
jl
mov
out
mov
mov
lods
or
xchg
loopne
sbb
jne
loop
inc
call
sbb
mov
scas
mov
jl
gs
rcl
aas
nop
inc
mov
incb
ja
or
and
push
mov
loop
xor
sbb
mov
mov
les
jnp
scas
out
cmp
mov
dec
dec
popa
add
dec
mov
jp
or
fldcw
call
sbb
add
jp
rol
adc
mov
mov
xor
stos
add
dec
fidivs
xor
or
add
xchg
test
enter
jg
xor
sub
mov
add
cmpsb
aas
test
sbb
repz
ret
inc
sub
outsb
add
mov
bound
ljmp
outsl
xor
pop
notb
rcr
or
pushf
dec
scas
nop
dec
jp
mov
cwtl
stos
idivb
mov
adc
inc
add
fistl
xor
sub
adc
pop
rcrl
ret
mov
ret
push
xlat
pop
ds
aad
xor
inc
in
pop
fsubl
cmc
xchg
sahf
cli
mov
push
shl
or
inc
jl
add
dec
insb
in
xlat
call
adc
dec
mov
stos
and
sbb
in
pop
fwait
sarb
lret
out
push
inc
test
xchg
and
test
je
and
ja
jmp
jecxz
add
mov
outsl
adc
mov
cmp
push
xor
inc
push
add
adc
jb
xchg
cmc
or
dec
mov
lods
nop
fsubl
jb
out
push
pop
push
fnsave
inc
cmpb
xor
imul
iret
cmc
in
stos
adcb
mov
stos
add
jmp
cmc
lcall
rcr
dec
inc
xchg
in
inc
jo
addr16
vhaddpd
sub
into
mov
jns
push
roll
movsb
ret
fadds
addr16
mov
ja
sti
subl
pop
imul
outsl
fcomps
jo
cmp
cmp
sub
adcl
jo
scas
stos
ret
sbb
mov
enter
rcrb
les
es
push
push
rcrb
mov
arpl
into
stos
mov
dec
xchg
xor
push
pusha
fimuls
or
xor
mov
mov
inc
cmp
in
dec
sti
push
or
pop
push
js
ljmp
and
fdivrs
jmp
dec
inc
pop
cmc
test
mov
push
mov
cmp
dec
fdivs
idiv
dec
mov
push
sub
test
outsl
mov
aad
sahf
inc
addr16
das
cwtl
dec
jae
dec
imul
ss
nop
lcall
mov
or
leave
mov
outsb
mov
enter
lods
lock
and
cmp
int
les
outsb
mov
push
repnz
mov
jae
mov
mov
arpl
pop
arpl
pop
cmpsl
adc
rcl
sub
xchg
lcall
mov
in
out
call
data16
cmp
lea
stos
cld
push
push
into
outsb
push
rcll
lahf
and
dec
pop
cmp
jl
mov
add
xor
cmp
mov
in
or
sub
popa
inc
xlat
ljmp
outsb
mov
xor
push
xlat
push
hlt
mov
mov
xchg
stc
test
xchg
push
add
push
popa
sbb
xchg
aas
mov
hlt
mov
or
adc
adc
cmpsl
cmp
dec
movsb
test
mov
aas
stos
stos
icebp
mov
add
adc
inc
pop
jecxz
lahf
popl
lea
loopne
jle
sbb
cmp
pop
lea
cmpsl
arpl
adc
dec
mov
push
jle
add
scas
sti
dec
mov
inc
xor
and
pusha
add
and
icebp
mov
mov
lock
add
jno
inc
xor
and
pusha
add
and
icebp
mov
mov
lock
add
jno
inc
xor
and
pusha
add
and
icebp
movsb
shll
loopne
rcll
inc
xor
and
loopne
lock
outsl
pop
or
mov
mov
pop
dec
pop
jle
outsb
lcall
pop
lock
or
sbb
fnstcw
mov
or
jns
dec
cmp
sub
push
jp
mov
lcall
lret
ljmp
jns
push
cmp
xor
push
jp
mov
lcall
call
xchg
cltd
jp
sbb
cmp
rol
loopne
xchg
dec
fmuls
bound
pop
inc
dec
test
xor
cmp
jnp
dec
mov
setno
imul
aaa
sub
in
loop
add
xchg
sbb
and
jg
cmp
jge
cmc
mov
cld
jne
pop
je
sbb
int
sbb
dec
imul
jp
lcall
es
mov
add
repz
cwtl
jns
das
mov
push
jp
loop
out
stc
cli
mov
xor
mov
cltd
mov
adc
xchg
jne
dec
in
aaa
leave
mov
jbe
mov
sbb
pop
cmp
sub
push
jp
mov
lcall
mov
scas
ljmp
jns
dec
je
or
push
sub
subb
lds
ljmp
pop
jns
cmp
das
pop
or
add
nop
negl
sbb
in
jl
xor
dec
sub
sub
inc
pop
cmp
jp
mov
lcall
test
cli
cltd
or
jns
dec
cmp
sub
push
jp
mov
lcall
test
cli
cltd
or
cmpsl
push
push
pop
sbb
ret
xchg
sub
aad
rorl
orl
sbb
and
jecxz
rcrl
lds
in
push
lahf
insb
add
ret
test
add
fs
gs
test
cmp
push
inc
jae
test
pop
ficoms
xchg
inc
cwtl
insl
add
inc
pop
adc
je
scas
sbb
pop
cmp
sub
xchg
jno
jb
add
sbb
or
cmp
movsl
fwait
jmp
imul
jl
fsubl
into
filds
shrl
lods
fiaddl
flds
nop
mov
xchg
out
das
and
cmpsl
push
andl
test
mov
xchg
aam
aaa
leave
and
pop
pop
cmp
xlat
lcall
xor
lock
mov
out
xor
xor
jno
insb
stc
clc
imul
and
ret
enter
sub
ja
xor
ret
cmp
stos
pop
out
cli
cmp
jbe
clc
in
push
test
outsb
pop
mov
mov
pusha
cli
jnp
lds
and
jns
push
mov
out
or
dec
out
xchg
in
jmp
push
sti
lods
push
scas
sub
adc
scas
pop
sbb
pop
fucomi
sub
sbb
nop
cmp
call
mov
and
out
mov
or
je
push
pop
icebp
fldenv
add
lret
popf
mov
rcl
inc
imul
xor
or
filds
pop
es
ja
mov
sub
sbb
in
jnp
dec
ds
lods
fistps
pop
lret
inc
mov
mov
cmp
cli
mov
sahf
cmc
mov
push
add
cmpsb
push
rolb
push
hlt
imul
cmp
dec
inc
jns
shr
repnz
fsubl
dec
jmp
insl
pushf
aaa
cmp
decl
jne
outsl
push
adc
xlat
fists
sbb
pop
dec
int3
mov
sbbb
mov
cld
into
cltd
jg
mov
lahf
mov
xchg
sub
mov
cld
aam
in
imulb
into
inc
shrb
dec
cmp
jg
dec
push
lret
mov
add
nop
dec
mov
nop
out
data16
aaa
jg
xor
xchg
adc
sub
lret
cmp
adcb
test
add
test
xchg
jb
jno
fsubr
xchg
jp
mov
inc
pusha
insb
cmpsl
or
cmp
sbb
call
sahf
pop
inc
clts
sti
xchg
idivl
test
xor
ljmp
shl
mov
cmp
sbb
and
aad
xor
mov
jmp
cmc
mov
lcall
into
push
add
mov
mov
adc
jno
ds
lret
mov
outsb
push
das
adc
enter
and
mov
and
mov
jbe
shlb
das
adc
push
movb
jae
shl
mov
sub
cwtl
adc
negb
sahf
cmp
xchg
je
cmpsb
jmp
mov
push
fdivrs
or
out
xchg
shll
hlt
into
jmp
rorb
lret
imul
jle
jecxz
pop
mov
and
mov
xchg
insb
popf
movsb
in
insl
out
push
rolb
xchg
mov
ss
or
inc
mov
xor
push
scas
xchg
cmp
push
sbb
lret
lcall
mov
enter
dec
jo
or
hlt
sbb
lcall
or
test
std
and
push
xchg
dec
pop
or
inc
xor
inc
adc
push
cwtd
pop
loopne
cld
adc
inc
jl
add
inc
xchg
mov
mov
mov
popf
shrb
iret
inc
xchg
fadd
or
sahf
dec
ja
cmp
addr16
icebp
mov
jmp
dec
dec
adc
lds
jns
mov
leave
clc
lods
cwtl
jmp
jp
mov
fstpl
xor
push
mov
cmp
pop
insl
aam
xor
lock
shlb
mov
mov
cs
fwait
xchg
mov
loope
rol
sbb
dec
pop
inc
ljmp
in
pop
pop
pop
lds
pop
enter
imull
jmp
mov
nop
inc
js
inc
cmp
pop
jl
test
js
sbb
add
xor
test
add
push
int
mov
push
add
outsb
jne
rclb
pop
cmc
jbe
push
outsb
sbb
inc
xchg
push
pop
and
sahf
mov
div
push
fdivrl
aas
shr
xchg
pop
or
dec
mov
xlat
sub
repz
test
jl
sbb
orl
push
xchg
lock
jmp
jno
lret
scas
shll
jbe
test
sbb
sub
rcll
test
mov
das
push
sub
test
cmpsl
mov
fnstsw
and
std
addr16
outsl
mov
cmp
fidivrl
mov
fstp
inc
pop
jmp
cmpb
aam
push
out
mov
mov
xchg
adc
test
pop
push
enter
inc
push
test
lds
pop
stc
iret
jnp
pop
out
push
xchg
adc
loop
stos
mov
les
shrb
inc
inc
sbb
cmc
rorl
fbld
int3
mov
ljmp
gs
xchg
shlb
mov
xor
xchg
lret
andb
mov
aas
mov
int3
sbb
scas
into
stc
popf
dec
js
bound
mov
cltd
push
lods
xor
daa
and
cwtl
cmp
out
fsub
jmp
inc
inc
sub
out
sub
jmp
adc
sub
jnp
in
aaa
add
idivb
mov
mov
cmp
lods
push
pusha
pop
sbb
pop
pop
inc
jnp
mov
pop
outsb
add
mov
jo
enter
cmp
pop
sbb
pop
repz
xor
adc
mov
notl
jge
inc
push
lock
push
test
mov
sti
inc
mov
add
sbb
xor
sbb
loop
add
push
jns
mov
jp
ret
and
mov
xchg
inc
jb
inc
xlat
mov
push
adc
test
test
xchg
lock
popf
mov
in
cltd
mov
xchg
mov
inc
xor
sahf
add
test
push
inc
cmpsl
inc
fcmovnu
inc
sbb
xchg
hlt
inc
imul
imul
jae
xchg
mov
stos
std
mulb
call
stos
sub
pop
fwait
pop
push
and
outsl
stos
shll
inc
jb
out
jmp
fldl
out
xor
cmp
push
mov
dec
or
mov
popf
add
mov
push
cmp
mov
loope
and
in
and
sbb
jecxz
push
xor
push
xchg
inc
pop
daa
adc
out
cmp
cmp
sub
push
or
cmp
subl
imul
loope
sarb
sahf
aas
out
loop
mov
sbb
mov
lret
cmp
loop
adc
mov
jg
stos
push
notl
loope
pushf
add
negl
add
sbb
sub
jle
sub
ds
pop
xor
int
xchg
or
push
popf
mov
ljmp
jl
mov
xor
fwait
scas
pop
mov
xor
addr16
scas
push
jmp
and
mov
sti
jle
push
jp
push
repnz
dec
xor
lret
mov
test
ficoms
mov
jno
lea
mov
push
inc
pusha
lods
jl
adc
fstpt
pop
push
dec
dec
cmpsl
sarl
mov
hlt
mov
inc
adc
xor
ss
sbb
xorl
sub
outsl
das
iret
out
xor
fs
aam
mov
mov
jae
rorb
xor
push
scas
xchg
in
and
inc
mov
cmp
test
add
inc
adc
jae
imul
into
mov
les
dec
dec
push
push
testl
pop
inc
movsb
mov
fsts
mov
xchg
outsl
es
adc
push
adc
pop
jp
mov
dec
loopne
pop
pop
sti
or
or
pop
cmpsb
jae
in
ja
inc
popf
mov
cmc
popw
sub
imul
add
les
addr16
pop
in
pushf
rol
into
pushf
lahf
jbe
ljmp
sbbb
idivl
sbb
dec
shr
jb
push
cwtl
xchg
addr16
cwtl
lock
in
sbb
push
xor
inc
jl
pop
cmp
pop
xchg
enter
and
les
dec
mov
fbld
xor
mov
pop
cltd
movsl
and
gs
cmp
in
sbb
push
fists
push
ror
das
es
dec
cmpsl
jmp
push
dec
add
ja
pop
inc
jo
adc
push
scas
ss
add
xor
pop
fwait
mov
jns
ds
jns
sbb
ss
sub
ret
inc
addr16
sarl
sar
mov
mov
in
cmpb
mov
cmp
push
inc
add
mov
inc
lock
das
and
xchg
cmp
xchg
mov
gs
mov
cli
add
mov
inc
inc
cmc
and
cltd
fbld
clc
dec
cmp
jno
aad
sub
sbb
jmp
stos
adc
mov
rorl
xor
ss
pusha
push
aaa
pop
dec
out
mov
and
sub
mov
adc
lds
dec
sti
inc
notl
adc
and
jnp
pop
push
push
les
dec
lods
mov
rcr
push
sar
mov
mov
cmp
sub
sbb
xor
ja
lret
mov
xchg
xor
mov
cs
sub
stc
fs
xor
adc
fiadds
dec
mov
fstps
xchg
jae
fisttps
stos
jae
jge
push
pop
enter
xchg
cmc
add
add
push
pop
sbb
and
xor
dec
cltd
ljmp
cmp
jg
or
test
dec
std
mov
imul
mov
jle
cli
dec
je
popa
mov
mov
jb
in
inc
dec
mov
or
add
cltd
clc
popf
xor
xchg
push
pushf
jae
not
ret
fnstenvs
dec
xor
sarl
fisubs
stc
repnz
fidivs
test
mov
adc
and
push
dec
jns
lahf
or
int
push
lahf
mov
xchg
pushf
push
loopne
ds
jmp
dec
imul
subb
aad
flds
lea
leave
pop
fistps
push
mov
pop
dec
and
ret
push
addb
lock
mov
mov
push
cmp
push
jmp
scas
adc
mov
popf
cwtl
dec
mov
and
ja
xchg
xchg
cmp
call
lret
cmc
cmpsb
out
sbb
jno
lahf
mov
sub
xchg
add
std
add
stc
js
mov
mov
and
xchg
in
adc
xchg
test
dec
add
push
push
imul
pop
shl
lods
and
lret
sbb
mov
adc
js
sbbl
sarl
rorl
cmpb
stc
pop
idivl
rclb
sti
pusha
xchg
push
in
stos
mov
enter
xchg
sbb
cwtl
jecxz
pop
adc
lds
lea
bound
jno
sbb
cmpsb
lret
jmp
pop
or
xlat
mov
nop
push
arpl
jp
sbb
pop
pusha
ds
repz
stos
mov
sub
adc
cmp
popa
cs
xor
repz
stc
jae
mov
scas
push
pop
lods
popf
cmc
adc
mov
imull
pop
inc
nop
shlb
and
adc
insw
sub
jae
xor
jge
lcall
xor
sub
pop
and
inc
jge
shr
nop
negb
sub
scas
jg
shll
scas
out
sbb
popf
in
xchg
rcrb
jg
xlat
push
pop
leave
fmul
mov
popf
dec
cltd
push
xchg
mov
or
imul
cld
push
mov
mov
mov
push
jle
push
and
hlt
jns
sbb
or
fs
push
nop
fst
hlt
ror
rolb
dec
repnz
pop
add
mov
add
cmpsb
jo
test
into
jge
inc
bound
ljmp
andb
and
pushf
sbb
adc
push
pop
cwtl
inc
cmp
jl
insl
outsl
rorl
inc
add
pop
push
cmp
xor
xor
out
out
cmc
mov
push
push
test
nop
imul
mov
into
or
or
cld
xchg
adc
lods
mov
jmp
xchg
ss
aas
lods
sub
or
lret
xor
cmp
cmp
xor
or
adc
xchg
xor
in
daa
xchg
enter
outsl
test
xchg
icebp
fisttpl
jne
out
popf
out
fidivs
bound
icebp
dec
sub
lret
sahf
jecxz
ss
testb
fcmovb
fsubrl
icebp
outsb
jmp
push
ud0
cmp
pop
into
popa
and
or
outsb
int
lods
add
nop
outsl
xchg
dec
lahf
daa
xor
divb
adc
add
xlat
cmp
das
jp
adc
sbb
fadds
inc
cmp
fnsave
sbb
cmp
aaa
mov
sahf
xchg
out
sub
shlb
adc
js
bnd
sbb
add
lcall
mov
inc
fistpl
and
loope
add
call
xchg
jecxz
fistps
ret
jns
and
mov
or
arpl
cltd
add
ret
imul
fstps
fdivl
fs
cmp
loopne
cmpsb
pop
mov
xor
inc
cmovns
jle
sbb
and
push
cmpsb
imul
lock
dec
fwait
ret
pop
lds
sub
sbb
fcmovnb
mov
faddp
pop
loop
sar
adc
in
and
pop
das
push
repz
pop
inc
adc
mov
pop
ret
lea
mov
aam
inc
loopne
orl
insl
subl
adc
testb
push
xor
pushf
dec
jge
cmp
mov
inc
out
xchg
mov
mov
mov
fildl
or
cmpsl
push
rcll
cmp
mov
int3
mov
mov
xchg
hlt
aam
fwait
sub
jnp
jge
jp
nop
or
lods
xor
xor
xchg
inc
push
test
pop
out
lods
fcoms
ja
xchg
aaa
jl
jmp
out
js
fsubrl
int
cmp
sub
sub
cmp
cmp
xchg
cmp
fdecstp
ret
enter
mov
jne
ja
mov
je
jno
into
sub
outsl
cmpsl
cmp
pop
mov
outsb
sarl
pop
sbb
mov
push
push
movsl
or
cwtl
out
mov
testb
dec
pop
add
dec
fsubl
and
mov
int3
aad
pop
mov
orl
xchg
enter
into
rcr
mov
int
or
mov
cwtl
rcll
ja
pop
sbb
adc
jo
movsb
aaa
sbb
push
pop
into
ja
test
and
jmp
in
jno
mov
inc
mov
fwait
and
xor
add
and
and
movl
aad
stos
mov
add
sub
js
and
mov
adc
orb
ret
push
arpl
lods
addr16
ss
cmpsb
mov
dec
mov
sub
aas
lock
jge
xor
lret
mov
jbe
jmp
in
aad
jecxz
push
and
movsb
fisttps
ljmp
std
mov
shlb
and
fucomp
push
inc
mov
adc
arpl
push
in
pop
daa
mov
adc
and
repz
push
cmpsb
cld
push
sbb
push
loopne
repz
xchg
or
adc
add
inc
xorl
lods
repnz
mov
push
or
fcmovbe
xor
pop
lcall
inc
movsl
cmp
rorl
stos
sub
jns
pop
mov
test
scas
xor
xor
in
or
negb
xor
shl
lods
mov
mov
inc
fdiv
fmull
xchg
adc
out
and
mov
mov
ja
in
fldenv
std
mov
cmpsl
outsb
fcomps
out
aaa
mov
add
imul
in
hlt
cwtl
iret
adc
stos
fidivrl
push
in
xchg
ret
enter
into
inc
push
or
pop
jne
xlat
or
jne
cmp
pop
mov
push
xlat
xchg
xchg
filds
fldt
sbb
push
orb
sub
jbe
popf
clc
fcompl
jo
fcomp
xchg
inc
gs
dec
scas
add
push
ret
sub
push
mov
fcmove
lock
xor
mov
clc
xchg
cmpsb
sbb
sti
jno
ret
clc
pop
lods
mov
js
add
jae
pop
ja
add
outsl
aaa
call
test
test
loope
xor
sub
pushf
sub
inc
sbb
and
xchg
out
lret
jnp
fisttps
mov
xor
add
pop
aad
fmul
inc
popf
popw
sub
push
xchg
leave
jp
and
xchg
push
dec
test
mov
add
xchg
cmp
sub
mov
pop
push
mov
cmc
inc
ret
push
cwtl
addr16
mov
xorb
sti
add
cmovb
stos
ss
cld
popf
int
shll
push
jae
fwait
lea
dec
in
aaa
mov
cli
push
xchg
and
mov
aad
hlt
call
lret
ja
ds
testl
pusha
scas
jge
fistl
mov
les
add
insl
xchg
fisttps
inc
push
ret
ds
add
push
movsl
or
movsl
sub
dec
mov
popf
xor
test
es
or
ret
dec
lahf
push
outsl
sbb
out
daa
fistpll
push
sbb
xchg
cld
call
je
xchg
inc
jge
cmp
or
nop
nop
sub
fbld
xchg
push
push
ss
inc
add
inc
ret
push
dec
adc
repnz
loope
dec
int3
inc
insl
stos
ja
and
int
mov
fidivrs
jno
lcall
jb
cmpsb
mov
xchg
add
cmpsb
stos
adc
iret
inc
fistl
rorl
inc
mov
xchg
dec
pop
xchg
es
mov
hlt
lods
inc
add
mov
popf
adc
inc
xchg
or
lock
movsb
cmp
sub
or
jl
in
test
or
cmp
aas
xor
jg
cmovnp
sbb
mov
pop
test
insb
xchg
mov
and
push
jbe
jle
inc
jnp
je
cmp
adc
lahf
cmpsb
in
out
cltd
xor
nop
cmp
movsb
fprem1
jno
ss
add
xor
or
and
and
add
adc
dec
xchg
clc
pusha
dec
idivl
mov
pushf
push
xor
imul
xchg
push
jb
scas
jg
push
mov
cmpsb
mov
lock
pop
inc
mov
std
iret
mov
jb
sbb
xor
cli
adc
jge
sbb
outsb
cmp
out
fiadds
mov
mov
xor
pop
xchg
lods
outsb
imul
js
loopne
dec
dec
push
jl
adc
mov
push
je
call
and
insb
call
jmp
push
movsb
push
fstpl
dec
fmul
adc
cmpsl
outsb
xchg
push
push
mov
pop
jbe
sbb
ret
jb
mov
jno
arpl
repz
jnp
pop
mov
xchg
cmp
int3
sbb
repz
fsubr
cmp
add
and
or
mov
pop
int3
push
test
pop
push
push
loope
mov
call
or
xlat
insl
push
cld
jp
out
repnz
scas
pop
mov
and
mov
or
pop
xchg
sub
pop
mov
pushf
mov
dec
insb
test
pop
fsubp
imul
or
push
testb
or
pop
cltd
add
xchg
lahf
jmp
dec
fisttpll
push
ljmp
mov
je
cld
imul
insb
xor
xchg
dec
xor
lcall
xchg
adc
xor
pop
cltd
pop
sbb
xchg
pop
es
mov
in
fidivrs
cltd
addl
cmp
push
xor
inc
cmc
divb
shrb
xchg
xlat
fxch
in
into
dec
das
clc
jns
cmpsb
cmp
sub
push
jp
mov
lcall
test
cli
cltd
or
jns
dec
cmp
sub
push
jp
mov
lcall
test
cli
cltd
or
jns
dec
cmp
sub
push
jp
mov
lcall
test
sti
cltd
or
jns
dec
cmp
sub
push
jp
mov
lcall
and
adc
add
hlt
push
mov
imul
fs
sbb
pop
or
add
add
add
mov
movl
cmpsb
add
adc
add
aad
js
xchg
add
add
add
add
add
add
jge
push
add
add
sub
adc
in
lea
rolb
sub
add
add
add
jge
lahf
add
add
add
mov
add
add
pusha
add
mov
add
int3
add
jnp
in
outsb
add
add
add
add
add
add
bound
faddl
xchg
add
les
push
add
add
add
add
add
add
jl
push
add
add
inc
add
ja
test
dec
add
add
add
add
add
jl
test
mov
add
pop
add
inc
add
pop
add
nop
add
add
add
add
add
add
add
add
add
inc
add
mov
add
les
stos
add
add
add
add
or
sub
xor
add
add
add
add
add
add
add
rolb
add
incl
popl
addl
pop
add
outsb
add
add
add
add
add
add
sub
add
sahf
add
add
add
add
fiaddl
add
add
add
add
add
add
push
add
add
add
jmp
push
push
push
add
in
roll
or
dec
add
add
add
add
add
lods
add
add
pop
add
cmp
int
sbb
jnp
mov
xchg
xor
mov
add
add
add
jl
nop
add
outsb
add
add
add
add
add
add
add
add
add
and
sbb
xor
add
add
xchg
sub
push
add
add
add
add
les
les
mov
xor
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
pusha
add
add
push
add
add
add
add
add
rolb
insl
add
inc
add
mov
loop
fwait
add
push
add
add
add
add
add
add
add
add
faddl
or
add
sub
imul
push
add
add
add
add
pop
add
add
add
add
add
add
add
sahf
add
dec
add
add
movl
adc
add
adc
or
add
jno
and
push
add
mov
add
add
add
jl
mov
add
inc
add
cmpsl
add
add
add
add
add
incl
add
add
add
add
add
add
add
and
mov
push
add
add
add
add
add
cmpsl
add
add
sahf
add
add
push
add
add
mov
arpl
faddl
adc
add
add
mov
je
mov
imul
jo
fs
xor
lret
hlt
jns
stos
testb
cltd
jno
mov
and
and
dec
and
sub
inc
cld
lods
push
mov
mov
add
xor
sbb
mov
pusha
push
jl
adc
mov
and
mov
adc
add
outsb
je
xchg
inc
out
jmp
sahf
mov
cli
test
xor
mov
shrb
cltd
insb
in
dec
inc
push
sub
cmp
stc
sub
shrb
stos
cli
scas
in
addr16
sbb
js,pt
lods
add
leave
and
xchg
cmc
or
repz
inc
pop
test
or
stos
mov
sbb
leave
imul
sub
sbb
adc
pop
movsb
das
mov
sub
jecxz,pn
repnz
clc
xchg
fwait
cmp
push
xchg
and
das
decl
je
mov
inc
dec
lret
bound
adc
adc
xchg
pop
into
pop
jp
mov
inc
and
jne
adc
dec
enter
cwtl
xor
das
sub
xor
pop
inc
sbb
sbb
xor
or
xor
ret
cli
sbb
add
jno
and
or
add
cmp
sbb
popf
xor
and
es
mov
sbb
cmp
push
xchg
sub
scas
lcall
into
mov
nop
xor
into
push
fwait
push
or
sar
lahf
xchg
and
addr16
sub
aaa
xor
in
test
ljmp
jg
sub
jecxz
jns
xchg
xchg
sbb
mov
mov
aad
loop
mov
jo
add
lods
mov
sub
nop
jg
mov
pop
xor
ret
jae
in
je
idivl
out
fnstcw
or
xlat
cs
cmp
loopne
sbb
data16
dec
cmp
pop
popa
xor
pop
loope
in
pop
flds
jne
inc
pop
push
xchg
pop
lret
sbb
xor
mov
xor
adc
cli
mov
in
ret
adc
mov
inc
outsb
popa
push
out
add
adc
outsl
mov
aam
inc
ds
pop
and
adc
push
cwtl
or
aas
jae
iret
into
inc
sahf
enter
pop
dec
popa
movsb
jg
jg
insb
and
dec
lods
mov
cmp
xor
xor
bound
xchg
lods
and
stc
out
pop
dec
insb
xchg
mov
xchg
lret
out
xor
icebp
icebp
mov
mov
loopne
in
dec
mov
lcall
dec
ret
sbb
js
scas
fidivrs
cmc
mov
hlt
pop
out
test
mov
notb
leave
push
xchg
xchg
jecxz
pop
cld
mov
je
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
