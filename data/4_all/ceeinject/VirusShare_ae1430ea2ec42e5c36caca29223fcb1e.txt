in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
idiv
mov
push
add
movb
push
add
lcall
push
call
add
movl
cli
mov
adc
xor
inc
std
lods
nop
ja
push
mov
nop
lcall
in
enter
xorb
leave
std
push
cmp
or
cmp
xchg
xchg
popa
call
fadds
cld
or
out
loopne
xchg
push
call
stc
movsbl
push
mov
out
mov
cmp
shl
lahf
push
pop
mov
dec
mov
scas
popa
mov
mov
xchg
xor
mov
mov
fsubs
mov
loopne
movsl
aam
pop
cwtl
cli
shrb
movsb
or
inc
push
push
faddl
adc
fucomi
add
test
enter
sbb
sbb
sbb
testl
dec
lods
cli
push
jo
das
enter
pusha
lcall
daa
push
jo
lret
cmp
pushf
rorb
xor
push
scas
pop
xor
sub
pop
nop
imul
jg
aas
into
notb
dec
push
rcrb
pushf
inc
cs
xchg
fadds
sub
or
add
or
addr16
and
mov
cltd
dec
push
jb
dec
je
hlt
cmp
lahf
jmp
add
dec
js
cmp
push
xchg
jl
or
lea
pop
dec
or
ss
outsl
imul
xor
adc
adc
cmp
roll
mov
test
mov
adc
jbe
insl
scas
ds
outsb
add
mov
and
sub
jo
js
and
dec
andl
cmp
test
scas
subb
sbb
dec
jl
jbe
inc
mov
mov
lods
fucomip
cmp
pushf
cld
mov
or
xchg
leave
ss
cs
mov
ja
jg
shlb
movsb
jmp
clc
cwtl
lods
fidivl
fmul
std
cwtl
adc
js
aam
inc
int
xchg
out
enter
push
test
or
orl
int
aad
push
dec
jp
std
movb
loope
cmp
or
cmp
popf
cld
shlb
cmpsb
xchg
adc
sbb
and
mov
sbb
and
dec
iret
cmp
fcoms
or
mull
jecxz
pop
xchg
and
decb
sbb
adc
out
adc
int3
pusha
mov
imul
leave
cmp
jmp
pusha
fldt
roll
adc
cmp
mov
loope
cmp
enter
adc
sbb
mov
mov
addr16
push
add
adc
sbb
sub
jne
add
mov
data16
sbb
fidivl
lods
sbb
and
ret
rcrl
aas
out
ss
dec
jmp
ret
into
test
pop
inc
add
xlat
shll
sarl
add
pop
mov
pop
ret
jae
ret
pop
daa
push
repnz
in
jbe
test
ja
subb
in
sub
ret
adc
fsubrs
mov
rcl
ret
or
and
pop
mov
int3
shlb
xchg
cmp
pop
out
test
arpl
adc
enter
in
cs
sar
sar
or
cmp
decb
and
test
roll
les
jae
movsb
add
in
jle
cmpl
xchg
insl
lock
lcall
or
fs
out
cmc
push
adc
lods
mov
mov
cld
testb
inc
adc
inc
adc
je
sbb
push
pop
loop
inc
lea
das
roll
pop
mov
test
cmpsb
pusha
lock
enter
sbb
xchg
shlb
aas
xorl
dec
or
lea
or
cltd
xchg
mov
lock
fwait
movzbl
lods
adc
fbstp
ret
add
xorl
inc
cmp
inc
rcrl
lock
cmp
ljmp
fwait
cmp
push
mov
pop
rcll
inc
test
adc
cmp
nop
adc
push
pop
xchg
jbe
mov
daa
push
pop
adc
jb
or
and
mov
loop
mov
dec
jae
pop
cmc
dec
test
mov
scas
loop
mov
nop
insb
xchg
or
scas
push
mov
adc
xor
mov
mulb
inc
inc
push
loope
rol
adc
mov
dec
js
pop
imul
mov
in
hlt
push
mov
lock
xchg
dec
ds
shlb
dec
or
push
cltd
mov
adc
in
pop
mov
fdivl
jno,pt
sbb
dec
out
lcall
mov
dec
rcll
sbb
fstpt
push
pop
imul
lds
test
pop
or
sbb
fwait
inc
push
inc
sbb
je
fisubs
jmp
js
adcb
fs
pop
push
or
imull
mov
sbb
xor
insb
push
rclb
mov
fidivs
lods
pop
std
lea
push
adc
addl
pop
push
cmpsb
in
xor
test
pop
jb
sarl
cs
pop
mov
mov
shl
aaa
jns
or
les
shrb
lods
and
dec
imul
sbb
sub
jle
mov
xchg
mov
mov
push
inc
or
push
xor
xor
cld
mov
inc
cmp
jb
je
mov
imul
xchg
push
cmp
dec
push
sbbb
pop
xchg
negb
mov
dec
pop
push
cmp
lods
aaa
xchg
aaa
loopne
cs
ret
adc
mov
push
push
or
or
cld
ret
bound
aaa
xor
jge
xor
or
or
mov
sbb
push
push
mov
xlat
sbb
insl
push
push
aaa
fidivrs
jnp
bound
sti
loop
movb
js
and
add
mov
test
dec
add
jno
int3
shrb
cmp
push
mov
pop
add
aaa
lea
fdivs
jecxz
or
lea
sbb
fdivrl
mov
movl
xor
adc
rolb
shll
mov
xchg
adc
adc
push
jp
pop
rorb
aas
popf
daa
decb
sbb
mov
dec
and
inc
sbb
inc
pop
add
fwait
add
and
mov
push
push
pop
pop
mov
insl
sub
test
mov
lea
or
movsb
jge
int3
add
pushf
movsl
mov
popf
inc
add
mov
test
std
imul
sbb
pop
jbe
pusha
pop
xchg
or
mov
movsl
sbb
call
push
ja
ja
add
ds
insb
outsl
jbe
add
loop
sub
clc
mov
or
arpl
andb
orl
shl
or
jo
lock
xchg
out
hlt
mov
out
pop
sub
call
or
push
dec
in
sub
cmp
in
xchg
xchg
in
test
test
adc
les
add
mov
mov
adc
pop
pop
mov
push
loopne
js
jge
adc
inc
mov
scas
aam
test
pop
js
sti
pushl
sub
inc
push
mov
cmp
test
daa
jbe
movsb
out
add
jmp
andl
hlt
mov
mov
mov
adc
push
push
push
mov
inc
pop
dec
jae
repz
push
pushf
in
cs
xlat
mov
inc
orl
pop
sub
int
hlt
in
xchg
jns
int3
lea
adc
jb
and
cmpb
sbb
dec
arpl
add
push
sub
push
mov
dec
mov
sbb
mov
and
push
ss
rorl
insb
les
lea
adc
xchg
test
aaa
in
xor
dec
fimuls
xor
xchg
or
pop
add
sbb
xchg
add
jnp
dec
mov
fisttpll
rcl
aaa
sub
push
push
inc
cwtl
add
jno
add
pop
and
and
jle
xchg
push
sub
jo
xchg
nop
push
add
imul
sub
rcrb
push
jg
inc
add
out
nop
and
daa
outsl
push
in
pop
aaa
push
sbb
mov
out
pop
loopne
mov
mov
and
mov
cmpl
mov
inc
mov
or
sbb
cltd
imul
mov
fstl
cs
imul
or
pop
ret
inc
and
fcmovnu
fmuls
or
add
je
notb
sub
ret
mov
jb
jne
sub
rcrb
adc
and
cmp
add
pop
sbb
aad
mov
push
in
mov
or
loope
cmp
adc
adc
or
xor
iret
jp
enter
lea
and
lods
push
out
push
outsl
in
jns
and
sub
lret
push
js
andb
pushl
pop
inc
xchg
jl
mov
sarb
push
lock
repnz
cmp
lcall
dec
neg
sbb
gs
push
xchg
xchg
xchg
je
js
sbb
fdivrs
hlt
jbe
sbb
push
cs
pushf
push
mov
xchg
mov
dec
pop
movsb
adc
popa
push
arpl
ljmp
cmpsb
or
pop
push
pop
push
lods
es
sub
xor
insl
add
push
orl
push
repz
and
aad
je
jg
dec
subl
pop
or
jmp
pop
adc
mov
popa
xor
push
or
js
jmp
sbb
rorb
hlt
xchg
shr
mov
adc
mov
ja
clc
lds
fdivr
inc
leave
rclb
sub
add
mov
sub
enter
int3
loopne
or
repz
inc
in
or
in
enter
pusha
cmp
mov
das
xchg
js
test
mov
int3
xor
pop
add
pop
mov
clc
and
mov
stos
mov
inc
mov
loop
xchg
jnp
mov
outsl
xchg
push
mov
cmp
mov
pushf
mov
pop
repnz
jno
lock
pop
and
lock
sbb
cmp
enter
shll
sbb
daa
xchg
movb
outsb
pop
sbb
inc
sbb
push
pop
arpl
add
ret
mov
inc
jmp
adc
pop
pop
mov
sub
xor
repnz
sbb
add
ret
push
pop
rcrl
add
out
gs
inc
fidivl
jecxz
pop
sbb
xchg
lret
ret
sub
je
jmp
dec
daa
mov
mov
jle
cmp
cmp
shlb
cmp
test
sub
loopne
jns
inc
testb
inc
mov
stos
loope
cli
xor
inc
sbb
lds
enter
rcrl
inc
andl
push
clc
mov
cld
mov
adc
ds
inc
enter
and
add
je
mov
jmp
mov
movzwl
cmp
js
out
jo
cmp
add
mov
jp
cmpl
mov
lock
lea
movsb
clc
in
in
jg
pusha
dec
push
mov
push
push
inc
or
inc
rdtsc
inc
out
mov
fsts
pushf
lret
jmp
loopne
or
idiv
fldt
push
cmp
jge
sub
sub
or
and
out
pushf
cmp
sub
or
push
pushf
jmp
shl
js
or
fsub
ds
pop
add
sbb
cld
sub
addl
jp
orl
call
in
jmp
cmpsl
cltd
push
enter
or
xor
push
inc
cmpl
pop
push
adc
xor
imul
roll
adc
fsubr
or
inc
inc
adc
and
sub
fdivl
clc
cwtl
jmp
jae
sahf
or
pop
push
les
les
fsubrl
in
mov
mov
xchg
div
femms
fucomip
xchg
or
loope
mov
push
add
push
xor
sbb
xor
bound
mov
and
jne
call
movsb
inc
aas
ja
f2xm1
push
mov
cmpl
mov
mov
aam
frstor
rcl
rorb
jmp
push
xchg
push
jae
aam
jae
int
and
call
add
adc
add
cld
data16
int3
xor
shr
cmp
clc
xchg
rolb
mov
sar
pusha
jnp
clc
xchg
push
push
hlt
push
adc
pop
push
cmp
or
adc
hlt
and
jnp
rcll
and
adc
push
push
mov
push
jle
sahf
mov
loop
adc
add
shll
aas
mov
mov
add
jmp
imul
inc
add
aam
or
cmp
pop
or
add
sub
jns
mov
push
inc
add
fdiv
sub
lds
push
lock
sahf
sbb
dec
inc
jne
push
or
call
push
xlat
cmp
sub
mov
js
out
push
fwait
mov
cli
push
lods
ljmp
mov
push
and
call
xor
sub
scas
and
sub
je
mov
or
enter
shll
imul
xor
int
in
hlt
in
add
popa
jae
out
in
mov
hlt
sbb
and
imul
aam
fstpt
sub
inc
sbb
push
idivb
jge
lock
adc
cmpsb
or
add
jecxz
cmp
jne
push
fisubrl
test
sub
sub
dec
add
inc
fcmovnu
pop
andl
push
call
int3
rcr
mov
or
fs
cmp
aad
fcomp
cmp
scas
in
clc
push
int
sbb
mov
pop
jmp
cltd
fs
mov
mov
in
enter
mov
pop
lock
movl
jo
nop
inc
mov
sub
mov
pusha
xchg
and
outsl
cwtl
insb
jns
leave
add
test
cltd
mov
or
ret
fldenv
repnz
push
je
test
xor
pop
je
pushf
lret
test
arpl
inc
pushl
cmp
add
or
arpl
pop
add
push
push
dec
fisubl
jo
in
push
or
and
in
lea
push
aam
adc
ret
sbb
inc
sub
je
test
xchg
adc
pop
sbb
pushf
int
or
pop
mov
xchg
add
in
pop
and
stos
mov
xorl
push
push
pop
gs
fdivl
aaa
je
aaa
enter
cli
xchg
pop
mov
adc
add
lea
xchg
cmp
jecxz
test
pop
add
pop
je
inc
sbb
adc
sub
mov
add
aaa
lahf
movsl
and
orl
push
shlb
test
gs
testb
mov
cmp
fisubrs
push
mov
mov
and
sbb
and
flds
aaa
popa
jbe
sbb
shll
and
pop
cs
xchg
xchg
jmp
cli
pushf
sbb
and
or
test
arpl
xchg
cmpl
mov
lcall
cmp
or
push
xchg
and
xor
stc
je
leave
adc
xchg
arpl
fdivl
sub
or
lds
rcll
push
xor
nop
je
cmp
add
jl
inc
mov
movzbl
cmp
or
movsl
ret
inc
cmpl
sub
fwait
push
cmp
lds
mov
lret
inc
sbb
xchg
scas
mov
push
or
sbb
ret
sahf
stos
mov
addb
mov
pop
push
add
push
mov
and
mov
cmp
or
and
jge
xor
sub
imul
and
sub
in
pop
sbb
ret
ljmp
dec
test
inc
testl
adc
mov
movsb
xlat
mov
cld
mulb
orl
cmpb
jne
xor
push
mov
outsl
cwtl
push
pop
push
jae
int3
push
test
adc
imul
pushf
outsl
popf
mov
sbb
adc
inc
mov
push
dec
mov
jns
adc
or
hlt
jge
add
das
cwtl
hlt
mov
mov
push
mov
cld
adcb
push
mov
popa
push
outsb
repnz
dec
sbb
imul
sbb
fimull
out
les
mov
rcrl
insb
js
and
out
adc
mov
shr
adc
dec
or
push
out
mov
or
pop
jbe
imul
mov
rcr
je
movsb
mov
mov
cwtl
dec
mov
ret
pop
or
out
vpackssdw
push
es
jne
cld
stos
aaa
lds
xor
shrb
dec
adc
jbe
inc
jo
addr16
adc
fs
cmp
jae
push
add
enter
mov
int
pop
jecxz
and
cmp
rclb
rorb
test
mov
iret
pop
sub
sbb
mov
shlb
lret
adc
aam
lret
pop
outsb
rol
pop
jnp
popa
sarl
mov
out
loopne
insb
push
or
scas
lods
les
int
mov
dec
lods
lods
lods
lcall
add
cmpl
xor
test
dec
in
test
movsb
push
es
sbb
cmp
fwait
xchg
sbb
enter
mov
pop
shll
sbb
arpl
ds
loopne
mov
fldcw
push
test
test
popf
dec
jae
test
mov
mov
adc
adc
mov
movsl
je
sbb
push
pop
push
mov
mov
push
sbb
cmp
jecxz
test
or
mov
xor
cmp
sub
sbb
repnz
cmp
cld
sbb
ret
jo
imul
dec
aaa
leave
mov
daa
sbb
mov
cmp
fs
xor
push
jns
jns
scas
test
pop
sub
mov
mov
test
xchg
inc
mov
rcll
or
in
jp
popf
or
cmp
sbb
lcall
jecxz
cs
lret
adc
test
and
fsub
bnd
jbe
mov
sbb
or
cmp
mov
dec
sti
and
loopne
shll
jg
lock
std
mov
or
mov
in
and
fwait
sti
fcomp
sbb
sbb
in
pop
lock
clc
push
push
add
fdivr
add
sbb
pusha
movsb
adc
and
setle
sbb
add
and
add
sub
xor
sub
jno
mov
cmpsb
jae
push
loopne
pop
leave
sub
fstpl
push
or
inc
xor
cs
push
scas
loope
cmp
jae
push
aam
sbbl
push
push
movsb
jae
shrl
add
call
clc
dec
push
xchg
lret
shl
rcl
sub
shll
out
or
rcrb
shl
icebp
xorl
enter
dec
cld
adc
sbbb
test
sub
dec
adc
push
enter
lret
mov
mov
sbb
push
nop
stos
les
pop
enter
clc
fldl
rcrb
imul
les
jns
rcl
iret
enter
push
enter
dec
in
pop
mov
leave
pop
or
rolb
xchg
into
dec
xchg
out
loopne
add
sub
push
andb
leave
je
in
jl
cmc
dec
add
jmp
jl
mov
call
fnstenv
mov
in
mov
sub
and
mov
jmp
fcomp
pop
cmp
clc
fmuls
mov
mov
fdivl
cmp
and
outsl
call
enter
test
mov
add
jo
dec
dec
fwait
cmc
testb
in
jne
out
test
adc
sub
mov
cltd
lahf
inc
or
rolb
and
sub
test
movsb
das
mov
mov
jecxz
je
adc
or
outsb
test
test
mov
adc
inc
or
add
in
add
jne
add
mov
test
call
enter
test
push
ret
fs
jo
xlat
data16
jmp
imul
or
aas
dec
rcll
push
mov
cld
cmp
dec
in
cld
jns
and
push
clc
jb
jle
cld
add
cs
hlt
cld
hlt
es
add
push
insb
add
add
mov
adc
pop
sub
aas
mov
fsubrs
inc
push
push
or
mov
mov
clc
add
xlat
shll
mull
int3
xchg
loop
xchg
adcb
adc
mov
shl
aaa
pop
and
inc
lock
mov
enter
aad
test
mov
mov
shrb
je
into
sub
lock
fcmovne
aad
add
xor
pop
mov
sahf
mov
cmpb
xlat
xor
pop
insb
movzbl
add
movb
ret
popf
fs
sub
popl
pop
addl
dec
ss
cld
cmp
inc
push
lock
or
shlb
xchg
add
movsb
xor
sbb
sbb
in
mov
lea
and
add
jb
adc
sbb
or
andl
adc
jg
outsl
dec
fadds
adc
xchg
jl
sbbb
adc
jmp
inc
loope
dec
or
lea
xchg
sbb
and
out
and
or
sbb
jl
test
shl
dec
xlat
je
outsb
or
jmp
add
test
sub
in
xchg
jnp
or
cmpsl
jmp
mov
and
pop
adc
mov
push
int
imul
xor
shlb
orl
sbb
rolb
or
jmp
dec
push
dec
dec
popf
jp
inc
add
inc
pop
mov
pusha
push
mov
or
loopne
std
nop
inc
inc
pop
dec
jne
xchg
mov
in
inc
jmp
xor
jns
mov
enter
fsubs
push
js
adc
push
test
pushl
jl
sbb
cmpsl
mov
xchg
mov
push
fdivrs
xor
push
cmp
inc
inc
cld
in
loop
test
lock
inc
inc
inc
cs
mov
inc
je
xchg
push
fmuls
leave
je
push
movzwl
cmp
mov
sahf
les
xor
xor
in
xor
xor
into
or
pop
jge
lock
adc
push
adc
add
adc
rclb
pop
dec
mov
push
xchg
rcrb
decb
ret
xor
mov
inc
dec
mov
jns
inc
test
aas
add
cmpl
sub
std
adc
nop
popa
push
pop
sub
insl
addr16
cmpsl
mov
and
cmp
cmp
out
push
or
pushf
es
dec
add
bound
cmpb
test
cmp
or
add
push
xor
fldl
in
xchg
stc
js,pt
push
fsubrp
or
movsb
dec
cs
mov
inc
test
outsl
mov
adc
adc
lods
or
jno
rcll
or
cmp
ret
mov
negl
and
js
ja
es
cmp
and
adc
jge
nop
sub
rorl
nop
cmp
xchg
fstl
pushf
add
or
cmp
insl
lods
sbbb
adc
push
cmp
shl
inc
icebp
sbb
clc
sti
and
inc
or
sbb
jne
mov
rorb
pop
pop
pop
movsb
cmpps
and
ja
nop
mov
fcmovu
push
sbb
sahf
mov
jmp
cwtl
sbb
cmp
cmp
insb
dec
push
pusha
add
pushf
jo
aam
stos
add
mov
movsl
bound
nop
push
or
cmp
sub
mov
push
inc
jae
cmp
jg
fninit
nop
mov
pushf
popf
pushf
jp
and
scas
pushf
aad
rcrb
xchg
dec
or
xchg
sub
xchg
add
pusha
aad
rclb
jge
dec
roll
sarb
push
ljmp
and
add
cmp
dec
or
push
nop
inc
mov
adcb
mov
mov
sbb
jecxz
dec
cmp
cmp
mov
shll
jb
movsb
sbb
mov
xor
cmpl
mov
add
mov
cli
shrb
xor
leave
movsl
shlb
sti
or
adc
push
and
and
or
je
push
shll
test
outsb
bound
or
outsb
jns
fs
pushf
fdivs
aas
push
movsl
jb
fistpl
mov
inc
xchg
outsb
inc
adcb
arpl
pop
push
adcb
inc
jl
jmp
or
lods
dec
sbb
arpl
rclb
inc
xchg
out
test
cmpsb
imul
clc
jmp
sbb
test
jge
pop
push
movsl
sbb
pushf
loope
adcb
pop
mov
insl
sbb
xchg
jg
jl
es
or
inc
je
outsl
xchg
sbb
ret
stc
add
test
lahf
xchg
mov
mov
jbe
xchg
pushf
pusha
mov
pop
xor
push
sahf
clc
jno
push
cmp
push
aad
fnstsw
ja
bound
xchg
ret
jl
adc
inc
imul
push
push
add
test
jle
jge
dec
andl
cmp
mov
dec
push
xorb
jecxz
add
xor
leave
push
imul
cmp
xchg
push
adc
pop
dec
sbb
movsl
dec
xchg
sbb
pop
pop
adc
mov
jg
add
fimull
push
or
cmp
adcl
fcoml
adc
adc
popf
mov
push
cmpsb
push
or
dec
pop
sbb
dec
cs
adc
push
inc
cmpsl
repnz
adc
or
mov
cmp
or
mov
jb
cmp
xor
pop
popa
or
add
inc
adc
push
pop
jne
pop
sbb
mov
adc
adc
adc
ret
loope
inc
bound
mov
loope
fisubl
lea
push
mov
pop
sbb
cmpl
adc
push
sbbb
scas
jecxz
sbb
push
add
cmpsl
push
adc
push
pop
pop
adcl
push
rcl
mov
sbb
jmp
and
mov
inc
cli
push
inc
stos
and
cmc
xchg
pop
push
roll
pop
pop
or
or
sbb
mov
nop
test
cmp
test
push
cmp
sbb
and
lods
pop
and
or
dec
push
adc
mov
add
ret
push
loopne
mov
cld
ficoms
enter
test
lea
dec
clc
jmp
sub
dec
sbbl
cmpsl
adc
xor
xchg
mov
cwtl
cltd
xor
dec
rol
mov
mov
orl
or
inc
inc
ljmp
push
repnz
loopne
or
adc
test
push
mov
adc
push
jno
jns
stos
frstor
pop
jnp
pop
mov
cmpsb
mov
shlb
mov
inc
cmp
mov
sbb
fsubrl
call
sub
ret
test
pop
pop
jno
pusha
outsl
xor
out
cltd
aad
sbb
ret
or
inc
push
loopne
movsb
push
in
aad
add
outsl
enter
add
cwtl
push
es
and
out
push
imull
xor
lock
mov
nop
mov
js
sub
jo
mov
add
pop
push
cmpsb
es
ds
and
cmp
aas
fdivr
sub
aam
sbb
xor
pop
mov
subb
inc
cmpl
push
and
push
loopne
movsl
ja
pop
loope
jmp
cmp
push
mov
rorl
sub
shlb
lahf
cwtl
add
and
mov
cltd
add
jo
aad
shrb
xchg
xor
cmp
cmp
int
popa
test
in
out
mov
adc
adc
dec
xor
dec
in
imul
js
test
out
add
adc
push
push
mov
inc
add
add
add
push
fcoms
fwait
sti
adc
inc
dec
cmpsl
jne
or
jo
in
jecxz
mov
fstps
fcoml
add
adc
ja
iret
ja
movsb
sub
inc
inc
inc
cmp
or
adc
flds
xor
int
test
jo
clc
lcall
and
rorl
or
std
pop
icebp
push
sub
jb
add
mov
fcmovnu
ja
push
inc
cltd
rclb
in
sbb
andl
xchg
and
stc
cmp
push
pop
sar
add
nop
ljmp
test
add
xor
cltd
pop
xor
pop
mov
add
lods
lcall
mov
xchg
mov
nop
xor
xor
stos
jecxz
mov
adc
push
rorl
xchg
xor
test
dec
movsl
dec
addl
add
aaa
stc
xchg
fistl
and
daa
cs
mov
push
mov
cltd
cmpl
call
shll
sub
aad
jl
jl
aad
repz
stos
push
in
pop
xchg
push
mov
and
lea
pop
push
and
or
movsb
mov
xor
rorb
das
and
fcomps
sarb
dec
je
nop
cmp
add
cmp
popl
mov
movsb
mov
and
inc
or
ror
push
or
jmp
addl
push
mov
pop
nop
xlat
jl
hlt
cld
sbb
adc
add
mov
jg
jle
in
es
nop
xchg
adc
cmp
jo
xchg
and
adc
inc
push
push
insl
lret
test
sbb
cmpsl
cmc
arpl
sub
or
xchg
lret
test
cmp
adc
and
setne
pop
lahf
test
cld
movsl
dec
mov
fdivl
xlat
cmp
aas
rorb
push
addb
push
icebp
lods
cmpsb
ret
aaa
pop
jo
sub
pop
imul
imul
in
loop
push
jmp
rcll
sbb
jo
mov
sbb
addl
stos
je
xor
cmc
sbb
pop
mov
mov
xorl
xchg
mov
popa
push
ja
sbb
lods
jmp
bsr
xchg
dec
xor
pop
or
add
mov
mov
nop
js
inc
sbb
pop
jne
and
dec
sbb
lock
adc
cmc
pop
pop
xchg
mov
pop
push
add
or
aad
push
lods
sub
push
mov
or
dec
mov
mov
lock
mov
lahf
adc
pop
sbb
add
out
out
js
lret
or
stc
xor
and
mov
push
mov
scas
mov
je
in
mov
lea
and
js
clc
inc
das
cmpsb
mov
int
jo
dec
push
xchg
lods
loope
lock
xor
lods
nop
xor
sbb
aas
push
pop
add
popf
mov
xchg
add
pop
mov
or
and
movsl
lret
test
cmp
repz
jle
add
adc
jecxz
push
test
push
adc
dec
mov
insl
ret
movsl
addb
add
lods
mov
xchg
or
xor
mov
mov
add
mov
push
jne
shrl
movsb
mov
add
cltd
sbb
aas
lods
or
xor
add
mov
add
jns
negl
sub
pop
adc
xchg
push
xchg
jo
xor
sbb
and
adc
stc
inc
sub
xlat
shlb
test
jp
popa
xor
cs
jmp
and
test
test
cmp
lea
push
js
dec
dec
movsl
xor
js
xchg
sub
mov
inc
inc
sub
mov
sbb
cltd
insb
cli
leave
test
mov
jo
aaa
fcmovbe
pusha
push
subl
xor
shll
cmp
push
mov
inc
shll
and
lock
cmc
lea
cmpsl
cmp
ret
popa
sbb
and
sub
inc
jnp
pop
push
xchg
dec
or
push
jo
sbb
and
dec
adcb
pop
scas
adcb
mov
test
movsb
pusha
cmp
into
and
subl
sbb
sbb
cmp
cmpl
adc
adc
dec
and
lea
sub
mov
dec
and
cwtl
lods
push
sysenter
sbb
pop
push
dec
or
pusha
inc
xor
and
lcall
ljmp
cmp
out
sub
mov
jb
outsb
add
iret
or
or
jo
dec
sub
push
sub
push
lock
inc
mov
jl
mov
int
sbb
add
jno
jge
pusha
and
stos
push
sbb
cmp
jb
lea
xor
test
call
push
xor
sbb
test
decb
mov
mov
fidivrl
fstps
or
push
jns
mov
sahf
nop
xchg
int3
xor
fidivs
mov
push
xor
push
stos
jno
pop
pop
aas
add
mov
sbb
sub
jne
add
cmp
idiv
es
xchg
mov
fwait
add
pop
inc
add
mov
arpl
test
test
shlb
popl
rol
jo
mov
jo
xchg
addr16
rcrl
jne
call
dec
mov
dec
or
push
mov
in
sub
clc
in
mov
sti
jo
push
loop
je
cmc
cli
lahf
rorl
and
push
xor
xchg
testl
das
sbb
leave
fmull
push
push
test
fistpll
mov
push
sub
mov
push
pop
aaa
xor
xor
movsl
sub
lea
pop
lds
mov
jbe
inc
adcl
jb
mov
mov
addr16
mov
iret
xchg
xchg
test
repnz
es
in
mov
pop
loope
dec
xchg
scas
or
ss
jnp
dec
xor
lret
jmp
stc
sub
test
mov
loopne
jg
pop
nop
out
in
xchg
test
data16
test
dec
nop
dec
xor
fisubrs
sub
cltd
inc
test
pop
mov
lods
inc
sbb
daa
jno
jbe
jae
enter
or
adc
les
xchg
cmpl
xchg
xchg
xchg
shrb
push
jae
pop
flds
mov
add
adc
je
loope
or
in
jb
cld
sub
and
nop
mov
jmp
dec
rolb
push
inc
iret
xor
dec
shrb
sbb
xchg
mov
mov
les
fists
mov
cmp
and
mov
fs
mov
test
sub
inc
in
nop
lea
cmp
ds
push
sub
inc
out
shrl
loope
lcall
sbb
xchg
addr16
cmp
and
inc
and
mov
or
xor
sahf
and
push
add
lods
stc
imul
lock
or
cs
xor
or
mov
call
loopne
lahf
neg
std
stc
xor
mov
mov
call
sub
adc
out
add
leave
imul
enter
les
ret
mov
insl
rolb
adc
loop
pop
push
inc
mov
mov
clc
push
push
xor
fstps
push
lret
sub
dec
jmp
cmc
cmpl
sbb
fmull
jle
movzbl
and
mov
xor
fbstp
push
inc
mov
enter
ss
int3
aaa
rolb
inc
sbb
cmp
test
jecxz
mov
dec
pop
adc
or
cmpl
je
or
je
add
out
loopne
jmp
or
in
dec
jo
rcrb
lds
test
pusha
jge
jae
push
jo
or
loope
inc
mov
or
mov
dec
pusha
cld
push
or
add
call
in
fs
out
pushf
pop
adc
cwtl
imul
sub
stos
xor
lea
push
in
stos
clc
inc
mov
xchg
lods
fistl
cmc
or
mulb
add
pop
out
or
mov
add
adc
testb
lea
repz
push
mov
jb
es
add
add
jns
push
add
js
sbbb
xchg
data16
sub
or
mov
les
push
inc
mov
cmpl
push
mov
jge
dec
fbstp
adcl
pop
jbe
dec
cmp
clc
xchg
test
jg
data16
add
and
xchg
inc
adc
push
lods
xor
add
hlt
dec
int
test
jo
xor
lret
cmc
shlb
or
push
pop
sub
or
sub
jns
add
add
add
push
add
adc
dec
add
loopne
ja
sub
adc
add
push
push
daa
add
mov
fdivrl
xchg
jmp
xor
add
push
inc
daa
sub
pop
mov
inc
addr16
sbb
arpl
in
or
mov
mov
push
xor
nop
sub
inc
sbb
pop
add
fistps
sbb
iret
ja
outsl
jbe
mov
shlb
jmp
push
xor
inc
addr16
fwait
in
inc
xchg
xchg
jg
mov
add
out
ret
and
lock
mov
adc
orl
arpl
insb
adc
sub
push
pop
mov
sbb
lock
outsb
in
mov
push
sub
sbb
pop
fadds
ficomps
and
js
push
lahf
flds
pop
rclb
rclb
cwtl
add
add
xchg
pusha
out
shlb
lcall
nop
pop
mov
sub
push
andb
popf
ret
pushf
loope
stos
adc
or
dec
std
pcmpgtd
xor
call
add
jbe
fmuls
mov
mov
inc
pop
push
hlt
dec
fisubs
aam
or
sub
mov
cmp
push
sbb
je
rcr
and
or
sub
adc
rorl
add
in
insb
xlat
jbe
jbe,pt
daa
pop
mov
xchg
mov
mov
mov
jbe
jg
mov
jl
push
cmp
mov
loope
rcrl
cmp
jne
je
mov
or
out
jo
dec
push
sahf
sbb
fdivl
lds
lds
stos
cltd
pushf
lods
or
cwtl
daa
pop
xor
push
jo
jbe
push
fxsave
push
mov
dec
lret
out
into
popa
pop
and
loopne
rcl
into
add
jnp
sbb
xor
xchg
daa
sub
xor
mov
push
aad
jecxz
pop
insl
cmp
mov
and
sbb
imull
pop
push
jo
repnz
adc
adc
loop
pushf
cmpsl
or
ret
or
sub
scas
mov
pop
mov
mov
in
int3
int3
sti
sbb
mov
ret
les
inc
fs
xor
aas
xchg
sbb
inc
daa
adc
fsubs
push
mov
lea
dec
adc
push
mov
mov
jl
and
mov
aas
les
popf
or
arpl
test
outsb
mov
loopne
sub
or
sub
jp
pop
and
cwtl
pop
cmp
and
mov
or
testb
pop
ret
jmp
xor
dec
jle
loope
push
cmc
nop
inc
nop
mov
push
insb
xchg
ret
xchg
ss
imulb
push
popl
arpl
sub
mov
cmp
loope
fisubl
in
lret
lcall
add
add
add
push
pop
or
adc
or
add
pop
in
or
or
add
adc
or
cli
jbe
test
mov
pop
cmpsl
imul
inc
fmuls
pushl
xor
mov
ss
pop
pushl
test
xchg
es
pop
jmp
jecxz
mov
nop
mov
and
mov
jo
mov
fs
sub
adc
adc
lods
movsl
add
in
in
dec
cs
and
jns
mov
mov
adc
jb
lods
shll
int3
lea
push
insb
ret
cld
or
sbb
out
cld
cwtl
and
jnp
dec
lret
xor
pop
mov
push
xchg
adc
mov
pop
aad
clc
jl
jne
cmp
xchg
lock
push
ds
or
mov
fidivs
dec
hlt
cmp
stos
or
rorb
jne
push
in
mov
ret
sbb
pop
mov
push
scas
and
popf
or
mov
hlt
jmp
xchg
repnz
pop
add
lock
cmp
je
lahf
bound
sbb
or
jno
jmp
fstpt
sub
dec
stos
xchg
xor
inc
adcb
add
and
jmp
das
ret
ja
or
fsubs
sbb
jb
fbstp
cltd
add
adc
push
repnz
push
dec
xor
iret
mov
xor
xchg
je
je
stc
pop
sahf
outsb
push
sbb
sub
and
insl
xor
xor
stc
push
xchg
inc
xchg
add
inc
es
mov
xorb
cmp
push
inc
jo
enter
and
negb
jno
leave
nop
int
and
inc
adc
inc
or
mov
cmpsb
mov
nop
mov
xchg
xchg
xor
dec
cmpsl
or
jl
xor
cmp
mov
subb
push
push
xor
stos
les
xor
movsb
shll
xor
mov
inc
pop
push
and
push
xor
pop
mov
sarb
add
dec
lods
in
movaps
mov
jbe
iret
jmp
xor
dec
and
push
pop
dec
mov
jne
fdivs
vmwrite
cmp
xlat
jge
sub
imul
adc
adc
dec
shrl
adc
aam
adc
jmp
les
mov
push
mov
loop
pop
cmp
jne
jmp
adc
push
loop
or
xor
subb
stc
or
je
add
push
push
or
push
add
cwtl
jnp
sbb
sbb
pusha
xchg
and
pop
clc
xchg
or
xchg
outsb
and
adc
adc
xor
push
movlps
enter
mov
popa
ret
scas
push
pop
mov
roll
add
out
push
dec
cmp
les
dec
sub
int3
into
les
inc
xor
push
adc
je
inc
add
arpl
pusha
pop
jne
test
or
popf
mov
xchg
aaa
jno
push
adc
pop
xchg
or
cli
adc
inc
ret
mov
inc
pushf
data16
or
mov
add
xor
mov
mulps
adc
xchg
mov
fucomp
jg
loope
neg
sbb
push
mov
or
rorb
jb
call
adc
popf
lahf
add
push
add
sahf
les
shr
sub
and
add
add
shrl
sub
lods
xchg
lret
mov
push
test
jmp
xor
sbb
mov
inc
fwait
cmp
jl
out
pop
fwait
inc
add
fwait
mov
jecxz
pushf
pop
lahf
incb
pop
add
add
cwtl
lods
mov
add
imul
lea
and
inc
je
ds
xchg
xchg
sub
or
clc
add
nop
call
clc
and
inc
enter
mov
insl
cmpl
das
cld
jmp
adc
fadds
xor
mov
cld
sub
pop
lcall
xchg
xchg
mov
icebp
add
push
dec
jo
jl
lret
cmp
insl
clc
push
push
xchg
loopne
or
adc
xchg
sbb
pop
sub
rorb
push
fsubrl
push
jl
in
out
imul
add
jae
dec
pop
cmp
pop
lds
jecxz
dec
shlb
adc
xchg
lods
cli
pusha
pop
cmp
adc
push
movsl
ret
jne
inc
addl
cli
and
in
in
cmp
js
lahf
rolb
sub
scas
lock
loop
pop
or
lea
mov
pop
jmp
clc
hlt
hlt
lret
push
and
add
std
push
lahf
out
or
pop
clc
jmp
mov
aas
cmp
test
lea
imul
pop
mov
into
adc
shll
cwtl
orl
dec
in
adc
cmp
mov
cmp
ds
fldt
pop
test
sbbl
cmp
mov
push
in
stos
rclb
icebp
push
cmp
icebp
xchg
push
sbb
jle
add
bound
inc
in
in
xchg
aaa
push
lock
inc
hlt
push
push
jns
lock
popa
pop
ficompl
rcll
cli
mov
imul
jmp
lret
adc
sbb
aad
push
into
rcl
cld
ret
and
pusha
das
fstl
icebp
jecxz
or
aad
and
inc
mov
mov
inc
lds
add
add
add
mov
shll
mov
popf
inc
sub
mov
lahf
aam
sbb
jae
sarl
cmp
and
mov
andb
sbb
add
hlt
push
add
sbb
adc
jmp
inc
fmull
outsl
fimuls
inc
mov
adc
loopne
nop
or
mov
push
pop
clc
iret
fmulp
int3
add
add
pop
push
cmpb
cmp
mov
or
int
sub
jmp
cld
mov
mov
addl
xchg
cmp
dec
shl
mov
add
enter
incb
or
fldcw
push
cmp
or
cmp
adc
negl
int
sub
pop
mov
lahf
bound
xchg
mov
pusha
icebp
push
pop
sbb
pop
or
cmc
adc
das
fs
nop
inc
sub
dec
add
data16
in
inc
push
shrb
mov
sub
cld
ljmp
es
dec
jecxz
jb
enter
mov
fs
cltd
push
pop
scas
mov
xchg
pusha
das
or
fdiv
sub
cmp
test
xchg
lea
push
mov
adc
cmp
sub
in
pop
subl
inc
or
adc
popa
mov
inc
adc
fdiv
cmp
jne
push
push
or
gs
xor
xchg
movl
adc
add
mov
sbb
movsb
ds
mov
push
adc
jp
pop
inc
je
pop
mov
stos
fmull
ficoms
pop
or
add
leave
sti
jnp
inc
lahf
jmp
cs
sbb
xor
xor
ret
andb
lock
xchg
xor
push
add
mov
or
adc
or
je
adc
push
and
sbb
and
push
jns
and
mov
fsubrl
fwait
push
inc
sub
sub
pop
call
js
int
mov
cmovo
mov
mov
mov
jbe
inc
sbb
inc
fldl
cmp
rcrl
ljmp
mov
xor
ret
jmp
clc
or
or
cmp
mov
xor
test
dec
jo
stos
aas
out
add
cmp
add
push
cld
stos
pop
pusha
and
pop
and
dec
cmp
ds
sbb
clc
or
adc
cld
mov
pop
mov
mov
or
arpl
popf
pop
in
mov
cmp
in
or
shlb
in
mov
lahf
div
je
orb
and
rorb
and
pop
lahf
leave
clc
into
pusha
inc
enter
push
mov
sub
stos
xor
adc
repnz
jns
das
xlat
rclb
dec
test
in
movb
or
dec
movsl
sti
add
test
pop
inc
ja
insl
push
sub
dec
xchg
faddl
adc
mov
dec
pop
fists
inc
lock
push
add
jmp
mov
or
mov
mov
or
vpminsb
sar
sarl
xchg
fiadds
dec
or
mov
lahf
adc
cmpsb
or
xor
push
pop
les
mov
or
std
lock
dec
adc
push
lea
mov
out
hlt
loope
test
out
imul
mov
pop
sub
jl
jle
lds
lock
add
nop
lcall
enter
xchg
xchg
pop
add
push
lcall
mov
fwait
jg
lods
jae
aam
loopne
scas
adc
jne
in
add
ret
pop
xchg
mov
jmp
inc
add
jo
cmp
push
inc
je
xor
and
setne
jb
jnp
inc
imul
fldl
jo
pop
and
push
scas
jbe
lahf
jl
bound
mov
jb
add
es
dec
adc
add
lods
insl
int3
mov
lock
add
inc
and
andl
pusha
push
mov
fs
je
loope
pushf
cmp
jge
and
test
clc
push
cmp
lock
sahf
jl
in
jge
mov
int
and
add
fisubl
or
push
jecxz
lea
dec
cmp
shlb
dec
cmp
sub
scas
icebp
in
xor
xor
mov
icebp
sub
adc
add
add
push
loopne
sbb
push
int3
sahf
fmull
jae
or
xchg
cmovnp
or
add
loopne
push
fsub
jl
lock
jne
bound
cmp
sbb
xor
jb
enter
sbb
data16
sbb
xor
or
xor
pushf
inc
xchg
decl
enter
and
subb
aad
fsubrs
insb
rcll
pop
movsb
movsb
add
cli
loope
rcll
fcmovnbe
das
lods
adc
jg
call
das
xor
mov
mov
bound
mov
notl
movsl
cmpl
and
inc
or
jno
inc
jnp
mov
mov
mov
or
or
in
xor
sbb
lea
cltd
ret
cmp
mov
xchg
mov
inc
push
cmp
sub
mov
stc
jmp
loopne
loope
jmp
lea
and
xchg
cs
xor
xor
pop
loopne
lea
push
test
mov
or
ret
add
and
mov
mov
jno
adc
cmpsb
lds
xor
add
shr
push
int3
mov
xchg
and
push
cmpsl
push
add
add
push
jmp
or
lock
pop
enter
cli
sbb
stos
stc
jmp
popf
add
lcall
jl
sbb
sahf
adc
stc
and
in
aaa
fidivl
orb
xchg
jmp
push
cmp
dec
jge
lods
insb
adc
loopne
insb
push
and
and
sub
jne
out
pop
loop
push
xlat
inc
test
xchg
addr16
mov
test
lds
mov
add
add
pop
out
fmuls
shll
in
cwtl
lcall
mov
loope
dec
in
inc
sbb
push
pushf
sarb
cmpl
ret
shlb
adc
mov
insl
xorl
adc
xor
sbb
je
cltd
stos
push
cli
dec
sbb
rorb
cmp
les
fcoms
and
xor
stc
xchg
les
mov
pop
scas
mov
cmp
dec
adc
jmp
cmp
popa
mov
cmp
test
push
adc
ret
dec
lret
jmp
test
and
pop
add
mov
inc
leave
lea
repnz
rcll
add
mov
subl
int3
into
xor
ja
stos
std
mov
xor
cmp
xor
clc
dec
ret
and
aam
xor
lods
ret
cmpsb
gs
fcoms
cmpsb
in
xchg
sub
les
clc
jne,pn
daa
mov
dec
jne
dec
jne
adc
sbbl
ret
pop
iret
adc
sub
inc
pop
out
add
adc
jl
sub
push
std
jb
push
inc
adc
inc
fsubr
push
outsl
pusha
mov
jne
stc
mov
add
or
add
lahf
jmp
lds
lods
dec
stc
enter
cwtl
mov
mov
cmpb
aas
gs
push
push
dec
and
mov
mov
fwait
cwtl
rcrl
gs
or
repz
pop
aad
lods
or
rcr
mov
in
pop
adc
clc
mov
imul
arpl
loop
adc
fldenv
add
add
fdivl
and
mov
xor
sub
fnsave
sbb
das
mov
mov
xor
out
inc
and
dec
inc
cmpsb
inc
loopne
icebp
out
jmp
sti
mov
pop
je
cmp
cmp
jbe
mov
das
pop
mov
jmp
cs
push
gs
dec
loopne
cmp
mov
sbb
addb
mov
stos
push
add
add
adc
pop
in
lock
arpl
push
cmp
clc
push
in
mov
adcl
lds
push
jmp
cmpsl
or
inc
cs
xchg
sbb
lahf
loop
pop
dec
jp
add
pop
cld
dec
sbb
push
ds
push
push
xlat
mov
dec
xchg
push
or
cmpl
xor
add
pop
lea
test
lea
in
mov
sti
xor
shlb
fstps
cs
mov
cli
shl
js
mov
lret
bt
movsl
or
out
add
sbb
mov
push
int3
adcb
jmp
sub
add
mov
push
dec
pop
int3
dec
repnz
lods
mov
cld
scas
pop
mov
call
dec
cld
push
inc
push
cs
push
ret
out
mov
push
sbb
fists
push
xchg
sub
xor
push
xchg
inc
push
pop
xchg
sub
nop
cmpsb
in
and
mov
push
push
rclb
test
sub
inc
lea
inc
inc
push
push
adc
xor
cmpsb
xchg
xor
jl
es
sti
aaa
loope
idivb
leave
repnz
rcrb
push
xchg
sub
push
push
int3
pop
shrb
aam
xor
mov
call
or
stos
or
in
int
lahf
xor
nop
add
mov
mov
dec
in
mov
loopne
popa
adc
ss
jbe
repnz
mov
std
push
lahf
insb
push
lods
imul
xchg
adc
ljmp
aad
xchg
push
sbb
jmp
mov
outsl
dec
rol
je
shlb
rclb
dec
mov
es
push
clc
lods
pushf
lock
push
xor
sub
xor
sbb
mov
push
scas
xor
push
inc
xchg
lcall
mov
mov
jge
in
adc
push
popa
sarb
loopne
sti
adc
fs
loope
dec
js
adc
jge
xor
cs
loope
ja
iret
out
cs
cs
adc
sub
or
sub
push
hlt
sarb
into
shrb
jb
loopne
or
fiaddl
mov
imul
aam
in
test
inc
sub
mov
push
or
das
fldl
xor
sub
mov
pop
inc
pushf
or
or
dec
pop
pusha
dec
outsl
loope
movsl
or
and
inc
lods
sub
jne
xchg
jecxz
xchg
icebp
mov
pushf
jno
shl
shlb
jg
push
or
cmpl
stos
xchg
add
or
gs
stos
cmp
fidivs
sub
andl
pop
pop
mov
cmpsb
cmp
lahf
nop
ja
hlt
adc
add
jmp
cld
sbb
ja
xor
push
sub
scas
inc
out
arpl
jg
or
mov
add
mov
sti
cld
shl
push
test
sbb
mov
cmp
cmp
repnz
lock
ds
lock
testb
push
loopne
inc
push
cmp
jl
sub
test
outsb
push
in
shrl
pop
andb
fldcw
lcall
dec
shrl
mov
cltd
jle
cs
aaa
sbb
or
pop
ret
popa
mov
xchg
cmp
pushf
adc
fst
call
inc
pop
rorb
inc
imul
rcll
mov
test
jg
jnp
jae
push
lret
rcrl
aas
mov
mov
das
cld
popa
cld
roll
cmp
or
xchg
mov
sti
mov
jmp
shrl
pop
mov
mov
and
mov
into
jmp
adc
insl
mov
jno
decb
add
ret
pop
cmp
push
in
or
out
pop
inc
lock
lret
mov
lods
inc
movl
mov
ret
add
faddl
ret
sub
shr
push
rorb
mov
push
cmp
mov
or
pop
lea
jno
mov
scas
jge
inc
dec
dec
popf
or
mov
clc
jne
jae
jmp
add
add
mov
inc
push
sub
les
and
push
pusha
add
push
jne
sub
push
jmp
cmc
mov
es
xor
dec
pop
out
decl
sub
cld
outsl
outsl
loop
mov
xor
jne
mov
inc
pop
cld
push
jg
mov
sub
test
data16
add
ljmp
and
lds
clc
mov
outsb
add
cmp
shrb
or
mov
add
and
push
cmp
xor
jg
push
pop
lcall
fcompl
fisttpll
push
pop
adc
xorb
shll
mov
negl
hlt
and
hlt
jge
pop
push
xor
hlt
divb
and
xor
scas
daa
and
dec
sbb
mov
lea
stos
ret
out
jo
dec
lret
cs
add
movsl
inc
addb
stc
push
cli
addr16
or
jns
xor
int
movsb
inc
push
sub
jmp
cmp
mov
out
or
pop
push
fxch
fwait
bound
xor
dec
por
or
sti
rcll
jecxz
or
pop
jns
jg
jg
dec
add
mov
inc
sti
out
add
add
add
ja
adc
adc
mov
cmp
test
xchg
cmp
lods
and
pop
shll
add
mov
xchg
xchg
jl
adc
lods
lock
test
loopne
jg
call
mov
mov
push
stos
es
add
sahf
mov
jne
sti
fwait
loopne
orb
lds
xor
mov
pop
or
and
or
sub
lods
push
xor
and
mov
xor
cmpl
mov
test
pop
rorl
aam
xor
mov
xor
bound
repz
lcall
insb
jp
movlps
hlt
push
mov
push
jmp
push
jno
push
add
nop
mov
sbb
or
addl
mov
xchg
cli
adc
movsl
sbb
mov
roll
inc
sahf
dec
daa
inc
inc
push
cmp
lods
adc
ja
cmp
or
xchg
and
sub
int3
ret
test
add
dec
adc
or
xchg
jae
adc
cmp
and
lea
vminps
sbb
cltd
movsb
cmp
int3
mov
pop
mov
push
fadd
add
sub
jg
lock
push
push
andb
test
sbb
mov
xor
rorb
mov
mov
mov
imul
movsl
dec
xor
sub
test
inc
xchg
mov
test
mov
call
inc
aas
movsl
mov
and
xchg
fadd
mov
xchg
inc
and
add
pop
hlt
orl
xchg
jno
out
and
lcall
mov
fists
int3
cwtl
lock
inc
add
xor
cmp
sbb
mov
or
test
test
adc
pusha
jmp
mov
pushf
inc
icebp
ret
adc
or
sub
sbb
mov
xchg
push
sbb
inc
bound
and
inc
arpl
pop
jp
lock
test
pop
or
cmp
lock
mov
pop
adc
pop
pop
xchg
aas
pop
xchg
mov
hlt
mov
sbb
push
and
add
and
sbb
pop
mov
loopne
loopne
push
xor
les
xchg
mov
lcall
mov
pushf
pop
ja
loopne
pusha
xor
sub
das
add
jo
adc
xor
pop
aas
mov
and
and
stc
adc
jo
mov
adcb
sbbb
jno
adcl
out
sub
sbb
pop
addr16
inc
lret
inc
sbb
mov
add
movl
cmc
arpl
and
clc
das
std
movl
and
lret
xor
pop
cmp
cmp
add
cmc
sbb
lahf
shl
xor
aas
pusha
or
andl
hlt
lret
inc
out
ret
ljmp
xor
jmp
cmp
inc
inc
data16
inc
add
jnp
das
jecxz
adc
xchg
mov
cmp
loopne
cmpsb
sbb
jo
fbld
mov
sbb
ds
outsl
xor
add
or
xchg
lock
aaa
ljmp
stos
xchg
rolb
xor
mov
pop
addb
jb
movsb
inc
or
mov
inc
fdivl
sbb
or
rcll
mov
rorl
scas
sbb
cmp
sbb
or
jne,pn
scas
push
test
sbb
stos
ljmp
clc
mov
pop
mov
push
stc
push
js
pop
or
dec
pusha
stos
js
cmp
jbe
or
int3
pop
and
sbb
addr16
or
shl
movsb
push
mov
ja
or
ret
loopne
add
or
xor
sub
sub
mov
or
fmull
mov
mov
dec
adc
push
pop
inc
push
test
pop
sbb
aam
sbb
dec
xchg
out
js
into
ret
leave
bound
imul
bound
push
dec
and
js
push
adc
leave
aam
adc
xor
shrb
mov
mov
sti
clc
jmp
add
in
pusha
sar
mov
mov
shll
pop
adc
pop
repnz
jne
mov
push
enter
jo
popa
sub
push
inc
popa
dec
call
mov
or
fildll
sub
dec
in
stc
popa
popa
stos
push
push
jecxz
shrl
outsb
sbb
shrl
pop
je
pop
int3
call
pop
inc
mov
xor
hlt
push
add
pop
dec
and
xor
lea
and
pushf
outsl
pusha
sub
notb
xor
xchg
push
pop
mov
lea
sbb
out
sub
roll
pop
call
movsl
add
mov
fmuls
cmp
pop
aas
daa
cmp
addb
jbe
or
dec
vmwrite
in
lods
xchg
loopne
sub
inc
push
jo
sarl
inc
xadd
dec
pop
adc
and
pusha
insl
sbb
ret
repnz
iret
jbe
and
lcall
xor
xor
in
mov
xchg
push
lods
pusha
repnz
inc
loopne
sub
loopne
dec
xor
push
pop
cmp
pop
lods
adc
sahf
dec
jp
add
mov
js
loop
enter
mov
in
push
test
add
cmp
jo
int3
push
pushf
dec
pop
and
mov
xor
push
insb
xchg
enter
push
test
dec
insb
xchg
pop
mov
fildll
ja
add
jl
push
in
daa
into
std
ror
movl
pop
add
inc
cwtl
push
cmp
ljmp
or
jmp
pushf
scas
fdivrs
sbb
push
imul
jge
repnz
sbb
pusha
push
lcall
jg
imul
movzwl
mov
rclb
cmpsl
sbb
add
pop
aas
mov
cmp
outsb
inc
cli
std
adc
or
xchg
adc
jo
shlb
adc
cmpsb
adc
insb
dec
jne
insb
mov
mov
in
insl
out
shll
imul
iret
andb
push
jbe
lods
mov
ret
sar
stos
adc
clc
sub
rorb
pop
dec
adc
lock
inc
nop
push
push
pop
icebp
fsubrl
arpl
push
jecxz
add
sub
sbb
mov
xor
jbe
cmp
or
mov
movsb
ret
lret
aad
xchg
mov
jl
int3
outsb
gs
outsl
sub
movsb
jno
or
add
das
outsb
lret
or
outsl
or
dec
xchg
inc
and
in
mov
enter
adc
fsubs
sub
movsb
dec
shlb
xchg
fisubl
or
test
jg
mov
test
and
lods
test
mov
addb
pushf
mov
pushf
sub
or
add
jb
call
insl
mov
dec
mov
stos
xor
add
jne
sbb
test
inc
dec
and
or
in
jmp
mov
movsl
cltd
stos
stc
pop
rorb
adc
je
jmp
sub
adc
adc
loop
or
insb
xorl
add
or
bound
out
pop
fcos
dec
xchg
test
pop
add
nop
mov
jl
adc
adc
xor
popf
adc
sub
pop
rcll
adc
daa
imul
cld
dec
mov
xor
mov
outsl
call
xorb
jno
call
mov
lea
rep
mov
push
aas
mov
add
mov
test
jl
jecxz
sbb
mov
cmpl
mov
xor
sub
jo
int3
mov
loope
xchg
mov
orl
adc
mov
push
add
rcll
daa
dec
sub
push
push
mov
xchg
push
jp
pop
xor
out
roll
shrl
data16
fisttpl
pop
mov
aam
jp
and
test
jnp
loopne
jns
shl
cwtl
sub
or
roll
pusha
mov
repz
xchg
cwtl
pusha
mov
pushf
shl
dec
add
dec
lods
dec
cmpsb
movsb
xchg
or
push
jle
pop
or
and
and
fs
jo
dec
test
pop
cwtl
push
repnz
cmpb
and
adc
adc
cmp
outsb
cmpsl
mov
fsubp
mov
insl
rcrb
jle
mov
sbb
fldt
xchg
lret
lods
mov
ret
lret
cld
cmpsb
and
lcall
cmp
test
cmc
sbb
test
jp
jecxz
idivl
add
idivl
jp
out
repnz
xchg
lret
es
cmpsl
rorb
jge
and
mov
scas
cltd
enter
adc
or
jns
lahf
cmpsb
lock
je
in
call
test
cmp
pop
xchg
jae
xor
lock
test
and
pusha
jg
pop
lock
lret
mov
test
pop
push
mov
push
ja
adcl
jecxz
push
aas
in
data16
shlb
aad
inc
or
leave
jge
pop
inc
jp
mov
adc
hlt
cs
shlb
mov
push
pushf
add
in
movsb
add
inc
xor
or
enter
sub
data16
mov
jle
or
lock
sub
ds
fadds
sbb
jmp
orl
movsl
in
andl
cs
xor
cwtl
aam
fcomp
push
cmp
ds
inc
sub
icebp
cs
imul
jne
adc
inc
add
jo
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
into
in
in
pop
sbb
mov
arpl
enter
sub
add
inc
in
dec
jns
or
in
ds
popa
jmp
cli
inc
mov
imul
or
int
pop
shrb
in
xchg
test
call
xlat
add
and
pusha
shrl
scas
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
mov
enter
sti
mov
push
cmpl
or
fwait
ja
je
mov
push
xor
out
fcoml
jo
push
loop
jb
adc
pop
jg
and
mov
lods
sar
shlb
ds
add
add
sub
mov
enter
xchg
and
sbb
fldt
loope
push
inc
add
aam
push
xchg
add
xor
pop
sbb
and
xlat
jbe
jl
loopne
push
and
push
jb
lret
jno
sub
pusha
mov
add
aas
pop
add
pop
mov
pop
xchg
xchg
in
test
push
ljmp
lea
push
push
sbb
test
loopne
add
pushf
cmpb
adc
int3
clc
imul
lods
notb
or
mov
mov
add
push
inc
xchg
flds
jbe
push
cs
jmp
lret
pop
xor
sub
sbb
das
mov
fwait
add
sarb
rclb
or
mov
sbb
xor
cmp
insb
inc
mov
mov
inc
add
add
dec
push
stos
lea
push
mov
cmp
lea
loope
mov
adc
add
pusha
aam
add
mov
fcomps
xor
xchg
aad
push
xor
xor
mov
pop
xchg
pop
mov
xor
int3
mov
inc
mov
inc
pusha
pop
or
push
add
insb
xchg
ja
adc
dec
addl
fdivs
push
sbb
jne
nop
movsb
and
lods
xchg
dec
enter
pop
or
cli
sub
dec
pop
add
subb
aad
mov
int
add
rcll
dec
fdivrl
rcrl
xor
data16
cli
or
mov
fmul
push
dec
lret
out
pusha
cmp
rolb
test
fcoms
xor
push
aas
and
das
mov
int
sbbb
mov
push
cmp
jmp
enter
fnstsw
push
mov
insl
mov
loop
or
dec
dec
test
out
and
ljmp
jns
imul
or
and
adc
mulps
rcrb
inc
pop
add
sbb
xchg
pop
nop
or
loop
jmp
jo
fldenv
xor
pop
jge
rdtsc
les
icebp
cmp
pusha
adc
inc
add
mov
add
pop
ficoms
mov
es
cld
push
popf
or
ret
pop
sub
dec
and
xchg
sub
fnstsw
jmp
cmp
pop
push
shl
xor
dec
mov
mov
sub
lahf
inc
sub
push
stos
movsl
mov
movsl
adc
out
jne
pop
push
ja
push
dec
jge
and
inc
inc
outsb
push
push
pusha
xor
pushl
push
adc
hlt
mov
sub
add
mov
or
in
push
or
sub
sarb
inc
std
mov
lret
in
sar
mov
sbb
push
push
adc
or
sbb
in
lcall
push
push
mov
cmp
push
or
xchg
popa
bound
or
call
adc
sbb
mov
sbb
jae
dec
jg
add
adc
cld
popf
orb
mov
pop
add
rcl
repz
dec
jnp
pop
cmp
push
cli
jl
fbld
shl
pop
hlt
hlt
cmp
ss
push
sub
push
movsb
or
cmp
adc
jmp
movsl
sarb
out
cmp
jp
pop
xchg
hlt
test
jbe
prefetcht2
push
sbb
dec
pop
xor
push
scas
sbb
outsl
xor
push
push
pusha
add
sar
mov
inc
rorb
cs
push
or
movsb
add
pusha
xchg
mov
push
jge
subl
dec
cld
mov
add
loopne
push
daa
push
xchg
dec
jmp
dec
jmp
sbb
or
lock
pusha
push
cmp
mov
cmp
ficomps
jbe
push
add
cmpb
or
mov
adc
jg
idivl
sub
lea
bound
or
mov
inc
dec
jne
js
jne
test
pop
jne
dec
mov
mov
pop
inc
sarl
xchg
test
fcompl
push
outsl
mov
cmpsb
cmp
xor
mov
push
rol
sbbb
inc
hlt
adc
mov
xor
push
push
subb
jns
sub
jnp
movsb
or
in
push
push
pushl
jmp
sbb
sbb
add
jno
lea
es
jge
mov
jnp
sbb
dec
aam
jmp
dec
cmp
sbb
inc
jmp
push
xor
and
jl
popf
sar
add
mov
pop
mov
dec
sti
xchg
ret
sbb
cmp
lcall
and
mov
push
push
mov
jne
cmp
lahf
sub
cltd
enter
je
jbe
mov
mov
cmp
adc
mov
sub
movl
mov
sti
test
adc
jne
mov
mov
xlat
ficoml
adc
shlb
arpl
add
lods
dec
decl
dec
and
mov
lcall
insl
mov
cmpsb
push
xchg
mov
inc
call
sti
in
mov
cmp
jb
neg
add
add
rorl
data16
cmp
aam
mov
or
or
jge
in
pop
mov
or
rcrb
lock
push
clc
sub
idivb
and
and
mov
and
mov
pop
push
mov
add
add
jle
push
push
cmc
xor
push
clc
jl
mov
xchg
rorb
mov
arpl
loopne
leave
popa
cltd
fld
loop
pop
xchg
add
dec
push
fs
rcrl
jmp
stc
inc
mov
add
cli
sub
lcall
das
int
test
std
pusha
les
cmp
xchg
mov
fs
mov
shld
rclb
cld
sbb
mov
or
push
lods
cmp
shlb
push
or
mov
dec
or
into
sbb
sub
jbe
jns
adc
mov
pop
gs
push
addl
cli
jo
jg
sbb
add
inc
xor
mov
fadds
push
mov
add
xchg
movsb
inc
sbb
addb
mov
rorb
lock
mov
inc
fisttpll
push
mov
out
cmp
inc
popf
add
sub
enter
shl
pop
or
mov
aam
cs
xchg
xor
pop
pop
xchg
enter
add
sub
xor
mov
xor
push
inc
dec
cld
jo
add
je
adc
sub
movl
jmp
sub
xchg
jle
jo
or
shl
gs
and
and
es
or
and
push
xchg
das
fstpl
fbld
jno
sbb
imul
cmp
jae
inc
les
mov
jmp
sub
cli
mov
rolb
and
adc
cld
xchg
loop
cmp
jge
cmp
push
loope
adc
outsl
sar
jge
sub
xor
insl
ljmp
or
add
repz
addl
jmp
push
sub
inc
add
mov
sub
bound
jle
mov
sbb
inc
fimuls
xchg
inc
xchg
loope
test
fisubrl
lahf
std
jg
adc
dec
add
mov
lds
cmp
sbb
rorl
movl
sbb
or
fsubr
push
dec
pop
xchg
push
shl
hlt
fadds
in
sbb
rclb
ds
call
push
jbe
sub
mov
in
sub
pop
inc
xor
fidivl
push
inc
testl
xlat
xor
lahf
clc
sub
xchg
icebp
lods
imul
out
movsl
das
push
clc
or
jle
jmp
mov
jbe
je,pn
push
push
lea
xor
xor
xor
xor
cld
outsb
adc
pop
mov
fstps
jo
xchg
adc
mov
adc
adc
sub
out
pushf
push
adc
mov
add
pop
js
xor
inc
in
sbb
add
mov
mov
push
adc
punpckhdq
stos
pop
sub
sub
push
sub
sub
sbb
mov
arpl
cmp
lahf
loopne
xchg
push
push
pop
mov
ret
jecxz
rep
xor
and
out
push
or
add
pop
lret
add
jne
add
loopne
sti
sbb
add
xchg
push
movl
sbb
pop
arpl
rcr
cmp
push
sbb
aaa
sbb
stc
pop
or
rorb
xor
fbstp
push
insb
neg
pop
sbb
pop
inc
jg
and
sbb
icebp
clc
mov
roll
cmp
jbe
clc
jb
pop
mov
rcrl
push
pop
cmpl
sti
out
and
dec
pop
pop
adc
sti
pop
jnp
cmp
call
adc
and
cmp
jb
fcoms
add
mov
mov
jb
loopne
add
xor
add
cli
lea
idivl
nop
cmp
fs
mov
rcl
in
mov
mov
mov
mov
or
scas
adc
mov
dec
xchg
push
push
cwtl
add
movl
into
inc
add
add
or
out
lock
call
repz
enter
mov
repz
and
call
cmp
repz
hlt
hlt
clc
clc
fisttps
repz
mov
add
lock
out
push
insb
fnstcw
jmp
xor
mov
mov
inc
xor
push
lods
pop
sti
and
popa
xchg
and
lea
jl
dec
jb
cmp
or
addr16
stc
out
mov
neg
adc
pusha
xchg
or
stc
sub
inc
pop
nop
les
call
add
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
ljmp
mov
or
push
je
iret
repz
test
loop
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
ds
int
inc
rorb
push
fsubr
add
push
add
or
mov
rcl
mov
pop
or
jne
push
push
cmp
lret
gs
jg
mov
cli
sbb
push
pop
mov
push
add
or
and
jmp
ds
cmp
les
jb
push
jge
or
jl
and
in
rcrl
push
mov
push
popf
and
add
jmp
scas
pop
pop
sub
in
scas
cld
push
stc
je
icebp
sub
sub
or
movsb
xchg
inc
mov
push
add
movl
mov
stc
movl
rolb
es
inc
mov
fstpt
lock
enter
add
adc
xor
push
adc
andl
inc
push
and
and
mov
fucomip
loop
nop
jbe
filds
push
cmp
mov
add
inc
hlt
scas
or
leave
daa
clc
inc
push
inc
sbb
jae
fstpt
data16
ss
or
repnz
repz
jns
je
pushl
jge
add
pop
inc
cwtl
add
stos
shrb
repz
sub
xchg
mov
dec
dec
fisttpl
cmpsb
cmp
inc
or
sub
sbb
enter
test
mov
add
sti
arpl
sbb
hlt
or
pushf
xchg
icebp
mov
pop
push
jp
inc
jl
sub
push
int3
leave
and
fldt
sti
mov
adc
mov
les
cmp
jne
inc
loop
mov
inc
inc
inc
jmp
and
or
shrl
ret
pop
xchg
or
xchg
inc
xchg
js
mul
xor
cmp
pop
pop
mov
inc
inc
sbbb
sbb
movb
adc
adc
in
mov
jmp
data16
mov
inc
or
arpl
inc
scas
dec
insb
mov
or
dec
add
push
cmp
outsl
rol
pushf
or
jo
pop
dec
sub
mov
mov
cmp
push
adc
aas
or
pop
jl
out
sub
inc
jo
adc
sub
mov
add
inc
add
xchg
into
popa
adc
adc
push
popf
cmp
add
jae
pop
shl
add
mov
scas
test
jecxz
and
jp
push
clc
xor
and
in
cmc
pop
mov
add
jno
mov
adc
cmp
sub
and
imul
jo
mov
out
mov
dec
or
sarl
in
pop
sub
mov
pop
xchg
push
push
inc
push
aas
add
cmpsb
inc
jl
pushl
cmp
clc
adc
or
bound
mov
mov
cmpsb
jmp
stos
xlat
aaa
insl
arpl
pop
clc
add
cld
cmp
jne
inc
dec
xchg
lret
or
loopne
clc
lea
sbb
and
cmp
dec
hlt
jne
or
sti
inc
imul
push
xor
cmp
cld
mov
push
jl
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
subb
and
out
push
ds
or
enter
xor
pop
cld
xor
mov
fmull
aas
jl
clc
incl
fcomps
icebp
pop
pop
push
sbb
push
mov
hlt
std
fistps
bound
test
cmp
test
push
xor
mov
loop
sub
sbb
push
out
jle
imul
inc
and
stc
sbb
idivb
mov
cmp
add
and
xor
fcmovb
rorb
adc
sub
in
out
mov
sbb
xchg
jmp
sub
mov
js
push
push
and
pushf
outsb
jmp
jge
add
add
push
adc
aaa
cmp
jbe
in
fs
add
add
sub
fisubl
xchg
sub
sbb
data16
inc
sbb
sbb
push
mov
sarb
das
push
jbe
jl
sahf
push
cltd
pop
idiv
add
mov
fcompl
push
sbb
lods
dec
jg
jl
cltd
stc
stc
jae
lea
dec
push
sbb
add
sbb
dec
adc
or
or
test
dec
mov
test
cwtl
jmp
xor
adc
cmpsb
fs
not
pop
and
jecxz
pop
lret
enter
pop
inc
sbb
std
lcall
add
push
adc
push
push
shlb
cli
sub
jg
cmp
push
sbb
add
mov
mov
pop
cmp
cmpb
jl
add
cmp
push
push
push
inc
mov
mov
jp
cmpsl
roll
pop
cld
mov
stos
mov
add
mov
sbb
jne
mov
sbb
mov
adc
leave
cmp
mov
adc
jne
popa
shll
sub
jl
or
pop
and
add
adc
sarl
mov
inc
mov
pop
mov
mov
pop
rorb
xchg
outsl
lock
dec
inc
push
mov
cwtl
or
jb
and
inc
and
out
sub
cmp
lcall
test
les
enter
pop
lods
ljmp
xor
cmp
pop
cmp
lret
push
jp
stc
mov
call
push
jle
popa
out
xchg
xchg
mov
bound
gs
pop
or
hlt
shr
sub
movsl
adc
and
jge
dec
mov
cmp
and
add
ret
jmp
in
lahf
clc
incl
dec
or
jmp
shr
lea
dec
popa
sbb
push
inc
adc
and
jne
push
test
lea
fimuls
cmp
rcrl
cli
cmpl
andl
cmp
int3
cmp
and
mov
fldcw
inc
mov
cwtl
into
sub
mov
inc
stos
sub
hlt
notl
inc
hlt
rep
ss
neg
xchg
je
enter
or
lock
inc
mov
enter
add
subl
xchg
sbb
in
push
shll
push
mov
pop
ja
mov
or
ret
mov
pusha
sbb
test
inc
push
stos
jo,pt
out
lcall
push
clc
outsl
mov
popf
pushf
pop
sub
je
push
popf
fisubs
cmp
push
mov
add
jne
push
data16
pop
mull
addl
add
int3
mov
ficoml
mov
sbb
stos
push
in
call
movl
mov
aas
add
dec
imul
lea
pop
dec
jmp
cmpb
in
shlb
bound
adc
dec
and
push
add
loop
inc
testb
je
add
int
or
test
or
jl
incl
dec
dec
inc
loopne
sbb
jne
cs
inc
mov
pop
xchg
inc
idivl
or
add
das
add
insb
adc
pop
dec
cmp
cmpl
fcmove
shlb
or
insl
outsl
aam
pop
cmp
je
movsb
jle
cmp
insb
das
add
test
loopne
dec
or
xor
mov
sbbl
pop
mov
pushl
or
jmp
pop
add
ljmp
or
mov
inc
stc
jmp
outsb
xlat
sahf
dec
push
in
pop
or
inc
les
xor
fildll
roll
or
imulb
in
sbb
and
and
inc
cmc
add
out
mov
sbb
push
add
sub
pop
or
js
jl
pushl
movsb
sbb
push
push
sub
mov
mov
loop
rclb
add
shll
or
mov
push
or
add
add
repz
sti
jg
push
shrb
aas
dec
and
push
push
ror
add
add
sbb
cmp
jle
out
and
jnp
push
clc
jno
mov
adc
sbb
std
mov
dec
add
imul
nop
add
inc
cmp
jl
loope
add
push
leave
lock
add
mov
adc
in
xor
orl
fneni(8087
jg
sbb
rolb
and
leave
sbb
lock
inc
imul
or
inc
push
fdivr
jbe
jp
dec
outsb
or
pop
inc
fcoml
mov
mov
xchg
add
adc
inc
fdivs
mov
pop
sbb
push
incl
aas
sub
in
outsl
ret
lret
call
pop
cmp
outsb
lret
mov
jo
stos
sub
inc
or
sbb
push
cmpxchg
mov
fdivrs
push
ror
in
add
mov
xor
cmp
pop
and
adc
xor
sar
jl
inc
pop
lods
cmpsl
and
inc
int3
add
pop
sbb
aam
mov
stos
ds
inc
pop
insl
iret
cmpl
adc
test
daa
call
and
jne
stos
ret
shll
pusha
sbb
mov
pop
add
je
je,pn
aaa
xor
jge
arpl
test
cmp
mov
dec
lock
or
ja
cmp
cmp
arpl
push
subb
test
test
inc
or
test
out
pushl
mov
pop
jae
jno
repnz
cmp
sbb
cmp
repz
xor
loopne
mov
test
je
fwait
popf
and
mov
fbld
adc
pushf
pop
decl
cmp
push
fdivrl
or
pushf
cmp
or
out
mov
ja
popa
xchg
je
mov
cmpsb
cmp
mov
daa
lea
sbb
mov
or
add
test
dec
mov
sub
push
add
lcall
push
xchg
pop
mov
cmp
dec
rclb
popf
jecxz
xor
fmuls
adc
iret
pop
xchg
or
enter
dec
mov
pop
dec
jne
hlt
add
in
add
fcoms
jmp
xor
pop
add
inc
cmp
sbb
adcl
add
jne
or
add
push
and
jp
fists
enter
add
inc
mov
arpl
mov
fwait
sub
pop
push
push
add
out
cmp
int3
popa
or
cld
mov
fcmovu
sbb
lret
ja
sbb
pop
je
pop
sbb
and
and
add
sbb
push
cmpsl
cmp
xchg
or
lcall
push
lods
out
inc
imul
push
jb
jmp
mulb
push
lds
xor
push
cmp
jl
pusha
andl
jp
adc
mov
xor
push
orb
push
inc
jne
lea
testb
jne
clc
push
repz
and
into
add
jge
mov
push
ljmp
pop
pop
cmpsl
adc
es
sub
nop
add
outsb
cmp
add
dec
scas
in
dec
or
test
je
push
enter
pop
cltd
add
scas
mov
daa
shrl
insl
cltd
jmp
je
or
dec
incl
sbb
shll
cmc
lods
add
in
jle
call
mov
or
or
xlat
jns
jne
mov
and
in
shll
arpl
inc
xchg
sbb
mov
xlat
pop
loopne
cmpb
cwtl
shl
jle
xchg
mov
outsb
xor
inc
add
sub
seto
cmp
subl
ljmp
fs
enter
aam
mov
sbb
nop
xchg
add
mov
jbe
cmp
jne
dec
inc
push
sub
jae
js
sbb
popl
jl
and
dec
ljmp
subb
adc
sbb
pusha
jbe
inc
xor
loopne
insl
fcmovne
aam
jl
add
dec
jg
adc
sub
xchg
mov
call
lret
pop
hlt
pusha
sbb
loope
jne
aad
lret
sbb
lock
add
sbb
insl
ret
inc
mov
or
addr16
and
sbbb
pop
inc
xchg
or
pop
test
bound
loope
out
daa
lds
popa
jl
push
ljmp
and
sbb
push
dec
jp
ss
and
dec
sbb
es
cmc
sub
xor
sub
mov
push
pop
js
push
mov
add
cmc
js
inc
dec
push
mov
add
cmp
outsb
push
inc
pop
js
and
mov
call
je
cmp
pop
repz
shll
testb
xchg
insb
testb
int3
outsl
loope
and
sbb
nop
andb
jge
push
jmp
jbe
mov
cwtl
and
icebp
jg
push
cmp
jne
cmpl
sub
pop
adc
daa
mov
rcll
sbb
out
mov
pop
repnz
push
call
call
cmp
lcall
lock
adc
fidivl
and
call
push
cmp
and
out
call
xor
jmp
mov
mov
push
jo
mov
or
mov
inc
sbb
test
pop
shlb
mov
sbb
testl
cmp
push
cld
sub
cs
out
call
push
jne
and
sbb
fldcw
and
mov
adc
mov
fucomp
xor
mov
lods
xorl
dec
mov
leave
inc
jge
loop
sbb
sub
jle
cmp
sbb
sti
cmp
sbb
add
cld
push
cmp
xchg
je
movb
mov
xorb
or
push
cmp
in
outsl
repnz
es
xor
or
fiadds
cld
mov
ficoml
bound
in
pop
arpl
frstor
add
push
mov
push
mov
scas
push
jns
call
clc
dec
ljmp
dec
push
dec
and
ss
sahf
or
push
push
movsb
pusha
jbe
pop
sub
dec
xor
pop
clc
jg
leave
dec
cmp
push
jmp
push
lock
cld
adc
cmc
sbb
inc
iret
mov
xor
sbb
mov
xor
add
jge
addr16
and
push
cltd
sbb
xor
cmp
dec
lds
xchg
and
shlb
push
or
cmp
ficoms
and
mov
jl
cmp
shlb
cmpsb
jne
sub
insl
jg
sbb
or
sbbl
inc
cwtl
rcrb
mov
or
pop
in
cs
dec
bt
sbb
das
xchg
xchg
pop
cmp
cmp
push
cmpsl
mov
push
pop
imul
or
in
jbe
lods
daa
test
in
push
out
inc
dec
ljmp
shll
add
and
jnp
cli
sub
es
pop
pusha
pop
fs
adcb
cmp
mov
jae
gs
pop
stos
push
dec
mov
xor
roll
call
push
out
mov
std
inc
js
push
jne
sub
mov
aas
push
push
pop
jl
pusha
repnz
lret
xchg
adc
sbb
lahf
inc
outsb
or
arpl
xor
mov
pop
push
jl
push
jo
adc
adc
xchg
inc
mov
inc
jne
mov
nop
push
inc
pop
pop
pop
leave
mov
jg
and
faddl
cld
push
or
push
cld
dec
or
daa
js
add
push
fwait
or
rcl
and
stc
cmp
push
or
push
testl
lods
je
inc
pop
add
enter
out
jle
mov
push
push
and
and
inc
cwtl
sub
das
cwtl
adc
ret
sbb
pop
adcb
push
sub
and
xchg
inc
les
add
mov
mov
pop
jbe
or
aaa
mov
and
jl
sub
push
cmp
lea
adc
xor
mov
mov
push
dec
cmp
mov
add
inc
mov
lock
jmp
insl
mov
mov
xchg
mov
jns
pop
push
or
pop
int3
push
or
push
or
push
or
pop
dec
push
mov
adc
aad
decl
or
push
push
pop
pop
fsubr
and
je
adc
mov
push
lret
push
mov
mov
testl
sub
cmp
loope
jb
push
or
shll
jb
xor
cmpb
inc
sbb
je
sti
add
push
mov
mov
lret
iret
and
cmp
sbb
sub
push
or
pop
pop
sbb
test
pop
mov
sbb
mov
xor
loop
jg
xor
inc
inc
dec
loop,pn
pop
inc
test
and
lds
xor
lds
aas
div
inc
test
inc
push
sub
ret
adc
in
cmp
add
or
mov
add
cmp
jb
rol
sbb
cmp
jb
mov
jge
cmp
mov
add
jb
mov
int
cmp
jae
jge
or
pop
inc
add
jbe
test
inc
mov
inc
mov
add
loopne
xchg
in
mov
test
fs
lcall
and
lea
or
mov
sub
jg
inc
and
mull
lahf
mov
in
loopne
cmpsl
lods
loope
imulb
xlat
push
mov
mov
repnz
stc
jge
stos
mov
cmpsb
test
add
cmp
out
add
or
lea
jl
sub
cmpsb
jns
jmp
push
jl
push
insb
inc
jge
pop
adc
inc
mov
mov
lahf
loope
adc
jle
cmp
sbb
mov
lock
mov
cli
inc
cmp
jle
push
adc
inc
xchg
adc
fsubs
shrl
movsb
inc
push
push
rclb
out
out
enter
xchg
add
add
sbb
adc
jge
fwait
push
aam
pushl
inc
aam
cmp
in
push
mov
mov
loop
daa
pop
or
xchg
push
out
or
adc
sub
jnp
cmp
adc
leave
mov
mov
aas
andl
jle
push
sbb
cmp
je
dec
sub
jg
clc
inc
int3
hlt
add
cmp
jo
jg
mov
sub
pop
sbbb
lea
xor
push
sahf
sub
pop
testb
ljmp
cmp
xchg
jp
lock
les
add
or
rorb
xchg
lds
or
push
dec
sub
push
inc
push
dec
xchg
adc
mov
cmpb
pop
popl
sub
jb
daa
les
mov
jbe
lock
push
push
jnp
pop
js
cmp
lds
ret
pop
add
test
pop
cmp
cmp
sub
cmp
and
add
mov
jne
sub
add
and
inc
ljmp
jne
stos
nop
or
icebp
sbb
shl
into
ret
xchg
sbb
fstpl
dec
js
fsubrl
add
cs
mov
jmp
aaa
decb
push
dec
adc
adc
push
clc
jl
daa
outsl
movdqa
push
dec
adc
push
and
fwait
out
sbb
dec
push
pop
outsl
data16
jl
inc
or
jbe
jle
cmp
cmpsl
or
ja
jo
mov
inc
mov
clc
sbb
push
jo
or
mov
sti
cmp
ret
stos
shlb
sub
and
or
dec
mov
or
jne
test
popa
add
sbb
jg,pt
call
adc
icebp
push
push
xchg
hlt
push
call
pop
sub
sub
out
in
add
sub
mov
lock
in
lock
rep
or
cmp
jne
and
adc
mov
in
aad
mov
mov
jo
sti
cli
push
push
ret
jmp
insl
sbb
dec
rep
mov
mov
and
test
xchg
hlt
stos
icebp
jo
adc
sbb
mov
push
icebp
stos
jne
sub
bswap
or
sub
jbe
aas
pop
xchg
sbb
push
or
mov
scas
push
push
dec
xor
push
inc
mov
js
pop
in
dec
mov
add
add
rorb
push
movsl
cwtl
xchg
hlt
pop
je
push
push
sti
ret
aas
inc
mov
and
test
adc
pop
imul
std
pop
pop
pop
popf
aam
sarb
clc
jns
jns
or
test
movsl
shr
std
jns
mov
int
lea
shll
daa
adc
enter
jl
cmp
cld
adc
cmp
pop
add
rol
imul
cltd
test
mov
fcoms
nop
sahf
loope
or
sub
out
dec
aaa
add
pop
rcrl
xorl
mov
iret
dec
rorl
add
test
jge
pop
jmp
jge
or
jns
mov
lock
adc
stc
sub
in
push
adc
push
in
mov
or
adc
mov
and
sbbl
add
dec
addb
sub
es
sbbl
jnp
idivl
sub
aas
push
mov
aaa
jno
je
cwtl
pop
adc
sub
sub
iret
jnp
xchg
or
push
add
sub
dec
pushf
out
call
pop
aad
fldcw
scas
cmp
dec
pop
sub
or
enter
jo
xchg
nop
aam
push
and
pop
shrb
sub
out
fidivrs
mov
jl
sub
sbb
or
push
call
add
mov
mov
push
cmp
or
stos
mov
pusha
ja
test
xor
std
sub
adc
sbb
fimull
xor
inc
dec
jne
jo
sub
sbbl
arpl
dec
jp
nop
ljmp
mov
ja
xor
cmp
pop
out
sbb
mov
adc
lahf
cmp
ja
cmp
and
sbb
push
or
inc
sbb
je
test
ds
add
push
jmp
lock
mov
and
iret
push
jns
mov
das
aad
lret
sub
icebp
xlat
mov
xchg
cs
jno
dec
ljmp
and
and
je
jl
test
pop
jmp
push
dec
daa
or
or
xor
pop
out
sbb
je
mov
shl
sub
test
add
outsb
pop
or
jle
rolb
insl
in
test
je
shr
incb
jb
test
mov
fs
add
xor
mov
lea
inc
push
imul
std
test
inc
xchg
cld
cmpsl
imul
mov
unpcklps
popa
fsubr
mov
cmp
push
xchg
mov
sub
lea
test
jbe
sbb
fisttpl
ds
jae
mov
js
adc
push
cmp
jb
inc
lea
pop
iret
out
sbb
sti
lea
sub
sar
push
push
or
ljmp
into
in
loop,pn
mov
add
xor
adc
pop
pusha
fistpll
push
inc
dec
inc
jnp
dec
sbbl
push
pop
pop
ret
andl
and
mov
insl
aam
loopne
xlat
and
adc
outsb
enter
jmp
add
sub
pop
xchg
daa
dec
mov
add
add
inc
and
packssdw
sbb
lahf
dec
sbb
xor
and
adc
icebp
je
mov
shrb
sub
mov
lods
xor
in
pop
test
pushf
or
xchg
cmp
je
jle
addb
lret
jg
push
movzwl
sub
testb
add
fwait
mov
mov
or
push
call
data16
sub
push
push
sbbl
xchg
jne
lahf
pop
jle
lods
cmp
or
pop
dec
clc
pop
in
cmpb
pop
das
or
adc
xor
jne
jno
pop
call
jne
mov
test
fadds
dec
ficompl
jne
push
pop
cmp
ja
fildll
pop
jbe
lea
insb
sbb
adc
add
addb
jae
insb
or
jb
hlt
xor
jbe
add
and
mov
dec
test
jne
sbb
push
test
pop
mov
subb
scas
sub
or
adc
sub
sbb
scas
test
cmp
cmp
subb
push
inc
jnp
push
jbe
or
cmpsb
add
and
fisubs
push
mov
pop
test
mov
adc
jb
ljmp
cmp
call
push
dec
xor
ret
adc
popa
je
or
dec
jmp
out
pop
insb
pop
and
fisubl
call
orb
imul
or
add
or
insb
fcomps
or
xor
data16
pop
inc
mov
mov
jle
sti
fbstp
loope
or
lea
stos
add
inc
adc
sub
mov
mov
inc
xor
idiv
dec
jne
lea
daa
or
leave
fwait
popa
call
mov
xchg
add
and
jo
mov
lea
scas
inc
pop
mov
mov
and
jbe
lea
out
add
add
cmp
ja
movsl
jb
or
lea
lgs
mov
inc
in
fcomp
cmp
cmp
fdivr
ficoml
cli
loopne
rcll
addr16
cmp
mov
sub
push
cmp
jnp
scas
notb
add
cmp
jbe
imul
push
mov
sbb
lods
jmp
and
je
and
xor
nop
mov
adc
jp
roll
mov
xchg
fidivs
mov
mov
or
rorb
jmp
mov
lret
add
cmpsb
cli
and
ljmp
dec
fists
cmp
jb
push
loopne
push
pusha
test
lret
mov
adc
je
cmpl
inc
loopne
ljmp
enter
or
sarb
popf
ss
and
cltd
fidivrs
mov
inc
push
inc
cld
and
adc
or
inc
inc
adc
lds
push
cmp
lock
xor
push
movl
cmp
push
popa
push
outsb
fwait
insb
jmp
inc
std
jne
rol
leave
mov
fldt
mov
mov
jmp
ja
clc
call
loope
loopne
sub
mov
stos
aam
mov
testb
mov
fadds
das
and
mov
mov
mov
mov
xor
cmp
mov
je
fs
ljmp
out
push
and
std
bound
daa
xor
pop
cmc
mov
in
inc
jae
cmp
lock
movsb
js
movsb
iret
roll
out
mov
test
jae
pop
lods
rcll
leave
inc
mov
rorb
shr
mov
jmp
push
into
sub
std
std
xchg
outsb
add
jmp
inc
subb
mov
inc
cmp
jbe
ljmp
push
adc
movb
add
jb
mov
xor
inc
adc
jo
inc
shrl
out
mov
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
ja
inc
daa
cmp
add
shll
in
insl
mov
jo
adc
mov
or
inc
dec
jne
fisubrl
movsb
mov
add
cwtl
gs
jnp
inc
mov
jmp
cmp
or
insb
jp
icebp
adc
lock
loopne
adc
inc
add
pop
mov
mov
loope
jp
loop
mov
test
dec
and
ret
sub
sahf
loop
cli
lahf
sbb
sti
rep
andl
pop
jno
pop
nopl
cmp
leave
inc
push
adc
cmpsb
cmp
push
cmp
mov
jo
insb
ljmp
xor
std
and
sbb
push
or
sbb
loope
call
enter
clc
jle
lret
or
inc
jmp
xor
inc
sbb
decb
mov
add
sbb
ss
out
add
inc
jo
insl
adc
pop
sbb
sub
in
sub
xor
cmp
lret
push
rcll
clc
lret
shll
fstpt
in
popa
adc
and
in
pop
movl
out
push
sbb
push
cli
outsl
cmp
dec
jnp
push
cmp
jne
sbb
pop
adc
mov
cmp
adc
imul
sbb
mov
sbb
sub
lret
xchg
int3
lret
sub
and
rcrb
cwtl
shlb
outsb
lea
aas
test
pusha
mov
cwtl
mov
jne
push
xor
push
cmpsb
push
push
cmpl
add
fs
pop
insb
add
adc
add
decl
jne
sbb
out
xor
or
xchg
mov
frstor
or
mov
lea
adc
push
cmp
mov
aaa
cmpl
lea
push
pop
ret
shld
repz
movsl
sub
or
loopne
xor
adc
sub
aam
dec
xor
cmp
je
push
mov
dec
pop
test
loop
push
ret
fiadds
in
cmp
test
dec
hlt
jbe
outsb
inc
mov
enter
ret
es
dec
jle
sbb
jo
dec
pop
xor
loope
lea
loopne
dec
nop
mov
and
roll
jnp
lock
arpl
sar
jge
adc
dec
aad
iret
mov
addb
xchg
jge
mov
push
mov
dec
mov
sub
shll
enter
clc
fimull
loopne
pop
cltd
cmp
inc
nop
and
bound
xor
and
pop
add
push
stos
cmpsl
lahf
push
imul
lods
pop
or
push
insb
xchg
mov
cmp
je
out
jl
push
je
mov
push
push
xchg
cmpsb
xor
test
dec
xor
aas
pop
pushf
inc
push
sti
pop
mov
pusha
push
pop
push
cmp
cmpsl
pop
or
aas
add
fistpl
dec
jmp
sub
push
mov
push
mov
jnp
or
jns
mov
cmp
mov
push
adc
add
sub
mov
adc
sub
sub
fsubr
push
and
and
aaa
loopne
push
loop
xor
dec
ds
hlt
rorb
add
pop
pop
fwait
std
out
shlb
mov
mov
jmp
adc
outsl
jo
repnz
fstl
mov
popf
adc
adc
mov
int
rclb
sub
faddl
fcomps
push
fimuls
dec
xchg
xor
mov
jne
push
mov
jge
aaa
xor
add
xor
ds
sbb
dec
insb
jl
imul
rclb
or
jl
cmp
jg
inc
test
xor
les
movb
xor
jne
imul
in
pop
inc
jo
jge
aas
sbb
sub
sub
in
mov
movsbl
fadds
loopne
ja
pop
adc
aas
lods
or
xor
inc
jne
xor
and
adc
int
stos
mov
add
adc
cli
jl
jns
dec
or
inc
inc
clc
in
fwait
hlt
or
push
cltd
pop
idiv
pop
pop
pop
lea
mov
or
mov
outsb
das
sub
mov
sub
leave
mov
jg
pop
mov
inc
xor
jmp
ljmp
rorb
lock
cltd
es
imul
lea
orl
dec
js
sub
add
decl
push
lea
jmp
add
loop
and
push
and
or
jo
repz
push
or
inc
sub
leave
roll
jmp
icebp
xchg
sbb
xor
jecxz
adc
jmp
dec
and
and
leave
call
push
push
and
add
jecxz
inc
or
lods
cmpsl
pop
out
cs
fildll
or
xor
cmp
cld
popf
add
ltr
mov
or
sbb
sub
incl
mov
sub
push
lock
hlt
aam
test
fbstp
inc
add
jbe
cld
add
adc
fucomp
test
mov
xor
std
xchg
mov
or
lret
in
pminsw
loopne
testb
adc
out
push
jmp
pop
fucomi
cmp
push
push
push
push
loop
xor
enter
mov
repnz
dec
dec
xchg
mov
nop
xor
dec
mov
negl
sbb
pushf
popf
push
outsl
cli
jmp
cmp
sahf
pop
push
pop
mov
or
jge
push
pop
mov
add
or
jecxz
movsb
ja
jnp
daa
lds
pop
loop
push
das
stos
dec
mov
mov
jle
jge
cmp
jl
cmp
jg
or
mov
push
jle
jge
adc
insl
mov
mov
repnz
jle
aad
push
daa
imul
jle
insb
sub
or
jmp
jne
es
push
ret
mov
test
sbb
popa
inc
add
push
sub
and
sub
adc
cmp
or
cmp
add
shll
xor
sub
xchg
jo
or
lea
xor
je
subl
xchg
xor
push
cmp
pushf
movsl
xor
test
or
push
scas
sbb
arpl
je
mov
ret
insl
cmpb
jg
jl
inc
push
bnd
jle
push
pop
xor
jg
or
fbstp
es
xchg
ja
push
push
push
push
push
jmp
add
lea
scas
inc
adc
push
sub
je
and
inc
add
ficoms
lea
jmp
out
push
lea
shlb
sbb
sbb
push
mov
and
xor
sub
mov
add
jb
inc
mov
or
loopne
or
mov
mov
dec
or
inc
mov
ja
scas
outsl
and
mov
sti
popa
popa
push
jne
lods
xor
jns
lods
and
xchg
or
ja
push
inc
xorl
shlb
adc
cltd
xor
int3
outsl
imul
mov
filds
jge
ss
sbb
jl
sbb
std
psubusw
dec
adc
add
test
ret
cs
xor
xor
add
cltd
cld
test
push
stc
cmp
ljmp
icebp
fnstenv
inc
push
in
push
dec
inc
inc
or
sub
pop
and
dec
cmp
add
cmp
fstp
mov
or
add
or
pop
sarb
sti
or
mov
pop
inc
jge
push
push
push
add
scas
mov
sbb
sarb
loopne
fdiv
fiaddl
mov
ss
xlat
or
sbb
jne
sbb
jg
mov
cmp
inc
push
shr
inc
push
xor
jmp
std
or
rcr
shr
rcr
or
lods
lock
jp
jle
xor
cmp
or
cmp
int
dec
cmpsb
dec
cwtl
out
dec
pop
fsub
addl
sbb
push
dec
xchg
lods
bound
iret
fstl
mov
rol
sahf
sbb
pop
pop
add
neg
push
or
ret
jns
outsb
pop
add
mov
popa
enter
sti
sbb
push
push
jnp
f2xm1
jbe
sub
adc
push
or
lcall
pop
outsb
aas
mov
ret
cmpl
or
dec
ret
mov
rol
fcompl
adc
adc
popa
jb
adc
pop
cs
xchg
ror
repz
daa
xchg
or
test
sbb
and
sub
and
or
and
add
data16
imul
lock
cmp
push
xchg
xchg
out
or
in
pop
setne
sub
jmp
ja
pop
hlt
inc
neg
pop
mov
sub
xor
adc
idiv
rorb
xchg
mov
adc
out
mov
push
popf
cmp
lock
int3
push
imul
push
mov
ds
push
test
push
jl
pusha
jb
cmc
push
and
addps
xchg
ja
clc
into
push
test
inc
rorl
in
fistl
fdivl
push
mov
repz
add
cmp
cs
cmovb
pop
mov
mov
cld
adc
repnz
hlt
pop
adc
hlt
scas
or
jo
leave
fnstenv
sbb
fs
xor
cmp
xor
lds
inc
adc
sub
fwait
test
lea
fdivrs
xchg
movsb
push
in
sub
fdiv
ja
shrb
in
sub
push
cmp
jb
mov
sti
pop
mov
je
sbb
ss
jp
aam
lods
std
mov
call
test
mov
stc
in
cmp
cmpsb
cmpsb
ret
fcompl
ret
mov
lahf
push
fcomip
mov
push
push
push
adc
sub
lds
arpl
xchg
or
dec
push
test
cmp
addl
mov
sbb
stos
mov
in
in
jbe
outsl
push
sbb
pop
or
gs
cmp
adc
xor
mov
pop
or
cs
xchg
jb
sbb
ffree
inc
jg
jae
jno
push
cltd
inc
push
test
cmpsb
or
jo
xor
sbb
sti
jecxz
cmp
cld
adc
lock
fdivrs
mov
mov
scas
adc
leave
mov
add
add
or
mov
movsb
mov
or
lds
enter
jbe
sbb
push
mov
mov
mov
enter
addb
jno
repnz
jb
push
clc
adcl
xor
pop
popf
imulb
jbe
dec
push
rclb
inc
fiaddl
fldenv
push
mov
mov
and
sti
in
xchg
sti
addl
lahf
stos
inc
inc
sub
lods
push
adc
xor
testl
push
add
test
push
leave
das
mov
call
orl
icebp
inc
mov
mov
imul
xchg
inc
in
inc
push
out
imul
ret
add
lcall
fs
sahf
mov
jbe
test
sub
test
shrb
cmp
dec
lea
cwtl
mov
push
les
call
fldt
or
adc
add
cmp
jge
imul
mov
andl
cmp
insl
or
das
mov
and
fs
std
fmull
nop
pop
orl
and
sub
sbbb
popl
push
cmp
mov
dec
jbe
dec
rcrl
lock
mov
leave
push
sbb
pusha
mov
dec
bound
addl
xchg
ljmp
and
mov
mov
add
and
and
xor
adc
orb
stc
push
jno
ret
call
push
fmull
cmp
mov
enter
mov
mov
xor
in
loopne
sbb
inc
in
cmp
jbe
sbb
loopne
clc
ljmp
pusha
imul
cltd
push
test
dec
adcl
popa
jmp
popa
inc
call
je
into
push
pop
xor
push
ficoms
sbb
push
add
movl
xchg
out
adc
lahf
lods
and
xchg
inc
daa
mov
outsb
jae
xor
ret
dec
decl
and
add
sbb
sahf
sub
mov
adc
xor
movl
add
orl
mov
aam
cmpl
pusha
xor
and
or
cmp
pop
cld
or
mov
aaa
insb
jb
push
sahf
ret
push
inc
mov
roll
loop
push
inc
incl
mov
rcr
mov
cmp
je
or
jne
xchg
add
inc
lds
sbb
mov
jmp
lcall
dec
jmp
xor
inc
or
xorb
xchg
inc
addl
inc
inc
pop
push
and
sub
xchg
mov
sarb
cmpb
or
data16
lock
push
mov
xchg
jmp
pop
loopne
rcl
pop
sbb
icebp
xchg
xchg
arpl
inc
or
je
shr
sahf
loop
movsbl
pop
and
or
or
mov
out
cwtl
into
inc
add
xor
cmp
leave
pop
add
adc
cli
pop
push
orl
inc
stc
add
fimull
push
dec
aaa
lcall
dec
inc
dec
mov
test
test
cmp
cmp
mov
jge
push
lea
incb
stos
cmp
aam
clc
pop
hlt
stc
pushl
dec
shl
lea
cmp
jb
jne
add
loope
fs
jge
mov
push
orl
push
ljmp
push
add
jle
pop
pusha
inc
cmpsl
jno
ljmp
jne
cmp
cmp
and
xchg
jo
xlat
sub
outsl
ja
mov
jmp
subl
rcl
sub
std
jg
mov
jne
inc
test
je
inc
inc
sub
sbb
repnz
add
push
sar
inc
push
push
adc
push
aam
jb
sub
cmp
jnp
inc
cmpsb
dec
adc
sub
mov
and
cld
pushf
pusha
push
xchg
sbb
push
addb
or
cmp
inc
aam
or
sub
out
int
inc
adc
pop
jl
insl
sub
shll
mov
pushf
incl
mov
push
push
adc
push
adc
inc
dec
shrb
dec
pop
jl
jle
clc
mov
or
inc
mov
xor
mov
rep
or
or
or
push
and
and
shlb
add
jge
inc
jo
adc
inc
shlb
test
cmp
es
into
add
jl
mov
add
or
sbb
push
aas
xor
rcrb
pop
pop
repnz
lea
xadd
and
adc
jmp
ret
mov
cmp
cmpsl
jno
sahf
mov
rolb
inc
insl
call
int
or
je
mov
fmull
add
add
add
cmc
and
repnz
add
and
shl
add
mov
mov
push
push
subps
add
outsl
jns
fiaddl
outsb
push
inc
adcl
jl
push
mov
xorl
sar
int
in
push
orb
jmp
xchg
adcl
js
testb
dec
mov
xchg
or
inc
lcall
out
and
aas
push
aaa
xor
ds
loop
add
jmp
lret
or
cmp
mov
movl
add
add
mov
jmp
test
shrl
pop
notb
mov
mov
mov
call
push
jp
jae
mov
jmp
mov
icebp
testb
inc
and
pusha
test
popf
or
test
outsl
push
lods
and
les
outsb
inc
mov
mov
inc
ja
lahf
testb
insb
push
lea
loopne
or
pop
cld
dec
cmp
jge
stos
xchg
add
bound
pop
or
ret
push
shll
and
test
xor
aaa
pop
gs
or
xorb
pop
cmpsb
add
inc
sbb
sub
or
push
call
jbe
popa
sbb
sbbb
xor
xchg
mov
or
xlat
adc
xlat
sub
push
scas
lret
lahf
jne
jg
mov
ljmp
js
push
add
push
cmp
cmp
adc
mov
leave
into
ja
xor
sub
and
mov
xchg
jge
sub
push
inc
and
pop
or
sub
pop
or
adc
rorl
jl
jo
dec
or
cmp
lock
mov
ret
cmp
pop
adc
lret
test
mov
aas
push
push
mov
hlt
out
mov
test
je
dec
jmp
hlt
not
mov
frstor
or
lcall
cmp
inc
pop
dec
lock
cmp
dec
xor
and
out
or
jmp
test
adc
fsts
mov
mov
not
push
rcrl
arpl
pop
mov
out
adc
sbb
lret
cmp
orb
lret
sbb
dec
sub
out
popl
insb
mov
fs
mov
and
movl
mov
mov
pusha
or
xlat
push
push
adc
sbb
jb
fsubrl
imul
push
test
mov
push
mov
cmpsl
test
xchg
pop
dec
ret
lea
sub
dec
inc
cld
sub
mov
xlat
fwait
xchg
jmp
mov
push
xchg
pop
lods
push
hlt
insl
xor
pusha
inc
lods
sarb
ds
mov
cmc
insb
ds
push
mov
push
std
movl
and
shl
push
arpl
add
xchg
testb
push
sbb
push
mov
adc
clc
xchg
out
fcoms
shrl
scas
pop
push
cmp
cltd
mov
testl
inc
add
cmpsb
aas
out
add
jns
xchg
pop
aam
xchg
inc
test
rolb
xor
call
test
xchg
bound
jl
icebp
cmp
mov
sbb
jno,pt
mov
or
insb
loope
imul
mov
pop
push
imul
cs
in
mov
jmp
pusha
sbb
add
outsl
inc
sub
add
dec
sub
adc
sub
fstl
mov
pop
arpl
ljmp
cmp
pop
push
out
dec
and
xchg
sub
inc
cld
inc
push
mov
push
lret
lods
or
adc
add
mov
ret
xchg
jae
xor
nop
sub
je
and
xor
jne
mov
fs
push
lods
cmp
or
xlat
inc
mov
push
adc
dec
add
addb
test
pop
inc
add
mov
enter
call
push
xor
xchg
cltd
repz
mov
inc
stc
cmp
xor
jle
inc
pop
shl
pop
cmp
add
cmc
pop
add
inc
cmp
sarl
cmpb
mov
jbe
test
or
insl
adc
int
inc
aam
jno
push
jp
mov
test
jbe
and
lea
or
fld
movsb
int3
pushl
inc
add
cmp
jb
in
enter
lahf
lock
or
and
inc
inc
andl
pop
mov
cs
xchg
hlt
mov
sarl
dec
sub
aaa
mov
shr
not
ljmp
jb
orb
xchg
add
lahf
imul
or
jle
sar
adc
push
push
push
push
push
pop
xchg
pop
or
push
xor
pop
sub
sbb
xchg
cli
in
dec
jmp
cs
pop
mov
or
pop
dec
push
fisttpll
inc
gs
movsl
ja
mov
popl
popf
divl
pop
or
ds
negl
pushl
dec
movups
jo
push
pop
dec
inc
and
sbb
frndint
add
sub
mov
loop
mov
cmp
sbb
push
rcrl
ljmp
rorl
inc
cmp
xor
out
pop
jp
pop
pop
neg
xchg
bswap
insb
and
and
push
sbb
dec
int3
pusha
sbb
imul
jmp
push
adc
or
push
jne
call
inc
imul
sub
je
inc
inc
cld
shr
mov
imul
inc
xchg
std
mov
and
dec
or
shl
sub
stos
shll
push
lea
adc
cld
add
push
cld
rclb
mov
fcomip
pop
or
ret
sar
dec
sub
mov
sarb
pop
mov
inc
mov
subb
jae
lret
lea
shll
pop
mov
inc
decb
jne
and
jmp
lea
xor
xchg
js
mov
add
sub
rclb
std
cltd
ds
or
mov
pusha
sbb
pop
clc
and
pop
push
sbb
into
xchg
or
dec
lea
inc
and
sti
add
mov
dec
pop
addr16
jbe
mov
mov
imul
pop
add
cmp
je
inc
jno
jno
jg
fnstcw
mov
shr
not
and
push
mov
jmp
lea
addr16
das
mov
xor
push
addb
add
push
xchg
cltd
or
bound
or
addr16
cld
negb
lock
mov
pop
or
cmpsb
sarb
mov
rcr
loope
mov
inc
mov
mov
push
js
loope
xchg
lods
push
or
pop
sbb
inc
dec
or
jmp
dec
adc
push
mov
mov
xchg
mov
sbb
call
decl
int
sbb
mov
dec
rorb
std
shl
add
scas
jp
adc
sti
divb
or
sbb
pop
adc
andl
inc
adc
dec
adc
add
and
js
gs
out
push
xchg
in
pop
mov
lret
mov
sbb
adc
aam
fidivrs
in
push
lea
mov
cmc
jns
ret
push
cmp
inc
jbe
insl
or
mov
jecxz
scas
xchg
popf
lret
add
lock
mov
pushf
lock
rclb
adc
add
push
outsl
mov
xchg
inc
mov
addl
xor
les
or
fisubrl
mov
mov
push
and
adc
push
sub
sbb
pushf
mov
fwait
orl
ds
incl
adc
andb
pop
test
adc
sbb
je
movb
inc
in
outsl
adc
mov
incb
pop
mov
add
inc
push
push
or
dec
jne
cmp
adc
test
pop
or
or
jns
pop
or
xchg
add
cmp
ja
sub
adc
or
inc
cmpl
in
in
lea
push
out
mov
inc
cld
lock
call
xor
iret
dec
jne
icebp
add
mov
fstl
dec
jb
adc
fs
inc
call
mov
inc
mov
ljmp
push
mov
jne
or
lds
ljmp
sarl
adc
jne
stc
add
movsb
xlat
sub
pop
shr
popf
rolb
sub
dec
cld
and
mov
sarb
icebp
stos
mov
and
jbe
jno
out
jle
int3
inc
jp
xlat
insl
fstps
cmp
hlt
sar
shlb
push
mov
int3
push
pop
movsb
sub
and
pop
inc
sub
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
add
push
jns
into
add
mov
rclb
incl
mov
cmpsl
cmc
add
fstpl
scas
dec
jo
sbb
jbe
pop
jg
or
dec
mov
pop
pop
xor
cmpsl
imul
nop
dec
rcrl
iret
jmp
data16
and
js
mov
imul
push
xor
add
push
pusha
out
cld
mov
cmp
sub
pop
out
adc
jmp
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
ret
cmp
movsb
pop
testb
int3
sbb
ret
orl
dec
mov
cmp
je
fisttps
or
dec
push
fnop
cmp
fnstenv
dec
shrl
mov
loope
jo
mov
or
mov
mov
faddl
imul
dec
in
jb
into
mov
cmp
jns
rclb
mov
cmpsb
add
add
push
cmpb
and
out
push
mov
and
push
lock
dec
push
push
push
aam
mov
out
adc
jmp
in
add
popf
push
imulb
mov
push
nop
cmp
and
in
sub
or
cmp
jb
push
jne
mov
sbb
jne
jmp
lcall
js
mov
xor
aaa
arpl
adc
sub
fsubs
pop
sbb
add
pop
into
jb
add
add
faddl
mov
cmp
je
mov
push
mov
cmp
ret
ja
jl
and
inc
cmp
pop
iret
mov
andb
cwtl
jno
mov
rclb
jp
mov
out
repz
mov
jle
mov
adc
outsb
mov
sahf
jns
inc
test
inc
push
pushf
mov
sub
mov
sbb
jp
inc
push
test
jo
push
xchg
sbb
iret
push
dec
cmp
in
and
mov
decb
jne
cwtl
popf
pop
jo
repnz
jmp
jp
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
inc
call
push
or
das
pop
pusha
mov
sub
jge
dec
pop
inc
mov
push
pop
add
rorl
cmp
or
add
adc
inc
or
xchg
jge
push
out
or
sub
stos
incb
adc
lock
popf
aad
shrl
mov
lea
jo
sarb
sub
cmp
cmp
pop
add
and
inc
add
cmp
test
dec
adc
stos
ret
pop
rorb
filds
push
sbb
cmp
adc
aaa
sub
cmp
pop
inc
or
loopne
sbb
es
mov
cltd
loopne
jo
or
add
add
pop
jne
cmp
aaa
loope
repz
adc
pop
imul
aas
cmc
add
je
jae
mov
mov
sbb
jae
rolb
cltd
movb
shll
in
pop
mov
adcl
lahf
popf
cwtl
aam
push
js
sub
testb
jae
loope
or
insl
xchg
daa
cmp
mov
jb
xor
xchg
sbb
or
orl
das
sti
add
movsb
ss
jb
and
dec
out
mov
sub
and
xchg
adc
mov
shlb
das
fstpl
jne
push
sub
sub
pop
lds
inc
lods
xor
and
loopne
sub
xor
add
mov
popf
jbe
aas
stos
mov
mov
jle
inc
push
xor
push
dec
loope
sbb
push
add
stos
or
cmp
leave
adc
add
imul
sub
sbb
or
ret
loopne
popf
mov
jmp
cmp
push
xchg
test
adc
adc
cmp
or
out
push
movsb
adc
fistl
or
pop
pop
test
fxch
pop
dec
push
rolb
addb
fisttpll
mov
adc
cli
sub
pusha
mov
cmp
push
sbb
adc
push
push
adc
push
xchg
xor
mov
inc
jmp
pop
dec
pop
push
out
movl
dec
adc
dec
cmp
xchg
mov
pop
inc
cmp
jne
or
inc
arpl
jge
inc
jecxz
jne
out
pop
je
lods
mov
sbb
out
test
xchg
icebp
clts
rolb
xor
repz
sub
adc
pusha
movsl
clts
pop
add
adc
test
xor
jmp
scas
clc
jle
push
push
pop
div
mov
aas
or
sub
adc
ja
mov
or
pop
insb
cmpsb
sbb
test
push
or
repz
cmp
inc
push
jo
ret
push
fiadds
add
push
movsl
je
hlt
mov
sbb
xor
xlat
pop
jecxz
lret
daa
and
add
adc
sbb
inc
or
je
xchg
sbb
mov
nop
add
cmpsl
adc
cmp
xchg
dec
subb
jb
inc
jge
cmp
mov
hlt
cmp
je
movl
sbb
sbb
or
inc
xchg
inc
xor
movl
add
jmp
adc
and
sbb
scas
bound
pop
jbe
pusha
sub
adc
xchg
cmpsb
loop
cmp
or
pusha
push
sub
or
pusha
lods
or
fcoml
aam
in
sti
outsb
cmp
fstpt
cmp
ljmp
lock
sbb
aam
sub
push
sub
dec
pop
gs
mov
sarl
push
mov
test
ja
enter
sti
je
inc
enter
pop
xbegin
ret
dec
in
lds
sbb
hlt
jecxz
push
mov
lcall
push
lock
and
sub
mov
testl
mulb
jl
ljmp
jecxz
cltd
dec
lock
adc
incl
clc
orl
sbb
lea
push
cmpsb
adc
add
adc
mov
fstpt
push
push
mov
push
shll
aad
mov
int3
cmp
aad
xor
aam
push
xlat
push
rorb
movsb
int3
jl
int
aad
adc
jg
cmp
repnz
add
add
add
push
cltd
in
pop
sbb
adc
pop
cltd
in
sbb
push
push
push
pop
sbb
ja
ja
insb
das
movsb
divb
aas
push
push
out
inc
cwtl
ret
push
in
jnp
adc
movb
sbb
add
jmp
sbb
pop
sbb
mov
adc
and
mov
jbe
faddl
adc
cltd
inc
sbb
pop
cmp
and
and
sbb
and
cmp
push
in
repz
and
cmp
fwait
pop
dec
sbb
fldt
sub
leave
leave
dec
or
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
xor
daa
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
adc
cltd
fs
dec
mov
xchg
cwtl
pushf
movsb
dec
es
mov
jecxz
mov
jge
dec
xor
inc
add
and
add
push
push
stc
ss
je
pop
and
fwait
nop
jle,pn
or
pop
adc
adc
dec
dec
pusha
adc
sbb
test
sbb
insb
xor
rorb
and
cmpsb
push
movsb
test
andb
insb
pop
ret
adc
sub
jne
js
dec
inc
es
ret
cmp
les
sbb
dec
jne
out
jb
xor
jle
sbb
xchg
push
or
add
inc
fsubs
add
scas
ret
adcb
stos
add
jmp
rep
cmpsb
dec
inc
jp,pn
push
xor
dec
mov
dec
leave
and
mov
fwait
mov
jne
aad
out
stos
rcrb
aad
sahf
push
jmp
imul
adc
roll
or
add
jne
mov
aam
arpl
jmp
sbb
imul
outsb
out
jns
rcr
incb
fmull
push
mov
pop
cmp
insb
adc
imul
inc
xor
mov
icebp
or
lea
repz
mov
jns
xor
loopne
dec
add
shrb
push
pusha
jmp
push
out
cmp
jl
mov
ret
ret
je
xchg
and
fwait
jbe
sbb
cmpb
xor
cmp
jl
js
xor
mov
xchg
rorl
inc
push
push
lea
jmp
fs
ljmp
sub
fimuls
jb
add
fdivr
sub
outsb
jae
insb
imul
xor
cmp
in
pop
or
add
jo
divb
jno
or
and
xchg
jb
out
jne
js
dec
or
add
das
aaa
pushl
dec
xchg
xor
cli
xor
sti
or
je
mov
out
mov
shll
fs
add
sbb
lret
mov
cmpl
outsl
inc
mov
pusha
pushl
mov
mov
int
mov
mov
xchg
jle
sub
je
or
je
dec
je
aaa
jnp
and
xchg
in
ja
xor
mov
mov
cmp
adcl
pop
pop
xchg
push
jne
movsb
stos
xchg
inc
and
in
or
cld
scas
xchg
mov
bound
and
fildll
mov
mov
aam
inc
pusha
jne,pn
je
mov
movl
xchg
je
fcoml
adc
ficompl
lret
jge
adc
pop
xchg
mov
adc
fsubr
fisttpl
add
xchg
outsl
adc
push
dec
add
insb
mov
push
int3
addb
fcoml
adc
xor
sub
adc
fs
jno
stos
sub
inc
add
sbb
push
cmp
or
and
jmp
rorb
nop
add
pop
sbbl
out
fdivs
inc
insl
mov
pop
dec
and
or
xchg
sub
ret
dec
jns
sub
push
adc
push
jmp
cmp
mov
lea
sub
jmp
pop
pop
mov
push
aam
push
sarl
pusha
in
scas
xor
or
cmp
enter
and
push
daa
sub
cmc
add
adc
sbb
or
xchg
cmpsb
or
add
push
notb
push
jmp
orl
pop
shlb
scas
xor
and
ds
adc
pop
cmp
jbe
imul
repnz
das
mov
lea
adc
inc
scas
sbb
jmp
jl
lods
mov
sbbb
mov
cld
jmp
or
scas
aad
adc
test
xor
mov
fidivrl
rcll
sbb
std
mov
and
mov
xchg
rolb
stos
and
lea
ljmp
std
pop
xor
jbe
push
gs
movsl
pop
les
in
nop
ss
or
jae
push
cwtl
lods
adc
icebp
mov
sbb
into
or
cld
ja
orl
dec
out
cmp
mov
aad
es
cmp
outsb
popa
addr16
or
and
push
aas
shll
pop
mov
dec
cmp
out
xor
test
add
xlat
mov
test
mov
pop
cwtl
and
jl
or
int3
icebp
dec
push
xor
aad
sti
mov
fdivrl
movsb
mov
sbb
and
add
cli
xchg
pop
lods
imul
pop
adc
and
cmp
add
dec
loope
or
push
scas
xor
sti
inc
daa
mov
dec
push
aaa
out
jo
mov
ret
enter
lahf
pushf
jnp
aas
xor
pushf
mov
dec
es
hlt
push
sbb
adc
jno
add
loopne
adc
adc
jne
pop
popa
fildl
or
adc
fwait
ljmp
push
xchg
push
mov
ds
xchg
sub
mov
js
insb
jae
fsubr
ss
pop
ja
dec
je
nop
or
dec
push
jmp
adc
lds
mov
push
cmp
sbb
int
in
jo
pop
and
push
adc
fstpl
cmc
inc
arpl
cmp
jbe
mov
ds
pushf
or
pop
push
icebp
mov
dec
popf
out
pop
jmp
fidivs
and
test
cmp
and
adc
mov
pusha
sbb
sbb
or
or
xor
or
insl
mov
push
pop
xchg
imul
fsubrl
mov
jo
add
cs
jne
imul
or
and
pop
pusha
fs
out
pop
xchg
add
in
dec
and
inc
call
and
test
cmp
inc
dec
jle
cmp
sub
inc
ss
je
imul
inc
xchg
mov
ret
adc
jg
cwtl
add
negb
fmuls
test
into
in
push
push
popf
divl
pop
jg
int3
sbb
outsb
sbb
inc
adc
mov
cmpsb
jmp
ficompl
jae
inc
add
add
inc
divb
pushf
mov
sub
and
pop
imul
pop
adc
add
outsb
mov
shlb
push
adc
or
enter
mov
leave
or
out
inc
inc
mov
pusha
xchg
jecxz
or
jno
adcl
outsb
out
pop
adc
aad
shlb
cs
mov
in
rorb
cmp
rorb
je
mov
push
or
jne
stc
pop
add
jle
mov
xchg
xchg
repnz
sub
push
sahf
mov
lock
rorb
outsb
arpl
dec
lock
mov
inc
xchg
or
pop
inc
rclb
mov
stos
jg
adc
mov
daa
sbb
fcoml
add
or
addr16
dec
decb
ror
sub
sbb
push
lods
push
mov
cmpsb
jle
subl
jl
pop
sbb
push
jle
inc
ret
adc
xchg
aas
xor
decb
cld
inc
inc
and
sbb
cmp
cmp
jne
sub
add
mov
xchg
into
mov
cmp
sub
add
mov
pop
cmp
je
cmp
lret
sub
adc
or
adc
inc
dec
add
add
lds
sbb
aaa
add
test
sahf
movsbl
sub
jmp
outsl
and
sbb
sarl
lret
sub
cmp
cs
adc
add
cmp
jae
or
fldt
enter
cmp
jbe
test
and
outsl
adc
add
subb
sbb
add
adc
mov
sar
orl
xor
sbb
lcall
pop
xchg
sbb
aam
inc
xor
mov
jg
ljmp
into
jbe
jns
lcallw
hlt
mov
test
push
int
add
add
jle
push
or
add
add
aad
inc
push
xchg
adc
jae
arpl
mov
shrb
adc
jnp
iret
dec
and
mov
sub
or
sub
les
push
push
es
push
push
adc
add
cmc
xchg
push
cld
and
mov
dec
pushl
dec
data16
dec
popf
cmp
dec
test
or
je
lods
fisubrl
jne
rol
clc
mov
and
inc
jmp
push
lock
or
xlat
iret
or
adc
push
iret
sbb
xchg
imul
xor
push
bound
pop
imul
pop
scas
fimull
cmpsb
and
xchg
jmp
push
sbb
daa
adc
je
ret
sarl
mov
fcoms
cltd
jg
fdivr
adc
adc
mov
mov
movb
je
sarl
or
pop
sub
push
adc
ja
add
xor
add
test
push
in
push
push
sbb
popa
shr
jno
pushf
outsl
pop
pop
mov
adc
dec
stc
cli
and
roll
test
push
bound
leave
je
cli
push
mov
inc
mov
mov
into
es
add
je
mov
jg
decl
push
cmp
ja
add
cmp
adc
cmp
jne
mov
adc
mov
mov
adc
leave
icebp
out
adc
add
lea
xor
xchg
hlt
xorb
xor
clc
stc
cli
or
nop
ret
clc
stc
inc
into
dec
mov
int
add
rolb
sbb
jmp
repnz
cmp
mov
clc
cli
jmp
dec
cmpb
inc
cmp
dec
fmull
pop
mov
xchg
or
fiaddl
adc
pop
pop
fdivl
cmp
int
mov
sahf
rcr
inc
fsubl
loopne
add
push
jge
jle
push
jg
xchg
mov
sbb
xlat
jle
add
pusha
mov
push
daa
mov
sub
adc
int
pop
lds
mov
and
stc
stc
add
push
icebp
xor
enter
mov
dec
push
hlt
dec
sbb
mov
mull
jb
jne
inc
mov
dec
insl
adc
lcall
jmp
push
push
lock
sbb
or
pop
dec
mov
jmp
stos
fs
je
mov
je
mov
cmp
jb
cmp
jbe
inc
inc
add
jmp
pop
sbb
mov
push
mov
int
adc
ljmpw
shlb
loope
into
sbb
adc
push
or
mov
clc
push
dec
aam
test
and
mov
jl
or
inc
pop
repz
mov
pop
jne
inc
jb
shlb
jno
lods
js
orl
in
mov
daa
idivl
sbb
mov
out
or
ss
leave
out
push
aad
pushl
rol
pop
dec
push
xor
mov
push
mov
xchg
pushf
and
sbb
xchg
jle
sbb
xor
sbb
inc
test
dec
adc
lret
cmp
adc
push
hlt
mov
dec
daa
fcoms
fisttpl
lret
in
inc
sbb
clc
sbb
jg
push
adcl
xorl
push
pop
or
adc
cltd
enter
inc
fisubl
or
push
dec
and
fwait
jg
adc
sub
or
sarl
cld
cmp
inc
das
push
xchg
push
call
push
js
mov
jle
cs
push
pop
push
push
ret
pusha
add
fisttpl
push
xlat
xchg
fisubrs
mov
aaa
add
mov
or
insl
xchg
sub
shrl
pushf
ss
pop
jmp
fsts
shll
jns
rorb
pop
jne
mov
cmp
push
cld
add
adc
dec
sub
push
jmp
xor
negb
xchg
jne
push
sub
dec
pop
pop
adc
and
sbb
or
outsb
jle
bound
sbb
and
push
sbb
sub
lret
jge
push
inc
pop
sbb
pop
add
clc
pop
or
mov
or
pop
mov
test
and
pusha
jns
cmp
repz
dec
rorl
push
push
dec
cmc
incb
cwtl
jecxz
test
xor
je
mov
jg
xor
int3
ret
call
mov
and
inc
mov
dec
cmp
test
jl
jb
lea
ss
adc
or
int3
fldl
ret
mov
fldt
dec
mov
loop
lods
mov
mov
stos
push
add
push
jmp
dec
loop
jmp
mov
lea
sbb
sub
or
dec
push
adc
adc
add
mov
mov
sbb
leave
inc
js
mov
pop
inc
sarb
cwtl
sub
clc
fcompl
and
stos
mov
inc
and
sub
add
mov
inc
aad
ja
and
and
push
xor
push
mov
push
stos
xor
sti
push
lods
test
and
sub
cld
cmpsb
fcoms
pop
pushf
add
dec
mov
jl
mov
roll
push
add
subb
push
popa
movl
fstl
dec
btr
ljmp
in
mov
hlt
cmp
cmp
arpl
fildll
inc
cmp
jp
shl
inc
xor
mov
cmp
add
std
shll
mov
es
loope
or
or
or
in
mov
jmp
and
cmp
or
ds
xchg
mov
aas
push
fs
adc
jmp
xchg
pushl
cmpl
cmp
rol
dec
orb
imul
je
ja
lret
push
sub
jecxz
and
mov
mov
test
stc
xor
shr
add
jo
and
push
sbb
or
das
aam
dec
out
jne
and
rcll
loop
cld
and
pop
call
cmp
je
dec
jnp
sub
fdivrl
cmp
xchg
pop
addr16
outsb
xor
std
pushf
pop
adc
movsb
cmpsb
rorb
movsb
jb
mov
jmp
push
clc
orb
add
nop
dec
xchg
into
mov
jle
add
dec
or
push
fs
lods
fldt
rorl
mov
outsb
cmpsb
int3
pop
jp
push
push
mov
cld
movsb
mov
pop
mov
pop
ret
sub
js
pop
fisttpll
sbb
jo
ret
sbb
ja
pusha
pop
cwtl
xchg
aas
popf
jl
cmpsb
fs
jl
les
mov
arpl
rcl
mov
add
mov
sahf
push
pop
and
mov
add
push
enter
xor
mov
mov
loopne
dec
aas
cli
push
sbb
fldt
into
addr16
ja
repz
inc
pushf
addr16
and
xchg
mov
cmp
dec
rolb
sbb
pop
in
int
int
mov
mov
add
repnz
jnp
lahf
mov
shrl
daa
pushf
mov
jg
aas
dec
enter
call
enter
add
leave
sub
or
dec
in
cmp
dec
inc
mov
jae
mov
sbbl
int3
jnp
add
in
mov
add
push
xchg
mov
addl
pop
pusha
data16
mov
cmp
bound
and
insb
insb
outsl
arpl
imul
push
xor
rsqrtps
outsb
jg
decl
push
jb
pop
push
add
arpl
pop
jb
inc
push
push
jp
insb
fs
je
push
idiv
jb
insl
inc
jbe
jns
data16
dec
jo
pop
jbe
push
cmp
jae
inc
dec
outsl
inc
mov
pushl
inc
inc
fs
inc
dec
push
popa
dec
inc
inc
insl
js
inc
dec
pop
inc
js
adc
ja
jno
incl
dec
outsb
inc
jae
jbe
inc
bound
pop
pop
dec
push
push
push
gs
push
jb
jo
jo
inc
std
ljmp
inc
dec
pop
push
push
ja
pop
gs
popa
dec
push
push
inc
pop
cld
mov
push
xchg
dec
push
push
mov
dec
jno
jo
dec
dec
push
pop
pop
push
sti
jp
dec
push
inc
outsb
dec
dec
inc
inc
ja
js
dec
dec
dec
dec
push
insb
jbe
jbe
cmp
mov
inc
inc
jp
js
push
push
pop
jns
popa
inc
insl
loopne
loopne
push
js
push
pop
push
jns
outsl
inc
mov
push
pop
inc
push
imul
mov
dec
push
jno
push
jns
gs
jae
push
bound
pop
jp
jp
incl
inc
arpl
jp
dec
bound
arpl
pop
inc
inc
push
inc
jne
gs
sbb
cpuid
arpl
pop
inc
fs
js
outsb
mov
outsl
outsb
outsl
outsb
fs
gs
and
pop
dec
daa
outsb
dec
inc
addr16
jno
pop
in
mov
pop
inc
inc
pop
dec
imul
jns
jne
jg
add
dec
mov
push
jb
jae
push
dec
push
dec
push
jp
push
inc
dec
push
inc
arpl
lahf
pop
fwait
jno
mov
pop
clc
xchg
adc
arpl
testb
add
inc
imul
mov
xchg
in
jle
pop
inc
jb
popa
jns
outsl
jb
pop
insl
insl
add
daa
mov
adc
add
stos
xorb
push
aas
stc
decl
ja
outsb
jbe
jb
gs
and
outsb
je
push
adcl
push
push
pop
ja
outsb
insl
popa
jo
gs
cbtw
sbb
mov
aaa
lret
or
push
dec
push
fiaddl
sub
inc
js
dec
mov
outsb
gs
xor
or
lahf
ljmp
mov
pusha
leave
jmp
jmp
imul
dec
push
les
loopne
inc
dec
push
dec
inc
pop
jnp
inc
inc
cmp
xor
add
inc
ss
xor
cmp
aaa
aaa
pusha
mov
es
xor
xor
inc
jge
dec
outsb
jo
push
stos
loopne
sbb
inc
add
add
lds
sbb
push
idivl
rorl
push
mov
push
push
outsb
sub
push
inc
push
lret
outsl
ja
and
mov
je
jo
pop
ucomiss
inc
push
mov
inc
outsb
mov
gs
outsl
jg
iret
push
les
and
push
add
dec
add
add
add
add
or
inc
jb
jle
jl
cmp
pop
inc
pop
rclb
or
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
aas
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
lock
stos
notb
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
mov
pop
cmp
addr16
insl
adc
insb
jne
ja
jns
addb
jnp
jge
jg
cmp
outsb
and
sub
in
stc
sub
adc
addl
adc
add
add
xchg
lods
stos
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
ljmp
and
add
test
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
int
dec
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
add
or
and
stos
xor
inc
mov
pop
pop
push
cld
push
jne
dec
outsl
outsb
push
jne
push
gs
decl
jne
jb
push
popa
cwtl
dec
popa
outsb
inc
bound
jb
jo
pushl
fisttpl
jns
dec
add
inc
jne
push
gs
arpl
jbe
shr
sbb
js
call
mov
insl
add
xor
jb
add
add
add
jne
je
insl
and
jb
pop
dec
adc
or
push
push
and
add
dec
inc
add
inc
and
adc
es
ss
adc
and
jo
imul
and
jae
insl
popa
into
sub
je
gs
jo
and
mov
sti
je
and
push
push
xchg
jno
bound
jns
imul
scas
push
insb
jns
or
xorb
outsb
je
into
insb
mov
mov
jne
pop
xor
scas
sbb
data16
push
xchg
shrl
aas
xor
mov
dec
mov
rolb
shll
les
out
insl
fdivrp
outsb
das
add
fs
xchg
and
jbe
dec
mov
js
push
rcrb
popa
add
or
fs
dec
icebp
xor
bound
and
in
andl
sbb
add
gs
fwait
ret
and
mov
ret
fcoms
sub
aaa
or
dec
sub
arpl
cmp
adc
pusha
and
dec
popa
sub
xor
outsb
mov
cmp
sbb
fadds
imul
out
int3
or
xlat
js
push
pop
data16
fs
sbb
pop
xor
lds
sub
gs
push
xchg
jnp
sbb
cmpsb
cs
out
or
or
xor
shll
pusha
adc
popa
sbb
add
add
xor
fdivs
outsl
outsl
ss
adc
fs
jo
cli
jbe
inc
and
xor
pushf
pop
mov
push
cmp
mov
mov
lds
jo
mov
test
outsl
push
or
arpl
pushf
fidivs
lcall
jb
push
inc
aaa
mov
mov
insl
in
ljmp
testb
pop
das
imul
in
aas
dec
mov
inc
jno
rclb
mov
adcl
cmp
cltd
xchg
lds
call
test
push
adc
and
roll
or
and
pop
push
cmp
jne
jae
pop
popf
mov
fsubl
add
sub
addl
jb
push
loope
pop
data16
lret
inc
sub
pop
dec
mov
cs
dec
or
add
cmp
outsl
aad
repnz
inc
jne
sub
out
gs
dec
and
dec
and
mov
xchg
pushf
cmp
or
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
faddl
push
pop
sub
adc
bound
das
or
les
fiadds
movsb
and
fisubl
insl
andl
imul
ds
in
outsl
daa
roll
mov
rol
mov
mov
je
cmp
sbb
cmp
lcall
jbe
mov
xor
jno
sub
inc
ficompl
mov
jbe
push
push
lahf
push
or
xchg
and
xchg
jns
cmp
dec
mov
sub
mov
or
add
xor
pop
es
lds
lock
jno
daa
pop
inc
xchg
pop
pop
pop
push
inc
test
jae
cmp
add
insb
call
gs
addr16
subl
mov
adc
lea
xor
jbe
push
push
push
push
dec
testl
dec
cmp
outsb
pusha
cmp
fildll
dec
jge
imul
cmp
fs
add
xor
sbb
push
or
push
fistpll
sbb
insb
in
nop
roll
xchg
jg
or
mov
push
push
insb
dec
mov
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
out
pop
pop
cmp
cmp
add
ds
mov
push
sub
int
fdivrl
jle
sub
sub
fdivl
cmp
add
add
sub
sub
loopne
ja
sub
mov
call
and
cmp
and
add
fisttpll
pop
test
addr16
mov
je
push
jb
imul
ret
xor
push
push
cld
popa
arpl
xor
sbb
xor
xor
cwtl
adc
inc
jo
sub
xchg
daa
jns
dec
xor
push
push
and
cmp
out
cld
mov
mov
iret
shr
stos
ds
notl
sarb
push
cmp
repz
lods
test
repz
repz
xchg
nop
mov
test
cmp
repz
push
cmp
repz
push
push
dec
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
sub
adc
lcall
out
sahf
out
pushf
jl
cmp
sahf
ja
sbb
mov
jo
jns
out
inc
inc
cmp
iret
repz
add
mov
ds
repz
push
sub
in
jl
out
rcrb
out
xor
insl
insl
cmp
add
jmp
lahf
fs
dec
and
jns
add
das
mov
adc
push
dec
push
inc
or
dec
test
gs
adc
dec
mov
inc
popa
sub
jne
dec
fstps
outsb
gs
imul
das
test
push
ja
xchg
xchg
cmp
sahf
jae
xchg
xchg
out
add
addr16
popa
mov
mov
adc
jb
daa
push
rclb
imul
ja
movsb
daa
mov
sahf
jbe
cmp
dec
inc
aas
add
mov
push
mov
push
cmp
das
adc
das
push
cmpsb
jb
dec
jge
push
mov
push
inc
arpl
fisubrs
jne
daa
pop
lea
pop
loope
mov
js
aaa
add
push
push
inc
push
repnz
dec
dec
les
cltd
push
push
insb
push
lret
or
stc
sbb
xchg
jp
adc
in
aas
icebp
pop
test
add
inc
insl
movsb
dec
jbe
dec
add
fcoml
das
andb
dec
fmuls
out
add
xchg
sbb
sub
inc
das
inc
inc
mov
outsl
inc
add
pushf
ss
lods
pop
leave
add
ja
lahf
mov
mov
fmuls
pushf
movsb
ds
lds
leave
out
js
mov
add
mov
mov
rcrb
les
mov
inc
pop
and
outsl
dec
out
mov
inc
andb
ss
mov
lahf
inc
add
fs
fadds
mov
adc
push
mov
shrl
jbe
pop
push
push
arpl
or
cmp
fwait
mov
fdivr
add
fidivrl
pushf
and
sahf
adc
mov
cmp
jnp
idiv
add
addr16
aas
pop
mov
scas
add
pushf
mov
out
aas
cmpsl
ss
cmp
jg
cs
fcmovbe
roll
lahf
out
add
mov
addl
scas
aas
insl
in
cmpsl
je
test
xchg
mov
orl
cmpsb
dec
iret
rep
mov
in
add
movl
xchg
pop
paddusb
int3
movsb
ret
dec
lock
mov
sarb
mov
out
bound
daa
push
mov
mov
imul
lock
mov
outsb
cmp
lahf
decb
outsb
bnd
xchg
pop
cs
dec
cmp
or
push
mov
rorb
testl
dec
sti
push
ret
push
fsubs
jle
push
inc
pop
xchg
inc
rcr
and
movsb
enter
les
aas
mov
lock
adc
stos
pusha
mov
cmpsb
adc
and
aas
adc
inc
adc
or
mov
or
xor
sbb
out
ucomiss
pop
cmp
fmuls
sbb
cmp
pop
dec
es
mov
mov
and
pusha
es
xchg
pushf
push
ret
adc
cmp
ss
js
jns
push
cmp
cmp
call
mov
cltd
inc
fiaddl
and
dec
mov
pushf
dec
dec
pop
inc
add
pop
ljmp
mov
lahf
bound
lds
les
rorb
jg
inc
shll
ss
aas
repz
stos
xchg
adc
cs
call
add
sbb
lahf
xlat
and
adc
out
data16
or
inc
inc
sub
ss
fistpl
pop
leave
test
scas
push
int
xor
pop
inc
insb
int
stos
or
mov
ds
add
add
inc
movsb
imul
xor
and
push
push
daa
adc
jno
data16
jle
jge
and
inc
push
dec
inc
mov
lea
std
xor
mov
xlat
jns
lds
inc
fisttps
mov
push
cmp
inc
or
xor
aas
cmp
xor
aaa
add
or
push
push
adc
push
xor
push
and
push
aas
dec
gs
jg
jl
jb
out
jmp
lahf
cld
scas
jle
hlt
mov
inc
call
dec
mov
jae
int3
mov
in
inc
mov
dec
bound
arpl
dec
mov
insl
test
addr16
mov
inc
nop
popa
mov
sbb
inc
cwtl
jmp
adc
aad
jnp
push
and
inc
scas
xchg
xor
cmp
outsl
dec
jae
repnz
inc
dec
iret
cmpsb
jns
and
push
fs
ja
cmp
dec
push
push
lcall
push
xor
dec
jp
outsb
dec
cmp
imul
pop
mov
xchg
dec
jbe
call
pusha
std
jne
jp
jae
outsb
dec
enter
dec
jle
stc
icebp
push
pop
outsb
mov
outsl
decb
stc
shrl
inc
dec
ss
adc
jmp
jno
pop
repnz
jns
jbe
addr16
push
imul
subb
jp
dec
and
addr16
outsb
push
decl
jl
rcll
add
or
enter
xor
out
jp
inc
ss
jnp
jp
sub
xor
jl
jg
inc
add
sub
addr16
pop
xchg
movsb
jno
pop
sub
and
scas
call
or
mov
shrl
or
cmp
pop
fists
pusha
mov
outsl
dec
lcall
js
mov
and
mov
pop
stos
cltd
lea
test
cwtl
cmp
or
or
or
push
incb
loope
gs
repz
ret
ret
cs
lcall
call
xor
mov
mov
xchg
in
adc
bound
icebp
daa
push
cld
lret
or
int3
or
and
js
sbb
pushl
mov
push
pop
jne
ss
incb
adc
pushf
lcall
movsb
jns
fnstenv
sub
and
mov
clc
mov
in
addl
sahf
cs
imul
pop
shrl
popa
cmp
outsl
outsl
mov
xor
adc
xchg
mov
mov
dec
xchg
jmp
lcall
jbe
iret
daa
sbb
aam
mov
es
scas
cld
xor
xor
rolb
dec
pop
arpl
pop
inc
das
out
shlb
int3
jbe
ret
stc
add
fmuls
push
sti
or
sbb
jmp
sbb
and
int
add
adc
xor
sbb
rolb
pop
outsl
adc
mov
push
jo
call
dec
dec
in
cmpl
je
rcll
cmp
in
jle
js
jg
mov
xchg
movsb
mov
ret
lock
jne
rcrb
cmp
and
and
mov
jne
popf
sbb
sub
push
cmp
repz
aas
mov
rcrl
mov
cmp
inc
fildll
sub
sahf
aad
aas
jg
addl
adc
adc
jne
and
cwtl
mov
sub
xchg
pop
sti
xor
jp
es
or
std
fcomip
stos
fcmove
add
sti
xchg
daa
jnp
adc
das
pushl
add
dec
ljmp
jbe
cmpsb
jl
and
ret
xor
ficompl
pop
lock
mov
inc
out
push
push
push
add
ja
sbb
aas
bound
or
cmp
jmp
jnp
arpl
popf
popl
sar
fwait
sbb
jle
sti
out
cmp
add
int
mov
pop
jg
adc
push
aaa
mov
jmp
jle
out
popa
addr16
test
cld
cmp
push
mov
pop
popa
xorb
js
loope
jl
mov
outsb
pop
and
ret
jg
mov
inc
jo
xchg
enter
das
into
dec
adc
push
scas
decl
mov
stos
jb
mov
xor
loope
xor
adc
jg
lea
ret
ss
repz
loope
pusha
iret
cmp
jb
push
sub
sub
mov
addr16
cmpsb
dec
jg
or
or
repz
das
push
roll
fcoml
push
mov
sbbb
push
pop
dec
jbe
rcll
mov
mov
lcall
test
mov
mov
out
cmc
popl
push
inc
fwait
mov
pusha
dec
outsl
iret
and
test
insl
sarb
into
push
imul
popf
arpl
push
mov
push
test
test
jl
inc
jmp
push
mov
or
stos
lcall
and
push
jecxz
pop
aas
jno
add
popa
cltd
dec
pusha
dec
jecxz
jae
jmp
cmpsl
and
popf
mov
dec
pop
fstl
inc
pop
lds
push
xchg
jecxz
jle
pop
mov
jg
call
nop
xor
push
sbb
ret
push
jbe
cmp
fstps
or
jnp
stc
das
inc
shrl
fnsave
jno
add
pop
js
xor
mov
cwtl
jb
lcall
mov
iret
inc
lods
cs
mov
ja
int
jg
rorb
pop
inc
leave
and
cld
mov
test
mov
or
fcomip
scas
mov
xchg
xor
jg
mov
ss
dec
sbb
inc
jno
insb
xor
out
cmp
add
push
pusha
les
push
idiv
pushl
add
rorb
jae
movsl
subl
cmpsb
xor
hlt
push
pop
or
bound
out
cmpsb
aam
sub
iret
out
cmp
es
je
push
cli
dec
sarb
mov
dec
xchg
jbe
lock
jbe
ror
add
mov
pushf
data16
mov
pop
dec
xor
ret
fldenv
mov
dec
mov
jg
jg
pop
pusha
jge
push
xchg
mov
pop
mov
push
and
pop
cld
add
xor
dec
jae
cwtl
clc
mov
addr16
jmp
test
xchg
scas
in
fsubl
or
xchg
push
and
inc
add
repz
inc
mov
xchg
and
cmp
sar
xor
cld
push
pop
push
pop
mov
mov
pop
ficomps
lret
pop
cmc
xor
ja
sub
les
mov
je
fidivl
adc
data16
popl
ljmp
incb
bound
rcrb
pop
inc
pop
out
jnp
addb
ss
inc
imul
lods
dec
push
imul
sub
xchg
pop
pop
adcl
sub
test
jg
mov
addr16
movsl
jg
or
ljmp
push
xorl
jge
sti
sbb
sbb
fldl
pushl
lcall
fisubrs
pop
test
imul
inc
add
jo
mov
stos
sub
mov
jmp
pushf
mov
fwait
jbe
lea
cwtl
mov
into
and
das
in
pop
sbb
sti
mov
and
sub
sbb
int3
add
mov
dec
fs
jnp
jg
adc
and
sbb
and
jbe
test
incl
stos
adc
mov
not
adc
add
pushf
fwait
sbb
movb
scas
sbb
pop
sub
movsb
mov
jg
jmp
or
movsl
pop
inc
out
or
sti
cmp
pop
push
sar
sbb
test
lods
sbb
jno
cmp
notb
push
iret
xor
mov
call
mov
xchg
mov
add
cmp
cmp
mov
lcall
test
ljmp
je
divb
and
and
in
jne
cmpl
push
push
xchg
decl
shll
mov
lret
sub
ja
andb
scas
cmp
sbb
pushl
inc
adc
insb
cmp
mov
sub
mov
or
jge
inc
mov
addr16
push
xor
loop
mov
movsl
push
inc
aad
jg
arpl
faddl
ja
fisubl
push
inc
jecxz
or
test
outsb
dec
iret
addb
mov
in
loope
std
xor
sub
push
sub
movsl
negl
adc
cwtl
cli
popf
sahf
push
mov
hlt
data16
or
xor
jle
cmpsl
jecxz
xor
gs
ljmp
mov
es
lret
out
xchg
jnp
xor
inc
dec
push
std
jg
lea
clc
pop
push
pop
arpl
push
ds
inc
fldt
incl
cs
imul
sbb
pop
gs
push
jp
in
add
dec
cld
inc
mov
mov
aas
jo
dec
pop
out
dec
push
add
decl
xchg
jb,pt
je
push
inc
test
inc
stos
lock
cmp
mov
sbb
mov
loope
sub
fwait
cs
ds
dec
add
je
sti
incl
xchg
jno
std
push
push
pop
add
ss
pop
orb
stc
gs
sub
xchg
inc
pop
fcom
cld
ljmp
jb
inc
rcrl
push
and
stos
cmc
push
in
jg
jg
sbb
popf
xchg
pop
orb
jo
and
lea
lods
es
jg
dec
cld
pop
push
push
shrl
xor
stos
xor
mov
push
push
into
add
orl
pop
pop
jg
ljmp
sub
adc
or
data16
mov
adc
call
decl
inc
or
dec
and
lods
pop
push
sub
sbb
push
fs
mov
aas
jg
cld
loopne
push
pusha
sbb
push
aaa
arpl
and
ret
dec
push
fiaddl
imul
push
bound
sub
add
xchg
add
and
or
sahf
mov
jmp
loope
jl
lods
sbb
sub
add
dec
dec
inc
mov
mov
loopne
add
lds
inc
and
mov
jmp
jp
mov
cmpsl
mov
loop
outsl
jle
out
push
ss
xchg
js
dec
lcall
ljmp
orb
addl
add
das
sar
stc
mov
adc
in
pop
mov
bound
inc
jbe
aas
insl
pusha
stc
push
inc
ds
mov
sbb
fwait
call
bound
fidivrl
xor
mov
pop
lret
mov
jo
and
cmp
mov
std
adc
mov
ljmp
pop
or
sbb
sub
push
push
jno
stc
cmp
adc
subl
add
lcall
lock
jns
lcall
fidivl
lret
decl
incl
pop
dec
data16
xor
pop
aas
cmp
stos
inc
leave
mov
fwait
mov
sub
loopne
je
cmp
int3
mov
dec
out
clc
scas
xchg
jl
stos
xor
mov
mov
rcrb
mov
or
push
push
lahf
jae
fwait
dec
mov
cld
into
push
aaa
inc
add
lahf
sbb
loop
test
mov
imul
mov
push
dec
pop
add
and
ss
pusha
sbb
xchg
addb
cmp
or
inc
outsb
popf
and
mov
or
decl
addr16
movsb
xchg
xlat
dec
push
push
push
enter
push
std
sub
push
idivb
xor
cmp
dec
cltd
push
cs
iret
jae
sti
mov
mov
mov
out
mov
std
ret
or
ljmp
and
orl
inc
mov
bnd
pop
jb
and
adc
lahf
ljmp
adc
aad
adc
loop
cltd
sub
and
xor
cli
add
ret
adc
xor
jmp
dec
xor
push
dec
xor
lcall
push
aas
enter
mov
std
xor
mov
mov
loop
mov
shll
push
push
mov
pusha
ljmp
pushl
pop
adc
xor
inc
xchg
inc
adc
mov
aaa
add
addr16
push
jl
cmpb
push
lock
call
inc
aam
int3
lods
xor
sub
mov
je
or
xor
loop
inc
leave
mov
xor
std
or
sti
jl
inc
push
repz
sbb
aas
scas
fwait
pop
pusha
out
mov
jmp
push
orps
mov
repz
jp
sub
shl
outsl
push
lods
cli
and
mov
jp
fs
stos
scas
jmp
sbb
pop
pop
xor
dec
jge
outsb
xor
repz
decl
sbb
or
sbb
leave
nop
push
cmp
add
jg
cs
cmpsb
inc
jle
aad
xchg
jne
pushl
cli
mov
pop
adc
jo
sahf
mov
sub
incl
shlb
inc
xchg
push
sub
add
clc
jmp
and
movsl
arpl
mov
shlb
sub
add
add
lcall
sbb
add
and
aaa
subb
shl
sar
jg
scas
xor
add
jno
leave
sub
adc
xchg
ljmp
cld
jb
imul
mov
lret
stos
lcall
repnz
push
push
imul
daa
ja
cmp
es
mov
fwait
incl
mov
mov
movsl
mov
push
push
xor
or
dec
jle
dec
xor
dec
sbb
lcall
test
out
mov
and
dec
add
pop
repz
jle,pn
sbb
jg
inc
pusha
xor
xor
pushf
ljmp
pushf
aas
cli
mov
mov
push
mov
xchg
dec
xor
das
sub
test
sub
ja
pop
inc
push
push
add
ret
pop
les
or
adc
sarb
stos
xchg
mov
scas
cmpb
push
mov
clc
pushl
dec
sub
pop
dec
std
xor
ss
cmp
fnstenv
call
push
or
inc
sbb
adc
aaa
lods
push
jno
inc
sbb
push
loopne
xchg
test
pop
pop
addr16
or
cltd
pushl
popa
addr16
insl
rorl
cmpsl
jnp
push
sti
das
clc
decl
push
bound
dec
into
add
lods
enter
mov
popf
loope
adc
aas
out
sarb
mov
mov
and
dec
cmpsb
sahf
or
mov
push
mov
dec
jb
push
sub
ss
cmp
dec
sar
hlt
call
pusha
daa
sbb
xor
sbb
shlb
xchg
insl
jp
cmp
mov
gs
sbb
jp
pushw
mov
divl
data16
mov
sbb
mov
jp
idivb
test
cmp
dec
out
fdivr
jae
mov
insb
or
jp
mov
pusha
out
add
mov
push
jbe
pop
loopne
pushf
jb
pop
push
stc
and
scas
mov
ljmp
andl
fistpl
loope
in
push
push
adc
popa
adc
and
mov
push
jne
iret
dec
sbb
pop
mov
pop
inc
push
insb
in
ja
incl
mov
and
push
out
imul
dec
insl
xor
call
es
push
add
xlat
mov
mov
dec
and
mov
xor
jb
jl
movsl
jns
mov
push
arpl
or
addr16
sub
cmc
fbld
dec
mov
adc
pop
fldenv
jecxz
pop
push
shr
clc
out
jne
mov
inc
das
sub
sbb
jge
fs
dec
pop
hlt
stc
xchg
lcall
dec
movsl
stos
addr16
js
inc
test
stos
pop
movsb
fsubrl
push
outsb
mov
movsl
sbb
rcrl
xchg
xchg
stos
nop
sub
sahf
mov
jns
xor
mov
dec
bound
aaa
jle
out
into
or
outsl
pop
push
sbbl
dec
out
and
cmp
cmp
insb
popa
jo
es
cmp
out
inc
sbb
std
lcall
push
loop
dec
sub
rorl
inc
insl
jno
lahf
int3
js
inc
pop
cmp
cmp
out
jbe
xor
jmp
pop
push
rorb
addr16
mov
push
mov
jb
popa
ja
imul
jle
push
mov
push
push
push
inc
lea
iret
mov
pop
and
outsl
dec
movsl
inc
outsb
testb
stos
inc
jl
inc
jle
mov
fsub
mov
fisubrs
cmp
add
out
repz
cwtl
incl
inc
cmp
cmp
mov
and
sbb
rcll
cs
bound
scas
push
sti
arpl
push
mov
mov
pop
push
popa
dec
scas
and
rorl
cmp
push
outsb
mov
pop
xchg
push
fadds
adc
sbb
mov
test
inc
add
aad
fidivs
lret
jle
scas
or
fwait
cmc
xchg
insb
fnstsw
xchg
and
repz
jg
movsl
and
ficompl
xor
push
or
dec
sbb
shrl
jg
or
inc
xchg
loope
sbb
dec
pop
lea
jl
ja
sbb
mov
fbstp
push
push
jb
ds
stos
int
push
cmp
ljmp
hlt
adc
iret
enter
dec
inc
or
push
sar
aas
sbb
hlt
movsb
pop
jecxz
push
add
xchg
rolb
pop
push
call
stos
jo
push
bound
push
lret
cmp
add
push
lods
sub
mov
jo
fcmovnbe
lahf
pop
lock
jle
adc
push
or
ss
mov
mov
jge
add
add
cmp
lret
dec
out
out
repz
jmp
int3
xchg
adc
mov
jle
insl
inc
xchg
inc
push
mov
cmp
outsb
push
insl
cmp
repz
add
pop
jbe
inc
dec
xor
sbb
icebp
inc
out
pop
adc
daa
add
inc
leave
icebp
pop
cmp
test
lcall
in
mov
jb
jl
decl
and
xor
inc
mov
out
arpl
ds
cmp
push
mov
cmc
inc
sbb
push
and
jae
push
lcall
js
and
xchg
adc
call
cmp
and
push
and
jmp
je
pop
add
loopne
push
adc
sbb
cld
pop
sub
pop
icebp
or
mov
ret
add
inc
mov
incl
fimuls
xor
adc
pop
cld
pushl
sub
clc
inc
xor
mov
xchg
outsl
mov
mov
dec
jp
rolb
scas
jl
cmp
cld
popf
sbb
pop
jl
cmc
aad
ds
outsb
shl
jp
mov
pop
pushl
fdivl
mov
dec
sahf
fstps
hlt
add
daa
dec
cmp
outsl
sarb
popa
jg
mov
dec
pop
clc
adc
dec
xor
cli
in
lcall
cltd
fsubrl
mov
add
mov
jg
mov
sbb
out
popa
pop
xchg
mov
jb
pop
jg
adc
jge
lods
fbstp
inc
decl
lcall
bound
sti
jle
aas
push
push
xchg
divl
pop
push
int3
or
mov
adc
test
dec
pop
test
lahf
sbb
push
push
cmc
jg
mov
mov
jno
jo
jae
mov
mov
mov
aaa
popa
xchg
and
lcall
adc
jge
cmpsb
sbb
push
inc
cld
or
xchg
fnstenv
jno
adc
mov
inc
hlt
sahf
cwtl
es
incl
in
or
fsubl
push
mov
push
xchg
jp
cltd
mov
inc
jnp
lret
pop
fsubrl
in
push
add
mov
cmovns
test
adc
aaa
push
ljmp
push
push
test
jmp
xchg
mov
nop
xchg
dec
gs
mov
lret
lcall
mov
add
jl
das
mov
daa
push
mov
into
xor
aad
cli
fistps
jecxz
push
cld
imul
cwtl
test
inc
sbb
or
pop
jecxz
js
push
aaa
xchg
mov
jmp
sbb
and
pop
jo
sbb
scas
stc
sub
fwait
adc
aas
push
ljmp
or
es
in
mov
lea
mov
jg
mov
std
sahf
rcll
dec
loope
int3
jge,pn
aas
adc
push
xchg
fs
dec
pushl
inc
pusha
pop
inc
add
repnz
pop
sahf
fnstenv
cmp
pop
icebp
jmp
inc
in
and
add
stos
adc
cmp
ss
ds
neg
push
stos
das
cs
into
mov
js
xchg
or
loope
jne
xor
ja
incl
stc
stc
ds
dec
shrb
imul
cli
mov
sbb
bound
enter
outsb
test
mov
or
js
outsl
mov
bound
dec
sbb
jne
sub
mov
mov
lds
cmp
mov
std
jl
fldt
outsb
into
mov
and
cmp
in
call
jo
cmp
movsb
adc
sub
xor
mov
jo
std
xchg
or
mov
mov
ljmp
dec
xchg
inc
je
in
dec
lret
add
lret
mov
mov
into
jle
mov
push
jmp
sbb
pushl
xchg
roll
rcrb
pop
in
cmp
push
je
mov
call
out
dec
fs
cmpsl
xchg
insl
popa
notl
std
ljmp
mov
je
out
lods
xor
outsb
cli
movsl
xchg
jnp
mov
test
mov
mov
sub
inc
dec
ds
cmp
test
andl
add
test
cmpb
es
dec
xor
call
mov
clc
sbbl
xor
iret
mov
sahf
aas
js
insl
cmc
push
jmp
mov
imul
ss
cltd
cwtl
cmp
cli
sub
iret
adc
mov
fcompl
inc
jl
mov
ret
sar
decl
jo
stos
cld
add
sub
popa
push
sbb
xor
lods
lods
lcall
lcall
imul
fstl
dec
popa
add
add
cmp
pop
or
std
push
dec
push
out
pop
std
das
jle
inc
xchg
loopne
jle
or
xchg
jp
and
xchg
addr16
and
jbe
sub
out
das
clc
outsl
mov
paddusw
dec
in
mov
jg
inc
call
jns
xorb
repz
sbb
enter
imul
xchg
pop
adc
sbb
clc
jb,pt
incl
xchg
mov
xor
fisubrl
adc
jo
sbbl
add
cld
fs
aaa
inc
cmp
sub
stos
insl
dec
in
jae
sub
jg
popa
iret
mov
inc
mov
push
sbb
xchg
mov
sub
ljmp
out
aas
jp
dec
int
mov
adc
adc
aaa
mov
jg
jbe
adc
sub
add
adc
cmp
ret
jge
repnz
aaa
cld
cmpsb
or
dec
stos
sbb
rcrb
push
or
mov
jae
jae
mov
imul
pop
push
leave
mov
cmc
push
xor
add
sub
iret
jns
mov
dec
and
sbb
ret
ja
pop
pop
leave
scas
dec
add
mov
adc
cmp
push
inc
jmp
std
call
add
jp
cmp
cs
js
adc
sbb
mov
push
cmpb
idivl
hlt
jg
loop
jae
pop
inc
sbb
jo
dec
mov
jbe
add
mov
add
lcall
cmp
push
test
push
test
std
xor
push
adc
repnz
sbb
call
jg
jb
or
out
adc
aas
dec
int3
and
pop
inc
mov
mov
and
test
dec
jmp
ds
shlb
decl
sti
sbb
jl
pop
shll
inc
out
mov
push
inc
fs
icebp
xor
adc
cmp
xchg
sbb
jg
cli
negb
inc
jle
mov
iret
inc
inc
add
incl
jl
add
lods
push
je
mov
push
push
sarl
pushf
call
call
jno
insl
xorb
insl
sti
jbe
push
std
add
ss
pop
ret
stos
orb
addr16
jno,pn
push
gs
jle
ljmp
push
jno
and
sbb
aaa
dec
push
clc
mov
outsl
out
das
push
adc
dec
push
adc
dec
mov
xchg
add
pop
cld
inc
andl
bound
sahf
cltd
jmp
pusha
dec
in
xchg
js
ret
jg
mov
xor
lods
xlat
scas
mov
push
outsb
push
sahf
sub
call
pop
cmp
ficomps
dec
leave
mov
insl
pop
cmp
push
das
mov
lock
orb
lret
and
sub
aas
jge
cmc
and
mov
mov
mov
push
jg
pop
enter
jo
adc
push
into
sbb
add
pop
dec
mov
mov
cmp
sub
mov
jge
sub
adc
sbb
mov
push
or
sti
mov
incb
cld
jo
ss
addl
sbb
test
xchg
ljmp
mov
and
jne
cmp
and
xor
movsl
les
dec
fsts
inc
lret
and
je
pop
mov
nop
and
mov
fcmovu
jl
inc
in
sbb
nop
inc
lods
cmp
cld
fcomip
push
lret
in
shll
add
loope
scas
mov
lcall
push
or
scas
fs
popa
icebp
adcb
popa
loope
pop
dec
mov
fildll
stos
dec
int
adc
cmp
lods
shlb
jp
jns
leave
or
mov
jns
cmp
mov
outsb
rorb
xor
jmp
jg
jbe
dec
shlb
fwait
ret
push
push
mov
and
andl
inc
clc
icebp
pushf
cmp
insb
adc
cmp
lcall
enter
fcompl
ds
nop
add
xchg
jl
aas
jbe
mov
cmp
dec
rep
mov
dec
or
mov
xor
or
cmp
inc
jge
push
out
repz
or
std
mov
cwtl
inc
fs
lods
adc
out
push
push
push
enter
shrb
cmc
decl
mov
int3
mov
aas
pusha
jne
jmp
adc
cltd
xchg
push
push
fistps
push
jae
lea
push
inc
dec
sar
aaa
ljmp
pop
pop
test
gs
and
xor
mov
mov
xor
sbb
call
dec
scas
inc
and
dec
lcall
or
mov
cs
or
adc
cmpsb
or
incl
adc
fldt
mov
push
inc
push
mov
cld
or
pop
inc
std
outsl
mov
icebp
pop
insb
adc
jb
sub
pop
pushl
cmp
adc
sbb
jge
jle
inc
lcall
push
or
or
dec
adcl
rclb
sub
xchg
ljmp
dec
and
and
mov
pop
ficoml
adc
roll
inc
mov
je
aaa
jle
or
or
inc
or
mov
mov
or
rcll
outsb
and
jecxz
push
xchg
push
movl
jne
out
into
stos
adc
inc
push
enter
int3
insb
and
mov
pop
mov
std
xor
lock
and
gs
inc
sbb
gs
iret
inc
jne
jl
mov
add
xor
shlb
lcall
push
cs
jno
cmc
mov
inc
push
scas
sbb
iret
jmp
mov
punpckhbw
cltd
push
sbbb
out
pop
add
or
fisubl
outsl
rorb
les
pop
fdivrl
lcall
test
inc
cmc
cmp
push
insb
mov
icebp
mov
xchg
sub
fidivrs
or
lcall
out
test
sbb
jno
inc
lahf
fstl
lods
jecxz
dec
push
in
out
xchg
pushf
int
mov
push
inc
ficoms
xchg
push
mov
insl
lret
aad
fcmovnu
mov
in
cmpb
aaa
insb
rclb
decl
jae
arpl
stos
in
int3
sbb
mov
jp
out
and
fildll
movsl
ds
adcb
ljmp
pop
pop
ds
sbb
sbb
cmp
stc
xor
mov
xor
mov
lea
or
lods
lods
xor
inc
rcrl
decl
xchg
pop
or
clc
sub
xor
pop
lcall
cmpsb
sti
pop
jne
mov
cmp
xor
stos
push
cld
das
dec
sar
ljmp
and
clc
add
insb
leave
and
or
into
or
scas
popf
push
inc
push
rolb
push
pop
jge
and
fwait
js
inc
jg
mov
pop
leave
and
shlb
dec
in
das
out
mov
add
xchg
push
pop
lcall
call
sub
mov
pusha
dec
cld
adc
ds
adc
fdivr
ljmp
rep
dec
and
sub
mov
jge
outsb
mov
inc
std
pushl
inc
lahf
push
or
dec
jb
sbb
leave
lcall
mov
mov
push
lcall
out
imul
jb
movsl
mov
in
dec
add
push
aam
call
ja
xor
lods
ficompl
in
mov
dec
push
int3
and
sbb
insb
popa
test
clc
lahf
or
xchg
and
dec
jp
lock
inc
pop
icebp
cwtl
push
mov
dec
pop
xorl
flds
mov
push
in
push
movsl
out
ss
xchg
inc
pusha
call
std
pop
into
jo
push
pop
jns
jle
push
je
and
imul
add
dec
dec
imul
fsubl
ljmp
jge
push
in
dec
jo
int3
sbb
push
adc
push
je
jg
mov
jle
push
pusha
cmp
add
pop
out
mov
pop
outsl
xor
outsl
decl
fs
inc
es
pop
dec
out
lock
stos
lret
fwait
add
hlt
test
gs
mov
test
sub
adc
les
xlat
popf
adc
adc
mov
pusha
lret
push
mov
jge
inc
sbb
jbe
pop
insl
pushl
mov
cwtl
imul
push
push
inc
inc
pop
cmpsb
mov
or
or
push
cmp
or
jae
lock
lods
dec
adc
mov
ljmp
bound
mov
imul
dec
add
jns
sar
adc
sbb
das
cli
mov
lcall
add
inc
push
add
jb
mov
std
sbb
adc
aas
mov
popa
pop
mov
cld
mull
and
push
aam
ljmp
adc
mov
push
pop
sbb
cltd
mov
push
imul
or
pushl
push
or
add
enter
pop
dec
aaa
dec
outsb
jmp
cs
adc
and
inc
mov
rorl
mov
jno
mov
cmp
adc
lcall
pop
cmpsl
mov
mov
lods
repnz
jae
xchg
nop
fs
jmp
icebp
addl
out
std
adc
mov
jle
sbb
inc
pop
and
adc
push
mov
jno
mov
inc
dec
insl
js
push
push
stos
cmc
push
in
popa
adc
fwait
lods
add
leave
es
add
lahf
add
xchg
fs
pop
jge
and
add
dec
in
jg
mov
cmp
or
mov
clc
lahf
sbb
stos
cmp
dec
popa
xor
mov
es
mov
add
add
sbb
jecxz
ljmp
aam
sarl
sub
xchg
sub
stos
dec
imul
xor
call
jg
add
cmp
std
cmp
inc
sahf
imul
call
js
pop
imul
mov
pop
ja
clc
xor
cmp
jmp
cli
mov
add
cs
and
push
roll
dec
push
xchg
inc
insb
int3
add
adc
jb
cmp
sub
loop
jns
pop
or
ja
loopne
ss
jg
sbb
add
enter
pop
popf
or
jb
xor
cld
cld
aaa
jg
ljmp
add
xor
sub
jg
add
jp
clc
push
jp
insl
test
inc
decl
std
and
in
ds
jp
daa
fldl
dec
push
lds
inc
in
or
rcrl
lcall
in
pop
arpl
push
inc
inc
dec
rolb
lret
js
fildll
call
ja
test
mov
scas
out
jl
dec
scas
mov
rolb
cli
pushl
push
sub
shlb
popa
shl
push
cmpsb
fstpt
ljmp
movsl
lods
fs
lret
or
mov
cmp
outsl
jle
jmp
dec
rep
pop
pop
xchg
out
test
dec
roll
pop
sbb
mov
push
jl
jno
push
xor
push
leave
mov
push
in
inc
sub
xor
divl
aas
push
mov
cmp
sbb
loop
push
das
into
ss
mov
shll
push
jg
adc
lret
gs
rolb
aas
rol
ret
insl
jae
inc
adc
decl
fdivl
jo
hlt
arpl
imul
xchg
inc
jp
xor
add
mov
ja
loop
es
popa
shrl
fidivrl
mov
push
daa
dec
out
dec
dec
mov
jl
dec
jecxz
push
shrb
lock
pushl
aas
jno
cmp
cmpb
dec
scas
ja
std
sub
push
push
cmpsb
and
push
js
xchg
int
add
js
xlat
and
lcall
inc
shlb
push
insb
push
inc
rcrb
and
dec
pop
pop
mov
cld
imul
jp
divb
dec
sub
sub
mov
pop
push
xlat
mov
clc
push
ljmp
rcll
sbb
sub
sahf
stc
inc
pop
hlt
mov
or
dec
sub
out
outsl
stos
push
lock
clc
sub
cmp
rorl
cmp
out
sub
loope
stc
sti
push
push
ja
out
pop
cltd
out
mov
subl
call
scas
push
xor
insb
shlb
push
mov
push
push
dec
iret
scas
popf
adc
aas
outsl
clc
push
fistpll
pop
imul
dec
inc
mov
jae
mov
adc
loop
mov
inc
cmp
xor
pusha
cltd
pop
add
dec
lds
call
std
imul
iret
popf
inc
fcompl
cltd
mov
push
adc
sbb
xchg
jp
incl
insb
decb
jno
sbb
lods
pop
faddl
incl
xchg
dec
inc
jp
mov
lret
neg
adc
inc
add
incl
cmp
lret
xchg
pushl
jmp
rcrb
lods
inc
push
jb
cmpsb
dec
pop
xchg
cld
inc
pop
fdivr
aas
add
xor
push
inc
aaa
aaa
dec
lods
dec
pop
aad
pushl
andl
dec
shrl
aas
loope
test
aam
push
adc
popf
push
add
mov
pushl
nop
adc
and
sub
push
mov
lcall
and
xchg
out
xor
lret
inc
js
cwtl
ret
sub
clc
dec
mov
daa
mov
rorb
xchg
push
std
sub
out
sahf
pop
cltd
pop
xchg
aas
dec
es
pop
xchg
mov
loope
jae
push
jo
xor
popf
mov
or
cmp
mov
arpl
pushl
insb
mov
loopne
jbe
hlt
test
imul
in
sbb
mov
pop
sar
pop
jmp
adc
cmp
dec
pop
movl
adc
xchg
xor
repnz
cmp
jno
xor
cmp
cmp
pushf
mov
pop
out
loop
ret
jno
add
dec
push
sahf
pop
lods
push
sar
incl
lret
push
inc
inc
mov
leave
inc
loop
ljmp
call
adc
xchg
xchg
in
in
dec
jb
scas
into
sub
in
and
sti
and
test
dec
mov
cmp
call
inc
lods
push
sub
mov
mov
sbb
mov
push
popf
mov
and
pusha
into
and
jbe
add
pop
divl
mov
das
fwait
sub
addr16
sti
clc
pushl
push
sbb
pop
movsl
inc
dec
push
mov
rclb
xor
xchg
lcall
jecxz
andb
les
in
xchg
mov
inc
inc
xor
inc
into
lods
cs
std
sub
scas
out
scas
call
lods
xchg
mov
nop
aam
pop
es
add
in
call
push
fistl
cmpsb
jg
inc
dec
in
bound
xor
test
ret
out
incl
xchg
inc
mov
cltd
int3
and
jno
popa
loop
sbb
jnp
push
cs
movsb
movsl
mov
lcall
negb
es
stc
cmp
insl
lret
jl
jecxz
test
ss
out
sbb
test
sbb
pop
pop
mov
data16
push
adc
or
ss
adc
fdivp
repz
adc
jb
jge
add
pushl
inc
cmc
mov
inc
xor
mov
xchg
mov
lcall
out
int3
gs
data16
sti
sub
sbb
stc
sbb
xor
and
dec
jmp
adc
les
movsb
hlt
sahf
xchg
mov
lea
stos
das
and
mov
mov
xchg
sub
xchg
leave
popf
pop
push
sarb
mov
inc
xor
push
sti
adc
xchg
add
or
adc
ljmp
mov
rolb
pop
notl
xchg
pop
lahf
add
dec
test
mov
aaa
xchg
in
jp
icebp
dec
pop
call
out
mov
pop
or
out
xchg
xor
push
cmp
out
out
cwtl
stc
pop
xchg
imul
mov
jne
add
xchg
xor
pushl
cs
xchg
pop
fwait
xchg
mov
testb
negb
repz
xor
movsb
cmpsb
adcl
les
xor
inc
enter
call
mov
mov
lock
out
mov
jecxz
aaa
loopne
fwait
inc
adc
out
sbb
xchg
add
ss
cmpsb
lods
pop
add
mov
add
mov
push
mov
jge
add
addb
subb
mov
outsl
fldcw
inc
push
inc
stc
xchg
jbe
add
xchg
jp
decl
test
inc
jns
scas
shrb
push
shlb
mov
sbb
xor
ljmp
xchg
sub
and
popl
js
stos
jle
mov
and
and
decl
out
xchg
sbb
push
pop
lcall
pop
in
mov
mov
arpl
out
adc
pusha
mov
pop
or
inc
addr16
adc
or
adc
repz
aas
in
sarl
jp
xchg
aas
xchg
adc
adc
dec
jmp
mov
jle
icebp
es
scas
add
mov
and
ljmp
xchg
fildll
or
call
test
lret
jae
push
and
lea
push
jl
lret
or
stos
mov
cli
push
push
aas
pusha
jns
cmp
mov
jbe
mov
jb
dec
rorl
pop
ficompl
push
push
adc
dec
and
jg
push
sbb
sbb
mov
cmpb
mov
sub
lcall
xor
push
pop
repz
cmp
inc
dec
xchg
pop
in
jno
mov
push
outsb
push
pop
out
js
lcall
or
loop
in
push
mov
sub
xor
stos
jp
cmc
aaa
lcall
mov
mov
jb
jae
dec
in
bound
mov
cmp
pop
inc
inc
stos
jg
test
es
mov
shrb
int
mov
xor
mov
push
out
mov
js
pop
sbb
sbb
push
in
push
push
mul
call
add
fiaddl
std
lds
push
mov
inc
mov
and
fldl
jp
mov
mov
add
and
cld
call
pop
mov
mov
dec
dec
dec
and
push
or
out
test
std
jmp
sbb
xchg
xchg
sbb
and
xchg
cmp
subb
sar
or
inc
mov
jge
cli
xor
xchg
pop
stc
xchg
icebp
outsl
not
andb
dec
lahf
dec
jp
ss
nop
cmp
pop
int3
or
pop
push
cli
adc
js
aas
clc
cli
adc
in
sbb
xlat
aaa
add
cmp
imul
xor
repnz
mov
stos
lea
xchg
xor
push
incl
mov
loope
jnp
mov
jns
push
popa
icebp
insl
outsl
cmpsb
fnstsw
mov
and
pushl
sub
popl
pop
sub
pop
es
out
cli
mov
jns
jns
mov
inc
sbbb
repz
ja
aas
insl
sub
cli
dec
ds
pop
in
sub
xchg
sub
inc
xor
rcrb
jg
iret
xor
movsl
mov
into
xor
add
jno
imul
mov
jg
mov
insl
enter
dec
inc
xchg
enter
in
jecxz
jg
incl
outsb
lcall
pushf
repnz
pusha
dec
sbb
lock
sbb
decl
push
jg
dec
popf
xchg
mov
aad
or
mov
aaa
push
and
pop
push
pusha
std
decl
push
inc
rorb
cli
jg
int
and
je
or
inc
enter
lcall
test
out
pop
clc
dec
scas
adc
jno
mov
stos
jbe
cmpl
sahf
jg
jno
imul
sti
add
int3
stos
insl
mov
pop
inc
into
sub
xchg
repz
out
cmpsl
pop
mov
pop
les
and
pop
pop
fiadds
sbb
mov
mov
mov
std
pushl
pusha
out
mov
icebp
adc
popa
fiadds
dec
in
inc
in
pop
insl
xchg
dec
sbb
call
pushf
in
shll
sbb
fs
add
jnp
push
pusha
adc
ljmp
shl
and
xchg
sbb
jbe
adc
pop
sarb
adc
sbb
ret
addr16
cmpsl
sub
inc
pop
enter
cmp
insl
hlt
lods
add
and
pop
into
daa
dec
jb
mov
or
push
pop
cmpsl
adc
xor
data16
jmp
fwait
ss
and
push
icebp
jle
cli
mov
jge
jae
sysret
lock
mov
add
pop
enter
in
xchg
movsl
push
mov
fcoml
xchg
ja
aaa
jo
into
jae
adc
mov
incl
inc
rcll
dec
loope
ret
push
push
xchg
push
inc
sbb
adc
xor
cmp
aaa
dec
repnz
add
pushl
mov
pop
std
sbb
arpl
inc
sbb
xor
mov
lcall
mov
adc
outsl
repnz
add
cmp
xor
fcomps
inc
insb
cmp
scas
repz
push
aad
stos
fdivl
push
sti
jp
mov
ret
mov
push
pop
out
dec
data16
fs
mov
lds
cli
lcall
inc
shll
add
mov
add
xchg
lcall
lods
cld
rcll
lea
mov
inc
iret
mov
outsb
pop
arpl
repz
dec
jg
sub
rcrb
push
push
outsb
scas
xor
icebp
bound
mov
jo
rolb
pop
adcb
lcall
call
pusha
in
push
lahf
dec
loopne
cmp
or
pop
repz
pop
inc
mov
pushl
cmp
stos
clc
jb
adc
sbb
inc
bound
loope
jl
mov
dec
nop
fs
in
jo
pusha
shll
stos
je
push
xor
inc
mov
fstps
lock
fnstsw
jp
data16
xor
pop
mov
push
movb
and
in
lahf
aaa
je
das
push
icebp
inc
mov
test
jbe
test
cmp
jle
add
push
cld
ljmp
dec
mov
insl
roll
scas
inc
mov
shll
jl
sbb
cld
cmp
or
data16
incl
arpl
adc
xor
iret
sbb
data16
xchg
aas
pop
lret
lret
test
jbe
dec
and
ret
sub
xor
std
mov
ljmp
sbb
push
cmc
xchg
and
icebp
mov
ret
pop
jecxz
pop
pop
mov
mov
sbb
jecxz
inc
push
stos
dec
dec
and
popa
mov
shlb
mov
dec
xchg
cmp
fdivl
dec
lcall
fistpll
and
stos
out
pop
std
add
inc
test
test
repz
enter
xor
push
std
ljmp
dec
fldt
jnp
test
fimuls
pop
inc
mov
ret
ja
xchg
jnp
mov
ljmp
sti
xor
jp
lahf
push
sti
push
cmovg
daa
dec
out
cmp
mov
push
loopne
test
adc
pop
dec
cld
mov
xchg
mov
cmc
xchg
inc
xchg
cmp
push
pop
lock
outsb
or
aam
jo
lea
sbb
add
sbbb
or
mov
and
lea
bound
xchg
je
addl
push
out
sub
in
cli
iret
jmp
sbb
in
mov
sbb
adc
cs
cmp
push
lcall
inc
icebp
push
sub
mov
jge
stos
inc
ljmpw
adc
dec
xchg
pop
icebp
decl
into
add
sbb
jge
inc
call
arpl
aaa
mov
xor
ds
push
adc
les
xchg
cli
mov
mov
mov
sub
and
or
pop
mov
call
ficoml
inc
das
mov
je
shrb
or
test
add
sarb
dec
addr16
clc
aas
nop
call
cmp
and
inc
mov
pop
ljmp
jle
icebp
adc
pop
push
fisubl
inc
push
out
dec
enter
lcall
mov
pop
jb
ljmp
push
scas
dec
scas
jb
lret
push
in
inc
pushl
inc
je
jb
sbb
std
mov
dec
bound
decl
popa
and
xor
in
cmp
and
pop
adc
sbb
sti
xchg
scas
and
sbb
pop
or
and
jb
adc
jnp
out
push
xchg
sti
pop
jecxz
pushl
push
jbe
adc
ss
adc
add
push
stc
mov
add
jecxz
aaa
push
mov
mov
ficoml
insl
ja
and
inc
jg
loop
or
push
xchg
sub
pushf
les
jge
push
inc
scas
adc
mov
push
push
ret
xor
outsb
pop
jecxz
je
or
test
jmp
jno
loope,pt
jo
and
aaa
jne
sub
mov
xor
mov
sub
cli
inc
std
pop
pop
jl
hlt
dec
and
inc
push
push
lea
decl
adc
inc
aaa
and
or
fs
cli
and
pusha
cmpsb
adc
adc
es
ret
push
jge
fnstsw
push
dec
fildll
les
and
or
jo
sub
and
sub
adc
test
or
out
cli
pushl
aam
jne
pop
cmp
fmul
pop
sbb
incl
sub
leave
xor
sub
mov
pop
sub
int3
ljmp
in
loope
jg
icebp
xchg
cli
aaa
inc
mov
out
push
xor
pusha
into
xor
sub
add
jb
nop
fidivrs
and
inc
mov
sbb
jno,pn
lods
mov
roll
or
or
xor
jmp
sbb
loope
pop
push
out
and
fs
adc
push
cmpsb
mov
sbb
popa
xor
cmp
lods
dec
mov
aam
ljmp
inc
imul
xchg
sbb
pushf
sbb
sub
jg
sub
loopne
je
repz
and
les
into
ja
cmp
out
loop
lcall
push
add
daa
inc
and
mov
fidivs
jmp
mov
leave
mov
decl
test
jno
andl
outsl
cli
jmp
icebp
jle,pn
iret
xchg
sub
sub
pushf
add
fsubrl
ljmp
mov
and
push
sahf
mov
jmp
jno
jns
movsb
sub
push
out
aam
inc
cli
inc
sti
imul
loope
xchg
mov
mov
and
xor
fwait
int
mov
rorb
and
inc
sub
sub
ds
insb
fs
sbb
or
mov
clc
ja
out
jb
out
test
lea
ljmp
pusha
push
je
xor
and
inc
jg
stos
pop
nop
xchg
push
dec
pop
add
mov
xor
mull
pushl
pop
mov
xor
mov
jge
push
pop
add
pop
add
aas
adc
sti
push
push
jae
scas
xchg
jnp
jne
pop
outsl
jmp
or
mov
popa
pop
mov
dec
pop
lahf
mov
movsl
out
cmovns
push
jecxz
mov
and
add
and
pop
dec
sub
mov
in
jae
mov
aaa
inc
dec
cld
push
pop
pop
les
inc
roll
hlt
add
xchg
fs
push
dec
pop
jmp
insb
push
dec
or
push
stc
xor
out
jp
repnz
cmp
mov
push
dec
fimull
push
arpl
es
int
je
incl
into
lret
nop
leave
test
and
repz
aas
mov
imul
das
sbb
clc
cmp
push
mov
xor
decl
pop
ficoml
push
std
jge
fildll
cld
lcall
pop
pop
xor
sub
jbe
lahf
nop
inc
inc
xchg
or
lcall
mov
mov
loop
dec
inc
lods
cli
decl
dec
es
dec
pop
sbb
xor
fdivrl
jbe
in
inc
adc
pcmpgtb
mov
adc
mov
popa
notb
notl
loopne
sub
add
mov
mov
jp
outsb
push
call
and
cwtl
lahf
jnp
push
out
or
adcl
mov
mov
pop
rcll
mov
xorl
out
aaa
sbb
aas
cmp
lahf
movl
sbb
push
jl
lcall
loope
inc
fildll
jl
fsubrl
pusha
sti
sbb
into
xor
cmp
and
adc
jne
pop
push
inc
push
and
idiv
jg
es
and
xor
push
cmp
or
xchg
adc
mov
inc
ret
adc
subb
dec
mov
xor
outsl
push
xchg
pop
mov
push
mov
jecxz
out
out
mov
sahf
sbb
dec
mov
sti
lcall
data16
push
and
cs
int3
sbb
in
add
adc
adc
sbb
sub
pop
adc
push
test
incl
test
cld
daa
pusha
dec
or
mov
out
pop
jmp
sbb
xor
lcall
mov
lods
pop
cmp
mov
mov
xchg
addb
bnd
call
or
mov
mov
dec
pop
pop
mov
jle
icebp
cld
call
pop
jecxz
pop
add
cmp
sbb
add
and
fbld
push
daa
aam
xchg
fisttps
pop
jns
mov
push
sub
cmp
push
xor
jbe
jg
lock
fs
je
or
sbb
decl
outsl
iret
sub
movl
test
mov
lcall
in
cmpsl
in
mov
lret
sub
fucom
push
call
movsb
xlat
mov
js
or
shrb
push
leave
xor
xor
repz
mov
addr16
cs
push
data16
jecxz
shl
arpl
fsubl
inc
xor
icebp
jmp
aas
dec
les
pushw
jns
jne
dec
dec
pop
jne
inc
int3
out
jg
push
xchg
jae
popf
push
jl
mov
test
icebp
cmc
or
lods
fwait
stos
cwtl
mov
xorb
mov
push
test
decl
arpl
cmpsb
cltd
arpl
sbbb
jge
xchg
incl
aaa
pop
sahf
mov
in
mov
bound
adc
scas
fwait
pushf
mov
mov
mov
mov
mov
je
mov
adc
mov
addr16
pop
mov
decl
sub
cwtl
fstl
gs
bswap
mov
mov
mov
test
sbb
adc
ljmp
popa
dec
mov
and
xchg
lret
mov
negb
cmp
or
mov
pushf
test
cld
imul
mov
push
pop
hlt
xchg
dec
pop
inc
jbe
clc
andb
add
dec
test
scas
push
std
decl
inc
data16
and
push
jno
xchg
mov
mov
cmp
jo
or
and
add
out
dec
scas
jno
add
cs
ds
lock
sbb
cmp
cmp
cwtl
loope
testb
int3
adc
call
lods
pop
xor
cli
xor
sub
adc
cmp
sbb
jle
mov
aas
aam
jns
into
or
movsl
movsl
pop
jbe
jbe
sub
dec
xor
out
and
cmpsb
lret
in
lcall
stos
mov
sti
in
gs
out
cmp
fcomip
jmp
in
push
inc
repnz
sbb
out
pause
sub
packsswb
repz
dec
out
jb
arpl
arpl
inc
icebp
arpl
jg
jg
inc
lret
inc
insb
jno
mov
mov
dec
ja
add
out
dec
out
bound
test
mov
imul
push
jg
mov
testb
jmp
je
scas
pusha
pop
sahf
mov
sbb
inc
les
lcall
jmp
dec
cmp
pop
mov
mov
test
cmp
xchg
incl
mov
out
mov
inc
xchg
lods
jp
pop
stos
mov
fwait
decl
push
hlt
sarl
addr16
mov
mov
lcall
pop
cld
lcall
push
jne
popf
xor
mov
scas
mov
pop
test
jge
pop
inc
add
dec
add
or
aaa
dec
xor
test
outsb
pushf
pop
imul
mov
outsl
jmp
xor
stos
dec
pop
sub
popf
inc
push
inc
add
incl
imul
push
mov
dec
add
push
inc
add
js
clc
popa
movb
daa
test
pop
push
push
cmp
mov
cmp
jg
movl
push
sub
ficoml
jbe
pop
dec
out
popa
sbb
popf
push
cmpsb
pop
loopne
pop
fistl
adc
cmp
and
push
sar
xchg
scas
aad
pop
xor
mov
mov
nop
push
jge
push
bound
cld
dec
arpl
incl
mov
iret
xor
out
call
roll
jp
add
out
xor
js
and
sub
enter
das
and
xchg
insl
inc
mov
loop
js
cld
and
or
sbb
dec
dec
jp
cli
sbb
jbe
test
imul
incl
outsb
jb
or
popf
lods
inc
push
mov
pop
mov
scas
jbe
stc
xor
jg
incb
sti
jno
xlat
sub
and
sbb
xor
je
ja
cld
jg
xor
pop
imul
jge
ss
xchg
stos
jbe
cltd
pop
mov
addr16
test
push
push
lea
hlt
and
into
test
ljmp
sahf
inc
inc
iret
dec
mov
test
inc
sbb
cmp
out
mov
inc
mov
dec
ja
mull
sbb
minps
sbb
stos
xor
fwait
ljmp
mov
xor
sbb
negl
push
loope
jne
cmp
cmp
cmp
je
or
add
sub
jl
cmp
cmp
andb
iret
aas
pop
cmp
stos
inc
in
cmp
jb
pop
push
mov
repz
jl
sub
inc
xchg
ljmp
and
pop
ss
ret
push
mov
xor
jne
push
sbb
stos
and
cmp
push
sbb
pop
sub
xor
rolb
cmpsb
dec
pop
movsl
jge
sbb
and
jne
fsub
jmp
fmull
jecxz
jle
repz
andl
call
cld
jg
test
dec
std
xchg
popf
aam
ljmp
fistl
pop
push
in
jo
aaa
lcall
mov
push
das
jbe
xor
cwtl
arpl
mov
aaa
sub
jmp
in
pop
inc
out
and
mov
mov
loopne
data16
stos
stos
outsl
movsb
or
fwait
jmp
data16
bnd
dec
in
mov
rep
mov
inc
push
out
push
push
filds
push
lock
into
inc
ret
or
mov
mov
jle
scas
xor
les
inc
aaa
das
shlb
and
cmp
xor
dec
inc
cmp
cmp
jmp
jmp
rsqrtps
sbb
jno
fnstsw
outsb
rorl
out
jp
inc
sbb
or
incl
dec
jb
sub
and
les
imul
push
pop
lret
call
jmp
es
mov
mov
xchg
push
divl
dec
sar
outsl
in
xchg
or
enter
rolb
lcall
and
jns
jle
cmp
mov
ja
xor
loop
push
cli
incl
jl
pop
push
add
std
lods
ss
inc
nop
mov
jecxz
inc
loop
ja
fists
imull
inc
sub
pop
enter
sbb
std
push
fldenv
xchg
adc
or
out
aaa
cld
or
mov
cmp
lahf
push
jae
cmp
ljmp
mov
jns
fidivs
sub
dec
out
pushl
loopne
enter
outsb
mov
mov
mov
inc
sbb
shlb
cwtl
outsb
push
inc
enter
mov
inc
xlat
shrb
pop
adc
jge
cmc
push
fdivr
add
pusha
adc
outsb
xlat
xor
ss
adc
xor
je
xor
add
and
jge
adc
stos
fistpl
sub
jno
xchg
popa
pop
xor
repz
jmp
dec
sbb
pop
ljmp
jo
xchg
and
sbb
mov
call
push
sub
sbb
rorb
js
aas
stos
divb
outsb
sbb
or
bound
add
xchg
aaa
outsl
jg
imulb
inc
jbe
repnz
loopne
call
lret
mov
gs
addr16
sub
xchg
mov
dec
cmpsb
sar
ja
xor
test
sub
cwtl
dec
cmpsb
and
jp
fbld
sbb
loope
dec
lods
pop
decb
mov
jp
dec
pop
lods
mov
push
popa
add
jmp
dec
dec
in
inc
or
rcrl
mov
loop
enter
aad
clc
push
sar
aaa
jecxz
push
adc
out
aad
out
pop
rcll
add
rcl
fmull
inc
push
cld
out
cld
stc
stos
lret
int3
jno
add
test
jo
jbe
fists
repz
fistl
pop
mov
push
outsl
inc
out
icebp
inc
lock
cmc
or
adc
movsb
js
js
ret
call
xchg
stc
popa
fildll
cmp
shrl
stos
aas
cld
aaa
jl
push
push
ds
sbb
pop
adc
stos
lahf
dec
notb
in
add
jmp
int
out
dec
repnz
xchg
xchg
adc
pop
loopne
faddl
insl
mov
ljmp
pop
shrb
outsl
shl
outsb
enter
xchg
decl
pushl
push
insl
jle
clc
push
fldt
adc
xchg
xchg
fcmovnu
pop
lds
stc
pop
out
lods
stc
int
jmp
xlat
push
filds
or
lods
dec
add
rolb
mull
flds
jb
inc
pop
adc
das
clc
outsl
lcall
inc
ja
divl
jmp
jg
jmp
jge
in
jecxz
shl
into
leave
loopne
or
xchg
adc
cli
ds
sbb
pmaxub
cmp
insl
jg
ja
mov
enter
insl
out
inc
mov
mull
or
xchg
fnstsw
fadds
xchg
xor
sub
adc
push
pop
pop
movsl
mov
dec
out
pop
jle
jg
fcomip
out
adcl
fs
fsqrt
mov
int
sbb
inc
std
es
fs
jecxz
fwait
decl
jg
add
fwait
cmp
vpackuswb
mov
jmp
int3
jg
inc
stos
ja
xor
push
pushf
scas
cli
mov
fbld
add
and
dec
adc
insb
leave
jns
mov
das
mov
dec
fcoml
add
fsubrl
enter
sarb
lcall
sti
into
rorb
out
push
ret
sahf
pusha
xchg
in
add
leave
and
and
mov
push
add
jbe
pop
sti
std
gs
jnp
push
push
sahf
jmp
icebp
cli
dec
lods
repz
jl
adc
push
push
call
cld
xchg
lret
into
jecxz
nop
dec
movsb
xor
push
lret
jmp
aad
jae
popa
pop
cmp
pop
cli
mov
ljmp
mov
jo
pusha
jae
arpl
xor
shrb
and
cltd
pop
add
ja
fldenv
sub
out
adc
in
fsubrl
loope
jge
shlb
inc
ss
mov
xchg
inc
mov
and
mov
sub
sahf
push
incl
cmp
sbb
stc
cmp
incl
jo
js
sub
pop
mov
jne
and
insb
adc
mov
xor
jl
dec
mov
outsl
clc
call
insb
dec
leave
mov
mov
lock
ja
xor
ljmp
int
stos
aaa
movsb
cmp
push
and
or
gs
mov
inc
push
test
push
xchg
xchg
scas
xor
stc
inc
scas
and
inc
cmp
xor
lahf
mov
inc
jns
pop
jg
pusha
xchg
and
arpl
rcrb
dec
xor
sub
in
jo
mov
call
mov
xor
mov
cld
jg
mov
pop
nop
mov
pusha
inc
ja
or
jge
mov
jle
cmp
cmpsb
decl
jne
test
mov
fildl
repz
xchg
jno
cmpsb
incl
push
sbbl
mov
leave
popa
das
gs
mov
mov
add
sarl
loope
mov
neg
push
push
adc
inc
cmp
lcall
add
push
inc
sbb
jnp
aaa
sbb
imul
mov
inc
jbe
jnp
push
insl
push
popf
outsl
sar
xchg
call
adc
gs
jcxz
jo
ss
pop
lds
jbe
call
inc
and
mov
outsl
cmp
negb
imul
dec
lret
push
push
pushl
push
out
out
dec
add
aas
shll
sub
inc
push
hlt
stos
bound
lcall
fdivl
lret
pop
or
or
and
pop
mov
sub
lock
jno
outsl
dec
xor
pop
jp
pusha
or
or
dec
inc
add
stc
xor
dec
jns
and
mov
sbb
cmc
lcall
popf
mov
ds
xchg
jle
ret
dec
mov
out
test
gs
dec
mov
into
jl
out
sbb
add
stc
or
cmp
xor
shlb
cmp
cmp
jge
add
push
sbb
adc
sub
pushw
shrb
cli
inc
loopne
nop
xchg
jbe
in
push
int3
out
dec
in
ja
push
in
jbe
rcll
dec
loope
jp
xor
mov
out
push
clc
push
aaa
mov
insb
fldcw
cli
sub
push
jge
call
push
ljmp
cmp
enter
rcrb
pushl
jmp
push
xchg
shrb
push
movsl
xor
imul
jae
aaa
adc
inc
jo
sbb
out
pop
ret
loope
je
loop
push
adc
fdivl
pop
sub
jno
lea
push
pop
stc
ds
mov
xor
add
out
faddp
mov
xlat
ljmp
xor
and
inc
push
inc
dec
fiaddl
cmp
jle
loope
mov
xor
mov
fs
test
loope
ds
fwait
loop
outsl
clc
ljmp
xchg
mov
xor
mov
pop
jecxz
notb
les
lcall
rolb
adc
sbb
popa
dec
sub
dec
ret
pop
std
sbb
jg
inc
in
xchg
xchg
pop
les
adc
cmp
pushf
int
push
push
sti
lea
aas
dec
dec
cmp
mov
jge,pt
inc
je
and
jle
sub
outsb
cmp
xor
sub
jg
lods
mov
xor
add
leave
xor
cld
call
and
jns
push
push
mov
sbb
jo
addr16
jl
pop
inc
cld
jmp
clc
sub
sub
lods
lcall
xchg
ss
js
repz
cmp
insb
lret
data16
sub
popf
cmp
pop
adc
fs
or
xchg
adc
xor
lods
das
lods
pop
sub
decb
xor
lret
sbb
adc
scas
fisubrl
xchg
and
adc
and
mov
popa
mov
shlb
xor
adc
out
nop
adc
adc
ljmp
push
mov
cmp
add
ljmp
push
inc
dec
push
mov
mov
and
fdivrl
sar
mov
xor
jecxz
popa
add
int
outsl
push
xor
mov
inc
daa
loope
cmp
test
pop
push
imull
dec
test
in
or
xchg
add
loopne
aam
ljmp
inc
jp
std
aas
arpl
out
jo
incl
push
inc
out
and
cli
or
sbb
dec
jbe
dec
push
jmp
xor
leave
sbb
into
jmp
sahf
sub
push
mov
cmp
mov
jecxz
mov
lea
sbb
imul
pop
pop
xor
xchg
stos
test
ret
movsb
push
adc
mov
jle
cld
test
sbb
pushl
cmpsb
ds
fs
pop
jne
pop
pop
and
stos
stc
leave
sbb
lods
pop
pop
mov
iret
mov
es
pusha
test
mov
push
insb
out
test
cld
rcr
fisubs
outsl
mov
dec
test
ljmp
les
xchg
into
and
add
cmp
stc
sbbb
mov
add
or
into
xor
mov
xor
sti
cmp
pop
sub
dec
xchg
pop
pushf
sub
test
sbbl
adc
add
iret
and
loop
add
lods
add
std
and
incl
jo
sti
sbbl
mov
insl
stc
and
js
jne
outsb
xchg
and
decl
cmpsb
aas
jno
lea
ja
xchg
jg
imul
std
push
lahf
pop
dec
jp
adc
scas
or
or
mov
push
inc
jae
pop
daa
imul
bound
push
inc
mov
mov
and
incl
insl
gs
ret
js
mov
xchg
inc
inc
shrb
pop
mov
arpl
sub
sbb
jmp
ljmp
xchg
mov
aaa
jne
adc
mov
push
cli
cmp
jg
incl
dec
std
xchg
das
mov
jne
imul
call
inc
pop
cmp
arpl
xchg
popa
popa
adc
ljmp
inc
xor
inc
mov
fcompl
mov
cli
lcall
movsl
inc
lcall
push
push
dec
mov
push
hlt
mov
add
aaa
xor
jge
jno
push
pushl
dec
pop
xchg
jo
and
in
jl
push
or
jge
jb
jle
fs
jg
dec
fucomip
jmp
bound
fwait
adc
jns
cmp
pushl
pop
call
repz
dec
pop
inc
daa
les
insb
gs
add
sahf
fldl
sbb
and
jecxz
dec
or
pop
xor
daa
xorb
pop
enter
fsubrs
or
lcall
push
mov
xchg
and
out
movsl
xlat
xchg
mov
mov
loope
dec
jge
mov
test
call
inc
inc
cld
or
inc
leave
lods
xchg
add
push
out
inc
mov
jmp
sbb
dec
xchg
mov
call
jg
jl
jno
mov
push
shlb
push
sbb
adcb
mov
pop
inc
mov
lods
jge
cmp
and
ss
xchg
jecxz
ja
lock
or
xor
test
push
jb
lcall
sti
mov
inc
ret
scas
jecxz
inc
jbe
or
sub
xor
and
mov
fdivrp
jg
lock
fldenv
adc
lahf
jl
loopne
outsl
pop
call
jge
or
pushl
dec
rclb
in
push
aas
sbb
inc
cmc
or
mov
cld
scas
xchg
mov
jle
notb
adc
and
incl
lahf
idiv
pop
out
push
push
repnz
adc
inc
fstpl
test
inc
add
sbb
pusha
rclb
cmp
cmpsb
adc
mov
jecxz
jle
flds
push
orb
inc
xor
push
xchg
jg
fs
push
mov
cld
xchg
xor
jns
out
out
incl
dec
sbb
in
daa
movsb
push
push
jp
and
xor
repz
call
xor
loop
pop
pop
mov
push
inc
cli
out
pop
rcrb
add
jno
out
into
inc
icebp
adc
add
adc
mov
jnp
add
std
cmp
lea
sub
mov
addb
cli
cmc
mov
mov
push
out
into
stos
lcall
jns
inc
out
imul
mov
fcomip
ljmp
mov
loope
push
fldcw
in
push
inc
call
sti
push
popa
lds
ljmp
out
adc
pop
ja
lcall
ret
xor
in
or
jmp
out
lea
mov
sti
sub
mov
lcall
mov
ss
dec
cmp
js
sub
decl
cmp
fildll
sbb
movsl
and
mov
lcall
andb
out
jb
mov
push
add
call
jne
cmp
test
xchg
adc
add
xor
popa
ds
ret
sub
mov
iret
mov
push
adc
mov
lods
ret
ljmp
jp
mov
jle
or
mov
sbb
stos
lcall
inc
mov
int
pop
inc
shlb
xor
or
hlt
aas
lods
jp
add
adc
mov
xchg
or
adc
or
out
lods
popa
xlat
sub
outsl
mov
add
dec
or
pop
jp
into
jo
ds
out
jle
push
pop
jg,pn
incl
stc
js
and
in
pop
ret
inc
out
jns
mov
icebp
dec
mov
aas
mov
nop
mov
add
ljmp
sbb
dec
rorl
xor
repnz
jae
jo
lods
sub
mov
sbb
xchg
ss
mov
pop
mov
scas
adc
lods
test
pop
and
mov
mov
enter
inc
mov
inc
sub
ja
sarl
mov
lds
lcall
mov
push
sub
es
jne
icebp
sub
cmp
mov
insb
sti
push
ret
push
les
popa
imul
icebp
pop
sbb
int3
fdivl
fs
cld
fwait
icebp
outsl
or
push
pusha
mov
mov
pop
push
inc
pop
in
pop
incl
out
sbb
ror
mov
clc
cmp
sub
insl
pushl
pop
pusha
add
xor
pop
negl
xchg
fildll
and
xchg
mov
cmp
jl
adc
jns
pushf
mov
lock
jecxz
inc
jp
jo
jb
movsl
cmc
popa
xchg
mov
bound
adc
ljmp
sbb
aam
outsb
fistpll
jp
inc
test
cltd
call
addb
hlt
mov
push
dec
or
or
loope
outsb
adcw
cmp
cmp
xchg
push
mull
dec
jo
xor
mov
mov
mov
std
cmp
push
xor
push
ds
adc
cmpsb
push
decl
sub
inc
jge
int3
dec
or
addr16
mov
adc
cmp
ljmp
mov
cmp
int
inc
cmc
insb
scas
jge
pop
jb
stc
jle
jmp
jnp
popa
push
loop
sub
addr16
cmp
das
dec
es
jp
stos
pop
xchg
hlt
mov
and
dec
icebp
lret
js
xchg
fists
jge
int
pop
inc
push
cli
push
pop
popa
movsl
push
xchg
scas
lcall
jle
and
dec
fucomi
xor
and
pop
lret
call
or
lcall
push
sahf
fisubs
jl
insl
shlb
iret
xchg
lock
xor
loope
inc
test
ficoms
pop
push
adc
jg
out
mov
hlt
xchg
mov
pop
or
push
and
lods
push
jle
pop
xor
pop
inc
xchg
shlb
repnz
push
lcall
jmp
xor
sub
int3
push
adc
jne
sbb
cltd
or
push
add
and
add
mov
add
cmc
stos
pop
add
sbbl
push
xchg
fimuls
inc
bound
add
out
scas
insl
test
xchg
or
sub
fstl
imul
mov
nop
ja
push
in
addr16
cli
mov
push
arpl
xchg
push
dec
out
sbb
sub
jp
jle
cmpsb
scas
mov
ret
or
push
iret
aam
fsubrs
hlt
mov
stos
aam
in
out
leave
lock
loop
cwtl
stos
adc
and
mov
jo
dec
jo
mov
imul
bound
shrl
mov
fidivrl
dec
pop
mov
ret
inc
ljmp
cmpsb
int3
add
and
test
xor
std
inc
movsl
outsb
aas
popa
std
jb
shll
sub
ljmp
arpl
or
cltd
mov
shlb
pop
xor
pop
push
mov
rcll
xchg
imul
outsl
jp
stc
scas
hlt
adc
dec
sub
adc
shll
pop
cli
jmp
testb
sbb
and
inc
pop
jge
pop
std
in
imul
fidivrs
jno
insb
inc
pop
cld
out
pop
xchg
lds
pusha
outsl
jno
jp
loopne
sub
out
sti
jp
pop
xchg
adc
idiv
push
jne
inc
fldt
sub
aad
jmp
int
lcall
push
sahf
aam
push
scas
sbb
mov
pusha
add
div
inc
adc
pop
mov
mov
cmpsl
dec
test
pushl
das
jecxz
jl
cmpb
or
mov
xor
push
inc
mov
push
dec
call
mov
sbb
movsl
lcall
aas
insl
icebp
test
pushl
and
dec
and
sbb
insb
rcll
clc
mov
inc
lret
icebp
js
or
xor
pop
sub
jae
stos
adc
loopw
adc
push
es
cmpb
adc
push
push
in
inc
imul
jp
lret
addb
inc
push
movsb
dec
ljmp
cmc
jg
stos
cli
and
adc
sub
data16
sar
xchg
pushl
fs
add
mov
sbb
aas
in
pop
sbb
mov
adc
adc
xchg
in
cmp
shll
pop
cmpsl
addr16
lret
clc
adc
loopne
pop
jecxz
jp
pop
lods
xchg
aas
xchg
mov
filds
xchg
sbb
dec
aaa
into
mov
mov
nop
cli
mov
and
out
inc
int3
mov
jmp
jbe
fwait
sbb
arpl
arpl
sub
popf
xchg
and
fs
out
in
xchg
push
dec
stc
mov
pop
inc
frstpm(287
dec
pop
lods
xor
push
jmp
inc
lret
mov
mov
jge
xor
mov
ret
fwait
xchg
scas
neg
fsubrl
ljmp
daa
sarl
lret
into
in
scas
fcomip
repnz
hlt
xchg
pusha
jmp
loopne
cmp
and
or
stos
stos
scas
mov
fidivrs
xchg
push
pop
out
mov
out
out
inc
in
les
mov
add
push
mov
lods
enter
jp
lds
jmp
arpl
mov
xchg
jnp
popa
fadds
xor
divb
outsb
popf
cmp
jnp
psubsw
push
lahf
push
mov
push
mov
enter
ljmp
sub
cmp
scas
xor
dec
mov
movsl
cmpsl
and
push
mov
pop
adcl
push
cs
fs
jl
lcall
test
gs
and
mov
out
std
dec
pop
or
fldcw
jb
andb
push
bound
call
sbb
sbb
das
ret
xor
adc
xchg
out
imul
or
sub
lcall
jl
fcomip
pop
les
adc
push
mov
data16
dec
inc
mov
jns
dec
push
les
push
les
insl
popa
and
jle
jne
sahf
adc
leave
or
xlat
test
mov
movsb
rorl
test
mov
jns
xor
sbbl
mov
lret
test
push
ss
adc
test
ljmp
stc
cs
into
stos
add
push
sub
aam
push
push
jmp
inc
or
xchg
adc
test
sub
xchg
adc
xchg
shlb
jp
int
jl
sub
jmp
cmp
and
fs
sti
and
add
sbb
mov
dec
mov
pop
dec
in
pop
inc
std
adc
ljmp
cmp
nop
test
cs
sub
fwait
mov
cmpsb
sbb
sub
push
pusha
pop
cmpb
jnp
gs
mov
jns
push
inc
inc
lods
dec
shrb
inc
shrl
call
or
scas
pusha
sahf
leave
adc
xor
int3
cmpsl
mov
ljmp
dec
hlt
xchg
add
ja
lcall
in
pop
cmp
mov
mov
mov
mov
dec
pop
ret
xor
adc
call
cwtl
test
stos
bound
sbb
mov
jns
insl
mov
loope
test
stc
mov
int3
stos
sbb
lcall
and
scas
outsb
sbb
jg
shlb
xchg
and
popf
and
sahf
in
jge
xor
jg
rcrl
dec
push
pop
pop
mov
mov
test
ret
cmpsb
cmp
popf
cltd
sbb
test
cmp
adc
aas
jle
pop
nop
and
sarb
lcall
and
mov
pop
adc
or
imul
lret
or
outsb
dec
cmp
pop
add
mov
int
inc
inc
stc
popf
jle
subb
pop
pushf
gs
mov
inc
add
decl
dec
add
int3
pop
jbe
push
ret
xchg
sahf
enter
adc
push
cmp
xchg
ljmp
push
sbb
jo
je
mov
ss
or
lods
adc
das
gs
bound
xor
popa
imul
fs
xchg
cltd
pop
dec
aaa
pusha
xor
dec
mov
jbe
mov
in
pusha
cli
cmpb
mov
outsl
mov
jle
fbld
adc
aaa
lahf
jle
movsl
scas
add
addr16
inc
dec
cmp
pop
add
cmp
jge
xchg
ret
push
jo
orl
decl
fwait
jae
mov
stc
test
xorw
xchg
bound
ljmp
fdivp
pop
daa
sti
mov
push
push
dec
mov
jge
out
inc
jmp
leave
inc
mov
cmp
stos
dec
sub
and
mov
ficomps
xchg
cmc
mov
cwtl
pop
lret
mov
scas
cli
jg
add
fdivrl
mov
add
ja
cmp
test
xor
cs
fcomip
mov
stos
shlb
daa
mov
push
xchg
fsts
mov
aas
jp
mov
xlat
outsl
dec
mov
gs
dec
xor
fcoms
scas
cmpsl
mov
push
cmp
jmp
sbb
add
insb
xlat
mov
and
lods
dec
es
and
data16
mov
ljmp
imul
dec
fwait
dec
je
sbb
dec
nop
pop
std
mov
inc
arpl
cmp
inc
nop
shlb
pop
pushf
ljmp
xchg
cwtl
sbb
dec
jmp
mov
sahf
push
push
jno
aad
test
adc
lret
mov
scas
imul
dec
dec
xor
mov
data16
cmp
mov
addr16
sbb
movsl
cmp
call
dec
popa
push
into
in
dec
dec
jp
ja
push
sarb
loop
mov
and
aad
addr16
mov
push
sbb
and
add
popf
inc
push
aaa
lcall
insl
insb
test
mov
stc
movsl
xor
xchg
push
sti
pushf
sti
pop
jle
ret
pop
ljmp
test
mov
iret
mov
mov
push
loop
movsl
pusha
pop
je
in
mov
xchg
or
jmp
cli
jmp
or
jnp
out
xchg
ljmp
nop
ret
out
jno
stos
lcall
leave
mov
int3
ret
movsb
xchg
mov
fwait
mov
call
mov
cld
mov
sti
mov
mov
mov
stos
fdivr
test
fdivrs
outsl
mov
stos
mov
psubusw
movsb
fwait
jp
rol
mov
pushl
notb
shr
mov
xchg
adc
fcmovnbe
cmpsl
scas
xchg
test
mov
mull
push
mov
mov
inc
ja
lock
mov
scas
mov
cmp
jmp
lock
inc
dec
xchg
cmpsb
into
fwait
mov
push
lret
adc
jb
or
mov
push
imul
std
mov
cmpsl
mov
cmpsb
inc
insb
add
stos
xor
cli
mov
daa
jae
sub
lcall
ljmp
out
jge
xlat
addr16
or
push
addl
mov
and
loop
pop
decl
mov
dec
push
gs
stos
es
lods
addr16
jne
pop
mov
jns
cmp
sar
incl
cmp
lods
mov
inc
xchg
icebp
xchg
cmp
mov
pop
inc
mov
imul
cwtl
lds
pop
idiv
aas
dec
lahf
xor
test
bound
pop
adc
aam
decl
js
inc
addr16
jle
mov
dec
lret
test
popf
cmc
and
mov
push
pop
jmp
jne
jmp
ret
cwtl
jmp
inc
sbb
xchg
mov
rorl
loop,pt
mov
cmp
imul
inc
xchg
adc
mov
inc
lcall
push
jmp
das
push
xchg
mov
push
clc
add
mov
or
dec
fst
ljmp
cltd
outsb
dec
pop
mov
enter
jp
aas
movsb
in
incl
inc
fs
lahf
mov
jbe
mov
dec
jo
fbstp
cmpsb
inc
mov
inc
dec
shll
push
inc
pop
mov
jl
cld
ljmp
mov
dec
mov
stos
add
dec
push
jmp
lret
pushl
pushl
pop
in
pop
dec
aas
outsl
mov
outsl
gs
sub
or
mov
scas
inc
fisubrs
xor
nop
jae
jno
pop
jb
mov
push
xor
dec
ljmp
in
jnp
xchg
mov
cmpsb
outsl
dec
mov
xchg
pop
xor
icebp
das
push
es
mov
mov
pop
push
sbb
dec
pop
mov
scas
jns
in
fidivrl
jne
mov
mov
repz
ja,pt
cwtl
repnz
testb
mov
sbb
push
incl
popw
imul
incb
xchg
repz
adc
jmp
bswap
sub
dec
push
stc
popa
dec
jle
imull
call
loopne
arpl
add
jno
cmc
xchg
dec
pop
mov
dec
xor
out
sahf
pop
push
out
sbb
movsl
add
mov
add
pop
or
or
daa
add
rorb
mov
imul
and
adc
and
js
movsl
or
call
mov
sub
mov
cmp
and
and
test
cld
cmpsb
sbb
xor
decb
mov
sub
pop
ljmp
fwait
or
mov
mov
mov
les
cli
gs
and
lods
or
outsb
sbb
scas
std
aaa
lods
jg
jle
movsl
cmp
xchg
mov
pop
sti
stos
cmp
lcall
incb
inc
mov
decb
popa
cli
add
mov
cmp
push
out
mov
aad
imul
hlt
enter
ljmp
pop
jecxz
ficompl
inc
repz
ljmp
inc
fidivs
inc
insb
pop
lds
jo
push
dec
jecxz
mov
pop
cmpsb
insb
cmp
out
cmpl
bswap
dec
cmc
jge
jl
fdivs
mov
cli
push
loope
fs
cld
pop
in
je
lret
xchg
call
jp
inc
vpunpckldq
adc
out
xchg
dec
push
int3
sub
mov
push
repz
scas
mov
je
data16
in
das
shrb
les
push
push
jne
arpl
mov
jbe
push
cld
cmp
inc
mov
cmpsb
lcall
sub
in
xchg
mov
dec
dec
out
push
push
filds
and
and
dec
adc
jbe
dec
data16
daa
js
push
inc
xchg
jae
into
dec
pop
lds
clc
pushl
jp
dec
aas
inc
and
es
imul
outsb
inc
xchg
add
test
les
mov
repnz
pop
orb
pushl
xchg
sub
push
sahf
leave
cs
out
push
adc
inc
or
mov
dec
call
incl
jns
dec
mov
in
test
mov
xor
push
cwtl
aas
insb
loope
movsl
fs
movsb
aam
jl
mov
test
cltd
sbb
inc
je
stc
lcall
lea
subb
shrl
lds
aad
adc
cmpl
xor
fildl
xchg
outsb
sub
or
fadds
sbb
insl
jmpw
imul
jmp
ljmp
inc
test
cmp
outsl
push
jne
sub
jb
cli
int
dec
push
pop
popw
frstor
jb
cmp
iret
push
leave
inc
out
push
and
cli
das
out
sub
xor
mov
pop
fsubs
inc
pop
ja
inc
cmpsl
dec
arpl
mov
mov
imul
xchg
xor
fs
jb
inc
sahf
ljmp
push
xor
je
outsl
or
imul
js
mov
cwtl
add
decl
lock
imul
adcb
cmp
jb
test
decl
pop
push
insb
cltd
jno
lea
ss
js
adc
mov
pop
sub
mov
call
mov
sub
sbb
mov
movsb
mov
out
cs
imul
mov
std
outsb
shll
sbb
mov
mov
lods
adc
push
ret
ret
mov
xor
cli
lcall
in
aas
addr16
or
xchg
cmpsl
inc
cmpsl
jg
sbb
sbb
sbb
mov
gs
decl
enter
stos
or
lea
push
gs
push
adc
sub
jp
dec
dec
movsb
pusha
imul
outsb
xchg
push
subb
jp
mov
xor
inc
fstps
mov
jb
inc
sar
dec
mov
mov
cmp
cmp
lods
ja
xchg
cmp
out
cmpsb
imul
int
mov
dec
cmp
jg
incb
popa
sbb
int3
sub
or
sahf
mov
mov
test
aas
pushf
adcl
mov
adc
mov
mov
mov
cmp
out
xor
lock
jnp
inc
jg
cs
add
mov
or
fisubl
mov
dec
popa
aam
imul
scas
les
sbb
fnstenv
adc
decl
pop
pop
pop
xchg
out
pop
std
xchg
pop
push
inc
push
frstpm(287
push
imul
outsb
outsb
movsb
test
decl
bound
jns
insb
cmp
mov
dec
xchg
and
inc
mov
testb
or
aaa
shlb
cmp
mov
jp
js
incl
add
repnz
aaa
insb
jp
mov
push
push
std
call
ret
daa
movsl
cmpsl
xchg
fs
test
jo
std
pop
je
pop
sarb
xor
decl
sub
mov
mov
adc
jb
fistps
inc
jb
jns
xor
decl
in
mov
test
bound
sbb
incb
mov
push
movb
imul
cmp
mov
jmp
inc
inc
lea
dec
xchg
insl
and
mov
jmp
sub
lods
push
adc
sub
push
arpl
cmp
out
push
dec
hlt
in
add
sbb
jl
shll
aaa
cli
xor
cmp
mov
lret
xor
mov
xor
adc
ljmp
dec
stos
push
dec
sti
cltd
inc
or
inc
cmp
outsb
cli
call
loop
adc
cmpsl
insl
mov
adc
add
push
push
jp
cmp
ljmp
add
and
loop
cwtl
test
ds
imul
jmp
jbe
sub
jnp
pop
leave
cmp
stos
fwait
mov
test
xchg
push
mov
cs
push
push
sbb
sbb
sbb
sti
pop
imul
sar
jmp
add
ds
std
and
cs
les
fwait
inc
adc
sahf
dec
loopne
decl
fiadds
mov
popa
test
or
clc
sbb
out
ja
adc
and
incl
and
and
xor
pop
rolb
cmpsl
nop
fsubrl
jb
aam
push
add
cmp
cmp
sbb
xchg
shrl
pusha
js
in
cmpsb
or
mov
loop
inc
inc
cmpsb
jle
sub
dec
cmp
cmp
sar
push
out
mov
xor
sbb
decl
std
xchg
scas
cli
into
shlb
mov
insl
rcll
xchg
into
add
jmp
test
testl
popa
xchg
push
add
pop
bound
jae
aas
clc
pop
out
scas
movsl
imul
push
xor
inc
pop
clc
imul
stos
hlt
jae
push
xlat
sub
dec
xor
inc
dec
jno
std
adc
add
adc
pop
jmp
lcall
call
pop
jnp
pusha
int3
add
in
jae
out
aas
push
sbb
jno
pop
ljmp
xchg
in
pop
insl
gs
ret
sub
add
push
mov
rorl
call
mov
jp
push
dec
xor
arpl
jns
loope
pop
lcall
mov
aam
inc
dec
pop
aas
movsl
inc
arpl
jle
jl
lret
sahf
cmp
push
lods
add
sbb
cmp
or
mov
std
incl
pusha
dec
jne
jge
inc
das
jbe
push
dec
push
ljmp
inc
enter
add
icebp
jg
push
pop
movsb
icebp
pushl
arpl
ljmp
inc
lods
jg
or
add
lcall
jae
fs
mov
xchg
dec
inc
pop
cmpsb
jge
les
jle
add
movsl
orl
push
mov
imul
pop
fbstp
lock
inc
aas
cmpsl
push
dec
jnp
jae
jns
rcr
and
push
scas
dec
addb
scas
icebp
out
mov
push
jg
ds
push
insb
push
fbstp
pop
pop
xchg
jg
out
dec
sti
das
dec
imul
and
mov
inc
insl
pop
fwait
jmp
adc
scas
fbld
xor
inc
repz
inc
jbe
and
scas
enter
mov
mov
repz
adc
add
cmp
xor
ja
mov
test
call
das
mov
pop
mov
push
jb
sub
mov
ret
xor
loope
pusha
shl
add
sbb
ljmp
js
push
pop
sub
dec
pop
sbb
or
into
adcl
ja
test
fidivrs
lcall
pop
test
pop
adc
inc
loopne
mov
sarb
leave
mov
fsubrl
cld
cwtl
lcall
mov
xchg
mov
jb
ss
pop
jbe
pop
pop
jb
jae
sbb
xor
and
mov
popa
icebp
or
sbb
add
lock
add
dec
pop
mov
orb
scas
xchg
loope
lcall
lock
in
adc
or
jecxz
ret
mov
lea
cli
xchg
ss
adc
xor
lods
fists
push
sbb
cli
and
ss
mov
jb
pop
stc
nop
pop
test
js
dec
cmp
lcall
and
pop
mov
lea
cmp
stc
jbe
sbb
imul
jle
andb
fwait
xchg
cld
cmp
sub
adc
test
clc
or
incl
cld
sub
aas
pop
adc
or
repz
or
ljmp
xor
out
mov
jnp
mov
cmp
xchg
stos
dec
push
enter
and
out
inc
cmp
outsl
leave
mov
xchg
lods
ret
adc
enter
mov
push
out
mov
pop
test
adc
out
inc
fmul
adc
decl
cli
sub
xor
loope
jle
xchg
push
aaa
stos
int3
adc
ret
decl
cmp
mov
push
sbb
leave
mov
push
push
sbb
daa
lods
mov
mov
aaa
pusha
int3
das
jl
xor
adc
fisttps
push
bound
inc
push
adc
pop
push
mov
dec
sahf
imul
mov
enter
in
movsb
xchg
mov
jle
loopne
ljmp
aad
out
mov
pop
sub
out
push
mov
pop
nop
js
sbb
vpsubb
sarb
inc
stos
icebp
mov
inc
cld
sub
out
cltd
lds
sbb
test
lds
std
das
dec
ret
out
push
push
imul
lret
imul
inc
pusha
aas
pop
incl
dec
jmp
cmpsb
fnsave
pop
mov
xchg
inc
push
fsubl
popa
in
test
icebp
jmp
aas
outsb
das
dec
sub
cmc
lock
and
les
pop
sbb
sub
add
or
jmp
mov
add
mov
jne
xchg
inc
cmp
sub
hlt
sbb
or
jae
inc
and
cmpb
cmpsl
push
loopne
sar
sbb
leave
cmp
inc
jle,pn
cmp
or
push
cwtl
cmp
in
adc
popa
lds
inc
fsubl
inc
inc
cmp
or
jb
mov
and
nop
mov
adc
and
fisubl
decl
dec
pop
dec
lds
cld
adc
ret
push
inc
std
and
daa
bound
adc
fwait
call
pop
test
mov
testb
jns
sarb
jp
test
lods
sub
and
stos
scas
fs
dec
dec
and
mov
or
lods
repz
or
call
pop
mov
leave
push
cmp
jg
dec
rorl
jp
push
frstor
push
das
adc
mov
test
fcoml
decl
and
bound
imul
test
inc
sbb
repnz
push
aas
sbb
jmp
ss
cmc
jl
stc
sbb
lods
xchg
movsb
mov
xor
out
loop
popf
ret
sub
outsb
push
jl
jp
add
mov
push
xchg
dec
xchg
jo
scas
jo
sub
xchg
pop
lods
dec
lods
or
call
in
jno
fidivs
stc
jne
adc
add
xchg
in
fcomps
inc
outsb
mov
or
cmp
xor
loopne
in
jnp
mov
aaa
call
std
dec
clc
inc
jp
mov
repnz
and
movsb
inc
sti
sub
test
xor
jge
les
repz
insl
in
stos
add
pop
mov
pushl
add
sbb
fadds
or
cmp
pop
inc
icebp
adc
jmp
incl
nop
in
xchg
ds
int
out
ljmp
push
xchg
decl
call
sbb
and
push
loopne
and
dec
push
daa
mov
mov
mov
mov
mov
loope
jp
jbe
pop
jmp
in
bsf
inc
fs
dec
push
leave
push
jg
icebp
fcompl
sbb
sti
cld
mov
inc
push
xchg
das
push
xor
push
inc
stos
aas
out
xchg
ds
fbstp
mov
js
cmp
mov
dec
pop
jmp
pop
lret
cmp
sbb
cmp
jle
push
cmp
cmp
das
cmp
cmpsb
insl
in
push
leave
xor
fdivrl
mov
and
xor
and
xor
or
cmp
call
jne
popf
data16
and
addl
cli
lods
jle
decl
pusha
mov
int3
sub
cmp
cmp
adc
pushl
cld
jnp
cmp
ds
in
sub
pop
sarb
enter
incl
cli
and
or
sub
jg
daa
push
iret
sub
push
shll
push
insl
add
je
cmp
cmpsl
dec
int
decl
incl
inc
testl
into
lcall
outsb
lret
call
xchg
sub
sub
gs
das
pop
negl
scas
xlat
outsl
add
sti
in
mov
xor
mov
std
mov
and
adc
jo
adc
in
mov
repz
pop
fbstp
sahf
jno
and
mov
add
bound
jg
decl
xor
pop
lock
xor
dec
imul
ds
data16
cmpb
incl
push
inc
jl
popa
jae
fwait
ret
xor
or
stos
mov
jp
in
inc
loopne
scas
popa
xlat
xor
popa
push
inc
xor
and
xor
or
stos
pop
movsb
push
loope
lahf
cltd
adc
sbb
jne
rorb
fidivl
jmp
cmpsb
sub
fs
sbb
adc
pop
sub
ret
fistl
lret
sub
pop
insb
decl
add
std
jb
cmp
insb
mov
and
mov
jmp
or
stos
ja
pop
mov
rorb
mov
subl
decl
cmpsl
hlt
mov
test
push
ljmp
out
cmc
aas
mov
sbb
xor
repz
xor
lret
add
mov
leave
cmp
jne
xor
or
ficoms
jmp
jnp
xchg
adc
ucomiss
push
xchg
std
mov
mov
lcall
and
inc
in
mov
xor
add
jbe
jns
jb
cs
mov
loopne
pop
out
jge
add
js
push
test
pop
add
mov
mov
mov
cmp
fwait
cli
mov
pusha
adc
in
jns
mov
push
inc
adc
and
push
decb
mov
push
insl
and
jg
xor
gs
pop
dec
mov
pop
pop
shrl
push
aas
add
hlt
jg
daa
int3
xchg
int
mov
jb
add
aaa
mov
jge
push
ljmp
arpl
imul
enter
loop
incl
js
cmpb
xchg
mov
cwtl
loop
pop
out
mov
mov
xchg
sarb
adc
jp
int3
mov
xchg
pop
out
filds
clc
mov
out
jle
dec
mov
add
sarl
cmp
add
into
jo
in
je
aaa
add
call
push
mov
out
mov
jae
cmp
sbbb
in
cwtl
sahf
ljmp
ljmp
push
jnp
das
stos
jno
inc
fdivrl
cmpsl
lea
dec
int
mov
cmp
test
push
cmp
jo
cmp
cmp
jbe
jae
inc
xor
and
mov
lcall
or
mov
xchg
or
sub
lcall
jno
cmpxchg
cmp
iret
mov
mov
lcall
add
cmpl
mov
xlat
lcall
dec
adc
pop
shrw
jnp
arpl
push
xchg
push
jne
cs
mov
jno
push
or
and
out
xchg
dec
jae
hlt
xchg
jo
dec
in
aas
push
mov
jne
test
sub
sub
add
lcall
mov
pop
and
dec
repnz
lcall
jns
cltd
jecxz
repnz
cmp
sbbl
pop
cwtl
test
clc
mov
ljmp
jmp
cs
icebp
and
adc
sbbl
xchg
loop
ljmp
ret
jns
fildll
mov
dec
push
push
xchg
arpl
jbe
xchg
clc
dec
lcall
bound
aad
mov
je
pop
icebp
jb
xchg
and
stc
mov
in
aam
pop
fisttps
mov
mov
pop
mov
test
push
pop
lret
push
mov
adc
shlb
cli
inc
lock
ds
nop
mov
sbb
int
ljmp
cmp
in
mov
and
mov
es
lret
dec
jb
xchg
fsts
mov
ret
push
pop
test
sub
push
xchg
mov
in
mov
dec
inc
push
xor
rorb
jle
mov
dec
rcll
sub
aam
js
insb
adc
lcall
mov
cli
andl
xchg
pop
jb
je
orb
ljmp
mov
ljmp
leave
xchg
mov
add
mov
xor
dec
in
xorb
xchg
repz
adc
push
scas
popa
mov
mov
push
rcrb
stos
icebp
fwait
out
mov
mov
insl
xchg
pop
inc
push
mov
in
mov
mov
dec
push
push
and
push
je
jns
aas
jl
cmp
mov
push
xchg
or
sbb
xor
movsl
in
ja
mov
mov
mov
je
mov
xor
lds
insl
jl
pop
add
hlt
fistpll
cmc
popf
jge
push
stos
jae
mov
movsl
push
aad
fdivl
mov
outsl
jmp
pusha
leave
int3
aam
pop
lds
inc
push
or
inc
push
faddl
insb
nop
out
in
out
jb
shrw
mov
je
add
lods
pop
fisttpl
push
lcall
xchg
repnz
pop
testb
dec
xchg
out
inc
stc
inc
out
xor
mov
pushl
push
ljmp
sahf
pop
xor
xchg
jmp
xlat
inc
pop
ficoms
cli
outsl
lds
outsl
rcrb
lcall
dec
jmp
pop
and
fsts
ja
cmc
mov
iret
dec
inc
cmp
dec
push
jl
rolb
mov
sarb
mov
testl
lock
scas
sti
xor
mov
adc
mov
stc
or
stos
into
pavgb
int
fidivs
into
add
ret
cmp
mov
out
jecxz
in
cld
mov
jne
inc
lcall
call
fisubrl
pop
repnz
inc
push
add
push
sbb
mov
mov
jbe
sub
adc
test
out
or
adc
push
inc
adc
sahf
mov
lcall
loope
dec
loopne
pop
sar
fimuls
imul
inc
in
inc
sbb
lcall
mov
jnp
sub
mov
popa
xchg
pop
icebp
mov
lods
jb
cltd
cmpsl
rorl
icebp
je
repnz
cld
push
std
cmp
push
inc
push
clc
cmp
mov
negb
dec
jle
mov
fsin
divb
inc
mov
loope
icebp
insb
popa
fwait
ret
pop
jmp
push
addr16
sub
push
out
lcall
add
lea
cmc
jecxz
popa
enter
sbb
dec
mov
or
mov
fs
adc
mov
mov
cmp
rcl
xchg
mov
inc
jmp
decl
lock
fstl
outsl
in
pop
insb
ret
into
xor
pushf
dec
ret
xlat
xorb
push
test
mov
test
test
aam
je
incl
insl
and
loope
pop
add
jo
or
push
dec
test
cmp
pushl
lret
int3
outsl
push
repnz
jecxz
push
push
notb
cmp
inc
pop
arpl
and
jle
aaa
loop
flds
in
je
mov
xlat
inc
loope
fistps
call
stc
add
inc
lds
push
aas
test
inc
xchg
je
movsl
inc
std
shl
jns
jp
incl
scas
rolb
mov
shll
mov
insl
call
sbb
ss
xchg
loope
inc
in
dec
into
add
ja
or
sub
fbstp
sub
add
xor
leave
pop
push
lock
adc
aaa
inc
xor
mov
daa
outsb
xchg
rcrb
xor
or
sbb
ficoml
xor
orb
pop
inc
js
mov
pushl
ja
outsb
lock
loop
inc
pop
jnp
mov
ja
mov
push
and
cmp
cs
jo
decl
loopne
addb
jno
cwtl
inc
out
jns
pushf
pusha
add
int3
sahf
jg
das
clc
push
leave
data16
popf
fisttps
mov
incl
mov
push
mov
repz
pop
inc
test
cld
loopne
inc
cld
cltd
gs
lds
loop
jne
sahf
shr
dec
mov
push
inc
ljmp
sar
cmp
cli
cs
ficoml
js
rcr
xor
outsb
mov
cli
subb
lcall
xchg
aam
pop
cmp
lcall
incl
mov
enter
mov
xor
mov
repz
arpl
inc
stos
add
inc
pop
je
mov
test
jmp
fcoml
lock
dec
pusha
lret
xor
out
or
jno
add
jp
pop
retw
cmp
loopne
pop
and
mulb
fcoml
pop
fcoml
fbld
sti
sub
loope
rcll
mov
fsubrl
call
mov
dec
xor
mov
or
mov
ret
xor
mov
into
ds
mov
inc
fstpl
hlt
and
movsb
ja
out
sar
ret
in
out
ljmp
out
pop
in
outsb
sub
lea
pop
std
call
push
dec
pop
xor
lret
jg
es
sub
xor
sbb
scas
mov
outsl
es
out
fiaddl
ds
repnz
push
fsubl
jmp
pop
movsl
jb
sub
xorl
in
pop
mov
cli
inc
dec
ret
cwtl
push
ljmp
test
dec
pop
cmp
jb
xchg
scas
test
loopne
jle
adc
xchg
cmc
imul
lahf
inc
sbb
iret
cmpsb
push
icebp
or
xchg
outsb
ret
notb
xor
data16
xor
add
rcr
out
push
push
movsb
cli
push
jg
sbb
cwtl
jne
nop
xchg
movsb
jno
mov
loop
stos
xlat
mov
arpl
imul
outsl
cli
in
jbe
sub
and
pushf
frstor
dec
int
outsl
mov
inc
sti
mov
or
int3
inc
out
xchg
mov
inc
pushl
sbb
imul
cli
or
xchg
mov
stos
ret
cmp
jmp
adcl
daa
mov
mov
push
jne
pop
jne
lcall
dec
sbb
xchg
les
xchg
jecxz
pop
xchg
outsb
dec
scas
fidivrl
mov
imul
out
push
jns
dec
push
mulb
jg
inc
push
data16
fiadds
sub
je
xor
jle
sub
jp
cmp
subb
js
push
clc
push
fistps
lret
cld
outsl
pushl
inc
mov
fisubs
int3
mov
inc
push
xor
jmp
add
adc
xchg
int3
and
adc
nop
xchg
fldcw
in
adc
lahf
cld
aaa
dec
cli
add
cvtdq2ps
add
mov
fsubrl
arpl
das
dec
std
cmpb
push
pop
xchg
or
into
decl
mov
mov
xor
or
cmp
decl
in
jp
dec
inc
pop
inc
je
rcll
imul
insl
fistpl
add
mov
scas
mov
sbb
add
stos
mov
jb
xchg
sbb
mov
mov
call
fwait
scas
add
mov
stos
mov
fwait
pop
pop
aas
ljmp
xchg
jbe
jmp
pop
imul
insl
xchg
push
push
dec
sub
pusha
dec
lods
sub
dec
add
add
movsl
sbb
dec
pushl
push
pop
jmp
jae
movsl
push
dec
mov
fs
xchg
rcll
mov
mov
jno
sbb
dec
lds
push
push
addr16
leave
lea
mov
movsb
icebp
jmp
loop
shrb
push
inc
xor
xchg
sbb
icebp
mov
fisttps
xchg
add
inc
clc
out
es
pushf
adc
xor
dec
push
mov
je
sub
rcl
mov
push
mov
ss
aad
push
mov
push
pop
jg
and
jge,pt
fwait
mov
into
addb
ds
lcall
hlt
ror
xchg
pop
pusha
jo
ja
cltd
icebp
into
jecxz
pop
jno
movsl
shll
cmpl
mov
push
and
repnz
cmpsl
out
sbb
add
mov
call
and
pop
pop
sbb
mov
lods
ss
push
add
push
xchg
mov
sub
jnp
sub
hlt
cltd
push
sbb
fistpll
and
jb
or
test
push
jmp
mov
jo
pushl
call
out
or
pop
ja
mov
sarl
sub
or
andl
insb
jp
es
add
jmp
arpl
ja
mov
dec
jg
sub
adc
fwait
cs
add
jg
inc
dec
pop
lea
dec
jle
push
adc
push
xlat
xchg
push
mov
lcall
mov
movsl
cltd
mov
add
jecxz
add
xorb
add
hlt
incl
sbb
mov
fucomip
movb
clc
or
imul
addr16
mov
stc
into
dec
cld
mov
cmpsb
sti
fnstsw
add
pop
inc
pop
mov
leave
cmp
into
aam
mov
mov
ss
pop
cmp
mov
add
lea
or
mov
jne
mov
cmpsl
pop
or
sub
movsb
lret
testb
call
push
cmp
xchg
or
test
xor
jmp
ljmp
lds
sbb
dec
cmc
test
mov
jl
sar
in
test
xchg
push
clc
es
mov
decb
jnp
aam
cmp
jg
jge
add
jp
lods
aas
jae
mov
sub
add
into
scas
xor
jmp
inc
mov
int3
mov
call
mov
sbb
sub
es
out
push
dec
arpl
sub
scas
std
dec
jmp
adc
lods
lock
xchg
ret
fwait
add
das
adc
adc
int3
mov
sbb
and
decl
fisubl
adc
xor
popa
fdivr
ret
pusha
mov
sbb
add
sbbl
daa
cmp
incl
push
insl
data16
test
push
push
or
jmp
push
push
sub
push
testb
imul
lcall
jns
push
inc
adc
orb
cmp
movl
incl
pop
das
repz
cltd
jo
lahf
add
test
int
mov
push
mov
call
or
incl
mov
dec
jecxz
pusha
lret
jl
outsl
jne
shrl
clc
jl
bound
jecxz
filds
imul
or
pop
mov
push
pop
das
dec
lcall
scas
inc
outsb
dec
lds
orb
int
iret
mov
fs
mov
incl
xchg
scas
scas
stos
icebp
sbb
jnp
incl
jns
mov
xchg
mov
adc
pop
jb
jp
je
cld
pushl
test
inc
enter
inc
mov
jge
inc
adc
pop
dec
sub
decb
push
dec
insl
add
mov
nop
fstpt
adc
cmpsb
lea
xchg
pop
mov
push
push
bnd
je
fwait
jo
and
xchg
mov
jmp
ds
add
fwait
mov
mov
hlt
jg
jl
fst
les
xor
sbb
idivl
std
mov
lahf
lret
fwait
mov
fs
sahf
push
mov
scas
xchg
xor
test
pop
fiadds
jge
mov
pop
loopne
idivw
add
std
das
jle
dec
sbb
dec
jb
es
pop
jmp
sahf
enter
or
push
mov
andl
outsl
aaa
jecxz
pand
lods
add
xchg
cwtl
movsl
cmpsl
xor
mov
mov
shll
scas
mov
ss
imul
cld
add
bound
dec
add
fucomi
loope
mov
insb
ds
sbb
ljmp
add
cmp
sahf
inc
repnz
sar
call
mov
dec
pop
adc
sub
xchg
mov
jno
test
jecxz
push
sbb
fnstcw
enter
insl
sbb
shrl
mov
repnz
dec
bnd
sbb
xorl
mov
jb
push
enter
add
mov
adc
sub
add
mov
je,pt
xor
repnz
addr16
sub
lahf
adc
push
aas
flds
push
add
cli
dec
or
ljmp
call
cmc
mov
jbe
sbb
cmp
fwait
mov
sahf
jno
mov
in
inc
mov
push
rcrl
out
cmpsb
or
fldenv
mov
cli
mov
jg
lcall
stos
test
scas
mov
xchg
mov
mov
dec
jg
and
fs
test
out
pushl
incl
daa
and
test
xor
add
xor
in
jb
sub
adc
scas
fcmovb
lcall
movsl
pop
lret
push
inc
sbb
sbb
insl
popa
sbb
adc
xor
pop
lods
mov
add
fisttps
inc
stos
or
adc
lcall
not
xor
inc
fs
mov
mov
sarb
sbb
push
push
jmp
inc
pop
in
push
rclb
scas
push
les
or
scas
dec
xor
imul
aas
push
add
into
sbb
aaa
decb
mov
xor
into
imul
cli
jae
sub
push
jp
cmp
mov
xor
jb
repz
jbe
lods
sbb
add
sahf
fisubrs
jns
cmpsb
int
push
mov
je
iret
test
jp
cmp
imul
push
add
xchg
push
sub
in
jnp
jecxz
cmp
repz
cmpsb
xor
pop
inc
stos
push
sbb
decl
dec
daa
scas
pop
mov
jl
or
lock
sbb
repnz
imul
jecxz
daa
in
jp
loope
fdivrl
inc
add
nop
int3
mov
pop
sbb
jmp
cmp
lret
inc
pop
xchg
mov
scas
aas
inc
mov
mov
adc
lea
add
rorb
lret
xor
mov
mov
add
incl
inc
stos
sub
and
stos
incl
lea
nop
xor
popf
call
push
sub
gs
pushl
push
cmp
sub
xchg
adc
clc
add
out
ljmp
sub
jmp
and
scas
mov
jmp
sbb
inc
pop
push
int3
and
outsl
jle
call
pusha
es
sub
lret
or
push
adc
fcoms
test
aam
das
xchg
pop
hlt
mov
mov
ljmp
hlt
outsl
aam
cmp
adc
inc
fmuls
adc
dec
push
xchg
movsl
scas
jmp
pop
and
push
sbb
xor
lock
test
scas
push
or
loop
and
fs
dec
jae
lret
xor
and
addr16
mov
sar
incl
xor
cmp
fwait
mov
addr16
mov
dec
push
mov
jecxz
mov
lcall
push
xor
aaa
arpl
notl
jl
xor
pop
into
hlt
pop
dec
jmp
mov
and
xlat
into
hlt
jp
sbb
fbstp
outsl
pop
mov
aas
push
cld
jo
mov
call
pop
add
mov
mov
adc
xchg
arpl
adc
ror
es
sub
inc
cld
test
cmp
call
mov
cld
pushf
lcall
cmc
sbb
push
or
cmpsb
testb
dec
in
cmp
es
push
movsl
dec
shrb
lret
mov
cmc
lret
pop
pusha
and
sahf
jp
out
add
decl
outsb
clc
push
pop
sub
loope
add
nop
add
incl
testb
adc
mov
add
mov
popa
dec
jmp
jcxz
and
xchg
sbb
sbb
add
mov
cmpsb
dec
mov
push
in
push
bound
jns
push
add
rcrl
loop
or
incl
testb
mov
xchg
fists
jp
out
dec
fsubl
test
mov
xchg
lock
mov
pop
adc
aaa
adc
mov
les
adc
xor
stos
push
sbbb
les
pusha
mov
cli
and
cmp
movsb
lcall
test
mov
mov
mov
or
adc
mov
jl
adc
int
mov
dec
fs
mov
insb
cld
adc
add
lret
cmp
loop
cmp
das
sbb
jle
xchg
lcall
dec
out
sbb
clc
mov
fsubrl
jg
cwtl
jno
push
jns
daa
and
pop
ljmp
push
jb
andb
xor
nop
pop
adc
outsb
fs
stc
lock
es
xchg
cltd
xchg
enter
shl
and
dec
loope
test
cmpsb
jg
inc
sbb
sbb
ljmp
out
aam
cmp
ljmp
adc
xchg
add
push
mov
nop
jbe
sarl
xchg
movsl
aad
pop
xor
mov
cmc
add
dec
mov
test
mov
mull
call
jmp
fucom
adc
stos
mov
mov
stos
ja
loopne
rolb
and
movsl
loopne
fimuls
cmp
jns
call
mov
leave
mov
mov
std
sbb
out
stos
inc
into
cmp
jge
les
stos
in
jb,pt
negl
xchg
mov
add
mov
cwtl
mov
int
dec
inc
inc
ljmp
rorl
mov
add
rolb
cmp
pop
les
dec
clc
call
cmpsb
in
sbb
inc
fsts
push
jg
mov
fcmovu
add
xor
mov
and
ljmp
lock
iret
xor
jmp
add
loope
adc
decb
cmp
enter
out
dec
std
push
in
ljmp
sarb
rorb
push
repz
or
jo
inc
add
ds
dec
cmp
ljmp
cli
push
out
sub
and
ds
fsubrs
push
push
loop
clc
push
jne
test
jp
dec
dec
inc
mov
mov
add
incl
aas
mov
ljmp
add
negb
mov
sahf
jns
iret
leave
and
cld
call
test
sub
repnz
xchg
mov
mov
loop
outsb
cmpsb
or
rclb
and
ljmp
aad
repz
cmp
mov
and
mov
aas
icebp
or
or
jbe
ficoml
adc
jb
ds
push
add
push
mov
sub
out
xchg
loope
mov
push
xchg
cli
cld
jg
ret
cmovle
ljmp
loopne
outsb
insb
fistl
jb
lods
popa
xchg
xchg
push
pop
mov
leave
lock
mov
test
aas
mov
out
mov
test
sub
adc
sub
int3
les
mov
mov
insb
pop
cli
inc
push
in
or
into
ds
sub
mov
nop
dec
xchg
mulb
sti
mov
sahf
in
decl
or
cmp
in
pop
into
and
or
lcall
addl
aam
jb
pop
movsb
and
scas
cmp
mov
pop
cwtl
adc
jno
dec
mov
xchg
xchg
pop
xchg
push
push
add
dec
add
or
mov
jb
pop
call
and
ja
pop
jb
cmp
jne
addb
je
or
push
push
jg
mov
dec
rcrl
pop
mov
adc
sarl
test
add
fsub
cmp
pop
pop
cld
add
clc
je
cmc
test
rorl
test
and
jns
inc
shr
scas
jg
lock
and
test
pushf
dec
adc
fwait
out
clc
pushl
lods
ds
test
test
repnz
jmp
notb
aaa
xchg
aas
pop
lret
cmp
scas
jl
xor
mov
xchg
jno
dec
shl
sarb
jae
daa
cmp
fucomp
adc
icebp
mov
fisubrs
xchg
xchg
push
inc
clc
call
das
xor
mov
cmc
xchg
inc
cmpsb
and
fwait
outsl
idivb
leave
leave
sbb
out
xchg
in
aas
ljmp
shlb
add
mov
jp
sbb
call
fistps
xchg
cmpsb
bound
into
repnz
ljmp
ret
in
add
push
mov
sub
cmp
sbb
in
decl
mov
mov
mov
pop
jb
add
into
icebp
dec
or
mov
pop
cmpsb
insl
cs
add
mov
clc
shlb
mov
push
mov
xchg
add
lods
pop
dec
ljmpw
ljmp
test
sbb
mov
lea
mov
add
and
lcall
and
lods
sbb
data16
adc
mov
stos
adc
mov
ljmp
push
mov
push
gs
pop
mov
movsl
cmpsl
lea
and
outsl
fisubs
xor
and
cwtl
stos
mov
dec
pop
test
fnstcw
pop
ds
add
cltd
in
xor
adc
mov
cltd
daa
jl
xor
xchg
shlb
mov
inc
in
test
call
pop
or
xchg
mov
dec
scas
lcall
mov
subl
xchg
gs
pop
jmp
add
or
mov
aam
cld
lcall
cmp
outsl
mov
imul
or
jge
aam
dec
js
pop
addb
test
and
mov
mov
push
mov
mov
add
jne
inc
insb
stos
imul
iret
jb
fs
decl
xchg
cwtl
jb
jo
jg
inc
ret
sbb
jne
push
inc
pop
incl
rep
inc
mov
fnstenv
decl
dec
lret
xor
movsl
xlat
sahf
jb
mov
add
cli
dec
sti
xchg
add
negb
popf
and
aas
pop
or
cwtl
xchg
bound
xchg
cmpsb
cli
push
movsb
mov
xchg
out
xor
xchg
enter
cmpsl
adc
pop
shlb
out
fimuls
push
push
in
xchg
jmp
ljmp
jbe
pop
pop
xchg
scas
test
mov
cld
ljmp
cli
pop
stc
hlt
mov
scas
popa
notb
mov
xlat
jnp
loopne
add
loopne
andl
inc
cmpsb
incl
fwait
pop
xor
pop
lcall
mov
lcall
jle
mov
adc
aaa
or
mov
sbb
das
mov
pop
mov
jo
dec
data16
sub
imul
fdivl
cmc
decl
insb
jl
lods
mov
sbb
imul
movsl
or
cs
lods
pusha
cmc
and
xor
push
sbb
inc
pop
shlb
push
lock
add
pop
jg
repz
and
jle
push
mov
loope
lcall
or
mov
inc
repnz
pop
mov
inc
int
seta
mov
push
fwait
bound
cli
push
adc
divb
lahf
adc
xchg
js
mov
aas
loop
jg
mov
mov
pusha
xchg
pop
iret
lret
rcrb
notl
push
xor
and
popf
jbe
out
or
dec
jnp
scas
push
jl
in
mov
ljmp
decl
lret
xorb
vpmacssdqh
cmp
mov
ljmp
je
adc
push
push
scas
pop
jb
inc
cmp
movsl
out
pop
add
jmp
sub
js
add
adc
pop
add
dec
std
mov
loopne
or
shlb
lea
lcall
push
push
xor
mov
repz
pop
adc
jg
dec
push
xchg
cs
pop
dec
adc
pop
sub
dec
sbb
out
popa
aam
mov
add
jecxz
mov
or
out
jg
ds
sahf
jge
xchg
movsl
or
pop
mov
das
sub
mov
sbbb
add
scas
mov
cmpsb
mov
add
into
mov
ja
lcall
inc
aas
insb
mov
es
stos
outsb
lcall
daa
and
je
cld
jmp
push
mov
cmpsb
inc
jb
xchg
mov
mov
test
and
pop
cmp
pop
jb
push
or
sub
mov
dec
pop
mov
ljmp
jno
sub
call
push
insb
push
push
mov
mov
stos
add
jo
movsl
dec
mov
imul
push
fwait
addb
dec
das
sar
stos
jns
ljmp
scas
setp
mov
sub
pop
bound
mov
xlat
lcall
js
xchg
cmpsl
push
inc
mov
scas
out
rcll
jg
pop
pop
fmulp
or
inc
cmp
sbb
or
mov
push
mov
pushl
cltd
loop
sahf
cwtl
adc
add
mov
inc
xor
hlt
call
pop
push
add
int
sbb
inc
and
call
lods
add
shrl
cs
cwtl
stos
sbb
and
call
and
stos
add
pop
push
push
lret
and
push
cmpsl
push
mov
sar
push
dec
xchg
mov
aaa
and
xchg
add
xchg
dec
and
addr16
std
ret
jge
push
mov
push
mov
mov
test
cmp
jecxz
jp
mov
mov
mov
xchg
scas
out
xchg
mov
mov
sbb
mov
push
adc
push
push
mov
add
ret
pop
cwtl
jns
es
test
adc
mov
fs
rsqrtps
aas
cli
fbstp
adc
add
pop
test
fildll
hlt
ret
push
dec
pop
xchg
add
and
xchg
pusha
dec
cwtl
addr16
in
xor
push
mov
lock
pop
push
xchg
outsl
dec
mov
cmpsb
mov
adc
push
dec
sub
pop
and
decb
loopne
jnp
or
mov
out
fwait
inc
xlat
jg
xorl
sbb
shl
jg
or
add
insb
popa
cmp
jno
mov
inc
and
pop
dec
dec
loope
fnsave
in
pop
hlt
call
bound
sbb
out
pop
push
xchg
xchg
or
shl
and
pushl
inc
jp
mov
pop
and
cmp
dec
lcall
stos
push
inc
adc
jp,pn
push
enter
pop
dec
push
icebp
arpl
enter
pop
lock
jle
lds
jle
icebp
jg
inc
leave
imul
and
mov
outsl
jl
imul
insb
pop
test
stc
inc
adc
inc
cmc
cmp
push
lret
iret
jns
inc
je
xchg
jo
pop
in
push
xchg
inc
pop
push
sub
je
mov
jb
repz
mov
add
inc
jg
icebp
pop
out
cs
inc
jb
iret
mov
addr16
les
cld
jns
pusha
mov
insb
or
push
rcrb
sbb
loopne
mov
push
aam
adc
mov
cwtl
inc
pushf
mov
cwtl
repz
sub
xor
packuswb
hlt
dec
decl
push
mov
ds
sub
inc
xchg
lret
and
loop
sbb
jl
mov
xchg
dec
pusha
cwtl
in
mov
lcall
xor
mov
mov
pop
adc
ret
mov
cmp
inc
mov
aas
movsb
rolb
addl
repnz
fildll
mov
scas
sbb
push
jb
sti
mov
and
xchg
cmc
lods
sbb
imul
ljmp
nop
inc
xchg
cli
and
pop
cmp
movsl
insl
pop
pushl
jbe
sbb
pop
push
push
jp
mov
imul
outsl
mov
push
mov
pushl
outsb
adc
out
inc
push
lods
aaa
pop
sub
out
clc
jg
xor
inc
mov
loope
or
je
std
decl
cmp
push
mov
mov
inc
xor
adc
in
jp
leave
or
das
rolb
xor
mov
mov
gs
ljmp
mov
jg
out
nop
imul
adc
roll
decl
sbb
xchg
push
jp
movsl
ss
pop
add
mov
dec
in
cli
sub
xor
mov
lret
adc
or
into
mov
scas
or
inc
jmp
scas
std
mov
loopne
scas
sbb
lock
mov
aas
cld
pushl
lea
test
push
imulb
jle
jg
jnp
dec
inc
pop
xchg
mov
dec
mov
imul
and
add
clc
test
imul
jnp
outsb
or
cmp
cmp
into
stc
ss
cmpsl
sar
scas
stc
cli
pushl
jl
stc
add
dec
xchg
inc
jns
arpl
call
push
xchg
cmp
das
cli
out
adc
dec
out
mov
fbstp
lods
shlb
loop,pt
pop
cmp
iret
add
jns,pt
loop
aas
inc
rclb
test
push
gs
pop
jle
ret
inc
and
sahf
fdivl
sub
incb
dec
and
jae
push
sar
gs
sbb
push
imul
xorl
dec
leave
or
cwtl
mov
xor
sub
dec
incl
push
stos
jns
movsb
adc
cs
jmp
mov
cmp
stos
ret
ja
fistpll
test
movsl
sbb
data16
pop
inc
pop
gs
jg
loopne
push
leave
ss
fmull
add
pop
inc
outsl
jnp
pop
je
loopne
push
adc
ds
dec
lods
and
inc
mov
adc
call
jp
sub
popl
pop
adcl
push
pop
out
cmc
xchg
data16
fcomip
repnz
mov
nop
pop
jne
ret
stc
push
push
inc
repz
mov
gs
call
push
daa
push
xor
push
test
outsl
fwait
lcall
mov
sbb
aaa
jnp
sub
ret
data16
mov
or
hlt
data16
or
mov
incl
es
inc
sarl
insl
dec
mov
ds
jge
neg
movsl
xchg
mov
lcall
or
rcrb
icebp
push
and
ficomps
add
punpckhdq
inc
jge
jg
jns
cmp
cmp
lcall
inc
jo
ja
repz
and
jb
outsl
jmp
inc
push
add
dec
std
jns
mov
into
cmp
add
jg
test
xor
mov
add
sbb
dec
call
addr16
lret
inc
rolb
jl
pop
imul
ja
ljmp
push
add
popf
icebp
pushl
inc
aaa
dec
sub
stos
lcall
test
mov
dec
cld
mov
cmp
or
sub
xor
push
movsb
lcall
lahf
rorb
sbb
mov
inc
aam
cltd
stos
add
cld
ljmp
sahf
or
cmp
dec
fstl
xchg
mov
ja
adc
mov
std
fisttps
jbe
sbb
and
pushf
cli
mov
jmp
push
fs
subl
imul
aas
dec
in
xchg
jge
push
jmp
mov
mov
call
cmpsb
aaa
jge
add
lcall
jmp
out
lods
sbb
cmp
mov
call
mov
sarb
or
insl
mov
sbb
cmp
aaa
test
dec
push
adc
push
mov
mov
das
clc
cmp
jp
dec
outsb
or
inc
cmpsb
jge
xchg
mov
jmp
and
sbb
test
jbe
sbb
fbstp
push
mov
test
jno
push
pop
fcomps
add
pushl
mov
mov
scas
stos
mov
rcrb
ds
sahf
loopne
xchg
push
repz
lcall
hlt
pop
or
mov
sbb
inc
and
pop
cld
mov
mov
int3
jo
leave
out
add
push
pop
fimuls
imul
fisubrl
pop
mov
mov
adc
mov
adc
sbb
add
adc
gs
nop
lcall
push
stos
xor
xor
pop
pop
mov
ret
add
stos
shrb
in
sahf
insl
in
imul
push
and
filds
mov
adc
mov
xchg
and
lcall
stos
mov
dec
test
subl
push
add
std
incl
pop
inc
arpl
inc
jb
push
inc
and
arpl
shll
dec
hlt
mov
test
cmpb
adc
ljmp
sti
mov
adc
xchg
push
cmpsl
adc
lcall
stc
push
inc
in
push
jb
icebp
mov
lods
jb
pop
sub
mov
cmpsl
cld
test
out
test
inc
mov
mov
movsl
push
lods
dec
inc
mov
sbb
mov
xchg
icebp
test
sbb
addr16
xchg
jg
loopne
pop
xor
outsb
pop
and
push
jl
lcall
cld
mov
jnp
push
jl
jg
pop
popa
mov
xchg
xor
cwtl
mov
test
sbb
gs
xor
outsl
clc
call
mov
jge
orb
sahf
push
int3
lods
cmp
test
call
add
stos
jne
xor
mov
mov
iret
mov
pop
cmp
loope
push
jns
mov
shr
ja
jl
mov
lds
lcall
xor
movsl
xor
popf
repnz
dec
js
add
fldl
in
popf
clc
out
push
push
or
jnp
add
outsl
dec
add
or
lock
sub
pushl
lods
mov
adc
mov
cs
push
imul
nop
mov
push
push
xchg
push
pop
sbb
mov
dec
les
jbe
adc
sbb
push
push
inc
mov
inc
sahf
fbstp
pop
gs
push
push
mov
push
jb
and
push
stos
dec
push
test
mov
lods
mov
mov
cmp
jg
lock
test
pop
shlb
inc
jb
iret
mov
pop
sti
lock
repnz
jne
clc
push
pop
leave
push
ljmp
lahf
lods
xchg
stos
mov
xor
mov
repz
imul
test
decl
mov
cmp
mov
xor
mov
pop
sbb
decl
add
mov
sbb
lcall
sahf
xchg
jo
push
jnp
mov
mov
mov
jge
pop
fwait
cs
nop
fbld
pop
cmp
mov
inc
into
cmp
icebp
aas
lcall
aaa
std
dec
sbb
in
sub
dec
jle
add
lods
cmp
adc
and
clc
jb
rol
push
bound
mov
xchg
cmpsb
cltd
pop
push
inc
jno
sbb
incl
loopne
out
arpl
or
mov
and
mov
pop
pushl
into
ss
sbb
pop
xchg
mov
xchg
xchg
mov
xchg
decl
xchg
pop
dec
and
and
sub
test
sbb
incl
push
mov
xlat
mov
dec
adc
lock
push
mov
scas
add
jmp
xor
mov
cmp
adc
ljmp
cmp
or
outsb
push
fwait
push
mov
imul
pxor
lods
clc
addr16
xchg
out
cmpsb
loope
xorl
fnstenv
outsl
repnz
mov
xchg
lahf
out
xchg
sub
sbb
or
push
sbb
js
inc
std
or
jb
call
shll
dec
js
fstl
pushl
fadds
ja
jo
mov
dec
inc
fstl
mov
dec
pop
xchg
sub
dec
cmpl
js
cmp
cmp
out
xor
jg
dec
inc
data16
mov
dec
mov
xchg
adc
push
push
pop
mov
jge
jns
xchg
mov
mov
or
pop
inc
jo
lret
or
lcall
outsb
cli
lea
xchg
cmp
pop
add
mov
add
out
add
fdivrl
xchg
std
inc
std
out
inc
pop
shrb
mov
lret
je
test
inc
cmpsl
push
insb
dec
hlt
outsb
cwtl
xchg
add
iret
jg
cmp
aam
addr16
mov
jb
scas
or
popa
cmp
bound
test
lock
jge
xchg
push
mov
xchg
mov
in
dec
pop
sub
popf
dec
std
push
shlb
jp
ja
clc
jmp
lcall
aas
mov
insb
xlat
and
out
mov
mov
sub
les
pop
cmpsb
addr16
push
out
pop
adc
xchg
imul
pop
and
mov
insl
push
jg
jo
daa
arpl
into
dec
and
xor
xor
aam
push
scas
mov
js
add
pusha
jnp
movsl
sbb
dec
sub
out
clc
push
push
out
dec
jb
popa
mov
mov
and
pop
dec
icebp
mov
incl
pop
cmp
pop
fwait
mov
mov
mov
filds
xchg
mov
xor
cmp
jae
les
cli
dec
in
inc
stos
jbe
xchg
inc
add
aaa
bound
jns
mov
ret
incl
push
pop
jbe
sbb
dec
dec
outsl
leave
and
lods
xor
testb
xchg
ds
test
jbe
add
lock
push
mov
inc
jp
movsl
dec
cld
pop
sbb
lret
movsl
fwait
jbe
mov
adc
cmpsl
xchg
fwait
mov
inc
push
test
lcall
sbb
pop
sarb
dec
pop
push
push
test
int
pop
jo
inc
sub
mov
push
pop
jecxz
nop
sub
inc
dec
dec
jge
add
inc
incl
dec
das
call
in
js
push
xlat
push
push
xchg
stc
push
rolb
cmpsb
pushl
test
je
das
cmpsb
xlat
jbe
pusha
or
pop
push
lock
mov
xor
adc
pushl
push
loopne
inc
inc
pop
mov
sub
test
mov
pop
test
std
xchg
cs
rcrl
add
add
and
rcrb
push
js
mov
inc
das
gs
sbb
data16
xor
test
into
xchg
pop
aam
cmp
cmp
out
scas
stc
xchg
pop
jmp
push
push
lahf
lcall
cld
jmp
jg
aas
cmc
mov
movsl
sbb
jp
jo
dec
push
out
dec
inc
cmpb
sub
pop
fisttps
or
out
jg
repnz
aaa
repz
pop
push
dec
jb
mov
xor
mov
lcall
aaa
ret
lahf
repz
dec
mov
push
xor
add
cs
loop
and
push
pusha
in
scas
les
dec
imul
jg
xchg
xor
cmp
inc
int
sbb
lcall
jbe
xchg
jg
cmp
cmpsb
sbb
ja
add
pop
into
sub
aaa
inc
lds
cli
outsl
mov
data16
outsl
pop
roll
in
mov
pop
in
xchg
dec
cmp
les
inc
icebp
add
jmp
sbb
jl
imul
adc
out
push
dec
push
push
dec
push
dec
jb
xchg
xchg
and
jg
lock
jns
xchg
lock
sbb
xor
add
pop
mov
ljmp
pop
mov
inc
or
ret
inc
adc
sbb
test
xchg
mov
insl
xor
and
ljmp
mov
dec
ret
ljmp
jp
roll
lods
loope
add
cs
scas
jae
adc
idiv
jg
cmp
pop
loope
sub
inc
cmp
dec
ja
and
push
xor
subb
jne
jmp
in
xchg
dec
mov
push
dec
pop
shll
add
stos
sub
ja
ljmp
dec
int
cmpsb
aaa
gs
push
mov
push
je
testl
push
ljmp
mov
jl
cltd
or
fsubl
dec
sub
loop
incl
stos
sahf
mov
add
es
in
sti
outsl
inc
push
cli
mov
mov
iret
in
bound
inc
mov
add
jg
test
lahf
test
jo
push
jb
fmuls
push
or
aaa
int
loopne
enter
jp
movsl
jb
jno
pop
fnstsw
incl
sbb
outsl
dec
and
sarb
fsubl
es
mov
inc
xchg
xchg
stos
fsubrl
sahf
push
jno
cld
call
xorb
movb
leave
lods
xchg
add
mov
out
lcall
pop
adc
movsb
sub
into
and
dec
mov
jno
lock
xlat
or
int3
add
or
or
lret
push
xchg
aas
test
data16
shl
insl
ljmp
test
jno
fsubrs
vmwrite
add
mov
mov
xchg
int3
into
dec
jmp
push
pushf
pop
movsl
jo
ljmp
inc
ljmp
div
push
addr16
mov
mul
pop
inc
pop
int
push
ja
call
push
mov
pushf
push
scas
and
mov
addl
inc
or
dec
push
add
adc
push
pop
xor
aad
inc
sub
aas
jo
mov
cmp
rclb
loope
xor
lcall
add
ljmp
cmp
cmp
adc
enter
sbb
mov
sbb
cmp
jp
fwait
mov
adc
pop
testb
ret
test
ljmp
inc
adc
dec
dec
sbb
push
push
push
add
in
or
fwait
mov
sub
sbb
pop
inc
xchg
adc
xor
xchg
xor
xchg
popf
pop
and
jmp
ljmp
add
ret
push
insb
jl
ljmp
cmp
jno
mov
mov
popa
mov
cmpsl
push
sub
scas
mov
inc
xchg
fstpt
xchg
gs
adc
lods
pop
lea
push
or
aaa
push
repnz
mov
xchg
cli
jg
lock
cs
lahf
cmp
add
adcl
pop
shlb
jno
and
or
push
add
dec
out
mov
sarl
test
dec
mov
mov
adc
adcl
pop
push
xchg
bound
ds
jg
out
mov
push
rorl
jb
adc
add
xchg
xchg
mov
add
sub
xor
adc
sbb
jne
lods
inc
aas
cmpsb
xor
in
lods
cmp
and
lahf
fs
cmc
enter
pop
push
pop
sub
sbb
mov
mov
pop
xchg
imul
xor
es
pop
enter
insb
popa
out
sbb
xchg
in
test
mov
jg
movsl
cmpsb
jmp
rcll
jnp
ss
decl
aad
inc
mov
insl
mov
ds
daa
pop
fildll
mov
pop
add
adc
pop
loope,pt
mov
mov
mov
or
out
shlb
push
and
outsl
scas
imul
inc
xchg
sub
int3
push
mov
call
inc
jp
pop
outsb
xchg
xor
mov
add
sbb
xchg
das
std
pop
sbb
js
or
pop
cli
lds
or
mov
out
scas
push
mov
adc
jno
inc
push
cmp
adc
inc
das
dec
sub
mov
xchg
and
test
xchg
jp
sub
popf
jmp
jo
xor
sbb
repz
inc
fwait
mov
lcall
cmc
loope
lcall
pop
xor
adc
in
push
inc
fidivl
mov
add
jl
jmp
push
fisubrs
inc
test
pop
decl
and
movsl
test
mov
mov
xor
jmp
dec
xor
mov
jge
cmp
incl
jmp
jno
lahf
adc
mov
test
or
stc
outsl
add
push
dec
sub
sub
in
cltd
out
add
dec
dec
inc
cmp
sub
inc
pop
mov
mov
pushl
ja
add
mov
mov
insb
data16
xchg
loope
ficoml
incl
dec
jo
dec
rorb
daa
cltd
les
xchg
insl
pop
gs
jns
popa
sahf
pop
in
cli
cmp
movsl
pop
mov
enter
sarl
loope
cmp
mov
sub
test
jb
icebp
inc
xor
orl
mov
xchg
dec
and
fiaddl
fbstp
jns
add
mov
dec
repnz
mov
push
dec
cwtl
fsts
inc
lock
dec
insl
inc
push
push
ret
push
addr16
pusha
push
mov
mov
dec
jmp
rorb
mov
insb
and
cld
out
lods
mov
mov
lcall
xor
fst
lcall
repz
mov
xchg
push
ja
push
clc
data16
mov
ds
je
enter
mov
adc
scas
push
inc
dec
sbb
scas
jp
pushl
cmp
add
xchg
mov
adcb
xchg
mov
call
xchg
dec
cmp
cmp
mov
scas
sub
mov
outsb
je
sbb
jae
inc
lea
and
cld
call
repz
fbstp
sbb
cmp
out
add
pop
and
mov
jge
adc
pop
inc
clc
inc
js
test
popa
daa
and
xor
and
cmp
out
lods
push
inc
ss
inc
stos
scas
jo
rolb
adc
lods
push
roll
jmp
inc
dec
pusha
dec
add
test
pushl
adc
mov
inc
ror
stos
scas
push
xchg
je
lods
mov
jbe
ljmp
mov
rolb
pusha
xchg
pop
or
pop
es
xor
push
add
jmp
xor
jp
push
or
sub
lcall
push
xchg
mov
clc
inc
jns,pt
lcall
sub
sahf
cli
addr16
cli
mov
cmp
cli
aaa
pusha
jne
adc
aas
add
dec
cs
pop
ret
ds
jg
lahf
fwait
into
add
cmp
xor
sbb
jge
movb
in
ljmp
or
mov
push
inc
sarb
xor
dec
pop
fs
insb
adc
jo
mov
dec
dec
in
insl
sahf
and
stos
jle
sbb
data16
ret
push
xorb
insb
sub
scas
into
cmp
mov
sbb
add
dec
jge
filds
or
inc
lods
lods
pop
aam
mov
mov
push
mov
push
nop
jno
decl
xchg
mov
sub
add
sarb
arpl
je
inc
jmp
or
fisttps
dec
lea
mov
outsl
lods
push
mov
xchg
incl
push
sub
pusha
ja
or
cmp
fwait
gs
call
inc
nop
push
stos
mov
xchg
fistpll
cmp
push
pop
cltd
imul
lahf
jl
pop
stos
test
xor
addb
ljmp
dec
pop
add
add
adc
xor
incl
stos
push
dec
js
loopne
mov
jns
pop
jno
cmpb
insb
iret
sub
or
jmp
push
adc
mov
cmp
cmpsb
jno
lea
insl
add
push
and
outsb
pop
shlb
xchg
les
fwait
outsb
popf
ljmp
orb
mov
int
push
jecxz
pop
inc
mov
clc
decl
xor
add
mov
in
jg
loop
aaa
inc
out
xor
pop
pop
push
cmp
lar
ljmp
hlt
xchg
jo
add
sbb
nop
push
insl
cltd
sbb
sbb
mov
xor
adc
cmp
bnd
push
and
sahf
xor
and
or
mov
test
inc
and
pop
push
test
inc
pop
add
cli
sub
jle
aaa
and
es
mov
sahf
add
jmp
sub
jmp
andl
cmp
sti
lcall
adc
adc
out
dec
push
push
mov
jg
inc
in
sti
stos
mov
setle
test
sbb
incl
mov
adc
adc
add
lcall
loope
dec
icebp
adc
jle
test
xor
lods
pop
stc
rcll
in
jbe
imul
pop
sub
lcall
push
sub
jnp
dec
sbb
and
adc
pop
push
or
daa
bound
add
mov
inc
and
mov
dec
push
mov
cmp
xchg
push
jg
repz
lcall
fmull
xor
adc
into
mov
xchg
cmp
scas
sbb
icebp
add
push
cmp
cmpsb
sbb
jg
xchg
dec
shll
inc
rcrb
mov
dec
xor
pop
stos
les
xchg
inc
scas
shlb
test
sbb
cli
ficoms
lea
xchg
iret
adcl
inc
fbld
xchg
out
clc
mov
daa
dec
int3
das
dec
jno
push
in
insl
cmp
adc
sbb
in
mov
out
shrb
sahf
mov
jp
nop
outsl
clc
jg
test
mov
push
pop
leave
pop
mov
jl
insl
mov
jnp
pop
sar
dec
pop
popa
mov
inc
inc
lods
mov
mov
bsr
pop
std
inc
loope
mov
scas
mov
lock
call
cli
test
movsl
cmp
xor
loopne
mov
or
out
ss
push
add
fists
mov
js
jns
rcrb
movsb
repz
inc
decl
cmpsl
loope
mov
outsl
testb
sub
adc
mov
bound
mov
lods
jg
test
sub
cs
dec
incl
sahf
inc
mov
and
mov
cmp
add
cmp
pop
dec
fbld
xchg
mov
loopne
pop
and
decl
jle
cmp
sub
inc
sub
adc
gs
gs
add
push
sub
and
add
xor
jne
sbb
pop
jle
push
and
addr16
xor
lcall
add
sub
sub
cmc
leave
push
std
int
sarb
daa
sub
fisttpl
scas
les
mov
cmpsb
adc
mov
cmp
sub
call
cld
test
mov
cmpsl
inc
scas
int
lea
inc
mov
mov
mov
mov
sub
ljmp
mov
mov
xor
mov
insb
lcall
sti
xchg
sbb
repz
out
arpl
xor
dec
mov
mov
mov
scas
sub
fistps
sub
lcall
adc
xchg
fwait
repnz
je
mov
ljmp
mov
inc
pop
add
mov
or
pop
adc
xchg
incl
and
in
inc
int
shrl
icebp
mov
stos
jne
fldt
into
sbb
sub
cmpsl
mov
jg
push
std
xor
mov
std
inc
jb
jb
jbe
push
push
aaa
ds
fldenv
ljmp
add
xchg
shrl
dec
fisubl
sub
and
mov
aad
jmp
sbb
jecxz
mov
cmp
call
out
mov
or
into
pushf
cli
cmp
xor
xchg
in
or
pop
and
decl
inc
pop
outsb
mov
or
cmp
cmp
sub
ljmp
inc
into
sbb
js
aas
arpl
mov
stos
incl
and
leave
lea
pop
xchg
sti
or
cmp
gs
pop
fidivrs
test
call
call
fnstenv
insl
and
pop
mov
sbb
push
cmp
out
cli
decl
sub
out
mov
daa
imul
push
adc
or
sub
test
out
cmpsb
push
ljmp
daa
mov
or
outsb
decl
sbb
xor
adc
fs
xlat
and
jnp
adc
in
decl
xchg
gs
push
mov
adc
and
and
xchg
add
incl
mov
sub
add
mov
mov
sbb
es
clc
push
insb
jge
sti
pop
push
pop
mov
cltd
sub
add
pop
mov
lcall
mov
das
push
push
push
mov
xor
mov
mov
pop
mov
add
test
sbb
adc
cmp
xor
lods
push
ds
outsb
dec
mov
xor
adc
aas
xchg
das
movsb
das
test
and
ds
jb
mov
unpckhps
cmpsb
sbb
push
xor
cld
cmpb
mov
das
sub
fadds
ss
mov
and
push
jp
std
das
sbb
sub
fnstsw
cmpsb
sbb
cmp
dec
xchg
or
adc
add
pop
cmp
mov
imul
scas
xor
out
pop
sub
ds
xor
fdivrs
popf
aas
xor
call
mov
and
add
add
mov
push
jae
les
push
add
adc
pop
mov
mov
cmp
test
pop
or
pop
cmp
xchg
sbb
lods
push
push
jg
lcall
cmpsb
and
call
pushf
sub
jo
dec
mov
push
jnp
xor
mov
pop
cmp
int
sbb
xor
pcmpeqd
call
pushl
sub
inc
stos
fmuls
cmp
cmp
out
cli
aas
ss
pop
ds
and
jg
cmp
mov
jno
inc
aas
inc
xchg
sbb
fnstenv
test
sbb
das
push
lock
neg
push
or
jo
xor
cmp
sub
jge
sub
clc
icebp
pop
ret
and
jb
out
mov
cmp
mov
pop
mov
test
and
and
xchg
jb
mov
daa
xchg
rcrl
mov
sub
push
in
out
call
notb
xor
mov
mov
adc
add
inc
mov
lock
sub
cmp
xchg
sbb
fisubrl
xchg
adc
mov
inc
cmp
sarb
bound
push
xor
lcall
inc
pop
lods
imul
lock
pusha
xchg
xor
cmp
xor
cmc
xchg
mov
jb
out
adc
push
xor
ds
adc
lret
aas
std
out
pop
push
xchg
add
mov
xor
jp
stos
leave
in
jb
add
gs
jmp
pushl
sbbb
scas
popf
adc
arpl
ja
xor
jno
decl
out
cltd
sbb
loope
movb
ret
fsubrp
sub
stos
test
daa
les
pop
jmp
dec
mov
popf
mov
jl
incl
sbb
lret
scas
xchg
sbb
scas
into
jmp
inc
xchg
ror
mov
mov
jle
xlat
movsl
inc
mov
adc
mov
addr16
stos
xor
aam
jl
icebp
or
adc
push
das
outsl
nop
cmp
or
pop
cltd
push
loop
jno
or
fimuls
cld
jg
lock
add
cwtl
xor
lea
or
pop
jge
andb
lcall
jg
out
add
out
xchg
add
mov
mov
cwtl
dec
jmp
sbb
mov
pop
or
inc
mov
lods
jge
xchg
push
lret
ds
loop,pn
xchg
iret
es
sbb
shlb
or
pushf
fcompl
jl
inc
push
add
adc
add
fwait
xchg
loop
incl
jb
or
rorb
aam
mov
stos
jmp
pop
mov
fst
es
into
test
testl
fidivs
es
shl
loop
xlat
loopne
jp
adc
arpl
roll
loope
push
in
ret
fsubrp
loop
xor
push
ror
fsubs
ss
loope
inc
pop
cwtl
or
cmpsb
push
push
int
fidivrl
lock
mov
mov
outsl
cmp
out
das
or
add
movsl
push
push
sub
in
sbb
mov
cs
adc
cmc
xchg
jae
xchg
sbb
pop
cmp
push
xchg
mov
push
repnz
inc
enter
or
adc
cmc
jp
inc
aam
and
mov
iret
mov
adc
gs
test
cs
pusha
xchg
inc
inc
je
sbb
add
into
mov
icebp
das
insl
in
xchg
call
jge
addr16
inc
or
add
dec
jne
arpl
xchg
scas
test
les
popa
outsb
bound
inc
or
adc
sub
jnp
mov
aas
loope
dec
sub
test
enter
jmp
sbbb
add
push
pop
jl
or
in
mov
adc
je
and
fcomip
or
fidivrl
jp
or
stos
pminsw
add
lret
jp
insl
std
outsl
js
jl
test
mov
dec
pushf
add
setb
and
cld
call
out
pop
lcall
xchg
shrl
js
cmc
scas
cli
fbstp
popa
addb
test
mov
mov
and
mov
repz
jb
scas
cwtl
sub
mov
adc
sbb
sahf
jb
jns,pn
cmc
xor
sbb
clc
and
movsb
loope
inc
pop
adc
in
mov
sbb
idivb
cld
lcall
adc
ret
std
pop
sahf
cmp
lcall
js
xor
call
adc
xchg
xchg
int3
leave
or
out
in
mov
les
pushl
lds
mov
mov
pop
fldcw
in
cmpsl
decl
jno
jg
dec
int
fsts
adc
push
ljmp
pop
loopne
lds
neg
decl
pop
out
inc
popa
mov
mov
cmp
sub
js
aaa
out
rcll
imul
out
call
jno
ljmp
add
mov
das
adc
data16
clc
pop
pushf
mov
xchg
out
cmpsb
jg
mov
adc
lret
cwtl
xchg
shlb
mov
mov
repz
int
aam
xchg
clc
inc
jbe
inc
into
ret
aas
outsb
adc
cwtl
xor
addr16
lcall
stos
dec
loop
test
stc
jno
pop
aaa
mov
into
rcl
icebp
sbb
or
push
push
je
mov
sbb
jbe
call
loop
idivb
jbe
decl
stos
push
out
mul
pop
inc
imul
imul
int3
mov
cli
or
xor
jo
and
mov
add
arpl
es
inc
inc
and
test
mov
pushl
xchg
mov
mov
cmpsl
pusha
and
roll
pop
add
push
mov
sbb
inc
jp
dec
adc
into
cmp
icebp
aas
mov
pop
test
jae
ja
inc
sbb
int
xchg
mov
ljmp
or
or
subl
sbb
cmp
mov
into
add
jg
aaa
stos
mov
mov
loope
dec
sub
lret
ja
or
push
mov
adc
push
in
push
jg
hlt
mov
addb
jb
add
and
ud1
push
cmp
daa
adc
push
push
sub
data16
int3
adc
mov
and
xor
mov
sbb
mov
js
lret
fsubl
lock
cli
dec
add
sbb
out
mov
fs
sub
ljmp
jb
bound
out
xchg
sti
adc
cmp
test
or
xor
lea
lock
sub
pmulhw
xchg
sub
stos
sub
arpl
aad
inc
xor
sbb
and
or
pop
js
adc
pop
cmp
push
cmp
incl
mov
pop
xchg
jmp
inc
sbb
adc
mov
mov
inc
mov
sbb
add
adc
sub
fs
jle
jle
gs
push
dec
and
mov
add
xor
call
into
push
push
adc
dec
xchg
cmc
add
adc
ret
sbb
test
and
jmp
mov
push
pop
cmp
inc
lcall
outsb
loop
outsb
add
repz
outsb
and
pop
bound
lods
xor
push
xorb
or
in
mov
mov
mov
mov
pop
dec
sbb
call
mov
pop
ljmp
data16
nop
aad
loope
ljmp
test
mov
test
xor
rcrb
roll
scas
or
mov
jno
push
push
xchg
xchg
icebp
pushl
jp
sbb
enter
mov
jns
push
std
pop
fstl
jbe
cmp
dec
mov
sub
pushl
adc
push
add
push
test
inc
out
aad
jg
jg
adcl
int
inc
iret
in
jno
sub
cltd
clc
and
adc
jae
add
and
add
dec
xchg
ljmp
fcomi
sahf
mov
adc
and
adc
lds
div
dec
cmpsb
jmp
lods
and
cmp
inc
addr16
cld
or
decl
cmp
or
repz
loopne
mov
daa
mov
adc
std
sub
jo
push
jns
aaa
jg
outsl
jp
ss
inc
add
push
lds
inc
das
inc
pop
ss
and
ja
push
pop
xor
cmpsb
add
into
call
pop
inc
js
inc
test
rorb
add
push
jno
loope
pop
lea
mov
xchg
mov
jg
test
mov
xor
cmpsb
xchg
das
sub
fs
pop
mov
xchg
out
clc
jmp
mov
mov
loope
pop
jb
or
inc
lret
jo
jbe
gs
mov
test
or
insb
data16
xchg
inc
ret
call
or
std
pop
stos
jecxz
pop
sub
inc
inc
jp
push
fwait
xorb
sbb
popa
dec
jge
std
push
fs
pop
jno
xchg
or
pop
out
jl
add
in
mov
cmp
push
mov
scas
out
js
cmp
into
aaa
mov
addr16
push
ds
cmpsl
arpl
lds
imul
fbld
lea
das
testb
dec
jo
sbb
push
scas
out
aas
lcall
bound
cmpsl
cld
push
pop
lds
fiaddl
xchg
sbb
mov
fcomps
xchg
cmp
adc
ljmp
push
mov
push
and
clc
and
lret
jmp
pop
jmp
insl
mov
lahf
sub
sbb
xor
sbb
sbb
or
cltd
sbb
cwtl
and
push
lret
lock
lcall
ret
iret
sbb
mov
mov
aas
lret
adc
es
lock
lods
repz
xor
sti
aaa
or
pop
jmp
xlat
ror
ljmp
push
mov
dec
pop
sahf
xor
lret
add
enter
sti
jg
add
push
shll
mov
mov
sbb
int
gs
and
pop
push
mov
mov
mov
scas
adc
dec
sbb
mov
sbb
fisubrl
or
ljmp
lods
jb
xchg
add
push
xchg
fsubp
int
js
jb
adc
aas
cmp
push
sub
repnz
and
mov
xor
fstp
pop
push
push
pop
xchg
pop
add
mov
test
call
sub
push
out
test
cltd
or
pop
or
test
into
mov
into
out
push
or
and
jg
icebp
out
dec
test
lods
stc
jmp
mov
hlt
mov
dec
jg
in
inc
lret
mov
lret
jg
loope
sub
or
adc
clc
or
pop
sub
jl
push
loop
or
cs
ljmp
cld
add
incl
lahf
sbb
call
in
push
cmc
fbld
mov
mov
push
stc
mov
adc
scas
cmp
mov
ljmp
sbb
and
xchg
bound
sub
ret
lock
dec
ja
xchg
ret
cwtl
clc
imul
test
inc
cmp
jno
mov
xchg
mov
inc
mov
push
mov
enter
gs
ljmp
sub
push
test
test
cli
lahf
sti
sub
jo
jle
lcall
push
push
pop
dec
lcall
dec
movsb
xchg
mov
pop
popa
loopne
mov
cmp
outsl
dec
mov
dec
push
jns
push
incl
mov
add
das
xchg
scas
js
mov
movsl
outsb
call
aaa
inc
testb
hlt
push
cltd
divb
dec
add
pop
mov
jg
incl
dec
xor
sbb
lods
mov
xor
mov
mov
jp
bnd
push
push
cmpsb
enter
je
repnz
inc
inc
inc
mov
xchg
adc
xor
subl
xor
push
xchg
dec
in
lods
cwtl
les
leave
clc
call
cmp
mov
pop
inc
stos
sti
adc
sti
shr
inc
sahf
fbld
mov
sub
mov
jbe
pop
dec
ret
sbb
aas
and
jp
adc
sbb
inc
pop
bnd
sub
sbb
mov
inc
clc
xchg
clc
mov
loopne
fwait
xchg
push
ss
mov
inc
mov
mov
jbe
stos
cmpb
xorl
movb
jg
int3
inc
popf
cltd
mov
add
into
out
nop
movsl
cmpsl
mov
movsl
scas
stos
lcall
xchg
push
pop
std
xlat
lahf
xchg
inc
out
mov
ja
lea
popa
push
fwait
and
inc
daa
push
xor
cli
jg
mov
xchg
iret
popf
inc
adc
push
add
mov
sbb
cmp
mov
into
cmp
fucompp
lcall
cld
inc
sbb
data16
aas
mov
out
lods
xchg
xchg
psubsb
mov
in
mov
cmp
loopne
pop
lods
fwait
cmp
std
cmc
cmpsb
mov
inc
mov
cltd
clc
mov
push
mov
adc
decl
add
mov
xor
pop
push
push
mov
dec
mov
cld
jg
jmp
cmp
dec
push
cld
dec
mov
pop
gs
jno
insb
mov
pop
js
fbld
push
sub
sbb
pushf
xor
rcrl
call
enter
mov
inc
mov
xchg
cmpsb
rol
sahf
lods
mov
in
clc
mov
out
dec
pushf
lret
push
push
leave
subl
pop
icebp
ljmp
jno
shlb
mov
or
in
loope
call
mov
cmp
push
mov
cmp
or
mov
mov
inc
push
mov
repz
mov
jb
mov
test
ljmp
sbb
sbb
cmp
rolb
fs
mov
adc
lahf
mov
xchg
sbb
aad
stc
decl
lret
cmp
inc
out
xor
inc
outsl
push
xchg
pop
in
sbb
and
cltd
jb
cmp
scas
dec
mov
aas
movsl
repnz
fbld
sti
pusha
adcb
cs
outsl
pop
lds
mov
and
pop
lea
nop
add
jle
cld
jg
hlt
rolb
lea
pop
mov
or
incl
cmp
test
push
inc
pop
in
mov
cwtl
add
inc
push
bound
pop
popa
push
test
add
jmp
xchg
hlt
or
in
xchg
xor
push
pusha
push
bound
fs
mov
int3
add
lcall
std
andb
inc
je
xorl
jecxz
in
and
nop
inc
add
decl
movsl
int
ja
sbb
jmp
ljmp
fstl
fs
fisubs
xor
jns
cld
xor
sub
std
pushl
fsubl
scas
out
enter
push
jmp
fsubrl
bound
aam
xchg
mov
mov
dec
stos
dec
or
aaa
sub
dec
outsl
dec
loop
push
decl
popa
inc
ret
and
sti
sahf
adc
repnz
jle
dec
clc
push
push
pusha
addr16
jecxz
fwait
cmp
push
fisttpll
xlat
fists
push
xor
push
mov
jg
jno
pop
out
jbe
push
insb
clc
add
xor
addr16
cmpsb
shll
mov
push
leave
cwtl
xchg
les
sahf
fnstsw
test
fcmovb
jg
mov
int3
adc
lret
xor
bound
dec
xchg
cmp
sbb
jg
fsts
sub
in
sbb
mov
pop
clc
shll
call
mov
dec
std
adc
mov
inc
sub
jp
add
push
cmp
ljmp
clc
sub
jl
cmp
or
out
mov
repnz
movsb
gs
mov
lcall
cld
aas
mov
pop
mov
decl
xor
add
lret
shll
je
pop
into
push
ss
push
sub
xor
xchg
fildll
jge
lds
test
sahf
int
push
dec
inc
pop
add
mov
xchg
or
adc
outsb
push
fbld
sub
xchg
or
lret
add
sar
push
dec
mov
inc
xor
addl
dec
out
icebp
lods
lods
test
pushl
jge
fstp
xchg
rcrl
xor
pop
inc
pusha
jb
push
repz
ret
xchg
sbb
inc
test
inc
mov
push
sub
xchg
lock
mov
cs
mov
shrl
sub
fdivrp
mov
adc
dec
xor
scas
or
mov
test
out
into
stos
pop
in
daa
dec
push
xlat
ljmp
sbb
adc
mov
icebp
shlb
sbb
sub
lcall
adc
and
xchg
mov
sub
pop
or
mov
or
push
push
cmpsb
insl
jp
inc
sub
or
xor
fs
pop
loop
dec
add
aas
or
lcall
push
or
ret
pop
inc
pop
cli
pop
push
add
inc
lret
sti
mov
push
repz
into
push
jge
jl
xor
pop
insb
push
inc
lods
ljmp
call
mov
dec
sub
adc
imul
fs
xor
jne
shrb
mov
ja
sub
stc
fiadds
dec
js
pushf
push
jg
mov
xchg
push
sub
ret
ret
xchg
shrb
mov
inc
xchg
jo
xchg
mov
pop
pop
loopne
ljmp
sbb
dec
push
shll
mov
clc
das
cmpb
rcl
sti
je
stos
push
push
xchg
mov
and
dec
mov
or
xchg
jge
xor
movsl
push
les
mov
fs
insl
mov
inc
push
mov
xor
cmp
js
dec
xchg
adc
inc
pop
fsubs
xchg
insb
pop
pop
clc
mov
pop
dec
cmp
mov
fsubl
push
jg
xchg
push
xorb
out
sub
aaa
sbb
add
mov
sub
sahf
cmp
xor
pop
das
fiadds
push
sbb
and
incl
xchg
mov
jno
xor
push
xchg
scas
lcall
add
test
dec
repnz
xor
jnp
and
add
jne
xor
dec
adc
js
dec
ret
stos
popf
in
cltd
sub
ss
adc
xchg
add
test
pop
push
push
xor
inc
mov
pop
cmp
mov
sub
outsb
add
ljmp
jg
adc
jg
lea
mov
icebp
ret
clc
jl
fsubs
pushf
int3
add
ljmp
push
adc
inc
mov
mov
insb
lds
mov
cmp
lcall
lcall
inc
push
xor
sbb
test
pop
repnz
cvtpi2ps
and
imul
pushl
popa
cmp
push
outsl
xchg
add
cmc
push
dec
scas
sbb
add
and
sbb
adc
dec
xchg
std
insb
mov
adc
in
sti
sbbl
jge
adc
nop
das
jge
jns
add
xor
imul
dec
inc
scas
loope
add
enter
xchg
cld
push
xchg
cwtl
jnp
push
ds
jbe
pushl
push
clc
sbb
ficoml
pop
ds
cmp
incl
pop
imul
sub
loopne
jle
xchg
xor
xor
xchg
clc
cmp
xor
es
into
pop
movsl
lcall
push
sbb
mov
push
inc
cmp
repnz
decl
mov
cmp
out
test
bound
jp
add
mov
xchg
adc
pusha
sahf
jmp
lcall
mov
jbe
psrld
mov
mov
mov
lods
xchg
insb
faddl
mov
mov
scas
ss
pop
mov
scas
push
fwait
jg
mov
jae
mov
xchg
in
and
add
int
adc
cltd
and
lcall
mov
ljmp
and
vmwrite
pop
mov
jge
sub
mov
aas
fwait
push
cmpsl
adc
add
inc
adc
fiadds
push
fnsave
mov
push
mov
jns
push
arpl
insl
lret
pop
inc
decl
mov
dec
test
jl
mov
mov
js
shrl
push
or
mov
push
jp
xchg
std
mov
mov
mov
pop
pop
sub
sub
movsl
mov
repz
ret
mov
dec
xor
or
mov
jp
ds
xor
mov
mov
pop
ljmp
nop
adc
mov
cwtl
rorb
ret
dec
js
dec
inc
jmp
inc
enter
movsl
adc
sbb
enter
add
aas
dec
rclb
push
stc
pop
push
ret
in
push
xchg
pop
push
mov
out
mov
inc
fildl
dec
fs
lcall
mov
push
mov
add
add
adc
aaa
sbb
dec
mov
addr16
dec
je
std
mov
rorb
mov
inc
push
mov
push
xor
stos
xchg
stos
lcall
or
shll
inc
or
lret
out
test
rclb
sbb
pop
xorb
ficompl
cltd
inc
stos
or
aaa
jo
inc
pop
or
push
lods
data16
xchg
jle
cmp
xor
mov
and
xchg
int
mov
into
out
add
cmp
in
roll
out
push
cltd
xchg
push
xchg
mov
mov
mov
add
mov
lcall
push
sub
and
test
cmp
aas
jmp
call
push
decl
notl
int3
or
movsl
popa
fimuls
xlat
inc
xchg
cs
push
mov
cmp
and
cmp
cmp
cmp
jg
cmc
subb
loop
es
orl
ljmp
adc
stc
xor
xor
lds
adc
das
or
lcall
ds
mov
jo
js
add
out
sub
mov
mov
outsl
pop
dec
cmp
clc
sub
push
sarb
fwait
pop
and
xchg
mov
inc
iret
mov
sbb
cld
xor
add
aam
dec
jbe
jns
push
mov
ret
lcall
adc
aaa
cld
subb
xchg
pop
hlt
and
jge
sar
mov
loop
lcall
or
nop
push
imul
lret
and
add
jp
lds
sbb
gs
xor
dec
insb
addr16
cli
sub
add
call
std
jg
arpl
lcall
sbb
pop
jno
js
push
jnp
ljmp
dec
adc
pop
loope
mov
inc
sub
push
add
fnstsw
and
xor
xchg
movsl
mov
lods
call
hlt
xchg
add
int3
add
and
cmp
sub
pushl
testb
dec
mov
hlt
stos
jns
add
sub
scas
movsl
test
inc
icebp
lcall
cmpsb
daa
loop
sarl
sub
sarb
fmull
fdivs
rep
mov
sbb
add
mov
andb
mov
adc
data16
cld
inc
pop
jmp
push
imul
and
cmp
decl
dec
jl
pop
sub
das
gs
inc
sbb
das
push
jmp
jge
sbb
daa
cltd
push
mov
aas
xor
out
and
sbb
cli
cltd
cwtl
dec
mov
decl
fcompl
pusha
insl
fsubrl
je
aas
jb
or
lahf
dec
movsl
into
stos
dec
rcrl
sub
or
mov
xchg
mov
mov
ja
mov
dec
lcall
jl
push
fcos
mov
scas
stos
push
mov
and
add
or
sbb
and
cmp
jg
push
movsb
push
xor
insb
sbb
insl
cwtl
pop
sahf
in
jge
jp
js
ds
lock
incl
jo
push
fidivl
repz
mov
mov
mov
jae
xor
loopne
pop
sbb
mov
movsb
out
test
cmp
icebp
incl
fldt
inc
xchg
arpl
insb
sbb
aam
das
xchg
lock
lods
lock
fwait
sbb
and
decl
call
fistl
pop
rcrb
jle
aaa
xchg
clc
insb
insb
fs
ss
pop
jge
jb
ja
ljmp
outsb
pop
push
pop
and
push
and
lea
mov
or
pop
ljmp
or
ljmp
and
push
jg
pop
addr16
imul
nop
cmp
daa
pop
push
pop
arpl
push
out
repnz
inc
xchg
mov
mov
lcall
rcll
ja
pusha
insl
loopne
aam
jmp
mov
mov
pop
mov
mov
pop
notb
jnp,pn
mov
aam
gs
adc
lcall
jbe,pn
adc
fwait
dec
pop
ret
adc
pop
xchg
mov
cmovo
sbb
decl
dec
push
mov
push
jne
mov
lods
jne
divb
lds
repz
push
pop
fstpl
cmpsb
sub
out
mov
enter
mov
mov
inc
fdivrl
fwait
xchg
notb
push
lods
lods
lahf
subb
push
fdiv
and
mov
test
cmp
arpl
ljmp
sub
cmc
cld
mov
xchg
enter
test
jle
jg
dec
sub
sbb
rolb
jne,pt
ret
or
and
pop
in
mov
cmp
pop
lods
push
decl
inc
call
dec
js
je
mov
das
xor
decl
add
mov
sbbb
xor
jg
incb
and
sub
xor
xor
push
pop
lea
jmp
nop
decb
and
lcall
push
mov
mov
pop
adc
jge
xchg
aas
mov
scas
cli
push
dec
mov
add
test
imul
xor
sahf
and
rcll
test
mov
dec
loopne
outsb
aas
jne
test
mov
push
in
jge
cs
adc
in
inc
inc
lcall
mov
sti
sub
sbb
push
xor
sub
les
and
cmc
mov
sbb
outsl
test
insl
inc
xchg
iret
mov
push
insl
xchg
shll
jbe
adc
imul
cmp
mov
push
pop
js
xorb
loope
imul
fdivrl
lcall
mov
imul
and
mov
push
lcall
shlb
push
imul
push
sahf
add
mov
mov
xchg
hlt
incl
mov
xor
jg
inc
inc
dec
pop
jecxz
pusha
pushl
jne
adc
dec
mov
loop
dec
lds
push
mov
mov
mov
dec
test
push
in
or
mov
mov
mov
sbb
rorl
push
insb
jbe
shl
lcall
pop
pop
fidivl
inc
insb
mov
mov
or
stc
mov
out
jg
mov
ja
rorb
jb
cmp
pushf
into
cltd
dec
stc
mov
sbb
fidivl
ret
std
xor
pop
enter
sbb
sbb
arpl
add
adc
cmp
lcall
arpl
out
lds
fists
cmp
repz
push
fdivrp
call
push
ret
jno
mov
mov
xor
repnz
push
shrb
notb
xchg
adc
add
jle
out
andb
fcomip
cltd
frstor
cli
jecxz
shlb
dec
dec
repnz
inc
ja
cli
call
bound
repz
push
iret
scas
out
pop
test
addl
jbe
ljmp
out
ret
dec
add
std
add
das
pop
jge
push
ds
ret
xchg
mov
cmp
out
ds
decl
sbb
xor
cmc
and
sahf
add
test
movsb
xor
mov
test
mov
std
repnz
pop
dec
adc
ds
mov
inc
pushf
shlb
pop
mov
xchg
decl
jae
push
data16
ds
sarl
jle
je,pn
or
pop
into
cmpb
dec
std
les
push
sti
lcall
dec
push
loop
inc
push
pop
push
sbb
lock
into
add
mov
incl
lods
iret
andb
ss
mov
dec
aad
js
out
loop
fs
xor
pop
xchg
xchg
cltd
sti
or
cmpsb
stc
mov
ljmp
cmc
addr16
data16
xor
ds
dec
mov
mov
decl
adc
cli
sahf
repnz
add
in
jno
cltd
in
es
ljmp
dec
jns
fsubl
or
sti
mov
sbb
cmpsb
push
out
pop
outsb
popa
adc
add
fists
pop
addr16
jb,pn
cmpsb
xor
mov
adc
in
mov
pushl
fisttps
inc
xchg
xor
mov
aad
clc
adc
rcrl
addb
or
aaa
insb
xor
push
loopne
jnp
push
js
mov
mov
sbb
repnz
cmc
daa
lock
jp
loopne
gs
lds
push
pusha
pushf
xor
mov
mov
mov
mov
jp
mov
scas
dec
std
jge
decl
out
je
add
inc
fdivs
pop
dec
mov
dec
imul
lret
cmpsb
std
cmp
or
dec
rorb
pushl
shlb
push
arpl
sbb
inc
in
xchg
inc
testl
push
enter
xchg
rorb
jg
fldl
mov
or
lret
mov
mov
cmp
cwtl
mov
cld
mov
add
shlb
stos
icebp
sahf
mov
lock
out
repnz
jo
add
jns
decl
jge
sub
mov
loopne
dec
sti
adc
shlb
xor
dec
cli
sub
stc
sbb
add
test
call
lods
enter
fnstenv
cld
sbb
dec
lcall
cmp
dec
movsb
push
gs
xchg
sahf
cli
dec
add
add
push
rcrl
outsb
jle
xor
fwait
cmp
mov
aam
dec
stos
ljmp
mov
lahf
cmp
mov
xchg
jno
inc
lods
inc
jmp
scas
test
xchg
iret
mov
pop
js
mov
outsb
jmp
loopne
mov
xlat
pop
push
or
or
xchg
pop
ret
bound
cld
nop
arpl
loope
pushl
icebp
cmp
outsl
mov
inc
jo
rclb
enter
push
mov
cmp
sbb
dec
xchg
aas
jg
mov
call
cmc
ds
cmpsl
rcrl
daa
xchg
jnp
sbb
jg
jle
push
jb
out
xchg
and
lcall
aaa
cld
dec
aam
add
or
push
cmc
mov
sti
movl
inc
mov
xchg
ret
stos
fcompl
add
incl
imul
movsb
inc
lcall
mov
pop
mov
lcall
stc
decl
rorb
mov
xchg
dec
sahf
aas
gs
mov
lcall
fwait
lcall
popa
mov
imul
cmp
stos
inc
mov
push
lcall
sarl
inc
fisubrs
subl
pushl
dec
repz
sub
roll
pop
mov
call
jbe
out
fisubl
cld
mov
hlt
into
test
sahf
inc
fidivrs
lcall
cmp
shll
add
mov
lcall
aaa
scas
inc
mov
iret
call
decl
push
inc
xchg
std
mov
mov
xchg
add
inc
sahf
dec
mov
cmpsl
idivl
imul
mov
sub
int3
sbb
inc
call
cmp
mov
pusha
mov
js
nop
pop
fdivrl
ljmp
sub
jmp
or
sbb
mov
mov
pop
pop
push
mov
es
add
dec
int
icebp
mov
xchg
js
or
pop
mov
sahf
inc
call
outsb
cli
jg
push
mov
mov
jle
add
stos
xchg
clc
decl
sahf
lretw
xor
sarl
mov
sbb
incl
adc
icebp
sub
jle
sbb
xchg
cmpl
enter
repnz
jmp
mov
mov
icebp
push
mov
cld
rcll
stos
ss
mov
dec
leave
es
add
outsl
xchg
adc
mov
negb
sub
movsl
sarl
cwtl
test
ret
ljmp
mov
stos
sbb
push
nop
hlt
mov
call
pop
movsb
andb
enter
ljmp
lcall
aaa
xor
movsl
push
mov
test
stos
fadds
jle
data16
mov
fistpll
daa
mov
cltd
cs
pop
mov
and
mov
icebp
test
add
jbe
clc
lcall
add
inc
adc
jge
mov
adc
iret
xchg
lock
dec
shrl
cmp
sub
dec
popf
jle
repnz
and
mov
xchg
movb
enter
test
xchg
out
jecxz
adc
jb
out
mov
aaa
pusha
xlat
movb
mov
sti
es
dec
cmpsl
xor
es
aas
xchg
into
sbb
sbb
nop
push
in
add
clc
out
test
jb
or
das
xchg
or
xor
mov
mov
jmp
insl
stos
pushl
mov
jnp
lods
adc
clc
incl
xor
inc
fnstenv
outsl
xchg
push
xchg
cmc
push
push
mov
mov
xchg
mov
mov
stc
lahf
add
mov
out
inc
stos
out
and
jge
lods
mov
mov
addr16
cmpsl
pop
mov
bound
loopne
jle
xchg
in
pop
xchg
movb
sahf
mov
inc
loope
mov
decl
xchg
jl
test
cwtl
push
lds
mov
jmp
cmpsl
mov
mov
ds
sbb
icebp
incl
cltd
push
out
lea
push
dec
inc
mov
scas
loope
inc
mov
or
dec
repz
dec
fsubrs
jg
daa
mov
fwait
aas
jmp
mov
movsl
push
cmc
sub
cmpsl
mov
mov
test
cmpsl
mov
push
cld
aas
pushl
mov
inc
xchg
stos
enter
into
xchg
pushf
js
xchg
in
xchg
outsb
lcall
lea
sbb
mov
jg
mov
enter
lods
aam
inc
test
mov
mov
mov
test
cld
ljmp
cltd
mov
addr16
cwtl
fnstsw
js
int3
mov
test
out
scas
test
jp
std
cs
mov
add
out
out
mov
call
ret
inc
test
dec
ret
jp
xor
imul
mov
cli
xchg
aas
push
jb
out
rcrl
out
xchg
xchg
mov
loop
aaa
cld
push
loopne
jp
jo
xchg
push
daa
push
cld
jp
add
cld
pop
xchg
and
mov
or
out
repnz
ret
sub
es
outsb
clc
cmp
jb
pop
rclb
icebp
call
lds
fs
mov
stc
cmp
jb
decl
sub
mov
mov
inc
mov
dec
int3
or
push
and
dec
mov
jg
std
xchg
adc
push
cmc
mov
outsb
and
mov
aas
adc
xchg
adc
inc
push
cltd
dec
out
iret
sbb
call
repz
mov
repz
dec
mov
call
clc
lcall
in
movsl
testl
hlt
and
dec
test
dec
push
mov
mov
in
xchg
pop
loopne
lcall
xor
test
lea
mov
repnz
mov
mov
or
pop
jg
cs
lea
sbb
sti
xchg
stc
and
out
fisttps
mov
jg
sub
xorl
nop
mov
fwait
jp
xchg
xor
cmpsl
les
mov
call
cmp
inc
test
fs
xchg
in
inc
icebp
xor
lods
iret
nop
das
clc
out
frstor
roll
popf
pop
les
push
jne
or
sti
cmp
add
call
jbe
icebp
test
push
xchg
lahf
outsb
lret
mov
sbb
cld
mov
xor
out
mov
mov
imul
cmp
cmpsb
sbb
sarl
mov
push
in
xchg
fwait
stos
jnp
jg
incl
mov
repz
mov
adc
mov
xchg
fisttpl
roll
lcall
shlb
mov
mov
imul
jg
int3
cmp
cld
sahf
lcall
dec
xchg
mov
push
out
or
call
test
inc
mov
lds
lahf
cld
incl
shlb
sbb
js
ss
lcall
add
pop
jl
pop
fmull
loop
out
adc
into
pushf
jns
test
lcall
test
ds
jne
mov
mov
mov
out
filds
cmp
xchg
testw
lahf
sbb
cmpsb
lock
xchg
and
in
sahf
mov
les
xchg
dec
icebp
sbb
ja
loope
dec
rclb
fwait
lock
fimull
out
daa
fists
cmpl
jns
adc
dec
jns
cmp
add
sti
mov
xchg
mov
out
ret
shrl
dec
lcall
mov
xor
rcll
adc
adc
daa
cwtl
data16
sbb
arpl
ljmp
xchg
fidivrl
je
in
push
inc
cmp
inc
test
jge
test
lcall
ret
in
stos
int3
add
test
sahf
push
inc
adc
lea
pop
loopne
jp
mov
or
jge
and
das
icebp
sbb
cmpsl
dec
xchg
into
sbb
shlb
out
ret
fdivl
xor
pop
xorl
repnz
adc
pushl
loope
fnstsw
jbe
and
lcall
loope
jle
cmpsb
cli
cs
lcall
fistps
and
mov
movsl
and
decl
pop
out
stos
rcrb
mov
stos
mov
dec
mov
js
cmp
jge
cltd
ds
add
mov
push
xorb
jg
jg
mov
lea
xor
mov
add
inc
mov
mov
daa
push
cli
stos
and
cmp
loopne
fwait
scas
dec
sti
and
rclb
push
mov
fcoml
and
mov
mov
jmp
xchg
mov
adc
inc
stos
jg
jbe
push
mov
and
mov
jbe
movl
movsl
lcall
cmp
jecxz
test
mov
aam
inc
shll
stc
and
mov
cwtl
movsb
arpl
test
test
fisubl
xor
cwtl
push
aad
icebp
inc
scas
xor
roll
xor
mov
jecxz
mov
inc
xchg
and
mov
sub
out
incl
sbb
cmpsb
lea
aaa
mov
fsts
push
push
cmpl
mov
lret
xchg
pop
lock
lret
and
pop
sbb
lcall
je,pn
mov
into
sbb
xchg
xchg
mov
and
aaa
jecxz
icebp
int3
mov
mov
mov
lea
pop
movsb
filds
push
clc
xchg
int3
push
ja
pop
call
dec
mov
cli
lcall
mov
jl
in
mov
cmp
int
out
lock
mov
test
test
mov
iret
xchg
idivl
jle
filds
rolb
jae
jecxz
and
stos
and
or
mov
lcall
stc
incl
cmp
lcall
js
cwtl
call
fwait
jmp
xchg
cwtl
stos
dec
in
adc
test
inc
test
lahf
inc
aam
sti
cmp
fisttpl
jmp
outsb
lcall
push
dec
sbb
inc
into
mov
das
cli
or
scas
arpl
xor
xchg
stos
stos
test
and
pop
and
ljmp
stos
jbe
jg
jg
cmp
fisubrs
adc
call
jo
mov
mov
out
fldl
mov
mov
xchg
orb
cmp
jns
push
insl
call
pop
mov
xchg
fnstenv
bound
inc
cmc
call
fidivs
jg
xchg
jo
mov
gs
in
cmpsl
les
stos
pop
cmc
cmp
jle
and
pop
mov
cmpsb
jne
in
inc
test
xchg
stos
insb
jns
stos
jg
fidivs
iret
adc
push
daa
scas
add
push
push
sub
sub
gs
lahf
fbld
lahf
nop
cmpsb
jb
imul
cwtl
cwtl
cmp
jae
mov
test
xor
cwtl
nop
cmpsb
jb
fdivrl
sub
cld
sahf
mov
jb
xchg
incl
push
or
cmpsb
into
mov
pop
cmpsb
dec
orl
xchg
push
mov
cmpsb
add
sbb
pop
into
rep
stos
movsl
scas
jne
aas
xchg
cmp
lcall
xchg
roll
mov
inc
add
pop
into
out
mov
icebp
or
incl
test
inc
xchg
lods
jns
ljmp
pop
mov
ds
or
stc
lahf
fnsave
stos
xor
lahf
sbbb
nop
cwtl
mov
nop
add
cmp
test
test
xchg
mov
push
add
call
enter
es
lock
jne
and
decl
pop
movsb
mov
cmp
fidivs
dec
push
lcall
shlb
dec
lcall
aaa
mov
sti
xchg
stos
jp
mov
sbb
and
mov
out
nop
arpl
cwtl
inc
leave
xor
lock
cmp
test
add
cld
add
popf
xchg
pop
mov
cwtl
rolb
pop
mov
xchg
sub
subb
mov
pushl
shlb
mov
xchg
sbb
xchg
mov
sub
xor
push
ret
lcall
loope
jp
cmp
icebp
pushl
dec
push
mov
dec
repnz
mov
pop
jp
shrl
cmpsb
jmp
out
inc
xchg
loope
ret
mull
pop
cli
test
jb
jo
scas
xor
cmpsb
xchg
sar
daa
xchg
fdivl
out
xor
data16
sub
mov
shlb
mov
mov
loopne
push
fdivrl
out
test
mov
push
data16
push
decl
into
jl
lcall
jg
xchg
jmp
bound
lock
inc
jle
xor
cwtl
adc
mov
xchg
stos
shlb
cwtl
fiadds
jp
push
jg
pushl
testb
mov
loope
bound
push
out
pop
inc
stos
and
mov
lcall
les
and
iret
mov
je
rorb
fs
push
insl
xorl
stc
sub
loop
fidivl
dec
clc
andb
push
xchg
mov
aad
mov
xchg
jo
or
jae
in
mov
gs
stos
mov
decl
mov
insl
push
sbb
popf
insl
loopnew
jae
mov
jle
xchg
insl
mov
pop
pop
or
addr16
ds
jo
sbb
mov
call
movsb
jno
fstps
jno
adc
popa
pop
dec
stos
ja
dec
mov
pop
pop
call
fbstp
out
orb
fwait
outsb
dec
jae
cmp
daa
pushf
addr16
pop
pop
add
sbb
jns
cmp
mov
test
push
das
mov
ljmp
xchg
jnp
cmp
pop
call
dec
dec
jl
pusha
fwait
inc
movsl
arpl
ljmp
aas
xor
inc
ds
dec
push
inc
je
inc
in
jge
clc
or
decl
ret
dec
movb
stos
push
add
pusha
push
bsf
aaa
lcall
jb
push
shrl
push
in
xor
je
jg
jns
push
fwait
aaa
popa
cs
cld
mov
imul
mov
mov
mov
pop
mov
leave
cld
xchg
aaa
jb
test
xchg
mov
ljmp
shlb
push
dec
push
int3
outsl
aad
jle
repnz
fs
dec
outsl
push
mov
push
xchg
adc
out
test
push
ljmp
pushf
lea
lods
insb
fildll
jb
sub
das
add
adc
mov
push
and
arpl
fbld
mov
pop
mov
ds
adc
xchg
dec
mov
inc
fcos
sub
xor
and
or
cwtl
sbb
jge
or
lcall
push
rorl
sbb
and
js
pushl
add
mov
push
ja
add
nop
mov
pop
mov
jle
dec
adc
mov
call
and
mov
imul
cli
popf
inc
imul
sbb
sbb
xor
aas
jo
cmp
pop
lods
dec
ja
std
xchg
popa
mov
add
lea
or
aas
mov
mov
cmpsb
lock
mov
inc
lret
xchg
xor
push
mov
xor
jp
cmc
fbld
push
xchg
add
lahf
jp
mov
or
iret
das
sub
push
push
icebp
adc
int
mov
out
mov
out
jne
and
sbb
dec
idiv
pop
inc
inc
rcrl
xchg
push
rorb
ja
xchg
cmp
call
or
push
add
sbb
ds
xchg
xor
sub
stos
call
std
mov
sbb
add
and
adc
add
pushl
cmp
fwait
data16
push
xchg
clc
cmp
jg
repnz
or
out
add
ja
push
enter
jne
jge
lcall
popa
sub
jge
fwait
cmp
fwait
xchg
push
out
inc
inc
or
mov
cmpsb
test
push
rorb
pop
test
and
out
cmp
nop
imul
outsl
in
inc
push
into
dec
jge
cmpsb
fbld
ret
push
jp
cmp
incl
sahf
push
stc
push
pop
and
lcall
inc
pop
cmpsl
mov
push
sub
cwtl
jns
movsl
ljmp
sub
scas
push
mov
sarb
and
mov
mov
mov
sbbl
repz
cmc
cwtl
test
xchg
arpl
inc
adc
inc
lods
or
mov
mov
mov
sub
cmp
data16
scas
xor
rol
jo
push
movsb
push
dec
cmpb
mov
and
incl
ss
push
pusha
jecxz
push
out
xchg
push
rol
decl
clc
mov
adc
adc
and
filds
mov
cli
mov
data16
sub
fnstcw
scas
les
and
lcall
adc
cmp
mov
lods
pop
pop
call
push
xchg
mov
and
and
sbb
push
jle
js
out
sub
mov
stc
movb
icebp
aas
lods
push
push
jb
sahf
loopne
cltd
dec
int3
inc
call
fsubs
pop
fisubl
cld
sub
icebp
push
mov
adc
cli
decl
insb
add
dec
jp
sub
lcall
xchg
stc
xor
scas
jmp
lcall
dec
jno
lods
adc
icebp
mov
out
lcall
jg
mov
mov
js
dec
ret
dec
je
sub
xchg
sub
or
mov
sbb
xchg
lea
das
and
sbb
jmp
cmc
scas
dec
mov
sbbl
ljmp
mov
xchg
xlat
xchg
push
scas
imul
jnp
xor
sub
call
cli
sub
dec
scas
xlat
xor
jne
or
aaa
pop
ds
adc
add
mov
aas
out
fimull
sub
out
ss
call
bound
or
movsl
sub
stos
adc
jp
fnstenv
pop
shrb
scas
jle
cmp
lcall
pop
sub
decl
fldcw
nop
cmpsb
into
sbb
mov
data16
rcrb
mov
add
xchg
movsl
fdivl
stos
push
movsb
or
mov
push
sarl
ret
mov
pop
mul
or
fdivrl
xchg
out
pop
and
incl
xchg
rcll
stc
out
inc
mov
cmpsb
dec
cmp
inc
js
lods
jae
inc
jg
jmp
sbb
cmp
pop
cmp
pop
dec
sbb
mov
mov
cmc
inc
mov
mov
sbb
scas
ja
decl
lock
iret
shlb
pop
jmp
jnp
xchg
inc
addr16
add
stos
mov
call
lea
movsb
movsl
lcall
mov
cmp
mov
sub
mov
adc
ficomps
pop
mov
adc
pop
out
or
jnp
mov
inc
jp
test
inc
jo
imul
out
clc
outsb
push
push
push
jne
lods
or
rolb
push
push
pop
sub
std
outsl
push
adc
arpl
inc
shl
dec
ljmp
ficompl
out
rolb
adc
mov
cli
jmp
push
push
add
int3
inc
jmp
dec
mov
and
inc
cmc
fs
loop
repnz
jo
jbe
jno
jg
cmc
decl
fwait
mov
jne
xor
out
imul
ret
mov
inc
test
stos
bound
insl
loop
cli
xchg
je
jp
call
sub
stos
test
lcall
out
mov
test
pop
je
dec
ret
inc
pop
scas
imul
out
cltd
sti
in
popa
mov
test
push
xchg
testl
decl
cwtl
ret
cmp
push
dec
decl
xchg
lods
add
cmpsl
and
push
sbb
add
call
pop
popf
mov
xor
push
mov
decl
outsb
and
sub
sub
ficoml
pop
test
dec
cmp
pushl
mov
mov
aaa
cli
lcall
adcb
loop
call
shrb
lods
mov
dec
push
addr16
adc
and
fidivrl
filds
jecxz
mov
xchg
fmull
xchg
cltd
add
mov
insl
int
shll
lcall
insb
add
jmp
xchg
mov
cwtl
xor
icebp
pop
push
add
fbstp
jns
shlb
fbstp
lock
decl
mov
mov
insb
aam
mov
ud0
mov
ret
push
imul
addr16
jmp
incl
jae
jbe
inc
out
std
push
cmp
push
fldenv
test
fdiv
pop
xchg
mov
cmp
orb
mov
cmpl
inc
jecxz
xchg
lock
sbbl
pop
jp
add
cld
push
cmc
push
test
xchg
lahf
in
fbld
push
cmp
and
negb
test
mov
loope
or
add
cli
or
shrl
xchg
out
shrl
mov
mov
scas
imul
daa
cld
sub
sub
dec
sub
dec
fbstp
out
je
add
jge
pop
rcrl
mov
out
arpl
pop
jne
adc
faddl
popf
in
sar
insl
test
sub
xchg
mov
inc
bound
cmpl
cmp
ja
call
fcomi
mov
dec
add
mov
push
test
push
fimuls
outsl
push
shll
inc
popa
movsb
pop
push
pusha
xchg
push
jae
mov
fucom
add
in
pop
mov
pop
inc
loope
int3
cs
mov
shrb
push
pop
test
pop
cmp
adc
cltd
outsl
lret
ljmp
nop
lea
out
or
jmp
movb
sti
aad
mov
push
cmp
repz
cmp
aas
pop
repnz
jp
push
add
orb
cmpsb
dec
stos
mov
sub
idiv
fwait
incl
test
xchg
repz
mov
sbb
scas
inc
gs
xchg
stc
lods
std
iret
ljmp
cli
lahf
cmp
add
pop
testb
xchg
test
stos
add
xorb
fs
fmull
pop
popa
dec
cli
rcrb
mov
repz
mov
inc
in
push
push
insb
in
sar
rol
jp
bnd
mov
out
cmp
aas
out
mov
out
lcall
jmp
adc
dec
lock
dec
sti
adc
pop
mov
mov
cltd
mov
leave
cmc
push
adc
in
jb
rsqrtps
pop
enter
clc
jg
or
sub
jl
xor
cmc
test
pop
outsb
jmp
aas
jp
ds
xor
leave
cmc
jnp
mov
pop
cmpsl
mov
and
ret
jbe
xchg
pop
ja
adc
leave
adc
inc
pop
push
fwait
and
jnp
and
test
arpl
js
loop
push
mov
dec
test
inc
mov
mov
xor
push
icebp
call
pop
mov
jge
mov
imul
ss
out
add
shll
cld
adc
outsb
out
add
call
mov
inc
inc
cmc
jbe
mov
out
les
pop
pop
lods
decl
push
adc
sti
add
fistps
jb
ljmp
cli
lcall
and
adc
into
pop
loop
fnstsw
mov
lahf
movsl
lcall
popa
push
scas
loopne
push
test
cltd
iret
push
inc
pop
pop
repz
add
cmp
inc
dec
jno
std
cltd
cmpsb
jg
pop
out
daa
jecxz
adc
jle
mov
sbb
sub
mov
lcall
pop
icebp
xchg
dec
mov
aam
mov
adc
insl
out
out
adc
jmp
int
mov
mov
xchg
ss
bound
pop
clc
pop
lea
out
and
push
aad
mov
dec
xchg
insl
push
dec
dec
lret
notb
adc
clc
shll
out
std
push
push
stos
and
push
sbb
pop
out
loop
dec
and
enter
xchg
lcall
fmull
jp
inc
mov
rorl
mov
pop
mov
cli
jb
les
dec
repnz
mov
clc
rorb
mov
psadbw
push
in
sub
lahf
out
in
push
inc
add
sti
enter
inc
sbb
sub
ljmp
lcall
lea
cmp
xchg
mov
cltd
shr
jge
mov
and
movsl
inc
int3
repnz
aad
loopne
filds
cmp
into
jae
xchg
test
cld
pop
lcall
xchg
mov
push
add
push
repnz
js
mov
data16
insb
push
testl
pop
mov
stos
in
sub
out
mov
vmread
inc
test
cmpsb
inc
int
mov
jg
dec
fstps
and
push
push
cwtl
fdivrp
add
xchg
divb
xchg
ljmp
out
data16
jno
cmp
lock
dec
pop
cmp
lds
or
aam
mov
std
mov
cmp
mov
bound
mov
std
insb
pop
cmc
call
jae
dec
stc
mov
mov
jle
cli
or
hlt
push
adc
mov
jle
ds
inc
fwait
xor
gs
pushl
sbb
sbb
push
xchg
mov
das
add
and
jns
insl
sbb
sub
loopne
and
fcomip
cmp
negb
testb
data16
sub
sar
aas
std
andb
add
mov
or
cmp
xor
push
pop
decl
adc
out
aas
inc
jle
sbb
add
push
fdivrs
call
and
jns
and
mov
cmp
or
je
incl
mov
test
add
xchg
mov
xor
jg
addb
stos
adc
scas
js
xor
clc
call
in
outsb
popa
add
in
xchg
mov
adc
lcall
or
lcall
push
sti
pop
cmpsb
test
inc
out
incb
inc
jne
fwait
test
iret
adc
repnz
jno
mov
ja
push
pop
and
or
test
insb
pop
pop
mov
outsb
fdivrp
lock
pop
es
adc
in
fidivs
or
lcall
stos
das
dec
push
outsb
adc
dec
fsts
push
mov
cmp
sbb
add
xor
mov
mov
xor
jg
sarb
add
push
out
fs
inc
int3
lods
shll
sub
inc
btsl
scas
mov
inc
ljmp
test
test
mov
adc
outsb
pop
lcall
iret
mov
inc
iret
jns
test
gs
mov
lahf
jbe
es
aaa
inc
mov
stos
mov
int
clc
jg
push
dec
sub
inc
dec
mov
sub
add
push
and
pop
add
ja
and
stc
pop
mov
jg
cmp
mov
mov
inc
sbb
mov
ljmp
inc
xchg
xchg
xchg
outsl
movb
out
sti
and
aam
hlt
pop
popa
sub
das
xchg
lock
test
notl
arpl
test
leave
aas
adc
dec
in
xor
push
lock
adc
lods
push
and
loope
out
scas
std
lods
adc
xchg
cli
repz
mov
clc
outsl
ljmp
pusha
xor
xchg
cmp
mov
jg
cmp
cltd
xor
adc
pushl
jo
stc
lock
sti
and
enter
sbb
sub
xchg
sub
jle
movsb
jle
mov
and
mov
mov
arpl
push
or
sbb
push
stos
adc
inc
add
dec
pushf
repz
dec
mov
cli
dec
pop
cmp
mov
mov
inc
in
xor
lcall
cmpsl
fidivrl
neg
test
mov
stos
cli
mov
xor
dec
cmp
sbb
arpl
jns
pusha
push
jmp
mov
mov
mov
daa
into
adc
icebp
jnp
xorl
lcall
popa
cmpsb
cmp
inc
test
cli
dec
addr16
stos
lret
jo
pusha
xchg
test
scas
sti
sahf
jp
ja
scas
add
sub
sub
sub
push
sbb
jp
mov
out
pop
sub
ljmp
in
mov
xor
cld
jecxz,pn
repz
fs
movsl
or
fildll
dec
popl
dec
pop
mov
dec
adc
pop
stos
inc
aad
pop
das
scas
popa
nop
fisubrs
gs
out
mov
pop
push
xchg
xor
jmp
cmp
add
push
adc
lods
add
mov
decl
add
adc
int3
push
lahf
push
xor
push
cmp
addr16
push
sub
jg
inc
pop
popf
iret
cmp
mov
cmpsb
stc
push
jnp
sahf
pop
push
aaa
cmpsl
hlt
sub
push
xor
pop
call
hlt
sub
jg
hlt
or
cmp
cmp
or
and
jmp
lcall
stos
or
jno
push
scas
xor
and
imul
pop
mov
clc
add
lods
repnz
push
dec
aad
push
pushf
sub
jp
jp
ja
and
sub
dec
jmp
and
push
mov
mov
push
test
jmp
pop
loope
pop
lcall
aas
cli
addb
xchg
sub
mov
sahf
cmp
xchg
popl
movsl
lcall
or
ret
cmp
cld
outsb
aaa
dec
pop
ficoml
xor
mov
lea
call
sbb
iret
xchg
sub
pop
fs
icebp
sbb
sbb
add
fimull
pop
inc
cli
add
mov
js
xchg
cmpsb
shlb
call
cmpsl
iret
mov
subb
gs
push
inc
fildll
inc
nop
test
stos
dec
test
mov
xorl
push
shl
mov
mov
imul
dec
jg
mov
or
add
popa
push
inc
jl
stos
jge
add
cmpsb
incl
jae
push
push
mov
xchg
pop
popf
add
nop
lds
pop
push
das
push
sbb
aad
jp
jg
call
push
int3
jne
jns
sti
mov
es
xchg
xchg
sbb
add
lcall
stc
mov
push
mov
mov
push
sub
js
pop
jp
jecxz
lea
imul
mov
cmp
stos
xor
stos
mov
je
adc
shlb
repnz
add
iret
and
dec
push
cld
pop
out
lods
or
and
jg
xlat
pop
adc
dec
pop
jge
cmp
jge
and
add
lcall
pusha
jno
xorl
adc
mov
dec
cld
jg
sbb
aaa
jp
shrb
pop
dec
xchg
sbb
adc
xchg
cli
xchg
mov
rorb
cmp
mov
out
lods
mov
enter
xchg
xchg
in
rcrl
mov
mov
jmp
repz
stos
lret
out
and
mov
mov
inc
cmc
das
fiadds
call
sub
adc
stos
adc
push
arpl
int3
iret
mov
add
or
call
sub
jmp
addr16
xor
adc
fidivs
inc
je
andb
mov
into
xchg
jns
movsl
andb
sbb
jecxz
dec
popa
mov
sub
sub
jp
pushl
lods
test
leave
lods
pop
test
dec
dec
hlt
dec
je
popf
imul
call
cld
pushl
adc
mov
sub
icebp
mov
cmc
nop
std
out
decl
cltd
mov
into
ret
mov
mov
sbb
lcall
push
mov
je
test
mov
insl
dec
outsb
sbb
loopne
xchg
lahf
jb
fwait
and
hlt
test
call
aam
mov
inc
icebp
xchg
jg
std
xchg
dec
imul
dec
pushf
mov
dec
punpcklbw
hlt
pushl
call
cltd
pop
xchg
dec
fiadds
js
inc
testb
decb
and
int3
xchg
xchg
xchg
jmp
subl
iret
cwtl
mov
ror
popf
lea
jge
inc
roll
lcall
jae
inc
jno
and
adc
cmp
scas
dec
pusha
shll
cmp
push
out
xchg
shll
add
iret
mov
push
pusha
cld
aaa
call
loope
mov
dec
add
mov
fidivl
mov
pop
push
orb
and
call
mov
out
fstl
ja
push
popf
aad
mov
sarb
mov
sahf
fdivl
adcl
cli
lcall
lret
pop
cmpsb
dec
popa
hlt
xchg
add
icebp
lock
dec
jbe
mov
push
jg
imul
out
jo
iret
xchg
xor
pop
clc
push
test
shll
jp
jae
lret
mov
dec
enter
sub
int
cld
xchg
pop
jo
enter
cwtl
or
addr16
xchg
or
cmp
test
or
cmp
mov
stos
and
add
mov
mov
lea
jns
testl
fistpl
addr16
outsl
add
ret
call
lret
stos
pop
insl
mov
xor
fisttpll
mov
mov
jmp
dec
jo
xor
add
pop
or
in
sti
mov
loope
fists
cmp
popf
pop
mov
insb
pop
add
xor
arpl
out
mov
test
mov
lcall
xor
dec
push
pop
and
mov
ss
fwait
mov
adcb
cmc
iret
sbb
incl
cld
push
dec
neg
jno
andb
fdivp
dec
push
shl
movsl
pop
or
adc
subb
cld
xchg
xor
dec
shlb
testb
mov
inc
fdiv
or
out
sar
fdiv
lock
lcall
mov
cld
insl
sbb
int
in
xchg
pop
call
or
fmulp
in
clc
clc
xchg
mov
push
insl
xor
imul
bound
dec
icebp
xchg
cmp
cmp
add
jo
daa
jbe
xchg
incl
xchg
lcall
sysret
push
lsl
sbb
cs
pop
mov
push
orl
jb
mov
stc
clc
adc
mov
mov
xor
lret
lret
xlat
lds
gs
loop
and
mov
push
repz
fs
fisttps
jne
add
stos
jge
dec
inc
les
int3
sub
sarb
into
mov
scas
outsb
mov
jl
inc
ja
jb
sarb
jb
xlat
les
je
pop
aam
adc
push
xor
mov
mov
jb
dec
aas
not
or
mov
loopne
xor
addr16
add
ret
nop
mov
jl
stos
xchg
mov
xor
out
sahf
or
lods
push
sub
jecxz
mov
add
dec
rcr
pop
mov
mov
and
test
ret
fisttps
add
loop
cmpsb
xor
push
fadd
mov
clc
and
enter
mov
sbb
and
incl
lods
adc
iret
in
mov
rclb
jmp
adcb
cmpsb
lea
jle
and
lcall
push
adcl
dec
or
jo
push
ror
mov
push
lcall
jnp
daa
inc
jecxz
adc
loope
popa
inc
inc
inc
movl
sarl
call
shrl
xchg
mov
sbb
cld
push
push
mov
push
mov
jbe
hlt
or
imul
adc
mov
and
mov
pop
mov
div
xchg
sub
nop
cmpsb
movsl
roll
lods
cmp
inc
ret
xchg
and
fbstp
or
mov
jp
or
out
push
push
jp
cmp
das
clc
out
arpl
mov
rcl
mov
cmc
mov
repnz
lods
incl
mov
data16
jns
iret
sarl
lods
dec
out
or
mov
lds
pop
sbbl
xchg
cmp
cld
shl
xchg
cmpsb
pop
push
out
xchg
ret
inc
clc
fbld
addr16
sbb
mov
ja
cmp
popf
xor
mov
cmp
scas
outsl
ficomps
out
pop
rcl
xchg
out
call
push
xchg
cltd
mov
ror
mov
mov
outsb
fdivp
lret
xchg
xor
cmp
out
mov
or
pop
and
ret
inc
negb
jge
push
push
popf
push
out
faddp
in
fisttpl
scas
jp
movsb
lcall
lcall
mov
scas
add
loopne
fnstsw
pop
mov
out
jl
mov
icebp
xor
movsl
shl
mov
scas
dec
les
dec
xchg
ror
add
test
or
mov
mov
push
aad
xchg
sub
xchg
sbb
mov
fimuls
jne
mov
movsb
filds
out
cli
add
test
mov
into
out
adc
clc
enter
std
outsl
bound
sbb
mov
inc
fucomp
ficompl
je
test
jge
imul
stos
test
cli
mov
sbb
hlt
inc
push
adc
std
cmpb
enter
or
or
xor
mulb
int3
shrl
dec
test
nop
cmp
jmp
cmp
in
mov
and
test
rcl
push
lahf
iret
into
sub
sbb
pop
push
icebp
add
int
push
fwait
push
push
mov
xor
bound
mov
mov
ror
cmpb
lret
mov
push
pop
jmp
jns
push
arpl
or
mov
lds
cmp
xor
sbb
gs
add
test
outsl
fcoml
mov
out
lahf
jnp
mov
imulb
sub
outsl
mov
shll
addl
loopne
mov
fcmovnu
test
push
mov
mov
mov
jno
sahf
ljmp
daa
push
out
mov
mov
jb
push
aad
subl
push
scas
rolb
inc
jno
loope
xchg
ja
roll
inc
mov
movsb
and
loopne
movsb
mov
fldenv
ret
mov
orb
or
call
scas
bound
mov
sbb
and
clc
ja
mov
cmc
xchg
arpl
icebp
div
rorb
jns
enter
and
stc
std
jl
xchg
sti
xor
cmc
push
jg
mulb
cwtl
mov
lea
data16
jmp
out
aam
out
mov
push
or
out
dec
push
xor
fbstp
call
mov
cwtl
xchg
out
mov
subb
icebp
cli
lcall
into
push
dec
add
rorb
mov
ret
scas
lret
mov
jecxz
stos
test
es
cmpsl
out
pop
jmp
ljmp
iret
xor
cmp
inc
incl
insl
push
dec
cmp
lds
inc
mov
cmpsb
pop
enter
push
mov
test
dec
lcall
cmpsl
jb
call
jg
cmpsl
mov
mul
fdivp
lret
lock
mov
pop
xchg
loop
xchg
ret
cmpb
out
push
sarl
out
pop
cmp
lods
daa
mov
mov
and
jle
outsl
lcall
sahf
dec
sbb
gs
fistpll
movsb
jg
andl
push
rcr
mov
test
xchg
adc
outsl
sbb
lret
iret
in
std
push
xchg
sti
mov
add
insb
enter
in
shrl
and
jmp
mov
loopne
add
in
loop
mov
cltd
mov
or
mov
neg
sbb
in
test
int3
int3
mov
xchg
lcall
in
subl
repz
out
lods
mov
add
jmp
jb
imul
push
sbb
xor
sbb
repnz
cmpsl
cltd
sbb
jp
lods
inc
hlt
fcmovne
push
xchg
clc
mov
mov
clc
lods
ljmp
jb
out
pop
or
lret
mov
out
les
shlb
xchg
out
lea
jmp
pop
pushf
jl
mov
ljmp
addr16
mov
cmc
mov
jo
mov
cli
negl
lock
adc
loope
mov
arpl
push
out
cli
pushl
mov
mov
inc
addr16
push
ljmp
jns
cmp
dec
jp
clc
jne
outsb
push
bound
dec
pusha
daa
dec
inc
pop
leave
jmp
sub
int
mov
mov
test
les
mov
push
mov
and
gs
test
mov
add
test
cmove
sti
and
xchg
das
pop
push
popf
xor
lcall
lcall
and
inc
data16
sbb
pushl
in
inc
repz
adc
pop
fstpl
jne
or
xor
popa
lods
jge
cmpsb
fcompl
xor
add
gs
jge
jp
rcr
sub
ds
mov
xor
movsl
mov
sbbb
pop
dec
stos
add
jle
hlt
dec
mov
fs
jbe
mov
add
push
pop
andb
adc
movsb
cmc
jg
jo
cmp
cmp
sub
jo
jns
mov
xchg
dec
imul
iret
add
jno
xchg
sub
test
jp
cmp
pop
mov
dec
jp
sub
mov
mov
pop
push
push
add
js
test
sbb
sub
addb
mov
dec
mov
jo
jb
lods
mov
and
aaa
fdivr
mov
popa
sub
imulb
clc
outsl
inc
push
mov
inc
jmp
sub
jmp
pop
dec
incl
gs
xchg
or
incl
or
sbb
xor
popa
mov
jne
lea
and
or
sbb
pop
inc
push
push
lea
insb
les
mov
adc
outsl
mov
loopne
mov
mov
dec
mov
pop
lock
ja
mov
sbb
sbb
adc
add
divl
cmp
decl
ss
das
jp
nop
push
icebp
test
into
xor
adc
je
push
sub
pusha
pop
mov
adc
inc
test
insb
shrb
mov
and
mov
xor
adcb
mov
inc
pop
cwtl
fs
pop
insl
mov
xor
xchg
gs
pushf
push
xchg
cmp
sbb
daa
ja
push
orl
clc
jg
and
mov
arpl
add
sbb
mov
jne
jg
subb
cmc
push
dec
ja
jp
pop
cmp
data16
xchg
test
aaa
inc
ljmp
and
incb
sub
adcl
or
lea
les
inc
ret
sub
aaa
and
xor
mov
lcall
adc
jno
inc
mov
jb
into
inc
arpl
mov
mov
xchg
inc
push
cwtl
das
nop
or
jp
mov
lds
cld
push
mov
stos
test
into
mov
xor
insl
mov
ljmp
inc
cmpsb
mov
movsl
lcall
xor
repnz
cmp
pop
xor
mov
pop
inc
leave
push
inc
cmp
pushf
xor
sarl
jmp
inc
and
mov
xor
ret
aad
inc
ret
decl
jnp
add
push
mov
mov
mov
dec
push
push
and
int
mov
xor
inc
mov
jbe
js
jle
daa
icebp
mov
subb
push
jg
inc
arpl
mov
push
add
jmp
mov
mov
xchg
cs
and
lcall
xchg
or
enter
lds
inc
dec
cmpsb
cmpsb
sbb
mov
imul
in
jb
out
ja
je
cli
sbb
jle
cli
incl
sub
push
inc
xor
stos
fidivrl
call
push
mov
push
es
add
pop
pushf
dec
inc
sqrtps
test
ljmp
or
cmp
push
test
sbb
sbb
gs
dec
cmp
pop
out
and
inc
sub
mov
and
mov
jb
icebp
aas
cmpsb
lds
clc
push
adc
mov
and
dec
aaa
outsb
mov
push
jns
push
jo
fwait
sub
inc
cwtl
push
dec
adc
adc
jb
lods
mov
sarb
adc
or
sbb
bound
popa
rclb
pop
subl
mov
or
xor
lds
sub
mov
cmpb
fnstcw
sbb
and
outsl
sahf
push
push
dec
mov
sbb
sbb
sub
pop
sub
xor
js
xchg
push
hlt
push
dec
push
pop
int3
jns
jbe
xchg
movsb
lsl
jg
or
xor
dec
mov
xchg
inc
test
jb
mov
adc
mov
sbbb
inc
or
test
negb
mov
je
lcall
xor
ret
das
movsl
shrb
mov
dec
repz
daa
and
dec
and
stc
mov
sbb
xor
jmp
mov
cmp
pop
xor
mov
inc
push
subb
inc
or
sbb
ja
add
and
adc
jg
pop
pop
push
aas
jmp
sahf
aaa
xchg
mov
ret
idiv
cmc
jg
or
mov
sbb
sub
stos
int
jg
test
mov
popfw
dec
sbb
sbbb
xor
push
ret
xchg
jo
dec
fmull
dec
adc
out
cmpsl
int
pop
enter
imul
cld
std
pop
xchg
jmp
push
jp
jge
scas
stos
and
rclb
in
push
dec
dec
cltd
push
xchg
into
rcl
cmc
lcall
pop
mov
and
sbb
cmp
mov
xor
jo
stc
in
cmp
jne
inc
out
outsb
inc
in
xchg
js
cs
pop
xor
lret
add
mov
jp
sbb
jmp
or
cld
inc
stos
xchg
xor
mov
jb
mov
inc
les
test
outsl
xchg
sbb
sahf
push
push
pop
loopne
sbb
lea
addr16
adc
pop
mov
movsl
push
into
les
ja
aaa
daa
jl
sub
cmp
outsl
and
add
aaa
xor
add
xorb
daa
cwtl
and
cmp
cld
mov
orb
xchg
xchg
hlt
mov
cmp
aaa
cmpsb
jge
cld
aaa
das
movsb
push
or
xlat
or
push
push
cmp
dec
lret
lock
push
jno
mov
pop
jp
jmp
stos
fsub
dec
jmp
lcall
push
add
stos
cmp
js
or
movb
cli
xchg
daa
adcb
add
dec
adc
idivb
outsb
pop
cmp
cmc
int
test
arpl
cmovo
xor
filds
repnz
mov
addb
out
push
idiv
insl
into
jle
std
lods
adc
inc
cmp
ljmp
shrb
mov
jnp
xor
lret
pop
push
inc
pop
shrl
mov
hlt
or
std
push
pop
pop
cmpsb
cmp
sbb
mov
sti
push
data16
and
sbb
lcall
sbb
ds
int
xchg
icebp
mov
jecxz
imul
stos
rolb
and
shrb
xchg
arpl
cmp
mov
out
sbb
bound
cmp
jge
lcall
sahf
in
xorb
iret
mov
mov
add
adc
ja
fisubl
test
push
sub
outsb
loop
pop
pop
push
add
add
incl
incl
dec
jp
test
jge
roll
inc
pop
xor
pop
sub
incl
mov
mov
cmp
lock
decl
cltd
fs
push
out
or
mov
and
jb
rcrl
data16
or
xchg
mov
xchg
ljmp
dec
pop
sbb
xchg
mov
test
pop
dec
loope
jle
add
jo
and
lcall
mov
out
rcrl
dec
je
divl
bound
arpl
and
sbb
push
adc
loopne
jecxz
mov
call
inc
pop
shlb
mov
out
divb
pop
xchg
mov
pop
popa
out
mov
sbb
mov
fiadds
insl
ret
cmp
out
icebp
jg
pop
mov
adc
jno
stos
cmp
lods
shlb
pop
and
xchg
rorb
push
push
ljmp
dec
popa
xchg
push
inc
pop
xorb
ds
mov
mov
out
mov
mov
or
sahf
scas
fldt
divb
lcall
or
das
clc
cltd
xchg
mov
xchg
das
aaa
std
decl
test
jno
lahf
ja
dec
popf
rcrb
icebp
decl
push
xchg
out
pop
push
icebp
inc
in
jae
pushf
ja
mov
cmp
and
push
mov
sbb
jno
scas
test
sub
decl
cmp
sub
lcall
dec
xor
mov
cltd
out
dec
jecxz
xchg
call
add
aad
out
jbe
push
inc
in
cli
ljmp
mov
mov
iret
daa
bound
sbb
mov
mov
push
or
icebp
cmp
outsl
xchg
mov
daa
and
ret
and
adc
pusha
mov
aaa
mov
jg
mov
jg
loop
xor
dec
push
leave
sbb
je
mov
incl
pop
mov
popa
pop
sbb
jo
repz
aam
cmp
fcomps
repz
jbe
add
shl
sbb
sub
insb
stos
cmp
push
pusha
cltd
xchg
outsb
cli
movsl
ffreep
cmp
enter
pop
and
dec
sbb
adc
inc
xor
test
ljmp
jle
push
imul
in
jg
jg
jge
clc
jmp
icebp
xchg
xchg
pop
inc
xchg
push
sarl
pop
pop
lock
mov
pop
std
ss
push
dec
test
and
xor
sub
lds
mov
mov
int3
pop
sbb
decl
insl
mov
and
adc
mov
scas
push
enter
loopne
fidivrl
adc
mov
data16
outsb
movsl
or
or
gs
aas
add
inc
bound
les
mov
ss
mov
sub
and
cmp
inc
mov
pushl
dec
inc
and
sbb
adc
add
pop
pop
push
jp
mov
mov
push
jl
inc
lds
addr16
push
aam
mov
leave
mov
das
pop
stos
outsl
xor
ljmp
jns
inc
push
stc
or
or
insb
or
add
xlat
decl
cmp
adc
cld
and
adc
cltd
dec
dec
test
inc
dec
ljmp
call
insl
jle
mov
inc
sub
push
insb
rcrl
dec
jecxz
jno
push
mov
call
xor
jae
arpl
adc
icebp
orb
mov
call
outsb
xchg
fwait
cld
sahf
pop
scas
dec
fsubrp
ds
jg
pop
cmp
xchg
mov
sbb
incl
leave
cmp
fnsave
sbbl
dec
and
imul
mov
xor
idiv
call
outsb
mov
shll
flds
pop
or
cmp
push
mov
ret
sub
std
mov
xchg
lods
sbb
pop
inc
adc
or
hlt
cli
jge
inc
addr16
lock
add
adc
mov
popf
repnz
lcall
jg
add
subl
adc
test
cwtl
into
mov
add
aam
movsl
jmp
insb
imul
int
cmc
dec
dec
decl
pop
mov
data16
inc
test
es
stos
xor
call
divl
je
popl
sbb
popl
and
xor
push
inc
aam
outsl
xchg
popaw
push
push
pop
push
pop
xor
sub
test
shll
mov
and
ljmp
mov
lock
push
dec
cmpsb
and
lea
lret
mov
scas
sbb
ljmp
loope
nop
lret
sub
pop
sub
insl
jecxz
cli
push
jge
or
jg
ljmp
inc
adc
pop
out
or
les
je
ss
cmpsb
push
push
adc
ret
in
mov
and
push
push
insb
pop
add
inc
enter
es
loope
pop
pop
data16
outsl
pop
sbb
aas
cs
add
outsb
mov
push
add
cld
add
cltd
sbb
movsl
mov
lds
es
inc
je
mov
cmp
test
mov
add
icebp
dec
jl
jl
cmp
decl
cli
xchg
dec
xchg
pop
jmp
add
xchg
xor
dec
adc
xchg
and
mov
mov
mov
add
cmp
cmp
inc
stos
negb
lcall
pushl
jbe
pop
jb
scas
mov
test
push
in
lods
test
jle
cmp
cmpsb
nop
xchg
push
xlat
or
in
mov
inc
jp
pop
and
test
jle
add
cmp
mov
out
xor
jbe
and
inc
dec
clc
jae
clc
mov
push
fwait
shll
pushl
outsl
mov
mov
loop
lcall
insl
cld
jg
or
jg
test
xor
xchg
push
clc
aas
addl
sub
mov
dec
add
inc
std
or
aaa
pop
enter
das
inc
xchg
jmp
test
push
mov
jae
dec
push
movsl
jg
scas
mov
call
or
std
and
xchg
mov
cmp
int
jg
ja
dec
ret
inc
add
adc
push
add
nop
dec
gs
mull
int
ret
or
cli
mov
push
test
scas
es
cmpsl
xor
add
mov
out
and
lcall
mov
adc
gs
scas
cmp
adc
mov
xor
jg
push
fdivrs
mov
jge
xchg
mov
sub
sub
sbb
filds
dec
jle
cmp
mov
sub
mov
jle
cs
cltd
cmp
and
adc
shlb
cmp
aas
std
incl
ljmp
test
inc
aas
xchg
and
pop
scas
adc
repz
mov
fldenv
xchg
inc
insb
push
add
andb
fdivs
mov
xor
mov
jb
and
inc
mov
push
jno
fistl
decl
xor
and
cwtl
decl
call
pop
mov
js
cmp
add
add
mov
adc
addb
sub
or
xchg
pop
xor
ret
xor
xchg
sahf
mov
mov
cmp
cmp
pusha
mov
xchg
popa
lahf
inc
test
cmp
dec
pop
cmp
jo
push
shrb
adc
shl
test
ret
bound
cmp
fs
pushf
inc
mov
insl
jmp
mov
mov
push
pop
pusha
fwait
ret
nop
pop
xor
push
fs
pop
mov
jmp
push
je
mov
mov
pop
sbb
lret
rolb
xchg
push
clc
fdivr
mov
inc
xchg
cs
hlt
sub
and
ss
loope
push
adc
es
mov
dec
cld
and
jmp
sub
fists
jo
and
cmp
mov
push
mov
imul
lods
pop
outsl
xor
lcall
mov
sahf
jbe
or
pop
fidivl
cmp
mov
popa
lret
int3
push
sub
and
imul
js
test
cmpb
clc
shrb
sbb
jb
mov
or
add
sbb
adc
adc
and
sahf
cmp
push
and
shll
ret
sbb
and
test
add
decl
sbbl
js
pop
adc
inc
movsl
dec
add
or
pop
std
lods
mov
mov
inc
add
push
pop
mov
inc
add
inc
sub
inc
xchg
fwait
das
xchg
mov
shll
mov
jg
js
lock
aaa
sbb
cmp
or
test
int3
adcb
call
iret
cli
sbb
arpl
jns
inc
dec
cmc
and
jg
shll
pop
push
xchg
mov
inc
das
insl
lds
adc
je
mov
call
xchg
in
xor
setns
sub
push
inc
sub
out
push
ret
jae
in
rclb
inc
push
loopne
adc
pop
mov
mov
mov
loopne
pop
sbb
xchg
pop
sbb
pop
mov
and
pop
pop
out
jp
stos
add
xorb
in
cs
jmp
gs
inc
inc
xchg
or
inc
xchg
mov
add
test
ss
pop
push
clc
cltd
es
pop
xchg
push
mov
or
mov
lds
popa
jbe
sbb
jmp
sub
call
outsb
faddl
out
dec
pinsrw
loopne
jg
sub
inc
test
and
ret
out
mov
pop
inc
in
ss
ja
push
fsubrp
je
es
cmp
ret
ljmp
xor
rep
cs
out
pop
lods
inc
ljmp
add
icebp
inc
adc
cmp
adc
adc
and
xchg
xchg
cmp
pushl
cmp
mov
xor
inc
jl
jne
sbb
pop
inc
mov
orl
cmpsb
clc
call
adcl
lods
cwtl
and
dec
mov
sbb
test
out
cmp
mov
outsl
mov
incl
adc
pop
fstl
mov
push
xor
add
lcall
add
and
jb
or
jg
mov
test
push
xchg
add
mov
dec
adc
pop
pop
add
mov
jg
or
xchg
push
xchg
xor
insb
roll
mov
xchg
inc
outsb
jmp
dec
jg
sbb
push
adc
stos
adc
adc
fdivr
cmp
js
cmp
sbb
lock
movsl
jp
adc
aas
xchg
lock
mov
scas
and
mov
mov
jle
lods
sbb
sar
aaa
cld
pop
in
clc
scas
outsl
hlt
pop
xchg
call
mov
jg
cmp
sbb
fidivl
xchg
cli
sbb
xchg
cmpsb
xchg
or
incl
aaa
ficomps
fs
adc
or
inc
js
decl
daa
aas
std
mov
out
ret
jo
lret
pushf
jb
adcb
jg
ja
sbb
add
inc
cltd
sbb
dec
fcomps
push
sub
gs
lcall
dec
das
add
cs
mov
mov
mov
push
imul
push
mov
jg
push
push
scas
push
cltd
adc
inc
lret
enter
das
cmp
jae
daa
das
lahf
jnp
lods
mov
ljmp
ljmp
or
mov
dec
push
clc
dec
dec
pop
sbb
fnstenv
loop
fcmove
inc
push
or
incl
mov
jno
aas
insl
mov
mov
fsubl
jmp
xchg
mov
aas
xchg
and
or
push
cmc
mov
dec
cmpsb
mov
ret
hlt
adc
addl
and
add
sahf
insb
inc
cli
pop
pop
jge
outsl
ds
das
jns
out
sbb
pop
movsb
jae
push
and
or
shrb
jb
ss
and
xor
addb
sub
push
pushl
xchg
jp
movsl
inc
js
cmpl
test
clc
call
out
dec
pop
dec
fnstsw
outsb
inc
cmp
push
sub
aaa
and
ret
push
jl
es
lcall
test
sahf
loop
pop
fidivs
lea
inc
loopne
push
jbe
mov
insl
inc
imul
inc
or
incl
in
mov
ret
cmp
jnp
stc
mov
repnz
push
xchg
arpl
mov
dec
jae
xlat
jbe
jmp
mov
stos
gs
daa
or
and
call
adc
lcall
repnz
notb
lods
cltd
jb
ljmp
lcall
jmp
aas
daa
dec
out
lcall
push
adc
aas
stos
inc
inc
movl
xchg
ljmp
dec
inc
out
mov
leave
or
cmp
xchg
adc
je
ljmp
das
out
jle
xor
push
mov
movsl
mov
lea
dec
cli
push
pop
add
sahf
xchg
jno
adc
or
pop
and
divb
aaa
insl
jbe
jge
jge
jb
popa
add
jo
xor
mov
stos
add
inc
cld
fstpt
and
call
psubusb
add
pop
mov
jge
push
jg
fbld
adc
ret
mov
lea
aas
cmp
mov
and
outsl
sbb
cmp
loop
out
in
faddp
mov
decl
xor
pop
jle
iret
xchg
ds
xor
nop/reserved
and
js
add
sub
cmp
rol
repnz
outsb
pop
jae
push
mov
cmp
mov
ljmp
stos
test
mov
jae
pop
sub
dec
das
xor
andl
call
das
jl
fbstp
shrb
das
insl
mov
pop
lcall
push
in
addr16
ret
stos
loopne
jg
decl
and
inc
andb
ret
stos
and
pop
andb
pushl
fildll
movsl
imul
loop
fsts
scas
inc
fs
je
idivl
pop
decl
lods
sbb
adc
out
mov
mulb
shrb
stos
sbb
ljmp
sub
sbb
sub
jp
aas
sbb
mov
test
ljmp
pmulhw
and
incl
insl
sub
push
fs
nop
and
repz
cmp
xor
push
out
inc
ja
movsb
push
sub
ljmp
outsb
enter
pop
mov
mov
clc
mov
push
push
shlb
testl
mov
pop
adc
out
lret
lahf
sub
pushl
cmp
cmp
add
xchg
repnz
adc
adc
add
dec
jmp
jne
mov
movsl
or
and
mov
ds
lret
mov
xchg
adc
int3
pushl
fdivr
pop
popa
cld
cmpb
fisubl
hlt
and
stos
cwtl
adc
add
and
out
adc
jmp
xor
fwait
adc
xlat
jne
incl
dec
adc
mov
lahf
push
mov
hlt
xchg
sbb
pop
mov
nop
adc
and
add
pop
cwtl
ljmp
cltd
xorl
sub
push
push
jp
inc
push
lahf
cmp
jp
mov
sub
and
sbb
mov
xchg
jb
faddl
push
push
call
push
ja
inc
loopne
data16
jg
pusha
std
je
sub
ljmp
mulb
pop
stc
dec
test
dec
enter
and
sbb
adc
mov
into
adc
rorb
enter
mov
fwait
mov
add
jg
daa
pop
sbb
scas
cmp
xchg
movsl
sub
xchg
push
jl
sbb
push
jecxz
pop
pop
pusha
xchg
mov
mov
and
loopne
subl
mov
xor
mov
mov
ss
das
lods
test
pusha
lods
and
addl
int
incl
xchg
jnp,pt
or
mov
sub
jae
pop
scas
mov
scas
push
push
pushf
repnz
and
scas
pop
aam
mov
das
cli
jg
gs
xor
scas
js
and
ja
lcall
sbb
cmp
loopne
jg
cmp
cs
les
subb
shr
mov
lea
lods
jno
jo
cmp
push
jmp
jo
or
outsb
aam
mov
mov
xor
jecxz
and
inc
sbb
mov
sahf
lea
icebp
cmpsl
sub
mov
xchg
sbb
inc
mov
dec
or
stos
pop
jmp
inc
pop
xchg
les
mov
push
jbe
xchg
xor
mov
add
push
pop
fnsave
clc
mov
dec
jmp
ss
jnp
dec
stos
cmp
push
dec
add
adc
jl
scas
mov
inc
mov
pushl
cmp
pop
xlat
popf
pusha
adc
inc
aas
jle
sub
dec
inc
jp
sub
jne
out
push
push
xchg
stos
jp
inc
inc
cs
outsl
call
roll
cmpsl
orb
pop
into
mov
scas
fwait
push
jnp
ljmp
fistps
dec
cli
mov
push
mov
clc
pushl
sbb
xchg
push
sbb
imul
jo
mulps
push
cmp
pushl
jp
push
repz
push
and
xor
and
push
mov
dec
mov
push
mov
leave
repnz
imul
incl
movl
arpl
ljmp
nop
push
inc
pusha
and
adc
xor
inc
orl
out
ss
mov
imul
inc
pushl
cmpsb
out
or
xchg
and
jno
xor
jb
dec
mov
mov
push
push
push
les
fwait
lret
cmpsl
pop
iret
xor
ret
mov
aam
mov
insb
rcll
xchg
push
push
pushf
outsb
jg
stos
inc
mov
xchg
xor
or
dec
jne
push
call
sbb
inc
push
mov
add
xchg
cwtl
push
pop
stc
scas
push
lcall
xor
cmpsl
mov
xor
mov
xlat
mov
push
sbb
pushl
add
push
mov
mov
inc
xchg
jl
pop
cwtl
ret
mov
inc
aam
jo
push
mov
clc
rorl
dec
cli
mov
lock
xchg
stos
clc
filds
loopne
lds
cmpsl
scas
test
ret
std
xchg
push
fidivrs
cmpsb
adc
in
lock
das
ret
jmp
leave
stos
mov
aas
inc
std
push
icebp
jecxz
movsb
mov
ret
sti
xor
jecxz
mov
mov
inc
lods
test
inc
into
incb
incb
push
add
enter
call
xor
cmpsl
xor
scas
cli
and
mov
scas
int3
testb
out
std
pop
lcall
xchg
sarl
je
or
repnz
adc
cmpsb
loope
dec
mov
scas
xchg
dec
cld
hlt
jle
jb
mov
pop
push
push
jg
jecxz
pusha
movsb
fdivl
test
popf
pop
repz
pop
jp
pop
add
adcb
and
out
fdivp
add
fs
cmp
jo
ret
loop
scas
push
icebp
fnstcw
fidivl
gs
push
cmp
xchg
dec
in
cmp
and
mov
lds
clc
jp
fs
jbe
iret
and
inc
lods
xchg
dec
jg
mov
pop
push
mov
cmpsb
icebp
aas
icebp
gs
jmp
into
mov
std
incb
std
outsl
fsubrs
das
push
daa
test
test
repnz
clc
das
xor
dec
daa
jnp
and
inc
inc
ja
lea
ja
inc
sbbl
scas
decl
inc
loopne
sbb
test
imul
std
das
and
fidivrl
and
dec
push
inc
add
mov
inc
mov
insl
data16
sbb
mov
gs
sbb
dec
mov
mov
mov
xchg
add
imul
or
dec
lcall
push
leave
and
ds
test
iret
popf
dec
xchg
pop
lret
mov
ljmp
outsb
ds
outsb
rorb
xchg
imul
insl
sub
cmp
test
daa
lcall
pop
sbb
mov
mov
addr16
jne
ljmp
xor
fisttps
jbe
or
and
pushf
ljmp
pop
mov
add
or
dec
sar
mov
add
pusha
jns
dec
pop
out
mov
inc
arpl
sbb
mov
cmp
lds
ljmp
int3
xor
pop
and
insl
outsb
xlat
push
inc
jge
je
or
pop
sar
push
adcb
xor
adc
scas
nop
into
inc
into
jl
imul
pop
hlt
mov
out
adc
jns
arpl
call
and
mov
imul
aad
mov
cld
cli
stos
mov
sub
jl
pop
mov
gs
mov
jge
ds
jbe
dec
movsl
mov
xchg
les
lods
push
cmp
inc
xchg
cltd
repz
sub
mov
decl
mov
push
pop
int3
sub
jnp
jae
js
pop
and
shlb
stos
insl
mov
dec
mov
lcall
sub
sbb
movsb
movsb
data16
enter
mov
dec
mov
jmp
ds
incl
call
mov
adc
push
or
adc
imul
adc
cwtl
jb,pt
data16
jmp
jmp
fbld
insb
aas
fs
fs
je
cli
pop
mov
ss
sbb
inc
cltd
cwtl
pushf
adc
sbb
mov
pushl
fnstcw
push
xchg
mov
loope
or
jle
adc
mov
lahf
faddl
push
out
cmpb
pop
inc
loopne
sahf
adc
inc
cli
pushf
xchg
or
addl
mov
stos
or
jg
sbb
or
test
inc
into
push
nop
and
or
lcall
das
pop
push
lea
ja
fistl
pop
loop
mov
stc
out
into
lret
inc
xor
sub
mov
adc
cld
ljmp
sub
cmp
pop
pop
faddl
mov
dec
outsl
push
sub
inc
faddl
and
or
jle
add
and
add
mov
mov
adc
cld
or
push
mov
pushl
stos
inc
mov
sub
lcall
sub
push
dec
and
std
pop
pop
add
lods
cmpsb
add
add
inc
inc
mov
addl
lock
push
add
fadds
cli
sbb
or
dec
sar
scas
xchg
out
mov
jns
test
sbb
out
mov
jg
decl
xor
in
fcmovnb
mov
stc
lcall
adc
jne
icebp
inc
orb
mov
sbb
and
mov
add
sbb
fdivrl
jg
adc
stc
push
lock
add
imul
sbb
mov
mov
shrl
arpl
or
mov
je
scas
call
mov
repz
jno
cmpsl
arpl
mov
incl
sahf
xchg
popf
iret
movsl
or
xchg
cmp
pop
sub
sub
popa
mov
mov
out
xchg
ja
xchg
pop
xchg
pop
dec
sbb
jne
sar
mov
lea
js
mov
mov
push
out
mov
insl
jmp
and
mov
adc
scas
clc
incl
pop
add
lret
insb
xchg
rorb
cmpsb
or
int
mov
sbb
cs
incl
jb
mov
mov
mov
jge
or
xchg
xchg
adc
mov
cli
ljmp
push
add
and
stos
dec
push
imul
clc
adc
mov
dec
mov
dec
pop
mov
cs
ret
js
fdivrp
lds
sbb
mov
pop
test
out
pop
test
cmp
aas
ljmp
add
idivl
sbbb
lcall
ljmp
adc
imul
inc
push
inc
cld
and
mov
sbb
mov
movsl
popa
es
sahf
xchg
or
ss
fisubrs
and
ljmp
and
and
cmpsb
lea
sbb
loop
xchg
sbb
out
lea
in
mov
pushl
fisubl
bound
ret
dec
inc
jbe
jg
ss
scas
mov
mov
loop
sub
adc
mov
dec
lcall
ret
pushf
mov
push
enter
inc
iret
xchg
sti
mov
loopne
cld
cltd
lods
insb
rcrb
stos
imul
lods
sahf
mov
cmpsb
pop
into
arpl
add
cmpsb
and
scas
adc
ja
add
pop
pop
push
dec
mov
pop
outsb
ljmp
push
mov
inc
or
push
loop
inc
stos
incb
test
dec
lahf
mov
mov
jbe
cmp
ret
dec
ljmp
cmp
shl
mov
ja
xchg
adc
push
mov
mov
in
and
jg
inc
inc
insl
js
dec
sbb
repz
mov
js
shl
pushl
scas
adc
push
data16
gs
add
outsl
xchg
cwtl
mov
mov
outsl
inc
sbb
das
lretw
in
sub
sub
adc
out
or
pushl
push
mov
jne
xor
xor
cmp
cmp
lcall
push
xchg
addr16
cmpl
out
push
cmp
repnz
jmp
sub
out
sbb
test
dec
pop
and
mov
push
ss
addr16
je
mov
dec
mov
cmpsb
inc
mov
mov
es
and
cmpl
jg
bound
mov
and
js
movsb
aaa
jnp
jno
ficompl
jecxz
add
push
cli
sahf
sbb
sarb
rolb
cmp
clc
pushl
es
dec
mov
dec
adc
test
inc
aas
jp
lcall
add
mov
sub
mov
pop
cmp
mov
dec
adcw
fimull
or
cmpsb
adc
xor
push
mov
inc
or
mov
mov
ljmp
cmpb
inc
out
push
addr16
ss
mov
ret
inc
inc
mov
aad
dec
push
and
cltd
fwait
jo
cwtl
enter
movsb
std
lcall
inc
aad
dec
pop
inc
fists
xchg
jbe
jnp
sti
or
jmp
gs
adc
mov
xchg
movsl
lcall
fldt
jmp
pop
mov
ss
sub
call
add
sbb
lcall
repz
xchg
mov
add
mov
cmp
mov
ljmp
jae
jle
arpl
mov
mov
ss
scas
mov
je
adc
inc
out
add
movsb
ffreep
int
pusha
nopl
hlt
push
fisubrs
scas
cli
enter
or
or
fadds
inc
jo
roll
add
nop
ljmp
push
insb
lret
fwait
imul
add
lods
cmpsl
imul
jg
mov
sbb
movsl
cmpsb
mov
or
xchg
rolb
stos
scas
mov
ljmp
xchg
dec
lcall
mov
cmpsb
xchg
out
movsb
inc
out
stos
dec
inc
inc
idivb
fs
dec
decl
cld
decl
lret
and
pop
and
repnz
push
or
pop
lods
jmp
mov
jae
mov
xchg
pop
aas
push
hlt
xchg
cs
xchg
mov
push
ret
mov
cwtl
pop
pop
pop
lock
and
adc
and
adc
sub
xor
leave
and
add
inc
sahf
imul
xchg
dec
and
sahf
pop
insl
es
and
push
mov
clc
ljmp
xchg
cmpl
je
popa
sub
xchg
lds
stos
inc
dec
lcall
stos
aam
xor
daa
jmp
sahf
pop
movsl
lcall
idiv
nop
push
jmp
jbe
adc
repz
mov
leave
lods
push
arpl
test
adc
jg
arpl
add
or
jbe
js
sahf
push
inc
jae
inc
pop
bound
fwait
dec
dec
dec
outsl
sbb
subb
mov
xorb
es
movsb
stos
imul
cltd
mov
adc
cli
test
gs
inc
mov
jmp
outsl
es
sub
cli
mov
dec
dec
sub
push
icebp
call
mov
push
loop
sbb
mov
dec
fildll
scas
add
push
or
jns
les
pushf
and
out
and
insb
jmp
xchg
mov
fs
pop
mov
push
jp
push
ret
dec
push
jl
sbb
aaa
or
xor
jbe
jmp
jge
pusha
jo
dec
push
js
pop
bound
jg
mov
aaa
pop
cli
and
inc
cmp
inc
push
mov
hlt
jno
cmpsl
bound
jno
pop
nop
clc
decb
xchg
xchg
add
sub
xchg
mov
inc
data16
call
cld
ds
into
dec
mov
mov
insb
cld
push
fs
mov
loopne
inc
in
xchg
cmp
jmp
test
fsubl
cmpsb
mov
mov
call
or
dec
and
mov
mov
out
jmp
hlt
jg
movsb
scas
xchg
lret
loope
js
imull
xchg
test
stos
push
mov
cmpsl
cli
pop
enter
das
jge
mov
orb
fimuls
mov
imul
int3
dec
leave
pop
add
outsl
lds
xor
incl
jo
pop
pop
jmp
sbb
cld
ljmp
dec
xlat
sbb
pushl
or
or
inc
mov
mov
jne
sbb
cmpb
adc
movsb
push
push
dec
jge
jg
or
rcll
push
or
jbe
and
inc
pop
mov
push
dec
popf
cmpb
andl
xchg
fsts
ljmp
pop
mov
jb
mov
xor
add
push
ljmp
clc
sub
in
inc
mov
addl
std
dec
dec
pop
xor
adc
popf
cmp
popf
cltd
lds
jg
outsb
mov
jno
lods
out
push
add
dec
into
jbe
xchg
ljmp
pop
lret
dec
pusha
scas
insl
dec
dec
pop
leave
in
jne
popa
into
xchg
repnz
loope
cmpsl
icebp
cmp
adcl
push
jnp
mov
mov
pop
sbb
jp
rcrl
mov
jb
adc
xchg
aas
stos
dec
in
mov
inc
loop
mov
int
pushf
dec
dec
sbbl
or
push
test
xor
push
je
inc
ljmp
or
push
jno
into
insl
je
das
lahf
mov
aad
fs
jmp
movsb
mov
mov
outsb
mov
lcall
lret
decl
inc
add
lret
out
pcmpeqb
adc
add
inc
cwtl
outsb
sti
and
js
pop
sbb
cmpsb
scas
or
ja
add
jno
into
cmp
lcall
clc
stos
inc
and
sbb
adc
jg
mov
xor
fstp
imulb
cmpsb
test
adc
dec
clc
push
adc
inc
xchg
out
inc
lcall
aas
push
and
or
pop
mov
mov
das
mov
push
aam
xchg
stos
pop
fidivrs
nop
fbstp
jno
xor
inc
pushl
mov
out
inc
loopne
push
js
cmp
cmc
test
pop
enter
push
ret
xor
mov
ficompl
inc
add
dec
inc
inc
insl
inc
push
fsubs
popf
xor
mov
sbb
pushf
push
push
out
adc
call
adc
xchg
jl
pop
sub
out
scas
and
in
sub
js
mov
call
mov
inc
ja
pop
cmc
mov
sbb
adc
add
inc
mov
decl
mov
cltd
pop
xrelease
incl
cli
rcrl
test
push
sub
mov
lods
dec
inc
mov
sub
decl
sbb
mov
stos
frstor
xchg
das
inc
sub
ljmp
lea
push
push
pushf
push
cld
jmp
shlb
mov
dec
dec
std
and
test
and
jg
or
call
cmovne
icebp
xchg
xchg
push
add
jb
insb
sub
cmp
cmpb
adc
xchg
cmpsb
imul
sbb
scas
ss
pop
dec
mov
dec
scas
xchg
insb
mov
xchg
das
sahf
cmpsb
lea
movsl
and
cld
jmp
lcall
add
sub
add
inc
xorb
in
xchg
in
arpl
cmpsb
pop
sbb
sbb
sbbb
mov
push
mov
out
fwait
mov
sub
sbb
clc
add
ljmp
popa
fistl
push
incl
in
les
cmp
mov
mov
mov
xor
mov
push
xchg
addr16
lods
mov
push
inc
aaa
adc
lahf
fsubl
call
push
mov
loope
jb
xchg
imul
mov
aad
nop
jb
or
popf
scas
push
loopne
add
pushf
jp
sbb
cmp
jg
pop
sahf
mov
mov
hlt
outsb
aaa
scas
mov
lcall
bound
sub
dec
int3
sub
pushl
inc
dec
adc
sub
adc
jnp
pop
cltd
int3
sbb
xor
xor
ja
cli
jmp
insl
inc
jbe
xchg
push
dec
cwtl
in
scas
xchg
jge
icebp
decl
test
lea
and
push
mov
adcl
mov
aas
xor
and
add
adc
das
add
or
and
clc
xor
push
xchg
inc
loope
add
sub
push
jns
adc
test
js
and
icebp
bound
ret
pop
fcmovb
scas
xchg
ret
out
xchg
daa
jp
sar
sub
fwait
sbb
fdivr
jmp
je
xor
jle
insb
jnp
inc
out
inc
out
repnz
jg
mov
push
inc
addr16
pop
pusha
sbb
cmp
cltd
sbb
xchg
mov
cmp
ljmp
insb
out
std
outsl
mov
jb
xchg
mov
push
add
shlb
mov
hlt
jb
inc
addr16
fwait
stos
ja
sahf
mov
sbb
mov
inc
js
sbb
cmc
pop
lahf
push
jae
movsb
and
lahf
in
and
into
stos
dec
sarl
inc
in
sbb
add
push
call
push
scas
inc
inc
xchg
mov
fwait
movsb
lcall
dec
cwtl
push
push
jno
sub
decl
lds
dec
add
pop
push
xchg
jl
cmp
movsb
dec
pop
mov
scas
push
push
adc
mov
ret
out
mov
sub
push
pop
and
call
or
mov
dec
movsb
fisubrs
sbbl
mov
push
shrb
andl
sbb
mov
adc
mov
shrb
xchg
cltd
mulb
mov
jb
pop
and
or
mov
mov
inc
pop
mov
dec
mov
dec
clc
aaa
or
ja
or
mov
mov
mov
push
dec
lods
dec
pop
addb
aas
pop
dec
aas
mov
sbbb
mov
push
icebp
sbb
mov
add
add
aas
mov
lods
test
push
clc
aaa
xchg
cmp
inc
inc
sbb
fstl
jmp
mov
int
int
je
sub
out
and
test
push
push
dec
sete
loope
stos
adc
sub
xchg
jg
mov
jns
xlat
sbb
xor
stos
outsl
ss
cli
cmp
xor
xchg
lret
add
push
out
or
lea
push
mov
mov
xor
orps
inc
mov
cs
decl
dec
push
lcall
stos
and
mov
xor
push
jg
lock
decl
inc
mov
jmp
push
cmp
mov
pop
pop
loope
clc
das
push
jp
fistpll
or
das
inc
je
cmp
mov
dec
popf
insl
ss
or
mov
mulb
xchg
inc
adc
mov
insb
aas
xchg
lcall
pop
push
sub
loop
lret
jl
dec
inc
adc
xchg
mov
mov
lock
repz
dec
pop
inc
fildl
adc
rcrl
and
adc
dec
pop
and
movsb
ss
jp
arpl
repnz
out
fisubs
int
cmpsb
add
lret
pop
out
pushf
cmp
aaa
adc
repnz
mov
pushl
inc
pop
bound
mov
sub
xor
rorb
mov
imul
jl
cmpsb
out
std
scas
fiaddl
and
push
imul
dec
cli
sub
inc
mov
mov
fdivl
jl
pop
jl
sub
test
mov
inc
and
mov
cmpb
ds
jns
jbe
sbb
insl
ret
mov
push
scas
decl
std
mov
popa
mov
inc
int
jae
cwtl
mov
pop
inc
ret
adc
incl
lods
dec
jbe
sbb
pop
xor
fdivrp
bsr
xor
xor
or
mov
mov
mov
ret
and
movsl
ret
mov
push
add
lcall
lods
push
jge
mov
cli
mov
mov
stos
mov
subb
xchg
xor
lcall
dec
mov
incl
push
mov
insb
stos
sub
loop,pn
jg
inc
ss
fstl
fwait
pop
xor
cmp
inc
sbb
clc
and
push
push
neg
cmp
ljmp
cs
out
or
mov
out
xchg
fisttps
clc
add
xchg
shll
push
loope
dec
repz
add
lcall
aas
and
cmpb
sbb
pusha
std
incl
jo
aas
sbb
mov
add
popa
cld
mov
cmpsb
push
popl
cli
pop
outsl
mov
cmp
xor
out
out
add
fildl
mov
das
xchg
or
das
push
scas
fs
cmp
loop
jo
cmp
out
pop
jno
pop
out
xor
call
push
push
mov
mov
stos
enter
sahf
mov
mov
loope
aas
or
and
sbb
pop
dec
dec
mov
fidivrl
jno
stos
das
decl
out
inc
mov
jle
ret
sbb
jnp
jmp
ljmp
push
or
mov
push
cmp
movsl
add
sbb
mov
lock
data16
inc
jnp
mov
loop
std
outsl
xchg
mov
jae
aaa
inc
cmpsb
ss
mov
sbb
popa
or
jb
sub
pushl
dec
mov
xchg
cmpsb
scas
xlat
mov
ljmp
int
jns
movsl
push
xorb
lods
pop
xchg
push
dec
xchg
and
add
adc
fidivs
sbb
shlb
call
test
movsl
adc
mov
xchg
fsubl
jbe
es
xor
aas
inc
push
jo
mov
mov
ss
std
ss
fstps
cmp
bt
adc
out
adc
jg
hlt
jb
dec
add
mov
imul
dec
ss
call
or
ljmp
hlt
imul
mov
adc
cld
in
push
ret
cmpb
adc
icebp
jmp
adc
dec
int
bound
add
cmp
xchg
sub
test
and
mov
test
dec
jl
and
push
adc
cmp
xchg
rorb
mov
repz
xor
xor
pop
shrb
jbe
shlb
outsl
cli
popf
inc
mov
inc
inc
cmovp
scas
cltd
pop
loopne
sbb
push
std
mov
add
mov
repnz
in
push
roll
adcb
jb
ds
mov
in
outsb
cld
and
ljmp
jne
pop
push
icebp
add
mov
xor
adc
pop
out
push
xchg
test
icebp
decl
sub
movsl
sub
inc
lea
mov
movsl
pushl
lods
in
out
cmpl
hlt
stos
incl
add
sub
push
push
rorl
mov
test
xchg
pop
mov
xor
lret
pop
movsl
adc
mov
fisttps
mov
bound
jo
and
fildl
xor
lods
adc
xor
add
sti
xor
repz
loop
sarl
movsb
xor
jg
xor
cmp
out
mov
xchg
rcr
adc
mov
rolb
addr16
ja
adc
sbbb
mov
mov
add
inc
cmpsl
mov
sbb
add
fisubs
push
icebp
sub
xor
xchg
roll
mov
test
loop
adc
out
sarb
pop
fists
inc
xor
std
cmp
push
jbe
shlw
cli
fldl
insb
push
xchg
jle
sbb
scas
jnp
cmp
xchg
push
pop
mov
push
popf
pop
push
sbb
ljmp
sub
jp
insl
adc
jb
cmp
jl
popa
outsb
aas
decl
mov
sub
adc
sub
out
inc
jns
or
ljmp
push
add
xor
cwtl
aaa
imul
jb
mov
incl
insb
ss
xor
mov
add
fildll
je
sbb
xchg
push
jg
dec
shlb
mov
pop
dec
testl
data16
ljmp
add
sbb
jae
call
rolb
sbb
or
mov
cmp
pop
mov
xor
pushf
sahf
xchg
mov
mov
mov
or
loopne
mov
aas
xchg
insl
push
dec
insl
cmp
std
das
xor
jno
outsl
es
cmp
sub
scas
sub
dec
scas
imulb
cli
fwait
and
movsl
js
sbb
cmp
js
scas
clc
scas
add
xor
add
int
andl
test
jae
push
sub
sub
incl
pusha
cwtl
or
cmp
xchg
jb
cmp
jbe
outsl
pop
sbbb
scas
pop
loopne
xor
outsl
lcall
out
ljmp
lock
adc
and
dec
push
pcmpgtb
scas
dec
arpl
ja
ja
or
mov
enter
in
add
decl
push
xchg
xchg
and
in
push
aad
mov
jp
popf
jno
inc
inc
xchg
xchg
cmpb
out
inc
decl
or
pop
jg
addl
inc
cmp
icebp
sbb
test
scas
mov
mov
xchg
sbb
pop
lock
fcoml
pushf
cwtl
adc
sbb
push
aas
leave
cmp
out
jbe
incl
dec
adc
cld
aaa
arpl
or
js
pop
pop
push
mov
das
or
xorl
arpl
ljmp
and
sbb
dec
test
cmpsb
je
mov
inc
mov
sahf
arpl
mov
xchg
lcall
aaa
add
sub
bnd
cmp
and
ljmp
mov
ja
add
iret
bound
enter
push
mov
test
lea
jbe
out
xchg
jg
mov
mov
lahf
push
mov
xchg
ja
add
jmp
pxor
je
ja
inc
push
mov
stos
out
pop
aas
xchg
fiaddl
loop,pn
xor
add
test
clc
xchg
xlat
cs
dec
ds
mov
add
cmpsb
fiadds
pop
pop
fsubrs
ffree
push
std
call
push
mov
sbb
mov
incl
xor
das
ret
jp
sub
aas
jne
xor
les
loop
mov
mov
mov
ret
ljmp
lods
inc
add
loope
fs
movsb
dec
adc
enter
icebp
inc
js
jnp
pop
and
in
mov
jbe
js
pop
add
adc
hlt
cmpsb
hlt
mov
pop
push
aas
lods
dec
mov
adc
repnz
imul
mov
cmp
mov
pop
xlat
call
jp
daa
pop
sti
sub
out
scas
call
pusha
dec
rolb
add
lret
cld
decl
xor
pop
pop
jb
xchg
mov
adc
adc
sbb
or
ljmp
jno
cmp
jo
cwtl
into
jl
ljmp
dec
fidivl
dec
in
and
adc
cwtl
sbb
lcall
xor
cmp
lahf
xchg
inc
mov
scas
add
pop
cmc
aam
or
jo
pop
test
sub
cwtl
dec
lods
clc
push
ja
mov
mov
mov
adc
cli
cmp
loopne
ret
out
xor
test
sbb
sub
jne
aaa
inc
dec
dec
dec
fdivs
pusha
fs
jmp
cmp
ja
jg
dec
leave
xor
or
sbb
ficoml
mov
jno
pop
jns
mov
pop
or
mov
jle
inc
mulb
push
xchg
mov
decl
xchg
jb
stc
push
ja
lea
pop
xchg
sarb
pop
mov
and
or
inc
aaa
inc
scas
call
xchg
incb
jle
dec
cmpsb
popa
in
ds
shlb
pushl
push
je
shld
add
insl
add
fmull
cmpb
mov
jle
xchg
sarb
cltd
push
ja
jecxz
fwait
sub
push
ficoms
int
bound
mov
xchg
xchg
jg
jle
fnstcw
pop
fcoml
jb
sub
ss
repz
or
movsl
cmp
dec
push
xor
fdivrp
push
adc
mov
outsb
lea
jle
mov
shr
push
xchg
incl
cmp
cltd
sbb
es
sub
or
inc
loope
jmp
inc
ljmp
cmpsb
inc
adc
cmp
pop
dec
das
adc
mov
adc
aaa
fisttps
pop
imul
xchg
sub
push
fbld
js
daa
ret
icebp
push
cmp
xchg
sbb
orb
fiadds
or
xor
xor
inc
sbb
xor
clc
incl
and
mov
jmp
jge
out
xor
lods
es
inc
lods
fmull
icebp
ja
lgs
pop
pop
stos
jp
subb
lcall
test
inc
mov
push
cmp
loopne
xor
jg
ljmp
sahf
outsl
iret
or
ficoml
inc
fdivrs
or
test
adc
cli
adc
cltd
decl
xor
sbb
xor
imul
inc
cmp
mov
pop
sub
xor
mov
cld
mov
and
movsl
adc
or
jno
cmc
mov
xchg
mov
mov
test
loop
das
pop
cmp
cmp
lcall
xchg
stos
fwait
lcall
ja
push
sbb
fcomip
out
and
scas
push
les
xchg
xor
and
xchg
add
adc
or
ret
adc
add
test
inc
cmc
jmp
stos
cltd
add
mov
pop
sahf
ds
lret
adc
cmp
jmp
push
and
outsb
pop
jmp
aaa
mov
inc
jp
xchg
iret
popf
sub
cmp
and
in
call
sbb
hlt
jg
stos
rcrb
mov
or
test
sbb
cltd
jbe
sbb
cmc
inc
adc
jl
test
push
and
lcall
adc
sbb
jp
cmovle
xchg
xor
sbb
in
mov
push
iret
mov
out
xchg
xchg
and
adc
dec
inc
subps
jmp
or
adc
and
testb
movsl
push
jl
mov
xor
push
xor
ljmp
sbb
add
repz
mov
jno
add
decl
jnp
adc
ss
outsb
ss
popfw
or
xchg
sub
dec
inc
shll
dec
out
push
stos
mov
ljmp
fistpll
mov
cli
adc
xor
test
test
scas
lret
mov
data16
in
pop
insl
cli
fidivrs
add
dec
inc
clc
or
jnp
add
lret
in
mov
outsl
popa
cwtl
adc
sbb
or
add
outsl
addb
xchg
ss
imul
repz
mov
xor
decl
pusha
xlat
pop
adc
outsl
push
repnz
dec
les
js
les
mulb
ljmp
pop
rcl
inc
cmpsb
scas
clc
mov
scas
sahf
std
add
dec
call
mov
das
gs
pop
jne
xorl
cmp
in
lea
arpl
pop
andb
das
push
dec
cmp
ss
mov
js
js
ret
arpl
jmp
dec
push
dec
push
les
dec
in
xor
inc
xor
leave
mov
mov
sbb
mov
ljmp
adc
push
repnz
stc
sub
xchg
sbb
inc
lock
clc
add
inc
pop
testb
sbb
jg
test
push
out
sbb
dec
inc
push
test
clc
mov
inc
pop
out
mov
dec
pop
or
xchg
das
jb
add
xor
fiaddl
and
sub
das
and
dec
pop
lock
test
into
.byte
.byte
in
mov
in
mov
movl
mov
inc
add
incb
pop
ret
int3
add
idiv
mov
push
add
movb
push
add
lcall
push
call
add
movl
cli
mov
adc
xor
inc
std
lods
nop
ja
push
mov
nop
lcall
in
enter
xorb
leave
std
push
cmp
or
cmp
xchg
xchg
popa
call
fadds
cld
or
out
loopne
xchg
push
call
stc
movsbl
push
mov
out
mov
cmp
shl
lahf
push
pop
mov
dec
mov
scas
popa
mov
mov
xchg
xor
mov
mov
fsubs
mov
loopne
movsl
aam
pop
cwtl
cli
shrb
movsb
or
inc
push
push
faddl
adc
fucomi
add
test
enter
sbb
sbb
sbb
testl
dec
lods
cli
push
jo
das
enter
pusha
lcall
daa
push
jo
lret
cmp
pushf
rorb
xor
push
scas
pop
xor
sub
pop
nop
imul
jg
aas
into
notb
dec
push
rcrb
pushf
inc
cs
xchg
fadds
sub
or
add
or
addr16
and
mov
cltd
dec
push
jb
dec
je
hlt
cmp
lahf
jmp
add
dec
js
cmp
push
xchg
jl
or
lea
pop
dec
or
ss
outsl
imul
xor
adc
adc
cmp
roll
mov
test
mov
adc
jbe
insl
scas
ds
outsb
add
mov
and
sub
jo
js
and
dec
andl
cmp
test
scas
subb
sbb
dec
jl
jbe
inc
mov
mov
lods
fucomip
cmp
pushf
cld
mov
or
xchg
leave
ss
cs
mov
ja
jg
shlb
movsb
jmp
clc
cwtl
lods
fidivl
fmul
std
cwtl
adc
js
aam
inc
int
xchg
out
enter
push
test
or
orl
int
aad
push
dec
jp
std
movb
loope
cmp
or
cmp
popf
cld
shlb
cmpsb
xchg
adc
sbb
and
mov
sbb
and
dec
iret
cmp
fcoms
or
mull
jecxz
pop
xchg
and
decb
sbb
adc
out
adc
int3
pusha
mov
imul
leave
cmp
jmp
pusha
fldt
roll
adc
cmp
mov
loope
cmp
enter
adc
sbb
mov
mov
addr16
push
add
adc
sbb
sub
jne
add
mov
data16
sbb
fidivl
lods
sbb
and
ret
rcrl
aas
out
ss
dec
jmp
ret
into
test
pop
inc
add
xlat
shll
sarl
add
pop
mov
pop
ret
jae
ret
pop
daa
push
repnz
in
jbe
test
ja
subb
in
sub
ret
adc
fsubrs
mov
rcl
ret
or
and
pop
mov
int3
shlb
xchg
cmp
pop
out
test
arpl
adc
enter
in
cs
sar
sar
or
cmp
decb
and
test
roll
les
jae
movsb
add
in
jle
cmpl
xchg
insl
lock
lcall
or
fs
out
cmc
push
adc
lods
mov
mov
cld
testb
inc
adc
inc
adc
je
sbb
push
pop
loop
inc
lea
das
roll
pop
mov
test
cmpsb
pusha
lock
enter
sbb
xchg
shlb
aas
xorl
dec
or
lea
or
cltd
xchg
mov
lock
fwait
movzbl
lods
adc
fbstp
ret
add
xorl
inc
cmp
inc
rcrl
lock
cmp
ljmp
fwait
cmp
push
mov
pop
rcll
inc
test
adc
cmp
nop
adc
push
pop
xchg
jbe
mov
daa
push
pop
adc
jb
or
and
mov
loop
mov
dec
jae
pop
cmc
dec
test
mov
scas
loop
mov
nop
insb
xchg
or
scas
push
mov
adc
xor
mov
mulb
inc
inc
push
loope
rol
adc
mov
dec
js
pop
imul
mov
in
hlt
push
mov
lock
xchg
dec
ds
shlb
dec
or
push
cltd
mov
adc
in
pop
mov
fdivl
jno,pt
sbb
dec
out
lcall
mov
dec
rcll
sbb
fstpt
push
pop
imul
lds
test
pop
or
sbb
fwait
inc
push
inc
sbb
je
fisubs
jmp
js
adcb
fs
pop
push
or
imull
mov
sbb
xor
insb
push
rclb
mov
fidivs
lods
pop
std
lea
push
adc
addl
pop
push
cmpsb
in
xor
test
pop
jb
sarl
cs
pop
mov
mov
shl
aaa
jns
or
les
shrb
lods
and
dec
imul
sbb
sub
jle
mov
xchg
mov
mov
push
inc
or
push
xor
xor
cld
mov
inc
cmp
jb
je
mov
imul
xchg
push
cmp
dec
push
sbbb
pop
xchg
negb
mov
dec
pop
push
cmp
lods
aaa
xchg
aaa
loopne
cs
ret
adc
mov
push
push
or
or
cld
ret
bound
aaa
xor
jge
xor
or
or
mov
sbb
push
push
mov
xlat
sbb
insl
push
push
aaa
fidivrs
jnp
bound
sti
loop
movb
js
and
add
mov
test
dec
add
jno
int3
shrb
cmp
push
mov
pop
add
aaa
lea
fdivs
jecxz
or
lea
sbb
fdivrl
mov
movl
xor
adc
rolb
shll
mov
xchg
adc
adc
push
jp
pop
rorb
aas
popf
daa
decb
sbb
mov
dec
and
inc
sbb
inc
pop
add
fwait
add
and
mov
push
push
pop
pop
mov
insl
sub
test
mov
lea
or
movsb
jge
int3
add
pushf
movsl
mov
popf
inc
add
mov
test
std
imul
sbb
pop
jbe
pusha
pop
xchg
or
mov
movsl
sbb
call
push
ja
ja
add
ds
insb
outsl
jbe
add
loop
sub
clc
mov
or
arpl
andb
orl
shl
or
jo
lock
xchg
out
hlt
mov
out
pop
sub
call
or
push
dec
in
sub
cmp
in
xchg
xchg
in
test
test
adc
les
add
mov
mov
adc
pop
pop
mov
push
loopne
js
jge
adc
inc
mov
scas
aam
test
pop
js
sti
pushl
sub
inc
push
mov
cmp
test
daa
jbe
movsb
out
add
jmp
andl
hlt
mov
mov
mov
adc
push
push
push
mov
inc
pop
dec
jae
repz
push
pushf
in
cs
xlat
mov
inc
orl
pop
sub
int
hlt
in
xchg
jns
int3
lea
adc
jb
and
cmpb
sbb
dec
arpl
add
push
sub
push
mov
dec
mov
sbb
mov
and
push
ss
rorl
insb
les
lea
adc
xchg
test
aaa
in
xor
dec
fimuls
xor
xchg
or
pop
add
sbb
xchg
add
jnp
dec
mov
fisttpll
rcl
aaa
sub
push
push
inc
cwtl
add
jno
add
pop
and
and
jle
xchg
push
sub
jo
xchg
nop
push
add
imul
sub
rcrb
push
jg
inc
add
out
nop
and
daa
outsl
push
in
pop
aaa
push
sbb
mov
out
pop
loopne
mov
mov
and
mov
cmpl
mov
inc
mov
or
sbb
cltd
imul
mov
fstl
cs
imul
or
pop
ret
inc
and
fcmovnu
fmuls
or
add
je
notb
sub
ret
mov
jb
jne
sub
rcrb
adc
and
cmp
add
pop
sbb
aad
mov
push
in
mov
or
loope
cmp
adc
adc
or
xor
iret
jp
enter
lea
and
lods
push
out
push
outsl
in
jns
and
sub
lret
push
js
andb
pushl
pop
inc
xchg
jl
mov
sarb
push
lock
repnz
cmp
lcall
dec
neg
sbb
gs
push
xchg
xchg
xchg
je
js
sbb
fdivrs
hlt
jbe
sbb
push
cs
pushf
push
mov
xchg
mov
dec
pop
movsb
adc
popa
push
arpl
ljmp
cmpsb
or
pop
push
pop
push
lods
es
sub
xor
insl
add
push
orl
push
repz
and
aad
je
jg
dec
subl
pop
or
jmp
pop
adc
mov
popa
xor
push
or
js
jmp
sbb
rorb
hlt
xchg
shr
mov
adc
mov
ja
clc
lds
fdivr
inc
leave
rclb
sub
add
mov
sub
enter
int3
loopne
or
repz
inc
in
or
in
enter
pusha
cmp
mov
das
xchg
js
test
mov
int3
xor
pop
add
pop
mov
clc
and
mov
stos
mov
inc
mov
loop
xchg
jnp
mov
outsl
xchg
push
mov
cmp
mov
pushf
mov
pop
repnz
jno
lock
pop
and
lock
sbb
cmp
enter
shll
sbb
daa
xchg
movb
outsb
pop
sbb
inc
sbb
push
pop
arpl
add
ret
mov
inc
jmp
adc
pop
pop
mov
sub
xor
repnz
sbb
add
ret
push
pop
rcrl
add
out
gs
inc
fidivl
jecxz
pop
sbb
xchg
lret
ret
sub
je
jmp
dec
daa
mov
mov
jle
cmp
cmp
shlb
cmp
test
sub
loopne
jns
inc
testb
inc
mov
stos
loope
cli
xor
inc
sbb
lds
enter
rcrl
inc
andl
push
clc
mov
cld
mov
adc
ds
inc
enter
and
add
je
mov
jmp
mov
movzwl
cmp
js
out
jo
cmp
add
mov
jp
cmpl
mov
lock
lea
movsb
clc
in
in
jg
pusha
dec
push
mov
push
push
inc
or
inc
rdtsc
inc
out
mov
fsts
pushf
lret
jmp
loopne
or
idiv
fldt
push
cmp
jge
sub
sub
or
and
out
pushf
cmp
sub
or
push
pushf
jmp
shl
js
or
fsub
ds
pop
add
sbb
cld
sub
addl
jp
orl
call
in
jmp
cmpsl
cltd
push
enter
or
xor
push
inc
cmpl
pop
push
adc
xor
imul
roll
adc
fsubr
or
inc
inc
adc
and
sub
fdivl
clc
cwtl
jmp
jae
sahf
or
pop
push
les
les
fsubrl
in
mov
mov
xchg
div
femms
fucomip
xchg
or
loope
mov
push
add
push
xor
sbb
xor
bound
mov
and
jne
call
movsb
inc
aas
ja
f2xm1
push
mov
cmpl
mov
mov
aam
frstor
rcl
rorb
jmp
push
xchg
push
jae
aam
jae
int
and
call
add
adc
add
cld
data16
int3
xor
shr
cmp
clc
xchg
rolb
mov
sar
pusha
jnp
clc
xchg
push
push
hlt
push
adc
pop
push
cmp
or
adc
hlt
and
jnp
rcll
and
adc
push
push
mov
push
jle
sahf
mov
loop
adc
add
shll
aas
mov
mov
add
jmp
imul
inc
add
aam
or
cmp
pop
or
add
sub
jns
mov
push
inc
add
fdiv
sub
lds
push
lock
sahf
sbb
dec
inc
jne
push
or
call
push
xlat
cmp
sub
mov
js
out
push
fwait
mov
cli
push
lods
ljmp
mov
push
and
call
xor
sub
scas
and
sub
je
mov
or
enter
shll
imul
xor
int
in
hlt
in
add
popa
jae
out
in
mov
hlt
sbb
and
imul
aam
fstpt
sub
inc
sbb
push
idivb
jge
lock
adc
cmpsb
or
add
jecxz
cmp
jne
push
fisubrl
test
sub
sub
dec
add
inc
fcmovnu
pop
andl
push
call
int3
rcr
mov
or
fs
cmp
aad
fcomp
cmp
scas
in
clc
push
int
sbb
mov
pop
jmp
cltd
fs
mov
mov
in
enter
mov
pop
lock
movl
jo
nop
inc
mov
sub
mov
pusha
xchg
and
outsl
cwtl
insb
jns
leave
add
test
cltd
mov
or
ret
fldenv
repnz
push
je
test
xor
pop
je
pushf
lret
test
arpl
inc
pushl
cmp
add
or
arpl
pop
add
push
push
dec
fisubl
jo
in
push
or
and
in
lea
push
aam
adc
ret
sbb
inc
sub
je
test
xchg
adc
pop
sbb
pushf
int
or
pop
mov
xchg
add
in
pop
and
stos
mov
xorl
push
push
pop
gs
fdivl
aaa
je
aaa
enter
cli
xchg
pop
mov
adc
add
lea
xchg
cmp
jecxz
test
pop
add
pop
je
inc
sbb
adc
sub
mov
add
aaa
lahf
movsl
and
orl
push
shlb
test
gs
testb
mov
cmp
fisubrs
push
mov
mov
and
sbb
and
flds
aaa
popa
jbe
sbb
shll
and
pop
cs
xchg
xchg
jmp
cli
pushf
sbb
and
or
test
arpl
xchg
cmpl
mov
lcall
cmp
or
push
xchg
and
xor
stc
je
leave
adc
xchg
arpl
fdivl
sub
or
lds
rcll
push
xor
nop
je
cmp
add
jl
inc
mov
movzbl
cmp
or
movsl
ret
inc
cmpl
sub
fwait
push
cmp
lds
mov
lret
inc
sbb
xchg
scas
mov
push
or
sbb
ret
sahf
stos
mov
addb
mov
pop
push
add
push
mov
and
mov
cmp
or
and
jge
xor
sub
imul
and
sub
in
pop
sbb
ret
ljmp
dec
test
inc
testl
adc
mov
movsb
xlat
mov
cld
mulb
orl
cmpb
jne
xor
push
mov
outsl
cwtl
push
pop
push
jae
int3
push
test
adc
imul
pushf
outsl
popf
mov
sbb
adc
inc
mov
push
dec
mov
jns
adc
or
hlt
jge
add
das
cwtl
hlt
mov
mov
push
mov
cld
adcb
push
mov
popa
push
outsb
repnz
dec
sbb
imul
sbb
fimull
out
les
mov
rcrl
insb
js
and
out
adc
mov
shr
adc
dec
or
push
out
mov
or
pop
jbe
imul
mov
rcr
je
movsb
mov
mov
cwtl
dec
mov
ret
pop
or
out
vpackssdw
push
es
jne
cld
stos
aaa
lds
xor
shrb
dec
adc
jbe
inc
jo
addr16
adc
fs
cmp
jae
push
add
enter
mov
int
pop
jecxz
and
cmp
rclb
rorb
test
mov
iret
pop
sub
sbb
mov
shlb
lret
adc
aam
lret
pop
outsb
rol
pop
jnp
popa
sarl
mov
out
loopne
insb
push
or
scas
lods
les
int
mov
dec
lods
lods
lods
lcall
add
cmpl
xor
test
dec
in
test
movsb
push
es
sbb
cmp
fwait
xchg
sbb
enter
mov
pop
shll
sbb
arpl
ds
loopne
mov
fldcw
push
test
test
popf
dec
jae
test
mov
mov
adc
adc
mov
movsl
je
sbb
push
pop
push
mov
mov
push
sbb
cmp
jecxz
test
or
mov
xor
cmp
sub
sbb
repnz
cmp
cld
sbb
ret
jo
imul
dec
aaa
leave
mov
daa
sbb
mov
cmp
fs
xor
push
jns
jns
scas
test
pop
sub
mov
mov
test
xchg
inc
mov
rcll
or
in
jp
popf
or
cmp
sbb
lcall
jecxz
cs
lret
adc
test
and
fsub
bnd
jbe
mov
sbb
or
cmp
mov
dec
sti
and
loopne
shll
jg
lock
std
mov
or
mov
in
and
fwait
sti
fcomp
sbb
sbb
in
pop
lock
clc
push
push
add
fdivr
add
sbb
pusha
movsb
adc
and
setle
sbb
add
and
add
sub
xor
sub
jno
mov
cmpsb
jae
push
loopne
pop
leave
sub
fstpl
push
or
inc
xor
cs
push
scas
loope
cmp
jae
push
aam
sbbl
push
push
movsb
jae
shrl
add
call
clc
dec
push
xchg
lret
shl
rcl
sub
shll
out
or
rcrb
shl
icebp
xorl
enter
dec
cld
adc
sbbb
test
sub
dec
adc
push
enter
lret
mov
mov
sbb
push
nop
stos
les
pop
enter
clc
fldl
rcrb
imul
les
jns
rcl
iret
enter
push
enter
dec
in
pop
mov
leave
pop
or
rolb
xchg
into
dec
xchg
out
loopne
add
sub
push
andb
leave
je
in
jl
cmc
dec
add
jmp
jl
mov
call
fnstenv
mov
in
mov
sub
and
mov
jmp
fcomp
pop
cmp
clc
fmuls
mov
mov
fdivl
cmp
and
outsl
call
enter
test
mov
add
jo
dec
dec
fwait
cmc
testb
in
jne
out
test
adc
sub
mov
cltd
lahf
inc
or
rolb
and
sub
test
movsb
das
mov
mov
jecxz
je
adc
or
outsb
test
test
mov
adc
inc
or
add
in
add
jne
add
mov
test
call
enter
test
push
ret
fs
jo
xlat
data16
jmp
imul
or
aas
dec
rcll
push
mov
cld
cmp
dec
in
cld
jns
and
push
clc
jb
jle
cld
add
cs
hlt
cld
hlt
es
add
push
insb
add
add
mov
adc
pop
sub
aas
mov
fsubrs
inc
push
push
or
mov
mov
clc
add
xlat
shll
mull
int3
xchg
loop
xchg
adcb
adc
mov
shl
aaa
pop
and
inc
lock
mov
enter
aad
test
mov
mov
shrb
je
into
sub
lock
fcmovne
aad
add
xor
pop
mov
sahf
mov
cmpb
xlat
xor
pop
insb
movzbl
add
movb
ret
popf
fs
sub
popl
pop
addl
dec
ss
cld
cmp
inc
push
lock
or
shlb
xchg
add
movsb
xor
sbb
sbb
in
mov
lea
and
add
jb
adc
sbb
or
andl
adc
jg
outsl
dec
fadds
adc
xchg
jl
sbbb
adc
jmp
inc
loope
dec
or
lea
xchg
sbb
and
out
and
or
sbb
jl
test
shl
dec
xlat
je
outsb
or
jmp
add
test
sub
in
xchg
jnp
or
cmpsl
jmp
mov
and
pop
adc
mov
push
int
imul
xor
shlb
orl
sbb
rolb
or
jmp
dec
push
dec
dec
popf
jp
inc
add
inc
pop
mov
pusha
push
mov
or
loopne
std
nop
inc
inc
pop
dec
jne
xchg
mov
in
inc
jmp
xor
jns
mov
enter
fsubs
push
js
adc
push
test
pushl
jl
sbb
cmpsl
mov
xchg
mov
push
fdivrs
xor
push
cmp
inc
inc
cld
in
loop
test
lock
inc
inc
inc
cs
mov
inc
je
xchg
push
fmuls
leave
je
push
movzwl
cmp
mov
sahf
les
xor
xor
in
xor
xor
into
or
pop
jge
lock
adc
push
adc
add
adc
rclb
pop
dec
mov
push
xchg
rcrb
decb
ret
xor
mov
inc
dec
mov
jns
inc
test
aas
add
cmpl
sub
std
adc
nop
popa
push
pop
sub
insl
addr16
cmpsl
mov
and
cmp
cmp
out
push
or
pushf
es
dec
add
bound
cmpb
test
cmp
or
add
push
xor
fldl
in
xchg
stc
js,pt
push
fsubrp
or
movsb
dec
cs
mov
inc
test
outsl
mov
adc
adc
lods
or
jno
rcll
or
cmp
ret
mov
negl
and
js
ja
es
cmp
and
adc
jge
nop
sub
rorl
nop
cmp
xchg
fstl
pushf
add
or
cmp
insl
lods
sbbb
adc
push
cmp
shl
inc
icebp
sbb
clc
sti
and
inc
or
sbb
jne
mov
rorb
pop
pop
pop
movsb
cmpps
and
ja
nop
mov
fcmovu
push
sbb
sahf
mov
jmp
cwtl
sbb
cmp
cmp
insb
dec
push
pusha
add
pushf
jo
aam
stos
add
mov
movsl
bound
nop
push
or
cmp
sub
mov
push
inc
jae
cmp
jg
fninit
nop
mov
pushf
popf
pushf
jp
and
scas
pushf
aad
rcrb
xchg
dec
or
xchg
sub
xchg
add
pusha
aad
rclb
jge
dec
roll
sarb
push
ljmp
and
add
cmp
dec
or
push
nop
inc
mov
adcb
mov
mov
sbb
jecxz
dec
cmp
cmp
mov
shll
jb
movsb
sbb
mov
xor
cmpl
mov
add
mov
cli
shrb
xor
leave
movsl
shlb
sti
or
adc
push
and
and
or
je
push
shll
test
outsb
bound
or
outsb
jns
fs
pushf
fdivs
aas
push
movsl
jb
fistpl
mov
inc
xchg
outsb
inc
adcb
arpl
pop
push
adcb
inc
jl
jmp
or
lods
dec
sbb
arpl
rclb
inc
xchg
out
test
cmpsb
imul
clc
jmp
sbb
test
jge
pop
push
movsl
sbb
pushf
loope
adcb
pop
mov
insl
sbb
xchg
jg
jl
es
or
inc
je
outsl
xchg
sbb
ret
stc
add
test
lahf
xchg
mov
mov
jbe
xchg
pushf
pusha
mov
pop
xor
push
sahf
clc
jno
push
cmp
push
aad
fnstsw
ja
bound
xchg
ret
jl
adc
inc
imul
push
push
add
test
jle
jge
dec
andl
cmp
mov
dec
push
xorb
jecxz
add
xor
leave
push
imul
cmp
xchg
push
adc
pop
dec
sbb
movsl
dec
xchg
sbb
pop
pop
adc
mov
jg
add
fimull
push
or
cmp
adcl
fcoml
adc
adc
popf
mov
push
cmpsb
push
or
dec
pop
sbb
dec
cs
adc
push
inc
cmpsl
repnz
adc
or
mov
cmp
or
mov
jb
cmp
xor
pop
popa
or
add
inc
adc
push
pop
jne
pop
sbb
mov
adc
adc
adc
ret
loope
inc
bound
mov
loope
fisubl
lea
push
mov
pop
sbb
cmpl
adc
push
sbbb
scas
jecxz
sbb
push
add
cmpsl
push
adc
push
pop
pop
adcl
push
rcl
mov
sbb
jmp
and
mov
inc
cli
push
inc
stos
and
cmc
xchg
pop
push
roll
pop
pop
or
or
sbb
mov
nop
test
cmp
test
push
cmp
sbb
and
lods
pop
and
or
dec
push
adc
mov
add
ret
push
loopne
mov
cld
ficoms
enter
test
lea
dec
clc
jmp
sub
dec
sbbl
cmpsl
adc
xor
xchg
mov
cwtl
cltd
xor
dec
rol
mov
mov
orl
or
inc
inc
ljmp
push
repnz
loopne
or
adc
test
push
mov
adc
push
jno
jns
stos
frstor
pop
jnp
pop
mov
cmpsb
mov
shlb
mov
inc
cmp
mov
sbb
fsubrl
call
sub
ret
test
pop
pop
jno
pusha
outsl
xor
out
cltd
aad
sbb
ret
or
inc
push
loopne
movsb
push
in
aad
add
outsl
enter
add
cwtl
push
es
and
out
push
imull
xor
lock
mov
nop
mov
js
sub
jo
mov
add
pop
push
cmpsb
es
ds
and
cmp
aas
fdivr
sub
aam
sbb
xor
pop
mov
subb
inc
cmpl
push
and
push
loopne
movsl
ja
pop
loope
jmp
cmp
push
mov
rorl
sub
shlb
lahf
cwtl
add
and
mov
cltd
add
jo
aad
shrb
xchg
xor
cmp
cmp
int
popa
test
in
out
mov
adc
adc
dec
xor
dec
in
imul
js
test
out
add
adc
push
push
mov
inc
add
add
add
push
fcoms
fwait
sti
adc
inc
dec
cmpsl
jne
or
jo
in
jecxz
mov
fstps
fcoml
add
adc
ja
iret
ja
movsb
sub
inc
inc
inc
cmp
or
adc
flds
xor
int
test
jo
clc
lcall
and
rorl
or
std
pop
icebp
push
sub
jb
add
mov
fcmovnu
ja
push
inc
cltd
rclb
in
sbb
andl
xchg
and
stc
cmp
push
pop
sar
add
nop
ljmp
test
add
xor
cltd
pop
xor
pop
mov
add
lods
lcall
mov
xchg
mov
nop
xor
xor
stos
jecxz
mov
adc
push
rorl
xchg
xor
test
dec
movsl
dec
addl
add
aaa
stc
xchg
fistl
and
daa
cs
mov
push
mov
cltd
cmpl
call
shll
sub
aad
jl
jl
aad
repz
stos
push
in
pop
xchg
push
mov
and
lea
pop
push
and
or
movsb
mov
xor
rorb
das
and
fcomps
sarb
dec
je
nop
cmp
add
cmp
popl
mov
movsb
mov
and
inc
or
ror
push
or
jmp
addl
push
mov
pop
nop
xlat
jl
hlt
cld
sbb
adc
add
mov
jg
jle
in
es
nop
xchg
adc
cmp
jo
xchg
and
adc
inc
push
push
insl
lret
test
sbb
cmpsl
cmc
arpl
sub
or
xchg
lret
test
cmp
adc
and
setne
pop
lahf
test
cld
movsl
dec
mov
fdivl
xlat
cmp
aas
rorb
push
addb
push
icebp
lods
cmpsb
ret
aaa
pop
jo
sub
pop
imul
imul
in
loop
push
jmp
rcll
sbb
jo
mov
sbb
addl
stos
je
xor
cmc
sbb
pop
mov
mov
xorl
xchg
mov
popa
push
ja
sbb
lods
jmp
bsr
xchg
dec
xor
pop
or
add
mov
mov
nop
js
inc
sbb
pop
jne
and
dec
sbb
lock
adc
cmc
pop
pop
xchg
mov
pop
push
add
or
aad
push
lods
sub
push
mov
or
dec
mov
mov
lock
mov
lahf
adc
pop
sbb
add
out
out
js
lret
or
stc
xor
and
mov
push
mov
scas
mov
je
in
mov
lea
and
js
clc
inc
das
cmpsb
mov
int
jo
dec
push
xchg
lods
loope
lock
xor
lods
nop
xor
sbb
aas
push
pop
add
popf
mov
xchg
add
pop
mov
or
and
movsl
lret
test
cmp
repz
jle
add
adc
jecxz
push
test
push
adc
dec
mov
insl
ret
movsl
addb
add
lods
mov
xchg
or
xor
mov
mov
add
mov
push
jne
shrl
movsb
mov
add
cltd
sbb
aas
lods
or
xor
add
mov
add
jns
negl
sub
pop
adc
xchg
push
xchg
jo
xor
sbb
and
adc
stc
inc
sub
xlat
shlb
test
jp
popa
xor
cs
jmp
and
test
test
cmp
lea
push
js
dec
dec
movsl
xor
js
xchg
sub
mov
inc
inc
sub
mov
sbb
cltd
insb
cli
leave
test
mov
jo
aaa
fcmovbe
pusha
push
subl
xor
shll
cmp
push
mov
inc
shll
and
lock
cmc
lea
cmpsl
cmp
ret
popa
sbb
and
sub
inc
jnp
pop
push
xchg
dec
or
push
jo
sbb
and
dec
adcb
pop
scas
adcb
mov
test
movsb
pusha
cmp
into
and
subl
sbb
sbb
cmp
cmpl
adc
adc
dec
and
lea
sub
mov
dec
and
cwtl
lods
push
sysenter
sbb
pop
push
dec
or
pusha
inc
xor
and
lcall
ljmp
cmp
out
sub
mov
jb
outsb
add
iret
or
or
jo
dec
sub
push
sub
push
lock
inc
mov
jl
mov
int
sbb
add
jno
jge
pusha
and
stos
push
sbb
cmp
jb
lea
xor
test
call
push
xor
sbb
test
decb
mov
mov
fidivrl
fstps
or
push
jns
mov
sahf
nop
xchg
int3
xor
fidivs
mov
push
xor
push
stos
jno
pop
pop
aas
add
mov
sbb
sub
jne
add
cmp
idiv
es
xchg
mov
fwait
add
pop
inc
add
mov
arpl
test
test
shlb
popl
rol
jo
mov
jo
xchg
addr16
rcrl
jne
call
dec
mov
dec
or
push
mov
in
sub
clc
in
mov
sti
jo
push
loop
je
cmc
cli
lahf
rorl
and
push
xor
xchg
testl
das
sbb
leave
fmull
push
push
test
fistpll
mov
push
sub
mov
push
pop
aaa
xor
xor
movsl
sub
lea
pop
lds
mov
jbe
inc
adcl
jb
mov
mov
addr16
mov
iret
xchg
xchg
test
repnz
es
in
mov
pop
loope
dec
xchg
scas
or
ss
jnp
dec
xor
lret
jmp
stc
sub
test
mov
loopne
jg
pop
nop
out
in
xchg
test
data16
test
dec
nop
dec
xor
fisubrs
sub
cltd
inc
test
pop
mov
lods
inc
sbb
daa
jno
jbe
jae
enter
or
adc
les
xchg
cmpl
xchg
xchg
xchg
shrb
push
jae
pop
flds
mov
add
adc
je
loope
or
in
jb
cld
sub
and
nop
mov
jmp
dec
rolb
push
inc
iret
xor
dec
shrb
sbb
xchg
mov
mov
les
fists
mov
cmp
and
mov
fs
mov
test
sub
inc
in
nop
lea
cmp
ds
push
sub
inc
out
shrl
loope
lcall
sbb
xchg
addr16
cmp
and
inc
and
mov
or
xor
sahf
and
push
add
lods
stc
imul
lock
or
cs
xor
or
mov
call
loopne
lahf
neg
std
stc
xor
mov
mov
call
sub
adc
out
add
leave
imul
enter
les
ret
mov
insl
rolb
adc
loop
pop
push
inc
mov
mov
clc
push
push
xor
fstps
push
lret
sub
dec
jmp
cmc
cmpl
sbb
fmull
jle
movzbl
and
mov
xor
fbstp
push
inc
mov
enter
ss
int3
aaa
rolb
inc
sbb
cmp
test
jecxz
mov
dec
pop
adc
or
cmpl
je
or
je
add
out
loopne
jmp
or
in
dec
jo
rcrb
lds
test
pusha
jge
jae
push
jo
or
loope
inc
mov
or
mov
dec
pusha
cld
push
or
add
call
in
fs
out
pushf
pop
adc
cwtl
imul
sub
stos
xor
lea
push
in
stos
clc
inc
mov
xchg
lods
fistl
cmc
or
mulb
add
pop
out
or
mov
add
adc
testb
lea
repz
push
mov
jb
es
add
add
jns
push
add
js
sbbb
xchg
data16
sub
or
mov
les
push
inc
mov
cmpl
push
mov
jge
dec
fbstp
adcl
pop
jbe
dec
cmp
clc
xchg
test
jg
data16
add
and
xchg
inc
adc
push
lods
xor
add
hlt
dec
int
test
jo
xor
lret
cmc
shlb
or
push
pop
sub
or
sub
jns
add
add
add
push
add
adc
dec
add
loopne
ja
sub
adc
add
push
push
daa
add
mov
fdivrl
xchg
jmp
xor
add
push
inc
daa
sub
pop
mov
inc
addr16
sbb
arpl
in
or
mov
mov
push
xor
nop
sub
inc
sbb
pop
add
fistps
sbb
iret
ja
outsl
jbe
mov
shlb
jmp
push
xor
inc
addr16
fwait
in
inc
xchg
xchg
jg
mov
add
out
ret
and
lock
mov
adc
orl
arpl
insb
adc
sub
push
pop
mov
sbb
lock
outsb
in
mov
push
sub
sbb
pop
fadds
ficomps
and
js
push
lahf
flds
pop
rclb
rclb
cwtl
add
add
xchg
pusha
out
shlb
lcall
nop
pop
mov
sub
push
andb
popf
ret
pushf
loope
stos
adc
or
dec
std
pcmpgtd
xor
call
add
jbe
fmuls
mov
mov
inc
pop
push
hlt
dec
fisubs
aam
or
sub
mov
cmp
push
sbb
je
rcr
and
or
sub
adc
rorl
add
in
insb
xlat
jbe
jbe,pt
daa
pop
mov
xchg
mov
mov
mov
jbe
jg
mov
jl
push
cmp
mov
loope
rcrl
cmp
jne
je
mov
or
out
jo
dec
push
sahf
sbb
fdivl
lds
lds
stos
cltd
pushf
lods
or
cwtl
daa
pop
xor
push
jo
jbe
push
fxsave
push
mov
dec
lret
out
into
popa
pop
and
loopne
rcl
into
add
jnp
sbb
xor
xchg
daa
sub
xor
mov
push
aad
jecxz
pop
insl
cmp
mov
and
sbb
imull
pop
push
jo
repnz
adc
adc
loop
pushf
cmpsl
or
ret
or
sub
scas
mov
pop
mov
mov
in
int3
int3
sti
sbb
mov
ret
les
inc
fs
xor
aas
xchg
sbb
inc
daa
adc
fsubs
push
mov
lea
dec
adc
push
mov
mov
jl
and
mov
aas
les
popf
or
arpl
test
outsb
mov
loopne
sub
or
sub
jp
pop
and
cwtl
pop
cmp
and
mov
or
testb
pop
ret
jmp
xor
dec
jle
loope
push
cmc
nop
inc
nop
mov
push
insb
xchg
ret
xchg
ss
imulb
push
popl
arpl
sub
mov
cmp
loope
fisubl
in
lret
lcall
add
add
add
push
pop
or
adc
or
add
pop
in
or
or
add
adc
or
cli
jbe
test
mov
pop
cmpsl
imul
inc
fmuls
pushl
xor
mov
ss
pop
pushl
test
xchg
es
pop
jmp
jecxz
mov
nop
mov
and
mov
jo
mov
fs
sub
adc
adc
lods
movsl
add
in
in
dec
cs
and
jns
mov
mov
adc
jb
lods
shll
int3
lea
push
insb
ret
cld
or
sbb
out
cld
cwtl
and
jnp
dec
lret
xor
pop
mov
push
xchg
adc
mov
pop
aad
clc
jl
jne
cmp
xchg
lock
push
ds
or
mov
fidivs
dec
hlt
cmp
stos
or
rorb
jne
push
in
mov
ret
sbb
pop
mov
push
scas
and
popf
or
mov
hlt
jmp
xchg
repnz
pop
add
lock
cmp
je
lahf
bound
sbb
or
jno
jmp
fstpt
sub
dec
stos
xchg
xor
inc
adcb
add
and
jmp
das
ret
ja
or
fsubs
sbb
jb
fbstp
cltd
add
adc
push
repnz
push
dec
xor
iret
mov
xor
xchg
je
je
stc
pop
sahf
outsb
push
sbb
sub
and
insl
xor
xor
stc
push
xchg
inc
xchg
add
inc
es
mov
xorb
cmp
push
inc
jo
enter
and
negb
jno
leave
nop
int
and
inc
adc
inc
or
mov
cmpsb
mov
nop
mov
xchg
xchg
xor
dec
cmpsl
or
jl
xor
cmp
mov
subb
push
push
xor
stos
les
xor
movsb
shll
xor
mov
inc
pop
push
and
push
xor
pop
mov
sarb
add
dec
lods
in
movaps
mov
jbe
iret
jmp
xor
dec
and
push
pop
dec
mov
jne
fdivs
vmwrite
cmp
xlat
jge
sub
imul
adc
adc
dec
shrl
adc
aam
adc
jmp
les
mov
push
mov
loop
pop
cmp
jne
jmp
adc
push
loop
or
xor
subb
stc
or
je
add
push
push
or
push
add
cwtl
jnp
sbb
sbb
pusha
xchg
and
pop
clc
xchg
or
xchg
outsb
and
adc
adc
xor
push
movlps
enter
mov
popa
ret
scas
push
pop
mov
roll
add
out
push
dec
cmp
les
dec
sub
int3
into
les
inc
xor
push
adc
je
inc
add
arpl
pusha
pop
jne
test
or
popf
mov
xchg
aaa
jno
push
adc
pop
xchg
or
cli
adc
inc
ret
mov
inc
pushf
data16
or
mov
add
xor
mov
mulps
adc
xchg
mov
fucomp
jg
loope
neg
sbb
push
mov
or
rorb
jb
call
adc
popf
lahf
add
push
add
sahf
les
shr
sub
and
add
add
shrl
sub
lods
xchg
lret
mov
push
test
jmp
xor
sbb
mov
inc
fwait
cmp
jl
out
pop
fwait
inc
add
fwait
mov
jecxz
pushf
pop
lahf
incb
pop
add
add
cwtl
lods
mov
add
imul
lea
and
inc
je
ds
xchg
xchg
sub
or
clc
add
nop
call
clc
and
inc
enter
mov
insl
cmpl
das
cld
jmp
adc
fadds
xor
mov
cld
sub
pop
lcall
xchg
xchg
mov
icebp
add
push
dec
jo
jl
lret
cmp
insl
clc
push
push
xchg
loopne
or
adc
xchg
sbb
pop
sub
rorb
push
fsubrl
push
jl
in
out
imul
add
jae
dec
pop
cmp
pop
lds
jecxz
dec
shlb
adc
xchg
lods
cli
pusha
pop
cmp
adc
push
movsl
ret
jne
inc
addl
cli
and
in
in
cmp
js
lahf
rolb
sub
scas
lock
loop
pop
or
lea
mov
pop
jmp
clc
hlt
hlt
lret
push
and
add
std
push
lahf
out
or
pop
clc
jmp
mov
aas
cmp
test
lea
imul
pop
mov
into
adc
shll
cwtl
orl
dec
in
adc
cmp
mov
cmp
ds
fldt
pop
test
sbbl
cmp
mov
push
in
stos
rclb
icebp
push
cmp
icebp
xchg
push
sbb
jle
add
bound
inc
in
in
xchg
aaa
push
lock
inc
hlt
push
push
jns
lock
popa
pop
ficompl
rcll
cli
mov
imul
jmp
lret
adc
sbb
aad
push
into
rcl
cld
ret
and
pusha
das
fstl
icebp
jecxz
or
aad
and
inc
mov
mov
inc
lds
add
add
add
mov
shll
mov
popf
inc
sub
mov
lahf
aam
sbb
jae
sarl
cmp
and
mov
andb
sbb
add
hlt
push
add
sbb
adc
jmp
inc
fmull
outsl
fimuls
inc
mov
adc
loopne
nop
or
mov
push
pop
clc
iret
fmulp
int3
add
add
pop
push
cmpb
cmp
mov
or
int
sub
jmp
cld
mov
mov
addl
xchg
cmp
dec
shl
mov
add
enter
incb
or
fldcw
push
cmp
or
cmp
adc
negl
int
sub
pop
mov
lahf
bound
xchg
mov
pusha
icebp
push
pop
sbb
pop
or
cmc
adc
das
fs
nop
inc
sub
dec
add
data16
in
inc
push
shrb
mov
sub
cld
ljmp
es
dec
jecxz
jb
enter
mov
fs
cltd
push
pop
scas
mov
xchg
pusha
das
or
fdiv
sub
cmp
test
xchg
lea
push
mov
adc
cmp
sub
in
pop
subl
inc
or
adc
popa
mov
inc
adc
fdiv
cmp
jne
push
push
or
gs
xor
xchg
movl
adc
add
mov
sbb
movsb
ds
mov
push
adc
jp
pop
inc
je
pop
mov
stos
fmull
ficoms
pop
or
add
leave
sti
jnp
inc
lahf
jmp
cs
sbb
xor
xor
ret
andb
lock
xchg
xor
push
add
mov
or
adc
or
je
adc
push
and
sbb
and
push
jns
and
mov
fsubrl
fwait
push
inc
sub
sub
pop
call
js
int
mov
cmovo
mov
mov
mov
jbe
inc
sbb
inc
fldl
cmp
rcrl
ljmp
mov
xor
ret
jmp
clc
or
or
cmp
mov
xor
test
dec
jo
stos
aas
out
add
cmp
add
push
cld
stos
pop
pusha
and
pop
and
dec
cmp
ds
sbb
clc
or
adc
cld
mov
pop
mov
mov
or
arpl
popf
pop
in
mov
cmp
in
or
shlb
in
mov
lahf
div
je
orb
and
rorb
and
pop
lahf
leave
clc
into
pusha
inc
enter
push
mov
sub
stos
xor
adc
repnz
jns
das
xlat
rclb
dec
test
in
movb
or
dec
movsl
sti
add
test
pop
inc
ja
insl
push
sub
dec
xchg
faddl
adc
mov
dec
pop
fists
inc
lock
push
add
jmp
mov
or
mov
mov
or
vpminsb
sar
sarl
xchg
fiadds
dec
or
mov
lahf
adc
cmpsb
or
xor
push
pop
les
mov
or
std
lock
dec
adc
push
lea
mov
out
hlt
loope
test
out
imul
mov
pop
sub
jl
jle
lds
lock
add
nop
lcall
enter
xchg
xchg
pop
add
push
lcall
mov
fwait
jg
lods
jae
aam
loopne
scas
adc
jne
in
add
ret
pop
xchg
mov
jmp
inc
add
jo
cmp
push
inc
je
xor
and
setne
jb
jnp
inc
imul
fldl
jo
pop
and
push
scas
jbe
lahf
jl
bound
mov
jb
add
es
dec
adc
add
lods
insl
int3
mov
lock
add
inc
and
andl
pusha
push
mov
fs
je
loope
pushf
cmp
jge
and
test
clc
push
cmp
lock
sahf
jl
in
jge
mov
int
and
add
fisubl
or
push
jecxz
lea
dec
cmp
shlb
dec
cmp
sub
scas
icebp
in
xor
xor
mov
icebp
sub
adc
add
add
push
loopne
sbb
push
int3
sahf
fmull
jae
or
xchg
cmovnp
or
add
loopne
push
fsub
jl
lock
jne
bound
cmp
sbb
xor
jb
enter
sbb
data16
sbb
xor
or
xor
pushf
inc
xchg
decl
enter
and
subb
aad
fsubrs
insb
rcll
pop
movsb
movsb
add
cli
loope
rcll
fcmovnbe
das
lods
adc
jg
call
das
xor
mov
mov
bound
mov
notl
movsl
cmpl
and
inc
or
jno
inc
jnp
mov
mov
mov
or
or
in
xor
sbb
lea
cltd
ret
cmp
mov
xchg
mov
inc
push
cmp
sub
mov
stc
jmp
loopne
loope
jmp
lea
and
xchg
cs
xor
xor
pop
loopne
lea
push
test
mov
or
ret
add
and
mov
mov
jno
adc
cmpsb
lds
xor
add
shr
push
int3
mov
xchg
and
push
cmpsl
push
add
add
push
jmp
or
lock
pop
enter
cli
sbb
stos
stc
jmp
popf
add
lcall
jl
sbb
sahf
adc
stc
and
in
aaa
fidivl
orb
xchg
jmp
push
cmp
dec
jge
lods
insb
adc
loopne
insb
push
and
and
sub
jne
out
pop
loop
push
xlat
inc
test
xchg
addr16
mov
test
lds
mov
add
add
pop
out
fmuls
shll
in
cwtl
lcall
mov
loope
dec
in
inc
sbb
push
pushf
sarb
cmpl
ret
shlb
adc
mov
insl
xorl
adc
xor
sbb
je
cltd
stos
push
cli
dec
sbb
rorb
cmp
les
fcoms
and
xor
stc
xchg
les
mov
pop
scas
mov
cmp
dec
adc
jmp
cmp
popa
mov
cmp
test
push
adc
ret
dec
lret
jmp
test
and
pop
add
mov
inc
leave
lea
repnz
rcll
add
mov
subl
int3
into
xor
ja
stos
std
mov
xor
cmp
xor
clc
dec
ret
and
aam
xor
lods
ret
cmpsb
gs
fcoms
cmpsb
in
xchg
sub
les
clc
jne,pn
daa
mov
dec
jne
dec
jne
adc
sbbl
ret
pop
iret
adc
sub
inc
pop
out
add
adc
jl
sub
push
std
jb
push
inc
adc
inc
fsubr
push
outsl
pusha
mov
jne
stc
mov
add
or
add
lahf
jmp
lds
lods
dec
stc
enter
cwtl
mov
mov
cmpb
aas
gs
push
push
dec
and
mov
mov
fwait
cwtl
rcrl
gs
or
repz
pop
aad
lods
or
rcr
mov
in
pop
adc
clc
mov
imul
arpl
loop
adc
fldenv
add
add
fdivl
and
mov
xor
sub
fnsave
sbb
das
mov
mov
xor
out
inc
and
dec
inc
cmpsb
inc
loopne
icebp
out
jmp
sti
mov
pop
je
cmp
cmp
jbe
mov
das
pop
mov
jmp
cs
push
gs
dec
loopne
cmp
mov
sbb
addb
mov
stos
push
add
add
adc
pop
in
lock
arpl
push
cmp
clc
push
in
mov
adcl
lds
push
jmp
cmpsl
or
inc
cs
xchg
sbb
lahf
loop
pop
dec
jp
add
pop
cld
dec
sbb
push
ds
push
push
xlat
mov
dec
xchg
push
or
cmpl
xor
add
pop
lea
test
lea
in
mov
sti
xor
shlb
fstps
cs
mov
cli
shl
js
mov
lret
bt
movsl
or
out
add
sbb
mov
push
int3
adcb
jmp
sub
add
mov
push
dec
pop
int3
dec
repnz
lods
mov
cld
scas
pop
mov
call
dec
cld
push
inc
push
cs
push
ret
out
mov
push
sbb
fists
push
xchg
sub
xor
push
xchg
inc
push
pop
xchg
sub
nop
cmpsb
in
and
mov
push
push
rclb
test
sub
inc
lea
inc
inc
push
push
adc
xor
cmpsb
xchg
xor
jl
es
sti
aaa
loope
idivb
leave
repnz
rcrb
push
xchg
sub
push
push
int3
pop
shrb
aam
xor
mov
call
or
stos
or
in
int
lahf
xor
nop
add
mov
mov
dec
in
mov
loopne
popa
adc
ss
jbe
repnz
mov
std
push
lahf
insb
push
lods
imul
xchg
adc
ljmp
aad
xchg
push
sbb
jmp
mov
outsl
dec
rol
je
shlb
rclb
dec
mov
es
push
clc
lods
pushf
lock
push
xor
sub
xor
sbb
mov
push
scas
xor
push
inc
xchg
lcall
mov
mov
jge
in
adc
push
popa
sarb
loopne
sti
adc
fs
loope
dec
js
adc
jge
xor
cs
loope
ja
iret
out
cs
cs
adc
sub
or
sub
push
hlt
sarb
into
shrb
jb
loopne
or
fiaddl
mov
imul
aam
in
test
inc
sub
mov
push
or
das
fldl
xor
sub
mov
pop
inc
pushf
or
or
dec
pop
pusha
dec
outsl
loope
movsl
or
and
inc
lods
sub
jne
xchg
jecxz
xchg
icebp
mov
pushf
jno
shl
shlb
jg
push
or
cmpl
stos
xchg
add
or
gs
stos
cmp
fidivs
sub
andl
pop
pop
mov
cmpsb
cmp
lahf
nop
ja
hlt
adc
add
jmp
cld
sbb
ja
xor
push
sub
scas
inc
out
arpl
jg
or
mov
add
mov
sti
cld
shl
push
test
sbb
mov
cmp
cmp
repnz
lock
ds
lock
testb
push
loopne
inc
push
cmp
jl
sub
test
outsb
push
in
shrl
pop
andb
fldcw
lcall
dec
shrl
mov
cltd
jle
cs
aaa
sbb
or
pop
ret
popa
mov
xchg
cmp
pushf
adc
fst
call
inc
pop
rorb
inc
imul
rcll
mov
test
jg
jnp
jae
push
lret
rcrl
aas
mov
mov
das
cld
popa
cld
roll
cmp
or
xchg
mov
sti
mov
jmp
shrl
pop
mov
mov
and
mov
into
jmp
adc
insl
mov
jno
decb
add
ret
pop
cmp
push
in
or
out
pop
inc
lock
lret
mov
lods
inc
movl
mov
ret
add
faddl
ret
sub
shr
push
rorb
mov
push
cmp
mov
or
pop
lea
jno
mov
scas
jge
inc
dec
dec
popf
or
mov
clc
jne
jae
jmp
add
add
mov
inc
push
sub
les
and
push
pusha
add
push
jne
sub
push
jmp
cmc
mov
es
xor
dec
pop
out
decl
sub
cld
outsl
outsl
loop
mov
xor
jne
mov
inc
pop
cld
push
jg
mov
sub
test
data16
add
ljmp
and
lds
clc
mov
outsb
add
cmp
shrb
or
mov
add
and
push
cmp
xor
jg
push
pop
lcall
fcompl
fisttpll
push
pop
adc
xorb
shll
mov
negl
hlt
and
hlt
jge
pop
push
xor
hlt
divb
and
xor
scas
daa
and
dec
sbb
mov
lea
stos
ret
out
jo
dec
lret
cs
add
movsl
inc
addb
stc
push
cli
addr16
or
jns
xor
int
movsb
inc
push
sub
jmp
cmp
mov
out
or
pop
push
fxch
fwait
bound
xor
dec
por
or
sti
rcll
jecxz
or
pop
jns
jg
jg
dec
add
mov
inc
sti
out
add
add
add
ja
adc
adc
mov
cmp
test
xchg
cmp
lods
and
pop
shll
add
mov
xchg
xchg
jl
adc
lods
lock
test
loopne
jg
call
mov
mov
push
stos
es
add
sahf
mov
jne
sti
fwait
loopne
orb
lds
xor
mov
pop
or
and
or
sub
lods
push
xor
and
mov
xor
cmpl
mov
test
pop
rorl
aam
xor
mov
xor
bound
repz
lcall
insb
jp
movlps
hlt
push
mov
push
jmp
push
jno
push
add
nop
mov
sbb
or
addl
mov
xchg
cli
adc
movsl
sbb
mov
roll
inc
sahf
dec
daa
inc
inc
push
cmp
lods
adc
ja
cmp
or
xchg
and
sub
int3
ret
test
add
dec
adc
or
xchg
jae
adc
cmp
and
lea
vminps
sbb
cltd
movsb
cmp
int3
mov
pop
mov
push
fadd
add
sub
jg
lock
push
push
andb
test
sbb
mov
xor
rorb
mov
mov
mov
imul
movsl
dec
xor
sub
test
inc
xchg
mov
test
mov
call
inc
aas
movsl
mov
and
xchg
fadd
mov
xchg
inc
and
add
pop
hlt
orl
xchg
jno
out
and
lcall
mov
fists
int3
cwtl
lock
inc
add
xor
cmp
sbb
mov
or
test
test
adc
pusha
jmp
mov
pushf
inc
icebp
ret
adc
or
sub
sbb
mov
xchg
push
sbb
inc
bound
and
inc
arpl
pop
jp
lock
test
pop
or
cmp
lock
mov
pop
adc
pop
pop
xchg
aas
pop
xchg
mov
hlt
mov
sbb
push
and
add
and
sbb
pop
mov
loopne
loopne
push
xor
les
xchg
mov
lcall
mov
pushf
pop
ja
loopne
pusha
xor
sub
das
add
jo
adc
xor
pop
aas
mov
and
and
stc
adc
jo
mov
adcb
sbbb
jno
adcl
out
sub
sbb
pop
addr16
inc
lret
inc
sbb
mov
add
movl
cmc
arpl
and
clc
das
std
movl
and
lret
xor
pop
cmp
cmp
add
cmc
sbb
lahf
shl
xor
aas
pusha
or
andl
hlt
lret
inc
out
ret
ljmp
xor
jmp
cmp
inc
inc
data16
inc
add
jnp
das
jecxz
adc
xchg
mov
cmp
loopne
cmpsb
sbb
jo
fbld
mov
sbb
ds
outsl
xor
add
or
xchg
lock
aaa
ljmp
stos
xchg
rolb
xor
mov
pop
addb
jb
movsb
inc
or
mov
inc
fdivl
sbb
or
rcll
mov
rorl
scas
sbb
cmp
sbb
or
jne,pn
scas
push
test
sbb
stos
ljmp
clc
mov
pop
mov
push
stc
push
js
pop
or
dec
pusha
stos
js
cmp
jbe
or
int3
pop
and
sbb
addr16
or
shl
movsb
push
mov
ja
or
ret
loopne
add
or
xor
sub
sub
mov
or
fmull
mov
mov
dec
adc
push
pop
inc
push
test
pop
sbb
aam
sbb
dec
xchg
out
js
into
ret
leave
bound
imul
bound
push
dec
and
js
push
adc
leave
aam
adc
xor
shrb
mov
mov
sti
clc
jmp
add
in
pusha
sar
mov
mov
shll
pop
adc
pop
repnz
jne
mov
push
enter
jo
popa
sub
push
inc
popa
dec
call
mov
or
fildll
sub
dec
in
stc
popa
popa
stos
push
push
jecxz
shrl
outsb
sbb
shrl
pop
je
pop
int3
call
pop
inc
mov
xor
hlt
push
add
pop
dec
and
xor
lea
and
pushf
outsl
pusha
sub
notb
xor
xchg
push
pop
mov
lea
sbb
out
sub
roll
pop
call
movsl
add
mov
fmuls
cmp
pop
aas
daa
cmp
addb
jbe
or
dec
vmwrite
in
lods
xchg
loopne
sub
inc
push
jo
sarl
inc
xadd
dec
pop
adc
and
pusha
insl
sbb
ret
repnz
iret
jbe
and
lcall
xor
xor
in
mov
xchg
push
lods
pusha
repnz
inc
loopne
sub
loopne
dec
xor
push
pop
cmp
pop
lods
adc
sahf
dec
jp
add
mov
js
loop
enter
mov
in
push
test
add
cmp
jo
int3
push
pushf
dec
pop
and
mov
xor
push
insb
xchg
enter
push
test
dec
insb
xchg
pop
mov
fildll
ja
add
jl
push
in
daa
into
std
ror
movl
pop
add
inc
cwtl
push
cmp
ljmp
or
jmp
pushf
scas
fdivrs
sbb
push
imul
jge
repnz
sbb
pusha
push
lcall
jg
imul
movzwl
mov
rclb
cmpsl
sbb
add
pop
aas
mov
cmp
outsb
inc
cli
std
adc
or
xchg
adc
jo
shlb
adc
cmpsb
adc
insb
dec
jne
insb
mov
mov
in
insl
out
shll
imul
iret
andb
push
jbe
lods
mov
ret
sar
stos
adc
clc
sub
rorb
pop
dec
adc
lock
inc
nop
push
push
pop
icebp
fsubrl
arpl
push
jecxz
add
sub
sbb
mov
xor
jbe
cmp
or
mov
movsb
ret
lret
aad
xchg
mov
jl
int3
outsb
gs
outsl
sub
movsb
jno
or
add
das
outsb
lret
or
outsl
or
dec
xchg
inc
and
in
mov
enter
adc
fsubs
sub
movsb
dec
shlb
xchg
fisubl
or
test
jg
mov
test
and
lods
test
mov
addb
pushf
mov
pushf
sub
or
add
jb
call
insl
mov
dec
mov
stos
xor
add
jne
sbb
test
inc
dec
and
or
in
jmp
mov
movsl
cltd
stos
stc
pop
rorb
adc
je
jmp
sub
adc
adc
loop
or
insb
xorl
add
or
bound
out
pop
fcos
dec
xchg
test
pop
add
nop
mov
jl
adc
adc
xor
popf
adc
sub
pop
rcll
adc
daa
imul
cld
dec
mov
xor
mov
outsl
call
xorb
jno
call
mov
lea
rep
mov
push
aas
mov
add
mov
test
jl
jecxz
sbb
mov
cmpl
mov
xor
sub
jo
int3
mov
loope
xchg
mov
orl
adc
mov
push
add
rcll
daa
dec
sub
push
push
mov
xchg
push
jp
pop
xor
out
roll
shrl
data16
fisttpl
pop
mov
aam
jp
and
test
jnp
loopne
jns
shl
cwtl
sub
or
roll
pusha
mov
repz
xchg
cwtl
pusha
mov
pushf
shl
dec
add
dec
lods
dec
cmpsb
movsb
xchg
or
push
jle
pop
or
and
and
fs
jo
dec
test
pop
cwtl
push
repnz
cmpb
and
adc
adc
cmp
outsb
cmpsl
mov
fsubp
mov
insl
rcrb
jle
mov
sbb
fldt
xchg
lret
lods
mov
ret
lret
cld
cmpsb
and
lcall
cmp
test
cmc
sbb
test
jp
jecxz
idivl
add
idivl
jp
out
repnz
xchg
lret
es
cmpsl
rorb
jge
and
mov
scas
cltd
enter
adc
or
jns
lahf
cmpsb
lock
je
in
call
test
cmp
pop
xchg
jae
xor
lock
test
and
pusha
jg
pop
lock
lret
mov
test
pop
push
mov
push
ja
adcl
jecxz
push
aas
in
data16
shlb
aad
inc
or
leave
jge
pop
inc
jp
mov
adc
hlt
cs
shlb
mov
push
pushf
add
in
movsb
add
inc
xor
or
enter
sub
data16
mov
jle
or
lock
sub
ds
fadds
sbb
jmp
orl
movsl
in
andl
cs
xor
cwtl
aam
fcomp
push
cmp
ds
inc
sub
icebp
cs
imul
jne
adc
inc
add
jo
cmp
movsl
mov
jmp
cmp
in
je
stos
xchg
jmp
adc
mov
mov
inc
push
mov
cwtl
or
into
in
in
pop
sbb
mov
arpl
enter
sub
add
inc
in
dec
jns
or
in
ds
popa
jmp
cli
inc
mov
imul
or
int
pop
shrb
in
xchg
test
call
xlat
add
and
pusha
shrl
scas
movsb
enter
orps
or
sbb
sbb
mov
sub
jle
ret
stc
mov
pop
roll
add
mov
enter
sti
mov
push
cmpl
or
fwait
ja
je
mov
push
xor
out
fcoml
jo
push
loop
jb
adc
pop
jg
and
mov
lods
sar
shlb
ds
add
add
sub
mov
enter
xchg
and
sbb
fldt
loope
push
inc
add
aam
push
xchg
add
xor
pop
sbb
and
xlat
jbe
jl
loopne
push
and
push
jb
lret
jno
sub
pusha
mov
add
aas
pop
add
pop
mov
pop
xchg
xchg
in
test
push
ljmp
lea
push
push
sbb
test
loopne
add
pushf
cmpb
adc
int3
clc
imul
lods
notb
or
mov
mov
add
push
inc
xchg
flds
jbe
push
cs
jmp
lret
pop
xor
sub
sbb
das
mov
fwait
add
sarb
rclb
or
mov
sbb
xor
cmp
insb
inc
mov
mov
inc
add
add
dec
push
stos
lea
push
mov
cmp
lea
loope
mov
adc
add
pusha
aam
add
mov
fcomps
xor
xchg
aad
push
xor
xor
mov
pop
xchg
pop
mov
xor
int3
mov
inc
mov
inc
pusha
pop
or
push
add
insb
xchg
ja
adc
dec
addl
fdivs
push
sbb
jne
nop
movsb
and
lods
xchg
dec
enter
pop
or
cli
sub
dec
pop
add
subb
aad
mov
int
add
rcll
dec
fdivrl
rcrl
xor
data16
cli
or
mov
fmul
push
dec
lret
out
pusha
cmp
rolb
test
fcoms
xor
push
aas
and
das
mov
int
sbbb
mov
push
cmp
jmp
enter
fnstsw
push
mov
insl
mov
loop
or
dec
dec
test
out
and
ljmp
jns
imul
or
and
adc
mulps
rcrb
inc
pop
add
sbb
xchg
pop
nop
or
loop
jmp
jo
fldenv
xor
pop
jge
rdtsc
les
icebp
cmp
pusha
adc
inc
add
mov
add
pop
ficoms
mov
es
cld
push
popf
or
ret
pop
sub
dec
and
xchg
sub
fnstsw
jmp
cmp
pop
push
shl
xor
dec
mov
mov
sub
lahf
inc
sub
push
stos
movsl
mov
movsl
adc
out
jne
pop
push
ja
push
dec
jge
and
inc
inc
outsb
push
push
pusha
xor
pushl
push
adc
hlt
mov
sub
add
mov
or
in
push
or
sub
sarb
inc
std
mov
lret
in
sar
mov
sbb
push
push
adc
or
sbb
in
lcall
push
push
mov
cmp
push
or
xchg
popa
bound
or
call
adc
sbb
mov
sbb
jae
dec
jg
add
adc
cld
popf
orb
mov
pop
add
rcl
repz
dec
jnp
pop
cmp
push
cli
jl
fbld
shl
pop
hlt
hlt
cmp
ss
push
sub
push
movsb
or
cmp
adc
jmp
movsl
sarb
out
cmp
jp
pop
xchg
hlt
test
jbe
prefetcht2
push
sbb
dec
pop
xor
push
scas
sbb
outsl
xor
push
push
pusha
add
sar
mov
inc
rorb
cs
push
or
movsb
add
pusha
xchg
mov
push
jge
subl
dec
cld
mov
add
loopne
push
daa
push
xchg
dec
jmp
dec
jmp
sbb
or
lock
pusha
push
cmp
mov
cmp
ficomps
jbe
push
add
cmpb
or
mov
adc
jg
idivl
sub
lea
bound
or
mov
inc
dec
jne
js
jne
test
pop
jne
dec
mov
mov
pop
inc
sarl
xchg
test
fcompl
push
outsl
mov
cmpsb
cmp
xor
mov
push
rol
sbbb
inc
hlt
adc
mov
xor
push
push
subb
jns
sub
jnp
movsb
or
in
push
push
pushl
jmp
sbb
sbb
add
jno
lea
es
jge
mov
jnp
sbb
dec
aam
jmp
dec
cmp
sbb
inc
jmp
push
xor
and
jl
popf
sar
add
mov
pop
mov
dec
sti
xchg
ret
sbb
cmp
lcall
and
mov
push
push
mov
jne
cmp
lahf
sub
cltd
enter
je
jbe
mov
mov
cmp
adc
mov
sub
movl
mov
sti
test
adc
jne
mov
mov
xlat
ficoml
adc
shlb
arpl
add
lods
dec
decl
dec
and
mov
lcall
insl
mov
cmpsb
push
xchg
mov
inc
call
sti
in
mov
cmp
jb
neg
add
add
rorl
data16
cmp
aam
mov
or
or
jge
in
pop
mov
or
rcrb
lock
push
clc
sub
idivb
and
and
mov
and
mov
pop
push
mov
add
add
jle
push
push
cmc
xor
push
clc
jl
mov
xchg
rorb
mov
arpl
loopne
leave
popa
cltd
fld
loop
pop
xchg
add
dec
push
fs
rcrl
jmp
stc
inc
mov
add
cli
sub
lcall
das
int
test
std
pusha
les
cmp
xchg
mov
fs
mov
shld
rclb
cld
sbb
mov
or
push
lods
cmp
shlb
push
or
mov
dec
or
into
sbb
sub
jbe
jns
adc
mov
pop
gs
push
addl
cli
jo
jg
sbb
add
inc
xor
mov
fadds
push
mov
add
xchg
movsb
inc
sbb
addb
mov
rorb
lock
mov
inc
fisttpll
push
mov
out
cmp
inc
popf
add
sub
enter
shl
pop
or
mov
aam
cs
xchg
xor
pop
pop
xchg
enter
add
sub
xor
mov
xor
push
inc
dec
cld
jo
add
je
adc
sub
movl
jmp
sub
xchg
jle
jo
or
shl
gs
and
and
es
or
and
push
xchg
das
fstpl
fbld
jno
sbb
imul
cmp
jae
inc
les
mov
jmp
sub
cli
mov
rolb
and
adc
cld
xchg
loop
cmp
jge
cmp
push
loope
adc
outsl
sar
jge
sub
xor
insl
ljmp
or
add
repz
addl
jmp
push
sub
inc
add
mov
sub
bound
jle
mov
sbb
inc
fimuls
xchg
inc
xchg
loope
test
fisubrl
lahf
std
jg
adc
dec
add
mov
lds
cmp
sbb
rorl
movl
sbb
or
fsubr
push
dec
pop
xchg
push
shl
hlt
fadds
in
sbb
rclb
ds
call
push
jbe
sub
mov
in
sub
pop
inc
xor
fidivl
push
inc
testl
xlat
xor
lahf
clc
sub
xchg
icebp
lods
imul
out
movsl
das
push
clc
or
jle
jmp
mov
jbe
je,pn
push
push
lea
xor
xor
xor
xor
cld
outsb
adc
pop
mov
fstps
jo
xchg
adc
mov
adc
adc
sub
out
pushf
push
adc
mov
add
pop
js
xor
inc
in
sbb
add
mov
mov
push
adc
punpckhdq
stos
pop
sub
sub
push
sub
sub
sbb
mov
arpl
cmp
lahf
loopne
xchg
push
push
pop
mov
ret
jecxz
rep
xor
and
out
push
or
add
pop
lret
add
jne
add
loopne
sti
sbb
add
xchg
push
movl
sbb
pop
arpl
rcr
cmp
push
sbb
aaa
sbb
stc
pop
or
rorb
xor
fbstp
push
insb
neg
pop
sbb
pop
inc
jg
and
sbb
icebp
clc
mov
roll
cmp
jbe
clc
jb
pop
mov
rcrl
push
pop
cmpl
sti
out
and
dec
pop
pop
adc
sti
pop
jnp
cmp
call
adc
and
cmp
jb
fcoms
add
mov
mov
jb
loopne
add
xor
add
cli
lea
idivl
nop
cmp
fs
mov
rcl
in
mov
mov
mov
mov
or
scas
adc
mov
dec
xchg
push
push
cwtl
add
movl
into
inc
add
add
or
out
lock
call
repz
enter
mov
repz
and
call
cmp
repz
hlt
hlt
clc
clc
fisttps
repz
mov
add
lock
out
push
insb
fnstcw
jmp
xor
mov
mov
inc
xor
push
lods
pop
sti
and
popa
xchg
and
lea
jl
dec
jb
cmp
or
addr16
stc
out
mov
neg
adc
pusha
xchg
or
stc
sub
inc
pop
nop
les
call
add
mov
add
sahf
inc
push
out
push
and
dec
dec
mov
mov
addr16
add
ljmp
mov
or
push
je
iret
repz
test
loop
sbb
sbb
out
sahf
out
adc
adc
out
sahf
or
or
ds
int
inc
rorb
push
fsubr
add
push
add
or
mov
rcl
mov
pop
or
jne
push
push
cmp
lret
gs
jg
mov
cli
sbb
push
pop
mov
push
add
or
and
jmp
ds
cmp
les
jb
push
jge
or
jl
and
in
rcrl
push
mov
push
popf
and
add
jmp
scas
pop
pop
sub
in
scas
cld
push
stc
je
icebp
sub
sub
or
movsb
xchg
inc
mov
push
add
movl
mov
stc
movl
rolb
es
inc
mov
fstpt
lock
enter
add
adc
xor
push
adc
andl
inc
push
and
and
mov
fucomip
loop
nop
jbe
filds
push
cmp
mov
add
inc
hlt
scas
or
leave
daa
clc
inc
push
inc
sbb
jae
fstpt
data16
ss
or
repnz
repz
jns
je
pushl
jge
add
pop
inc
cwtl
add
stos
shrb
repz
sub
xchg
mov
dec
dec
fisttpl
cmpsb
cmp
inc
or
sub
sbb
enter
test
mov
add
sti
arpl
sbb
hlt
or
pushf
xchg
icebp
mov
pop
push
jp
inc
jl
sub
push
int3
leave
and
fldt
sti
mov
adc
mov
les
cmp
jne
inc
loop
mov
inc
inc
inc
jmp
and
or
shrl
ret
pop
xchg
or
xchg
inc
xchg
js
mul
xor
cmp
pop
pop
mov
inc
inc
sbbb
sbb
movb
adc
adc
in
mov
jmp
data16
mov
inc
or
arpl
inc
scas
dec
insb
mov
or
dec
add
push
cmp
outsl
rol
pushf
or
jo
pop
dec
sub
mov
mov
cmp
push
adc
aas
or
pop
jl
out
sub
inc
jo
adc
sub
mov
add
inc
add
xchg
into
popa
adc
adc
push
popf
cmp
add
jae
pop
shl
add
mov
scas
test
jecxz
and
jp
push
clc
xor
and
in
cmc
pop
mov
add
jno
mov
adc
cmp
sub
and
imul
jo
mov
out
mov
dec
or
sarl
in
pop
sub
mov
pop
xchg
push
push
inc
push
aas
add
cmpsb
inc
jl
pushl
cmp
clc
adc
or
bound
mov
mov
cmpsb
jmp
stos
xlat
aaa
insl
arpl
pop
clc
add
cld
cmp
jne
inc
dec
xchg
lret
or
loopne
clc
lea
sbb
and
cmp
dec
hlt
jne
or
sti
inc
imul
push
xor
cmp
cld
mov
push
jl
cmp
jb
cmp
jl
jg
outsl
inc
xchg
jbe
subb
and
out
push
ds
or
enter
xor
pop
cld
xor
mov
fmull
aas
jl
clc
incl
fcomps
icebp
pop
pop
push
sbb
push
mov
hlt
std
fistps
bound
test
cmp
test
push
xor
mov
loop
sub
sbb
push
out
jle
imul
inc
and
stc
sbb
idivb
mov
cmp
add
and
xor
fcmovb
rorb
adc
sub
in
out
mov
sbb
xchg
jmp
sub
mov
js
push
push
and
pushf
outsb
jmp
jge
add
add
push
adc
aaa
cmp
jbe
in
fs
add
add
sub
fisubl
xchg
sub
sbb
data16
inc
sbb
sbb
push
mov
sarb
das
push
jbe
jl
sahf
push
cltd
pop
idiv
add
mov
fcompl
push
sbb
lods
dec
jg
jl
cltd
stc
stc
jae
lea
dec
push
sbb
add
sbb
dec
adc
or
or
test
dec
mov
test
cwtl
jmp
xor
adc
cmpsb
fs
not
pop
and
jecxz
pop
lret
enter
pop
inc
sbb
std
lcall
add
push
adc
push
push
shlb
cli
sub
jg
cmp
push
sbb
add
mov
mov
pop
cmp
cmpb
jl
add
cmp
push
push
push
inc
mov
mov
jp
cmpsl
roll
pop
cld
mov
stos
mov
add
mov
sbb
jne
mov
sbb
mov
adc
leave
cmp
mov
adc
jne
popa
shll
sub
jl
or
pop
and
add
adc
sarl
mov
inc
mov
pop
mov
mov
pop
rorb
xchg
outsl
lock
dec
inc
push
mov
cwtl
or
jb
and
inc
and
out
sub
cmp
lcall
test
les
enter
pop
lods
ljmp
xor
cmp
pop
cmp
lret
push
jp
stc
mov
call
push
jle
popa
out
xchg
xchg
mov
bound
gs
pop
or
hlt
shr
sub
movsl
adc
and
jge
dec
mov
cmp
and
add
ret
jmp
in
lahf
clc
incl
dec
or
jmp
shr
lea
dec
popa
sbb
push
inc
adc
and
jne
push
test
lea
fimuls
cmp
rcrl
cli
cmpl
andl
cmp
int3
cmp
and
mov
fldcw
inc
mov
cwtl
into
sub
mov
inc
stos
sub
hlt
notl
inc
hlt
rep
ss
neg
xchg
je
enter
or
lock
inc
mov
enter
add
subl
xchg
sbb
in
push
shll
push
mov
pop
ja
mov
or
ret
mov
pusha
sbb
test
inc
push
stos
jo,pt
out
lcall
push
clc
outsl
mov
popf
pushf
pop
sub
je
push
popf
fisubs
cmp
push
mov
add
jne
push
data16
pop
mull
addl
add
int3
mov
ficoml
mov
sbb
stos
push
in
call
movl
mov
aas
add
dec
imul
lea
pop
dec
jmp
cmpb
in
shlb
bound
adc
dec
and
push
add
loop
inc
testb
je
add
int
or
test
or
jl
incl
dec
dec
inc
loopne
sbb
jne
cs
inc
mov
pop
xchg
inc
idivl
or
add
das
add
insb
adc
pop
dec
cmp
cmpl
fcmove
shlb
or
insl
outsl
aam
pop
cmp
je
movsb
jle
cmp
insb
das
add
test
loopne
dec
or
xor
mov
sbbl
pop
mov
pushl
or
jmp
pop
add
ljmp
or
mov
inc
stc
jmp
outsb
xlat
sahf
dec
push
in
pop
or
inc
les
xor
fildll
roll
or
imulb
in
sbb
and
and
inc
cmc
add
out
mov
sbb
push
add
sub
pop
or
js
jl
pushl
movsb
sbb
push
push
sub
mov
mov
loop
rclb
add
shll
or
mov
push
or
add
add
repz
sti
jg
push
shrb
aas
dec
and
push
push
ror
add
add
sbb
cmp
jle
out
and
jnp
push
clc
jno
mov
adc
sbb
std
mov
dec
add
imul
nop
add
inc
cmp
jl
loope
add
push
leave
lock
add
mov
adc
in
xor
orl
fneni(8087
jg
sbb
rolb
and
leave
sbb
lock
inc
imul
or
inc
push
fdivr
jbe
jp
dec
outsb
or
pop
inc
fcoml
mov
mov
xchg
add
adc
inc
fdivs
mov
pop
sbb
push
incl
aas
sub
in
outsl
ret
lret
call
pop
cmp
outsb
lret
mov
jo
stos
sub
inc
or
sbb
push
cmpxchg
mov
fdivrs
push
ror
in
add
mov
xor
cmp
pop
and
adc
xor
sar
jl
inc
pop
lods
cmpsl
and
inc
int3
add
pop
sbb
aam
mov
stos
ds
inc
pop
insl
iret
cmpl
adc
test
daa
call
and
jne
stos
ret
shll
pusha
sbb
mov
pop
add
je
je,pn
aaa
xor
jge
arpl
test
cmp
mov
dec
lock
or
ja
cmp
cmp
arpl
push
subb
test
test
inc
or
test
out
pushl
mov
pop
jae
jno
repnz
cmp
sbb
cmp
repz
xor
loopne
mov
test
je
fwait
popf
and
mov
fbld
adc
pushf
pop
decl
cmp
push
fdivrl
or
pushf
cmp
or
out
mov
ja
popa
xchg
je
mov
cmpsb
cmp
mov
daa
lea
sbb
mov
or
add
test
dec
mov
sub
push
add
lcall
push
xchg
pop
mov
cmp
dec
rclb
popf
jecxz
xor
fmuls
adc
iret
pop
xchg
or
enter
dec
mov
pop
dec
jne
hlt
add
in
add
fcoms
jmp
xor
pop
add
inc
cmp
sbb
adcl
add
jne
or
add
push
and
jp
fists
enter
add
inc
mov
arpl
mov
fwait
sub
pop
push
push
add
out
cmp
int3
popa
or
cld
mov
fcmovu
sbb
lret
ja
sbb
pop
je
pop
sbb
and
and
add
sbb
push
cmpsl
cmp
xchg
or
lcall
push
lods
out
inc
imul
push
jb
jmp
mulb
push
lds
xor
push
cmp
jl
pusha
andl
jp
adc
mov
xor
push
orb
push
inc
jne
lea
testb
jne
clc
push
repz
and
into
add
jge
mov
push
ljmp
pop
pop
cmpsl
adc
es
sub
nop
add
outsb
cmp
add
dec
scas
in
dec
or
test
je
push
enter
pop
cltd
add
scas
mov
daa
shrl
insl
cltd
jmp
je
or
dec
incl
sbb
shll
cmc
lods
add
in
jle
call
mov
or
or
xlat
jns
jne
mov
and
in
shll
arpl
inc
xchg
sbb
mov
xlat
pop
loopne
cmpb
cwtl
shl
jle
xchg
mov
outsb
xor
inc
add
sub
seto
cmp
subl
ljmp
fs
enter
aam
mov
sbb
nop
xchg
add
mov
jbe
cmp
jne
dec
inc
push
sub
jae
js
sbb
popl
jl
and
dec
ljmp
subb
adc
sbb
pusha
jbe
inc
xor
loopne
insl
fcmovne
aam
jl
add
dec
jg
adc
sub
xchg
mov
call
lret
pop
hlt
pusha
sbb
loope
jne
aad
lret
sbb
lock
add
sbb
insl
ret
inc
mov
or
addr16
and
sbbb
pop
inc
xchg
or
pop
test
bound
loope
out
daa
lds
popa
jl
push
ljmp
and
sbb
push
dec
jp
ss
and
dec
sbb
es
cmc
sub
xor
sub
mov
push
pop
js
push
mov
add
cmc
js
inc
dec
push
mov
add
cmp
outsb
push
inc
pop
js
and
mov
call
je
cmp
pop
repz
shll
testb
xchg
insb
testb
int3
outsl
loope
and
sbb
nop
andb
jge
push
jmp
jbe
mov
cwtl
and
icebp
jg
push
cmp
jne
cmpl
sub
pop
adc
daa
mov
rcll
sbb
out
mov
pop
repnz
push
call
call
cmp
lcall
lock
adc
fidivl
and
call
push
cmp
and
out
call
xor
jmp
mov
mov
push
jo
mov
or
mov
inc
sbb
test
pop
shlb
mov
sbb
testl
cmp
push
cld
sub
cs
out
call
push
jne
and
sbb
fldcw
and
mov
adc
mov
fucomp
xor
mov
lods
xorl
dec
mov
leave
inc
jge
loop
sbb
sub
jle
cmp
sbb
sti
cmp
sbb
add
cld
push
cmp
xchg
je
movb
mov
xorb
or
push
cmp
in
outsl
repnz
es
xor
or
fiadds
cld
mov
ficoml
bound
in
pop
arpl
frstor
add
push
mov
push
mov
scas
push
jns
call
clc
dec
ljmp
dec
push
dec
and
ss
sahf
or
push
push
movsb
pusha
jbe
pop
sub
dec
xor
pop
clc
jg
leave
dec
cmp
push
jmp
push
lock
cld
adc
cmc
sbb
inc
iret
mov
xor
sbb
mov
xor
add
jge
addr16
and
push
cltd
sbb
xor
cmp
dec
lds
xchg
and
shlb
push
or
cmp
ficoms
and
mov
jl
cmp
shlb
cmpsb
jne
sub
insl
jg
sbb
or
sbbl
inc
cwtl
rcrb
mov
or
pop
in
cs
dec
bt
sbb
das
xchg
xchg
pop
cmp
cmp
push
cmpsl
mov
push
pop
imul
or
in
jbe
lods
daa
test
in
push
out
inc
dec
ljmp
shll
add
and
jnp
cli
sub
es
pop
pusha
pop
fs
adcb
cmp
mov
jae
gs
pop
stos
push
dec
mov
xor
roll
call
push
out
mov
std
inc
js
push
jne
sub
mov
aas
push
push
pop
jl
pusha
repnz
lret
xchg
adc
sbb
lahf
inc
outsb
or
arpl
xor
mov
pop
push
jl
push
jo
adc
adc
xchg
inc
mov
inc
jne
mov
nop
push
inc
pop
pop
pop
leave
mov
jg
and
faddl
cld
push
or
push
cld
dec
or
daa
js
add
push
fwait
or
rcl
and
stc
cmp
push
or
push
testl
lods
je
inc
pop
add
enter
out
jle
mov
push
push
and
and
inc
cwtl
sub
das
cwtl
adc
ret
sbb
pop
adcb
push
sub
and
xchg
inc
les
add
mov
mov
pop
jbe
or
aaa
mov
and
jl
sub
push
cmp
lea
adc
xor
mov
mov
push
dec
cmp
mov
add
inc
mov
lock
jmp
insl
mov
mov
xchg
mov
jns
pop
push
or
pop
int3
push
or
push
or
push
or
pop
dec
push
mov
adc
aad
decl
or
push
push
pop
pop
fsubr
and
je
adc
mov
push
lret
push
mov
mov
testl
sub
cmp
loope
jb
push
or
shll
jb
xor
cmpb
inc
sbb
je
sti
add
push
mov
mov
lret
iret
and
cmp
sbb
sub
push
or
pop
pop
sbb
test
pop
mov
sbb
mov
xor
loop
jg
xor
inc
inc
dec
loop,pn
pop
inc
test
and
lds
xor
lds
aas
div
inc
test
inc
push
sub
ret
adc
in
cmp
add
or
mov
add
cmp
jb
rol
sbb
cmp
jb
mov
jge
cmp
mov
add
jb
mov
int
cmp
jae
jge
or
pop
inc
add
jbe
test
inc
mov
inc
mov
add
loopne
xchg
in
mov
test
fs
lcall
and
lea
or
mov
sub
jg
inc
and
mull
lahf
mov
in
loopne
cmpsl
lods
loope
imulb
xlat
push
mov
mov
repnz
stc
jge
stos
mov
cmpsb
test
add
cmp
out
add
or
lea
jl
sub
cmpsb
jns
jmp
push
jl
push
insb
inc
jge
pop
adc
inc
mov
mov
lahf
loope
adc
jle
cmp
sbb
mov
lock
mov
cli
inc
cmp
jle
push
adc
inc
xchg
adc
fsubs
shrl
movsb
inc
push
push
rclb
out
out
enter
xchg
add
add
sbb
adc
jge
fwait
push
aam
pushl
inc
aam
cmp
in
push
mov
mov
loop
daa
pop
or
xchg
push
out
or
adc
sub
jnp
cmp
adc
leave
mov
mov
aas
andl
jle
push
sbb
cmp
je
dec
sub
jg
clc
inc
int3
hlt
add
cmp
jo
jg
mov
sub
pop
sbbb
lea
xor
push
sahf
sub
pop
testb
ljmp
cmp
xchg
jp
lock
les
add
or
rorb
xchg
lds
or
push
dec
sub
push
inc
push
dec
xchg
adc
mov
cmpb
pop
popl
sub
jb
daa
les
mov
jbe
lock
push
push
jnp
pop
js
cmp
lds
ret
pop
add
test
pop
cmp
cmp
sub
cmp
and
add
mov
jne
sub
add
and
inc
ljmp
jne
stos
nop
or
icebp
sbb
shl
into
ret
xchg
sbb
fstpl
dec
js
fsubrl
add
cs
mov
jmp
aaa
decb
push
dec
adc
adc
push
clc
jl
daa
outsl
movdqa
push
dec
adc
push
and
fwait
out
sbb
dec
push
pop
outsl
data16
jl
inc
or
jbe
jle
cmp
cmpsl
or
ja
jo
mov
inc
mov
clc
sbb
push
jo
or
mov
sti
cmp
ret
stos
shlb
sub
and
or
dec
mov
or
jne
test
popa
add
sbb
jg,pt
call
adc
icebp
push
push
xchg
hlt
push
call
pop
sub
sub
out
in
add
sub
mov
lock
in
lock
rep
or
cmp
jne
and
adc
mov
in
aad
mov
mov
jo
sti
cli
push
push
ret
jmp
insl
sbb
dec
rep
mov
mov
and
test
xchg
hlt
stos
icebp
jo
adc
sbb
mov
push
icebp
stos
jne
sub
bswap
or
sub
jbe
aas
pop
xchg
sbb
push
or
mov
scas
push
push
dec
xor
push
inc
mov
js
pop
in
dec
mov
add
add
rorb
push
movsl
cwtl
xchg
hlt
pop
je
push
push
sti
ret
aas
inc
mov
and
test
adc
pop
imul
std
pop
pop
pop
popf
aam
sarb
clc
jns
jns
or
test
movsl
shr
std
jns
mov
int
lea
shll
daa
adc
enter
jl
cmp
cld
adc
cmp
pop
add
rol
imul
cltd
test
mov
fcoms
nop
sahf
loope
or
sub
out
dec
aaa
add
pop
rcrl
xorl
mov
iret
dec
rorl
add
test
jge
pop
jmp
jge
or
jns
mov
lock
adc
stc
sub
in
push
adc
push
in
mov
or
adc
mov
and
sbbl
add
dec
addb
sub
es
sbbl
jnp
idivl
sub
aas
push
mov
aaa
jno
je
cwtl
pop
adc
sub
sub
iret
jnp
xchg
or
push
add
sub
dec
pushf
out
call
pop
aad
fldcw
scas
cmp
dec
pop
sub
or
enter
jo
xchg
nop
aam
push
and
pop
shrb
sub
out
fidivrs
mov
jl
sub
sbb
or
push
call
add
mov
mov
push
cmp
or
stos
mov
pusha
ja
test
xor
std
sub
adc
sbb
fimull
xor
inc
dec
jne
jo
sub
sbbl
arpl
dec
jp
nop
ljmp
mov
ja
xor
cmp
pop
out
sbb
mov
adc
lahf
cmp
ja
cmp
and
sbb
push
or
inc
sbb
je
test
ds
add
push
jmp
lock
mov
and
iret
push
jns
mov
das
aad
lret
sub
icebp
xlat
mov
xchg
cs
jno
dec
ljmp
and
and
je
jl
test
pop
jmp
push
dec
daa
or
or
xor
pop
out
sbb
je
mov
shl
sub
test
add
outsb
pop
or
jle
rolb
insl
in
test
je
shr
incb
jb
test
mov
fs
add
xor
mov
lea
inc
push
imul
std
test
inc
xchg
cld
cmpsl
imul
mov
unpcklps
popa
fsubr
mov
cmp
push
xchg
mov
sub
lea
test
jbe
sbb
fisttpl
ds
jae
mov
js
adc
push
cmp
jb
inc
lea
pop
iret
out
sbb
sti
lea
sub
sar
push
push
or
ljmp
into
in
loop,pn
mov
add
xor
adc
pop
pusha
fistpll
push
inc
dec
inc
jnp
dec
sbbl
push
pop
pop
ret
andl
and
mov
insl
aam
loopne
xlat
and
adc
outsb
enter
jmp
add
sub
pop
xchg
daa
dec
mov
add
add
inc
and
packssdw
sbb
lahf
dec
sbb
xor
and
adc
icebp
je
mov
shrb
sub
mov
lods
xor
in
pop
test
pushf
or
xchg
cmp
je
jle
addb
lret
jg
push
movzwl
sub
testb
add
fwait
mov
mov
or
push
call
data16
sub
push
push
sbbl
xchg
jne
lahf
pop
jle
lods
cmp
or
pop
dec
clc
pop
in
cmpb
pop
das
or
adc
xor
jne
jno
pop
call
jne
mov
test
fadds
dec
ficompl
jne
push
pop
cmp
ja
fildll
pop
jbe
lea
insb
sbb
adc
add
addb
jae
insb
or
jb
hlt
xor
jbe
add
and
mov
dec
test
jne
sbb
push
test
pop
mov
subb
scas
sub
or
adc
sub
sbb
scas
test
cmp
cmp
subb
push
inc
jnp
push
jbe
or
cmpsb
add
and
fisubs
push
mov
pop
test
mov
adc
jb
ljmp
cmp
call
push
dec
xor
ret
adc
popa
je
or
dec
jmp
out
pop
insb
pop
and
fisubl
call
orb
imul
or
add
or
insb
fcomps
or
xor
data16
pop
inc
mov
mov
jle
sti
fbstp
loope
or
lea
stos
add
inc
adc
sub
mov
mov
inc
xor
idiv
dec
jne
lea
daa
or
leave
fwait
popa
call
mov
xchg
add
and
jo
mov
lea
scas
inc
pop
mov
mov
and
jbe
lea
out
add
add
cmp
ja
movsl
jb
or
lea
lgs
mov
inc
in
fcomp
cmp
cmp
fdivr
ficoml
cli
loopne
rcll
addr16
cmp
mov
sub
push
cmp
jnp
scas
notb
add
cmp
jbe
imul
push
mov
sbb
lods
jmp
and
je
and
xor
nop
mov
adc
jp
roll
mov
xchg
fidivs
mov
mov
or
rorb
jmp
mov
lret
add
cmpsb
cli
and
ljmp
dec
fists
cmp
jb
push
loopne
push
pusha
test
lret
mov
adc
je
cmpl
inc
loopne
ljmp
enter
or
sarb
popf
ss
and
cltd
fidivrs
mov
inc
push
inc
cld
and
adc
or
inc
inc
adc
lds
push
cmp
lock
xor
push
movl
cmp
push
popa
push
outsb
fwait
insb
jmp
inc
std
jne
rol
leave
mov
fldt
mov
mov
jmp
ja
clc
call
loope
loopne
sub
mov
stos
aam
mov
testb
mov
fadds
das
and
mov
mov
mov
mov
xor
cmp
mov
je
fs
ljmp
out
push
and
std
bound
daa
xor
pop
cmc
mov
in
inc
jae
cmp
lock
movsb
js
movsb
iret
roll
out
mov
test
jae
pop
lods
rcll
leave
inc
mov
rorb
shr
mov
jmp
push
into
sub
std
std
xchg
outsb
add
jmp
inc
subb
mov
inc
cmp
jbe
ljmp
push
adc
movb
add
jb
mov
xor
inc
adc
jo
inc
shrl
out
mov
lea
mov
inc
mov
inc
inc
inc
dec
jne
mov
inc
and
ja
inc
daa
cmp
add
shll
in
insl
mov
jo
adc
mov
or
inc
dec
jne
fisubrl
movsb
mov
add
cwtl
gs
jnp
inc
mov
jmp
cmp
or
insb
jp
icebp
adc
lock
loopne
adc
inc
add
pop
mov
mov
loope
jp
loop
mov
test
dec
and
ret
sub
sahf
loop
cli
lahf
sbb
sti
rep
andl
pop
jno
pop
nopl
cmp
leave
inc
push
adc
cmpsb
cmp
push
cmp
mov
jo
insb
ljmp
xor
std
and
sbb
push
or
sbb
loope
call
enter
clc
jle
lret
or
inc
jmp
xor
inc
sbb
decb
mov
add
sbb
ss
out
add
inc
jo
insl
adc
pop
sbb
sub
in
sub
xor
cmp
lret
push
rcll
clc
lret
shll
fstpt
in
popa
adc
and
in
pop
movl
out
push
sbb
push
cli
outsl
cmp
dec
jnp
push
cmp
jne
sbb
pop
adc
mov
cmp
adc
imul
sbb
mov
sbb
sub
lret
xchg
int3
lret
sub
and
rcrb
cwtl
shlb
outsb
lea
aas
test
pusha
mov
cwtl
mov
jne
push
xor
push
cmpsb
push
push
cmpl
add
fs
pop
insb
add
adc
add
decl
jne
sbb
out
xor
or
xchg
mov
frstor
or
mov
lea
adc
push
cmp
mov
aaa
cmpl
lea
push
pop
ret
shld
repz
movsl
sub
or
loopne
xor
adc
sub
aam
dec
xor
cmp
je
push
mov
dec
pop
test
loop
push
ret
fiadds
in
cmp
test
dec
hlt
jbe
outsb
inc
mov
enter
ret
es
dec
jle
sbb
jo
dec
pop
xor
loope
lea
loopne
dec
nop
mov
and
roll
jnp
lock
arpl
sar
jge
adc
dec
aad
iret
mov
addb
xchg
jge
mov
push
mov
dec
mov
sub
shll
enter
clc
fimull
loopne
pop
cltd
cmp
inc
nop
and
bound
xor
and
pop
add
push
stos
cmpsl
lahf
push
imul
lods
pop
or
push
insb
xchg
mov
cmp
je
out
jl
push
je
mov
push
push
xchg
cmpsb
xor
test
dec
xor
aas
pop
pushf
inc
push
sti
pop
mov
pusha
push
pop
push
cmp
cmpsl
pop
or
aas
add
fistpl
dec
jmp
sub
push
mov
push
mov
jnp
or
jns
mov
cmp
mov
push
adc
add
sub
mov
adc
sub
sub
fsubr
push
and
and
aaa
loopne
push
loop
xor
dec
ds
hlt
rorb
add
pop
pop
fwait
std
out
shlb
mov
mov
jmp
adc
outsl
jo
repnz
fstl
mov
popf
adc
adc
mov
int
rclb
sub
faddl
fcomps
push
fimuls
dec
xchg
xor
mov
jne
push
mov
jge
aaa
xor
add
xor
ds
sbb
dec
insb
jl
imul
rclb
or
jl
cmp
jg
inc
test
xor
les
movb
xor
jne
imul
in
pop
inc
jo
jge
aas
sbb
sub
sub
in
mov
movsbl
fadds
loopne
ja
pop
adc
aas
lods
or
xor
inc
jne
xor
and
adc
int
stos
mov
add
adc
cli
jl
jns
dec
or
inc
inc
clc
in
fwait
hlt
or
push
cltd
pop
idiv
pop
pop
pop
lea
mov
or
mov
outsb
das
sub
mov
sub
leave
mov
jg
pop
mov
inc
xor
jmp
ljmp
rorb
lock
cltd
es
imul
lea
orl
dec
js
sub
add
decl
push
lea
jmp
add
loop
and
push
and
or
jo
repz
push
or
inc
sub
leave
roll
jmp
icebp
xchg
sbb
xor
jecxz
adc
jmp
dec
and
and
leave
call
push
push
and
add
jecxz
inc
or
lods
cmpsl
pop
out
cs
fildll
or
xor
cmp
cld
popf
add
ltr
mov
or
sbb
sub
incl
mov
sub
push
lock
hlt
aam
test
fbstp
inc
add
jbe
cld
add
adc
fucomp
test
mov
xor
std
xchg
mov
or
lret
in
pminsw
loopne
testb
adc
out
push
jmp
pop
fucomi
cmp
push
push
push
push
loop
xor
enter
mov
repnz
dec
dec
xchg
mov
nop
xor
dec
mov
negl
sbb
pushf
popf
push
outsl
cli
jmp
cmp
sahf
pop
push
pop
mov
or
jge
push
pop
mov
add
or
jecxz
movsb
ja
jnp
daa
lds
pop
loop
push
das
stos
dec
mov
mov
jle
jge
cmp
jl
cmp
jg
or
mov
push
jle
jge
adc
insl
mov
mov
repnz
jle
aad
push
daa
imul
jle
insb
sub
or
jmp
jne
es
push
ret
mov
test
sbb
popa
inc
add
push
sub
and
sub
adc
cmp
or
cmp
add
shll
xor
sub
xchg
jo
or
lea
xor
je
subl
xchg
xor
push
cmp
pushf
movsl
xor
test
or
push
scas
sbb
arpl
je
mov
ret
insl
cmpb
jg
jl
inc
push
bnd
jle
push
pop
xor
jg
or
fbstp
es
xchg
ja
push
push
push
push
push
jmp
add
lea
scas
inc
adc
push
sub
je
and
inc
add
ficoms
lea
jmp
out
push
lea
shlb
sbb
sbb
push
mov
and
xor
sub
mov
add
jb
inc
mov
or
loopne
or
mov
mov
dec
or
inc
mov
ja
scas
outsl
and
mov
sti
popa
popa
push
jne
lods
xor
jns
lods
and
xchg
or
ja
push
inc
xorl
shlb
adc
cltd
xor
int3
outsl
imul
mov
filds
jge
ss
sbb
jl
sbb
std
psubusw
dec
adc
add
test
ret
cs
xor
xor
add
cltd
cld
test
push
stc
cmp
ljmp
icebp
fnstenv
inc
push
in
push
dec
inc
inc
or
sub
pop
and
dec
cmp
add
cmp
fstp
mov
or
add
or
pop
sarb
sti
or
mov
pop
inc
jge
push
push
push
add
scas
mov
sbb
sarb
loopne
fdiv
fiaddl
mov
ss
xlat
or
sbb
jne
sbb
jg
mov
cmp
inc
push
shr
inc
push
xor
jmp
std
or
rcr
shr
rcr
or
lods
lock
jp
jle
xor
cmp
or
cmp
int
dec
cmpsb
dec
cwtl
out
dec
pop
fsub
addl
sbb
push
dec
xchg
lods
bound
iret
fstl
mov
rol
sahf
sbb
pop
pop
add
neg
push
or
ret
jns
outsb
pop
add
mov
popa
enter
sti
sbb
push
push
jnp
f2xm1
jbe
sub
adc
push
or
lcall
pop
outsb
aas
mov
ret
cmpl
or
dec
ret
mov
rol
fcompl
adc
adc
popa
jb
adc
pop
cs
xchg
ror
repz
daa
xchg
or
test
sbb
and
sub
and
or
and
add
data16
imul
lock
cmp
push
xchg
xchg
out
or
in
pop
setne
sub
jmp
ja
pop
hlt
inc
neg
pop
mov
sub
xor
adc
idiv
rorb
xchg
mov
adc
out
mov
push
popf
cmp
lock
int3
push
imul
push
mov
ds
push
test
push
jl
pusha
jb
cmc
push
and
addps
xchg
ja
clc
into
push
test
inc
rorl
in
fistl
fdivl
push
mov
repz
add
cmp
cs
cmovb
pop
mov
mov
cld
adc
repnz
hlt
pop
adc
hlt
scas
or
jo
leave
fnstenv
sbb
fs
xor
cmp
xor
lds
inc
adc
sub
fwait
test
lea
fdivrs
xchg
movsb
push
in
sub
fdiv
ja
shrb
in
sub
push
cmp
jb
mov
sti
pop
mov
je
sbb
ss
jp
aam
lods
std
mov
call
test
mov
stc
in
cmp
cmpsb
cmpsb
ret
fcompl
ret
mov
lahf
push
fcomip
mov
push
push
push
adc
sub
lds
arpl
xchg
or
dec
push
test
cmp
addl
mov
sbb
stos
mov
in
in
jbe
outsl
push
sbb
pop
or
gs
cmp
adc
xor
mov
pop
or
cs
xchg
jb
sbb
ffree
inc
jg
jae
jno
push
cltd
inc
push
test
cmpsb
or
jo
xor
sbb
sti
jecxz
cmp
cld
adc
lock
fdivrs
mov
mov
scas
adc
leave
mov
add
add
or
mov
movsb
mov
or
lds
enter
jbe
sbb
push
mov
mov
mov
enter
addb
jno
repnz
jb
push
clc
adcl
xor
pop
popf
imulb
jbe
dec
push
rclb
inc
fiaddl
fldenv
push
mov
mov
and
sti
in
xchg
sti
addl
lahf
stos
inc
inc
sub
lods
push
adc
xor
testl
push
add
test
push
leave
das
mov
call
orl
icebp
inc
mov
mov
imul
xchg
inc
in
inc
push
out
imul
ret
add
lcall
fs
sahf
mov
jbe
test
sub
test
shrb
cmp
dec
lea
cwtl
mov
push
les
call
fldt
or
adc
add
cmp
jge
imul
mov
andl
cmp
insl
or
das
mov
and
fs
std
fmull
nop
pop
orl
and
sub
sbbb
popl
push
cmp
mov
dec
jbe
dec
rcrl
lock
mov
leave
push
sbb
pusha
mov
dec
bound
addl
xchg
ljmp
and
mov
mov
add
and
and
xor
adc
orb
stc
push
jno
ret
call
push
fmull
cmp
mov
enter
mov
mov
xor
in
loopne
sbb
inc
in
cmp
jbe
sbb
loopne
clc
ljmp
pusha
imul
cltd
push
test
dec
adcl
popa
jmp
popa
inc
call
je
into
push
pop
xor
push
ficoms
sbb
push
add
movl
xchg
out
adc
lahf
lods
and
xchg
inc
daa
mov
outsb
jae
xor
ret
dec
decl
and
add
sbb
sahf
sub
mov
adc
xor
movl
add
orl
mov
aam
cmpl
pusha
xor
and
or
cmp
pop
cld
or
mov
aaa
insb
jb
push
sahf
ret
push
inc
mov
roll
loop
push
inc
incl
mov
rcr
mov
cmp
je
or
jne
xchg
add
inc
lds
sbb
mov
jmp
lcall
dec
jmp
xor
inc
or
xorb
xchg
inc
addl
inc
inc
pop
push
and
sub
xchg
mov
sarb
cmpb
or
data16
lock
push
mov
xchg
jmp
pop
loopne
rcl
pop
sbb
icebp
xchg
xchg
arpl
inc
or
je
shr
sahf
loop
movsbl
pop
and
or
or
mov
out
cwtl
into
inc
add
xor
cmp
leave
pop
add
adc
cli
pop
push
orl
inc
stc
add
fimull
push
dec
aaa
lcall
dec
inc
dec
mov
test
test
cmp
cmp
mov
jge
push
lea
incb
stos
cmp
aam
clc
pop
hlt
stc
pushl
dec
shl
lea
cmp
jb
jne
add
loope
fs
jge
mov
push
orl
push
ljmp
push
add
jle
pop
pusha
inc
cmpsl
jno
ljmp
jne
cmp
cmp
and
xchg
jo
xlat
sub
outsl
ja
mov
jmp
subl
rcl
sub
std
jg
mov
jne
inc
test
je
inc
inc
sub
sbb
repnz
add
push
sar
inc
push
push
adc
push
aam
jb
sub
cmp
jnp
inc
cmpsb
dec
adc
sub
mov
and
cld
pushf
pusha
push
xchg
sbb
push
addb
or
cmp
inc
aam
or
sub
out
int
inc
adc
pop
jl
insl
sub
shll
mov
pushf
incl
mov
push
push
adc
push
adc
inc
dec
shrb
dec
pop
jl
jle
clc
mov
or
inc
mov
xor
mov
rep
or
or
or
push
and
and
shlb
add
jge
inc
jo
adc
inc
shlb
test
cmp
es
into
add
jl
mov
add
or
sbb
push
aas
xor
rcrb
pop
pop
repnz
lea
xadd
and
adc
jmp
ret
mov
cmp
cmpsl
jno
sahf
mov
rolb
inc
insl
call
int
or
je
mov
fmull
add
add
add
cmc
and
repnz
add
and
shl
add
mov
mov
push
push
subps
add
outsl
jns
fiaddl
outsb
push
inc
adcl
jl
push
mov
xorl
sar
int
in
push
orb
jmp
xchg
adcl
js
testb
dec
mov
xchg
or
inc
lcall
out
and
aas
push
aaa
xor
ds
loop
add
jmp
lret
or
cmp
mov
movl
add
add
mov
jmp
test
shrl
pop
notb
mov
mov
mov
call
push
jp
jae
mov
jmp
mov
icebp
testb
inc
and
pusha
test
popf
or
test
outsl
push
lods
and
les
outsb
inc
mov
mov
inc
ja
lahf
testb
insb
push
lea
loopne
or
pop
cld
dec
cmp
jge
stos
xchg
add
bound
pop
or
ret
push
shll
and
test
xor
aaa
pop
gs
or
xorb
pop
cmpsb
add
inc
sbb
sub
or
push
call
jbe
popa
sbb
sbbb
xor
xchg
mov
or
xlat
adc
xlat
sub
push
scas
lret
lahf
jne
jg
mov
ljmp
js
push
add
push
cmp
cmp
adc
mov
leave
into
ja
xor
sub
and
mov
xchg
jge
sub
push
inc
and
pop
or
sub
pop
or
adc
rorl
jl
jo
dec
or
cmp
lock
mov
ret
cmp
pop
adc
lret
test
mov
aas
push
push
mov
hlt
out
mov
test
je
dec
jmp
hlt
not
mov
frstor
or
lcall
cmp
inc
pop
dec
lock
cmp
dec
xor
and
out
or
jmp
test
adc
fsts
mov
mov
not
push
rcrl
arpl
pop
mov
out
adc
sbb
lret
cmp
orb
lret
sbb
dec
sub
out
popl
insb
mov
fs
mov
and
movl
mov
mov
pusha
or
xlat
push
push
adc
sbb
jb
fsubrl
imul
push
test
mov
push
mov
cmpsl
test
xchg
pop
dec
ret
lea
sub
dec
inc
cld
sub
mov
xlat
fwait
xchg
jmp
mov
push
xchg
pop
lods
push
hlt
insl
xor
pusha
inc
lods
sarb
ds
mov
cmc
insb
ds
push
mov
push
std
movl
and
shl
push
arpl
add
xchg
testb
push
sbb
push
mov
adc
clc
xchg
out
fcoms
shrl
scas
pop
push
cmp
cltd
mov
testl
inc
add
cmpsb
aas
out
add
jns
xchg
pop
aam
xchg
inc
test
rolb
xor
call
test
xchg
bound
jl
icebp
cmp
mov
sbb
jno,pt
mov
or
insb
loope
imul
mov
pop
push
imul
cs
in
mov
jmp
pusha
sbb
add
outsl
inc
sub
add
dec
sub
adc
sub
fstl
mov
pop
arpl
ljmp
cmp
pop
push
out
dec
and
xchg
sub
inc
cld
inc
push
mov
push
lret
lods
or
adc
add
mov
ret
xchg
jae
xor
nop
sub
je
and
xor
jne
mov
fs
push
lods
cmp
or
xlat
inc
mov
push
adc
dec
add
addb
test
pop
inc
add
mov
enter
call
push
xor
xchg
cltd
repz
mov
inc
stc
cmp
xor
jle
inc
pop
shl
pop
cmp
add
cmc
pop
add
inc
cmp
sarl
cmpb
mov
jbe
test
or
insl
adc
int
inc
aam
jno
push
jp
mov
test
jbe
and
lea
or
fld
movsb
int3
pushl
inc
add
cmp
jb
in
enter
lahf
lock
or
and
inc
inc
andl
pop
mov
cs
xchg
hlt
mov
sarl
dec
sub
aaa
mov
shr
not
ljmp
jb
orb
xchg
add
lahf
imul
or
jle
sar
adc
push
push
push
push
push
pop
xchg
pop
or
push
xor
pop
sub
sbb
xchg
cli
in
dec
jmp
cs
pop
mov
or
pop
dec
push
fisttpll
inc
gs
movsl
ja
mov
popl
popf
divl
pop
or
ds
negl
pushl
dec
movups
jo
push
pop
dec
inc
and
sbb
frndint
add
sub
mov
loop
mov
cmp
sbb
push
rcrl
ljmp
rorl
inc
cmp
xor
out
pop
jp
pop
pop
neg
xchg
bswap
insb
and
and
push
sbb
dec
int3
pusha
sbb
imul
jmp
push
adc
or
push
jne
call
inc
imul
sub
je
inc
inc
cld
shr
mov
imul
inc
xchg
std
mov
and
dec
or
shl
sub
stos
shll
push
lea
adc
cld
add
push
cld
rclb
mov
fcomip
pop
or
ret
sar
dec
sub
mov
sarb
pop
mov
inc
mov
subb
jae
lret
lea
shll
pop
mov
inc
decb
jne
and
jmp
lea
xor
xchg
js
mov
add
sub
rclb
std
cltd
ds
or
mov
pusha
sbb
pop
clc
and
pop
push
sbb
into
xchg
or
dec
lea
inc
and
sti
add
mov
dec
pop
addr16
jbe
mov
mov
imul
pop
add
cmp
je
inc
jno
jno
jg
fnstcw
mov
shr
not
and
push
mov
jmp
lea
addr16
das
mov
xor
push
addb
add
push
xchg
cltd
or
bound
or
addr16
cld
negb
lock
mov
pop
or
cmpsb
sarb
mov
rcr
loope
mov
inc
mov
mov
push
js
loope
xchg
lods
push
or
pop
sbb
inc
dec
or
jmp
dec
adc
push
mov
mov
xchg
mov
sbb
call
decl
int
sbb
mov
dec
rorb
std
shl
add
scas
jp
adc
sti
divb
or
sbb
pop
adc
andl
inc
adc
dec
adc
add
and
js
gs
out
push
xchg
in
pop
mov
lret
mov
sbb
adc
aam
fidivrs
in
push
lea
mov
cmc
jns
ret
push
cmp
inc
jbe
insl
or
mov
jecxz
scas
xchg
popf
lret
add
lock
mov
pushf
lock
rclb
adc
add
push
outsl
mov
xchg
inc
mov
addl
xor
les
or
fisubrl
mov
mov
push
and
adc
push
sub
sbb
pushf
mov
fwait
orl
ds
incl
adc
andb
pop
test
adc
sbb
je
movb
inc
in
outsl
adc
mov
incb
pop
mov
add
inc
push
push
or
dec
jne
cmp
adc
test
pop
or
or
jns
pop
or
xchg
add
cmp
ja
sub
adc
or
inc
cmpl
in
in
lea
push
out
mov
inc
cld
lock
call
xor
iret
dec
jne
icebp
add
mov
fstl
dec
jb
adc
fs
inc
call
mov
inc
mov
ljmp
push
mov
jne
or
lds
ljmp
sarl
adc
jne
stc
add
movsb
xlat
sub
pop
shr
popf
rolb
sub
dec
cld
and
mov
sarb
icebp
stos
mov
and
jbe
jno
out
jle
int3
inc
jp
xlat
insl
fstps
cmp
hlt
sar
shlb
push
mov
int3
push
pop
movsb
sub
and
pop
inc
sub
data16
sbb
clc
rolb
jge
jb
es
add
cmp
mov
dec
or
push
add
push
jns
into
add
mov
rclb
incl
mov
cmpsl
cmc
add
fstpl
scas
dec
jo
sbb
jbe
pop
jg
or
dec
mov
pop
pop
xor
cmpsl
imul
nop
dec
rcrl
iret
jmp
data16
and
js
mov
imul
push
xor
add
push
pusha
out
cld
mov
cmp
sub
pop
out
adc
jmp
mov
mov
inc
dec
insb
pop
xor
push
sar
dec
ret
cmp
movsb
pop
testb
int3
sbb
ret
orl
dec
mov
cmp
je
fisttps
or
dec
push
fnop
cmp
fnstenv
dec
shrl
mov
loope
jo
mov
or
mov
mov
faddl
imul
dec
in
jb
into
mov
cmp
jns
rclb
mov
cmpsb
add
add
push
cmpb
and
out
push
mov
and
push
lock
dec
push
push
push
aam
mov
out
adc
jmp
in
add
popf
push
imulb
mov
push
nop
cmp
and
in
sub
or
cmp
jb
push
jne
mov
sbb
jne
jmp
lcall
js
mov
xor
aaa
arpl
adc
sub
fsubs
pop
sbb
add
pop
into
jb
add
add
faddl
mov
cmp
je
mov
push
mov
cmp
ret
ja
jl
and
inc
cmp
pop
iret
mov
andb
cwtl
jno
mov
rclb
jp
mov
out
repz
mov
jle
mov
adc
outsb
mov
sahf
jns
inc
test
inc
push
pushf
mov
sub
mov
sbb
jp
inc
push
test
jo
push
xchg
sbb
iret
push
dec
cmp
in
and
mov
decb
jne
cwtl
popf
pop
jo
repnz
jmp
jp
mov
adc
and
jne
aaa
pop
sbb
dec
push
and
shll
jp
mov
inc
call
push
or
das
pop
pusha
mov
sub
jge
dec
pop
inc
mov
push
pop
add
rorl
cmp
or
add
adc
inc
or
xchg
jge
push
out
or
sub
stos
incb
adc
lock
popf
aad
shrl
mov
lea
jo
sarb
sub
cmp
cmp
pop
add
and
inc
add
cmp
test
dec
adc
stos
ret
pop
rorb
filds
push
sbb
cmp
adc
aaa
sub
cmp
pop
inc
or
loopne
sbb
es
mov
cltd
loopne
jo
or
add
add
pop
jne
cmp
aaa
loope
repz
adc
pop
imul
aas
cmc
add
je
jae
mov
mov
sbb
jae
rolb
cltd
movb
shll
in
pop
mov
adcl
lahf
popf
cwtl
aam
push
js
sub
testb
jae
loope
or
insl
xchg
daa
cmp
mov
jb
xor
xchg
sbb
or
orl
das
sti
add
movsb
ss
jb
and
dec
out
mov
sub
and
xchg
adc
mov
shlb
das
fstpl
jne
push
sub
sub
pop
lds
inc
lods
xor
and
loopne
sub
xor
add
mov
popf
jbe
aas
stos
mov
mov
jle
inc
push
xor
push
dec
loope
sbb
push
add
stos
or
cmp
leave
adc
add
imul
sub
sbb
or
ret
loopne
popf
mov
jmp
cmp
push
xchg
test
adc
adc
cmp
or
out
push
movsb
adc
fistl
or
pop
pop
test
fxch
pop
dec
push
rolb
addb
fisttpll
mov
adc
cli
sub
pusha
mov
cmp
push
sbb
adc
push
push
adc
push
xchg
xor
mov
inc
jmp
pop
dec
pop
push
out
movl
dec
adc
dec
cmp
xchg
mov
pop
inc
cmp
jne
or
inc
arpl
jge
inc
jecxz
jne
out
pop
je
lods
mov
sbb
out
test
xchg
icebp
clts
rolb
xor
repz
sub
adc
pusha
movsl
clts
pop
add
adc
test
xor
jmp
scas
clc
jle
push
push
pop
div
mov
aas
or
sub
adc
ja
mov
or
pop
insb
cmpsb
sbb
test
push
or
repz
cmp
inc
push
jo
ret
push
fiadds
add
push
movsl
je
hlt
mov
sbb
xor
xlat
pop
jecxz
lret
daa
and
add
adc
sbb
inc
or
je
xchg
sbb
mov
nop
add
cmpsl
adc
cmp
xchg
dec
subb
jb
inc
jge
cmp
mov
hlt
cmp
je
movl
sbb
sbb
or
inc
xchg
inc
xor
movl
add
jmp
adc
and
sbb
scas
bound
pop
jbe
pusha
sub
adc
xchg
cmpsb
loop
cmp
or
pusha
push
sub
or
pusha
lods
or
fcoml
aam
in
sti
outsb
cmp
fstpt
cmp
ljmp
lock
sbb
aam
sub
push
sub
dec
pop
gs
mov
sarl
push
mov
test
ja
enter
sti
je
inc
enter
pop
xbegin
ret
dec
in
lds
sbb
hlt
jecxz
push
mov
lcall
push
lock
and
sub
mov
testl
mulb
jl
ljmp
jecxz
cltd
dec
lock
adc
incl
clc
orl
sbb
lea
push
cmpsb
adc
add
adc
mov
fstpt
push
push
mov
push
shll
aad
mov
int3
cmp
aad
xor
aam
push
xlat
push
rorb
movsb
int3
jl
int
aad
adc
jg
cmp
repnz
add
add
add
push
cltd
in
pop
sbb
adc
pop
cltd
in
sbb
push
push
push
pop
sbb
ja
ja
insb
das
movsb
divb
aas
push
push
out
inc
cwtl
ret
push
in
jnp
adc
movb
sbb
add
jmp
sbb
pop
sbb
mov
adc
and
mov
jbe
faddl
adc
cltd
inc
sbb
pop
cmp
and
and
sbb
and
cmp
push
in
repz
and
cmp
fwait
pop
dec
sbb
fldt
sub
leave
leave
dec
or
adc
mov
enter
and
and
daa
daa
daa
daa
sub
xor
xor
daa
cmp
inc
jb
cmp
inc
inc
cmovs
jb
push
push
pop
add
pushf
pusha
fs
pushf
jo
js
fidivl
adc
cltd
fs
dec
mov
xchg
cwtl
pushf
movsb
dec
es
mov
jecxz
mov
jge
dec
xor
inc
add
and
add
push
push
stc
ss
je
pop
and
fwait
nop
jle,pn
or
pop
adc
adc
dec
dec
pusha
adc
sbb
test
sbb
insb
xor
rorb
and
cmpsb
push
movsb
test
andb
insb
pop
ret
adc
sub
jne
js
dec
inc
es
ret
cmp
les
sbb
dec
jne
out
jb
xor
jle
sbb
xchg
push
or
add
inc
fsubs
add
scas
ret
adcb
stos
add
jmp
rep
cmpsb
dec
inc
jp,pn
push
xor
dec
mov
dec
leave
and
mov
fwait
mov
jne
aad
out
stos
rcrb
aad
sahf
push
jmp
imul
adc
roll
or
add
jne
mov
aam
arpl
jmp
sbb
imul
outsb
out
jns
rcr
incb
fmull
push
mov
pop
cmp
insb
adc
imul
inc
xor
mov
icebp
or
lea
repz
mov
jns
xor
loopne
dec
add
shrb
push
pusha
jmp
push
out
cmp
jl
mov
ret
ret
je
xchg
and
fwait
jbe
sbb
cmpb
xor
cmp
jl
js
xor
mov
xchg
rorl
inc
push
push
lea
jmp
fs
ljmp
sub
fimuls
jb
add
fdivr
sub
outsb
jae
insb
imul
xor
cmp
in
pop
or
add
jo
divb
jno
or
and
xchg
jb
out
jne
js
dec
or
add
das
aaa
pushl
dec
xchg
xor
cli
xor
sti
or
je
mov
out
mov
shll
fs
add
sbb
lret
mov
cmpl
outsl
inc
mov
pusha
pushl
mov
mov
int
mov
mov
xchg
jle
sub
je
or
je
dec
je
aaa
jnp
and
xchg
in
ja
xor
mov
mov
cmp
adcl
pop
pop
xchg
push
jne
movsb
stos
xchg
inc
and
in
or
cld
scas
xchg
mov
bound
and
fildll
mov
mov
aam
inc
pusha
jne,pn
je
mov
movl
xchg
je
fcoml
adc
ficompl
lret
jge
adc
pop
xchg
mov
adc
fsubr
fisttpl
add
xchg
outsl
adc
push
dec
add
insb
mov
push
int3
addb
fcoml
adc
xor
sub
adc
fs
jno
stos
sub
inc
add
sbb
push
cmp
or
and
jmp
rorb
nop
add
pop
sbbl
out
fdivs
inc
insl
mov
pop
dec
and
or
xchg
sub
ret
dec
jns
sub
push
adc
push
jmp
cmp
mov
lea
sub
jmp
pop
pop
mov
push
aam
push
sarl
pusha
in
scas
xor
or
cmp
enter
and
push
daa
sub
cmc
add
adc
sbb
or
xchg
cmpsb
or
add
push
notb
push
jmp
orl
pop
shlb
scas
xor
and
ds
adc
pop
cmp
jbe
imul
repnz
das
mov
lea
adc
inc
scas
sbb
jmp
jl
lods
mov
sbbb
mov
cld
jmp
or
scas
aad
adc
test
xor
mov
fidivrl
rcll
sbb
std
mov
and
mov
xchg
rolb
stos
and
lea
ljmp
std
pop
xor
jbe
push
gs
movsl
pop
les
in
nop
ss
or
jae
push
cwtl
lods
adc
icebp
mov
sbb
into
or
cld
ja
orl
dec
out
cmp
mov
aad
es
cmp
outsb
popa
addr16
or
and
push
aas
shll
pop
mov
dec
cmp
out
xor
test
add
xlat
mov
test
mov
pop
cwtl
and
jl
or
int3
icebp
dec
push
xor
aad
sti
mov
fdivrl
movsb
mov
sbb
and
add
cli
xchg
pop
lods
imul
pop
adc
and
cmp
add
dec
loope
or
push
scas
xor
sti
inc
daa
mov
dec
push
aaa
out
jo
mov
ret
enter
lahf
pushf
jnp
aas
xor
pushf
mov
dec
es
hlt
push
sbb
adc
jno
add
loopne
adc
adc
jne
pop
popa
fildl
or
adc
fwait
ljmp
push
xchg
push
mov
ds
xchg
sub
mov
js
insb
jae
fsubr
ss
pop
ja
dec
je
nop
or
dec
push
jmp
adc
lds
mov
push
cmp
sbb
int
in
jo
pop
and
push
adc
fstpl
cmc
inc
arpl
cmp
jbe
mov
ds
pushf
or
pop
push
icebp
mov
dec
popf
out
pop
jmp
fidivs
and
test
cmp
and
adc
mov
pusha
sbb
sbb
or
or
xor
or
insl
mov
push
pop
xchg
imul
fsubrl
mov
jo
add
cs
jne
imul
or
and
pop
pusha
fs
out
pop
xchg
add
in
dec
and
inc
call
and
test
cmp
inc
dec
jle
cmp
sub
inc
ss
je
imul
inc
xchg
mov
ret
adc
jg
cwtl
add
negb
fmuls
test
into
in
push
push
popf
divl
pop
jg
int3
sbb
outsb
sbb
inc
adc
mov
cmpsb
jmp
ficompl
jae
inc
add
add
inc
divb
pushf
mov
sub
and
pop
imul
pop
adc
add
outsb
mov
shlb
push
adc
or
enter
mov
leave
or
out
inc
inc
mov
pusha
xchg
jecxz
or
jno
adcl
outsb
out
pop
adc
aad
shlb
cs
mov
in
rorb
cmp
rorb
je
mov
push
or
jne
stc
pop
add
jle
mov
xchg
xchg
repnz
sub
push
sahf
mov
lock
rorb
outsb
arpl
dec
lock
mov
inc
xchg
or
pop
inc
rclb
mov
stos
jg
adc
mov
daa
sbb
fcoml
add
or
addr16
dec
decb
ror
sub
sbb
push
lods
push
mov
cmpsb
jle
subl
jl
pop
sbb
push
jle
inc
ret
adc
xchg
aas
xor
decb
cld
inc
inc
and
sbb
cmp
cmp
jne
sub
add
mov
xchg
into
mov
cmp
sub
add
mov
pop
cmp
je
cmp
lret
sub
adc
or
adc
inc
dec
add
add
lds
sbb
aaa
add
test
sahf
movsbl
sub
jmp
outsl
and
sbb
sarl
lret
sub
cmp
cs
adc
add
cmp
jae
or
fldt
enter
cmp
jbe
test
and
outsl
adc
add
subb
sbb
add
adc
mov
sar
orl
xor
sbb
lcall
pop
xchg
sbb
aam
inc
xor
mov
jg
ljmp
into
jbe
jns
lcallw
hlt
mov
test
push
int
add
add
jle
push
or
add
add
aad
inc
push
xchg
adc
jae
arpl
mov
shrb
adc
jnp
iret
dec
and
mov
sub
or
sub
les
push
push
es
push
push
adc
add
cmc
xchg
push
cld
and
mov
dec
pushl
dec
data16
dec
popf
cmp
dec
test
or
je
lods
fisubrl
jne
rol
clc
mov
and
inc
jmp
push
lock
or
xlat
iret
or
adc
push
iret
sbb
xchg
imul
xor
push
bound
pop
imul
pop
scas
fimull
cmpsb
and
xchg
jmp
push
sbb
daa
adc
je
ret
sarl
mov
fcoms
cltd
jg
fdivr
adc
adc
mov
mov
movb
je
sarl
or
pop
sub
push
adc
ja
add
xor
add
test
push
in
push
push
sbb
popa
shr
jno
pushf
outsl
pop
pop
mov
adc
dec
stc
cli
and
roll
test
push
bound
leave
je
cli
push
mov
inc
mov
mov
into
es
add
je
mov
jg
decl
push
cmp
ja
add
cmp
adc
cmp
jne
mov
adc
mov
mov
adc
leave
icebp
out
adc
add
lea
xor
xchg
hlt
xorb
xor
clc
stc
cli
or
nop
ret
clc
stc
inc
into
dec
mov
int
add
rolb
sbb
jmp
repnz
cmp
mov
clc
cli
jmp
dec
cmpb
inc
cmp
dec
fmull
pop
mov
xchg
or
fiaddl
adc
pop
pop
fdivl
cmp
int
mov
sahf
rcr
inc
fsubl
loopne
add
push
jge
jle
push
jg
xchg
mov
sbb
xlat
jle
add
pusha
mov
push
daa
mov
sub
adc
int
pop
lds
mov
and
stc
stc
add
push
icebp
xor
enter
mov
dec
push
hlt
dec
sbb
mov
mull
jb
jne
inc
mov
dec
insl
adc
lcall
jmp
push
push
lock
sbb
or
pop
dec
mov
jmp
stos
fs
je
mov
je
mov
cmp
jb
cmp
jbe
inc
inc
add
jmp
pop
sbb
mov
push
mov
int
adc
ljmpw
shlb
loope
into
sbb
adc
push
or
mov
clc
push
dec
aam
test
and
mov
jl
or
inc
pop
repz
mov
pop
jne
inc
jb
shlb
jno
lods
js
orl
in
mov
daa
idivl
sbb
mov
out
or
ss
leave
out
push
aad
pushl
rol
pop
dec
push
xor
mov
push
mov
xchg
pushf
and
sbb
xchg
jle
sbb
xor
sbb
inc
test
dec
adc
lret
cmp
adc
push
hlt
mov
dec
daa
fcoms
fisttpl
lret
in
inc
sbb
clc
sbb
jg
push
adcl
xorl
push
pop
or
adc
cltd
enter
inc
fisubl
or
push
dec
and
fwait
jg
adc
sub
or
sarl
cld
cmp
inc
das
push
xchg
push
call
push
js
mov
jle
cs
push
pop
push
push
ret
pusha
add
fisttpl
push
xlat
xchg
fisubrs
mov
aaa
add
mov
or
insl
xchg
sub
shrl
pushf
ss
pop
jmp
fsts
shll
jns
rorb
pop
jne
mov
cmp
push
cld
add
adc
dec
sub
push
jmp
xor
negb
xchg
jne
push
sub
dec
pop
pop
adc
and
sbb
or
outsb
jle
bound
sbb
and
push
sbb
sub
lret
jge
push
inc
pop
sbb
pop
add
clc
pop
or
mov
or
pop
mov
test
and
pusha
jns
cmp
repz
dec
rorl
push
push
dec
cmc
incb
cwtl
jecxz
test
xor
je
mov
jg
xor
int3
ret
call
mov
and
inc
mov
dec
cmp
test
jl
jb
lea
ss
adc
or
int3
fldl
ret
mov
fldt
dec
mov
loop
lods
mov
mov
stos
push
add
push
jmp
dec
loop
jmp
mov
lea
sbb
sub
or
dec
push
adc
adc
add
mov
mov
sbb
leave
inc
js
mov
pop
inc
sarb
cwtl
sub
clc
fcompl
and
stos
mov
inc
and
sub
add
mov
inc
aad
ja
and
and
push
xor
push
mov
push
stos
xor
sti
push
lods
test
and
sub
cld
cmpsb
fcoms
pop
pushf
add
dec
mov
jl
mov
roll
push
add
subb
push
popa
movl
fstl
dec
btr
ljmp
in
mov
hlt
cmp
cmp
arpl
fildll
inc
cmp
jp
shl
inc
xor
mov
cmp
add
std
shll
mov
es
loope
or
or
or
in
mov
jmp
and
cmp
or
ds
xchg
mov
aas
push
fs
adc
jmp
xchg
pushl
cmpl
cmp
rol
dec
orb
imul
je
ja
lret
push
sub
jecxz
and
mov
mov
test
stc
xor
shr
add
jo
and
push
sbb
or
das
aam
dec
out
jne
and
rcll
loop
cld
and
pop
call
cmp
je
dec
jnp
sub
fdivrl
cmp
xchg
pop
addr16
outsb
xor
std
pushf
pop
adc
movsb
cmpsb
rorb
movsb
jb
mov
jmp
push
clc
orb
add
nop
dec
xchg
into
mov
jle
add
dec
or
push
fs
lods
fldt
rorl
mov
outsb
cmpsb
int3
pop
jp
push
push
mov
cld
movsb
mov
pop
mov
pop
ret
sub
js
pop
fisttpll
sbb
jo
ret
sbb
ja
pusha
pop
cwtl
xchg
aas
popf
jl
cmpsb
fs
jl
les
mov
arpl
rcl
mov
add
mov
sahf
push
pop
and
mov
add
push
enter
xor
mov
mov
loopne
dec
aas
cli
push
sbb
fldt
into
addr16
ja
repz
inc
pushf
addr16
and
xchg
mov
cmp
dec
rolb
sbb
pop
in
int
int
mov
mov
add
repnz
jnp
lahf
mov
shrl
daa
pushf
mov
jg
aas
dec
enter
call
enter
add
leave
sub
or
dec
in
cmp
dec
inc
mov
jae
mov
sbbl
int3
jnp
add
in
mov
add
push
xchg
mov
addl
pop
pusha
data16
mov
cmp
bound
and
insb
insb
outsl
arpl
imul
push
xor
rsqrtps
outsb
jg
decl
push
jb
pop
push
add
arpl
pop
jb
inc
push
push
jp
insb
fs
je
push
idiv
jb
insl
inc
jbe
jns
data16
dec
jo
pop
jbe
push
cmp
jae
inc
dec
outsl
inc
mov
pushl
inc
inc
fs
inc
dec
push
popa
dec
inc
inc
insl
js
inc
dec
pop
inc
js
adc
ja
jno
incl
dec
outsb
inc
jae
jbe
inc
bound
pop
pop
dec
push
push
push
gs
push
jb
jo
jo
inc
std
ljmp
inc
dec
pop
push
push
ja
pop
gs
popa
dec
push
push
inc
pop
cld
mov
push
xchg
dec
push
push
mov
dec
jno
jo
dec
dec
push
pop
pop
push
sti
jp
dec
push
inc
outsb
dec
dec
inc
inc
ja
js
dec
dec
dec
dec
push
insb
jbe
jbe
cmp
mov
inc
inc
jp
js
push
push
pop
jns
popa
inc
insl
loopne
loopne
push
js
push
pop
push
jns
outsl
inc
mov
push
pop
inc
push
imul
mov
dec
push
jno
push
jns
gs
jae
push
bound
pop
jp
jp
incl
inc
arpl
jp
dec
bound
arpl
pop
inc
inc
push
inc
jne
gs
sbb
cpuid
arpl
pop
inc
fs
js
outsb
mov
outsl
outsb
outsl
outsb
fs
gs
and
pop
dec
daa
outsb
dec
inc
addr16
jno
pop
in
mov
pop
inc
inc
pop
dec
imul
jns
jne
jg
add
dec
mov
push
jb
jae
push
dec
push
dec
push
jp
push
inc
dec
push
inc
arpl
lahf
pop
fwait
jno
mov
pop
clc
xchg
adc
arpl
testb
add
inc
imul
mov
xchg
in
jle
pop
inc
jb
popa
jns
outsl
jb
pop
insl
insl
add
daa
mov
adc
add
stos
xorb
push
aas
stc
decl
ja
outsb
jbe
jb
gs
and
outsb
je
push
adcl
push
push
pop
ja
outsb
insl
popa
jo
gs
cbtw
sbb
mov
aaa
lret
or
push
dec
push
fiaddl
sub
inc
js
dec
mov
outsb
gs
xor
or
lahf
ljmp
mov
pusha
leave
jmp
jmp
imul
dec
push
les
loopne
inc
dec
push
dec
inc
pop
jnp
inc
inc
cmp
xor
add
inc
ss
xor
cmp
aaa
aaa
pusha
mov
es
xor
xor
inc
jge
dec
outsb
jo
push
stos
loopne
sbb
inc
add
add
lds
sbb
push
idivl
rorl
push
mov
push
push
outsb
sub
push
inc
push
lret
outsl
ja
and
mov
je
jo
pop
ucomiss
inc
push
mov
inc
outsb
mov
gs
outsl
jg
iret
push
les
and
push
add
dec
add
add
add
add
or
inc
jb
jle
jl
cmp
pop
inc
pop
rclb
or
adc
adc
push
pop
sbb
sbb
sbb
push
lcall
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
aas
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
lock
stos
notb
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
mov
pop
cmp
addr16
insl
adc
insb
jne
ja
jns
addb
jnp
jge
jg
cmp
outsb
and
sub
in
stc
sub
adc
addl
adc
add
add
xchg
lods
stos
push
add
add
add
add
insb
or
mov
test
incl
adc
fisubl
jbe
aaa
add
pop
lods
and
shr
ljmp
and
add
test
mov
mov
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
ljmp
mov
mov
mov
mov
mov
ret
enter
int3
int
dec
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
ljmp
icebp
repnz
cmc
div
clc
stc
cli
sti
cld
std
jmp
add
or
and
stos
xor
inc
mov
pop
pop
push
cld
push
jne
dec
outsl
outsb
push
jne
push
gs
decl
jne
jb
push
popa
cwtl
dec
popa
outsb
inc
bound
jb
jo
pushl
fisttpl
jns
dec
add
inc
jne
push
gs
arpl
jbe
shr
sbb
js
call
mov
insl
add
xor
jb
add
add
add
jne
je
insl
and
jb
pop
dec
adc
or
push
push
and
add
dec
inc
add
inc
and
adc
es
ss
adc
and
jo
imul
and
jae
insl
popa
into
sub
je
gs
jo
and
mov
sti
je
and
push
push
xchg
jno
bound
jns
imul
scas
push
insb
jns
or
xorb
outsb
je
into
insb
mov
mov
jne
pop
xor
scas
sbb
data16
push
xchg
shrl
aas
xor
mov
dec
mov
rolb
shll
les
out
insl
fdivrp
outsb
das
add
fs
xchg
and
jbe
dec
mov
js
push
rcrb
popa
add
or
fs
dec
icebp
xor
bound
and
in
andl
sbb
add
gs
fwait
ret
and
mov
ret
fcoms
sub
aaa
or
dec
sub
arpl
cmp
adc
pusha
and
dec
popa
sub
xor
outsb
mov
cmp
sbb
fadds
imul
out
int3
or
xlat
js
push
pop
data16
fs
sbb
pop
xor
lds
sub
gs
push
xchg
jnp
sbb
cmpsb
cs
out
or
or
xor
shll
pusha
adc
popa
sbb
add
add
xor
fdivs
outsl
outsl
ss
adc
fs
jo
cli
jbe
inc
and
xor
pushf
pop
mov
push
cmp
mov
mov
lds
jo
mov
test
outsl
push
or
arpl
pushf
fidivs
lcall
jb
push
inc
aaa
mov
mov
insl
in
ljmp
testb
pop
das
imul
in
aas
dec
mov
inc
jno
rclb
mov
adcl
cmp
cltd
xchg
lds
call
test
push
adc
and
roll
or
and
pop
push
cmp
jne
jae
pop
popf
mov
fsubl
add
sub
addl
jb
push
loope
pop
data16
lret
inc
sub
pop
dec
mov
cs
dec
or
add
cmp
outsl
aad
repnz
inc
jne
sub
out
gs
dec
and
dec
and
mov
xchg
pushf
cmp
or
sbb
xchg
pushf
cmp
mov
nop
xchg
xchg
xchg
faddl
push
pop
sub
adc
bound
das
or
les
fiadds
movsb
and
fisubl
insl
andl
imul
ds
in
outsl
daa
roll
mov
rol
mov
mov
je
cmp
sbb
cmp
lcall
jbe
mov
xor
jno
sub
inc
ficompl
mov
jbe
push
push
lahf
push
or
xchg
and
xchg
jns
cmp
dec
mov
sub
mov
or
add
xor
pop
es
lds
lock
jno
daa
pop
inc
xchg
pop
pop
pop
push
inc
test
jae
cmp
add
insb
call
gs
addr16
subl
mov
adc
lea
xor
jbe
push
push
push
push
dec
testl
dec
cmp
outsb
pusha
cmp
fildll
dec
jge
imul
cmp
fs
add
xor
sbb
push
or
push
fistpll
sbb
insb
in
nop
roll
xchg
jg
or
mov
push
push
insb
dec
mov
fadd
sub
or
push
mov
pop
das
je
outsl
xchg
pop
aaa
daa
xchg
mov
data16
out
pop
pop
cmp
cmp
add
ds
mov
push
sub
int
fdivrl
jle
sub
sub
fdivl
cmp
add
add
sub
sub
loopne
ja
sub
mov
call
and
cmp
and
add
fisttpll
pop
test
addr16
mov
je
push
jb
imul
ret
xor
push
push
cld
popa
arpl
xor
sbb
xor
xor
cwtl
adc
inc
jo
sub
xchg
daa
jns
dec
xor
push
push
and
cmp
out
cld
mov
mov
iret
shr
stos
ds
notl
sarb
push
cmp
repz
lods
test
repz
repz
xchg
nop
mov
test
cmp
repz
push
cmp
repz
push
push
dec
dec
iret
repz
inc
inc
cmp
xor
cmp
repz
sub
adc
lcall
out
sahf
out
pushf
jl
cmp
sahf
ja
sbb
mov
jo
jns
out
inc
inc
cmp
iret
repz
add
mov
ds
repz
push
sub
in
jl
out
rcrb
out
xor
insl
insl
cmp
add
jmp
lahf
fs
dec
and
jns
add
das
mov
adc
push
dec
push
inc
or
dec
test
gs
adc
dec
mov
inc
popa
sub
jne
dec
fstps
outsb
gs
imul
das
test
push
ja
xchg
xchg
cmp
sahf
jae
xchg
xchg
out
add
addr16
popa
mov
mov
adc
jb
daa
push
rclb
imul
ja
movsb
daa
mov
sahf
jbe
cmp
dec
inc
aas
add
mov
push
mov
push
cmp
das
adc
das
push
cmpsb
jb
dec
jge
push
mov
push
inc
arpl
fisubrs
jne
daa
pop
lea
pop
loope
mov
js
aaa
add
push
push
inc
push
repnz
dec
dec
les
cltd
push
push
insb
push
lret
or
stc
sbb
xchg
jp
adc
in
aas
icebp
pop
test
add
inc
insl
movsb
dec
jbe
dec
add
fcoml
das
andb
dec
fmuls
out
add
xchg
sbb
sub
inc
das
inc
inc
mov
outsl
inc
add
pushf
ss
lods
pop
leave
add
ja
lahf
mov
mov
fmuls
pushf
movsb
ds
lds
leave
out
js
mov
add
mov
mov
rcrb
les
mov
inc
pop
and
outsl
dec
out
mov
inc
andb
ss
mov
lahf
inc
add
fs
fadds
mov
adc
push
mov
shrl
jbe
pop
push
push
arpl
or
cmp
fwait
mov
fdivr
add
fidivrl
pushf
and
sahf
adc
mov
cmp
jnp
idiv
add
addr16
aas
pop
mov
scas
add
pushf
mov
out
aas
cmpsl
ss
cmp
jg
cs
fcmovbe
roll
lahf
out
add
mov
addl
scas
aas
insl
in
cmpsl
je
test
xchg
mov
orl
cmpsb
dec
iret
rep
mov
in
add
movl
xchg
pop
paddusb
int3
movsb
ret
dec
lock
mov
sarb
mov
out
bound
daa
push
mov
mov
imul
lock
mov
outsb
cmp
lahf
decb
outsb
bnd
xchg
pop
cs
dec
cmp
or
push
mov
rorb
testl
dec
sti
push
ret
push
fsubs
jle
push
inc
pop
xchg
inc
rcr
and
movsb
enter
les
aas
mov
lock
adc
stos
pusha
mov
cmpsb
adc
and
aas
adc
inc
adc
or
mov
or
xor
sbb
out
ucomiss
pop
cmp
fmuls
sbb
cmp
pop
dec
es
mov
mov
and
pusha
es
xchg
pushf
push
ret
adc
cmp
ss
js
jns
push
cmp
cmp
call
mov
cltd
inc
fiaddl
and
dec
mov
pushf
dec
dec
pop
inc
add
pop
ljmp
mov
lahf
bound
lds
les
rorb
jg
inc
shll
ss
aas
repz
stos
xchg
adc
cs
call
add
sbb
lahf
xlat
and
adc
out
data16
or
inc
inc
sub
ss
fistpl
pop
leave
test
scas
push
int
xor
pop
inc
insb
int
stos
or
mov
ds
add
add
inc
movsb
imul
xor
and
push
push
daa
adc
jno
data16
jle
jge
and
inc
push
dec
inc
mov
lea
std
xor
mov
xlat
jns
lds
inc
fisttps
mov
push
cmp
inc
or
xor
aas
cmp
xor
aaa
add
or
push
push
adc
push
xor
push
and
push
aas
dec
gs
jg
jl
jb
out
jmp
lahf
cld
scas
jle
hlt
mov
inc
call
dec
mov
jae
int3
mov
in
inc
mov
dec
bound
arpl
dec
mov
insl
test
addr16
mov
inc
nop
popa
mov
sbb
inc
cwtl
jmp
adc
aad
jnp
push
and
inc
scas
xchg
xor
cmp
outsl
dec
jae
repnz
inc
dec
iret
cmpsb
jns
and
push
fs
ja
cmp
dec
push
push
lcall
push
xor
dec
jp
outsb
dec
cmp
imul
pop
mov
xchg
dec
jbe
call
pusha
std
jne
jp
jae
outsb
dec
enter
dec
jle
stc
icebp
push
pop
outsb
mov
outsl
decb
stc
shrl
inc
dec
ss
adc
jmp
jno
pop
repnz
jns
jbe
addr16
push
imul
subb
jp
dec
and
addr16
outsb
push
decl
jl
rcll
add
or
enter
xor
out
jp
inc
ss
jnp
jp
sub
xor
jl
jg
inc
add
sub
addr16
pop
xchg
movsb
jno
pop
sub
and
scas
call
or
mov
shrl
or
cmp
pop
fists
pusha
mov
outsl
dec
lcall
js
mov
and
mov
pop
stos
cltd
lea
test
cwtl
cmp
or
or
or
push
incb
loope
gs
repz
ret
ret
cs
lcall
call
xor
mov
mov
xchg
in
adc
bound
icebp
daa
push
cld
lret
or
int3
or
and
js
sbb
pushl
mov
push
pop
jne
ss
incb
adc
pushf
lcall
movsb
jns
fnstenv
sub
and
mov
clc
mov
in
addl
sahf
cs
imul
pop
shrl
popa
cmp
outsl
outsl
mov
xor
adc
xchg
mov
mov
dec
xchg
jmp
lcall
jbe
iret
daa
sbb
aam
mov
es
scas
cld
xor
xor
rolb
dec
pop
arpl
pop
inc
das
out
shlb
int3
jbe
ret
stc
add
fmuls
push
sti
or
sbb
jmp
sbb
and
int
add
adc
xor
sbb
rolb
pop
outsl
adc
mov
push
jo
call
dec
dec
in
cmpl
je
rcll
cmp
in
jle
js
jg
mov
xchg
movsb
mov
ret
lock
jne
rcrb
cmp
and
and
mov
jne
popf
sbb
sub
push
cmp
repz
aas
mov
rcrl
mov
cmp
inc
fildll
sub
sahf
aad
aas
jg
addl
adc
adc
jne
and
cwtl
mov
sub
xchg
pop
sti
xor
jp
es
or
std
fcomip
stos
fcmove
add
sti
xchg
daa
jnp
adc
das
pushl
add
dec
ljmp
jbe
cmpsb
jl
and
ret
xor
ficompl
pop
lock
mov
inc
out
push
push
push
add
ja
sbb
aas
bound
or
cmp
jmp
jnp
arpl
popf
popl
sar
fwait
sbb
jle
sti
out
cmp
add
int
mov
pop
jg
adc
push
aaa
mov
jmp
jle
out
popa
addr16
test
cld
cmp
push
mov
pop
popa
xorb
js
loope
jl
mov
outsb
pop
and
ret
jg
mov
inc
jo
xchg
enter
das
into
dec
adc
push
scas
decl
mov
stos
jb
mov
xor
loope
xor
adc
jg
lea
ret
ss
repz
loope
pusha
iret
cmp
jb
push
sub
sub
mov
addr16
cmpsb
dec
jg
or
or
repz
das
push
roll
fcoml
push
mov
sbbb
push
pop
dec
jbe
rcll
mov
mov
lcall
test
mov
mov
out
cmc
popl
push
inc
fwait
mov
pusha
dec
outsl
iret
and
test
insl
sarb
into
push
imul
popf
arpl
push
mov
push
test
test
jl
inc
jmp
push
mov
or
stos
lcall
and
push
jecxz
pop
aas
jno
add
popa
cltd
dec
pusha
dec
jecxz
jae
jmp
cmpsl
and
popf
mov
dec
pop
fstl
inc
pop
lds
push
xchg
jecxz
jle
pop
mov
jg
call
nop
xor
push
sbb
ret
push
jbe
cmp
fstps
or
jnp
stc
das
inc
shrl
fnsave
jno
add
pop
js
xor
mov
cwtl
jb
lcall
mov
iret
inc
lods
cs
mov
ja
int
jg
rorb
pop
inc
leave
and
cld
mov
test
mov
or
fcomip
scas
mov
xchg
xor
jg
mov
ss
dec
sbb
inc
jno
insb
xor
out
cmp
add
push
pusha
les
push
idiv
pushl
add
rorb
jae
movsl
subl
cmpsb
xor
hlt
push
pop
or
bound
out
cmpsb
aam
sub
iret
out
cmp
es
je
push
cli
dec
sarb
mov
dec
xchg
jbe
lock
jbe
ror
add
mov
pushf
data16
mov
pop
dec
xor
ret
fldenv
mov
dec
mov
jg
jg
pop
pusha
jge
push
xchg
mov
pop
mov
push
and
pop
cld
add
xor
dec
jae
cwtl
clc
mov
addr16
jmp
test
xchg
scas
in
fsubl
or
xchg
push
and
inc
add
repz
inc
mov
xchg
and
cmp
sar
xor
cld
push
pop
push
pop
mov
mov
pop
ficomps
lret
pop
cmc
xor
ja
sub
les
mov
je
fidivl
adc
data16
popl
ljmp
incb
bound
rcrb
pop
inc
pop
out
jnp
addb
ss
inc
imul
lods
dec
push
imul
sub
xchg
pop
pop
adcl
sub
test
jg
mov
addr16
movsl
jg
or
ljmp
push
xorl
jge
sti
sbb
sbb
fldl
pushl
lcall
fisubrs
pop
test
imul
inc
add
jo
mov
stos
sub
mov
jmp
pushf
mov
fwait
jbe
lea
cwtl
mov
into
and
das
in
pop
sbb
sti
mov
and
sub
sbb
int3
add
mov
dec
fs
jnp
jg
adc
and
sbb
and
jbe
test
incl
stos
adc
mov
not
adc
add
pushf
fwait
sbb
movb
scas
sbb
pop
sub
movsb
mov
jg
jmp
or
movsl
pop
inc
out
or
sti
cmp
pop
push
sar
sbb
test
lods
sbb
jno
cmp
notb
push
iret
xor
mov
call
mov
xchg
mov
add
cmp
cmp
mov
lcall
test
ljmp
je
divb
and
and
in
jne
cmpl
push
push
xchg
decl
shll
mov
lret
sub
ja
andb
scas
cmp
sbb
pushl
inc
adc
insb
cmp
mov
sub
mov
or
jge
inc
mov
addr16
push
xor
loop
mov
movsl
push
inc
aad
jg
arpl
faddl
ja
fisubl
push
inc
jecxz
or
test
outsb
dec
iret
addb
mov
in
loope
std
xor
sub
push
sub
movsl
negl
adc
cwtl
cli
popf
sahf
push
mov
hlt
data16
or
xor
jle
cmpsl
jecxz
xor
gs
ljmp
mov
es
lret
out
xchg
jnp
xor
inc
dec
push
std
jg
lea
clc
pop
push
pop
arpl
push
ds
inc
fldt
incl
cs
imul
sbb
pop
gs
push
jp
in
add
dec
cld
inc
mov
mov
aas
jo
dec
pop
out
dec
push
add
decl
xchg
jb,pt
je
push
inc
test
inc
stos
lock
cmp
mov
sbb
mov
loope
sub
fwait
cs
ds
dec
add
je
sti
incl
xchg
jno
std
push
push
pop
add
ss
pop
orb
stc
gs
sub
xchg
inc
pop
fcom
cld
ljmp
jb
inc
rcrl
push
and
stos
cmc
push
in
jg
jg
sbb
popf
xchg
pop
orb
jo
and
lea
lods
es
jg
dec
cld
pop
push
push
shrl
xor
stos
xor
mov
push
push
into
add
orl
pop
pop
jg
ljmp
sub
adc
or
data16
mov
adc
call
decl
inc
or
dec
and
lods
pop
push
sub
sbb
push
fs
mov
aas
jg
cld
loopne
push
pusha
sbb
push
aaa
arpl
and
ret
dec
push
fiaddl
imul
push
bound
sub
add
xchg
add
and
or
sahf
mov
jmp
loope
jl
lods
sbb
sub
add
dec
dec
inc
mov
mov
loopne
add
lds
inc
and
mov
jmp
jp
mov
cmpsl
mov
loop
outsl
jle
out
push
ss
xchg
js
dec
lcall
ljmp
orb
addl
add
das
sar
stc
mov
adc
in
pop
mov
bound
inc
jbe
aas
insl
pusha
stc
push
inc
ds
mov
sbb
fwait
call
bound
fidivrl
xor
mov
pop
lret
mov
jo
and
cmp
mov
std
adc
mov
ljmp
pop
or
sbb
sub
push
push
jno
stc
cmp
adc
subl
add
lcall
lock
jns
lcall
fidivl
lret
decl
incl
pop
dec
data16
xor
pop
aas
cmp
stos
inc
leave
mov
fwait
mov
sub
loopne
je
cmp
int3
mov
dec
out
clc
scas
xchg
jl
stos
xor
mov
mov
rcrb
mov
or
push
push
lahf
jae
fwait
dec
mov
cld
into
push
aaa
inc
add
lahf
sbb
loop
test
mov
imul
mov
push
dec
pop
add
and
ss
pusha
sbb
xchg
addb
cmp
or
inc
outsb
popf
and
mov
or
decl
addr16
movsb
xchg
xlat
dec
push
push
push
enter
push
std
sub
push
idivb
xor
cmp
dec
cltd
push
cs
iret
jae
sti
mov
mov
mov
out
mov
std
ret
or
ljmp
and
orl
inc
mov
bnd
pop
jb
and
adc
lahf
ljmp
adc
aad
adc
loop
cltd
sub
and
xor
cli
add
ret
adc
xor
jmp
dec
xor
push
dec
xor
lcall
push
aas
enter
mov
std
xor
mov
mov
loop
mov
shll
push
push
mov
pusha
ljmp
pushl
pop
adc
xor
inc
xchg
inc
adc
mov
aaa
add
addr16
push
jl
cmpb
push
lock
call
inc
aam
int3
lods
xor
sub
mov
je
or
xor
loop
inc
leave
mov
xor
std
or
sti
jl
inc
push
repz
sbb
aas
scas
fwait
pop
pusha
out
mov
jmp
push
orps
mov
repz
jp
sub
shl
outsl
push
lods
cli
and
mov
jp
fs
stos
scas
jmp
sbb
pop
pop
xor
dec
jge
outsb
xor
repz
decl
sbb
or
sbb
leave
nop
push
cmp
add
jg
cs
cmpsb
inc
jle
aad
xchg
jne
pushl
cli
mov
pop
adc
jo
sahf
mov
sub
incl
shlb
inc
xchg
push
sub
add
clc
jmp
and
movsl
arpl
mov
shlb
sub
add
add
lcall
sbb
add
and
aaa
subb
shl
sar
jg
scas
xor
add
jno
leave
sub
adc
xchg
ljmp
cld
jb
imul
mov
lret
stos
lcall
repnz
push
push
imul
daa
ja
cmp
es
mov
fwait
incl
mov
mov
movsl
mov
push
push
xor
or
dec
jle
dec
xor
dec
sbb
lcall
test
out
mov
and
dec
add
pop
repz
jle,pn
sbb
jg
inc
pusha
xor
xor
pushf
ljmp
pushf
aas
cli
mov
mov
push
mov
xchg
dec
xor
das
sub
test
sub
ja
pop
inc
push
push
add
ret
pop
les
or
adc
sarb
stos
xchg
mov
scas
cmpb
push
mov
clc
pushl
dec
sub
pop
dec
std
xor
ss
cmp
fnstenv
call
push
or
inc
sbb
adc
aaa
lods
push
jno
inc
sbb
push
loopne
xchg
test
pop
pop
addr16
or
cltd
pushl
popa
addr16
insl
rorl
cmpsl
jnp
push
sti
das
clc
decl
push
bound
dec
into
add
lods
enter
mov
popf
loope
adc
aas
out
sarb
mov
mov
and
dec
cmpsb
sahf
or
mov
push
mov
dec
jb
push
sub
ss
cmp
dec
sar
hlt
call
pusha
daa
sbb
xor
sbb
shlb
xchg
insl
jp
cmp
mov
gs
sbb
jp
pushw
mov
divl
data16
mov
sbb
mov
jp
idivb
test
cmp
dec
out
fdivr
jae
mov
insb
or
jp
mov
pusha
out
add
mov
push
jbe
pop
loopne
pushf
jb
pop
push
stc
and
scas
mov
ljmp
andl
fistpl
loope
in
push
push
adc
popa
adc
and
mov
push
jne
iret
dec
sbb
pop
mov
pop
inc
push
insb
in
ja
incl
mov
and
push
out
imul
dec
insl
xor
call
es
push
add
xlat
mov
mov
dec
and
mov
xor
jb
jl
movsl
jns
mov
push
arpl
or
addr16
sub
cmc
fbld
dec
mov
adc
pop
fldenv
jecxz
pop
push
shr
clc
out
jne
mov
inc
das
sub
sbb
jge
fs
dec
pop
hlt
stc
xchg
lcall
dec
movsl
stos
addr16
js
inc
test
stos
pop
movsb
fsubrl
push
outsb
mov
movsl
sbb
rcrl
xchg
xchg
stos
nop
sub
sahf
mov
jns
xor
mov
dec
bound
aaa
jle
out
into
or
outsl
pop
push
sbbl
dec
out
and
cmp
cmp
insb
popa
jo
es
cmp
out
inc
sbb
std
lcall
push
loop
dec
sub
rorl
inc
insl
jno
lahf
int3
js
inc
pop
cmp
cmp
out
jbe
xor
jmp
pop
push
rorb
addr16
mov
push
mov
jb
popa
ja
imul
jle
push
mov
push
push
push
inc
lea
iret
mov
pop
and
outsl
dec
movsl
inc
outsb
testb
stos
inc
jl
inc
jle
mov
fsub
mov
fisubrs
cmp
add
out
repz
cwtl
incl
inc
cmp
cmp
mov
and
sbb
rcll
cs
bound
scas
push
sti
arpl
push
mov
mov
pop
push
popa
dec
scas
and
rorl
cmp
push
outsb
mov
pop
xchg
push
fadds
adc
sbb
mov
test
inc
add
aad
fidivs
lret
jle
scas
or
fwait
cmc
xchg
insb
fnstsw
xchg
and
repz
jg
movsl
and
ficompl
xor
push
or
dec
sbb
shrl
jg
or
inc
xchg
loope
sbb
dec
pop
lea
jl
ja
sbb
mov
fbstp
push
push
jb
ds
stos
int
push
cmp
ljmp
hlt
adc
iret
enter
dec
inc
or
push
sar
aas
sbb
hlt
movsb
pop
jecxz
push
add
xchg
rolb
pop
push
call
stos
jo
push
bound
push
lret
cmp
add
push
lods
sub
mov
jo
fcmovnbe
lahf
pop
lock
jle
adc
push
or
ss
mov
mov
jge
add
add
cmp
lret
dec
out
out
repz
jmp
int3
xchg
adc
mov
jle
insl
inc
xchg
inc
push
mov
cmp
outsb
push
insl
cmp
repz
add
pop
jbe
inc
dec
xor
sbb
icebp
inc
out
pop
adc
daa
add
inc
leave
icebp
pop
cmp
test
lcall
in
mov
jb
jl
decl
and
xor
inc
mov
out
arpl
ds
cmp
push
mov
cmc
inc
sbb
push
and
jae
push
lcall
js
and
xchg
adc
call
cmp
and
push
and
jmp
je
pop
add
loopne
push
adc
sbb
cld
pop
sub
pop
icebp
or
mov
ret
add
inc
mov
incl
fimuls
xor
adc
pop
cld
pushl
sub
clc
inc
xor
mov
xchg
outsl
mov
mov
dec
jp
rolb
scas
jl
cmp
cld
popf
sbb
pop
jl
cmc
aad
ds
outsb
shl
jp
mov
pop
pushl
fdivl
mov
dec
sahf
fstps
hlt
add
daa
dec
cmp
outsl
sarb
popa
jg
mov
dec
pop
clc
adc
dec
xor
cli
in
lcall
cltd
fsubrl
mov
add
mov
jg
mov
sbb
out
popa
pop
xchg
mov
jb
pop
jg
adc
jge
lods
fbstp
inc
decl
lcall
bound
sti
jle
aas
push
push
xchg
divl
pop
push
int3
or
mov
adc
test
dec
pop
test
lahf
sbb
push
push
cmc
jg
mov
mov
jno
jo
jae
mov
mov
mov
aaa
popa
xchg
and
lcall
adc
jge
cmpsb
sbb
push
inc
cld
or
xchg
fnstenv
jno
adc
mov
inc
hlt
sahf
cwtl
es
incl
in
or
fsubl
push
mov
push
xchg
jp
cltd
mov
inc
jnp
lret
pop
fsubrl
in
push
add
mov
cmovns
test
adc
aaa
push
ljmp
push
push
test
jmp
xchg
mov
nop
xchg
dec
gs
mov
lret
lcall
mov
add
jl
das
mov
daa
push
mov
into
xor
aad
cli
fistps
jecxz
push
cld
imul
cwtl
test
inc
sbb
or
pop
jecxz
js
push
aaa
xchg
mov
jmp
sbb
and
pop
jo
sbb
scas
stc
sub
fwait
adc
aas
push
ljmp
or
es
in
mov
lea
mov
jg
mov
std
sahf
rcll
dec
loope
int3
jge,pn
aas
adc
push
xchg
fs
dec
pushl
inc
pusha
pop
inc
add
repnz
pop
sahf
fnstenv
cmp
pop
icebp
jmp
inc
in
and
add
stos
adc
cmp
ss
ds
neg
push
stos
das
cs
into
mov
js
xchg
or
loope
jne
xor
ja
incl
stc
stc
ds
dec
shrb
imul
cli
mov
sbb
bound
enter
outsb
test
mov
or
js
outsl
mov
bound
dec
sbb
jne
sub
mov
mov
lds
cmp
mov
std
jl
fldt
outsb
into
mov
and
cmp
in
call
jo
cmp
movsb
adc
sub
xor
mov
jo
std
xchg
or
mov
mov
ljmp
dec
xchg
inc
je
in
dec
lret
add
lret
mov
mov
into
jle
mov
push
jmp
sbb
pushl
xchg
roll
rcrb
pop
in
cmp
push
je
mov
call
out
dec
fs
cmpsl
xchg
insl
popa
notl
std
ljmp
mov
je
out
lods
xor
outsb
cli
movsl
xchg
jnp
mov
test
mov
mov
sub
inc
dec
ds
cmp
test
andl
add
test
cmpb
es
dec
xor
call
mov
clc
sbbl
xor
iret
mov
sahf
aas
js
insl
cmc
push
jmp
mov
imul
ss
cltd
cwtl
cmp
cli
sub
iret
adc
mov
fcompl
inc
jl
mov
ret
sar
decl
jo
stos
cld
add
sub
popa
push
sbb
xor
lods
lods
lcall
lcall
imul
fstl
dec
popa
add
add
cmp
pop
or
std
push
dec
push
out
pop
std
das
jle
inc
xchg
loopne
jle
or
xchg
jp
and
xchg
addr16
and
jbe
sub
out
das
clc
outsl
mov
paddusw
dec
in
mov
jg
inc
call
jns
xorb
repz
sbb
enter
imul
xchg
pop
adc
sbb
clc
jb,pt
incl
xchg
mov
xor
fisubrl
adc
jo
sbbl
add
cld
fs
aaa
inc
cmp
sub
stos
insl
dec
in
jae
sub
jg
popa
iret
mov
inc
mov
push
sbb
xchg
mov
sub
ljmp
out
aas
jp
dec
int
mov
adc
adc
aaa
mov
jg
jbe
adc
sub
add
adc
cmp
ret
jge
repnz
aaa
cld
cmpsb
or
dec
stos
sbb
rcrb
push
or
mov
jae
jae
mov
imul
pop
push
leave
mov
cmc
push
xor
add
sub
iret
jns
mov
dec
and
sbb
ret
ja
pop
pop
leave
scas
dec
add
mov
adc
cmp
push
inc
jmp
std
call
add
jp
cmp
cs
js
adc
sbb
mov
push
cmpb
idivl
hlt
jg
loop
jae
pop
inc
sbb
jo
dec
mov
jbe
add
mov
add
lcall
cmp
push
test
push
test
std
xor
push
adc
repnz
sbb
call
jg
jb
or
out
adc
aas
dec
int3
and
pop
inc
mov
mov
and
test
dec
jmp
ds
shlb
decl
sti
sbb
jl
pop
shll
inc
out
mov
push
inc
fs
icebp
xor
adc
cmp
xchg
sbb
jg
cli
negb
inc
jle
mov
iret
inc
inc
add
incl
jl
add
lods
push
je
mov
push
push
sarl
pushf
call
call
jno
insl
xorb
insl
sti
jbe
push
std
add
ss
pop
ret
stos
orb
addr16
jno,pn
push
gs
jle
ljmp
push
jno
and
sbb
aaa
dec
push
clc
mov
outsl
out
das
push
adc
dec
push
adc
dec
mov
xchg
add
pop
cld
inc
andl
bound
sahf
cltd
jmp
pusha
dec
in
xchg
js
ret
jg
mov
xor
lods
xlat
scas
mov
push
outsb
push
sahf
sub
call
pop
cmp
ficomps
dec
leave
mov
insl
pop
cmp
push
das
mov
lock
orb
lret
and
sub
aas
jge
cmc
and
mov
mov
mov
push
jg
pop
enter
jo
adc
push
into
sbb
add
pop
dec
mov
mov
cmp
sub
mov
jge
sub
adc
sbb
mov
push
or
sti
mov
incb
cld
jo
ss
addl
sbb
test
xchg
ljmp
mov
and
jne
cmp
and
xor
movsl
les
dec
fsts
inc
lret
and
je
pop
mov
nop
and
mov
fcmovu
jl
inc
in
sbb
nop
inc
lods
cmp
cld
fcomip
push
lret
in
shll
add
loope
scas
mov
lcall
push
or
scas
fs
popa
icebp
adcb
popa
loope
pop
dec
mov
fildll
stos
dec
int
adc
cmp
lods
shlb
jp
jns
leave
or
mov
jns
cmp
mov
outsb
rorb
xor
jmp
jg
jbe
dec
shlb
fwait
ret
push
push
mov
and
andl
inc
clc
icebp
pushf
cmp
insb
adc
cmp
lcall
enter
fcompl
ds
nop
add
xchg
jl
aas
jbe
mov
cmp
dec
rep
mov
dec
or
mov
xor
or
cmp
inc
jge
push
out
repz
or
std
mov
cwtl
inc
fs
lods
adc
out
push
push
push
enter
shrb
cmc
decl
mov
int3
mov
aas
pusha
jne
jmp
adc
cltd
xchg
push
push
fistps
push
jae
lea
push
inc
dec
sar
aaa
ljmp
pop
pop
test
gs
and
xor
mov
mov
xor
sbb
call
dec
scas
inc
and
dec
lcall
or
mov
cs
or
adc
cmpsb
or
incl
adc
fldt
mov
push
inc
push
mov
cld
or
pop
inc
std
outsl
mov
icebp
pop
insb
adc
jb
sub
pop
pushl
cmp
adc
sbb
jge
jle
inc
lcall
push
or
or
dec
adcl
rclb
sub
xchg
ljmp
dec
and
and
mov
pop
ficoml
adc
roll
inc
mov
je
aaa
jle
or
or
inc
or
mov
mov
or
rcll
outsb
and
jecxz
push
xchg
push
movl
jne
out
into
stos
adc
inc
push
enter
int3
insb
and
mov
pop
mov
std
xor
lock
and
gs
inc
sbb
gs
iret
inc
jne
jl
mov
add
xor
shlb
lcall
push
cs
jno
cmc
mov
inc
push
scas
sbb
iret
jmp
mov
punpckhbw
cltd
push
sbbb
out
pop
add
or
fisubl
outsl
rorb
les
pop
fdivrl
lcall
test
inc
cmc
cmp
push
insb
mov
icebp
mov
xchg
sub
fidivrs
or
lcall
out
test
sbb
jno
inc
lahf
fstl
lods
jecxz
dec
push
in
out
xchg
pushf
int
mov
push
inc
ficoms
xchg
push
mov
insl
lret
aad
fcmovnu
mov
in
cmpb
aaa
insb
rclb
decl
jae
arpl
stos
in
int3
sbb
mov
jp
out
and
fildll
movsl
ds
adcb
ljmp
pop
pop
ds
sbb
sbb
cmp
stc
xor
mov
xor
mov
lea
or
lods
lods
xor
inc
rcrl
decl
xchg
pop
or
clc
sub
xor
pop
lcall
cmpsb
sti
pop
jne
mov
cmp
xor
stos
push
cld
das
dec
sar
ljmp
and
clc
add
insb
leave
and
or
into
or
scas
popf
push
inc
push
rolb
push
pop
jge
and
fwait
js
inc
jg
mov
pop
leave
and
shlb
dec
in
das
out
mov
add
xchg
push
pop
lcall
call
sub
mov
pusha
dec
cld
adc
ds
adc
fdivr
ljmp
rep
dec
and
sub
mov
jge
outsb
mov
inc
std
pushl
inc
lahf
push
or
dec
jb
sbb
leave
lcall
mov
mov
push
lcall
out
imul
jb
movsl
mov
in
dec
add
push
aam
call
ja
xor
lods
ficompl
in
mov
dec
push
int3
and
sbb
insb
popa
test
clc
lahf
or
xchg
and
dec
jp
lock
inc
pop
icebp
cwtl
push
mov
dec
pop
xorl
flds
mov
push
in
push
movsl
out
ss
xchg
inc
pusha
call
std
pop
into
jo
push
pop
jns
jle
push
je
and
imul
add
dec
dec
imul
fsubl
ljmp
jge
push
in
dec
jo
int3
sbb
push
adc
push
je
jg
mov
jle
push
pusha
cmp
add
pop
out
mov
pop
outsl
xor
outsl
decl
fs
inc
es
pop
dec
out
lock
stos
lret
fwait
add
hlt
test
gs
mov
test
sub
adc
les
xlat
popf
adc
adc
mov
pusha
lret
push
mov
jge
inc
sbb
jbe
pop
insl
pushl
mov
cwtl
imul
push
push
inc
inc
pop
cmpsb
mov
or
or
push
cmp
or
jae
lock
lods
dec
adc
mov
ljmp
bound
mov
imul
dec
add
jns
sar
adc
sbb
das
cli
mov
lcall
add
inc
push
add
jb
mov
std
sbb
adc
aas
mov
popa
pop
mov
cld
mull
and
push
aam
ljmp
adc
mov
push
pop
sbb
cltd
mov
push
imul
or
pushl
push
or
add
enter
pop
dec
aaa
dec
outsb
jmp
cs
adc
and
inc
mov
rorl
mov
jno
mov
cmp
adc
lcall
pop
cmpsl
mov
mov
lods
repnz
jae
xchg
nop
fs
jmp
icebp
addl
out
std
adc
mov
jle
sbb
inc
pop
and
adc
push
mov
jno
mov
inc
dec
insl
js
push
push
stos
cmc
push
in
popa
adc
fwait
lods
add
leave
es
add
lahf
add
xchg
fs
pop
jge
and
add
dec
in
jg
mov
cmp
or
mov
clc
lahf
sbb
stos
cmp
dec
popa
xor
mov
es
mov
add
add
sbb
jecxz
ljmp
aam
sarl
sub
xchg
sub
stos
dec
imul
xor
call
jg
add
cmp
std
cmp
inc
sahf
imul
call
js
pop
imul
mov
pop
ja
clc
xor
cmp
jmp
cli
mov
add
cs
and
push
roll
dec
push
xchg
inc
insb
int3
add
adc
jb
cmp
sub
loop
jns
pop
or
ja
loopne
ss
jg
sbb
add
enter
pop
popf
or
jb
xor
cld
cld
aaa
jg
ljmp
add
xor
sub
jg
add
jp
clc
push
jp
insl
test
inc
decl
std
and
in
ds
jp
daa
fldl
dec
push
lds
inc
in
or
rcrl
lcall
in
pop
arpl
push
inc
inc
dec
rolb
lret
js
fildll
call
ja
test
mov
scas
out
jl
dec
scas
mov
rolb
cli
pushl
push
sub
shlb
popa
shl
push
cmpsb
fstpt
ljmp
movsl
lods
fs
lret
or
mov
cmp
outsl
jle
jmp
dec
rep
pop
pop
xchg
out
test
dec
roll
pop
sbb
mov
push
jl
jno
push
xor
push
leave
mov
push
in
inc
sub
xor
divl
aas
push
mov
cmp
sbb
loop
push
das
into
ss
mov
shll
push
jg
adc
lret
gs
rolb
aas
rol
ret
insl
jae
inc
adc
decl
fdivl
jo
hlt
arpl
imul
xchg
inc
jp
xor
add
mov
ja
loop
es
popa
shrl
fidivrl
mov
push
daa
dec
out
dec
dec
mov
jl
dec
jecxz
push
shrb
lock
pushl
aas
jno
cmp
cmpb
dec
scas
ja
std
sub
push
push
cmpsb
and
push
js
xchg
int
add
js
xlat
and
lcall
inc
shlb
push
insb
push
inc
rcrb
and
dec
pop
pop
mov
cld
imul
jp
divb
dec
sub
sub
mov
pop
push
xlat
mov
clc
push
ljmp
rcll
sbb
sub
sahf
stc
inc
pop
hlt
mov
or
dec
sub
out
outsl
stos
push
lock
clc
sub
cmp
rorl
cmp
out
sub
loope
stc
sti
push
push
ja
out
pop
cltd
out
mov
subl
call
scas
push
xor
insb
shlb
push
mov
push
push
dec
iret
scas
popf
adc
aas
outsl
clc
push
fistpll
pop
imul
dec
inc
mov
jae
mov
adc
loop
mov
inc
cmp
xor
pusha
cltd
pop
add
dec
lds
call
std
imul
iret
popf
inc
fcompl
cltd
mov
push
adc
sbb
xchg
jp
incl
insb
decb
jno
sbb
lods
pop
faddl
incl
xchg
dec
inc
jp
mov
lret
neg
adc
inc
add
incl
cmp
lret
xchg
pushl
jmp
rcrb
lods
inc
push
jb
cmpsb
dec
pop
xchg
cld
inc
pop
fdivr
aas
add
xor
push
inc
aaa
aaa
dec
lods
dec
pop
aad
pushl
andl
dec
shrl
aas
loope
test
aam
push
adc
popf
push
add
mov
pushl
nop
adc
and
sub
push
mov
lcall
and
xchg
out
xor
lret
inc
js
cwtl
ret
sub
clc
dec
mov
daa
mov
rorb
xchg
push
std
sub
out
sahf
pop
cltd
pop
xchg
aas
dec
es
pop
xchg
mov
loope
jae
push
jo
xor
popf
mov
or
cmp
mov
arpl
pushl
insb
mov
loopne
jbe
hlt
test
imul
in
sbb
mov
pop
sar
pop
jmp
adc
cmp
dec
pop
movl
adc
xchg
xor
repnz
cmp
jno
xor
cmp
cmp
pushf
mov
pop
out
loop
ret
jno
add
dec
push
sahf
pop
lods
push
sar
incl
lret
push
inc
inc
mov
leave
inc
loop
ljmp
call
adc
xchg
xchg
in
in
dec
jb
scas
into
sub
in
and
sti
and
test
dec
mov
cmp
call
inc
lods
push
sub
mov
mov
sbb
mov
push
popf
mov
and
pusha
into
and
jbe
add
pop
divl
mov
das
fwait
sub
addr16
sti
clc
pushl
push
sbb
pop
movsl
inc
dec
push
mov
rclb
xor
xchg
lcall
jecxz
andb
les
in
xchg
mov
inc
inc
xor
inc
into
lods
cs
std
sub
scas
out
scas
call
lods
xchg
mov
nop
aam
pop
es
add
in
call
push
fistl
cmpsb
jg
inc
dec
in
bound
xor
test
ret
out
incl
xchg
inc
mov
cltd
int3
and
jno
popa
loop
sbb
jnp
push
cs
movsb
movsl
mov
lcall
negb
es
stc
cmp
insl
lret
jl
jecxz
test
ss
out
sbb
test
sbb
pop
pop
mov
data16
push
adc
or
ss
adc
fdivp
repz
adc
jb
jge
add
pushl
inc
cmc
mov
inc
xor
mov
xchg
mov
lcall
out
int3
gs
data16
sti
sub
sbb
stc
sbb
xor
and
dec
jmp
adc
les
movsb
hlt
sahf
xchg
mov
lea
stos
das
and
mov
mov
xchg
sub
xchg
leave
popf
pop
push
sarb
mov
inc
xor
push
sti
adc
xchg
add
or
adc
ljmp
mov
rolb
pop
notl
xchg
pop
lahf
add
dec
test
mov
aaa
xchg
in
jp
icebp
dec
pop
call
out
mov
pop
or
out
xchg
xor
push
cmp
out
out
cwtl
stc
pop
xchg
imul
mov
jne
add
xchg
xor
pushl
cs
xchg
pop
fwait
xchg
mov
testb
negb
repz
xor
movsb
cmpsb
adcl
les
xor
inc
enter
call
mov
mov
lock
out
mov
jecxz
aaa
loopne
fwait
inc
adc
out
sbb
xchg
add
ss
cmpsb
lods
pop
add
mov
add
mov
push
mov
jge
add
addb
subb
mov
outsl
fldcw
inc
push
inc
stc
xchg
jbe
add
xchg
jp
decl
test
inc
jns
scas
shrb
push
shlb
mov
sbb
xor
ljmp
xchg
sub
and
popl
js
stos
jle
mov
and
and
decl
out
xchg
sbb
push
pop
lcall
pop
in
mov
mov
arpl
out
adc
pusha
mov
pop
or
inc
addr16
adc
or
adc
repz
aas
in
sarl
jp
xchg
aas
xchg
adc
adc
dec
jmp
mov
jle
icebp
es
scas
add
mov
and
ljmp
xchg
fildll
or
call
test
lret
jae
push
and
lea
push
jl
lret
or
stos
mov
cli
push
push
aas
pusha
jns
cmp
mov
jbe
mov
jb
dec
rorl
pop
ficompl
push
push
adc
dec
and
jg
push
sbb
sbb
mov
cmpb
mov
sub
lcall
xor
push
pop
repz
cmp
inc
dec
xchg
pop
in
jno
mov
push
outsb
push
pop
out
js
lcall
or
loop
in
push
mov
sub
xor
stos
jp
cmc
aaa
lcall
mov
mov
jb
jae
dec
in
bound
mov
cmp
pop
inc
inc
stos
jg
test
es
mov
shrb
int
mov
xor
mov
push
out
mov
js
pop
sbb
sbb
push
in
push
push
mul
call
add
fiaddl
std
lds
push
mov
inc
mov
and
fldl
jp
mov
mov
add
and
cld
call
pop
mov
mov
dec
dec
dec
and
push
or
out
test
std
jmp
sbb
xchg
xchg
sbb
and
xchg
cmp
subb
sar
or
inc
mov
jge
cli
xor
xchg
pop
stc
xchg
icebp
outsl
not
andb
dec
lahf
dec
jp
ss
nop
cmp
pop
int3
or
pop
push
cli
adc
js
aas
clc
cli
adc
in
sbb
xlat
aaa
add
cmp
imul
xor
repnz
mov
stos
lea
xchg
xor
push
incl
mov
loope
jnp
mov
jns
push
popa
icebp
insl
outsl
cmpsb
fnstsw
mov
and
pushl
sub
popl
pop
sub
pop
es
out
cli
mov
jns
jns
mov
inc
sbbb
repz
ja
aas
insl
sub
cli
dec
ds
pop
in
sub
xchg
sub
inc
xor
rcrb
jg
iret
xor
movsl
mov
into
xor
add
jno
imul
mov
jg
mov
insl
enter
dec
inc
xchg
enter
in
jecxz
jg
incl
outsb
lcall
pushf
repnz
pusha
dec
sbb
lock
sbb
decl
push
jg
dec
popf
xchg
mov
aad
or
mov
aaa
push
and
pop
push
pusha
std
decl
push
inc
rorb
cli
jg
int
and
je
or
inc
enter
lcall
test
out
pop
clc
dec
scas
adc
jno
mov
stos
jbe
cmpl
sahf
jg
jno
imul
sti
add
int3
stos
insl
mov
pop
inc
into
sub
xchg
repz
out
cmpsl
pop
mov
pop
les
and
pop
pop
fiadds
sbb
mov
mov
mov
std
pushl
pusha
out
mov
icebp
adc
popa
fiadds
dec
in
inc
in
pop
insl
xchg
dec
sbb
call
pushf
in
shll
sbb
fs
add
jnp
push
pusha
adc
ljmp
shl
and
xchg
sbb
jbe
adc
pop
sarb
adc
sbb
ret
addr16
cmpsl
sub
inc
pop
enter
cmp
insl
hlt
lods
add
and
pop
into
daa
dec
jb
mov
or
push
pop
cmpsl
adc
xor
data16
jmp
fwait
ss
and
push
icebp
jle
cli
mov
jge
jae
sysret
lock
mov
add
pop
enter
in
xchg
movsl
push
mov
fcoml
xchg
ja
aaa
jo
into
jae
adc
mov
incl
inc
rcll
dec
loope
ret
push
push
xchg
push
inc
sbb
adc
xor
cmp
aaa
dec
repnz
add
pushl
mov
pop
std
sbb
arpl
inc
sbb
xor
mov
lcall
mov
adc
outsl
repnz
add
cmp
xor
fcomps
inc
insb
cmp
scas
repz
push
aad
stos
fdivl
push
sti
jp
mov
ret
mov
push
pop
out
dec
data16
fs
mov
lds
cli
lcall
inc
shll
add
mov
add
xchg
lcall
lods
cld
rcll
lea
mov
inc
iret
mov
outsb
pop
arpl
repz
dec
jg
sub
rcrb
push
push
outsb
scas
xor
icebp
bound
mov
jo
rolb
pop
adcb
lcall
call
pusha
in
push
lahf
dec
loopne
cmp
or
pop
repz
pop
inc
mov
pushl
cmp
stos
clc
jb
adc
sbb
inc
bound
loope
jl
mov
dec
nop
fs
in
jo
pusha
shll
stos
je
push
xor
inc
mov
fstps
lock
fnstsw
jp
data16
xor
pop
mov
push
movb
and
in
lahf
aaa
je
das
push
icebp
inc
mov
test
jbe
test
cmp
jle
add
push
cld
ljmp
dec
mov
insl
roll
scas
inc
mov
shll
jl
sbb
cld
cmp
or
data16
incl
arpl
adc
xor
iret
sbb
data16
xchg
aas
pop
lret
lret
test
jbe
dec
and
ret
sub
xor
std
mov
ljmp
sbb
push
cmc
xchg
and
icebp
mov
ret
pop
jecxz
pop
pop
mov
mov
sbb
jecxz
inc
push
stos
dec
dec
and
popa
mov
shlb
mov
dec
xchg
cmp
fdivl
dec
lcall
fistpll
and
stos
out
pop
std
add
inc
test
test
repz
enter
xor
push
std
ljmp
dec
fldt
jnp
test
fimuls
pop
inc
mov
ret
ja
xchg
jnp
mov
ljmp
sti
xor
jp
lahf
push
sti
push
cmovg
daa
dec
out
cmp
mov
push
loopne
test
adc
pop
dec
cld
mov
xchg
mov
cmc
xchg
inc
xchg
cmp
push
pop
lock
outsb
or
aam
jo
lea
sbb
add
sbbb
or
mov
and
lea
bound
xchg
je
addl
push
out
sub
in
cli
iret
jmp
sbb
in
mov
sbb
adc
cs
cmp
push
lcall
inc
icebp
push
sub
mov
jge
stos
inc
ljmpw
adc
dec
xchg
pop
icebp
decl
into
add
sbb
jge
inc
call
arpl
aaa
mov
xor
ds
push
adc
les
xchg
cli
mov
mov
mov
sub
and
or
pop
mov
call
ficoml
inc
das
mov
je
shrb
or
test
add
sarb
dec
addr16
clc
aas
nop
call
cmp
and
inc
mov
pop
ljmp
jle
icebp
adc
pop
push
fisubl
inc
push
out
dec
enter
lcall
mov
pop
jb
ljmp
push
scas
dec
scas
jb
lret
push
in
inc
pushl
inc
je
jb
sbb
std
mov
dec
bound
decl
popa
and
xor
in
cmp
and
pop
adc
sbb
sti
xchg
scas
and
sbb
pop
or
and
jb
adc
jnp
out
push
xchg
sti
pop
jecxz
pushl
push
jbe
adc
ss
adc
add
push
stc
mov
add
jecxz
aaa
push
mov
mov
ficoml
insl
ja
and
inc
jg
loop
or
push
xchg
sub
pushf
les
jge
push
inc
scas
adc
mov
push
push
ret
xor
outsb
pop
jecxz
je
or
test
jmp
jno
loope,pt
jo
and
aaa
jne
sub
mov
xor
mov
sub
cli
inc
std
pop
pop
jl
hlt
dec
and
inc
push
push
lea
decl
adc
inc
aaa
and
or
fs
cli
and
pusha
cmpsb
adc
adc
es
ret
push
jge
fnstsw
push
dec
fildll
les
and
or
jo
sub
and
sub
adc
test
or
out
cli
pushl
aam
jne
pop
cmp
fmul
pop
sbb
incl
sub
leave
xor
sub
mov
pop
sub
int3
ljmp
in
loope
jg
icebp
xchg
cli
aaa
inc
mov
out
push
xor
pusha
into
xor
sub
add
jb
nop
fidivrs
and
inc
mov
sbb
jno,pn
lods
mov
roll
or
or
xor
jmp
sbb
loope
pop
push
out
and
fs
adc
push
cmpsb
mov
sbb
popa
xor
cmp
lods
dec
mov
aam
ljmp
inc
imul
xchg
sbb
pushf
sbb
sub
jg
sub
loopne
je
repz
and
les
into
ja
cmp
out
loop
lcall
push
add
daa
inc
and
mov
fidivs
jmp
mov
leave
mov
decl
test
jno
andl
outsl
cli
jmp
icebp
jle,pn
iret
xchg
sub
sub
pushf
add
fsubrl
ljmp
mov
and
push
sahf
mov
jmp
jno
jns
movsb
sub
push
out
aam
inc
cli
inc
sti
imul
loope
xchg
mov
mov
and
xor
fwait
int
mov
rorb
and
inc
sub
sub
ds
insb
fs
sbb
or
mov
clc
ja
out
jb
out
test
lea
ljmp
pusha
push
je
xor
and
inc
jg
stos
pop
nop
xchg
push
dec
pop
add
mov
xor
mull
pushl
pop
mov
xor
mov
jge
push
pop
add
pop
add
aas
adc
sti
push
push
jae
scas
xchg
jnp
jne
pop
outsl
jmp
or
mov
popa
pop
mov
dec
pop
lahf
mov
movsl
out
cmovns
push
jecxz
mov
and
add
and
pop
dec
sub
mov
in
jae
mov
aaa
inc
dec
cld
push
pop
pop
les
inc
roll
hlt
add
xchg
fs
push
dec
pop
jmp
insb
push
dec
or
push
stc
xor
out
jp
repnz
cmp
mov
push
dec
fimull
push
arpl
es
int
je
incl
into
lret
nop
leave
test
and
repz
aas
mov
imul
das
sbb
clc
cmp
push
mov
xor
decl
pop
ficoml
push
std
jge
fildll
cld
lcall
pop
pop
xor
sub
jbe
lahf
nop
inc
inc
xchg
or
lcall
mov
mov
loop
dec
inc
lods
cli
decl
dec
es
dec
pop
sbb
xor
fdivrl
jbe
in
inc
adc
pcmpgtb
mov
adc
mov
popa
notb
notl
loopne
sub
add
mov
mov
jp
outsb
push
call
and
cwtl
lahf
jnp
push
out
or
adcl
mov
mov
pop
rcll
mov
xorl
out
aaa
sbb
aas
cmp
lahf
movl
sbb
push
jl
lcall
loope
inc
fildll
jl
fsubrl
pusha
sti
sbb
into
xor
cmp
and
adc
jne
pop
push
inc
push
and
idiv
jg
es
and
xor
push
cmp
or
xchg
adc
mov
inc
ret
adc
subb
dec
mov
xor
outsl
push
xchg
pop
mov
push
mov
jecxz
out
out
mov
sahf
sbb
dec
mov
sti
lcall
data16
push
and
cs
int3
sbb
in
add
adc
adc
sbb
sub
pop
adc
push
test
incl
test
cld
daa
pusha
dec
or
mov
out
pop
jmp
sbb
xor
lcall
mov
lods
pop
cmp
mov
mov
xchg
addb
bnd
call
or
mov
mov
dec
pop
pop
mov
jle
icebp
cld
call
pop
jecxz
pop
add
cmp
sbb
add
and
fbld
push
daa
aam
xchg
fisttps
pop
jns
mov
push
sub
cmp
push
xor
jbe
jg
lock
fs
je
or
sbb
decl
outsl
iret
sub
movl
test
mov
lcall
in
cmpsl
in
mov
lret
sub
fucom
push
call
movsb
xlat
mov
js
or
shrb
push
leave
xor
xor
repz
mov
addr16
cs
push
data16
jecxz
shl
arpl
fsubl
inc
xor
icebp
jmp
aas
dec
les
pushw
jns
jne
dec
dec
pop
jne
inc
int3
out
jg
push
xchg
jae
popf
push
jl
mov
test
icebp
cmc
or
lods
fwait
stos
cwtl
mov
xorb
mov
push
test
decl
arpl
cmpsb
cltd
arpl
sbbb
jge
xchg
incl
aaa
pop
sahf
mov
in
mov
bound
adc
scas
fwait
pushf
mov
mov
mov
mov
mov
je
mov
adc
mov
addr16
pop
mov
decl
sub
cwtl
fstl
gs
bswap
mov
mov
mov
test
sbb
adc
ljmp
popa
dec
mov
and
xchg
lret
mov
negb
cmp
or
mov
pushf
test
cld
imul
mov
push
pop
hlt
xchg
dec
pop
inc
jbe
clc
andb
add
dec
test
scas
push
std
decl
inc
data16
and
push
jno
xchg
mov
mov
cmp
jo
or
and
add
out
dec
scas
jno
add
cs
ds
lock
sbb
cmp
cmp
cwtl
loope
testb
int3
adc
call
lods
pop
xor
cli
xor
sub
adc
cmp
sbb
jle
mov
aas
aam
jns
into
or
movsl
movsl
pop
jbe
jbe
sub
dec
xor
out
and
cmpsb
lret
in
lcall
stos
mov
sti
in
gs
out
cmp
fcomip
jmp
in
push
inc
repnz
sbb
out
pause
sub
packsswb
repz
dec
out
jb
arpl
arpl
inc
icebp
arpl
jg
jg
inc
lret
inc
insb
jno
mov
mov
dec
ja
add
out
dec
out
bound
test
mov
imul
push
jg
mov
testb
jmp
je
scas
pusha
pop
sahf
mov
sbb
inc
les
lcall
jmp
dec
cmp
pop
mov
mov
test
cmp
xchg
incl
mov
out
mov
inc
xchg
lods
jp
pop
stos
mov
fwait
decl
push
hlt
sarl
addr16
mov
mov
lcall
pop
cld
lcall
push
jne
popf
xor
mov
scas
mov
pop
test
jge
pop
inc
add
dec
add
or
aaa
dec
xor
test
outsb
pushf
pop
imul
mov
outsl
jmp
xor
stos
dec
pop
sub
popf
inc
push
inc
add
incl
imul
push
mov
dec
add
push
inc
add
js
clc
popa
movb
daa
test
pop
push
push
cmp
mov
cmp
jg
movl
push
sub
ficoml
jbe
pop
dec
out
popa
sbb
popf
push
cmpsb
pop
loopne
pop
fistl
adc
cmp
and
push
sar
xchg
scas
aad
pop
xor
mov
mov
nop
push
jge
push
bound
cld
dec
arpl
incl
mov
iret
xor
out
call
roll
jp
add
out
xor
js
and
sub
enter
das
and
xchg
insl
inc
mov
loop
js
cld
and
or
sbb
dec
dec
jp
cli
sbb
jbe
test
imul
incl
outsb
jb
or
popf
lods
inc
push
mov
pop
mov
scas
jbe
stc
xor
jg
incb
sti
jno
xlat
sub
and
sbb
xor
je
ja
cld
jg
xor
pop
imul
jge
ss
xchg
stos
jbe
cltd
pop
mov
addr16
test
push
push
lea
hlt
and
into
test
ljmp
sahf
inc
inc
iret
dec
mov
test
inc
sbb
cmp
out
mov
inc
mov
dec
ja
mull
sbb
minps
sbb
stos
xor
fwait
ljmp
mov
xor
sbb
negl
push
loope
jne
cmp
cmp
cmp
je
or
add
sub
jl
cmp
cmp
andb
iret
aas
pop
cmp
stos
inc
in
cmp
jb
pop
push
mov
repz
jl
sub
inc
xchg
ljmp
and
pop
ss
ret
push
mov
xor
jne
push
sbb
stos
and
cmp
push
sbb
pop
sub
xor
rolb
cmpsb
dec
pop
movsl
jge
sbb
and
jne
fsub
jmp
fmull
jecxz
jle
repz
andl
call
cld
jg
test
dec
std
xchg
popf
aam
ljmp
fistl
pop
push
in
jo
aaa
lcall
mov
push
das
jbe
xor
cwtl
arpl
mov
aaa
sub
jmp
in
pop
inc
out
and
mov
mov
loopne
data16
stos
stos
outsl
movsb
or
fwait
jmp
data16
bnd
dec
in
mov
rep
mov
inc
push
out
push
push
filds
push
lock
into
inc
ret
or
mov
mov
jle
scas
xor
les
inc
aaa
das
shlb
and
cmp
xor
dec
inc
cmp
cmp
jmp
jmp
rsqrtps
sbb
jno
fnstsw
outsb
rorl
out
jp
inc
sbb
or
incl
dec
jb
sub
and
les
imul
push
pop
lret
call
jmp
es
mov
mov
xchg
push
divl
dec
sar
outsl
in
xchg
or
enter
rolb
lcall
and
jns
jle
cmp
mov
ja
xor
loop
push
cli
incl
jl
pop
push
add
std
lods
ss
inc
nop
mov
jecxz
inc
loop
ja
fists
imull
inc
sub
pop
enter
sbb
std
push
fldenv
xchg
adc
or
out
aaa
cld
or
mov
cmp
lahf
push
jae
cmp
ljmp
mov
jns
fidivs
sub
dec
out
pushl
loopne
enter
outsb
mov
mov
mov
inc
sbb
shlb
cwtl
outsb
push
inc
enter
mov
inc
xlat
shrb
pop
adc
jge
cmc
push
fdivr
add
pusha
adc
outsb
xlat
xor
ss
adc
xor
je
xor
add
and
jge
adc
stos
fistpl
sub
jno
xchg
popa
pop
xor
repz
jmp
dec
sbb
pop
ljmp
jo
xchg
and
sbb
mov
call
push
sub
sbb
rorb
js
aas
stos
divb
outsb
sbb
or
bound
add
xchg
aaa
outsl
jg
imulb
inc
jbe
repnz
loopne
call
lret
mov
gs
addr16
sub
xchg
mov
dec
cmpsb
sar
ja
xor
test
sub
cwtl
dec
cmpsb
and
jp
fbld
sbb
loope
dec
lods
pop
decb
mov
jp
dec
pop
lods
mov
push
popa
add
jmp
dec
dec
in
inc
or
rcrl
mov
loop
enter
aad
clc
push
sar
aaa
jecxz
push
adc
out
aad
out
pop
rcll
add
rcl
fmull
inc
push
cld
out
cld
stc
stos
lret
int3
jno
add
test
jo
jbe
fists
repz
fistl
pop
mov
push
outsl
inc
out
icebp
inc
lock
cmc
or
adc
movsb
js
js
ret
call
xchg
stc
popa
fildll
cmp
shrl
stos
aas
cld
aaa
jl
push
push
ds
sbb
pop
adc
stos
lahf
dec
notb
in
add
jmp
int
out
dec
repnz
xchg
xchg
adc
pop
loopne
faddl
insl
mov
ljmp
pop
shrb
outsl
shl
outsb
enter
xchg
decl
pushl
push
insl
jle
clc
push
fldt
adc
xchg
xchg
fcmovnu
pop
lds
stc
pop
out
lods
stc
int
jmp
xlat
push
filds
or
lods
dec
add
rolb
mull
flds
jb
inc
pop
adc
das
clc
outsl
lcall
inc
ja
divl
jmp
jg
jmp
jge
in
jecxz
shl
into
leave
loopne
or
xchg
adc
cli
ds
sbb
pmaxub
cmp
insl
jg
ja
mov
enter
insl
out
inc
mov
mull
or
xchg
fnstsw
fadds
xchg
xor
sub
adc
push
pop
pop
movsl
mov
dec
out
pop
jle
jg
fcomip
out
adcl
fs
fsqrt
mov
int
sbb
inc
std
es
fs
jecxz
fwait
decl
jg
add
fwait
cmp
vpackuswb
mov
jmp
int3
jg
inc
stos
ja
xor
push
pushf
scas
cli
mov
fbld
add
and
dec
adc
insb
leave
jns
mov
das
mov
dec
fcoml
add
fsubrl
enter
sarb
lcall
sti
into
rorb
out
push
ret
sahf
pusha
xchg
in
add
leave
and
and
mov
push
add
jbe
pop
sti
std
gs
jnp
push
push
sahf
jmp
icebp
cli
dec
lods
repz
jl
adc
push
push
call
cld
xchg
lret
into
jecxz
nop
dec
movsb
xor
push
lret
jmp
aad
jae
popa
pop
cmp
pop
cli
mov
ljmp
mov
jo
pusha
jae
arpl
xor
shrb
and
cltd
pop
add
ja
fldenv
sub
out
adc
in
fsubrl
loope
jge
shlb
inc
ss
mov
xchg
inc
mov
and
mov
sub
sahf
push
incl
cmp
sbb
stc
cmp
incl
jo
js
sub
pop
mov
jne
and
insb
adc
mov
xor
jl
dec
mov
outsl
clc
call
insb
dec
leave
mov
mov
lock
ja
xor
ljmp
int
stos
aaa
movsb
cmp
push
and
or
gs
mov
inc
push
test
push
xchg
xchg
scas
xor
stc
inc
scas
and
inc
cmp
xor
lahf
mov
inc
jns
pop
jg
pusha
xchg
and
arpl
rcrb
dec
xor
sub
in
jo
mov
call
mov
xor
mov
cld
jg
mov
pop
nop
mov
pusha
inc
ja
or
jge
mov
jle
cmp
cmpsb
decl
jne
test
mov
fildl
repz
xchg
jno
cmpsb
incl
push
sbbl
mov
leave
popa
das
gs
mov
mov
add
sarl
loope
mov
neg
push
push
adc
inc
cmp
lcall
add
push
inc
sbb
jnp
aaa
sbb
imul
mov
inc
jbe
jnp
push
insl
push
popf
outsl
sar
xchg
call
adc
gs
jcxz
jo
ss
pop
lds
jbe
call
inc
and
mov
outsl
cmp
negb
imul
dec
lret
push
push
pushl
push
out
out
dec
add
aas
shll
sub
inc
push
hlt
stos
bound
lcall
fdivl
lret
pop
or
or
and
pop
mov
sub
lock
jno
outsl
dec
xor
pop
jp
pusha
or
or
dec
inc
add
stc
xor
dec
jns
and
mov
sbb
cmc
lcall
popf
mov
ds
xchg
jle
ret
dec
mov
out
test
gs
dec
mov
into
jl
out
sbb
add
stc
or
cmp
xor
shlb
cmp
cmp
jge
add
push
sbb
adc
sub
pushw
shrb
cli
inc
loopne
nop
xchg
jbe
in
push
int3
out
dec
in
ja
push
in
jbe
rcll
dec
loope
jp
xor
mov
out
push
clc
push
aaa
mov
insb
fldcw
cli
sub
push
jge
call
push
ljmp
cmp
enter
rcrb
pushl
jmp
push
xchg
shrb
push
movsl
xor
imul
jae
aaa
adc
inc
jo
sbb
out
pop
ret
loope
je
loop
push
adc
fdivl
pop
sub
jno
lea
push
pop
stc
ds
mov
xor
add
out
faddp
mov
xlat
ljmp
xor
and
inc
push
inc
dec
fiaddl
cmp
jle
loope
mov
xor
mov
fs
test
loope
ds
fwait
loop
outsl
clc
ljmp
xchg
mov
xor
mov
pop
jecxz
notb
les
lcall
rolb
adc
sbb
popa
dec
sub
dec
ret
pop
std
sbb
jg
inc
in
xchg
xchg
pop
les
adc
cmp
pushf
int
push
push
sti
lea
aas
dec
dec
cmp
mov
jge,pt
inc
je
and
jle
sub
outsb
cmp
xor
sub
jg
lods
mov
xor
add
leave
xor
cld
call
and
jns
push
push
mov
sbb
jo
addr16
jl
pop
inc
cld
jmp
clc
sub
sub
lods
lcall
xchg
ss
js
repz
cmp
insb
lret
data16
sub
popf
cmp
pop
adc
fs
or
xchg
adc
xor
lods
das
lods
pop
sub
decb
xor
lret
sbb
adc
scas
fisubrl
xchg
and
adc
and
mov
popa
mov
shlb
xor
adc
out
nop
adc
adc
ljmp
push
mov
cmp
add
ljmp
push
inc
dec
push
mov
mov
and
fdivrl
sar
mov
xor
jecxz
popa
add
int
outsl
push
xor
mov
inc
daa
loope
cmp
test
pop
push
imull
dec
test
in
or
xchg
add
loopne
aam
ljmp
inc
jp
std
aas
arpl
out
jo
incl
push
inc
out
and
cli
or
sbb
dec
jbe
dec
push
jmp
xor
leave
sbb
into
jmp
sahf
sub
push
mov
cmp
mov
jecxz
mov
lea
sbb
imul
pop
pop
xor
xchg
stos
test
ret
movsb
push
adc
mov
jle
cld
test
sbb
pushl
cmpsb
ds
fs
pop
jne
pop
pop
and
stos
stc
leave
sbb
lods
pop
pop
mov
iret
mov
es
pusha
test
mov
push
insb
out
test
cld
rcr
fisubs
outsl
mov
dec
test
ljmp
les
xchg
into
and
add
cmp
stc
sbbb
mov
add
or
into
xor
mov
xor
sti
cmp
pop
sub
dec
xchg
pop
pushf
sub
test
sbbl
adc
add
iret
and
loop
add
lods
add
std
and
incl
jo
sti
sbbl
mov
insl
stc
and
js
jne
outsb
xchg
and
decl
cmpsb
aas
jno
lea
ja
xchg
jg
imul
std
push
lahf
pop
dec
jp
adc
scas
or
or
mov
push
inc
jae
pop
daa
imul
bound
push
inc
mov
mov
and
incl
insl
gs
ret
js
mov
xchg
inc
inc
shrb
pop
mov
arpl
sub
sbb
jmp
ljmp
xchg
mov
aaa
jne
adc
mov
push
cli
cmp
jg
incl
dec
std
xchg
das
mov
jne
imul
call
inc
pop
cmp
arpl
xchg
popa
popa
adc
ljmp
inc
xor
inc
mov
fcompl
mov
cli
lcall
movsl
inc
lcall
push
push
dec
mov
push
hlt
mov
add
aaa
xor
jge
jno
push
pushl
dec
pop
xchg
jo
and
in
jl
push
or
jge
jb
jle
fs
jg
dec
fucomip
jmp
bound
fwait
adc
jns
cmp
pushl
pop
call
repz
dec
pop
inc
daa
les
insb
gs
add
sahf
fldl
sbb
and
jecxz
dec
or
pop
xor
daa
xorb
pop
enter
fsubrs
or
lcall
push
mov
xchg
and
out
movsl
xlat
xchg
mov
mov
loope
dec
jge
mov
test
call
inc
inc
cld
or
inc
leave
lods
xchg
add
push
out
inc
mov
jmp
sbb
dec
xchg
mov
call
jg
jl
jno
mov
push
shlb
push
sbb
adcb
mov
pop
inc
mov
lods
jge
cmp
and
ss
xchg
jecxz
ja
lock
or
xor
test
push
jb
lcall
sti
mov
inc
ret
scas
jecxz
inc
jbe
or
sub
xor
and
mov
fdivrp
jg
lock
fldenv
adc
lahf
jl
loopne
outsl
pop
call
jge
or
pushl
dec
rclb
in
push
aas
sbb
inc
cmc
or
mov
cld
scas
xchg
mov
jle
notb
adc
and
incl
lahf
idiv
pop
out
push
push
repnz
adc
inc
fstpl
test
inc
add
sbb
pusha
rclb
cmp
cmpsb
adc
mov
jecxz
jle
flds
push
orb
inc
xor
push
xchg
jg
fs
push
mov
cld
xchg
xor
jns
out
out
incl
dec
sbb
in
daa
movsb
push
push
jp
and
xor
repz
call
xor
loop
pop
pop
mov
push
inc
cli
out
pop
rcrb
add
jno
out
into
inc
icebp
adc
add
adc
mov
jnp
add
std
cmp
lea
sub
mov
addb
cli
cmc
mov
mov
push
out
into
stos
lcall
jns
inc
out
imul
mov
fcomip
ljmp
mov
loope
push
fldcw
in
push
inc
call
sti
push
popa
lds
ljmp
out
adc
pop
ja
lcall
ret
xor
in
or
jmp
out
lea
mov
sti
sub
mov
lcall
mov
ss
dec
cmp
js
sub
decl
cmp
fildll
sbb
movsl
and
mov
lcall
andb
out
jb
mov
push
add
call
jne
cmp
test
xchg
adc
add
xor
popa
ds
ret
sub
mov
iret
mov
push
adc
mov
lods
ret
ljmp
jp
mov
jle
or
mov
sbb
stos
lcall
inc
mov
int
pop
inc
shlb
xor
or
hlt
aas
lods
jp
add
adc
mov
xchg
or
adc
or
out
lods
popa
xlat
sub
outsl
mov
add
dec
or
pop
jp
into
jo
ds
out
jle
push
pop
jg,pn
incl
stc
js
and
in
pop
ret
inc
out
jns
mov
icebp
dec
mov
aas
mov
nop
mov
add
ljmp
sbb
dec
rorl
xor
repnz
jae
jo
lods
sub
mov
sbb
xchg
ss
mov
pop
mov
scas
adc
lods
test
pop
and
mov
mov
enter
inc
mov
inc
sub
ja
sarl
mov
lds
lcall
mov
push
sub
es
jne
icebp
sub
cmp
mov
insb
sti
push
ret
push
les
popa
imul
icebp
pop
sbb
int3
fdivl
fs
cld
fwait
icebp
outsl
or
push
pusha
mov
mov
pop
push
inc
pop
in
pop
incl
out
sbb
ror
mov
clc
cmp
sub
insl
pushl
pop
pusha
add
xor
pop
negl
xchg
fildll
and
xchg
mov
cmp
jl
adc
jns
pushf
mov
lock
jecxz
inc
jp
jo
jb
movsl
cmc
popa
xchg
mov
bound
adc
ljmp
sbb
aam
outsb
fistpll
jp
inc
test
cltd
call
addb
hlt
mov
push
dec
or
or
loope
outsb
adcw
cmp
cmp
xchg
push
mull
dec
jo
xor
mov
mov
mov
std
cmp
push
xor
push
ds
adc
cmpsb
push
decl
sub
inc
jge
int3
dec
or
addr16
mov
adc
cmp
ljmp
mov
cmp
int
inc
cmc
insb
scas
jge
pop
jb
stc
jle
jmp
jnp
popa
push
loop
sub
addr16
cmp
das
dec
es
jp
stos
pop
xchg
hlt
mov
and
dec
icebp
lret
js
xchg
fists
jge
int
pop
inc
push
cli
push
pop
popa
movsl
push
xchg
scas
lcall
jle
and
dec
fucomi
xor
and
pop
lret
call
or
lcall
push
sahf
fisubs
jl
insl
shlb
iret
xchg
lock
xor
loope
inc
test
ficoms
pop
push
adc
jg
out
mov
hlt
xchg
mov
pop
or
push
and
lods
push
jle
pop
xor
pop
inc
xchg
shlb
repnz
push
lcall
jmp
xor
sub
int3
push
adc
jne
sbb
cltd
or
push
add
and
add
mov
add
cmc
stos
pop
add
sbbl
push
xchg
fimuls
inc
bound
add
out
scas
insl
test
xchg
or
sub
fstl
imul
mov
nop
ja
push
in
addr16
cli
mov
push
arpl
xchg
push
dec
out
sbb
sub
jp
jle
cmpsb
scas
mov
ret
or
push
iret
aam
fsubrs
hlt
mov
stos
aam
in
out
leave
lock
loop
cwtl
stos
adc
and
mov
jo
dec
jo
mov
imul
bound
shrl
mov
fidivrl
dec
pop
mov
ret
inc
ljmp
cmpsb
int3
add
and
test
xor
std
inc
movsl
outsb
aas
popa
std
jb
shll
sub
ljmp
arpl
or
cltd
mov
shlb
pop
xor
pop
push
mov
rcll
xchg
imul
outsl
jp
stc
scas
hlt
adc
dec
sub
adc
shll
pop
cli
jmp
testb
sbb
and
inc
pop
jge
pop
std
in
imul
fidivrs
jno
insb
inc
pop
cld
out
pop
xchg
lds
pusha
outsl
jno
jp
loopne
sub
out
sti
jp
pop
xchg
adc
idiv
push
jne
inc
fldt
sub
aad
jmp
int
lcall
push
sahf
aam
push
scas
sbb
mov
pusha
add
div
inc
adc
pop
mov
mov
cmpsl
dec
test
pushl
das
jecxz
jl
cmpb
or
mov
xor
push
inc
mov
push
dec
call
mov
sbb
movsl
lcall
aas
insl
icebp
test
pushl
and
dec
and
sbb
insb
rcll
clc
mov
inc
lret
icebp
js
or
xor
pop
sub
jae
stos
adc
loopw
adc
push
es
cmpb
adc
push
push
in
inc
imul
jp
lret
addb
inc
push
movsb
dec
ljmp
cmc
jg
stos
cli
and
adc
sub
data16
sar
xchg
pushl
fs
add
mov
sbb
aas
in
pop
sbb
mov
adc
adc
xchg
in
cmp
shll
pop
cmpsl
addr16
lret
clc
adc
loopne
pop
jecxz
jp
pop
lods
xchg
aas
xchg
mov
filds
xchg
sbb
dec
aaa
into
mov
mov
nop
cli
mov
and
out
inc
int3
mov
jmp
jbe
fwait
sbb
arpl
arpl
sub
popf
xchg
and
fs
out
in
xchg
push
dec
stc
mov
pop
inc
frstpm(287
dec
pop
lods
xor
push
jmp
inc
lret
mov
mov
jge
xor
mov
ret
fwait
xchg
scas
neg
fsubrl
ljmp
daa
sarl
lret
into
in
scas
fcomip
repnz
hlt
xchg
pusha
jmp
loopne
cmp
and
or
stos
stos
scas
mov
fidivrs
xchg
push
pop
out
mov
out
out
inc
in
les
mov
add
push
mov
lods
enter
jp
lds
jmp
arpl
mov
xchg
jnp
popa
fadds
xor
divb
outsb
popf
cmp
jnp
psubsw
push
lahf
push
mov
push
mov
enter
ljmp
sub
cmp
scas
xor
dec
mov
movsl
cmpsl
and
push
mov
pop
adcl
push
cs
fs
jl
lcall
test
gs
and
mov
out
std
dec
pop
or
fldcw
jb
andb
push
bound
call
sbb
sbb
das
ret
xor
adc
xchg
out
imul
or
sub
lcall
jl
fcomip
pop
les
adc
push
mov
data16
dec
inc
mov
jns
dec
push
les
push
les
insl
popa
and
jle
jne
sahf
adc
leave
or
xlat
test
mov
movsb
rorl
test
mov
jns
xor
sbbl
mov
lret
test
push
ss
adc
test
ljmp
stc
cs
into
stos
add
push
sub
aam
push
push
jmp
inc
or
xchg
adc
test
sub
xchg
adc
xchg
shlb
jp
int
jl
sub
jmp
cmp
and
fs
sti
and
add
sbb
mov
dec
mov
pop
dec
in
pop
inc
std
adc
ljmp
cmp
nop
test
cs
sub
fwait
mov
cmpsb
sbb
sub
push
pusha
pop
cmpb
jnp
gs
mov
jns
push
inc
inc
lods
dec
shrb
inc
shrl
call
or
scas
pusha
sahf
leave
adc
xor
int3
cmpsl
mov
ljmp
dec
hlt
xchg
add
ja
lcall
in
pop
cmp
mov
mov
mov
mov
dec
pop
ret
xor
adc
call
cwtl
test
stos
bound
sbb
mov
jns
insl
mov
loope
test
stc
mov
int3
stos
sbb
lcall
and
scas
outsb
sbb
jg
shlb
xchg
and
popf
and
sahf
in
jge
xor
jg
rcrl
dec
push
pop
pop
mov
mov
test
ret
cmpsb
cmp
popf
cltd
sbb
test
cmp
adc
aas
jle
pop
nop
and
sarb
lcall
and
mov
pop
adc
or
imul
lret
or
outsb
dec
cmp
pop
add
mov
int
inc
inc
stc
popf
jle
subb
pop
pushf
gs
mov
inc
add
decl
dec
add
int3
pop
jbe
push
ret
xchg
sahf
enter
adc
push
cmp
xchg
ljmp
push
sbb
jo
je
mov
ss
or
lods
adc
das
gs
bound
xor
popa
imul
fs
xchg
cltd
pop
dec
aaa
pusha
xor
dec
mov
jbe
mov
in
pusha
cli
cmpb
mov
outsl
mov
jle
fbld
adc
aaa
lahf
jle
movsl
scas
add
addr16
inc
dec
cmp
pop
add
cmp
jge
xchg
ret
push
jo
orl
decl
fwait
jae
mov
stc
test
xorw
xchg
bound
ljmp
fdivp
pop
daa
sti
mov
push
push
dec
mov
jge
out
inc
jmp
leave
inc
mov
cmp
stos
dec
sub
and
mov
ficomps
xchg
cmc
mov
cwtl
pop
lret
mov
scas
cli
jg
add
fdivrl
mov
add
ja
cmp
test
xor
cs
fcomip
mov
stos
shlb
daa
mov
push
xchg
fsts
mov
aas
jp
mov
xlat
outsl
dec
mov
gs
dec
xor
fcoms
scas
cmpsl
mov
push
cmp
jmp
sbb
add
insb
xlat
mov
and
lods
dec
es
and
data16
mov
ljmp
imul
dec
fwait
dec
je
sbb
dec
nop
pop
std
mov
inc
arpl
cmp
inc
nop
shlb
pop
pushf
ljmp
xchg
cwtl
sbb
dec
jmp
mov
sahf
push
push
jno
aad
test
adc
lret
mov
scas
imul
dec
dec
xor
mov
data16
cmp
mov
addr16
sbb
movsl
cmp
call
dec
popa
push
into
in
dec
dec
jp
ja
push
sarb
loop
mov
and
aad
addr16
mov
push
sbb
and
add
popf
inc
push
aaa
lcall
insl
insb
test
mov
stc
movsl
xor
xchg
push
sti
pushf
sti
pop
jle
ret
pop
ljmp
test
mov
iret
mov
mov
push
loop
movsl
pusha
pop
je
in
mov
xchg
or
jmp
cli
jmp
or
jnp
out
xchg
ljmp
nop
ret
out
jno
stos
lcall
leave
mov
int3
ret
movsb
xchg
mov
fwait
mov
call
mov
cld
mov
sti
mov
mov
mov
stos
fdivr
test
fdivrs
outsl
mov
stos
mov
psubusw
movsb
fwait
jp
rol
mov
pushl
notb
shr
mov
xchg
adc
fcmovnbe
cmpsl
scas
xchg
test
mov
mull
push
mov
mov
inc
ja
lock
mov
scas
mov
cmp
jmp
lock
inc
dec
xchg
cmpsb
into
fwait
mov
push
lret
adc
jb
or
mov
push
imul
std
mov
cmpsl
mov
cmpsb
inc
insb
add
stos
xor
cli
mov
daa
jae
sub
lcall
ljmp
out
jge
xlat
addr16
or
push
addl
mov
and
loop
pop
decl
mov
dec
push
gs
stos
es
lods
addr16
jne
pop
mov
jns
cmp
sar
incl
cmp
lods
mov
inc
xchg
icebp
xchg
cmp
mov
pop
inc
mov
imul
cwtl
lds
pop
idiv
aas
dec
lahf
xor
test
bound
pop
adc
aam
decl
js
inc
addr16
jle
mov
dec
lret
test
popf
cmc
and
mov
push
pop
jmp
jne
jmp
ret
cwtl
jmp
inc
sbb
xchg
mov
rorl
loop,pt
mov
cmp
imul
inc
xchg
adc
mov
inc
lcall
push
jmp
das
push
xchg
mov
push
clc
add
mov
or
dec
fst
ljmp
cltd
outsb
dec
pop
mov
enter
jp
aas
movsb
in
incl
inc
fs
lahf
mov
jbe
mov
dec
jo
fbstp
cmpsb
inc
mov
inc
dec
shll
push
inc
pop
mov
jl
cld
ljmp
mov
dec
mov
stos
add
dec
push
jmp
lret
pushl
pushl
pop
in
pop
dec
aas
outsl
mov
outsl
gs
sub
or
mov
scas
inc
fisubrs
xor
nop
jae
jno
pop
jb
mov
push
xor
dec
ljmp
in
jnp
xchg
mov
cmpsb
outsl
dec
mov
xchg
pop
xor
icebp
das
push
es
mov
mov
pop
push
sbb
dec
pop
mov
scas
jns
in
fidivrl
jne
mov
mov
repz
ja,pt
cwtl
repnz
testb
mov
sbb
push
incl
popw
imul
incb
xchg
repz
adc
jmp
bswap
sub
dec
push
stc
popa
dec
jle
imull
call
loopne
arpl
add
jno
cmc
xchg
dec
pop
mov
dec
xor
out
sahf
pop
push
out
sbb
movsl
add
mov
add
pop
or
or
daa
add
rorb
mov
imul
and
adc
and
js
movsl
or
call
mov
sub
mov
cmp
and
and
test
cld
cmpsb
sbb
xor
decb
mov
sub
pop
ljmp
fwait
or
mov
mov
mov
les
cli
gs
and
lods
or
outsb
sbb
scas
std
aaa
lods
jg
jle
movsl
cmp
xchg
mov
pop
sti
stos
cmp
lcall
incb
inc
mov
decb
popa
cli
add
mov
cmp
push
out
mov
aad
imul
hlt
enter
ljmp
pop
jecxz
ficompl
inc
repz
ljmp
inc
fidivs
inc
insb
pop
lds
jo
push
dec
jecxz
mov
pop
cmpsb
insb
cmp
out
cmpl
bswap
dec
cmc
jge
jl
fdivs
mov
cli
push
loope
fs
cld
pop
in
je
lret
xchg
call
jp
inc
vpunpckldq
adc
out
xchg
dec
push
int3
sub
mov
push
repz
scas
mov
je
data16
in
das
shrb
les
push
push
jne
arpl
mov
jbe
push
cld
cmp
inc
mov
cmpsb
lcall
sub
in
xchg
mov
dec
dec
out
push
push
filds
and
and
dec
adc
jbe
dec
data16
daa
js
push
inc
xchg
jae
into
dec
pop
lds
clc
pushl
jp
dec
aas
inc
and
es
imul
outsb
inc
xchg
add
test
les
mov
repnz
pop
orb
pushl
xchg
sub
push
sahf
leave
cs
out
push
adc
inc
or
mov
dec
call
incl
jns
dec
mov
in
test
mov
xor
push
cwtl
aas
insb
loope
movsl
fs
movsb
aam
jl
mov
test
cltd
sbb
inc
je
stc
lcall
lea
subb
shrl
lds
aad
adc
cmpl
xor
fildl
xchg
outsb
sub
or
fadds
sbb
insl
jmpw
imul
jmp
ljmp
inc
test
cmp
outsl
push
jne
sub
jb
cli
int
dec
push
pop
popw
frstor
jb
cmp
iret
push
leave
inc
out
push
and
cli
das
out
sub
xor
mov
pop
fsubs
inc
pop
ja
inc
cmpsl
dec
arpl
mov
mov
imul
xchg
xor
fs
jb
inc
sahf
ljmp
push
xor
je
outsl
or
imul
js
mov
cwtl
add
decl
lock
imul
adcb
cmp
jb
test
decl
pop
push
insb
cltd
jno
lea
ss
js
adc
mov
pop
sub
mov
call
mov
sub
sbb
mov
movsb
mov
out
cs
imul
mov
std
outsb
shll
sbb
mov
mov
lods
adc
push
ret
ret
mov
xor
cli
lcall
in
aas
addr16
or
xchg
cmpsl
inc
cmpsl
jg
sbb
sbb
sbb
mov
gs
decl
enter
stos
or
lea
push
gs
push
adc
sub
jp
dec
dec
movsb
pusha
imul
outsb
xchg
push
subb
jp
mov
xor
inc
fstps
mov
jb
inc
sar
dec
mov
mov
cmp
cmp
lods
ja
xchg
cmp
out
cmpsb
imul
int
mov
dec
cmp
jg
incb
popa
sbb
int3
sub
or
sahf
mov
mov
test
aas
pushf
adcl
mov
adc
mov
mov
mov
cmp
out
xor
lock
jnp
inc
jg
cs
add
mov
or
fisubl
mov
dec
popa
aam
imul
scas
les
sbb
fnstenv
adc
decl
pop
pop
pop
xchg
out
pop
std
xchg
pop
push
inc
push
frstpm(287
push
imul
outsb
outsb
movsb
test
decl
bound
jns
insb
cmp
mov
dec
xchg
and
inc
mov
testb
or
aaa
shlb
cmp
mov
jp
js
incl
add
repnz
aaa
insb
jp
mov
push
push
std
call
ret
daa
movsl
cmpsl
xchg
fs
test
jo
std
pop
je
pop
sarb
xor
decl
sub
mov
mov
adc
jb
fistps
inc
jb
jns
xor
decl
in
mov
test
bound
sbb
incb
mov
push
movb
imul
cmp
mov
jmp
inc
inc
lea
dec
xchg
insl
and
mov
jmp
sub
lods
push
adc
sub
push
arpl
cmp
out
push
dec
hlt
in
add
sbb
jl
shll
aaa
cli
xor
cmp
mov
lret
xor
mov
xor
adc
ljmp
dec
stos
push
dec
sti
cltd
inc
or
inc
cmp
outsb
cli
call
loop
adc
cmpsl
insl
mov
adc
add
push
push
jp
cmp
ljmp
add
and
loop
cwtl
test
ds
imul
jmp
jbe
sub
jnp
pop
leave
cmp
stos
fwait
mov
test
xchg
push
mov
cs
push
push
sbb
sbb
sbb
sti
pop
imul
sar
jmp
add
ds
std
and
cs
les
fwait
inc
adc
sahf
dec
loopne
decl
fiadds
mov
popa
test
or
clc
sbb
out
ja
adc
and
incl
and
and
xor
pop
rolb
cmpsl
nop
fsubrl
jb
aam
push
add
cmp
cmp
sbb
xchg
shrl
pusha
js
in
cmpsb
or
mov
loop
inc
inc
cmpsb
jle
sub
dec
cmp
cmp
sar
push
out
mov
xor
sbb
decl
std
xchg
scas
cli
into
shlb
mov
insl
rcll
xchg
into
add
jmp
test
testl
popa
xchg
push
add
pop
bound
jae
aas
clc
pop
out
scas
movsl
imul
push
xor
inc
pop
clc
imul
stos
hlt
jae
push
xlat
sub
dec
xor
inc
dec
jno
std
adc
add
adc
pop
jmp
lcall
call
pop
jnp
pusha
int3
add
in
jae
out
aas
push
sbb
jno
pop
ljmp
xchg
in
pop
insl
gs
ret
sub
add
push
mov
rorl
call
mov
jp
push
dec
xor
arpl
jns
loope
pop
lcall
mov
aam
inc
dec
pop
aas
movsl
inc
arpl
jle
jl
lret
sahf
cmp
push
lods
add
sbb
cmp
or
mov
std
incl
pusha
dec
jne
jge
inc
das
jbe
push
dec
push
ljmp
inc
enter
add
icebp
jg
push
pop
movsb
icebp
pushl
arpl
ljmp
inc
lods
jg
or
add
lcall
jae
fs
mov
xchg
dec
inc
pop
cmpsb
jge
les
jle
add
movsl
orl
push
mov
imul
pop
fbstp
lock
inc
aas
cmpsl
push
dec
jnp
jae
jns
rcr
and
push
scas
dec
addb
scas
icebp
out
mov
push
jg
ds
push
insb
push
fbstp
pop
pop
xchg
jg
out
dec
sti
das
dec
imul
and
mov
inc
insl
pop
fwait
jmp
adc
scas
fbld
xor
inc
repz
inc
jbe
and
scas
enter
mov
mov
repz
adc
add
cmp
xor
ja
mov
test
call
das
mov
pop
mov
push
jb
sub
mov
ret
xor
loope
pusha
shl
add
sbb
ljmp
js
push
pop
sub
dec
pop
sbb
or
into
adcl
ja
test
fidivrs
lcall
pop
test
pop
adc
inc
loopne
mov
sarb
leave
mov
fsubrl
cld
cwtl
lcall
mov
xchg
mov
jb
ss
pop
jbe
pop
pop
jb
jae
sbb
xor
and
mov
popa
icebp
or
sbb
add
lock
add
dec
pop
mov
orb
scas
xchg
loope
lcall
lock
in
adc
or
jecxz
ret
mov
lea
cli
xchg
ss
adc
xor
lods
fists
push
sbb
cli
and
ss
mov
jb
pop
stc
nop
pop
test
js
dec
cmp
lcall
and
pop
mov
lea
cmp
stc
jbe
sbb
imul
jle
andb
fwait
xchg
cld
cmp
sub
adc
test
clc
or
incl
cld
sub
aas
pop
adc
or
repz
or
ljmp
xor
out
mov
jnp
mov
cmp
xchg
stos
dec
push
enter
and
out
inc
cmp
outsl
leave
mov
xchg
lods
ret
adc
enter
mov
push
out
mov
pop
test
adc
out
inc
fmul
adc
decl
cli
sub
xor
loope
jle
xchg
push
aaa
stos
int3
adc
ret
decl
cmp
mov
push
sbb
leave
mov
push
push
sbb
daa
lods
mov
mov
aaa
pusha
int3
das
jl
xor
adc
fisttps
push
bound
inc
push
adc
pop
push
mov
dec
sahf
imul
mov
enter
in
movsb
xchg
mov
jle
loopne
ljmp
aad
out
mov
pop
sub
out
push
mov
pop
nop
js
sbb
vpsubb
sarb
inc
stos
icebp
mov
inc
cld
sub
out
cltd
lds
sbb
test
lds
std
das
dec
ret
out
push
push
imul
lret
imul
inc
pusha
aas
pop
incl
dec
jmp
cmpsb
fnsave
pop
mov
xchg
inc
push
fsubl
popa
in
test
icebp
jmp
aas
outsb
das
dec
sub
cmc
lock
and
les
pop
sbb
sub
add
or
jmp
mov
add
mov
jne
xchg
inc
cmp
sub
hlt
sbb
or
jae
inc
and
cmpb
cmpsl
push
loopne
sar
sbb
leave
cmp
inc
jle,pn
cmp
or
push
cwtl
cmp
in
adc
popa
lds
inc
fsubl
inc
inc
cmp
or
jb
mov
and
nop
mov
adc
and
fisubl
decl
dec
pop
dec
lds
cld
adc
ret
push
inc
std
and
daa
bound
adc
fwait
call
pop
test
mov
testb
jns
sarb
jp
test
lods
sub
and
stos
scas
fs
dec
dec
and
mov
or
lods
repz
or
call
pop
mov
leave
push
cmp
jg
dec
rorl
jp
push
frstor
push
das
adc
mov
test
fcoml
decl
and
bound
imul
test
inc
sbb
repnz
push
aas
sbb
jmp
ss
cmc
jl
stc
sbb
lods
xchg
movsb
mov
xor
out
loop
popf
ret
sub
outsb
push
jl
jp
add
mov
push
xchg
dec
xchg
jo
scas
jo
sub
xchg
pop
lods
dec
lods
or
call
in
jno
fidivs
stc
jne
adc
add
xchg
in
fcomps
inc
outsb
mov
or
cmp
xor
loopne
in
jnp
mov
aaa
call
std
dec
clc
inc
jp
mov
repnz
and
movsb
inc
sti
sub
test
xor
jge
les
repz
insl
in
stos
add
pop
mov
pushl
add
sbb
fadds
or
cmp
pop
inc
icebp
adc
jmp
incl
nop
in
xchg
ds
int
out
ljmp
push
xchg
decl
call
sbb
and
push
loopne
and
dec
push
daa
mov
mov
mov
mov
mov
loope
jp
jbe
pop
jmp
in
bsf
inc
fs
dec
push
leave
push
jg
icebp
fcompl
sbb
sti
cld
mov
inc
push
xchg
das
push
xor
push
inc
stos
aas
out
xchg
ds
fbstp
mov
js
cmp
mov
dec
pop
jmp
pop
lret
cmp
sbb
cmp
jle
push
cmp
cmp
das
cmp
cmpsb
insl
in
push
leave
xor
fdivrl
mov
and
xor
and
xor
or
cmp
call
jne
popf
data16
and
addl
cli
lods
jle
decl
pusha
mov
int3
sub
cmp
cmp
adc
pushl
cld
jnp
cmp
ds
in
sub
pop
sarb
enter
incl
cli
and
or
sub
jg
daa
push
iret
sub
push
shll
push
insl
add
je
cmp
cmpsl
dec
int
decl
incl
inc
testl
into
lcall
outsb
lret
call
xchg
sub
sub
gs
das
pop
negl
scas
xlat
outsl
add
sti
in
mov
xor
mov
std
mov
and
adc
jo
adc
in
mov
repz
pop
fbstp
sahf
jno
and
mov
add
bound
jg
decl
xor
pop
lock
xor
dec
imul
ds
data16
cmpb
incl
push
inc
jl
popa
jae
fwait
ret
xor
or
stos
mov
jp
in
inc
loopne
scas
popa
xlat
xor
popa
push
inc
xor
and
xor
or
stos
pop
movsb
push
loope
lahf
cltd
adc
sbb
jne
rorb
fidivl
jmp
cmpsb
sub
fs
sbb
adc
pop
sub
ret
fistl
lret
sub
pop
insb
decl
add
std
jb
cmp
insb
mov
and
mov
jmp
or
stos
ja
pop
mov
rorb
mov
subl
decl
cmpsl
hlt
mov
test
push
ljmp
out
cmc
aas
mov
sbb
xor
repz
xor
lret
add
mov
leave
cmp
jne
xor
or
ficoms
jmp
jnp
xchg
adc
ucomiss
push
xchg
std
mov
mov
lcall
and
inc
in
mov
xor
add
jbe
jns
jb
cs
mov
loopne
pop
out
jge
add
js
push
test
pop
add
mov
mov
mov
cmp
fwait
cli
mov
pusha
adc
in
jns
mov
push
inc
adc
and
push
decb
mov
push
insl
and
jg
xor
gs
pop
dec
mov
pop
pop
shrl
push
aas
add
hlt
jg
daa
int3
xchg
int
mov
jb
add
aaa
mov
jge
push
ljmp
arpl
imul
enter
loop
incl
js
cmpb
xchg
mov
cwtl
loop
pop
out
mov
mov
xchg
sarb
adc
jp
int3
mov
xchg
pop
out
filds
clc
mov
out
jle
dec
mov
add
sarl
cmp
add
into
jo
in
je
aaa
add
call
push
mov
out
mov
jae
cmp
sbbb
in
cwtl
sahf
ljmp
ljmp
push
jnp
das
stos
jno
inc
fdivrl
cmpsl
lea
dec
int
mov
cmp
test
push
cmp
jo
cmp
cmp
jbe
jae
inc
xor
and
mov
lcall
or
mov
xchg
or
sub
lcall
jno
cmpxchg
cmp
iret
mov
mov
lcall
add
cmpl
mov
xlat
lcall
dec
adc
pop
shrw
jnp
arpl
push
xchg
push
jne
cs
mov
jno
push
or
and
out
xchg
dec
jae
hlt
xchg
jo
dec
in
aas
push
mov
jne
test
sub
sub
add
lcall
mov
pop
and
dec
repnz
lcall
jns
cltd
jecxz
repnz
cmp
sbbl
pop
cwtl
test
clc
mov
ljmp
jmp
cs
icebp
and
adc
sbbl
xchg
loop
ljmp
ret
jns
fildll
mov
dec
push
push
xchg
arpl
jbe
xchg
clc
dec
lcall
bound
aad
mov
je
pop
icebp
jb
xchg
and
stc
mov
in
aam
pop
fisttps
mov
mov
pop
mov
test
push
pop
lret
push
mov
adc
shlb
cli
inc
lock
ds
nop
mov
sbb
int
ljmp
cmp
in
mov
and
mov
es
lret
dec
jb
xchg
fsts
mov
ret
push
pop
test
sub
push
xchg
mov
in
mov
dec
inc
push
xor
rorb
jle
mov
dec
rcll
sub
aam
js
insb
adc
lcall
mov
cli
andl
xchg
pop
jb
je
orb
ljmp
mov
ljmp
leave
xchg
mov
add
mov
xor
dec
in
xorb
xchg
repz
adc
push
scas
popa
mov
mov
push
rcrb
stos
icebp
fwait
out
mov
mov
insl
xchg
pop
inc
push
mov
in
mov
mov
dec
push
push
and
push
je
jns
aas
jl
cmp
mov
push
xchg
or
sbb
xor
movsl
in
ja
mov
mov
mov
je
mov
xor
lds
insl
jl
pop
add
hlt
fistpll
cmc
popf
jge
push
stos
jae
mov
movsl
push
aad
fdivl
mov
outsl
jmp
pusha
leave
int3
aam
pop
lds
inc
push
or
inc
push
faddl
insb
nop
out
in
out
jb
shrw
mov
je
add
lods
pop
fisttpl
push
lcall
xchg
repnz
pop
testb
dec
xchg
out
inc
stc
inc
out
xor
mov
pushl
push
ljmp
sahf
pop
xor
xchg
jmp
xlat
inc
pop
ficoms
cli
outsl
lds
outsl
rcrb
lcall
dec
jmp
pop
and
fsts
ja
cmc
mov
iret
dec
inc
cmp
dec
push
jl
rolb
mov
sarb
mov
testl
lock
scas
sti
xor
mov
adc
mov
stc
or
stos
into
pavgb
int
fidivs
into
add
ret
cmp
mov
out
jecxz
in
cld
mov
jne
inc
lcall
call
fisubrl
pop
repnz
inc
push
add
push
sbb
mov
mov
jbe
sub
adc
test
out
or
adc
push
inc
adc
sahf
mov
lcall
loope
dec
loopne
pop
sar
fimuls
imul
inc
in
inc
sbb
lcall
mov
jnp
sub
mov
popa
xchg
pop
icebp
mov
lods
jb
cltd
cmpsl
rorl
icebp
je
repnz
cld
push
std
cmp
push
inc
push
clc
cmp
mov
negb
dec
jle
mov
fsin
divb
inc
mov
loope
icebp
insb
popa
fwait
ret
pop
jmp
push
addr16
sub
push
out
lcall
add
lea
cmc
jecxz
popa
enter
sbb
dec
mov
or
mov
fs
adc
mov
mov
cmp
rcl
xchg
mov
inc
jmp
decl
lock
fstl
outsl
in
pop
insb
ret
into
xor
pushf
dec
ret
xlat
xorb
push
test
mov
test
test
aam
je
incl
insl
and
loope
pop
add
jo
or
push
dec
test
cmp
pushl
lret
int3
outsl
push
repnz
jecxz
push
push
notb
cmp
inc
pop
arpl
and
jle
aaa
loop
flds
in
je
mov
xlat
inc
loope
fistps
call
stc
add
inc
lds
push
aas
test
inc
xchg
je
movsl
inc
std
shl
jns
jp
incl
scas
rolb
mov
shll
mov
insl
call
sbb
ss
xchg
loope
inc
in
dec
into
add
ja
or
sub
fbstp
sub
add
xor
leave
pop
push
lock
adc
aaa
inc
xor
mov
daa
outsb
xchg
rcrb
xor
or
sbb
ficoml
xor
orb
pop
inc
js
mov
pushl
ja
outsb
lock
loop
inc
pop
jnp
mov
ja
mov
push
and
cmp
cs
jo
decl
loopne
addb
jno
cwtl
inc
out
jns
pushf
pusha
add
int3
sahf
jg
das
clc
push
leave
data16
popf
fisttps
mov
incl
mov
push
mov
repz
pop
inc
test
cld
loopne
inc
cld
cltd
gs
lds
loop
jne
sahf
shr
dec
mov
push
inc
ljmp
sar
cmp
cli
cs
ficoml
js
rcr
xor
outsb
mov
cli
subb
lcall
xchg
aam
pop
cmp
lcall
incl
mov
enter
mov
xor
mov
repz
arpl
inc
stos
add
inc
pop
je
mov
test
jmp
fcoml
lock
dec
pusha
lret
xor
out
or
jno
add
jp
pop
retw
cmp
loopne
pop
and
mulb
fcoml
pop
fcoml
fbld
sti
sub
loope
rcll
mov
fsubrl
call
mov
dec
xor
mov
or
mov
ret
xor
mov
into
ds
mov
inc
fstpl
hlt
and
movsb
ja
out
sar
ret
in
out
ljmp
out
pop
in
outsb
sub
lea
pop
std
call
push
dec
pop
xor
lret
jg
es
sub
xor
sbb
scas
mov
outsl
es
out
fiaddl
ds
repnz
push
fsubl
jmp
pop
movsl
jb
sub
xorl
in
pop
mov
cli
inc
dec
ret
cwtl
push
ljmp
test
dec
pop
cmp
jb
xchg
scas
test
loopne
jle
adc
xchg
cmc
imul
lahf
inc
sbb
iret
cmpsb
push
icebp
or
xchg
outsb
ret
notb
xor
data16
xor
add
rcr
out
push
push
movsb
cli
push
jg
sbb
cwtl
jne
nop
xchg
movsb
jno
mov
loop
stos
xlat
mov
arpl
imul
outsl
cli
in
jbe
sub
and
pushf
frstor
dec
int
outsl
mov
inc
sti
mov
or
int3
inc
out
xchg
mov
inc
pushl
sbb
imul
cli
or
xchg
mov
stos
ret
cmp
jmp
adcl
daa
mov
mov
push
jne
pop
jne
lcall
dec
sbb
xchg
les
xchg
jecxz
pop
xchg
outsb
dec
scas
fidivrl
mov
imul
out
push
jns
dec
push
mulb
jg
inc
push
data16
fiadds
sub
je
xor
jle
sub
jp
cmp
subb
js
push
clc
push
fistps
lret
cld
outsl
pushl
inc
mov
fisubs
int3
mov
inc
push
xor
jmp
add
adc
xchg
int3
and
adc
nop
xchg
fldcw
in
adc
lahf
cld
aaa
dec
cli
add
cvtdq2ps
add
mov
fsubrl
arpl
das
dec
std
cmpb
push
pop
xchg
or
into
decl
mov
mov
xor
or
cmp
decl
in
jp
dec
inc
pop
inc
je
rcll
imul
insl
fistpl
add
mov
scas
mov
sbb
add
stos
mov
jb
xchg
sbb
mov
mov
call
fwait
scas
add
mov
stos
mov
fwait
pop
pop
aas
ljmp
xchg
jbe
jmp
pop
imul
insl
xchg
push
push
dec
sub
pusha
dec
lods
sub
dec
add
add
movsl
sbb
dec
pushl
push
pop
jmp
jae
movsl
push
dec
mov
fs
xchg
rcll
mov
mov
jno
sbb
dec
lds
push
push
addr16
leave
lea
mov
movsb
icebp
jmp
loop
shrb
push
inc
xor
xchg
sbb
icebp
mov
fisttps
xchg
add
inc
clc
out
es
pushf
adc
xor
dec
push
mov
je
sub
rcl
mov
push
mov
ss
aad
push
mov
push
pop
jg
and
jge,pt
fwait
mov
into
addb
ds
lcall
hlt
ror
xchg
pop
pusha
jo
ja
cltd
icebp
into
jecxz
pop
jno
movsl
shll
cmpl
mov
push
and
repnz
cmpsl
out
sbb
add
mov
call
and
pop
pop
sbb
mov
lods
ss
push
add
push
xchg
mov
sub
jnp
sub
hlt
cltd
push
sbb
fistpll
and
jb
or
test
push
jmp
mov
jo
pushl
call
out
or
pop
ja
mov
sarl
sub
or
andl
insb
jp
es
add
jmp
arpl
ja
mov
dec
jg
sub
adc
fwait
cs
add
jg
inc
dec
pop
lea
dec
jle
push
adc
push
xlat
xchg
push
mov
lcall
mov
movsl
cltd
mov
add
jecxz
add
xorb
add
hlt
incl
sbb
mov
fucomip
movb
clc
or
imul
addr16
mov
stc
into
dec
cld
mov
cmpsb
sti
fnstsw
add
pop
inc
pop
mov
leave
cmp
into
aam
mov
mov
ss
pop
cmp
mov
add
lea
or
mov
jne
mov
cmpsl
pop
or
sub
movsb
lret
testb
call
push
cmp
xchg
or
test
xor
jmp
ljmp
lds
sbb
dec
cmc
test
mov
jl
sar
in
test
xchg
push
clc
es
mov
decb
jnp
aam
cmp
jg
jge
add
jp
lods
aas
jae
mov
sub
add
into
scas
xor
jmp
inc
mov
int3
mov
call
mov
sbb
sub
es
out
push
dec
arpl
sub
scas
std
dec
jmp
adc
lods
lock
xchg
ret
fwait
add
das
adc
adc
int3
mov
sbb
and
decl
fisubl
adc
xor
popa
fdivr
ret
pusha
mov
sbb
add
sbbl
daa
cmp
incl
push
insl
data16
test
push
push
or
jmp
push
push
sub
push
testb
imul
lcall
jns
push
inc
adc
orb
cmp
movl
incl
pop
das
repz
cltd
jo
lahf
add
test
int
mov
push
mov
call
or
incl
mov
dec
jecxz
pusha
lret
jl
outsl
jne
shrl
clc
jl
bound
jecxz
filds
imul
or
pop
mov
push
pop
das
dec
lcall
scas
inc
outsb
dec
lds
orb
int
iret
mov
fs
mov
incl
xchg
scas
scas
stos
icebp
sbb
jnp
incl
jns
mov
xchg
mov
adc
pop
jb
jp
je
cld
pushl
test
inc
enter
inc
mov
jge
inc
adc
pop
dec
sub
decb
push
dec
insl
add
mov
nop
fstpt
adc
cmpsb
lea
xchg
pop
mov
push
push
bnd
je
fwait
jo
and
xchg
mov
jmp
ds
add
fwait
mov
mov
hlt
jg
jl
fst
les
xor
sbb
idivl
std
mov
lahf
lret
fwait
mov
fs
sahf
push
mov
scas
xchg
xor
test
pop
fiadds
jge
mov
pop
loopne
idivw
add
std
das
jle
dec
sbb
dec
jb
es
pop
jmp
sahf
enter
or
push
mov
andl
outsl
aaa
jecxz
pand
lods
add
xchg
cwtl
movsl
cmpsl
xor
mov
mov
shll
scas
mov
ss
imul
cld
add
bound
dec
add
fucomi
loope
mov
insb
ds
sbb
ljmp
add
cmp
sahf
inc
repnz
sar
call
mov
dec
pop
adc
sub
xchg
mov
jno
test
jecxz
push
sbb
fnstcw
enter
insl
sbb
shrl
mov
repnz
dec
bnd
sbb
xorl
mov
jb
push
enter
add
mov
adc
sub
add
mov
je,pt
xor
repnz
addr16
sub
lahf
adc
push
aas
flds
push
add
cli
dec
or
ljmp
call
cmc
mov
jbe
sbb
cmp
fwait
mov
sahf
jno
mov
in
inc
mov
push
rcrl
out
cmpsb
or
fldenv
mov
cli
mov
jg
lcall
stos
test
scas
mov
xchg
mov
mov
dec
jg
and
fs
test
out
pushl
incl
daa
and
test
xor
add
xor
in
jb
sub
adc
scas
fcmovb
lcall
movsl
pop
lret
push
inc
sbb
sbb
insl
popa
sbb
adc
xor
pop
lods
mov
add
fisttps
inc
stos
or
adc
lcall
not
xor
inc
fs
mov
mov
sarb
sbb
push
push
jmp
inc
pop
in
push
rclb
scas
push
les
or
scas
dec
xor
imul
aas
push
add
into
sbb
aaa
decb
mov
xor
into
imul
cli
jae
sub
push
jp
cmp
mov
xor
jb
repz
jbe
lods
sbb
add
sahf
fisubrs
jns
cmpsb
int
push
mov
je
iret
test
jp
cmp
imul
push
add
xchg
push
sub
in
jnp
jecxz
cmp
repz
cmpsb
xor
pop
inc
stos
push
sbb
decl
dec
daa
scas
pop
mov
jl
or
lock
sbb
repnz
imul
jecxz
daa
in
jp
loope
fdivrl
inc
add
nop
int3
mov
pop
sbb
jmp
cmp
lret
inc
pop
xchg
mov
scas
aas
inc
mov
mov
adc
lea
add
rorb
lret
xor
mov
mov
add
incl
inc
stos
sub
and
stos
incl
lea
nop
xor
popf
call
push
sub
gs
pushl
push
cmp
sub
xchg
adc
clc
add
out
ljmp
sub
jmp
and
scas
mov
jmp
sbb
inc
pop
push
int3
and
outsl
jle
call
pusha
es
sub
lret
or
push
adc
fcoms
test
aam
das
xchg
pop
hlt
mov
mov
ljmp
hlt
outsl
aam
cmp
adc
inc
fmuls
adc
dec
push
xchg
movsl
scas
jmp
pop
and
push
sbb
xor
lock
test
scas
push
or
loop
and
fs
dec
jae
lret
xor
and
addr16
mov
sar
incl
xor
cmp
fwait
mov
addr16
mov
dec
push
mov
jecxz
mov
lcall
push
xor
aaa
arpl
notl
jl
xor
pop
into
hlt
pop
dec
jmp
mov
and
xlat
into
hlt
jp
sbb
fbstp
outsl
pop
mov
aas
push
cld
jo
mov
call
pop
add
mov
mov
adc
xchg
arpl
adc
ror
es
sub
inc
cld
test
cmp
call
mov
cld
pushf
lcall
cmc
sbb
push
or
cmpsb
testb
dec
in
cmp
es
push
movsl
dec
shrb
lret
mov
cmc
lret
pop
pusha
and
sahf
jp
out
add
decl
outsb
clc
push
pop
sub
loope
add
nop
add
incl
testb
adc
mov
add
mov
popa
dec
jmp
jcxz
and
xchg
sbb
sbb
add
mov
cmpsb
dec
mov
push
in
push
bound
jns
push
add
rcrl
loop
or
incl
testb
mov
xchg
fists
jp
out
dec
fsubl
test
mov
xchg
lock
mov
pop
adc
aaa
adc
mov
les
adc
xor
stos
push
sbbb
les
pusha
mov
cli
and
cmp
movsb
lcall
test
mov
mov
mov
or
adc
mov
jl
adc
int
mov
dec
fs
mov
insb
cld
adc
add
lret
cmp
loop
cmp
das
sbb
jle
xchg
lcall
dec
out
sbb
clc
mov
fsubrl
jg
cwtl
jno
push
jns
daa
and
pop
ljmp
push
jb
andb
xor
nop
pop
adc
outsb
fs
stc
lock
es
xchg
cltd
xchg
enter
shl
and
dec
loope
test
cmpsb
jg
inc
sbb
sbb
ljmp
out
aam
cmp
ljmp
adc
xchg
add
push
mov
nop
jbe
sarl
xchg
movsl
aad
pop
xor
mov
cmc
add
dec
mov
test
mov
mull
call
jmp
fucom
adc
stos
mov
mov
stos
ja
loopne
rolb
and
movsl
loopne
fimuls
cmp
jns
call
mov
leave
mov
mov
std
sbb
out
stos
inc
into
cmp
jge
les
stos
in
jb,pt
negl
xchg
mov
add
mov
cwtl
mov
int
dec
inc
inc
ljmp
rorl
mov
add
rolb
cmp
pop
les
dec
clc
call
cmpsb
in
sbb
inc
fsts
push
jg
mov
fcmovu
add
xor
mov
and
ljmp
lock
iret
xor
jmp
add
loope
adc
decb
cmp
enter
out
dec
std
push
in
ljmp
sarb
rorb
push
repz
or
jo
inc
add
ds
dec
cmp
ljmp
cli
push
out
sub
and
ds
fsubrs
push
push
loop
clc
push
jne
test
jp
dec
dec
inc
mov
mov
add
incl
aas
mov
ljmp
add
negb
mov
sahf
jns
iret
leave
and
cld
call
test
sub
repnz
xchg
mov
mov
loop
outsb
cmpsb
or
rclb
and
ljmp
aad
repz
cmp
mov
and
mov
aas
icebp
or
or
jbe
ficoml
adc
jb
ds
push
add
push
mov
sub
out
xchg
loope
mov
push
xchg
cli
cld
jg
ret
cmovle
ljmp
loopne
outsb
insb
fistl
jb
lods
popa
xchg
xchg
push
pop
mov
leave
lock
mov
test
aas
mov
out
mov
test
sub
adc
sub
int3
les
mov
mov
insb
pop
cli
inc
push
in
or
into
ds
sub
mov
nop
dec
xchg
mulb
sti
mov
sahf
in
decl
or
cmp
in
pop
into
and
or
lcall
addl
aam
jb
pop
movsb
and
scas
cmp
mov
pop
cwtl
adc
jno
dec
mov
xchg
xchg
pop
xchg
push
push
add
dec
add
or
mov
jb
pop
call
and
ja
pop
jb
cmp
jne
addb
je
or
push
push
jg
mov
dec
rcrl
pop
mov
adc
sarl
test
add
fsub
cmp
pop
pop
cld
add
clc
je
cmc
test
rorl
test
and
jns
inc
shr
scas
jg
lock
and
test
pushf
dec
adc
fwait
out
clc
pushl
lods
ds
test
test
repnz
jmp
notb
aaa
xchg
aas
pop
lret
cmp
scas
jl
xor
mov
xchg
jno
dec
shl
sarb
jae
daa
cmp
fucomp
adc
icebp
mov
fisubrs
xchg
xchg
push
inc
clc
call
das
xor
mov
cmc
xchg
inc
cmpsb
and
fwait
outsl
idivb
leave
leave
sbb
out
xchg
in
aas
ljmp
shlb
add
mov
jp
sbb
call
fistps
xchg
cmpsb
bound
into
repnz
ljmp
ret
in
add
push
mov
sub
cmp
sbb
in
decl
mov
mov
mov
pop
jb
add
into
icebp
dec
or
mov
pop
cmpsb
insl
cs
add
mov
clc
shlb
mov
push
mov
xchg
add
lods
pop
dec
ljmpw
ljmp
test
sbb
mov
lea
mov
add
and
lcall
and
lods
sbb
data16
adc
mov
stos
adc
mov
ljmp
push
mov
push
gs
pop
mov
movsl
cmpsl
lea
and
outsl
fisubs
xor
and
cwtl
stos
mov
dec
pop
test
fnstcw
pop
ds
add
cltd
in
xor
adc
mov
cltd
daa
jl
xor
xchg
shlb
mov
inc
in
test
call
pop
or
xchg
mov
dec
scas
lcall
mov
subl
xchg
gs
pop
jmp
add
or
mov
aam
cld
lcall
cmp
outsl
mov
imul
or
jge
aam
dec
js
pop
addb
test
and
mov
mov
push
mov
mov
add
jne
inc
insb
stos
imul
iret
jb
fs
decl
xchg
cwtl
jb
jo
jg
inc
ret
sbb
jne
push
inc
pop
incl
rep
inc
mov
fnstenv
decl
dec
lret
xor
movsl
xlat
sahf
jb
mov
add
cli
dec
sti
xchg
add
negb
popf
and
aas
pop
or
cwtl
xchg
bound
xchg
cmpsb
cli
push
movsb
mov
xchg
out
xor
xchg
enter
cmpsl
adc
pop
shlb
out
fimuls
push
push
in
xchg
jmp
ljmp
jbe
pop
pop
xchg
scas
test
mov
cld
ljmp
cli
pop
stc
hlt
mov
scas
popa
notb
mov
xlat
jnp
loopne
add
loopne
andl
inc
cmpsb
incl
fwait
pop
xor
pop
lcall
mov
lcall
jle
mov
adc
aaa
or
mov
sbb
das
mov
pop
mov
jo
dec
data16
sub
imul
fdivl
cmc
decl
insb
jl
lods
mov
sbb
imul
movsl
or
cs
lods
pusha
cmc
and
xor
push
sbb
inc
pop
shlb
push
lock
add
pop
jg
repz
and
jle
push
mov
loope
lcall
or
mov
inc
repnz
pop
mov
inc
int
seta
mov
push
fwait
bound
cli
push
adc
divb
lahf
adc
xchg
js
mov
aas
loop
jg
mov
mov
pusha
xchg
pop
iret
lret
rcrb
notl
push
xor
and
popf
jbe
out
or
dec
jnp
scas
push
jl
in
mov
ljmp
decl
lret
xorb
vpmacssdqh
cmp
mov
ljmp
je
adc
push
push
scas
pop
jb
inc
cmp
movsl
out
pop
add
jmp
sub
js
add
adc
pop
add
dec
std
mov
loopne
or
shlb
lea
lcall
push
push
xor
mov
repz
pop
adc
jg
dec
push
xchg
cs
pop
dec
adc
pop
sub
dec
sbb
out
popa
aam
mov
add
jecxz
mov
or
out
jg
ds
sahf
jge
xchg
movsl
or
pop
mov
das
sub
mov
sbbb
add
scas
mov
cmpsb
mov
add
into
mov
ja
lcall
inc
aas
insb
mov
es
stos
outsb
lcall
daa
and
je
cld
jmp
push
mov
cmpsb
inc
jb
xchg
mov
mov
test
and
pop
cmp
pop
jb
push
or
sub
mov
dec
pop
mov
ljmp
jno
sub
call
push
insb
push
push
mov
mov
stos
add
jo
movsl
dec
mov
imul
push
fwait
addb
dec
das
sar
stos
jns
ljmp
scas
setp
mov
sub
pop
bound
mov
xlat
lcall
js
xchg
cmpsl
push
inc
mov
scas
out
rcll
jg
pop
pop
fmulp
or
inc
cmp
sbb
or
mov
push
mov
pushl
cltd
loop
sahf
cwtl
adc
add
mov
inc
xor
hlt
call
pop
push
add
int
sbb
inc
and
call
lods
add
shrl
cs
cwtl
stos
sbb
and
call
and
stos
add
pop
push
push
lret
and
push
cmpsl
push
mov
sar
push
dec
xchg
mov
aaa
and
xchg
add
xchg
dec
and
addr16
std
ret
jge
push
mov
push
mov
mov
test
cmp
jecxz
jp
mov
mov
mov
xchg
scas
out
xchg
mov
mov
sbb
mov
push
adc
push
push
mov
add
ret
pop
cwtl
jns
es
test
adc
mov
fs
rsqrtps
aas
cli
fbstp
adc
add
pop
test
fildll
hlt
ret
push
dec
pop
xchg
add
and
xchg
pusha
dec
cwtl
addr16
in
xor
push
mov
lock
pop
push
xchg
outsl
dec
mov
cmpsb
mov
adc
push
dec
sub
pop
and
decb
loopne
jnp
or
mov
out
fwait
inc
xlat
jg
xorl
sbb
shl
jg
or
add
insb
popa
cmp
jno
mov
inc
and
pop
dec
dec
loope
fnsave
in
pop
hlt
call
bound
sbb
out
pop
push
xchg
xchg
or
shl
and
pushl
inc
jp
mov
pop
and
cmp
dec
lcall
stos
push
inc
adc
jp,pn
push
enter
pop
dec
push
icebp
arpl
enter
pop
lock
jle
lds
jle
icebp
jg
inc
leave
imul
and
mov
outsl
jl
imul
insb
pop
test
stc
inc
adc
inc
cmc
cmp
push
lret
iret
jns
inc
je
xchg
jo
pop
in
push
xchg
inc
pop
push
sub
je
mov
jb
repz
mov
add
inc
jg
icebp
pop
out
cs
inc
jb
iret
mov
addr16
les
cld
jns
pusha
mov
insb
or
push
rcrb
sbb
loopne
mov
push
aam
adc
mov
cwtl
inc
pushf
mov
cwtl
repz
sub
xor
packuswb
hlt
dec
decl
push
mov
ds
sub
inc
xchg
lret
and
loop
sbb
jl
mov
xchg
dec
pusha
cwtl
in
mov
lcall
xor
mov
mov
pop
adc
ret
mov
cmp
inc
mov
aas
movsb
rolb
addl
repnz
fildll
mov
scas
sbb
push
jb
sti
mov
and
xchg
cmc
lods
sbb
imul
ljmp
nop
inc
xchg
cli
and
pop
cmp
movsl
insl
pop
pushl
jbe
sbb
pop
push
push
jp
mov
imul
outsl
mov
push
mov
pushl
outsb
adc
out
inc
push
lods
aaa
pop
sub
out
clc
jg
xor
inc
mov
loope
or
je
std
decl
cmp
push
mov
mov
inc
xor
adc
in
jp
leave
or
das
rolb
xor
mov
mov
gs
ljmp
mov
jg
out
nop
imul
adc
roll
decl
sbb
xchg
push
jp
movsl
ss
pop
add
mov
dec
in
cli
sub
xor
mov
lret
adc
or
into
mov
scas
or
inc
jmp
scas
std
mov
loopne
scas
sbb
lock
mov
aas
cld
pushl
lea
test
push
imulb
jle
jg
jnp
dec
inc
pop
xchg
mov
dec
mov
imul
and
add
clc
test
imul
jnp
outsb
or
cmp
cmp
into
stc
ss
cmpsl
sar
scas
stc
cli
pushl
jl
stc
add
dec
xchg
inc
jns
arpl
call
push
xchg
cmp
das
cli
out
adc
dec
out
mov
fbstp
lods
shlb
loop,pt
pop
cmp
iret
add
jns,pt
loop
aas
inc
rclb
test
push
gs
pop
jle
ret
inc
and
sahf
fdivl
sub
incb
dec
and
jae
push
sar
gs
sbb
push
imul
xorl
dec
leave
or
cwtl
mov
xor
sub
dec
incl
push
stos
jns
movsb
adc
cs
jmp
mov
cmp
stos
ret
ja
fistpll
test
movsl
sbb
data16
pop
inc
pop
gs
jg
loopne
push
leave
ss
fmull
add
pop
inc
outsl
jnp
pop
je
loopne
push
adc
ds
dec
lods
and
inc
mov
adc
call
jp
sub
popl
pop
adcl
push
pop
out
cmc
xchg
data16
fcomip
repnz
mov
nop
pop
jne
ret
stc
push
push
inc
repz
mov
gs
call
push
daa
push
xor
push
test
outsl
fwait
lcall
mov
sbb
aaa
jnp
sub
ret
data16
mov
or
hlt
data16
or
mov
incl
es
inc
sarl
insl
dec
mov
ds
jge
neg
movsl
xchg
mov
lcall
or
rcrb
icebp
push
and
ficomps
add
punpckhdq
inc
jge
jg
jns
cmp
cmp
lcall
inc
jo
ja
repz
and
jb
outsl
jmp
inc
push
add
dec
std
jns
mov
into
cmp
add
jg
test
xor
mov
add
sbb
dec
call
addr16
lret
inc
rolb
jl
pop
imul
ja
ljmp
push
add
popf
icebp
pushl
inc
aaa
dec
sub
stos
lcall
test
mov
dec
cld
mov
cmp
or
sub
xor
push
movsb
lcall
lahf
rorb
sbb
mov
inc
aam
cltd
stos
add
cld
ljmp
sahf
or
cmp
dec
fstl
xchg
mov
ja
adc
mov
std
fisttps
jbe
sbb
and
pushf
cli
mov
jmp
push
fs
subl
imul
aas
dec
in
xchg
jge
push
jmp
mov
mov
call
cmpsb
aaa
jge
add
lcall
jmp
out
lods
sbb
cmp
mov
call
mov
sarb
or
insl
mov
sbb
cmp
aaa
test
dec
push
adc
push
mov
mov
das
clc
cmp
jp
dec
outsb
or
inc
cmpsb
jge
xchg
mov
jmp
and
sbb
test
jbe
sbb
fbstp
push
mov
test
jno
push
pop
fcomps
add
pushl
mov
mov
scas
stos
mov
rcrb
ds
sahf
loopne
xchg
push
repz
lcall
hlt
pop
or
mov
sbb
inc
and
pop
cld
mov
mov
int3
jo
leave
out
add
push
pop
fimuls
imul
fisubrl
pop
mov
mov
adc
mov
adc
sbb
add
adc
gs
nop
lcall
push
stos
xor
xor
pop
pop
mov
ret
add
stos
shrb
in
sahf
insl
in
imul
push
and
filds
mov
adc
mov
xchg
and
lcall
stos
mov
dec
test
subl
push
add
std
incl
pop
inc
arpl
inc
jb
push
inc
and
arpl
shll
dec
hlt
mov
test
cmpb
adc
ljmp
sti
mov
adc
xchg
push
cmpsl
adc
lcall
stc
push
inc
in
push
jb
icebp
mov
lods
jb
pop
sub
mov
cmpsl
cld
test
out
test
inc
mov
mov
movsl
push
lods
dec
inc
mov
sbb
mov
xchg
icebp
test
sbb
addr16
xchg
jg
loopne
pop
xor
outsb
pop
and
push
jl
lcall
cld
mov
jnp
push
jl
jg
pop
popa
mov
xchg
xor
cwtl
mov
test
sbb
gs
xor
outsl
clc
call
mov
jge
orb
sahf
push
int3
lods
cmp
test
call
add
stos
jne
xor
mov
mov
iret
mov
pop
cmp
loope
push
jns
mov
shr
ja
jl
mov
lds
lcall
xor
movsl
xor
popf
repnz
dec
js
add
fldl
in
popf
clc
out
push
push
or
jnp
add
outsl
dec
add
or
lock
sub
pushl
lods
mov
adc
mov
cs
push
imul
nop
mov
push
push
xchg
push
pop
sbb
mov
dec
les
jbe
adc
sbb
push
push
inc
mov
inc
sahf
fbstp
pop
gs
push
push
mov
push
jb
and
push
stos
dec
push
test
mov
lods
mov
mov
cmp
jg
lock
test
pop
shlb
inc
jb
iret
mov
pop
sti
lock
repnz
jne
clc
push
pop
leave
push
ljmp
lahf
lods
xchg
stos
mov
xor
mov
repz
imul
test
decl
mov
cmp
mov
xor
mov
pop
sbb
decl
add
mov
sbb
lcall
sahf
xchg
jo
push
jnp
mov
mov
mov
jge
pop
fwait
cs
nop
fbld
pop
cmp
mov
inc
into
cmp
icebp
aas
lcall
aaa
std
dec
sbb
in
sub
dec
jle
add
lods
cmp
adc
and
clc
jb
rol
push
bound
mov
xchg
cmpsb
cltd
pop
push
inc
jno
sbb
incl
loopne
out
arpl
or
mov
and
mov
pop
pushl
into
ss
sbb
pop
xchg
mov
xchg
xchg
mov
xchg
decl
xchg
pop
dec
and
and
sub
test
sbb
incl
push
mov
xlat
mov
dec
adc
lock
push
mov
scas
add
jmp
xor
mov
cmp
adc
ljmp
cmp
or
outsb
push
fwait
push
mov
imul
pxor
lods
clc
addr16
xchg
out
cmpsb
loope
xorl
fnstenv
outsl
repnz
mov
xchg
lahf
out
xchg
sub
sbb
or
push
sbb
js
inc
std
or
jb
call
shll
dec
js
fstl
pushl
fadds
ja
jo
mov
dec
inc
fstl
mov
dec
pop
xchg
sub
dec
cmpl
js
cmp
cmp
out
xor
jg
dec
inc
data16
mov
dec
mov
xchg
adc
push
push
pop
mov
jge
jns
xchg
mov
mov
or
pop
inc
jo
lret
or
lcall
outsb
cli
lea
xchg
cmp
pop
add
mov
add
out
add
fdivrl
xchg
std
inc
std
out
inc
pop
shrb
mov
lret
je
test
inc
cmpsl
push
insb
dec
hlt
outsb
cwtl
xchg
add
iret
jg
cmp
aam
addr16
mov
jb
scas
or
popa
cmp
bound
test
lock
jge
xchg
push
mov
xchg
mov
in
dec
pop
sub
popf
dec
std
push
shlb
jp
ja
clc
jmp
lcall
aas
mov
insb
xlat
and
out
mov
mov
sub
les
pop
cmpsb
addr16
push
out
pop
adc
xchg
imul
pop
and
mov
insl
push
jg
jo
daa
arpl
into
dec
and
xor
xor
aam
push
scas
mov
js
add
pusha
jnp
movsl
sbb
dec
sub
out
clc
push
push
out
dec
jb
popa
mov
mov
and
pop
dec
icebp
mov
incl
pop
cmp
pop
fwait
mov
mov
mov
filds
xchg
mov
xor
cmp
jae
les
cli
dec
in
inc
stos
jbe
xchg
inc
add
aaa
bound
jns
mov
ret
incl
push
pop
jbe
sbb
dec
dec
outsl
leave
and
lods
xor
testb
xchg
ds
test
jbe
add
lock
push
mov
inc
jp
movsl
dec
cld
pop
sbb
lret
movsl
fwait
jbe
mov
adc
cmpsl
xchg
fwait
mov
inc
push
test
lcall
sbb
pop
sarb
dec
pop
push
push
test
int
pop
jo
inc
sub
mov
push
pop
jecxz
nop
sub
inc
dec
dec
jge
add
inc
incl
dec
das
call
in
js
push
xlat
push
push
xchg
stc
push
rolb
cmpsb
pushl
test
je
das
cmpsb
xlat
jbe
pusha
or
pop
push
lock
mov
xor
adc
pushl
push
loopne
inc
inc
pop
mov
sub
test
mov
pop
test
std
xchg
cs
rcrl
add
add
and
rcrb
push
js
mov
inc
das
gs
sbb
data16
xor
test
into
xchg
pop
aam
cmp
cmp
out
scas
stc
xchg
pop
jmp
push
push
lahf
lcall
cld
jmp
jg
aas
cmc
mov
movsl
sbb
jp
jo
dec
push
out
dec
inc
cmpb
sub
pop
fisttps
or
out
jg
repnz
aaa
repz
pop
push
dec
jb
mov
xor
mov
lcall
aaa
ret
lahf
repz
dec
mov
push
xor
add
cs
loop
and
push
pusha
in
scas
les
dec
imul
jg
xchg
xor
cmp
inc
int
sbb
lcall
jbe
xchg
jg
cmp
cmpsb
sbb
ja
add
pop
into
sub
aaa
inc
lds
cli
outsl
mov
data16
outsl
pop
roll
in
mov
pop
in
xchg
dec
cmp
les
inc
icebp
add
jmp
sbb
jl
imul
adc
out
push
dec
push
push
dec
push
dec
jb
xchg
xchg
and
jg
lock
jns
xchg
lock
sbb
xor
add
pop
mov
ljmp
pop
mov
inc
or
ret
inc
adc
sbb
test
xchg
mov
insl
xor
and
ljmp
mov
dec
ret
ljmp
jp
roll
lods
loope
add
cs
scas
jae
adc
idiv
jg
cmp
pop
loope
sub
inc
cmp
dec
ja
and
push
xor
subb
jne
jmp
in
xchg
dec
mov
push
dec
pop
shll
add
stos
sub
ja
ljmp
dec
int
cmpsb
aaa
gs
push
mov
push
je
testl
push
ljmp
mov
jl
cltd
or
fsubl
dec
sub
loop
incl
stos
sahf
mov
add
es
in
sti
outsl
inc
push
cli
mov
mov
iret
in
bound
inc
mov
add
jg
test
lahf
test
jo
push
jb
fmuls
push
or
aaa
int
loopne
enter
jp
movsl
jb
jno
pop
fnstsw
incl
sbb
outsl
dec
and
sarb
fsubl
es
mov
inc
xchg
xchg
stos
fsubrl
sahf
push
jno
cld
call
xorb
movb
leave
lods
xchg
add
mov
out
lcall
pop
adc
movsb
sub
into
and
dec
mov
jno
lock
xlat
or
int3
add
or
or
lret
push
xchg
aas
test
data16
shl
insl
ljmp
test
jno
fsubrs
vmwrite
add
mov
mov
xchg
int3
into
dec
jmp
push
pushf
pop
movsl
jo
ljmp
inc
ljmp
div
push
addr16
mov
mul
pop
inc
pop
int
push
ja
call
push
mov
pushf
push
scas
and
mov
addl
inc
or
dec
push
add
adc
push
pop
xor
aad
inc
sub
aas
jo
mov
cmp
rclb
loope
xor
lcall
add
ljmp
cmp
cmp
adc
enter
sbb
mov
sbb
cmp
jp
fwait
mov
adc
pop
testb
ret
test
ljmp
inc
adc
dec
dec
sbb
push
push
push
add
in
or
fwait
mov
sub
sbb
pop
inc
xchg
adc
xor
xchg
xor
xchg
popf
pop
and
jmp
ljmp
add
ret
push
insb
jl
ljmp
cmp
jno
mov
mov
popa
mov
cmpsl
push
sub
scas
mov
inc
xchg
fstpt
xchg
gs
adc
lods
pop
lea
push
or
aaa
push
repnz
mov
xchg
cli
jg
lock
cs
lahf
cmp
add
adcl
pop
shlb
jno
and
or
push
add
dec
out
mov
sarl
test
dec
mov
mov
adc
adcl
pop
push
xchg
bound
ds
jg
out
mov
push
rorl
jb
adc
add
xchg
xchg
mov
add
sub
xor
adc
sbb
jne
lods
inc
aas
cmpsb
xor
in
lods
cmp
and
lahf
fs
cmc
enter
pop
push
pop
sub
sbb
mov
mov
pop
xchg
imul
xor
es
pop
enter
insb
popa
out
sbb
xchg
in
test
mov
jg
movsl
cmpsb
jmp
rcll
jnp
ss
decl
aad
inc
mov
insl
mov
ds
daa
pop
fildll
mov
pop
add
adc
pop
loope,pt
mov
mov
mov
or
out
shlb
push
and
outsl
scas
imul
inc
xchg
sub
int3
push
mov
call
inc
jp
pop
outsb
xchg
xor
mov
add
sbb
xchg
das
std
pop
sbb
js
or
pop
cli
lds
or
mov
out
scas
push
mov
adc
jno
inc
push
cmp
adc
inc
das
dec
sub
mov
xchg
and
test
xchg
jp
sub
popf
jmp
jo
xor
sbb
repz
inc
fwait
mov
lcall
cmc
loope
lcall
pop
xor
adc
in
push
inc
fidivl
mov
add
jl
jmp
push
fisubrs
inc
test
pop
decl
and
movsl
test
mov
mov
xor
jmp
dec
xor
mov
jge
cmp
incl
jmp
jno
lahf
adc
mov
test
or
stc
outsl
add
push
dec
sub
sub
in
cltd
out
add
dec
dec
inc
cmp
sub
inc
pop
mov
mov
pushl
ja
add
mov
mov
insb
data16
xchg
loope
ficoml
incl
dec
jo
dec
rorb
daa
cltd
les
xchg
insl
pop
gs
jns
popa
sahf
pop
in
cli
cmp
movsl
pop
mov
enter
sarl
loope
cmp
mov
sub
test
jb
icebp
inc
xor
orl
mov
xchg
dec
and
fiaddl
fbstp
jns
add
mov
dec
repnz
mov
push
dec
cwtl
fsts
inc
lock
dec
insl
inc
push
push
ret
push
addr16
pusha
push
mov
mov
dec
jmp
rorb
mov
insb
and
cld
out
lods
mov
mov
lcall
xor
fst
lcall
repz
mov
xchg
push
ja
push
clc
data16
mov
ds
je
enter
mov
adc
scas
push
inc
dec
sbb
scas
jp
pushl
cmp
add
xchg
mov
adcb
xchg
mov
call
xchg
dec
cmp
cmp
mov
scas
sub
mov
outsb
je
sbb
jae
inc
lea
and
cld
call
repz
fbstp
sbb
cmp
out
add
pop
and
mov
jge
adc
pop
inc
clc
inc
js
test
popa
daa
and
xor
and
cmp
out
lods
push
inc
ss
inc
stos
scas
jo
rolb
adc
lods
push
roll
jmp
inc
dec
pusha
dec
add
test
pushl
adc
mov
inc
ror
stos
scas
push
xchg
je
lods
mov
jbe
ljmp
mov
rolb
pusha
xchg
pop
or
pop
es
xor
push
add
jmp
xor
jp
push
or
sub
lcall
push
xchg
mov
clc
inc
jns,pt
lcall
sub
sahf
cli
addr16
cli
mov
cmp
cli
aaa
pusha
jne
adc
aas
add
dec
cs
pop
ret
ds
jg
lahf
fwait
into
add
cmp
xor
sbb
jge
movb
in
ljmp
or
mov
push
inc
sarb
xor
dec
pop
fs
insb
adc
jo
mov
dec
dec
in
insl
sahf
and
stos
jle
sbb
data16
ret
push
xorb
insb
sub
scas
into
cmp
mov
sbb
add
dec
jge
filds
or
inc
lods
lods
pop
aam
mov
mov
push
mov
push
nop
jno
decl
xchg
mov
sub
add
sarb
arpl
je
inc
jmp
or
fisttps
dec
lea
mov
outsl
lods
push
mov
xchg
incl
push
sub
pusha
ja
or
cmp
fwait
gs
call
inc
nop
push
stos
mov
xchg
fistpll
cmp
push
pop
cltd
imul
lahf
jl
pop
stos
test
xor
addb
ljmp
dec
pop
add
add
adc
xor
incl
stos
push
dec
js
loopne
mov
jns
pop
jno
cmpb
insb
iret
sub
or
jmp
push
adc
mov
cmp
cmpsb
jno
lea
insl
add
push
and
outsb
pop
shlb
xchg
les
fwait
outsb
popf
ljmp
orb
mov
int
push
jecxz
pop
inc
mov
clc
decl
xor
add
mov
in
jg
loop
aaa
inc
out
xor
pop
pop
push
cmp
lar
ljmp
hlt
xchg
jo
add
sbb
nop
push
insl
cltd
sbb
sbb
mov
xor
adc
cmp
bnd
push
and
sahf
xor
and
or
mov
test
inc
and
pop
push
test
inc
pop
add
cli
sub
jle
aaa
and
es
mov
sahf
add
jmp
sub
jmp
andl
cmp
sti
lcall
adc
adc
out
dec
push
push
mov
jg
inc
in
sti
stos
mov
setle
test
sbb
incl
mov
adc
adc
add
lcall
loope
dec
icebp
adc
jle
test
xor
lods
pop
stc
rcll
in
jbe
imul
pop
sub
lcall
push
sub
jnp
dec
sbb
and
adc
pop
push
or
daa
bound
add
mov
inc
and
mov
dec
push
mov
cmp
xchg
push
jg
repz
lcall
fmull
xor
adc
into
mov
xchg
cmp
scas
sbb
icebp
add
push
cmp
cmpsb
sbb
jg
xchg
dec
shll
inc
rcrb
mov
dec
xor
pop
stos
les
xchg
inc
scas
shlb
test
sbb
cli
ficoms
lea
xchg
iret
adcl
inc
fbld
xchg
out
clc
mov
daa
dec
int3
das
dec
jno
push
in
insl
cmp
adc
sbb
in
mov
out
shrb
sahf
mov
jp
nop
outsl
clc
jg
test
mov
push
pop
leave
pop
mov
jl
insl
mov
jnp
pop
sar
dec
pop
popa
mov
inc
inc
lods
mov
mov
bsr
pop
std
inc
loope
mov
scas
mov
lock
call
cli
test
movsl
cmp
xor
loopne
mov
or
out
ss
push
add
fists
mov
js
jns
rcrb
movsb
repz
inc
decl
cmpsl
loope
mov
outsl
testb
sub
adc
mov
bound
mov
lods
jg
test
sub
cs
dec
incl
sahf
inc
mov
and
mov
cmp
add
cmp
pop
dec
fbld
xchg
mov
loopne
pop
and
decl
jle
cmp
sub
inc
sub
adc
gs
gs
add
push
sub
and
add
xor
jne
sbb
pop
jle
push
and
addr16
xor
lcall
add
sub
sub
cmc
leave
push
std
int
sarb
daa
sub
fisttpl
scas
les
mov
cmpsb
adc
mov
cmp
sub
call
cld
test
mov
cmpsl
inc
scas
int
lea
inc
mov
mov
mov
mov
sub
ljmp
mov
mov
xor
mov
insb
lcall
sti
xchg
sbb
repz
out
arpl
xor
dec
mov
mov
mov
scas
sub
fistps
sub
lcall
adc
xchg
fwait
repnz
je
mov
ljmp
mov
inc
pop
add
mov
or
pop
adc
xchg
incl
and
in
inc
int
shrl
icebp
mov
stos
jne
fldt
into
sbb
sub
cmpsl
mov
jg
push
std
xor
mov
std
inc
jb
jb
jbe
push
push
aaa
ds
fldenv
ljmp
add
xchg
shrl
dec
fisubl
sub
and
mov
aad
jmp
sbb
jecxz
mov
cmp
call
out
mov
or
into
pushf
cli
cmp
xor
xchg
in
or
pop
and
decl
inc
pop
outsb
mov
or
cmp
cmp
sub
ljmp
inc
into
sbb
js
aas
arpl
mov
stos
incl
and
leave
lea
pop
xchg
sti
or
cmp
gs
pop
fidivrs
test
call
call
fnstenv
insl
and
pop
mov
sbb
push
cmp
out
cli
decl
sub
out
mov
daa
imul
push
adc
or
sub
test
out
cmpsb
push
ljmp
daa
mov
or
outsb
decl
sbb
xor
adc
fs
xlat
and
jnp
adc
in
decl
xchg
gs
push
mov
adc
and
and
xchg
add
incl
mov
sub
add
mov
mov
sbb
es
clc
push
insb
jge
sti
pop
push
pop
mov
cltd
sub
add
pop
mov
lcall
mov
das
push
push
push
mov
xor
mov
mov
pop
mov
add
test
sbb
adc
cmp
xor
lods
push
ds
outsb
dec
mov
xor
adc
aas
xchg
das
movsb
das
test
and
ds
jb
mov
unpckhps
cmpsb
sbb
push
xor
cld
cmpb
mov
das
sub
fadds
ss
mov
and
push
jp
std
das
sbb
sub
fnstsw
cmpsb
sbb
cmp
dec
xchg
or
adc
add
pop
cmp
mov
imul
scas
xor
out
pop
sub
ds
xor
fdivrs
popf
aas
xor
call
mov
and
add
add
mov
push
jae
les
push
add
adc
pop
mov
mov
cmp
test
pop
or
pop
cmp
xchg
sbb
lods
push
push
jg
lcall
cmpsb
and
call
pushf
sub
jo
dec
mov
push
jnp
xor
mov
pop
cmp
int
sbb
xor
pcmpeqd
call
pushl
sub
inc
stos
fmuls
cmp
cmp
out
cli
aas
ss
pop
ds
and
jg
cmp
mov
jno
inc
aas
inc
xchg
sbb
fnstenv
test
sbb
das
push
lock
neg
push
or
jo
xor
cmp
sub
jge
sub
clc
icebp
pop
ret
and
jb
out
mov
cmp
mov
pop
mov
test
and
and
xchg
jb
mov
daa
xchg
rcrl
mov
sub
push
in
out
call
notb
xor
mov
mov
adc
add
inc
mov
lock
sub
cmp
xchg
sbb
fisubrl
xchg
adc
mov
inc
cmp
sarb
bound
push
xor
lcall
inc
pop
lods
imul
lock
pusha
xchg
xor
cmp
xor
cmc
xchg
mov
jb
out
adc
push
xor
ds
adc
lret
aas
std
out
pop
push
xchg
add
mov
xor
jp
stos
leave
in
jb
add
gs
jmp
pushl
sbbb
scas
popf
adc
arpl
ja
xor
jno
decl
out
cltd
sbb
loope
movb
ret
fsubrp
sub
stos
test
daa
les
pop
jmp
dec
mov
popf
mov
jl
incl
sbb
lret
scas
xchg
sbb
scas
into
jmp
inc
xchg
ror
mov
mov
jle
xlat
movsl
inc
mov
adc
mov
addr16
stos
xor
aam
jl
icebp
or
adc
push
das
outsl
nop
cmp
or
pop
cltd
push
loop
jno
or
fimuls
cld
jg
lock
add
cwtl
xor
lea
or
pop
jge
andb
lcall
jg
out
add
out
xchg
add
mov
mov
cwtl
dec
jmp
sbb
mov
pop
or
inc
mov
lods
jge
xchg
push
lret
ds
loop,pn
xchg
iret
es
sbb
shlb
or
pushf
fcompl
jl
inc
push
add
adc
add
fwait
xchg
loop
incl
jb
or
rorb
aam
mov
stos
jmp
pop
mov
fst
es
into
test
testl
fidivs
es
shl
loop
xlat
loopne
jp
adc
arpl
roll
loope
push
in
ret
fsubrp
loop
xor
push
ror
fsubs
ss
loope
inc
pop
cwtl
or
cmpsb
push
push
int
fidivrl
lock
mov
mov
outsl
cmp
out
das
or
add
movsl
push
push
sub
in
sbb
mov
cs
adc
cmc
xchg
jae
xchg
sbb
pop
cmp
push
xchg
mov
push
repnz
inc
enter
or
adc
cmc
jp
inc
aam
and
mov
iret
mov
adc
gs
test
cs
pusha
xchg
inc
inc
je
sbb
add
into
mov
icebp
das
insl
in
xchg
call
jge
addr16
inc
or
add
dec
jne
arpl
xchg
scas
test
les
popa
outsb
bound
inc
or
adc
sub
jnp
mov
aas
loope
dec
sub
test
enter
jmp
sbbb
add
push
pop
jl
or
in
mov
adc
je
and
fcomip
or
fidivrl
jp
or
stos
pminsw
add
lret
jp
insl
std
outsl
js
jl
test
mov
dec
pushf
add
setb
and
cld
call
out
pop
lcall
xchg
shrl
js
cmc
scas
cli
fbstp
popa
addb
test
mov
mov
and
mov
repz
jb
scas
cwtl
sub
mov
adc
sbb
sahf
jb
jns,pn
cmc
xor
sbb
clc
and
movsb
loope
inc
pop
adc
in
mov
sbb
idivb
cld
lcall
adc
ret
std
pop
sahf
cmp
lcall
js
xor
call
adc
xchg
xchg
int3
leave
or
out
in
mov
les
pushl
lds
mov
mov
pop
fldcw
in
cmpsl
decl
jno
jg
dec
int
fsts
adc
push
ljmp
pop
loopne
lds
neg
decl
pop
out
inc
popa
mov
mov
cmp
sub
js
aaa
out
rcll
imul
out
call
jno
ljmp
add
mov
das
adc
data16
clc
pop
pushf
mov
xchg
out
cmpsb
jg
mov
adc
lret
cwtl
xchg
shlb
mov
mov
repz
int
aam
xchg
clc
inc
jbe
inc
into
ret
aas
outsb
adc
cwtl
xor
addr16
lcall
stos
dec
loop
test
stc
jno
pop
aaa
mov
into
rcl
icebp
sbb
or
push
push
je
mov
sbb
jbe
call
loop
idivb
jbe
decl
stos
push
out
mul
pop
inc
imul
imul
int3
mov
cli
or
xor
jo
and
mov
add
arpl
es
inc
inc
and
test
mov
pushl
xchg
mov
mov
cmpsl
pusha
and
roll
pop
add
push
mov
sbb
inc
jp
dec
adc
into
cmp
icebp
aas
mov
pop
test
jae
ja
inc
sbb
int
xchg
mov
ljmp
or
or
subl
sbb
cmp
mov
into
add
jg
aaa
stos
mov
mov
loope
dec
sub
lret
ja
or
push
mov
adc
push
in
push
jg
hlt
mov
addb
jb
add
and
ud1
push
cmp
daa
adc
push
push
sub
data16
int3
adc
mov
and
xor
mov
sbb
mov
js
lret
fsubl
lock
cli
dec
add
sbb
out
mov
fs
sub
ljmp
jb
bound
out
xchg
sti
adc
cmp
test
or
xor
lea
lock
sub
pmulhw
xchg
sub
stos
sub
arpl
aad
inc
xor
sbb
and
or
pop
js
adc
pop
cmp
push
cmp
incl
mov
pop
xchg
jmp
inc
sbb
adc
mov
mov
inc
mov
sbb
add
adc
sub
fs
jle
jle
gs
push
dec
and
mov
add
xor
call
into
push
push
adc
dec
xchg
cmc
add
adc
ret
sbb
test
and
jmp
mov
push
pop
cmp
inc
lcall
outsb
loop
outsb
add
repz
outsb
and
pop
bound
lods
xor
push
xorb
or
in
mov
mov
mov
mov
pop
dec
sbb
call
mov
pop
ljmp
data16
nop
aad
loope
ljmp
test
mov
test
xor
rcrb
roll
scas
or
mov
jno
push
push
xchg
xchg
icebp
pushl
jp
sbb
enter
mov
jns
push
std
pop
fstl
jbe
cmp
dec
mov
sub
pushl
adc
push
add
push
test
inc
out
aad
jg
jg
adcl
int
inc
iret
in
jno
sub
cltd
clc
and
adc
jae
add
and
add
dec
xchg
ljmp
fcomi
sahf
mov
adc
and
adc
lds
div
dec
cmpsb
jmp
lods
and
cmp
inc
addr16
cld
or
decl
cmp
or
repz
loopne
mov
daa
mov
adc
std
sub
jo
push
jns
aaa
jg
outsl
jp
ss
inc
add
push
lds
inc
das
inc
pop
ss
and
ja
push
pop
xor
cmpsb
add
into
call
pop
inc
js
inc
test
rorb
add
push
jno
loope
pop
lea
mov
xchg
mov
jg
test
mov
xor
cmpsb
xchg
das
sub
fs
pop
mov
xchg
out
clc
jmp
mov
mov
loope
pop
jb
or
inc
lret
jo
jbe
gs
mov
test
or
insb
data16
xchg
inc
ret
call
or
std
pop
stos
jecxz
pop
sub
inc
inc
jp
push
fwait
xorb
sbb
popa
dec
jge
std
push
fs
pop
jno
xchg
or
pop
out
jl
add
in
mov
cmp
push
mov
scas
out
js
cmp
into
aaa
mov
addr16
push
ds
cmpsl
arpl
lds
imul
fbld
lea
das
testb
dec
jo
sbb
push
scas
out
aas
lcall
bound
cmpsl
cld
push
pop
lds
fiaddl
xchg
sbb
mov
fcomps
xchg
cmp
adc
ljmp
push
mov
push
and
clc
and
lret
jmp
pop
jmp
insl
mov
lahf
sub
sbb
xor
sbb
sbb
or
cltd
sbb
cwtl
and
push
lret
lock
lcall
ret
iret
sbb
mov
mov
aas
lret
adc
es
lock
lods
repz
xor
sti
aaa
or
pop
jmp
xlat
ror
ljmp
push
mov
dec
pop
sahf
xor
lret
add
enter
sti
jg
add
push
shll
mov
mov
sbb
int
gs
and
pop
push
mov
mov
mov
scas
adc
dec
sbb
mov
sbb
fisubrl
or
ljmp
lods
jb
xchg
add
push
xchg
fsubp
int
js
jb
adc
aas
cmp
push
sub
repnz
and
mov
xor
fstp
pop
push
push
pop
xchg
pop
add
mov
test
call
sub
push
out
test
cltd
or
pop
or
test
into
mov
into
out
push
or
and
jg
icebp
out
dec
test
lods
stc
jmp
mov
hlt
mov
dec
jg
in
inc
lret
mov
lret
jg
loope
sub
or
adc
clc
or
pop
sub
jl
push
loop
or
cs
ljmp
cld
add
incl
lahf
sbb
call
in
push
cmc
fbld
mov
mov
push
stc
mov
adc
scas
cmp
mov
ljmp
sbb
and
xchg
bound
sub
ret
lock
dec
ja
xchg
ret
cwtl
clc
imul
test
inc
cmp
jno
mov
xchg
mov
inc
mov
push
mov
enter
gs
ljmp
sub
push
test
test
cli
lahf
sti
sub
jo
jle
lcall
push
push
pop
dec
lcall
dec
movsb
xchg
mov
pop
popa
loopne
mov
cmp
outsl
dec
mov
dec
push
jns
push
incl
mov
add
das
xchg
scas
js
mov
movsl
outsb
call
aaa
inc
testb
hlt
push
cltd
divb
dec
add
pop
mov
jg
incl
dec
xor
sbb
lods
mov
xor
mov
mov
jp
bnd
push
push
cmpsb
enter
je
repnz
inc
inc
inc
mov
xchg
adc
xor
subl
xor
push
xchg
dec
in
lods
cwtl
les
leave
clc
call
cmp
mov
pop
inc
stos
sti
adc
sti
shr
inc
sahf
fbld
mov
sub
mov
jbe
pop
dec
ret
sbb
aas
and
jp
adc
sbb
inc
pop
bnd
sub
sbb
mov
inc
clc
xchg
clc
mov
loopne
fwait
xchg
push
ss
mov
inc
mov
mov
jbe
stos
cmpb
xorl
movb
jg
int3
inc
popf
cltd
mov
add
into
out
nop
movsl
cmpsl
mov
movsl
scas
stos
lcall
xchg
push
pop
std
xlat
lahf
xchg
inc
out
mov
ja
lea
popa
push
fwait
and
inc
daa
push
xor
cli
jg
mov
xchg
iret
popf
inc
adc
push
add
mov
sbb
cmp
mov
into
cmp
fucompp
lcall
cld
inc
sbb
data16
aas
mov
out
lods
xchg
xchg
psubsb
mov
in
mov
cmp
loopne
pop
lods
fwait
cmp
std
cmc
cmpsb
mov
inc
mov
cltd
clc
mov
push
mov
adc
decl
add
mov
xor
pop
push
push
mov
dec
mov
cld
jg
jmp
cmp
dec
push
cld
dec
mov
pop
gs
jno
insb
mov
pop
js
fbld
push
sub
sbb
pushf
xor
rcrl
call
enter
mov
inc
mov
xchg
cmpsb
rol
sahf
lods
mov
in
clc
mov
out
dec
pushf
lret
push
push
leave
subl
pop
icebp
ljmp
jno
shlb
mov
or
in
loope
call
mov
cmp
push
mov
cmp
or
mov
mov
inc
push
mov
repz
mov
jb
mov
test
ljmp
sbb
sbb
cmp
rolb
fs
mov
adc
lahf
mov
xchg
sbb
aad
stc
decl
lret
cmp
inc
out
xor
inc
outsl
push
xchg
pop
in
sbb
and
cltd
jb
cmp
scas
dec
mov
aas
movsl
repnz
fbld
sti
pusha
adcb
cs
outsl
pop
lds
mov
and
pop
lea
nop
add
jle
cld
jg
hlt
rolb
lea
pop
mov
or
incl
cmp
test
push
inc
pop
in
mov
cwtl
add
inc
push
bound
pop
popa
push
test
add
jmp
xchg
hlt
or
in
xchg
xor
push
pusha
push
bound
fs
mov
int3
add
lcall
std
andb
inc
je
xorl
jecxz
in
and
nop
inc
add
decl
movsl
int
ja
sbb
jmp
ljmp
fstl
fs
fisubs
xor
jns
cld
xor
sub
std
pushl
fsubl
scas
out
enter
push
jmp
fsubrl
bound
aam
xchg
mov
mov
dec
stos
dec
or
aaa
sub
dec
outsl
dec
loop
push
decl
popa
inc
ret
and
sti
sahf
adc
repnz
jle
dec
clc
push
push
pusha
addr16
jecxz
fwait
cmp
push
fisttpll
xlat
fists
push
xor
push
mov
jg
jno
pop
out
jbe
push
insb
clc
add
xor
addr16
cmpsb
shll
mov
push
leave
cwtl
xchg
les
sahf
fnstsw
test
fcmovb
jg
mov
int3
adc
lret
xor
bound
dec
xchg
cmp
sbb
jg
fsts
sub
in
sbb
mov
pop
clc
shll
call
mov
dec
std
adc
mov
inc
sub
jp
add
push
cmp
ljmp
clc
sub
jl
cmp
or
out
mov
repnz
movsb
gs
mov
lcall
cld
aas
mov
pop
mov
decl
xor
add
lret
shll
je
pop
into
push
ss
push
sub
xor
xchg
fildll
jge
lds
test
sahf
int
push
dec
inc
pop
add
mov
xchg
or
adc
outsb
push
fbld
sub
xchg
or
lret
add
sar
push
dec
mov
inc
xor
addl
dec
out
icebp
lods
lods
test
pushl
jge
fstp
xchg
rcrl
xor
pop
inc
pusha
jb
push
repz
ret
xchg
sbb
inc
test
inc
mov
push
sub
xchg
lock
mov
cs
mov
shrl
sub
fdivrp
mov
adc
dec
xor
scas
or
mov
test
out
into
stos
pop
in
daa
dec
push
xlat
ljmp
sbb
adc
mov
icebp
shlb
sbb
sub
lcall
adc
and
xchg
mov
sub
pop
or
mov
or
push
push
cmpsb
insl
jp
inc
sub
or
xor
fs
pop
loop
dec
add
aas
or
lcall
push
or
ret
pop
inc
pop
cli
pop
push
add
inc
lret
sti
mov
push
repz
into
push
jge
jl
xor
pop
insb
push
inc
lods
ljmp
call
mov
dec
sub
adc
imul
fs
xor
jne
shrb
mov
ja
sub
stc
fiadds
dec
js
pushf
push
jg
mov
xchg
push
sub
ret
ret
xchg
shrb
mov
inc
xchg
jo
xchg
mov
pop
pop
loopne
ljmp
sbb
dec
push
shll
mov
clc
das
cmpb
rcl
sti
je
stos
push
push
xchg
mov
and
dec
mov
or
xchg
jge
xor
movsl
push
les
mov
fs
insl
mov
inc
push
mov
xor
cmp
js
dec
xchg
adc
inc
pop
fsubs
xchg
insb
pop
pop
clc
mov
pop
dec
cmp
mov
fsubl
push
jg
xchg
push
xorb
out
sub
aaa
sbb
add
mov
sub
sahf
cmp
xor
pop
das
fiadds
push
sbb
and
incl
xchg
mov
jno
xor
push
xchg
scas
lcall
add
test
dec
repnz
xor
jnp
and
add
jne
xor
dec
adc
js
dec
ret
stos
popf
in
cltd
sub
ss
adc
xchg
add
test
pop
push
push
xor
inc
mov
pop
cmp
mov
sub
outsb
add
ljmp
jg
adc
jg
lea
mov
icebp
ret
clc
jl
fsubs
pushf
int3
add
ljmp
push
adc
inc
mov
mov
insb
lds
mov
cmp
lcall
lcall
inc
push
xor
sbb
test
pop
repnz
cvtpi2ps
and
imul
pushl
popa
cmp
push
outsl
xchg
add
cmc
push
dec
scas
sbb
add
and
sbb
adc
dec
xchg
std
insb
mov
adc
in
sti
sbbl
jge
adc
nop
das
jge
jns
add
xor
imul
dec
inc
scas
loope
add
enter
xchg
cld
push
xchg
cwtl
jnp
push
ds
jbe
pushl
push
clc
sbb
ficoml
pop
ds
cmp
incl
pop
imul
sub
loopne
jle
xchg
xor
xor
xchg
clc
cmp
xor
es
into
pop
movsl
lcall
push
sbb
mov
push
inc
cmp
repnz
decl
mov
cmp
out
test
bound
jp
add
mov
xchg
adc
pusha
sahf
jmp
lcall
mov
jbe
psrld
mov
mov
mov
lods
xchg
insb
faddl
mov
mov
scas
ss
pop
mov
scas
push
fwait
jg
mov
jae
mov
xchg
in
and
add
int
adc
cltd
and
lcall
mov
ljmp
and
vmwrite
pop
mov
jge
sub
mov
aas
fwait
push
cmpsl
adc
add
inc
adc
fiadds
push
fnsave
mov
push
mov
jns
push
arpl
insl
lret
pop
inc
decl
mov
dec
test
jl
mov
mov
js
shrl
push
or
mov
push
jp
xchg
std
mov
mov
mov
pop
pop
sub
sub
movsl
mov
repz
ret
mov
dec
xor
or
mov
jp
ds
xor
mov
mov
pop
ljmp
nop
adc
mov
cwtl
rorb
ret
dec
js
dec
inc
jmp
inc
enter
movsl
adc
sbb
enter
add
aas
dec
rclb
push
stc
pop
push
ret
in
push
xchg
pop
push
mov
out
mov
inc
fildl
dec
fs
lcall
mov
push
mov
add
add
adc
aaa
sbb
dec
mov
addr16
dec
je
std
mov
rorb
mov
inc
push
mov
push
xor
stos
xchg
stos
lcall
or
shll
inc
or
lret
out
test
rclb
sbb
pop
xorb
ficompl
cltd
inc
stos
or
aaa
jo
inc
pop
or
push
lods
data16
xchg
jle
cmp
xor
mov
and
xchg
int
mov
into
out
add
cmp
in
roll
out
push
cltd
xchg
push
xchg
mov
mov
mov
add
mov
lcall
push
sub
and
test
cmp
aas
jmp
call
push
decl
notl
int3
or
movsl
popa
fimuls
xlat
inc
xchg
cs
push
mov
cmp
and
cmp
cmp
cmp
jg
cmc
subb
loop
es
orl
ljmp
adc
stc
xor
xor
lds
adc
das
or
lcall
ds
mov
jo
js
add
out
sub
mov
mov
outsl
pop
dec
cmp
clc
sub
push
sarb
fwait
pop
and
xchg
mov
inc
iret
mov
sbb
cld
xor
add
aam
dec
jbe
jns
push
mov
ret
lcall
adc
aaa
cld
subb
xchg
pop
hlt
and
jge
sar
mov
loop
lcall
or
nop
push
imul
lret
and
add
jp
lds
sbb
gs
xor
dec
insb
addr16
cli
sub
add
call
std
jg
arpl
lcall
sbb
pop
jno
js
push
jnp
ljmp
dec
adc
pop
loope
mov
inc
sub
push
add
fnstsw
and
xor
xchg
movsl
mov
lods
call
hlt
xchg
add
int3
add
and
cmp
sub
pushl
testb
dec
mov
hlt
stos
jns
add
sub
scas
movsl
test
inc
icebp
lcall
cmpsb
daa
loop
sarl
sub
sarb
fmull
fdivs
rep
mov
sbb
add
mov
andb
mov
adc
data16
cld
inc
pop
jmp
push
imul
and
cmp
decl
dec
jl
pop
sub
das
gs
inc
sbb
das
push
jmp
jge
sbb
daa
cltd
push
mov
aas
xor
out
and
sbb
cli
cltd
cwtl
dec
mov
decl
fcompl
pusha
insl
fsubrl
je
aas
jb
or
lahf
dec
movsl
into
stos
dec
rcrl
sub
or
mov
xchg
mov
mov
ja
mov
dec
lcall
jl
push
fcos
mov
scas
stos
push
mov
and
add
or
sbb
and
cmp
jg
push
movsb
push
xor
insb
sbb
insl
cwtl
pop
sahf
in
jge
jp
js
ds
lock
incl
jo
push
fidivl
repz
mov
mov
mov
jae
xor
loopne
pop
sbb
mov
movsb
out
test
cmp
icebp
incl
fldt
inc
xchg
arpl
insb
sbb
aam
das
xchg
lock
lods
lock
fwait
sbb
and
decl
call
fistl
pop
rcrb
jle
aaa
xchg
clc
insb
insb
fs
ss
pop
jge
jb
ja
ljmp
outsb
pop
push
pop
and
push
and
lea
mov
or
pop
ljmp
or
ljmp
and
push
jg
pop
addr16
imul
nop
cmp
daa
pop
push
pop
arpl
push
out
repnz
inc
xchg
mov
mov
lcall
rcll
ja
pusha
insl
loopne
aam
jmp
mov
mov
pop
mov
mov
pop
notb
jnp,pn
mov
aam
gs
adc
lcall
jbe,pn
adc
fwait
dec
pop
ret
adc
pop
xchg
mov
cmovo
sbb
decl
dec
push
mov
push
jne
mov
lods
jne
divb
lds
repz
push
pop
fstpl
cmpsb
sub
out
mov
enter
mov
mov
inc
fdivrl
fwait
xchg
notb
push
lods
lods
lahf
subb
push
fdiv
and
mov
test
cmp
arpl
ljmp
sub
cmc
cld
mov
xchg
enter
test
jle
jg
dec
sub
sbb
rolb
jne,pt
ret
or
and
pop
in
mov
cmp
pop
lods
push
decl
inc
call
dec
js
je
mov
das
xor
decl
add
mov
sbbb
xor
jg
incb
and
sub
xor
xor
push
pop
lea
jmp
nop
decb
and
lcall
push
mov
mov
pop
adc
jge
xchg
aas
mov
scas
cli
push
dec
mov
add
test
imul
xor
sahf
and
rcll
test
mov
dec
loopne
outsb
aas
jne
test
mov
push
in
jge
cs
adc
in
inc
inc
lcall
mov
sti
sub
sbb
push
xor
sub
les
and
cmc
mov
sbb
outsl
test
insl
inc
xchg
iret
mov
push
insl
xchg
shll
jbe
adc
imul
cmp
mov
push
pop
js
xorb
loope
imul
fdivrl
lcall
mov
imul
and
mov
push
lcall
shlb
push
imul
push
sahf
add
mov
mov
xchg
hlt
incl
mov
xor
jg
inc
inc
dec
pop
jecxz
pusha
pushl
jne
adc
dec
mov
loop
dec
lds
push
mov
mov
mov
dec
test
push
in
or
mov
mov
mov
sbb
rorl
push
insb
jbe
shl
lcall
pop
pop
fidivl
inc
insb
mov
mov
or
stc
mov
out
jg
mov
ja
rorb
jb
cmp
pushf
into
cltd
dec
stc
mov
sbb
fidivl
ret
std
xor
pop
enter
sbb
sbb
arpl
add
adc
cmp
lcall
arpl
out
lds
fists
cmp
repz
push
fdivrp
call
push
ret
jno
mov
mov
xor
repnz
push
shrb
notb
xchg
adc
add
jle
out
andb
fcomip
cltd
frstor
cli
jecxz
shlb
dec
dec
repnz
inc
ja
cli
call
bound
repz
push
iret
scas
out
pop
test
addl
jbe
ljmp
out
ret
dec
add
std
add
das
pop
jge
push
ds
ret
xchg
mov
cmp
out
ds
decl
sbb
xor
cmc
and
sahf
add
test
movsb
xor
mov
test
mov
std
repnz
pop
dec
adc
ds
mov
inc
pushf
shlb
pop
mov
xchg
decl
jae
push
data16
ds
sarl
jle
je,pn
or
pop
into
cmpb
dec
std
les
push
sti
lcall
dec
push
loop
inc
push
pop
push
sbb
lock
into
add
mov
incl
lods
iret
andb
ss
mov
dec
aad
js
out
loop
fs
xor
pop
xchg
xchg
cltd
sti
or
cmpsb
stc
mov
ljmp
cmc
addr16
data16
xor
ds
dec
mov
mov
decl
adc
cli
sahf
repnz
add
in
jno
cltd
in
es
ljmp
dec
jns
fsubl
or
sti
mov
sbb
cmpsb
push
out
pop
outsb
popa
adc
add
fists
pop
addr16
jb,pn
cmpsb
xor
mov
adc
in
mov
pushl
fisttps
inc
xchg
xor
mov
aad
clc
adc
rcrl
addb
or
aaa
insb
xor
push
loopne
jnp
push
js
mov
mov
sbb
repnz
cmc
daa
lock
jp
loopne
gs
lds
push
pusha
pushf
xor
mov
mov
mov
mov
jp
mov
scas
dec
std
jge
decl
out
je
add
inc
fdivs
pop
dec
mov
dec
imul
lret
cmpsb
std
cmp
or
dec
rorb
pushl
shlb
push
arpl
sbb
inc
in
xchg
inc
testl
push
enter
xchg
rorb
jg
fldl
mov
or
lret
mov
mov
cmp
cwtl
mov
cld
mov
add
shlb
stos
icebp
sahf
mov
lock
out
repnz
jo
add
jns
decl
jge
sub
mov
loopne
dec
sti
adc
shlb
xor
dec
cli
sub
stc
sbb
add
test
call
lods
enter
fnstenv
cld
sbb
dec
lcall
cmp
dec
movsb
push
gs
xchg
sahf
cli
dec
add
add
push
rcrl
outsb
jle
xor
fwait
cmp
mov
aam
dec
stos
ljmp
mov
lahf
cmp
mov
xchg
jno
inc
lods
inc
jmp
scas
test
xchg
iret
mov
pop
js
mov
outsb
jmp
loopne
mov
xlat
pop
push
or
or
xchg
pop
ret
bound
cld
nop
arpl
loope
pushl
icebp
cmp
outsl
mov
inc
jo
rclb
enter
push
mov
cmp
sbb
dec
xchg
aas
jg
mov
call
cmc
ds
cmpsl
rcrl
daa
xchg
jnp
sbb
jg
jle
push
jb
out
xchg
and
lcall
aaa
cld
dec
aam
add
or
push
cmc
mov
sti
movl
inc
mov
xchg
ret
stos
fcompl
add
incl
imul
movsb
inc
lcall
mov
pop
mov
lcall
stc
decl
rorb
mov
xchg
dec
sahf
aas
gs
mov
lcall
fwait
lcall
popa
mov
imul
cmp
stos
inc
mov
push
lcall
sarl
inc
fisubrs
subl
pushl
dec
repz
sub
roll
pop
mov
call
jbe
out
fisubl
cld
mov
hlt
into
test
sahf
inc
fidivrs
lcall
cmp
shll
add
mov
lcall
aaa
scas
inc
mov
iret
call
decl
push
inc
xchg
std
mov
mov
xchg
add
inc
sahf
dec
mov
cmpsl
idivl
imul
mov
sub
int3
sbb
inc
call
cmp
mov
pusha
mov
js
nop
pop
fdivrl
ljmp
sub
jmp
or
sbb
mov
mov
pop
pop
push
mov
es
add
dec
int
icebp
mov
xchg
js
or
pop
mov
sahf
inc
call
outsb
cli
jg
push
mov
mov
jle
add
stos
xchg
clc
decl
sahf
lretw
xor
sarl
mov
sbb
incl
adc
icebp
sub
jle
sbb
xchg
cmpl
enter
repnz
jmp
mov
mov
icebp
push
mov
cld
rcll
stos
ss
mov
dec
leave
es
add
outsl
xchg
adc
mov
negb
sub
movsl
sarl
cwtl
test
ret
ljmp
mov
stos
sbb
push
nop
hlt
mov
call
pop
movsb
andb
enter
ljmp
lcall
aaa
xor
movsl
push
mov
test
stos
fadds
jle
data16
mov
fistpll
daa
mov
cltd
cs
pop
mov
and
mov
icebp
test
add
jbe
clc
lcall
add
inc
adc
jge
mov
adc
iret
xchg
lock
dec
shrl
cmp
sub
dec
popf
jle
repnz
and
mov
xchg
movb
enter
test
xchg
out
jecxz
adc
jb
out
mov
aaa
pusha
xlat
movb
mov
sti
es
dec
cmpsl
xor
es
aas
xchg
into
sbb
sbb
nop
push
in
add
clc
out
test
jb
or
das
xchg
or
xor
mov
mov
jmp
insl
stos
pushl
mov
jnp
lods
adc
clc
incl
xor
inc
fnstenv
outsl
xchg
push
xchg
cmc
push
push
mov
mov
xchg
mov
mov
stc
lahf
add
mov
out
inc
stos
out
and
jge
lods
mov
mov
addr16
cmpsl
pop
mov
bound
loopne
jle
xchg
in
pop
xchg
movb
sahf
mov
inc
loope
mov
decl
xchg
jl
test
cwtl
push
lds
mov
jmp
cmpsl
mov
mov
ds
sbb
icebp
incl
cltd
push
out
lea
push
dec
inc
mov
scas
loope
inc
mov
or
dec
repz
dec
fsubrs
jg
daa
mov
fwait
aas
jmp
mov
movsl
push
cmc
sub
cmpsl
mov
mov
test
cmpsl
mov
push
cld
aas
pushl
mov
inc
xchg
stos
enter
into
xchg
pushf
js
xchg
in
xchg
outsb
lcall
lea
sbb
mov
jg
mov
enter
lods
aam
inc
test
mov
mov
mov
test
cld
ljmp
cltd
mov
addr16
cwtl
fnstsw
js
int3
mov
test
out
scas
test
jp
std
cs
mov
add
out
out
mov
call
ret
inc
test
dec
ret
jp
xor
imul
mov
cli
xchg
aas
push
jb
out
rcrl
out
xchg
xchg
mov
loop
aaa
cld
push
loopne
jp
jo
xchg
push
daa
push
cld
jp
add
cld
pop
xchg
and
mov
or
out
repnz
ret
sub
es
outsb
clc
cmp
jb
pop
rclb
icebp
call
lds
fs
mov
stc
cmp
jb
decl
sub
mov
mov
inc
mov
dec
int3
or
push
and
dec
mov
jg
std
xchg
adc
push
cmc
mov
outsb
and
mov
aas
adc
xchg
adc
inc
push
cltd
dec
out
iret
sbb
call
repz
mov
repz
dec
mov
call
clc
lcall
in
movsl
testl
hlt
and
dec
test
dec
push
mov
mov
in
xchg
pop
loopne
lcall
xor
test
lea
mov
repnz
mov
mov
or
pop
jg
cs
lea
sbb
sti
xchg
stc
and
out
fisttps
mov
jg
sub
xorl
nop
mov
fwait
jp
xchg
xor
cmpsl
les
mov
call
cmp
inc
test
fs
xchg
in
inc
icebp
xor
lods
iret
nop
das
clc
out
frstor
roll
popf
pop
les
push
jne
or
sti
cmp
add
call
jbe
icebp
test
push
xchg
lahf
outsb
lret
mov
sbb
cld
mov
xor
out
mov
mov
imul
cmp
cmpsb
sbb
sarl
mov
push
in
xchg
fwait
stos
jnp
jg
incl
mov
repz
mov
adc
mov
xchg
fisttpl
roll
lcall
shlb
mov
mov
imul
jg
int3
cmp
cld
sahf
lcall
dec
xchg
mov
push
out
or
call
test
inc
mov
lds
lahf
cld
incl
shlb
sbb
js
ss
lcall
add
pop
jl
pop
fmull
loop
out
adc
into
pushf
jns
test
lcall
test
ds
jne
mov
mov
mov
out
filds
cmp
xchg
testw
lahf
sbb
cmpsb
lock
xchg
and
in
sahf
mov
les
xchg
dec
icebp
sbb
ja
loope
dec
rclb
fwait
lock
fimull
out
daa
fists
cmpl
jns
adc
dec
jns
cmp
add
sti
mov
xchg
mov
out
ret
shrl
dec
lcall
mov
xor
rcll
adc
adc
daa
cwtl
data16
sbb
arpl
ljmp
xchg
fidivrl
je
in
push
inc
cmp
inc
test
jge
test
lcall
ret
in
stos
int3
add
test
sahf
push
inc
adc
lea
pop
loopne
jp
mov
or
jge
and
das
icebp
sbb
cmpsl
dec
xchg
into
sbb
shlb
out
ret
fdivl
xor
pop
xorl
repnz
adc
pushl
loope
fnstsw
jbe
and
lcall
loope
jle
cmpsb
cli
cs
lcall
fistps
and
mov
movsl
and
decl
pop
out
stos
rcrb
mov
stos
mov
dec
mov
js
cmp
jge
cltd
ds
add
mov
push
xorb
jg
jg
mov
lea
xor
mov
add
inc
mov
mov
daa
push
cli
stos
and
cmp
loopne
fwait
scas
dec
sti
and
rclb
push
mov
fcoml
and
mov
mov
jmp
xchg
mov
adc
inc
stos
jg
jbe
push
mov
and
mov
jbe
movl
movsl
lcall
cmp
jecxz
test
mov
aam
inc
shll
stc
and
mov
cwtl
movsb
arpl
test
test
fisubl
xor
cwtl
push
aad
icebp
inc
scas
xor
roll
xor
mov
jecxz
mov
inc
xchg
and
mov
sub
out
incl
sbb
cmpsb
lea
aaa
mov
fsts
push
push
cmpl
mov
lret
xchg
pop
lock
lret
and
pop
sbb
lcall
je,pn
mov
into
sbb
xchg
xchg
mov
and
aaa
jecxz
icebp
int3
mov
mov
mov
lea
pop
movsb
filds
push
clc
xchg
int3
push
ja
pop
call
dec
mov
cli
lcall
mov
jl
in
mov
cmp
int
out
lock
mov
test
test
mov
iret
xchg
idivl
jle
filds
rolb
jae
jecxz
and
stos
and
or
mov
lcall
stc
incl
cmp
lcall
js
cwtl
call
fwait
jmp
xchg
cwtl
stos
dec
in
adc
test
inc
test
lahf
inc
aam
sti
cmp
fisttpl
jmp
outsb
lcall
push
dec
sbb
inc
into
mov
das
cli
or
scas
arpl
xor
xchg
stos
stos
test
and
pop
and
ljmp
stos
jbe
jg
jg
cmp
fisubrs
adc
call
jo
mov
mov
out
fldl
mov
mov
xchg
orb
cmp
jns
push
insl
call
pop
mov
xchg
fnstenv
bound
inc
cmc
call
fidivs
jg
xchg
jo
mov
gs
in
cmpsl
les
stos
pop
cmc
cmp
jle
and
pop
mov
cmpsb
jne
in
inc
test
xchg
stos
insb
jns
stos
jg
fidivs
iret
adc
push
daa
scas
add
push
push
sub
sub
gs
lahf
fbld
lahf
nop
cmpsb
jb
imul
cwtl
cwtl
cmp
jae
mov
test
xor
cwtl
nop
cmpsb
jb
fdivrl
sub
cld
sahf
mov
jb
xchg
incl
push
or
cmpsb
into
mov
pop
cmpsb
dec
orl
xchg
push
mov
cmpsb
add
sbb
pop
into
rep
stos
movsl
scas
jne
aas
xchg
cmp
lcall
xchg
roll
mov
inc
add
pop
into
out
mov
icebp
or
incl
test
inc
xchg
lods
jns
ljmp
pop
mov
ds
or
stc
lahf
fnsave
stos
xor
lahf
sbbb
nop
cwtl
mov
nop
add
cmp
test
test
xchg
mov
push
add
call
enter
es
lock
jne
and
decl
pop
movsb
mov
cmp
fidivs
dec
push
lcall
shlb
dec
lcall
aaa
mov
sti
xchg
stos
jp
mov
sbb
and
mov
out
nop
arpl
cwtl
inc
leave
xor
lock
cmp
test
add
cld
add
popf
xchg
pop
mov
cwtl
rolb
pop
mov
xchg
sub
subb
mov
pushl
shlb
mov
xchg
sbb
xchg
mov
sub
xor
push
ret
lcall
loope
jp
cmp
icebp
pushl
dec
push
mov
dec
repnz
mov
pop
jp
shrl
cmpsb
jmp
out
inc
xchg
loope
ret
mull
pop
cli
test
jb
jo
scas
xor
cmpsb
xchg
sar
daa
xchg
fdivl
out
xor
data16
sub
mov
shlb
mov
mov
loopne
push
fdivrl
out
test
mov
push
data16
push
decl
into
jl
lcall
jg
xchg
jmp
bound
lock
inc
jle
xor
cwtl
adc
mov
xchg
stos
shlb
cwtl
fiadds
jp
push
jg
pushl
testb
mov
loope
bound
push
out
pop
inc
stos
and
mov
lcall
les
and
iret
mov
je
rorb
fs
push
insl
xorl
stc
sub
loop
fidivl
dec
clc
andb
push
xchg
mov
aad
mov
xchg
jo
or
jae
in
mov
gs
stos
mov
decl
mov
insl
push
sbb
popf
insl
loopnew
jae
mov
jle
xchg
insl
mov
pop
pop
or
addr16
ds
jo
sbb
mov
call
movsb
jno
fstps
jno
adc
popa
pop
dec
stos
ja
dec
mov
pop
pop
call
fbstp
out
orb
fwait
outsb
dec
jae
cmp
daa
pushf
addr16
pop
pop
add
sbb
jns
cmp
mov
test
push
das
mov
ljmp
xchg
jnp
cmp
pop
call
dec
dec
jl
pusha
fwait
inc
movsl
arpl
ljmp
aas
xor
inc
ds
dec
push
inc
je
inc
in
jge
clc
or
decl
ret
dec
movb
stos
push
add
pusha
push
bsf
aaa
lcall
jb
push
shrl
push
in
xor
je
jg
jns
push
fwait
aaa
popa
cs
cld
mov
imul
mov
mov
mov
pop
mov
leave
cld
xchg
aaa
jb
test
xchg
mov
ljmp
shlb
push
dec
push
int3
outsl
aad
jle
repnz
fs
dec
outsl
push
mov
push
xchg
adc
out
test
push
ljmp
pushf
lea
lods
insb
fildll
jb
sub
das
add
adc
mov
push
and
arpl
fbld
mov
pop
mov
ds
adc
xchg
dec
mov
inc
fcos
sub
xor
and
or
cwtl
sbb
jge
or
lcall
push
rorl
sbb
and
js
pushl
add
mov
push
ja
add
nop
mov
pop
mov
jle
dec
adc
mov
call
and
mov
imul
cli
popf
inc
imul
sbb
sbb
xor
aas
jo
cmp
pop
lods
dec
ja
std
xchg
popa
mov
add
lea
or
aas
mov
mov
cmpsb
lock
mov
inc
lret
xchg
xor
push
mov
xor
jp
cmc
fbld
push
xchg
add
lahf
jp
mov
or
iret
das
sub
push
push
icebp
adc
int
mov
out
mov
out
jne
and
sbb
dec
idiv
pop
inc
inc
rcrl
xchg
push
rorb
ja
xchg
cmp
call
or
push
add
sbb
ds
xchg
xor
sub
stos
call
std
mov
sbb
add
and
adc
add
pushl
cmp
fwait
data16
push
xchg
clc
cmp
jg
repnz
or
out
add
ja
push
enter
jne
jge
lcall
popa
sub
jge
fwait
cmp
fwait
xchg
push
out
inc
inc
or
mov
cmpsb
test
push
rorb
pop
test
and
out
cmp
nop
imul
outsl
in
inc
push
into
dec
jge
cmpsb
fbld
ret
push
jp
cmp
incl
sahf
push
stc
push
pop
and
lcall
inc
pop
cmpsl
mov
push
sub
cwtl
jns
movsl
ljmp
sub
scas
push
mov
sarb
and
mov
mov
mov
sbbl
repz
cmc
cwtl
test
xchg
arpl
inc
adc
inc
lods
or
mov
mov
mov
sub
cmp
data16
scas
xor
rol
jo
push
movsb
push
dec
cmpb
mov
and
incl
ss
push
pusha
jecxz
push
out
xchg
push
rol
decl
clc
mov
adc
adc
and
filds
mov
cli
mov
data16
sub
fnstcw
scas
les
and
lcall
adc
cmp
mov
lods
pop
pop
call
push
xchg
mov
and
and
sbb
push
jle
js
out
sub
mov
stc
movb
icebp
aas
lods
push
push
jb
sahf
loopne
cltd
dec
int3
inc
call
fsubs
pop
fisubl
cld
sub
icebp
push
mov
adc
cli
decl
insb
add
dec
jp
sub
lcall
xchg
stc
xor
scas
jmp
lcall
dec
jno
lods
adc
icebp
mov
out
lcall
jg
mov
mov
js
dec
ret
dec
je
sub
xchg
sub
or
mov
sbb
xchg
lea
das
and
sbb
jmp
cmc
scas
dec
mov
sbbl
ljmp
mov
xchg
xlat
xchg
push
scas
imul
jnp
xor
sub
call
cli
sub
dec
scas
xlat
xor
jne
or
aaa
pop
ds
adc
add
mov
aas
out
fimull
sub
out
ss
call
bound
or
movsl
sub
stos
adc
jp
fnstenv
pop
shrb
scas
jle
cmp
lcall
pop
sub
decl
fldcw
nop
cmpsb
into
sbb
mov
data16
rcrb
mov
add
xchg
movsl
fdivl
stos
push
movsb
or
mov
push
sarl
ret
mov
pop
mul
or
fdivrl
xchg
out
pop
and
incl
xchg
rcll
stc
out
inc
mov
cmpsb
dec
cmp
inc
js
lods
jae
inc
jg
jmp
sbb
cmp
pop
cmp
pop
dec
sbb
mov
mov
cmc
inc
mov
mov
sbb
scas
ja
decl
lock
iret
shlb
pop
jmp
jnp
xchg
inc
addr16
add
stos
mov
call
lea
movsb
movsl
lcall
mov
cmp
mov
sub
mov
adc
ficomps
pop
mov
adc
pop
out
or
jnp
mov
inc
jp
test
inc
jo
imul
out
clc
outsb
push
push
push
jne
lods
or
rolb
push
push
pop
sub
std
outsl
push
adc
arpl
inc
shl
dec
ljmp
ficompl
out
rolb
adc
mov
cli
jmp
push
push
add
int3
inc
jmp
dec
mov
and
inc
cmc
fs
loop
repnz
jo
jbe
jno
jg
cmc
decl
fwait
mov
jne
xor
out
imul
ret
mov
inc
test
stos
bound
insl
loop
cli
xchg
je
jp
call
sub
stos
test
lcall
out
mov
test
pop
je
dec
ret
inc
pop
scas
imul
out
cltd
sti
in
popa
mov
test
push
xchg
testl
decl
cwtl
ret
cmp
push
dec
decl
xchg
lods
add
cmpsl
and
push
sbb
add
call
pop
popf
mov
xor
push
mov
decl
outsb
and
sub
sub
ficoml
pop
test
dec
cmp
pushl
mov
mov
aaa
cli
lcall
adcb
loop
call
shrb
lods
mov
dec
push
addr16
adc
and
fidivrl
filds
jecxz
mov
xchg
fmull
xchg
cltd
add
mov
insl
int
shll
lcall
insb
add
jmp
xchg
mov
cwtl
xor
icebp
pop
push
add
fbstp
jns
shlb
fbstp
lock
decl
mov
mov
insb
aam
mov
ud0
mov
ret
push
imul
addr16
jmp
incl
jae
jbe
inc
out
std
push
cmp
push
fldenv
test
fdiv
pop
xchg
mov
cmp
orb
mov
cmpl
inc
jecxz
xchg
lock
sbbl
pop
jp
add
cld
push
cmc
push
test
xchg
lahf
in
fbld
push
cmp
and
negb
test
mov
loope
or
add
cli
or
shrl
xchg
out
shrl
mov
mov
scas
imul
daa
cld
sub
sub
dec
sub
dec
fbstp
out
je
add
jge
pop
rcrl
mov
out
arpl
pop
jne
adc
faddl
popf
in
sar
insl
test
sub
xchg
mov
inc
bound
cmpl
cmp
ja
call
fcomi
mov
dec
add
mov
push
test
push
fimuls
outsl
push
shll
inc
popa
movsb
pop
push
pusha
xchg
push
jae
mov
fucom
add
in
pop
mov
pop
inc
loope
int3
cs
mov
shrb
push
pop
test
pop
cmp
adc
cltd
outsl
lret
ljmp
nop
lea
out
or
jmp
movb
sti
aad
mov
push
cmp
repz
cmp
aas
pop
repnz
jp
push
add
orb
cmpsb
dec
stos
mov
sub
idiv
fwait
incl
test
xchg
repz
mov
sbb
scas
inc
gs
xchg
stc
lods
std
iret
ljmp
cli
lahf
cmp
add
pop
testb
xchg
test
stos
add
xorb
fs
fmull
pop
popa
dec
cli
rcrb
mov
repz
mov
inc
in
push
push
insb
in
sar
rol
jp
bnd
mov
out
cmp
aas
out
mov
out
lcall
jmp
adc
dec
lock
dec
sti
adc
pop
mov
mov
cltd
mov
leave
cmc
push
adc
in
jb
rsqrtps
pop
enter
clc
jg
or
sub
jl
xor
cmc
test
pop
outsb
jmp
aas
jp
ds
xor
leave
cmc
jnp
mov
pop
cmpsl
mov
and
ret
jbe
xchg
pop
ja
adc
leave
adc
inc
pop
push
fwait
and
jnp
and
test
arpl
js
loop
push
mov
dec
test
inc
mov
mov
xor
push
icebp
call
pop
mov
jge
mov
imul
ss
out
add
shll
cld
adc
outsb
out
add
call
mov
inc
inc
cmc
jbe
mov
out
les
pop
pop
lods
decl
push
adc
sti
add
fistps
jb
ljmp
cli
lcall
and
adc
into
pop
loop
fnstsw
mov
lahf
movsl
lcall
popa
push
scas
loopne
push
test
cltd
iret
push
inc
pop
pop
repz
add
cmp
inc
dec
jno
std
cltd
cmpsb
jg
pop
out
daa
jecxz
adc
jle
mov
sbb
sub
mov
lcall
pop
icebp
xchg
dec
mov
aam
mov
adc
insl
out
out
adc
jmp
int
mov
mov
xchg
ss
bound
pop
clc
pop
lea
out
and
push
aad
mov
dec
xchg
insl
push
dec
dec
lret
notb
adc
clc
shll
out
std
push
push
stos
and
push
sbb
pop
out
loop
dec
and
enter
xchg
lcall
fmull
jp
inc
mov
rorl
mov
pop
mov
cli
jb
les
dec
repnz
mov
clc
rorb
mov
psadbw
push
in
sub
lahf
out
in
push
inc
add
sti
enter
inc
sbb
sub
ljmp
lcall
lea
cmp
xchg
mov
cltd
shr
jge
mov
and
movsl
inc
int3
repnz
aad
loopne
filds
cmp
into
jae
xchg
test
cld
pop
lcall
xchg
mov
push
add
push
repnz
js
mov
data16
insb
push
testl
pop
mov
stos
in
sub
out
mov
vmread
inc
test
cmpsb
inc
int
mov
jg
dec
fstps
and
push
push
cwtl
fdivrp
add
xchg
divb
xchg
ljmp
out
data16
jno
cmp
lock
dec
pop
cmp
lds
or
aam
mov
std
mov
cmp
mov
bound
mov
std
insb
pop
cmc
call
jae
dec
stc
mov
mov
jle
cli
or
hlt
push
adc
mov
jle
ds
inc
fwait
xor
gs
pushl
sbb
sbb
push
xchg
mov
das
add
and
jns
insl
sbb
sub
loopne
and
fcomip
cmp
negb
testb
data16
sub
sar
aas
std
andb
add
mov
or
cmp
xor
push
pop
decl
adc
out
aas
inc
jle
sbb
add
push
fdivrs
call
and
jns
and
mov
cmp
or
je
incl
mov
test
add
xchg
mov
xor
jg
addb
stos
adc
scas
js
xor
clc
call
in
outsb
popa
add
in
xchg
mov
adc
lcall
or
lcall
push
sti
pop
cmpsb
test
inc
out
incb
inc
jne
fwait
test
iret
adc
repnz
jno
mov
ja
push
pop
and
or
test
insb
pop
pop
mov
outsb
fdivrp
lock
pop
es
adc
in
fidivs
or
lcall
stos
das
dec
push
outsb
adc
dec
fsts
push
mov
cmp
sbb
add
xor
mov
mov
xor
jg
sarb
add
push
out
fs
inc
int3
lods
shll
sub
inc
btsl
scas
mov
inc
ljmp
test
test
mov
adc
outsb
pop
lcall
iret
mov
inc
iret
jns
test
gs
mov
lahf
jbe
es
aaa
inc
mov
stos
mov
int
clc
jg
push
dec
sub
inc
dec
mov
sub
add
push
and
pop
add
ja
and
stc
pop
mov
jg
cmp
mov
mov
inc
sbb
mov
ljmp
inc
xchg
xchg
xchg
outsl
movb
out
sti
and
aam
hlt
pop
popa
sub
das
xchg
lock
test
notl
arpl
test
leave
aas
adc
dec
in
xor
push
lock
adc
lods
push
and
loope
out
scas
std
lods
adc
xchg
cli
repz
mov
clc
outsl
ljmp
pusha
xor
xchg
cmp
mov
jg
cmp
cltd
xor
adc
pushl
jo
stc
lock
sti
and
enter
sbb
sub
xchg
sub
jle
movsb
jle
mov
and
mov
mov
arpl
push
or
sbb
push
stos
adc
inc
add
dec
pushf
repz
dec
mov
cli
dec
pop
cmp
mov
mov
inc
in
xor
lcall
cmpsl
fidivrl
neg
test
mov
stos
cli
mov
xor
dec
cmp
sbb
arpl
jns
pusha
push
jmp
mov
mov
mov
daa
into
adc
icebp
jnp
xorl
lcall
popa
cmpsb
cmp
inc
test
cli
dec
addr16
stos
lret
jo
pusha
xchg
test
scas
sti
sahf
jp
ja
scas
add
sub
sub
sub
push
sbb
jp
mov
out
pop
sub
ljmp
in
mov
xor
cld
jecxz,pn
repz
fs
movsl
or
fildll
dec
popl
dec
pop
mov
dec
adc
pop
stos
inc
aad
pop
das
scas
popa
nop
fisubrs
gs
out
mov
pop
push
xchg
xor
jmp
cmp
add
push
adc
lods
add
mov
decl
add
adc
int3
push
lahf
push
xor
push
cmp
addr16
push
sub
jg
inc
pop
popf
iret
cmp
mov
cmpsb
stc
push
jnp
sahf
pop
push
aaa
cmpsl
hlt
sub
push
xor
pop
call
hlt
sub
jg
hlt
or
cmp
cmp
or
and
jmp
lcall
stos
or
jno
push
scas
xor
and
imul
pop
mov
clc
add
lods
repnz
push
dec
aad
push
pushf
sub
jp
jp
ja
and
sub
dec
jmp
and
push
mov
mov
push
test
jmp
pop
loope
pop
lcall
aas
cli
addb
xchg
sub
mov
sahf
cmp
xchg
popl
movsl
lcall
or
ret
cmp
cld
outsb
aaa
dec
pop
ficoml
xor
mov
lea
call
sbb
iret
xchg
sub
pop
fs
icebp
sbb
sbb
add
fimull
pop
inc
cli
add
mov
js
xchg
cmpsb
shlb
call
cmpsl
iret
mov
subb
gs
push
inc
fildll
inc
nop
test
stos
dec
test
mov
xorl
push
shl
mov
mov
imul
dec
jg
mov
or
add
popa
push
inc
jl
stos
jge
add
cmpsb
incl
jae
push
push
mov
xchg
pop
popf
add
nop
lds
pop
push
das
push
sbb
aad
jp
jg
call
push
int3
jne
jns
sti
mov
es
xchg
xchg
sbb
add
lcall
stc
mov
push
mov
mov
push
sub
js
pop
jp
jecxz
lea
imul
mov
cmp
stos
xor
stos
mov
je
adc
shlb
repnz
add
iret
and
dec
push
cld
pop
out
lods
or
and
jg
xlat
pop
adc
dec
pop
jge
cmp
jge
and
add
lcall
pusha
jno
xorl
adc
mov
dec
cld
jg
sbb
aaa
jp
shrb
pop
dec
xchg
sbb
adc
xchg
cli
xchg
mov
rorb
cmp
mov
out
lods
mov
enter
xchg
xchg
in
rcrl
mov
mov
jmp
repz
stos
lret
out
and
mov
mov
inc
cmc
das
fiadds
call
sub
adc
stos
adc
push
arpl
int3
iret
mov
add
or
call
sub
jmp
addr16
xor
adc
fidivs
inc
je
andb
mov
into
xchg
jns
movsl
andb
sbb
jecxz
dec
popa
mov
sub
sub
jp
pushl
lods
test
leave
lods
pop
test
dec
dec
hlt
dec
je
popf
imul
call
cld
pushl
adc
mov
sub
icebp
mov
cmc
nop
std
out
decl
cltd
mov
into
ret
mov
mov
sbb
lcall
push
mov
je
test
mov
insl
dec
outsb
sbb
loopne
xchg
lahf
jb
fwait
and
hlt
test
call
aam
mov
inc
icebp
xchg
jg
std
xchg
dec
imul
dec
pushf
mov
dec
punpcklbw
hlt
pushl
call
cltd
pop
xchg
dec
fiadds
js
inc
testb
decb
and
int3
xchg
xchg
xchg
jmp
subl
iret
cwtl
mov
ror
popf
lea
jge
inc
roll
lcall
jae
inc
jno
and
adc
cmp
scas
dec
pusha
shll
cmp
push
out
xchg
shll
add
iret
mov
push
pusha
cld
aaa
call
loope
mov
dec
add
mov
fidivl
mov
pop
push
orb
and
call
mov
out
fstl
ja
push
popf
aad
mov
sarb
mov
sahf
fdivl
adcl
cli
lcall
lret
pop
cmpsb
dec
popa
hlt
xchg
add
icebp
lock
dec
jbe
mov
push
jg
imul
out
jo
iret
xchg
xor
pop
clc
push
test
shll
jp
jae
lret
mov
dec
enter
sub
int
cld
xchg
pop
jo
enter
cwtl
or
addr16
xchg
or
cmp
test
or
cmp
mov
stos
and
add
mov
mov
lea
jns
testl
fistpl
addr16
outsl
add
ret
call
lret
stos
pop
insl
mov
xor
fisttpll
mov
mov
jmp
dec
jo
xor
add
pop
or
in
sti
mov
loope
fists
cmp
popf
pop
mov
insb
pop
add
xor
arpl
out
mov
test
mov
lcall
xor
dec
push
pop
and
mov
ss
fwait
mov
adcb
cmc
iret
sbb
incl
cld
push
dec
neg
jno
andb
fdivp
dec
push
shl
movsl
pop
or
adc
subb
cld
xchg
xor
dec
shlb
testb
mov
inc
fdiv
or
out
sar
fdiv
lock
lcall
mov
cld
insl
sbb
int
in
xchg
pop
call
or
fmulp
in
clc
clc
xchg
mov
push
insl
xor
imul
bound
dec
icebp
xchg
cmp
cmp
add
jo
daa
jbe
xchg
incl
xchg
lcall
sysret
push
lsl
sbb
cs
pop
mov
push
orl
jb
mov
stc
clc
adc
mov
mov
xor
lret
lret
xlat
lds
gs
loop
and
mov
push
repz
fs
fisttps
jne
add
stos
jge
dec
inc
les
int3
sub
sarb
into
mov
scas
outsb
mov
jl
inc
ja
jb
sarb
jb
xlat
les
je
pop
aam
adc
push
xor
mov
mov
jb
dec
aas
not
or
mov
loopne
xor
addr16
add
ret
nop
mov
jl
stos
xchg
mov
xor
out
sahf
or
lods
push
sub
jecxz
mov
add
dec
rcr
pop
mov
mov
and
test
ret
fisttps
add
loop
cmpsb
xor
push
fadd
mov
clc
and
enter
mov
sbb
and
incl
lods
adc
iret
in
mov
rclb
jmp
adcb
cmpsb
lea
jle
and
lcall
push
adcl
dec
or
jo
push
ror
mov
push
lcall
jnp
daa
inc
jecxz
adc
loope
popa
inc
inc
inc
movl
sarl
call
shrl
xchg
mov
sbb
cld
push
push
mov
push
mov
jbe
hlt
or
imul
adc
mov
and
mov
pop
mov
div
xchg
sub
nop
cmpsb
movsl
roll
lods
cmp
inc
ret
xchg
and
fbstp
or
mov
jp
or
out
push
push
jp
cmp
das
clc
out
arpl
mov
rcl
mov
cmc
mov
repnz
lods
incl
mov
data16
jns
iret
sarl
lods
dec
out
or
mov
lds
pop
sbbl
xchg
cmp
cld
shl
xchg
cmpsb
pop
push
out
xchg
ret
inc
clc
fbld
addr16
sbb
mov
ja
cmp
popf
xor
mov
cmp
scas
outsl
ficomps
out
pop
rcl
xchg
out
call
push
xchg
cltd
mov
ror
mov
mov
outsb
fdivp
lret
xchg
xor
cmp
out
mov
or
pop
and
ret
inc
negb
jge
push
push
popf
push
out
faddp
in
fisttpl
scas
jp
movsb
lcall
lcall
mov
scas
add
loopne
fnstsw
pop
mov
out
jl
mov
icebp
xor
movsl
shl
mov
scas
dec
les
dec
xchg
ror
add
test
or
mov
mov
push
aad
xchg
sub
xchg
sbb
mov
fimuls
jne
mov
movsb
filds
out
cli
add
test
mov
into
out
adc
clc
enter
std
outsl
bound
sbb
mov
inc
fucomp
ficompl
je
test
jge
imul
stos
test
cli
mov
sbb
hlt
inc
push
adc
std
cmpb
enter
or
or
xor
mulb
int3
shrl
dec
test
nop
cmp
jmp
cmp
in
mov
and
test
rcl
push
lahf
iret
into
sub
sbb
pop
push
icebp
add
int
push
fwait
push
push
mov
xor
bound
mov
mov
ror
cmpb
lret
mov
push
pop
jmp
jns
push
arpl
or
mov
lds
cmp
xor
sbb
gs
add
test
outsl
fcoml
mov
out
lahf
jnp
mov
imulb
sub
outsl
mov
shll
addl
loopne
mov
fcmovnu
test
push
mov
mov
mov
jno
sahf
ljmp
daa
push
out
mov
mov
jb
push
aad
subl
push
scas
rolb
inc
jno
loope
xchg
ja
roll
inc
mov
movsb
and
loopne
movsb
mov
fldenv
ret
mov
orb
or
call
scas
bound
mov
sbb
and
clc
ja
mov
cmc
xchg
arpl
icebp
div
rorb
jns
enter
and
stc
std
jl
xchg
sti
xor
cmc
push
jg
mulb
cwtl
mov
lea
data16
jmp
out
aam
out
mov
push
or
out
dec
push
xor
fbstp
call
mov
cwtl
xchg
out
mov
subb
icebp
cli
lcall
into
push
dec
add
rorb
mov
ret
scas
lret
mov
jecxz
stos
test
es
cmpsl
out
pop
jmp
ljmp
iret
xor
cmp
inc
incl
insl
push
dec
cmp
lds
inc
mov
cmpsb
pop
enter
push
mov
test
dec
lcall
cmpsl
jb
call
jg
cmpsl
mov
mul
fdivp
lret
lock
mov
pop
xchg
loop
xchg
ret
cmpb
out
push
sarl
out
pop
cmp
lods
daa
mov
mov
and
jle
outsl
lcall
sahf
dec
sbb
gs
fistpll
movsb
jg
andl
push
rcr
mov
test
xchg
adc
outsl
sbb
lret
iret
in
std
push
xchg
sti
mov
add
insb
enter
in
shrl
and
jmp
mov
loopne
add
in
loop
mov
cltd
mov
or
mov
neg
sbb
in
test
int3
int3
mov
xchg
lcall
in
subl
repz
out
lods
mov
add
jmp
jb
imul
push
sbb
xor
sbb
repnz
cmpsl
cltd
sbb
jp
lods
inc
hlt
fcmovne
push
xchg
clc
mov
mov
clc
lods
ljmp
jb
out
pop
or
lret
mov
out
les
shlb
xchg
out
lea
jmp
pop
pushf
jl
mov
ljmp
addr16
mov
cmc
mov
jo
mov
cli
negl
lock
adc
loope
mov
arpl
push
out
cli
pushl
mov
mov
inc
addr16
push
ljmp
jns
cmp
dec
jp
clc
jne
outsb
push
bound
dec
pusha
daa
dec
inc
pop
leave
jmp
sub
int
mov
mov
test
les
mov
push
mov
and
gs
test
mov
add
test
cmove
sti
and
xchg
das
pop
push
popf
xor
lcall
lcall
and
inc
data16
sbb
pushl
in
inc
repz
adc
pop
fstpl
jne
or
xor
popa
lods
jge
cmpsb
fcompl
xor
add
gs
jge
jp
rcr
sub
ds
mov
xor
movsl
mov
sbbb
pop
dec
stos
add
jle
hlt
dec
mov
fs
jbe
mov
add
push
pop
andb
adc
movsb
cmc
jg
jo
cmp
cmp
sub
jo
jns
mov
xchg
dec
imul
iret
add
jno
xchg
sub
test
jp
cmp
pop
mov
dec
jp
sub
mov
mov
pop
push
push
add
js
test
sbb
sub
addb
mov
dec
mov
jo
jb
lods
mov
and
aaa
fdivr
mov
popa
sub
imulb
clc
outsl
inc
push
mov
inc
jmp
sub
jmp
pop
dec
incl
gs
xchg
or
incl
or
sbb
xor
popa
mov
jne
lea
and
or
sbb
pop
inc
push
push
lea
insb
les
mov
adc
outsl
mov
loopne
mov
mov
dec
mov
pop
lock
ja
mov
sbb
sbb
adc
add
divl
cmp
decl
ss
das
jp
nop
push
icebp
test
into
xor
adc
je
push
sub
pusha
pop
mov
adc
inc
test
insb
shrb
mov
and
mov
xor
adcb
mov
inc
pop
cwtl
fs
pop
insl
mov
xor
xchg
gs
pushf
push
xchg
cmp
sbb
daa
ja
push
orl
clc
jg
and
mov
arpl
add
sbb
mov
jne
jg
subb
cmc
push
dec
ja
jp
pop
cmp
data16
xchg
test
aaa
inc
ljmp
and
incb
sub
adcl
or
lea
les
inc
ret
sub
aaa
and
xor
mov
lcall
adc
jno
inc
mov
jb
into
inc
arpl
mov
mov
xchg
inc
push
cwtl
das
nop
or
jp
mov
lds
cld
push
mov
stos
test
into
mov
xor
insl
mov
ljmp
inc
cmpsb
mov
movsl
lcall
xor
repnz
cmp
pop
xor
mov
pop
inc
leave
push
inc
cmp
pushf
xor
sarl
jmp
inc
and
mov
xor
ret
aad
inc
ret
decl
jnp
add
push
mov
mov
mov
dec
push
push
and
int
mov
xor
inc
mov
jbe
js
jle
daa
icebp
mov
subb
push
jg
inc
arpl
mov
push
add
jmp
mov
mov
xchg
cs
and
lcall
xchg
or
enter
lds
inc
dec
cmpsb
cmpsb
sbb
mov
imul
in
jb
out
ja
je
cli
sbb
jle
cli
incl
sub
push
inc
xor
stos
fidivrl
call
push
mov
push
es
add
pop
pushf
dec
inc
sqrtps
test
ljmp
or
cmp
push
test
sbb
sbb
gs
dec
cmp
pop
out
and
inc
sub
mov
and
mov
jb
icebp
aas
cmpsb
lds
clc
push
adc
mov
and
dec
aaa
outsb
mov
push
jns
push
jo
fwait
sub
inc
cwtl
push
dec
adc
adc
jb
lods
mov
sarb
adc
or
sbb
bound
popa
rclb
pop
subl
mov
or
xor
lds
sub
mov
cmpb
fnstcw
sbb
and
outsl
sahf
push
push
dec
mov
sbb
sbb
sub
pop
sub
xor
js
xchg
push
hlt
push
dec
push
pop
int3
jns
jbe
xchg
movsb
lsl
jg
or
xor
dec
mov
xchg
inc
test
jb
mov
adc
mov
sbbb
inc
or
test
negb
mov
je
lcall
xor
ret
das
movsl
shrb
mov
dec
repz
daa
and
dec
and
stc
mov
sbb
xor
jmp
mov
cmp
pop
xor
mov
inc
push
subb
inc
or
sbb
ja
add
and
adc
jg
pop
pop
push
aas
jmp
sahf
aaa
xchg
mov
ret
idiv
cmc
jg
or
mov
sbb
sub
stos
int
jg
test
mov
popfw
dec
sbb
sbbb
xor
push
ret
xchg
jo
dec
fmull
dec
adc
out
cmpsl
int
pop
enter
imul
cld
std
pop
xchg
jmp
push
jp
jge
scas
stos
and
rclb
in
push
dec
dec
cltd
push
xchg
into
rcl
cmc
lcall
pop
mov
and
sbb
cmp
mov
xor
jo
stc
in
cmp
jne
inc
out
outsb
inc
in
xchg
js
cs
pop
xor
lret
add
mov
jp
sbb
jmp
or
cld
inc
stos
xchg
xor
mov
jb
mov
inc
les
test
outsl
xchg
sbb
sahf
push
push
pop
loopne
sbb
lea
addr16
adc
pop
mov
movsl
push
into
les
ja
aaa
daa
jl
sub
cmp
outsl
and
add
aaa
xor
add
xorb
daa
cwtl
and
cmp
cld
mov
orb
xchg
xchg
hlt
mov
cmp
aaa
cmpsb
jge
cld
aaa
das
movsb
push
or
xlat
or
push
push
cmp
dec
lret
lock
push
jno
mov
pop
jp
jmp
stos
fsub
dec
jmp
lcall
push
add
stos
cmp
js
or
movb
cli
xchg
daa
adcb
add
dec
adc
idivb
outsb
pop
cmp
cmc
int
test
arpl
cmovo
xor
filds
repnz
mov
addb
out
push
idiv
insl
into
jle
std
lods
adc
inc
cmp
ljmp
shrb
mov
jnp
xor
lret
pop
push
inc
pop
shrl
mov
hlt
or
std
push
pop
pop
cmpsb
cmp
sbb
mov
sti
push
data16
and
sbb
lcall
sbb
ds
int
xchg
icebp
mov
jecxz
imul
stos
rolb
and
shrb
xchg
arpl
cmp
mov
out
sbb
bound
cmp
jge
lcall
sahf
in
xorb
iret
mov
mov
add
adc
ja
fisubl
test
push
sub
outsb
loop
pop
pop
push
add
add
incl
incl
dec
jp
test
jge
roll
inc
pop
xor
pop
sub
incl
mov
mov
cmp
lock
decl
cltd
fs
push
out
or
mov
and
jb
rcrl
data16
or
xchg
mov
xchg
ljmp
dec
pop
sbb
xchg
mov
test
pop
dec
loope
jle
add
jo
and
lcall
mov
out
rcrl
dec
je
divl
bound
arpl
and
sbb
push
adc
loopne
jecxz
mov
call
inc
pop
shlb
mov
out
divb
pop
xchg
mov
pop
popa
out
mov
sbb
mov
fiadds
insl
ret
cmp
out
icebp
jg
pop
mov
adc
jno
stos
cmp
lods
shlb
pop
and
xchg
rorb
push
push
ljmp
dec
popa
xchg
push
inc
pop
xorb
ds
mov
mov
out
mov
mov
or
sahf
scas
fldt
divb
lcall
or
das
clc
cltd
xchg
mov
xchg
das
aaa
std
decl
test
jno
lahf
ja
dec
popf
rcrb
icebp
decl
push
xchg
out
pop
push
icebp
inc
in
jae
pushf
ja
mov
cmp
and
push
mov
sbb
jno
scas
test
sub
decl
cmp
sub
lcall
dec
xor
mov
cltd
out
dec
jecxz
xchg
call
add
aad
out
jbe
push
inc
in
cli
ljmp
mov
mov
iret
daa
bound
sbb
mov
mov
push
or
icebp
cmp
outsl
xchg
mov
daa
and
ret
and
adc
pusha
mov
aaa
mov
jg
mov
jg
loop
xor
dec
push
leave
sbb
je
mov
incl
pop
mov
popa
pop
sbb
jo
repz
aam
cmp
fcomps
repz
jbe
add
shl
sbb
sub
insb
stos
cmp
push
pusha
cltd
xchg
outsb
cli
movsl
ffreep
cmp
enter
pop
and
dec
sbb
adc
inc
xor
test
ljmp
jle
push
imul
in
jg
jg
jge
clc
jmp
icebp
xchg
xchg
pop
inc
xchg
push
sarl
pop
pop
lock
mov
pop
std
ss
push
dec
test
and
xor
sub
lds
mov
mov
int3
pop
sbb
decl
insl
mov
and
adc
mov
scas
push
enter
loopne
fidivrl
adc
mov
data16
outsb
movsl
or
or
gs
aas
add
inc
bound
les
mov
ss
mov
sub
and
cmp
inc
mov
pushl
dec
inc
and
sbb
adc
add
pop
pop
push
jp
mov
mov
push
jl
inc
lds
addr16
push
aam
mov
leave
mov
das
pop
stos
outsl
xor
ljmp
jns
inc
push
stc
or
or
insb
or
add
xlat
decl
cmp
adc
cld
and
adc
cltd
dec
dec
test
inc
dec
ljmp
call
insl
jle
mov
inc
sub
push
insb
rcrl
dec
jecxz
jno
push
mov
call
xor
jae
arpl
adc
icebp
orb
mov
call
outsb
xchg
fwait
cld
sahf
pop
scas
dec
fsubrp
ds
jg
pop
cmp
xchg
mov
sbb
incl
leave
cmp
fnsave
sbbl
dec
and
imul
mov
xor
idiv
call
outsb
mov
shll
flds
pop
or
cmp
push
mov
ret
sub
std
mov
xchg
lods
sbb
pop
inc
adc
or
hlt
cli
jge
inc
addr16
lock
add
adc
mov
popf
repnz
lcall
jg
add
subl
adc
test
cwtl
into
mov
add
aam
movsl
jmp
insb
imul
int
cmc
dec
dec
decl
pop
mov
data16
inc
test
es
stos
xor
call
divl
je
popl
sbb
popl
and
xor
push
inc
aam
outsl
xchg
popaw
push
push
pop
push
pop
xor
sub
test
shll
mov
and
ljmp
mov
lock
push
dec
cmpsb
and
lea
lret
mov
scas
sbb
ljmp
loope
nop
lret
sub
pop
sub
insl
jecxz
cli
push
jge
or
jg
ljmp
inc
adc
pop
out
or
les
je
ss
cmpsb
push
push
adc
ret
in
mov
and
push
push
insb
pop
add
inc
enter
es
loope
pop
pop
data16
outsl
pop
sbb
aas
cs
add
outsb
mov
push
add
cld
add
cltd
sbb
movsl
mov
lds
es
inc
je
mov
cmp
test
mov
add
icebp
dec
jl
jl
cmp
decl
cli
xchg
dec
xchg
pop
jmp
add
xchg
xor
dec
adc
xchg
and
mov
mov
mov
add
cmp
cmp
inc
stos
negb
lcall
pushl
jbe
pop
jb
scas
mov
test
push
in
lods
test
jle
cmp
cmpsb
nop
xchg
push
xlat
or
in
mov
inc
jp
pop
and
test
jle
add
cmp
mov
out
xor
jbe
and
inc
dec
clc
jae
clc
mov
push
fwait
shll
pushl
outsl
mov
mov
loop
lcall
insl
cld
jg
or
jg
test
xor
xchg
push
clc
aas
addl
sub
mov
dec
add
inc
std
or
aaa
pop
enter
das
inc
xchg
jmp
test
push
mov
jae
dec
push
movsl
jg
scas
mov
call
or
std
and
xchg
mov
cmp
int
jg
ja
dec
ret
inc
add
adc
push
add
nop
dec
gs
mull
int
ret
or
cli
mov
push
test
scas
es
cmpsl
xor
add
mov
out
and
lcall
mov
adc
gs
scas
cmp
adc
mov
xor
jg
push
fdivrs
mov
jge
xchg
mov
sub
sub
sbb
filds
dec
jle
cmp
mov
sub
mov
jle
cs
cltd
cmp
and
adc
shlb
cmp
aas
std
incl
ljmp
test
inc
aas
xchg
and
pop
scas
adc
repz
mov
fldenv
xchg
inc
insb
push
add
andb
fdivs
mov
xor
mov
jb
and
inc
mov
push
jno
fistl
decl
xor
and
cwtl
decl
call
pop
mov
js
cmp
add
add
mov
adc
addb
sub
or
xchg
pop
xor
ret
xor
xchg
sahf
mov
mov
cmp
cmp
pusha
mov
xchg
popa
lahf
inc
test
cmp
dec
pop
cmp
jo
push
shrb
adc
shl
test
ret
bound
cmp
fs
pushf
inc
mov
insl
jmp
mov
mov
push
pop
pusha
fwait
ret
nop
pop
xor
push
fs
pop
mov
jmp
push
je
mov
mov
pop
sbb
lret
rolb
xchg
push
clc
fdivr
mov
inc
xchg
cs
hlt
sub
and
ss
loope
push
adc
es
mov
dec
cld
and
jmp
sub
fists
jo
and
cmp
mov
push
mov
imul
lods
pop
outsl
xor
lcall
mov
sahf
jbe
or
pop
fidivl
cmp
mov
popa
lret
int3
push
sub
and
imul
js
test
cmpb
clc
shrb
sbb
jb
mov
or
add
sbb
adc
adc
and
sahf
cmp
push
and
shll
ret
sbb
and
test
add
decl
sbbl
js
pop
adc
inc
movsl
dec
add
or
pop
std
lods
mov
mov
inc
add
push
pop
mov
inc
add
inc
sub
inc
xchg
fwait
das
xchg
mov
shll
mov
jg
js
lock
aaa
sbb
cmp
or
test
int3
adcb
call
iret
cli
sbb
arpl
jns
inc
dec
cmc
and
jg
shll
pop
push
xchg
mov
inc
das
insl
lds
adc
je
mov
call
xchg
in
xor
setns
sub
push
inc
sub
out
push
ret
jae
in
rclb
inc
push
loopne
adc
pop
mov
mov
mov
loopne
pop
sbb
xchg
pop
sbb
pop
mov
and
pop
pop
out
jp
stos
add
xorb
in
cs
jmp
gs
inc
inc
xchg
or
inc
xchg
mov
add
test
ss
pop
push
clc
cltd
es
pop
xchg
push
mov
or
mov
lds
popa
jbe
sbb
jmp
sub
call
outsb
faddl
out
dec
pinsrw
loopne
jg
sub
inc
test
and
ret
out
mov
pop
inc
in
ss
ja
push
fsubrp
je
es
cmp
ret
ljmp
xor
rep
cs
out
pop
lods
inc
ljmp
add
icebp
inc
adc
cmp
adc
adc
and
xchg
xchg
cmp
pushl
cmp
mov
xor
inc
jl
jne
sbb
pop
inc
mov
orl
cmpsb
clc
call
adcl
lods
cwtl
and
dec
mov
sbb
test
out
cmp
mov
outsl
mov
incl
adc
pop
fstl
mov
push
xor
add
lcall
add
and
jb
or
jg
mov
test
push
xchg
add
mov
dec
adc
pop
pop
add
mov
jg
or
xchg
push
xchg
xor
insb
roll
mov
xchg
inc
outsb
jmp
dec
jg
sbb
push
adc
stos
adc
adc
fdivr
cmp
js
cmp
sbb
lock
movsl
jp
adc
aas
xchg
lock
mov
scas
and
mov
mov
jle
lods
sbb
sar
aaa
cld
pop
in
clc
scas
outsl
hlt
pop
xchg
call
mov
jg
cmp
sbb
fidivl
xchg
cli
sbb
xchg
cmpsb
xchg
or
incl
aaa
ficomps
fs
adc
or
inc
js
decl
daa
aas
std
mov
out
ret
jo
lret
pushf
jb
adcb
jg
ja
sbb
add
inc
cltd
sbb
dec
fcomps
push
sub
gs
lcall
dec
das
add
cs
mov
mov
mov
push
imul
push
mov
jg
push
push
scas
push
cltd
adc
inc
lret
enter
das
cmp
jae
daa
das
lahf
jnp
lods
mov
ljmp
ljmp
or
mov
dec
push
clc
dec
dec
pop
sbb
fnstenv
loop
fcmove
inc
push
or
incl
mov
jno
aas
insl
mov
mov
fsubl
jmp
xchg
mov
aas
xchg
and
or
push
cmc
mov
dec
cmpsb
mov
ret
hlt
adc
addl
and
add
sahf
insb
inc
cli
pop
pop
jge
outsl
ds
das
jns
out
sbb
pop
movsb
jae
push
and
or
shrb
jb
ss
and
xor
addb
sub
push
pushl
xchg
jp
movsl
inc
js
cmpl
test
clc
call
out
dec
pop
dec
fnstsw
outsb
inc
cmp
push
sub
aaa
and
ret
push
jl
es
lcall
test
sahf
loop
pop
fidivs
lea
inc
loopne
push
jbe
mov
insl
inc
imul
inc
or
incl
in
mov
ret
cmp
jnp
stc
mov
repnz
push
xchg
arpl
mov
dec
jae
xlat
jbe
jmp
mov
stos
gs
daa
or
and
call
adc
lcall
repnz
notb
lods
cltd
jb
ljmp
lcall
jmp
aas
daa
dec
out
lcall
push
adc
aas
stos
inc
inc
movl
xchg
ljmp
dec
inc
out
mov
leave
or
cmp
xchg
adc
je
ljmp
das
out
jle
xor
push
mov
movsl
mov
lea
dec
cli
push
pop
add
sahf
xchg
jno
adc
or
pop
and
divb
aaa
insl
jbe
jge
jge
jb
popa
add
jo
xor
mov
stos
add
inc
cld
fstpt
and
call
psubusb
add
pop
mov
jge
push
jg
fbld
adc
ret
mov
lea
aas
cmp
mov
and
outsl
sbb
cmp
loop
out
in
faddp
mov
decl
xor
pop
jle
iret
xchg
ds
xor
nop/reserved
and
js
add
sub
cmp
rol
repnz
outsb
pop
jae
push
mov
cmp
mov
ljmp
stos
test
mov
jae
pop
sub
dec
das
xor
andl
call
das
jl
fbstp
shrb
das
insl
mov
pop
lcall
push
in
addr16
ret
stos
loopne
jg
decl
and
inc
andb
ret
stos
and
pop
andb
pushl
fildll
movsl
imul
loop
fsts
scas
inc
fs
je
idivl
pop
decl
lods
sbb
adc
out
mov
mulb
shrb
stos
sbb
ljmp
sub
sbb
sub
jp
aas
sbb
mov
test
ljmp
pmulhw
and
incl
insl
sub
push
fs
nop
and
repz
cmp
xor
push
out
inc
ja
movsb
push
sub
ljmp
outsb
enter
pop
mov
mov
clc
mov
push
push
shlb
testl
mov
pop
adc
out
lret
lahf
sub
pushl
cmp
cmp
add
xchg
repnz
adc
adc
add
dec
jmp
jne
mov
movsl
or
and
mov
ds
lret
mov
xchg
adc
int3
pushl
fdivr
pop
popa
cld
cmpb
fisubl
hlt
and
stos
cwtl
adc
add
and
out
adc
jmp
xor
fwait
adc
xlat
jne
incl
dec
adc
mov
lahf
push
mov
hlt
xchg
sbb
pop
mov
nop
adc
and
add
pop
cwtl
ljmp
cltd
xorl
sub
push
push
jp
inc
push
lahf
cmp
jp
mov
sub
and
sbb
mov
xchg
jb
faddl
push
push
call
push
ja
inc
loopne
data16
jg
pusha
std
je
sub
ljmp
mulb
pop
stc
dec
test
dec
enter
and
sbb
adc
mov
into
adc
rorb
enter
mov
fwait
mov
add
jg
daa
pop
sbb
scas
cmp
xchg
movsl
sub
xchg
push
jl
sbb
push
jecxz
pop
pop
pusha
xchg
mov
mov
and
loopne
subl
mov
xor
mov
mov
ss
das
lods
test
pusha
lods
and
addl
int
incl
xchg
jnp,pt
or
mov
sub
jae
pop
scas
mov
scas
push
push
pushf
repnz
and
scas
pop
aam
mov
das
cli
jg
gs
xor
scas
js
and
ja
lcall
sbb
cmp
loopne
jg
cmp
cs
les
subb
shr
mov
lea
lods
jno
jo
cmp
push
jmp
jo
or
outsb
aam
mov
mov
xor
jecxz
and
inc
sbb
mov
sahf
lea
icebp
cmpsl
sub
mov
xchg
sbb
inc
mov
dec
or
stos
pop
jmp
inc
pop
xchg
les
mov
push
jbe
xchg
xor
mov
add
push
pop
fnsave
clc
mov
dec
jmp
ss
jnp
dec
stos
cmp
push
dec
add
adc
jl
scas
mov
inc
mov
pushl
cmp
pop
xlat
popf
pusha
adc
inc
aas
jle
sub
dec
inc
jp
sub
jne
out
push
push
xchg
stos
jp
inc
inc
cs
outsl
call
roll
cmpsl
orb
pop
into
mov
scas
fwait
push
jnp
ljmp
fistps
dec
cli
mov
push
mov
clc
pushl
sbb
xchg
push
sbb
imul
jo
mulps
push
cmp
pushl
jp
push
repz
push
and
xor
and
push
mov
dec
mov
push
mov
leave
repnz
imul
incl
movl
arpl
ljmp
nop
push
inc
pusha
and
adc
xor
inc
orl
out
ss
mov
imul
inc
pushl
cmpsb
out
or
xchg
and
jno
xor
jb
dec
mov
mov
push
push
push
les
fwait
lret
cmpsl
pop
iret
xor
ret
mov
aam
mov
insb
rcll
xchg
push
push
pushf
outsb
jg
stos
inc
mov
xchg
xor
or
dec
jne
push
call
sbb
inc
push
mov
add
xchg
cwtl
push
pop
stc
scas
push
lcall
xor
cmpsl
mov
xor
mov
xlat
mov
push
sbb
pushl
add
push
mov
mov
inc
xchg
jl
pop
cwtl
ret
mov
inc
aam
jo
push
mov
clc
rorl
dec
cli
mov
lock
xchg
stos
clc
filds
loopne
lds
cmpsl
scas
test
ret
std
xchg
push
fidivrs
cmpsb
adc
in
lock
das
ret
jmp
leave
stos
mov
aas
inc
std
push
icebp
jecxz
movsb
mov
ret
sti
xor
jecxz
mov
mov
inc
lods
test
inc
into
incb
incb
push
add
enter
call
xor
cmpsl
xor
scas
cli
and
mov
scas
int3
testb
out
std
pop
lcall
xchg
sarl
je
or
repnz
adc
cmpsb
loope
dec
mov
scas
xchg
dec
cld
hlt
jle
jb
mov
pop
push
push
jg
jecxz
pusha
movsb
fdivl
test
popf
pop
repz
pop
jp
pop
add
adcb
and
out
fdivp
add
fs
cmp
jo
ret
loop
scas
push
icebp
fnstcw
fidivl
gs
push
cmp
xchg
dec
in
cmp
and
mov
lds
clc
jp
fs
jbe
iret
and
inc
lods
xchg
dec
jg
mov
pop
push
mov
cmpsb
icebp
aas
icebp
gs
jmp
into
mov
std
incb
std
outsl
fsubrs
das
push
daa
test
test
repnz
clc
das
xor
dec
daa
jnp
and
inc
inc
ja
lea
ja
inc
sbbl
scas
decl
inc
loopne
sbb
test
imul
std
das
and
fidivrl
and
dec
push
inc
add
mov
inc
mov
insl
data16
sbb
mov
gs
sbb
dec
mov
mov
mov
xchg
add
imul
or
dec
lcall
push
leave
and
ds
test
iret
popf
dec
xchg
pop
lret
mov
ljmp
outsb
ds
outsb
rorb
xchg
imul
insl
sub
cmp
test
daa
lcall
pop
sbb
mov
mov
addr16
jne
ljmp
xor
fisttps
jbe
or
and
pushf
ljmp
pop
mov
add
or
dec
sar
mov
add
pusha
jns
dec
pop
out
mov
inc
arpl
sbb
mov
cmp
lds
ljmp
int3
xor
pop
and
insl
outsb
xlat
push
inc
jge
je
or
pop
sar
push
adcb
xor
adc
scas
nop
into
inc
into
jl
imul
pop
hlt
mov
out
adc
jns
arpl
call
and
mov
imul
aad
mov
cld
cli
stos
mov
sub
jl
pop
mov
gs
mov
jge
ds
jbe
dec
movsl
mov
xchg
les
lods
push
cmp
inc
xchg
cltd
repz
sub
mov
decl
mov
push
pop
int3
sub
jnp
jae
js
pop
and
shlb
stos
insl
mov
dec
mov
lcall
sub
sbb
movsb
movsb
data16
enter
mov
dec
mov
jmp
ds
incl
call
mov
adc
push
or
adc
imul
adc
cwtl
jb,pt
data16
jmp
jmp
fbld
insb
aas
fs
fs
je
cli
pop
mov
ss
sbb
inc
cltd
cwtl
pushf
adc
sbb
mov
pushl
fnstcw
push
xchg
mov
loope
or
jle
adc
mov
lahf
faddl
push
out
cmpb
pop
inc
loopne
sahf
adc
inc
cli
pushf
xchg
or
addl
mov
stos
or
jg
sbb
or
test
inc
into
push
nop
and
or
lcall
das
pop
push
lea
ja
fistl
pop
loop
mov
stc
out
into
lret
inc
xor
sub
mov
adc
cld
ljmp
sub
cmp
pop
pop
faddl
mov
dec
outsl
push
sub
inc
faddl
and
or
jle
add
and
add
mov
mov
adc
cld
or
push
mov
pushl
stos
inc
mov
sub
lcall
sub
push
dec
and
std
pop
pop
add
lods
cmpsb
add
add
inc
inc
mov
addl
lock
push
add
fadds
cli
sbb
or
dec
sar
scas
xchg
out
mov
jns
test
sbb
out
mov
jg
decl
xor
in
fcmovnb
mov
stc
lcall
adc
jne
icebp
inc
orb
mov
sbb
and
mov
add
sbb
fdivrl
jg
adc
stc
push
lock
add
imul
sbb
mov
mov
shrl
arpl
or
mov
je
scas
call
mov
repz
jno
cmpsl
arpl
mov
incl
sahf
xchg
popf
iret
movsl
or
xchg
cmp
pop
sub
sub
popa
mov
mov
out
xchg
ja
xchg
pop
xchg
pop
dec
sbb
jne
sar
mov
lea
js
mov
mov
push
out
mov
insl
jmp
and
mov
adc
scas
clc
incl
pop
add
lret
insb
xchg
rorb
cmpsb
or
int
mov
sbb
cs
incl
jb
mov
mov
mov
jge
or
xchg
xchg
adc
mov
cli
ljmp
push
add
and
stos
dec
push
imul
clc
adc
mov
dec
mov
dec
pop
mov
cs
ret
js
fdivrp
lds
sbb
mov
pop
test
out
pop
test
cmp
aas
ljmp
add
idivl
sbbb
lcall
ljmp
adc
imul
inc
push
inc
cld
and
mov
sbb
mov
movsl
popa
es
sahf
xchg
or
ss
fisubrs
and
ljmp
and
and
cmpsb
lea
sbb
loop
xchg
sbb
out
lea
in
mov
pushl
fisubl
bound
ret
dec
inc
jbe
jg
ss
scas
mov
mov
loop
sub
adc
mov
dec
lcall
ret
pushf
mov
push
enter
inc
iret
xchg
sti
mov
loopne
cld
cltd
lods
insb
rcrb
stos
imul
lods
sahf
mov
cmpsb
pop
into
arpl
add
cmpsb
and
scas
adc
ja
add
pop
pop
push
dec
mov
pop
outsb
ljmp
push
mov
inc
or
push
loop
inc
stos
incb
test
dec
lahf
mov
mov
jbe
cmp
ret
dec
ljmp
cmp
shl
mov
ja
xchg
adc
push
mov
mov
in
and
jg
inc
inc
insl
js
dec
sbb
repz
mov
js
shl
pushl
scas
adc
push
data16
gs
add
outsl
xchg
cwtl
mov
mov
outsl
inc
sbb
das
lretw
in
sub
sub
adc
out
or
pushl
push
mov
jne
xor
xor
cmp
cmp
lcall
push
xchg
addr16
cmpl
out
push
cmp
repnz
jmp
sub
out
sbb
test
dec
pop
and
mov
push
ss
addr16
je
mov
dec
mov
cmpsb
inc
mov
mov
es
and
cmpl
jg
bound
mov
and
js
movsb
aaa
jnp
jno
ficompl
jecxz
add
push
cli
sahf
sbb
sarb
rolb
cmp
clc
pushl
es
dec
mov
dec
adc
test
inc
aas
jp
lcall
add
mov
sub
mov
pop
cmp
mov
dec
adcw
fimull
or
cmpsb
adc
xor
push
mov
inc
or
mov
mov
ljmp
cmpb
inc
out
push
addr16
ss
mov
ret
inc
inc
mov
aad
dec
push
and
cltd
fwait
jo
cwtl
enter
movsb
std
lcall
inc
aad
dec
pop
inc
fists
xchg
jbe
jnp
sti
or
jmp
gs
adc
mov
xchg
movsl
lcall
fldt
jmp
pop
mov
ss
sub
call
add
sbb
lcall
repz
xchg
mov
add
mov
cmp
mov
ljmp
jae
jle
arpl
mov
mov
ss
scas
mov
je
adc
inc
out
add
movsb
ffreep
int
pusha
nopl
hlt
push
fisubrs
scas
cli
enter
or
or
fadds
inc
jo
roll
add
nop
ljmp
push
insb
lret
fwait
imul
add
lods
cmpsl
imul
jg
mov
sbb
movsl
cmpsb
mov
or
xchg
rolb
stos
scas
mov
ljmp
xchg
dec
lcall
mov
cmpsb
xchg
out
movsb
inc
out
stos
dec
inc
inc
idivb
fs
dec
decl
cld
decl
lret
and
pop
and
repnz
push
or
pop
lods
jmp
mov
jae
mov
xchg
pop
aas
push
hlt
xchg
cs
xchg
mov
push
ret
mov
cwtl
pop
pop
pop
lock
and
adc
and
adc
sub
xor
leave
and
add
inc
sahf
imul
xchg
dec
and
sahf
pop
insl
es
and
push
mov
clc
ljmp
xchg
cmpl
je
popa
sub
xchg
lds
stos
inc
dec
lcall
stos
aam
xor
daa
jmp
sahf
pop
movsl
lcall
idiv
nop
push
jmp
jbe
adc
repz
mov
leave
lods
push
arpl
test
adc
jg
arpl
add
or
jbe
js
sahf
push
inc
jae
inc
pop
bound
fwait
dec
dec
dec
outsl
sbb
subb
mov
xorb
es
movsb
stos
imul
cltd
mov
adc
cli
test
gs
inc
mov
jmp
outsl
es
sub
cli
mov
dec
dec
sub
push
icebp
call
mov
push
loop
sbb
mov
dec
fildll
scas
add
push
or
jns
les
pushf
and
out
and
insb
jmp
xchg
mov
fs
pop
mov
push
jp
push
ret
dec
push
jl
sbb
aaa
or
xor
jbe
jmp
jge
pusha
jo
dec
push
js
pop
bound
jg
mov
aaa
pop
cli
and
inc
cmp
inc
push
mov
hlt
jno
cmpsl
bound
jno
pop
nop
clc
decb
xchg
xchg
add
sub
xchg
mov
inc
data16
call
cld
ds
into
dec
mov
mov
insb
cld
push
fs
mov
loopne
inc
in
xchg
cmp
jmp
test
fsubl
cmpsb
mov
mov
call
or
dec
and
mov
mov
out
jmp
hlt
jg
movsb
scas
xchg
lret
loope
js
imull
xchg
test
stos
push
mov
cmpsl
cli
pop
enter
das
jge
mov
orb
fimuls
mov
imul
int3
dec
leave
pop
add
outsl
lds
xor
incl
jo
pop
pop
jmp
sbb
cld
ljmp
dec
xlat
sbb
pushl
or
or
inc
mov
mov
jne
sbb
cmpb
adc
movsb
push
push
dec
jge
jg
or
rcll
push
or
jbe
and
inc
pop
mov
push
dec
popf
cmpb
andl
xchg
fsts
ljmp
pop
mov
jb
mov
xor
add
push
ljmp
clc
sub
in
inc
mov
addl
std
dec
dec
pop
xor
adc
popf
cmp
popf
cltd
lds
jg
outsb
mov
jno
lods
out
push
add
dec
into
jbe
xchg
ljmp
pop
lret
dec
pusha
scas
insl
dec
dec
pop
leave
in
jne
popa
into
xchg
repnz
loope
cmpsl
icebp
cmp
adcl
push
jnp
mov
mov
pop
sbb
jp
rcrl
mov
jb
adc
xchg
aas
stos
dec
in
mov
inc
loop
mov
int
pushf
dec
dec
sbbl
or
push
test
xor
push
je
inc
ljmp
or
push
jno
into
insl
je
das
lahf
mov
aad
fs
jmp
movsb
mov
mov
outsb
mov
lcall
lret
decl
inc
add
lret
out
pcmpeqb
adc
add
inc
cwtl
outsb
sti
and
js
pop
sbb
cmpsb
scas
or
ja
add
jno
into
cmp
lcall
clc
stos
inc
and
sbb
adc
jg
mov
xor
fstp
imulb
cmpsb
test
adc
dec
clc
push
adc
inc
xchg
out
inc
lcall
aas
push
and
or
pop
mov
mov
das
mov
push
aam
xchg
stos
pop
fidivrs
nop
fbstp
jno
xor
inc
pushl
mov
out
inc
loopne
push
js
cmp
cmc
test
pop
enter
push
ret
xor
mov
ficompl
inc
add
dec
inc
inc
insl
inc
push
fsubs
popf
xor
mov
sbb
pushf
push
push
out
adc
call
adc
xchg
jl
pop
sub
out
scas
and
in
sub
js
mov
call
mov
inc
ja
pop
cmc
mov
sbb
adc
add
inc
mov
decl
mov
cltd
pop
xrelease
incl
cli
rcrl
test
push
sub
mov
lods
dec
inc
mov
sub
decl
sbb
mov
stos
frstor
xchg
das
inc
sub
ljmp
lea
push
push
pushf
push
cld
jmp
shlb
mov
dec
dec
std
and
test
and
jg
or
call
cmovne
icebp
xchg
xchg
push
add
jb
insb
sub
cmp
cmpb
adc
xchg
cmpsb
imul
sbb
scas
ss
pop
dec
mov
dec
scas
xchg
insb
mov
xchg
das
sahf
cmpsb
lea
movsl
and
cld
jmp
lcall
add
sub
add
inc
xorb
in
xchg
in
arpl
cmpsb
pop
sbb
sbb
sbbb
mov
push
mov
out
fwait
mov
sub
sbb
clc
add
ljmp
popa
fistl
push
incl
in
les
cmp
mov
mov
mov
xor
mov
push
xchg
addr16
lods
mov
push
inc
aaa
adc
lahf
fsubl
call
push
mov
loope
jb
xchg
imul
mov
aad
nop
jb
or
popf
scas
push
loopne
add
pushf
jp
sbb
cmp
jg
pop
sahf
mov
mov
hlt
outsb
aaa
scas
mov
lcall
bound
sub
dec
int3
sub
pushl
inc
dec
adc
sub
adc
jnp
pop
cltd
int3
sbb
xor
xor
ja
cli
jmp
insl
inc
jbe
xchg
push
dec
cwtl
in
scas
xchg
jge
icebp
decl
test
lea
and
push
mov
adcl
mov
aas
xor
and
add
adc
das
add
or
and
clc
xor
push
xchg
inc
loope
add
sub
push
jns
adc
test
js
and
icebp
bound
ret
pop
fcmovb
scas
xchg
ret
out
xchg
daa
jp
sar
sub
fwait
sbb
fdivr
jmp
je
xor
jle
insb
jnp
inc
out
inc
out
repnz
jg
mov
push
inc
addr16
pop
pusha
sbb
cmp
cltd
sbb
xchg
mov
cmp
ljmp
insb
out
std
outsl
mov
jb
xchg
mov
push
add
shlb
mov
hlt
jb
inc
addr16
fwait
stos
ja
sahf
mov
sbb
mov
inc
js
sbb
cmc
pop
lahf
push
jae
movsb
and
lahf
in
and
into
stos
dec
sarl
inc
in
sbb
add
push
call
push
scas
inc
inc
xchg
mov
fwait
movsb
lcall
dec
cwtl
push
push
jno
sub
decl
lds
dec
add
pop
push
xchg
jl
cmp
movsb
dec
pop
mov
scas
push
push
adc
mov
ret
out
mov
sub
push
pop
and
call
or
mov
dec
movsb
fisubrs
sbbl
mov
push
shrb
andl
sbb
mov
adc
mov
shrb
xchg
cltd
mulb
mov
jb
pop
and
or
mov
mov
inc
pop
mov
dec
mov
dec
clc
aaa
or
ja
or
mov
mov
mov
push
dec
lods
dec
pop
addb
aas
pop
dec
aas
mov
sbbb
mov
push
icebp
sbb
mov
add
add
aas
mov
lods
test
push
clc
aaa
xchg
cmp
inc
inc
sbb
fstl
jmp
mov
int
int
je
sub
out
and
test
push
push
dec
sete
loope
stos
adc
sub
xchg
jg
mov
jns
xlat
sbb
xor
stos
outsl
ss
cli
cmp
xor
xchg
lret
add
push
out
or
lea
push
mov
mov
xor
orps
inc
mov
cs
decl
dec
push
lcall
stos
and
mov
xor
push
jg
lock
decl
inc
mov
jmp
push
cmp
mov
pop
pop
loope
clc
das
push
jp
fistpll
or
das
inc
je
cmp
mov
dec
popf
insl
ss
or
mov
mulb
xchg
inc
adc
mov
insb
aas
xchg
lcall
pop
push
sub
loop
lret
jl
dec
inc
adc
xchg
mov
mov
lock
repz
dec
pop
inc
fildl
adc
rcrl
and
adc
dec
pop
and
movsb
ss
jp
arpl
repnz
out
fisubs
int
cmpsb
add
lret
pop
out
pushf
cmp
aaa
adc
repnz
mov
pushl
inc
pop
bound
mov
sub
xor
rorb
mov
imul
jl
cmpsb
out
std
scas
fiaddl
and
push
imul
dec
cli
sub
inc
mov
mov
fdivl
jl
pop
jl
sub
test
mov
inc
and
mov
cmpb
ds
jns
jbe
sbb
insl
ret
mov
push
scas
decl
std
mov
popa
mov
inc
int
jae
cwtl
mov
pop
inc
ret
adc
incl
lods
dec
jbe
sbb
pop
xor
fdivrp
bsr
xor
xor
or
mov
mov
mov
ret
and
movsl
ret
mov
push
add
lcall
lods
push
jge
mov
cli
mov
mov
stos
mov
subb
xchg
xor
lcall
dec
mov
incl
push
mov
insb
stos
sub
loop,pn
jg
inc
ss
fstl
fwait
pop
xor
cmp
inc
sbb
clc
and
push
push
neg
cmp
ljmp
cs
out
or
mov
out
xchg
fisttps
clc
add
xchg
shll
push
loope
dec
repz
add
lcall
aas
and
cmpb
sbb
pusha
std
incl
jo
aas
sbb
mov
add
popa
cld
mov
cmpsb
push
popl
cli
pop
outsl
mov
cmp
xor
out
out
add
fildl
mov
das
xchg
or
das
push
scas
fs
cmp
loop
jo
cmp
out
pop
jno
pop
out
xor
call
push
push
mov
mov
stos
enter
sahf
mov
mov
loope
aas
or
and
sbb
pop
dec
dec
mov
fidivrl
jno
stos
das
decl
out
inc
mov
jle
ret
sbb
jnp
jmp
ljmp
push
or
mov
push
cmp
movsl
add
sbb
mov
lock
data16
inc
jnp
mov
loop
std
outsl
xchg
mov
jae
aaa
inc
cmpsb
ss
mov
sbb
popa
or
jb
sub
pushl
dec
mov
xchg
cmpsb
scas
xlat
mov
ljmp
int
jns
movsl
push
xorb
lods
pop
xchg
push
dec
xchg
and
add
adc
fidivs
sbb
shlb
call
test
movsl
adc
mov
xchg
fsubl
jbe
es
xor
aas
inc
push
jo
mov
mov
ss
std
ss
fstps
cmp
bt
adc
out
adc
jg
hlt
jb
dec
add
mov
imul
dec
ss
call
or
ljmp
hlt
imul
mov
adc
cld
in
push
ret
cmpb
adc
icebp
jmp
adc
dec
int
bound
add
cmp
xchg
sub
test
and
mov
test
dec
jl
and
push
adc
cmp
xchg
rorb
mov
repz
xor
xor
pop
shrb
jbe
shlb
outsl
cli
popf
inc
mov
inc
inc
cmovp
scas
cltd
pop
loopne
sbb
push
std
mov
add
mov
repnz
in
push
roll
adcb
jb
ds
mov
in
outsb
cld
and
ljmp
jne
pop
push
icebp
add
mov
xor
adc
pop
out
push
xchg
test
icebp
decl
sub
movsl
sub
inc
lea
mov
movsl
pushl
lods
in
out
cmpl
hlt
stos
incl
add
sub
push
push
rorl
mov
test
xchg
pop
mov
xor
lret
pop
movsl
adc
mov
fisttps
mov
bound
jo
and
fildl
xor
lods
adc
xor
add
sti
xor
repz
loop
sarl
movsb
xor
jg
xor
cmp
out
mov
xchg
rcr
adc
mov
rolb
addr16
ja
adc
sbbb
mov
mov
add
inc
cmpsl
mov
sbb
add
fisubs
push
icebp
sub
xor
xchg
roll
mov
test
loop
adc
out
sarb
pop
fists
inc
xor
std
cmp
push
jbe
shlw
cli
fldl
insb
push
xchg
jle
sbb
scas
jnp
cmp
xchg
push
pop
mov
push
popf
pop
push
sbb
ljmp
sub
jp
insl
adc
jb
cmp
jl
popa
outsb
aas
decl
mov
sub
adc
sub
out
inc
jns
or
ljmp
push
add
xor
cwtl
aaa
imul
jb
mov
incl
insb
ss
xor
mov
add
fildll
je
sbb
xchg
push
jg
dec
shlb
mov
pop
dec
testl
data16
ljmp
add
sbb
jae
call
rolb
sbb
or
mov
cmp
pop
mov
xor
pushf
sahf
xchg
mov
mov
mov
or
loopne
mov
aas
xchg
insl
push
dec
insl
cmp
std
das
xor
jno
outsl
es
cmp
sub
scas
sub
dec
scas
imulb
cli
fwait
and
movsl
js
sbb
cmp
js
scas
clc
scas
add
xor
add
int
andl
test
jae
push
sub
sub
incl
pusha
cwtl
or
cmp
xchg
jb
cmp
jbe
outsl
pop
sbbb
scas
pop
loopne
xor
outsl
lcall
out
ljmp
lock
adc
and
dec
push
pcmpgtb
scas
dec
arpl
ja
ja
or
mov
enter
in
add
decl
push
xchg
xchg
and
in
push
aad
mov
jp
popf
jno
inc
inc
xchg
xchg
cmpb
out
inc
decl
or
pop
jg
addl
inc
cmp
icebp
sbb
test
scas
mov
mov
xchg
sbb
pop
lock
fcoml
pushf
cwtl
adc
sbb
push
aas
leave
cmp
out
jbe
incl
dec
adc
cld
aaa
arpl
or
js
pop
pop
push
mov
das
or
xorl
arpl
ljmp
and
sbb
dec
test
cmpsb
je
mov
inc
mov
sahf
arpl
mov
xchg
lcall
aaa
add
sub
bnd
cmp
and
ljmp
mov
ja
add
iret
bound
enter
push
mov
test
lea
jbe
out
xchg
jg
mov
mov
lahf
push
mov
xchg
ja
add
jmp
pxor
je
ja
inc
push
mov
stos
out
pop
aas
xchg
fiaddl
loop,pn
xor
add
test
clc
xchg
xlat
cs
dec
ds
mov
add
cmpsb
fiadds
pop
pop
fsubrs
ffree
push
std
call
push
mov
sbb
mov
incl
xor
das
ret
jp
sub
aas
jne
xor
les
loop
mov
mov
mov
ret
ljmp
lods
inc
add
loope
fs
movsb
dec
adc
enter
icebp
inc
js
jnp
pop
and
in
mov
jbe
js
pop
add
adc
hlt
cmpsb
hlt
mov
pop
push
aas
lods
dec
mov
adc
repnz
imul
mov
cmp
mov
pop
xlat
call
jp
daa
pop
sti
sub
out
scas
call
pusha
dec
rolb
add
lret
cld
decl
xor
pop
pop
jb
xchg
mov
adc
adc
sbb
or
ljmp
jno
cmp
jo
cwtl
into
jl
ljmp
dec
fidivl
dec
in
and
adc
cwtl
sbb
lcall
xor
cmp
lahf
xchg
inc
mov
scas
add
pop
cmc
aam
or
jo
pop
test
sub
cwtl
dec
lods
clc
push
ja
mov
mov
mov
adc
cli
cmp
loopne
ret
out
xor
test
sbb
sub
jne
aaa
inc
dec
dec
dec
fdivs
pusha
fs
jmp
cmp
ja
jg
dec
leave
xor
or
sbb
ficoml
mov
jno
pop
jns
mov
pop
or
mov
jle
inc
mulb
push
xchg
mov
decl
xchg
jb
stc
push
ja
lea
pop
xchg
sarb
pop
mov
and
or
inc
aaa
inc
scas
call
xchg
incb
jle
dec
cmpsb
popa
in
ds
shlb
pushl
push
je
shld
add
insl
add
fmull
cmpb
mov
jle
xchg
sarb
cltd
push
ja
jecxz
fwait
sub
push
ficoms
int
bound
mov
xchg
xchg
jg
jle
fnstcw
pop
fcoml
jb
sub
ss
repz
or
movsl
cmp
dec
push
xor
fdivrp
push
adc
mov
outsb
lea
jle
mov
shr
push
xchg
incl
cmp
cltd
sbb
es
sub
or
inc
loope
jmp
inc
ljmp
cmpsb
inc
adc
cmp
pop
dec
das
adc
mov
adc
aaa
fisttps
pop
imul
xchg
sub
push
fbld
js
daa
ret
icebp
push
cmp
xchg
sbb
orb
fiadds
or
xor
xor
inc
sbb
xor
clc
incl
and
mov
jmp
jge
out
xor
lods
es
inc
lods
fmull
icebp
ja
lgs
pop
pop
stos
jp
subb
lcall
test
inc
mov
push
cmp
loopne
xor
jg
ljmp
sahf
outsl
iret
or
ficoml
inc
fdivrs
or
test
adc
cli
adc
cltd
decl
xor
sbb
xor
imul
inc
cmp
mov
pop
sub
xor
mov
cld
mov
and
movsl
adc
or
jno
cmc
mov
xchg
mov
mov
test
loop
das
pop
cmp
cmp
lcall
xchg
stos
fwait
lcall
ja
push
sbb
fcomip
out
and
scas
push
les
xchg
xor
and
xchg
add
adc
or
ret
adc
add
test
inc
cmc
jmp
stos
cltd
add
mov
pop
sahf
ds
lret
adc
cmp
jmp
push
and
outsb
pop
jmp
aaa
mov
inc
jp
xchg
iret
popf
sub
cmp
and
in
call
sbb
hlt
jg
stos
rcrb
mov
or
test
sbb
cltd
jbe
sbb
cmc
inc
adc
jl
test
push
and
lcall
adc
sbb
jp
cmovle
xchg
xor
sbb
in
mov
push
iret
mov
out
xchg
xchg
and
adc
dec
inc
subps
jmp
or
adc
and
testb
movsl
push
jl
mov
xor
push
xor
ljmp
sbb
add
repz
mov
jno
add
decl
jnp
adc
ss
outsb
ss
popfw
or
xchg
sub
dec
inc
shll
dec
out
push
stos
mov
ljmp
fistpll
mov
cli
adc
xor
test
test
scas
lret
mov
data16
in
pop
insl
cli
fidivrs
add
dec
inc
clc
or
jnp
add
lret
in
mov
outsl
popa
cwtl
adc
sbb
or
add
outsl
addb
xchg
ss
imul
repz
mov
xor
decl
pusha
xlat
pop
adc
outsl
push
repnz
dec
les
js
les
mulb
ljmp
pop
rcl
inc
cmpsb
scas
clc
mov
scas
sahf
std
add
dec
call
mov
das
gs
pop
jne
xorl
cmp
in
lea
arpl
pop
andb
das
push
dec
cmp
ss
mov
js
js
ret
arpl
jmp
dec
push
dec
push
les
dec
in
xor
inc
xor
leave
mov
mov
sbb
mov
ljmp
adc
push
repnz
stc
sub
xchg
sbb
inc
lock
clc
add
inc
pop
testb
sbb
jg
test
push
out
sbb
dec
inc
push
test
clc
mov
inc
pop
out
mov
dec
pop
or
xchg
das
jb
add
xor
fiaddl
and
sub
das
and
dec
pop
lock
test
into
adc
inc
repnz
ljmp
sbb
shrb
add
dec
stos
cmp
push
imul
and
imul
pop
jmp
add
hlt
xor
imulb
xchg
cmp
adc
andb
mov
xchg
les
dec
nop
pusha
decb
jbe
sti
subb
sti
pop
mov
push
std
iret
jo
inc
sbb
jp
daa
adc
push
in
adc
adc
mov
pop
repz
jmp
sub
insb
clc
ss
cmpsl
xor
std
push
adc
sahf
rcrl
lcall
adcb
test
add
cmp
stc
pop
xchg
js
or
imul
jg
adc
sbb
lcall
mov
stos
cmp
mov
mov
push
jb
ret
add
lea
fists
outsb
clc
ja
lcall
inc
adc
jo
inc
mov
jp
pop
dec
loope
jno
push
jae
push
je
jns
add
xor
into
nop
dec
loop
jl
test
xor
andl
inc
stos
fldl
xchg
mov
pop
clc
cwtl
mov
cmc
sti
out
lods
repnz
fcmovne
rorl
ficompl
jne
out
fcmovnb
sbb
fbld
mov
mov
divl
mov
xchg
inc
call
xchg
cmp
out
mov
mov
dec
mov
mov
add
jg
sub
inc
stos
xorb
pop
xor
arpl
mov
inc
xchg
add
cmpl
hlt
stos
mov
mov
or
ja
cmp
out
adc
test
scas
stos
pop
push
jae
xlat
call
addb
test
or
sub
inc
test
add
out
jbe
add
stos
into
dec
leave
xor
sets
jne
ljmp
imulb
gs
popf
add
les
xchg
adc
call
push
inc
mov
xchg
jbe
outsb
lret
outsb
xchg
jg
aaa
std
adc
cmp
outsl
fidivrl
repz
test
je
dec
pop
or
or
inc
gs
out
js
lods
cs
xor
pop
ret
mov
leave
dec
std
mov
aas
pop
push
cmp
and
adc
adc
push
ljmp
cmp
inc
cmc
mov
and
mov
addr16
vmovsd
add
xor
add
cltd
les
fmull
cli
add
or
sbb
es
aaa
ljmp
lea
inc
aam
pop
divb
add
xchg
mov
inc
aaa
es
ljmp
in
mov
fildll
cltd
adc
pop
jne
xor
mov
sbb
aaa
or
es
ss
mov
lret
mov
cmpsl
hlt
inc
notb
inc
xlat
dec
sbb
mov
lcall
inc
sbb
cmp
punpcklwd
incl
push
dec
lods
xor
pop
into
cmc
mov
mov
pusha
inc
add
xchg
pop
incl
push
mov
jo
mov
inc
cmpsb
dec
xchg
push
loopne
mov
jge
push
test
pop
test
inc
out
jns
popf
or
mov
pop
lcall
ja
mov
xchg
rolb
lods
repnz
xor
sbb
adc
inc
xor
decl
mov
mov
sti
test
cmpsl
jp
ljmp
sahf
fnsave
cmpsb
cmpsl
adc
stos
test
adc
hlt
dec
push
lods
call
sub
pop
sub
cld
jo
mov
mov
mov
out
fldl
insb
mov
pushl
aas
repnz
shll
pushl
or
out
scas
push
movl
or
call
push
lea
xchg
xor
mov
mov
pop
fists
dec
pop
sbb
and
push
popa
sti
fmul
xorb
jg
pop
mov
and
jb
lods
sbb
in
sbb
pushf
insl
out
and
imul
decl
and
leave
inc
lret
lahf
loop
add
dec
pop
sub
stos
jg
ficomps
in
pop
push
push
pop
xor
shlb
ret
popf
sbb
inc
jg
push
sbb
ficoml
sbb
call
outsb
stos
cltd
mov
inc
insb
cmp
sub
adc
aaa
negb
dec
inc
fwait
and
mov
jno
pop
int3
sub
or
xchg
cli
sub
jns
or
loopne
pop
adc
xchg
adc
stc
outsl
aam
js
pop
mov
test
push
mov
push
stos
rorl
xchg
sub
fidivs
sbb
and
jae
pop
enter
mov
push
sbb
stos
aas
stos
or
xchg
push
scas
and
cld
pusha
mov
into
cmpb
sbb
fiadds
cwtl
and
cmp
dec
jmp
mov
gs
gs
cmp
ljmp
hlt
lahf
bound
push
pop
int3
and
js
inc
jmp
xor
hlt
or
mov
cmpsb
mov
inc
jae
add
mov
pop
push
es
loope
pop
mov
inc
inc
pushl
xor
inc
xchg
mov
add
call
cli
and
pop
mov
cmpsl
data16
pop
popa
push
fsts
fcomip
add
mov
fisubl
icebp
movsl
cmp
pushl
outsb
scas
push
jp
adc
cmp
je,pt
inc
roll
jbe
add
jp
jb
inc
arpl
shlb
inc
outsb
mov
or
adc
mov
mov
jp
out
inc
pop
cmp
mov
ret
pop
pop
mov
dec
ljmp
imul
jae
sbb
dec
test
ss
fwait
pushl
pop
add
inc
pop
jbe,pn
sub
xchg
pop
ss
mov
cmp
and
decl
xchg
mov
cmp
popf
bound
adc
push
jecxz
jl
fs
cmp
sbb
bound
jmp
imul
xchg
and
xchg
xchg
pusha
out
mov
inc
iret
sub
adc
or
sub
stos
push
ret
mov
fisubs
in
cwtl
fbstp
jge
outsl
adc
dec
or
outsl
cmp
cmp
test
mov
inc
inc
mov
mov
jl
ret
adcb
or
dec
cmpsl
enter
test
xor
jmp
orb
scas
add
outsl
ficompl
decl
or
push
jle
dec
out
test
notl
mov
cld
std
in
aas
push
cmp
test
or
push
test
pop
lret
nop
inc
mov
push
cwtl
inc
inc
jg
popf
and
push
ja
dec
loopne
xor
test
jp
sub
mov
ljmp
mov
out
mov
xor
scas
pop
test
daa
push
andb
das
jp
and
pop
mov
adc
popa
cmpsb
pop
add
mov
decl
add
cmc
setle
inc
mov
out
outsl
xor
lret
jl
jecxz
cld
jg
lea
mov
mov
mov
push
aas
int3
push
stos
in
push
mov
mov
lds
pushf
mov
mov
aas
sahf
cli
adc
inc
lods
jo
pusha
pop
inc
or
push
inc
stos
decl
ljmp
jo
cmp
rcrl
insb
cmp
dec
or
and
dec
mov
sahf
jnp
cli
std
cmp
jnp
mov
rcll
inc
sbb
pushl
push
xor
xor
xchg
jne
pop
add
pushl
stos
dec
lahf
inc
js
out
xchg
movl
pop
mov
iret
jg
or
sub
push
fs
jmp
repz
push
adc
mov
cmp
mov
jl
out
xor
in
push
ljmp
outsb
sbb
push
icebp
lea
ret
mov
stc
pop
mov
dec
dec
addl
mov
int
jne
pop
pushf
pop
movsb
adc
mov
jmp
or
xchg
pop
clc
mov
mov
loop
int3
xor
dec
mov
mov
ss
test
mov
dec
mov
into
mov
pop
inc
fistpl
pop
stc
dec
bnd
inc
and
xor
or
incl
add
cmpsb
pop
cmpsb
push
stos
mov
dec
jp
or
stos
aaa
in
pusha
dec
es
shrb
jle
jl
cmp
les
filds
call
pop
fsubrl
sub
jae
stos
cli
inc
rcll
jg
or
insb
jns
dec
loop
jp
loope
test
inc
inc
inc
and
loope
inc
push
dec
je
test
sbb
out
push
xchg
mov
aam
push
dec
cmp
jbe
roll
dec
cld
mov
add
jmp
mov
sbb
out
sbb
in
mov
aam
in
cld
call
mov
or
shll
push
jne
mov
je
clc
push
xchg
and
decl
movsl
fsubrl
daa
out
orb
aam
xchg
cmpsb
decl
mov
add
mov
adc
lea
cmp
or
rclb
jmp
in
pop
fildll
jns
mov
dec
lods
dec
cmpsl
sub
sbb
das
jno
inc
daa
mov
loopne
mov
out
and
and
jne
and
mov
int
dec
jo
jns
mov
xchg
jle
jle
outsb
loop
fdivrl
bound
xchg
inc
inc
inc
xchg
pop
mov
mov
dec
imul
inc
inc
lcall
mov
jle
xchg
push
pop
xor
inc
cmp
lea
push
clc
lcall
iret
mov
ja
xchg
jbe
aaa
daa
xor
jg
adc
dec
add
cmp
js
cmp
mov
lock
ret
lcall
sbb
and
lods
test
negb
pop
fadds
xchg
ss
xchg
stc
cmpsl
dec
mov
rorb
inc
out
jnp
jl
jp
outsl
jg
lock
cltd
repnz
jge
pusha
out
add
adc
test
lret
dec
mov
push
jo
xor
stc
ss
xchg
ljmp
negb
or
aaa
leave
xchg
gs
sbb
mov
jmp
js
xchg
std
sbb
xchg
out
mov
mov
das
mov
inc
mov
pop
lea
jmp
jnp
incl
ss
cwtl
arpl
cmp
and
cmp
and
mov
mov
inc
cmp
imul
pusha
add
ja
in
inc
dec
out
jne
inc
movsl
mov
imul
dec
sti
nop
and
stos
dec
cld
std
xor
pop
pop
mov
imul
aad
decl
orl
in
dec
pop
sbb
rorb
lds
sti
jmp
push
in
jl
push
les
insl
adc
pushl
int3
cmp
jge
adc
dec
fnsave
jp
or
xchg
test
mov
mov
jle
mov
xor
cmp
in
cmp
add
add
enter
add
incb
push
xchg
lret
cli
adc
das
leave
aas
inc
xor
add
sbb
cli
and
xor
arpl
stos
dec
sbb
adc
inc
mov
push
call
and
stc
ja
imul
sub
pushl
mov
dec
jl
mov
xchg
out
lea
rclb
std
and
sbb
cmp
decl
gs
jmp
cmpl
sbb
mov
mov
mov
push
movsl
and
sub
cli
aaa
or
lcall
and
fsubrs
repnz
xchg
xor
or
aaa
movsb
ja
or
mov
xor
das
sub
into
xor
mov
mov
lock
sbb
cltd
das
inc
mov
loopne
mull
add
mov
into
mov
orb
jp
pop
mov
and
and
xor
mov
adc
fldcw
lret
push
bound
jmp
sub
mov
leave
mov
push
inc
xor
jl
push
mov
xor
call
push
push
je
sub
sub
fidivs
sbb
lcall
sbb
jo
xor
and
outsl
mov
xor
push
scas
js
ss
fsubs
sub
inc
cmp
or
test
fwait
sar
pop
add
mov
pop
mov
insb
aas
test
in
adc
mov
add
mov
pushf
and
pop
fwait
add
call
dec
xchg
mov
xchg
adc
xchg
cmp
inc
stos
sbb
jg
dec
adc
scas
xor
push
std
pop
jb
cmpsl
jns
and
xor
stc
mov
decl
push
aas
dec
xchg
add
push
dec
scas
sbb
xor
add
jg
hlt
insl
xchg
sbb
xchg
xchg
js,pt
push
mov
sbb
mov
mov
jne
xor
and
mov
jne
xor
lahf
and
mov
xor
test
jp
mov
mov
inc
bound
or
inc
outsl
xchg
sbb
dec
sbb
adc
scas
test
out
sbb
push
popf
dec
mov
out
dec
addr16
lds
mov
and
lcall
xchg
xor
mov
xchg
mov
test
data16
xor
lret
arpl
xor
scas
out
jl
cld
out
add
jbe
test
jo
xchg
out
adc
push
stc
xor
xchg
cmpsb
mov
inc
xchg
mov
mov
decl
dec
mov
dec
popa
inc
or
jb
lcall
std
out
clc
pop
lret
out
lcall
jecxz
lods
pop
xor
adc
dec
outsb
sti
cmp
les
enter
imul
ds
or
rol
mov
les
mov
mov
insl
ret
mov
jns
fs
push
and
sbb
ds
pop
leave
sbb
call
mov
push
inc
push
icebp
sbb
ljmp
mov
inc
cmp
mov
cwtl
jnp
test
push
fidivs
xor
lock
push
jmp
sbb
jg
clc
xor
in
add
inc
test
arpl
lcall
leave
das
movsb
cmpb
aam
mov
std
add
push
cwtl
adc
aas
mov
sub
sub
push
cmpl
add
cmp
scas
jg
dec
xchg
cltd
and
or
xor
incl
jb
mov
jo
mov
ja
mov
sbb
std
cmpsb
sub
xorl
and
inc
mov
dec
je
or
cmp
adc
lahf
adc
sub
cmpsb
adc
scas
bound
mov
dec
sbb
and
lahf
mov
add
daa
add
call
ficomps
data16
sarl
push
in
outsb
sbb
mov
dec
inc
xchg
mov
jl
fwait
lods
pop
popf
scas
dec
inc
jmp
push
incl
js
inc
arpl
orb
push
sbb
ret
bound
and
mov
xchg
mov
push
xchg
je
push
out
jne
jp
dec
mov
jb
sbb
pop
jmp
outsl
mov
in
push
add
and
push
insl
mov
das
add
ljmp
xor
out
testb
arpl
iret
lods
pop
adc
mov
ljmp
shrl
mov
or
jge
xor
mov
pop
ljmp
cld
iret
mov
inc
mov
incl
loope
je
loop
stc
mov
push
sahf
pop
mov
dec
pop
mov
add
lret
push
call
out
clc
enter
fmuls
call
lea
nop
movb
pop
jno
inc
and
mov
sub
addr16
mov
push
roll
pop
mov
jne
fwait
mov
mov
mov
mov
jbe
in
pop
icebp
mov
cld
pop
and
cmp
ret
sub
filds
sbb
cli
sbb
push
jo
int3
sub
ljmp
arpl
sub
push
loope
data16
sub
icebp
add
ljmp
imul
xchg
int3
add
mov
jb
scas
shll
clc
jmp
insb
cld
xor
cmp
lret
jl
mov
cmpsb
ljmp
pop
and
in
stos
mov
aaa
stos
adc
adc
out
jb
adc
fcmovnbe
jg
daa
sbb
pop
xchg
lods
mov
cmp
adc
xchg
inc
subl
pushl
cmp
push
pusha
sti
push
push
dec
pop
cltd
cvtps2pd
adc
mov
call
ljmp
dec
call
mov
addr16
jg
stc
repnz
movsl
fwait
cmp
and
flds
sar
inc
roll
inc
push
sti
or
push
nop
cli
pop
ret
or
mov
stos
xorl
cs
mov
nop
xor
push
rorb
jae
movsb
hlt
xchg
int3
dec
lahf
add
sbb
lcall
sbb
cmp
jle
dec
jle
cmp
jne
pop
push
incl
pop
sbb
adc
push
icebp
mov
mov
cwtl
fidivrs
sbb
scas
subb
es
mov
sub
scas
jns
dec
jl
xchg
cwtl
test
mov
les
push
mov
mov
lret
dec
mov
xor
es
repz
pop
push
mov
xor
popl
adc
into
inc
scas
mov
filds
adc
and
jg
js
cltd
ret
pop
cld
mov
adc
adc
mov
mov
jp
lods
ljmp
ret
imul
xchg
or
fwait
data16
add
fildll
sbb
rorb
or
dec
sbb
imul
hlt
xchg
mov
inc
jbe
xchg
xchg
dec
mov
pusha
or
aaa
cmpsb
repnz
ljmp
nop
mov
movsb
push
inc
pop
ret
ds
cltd
stos
fwait
decl
insl
inc
lods
cli
adc
loopne
lods
out
movl
aas
mov
sub
mov
aad
faddl
jae
pusha
or
dec
shrb
inc
cmpsb
mov
pop
out
mov
lock
dec
push
loope
xchg
and
test
ljmp
iret
xchg
lods
adc
and
fs
subw
rclb
test
push
inc
decl
add
leave
xchg
lock
lcall
sbb
test
xchg
imul
sub
mov
je
dec
adc
inc
test
mov
push
jns
adc
mov
call
jo
mov
jmp
loopne
push
push
mov
and
jbe
lcall
lock
pusha
sub
inc
hlt
or
jae
sub
pop
ja
ficomps
std
jg
pop
and
xor
sti
adc
pop
shlb
or
or
mov
mov
mov
aaa
in
push
cmp
cmovg
push
add
sub
testb
xor
add
sti
and
push
pop
jecxz
mov
adc
inc
jle
xchg
cmp
mov
or
xchg
dec
jbe
sbb
mov
jp
aaa
cltd
int3
and
sbb
inc
or
test
xchg
dec
lcall
call
repz
lock
jne
add
dec
jmp
dec
rorb
sub
clc
push
mov
mov
movsb
ljmp
cmp
ljmp
mov
sub
fstl
cmpsl
mov
les
dec
dec
sar
call
mov
cli
mov
jne
mov
or
scas
jne
xor
call
xor
into
xor
mov
add
cwtl
push
cmc
mov
push
pop
pop
inc
xor
add
xchg
loope
dec
out
test
mov
stc
xchg
push
dec
dec
lret
xorb
and
lcall
and
pop
xchg
adc
std
cmp
div
filds
out
orl
movsl
jbe
cmp
mov
in
sub
fisubrs
jb
popa
xchg
dec
fwait
decl
dec
rorb
loop
stos
sub
push
lock
jbe
dec
mov
mov
fists
inc
dec
mov
or
pop
jb
ss
sbb
inc
jle
pop
loopne
ja
push
mov
mov
lods
cld
pushf
daa
inc
imul
stos
aas
push
xlat
scas
inc
cmp
test
loopne
shlb
mov
jecxz
mov
jb
mov
jbe
incl
mov
inc
inc
push
stc
test
shll
test
ljmp
mov
ja
loopne
stc
add
enter
fsts
movsb
push
ficoml
inc
jae
mov
mov
inc
mov
xchg
out
dec
iret
adc
sbb
repz
mov
cmp
mov
or
das
push
shrb
insl
jae
and
sub
in
mov
pop
mov
lcall
push
push
out
pop
clc
add
jmp
loop
addr16
ret
leave
mov
mov
push
jo
push
cwtl
or
shlb
push
insl
pop
dec
nop
sub
pop
fcmovnb
cmp
inc
inc
jns
lret
cmp
pop
test
jle
shll
xchg
or
lcall
insl
in
sbb
test
jns
add
mov
filds
xorl
inc
adc
insb
fcompl
shlb
js
dec
mov
bsf
mov
add
call
xor
das
dec
popa
icebp
pop
scas
and
loope
cmp
xchg
fidivrl
pushf
sub
jl
outsl
cli
xchg
cmp
pop
mov
hlt
push
push
push
in
shll
call
push
push
shrl
pop
dec
inc
f2xm1
jp
xor
lock
lret
repnz
mov
push
mov
cmp
dec
cld
test
dec
mov
enter
jbe
movd
call
shll
lods
jb
and
push
stc
mov
xchg
mov
xchg
gs
push
rcll
or
push
std
push
ljmp
mov
into
push
lahf
iret
lods
pop
iret
or
mov
lret
leave
cmpxchg
decl
out
or
je
or
cmp
mov
je
or
lcall
jmp
add
mov
jno
cs
inc
or
mov
aas
pop
hlt
call
inc
cmp
jl
push
imul
cmp
lods
add
push
lret
lcall
jg
inc
push
ds
sbb
pop
icebp
sbb
cmp
enter
lds
add
push
or
mov
fildl
fbld
sbb
out
cmpsb
cmc
jb
in
jg
lcall
cmp
rcll
lea
jae
mov
movsb
movsb
decl
lock
xor
push
out
and
mov
cmp
mov
call
aam
xor
cltd
fs
lcall
bound
xlat
and
into
jg
cmc
sub
dec
inc
adc
sub
enter
loopne
cld
dec
pop
inc
dec
pushw
aas
pusha
lds
push
andl
mov
lds
into
clc
or
ficoml
pop
hlt
in
mov
dec
pop
cmpsb
sbb
or
movsb
incb
xor
inc
int
pop
cmp
lahf
push
mov
es
mov
jmp
inc
jge
lret
or
rcrb
outsl
sub
push
xchg
lcall
cmp
dec
outsl
dec
jo
mov
pusha
mov
mov
adc
outsb
and
fs
inc
jge
outsl
cmp
gs
inc
stos
or
fnstcw
roll
jne
aas
js
mov
dec
ficoml
add
sub
cli
and
loopne
lds
sbb
sub
jg
lods
mov
xchg
mov
pop
jnp
pop
incl
incl
fldl
shrl
lahf
int
dec
xor
jmp
jbe
lcall
cmpb
dec
je
popa
mov
addr16
mull
ret
mov
outsl
lods
jp
inc
xchg
out
push
pop
cmp
jmp
lahf
sti
mov
iret
push
cli
call
test
sarb
pop
fs
ret
call
mov
pop
rcrb
mov
xchg
andl
dec
inc
and
std
scas
rep
aad
idivl
cwtl
sti
cmp
loope
fbld
xor
xchg
repnz
fildll
ss
sub
stos
pop
rcrb
or
jne
sub
std
fcomip
jl
push
jecxz
pop
rcrl
ret
scas
push
jecxz
adc
dec
add
pushl
pop
rolb
xchg
cmc
cmc
test
push
into
xchg
sti
mov
push
fdivrl
cltd
adc
xchg
or
pop
das
pop
mov
mov
cwtl
xchg
push
xchg
clc
pop
call
test
mov
call
sbb
andl
add
mov
adc
ljmp
mov
push
lds
outsl
pop
rcrb
jp
inc
cwtl
pop
mov
xchg
stos
aam
xchg
inc
test
inc
enter
movsb
pop
insb
dec
mov
ljmp
outsb
fdivrl
inc
mov
rcrb
hlt
mov
js
cmp
xchg
bound
and
mov
sbb
xchg
and
pop
roll
test
cmp
fdivs
xchg
imul
in
aad
push
movsl
pop
movsb
cmpsl
jmp
jg
outsb
inc
xor
out
test
cmpsl
inc
pop
rep
insb
loopne
mov
sub
scas
movsb
push
out
mov
add
inc
ret
leave
mov
mov
pop
cmp
mov
out
std
popa
mov
mov
out
cmp
pop
cmc
stc
jns
xor
dec
out
and
add
sbb
fists
add
mov
inc
sarb
les
mov
and
incl
jmp
sub
mov
mov
pusha
cld
call
inc
jne
repz
dec
dec
pop
pop
loopne
imul
shl
repz
push
in
out
int
xchg
insl
dec
scas
into
fldl
jl
mov
jae
aad
xchg
or
and
ret
out
mov
xchg
and
es
cmp
insl
js
pop
mov
js
loopne
lock
call
inc
test
and
iret
das
test
lods
ret
pop
shlb
mov
cwtl
adc
or
inc
jae
xor
push
inc
mov
data16
aaa
ret
xchg
cli
sbb
pop
les
xrelease
dec
sbb
push
int3
and
loope
dec
andb
jae
call
fistl
pop
xchg
pop
test
jp
in
adc
loop
outsl
scas
fistpll
mov
fidivrl
shlb
and
in
mov
xchg
data16
adc
xchg
iret
sbb
imul
mov
add
lcall
aaa
sahf
and
gs
xchg
jbe
pop
cwtl
sbb
adc
out
jae
xor
xchg
xchg
pop
out
decl
xchg
push
and
cmpsl
insb
enter
addw
pop
rclb
popf
xchg
fdivrl
fwait
cs
inc
mov
pop
iret
outsl
fsubs
incl
cld
lods
lds
ret
in
dec
jp
pop
out
xchg
xor
outsb
pop
aas
gs
movsb
scas
out
stos
and
sahf
lret
stos
jg
xor
add
mov
push
out
and
ja
xor
push
fstp
sbb
into
sbb
jmp
icebp
aaa
fcmovb
add
icebp
adc
in
leave
xor
cli
sbb
out
push
fmulp
cs
dec
punpcklbw
sub
call
shlb
pop
and
or
mov
fimull
jg
jle
js
and
jecxz
jb
cmp
outsb
and
outsl
cmp
pop
and
incl
mov
imul
xchg
jge
fidivs
dec
in
cs
jbe
cmpsb
lret
les
jle
decl
dec
adc
mov
push
frstpm(287
add
call
jnp
inc
and
movsb
push
or
pushl
imul
cwtl
jae
xchg
adc
stc
sbbb
and
les
or
dec
sub
pushl
fcmovne
test
stos
dec
xor
cld
sbb
clc
or
pop
cltd
clc
in
inc
in
iret
lret
imul
and
cld
push
cli
add
imul
mov
cld
jp
push
out
push
dec
clc
das
xchg
or
push
incl
jb
scas
adc
clc
dec
shlb
arpl
mov
or
fnstsw
push
faddl
data16
dec
xchg
jecxz
jno
gs
enter
outsl
dec
jle
jns
leave
push
mov
stos
push
mov
repnz
dec
jg
into
fldenv
rolb
outsl
icebp
xor
pop
add
inc
mov
ja
nop
hlt
pushl
clc
dec
xor
ss
iret
sub
dec
iret
in
in
mov
inc
jge
cld
pop
cmpb
enter
mov
test
mov
fiaddl
sbb
or
jmp
jmp
movsb
and
nop
lds
mov
repnz
and
fsubrl
je
xor
rcll
call
aas
ds
ljmp
divl
rcrl
andb
imul
pushl
add
jp
mov
mov
ds
dec
roll
in
sub
clc
incl
inc
cmp
lea
push
lahf
xor
xchg
decl
loop
dec
stc
inc
add
fcomip
pop
push
js
push
or
test
clc
mov
mov
dec
ja
lcall
ss
mov
cmp
mov
loope
shrb
int
in
adc
std
pusha
inc
mov
mov
pop
lds
je
pop
lods
pusha
adc
mov
decl
sub
cmp
gs
fists
mov
push
cmp
mov
repz
leave
data16
xchg
push
jg
imul
jge
sub
js
aad
es
lcall
and
jge
and
addb
insl
insb
in
sbb
sahf
jns
push
dec
stc
push
decb
test
dec
out
xor
daa
xchg
dec
cmpsb
mov
repz
hlt
sub
pop
inc
xor
sahf
ds
sub
pop
and
cwtl
stos
pusha
dec
loop
icebp
inc
mov
adc
sbb
and
lcall
adc
or
push
or
and
and
and
mov
lret
push
mov
pop
bound
enterw
subl
push
loope
pop
sub
divl
jb
les
mov
cmc
xchg
arpl
test
js
out
ret
dec
roll
dec
cld
mov
daa
cld
outsl
jmp
jne
or
outsb
mov
fistps
mov
mov
jo
dec
pop
add
loop
nop
or
clc
cmp
lock
dec
roll
call
lods
lret
pop
xchg
rolb
movsb
jp
cld
jmp
push
jae
push
xchg
push
nop
push
les
aad
pushw
inc
lock
cld
call
add
push
jno
dec
addr16
jp
pop
lea
jl
lods
incl
jno
cvtps2pd
jg
ss
pop
dec
pop
sub
dec
jp
clc
adc
js
cli
mov
xor
dec
adc
mov
jae
mov
nop
sbb
mov
rcll
or
add
and
insb
fdivrp
lcall
jl
jo
aam
jle,pt
add
rolb
mov
int
pop
cmp
in
call
jmp
mov
ljmp
lret
les
mov
and
sub
add
repz
push
std
arpl
ljmp
rcll
jb
bound
ss
push
insb
mov
push
aad
aad
jmp
cmp
pop
out
std
dec
aam
icebp
inc
mov
in
aam
cmc
dec
xor
xor
cmpsb
pop
enter
cld
jmp
jmp
std
push
adc
shrb
stos
or
xor
rcll
std
push
ret
incl
and
sahf
push
mov
movsl
mov
data16
mov
loop
sbb
ret
stc
pop
stos
ss
das
clc
sub
ret
and
movsb
mov
aam
xor
ljmp
dec
mov
lcall
mov
out
scas
iret
sbb
shlb
mov
jge
test
inc
das
lea
pop
mov
stc
aaa
test
add
aam
je
out
scas
pop
decl
push
add
mov
lods
cmpsb
mov
push
sarb
add
dec
ss
xor
mov
and
and
dec
cmc
mov
dec
add
std
jmp
xor
das
fwait
lods
jb
aaa
inc
push
stos
cmp
fwait
sub
outsl
jb
lcall
scas
or
loopne
mov
cli
ret
or
in
inc
in
cmc
cmp
sbb
cmp
and
xor
sub
push
or
ffreep
cli
cmp
dec
incl
cltd
shlb
lods
jo
jb
jne
mov
fs
xor
out
pop
push
dec
mov
inc
shrb
fidivs
out
sbb
mov
or
push
sahf
mov
push
adc
das
jp
cmc
push
xlat
pop
scas
xchg
fimuls
cmpl
mov
dec
mov
addl
sbbb
jg
pushf
into
outsb
push
aaa
in
fstps
in
outsb
fbstp
loope
outsl
int3
and
xor
xor
call
inc
mov
jecxz
xor
jg
adc
inc
mov
cmp
je
inc
jge
fidivl
jns
cmpsl
sbb
cmpsb
sbb
mov
jo
adc
inc
sub
jb
jp
or
cmp
psrlq
clc
fcomip
into
sbb
adc
cmp
and
frstor
add
add
mov
hlt
xchg
push
cltd
cmp
pushl
push
mov
pushf
mov
adc
xchg
cmp
decl
nop
lea
add
jnp
enter
cs
lcall
movsl
adc
ss
xchg
aaa
es
mov
mov
repz
idivl
arpl
add
imul
mov
inc
inc
inc
push
dec
clc
popa
or
push
lret
dec
inc
stos
xor
in
jbe
mov
sbb
loopne
pop
data16
lods
cmp
popa
mov
outsl
mov
cmpsl
pop
jb
bnd
jae
sbb
inc
loope
add
sub
ds
and
cmpsb
es
pushf
xor
add
decl
insb
sbb
arpl
and
lcall
outsb
cmp
jecxz
dec
sub
mov
lret
pop
or
pop
mov
call
cmp
adc
rcll
lahf
pop
sbb
mov
or
sbb
inc
mov
mov
and
lods
into
xchg
scas
ficoml
aam
decl
subb
mulb
fwait
push
cmpsb
mov
sahf
dec
scas
add
adc
mov
bound
mov
dec
stc
nop
aas
loope
test
roll
lea
call
clc
adc
pop
cmp
fdivrl
in
add
enter
fisttps
jno
jge
dec
dec
push
adc
fistps
in
pop
call
push
mov
fsubs
shll
push
jmp
decl
add
mov
adc
loop
fstps
aam
in
je
call
dec
inc
pop
push
std
test
add
leave
out
std
xor
nop
shlb
bnd
pop
inc
pop
out
cmp
int
jmp
decl
xchg
fmuls
mov
or
repz
mov
adc
dec
fists
sbb
rorb
pushl
pusha
pop
jl
repz
xchg
and
lahf
pop
out
gs
jb
dec
pushf
jg
out
ret
sbb
mov
pop
mov
lock
call
dec
cwtl
adc
lods
pop
pop
hlt
in
cmp
ss
jle
or
sub
pop
incl
lea
cmpsl
repnz
jae
sbb
stos
or
stos
movsb
inc
adc
pop
ss
mov
xor
add
jmp
and
add
pop
xor
push
cmp
pop
scas
sarb
out
adc
jg
cmp
loopne
cmp
fmull
inc
mov
enter
pop
aam
int
jg
push
in
mulb
sub
arpl
jae
aaa
fwait
inc
rorl
jmp
pop
notb
sub
xchg
ret
leave
or
movsl
sbb
incl
mov
js
or
jae
sbb
loop
fmuls
fucomp
adc
sbb
mov
in
sbb
shlb
sub
call
outsb
aas
fildll
xchg
adc
pushl
inc
rorl
iret
cmp
cltd
dec
xchg
lods
lahf
push
jge
rcll
jg
mov
sbbl
or
or
mov
mov
jecxz
xor
icebp
mov
add
incl
divl
cwtl
pushf
imul
adc
lcall
bound
leave
cmp
add
popf
dec
nop
in
push
ljmp
xchg
jb
mov
mov
pop
xor
repz
mov
inc
std
inc
enter
or
shrl
cwtl
lock
out
dec
jmp
jecxz
jmp
xor
out
stos
mov
jg
es
xchg
cmp
adc
enter
push
push
ret
daa
out
clc
pushl
xchg
mov
inc
mov
lcall
xchg
adc
mov
sti
aad
jnp
cmpsl
addr16
mov
jbe
cmpsl
stos
cmp
mov
aas
xchg
icebp
jae
mov
lcall
outsl
xchg
test
mov
out
idivl
sub
adc
jl
ret
flds
int
enter
ljmp
add
ret
mov
cmpb
xchg
decb
xlat
push
clc
sub
xchg
push
jbe
imul
lock
mov
bound
leave
stos
xor
add
fisubrs
fbstp
xlat
push
testb
mov
add
int
scas
icebp
xor
insb
adc
xor
mov
sub
lcall
sub
jle
sti
xor
lods
and
push
dec
das
into
pop
insb
cli
sbb
imul
inc
out
sbb
dec
mov
pop
jp
xchg
push
xor
scas
push
nop
clc
decl
fs
xor
push
mov
jp
call
scas
mov
or
mov
and
lcall
jl
pushf
sub
jl
xchg
jle
adc
in
sub
cmpsb
or
repnz
add
out
in
pop
and
int3
xchg
sbb
jecxz
pop
mov
sbb
cmp
decl
ret
dec
dec
jmp
das
mov
push
inc
jno
push
jb
scas
sbb
sub
jg
mov
cmpsb
push
fsubl
decl
inc
ss
xor
out
fdivl
lcall
ds
ss
inc
sbb
in
lods
incl
sub
xchg
xor
mov
jg
and
mov
jno
mov
xor
pop
addr16
test
xchg
stos
lcall
aaa
mov
iret
xchg
mov
int
pop
or
test
fucomip
xor
nop
sahf
mov
xchg
xchg
adc
or
fistps
ret
adc
pushf
es
mov
inc
mov
xchg
mov
mov
jo
iret
mov
add
test
fwait
sub
sbb
cmc
es
push
aam
lds
mov
or
cmc
xchg
mov
decl
ds
repz
ficoml
mov
nop
xor
add
dec
push
lcall
incl
jb
mov
or
xchg
out
pushf
mov
mov
fs
mov
mov
dec
xchg
or
add
lcall
xor
ret
jp
jg
cmp
fidivs
fmuls
ja
movsl
sbb
cmp
mov
push
pop
lds
xor
pop
test
sbb
ficoms
mov
or
inc
xchg
pinsrw
mov
jo
lcall
xor
les
clc
mov
pushl
leave
sub
push
in
mov
out
in
aas
in
stc
adc
sarb
pop
cld
call
lock
inc
jbe
adc
jnp
insb
lret
jo
push
arpl
rclb
xchg
mov
cli
incl
push
xchg
add
cmpsl
or
test
out
jg
insl
xor
fs
sbb
movsl
nop
jp
insl
inc
xchg
and
cmp
jmp
mov
xchg
das
nop
sti
pop
xchg
xchg
and
mov
dec
test
jp
mov
xchg
xchg
hlt
loope
xchg
out
and
push
xchg
mov
push
push
inc
push
jo
cmp
cmp
mov
subb
mov
call
test
or
lods
das
mov
add
add
add
jmp
sbb
fdivrl
fldl2t
movsb
pop
cli
rorb
xchg
repnz
loope
nop
jmp
cmc
xrelease
or
jp
dec
fs
mov
enter
xorl
vprotd
jmp
push
xor
mov
pop
movsb
imul
lahf
add
pop
lcall
dec
xorl
ss
out
xchg
decl
mov
imul
cmp
and
pop
xorl
pop
pushf
sub
sbb
mov
push
mov
dec
out
mov
and
gs
mov
mov
addr16
add
inc
inc
or
fistps
sbb
jge
or
ljmp
ss
pop
dec
inc
cmova
or
push
jns,pt
jae
cmp
mov
incl
out
xor
fs
inc
addr16
loope
inc
dec
shll
pop
jns
push
loope
and
adc
clc
mov
das
pop
add
and
pop
decl
and
push
repnz
call
hlt
mov
pop
fs
test
loope
gs
cld
int
inc
out
add
or
mov
incl
sbb
cs
cltd
pop
push
push
int3
mov
adc
addb
or
jne
jnp
test
cmp
leave
mov
hlt
ljmp
inc
push
pop
icebp
mov
insl
outsl
fs
push
mov
or
cld
or
ss
cwtl
sub
jns
mov
dec
data16
dec
dec
fs
inc
dec
mov
mov
inc
js
inc
sbb
mov
inc
adc
inc
test
jno
mov
mov
or
js
pop
pop
outsl
push
push
inc
gs
fs
mov
add
std
stc
incl
mov
inc
data16
lods
cmpsl
pusha
add
mov
imul
mov
xchg
pusha
cmp
add
xchg
push
outsb
pop
in
ss
hlt
mov
jbe
insb
inc
mov
mov
dec
jnp
cmc
fstpt
mov
dec
push
mov
and
mov
imul
mov
insb
and
je
ja
insl
icebp
das
mov
dec
das
push
mov
sbb
jge
xorb
lret
xor
decl
xorb
pop
popa
lret
inc
inc
scas
sti
mov
push
add
dec
inc
pop
shl
mov
xor
cmp
decb
lods
fwait
decl
pop
cmp
movsb
push
push
ja
cmpb
dec
cmp
jmp
pusha
mov
push
adc
addr16
mov
mov
push
test
mov
adc
gs
push
dec
pop
jecxz
enter
pop
jo
or
jbe
and
incl
rorb
jle
dec
dec
mov
incl
mov
dec
jbe
push
in
mov
xchg
push
cmpsb
xor
lret
add
push
mov
dec
decl
inc
std
jo
jo
mov
call
dec
outsl
inc
data16
sbb
call
mov
mov
scas
xor
push
js
inc
out
fwait
dec
lahf
rolb
push
add
movsb
andl
mov
push
dec
push
imul
dec
fists
popa
push
adc
nop
fs
rorb
idivb
inc
xchg
loop
sub
xor
push
outsb
inc
outsb
ds
jge
add
daa
sbb
decl
dec
dec
mov
imul
mov
shlb
mov
filds
insb
dec
jo
jbe
mov
mov
roll
xor
scas
inc
inc
pusha
or
pop
ljmp
lcall
dec
dec
cld
ret
nop
jae
jnp
call
les
push
out
adc
pop
xor
pop
mov
addr16
icebp
mov
jp
push
cli
decl
fs
pop
out
jae
ficompl
hlt
ljmp
test
cld
inc
pop
imulb
inc
inc
dec
cli
lahf
lret
imul
out
adcl
imul
cs
dec
orl
or
popf
inc
mull
sti
xchg
jb
fwait
mov
insb
fs
negb
mov
sbb
cwtl
xor
pusha
rcrl
lods
dec
lret
scas
inc
in
sahf
arpl
add
out
popa
pop
inc
scas
xchg
pop
cltd
dec
mov
cli
mov
shll
loope
stos
gs
mov
sarb
or
sub
hlt
mov
scas
cli
xor
add
scas
pusha
xchg
arpl
sbbb
push
xlat
fwait
inc
mov
dec
or
mov
cmpsb
sbb
icebp
sbb
aas
jb
xchg
ds
dec
dec
push
and
dec
imul
mov
xor
mov
xchg
addr16
scas
push
and
ljmp
jbe
outsl
dec
mov
sub
insl
icebp
cltd
xchg
jno
hlt
fcomip
sub
xor
mov
inc
scas
push
fisttps
mov
in
mov
pushl
pop
enter
pop
cmp
jl
jge
test
inc
outsb
xor
scas
add
daa
xor
xchg
mov
dec
roll
out
fildll
pop
cli
jecxz
mov
pop
sbb
decl
loopne
sbb
push
outsl
insb
pop
lret
ljmp
ficoml
push
jne
and
mov
nop
xchg
call
fadds
insl
nop
in
inc
int
mov
addr16
inc
xchg
sub
mov
out
ja
shlb
dec
pop
mov
xor
out
mov
mov
dec
out
cmp
stc
cmp
push
bound
outsb
hlt
add
int
push
push
push
pop
add
decl
inc
or
xor
pop
push
jmp
ret
clc
and
cmc
jbe
rolb
test
call
inc
xorb
sub
mov
xor
mov
gs
inc
add
cltd
test
dec
dec
mov
movsb
xchg
pop
lock
mov
fsubl
jle
and
and
jp
jge
adc
call
xor
dec
mov
movsl
dec
dec
or
pop
loope
dec
xor
lahf
daa
jg
xchg
gs
ja
mov
icebp
stos
or
jg
ret
push
icebp
xor
dec
int3
mov
je
jg
or
mov
lods
push
in
dec
leave
pop
sarb
sahf
jge
mov
and
outsb
or
sbb
push
mov
jmp
add
inc
int3
cmp
mov
std
pushl
mov
inc
fistpl
inc
cltd
aas
outsb
in
addb
frstor
inc
jmp
call
mov
aas
rcrl
jo
add
sar
call
test
lea
mov
clc
xorl
lahf
add
adc
shlb
jb
bound
ja
jbe
xor
sti
xor
pop
dec
fcomip
sbb
gs
jb
xor
addl
rcr
nop
shll
inc
push
js
and
repnz
lcall
jle
and
gs
or
stos
lcall
pop
subb
adc
cld
filds
scas
dec
cld
xor
not
cltd
jbe
pop
inc
loop
jmp
xchg
mov
mov
cmova
cmp
push
mov
sarl
cmc
idiv
ljmp
shlb
mov
rcrl
cmc
mov
in
lret
into
adc
add
ljmp
dec
fistpl
xchg
pop
movsb
mov
jno
ja
nop
adc
xchg
mov
call
mov
loop
cmpsb
lea
lahf
scas
inc
stos
xchg
mov
pusha
insb
faddl
inc
fisubrs
mov
je
test
adc
rorl
mov
rcll
mov
je
adc
jns
mov
mov
hlt
push
pusha
mov
lods
imul
call
test
or
cwtl
cwtl
ljmp
in
jge
fs
mov
in
xchg
movb
sar
xchg
mov
mov
inc
test
jg
aas
shll
push
data16
or
jl
stos
test
fdivrs
fs
repnz
mov
cltd
push
decl
mov
mov
scas
sti
lods
lea
scas
iret
xchg
mov
mov
mov
cmp
mov
rcrb
cmp
jmp
mov
mov
sti
or
mov
ret
mov
sub
fwait
cmp
clc
call
cli
and
fimuls
push
lods
outsl
jg
test
gs
jo
cltd
pop
divb
in
pop
mov
mov
loop
push
out
cmpsl
inc
xchg
aad
mov
mov
int
cmp
decl
xorl
cmpsb
stc
and
rcll
es
gs
xor
call
lods
movsb
mov
xorb
movsl
std
mov
mov
cmp
sbb
mov
jg
adc
add
xchg
aam
stos
inc
jno
lock
aaa
ret
adc
xchg
xchg
sbb
xlat
test
movl
jmp
jl
cmpsl
cld
jle,pn
in
int3
and
mov
ljmp
dec
movsb
sub
scas
mov
call
add
pop
ret
ficomps
xchg
nop
jp
push
mov
lock
cltd
shrb
cmpsl
jnp
mulb
cli
ljmp
stc
or
icebp
ljmp
aaa
jp
xor
sahf
mov
xchg
lea
xchg
jp
cld
js
mov
jmp
lahf
xchg
mov
and
incb
xchg
in
add
mov
mov
pop
xorl
or
mov
cwtl
lcall
xor
mov
test
lock
pop
pop
mov
jg
mov
das
cmpsb
pop
test
lahf
nop
mov
test
repnz
or
push
sbb
call
jp
cmc
xor
aam
or
cmpsb
xchg
fdivr
lcall
negl
shr
call
rorl
mov
or
sbb
xchg
xor
add
xlat
xor
inc
aad
jo
cmpsl
xchg
stos
jb
mov
repnz
testl
out
cmc
pop
xchg
hlt
ljmp
jbe
mov
adc
sub
pop
and
loope
cmpsb
ljmp
mov
mov
shlb
fwait
or
cld
sbb
std
jmp
or
roll
jl
pop
and
incl
stc
push
xchg
dec
push
lods
xchg
bnd
pop
lock
add
out
stc
ljmp
jp
cmp
fnstenv
test
mov
xchg
repz
jno
lahf
out
aas
fldl
mov
mov
mov
ror
mov
mov
mov
jns
fdivr
cmp
push
scas
mov
lcall
push
jmp
mov
fucomp
push
bound
ljmp
clc
sahf
mov
cmp
mov
mov
sub
mov
aam
jecxz
and
mov
cli
add
or
std
and
lcall
imul
or
lods
mov
int
xchg
dec
pop
mov
loopne
mov
jg
aas
cltd
ret
popa
add
cli
idiv
and
loopne
mov
xor
adc
movsl
into
push
cwtl
lock
or
adc
mov
rcrb
sahf
and
lea
dec
das
sahf
xchg
mov
nop
xchg
cmpsb
jmp
xor
ret
mov
out
repnz
scas
dec
add
and
mov
mov
sbb
pop
lcall
inc
roll
and
push
mov
aam
shlb
lds
xor
ficoml
dec
jecxz
adc
jge
rol
shl
xor
jns
test
and
fdiv
mov
push
scas
pop
lea
pop
mov
aam
mov
ss
mov
psubb
arpl
fisubrs
ret
in
inc
ljmp
clc
jg
fiaddl
inc
movsl
lahf
in
jp
mov
insb
shrl
jg
shlb
fstpl
std
pop
movsb
scas
pop
shll
cld
xor
and
xchg
sahf
int
inc
cld
sub
mov
out
dec
call
cld
mov
cmpsl
mov
jp
push
mov
xchg
movsb
scas
icebp
add
in
and
xchg
pop
imul
popf
mov
pop
mov
mov
fstpl
sahf
test
out
cmp
test
test
icebp
lcall
lret
xchg
lret
cmpsb
into
cltd
outsb
pushl
xchg
mov
cmp
lods
sbb
mov
jle
mov
push
rcrb
push
mov
clc
stos
mov
push
mov
pushl
cld
call
ljmp
pop
mov
das
mov
mov
push
pop
decl
fisttps
in
das
adc
ljmp
leave
xor
jns
mov
test
lods
dec
std
jl
xchg
repnz
fsubr
clc
out
xchg
ret
jle
cmp
mov
test
push
scas
in
fisttpl
add
jnp
loopne
mov
xchg
cld
loopne
lea
dec
ret
sbb
repnz
ljmp
pusha
mov
mov
push
in
mov
cmp
and
mov
mov
cmpsb
mov
pop
sbbl
jg
jecxz
or
lret
into
sbb
subb
mov
lock
ljmp
push
lea
flds
mov
lcall
dec
pop
loope
mov
xor
addb
pusha
gs
dec
fsub
mov
std
xor
dec
cwtl
mov
scas
mov
xchg
fisubrs
xchg
xlat
cmpsl
movsl
or
lods
je
mov
decl
ljmp
lods
insl
cltd
xchg
call
std
cwtl
popf
jo
ror
out
push
lock
mov
push
sbbb
pop
lea
call
jl
pop
xchg
xchg
sub
sarb
mov
leave
repnz
fsubr
stos
movsl
filds
xchg
std
sub
mov
push
outsl
xorb
shl
adc
mov
sbb
mov
inc
std
repnz
rcll
push
incl
xchg
mov
lcall
andb
aam
inc
mov
decl
mov
xchg
xchg
mov
leave
scas
mov
scas
fnop
mov
ficompl
enter
ret
repnz
mov
popf
nop
out
mov
jb
sarb
rcrl
or
sahf
cmpsl
mov
mov
cmp
sub
cmpsb
mov
jmp
mov
in
test
outsl
xchg
xchg
fcmovb
add
and
aam
test
jmp
mov
lods
std
out
clc
fidivs
push
std
call
mov
ret
loope
add
jmp
lods
in
mov
fildll
cli
cmc
iret
out
in
xchg
test
xor
push
mov
ficoml
sbb
lcall
cmpsb
mov
or
lret
dec
fdivrl
fdivrs
sub
test
movsb
jnp
mov
mov
shrb
mov
mov
jg
push
push
jle
jp
xlat
in
test
jmp
mov
lods
push
inc
fstps
loop
cli
sbb
call
dec
xchg
lcall
pusha
out
push
mov
mov
in
and
cld
xchg
cltd
mov
jmp
loopne
adc
icebp
out
lods
inc
outsb
add
xchg
mov
mov
dec
mov
xor
ret
sahf
pavgb
cld
pop
adc
inc
arpl
xor
fldcw
mov
sub
mov
into
jg
mov
js
loopne
jae
adc
shll
jns
loopne
mov
fistps
push
jmp
cltd
es
or
pop
cwtl
int
xchg
mov
fs
dec
mov
repnz
sar
call
test
inc
in
outsb
inc
adcb
inc
dec
cld
mov
insb
js
cmpsb
dec
pop
jnp
dec
inc
jecxz
insb
ja
cwtl
jb
push
add
shlb
dec
sarb
push
in
xchg
inc
push
mov
jo
pop
xchg
jnp
sub
pusha
dec
sbb
jbe
in
mov
pop
test
mov
stos
jo
mov
xchg
outsl
pop
pop
or
pop
jp
push
pop
mov
dec
mov
int3
inc
jl
jg
decl
aaa
stos
dec
dec
sbb
pop
cmp
imul
pop
jb
cmpsl
push
push
out
decl
je
fwait
mov
lahf
js
push
mov
jae
cmp
ljmp
sbb
mov
mov
xchg
mov
insb
jno
nop
insl
jno
cs
fbstp
dec
sahf
push
inc
push
es
call
mov
fs
mov
jno
shrl
gs
ret
push
ja
mov
jmp
cltd
push
imul
mov
dec
inc
movsb
push
push
jnp
dec
dec
dec
mov
jmp
fbstp
push
mov
push
or
outsl
dec
repnz
inc
lcall
repnz
lods
dec
idivl
jge
notl
add
dec
icebp
incl
stc
jge
in
imul
cmc
jae
mov
outsl
push
adc
pop
cmp
and
iret
das
nop
pushl
jp
push
mov
xchg
jo
insb
fdivs
or
mov
incl
jno
pop
add
cmp
and
jp
xor
sub
and
sub
mov
loopne
dec
pop
jmp
cmp
xchg
mov
push
inc
test
incb
push
jae
jg
and
cmp
and
sub
cmp
cld
mov
jb
cmp
sub
add
das
push
sbb
sub
push
iret
jmp
add
daa
push
lgdtl
lcall
js
jecxz
popa
jl
popa
ja
int3
out
inc
test
out
adc
cld
insl
mov
dec
pusha
call
jb
mov
es
dec
xor
gs
test
mov
ds
imul
cltd
gs
pop
dec
push
rolb
mov
js
jnp
inc
inc
gs
inc
outsl
inc
pop
orb
fcomip
jnp
jno
xor
outsl
pop
push
arpl
js
pop
gs
pop
push
jo
pushl
inc
pusha
dec
push
jge
test
xor
and
xor
and
jg
or
add
sub
sbb
adc
incl
and
add
sub
or
sub
add
xor
aas
sub
adc
push
or
inc
ds
cmp
sub
outsb
imul
push
push
pop
push
push
es
ds
dec
xor
cmp
sub
ljmp
xor
add
das
dec
sub
push
jae
dec
dec
sbb
in
push
sbb
push
adc
xor
push
xor
sbb
ljmp
sub
sbb
sub
cmp
and
jbe
sbb
sbb
sub
cmp
das
sub
es
out
add
sub
sub
aam
fcmovne
jmp
jns
and
dec
sub
js
addr16
mov
pop
xchg
push
int3
sbb
dec
xor
in
xchg
jb
js
xchg
dec
push
bound
jno
jg
cmc
aas
add
inc
adc
and
and
push
jbe
dec
incl
dec
cmp
push
cmp
ss
mov
or
inc
push
imul
cmp
outsb
jg
mov
xor
adc
sbb
pop
add
or
fcomps
or
xor
cmp
mov
jle
or
outsl
dec
jae
inc
shlb
pusha
in
orl
cltd
dec
repnz
xchg
dec
and
loop
imul
dec
add
jp
sub
fnstcw
insb
xor
enter
imull
mov
hlt
push
inc
lcall
add
clc
mov
add
sub
push
inc
testb
sub
cmp
sbb
iret
lcall
pusha
or
sbb
sbb
aas
push
addr16
sub
push
sbb
add
push
sbb
inc
addr16
inc
inc
push
jl
cmp
push
cld
scas
mov
sub
sub
xor
sbb
lock
xor
and
pop
and
decl
or
popa
sbb
call
adc
push
pop
add
or
jp
and
sub
es
push
cmp
sbb
cmp
bound
jmp
adc
add
xor
and
es
cmp
cmp
xor
cmp
divb
cmp
add
pop
inc
imul
sysenter
jp
push
add
movq
sub
arpl
fistpll
insb
pusha
pop
std
mov
in
xor
adc
push
add
sub
cld
mov
add
push
sub
cmp
add
cmp
or
or
call
or
cmp
imul
sbb
xor
insb
cmp
sub
pop
add
add
push
aas
incl
sub
adc
xor
and
cmp
ja
add
push
sub
daa
sub
jmp
xor
sub
pop
pop
pop
jbe
adc
or
es
sub
sub
pushl
and
push
and
push
add
jp
sbb
and
pop
xor
cli
mov
add
add
je
pop
sub
sbb
outsl
push
lods
bound
pop
push
test
pop
popa
ss
adc
sbb
mov
and
push
adc
add
add
mov
sub
imul
or
add
sub
dec
dec
push
xor
jb
jne
outsl
insb
aaa
sub
fidivs
add
sbb
add
out
add
and
push
sub
add
nop
js
add
ds
jb
sbb
roll
mov
cmp
jno
xchg
mov
pop
pop
sbb
sbb
sbb
sbb
push
or
jg
cmp
sub
cmp
imul
push
sbb
cmp
pop
cmp
pop
cmp
loopne
cmp
sbb
push
sub
adc
imul
push
add
cli
andb
cmp
sbb
cmp
js
clc
cmp
out
pop
inc
inc
mov
xor
push
adc
lods
ficomps
adc
verr
dec
push
idiv
fwait
jle
arpl
jg
bound
and
and
jae
add
pop
loopne
incl
sub
and
xor
jb
cmp
icebp
jg
lcallw
ds
and
sub
xor
es
fbstp
xor
and
push
mulb
push
adc
xor
xor
out
gs
and
cmp
out
pop
jge
pop
jnp
je
ds
ljmp
pop
cmp
or
popa
sbb
sub
fidivrl
cmp
icebp
incl
push
and
add
cmp
in
pop
pop
push
sti
push
xchg
cli
push
inc
inc
inc
jl
push
or
or
sbb
hlt
cmpb
cmp
cmp
inc
push
pushf
sub
inc
decl
pop
or
xor
shlb
adc
fidivrs
divl
das
cli
xchg
dec
das
or
adc
and
add
jne
jp
sbb
xor
adc
jge
push
cld
aas
lret
outsl
push
inc
pop
inc
inc
dec
and
push
xor
sub
and
scas
cmp
sub
cli
adc
into
cmp
push
jg
insb
jo
hlt
mov
and
adc
xor
inc
sub
or
adc
sbb
xor
pusha
bound
push
sar
clc
push
popa
jb
pop
xor
add
daa
and
ss
daa
popa
push
add
lds
sub
inc
aas
push
aaa
push
or
jb
or
push
push
dec
addr16
call
mov
inc
add
xor
daa
aaa
dec
sub
out
clc
add
push
jb
jbe
or
dec
pop
add
adc
aas
inc
cmp
insl
and
and
icebp
stc
ljmp
and
adc
adc
pop
add
and
and
add
lcall
hlt
rdpmc
bound
and
push
and
add
cmp
sti
decl
aaa
or
cmp
add
je
add
cmp
aaa
add
pop
add
mov
mov
jbe
sbb
xor
sub
adc
sub
or
or
jno
aaa
sub
sbb
xchg
getsec
and
addb
jg
jg
sub
sub
test
push
or
add
adc
xor
adc
aas
adc
mov
xor
cs
inc
push
bound
jne
jle
pop
jp
insl
sub
out
setl
push
add
and
add
lock
push
jle
xor
mov
outsl
mov
testl
daa
and
sub
adc
xor
inc
gs
or
cmp
aas
ret
ljmp
inc
outsl
inc
add
add
js
and
push
es
xchg
adc
sub
xor
dec
insl
ja
add
xor
or
lcall
popw
sbb
gs
sub
inc
mov
push
aaa
pop
bound
and
sub
xor
inc
cmp
sub
add
dec
push
sbb
adc
popa
adc
sub
aaa
cmp
imul
stos
push
sbb
decl
lock
sub
xor
aas
add
negb
cmp
or
and
push
or
ss
gs
mov
sbb
and
sub
cmp
adc
sub
cwtl
push
pop
dec
clc
add
sbb
jno
adc
sub
clc
jmp
or
cs
ds
fdivp
outsl
cld
pop
or
or
add
push
push
fs
insl
fisubrl
sub
sbb
add
insb
add
bound
popa
xor
or
add
add
sub
divb
xor
xor
push
jb
ja
pop
lock
add
push
das
aas
xor
aam
or
daa
adc
xor
or
push
fdivp
or
pop
sbb
jge
or
ds
and
push
icebp
xchg
mov
sbb
add
push
adc
sub
jo
jge
adc
or
pop
rorl
subl
and
es
or
or
and
or
addb
add
dec
or
or
sub
add
sub
cmp
and
dec
ds
xor
imul
out
testb
pop
cmp
push
jp
cmp
cmp
jp
cmp
jp
test
outsb
out
pop
ret
mov
or
adc
cmp
pop
sbb
xor
dec
das
xor
mov
sub
cmp
xor
xor
or
es
ljmp
cli
sbb
dec
push
add
inc
aaa
sbb
add
push
or
aas
adc
xchg
divl
sub
or
or
or
fs
das
mov
add
sbb
adc
xor
jp
push
or
hlt
adc
and
sbb
or
aaa
xor
pop
or
or
sub
push
pop
lock
jo
mov
sbb
sub
cmp
punpckldq
and
mov
lock
add
rolb
clc
mov
decl
push
and
or
cmp
ja
aaa
adc
and
fcompl
cmp
aam
and
aad
inc
cmp
adc
push
cmp
lcall
mov
inc
push
jp
inc
xor
rorb
decl
sub
push
jns
add
adc
fists
and
sub
sub
or
or
adc
fwait
push
add
imul
push
insb
das
and
cmp
dec
adc
test
add
and
gs
and
and
or
je
outsl
mov
cmp
push
cs
xor
icebp
jmp
xor
add
push
jno
or
outsb
push
sub
or
hlt
mov
and
cmp
test
sub
incl
movsl
hlt
das
push
add
add
and
sbb
push
sub
adc
je
je
cmp
sbb
adc
xor
push
pop
pop
dec
dec
std
add
add
xor
pop
adc
or
adc
hlt
loopne
mov
push
push
ss
pop
jnp
xor
loop
inc
lds
adc
and
pop
xor
mov
aaa
or
sbb
xchg
adc
unpcklps
sbb
adc
jg
add
or
dec
ds
and
adc
clc
sub
and
jp
or
sub
add
pop
add
xor
outsl
clc
add
cmp
clc
cmp
adc
pop
sbb
lcall
sbb
or
xor
adc
sbb
sub
sub
ds
ljmp
xor
dec
xor
dec
cld
add
pop
or
pop
or
cmp
notb
cmp
incl
sbb
es
dec
aaa
adc
sub
sub
add
aas
and
push
sub
or
jl
incl
adc
and
push
sbb
scas
adc
mov
or
push
or
jg
jp
inc
xor
push
inc
pop
dec
inc
pop
pop
push
dec
jno
push
jp
jo
mov
std
ja
dec
push
dec
jge
scas
xor
push
add
stos
aaa
pop
movsl
xchg
xor
jg
inc
inc
jp
dec
jmp
dec
jbe
insb
jbe
jne
push
inc
jg
push
pop
jg
dec
js
inc
pop
push
jns
inc
pusha
jo
pop
jnp
pop
mov
aaa
and
push
pop
pop
mov
mov
loopne
inc
jbe
push
adc
divb
call
push
dec
insb
push
push
or
sbb
jae
sbb
xor
outsl
xor
cmp
cmp
or
push
je
mov
aam
cmp
or
out
inc
adc
or
push
jecxz
mov
jle
sub
push
and
ja
dec
sub
das
dec
inc
sahf
lds
xchg
add
xlat
push
arpl
pop
add
mov
cmp
add
push
and
push
cmp
xor
jne
sbb
imul
jne
gs
insl
pop
pusha
shlb
loopne
dec
mov
jb
stos
in
push
sbb
ret
sar
jg
lret
push
push
cmp
insb
push
mov
mov
lods
jle
fsubrl
jmp
push
pop
sbb
notb
rcr
or
fsubr
inc
push
loopne
sar
pushl
mov
in
jo
cld
fdivrs
icebp
jo
mov
pop
ljmp
push
fidivs
cli
inc
dec
loope
pop
pop
xlat
sti
mov
loope
inc
or
dec
pop
push
fldcw
icebp
call
sub
jnp
and
pop
aas
ret
addr16
or
dec
push
and
dec
push
mov
ds
add
imul
pop
bound
out
push
inc
ds
adc
je
call
inc
dec
js
pop
in
cmc
ja
jp
jae
pop
call
inc
pop
dec
jmp
gs
jmp
je
in
dec
inc
jno
inc
push
imul
inc
push
mov
pushl
mov
rolb
push
push
sbb
imul
fs
jg
jae
fildll
js
test
push
popf
jmp
dec
xchg
in
addr16
mull
jg
jmp
fcoml
and
imul
push
pop
jge
push
inc
push
out
dec
pop
mov
jno
mov
ljmp
mov
pop
inc
mov
stc
push
jl
in
outsl
pop
sbb
inc
addr16
aam
pop
mov
sar
mov
dec
data16
icebp
push
jl
out
inc
push
fldcw
jnp
dec
iret
push
mov
mov
pop
xor
jl
push
inc
js
pop
add
pop
jno
inc
adc
je
push
icebp
call
pop
inc
insl
inc
pusha
pop
inc
inc
dec
inc
lret
test
movsb
push
fcoml
jbe
dec
cmp
outsl
out
sahf
push
dec
jns
ja
jno
imul
loop
mov
outsl
mov
push
push
push
inc
insb
jbe
jle
outsb
js
fcomip
mov
call
aam
out
inc
ret
jp
jb
inc
aam
lcall
loope
insl
jl
gs
insl
push
jbe
jns
in
dec
icebp
andb
pushl
pop
notl
pop
repz
xor
int
add
inc
inc
fs
inc
dec
push
pusha
lea
ljmp
dec
dec
adc
push
pop
and
pop
outsb
push
mov
sti
incl
sub
push
out
in
lock
dec
andb
inc
lretw
add
pop
addr16
dec
push
jne
and
aam
push
inc
inc
pop
dec
stos
inc
adc
popa
push
pusha
imul
push
pop
push
push
jbe
push
dec
push
inc
sub
inc
jne
push
and
mov
js
add
sti
inc
insb
pop
arpl
jno
dec
jno
inc
inc
addr16
fmull
jbe
jae
push
jne
ja
bound
fdivp
je
dec
pusha
cmp
pop
pop
js
inc
popa
push
ja
pop
jne
loop
ljmp
jno
imul
data16
lds
dec
fisttpll
aad
int
clc
jno
negl
into
imul
hlt
das
cli
inc
out
dec
int
mov
dec
dec
dec
push
push
dec
xchg
clc
pop
lock
push
insl
imul
pop
jae
inc
push
push
jnp
insl
sub
je
dec
lcall
mov
dec
pusha
jo
pop
push
aam
lock
icebp
inc
lds
outsl
mov
in
lcall
dec
push
arpl
inc
mov
inc
inc
dec
pop
inc
pop
adc
jbe
jo
inc
arpl
outsl
inc
jb
call
inc
jae
dec
jp
push
inc
gs
push
add
inc
inc
jb
jbe
pop
jp
cmp
out
jl
and
inc
mov
push
jp
jb
inc
inc
push
push
pop
xor
cmp
jbe
push
mov
ljmp
fs
inc
gs
push
push
mov
sub
pop
inc
jns
adc
sarl
inc
pusha
dec
outsl
out
push
push
mov
mov
pop
dec
imul
jno
push
jo
push
mov
rolb
inc
jae
rolb
fiadds
jbe
pop
addr16
push
xchg
mov
gs
inc
push
dec
pop
pushf
push
xor
jg
jg
push
jb
dec
dec
push
push
js
dec
imul
shl
std
rol
stc
stc
leave
stc
cld
rcr
jecxz
jmp
fcmove
into
lock
jecxz
sti
call
loope
out
fstp
aam
leave
fdivr
ret
shl
loopne
cmc
iret
cli
stc
hlt
ljmp
insb
sbb
cltd
mov
mov
decl
stos
mov
mov
xchg
movsl
addl
mov
mov
mov
pop
lock
mov
inc
jp
insb
inc
bound
dec
outsb
add
mov
popa
pusha
inc
jp
pop
jle
outsl
jg
cmp
stos
fbstp
jnp
jns
jne
subb
and
inc
fbstp
push
push
es
pop
jl
jne
decl
es
sbb
and
add
and
sbb
and
push
xor
or
or
and
or
mov
or
ss
adc
das
or
add
pushl
sub
and
or
adc
out
out
shl
ror
jmp
not
rcr
lret
cmc
call
in
fcmovnb
jmp
sar
in
enter
mov
in
call
shl
lret
icebp
int3
cli
sti
stc
mov
lods
mov
mov
popf
mov
mov
xchg
mov
mov
lods
stos
xchg
mov
add
incl
xorb
popf
lahf
mov
nop
mov
test
icebp
enter
out
sti
in
sar
clc
shr
iret
in
fmul
into
out
repnz
hlt
aad
shl
jecxz
ror
shl
in
push
cld
shr
jecxz
in
inc
lret
std
lock
dec
movsl
test
xchg
test
orb
pushf
mov
cmpsb
mov
aam
cltd
mov
nop
mov
jmp
mov
test
xchg
adcl
mov
cmp
push
jne
lret
arpl
pop
data16
jp
adc
icebp
pop
arpl
pop
inc
sahf
push
std
out
push
jno
imul
push
dec
bound
inc
je
jg
addr16
pop
pusha
popa
pop
pop
js
ret
pushl
and
jnp
dec
or
aaa
push
push
or
adc
cmp
cmp
call
push
or
xor
or
adc
xor
xor
es
ljmp
push
ds
sbb
aas
sbb
sbb
in
das
clc
call
ror
out
iret
enter
iret
ret
fst
stc
in
loopne
call
lcall
in
iret
aad
clc
ffreep
repz
hlt
sti
aad
aad
outsl
clc
mov
fs
in
cli
movsb
xorl
cld
jg
jmp
scas
cmpl
adcl
scas
das
cli
call
clc
xchg
mov
mov
mov
fwait
cmpsb
pop
nop
mov
mov
inc
ljmp
mov
add
pop
add
jg
mov
adc
and
jo
push
inc
dec
sbb
add
push
adc
pop
lahf
call
and
jbe
pop
adc
dec
aaa
and
add
add
pop
sub
cld
cmp
or
and
add
aaa
pop
sub
adc
cmp
cli
jg
add
pop
adc
push
and
sub
das
adcb
add
cmp
add
clc
ja
cli
cmp
push
adc
pop
aaa
adc
sbb
sbb
ret
incl
xchg
cmp
cmp
aas
cs
pop
sub
cmp
imul
sub
jbe
cmp
push
cmp
sub
and
insb
sub
lock
ljmp
daa
cmp
dec
pop
sub
push
sub
sub
cmp
insb
cmp
cld
mov
sub
cmp
insl
adc
add
or
or
jmp
xor
pop
es
add
and
ud0
push
xor
jp
test
and
dec
inc
adc
ja
add
inc
and
pushl
push
or
xor
js
xor
aas
push
adc
scas
rorb
add
adc
add
xor
cmp
sub
loope
outsl
mov
push
xor
push
mov
or
out
push
aas
adc
and
inc
push
jle
stos
fwait
and
and
scas
ds
add
aas
add
ljmp
xor
sbb
aas
inc
pop
daa
sbb
das
daa
ljmp
outsl
out
pop
sbb
adc
pop
and
pop
inc
pop
cmp
sub
xor
decl
into
daa
sbb
add
push
inc
jbe
or
adc
and
add
cmp
push
sub
sbb
shll
sub
adc
sub
xor
mov
and
push
xor
or
verr
sub
or
or
push
ss
pop
ss
ljmp
call
adc
push
sbb
adc
sub
adc
add
and
or
inc
movsb
sbb
idiv
mov
ffreep
or
cmp
push
xor
sub
sbb
imul
pop
push
dec
push
icebp
and
pop
adc
adc
or
cmp
sub
add
ss
push
das
pop
pop
and
and
add
add
notb
sbb
or
and
aaa
sbb
or
adc
inc
ss
int
loop
and
add
sub
xchg
sbb
xor
incl
push
cmp
and
or
outsb
sbb
jg
mov
jp
push
jns
xchg
clc
jb
aaa
and
and
add
or
adc
sbb
sbb
and
sbb
decl
xor
or
and
dec
and
xor
sbb
decl
pop
add
and
cmp
add
add
and
cmp
push
cmp
add
sub
inc
sub
push
test
mov
cmp
push
add
xor
push
add
push
sub
pop
cmp
xor
pop
mov
add
sbb
sub
xor
call
xor
cmp
and
and
push
pop
or
dec
jbe
pop
or
and
mov
out
sub
or
cmp
or
sbb
add
push
sbb
or
sbb
or
adc
fdiv
ljmp
cmpsb
push
adc
or
lcall
out
jb
adc
or
adc
xchg
sbb
mov
aas
push
xorb
imul
add
add
sbb
pop
pop
cmp
cmp
add
idivb
sbb
adc
and
adc
sub
and
xor
sub
and
xor
inc
andb
xor
add
xor
and
mov
sbb
jmp
push
pop
sbb
sub
sbb
adc
pop
es
ss
aaa
add
adc
aaa
add
pop
sbb
or
cmp
test
cmc
add
sub
lods
jl
test
jle
inc
jo
and
notb
push
and
outsl
ljmp
sub
pop
addr16
xor
add
jle
scas
sub
and
je
or
clc
adc
aad
incl
xor
adc
add
xor
push
xchg
sbb
xor
mov
cltd
loope
mov
mov
in
cmp
das
or
or
and
and
dec
xor
ljmp
xorl
sbb
and
pop
add
sub
sbb
loopne
iret
pop
and
xor
add
add
inc
sysenter
push
sub
or
pushl
sub
xor
adc
pop
add
aas
push
pop
cmp
data16
es
push
and
pop
jg
pop
jp
cmp
out
and
inc
jns
pushl
add
insb
xor
push
add
add
adc
add
mov
test
and
je
push
and
repnz
xor
mov
jo,pn
js
sub
add
add
jg
and
es
or
or
mov
xchg
std
jmp
lods
add
sub
push
movaps
xor
data16
mov
adc
sub
sub
sub
add
sar
outsb
or
or
cmp
cmp
icebp
jg
outsb
sub
sbb
adc
adc
sub
notb
push
sub
pop
xor
add
push
cmc
call
es
sbb
and
sub
pop
add
push
xor
inc
es
mov
and
push
mov
cmpl
sbb
sub
inc
add
sbb
cmp
add
or
ljmp
leave
and
push
mov
js
insb
popa
sub
cmp
sti
mov
cwtl
jae
leave
push
push
daa
sub
cmc
imul
daa
jo
call
incl
loope
dec
dec
xor
and
sub
jmp
lcall
cmp
fldenv
sbb
sub
inc
adc
sbb
call
and
out
fistpll
inc
cmp
ljmp
stc
inc
addr16
and
testb
sti
jg
sub
arpl
push
jl
or
jp
int3
inc
adc
ficoml
ret
jmp
or
enter
sub
dec
xor
mov
jb
add
mov
into
lret
mov
jmp
pop
add
cmp
ja
js
cld
dec
dec
push
pop
inc
sbb
insb
sub
add
push
cmp
arpl
or
dec
and
push
inc
and
pop
cmc
mov
insb
out
push
and
and
leave
jnp
and
pop
ljmp
mov
inc
push
or
push
or
aam
pop
das
mov
jnp
push
cmp
push
out
addr16
and
dec
push
ret
data16
call
cmp
push
pop
insb
jb
cld
push
inc
aas
ds
fs
je
or
pop
jbe
decl
js
sub
cmp
pop
out
inc
adc
cmp
pop
sub
and
je
adc
push
lock
decl
sub
cwtl
in
push
lods
lret
insl
popa
ss
es
inc
arpl
in
pop
in
sbb
imul
fucomp
fs
and
je
divb
add
stc
gs
xor
and
js
and
and
xor
pop
sbb
add
call
dec
pop
xor
sub
imull
sub
or
xchg
dec
js
add
insb
xchg
cli
outsl
pop
or
pop
jecxz
sub
ja
ret
je
or
cs
mov
inc
push
cmp
inc
mov
jnp
cmp
adc
jge
inc
jns
incl
pop
xor
pop
mov
adc
inc
xchg
outsb
push
and
aaa
inc
jg
hlt
fistpll
or
xor
cli
insb
push
ffreep
dec
push
and
lret
shl
push
jp
outsb
leave
enter
js
loope
pop
ljmp
adc
push
adc
inc
xor
dec
sbb
inc
push
sbb
and
stc
jo
aaa
and
pop
xor
ljmp
divb
sub
adc
negl
or
cmc
jo
cmp
call
mov
dec
push
add
push
mov
cs
push
dec
push
add
jg
fdivp
dec
pop
pop
pop
loop
int
dec
mov
inc
dec
jbe
jle
test
push
jbe
inc
pusha
push
jo
bound
pop
jle
cmpsb
and
jo
sbb
push
sbb
es
and
loop
sub
sub
std
mov
ret
imul
int3
fsubrs
cli
mov
in
icebp
out
icebp
addr16
and
sub
test
inc
push
dec
das
nop
hlt
ljmp
dec
aaa
add
sub
mov
jne
sbb
mov
mov
into
adc
add
es
mov
xor
pop
ss
rcrb
mov
out
jns
or
push
es
cmp
mov
pop
xor
sbb
fildll
add
das
adc
add
aam
adc
sub
and
cli
ljmp
adc
cmp
pcmpeqd
cmp
xor
sbb
and
jge
pop
sub
add
xor
add
sub
or
add
popa
add
sbb
clc
decl
pop
sbb
and
adc
sub
sbb
rcrb
fisubs
or
mov
sub
push
xor
movups
and
jg
ss
ss
das
and
or
add
mov
add
add
push
xor
inc
dec
mov
daa
dec
pop
dec
mov
ss
jle
movsl
out
xchg
idiv
xor
outsl
jle
dec
pop
jnp
icebp
xor
dec
pop
cmpsb
cmp
rolb
or
decl
sbb
or
jbe
sbb
pop
push
add
adc
mov
sub
cmp
aaa
sidtl
sub
dec
inc
cmp
mov
inc
xor
sub
or
unpcklps
sub
and
add
cld
add
xor
cmp
add
clc
xchg
rorb
sar
roll
subb
cmp
or
add
adc
cmp
or
and
sub
push
or
or
decb
pop
sbb
xor
and
add
shl
cmp
sbb
push
das
and
lahf
dec
sub
push
push
and
push
pushf
dec
jbe
pop
pop
push
add
adc
add
push
sbb
das
clc
or
or
add
adc
sbb
sub
sbb
pop
mov
xlat
jbe
test
jae
adc
lock
xor
pop
dec
ds
sub
add
push
pop
loopne
cld
lahf
dec
dec
or
cs
imul
jnp
out
and
add
and
cmp
and
aas
inc
pop
inc
mov
lods
xor
jle
push
sar
push
sub
das
and
add
pop
jg
stos
sbb
sub
dec
js
cmp
cmp
jmp
cmp
sbb
xor
sbb
pop
mov
sbb
xor
sbb
ljmp
xchg
cmp
pop
cmp
sub
push
inc
push
xor
jp
repz
incl
das
sub
add
sub
cmp
push
aas
sub
dec
or
add
aaa
iret
call
cmp
adc
aaa
lret
add
add
sub
int
andb
add
fs
cmp
das
push
add
popa
adcb
rcll
test
lea
xchg
jle
decl
dec
js
jo
jl
outsb
pop
sub
inc
cmp
pop
ljmp
cmc
mov
dec
cmp
mov
enter
jo
jp
repnz
fs
push
dec
decl
mov
insb
pop
je
jno
push
adc
jp
push
ja
outsl
push
ss
stos
mov
and
push
cmp
insl
push
adc
mov
xor
cmp
jae
inc
inc
push
adc
bound
xchg
fwait
shl
pop
out
sbb
idivl
adc
out
or
mov
hlt
mov
popa
mov
popa
pop
test
ja
push
inc
inc
dec
jne
pop
ljmp
cli
in
pop
daa
inc
mov
pop
jno
sarb
lcall
inc
outsl
jg
inc
nop
lcall
dec
push
hlt
addr16
push
call
push
cli
sub
dec
nop
ss
xchg
and
dec
sbb
or
insb
je
mov
jmp
inc
data16
jns
in
pop
jo
rclb
jbe
jbe
jb
rorl
inc
pop
dec
or
inc
je
incl
loopne
add
mov
jp
pop
adc
outsl
xor
cmp
in
push
and
mov
ret
push
stc
push
pop
out
pusha
add
inc
inc
xor
orb
xor
call
sub
add
das
fisubl
xor
mov
cmp
and
decl
loopne
pop
cmp
and
sbb
bound
jg
int
add
or
pop
cmp
or
push
add
das
pop
data16
sbb
int
adc
inc
sbb
mov
or
jmp
sub
adc
jbe
out
into
adc
xchg
into
ret
in
jg
jge
push
cmp
add
pop
push
sbb
or
adc
or
das
xor
mov
je
sub
xchg
incl
jae
je
dec
and
push
jmp
pop
roll
or
test
outsb
stos
shrl
insl
loop
in
repz
xor
mov
es
mov
mov
dec
cld
dec
push
inc
arpl
push
push
dec
mov
xor
mov
lea
dec
cltd
inc
jns
pop
jge
sub
pop
jnp
add
pop
inc
xchg
clc
inc
ds
pop
dec
int
push
dec
stos
add
push
and
in
inc
push
outsb
jge
mov
daa
je
out
jb
out
outsb
push
cmp
dec
mov
inc
mov
sub
call
jle
cmpsb
push
inc
mov
inc
call
dec
test
js
fidivs
cmpsb
pusha
pop
ss
dec
pusha
adc
test
shlb
sub
cld
mov
cltd
imul
mov
push
xchg
fldcw
mov
mov
movsb
or
out
jae
xchg
outsb
repnz
test
mov
das
inc
mov
add
stc
pop
je
inc
push
dec
popa
in
cmp
mov
dec
add
pop
xor
pop
mov
fs
out
mov
out
add
scas
fstpt
lods
inc
in
mov
int3
outsl
fcomps
mov
divb
lea
xchg
jg
push
sub
pop
dec
icebp
lock
sbb
in
nop
incl
jge
int
outsb
pop
js
jno
pusha
jle
addr16
jle
mulb
push
push
or
cli
testb
inc
xchg
mov
outsl
pop
arpl
mov
pop
and
out
cld
retw
cmpsb
add
mov
cmp
gs
pop
sub
bts
pop
psadbw
out
sbb
daa
lcall
mov
cmpsb
notb
aaa
mov
inc
data16
xor
inc
cmp
imul
addb
out
popf
xchg
and
mov
pusha
ja
mov
cld
xchg
js
dec
pop
cwtl
test
mov
sbb
push
pop
stos
inc
out
push
jecxz
int
dec
fwait
jno
or
dec
js
repz
add
mov
mov
dec
popw
popf
cld
das
xchg
push
js
sbb
hlt
mov
decb
pushf
push
dec
cs
inc
add
cmpsl
repnz
sbb
repnz
stos
fiadds
ja
mov
int
sarl
shll
stc
push
push
inc
dec
popa
lcall
fwait
jbe
subb
mov
add
fs
mov
shll
fs
mov
inc
push
sub
aas
mov
mov
fstps
lret
dec
jb
insb
jae
mov
xor
mov
fs
cmp
jne
or
push
imulb
dec
fistpll
sbb
mov
imul
xchg
out
xor
lahf
jmp
jno
dec
test
cld
fwait
fwait
jmp
pop
insb
push
jns
outsl
addr16
sub
pop
lret
out
xchg
push
inc
out
pop
push
xor
push
bound
add
mov
jne
pop
pop
xchg
lcall
and
pop
push
pop
out
adc
xor
add
mov
int
getsec
arpl
std
mov
int
outsl
loopne
jno
data16
pop
imul
mov
inc
push
insb
lahf
xchg
out
mov
ljmp
mov
aad
jnp
mov
mov
add
adcl
ret
add
cltd
fcomip
xor
jmp
pop
fiaddl
out
mov
rclb
fists
jp
add
divl
inc
adcl
push
arpl
test
mul
inc
inc
lds
hlt
push
push
push
lods
xor
jle
into
inc
inc
add
shlb
jo
ret
lods
loope
jno
loopne
dec
outsl
jbe
mov
pop
dec
jecxz
push
lds
pop
loop
dec
add
outsl
pop
lret
clc
fcomip
jnp
xchg
mov
inc
dec
inc
in
mov
rorb
fld
cmp
stos
nop
loope
inc
mov
lcall
push
iret
push
push
ljmp
jb
loop
jbe
idivb
adc
jno
enter
mov
add
dec
push
aam
jne
aam
rcl
fdiv
mov
jg
inc
inc
push
enter
shr
xlat
out
or
sub
pop
std
inc
sbbl
add
test
andb
pop
push
mov
pop
xchg
xor
mov
pop
inc
inc
daa
dec
adc
notl
xor
push
cmp
cmp
jbe
out
scas
xchg
push
mov
jno
ret
pop
test
dec
mov
out
nop
add
out
lahf
repz
push
fisubs
ror
xchg
xchg
out
sub
jnp
jmp
pop
je
xchg
push
mov
and
push
push
fmuls
std
test
ja
cltd
imul
lret
fistps
pop
xor
out
dec
push
rcll
es
mul
pop
out
cld
adc
test
dec
popf
xchg
mov
ljmp
pop
xor
xor
icebp
gs
dec
fildl
out
pop
push
mov
sbb
in
ja
out
fcomps
dec
cmpsb
mov
cmpsb
mov
or
push
jo
test
mov
inc
fldl
sub
jns
add
test
push
cs
mov
jle
jp
mov
sub
es
inc
and
xor
xchg
mov
stc
scas
ljmp
xchg
clc
dec
jge
ret
je
mov
add
ficomps
push
outsl
sahf
jb
popa
das
and
out
add
mov
xchg
and
jmp
adc
or
xchg
out
add
mov
mov
bound
xchg
jp
fidivl
stos
mull
scas
addb
imul
dec
cmp
movsb
scas
test
xchg
add
cmp
dec
mov
shlb
inc
rorb
out
lea
subl
fimuls
jp
mov
shrb
bound
cmc
xor
testl
xor
test
rorl
lahf
mov
lahf
cltd
out
test
jae
mov
test
hlt
add
xlat
mov
cmc
cmp
in
push
add
out
nop
mov
xchg
lret
jle
mov
out
xchg
mov
out
jb
dec
mov
jno
pop
daa
daa
xchg
push
fwait
cwtl
test
lcall
jo
xor
inc
dec
mov
popf
out
adc
pop
push
test
mov
mov
movsl
out
mov
and
cltd
test
iret
inc
pop
mov
dec
int
gs
inc
xlat
jge
aad
or
aam
inc
dec
jp
mov
and
idivb
push
sub
and
fs
and
jo
adc
iret
aaa
fimuls
add
jae
ficoml
scas
inc
sahf
imul
jecxz
dec
mov
aaa
call
push
ja
pop
push
mov
mov
fs
or
jae
ss
andb
and
xchg
dec
dec
repz
aad
iret
sub
xchg
das
jg
out
inc
out
xor
sbb
fwait
testl
lock
icebp
adc
pop
adcb
divb
jne
out
jae
inc
pop
xchg
mov
jno
mov
xchg
push
hlt
and
cmp
inc
shl
jle
sbb
iret
inc
pop
subl
pop
scas
aas
xchg
sbb
insb
pushf
inc
out
lods
cld
in
orl
inc
fisubrs
cmp
dec
sbb
in
les
imul
pop
push
pop
push
lcall
push
ja
je
out
int
jno
sub
xchg
scas
mov
push
dec
aas
mov
out
xchg
das
cmp
aaa
sub
inc
movsb
daa
test
mov
xor
rcrb
cmp
cmp
cmp
xchg
iret
aaa
test
outsl
dec
pop
mov
push
inc
push
stc
scas
push
lcall
push
sub
stc
jo
imul
cmp
jae
mov
in
je
sti
jo
mov
popa
imul
sub
or
jne
scas
cmpsl
int
pop
cmpsb
fisttps
mov
mov
mov
out
pop
xlat
mov
sahf
aas
mov
inc
dec
pop
mov
aas
imul
jl
jb
sahf
inc
repnz
je
jns
mov
out
popf
inc
push
push
js
out
jno
mov
and
dec
je
push
jb
lcall
pusha
and
and
cmp
call
jae
push
fadds
loop
in
nop
addl
enter
dec
ljmp
idivb
dec
rorl
popf
or
mov
bnd
cli
push
neg
je
dec
scas
out
out
and
inc
push
out
fcmove
dec
inc
cmc
insb
pusha
jg
and
dec
inc
cmpsb
mov
mov
mov
dec
out
fnsave
dec
push
stos
int3
dec
dec
imul
pop
or
out
jno
xor
test
cmpsb
xchg
pop
fisttpll
ljmp
rcrb
cmp
inc
movsl
push
xor
mov
out
or
mov
imull
or
adc
mov
inc
xor
aam
sbb
addr16
jns
jnp
mov
dec
lods
testl
jo
mov
lret
cmp
pop
push
leave
mov
jl
test
enter
aam
insb
call
loopne
inc
push
mov
pusha
inc
push
loope
negb
dec
ret
jbe
mov
or
mov
fistpll
out
aad
inc
test
push
jl
int3
lret
out
dec
lcall
mov
je
xchg
imull
into
cltd
loope
maxps
inc
jo
pop
inc
negb
je
pop
pusha
mov
leave
arpl
pop
lret
push
sub
pop
subl
fists
fs
test
cwtl
or
sar
jne
ret
mul
es
lea
or
sub
fldcw
mov
loope
mov
int
call
in
stc
imul
jo
pop
leave
mov
pusha
push
sahf
jg
adc
pop
sarb
stos
or
popa
inc
mov
pop
mov
je
addr16
fildl
sbb
cltd
out
pop
jl
ss
testb
cmc
ljmp
push
dec
push
movsb
in
mov
out
mov
clc
add
jl
cld
dec
jge
mov
fbld
outsl
notb
loopne
inc
mov
clc
dec
pop
insb
lahf
call
lret
xor
aad
xchg
mov
inc
jne
lcall
lcall
mull
test
out
cmp
push
into
das
rcl
dec
pushf
cmpsl
pop
insl
adc
cmpsl
not
iret
lret
addr16
loope
and
xchg
int3
outsb
fadds
dec
xchg
fwait
mov
loop
enter
fcmovnu
cmp
in
push
jl
out
pusha
test
pop
ret
jne
sub
add
push
into
jo
mov
mov
jb
gs
push
repnz
cld
pop
addr16
adc
xchg
push
imul
sbb
testb
jecxz
das
loopne
jno
push
gs
ret
mul
testl
test
lock
push
into
pushl
push
jae
stc
pop
out
jo
add
lahf
add
mov
xlat
inc
pop
outsl
test
jb
incb
dec
jge
pop
dec
pop
sahf
loop
les
pop
into
scas
adc
dec
xlat
mull
out
cmp
add
xor
inc
push
xchg
outsl
out
pop
clc
or
inc
addr16
jne
push
repnz
inc
pop
cmc
idivl
xchg
push
shrb
jg
leave
jae
pusha
mov
inc
inc
stos
call
jb
inc
fdivs
jp
fwait
out
imul
push
sahf
addb
data16
dec
gs
stc
mov
out
xor
inc
dec
inc
rclb
adc
lods
cld
loope
outsl
dec
divb
imul
sub
les
jmp
enter
jecxz
fldenv
sbb
mov
mov
call
xchg
inc
outsb
adc
xlat
gs
or
shl
jbe
fs
jbe
pop
pop
xchg
sbb
scas
arpl
pop
pop
jp
or
jmp
dec
pop
mov
push
repz
dec
idivb
les
pop
call
out
ljmp
mov
es
cmc
loopne
into
sub
jnp
bound
loopne
jmp
xor
fsubrp
ret
xor
jp
outsb
cmp
cmc
and
sbb
ds
addb
jecxz
push
jb
lcall
mov
add
dec
lret
fldenv
iret
inc
mov
scas
subb
ret
mov
dec
push
loop
jecxz
stc
imul
jmp
sbb
and
jbe
fdivrs
sub
jno
cmp
aad
push
cmpsl
inc
incl
jle
cmp
inc
inc
add
inc
ficomps
pop
mov
push
add
mov
scas
cmc
mov
pop
jp
mov
inc
dec
push
ja
mov
push
mov
icebp
andb
mov
jmp
pop
push
cmpb
mov
push
mov
ja
das
mov
pop
movsb
outsl
dec
add
dec
cmp
cld
ljmp
jbe
mov
out
push
insl
mov
dec
insl
push
nop
xchg
jecxz
fbld
insl
dec
pop
xchg
dec
mov
ljmp
lods
outsb
inc
add
push
mov
dec
lret
cmpsl
insb
js
ja
fisubs
inc
mov
xchg
jb
orb
xchg
insb
out
ljmp
and
push
mov
push
ljmp
inc
test
add
mov
nop
jnp
or
lods
mov
movsl
ljmp
inc
pop
push
movsb
pop
dec
sbb
jo
sbb
dec
dec
call
mov
push
out
subb
test
lods
mov
lahf
movsl
ss
fidivl
inc
lahf
cs
test
insl
xchg
jmp
fildll
sub
cmp
out
test
into
mov
fbstp
stc
testl
sub
sbb
adc
or
int
mov
jb
adc
inc
adc
sub
cmp
pushl
pop
or
adc
xor
dec
and
push
and
or
adc
or
pushl
inc
aaa
aas
ss
xor
sbb
sbb
and
push
push
es
cld
jg
and
jp
cmp
cmp
aas
out
cli
fildll
ds
xor
sbb
or
add
add
adc
and
lcall
add
cmp
and
mov
call
sub
xor
das
sbb
cmp
and
add
pop
jbe
adc
sub
int
ds
or
adc
sbb
xor
sub
cmp
and
dec
add
lcall
and
xor
sub
sbb
ds
push
cmp
adc
ss
add
sub
cmp
call
mov
cmp
xor
sub
and
xor
sub
clc
or
imul
cmp
xor
sub
sub
and
jg
stos
das
sub
das
or
mov
and
jnp
add
cmp
call
sbb
add
jb
outsl
or
xor
adc
sub
and
cmp
call
and
aaa
push
dec
fiadds
sbb
adc
sbb
add
sub
xor
xor
out
inc
or
cmp
sub
adc
adc
outsb
fwait
lcall
sbb
insb
or
ss
sbb
aas
lret
add
and
add
cmp
or
inc
push
xor
or
add
adc
pop
fldt
loop
sub
jg
fs
xor
and
sub
cmp
cmp
inc
cmpsb
dec
cmp
call
pop
sub
sbb
sbb
cmp
push
add
cmp
inc
mov
jb
adc
adc
test
cmp
and
and
xor
aas
fistl
fidivrl
pop
or
add
sbb
sbb
pop
sbb
adc
sbb
aam
ds
xor
and
inc
cmpsb
ja
cmc
popa
clc
ljmp
xor
and
and
or
and
add
mov
mov
shll
sbb
add
push
add
dec
aaa
or
pop
xchg
loopne
add
jp
push
scas
cmp
xchg
addb
std
mov
inc
and
xor
inc
xor
dec
cmp
add
or
cmp
loopne
ja
insb
dec
add
and
sub
daa
ss
sub
icebp
mov
push
jbe
push
adc
add
aas
notb
dec
sbb
adc
xor
adc
dec
inc
add
pop
or
addb
push
jne
or
sbb
dec
cwtl
jae
inc
ja
pop
mov
and
pop
or
outsl
clc
inc
add
and
sub
fwait
pop
add
sbb
add
and
gs
xor
adc
pop
and
and
and
pushl
pusha
ds
jno
jbe,pn
sub
or
jmp
add
and
and
or
push
xor
ds
push
out
inc
push
adc
pop
and
add
sbb
cmp
push
and
inc
sub
jp
movl
and
das
cmp
and
cli
add
pop
cmp
sbb
or
inc
pushf
das
cmp
jns
sub
mov
sar
in
pop
and
dec
sub
sub
out
add
xor
push
lret
or
and
jmp
inc
lret
data16
sbb
and
lock
incl
mov
cvtpi2ps
sbb
xor
xor
and
test
jp
add
jno
imul
cmp
clc
fistpl
es
sub
and
fwait
cs
and
add
sub
cmp
push
sub
sub
sub
dec
sbb
sbb
sub
insl
sub
jl
aas
push
sub
stos
fistpll
insl
push
imul
push
xor
jo
lods
push
pop
sub
pop
push
add
add
cmp
push
ret
outsb
cs
cmp
jl
das
or
and
popa
sub
and
add
aas
cmp
or
das
aaa
and
in
in
sub
and
jno
cmp
jb
inc
cmp
push
push
xor
lock
fidivs
add
xor
negl
jbe
add
jle
icebp
dec
imul
xor
sub
loope
lcall
adc
aas
or
or
xor
or
sub
xchg
and
and
int
sbb
or
cld
or
aad
push
sub
sbb
and
add
sbb
or
adc
add
push
sub
dec
cli
inc
and
jo
mov
and
xor
call
lds
in
lods
sbb
cld
lret
mov
cmp
jae
je
add
xor
xchg
push
push
jb
mov
sub
pop
mov
mov
xchg
inc
sub
jo
xlat
jg
adc
pop
push
sbb
mov
or
sub
or
js
xor
and
sysexit
add
sub
lret
push
adc
test
mov
sub
add
or
jb
cmp
push
out
sub
nop
idivl
sbb
inc
xlat
aaa
fisubrs
jo
out
into
daa
clc
lcall
inc
and
sub
sub
push
inc
sub
xor
das
jp
shrb
jp
sbb
or
jae
aad
add
sub
outsl
add
or
ds
add
xor
adc
ja
cmp
sbb
in
fidivl
pusha
mov
movsb
jbe
mov
mov
xchg
push
scas
pop
jno
and
cmp
sub
inc
mov
inc
adc
lret
inc
pop
inc
test
call
scas
jnp
mov
fwait
hlt
rclb
jg
jns
adc
das
add
pushl
push
arpl
push
push
out
dec
dec
push
les
out
movsb
mov
push
lret
lretw
push
push
or
inc
jl
jmp
adc
sbb
or
or
clc
mov
iret
repz
sbb
clc
movd
arpl
cmp
rep
dec
dec
jne
iret
repz
inc
imul
outsl
or
cmp
dec
fs
jp
int
sahf
jge
imul
rcll
jle
dec
imul
sahf
out
pop
out
dec
imul
jns
out
sbb
ja
out
sahf
adc
dec
jns
out
xor
dec
cs
sahf
out
add
sahf
out
sahf
and
jae
jp
sahf
out
leave
outsb
out
aad
jns
out
jecxz
pusha
sahf
out
sahf
out
addr16
dec
repz
out
jecxz
std
pop
sahf
sahf
jg
out
mov
jb
js
mov
outsb
push
mov
jb
test
inc
ja
push
insl
add
pop
jo
xor
and
dec
in
add
push
mov
or
ret
data16
adc
mov
outsl
addr16
mov
xchg
cmpsl
pop
punpckldq
shl
movsb
outsl
pop
mov
pop
sbbl
aaa
je
add
in
push
mov
pop
mov
dec
inc
and
dec
mov
mov
scas
das
cmc
inc
push
sbbl
cmp
dec
mov
push
dec
test
test
or
jae
pop
cltd
les
mov
arpl
out
jp
out
push
js
outsl
mov
and
jp
in
inc
repz
jp
shlb
stos
aas
cld
repz
push
push
aad
dec
pop
pop
fisubrs
dec
jnp
pop
cld
repz
bound
lds
dec
xchg
lret
outsl
enter
insb
lock
aas
sub
jae
insl
xor
addr16
in
sarl
push
imulb
xchg
dec
stc
cmpsl
stc
cld
pop
loope
ja
jns
sbb
dec
sub
repz
repz
repz
xchg
loope
mov
lds
xchg
hlt
imul
pop
mov
stc
dec
pop
lods
mov
jno
xchg
icebp
imul
pop
inc
mov
dec
js
out
push
jl
sti
in
inc
addr16
pop
fdivp
cld
int3
out
loop
dec
out
shr
jnp
adc
or
imul
cmp
aaa
fwait
lret
push
hlt
jb
sbb
outsb
push
ss
mov
fidivrs
pop
sbb
out
pusha
pop
sti
push
clc
dec
dec
jae
dec
cmc
call
lret
insb
addr16
jb
jne
dec
test
push
scas
std
arpl
sub
decl
push
inc
leave
inc
cmpsb
int
pop
mov
lcall
popf
jo
es
test
xchg
retw
fstpt
push
pop
jg
jbe
jne
inc
inc
push
pop
inc
sar
add
jg
push
jge
push
push
pop
dec
push
dec
push
push
fs
inc
imul
loop
gs
ret
insb
jp
pop
inc
adc
jns
je
push
xlat
and
ljmp
and
cmp
bndstx
xor
sbb
add
mov
sbb
in
lcall
unpcklps
adc
push
push
cmp
and
add
add
xor
ud0
pop
mov
data16
inc
sub
stos
push
bound
inc
inc
push
jg
aad
call
inc
dec
imul
jo
jns
adcb
push
outsb
push
addr16
call
and
and
sub
sbb
sbb
push
add
adc
sbb
add
movaps
sub
adc
push
cmp
cmp
or
lcall
or
xor
mov
mov
jp
dec
leave
jb
or
or
inc
hlt
fwait
mov
cld
repz
mov
daa
call
lods
int3
je
lret
stos
shlb
xchg
in
and
scas
loop
scas
jmp
in
or
mov
push
lea
js
jmp
repnz
stc
in
mov
daa
loop
cmp
insb
jno
sahf
aas
mov
pop
lods
and
icebp
cltd
test
movsl
mov
in
mov
idivb
dec
addr16
imul
dec
dec
outsb
mov
ja
add
jg
adc
push
inc
pop
inc
insl
je
pop
je
xor
sarb
cld
or
adc
ja
inc
sub
add
cld
push
push
pop
adc
inc
xchg
int
jo
mov
push
rorl
jnp,pt
mov
ds
cwtl
insl
pop
xor
les
das
dec
fadd
or
iret
repz
pop
imulb
adc
fwait
iret
repz
movsb
mov
cmp
insb
sub
push
jns
sbb
iret
repz
ds
jp
fwait
int
repz
or
dec
pop
xor
and
daa
or
test
mov
mov
ljmp
int3
mov
das
push
sbb
aas
xor
push
pop
sub
stc
int
incl
and
push
adc
add
in
popl
insb
rcrb
jg
jnp
xor
add
sbb
sub
adc
sbb
sub
push
sbb
fwait
idiv
lcall
jns
and
and
or
or
xor
and
mov
out
pop
pop
push
add
ss
sbb
cs
push
jl
or
jl
addb
or
cmp
mov
cmovae
inc
pusha
push
jae
gs
negb
je
pop
cmp
adc
add
addr16
sbb
cmp
ds
ds
sub
decl
xor
sbb
push
bound
adc
sbb
dec
and
adc
add
incl
testl
add
pop
or
decb
adc
mov
sbb
xor
add
jae
pushl
lock
enter
add
push
and
ljmp
jp
xor
cmp
add
cmp
xor
xor
add
pop
popa
fimull
or
jnp
sub
adc
adc
add
ss
sbb
sbb
add
or
and
aas
xor
testl
pop
and
xor
comiss
or
adc
addr16
inc
add
decb
or
xor
xor
pop
add
mov
cld
or
incl
dec
inc
sub
cmp
adc
xor
jp
xor
pop
add
xor
mov
xchg
in
and
pop
adc
call
pop
or
add
adc
sbb
aas
out
arpl
push
jge
xor
aas
sub
push
and
clc
or
cmp
push
add
fistl
daa
and
jne
sub
cs
cmp
push
jnp
inc
dec
or
inc
mov
push
fiadds
es
add
xor
push
mov
and
push
into
jb
add
xor
push
daa
xor
incl
and
inc
jp
push
push
adc
adc
sbbb
add
and
cmp
cs
sub
outsb
jo
sbb
adc
cmp
or
push
jp
sub
pushl
leave
inc
jb
pop
jno
cmp
and
and
xor
sbb
xor
jb
or
and
aaa
es
sbb
out
adc
sub
xor
aaa
add
in
push
cmc
mov
jle
sub
js
cmp
sbb
xor
pop
add
sub
add
sub
loopne
jl
cmp
adc
pop
and
sbb
push
out
inc
dec
sbb
and
sbb
pop
mov
lret
add
pop
decl
adc
sub
and
xor
and
sbb
adc
pop
or
out
jp
adc
jmp
inc
jle
and
add
sub
sbb
es
push
mov
pop
das
jg
or
sbb
das
sub
aas
rolb
fs
xor
cmp
and
mov
add
add
inc
lods
hlt
hlt
or
pop
mov
lea
xor
and
xor
adc
push
pop
mov
dec
and
aas
out
dec
dec
and
and
jmp
cmpsb
cs
daa
and
aas
cmp
or
and
shlb
stos
pop
std
dec
scas
imul
push
daa
or
push
out
xor
sub
jbe
out
aad
pop
jo
data16
int
sub
push
and
sub
add
aad
and
sub
adc
arpl
imul
pop
inc
push
dec
inc
hlt
push
pop
inc
and
xor
cmp
ja
in
pslld
or
filds
clc
xchg
lahf
cld
sbb
dec
cmp
jae
hlt
loopne
sbb
scas
cld
adc
push
fucomi
imul
nop
jae
push
add
decl
stos
jae
mov
clc
pop
dec
iret
clc
test
or
mov
stos
jno
pop
ljmp
cli
movl
fnstsw
fstl
shrl
nop
ljmp
int
inc
std
aaa
cmc
inc
mov
dec
adc
cltd
ss
mov
add
cmp
in
rclb
cmp
cmp
addl
cli
cmpsl
cmp
mov
mov
mov
and
lret
dec
gs
mov
xchg
fwait
shrd
mov
ljmp
add
mov
fucom
js
call
jp
sbb
adc
xor
pushl
lret
sbb
pushf
xor
pop
fwait
sub
stos
les
and
call
mov
lea
mov
sub
shrl
sub
mov
dec
loopne
cld
js
das
lods
dec
and
xchg
mov
mov
xchg
xchg
jp
push
bound
push
push
adc
cmpsl
pop
pop
push
int3
ret
test
pop
mov
mov
xchg
pushf
jno
loope
enter
jg
arpl
push
ret
bound
pop
sahf
aad
call
scas
movsl
jge
movsb
mov
push
mov
or
xchg
stos
sti
out
nop
fwait
jnp
mov
ljmp
into
lret
xor
loopne
paddusw
mov
dec
data16
inc
sbb
pop
push
call
and
test
cmp
fnstsw
push
mov
rcrl
roll
jno
push
dec
pushf
std
call
icebp
jo
pop
cli
out
mov
xor
sub
cmp
add
mov
lret
imul
xorb
das
pop
test
inc
js
mov
add
in
aad
cltd
orl
adc
pushf
lcall
mov
xor
sub
xchg
pop
jge
cmp
inc
scas
push
stos
or
rcr
mov
fwait
jg
and
enter
stc
imul
and
xor
cld
arpl
cs
inc
cmp
and
in
pop
out
stos
xchg
jmp
adc
jns
sbb
dec
pop
sub
adc
cltd
hlt
cmc
cmc
arpl
or
mov
mov
iret
inc
cld
mov
push
daa
ret
pop
or
cld
dec
fstps
jp
dec
pop
cmp
pop
xchg
mov
jl
jno
scas
dec
js
push
or
data16
inc
push
and
imul
push
sub
xor
cli
lcall
stc
pop
inc
js
inc
dec
and
daa
pop
adc
sub
push
push
sbb
mov
push
sbb
cmp
pop
pop
daa
sbb
sub
ss
xor
push
sub
push
aam
pop
push
or
dec
push
inc
push
jbe
cli
sub
adc
push
and
and
insl
jns
dec
pop
jp
sahf
push
add
sub
sbb
and
ljmp
jl
aas
sub
sub
adc
add
ljmp
lcall
inc
sub
arpl
sbb
and
push
imul
adc
or
nop/reserved
dec
call
jge
cmpsl
jb
and
or
adc
add
or
push
incl
clc
xor
pusha
jb
sahf
arpl
popa
push
add
push
incl
xor
push
adc
or
cvttps2pi
decl
xor
add
jne
cmp
sub
fisttps
jnp
xor
addr16
push
adc
push
bound
add
sub
sub
daa
push
cmp
cmp
or
cs
dec
arpl
pusha
outsl
dec
push
jp
or
xor
jg
aaa
sub
and
cmp
shlb
sub
xor
dec
inc
jl
cmp
push
ljmp
pop
cmp
sbb
and
inc
pusha
inc
je
pop
push
cmp
add
inc
jp
pop
cmp
and
xor
and
jns
or
add
add
adc
and
cmp
push
call
cld
test
xor
add
add
xor
incl
xor
sbb
and
aas
pop
xor
xor
ds
insb
cld
out
repnz
and
and
sub
aaa
add
pushl
jle
jge
push
aaa
nop
mov
xor
jl
gs
loop
lea
inc
mov
mov
bound
lahf
xor
add
xor
aaa
inc
stc
jne
jno
insb
cmpsl
decl
dec
imul
push
jl
inc
scas
dec
push
jp
outsb
or
pop
int
fimuls
push
dec
inc
inc
cmp
lcall
ja
dec
daa
data16
cld
jb
jp
jbe
jp
dec
and
pop
xchg
popa
dec
pop
mov
mov
stos
imul
add
enter
scas
pop
dec
add
into
inc
int3
inc
cmc
jbe
xor
and
insl
xchg
pusha
mov
inc
and
mov
jg
pusha
sub
js
jnp
dec
leave
adcl
sub
jb
gs
ljmp
fsubs
cli
jle
addr16
push
lcall
jg
adc
fcompl
jo
stos
mov
imul
scas
inc
mov
inc
arpl
pop
ret
inc
sub
bound
in
incl
lret
inc
push
push
dec
add
pop
jo
dec
jne
mov
mov
ljmp
xorl
pushf
adc
aam
adc
mov
popa
or
xor
push
jae
or
fistps
inc
out
inc
out
fsts
inc
fiadds
jo
dec
add
call
ljmp
dec
dec
outsb
aas
dec
fidivl
jle
jl
arpl
jg
jns
jle
dec
cmc
in
popa
call
push
sub
jp
lods
imul
mov
mov
jp
pop
jo
outsl
imul
mov
icebp
aaa
jp
jno
jnp
dec
faddl
jb
sub
rol
xchg
pop
mov
sub
pop
inc
push
outsb
inc
clc
inc
rcrb
inc
addr16
pop
push
es
inc
sbb
arpl
push
jge
je
js
ja
inc
push
jo
sar
cmp
lods
ja
pusha
clc
jle
ja
dec
xorb
dec
repnz
xchg
inc
push
dec
repz
jl
pop
jmp
dec
pop
jge
inc
push
arpl
jae
pusha
scas
insl
fmuls
ds
xor
pop
jp
fdivrs
jle
jns
dec
jge
outsl
ljmp
dec
je
push
jae
jo
pop
pop
imul
ss
jae
push
dec
jno
push
call
je
dec
scas
popfw
outsl
out
stos
arpl
jbe
lds
dec
xchg
inc
in
imul
je
dec
movl
jo
fs
pop
push
xchg
inc
mov
inc
stos
dec
sahf
push
lahf
jp
inc
jno
push
jge
scas
test
jl
jne
pop
jbe
inc
jbe,pn
push
push
jno
ljmp
jmp
jns
jae
dec
test
imul
jb
pop
inc
das
inc
cmp
push
sub
pushl
ja
dec
std
imul
rolb
fs
inc
mov
je
jg
and
jno
jbe
jno
inc
add
pop
inc
inc
pop
pop
jnp,pt
pushl
js
push
shlb
insl
mov
cmpl
mov
insb
push
bound
dec
cs
lcall
xor
push
sbb
push
in
jmp
dec
aad
shll
out
stos
dec
lcall
push
cmpb
movsb
dec
jle
js
push
push
push
pop
lock
xor
dec
roll
xchg
lea
clc
dec
jne
dec
jo
bound
jg
or
je
inc
pop
je
push
cmp
jp
jo
lcall
xchg
dec
xor
nop
jae
inc
pop
inc
sub
jo
push
mov
pop
inc
jb
jne
lcall
jno
dec
pop
push
jg
insb
shlb
inc
iret
fiadds
jg
jb
jae
cld
add
ja
into
inc
pop
pop
push
inc
sar
call
js
jnp
push
fbld
insb
movsl
jp
jnp
arpl
jns
pusha
cmp
sbb
lock
pushl
outsb
push
sbb
pop
fldenv
pop
fidivs
jge
jle
dec
lcall
inc
push
jne
jno
insb
out
out
dec
cmpsb
bound
inc
inc
dec
dec
mov
je
push
push
inc
pop
fs
inc
dec
aaa
push
rorl
cmc
pop
push
xchg
pusha
push
pushl
clc
jne
pop
je
jle,pt
dec
enter
jmp
clc
ljmp
jno
jnp
inc
mov
arpl
mov
dec
or
lds
jp
dec
cmp
jns
inc
jl
cmp
ljmp
sbb
push
js
jns
data16
jge
aad
ja
cmc
pop
jl
pop
ja
inc
pop
js
jge
push
mull
imul
sti
pop
sbb
jg
mov
jl
fs
out
inc
sti
push
arpl
ljmp
cmpsb
fisubs
pop
mov
inc
dec
push
inc
pop
je
jo
outsb
es
sbb
jecxz
pushl
pop
jns
inc
aaa
dec
adc
imul
push
outsl
dec
dec
inc
cmp
fisttps
sbb
dec
or
xlat
jae
jp
jbe
jns
dec
jns
ljmp
imul
jg
inc
jbe
fs
mov
xor
dec
adc
jp
pop
aam
xchg
dec
movb
gs
imul
stos
push
pop
ljmp
add
jb
jne
inc
jp
pop
addr16
je
dec
jg
push
les
and
sub
call
jg
data16
jp
inc
aad
cltd
popa
mov
sbbb
mov
mov
jnp
ja
mov
jg
jnp
data16
outsl
inc
push
push
adc
inc
cmp
pop
ljmp
inc
in
inc
lock
cli
inc
scas
dec
xchg
hlt
inc
in
imul
jg
push
std
push
xchg
jle
jo
push
cltd
jbe
xor
std
decl
test
popa
jl
jns
dec
push
dec
sbb
jl
pop
mov
dec
call
and
pop
inc
sub
jae
pusha
and
dec
mov
jae
jle
jl
arpl
jg
js
jg
dec
sub
push
or
push
icebp
je
ja
pop
xchg
outsl
pop
popa
inc
ja
mov
js
jne
insb
adcl
gs
iret
push
push
xchg
imul
jmp
ja
jnp
dec
addl
mov
dec
stc
fs
push
mov
movsb
inc
push
ja
dec
push
lock
pop
jle
outsl
ficoms
dec
insl
inc
jp
inc
lret
pop
push
jle
inc
mov
jne
inc
mov
push
pop
jno
addr16
jae
dec
lods
pop
add
loop
imul
mov
xchg
pushl
cld
pushl
push
dec
pop
xchg
inc
sahf
inc
push
jno
dec
jle
jg
insb
sbb
bound
mov
push
outsl
pop
jae
je
jae
inc
or
lret
inc
jmp
jp
add
in
inc
push
and
or
jp
arpl
fstl
jb
loop
mov
lahf
pusha
lods
imul
push
dec
mov
lcall
jp
lea
inc
inc
outsb
adc
jo
dec
cs
mov
mov
jns
jae
dec
inc
add
inc
repz
test
mov
dec
jl
shrb
loop
jmp
js
pushl
pop
lds
push
add
jge
data16
jle
dec
mov
jmp
mov
iret
jg
dec
je
dec
sub
jp
imul
cmpsb
neg
mov
inc
add
nop
ja
imul
mov
push
nop
sub
inc
pop
pop
inc
addr16
sub
jle
push
loope
int
lock
xorl
jnp
fstps
mov
push
pusha
jno
cmp
pop
cltd
ja
jge
jno
inc
mov
call
dec
stos
dec
andl
inc
sahf
dec
mov
imul
int
mov
dec
cli
int
addb
out
pop
out
jl
mov
bound
push
jo
les
jb
dec
pop
jno
push
dec
imul
mov
je
pop
call
incl
inc
sub
ja
dec
cmp
jns
push
pop
inc
add
or
in
ficomps
pushl
push
jbe
jno
jbe
inc
lock
lcall
out
jnp
push
add
jle
or
pop
insb
nop
jnp
ja
int3
push
cmpsl
mov
push
sbb
bound
push
mov
hlt
int
lock
stos
jns
adc
cld
fisttps
je
dec
xlat
inc
hlt
jo
fs
pop
stos
push
cltd
inc
test
inc
insl
dec
xor
push
jns
inc
sub
out
clc
jg
mov
mov
ja
inc
adc
push
std
ja
popa
jge
jbe
dec
iret
jecxz
pop
hlt
jne
outsb
dec
mov
dec
sbb
jp
pop
dec
jle
jae
aaa
inc
dec
dec
and
js
imul
xchg
adc
push
jne
ljmp
jbe
jno
call
pop
adc
pop
lcall
fdivrs
jns
push
popa
pusha
push
popa
divb
jnp
lcall
jns
sub
outsl
push
sub
pop
stc
arpl
pop
xorl
arpl
inc
jno
xor
decl
xlat
inc
mov
insl
add
or
sti
inc
into
dec
cmpsb
js
insb
adc
pop
sub
fcomip
decl
push
out
dec
les
pop
test
pusha
sahf
push
arpl
jl
jo
jg
cmp
jg
pop
xchg
outsb
xorb
adc
jle
gs
inc
outsl
jl
dec
enter
int
aad
ljmp
dec
dec
imul
jne
jns
push
adc
incl
cld
jne
jb
insb
loope
shll
jle
stos
mov
scas
clc
adc
jns
jp
insb
insl
and
je
mov
sar
pushl
outsb
dec
push
push
jb
dec
add
imul
insb
call
js
jae
cli
jg
mov
jb
outsl
into
dec
in
fbld
push
idivl
inc
xchg
dec
xchg
push
fbld
dec
dec
pop
inc
jbe
cmpsb
jbe
scas
inc
fwait
push
popa
or
clc
pop
loopne
sarb
jbe
mov
push
nop
jno
test
push
dec
clc
xchg
dec
lock
add
je
incl
popf
inc
mov
push
fcompl
inc
push
inc
xor
insl
cwtl
jb
popa
push
insl
jp
das
outsb
push
loopne
jg
dec
outsl
jge
bound
jle
jns
jle
dec
adc
icebp
mov
cmp
imul
loop
fbld
imul
call
ljmp
push
xchg
push
sub
fisttpll
inc
fnsave
ja
imul
dec
cmp
inc
inc
dec
jae
rcrb
push
dec
inc
pop
inc
jb
das
in
out
push
cld
inc
add
push
xchg
mov
arpl
jns
inc
jg
jo
inc
pushl
push
jmp
mov
scas
jne
dec
mov
dec
pop
je
call
test
das
jno
push
pop
cmp
inc
enter
dec
arpl
cmp
cli
jae
pusha
mov
dec
mov
jp
jnp
addr16
mov
and
pop
icebp
inc
icebp
pop
aad
fidivrl
push
jae
pop
insl
jnp
jge
jg
out
xchg
jns
pusha
dec
pop
or
and
pop
lock
popa
adc
bound
pop
pcmpeqd
jge
dec
data16
dec
dec
or
incl
mov
inc
mov
ja
dec
test
jae
addr16
push
inc
dec
loope
incl
dec
and
xor
inc
jae
iret
jo
dec
cmp
insb
aaa
add
sub
jp
mov
add
dec
mov
add
movsl
jb
int3
dec
fidivl
inc
sub
inc
sbb
sub
push
mov
lcall
arpl
jae
pusha
xor
dec
or
sbb
sarl
fwait
ja
fcomip
loop
ret
jg
dec
dec
popa
xor
push
imul
in
fbstp
scas
insb
into
adc
cli
outsb
enter
xchg
dec
ja
sbb
insb
mov
mov
jg
push
sbb
jge
mov
je
imul
call
push
ret
inc
outsb
dec
xor
push
push
xchg
fsubp
dec
insl
out
cli
lcall
jnp
inc
shrb
pusha
jb
es
dec
jp
jbe
out
xchg
push
pop
jo
or
jb
lret
jno
mov
inc
push
dec
in
jb
inc
fildl
jb
cmp
inc
cmp
adc
decl
imul
push
repz
jbe
or
out
mov
mov
jp
popa
pop
jns
inc
pop
jne
xor
jmp
push
and
jno
jl
gs
pop
lds
inc
imul
loop
rcrl
jmp
inc
scas
fsubl
cmpsb
add
push
dec
cmp
cmp
inc
aaa
sub
cmp
pop
push
jne
dec
xor
add
push
aam
rcrl
dec
inc
in
in
push
hlt
jnp
inc
shrb
pusha
imul
jnp
je
inc
movsl
je
push
cltd
jae
add
incl
jno
dec
sahf
jb
imul
or
je
push
dec
pop
inc
inc
gs
pop
mov
loope
test
inc
jnp
mov
pop
inc
push
das
test
jge
je
sub
cmp
clc
jmp
pop
sub
pop
add
jl
push
or
adc
jl
gs
ljmp
int
stc
data16
pop
fnstsw
inc
imulb
popa
fisubl
pop
shll
jo
call
outsl
xchg
ja
inc
dec
mov
sub
inc
jnp
dec
pop
dec
jne
pop
loopne
outsl
dec
imul
pop
cmp
inc
adc
inc
or
stc
push
shlb
loopne
call
jle
jnp
adc
ljmp
mov
je
push
mov
jnp
jo
dec
push
jae
loope
outsl
mov
jo
inc
push
inc
sub
cmp
push
adc
add
dec
mov
imul
cli
push
ret
mov
jbe
ja
and
decl
lock
imul
xchg
jg
push
push
addr16
and
inc
adc
sbb
pop
xor
sub
out
pop
shll
xor
pop
jb
adc
jns
jge
pusha
inc
inc
orb
lods
pop
pop
outsb
cmp
dec
pop
lcall
sbb
popa
add
push
adc
xor
or
ret
and
sub
inc
out
adc
cli
add
jge
call
jb
inc
in
rclb
shll
shll
dec
fidivs
out
out
roll
fadds
sub
dec
jb
push
mov
ds
es
mov
mov
call
inc
repnz
jno
outsb
adcb
or
jo
bound
jg
xorl
jp
push
push
bound
pop
jnp
jp
mov
jmp
je
jns
pusha
and
adc
outsb
ds
ret
scas
arpl
outsl
mov
bnd
dec
ljmp
dec
pushl
jecxz
xchg
dec
andl
xchg
jge
inc
push
inc
pusha
insb
dec
push
sub
dec
cmp
mov
dec
or
jle
arpl
imul
jle
jb
jge
pop
cmp
dec
lea
pop
pop
jns
clc
jno
jnp
inc
dec
je
call
inc
pop
jnp
dec
add
dec
repz
pop
push
loope
stos
inc
cmpsb
pusha
rcr
decl
outsb
gs
arpl
test
jge
bound
ljmp
adc
dec
adc
push
add
jne
jbe
pop
shrl
popa
fnstenv
jbe
outsl
fsubl
jne
insb
mov
ja
dec
loop
aad
cmp
or
cmp
jge
jbe
jb
fiaddl
out
sub
cmpsb
mov
data16
jns
inc
mov
imul
decl
jl
pop
dec
jge
or
inc
sbb
jbe
dec
or
insl
fs
jae
jp
jbe
jns
std
jmp
pop
movsl
jle
imul
jg
inc
data16
cmovbe
jmp
add
pop
jp
pop
push
dec
loop
inc
shlb
clc
jg
addr16
imul
jge
je
and
mov
or
decl
gs
stc
dec
push
leave
jno
mov
push
xchg
jg
incl
mov
jge
fs
and
xor
push
jmp
xlat
pop
shll
xchg
jb
insb
inc
push
dec
cmp
callw
mov
iret
push
scas
dec
push
mov
sbb
pop
in
lock
xchg
mov
mov
test
jg
inc
and
push
fs
insl
ret
jae
jg
jo
inc
jne
pop
push
jne
xlat
add
decl
pusha
sub
dec
ret
insb
iret
dec
cmc
inc
ljmp
mov
pop
movsl
inc
addl
insb
inc
jl
outsl
imul
jg
repnz
hlt
jl
jno
jo
outsl
mov
push
pop
insl
push
aad
incl
dec
inc
push
pop
cmp
push
pop
bound
insl
sbb
iret
and
jg
std
jns
pusha
mov
inc
lcall
push
gs
inc
push
dec
jns
js
pop
mov
push
inc
cmp
jno
insb
add
dec
push
push
ficoml
or
mov
mov
pop
dec
dec
push
dec
popa
push
jno
and
pop
or
mov
clc
imulb
pusha
fidivs
jb
mov
pop
mov
xlat
fiaddl
js
arpl
call
dec
dec
dec
pop
jg
pop
pop
push
sbb
dec
and
inc
mulb
jno
bound
call
dec
js
fs
jp
or
ds
fdivs
out
int
jp
mov
pushl
push
inc
nop
sub
jo
imul
xlat
call
fimuls
fs
push
imul
jg,pt
je
js
dec
out
lcall
xchg
push
dec
push
dec
dec
gs
pop
push
inc
add
push
push
enter
lcall
dec
mov
lods
push
mov
dec
and
lock
imul
pcmpeqb
inc
adc
movsl
jnp
jno
xlat
sbb
bound
inc
imul
addr16
push
outsl
pop
jle
inc
outsb
jne
dec
imul
push
or
not
jnp
jbe
ja
test
mov
push
xor
push
pop
loopne
pop
pop
jle
jge
push
push
or
cmc
and
push
or
fs
popa
fs
subl
repnz
push
arpl
stos
pop
push
icebp
scas
inc
push
out
inc
decl
pop
into
jno
dec
in
inc
aad
xchg
popa
mov
mov
decb
pop
mov
dec
jge
pusha
jle
inc
insb
outsl
push
gs
ljmp
jle
dec
jb
jle
bound
jno
push
add
pusha
cmp
je
dec
es
mov
das
dec
aas
je
into
adc
push
ret
pop
leave
inc
std
mov
jno
dec
imulb
jg
insb
sbb
inc
xlat
movb
int3
jb
jae
insb
lcall
jmp
jo
inc
mov
mov
mov
js
pop
push
outsb
ud0
jno
jo
imul
mov
neg
aam
push
std
outsb
push
push
add
jne
jns
dec
addb
cmp
inc
pop
push
pop
or
dec
lea
lcall
pop
in
mov
inc
sbb
inc
rorb
push
test
xchg
inc
jo
push
arpl
push
nop
inc
adcl
imul
push
push
ds
dec
inc
mov
loop
dec
dec
inc
arpl
lcall
shlb
imul
adc
cmp
push
adc
or
xor
pushl
orl
push
sub
xor
cmp
or
mov
add
sbb
jl
push
pop
pop
or
lcall
push
add
hlt
or
fcmovbe
cmp
les
or
jmp
std
add
sar
jmp
ss
loopne
pop
add
int3
sbb
int
cmp
lret
fistpl
adc
idivl
and
lcall
cmp
int3
sbbb
repz
add
fistpll
mov
lret
iret
cli
sbb
fcomp
adc
cld
decl
sub
out
divb
push
divl
cmp
ss
enter
and
inc
arpl
je
imul
mov
dec
mov
cmp
push
xchg
pusha
addr16
inc
f2xm1
mov
xlat
push
inc
push
bound
cmp
jbe
push
rcrl
inc
icebp
je
jge
fs
aas
add
inc
jne
jg
lret
jp
push
daa
cmc
push
inc
cmp
sub
mov
adcb
and
insl
lret
repnz
jle
adc
imul
outsl
mov
push
pusha
inc
push
push
dec
xchg
call
push
and
out
mov
dec
dec
es
leave
cmpsl
sbb
lret
xchg
dec
jnp
pop
lret
mov
jbe
pusha
iret
xor
mov
push
stc
push
adc
decl
sbb
cmp
shrb
lahf
jl
clc
repnz
nop
xchg
add
pop
fdivrs
out
out
jnp
in
mov
xor
test
ret
scas
jo
mov
pop
std
into
movsl
dec
or
xor
lods
or
sbb
movsb
lea
xor
cmp
xor
ljmp
mov
jge
imulb
fidivrs
dec
cmovge
xor
adc
cmp
push
rcrb
jns
daa
stos
inc
cmp
test
fneni(8087
into
in
jbe
int3
fdivr
out
mov
push
pusha
sub
dec
sub
int3
sarb
mov
hlt
cli
cld
iret
fcomip
leave
or
out
dec
in
and
and
fcmovnu
fsubr
jg
mov
jl
pushl
lea
push
insb
rclb
notl
mov
adc
popw
lods
aaa
mov
call
cwtl
out
bound
in
popa
cmp
inc
loope
mov
xchg
and
out
jmp
sbb
and
cld
out
jge
loop
mov
and
jae
jl
lods
addl
xor
jo
mov
rcr
rclb
mov
dec
jge
and
out
stc
stc
fbstp
leave
lret
std
sti
sti
ljmp
dec
lret
shl
decb
fcmovne
int3
pop
rcrb
incl
sub
gs
xor
lods
out
mov
pop
repnz
pop
pop
or
out
fnstsw
jmp
into
out
jmp
add
or
loop
shll
in
mov
out
rcr
cld
jmp
outsb
xor
fcompl
int3
mov
sub
std
shr
shll
dec
push
push
cmp
pushl
in
fcomps
sub
push
icebp
int3
and
lea
adc
pushl
push
loop
ds
leave
nop
pop
aaa
aas
ret
cmc
push
add
in
mov
rcr
cld
jno
call
fimull
sbb
es
roll
dec
fdivrp
jecxz
sbb
lret
aas
xchg
ds
mov
add
xor
iret
hlt
sbb
mov
sarb
aad
lcall
jmp
mov
iret
fisttpll
sub
dec
pusha
shll
movsl
push
repz
pop
leave
int3
out
adc
in
stos
jbe
cmp
xlat
test
lret
cs
dec
iret
rclb
jns
stc
jecxz
sub
int3
lcall
sbb
sbb
repnz
mov
fsubp
jno
or
lret
push
add
repz
sbb
sti
xchg
decl
adc
lods
shll
mov
icebp
out
dec
push
dec
idivl
leave
ljmp
cmp
xor
filds
in
ja
pop
int3
push
push
data16
fstpt
ljmp
push
mov
mov
lret
outsb
lods
out
cltd
je
cwtl
mov
ds
test
sbb
test
cmpsb
clc
mov
mov
mov
lahf
mov
cli
scas
rolb
rclb
push
loop
cmc
mov
int3
xlat
cld
xchg
dec
sar
call
push
test
das
ret
push
cltd
shlb
pop
in
sti
push
bound
aaa
cld
call
bound
or
jmp
outsb
in
popa
ret
xlat
leave
int
cmp
cs
cmc
cmp
in
fbld
inc
pusha
or
pusha
cmp
sbb
idivb
lret
push
pop
ss
cmp
clc
pop
shlb
cld
outsl
cli
jecxz
stc
ret
mov
push
cmp
fidivrl
into
or
and
xor
popa
in
into
add
in
in
jmp
inc
cs
outsb
icebp
repz
and
lea
or
in
rcl
push
popf
push
stos
add
jns
mov
push
pop
mov
test
mov
fcmovnu
into
inc
in
decl
push
xchg
and
sar
jg
cmp
pop
xchg
mov
and
shl
fcoml
roll
pop
leave
inc
and
xlat
mov
imul
rorl
push
mov
out
mov
call
dec
cld
je
rorb
mov
fwait
lcall
ds
pop
cmp
loope
ja,pn
lds
cmp
inc
dec
filds
insl
lret
and
push
add
xchg
jnp
into
arpl
fwait
xorb
ljmp
mov
xchg
outsb
filds
js
sbb
jg
fildll
cmp
sbb
hlt
andb
adc
test
pop
or
ret
mov
imul
xchg
aaa
add
fiadds
leave
mov
es
adc
fbld
lret
and
fiadds
or
xchg
cs
jge
inc
inc
xchg
rcrl
push
sub
testb
stc
cli
arpl
cmpsl
sbb
ds
ljmp
pop
jns
cmp
fildl
int3
in
cmp
cld
outsl
pop
jno
out
fs
jo
lahf
xlat
sarb
xchg
or
dec
inc
lcall
jmp
leave
sub
and
push
incb
cmp
sub
jmp
lret
aas
push
add
scas
rcll
mov
pop
cli
mov
out
mov
in
imul
jge
push
cmc
das
rcrb
in
xor
lret
jno
je
or
inc
pop
divb
insl
adc
lock
mov
dec
sbb
rcl
adc
mov
adc
dec
jmp
inc
pop
stos
sahf
push
xchg
or
shrl
sub
mov
cmp
out
or
stos
ljmp
mov
out
and
fsubs
jnp
cmc
clc
ss
imul
add
out
ds
shll
sub
ja
add
aas
add
inc
in
bswap
repnz
sub
pop
fcos
cmpsb
pop
pop
int
int
in
jge
push
pop
mov
adc
fdivs
repnz
dec
push
xlat
ljmp
mov
cmp
inc
repnz
add
dec
test
out
call
ss
and
in
into
and
push
and
sti
bound
adc
hlt
fwait
push
or
and
sbb
icebp
pop
xor
push
fdiv
ljmp
fucomip
int
sbb
int
pop
add
imul
roll
lods
adc
fists
pop
loopne
aas
pop
mov
outsl
dec
xor
lds
in
jmp
lcall
xor
or
sub
inc
ficompl
pop
std
dec
dec
call
aam
shr
push
in
and
cmp
insl
pop
test
pop
fsub
mov
imul
cli
jg
push
fsubrp
das
fbstp
rcr
jecxz
decl
adc
hlt
dec
and
in
dec
cmpsl
and
fmuls
inc
pusha
pop
mov
xchg
inc
push
mov
fcoml
mov
lret
inc
call
nop
stos
test
xchg
arpl
add
or
hlt
call
mov
dec
xor
jmp
xchg
pop
fcompl
sbb
enter
adc
fdiv
pop
addr16
sub
fldenv
ja
enter
cs
push
outsl
ljmp
ja
out
in
or
jp
lret
jg
xchg
call
adc
lock
ds
loope
icebp
cmpsb
mov
adc
and
cmp
test
lcall
jecxz
pusha
adc
jb
and
aas
xchg
and
inc
cli
cwtl
fdivr
add
ljmp
enter
mov
jp
mov
addr16
sub
or
mul
fbstp
push
out
out
sub
test
dec
and
mov
add
xor
dec
cmp
cmp
cmp
int3
repnz
lock
jmp
in
and
ret
enter
add
cmp
jno
pop
ror
in
sub
xor
int
xchg
jno
cli
iret
fistps
jbe
fists
int
imul
clc
jge
mov
push
lret
loopne
les
lods
out
xchg
loopne
adc
sub
popa
stc
int
loop
jmp
fisttpl
popf
ret
aam
stc
jmp
mov
dec
push
adc
lcall
hlt
into
pop
fildll
or
sub
pop
aad
lahf
sub
in
xor
add
aad
push
sub
mov
inc
mov
divb
psubw
das
clc
jmp
repnz
addr16
mov
sbb
scas
shll
cmp
sub
inc
sub
fistpll
cmp
xchg
sahf
inc
jmp
dec
sar
sub
cmp
cmc
fdivrp
into
aam
sbb
aaa
stc
lcall
xor
mov
iret
sub
int
vsubsd
out
pusha
mov
mov
xchg
cld
rolb
sti
sahf
mov
in
sbb
mov
ror
jmp
mov
fsubrs
call
mov
dec
adc
sbb
xor
xchg
cli
pop
lock
dec
iret
mov
lcall
lock
add
out
add
repz
xchg
and
stos
jge
push
std
push
bound
xor
jmp
out
fwait
cld
cli
push
stos
out
jge
out
ljmp
movsl
in
xchg
mov
cmp
xchg
shl
mov
mov
jg
rcr
xchg
xor
cwtl
mov
xchg
and
sub
scas
movsb
loop
xorb
call
cmp
pop
pop
add
lret
mov
pop
xchg
mov
mov
xchg
jbe
inc
clc
sbb
and
bound
repz
pop
lock
ljmp
nop
dec
imul
adc
push
cmpsb
jmp
outsl
lock
adc
notb
sbb
ret
lcall
sub
mov
test
cmp
icebp
cmpsl
jmp
dec
add
jbe
mov
imul
ret
pop
fucomip
pop
in
rcrl
and
fbld
add
shl
and
jg
push
sti
rcr
xchg
enter
nop
pop
push
iret
cmc
xor
lret
ljmp
cld
push
adc
sbb
cmp
push
sbb
idiv
lcall
and
loop
stc
fmull
jbe
repnz
push
enter
xor
lock
pop
jg
hlt
or
shr
add
or
ret
test
test
add
jmp
bound
push
out
sub
lret
call
jp
inc
pop
aaa
leave
and
loopne
shl
add
pop
or
decl
clc
pop
sti
arpl
adc
mov
cmp
incl
decl
test
mov
pop
subl
push
pop
cmc
call
sub
xchg
inc
cs
push
sub
sub
adc
mov
popf
cld
iret
lcall
insb
jnp
mov
and
mov
lea
mov
push
dec
mov
dec
xchg
rcll
daa
loopne
push
dec
xor
cmpsb
pop
sbb
mov
data16
pop
jg
out
mov
dec
stc
add
or
push
nop
jl
adc
adc
roll
movq
call
jbe
push
pop
mov
mov
shll
add
xchg
push
cld
aad
pop
jmp
lret
aaa
and
movsb
idivb
lods
insl
ret
mov
std
arpl
bound
mov
pop
pop
lret
jo
fsubrs
jmp
inc
fs
pushf
cmp
js
rcl
push
xchg
lds
mov
adc
mov
push
push
iret
sub
push
ljmp
aam
rcll
xchg
stc
adcb
loopne
mov
scas
cld
lds
out
sub
pushl
jne
xcrypt-ofb
cmpsl
in
ficompl
repnz
pusha
xor
sti
aaa
jae
push
sub
sub
pop
ret
jne
lahf
mov
out
pop
cli
or
out
cmp
pop
jecxz
ret
shl
loop
cmpsb
test
pushl
push
aaa
jg
add
shl
imul
xor
jg
mov
cmpsb
into
in
cmp
jmp
xor
mov
int3
lret
and
cmpsb
pop
je
rcll
icebp
xchg
loop
dec
loope
cli
push
pop
lock
iret
decl
xchg
iret
int
and
and
push
xchg
in
out
push
sbb
in
cmpsb
hlt
fisttps
xor
into
inc
lods
in
mov
sbb
shl
call
push
rcrb
sbb
pop
add
insl
call
pop
imul
mov
enter
decl
sub
icebp
xchg
add
inc
leave
or
int3
push
pusha
sub
add
xchg
mov
or
cmpsl
mov
xchg
out
imul
into
inc
dec
adc
ret
pop
xor
dec
aaa
xor
dec
jmp
xchg
ret
icebp
lret
icebp
cmp
mov
fld
mov
popa
inc
fcompp
in
cmovp
dec
push
jmp
ret
mov
pop
rorl
mov
pop
inc
fidivl
stc
xchg
lret
lahf
insl
leave
in
repnz
in
int
icebp
inc
and
clc
testl
outsb
mov
enter
ficompl
mov
sti
jecxz
xor
repz
dec
push
cld
jg
mov
jp
icebp
adc
clc
pop
adc
add
mov
mov
lret
repz
xor
sbb
shrl
dec
xor
and
in
inc
fsubrs
xor
into
stc
cs
pushl
xchg
and
imul
xor
stos
push
gs
add
jmp
push
hlt
ficomps
test
jnp
lods
cmp
je
or
movb
lcall
cmpb
push
or
mov
test
clc
decl
push
in
jl
fdivrs
pop
push
jmp
sbb
mov
lcall
add
add
sub
out
into
rol
or
and
push
orb
test
xlat
pop
mov
les
mov
lret
pop
dec
xor
and
aam
stos
fcom
xchg
loop
pop
sti
lahf
xchg
jecxz
das
fcomip
rcrl
in
ja
xor
rolb
sub
cli
in
lock
std
jmp
jg
mov
jg
jae
ja
xchg
shll
int
daa
insl
fisttps
xchg
jnp
sbb
jns
or
push
lcall
loop
jbe
xchg
rolb
pop
jecxz
push
sar
flds
into
fdivrp
or
pop
std
fcomip
sti
and
mov
loopne
or
test
fwait
pop
test
fsubp
out
or
push
adc
in
add
and
jg
sub
aaa
shl
ljmp
push
addl
xor
pop
pop
std
sahf
cmp
mov
lcall
bound
or
fmuls
ffreep
ficompl
jae
mov
aam
lcall
dec
fisubrs
icebp
fistpl
std
fisubl
mov
out
mov
ljmp
push
push
lds
push
test
jmp
push
ljmp
sbb
shl
addr16
fwait
ljmp
lea
pop
push
jp
xor
mov
into
lock
fidivl
sub
insl
fstps
std
stos
hlt
fcoml
add
ss
fdiv
push
mov
mov
jne
das
cli
cmp
movsl
daa
sbb
jle
or
inc
mov
repz
jg
test
jne
pop
jle
insb
mov
pop
fbstp
sti
xor
sti
xor
insb
std
decl
fcmovne
cmp
sbb
pop
push
ret
dec
cmp
vmovdqa
mov
inc
sbb
jecxz
stc
out
mov
mov
push
sbb
clc
imul
fldcw
pop
add
ljmp
fsubrl
call
jmp
jnp
adc
repnz
sti
cmc
add
in
push
call
cld
sarb
addr16
lock
scas
idiv
cmp
ljmp
aam
dec
xchg
sub
cmp
cmp
pop
push
dec
and
mov
sbb
cmpsl
cs
lock
repnz
incl
xor
mov
xchg
and
jl
imull
sar
mov
cli
lcall
xchg
adc
jae
iret
out
cld
ljmp
ja
gs
insl
pop
jae
mov
cwtl
icebp
ljmp
lea
in
fxch
call
push
inc
mov
lds
sub
pushl
xchg
popl
stos
and
jl
cmpsb
call
push
fstp
daa
or
adc
inc
sub
sbb
mov
pop
data16
popa
cmp
lret
push
push
sub
into
aam
push
enter
ret
and
adc
dec
adc
addr16
or
lock
call
xchg
outsl
xor
sub
lcall
das
fistpll
test
sahf
int3
rcrb
jmp
insb
and
jecxz
and
lcall
pop
jmp
pusha
sub
mov
fcompl
add
jnp
push
jmp
jg
vpmadcsswd
push
mov
jg
push
hlt
xlat
int3
lret
push
shr
ds
loopne
leave
bound
movsb
rcr
jbe
mov
lcall
pop
aam
pop
xor
dec
pop
lods
call
sbb
pop
push
out
xlat
cmp
int3
icebp
incl
sub
pop
push
cwtl
cmp
add
inc
lret
xchg
add
insl
icebp
data16
add
pushl
mov
or
cmp
xchg
ds
shlb
sub
mov
mov
mov
insb
mov
xchg
in
ds
xchg
call
push
push
xor
int
test
in
call
fcmovnb
nop
out
xor
mul
adc
into
push
xlat
pop
or
aaa
std
push
lret
cwtl
or
fistps
in
aas
sar
xchg
stc
add
ds
and
cmp
add
fisttpl
ljmp
ss
fwait
aas
loope
ret
or
lret
in
jo
lcall
setb
in
cmp
lret
or
into
pop
inc
stc
dec
es
pop
imull
sub
in
out
mov
cmpl
mov
leave
jl
ficoms
test
scas
xor
fistpll
add
jmp
in
push
inc
cmp
in
js
rclb
add
jmp
jmp
fs
iret
in
sub
int3
shr
sti
js
int
jecxz
scas
clc
push
jbe
push
sar
in
test
loop
mov
out
jbe
or
rorb
aad
add
jnp
push
sbb
adcb
repnz
jcxz
rclb
clc
cld
pushl
test
jecxz
inc
mov
mov
pop
jmp
inc
movsl
lret
pop
gs
sbb
pop
sub
cs
shll
lcall
sbb
es
sbb
cli
stos
fcmovb
aaa
xchg
mov
in
or
stc
sbb
pop
ds
daa
xorl
sbb
jg
test
xchg
js
and
sub
dec
cld
inc
das
sti
xchg
jmp
shrb
aaa
popf
pop
jge
push
out
add
pop
mov
enter
or
cmp
sub
mov
ljmp
outsl
or
add
pop
add
mov
aas
enter
iret
rcrl
adc
stc
mov
cwtl
lret
fcmove
inc
sub
leave
sub
sub
ret
clc
idiv
cli
rcrl
test
and
aas
shl
repnz
cmpsb
push
adc
and
lret
push
je
mov
or
cld
pop
dec
fisubrl
and
mov
cltd
sti
fdivr
sbb
mov
or
into
jecxz
les
fidivrl
jle
inc
push
adc
fwait
cs
or
xchg
adc
xchg
iret
das
push
hlt
fidivrl
and
loop
pop
ljmp
fdivr
jg
add
cli
push
inc
outsb
push
jno
leave
jmp
incl
rclb
pop
pop
pusha
ljmp
adc
imul
les
cmp
decl
xor
int3
push
xor
std
xchg
lods
mov
sub
jbe
out
add
fs
call
outsb
push
cltd
cmp
add
neg
jne
lret
sub
fwait
jg
jbe
leave
adc
repz
int3
adc
mov
decl
mov
int3
hlt
cmp
mov
fdiv
fcmovu
shr
mov
dec
xor
insl
cmp
and
add
dec
mov
jae
mov
pop
pop
push
cli
fwait
or
clc
jg
stos
xchg
dec
adc
cmc
scas
out
repz
sbbb
push
out
outsl
push
push
rcrl
xchg
loop
sub
pusha
xchg
mov
cmpsl
mov
jmp
adc
imul
and
and
push
cld
in
je
or
jne
adc
icebp
xor
loope
mov
add
cli
lea
sti
pop
sbb
mov
scas
pushl
fs
rcrl
pop
sbb
loop
ret
jmp
or
xchg
sahf
in
les
mov
ljmp
fdivrl
out
add
stos
je
push
bound
dec
pop
or
pop
sub
push
in
jnp
and
xor
mov
stos
ljmp
lret
aad
js
push
jbe
sbb
lds
xchg
and
fucomi
ret
subl
std
mov
cs
sbb
mov
lods
pop
std
dec
rcll
push
and
in
push
jb
movsl
push
pop
clc
mov
xor
cmc
in
lods
idivb
bound
dec
pushl
cs
mov
bound
scas
dec
das
fimull
stos
and
movsb
inc
ja
lds
cli
mov
fcmove
pop
mov
add
push
rol
sti
outsl
aaa
repnz
jecxz
ljmp
rcr
dec
push
xchg
out
sbb
ljmp
movsl
jmp
pop
ljmp
cs
sbb
repz
roll
sub
inc
lahf
ja
fnstcw
push
jb
int3
xchg
out
rcrl
dec
mov
xchg
dec
mov
outsl
pusha
lret
filds
mov
sub
ljmp
jb
jl
les
mov
ret
mov
leave
jns
fs
stc
clc
sub
pop
xchg
cmp
into
fwait
cmpsb
incl
mov
xor
loope
pop
mov
jp
aaa
mov
jmp
hlt
pop
lea
xchg
arpl
add
dec
out
iret
int
fwait
rcrb
push
pop
fstpl
ret
int
arpl
out
lret
outsl
nop
imul
std
enter
dec
xor
cmp
add
and
and
imul
lret
add
clc
leave
mov
jno
jno
stc
sti
lcall
pop
and
repz
add
inc
dec
inc
or
push
call
test
decl
repnz
pushl
ss
out
xchg
ret
sub
sbb
test
xor
movsl
jg
add
ret
lret
push
pop
jge
outsl
adc
cmp
jg
xor
push
jecxz
je
xchg
ss
cmpsl
ljmp
test
pop
adc
test
loop
pop
mov
lock
aas
test
in
push
sub
jmp
jb
jg
lahf
out
pop
ds
cmpsb
pop
inc
ds
mov
and
lock
cmc
scas
push
mov
out
inc
dec
or
orl
outsb
mov
xchg
imull
neg
ds
mov
aaa
lcall
or
hlt
fists
pop
fdivrl
add
dec
xchg
std
push
bound
or
cmc
cmp
insb
xor
jo
divl
arpl
mov
push
incl
mov
cmp
call
xchg
fisubs
xlat
out
jo
push
jb
and
aad
jo
sbb
mov
and
sub
push
mov
testb
push
mov
jns
xor
adc
ljmp
filds
fmulp
push
jmp
xchg
mov
mov
jp
ja
mov
fadd
fcmove
lret
add
aad
cmp
popf
push
xor
inc
sbbl
in
jg
cmp
mov
xchg
jo
xchg
outsl
pop
cld
test
ret
shll
dec
xlat
add
pushf
jae
int
int3
sbb
xchg
es
sti
ret
in
fiadds
jg
cli
and
jmp
mov
iret
add
fdivp
adc
inc
int
cmp
leave
imul
leave
xchg
sub
loope
jg
aas
mov
call
out
add
shl
shl
stc
es
push
push
or
cmp
aam
jg
cld
cli
add
sub
lock
std
fildll
jmp
sbb
push
sbb
aad
negb
sarl
add
ret
adc
sti
add
aad
sbb
dec
push
mov
popf
push
ljmp
inc
adc
cld
dec
movsl
pop
mov
adc
add
test
call
mov
out
std
add
fsubrp
mov
shll
outsl
nop
sub
cwtl
or
sbb
inc
adc
sbb
cltd
fs
bound
xchg
shrb
pop
test
es
call
push
aaa
shlb
jg
xor
out
lret
adc
sbb
jmp
aad
pop
pop
fildll
dec
in
and
cmp
dec
test
xor
scas
fdivr
mov
mov
gs
xor
in
add
xchg
lahf
ss
inc
adc
shll
cld
inc
jae
xchg
pop
mov
decl
xlat
rcr
mov
in
faddl
in
int3
jecxz
xor
pop
js
pop
in
cmpsb
add
mov
ss
cld
add
mov
scas
dec
ljmp
jl
cs
xor
cli
mov
jmp
mov
roll
mov
mov
pop
insl
cmp
loopne
jle
decl
daa
stos
sbb
adc
adc
dec
stos
ds
xor
dec
jecxz
dec
cltd
incb
mov
test
push
fcmovu
adcb
lea
test
iret
cmpsb
jle
sarb
sub
jmp
shrb
sub
add
in
push
pop
icebp
aaa
add
aas
in
cmp
rcll
jb
fisubl
pushf
cli
inc
sbb
aaa
pop
inc
jecxz
pop
dec
stc
int
ret
fbstp
cmp
and
mov
movsl
xlat
shll
idivb
cs
sub
mov
mov
push
mov
leave
inc
inc
adc
decl
jp
mov
movsb
test
cli
das
cli
cs
or
lcall
out
mov
repz
repz
negl
ljmp
pop
divl
cmp
out
add
stc
faddp
aad
dec
jmp
fidivrs
rcrb
aad
cmc
push
out
add
clc
or
sbb
repz
push
cli
mov
or
lret
test
test
cmp
ret
call
decl
push
and
ret
pusha
mov
loop
aad
jns
test
idiv
sbb
aad
pop
enter
nopl
lahf
jmp
mov
in
test
mov
sub
inc
mov
mov
xor
or
jg
out
sub
pop
icebp
repz
cs
mov
adc
mov
aam
or
pushl
jg
ret
bound
xchg
fcoml
sar
hlt
int3
cld
in
sar
in
loopne
push
or
sbb
aam
shl
sbb
cltd
gs
ljmp
cld
and
pop
in
out
shl
inc
push
mov
sbb
insb
fsubl
add
add
outsb
lret
nop
lret
mov
testb
push
in
cwtl
dec
nop
ret
lret
dec
out
divb
pop
cs
jmp
arpl
dec
outsb
les
into
in
pop
aad
and
clc
sub
subb
cmp
negb
call
add
int
das
idivl
outsb
and
fsubr
push
outsl
fwait
inc
test
and
dec
int3
and
inc
jecxz
fwait
pushl
cli
in
jmp
lock
xor
pop
icebp
les
lods
scas
cli
jg
test
lret
sbb
xchg
push
incl
frstor
mov
fst
mov
cmp
cli
loope
daa
mov
xor
dec
sub
in
cmp
lahf
into
stc
dec
mov
push
outsb
cmpsb
stc
je
add
pop
repnz
xchg
and
or
test
lea
push
cld
jnp
jg
lock
adcl
and
test
jmp
or
call
mov
testl
fdivrl
push
or
insb
or
ret
loope
pop
xchg
dec
fiadds
push
mov
mov
icebp
pop
insl
sbb
lret
in
ljmp
add
xchg
mov
lret
sti
ljmp
imul
jge
daa
daa
ja
pop
stc
enter
das
push
push
inc
dec
xorl
cmc
jg
out
ret
mov
dec
lcall
test
test
std
dec
cmc
cld
aas
sar
aam
adc
daa
pusha
add
xchg
xlat
and
mov
push
lock
or
add
arpl
leave
repnz
xchg
inc
mov
xor
adc
jle
fistps
mov
jb
mov
bound
int
std
decl
shlb
fistpl
or
and
and
stos
or
mov
sub
fldenv
fisttpll
add
jno
es
xor
add
and
jge
adc
lods
inc
js
mov
push
orl
sbb
std
loope
jno
or
sti
mov
ja
cwtl
or
rcl
dec
in
pop
call
int
and
push
ljmp
idiv
sub
pusha
call
test
xchg
inc
into
leave
insb
ljmp
mov
fnstenv
fdivrs
mov
loopne
loopne
shr
mov
xor
push
cli
jg
notb
dec
push
arpl
add
sub
je
imull
sbb
lret
pop
into
out
jbe
cmpsb
and
jg
fmulp
push
jmp
cs
push
ljmp
jne
in
ss
or
add
or
push
loop
loope
ljmp
into
sub
jne
in
icebp
aaa
loop
test
and
in
cld
adc
out
sub
mov
in
cmp
cmp
mov
xchg
cli
aad
bound
jg
add
inc
lea
jmp
sbb
jmp
xor
rorb
lods
incl
mov
cli
xor
push
pusha
loope
push
sub
in
js
jp
cmp
add
dec
bound
clc
jg
lcall
xor
and
int3
mov
dec
and
adc
pop
iret
add
repnz
ljmp
test
ret
dec
jb
and
mov
ret
sbb
mov
or
incl
or
inc
pop
les
ret
jle
inc
jnp
adcl
jnp
jne
lcall
jbe
rcll
lea
scas
sub
sbb
pop
sbb
lock
insl
mov
lret
repnz
or
fnstsw
and
stc
mov
xchg
push
es
mov
imul
xchg
inc
jge
mov
sbb
addr16
out
das
bswap
xor
loopne
iret
xchg
in
das
decl
int3
repz
jecxz
dec
pop
test
int
push
icebp
jecxz
sbb
inc
out
adc
xchg
in
rol
push
repz
in
mov
loope
test
insb
mov
cmc
jg
cs
sti
outsl
mov
fidivrl
lods
or
push
push
cmc
adc
cmp
sbb
rolb
or
filds
sti
lds
test
int
pop
pop
inc
adc
xor
stos
jg
jb
mov
sub
adc
pop
repz
not
imul
loope
dec
sub
fisttpl
lods
fdivrp
jl
stos
mov
sub
dec
movswl
clc
jmp
scas
jne
int
icebp
pop
jge
cli
cli
add
sahf
aas
repz
mov
jg
mov
add
dec
add
inc
push
sarb
sub
cld
push
call
push
clc
int3
jecxz
xor
push
push
push
cli
stos
stc
sub
cld
loop
cmp
stc
pop
leave
jo
push
inc
das
lea
push
dec
push
jmp
lock
pop
jle
lret
sub
lcall
bound
push
fsubr
int
push
pop
testl
ds
or
insl
push
xchg
call
out
adc
xchg
out
les
in
fidivl
notb
outsb
iret
or
lds
in
or
xor
nop
xor
inc
adc
adc
sub
aad
and
rorl
mov
iret
jne
ret
sbb
incl
jle
xor
xchg
cmp
sbb
outsl
ret
sahf
scas
sub
xchg
cmc
jmp
lock
push
push
cmp
aam
push
sbb
in
int3
in
jnp
jge
sbb
cmp
nop
mov
shlb
jb
mov
movsl
mov
cmp
je
cmc
outsl
sbb
sarb
pop
mov
push
aas
fwait
mov
cli
jle
das
cli
sub
bound
mov
or
and
out
or
call
gs
or
fisttpll
out
xchg
dec
add
int3
decl
test
clc
arpl
mov
shl
dec
inc
out
mulb
dec
imul
call
iret
loopne
adc
in
int
mov
mov
pop
cli
lret
inc
adc
enter
push
je
popa
pop
icebp
sub
xor
and
incb
pop
leave
push
pop
in
push
sbb
adc
shl
dec
sbb
lret
or
xchg
mov
lock
cmp
call
jecxz
pop
fbld
shrb
lods
inc
cmc
inc
fisttps
inc
icebp
adc
mov
adc
inc
ret
movsb
das
pop
repnz
ds
stos
xor
test
mov
aaa
sub
cli
nop
mov
ret
call
cs
adc
inc
and
lcall
jmp
call
bound
in
into
rcr
out
aam
rcrb
adc
jecxz
lods
cmp
into
ret
mov
adc
dec
fdivp
scas
jle
stc
lds
mov
popf
fdivr
lret
mov
push
jl
inc
loopne
addr16
movsb
xor
adc
addb
adc
std
push
mov
dec
sbb
xchg
lahf
repz
faddp
pop
gs
in
and
xchg
pop
push
sbb
xchg
sbb
call
add
mov
push
mov
xchg
loopne
loop
fsubrl
cmp
out
std
jmp
imul
inc
fdivs
add
shr
cltd
jmp
pop
cld
das
stos
push
das
outsb
lock
fdivl
sbbb
mov
push
mov
cmp
imul
inc
sbb
mov
or
push
lahf
repnz
xor
out
dec
cmpb
fcoml
popf
sar
cmpsb
clc
cmp
xchg
mov
sub
sub
arpl
sub
ret
pop
jg
sbb
fwait
ret
ffree
pop
fstpl
mov
inc
adc
xchg
leave
mul
sbb
fbstp
iret
pushl
imul
lret
fs
dec
std
cmc
xchg
andb
push
sub
data16
cld
stc
ret
pop
push
and
mov
xchg
call
mov
jae
mov
in
test
push
cld
mov
shlb
push
cli
shl
add
shrl
mov
mulb
add
pop
jnp
fcomi
cmpsb
jg
sbb
movsb
pushf
shlb
push
das
ficompl
xor
add
cmp
mov
jo
and
fadd
xchg
imul
or
fstl
jge
into
scas
outsl
xchg
test
or
ja
std
mov
movsb
fistps
aas
imul
xchg
dec
loopne
jecxz
pop
loop
and
mov
dec
add
in
dec
dec
inc
cmp
push
ficoms
stos
into
les
dec
lea
outsl
or
rclb
inc
xchg
and
xor
outsl
out
sub
xor
jmp
inc
cmp
aad
incl
add
push
repz
stos
jbe
cmpl
in
pop
popa
xor
icebp
call
add
push
sar
ret
mov
and
jecxz
xor
pop
or
sbb
cli
fcoml
inc
adc
fwait
inc
call
adc
cli
rcr
cmpsb
lods
mov
mov
push
out
lock
sub
icebp
jmp
ret
xchg
pushf
adc
inc
mov
test
mov
pop
cwtl
out
mov
jl
iret
cmp
mov
rcrl
jmp
cwtl
imul
push
xor
outsb
lret
cmpsl
movsb
mov
or
decl
push
in
in
cmpsl
push
jo
adc
out
test
jmp
cmc
and
inc
jmp
mov
in
jge
inc
sub
jno
mov
rclb
les
arpl
fiadds
mov
nop
outsb
sbbb
jl
dec
std
lret
into
push
mov
rcrb
dec
fwait
outsl
fisubs
pushf
in
int3
pop
dec
xchg
jo
pop
cld
aam
cli
mov
dec
xchg
cmpsb
pop
push
daa
decb
call
mov
int3
mov
sub
jecxz
sub
ret
js
int3
jb
xor
sbb
int
or
jb,pt
adc
jle
sub
pop
mov
cld
fisubl
jle
jne
add
int3
mov
mov
add
fdivl
xor
jecxz
stos
pop
mov
out
mov
xor
sbb
nop
je
fisubl
jne
std
rcrb
decl
pop
push
push
or
pop
testl
call
cltd
jbe
lcall
repz
and
push
sbb
or
or
cmp
or
adc
stc
in
stos
decb
lret
mov
push
inc
pop
sub
lock
mov
mov
stos
imul
repnz
inc
lods
and
lods
jle
loope
call
out
dec
dec
jno
or
add
and
cmpsl
ja
in
popf
les
dec
sub
mov
lret
and
adc
cmp
cld
xchg
incl
sub
stos
adc
or
cld
mov
push
mov
mov
mov
lock
lret
repnz
ret
pop
cs
sub
xor
cmp
repz
mov
call
jae
daa
xor
xchg
in
dec
adc
mov
ss
mov
cld
cs
fbld
lahf
cmp
out
cwtl
lcall
and
or
lods
mov
jno
sarl
out
int
decl
mov
clc
cmp
mov
or
pop
in
or
jns
mov
ret
decl
inc
add
pusha
or
sub
in
or
stos
xor
sbb
jg
ss
ror
call
mov
jno
daa
insb
sub
ds
lock
mov
sbb
loop
mov
enter
mov
call
cmpsl
fisubs
cld
pop
cs
xor
xchg
mov
es
mov
pop
pop
popa
or
in
fstps
or
incl
add
rol
jge
pop
shrb
push
lcall
call
mov
popf
testl
and
incl
cmpl
and
dec
mov
and
scas
call
sbb
sbb
inc
xchg
pushl
call
repz
pushf
sub
sahf
sarl
cmp
xor
outsl
ret
push
fildll
sbb
sub
int
aaa
mov
sub
movsl
cli
sbb
adc
inc
mov
ret
mov
mov
mov
sar
mov
repnz
lahf
and
clc
in
jns
lret
fidivrl
int3
jecxz
clc
das
sub
xchg
fists
push
add
cwtl
data16
push
add
xchg
inc
lret
test
aad
add
xlat
adc
push
cli
decl
push
das
js
pop
sub
nop
into
mov
sbb
fistpll
push
in
adc
cmpsl
mov
sbbl
pusha
add
push
mov
or
add
xor
stos
jmp
leave
shll
mov
inc
xchg
sbb
out
push
push
aas
movsl
subb
out
cltd
int3
lds
aaa
adc
negl
jbe
data16
cltd
jo
int
call
inc
lahf
inc
pop
out
sahf
xchg
sahf
xchg
jo
cli
pop
shll
pop
jecxz
mov
jle
aaa
cli
cmp
repnz
lret
add
push
push
push
fildll
incl
call
xchg
les
dec
in
filds
mov
lcall
xchg
in
fnsave
xchg
call
cld
mov
decb
enter
mov
scas
add
ficompl
sbb
push
ss
push
es
stos
lock
ljmp
ss
iret
push
inc
inc
push
add
mov
or
mov
and
clc
shrb
xor
adc
bound
shrb
inc
xlat
sbb
push
enter
xchg
adc
movsl
fnstcw
jg
or
pop
ljmp
adc
cwtl
adc
cmp
mov
out
jg
cmp
sbb
scas
inc
cwtl
xor
and
dec
sahf
sub
incl
arpl
inc
roll
jo
aaa
or
cs
push
out
aam
rcr
ds
jbe
cld
lock
adcb
xor
ss
inc
mov
sub
mov
mov
scas
sbb
inc
ljmp
in
mov
ss
xchg
into
daa
jbe
mov
cld
rcll
cmp
xor
mov
das
cmpsb
icebp
jg
fucomip
lods
adc
cmp
xchg
mov
sbb
hlt
sub
mov
sub
sbb
xchg
mov
pop
pop
sub
fildll
add
cld
movq
or
ljmp
adcl
and
and
bound
xor
in
movsl
call
dec
and
push
int
mov
sub
imul
leave
aas
or
bound
xor
jmp
adc
test
pushl
adc
push
inc
xchg
loope
lcall
and
sbb
inc
xor
jg
icebp
mov
xor
sbb
push
out
mov
ja
pushl
xor
mov
add
sbb
out
data16
inc
insb
insb
and
dec
and
loop,pn
sbb
lods
rol
ret
sub
cmp
stc
adc
inc
ds
adc
data16
pop
ljmp
stc
pushl
push
xlat
xorl
iret
in
ror
dec
cs
in
dec
sub
xor
lcall
jnp
fcmovu
adc
int3
mov
jns
test
in
adc
inc
add
out
add
xchg
lds
inc
fadd
shl
xor
push
sub
xorl
bound
cli
arpl
or
sub
pop
stc
stos
jmp
add
jecxz
push
fldt
fcoml
cld
jbe
cs
es
cmp
testl
pop
mov
lret
and
outsl
jbe
sub
inc
adcb
add
gs
xor
das
inc
aas
mul
push
sbb
push
scas
clc
ret
pop
rol
out
orps
inc
adc
loop
nop
cmp
adc
popa
ret
cli
call
or
std
xchg
adc
add
mulb
aas
aas
push
sbb
hlt
aaa
sub
inc
xor
and
bound
cld
cmp
mov
fwait
mov
clc
jecxz
ret
xlat
scas
mov
ss
and
insb
adc
jo
decl
sbb
and
mov
dec
sub
sbb
and
xchg
pop
jmp
cmp
sbb
cmpsl
mov
cs
sbb
cmp
aaa
mov
sbb
pop
pushf
ljmp
lahf
add
adc
cltd
add
pop
std
fwait
out
or
out
sub
mulb
mov
ret
aaa
enter
or
scas
movsb
or
insl
popf
lcall
and
sbb
leave
test
jns
aas
adc
and
mov
pop
jg
xchg
and
dec
aaa
adc
xor
push
je
sub
call
cli
stc
xor
cli
or
xor
mov
divl
and
mov
dec
bound
js
cmpsl
pop
out
cmp
ret
pop
or
fiaddl
fdivr
ds
fwait
sub
decl
rcl
into
fucomip
mov
cmp
addr16
std
sub
incl
aaa
mov
inc
pop
xchg
sub
pop
pop
cmp
jg
repz
push
adc
add
repz
pop
daa
xchg
dec
sbb
cwtl
mov
or
decl
sbb
push
cmp
mov
inc
daa
pushf
clc
mov
pop
nop
mov
sbb
lods
ss
mov
cmp
mov
pop
or
xlat
fidivrl
push
mov
pushf
jnp
fstps
push
clc
mov
xor
mov
leave
sub
lds
call
mull
push
xchg
lods
das
ljmp
clc
or
or
mov
sub
push
sbb
mov
jecxz
push
stos
enter
data16
xor
popf
rolb
jg
repnz
push
negb
movsl
dec
or
add
and
jae
cmc
or
xchg
mov
cli
inc
sbb
mov
int3
das
shrl
lds
jg
lcall
xor
ret
adc
sub
xchg
scas
jo
jp
ss
cmp
repz
mov
call
iret
idivl
or
adc
cmp
cmp
sbb
fcomip
test
iret
ljmp
paddsw
push
mov
shl
cmp
mov
fwait
sub
adc
cmpl
lods
adc
daa
and
add
inc
pop
out
xor
adc
dec
mov
ret
mov
out
mov
jb
xchg
mov
and
clc
in
jl
adc
fstl
and
lcall
push
pop
shll
int3
test
xchg
imulb
js
inc
sbbb
cmp
jp
iret
mov
xor
addr16
mov
call
sbb
sub
and
mov
push
out
add
jecxz
lret
push
mov
jecxz
aad
aas
inc
xor
mov
xor
or
pand
and
out
in
nop
push
and
daa
and
lret
fcomip
fists
mov
sub
xchg
stos
ljmp
std
aad
cmp
lret
inc
xor
jmp
enter
loopne
push
daa
sbb
inc
sahf
jl
test
push
adc
mov
sbb
call
xchg
mov
add
sub
xlat
scas
clc
pop
xor
add
mov
gs
and
add
lcall
jg
jmp
adcl
daa
std
mov
bound
testb
adc
cld
pop
mov
push
aas
xchg
sbb
insb
sbb
sbb
adc
ficompl
jg
test
mov
add
push
addr16
cmp
incl
xor
adc
repnz
cmp
sbb
and
bound
ljmp
cmp
lahf
xchg
sub
adc
sti
filds
cmc
sbb
or
testb
sbb
ja
decl
repnz
or
lret
iret
or
push
pop
sub
lcall
mov
sub
les
decl
mov
movsl
pushw
mov
rcrl
das
adc
stc
icebp
xor
leave
lock
mov
scas
push
or
jmp
adc
repz
mov
fadd
daa
mov
xor
cmc
and
out
fdivs
inc
clc
mov
pop
out
in
xor
out
rcrb
or
sbb
and
pusha
or
jecxz
fisubrs
loop
push
pop
cld
decl
bound
jmp
test
inc
repnz
stc
mov
ljmp
jbe
jae
jg
fwait
pop
pop
or
test
jb
nop
or
mov
test
int
lcall
aas
adc
cmp
cmp
or
push
clc
stos
filds
fadd
fnstsw
and
repz
push
daa
cli
push
sub
xchg
push
lock
lds
xchg
push
sub
jbe
inc
add
pop
fldenv
xor
movb
sbb
adc
or
jns
sub
rcrl
lcall
xchg
addr16
and
testl
test
std
mov
daa
call
shl
fisubl
jle
mov
fnstsw
mov
jge
notrack
fists
and
pushl
call
loope
pop
daa
sub
cmpsl
xor
pusha
pop
mov
or
sbb
xorl
jae
mov
pop
cld
sbb
ljmp
in
mov
pop
sbb
and
mov
dec
cs
inc
mov
sbb
cmp
mov
push
and
mov
mov
mov
and
pop
jecxz
repnz
decl
xchg
out
daa
int
jno
jmp
icebp
into
pop
mov
mov
sub
gs
push
pusha
data16
in
jmp
jge
xor
jg
in
pop
xchg
lahf
ja
lock
fldl
aad
int
lcall
xor
idivl
mov
cmp
and
inc
enter
mov
incl
mov
fwait
in
pop
mov
inc
xor
sub
sarb
decl
sbb
cmp
sbb
xor
adc
iret
int3
imul
adc
cmp
push
ror
xor
sub
es
es
cmpsl
call
jmp
repz
add
insl
ficoml
ljmp
loope
arpl
mov
fwait
dec
test
mov
clc
in
pusha
clc
add
leave
lret
push
popa
insb
xor
outsl
sub
or
int
add
or
aaa
cld
dec
pop
adc
fnsave
pop
scas
pop
jle
push
addl
xchg
pop
push
cwtl
ljmp
fwait
sbb
in
sbb
xor
push
jg
xor
cmp
or
out
jg
notl
or
in
frstor
jo
xor
push
scas
cmc
fnstcw
or
in
and
pusha
adc
adc
and
push
int
xor
or
in
cmp
lods
cmp
out
xchg
or
cmp
lods
mov
or
push
sub
xchg
pop
and
adc
sub
cld
dec
cld
xchg
sbb
aas
xor
mov
pushl
sbb
mov
mov
or
int3
mov
loope
in
shll
repnz
xchg
negl
jnp
in
or
jg
test
std
dec
cli
cmpsb
rcr
and
and
xchg
cmp
jg
jmp
cli
sbb
imul
cmp
or
xor
ljmp
subb
call
aaa
adc
add
ja
adc
loopne
filds
popl
and
int3
push
movsb
lret
xor
es
mov
loope
sahf
cmp
sub
fmulp
mov
stos
mov
ror
and
xchg
nop
es
stos
push
pop
mov
stos
add
sar
sbb
aaa
cmp
repz
push
imulb
cmp
sub
scas
clc
fbld
daa
repnz
cs
into
daa
add
push
lcall
lret
cs
rol
iret
inc
mov
hlt
adc
mov
cmp
fldt
rolb
mov
and
xor
scas
pop
cs
lds
and
out
jmp
scas
data16
lret
int3
rcrl
movsl
cmp
hlt
decl
mov
xor
xor
and
or
sub
xor
fmuls
jbe
and
or
out
lcall
or
inc
sbb
hlt
and
jmp
jg
aas
or
roll
xchg
sub
sub
lock
adc
rcl
iret
imull
sub
addr16
push
stc
adc
and
mov
in
loope
mov
sbb
jno
in
add
call
daa
negl
lret
mov
sbb
jns
fdivrs
fiaddl
ss
sub
push
icebp
inc
xchg
mov
pop
sub
lds
sahf
ret
test
ljmp
push
and
cld
cmp
and
ljmp
sbb
enter
cld
sbb
dec
setnp
xchg
dec
jae
nop
pop
sub
addr16
jp
push
inc
testb
stos
mov
xchg
rol
cld
ljmp
inc
or
add
call
or
mov
sbb
sarb
lds
outsl
lret
sti
ds
mov
movsl
and
xor
mov
sbb
pop
lret
repnz
loop
jmp
sub
cmp
out
sub
shrl
cmc
lcall
bound
or
sub
mov
fstl
fs
jg
decb
jbe
pop
in
xor
ss
leave
mov
nop
sub
mov
jmp
pop
out
clc
movsb
mov
jo
ss
int3
pushw
push
inc
outsl
xor
ljmp
cs
sahf
arpl
clc
nop
and
cmp
cs
cmp
rcll
mov
sub
jmp
mov
aas
mov
xchg
sbb
call
cmp
out
jg
cli
cs
test
push
lcall
jecxz
inc
ja
sbb
or
push
pop
xor
lret
xor
into
lahf
sbbb
loope
and
sbb
in
in
or
int
fdivrs
outsl
ucomiss
and
aad
mov
fnstcw
inc
adc
bound
push
xchg
jmp
aam
cli
xor
mov
push
jecxz
pushl
mov
add
aad
and
mov
int
push
jmp
decl
clc
js
imul
ror
icebp
or
mov
and
pushl
cmc
adc
pusha
or
and
and
push
insb
and
ljmp
mov
mov
jo
mov
paddd
sti
dec
sbb
or
cmp
add
push
cmp
xor
push
mov
ss
fbstp
jbe
aaa
cs
xor
iret
scas
ljmp
rclb
repnz
sahf
mov
fwait
cmpsl
pop
in
ret
call
ljmp
mov
lds
add
mov
sbb
leave
clc
into
cs
sti
lds
or
bound
cmp
and
cmp
loope
push
and
cmp
out
cmp
mov
movb
pop
mov
les
mov
add
negb
bound
lret
dec
lock
xor
xor
cmpl
mov
add
fdivs
lods
lds
inc
push
das
cld
lcall
pop
sub
lea
aas
cmc
mov
mov
or
lcall
push
dec
or
outsl
push
in
js
adc
dec
sub
or
push
call
adc
mov
lods
test
fsts
aaa
add
inc
psllq
leave
shl
sbb
sub
pop
mov
in
sub
lods
jo
cmpb
out
add
mulb
inc
incb
jmp
sti
outsl
or
sub
lods
loopne
or
xlat
mov
je
loopne
insb
ds
testb
fcomip
ja
shl
fwait
mov
call
ficompl
add
cli
jg
inc
sarb
ljmp
mov
sbb
decl
in
rcrb
out
and
aaa
xchg
xor
imul
cmp
lea
push
push
sbb
xchg
int
cs
dec
lock
cmp
sbb
jb
sbb
imul
lret
shrl
inc
add
test
jge
int3
push
mov
xor
popa
xor
aad
div
and
scas
pop
cmp
cmp
sbb
ja
jae
out
xor
cmpsb
and
call
xlat
pop
and
and
mov
sub
add
push
mov
shl
fildll
ficoms
pop
xor
cld
ljmp
cmp
ret
sbb
shlb
pop
shl
sub
sar
cmp
cmp
jbe
mov
test
jle
test
xchg
clc
cli
mov
sub
out
leave
sbb
inc
ds
add
pop
xchg
popa
add
push
add
outsl
or
jno
cmp
pop
sub
lret
shll
das
push
stc
and
cli
jmp
mov
lods
pop
fdivrs
mov
adc
and
adc
push
or
mulb
fwait
pop
mov
mov
rcl
cmp
pushl
cld
lcall
push
push
loope
and
stc
bound
add
xor
mov
outsl
push
pop
test
adc
cmp
popf
add
in
mul
aaa
fwait
pop
shll
jp
mov
dec
leave
imul
lret
inc
and
les
fildl
dec
or
in
and
xor
and
daa
int
sbb
pop
jb
and
fistps
jp
mov
lods
icebp
dec
adc
enter
push
sub
mov
xor
or
push
inc
lcall
sbb
xchg
sbb
lock
jns
cmp
test
in
push
inc
fists
sub
mov
mov
pop
push
fwait
mov
xor
ljmp
jg
sub
dec
or
fsubr
loope
push
mov
jge
int3
pushl
fdiv
adc
je
sbb
bound
rcll
xchg
shl
pop
ret
mov
aas
fidivrl
jle
stc
fcomps
ss
enter
out
out
jnp
mov
int
xchg
mov
clc
filds
adc
mov
in
sbb
mov
mov
fmuls
fcomps
cld
cmp
dec
push
sti
xchg
lods
jns
jae
nop
out
inc
or
push
popf
les
ljmp
add
daa
icebp
cmp
outsb
or
cld
inc
cmp
xor
cmpsl
dec
pop
dec
repz
xor
mov
ds
sbb
lock
call
fcomps
or
pop
adc
neg
jmp
push
testb
sahf
jno
cs
rolb
cmpsb
pop
int3
and
or
iret
lcall
bound
pop
out
int3
mov
aad
push
and
push
mov
and
int
mov
testb
jecxz
and
jg
mov
and
dec
adc
fstpl
inc
pop
aaa
sbb
xchg
fildl
sbb
rcll
mov
inc
mov
inc
movsl
push
add
add
pop
ljmp
inc
xchg
inc
or
ja
lcall
in
and
fsubs
stc
shl
or
mov
fstpt
pusha
adc
fstpt
push
lret
or
call
push
xchg
xchg
ds
or
or
pop
jbe
xchg
cmp
out
insb
pop
jne
repnz
iret
cmc
add
sti
sbb
fwait
adc
push
pop
mov
and
icebp
push
sub
sbb
and
pop
fbld
cmp
std
lcall
pop
pop
fwait
popa
jle
shlb
or
pop
sbb
or
jmp
sbb
into
and
xchg
mov
jp
mov
jg
lods
mov
or
inc
fimull
sub
cmpsl
jo
repnz
jno
jmp
enter
xchg
xor
sbb
nop
iret
aas
xor
jg
shlb
push
imull
icebp
pop
fisttps
mov
loopne
and
mov
xchg
mov
inc
xchg
jl
insl
inc
adc
adc
mov
xchg
pusha
xor
xor
jg
mov
push
inc
cltd
mov
xlat
pop
cmp
push
or
sbb
ret
xchg
dec
in
dec
loop
and
lret
and
cmp
out
test
xchg
sbb
or
inc
aaa
mov
sub
xor
sbb
adc
mov
xchg
and
out
incl
in
adc
lods
outsb
jno
adc
xor
or
decl
lcall
bound
dec
cli
aaa
das
aas
repz
pushf
subb
cld
mov
sbb
inc
cmp
jg
push
or
outsb
mov
or
ljmp
inc
and
adc
sti
in
sbb
lods
pop
inc
in
sbb
fwait
lcall
cmp
xor
and
or
mov
jg
dec
xor
and
ljmp
xchg
outsb
add
ljmp
test
in
lret
in
pop
icebp
sub
add
sahf
mov
fidivs
cs
xor
subl
sbb
ror
scas
xor
push
jbe
hlt
incl
loop
adc
adc
stos
repnz
xchg
jns
mov
dec
pop
add
iret
fisubrs
adc
sbb
fbstp
int3
fmull
fidivrl
xchg
or
xchg
xchg
sbb
out
xchg
in
leave
xor
loope
stc
icebp
lahf
cmpsb
ljmp
sbb
dec
and
sbb
xor
cld
sbb
mov
or
aaa
lods
out
mov
ljmp
bound
imul
sub
repnz
xchg
out
loopne
cmpsb
sub
daa
jbe
xchg
mov
in
imul
fildll
pop
mov
push
add
imul
adc
jb
js
pop
lods
sub
dec
cmp
mov
xor
add
out
mov
out
fcmove
mov
cmc
adc
add
xor
es
jp
loop
jmp
daa
pop
fdivr
mov
sbb
stc
xor
dec
or
bound
out
xchg
add
bound
in
or
into
or
cmpl
sbb
xlat
cmp
sub
push
mov
or
sub
mov
inc
test
sbb
leave
xor
add
stc
js
inc
inc
jb
aam
sub
rcrl
and
rorl
mov
and
inc
mov
inc
dec
push
sub
ficoms
imul
call
push
es
cmp
xchg
movsb
cmpl
ds
divb
mov
sub
inc
xor
subps
lcall
cmpl
dec
pop
test
mov
push
stos
imul
push
ds
jg
pop
dec
int3
add
aas
jp
adc
xchg
mov
mov
pop
outsb
inc
clc
fcom
and
out
cmp
lret
mov
in
pop
cwtl
push
jns
push
push
ds
pop
mov
iret
call
cli
pushf
getsec
add
mov
lcall
push
scas
pusha
iret
mov
mov
testl
or
inc
and
stos
in
and
sub
mov
in
int3
push
sub
fildll
or
and
das
loopne
jmp
jb
xchg
xor
sub
movl
jecxz
pop
mov
cmp
test
cmp
movsb
jne
fmul
ss
xchg
fptan
pop
mov
repz
mov
jmp
fbld
or
es
lret
mov
mov
out
incl
cmpsb
icebp
js
hlt
push
or
aas
add
ror
pop
js
inc
cmp
add
xchg
sbb
cmp
lcall
out
add
mov
popf
xor
pop
ljmp
ds
mov
dec
sar
push
adc
or
lahf
dec
lret
add
adcb
clc
mov
mov
sub
cmpsb
in
mov
and
jmp
rclb
cmp
lds
mov
lret
xlat
scas
fimull
push
data16
in
into
cli
mov
negb
clc
incl
mov
sub
enter
nop
add
mov
daa
out
cmpsl
xor
cmp
lret
adc
add
pop
enter
jp
scas
int3
pushl
bound
sbb
enter
xor
sbb
sti
in
mul
lcall
add
lock
rolb
xor
or
decl
push
or
rclb
and
sbb
in
aad
test
cmp
xchg
repz
decl
movl
and
loopne
popf
inc
rdtsc
icebp
leave
into
ja
mov
sar
cmp
xor
or
idivl
lea
push
xor
pop
loop
jg
and
pop
daa
into
rcll
ret
int3
add
mov
dec
push
add
xchg
xor
decl
out
jns
scas
aaa
xchg
fisubs
mov
cmpsl
push
ret
fiadds
pop
icebp
sub
cmp
push
pop
lcall
push
adc
or
xchg
adc
and
adc
pop
retw
add
and
pop
and
and
mov
ljmp
add
add
fucomi
sti
stc
dec
sub
and
push
mov
movsb
inc
cmp
mov
ficompl
cmp
pop
push
decb
rcr
add
cmp
idiv
push
xchg
repz
pop
out
outsl
icebp
lcall
js
pushf
addr16
jno
mull
jg
cli
add
lock
sbb
leave
daa
lds
xchg
inc
les
push
shr
aad
inc
sbb
ror
das
enter
xor
push
xchg
jle
sbb
aas
mov
filds
cs
and
std
mov
cmpsl
push
mov
push
or
ret
les
shlb
xor
insb
mov
cli
addr16
cs
adc
xchg
pusha
jo
pop
dec
pop
and
aas
push
add
out
adc
xor
or
adc
sahf
cli
outsl
mov
mov
ds
pop
leave
int
bnd
sub
cmp
fisttps
leave
in
jp
sub
xchg
outsl
clc
mov
mull
and
vhsubps
jle
fsubrl
out
icebp
add
sub
adc
or
cli
data16
pop
into
cli
add
jmp
or
lcall
pop
cmp
fwait
mov
ror
jge
xor
aaa
in
pop
stc
testb
mulb
out
cli
inc
lock
mov
mov
xchg
lret
and
and
bound
int
inc
or
sbb
lds
mov
and
xor
cs
fwait
cli
mov
xor
inc
imul
addr16
add
jmp
push
or
shlb
jmp
jg
jmp
sarl
or
xor
push
rcrl
add
mov
aam
fwait
add
shlb
xor
xor
sub
mov
sti
clc
rclb
and
bound
ljmp
xchg
out
jge
and
xchg
push
and
xor
and
data16
int
outsl
mov
cmp
in
cmp
dec
jb
lcall
jns
sbb
int3
in
leave
enter
push
roll
add
dec
cs
xchg
lret
add
mov
jb
mov
sbb
jae
int
or
or
jge
aaa
repz
pop
inc
shll
add
push
sahf
ret
xchg
divl
pop
decl
sub
leave
add
in
sub
int3
lret
into
and
or
cmp
cli
push
mov
mov
xchg
pop
jg
cmc
jmp
mov
shr
clc
sub
xor
adc
outsl
push
scas
popa
mov
shrl
jecxz
push
mov
ljmp
movb
dec
add
add
and
insb
pop
push
add
repz
loopne
mov
pop
sub
lods
lret
pop
and
cli
mov
js
lds
cmp
sbb
mov
and
fistps
and
lods
incl
testb
mov
insl
or
cld
inc
aad
sbb
xor
ss
mov
adc
cmp
xor
adc
mov
out
lcall
or
iret
push
call
or
stos
mov
mov
add
xor
xchg
fcmovb
rcrb
cs
jge
push
and
int3
xchg
jg
and
es
push
rcrl
sar
shll
pop
cli
mov
pop
repnz
mov
dec
cmp
icebp
lea
cli
cmp
mov
shr
repz
ljmp
add
inc
or
incl
inc
xchg
mov
push
or
fidivl
or
iret
fidivl
and
push
xchg
out
add
xor
xchg
fs
cs
and
lods
out
mov
lahf
mov
dec
mov
jae
imulb
cs
mov
or
jne
or
and
outsb
pop
clc
cmp
rcll
adc
sub
pop
mov
push
sub
shll
cwtl
mov
test
mov
pavgb
shl
idivb
inc
and
ret
mov
pop
add
push
mov
inc
rorb
sbb
xor
jg
ret
jb
sbb
mov
jmp
and
jg
jge
in
shlb
notb
decb
mov
pop
lret
call
out
test
add
aad
sbb
cli
aaa
jge
xor
push
int3
aad
sbb
adc
push
fbstp
nop
and
mov
fwait
cmp
pause
jns
repz
push
pop
movsb
clc
adc
jg
dec
sub
lods
push
jle
out
or
cmp
out
add
aaa
sbb
lret
shlb
xor
clc
ljmp
mov
mov
sbb
cmp
inc
sbb
int3
notb
cs
add
fwait
pop
cmc
into
sti
cmp
jae
loope
add
add
in
cwtl
rcl
mov
in
inc
cmp
leave
mov
das
pop
aaa
popf
jp
ljmp
int3
cld
testb
push
xor
xchg
jg
cli
xor
sub
pop
cltd
jbe
sbb
cmp
lock
bound
shrl
ficompl
imul
inc
adc
clc
fwait
js
or
jg
inc
mov
pop
cs
dec
movsl
pushw
dec
rcll
cli
adc
ficoms
mov
dec
into
daa
ja
xor
and
cmp
or
popa
call
loope
sbb
aas
fsubp
lock
pop
inc
cld
out
jg
mov
rcl
adc
sbb
jo
rolb
adc
call
fbld
shl
jg
int3
xor
pop
push
mov
sub
or
pop
mov
ljmp
push
mulb
into
jns
cmpsl
or
ja
fbstp
sbb
jge
or
out
fwait
mov
rcrl
call
adc
adc
xchg
adc
lcall
sarb
out
inc
sub
and
mov
sub
cld
adc
out
incl
jle
pop
push
negb
sbb
dec
cmp
clc
xor
cmp
stos
xor
push
lock
in
test
and
lock
repnz
lret
cltd
cmp
pop
sub
test
cmp
out
loope
add
xchg
outsl
lods
push
xor
iret
into
sub
sbb
fcomip
mov
sub
out
leave
lock
test
repnz
in
enter
loope
inc
cmp
push
into
xor
clc
pop
pand
movsb
cmpl
adc
jl
pop
push
cli
pop
or
cld
xchg
sti
dec
sti
and
push
lret
pushf
or
cs
mov
sbb
test
add
rclb
mov
or
test
outsb
push
out
ret
inc
adc
sar
icebp
sbb
mov
dec
loopne
test
jl
xchg
cld
fwait
sub
insl
or
cmp
adc
iret
popa
mov
loope
add
clc
add
jecxz
adcb
outsl
pushl
jmp
adc
in
jmp
and
xor
mov
push
out
pop
test
push
test
sbb
push
lcall
xchg
cwtl
push
dec
push
stc
add
negb
or
jg
out
lcall
shlb
jae
add
fbld
loope
cmp
fistpll
stc
fwait
push
sub
iret
jmp
sub
dec
addr16
mov
aas
aaa
mov
sbb
in
out
add
lock
test
ret
pop
inc
sti
add
rcr
and
or
fbld
push
repz
dec
xor
and
stos
sti
lret
and
push
mov
and
test
xchg
nop
and
adc
jmp
push
inc
or
xor
adc
mov
mov
adcb
or
add
sub
xor
rcr
jns
adc
out
incl
out
sub
ret
pop
cmp
fnsetpm(287
add
push
lds
xor
push
scas
and
in
fs
xchg
or
cs
and
aas
or
and
push
or
inc
inc
out
push
fldenv
xor
sbb
pop
test
call
fidivrl
sub
sbb
orb
lods
add
daa
testb
mov
dec
sub
mov
lcall
repnz
cmp
cli
cmp
in
rcll
push
cmp
in
cmp
clc
xchg
adc
stos
lock
push
fstl
sub
or
inc
jb
inc
xchg
hlt
and
int
push
jno
popf
push
out
ret
or
stc
sub
push
or
push
mov
lret
inc
jae,pn
add
repz
cmp
mov
movsb
inc
ja
lret
out
push
fs
lock
rorl
mov
dec
xor
ret
clc
cltd
jbe
into
ljmp
scas
test
das
mov
negl
and
inc
mov
push
xor
incl
sti
fistpll
sbb
aas
adc
hlt
outsl
out
clc
dec
cmp
icebp
gs
jl
and
or
xor
cltd
jle
das
ret
mov
push
add
sbb
xchg
lcall
or
std
bound
inc
iret
sub
cmp
or
mov
test
cmp
ljmp
hlt
imul
pusha
sub
enter
out
pop
inc
dec
add
adc
cs
push
xor
jno
add
or
repnz
outsl
or
movsb
jl
test
lret
out
xorb
insb
pop
in
fists
cmp
aaa
push
mov
cmc
cs
mov
and
pop
push
and
pusha
sahf
mov
add
inc
popa
ret
xor
call
or
cwtl
xor
or
inc
loopne
mov
into
daa
fnstenv
leave
push
adc
xor
adc
pop
mov
adc
scas
icebp
xor
movlhps
push
mov
lcall
pop
scas
bound
adc
xor
rcrb
inc
adc
sbb
es
xlat
xchg
enter
cld
adc
or
jns
pop
aaa
xchg
lret
stos
cmp
idivb
fwait
cmp
xchg
ret
add
fildll
lcall
adc
jg
lock
les
sbb
xchg
add
lock
xchg
outsl
jle
push
push
pop
pop
aaa
imul
jge
and
mov
add
lret
aad
enter
daa
lea
mov
scas
push
adc
adc
lock
fwait
int
lret
pop
sub
scas
dec
in
notb
jecxz
xor
pushf
cs
fbstp
push
cmp
or
pop
push
add
je
imul
sbb
sbb
or
ds
sbb
cltd
mov
loopne
jnp
sbb
mov
dec
addr16
mov
aaa
ljmp
pop
es
jno
test
out
outsl
and
cmp
ret
inc
sbb
mov
push
jmp
or
xor
ret
lret
add
add
addr16
mov
ljmp
mov
jbe
out
stos
sbb
data16
cmpsl
pop
pop
pushl
inc
lret
or
js
out
adc
sub
das
cld
jmp
repnz
adc
cmp
xchg
cld
mov
inc
xlat
mov
in
loopne
icebp
ret
xor
scas
and
xchg
ja
add
mov
pop
hlt
xchg
dec
lret
xchg
mov
mov
adc
sub
push
fists
lcall
adc
sub
dec
push
xchg
enter
lret
lock
imul
push
ljmp
xor
ds
ja
fimull
jbe
sti
cli
push
push
sub
stc
adc
ret
cmp
cmp
xchg
cmp
je
inc
push
call
sub
dec
mov
xchg
ja
dec
jecxz
xchg
movsb
es
nop
pop
xchg
jbe
sbb
adc
repnz
cld
push
out
jb
mov
sbb
mov
dec
ret
fs
pop
fnstsw
xchg
cmp
in
jne
inc
dec
std
dec
sarb
rcr
into
xor
and
cltd
pop
cs
adc
cmpsl
mov
cld
push
out
jb
cld
cltd
sub
sbb
pushf
sbb
cld
mov
imul
inc
pop
mov
adc
sub
dec
leave
mov
sub
mov
and
mov
outsl
sbb
push
or
xor
das
mov
scas
mov
fs
out
popf
in
mov
lret
sbb
push
push
jmp
dec
push
cmp
mov
mov
jle
decl
push
pop
int3
fdivl
mov
mov
xchg
loope
test
fcmovb
cmp
arpl
mov
cli
into
stc
xchg
fstl
push
push
sbb
loope
icebp
mov
popa
adc
mov
and
and
incl
cltd
addl
adc
ficoms
cs
sub
mov
jg
scas
push
sub
cmc
and
mov
pop
push
sbb
decl
enter
cmp
push
int
mov
mov
mov
pop
push
adc
shlb
inc
in
cmp
mov
ja
daa
adc
jns
inc
jp
mov
adc
lret
mov
jb
add
addr16
lock
cs
ljmp
loope
arpl
inc
push
iret
int
xorl
call
dec
add
sahf
inc
cmp
mul
test
mov
not
cmpsb
sbb
aad
sbb
mov
add
testb
jle
aad
mov
add
ds
gs
jnp
mov
test
popa
imul
ljmp
int3
push
mov
out
mov
mov
outsb
sbb
jns
mov
call
cmp
cli
dec
inc
cld
stc
stos
xor
in
pusha
jmp
pop
or
call
inc
pop
jb
sub
and
movsl
cmp
inc
sbb
mov
lock
mov
or
push
sbb
jl
jl
mov
add
push
mov
mov
adcb
into
inc
pop
out
outsl
adc
decl
cmpsb
and
mov
dec
daa
in
popa
pop
in
xchg
inc
in
rorb
xchg
pop
mov
push
sbb
xor
mov
pop
loop
ljmp
repz
xchg
repz
or
or
int3
mov
fdivrp
jge
sar
test
lret
unpcklps
jl
inc
movsb
push
rorb
mov
and
push
push
es
mov
jmp
mov
aam
vshufps
lock
cmp
push
xor
push
mov
xchg
and
lds
sti
mov
cmp
scas
aam
push
sbb
jg
pop
mov
cmp
inc
push
rcrb
jo
xor
mov
add
xchg
jno
pop
inc
cvtdq2ps
jecxz
filds
pop
enter
push
sbb
mov
arpl
ss
or
orb
inc
enter
cmp
sub
jp
mov
mov
pop
mov
mov
outsl
and
jge
ds
arpl
test
mov
clc
mov
sarb
int
or
js
lret
ret
push
and
pop
cmp
jo
cmp
sub
repnz
jmp
pop
fbstp
cmp
push
in
jle
or
cld
dec
pop
or
mov
loop
and
js
cmp
stos
or
push
call
xchg
mulb
leave
mull
mov
and
cmp
out
scas
and
push
ljmp
xchg
jle
es
iret
jmp
je
adc
clc
dec
loop
inc
add
xlat
ret
jbe
add
scas
sahf
pop
mov
jge
xor
push
call
mov
push
int3
lcall
testb
mov
push
adc
add
shll
push
mov
push
mov
lods
scas
push
ss
pop
ss
dec
push
jns
imul
inc
mov
test
xor
sbb
push
jns
mov
out
ficomps
lahf
mov
out
jp
pop
cmpsb
js
adc
and
mov
ss
jle
test
ljmp
mov
adc
cmp
xchg
sub
cmpsb
sti
pushf
int3
jne
scas
mov
cltd
add
mov
xor
rclb
je
inc
test
lods
push
xchg
pop
cld
imul
fmull
fstpt
dec
jmp
mov
sub
or
cmp
ss
decl
dec
pop
test
push
jl
int3
pop
mov
clc
inc
sbb
into
adc
or
or
pushf
jg
out
cld
pushl
or
test
sub
xchg
cmp
add
sub
xor
ja,pn
arpl
repz
dec
jl
fimull
daa
sbb
inc
adc
fcompl
stc
adc
cmp
out
jnp
xlat
push
or
mov
cwtl
add
sbb
int
adc
fs
or
inc
lahf
aaa
and
popf
xchg
push
jge
fmuls
mov
decl
mov
adc
mov
or
dec
fidivs
test
pushf
jmp
outsl
mov
pushl
mov
pop
pusha
push
incb
ljmp
out
call
jae
jns
fildl
dec
leave
dec
mov
lock
inc
dec
sbb
leave
out
push
cld
aas
shl
mov
rorl
mov
pop
xor
aas
inc
lea
into
rorl
je
fadds
stc
outsb
add
out
dec
mov
or
push
mov
xor
nop
adc
daa
mov
ds
xor
xor
mov
push
add
test
arpl
mov
addl
jns
lcall
sub
mov
lds
pop
sbb
sahf
in
jmp
lcall
push
rcrb
outsb
push
std
pop
outsb
push
push
shll
incl
loopne
xchg
adc
push
xor
jge
jbe
sub
add
outsl
popa
cmp
shll
adc
push
inc
out
mov
ret
not
or
mov
ja
xor
xorl
push
icebp
into
xchg
fwait
jmp
mov
sub
mov
mov
xlat
sub
enter
lret
pop
in
ds
andb
cld
das
sar
or
adc
sbb
into
and
push
fbld
fnstcw
jbe
pop
int
mov
mov
jg
push
insb
pop
mov
pop
icebp
testl
popa
insb
cli
mov
or
pop
dec
or
int3
mov
pushl
push
cwtl
xchg
sti
or
js
fisubrl
sbb
xchg
xchg
xchg
daa
lret
add
fwait
cmp
and
repz
repz
cmpb
cli
cwtl
push
inc
lcall
add
rcr
daa
xchg
mov
jmp
cmp
sub
cmp
icebp
dec
mov
sahf
dec
ds
iret
cli
dec
test
mov
adc
lahf
sub
cmp
sar
adc
mov
test
cmp
or
idiv
add
xchg
pop
popf
clc
lcall
xor
orl
push
push
push
push
ficompl
aad
ja
dec
test
jmp
mov
scas
mov
imul
mov
test
jmp
leave
or
add
jmp
mov
sbb
cltd
mov
inc
or
scas
dec
xor
jmp
pop
out
xchg
xlat
jbe
mov
sub
pusha
mov
jns
fistpll
cmp
cmp
dec
es
adc
mov
add
adc
cmp
push
sub
ficoms
or
dec
int
fsubs
lods
jle
outsb
mov
add
incl
or
pusha
or
jae
pop
dec
in
xchg
sbb
adc
or
or
lcall
mov
cmp
sbb
repnz
pop
fisttps
cld
sbb
jne
adc
push
popf
les
jo
xor
test
cmp
push
jg
loop
pop
sar
pop
test
fisubl
lods
xchg
push
je
out
clc
mov
rorb
mov
ret
pop
lods
js
repz
sbb
popf
mov
testl
inc
fsubl
push
xchg
popa
mov
movsb
je
push
cmp
mov
out
pop
out
sub
in
or
rclb
push
mov
test
icebp
je
sbb
stos
mov
inc
cmc
mul
and
into
das
in
mov
loopne
orl
adc
outsl
adc
pop
push
stc
mov
xchg
jnp
cmc
mov
mov
inc
xor
mov
test
add
jp
adc
cmp
push
ret
hlt
incl
call
push
and
xchg
sbb
pop
xor
inc
inc
sbb
xor
loopne
test
sbb
jp
and
call
inc
inc
xor
xchg
fbld
inc
inc
das
jbe
cmpl
dec
xchg
scas
push
pop
daa
push
cld
test
daa
lcall
std
fucomip
or
inc
ficoms
bound
or
lret
leave
xor
adc
push
add
out
mov
push
pop
push
xchg
popf
insb
cli
pop
adc
add
push
lock
adc
or
lods
cli
pop
sub
and
fistpl
pop
mov
xchg
inc
push
repnz
imul
lds
dec
cli
push
fisubrl
adc
fs
push
mov
fistl
stos
outsb
cs
xchg
sub
cs
mov
mov
jns
xchg
mov
jg
cmpsb
pop
filds
sbb
adc
out
in
mov
or
mov
fadds
in
mov
call
test
mov
dec
in
jbe
in
call
sbb
cli
xchg
inc
sbb
lcall
or
or
test
sbb
add
sub
sub
push
lock
xchg
cmp
dec
adcl
push
loopne
lock
add
mov
xlat
push
ror
aaa
pop
xor
lret
sahf
push
mov
aaa
aas
imul
dec
sbb
pop
jg
repz
mov
mov
inc
mov
jl
jne
sub
cli
clc
jg
push
sar
pop
sbb
inc
jb
call
jmp
cmp
cli
shll
in
test
cmp
fldt
cmp
adc
push
sub
popa
int3
xorl
call
loop
jg
gs
sbb
mov
fbld
sub
stos
adc
in
add
lds
cs
xorb
das
popf
repz
int3
rsm
push
in
cmc
call
pushl
mov
jbe
out
push
add
push
ficomps
in
add
stos
mov
ret
jg
cmpsb
scas
add
insb
pop
sub
outsl
push
call
jle
push
pop
push
and
xchg
jge
out
add
xchg
sahf
ret
inc
sub
ljmp
adc
dec
mov
xchg
sub
cmp
mov
xchg
push
mov
divb
clc
movsb
xor
das
cli
mov
cmpsb
cmp
clc
jno
sahf
sub
mov
cli
out
test
popf
jl
cmp
jle
call
loopne
dec
and
insb
adc
lret
stos
fcomi
and
incb
cwtl
inc
xchg
sti
mov
pop
dec
cmp
nop
xor
push
cmp
cli
sub
outsl
mov
or
es
lcall
sub
sub
mov
or
adc
mov
mov
sbb
jbe
or
mov
and
aaa
lret
scas
or
jo
or
loope
mov
push
jecxz
dec
adc
int
popl
aaa
in
test
xchg
pop
inc
lret
test
pushf
sub
imul
sub
or
addr16
nop
xchg
inc
sbb
lret
cmp
inc
out
icebp
sub
sub
ss
cmpsb
inc
test
mov
jbe
cmp
dec
fmulp
out
addl
sbb
std
inc
loopne
and
or
xor
js
lret
inc
or
fisttps
jp
and
add
daa
decl
orl
or
mov
in
decl
mov
mov
in
ljmp
mov
jmp
enter
hlt
cmp
push
cli
ljmp
cs
adc
mov
push
incl
movntq
cmp
cmp
xor
clc
ljmp
inc
add
sbb
push
stc
cmp
cmp
or
aas
xor
adc
cli
bound
xchg
insl
sahf
jnp
sub
mov
jmp
jb
out
inc
pop
jno
adc
call
jecxz
pop
sahf
mov
push
jno
scas
js
cmp
inc
push
mov
inc
mov
sub
mov
shrl
or
out
pop
adc
fdivl
das
dec
lret
adc
movl
xchg
jne,pt
punpckhbw
aaa
cmc
bound
xor
dec
cli
sbbl
jo
decl
xchg
aam
mov
bound
xor
pop
cmc
lcall
sbb
sub
jp
int
fwait
cld
adc
inc
pusha
lds
ss
xor
jbe
cmp
out
cli
push
test
hlt
pop
sub
arpl
sbb
mov
or
jg
pop
sub
inc
cs
mov
adc
and
enter
ja
pop
xchg
bound
lahf
mov
push
mov
popf
adc
jge
es
mov
fbstp
xchg
add
xadd
push
cmp
test
add
inc
js
scas
pop
sahf
sbb
mov
add
in
jle
push
sub
imul
inc
call
mov
inc
daa
fimull
mov
jecxz
sbb
scas
in
jno
xchg
fistl
fistpll
or
push
jns
sbb
aam
xor
push
pop
mov
ja
js
jnp
push
xor
jge
shrl
fmuls
fsubl
push
pusha
or
cmp
out
cmpsb
fimuls
ss
ja
xchg
popf
or
xchg
add
pop
or
call
mov
mov
adc
lret
add
xchg
test
idiv
test
xchg
cwtl
lahf
cmp
imul
lret
mov
add
ja
ss
ret
mov
jmp
call
rcrl
sub
or
jmp
xchg
cmp
dec
mov
xchg
shr
sub
ja
clc
sub
mov
mov
add
and
jle
push
or
mov
push
and
pop
sbb
inc
mov
test
mov
sub
xlat
int3
fiaddl
pop
cli
decl
cmc
fsubs
push
shl
addb
push
movsb
stc
int3
test
and
or
xlat
test
adc
out
push
adc
stos
and
fdivs
xchg
mov
mov
inc
stos
jg
sub
icebp
bnd
popa
mov
enter
aas
add
ss
mov
enter
xchg
outsl
out
std
cmp
and
jl
adc
adc
adc
stos
loopne
ljmp
clc
mov
sub
fnstenv
pop
jle,pt
jecxz
test
mov
movsl
repnz
push
popf
icebp
pop
add
cld
pop
leave
cld
xchg
adc
cmc
mov
ror
sub
push
pushf
out
lret
adc
nop
cs
jbe
into
mov
xor
mov
stos
idivb
mov
pop
cltd
test
mov
pop
inc
xchg
jle
mov
pop
push
out
lcall
mov
push
sbb
adc
fsubrs
into
mov
mov
addb
fisubrs
dec
push
add
push
add
int
icebp
push
sub
imulb
std
xchg
add
int
mov
or
jbe
in
dec
jb
pop
in
test
lea
push
inc
in
lods
jmp
je
popf
add
mov
push
testb
pop
out
aaa
push
cmp
shrb
mov
imul
imul
imul
repnz
enter
sbb
and
mov
clc
int3
xchg
xchg
orl
cmpsb
sbb
cmp
mov
pop
adc
mov
ljmp
divb
mov
data16
jmp
aas
imulb
call
popa
jmp
xchg
insl
hlt
cwtl
into
cmpsl
aad
jae
jmp
xchg
sbb
or
repz
jo
pop
loop
pusha
pop
fists
mov
push
push
out
movsb
sbb
fistpl
leave
dec
add
sbb
push
push
pop
mov
add
lods
mov
and
jae
mov
or
mov
mov
aas
sbb
xor
dec
mov
call
add
ds
dec
inc
cmpl
push
pop
jno
pop
inc
cli
mov
call
xchg
or
adc
insb
or
inc
mov
adc
fildll
out
stos
fcoml
or
cmpsb
outsb
out
sub
and
push
fcoml
sub
jl
sub
cli
push
lds
inc
std
fwait
jae
sahf
adc
cmp
repnz
cmp
cs
ljmp
mov
pop
mov
insb
shl
repz
mov
call
or
sub
mov
scas
cltd
popf
sbb
adc
ret
cmpsb
xchg
sbb
xchg
pop
fucomip
sbb
std
rcrl
movsb
or
push
or
roll
pop
movsb
sbb
cli
pop
and
mov
in
xor
and
jo
push
scas
clc
jnp
pop
out
daa
xchg
mov
movsb
out
bound
push
jmp
dec
xor
in
pop
push
lods
popf
fwait
in
fcoms
inc
and
cmp
add
mov
jo
int
bound
inc
nop
sti
ret
mov
sbb
dec
mov
jno
mov
mov
lret
mov
rcrb
mov
xor
xchg
daa
outsl
jmp
lahf
sub
out
into
mov
lahf
push
test
stc
or
adc
mov
jno
outsb
in
pushf
pop
out
sbb
sbb
lock
das
mov
sub
aaa
push
ljmp
sub
sub
sahf
sarl
push
inc
loope
push
xchg
pop
out
and
scas
les
clc
inc
in
in
inc
xchg
push
jnp
adc
ljmp
outsb
ljmp
filds
xor
cmp
aas
sahf
sbb
pop
add
dec
aad
adc
sbb
xchg
andb
xchg
mov
arpl
sbb
push
jle
lock
jno
or
in
cmpl
imul
pusha
addr16
nop
or
lcall
test
jo
pushf
lock
test
cs
std
mov
inc
outsl
or
imul
in
cltd
jnp
and
mov
push
jnp
orb
push
fisttpl
leave
fldpi
mov
inc
cli
pop
test
lret
adc
sub
icebp
out
test
cmp
and
inc
fbld
xlat
xchg
cld
call
cld
sbb
add
or
jmp
fidivrl
and
jae
fwait
ds
faddl
and
push
in
dec
push
icebp
outsl
cmp
mov
inc
into
out
mov
repnz
js
lcall
std
jg
sbb
and
pop
out
jo
mov
repnz
call
ret
cmpsb
cmp
adc
mov
out
aaa
cmp
xor
scas
or
loopne
cmp
xchg
mov
in
lds
hlt
stos
sub
lods
sub
js
xchg
cmpsb
inc
aad
dec
aas
add
sbb
es
or
sbb
outsl
pop
mov
lret
jo
stc
aaa
mov
and
pop
jecxz
les
cld
jg
aad
int
and
sbb
lahf
subb
sbb
xchg
cmpsl
call
fmuls
mov
mov
movsl
out
push
push
lods
adc
push
daa
enter
jg
mov
push
mov
cmp
xor
out
ja
push
mov
jmp
aad
xchg
dec
add
pop
fldl
clc
mov
mov
sbbl
mov
dec
and
pop
mul
shr
inc
insb
ja
cli
pop
jns
sbb
push
jo
pop
cmp
dec
test
mov
lcall
cmp
cmpsb
nop
mov
hlt
and
sbb
mov
sbb
or
test
dec
xchg
sub
fidivrs
pop
add
inc
insb
lahf
push
mov
jecxz
movsb
sti
mov
aad
mov
push
daa
pushf
pop
jno
push
nop
or
jns
mov
mov
cmpl
sti
ds
movsl
das
test
lcall
test
popf
in
and
movl
adc
dec
push
fsubrs
sbb
dec
mov
aaa
xchg
mov
test
xchg
mov
jno
jbe
xorl
pop
cli
jns
and
sarb
push
and
mov
decl
pop
nop
and
mov
adc
test
xor
mov
insb
mov
inc
adc
enter
and
inc
add
pushf
and
xor
decl
xchg
das
clc
pop
adc
push
insl
cltd
jl
cmc
daa
or
outsb
fcoms
ss
movsl
adc
add
mov
lcall
cmp
push
std
push
ss
addr16
or
xor
es
fisubrl
in
mov
add
pop
push
ja
in
mov
insl
xchg
lea
push
test
hlt
sub
mov
fdivrs
mov
out
mov
xor
mov
push
dec
mov
adc
push
ret
jno
pop
dec
into
ljmp
jecxz
add
or
gs
inc
movb
mov
cltd
test
mov
imulb
jp
ja
loope
cmpsb
add
pop
mov
sub
push
out
aam
lods
mov
cli
insb
and
push
inc
jmp
inc
dec
aas
arpl
stos
push
ljmp
movsb
stc
mov
repz
out
inc
pop
shlb
cmpsb
call
lea
sti
xchg
pop
call
cli
jb
sub
stc
pop
mov
inc
imul
cs
inc
push
movb
mov
sti
adc
popa
lods
add
push
inc
push
dec
or
pop
ret
stos
negl
gs
punpckhbw
mov
dec
jge
lcall
jns
ret
or
inc
sbb
lods
add
add
jmp
xor
jge
mov
or
fwait
adc
or
fildl
pop
ljmp
pop
push
add
mov
test
stos
cmp
xor
lock
mov
or
cmp
and
shll
jbe
mov
call
xor
adc
fcomip
mov
pop
cmpsb
fbld
mov
push
inc
cmp
mov
mov
push
xor
cs
out
mov
fistps
aas
sbb
inc
ss
mov
xchg
inc
rorb
and
inc
scas
cli
mov
aad
inc
and
xchg
xor
pushf
and
sbb
jg
decl
fstps
daa
adc
incl
fdivs
ds
pushl
test
std
mov
cmp
push
xor
lea
dec
push
mov
and
mov
out
mov
mov
mov
xor
stos
lret
int
inc
jp
add
rolb
pop
mov
xor
incl
and
fstpl
adc
rcrl
sbb
jl
js
add
int
sub
push
ljmp
jl
jmp
pop
nop
push
jmp
decl
jns
mov
stos
cmpsb
xor
aam
cs
cmp
lcall
mov
xchg
mov
stc
cmpsb
cmp
sbb
shrl
inc
xor
bound
sbb
add
xorl
mov
clc
mov
xchg
scas
cld
dec
cs
sbb
lcall
inc
sarl
cmc
pop
add
cmpsb
sbb
inc
cmpsl
xchg
pop
inc
orb
stos
xchg
mov
and
jbe
mov
pop
sbb
cmp
repnz
daa
xor
jge
outsb
and
or
add
cmp
decl
scas
outsb
lcall
scas
lahf
inc
ror
stc
pop
sahf
mov
cmp
or
pushf
fdivl
add
push
inc
push
cld
ja
fldl
pop
shll
mov
aad
repz
inc
or
outsb
or
decl
loopne
mov
add
inc
imul
cld
xchg
adc
push
mov
jle
pop
rcl
bound
ret
into
push
lret
dec
adc
pop
out
pop
ja
repz
jle
adc
popf
mov
and
dec
xchg
or
mov
mov
lret
cmp
fiadds
fdivrs
leave
jmp
imul
sbb
hlt
lcall
mov
cmp
push
xchg
insb
sbb
and
xchg
movsb
cmp
lds
cli
fcmove
and
call
fbstp
mov
mov
cmp
or
pop
xchg
xorl
popa
bound
daa
enter
stos
pop
jno
dec
mov
fwait
ljmp
imul
sub
lahf
xlat
loopne
xchg
sub
cmp
stos
pop
sub
xchg
ljmp
xchg
aaa
sbb
clc
pushl
adc
add
repnz
pushf
icebp
ret
dec
pop
xchg
enter
fldcw
ds
inc
xor
icebp
adc
push
cltd
mov
push
imul
adc
adc
adc
inc
cwtl
int
ljmp
aaa
adc
mov
and
sbb
xchg
cld
add
xor
xchg
rorl
sti
ljmp
push
cld
mov
mov
ret
aad
fistps
sahf
test
mov
xchg
call
or
out
xchg
lret
jg
xchg
pop
pop
jo
or
aas
enter
fstl
in
pop
xor
jmp
sar
imulb
xor
aaa
test
sub
es
bound
sbb
in
call
push
push
mov
add
xchg
int3
jmp
repnz
mov
xor
add
seto
sub
mov
daa
aam
movsb
push
mov
ss
mov
push
incl
cwtl
cmc
xadd
cmpl
stos
sbb
xchg
lock
xchg
mov
mov
add
sahf
jb
jecxz
shll
test
push
data16
xor
add
mov
add
jg
cmp
repnz
js
fcmovbe
push
xchg
enter
jg
sub
cli
into
lret
enter
aaa
std
nop
int3
fisttps
insl
push
cmp
push
cmp
lcall
insl
xchg
js
clc
and
and
cld
int
adcb
mov
push
cli
cmp
push
mov
sub
xchg
push
repz
dec
mov
push
push
cmp
fldl
and
xchg
int3
or
in
sbb
xlat
das
popa
cmc
out
cli
inc
cmpsb
and
pop
adc
notl
lcall
inc
push
stos
stos
sbb
daa
bound
add
lahf
sub
rcr
rcll
aaa
pop
cwtl
cmc
cmp
xor
scas
mov
ret
mov
enter
xchg
outsl
dec
imul
or
mov
adc
jne
xor
int3
inc
and
dec
insb
adc
cmp
aad
or
test
adc
or
cmpsb
jae
cmp
xchg
je
mov
xchg
ljmp
mov
int
sahf
or
fbstp
mov
or
in
xchg
xor
ds
sub
lcall
popf
mov
ds
fstpl
stc
fbld
ret
rolb
aad
leave
lret
ds
dec
sbb
mov
mov
xchg
or
test
aad
cli
xchg
ds
xchg
lods
add
cmpl
mov
icebp
push
loopne
cs
icebp
mov
lods
outsl
sbb
in
jb
filds
cmp
out
ljmp
aaa
push
sub
fstp
mov
fiaddl
mov
cld
sbb
in
sbb
fsubs
fisubs
mov
pop
add
add
sbb
incb
hlt
out
sbb
push
dec
xchg
jns
dec
loope
pop
cmc
mov
pop
adc
dec
jle
mov
add
test
inc
sub
stos
notl
dec
dec
fcomi
es
pop
lcall
or
fmull
rcr
mov
jo
daa
xchg
jl
aaa
std
add
imul
repz
ljmp
jno
sub
add
adc
xor
sub
cmpsb
mov
and
out
sbb
data16
out
loope
and
cmp
call
flds
std
cmp
rol
cli
inc
aaa
popf
jnp
mov
repnz
inc
add
enter
js
sub
call
pop
push
mov
lret
decb
lret
shr
sub
add
or
leave
sub
mov
lret
push
into
pop
incl
adc
clc
hlt
xchg
dec
stc
pcmpgtw
mov
call
aaa
push
aaa
pop
cs
out
mov
nop
int3
leave
add
sub
int
orb
movsb
enter
sub
loop
in
cmp
or
shr
jmp
clc
pop
fwait
mov
jo
cmp
sbb
outsb
add
ljmp
test
movb
ljmp
das
mov
sbb
push
push
and
mov
pop
clc
push
pop
mov
mov
mov
loop
ljmp
pop
das
outsb
scas
mov
bound
or
xchg
rol
in
test
call
sahf
decb
inc
xchg
or
cs
adc
add
xchg
daa
or
ss
cmp
lds
outsl
idivb
xchg
mov
in
fcmovne
pop
mov
outsl
push
pusha
int3
rcrb
jp
add
jae
push
loope
test
aaa
inc
lods
int
push
lahf
mov
loopne
pop
mov
sub
loop
cs
loop
loop
push
jg
ss
ret
pop
mov
jo
sub
dec
adc
sbb
push
sub
loopne
mov
adc
and
pop
sbb
adc
arpl
mov
cmp
or
shrb
xchg
jmp
xchg
outsl
xor
lock
cmpsb
into
xor
dec
nop
imul
loopne
xchg
mov
mov
sub
push
sub
push
sub
stc
aaa
cmp
adc
or
shll
sbb
psubq
and
xchg
aaa
in
lcall
mov
cmp
rcl
or
push
sub
xchg
push
imulb
mov
push
inc
mov
inc
jo
daa
sbb
out
xchg
stc
adc
mov
mov
scas
ret
leave
push
mov
fsubrs
pushf
and
cwtl
lret
pop
aas
fwait
jg
std
and
lock
add
cmp
aaa
lea
stos
push
orb
add
mov
mov
mov
pop
mov
ret
stos
and
lock
jb
push
enter
js
jbe
push
cltd
cmpsb
je
pop
inc
mov
movsl
leave
fidivrl
fidivs
cld
xchg
cmc
jmp
xor
adc
in
adc
in
cmp
mov
push
stos
jno
fcmove
aaa
push
test
sar
jne
mov
xor
mov
or
lret
mov
or
inc
jmp
sahf
jg
mov
pop
je
sub
or
jg
mov
mov
and
push
pop
daa
fbstp
xchg
xchg
add
fld
sbb
dec
arpl
mov
cld
ljmp
lret
dec
repz
inc
or
rsqrtps
clc
lcall
mov
and
int
push
mov
cmp
stos
sub
cmpl
pop
mov
loopne
call
pop
adc
iret
xor
or
pusha
mov
fcompl
push
lods
sahf
sbb
cli
sub
cmp
pop
fildll
daa
cmp
pop
cltd
fistps
out
or
pushf
movsb
ss
inc
fwait
int
push
scas
cli
daa
inc
xchg
insb
cmpsb
pop
pop
sub
loop
fidivl
stos
adc
testl
in
cmpsl
pop
fidivrs
icebp
jg
add
mov
adc
push
test
popl
jle
adc
and
ss
sarl
lret
test
cmp
mov
jge
sbb
jg
popa
call
xor
cmp
std
sbb
int
push
inc
test
shrb
sub
insb
cmp
in
push
decb
mov
dec
filds
sbb
xchg
cmc
mov
imul
mov
bound
xchg
je
push
mov
cmc
lds
shrb
or
std
jg
daa
sub
pop
cmp
cli
cmp
std
xor
es
lcall
xchg
cwtl
pop
stc
insb
pop
scas
cltd
nop
stos
inc
adc
leave
cmp
or
adc
jg
lret
push
mov
dec
mov
xchg
jmp
data16
inc
inc
inc
decl
jmp
bound
adcl
pop
cs
push
lret
decl
lahf
imul
scas
repz
paddsw
xlat
pusha
icebp
jg
dec
and
add
cmp
in
in
fldenv
outsl
and
ret
cs
out
mov
inc
pop
test
clc
mov
add
out
jmp
sbb
cmp
mov
or
shrb
mov
mov
lret
xor
cs
mov
sbb
fimuls
lods
pop
ret
sbb
add
sti
cld
aam
cmpl
fisubs
mov
mov
shl
jg
mov
popf
repnz
addr16
mov
xchg
ds
cmp
mov
mov
sbb
pop
push
pop
aad
and
mov
xor
mov
in
ja
imul
lods
lods
jmp
xchg
dec
sbb
fsubrp
fisubs
popa
sbb
jg
push
sti
hlt
jne
dec
pop
clc
mov
xor
sub
in
sbb
in
test
sarb
js
cmp
outsb
stos
out
lcall
push
mov
dec
xchg
jo
mov
mov
adc
sarl
mov
xchg
cmp
inc
call
cmp
mov
pop
cmpsb
aas
fcos
in
xchg
mov
xor
dec
aas
xchg
out
xor
adc
js
adc
leave
xchg
jno
push
std
bound
xor
mulb
stc
sbb
into
sahf
mov
sbb
int3
adc
jle
mov
push
adc
mov
add
mov
jmp
pop
jo
les
mov
push
cld
decl
hlt
mov
hlt
or
in
sbb
cs
inc
pop
mov
call
pop
cli
outsb
sub
mov
out
sbb
mov
enter
jle
scas
xor
pop
adc
std
xchg
adc
inc
sub
ss
push
cmp
arpl
mov
pop
loopne
cmpsb
test
pop
sahf
js
ficoms
or
in
flds
lret
cwtl
ljmp
pop
cmp
mov
cmp
ds
arpl
pop
insb
cld
pop
and
pusha
xchg
push
xchg
lcall
jle
fiaddl
mov
push
push
jne
leave
loope
stos
mov
mov
fsin
das
mov
negb
adc
pop
setns
xor
mov
jp
xlat
in
sbb
or
or
das
sbb
sub
lahf
pushf
faddl
aam
clc
mov
hlt
fmulp
or
or
jg
dec
sub
lcall
mov
out
cmp
jecxz
dec
jg
xchg
jb
xchg
adc
das
cmp
fstl
ret
cli
das
dec
mov
sub
mov
outsb
adc
pop
into
ret
adc
rcr
repz
mov
pop
mov
test
mull
ljmp
pop
test
fmulp
int3
pusha
movsl
decl
jge
or
mov
adc
sar
mov
std
jge
subl
jns
aaa
or
jb
scas
lahf
out
push
xor
decl
add
push
adc
jae
and
lahf
push
sbb
jecxz
icebp
mov
add
xor
daa
int
xchg
stos
mov
adc
mov
dec
imulb
int
and
ss
in
in
push
clc
aad
insb
adc
jmp
pop
icebp
jnp
ljmp
inc
loopne
sbb
mov
faddp
iret
rcrb
inc
aas
pop
loope
and
ljmp
dec
push
or
add
cmp
sub
outsb
andl
outsl
xor
popa
jp
repnz
fcmovne
cmp
call
dec
xor
incl
lea
leave
fdiv
fnstsw
cli
jbe
bound
or
js
and
sbb
cld
mov
push
dec
js
cmp
ss
push
clc
fistl
jbe
into
push
hlt
in
mov
mov
icebp
pushf
out
sub
cs
xor
shrl
ret
mov
imul
fcoms
je
jb
shlb
cwtl
fists
leave
shr
jae
std
cs
push
fsubrs
movsl
cmp
xchg
mov
adc
leave
cmpsb
or
push
cmp
ja
inc
jg
imul
mov
into
adc
lret
minps
pushl
add
iret
or
pop
mov
push
das
hlt
test
ret
ficoml
xchg
pop
decl
inc
and
repz
xchg
int
mov
adc
lret
adc
pop
add
mov
sub
jge
fistps
movsb
negb
pop
outsl
mov
jmp
and
add
add
shlb
xor
ljmp
or
sbb
out
jno
out
movsl
mov
xor
divb
add
adc
adc
fiaddl
adc
push
push
xor
sbb
daa
repz
sbb
or
je
sbb
shl
mov
or
es
pop
ficompl
shr
cmp
fwait
cmp
add
xchg
ljmp
mov
data16
dec
xor
stc
movb
mov
and
sbb
leave
dec
jle
js
call
mov
xor
xor
or
movsl
stos
sub
dec
pop
jp
ficoml
or
pop
pop
repnz
mov
jp
loopne
adcb
sub
fidivl
stc
adcb
add
push
cmc
clc
jl
push
sub
outsb
adc
fisubrs
push
cmp
hlt
mov
mov
inc
ds
mov
push
js
mov
test
mov
jg
push
clc
dec
dec
in
mov
mov
cmp
loop
push
sbb
or
mov
xlat
mov
adc
f2xm1
aas
dec
push
sbb
adc
loope
pop
xchg
add
mov
push
xchg
pop
xchg
inc
out
ja
aaa
add
push
xchg
imul
nop
mov
xor
clc
mov
notb
scas
sub
decb
mov
lcall
xor
out
filds
pop
cmpsb
mov
jl
sub
push
ds
and
mov
mov
sub
call
stos
incb
das
ljmp
add
fsts
xor
push
repnz
mov
cltd
bound
adcl
mov
insl
clc
inc
cmp
xchg
xor
push
inc
clc
push
mov
aas
mov
pop
ror
daa
push
adc
std
cmp
pop
mov
hlt
out
movsb
icebp
cmp
cmp
cmp
loop
sbb
jb
push
cmp
scas
cli
dec
pop
mov
push
or
fldcw
ficompl
mov
jle
and
sub
add
ljmp
push
movb
adc
shrb
lock
mov
or
add
decl
scas
cmp
ja
hlt
out
sub
sbb
sbb
neg
ret
mov
rorb
or
fdivrp
jno
loopne
dec
inc
out
inc
mov
call
jecxz
subl
jne
aas
mov
pop
movsl
mov
mov
icebp
decl
sbb
call
out
js
xorb
dec
mov
xchg
mov
es
bound
loope
clc
fisttps
xchg
ret
xor
dec
lods
xor
pop
enter
push
jno
fists
ljmp
mov
stc
cmp
inc
xchg
cli
fwait
int
bound
or
into
popf
int3
inc
loopne
out
out
inc
jge
mov
std
cmp
jbe
push
leave
lret
lock
cli
or
xor
loop
pop
lcall
fisubl
jg
push
xor
lds
sbb
lret
mov
mov
xchg
adc
pushf
adc
lock
rclb
pop
inc
mov
add
mov
les
cmp
push
es
cli
test
outsb
jne
in
and
ret
xor
jns
ljmp
cli
inc
loopne
ror
loopne
cmp
out
les
stos
in
or
jo
pop
pop
icebp
outsl
mov
inc
lods
pop
dec
mov
mov
ds
in
bound
scas
pop
push
sbb
mov
shl
mov
jo
pop
lods
jmp
lret
aas
daa
lds
xor
lcall
gs
and
mov
or
push
aas
in
fdivp
mov
and
daa
loopne
ljmp
inc
into
sub
inc
popf
addr16
lods
pop
inc
ljmp
clc
pushl
jmp
or
jnp
adc
inc
out
cmp
jl
sbb
sbb
add
or
scas
mov
aaa
push
push
sbb
mov
jmp
sub
or
mov
mov
pop
daa
imul
inc
roll
in
dec
ds
sbb
repz
add
bound
orl
ret
stc
pop
jo
add
jo
mov
out
jl
jb
outsl
les
push
ds
daa
and
xchg
sar
je
imul
push
jbe
sub
mov
xor
adc
push
loop
outsl
dec
push
pusha
and
lea
sbb
jmp
mov
divl
sbb
adc
mov
int3
xor
xor
xor
jbe
repnz
dec
pushf
ficoms
xorb
jo
fadds
pop
sbb
dec
add
leave
cmp
mov
xchg
scas
fistps
adc
outsb
sbb
xor
rol
in
and
ja
and
mulb
lock
mov
and
cmp
xor
outsl
and
push
ret
pushf
leave
xor
ret
adcb
mov
adc
inc
adc
rolb
ret
sbb
pop
xor
aas
jo
mov
sahf
call
in
ljmp
mov
enter
mov
sbb
es
lock
xchg
ficoml
mov
mov
aas
push
sbb
sbb
inc
cwtl
lret
jp
or
jg
fnstenv
popa
push
stos
fsub
insb
or
or
jbe
incl
sbb
jne
outsl
cmpsl
test
mov
ds
dec
fisubrl
adc
mov
cmp
cld
scas
mov
and
mov
push
test
adc
incl
test
sub
test
sub
xchg
sarb
push
ja
sbb
mov
inc
add
or
push
sbb
mov
mov
fisttps
sub
in
xor
rolb
insl
and
arpl
clc
ljmp
inc
push
adc
cmp
daa
cmp
sti
or
pop
mov
adc
imul
cmovb
insb
cmc
cli
aas
add
mov
inc
adc
inc
or
lcall
loop
dec
mov
push
push
adc
mov
mov
std
and
pop
mov
sbb
inc
sahf
inc
pusha
cwtl
jle
cld
scas
sub
mov
xor
push
or
out
adc
lods
and
sbb
ss
inc
jns
out
popa
sbb
dec
fwait
enter
out
data16
aaa
sbb
les
jb
adc
xorl
ds
push
push
fs
out
bound
mov
xchg
mov
jg
cs
jecxz
icebp
fs
or
lds
es
lock
xchg
push
pop
aam
cwtl
jae
daa
and
scas
jbe
fs
cmp
adc
hlt
jnp
add
pop
push
jmp
lahf
push
pop
mov
mov
and
mov
inc
call
mov
cmp
loope
xchg
sbb
pop
out
pusha
jge
adcb
les
mov
add
and
sahf
adc
inc
clc
sbb
sbb
xchg
pop
clc
call
push
in
mov
dec
int
and
pop
inc
int3
sub
xchg
in
aas
sbb
shr
sub
jg
outsl
sub
into
and
or
sbb
push
fmulp
push
cs
divb
push
pop
dec
inc
cmp
test
pop
in
sbb
pop
inc
pusha
test
sub
mov
cmp
and
inc
repz
pop
sub
cmpsl
fwait
test
push
dec
mov
ss
repnz
add
loopne
mov
xrelease
mov
fisubrl
cmp
pop
ljmp
add
lock
sub
xchg
mov
and
xchg
mov
xchg
jecxz
add
test
cmpsb
push
push
clc
or
pusha
andb
push
in
ret
ja
jno
fildl
jo
popa
les
mov
xchg
inc
icebp
add
push
clc
fwait
dec
and
clc
insl
mov
sbb
orl
pop
into
lahf
decl
xor
daa
jo
push
inc
pop
das
push
lret
lcall
mov
xor
xchg
fldcw
inc
mov
lcall
push
test
adcl
int3
or
sbb
pop
scas
mov
cmp
mov
pop
loop
iret
repnz
rcrl
into
mov
sahf
fbld
sbb
call
inc
jnp
sub
dec
add
add
les
jno
jmp
xchg
ficoms
insb
sub
or
add
or
lock
loopne
lods
mov
add
sub
jg
adc
push
inc
xor
fidivrl
add
dec
pushaw
and
jg
xchg
push
or
sub
ja
cmp
pop
bound
cld
ret
decl
mov
aam
cmp
jp
dec
iret
or
push
inc
push
mov
in
inc
call
lcall
loopne
mov
jl
les
pushf
inc
pusha
fs
fisttps
test
das
mov
in
push
adc
incl
test
xchg
dec
xor
or
bound
mov
jecxz
or
push
adc
xor
hlt
outsl
add
movsl
push
decb
pop
pop
pop
push
sbb
data16
decl
push
lcall
pop
pop
data16
cmp
shll
xor
das
xor
orb
test
pop
js
mov
aaa
loopne
shrb
xchg
or
cltd
jge
and
repnz
pop
repnz
inc
add
ds
xorl
int3
mov
xor
out
mov
xchg
es
loopne
mov
lds
shll
inc
push
or
das
mov
xchg
sbb
add
inc
cli
sub
xchg
bound
in
cmc
clc
decl
mov
lahf
into
loopne
es
mov
or
inc
les
repz
inc
xor
pop
xchg
incl
out
inc
jg
incb
xlat
ficoml
or
in
lcall
mov
stos
add
dec
mov
je
inc
call
lret
cs
xchg
call
cmpsb
xchg
icebp
jns
mov
sbb
repnz
mov
out
xchg
cmc
cmovo
rolb
shlb
fwait
pop
scas
test
xchg
lret
rorb
int3
imul
xor
lret
and
xor
jl
pop
mov
jo
ret
adc
out
int3
sbbb
clc
pushw
pop
mov
jecxz
inc
and
scas
xor
jge
stos
sti
dec
or
inc
outsl
cltd
stos
shl
out
pop
and
getsec
test
out
push
jg
test
lret
loope
mov
shll
add
push
inc
cs
pop
mov
jnp
pop
jg
mov
sarl
out
mov
and
add
faddl
jp
xchg
out
jmp
call
loopne
pop
mov
cmp
dec
cmp
rcll
dec
jl
lock
out
push
in
ljmp
test
mov
jae
ror
inc
loop
mov
aas
fidivs
add
call
dec
and
ret
jg
pop
add
sub
testb
psubw
and
repnz
adc
pop
aad
out
sbb
mov
mov
sub
test
jo
pop
enter
ljmp
jnp
and
dec
cs
mov
test
add
jmp
and
out
pushl
mov
push
or
lods
fldcw
fmuls
push
mov
push
icebp
push
stc
sub
sahf
stos
mov
cltd
inc
jno
lahf
mov
jne,pn
xchg
dec
push
jnp
test
addl
aam
sub
adc
pop
in
into
es
dec
xchg
subb
jo
pop
rorb
dec
mov
pop
xor
aas
dec
inc
xor
push
gs
lahf
mov
ja
test
fldl
xor
das
inc
xor
pop
in
lea
or
mov
and
ss
aad
ficomps
dec
jns
mov
dec
subb
push
es
divl
stos
adc
les
or
inc
aaa
in
testb
xchg
cmp
and
sbb
cmp
mov
jg
add
jne
es
addr16
ret
ljmp
std
shrl
stos
cmp
incl
decb
es
sbb
cwtl
ds
insl
mov
xlat
clc
out
in
test
xchg
cli
xchg
fildl
pop
or
jns
pop
inc
test
cmp
and
popa
cmp
int3
sub
ja
aaa
sbb
or
or
push
ret
int3
and
data16
in
pop
arpl
or
pop
cmpsb
mov
cli
lods
out
mov
stos
mov
loopne
or
sbb
aas
adc
adc
clc
iret
sbb
adc
xchg
sbb
out
mov
loope
mov
sub
lret
and
push
fstp
dec
adc
pop
cmp
sbb
mov
sahf
cmp
roll
lcall
sbb
adc
or
xor
test
incb
sbb
fbstp
sub
in
sub
scas
pop
stos
cwtl
cli
ds
scas
push
test
pushf
das
adc
scas
es
in
fisubrl
fs
xchg
pop
mov
call
hlt
xchg
jle
xor
call
sub
mov
fisubl
adc
pusha
push
loop
or
nop
js
loope
jb
push
sbbb
sahf
orl
mov
cli
cltd
stos
lcall
xor
push
push
and
or
call
cmp
aas
clc
add
xchg
ret
xchg
lahf
sub
mov
aaa
jmp
push
fidivrs
mov
cli
ret
sti
xor
sbb
pop
dec
cld
and
adc
inc
adcb
adc
sub
mov
xor
das
cmp
mov
adc
xor
cmp
jmp
xorl
push
xchg
sub
adc
adc
or
mov
sub
in
cmpsb
imul
add
in
ljmp
sbb
imul
leave
mov
testl
loop
mov
xchg
cmp
xor
sbb
push
and
mov
outsl
js
mov
test
pop
add
add
and
cs
pushl
sbb
mov
push
or
lret
shll
in
adc
jmp
cmp
mov
or
ljmp
cmp
loop
jns
push
ljmp
add
mov
pop
iret
mov
daa
lds
lods
push
les
loope
add
mov
xchg
clc
lret
fs
pop
add
xchg
dec
push
in
mov
notb
adc
adc
lcall
outsl
push
add
and
arpl
and
inc
and
insl
pop
in
adc
sub
push
fisubrs
mov
mov
leave
xor
xor
fcmovbe
call
push
fwait
ja
stos
imul
sbb
movsl
jg
mov
int
adc
je
fnstenv
xchg
mov
lret
sbb
cmp
pop
mov
es
cltd
xchg
lahf
dec
cmc
pop
lret
jno
add
inc
call
jo
clc
daa
inc
fs
pusha
cmp
jns
roll
negl
fsubrl
pop
pop
jne
movsl
aaa
fld
dec
cwtl
movsb
dec
mov
sub
cmp
or
cmp
xchg
push
movsb
fists
push
clc
ja
stos
cmpsl
popa
fdivs
out
repnz
xor
mov
call
sub
xchg
mov
inc
and
push
popf
add
or
xchg
incl
outsl
cmp
mov
stos
sbb
push
sbb
call
lcall
jb
aaa
or
push
outsl
jle
stos
pop
fcomps
stos
xor
sbb
mov
pop
sub
pop
out
jge
test
inc
cwtl
sub
mov
js
xchg
xor
iret
jg
icebp
add
push
in
or
popf
mov
cmp
idivl
adc
push
fadds
lahf
add
xchg
sbb
mov
xchg
jle
mov
dec
mov
pop
rorb
push
xor
cmp
imul
mov
add
outsl
mov
ljmp
shr
pop
fildll
add
clc
push
mov
mov
mov
arpl
lahf
mov
add
push
test
mov
sbb
imul
xlat
std
call
lcall
decb
lcall
pop
enter
adc
dec
sub
mov
das
nop
mov
pop
insb
push
cmp
xchg
loopne
adc
jecxz
repz
out
jno
cmpsb
push
cmp
jo
mov
xor
pop
mov
jne
add
jl
das
inc
enter
pop
xor
inc
and
mov
jge
add
lods
mov
inc
imul
dec
test
sbb
icebp
push
es
sbb
cmp
cmpsb
inc
movsl
fcomp
sarl
aaa
ljmp
push
pop
lock
sarl
mov
scas
and
roll
pop
dec
lahf
cmp
adcl
mov
and
mov
adc
push
mov
cmp
mov
stos
mov
mov
pushf
negl
fdivp
push
fsubrs
call
clc
sbb
xchg
fnstsw
mov
gs
pusha
negb
xchg
cltd
mov
ljmp
arpl
loopne
inc
push
mov
insl
daa
xor
cld
pop
ds
addr16
lock
fbld
clc
dec
loopne
add
mov
pop
jmp
add
lret
sarl
mulb
pop
adc
lahf
pop
push
pop
push
inc
cmp
out
shl
lret
cwtl
sub
mov
negb
push
dec
jp
jg
dec
mov
add
cli
inc
jle
add
xlat
push
jae,pt
and
sub
cmp
push
inc
jle
mov
cmpsb
mov
es
shlb
out
test
xchg
and
aam
mov
xchg
clc
aas
and
daa
add
leave
sqrtps
inc
addr16
shr
mov
int3
es
xor
mov
pop
cwtl
xchg
dec
sub
ficompl
bound
ljmp
mov
mov
fcoms
xchg
outsl
xchg
rclb
push
mulb
and
and
mov
mov
push
lret
or
arpl
adc
lock
jns
cld
sbb
inc
cmpsb
cltd
sarl
andl
cli
lcall
sbb
or
fistpl
andb
fwait
lods
and
and
jns
jb
inc
inc
push
bound
push
adc
jecxz
mov
arpl
fildl
movsl
jne
ss
and
pop
adc
add
jb
mov
inc
jmp
pop
inc
xor
ss
out
sti
xor
notb
mov
testl
inc
pop
sub
xor
and
add
adc
icebp
jle
daa
push
popa
or
sbb
pop
sbb
ljmp
cmp
lret
sarb
or
mov
imul
mov
and
mov
idivl
sbb
ljmp
mov
pop
xchg
push
ljmp
dec
push
cs
int3
or
in
sbb
pop
loope
mov
pop
imul
stos
jbe
push
xchg
outsl
mov
movsb
pop
sub
sbb
push
outsb
and
xor
sbbb
imul
jae
mov
jns
sub
sub
pop
push
stc
xchg
cwtl
mov
xor
sbb
add
mov
jae
pop
or
cmc
ja
adc
push
jbe
dec
push
cmp
subb
aas
popf
pop
push
and
cmp
loop
jg
add
push
sbb
cmpsb
in
lcall
popa
test
frstor
call
test
test
movsl
leave
jmp
pop
icebp
push
mov
sbb
inc
pop
cltd
jbe
and
mov
pop
mov
daa
cmp
sti
xor
pop
dec
jne
ds
jp
xorb
inc
pop
cmp
add
push
mov
jo
int
gs
push
gs
aas
mov
ret
dec
lahf
xlat
pushf
out
inc
cmpsb
jmp
pop
mov
ss
push
sub
mov
jbe
orb
and
push
dec
jle
je
and
dec
dec
sahf
ss
mov
aas
mov
cs
sub
cmc
add
or
mov
scas
lret
add
lret
add
or
ret
dec
and
call
clc
test
cli
repz
test
push
cmc
add
mov
xchg
call
clc
add
xchg
lret
imul
pop
jge
stos
mov
sbb
jns
out
adcl
cmc
aas
fnstsw
cmp
testl
ss
out
std
aam
sub
inc
test
cmp
pcmpgtd
xchg
sbb
add
cmp
sub
in
mov
sbb
push
mov
cmp
inc
testb
loop
jg
and
inc
aaa
mov
or
rcll
lods
or
scas
pusha
jl
jbe
pop
scas
out
testb
pop
imul
ret
fisubl
movsl
sub
push
mov
js
cmpsl
imul
jmp
mov
call
in
xchg
push
shll
xchg
out
clc
ret
sub
fildll
ret
aaa
inc
pop
jmp
dec
je
dec
mov
xchg
mov
cltd
bswap
lahf
hlt
push
js
sub
and
mov
xchg
and
xchg
dec
pop
idivl
add
and
mov
pushf
mov
jp
lahf
ljmp
jo
fdivrs
out
xchg
sbb
or
cmp
frstpm(287
les
cmp
lock
xchg
mov
jbe
iret
cmc
jg
push
div
lds
xlat
hlt
jnp
mov
mov
lcall
cwtl
aas
shlb
jbe
fisubrl
cld
imull
in
sar
call
ret
mov
mov
pop
gs
gs
notl
fdivr
lcall
fadds
repz
adc
enter
rorl
mov
inc
aad
popf
pop
shl
cmp
outsl
sub
iret
dec
push
mov
cs
std
cmp
leave
xor
out
jecxz
inc
stc
add
test
dec
mov
loope
sti
mov
faddp
clc
out
jg
inc
cld
rcrl
fwait
pushl
repz
loopne
aaa
or
test
push
fsubr
jmp
or
das
adc
fwait
push
divl
scas
sub
xor
and
sbb
fnstsw
inc
push
call
out
sarb
add
xor
in
mov
jmp
add
jle
test
push
cmp
ret
jecxz
cld
aas
adc
movb
rorl
aas
out
cli
push
cmpsl
or
fs
fsubrl
stos
hlt
jle
incb
or
or
and
sbb
clc
daa
add
lret
xor
ljmp
lret
cld
ror
lods
in
testb
sub
lahf
movd
pop
sti
in
in
cmp
xchg
push
sub
pushl
fimull
aaa
in
rcrb
adc
mov
dec
incb
pop
data16
or
fucom
shr
stc
cmovb
lret
out
fmull
jmp
lock
ret
or
cmpsb
ja
push
fidivrl
dec
aas
adc
jg
jg
inc
stc
pop
inc
sub
cmp
rcl
ret
popa
int3
inc
into
pop
and
inc
ffree
aam
pop
rolb
fsubrl
fidivl
add
insb
sbb
adc
push
cld
cmp
enter
dec
imulb
sti
lods
lret
enter
lock
cld
push
shl
lods
xchg
lds
or
loope
shrl
clc
ja
mov
js
loop
aam
cmp
fistps
push
pop
scas
das
cli
or
std
jg
popa
inc
loop
push
stos
mov
or
jmp
pop
sub
out
xor
and
aad
add
hlt
fildll
mov
out
dec
or
ljmp
mov
repz
cld
clc
mov
pop
repz
inc
fsubl
jno
loopne
rcrl
cmp
stc
fildll
mov
lds
ror
sbb
push
cmc
pop
add
enter
or
or
aas
aas
call
jmp
cli
outsb
rcl
push
adc
hlt
stc
mov
pusha
cli
xor
sar
ljmp
and
aad
jmp
ja
shl
fldenv
dec
rcr
sbb
cld
ja
pop
in
ret
inc
pop
int3
xchg
shlb
insb
iret
pop
sub
lods
aam
lock
lret
cli
pop
or
imulb
dec
lcall
push
pop
loopne
lock
loop
das
xlat
aad
xlat
in
sbb
jecxz
push
sarb
out
mov
cs
aas
sub
call
aad
aam
nop
or
fwait
or
sbb
sti
xchg
loop
call
daa
or
lret
lock
mov
xchg
or
lret
and
ret
rorl
push
or
notb
loop
push
cmc
adc
in
repnz
cmc
daa
push
ss
fwait
jg
enter
nop
rcl
add
pop
bound
or
sub
stos
jecxz
shll
mov
mov
ftst
pushl
jmp
or
dec
pushf
and
out
cld
lahf
ficoms
pop
inc
lret
push
dec
outsb
and
xor
sbbl
mov
jns
and
dec
mov
mov
or
cmovo
imul
in
lods
push
mov
out
add
sub
dec
adc
mov
ljmp
test
out
sub
sar
imul
aam
jne
movups
int
sbb
data16
cmp
int
inc
cli
call
ss
ljmp
lds
push
jecxz
leave
outsl
lret
fstpt
mov
decl
sbb
xor
sub
ss
lahf
or
xor
cli
sbb
out
or
mov
mov
fists
int3
sub
inc
sbb
repz
aas
and
pop
and
shl
loop
mov
dec
dec
shrb
ret
cmpsb
aaa
add
dec
mov
cmpb
push
incl
adcb
das
dec
rolb
cmp
xlat
ljmp
mov
mov
xor
add
dec
neg
incl
mov
or
inc
mov
mov
add
pop
movsl
dec
and
sbb
aas
enter
in
xchg
sbb
ja
fcomps
into
cmpsl
pop
popa
stc
stos
lea
push
lods
push
push
data16
dec
popf
clc
dec
mov
loop
ficomps
push
cmp
or
cmpsl
into
jbe
mov
jecxz
xchg
sub
inc
lods
inc
mov
add
je
xchg
hlt
incl
mov
out
and
push
into
outsb
movsb
scas
enter
mov
xchg
mov
sbb
test
out
pop
mov
jg
xor
cwtl
jbe
cmp
adc
push
adc
push
jae
sahf
or
int
jb
push
jmp
mov
mov
dec
xchg
push
xor
push
test
mov
out
loope
aas
adc
xor
mov
insl
xor
cmp
addr16
out
imul
or
iret
and
dec
push
scas
push
cld
stos
push
sti
loop
fnstenv
mov
mov
pop
push
push
dec
xchg
mov
push
adc
std
dec
call
mov
mov
dec
lahf
outsb
sti
sub
pop
inc
ficoml
cs
mov
push
xchg
shrb
jbe
jne
pop
or
mov
fidivrl
mov
pop
cs
rcl
add
push
inc
push
xchg
sbb
adc
jg
std
cwtl
pop
cmp
sub
sub
push
xchg
mov
arpl
add
or
pop
cmp
ret
push
iret
enter
fidivrl
popl
push
mov
sub
dec
iret
ds
pop
or
imul
call
mov
sub
fs
aas
sbb
ret
pop
push
jl
jl
or
mov
add
and
inc
xchg
out
add
cmp
mov
cli
and
decl
sub
xor
jae
inc
xchg
ror
jns
sub
fidivs
fsubrs
clc
sbb
or
sarb
lock
dec
movsl
xor
insb
cld
and
adc
sti
sub
jno
in
mov
imul
cmp
inc
jp
lods
inc
out
shlb
scas
mov
mov
pop
pop
sahf
xor
jns
xchg
push
and
sub
sbb
aas
dec
js
or
cmp
rcrl
call
pop
mov
stc
mov
sbb
loopne
aaa
sub
int
mov
hlt
inc
movsl
pushl
mov
add
divb
repnz
push
pop
dec
jne
adc
sahf
cli
divb
mov
push
ljmp
icebp
das
orb
add
arpl
addr16
idiv
cmp
sub
iret
movsb
fmul
mov
aas
xor
fiadds
lds
outsb
movsl
dec
cmp
mov
add
sbb
sub
cmp
int3
or
xor
mov
fsubl
jle
xor
cmp
pop
aaa
push
cld
enter
int3
mov
test
in
mov
mov
cmp
imulb
fs
xchg
fisttps
leave
ljmp
sub
sbb
add
ja
cmp
stos
or
push
push
push
rcr
lea
jg
lret
add
mov
popa
mov
shrl
and
rol
in
xlat
scas
ret
cld
xchg
rcrl
test
fadd
lods
mov
sub
pop
mov
jp
and
pop
imul
aas
aam
jp
push
jbe
fildll
loope
jnp
cli
jno
testb
adc
sbb
scas
lret
mov
into
cmp
jl
outsl
push
or
dec
in
xchg
sbb
xor
ds
cli
loop
add
scas
mov
jle
pop
data16
pop
lret
ret
in
leave
mov
cmp
ret
add
adc
insb
mov
icebp
negb
sahf
fisubrl
addr16
sbb
lea
test
icebp
sbb
push
or
cmp
sbb
mov
int3
repnz
push
out
sub
outsl
shll
stos
and
ret
sbb
mov
and
mov
mov
es
es
sub
push
ret
clc
add
repnz
adc
mov
sbb
cmp
out
mov
out
pop
ffreep
shll
js
mov
enter
mov
js
sbb
and
and
xchg
es
mov
sub
push
cmpsl
add
and
adc
or
daa
cwtl
cmp
mov
mov
mov
mov
pop
out
jb
adc
jp
or
jbe
es
pop
test
out
hlt
inc
sahf
aaa
sbb
adc
cld
xchg
call
dec
pop
sub
push
dec
roll
or
cli
pop
call
in
pop
add
lock
into
daa
clc
and
mov
addb
jle
pusha
fdivrs
push
sbb
sub
aaa
loop
shll
inc
notb
sub
cmp
ds
mov
daa
pop
data16
pop
cli
addb
ljmp
push
sub
dec
fadds
aad
sub
adc
jecxz
push
mov
cltd
xlat
hlt
int3
out
test
xor
xchg
push
fdivr
aad
repnz
mov
cli
cld
cli
out
mov
sub
bound
js
bound
repz
scas
test
neg
add
sub
sbb
dec
in
inc
out
or
jmp
flds
decb
call
cli
push
mov
inc
push
mov
xor
xchg
out
jecxz
mov
or
inc
mov
sub
mov
cmp
lcall
outsb
jp
add
jl
pushf
xor
popl
pop
jg
mov
pop
negl
jmp
frstpm(287
xor
insl
sub
xchg
jo
and
push
push
push
mov
xchg
add
or
es
mov
lea
mov
setb
sbb
and
jge
inc
in
shll
add
xor
out
fistps
jl
add
inc
push
sbb
cmc
lock
out
inc
incb
push
mov
aam
sbb
js
out
push
ds
sub
aaa
lret
xor
sbb
cmc
add
and
lods
ret
xor
adc
addb
bound
push
xchg
bound
mov
cvtps2pi
and
ljmp
dec
mov
dec
insb
and
mov
and
mov
xor
loopne
shrb
hlt
sbb
dec
adc
cli
push
fsubr
bound
cli
sbb
les
cmc
xlat
decl
pop
lock
int
mov
sub
xlat
cmp
inc
scas
shl
xchg
lret
int
dec
cld
xchg
out
inc
jg
jnp
sub
fstpt
mov
fstl
test
jmp
add
pop
cli
xor
add
and
gs
nop
pop
fisubl
int3
out
out
mov
out
scas
sbb
dec
das
movsb
outsl
leave
cmc
out
in
stc
shr
ret
and
xor
dec
clc
pop
repnz
clc
call
test
sti
jmp
stos
lret
pop
and
rcll
aad
incl
lcall
lds
fiadds
jg
mov
add
bound
stos
mov
pop
push
mov
adc
push
cs
insb
fiaddl
and
add
mov
lret
adc
mov
sti
ljmp
fimull
shrl
int3
imul
sbb
add
call
mov
leave
sbb
pop
and
push
xchg
fisubrs
mov
cli
aam
mov
rol
push
mov
push
jno
iret
daa
mov
std
aaa
or
iret
or
lret
pop
sbb
jo
shlb
pop
cmp
repz
mov
imul
daa
or
cmp
call
sub
out
sti
sti
push
add
loop
xor
inc
add
adc
push
pop
outsl
and
jg
jbe
push
sar
jns
cmp
push
aad
outsl
adc
call
divb
and
cmc
jmp
es
icebp
decl
or
xchg
push
xchg
cmp
aaa
jg
orb
outsb
inc
es
cmp
rcrl
cld
mov
mov
mov
lret
jmp
xchg
xchg
in
loopne
add
and
loope
icebp
xor
sbb
pop
cmc
jb
or
inc
cmp
sarl
or
pop
add
fsubs
xor
gs
fidivl
dec
pop
and
cld
jecxz
add
push
cs
sbb
fwait
filds
jmp
daa
sahf
aaa
loop
mov
insb
arpl
add
sbb
loopne
xor
ds
lea
lret
dec
and
icebp
or
faddp
and
dec
cmp
lds
loope
push
mov
int
or
cmp
push
neg
std
and
inc
push
js
adc
dec
push
add
cltd
mov
sbb
cli
adc
mov
stc
xor
and
out
fildll
aaa
dec
sub
dec
or
das
mov
cli
movsl
and
push
jae
icebp
in
pop
and
cmp
scas
loop
subl
cmp
nop
rol
add
mov
xchg
and
ret
cmp
jl
pop
push
notb
sahf
repnz
scas
clc
sub
and
in
jle
push
mov
rorb
dec
xchg
push
sbb
data16
fprem1
mov
notl
cmp
dec
outsb
pop
cmp
jnp
sbb
test
sub
or
xchg
jmp
lock
call
cli
xor
aad
or
stos
lahf
push
jg
pop
lahf
fnstenv
or
lret
aad
leave
scas
pop
xchg
clc
call
ficomps
outsl
inc
ret
mov
int
notb
movsb
sbb
xorl
pop
outsl
mov
and
cmpl
or
mov
pop
jge
loop
rclb
jg
fildll
or
lock
push
int3
fsts
insl
iret
pop
adc
inc
adc
adc
enter
and
cli
xor
in
jle
push
les
and
xchg
or
ljmp
sub
in
lock
cmp
ss
decl
sub
dec
cs
and
sbb
pmovmskb
aas
mov
aaa
jmp
flds
jp
ds
pop
or
les
lcall
icebp
int
xchg
hlt
add
popf
dec
movl
pusha
sarb
loop
inc
cs
incl
and
xor
in
pop
icebp
and
or
push
cli
push
add
lret
push
jne
xor
xor
fistps
pop
add
dec
test
js
jle
sub
pop
push
pop
push
xchg
fiadds
cmp
xor
fisubs
or
std
or
lods
xor
fistpll
cmp
and
cmp
jecxz
je
mov
jo
or
mov
adc
or
xchg
mov
cmpsb
dec
and
loope
mov
mov
enter
mov
jae
pusha
or
mov
cmp
inc
xchg
cli
cmp
xchg
and
sbb
sbb
lock
or
stos
shll
pop
push
fwait
sub
into
or
or
scas
rolb
xchg
mov
adc
sub
adcb
push
dec
shl
enter
movl
and
and
xor
xchg
cmp
imul
sub
out
daa
jae
in
in
cmpsb
nop
hlt
out
leave
in
pushf
decb
or
dec
scas
sub
xchg
push
into
inc
sub
cmp
sub
sub
dec
inc
adc
daa
ds
loope
loope
xchg
jecxz
bound
sub
mov
adcb
nop
sub
outsl
jmp
fcompl
cmp
loopne
add
fadds
mov
les
enter
std
outsb
xchg
mov
repnz
xor
push
jecxz
out
or
icebp
push
push
mov
loope
cs
or
add
in
stc
jg
lock
or
xchg
adc
mov
and
push
sub
push
add
mov
fidivl
lods
out
pop
hlt
and
jns
and
cmp
jg
stos
fdivrp
fidivrl
daa
dec
daa
loopne
cmp
push
orl
push
aaa
stos
mov
scas
pop
xor
mov
stos
xor
cmp
clc
cmp
push
ret
in
xor
addr16
push
pop
dec
rorb
mov
fld
sub
add
adcb
pop
inc
dec
or
jg
xchg
cmp
loope
push
es
cmpsl
fisubl
in
rcrb
cmc
add
cmp
negb
or
inc
dec
cmp
adc
lcall
cld
outsl
ljmp
fdiv
pop
mov
loopne
lea
xchg
ja
push
mov
out
into
xchg
or
jne
mov
add
jle
test
icebp
stos
icebp
out
cmp
js
stos
lock
call
add
mov
in
cld
mov
out
push
out
arpl
cld
mov
mov
mov
movsl
leave
cmp
cmp
adc
pop
xor
pop
lock
pop
xchg
xlat
dec
rcrl
pop
add
mov
and
adc
inc
ret
xor
mov
lret
mov
fsubl
sbb
xchg
shlb
xor
aas
or
xor
sub
bound
mov
jge
bound
sbbl
aam
cmp
pop
or
test
stc
scas
gs
adc
cmp
dec
fmuls
outsb
fdivs
cs
or
rorb
fwait
push
shlb
sub
ret
aas
jle
mov
loopne
mov
mov
lock
dec
pop
sub
pusha
push
mov
or
jg
add
mov
loope
inc
mov
push
cs
pop
pop
sub
xor
xor
xchg
adc
inc
popa
jmp
mov
lods
sbb
mov
leave
xor
jmp
cmpsb
and
stc
int3
je
jb
into
outsl
push
sbb
and
pop
inc
dec
cs
out
push
icebp
test
cs
inc
pop
or
repz
mov
pop
icebp
mov
stc
repz
dec
subl
dec
icebp
xchg
icebp
dec
aam
inc
aam
fidivs
sub
jbe
mov
cld
ljmp
xchg
xlat
idivl
jecxz
push
cmc
into
sahf
loopne
inc
pop
cs
dec
xchg
bound
push
add
mov
xchg
sbb
inc
jns
aam
inc
les
mov
loope
adc
adc
in
and
fadd
jo
js
push
cmpsl
hlt
and
push
lds
adc
mov
mov
ret
and
or
add
or
xchg
call
stos
es
sub
mov
pop
in
push
in
push
pop
push
or
orb
mov
sub
jecxz
fidivrl
loop
ret
shl
mov
push
aam
mov
jmp
jg
fdivrp
or
mov
dec
outsb
add
sar
ljmp
clc
pop
cmp
push
or
push
call
cwtl
cld
fistps
test
aas
jb
add
ljmp
mov
in
add
xor
xchg
clc
pop
adc
test
jle
test
push
jbe
pop
outsb
sbb
popf
shrl
mov
test
idivl
adc
push
jg
jns
push
mov
sub
xlat
inc
jge
jecxz
sahf
xor
sub
popa
insb
cmp
push
std
cmpsb
sbb
add
aaa
imulb
incl
in
mov
ds
add
movsl
ret
sub
shlb
stos
pop
jmp
adc
or
mov
leave
cmc
test
ret
in
lds
adc
push
adc
cld
push
out
xchg
mov
cli
sub
xchg
les
mov
pusha
sub
scas
test
cmp
les
and
push
in
movsl
pop
push
popa
cmp
cmpsb
paddd
cmp
mov
popa
shll
mov
cmp
arpl
movsl
sbb
gs
jg
sahf
loopne,pt
add
decb
loop
jae
testb
and
or
pop
sbb
loop
and
into
test
decl
cld
mov
lahf
adc
aas
in
jmp
mov
xor
in
cmp
pop
lret
adc
imul
or
aas
mov
pop
add
sbb
cmp
mov
je
add
imul
cmp
adc
or
outsl
bound
add
xor
and
insb
popa
daa
aad
stos
cmp
call
fisttps
in
inc
mov
jnp
cld
loopne
and
repz
sub
push
ret
mov
mov
inc
adc
add
ss
pop
and
lds
ljmp
mov
jp,pn
ss
fsub
bound
scas
jp
or
lcall
cwtl
in
push
push
popf
adcl
xlat
pop
inc
pop
adc
and
xor
data16
and
add
incl
ljmp
pop
enter
mov
xlat
andnps
mov
jmp
ffreep
fimuls
sbb
sbb
scas
jp
sbb
sysret
push
loop
insl
mov
and
pop
fst
sbb
pop
mov
movsb
aas
movsb
pop
imul
add
sbb
or
xor
inc
shrl
pop
pop
pop
sub
popa
cld
or
mov
rclb
mov
cltd
sub
jecxz
test
push
mov
cmp
pusha
jb
aas
pop
clc
sahf
push
push
sbb
loope,pt
das
cmp
lahf
hlt
testl
pop
and
stos
cmpb
push
add
and
add
xchg
mov
xor
inc
inc
jl
inc
repnz
jle
adc
insl
ss
testb
sbb
jp
repnz
out
outsl
es
dec
dec
out
dec
pop
jg
scas
mov
aaa
pop
dec
int
jecxz
loopne
add
les
std
or
out
cmp
aas
fsubrs
and
xor
dec
jne
lock
out
std
out
mov
fisttpl
and
mov
pop
pop
inc
loopne
shll
insb
pop
pop
pushl
inc
xor
cmpl
or
sub
fwait
mov
or
pop
add
adc
xor
inc
test
loopne
pop
or
mov
and
push
dec
xchg
xor
inc
push
jg
fdivrs
aaa
icebp
test
mov
int
mov
sub
jg
icebp
imul
dec
mov
ja
fdivrs
jp
or
sbb
js
or
stc
mov
inc
cli
or
cmp
fldt
jl
std
pop
jb
lcall
push
jle
or
bound
adc
add
sub
daa
jecxz
setl
sarb
push
or
sbb
in
xor
jge
faddl
imul
pushf
mov
jg
gs
jmp
sbb
and
dec
fwait
cmp
mov
in
xchg
insb
sti
xor
sub
xor
sub
icebp
mov
incl
aaa
add
or
repnz
mov
mov
ret
rclb
mov
pop
adc
and
lret
sarl
es
dec
pop
cmc
notl
push
xor
push
stos
testb
lcall
incl
mov
mov
pop
and
aaa
fistpll
xchg
inc
mov
and
pop
sbb
rorb
and
cli
jg
mov
int
data16
cmp
sub
fwait
jmp
mov
and
cmp
xchg
dec
shl
ja
mov
fidivrl
push
clc
xchg
bound
or
or
pusha
stos
sub
and
mov
or
inc
xchg
ja
add
das
fadds
cs
inc
inc
nop
iret
fistpll
dec
xchg
bound
xchg
dec
ficoml
xor
or
cwtl
stc
arpl
cmp
loope,pn
cs
aad
push
loopne
push
les
mov
jecxz
test
push
xor
lock
cmpsl
pop
pop
mov
pushf
mov
or
mov
pusha
or
mov
push
movsl
insb
inc
fmull
fdivl
iret
test
push
mov
adc
and
push
jno
cmc
stos
int3
cli
mov
mov
and
inc
loop
sub
ja
lock
es
adc
movsl
xor
push
es
mov
test
jno
jl
imulb
xor
lea
insb
aaa
mov
jg
add
dec
pop
adc
adc
cmp
arpl
sbb
adc
and
xlat
xchg
sbb
xor
adc
scas
cli
dec
fstpl
mov
test
rorb
idiv
ss
xchg
clc
data16
imul
ljmp
cmpsl
loope
scas
or
cmpsl
xchg
fsubs
adc
aas
push
xor
sub
mov
int
stos
and
aad
push
push
icebp
pushl
adc
cmp
sbb
loop
xchg
ret
push
fisubs
loope
xchg
aaa
sbb
mov
out
cmp
leave
mov
mov
cmp
popa
mov
pop
test
or
fidivl
or
fldt
push
sbb
and
pushf
push
jb
ds
mulb
icebp
aas
mov
in
sbb
cmp
and
sbb
xor
ljmp
and
and
sbb
mov
pop
mov
cmc
jmp
mov
test
dec
js
mov
or
in
push
es
push
push
outsw
push
sbb
sub
mov
push
out
shl
leave
stos
dec
sbb
in
bound
dec
aas
push
add
add
push
adc
mov
adc
sub
popf
or
jb
jp
mov
stc
mov
xchg
loop
cld
mov
cli
or
pushf
sub
cli
adc
imul
xchg
and
out
cmp
popa
cli
loop
into
and
add
pop
sar
cmp
sub
mov
or
cld
ja
sub
pop
clc
xchg
sub
mov
or
stc
sbb
sbb
jno
sub
lret
pop
stos
jge
jp
aas
daa
lret
jle
push
pop
push
adc
fucomi
mov
adc
push
push
testb
aas
mov
test
mov
pop
sbb
and
jge
push
jb
cmp
dec
sarl
ds
pop
cli
cmp
sti
repz
rcr
push
mov
pop
jg
and
cs
add
loope
push
and
cli
push
add
or
idivl
jp
add
scas
lcall
sbb
out
stc
and
or
add
test
das
enterw
lret
xchg
xchg
testl
inc
mov
loopne
push
daa
lahf
cmp
mov
bound
pop
push
lcall
add
jg
sub
fcmovb
int3
out
scas
mov
or
popf
push
es
loop
push
or
mov
ret
andb
sub
mov
mov
icebp
call
push
adc
call
insl
cmpsb
pop
dec
subb
scas
jp
aaa
add
push
outsb
fsubrs
js
xor
pop
add
out
sbb
mov
push
gs
stos
push
mov
int3
pop
push
jg
adc
pop
in
testb
lds
adc
es
add
pop
add
xchg
xchg
or
adc
jecxz
cmp
in
pop
xor
jne
or
jg
addb
mov
cmpsl
decl
ja
fsubr
lods
movsl
fistpl
call
add
ds
into
ljmp
and
sub
adc
lret
setbe
daa
pop
cmp
daa
sbb
aas
adc
pop
add
hlt
data16
fs
or
sti
fdivl
fxch
scas
jo
adc
out
push
jl
dec
mov
or
cmp
pop
cld
cli
mov
sub
das
fidivrl
scas
and
dec
fadds
mov
mov
jb
mov
add
xor
imul
outsb
dec
jp
jp
lcall
mov
jp
mov
mov
push
stc
pop
xor
sub
movsl
fildll
std
adcl
stos
add
loope
cmp
mov
pop
call
adc
ret
add
mov
aad
inc
movsl
push
dec
push
pop
jle
push
fisubs
jp
push
call
out
ds
outsl
add
mov
dec
dec
es
mov
dec
ds
mov
jg
out
push
cmp
hlt
es
jg
sti
insb
rcrb
mov
call
repnz
xchg
lds
filds
jecxz
in
adc
in
je
lahf
add
popa
ret
test
insb
dec
shl
test
jmp
out
cli
lea
xchg
movsl
push
inc
pop
std
ret
pop
push
jecxz
dec
mov
mov
mov
sub
push
cmp
das
popf
shl
cli
rsm
insl
fmull
pop
dec
in
clc
ljmp
xlat
dec
flds
cmp
mov
cmp
or
in
stos
clc
mov
repnz
adc
pop
ret
mov
xchg
mov
mov
or
out
xor
cmc
xchg
sub
or
pminub
subb
adc
pop
mov
in
mov
xor
and
loop
cmc
aaa
xchg
adc
fidivl
jnp
add
pop
or
xchg
xor
mov
call
out
jno
dec
xrelease
test
rcrl
cmp
fiaddl
cmp
mov
fwait
pop
sub
sub
leave
pop
sbb
cli
incb
arpl
in
lcall
cmpsb
dec
aam
imul
pop
add
jno
aaa
mov
cs
sti
inc
jl,pn
mov
fsubl
jl
mov
lret
mov
sahf
xchg
inc
out
cmp
js
es
imul
cmp
fsubs
das
loope
test
or
cmp
imul
mov
aas
cmp
into
stos
sbb
fcoml
sub
rclb
outsl
add
bound
out
push
sahf
in
clc
fcomip
jecxz
sub
out
jp
pop
push
insl
inc
xor
sub
divb
mov
cmp
push
and
jnp
push
or
sbb
lret
shlb
aaa
adc
sti
pop
or
mov
cmp
repnz
lret
int
xor
sbb
push
pop
jae
fldenv
cld
test
js
sub
push
out
sub
mov
mov
sahf
sbb
ja
adc
push
xor
push
xor
pop
insl
pop
cs
adc
pop
ret
andl
dec
dec
inc
mov
inc
pop
repz
jg
sarb
sbb
cmp
leave
rorl
loopne
or
arpl
mov
out
and
lahf
mov
ljmp
or
mov
sahf
lahf
adc
inc
lret
lock
pop
add
xor
mov
add
pop
les
lret
mov
lock
mov
or
mov
pusha
ljmp
jge
pusha
sarb
out
sbb
jge
add
in
iret
daa
stos
jbe
in
testb
sub
into
or
les
mov
sub
pop
sbb
les
xchg
sbb
cli
shll
ljmp
or
int3
or
cs
mov
dec
fwait
lret
es
shll
or
stos
sbb
push
add
lret
xchg
mov
mov
addl
lock
sbb
adc
push
ss
into
lret
dec
pop
test
sbb
or
jle
js
pop
push
cltd
xor
fcomi
notb
pop
push
xchg
jnp
sahf
or
cmp
mov
sbb
lret
pop
cld
in
aas
adc
xchg
das
jle
mov
xor
cmpsl
inc
adc
sahf
and
sub
aas
inc
mull
push
lret
xor
aad
pop
lock
cli
sub
adc
fcomp
fwait
int
clc
sub
ja
mov
or
cld
shll
mov
add
or
pop
add
or
jecxz
and
pop
and
cltd
add
sbb
aas
lcall
mov
mov
ds
xor
push
cmp
jb
xlat
fwait
mov
and
lcall
or
inc
daa
fwait
sub
or
push
mov
lahf
mov
test
ja
pop
icebp
cld
cmp
sub
clc
aas
jl
fisubrs
lock
sbb
je
lea
sub
cmc
imul
inc
dec
test
icebp
stc
sbb
jmp
fiadds
aam
test
jbe
mov
loopne
out
aaa
fsts
dec
pop
outsl
fistpl
xor
in
add
in
add
loope
push
js
sub
sub
xor
mov
repnz
sbb
cli
insw
dec
xchg
push
out
jne
mov
cmpsl
or
mov
cmp
bound
xor
aas
test
repnz
clc
arpl
ret
out
push
push
cs
andb
repz
in
mov
jg
lods
cmp
popa
shll
cmp
mov
and
fisttps
loopne
jb
pop
cwtl
sbb
adc
sbb
pop
sahf
ror
lods
jg
andl
pop
push
or
or
test
sbb
pushf
icebp
call
inc
in
fdivrp
jns
mov
dec
pop
pop
jmp
push
cmp
pop
push
xchg
icebp
aas
jno
ret
in
mov
loop
sbb
std
cmp
add
dec
xor
pop
add
jmp
ret
notb
inc
mov
and
push
jecxz
inc
adc
xchg
out
loopne
orl
adc
mov
xchg
sbb
aas
in
cmpsl
daa
enter
and
ja
daa
loopne
inc
cltd
jb
push
js
clc
pop
out
sbb
ljmp
popf
syscall
xor
shlb
or
in
adc
scas
inc
in
or
xor
lds
das
mov
inc
push
loope
test
mov
aas
mov
pop
cmc
in
insl
sbb
push
into
cs
push
iret
sahf
sub
rolb
sbb
movb
imul
and
js
jno
cmp
fldenv
mov
rol
push
jle
push
mov
add
daa
jecxz
push
repnz
pop
ss
push
cli
push
jbe
pop
sbb
inc
cld
push
loop
mov
adc
mov
outsb
aas
or
pop
xor
xchg
fdivrs
mov
rcrb
pop
pop
inc
popf
sub
mov
xchg
out
aam
cmpsl
jne
or
decl
sbb
int
jns
fstpt
mov
sbb
adc
mov
pop
inc
arpl
test
arpl
int
sbb
sub
jmp
outsb
push
in
pop
xor
or
lcall
xor
out
mov
and
idiv
ds
aam
incl
sub
ficomps
out
cmpsb
mov
cs
push
push
subb
sub
lret
sub
adc
test
std
sbb
ljmp
add
dec
push
subb
popa
cmpsb
into
mov
jns
ljmp
jge
int3
rorl
push
push
xchg
fcomps
imul
adc
clc
and
insb
inc
fs
and
xor
lcall
push
inc
dec
movsb
popa
js
repnz
mov
scas
out
aam
add
rcrb
mov
cmpsb
adc
mov
stos
rorl
and
mov
out
outsl
icebp
out
ljmp
sub
das
xor
mov
jbe
clc
repz
repz
push
push
js
and
add
cmp
push
xor
lods
xor
frstor
aaa
add
icebp
mov
adc
pop
or
and
add
cld
jg
and
ds
addr16
das
bound
push
fnstsw
cli
int3
ss
pop
inc
in
dec
icebp
imul
xchg
push
int
mov
fisubrl
fidivrs
mov
insl
fisubl
lret
sub
inc
int
sti
pop
sub
cmp
lock
sub
xchg
leave
add
push
out
out
dec
push
push
pop
lea
shrl
jg
jne
dec
stc
clc
inc
in
and
incl
pop
pop
fs
sbb
xchg
cli
push
neg
lods
sub
mov
xchg
jbe
inc
iret
cmp
pop
or
cmp
cmp
push
ja
bound
leave
jbe
lret
int3
or
es
loopne
movsl
pop
add
and
aam
cltd
add
cltd
adc
jg
fstp
das
ret
cld
jbe
icebp
or
sub
adc
fcmovbe
outsl
incb
sub
adc
and
into
pop
mov
mov
pop
addr16
sahf
xchg
push
jbe
adc
and
pop
mov
out
dec
and
pop
jns
dec
popl
rol
pushf
xor
sub
mov
and
mov
daa
xchg
je
je
sub
push
mov
dec
add
cmp
addr16
and
stc
outsb
add
mov
sbb
xor
xor
stc
xchg
cli
or
dec
test
lret
push
add
and
mov
jl
mov
push
pusha
imulb
nop
imul
inc
sbb
and
xchg
mov
sbb
inc
mov
push
jle
fsubrs
mov
cmpsb
lods
mov
inc
les
dec
mov
and
dec
dec
outsl
into
push
push
cs
xchg
movsl
cmpsl
sub
fcom
jg
adcl
test
outsl
call
inc
sbb
enter
or
cmc
pusha
xor
pop
sbb
push
shl
jg
in
jle
push
ds
popa
push
pop
mov
jl
aaa
push
js
into
or
fildll
push
jl
add
das
inc
scas
int3
cmp
jle
pusha
xchg
in
lcall
xchg
jo
sbb
jns
fmull
rcrl
pop
inc
and
loopne
scas
rol
sbb
push
mov
call
adc
adc
pop
dec
stos
jl
pusha
mov
push
sbb
pop
xor
aas
inc
add
push
sbb
sub
or
dec
pop
jl
mov
cmp
mov
pop
stc
cs
dec
xor
push
mov
lret
lock
sbb
loope
or
mov
imul
jle
cmp
xrelease
shr
fcmovnb
stos
jmp
inc
push
addb
cmp
jg
cmp
rolb
fcompl
std
push
or
sbb
sbb
xor
jg
cld
scas
fisubl
orl
fldenv
push
and
xchg
inc
mov
push
movsl
dec
inc
cld
pop
mov
or
pop
mov
push
dec
std
mov
push
int
or
adc
cmp
pop
xchg
call
aas
lret
movsl
leave
ds
pop
ret
dec
mov
test
push
dec
repnz
outsl
std
inc
stos
lret
sub
sarl
les
add
add
fwait
int3
into
sbb
mov
pop
lahf
stos
add
cwtl
add
imul
add
push
repz
and
or
and
inc
xor
mov
xchg
jle,pn
mov
mov
sbb
iret
xor
popa
das
xlat
les
push
cld
jg
push
cmp
notb
fisubrs
imul
lret
fmull
andb
sub
aam
pop
sti
pop
add
shrl
pop
or
movsb
mov
fadds
ret
rolb
orb
scas
stos
cmp
adc
mov
out
imulb
sub
xchg
hlt
push
jae
out
aad
xchg
add
pop
cmp
int3
cwtl
outsb
out
sub
sar
call
lcall
rcrl
fisubrl
stos
cld
jg
scas
shlb
mov
repz
cmp
rcll
pop
mov
xchg
imul
cmpsb
cld
int
inc
in
jo
fstpl
sub
aas
or
mov
movsl
pushf
xor
fwait
clc
incl
jg
mov
in
mov
mov
fildll
mov
lock
cmp
mov
jl
jne
push
inc
jecxz
test
push
test
pop
pop
inc
arpl
shr
fdivrl
adc
inc
nop
sbb
xchg
pop
jmp
mov
es
shlb
dec
ljmp
adc
and
out
xor
and
pop
inc
sub
stos
or
mov
and
mov
dec
gs
pop
pop
xchg
or
mov
lret
push
xor
xor
pop
push
insl
test
xchg
aas
fs
es
dec
inc
sub
rorb
rorb
pop
jge
pop
daa
pop
inc
ret
push
and
ret
mov
push
into
mov
iret
divb
cmpsl
push
push
mov
push
pop
mov
sbb
adc
in
pop
mov
test
mov
adc
sub
sbb
test
cmpb
outsl
es
xchg
pop
subl
sti
xor
addr16
mov
pop
dec
stos
xchg
cli
add
sar
frstor
std
popf
fcmovb
pop
add
movsb
lods
jecxz
mov
mov
lds
sbb
imul
lock
js
mov
cli
inc
fwait
xlat
sub
outsl
push
pop
pop
cmp
int
push
or
sub
out
mov
xor
sbb
add
lcall
fiadds
xchg
sub
sbb
mov
fisttps
pop
call
call
adc
mov
pop
mov
adc
cmpb
outsb
loop
imul
and
push
rol
cltd
xchg
jb
popa
xchg
jo
lret
sar
push
push
lds
hlt
pushl
cwtl
jge
pop
xchg
lock
xor
lret
cli
sbb
pop
and
ja
sbb
movsl
push
aaa
adc
loopne
out
rolb
jns
and
mov
mov
fwait
adc
aam
sbbw
push
jb
pushf
xorb
rolb
mov
cltd
inc
jb
mov
out
dec
repnz
fucomp
fstp
adc
sar
dec
adc
mov
pop
lds
add
test
outsb
arpl
out
out
fwait
orb
mov
mov
pop
inc
jl
cs
dec
lods
inc
scas
repz
scas
jecxz
cmp
imul
loopne
ljmp
adc
mov
call
mov
jnp
add
inc
aaa
out
push
cmp
ljmp
sbb
mov
ret
add
arpl
and
ljmp
mov
pop
jo
jns
adcl
push
xchg
jmp
ljmp
inc
ret
loopne
sahf
lods
bound
adc
roll
add
fsubp
decl
push
sti
jmp
icebp
outsl
xchg
cmc
sysexit
xchg
jmp
fildll
push
insb
add
mov
rol
push
test
pushf
pop
sub
mov
adc
fistpll
jle
int
add
and
dec
jno
lret
aam
pop
or
xor
and
mov
push
aam
push
sti
pop
das
je
adc
xchg
mov
es
cld
and
rcrb
inc
sub
fs
mov
call
fistps
push
xor
fildll
mov
out
enter
cwtl
testb
repnz
out
pminsw
inc
xchg
divl
loop
fcomps
fsubrl
repz
sub
lods
or
cli
xchg
into
test
pop
sub
jg
into
ret
jmp
mov
out
dec
or
adc
mov
lock
out
into
loopne
or
lods
repz
sarb
push
rcr
jbe
push
popf
shlb
cmpl
insl
pop
cmpsl
dec
aas
loop
adc
push
gs
mov
iret
rcrb
jbe
pop
sarl
jmp
into
jns
mov
lcall
pop
xchg
ret
mov
or
rclb
mov
repnz
lahf
mov
inc
mov
mov
std
mov
push
dec
sub
and
dec
repnz
arpl
lcall
rorb
repnz
xor
fs
jne
lods
test
jbe
mov
pop
adc
rorb
fidivs
push
out
jns
pop
subl
jno
xor
or
xchg
pop
mov
scas
out
sbbl
jle
fldt
mov
cmp
cmp
push
or
cli
pop
int
inc
push
push
push
and
movsb
stos
ss
arpl
push
sbb
pop
mov
mov
repz
or
xlat
in
outsl
pop
scas
mov
jle
nop
mov
cmp
jl
lcall
push
je
xchg
xchg
and
adc
xchg
jle
incl
sub
inc
dec
xchg
xchg
lds
jge
int
jae
push
cmp
dec
push
inc
mov
test
jg
push
pop
icebp
xchg
inc
fbstp
mov
xor
pop
sub
mov
pop
std
mov
mov
or
pusha
mov
inc
pop
cs
jbe
adc
decl
popa
xor
ds
cltd
sbb
jg
xchg
shl
repz
test
ss
shrb
int3
pop
into
outsl
and
or
xor
loope
push
sub
jg
add
aam
es
mov
push
jg
aad
or
and
inc
lds
int3
push
push
sub
add
vmaxps
testb
xchg
cmp
inc
fdivr
loopne
rclb
inc
or
jge
dec
mov
mov
stc
imul
add
clc
jne
dec
imul
mov
xor
arpl
fs
push
pop
pop
data16
push
push
adc
xchg
pop
jp
pop
push
or
jg
daa
js
fisubrs
daa
jbe
je
ds
aaa
jmp
repnz
divps
pusha
pusha
sub
scas
ret
inc
sbb
dec
pop
ds
and
and
icebp
or
dec
es
xor
das
aam
mov
push
or
jbe
inc
or
push
and
mov
clc
push
pop
xlat
ret
push
adcl
shr
mov
sub
jmp
in
pop
xchg
jle
mov
scas
fdivl
jl
insl
or
or
pop
out
call
je
int3
mov
or
mov
clc
int
int
xor
pop
inc
clc
out
xlat
cmp
jg
and
jbe
into
cmp
rclb
sti
outsl
inc
popa
push
jecxz
pusha
dec
push
sbb
lcall
imul
stos
jge
dec
arpl
int
cmpl
push
dec
out
xchg
jp
ss
repnz
xchg
rcr
push
dec
addr16
cltd
clc
push
mov
insb
testb
scas
les
jb
addr16
scas
xchg
ret
aam
pop
or
test
sahf
movsb
pop
push
outsl
push
fwait
pop
fcomp
xchg
xchg
cmp
mov
mov
dec
sub
lock
inc
das
xchg
push
lret
xchg
hlt
or
jle
push
dec
jle
outsb
push
fstpt
shlb
das
aaa
mov
ds
push
push
pop
mov
imul
jp
xchg
adc
test
loope
loop
or
xchg
loop
repnz
je
aad
out
or
sub
inc
stos
movsb
nop
add
pop
enter
push
mov
sbb
out
xor
into
out
mov
push
aad
mov
decl
call
into
ret
pushf
or
push
call
repz
pusha
hlt
push
xor
je
inc
les
pop
div
xorl
int3
adc
stc
fisttps
cltd
cs
pop
xchg
cmp
ds
mov
push
lret
iret
js
jg
stos
mov
xor
aas
mov
into
movsb
sbbl
pop
inc
cld
push
push
cmc
call
inc
mov
lret
dec
cld
push
outsb
scas
pop
roll
sub
jge
xor
pop
sbbb
dec
outsb
into
fwait
jecxz
iret
psrld
lret
lcall
scas
cs
cwtl
push
scas
jl
ss
pushf
sub
cmp
fs
loope
or
out
adc
and
fwait
ds
fcomip
cmpsl
mov
dec
negb
ret
adc
mov
ljmp
pop
das
js
jle
ret
frstor
cmp
lcall
mov
imul
in
rcll
fnop
xchg
add
cs
mov
mov
sub
add
test
and
jge
inc
pop
icebp
pop
push
fcoms
dec
dec
loope
mov
pop
test
sub
addb
loope
mov
icebp
out
cmp
lret
aaa
and
mov
xor
mov
bound
pop
or
pop
lock
sbb
loopne
ret
mov
sar
into
outsb
adc
mov
and
adc
in
lods
or
jp
mov
jbe
or
xor
add
aad
pop
or
outsl
sahf
repnz
sbb
adc
xchg
in
push
test
xchg
fwait
rcll
jecxz
cmp
shll
add
push
sahf
xor
ljmp
or
jnp
push
stos
sub
and
mov
push
add
pop
xor
push
hlt
pop
push
insb
out
xor
hlt
scas
xchg
hlt
xchg
pusha
pop
xor
push
fldl
pop
xchg
push
jo
lods
cmp
aad
add
dec
imul
adc
insl
push
pop
outsb
frstpm(287
mov
push
sub
jle
into
xor
sub
add
popa
aam
das
popf
sbb
push
aaa
sbb
sar
stos
jle
je
and
leave
adc
xchg
lock
add
cld
pop
add
incl
sub
in
jp
in
mov
ja
int3
pop
add
jecxz
xchg
outsl
jecxz
ret
dec
inc
xchg
les
xor
push
cld
mov
fidivs
daa
filds
jg
dec
push
int
and
roll
push
stos
sub
xor
daa
outsb
add
call
push
sbb
add
cli
cli
ss
lret
repz
xchg
mov
adc
icebp
hlt
mov
inc
stc
rcll
jecxz
test
push
inc
daa
jnp
push
inc
xor
adc
lods
xor
aas
adc
popf
xchg
inc
es
lea
rolb
loop
stos
scas
pop
and
push
rorb
clc
inc
ret
fistpll
inc
fwait
cld
pop
xchg
inc
mov
mov
lcall
and
xchg
adc
ja
mov
scas
lcall
sbb
push
repnz
and
fldt
out
add
clc
mov
daa
dec
push
and
mov
jecxz
or
xchg
repz
ficoml
ja
stos
icebp
mov
jns
pop
jae
fstl
outsb
add
mov
xor
inc
es
or
sbbl
mov
scas
aaa
dec
push
add
mull
test
ret
mov
xor
push
sti
cmp
insl
loopne
xchg
add
xchg
stc
jecxz
je
ds
dec
bnd
push
or
ss
movsl
mov
or
dec
mov
dec
pop
jno
int3
dec
insl
push
lretw
fidivrl
pop
xchg
add
repz
repz
adc
sbb
orb
pop
and
in
lcall
movsb
xchg
xchg
rorb
les
xchg
add
dec
mov
adc
lods
incb
scas
loop
ret
mov
aad
pop
push
in
test
aas
fwait
repnz
xor
mov
jp
icebp
pop
insb
add
loopne
dec
scas
loopne
repz
lods
push
adc
stos
fbld
rclb
cld
das
lods
xlat
fbstp
popf
inc
or
data16
xor
xor
mov
sahf
mov
ljmp
daa
and
fmuls
fdiv
mov
ret
je
rcrb
sbb
or
hlt
jmp
rorl
cmp
aad
into
inc
test
negl
adc
or
lods
jmp
ret
inc
rolb
push
loopne
add
ds
in
popa
add
sub
ret
cli
and
adc
cli
jnp
lret
xor
out
fistl
into
jmp
or
and
inc
ror
add
sbb
inc
insb
sbb
push
jp
and
push
add
and
insl
mov
mov
iret
leave
mov
ret
sub
fbstp
push
fstpl
jmp
mov
jne
ret
popf
sbb
loope
inc
loop
loopne
cmp
in
pop
inc
lcall
repz
cmp
or
push
inc
ljmp
cmp
xchg
sbb
sub
flds
outsl
mov
or
ret
pop
xchg
or
adc
mov
bound
or
fbld
or
loopne
cs
and
inc
js
and
dec
aas
xchg
ds
imul
sbb
sarb
sahf
mov
daa
loopne
in
pop
test
rolb
mov
stc
pop
or
les
daa
xor
fidivrs
mov
or
jbe
sarl
mov
clc
leave
call
clc
push
xchg
or
cmpsb
pop
jb
adc
outsb
daa
mov
push
lret
jno
dec
push
xor
push
mov
lret
push
jns
mov
aas
pop
loope
add
cli
bound
mov
into
push
mul
or
pop
sbb
clc
add
cs
mul
in
mov
jl
cmpsl
into
aaa
sbb
mov
lods
lds
dec
xchg
dec
lock
shrb
faddl
call
in
ret
jecxz
call
out
repz
jp
jno
lods
or
xchg
jecxz
test
cmp
lahf
call
lock
hlt
testb
jns
add
es
jns
add
imul
fcoml
push
inc
js
test
lock
xlat
cmpsb
sbb
xchg
fcomp
mov
idivl
lods
sub
or
jmp
rol
pop
push
cmpsl
cmc
je
fisubrl
sbbb
orb
xchg
repz
adc
or
cwtl
in
lods
shll
push
pop
jae
aas
mov
cmp
lret
fisubs
inc
pop
mov
imul
imul
cmp
and
pop
dec
jg
mov
test
fs
inc
ret
or
decl
into
add
xor
adc
push
addl
inc
xor
jecxz
leave
push
jb
int
jle
dec
sub
push
out
fwait
pushf
in
into
jp
cmp
mov
fcoml
cli
add
add
add
das
ror
sahf
jle
jno
cmp
fldt
gs
or
aad
sti
leave
repnz
in
mov
cli
jecxz
jg
pop
lcall
dec
test
orb
js
push
cmp
popl
pushl
loop
in
push
adc
or
loop
and
cmp
pop
and
pop
mov
and
popw
mov
clc
decl
movsb
test
sub
dec
out
mov
std
pushl
or
outsb
xor
pushl
icebp
fisttpll
jne
testb
fs
stos
or
gs
jbe
or
out
xchg
jle
cli
and
bound
fists
or
flds
push
mov
inc
je
rcll
jg
push
call
test
mov
mov
inc
xchg
xor
sahf
movsb
ljmp
or
mov
lret
into
add
push
push
out
inc
xchg
xchg
in
leave
ret
outsl
xorb
jae
mov
fildll
add
jno
into
mov
cmc
jle
mov
mov
in
in
mov
mov
loope
fstp
xchg
sahf
cmp
fildll
ds
xchg
imul
ds
jg
or
jbe
mov
div
popa
jmp
jecxz
lret
clc
adc
arpl
xchg
outsl
ret
negb
adc
repz
mov
loop
mov
cmc
mov
adc
add
jg
stos
mov
das
stos
pop
adc
cmp
inc
xchg
jne
lcall
adc
push
out
cld
in
mov
pusha
pop
aam
sbb
pop
xor
std
stc
inc
int3
pop
cmp
xchg
ret
ror
or
xchg
adc
incl
mov
int
cmp
arpl
outsl
roll
int
mov
imul
xchg
mov
dec
sub
repz
mov
mulb
push
or
pop
mov
imul
fnstenv
clc
jg
pop
fnstenv
fisttps
xchg
sbb
dec
adc
and
into
or
add
lret
mov
xchg
inc
xchg
pop
and
and
lcall
pop
pusha
in
ret
fistpll
fnstcw
mov
cmp
add
push
bound
pushl
push
push
xor
pop
or
fisttps
out
aad
and
rorl
mov
inc
or
add
out
sbb
push
test
mov
call
sar
jg
sbb
dec
divl
rolb
sub
cwtl
adc
out
mov
dec
les
ret
fcmovnu
mov
jle
xchg
jle
pop
sub
cld
iret
pushl
inc
shll
call
jns
pop
xor
lcall
and
lods
iret
decl
lock
pushl
nop
xor
sub
mov
out
jb
xlat
adc
mov
or
xchg
popa
sbb
pop
push
inc
loope
sar
mov
fidivs
stos
mov
scas
lods
mov
pop
or
fwait
mov
cmp
inc
inc
cmpsb
fbstp
adc
push
sahf
push
lods
repnz
addb
adc
je
test
test
fadds
in
mov
mov
push
pop
pop
add
mov
lret
jbe
mov
mov
pop
mov
add
pop
movsb
sti
mov
lret
inc
mov
sbb
shrl
inc
mov
hlt
dec
leave
daa
test
mov
mov
stos
dec
rcr
jb
push
add
hlt
int
cld
aam
cmp
shrb
cltd
addr16
pushl
dec
loope
sub
stos
and
mov
ficoms
mov
and
cld
mov
pop
push
rcl
jle
push
and
ror
in
inc
mov
inc
jecxz
cld
push
or
adc
jg
arpl
cli
or
clc
in
notl
loopne
ret
testb
pop
jno
call
push
outsb
jmp
loopne
test
lods
in
mov
test
mov
and
add
out
frndint
ljmp
inc
xchg
int
mov
loop
fdecstp
fisttpl
pop
push
cld
cmc
repnz
push
xor
ss
fildll
sarl
shll
push
mov
enter
ror
lret
fcomip
iret
hlt
ds
pop
dec
pop
shl
inc
in
fdivrp
xchg
push
inc
jmp
outsl
shlb
loope
mov
test
jns
cld
cmpsb
pop
jmp
aad
jb
popf
add
repz
rclb
mov
mov
lcall
jp
adc
jp
push
xor
sub
stos
xor
test
iret
sub
jo
pop
stos
add
push
ja
pop
xchg
mov
dec
push
inc
rcr
jae
inc
and
jne
out
cmc
imul
aad
pusha
mov
sbb
mov
sub
js
sti
decb
nop
and
adc
js
icebp
sbb
dec
pushf
rcl
dec
adc
jb
fwait
movsl
push
xor
stos
dec
js
loop
mov
inc
inc
test
leave
jbe
movb
pop
aaa
inc
sub
jge
les
mov
ja
sbb
fidivrs
or
stc
push
xor
stos
xor
lods
cmpsb
fwait
sarb
shrb
ja
lcall
faddp
or
dec
inc
add
pop
mov
mov
mov
push
stos
dec
negw
sahf
xor
dec
inc
hlt
push
hlt
cmp
push
popf
stos
sub
call
and
flds
sti
jmp
mov
ja
xchg
inc
xor
push
inc
pop
enter
adc
mov
fs
jae
stos
aaa
daa
aaa
sarb
arpl
sbb
loop
lea
out
mov
enter
push
pop
push
lods
add
lret
adc
js
add
mov
ljmp
xorb
sarl
lret
or
sbb
mov
xchg
das
test
mov
xor
xchg
push
adc
in
mov
int
int
ja
lcall
filds
xchg
rcr
mov
mov
add
push
jo
in
andb
lods
sub
dec
push
add
cmp
mov
add
nop
out
das
mov
add
pop
shl
pop
or
xor
aaa
jo
push
cmp
mov
cmp
and
or
xor
xrelease
nop
ljmp
pop
sar
jb
sbb
fbld
into
jmp
xchg
dec
sti
mov
cmp
sub
or
stos
sbb
jle
push
jg
or
ret
push
clc
daa
xor
mov
clc
aaa
fmul
sbb
sub
mov
or
jo
repz
or
notl
cmp
push
lds
movsl
push
cli
ljmp
cs
xchg
inc
push
loopne
sbb
push
shlb
or
mov
and
aad
dec
inc
sbb
cmp
push
lock
sub
inc
push
fwait
cmc
insb
ret
mov
inc
in
inc
xchg
or
roll
stc
ljmp
push
sahf
es
jg
loopne
stc
filds
stc
mov
jmp
sti
sbb
in
popa
jle
ret
xchg
cmpsb
imul
popa
inc
cmp
sbb
ret
out
jle
sub
ds
ja
in
pop
add
not
popa
mov
push
sbb
mov
sub
ret
rorb
shll
fisttps
lcall
adc
test
leave
les
mov
or
lds
add
inc
sub
dec
ljmp
sub
cmpsb
jbe
mov
pop
sbb
or
mov
icebp
in
addr16
test
jmp
pop
cmp
call
cmp
addb
add
or
outsb
or
rclb
mov
fsubr
or
add
out
and
push
ret
add
das
mov
je
xchg
addb
adc
call
loope
pop
data16
xor
xor
xchg
sbb
push
jp
into
lcall
xchg
int3
pop
icebp
call
xchg
mov
sarb
cmc
cli
xchg
divb
loope
xchg
push
lret
xchg
dec
adc
shrl
aas
add
out
cmp
xor
imul
std
repz
dec
dec
lret
popf
sub
das
mov
cmp
pop
adc
test
adc
clc
sub
jecxz
mov
fwait
push
outsb
pop
repz
out
cld
inc
and
mov
test
cld
and
push
jbe
in
sub
or
and
and
xchg
loope
dec
pop
and
ss
or
sbb
call
push
adc
in
push
push
inc
cmpsb
call
into
addr16
add
dec
mov
mov
or
repz
es
inc
testb
outsl
imul
sub
or
jge
jbe
dec
adc
fcompl
repz
adc
inc
loop
pop
xchg
push
movb
add
push
xor
cmp
add
add
lock
pop
xchg
xchg
xchg
pop
mov
shr
mov
insl
sbb
mov
jecxz
xor
sbb
cmpsl
or
imul
das
mov
jmp
call
xchg
clc
sbb
pop
push
dec
insl
and
jbe
fadds
incb
xchg
mov
pushl
mov
push
loop
js
mov
push
jecxz
in
out
loop
sub
loop
jl
clc
pop
add
ret
cbtw
pop
into
and
push
inc
add
add
xor
and
imul
out
or
popa
popf
nop
outsb
and
push
pop
fs
or
lock
jmp
jp
adc
ja
das
mov
fdivrp
sbb
push
push
fidivrl
bound
sub
jmp
mov
mov
in
cmpsl
into
ret
xor
mov
outsb
or
pop
addl
in
inc
clc
inc
mov
fcompl
xchg
pop
incl
popf
int3
imul
push
divb
mov
js
mov
xchg
adc
add
mov
xor
imul
lret
shl
in
loope
pusha
add
aaa
std
sbb
idivl
pop
leave
xchg
add
xchg
push
sti
jl
nop
pop
xchg
sbb
or
mov
push
cli
cli
jmp
mov
or
mov
outsb
iret
dec
out
or
call
sbb
adc
lcall
lea
mov
js
jbe
lahf
cli
scas
or
movsb
dec
push
mov
dec
js
cmp
xchg
data16
cmp
jg
xchg
out
push
sub
pushf
mov
mov
jmp
stos
push
ds
test
test
loop
aas
insb
rorl
jmp
repnz
fildll
adc
adc
cmpsb
test
cmp
or
jmp
rorl
negl
dec
idiv
mov
cld
jg
test
xchg
fcmovne
les
or
or
rep
pusha
xchg
mov
aad
xor
ljmp
inc
sahf
sub
xor
aas
cld
ret
mov
sbb
and
sbb
in
rorl
jns
jg
cli
int
hlt
sbb
xchg
jbe
mov
push
adc
and
xor
or
call
faddp
scas
cmp
movsl
in
loopne,pn
lods
addr16
lods
add
movl
lods
or
or
cs
loop
mov
xor
std
imul
dec
xchg
xchg
and
xchg
stc
sub
cld
ljmp
cli
movsb
sub
push
or
adc
movl
push
subl
sub
hlt
xor
adc
mov
cmp
and
push
pushf
sbb
scas
insl
les
mov
dec
mov
test
sub
std
xchg
sbb
jg
icebp
pop
xchg
mov
or
mov
cwtl
es
adc
add
ljmp
pop
lret
test
jno
loop
xchg
pop
int
mov
int
fimull
sbb
incl
or
sub
and
decl
pop
in
dec
fldenv
arpl
ror
adc
mov
test
in
out
dec
push
inc
mov
mov
lcall
sub
sub
adc
incl
aas
sbb
inc
mov
dec
mov
fstl
jnp
nop
cmp
lock
mov
mov
mov
test
in
xchg
shl
jle
test
inc
sbb
jbe
cs
out
loopne
push
xchg
mov
dec
xor
fsubl
jbe
mov
inc
or
aam
jae
lahf
xor
jg
ljmp
scas
lret
adc
adc
ds
pop
push
clc
decl
add
adc
pop
test
jnp
mov
cli
out
loop
xchg
sub
sub
decl
add
iret
ja
inc
inc
test
inc
xor
jae
cwtl
lcall
add
pop
push
shlb
lock
int
or
push
sbbl
jae
inc
loopne
or
xor
pop
mov
push
jecxz
xor
cmp
add
mov
lcall
sub
sti
lods
or
clc
inc
xchg
addr16
adc
jmp
mov
mov
mov
repnz
sbb
xchg
push
lock
jg
dec
ret
dec
fildll
jno
sbb
sahf
mov
das
mov
gs
cmp
cmp
ja
out
jae
adc
enter
test
push
loopne
ljmp
nop
lock
out
push
cmpsb
shlb
into
jge
adc
xchg
pop
stc
mov
sbb
out
mov
inc
pop
and
jmp
add
inc
fisubrl
inc
xchg
scas
jb
jp
xor
lcall
sahf
xor
icebp
sbb
call
lahf
add
shrl
mov
popa
inc
incl
cmp
mov
or
test
pop
mov
mov
loope
dec
cs
or
jecxz
xor
and
test
cli
mov
lcall
sbb
lods
and
mov
mov
add
mov
icebp
hlt
in
movsb
decl
fstps
out
movsb
or
mov
or
xchg
jle
fdivrs
sub
decl
ja
in
mov
js
rcr
pop
jg
scas
cli
enter
out
enter
ret
cmp
fcmovnb
pop
std
dec
dec
xchg
into
mov
ds
movq
push
mov
js
mov
sub
add
push
or
push
cltd
jg
jmp
xchg
adc
inc
call
in
sbb
loope
ljmp
int3
aas
mov
cmp
xor
in
add
lcall
ds
sbb
mov
cwtl
enter
xor
cmpsb
cmp
push
fwait
scas
or
aaa
out
outsl
and
sarl
lcall
cmpxchg
ud0
icebp
push
fcompl
mov
jecxz
aas
popf
in
decl
stc
pop
jp
lods
add
xor
adc
outsl
rcrl
leave
sbb
dec
and
out
dec
pusha
cmpsb
sub
adc
sub
incl
cmp
push
out
mov
mov
mov
or
mull
lret
jle
push
std
xchg
sub
or
sub
or
mov
adc
in
push
mov
dec
lods
push
test
cmp
inc
push
adc
lahf
jmp
cmpsb
inc
decl
xor
sbb
jnp
mov
dec
xchg
jg
icebp
call
fwait
add
mov
or
int3
adc
mov
jb
add
mov
rep
lods
imul
stos
and
mov
jge
mov
pop
stos
xor
ljmp
lret
sbb
in
mov
mov
pop
or
inc
cwtl
shll
ljmp
lock
sbb
lcall
xchg
dec
incl
icebp
ret
xor
dec
pop
into
scas
in
pop
add
aam
addr16
cltd
sub
test
and
sbb
sub
cli
and
lods
cmp
adc
cwtl
shr
hlt
vdivpd
out
lock
leave
mov
in
pop
add
jg
daa
jl
mov
sbb
imul
hlt
mov
out
test
jmp
mov
adc
mov
hlt
sti
lcall
aaa
sub
push
mov
addr16
test
cmp
dec
jg
push
sub
cld
mov
daa
mov
jmp
lcall
jge
les
mov
jb
jg
xorb
mov
jmp
adc
jmp
add
cmc
and
adc
jle
add
les
mov
addl
jno
jb
pop
insl
fcmovne
mov
fs
ss
ret
imul
repz
xchg
dec
loopne
ficoml
cmp
xchg
add
incl
mov
in
add
out
cmc
aad
rol
filds
mov
xchg
leave
push
shlb
adc
lret
fs
lods
rorb
sub
call
add
and
mov
jmp
ss
call
push
jmp
inc
ja
cmpsb
or
test
xor
fimull
dec
iret
mov
fld
std
dec
dec
pushf
scas
sub
sete
and
and
shll
stc
scas
pop
xor
sub
fisubrl
out
mov
int
mov
je
sub
sarb
xchg
jmp
push
insb
xor
fistpll
push
enter
or
les
sbbb
cmp
cmc
jle
outsl
mov
in
ljmp
dec
in
sbb
sub
mov
xor
fldl
cmc
rcrl
dec
push
adc
jae
mov
jge
lahf
sarb
in
mov
call
loopne
idivb
ljmp
mov
outsl
pushf
sbb
sahf
cltd
dec
repnz
daa
adc
fistpl
ss
sub
lcall
sub
pop
cli
ss
mov
pushl
stos
push
xlat
popa
mov
jbe
popa
ljmp
lahf
rcrl
jg
int3
rorl
push
shl
and
int3
lds
cmc
xor
sub
in
cltd
in
cli
xchg
inc
or
loop
jne
push
sbb
jg
mov
js
sub
shll
lods
sub
xor
xor
cld
mov
stc
sbb
cmp
leave
outsl
push
mov
lcall
adc
daa
arpl
adc
push
and
ret
xchg
mov
mov
incb
cwtl
outsb
bound
out
or
subl
cs
and
clc
push
add
fidivrs
mov
dec
mov
test
xor
mov
jnp
xchg
cmp
daa
test
pusha
sbb
inc
and
popf
lret
and
ljmp
cltd
push
xor
daa
aad
shrl
dec
sahf
aad
into
mov
xor
shlb
inc
dec
cwtl
dec
add
das
cltd
mov
mov
xor
scas
sar
lea
sbb
imul
ja
movsb
mov
inc
inc
jp
or
hlt
lcall
lea
mov
dec
rcrl
mov
aaa
jp
mov
add
xor
lret
xor
les
cwtl
lock
call
icebp
iret
dec
mov
fdivrl
sar
fsubrs
inc
popf
add
jecxz
sbb
xchg
int
lcall
dec
dec
mov
push
lods
stos
jb
test
push
cmp
xor
pop
lcall
and
call
cmpsb
mov
scas
shl
in
mov
popa
lods
and
aad
pushf
lods
pop
clc
decl
dec
int3
mov
inc
sub
out
dec
rclb
flds
mov
cmpsb
jno
mov
inc
aaa
xor
cs
fcomip
mov
arpl
pusha
aas
clc
xor
sbb
pop
mov
cmp
push
or
push
leave
xchg
inc
lds
movsb
ljmp
cld
movsb
dec
leave
repnz
push
fcmovb
jg
and
fwait
add
ret
dec
stos
sbb
movsl
out
rol
jge
incl
dec
add
gs
or
fistpl
fbld
into
iret
iret
sub
mov
out
xchg
xchg
and
jbe
cmpsb
sbb
test
pop
or
aaa
js
jle
in
cmp
pushl
ljmp
sbb
fmull
out
jno
xchg
dec
mov
gs
xchg
insb
xor
push
pushf
stos
int3
jmp
ja
rcrb
mov
pop
call
cwtl
repz
inc
pop
or
js
push
incl
sub
add
pop
mov
pop
clc
call
out
and
and
xchg
adc
pop
mov
call
or
sbb
or
sub
sbb
inc
cmpsb
cmp
cmp
push
in
dec
stos
out
sub
cs
incl
jle
mov
and
xor
push
es
xor
das
ds
adc
xlat
push
or
mov
and
and
pop
test
dec
das
push
ljmp
ljmp
cmpsb
add
or
daa
int
xchg
int3
mov
add
xchg
sub
or
sub
dec
fldenv
int3
jno
xorl
fcmovne
add
rolb
and
jmp
jae
scas
loop
push
jmp
out
mov
lds
sub
sub
std
lods
sbb
xchg
repz
pushl
in
push
xchg
sahf
adc
xchg
mov
mov
jmp
rolb
or
jb
fildll
add
mov
cmp
push
popf
lds
sbb
rolb
xchg
pop
xor
add
stc
loopne
ltr
jle
jp
xor
incl
stos
lret
int
mov
sbb
mov
loop
xor
cwtl
cmp
outsl
icebp
mov
mov
jne
xchg
dec
movsl
fs
daa
hlt
dec
sti
pop
xchg
xchg
jbe
mov
adc
lret
aaa
jno
aam
out
cmp
add
daa
mov
and
sahf
xor
and
das
mov
pop
lods
movsb
packuswb
mov
and
mov
ljmp
cmpsl
sub
outsl
mov
out
sti
lds
jg
cld
pushl
imul
push
xchg
repnz
inc
bound
add
daa
adc
adc
adc
cmp
xor
clc
invd
icebp
lret
xchg
fsub
pop
or
adc
inc
dec
fucomp
xchg
xor
pushl
repnz
jb
pop
push
xchg
sbb
jecxz
test
jns
test
jae
mov
aas
adc
insb
mov
jmp
lret
inc
popa
and
xor
call
mov
mov
mov
pop
mov
cltd
adc
test
cmp
aaa
mov
cmp
or
pop
mov
lock
nop
xor
push
xor
jl
repnz
cmp
mov
int3
xchg
sbb
push
popf
and
loop
jns
mov
pushf
loopne
aaa
loopne
mov
push
inc
cli
xor
sbb
jnp
lret
dec
push
cltd
fwait
and
jg
outsl
popf
aad
daa
leave
push
out
xor
adc
lret
daa
sbb
mov
mov
add
ret
sbb
fcomip
decl
cmc
pop
adc
or
jns
ds
aam
icebp
inc
inc
xchg
sahf
and
sbb
push
xchg
jg
gs
dec
ds
xchg
mov
movsb
and
movsbl
es
mulb
add
pop
loopne
mov
mov
cmp
pop
les
gs
cmp
nop
hlt
aaa
cld
call
hlt
inc
aad
ss
mov
shll
mov
ret
sbb
pop
scas
pop
sbbl
or
mov
test
aas
add
or
sahf
insb
xor
lods
pop
loope
fcom
out
push
lods
aaa
push
popl
mov
mov
mov
sub
sbb
add
and
fdivs
insb
adc
xor
push
std
jg
mov
add
add
add
mov
out
shr
mov
push
lcall
sub
adc
imul
test
in
shlb
cmpsl
pushl
dec
jge
pop
stos
xlat
adc
pop
cmpsb
jg
mov
aad
sbb
or
mov
jbe
or
decl
mov
nop
jnp
mov
push
jnp
scas
fists
push
gs
push
or
and
dec
push
inc
sti
out
or
jmp
xor
scas
insb
dec
test
push
fmuls
mov
push
cs
fwait
loope
cli
add
push
into
cmp
imul
adcl
mov
lock
xor
sbbl
call
inc
stos
mov
jo
pushl
cmp
fcoml
ret
mov
xor
test
mov
dec
xor
sbb
mov
testl
dec
push
lahf
lahf
xor
cwtl
std
push
daa
enter
test
call
sbb
jle
mov
std
adc
or
or
mov
or
or
pop
into
xchg
loopne
jbe
mov
cmp
add
pop
push
mov
jmp
ljmp
out
xchg
popf
aas
inc
dec
mov
push
aaa
pop
ret
test
sar
cmpsb
cmpsl
ja
test
pop
sbb
stc
inc
addb
imul
dec
xchg
add
jge
mov
xor
daa
mov
test
mov
cld
cmp
sbb
or
rorb
xchg
mov
push
push
cmc
fists
adc
cmc
and
xor
cmp
fildl
fdivp
mov
mov
ret
cmpsb
dec
dec
lcall
inc
loopne
test
cltd
or
movsl
in
jg
cmpsb
jnp
push
jns
sub
std
pop
sahf
stos
pop
jg
add
std
jne
mov
out
mov
cli
das
mov
and
loop
ja
sbb
xchg
into
nop
in
fcoml
lea
inc
aad
pop
inc
sub
leave
xchg
insb
mov
cmp
roll
aaa
outsb
adc
outsl
push
cld
pop
les
jecxz
pop
in
mov
fidivl
in
js
mov
int
arpl
aam
and
or
cmc
lock
bound
sar
movsl
add
jbe
mov
dec
xchg
aas
insl
in
sti
inc
cmp
jmp
nop
xchg
xchg
out
cwtl
out
lret
ljmp
cmp
jo
ljmp
stc
xor
push
call
and
or
inc
inc
mov
or
test
mov
shrl
das
push
adc
std
and
pop
out
or
or
xchg
in
mov
jno
cmpsl
jmp
push
loope
fwait
push
or
push
repz
and
icebp
std
ljmp
inc
ljmp
xor
in
sbb
ljmp
xorb
enter
call
std
and
decl
mov
movsb
xchg
in
sub
mov
or
mov
push
fwait
xchg
jb
aaa
pop
test
jb
jbe
mov
add
sbb
fdivrs
mov
lret
data16
or
dec
loop
mov
dec
sbb
call
cmp
jnp
flds
sub
sarb
inc
stc
push
aad
iret
and
lcall
and
fwait
push
or
into
jns
push
out
add
xor
movsl
push
lcall
xchg
sbb
outsl
xchg
push
or
push
nop
mov
cmp
jl
pushl
adc
add
enter
jmp
in
inc
adc
jmp
inc
jae
and
or
adc
popf
in
lds
mov
xor
mov
jnp
sbb
ds
add
hlt
mov
lods
mov
rclb
inc
stc
pop
jns
push
lea
in
pop
loopne
sarb
shll
std
iret
ljmp
xchg
fildll
adc
rclb
leave
mov
pushf
faddl
add
das
clc
mov
xor
jp
subl
xchg
icebp
loopne
cmp
loop
mov
out
sub
adc
insl
imul
pusha
sub
sbb
jecxz
cmp
lcall
mov
std
les
repz
les
xor
cmp
mov
mov
ljmp
aad
dec
pop
and
mov
shl
mov
mov
fisttps
and
jmp
xorb
sbb
mov
mov
xor
xchg
fcmovnbe
mov
adc
inc
lret
enter
js
out
fidivl
rclb
add
mov
fsubrl
pop
mov
stc
pop
insb
fdivl
pop
cmp
xchg
xchg
cmpl
call
mov
ljmp
xor
cmp
test
or
and
clc
enter
decl
mov
xchg
shl
lcall
leave
adc
fistl
inc
dec
std
pushf
mov
loop
rcrb
jmp
lret
aam
mov
mov
es
movsb
stos
inc
adc
xchg
adc
out
sub
inc
or
arpl
lcall
and
mov
lods
pop
repz
ror
fsubrs
add
lea
dec
add
fnstsw
repz
mov
mov
mov
sbb
fisubs
out
mov
mov
cmp
jg
mov
push
cmpsl
cltd
push
lcallw
dec
jg
movsb
mov
jecxz
cmp
pop
loopne
jbe
insl
dec
mov
loope
fstpt
adc
lcall
test
pop
es
jns
adc
lea
inc
flds
sub
or
sbb
add
mul
iret
sbb
push
mov
or
push
or
pushl
pop
imul
xchg
add
es
mov
dec
clc
pop
xchg
cwtl
ffreep
add
xchg
xchg
call
fscale
adc
in
jp
aas
mov
loopne
fsts
pop
dec
iret
dec
xor
stos
cld
cli
imul
scas
add
mov
lods
and
outsl
nop
ja
xchg
or
shrl
stos
mov
mov
pop
and
pop
loop
dec
shrb
inc
icebp
push
popf
je
xchg
fists
decl
shl
or
jle
add
jb
pop
aas
lock
daa
dec
loopne
jo
ret
shrl
xor
pop
inc
and
pop
or
call
jno
xchg
addr16
adc
cmp
adc
fwait
dec
or
addr16
cld
xchg
xchg
gs
mov
adc
out
lcall
cltd
es
mov
sub
mov
cmc
out
js
or
push
or
xor
imul
push
jmp
jbe
ljmp
lret
stos
icebp
das
push
sub
lret
xchg
push
inc
les
mov
arpl
arpl
mul
out
jb
xchg
dec
and
decl
lods
dec
hlt
xchg
jb
cmc
fcmovnu
mov
inc
js
incl
cmp
jmp
mov
cmp
lahf
xchg
inc
or
inc
sbb
and
incl
cmpl
je
test
inc
xlat
fisttpl
push
stc
inc
outsb
pop
add
mov
outsb
call
clc
decl
nop
je
sub
mov
and
xchg
pop
jmp
jno
movb
mov
dec
or
jle
aaa
das
dec
lret
jae
xchg
movlps
xchg
dec
ljmp
nop
js,pt
dec
and
sar
pop
cs
cmp
stos
testl
cwtl
jb
jl
cld
mov
movsl
add
or
fsubl
sbb
push
decl
mov
jp
mov
aaa
cmp
cwtl
sub
xchg
divps
incl
xor
mov
test
mov
sub
sbb
or
sub
mov
loope
sbb
mov
clc
decl
pavgb
mov
sahf
shrl
or
mov
sub
xor
jg
mov
movsb
sahf
rclb
jns
pop
or
incl
mov
test
sarb
int3
xchg
mov
add
pushl
sbb
pushf
enter
xchg
sbb
cmp
fld
jg
inc
fwait
loopne
testb
fidivrl
clc
ljmp
lahf
js
jp
daa
cmc
mov
or
xor
inc
aas
aaa
sbb
xchg
xor
inc
shlb
xor
push
sub
or
jg
push
cli
insb
or
call
mulb
arpl
or
decl
dec
add
mov
and
test
das
shrb
pushf
ljmp
rcrb
and
inc
out
inc
shl
cmp
lcall
pop
iret
adc
arpl
ret
dec
arpl
pop
rolb
insl
ljmp
ja
scas
ficomps
jbe
mov
sub
and
jg
cmp
pushf
iret
decl
sti
pop
xchg
vminsd
lock
data16
pop
mov
in
stos
add
xchg
incl
pslld
repnz
or
xor
popf
add
sbb
adc
add
xor
lock
ds
pop
push
pop
jge
bound
lods
lods
lods
push
movsl
add
lods
dec
test
scas
enter
lods
lods
lods
lods
hlt
mov
dec
cltd
in
test
hlt
ja
cs
lret
and
xor
outsb
mov
jb
sbb
mov
movsl
mov
adc
mov
repnz
fisttpl
xchg
dec
gs
dec
xor
push
xor
cs
push
test
decl
out
outsb
pop
inc
leave
add
xor
fmul
leave
adc
addl
adc
imul
mov
js
mov
ss
ljmp
hlt
movsl
jo
notb
leave
leave
shrb
push
pop
stc
in
fsubr
fsubs
stc
push
mov
imul
jp
imul
lret
or
mov
mov
add
xor
mov
inc
push
int
fnstcw
jmp
bound
mov
out
div
test
out
sahf
inc
pop
sbb
mov
mov
mov
dec
vshufps
repz
stc
jecxz
std
dec
sti
insl
test
pop
jo
push
or
jp
mov
mov
outsl
or
jmp
adc
shrb
out
shr
insb
lea
dec
pop
sbb
mov
adc
jp
test
repnz
cmpb
lods
fidivrl
les
ds
cmp
pushf
fisubrl
in
jg
outsl
push
xor
or
mov
ljmp
lods
xchg
outsl
xlat
nop
cmc
jmp
ljmp
neg
aam
testb
shrl
fmulp
je
fmulp
lds
and
loop,pn
cmc
or
mov
filds
divl
repnz
lret
daa
sti
and
mov
jbe
in
and
leave
pop
rorb
fisubrl
add
subb
xchg
adc
jle
cwtl
loop
and
loop
sbb
into
cmp
inc
mov
xchg
and
jnp
repz
loope
sub
lods
nop
adc
dec
mov
lahf
pop
sahf
mov
int3
mov
cld
xor
jmp
push
idiv
mov
inc
lock
or
pushl
cmp
mov
push
sub
scas
clc
lds
enter
xor
mov
xchg
and
out
sub
pop
test
sti
cmp
ljmp
hlt
jns
sbb
je
fimull
mov
xor
fnstsw
lret
add
pop
mov
call
mov
add
push
or
nop
mov
mov
loop
decl
fsubrl
xchg
xchg
adc
sub
in
cmp
sbb
cli
pop
mov
pminsw
xchg
jg,pt
cld
pop
bound
inc
decb
push
lcall
hlt
pushl
loopne
fs
in
in
decb
mov
addb
sub
stos
mov
movnti
inc
and
jmp
xor
shlb
addb
aad
push
xchg
dec
sub
and
fs
adc
repz
scas
push
das
push
xor
fucomi
out
in
xlat
test
xchg
or
fwait
dec
test
pop
jno
jl
pop
les
cli
adc
shl
cmp
aam
jl
cmc
decl
push
jne
and
mov
lods
rorl
xlat
push
cmpb
pusha
ds
or
add
scas
rcrb
push
scas
enter
xor
clc
out
xor
call
nop
adc
pop
cmp
push
test
mov
mov
cmp
loope
pop
enter
jbe
test
mov
or
in
pop
lahf
shll
pop
pusha
cld
insb
das
clc
and
fistps
cli
cld
jecxz
cli
mov
bound
imull
cli
inc
mov
mov
das
sbb
ja
xchg
loope
xor
int
scas
mov
mov
jl
loopne
push
mov
mov
ds
mov
ret
out
stos
sub
lcall
insb
std
aaa
inc
ljmp
or
xor
xchg
xor
sbb
lret
ds
pop
das
xchg
push
or
jg
sbb
pop
adc
jno
xor
repz
cli
xchg
push
mov
hlt
mov
into
test
fisubl
icebp
cmp
xor
sbb
pop
cld
int
mov
loop
in
sti
cli
push
loope
xchg
or
je
repz
fdivr
lods
fsubs
in
lahf
jbe
xchg
cmp
add
mov
in
mov
or
pop
add
rcrb
stos
fld
arpl
push
sub
add
icebp
jmp
shl
and
clc
int
mov
aam
int
jge
out
mov
in
ret
adc
fdiv
dec
sub
mov
jmp
xor
jmp
mov
sub
in
cmc
das
movd
mov
xchg
adcl
nop
clc
rcr
pop
xchg
stos
fstl
fsubp
ljmp
hlt
out
lret
cwtl
xchg
push
xlat
push
xchg
inc
insb
loope
sub
pop
ljmp
sahf
sti
cmp
aam
fstpt
or
je
ljmp
in
dec
or
sahf
mov
adc
fnstsw
cli
ljmp
out
fisubrl
sub
pop
int
out
dec
fbstp
sub
dec
dec
lret
push
xor
jecxz
shr
mov
jg
stc
xchg
xchg
pop
pop
mov
fiadds
cmp
push
push
cli
jle
test
int3
push
addb
sub
ljmp
dec
call
pop
lret
pop
xor
inc
loopne
out
jle
icebp
call
mov
sbb
or
pop
pop
pop
testl
ljmp
xor
test
mov
loopne
lds
ficoml
sar
and
nop
ss
push
push
or
mov
jl
lods
lret
xchg
lret
aad
movl
mov
lret
add
repz
push
fcomip
scas
jno
cld
sub
pop
cmp
cmc
cli
aas
pop
lock
out
popa
xchg
sub
sub
ds
xorb
call
cltd
incb
xor
mov
out
mov
subb
dec
popf
xor
mov
pop
cmp
repnz
mov
das
les
jns
xchg
xchg
ss
or
aas
jl
sub
add
xor
ret
out
stos
fwait
xorl
sub
adc
outsb
mov
sbb
add
mov
xor
adc
jmp
mov
jmp
mov
in
xchg
fcmovnu
inc
fbld
js
pop
pop
sbb
adcl
out
jmp
mov
lret
test
inc
cmp
dec
add
and
daa
outsl
lods
loop
ja
jp
cmc
sbb
xchg
lret
push
mov
pushl
cli
adc
cmp
xchg
subl
mov
shlb
lea
pop
loop
ljmp
xchg
lret
ret
mov
faddl
cli
stc
icebp
punpckldq
push
insl
pushf
sbb
cmp
ja
cwtl
lret
jmp
test
in
imul
dec
inc
data16
aaa
mov
aas
ret
or
fxch
sti
mov
or
sub
push
dec
cmpsb
mov
sbb
aaa
scas
cmpsb
and
push
sub
lcall
aam
push
ja
and
jmp
icebp
ljmp
mov
ja
push
cmp
mov
jg
andb
ja
xchg
or
push
jae
add
loop
ljmp
lahf
stos
lock
sub
pop
sbb
mov
ljmp
lock
ljmp
pmaxsw
fdivrs
lcall
aad
repnz
or
aam
or
insb
and
mov
xor
cmp
paddd
adc
jno
out
repnz
das
push
out
inc
inc
add
jg
inc
pop
sahf
or
stc
cltd
rcr
jmp
outsb
mov
mov
sub
movsb
mov
loop
mov
in
inc
loope
mov
or
lock
dec
mov
push
pop
pushl
adc
es
push
jecxz
pop
mov
xchg
sbb
inc
lock
push
mov
fcmovbe
mov
push
iret
sahf
aad
inc
mov
in
mov
mov
in
jo
fbld
loopne
adc
sbb
or
jg
jmp
shlb
cmp
jne
add
mov
loop
pop
adc
mov
pop
add
loope
out
aas
cld
xchg
sub
bound
js
or
push
repnz
stos
repnz
and
add
scas
repnz
rol
into
negl
jo
mov
stc
fsubrl
mov
pop
add
inc
aam
enter
lret
or
fstps
sbb
in
lahf
iret
imul
xchg
or
pop
loop
adc
cli
ljmp
adc
les
adc
stc
push
pop
cmpl
outsl
mov
aas
inc
pop
xor
out
movsb
xlat
shlb
xor
ljmp
loope
dec
test
fdivrs
out
add
in
fs
mov
aad
lock
jo
jns
in
ljmp
adc
jne
add
loopne
mov
push
pop
mov
mov
mov
jl
adc
cmp
pop
adc
scas
pop
and
adc
inc
clc
cmp
sbb
jmp
xor
pusha
test
jmp
sbb
pusha
xor
cld
out
movsb
mov
inc
mov
mov
outsb
out
cmp
pop
scas
decl
pusha
mov
push
cmp
and
into
pop
ss
in
ja
call
loopne
stos
faddp
mov
pop
mov
gs
or
push
ljmp
lea
push
std
mov
cmp
sub
adc
sbb
fistps
ror
add
and
jbe
jg
dec
xor
fcompl
inc
add
add
sbb
and
and
xor
inc
pop
and
hlt
dec
ficomps
fwait
dec
push
pushf
sti
call
push
push
sbb
cmp
ds
aaa
jnp
lret
push
sar
vmread
out
leave
inc
mov
decl
sbb
and
dec
push
push
pop
dec
dec
into
cld
psllw
cmp
xor
ds
sub
or
dec
cld
mov
cmp
ljmp
inc
call
jns
xor
lret
or
mov
out
in
repnz
cmp
dec
push
stos
dec
push
pop
aaa
sbb
cwtl
fisubrs
ja
shrl
subl
je
and
push
xor
jg
mov
lcall
push
pop
rorb
fisttps
in
call
push
pop
aaa
lahf
mov
jae
jne
sarl
hlt
pop
das
addr16
or
jno
js
fldt
mov
and
xor
adc
mov
jae
mov
js
inc
or
stos
lock
add
and
mov
rcrl
add
fsts
lret
jo
insl
adc
jge
jb
sbb
in
adc
rol
cmp
dec
mov
ss
add
std
pop
in
sarb
out
inc
xchg
jae
and
nop
add
shrl
sarb
mov
adc
cli
cmp
scas
inc
repz
icebp
jae
lcall
xor
rcl
cmp
push
scas
push
stc
imul
sbb
pop
mov
adc
cmp
mulb
incl
fisubrs
pop
xchg
mov
in
jg
pop
cld
push
shll
leave
fisubl
xor
ds
push
lock
fistps
sbb
jp
fildll
les
mov
daa
out
add
icebp
pop
test
in
cs
ljmp
cmc
adc
pop
or
cmp
ss
rol
das
cld
mov
dec
cmp
jge
mov
fistpll
inc
push
fcmovne
lret
sub
or
pop
dec
inc
jl
pop
inc
or
jno
mov
jg
cs
je
sbb
xor
push
cmp
inc
push
adc
hlt
lcall
iret
jns
and
fstpl
negb
cmp
and
mov
outsl
jmp
push
fidivl
cmp
push
pop
mov
sub
lcall
shll
mov
pop
cmc
into
mov
sbb
into
insl
push
lahf
xor
pop
cmc
ljmp
push
arpl
mov
enter
imulb
jg
call
sub
lds
xor
jp
mov
bound
push
test
ss
cmpb
repz
jle
push
xchg
popf
add
or
push
dec
cltd
std
ds
lcall
push
cmc
pop
cwtl
add
das
sbb
shll
sbb
push
ret
scas
pop
popa
mov
cld
ret
pop
jg
test
sarb
xchg
mov
fisubs
call
jmp
dec
xor
inc
stc
xor
jg
stc
jecxz
add
sbb
in
mov
push
push
rolb
push
pop
rol
or
stos
or
dec
inc
pop
negl
sahf
iret
mov
xor
pop
call
add
sbb
loop
in
or
xchg
ljmp
btr
sub
mov
mov
jg
or
js
orb
sbb
nop
insl
in
int3
rol
sbb
mov
add
inc
or
shlb
int3
mov
adc
mov
lcall
cli
push
rclb
and
and
xor
lcall
jmp
sub
mov
push
pop
jg
aad
faddl
loop
dec
mov
mov
sub
movsb
mov
mov
jno
dec
mov
sbb
es
lcall
cld
in
lods
push
stc
test
subb
cwtl
cmp
ljmp
orb
cmp
add
hlt
fadds
jne
mov
push
xor
cmp
and
in
sbb
sbb
mov
mov
xchg
filds
jno
cli
pop
push
add
push
cmp
jecxz
out
test
add
push
jnp
je,pn
mov
hlt
cmpsb
cmp
inc
or
arpl
les
pop
cld
scas
mov
mov
ja
cli
mov
clc
pop
cld
incl
jne
test
fisttps
and
jb
je
stos
push
cmp
pop
pushf
xchg
and
mov
pushl
push
cmp
push
dec
pop
pop
xor
orps
mov
add
sahf
push
dec
jae
cmpb
ljmp
push
cmp
jbe
sbb
jmp
xchg
mov
sbb
push
out
dec
or
daa
test
sub
sbb
mov
xchg
mov
lea
add
inc
loopne
cmp
cmp
clc
ja
fimuls
dec
sbb
pop
xlat
in
cmp
pop
cmpb
inc
mov
sub
push
ljmp
push
cmp
jb
xor
sbb
dec
mov
lock
cli
push
push
xor
pop
cmpsl
pop
push
xchg
rclb
fucomp
fnstcw
mov
sub
add
jg
mov
jle
dec
loopne
push
add
push
cltd
add
movsb
adc
push
sbb
popf
bound
sbb
decl
jp
adc
cmp
mov
lea
cmp
call
jge
inc
jae
imul
sbb
jne
les
pop
int3
scas
sub
loopne
add
sbb
pop
inc
inc
in
jl,pt
dec
repnz
cli
push
jecxz
push
sbb
call
fldcw
fbld
xchg
fimuls
sub
cs
test
call
psubusw
cmp
cli
jg
adc
dec
push
data16
pop
cmp
scas
pop
cmp
dec
cmp
dec
orl
adc
jmp
insb
xchg
lods
cmp
popf
or
sbb
cld
das
cli
sbb
cmp
repnz
repz
or
test
bound
pop
fcompl
xchg
fs
xor
jne
leave
cmc
jb
test
sub
les
outsb
mov
pop
addr16
scas
fidivrs
sub
jl
xchg
adc
mov
cli
add
test
lods
sbb
inc
ljmp
aas
sbb
mov
mov
jle
ror
sub
jg
movsl
mov
filds
data16
bound
pop
cmp
cmp
dec
test
cmp
imul
adc
arpl
pushf
xchg
incl
or
cmp
mov
int
in
push
push
mov
push
arpl
dec
mov
sub
lret
cmp
inc
pusha
ret
popa
dec
mov
iret
sti
mov
das
mov
xchg
jb
pop
pop
xor
fcoms
xor
ret
test
cmp
mov
nop
dec
lret
cli
adc
decl
repnz
inc
ret
mov
adc
pushl
jnp
push
and
lret
or
sar
call
stos
nop
call
fmuls
popf
lret
arpl
mov
or
dec
adc
add
das
ret
mov
mov
decl
cmp
mov
outsb
icebp
mov
test
ret
mov
das
push
cmp
mov
mov
inc
cmp
xor
xor
lret
mov
or
xchg
aas
lock
mov
jle
mov
stos
and
sub
lds
loopne
lret
add
mov
xor
test
shl
ret
inc
pushf
iret
add
movsb
cli
fwait
jg
adc
inc
jmp
push
inc
std
rolb
sbb
cli
jmp
pushl
xchg
fs
adc
cmp
dec
push
lock
test
clc
clc
push
adc
addr16
adc
addl
repz
test
cs
pop
loop
lahf
rcrb
hlt
ja
aaa
les
xchg
js
cmc
xchg
call
adc
mov
and
cmp
or
lcall
mov
mov
out
inc
shlb
cs
rol
push
jl
lock
pop
push
pop
cld
dec
out
jno
and
jp
ljmp
and
cmp
mov
cli
adc
inc
cmp
ret
sub
push
jg
jge
les
jmp
scas
mov
ja
outsb
mov
xor
xor
aad
inc
repnz
movsl
push
fdivl
cld
dec
imul
jmp
xchg
and
mov
mov
stos
pushl
mov
imul
inc
add
or
dec
lahf
jecxz
hlt
jns
ficoms
jmp
push
cmc
lds
jecxz
adc
cs
jg
pop
xchg
ljmp
push
cmp
icebp
xor
xor
push
fdivrp
decl
lock
lret
mov
inc
test
out
or
enter
std
mov
push
mov
or
lahf
pop
das
fs
rcrl
ljmp
cmp
dec
std
push
out
into
pop
pusha
jle
cmp
push
icebp
cmp
iret
adc
dec
jge
dec
stos
push
xchg
pop
int3
push
comiss
loope
ss
lret
and
cld
push
ss
add
pop
movsb
add
or
mov
repz
pop
dec
pop
outsb
xchg
mov
lds
out
loope
je
mov
xchg
ret
adc
lcall
adc
call
cli
push
sbb
lcall
pop
lods
inc
cmovp
mov
xchg
fsubrs
icebp
pop
add
aaa
clc
movsb
sbb
and
jne
jbe
sbb
sub
and
mul
or
aas
out
or
xor
ds
xor
scas
mov
cli
das
push
out
js
mov
cmp
adc
iret
cwtl
add
and
pop
and
ljmp
clc
mov
arpl
sbb
pop
cwtl
cmpsb
sbb
in
ficompl
cld
movsb
adc
imul
push
cli
cmp
or
mov
or
stos
outsl
sbb
test
push
adc
ret
out
rcll
sub
xchg
add
arpl
cmc
sub
and
arpl
fidivrs
mov
or
inc
cld
mov
fsub
negb
aaa
ja
pop
mov
in
jo
adcb
sub
dec
dec
xor
repnz
sub
jg
pop
call
adc
loope
loope
mov
lods
incl
jecxz
jge
fidivrl
mov
or
jmp
lret
sti
fsubrs
fnstcw
cmp
adc
ffree
shlb
bound
jge
scas
jbe
pop
movsb
mov
lds
push
mov
cmp
mov
and
pop
inc
jl
in
xorl
inc
add
mov
je
scas
daa
aaa
pop
push
sub
scas
cli
call
adc
dec
pop
xor
sbb
mov
imul
or
push
pop
cmp
outsb
cpuid
int3
cmp
xor
into
mov
adc
andb
cld
incl
mov
pop
add
ljmp
cmp
inc
flds
in
mov
cltd
add
push
les
sbb
and
inc
push
inc
sub
ss
push
test
mov
dec
lock
cwtl
adc
xor
or
lret
lcall
and
idiv
mov
pop
sar
pop
cli
xchg
fistpll
sahf
inc
scas
mov
dec
cs
das
and
mov
sbb
ss
cld
test
ret
inc
test
xchg
scas
mov
cltd
add
or
ljmp
popf
insb
daa
lcall
jecxz
inc
jg
fdivrl
fistps
pop
rol
xchg
into
loop
ds
pop
xlat
mov
in
test
in
imul
mov
push
jne
fwait
sbb
sbb
jbe
push
push
ret
push
jo
and
adc
add
pop
ljmp
imul
inc
call
aam
jle
push
jmp
pop
fdivl
fsubs
je
imul
inc
out
rcrb
jns
cltd
stos
aaa
push
or
scas
bound
sbb
insb
call
repz
negl
lock
xchg
sub
mov
xchg
xor
ss
pop
int3
mov
pushl
mov
in
xchg
adc
data16
pop
add
out
add
xchg
dec
arpl
push
xchg
mov
out
dec
andb
sbb
add
shlb
mov
in
ret
xor
dec
or
sub
mov
sbb
mov
sbb
pushf
leave
cs
dec
and
aaa
sbb
dec
adc
stc
push
adc
scas
out
and
decl
or
adc
jae
or
clc
add
jo
hlt
int3
add
xchg
lock
hlt
xor
sbb
sbb
out
xchg
icebp
mov
sbb
fisubs
dec
push
data16
imul
add
lock
aaa
ds
rcr
lret
shl
jmp
dec
sub
mov
adc
movsb
ja
cli
inc
mov
into
in
out
or
test
testb
stc
add
jmp
dec
leave
repnz
jbe
dec
ljmp
es
add
movsb
in
sbb
jecxz
jmp
pop
pop
cmc
pusha
negb
push
mov
inc
or
push
xor
das
cs
inc
xchg
cld
push
mov
mov
sbb
xor
xor
or
adc
cmp
repz
je
push
shll
mov
mov
mov
out
adc
pop
shlb
aam
xor
add
leave
lock
inc
je
outsb
sub
and
sbb
sub
icebp
push
xor
adc
xor
packssdw
cmpb
loop
cmp
mov
fbstp
adc
clc
es
in
cmp
push
pop
pop
inc
cmc
xor
xor
mov
xorb
ret
cli
lods
fmull
decl
dec
cld
pop
push
stc
mov
adc
jmp
pop
jmp
cmp
inc
aad
lds
mov
nop
outsb
cltd
add
idiv
jg
jmp
push
outsb
add
int
mov
inc
mov
adc
lds
xchg
inc
enter
leave
inc
mov
jns
adc
adcb
cmp
icebp
or
aas
adc
nop
adc
daa
fwait
cmp
add
inc
cs
sahf
scas
ljmp
and
mov
mov
cmp
mov
cmp
and
cmp
jge
fisubrs
fcoms
ss
pop
mov
sbb
inc
jbe
mov
call
mov
stos
lds
es
lcall
ljmp
xchg
sarb
pop
sbb
or
mov
push
inc
test
daa
jno
mov
or
jbe
cli
inc
js
sub
ja
cli
or
cmc
ret
push
ret
mov
mov
xchg
or
push
rorl
pop
jg
movsb
sti
xchg
in
aad
jmp
jo
int
jbe
mov
pop
mov
mov
mov
fisttps
xchg
fwait
cmp
pop
shll
xor
pushl
mov
cli
mov
cld
add
arpl
lret
out
jnp
or
xchg
sub
cld
adc
adc
aaa
loope
jecxz
out
sub
push
jo
cs
add
jne
adc
pop
xlat
ss
jl
sbb
inc
loop
push
xchg
push
mov
jno
xchg
adc
ljmp
or
jnp
xchg
sub
js
adc
lcall
hlt
pop
dec
adc
mov
adc
test
in
outsb
sub
inc
push
into
fdiv
inc
pop
mov
mov
fistps
mov
push
mov
int3
loop
pushf
jecxz
hlt
hlt
sahf
popf
jmp
lret
repz
or
xor
dec
loopne
adc
xlat
imul
pop
add
mov
aam
mov
popf
mov
mov
mov
sbb
cld
adc
shr
inc
incl
loop
pop
cmp
lahf
fcmovnu
jae
nop
std
xlat
sbb
daa
or
movsb
cmp
add
rcrb
pushf
in
iret
ficompl
ret
ljmp
outsb
mov
test
sarl
xchg
lods
clc
jecxz
sar
jg
mov
rcrl
fsubl
cmp
iret
pusha
mov
pushl
xchg
pop
fwait
and
pop
sbb
in
pop
mov
ss
mov
inc
cmp
out
mov
clc
xchg
jecxz
rcrb
outsb
outsl
jp
inc
pop
sbb
clc
pavgb
mov
jmp
xchg
out
xchg
mov
fistps
orl
xchg
adc
lret
fcomp
dec
adc
daa
jb
cmc
mov
fdiv
mov
test
jne
cld
cmp
pop
int3
in
mov
not
cmp
nop
ret
fidivrl
call
mov
cmp
ljmp
data16
push
gs
mov
and
faddl
add
fsub
std
jmp
push
dec
pop
push
lret
fs
sub
and
sahf
inc
ljmp
add
movntq
out
into
sub
jno
imull
mov
in
or
mov
and
inc
scas
push
xchg
fistpll
xor
push
inc
adc
shll
mov
pop
cwtl
xor
push
xlat
pusha
sub
aam
inc
pop
je
repz
jg
jmp
stos
out
inc
jo
jmp
pusha
mov
nop
cmp
enter
or
pop
popa
loop
adc
int3
int
pop
pop
jbe
mov
clc
mov
dec
dec
sbb
sti
inc
mov
push
std
add
jg
push
dec
sahf
mov
xlat
cld
mov
jno
insb
push
or
out
add
jle
dec
insb
xor
aam
imul
addr16
mov
cmp
pop
in
pop
add
inc
cmc
ja
fwait
pop
sub
das
out
pop
xchg
cmp
sub
sub
lods
cmpl
push
aas
and
call
es
adc
testl
scas
jno
xor
leave
popf
sbb
in
mov
and
lret
fmuls
fsubrl
into
inc
lret
push
imul
sbb
enter
test
imul
inc
lahf
lret
cmp
jg
cmp
xor
mov
inc
sar
push
cmpsb
aam
test
fildl
bound
pop
sar
sbb
lret
xchg
cli
mov
add
mov
push
mov
bound
loopne
or
xchg
xor
je
cmpsb
or
add
sub
mov
lahf
fisubs
push
xchg
mov
adc
in
fnstenv
pop
push
push
dec
cmpsl
or
sbb
mov
fcmovnbe
xor
dec
hlt
lods
ljmp
pushl
and
hlt
xchg
cmp
and
out
xchg
mov
adc
xor
cmp
push
out
sub
decb
call
icebp
lret
out
dec
xor
xor
bound
addb
test
movsb
push
sbb
rcl
mov
xchg
xor
push
ljmp
daa
sahf
cmp
push
dec
shl
add
adc
lock
add
fcmovbe
pop
sar
js
and
mov
mov
mov
pop
jge
idiv
sub
out
pop
dec
lea
mov
repnz
adc
add
mov
jg
fiadds
cmp
xor
inc
les
dec
sti
aas
dec
sbb
jp
or
or
add
call
lret
cvtdq2ps
movsl
and
or
mov
dec
add
leave
mov
in
push
imul
sub
aaa
push
and
ljmp
mov
cli
xchg
ljmp
outsb
cmpsl
fcom
ds
std
jg
xor
sub
pop
and
or
sbb
pop
fwait
or
inc
adc
or
test
fidivrs
imul
xor
inc
pop
aas
aaa
adc
andl
pop
sbb
or
pop
pop
pop
stos
lods
repz
sahf
pop
push
lock
lods
jmp
out
decl
mov
mov
dec
ljmp
aaa
jl
clc
sar
call
xchg
call
sub
lret
add
int3
mov
and
test
aaa
call
add
cli
mov
and
shrl
das
sbb
push
jle
mov
aad
repz
out
dec
lret
loopne
mov
js
pop
iret
xchg
adc
cwtl
push
jp
in
push
outsl
add
call
and
add
mov
add
dec
push
adc
test
inc
add
sub
ret
push
lcall
jle
movsb
cmp
loope
lret
jp
ljmp
add
adc
sbb
and
rcr
xchg
mul
bound
or
sbb
test
mov
and
ljmp
add
int
les
jb
dec
in
mov
fistl
or
jmp
lds
out
pop
xchg
push
sbb
push
gs
inc
pop
sarb
mov
sbb
loopne
mov
mov
lcall
dec
cli
sub
mov
jns
popf
add
mov
cmp
fbld
les
stos
xor
loopne
add
inc
loop
movsl
scas
cs
push
pop
push
shll
and
ss
rorb
jbe
pop
inc
aam
mov
pushf
push
pusha
xchg
popa
and
adcl
mov
mov
xor
hlt
jno
orl
cmp
xchg
mov
jno
push
hlt
cltd
aam
inc
dec
lods
xchg
out
mov
jmp
sub
insb
shlb
xor
pop
insb
lods
cwtl
mov
loope
orb
icebp
jmp
ljmp
movsb
fisubs
mov
xor
in
fst
sbb
pushf
jb
in
jg
or
mov
sbb
in
popa
vfnmsub132pd
pop
nop
clc
idiv
in
outsl
in
sbb
adc
mov
movl
mov
rorl
xchg
xor
push
and
icebp
mov
jl
pop
xchg
dec
ljmp
mov
shll
mov
pushl
sbbl
xor
call
sbb
pop
push
out
ror
ret
jecxz
leave
clc
and
pop
cmp
push
test
ljmp
jbe
rcr
int3
jbe
push
sbb
aaa
push
adc
aad
sub
mov
jb
mov
mov
fsubp
cmp
jmp
into
mov
pop
dec
xchg
or
es
dec
enter
jbe
fdiv
mov
shlb
or
push
mov
mov
jg
inc
mov
ss
daa
and
out
insl
xorb
lcall
decb
cmc
xlat
jecxz
lds
pop
mov
pop
sti
push
js
jae
jp
unpckhps
incl
inc
aad
in
incb
mov
dec
xchg
xchg
rorl
pop
ja
cli
imul
mov
aaa
cmp
incb
test
fiaddl
adc
adc
pop
push
stos
mov
arpl
mov
inc
xor
sti
mov
pop
mov
xchg
ds
sti
sbb
pop
ljmp
jbe
rcll
sar
mov
xor
fmuls
xor
xchg
pop
loop
sahf
bound
aas
iret
xchg
scas
sbb
ljmp
add
les
cmc
and
fisubl
ds
fcoms
add
or
adc
stos
fistpll
imul
orl
cli
in
out
cmp
add
ret
clc
js
mov
cld
inc
inc
cld
jns
sti
and
ja
xchg
mov
inc
xor
push
mov
fisttps
dec
inc
jbe
add
cmpsl
mov
adc
cmpsb
lods
dec
adc
roll
jnp
add
add
clc
pop
jg
cmpsb
inc
jbe
push
jp
cli
les
push
xchg
adc
ljmp
dec
xchg
pushf
stc
aam
adc
or
loop
cmc
mov
call
dec
adc
push
aaa
xchg
int
push
ret
mov
icebp
push
jp
xchg
adc
or
repnz
xchg
push
dec
cmc
mov
sub
jmp
punpckhbw
add
mov
add
roll
pop
les
sub
clc
sbb
push
lea
sbb
push
dec
test
xor
jno
enter
lock
out
ss
fs
dec
icebp
std
dec
adc
push
sbb
xlat
call
ret
pop
adc
push
ss
cmpsl
cld
xchg
pop
pop
es
add
leave
lret
sbb
sub
testl
out
ljmp
mov
scas
jbe
push
cmp
lds
cwtl
cs
out
neg
dec
cmp
or
inc
add
inc
test
jnp
int
adc
pop
and
sbb
sbb
fnsave
push
add
repz
shl
mov
pop
or
jecxz
movsb
shrb
pushl
call
in
roll
sbb
cli
pop
pop
lret
cmp
pop
std
mov
outsb
mov
jle
setbe
sbb
imul
mov
mov
jbe
sbb
or
adc
and
loope
pop
cld
sub
clc
mov
daa
popa
mov
call
test
push
xchg
cld
dec
pop
xchg
and
shll
adc
mov
fimuls
std
pop
stos
sarb
flds
jg
mov
sbb
shlb
in
mov
sub
stos
ja
sub
decl
in
movsl
xchg
pop
movsl
cmp
and
sub
pop
push
push
les
in
mov
loop
cmpsb
dec
push
call
addl
xchg
loope
adc
pop
sub
lods
pop
jbe
aam
mov
loope
adc
mov
test
popl
ds
addr16
cli
iret
mov
lods
ja
jle
inc
imul
scas
bound
mov
je
adc
sub
add
insb
pop
mov
jge
inc
xchg
rclb
pop
hlt
cmp
rorb
jns
xchg
pop
push
dec
push
sahf
dec
adc
inc
icebp
push
idiv
pop
and
cmc
lcall
add
jmp
test
lahf
xor
ret
cmp
or
lcall
and
cmp
rorl
inc
dec
xchg
sti
sahf
mov
mov
push
stos
adc
cld
mov
outsl
sub
pop
push
or
scas
and
nop
shlb
mov
sbb
sbb
jmp
cmp
cmp
dec
jbe
mov
flds
les
mov
ljmp
mov
hlt
xchg
xor
mov
repnz
adcb
stos
mov
jg
cmp
cmpsl
jle
xor
out
dec
adc
enter
adc
inc
push
xor
add
call
push
fists
sub
stc
add
in
lret
and
andl
xlat
cld
test
adc
movsb
jno
sbb
and
ret
inc
outsb
sub
or
jg
xor
mov
lret
and
ds
ret
inc
test
cmc
data16
sahf
push
cs
icebp
das
dec
ret
dec
fsubrl
lcall
adc
int
ficompl
sub
inc
clc
xchg
add
and
add
dec
pushl
incl
es
enter
xchg
mov
adc
das
daa
mov
stos
and
dec
cmc
lea
cmc
sub
adc
sub
jg
sbb
loope
cmp
adc
es
in
xlat
fs
mov
push
leave
and
push
insl
js
in
mov
mov
and
cld
lea
call
push
js
dec
mov
jnp,pn
shll
cmpsb
out
sbb
aad
mov
movsb
xchg
cmp
ret
mov
adc
int
xchg
cmp
mov
mov
das
out
ljmp
fiadds
cwtl
or
into
ret
idivl
xlat
stos
mov
daa
mov
xchg
jg
mov
int
inc
out
leave
cmp
xchg
push
icebp
ja
out
stos
test
mov
test
ljmp
push
ss
sub
cmp
mov
dec
push
fists
jnp
fndisi(8087
push
xor
xor
and
jl
jecxz
outsl
pop
lret
insb
cmp
int
xchg
push
mov
notl
pop
sub
adc
pop
lods
inc
sbb
mov
int
popf
adc
xor
sbb
pop
adc
into
lcall
and
pop
sbb
fildll
int
jle
cwtl
adc
dec
push
mov
nop
jle
mov
mov
pop
call
stos
jno,pt
cmp
repz
outsl
scas
add
in
cmpsb
and
xlat
mov
jae
punpckhbw
cli
lcall
daa
test
addb
cld
pop
scas
daa
popf
xor
cld
repz
fimull
inc
sub
loope
hlt
sub
adc
ror
jg
xor
add
in
or
and
loop
in
cli
push
dec
out
mov
aaa
push
filds
jmp
xchg
jbe
cmp
lcall
xor
out
adc
adc
mov
lock
push
in
sbbl
push
leave
push
jne
add
fbld
je
inc
out
inc
rolb
orl
fbld
pop
div
jb
test
inc
in
idivb
cli
mov
lcall
cmp
div
mov
push
ret
bound
mov
xor
push
adc
jle
in
cmp
in
jecxz
cmp
pop
dec
cli
sub
sbb
in
ljmp
cli
mov
mov
adc
cmpsb
les
jmp
js
pop
sub
stos
cmc
arpl
movsl
inc
rorb
flds
nop
loop
std
daa
sbb
and
sub
lret
ljmp
out
jp
mov
xor
push
outsl
loop
mov
mov
pushf
adc
in
sbb
ljmp
sbb
daa
adc
dec
inc
dec
adc
ljmp
loop
adc
orb
arpl
aad
jae
inc
dec
std
pop
or
in
nop
lock
sbb
cmp
lret
and
and
dec
sbb
push
pop
jecxz
std
dec
cmp
mov
sub
sahf
test
cli
stos
or
xor
push
sbb
fisubs
jb
mov
out
or
add
jmp
jle
outsb
loope
mov
pop
ret
jg
and
insb
jnp
popw
sub
sarb
rcrl
imul
add
repnz
aad
pslld
or
out
push
and
in
test
adc
pop
jmp
jl
pop
xor
ljmp
ljmp
adc
leave
push
adc
push
setle
add
filds
popa
inc
notb
or
sub
jno
xchg
cltd
fidivrl
jge
mov
lock
aas
das
inc
imul
mov
imul
mov
ljmp
mov
ljmp
into
aam
and
adc
pop
fimuls
rclb
popa
mov
jne
xor
repz
aam
ja
sbb
jge
cmp
cmpsb
push
and
punpckhwd
sbb
or
cs
iret
jmp
jnp
sahf
sbb
cld
subl
repz
lret
sub
test
or
aad
shrb
sti
sub
lret
insl
sti
pop
jecxz
push
int
ljmp
mov
aam
out
and
aad
jmp
push
ret
ret
subb
cs
aam
sti
adc
sar
and
adc
jle
rorl
jl
pop
icebp
incl
cmp
out
push
popf
in
push
cld
add
mov
fnstenv
and
sbb
xor
shr
adc
mov
or
lock
loop
xor
xor
scas
push
inc
call
pop
in
ficoms
mov
test
mov
outsb
adc
call
sub
ficomps
insl
mov
inc
mov
in
and
in
lcall
pop
mov
in
incl
arpl
fwait
pop
in
push
lds
repz
push
push
mov
pop
lret
sub
adc
pop
pusha
test
cmp
out
adc
and
and
adc
pop
push
or
sar
lcall
sub
in
andb
iret
mov
je
lcall
jmp
mov
ret
cli
mov
cwtl
mov
mulb
add
jg
sub
testb
xchg
mov
cmp
sti
dec
stos
int3
ja
lcall
lods
xchg
sbb
pop
test
test
out
repz
fwait
mov
push
sub
adc
cltd
inc
add
call
sub
cli
mov
movsb
mov
sbbb
adc
and
outsl
clc
add
push
inc
lea
outsb
pop
sub
pop
shlb
daa
hlt
jmp
mov
das
ficoml
outsl
into
sbb
jge
cmpb
outsl
cli
aas
add
cwtl
les
sbb
sbb
insl
incl
scas
sub
lods
cld
fdivrl
or
js
push
push
inc
inc
mov
xchg
stc
xor
loopne
adcb
loopne
fldcw
leave
jp
and
and
ss
paddusb
fs
xchg
or
cmp
enter
ljmp
fs
dec
sbb
xchg
dec
test
jne
jno
cmpb
adc
notb
pop
les
ljmp
xor
jge
sarl
push
add
jp
out
sarb
decl
subl
xchg
cmp
and
cmpsl
or
cmpsb
cmp
mov
cld
mov
int
mov
xchg
inc
cmovno
and
jmp
dec
sbb
jp
sahf
sub
jbe,pn
xor
fsubs
hlt
lds
add
cs
lahf
inc
es
jg
inc
cmp
mov
cmpsl
div
test
filds
in
push
lds
filds
ret
cmpsb
ficompl
jo
jo
stos
jge
mov
mov
xor
push
pop
dec
adc
in
mov
rcl
mov
mov
adc
bound
mov
sahf
adc
xor
push
sahf
and
lods
popa
cmc
xor
jmp
loope
ljmp
out
jmp
or
mov
and
jecxz
mov
rcl
adc
cmpsl
aaa
push
clc
sbb
sub
lret
jmp
dec
les
fwait
pop
or
aam
sub
cli
fildll
enter
les
xlat
daa
testb
scas
sub
xchg
cmp
cs
add
call
outsb
inc
add
jns
xlat
mov
xchg
add
dec
aaa
mov
jo
fwait
mov
dec
adc
lods
data16
repz
push
out
push
loopne
pop
aaa
nop
xchg
ljmp
adc
xchg
lret
sarl
or
xlat
filds
ljmp
ds
fnstsw
mov
cmpsb
ss
add
cmp
add
fwait
add
mov
into
xchg
mov
sub
roll
jle
aad
aaa
jne
lock
sbb
mov
sbb
scas
dec
xlat
jno
pusha
filds
cmp
and
or
dec
rorb
xchg
cli
lods
out
push
xchg
cs
mov
incl
jmp
insb
test
stos
sbb
out
mov
pop
clc
or
es
add
push
les
rolb
pushl
sub
outsb
inc
scas
loop
lods
add
and
and
push
in
mov
arpl
cmpb
mov
adc
and
and
inc
jmp
adc
pushl
in
fs
adc
popf
pop
in
out
mov
pop
xor
sub
add
mov
or
xchg
pop
stc
xor
sar
clc
mov
test
int
outsl
sub
cli
pop
cld
call
inc
outsl
xor
and
cmp
jecxz
sbb
das
sub
lret
mov
repnz
or
push
dec
ljmp
in
cmpsb
out
jns
lods
ljmp
adcb
repz
ret
or
shlb
adc
push
lcall
clc
repnz
add
leave
mov
in
fildl
push
pop
push
sti
or
inc
and
ja
ljmp
stos
adc
fadd
fs
idivl
sahf
add
push
loopne
add
cld
sub
shlb
xchg
aam
push
mov
js
adc
adc
adc
push
add
lock
fwait
ret
dec
lcall
jp
pop
pop
fsubp
xlat
ljmp
fstpl
aad
das
cli
mov
xchg
and
lods
shrl
repz
adc
arpl
lcall
lods
pop
mov
jmp
insl
push
mov
xchg
xchg
sti
ja
fs
in
sub
mov
test
sub
adc
xchg
and
mov
lret
sbb
and
and
sub
and
inc
jg
and
adc
push
sbb
enter
inc
out
bound
icebp
pop
pop
sub
add
cli
inc
jle
mov
stos
arpl
or
cmp
outsb
rcl
cmpsb
mov
out
inc
or
xor
nop
add
or
notl
out
cmp
inc
int3
pop
fcmovne
testl
mov
mov
or
pushf
call
ds
jb
adc
subb
mov
push
test
or
push
loop
test
ds
rclb
ljmp
fxch
int3
xor
push
test
sahf
pop
adc
into
add
or
mov
test
lcall
movsl
jno
inc
push
int
ficomps
adc
xor
out
mov
out
cli
int
push
mov
and
jns
test
mov
xor
pop
movb
stos
inc
xor
fwait
out
push
lcall
clc
mov
pushl
sbb
loopne
movsb
cmpsb
shll
and
cmpsb
testb
aas
mov
mov
testl
repnz
mov
test
jne
jecxz
jmp
sub
std
mov
fs
lret
aam
inc
incb
loop
push
fs
xchg
cli
sti
cmp
lret
mov
incl
push
lcall
add
test
xor
mov
xchg
push
sbb
pop
sahf
xchg
mov
lret
fiadds
cmp
sub
test
and
addr16
aas
movl
fldcw
mov
or
inc
inc
popa
iret
mov
cld
and
add
jp
out
mov
push
iret
pop
and
imulb
xchg
loop
or
sub
sbb
cli
aaa
pop
hlt
or
push
pop
into
aam
shrb
or
xchg
loop
fimuls
out
outsl
sub
lcall
jmp
fidivs
daa
decl
pop
das
mov
pop
jg
fisttpll
or
pop
nop
pushf
or
or
mov
sub
arpl
mov
add
dec
sbb
pop
stc
test
fbstp
sbb
xchg
aaa
shrb
and
jmp
imul
pop
sbb
cmc
mov
xor
sbb
popf
xchg
dec
xchg
test
xchg
cli
movsb
idivb
ficoml
sbb
push
mov
pop
xchg
mulb
sub
jecxz
lock
dec
cs
pushf
or
dec
aas
mov
aad
sub
cmpb
ds
sbb
pushl
int
iret
in
add
in
dec
shlb
nop
dec
or
mov
sarb
xchg
gs
idivb
jns
popf
clc
iret
push
jg
pop
pop
pop
mov
into
mov
dec
sub
cmp
in
sbb
xchg
repnz
sbb
stos
sbb
adc
ljmp
js
repnz
rcll
mov
push
xor
sbb
cmp
cwtl
sbb
andb
out
mov
test
fwait
dec
add
imul
stc
mov
dec
dec
jae
insl
lds
adc
sbb
jle
mov
aas
bound
aas
xor
popa
mov
sbb
fildll
inc
mov
pop
push
das
push
or
jmp
je
lods
push
dec
jl
cwtl
push
mov
jnp
push
cmp
call
sbb
es
iret
mov
inc
mov
mov
push
lcall
jg
dec
pop
movsb
das
mov
xchg
dec
cli
fadds
std
in
rorb
mov
xchg
int
pop
stc
dec
clc
lcall
jne
lds
lcall
cltd
sarb
lock
mov
ja
xor
out
add
push
les
dec
sbb
xlat
push
scas
hlt
shrl
lods
clc
ljmp
repz
arpl
jbe
pop
cltd
daa
loope
shrl
or
or
ficompl
xchg
hlt
mov
xchg
mov
std
mov
adc
in
inc
jmp
lock
aaa
push
pop
push
scas
aas
imul
or
inc
shll
in
adc
mov
ficompl
jmp
sbb
sarb
je
lods
call
call
sub
push
lcall
and
aad
sbb
imul
cmpsl
popf
xor
and
or
or
adc
mov
inc
pop
add
sbb
lret
ret
jbe
int3
add
jle
dec
ss
push
or
out
xchg
push
pop
imul
arpl
mov
push
test
dec
pushf
push
xchg
clc
mov
out
popa
cwtl
es
inc
in
mov
jg
push
sbb
jno
pop
sub
repnz
pop
fbld
cld
call
xor
jae
inc
push
jle
xchg
jp
xor
pop
aaa
ret
sub
jno
mov
mov
das
pop
fdivrs
lcall
push
lret
lcall
mov
cmp
pop
pop
js
stos
or
lock
loope
cmp
shlb
js
dec
mov
incl
xor
adc
das
clc
mov
jge
dec
dec
rorl
jp
and
incl
and
push
bnd
rorb
xchg
sub
rcll
test
fsubl
xchg
push
cli
and
add
mov
and
out
test
push
bound
jecxz
mov
cmpsl
rclb
adc
call
das
out
out
repz
cli
pop
sbbb
sub
or
dec
or
and
xor
js
and
mov
js
mov
imulb
dec
sub
and
add
stos
out
adc
daa
pop
test
cmpsl
pop
sbb
add
loope
and
and
push
inc
push
pusha
mov
add
call
shrb
into
sbb
fiadds
std
mov
dec
xor
and
decl
out
int3
out
and
pop
add
mov
leave
data16
cmp
mov
loop
inc
in
jp
sub
pop
or
cli
decl
mov
ljmp
imul
enter
cmpl
mov
fst
daa
mov
add
xor
lock
adcb
loope
adc
mov
jg
hlt
jle
repz
in
adc
jo
sub
sub
adc
mov
sub
dec
fildll
fists
daa
in
mov
cmpl
sub
out
imul
sbb
decl
inc
and
into
mov
mov
lods
int
repnz
test
mov
movsb
decb
mov
xor
adc
pusha
fisttpl
mov
inc
xorl
push
xlat
mov
rcl
outsl
jl
jno
das
dec
std
scas
scas
daa
faddp
rcrl
cld
fisttpll
lret
jns
into
loope
jg
and
cld
jo
jno
rcrb
pop
push
xor
or
push
repnz
or
sub
std
lcall
cltd
jge
pop
mov
test
lret
cmp
sbb
jmp
dec
stos
xchg
roll
shrb
sbb
cwtl
dec
ljmp
movsb
sub
jecxz
pop
mov
shl
xchg
decl
clc
push
loop
dec
cmp
pushf
inc
sar
stos
lock
and
scas
mov
adc
incl
aaa
add
push
pop
push
mov
push
xor
push
test
xorb
mov
test
mov
xor
jp
sub
cli
fcoml
mov
fldt
icebp
pop
push
xor
fwait
ljmp
cmc
popa
out
pop
lret
push
dec
and
in
or
lods
in
add
inc
push
pop
push
movsl
fistpll
xor
fcompp
and
int3
dec
xor
sar
sahf
lods
loope
inc
mov
std
mov
in
mov
add
mov
lret
or
les
add
mov
into
adc
push
rcll
cmp
decl
mov
mov
jae
xlat
and
aaa
mov
js
jbe
out
sahf
sarb
xor
mov
xchg
xchg
nop
jge
sub
pop
or
jle
lcall
xchg
out
mov
sbb
pop
mov
sub
jecxz,pn
movsl
ljmp
cli
add
push
rcll
xor
lret
rcr
or
inc
and
out
mov
mov
or
xor
jnp
mov
push
mov
into
bound
das
jle
sub
sbb
cmp
mov
add
fsub
push
and
clc
pop
mov
adc
xor
js
and
clc
das
jle
cmp
shll
fldt
or
dec
adc
into
jmp
incl
repnz
adc
cld
sbb
cld
xlat
ret
jno
loop
in
das
push
incl
sbb
in
fdivrp
cmc
cmp
fistps
inc
fldenv
and
mov
and
mul
dec
inc
sbb
ret
sbb
incl
bound
das
lds
cmp
lds
inc
jg
ljmp
aas
std
push
lret
mov
add
mov
sub
adc
mov
ret
movl
xchg
sti
pop
add
jg
test
int3
fs
sti
adc
mov
ljmp
sub
pop
clc
fwait
and
fidivl
xor
int3
aam
out
push
add
decl
jns
mov
add
std
das
push
sbb
or
or
call
adc
lret
jecxz
cli
fs
movsb
xor
fwait
jae
mov
in
jmp
int
adc
or
daa
inc
fistl
fisubs
xor
fmuls
decl
repnz
pop
imul
into
fnstsw
into
stc
pusha
xchg
or
or
or
mov
mov
mov
mov
std
pop
insl
xchg
add
nop
je
cld
idiv
inc
arpl
mov
xchg
mov
iret
testb
jecxz
jne
sbb
mov
out
add
call
std
scas
or
or
xlat
xchg
cli
incl
pop
out
shrl
fcmovbe
subl
dec
pushf
daa
adc
dec
cli
pop
sub
lds
lods
int3
sub
sub
jecxz
adc
jae
rorl
ror
lret
cs
rol
xor
xor
mov
dec
sbb
push
mov
adc
loopne
sarb
xchg
jge
hlt
inc
sub
cmpsb
sub
jno
icebp
fwait
push
stos
in
loop
les
stos
inc
fadd
rol
loope
push
push
add
xor
mov
jp
add
adc
sub
push
dec
push
sub
jecxz
inc
cld
repnz
inc
es
add
nop
xor
adc
aas
push
insl
imul
out
mov
sbb
rcll
sbb
jl
hlt
add
imul
dec
dec
iret
push
mov
sbb
pop
dec
jb
add
and
mull
lret
inc
incl
mov
sub
lock
push
sar
cmp
stc
adc
nop
mov
fcoml
aaa
cld
xchg
cld
push
sbb
test
out
shlb
mov
sub
lret
add
jg
xchg
sbb
sti
push
pop
sub
psllw
mov
testb
dec
test
xlat
and
mov
push
xchg
sar
out
xchg
ja
test
out
out
cmp
and
and
cmp
mov
sub
cs
jle
fiaddl
movsl
data16
rcrb
xchg
or
or
adc
bound
jne
int3
ja
push
mov
shl
fbld
or
push
mov
mov
les
jmp
in
lcall
mov
xlat
fidivs
fistpl
pop
mov
loopne
fisubrs
lcall
fbstp
loope
cmc
call
push
rorb
cli
and
repnz
stc
or
add
cmp
sub
adc
out
and
cld
sbb
push
mov
xchg
xlat
mov
inc
iret
mov
mull
test
lcall
mov
lahf
cmp
mov
ds
push
xor
pop
mov
push
or
push
pushf
sub
cmp
roll
fstl
mov
lods
lret
inc
int3
out
inc
out
lret
insb
jnp
and
push
fnstsw
cmpl
in
and
xchg
jmp
mov
out
inc
jbe
dec
stc
lcall
ljmp
mov
add
cs
and
lods
fimuls
jg
xor
insl
out
shlb
call
pop
mov
jg
mov
inc
xchg
adc
push
mull
enter
or
mov
and
and
inc
xor
mov
mov
cld
scas
and
testb
mov
incl
pop
lret
sbb
stc
xchg
fucom
xorl
js
mov
subl
cmpsb
lock
subl
jle
addb
jg
test
stos
enter
lock
aad
adc
clc
push
loope
jns
mov
sbb
aas
mov
sbb
pushf
ds
fisubl
fsubs
pusha
cld
and
call
ret
lcall
cld
cmp
daa
shrl
pop
jmp
incl
sbb
adc
rorl
mov
clc
push
or
lea
pop
clc
adcb
and
mov
and
xor
pmullw
push
xchg
sbb
out
mov
pop
xchg
adc
repnz
testl
out
scas
sub
and
repz
jp,pt
repz
sbb
push
cmc
add
aaa
adc
lcall
adc
push
movb
mov
out
inc
aad
cli
mov
add
je
cmpps
push
addb
xchg
pop
sub
mov
push
xchg
pop
xchg
push
adc
test
inc
mov
push
xchg
or
pop
mov
fisubs
cli
xchg
sti
push
dec
inc
loopne
test
ret
in
aad
or
decl
aas
lcall
jmp
push
in
mov
incl
pop
sarb
mov
add
enter
test
out
out
and
ret
outsl
icebp
mov
iret
xchg
lret
mov
adc
repz
sub
jg
in
push
xor
shrl
aaa
dec
repz
lods
and
rolb
fisubrs
dec
insl
js,pt
adc
mov
test
or
es
add
cmp
or
mov
fsubrl
sbb
pop
cli
cmp
sti
cmp
or
cmp
out
inc
sub
in
mov
stos
xchg
mov
pop
shrl
sub
mov
push
or
fwait
sub
ret
and
out
icebp
mov
dec
push
xlat
stos
gs
shr
aam
sbb
or
xor
cmp
rclb
repz
clc
sbb
push
aaa
and
in
adcb
adc
and
fwait
les
add
mov
mov
sti
inc
stos
out
jecxz
mov
push
inc
out
pop
call
jo
xchg
add
bound
lcall
push
cmp
scas
mull
sbb
aas
cmp
inc
inc
ss
jo
mov
scas
cmpsb
mov
jbe
mov
ds
ja
ds
out
jp
pop
and
xchg
bound
inc
push
ds
or
add
idivb
mov
rclb
call
shrb
into
adc
or
sbb
lret
cmp
push
loope
aam
cs
and
aad
cmpsl
shlb
aas
decb
jp
cs
xchg
push
in
xlat
inc
loopne
or
ss
inc
in
push
pop
and
dec
ret
in
sub
pusha
add
incl
inc
xchg
enter
repz
xchg
cmpb
daa
cmpsl
stc
cli
xchg
inc
pusha
adcl
mov
jg
mov
and
cli
into
pop
ljmp
mov
in
push
add
in
cmp
ljmp
sub
xlat
adc
in
sub
pop
sbb
arpl
ljmp
jmp
lds
inc
das
scas
xchg
icebp
nop
jp
add
xor
or
and
cld
jmp
movsl
dec
xchg
push
cltd
and
stos
jae
xor
fwait
push
in
adc
jmp
mov
test
xchg
rorb
cmp
daa
and
fwait
mov
push
lods
sub
pop
sub
push
mov
je
les
aas
bound
push
xor
pop
sti
aad
repnz
jg
add
jl
stos
cltd
testl
xlat
cmpsb
out
cs
xor
sbb
in
xor
sub
xchg
jo
pop
mov
ret
jle
pop
inc
clc
mov
or
push
or
daa
jbe
in
jo
mov
fcoml
in
in
sub
or
loope
or
push
lds
pop
cli
hlt
mov
add
lock
push
out
cmp
call
shrb
mov
test
xchg
loopne
jl
fsubp
sub
mov
decl
xchg
fucomi
mov
pushf
or
cld
scas
push
xchg
stos
mov
xorl
in
orl
push
xchg
mov
enter
sbb
in
dec
sbb
mov
jg
and
repz
dec
xlat
xchg
int
jbe
pop
sti
fcomps
imul
jmp
mov
push
rcr
ret
lcall
jmp
push
in
or
divl
popa
js
loope
dec
ljmp
imul
sub
cmpsl
pop
movsl
into
xlat
mov
in
shl
pop
icebp
in
call
jl
mov
enter
mov
xorl
push
cmp
mov
rolb
inc
xor
popa
add
mov
rcl
xchg
cmpsl
int
cmp
call
push
das
repz
fcmovu
roll
dec
aaa
inc
xor
mov
jno
in
mov
xchg
push
adc
stos
lret
les
push
es
aaa
ja
mov
cmp
enter
cmpb
aas
cli
outsb
into
add
imul
xchg
mov
or
cli
subl
inc
adc
pop
loopne
mov
in
daa
mov
sub
imull
sub
fisttps
lea
out
pop
insl
lods
and
fistpll
jbe
xor
or
cld
push
cmpsl
xor
fcompl
sub
mov
into
cmpsb
sbb
stos
mov
sub
jns
lcall
push
decl
fsts
pop
stos
jne
xchg
bound
sbb
xor
inc
shlb
stc
sub
loope
nop
mov
mov
stc
add
push
adc
imulb
cmp
pop
enter
mov
imul
testl
or
sub
sub
mov
shrb
stos
and
mov
pop
aad
mov
std
lcall
cmp
cwtl
loopne
jb
jns
adc
mov
repz
test
sub
cmp
sbb
leave
push
ficomps
call
js
adc
fcompl
neg
das
mul
sbb
add
lret
or
imul
rol
iret
int
or
rcrb
adc
scas
negl
ret
call
and
addr16
iret
test
in
xor
sub
cld
roll
mov
enter
cltd
ljmp
mov
iret
lds
sar
repz
movsl
ret
sub
jg
mov
or
test
ja
mov
pushl
out
fcomip
mov
push
pop
pop
pop
dec
mov
or
and
pop
adc
int3
ret
jnp
repz
add
and
or
out
inc
lods
ja
pushf
inc
or
rcrb
pusha
fsubrl
and
iret
scas
inc
adc
add
xor
push
adc
xor
cs
sbb
cmc
xor
lock
sbb
cli
movsb
add
sub
mov
cmpsl
xchg
loopne
xchg
fsubl
mov
xchg
test
mov
pushl
rcr
mov
rcll
and
pop
or
mov
sbb
xchg
adc
dec
bound
sub
ja
movsl
lods
adc
add
decb
pop
mov
ret
mov
repnz
subl
bound
scas
movsl
push
in
adcb
lret
sbbb
std
rorl
orb
pop
aaa
dec
stos
jecxz
sar
fdivr
sub
stc
fimuls
or
and
dec
sub
fbld
pop
ficompl
lcall
in
pop
mov
out
test
cltd
jle
xchg
ror
inc
je
mov
cmpsb
aas
loop
fidivrs
sub
lods
mov
fwait
fiadds
mov
mov
fbld
inc
daa
pop
mov
mov
push
lods
xor
nop
test
inc
mov
popa
push
xor
xorl
adc
stc
lret
jl
push
repz
push
subb
fxch
insl
out
adc
fildll
cld
lret
or
xchg
rcl
jno
int
test
add
jl
movsb
xlat
mov
lods
fidivs
call
aas
push
clc
push
outsb
stc
inc
pop
sbb
scas
cwtl
sub
clc
test
nop
stos
sbb
dec
cld
or
pusha
mov
fs
out
mov
cli
stos
adc
sbb
dec
cld
cmpsl
mov
lock
aas
cld
into
inc
pusha
movsb
mov
adc
shrb
inc
pop
sarl
dec
xchg
sub
fidivrs
leave
dec
ja
push
jp
or
lds
std
cli
daa
sub
fimull
aas
jp
shr
fsubrs
xchg
and
mov
aaa
stos
fisttpll
add
add
stos
in
test
xor
xor
shrl
aam
lea
sbb
aad
loop
fisubrl
stos
aam
or
and
sub
test
or
xchg
mov
or
push
mov
orb
xor
mov
jl
push
pop
js
adc
aam
mov
mov
jns
sub
mov
es
cmp
sub
popa
cmp
in
dec
test
xchg
push
jle
cmp
das
mov
pushf
repz
cmp
stc
pop
inc
and
fildll
adc
jg
rcl
sub
loop
and
inc
add
pop
lock
shrl
mov
lret
adc
jl
sub
inc
or
int3
jg
decl
pop
rorb
loope
test
xor
in
sub
and
jg
mov
add
mov
push
cmp
stos
imull
hlt
sbb
xchg
scas
mov
lods
ljmp
sahf
or
roll
lds
adc
jmp
cmpsl
or
mov
arpl
jle
in
jecxz
sbb
ficomps
sub
repz
test
ret
sbb
jg
pop
xchg
enter
xchg
jle
mov
sahf
stos
cmp
and
pop
jmp
in
and
pop
push
jl
or
pop
sahf
lret
clc
sti
out
pop
xchg
and
dec
test
std
cwtl
leave
adc
xor
jg
roll
ret
leave
cs
xchg
cld
sub
cmp
ret
lcall
jecxz
in
lret
loop
sti
cmp
jg
jle
jbe
sub
out
mov
jecxz
mov
out
in
mov
mov
lret
hlt
or
out
fmul
mov
data16
ret
inc
fs
adc
mov
push
leave
aad
scas
clc
andl
sub
out
je
mov
jmp
leave
or
adcl
jp
jbe
adc
test
xor
sbb
mov
lcall
dec
insb
dec
das
mov
aad
sub
mov
xchg
xor
push
mov
push
leave
cld
xchg
dec
sub
xchg
lock
lods
add
icebp
test
ret
mov
in
shll
xchg
mov
sub
xchg
jmp
inc
push
sub
cmova
sbb
aas
sbb
testl
mov
addr16
fstl
and
das
dec
ret
daa
and
dec
outsl
mov
xor
fs
in
loopne
xchg
call
sub
add
jecxz
repnz
push
jnp
repnz
xor
scas
dec
and
add
jg
ss
icebp
xchg
pop
daa
gs
enter
cmp
das
add
jmp
jbe
ret
or
adc
insl
cld
je
pop
inc
ret
lcall
sub
pop
mov
inc
jmp
fcmovu
cmc
adc
add
rolb
xchg
test
adc
sub
pop
and
cmp
lcall
push
push
inc
jbe
jnp
jo
lock
or
cli
pop
add
dec
cmpsl
es
sub
cmpsb
aam
cmp
stos
fsqrt
call
or
pop
jnp
push
pop
fs
aam
mov
push
ret
add
dec
and
movsb
rolb
cmpsb
sub
jmp
incl
fwait
sub
subb
loop
inc
pushl
sti
mov
jbe
mov
cmp
mov
outsb
lret
dec
and
repnz
push
ret
ja
push
mov
in
add
sbbl
lock
dec
cmc
mov
fbld
cld
mov
mov
adc
add
mov
aas
push
inc
pop
gs
dec
jno
mov
pushf
pop
cld
pop
xchg
ficoms
leave
cli
xchg
lock
mov
loopne
arpl
lret
push
jmp
mov
fcmovnb
scas
daa
popl
push
dec
sbb
lock
lock
mov
into
les
stc
test
push
enter
jmp
neg
mov
and
fistps
xchg
jle
sub
pop
sub
fisubrs
pop
leave
adc
rorb
lods
adc
popf
jae
lea
pop
add
pushf
adc
cmp
shl
rorb
cli
or
fidivrs
dec
fnstsw
shrl
mov
call
jno
stos
shlb
dec
pcmpgtb
out
add
cmp
cli
xchg
mov
or
clc
mov
dec
gs
xor
test
cmp
out
push
ljmp
lcall
loop
fsub
fisubl
adc
in
test
stc
or
call
fcmove
imul
and
aam
outsb
xor
mov
in
test
add
mov
fisubrs
ds
pop
cmp
inc
lods
notb
aad
mov
mov
sub
in
sarl
imull
call
lret
testb
or
fists
daa
add
ret
imull
loope
mov
xchg
push
aam
pop
lcall
lcall
cld
fnstenv
in
fisubs
and
xor
dec
jmp
ljmp
xchg
lock
into
jmp
bound
andb
push
in
les
nop
jg
lock
mull
sub
daa
test
lret
sub
fcoml
cs
and
jmp
cmp
xor
cld
cmp
sbb
aaa
ljmp
call
jns
sub
adc
lods
mov
call
testl
push
andb
xchg
int3
mov
xor
lret
fisttpl
scas
sub
or
in
push
aas
test
test
push
xor
notb
cltd
jmp
and
fadds
incb
mov
ss
and
lret
push
jbe
mov
mov
loop
int3
mov
mov
or
mov
cmp
push
cmp
push
loop
sbb
ja
iret
cmp
shlb
std
filds
insl
inc
bound
lock
sub
bound
push
insl
pop
mov
cmp
and
xor
clc
push
jmp
inc
cld
adc
cld
daa
ret
es
mov
ljmp
inc
call
mov
cmpsb
out
stc
and
jecxz
cmp
xor
adc
lcall
mov
and
xchg
sar
rcrl
and
outsb
and
ljmp
push
daa
adc
cmp
in
jo
idiv
mov
jb
sub
jo
int3
daa
in
ljmp
loope
call
jbe
inc
and
aaa
sbb
in
aaa
in
sbb
out
pop
mov
cmc
stos
cmc
mov
test
jmp
fimuls
cmpsb
js
sbb
aaa
fadd
call
out
lods
lret
insb
mov
cli
rcl
fldcw
test
jg
xor
in
iret
mov
sub
adc
jno
loope
cwtl
scas
mov
int3
sub
test
test
stos
lcall
add
mov
push
sbb
mulb
mov
aad
inc
aas
ljmp
shll
cmc
sub
not
cld
mov
es
push
jne
push
hlt
push
mov
add
cmp
sub
test
pusha
sub
add
push
es
stos
xchg
ds
and
cli
std
in
dec
fnstenv
call
or
inc
scas
fs
ja
cld
ror
in
pop
xchg
and
outsb
inc
cmp
fcoml
sbb
xchg
lcall
jnp
sarb
lret
in
lahf
mov
loopne
out
int3
insl
inc
xchg
jmp
and
aaa
and
sbb
xchg
push
sar
jp
xlat
xor
jb
decl
fcom
cmp
sub
pop
cs
inc
out
clc
mov
ror
ret
adc
dec
hlt
stc
pop
or
pop
inc
std
test
fs
adc
pop
xor
or
fwait
bound
xchg
mov
decl
or
sub
test
lock
jmp
es
jle
test
xor
out
js
xor
jmp
js
inc
xchg
push
adc
roll
adc
jnp
mov
xchg
out
leave
stos
mov
pusha
dec
stos
mov
inc
or
xor
xor
or
xor
pop
out
filds
std
enter
hlt
mov
cmp
push
mov
pop
lock
mov
fldt
fimull
pop
xchg
pop
pop
pop
adc
mov
fistps
out
push
lea
imull
or
push
mov
repnz
xchg
ss
sti
in
scas
xchg
fwait
cmp
data16
inc
outsl
xchg
xor
scas
scas
clc
incl
xchg
push
sbb
mov
addr16
subb
test
fbld
mov
shlb
and
pushl
adc
cmp
es
lret
aam
arpl
scas
xor
inc
jae
pop
mov
jl
sbb
leave
lds
aaa
inc
pop
cmp
stos
or
je
sub
jg
dec
stos
addr16
inc
sub
outsl
mov
test
movsb
aaa
mov
aaa
cmp
decl
test
jg
cmp
push
nop
jmp
insb
push
das
inc
add
pop
and
fisubl
sbb
stos
dec
fucomip
cli
mov
shrw
cmp
sbb
icebp
inc
shlb
mov
shrb
les
cmp
icebp
xor
fsubs
into
mov
aaa
or
inc
mov
js
xor
in
lret
push
mov
jbe
cmp
jbe
adc
in
or
lock
ss
test
leave
pop
outsb
insl
adc
inc
cltd
or
in
adc
and
mov
jbe
mov
inc
shlb
bound
push
sbb
push
enter
movsb
sub
jg
hlt
sub
mov
das
push
push
ljmp
sub
loopne
xchg
iret
push
mov
jmp
xor
lahf
shrl
adc
push
cli
shl
pop
inc
roll
lcall
inc
in
adc
jno
cmpsl
cmp
jne
jp
cs
cld
call
adc
add
lods
push
fildll
ljmp
xor
sahf
mov
imul
or
xor
cmpsl
mov
nop
in
or
aam
inc
inc
call
mov
lods
leave
sbb
xchg
mul
and
cld
pop
cli
cmp
and
adc
mov
outsl
mov
popa
jnp
push
popa
pop
out
fsubrl
mov
rclb
add
gs
idivb
add
imul
push
movsl
or
and
dec
xchg
jmp
sbb
mov
test
sbb
and
ljmp
lock
jmp
repnz
jge
daa
push
es
dec
fnstsw
clc
fistpll
xor
xchg
stc
ret
aaa
fwait
xchg
mov
xor
sarb
pushl
xchg
push
jecxz
mov
adc
inc
cmp
shl
or
cli
sbbl
adc
repnz
push
jmp
test
sub
mov
mov
cmp
mov
aam
fstps
inc
ss
sti
pop
dec
fbld
sbb
icebp
ret
cmc
push
sbb
in
mov
cmp
movsb
dec
dec
add
push
mov
jle
incl
cli
insb
hlt
xor
loope
lds
inc
in
iret
aam
mov
das
test
or
xor
and
or
xor
adc
pop
test
sar
orb
fsts
iret
pop
mov
fistpll
and
daa
call
pop
or
leave
jge
or
mov
cmp
mov
into
movlhps
call
inc
les
inc
std
aas
shrb
xorl
or
mov
cmpl
add
es
call
adc
outsl
push
sub
arpl
jo
push
mov
jmp
ror
fwait
movsb
mov
jecxz
test
mov
mov
cld
out
flds
inc
add
hlt
mov
jbe
add
fs
lods
loop
repnz
jp
outsb
test
xor
outsb
aas
mov
stos
xor
sbb
lcall
cmc
jg
andl
xor
stos
out
xor
ficoml
jmpw
jmp
gs
cmpsb
cmp
push
pop
nop
push
mov
stos
cmc
dec
sub
repnz
les
sub
rcll
call
cmpsb
mulb
cmp
popf
or
clc
stos
lock
cmp
jp
dec
sarb
dec
incl
pop
addr16
dec
dec
stos
decl
dec
cmp
pop
cmp
rolb
data16
cld
call
in
sub
pop
pop
test
xlat
popf
arpl
test
add
cmp
bound
sahf
ds
sub
test
lret
cltd
ret
in
xchg
sbb
sbb
adc
aaa
add
mov
call
rclb
ficoms
mov
or
jb
out
and
in
out
outsb
cs
or
adc
pop
mov
rorl
dec
loopne
lds
jle
pop
out
fists
fldt
out
into
fnsave
cmp
mov
sub
jp
lcall
push
adc
or
dec
xor
jnp
cmpsb
pushl
sbb
jbe
and
iret
mov
xchg
cmp
in
scas
hlt
jae
jbe
fiadds
mov
sub
adc
rcrl
mov
call
pop
sbb
loopne
pop
notb
rclb
imul
in
fnsave
popf
inc
rclb
push
or
les
inc
push
mov
sahf
push
pop
mov
and
ret
xchg
xor
and
ss
xor
mov
shlb
pop
mov
add
movsl
cli
sub
stc
neg
jo
lods
ljmp
outsb
les
dec
xor
fstpt
cmp
xor
hlt
pop
cmc
call
mov
cmp
pushf
mov
mov
pop
cmp
ret
jg
loop
adc
ja
jmp
fisttps
sbb
jne
mov
lret
and
aas
cld
in
fists
rcll
sbb
int
in
test
scas
inc
pop
rcrl
repz
or
add
scas
inc
sti
and
adcl
in
or
ss
lcall
push
sub
stos
fists
icebp
and
call
fildll
jae
jle,pt
add
jne
push
sbb
mov
stos
leave
jl
sbb
rorb
mov
pop
lret
pusha
cld
cmp
pop
adc
sub
dec
incl
es
push
jp
je
jae,pt
pop
rcrb
cmp
push
jmp
or
mov
test
sub
rclb
dec
je
mov
sti
push
xor
imul
jle
cmp
mov
or
mov
call
aam
imulw
mov
arpl
and
mov
loopne
inc
sbb
daa
arpl
or
in
test
jb
mov
dec
nop
test
and
pop
das
push
jecxz
xor
pop
and
shrb
pushf
clc
sbb
mov
fbstp
js
aas
xchg
dec
bsr
data16
movsb
cmp
xlat
xor
movsl
gs
imul
push
mov
fs
pop
fs
or
psrad
xchg
ljmp
int3
jmp
jns
push
xor
jo
ljmp
add
push
repz
add
and
and
fildl
jmp
ss
mov
pop
sbb
sbb
call
mov
ret
sti
fisttpl
idiv
stos
outsb
inc
stos
and
sbb
arpl
dec
aam
mov
pop
fst
cmp
data16
add
aaa
ds
mov
pop
jg
jbe
call
js
dec
pop
pop
add
rcll
jo
add
aaa
std
jmp
add
repz
add
arpl
inc
xchg
int
inc
jp
sbb
sbb
cs
add
scas
iret
jne
push
pusha
loop
cld
fbld
inc
xor
inc
fldl
imull
or
pop
or
imul
mov
mov
cmp
mov
or
jecxz
adc
inc
jmp
jp
arpl
jne
jno
dec
int
imul
jecxz
and
mov
ja
inc
std
outsl
pop
cli
decl
dec
lock
mov
divl
into
adc
sub
mov
aaa
dec
stos
dec
jmp
add
outsb
sub
lcall
adc
leave
mov
mov
std
aaa
cmp
decl
or
pop
hlt
mov
jecxz
push
in
xor
cmp
adc
sar
decl
test
int3
fsubrl
data16
aas
jb
data16
add
dec
inc
xor
popa
inc
add
or
call
stc
sbb
nop
je
out
adc
insl
mov
lds
fisttpll
mov
pop
push
mov
mov
mov
xchg
jl
test
pushl
in
dec
lock
jg
add
out
sub
add
fidivrs
orl
adc
and
add
push
xchg
xchg
mov
mov
fcomip
aas
lods
faddl
adc
mov
sbb
imul
test
fnsave
addl
sbb
lods
push
cs
lock
xor
push
shrb
add
push
cltd
mov
insb
and
call
mov
pushl
adc
add
fdivr
pushl
sahf
leave
jne
jge
and
out
lock
cld
or
idiv
mov
loop
call
mov
shrl
xchg
rorb
test
lcall
addr16
sbb
roll
hlt
lcall
lcall
sub
clc
cmp
repz
jge
push
loop
int
fbld
stos
iret
ret
flds
mov
getsec
cmpsl
pop
xor
fcomp
es
pop
pop
pop
int
leave
pop
mov
testl
rolb
decl
cmpsl
sti
aaa
shrb
test
cli
iret
pushl
push
iret
cld
mov
pop
call
dec
rdpmc
sarl
aas
cmpsb
outsb
or
jno
hlt
decl
add
data16
lcall
adc
stos
dec
pusha
out
lret
jg
jns
push
push
repz
ja
lret
leave
lds
cmc
ljmp
mov
sbb
fs
fldl
filds
adc
flds
lcall
xchg
addb
cmp
test
lret
lock
repz
ja
xor
cmp
jno
ret
cs
jb
sub
clc
jg
loope,pn
in
jns
mov
roll
lods
mov
add
in
push
test
mov
fxch
cld
cmp
dec
or
repz
cmc
jne
pop
mov
filds
in
out
cwtl
mov
dec
mov
push
cmp
int3
push
pop
push
cmpb
xchg
cmpsl
xorb
inc
mov
xor
xor
rcl
lcall
mov
dec
lods
inc
cld
fists
leave
jno
sub
ljmp
es
sub
jae
cmp
dec
iret
lock
cmp
repz
insb
dec
gs
xchg
in
mov
pusha
pop
sbb
pushl
cs
fwait
lods
mov
ret
fisubl
jno
sbb
jl
out
inc
std
fisttps
jmp
mov
mov
lods
pop
push
hlt
stos
cs
nop
fmuls
int
and
jae
sub
pop
fldcw
adcb
xor
pop
hlt
mov
stos
xor
lods
das
xchg
flds
mov
test
cmp
sbb
les
inc
popa
cmc
adc
cmpsb
in
cmc
and
and
inc
inc
pop
insb
push
cld
pop
out
inc
insl
push
sub
jg
fcoms
sbb
and
jb
jmp
loopne
outsl
lcall
cli
mov
ja
fildl
bound
xchg
sbb
push
sub
mov
jp
pop
add
jecxz
jbe
in
xor
js
mov
xor
xor
aaa
sub
dec
pop
mov
adc
inc
or
fildll
push
in
jl
sahf
inc
cmpsb
xor
test
sbb
jb
mov
sahf
or
xchg
dec
data16
push
pushl
mov
cld
test
xchg
in
cmp
mov
jg
add
jge
pop
xor
sub
sub
sub
stos
aad
movsb
push
mov
adc
out
mov
mov
loop
sarl
push
or
push
lock
ss
push
sti
ljmp
add
mov
mov
in
lcall
sar
loope
outsb
fucomip
out
mov
nop
fsubl
adc
dec
imul
adc
sbb
sub
fwait
decl
ss
pop
and
push
and
cmp
int3
add
sbb
cmp
and
adc
arpl
and
xorl
xchg
pop
push
adc
mov
pushl
and
stos
mov
sti
mov
sti
out
sub
movsb
call
pop
xchg
dec
and
sbb
fldenv
mov
jg
ljmp
xchg
cmpsl
jmp
loopne
sbb
ror
test
sbb
mov
out
push
cmovno
mov
or
fidivl
mov
in
out
jge
sub
cmp
repz
neg
xor
pushl
lods
lret
cli
aad
fcmovbe
shrd
ss
es
lret
push
insl
sub
call
ficompl
daa
popf
inc
cmp
xor
jb
xchg
jp
call
mov
mov
popa
addl
stos
inc
aad
sub
lds
lods
stos
mov
or
mov
ds
sub
movsb
add
xor
outsl
cli
xchg
ljmp
or
fdivr
mov
mov
incl
aam
jmp
std
fistpll
inc
adc
ds
rorl
xchg
mov
insb
notb
andb
cli
pop
cmpsb
push
xorb
jbe
cmp
loopne
daa
push
das
outsb
rcrl
and
sarb
mov
push
xor
ror
clc
jne
mov
push
pop
je
sar
xchg
dec
or
adc
ds
jb
clc
sbb
lods
push
repnz
std
subb
pop
cmc
pushl
lret
add
sbb
adc
in
stc
and
arpl
cld
aas
rorb
mov
push
push
bound
in
pushl
ljmp
jo
gs
imul
or
xchg
fsubrs
ss
jge
pop
push
cmp
fcmovu
or
jle
sub
pushl
test
push
mov
push
or
lcall
gs
xchg
mov
xor
jo
sbb
stos
das
outsb
nop
inc
mov
pop
sbb
fstl
cld
sbb
icebp
push
cmp
pop
mov
xchg
pop
pusha
int
jbe
sbb
push
clc
decl
inc
aaa
dec
movd
jns
cmp
xor
push
push
cmp
mov
cmp
inc
or
out
ficomps
sbb
mov
sub
stc
notl
call
ficomps
clc
cs
call
xor
shlb
or
lods
das
decl
lahf
inc
daa
testb
jbe
sbb
sbb
add
mov
add
cmp
cld
out
inc
jg
and
jp
push
jmp
leave
push
cmp
decl
sbb
push
test
xor
ljmp
cli
add
jne
aam
add
and
adc
push
push
inc
fdivs
call
sbb
shrb
shrb
fildll
and
lahf
add
xor
mov
add
fmulp
cs
mov
ja
mov
sbb
sahf
outsb
shll
add
adc
adc
add
pushl
adc
sarl
jmp
xor
out
xchg
bound
ret
pop
jg
add
cs
add
dec
jl
mov
add
add
pushf
or
sbb
lcall
fimull
adc
push
pop
push
sub
in
repz
sbb
jg
aas
dec
dec
push
dec
ja
adc
cmp
sti
jecxz
cwtl
mov
movsl
pop
shrb
add
incl
jae
xor
sar
pusha
mov
mov
data16
mov
mov
pop
pop
test
mov
or
fwait
sbbb
fisubs
and
out
repnz
mov
cmc
or
fcomi
les
adc
or
out
fadds
adc
cmp
clc
aaa
or
cmp
ja
cmc
push
lcall
lcall
push
or
pop
sub
lcall
lahf
push
and
mov
xchg
mov
mov
xor
into
sub
push
add
clc
cmpsl
loopne
call
and
xchg
inc
or
push
mov
sbb
push
sbb
mov
ljmp
mov
dec
aaa
es
sbb
out
sub
push
loop
adc
xlat
add
sub
add
mov
cld
test
sbb
ja
fbld
das
jb
xlat
add
hlt
in
fucomp
sbb
clc
aaa
adc
or
push
and
gs
jns
or
fistl
pop
sub
xchg
adc
ret
inc
ret
inc
xchg
xor
in
jb
mov
mov
mov
add
shrb
data16
push
inc
mov
fwait
loop
mov
incb
jg
fstl
and
push
mov
in
aaa
repz
cmp
cli
sbb
aad
mov
fcomip
sbb
pop
push
ret
aas
insb
jmp
jno
sahf
fldenv
or
cli
decl
adc
inc
sbb
jle
xchg
repnz
shlb
jmp
push
pop
add
inc
gs
jne
mov
cmp
out
cmp
or
sub
fcomip
cmp
xor
lock
cwtl
enter
jp
dec
std
cmp
sbb
aas
cmp
dec
xor
mov
mov
dec
adc
mov
jmp
adc
sub
adc
xor
loope
pop
ljmp
push
aas
out
subl
lock
inc
push
xchg
dec
rcrb
pushf
pop
or
in
das
loop
les
or
jp
imul
fisttps
testl
enter
dec
ret
es
les
inc
sub
mov
adc
add
sbb
jbe
push
xchg
and
mov
push
cmpsb
cmp
or
xor
cmp
cli
jg
test
int3
add
inc
cmp
cmp
incl
loop
ds
shrb
inc
inc
xor
inc
lahf
inc
bound
and
loop
je
xchg
xchg
adc
in
fisubs
dec
inc
adc
cli
push
inc
sbbl
jmp
jno
or
xor
test
mov
lock
mov
push
aam
stc
push
fs
mov
xlat
adc
les
mov
call
std
or
adc
jmp
sahf
adc
rorl
or
aad
fisubl
imul
dec
cmpsb
jns
inc
xchg
mov
cmpsb
push
add
adc
jmp
out
mov
scas
lret
mov
mov
jmp
jo
shl
dec
pop
in
rcrl
mov
and
xor
xchg
test
jg
ret
push
pop
fldcw
xor
ja
lcall
mov
push
pop
adc
addr16
mov
sbb
jo
ds
cmp
adc
pop
outsb
cli
jb
decb
add
sub
je
mov
add
push
imul
xor
frstor
int3
and
aam
aad
xchg
and
pop
idivb
dec
add
and
mov
outsb
xchg
push
or
cltd
icebp
stos
mov
pop
push
je
sub
test
outsb
cmp
incl
orb
fidivrl
int
xchg
push
ss
dec
cmp
xchg
mov
popl
jmp
cmp
sbb
notl
mov
xchg
sarb
aad
dec
je
pop
out
push
scas
xor
decl
jns
cld
push
addr16
add
adc
divb
pop
push
in
sbb
lds
and
inc
add
xchg
push
dec
test
xchg
cwtl
test
adcb
push
outsb
shrl
arpl
jp
sti
int3
mov
popa
jecxz
sbb
aam
clc
mov
push
fs
fidivrl
add
pushl
inc
in
daa
mov
and
fistps
outsb
call
xchg
out
test
std
push
inc
mov
pop
mov
loope,pn
int
adc
jns
mov
shll
mov
aad
dec
loopne
jg
and
cli
or
rorl
jmp
inc
pop
push
jb
adc
pop
lcall
inc
jno
sbb
mov
add
jle
mov
cs
add
rclb
outsb
fistps
cmp
mov
jmp
and
sarl
cmp
mov
lcall
iret
sbb
fstl
cld
in
in
std
mov
idiv
or
in
es
pusha
mov
outsl
jbe
lcall
daa
test
lds
xchg
dec
sub
xchg
into
mov
sarl
xor
pop
arpl
sub
sahf
xchg
and
push
mov
or
in
add
push
xchg
and
aas
mov
dec
pop
rcrb
mov
ret
mov
jg
mov
and
lods
decb
cmp
mov
nop
stos
ds
xchg
stos
sbb
decl
inc
das
in
sub
xor
mov
call
test
sbb
into
movsl
push
adc
stos
fwait
push
std
cs
mov
xor
fimull
mov
hlt
dec
stos
inc
pop
adc
stos
push
outsl
pop
mov
mov
pop
sub
in
and
decl
adc
mov
aas
mov
xchg
mov
xchg
inc
test
ljmp
addr16
fdivs
das
add
std
push
adc
jns
mov
and
icebp
jno
or
pop
aaa
inc
jmp
jp
popa
xchg
jae
xchg
rcll
shrl
or
mov
aaa
inc
xor
mov
xchg
jae
and
adc
jb
dec
dec
jo
xchg
push
jb
nop
sbb
pushl
mov
cmp
pop
shlb
or
push
xor
jmp
lcall
dec
out
pop
or
imul
out
xchg
and
jg
mov
test
xor
pop
sbb
idiv
lcall
pop
xchg
clc
out
incl
push
or
xchg
clc
stc
orl
pop
movl
push
pushl
inc
add
repz
xchg
pop
and
pop
pop
shlb
mov
jg
cwtl
jo
pusha
push
dec
sbb
mov
mov
lcall
imulb
xor
cmp
ss
add
or
cmpb
jb
movsl
fidivl
movsb
adc
jae
loop
or
pop
mov
cli
xchg
test
push
pop
cmp
ret
mov
arpl
xor
mov
jb
cwtl
add
push
xor
jo
aaa
jg
jnp
sbb
cmp
rorl
sub
mov
sub
and
xchg
mov
cmp
clc
push
test
xchg
lock
out
push
mul
jle
pop
daa
cmp
loopne
or
imul
pop
push
cmp
pop
sub
mov
fidivrl
or
mul
ss
not
out
jb
pop
lret
and
pusha
mov
add
push
xchg
cmpl
decl
push
sub
stc
inc
in
jnp
sub
call
nop
aam
or
insl
sub
lock
int3
cmp
add
jmp
pushl
in
cs
rcrb
mov
notb
insb
mov
sti
jmp
icebp
incl
push
xor
ds
in
ss
es
leave
insb
or
adc
call
aad
pop
int3
xchg
xor
sub
outsb
or
sbb
outsl
pop
mov
cmc
decl
sub
pop
lret
rolb
jmp
rol
cli
pop
icebp
jg
or
incl
lahf
jmp
jl
vpandn
psubw
call
dec
sub
fcomi
mov
dec
repz
and
test
into
not
icebp
ds
das
xor
lcall
push
cli
jmp
les
bound
lahf
cmp
mov
or
mov
jae
mov
mov
mov
test
jns
or
jle
aas
ja
pop
sub
ret
dec
mov
jmp
push
push
xchg
xchg
cli
daa
mov
idivl
dec
mov
jecxz
mov
sub
push
or
xor
cli
sbb
jg
into
fdiv
popa
mov
emms
out
aas
movsb
test
pop
lock
xor
jns
cli
lret
xor
ljmp
sar
add
jno
cmc
sub
pop
repz
lret
cmc
add
inc
dec
jmp
inc
not
stc
int
xor
cmpsb
inc
ret
sbb
pop
pusha
lret
es
and
das
rcr
pushf
sahf
push
push
inc
lcall
dec
xor
shl
mov
fcomps
mov
push
mov
icebp
fisttps
flds
lahf
data16
fimuls
je
or
das
xor
fnsave
loop
bnd
xchg
sbb
pop
decl
mov
mov
pop
sbb
cwtl
neg
add
lcall
mov
push
in
leave
inc
add
adc
or
push
adc
enter
cmp
or
nop
cld
fcomp
mov
jbe
sub
cld
aas
xor
sbb
push
ljmp
daa
adc
sub
cmc
cmp
les
out
sbb
adc
push
mov
or
xlat
adc
mov
sbb
fbld
sub
movsl
lahf
sbb
sub
imul
mov
mov
mov
cwtl
sbb
cmpsb
fmul
push
add
ljmp
or
loope
je
push
outsb
or
adc
lods
xchg
push
mov
pop
xchg
cld
fildl
pop
stc
cmp
inc
mov
fidivs
inc
jg
xor
arpl
pop
mov
scas
mov
ljmp
or
adc
add
ficoml
ljmp
xorl
in
sbb
decl
cli
ficoml
int3
cmpsb
xor
mov
leave
mov
ss
dec
adc
jecxz
popf
xchg
dec
mov
cmp
mov
les
pop
dec
lea
dec
lcall
jno
out
and
int
ret
sti
out
mov
cli
lods
pop
jnp
icebp
or
pop
aad
inc
mov
loop
adc
pop
inc
push
lret
xchg
ljmp
orb
pop
push
fildll
jg
mov
sub
xor
ret
cmp
adc
hlt
call
test
loopne
push
outsl
cmp
scas
sbb
mov
xchg
xor
mov
sbb
sub
js
sarb
nop
out
add
fildll
out
aad
xorb
ror
in
mov
sar
pop
nop
and
mov
xor
and
ljmp
add
jmp
sbb
out
inc
mov
lahf
ljmp
adc
inc
and
fsubl
jge
inc
cmc
mov
popa
or
add
movsb
call
mov
pop
xor
jp
mov
mov
push
jnp
sub
pushf
dec
arpl
cld
ljmp
and
outsl
and
test
shr
out
fiadds
aad
fldl2e
test
in
in
test
mov
outsl
jmp
movsb
data16
pop
repz
loop
xor
int
daa
mov
adc
lods
pop
sbb
sbb
fadds
jne
push
mov
push
scas
push
imul
fwait
and
call
push
inc
notl
push
sbb
mov
adc
mov
mov
mov
test
loop
xlat
add
aaa
push
mov
decl
cli
or
aas
and
jae
sbbb
mov
dec
jecxz
jno
push
mov
add
loopne
es
jg
ljmp
stos
sbb
and
xchg
inc
lods
adc
nop
pop
sbb
call
inc
adc
test
pop
inc
xchg
lcall
cmp
jnp
inc
inc
mov
cmp
and
adc
jo
xchg
scas
push
jecxz
insl
out
pop
push
repnz
cmc
fldcw
lahf
sub
xor
xchg
ss
and
and
and
push
stc
jne
xchg
fstpl
gs
aam
inc
insb
aas
cmpsl
add
js
js
inc
cmp
sar
pop
aad
sub
mov
incl
ret
jae
pop
pushl
les
mov
and
jbe
test
push
daa
pop
into
jb
sbb
mov
lods
add
mov
jae
fsubrl
std
jecxz
in
xorb
ljmp
pop
stc
mov
mov
dec
fs
out
xor
cmc
jle
movsl
rolb
push
or
sub
mov
movb
pop
jmp
add
xchg
xor
adcl
jmp
fld
imul
cmp
test
mov
testl
adc
int3
pop
dec
sub
jecxz
jnp
mov
into
in
or
cmp
loopne
sbb
inc
cmp
push
inc
divb
inc
cmp
dec
lods
mov
sub
add
aam
pop
mov
clc
mov
test
aaa
xchg
fadd
das
mov
push
add
add
sbb
sbb
lea
mov
jp
mov
cs
lcall
rorl
hlt
aaa
orl
movsl
ja
ljmp
adc
and
mov
sbb
in
popf
push
push
stos
call
fbld
loop
lcall
xchg
jbe
sub
jp
pop
or
in
add
idivb
pushl
out
push
mov
subb
mov
mov
int3
enter
mov
pop
loopne
flds
in
xorl
cwtl
ja
clc
cli
cmp
cmp
mov
and
sbb
dec
clc
jg
mov
mov
fisubrl
mov
adc
mov
xor
testl
das
xor
pop
pop
jmp
ljmp
stos
and
ss
add
jns
xchg
jg
add
lcall
nop
push
sub
and
pop
inc
imul
xchg
frstor
add
add
jbe
and
add
popa
inc
xchg
push
cmp
jg
add
push
sbb
dec
jmp
loop
inc
ljmp
fwait
lods
or
pop
fdivl
push
cmp
mov
repnz
and
sbb
mov
dec
mov
call
sbb
cmp
dec
aaa
stos
lds
je
xbegin
loope
arpl
rol
fstl
out
cmp
jmp
and
pop
jbe
xchg
add
xor
icebp
push
add
fdiv
js
cmp
pop
sub
mov
push
repz
pop
jg
jne
ljmp
jne
sbb
add
and
pop
std
push
xor
fdivl
adcb
pushf
push
test
lods
ret
jae
and
sub
mov
lcall
cs
jmp
mov
and
xor
fcomip
fists
std
pushf
mov
push
fdivp
jnp
mov
aaa
loope
sbb
fldl2t
sti
int
pop
push
mov
mov
mov
push
pop
fucomip
pop
notl
and
adc
scas
inc
ljmp
cmp
push
xorl
fldt
pop
add
repnz
scas
pop
das
jb
icebp
push
sbb
lret
xor
cli
enter
lock
inc
cs
loopne
push
fs
ljmp
cmp
jb
lret
mov
call
pushf
cli
scas
adc
fbld
jmp
push
inc
cld
aas
mov
rcrl
std
loope
fisubrl
xchg
inc
pop
cmpsb
outsb
xchg
icebp
and
fs
ljmp
addr16
and
sti
cs
sar
or
lret
mov
cmpsb
subb
or
in
add
out
pop
push
clc
aad
add
inc
push
addb
add
and
lcall
jbe
out
push
sti
or
lds
outsl
push
hlt
push
imulb
sub
xchg
in
and
sbb
mov
cmpsb
xchg
les
sub
loopne
sbb
data16
sub
decl
adc
jecxz
rorl
fidivrl
push
mov
add
aaa
cmpsb
xchg
xchg
lret
lcall
jg
jecxz
cld
cmp
insl
push
sarl
pop
jae
cs
cmc
pop
clc
dec
pop
mov
and
pop
and
sub
lcall
add
adc
and
and
filds
adc
rolb
xor
ss
pop
lods
or
shlb
fstp
ficompl
push
adc
xor
add
jp
insb
cvttps2pi
xchg
pop
ss
jmp
adcl
add
cmp
pushl
xchg
jecxz
bnd
mov
push
xchg
or
call
nop
push
in
jmp
in
pop
pop
pop
pop
adc
in
xor
pop
push
and
rcrb
lods
xchg
aaa
cs
fildll
loopne
hlt
outsb
xor
mov
loope
or
cmpsl
add
popf
les
jbe
movsb
ja
jmp
das
rcr
dec
andb
cmp
mov
arpl
call
or
repz
xchg
sarb
and
mov
adc
leave
push
and
lcall
mov
lret
or
lock
in
sub
sbb
or
decb
mov
inc
dec
sub
ret
icebp
cs
loopne
hlt
ja
cli
jg
jle
adc
push
mull
push
xor
jo
enter
lds
fisubl
push
pop
scas
sbb
int
neg
adc
push
adc
cli
addb
lret
jnp
in
mov
jg
push
or
mov
addr16
scas
shl
sub
iret
fsubrl
cmp
dec
movsb
das
popa
aas
mov
in
test
xchg
inc
les
jge
push
out
sti
movsl
adc
mov
pop
dec
and
sub
xor
push
aam
jmp
pop
icebp
jmp
cmp
jecxz
cld
out
rcrb
pop
cs
xchg
vmovupd
leave
movsl
and
and
dec
adc
stos
inc
insw
xchg
and
jl
mov
repz
or
out
stos
out
add
leave
xchg
sub
push
adc
mov
mov
adc
mov
jg
nop
lcall
push
add
inc
outsl
repz
or
and
xchg
outsb
outsb
dec
and
mov
sbbb
xor
out
add
mov
push
sbb
mov
adc
pusha
mov
int3
xor
lock
push
call
adc
pushf
loope
jno
dec
loop
sar
lcall
push
fcmovb
jmp
mov
or
or
fldln2
ret
jp
or
lock
loop
jg
sbb
mov
xchg
ja
jp
out
xchg
jo
mov
add
dec
repz
cli
adc
decb
lods
loope,pn
pop
ss
inc
cmpsb
or
dec
mov
lock
jb
cmp
pop
and
out
fcmovbe
fadd
das
xchg
decb
ret
sbb
adc
lcall
jmp
push
sarb
and
leave
or
sbb
sbb
enter
mov
mov
jns
mov
cmp
jb
xor
mov
cld
and
or
lds
pop
xor
fadd
mov
xor
sbb
ret
lcall
aaa
andb
or
lcall
sar
aas
and
inc
mov
dec
in
xchg
xchg
mov
jecxz
adc
mov
fnsetpm(287
mov
xchg
popa
pop
fdivs
cmp
mov
jno
mulb
inc
fs
inc
repz
loope
fisubs
hlt
dec
adc
cmp
loopne
inc
inc
arpl
xor
and
dec
sbb
decl
fmull
repnz
nop
sub
lods
aaa
stos
sar
aas
add
pusha
lret
rcrb
sub
scas
cmc
rorb
add
push
sub
mov
xchg
fmul
jmp
push
clc
fwait
test
inc
inc
cwtl
in
jbe
pop
je
decl
scas
mov
jg
imul
inc
aad
ret
sahf
sbb
mov
cmpsl
mov
out
mov
int
stc
or
jecxz
mulps
das
add
testb
jb
call
inc
cmp
or
dec
pop
xchg
mov
cmp
dec
jnp
cmp
sti
mov
stc
pop
jle
inc
decl
sarl
out
loopne
xor
adc
shll
cld
daa
ja
clc
mov
sub
test
add
cmc
add
mov
das
icebp
stos
flds
adc
mov
popa
repnz
pop
sub
int3
imull
fsubs
adc
out
das
movsb
test
rcrl
pop
add
mov
fcmovbe
xor
inc
push
bound
pushl
inc
sbb
out
mov
jns
pop
jno
cmp
adc
cltd
xor
inc
mov
or
outsl
adcb
mov
inc
cltd
pop
add
push
subb
mov
dec
mov
or
xor
xchg
stc
mov
pop
js
imull
mov
scas
aam
ds
cmp
addb
shll
sub
ret
sub
mov
scas
mov
sub
add
or
outsl
mov
movsb
xor
mov
mov
cli
mov
jns
xor
jmp
pop
ljmp
push
cmp
push
icebp
cs
fdivrp
das
mov
scas
add
xchg
into
cwtl
xchg
rcll
dec
ss
adc
das
jb
inc
xor
bswap
div
mov
lods
shlb
popf
lods
pushf
add
test
cld
pop
xchg
ret
ss
ds
mov
mov
rol
xchg
fildl
test
dec
cld
or
fidivrs
adc
pop
dec
clc
mov
and
mov
jle
xor
dec
dec
rorl
and
mov
sahf
sbb
pop
ret
push
sbb
dec
xor
cmpb
jns
lock
dec
je
aad
enter
dec
out
bound
incl
jnp
mov
stc
and
dec
sar
xchg
movsl
cs
aas
adc
shll
push
stc
outsl
es
jge
pop
xor
clc
rorl
pop
leave
pushl
mov
sbb
inc
clc
dec
je
in
sahf
sbb
fisubrs
pop
outsb
in
jp
mov
leave
inc
clc
mov
pop
ljmp
and
xor
inc
push
sbb
in
out
lcall
push
push
add
or
outsb
jmp
or
data16
sub
cmp
filds
xor
ja
clc
fwait
call
fdivr
dec
inc
mov
cmp
jb
aaa
outsl
out
sbb
mov
mov
lcall
adc
sbbl
mov
push
out
out
xlat
out
sar
call
mov
sbb
pop
ss
leave
xchg
and
dec
cmpsb
or
div
fcomip
ljmp
and
es
jmp
out
jl
push
shl
loopne
ss
jbe
ja
pop
icebp
in
xchg
cs
pop
adcl
fwait
add
add
and
or
int3
xlat
xor
aam
fildll
cmpsl
test
outsb
daa
dec
subl
shlb
xor
std
stc
or
xchg
add
cs
pop
rclb
lret
adc
call
add
repnz
or
outsl
xchg
add
pop
mov
jbe
lcall
pop
lret
fildll
jecxz
leave
pop
lock
xchg
cmp
mov
pop
xor
hlt
jmp
jecxz
cmpsl
add
lds
insb
xchg
out
pusha
mov
push
push
pop
cmpsl
int3
int3
popf
adc
jge
jns
cld
mov
ljmp
and
nop
jle
mov
mov
pop
clc
shlb
jmp
cmp
shl
xchg
lea
std
rorb
mov
mov
xchg
inc
pushf
sbb
xchg
loope
out
fcmove
les
aaa
and
mov
out
adc
jp
subb
mov
fisttps
mov
addr16
mov
daa
jmp
or
jmp
or
in
rclb
push
xchg
and
push
icebp
or
mov
jecxz
adc
mov
clc
movsb
sub
inc
icebp
jecxz
inc
outsb
inc
dec
push
inc
adc
or
xor
bound
mov
lcall
movsb
push
shrb
js
mov
or
shr
clc
push
jmp
dec
jp
icebp
les
xor
out
add
cmp
decl
fs
cli
sub
insl
in
push
imul
rol
or
clc
xchg
pop
stos
cmp
xchg
sbb
int
mov
outsl
sbb
mov
jp
cli
sbb
decl
jno
lahf
pusha
xor
fisubs
lret
push
fcomip
mov
les
dec
push
lock
cs
pop
xlat
push
call
cli
test
or
cmpl
rcrl
ds
mov
mov
aaa
mov
mov
jb
inc
ret
stos
lret
pop
outsb
pop
push
mov
sarb
xchg
xchg
adc
push
sbb
sub
cld
or
imulb
mov
stc
xchg
add
inc
sbb
outsl
stos
pop
fsubr
ja
test
mov
jmp
dec
std
clc
fidivl
clc
cmc
lahf
movsb
sub
int
ficomps
out
aas
pusha
sbb
ljmp
test
loop
mov
divl
addr16
fwait
aaa
mov
incb
pop
lret
xchg
inc
mov
out
rclb
ds
call
fsubrs
jnp
sub
sarb
pop
stc
adc
xor
cwtl
or
es
gs
addr16
xor
es
xchg
mov
dec
jmp
jg
fcmovu
push
jmp
inc
and
dec
xchg
cltd
cmpsl
mov
mov
mov
stos
dec
daa
inc
push
scas
sub
rorb
notl
lcall
push
ja
mov
insl
std
scas
sbb
and
xchg
dec
shrl
dec
cld
pop
gs
push
mov
cmp
sbb
inc
push
fsubrl
fdivrs
cmpsb
cmp
sar
call
jbe
xor
rclb
sbb
xor
out
addr16
mov
call
or
sub
mov
mov
sti
dec
int3
jp
sub
cmc
jg
je
dec
dec
ds
out
aam
pop
pop
scas
dec
loop
sub
out
push
cmp
in
jne
pop
js
dec
xchg
sub
jae
mov
or
jp
add
pop
xchg
jecxz
mov
out
int
fldcw
push
xor
rol
push
lret
push
fst
jg
bound
test
rep
lods
decl
adc
fsub
fidivl
loopne
sbb
push
lock
adc
jp
movsb
dec
hlt
enter
jae
scas
jle
xchg
cltd
lret
jl
and
jp
rcr
divb
mov
and
inc
add
sub
xchg
in
cmp
sbb
adc
add
repnz
add
or
or
cmp
shr
pop
sbb
jmp
outsl
rcrb
stos
mov
insb
pop
call
or
icebp
jo
xchg
stc
pop
mov
or
call
out
aas
iret
rcrl
std
sbb
jmp
aam
push
adc
xor
ror
fabs
lea
hlt
sbb
mov
inc
push
cmp
les
aam
adc
cltd
hlt
push
and
sarb
mov
idivb
data16
clc
testb
dec
jle
ficoml
leave
cmpb
cmp
js
mov
xchg
shl
or
fdivl
test
mov
outsl
xor
mov
iret
sbb
ret
and
das
adc
gs
loop
imul
sub
push
in
add
out
xchg
andb
shl
loop
incl
add
fimuls
inc
pop
insl
pop
jns
jnp
mov
roll
add
les
icebp
repz
sub
xchg
jmp
jle
pop
dec
xor
cwtl
add
stos
jle
data16
jg
out
test
mov
xor
adc
out
ss
call
decb
roll
add
push
jl
testl
lret
sarb
jp
xchg
shrl
cmc
repnz
sub
mov
cmp
and
and
imulb
popf
mov
push
mov
in
jmp
mov
xor
ror
jg
mov
or
cmp
call
and
mov
bound
stc
dec
jg
and
add
pop
sbb
push
or
mov
ljmp
mov
and
test
fwait
push
shr
and
fidivrs
mov
sti
xor
ss
push
ds
xchg
lea
test
or
push
in
shl
fwait
imul
xchg
in
and
cmpsl
aaa
jge
dec
xlat
mov
and
std
int3
shrb
inc
pop
add
or
loop
movsb
fildl
xchg
repnz
mov
jle
push
sub
mov
push
xor
sub
in
mov
call
test
fst
out
jmp
test
adc
popf
dec
jecxz
ret
jbe
ljmp
and
mov
xchg
jg
mov
decl
and
mov
ja
xor
fldl
decb
loopne
call
mov
add
lods
fnstcw
mov
mov
fldenv
pop
or
iret
sarb
jns
inc
adc
sub
sti
xchg
mov
jmp
clc
cmp
sbb
inc
adc
push
push
pop
mov
repz
repnz
lret
aas
mov
in
divl
stc
xor
movsb
movsb
xchg
and
sahf
sub
movsl
jl
js
sbb
loope
rcl
rcrb
mov
fs
mov
jne
outsb
adc
jg
and
es
sub
aaa
pop
push
pushf
mov
sbb
adc
ffreep
popf
mov
shlb
lahf
pusha
addr16
mov
sahf
mov
pushl
push
xchg
sub
xchg
hlt
cmpsl
jecxz
xor
xlat
es
cld
mov
adc
and
pop
xor
sbbl
sbb
scas
and
fwait
sbb
leave
aam
and
in
sbbb
scas
dec
rcl
jge,pn
fdivrl
es
cmp
mov
addl
sbb
ljmp
scas
out
aam
pop
cmpsb
jnp
adc
mov
aam
cs
add
xchg
xor
into
nop
rcr
xchg
imul
loope
sub
xor
mov
add
into
cs
cmpb
pusha
sbb
cs
jmp
pop
xchg
xchg
andb
mov
jmp
push
gs
fdivs
std
push
mov
call
cmp
mov
or
jle
jg
stos
or
jle
or
cmp
and
jb
sahf
stc
enter
xchg
in
ret
xchg
js
aad
sbb
pop
pop
adc
cli
ret
movsb
cld
xchg
test
call
sub
xchg
jecxz
fsubl
sbb
cltd
aaa
adc
and
or
bound
dec
jecxz
ret
mov
push
sbb
mov
add
cmp
aaa
mov
inc
daa
add
lock
test
std
dec
rclb
scas
inc
pusha
add
xor
out
cmp
fdivr
adc
add
loopne
fs
mov
add
xchg
sar
int
mov
aam
push
xchg
dec
cld
incl
sbb
adc
xchg
out
fnop
mov
add
ljmp
jl
mov
pop
leave
jg
hlt
aas
xchg
call
mov
xorl
dec
std
lods
xchg
in
fwait
arpl
leave
xchg
stos
xor
jmp
ss
dec
mov
pop
std
mov
or
out
jae
mov
sub
and
inc
pop
nop
add
mov
int
cmovno
int
push
je
cli
adc
outsb
push
loopne
xchg
in
cmpsb
clc
lret
xchg
leave
xchg
arpl
xor
nop
push
in
les
loop
pop
movsl
pushl
bound
aaa
pop
cmp
push
jecxz
in
mov
cmp
pop
cmp
mov
fidivl
int
jg
pop
jp
or
je
jge
sbb
sub
loop
jecxz
mov
mov
cmc
sub
pop
les
ljmp
push
cmp
sub
xor
jmp
shrl
loopne
daa
pop
fildll
shrl
fildl
push
cli
jmp
mov
insl
sar
jg
ss
in
adc
cmpsl
pop
cmp
decb
test
push
push
push
add
int3
repnz
adc
fsub
out
popf
cld
out
shlb
dec
fbld
data16
inc
adc
in
call
and
mov
popa
je
jae
cmpsb
jae
in
aaa
sarl
aam
daa
jo
lret
ljmp
arpl
jne
cli
rcrl
sarl
push
push
lcall
jl
icebp
jmp
mov
popa
push
mov
jae
pop
mov
xchg
cs
into
fiaddl
or
inc
outsl
clc
inc
test
sub
aaa
mov
xchg
mov
xchg
cmp
jp
inc
das
add
lcall
xor
and
pushf
jo
dec
or
pushl
pop
addr16
movsb
cmp
push
outsl
ss
jnp
out
dec
mov
inc
xchg
push
inc
lahf
sub
and
mov
decb
mov
xchg
icebp
cmp
lret
cli
sub
divb
jecxz
clc
pop
dec
stos
out
out
cltd
inc
cmp
jns
push
jecxz
push
pop
adc
pop
int3
xchg
push
sub
jecxz
aas
add
sbb
cmp
cmp
movsb
dec
test
xchg
jno
vcvtsi2ss
ljmp
lcall
fidivrs
pop
push
dec
aaa
push
lahf
cmp
xchg
sbb
add
dec
mov
lods
faddl
add
in
mov
sub
xor
and
jnp
cmpsb
jns
out
jp
add
stos
sbb
stos
lea
rolb
lock
mov
dec
adc
mov
adc
sub
rcrl
or
mov
imul
or
xchg
push
gs
cmp
pop
andb
adcl
cli
cmp
and
adc
les
ds
aad
sub
mov
cmpsb
pushl
mov
clc
mov
jmp
inc
sub
mov
nop
xlat
scas
rorb
dec
popf
add
fistps
xchg
sub
pop
mov
iret
mov
push
mov
call
std
jecxz
sarb
je
testl
fldl
fidivrs
enter
ljmp
mov
jbe
les
dec
mov
int3
mov
mov
cmpb
add
insl
mov
pushl
adc
repz
rolb
xchg
int
fxch
test
loop
stc
mov
pusha
jl
mov
add
ret
push
test
mov
sub
out
push
std
repz
jp
jne
je
repnz
push
xlat
push
sahf
inc
lods
mov
les
push
outsb
ds
push
or
or
jo
cwtl
mov
mov
repnz
fimull
or
pop
ds
sbb
and
mov
sbb
mov
cli
call
and
sbb
stc
xchg
fstp
or
mov
push
call
jecxz
mov
xchg
push
rol
push
insb
mov
mov
into
mov
icebp
xchg
cmp
mov
sub
fs
sub
lock
mov
push
shlb
stos
cli
arpl
mov
fiaddl
mov
jg
xor
loop
enter
cld
int
divb
mov
jecxz
sub
mov
imulb
fwait
pop
dec
adc
xchg
fidivrs
mov
mov
repnz
push
sar
mov
xchg
dec
sbb
push
adc
mov
rclb
jl
mov
and
jecxz
out
adc
xchg
jno
ljmp
adc
subb
jbe
jle
sbb
xchg
leave
repz
adc
sub
lret
hlt
roll
rcll
outsb
jg
sub
and
mov
push
movsb
push
cmpb
out
inc
clc
pop
in
adc
out
inc
jecxz
in
ficompl
fisttps
lods
mov
addr16
leave
dec
jb
lea
xchg
cmc
cmp
mov
mov
add
lret
aaa
sub
in
incl
push
xlat
or
faddl
lret
scas
rorb
inc
in
inc
lcall
inc
das
and
cs
sub
ds
jmp
pop
jge,pt
cmp
inc
pshufw
repz
cmp
filds
and
mov
push
xlat
lret
mov
dec
cmp
movl
es
pushl
xchg
out
sahf
ret
in
jne
mov
cmp
fdivp
cmpsl
fcompl
push
das
push
shr
imull
in
je
xchg
or
add
xchg
ss
fbld
add
ret
mov
mov
mov
adc
sbb
sar
sbb
ljmp
sub
xor
sub
xor
int3
mov
pushf
adc
and
pushl
adc
loop
pop
xchg
addr16
pop
js
xchg
xor
int
push
out
hlt
sti
fmulp
adc
or
clc
ror
add
xor
jmp
or
mov
or
shl
jb
dec
in
rcr
inc
xchg
sbb
cli
inc
cmp
add
jmp
test
sub
clc
pop
lods
pusha
xlat
sbb
jo
add
mov
dec
imul
or
lcall
push
push
mov
sbb
or
dec
jns
loopne
sbb
jg
xchg
or
fwait
jg
dec
in
das
and
push
fs
movb
inc
add
inc
loop
mov
add
push
inc
ja
clc
es
jge
andl
ljmp
lods
xor
addl
cmpl
call
jno
es
addb
and
test
cmpsl
sti
into
cmp
incl
mov
in
fcoms
jmp
mov
iret
jl
dec
ljmp
repnz
rcr
cmc
mov
lcall
xor
xchg
adc
cmp
call
or
jg
mov
loop
mov
cmp
adc
push
std
aaa
mov
pusha
xor
adc
xchg
adc
or
pushf
xor
jmp
mov
pop
pop
dec
or
or
jbe
pop
in
aad
ljmp
mov
add
sub
push
mov
out
pusha
mov
sbb
inc
or
jg
push
jns
push
push
stos
in
test
fisttpl
pop
cld
call
mov
adc
mov
push
inc
ss
jg
jmp
push
jp
aaa
jle
inc
je
idiv
mov
and
insb
xorb
xchg
rcll
lods
clc
xor
add
lret
sbb
inc
jnp
inc
pop
or
adc
inc
jmp
cli
repnz
xor
pminub
loope
dec
loop
cmp
enter
or
inc
xchg
push
jno
pop
cmc
jmp
and
push
rcrl
insl
test
and
mov
stos
adc
cli
aas
sub
negl
mov
jg
fucomi
loope
adc
fiadds
sbb
dec
incl
jmp
add
pop
inc
je
sbb
push
clc
incl
xor
sbb
inc
das
loope
imul
pop
mov
rcrl
or
bound
pop
mov
mov
inc
sbb
incl
fwait
shl
enter
sub
xor
in
call
jbe
enter
jmp
mov
dec
mov
add
sub
mov
jbe
fisttps
decb
mov
cli
and
lock
cli
dec
pop
xchg
cmp
jl
fisubrs
repz
sbb
push
fwait
daa
xor
mov
int
test
add
adc
icebp
das
rorb
jmp
mov
cld
lcall
icebp
in
push
adc
in
lods
mov
movl
lea
loopne
mov
push
mov
jb
sahf
outsl
in
dec
mov
push
cli
xor
outsb
inc
and
xchg
rorl
cmpsb
and
jo
xchg
inc
push
sahf
mov
popf
lahf
lds
push
les
mov
dec
mov
stos
clc
pop
or
sahf
sar
icebp
lcall
mov
jno
cmp
push
adc
repz
into
jne
lcall
jmp
xchg
fimull
js
std
repz
sub
lds
ljmp
dec
or
aam
pop
je
add
sub
sub
bound
xor
sub
sbb
cld
xchg
into
enter
inc
push
rcrl
push
xor
mov
pusha
jo
pop
ss
mov
or
jle
adc
scas
xchg
sbb
fisubrl
xor
aaa
iret
xchg
sbb
lret
cmpsb
pusha
rcr
sub
jle
in
inc
test
outsb
xchg
filds
scas
into
dec
push
pusha
sbb
sub
int3
ljmp
ss
lret
out
pop
xchg
inc
and
mov
mov
add
push
and
out
mov
in
mov
mov
cmp
sbb
mov
das
pop
xchg
in
inc
dec
jae
mov
or
push
add
xchg
fcmovu
fistps
sub
adc
lahf
movsl
mov
mov
add
out
test
ret
in
ja
pop
cld
inc
cli
inc
dec
xchg
or
jg
pop
pop
xor
or
cli
xchg
mov
inc
clc
jne
rorl
push
lds
lock
push
lret
outsb
sub
mov
lds
push
clc
mov
cs
lea
ljmp
clc
call
sbb
ljmp
je
sub
mov
pushw
sbb
fsub
or
loopne
out
push
into
jno
add
pop
jmp
mov
dec
and
lea
ud1
push
mov
and
lcall
pop
pop
test
shll
dec
cmc
call
jmp
cmpsb
hlt
out
jae
call
shrl
ja
and
dec
jne
test
ljmp
call
adc
push
addr16
js
push
cmp
stc
sbbl
pop
and
pop
push
and
outsl
push
loop
lds
cli
pop
fs
test
xchg
push
xchg
test
jle
inc
sbb
out
mov
sbb
sti
xlat
mov
in
aad
jns
sbb
adc
jb
xor
xchg
dec
xchg
mov
ljmp
movsl
fmuls
sub
xchg
and
add
xor
mov
cmp
mov
cs
loop
int3
daa
jl
pop
mov
push
push
outsb
mov
les
and
adc
mov
inc
pop
xchg
es
pop
insl
push
out
adc
cmp
adc
sub
aas
or
adc
sbb
jmp
outsl
xchg
xchg
aam
fdivl
or
cs
pop
jae
jmp
or
aad
jnp
push
xchg
mov
inc
or
addr16
cmp
sbb
shl
and
inc
popa
insb
bound
jle
dec
jmp
cs
test
mov
sub
aad
shl
shl
test
insb
pop
and
loop
aam
lcall
inc
mov
rorb
movb
push
cld
pushl
ljmp
cs
sub
in
push
pop
pop
cld
lock
cli
adc
sub
ret
aas
ds
cmp
movsb
outsl
js
fwait
mov
and
loop
dec
aaa
pop
std
mov
or
or
xchg
repnz
push
daa
std
lcall
pop
or
clc
addr16
ljmp
mov
xor
popf
test
std
aaa
call
jae
adc
pop
in
and
jg
mov
inc
mov
fists
or
lock
add
mov
cmp
add
jno
add
or
fildll
pop
cmp
hlt
mov
pop
mov
mov
adc
or
adc
lret
ljmp
mov
rcrb
add
dec
lods
mov
push
push
mulb
adc
xor
mov
mov
mov
iret
loopne
xor
lret
stc
loope
outsl
jge
addl
sbb
jmp
stos
lret
push
aam
pop
and
aas
dec
int
aad
adc
int
incl
dec
mov
adc
adc
push
add
mov
jge
fildll
push
xor
sub
incl
push
lea
dec
mov
push
loop
cli
or
pusha
fimull
add
call
in
fwait
roll
js,pt
jecxz
xor
sbb
add
lcall
notb
push
jle
cmpsl
adc
fiaddl
xor
jecxz
ds
ja
jg
cli
sub
push
add
or
pop
sub
xchg
cld
sahf
mov
pop
sub
lock
xchg
sbb
std
add
vshufps
fwait
or
testl
fildll
std
pop
sbb
in
push
adc
sbb
sbb
sbb
decl
or
pop
pop
nop
repnz
test
pop
call
sbb
jbe
cmp
add
cmpsl
cmpsl
inc
jecxz
lret
sbb
dec
sbbb
inc
outsl
xor
mov
mov
shrb
push
mov
mov
or
push
data16
sbb
cmpsb
inc
jmp
fdivp
call
out
xor
shl
cmp
push
xor
dec
mov
adc
push
cltd
mov
incl
ljmp
jle
in
xor
cmpsl
movsb
mov
sub
pavgb
decl
pop
xchg
cmpsl
xor
sbb
lahf
mov
stc
in
push
test
cwtl
lods
xchg
xorb
movsl
ds
sbb
decl
out
cmp
lret
imul
jg
sbb
adc
cmp
jl
loope
cmc
es
and
in
loope
ss
aas
cli
imul
mov
ja
or
loop
pop
lret
inc
adc
pop
lds
mov
push
sub
outsl
mov
adc
ljmp
jno
enter
mov
pop
daa
jns
iret
in
xchg
sub
push
or
mov
lds
inc
pop
lods
incl
cmpsb
aaa
adc
loopne
loopne
dec
out
std
test
incl
sbb
cmpsl
or
shl
xor
test
aaa
dec
jg
lcall
call
xor
out
cmp
jb
or
call
jmpw
pop
mov
movsb
push
rorl
sahf
jnp
mov
sar
pushl
pop
sbb
mov
push
sub
xchg
pop
add
push
clc
dec
icebp
inc
out
inc
ret
movsb
and
sarb
out
jg
dec
rolb
movsl
sarl
mov
cs
pop
push
daa
jmp
inc
mov
jl
push
imul
out
or
or
ret
sbb
mov
xchg
cli
cmc
addl
xchg
or
pop
xchg
or
dec
daa
lcall
lcall
movsl
sbbb
in
fisttps
aam
stos
or
or
add
out
insl
cmp
mov
lds
jle
fcmovu
scas
dec
adc
cmc
cs
sub
ljmp
out
sahf
rclb
inc
pop
sub
add
lock
xor
or
jecxz
mov
push
ret
cld
loopne
jle
jl
call
dec
or
imul
addb
push
xchg
inc
xchg
inc
jae
adc
push
jmp
ret
mov
es
dec
mov
insb
pusha
ss
add
ljmp
adc
sysret
jge
pop
mov
mov
xchg
mov
add
pop
jmp
ret
orl
mov
mov
filds
jmp
in
in
test
rcr
les
jo
and
jg
call
lock
push
pusha
adc
jb
inc
rclb
mov
xor
adc
adc
pop
jmp
out
cwtl
push
pop
mov
xchg
adc
lock
pop
rclb
cmpb
xchg
fisubs
mov
call
sub
xlat
xchg
pop
scas
sub
push
dec
jg
xchg
pusha
pop
sub
test
or
stos
fbld
shr
fwait
mov
roll
and
and
push
add
jb
mov
dec
push
cmpsl
and
pushf
iret
push
outsl
and
push
or
in
adc
fsubs
mov
adc
enter
inc
or
cmp
mov
push
repnz
mov
dec
insl
mov
xchg
fisubl
mov
ss
cmp
and
push
cmp
add
nop
xor
xor
add
mov
std
pop
inc
push
jbe
addr16
add
sbb
mov
lds
stc
inc
push
fists
rcr
pop
inc
stc
cmp
mov
leave
add
jnp
adc
frstor
movsb
shrb
js
cmp
cmpsl
clc
ljmp
inc
mov
leave
cli
xchg
jmp
imul
cld
call
add
sbb
imul
cmc
test
push
cld
mov
and
push
in
outsb
mov
jecxz
jo
test
addr16
test
sbb
jp
push
adc
stos
icebp
aad
fmull
and
jg
loope
and
and
sbb
addb
pop
dec
cmp
inc
cmpsl
xchg
xor
inc
push
pushl
jge
fisubrs
movl
push
rcrb
clc
test
into
aam
cmp
mov
ficoml
pop
std
clc
decl
jle
loop
adc
add
adc
leave
enter
scas
cli
aas
or
sub
pop
loop
call
push
iret
jmp
idiv
mov
inc
push
push
sbb
adc
jg
mov
cld
rcl
xchg
cmp
push
addl
push
sarb
pushl
lds
add
xor
add
xchg
shrb
out
mov
test
insb
cwtl
push
ret
xchg
lock
test
xchg
sub
inc
adc
outsl
js
into
imul
adc
mov
mov
pop
repz
popf
lods
sub
test
sub
fwait
pop
jecxz
loopne
mov
das
call
xchg
loope
stos
aam
mov
jb
adc
mov
out
add
xor
sahf
push
xor
xchg
addr16
sub
cwtl
cli
jl
push
mov
adc
lcall
adc
push
xchg
pop
iret
sbb
xorb
and
push
mov
in
pop
push
cli
sti
ds
ret
jl
jb
hlt
out
pop
ja
and
ret
ljmp
iret
rcl
bound
test
jecxz
pop
mov
sub
sarb
push
shl
test
into
jmp
cmp
les
xor
push
sbb
jg
stos
incl
inc
es
cmp
lcall
out
sti
sub
inc
int
and
addr16
or
mov
dec
or
jmp
hlt
mov
outsl
xor
push
jns
sbb
jg
loopne
ret
int3
cmp
scas
adc
adcb
sbb
mov
or
rolb
pop
jg
nop
mov
int
and
jmp
jmp
and
pop
cmp
sub
das
aam
mov
ret
das
cs
lcall
ljmp
inc
loop
pop
les
adc
int
fdivrp
icebp
andl
ljmp
pusha
jp
xchg
pop
shr
scas
mov
shll
push
mov
ficoml
popw
mov
sub
imul
push
es
loope
das
int3
jge
push
lds
incl
mov
jecxz
inc
mov
xor
cmp
repnz
es
jb
adc
mov
test
mov
mov
mov
mov
sbb
ss
add
int3
das
fucom
sbb
dec
mov
das
sti
adc
push
sbb
push
int3
cmp
iret
test
lret
and
stc
scas
sub
lret
aad
jno
data16
es
repnz
sar
leave
mov
test
jo
lcall
stos
or
add
iret
repnz
out
adc
mov
xor
or
in
adc
lahf
mov
or
sbb
enter
lcall
dec
adc
mov
push
jg
xor
lds
inc
mov
testb
adc
lcall
jmp
pop
or
jp
bound
adc
and
dec
add
inc
dec
push
or
daa
gs
repnz
ffreep
inc
mov
aaa
adc
jmp
add
inc
push
sub
pop
mov
dec
jnp
or
sub
ljmp
and
and
fbstp
adc
jl
mov
lahf
inc
add
jmp
clc
mov
insb
add
or
push
repz
nop
adc
inc
push
mov
add
cmp
sahf
fildl
push
mov
incl
pop
jb
movsb
ss
inc
push
out
add
push
ud0
pushl
sub
es
sti
subb
mov
dec
adc
cs
xor
mov
out
or
sub
imul
imul
add
xchg
popl
fimull
push
ljmp
fcmovbe
cmp
inc
or
and
dec
mov
shrb
and
add
jo
data16
mov
bnd
shlb
dec
sbb
pop
mov
ss
mov
push
sub
jns
mov
mov
das
push
or
pop
or
data16
imul
pop
out
pop
xchg
add
test
ss
sbb
push
pop
sub
jp
mov
sub
imul
test
sub
add
xchg
mov
mov
xor
and
sbbb
dec
pusha
push
lods
and
test
icebp
pop
mov
fwait
push
mov
cmc
fnsave
or
mov
outsl
mov
pop
pop
xor
outsb
sub
push
lock
sti
lret
jo
repnz
rcll
vmwrite
or
stc
testb
daa
xor
adc
in
mov
fmul
add
movsl
gs
jne
pop
add
or
push
dec
orb
shlb
inc
push
add
xchg
sbbb
and
dec
jns
movsb
test
cmp
xor
rcl
inc
push
pop
jno
aaa
sbb
mov
pop
push
lret
xchg
in
mov
mov
push
cmpsb
push
incb
inc
in
in
hlt
lret
jo
daa
loopne
fnstsw
xor
lret
imul
adc
pop
adc
push
insb
mov
xlat
repz
push
js
xor
lret
sbb
inc
push
bound
add
test
int
test
sti
int
add
setb
push
sbb
add
sub
or
adc
fdivp
lds
clc
jnp
adc
dec
scas
inc
pop
and
add
arpl
dec
clc
lret
outsb
andl
xchg
cmp
fdivl
mov
xor
jl
imul
push
or
sub
xor
ja
cld
and
outsb
mov
pop
pop
jne
or
pop
incb
nop
push
mov
in
out
and
cld
mov
in
xchg
std
pop
bound
inc
inc
std
in
icebp
xchg
add
div
dec
or
aaa
mov
jb
jle
clc
or
push
sub
xor
clc
pop
xchg
bound
in
push
sbb
aas
lcall
imul
mov
aaa
dec
cli
and
scas
repz
imul
scas
int3
jmp
add
repz
add
dec
dec
arpl
lret
or
insl
dec
or
jo
ss
inc
add
jg
xchg
inc
inc
sbb
adcb
jbe
jo
mov
lea
adc
pop
mov
sub
lods
leave
in
add
push
add
js
mov
pop
mov
add
enter
jae
pop
jp
sbbb
dec
pop
bnd
fwait
adcl
arpl
jns
ficoml
pop
add
jb
lahf
and
cmp
lret
ror
sbbb
lret
icebp
leave
inc
push
xchg
call
add
inc
jmp
push
sbb
dec
cld
or
loop
pop
jle
paddd
sub
mov
and
mov
push
inc
bound
cli
rcll
push
adc
adc
imull
mov
and
push
pop
int3
dec
jle
push
loope
das
or
gs
scas
add
stos
mov
or
les
mov
mov
push
lretw
lods
push
adc
dec
push
das
lcall
fidivl
loop
adc
add
addl
loope
xchg
mov
rcll
out
cmp
cmp
stos
sub
lret
aas
cmp
nop
lret
cmp
inc
movb
mov
xchg
sti
xchg
adc
lret
jecxz
xor
adc
mov
in
dec
inc
cltd
faddl
cld
lcall
push
int
push
fsubs
aam
cmp
cs
clc
shl
pandn
cmp
aaa
xchg
icebp
push
sub
xor
dec
insb
shlb
in
mov
push
jg
sbb
sub
aaa
dec
repz
pushl
incl
inc
add
sub
cmp
insb
sbb
mov
mov
or
jmp
test
pop
call
mov
add
aad
lea
pushl
cltd
mov
lock
or
mov
lods
xchg
fcmovnu
lods
mov
pushl
mov
out
out
nop
push
movsl
fwait
mov
xchg
std
xlat
stos
mov
shlb
and
mov
mov
xor
mov
mov
ja
shlb
and
pop
mov
mov
pop
add
or
add
or
shll
xor
pop
fwait
out
shrb
sbb
sbb
add
stc
aaa
ljmp
sbb
mov
and
aam
lods
pop
jns
pop
test
sarb
pop
aad
lods
cmp
leave
push
inc
cli
pop
out
xchg
into
iret
lret
mov
fwait
push
les
lcall
in
scas
xchg
xor
pop
ret
mov
jg
sahf
cmpsl
ss
icebp
xchg
out
jae
incl
adc
stc
inc
pop
lea
jmp
leave
xor
decl
pusha
test
ffree
mov
xchg
push
push
xchg
ljmp
decl
fcmovnbe
xchg
ds
push
push
adc
xchg
test
fdivr
scas
cld
call
jmp
add
out
mov
mov
scas
mov
out
or
out
outsb
xchg
mov
mov
aaa
sub
jnp
mov
add
ds
out
outsl
sbb
push
out
sar
lods
out
dec
xor
lock
clc
lret
push
sti
into
jmp
sub
mov
fwait
loopne
sbb
mov
repnz
push
stc
incl
mov
lock
loop
mov
jecxz
movsl
mov
rcl
xchg
out
fnstenv
dec
out
sub
cmpsl
repnz
fldt
cli
loop
scas
test
sti
pop
ljmp
clc
icebp
add
sub
mov
fcmovnbe
push
adcb
ljmp
fcomps
mov
sub
fwait
xor
mov
fwait
in
cltd
das
pop
sar
decl
stc
add
mov
lock
cmp
jmp
pop
int
aam
mov
push
fmuls
aam
fcom
shrl
pop
andl
cwtl
jbe
ret
mov
push
out
fwait
call
inc
adc
xor
mov
jno
cwtl
mov
rcrl
xor
js
cmc
sbbl
test
aad
or
jg
repnz
xchg
mov
test
movsl
int3
data16
fsubs
sbb
xchg
mov
push
mov
int
mov
and
dec
mov
lds
push
cmpsb
sahf
and
jg
fildll
cltd
pop
clc
loopne
lods
sub
ret
loop
incl
in
das
inc
push
cmp
xchg
aam
fiaddl
cwtl
cs
jg
jg
insl
push
mov
mov
push
xchg
ljmp
sbb
fsubr
adc
pop
and
out
mov
jg
pop
add
fnstsw
xchg
mov
lcall
sub
out
cmc
xchg
cwtl
fbld
in
sbb
iret
lcall
in
pop
scas
sahf
mov
movsl
stc
out
cmc
daa
dec
inc
sbb
aam
pop
shlb
movsb
fisttpll
jmp
repz
aaa
xchg
sbb
stc
add
ror
mov
out
lcall
xor
and
jecxz
je
aam
pusha
or
jge
mov
sub
aas
jg
and
push
or
cs
sbb
ljmp
lods
mov
jno
cmp
imul
jmp
add
out
adc
std
lcall
mov
mov
cmpsb
aas
ljmp
jl
fwait
push
pop
cmp
or
lock
xchg
es
xchg
xor
lahf
lret
test
push
mov
mov
lcall
test
xchg
int
lret
add
fs
push
jg
rcrl
mov
out
fsubp
iret
ljmp
xchg
clc
mov
fsubrp
out
call
add
xor
mov
mov
cmp
dec
int3
std
testb
neg
ljmpw
jle
sbb
adc
xchg
xchg
jmp
daa
int3
sub
push
clc
in
lock
jmp
inc
push
insl
stc
jae
jmp
test
dec
mov
and
or
sbb
push
add
jg
aas
in
aam
clc
out
sbb
mov
out
arpl
clc
incl
ret
movsb
sahf
movsl
repz
mov
dec
mov
lods
or
cwtl
mov
mov
xchg
test
jo
push
or
int
rcll
jmp
rcl
xchg
or
sar
pushf
xor
ja
cmc
and
jp
and
sti
fcoms
fwait
pandn
stos
mov
sti
inc
bound
cmp
push
psubsw
push
into
cmc
lret
xchg
dec
sbb
sbb
mov
jno
stos
jmp
xor
pop
lcall
out
fucomp
dec
incl
pop
mov
out
subl
push
mov
xchg
sahf
into
lods
addr16
mov
cmpsl
ljmp
cld
decl
test
mov
xchg
xchg
movsl
push
int
mov
ret
cmpsb
jle
lcall
int
sbb
arpl
add
stos
icebp
inc
std
dec
out
stos
clc
adc
std
stc
jbe
sbb
cwtl
pop
lea
fdivr
aaa
stc
notl
cmpb
xchg
fwait
call
xchg
mov
push
in
xchg
mov
jbe
shrl
int
or
ljmp
lods
cmc
daa
xchg
out
out
clc
add
lds
cmpsl
push
in
mov
cld
aaa
cli
fsub
movsl
sahf
nop
decb
bound
cld
pop
jbe
ljmp
push
xchg
stc
data16
addr16
rcr
adc
outsl
jle
call
in
out
xor
shrl
repnz
xchg
mov
adc
mov
out
iret
push
push
in
into
mov
repnz
dec
sahf
push
in
mov
mul
ljmp
repz
mov
sub
jae
xchg
je
xchg
mov
arpl
loop
movsl
mov
ror
mov
cmpsb
lahf
repnz
repz
cli
mov
notl
lahf
test
push
mov
das
out
push
sbb
mov
lret
cli
shl
add
mov
jmp
test
lds
repz
out
iret
loope
int3
cli
fdivrs
mov
fbstp
sub
cld
fmuls
std
mov
xchg
push
ds
das
loop
jg
pushl
repnz
mov
xchg
mov
mov
xchg
std
mov
repz
mov
cmpsb
inc
test
nop
call
test
mov
xor
cmp
popf
xor
or
adc
mov
xchg
cld
mov
jecxz
mov
lock
adc
cmovns
xchg
rcr
icebp
test
into
dec
lcall
xchg
mov
roll
mov
js
add
rclb
test
add
scas
shrb
mov
shlb
cld
fldt
stos
lret
and
pushl
mov
xor
test
testl
mov
lcall
loope
jmp
gs
or
je
faddl
sarb
adc
outsb
cmpsb
jg
dec
cmp
sti
xchg
jg
in
mov
testl
out
and
ficoml
scas
xor
xchg
mov
cs
fwait
lcall
jmp
mov
mov
mov
loope
add
or
adc
xlat
cmpsl
pop
xor
cld
jmp
xchg
mov
shr
mov
into
sbb
xor
push
testb
mov
bound
cmpsb
fbld
sub
cltd
hlt
in
lcall
int
xor
pop
add
mov
loope
repnz
ljmp
cmpsl
sarb
mov
addb
hlt
mov
aas
fistpl
popf
mov
call
fwait
sbb
and
pop
insl
sbb
in
mov
hlt
cmpb
ja
icebp
jg
mov
pop
xor
icebp
mov
test
js
pop
test
lea
in
test
jg
lock
adc
lea
jbe
roll
pop
sub
cmp
in
or
ror
push
negl
lock
pop
sbb
mov
fbstp
loop
xchg
cmp
pop
decl
ret
mov
xchg
mov
shl
xchg
daa
mov
stos
xchg
sub
in
add
push
lock
insl
sbb
lcall
mov
add
icebp
movsl
lods
hlt
mov
rolb
mov
sar
mov
fsubrl
rcrl
sti
shrb
inc
fcmovu
xchg
mov
mov
daa
mov
daa
mov
mov
aad
or
xor
cmc
mov
add
lcall
lock
push
xchg
into
cwtl
xchg
lock
mov
test
sub
mov
and
mov
mov
pop
xchg
orl
rcrb
call
sahf
into
mov
addl
out
jg
jns
push
outsl
jbe
into
mov
xchg
push
std
push
movsl
lret
test
cmp
scas
pushf
jg
mov
jp
add
cmp
es
ja
std
xchg
cli
scas
xor
movsl
leave
sar
lods
jecxz
and
clc
fstps
pop
rorb
lret
mov
pop
mov
pop
dec
std
xchg
mov
fidivs
jbe
mov
mov
rcll
add
xchg
fincstp
imul
es
mov
data16
test
fistpll
inc
ret
cmp
sbb
ss
imul
jmp
loopne
jmp
imul
inc
stc
push
stc
out
push
lock
rol
inc
adc
lcall
push
mov
mov
iret
cmc
out
cmc
loop
pop
aad
cli
pop
mov
jbe
inc
in
pop
int
push
xchg
mov
stc
movsl
cli
mov
jecxz
out
repnz
imulb
das
lcall
aam
push
in
out
mov
ret
cmp
call
mov
loope
xchg
mov
ljmp
jg
mov
popf
mov
in
fdivr
pop
and
dec
test
sbb
and
mov
out
mov
fsts
jmp
jle
scas
lcall
incl
or
aas
sub
div
imul
jmp
loop
fisttpl
fwait
nop
in
xchg
inc
cld
jmp
iret
cmpb
inc
repnz
shrl
mov
daa
test
pop
mov
in
pop
movsb
xlat
loope
nop
loope
cli
lcall
cli
inc
add
into
dec
andl
mov
das
cli
lcall
rolb
dec
mov
shrl
cwtl
mov
mov
out
mov
pop
xchg
cmc
mov
loopne
loopne
negb
mov
repnz
dec
sub
push
jp
rolb
sbb
push
sarl
fimull
imul
mov
sub
lret
int
mov
jns
aad
or
ljmp
nop
xchg
enter
loope
fwait
sahf
movsl
ja
jg
cmc
sarl
xchg
lret
scas
sbb
mov
sub
in
jmp
mov
out
mov
and
std
jmp
aaa
in
scas
and
mov
jbe
scas
jecxz
mov
int3
xlat
cmpsb
adc
lds
ds
cli
push
in
cwtl
sub
push
and
sbb
decl
add
lret
cmpsl
out
xchg
lock
aad
mov
mov
test
xlat
ficoms
clc
aas
dec
cs
aas
arpl
fwait
add
xchg
fwait
cmc
jmp
scas
test
nop
fadd
and
sub
push
sub
sub
sbb
xchg
cld
lock
jg
mov
xor
jb
or
daa
loope
fists
clc
or
mov
movsl
hlt
xchg
cmc
sbb
or
jg
xor
jne
fimull
push
cmp
fstpl
ljmp
cmc
push
int3
rorb
mov
ret
xor
mov
movsb
xorb
adc
mov
or
out
fimull
std
ret
mov
shr
mov
out
gs
jle
or
or
cmpsl
mov
repnz
mov
cmpsb
ret
test
ljmp
pushl
pop
push
into
adc
cs
cmp
adc
stc
pop
or
not
lcall
mov
xchg
clc
push
bound
icebp
aam
mov
mov
mov
sti
push
cmpsl
pushf
daa
rcll
incl
or
fstl
lcall
mov
in
hlt
sub
incb
fwait
mov
in
cltd
sbb
lds
xchg
rol
js
out
sarl
popf
mov
xchg
lahf
mov
inc
scas
loope
mov
adcl
std
out
xchg
rcl
pushf
xchg
mov
jno
incl
fdiv
sub
and
movsl
sub
mov
xchg
xchg
push
in
nop
mov
ficompl
fists
mov
ds
adc
lret
add
mov
add
dec
jbe
lret
std
pop
nop
mov
mov
xchg
test
sub
ret
cmp
out
mov
sub
jle
stc
cwtl
add
test
popf
or
ret
leave
aam
mov
scas
mov
mov
in
xlat
pop
loop
std
incl
mov
out
mov
mull
das
dec
inc
decl
jle
cs
mov
call
repnz
xchg
mov
jne
std
movsl
add
rorb
out
call
xchg
xchg
in
mov
test
stos
iret
aaa
daa
fnstcw
push
popf
movb
add
lahf
into
call
and
shl
ret
repnz
repz
leave
xchg
rcl
pop
inc
ljmp
lock
iret
in
add
sbb
in
stc
out
cli
out
adc
fbld
div
cld
out
fucomip
fcmovu
fcomps
out
aad
sub
cmp
adc
add
push
into
sbb
cmp
cmp
std
aas
sti
cmp
cmp
push
or
insb
fidivl
pop
int3
push
in
std
dec
icebp
pop
in
into
pop
mov
ljmp
pop
in
repz
and
pop
out
or
or
movsl
dec
cmc
iret
enter
sti
notb
mov
and
sahf
cmpsb
mov
xchg
mov
test
stos
xchg
loop
or
push
test
mov
clc
sarl
lret
std
fcmovnbe
int3
adc
dec
or
or
sbb
jo
sbb
and
xchg
add
int3
out
sbb
adc
cs
imulb
in
or
or
cli
sub
and
sub
out
rcr
out
pop
mov
mov
icebp
in
sarl
fisubl
fistpll
gs
cmp
adc
mov
pushl
mov
cmpsb
mov
mov
dec
pop
mov
mov
pop
imul
mov
lods
or
xlat
lcall
ret
movsl
sbb
add
and
add
lea
mov
push
lcall
or
xor
and
negl
clc
int
ror
xlat
jmp
loope
ret
xor
icebp
sar
fnsetpm(287
neg
in
fcmovnb
int3
pop
lret
incl
sub
or
sbb
pop
in
lret
in
sbb
or
aas
push
sub
pop
adc
call
or
mov
lods
nop
mov
lcall
mov
test
sbbb
cmpsl
mov
cltd
cwtl
xchg
lea
fwait
mov
xchg
mov
and
sub
xor
aas
mov
add
ljmp
stos
cmp
adc
sub
push
test
bound
add
sbb
or
inc
cmp
sub
mov
int3
dec
jg
shrb
dec
lock
xor
les
nop
mov
sti
mov
int3
push
mov
pushl
mov
xor
mov
lahf
ficoms
mov
fistpl
out
mov
xor
sub
incl
xchg
js
mov
xchg
into
in
cmp
or
aam
xchg
incb
repz
jno
rcr
xchg
lock
ffreep
mov
mov
in
jp
jmp
or
mov
lret
fwait
jg
lock
mull
cmpsl
cmp
jmp
and
pusha
mov
movsl
mov
fidivrl
loopne
icebp
data16
xor
mov
dec
clc
sbb
or
ss
push
loopne
out
mov
test
lock
movsl
mov
scas
call
or
lods
mov
xchg
mov
xchg
xchg
sarb
daa
scas
cmp
lcall
mov
in
outsl
lds
mov
pushf
pushf
rcl
cmp
xor
lock
pop
add
dec
fstl
test
xchg
xlat
cltd
rcr
push
repz
jg
or
pop
scas
fcmovb
lret
decl
sbb
ret
hlt
mov
xchg
cltd
lods
cmp
cld
int
xchg
test
les
icebp
mov
mov
das
xchg
fwait
sbb
mov
xlat
daa
mov
mov
stos
out
push
mov
jb
fcmovne
lcall
pop
hlt
idivl
cmpsb
ds
aas
adcl
xchg
ja
out
mov
ss
xchg
stc
scas
xlat
xchg
mov
xchg
mov
mov
mov
stos
xchg
cmpsb
clc
nop
rclb
xor
sbb
mov
mov
jmp
xchg
cmp
dec
cld
dec
adc
lcall
out
mov
decb
std
inc
stos
test
jbe
fcmove
pop
test
leave
jecxz
je
call
and
out
scas
pushf
xchg
adc
mov
popl
xchg
ljmp
cltd
repz
mov
ljmp
rcrb
mov
mov
test
mov
mov
femms
mov
cwtl
popa
loopne
popf
cmc
lcall
mov
iret
mov
fldt
add
test
ljmp
mov
jle
fistl
cmp
out
and
ficoml
fidivrl
movsl
cmpsl
push
scas
jp
pop
jecxz
shll
stos
xor
and
out
popa
dec
jne
inc
test
int
out
dec
jns
rcrb
mov
jecxz
jmp
xchg
stc
dec
lret
cld
cmc
dec
lods
aad
cmp
mov
mov
int
jae
lret
xchg
call
aaa
fistps
lods
repz
and
test
jg
xchg
and
int
add
mov
movsb
lods
ds
pop
sub
mov
in
in
aaa
cli
add
pushf
cmp
popa
sub
ret
js,pt
jbe
leave
mov
xchg
dec
clc
in
mov
mov
outsl
cmp
pop
stos
lret
lcall
or
ficoml
cmp
sarl
pop
push
cmp
stc
divl
lret
mov
and
cmp
jecxz
fstl
pusha
xchg
mov
leave
loopne
mov
push
cmp
or
imul
xor
loope
popf
cltd
jmp
test
cld
in
mov
dec
outsb
jnp
sahf
push
mov
jmp
push
mov
jmp
jge
shl
and
mov
std
ret
mov
es
test
mov
xor
xchg
mull
jge
fildll
js
lret
shrl
pop
cs
lret
movsl
stc
das
jge
pop
lcall
cmp
aas
in
and
mov
outsl
sbb
push
push
sbb
loop
iret
fdiv
cli
cli
push
cmpb
xchg
into
sbb
aaa
xadd
pop
mov
dec
outsb
movsl
fcomi
divl
add
int3
icebp
shll
xchg
lods
sub
addb
div
jmp
mov
push
push
enter
lock
mov
sbb
sbbl
mov
clc
dec
out
dec
mov
enter
pop
aas
and
pop
mov
inc
lods
repnz
and
lcall
xchg
mov
mov
fsubl
lret
out
lock
mov
neg
mov
xchg
mov
add
stc
int3
pop
push
in
jns
out
jl
pop
int3
xor
lcall
add
rcrl
popf
and
lret
call
mov
mov
xchg
mov
inc
cs
mov
dec
cmpsb
sahf
fdiv
mov
sbb
int3
dec
pop
sub
sbb
adc
movsb
cmc
pop
and
leave
cs
test
imull
push
sbb
aas
stos
inc
fdivl
shr
imul
jg
aaa
bound
xlat
add
fistps
add
fxch
les
adc
ror
sbb
repz
sub
incb
repnz
loope
out
subb
or
aaa
decl
xchg
sub
fidivl
sbb
dec
sub
movl
movsb
adc
repz
ds
test
pop
cmp
and
in
loopne
or
in
jl
and
jbe
xor
int
sub
cmp
rcr
jle
or
dec
out
sub
in
or
cld
out
repz
incb
fistpl
icebp
push
loop
mov
sbb
adc
leave
pop
pop
arpl
fscale
jns
inc
cmp
int
rorl
arpl
test
xchg
je
repz
dec
xor
xor
cld
cli
or
fwait
inc
in
das
push
sub
es
fcmovnb
inc
or
xchg
ja
shrw
pop
outsl
xchg
xor
jo
fldcw
dec
shlb
gs
pop
inc
jno
int
mov
pop
cmp
dec
aas
pop
dec
rcrb
idivl
and
sub
inc
add
add
sub
fs
cld
insb
ss
int
ficoml
fxch
jmp
dec
data16
mov
dec
cli
push
fadd
into
sbb
insb
ss
jmp
rclb
fwait
dec
mov
ljmp
lret
ds
insb
mull
in
adc
ss
int
adc
push
sub
and
dec
or
cmp
je
insb
ss
adc
adc
mov
mov
adc
cmp
in
fldcw
sti
pop
fisubrs
iret
fwait
int
jmp
cli
notl
cmp
cld
mov
rcrb
jmp
xor
mov
adc
ret
sub
or
fldcw
cli
xor
ja
add
testl
lcall
xchg
pop
out
or
or
incb
cmp
pop
imull
pop
lea
mov
out
fistpll
mov
call
in
lock
stc
add
int
leave
jg
jbe
sub
repz
scas
lock
enter
fucom
pop
mov
out
std
lahf
jmp
mov
cli
shr
mov
lods
jecxz
xchg
lds
aaa
ret
call
xor
adcb
sub
mov
adc
sbb
ljmp
adc
dec
aaa
or
mov
test
mov
fisubs
xchg
xchg
iret
fdivrl
out
cli
das
iret
stc
cmpsb
mov
mov
fwait
out
cmpsb
cmc
push
sahf
and
mov
cmp
cmpsl
fisttps
movsb
repnz
cli
lds
lahf
mov
xchg
push
xchg
xchg
jmp
pusha
rol
xchg
push
mov
cwtl
mov
lret
xchg
clc
push
rolb
pop
movsl
nop
cld
in
xchg
test
or
mov
roll
repz
cli
repz
mov
fwait
call
mov
enter
mov
repnz
fdivrl
or
xchg
xor
ret
sti
sbb
pushf
mov
jmp
jmp
fldcw
repnz
xor
into
cmc
mov
lods
scas
add
movsl
cmpsb
and
ljmp
dec
mov
lret
out
aam
cmc
aaa
or
cmpsb
mov
nop
pop
in
nop
inc
mov
out
pop
testb
into
mov
out
lds
fimuls
cli
andb
mov
lret
loop
cltd
lea
mov
xchg
mov
push
add
dec
adc
sbb
inc
xchg
xchg
mov
in
lcall
addb
out
lcall
jl
xchg
xchg
jae
cmpsb
or
fdivrs
mov
in
lcall
mov
mov
lods
ror
cmpsb
std
clc
ret
xchg
ret
jg
test
fcmovnbe
int
lahf
xchg
cmpsb
mov
movsl
fdivrp
mulb
pop
xchg
or
jecxz
dec
aam
mov
cmp
sti
fsubrs
cmp
scas
lock
pop
icebp
fcmovb
int3
mov
outsb
pop
dec
in
sti
xchg
cmp
in
cmpsb
jg
push
out
add
movsb
mov
xchg
cmpsb
aas
jmp
das
clc
call
lcall
loop
mov
jmp
xchg
call
addb
xchg
in
cmpsl
xlat
xchg
xchg
lahf
int
rcr
nop
mov
call
jg
lock
fisubs
jmp
lods
cltd
imul
out
cmp
icebp
lcall
push
jp
hlt
sub
aaa
xor
sub
mov
adc
loop
clc
mov
xlat
mov
ljmp
xchg
pushf
in
push
lret
mov
into
call
pushf
pop
iret
mov
clc
cmpsb
pushl
pop
jmp
xlat
jae
lcall
mov
adc
movl
mov
lods
pop
loopne
cli
ss
stc
lret
xchg
into
clc
pushf
mov
filds
gs
outsl
inc
loopne
xor
lock
in
jae
icebp
fcomi
xchg
jmp
popf
in
ljmp
in
fsts
vcvtpd2dqy
test
popf
mov
out
pushf
cmp
clc
inc
jg
inc
xchg
xchg
xor
lret
lret
addb
xor
jmp
call
push
or
sub
xchg
ja
add
jns
in
stc
xchg
test
cmc
cmp
daa
popa
lods
jle
repz
call
jle
mov
aaa
jecxz
fwait
out
xor
test
and
int
xor
mov
hlt
in
dec
xchg
cld
push
repnz
jecxz
mov
mov
xor
in
ret
lcall
or
jae
sub
adc
jb
jp
sarb
jo
in
xchg
lods
mov
or
in
pop
push
call
jg
int
fsubr
mov
aas
in
adc
je
xor
cmp
incl
leave
pop
and
xchg
cmc
sti
cltd
push
mov
leave
shll
divl
jnp
scas
pushl
aam
clc
mov
js
cli
cmpsb
xor
ret
test
out
and
movsb
lret
in
mov
mov
inc
sarb
nop
add
jl
int
lret
mov
push
mov
cwtl
es
in
cmp
fwait
or
out
lock
sbbl
mov
int
mov
cli
cmp
pushl
lret
jmp
ljmp
and
cld
dec
incl
jno
inc
mov
lods
mov
repz
dec
fwait
pop
add
push
decl
cmpsb
out
pop
xchg
push
sbb
mov
test
xor
pop
dec
call
push
negb
mov
shrb
js
xchg
xchg
and
in
sub
push
sub
push
xchg
lods
xchg
push
clc
rolb
mov
test
xchg
xor
rcr
jle
sar
mov
ret
test
mov
mov
movsl
clc
add
push
testb
mov
sub
cmpsb
mov
jecxz
mov
in
dec
sub
jecxz
idiv
out
cli
cmp
mov
and
movsb
or
mov
ret
sub
push
mov
cld
lcall
inc
mov
les
adc
cmp
aaa
bound
xchg
add
aam
dec
add
sbb
out
jecxz
xchg
repz
ss
ljmp
add
test
std
mov
in
stc
mov
xchg
jecxz
xchg
mov
int
loopne
mov
dec
cs
aaa
mov
lods
jmp
out
dec
sbb
jmp
stos
aas
clc
fistps
cwtl
ljmp
inc
xchg
mov
sub
pushl
fnsetpm(287
pop
into
test
mov
leave
subb
decl
xchg
std
mov
negl
add
out
clc
jg
lock
and
pop
pop
mov
lcall
fildl
shll
xor
test
push
push
mov
adc
jo
pop
in
mov
jg
icebp
xchg
sub
xchg
xor
std
mov
icebp
call
inc
push
enter
nop
pop
popf
pushl
in
fs
lret
das
dec
xor
mov
pop
jecxz
aaa
popf
mov
xchg
push
test
jmp
sub
dec
mov
pop
lods
ret
movsl
mov
cmp
dec
add
call
clc
call
cmc
mov
xor
aas
fmulp
mov
mov
in
pop
aad
int3
add
scas
adc
out
add
xchg
mov
adc
fidivrl
lods
cmp
xchg
xchg
cmc
incl
sti
in
lahf
stc
dec
mov
in
pushf
sub
mov
push
cld
pop
mulb
fnstcw
xchg
mov
sub
lods
cmpsb
aaa
std
fwait
push
xor
into
je
sbb
push
mov
mov
in
pop
mov
fcmove
or
adc
rorb
or
ret
nop
fmuls
pop
cli
mov
xchg
mov
cwtl
adc
adc
loop
jne
insb
int3
push
test
mov
outsl
ljmp
mov
cmpsl
adc
popf
jno
je
mov
cmpsl
cli
mov
xlat
pop
cmc
sbb
mov
vandnpd
ret
mov
cld
xchg
in
das
lret
cmp
lcall
pop
ror
in
testl
cltd
pop
std
stos
cmp
mov
pop
out
jg
decb
mov
lcall
sbb
push
xchg
rorl
lock
jmp
repnz
scas
add
insl
sbb
fcomi
push
mov
add
and
psrlw
xor
sar
xchg
pop
sbb
or
mov
jmp
test
dec
incl
mov
fstpt
xor
sub
int3
sub
cld
xchg
push
and
mov
in
out
incl
ret
repnz
leave
mov
xchg
int3
lret
mov
push
subb
fsubl
imul
push
arpl
xchg
fcoml
add
std
lods
mull
push
jge
pusha
pop
daa
pop
mov
sub
push
outsl
pop
std
pop
mov
sahf
sar
fldcw
push
lret
out
push
loope
loope
mov
pushf
lcall
das
les
ret
xchg
repnz
cmpsb
jg
subl
lock
push
xchg
mov
stos
decl
mov
xlat
lock
rorb
fmulp
pop
cmp
add
fwait
repz
mov
jbe
lahf
les
in
aam
and
mov
jbe
and
cmp
es
mov
add
xchg
jecxz
mov
mov
fistpl
sbb
mov
sti
inc
xchg
sbb
fcompl
or
or
aam
hlt
mov
mov
push
int
out
rcll
jle
stc
jnp
mov
or
mov
mov
xor
lahf
loope
repnz
pop
hlt
pushl
pop
mov
cmc
jl
xchg
mov
in
inc
loope
fiaddl
testl
decl
bound
orl
inc
mov
movsb
test
fwait
jbe
ffree
xor
incl
dec
push
out
notl
arpl
xor
push
or
push
cs
lcall
aaa
cwtl
insb
mov
notl
ret
sub
xor
mov
insb
jmp
or
in
mov
pop
xchg
cmpsb
adc
cmp
mov
into
out
pop
hlt
outsb
movsb
lcall
rolb
xchg
push
cli
ret
movsl
ss
push
out
lret
out
fsubs
rorb
mov
je
lcall
pop
roll
mov
aad
div
sub
mov
mov
in
adc
lahf
les
mul
xorb
cltd
xor
push
std
lcall
lret
out
aam
and
movsb
cmp
mov
out
into
mov
mov
cmp
xchg
push
or
push
ljmp
cwtl
test
fcomip
add
sbb
sub
aad
in
int3
cltd
aad
xchg
mov
mov
mov
decl
mov
xchg
lea
adc
mov
call
mov
mov
iret
xor
add
pushf
cltd
sub
lods
fstpl
push
fbld
lock
outsb
sbbl
lcall
mov
adc
lahf
test
jg
and
in
xor
jecxz
ljmp
xchg
cli
mov
or
int3
xor
rcrl
pop
mov
cmc
hlt
in
cmp
mov
xor
lcall
das
inc
stc
mov
xor
fbstp
into
cmpsl
dec
repnz
jae
jne
xor
into
lcall
das
dec
aaa
std
mov
lods
or
xor
mov
mov
data16
cltd
nop
cli
cmp
call
fstp
clc
out
lret
mov
stos
mov
adc
lahf
stc
out
ljmp
cwtl
loopne
mov
fisubl
mov
xlat
aad
shll
std
pop
cmp
xchg
rcr
jno
movsl
pop
shl
aaa
loop
outsb
mov
fcmovnb
mov
std
mov
clc
lcall
cmp
mov
push
out
repnz
mov
mov
repnz
incl
sub
imul
jno
sarl
dec
adc
jmp
out
scas
clc
iret
loopne
es
mov
sbb
mov
fwait
mov
mov
das
nop
add
ss
mov
sahf
pop
decl
sub
sub
sahf
repnz
into
enter
add
decl
lcall
aad
daa
hlt
stc
ss
imul
adc
lret
adc
shr
insl
mov
and
cltd
push
movsl
jno
or
shr
mov
lret
in
mov
out
cli
pop
cld
lcall
jnp
mov
out
jo
xchg
out
pop
rorb
outsl
inc
fdivr
cmpsb
or
out
enter
add
push
hlt
movsl
lahf
sub
ror
incl
hlt
int3
testl
out
sbb
xchg
push
aam
jl
test
icebp
xor
mov
rcr
cwtl
cmp
arpl
clc
stos
orl
jg
mov
xchg
sub
add
mov
into
mov
xchg
mov
pushf
mov
xor
xchg
cld
push
push
imul
scas
hlt
scas
ficoml
sub
call
fwait
pop
clc
mov
cmpsb
fisubrs
cmp
stc
iret
xchg
cs
cmp
mov
pop
cli
inc
cmpsl
into
xchg
dec
fcom
js
pop
and
mov
lods
movsl
loopne
inc
call
nop
sub
adc
cmp
shl
cwtl
mov
int3
test
lahf
jmp
cmpsb
sbb
movsl
out
mov
jmp
jecxz
int3
test
pop
jo
test
mov
and
sub
mov
std
jp
clc
test
std
mov
lock
aaa
jge
lods
out
in
xchg
lahf
or
sbb
movsb
add
std
into
and
mov
xorb
push
std
cmpsb
out
and
xchg
cmp
sti
mov
out
mov
and
ss
cmpsb
or
lret
mull
xchg
nop
jno
cwtl
into
or
jg
pushl
add
sub
shl
lret
clc
mov
rcll
dec
cmpsb
int3
mov
shl
test
loope
pop
mov
call
lock
sub
mov
push
mov
adc
jno
movsl
sbb
add
shrb
xchg
loope
incl
mov
xchg
in
outsl
in
add
fistpll
negb
xchg
mov
sbb
mov
lret
loopne
dec
fwait
lcall
jmp
fwait
sarl
adc
pop
call
aaa
icebp
rcrl
aam
cmc
and
scas
mov
mov
out
cmp
loop
icebp
jg
cmp
mov
inc
fwait
push
fildl
add
jmp
mov
shll
fwait
repz
mov
inc
mov
sub
xor
cmp
into
aam
in
in
scas
incb
inc
sti
xchg
into
out
idivb
in
icebp
ret
jle
icebp
movsb
cmc
sbb
push
cmpsb
mov
sarl
mov
arpl
adc
xchg
sub
cld
mov
cltd
rolb
ret
lcall
fdivrs
mov
icebp
xchg
outsl
xchg
mov
xchg
cli
lcall
out
adc
clc
loopne
in
fisubl
repz
or
shll
scas
sar
adc
int3
in
xchg
xchg
adc
loopne
loop
mov
sbb
push
mov
icebp
movsb
cwtl
sbbb
and
clc
std
gs
icebp
pop
fwait
stc
jg
aas
sub
mov
lea
in
mov
icebp
xchg
xchg
cmpsl
xchg
into
jmp
fiaddl
cmp
into
test
sub
jmp
pop
jno
mov
popf
xor
clc
fldt
xchg
test
in
stos
xor
mov
test
jg
pop
xchg
cmp
mov
stc
inc
roll
cltd
mov
xchg
adc
icebp
fcoml
xchg
cmp
or
stos
xchg
push
int
or
nop
sub
incl
lock
xchg
movsl
lret
add
xor
scas
and
fstp
jg
ljmp
in
cmp
cli
mov
fisubl
xchg
lret
loop
mulb
out
cmc
out
fnstcw
fwait
daa
cmpsl
lock
cld
push
movb
sbb
inc
out
lock
mov
int3
sarb
jg
addr16
lahf
mov
mov
in
in
lea
scas
shr
shl
ljmp
mov
fsubrl
cmp
mull
add
movsl
iret
icebp
sbbb
mov
lods
hlt
lret
push
cld
incl
xchg
xchg
mov
mov
xchg
or
fbld
in
and
mov
dec
and
into
neg
xor
fldenv
sub
mov
or
jg
outsb
mov
fldl2e
mov
das
cmpl
ficompl
xor
in
mov
pushf
cli
and
movsb
lods
adc
xchg
les
jbe
leave
and
ret
stos
mov
lock
lret
stos
sub
sarb
nop
shrd
mov
fucomp
sub
imull
push
in
das
in
jo
xchg
fldl
fisttpll
xor
fwait
mov
testb
jg
xor
xchg
inc
pmulhuw
fidivrs
testb
add
stos
jnp
ret
js
sbb
out
push
jecxz
xchg
pop
shrb
loop
leave
test
sub
or
das
lret
aam
bound
stos
mov
repnz
out
lcall
xorb
sti
xor
jo
test
lds
push
fcmove
push
xchg
mov
mov
pop
xor
cmpsb
jmp
or
notb
push
push
dec
stos
and
cmp
stc
jmp
xchg
ja
sbb
aam
sar
mov
ljmp
and
lds
mov
jle
lds
mov
pop
lods
fistpl
inc
clc
call
ffree
leave
fildll
lods
popf
pop
cmpsb
pop
into
lods
ror
adc
xchg
rol
xchg
or
sbb
add
jp
notb
cmpsl
daa
cmp
cld
mov
jl
mov
icebp
xchg
mov
adc
pop
cmpsb
ljmp
lcall
add
pushf
movsb
xchg
in
std
call
mov
xchg
icebp
mov
mov
inc
in
out
lods
lahf
sub
iret
or
xor
data16
push
xor
enter
jmp
repnz
adc
cwtl
xchg
mov
rolb
xchg
lea
mov
je
dec
incl
idivb
mov
xor
cmc
lret
cmpsb
lea
cs
add
into
out
mov
out
lcall
movl
xlat
pop
enter
test
cli
mov
mov
xchg
pushl
adc
cmp
mov
clc
lret
xchg
call
adc
cmp
xchg
rcr
mov
negl
mov
jno
mov
call
loopne
popf
add
xchg
xchg
loope
adc
push
cmc
cmp
xchg
mov
mov
cmp
enter
sbb
mov
repnz
aaa
test
cwtl
add
mov
test
test
or
in
inc
jl
or
scas
lods
adc
jg
enter
fdivrs
cmp
push
in
fisttps
add
call
sub
xchg
movsl
push
scas
push
movsl
mov
imul
mov
pop
outsl
aas
inc
rcrb
scas
mov
mov
enter
jmp
sub
mov
sbb
add
sub
push
enter
xlat
xchg
and
adc
ret
in
test
and
lahf
lret
pop
or
outsl
sbb
or
outsl
je
shl
xor
out
cmp
div
fucomp
dec
shll
loope
mov
adc
or
mov
push
inc
test
mov
rorb
sbb
call
in
mov
xchg
jecxz
ljmp
nop
out
movsb
test
rcr
js
popa
dec
cmp
or
push
sbb
nop
aam
hlt
mov
xchg
test
lock
ljmp
mov
mov
xchg
mov
mov
mov
fbstp
test
or
out
into
popf
out
mov
lcall
and
pop
or
fnstcw
push
movups
pop
rolb
test
sub
sub
cli
mov
arpl
sub
mov
outsl
mov
lret
insb
sub
popa
push
sbb
sub
ljmp
sub
cmpsl
pop
xchg
aaa
jp
xchg
int3
cmp
test
and
pop
repnz
push
mov
xchg
notl
call
in
lret
in
fists
cli
sti
pop
test
ljmp
jae
ficoml
fisubs
push
mov
push
sbb
insb
inc
mov
sub
stc
sub
xchg
pop
les
jb
mov
je
popf
xor
sbb
cld
inc
repz
popf
js
jle
mov
pop
pop
lods
mov
iret
aas
ret
jae
negb
aaa
fs
cmpb
mov
aas
jmp
mov
xchg
push
imul
aas
cld
outsb
sub
std
pop
arpl
clc
mov
cmp
cld
repz
lods
repz
clc
test
mov
cld
repz
iret
mull
in
in
test
in
mov
pushf
insb
dec
ss
repnz
sbb
cmp
js
and
jno
iret
mov
imul
int
pushf
insb
dec
ss
std
dec
push
fsubrs
pop
pop
stc
dec
arpl
dec
push
inc
mov
push
popa
iret
lock
sahf
stos
adc
and
dec
mov
hlt
xor
lret
iret
jae
and
and
and
shll
repz
sub
dec
sahf
out
pop
loope
mov
in
ja
sahf
jl
or
test
mov
or
push
not
adc
loopne
jns
cmp
outsl
mov
inc
shl
sarl
inc
xchg
adcb
test
mov
jbe
pushf
jmp
cmpsl
ret
test
loopne
movsb
lods
or
roll
jge
cmp
mov
jno
sahf
movsb
call
lret
arpl
loop
sub
sub
popf
sbb
popa
dec
jmp
mov
popf
out
iret
mov
aaa
sbb
jns
sahf
out
cs
push
out
shl
iret
inc
rcll
cmp
insl
sti
adc
adc
sarl
out
leave
and
sbb
iret
vucomisd
sbb
xchg
lahf
sahf
sbb
push
leave
mov
jns
clc
adc
iret
out
sub
in
gs
cmp
out
icebp
xchg
or
add
sahf
addr16
sarb
out
jns
int
loop
imul
cmp
mov
or
sub
cmp
xchg
add
repnz
jae
cmp
jns
cs
pop
cs
pop
xchg
stc
cmp
rep
aas
inc
aaa
or
pslld
imul
comiss
cmc
ja
in
pusha
lret
inc
ja
in
in
dec
leave
daa
mov
fisubs
dec
push
sbb
jmp
dec
cmc
sbb
call
sbb
mov
jbe
clc
aas
xchg
out
mov
dec
in
jns
mov
int3
jbe
loope
xlat
jbe
xchg
and
incl
mov
jnp
test
inc
lods
or
cli
or
pushl
adc
aas
mov
loopne
push
fbld
call
cwtl
dec
mov
test
mov
push
popf
push
inc
lods
jmp
shlb
iret
mov
mov
out
pop
cld
jmp
pop
mov
jo
cwtl
xchg
nop
sarb
adc
push
sub
cmp
call
pop
roll
mov
lahf
sbb
sbbb
jmp
es
jnp
ds
sarl
sub
lcall
push
shl
dec
icebp
cmp
outsl
mov
mov
loopne
mov
pop
int3
mov
mov
xchg
ss
mov
dec
aam
push
cmp
and
mov
icebp
and
pop
push
sub
cmpsl
sarb
cmpsl
inc
push
jl
je
jmp
pushf
and
dec
sbb
jmp
stos
xchg
inc
sub
jl
push
or
scas
xor
outsb
and
cltd
xor
movsb
fs
incl
cwtl
add
mov
xchg
push
lret
fisubl
fimull
sbb
adc
out
mov
dec
leave
sahf
dec
leave
insb
repnz
aad
add
pop
jl
in
push
mov
push
mov
ljmp
inc
push
and
dec
iret
gs
out
dec
mov
xchg
and
sbb
cmp
mov
daa
sub
xlat
ss
pop
addr16
jmp
pop
loop
iret
mov
cltd
out
es
fistpl
or
jmp
out
fidivs
pushl
imul
push
data16
popa
stos
out
in
xor
stos
mov
ret
clc
jg
daa
leave
inc
jp
test
test
mov
into
mov
cld
pop
out
sub
and
dec
dec
cmp
push
jbe
jne
loope
cmp
test
in
mov
xor
bound
or
pushl
movsb
sbb
mov
fnsave
hlt
scas
xor
dec
pop
stos
sub
sub
add
decl
movsl
ljmp
inc
mov
mov
sarb
jmp
decl
outsb
addb
iret
adc
pushl
sub
mov
pop
mov
test
push
or
daa
push
jae
ret
flds
movsb
pushl
dec
ret
xor
repnz
pop
mov
imul
inc
in
lret
mov
pop
mov
loope
outsl
clc
sub
shlb
call
dec
mov
int3
push
jo
shll
jl
in
scas
nop
xchg
stos
popf
out
jmp
inc
dec
push
xchg
pushf
in
int
pop
sub
loop
imul
jecxz
xchg
lcall
lcall
in
inc
push
iret
jge
jp
inc
sahf
mov
push
data16
repz
push
ret
dec
lret
addr16
dec
pop
lock
push
cmp
xchg
pop
mov
cltd
mov
xchg
push
cli
inc
jp
int3
test
pushl
loope
dec
xor
push
ret
jo
scas
mov
cmpl
add
popa
imul
incl
adc
sbb
jge
xor
cs
pop
push
sbb
sbb
sub
ss
es
cmp
mov
cmp
cmp
pop
ds
sbb
das
push
sub
sub
sub
add
jg
call
sub
add
push
es
add
add
sub
push
xor
fwait
decl
aaa
cmp
add
sbb
pop
and
add
or
filds
aaa
sub
das
das
and
xor
or
daa
aas
vmovddup
jl
sbb
sti
and
sub
add
dec
dec
or
sub
and
and
data16
cmp
adc
cmp
sbb
xor
fisubs
cmp
add
lock
pop
imul
jp
push
adc
or
pop
adc
xor
and
sub
clc
or
adc
or
pop
add
aaa
push
push
insl
adc
xor
jo
outsl
repnz
adc
lret
adc
or
pop
lock
bound
jno
push
push
pop
push
int3
ja
and
mov
in
mov
std
adcl
push
out
add
mov
sbb
scas
inc
daa
inc
mov
arpl
pushl
push
jns
popf
ljmp
ret
xchg
mov
cmp
inc
mov
cmc
into
fs
mov
cmpsb
iret
in
or
movsl
fisttps
fwait
inc
and
pusha
sahf
incl
cmp
cmp
push
xchg
popa
or
cmpsb
push
mov
lcall
xor
call
mov
push
or
dec
ljmp
jne
orl
inc
cwtl
lcall
inc
movsb
mov
sub
je
data16
filds
add
mov
mov
mov
and
pushl
pushf
pop
sbb
xor
push
inc
fsub
pop
lods
jno
insb
mov
push
push
cli
adc
dec
popf
incl
lea
mov
repz
js
push
ds
add
dec
repz
sub
in
incl
cmc
sarl
in
dec
mov
cmp
inc
popf
call
int3
and
or
jbe
fs
fcompl
dec
push
fistpl
aad
dec
popa
pop
call
push
push
stc
stc
push
jbe
adc
xchg
pop
outsl
xor
arpl
rcl
ljmp
data16
adc
insl
push
test
fcoml
jnp
push
and
out
jbe
hlt
jb
and
jb
ljmp
outsl
repz
adc
inc
repz
push
fcmovnu
pop
xor
inc
ja
mov
aaa
dec
inc
fsubs
stos
mov
test
das
xor
jae
add
daa
enter
pop
and
ljmp
data16
movl
push
std
mov
push
or
repnz
insl
jb
and
push
ljmp
call
add
nopl
pop
xchg
and
pop
enter
aas
and
mov
inc
or
inc
mov
popa
push
pop
cld
incl
mov
in
mov
aas
pop
and
fdivrl
add
fcomip
ja
push
sub
sar
arpl
or
jg
push
data16
loopne
push
dec
push
or
das
rcll
rol
jbe
push
incl
adc
sbb
aas
call
pop
pop
sbb
add
cmp
jb
fistpll
jae
sbb
loop
push
adc
ljmp
push
dec
sbb
push
cmp
jb
aam
jl
ret
inc
mov
mov
mov
push
sub
jns
inc
decl
push
and
je
in
jcxz
or
xor
add
or
or
scas
pushl
arpl
mov
sub
jno
arpl
push
imul
ljmp
mov
adc
mov
jne
dec
sbb
xlat
jae
sbb
sbb
push
add
fildll
jmp
cmp
insl
xor
and
or
jo
incl
loope
popa
shlb
dec
jecxz
jecxz
clc
jmp
clc
into
mov
add
ljmp
fldl
ljmp
aad
ja
loop
ror
not
scas
fsts
call
mov
loop
cmp
dec
pop
clc
bound
fs
out
inc
fxtract
pop
jmp
ja
inc
inc
rcrl
decl
lea
sti
push
in
lret
rcrl
neg
imul
push
out
jno
call
push
sbb
xor
call
push
jle
enter
popa
js
xorl
pop
sar
push
lds
mov
jmp
jnp
xchg
xor
push
sarl
jg
lds
iret
adc
repz
or
out
iret
lock
vphaddudq
call
and
sbb
hlt
sub
ljmp
lret
repz
repz
jno
push
outsb
stos
lock
adc
pushl
push
fimuls
dec
call
or
into
add
sbb
arpl
pop
popa
cmp
push
incl
pop
bound
pop
mov
xchg
pop
lahf
ss
inc
cli
mov
jmp
jg
mov
int3
mov
shl
sbb
pop
pop
sub
pop
or
push
in
call
lret
push
call
push
rolb
aad
jmp
adc
call
insl
outsl
fadd
or
mov
clc
adc
aas
fadds
loop
cld
xchg
icebp
or
mov
or
aaa
aam
xor
shr
and
das
fisttpl
ds
fiaddl
jo
pop
loopne
insl
decl
adc
bound
jecxz
cmp
mov
sahf
jno
add
and
lods
push
bound
jg
cmovp
dec
mov
mov
bound
aaa
subb
cld
adc
push
mov
jl
mov
mov
fwait
xor
cltd
mov
lcall
and
xchg
or
fcomps
inc
cmp
mov
call
ljmp
adc
pushf
incl
jno
cmp
and
incl
pop
js
add
push
outsl
pop
add
mov
data16
sbb
inc
jae
or
cs
sub
decl
addr16
insl
das
adc
outsb
push
push
ret
inc
add
xchg
out
movsl
add
ss
mov
jb
leave
jb
dec
adc
cmp
aad
inc
in
cmpsb
lcall
lds
inc
push
mov
adc
aaa
pop
inc
push
sbb
jl
cmc
push
je
stos
lcall
adc
icebp
adc
popa
or
push
push
insl
jnp
out
inc
mov
dec
shlb
pop
lret
daa
jo
jo
call
jmp
jmp
sub
mov
jno
iret
stc
mov
imul
ret
sbb
push
in
out
sub
push
inc
xchg
and
jno
mov
cs
std
incl
fistps
fisttpll
jnp
jnp
lods
fidivs
jbe
sbb
pop
and
std
sbb
and
test
pop
push
shlb
jo
jno
push
xchg
cltd
arpl
aam
adc
mov
dec
ficoml
inc
das
rolb
lret
test
push
pop
pop
lods
dec
pop
jns
xor
cld
push
test
lock
add
cmpb
adc
pop
cld
pop
xor
arpl
bound
stos
je
pusha
dec
aas
push
inc
xchg
in
pop
bound
ja
cs
push
mov
sbb
mov
dec
cmpps
in
in
in
and
pop
loopne
inc
dec
mov
adc
sub
bound
jbe
clc
xor
mov
ljmp
inc
add
dec
pop
inc
fistl
incl
push
int3
mov
int
pop
fisubrl
aaa
jne
arpl
jl
repz
incl
int
inc
sub
lret
jns
push
popa
or
push
mov
inc
mov
jg
xor
ret
mov
mov
pop
sub
js
push
aam
push
rcr
loope
inc
xor
or
ja
add
jg
pushl
lock
das
cmc
loopne
mov
cmpsl
adcb
pop
clc
jnp,pt
lock
sbb
jmp
ljmp
insb
aad
adc
inc
jp
inc
cmc
outsb
jle
push
leave
xor
pop
lret
dec
or
rcl
push
aam
xor
out
adc
std
js
adc
adc
cmp
jg
scas
cli
xchg
pusha
or
out
add
sbb
outsb
enter
cli
jg
push
rolb
or
jg
negl
inc
call
das
xor
movsl
fwait
push
fdivs
rcrb
push
inc
dec
mov
push
jp
xor
inc
xlat
out
das
xchg
call
bound
xchg
mov
out
add
add
cmp
test
ljmp
mov
add
jnp
lgs
and
dec
jmp
jb
cmpsw
ljmp
lret
push
xchg
scas
outsl
nop
das
push
and
jns
cltd
push
jle
xor
cmp
rclb
clc
mov
ljmp
pop
jl
in
mov
icebp
ljmp
cmp
xor
inc
bound
clc
stos
pop
imul
js
cmp
dec
push
xor
imul
lahf
jg
or
mov
imul
jmp
push
inc
leave
mov
pop
in
xchg
jge
mov
sub
mov
or
in
aas
jle
ja
ljmp
fs
cli
add
inc
movsb
sub
cmp
imull
ljmp
decl
xchg
sbb
xchg
push
or
data16
or
fmuls
push
mov
xor
loop
mov
pop
and
mov
outsb
xor
test
jmp
lcall
arpl
das
xchg
lods
push
adc
cmp
ljmp
frstor
pusha
pop
xor
xchg
push
jl
mov
jg
dec
std
andl
outsb
dec
dec
push
and
cmp
push
hlt
idiv
loope
into
leave
in
loop
stc
das
scas
add
int
or
mov
aad
sbb
mov
jl
es
jmp
xchg
adc
sbb
repnz
out
inc
adc
orb
sbbb
clc
adc
dec
jg
imulb
insb
lret
cmc
pusha
test
jmp
cmp
mov
pop
and
mov
dec
mov
xchg
dec
sahf
int3
fistpll
sbb
sti
mov
insb
es
inc
imul
cltd
mov
pop
mov
bound
call
push
scas
pop
stos
jg
add
sub
adc
hlt
data16
xor
hlt
fistps
inc
jae,pn
xor
pop
inc
lret
mov
lcall
iret
in
loopne
aaa
ret
jns
add
xlat
lcall
fwait
xchg
stos
or
xchg
jno
aaa
sub
mov
das
loopne
cmc
incl
outsb
lret
xor
xchg
aaa
popf
imul
cmp
mov
dec
js
cmp
out
xchg
dec
call
pushl
adc
std
pop
and
add
ja
push
shll
add
lret
mov
add
xor
or
fidivl
xlat
out
mov
in
test
jmp
daa
arpl
cmp
add
jnp
inc
popa
push
jns
incl
cld
cli
dec
pop
inc
push
sub
jbe
loope
stos
mov
xchg
lds
push
fcmovb
scas
mov
jns
dec
inc
arpl
inc
mov
ljmp
jmp
cmp
cmp
data16
aaa
sbb
gs
and
fnstsw
cmp
or
stos
movsb
rclb
sub
sub
jno
aas
push
sbb
fcoms
push
lcall
stos
popl
push
adc
pop
mov
js
lret
or
adc
pop
sub
xor
inc
mov
ret
sbb
mov
jae
int
out
push
sub
iret
dec
movsl
dec
inc
sbb
mov
cmp
inc
popa
push
push
push
cmpsb
aad
and
sub
adc
cs
lcall
sub
and
insl
fwait
push
js
das
jno
adc
push
sbb
sub
pop
loopne
ljmp
sub
orb
or
aas
jp
decl
aaa
sbb
xchg
jge
lods
popa
daa
cs
sub
test
push
fildll
clc
mov
and
dec
mov
je
imul
in
rclb
push
shll
pop
or
out
push
inc
push
in
jno
xchg
ficompl
add
ds
dec
inc
push
sbb
pop
movsb
pop
inc
je
mov
push
add
int
outsl
push
movsb
cmp
push
jns
lods
xchg
push
int
incl
xchg
mov
mov
mov
jg
inc
pop
inc
jns
outsl
cli
lcall
push
pop
cmp
out
int
bound
decb
mov
sahf
adc
adc
cmpsl
mov
mov
loop
stos
scas
andb
insl
add
out
mov
add
data16
jnp
push
dec
push
jp
shll
flds
ja
std
push
frstor
scas
insl
xlat
pusha
jp
mov
pop
clc
aaa
cwtl
movsl
out
out
dec
jp
repz
cs
pushl
jno
icebp
cmp
pusha
cwtl
mov
sarb
cmp
popa
xorl
xor
fs
pushf
inc
xor
ljmp
xor
sub
lret
jns
ljmp
xor
push
mov
clc
sbb
hlt
decl
pop
fmuls
loope
pop
push
cmpsl
icebp
outsb
cli
and
fisubs
jb
cwtl
icebp
mov
push
inc
xchg
fidivrs
jbe
sub
aaa
cld
das
and
mov
add
inc
adc
fwait
mov
push
je
or
mov
mov
out
add
pop
lock
nop
mov
push
push
out
repz
mov
mov
jp
scas
jp
and
into
xchg
xor
incl
or
es
push
dec
pop
adc
pop
or
sbb
pop
imul
xor
xor
xlat
fdivrl
inc
nopl
xor
inc
push
into
pop
subl
inc
incb
aaa
filds
push
outsl
aaa
add
adc
or
push
xor
dec
push
cmpxchg
mov
and
dec
jb
add
sbb
add
jb
sub
add
mov
fisubrl
bound
cmp
or
dec
push
push
cmp
sbb
fcmovnbe
decl
jge
jo
push
sbb
xor
lcall
add
cmp
pop
adc
adc
or
pop
xor
cmp
cmp
sub
inc
push
or
dec
or
mov
dec
jns
sub
add
adc
cmp
xor
ljmp
arpl
cmp
adc
xor
cmp
jg
and
pop
push
and
or
int3
adc
add
pop
pop
add
and
pop
inc
sub
or
cwtl
insl
pop
loopne
add
push
sbb
enter
add
push
cs
and
or
cmp
daa
and
or
and
pop
sub
pop
cs
adc
daa
pop
sbb
and
das
and
dec
or
dec
pop
sub
push
sbb
add
cmp
sub
xchg
lahf
adc
inc
adc
iret
cmp
rolb
xor
xor
add
add
cmp
or
pop
or
or
jb
push
cmp
pop
adc
sbb
sbb
or
cmp
ds
loopne
cmp
push
add
sbb
adc
es
cmp
and
dec
movsb
test
cmp
adc
add
pop
xor
xor
into
sub
sbb
loop
fdivrs
jle
push
or
sbb
and
lock
jg
xor
sbb
adc
mov
imul
push
dec
jb
je
js
push
dec
jbe
outsb
fwait
and
mov
dec
data16
outsl
cli
loopne
dec
inc
mov
inc
inc
popa
push
inc
pop
jo
push
dec
insb
pop
outsb
insb
insl
push
stos
decl
inc
push
gs
inc
bound
push
gs
dec
dec
jns
jo
pop
inc
push
bound
idivb
jae
inc
pop
jbe
push
pop
dec
gs
shrb
inc
push
jb
push
addr16
inc
insb
dec
inc
inc
imul
fisttps
sub
push
pushf
dec
jb
pop
inc
dec
push
insl
insl
dec
push
bound
andl
jno
pop
adc
jo
dec
jns
data16
dec
cli
cmpsb
fisubl
popa
add
dec
xor
add
add
or
adc
or
out
sahf
adc
sbb
sbb
jns
out
pop
and
and
out
sahf
out
sub
out
sahf
xor
ds
pop
jns
out
inc
inc
push
push
push
rcrb
je
je
repz
push
fs
insb
je
js
cmpb
cmp
test
iret
repz
cwtl
pushf
mov
iret
test
mov
mov
cmp
ror
aam
jns
neg
neg
loopne
call
das
dec
adcb
mov
pusha
imul
xor
in
mov
outsb
arpl
das
cmp
inc
push
gs
add
mov
outsb
inc
jo
push
mov
add
add
sahf
jnp
xor
outsb
incl
push
imul
or
in
mov
int
sub
and
push
jge
loop
or
mov
cmpsb
fdivrp
out
push
lock
push
push
pushw
ja
jb
add
jecxz
jl
arpl
jb
aaa
pop
jecxz
neg
imul
xor
arpl
jo
insl
push
outsb
pop
fistpl
cmpsl
aaa
dec
subb
je
outsl
imul
jbe
push
imul
idivb
daa
push
bound
scas
cmp
push
push
mov
mov
das
inc
mov
cmp
push
mov
data16
fidivl
jo
jg
repnz
push
das
je
jns
sbb
jns
fisubs
inc
inc
inc
inc
insl
insb
fnstsw
fiadds
adc
imul
cmp
loope
add
jb
push
arpl
es
push
push
imul
lock
jae
push
sub
mov
or
xchg
inc
pop
arpl
fwait
sbb
jae
dec
push
popa
addl
adc
mul
cmp
rcll
mov
pcmpeqb
insl
inc
jnp
shll
dec
xchg
pop
das
push
jbe
sbb
xlat
imul
arpl
and
mov
popf
mov
fs
add
ja
outsl
xchg
cltd
dec
es
pop
xchg
leave
xor
cltd
dec
and
or
out
fisubl
push
cmp
jb
loopne
add
mov
out
stos
add
or
jb
scas
call
and
push
call
xchg
sbb
mov
push
push
push
inc
arpl
imul
xor
pop
pop
sub
div
push
arpl
fs
pop
inc
fstpt
cmpb
insb
jmp
scas
add
insb
bt
out
inc
dec
out
jle
lret
in
inc
xorps
add
jo
add
je
inc
add
adc
jmp
pop
cli
sbb
out
pop
sub
mov
pop
jp
pop
incl
test
int
scas
lahf
or
call
jmp
add
sahf
out
sahf
add
or
cmp
jns
or
aaa
or
or
daa
dec
mov
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
insl
leave
repz
push
and
jb
in
sbb
pop
andb
cmpb
out
xchg
addl
dec
dec
mov
lret
sbb
aas
into
aas
xlat
pop
sbb
enter
add
adc
and
popf
adc
add
mov
pushl
mov
xor
stos
cmp
adc
mov
xchg
xor
clc
pop
mov
add
movsb
add
cmpb
pop
stc
enter
pop
movsl
sbbl
mov
fisubl
add
cltd
cmovo
pushl
mov
sbb
in
call
mov
push
add
mov
xor
mov
rcr
fsubp
stc
jb
jle
lods
jae
aaa
dec
push
mov
push
pop
add
or
push
inc
inc
lock
scas
js
push
clc
mov
push
and
pop
push
subl
aas
repnz
rclb
pop
xorb
aaa
subb
add
pop
mov
enter
push
addr16
xchg
les
add
out
sahf
or
or
repz
adc
jns
out
adc
mov
mov
out
sbb
iret
repz
sbb
mov
fcompl
js
iret
repz
inc
and
and
sarl
js
jns
iret
repz
jp
push
cld
je
sbb
pop
or
jno
test
orb
daa
lea
push
mov
aas
pop
aas
push
add
iret
add
jns
inc
in
roll
push
in
sahf
out
sahf
aam
les
movsb
pushf
pop
nop
mov
repz
mov
iret
repz
insb
push
iret
repz
dec
inc
cmp
out
sahf
out
sub
sbb
add
repz
clc
shl
in
les
add
xchg
fisubl
sub
jg
inc
cmp
add
cmpsl
repz
pop
xchg
push
mov
idivb
iret
repz
xor
add
sahf
out
cmp
xchg
mov
jns
out
repnz
dec
aaa
push
mov
insb
mov
mov
mov
pop
insb
outsl
imul
or
outsb
addr16
inc
rclb
outsl
jne
pop
outsl
pop
jb
dec
add
mov
aas
pop
test
mov
fs
add
pop
jp
xchg
stos
mov
inc
add
jns
scas
inc
ret
push
out
inc
add
push
rol
shrb
pop
inc
out
mov
xchg
add
movsb
or
add
rolb
and
rcrb
add
and
sbb
mov
lret
add
push
mov
lret
rcrb
xchg
fisttpl
popw
popa
subb
pusha
lods
popf
out
pusha
pusha
or
jle
sbb
data16
jbe
mov
aas
ja
out
add
andl
or
push
in
lods
fldenv
pop
cmpl
or
out
lods
sbbl
out
push
in
mov
push
out
pop
out
shll
pop
insb
add
add
enter
out
outsb
add
data16
orb
mov
push
int3
jmp
push
rolb
daa
pop
dec
ds
shl
daa
daa
daa
lock
cld
imul
daa
incl
dec
and
in
dec
cmc
iret
adc
cmc
sbb
in
add
mov
ja
jo
clc
sarl
push
xlat
pop
jle
jg
in
insb
movsl
mov
out
pop
inc
ja
lds
jle
loopne
push
and
insb
lds
push
xchg
push
mov
nop
xchg
mov
add
inc
leave
dec
sahf
xor
add
xlat
mov
inc
dec
push
pop
xlat
mov
mov
fsubs
ja
das
mov
push
dec
xor
pop
jg
shlb
mov
dec
jnp
sub
jle
dec
mov
pusha
pop
aas
fildl
insb
jmp
icebp
outsl
add
pop
nop
mov
rcrl
faddp
dec
sbb
das
pop
das
add
jge
sarl
add
dec
in
dec
sub
pop
mov
dec
insl
shrl
das
fisubrs
mov
mov
sarl
das
adc
add
rorb
outsl
mov
cmp
loopne
shrl
inc
cmp
scas
addb
mov
gs
rcll
subl
lock
sub
das
sbbl
das
shrl
jle
stos
sarl
data16
out
out
or
mov
faddl
push
int
or
or
sub
in
popf
cmpsb
jnp
vmread
sldt
in
or
inc
dec
xadd
add
pop
enter
enter
clc
cld
pop
enter
add
pop
enter
jo
pop
enter
add
cmp
aas
pop
scas
adc
jb
out
or
loop
push
fcompl
je
add
add
adc
push
add
and
sub
fwait
int
add
dec
add
cmp
shrl
or
push
xchg
add
es
int3
add
out
sahf
idivl
test
cltd
jns
aaa
jnp
sbb
xor
repz
incl
xor
int3
repz
jns
incl
xor
cmp
pop
fmulp
xchg
incl
xor
sti
cmp
repz
sub
dec
aad
out
mov
cltd
daa
std
sahf
out
push
push
xor
xor
xor
out
xor
xor
xor
jns
out
xor
xor
sahf
out
sahf
xor
xor
xor
iret
rcr
xor
adc
cmp
cmp
push
data16
repz
data16
iret
repz
out
push
data16
jns
jns
xor
int3
int3
cmp
sbb
incl
data16
int3
ja
in
xor
xor
out
rcrb
xor
jns
call
cltd
cltd
out
pop
pushf
out
cltd
sbb
into
repz
cltd
cltd
xor
pop
das
push
pushf
jns
lcall
ret
add
mov
xor
loopne
xor
mov
sarl
pcmpgtd
data16
sahf
orl
jns
enter
int3
mov
int3
out
sahf
out
int3
jmp
mov
pop
push
int3
int3
sbb
jns
out
or
push
lcall
dec
lcall
int3
mov
xor
jns
jns
int3
cs
int3
jbe
jns
int3
int3
int3
int3
decb
in
jns
incl
data16
ja
ss
push
and
movsl
add
add
ss
int
xchg
xchg
add
add
mov
add
add
add
add
add
sti
jbe
mov
sub
add
fsubs
add
in
cmp
icebp
add
lock
lock
repnz
mov
xor
mov
dec
fadds
nop
mov
iret
mov
jg
mov
int3
sti
jnp
push
fidivrl
aas
loope
imul
fstpt
mov
aas
in
fistl
or
icebp
jg
mov
mov
mov
fisubl
ss
mov
fdiv
fsub
ret
mov
inc
out
or
testb
add
loope
sbb
mov
inc
push
mov
or
push
mov
xchg
and
adc
mov
xor
or
cmp
repnz
mov
ds
push
out
mov
into
rcl
test
add
xor
fnstsw
loop
add
repnz
mov
add
xor
pusha
adc
hlt
fistpl
sbb
test
test
jg
int3
loopne
sub
loopne
jbe
pop
inc
or
in
scas
mov
inc
cmc
inc
sbb
mov
loop
aas
inc
add
imul
push
leave
inc
xchg
fdivs
push
add
mov
sti
fidivl
push
pop
push
cmp
push
and
push
outsl
xor
or
add
adc
scas
mov
in
xchg
and
pop
hlt
add
dec
push
pusha
xchg
repnz
hlt
shll
nop
add
and
pop
icebp
add
adc
sub
bound
push
add
xor
mov
mov
bound
dec
jns
adc
adc
pop
pop
mov
loope
push
sbb
mov
push
negb
iret
mov
outsb
add
pusha
or
test
cmpl
loopne
fs
pushf
fmuls
dec
sbb
dec
inc
xchg
xor
pop
push
or
popa
mov
sub
addr16
into
sahf
aam
push
bound
pop
xlat
out
ds
mov
mov
addl
popl
or
pop
popa
sub
bound
lock
fcoml
or
mov
call
cwtl
pop
cmpl
fs
outsb
loope
and
inc
popa
bound
pop
push
sarl
roll
ffree
or
jecxz
gs
sbb
or
out
lods
insl
sarl
andb
or
and
mov
xchg
pop
push
fidivrs
js
dec
movl
daa
shl
pusha
mov
and
sarl
insl
jp
push
repnz
and
sbb
popa
mov
ret
in
out
out
ret
or
rcrl
pop
arpl
sbb
and
aaa
push
scas
mov
pushw
insl
shll
icebp
or
mov
popa
sbb
int3
rcll
xor
icebp
sbbl
or
add
sbb
shll
or
adc
xchg
xchg
sbb
pop
loop
push
je
mov
jne
and
rol
mov
add
xor
sbb
pusha
add
repz
pop
imul
add
pop
int
pop
mov
into
loop
sbb
push
bound
pop
pop
lds
imul
shrl
mov
add
int3
loop
addl
push
clc
or
inc
mov
xor
outsl
in
xor
or
add
fs
add
mov
dec
add
adc
add
pop
add
test
ret
or
pop
dec
inc
sbb
outsb
push
push
ds
add
pop
and
push
mov
pop
je
pop
aas
mov
or
inc
add
ds
cmp
pop
add
loope
pop
subb
imul
mov
mov
inc
cld
pop
mov
xchg
jg
push
cmc
mov
mov
fsubrl
and
sahf
lea
mov
out
xor
sub
xor
ds
hlt
clc
add
addb
cwtl
test
aas
int3
cmpsb
jb
in
push
nop
nop
lock
add
shll
push
or
or
call
mull
int
sub
or
xor
push
dec
sti
add
test
ss
sbb
dec
add
outsb
pop
sbb
pop
jge
mov
inc
pushl
fdivp
pop
or
ja
inc
test
sub
aaa
or
fdivrs
add
insb
cmpsl
xorl
inc
or
fnstenv
and
out
lods
or
pusha
and
and
in
mov
dec
push
and
xchg
bound
mov
mov
xchg
sbb
inc
pop
js
xor
loopne
je
daa
rcrl
mov
adc
push
rcrb
jne,pn
or
ja
je
pop
aaa
add
es
mov
inc
jns
inc
add
jae
gs
push
add
inc
cs
pop
insb
xchg
adc
scas
aaa
add
mov
ret
inc
and
jge
loopne
push
sub
aas
sub
outsl
push
sarb
scas
or
mov
in
ffree
inc
fnstenv
mov
cmp
xchg
sbb
sbb
das
add
imul
inc
add
xor
imul
fidivl
popa
sub
push
pop
add
daa
cmpsb
xor
and
mov
daa
ret
aas
add
pop
xchg
jo
adc
pop
inc
jae
or
rclb
jb
rorl
out
adc
mov
adc
inc
sub
mov
jb
or
cmp
sub
fildl
pop
inc
pop
adc
sbb
repz
mov
rolb
sahf
push
stos
sub
inc
xchg
pop
pand
es
inc
imul
add
xor
sbbl
imul
imul
sbb
ja
fidivrl
jne
jae
xor
ljmp
jb
and
in
imul
mov
jae
out
sti
push
out
cmpsb
insl
dec
or
out
mov
ja
fildll
and
sarw
aaa
lahf
fisubrl
test
andl
inc
pop
loopne
xchg
pop
jb
and
arpl
pusha
cmp
bound
xor
jmp
xchg
pop
push
pop
ret
mov
insl
mov
push
adc
mov
mov
scas
ss
push
push
jle
jbe
mov
jle
testb
push
pop
cmp
fcmovnu
sbbl
into
and
add
orl
pusha
xchg
bound
jae
insl
jo
mov
mov
stos
or
dec
fimuls
pcmpeqw
cmpsb
jns
jecxz
sub
clc
fidivl
inc
sbb
push
sbb
fnstsw
ret
adc
or
sub
in
enter
lret
pushl
jo
arpl
ja
add
jnp
jmp
je
ret
aas
out
jge
inc
sti
fldt
pop
mov
stos
adc
in
xlat
outsb
stos
push
mov
sub
daa
scas
or
ljmp
lock
ret
inc
add
data16
inc
scas
dec
sbb
imul
loopne
mov
out
mov
outsb
ret
pop
out
mov
arpl
ret
cwtl
popa
and
sub
jg
sub
inc
mov
aad
mov
fwait
das
adc
cmp
addr16
mov
loop
arpl
loop
scas
sub
adc
lret
movl
mov
inc
divl
xchg
andl
mov
adc
sbbl
adc
xchg
aas
loop
test
lods
push
iret
pop
scas
or
sub
aad
daa
outsl
rcl
xchg
ja
xchg
pop
xor
das
insl
push
insl
sbb
jbe
bound
icebp
cmpsb
loop
mov
jo
jmp
popl
ljmp
outsl
and
mov
lea
add
orl
cmpl
dec
fildll
dec
pop
mov
outsl
pop
insb
cwtl
bound
jb
jmp
data16
cmp
gs
shl
jae
daa
fisttps
lret
inc
inc
jo
in
adc
jbe
dec
mov
mov
dec
mov
ficoml
inc
sti
mov
push
pusha
inc
daa
xchg
rcl
sahf
pop
add
int3
mov
lods
xchg
es
gs
xchg
clc
pop
mov
fs
pop
rorl
sbb
xchg
call
inc
sbb
mov
xchg
pusha
adc
cmpsl
mov
lds
push
test
sti
xor
and
shlb
push
or
aad
aas
pop
jbe
fs
sbb
mov
dec
mov
ret
out
stos
mov
inc
mov
adcb
mov
push
push
lea
aaa
sti
insl
repz
push
add
jg
jne
sub
cmp
mov
adc
shrl
loop
push
inc
sub
xchg
and
adc
jecxz
dec
stos
adc
or
push
sub
xchg
js
lahf
and
sahf
ja
add
outsl
outsb
add
ret
push
dec
dec
mov
mull
push
mov
add
add
inc
mov
arpl
jae
mov
cmp
or
mov
sarb
insl
subl
push
imul
addr16
nopl
mov
pop
mov
data16
cmp
mov
insl
ja
sti
push
test
pop
bound
add
add
rcll
sbb
push
jae
mov
out
adc
imul
out
fstl
mov
xor
cmpsb
sbb
or
xor
xor
sub
fs
xchg
sbb
push
push
orb
pop
xchg
inc
mov
stos
aad
jae
jg
stos
sahf
sbb
sbb
cmp
and
out
cs
sti
jnp
aas
xchg
scas
sub
insl
inc
sbb
mov
dec
xchg
scas
insl
cmpsl
sub
stos
jbe
fwait
imul
or
mov
dec
jmp
scas
cmp
push
aas
pop
sbb
popa
xor
push
out
and
dec
gs
xor
xor
ret
xor
sub
add
xchg
subl
sbb
pop
adc
jb
cmpsb
push
dec
addl
jno
je
ficoml
pop
xchg
pop
jno
push
cmpsl
bound
sbb
push
add
cmp
adc
sub
mov
push
dec
mov
jle
push
push
test
scas
test
pop
es
les
lods
bswap
jp
cmp
pushl
inc
dec
inc
es
imul
outsl
dec
xchg
imul
cmp
lea
inc
outsb
fs
iretw
out
int3
out
inc
imul
inc
inc
push
sub
mov
sti
add
jmp
gs
mov
mov
sub
mov
scas
xor
mov
add
addr16
xchg
xchg
mov
push
xchg
fs
sbb
addr16
rcpps
pusha
insb
mov
push
jbe
mov
sub
push
cmp
dec
pop
dec
jae
inc
inc
push
dec
adc
adc
adc
call
sbb
popa
inc
push
movsb
imul
inc
xchg
outsl
lret
push
faddl
dec
popa
add
adcl
adc
pop
sbb
test
push
rcrb
jle
fiadds
pop
test
sub
nop
push
pop
ja
mov
xor
push
sbb
dec
gs
adc
inc
mov
push
pop
into
jmp
cwtl
and
pop
jbe
in
jne
and
mov
andl
pop
push
jne
mov
das
insb
jns
push
xor
push
push
and
cltd
pop
mov
scas
mov
rcrl
nop
cmpsl
imul
inc
imul
push
push
and
pop
in
xchg
inc
dec
outsl
fs
cmp
arpl
fldenv
mov
pop
mov
pop
inc
and
aas
push
jne
adc
push
enter
loop
hlt
aaa
and
dec
inc
dec
cmp
adc
cmc
mov
shlb
popa
pusha
jb,pt
mov
ret
push
sub
popa
ss
xor
mov
negb
dec
add
rcrb
arpl
insl
sub
outsb
push
dec
test
popf
mov
imul
xchg
mov
popa
clc
jo
xor
insl
ds
push
aad
orb
inc
jae
mov
push
popa
imul
xlat
mov
and
fwait
xor
pop
ret
jns
in
push
ss
xor
xchg
lods
add
xlat
ret
addr16
inc
fs
dec
roll
into
outsb
push
scas
jo
fistpl
inc
data16
push
or
add
sub
jns
sub
adc
imul
jle,pn
jne
push
popa
pop
pop
imul
sbb
popa
lret
mov
ja
push
out
pushf
js
cmc
gs
paddsb
stc
push
loop
jo
sbb
popa
jno
pop
andl
push
pusha
dec
insl
mov
push
mov
loope
int3
pop
cs
fwait
pusha
insb
and
inc
add
imul
xchg
lret
jae
inc
or
inc
je
inc
loope
or
pusha
jecxz
adc
cmp
jo
adc
cmp
call
stos
add
addr16
jnp
imul
sarl
jno
fadds
ret
dec
outsb
push
push
stos
jnp
and
mov
stos
js
imul
push
inc
insb
push
add
sub
xor
rorl
test
popa
icebp
int
and
cltd
mov
xchg
cmp
pop
adc
shrl
pop
adc
lock
xor
inc
lods
pop
inc
push
push
inc
push
outsb
arpl
inc
mov
adc
sti
or
or
adcb
ret
mov
inc
adc
fsubs
jnp
insb
dec
and
loop
jnp
imul
push
cmp
push
and
ss
inc
jo
and
sbb
loopne
sbb
outsl
and
cwtl
movsl
xchg
rol
dec
inc
inc
push
and
pop
and
inc
dec
push
outsb
fistl
cmp
fs
imul
inc
dec
mov
rclb
insb
je
adc
faddl
mov
fs
ret
pusha
pusha
movsb
sbb
addr16
push
in
push
in
lds
clc
repz
xchg
push
xchg
scas
jno
push
adc
pushf
inc
imul
bound
dec
cli
outsl
add
mov
pop
cmp
imul
xor
mov
sahf
push
xchg
ret
into
lret
mov
shrl
insl
lret
shlb
roll
mov
jae
test
inc
push
test
xchg
stos
cltd
or
fisubrs
push
mov
cmp
xor
jo
lods
push
cltd
ret
iret
pop
insb
sub
cmc
cmc
sub
insl
inc
sar
push
arpl
rorb
push
inc
mov
jmp
jg
jae
or
test
js
imul
xor
jne
xchg
arpl
imul
push
inc
mov
pop
jbe
enter
test
nop
add
jo
cld
adc
clc
fs
sbb
inc
jbe
lods
sub
xor
pushf
adc
inc
imul
test
loopne
insb
repz
aaa
and
shlb
sub
push
movsb
ss
or
push
pop
mov
iret
test
and
dec
clc
add
push
cltd
or
je
imul
test
inc
inc
adc
mov
insl
popa
aas
xor
std
dec
popa
jns
mov
lret
cmpsl
lret
cs
sub
push
jne
xor
xor
inc
and
xor
dec
test
dec
jge
sub
inc
outsl
or
popf
mov
adc
or
es
inc
fcoms
adc
outsb
dec
jbe
sbb
insl
inc
xchg
push
outsl
imul
or
inc
cmp
jno
jecxz
sbb
dec
test
nop
scas
push
and
cmp
int3
insb
xor
sub
jno
xor
push
jo
popa
pop
push
or
jbe
inc
push
and
and
je
pop
fwait
xchg
imul
push
sbb
enter
cmp
or
fcmovnbe
push
jbe
or
imul
out
mov
outsb
add
addb
add
icebp
fimull
xor
add
add
mov
pop
negb
and
jle
pop
lret
mov
rcll
rolb
idivl
push
push
bts
int
mov
hlt
jo
add
inc
cmpsb
fadds
imul
clc
add
or
daa
sbb
ja
xlat
pop
rcrb
sub
loope
sub
pusha
jb,pn
popa
adc
inc
testl
out
inc
cs
and
testl
push
add
in
loopne
mov
sahf
jae
arpl
or
push
mov
movsb
sarb
mov
dec
xchg
incl
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
dec
add
add
inc
add
