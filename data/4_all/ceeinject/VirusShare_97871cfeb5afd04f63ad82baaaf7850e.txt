call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jg
lcall
sub
pop
es
push
loop
mov
xchg
mul
loop
rol
ret
and
xor
add
adc
bound
inc
sub
movsb
mov
xchg
repnz
aam
and
xor
add
adc
sub
mov
xchg
hlt
mul
cmc
shlb
mov
jae
add
insb
jne
stc
inc
daa
jno
iret
inc
filds
dec
or
sub
repz
ja
mov
and
jns
pop
rcrb
insl
xchg
imul
push
les
bound
cmp
outsb
adcb
insb
adc
es
add
repnz
cmp
jl
or
inc
popf
insb
ja
pop
adc
push
inc
jae
popf
jne
cs
stos
cmpsl
pop
icebp
dec
addb
je
in
or
into
cmp
fs
push
ret
in
loope
push
or
repnz
insl
jnp
nop
add
mov
mov
and
jmp
mov
dec
mov
out
jl
xorl
rol
add
xor
add
adc
fs
inc
cli
push
inc
movsb
xor
in
hlt
rol
cmpsb
mov
push
add
adc
add
sbb
rcr
jecxz
ret
loopne
cmpsl
mov
xor
push
push
popa
leave
adc
or
cmp
sub
jecxz
not
out
icebp
orl
adc
inc
jno
dec
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
xor
add
adc
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
pop
mov
adc
push
icebp
dec
adc
mov
pop
icebp
data16
mov
jg
mov
sbb
stc
xchg
and
pop
out
mov
aaa
rcll
inc
pop
cmp
imul
notl
ds
enter
gs
popa
cmc
sbb
outsl
push
adc
aam
jb
inc
setle
xchg
adc
loope
mov
frstor
mov
cmpsb
out
popf
or
sbb
or
sbb
mov
jl
call
jge
mov
push
addr16
xor
add
test
mov
pop
shlb
cmp
fdivs
mov
dec
lods
outsb
push
test
insb
pop
jne
jl
ret
adc
mov
add
adc
mov
pop
xor
pop
push
adc
mov
pop
aas
mov
push
je
dec
stos
aad
sub
hlt
int
and
dec
pop
fwait
pop
mov
imul
jle
jge
adc
add
lods
xchg
ss
push
out
sarl
and
push
jecxz
sahf
push
xchg
out
xor
fsubs
add
in
inc
cmpsb
pop
adc
mov
jmp
dec
pop
xchg
lods
scas
mov
xchg
add
push
pop
idivb
sbb
sarb
mov
std
jno
sub
mov
xor
add
mov
inc
fstps
inc
lret
in
pop
lods
iret
vphaddubw
into
mov
push
mov
pop
sarl
dec
and
push
push
inc
cmc
add
nop
or
pop
push
insl
nop
in
inc
imul
fmuls
mov
jae
cmpl
sbb
jbe
popf
in
xor
std
outsl
lods
push
rcr
mov
out
in
mov
pop
xor
adc
pop
negl
sbb
add
and
jb
test
inc
jbe
jb
lods
dec
jmp
lcall
add
stc
je
mov
fcmovb
arpl
mov
sbb
out
mov
sbb
jp
subb
bound
in
adc
push
and
in
imul
sbb
and
ja
inc
cmp
push
push
xchg
rorb
into
push
aam
and
mov
int3
push
xchg
faddl
ficoml
push
mov
popa
or
insl
aad
xor
pop
and
jl
sbb
pushf
stos
aas
adc
sub
fdivr
lea
push
adc
sub
js
sbb
jae
or
xor
mov
cmp
xchg
pop
leave
std
test
push
les
cli
dec
mov
out
mov
sahf
adc
xchg
fsts
adc
jbe
lds
lahf
es
insl
jns
add
ja
adc
adc
mov
mov
fs
or
in
loop
sbb
mov
cmp
lds
mov
cltd
jl
shll
inc
orl
rorl
cmpl
movsl
loop
add
cld
lahf
sub
je
pushf
push
mov
nop
mov
jge
gs
mov
clc
sbb
xchg
clc
mov
shl
inc
leave
push
loop
cmc
lret
iret
lea
lcall
push
popa
packsswb
push
xchg
sub
mov
lret
sbb
sbb
insl
rclb
cmp
and
addr16
xor
out
lea
mov
and
loopne
leave
ret
jo
frstor
dec
cmp
jns
mov
repz
roll
inc
stos
fbstp
jmp
mov
jecxz
push
in
cld
mov
mov
dec
xor
xor
ret
int
mov
iret
dec
mov
add
push
aam
test
sbb
outsb
cmp
dec
fdiv
stos
jle
bound
cltd
cmp
cmp
sbb
clc
in
adc
xorl
mov
and
adc
arpl
sub
pusha
push
mov
lahf
xor
dec
cmp
push
cmc
xchg
sbb
rcrb
lock
or
shlb
dec
hlt
jno
mov
in
adc
and
inc
stc
mov
mov
pop
adc
icebp
sub
or
lret
xor
adc
jecxz
push
adc
sbb
cmp
adcb
cmpsl
fadd
lds
dec
mov
push
cli
test
cmc
loopne
fsincos
lods
into
inc
add
imulb
jecxz
decb
xchg
jns
pop
aam
lcall
pop
mov
inc
stc
xchg
xchg
inc
mov
xor
loopne
aam
mov
imul
rolb
popl
mull
fbstp
sub
pop
ret
jp
mov
subl
in
fmull
in
adc
sub
xor
popa
xor
imul
sbb
cli
cmp
sbb
cmp
clc
orb
lahf
loope
cld
dec
aad
xor
mov
xchg
mulb
dec
pop
push
jb
adc
jno
int3
es
add
sahf
mov
cmp
loope
subb
and
and
insl
or
mov
mov
cwtl
mov
pop
hlt
adc
dec
dec
rorl
ds
xchg
daa
orl
loop
inc
out
sub
js
imul
lret
cmpsb
jge
outsl
jp
fwait
cmp
inc
test
cli
mov
int
fadds
fistps
or
or
jl
sti
dec
and
dec
sbb
jle
push
jecxz
aaa
insb
stos
xor
sub
dec
lret
add
test
test
repz
or
dec
inc
mov
push
xchg
dec
jge
mov
xor
add
bound
mov
jmp
enter
sub
pop
xchg
adcl
ds
les
fidivl
incb
jns
fcoml
jmp
jmp
mov
cmc
stos
pop
mov
out
jg
sub
xchg
mov
scas
addr16
dec
xchg
and
cld
jne
icebp
mov
pop
inc
inc
hlt
out
test
or
sbb
or
pop
out
in
or
ja
into
loope
clc
arpl
movsb
daa
jns
xchg
xor
or
adc
fcoms
fcoml
push
cmp
mov
mov
mov
outsl
ljmp
push
int3
in
loop
out
iret
pop
in
mov
sbb
repnz
inc
das
fistl
lods
pop
in
adc
mov
in
out
pop
push
xor
div
pop
loope
and
pop
mov
jns
jbe
jge,pt
pusha
dec
push
rolb
in
insb
push
mov
xor
pusha
sahf
jnp
daa
or
mov
inc
push
jo
pop
jno
mov
es
pop
xchg
pop
mov
xchg
js
or
add
inc
xor
imul
and
out
jg
outsl
sub
into
dec
xor
jecxz
jbe
lret
pushf
jnp
ss
jp
aam
push
xchg
sbb
push
sub
les
and
adc
inc
fldcw
lret
adc
mov
mov
inc
add
rorb
xchg
cmp
xchg
lods
adc
mov
xlat
scas
aad
jp
pusha
cmpl
rcll
call
enter
pop
mov
rcl
insl
inc
dec
ror
sti
bound
int3
xor
mov
sbbl
mov
lds
add
dec
push
pop
sbb
in
ljmp
insl
cmpsb
or
test
mov
lock
lods
enter
data16
out
repnz
sbb
mov
imul
cmp
fistl
es
add
movsb
mov
shlb
aaa
outsb
inc
nop
inc
lods
and
sti
shrb
out
rorb
mov
push
scas
xor
in
imul
push
mov
int3
pop
ljmp
mov
test
mull
nop
cmp
sub
xchg
in
mov
xor
push
xor
cmp
sub
inc
push
ret
sub
mov
aad
mov
inc
jge
push
sbb
sub
stos
xor
mov
pop
in
movhps
leave
pop
cmp
daa
dec
jg
or
mov
pop
jecxz
js
mov
jge
and
rclb
xor
dec
push
inc
jg
and
fistl
ficoml
out
in
pop
roll
lods
sub
adc
neg
jle
fnstenv
cmp
mov
jb
insb
push
adc
mov
stos
jnp
pop
push
ds
ret
pop
shll
mov
adc
jecxz
inc
sub
push
out
popa
jae
dec
pusha
pop
mov
jmp
push
fwait
test
loopne
adc
mov
std
movsb
js
xor
mov
jno
lods
sarb
push
mov
jnp
inc
inc
ret
dec
jge
test
stos
test
pop
iret
icebp
stc
mov
or
pop
fcomps
and
mov
fmuls
es
add
dec
sbb
pushf
xchg
jbe
dec
xchg
mov
jecxz
lret
pushf
les
lret
inc
fs
negl
je
or
rolb
inc
mov
out
test
movl
sbb
scas
in
mov
cli
push
mov
push
cld
in
add
ljmp
loopne
stc
mov
jg
and
xchg
dec
pop
mov
sbb
adc
add
int
lock
jg
gs
daa
adc
xchg
stc
cmpsl
xchg
push
dec
mov
data16
and
adc
repnz
inc
out
js
dec
dec
pop
hlt
int
adc
scas
sahf
mov
sahf
clc
pop
shl
or
sub
scas
jae
les
cmp
ret
add
xor
daa
sub
ficompl
inc
add
push
mov
cli
scas
dec
adc
jg
stos
test
lret
mov
stos
sub
sub
jae
pop
or
mov
jo
sbbb
xchg
push
testl
cmp
jae
jo
sti
loop
and
xor
stos
mov
imul
fadds
bound
adc
pusha
and
mov
mov
lods
inc
stos
pop
test
xchg
popf
sbb
sub
adc
dec
jmp
lock
mov
shlb
dec
xor
sahf
xchg
xor
in
mov
mov
pop
xchg
xorl
xchg
jmp
inc
sahf
dec
fildl
mov
mov
mov
loopne
jl
test
inc
test
fwait
nop
rclb
adc
aam
push
or
shrl
imul
outsl
jae
movsb
xchg
add
cmp
mov
adc
imul
adc
cld
inc
in
ss
dec
je
jns
sub
repz
outsl
mov
inc
jne
xlat
incb
pusha
stc
sub
mov
jg
xor
mov
fistpl
jo
or
int3
mov
int3
sub
in
aad
or
icebp
int3
xchg
pusha
mov
cli
int3
pop
sbb
call
or
out
inc
std
sbb
adc
pop
aad
mov
test
mov
scas
andb
orl
arpl
or
cmp
jmp
jmp
dec
clc
lods
in
and
adc
scas
out
lods
leave
jno
stc
into
inc
dec
sub
sbbb
sub
push
pop
sbb
dec
mov
push
outsl
mov
sar
sahf
jg
pop
mov
fs
nop
mov
faddl
stos
pop
outsb
ret
das
add
xorb
mov
or
mov
add
lcall
je
mov
jge
mov
stos
adc
cmpsl
fidivrl
insl
int3
test
cmp
movsl
cmp
mov
jl
jl
stos
aas
sub
js
cli
push
sti
cmpsl
pop
or
sub
pop
push
and
xor
push
aam
lahf
test
idiv
jg
cmp
shl
insb
faddl
jo
mov
or
scas
out
ficoml
testb
and
ja
stos
pop
mov
mov
cmc
inc
iret
scas
jns
popf
xor
ljmp
push
aam
inc
popf
andb
or
or
pop
lea
das
push
in
mov
aad
jo
push
fs
incl
sbb
sub
shll
lock
mov
lcall
lret
xor
fadd
inc
sbb
daa
sarl
shrl
pop
out
sarl
hlt
inc
push
in
lret
stc
push
addr16
mov
push
push
in
das
lock
pop
in
xor
nop
out
xor
insl
gs
push
andl
xchg
nop
mov
in
mov
push
or
std
ja
inc
jmp
ret
mov
mov
imul
aam
sarb
scas
test
in
cmpsl
cmp
lahf
sbb
mov
sub
push
xchg
xchg
lret
fistpl
sbb
out
push
mov
cmp
xchg
add
cli
out
fadds
jmp
out
imul
inc
xchg
add
push
and
mov
je
cmp
sub
xchg
out
imul
sub
xchg
aam
call
xchg
lods
out
sbb
push
fs
inc
ja
push
xchg
mov
cmp
mov
fsubp
cmc
pop
les
lcall
push
push
or
and
dec
and
xor
pop
decb
dec
jbe
stos
scas
or
mov
outsl
add
cmp
sti
cltd
fdiv
or
loop
mov
pop
int
cld
pop
or
push
inc
sbb
add
test
lcall
add
pop
std
addr16
std
xchg
push
mov
and
cli
xchg
pop
bound
cli
xor
sbb
pusha
cvtps2pi
loope
sub
clc
sub
andl
and
outsb
xlat
lea
jnp
xchg
scas
lret
ja
inc
lds
mov
movsl
fmull
mov
enter
ds
cltd
stos
adc
test
imul
mov
cld
sbb
fists
scas
cs
sub
mov
mov
mov
push
xchg
mov
dec
out
xor
int3
adc
mov
adc
cmp
push
in
fimull
inc
es
mov
dec
shlb
mov
ds
shlb
cmp
push
data16
pop
add
xor
cmpsl
fbstp
jb
push
inc
push
mov
lea
add
rclb
lcall
mov
dec
and
fdivrs
pop
add
hlt
aaa
stc
lahf
xchg
out
pop
loope
cmp
lea
jnp
xchg
pop
frstor
inc
decl
rclb
leave
loopne
xchg
xchg
icebp
js
pop
sub
pop
mov
and
hlt
adc
out
out
mov
jge
mov
sbb
loopne
pop
xor
fcompl
push
and
dec
jg
adc
loopne
lret
add
jb
mov
inc
sub
daa
and
popf
xor
jb
mov
add
sub
arpl
push
adc
push
pop
loope,pt
cmp
jmp
jle
inc
sub
lock
xlat
neg
or
outsb
iret
mov
pop
jmp
and
and
enter
sbbl
hlt
cmp
stc
lcall
loopne
sub
jbe
pop
loope
cmpsl
sbb
dec
push
mov
cmp
and
into
mov
add
addr16
xchg
pop
fdivrl
jno
and
adc
sub
je
xchg
aas
stos
cmp
mov
and
dec
fimuls
insl
or
and
pushf
imul
imul
add
xlat
decb
sub
pop
inc
loop
shll
lret
popf
in
mov
orl
loopne
imul
sbb
jbe
cmc
pop
les
cmc
cwtl
xchg
test
add
adc
mov
aad
pop
mov
jmp
sti
or
sahf
mov
test
dec
mov
sub
aaa
lret
jg
repnz
adc
fildll
fstpl
call
shrb
cmp
loope
cld
cmp
repnz
movsl
int
mov
cld
sbb
xor
mov
cmp
lcall
xlat
outsb
or
jae
jae
adc
ljmp
das
adc
pop
pop
jns
bound
mov
sub
adc
jecxz
addr16
loopne
xor
push
mov
adc
cs
gs
inc
sbb
sub
js
inc
mov
jne
lret
xchg
or
test
pop
adc
ljmp
and
pop
inc
stos
into
mov
scas
fdivrl
cmp
das
sbb
mull
fs
add
insl
fcomps
cmc
adc
adc
and
mov
dec
mov
and
pushf
aam
int
movsl
orl
sarb
cmp
adc
xor
lret
mov
adc
mov
mov
adc
clc
lds
movsb
cmp
fsubs
fstpt
out
jge
mov
ljmp
popl
dec
ljmp
cmp
mov
in
addl
fdiv
enter
stc
fidivrl
int
mov
rcrl
mov
lea
ret
dec
lret
or
push
loopne
push
pop
jae
icebp
gs
push
cmp
test
sbb
and
push
mov
cmp
jo
cmp
jb
push
adc
mov
mov
inc
in
ret
lds
mov
or
jl
andl
mov
shr
sbb
xor
mov
mov
pop
pop
daa
inc
jecxz
or
fs
jne
lods
fsubr
push
ret
fiaddl
stos
push
push
sbb
push
ljmp
or
popa
and
sub
mov
pop
add
mov
xlat
mov
cltd
out
sbb
inc
in
adc
outsl
scas
lret
je
mov
std
loope
out
cli
into
cmp
or
mov
mov
in
or
adc
inc
test
adc
jl
pop
mov
dec
sti
mov
add
push
icebp
lock
sub
push
inc
cmp
push
add
adc
int
push
aas
push
dec
cltd
ljmp
xchg
repz
mov
mulb
leave
mov
popf
dec
insb
arpl
mov
fidivrl
lds
add
push
xchg
movsl
mov
cmp
cmp
loope
sub
add
sub
rorl
scas
stos
lcall
les
jecxz
test
and
or
push
pop
stos
mov
sahf
xor
mov
pop
popa
xchg
cmp
das
xchg
pop
adc
loop
movsb
add
aam
adc
ja
data16
popa
add
xchg
add
arpl
sub
mov
sbb
fidivs
jbe
jae
push
fistpll
or
sub
pop
gs
pusha
cmp
xor
xorl
ja
cmp
cwtl
addr16
or
aam
inc
lahf
fimuls
jl
add
sub
mov
xor
fwait
mov
into
rcr
or
neg
sbb
pop
js
sti
in
repz
icebp
jo
incb
in
aam
push
outsb
pushf
lcall
xor
and
shll
test
push
mov
out
dec
adc
push
xor
inc
outsl
cmp
mov
pop
mov
mov
cmpb
mov
mov
cmpsb
sti
jno
pushl
xchg
mov
pop
add
mov
cmp
sub
jnp
xchg
or
div
mov
cmc
pop
test
stc
jb
and
shlb
rcl
scas
mov
lcall
jae
cmp
ljmp
out
shrl
stos
or
stos
je
dec
es
imul
inc
jmp
bound
or
sub
mov
clc
pop
lahf
pop
cmpl
jne
cmp
inc
dec
jp
xchg
inc
jne
jno
sbb
add
rolb
lea
insb
lcall
sarb
test
sub
loope
ret
test
js
push
adc
stos
xlat
jb
cwtl
mov
xchg
mov
cmc
mov
jno
nop
or
mov
loop
mov
adc
mov
xchg
mov
push
js
lds
shll
sub
xor
incl
test
call
xchg
jecxz
push
lds
js
ss
or
jp
pop
pusha
and
sub
push
adc
sub
or
lcall
and
shrb
mov
in
ret
fiaddl
incl
mov
mov
loop
nop
ficoms
inc
mov
adc
jle
dec
pushf
sbb
fnstenv
push
dec
sub
jecxz
mov
sbb
mov
rorb
ss
test
lret
jecxz
mov
ds
loopne
and
stos
or
jo
adc
xor
js,pt
pop
mov
cmp
jmp
into
sub
jecxz
adcl
add
sub
inc
aaa
and
push
dec
pop
stos
call
outsb
sbb
cmpsl
inc
in
fmul
aad
or
mov
loope
hlt
inc
iret
sahf
cld
fwait
mov
fwait
and
xlat
add
test
repnz
mov
sbb
inc
loop
in
clc
aaa
dec
and
jl
cld
and
addr16
fsubl
stos
push
shlb
enter
push
xchg
mov
movsb
ffree
popa
or
xchg
xor
add
adc
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
xor
add
adc
bound
inc
push
mov
mov
xchg
repnz
hlt
rol
ret
and
xor
add
adc
fs
inc
inc
push
mov
mov
xchg
repnz
hlt
repnz
and
xor
add
adc
fs
push
inc
ret
movsb
pop
push
cmp
or
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
imulb
ret
mov
pushf
jecxz
mov
in
in
cld
mov
imul
popa
insb
adc
dec
and
sarl
in
xchg
cld
or
fsubl
push
jo
rorl
and
jmp
cli
cmc
mov
fwait
aam
lret
mov
pusha
push
push
insl
aas
gs
stos
rolb
pop
ljmp
enter
xor
inc
iret
push
js
mov
orb
jge
cmp
stos
repz
arpl
xchg
sub
xor
outsb
and
inc
lds
sbb
les
ret
sbbl
xchg
add
add
int
and
ret
insb
repz
ror
mov
inc
and
fcompl
push
mov
jmp
mov
inc
and
or
add
int3
mov
sbb
sbb
jnp
mov
xor
ret
repz
push
test
imull
rcll
push
repz
inc
insb
jbe
int3
pop
xor
aam
jecxz
stc
cld
xchg
out
int3
stos
lds
adc
add
adc
xor
fbstp
clc
loop
lds
into
pop
cmp
jle
jb
add
push
sub
cmp
stos
mov
out
loopne
mov
xlat
cltd
iret
sub
dec
pop
imul
cmp
pop
inc
lds
pushf
xchg
xchg
cld
or
fsubl
or
sbb
insb
adc
xor
sarl
in
xchg
cld
or
fsubl
or
sbb
insb
adc
xor
sarl
aad
hlt
lock
scas
shl
jae
test
lds
repnz
sub
imul
bound
xchg
dec
xor
loopne
and
jecxz
mov
shr
bt
mov
pushl
rorb
xchg
out
cmpsb
repz
cwtl
scas
scas
gs
mov
xor
lret
sbb
shl
cli
dec
or
mov
ret
std
pop
rolb
mov
cmpsl
or
sub
or
sub
sbb
cmp
imul
popa
mov
xor
adc
cmc
xchg
adc
pop
fisttps
push
jmp
subps
push
pmaddwd
cltd
cmp
jb
and
push
pop
mov
repz
xchg
cmpsl
sub
push
mov
scas
and
pop
ds
add
or
aad
lds
popa
cmp
ljmp
popa
add
xchg
mov
jg
push
lret
les
xorl
sbb
mov
pusha
das
fnstcw
hlt
xchg
mov
fmuls
sbb
pop
mov
rcl
pop
imul
jb
add
out
out
sub
enter
fwait
repz
mov
les
stos
pop
lret
sti
push
in
aas
pop
pop
ds
scas
sbb
sbb
mulb
pop
xchg
arpl
cmp
adc
jb
sub
xlat
fsubrl
mov
sub
fbld
mov
dec
xchg
rorb
mov
aad
adc
push
ss
or
mov
inc
add
cs
lret
scas
sub
xchg
sbb
xor
jmp
mov
jno
lods
pop
js
fwait
mov
push
sbb
push
sbb
dec
push
leave
aaa
test
push
js
mov
mov
xchg
imul
popf
push
shr
rcrb
inc
das
cmp
sub
ja
addb
andb
js
inc
stos
dec
or
mov
loope
js
test
mov
pop
cmpl
push
aad
loop
addr16
je
pop
pop
cmp
or
sti
sub
add
movl
loope
popf
cmp
popf
cld
addl
or
or
call
mov
dec
dec
ret
out
lods
sbb
add
leave
mov
push
push
or
pop
aaa
iret
sti
insb
inc
push
xchg
insb
jne
aad
mov
aad
sti
dec
ljmp
or
ror
outsl
test
adc
cmp
dec
inc
lods
pop
xchg
sub
inc
mov
mov
adc
push
in
orb
mov
ret
and
imul
adcb
cmp
pusha
fdivl
mov
js
xor
fs
dec
push
xchg
mov
int
icebp
and
push
sahf
and
mov
cmp
mov
data16
and
push
hlt
sbb
push
stc
jne
popa
mov
inc
push
scas
out
cmc
and
cmpl
je
les
sbb
aas
xchg
mov
clc
stos
cmpsl
inc
pop
jns
test
hlt
sahf
decl
loopne
sbb
xchg
lds
lock
aas
hlt
ret
mov
test
and
inc
push
xchg
mov
ja
and
push
xchg
into
fs
inc
and
jbe
insb
stos
cmp
mov
stos
pop
sbb
sub
addl
mov
xchg
fbstp
sbb
add
incb
push
push
lock
pop
xlat
outsb
arpl
inc
mov
mov
pop
fdivl
pop
movsb
les
mov
push
imul
shrb
cltd
xchg
gs
mov
int3
leave
popf
push
and
pop
push
icebp
das
xlat
out
fstl
or
cwtl
les
test
mov
fisubs
push
int3
inc
and
scas
data16
cwtl
fsubrl
jb
stos
lret
and
in
sbb
mov
jns
xlat
xchg
shl
pop
jg
mov
sahf
stc
mov
pop
and
fdivrs
and
repz
cmp
mov
test
xchg
pushf
add
daa
or
out
dec
dec
inc
jl
das
in
jnp
out
mov
pushf
fs
jl
test
ja
dec
xchg
dec
aas
jne
pop
decl
add
insb
push
mov
aam
inc
mov
push
mov
and
xor
aam
xchg
mov
or
or
mov
sub
dec
ficomps
pushf
jp
out
fisubrl
dec
call
fcom
and
out
fwait
int3
lahf
mov
mov
ja
cmpsl
lods
or
stos
dec
insb
jge
imul
js
out
out
jnp
xchg
mov
iret
out
xchg
ja
add
inc
out
ja
jl
daa
js
pop
scas
sub
loop
push
mov
ret
xor
aaa
xchg
push
mov
data16
lahf
jne
mov
adc
inc
sub
push
add
add
xchg
sub
imul
rcl
cmp
jg
hlt
inc
roll
int3
mov
and
scas
xchg
xchg
js
push
popf
sub
aad
adc
push
outsb
cmp
jns
adc
pop
jp
jp
daa
aad
enter
mov
js
test
or
and
sbb
pushf
cmpsb
loop
clc
inc
push
push
test
jae
push
addr16
pop
lds
inc
ret
daa
jmp
out
sbb
push
fnop
fnstenv
mov
in
int
xchg
inc
pop
mov
adc
jae
rcrb
stos
add
jbe
mov
pop
icebp
dec
xchg
faddp
in
push
cli
repnz
pop
jp
xchg
cmpsb
inc
ja
leave
mov
sarb
adc
pusha
push
xlat
cmp
inc
add
scas
ljmp
les
outsb
std
push
xchg
stos
divb
ljmp
adc
outsl
xchg
fistps
push
stos
mov
adc
mov
mov
pusha
inc
int
push
mov
inc
imul
dec
scas
pushf
cs
sbb
push
sbb
push
lock
sbb
mov
mov
push
sub
pop
pop
jnp
xchg
cmp
imul
push
mov
dec
lcall
out
and
inc
xor
inc
out
add
in
scas
adc
push
loope
loop
mov
loope
push
add
and
add
push
sbbl
mov
lret
inc
daa
in
aam
mov
xchg
adc
mov
xor
mov
mov
cmpsb
pop
mov
jae
lods
inc
mov
push
push
push
jae
xchg
push
and
mov
dec
ss
fwait
repnz
andb
push
or
mov
xor
pushl
in
cwtl
enter
push
jo
mov
xor
out
or
pop
adc
aaa
push
repnz
popa
mov
pop
sbb
insl
dec
inc
insb
ret
test
cmpsb
pop
scas
cmp
pop
jne
fwait
mov
std
sti
repnz
test
cmp
cmp
pop
jge
or
xor
adcb
jb
loopne
sbb
mov
or
xchg
in
dec
mov
jne
dec
xor
repz
push
push
jae,pt
cmpsb
mov
out
outsl
faddp
push
dec
xchg
je
inc
add
jnp
fwait
pop
mov
push
jge
adc
dec
insl
sti
imul
gs
int
pop
cmp
sbb
and
adc
lahf
or
push
sbb
popa
adc
ljmp
sub
incl
xlat
ret
xchg
hlt
xor
scas
or
rcrb
mov
mov
lret
rorl
inc
sub
inc
arpl
sbb
mov
mov
shrb
cmp
testl
mov
std
xchg
push
imul
int
adc
lret
mov
int
pop
jno
push
pushf
ljmp
cli
sub
rol
cwtl
add
loope
push
stos
push
mov
sub
sub
stc
jl
mov
mov
mov
mov
sub
dec
outsl
push
add
lds
fidivrl
mov
testb
imul
jae
mov
stos
das
jnp
mov
loop
xor
pmuludq
lods
xchg
push
push
mov
mov
loopne
or
loope
mov
repnz
cmpl
frstor
scas
imul
jnp
xchg
push
add
add
dec
ljmp
imul
out
test
dec
jge
xchg
jecxz
in
xor
sub
push
adc
jg
cs
int3
flds
push
nop
je
pop
fbld
aaa
or
int3
jnp
ljmp
lock
ja
inc
and
pushf
cmp
cmp
sti
or
dec
mov
cmc
insb
sti
imul
pop
ret
jg
and
test
fbld
push
loop
adc
or
aas
jecxz
mov
div
push
sbb
mov
dec
jmp
imul
pop
in
es
iret
pop
inc
shrl
xlat
xlat
push
mov
dec
pop
pusha
push
fnstenv
xchg
divb
fmull
push
sarl
insb
pop
dec
push
xchg
inc
inc
lret
mov
pusha
xor
jnp
sbb
pop
sti
xchg
mov
es
cltd
in
pop
mov
in
jmp
ucomiss
loope
mov
faddl
mov
or
add
push
jl
pop
jnp
test
pop
push
repnz
push
xor
xchg
mov
ljmp
adc
or
aas
shll
mov
inc
and
outsb
mov
or
call
xor
xchg
pop
xchg
xchg
aaa
jbe
orl
cmp
xor
adc
mull
mov
repz
or
loope
out
adc
test
std
adc
stos
movsl
cmp
cmc
add
fstpl
fsubr
ret
or
adc
xchg
or
pop
mov
push
xor
xchg
mov
or
test
mull
sbb
push
addr16
shl
xor
cld
in
out
jle
mov
test
gs
xchg
loopne
push
add
sti
repz
invd
aad
das
add
ret
push
xchg
jnp
sahf
xlat
mov
mov
out
and
push
jno
enter
insl
or
and
jne
dec
popf
cmp
mov
pop
cmc
cmp
add
jg
inc
pop
sub
adc
sbb
push
enter
in
shlb
stos
cmp
xchg
sbb
jbe
mov
sub
into
shrb
dec
lea
jge
mov
aam
es
loop
xchg
mov
icebp
sahf
mov
pop
xchg
into
pop
test
inc
add
je
or
sub
push
and
in
sbb
fcomi
xor
out
mov
xor
fnstcw
mov
in
in
mov
add
jl
enter
sbb
mov
lea
mov
mov
xchg
pop
dec
iret
inc
ss
xor
repnz
cmpsb
dec
cmp
push
mov
bound
jecxz
popf
scas
sar
frstor
fidivrs
mov
sub
mov
dec
cld
out
mov
and
pop
movsl
jo
stc
add
push
mov
and
push
in
negl
sbb
cmp
inc
xor
ret
adc
mov
iret
dec
cmp
cmp
mov
and
xor
stc
test
push
out
mov
jl
mov
enter
jae
popf
pop
cmc
sub
pop
ret
js
into
inc
pop
loopne
xchg
ss
push
popf
sub
push
pushf
sub
cwtl
mov
jg
test
xor
shr
add
push
mov
or
aaa
sub
jno
in
and
pop
hlt
mov
fidivl
inc
loop
mov
mov
sub
sbb
test
jecxz
jmp
pmulhw
and
repz
cmc
jo
or
bound
outsl
outsb
loopne
mov
test
push
es
leave
cmp
mov
push
popf
dec
mov
in
test
mov
data16
mov
fsubrs
pop
pop
scas
jecxz
lods
clc
inc
push
cmp
sub
xchg
mov
sub
adc
xor
dec
push
push
mov
cmp
jmp
xchg
lock
out
repnz
das
adc
jae
ret
cmpsb
aam
mov
sub
into
or
xchg
dec
mov
pop
cmpsl
inc
loop
pusha
add
cld
stos
ljmp
ss
add
xor
cmp
jb
add
std
mov
add
ficoms
mov
mov
stos
fs
addr16
inc
xchg
jecxz
mov
pop
aad
insb
ds
inc
pop
repz
mov
out
adc
pushf
dec
es
push
pop
arpl
mov
aaa
movsl
cmpsl
arpl
insl
and
fwait
mov
sub
fs
sub
xor
jo
jbe
jns
add
movsb
stc
dec
cli
cs
pop
stc
clc
add
mov
lds
pop
scas
push
jp
dec
movsl
ja
jb
loop
pop
adc
xor
mov
jmp
push
inc
int
movsb
ffreep
loopne
imul
pop
addr16
test
lods
fs
and
clc
loop
out
jno
shlb
mov
movsl
inc
jo
add
lea
mul
dec
mov
outsl
xorb
adc
in
adc
fnstcw
imul
fimull
adc
frstor
aam
or
inc
ds
mov
clc
dec
inc
ljmp
daa
add
shl
push
pop
gs
popf
addr16
movsb
fxam
ficomps
jb
mov
ret
sbb
pop
jl
inc
or
sub
rol
in
or
and
test
mov
in
fcmovnbe
sahf
push
ds
popa
stos
or
or
xor
dec
xor
fnsetpm(287
inc
pop
lea
or
push
outsl
gs
sub
pushf
cltd
jae
sbbb
mov
ret
pop
xor
imul
sub
fwait
icebp
arpl
fwait
jge
xchg
enter
orb
xlat
inc
in
sub
mov
push
mov
push
fs
and
or
mov
push
push
sub
jno
scas
add
dec
adc
ficoms
popf
jb
inc
push
clc
and
or
jl
ret
inc
pop
stos
lcall
fcoml
inc
clc
pop
pop
cmp
or
imul
mov
sti
lea
adc
ljmp
mov
push
loop
xchg
sub
cmc
outsl
pop
cmc
dec
xchg
push
sbb
fsts
divl
jmp
loop
pushf
and
dec
jg
push
push
or
push
pop
adc
fisttpll
dec
inc
insl
nop
add
mov
sub
and
fnstenv
cmpsb
push
scas
cli
lods
sbb
lods
sbb
pop
cmpb
pop
dec
xlat
sub
adc
pop
mov
repz
popf
loop
popf
imul
sbb
sub
pop
shrl
inc
jb
fld
xor
rdtsc
repz
cltd
cwtl
cvtps2pi
inc
pusha
push
mov
aas
imull
dec
and
jne
pop
fildll
mov
enter
cmpsl
xchg
mov
adc
pop
and
loop
inc
xor
sbb
fisubrl
dec
ret
mov
xchg
aam
rcr
pop
sti
lcall
dec
or
popf
shlb
sub
sub
inc
sbb
sub
rol
cmpl
jle
xor
pop
jmp
jb
cli
imul
orb
pop
xchg
icebp
ljmp
std
xchg
aam
addb
lds
sbb
cmc
leave
jnp
aad
mov
mov
mov
pop
sbb
fndisi(8087
lret
and
cmpsb
inc
ficoml
jg
test
fwait
mov
les
inc
xor
outsl
and
scas
gs
imul
je
cmp
adcb
xchg
jmp
popa
pop
pusha
xor
add
lahf
and
hlt
add
xor
pop
daa
jp
ja
add
mov
ret
pop
push
push
jno
adc
jp
fisubrs
sub
adc
inc
cmp
and
pop
or
sarb
das
xchg
push
in
xor
iret
icebp
jp
sub
iret
xchg
int
stc
adc
arpl
dec
sub
inc
out
adc
xor
xchg
arpl
or
mov
cli
jp
aad
cltd
xchg
xor
movsl
mov
cmc
vmovlps
incl
scas
push
mov
shl
mov
pop
repz
push
int
mov
and
mov
std
test
aas
lock
dec
movsb
hlt
adc
adc
aad
dec
lods
mov
mov
out
je
jbe
add
jg
fimull
faddl
outsb
adc
shrb
lret
outsb
xlat
mov
movsb
mov
jmp
fwait
mov
jb
std
subb
jne
jnp
dec
dec
into
and
add
decl
cmpsl
mov
cli
xchg
mov
loop
and
mov
cmc
test
mov
sbbl
out
movsl
adc
roll
pop
jmp
mov
xor
fnsave
ret
lahf
push
dec
ficomps
shl
inc
loop
fcoms
sbb
cmp
into
lret
jp
mov
out
jae
inc
arpl
insb
mov
jmp
xor
pop
and
cmp
je
inc
nop
xor
push
loopne
inc
jo
js
xchg
rcrl
jmp
push
cmp
int
subl
xchg
gs
out
outsl
fidivrl
les
jcxz
out
rolb
xchg
out
out
and
dec
cltd
push
lods
insb
sub
jns
ja
std
mov
cli
add
rclb
jns
std
faddp
int3
popf
push
fdivs
lock
fcompl
mov
in
lret
jns
fists
adcb
repnz
call
shr
mov
jge
jno
hlt
mov
loopne
and
out
cli
mov
inc
add
fwait
lret
xor
test
aam
nop
sub
mov
pop
lahf
adc
xchg
mov
lcall
fsts
dec
cmp
ja
aam
mov
sub
scas
mov
mov
mov
push
mov
cs
mov
or
enter
xor
lcall
push
dec
jmp
inc
and
mov
xchg
aas
xor
lret
inc
js
xor
movl
pop
out
aas
pop
jnp
negl
outsb
cmp
in
mov
pushf
sub
shr
js
dec
jae
mov
out
mov
cmp
out
pop
into
pop
jge
jne
mov
add
or
fisubs
es
int
xlat
inc
loopne
sbb
mov
pop
push
jmp
mov
sub
lods
mov
xor
pop
test
dec
sub
enter
mov
inc
popa
mov
sub
int
lods
loop
int3
add
cmp
rorb
xchg
xor
mov
push
mov
pop
dec
enter
sbb
lods
shrl
mov
adc
repnz
inc
xchg
lock
nop
or
addb
dec
lods
xchg
rep
int
stos
repz
daa
out
sub
fstps
push
fbstp
mov
cmp
into
out
mov
sbb
daa
mov
lds
sbb
mov
lock
xchg
stos
xor
jmp
sub
into
sbb
gs
sub
xchg
push
jno
popl
jmp
pop
mov
mov
mov
push
cmpl
ret
and
xor
cwtl
pushf
jnp
lret
enterw
js
jle
lea
add
sub
ljmp
mov
repnz
jnp
mov
mov
push
addr16
mov
push
inc
idivb
enter
xchg
push
call
cmc
lock
popa
das
cwtl
loope
jg
inc
enter
rclb
pop
iret
sbb
xrelease
dec
push
loop
mov
inc
loope
jae
shll
mov
adc
lock
mov
pop
fs
and
stos
fs
adc
popa
add
inc
xchg
and
call
sbb
xor
sbb
jb
mov
clc
sti
jnp
add
into
sbb
add
cmp
inc
xchg
repz
fwait
mov
repnz
sbb
mov
test
sub
pop
mov
push
push
mov
inc
cmp
test
lds
xchg
xchg
jl
das
push
xchg
mov
mov
mov
xchg
cs
cli
jbe
cmc
ror
inc
inc
jb
outsl
cmp
faddl
repnz
scas
nop
in
mov
scas
jno
loope
add
icebp
sbb
xor
mov
and
xbegin
push
cmc
jl
mov
mov
mov
cmp
xchg
push
into
sahf
iret
mov
test
les
mov
sub
xor
push
lods
cmpsl
jnp
std
cmpsb
mov
inc
out
push
push
stos
fwait
pushf
arpl
mov
xchg
cld
or
fsubl
or
sbb
insb
adc
xor
sarl
in
xchg
cld
or
fsubl
or
sbb
insb
adc
xor
sarl
in
xchg
cld
or
fsubl
or
bound
add
and
repz
jecxz
xchg
cld
orl
rcll
jmp
sbb
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lods
mov
mov
jecxz
lea
sub
adc
and
pop
inc
lods
mov
mov
in
icebp
std
loope
rcr
shrl
sbb
popa
dec
push
pop
inc
lods
mov
mov
in
icebp
std
loope
rcr
shrl
xor
add
xor
inc
in
mov
insl
lods
aaa
std
and
es
sub
dec
push
out
insl
mov
es
adc
or
leave
fisttpl
add
push
mov
ja
adc
cmpsb
in
push
xor
icebp
push
fcomip
adc
ror
hlt
push
sub
mov
xchg
in
lock
icebp
xor
mov
sub
out
cmp
xchg
and
pusha
push
sub
pop
out
movsl
jl
icebp
negb
int3
fcoml
sbb
mov
dec
adc
test
nop
jge
adc
sbb
jge
push
xor
adc
jl
dec
inc
xor
mov
in
icebp
std
loope
rcr
shrl
sbb
popa
dec
push
pop
pop
jmp
aam
call
sahf
mov
test
pushf
mov
pop
cmp
jg
outsl
or
sbb
rorl
and
lock
jmp
xchg
clc
stos
xchg
xchg
iret
int
ffree
dec
je
dec
dec
inc
pop
insl
or
sub
aas
and
das
in
pushf
cmc
in
popf
std
loope
rcr
shrl
sbb
popa
dec
push
pop
inc
lods
mov
mov
in
icebp
std
loope
rcr
shrl
sbb
popa
dec
push
pop
inc
lods
mov
mov
arpl
divl
mov
lahf
dec
dec
inc
in
int3
xor
lds
loop
and
shlb
pop
mov
scas
inc
xchg
mov
inc
xor
mov
sbb
dec
sub
dec
pop
pop
out
adc
jnp
mov
push
mov
and
cmpsb
loopne
and
cli
mov
push
adc
adc
cmp
aam
fcompl
out
js
mov
xor
out
lret
inc
fbld
pusha
push
dec
push
jl
push
das
out
lahf
sbb
mov
push
pop
lret
iret
xorl
mov
popf
xchg
push
mov
mov
repnz
xor
push
xor
mov
adc
out
mov
inc
loope,pt
xor
cs
dec
in
mov
les
xchg
adcl
scas
pop
xor
mov
dec
and
sub
rcrl
dec
sti
sbb
xchg
mov
shl
lret
push
xchg
adc
pusha
or
loopne
imul
imul
mov
push
add
mov
adc
fmull
cmp
jb
mov
hlt
int3
or
pop
mov
loope
mov
jns
cmpsb
xchg
add
int3
pop
scas
cli
and
lods
es
ja
dec
dec
outsl
outsl
fists
jecxz
jl
adc
orl
fldenv
in
mov
pushf
icebp
hlt
pop
mov
add
xor
adc
outsl
jne
shll
pop
or
cmp
je
subl
pop
ljmp
inc
jne
mov
xchg
stos
out
or
out
ret
xor
fld
scas
outsb
daa
mov
pushf
lcall
sub
mov
arpl
cmp
adc
sbb
jecxz
mov
lret
jbe
scas
pop
push
or
xor
mov
loop
pop
cmp
flds
lock
push
sbb
cmpsb
pmaxub
ljmp
cmp
movsb
sbb
cwtl
mov
dec
inc
les
rclb
mov
ljmp
sub
cs
mov
icebp
ljmp
popa
sbb
test
mov
loop
or
mov
movsl
movl
lret
pop
inc
xor
addb
and
fwait
push
iret
sub
mov
inc
addr16
enter
cmp
arpl
sahf
stos
lea
js
mov
hlt
jno
jle
push
jl
xchg
out
ss
push
pop
add
cmpsl
lret
mov
inc
cltd
int3
fidivs
shrb
cwtl
or
imul
jns
cld
es
xchg
fwait
test
mov
sub
pusha
jo
xchg
adc
inc
xor
sahf
xor
and
notl
fwait
adc
and
out
xchg
ret
sub
fidivrl
mov
out
pusha
hlt
loope
sub
movsb
jp
jl
pop
jmp
xor
fs
xor
dec
aad
add
pop
fldcw
xchg
ss
jge
adc
fcomp
inc
inc
jmp
leave
in
jmp
rolb
push
jg
mov
fidivl
jl
xchg
mov
adc
arpl
cli
lods
ret
pusha
inc
push
adc
mov
push
popa
push
mov
andb
shl
outsl
and
mov
sub
push
adc
jo
dec
clc
xchg
xor
pop
bound
insl
pop
mov
inc
mov
imul
add
movsl
imul
jae
sbb
rcll
ljmp
adc
call
and
jb
cmp
inc
inc
dec
test
mov
cld
inc
aas
sbb
xchg
dec
nop
popf
xor
and
int3
movsb
stc
mov
push
fadd
filds
dec
and
pop
inc
mov
cmp
fnsave
daa
popa
sbb
inc
xlat
adc
inc
ds
mov
aam
mov
xchg
test
dec
xor
xor
jnp
insl
arpl
mov
fbstp
xchg
sti
stos
ss
pop
cltd
xor
adc
cmp
ret
or
aam
push
out
lock
pushf
mov
mov
enter
movsb
lcall
lea
push
jle
mov
incl
and
sbb
shrb
dec
mov
stc
iret
xor
push
xchg
in
add
test
cs
lods
jmp
xchg
into
sbb
movsb
lods
cwtl
int3
stos
pop
pop
into
dec
fildl
dec
cs
into
sbb
cwtl
js
jbe
mov
fucomip
lds
outsb
adc
jnp
adc
xchg
push
test
push
mov
in
repz
push
jp
mov
js
shrl
outsl
sbb
pop
sbb
stos
push
insb
xor
dec
pop
pop
add
xor
mov
sbb
and
lahf
aad
pop
lods
clc
nop
ds
aad
in
movsl
dec
ret
inc
add
fidivrs
daa
mov
pop
scas
mov
pop
xorb
clc
mov
lret
sbb
or
int3
sub
push
jns
popf
mov
mov
mov
push
cmpsb
or
mov
aaa
jmp
shrl
ja
fwait
aaa
xor
test
xchg
add
or
and
fstp
jecxz
add
das
inc
cmp
pop
subb
fucom
xor
setle
in
loopne
and
lock
pop
cmp
mov
mov
add
add
lcall
popa
movsl
cmpsl
or
cltd
pop
out
cli
jg
movsl
mov
inc
scas
imul
sub
mov
and
dec
or
jb
mov
mov
int3
sbb
test
je
popf
add
notb
pop
jp
icebp
test
into
stc
fstl
addl
adc
aaa
hlt
sarb
mov
dec
inc
popa
jge
xchg
add
idivb
aam
pusha
in
je
int
mov
js
dec
xorl
repnz
pop
cmp
lods
sub
fisttps
loope
les
test
mov
scas
and
pop
sub
inc
clc
iret
sub
pop
pushf
adc
push
js
clc
ljmp
jge
shrl
push
pop
pushf
jno
sbb
sub
inc
cs
mov
sub
lret
cmp
xlat
sub
inc
dec
adcb
mov
lods
in
popa
sub
mov
or
data16
in
ficomps
xlat
repz
jp
js
add
add
adc
mov
mov
rclb
push
in
push
dec
sbb
iret
xlat
scas
fcmovne
int
jmp
ret
mov
adcl
pushf
add
mov
mov
enter
loop
lret
scas
pop
nop
lods
icebp
roll
jb
jbe
pusha
and
cmp
xchg
push
test
rorb
stc
addl
into
stc
pusha
out
mov
shl
mov
mov
outsl
sbb
sbb
daa
mov
call
xor
inc
fadds
push
xchg
popf
std
or
fstpl
test
movl
dec
lea
data16
mov
imul
dec
cmc
stos
nop
lahf
cmp
ret
push
and
add
pop
out
leave
mov
ret
rorl
sbb
mov
popf
mov
push
dec
add
es
jg
out
imul
or
popl
xchg
xchg
sti
cmp
imul
jne
les
push
mov
out
and
pop
rcl
mov
mov
popf
lock
mov
mov
stos
fstl
cs
orl
popf
mov
mov
lcall
in
mov
jb
adc
cmpsl
mov
mov
dec
cltd
cmp
mov
fwait
lahf
icebp
jno
add
gs
sub
sti
int3
mov
adc
cmpl
addr16
pop
es
push
adc
inc
in
add
in
sbb
push
push
shrl
mov
pushf
inc
mov
xchg
xor
xor
arpl
pop
cltd
fistl
decl
js
push
in
std
cltd
cmp
mov
xchg
jp
push
pop
leave
sbb
cmpsl
sub
fwait
lods
dec
out
mov
fwait
or
cmc
push
cmpsb
pop
pusha
xchg
icebp
push
ret
ja
loop
cltd
jo
jno
icebp
loopne
andl
push
or
xlat
scas
insb
or
add
fstpt
mov
inc
adc
jecxz
scas
sub
loop
or
imul
pushf
sahf
jns
pop
in
mov
jg
push
pop
add
or
xlat
xlat
and
in
loop
out
xchg
sub
mov
push
pop
sub
ficoms
push
aaa
or
into
ljmp
jae
jg
sahf
jecxz
inc
ds
cmp
loop
xlat
xchg
or
std
gs
cmpsb
or
sarb
adc
push
orl
adc
jg
xchg
js
mov
jecxz
cmpsb
pop
mov
jne
or
inc
popf
ja
insb
popa
aad
test
pop
xor
nop
scas
fwait
push
orb
pop
push
jle
pop
lret
jecxz
pop
dec
lds
cltd
lds
add
pop
out
add
das
pop
mov
jl
sub
push
or
data16
inc
or
subl
fcompl
and
pop
ja
mov
scas
rclb
daa
icebp
inc
cmp
and
jno
pop
mov
js
dec
xchg
aaa
sbb
mov
int
add
xchg
fwait
leave
jg
sub
jg
fisubl
inc
ljmp
dec
movsl
insl
mov
push
mov
xchg
jnp
sbb
jne
ss
call
push
sub
test
insl
inc
jae
mov
out
pushf
push
es
dec
cmp
mov
repz
test
out
cmp
dec
sub
xlat
enter
push
shlb
loop
rorl
into
shl
test
loope
add
sub
rcrl
lcall
jbe
xchg
pop
pop
ljmp
scas
cmp
lahf
je
adc
cli
gs
dec
mov
repz
dec
mov
mov
cld
xor
rcrl
sub
jmp
ret
xlat
shl
iret
mov
je
stos
ret
and
sbb
push
int
pop
rcrl
dec
cmp
and
jp
xchg
xor
jo
and
jmp
sbb
pop
jl
pop
inc
lods
loop
push
ja
aaa
clc
bound
and
jns
mov
jl
test
lods
inc
loopne
testl
inc
add
jl
into
pop
adc
imul
pop
loop
scas
loop
mov
mov
std
insb
and
jns
push
loope
fbstp
mov
mov
mov
mov
into
add
dec
sbb
pop
dec
xor
shlb
jb
xchg
dec
aaa
adc
int3
sub
sbb
cli
xor
or
adc
pop
insl
nop
test
lret
daa
bound
dec
mov
setne
dec
ja
repz
lods
lods
adc
repz
pop
clc
pushl
sbb
jle
inc
mov
mov
jb
data16
mov
leave
and
add
sbb
jae
jae
out
shll
adc
sbb
aas
pushf
dec
in
cs
es
lea
add
cmp
scas
dec
rcrb
fldt
inc
mov
je
outsb
mov
out
iret
inc
popf
mov
xlat
test
insb
push
mov
nop
je
xchg
dec
jl
pop
loope
popf
ljmp
mov
enter
cmpsb
push
movsl
jae
ss
aad
xor
clc
into
mov
cmpsl
xor
enter
pop
mov
xchg
cmpsl
cmp
dec
mov
in
xorl
repz
adc
jl
or
inc
jo
xchg
pop
in
cmc
cld
mov
in
andl
lock
add
xchg
incl
mov
fs
movsb
mov
xchg
cmp
xor
sbb
test
sub
xchg
xchg
mov
and
out
sbb
and
popl
negb
sub
je
sbb
cmp
leave
subl
inc
dec
divb
lcall
int
pop
sbb
or
add
pop
clc
enter
ficoml
enter
mov
mov
mov
loopne
rcl
cmp
jbe
jecxz
jecxz
pop
xor
scas
mov
repz
and
fldenv
xor
push
push
add
ret
sub
mov
clc
or
dec
push
fs
xor
mov
mov
rorl
xor
insl
je
jbe
test
cmc
xchg
mov
sub
jg
testl
xor
xlat
gs
cmpsl
pop
jae
mov
jo
cmpsb
lahf
adc
mov
mov
pop
addl
ret
or
loope
lea
sub
pop
xor
cltd
test
xchg
sub
push
adc
into
insb
lret
rcrb
xchg
lds
mov
pop
in
push
xchg
pop
inc
andb
jne
stos
jmp
cwtl
in
in
fs
and
cmp
sub
lret
inc
inc
adcl
push
in
xor
orb
testl
ficomps
mov
mov
out
enter
shr
pop
outsl
stos
gs
shl
jbe
xchg
inc
dec
cli
lds
jne
push
inc
lahf
jns
pop
lahf
adc
mov
gs
enter
sub
cmc
fcmovnb
jb
inc
outsl
xchg
pop
inc
das
fildl
jno
adc
popa
arpl
das
jns
int3
mov
call
and
xor
mov
dec
into
push
sub
ljmp
scas
cmp
inc
inc
mov
in
mov
sub
or
adc
inc
jecxz
cmp
and
movsb
adc
mov
dec
and
fcompl
loopne
cmp
inc
mov
std
das
es
adc
icebp
push
ror
jmp
jnp
cmp
xchg
cmp
and
outsl
mov
es
loope
and
mov
cmp
cmpb
out
cli
stos
arpl
dec
arpl
stos
aas
xor
rcr
sti
fstps
pop
hlt
cmp
bound
imul
pop
enter
cmp
aad
xor
jno
push
mov
dec
xor
in
es
jmp
cmpsb
daa
in
mov
gs
and
mov
fimull
add
or
push
pop
rcr
fmul
cli
cs
imull
mov
enter
mov
lret
sub
mov
sub
mov
inc
mov
mov
nop
fstl
jns
adcb
stc
repnz
fidivl
fnstsw
pop
pop
jbe
push
pop
jg
outsb
bound
inc
xor
data16
divb
dec
xchg
cmp
pop
cmc
cmp
jmp
add
jl
ret
xor
les
lock
push
cmpsb
mov
negl
jl
adc
ret
das
or
ds
mov
cli
mov
jl
mov
movsl
xor
data16
sub
jp
mov
out
cld
mov
mov
xchg
pop
sbb
rcrb
mov
std
stos
inc
inc
inc
push
and
movsl
cmp
pop
jg
lods
cwtl
inc
inc
push
dec
insl
mov
push
pop
or
add
mov
mov
addr16
xor
addr16
mov
shll
shlb
xor
int3
mov
cltd
movsb
movsl
mov
dec
xlat
hlt
std
icebp
scas
popf
sbb
lock
push
divb
sub
jne
cmp
fmuls
repnz
dec
ror
and
sbb
sub
leave
mov
or
into
mov
fcomi
cli
pusha
mov
mov
loopne
sub
and
orb
cmp
inc
js
adcb
bound
jb
inc
lea
cs
cmp
movsb
cmp
push
addr16
mov
cmp
xchg
jbe
pause
sbb
cmp
cld
cmp
and
gs
jae
rol
int
jg
clc
hlt
mov
dec
xchg
mov
push
in
lock
jbe
and
jne
pop
pop
mov
push
mov
clc
mov
shrb
mov
mov
mov
push
inc
xor
das
pusha
or
cmc
adc
rclb
arpl
jecxz
cmp
sbb
scas
jno
or
add
xchg
lcall
fldl
test
cmp
imul
lods
in
xchg
pop
loop
xchg
dec
dec
sub
jo
inc
lock
test
mov
lahf
or
adc
xor
outsl
cmp
mov
jp
pop
gs
pushf
inc
aas
lcall
sahf
jge
outsl
jmp
lods
push
jbe
mov
jno
mov
sub
inc
inc
mov
push
iret
mov
dec
idivl
ss
mov
dec
stc
cmc
aam
push
mov
dec
insl
insb
push
fwait
test
loopne
push
cmp
xchg
dec
dec
xor
js
mov
adc
aad
sbb
arpl
out
xchg
mov
ret
cmp
inc
add
mov
dec
outsl
icebp
rol
sub
das
insl
loopne
lret
mov
or
ret
fucomip
out
mov
popf
adc
sbb
fdivrl
mov
sbb
icebp
ds
push
xchg
xchg
sbb
jnp
out
outsl
mov
lcall
push
gs
icebp
sti
mov
movsl
jecxz
mov
loop
insb
cmp
or
repnz
sub
mov
aas
add
sbb
dec
inc
push
pop
xlat
stos
jne
jmp
jns
into
sbb
jl
and
ret
push
daa
repz
ja
imul
daa
cmp
popa
call
or
sti
mov
into
popf
rorb
mov
dec
lcall
ds
sub
flds
mov
and
xchg
sbb
push
mov
pop
jbe
into
or
arpl
iret
mov
out
mov
jmp
arpl
mov
jle,pn
jnp
sub
jbe
in
xchg
and
sub
jp
xchg
cmpsl
ret
leave
sbb
cld
jp
cli
ja
les
push
jp
sbb
rcrb
test
xchg
sahf
jb
dec
push
movd
xchg
subl
push
mov
jb
sbb
cmpsl
sub
stos
js
aas
adc
out
fwait
xchg
jnp
lea
loopne
adc
jle
adc
pcmpgtb
sub
push
lahf
xor
ficompl
xor
xor
pop
aam
test
lods
push
mov
fcmovnb
loop
xchg
and
cmp
incl
leave
add
jecxz
std
inc
arpl
dec
iret
sbbb
pop
cs
fnstcw
cld
sub
pop
inc
and
mov
arpl
lea
ret
or
cli
xor
dec
fists
fiadds
shl
lea
stc
ret
xchg
es
std
shlb
inc
mov
fdivrl
iret
and
int3
lret
cmp
or
out
lcall
dec
das
xlat
inc
lock
push
xchg
lea
lea
cmp
in
inc
inc
lret
cmpsb
pop
jge
mov
jbe
add
ljmp
ret
enter
dec
iret
lods
in
and
and
ljmp
dec
mov
lds
aam
xchg
clc
mov
cmp
sub
sahf
aam
push
in
add
pop
and
ret
ljmp
inc
push
lahf
addr16
testb
call
in
adc
adc
mov
jmp
sbb
fimull
jno
and
push
jno
fwait
cmp
imul
out
push
sbb
sbb
push
push
imul
daa
out
outsb
push
push
ret
sbb
pusha
or
jecxz
lock
pop
adc
cmp
ja
rclb
jae
das
xchg
fistpl
stc
movsl
mov
cs
ret
dec
adc
roll
pop
mov
sub
adc
push
and
ret
jne
push
pushf
push
and
pop
bound
outsb
inc
cmp
enter
and
mov
sub
fyl2x
add
loope
lods
add
xor
xchg
cmp
lcall
xchg
cmp
lea
push
scas
cwtl
pop
xor
push
scas
ret
mov
dec
cmovge
ret
addr16
cwtl
cltd
leave
popf
jo
and
fldl
xchg
out
cmpsb
fs
and
out
mov
mov
mov
fsubr
scas
daa
dec
mov
add
and
mov
sbb
dec
inc
push
hlt
mov
out
in
movsb
icebp
pop
fidivrs
xchg
addps
fistpll
add
adc
sti
sbb
and
and
inc
aaa
pop
gs
hlt
aam
rclb
sbb
imul
aaa
imul
repnz
pop
sbb
negb
mov
nop
popf
sub
rcr
shrl
sbb
popa
dec
push
pop
inc
lods
mov
mov
in
icebp
std
loope
rcr
shrl
sbb
popa
dec
push
pop
inc
lods
mov
mov
in
icebp
std
loope
rcr
shrl
sbb
popa
dec
push
pop
inc
lods
mov
mov
in
icebp
std
popa
int
fnstsw
sub
adc
sahf
mov
mov
sbb
dec
xchg
jns
pop
xlat
jns
aaa
cmp
push
js
pop
stc
pop
stc
stos
or
cmp
dec
cli
pop
lret
sbb
mov
cltd
or
dec
pop
stc
mov
mov
cmp
dec
loop
shrb
jns
mov
mov
push
adc
mov
inc
aad
mov
pop
mov
push
jl
or
gs
repnz
lods
xchg
push
imul
inc
es
pop
cli
aam
loope
repz
cltd
adc
push
in
cmp
push
dec
push
movsl
test
sbb
jns
fdivr
sub
xchg
inc
mov
mov
xor
xchg
dec
fs
xor
inc
cmp
outsl
adc
popa
fistpl
aas
outsl
in
xchg
fnstcw
rcrl
pop
jp
adc
cmp
jns
jbe
mov
push
ljmp
orl
int
xor
jecxz
lock
mov
ja
dec
inc
das
fsubrs
mov
pop
push
arpl
mov
cmp
dec
ljmp
mov
cltd
adc
fsts
pop
mov
out
push
pushf
sub
sub
push
cmpb
leave
push
pop
sahf
cmp
popa
ljmp
mov
in
pop
jmp
into
pop
jmp
lods
adc
mov
lods
iret
dec
dec
out
repnz
mov
imul
cltd
or
jp
dec
jmp
mov
cmp
dec
cli
pop
lret
jns
mov
cltd
or
jp
dec
jmp
xchg
xor
mov
pop
popf
or
pop
outsb
xchg
stos
cs
push
xor
cmpsb
mov
push
cmp
and
mov
mov
mov
pop
imul
leave
daa
in
nop
lock
mov
pop
push
movsb
imul
push
ja
lods
xor
in
lods
notb
mov
je
or
dec
mov
sbb
jns
call
pop
jbe
sbb
inc
sbb
lahf
imulb
sbb
or
add
add
adc
rcrl
cmp
mov
mov
cmp
push
pop
ficomps
pop
sub
jecxz
dec
push
in
mov
clc
movsl
dec
xor
dec
insb
fs
push
sub
dec
into
adc
aas
orl
jl
jbe
jle
imul
jae
push
pop
cmp
clc
orb
inc
xchg
lret
roll
jmp
sub
adc
and
movsl
xchg
dec
ret
ja
fidivs
es
ss
mov
or
adc
jne
pushf
mov
mov
adc
adc
scas
std
fnstenv
in
stos
xlat
cmp
pop
popf
sbb
js
inc
mov
dec
jnp
cmp
sub
repz
roll
cmpb
sub
push
movsl
fs
xor
sub
je
push
es
push
cmp
cmp
flds
jl
dec
out
shl
sub
fidivrs
add
xrelease
cmp
cmpl
or
adc
cld
div
lret
leave
xchg
adc
jmp
xor
sbb
adc
std
add
call
pop
ja
adc
loop
mov
imul
cmp
mov
inc
ds
int
and
in
push
xor
lahf
mov
dec
in
lret
mov
or
fbstp
xchg
mov
push
fnclex
ss
pushf
or
les
xchg
push
cmpsb
push
loop
sbb
jo
movsl
mov
notl
gs
out
jb
cmp
icebp
shl
insl
cmpsb
or
sbb
dec
fmulp
mov
out
xor
sbb
xor
mov
ffreep
pop
pop
mov
push
inc
fidivs
xchg
ds
pop
jl
inc
stc
adc
ret
icebp
insb
loop
cmp
mov
and
xor
repz
xlat
sbb
add
test
hlt
lahf
cwtl
ds
xor
jne
rcrb
and
sub
adc
mov
mov
mov
mov
push
popf
int
jns
mov
vmovaps
or
push
push
xor
sub
push
pop
leave
jb
mov
xchg
pop
popf
leave
hlt
loop
push
inc
fidivs
push
xchg
rorb
lret
adc
fwait
insl
inc
mov
lods
xchg
inc
lret
and
xchg
lahf
mov
jne
inc
arpl
or
mov
fcomps
mov
ljmp
cltd
out
xor
sbb
lcall
shll
rcll
cli
xchg
jp
push
cwtl
inc
aam
incb
addr16
jns
adc
cli
or
sbb
pop
jbe
or
out
or
arpl
jbe
push
pop
mov
push
dec
mov
push
mov
out
sub
roll
cwtl
out
jbe
fimull
pop
mov
sbb
mov
add
add
jge
cmpl
fnstenv
or
nop
int3
and
popf
pop
jl
push
imul
pushf
xchg
sarb
add
pop
popf
fwait
test
fisttps
and
mov
cs
inc
jns
data16
stc
push
repnz
jnp
xlat
inc
and
mov
shrb
fisttpl
cmc
adc
xchg
cli
sahf
sub
push
xor
push
dec
sub
lea
push
in
pop
xor
psubsb
test
jl
dec
or
insl
test
pop
aad
inc
lret
add
int
popf
xchg
pop
popa
mov
cmc
push
repz
pusha
test
jecxz
sbb
inc
out
scas
pop
pop
pop
xor
xchg
je
inc
adc
rcl
or
outsl
and
xchg
and
sbb
sahf
add
stc
sar
fwait
sbb
test
pop
adc
inc
push
imul
rcr
lds
push
mov
loopne
loope
pop
in
sbb
cmpsl
adc
and
sarb
pop
push
fidivrl
xchg
fnsave
jmp
loop
cs
aas
pop
pushf
adc
cmc
cmp
pop
cmpsb
rcr
cltd
int3
mov
mov
movl
sarl
sbb
pushl
pop
jl
inc
es
or
inc
loop
push
repnz
int3
cld
fisubrl
aas
les
sahf
and
xchg
push
push
stc
lahf
data16
fld
dec
in
add
dec
dec
adc
pop
jle
lods
jbe
out
cld
rorb
ret
mov
or
nop
mov
fwait
pop
inc
cmpsb
test
adc
mov
hlt
or
push
outsb
scas
popl
mov
popw
and
cmp
repnz
pushaw
inc
mov
psubd
test
imul
mov
and
inc
fisttpll
je
sbb
out
movsl
addb
sbb
jbe
sti
cmp
inc
in
jmp
sbb
imul
je
mov
sub
ljmp
jg
adc
pop
sbb
outsl
mov
push
mov
mov
inc
pushl
mov
adc
ljmp
xor
xchg
rol
loop
mov
in
sbbl
out
jno
imul
or
repnz
cli
enter
jl
lcall
enter
stc
xchg
push
popa
js
fbstp
mov
iret
outsl
and
and
push
repnz
testl
xor
shrb
movsl
lods
dec
push
movsb
fwait
pop
pop
add
imul
ret
aas
cmc
aas
dec
sbb
add
test
fistl
test
cmp
xor
sbb
sbb
rcr
test
aaa
ja
imul
fs
imull
jb
xchg
pop
sarl
jmp
pop
inc
shrb
adc
pushf
or
repnz
fdivrl
adc
popa
jbe
sub
and
arpl
push
data16
sub
lret
inc
mov
mov
loope
subl
mov
mov
mov
push
jge
insl
adc
pop
test
aam
or
inc
shrb
xor
sbb
mov
or
loope
scas
imul
cltd
test
sbb
out
pop
dec
xchg
lods
cmp
divb
mov
into
xor
or
test
cmpsb
cmpsl
out
stos
pop
sahf
adc
stc
adc
xlat
popf
xor
cli
outsl
pop
push
insl
sub
negb
leave
sub
sti
adc
dec
sahf
mov
pop
or
fldln2
jle
into
pop
test
mov
add
mov
sbb
sub
adcb
imul
lret
inc
and
push
rcll
jb
cmp
push
popa
in
inc
les
aad
mov
mov
movsl
ret
adcb
shll
repnz
xorl
aas
lea
jmp
push
arpl
add
and
movsl
out
mov
cli
out
mov
dec
movsb
sbb
sub
push
es
sub
or
gs
addb
lock
imul
pop
and
cli
mov
test
mov
pop
or
lea
xor
dec
andb
fidivrl
cmp
fs
nop
gs
bound
push
mov
jo
in
and
insl
pop
pop
push
adc
mov
pop
lea
mov
inc
cltd
es
cmc
cs
cmpb
pushl
cwtl
push
and
ljmp
call
rolb
mov
fsubl
xchg
jne
push
in
sbb
pop
rorb
imul
lret
xor
scas
xor
dec
pusha
mov
stos
pop
sbb
xor
js
stos
and
adc
popa
cmp
out
out
jae
ss
cmpsl
mov
out
xorl
lret
pop
cmp
and
dec
enter
negb
outsb
mov
rcrb
jge
lret
dec
add
pop
out
fisubs
stos
cmp
in
mov
sahf
mov
jne
or
jae
test
or
jbe
loop
inc
imul
pop
call
dec
mov
aas
outsb
movsl
xor
inc
jno
cltd
movsb
iret
inc
into
or
jbe
add
pop
cmpsl
sbb
add
xlat
int
fsubl
movsl
xor
int
bound
mov
scas
sbb
shrb
dec
callw
mov
jno
bswap
test
in
and
call
out
subb
lock
xchg
dec
sub
mull
shrb
mov
xlat
aad
scas
xchg
lock
xchg
add
in
mov
es
push
dec
dec
jae
adc
mov
pop
hlt
add
ret
mov
mov
js
lock
data16
cmpb
pop
xchg
mov
call
cmp
mov
or
mov
lds
add
xchg
cmp
jbe
xlat
lods
mov
pop
pop
rcrl
mov
es
nop
lret
cmp
ljmp
jbe
call
push
aad
jb
adc
sub
ret
cmc
les
mov
cmpsl
sbb
rclb
mov
gs
adc
test
xchg
or
jge
xchg
clc
ret
jle
int3
cmp
xor
xor
data16
mov
int
insb
and
cmp
push
xchg
pop
lods
mov
sub
into
roll
out
rcr
mov
daa
movsl
jmp
push
in
test
imulb
mov
pop
xchg
in
mov
add
xlat
pop
mov
push
jecxz
out
adc
rclb
jnp
neg
test
in
lahf
loop
stos
lret
in
or
les
movsl
pop
xor
subl
add
pop
cmpsb
cmp
jo
aad
adc
scas
push
movsb
loop
and
push
mov
rcl
aaa
pop
ret
jns
imul
pop
jl
push
pushf
push
ret
cli
lea
push
cmpsl
jg
jl
nop
rcrb
inc
push
fidivrs
jo
push
in
jmp
cmp
push
ja
push
mov
aas
stos
lret
lcall
pop
fisubrl
shrb
repnz
lahf
sbb
mov
repz
lahf
lds
pop
push
xchg
sub
cmp
cmp
and
repnz
cmp
and
and
cld
jne
lods
out
lcall
xor
mov
push
mov
repz
xchg
mov
or
cli
in
and
inc
es
dec
jmp
jle
testb
fcoml
and
ss
inc
mov
iret
push
bound
cli
push
cmp
js
fisttps
jb
cltd
pop
in
loope
cmp
xor
mov
test
mov
loope
adc
int3
adcl
ret
mov
out
rcrl
adc
call
jo
push
sbb
push
movsb
adc
lcall
push
mov
jns
insl
dec
jmp
lods
cld
fwait
jne
jnp
aas
ret
out
push
loop
and
shr
data16
sbb
inc
loop
lret
mov
loope
pop
das
mov
jno
pop
push
push
fs
mov
das
movsl
imul
pop
pop
xchg
sbbb
pusha
lcall
add
cmp
insl
mov
and
in
scas
daa
cmp
pop
adc
sbb
scas
in
fisttpll
dec
int
pop
add
outsb
jno
pop
pop
iret
add
hlt
sbb
mov
mov
lds
cs
adc
sub
cmp
jns
sbb
add
or
icebp
dec
inc
jb
cmp
les
sbb
mov
loope
jo
rolb
cmp
jge
pop
dec
push
jns
sbb
lock
inc
idiv
dec
adc
out
outsb
out
dec
mov
cmpsb
pop
lods
mov
xchg
and
aaa
dec
mov
jnp
aas
popa
adc
pushl
xorl
loop
repz
cli
pop
bound
mov
hlt
leave
in
fmul
inc
xor
mov
cmpl
cmp
jmp
insb
jge
push
adc
test
push
inc
mov
jb
rorb
iret
jbe
icebp
fwait
jns
ja
sub
pop
insl
mov
pop
jmp
push
and
cld
mov
xchg
sbb
lods
add
enter
mov
aam
lret
xor
xchg
and
scas
push
popa
cmpsb
jns
push
test
mov
fwait
add
repz
arpl
xor
aas
rcl
add
or
in
repz
pop
pop
mov
lret
insl
shl
pop
and
or
xor
repnz
shll
adc
in
out
sbb
mov
test
sub
adc
xor
mov
cltd
and
out
mov
test
dec
loop
daa
push
jp
mov
sub
arpl
mov
in
pop
pusha
lret
nop
push
flds
push
out
and
jae
adc
sahf
pop
mov
lahf
cmp
loop
mov
gs
mov
add
add
scas
das
gs
aaa
or
pop
sbb
hlt
ja
lcall
mov
addr16
xchg
mov
stos
sbb
out
inc
cmc
push
add
fwait
mov
mov
sub
sbb
aaa
loop
outsl
out
js
into
aaa
cmp
aam
adc
sub
cmpsb
inc
mov
out
xchg
inc
jns
sub
js
jnp
mov
and
ss
test
mov
test
mov
enter
js
lret
fistps
pop
xchg
mov
clc
stos
enter
pop
adc
int3
or
and
stos
sbb
adc
insb
or
testl
shll
jns
xor
xchg
ljmp
cmpsl
dec
push
inc
out
mov
jecxz
push
fdivr
pop
js
bound
sbb
jg,pt
inc
inc
add
rcr
arpl
mov
mov
lcall
cld
imul
inc
lods
pop
scas
jno
add
cmpsl
xor
int3
xor
sub
xor
mov
pop
popa
shll
popa
xchg
cld
add
xchg
xchg
daa
jmp
jmp
mov
aas
xchg
sarl
dec
mov
adc
and
subb
push
push
outsb
add
and
add
ljmp
or
cmpl
fsubr
test
jmp
mov
lret
and
fisttpl
jecxz
iret
popf
jne
push
xchg
fdiv
sbb
pusha
cmc
adc
nop
gs
dec
fmuls
in
data16
jecxz
push
mov
inc
lret
jecxz
jnp
inc
pop
push
mov
sbb
cmc
test
dec
jg
sbb
jb
inc
arpl
stc
outsb
fadd
inc
jne
and
notb
add
mov
or
sub
jb
or
xchg
outsl
mov
mov
movsb
pop
cmp
repz
stos
cltd
aaa
into
fnsave
push
pop
pusha
cmp
mov
xor
jl
pop
sub
popa
lcall
mov
and
fisttps
aad
xchg
repnz
xchg
sub
je
out
jne
into
lret
insb
data16
mov
xor
and
outsl
jge
mov
lock
pushl
and
push
outsl
je
filds
add
insl
jp
aam
nop
fnstsw
xor
mov
repz
sub
imul
add
ljmp
add
idiv
mov
mov
aad
mov
das
cmc
pop
lds
jo
mov
inc
mov
dec
xor
lret
add
xor
inc
xorl
std
dec
pop
xchg
add
add
aam
lret
aad
cmpb
loop
cmp
dec
pop
dec
pushf
imul
add
jge
pusha
insl
sahf
mov
aad
ret
cmpsl
psrad
adc
mov
lcall
out
imul
cmp
test
inc
push
push
sbb
push
pop
mov
add
popa
pop
cwtl
negb
je
lcall
push
aam
mov
mov
in
jg
mov
daa
hlt
pop
cli
ss
mov
xchg
pop
sbb
in
into
sbb
push
shr
push
mov
pushf
cli
call
aaa
movsb
in
arpl
scas
nop
jbe
popf
outsb
movsl
jnp
inc
aad
xchg
xor
int3
mov
mov
ja
mov
jecxz
stos
sbb
jmp
pop
xchg
mov
in
out
sub
xor
or
aas
pop
adc
and
pop
out
mov
lods
imul
mov
adc
jg
pop
addr16
dec
mov
add
jmp
clc
loop
fists
rcl
clc
pop
imul
pusha
sbb
rorl
fistpll
loop
fcmovnbe
or
dec
movsb
cmp
jno
stos
jp
jnp
add
movsb
cmp
cli
enter
ror
or
repz
testb
cmpsl
in
mov
xchg
addb
cmp
fsubr
pop
adc
push
mov
inc
or
mov
cltd
call
outsl
push
push
mov
or
add
pop
in
loopne
cli
call
addr16
test
scas
loop
jmp
rcr
sahf
xlat
lds
idivl
add
roll
push
jmp
les
hlt
and
lret
cld
xchg
es
mov
inc
lahf
es
or
sbb
pushf
cmpsb
sbb
imul
mov
lock
movsb
orb
dec
xor
popa
or
int3
inc
xor
fsubs
jge
fnstsw
push
and
lret
jo
jmp
push
cmp
xchg
fildl
sbb
pop
out
dec
push
cmpsb
jmp
sbb
out
mov
mov
and
daa
lret
mov
pop
fstl
xchg
stos
xor
xor
into
fs
sbb
push
movsb
cltd
xor
aas
jp
mov
dec
outsl
dec
sub
in
popa
dec
js
dec
mov
lods
or
pop
jecxz
dec
mov
es
inc
cmp
imul
inc
xchg
sbb
cmp
fildll
jae
filds
add
stos
jno
fdivp
mov
xchg
gs
fld
sar
fs
outsb
int
into
push
inc
je
ja
xlat
xlat
sub
dec
ja
aad
jno
fs
sub
mov
fmuls
fsubl
mov
xchg
iret
mov
in
mov
aad
sub
xor
cmp
push
int
aaa
inc
push
jle
jl
pop
fstpl
mov
je
push
jmp
ja
mov
xchg
mov
or
in
push
mov
mov
adc
mov
xor
adc
out
mov
gs
jo
imull
mov
pop
in
mov
sarb
movsl
add
add
cmp
sbb
out
pop
fs
lods
shl
pop
adc
loop
loopne
subb
js
or
sub
arpl
add
push
xchg
in
xor
inc
jae
sahf
cmpsl
jae
mov
lret
in
imulb
sbb
scas
xchg
cmp
stos
add
mov
jne
adc
cltd
or
inc
pop
inc
and
and
repz
clc
shll
and
sbb
jg
in
push
dec
std
xchg
or
jno
cmp
push
outsl
add
bound
into
das
sti
and
scas
in
mov
les
add
push
sub
jne
mov
add
or
xchg
mov
mov
sub
inc
jbe
aaa
test
xchg
add
adc
jecxz
pushf
add
arpl
push
hlt
dec
sbbl
sbb
cwtl
pop
pushf
mov
dec
dec
jbe
inc
sub
icebp
sbb
push
and
addr16
mov
mov
and
fs
add
sbb
or
stos
in
push
inc
add
mov
lret
pop
je
push
test
pop
jmp
cli
sbb
jae
sub
inc
inc
clc
xchg
cmp
out
test
loop,pn
xlat
and
adc
icebp
cmpsb
std
or
movl
or
aam
adc
mov
push
xor
jb
push
jb
div
scas
mov
xor
negb
dec
jnp
mov
rolb
and
sub
pop
jmp
rorl
xor
dec
outsl
daa
adcl
mov
mov
or
lret
xchg
cmp
mov
mov
rcrb
or
push
jb
or
cmpsb
fidivl
and
sub
pushf
out
push
xlat
cwtl
adc
mov
inc
pop
rorb
inc
pop
mov
rolb
sub
pop
lret
jns
mov
cltd
or
jp
dec
jmp
mov
cmp
dec
cli
pop
lret
jns
mov
cltd
or
jp
dec
jmp
mov
cmp
dec
cli
pop
lret
jns
mov
cltd
or
jnp
dec
jmp
mov
cmp
dec
cli
pop
dec
imul
mov
inc
repnz
movsl
push
in
cmc
cmpsb
lds
rorb
data16
inc
push
push
push
and
push
adc
cmpsb
lds
mov
test
xchg
gs
inc
push
push
push
and
adc
inc
in
cmc
cmpsb
lds
mov
test
xchg
gs
push
es
xor
inc
and
inc
xchg
mov
stc
xlat
stos
xor
add
lods
test
cs
inc
push
subl
push
test
loopne
es
sub
jne
sbb
jge
clc
fnstcw
add
pop
sbb
lahf
mov
popa
pushf
ljmp
lret
lret
pusha
fsts
sar
and
mov
iret
in
shlb
int
dec
out
pop
xchg
cmp
jmp
xor
lret
mov
jo
inc
adc
jns
notl
inc
fs
enter
jne
mov
cli
test
or
jg
cmpl
and
xor
mov
aas
pop
shll
ret
inc
es
cmpsb
lds
mov
test
xchg
gs
inc
push
push
push
and
push
adc
cmpsb
cmp
out
rcrb
xchg
adc
jle
inc
mov
push
gs
xchg
mov
movsb
cmpsb
xchg
xchg
hlt
sarb
pop
dec
adc
ja
imul
xor
cmp
cmc
cmp
jecxz
divb
gs
inc
push
push
push
and
push
adc
cmpsb
lds
mov
test
xchg
gs
inc
push
push
push
and
push
adc
out
pop
and
shll
pop
aad
or
aam
js
cmp
or
add
cmp
movsb
movsl
push
dec
sbb
sbb
sub
xor
cmp
mov
stc
adc
ret
das
cmpsb
inc
loop
sbbb
lret
mov
popf
movsl
xor
mov
mov
cmp
inc
int
and
test
fstpl
fst
xor
sbb
sbb
adc
pop
addb
inc
jecxz
jle,pt
fdivrl
and
push
sbb
outsl
cmpb
and
pop
xchg
mov
add
jmp
mov
or
xlat
xchg
add
cmc
lods
enter
aaa
out
imul
addr16
imul
and
test
push
inc
in
jg
popf
rcrb
loopne
mov
loop
inc
ljmp
cmp
and
sub
or
movsl
inc
adc
xlat
xor
xchg
jp
jne
inc
add
jbe
lret
lret
xor
int
push
sbb
jbe
add
mov
mov
les
loopne
or
daa
jecxz
leave
data16
mov
mov
jae
js
push
cwtl
imul
cmc
dec
in
dec
cmp
adc
dec
inc
nop
cmp
xchg
or
xchg
mov
mov
into
aam
xlat
stc
movsl
data16
test
jp
out
ljmp
loop
push
shrl
dec
imul
dec
mov
into
push
fimuls
mov
pop
xor
jle
iret
pop
shlb
sub
or
sub
sub
stc
sbb
xchg
pop
repnz
xor
outsb
add
xor
mov
mov
xchg
cs
lods
xor
adc
or
leave
mov
sbb
xchg
jge
inc
xor
pop
mov
data16
aas
xor
xor
inc
ss
loopne
out
imul
dec
jno
jno
add
out
repnz
lcall
addb
nop
or
mov
jne
and
push
aad
mov
fstpt
div
test
pop
ret
jns
shl
push
lret
jg
insb
test
xor
ret
sub
cmp
ljmp
sub
repz
test
into
sub
pop
int3
cmp
xchg
xchg
aas
repnz
sub
daa
xchg
lods
pop
cmpsl
or
push
lret
mov
out
outsb
push
sbb
mov
mov
sbb
pop
cwtl
jmp
sub
jne
jmp
cld
test
push
jecxz
cwtl
fisubl
mov
add
xor
int
rcr
imul
mov
mov
mov
enter
jmp
dec
pop
movsl
cld
add
pop
cmp
popl
test
ljmp
outsb
loope
mov
sbb
cmp
aad
jnp
outsb
idivb
sahf
sbb
in
adc
pop
and
or
out
repz
sti
add
std
rcrb
lock
ljmp
lods
inc
mov
addb
es
lahf
pop
js
scas
sahf
jne
scas
xor
xchg
add
jns
sbb
jmp
xor
int
imul
iret
cmpsl
ds
or
outsb
idivl
cltd
jge
dec
out
sub
cmpsl
lods
pop
jg
jns
movsl
nop
ss
stc
sti
out
movd
inc
test
lret
mov
mov
faddl
out
int
mov
or
arpl
push
sbb
add
inc
sub
add
dec
jp
nop
lock
stos
je
roll
neg
inc
not
imul
xlat
repnz
dec
fdivs
es
mov
bound
std
push
aas
stos
mov
xor
or
add
sbb
jmp
mov
sbb
mov
aaa
dec
ss
mov
inc
add
adc
sbb
out
mov
push
test
mov
pop
mov
ds
daa
mov
push
in
inc
pushf
lea
movsb
shrb
jl
cmp
jmp
inc
xchg
js
mov
mov
cmpsl
xor
lret
dec
repz
jb
jle
fcmovne
pop
pop
jae
xchg
scas
roll
leave
mov
aam
mov
jecxz
xor
push
inc
mov
mov
jbe
xor
sub
into
push
pop
dec
dec
gs
push
lock
fdivs
stc
mov
arpl
mov
loope
pop
mov
jmp
adc
sarb
jno
cmp
andl
int3
ja
sbb
dec
scas
cmpsb
xchg
popa
lods
jle
or
push
xchg
cmp
xor
mov
sarl
dec
lea
jge
sub
orl
adc
mov
loop
vcvtsi2sdl
sbb
das
lds
out
dec
insl
jle
hlt
test
nop
jnp,pn
dec
pop
movsb
sub
push
jne
jp
ss
mov
push
pop
stos
cltd
sahf
sbb
xor
popl
ds
or
test
daa
jle
xor
add
xor
fsubl
cmpsb
mov
fadds
lahf
popa
imul
addb
xor
sbbl
cltd
sbb
fwait
aas
dec
xchg
mov
popa
pop
rorl
mov
sti
xchg
out
pop
sub
std
nop
mov
divb
inc
sub
ficompl
jle
pop
inc
push
js
nop
xchg
loope
les
inc
push
mov
cmp
xchg
clc
pop
pop
lock
lcall
mov
add
repz
test
dec
inc
sar
adc
sub
mov
push
enter
jl
cmp
sbb
std
mov
mov
les
jge
sbb
or
mov
sbb
inc
outsl
mov
dec
neg
bound
jmp
mov
leave
fistl
test
cmovnp
dec
mov
pop
cmp
or
cmpsb
je
xchg
xor
dec
test
fmuls
call
imulb
lret
scas
fwait
xchg
jae
mov
push
mov
and
fs
pop
clc
mov
mov
icebp
imul
daa
sbb
cltd
les
lret
inc
test
add
push
xor
inc
inc
push
or
dec
gs
repz
push
ficoms
bound
mov
test
clc
or
cmpb
mov
outsb
push
xchg
mov
mov
xor
mov
mov
cmp
bound
test
cmp
test
les
movsb
lret
mov
imul
cmp
sbb
mov
inc
pusha
sub
aam
push
test
cmp
mov
inc
scas
out
movsl
cmp
mov
pop
jmp
movsb
xor
jbe
fwait
testb
mov
test
mov
divb
push
lret
out
sbb
out
mov
cwtl
mov
xchg
repnz
lret
jbe
ret
repnz
aad
mov
mov
xchg
fsub
sahf
scas
cmp
lods
je
adc
push
imul
sub
push
flds
push
and
insl
enter
sbb
pop
ds
loopne
pop
dec
sub
and
cmpsb
insb
push
adc
push
mov
cmp
dec
data16
nop
test
sub
pusha
push
cltd
cs
subb
and
insb
push
fsubr
in
rorl
adc
mov
dec
add
mov
dec
sahf
and
mov
mov
fwait
dec
arpl
out
cmp
mov
movsb
imulb
ret
mov
mov
jmp
int3
scas
jecxz
inc
mov
mov
or
or
call
jns
js
lret
stos
jns
sahf
fwait
dec
pusha
leave
loope
popf
mov
mov
lret
out
adc
mov
ja
mov
inc
jb
pop
aaa
sub
add
sbb
lea
adc
shr
lret
and
mov
ds
dec
dec
sarl
imul
js
sub
enter
insl
or
and
imul
testl
lds
jmp
les
and
lret
in
lds
mov
imul
aaa
ja,pn
outsb
into
xchg
push
in
shlb
pop
xchg
push
decb
xor
or
sti
jo
js
lods
dec
scas
push
shlb
callw
dec
mov
lahf
and
inc
insl
test
iret
push
imul
loopne
pop
dec
icebp
xchg
leave
adc
xor
sub
test
sub
ret
mov
push
and
mov
push
cltd
popf
loope
cmp
mov
addl
jno
or
sub
inc
jo
mov
iret
out
push
cwtl
mov
pushf
mov
js
bound
cli
and
mov
ret
fcmovnbe
out
pop
mov
sbb
in
xchg
mov
les
and
loopne
gs
loop
fs
std
in
in
xor
stc
paddw
mov
jae
inc
xchg
movl
mov
dec
jl
int3
mov
pop
or
mov
cltd
fcoms
xchg
lret
insb
jecxz
inc
lret
jge
sti
rorb
or
fisubs
jnp,pn
and
sub
cmpsl
pop
inc
adc
lret
sbb
inc
push
mov
sbb
add
push
int3
divl
pop
adc
pop
imul
jp
fdiv
push
xor
mov
ljmp
fmuls
push
test
add
or
mov
pop
add
mov
jl
ficomps
sbbb
out
add
in
loopne
sbb
in
xchg
fldcw
xchg
loope
negb
ret
int
loope
sub
out
ja
loopne
push
add
scas
and
push
jge
pop
loope
add
mov
popf
dec
fsts
mov
add
add
leave
mov
pop
jb
imul
xchg
and
xor
stos
pushf
push
add
mov
daa
int3
inc
gs
test
lods
mov
movsb
js
jge
mov
adcb
bound
sbb
xor
popf
push
call
jp
xor
das
sub
cmpsl
jmp
rorb
aas
nop
out
push
fdivrs
cmp
into
xor
push
push
notl
fisttps
out
or
je
cmp
insl
into
or
add
mov
mov
insb
jae
sub
or
mov
ja
dec
mov
cli
movsl
and
movsb
fistpl
push
jl
push
add
fisubl
add
and
add
clc
popf
xorb
dec
andb
insl
je
and
in
imul
add
jmp
jge
lds
xchg
mov
lret
and
jb
out
or
cltd
xchg
orb
cli
hlt
pushf
jecxz
shrl
fidivl
inc
sbb
jle
pop
mov
in
insl
xchg
std
inc
out
or
mov
add
loopne
push
fwait
lahf
add
lcall
test
fwait
nop
inc
pushf
lahf
rcr
or
cwtl
loopne
rcrl
stc
pop
pop
enter
sub
xchg
and
shll
pop
cli
fwait
sub
push
addr16
ljmp
xor
or
sbb
pop
fisubl
sbb
and
subb
stos
std
mov
das
and
mov
rorb
xor
adc
lret
int
out
push
or
repnz
mov
xor
stc
or
filds
mov
xor
xor
pop
bound
push
dec
jl
mov
dec
cmp
mov
inc
movsb
xchg
dec
hlt
jg
xchg
js
popf
in
mov
xor
ja
pop
sbb
add
arpl
mov
clc
daa
fadds
je
mov
pop
ss
jbe
test
sbb
jns
loop
stos
push
mov
mov
insl
rorb
ret
scas
lea
lds
add
xchg
mov
repz
or
dec
xchg
mov
mov
sbb
hlt
rorb
aad
dec
pop
mov
data16
ja
sahf
pop
call
outsb
jae
inc
dec
shlb
dec
lea
test
cli
out
fldl
jnp
cmp
mul
ficoms
mov
push
sub
xor
mov
and
pusha
enter
decb
mov
ljmp
jb
mov
stos
cmp
mov
pop
ss
jnp
les
pop
xchg
add
or
sub
jo
aam
lahf
js
pop
mov
pop
dec
stos
iret
dec
ljmp
lret
mov
mov
fldpi
adc
and
fwait
pop
xor
testb
mov
jl
push
ret
pusha
mov
mov
push
std
ficoms
jg
pop
jle
mov
mov
add
repnz
push
add
push
inc
imul
mov
popa
mov
mov
push
push
gs
pop
sar
or
mov
subb
lds
jnp
sub
cmc
imul
xorb
int3
and
or
cwtl
push
jecxz
loop
cwtl
jmp
cmp
xor
sub
hlt
stos
and
push
dec
fnstcw
lods
pop
sbb
jmp
out
and
mov
fsubrs
fimuls
xor
cs
add
roll
sbb
fiaddl
nop
daa
movsl
imul
cmp
xchg
inc
mov
mov
mov
push
mov
fst
lock
xor
daa
inc
mulb
mov
cmp
jns
xor
ret
inc
mov
or
aas
iret
xlat
insl
push
daa
xor
xchg
and
mov
loope
add
popa
loope
icebp
and
jno
sub
sahf
push
lret
lret
push
jge
xchg
and
push
jbe
xchg
jb
gs
imul
mov
pop
cld
hlt
or
aas
out
out
fdivrl
test
and
jmp
and
sub
jb
cli
ret
les
pop
mov
sub
les
push
sub
pop
push
push
mov
aaa
pop
lds
sahf
roll
test
adc
adc
xor
repnz
scas
mov
pop
fiadds
inc
call
and
mov
xor
in
cmp
mov
jp
in
mov
insl
outsl
and
rclb
arpl
popf
es
clc
sahf
outsl
mov
js
dec
push
mov
add
pop
cmpsb
push
mov
out
popf
or
cmp
ds
enter
cmpsl
pop
outsb
mov
shll
fistl
jae
mov
sub
ror
push
lea
test
cli
lahf
clc
test
es
inc
imul
sub
jmp
mov
pop
out
pop
data16
movsb
cs
adc
sahf
int
aad
loopne
ljmp
push
roll
mov
sahf
jmp
mov
jb
mov
xorl
addr16
mov
ret
pop
pop
mov
in
add
imull
mov
popf
je
or
rorb
in
jb
and
pop
mov
clc
in
add
and
loope
test
pop
loopne
xor
xchg
xchg
int3
add
lahf
push
outsb
jbe
sbb
bound
xor
fldl
fstpl
mov
ror
aaa
shrb
sbb
leave
mov
xchg
stos
and
inc
add
std
mov
aam
inc
in
adc
pushf
inc
pop
dec
dec
push
test
mov
inc
aas
inc
lock
ficomps
pop
sub
fstpl
addr16
in
dec
mov
dec
jae
fsubrs
daa
inc
bt
inc
push
xor
mov
pop
adc
and
hlt
xor
iret
lret
jne
or
cmpsl
add
jg
sti
jg
jo
fsqrt
cli
push
mov
lods
sub
sbb
xor
hlt
in
mov
dec
push
cmp
in
insl
mov
andb
jb
pusha
int
push
sub
pop
into
pushf
pushf
ret
fstpt
pop
jge
or
push
jae
and
cmpb
xchg
adc
mov
nop
dec
adc
cmpsl
push
or
push
pop
mov
stos
jne
movsl
sbb
fldcw
sbb
add
cmpsb
lcall
dec
mov
lret
js
sub
clc
je
ljmp
adc
jo
cmpsb
movsl
mov
push
cmp
mov
leave
lret
push
mov
leave
loopne
pop
xchg
inc
ret
popf
inc
xor
bound
and
jne
jb
mov
loop
sub
subb
loopne
popa
sub
fwait
jns
lock
dec
sbbl
in
das
les
sbb
nop
rclb
cmp
sub
push
mov
sub
out
cmp
lcall
cli
or
mov
out
mov
cld
cltd
das
insl
ret
pop
xchg
insl
or
loope
lds
or
xchg
fstpl
in
jno
mov
aam
push
add
inc
repz
int
cltd
hlt
insb
jno
or
xor
mov
lcall
or
mov
inc
sbb
xchg
inc
inc
mov
lahf
mov
sub
lcall
push
test
int
cmp
xchg
sbb
xchg
cmp
mov
les
lods
jg
cmp
sbb
sub
xlat
push
lea
push
jb
cmc
sti
cmp
aam
cmp
push
xor
cmp
or
jno
insb
mov
cmp
cli
jmp
dec
mov
mov
mov
mov
loop
dec
mov
push
and
movsl
mov
or
xchg
shlb
xchg
mov
xchg
cwtl
aas
and
pusha
jp
jb
or
sub
mov
pusha
push
mov
lahf
xor
sub
pop
push
movsl
xor
mov
cmpsl
stos
ficomps
repz
push
test
mov
mov
push
push
or
and
popf
push
daa
add
add
pop
rclb
push
fcom
dec
das
loop
xchg
icebp
mov
add
pop
cmp
dec
mov
inc
ss
push
into
mov
das
xlat
nop
dec
inc
data16
fnsave
rcr
inc
dec
push
mov
inc
pop
adc
mov
add
repnz
enter
and
push
divl
stos
mov
cmp
lahf
cli
or
xchg
mov
sub
loop
outsl
mov
jge
or
jo
pmaddwd
inc
cmp
clc
push
cmp
cmpsl
cmp
iret
jl
push
cmc
js
lret
mov
mov
cli
bound
cmp
out
ret
mov
xor
jecxz
or
mov
roll
push
mov
push
sbb
xchg
mov
popa
hlt
push
cli
fstps
cltd
aaa
or
jg
cmpsl
cmp
mov
ja
scas
sub
dec
pop
mov
ror
daa
loop
and
popf
pop
jp
ud1
mov
inc
jg
clc
stc
add
test
dec
dec
sti
pop
ljmp
push
push
cmp
dec
inc
mov
hlt
das
test
call
mov
sub
xchg
add
in
adc
loope
roll
in
dec
mov
mov
hlt
gs
push
mov
inc
movsb
jb
and
dec
shr
push
insb
pop
add
rcll
mov
lds
push
or
das
dec
das
mov
out
and
movsl
adc
lds
mov
cmpsl
lret
popa
and
cltd
in
or
lock
das
mov
add
mov
movsl
cmp
mov
pop
movsl
fs
xchg
sbb
mov
xchg
jmp
pop
loopne
push
xchg
popa
lret
scas
xchg
cmp
imul
mov
mov
test
xchg
xchg
inc
jbe
mov
xlat
clc
inc
jae
movsl
ficoms
add
sbb
inc
mov
push
mov
dec
pop
aaa
adc
inc
push
into
push
imul
sbb
daa
call
lahf
xlat
movsb
push
or
jbe
dec
pop
mov
test
fildll
xchg
scas
add
enter
call
sbb
inc
cltd
sbb
mov
jnp,pn
jl
loope
push
out
or
adc
int3
mov
or
jns
xchg
cmp
out
loopne
test
mov
push
pop
cmc
mov
xchg
nop
lods
sbb
lret
xchg
or
mov
in
fistps
mov
or
cmp
mov
out
pop
add
insl
push
mov
xchg
pop
frstor
pop
std
jecxz
jb
xor
sub
jno
jp
test
div
jle
fbstp
mov
nop
je
and
push
imul
sub
jns
xchg
lea
mov
cmpsb
cli
xchg
aad
movsl
divb
gs
inc
push
push
push
and
push
adc
cmpsb
lds
mov
test
xchg
gs
inc
push
push
push
and
push
adc
lds
aad
movsl
divb
fs
es
push
push
push
and
push
adc
cmpsb
lds
mov
add
mov
mov
mov
imul
ja
bound
ss
fcom
jmp
xchg
mov
inc
pop
push
imul
lcall
fdecstp
jmp
jmp
mov
push
imul
sbb
sub
cmp
leave
sbb
mov
mov
idiv
xlat
mov
inc
cmp
and
xor
out
test
push
insb
pusha
and
mov
jp
sbb
jecxz
call
xor
pop
sbb
xlat
les
pop
xchg
mov
out
xchg
cmp
inc
push
push
outsb
jl
pop
adcb
mov
dec
lea
imul
fldenv
mov
inc
add
into
cs
or
lods
fnstsw
leave
inc
cmp
rcll
imul
push
mov
repz
and
push
stos
jl,pn
and
test
fcmovbe
xchg
stc
mov
dec
mov
cmpsb
jmp
ja
dec
lret
inc
jmp
movsb
cmp
sahf
sub
flds
cmp
test
cmpsb
imul
sbb
sub
cmp
jmp
stos
cltd
outsb
test
adc
push
add
imul
cmp
cmpb
jmp
call
sub
cmp
or
adc
and
lods
mov
stc
xchg
mov
neg
pop
adc
ss
push
sub
cmp
leave
jmp
xchg
mov
inc
pop
push
imul
push
sub
cmp
leave
jmp
xchg
mov
inc
jl
hlt
lds
negl
into
jge
push
call
pop
or
xor
or
mov
and
cmp
arpl
dec
mov
ret
imul
dec
and
mov
lds
mov
jge
rolb
lret
xor
insb
ret
dec
add
sbb
pusha
lahf
jne
mov
arpl
roll
add
js
iret
jp
adc
sbb
mov
enter
jo
jnp
bound
out
jb
cld
mov
jbe
iret
xor
xor
es
add
inc
das
jp
jae
cli
xor
mov
pusha
loop
cmp
pop
out
in
js
mov
adc
out
nop
addr16
andl
cmp
add
fcmovnbe
xor
jg
ljmp
sbb
add
clc
addr16
cltd
sub
insb
push
int
sti
mov
sbb
push
sets
repz
js
mulb
fsubl
enter
cmp
ret
scas
pop
sub
inc
movl
les
mov
mov
sahf
je
test
mov
xchg
xchg
sti
mov
loopne
inc
fs
leave
ret
jb
and
xorl
fstps
add
mov
lods
fdivrs
mov
push
or
pop
adc
jae
gs
enter
pop
sub
dec
sub
jl
subl
cmp
pop
adc
pop
test
adc
aaa
mov
js
mov
popa
loope
cmp
jmp
cmp
xchg
and
lds
test
add
imul
push
popf
iret
inc
inc
pop
or
jne
jmp
dec
or
xor
pop
jl
imul
movsb
mov
leave
pop
test
cmovbe
dec
mov
mov
add
into
int3
add
insb
scas
je
sahf
sti
push
mov
fwait
sbb
enter
testl
ret
or
in
and
mov
xchg
jb
mov
scas
pop
mov
in
cmp
ja
sub
jp
loope
pop
jae
and
mov
pushf
xchg
std
push
outsb
mov
xor
mov
mov
pop
adcb
jbe
data16
in
fwait
ja
dec
movsb
sbb
fistpl
lods
mov
int
pop
mov
inc
dec
insl
push
loope
das
mov
out
std
ret
gs
sbb
push
xchg
in
push
mov
bound
sbb
lods
cmp
push
and
out
hlt
fisttpl
mov
shll
add
xchg
out
pop
insb
hlt
sub
fisubs
sub
inc
in
cmc
push
xchg
aas
push
call
pop
movsl
cltd
mov
adc
jmp
pop
test
fsubs
mov
cmc
mov
push
and
mov
ja
push
sub
ja
sbb
inc
or
pop
ja
push
sbb
jnp
pop
ret
das
out
pop
ja
jbe
fsubrl
sub
fistps
out
add
inc
jb
xchg
sub
mov
cmp
pusha
add
divl
inc
aaa
clc
aad
sbb
pop
nop
sahf
jbe
dec
or
sbb
dec
add
mov
test
jecxz
fimuls
mov
cmp
in
pusha
jge
jnp
xchg
add
inc
push
adc
dec
jg
fstpl
pop
imulb
clc
jp
test
mov
popf
loopne
sub
pop
lahf
ret
xchg
arpl
cmpl
ja
in
gs
test
inc
push
dec
ss
lds
icebp
je
dec
leave
fildl
dec
cli
pop
xor
fistps
add
mov
mov
dec
aas
add
fldcw
divl
loop
add
cli
ret
mov
loop
aad
imul
xchg
xor
jg
nop
js
loope
jae
inc
std
mov
sbb
mov
data16
jmp
and
mov
sub
repz
and
cltd
push
out
lods
xchg
xchg
add
sbb
sbb
cmp
sbb
dec
shrl
lret
xorb
lea
dec
sbb
cmpsl
loop
repz
xor
inc
test
jp
outsl
imul
push
mov
xchg
out
loopne
test
mov
jmp
mov
mov
add
add
or
adc
es
add
xor
jno
adc
mov
aad
cmp
adc
pop
sub
adc
aaa
sbb
lahf
xor
push
pop
mov
adc
ja
inc
out
xchg
test
jno
mov
push
data16
repnz
and
and
add
xchg
cmp
ret
lea
lock
cwtl
xchg
imul
outsb
add
pop
and
pushf
pop
and
ds
aas
loopne
xor
dec
ljmp
and
inc
fcmovnu
test
xor
int3
pop
loope
cmpb
mov
fadds
and
in
cli
cmp
adc
mov
lret
pop
ror
lods
inc
xor
cmc
sub
in
pop
andl
push
lret
lahf
sbb
inc
imul
imul
adc
jno
in
mov
mov
movsl
or
js
push
in
repnz
fs
dec
nop
bound
enter
dec
mov
sub
push
popf
in
in
shrb
iret
sahf
mov
hlt
in
mov
cli
dec
sub
shl
xor
outsb
jnp
and
cmp
mov
mov
lods
sti
mov
jp
dec
and
and
clc
ficoms
clc
stos
sarb
divl
rcll
andb
fiaddl
or
pop
push
mov
jae
loop
out
sbb
aaa
aam
mov
repnz
mov
sti
mov
dec
sbb
ret
cmpsl
jno
inc
es
dec
mov
inc
in
loop
jecxz
cmp
flds
sub
dec
add
jle
inc
jle
or
hlt
sub
or
mov
lahf
and
mov
xor
inc
sub
pop
clc
andb
ss
add
gs
enter
mov
push
idivb
xor
addr16
cltd
sbb
dec
ljmp
stc
in
inc
es
movsb
xor
aam
mov
mov
dec
xchg
sbb
stos
mov
insl
and
dec
and
and
xor
xchg
inc
and
and
jbe
adc
add
pop
subl
adc
shl
inc
sarb
inc
arpl
lods
sbb
lcall
aad
je
btc
dec
stc
jns
xchg
cmpsl
mov
and
inc
mov
inc
jo
nop
testl
dec
fnstsw
push
fadd
inc
xor
popf
cmp
sub
pop
loope
inc
imul
xor
mov
xor
xchg
pushf
mov
add
test
mov
inc
sarl
add
inc
outsl
xchg
out
leave
arpl
loop
or
pop
xchg
clc
or
jmp
pop
in
mov
scas
push
hlt
mov
mov
loope
dec
lret
std
lcall
jg
nop
xchg
pop
imul
inc
insl
insl
imul
inc
lret
jb
mov
sub
adc
bound
repnz
test
cmpsl
fs
sub
addr16
filds
push
mov
ja
ds
dec
dec
xchg
or
out
or
xor
cmp
jnp
in
dec
es
or
sbb
jb
cmp
enter
cmpsb
cmp
inc
add
movlps
loop
scas
and
inc
jb
adc
rcrl
hlt
les
out
or
and
or
popf
jmp
push
repnz
xchg
push
jle
lods
inc
int3
or
lock
scas
mov
sahf
adc
xor
cmp
inc
sub
mov
icebp
idivb
dec
sbb
movsl
imul
test
jnp
or
test
sub
sub
dec
xchg
sahf
sub
dec
mov
or
es
shll
xlat
inc
es
jmp
cmp
js
fcomps
cmp
adc
aaa
cmp
cmp
les
data16
jl
mov
ficompl
or
or
leave
fistpll
test
add
hlt
push
pop
mov
scas
stos
imul
mov
sub
xchg
inc
inc
sbb
cltd
jmp
jne
and
sbb
and
and
mov
lds
sub
push
lods
mov
test
xchg
pop
mov
mov
pop
iret
mov
test
inc
popa
sbb
bound
xor
add
int3
add
ret
sarl
jnp
pop
jae
dec
popa
cmp
and
pushf
scas
pop
mov
pop
jo
loope
sub
test
mov
imul
test
pop
cmpsb
je
sub
mov
add
les
dec
gs
jg
into
out
adc
and
je
pop
cmp
mov
clc
fdivr
mov
adc
inc
stos
xchg
lds
shll
ret
push
ret
or
ffreep
cmp
push
jo
lods
mov
test
add
and
les
sbb
push
fcoml
out
clc
test
bound
lock
dec
xor
stos
dec
jo
push
jno
mov
icebp
add
mov
cmp
jg
push
mov
rolb
cmp
mov
jl
mov
mov
ffree
jo
mov
push
pusha
mov
les
pop
or
push
bound
push
data16
aam
out
jns
je
and
jge
shlb
dec
xchg
lock
scas
scas
leave
je
pop
fs
sub
and
mov
rclb
out
jae
or
push
add
jg
call
in
xchg
insb
add
fildll
pop
lods
repz
inc
mov
fsubrl
int
imul
push
dec
mov
mov
inc
loop
mov
dec
xchg
inc
or
fistpl
ss
dec
pop
mov
inc
xchg
mov
cwtl
jb
sbb
insl
inc
or
sub
xchg
mov
ret
sub
jecxz
xchg
jmp
sub
mov
mov
dec
sbb
mov
cmp
pop
push
mov
inc
add
mov
ljmp
nop
repz
std
jno
xorl
mov
jae
lods
icebp
xor
dec
sbb
ljmp
xchg
mov
mov
sbbb
push
pusha
jae
mov
in
repnz
aam
jb
adc
add
scas
fisttps
push
adc
daa
fdivr
mov
jne
stc
mov
add
and
dec
ret
rclb
add
inc
loopne
mov
lret
fisubl
ret
sub
add
adcl
neg
jl
inc
fs
jo
sbb
mov
loope
sahf
mov
in
lds
add
add
test
add
push
mov
or
adc
adc
mov
jp
addl
or
in
ret
gs
rep
sti
push
jbe
roll
push
pop
stos
push
push
lods
cmp
and
cmp
mov
or
xor
cmpsl
cmpsl
blsic
adc
push
out
test
pop
xchg
mov
cmp
sbb
iret
out
or
scas
sysenter
cmp
add
push
insl
or
jns
adc
outsb
scas
into
je
aaa
push
pop
ja
xchg
inc
mov
or
rcrb
mov
sbbb
imulb
pop
push
cmpsl
out
enter
push
dec
mov
in
inc
jbe
mov
inc
xchg
pop
imull
movb
xor
iret
pop
lods
mov
outsl
add
pusha
sub
sub
testl
testb
cs
add
ljmp
add
add
aam
mov
insb
pop
pop
pop
femms
js
int3
jno
mov
adc
xor
dec
in
in
push
mov
mov
or
out
mov
pop
ljmp
mov
inc
pop
int
cmp
ret
mov
ljmp
imul
sub
pop
je
pop
outsb
mov
mov
dec
push
sub
dec
add
adcb
push
sub
dec
sub
jecxz
in
or
roll
pop
aas
shll
fnsave
jo
out
mov
lcall
mov
fidivrs
gs
mov
ret
dec
das
sub
inc
iret
mov
iret
mov
cmpsl
cmp
lods
add
fildll
movsl
fisttpll
dec
jo
es
je
sub
mov
addr16
sbb
leave
inc
fs
cmp
xor
ret
sahf
js
add
add
xor
jbe
mov
sahf
outsb
insb
arpl
js
pusha
jno
push
push
mov
negl
cwtl
lahf
cmp
xchg
jne
fs
pop
cmp
fs
sub
fs
ret
test
add
dec
sub
imulb
and
or
adc
cmp
bound
mov
dec
testl
fmuls
xchg
mov
mov
pop
jmp
fisttpl
pop
xchg
jmp
cmp
fdiv
cmp
test
adc
xchg
mov
fcmovbe
ret
xor
push
pop
fbstp
lods
mov
cmp
jge
inc
aam
cmp
xlat
cltd
xorl
pop
jmp
xor
cwtl
sti
int3
ret
xchg
lods
push
xchg
dec
inc
push
fstpt
in
mov
dec
adc
xlat
roll
in
shlb
and
mov
lret
imul
jae
call
loop
mov
fcoms
jge
xorl
test
lods
cmp
push
jp
lret
cmp
xor
cld
mov
inc
push
xorb
int3
mov
js
jge
lahf
mov
and
fnsave
std
and
bound
call
das
push
add
pusha
cltd
mov
lret
lock
sbb
pop
pop
add
add
sub
dec
pop
cld
jge
mov
pop
inc
inc
lcall
cmp
hlt
stos
xor
mov
scas
cs
adc
pop
out
jle
lcall
add
scas
xchg
or
jno
aas
pushf
test
insb
ja
pop
mov
mov
push
aaa
lret
int3
sti
adc
jmp
cs
aam
insb
xchg
dec
pop
dec
popf
pop
jae
sub
stos
sub
dec
cltd
pop
pushf
add
repz
daa
pop
adc
sub
xor
adc
mov
add
in
add
lret
loop
xor
xlat
imul
xchg
mov
fstps
aas
popa
fadd
push
xor
sub
mov
das
and
jo
jno
push
mov
cmpsl
std
and
out
imulb
cmc
fmull
aaa
cmp
and
and
daa
in
cmp
cmc
xsha256
cmpsb
xlat
jl
out
push
push
adc
sahf
jecxz
fmull
or
aaa
inc
push
clc
mov
sbb
mov
movsl
test
cli
xchg
push
imul
jns
dec
or
movsb
add
push
ja
pop
lret
add
ja
ljmp
dec
push
enter
add
inc
xchg
inc
jmp
pop
xchg
or
xor
adc
sbb
aaa
mov
loope
adc
pop
jl
sbb
xchg
xlat
ds
inc
push
pop
pop
inc
scas
jp
sbb
sahf
addr16
push
sbb
loope
in
insb
pop
movsl
adc
out
mov
adc
es
mov
pop
mov
sar
or
pop
lds
push
push
daa
es
gs
sbb
inc
mov
cmp
pop
icebp
xor
jmp
outsl
enter
stos
in
bound
test
push
aaa
ss
inc
add
push
in
js
inc
test
idivl
stc
out
lcall
mov
test
push
ljmp
clc
repz
xchg
test
fs
jns
pop
ljmp
jb
sub
xchg
or
fs
pop
mov
mov
add
xchg
loop
inc
fwait
ljmp
pop
sbb
jbe
movsb
cmp
jmp
push
repz
les
xor
pop
sti
loope
bswap
mov
das
push
xchg
mov
vpminsw
adc
clc
repnz
pop
fidivrl
xchg
add
pop
stos
sub
popa
dec
mov
pop
cltd
and
mov
out
bound
out
test
ss
mov
sarb
sbb
or
lahf
sub
nop
sti
push
inc
push
mov
sub
std
dec
test
xor
fsubrs
mov
leave
aam
push
pop
popa
and
dec
sbb
cwtl
or
xor
cwtl
or
es
gs
dec
movsb
dec
mov
add
add
cld
notb
push
pop
dec
xchg
jecxz
xor
cltd
jo
pushf
add
jmp
lock
in
arpl
pushf
cld
mov
xchg
popf
fidivrl
xchg
xchg
pop
cmp
mul
pushf
lods
fimull
or
sub
out
fldcw
aad
or
pop
setns
movsl
add
sbb
sub
in
mov
lret
loope
pop
sbb
out
lds
and
push
adc
nop
xchg
sub
push
sub
dec
push
or
jmp
and
clc
sbb
jns
out
jns
push
sbbb
ja
cmpsl
xor
insb
lret
sub
lahf
adc
cmp
aaa
dec
inc
lods
mov
dec
push
rolb
and
pushf
inc
imul
sub
cli
sbb
popf
out
fsub
lock
jno
imul
movsl
out
int3
cmpsb
fsubs
inc
andb
stc
fdivrl
push
add
jp
pop
xchg
sbb
int3
mov
enter
sbb
or
jg
scas
stc
jnp
fldt
push
outsl
loopne
clc
fsubrl
pop
inc
mov
adc
pop
push
sarb
dec
outsl
pop
imull
mov
aad
pop
push
mov
sbb
jp
or
sub
inc
test
mov
cmpsb
jg
xchg
mov
lret
ret
jbe
sub
je
jp
mov
scas
inc
sahf
pop
add
add
mov
sub
mov
push
out
add
orb
ds
xchg
into
sub
movsl
mov
or
ret
push
fdivl
stos
xor
cmp
js
into
push
mov
inc
pop
inc
and
xor
fnstsw
out
add
mov
out
adc
inc
aas
aad
lcall
mulb
mov
push
daa
ljmp
int3
sarb
das
mov
mov
pop
jnp
bound
into
cmp
cmpsb
cmc
jbe
jo
add
test
cmp
mov
insl
fldl
mov
lcall
int3
out
loop
inc
call
xor
movsb
movsb
sub
aad
or
out
int3
jmp
cld
push
repnz
outsb
push
pop
inc
xchg
or
cli
aad
push
imul
dec
insl
cmp
inc
jge
pop
jge
fcoms
pushf
psubusw
xchg
xor
mov
mov
fisubrl
add
mov
pop
add
in
push
xlat
mov
sbbb
mov
jle
adc
xchg
out
pop
push
adc
mov
inc
lcall
xchg
mov
sbb
pop
popa
nop
imul
jmp
cld
mov
jne
inc
insb
shll
fbld
cmpl
cli
mov
iret
out
or
adc
scas
ss
mov
mov
jno
pushl
enter
mov
ret
int
icebp
push
popf
push
repnz
mov
out
sbb
fpatan
iret
insb
aas
int
fisubrs
inc
adcl
cmp
into
sbb
jle
gs
test
jecxz
int
sbb
shlb
cltd
mov
mov
sbb
inc
sbb
call
jb
or
testb
sbb
mov
int3
ljmp
cmp
inc
sub
addr16
mov
push
jno
mov
gs
or
and
cmpb
iret
bound
mov
ja
xchg
inc
and
mov
dec
sub
gs
and
popa
aad
sbb
cli
sub
leave
mov
dec
enter
movsb
xchg
lcall
sbb
jmp
or
pop
lods
fs
js
mov
push
mov
jns
cmpsb
lret
add
lahf
sti
sbb
xchg
jbe
jmp
add
cmovl
fs
les
cmp
xor
sub
fnstsw
xchg
pop
aas
test
sub
xchg
push
ret
aas
pusha
lret
mov
fxch
xchg
dec
push
xor
xchg
lods
cwtl
lds
pop
fstps
jge
sahf
and
jb
frstor
pusha
call
push
nop
lcall
or
call
lret
and
mov
mov
mov
test
add
movsb
xchg
pop
mov
push
sahf
int
jnp
fstl
or
or
sbb
sub
cmp
leave
jmp
xchg
mov
inc
pop
push
imul
push
sub
cmp
leave
jmp
xchg
mov
inc
fstps
jmp
push
sbb
leave
push
jmp
xchg
mov
inc
pop
push
imul
push
sub
fnstcw
stc
cmp
pop
leave
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
in
and
ja
pop
ficoms
scas
inc
int3
push
scas
addr16
and
mov
loop,pn
sbb
push
xlat
mov
aaa
mov
addr16
jns
cmpsl
jle
das
pop
xchg
outsb
leave
testl
orl
mov
fidivrs
nop
dec
sahf
or
cmp
inc
mov
xchg
pop
mov
mov
arpl
jb
push
mov
sub
jl
aas
ds
or
sbb
jae
call
add
or
js
shl
bound
adc
outsb
mov
mov
mov
cmpsb
jle
pop
xchg
ds
or
adc
adc
daa
xchg
aaa
sub
xor
push
jae
inc
jno
sahf
fisubrl
jle
lret
xchg
shl
jp,pt
cmp
stos
adc
repz
inc
call
add
test
loopne
sbb
lea
loop
xchg
adc
fsubs
iret
jb
push
sub
jno
stos
push
pop
hlt
jp
push
stos
std
mov
sub
pop
into
jae
pop
dec
addr16
ja
inc
cmp
test
in
cmp
xor
cmp
push
in
daa
mov
imul
cli
xor
sub
cmp
pop
mov
jnp
mov
je
jnp
xor
lret
fs
sub
dec
aad
cmpsl
push
test
mull
pop
movsb
adcb
imul
mov
push
outsb
cmpsl
jle
dec
xchg
cs
testl
daa
aaa
into
pop
ficoms
scas
addr16
push
outsb
cmpsl
jle
dec
xchg
cs
testl
daa
pop
popa
or
push
stc
popa
add
loopne
cmp
pop
call
jne
mov
fimull
mov
push
mov
cmp
out
jg
jbe
es
xchg
addr16
mov
call
ja
add
xchg
rcrl
cs
xor
adc
mov
xchg
add
xor
setbe
rclb
das
fsubp
adc
out
xor
mov
xchg
pusha
lods
mov
stos
xor
mov
inc
fisubrs
sub
push
push
mov
sbb
data16
loope
sahf
jo
sub
pop
testb
jbe
mov
outsb
sbb
inc
mov
or
jg
push
sub
nop
mov
leave
pop
cmpsl
push
and
stos
fisubrl
negl
incl
mov
jp
jecxz
popf
inc
xlat
repnz
push
movsb
xchg
repz
or
jge
movsb
mov
in
dec
les
popf
inc
scas
outsb
mov
in
mov
sbb
in
addr16
jns
std
movsl
loopne
orl
es
fs
fisubs
subb
rorl
lret
nop
mov
gs
push
dec
adc
lret
inc
out
add
mov
std
mov
in
dec
inc
outsl
ljmp
icebp
xchg
inc
push
fsubrs
enter
mov
mov
divl
in
aaa
scas
push
insl
inc
jl
pop
mov
ljmp
mov
xchg
sahf
jne
divl
push
inc
xchg
mov
jle
xchg
data16
out
dec
jg
stc
lods
lea
cld
adc
mov
pop
jl
call
aas
inc
aas
xlat
or
lock
pop
fs
sbb
xchg
loope
sarl
adc
cmp
push
lds
cld
push
fidivs
stos
fisubl
cmp
cmpsl
cmp
jle
sbb
jns
imul
xchg
shrb
bound
dec
mov
adc
xor
mov
jnp
aam
out
mov
sbb
leave
addr16
xchg
stos
out
enter
imul
xor
aam
in
jecxz
into
frstor
add
mov
add
sub
movsb
xchg
ret
cmp
mov
inc
flds
out
lods
mov
scas
das
inc
mov
cmp
fsubs
mov
pop
movsl
mov
mov
push
mov
cld
js
lahf
mov
xchg
mov
sbb
sub
adc
jle
ljmp
mov
xchg
ja
scas
sub
xchg
shrl
inc
push
sub
cmp
lods
jno
aad
mov
pusha
scas
xchg
mov
lds
dec
xchg
ret
adc
scas
test
test
inc
movsb
roll
cli
fxch
cmc
cld
xchg
push
pop
test
push
aad
orl
addr16
pop
pop
or
cld
pop
sub
jns
adc
outsl
out
rclb
movsl
aaa
pop
lods
xor
out
cmp
cltd
mov
mov
movl
xchg
cmp
jmp
lcall
xlat
adc
incl
xchg
add
xchg
stc
fiadds
adc
mov
test
cmp
fiadds
push
cmp
negb
adc
faddl
xor
inc
or
fnsave
jp
mov
scas
mov
pop
scas
mov
push
push
insl
jle
jae
imul
pop
inc
lock
push
push
int
mov
stos
sub
test
or
xor
insl
fisubrl
xchg
mov
mov
mov
pop
insl
lock
fstpl
add
out
rorb
jae
push
lods
or
rcrl
sub
fs
je
or
mov
stos
cmp
idivb
and
xchg
daa
push
outsb
or
push
out
push
mov
or
rolb
mov
add
dec
popa
sbb
lret
dec
rorb
or
test
push
jl
outsb
push
cli
xchg
mov
data16
enter
out
divl
adc
shlb
ja
into
in
insb
flds
mov
push
in
lds
js
add
clc
sbbb
jecxz
mov
inc
jecxz
push
aas
std
cmc
mov
out
gs
ret
jp
inc
lret
insb
test
leave
ret
sahf
hlt
cwtl
cmp
sub
aad
sar
adc
push
dec
push
in
dec
pop
mov
cmp
std
lcall
movsl
sahf
mov
fcompl
movsb
ret
push
xchg
mov
push
lds
mov
in
popf
mov
pusha
push
sub
pusha
int3
xchg
push
push
mov
sub
mov
or
pop
mov
fisttps
jmp
cmc
add
mov
push
outsl
cmpsb
iret
sarb
mov
adc
addr16
xchg
cwtl
pop
in
rcrb
sbb
mov
aad
and
xchg
adc
inc
mov
xchg
lds
insb
iret
fsubrs
lret
test
xor
loope
cld
pop
test
push
jge
and
add
xchg
mov
add
mov
sub
lcall
mov
lea
push
cld
push
mov
mov
or
adc
ds
xor
in
sahf
stc
jbe,pn
bound
fnstenv
in
xchg
mov
repnz
mov
std
test
xor
scas
cmp
ficoms
scas
sub
and
push
insb
sub
pop
out
inc
jbe
cmpsw
add
cmp
add
cmp
iret
push
je
adc
push
sub
movsb
test
shlb
xchg
cmp
xchg
cmpsb
mov
dec
imul
cmp
mov
sub
adc
ret
push
enter
fisubs
lahf
or
js
jbe
and
imul
add
mov
pop
test
test
fidivs
jae
cltd
out
aaa
xor
sub
add
xor
ds
insl
pmaxub
ds
push
lods
or
dec
push
mov
shrb
mov
adc
dec
inc
push
loope
test
jb
inc
testb
push
cltd
dec
and
mov
in
or
jmp
cld
and
les
outsl
test
arpl
out
ja
push
xchg
mov
negb
sub
cmp
pop
xchg
sbb
inc
jg
lahf
ret
sar
jmp
cmp
fsubrs
inc
dec
iret
test
xor
rorl
mov
dec
lea
pop
outsl
fistl
icebp
and
push
cmp
xchg
pop
push
sub
xor
and
ljmp
jecxz
outsl
cmc
push
gs
fsts
push
incb
push
push
mov
pushf
subb
test
rclb
xor
xacquire
push
popf
or
lret
push
cmp
push
pop
push
mov
loope
je
jne
add
js
jo
loopne
or
int
sub
sbb
sbbb
or
xor
mov
sahf
imul
adc
ss
cmp
aam
arpl
arpl
inc
shll
jge
pop
stos
xorb
pop
lds
aam
dec
or
mov
mov
sub
lock
fists
cmp
out
xchg
push
outsb
mov
xor
stos
fstpt
xchg
ss
lret
loop
rcll
mov
pop
shrb
xchg
jb
in
xchg
lahf
adc
mov
rorl
mov
aam
insl
add
or
call
mov
outsl
aaa
aad
hlt
ljmp
jne
add
mov
mov
xchg
out
inc
add
mov
pop
cmp
ljmp
loope
outsb
inc
mov
fcoms
xorb
adcb
pslld
sahf
lahf
mov
lock
mov
ds
jecxz
xor
cmp
dec
dec
cmc
xchg
nop
pop
test
sbb
mov
lock
std
call
ret
pop
mov
fldl
pusha
imul
sub
mov
ss
callw
jp
in
mov
xor
and
and
popa
outsl
lea
or
cmp
in
jmp
dec
dec
dec
mov
dec
imul
fcoml
inc
hlt
or
cmp
push
cld
sbb
adc
data16
add
enter
loop
fwait
dec
mov
and
fistpll
stos
push
jbe
repz
mov
sbb
pop
adc
xor
jnp
pop
negb
lods
out
jnp
out
inc
jns
dec
push
outsl
cli
sub
inc
xchg
repz
mov
scas
out
xchg
sti
push
mov
and
inc
pop
lcall
add
mov
sbb
movb
add
stc
jp
aas
pop
cmp
inc
hlt
popf
xor
subl
adc
dec
fiadds
scas
mov
inc
in
lea
test
imul
and
inc
inc
or
xor
push
xchg
rcl
mov
xchg
sbb
jp
mov
repz
std
xor
icebp
pop
dec
pop
scas
data16
xchg
sarb
push
popa
xor
xlat
dec
or
stc
int3
jne
js
inc
xor
jge
xchg
or
and
pop
jae
jp
inc
sti
mov
push
clc
test
out
pop
ret
flds
pop
sub
in
pop
xchg
fistpl
or
mov
fwait
outsb
jb
lret
insl
pop
fcomps
fnstcw
jns
push
or
addr16
or
lret
fisttpll
sub
xchg
movsb
jecxz
sub
add
jmp
mov
xchg
push
pop
adc
xchg
sbb
xor
cmp
adc
sbb
jns
pop
lods
hlt
sarb
loopne
iret
fidivl
xchg
loop
fidivl
jmp
xlat
cmpsb
xchg
rclb
imul
sub
aad
pop
pop
mov
ret
into
or
hlt
dec
mov
mov
sbb
sub
mov
push
inc
sub
mov
xlat
xor
pop
or
clc
aad
adc
out
stc
mov
das
mov
sub
adcl
das
pop
sti
unpckhps
mov
cmp
push
sbb
push
push
scas
pop
lret
test
lods
mov
mov
mov
sbb
inc
leave
movsb
push
std
testb
and
xor
fcmovbe
outsb
pushf
mov
gs
in
sbb
and
pop
jle
stc
sbb
inc
cld
clc
icebp
pop
push
pushf
jg
test
xchg
rorl
sar
pushf
bound
das
sub
fldcw
sete
loopne
push
cmpsb
pop
push
scas
dec
mov
shll
inc
addr16
stos
rorl
stos
rcrl
mov
nop
mov
pop
sub
pop
in
jmp
in
inc
xorb
mov
mov
in
iret
xchg
mov
jae
and
sti
shlb
clc
xchg
out
jg
fs
pop
cmpsb
stos
jnp
andl
cmp
loope
push
jbe
xchg
movsl
int
lds
out
in
cmp
sbb
ja
mov
pop
shrb
movl
daa
dec
xchg
int3
jl
mov
ret
push
js
jg
rolb
data16
ja
sub
mov
ljmp
call
sbb
stos
jmp
mov
push
nop
movsl
mov
xorb
dec
hlt
sub
in
cmpsl
sbb
rcrb
cmp
and
lcall
ja
adc
call
shl
pop
sub
scas
stc
and
adc
xor
popl
xchg
fs
mov
sub
out
fcmovnbe
popf
lock
mov
pushf
aas
sbb
xchg
popa
xacquire
pushl
out
mov
add
mov
sub
inc
jbe
xchg
es
in
rcrl
popa
stc
push
mov
jge
in
xor
jge
and
test
and
xor
movsl
hlt
xchg
jae
popf
push
cmp
fwait
push
mov
cmovo
mov
ret
in
push
cltd
fstl
add
lcall
cmp
pushf
int
js
outsl
in
mov
fsubr
lret
and
jb
mov
loop
inc
pop
adc
pop
mov
and
xor
es
lods
imul
mov
mov
fcoms
jmp
jmp
imul
lret
ljmp
cmp
lea
jno
or
sbb
cmp
xchg
imul
insl
ds
loop
cmc
lret
pop
jge
or
xchg
push
dec
xor
ret
mov
lret
out
jo
xor
xor
or
in
in
jne
loopne
sbbl
sub
jno
sbb
jmp
or
xor
and
xor
push
inc
scas
cltd
dec
and
mov
pop
cli
mov
push
dec
cmovge
pop
pop
das
jb
mov
push
push
push
cmp
aam
in
out
fsts
shrl
out
in
xor
scas
xchg
dec
das
cmp
sbb
aas
rol
cld
jns
xchg
ret
or
rclb
cld
das
cmc
pop
out
hlt
and
push
daa
mov
xchg
push
lods
and
mov
pop
jmp
jge
push
add
sbb
in
out
xchg
sti
shlb
push
idiv
pop
xor
pop
xchg
push
into
aam
rcrb
cmp
mov
lea
scas
cwtl
loop
and
inc
and
and
movsl
aas
add
popa
stos
adc
and
arpl
mov
repz
cli
ljmp
xchg
jno
jnp
stc
dec
fwait
fwait
xor
mov
ret
shl
call
cmc
add
push
sbb
in
inc
rorl
jo
out
fs
or
jns
inc
je
into
pop
stc
mov
in
das
addl
popa
push
out
fstpt
mov
repnz
dec
popa
adc
xor
add
sbb
in
pop
enter
xchg
inc
push
lahf
repnz
cmp
dec
adc
inc
pop
mov
int3
sbbl
into
int3
insl
loopne
pop
dec
out
xchg
push
adc
mov
call
jns
push
fildll
imul
lcall
rolb
shrl
lods
dec
ror
add
icebp
call
insb
jecxz
call
sbb
pop
lock
jle
scas
mov
lret
cltd
or
arpl
imul
dec
notl
bound
push
inc
lahf
lahf
and
add
insb
sub
dec
mov
mov
stos
pop
dec
jno
stos
mov
push
jl
xlat
or
ret
xlat
ljmp
dec
scas
clc
rolb
les
cld
lret
stos
mov
movsl
nop
lock
subb
mov
mov
add
adc
test
std
fwait
push
or
add
add
je
sub
dec
out
aad
lahf
push
out
push
aas
push
mov
in
sbb
insl
add
hlt
and
inc
mov
cmp
dec
push
nop
xor
mov
xchg
cmp
jp
fildl
shrb
subb
xchg
push
sahf
rcl
ret
inc
arpl
push
rcr
aas
out
jns
rclb
cld
push
jno
lock
outsl
inc
xchg
dec
mov
dec
sbb
je
xor
in
adc
sub
hlt
sahf
outsl
sbb
ljmp
xor
std
fnstsw
push
sub
hlt
fildl
ror
cmpsl
popa
mov
push
xchg
jmp
sbb
movsl
or
jns
or
cwtl
clc
cmp
outsb
sub
or
pop
mov
cmp
xlat
sbb
jle
inc
imul
fs
or
cmpsl
add
jb
pop
pop
add
xchg
push
xchg
andb
scas
ret
xchg
enter
pop
in
push
incl
jp
pop
push
add
dec
movl
or
dec
inc
mov
jl
mov
pop
sub
push
popa
dec
loop
mov
jecxz
in
aas
mov
fisttpl
insl
mov
data16
adc
and
nop
push
jns
nop
nop
jo
js
xchg
pushf
mov
das
dec
outsl
add
mov
jae
les
pop
mov
mov
or
push
pusha
into
scas
or
dec
lcall
xchg
cwtl
xorl
ret
pop
cmc
mov
scas
pop
cmpsl
sub
cmp
xchg
inc
adc
or
ja
jl
lods
jbe
divb
stos
adc
inc
add
inc
dec
add
idivb
rorl
mov
stos
fidivrs
jp
mov
movsb
inc
loop
in
mov
xor
sub
les
out
inc
push
out
xor
push
test
or
push
mov
repz
push
dec
xor
movsl
xor
jo
ds
push
push
xchg
cmp
test
sahf
cmpsb
adc
lret
cltd
jbe
inc
cs
mov
mov
dec
mov
mov
xor
mov
mov
iret
dec
je
jns
pushl
jmp
not
xchg
lods
lret
jmp
pusha
nop
lds
lock
adc
cmc
sbb
dec
ss
sbb
and
adcb
mov
jge
xor
and
mov
add
fisttpll
lret
loope
xor
add
into
mov
in
xor
jl
pop
adc
adc
out
movsl
inc
stos
pop
std
jbe
bnd
xchg
outsl
pop
in
push
dec
xchg
loope
imul
mov
xor
push
jo
and
fcomps
in
push
pop
inc
aad
test
cli
dec
popa
xor
lcall
cmp
inc
mov
movsb
out
not
and
mov
or
push
std
mov
or
push
int
jo
test
sahf
insb
jae
push
stos
out
lods
enter
decb
ja
fnstsw
sahf
jl
mov
jp
and
cmp
sub
jg
arpl
or
mov
add
push
xchg
push
and
mov
add
lret
test
cltd
adcl
scas
hlt
jbe
xchg
or
push
cmp
add
fwait
cmpsb
cmpsb
shr
cmpsb
imul
ret
aad
adc
xchg
inc
js
jno
arpl
sbb
and
mov
jbe
loop
pushf
adc
fsubrp
jnp
loopne
lcall
movsl
and
sub
fcomip
mov
pop
js
rolb
imul
pop
ja
or
outsl
xor
pop
out
and
add
dec
mov
mov
inc
lret
push
cld
into
sti
int
xchg
shll
adc
push
pop
sbb
xchg
insl
jb
outsb
xchg
inc
jb
inc
int
jge
xchg
sarl
testb
mov
push
mul
sbb
addr16
aas
cmp
inc
aad
sub
inc
loope
data16
xor
inc
sbb
inc
xor
sbb
lahf
and
inc
adcb
daa
les
negl
xor
and
push
popf
or
adc
repnz
and
inc
or
iret
lods
inc
stos
mov
adc
pop
scas
pop
sbb
in
dec
cltd
rolb
xor
or
insb
sti
sub
aam
mov
push
xchg
imul
pop
mov
push
mov
xor
xor
bound
lcall
mov
fidivrl
out
rcrl
and
aas
comiss
rcr
sbbl
outsl
es
mov
and
in
je
jge
dec
mov
in
and
add
shll
loope
pop
inc
aas
int3
inc
bnd
fldenv
popf
sbb
cs
inc
mov
or
into
mov
pusha
test
shlb
mov
jne
xchg
push
pop
dec
and
imul
sbb
repz
scas
fdivrs
data16
xor
adcb
mov
lahf
stc
out
mov
cli
sbb
add
mov
in
xchg
ret
aam
cmpl
jo
push
inc
add
rcll
and
jge
test
xchg
sti
pop
outsl
adc
dec
movsb
push
inc
mov
pop
add
mov
xor
mov
rcrl
mov
pusha
xchg
fcompl
and
add
pop
mov
mov
in
in
cld
push
adc
sahf
push
aad
push
push
mov
mov
or
in
push
sub
jp
cltd
fstl
cli
ret
xor
mov
cmpsl
mov
int3
cmpb
out
mov
in
stos
push
andb
repnz
std
cltd
jns
jg
inc
pop
aaa
xchg
inc
iret
lods
fdivs
and
pusha
mov
xor
aad
aas
xchg
jmp
fs
test
mov
push
pop
mov
loopne
fdivs
aam
xchg
mov
imul
sub
imull
in
or
fcoml
hlt
in
xchg
jne
cmp
imul
adc
cmp
lds
dec
sar
jle
mov
pop
scas
xor
lret
add
jle
sti
enter
dec
xchg
cmp
idiv
jge
xlat
jmp
dec
fisubs
push
movsl
mov
mov
scas
addr16
dec
jnp
decl
les
addb
jle
jb
xchg
dec
jecxz
dec
jl
pop
adc
push
pop
pop
inc
outsl
rcl
push
addr16
aam
icebp
sbb
subl
scas
addr16
push
outsb
cmpsl
jle
dec
xchg
cs
testl
daa
aaa
into
pop
ficoms
scas
addr16
push
outsb
cmpsl
jle
dec
xchg
cs
testl
and
cmp
addr16
push
outsb
cmpsb
jle
mov
jecxz
testl
ret
mov
push
scas
scas
ja
push
xchg
outsb
pop
sbbl
icebp
mov
inc
je
imulb
iret
inc
mov
jae
push
cmc
jb
xchg
push
test
push
movb
notb
add
xor
and
aam
les
data16
xchg
je
adc
movsb
ss
filds
fs
adc
add
xor
and
aam
les
pop
addl
xchg
push
lret
pop
and
inc
cmpsb
cmp
and
iret
inc
pop
pop
push
pushf
sbb
bound
popf
jecxz
das
dec
add
leave
pop
add
and
gs
mov
imul
rcrl
mov
adc
push
jmp
inc
xchg
push
mov
mov
loope
xchg
cwtl
inc
sub
movsl
adc
sub
les
or
je
xlat
xchg
movsb
fldcw
sub
sbb
cld
inc
or
xor
and
mov
sahf
in
movl
mov
cmp
push
loope
hlt
or
xor
cmpsl
loop
sub
adc
cltd
imul
or
inc
je
notb
add
xor
and
aam
les
jg
outsl
xchg
push
test
mov
movsb
aaa
and
add
test
jae
inc
sarl
adcb
arpl
adc
dec
rcrb
scas
pop
mov
jno
pusha
fdivs
pop
test
add
push
in
mov
pop
addb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
popa
ss
addr16
shrb
ja
mov
aad
imul
dec
xchg
add
test
stos
pop
scas
add
jnp
out
jmp
xchg
les
adc
adc
xchg
jnp
push
mov
or
addr16
jb
iret
or
fiaddl
fisubrs
out
xchg
dec
fisttps
cmp
test
loop
mov
mov
fs
in
mov
xchg
fsubs
icebp
mov
xchg
dec
xor
ljmp
sub
cwtl
xchg
movsl
fsubs
shl
xchg
nop
cmp
out
andb
fistps
jmp
test
ret
jne
shr
sub
ret
xor
fcomps
cmp
push
lahf
pop
mov
dec
push
xchg
inc
cmp
and
mov
adc
sti
sub
xor
jecxz
lds
mov
shll
mov
inc
inc
cmp
mov
and
aam
ljmp
mov
jno
inc
add
scas
xor
scas
xchg
push
data16
fsts
jnp
lcall
mov
stos
mov
mov
loop
or
fdivrs
std
push
scas
fstl
or
sub
push
dec
arpl
mov
mov
mov
mov
pop
xchg
or
sbb
cmpsb
test
mov
mov
mov
stos
ds
in
xor
ss
pop
cmpsl
cld
insb
outsl
mov
loopne
hlt
ljmp
mov
out
ficomps
test
imul
xchg
sub
push
inc
imull
add
pop
aam
dec
std
sub
or
push
dec
dec
pop
sub
repz
xor
cs
adc
nop
scas
lcall
pop
push
inc
or
add
rclb
lds
test
cltd
sub
pop
xor
push
roll
push
mov
fdivr
cli
inc
lret
lea
and
lret
aad
push
mov
les
subb
movsl
jle
xchg
imul
and
loope
mov
xlat
jno
mov
mov
cmp
les
lods
xor
and
dec
add
stc
arpl
push
js
out
xor
sub
sbb
in
sub
test
push
lods
mov
test
xchg
enter
outsl
das
movsl
mov
mov
nop
aad
dec
pop
test
cwtl
mov
sbb
rorl
sti
jl
push
inc
xchg
and
or
push
cmpsb
mov
xor
jb
xchg
sti
dec
fcmovu
fucom
mov
outsl
jb
fbstp
movsl
adc
sahf
jo
pop
mov
pusha
dec
pop
sbb
hlt
sub
push
add
addr16
scas
cmc
jno
call
add
icebp
jp
push
out
insl
mov
cmp
clc
dec
testl
jl
aaa
out
cmpsb
scas
notl
das
cmp
data16
xor
hlt
or
jmp
lret
push
or
insl
xor
xchg
xchg
jmp
outsl
out
popa
jb
push
xchg
stc
repz
in
scas
mov
cmc
daa
bound
jae
insb
imul
fmul
loop
dec
pop
data16
sub
fildll
imul
xchg
rcrl
testl
outsl
or
into
push
mov
add
cmp
fsubrs
sub
enter
mov
adc
nop
pushf
xchg
sarl
pushf
lods
xchg
sbb
nop
outsl
lods
and
fsubrl
pop
mov
mov
test
fcmovne
cld
mov
int
xor
mov
popa
aaa
mov
clc
and
lahf
and
inc
sub
mov
lods
enter
add
lock
bound
outsl
clc
and
nop
mov
ffree
inc
inc
jnp
jae
js
movsl
and
mov
lret
jge
into
or
dec
pop
out
push
add
xor
out
pop
add
leave
pop
cmp
add
shr
mov
les
add
xchg
mov
shrb
in
pop
cld
mov
rcr
js
loop
stos
into
push
xchg
stc
mov
mov
push
shl
mov
in
pop
or
adc
pop
pop
in
adc
sub
das
in
cs
repz
sbb
pop
pop
hlt
js
push
icebp
or
insl
jno
insl
stos
clc
mov
data16
sbb
xlat
shlb
daa
xchg
mov
imul
and
mov
dec
or
fadd
int3
arpl
sub
clc
dec
inc
fucomip
jg
mov
dec
xor
out
cld
fidivs
insl
cmpsl
sub
rclb
push
test
mov
jb
ljmp
cwtl
xchg
mov
xchg
cmpsb
inc
not
ss
out
and
dec
add
xor
or
std
push
cmp
xchg
dec
scas
xchg
push
cli
jb
push
sbb
fsubrl
mov
push
push
xchg
bound
mov
incb
add
xchg
enter
cmp
dec
or
fyl2xp1
xor
mov
cmp
shl
push
add
arpl
xchg
cmpsl
xor
divb
repz
lock
or
push
ret
sbb
mov
jae
jae
cmp
and
ss
imul
dec
fnstcw
or
jbe,pt
jnp
push
sub
cmp
movsl
adc
cld
fdiv
outsb
repz
inc
sub
lret
adc
mov
push
jbe
test
mov
loopne
addr16
or
vaddsubps
lret
mov
fldcw
les
and
jl
fstps
mov
dec
data16
pop
cmp
inc
xchg
call
pop
lret
stos
or
push
and
outsb
mov
aas
mov
inc
loopne
dec
notb
leave
xchg
fwait
daa
lods
imul
ja
xchg
dec
sub
xchg
or
out
dec
lcall
cmc
push
cmp
push
in
lock
ja
lcall
inc
mov
jle
call
shll
nop
fs
and
rclb
inc
leave
push
adc
std
add
xchg
in
xlat
fisubs
mov
push
ja
mov
mov
add
movsb
push
outsl
dec
js
pushf
loopne
ljmp
pmaxsw
add
data16
xor
arpl
inc
cmpsl
js
jns
jp
sub
pop
and
dec
enter
mov
cmp
into
inc
loopne
mov
pushf
cmp
ljmp
dec
jbe
push
jns
push
iret
js
imull
or
rorl
sbb
push
mov
test
sahf
push
jo
and
faddl
fwait
add
aaa
add
movsb
outsb
or
ljmp
roll
test
ljmp
cmpsb
lock
leave
cmp
addr16
and
cmc
aas
xchg
push
in
sub
fadd
mov
cmpb
push
leave
xor
aaa
cmc
xchg
sahf
lds
fdivl
pop
xchg
mov
and
stos
rcll
mov
iret
and
dec
cmp
test
xchg
xchg
inc
sti
xlat
push
mov
sub
pop
fstps
adc
sbb
in
outsb
stc
cmpb
push
adc
or
fildl
jmp
insl
gs
clc
jo
into
mov
sub
lret
dec
mov
loope
and
mov
arpl
sub
cmp
mov
jae
push
ja
lret
mov
xacquire
test
push
pop
xchg
dec
sbbb
in
or
inc
ja
pop
xor
cld
pop
shrl
enter
and
pop
sbb
std
ljmp
pushf
push
and
xchg
das
jl
in
jg
xchg
in
cmc
jl
mov
out
cmp
scas
int3
cwtl
nop
sbb
ljmp
mov
dec
leave
xchg
test
add
inc
das
xchg
les
and
or
das
jo
loop
out
mov
and
gs
std
push
fisttpl
inc
fisttpll
cwtl
cld
pusha
lock
cmp
push
pop
rol
arpl
xor
gs
jns
leave
cwtl
es
leave
fildl
mov
adc
and
pusha
cmpsb
js
mov
movsb
sbb
and
lcall
cs
inc
in
mov
nop
sbb
adc
cmp
and
mov
aas
or
out
pusha
jb
out
mov
stos
sub
ror
pop
jp
cltd
cwtl
hlt
pop
push
dec
fxch
fwait
lcall
mov
lret
sub
pop
sahf
clc
lahf
or
jp
jecxz
loopne
cli
icebp
cmpl
icebp
fsubrs
adc
test
cs
push
sbb
ljmp
shrb
push
inc
fcompl
add
movb
ljmp
mov
pop
leave
stc
scas
xor
leave
sub
and
aas
sub
ja
cs
out
clc
mov
fsubs
xchg
and
jne
adc
pop
std
pop
fmuls
int3
xchg
or
add
push
in
scas
movsb
stos
enter
or
lea
mov
mull
lret
mov
ss
out
dec
fsubrl
fwait
bound
and
into
leave
es
les
jbe
push
pop
nop
add
jne
or
add
fldl
mov
lcall
jb
jl
shrb
sbb
stc
dec
ja
je
xchg
mov
cli
enter
sbb
push
jo
or
not
out
jb
fidivrl
in
or
or
mov
sbb
pusha
outsl
cmpsl
jns
mov
adc
sbb
outsl
sub
dec
adc
xchg
das
out
fsubs
mov
pusha
outsl
lods
and
lahf
mov
cmp
fnsave
pop
and
mov
das
je
mov
adc
pop
call
xchg
scas
lahf
jmp
enter
ss
sbb
cmpsl
in
test
decb
das
in
jbe
popa
xchg
mov
push
iret
cmp
adc
aas
sub
inc
adc
jg
dec
inc
cmp
lret
mov
mov
call
lock
lock
xchg
mov
sbbb
fldenv
cmp
xchg
sub
xchg
shl
pop
ljmp
rorl
fwait
xchg
mov
sbb
xchg
add
pushf
mov
xchg
pusha
cmp
roll
adc
mov
outsb
pop
and
dec
scas
test
lods
enter
cld
sti
icebp
cmpsb
les
mov
into
push
cmc
mov
movsb
in
loope
shl
inc
lods
jp
xlat
outsl
cmp
mov
rorb
jp
sbb
xchg
and
not
xchg
mov
icebp
sbb
or
aaa
movsb
pop
lea
movsb
call
sbb
aad
dec
js
cmp
cmp
cmpsb
mov
cmp
repnz
rol
adc
stos
fdivl
outsl
shll
inc
sub
push
xor
xor
jb
ret
pop
out
outsl
xchg
andb
fsubl
test
sbb
ret
inc
inc
jmp
and
movl
push
stc
adc
mulb
pushf
jne
xor
xor
js
push
jle
fistpll
dec
loopne
ret
add
dec
pop
sub
pop
ret
shlb
and
push
test
pushf
fsubp
add
out
fbld
lahf
pop
cmp
pop
push
jne
cmp
or
outsb
orb
out
nop
or
xchg
adc
repnz
sub
sub
push
push
loopne
out
pop
cmp
push
mov
testb
js
mov
jmp
adc
xchg
subb
or
sbb
lods
mov
jp
lret
bound
daa
ljmp
mov
mov
adc
inc
iret
push
or
cmpb
sbb
repnz
xchg
lods
pop
loopne
inc
and
add
mov
imul
into
cmp
jle
xchg
pop
or
push
lods
aaa
lret
lahf
popa
sub
nop
out
ja
repz
sub
push
aas
and
xor
inc
jg
fdivs
push
jl,pn
add
pushf
mov
cmpsl
jp
loope
sbb
in
shll
loope
adc
in
ja
push
les
call
insb
mov
push
jge
test
xor
adc
jle
xor
push
pop
pop
cmp
js
out
dec
pop
aaa
shrb
inc
mov
inc
xchg
outsl
cmp
ret
addr16
cmova
mov
cmp
loopne
mov
jo
or
out
mov
cwtl
mov
dec
adc
imul
fisubrl
pop
or
mov
insb
scas
mov
push
push
jp
jg
jae
cld
jae
adc
fisubl
out
das
or
sub
scas
dec
cmp
push
loop
pop
cmova
gs
daa
aaa
mov
fnstcw
das
pop
sbb
mov
addr16
dec
inc
jne
stos
enter
cmp
pop
aam
adcb
addb
pop
mov
add
lea
ss
cmpsb
pusha
and
add
subl
in
xor
xchg
or
mov
das
ret
fmull
push
jmp
pop
ret
subb
inc
roll
jmp
inc
mov
es
ss
mov
or
hlt
push
mov
mov
fcmove
shll
test
test
mov
mov
add
mov
push
jae
jnp
jno
add
cld
mov
pushf
arpl
fcomps
jmp
jge
mov
mov
mov
mov
push
xchg
outsb
int
and
push
dec
and
rolb
aad
bound
ret
rorl
je
int
xchg
adc
das
inc
test
popa
loop
jmp
iret
negb
sub
and
loopne
inc
add
push
mov
out
sbb
imul
dec
or
lods
sub
pop
addr16
add
in
push
push
xchg
inc
mov
pusha
xor
lock
xchg
dec
adc
inc
loop
add
or
add
repz
call
mov
dec
dec
xchg
lds
mov
clc
mov
stos
push
and
les
add
pop
test
sbbb
popf
fwait
adc
rclb
notl
imul
inc
shl
adc
fistpll
fs
mov
mov
sbb
loop
and
and
dec
pop
jae
bound
xorl
sti
push
mov
aaa
adc
xor
push
enter
jae
add
adc
cld
jo
jns
and
lods
sbb
mov
pop
test
shll
fisubrl
les
cltd
stos
shll
imull
jecxz
and
mov
mov
xor
lds
cmc
inc
add
stc
mov
cltd
push
orl
xor
lret
push
push
pop
popa
or
cmp
sub
mov
les
repz
mov
add
dec
mov
xor
fcomip
inc
mov
adc
into
cmp
cmp
test
dec
dec
dec
dec
xchg
ja
mov
dec
mov
add
add
lods
push
pop
mov
cmp
cmp
nop
inc
int
jle
dec
jg
cmp
fiaddl
imul
xor
xchg
shll
mov
xbegin
das
arpl
xor
xchg
jmp
das
cmp
mov
inc
mov
js
or
or
dec
lds
mov
clc
ret
sbb
or
ja
inc
pop
cmp
jp
dec
es
sbb
and
iret
and
aaa
cmpsl
cmpsl
cmpsl
aam
jno
sahf
sbb
mov
mov
xchg
sti
push
mov
mov
arpl
xchg
mov
pop
in
std
add
xor
cmp
pop
out
in
mov
shll
cmpsl
add
xchg
stos
jno
sbbl
sub
inc
xchg
popf
pop
movb
pusha
movsb
es
ror
std
scas
or
clc
sub
add
aad
and
pop
mov
sub
cmp
loop
lods
jle
sub
aas
pop
xchg
mov
loop
pop
pmovmskb
ljmp
cmp
das
movsb
aam
popf
add
js
rolb
sbb
mov
sbb
xlat
push
arpl
into
std
pusha
jmp
pop
push
cmc
popf
sub
aad
orb
aad
mov
inc
popa
push
je
bound
movsb
dec
test
rol
std
int3
xchg
outsb
call
ficoml
inc
sbb
push
pop
cwtl
push
mov
xchg
inc
into
push
popa
push
inc
fs
int
xchg
rcrb
pusha
popa
jno
outsl
jnp
pop
and
mov
push
and
xor
mov
ret
push
or
test
sbb
add
adc
or
pop
dec
cltd
push
rcr
push
in
or
inc
xor
mov
sbbb
addr16
pop
mov
negl
pop
popa
pop
shll
inc
rorb
je
adc
sbb
jg
cmpsb
sbb
iret
ret
sbb
popa
push
shl
pop
mov
mov
pop
and
inc
xchg
adc
popf
flds
inc
sbb
pop
lret
js
cmp
dec
gs
sub
and
jae
sbb
sub
jo
sub
fst
xrstors
in
pop
loop
lret
mov
jne
dec
and
loop
arpl
mov
inc
out
mov
enter
in
and
or
sbb
in
push
mov
mov
lea
dec
push
mov
push
faddl
mov
or
loope
enter
xchg
mov
fimull
push
inc
push
push
mov
push
pop
or
mov
cmp
jl
test
jns
stos
xchg
or
dec
divl
sub
repz
inc
add
jo
cmp
ret
test
shll
outsl
roll
in
xchg
mov
xor
add
mov
xchg
inc
into
lcall
sub
pop
push
mov
xor
dec
mov
outsl
jle
xor
sti
test
sidtl
adc
add
ljmp
ret
out
in
fwait
out
fstps
sbb
or
adc
fdivrp
aam
or
pop
cmp
mov
stos
inc
fwait
loop
arpl
pop
shlb
jecxz
lds
sti
xchg
shlb
leave
sbb
xchg
jecxz
mov
pop
mov
pop
dec
add
jo
js
sti
mov
push
into
mov
aad
stos
ficompl
inc
pop
stc
jg
push
or
adc
fiadds
in
sbb
setg
sbb
sub
cwtl
outsb
adc
lret
pop
scas
push
icebp
or
mov
nop
filds
arpl
movsl
dec
sub
pop
push
in
stos
stc
push
and
jl
sahf
adc
xchg
add
scas
dec
push
fwait
xchg
stos
int
push
cmp
fcmovb
fs
or
lock
xlat
stos
sbb
lret
xor
mov
push
mov
push
xor
cmp
mov
ficompl
xchg
std
xor
arpl
repz
and
ja
dec
jae
loopne
add
jbe
sbb
fsubrl
sub
ret
repnz
jns
sbbb
dec
arpl
xchg
test
and
int
sbb
mov
insl
push
sbb
bound
enter
loopne
ja
inc
xor
push
xchg
mov
out
and
orb
mov
cltd
add
insb
sahf
popl
dec
daa
lock
xor
leave
ds
jge
add
ret
push
dec
push
ds
loope
push
enter
xchg
mov
inc
loopne
cmp
pusha
jnp
sti
and
xchg
sbb
lock
mov
xchg
sub
push
mov
lcall
sub
lea
inc
movsl
fsub
imul
dec
or
mov
adc
jle
mov
sbb
cmp
sbbb
in
or
mov
sbb
inc
lret
in
mov
jl
sbb
sbb
add
clc
cmp
roll
outsl
add
fsubrl
xlat
addl
lahf
mov
clc
shl
fs
dec
lods
es
loope
cmpsl
sar
adc
inc
imul
sbb
in
and
jmp
sbb
sub
js
jge
test
fwait
xchg
push
inc
cmp
xchg
or
push
out
inc
outsl
cs
xlat
es
out
push
push
cmp
ret
or
push
loope
rcl
lods
in
das
jecxz
inc
stc
lods
cmp
aam
stc
inc
pop
sbb
cmpsb
shrb
pop
jge
loope
xchg
pop
inc
or
push
pop
enter
adc
ljmp
das
or
bound
sbb
push
das
xchg
push
scas
test
bound
dec
and
outsl
rcr
fsubrl
loop
int
inc
cli
hlt
outsl
mov
ret
cmp
repnz
stos
mov
push
cwtl
lret
jns
sbb
aad
inc
mov
inc
aaa
movsl
in
mov
xchg
xchg
sbb
pushf
mov
xor
fs
and
jae
mov
sub
js
sar
lods
add
dec
popa
or
gs
shll
push
data16
imul
lcall
fnsave
pop
xchg
out
jl
jl
int3
mov
dec
sbb
cltd
hlt
xlat
hlt
cmp
lea
ljmp
repnz
enter
or
and
dec
and
mov
jo
and
or
push
aad
in
cmp
and
push
sbb
lock
inc
scas
out
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsb
ss
movb
notb
add
xor
and
aam
les
data16
xchg
push
test
mov
movsl
xor
inc
shlb
notb
add
xor
and
aam
cld
pop
data16
jecxz
or
dec
pop
pop
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
jecxz
das
iret
add
dec
fidivrs
add
add
push
pop
or
push
add
add
and
adc
adc
xchg
add
add
add
add
add
add
add
add
add
push
add
add
xor
and
add
add
dec
add
add
insl
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
rolb
sbb
lret
add
add
add
add
or
roll
add
add
add
and
les
mov
ljmp
add
xor
jecxz
push
add
jne
scas
add
outsb
add
xchg
add
add
add
add
add
add
add
add
add
add
push
add
add
jnp
mov
testb
add
add
inc
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
add
add
add
cltd
add
add
add
cmpsl
add
bound
or
jne
pop
add
add
test
in
cmpsl
add
push
add
add
loope
das
add
add
add
add
add
add
add
add
add
jno
mov
lret
add
add
add
add
in
arpl
cmp
addl
add
add
sub
add
add
xchg
add
add
pop
add
add
add
insl
add
add
add
add
add
faddl
pop
add
add
add
sahf
add
add
add
add
add
add
pop
add
add
add
add
lret
add
add
push
add
add
push
add
add
mov
lret
add
add
add
add
add
out
inc
add
add
add
add
add
add
and
sbb
outsb
add
add
add
or
or
xor
inc
add
inc
add
add
add
add
add
add
add
add
add
iret
add
add
add
dec
add
mov
add
add
add
int
xchg
ljmp
add
add
add
add
add
add
aad
or
add
add
add
add
add
pop
add
add
add
add
add
add
lea
sti
add
movsb
add
mov
and
add
add
pop
add
add
add
adc
add
dec
add
add
add
add
add
or
add
add
jge
jb
add
jle
add
add
add
add
add
add
add
or
add
add
xor
add
add
add
add
add
add
pop
push
add
dec
add
add
add
add
add
mov
daa
add
add
add
add
or
mov
stos
add
add
add
add
add
add
add
mov
or
xchg
pop
scas
jae
icebp
mov
jmp
mov
pop
xor
dec
stc
mov
pop
sbb
fmull
fwait
pop
test
mov
adc
push
scas
jg
sub
mov
ret
lcall
sbb
test
inc
cltd
add
adc
aaa
mov
adc
lahf
cmp
sahf
fstpl
loopne
fimuls
sub
dec
mov
add
sub
adc
add
xor
mov
std
inc
mov
ret
shrl
inc
stos
imul
dec
jecxz
in
fisttpll
pop
pop
fwait
ds
repnz
push
insl
push
rorb
cli
je
pop
inc
pop
rcll
add
pop
lea
xchg
xchg
lcall
ljmp
pop
or
loope
scas
inc
mov
xchg
mov
sub
in
jmp
xor
mov
or
lds
iret
inc
jne
fisubs
adc
sub
cmc
fistl
cmp
xchg
popf
xchg
add
push
mov
jnp
mov
pop
mov
cmpsb
popa
stos
mov
sti
icebp
cld
push
xchg
mov
fistl
pop
mov
fistps
mov
adc
add
lods
leave
xchg
fwait
scas
ss
cmp
add
and
pusha
outsb
jbe
lret
cmp
lods
cmp
mov
data16
into
fs
data16
cmp
push
rorb
inc
inc
mov
iret
int
or
pop
push
mov
jge
push
lea
out
sti
or
repnz
jl
xor
push
fdiv
xchg
mov
pop
inc
xor
out
lahf
shrl
mov
lahf
mov
jbe
fsubrs
adc
daa
lods
or
jbe
in
sub
std
pop
mov
xor
adc
cwtl
jecxz
dec
push
jo
lds
in
xchg
in
and
pop
sbb
pusha
loopne,pn
lea
cs
loop
cmp
aam
cmc
mov
cmpsl
dec
nop
xor
loope
xchg
mov
test
fnstenv
popa
sub
push
test
xor
mov
shll
inc
movsb
lds
inc
push
cmp
pusha
xchg
adc
incb
scas
xlat
add
inc
cmc
xchg
cmpl
mov
dec
lea
outsl
xor
movl
push
movsb
add
dec
enter
xchg
or
adc
push
cld
negl
xchg
repnz
or
sub
inc
int3
mov
fwait
stos
lds
xor
pop
insl
shlb
inc
xor
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
