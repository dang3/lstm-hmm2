call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
and
adc
arpl
add
data16
out
ret
and
repnz
pause
ret
mov
xor
bound
jb
add
inc
and
mov
loop
repnz
loop
mov
rol
push
xchg
lret
jge
adc
pop
int3
push
sub
sbb
testb
mov
inc
jg
add
jp
addr16
js
in
subb
push
mov
jle
pop
out
in
iret
leave
iret
inc
cmpl
into
dec
add
out
into
fidivs
out
addb
outsl
loop
subl
fldl
push
jbe
add
sub
pusha
mov
xchg
outsl
xchg
jg
mov
out
mov
out
dec
pushf
add
mov
cmp
insl
push
sbb
rep
ret
loope
push
ds
lahf
es
push
enter
adcl
repnz
shl
xchg
cmp
scas
out
add
dec
pushf
inc
lcall
ret
or
mov
ss
mov
xchg
or
inc
clc
cmc
mov
inc
sub
scas
stc
push
mov
inc
push
ja
imul
jge
dec
push
push
mov
xchg
negb
stos
jecxz
shrl
push
adc
jb
or
and
cmpsl
loope
addl
fisubrs
adc
adc
xor
adc
push
xor
loop
repnz
repz
ret
mov
xor
bound
jb
add
inc
and
mov
loop
repnz
repz
ret
mov
xchg
test
rcl
lods
fwait
fwait
xor
add
loopne
mov
sbbb
jne
mov
inc
cld
cmp
fldenv
inc
mov
ret
addr16
push
mov
ljmp
xchg
in
loop
or
lret
mov
clc
push
fidivl
lret
jp
xchg
movsb
jns
mov
lret
adc
outsb
daa
into
inc
mov
mov
gs
sarl
add
imul
in
mov
inc
jne
xor
sbb
les
out
lahf
xchg
and
sarb
mov
mov
pop
mov
push
inc
or
sub
out
or
fsubs
add
inc
sub
stc
pop
outsb
decl
shll
and
or
mov
and
mov
aad
inc
jb
jmp
add
adc
sub
inc
fmuls
fdivrs
mov
cli
jg
sbb
out
cmpsb
and
int
mov
inc
int3
mov
jno
jle
push
pop
xor
loopne
in
repz
sbb
sahf
jge
and
movsb
test
sub
adc
jmp
mov
push
mov
jb
pop
push
fistpll
test
lea
cmp
fs
jo
shrb
inc
mov
push
dec
cli
dec
add
or
mov
add
fwait
ret
xchg
insl
das
pop
dec
adc
vmovntps
xchg
jg
pop
jp
das
xchg
je
mov
mov
dec
lret
jmp
mov
lcall
mov
pop
xchg
jmp
mov
pop
jbe
rcrl
out
lods
cmpsl
jbe
push
iret
mov
in
stc
sub
nop
addr16
cmp
push
bound
xchg
fcoms
out
dec
mov
into
adc
lods
xchg
aaa
mov
xchg
xchg
mov
jl
jge
and
adc
or
push
or
in
mov
push
test
orb
mov
jle
inc
call
xor
xchg
insb
gs
fstps
test
jo
adc
mov
aas
mov
add
pop
cmpsl
insb
or
loopne
or
xchg
hlt
xchg
pusha
cltd
xor
pop
xchg
stos
je
inc
aas
and
mov
sti
inc
add
cmp
pop
mov
sbb
dec
sub
adc
ficomps
inc
mov
pop
ret
pusha
lret
dec
fxch
and
mov
je
cmpsl
push
mov
lret
mov
inc
roll
out
pop
pop
dec
roll
or
sarl
aas
dec
pop
inc
sub
movsl
xlat
movsb
cmp
imulb
repz
xor
stos
add
addl
es
add
call
sbb
test
mov
jae
repnz
leave
fidivrs
cwtl
int
xchg
fwait
sub
jecxz
test
mov
mov
adc
enter
xor
push
xchg
js
mov
or
test
insl
mov
mov
xor
in
clc
cwtl
lcall
or
repz
mov
in
insb
mov
mov
cmpsl
jno
mov
insb
cmp
test
cmp
mov
or
rcrb
stos
push
adc
and
in
in
notb
adc
push
adc
jns
mov
fcoml
and
cltd
pop
cmp
ret
scas
dec
and
inc
sub
lret
cmpsl
add
cmp
mov
fsub
jb
or
sbb
jb
popa
and
mov
pushf
lea
xchg
add
xlat
add
mov
dec
stos
add
mov
xor
push
and
inc
sbb
ds
sub
sahf
cmpsl
cltd
lcall
add
aad
mov
xchg
in
xor
shlb
fisubl
add
inc
dec
xchg
adc
push
dec
mov
je
loop
les
int3
out
jl
fsts
aas
push
mov
push
hlt
or
dec
daa
mov
daa
push
sub
sub
sar
push
mov
mov
mov
gs
cmpsl
fmulp
lahf
sbb
dec
pop
mov
or
inc
jb
or
mov
call
rcrb
into
sub
sub
test
cmp
daa
pop
mov
jg
sub
mov
gs
mov
and
or
and
in
lods
ficompl
push
xchg
jnp
or
jb
sbb
mov
and
mov
or
orb
and
movsb
xlat
add
nop
out
mov
jp
mov
mov
lea
stos
js
adc
push
in
iret
ljmp
stc
push
repz
mov
sti
pop
dec
xchg
add
outsl
cwtl
mov
xchg
sub
out
xchg
in
mov
xor
and
loopne
dec
outsb
push
add
mov
inc
push
jo
fildl
ss
imul
inc
in
addb
inc
jo
inc
fstl
cmp
std
aas
sub
fs
inc
cmp
add
push
insb
fstl
popa
into
sbb
mov
add
xchg
inc
enter
xchg
cmp
insb
sub
aas
inc
jmp
jmp
pop
jb
jmp
fucomp
rcll
rcrb
test
inc
jl
mov
jge
mov
roll
push
cmp
ficoml
ja
js
jae
xor
jbe
mov
repz
and
xor
mov
data16
arpl
imul
mov
call
mov
mov
dec
repnz
lahf
jl
or
andb
adc
mov
popf
stos
adc
mov
mov
cmp
pusha
mov
sbb
fwait
cli
dec
insb
add
mov
test
jno
in
mov
or
bound
jb
inc
es
ret
test
add
rclb
je
leave
xchg
ds
mov
push
movsl
cmp
mov
jno
pop
decb
pop
and
cmpsb
aam
adc
push
int
jmp
ret
pop
rcl
movsl
negb
adc
and
cs
and
push
mov
inc
fstl
or
les
jno
iret
inc
fsubrl
xor
sub
jo
daa
cmpsb
repnz
cwtl
inc
js
push
jne
mov
xchg
fmul
outsb
xchg
xlat
popf
dec
or
addr16
mov
test
adc
pushf
aad
adc
fs
aam
in
mov
xor
insl
ret
adc
dec
stos
pop
lret
xchg
or
push
jmp
stos
xor
lods
dec
loop
fistps
fld1
fsubrs
cmp
jbe
cmpsl
jbe
popf
or
lahf
call
dec
mov
or
daa
or
add
inc
pop
inc
inc
or
push
ficoms
pushl
fisubrl
imul
cmp
sahf
mov
popl
lock
in
mov
cmpsb
cmc
out
xlat
push
xor
xor
mov
xor
lods
push
add
push
scas
cmp
mov
inc
aam
dec
lcall
mov
das
mov
cmpsb
mov
xchg
int
pop
in
mov
enter
fidivl
add
popa
mov
pusha
repnz
cmp
jp
adc
std
xchg
ds
popf
mov
mov
add
dec
jp
dec
shll
scas
jno
lret
ss
outsl
in
aaa
xor
lods
sub
pusha
ja
mull
add
ss
xchg
jge
cmpsb
mov
in
push
mov
adc
lcall
gs
push
xchg
call
pusha
pop
sar
out
shlb
sbb
fildll
mov
sbb
sub
data16
inc
bound
fwait
lcall
jmp
mov
pop
out
leave
rcll
mov
int
ss
add
mov
mov
pusha
jmp
testl
jns
inc
clc
imul
jb
fnsave
test
mov
sub
push
repnz
ja
add
lods
insl
dec
rol
xchg
pop
in
test
fstps
jecxz
out
cmp
xchg
in
push
ret
sub
fndisi(8087
fsubl
inc
mov
into
jp
lods
add
imul
inc
imul
ja
mov
pop
xchg
jo
fcomps
push
les
or
iret
popa
inc
pop
sbb
xor
adc
sbb
cs
and
xchg
pop
or
clc
mov
idiv
and
lds
rcrl
pop
pop
inc
std
mov
mov
jne
pop
jp
insl
add
addl
sti
jo
rol
jno
mov
jo
jle
inc
loop
adc
xor
pusha
aas
fdivrl
mov
xchg
mov
sbb
xchg
push
or
fwait
xlat
aaa
in
insl
loope
xchg
int
addr16
icebp
xchg
mov
xor
mov
ret
sarb
stc
int
jmp
rcr
mov
pop
add
dec
cmp
xor
push
dec
loop
pop
call
test
push
sub
ret
jo
mov
cmp
jg
lea
cmp
fdiv
or
jnp
jge
cmp
addb
and
mov
sahf
adc
test
sub
sub
or
mov
cmp
dec
nop
adc
add
jle
mov
int
xchg
fstl
popf
insb
push
pop
adc
or
mov
xor
xchg
mov
nop
mov
rolb
jb
stos
pusha
add
add
nop
std
xor
add
and
gs
xchg
or
es
dec
aas
lret
clc
daa
sti
and
jbe
aad
into
ret
pop
orb
mov
cmp
popf
xchg
xchg
ljmp
sahf
mov
jb
push
shll
movsl
adc
fbld
inc
cld
out
and
push
xchg
sbb
sbb
xor
stc
popa
pop
dec
cmp
xchg
shl
int
sbb
lods
fcmove
xor
mov
xchg
leave
pop
int
cmpsb
pop
cmp
push
inc
aas
dec
std
push
xchg
movsb
xchg
lcall
jl
mov
pop
jecxz
push
rolb
push
push
add
cmpsl
out
add
jge
pop
mov
push
jo
sub
repz
mov
cltd
pop
xchg
lods
adc
pop
out
cld
dec
cwtl
sahf
test
xchg
ds
xor
sahf
jmp
push
lock
movsl
pop
cld
mov
aaa
imul
xor
xor
stos
push
jle
out
jb
call
pop
and
jnp
stos
cmpsb
adc
fcmove
jecxz
addb
ja
out
jmp
pop
xchg
or
mov
mov
cmp
shrb
das
sbb
sbb
out
mov
adc
inc
pop
push
pminsw
sub
aas
fsubs
cmp
outsl
mov
in
lret
les
fs
into
lods
mov
push
test
inc
xchg
iret
dec
popf
call
jnp
and
lock
mov
aaa
push
xor
sahf
push
sbb
dec
aaa
push
push
xor
repz
mov
sti
dec
xchg
adc
lahf
lds
cmp
mov
idivl
stos
shll
aad
xor
lods
push
inc
loopne
dec
shlb
push
pop
lret
out
out
dec
or
and
mov
push
push
cltd
push
push
out
out
or
jo
push
and
int
push
loopne
jmp
sub
mov
jp
xlat
imul
pusha
pop
stos
pop
popf
loope
loopne
cltd
fs
sub
pop
aaa
cmpl
sub
or
repz
xchg
dec
rcll
mov
jnp
mov
jle
jp
push
pop
or
push
lea
sbb
inc
nop
sub
xrelease
cwtl
cmp
mov
outsb
xor
aad
gs
dec
aas
lods
fcom
jne
test
jb
enter
fdivl
ds
ja
pop
and
daa
push
adcb
jge
adc
rol
sub
push
mov
pop
cmpsb
cmp
repnz
andl
inc
inc
add
je
dec
shll
dec
dec
lcall
mov
into
sbb
add
add
push
aas
imul
mov
orl
loop
sbb
sbb
or
dec
imul
lea
inc
jb
mov
adc
bound
add
dec
js
fidivrs
jge
cmp
rorb
dec
cmp
leave
dec
int3
loope
aam
orl
test
push
pop
sub
mov
dec
and
sub
adc
cmpb
leave
imul
add
dec
rcr
les
xor
lcall
mov
mov
int3
dec
push
add
and
sbb
sub
or
jns
jmp
mov
push
push
popf
jl
gs
sub
push
jp
addr16
pop
or
sub
into
pushf
enter
test
inc
mov
and
std
in
or
in
lahf
adc
in
push
cmp
out
pushf
xchg
pop
movsl
fisttpl
stos
push
popf
loope
push
jge
js
cwtl
sub
data16
repz
mov
adc
mov
cmp
sarb
nop
popa
addr16
jecxz
popa
adc
rcrb
jmp
inc
test
dec
sub
mov
fcmovu
sbb
pusha
insl
or
dec
test
rcl
push
call
data16
addr16
hlt
pop
jo
andb
jle
mov
pop
lods
in
fwait
jecxz
mov
push
js
int3
pop
out
adc
sbb
fsubrs
shrb
into
add
and
inc
call
faddl
mov
dec
mov
or
dec
mov
mov
mov
jno
les
out
rcll
cltd
jmp
testb
jb
jg
jl
clc
bound
sub
or
dec
and
loope
rcl
and
mov
neg
std
out
sbb
push
test
pop
inc
sbb
stos
outsb
dec
jne
bound
enter
inc
mov
jo
test
xchg
sub
aaa
ss
sub
lods
test
or
stos
mov
pop
lock
leave
neg
cmpb
fs
cmc
lods
inc
adc
pop
fstl
data16
mov
in
and
pop
repz
jns
mov
jne
mov
add
test
in
repz
and
and
sbb
out
dec
outsl
mov
dec
lds
and
mov
mov
or
in
bound
stc
and
push
add
push
or
fs
js
out
fisttpll
push
cwtl
adc
adc
pop
xor
push
ss
push
lock
push
loop
mov
jmp
jae
mov
sbb
sbb
hlt
lods
addb
mov
sbb
xchg
mov
xchg
das
lret
jecxz
lahf
mov
test
in
pop
pop
dec
xor
popf
int
pushf
mov
sub
adc
fiadds
scas
aas
loop
popa
inc
sbb
pop
add
fwait
mov
cld
pop
dec
cmpsb
and
xchg
bound
ret
jne
rolb
mov
mov
push
mov
adc
repnz
xor
fildll
jle
ret
jo
lods
cld
das
xor
movsb
cmp
mov
push
divl
add
pop
ja
cltd
stc
into
jmp
xor
inc
dec
pop
iret
imul
int
lret
dec
out
leave
mov
sbb
js
push
fs
xchg
push
nop
xor
xchg
fdivrs
les
dec
icebp
dec
inc
fdivl
dec
jb
test
sti
repz
popa
cmpsl
mov
sti
in
jle
sarl
push
ret
incb
mov
jne
fs
sub
mov
aas
cmp
cltd
inc
faddl
lods
xchg
push
daa
dec
or
xor
or
rcrb
xchg
mov
ret
sbbb
mov
aam
loopne
mov
leave
hlt
in
in
jmp
scas
int3
add
daa
jle
inc
xor
mov
jnp
push
cmp
jp
pop
mov
xchg
pop
xchg
lret
nop
lds
jle
pop
pop
xor
or
xchg
aam
enter
add
mov
test
or
shl
addb
xchg
jae
cmpsl
js
dec
mov
jecxz
inc
or
int
mov
lds
mov
dec
mov
jmp
hlt
mov
jbe
mov
adc
cmp
push
lds
stos
and
add
or
inc
not
push
mov
pop
sbb
stc
ror
inc
jp
mov
push
cmp
inc
stc
out
jl
jle
repnz
fsubl
and
jo
ds
and
rcr
mov
iret
mov
pop
bound
subl
pop
out
lcall
push
jno
addr16
xor
or
ss
xchg
lahf
jl
pop
push
sbb
popf
pop
cld
adc
fiaddl
cmp
jns
sbb
xchg
subl
in
ret
lea
out
into
mov
outsb
push
mov
je
andb
inc
push
in
iret
imul
inc
push
jns
outsb
cmp
out
es
std
and
cld
int3
xchg
mov
inc
sub
and
mov
or
loope
inc
adc
add
stc
mov
rcrl
pusha
mov
xor
push
movsb
out
sbb
xor
jno
sub
mov
lret
stos
loopne
mov
js
dec
xchg
lahf
mov
mul
jmp
sarl
lock
cmp
enter
sub
rclb
cs
nop
pop
data16
loope
cmpsb
push
inc
mov
mov
pop
jbe
inc
rcll
or
aam
sub
jl
mov
cmpsb
loop
pop
imul
add
jno
lahf
std
or
leave
mov
jmp
loopne
ret
sub
pop
sahf
sbb
aaa
and
push
ficoml
imulb
mov
sub
sbb
cltd
orl
fwait
test
xchg
pop
add
or
dec
scas
je
andl
inc
and
insb
add
in
dec
pop
push
fcmovne
insl
loop
lock
out
and
add
push
rclb
fs
jae
cld
pop
mov
aad
enter
jl
ja
sbb
jle
test
add
roll
mov
mov
cmp
stc
test
sub
mov
mov
test
jle
xchg
adc
sbb
mov
sbb
iret
lea
or
ja
leave
sbb
mov
std
pop
andb
shll
pop
mov
mov
rclb
sbb
das
scas
aad
or
or
cmc
pop
mov
ljmp
dec
repnz
push
push
push
pop
mov
sahf
cltd
dec
cmp
xchg
add
jmp
gs
xchg
sub
dec
or
out
sbb
data16
in
adc
mov
jle
xchg
cmc
xor
loopne
faddl
jp
cmpb
mov
mov
ja
mulb
js
xor
dec
or
test
bnd
mov
stos
push
vpcomb
push
lods
ret
mov
test
subl
mov
loop
inc
lds
mov
xlat
adc
ljmp
bound
in
or
or
fs
push
and
dec
jle
lahf
mov
es
dec
fwait
adc
jge
mov
push
shrb
adc
es
dec
clc
cmp
jmp
jl
outsb
outsb
aas
xor
stos
jbe
sbb
sti
cltd
or
xchg
mov
shrb
jg
mov
mul
xchg
jl
jnp
sbbl
or
mov
xchg
ja,pt
outsl
sbb
addl
ret
mov
push
sub
fdivrl
xchg
sub
inc
jmp
xor
clc
mov
and
xor
fdivrl
dec
shl
sahf
test
xchg
insl
aad
pop
movsl
hlt
cwtl
pop
xchg
cli
icebp
inc
in
adc
imul
call
pop
popf
lock
cli
mov
imul
push
addr16
rcll
sub
xor
mov
cmp
addb
cld
inc
sub
cmp
lret
test
pushl
or
inc
lret
push
movsl
notl
fists
sub
add
jge
jmp
mov
loope
lods
fbstp
dec
mov
lods
sbb
pop
es
sub
lcall
and
push
lods
aaa
mov
jge
sub
jnp
iret
or
je
lret
jnp
stc
mov
xchg
adc
add
push
sub
add
pop
out
cmp
dec
mov
dec
jne
dec
inc
mov
mov
mov
mov
jne
mov
test
mov
cmpl
cmp
or
cwtl
add
aas
xchg
sub
xor
push
mov
xchg
insl
popf
jo
xchg
ljmp
loope
mov
gs
inc
cmp
mov
in
and
call
lahf
ja
mov
lea
fld
cwtl
jbe
sbb
lret
add
pop
es
lea
nop
sub
mov
nop
psadbw
pushf
cli
lock
les
mov
cwtl
or
sbb
out
in
inc
jne
cwtl
jae
jne
js
mov
push
out
int
push
push
jle
mov
pop
call
mov
rorl
test
test
push
adc
add
inc
and
mov
loop
repnz
repz
ret
mov
xor
bound
jb
add
inc
and
mov
loop
repnz
repz
ret
mov
add
arpl
adc
add
inc
and
shlb
xchg
repnz
jecxz
ret
cmpb
aaa
inc
outsl
push
pop
bound
jae
add
inc
mov
dec
js
loop
test
sub
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
das
mov
dec
dec
xchg
add
jg
xor
xchg
sbb
imul
decl
mov
das
mov
stc
dec
jmp
sbb
scas
pop
mov
pop
out
dec
jmp
das
xchg
aas
loopne
icebp
pop
shrl
and
jno
jns
push
addl
outsl
cltd
jl
pop
stos
cmc
jmp
jp
or
arpl
inc
push
cmp
orps
loope
xor
rcrb
cmc
mov
push
imull
pop
push
mov
inc
pop
push
fildll
iret
clc
cmp
insl
xchg
push
mov
mov
and
xchg
jecxz
bound
mov
cmp
pop
es
sub
imul
aas
rcrb
and
adc
imul
xchg
cmp
jo
mov
push
stc
mov
cmpsb
xchg
push
push
dec
or
xchg
jbe
push
add
aam
in
test
movsb
ficompl
cmp
cmp
jo
mov
cltd
das
mov
out
dec
stc
pop
fldcw
jg
xor
popa
iret
jno
inc
out
dec
mov
cld
outsb
std
jle
or
or
incl
push
insl
iret
jns
or
sub
enter
stc
pop
xchg
or
sbb
cmp
in
sbb
dec
in
jns
add
mov
dec
cmc
dec
loope
mov
jmp
jg
scas
or
pop
out
dec
mov
das
mov
stc
dec
jmp
jg
scas
or
pop
out
dec
mov
inc
cli
clc
xchg
mov
or
sbb
adc
subb
dec
out
imul
push
jo
or
inc
in
jae
push
insb
test
leave
xor
mov
cmc
mov
xor
test
mov
or
dec
jbe
inc
xchg
xchg
jo
xor
jno
iret
stc
mov
push
test
jmp
jae
rol
in
movsb
mov
push
xlat
ror
pop
inc
in
arpl
mov
adc
mov
fidivl
rol
out
lods
daa
pusha
mov
dec
sbb
out
mov
push
arpl
ds
loopne
dec
jno
orb
inc
mov
jl
xor
jle
rcl
fwait
aas
push
rorl
arpl
mov
insb
xchg
mov
in
mov
pop
mov
aas
pop
push
mov
mov
int
pop
jns
mov
mov
jno
xor
bound
out
mov
mov
popf
mov
enter
ret
addl
adc
test
cs
imulb
adc
sbb
inc
jae
jl
jge
jb
pop
mov
cltd
cvtps2pd
in
in
mov
push
test
repnz
xchg
dec
jno
cli
push
pop
ret
or
push
cmpsl
mov
sarl
cmpsl
je
mov
or
xchg
pop
mov
ljmp
xlat
lods
jmp
pop
aas
pop
sub
out
inc
mov
push
out
inc
sbb
stos
popa
outsb
sti
lret
ja
push
stos
dec
cmpsb
xchg
sahf
or
mov
aas
les
aas
lahf
ret
pop
fs
and
mov
mov
mov
jg
out
jmp
jne
mov
sbb
sbb
xchg
addl
pushf
jno
lret
xchg
fwait
xchg
mov
fistpl
test
mov
ret
or
in
popf
pop
pop
cwtl
cld
mov
or
test
and
repnz
or
in
out
sub
cmpl
push
mov
xchg
test
daa
xchg
adc
and
pusha
insl
dec
xlat
lahf
sbbb
sarb
loopne
sbb
fwait
inc
push
add
jb
add
add
lods
adc
mov
xchg
mov
iret
mov
mov
add
out
mov
mov
mov
bound
sarb
mov
in
jecxz
mov
jae
mov
push
inc
cmp
repz
repz
insl
std
scas
and
jo
or
xor
lcall
rep
je
add
xor
add
mov
dec
xor
sbbl
mov
shrl
daa
push
inc
int3
and
cmp
sub
adc
sub
push
mov
fildll
mov
aaa
fsubr
push
sbb
fldz
inc
int
or
mov
push
adc
adc
lock
jnp
and
inc
addb
frstpm(287
cmp
sub
inc
push
scas
shl
and
inc
fpatan
cmp
adc
push
cmp
or
jno
ljmp
mov
mov
xor
jb
lds
jecxz
push
mov
fucomp
out
cmp
mov
adc
imul
out
ret
divl
loopne
filds
xchg
mov
cmpsb
into
loop
js
cmp
jmp
mov
xchg
or
jno
into
mov
aam
pushf
inc
mov
arpl
lods
out
aas
lds
cmp
inc
bound
scas
aaa
lods
mov
cld
jne
xchg
push
and
sbb
pop
idivl
negb
ja
push
and
je
addr16
pop
ret
enter
and
cwtl
push
mov
xor
push
xchg
mov
cmp
mov
test
mov
sbb
mov
inc
push
cmp
repz
movsl
xor
xor
sar
cmp
loope
jp
push
push
jge
dec
jge
pop
cmp
lahf
lock
xchg
cld
incl
shl
pop
in
mov
sub
and
leave
xchg
sbb
jo
sbbb
cmc
add
xor
arpl
dec
aas
insb
or
call
fsubl
and
loop
pop
scas
fidivrs
cwtl
pop
mov
sub
pop
test
std
inc
dec
jmp
jecxz
imul
dec
lret
pop
sbb
pop
lods
loope
sbb
outsb
mov
cwtl
cmc
les
nop
mov
jno
add
lods
or
xchg
aaa
mov
add
shlb
pop
xchg
les
mov
stc
cmp
push
fisttpl
or
pop
push
jecxz
inc
dec
lahf
enter
mov
lahf
cmpsb
and
jno
inc
and
fsubrs
push
ja
xchg
in
cs
xchg
lods
movl
jl
ss
add
jo
std
das
xchg
movsb
inc
sahf
adc
mov
pop
icebp
sti
outsb
or
ret
jnp
sub
pop
lds
or
xor
fstps
push
andb
aam
fildll
roll
xchg
jo
lret
sbb
jecxz
push
ds
add
loope
mov
daa
jecxz
outsl
push
add
js
divl
xchg
or
xor
test
into
loop
shll
sti
mov
cs
and
xor
addr16
adc
rcrb
inc
pop
rol
push
xchg
stc
sub
push
xor
movnti
or
in
call
cs
add
pop
aaa
xor
and
or
mov
popl
xor
cli
gs
mov
mov
xor
dec
fcoml
cwtl
sbb
imul
sub
into
push
outsl
rcrb
mov
cmp
mov
std
into
mov
cld
mov
sahf
js
mov
adcb
cmp
mov
je
in
jecxz
lea
es
pop
or
pop
or
hlt
decb
jmp
pop
jge
jb
loop
jbe
andl
sahf
test
lret
out
arpl
pushf
movsl
in
js
dec
cld
mov
adc
punpckhwd
fcoms
arpl
xor
out
push
mov
push
in
sub
mov
jno
cs
pop
sbb
movsb
cmpsb
loopne
outsl
jl
mov
addr16
fdivs
movsb
je
jge
int
loope
and
mov
push
imul
or
jno
and
pop
pop
fdivrp
cmp
fisubrs
jmp
add
cmp
addb
pop
fcmovnbe
cmp
cmp
xchg
cmp
xor
jmp
ja
adc
repnz
cmp
dec
mov
arpl
addl
or
pop
cmp
enter
in
pop
nop
pop
sbb
push
pop
in
or
or
jo
xchg
loopne
mov
lock
add
jno
push
fcoms
je
and
and
stos
sbb
pop
add
mov
add
xchg
jl
mov
push
fcomp
mov
xor
out
push
push
out
xchg
jge
mov
adc
mov
sub
sar
mov
fbld
sub
pop
push
cmpsb
dec
jle
es
bnd
bound
jbe
pop
push
xchg
xlat
cmc
mov
push
push
ds
int3
xchg
cltd
lds
orl
movsb
arpl
xchg
adc
sti
loope
cmpl
mov
pop
xorb
insb
and
enter
test
fists
xchg
and
mov
fisttps
push
stc
sub
mov
xor
dec
outsb
outsb
iret
xchg
lods
xor
mov
lahf
leave
popa
ss
testb
adc
cmpsl
push
std
mov
fcomps
lods
pop
jbe
jnp
cmp
in
pop
pop
add
sbb
push
mov
lret
adc
inc
lods
frstor
cmpl
mov
aam
rorl
je
jp
cmc
sub
data16
inc
push
fwait
sbb
jmp
inc
mov
fs
and
enter
sub
imul
int
inc
scas
cmp
andl
test
ss
sub
mov
ds
fistl
xorl
inc
test
pushf
pop
cmpsl
push
xchg
xchg
jnp
add
movsb
int3
cli
push
pop
mov
loope
cmp
cmp
inc
cmp
inc
xor
into
sub
lcall
push
adc
xor
and
xor
loop
arpl
pop
inc
cmpsb
fsts
mov
test
cli
and
test
mov
mov
aaa
shll
mov
pop
cltd
jns
mov
xchg
push
mov
cmpsb
jle
xor
jmp
add
aas
jns
test
out
scas
or
out
push
xchg
cs
flds
dec
and
cltd
or
xchg
jno
and
movsl
cmp
out
cmp
lock
mov
lcall
test
enter
lret
or
mov
out
mov
sti
jns
mov
popa
add
imul
xchg
xchg
or
jne
sub
sti
sbbb
jne
insb
xchg
cmp
inc
mov
jp
jb
ret
lret
lret
xchg
sub
dec
inc
xor
sub
xor
lods
stc
adc
arpl
add
dec
icebp
pop
and
xchg
mov
jns
lods
and
enter
cmp
mov
loopne
xor
xchg
mov
xor
outsl
int
and
pop
xor
cmpsl
xor
mov
lahf
pop
push
stos
xchg
out
fistl
repnz
dec
inc
fiaddl
repz
and
sti
dec
jbe
int
cs
mov
notb
hlt
or
or
test
cmc
cmp
in
push
mov
cmp
adc
mov
lret
push
dec
push
pushf
cmc
dec
inc
aaa
sbb
xchg
or
add
ret
test
vcvtps2pd
hlt
jno
shlb
push
ljmp
pop
add
scas
mov
and
gs
shlb
orl
cmc
mov
imulb
or
rcrb
out
test
xchg
popa
call
ret
pop
dec
shll
add
jo
aad
lcall
xchg
cmpsl
lods
mulb
add
jecxz
fildl
pusha
mov
nop
mov
sub
fld
ucomiss
ljmp
pop
fldl
dec
stos
daa
sbb
orb
adc
addl
stc
pop
sub
jl
out
mov
adc
pop
dec
cmp
jnp
push
push
xchg
nop
push
jbe
push
push
cmp
push
push
rolb
aad
negb
xchg
adc
or
lahf
dec
cmpb
jb
jnp
push
xchg
xor
mov
in
sbbb
inc
testl
and
les
sub
mov
test
xor
push
sub
dec
push
push
lcall
adc
aaa
pusha
cmp
adc
scas
push
mov
lods
xchg
inc
mov
mov
mov
ror
add
mov
insl
mov
lea
in
je
aam
mov
pop
cmp
mov
mov
lock
and
pop
xchg
xchg
mov
xor
inc
sarl
mov
sbb
int3
xchg
arpl
shlb
mulb
pop
insl
stos
aaa
fs
mov
fsts
sub
dec
push
addr16
dec
cmpsl
push
stos
cltd
cmpsb
int3
add
call
cltd
sbb
sub
xchg
cli
repz
and
daa
cltd
mov
inc
pop
repz
mov
and
jle
xchg
add
out
pop
enter
inc
scas
mov
sub
ja
xor
or
or
push
mov
jno
inc
mov
mov
out
ja
mov
push
int
or
dec
mov
inc
daa
mov
cmp
shll
sbb
cmp
imul
fdivrl
cltd
xchg
into
ret
mov
xor
shll
push
adc
add
add
push
js
lods
pop
paddusw
xchg
and
orl
out
les
in
dec
mov
ja
sahf
fisubl
fxch
add
fiadds
cmpsb
popf
fwait
xor
test
fwait
mov
int
test
xor
push
push
pushf
outsb
sti
xor
xor
iret
push
out
hlt
jg
mov
clc
lahf
and
mov
in
adc
inc
jns
cwtl
adc
mov
cs
ret
imull
pop
push
shlb
mov
xchg
aam
mov
pop
fs
dec
fistps
sbb
mov
xor
loop
lods
js
int
push
popa
dec
or
adc
shlb
aad
jg
pushl
fs
xchg
mov
mov
out
std
jno
inc
fwait
rolb
pop
xlat
add
out
cmp
push
popf
jo
ret
fsubs
sub
or
push
sbb
mov
fmuls
adc
cmpsb
inc
sub
cs
xchg
inc
add
jae
mov
adc
sub
fcomps
les
in
fs
xorl
fisttps
push
ja
or
inc
jg
mov
or
mov
lea
pusha
jb
sbb
sub
in
push
push
sbb
inc
adcb
test
mov
repnz
ljmp
fcmovu
cmp
arpl
out
xor
push
je
mov
ret
or
mov
std
orl
xlat
out
inc
data16
sbb
and
and
popa
call
orb
sub
pop
xlat
sub
lcall
add
lea
lcall
out
bound
mov
adc
call
fcomps
es
ja
jns
sbb
das
or
push
pop
jge
inc
rcll
cmpsb
and
or
pushf
xchg
push
add
dec
rorb
fiadds
ret
mov
arpl
xchg
scas
repz
movsb
das
and
cmpsb
addr16
sub
cmp
xchg
and
sbb
push
jb
into
leave
pop
cmpsl
das
mov
dec
or
push
xor
sub
add
mov
rcll
out
cs
pusha
inc
or
mov
orl
inc
rcrl
push
jmp
xor
in
jge
xchg
sti
mov
rol
sub
push
ss
cmp
scas
jbe
jmp
mov
cli
or
push
jno
cmp
dec
icebp
push
or
cs
cmp
cmp
dec
pushf
stos
loope
pop
adc
test
pop
xor
inc
outsl
jmp
stc
dec
add
repnz
inc
es
lcall
pop
lock
push
stos
or
ljmp
xchg
lret
enter
outsb
sub
imul
fs
subl
rcrb
shll
hlt
leave
int3
cmp
xor
jb
das
test
jb
mov
popa
or
push
fwait
adc
pop
sub
pop
test
ja
and
pushf
add
add
call
mov
cmp
into
outsb
sbb
pop
mov
stc
lods
push
enter
movsl
popf
lahf
lods
ret
ror
int
mov
push
inc
mov
jne
lahf
pop
cmpsb
cmp
mov
in
pop
inc
push
or
mov
inc
cmp
int3
inc
and
mov
scas
add
dec
or
inc
pop
in
mov
add
push
out
mov
jle
pop
sub
jbe
cmp
popl
insb
pop
testb
scas
push
jnp
xchg
inc
psrlq
mov
cmpsl
dec
dec
pop
inc
push
scas
mov
push
add
cmp
inc
and
jmp
iret
sbb
pop
mov
mov
ret
imul
cs
jle
inc
movsl
mov
mov
es
add
mov
shll
sub
dec
mov
cmp
mov
mov
jl
jnp
popa
jg
dec
pop
pusha
inc
sti
xor
mov
inc
pop
push
dec
push
aas
cld
ss
mov
cmc
daa
and
insb
pop
adc
mov
hlt
adcl
jnp
pop
mov
mov
daa
fcompl
scas
loope
or
jg
push
dec
mov
cmp
mov
aaa
xchg
mov
popa
std
mov
sub
sbb
jnp
mov
xchg
incl
push
cmpsl
mulb
arpl
inc
adc
mov
and
psllq
pusha
js
outsb
dec
gs
rolb
push
jecxz
orb
aaa
pop
or
in
and
int3
inc
xchg
mov
mov
lcall
mov
xchg
mov
push
popf
jmp
ds
sahf
negl
hlt
xlat
mov
pop
mov
push
pop
sti
pop
popf
dec
nop
sbb
mov
ret
bound
mov
inc
mov
jb
es
pop
in
pop
push
jmp
and
sub
mov
pop
mov
test
lods
mov
or
cld
jno
outsb
cltd
addr16
pop
push
or
mov
roll
pop
push
sbb
xchg
cmp
sub
decl
xor
lret
inc
lock
adc
addb
jecxz
inc
sub
in
jae
push
mov
cmp
jecxz
daa
mov
rorl
pop
inc
xlat
and
outsb
out
nop
jle
mov
sub
aad
mov
sub
stos
popa
sbb
shlb
mov
dec
cwtl
fistpl
mov
mov
push
mov
lret
xor
xchg
insb
add
jno
mov
jecxz
xlat
mov
and
mov
sbb
mov
outsl
push
dec
pop
imul
fcomi
fdivp
sbb
dec
mov
inc
int
fs
js
iret
and
jne
push
aam
sbb
mov
push
mov
les
jmp
aad
add
dec
xor
les
imul
enter
stos
hlt
mov
ss
or
repnz
test
pop
jae
adc
push
pop
fdivrl
dec
pop
sub
shr
push
jne
shlb
gs
mov
es
scas
dec
xor
je
mov
push
icebp
lret
and
pop
lods
pop
xchg
cmp
mov
clc
or
ret
push
push
sbb
test
dec
mov
push
ja
ds
push
movsb
mov
xchg
mov
adc
mov
xor
out
xchg
add
cmp
jl
cmp
lds
cmpsl
aaa
test
lcall
or
push
dec
sbb
pop
sub
xchg
sub
dec
sbb
test
loope
mov
and
out
xchg
cmp
fdivrl
jbe
aaa
adc
push
in
or
sbb
clc
aaa
push
int
dec
mov
xchg
sub
jl
out
cmpl
or
adc
xchg
sbb
mov
hlt
jl
pop
mov
pop
imul
mov
je
lahf
pop
and
fimull
test
fmul
cmc
mov
loopne
adc
ret
and
gs
inc
push
push
ja
lret
jo
jp
cmp
dec
pop
mov
pop
aam
mov
loope
scas
cltd
iret
fwait
adc
imul
scas
sahf
fistpl
cwtl
dec
gs
hlt
call
fbld
sbb
inc
repnz
es
daa
xchg
push
jecxz
mov
cmp
add
das
xchg
sub
mov
xor
movsb
int
xlat
cmpsl
jne
adc
sub
and
jno
jb
iret
aam
pop
lret
sarb
push
xchg
flds
jmp
sbb
add
rcr
faddl
mov
or
out
add
mov
xor
or
sub
loopne
out
arpl
rcr
loope
data16
sbb
in
ja
mov
rcrl
or
shlb
or
inc
ljmp
scas
into
jmp
gs
adc
jl
rcll
imul
cmp
sbb
mov
jg
jle
add
cmpsl
sub
push
fsubrs
stos
xchg
push
mov
scas
add
inc
cmp
mov
shlb
sar
idivl
cli
adc
mov
push
imul
test
mov
inc
icebp
test
and
mov
add
enter
ficoml
loopne
shl
mov
or
adc
add
ret
bound
outsl
xchg
in
fs
fwait
into
fcomp
popa
js
pop
mov
push
fisttpll
push
mov
xor
jbe
sub
ljmp
pushf
sub
cmp
add
sar
add
es
lds
jbe
xor
or
push
in
js
push
sub
mov
pop
not
sahf
push
orl
imul
add
jbe
test
push
push
mov
xor
bound
in
rol
sar
outsb
cwtl
movsl
sub
inc
lret
xchg
sub
or
pop
dec
ljmp
dec
jmp
jg
scas
or
pop
out
dec
mov
das
mov
stc
dec
jmp
jg
scas
or
pop
out
dec
mov
das
mov
stc
dec
jmp
jg
scas
or
pop
out
dec
mov
das
mov
sti
dec
jmp
mov
mov
or
push
inc
loope
cmpsb
adc
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
pop
les
or
sub
sarl
mov
sti
shr
lret
loope
sbb
add
xor
and
push
jnp
imul
dec
sarl
mov
cwtl
movsl
cmp
fndisi(8087
lret
lret
and
adc
or
inc
cltd
push
xchg
pop
in
xchg
xlat
out
rorb
lea
inc
jne
push
sbb
add
jne
bound
mov
adc
sbb
xchg
test
add
mov
ret
adc
mov
push
jle
mov
inc
les
lods
xor
fldcw
pop
cmpsl
sarl
jle
dec
daa
pop
push
cs
jmp
and
jns
dec
sbb
pop
mov
mov
jmp
push
mov
test
adc
push
push
mov
into
in
jmp
pop
ret
or
dec
push
shrl
and
xchg
xor
xor
lret
into
sbb
hlt
popa
cwtl
imul
rcrl
cmp
cmp
or
push
jnp
imul
push
arpl
mov
cld
icebp
fildl
sub
dec
or
sub
add
lock
shl
into
shl
xchg
scas
mov
adc
sub
ljmp
aas
adc
test
out
int
mov
mov
scas
arpl
dec
inc
jp
jle
pop
inc
imul
dec
xchg
mov
mov
jmp
fndisi(8087
lret
adc
add
xor
and
push
jnp
imul
dec
xchg
mov
mov
jmp
fndisi(8087
lret
adc
lds
inc
cs
adc
add
rclb
push
ret
push
cmp
shrb
jb
xor
jae
xlat
push
shlb
out
inc
movsb
add
orl
outsl
pop
adc
fidivrs
mov
cmp
sbb
in
stc
lds
pop
pop
in
popa
dec
lahf
lcall
mov
xor
and
mov
lahf
or
cmp
xchg
test
and
scas
mov
xor
rcrl
cmp
and
jle
stos
or
icebp
nop
mov
mov
scas
xchg
push
outsl
add
test
or
jns
push
pop
or
adc
jb
pushf
js
sub
test
inc
and
push
stos
and
in
ja
xchg
pusha
mov
test
pop
pop
dec
adc
in
inc
mov
sbb
imul
or
pop
sbb
loop
mov
aas
subb
jns
test
xor
xchg
mov
clc
ss
adc
stos
out
lahf
popa
test
sar
or
iret
add
mov
xor
or
ja
loop
leave
sti
add
gs
push
aam
xchg
stc
adc
cmp
movsb
mov
mov
mov
or
ds
push
rep
sbb
jg
inc
jle
mov
xor
mov
ret
outsl
outsb
dec
push
push
pop
xor
pop
pusha
add
ffreep
add
push
cmp
sbbb
sub
je
insb
pop
mov
push
push
push
or
sub
aam
xchg
sbb
sub
sbb
outsl
jns
mov
iret
ss
shll
rolb
cmc
aam
dec
data16
ret
sub
movsb
scas
mov
dec
cwtl
roll
daa
in
and
movsb
fidivs
ss
mov
xlat
push
mov
pop
and
inc
mov
shll
push
sub
dec
pop
out
mov
push
cmp
push
xor
sub
fists
shrd
ret
scas
leave
outsl
fsubrl
iret
int3
arpl
fwait
jns
outsb
mov
fs
xor
xor
mov
mov
js
xor
flds
inc
scas
sti
jl
mov
pop
fidivs
sbb
pop
push
jne
add
jo
enter
into
mov
dec
adc
stos
int3
xlat
xor
cmc
outsb
gs
lcall
jp
aaa
add
stos
ficompl
and
sbb
into
mov
sub
inc
sahf
cld
xchg
cmp
jle
fcomps
sbb
clc
mov
lret
movsl
stc
and
pop
jns
out
and
dec
pop
stos
pop
mov
es
mov
dec
sub
repnz
xchg
testb
lods
jp
lcall
adc
scas
push
mov
mov
fldt
cmp
xor
insl
xor
sti
dec
mov
ljmp
mov
addb
call
xlat
pop
inc
insb
or
sbb
jmp
mov
loop
jle
cld
dec
ffree
scas
shll
xor
push
stc
adc
pop
gs
in
xor
mov
sbb
fidivrs
mov
insl
add
leave
pop
mov
movsl
adc
pop
popa
mov
call
mov
ret
dec
jecxz
push
sub
sub
loope
sbb
leave
or
adc
xor
inc
push
mov
pop
stos
enter
mov
pop
or
pop
xlat
ljmp
and
jnp
aaa
pop
push
fcmovbe
or
and
xor
js
push
in
mov
lods
pop
loopne
dec
cmp
mov
mov
mull
and
repz
mov
sbb
stos
mov
aam
jmp
sbb
shll
mov
in
inc
aam
ret
and
cmp
cmp
add
lods
add
in
int
js
std
mov
cmp
inc
ss
jg
lds
cmpsb
in
pop
mov
mov
stos
bound
jb
pop
cmp
mov
call
mov
lds
fcomi
loopne
cmp
jl
xor
pop
pop
sbb
xchg
mov
pop
push
cmpsl
test
lds
ret
cld
fwait
out
shll
mov
test
fwait
jp
jns
xchg
test
data16
lcall
decl
xchg
add
sub
in
mov
lea
or
xchg
es
sub
shl
mov
jp
loop
lods
into
adc
mov
rolb
mov
dec
aad
dec
pop
into
sahf
in
stos
sbb
std
outsl
add
cmp
xor
test
mov
lret
cmp
xor
jg
sbb
insb
add
push
push
push
popf
je
out
lret
imul
jmp
jmp
cmp
dec
scas
dec
lods
pop
dec
jmp
out
insl
mov
mov
jmp
ret
adc
adc
arpl
bound
push
leave
subl
movsb
lret
outsb
add
std
adc
mov
adc
fs
call
mov
dec
inc
cld
dec
sub
das
into
adc
je
push
sub
inc
push
mov
imul
test
cmp
cmp
popf
and
push
sub
xchg
lgs
shlb
stc
mov
shl
xlat
dec
std
cmp
cmp
mov
cmp
outsl
sub
or
inc
stc
popf
in
xchg
jmp
pop
setae
lds
jmp
mov
mov
xor
cltd
cltd
xchg
jns
cmp
xchg
mov
mov
jno
jl
push
insb
sbb
push
pop
cs
push
int
lods
sbb
out
jne
xlat
notb
movb
into
xchg
jg
mov
shll
jns
pop
sbb
cmc
and
aaa
faddl
scas
and
mov
daa
out
popa
jle
in
adc
das
xchg
and
sahf
push
cmc
push
mov
dec
inc
cmp
jbe
sbb
nop
mov
rcrl
aad
outsb
mov
or
sti
or
pop
push
into
adc
xchg
mov
ret
rcrl
cmp
sub
cmp
or
ret
inc
jge
lahf
xor
pop
ljmp
cmpsb
cmp
imul
pop
dec
sbb
add
xor
push
xor
push
test
cmp
jb
mov
enter
mov
xor
mov
jbe
in
pop
xlat
push
mov
cs
mov
push
or
and
cmp
pushf
pop
jno
fcomi
xor
add
dec
dec
add
lret
inc
xorb
mov
sub
or
jno
in
sub
push
aam
das
lds
jle
outsb
bound
dec
mov
into
jo
call
out
push
inc
mov
clc
jp
jb
xor
mov
pop
xor
movsb
movsb
repnz
jge
mov
inc
push
out
bound
add
push
test
es
ficompl
stos
mov
loope
into
rolb
pop
xchg
jl
test
fldl
test
xor
dec
call
andb
je
push
js
push
mov
fistps
inc
add
fsubrl
pop
or
std
ss
hlt
fimull
xchg
sub
nop
cli
adc
mov
add
notb
xor
add
sub
mov
pop
mov
loopne
sbb
stos
and
dec
inc
iret
push
or
mov
dec
pop
gs
cmp
cs
int3
lcall
sbb
and
loop
out
add
es
imul
sbbl
mov
mov
nop
arpl
mov
stc
jl
or
inc
and
ja
push
jbe
push
rcrb
repz
sub
pop
std
adc
aaa
dec
jmp
mov
loope
scas
xor
ret
popf
sbb
jg
jecxz
dec
inc
mov
or
or
push
lock
sbb
or
ret
rcll
sete
xchg
sub
stc
cmp
fcomps
pop
stc
aas
sub
add
or
in
mov
mov
inc
es
xor
add
mov
and
mov
dec
cltd
in
sbb
push
mov
pop
sarb
invlpg
lret
ja
je
pop
and
xchg
adc
xchg
cmp
adc
in
pop
lods
int
pop
push
add
xchg
jno
lret
daa
xchg
pop
loope
daa
push
sbb
imulb
jo
push
lds
xchg
push
pop
sbb
jns
rcll
out
cs
xor
jne,pn
incl
pop
xorb
push
inc
cmc
popf
mov
stos
gs
in
xorl
push
mov
jge
mov
test
imul
and
punpckhdq
outsl
sar
je
or
cmp
adc
je
leave
in
or
and
ss
pushf
popa
adc
cmp
in
sbbl
nop
dec
xchg
sub
out
icebp
jp
aam
or
jmp
enter
iret
mov
fldl
add
mov
loope
sbb
call
cmpsb
add
shrb
rclb
inc
jnp
adc
sub
add
pop
and
test
lea
in
sbb
test
loop
cwtl
pop
addr16
jmp
test
stos
iret
fidivrs
mov
inc
push
jmp
xor
outsl
pop
inc
jecxz
aas
xorl
ficompl
call
fnsave
sbb
je
mov
into
stos
jno
into
mov
ds
cmc
push
pop
xchg
imulb
xor
aam
push
xchg
mov
cvtps2pi
test
xor
out
arpl
stos
loope
add
stos
std
insl
test
jne
fcoms
iret
fildl
cmpsl
xor
jnp
cmp
pop
cmpsl
pop
xor
cmp
mov
mov
daa
stc
cmpl
sub
in
insb
les
xchg
in
pushf
lock
lods
mov
jne
jg
and
cltd
cwtl
insb
lds
and
ficoml
jg
mov
fnsave
sahf
pop
fstl
pusha
lret
jmp
lcall
ds
scas
fdivrs
cltd
popf
and
mov
imulb
xchg
sbb
push
out
add
orb
cmpl
test
adc
enter
test
xchg
lods
mov
mov
dec
jae
push
inc
ds
incb
push
push
push
and
or
cmp
sarb
add
mov
mov
mov
mull
ds
lret
cli
sub
sub
mov
hlt
mov
inc
push
dec
inc
lea
negb
stos
cmp
xchg
sbb
adc
push
push
sbb
inc
lret
call
jle
je
add
xchg
inc
add
adc
loop
imul
pop
push
daa
jnp
xor
pusha
push
jle
xchg
sub
sub
fldenv
xor
add
mov
mov
scas
push
fldcw
jmp
add
mov
add
out
add
fsubs
inc
push
and
pop
pop
push
aaa
or
ret
cwtl
add
je
in
inc
jo
jne
pop
mov
inc
repz
mov
pop
jg
pusha
mov
push
ja
hlt
and
and
lds
cld
movsl
jl
sbb
adc
sahf
sbb
sub
sub
inc
out
daa
mov
les
ja
mov
xchg
jp
dec
cmc
xchg
mov
mov
cs
aas
call
rorb
dec
or
adc
in
fstl
push
dec
jecxz
pop
jmp
arpl
push
pop
lahf
xor
and
mov
xor
test
into
mov
ljmp
dec
popa
cmpl
push
xchg
push
repz
lret
pop
mov
fists
cmpb
sbb
inc
mov
fwait
lea
mov
fmul
out
inc
outsl
or
mov
adc
sub
xrelease
pusha
pop
mov
lods
outsb
sub
lock
ljmp
fwait
leave
jns
xor
add
lds
push
cmp
test
sbb
pop
pusha
test
push
test
cld
mov
cld
mov
push
rorl
fsubrs
lods
xchg
ljmp
jae
lcall
fadds
inc
daa
sbb
xchg
outsb
fwait
cld
and
xor
dec
inc
inc
push
je
test
adc
push
addb
aad
bound
sbb
jmp
inc
push
cs
pop
add
addr16
rolb
ljmp
not
mov
cmp
lret
pushf
mov
movsl
push
lods
cli
mov
jns
add
mov
pop
into
scas
add
pop
inc
or
jbe
lret
cmp
and
pop
lcall
popa
jle
test
fdivs
xor
sbb
sub
push
mov
insb
inc
sbb
inc
push
add
fadds
clc
stos
mov
cmc
mov
or
xchg
movsb
add
jne
add
jle
jge
andl
adc
pop
or
cld
mov
mov
pop
rol
pop
push
js
push
dec
jo
std
sti
and
clc
xor
push
or
pop
data16
sub
mov
adc
sub
in
push
leave
pxor
mov
mov
adc
or
insb
lret
xor
stos
adc
and
xchg
xchg
ljmp
adcb
lock
dec
add
jl
inc
arpl
xor
clc
dec
roll
repnz
divl
addb
test
xchg
jae
call
mov
aaa
outsl
cmc
sub
mov
cmp
adc
je
es
insb
adc
cmp
subl
popf
loopne
cmp
enter
dec
xor
cld
ror
std
push
shl
dec
fsubs
inc
pushf
sti
out
sub
enter
dec
int
cld
sub
or
or
insl
dec
subb
out
int
mov
mov
push
or
stc
loop
movsl
jmp
or
jg
pop
dec
jns
loop
xchg
cmp
mov
imul
sar
aam
dec
ret
mov
push
sub
jge
cmpsl
sar
lret
test
bound
jns
out
outsb
pop
pop
ret
mov
data16
leave
out
jae
adc
mov
repz
xor
inc
cmp
adc
andb
sbb
cltd
sarb
xor
int
pop
xchg
sbb
inc
pusha
outsl
pop
sub
arpl
negl
rorb
mov
out
imul
lahf
mov
sbb
mov
jne
pushf
stc
inc
xlat
pop
adc
cwtl
xchg
cmpb
push
rclb
and
inc
jecxz
insl
rorl
push
xor
movsl
fucomp
pop
and
jecxz
inc
and
test
ja
inc
push
pop
sbbb
push
jae
divl
popf
fisubrs
in
xor
mov
cwtl
call
das
mov
jns
mov
sub
or
mov
iret
dec
cmpsl
xor
mov
cmpsb
dec
push
insb
aaa
inc
punpckhdq
mov
dec
mov
not
inc
cmp
dec
test
mov
shrl
hlt
and
sub
push
inc
xchg
shrl
cwtl
and
push
inc
aaa
mov
popf
movsb
push
xor
mov
push
lods
dec
sarl
jp
mov
fwait
pop
push
cmpsl
sbb
out
pop
not
ret
loopne
ljmp
cmp
sub
mov
loopne
in
shll
outsl
xchg
cli
xorl
movsl
stos
aas
ret
dec
cmp
mov
cmpl
sti
push
xor
pop
mov
pop
push
daa
push
xchg
jb
mov
faddl
mov
pop
pop
sub
cmp
insb
and
mov
outsb
mov
inc
push
movsl
sbb
scas
sub
and
repnz
pop
mov
stos
aaa
scas
ljmp
out
or
sub
jns
iret
mov
mov
dec
mov
cli
iret
cmp
mov
jae
les
in
cwtl
adc
xchg
call
lret
enter
out
xor
scas
pop
flds
les
add
mov
out
cmp
clc
pop
xchg
ds
mov
adc
pusha
bnd
jno
xorb
insb
adc
dec
outsb
pop
je
cltd
sub
push
shll
mov
ja
or
lock
add
sub
rcrl
mov
mov
push
inc
sar
push
dec
das
fwait
lds
mov
fdivrs
or
int
insb
xchg
mov
aam
jmp
outsb
sbb
xlat
dec
mov
xchg
mov
enter
mov
popa
int3
xchg
dec
aas
insb
xor
xchg
cli
insl
inc
sbb
mov
scas
cwtl
loop
fadds
enter
rolb
jp,pt
jae
fstp
jl
dec
and
out
int
mov
lea
xchg
js
in
dec
push
es
lods
jae
aam
lret
icebp
mov
xchg
jbe
push
jge
and
mov
jne
out
inc
dec
pusha
in
repz
lcall
jbe
jbe
scas
fcoml
add
jl
xchg
mov
add
and
push
repnz
je
dec
mov
das
adc
call
add
pop
pop
adc
pop
pop
stos
lods
cmpsb
xchg
sub
mov
test
out
out
iret
pop
clc
xchg
pop
dec
rcr
jecxz
pop
popf
pop
cmp
adc
push
sbb
cwtl
xchg
lcall
cwtl
pop
pop
mov
aas
ja
mov
sub
mov
mov
xchg
std
inc
cmp
out
neg
repz
movsl
stc
or
leave
dec
jae
outsl
sbb
xor
push
inc
xor
sub
aad
mov
sahf
ja
ss
idivl
add
imul
xchg
cmpsb
jbe,pt
leave
mov
insb
mov
sbb
dec
aad
cmp
sub
jl
outsl
or
jmp
cmpsl
inc
pop
jp
pop
scas
pop
jae
push
orl
jg
out
sti
mov
sub
mov
push
in
inc
orl
pop
add
sbbb
popf
decb
imul
pop
arpl
cmp
dec
dec
aad
insb
daa
jae
or
add
add
and
scas
and
sbb
fistpl
jle
and
loopne
les
out
scas
jl
ret
fcmovu
in
aad
mov
mov
out
jmp
jle
lea
mov
insb
dec
lods
and
arpl
inc
lock
jnp
jmp
es
jb
sbb
pop
mov
xchg
xor
push
out
icebp
adc
xchg
xchg
sbb
mov
mov
pushf
aas
sub
mov
inc
sub
pusha
dec
mov
sbb
mov
sub
push
test
mov
inc
push
mov
cli
mov
mov
push
aad
sahf
inc
lret
fs
sub
dec
enter
stc
movsb
fidivl
lods
out
popa
adc
add
cltd
js
lret
xchg
xchg
cmc
and
es
push
ret
cmp
pop
mov
pop
fwait
cmp
int3
jl
jnp
pop
push
out
inc
bound
pop
in
adc
pop
or
mov
ljmp
inc
adc
aas
push
ss
jne
xchg
cmp
stos
lock
imul
pop
push
imul
in
inc
xchg
dec
jmp
add
jp
pop
xorb
dec
inc
popf
pop
pop
mov
pop
test
fucom
mov
out
cwtl
ror
push
rcr
push
pop
jno
adc
in
or
scas
cmp
sahf
es
add
push
jae
cmp
fstps
data16
addr16
inc
out
lods
repnz
out
das
addb
shrb
aaa
sub
xchg
or
jnp
mov
xchg
mov
dec
rcll
jle
mov
and
adc
test
add
loopne
add
jmp
inc
ret
les
mov
inc
lods
mov
movsl
push
cwtl
cld
mov
scas
adc
out
and
cli
pop
mov
fs
ss
pop
fwait
int3
add
push
aaa
sbb
pop
and
push
mov
fisttpl
xchg
jge
adc
imul
stos
mov
inc
shll
cmp
scas
sbb
hlt
cmpsb
mov
mov
insl
shrb
shrb
pushf
lods
cmpsb
movsb
data16
fcoml
sub
mov
cmp
scas
mov
cwtl
ds
repnz
sbb
in
jno
push
inc
nop
les
mov
lods
inc
push
push
and
and
fwait
std
pop
rep
outsb
fmuls
ds
out
mov
xchg
xchg
pop
loope
or
mov
cltd
fnstenv
divb
bound
fnsave
enter
dec
sub
sbb
xor
push
stos
int3
stos
std
rep
sub
jnp
imul
dec
xchg
mov
mov
jmp
fndisi(8087
lret
adc
add
xor
and
push
jnp
imul
dec
xchg
mov
mov
jmp
fndisi(8087
lret
adc
add
and
and
push
jnp
imul
dec
xchg
mov
movsl
mov
sti
fsubr
cmc
fcmovbe
lret
or
sub
or
push
imul
dec
xchg
mov
mov
adc
and
xor
push
lret
add
je
fs
xor
mov
iret
jnp
push
sbb
sub
je
fs
adc
add
xor
or
dec
les
imul
mov
sub
out
jmp
fwait
and
dec
mov
aam
out
xchg
imul
movb
adc
add
add
mov
push
in
pop
test
repnz
maxps
push
das
out
xchg
push
inc
xchg
add
or
insb
aas
cmpsb
jmp
cld
sub
std
xor
cmc
jg
aad
aam
cmc
stos
sbb
jbe
pop
pusha
sub
push
lret
inc
xchg
jo
fs
hlt
stos
test
test
add
in
dec
or
subb
sbb
mov
mov
sbb
adc
hlt
xchg
imul
sub
stos
xor
cmp
pusha
mov
pop
jns
ss
stos
and
test
inc
mov
xchg
jle
stos
into
pop
fmul
fs
add
fs
adc
add
xor
mov
aam
insb
jnp
imul
test
push
lods
sub
xchg
sbb
imul
xchg
cs
push
adc
pop
shrb
adc
or
pop
stc
pop
ds
mov
cmpsb
imul
push
rcrl
mov
sbb
add
xor
and
aam
les
imul
xchg
or
push
lret
inc
sti
je
fs
adc
add
xor
and
aam
les
imul
xchg
or
push
out
adc
les
push
popf
pop
sbb
jp
js
push
jo
jb
aas
jmp
and
mov
pop
test
nop
pusha
sbb
out
les
mov
loope
and
imul
test
lret
nop
jns
and
or
int3
sub
and
jg
icebp
xorb
xchg
mov
test
ja
add
repz
cmp
xchg
sbb
pop
xchg
inc
xor
push
nop
inc
iret
or
dec
insb
mov
loop
sub
fimull
rol
fistpl
mov
pop
mov
fwait
lret
sar
push
xor
mov
xchg
mov
ds
push
inc
xchg
imul
daa
hlt
and
push
add
es
icebp
lock
mov
sub
xchg
pop
rolb
adc
xchg
inc
out
rorl
mov
dec
sub
into
mov
popa
sbb
push
sub
jae
rorb
mov
fiadds
xor
inc
xor
jno
cmpsl
mov
jg
cmp
mov
jns
pop
jnp
scas
inc
push
xlat
fcmovnbe
mov
jg
add
xor
das
iret
or
js
push
mov
out
mov
jo
imul
int3
test
sub
sbb
cmc
mov
fnsave
repz
imul
inc
repnz
scas
xchg
xor
pop
daa
pusha
add
loope
jbe
dec
xchg
cli
ss
leave
lret
in
cltd
dec
inc
divb
or
inc
cmp
gs
fcomps
shrl
add
fstpl
not
les
fisttpll
nop
fcompp
incb
mov
inc
jae
mov
int
aam
xor
cwtl
sbb
jl
cld
push
push
xchg
push
sbb
jno
sub
xor
es
dec
fwait
jmp
idiv
aas
mov
adc
imul
mov
dec
inc
sbb
xchg
mov
jo
adc
test
xchg
push
and
gs
shrb
inc
push
push
imul
pop
test
push
shll
out
cmp
push
jns
scas
push
jmp
add
roll
mov
jmp
aas
inc
mov
popf
movsb
xchg
data16
iret
xchg
push
std
sahf
scas
push
dec
fisubs
xlat
lods
call
aaa
jae
push
jnp
sar
cmc
pop
pop
or
out
push
data16
pushf
jb
fsubl
cmp
fstpt
push
cmp
jns
hlt
sbb
aam
insl
jb
adc
lahf
out
sarl
hlt
pop
movsl
insb
pop
dec
mov
xchg
mov
addl
jbe
shlb
jecxz
jnp
and
imul
lock
jo
mov
incb
mov
dec
inc
and
xchg
xor
dec
movsb
push
mov
add
pop
jle
test
dec
nop
icebp
jnp
popf
stc
les
repnz
dec
cmpsb
dec
pop
popa
xchg
std
jae
repnz
pop
push
push
les
xor
push
jg
in
mov
mov
sub
cmpsb
jl
push
je
jp
shll
aaa
fwait
adc
repnz
adc
insb
xor
lock
mov
push
into
clc
dec
mov
or
fildll
inc
imul
or
mov
imul
sub
test
test
aaa
jo
xchg
adc
cmc
mov
cmp
imull
push
pop
stos
jnp
popa
cmp
mov
sbb
mov
in
cmp
mov
out
lds
mov
mov
inc
push
adc
bound
rcll
fs
jecxz
xor
cwtl
cmpsb
adc
xchg
xlat
scas
leave
mov
push
xor
push
movsb
test
jb
jle
hlt
jmp
shll
ljmp
stc
inc
dec
lcall
dec
xchg
bound
bound
xor
pop
rclb
pop
cmpsl
jo
pop
cmpsl
and
dec
mov
imul
add
popf
dec
fwait
lods
push
pop
lahf
loopew
mov
inc
jle
push
cmc
jmp
dec
pop
add
xchg
in
and
jmp
xorb
mov
jl
es
gs
icebp
adc
clc
xchg
ret
out
mov
mov
out
pop
xchg
mov
repnz
mov
sbb
mov
sbb
and
push
and
popa
insb
sub
cmp
mov
ljmp
js
iret
lret
imul
ret
fiadds
call
lods
andl
add
popa
inc
test
sbb
sub
leave
adc
add
lcall
pop
push
or
jb
std
sbb
leave
mov
mov
jb
shlb
jg
inc
xchg
pop
adc
and
pop
int3
incl
or
ljmp
aam
cmp
repz
movsl
ret
push
add
lahf
fisttpl
cwtl
shrb
jecxz
push
or
push
fisubl
mov
addr16
push
stos
call
repz
sub
jae
fsubrp
stos
add
mov
test
mov
scas
xchg
pop
icebp
push
sub
inc
cmpsb
fadd
in
mov
jae
out
push
shlb
dec
iret
add
jae
ficomps
fisttpll
jnp
mov
jle
mov
lds
sbb
cmc
dec
jmp
mov
xchg
pop
loopne
dec
pop
jmp
xchg
mov
cld
js
insb
add
jo
arpl
mov
cltd
and
imul
jae
add
adc
cmp
dec
hlt
cmpsb
sub
das
xchg
mov
push
idiv
dec
std
and
popw
jle
cltd
data16
int
sbbl
jbe
dec
sub
and
inc
int3
jns
nop
scas
sub
movsb
add
lahf
inc
out
jecxz
jnp
or
int3
out
push
call
pop
add
pop
jle
cwtl
cmp
loope
insb
pop
out
lods
gs
xor
movsl
inc
pushl
and
jmp
xchg
jecxz
jge
cmpsb
lods
loop
sub
clc
pop
push
shl
inc
pop
pusha
mov
add
shll
jg
add
sbb
push
inc
push
fdivr
xor
fs
push
icebp
call
insb
mov
push
test
insl
icebp
jb
xor
jle
xor
inc
add
mov
mov
shrl
dec
ljmp
lods
mov
mov
adc
lahf
das
es
jns
pop
fidivs
adc
xchg
test
incl
bound
pop
loope
lcall
gs
scas
loop
mov
cli
mov
adc
push
push
jg
lea
xchg
ja
and
jbe
or
nop
jbe
xchg
cli
fimull
pop
pop
lds
cs
rcrb
push
mov
mov
inc
inc
cmp
in
push
in
cli
ret
dec
mov
add
mov
mov
or
xchg
aad
int
mov
shl
inc
js
aas
addr16
dec
push
mov
loope
mov
xchg
and
test
adc
sahf
mov
xlat
fcompl
jo
cmpsl
lds
pop
mov
pop
sub
inc
sub
ja
inc
adc
pusha
mov
dec
xor
popf
fisubl
cli
loop
rclb
lock
stos
pop
pushf
adc
pop
and
jnp
lea
pop
mov
xor
sbb
andl
mov
mov
adc
imull
mov
dec
sub
pop
add
push
int
xchg
sub
mov
push
jb
adc
ds
mulb
je
lret
pop
sub
add
cmp
loope
xor
je
push
fsqrt
adc
or
sbb
cmpsl
cmp
xchg
fdivl
jb
cmp
jle
sub
rcrl
hlt
cmp
push
inc
xchg
mov
arpl
leave
mov
sti
jg
cmpsb
shl
push
dec
mov
or
inc
inc
lock
enter
leave
xor
jmp
sub
jp
nop
bound
loopne
push
out
fldt
iret
xor
sbb
dec
mov
add
ja
insl
jg
into
sbbb
jo
mov
push
cmc
shll
sub
pop
sub
mov
adc
ljmp
into
fwait
mov
and
lods
push
outsb
dec
or
mov
aam
push
stos
jp
jl
adc
add
pop
add
popa
pop
xchg
dec
jge
test
aad
pop
xchg
sub
and
fimuls
pushf
fwait
mov
test
int
das
jns
mov
xchg
adcb
push
fidivs
addr16
push
fdivs
mov
hlt
push
push
mov
jp
imul
push
xchg
xchg
xor
mov
aas
xlat
pop
test
hlt
out
sub
xchg
mov
sbb
test
in
or
add
and
popf
xchg
inc
dec
inc
into
jp
pop
push
negb
mov
push
jle
inc
jg
mov
daa
cmp
jb
subl
or
push
insb
pop
push
in
test
test
sbb
aaa
outsb
xor
pop
notl
cmp
popf
nop
pop
add
in
pop
bound
stc
pop
dec
mov
addr16
dec
cmp
lcall
insb
scas
xchg
mov
sub
jg
es
es
jp
jg
push
push
sub
fsubl
stc
test
popf
jnp
mov
arpl
fsubs
into
mov
ds
or
mov
addl
fisttpll
cmpsl
shrb
stc
mov
lock
mov
inc
popf
fldt
inc
lret
push
inc
sar
cmpsb
bound
imul
sub
fsubrl
push
fs
adc
adc
sbb
inc
sti
jbe
fcmove
out
jnp
ljmp
dec
pusha
aam
jge
xchg
push
jmp
sbb
mov
pop
aaa
inc
mov
scas
out
mov
negl
xchg
push
and
push
fistpl
leave
hlt
add
push
nop
ret
dec
repz
sbb
xor
out
adc
lret
dec
inc
ret
inc
mov
sub
inc
fcmovbe
push
sbb
loopne
mov
stos
sbb
add
cld
jns
mov
repz
cld
test
mov
sarl
out
mov
xor
jo
dec
jmp
arpl
loope
gs
jmp
jmp
aam
in
fisubs
je
jge
loope
xor
push
push
mov
out
xchg
sub
pop
lret
push
faddl
add
mov
sar
inc
xor
mov
imul
ficomps
jg
adc
xchg
jb
dec
push
push
jp
repnz
pusha
mov
sbb
and
jl
loop
mov
or
aad
mov
imul
pop
sub
cmp
jmp
sbb
adc
sbb
mov
sub
xchg
shlb
mov
leave
adc
test
mov
es
dec
xor
mov
loopne
xor
aam
mov
and
es
fsub
das
aam
adc
loop
arpl
in
lods
or
outsb
out
cmp
dec
xchg
aam
mov
xchg
scas
jno
inc
sbb
js
pop
sahf
lods
inc
cltd
cmpsl
adc
jl
inc
insl
cmpsb
lahf
cld
mov
movl
dec
jno
push
lock
jns
push
test
fistl
push
sbbb
push
add
add
pushf
mov
and
fidivs
pop
movsb
push
and
inc
push
sub
stos
lcall
push
push
xchg
xchg
dec
cmp
mov
sbb
dec
cmp
pop
and
sahf
cmp
jmp
cmpsl
mov
loopne
mov
clc
ljmp
nop
dec
sar
in
jmp
loopne
repnz
add
mov
and
loop
xchg
test
test
and
jae
cld
mov
sub
sub
sub
fdivrl
mov
test
xchg
int
dec
push
ret
and
add
scas
xchg
fstpt
mov
mov
ret
jecxz
mov
mov
jmp
jae
test
sub
push
movsl
rolb
jmp
repnz
mov
scas
dec
xlat
jne
or
and
mov
out
dec
divl
and
test
out
push
daa
fbld
inc
pop
stos
shrl
xchg
pop
xor
sbb
adc
pop
jne
push
xor
and
dec
jnp
xchg
std
mov
mov
push
jmp
sbb
adc
adcb
xor
imul
or
pop
shrl
cmp
enter
ficoml
and
inc
incl
inc
jno
sub
sbb
ds
ret
pop
push
std
and
push
scas
adc
cmp
ljmp
es
cltd
sbb
mov
loopne
mov
push
or
out
jno
ja
enter
pop
push
enter
pop
mov
mov
sahf
sbb
imul
ljmp
sbb
fnstsw
fstl
inc
add
dec
lcall
inc
jnp
mov
or
mov
out
out
mov
pop
and
cmp
cmp
mov
lret
jecxz
push
push
xor
aad
in
lock
xor
addr16
jp
test
loopne
push
repnz
in
xor
mov
repnz
out
sbb
in
lds
jge
insb
mov
outsl
xchg
xor
push
pop
aaa
sub
xlat
inc
dec
shr
sub
mov
xchg
mov
mov
imul
push
mov
cmp
push
aas
dec
out
adc
push
jb
mov
sahf
das
add
push
mov
out
and
jle
iret
ja
cltd
cmp
mov
out
mov
add
jl
dec
fs
push
imul
icebp
out
lds
pop
mov
jmp
mov
cmp
loop
push
mov
inc
movb
dec
mov
xchg
adc
or
shlb
int
inc
and
mov
xchg
cwtl
xchg
in
xlat
nop
ja
cld
and
sub
sub
jmp
add
jb
mov
mov
and
jae
repnz
mov
xchg
insb
nop
push
add
mov
sbb
adcb
das
mov
addr16
jno
sub
icebp
and
cli
or
in
push
orl
out
mov
sbb
inc
call
dec
adc
add
xor
push
cmp
test
xor
pop
cli
sbb
xor
lea
fstpl
cli
pop
shrl
faddl
mov
pop
ret
or
pop
pop
enter
aam
movsb
sub
pop
cmp
xchg
cltd
ficomps
cmp
neg
adcl
enter
jge
stc
inc
das
adc
pushfw
lret
mov
lock
rorb
out
push
popa
and
pop
cld
sbb
dec
xchg
adc
subb
pop
lds
hlt
imul
dec
dec
aam
push
sub
or
adc
adc
lahf
add
mov
and
or
or
daa
cmp
int3
pop
push
ja
adc
ljmp
cmc
inc
call
pop
cltd
add
add
movsl
loop
aaa
adc
idivl
jge
or
cmp
call
or
adc
jno
adc
insb
sbb
out
jecxz
mov
aam
fimuls
shrl
fs
xchg
js
jg
icebp
dec
out
mov
in
cmp
sahf
mov
sbb
mov
sub
mov
in
scas
stos
aam
jae
repz
push
jno
jmp
into
shrl
pop
inc
leave
xchg
mov
push
mov
pop
out
sub
sbb
icebp
mov
int
fdivs
jnp
in
add
or
insl
popf
pushf
push
or
jp
test
pop
jno
lcall
outsb
pop
xor
xor
int3
sbb
fwait
add
push
mov
inc
lds
aaa
adc
and
push
push
ja
sub
add
push
dec
shl
ljmp
push
insb
mov
push
mov
mov
mov
jl
push
aaa
mov
sub
int
fs
add
and
mov
mov
out
or
lods
pusha
cmp
rorb
jne
lret
mov
sti
orl
test
xor
pop
sbb
xor
cmc
adc
lds
rorl
dec
ret
fisubs
jne
inc
scas
cwtl
mov
pop
jne
test
in
fsubl
popa
cmpsb
cmp
xlat
pop
sahf
adc
das
lock
push
adc
mov
and
fistpl
dec
xorb
push
stc
sub
pusha
ret
inc
push
xor
add
mov
cmp
ret
push
jno
mov
or
gs
popf
sub
dec
xchg
jl
les
xor
clc
insb
fcmovbe
aaa
movsl
add
pop
lock
mov
cmpsb
mov
sub
out
cmp
lock
jecxz
nop
jbe
scas
andl
aaa
fisubl
push
xchg
mov
push
into
scas
xor
or
add
push
fs
imul
mov
inc
push
sarb
leave
ss
adc
enter
xchg
dec
divl
mov
js
xor
inc
add
loopne
sub
mov
addr16
jo
xchg
push
adc
cltd
xor
xor
or
out
xchg
mulb
jge
push
jl
mov
sbb
daa
insl
add
xor
into
stos
mov
ss
pop
cmpsl
cmp
aas
sub
or
cmp
lods
call
lods
add
xor
test
and
repnz
insl
sarb
shlb
sbb
jg
outsb
rcll
jae
jle
sub
scas
xor
and
mov
adc
clc
dec
arpl
adc
cmp
mov
add
jae
mov
addr16
or
add
cmpsb
call
inc
mov
push
mov
fldcw
push
fisubrl
adc
or
push
sbb
xchg
adc
add
enter
sbbl
jmp
xorb
pushf
jge
adc
or
ds
popa
leave
popa
aas
daa
movsb
xchg
push
push
das
pop
and
pushf
xchg
arpl
dec
shrb
xor
nop
lret
jge
addl
inc
rcll
bound
push
fimull
mov
repnz
or
arpl
es
js
inc
sbb
icebp
std
inc
pop
adc
jg
sub
leave
jl
lret
testb
cmp
dec
aas
sub
insb
mov
sub
ficoml
mov
orb
repz
jmp
ficoms
or
push
rorl
jb
dec
cwtl
xchg
lea
in
repz
cmpsl
dec
out
bound
cmp
xchg
movsl
rolb
jb
adcb
xchg
push
addr16
jnp
pusha
jg
arpl
pop
mov
aad
mov
scas
sahf
leave
xchg
pop
mov
adcb
pushf
mov
sbb
loopne
cmp
insl
ss
xor
mov
adc
stc
aam
push
iret
inc
push
imul
mov
sbb
pop
sti
push
les
cmp
sbb
ficoms
mov
jo
shr
adc
decb
dec
pop
outsb
sbb
sahf
jmp
inc
and
pop
inc
pusha
sahf
mov
clc
adc
iret
in
jg
push
or
pop
jo
add
shld
scas
in
push
mov
mov
pop
movsb
sbb
rcrl
jnp
jbe
add
lods
outsl
ret
mov
aaa
push
mov
adc
shrb
test
mov
push
mov
cli
test
mov
movsl
mov
push
sbb
notl
adc
push
sbb
inc
lock
lahf
aad
out
cmp
push
jge
xchg
mov
insb
lods
sahf
jno
inc
xchg
cmovbe
int3
jbe
fwait
jne
push
stos
cmpsb
ret
dec
sub
aaa
les
mov
imul
mov
dec
arpl
cmpsb
mov
add
add
pop
add
mov
inc
cli
divb
mov
sub
in
std
aaa
pop
movsl
xor
dec
mov
fcoml
scas
das
into
push
enter
pop
dec
inc
decl
outsl
das
shrl
fimuls
ljmp
into
scas
mov
mov
mov
inc
sbb
adc
arpl
lea
and
fiaddl
stos
ret
nop
jne
jecxz
in
add
dec
cli
lods
popf
jmp
pop
pushw
xchg
sti
outsl
in
pop
enter
cmp
test
and
jnp
inc
test
divl
pop
mov
push
mov
sbb
inc
xor
data16
lahf
jns
sarb
push
mulps
loopne
sahf
lret
jo
mov
mov
aad
inc
cli
jno
fs
adc
add
xor
and
aam
les
imul
xchg
or
push
lret
inc
sti
je
fs
adc
add
xor
and
aam
les
imul
xchg
or
push
dec
dec
jnp
jmp
sbb
outsl
mov
aad
sarb
in
sbb
sub
mov
mov
fwait
adc
add
mov
in
sub
shl
imul
int3
pop
faddl
adc
and
xor
dec
insl
xor
dec
jns
xchg
xchg
jmp
les
hlt
mov
adc
and
xor
inc
cmp
sbb
stc
xchg
jmp
les
hlt
mov
adc
and
xor
inc
cmp
sbb
mov
aam
ror
jmp
int
cld
popf
mov
jne
and
pop
movsl
dec
incl
call
dec
in
mov
dec
mov
mov
call
dec
leave
mov
rcll
pushf
add
inc
sbb
xchg
jns
and
insb
jle
dec
scas
jge
adc
mov
cmp
adcl
lds
hlt
mov
xor
pop
xor
cmp
pop
je
sbb
inc
daa
dec
ss
ljmp
push
in
xchg
mov
cmp
out
pop
test
cli
xchg
jno
in
sbb
in
xchg
push
pop
lret
cmp
repnz
rcl
mov
push
sar
push
fstp
leave
and
pop
and
imul
push
sub
or
mov
les
hlt
iret
popa
adc
mov
and
push
hlt
xchg
icebp
adc
icebp
cmpsl
inc
aam
rolb
cmp
inc
pop
jne
and
and
or
mov
mov
xor
mov
in
sahf
out
sub
add
sub
or
mov
les
hlt
mov
adc
and
xor
inc
cmp
sbb
stc
xchg
jmp
les
hlt
mov
jne
mov
cld
cmpsb
aas
xor
jmp
aaa
loopne
sub
in
xchg
in
fsubrs
insb
sub
test
ss
mov
sub
out
lock
and
pop
jae
add
xchg
and
ret
cmc
fucomip
mov
test
xor
mov
das
adc
jno
lret
sbb
lods
fdivrs
jo
xchg
push
and
push
rcrb
jl
adc
fistpl
jb
adc
into
cmp
dec
insb
xchg
add
cmc
jp
push
or
push
subl
push
sub
mov
stc
mov
leave
test
das
in
rcrl
and
add
scas
pop
lods
test
or
fdivr
test
push
mov
je
cltd
xor
cld
addl
mov
cmpsb
in
mov
jge
cmp
pop
sub
xorl
les
push
xor
mov
inc
inc
inc
push
xchg
dec
clc
shrl
and
add
in
vpsubsb
leave
inc
pop
inc
fsub
cmpsb
pop
xlat
and
cwtl
mov
test
xor
sti
lahf
dec
or
and
jne
outsb
mov
jge
faddp
arpl
mov
das
inc
xchg
fcmovnbe
outsb
shlb
mov
sbb
lret
in
xor
cmp
popl
jecxz
pop
push
cs
xor
cwtl
and
lret
test
clc
sub
xor
pop
outsl
popa
mov
pop
adc
cmp
jb
enter
pop
pop
stos
mov
push
mov
dec
mov
je
pop
out
popa
stc
js
push
jmp
or
test
add
loopne
mov
cmp
leave
cmpsl
andl
jl
aad
mov
mov
int3
push
fxch
inc
movb
sbb
inc
inc
ror
daa
mov
popa
stos
insl
movsb
icebp
pop
aaa
jge
cs
cmp
mov
dec
divl
sbb
mov
add
push
fidivs
adc
clc
out
popf
ds
hlt
loop
cltd
repnz
inc
add
sub
cmp
mov
inc
mov
xor
xchg
xor
ss
scas
gs
pop
es
in
jae
call
daa
sbb
mov
insb
pop
cld
mov
test
addb
push
cltd
lahf
mov
enter
dec
pop
jl
scas
push
scas
cld
int3
mov
and
xor
iret
jl
fildll
sub
push
popf
pushf
mov
sub
dec
insb
inc
imulb
pop
xor
mov
push
lcall
mov
xchg
xchg
fdivr
mov
sbb
xchg
sahf
jp
stc
fwait
jl
sbb
pop
lods
sub
add
adcb
mov
pop
stos
ss
movsb
lcall
xlat
dec
ret
aas
imulb
cmp
inc
mov
arpl
and
xchg
ds
sub
hlt
iret
jns
dec
xchg
les
mov
inc
fmul
mov
icebp
xor
xorb
and
cmpsb
jle
pop
adc
pop
rcrl
mov
add
pusha
cld
xchg
sbb
fdivrs
test
fidivrl
aas
in
icebp
cld
das
aam
push
xor
movsl
push
sahf
cld
xchg
inc
das
xchg
mov
xor
insl
pop
sbb
loop
xchg
xchg
cmp
and
mov
out
sub
iret
xor
add
sbb
mov
imul
push
mov
das
dec
int3
pop
out
test
neg
cmpsb
pop
in
mov
nop
cmpsb
push
push
lods
push
stc
dec
push
out
lea
and
in
dec
or
mov
inc
mov
push
sbb
dec
mov
lds
test
subb
inc
mov
scas
inc
sbbb
push
mov
insb
call
mov
pushf
repnz
cmp
mov
mov
xchg
jo
lods
mov
xchg
push
out
aaa
xor
daa
test
test
ret
pop
add
push
mov
cmc
dec
xchg
dec
lahf
mov
into
sub
bound
jbe
push
mov
je
add
or
test
and
stc
inc
jge
data16
out
in
or
pop
je
div
xor
inc
and
out
push
mov
and
mov
jmp
repnz
call
fstp
jecxz
sbb
fistl
sbb
pop
lea
jl
out
jbe
mov
cld
cli
retw
inc
or
js
and
sbb
fsts
mov
add
cmp
adc
retw
adc
mov
cmp
dec
lret
into
mov
lock
into
mov
dec
push
jbe
mov
stos
outsl
fwait
cmpsb
add
mov
dec
imul
scas
mov
push
dec
fnstenv
pop
int3
and
testl
mov
or
loop
or
jmp
sub
xor
jle
add
cwtl
std
xchg
and
jge
jp
std
roll
fisttps
lea
push
mov
roll
hlt
fidivrl
or
call
cmp
jae
mov
xlat
cmp
int3
ss
test
adcl
call
add
inc
sbb
loope
stc
loope
push
outsl
stc
xor
dec
push
lahf
push
jns
or
pop
push
adc
cs
stos
rcll
xlat
add
mov
xchg
dec
lret
push
jbe
adc
jbe
loop
das
jns
or
pop
outsl
add
fldenv
scas
xorl
add
lock
fistl
xchg
outsl
lahf
and
mov
inc
mov
adc
xchg
sub
mov
adc
rcrl
inc
inc
scas
push
inc
inc
ss
out
test
loopne
sub
imul
xorb
fldl
aam
test
in
jae
ds
xchg
bound
jne
xor
adc
ret
shll
push
push
push
dec
fidivl
add
fxch
mov
mov
out
jmp
decb
lret
dec
sarl
xlat
cmp
aas
inc
push
icebp
xchg
inc
lret
jae
scas
dec
in
pop
pusha
dec
pushf
adc
ja
stos
jmp
imul
xlat
jne
inc
sub
mov
sbb
aam
and
xchg
sbb
inc
in
xchg
pusha
add
add
dec
xchg
mov
lods
sbb
xchg
sbb
inc
pop
outsb
xor
xor
inc
stc
xchg
je
insb
adc
xchg
or
xlat
push
sbb
orb
adc
mov
pusha
pop
xlat
xchg
jne
cli
pop
pusha
outsl
aad
xchg
mov
leave
xchg
push
push
int
and
cmc
cmp
jmp
pop
and
popf
les
daa
scas
mov
out
dec
test
shll
insl
jno
out
mov
gs
imul
stos
sbb
lcall
inc
and
jecxz
jnp
cmp
xchg
icebp
aam
xbegin
in
jmp
pop
cmp
push
inc
popa
rcrl
mov
xchg
int
mov
pushf
out
lea
clc
icebp
cli
add
inc
xor
add
loope
adc
fldt
xchg
in
mov
jecxz
pop
dec
jae
int3
lcall
or
hlt
mov
out
sub
clc
mov
icebp
test
inc
data16
lock
lods
push
aad
adc
rcrb
mov
pop
xchg
movsb
rcrb
lret
xor
es
add
adc
ret
adc
out
inc
les
lds
fwait
pop
push
push
out
jp
setge
inc
movsl
pop
aaa
subb
fstps
clc
lock
xchg
sbb
repz
and
pushf
imul
and
pop
aaa
add
adc
aam
mov
imul
inc
icebp
iret
cli
test
push
into
dec
scas
cld
xor
jge
or
repnz
mov
imul
mov
rolb
movsb
push
movsl
int
shll
xor
and
addr16
push
push
inc
sub
rcll
xchg
mov
xchg
and
fwait
dec
mov
out
cmp
scas
jne
shr
cmp
jl
sub
iret
test
cmpsb
lret
int
fs
jg
dec
inc
cmp
ret
sbb
rorl
aas
pushf
xchg
mov
mov
xchg
push
pop
pop
int3
and
dec
adc
lret
call
nop
in
es
mov
lcall
insb
xor
cmp
iret
dec
fiadds
and
inc
jecxz
inc
fidivrs
cwtl
out
daa
std
mov
jg
xchg
jp
cmpsl
xor
jnp
mov
bound
ljmp
mov
mov
iret
inc
mov
dec
pop
aas
es
imul
loopne
pop
jo
xor
sbb
shrb
mov
pop
and
in
jo
decb
cmp
xchg
dec
or
push
imul
test
cwtl
insl
jne
in
lods
push
and
pop
adc
aad
or
aas
lds
cmp
stc
xor
mov
sbb
aam
popa
test
pushf
sbb
stc
xchg
cli
iret
cmp
mov
mov
jp
mov
movntq
out
sar
aam
push
xchg
fs
add
jnp
mov
sbb
scas
pop
xchg
add
bound
gs
scas
addr16
add
pop
js
jne
pop
add
pop
mov
xor
jecxz
mov
sar
mov
sti
loope
xchg
cltd
pusha
adc
and
or
mov
cmp
dec
imulb
outsl
aam
jmp
xor
cltd
idiv
fldl
cmp
movsl
xchg
test
mov
lods
pop
dec
mov
out
cwtl
fwait
inc
push
lret
jbe,pt
loope
ficompl
aam
push
icebp
cltd
cvtps2pi
dec
pop
jecxz
xchg
xchg
and
scas
xor
aam
pop
popf
mov
mov
lahf
push
lahf
insl
xor
add
push
adc
daa
ret
adc
push
inc
int
or
xor
adc
ror
jg
xchg
mov
mov
add
les
ljmp
stos
les
andb
repz
xchg
outsb
xchg
adc
or
dec
rolb
xor
inc
add
in
subb
add
push
push
fistpl
xchg
arpl
jge
in
mov
ret
mov
shl
enter
aaa
adc
add
aaa
mov
fstpt
scas
and
and
es
ret
mov
xor
inc
fcompl
cs
cmpsl
mov
cwtl
leave
out
adc
jle
xchg
scas
mov
cltd
and
xchg
xor
xor
push
cmp
adc
dec
icebp
das
jge
and
mov
inc
dec
cmp
xor
ds
rorl
dec
or
sbb
cmp
or
stos
push
iret
mov
xchg
and
jno
mov
adc
mov
dec
sbb
test
sarb
stos
and
pop
daa
push
jae
aas
out
int
fildl
mov
and
dec
push
test
out
lcall
movsb
sbb
dec
fldcw
mov
mov
faddl
sub
cld
xchg
repnz
daa
or
icebp
ljmp
mov
jg
inc
xchg
pop
add
movsl
adc
push
imul
subb
repnz
mov
xlat
or
das
jle
stc
repnz
pop
cmpunordps
and
or
fadds
cmp
mov
repz
ret
jmp
pop
inc
fidivs
xchg
sub
lods
ljmp
jecxz
int
add
xchg
xchg
lahf
push
mov
xlat
xchg
out
mov
and
cpuid
std
inc
mov
xor
lock
push
cmc
xchg
and
cmp
mov
movsl
leave
fcomps
sbb
sbb
xchg
jno
xchg
jmp
lea
loopne
pop
xor
push
sbb
inc
lret
and
and
ljmp
push
mov
mov
or
and
adc
sub
pop
loope
enter
inc
sbb
dec
jnp
add
dec
rorb
mov
test
add
mov
cmp
inc
into
mov
mov
sbb
outsl
mov
pop
pushl
lea
jnp
sub
dec
fistps
and
sub
pop
inc
int3
lret
pusha
and
and
cld
add
insl
lock
jl
test
lahf
ja
pop
jno
dec
sub
cmp
mov
jge
daa
cmp
in
cmp
test
add
pop
xchg
ret
dec
xchg
mov
jle
sarl
pop
ret
xchg
gs
cmp
ja
out
pusha
add
and
scas
push
test
subb
loopne
int
dec
stc
push
cmp
or
iret
pop
pop
jae
or
jp
ficomps
rolb
xlat
add
cmc
leave
push
ja
orb
xor
in
inc
int3
ficoml
call
or
std
add
int3
xchg
loop
cmp
jno
jae
mov
loope
push
imul
jne
popa
movsl
into
jge
int
lahf
add
je
cmp
hlt
cmp
pop
dec
dec
push
and
mov
cmp
repz
lret
push
cmp
mov
sub
jo
push
outsb
push
jmp
jl
pushf
inc
xor
pop
mov
jns
loop
les
cmc
rcr
jecxz
call
push
pop
add
xor
int3
jns
or
pop
dec
mov
adc
ljmp
es
mov
cmp
in
stos
cli
jg
push
int3
xchg
jl
mov
push
cmpsl
jle
cltd
push
jl
mov
cld
movsb
into
dec
xchg
or
ret
mov
test
and
rcl
int
mov
jbe
jne
mov
mov
stos
inc
xchg
out
in
push
rolb
ljmp
cmp
pop
imul
lret
cmp
cli
sahf
adc
repz
into
in
out
xlat
mov
mov
push
sbb
div
mov
xchg
je
je
jge,pt
ss
mov
or
mov
adc
xchg
mov
inc
inc
pop
mov
test
iret
stos
sbbb
inc
in
cmp
cmp
ret
push
lock
add
aas
xor
push
mov
or
imul
stc
mov
mov
outsl
lcall
fidivl
aam
push
out
mov
xor
sbb
sub
aam
and
jle
mov
mov
in
mov
jp
adc
lret
jb
pop
xor
pop
rcll
pop
fs
or
mov
xchg
mov
adc
pop
test
daa
push
mul
cli
sbb
sbb
mov
shrb
stos
pusha
dec
or
or
lahf
mov
jge
mov
mov
push
mov
fisttps
or
fldt
mov
pop
imul
cltd
incb
lret
inc
adc
rorb
jne
stc
mov
fildll
pop
push
adc
sub
lea
lock
jmp
dec
and
lahf
push
or
dec
and
and
sbb
pop
jnp
inc
xor
fists
lds
adc
sti
hlt
loopne
sub
cmpsb
setae
daa
outsl
mov
popa
mov
jnp
bound
out
push
je
shll
cmp
mov
stos
or
mov
inc
mov
pop
test
jno
int
addr16
mov
cmpsl
subl
hlt
push
repz
lcall
leave
mov
mov
cmp
lret
lret
push
xchg
dec
int3
or
arpl
cltd
sub
cmp
das
pop
lret
lds
int
scas
sar
mov
inc
aas
adc
adc
pop
fisttpll
xchg
inc
pop
mov
aas
jge
movsb
mov
and
pop
lods
popa
xor
in
ret
jle
test
hlt
ss
lcall
test
repz
xchg
mov
mov
and
jae
or
ficompl
mov
out
xor
push
xchg
pop
repz
dec
repz
sbbl
push
sub
fidivrl
stc
mov
cmpsl
fidivl
inc
sub
je
stos
cli
hlt
ljmp
sub
mov
sbb
adc
push
out
iret
add
pop
inc
pop
mov
imul
clc
pop
mov
rcll
pop
pop
and
pop
jb
repnz
bound
add
call
cmp
jle
test
iret
mov
mov
inc
or
adc
rclb
movsb
inc
push
and
jg
push
les
mov
adc
mov
hlt
cmc
outsl
sarb
jecxz
cmp
and
sub
push
std
jle
movsl
mov
pop
flds
test
jg
clc
outsl
lods
adc
in
push
mov
mov
mov
aad
mov
test
push
roll
aam
out
dec
ficoms
dec
dec
xor
fsubl
addb
dec
xor
fucomip
jmp
dec
pusha
push
pop
mov
pushf
inc
xor
fisubl
xchg
cmp
dec
sti
outsl
xchg
rcr
xchg
xorb
sub
ds
sbb
or
out
mov
cmp
mov
add
or
test
fcomp
jnp
shlb
xchg
movsb
xchg
fwait
pop
sbb
sub
cmp
stos
sub
mov
mov
lods
out
jmp
imul
mov
notl
pop
or
outsl
jecxz
clc
xchg
fwait
pushf
and
je
pop
scas
ret
addb
popf
out
arpl
xor
xchg
mov
bound
adc
inc
fstpt
cmc
inc
cld
rcl
fldt
test
lahf
inc
outsl
and
xchg
lret
push
xor
int
inc
cs
or
jo
popf
das
shl
xchg
xor
xchg
jb
cmpsl
stc
int3
mov
clc
and
fisubs
cmp
push
cwtl
repz
push
sub
ret
mov
xor
cmp
adc
mov
mov
ret
and
in
shrl
into
pop
popl
mov
or
adc
push
adc
mov
dec
loopne
push
push
out
mov
add
ror
sbb
inc
mov
jno
orl
call
pop
sub
daa
pop
add
test
in
xor
mov
xchg
mov
mov
push
jae
push
and
inc
sbb
into
and
fidivrs
push
inc
lods
mov
dec
mov
int3
jp
sahf
pushf
dec
cwtl
popa
mov
ljmp
mov
daa
pushf
imul
mov
and
mov
leave
fdivp
sbb
pop
inc
inc
dec
pop
repz
add
cmp
sub
xor
jge
test
repz
xchg
jbe
pop
rol
jno
mov
sti
inc
out
push
das
dec
sub
nop
mov
pop
xor
adc
or
or
lds
shlb
inc
int3
fisubl
xor
daa
rolb
push
xchg
jp
sub
fistps
mov
fisubl
xchg
xchg
fisubrs
cwtl
stc
imul
xor
xchg
mov
fdivs
scas
lods
pop
lea
in
mov
pop
adc
dec
out
pusha
push
test
xor
in
pushf
leave
xchg
cmp
shlb
and
inc
adc
in
cvttps2pi
cmp
loopne
adc
cmp
jbe
or
and
fimull
mov
mov
imul
test
stos
stos
cmp
mov
scas
add
xor
lcall
daa
rcr
sbbl
outsb
jp
cmpsl
push
lds
or
sub
add
rorb
mov
jnp
or
xchg
lret
adc
pushf
inc
std
imulb
dec
aas
or
jnp
jmp
pusha
fistps
jbe
ss
mov
pop
test
repz
js
aad
ljmp
aam
push
mov
or
rorb
dec
aas
arpl
data16
pop
repnz
cmp
stc
inc
dec
movl
in
cld
ds
xor
sub
mov
enter
and
or
aaa
pop
inc
push
or
hlt
push
fnstsw
repz
add
pop
lret
pop
sub
mov
dec
pop
outsb
mov
and
into
pop
stc
lahf
jnp
roll
mov
inc
fldt
cmp
enter
xor
add
inc
add
or
fdivrs
inc
repz
adc
pop
sarb
fs
dec
fdivrl
cmc
jp
mov
aas
jmp
xor
out
shl
mov
push
out
pop
imul
cmp
sbb
stc
xchg
jmp
les
hlt
mov
adc
and
xor
inc
cmp
sbb
stc
xchg
jmp
les
hlt
mov
xor
inc
cmp
sbb
stc
xchg
call
les
hlt
mov
adc
and
xor
inc
cmp
cltd
hlt
idivb
imul
mov
mov
pop
push
sbb
or
cmp
inc
sbb
sub
inc
add
in
cmc
stos
lds
mov
test
xchg
lret
jne
inc
sbb
and
pop
adc
lret
aad
movsl
cli
mov
test
jne
inc
sbb
and
pop
adc
stos
mov
sti
mov
mov
sti
lret
jne
ss
pop
gs
out
dec
daa
and
mov
cs
aad
out
insb
leave
stos
mov
fdiv
psubw
or
push
fistl
fwait
push
pop
pop
mov
fwait
popf
cmp
mull
js
sti
cmpsb
in
lahf
push
cmp
ja
sti
cmp
loopne
push
inc
and
je
xor
aam
and
aad
mov
popa
in
dec
repz
fstl
lcall
cmc
sahf
jnp
jg
dec
adc
cmc
inc
or
aad
pop
dec
sub
mov
gs
dec
aad
jl
repz
hlt
out
das
sahf
stos
mov
lahf
stos
cmp
out
mov
test
std
lret
cmp
jne
inc
sbb
and
pop
adc
stos
lds
mov
test
xchg
mov
and
arpl
jl
pusha
adc
sbb
mov
cltd
rcr
mov
pop
sub
xor
add
ret
test
nop
in
cltd
loope
idivl
adc
jb
outsl
and
pop
adc
stos
lds
mov
test
xchg
lret
jne
inc
sbb
and
pop
adc
stos
lds
mov
test
xchg
lret
shlb
test
dec
pushl
or
add
out
inc
lods
or
dec
sbb
and
mov
sarl
les
iret
inc
mov
pop
into
cmp
test
adc
pop
or
outsb
mov
es
jl
dec
push
push
xchg
push
dec
and
mov
sti
sbb
call
push
out
mov
jbe
shll
lods
cltd
push
mov
fcmovnbe
dec
adc
dec
pop
xchg
nop
movsb
fsubrs
in
lea
jno
pop
cmp
mov
xchg
mov
loopne
ficomps
mov
adc
in
mov
pop
add
mulps
clc
lcall
loope
mov
ret
sub
xchg
rcll
and
setle
jns
jmp
lcall
dec
pushf
cmc
dec
mov
aaa
jp
fistpll
cmp
mov
xor
fs
repz
cmp
ret
and
sbb
movsb
arpl
scas
lea
into
push
inc
lret
jno
push
fstps
out
imul
add
movb
loopne
or
push
icebp
call
in
mov
push
dec
jns
push
lds
dec
xor
xchg
int3
sub
out
scas
cmp
push
mov
scas
or
pop
jl
popf
mov
movsl
mov
mov
jno
xchg
into
sbb
cmpsb
pop
pusha
lds
cmpsb
fdiv
ja
fnstenv
cli
xlat
fimull
sub
cmp
sbb
xchg
jmp
in
shll
test
testb
fimuls
stos
mov
rclb
sbb
das
sbb
mov
out
pop
push
outsl
jl
iret
nop
stc
inc
fsubrl
lret
and
xor
movsl
stos
dec
or
push
call
insl
loope
mov
mov
xor
push
xor
mov
or
xchg
pop
fucomp
and
std
lcall
lods
je,pn
negb
icebp
pop
cmpsb
bound
aas
aas
push
mov
mov
xchg
sub
xchg
adc
jle
xchg
movsl
repnz
jmp
ljmp
mov
cmp
notb
jg
sbb
xor
sub
movsb
adc
pop
lahf
icebp
mov
movsl
les
mov
lret
lret
scas
jae
imul
jb
hlt
dec
push
lods
sub
cs
imul
std
and
pusha
loopne
jo
cmpsl
gs
sbbl
nop
and
movsl
add
sub
or
das
adc
ret
std
jb
rcrb
inc
ss
int
sub
sub
cmp
lcall
jbe
call
das
lock
mov
gs
fucomip
jp
cmc
inc
cmp
mov
das
xlat
loopne
jge
dec
add
inc
iret
aam
or
lahf
repnz
daa
sbb
or
add
clc
test
mov
out
or
js
inc
clc
in
hlt
insl
in
loop
stos
cmp
lea
addl
in
xchg
call
rorl
pop
mov
fcmove
repnz
fwait
jmp
xchg
lret
dec
xchg
xor
xor
sub
call
imul
jmp
sub
ljmpw
push
inc
push
fwait
arpl
push
mov
pop
stc
jl
xor
sub
rcrb
push
cmp
bound
jb
outsb
shll
and
negl
xor
push
in
add
cmpsb
xchg
call
jmp
fwait
cmc
mov
ficoml
leave
mov
pop
aad
dec
add
pop
dec
xchg
int3
loope
les
add
push
movsl
stos
jbe
pop
push
push
bound
in
pcmpgtb
xchg
cmpsl
sub
movsb
mov
cmpsl
loopne
ret
daa
xchg
add
pop
adc
inc
in
daa
cmp
pushf
into
pop
add
jnp
jecxz
sub
mov
pop
loop
insb
arpl
int
outsl
pop
jae
dec
adc
into
or
fimull
jecxz
jg
mov
shrb
mov
xor
mov
out
push
fs
lret
shlb
push
jge
xor
pop
jno
jne
sti
das
bound
fdivrs
loop
cmp
lods
out
out
hlt
inc
mov
test
mov
xlat
lods
shl
repnz
mov
in
xor
xchg
ret
inc
xchg
pop
mov
xor
inc
movsb
ljmp
cmp
imul
inc
and
int
lret
sub
ja
adc
repz
loope
push
leave
fimull
pop
sub
ffreep
or
daa
cmc
add
mov
pop
pop
les
lcall
cltd
mov
mov
and
movsb
jo
mov
cmp
inc
call
dec
xchg
gs
mov
mov
sbb
sub
popa
das
es
push
push
out
ret
sbb
push
fsubl
mov
jl
jne
mov
push
sarl
mov
cmp
cmp
test
mov
sub
adc
xchg
add
lods
sti
icebp
data16
push
or
das
xchg
xor
test
ja
std
xchg
inc
insb
test
scas
daa
dec
and
sub
add
notb
cmp
into
sti
loope
sub
clc
sbb
xor
push
mov
mov
push
and
scas
or
ss
arpl
in
popa
outsb
cwtl
adc
and
insl
mov
fcompl
out
jns
dec
imul
pop
sbb
clc
movsb
sub
mov
fsubrs
aad
add
or
xlat
loopne
pop
arpl
sbb
dec
jmp
adc
add
pop
aas
xchg
into
dec
mov
imul
or
stc
xlat
arpl
aam
cmp
stos
pop
lods
setge
fwait
xor
push
lret
xchg
xor
pop
aaa
adc
xor
into
lods
xchg
sbb
fdivs
cmpl
lcall
aas
xchg
incl
fisubrl
push
insl
in
jg
std
inc
push
pusha
sub
ja
add
mov
or
push
movsl
push
mov
mull
mov
loop
mov
pop
sahf
mov
pextrw
jge
cli
pushf
aam
jl
loop
imul
stos
inc
dec
icebp
scas
popf
push
sbb
xor
and
ss
mov
shlb
pop
loope
add
cmp
idivl
or
push
jl
xor
jp
mov
sub
loopne
jnp
shlb
call
xor
mov
inc
push
add
sti
imul
xlat
je
rorl
or
mov
sbb
fistps
cmp
push
mov
mov
sbb
mov
xor
inc
mov
stos
and
push
cmp
xor
jge
popa
call
fstp
loope
aas
ljmp
pop
mov
test
lock
sahf
xlat
mov
pop
pop
lods
filds
pop
pushf
in
lock
xor
ds
adc
and
mov
xlat
mov
das
add
pop
sarl
adc
jmp
add
arpl
insl
fstl
mov
test
repz
movsb
into
loop
es
mov
mov
mov
out
pop
jb
cwtl
mov
mov
mov
mov
pushf
roll
roll
sbb
inc
test
scas
pop
xchg
sbb
movsb
push
inc
in
into
dec
or
jmp
pop
outsl
mov
xor
insl
or
loop
je
pop
aam
leave
xchg
inc
cs
ss
jno
mov
xor
push
push
lods
jge
cwtl
movsl
cmp
sub
sti
subb
or
mov
dec
push
popa
xchg
sti
into
push
and
xlat
jne
xor
js
jle
fsts
mov
roll
lods
jnp
or
popl
sub
pop
push
int3
or
jns
add
sbb
test
rcll
arpl
cwtl
add
mov
push
notw
fcoms
cltd
pop
leave
inc
clc
jmp
aas
sub
mov
orb
xor
pop
pop
ffree
inc
ja
pop
mov
ljmp
popa
sti
ljmp
jo
sub
vpmadcsswd
in
dec
scas
add
shl
xchg
in
divl
testl
adc
adc
in
ljmp
les
cmpsl
fcomp
and
movsb
repz
test
outsl
nop
mov
mov
into
es
movsl
cmp
adc
sub
fdivrl
cmc
push
mov
or
fstp
fildl
ds
outsl
push
cmpsb
mov
or
mov
sarb
das
inc
enter
or
imul
mov
into
jno
insl
adc
cmpsl
into
lea
popf
adcb
lock
pop
nop
int
scas
and
test
dec
into
rcll
in
pop
or
and
leave
sti
xor
pop
daa
inc
mov
lock
data16
mov
jno
pop
pop
cld
mov
les
or
mov
add
fs
lods
or
sub
mov
adc
pop
push
fdivrl
jo
dec
bound
jns
imul
jno
cmp
mov
or
push
fistpl
stc
adc
inc
movsb
mov
dec
and
das
jl
lcall
loop
repnz
sahf
loopne
test
pop
push
int
inc
cmpsl
scas
addr16
mov
mov
dec
scas
add
insb
clc
xchg
incb
pop
lods
and
ss
ss
insl
arpl
xor
adc
pop
mov
adc
or
ja
and
add
sbb
inc
in
xlat
ret
cmp
xor
and
aad
stos
dec
inc
push
jl
push
mov
mov
dec
in
call
lahf
mov
pop
inc
mov
mov
xor
loope
mov
lock
gs
int3
sarb
pop
js
mov
push
pop
push
mov
es
add
pop
cltd
test
mov
addr16
dec
pop
sbb
push
dec
sbb
popf
dec
fidivs
push
adc
mov
in
mov
fcmovbe
xchg
adcl
mov
aas
mov
test
mov
adc
sahf
mov
out
scas
outsl
rolb
and
add
mov
stc
loopne
add
cmp
dec
jno
imul
add
fwait
push
clc
add
and
nop
dec
sub
iret
mov
rorb
ja
stos
add
cmp
xchg
mov
adc
and
in
cli
adc
fwait
mov
lea
lahf
jl
imul
in
adc
or
jle
lods
push
push
fwait
test
jns
mov
mov
insb
xchg
in
jnp
sbbl
inc
andb
popf
mov
cmp
jmp
pop
and
orl
mov
sbb
pop
stos
int3
pop
mov
xchg
popa
popf
jle
push
add
or
xchg
push
cmp
push
mov
pop
jmp
mov
or
jmp
repnz
mov
mov
mov
dec
dec
lret
sar
fimuls
xor
cmp
sub
jo
fstp
cmpsb
stos
adcl
push
shlb
xor
push
mov
dec
lcall
loopne
in
cmp
jnp
data16
pop
cwtl
outsl
lock
add
loopne
mov
inc
fstl
and
out
dec
bound
jo
inc
and
lods
sbb
jb
xchg
sbb
or
inc
cmp
fists
push
xlat
jp
dec
cmp
cmp
push
push
shll
pop
pop
dec
or
adc
cmp
jge
xchg
movsl
test
loopne
ret
cmc
add
adc
fldt
pusha
inc
sub
xchg
dec
xchg
cmp
fistpll
mov
add
and
add
lds
mov
push
push
push
lahf
jp
inc
pop
jp
xchg
adc
test
aaa
xor
xchg
cmp
xchg
sbb
cmpl
and
iret
les
add
rcrb
shll
imul
cmpsl
ljmp
std
loopne
jp
or
fdivrp
jae
mov
aaa
out
test
scas
mov
adc
adc
mov
lahf
dec
addr16
push
jo
int
ret
in
inc
and
sub
jl
out
pop
jle
push
jnp
or
outsb
mov
stc
popa
sub
fistps
dec
js
jnp
das
nop
sbb
addr16
mov
movsb
mov
sbb
mov
sbb
sub
daa
dec
fsubl
mov
mov
jp
lret
dec
jbe
filds
sbb
pop
outsb
sbb
xchg
mov
xchg
mov
push
inc
orb
inc
mov
push
dec
daa
ds
and
jne
loop
cmp
add
int
pop
stc
sub
rep
call
jmp
adc
mov
test
jp
adc
in
pop
cltd
hlt
cmp
cs
out
cmpsb
popf
mov
in
dec
cmp
inc
imulb
fwait
outsl
mov
sbb
cs
jns
cmpl
mov
xchg
and
arpl
out
out
mov
dec
arpl
mov
insl
fldl
shll
popa
jno
inc
rol
cld
mov
in
js
jge
in
je
pop
or
lahf
adcl
sub
in
pop
mov
inc
shl
in
dec
orb
dec
shll
ror
shl
rorb
cs
jle
dec
pop
push
cwtl
inc
test
lds
push
jne
bnd
ljmp
mov
cld
shrl
sub
setno
sub
dec
loope
dec
and
jmp
mov
cmc
cltd
dec
cs
hlt
mov
pusha
inc
xor
jo
pop
punpcklbw
int3
sbb
xchg
push
mov
sub
imul
jne
call
mov
imul
sub
idivl
mov
push
movl
popf
or
mov
popf
pop
cmp
fsincos
std
or
test
std
loope
or
push
test
jns
sbb
pop
inc
mov
sub
adc
adc
mov
outsb
mov
int
and
mov
cli
cmc
pop
push
jecxz
shlb
sbb
jmp
scas
push
int3
pop
sub
jno
cmpsl
sar
xchg
dec
popf
sub
jb
mov
jecxz
jno
gs
adc
adc
aaa
jbe
xor
lret
or
fisubrs
lret
cmp
arpl
das
pop
adc
mov
or
jl
gs
mov
inc
fcompl
xor
idivl
rolb
out
out
pop
pop
jno
je
out
pushf
cmpsl
push
leave
cmp
and
mov
ror
jnp
lret
add
lock
stos
jns
cli
fistps
push
add
xchg
and
int
mov
hlt
jo
jb
xor
xchg
and
out
outsb
ss
push
out
insb
add
insb
push
xchg
je
ljmp
and
and
inc
jno
and
sub
push
xor
pop
push
push
aaa
insb
sub
push
cmpsb
sbb
ja
mov
mov
xor
sub
mov
xor
mov
std
xchg
sarl
imul
jae
dec
push
aam
fisubs
adc
xchg
xchg
inc
mov
mov
mov
aam
sti
xchg
jle
xor
fldl
and
gs
das
sub
push
lds
and
push
popf
popa
mov
jne
aam
mov
shl
in
sbb
jl
sbb
pop
pop
or
hlt
aam
cmp
fiaddl
dec
xchg
pop
in
insl
mov
mov
pop
cmc
leave
mov
jmp
fimuls
mov
pop
sub
ja
cmpsb
dec
pop
jo
xor
xchg
rcrl
out
stc
xchg
daa
test
xchg
cmp
sbb
push
imul
aas
jno
xchg
cmp
dec
push
into
mov
cmpsl
or
sub
mov
sbb
and
xor
fcoms
sub
sarb
push
jne
cwtl
icebp
mov
mov
xor
sahf
cwtl
mov
fxch
in
in
mov
mov
scas
inc
mov
sbb
cs
aam
sub
das
loope
jae
test
cltd
cmc
stos
inc
ja
dec
jecxz
xchg
cmp
es
bound
outsl
int
jb
loope
pop
sbb
test
inc
bound
mov
data16
cmpsb
repz
xchg
into
clc
mov
out
push
scas
dec
ret
push
cmp
and
shrl
push
arpl
pop
mov
inc
cmp
hlt
data16
aad
scas
std
lret
sbb
adc
adc
enter
mov
pop
sarl
sub
lods
std
sar
outsl
xor
pop
outsl
in
fdivr
mov
gs
xor
add
add
fsubrl
movsb
xchg
and
or
cmpsb
pushf
and
fsts
lods
in
sub
out
out
int
sbb
or
lcall
dec
lret
push
sub
pop
cmpsb
push
mov
jne
push
lret
fmul
sub
and
cmc
mov
test
mov
jo
and
out
ss
sti
pop
xlat
add
sub
shll
repz
jae
les
jns
imul
jbe
mov
scas
loope
add
dec
cld
and
add
xor
pop
mov
lods
push
lods
jmp
imul
je
adcl
stos
push
es
lds
outsb
and
imul
dec
pop
scas
and
jb
dec
test
cs
adc
popf
test
cmc
push
or
jnp
cmpb
out
jmp
sub
xlat
in
shlb
mov
fcmovu
lods
or
loopne
sub
adc
pop
mov
in
outsb
add
push
mov
adc
int
xor
mov
push
xchg
mov
je
mov
jp
mov
fldl
dec
push
cmp
jne
sub
mov
add
adc
lret
mov
gs
cld
cmp
scas
arpl
add
repnz
leave
pop
cmpl
inc
cli
adc
aam
mov
ljmp
insl
add
jae
or
fistpll
sbb
fstl
iret
pushf
lret
addl
in
jge
lcall
pop
mov
lret
mov
cli
pop
fdivs
es
cmp
testb
jge
xor
mov
mov
nop
cltd
dec
clc
adc
cwtl
cmp
cltd
push
sbb
dec
call
cmp
stos
jae
add
cltd
mov
ret
push
fprem1
roll
mov
cmp
dec
sti
push
orb
push
pop
pop
sbb
lods
mov
push
cwtl
jbe
jg
mov
fnstsw
xchg
rcrb
jb
pop
mov
jb
movsb
nop
xchg
rcll
in
int
sbb
xor
push
out
pop
dec
adc
xchg
mov
fildll
inc
ret
loop
inc
jo
fmuls
mov
bound
clc
pop
push
stos
fstps
in
dec
sub
nop
or
stos
pop
imul
or
imul
sub
adc
mov
and
insl
or
cltd
lcall
jp
sbb
cmp
js
aas
push
mov
lds
ret
ret
mov
hlt
pop
cld
fistpl
inc
mov
aad
pushf
je
and
rorl
or
out
and
pop
test
pop
mov
sub
and
mov
in
ljmp
outsl
or
lea
add
xor
int3
mov
cmp
into
fs
in
gs
xchg
add
mov
jae
jmp
push
sarb
pop
or
cmp
test
adc
adcb
fwait
pop
aad
mov
jmp
sub
das
pop
push
js
dec
shl
stos
fldl
loope
mov
shlb
jge
push
sti
arpl
nop
pop
mov
fchs
mov
cmp
out
xchg
jmp
push
sub
push
insb
lcall
jbe
lret
cmp
mov
movsl
bsf
les
xchg
mov
sbb
pop
sub
pop
stc
movsl
aad
pop
pop
mov
cmp
push
mov
je
dec
inc
push
lds
movsb
test
jo
ljmp
xor
sbb
and
cmp
imul
xor
mov
outsb
addr16
dec
dec
movsb
ret
shr
mov
or
pop
cmp
or
sbb
cli
push
push
mov
xchg
mov
jecxz
lcall
lret
jns
push
iret
outsl
xchg
lds
mov
js
push
or
pop
adc
stos
lds
mov
test
xchg
lret
jne
inc
sbb
and
pop
adc
stos
lds
mov
test
xchg
lret
jne
inc
lcall
add
cmp
stos
lds
mov
test
xchg
lret
jne
inc
sbb
and
pop
adc
add
aad
shlb
adc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adc
xchg
push
movsb
es
jle
hlt
cmp
mov
xchg
and
push
pop
je
je
test
xchg
push
movsl
es
les
inc
in
hlt
add
adc
inc
cmpsb
xor
inc
mov
aam
out
testb
les
dec
in
hlt
insb
add
adc
inc
fists
daa
mov
cltd
hlt
dec
xchg
callw
push
dec
mov
xchg
pop
test
cltd
test
sub
rcrb
decl
shrl
cmc
lds
jno
jmp
jge
mov
mov
push
add
aad
ror
jge
push
subl
jb
lret
dec
cli
arpl
inc
pop
xchg
jmp
les
inc
add
hlt
repz
shrb
pop
fdivrl
movsb
cli
pop
push
je
jle
jns
imul
fldenv
and
outsb
hlt
push
insb
jp
imul
loope
mov
stc
xchg
bound
fidivs
mov
sbb
xor
sti
out
ret
pop
mov
ss
lock
xchg
push
movsb
aas
mov
les
push
in
hlt
outsl
add
adc
and
xor
inc
ficoms
cld
je
lock
shlb
cli
push
xchg
mov
jmp
push
shll
mov
add
rclb
pop
mov
adc
pop
ret
push
mov
mov
xor
imul
inc
xchg
jae
jne
push
in
hlt
jbe
xchg
and
xor
inc
push
fs
testb
les
push
in
hlt
jbe
xchg
and
xor
inc
push
fs
testb
xor
int
enter
imul
mov
add
jle
cmpsl
nop
push
mull
jae
movsb
out
and
shlb
sarl
or
test
mov
leave
xchg
mov
jge
or
fidivrl
inc
or
cmp
lret
scas
test
aad
pusha
test
jae
sbb
jbe
lods
orb
add
pop
pop
push
inc
inc
fmull
pop
jb
sub
rcrb
mov
mov
flds
pop
test
lods
xlat
stos
int
aad
mov
pop
rcrb
ja
push
or
mov
cmpsb
cltd
pop
dec
sub
dec
pop
push
scas
outsb
sbb
xor
fdiv
pusha
jno
sti
xchg
push
sbb
sbbw
dec
pop
add
popf
lret
popf
jmp
jge
adc
lret
mov
and
cmp
inc
xlat
sub
int3
leave
scas
jne
inc
cmp
or
xor
cmpsb
cs
fmull
outsl
data16
and
addr16
lods
insl
add
sti
add
jns
fnsave
bound
mov
dec
cmp
es
adc
shrl
jg
mov
shll
and
xchg
xchg
inc
cs
fsub
test
lea
adcl
cmpsl
bound
aaa
pop
dec
and
outsb
mov
sub
cli
fisubrl
aad
cltd
pusha
nop
cmp
and
jo
bound
cmpsb
adc
xor
add
xchg
and
cs
insb
mov
stc
lds
mov
gs
cmc
mov
fstpl
or
push
mov
or
push
dec
bnd
jns
push
dec
push
mov
in
jp
push
and
aam
dec
cmovbe
mov
mov
sbb
or
xchg
pop
loop
add
fwait
mov
icebp
mov
xchg
mov
aam
adc
cmp
arpl
aas
fsubs
das
stos
cmp
adc
push
fsubrl
add
adc
push
dec
jge
insb
and
add
adc
popa
pop
lret
add
push
dec
mov
data16
jns
jecxz
xor
ss
daa
cmova
fdivrs
js
add
cmpsl
je
push
push
movsl
lods
add
icebp
mov
add
sub
cltd
add
inc
out
std
mov
xchg
mov
repz
pop
mov
scas
jl
cld
sbb
jne
mov
and
out
dec
push
cmp
ljmp
data16
xor
push
outsb
jnp
les
repnz
cld
inc
xor
mov
loope
or
jo
lret
push
faddl
leave
push
and
aaa
inc
addl
xor
lods
lea
popf
pop
iret
jmp
push
test
fsubs
cmp
jmp
ffree
insb
imul
data16
or
rolb
sbb
push
shl
add
js
cmp
sub
pop
add
adc
je
pushf
push
cmpsb
adc
xchg
lods
push
adc
ljmp
test
into
pushl
sub
movsl
sbb
inc
outsb
sub
sub
les
stc
stos
mov
popf
sbb
sub
scas
cmp
sti
mov
push
push
or
mov
daa
fcmovne
lods
inc
fnstenv
fstps
dec
es
sbb
stos
xchg
mov
lods
nop
adc
or
das
out
or
sub
in
dec
lock
push
dec
popl
ret
int3
int
js
push
xor
and
adc
cmp
jb
fwait
mov
hlt
mov
ds
mov
aad
inc
das
movsb
xor
sbb
xor
mov
adc
pop
sbb
lds
jb
int
sbb
incb
int
mov
inc
mov
pop
dec
mov
mov
add
xchg
sbb
sarl
imull
movsl
cld
shrb
cmp
hlt
dec
lods
inc
ljmp
push
xchg
pop
jge
adc
cs
cmp
cmp
cs
mov
pop
jle
xor
mov
inc
xor
leave
pop
or
sbb
add
mov
dec
call
dec
lret
int
add
loopne
push
add
outsb
mov
add
out
lea
int3
loop
adc
xchg
adc
mov
and
dec
xchg
enter
in
mov
mov
jge,pn
leave
ret
fnstsw
je
cmp
cmp
dec
xorb
stc
jbe
and
aas
cwtl
sahf
sub
in
pop
mov
popf
into
addr16
in
jecxz
outsb
pop
xlat
lret
inc
imull
xchg
dec
or
into
jmp
jmp
dec
adc
inc
and
mov
mov
push
jl
daa
inc
jge
jg
movsb
outsb
ret
xor
mov
fsubl
pop
sub
inc
jmp
cmp
cmp
outsl
out
jo
aam
push
adcb
test
jnp
add
sub
add
gs
icebp
mov
inc
rorb
or
pop
leave
pop
push
mov
jle
rclb
xor
mov
repz
push
in
icebp
insl
repnz
pop
pop
aas
out
clc
pop
popf
pushf
xor
sbb
orl
inc
lahf
ret
cmc
test
xchg
add
mov
xor
inc
out
adcb
cmp
push
lahf
movsl
ljmp
in
stos
push
test
scas
push
add
popf
neg
rcll
jecxz
popf
sti
and
loope
pushf
outsl
jp
and
insb
dec
pop
fldlg2
leave
xor
arpl
push
lea
dec
sbb
orl
jne
lea
dec
and
in
lret
out
aas
jo
add
cmc
and
push
mov
dec
stos
sahf
cmp
sbb
mov
sahf
lret
jbe
lret
adc
add
xor
mov
gs
mov
and
fildl
fmulp
movups
pop
push
xchg
fnstsw
sbb
sub
xlat
push
movsl
sti
push
push
sti
imul
test
imul
mov
jnp
mov
inc
lcall
mov
dec
cld
adc
in
push
scas
mov
mov
lret
sti
pop
les
rcrb
pop
sub
push
sbb
mov
stos
xchg
pop
cmp
inc
mov
xchg
out
icebp
ss
and
mov
mov
dec
cmp
sbb
cli
pushf
pop
ljmp
imul
rcrl
test
pop
cld
or
pop
mov
decb
dec
jecxz
xchg
and
adc
and
cmp
xlat
mov
mov
xchg
sbbl
jecxz
inc
xchg
xchg
mov
aad
and
sub
sbb
ja
outsl
or
insl
jnp
cli
xchg
sbb
cltd
orb
stos
push
cltd
xlat
fcom
add
fldt
jno
shrl
aam
xchg
xchg
cmp
dec
outsb
sub
fidivrl
mov
bound
or
int
fs
enter
sbb
pop
enter
jecxz
lcall
cwtl
nop
mov
jge
test
imul
inc
sbb
leave
pusha
sbb
out
and
dec
inc
push
pop
rclb
outsb
or
pop
mov
sahf
jb
iret
mov
leave
dec
aaa
jae
hlt
sub
fidivl
mov
es
dec
arpl
mov
mov
loopne
inc
sub
cld
and
pop
mov
or
scas
jno
mov
leave
enter
dec
push
nop
in
scas
nop
insl
lock
cmp
push
or
pop
call
add
popa
aaa
hlt
push
adc
ljmp
push
icebp
xor
in
jmp
mov
pop
jp
add
cmp
scas
hlt
push
dec
adc
hlt
mov
out
push
mov
mov
mov
push
cmp
push
sbb
loope
fisttpll
dec
cltd
ds
popf
test
ficoml
lcall
out
insb
dec
popf
into
imul
mov
daa
adc
scas
push
idivl
inc
mov
prefetcht2
cmpsb
or
les
adc
pop
fiadds
rclb
jecxz
ljmp
ljmp
rcll
cmpsb
or
movsb
cmp
nop
pushf
call
clc
xor
lods
mov
decl
sub
mov
lahf
clc
adc
stc
or
out
cmpb
dec
or
aaa
add
adc
pop
les
jl
sub
inc
xchg
mov
jl,pt
rcl
orb
and
ret
sahf
sbb
or
aas
sub
repz
sub
add
dec
fcompl
sub
ss
mov
lods
sbb
test
jnp
les
in
mov
xor
push
mov
leave
fcompl
sbb
popf
sub
lds
push
adc
sarl
dec
imull
lret
adc
push
mov
jmp
nop
jae
inc
add
add
stos
jo
filds
push
dec
cli
das
je
dec
sub
sbb
sub
mov
xchg
iret
xchg
ret
or
pop
cs
pop
popf
ljmp
dec
mov
enter
sbb
cmp
cmpsb
insb
fiaddl
fstl
scas
jns
adc
dec
xor
sahf
jbe
push
jo
js
cmpsb
pop
jno
cmp
lret
xor
repz
pop
in
aam
cltd
push
lds
cmp
pop
inc
repz
or
add
gs
hlt
cli
sti
push
cmpl
out
pop
jl
addr16
addl
add
pop
clc
cmp
xchg
cmpsl
lea
pop
ffree
fldt
inc
sub
adc
ret
pushf
mov
mov
lret
xchg
loopne
xor
popf
xchg
sub
pushf
mov
mov
aad
mov
jne
adc
dec
ss
jb
xor
cmpsb
std
sbb
shrb
lret
mov
push
adcb
scas
jb
ds
fstpt
xchg
or
pop
jp
stos
std
in
lahf
decl
int3
repz
pop
sbb
int3
movsb
lods
in
inc
inc
lret
push
sbb
fcompl
vpcmpgtw
out
mov
cmp
decb
xor
stos
shll
mov
mov
je
loop
adc
push
cli
shll
mov
mov
in
fistps
sbb
mov
test
mov
call
les
shr
inc
rcll
sub
fiadds
jmp
sub
out
sbb
ljmp
inc
shlb
sbb
fsubl
and
loope
fidivrs
adc
inc
es
adc
movsb
lods
sbb
ja
mov
mov
ljmp
stos
and
xor
aas
add
add
pop
pop
xor
dec
xchg
jo
mov
test
stos
and
dec
sarb
xchg
or
jae
adc
dec
xor
xchg
into
adc
dec
mov
in
mov
xchg
iret
mov
adc
add
loope
and
iret
jnp
dec
push
fmuls
cmp
movsb
jne
xchg
mov
stos
xrelease
push
insb
jno
mov
rcrl
inc
pop
gs
mov
sahf
mov
and
repz
jl
jne
pop
sahf
std
xchg
shl
mov
jbe
popa
lea
or
and
mov
sbb
push
stos
lret
pop
decl
sbb
mull
fsubs
mov
mov
inc
cmp
jecxz
mov
lods
xchg
or
rcll
fwait
movsl
jge
fwait
jmp
sbb
xchg
or
xchg
out
sbb
fdivr
sbb
dec
cli
daa
and
sar
orl
xchg
sub
dec
jb
pushf
sbb
inc
leave
inc
in
insl
push
push
scas
and
pop
or
push
in
imul
push
sbb
out
mov
fdivl
add
xor
dec
sub
xor
cmp
out
add
iret
xor
mov
jge
sub
fmuls
mov
loope
xor
mov
mov
jmp
push
sbb
rorl
cmp
cmp
pop
cmp
mov
dec
sub
add
orl
test
xchg
outsb
pop
in
xlat
add
out
push
scas
and
jmp
push
pop
and
shll
mov
push
jge
lock
outsl
sub
jno
imul
repz
lret
shrb
scas
das
vpmaxsw
sbb
dec
jne
xorb
and
push
cmp
sub
cmp
jae
jg
mov
popf
mov
dec
mov
pop
mov
test
pop
clc
dec
pushf
mov
sub
xchg
xchg
fisubrl
cmp
push
lea
adc
xor
sub
cmp
cmpsb
cltd
cmp
xor
or
cmovp
jg
lret
sbb
push
inc
xchg
mov
jno
mov
push
lret
fwait
arpl
lret
or
mov
mov
jmp
fstl
jnp
and
test
push
pop
jbe
push
aas
adc
nop
inc
call
cmc
lahf
std
adc
xchg
cld
cli
and
jb
out
bound
inc
xchg
rorb
sub
fdiv
add
xor
pop
cld
stos
mov
cld
push
sbb
out
int
outsb
das
addl
push
jno
xor
cmp
outsl
dec
mov
sub
lret
and
mov
cmc
sub
push
pop
add
sbb
jnp
pop
pop
sbb
std
mov
xchg
xchg
xchg
je
mov
scas
mov
sbb
xor
jmp
or
push
popa
sub
divl
inc
arpl
mov
test
inc
push
add
sbb
rorb
adc
hlt
dec
rcll
xor
mov
in
mov
inc
xchg
int3
or
cmp
pop
cltd
sub
mov
shrb
adcb
je
cmp
mov
push
das
mov
aam
orl
jl
icebp
xor
ds
imul
and
les
jb
fisttpl
cltd
loop
push
inc
jnp
movsl
push
popf
rcrb
gs
xchg
jmp
adc
pop
inc
mov
adc
pop
cld
cmc
dec
imul
xchg
into
sbb
cld
sbb
jle
bswap
sbb
sbb
pop
cmp
xor
mov
fists
ret
arpl
xchg
jmp
push
rolb
aas
ja
add
or
jmp
es
sbb
mov
cmp
into
xchg
inc
adc
cmovb
adc
imul
or
frstor
pop
or
push
stc
sub
push
iret
cmp
jns
sarb
into
inc
in
cmpsl
dec
mov
rolb
mov
repnz
or
mov
xchg
dec
mov
mov
movsl
sbb
sub
mov
push
sbb
js
push
mov
adc
loope
adc
xor
outsl
ror
lahf
movsl
sarl
cmp
push
test
paddsb
and
int3
movsb
cmp
jne
push
test
mov
mov
and
iret
in
loopne
mov
sbb
subl
adc
mov
iret
mov
leave
gs
outsl
loop
fbstp
sarl
test
loope
pushf
cmc
and
jae
ljmp
cli
bound
popl
jb
inc
leave
sahf
cmpsl
xchg
call
pop
push
int
push
sbb
xor
loope
hlt
cmpsl
in
repnz
jb
mov
cmc
push
les
sub
sub
imul
les
outsb
dec
mov
fstpt
jg
push
jno
call
fmul
push
scas
pop
gs
jo
pop
addl
mov
fsubl
rolb
jle,pn
push
filds
add
into
out
hlt
data16
cmpsl
xlat
test
arpl
es
adc
fnstenv
out
jmp
mov
movsb
daa
loop
mov
jecxz
sarl
mov
adcl
push
dec
add
push
or
movsl
adc
mov
lret
push
out
lods
push
lret
bound
mov
xor
in
sbb
aaa
stos
xchg
mov
les
mov
shr
jp
sub
adc
jecxz
jp
jo
adc
cmc
in
cs
adc
mov
icebp
stos
test
inc
or
xchg
mov
push
fwait
fwait
sbb
mov
fcmovb
or
mov
je
ds
push
in
lcall
push
sar
or
mov
shll
add
clc
lahf
fs
inc
mov
movsb
push
xor
cmc
addb
sbb
cmc
jbe
mov
adc
shlb
in
call
cmp
leave
cmp
and
call
add
mov
aas
int3
add
in
outsl
insl
ret
inc
jns
add
cmpsb
pop
rol
mov
jae
into
inc
into
xlat
sti
push
shll
push
adc
jg
adc
push
jnp
ret
xchg
adc
lret
mov
aas
lret
add
xchg
mov
enter
sbb
rcll
cwtl
nop
jp
aad
dec
sti
insb
dec
leave
adc
das
add
or
outsl
fmull
inc
push
outsl
inc
clc
sbb
fs
cli
ljmp
sarl
or
test
push
push
xacquire
jg
cwtl
pop
dec
dec
xchg
fucom
and
pop
out
sub
cmp
push
fistps
xchg
test
mov
xchg
pmaddwd
push
ret
fcmovb
push
lds
dec
mov
imul
loop
cmpsl
xchg
loop
pop
cwtl
icebp
push
mov
pop
in
add
push
jecxz
xchg
inc
ret
shl
and
fsubs
jno
xchg
rorl
gs
push
jne
sahf
xor
cwtl
xor
or
fistpll
outsb
shlb
adc
scas
sahf
push
push
inc
fsubrl
cmp
mov
inc
push
imulb
xchg
adc
divb
inc
incb
mov
das
xor
pushf
popa
push
dec
and
mov
cltd
and
xchg
mov
les
mov
call
cli
or
test
xchg
push
jno
in
push
push
or
lcall
inc
arpl
jmp
xchg
fs
push
dec
cmc
jle
pop
inc
mov
mov
jb
pop
les
cld
adc
shl
or
mov
inc
mov
inc
shrl
rep
cmp
adc
imul
movsb
gs
mov
xrelease
mov
call
jo
xor
icebp
sub
mov
pushf
fwait
pushf
add
fisubl
sbb
jp
adc
lods
ja
jmp
sbb
aam
insb
adc
add
fwait
js
and
das
ficomps
push
decl
pusha
push
dec
out
dec
pusha
cltd
xor
adcb
out
fidivl
cmpsl
incb
roll
xchg
jp
mov
cmp
pop
mov
add
shl
and
lods
mov
jmp
in
enter
cmp
dec
sub
test
push
out
notb
out
sbb
lods
lds
pop
leave
loope
xchg
loop
sbb
fmuls
mov
adc
insl
adcb
mov
outsl
fistpl
xor
setg
mov
mov
loopne
cld
scas
lods
sbb
push
lds
rorb
stos
popa
push
jle
ds
cmpsb
int3
pop
test
stos
lock
dec
out
inc
enter
adc
out
pop
outsb
cs
adc
push
jne
daa
enter
aaa
add
je
xchg
adc
fstpl
xchg
fdivs
and
int
push
push
push
sbb
xor
cmpsb
sbb
loop
jge
sub
out
imul
mov
decb
inc
cmpsl
cmpb
lahf
sbb
ror
lcall
xchg
mov
mov
test
inc
enter
and
lds
das
sti
cmpsb
fistps
cmovp
imul
fnsave
push
scas
pop
lock
adc
mov
aaa
add
push
sub
inc
loopne
out
push
mov
pop
and
lcall
pop
adc
and
fidivs
scas
push
mov
xchg
mov
and
mov
dec
das
add
mov
ja
mov
addr16
pop
adc
testb
fs
into
push
mov
push
insl
jno
jne
mov
popa
xor
xchg
xchg
sbb
inc
dec
aad
mov
cltd
out
rcll
stc
pop
push
pushf
lock
loope
push
pop
jecxz
cmc
inc
inc
mov
xchg
imul
xchg
add
std
pop
in
sbb
jge
sbb
fs
cmp
push
leave
aad
aas
aad
or
mov
ret
dec
inc
jmp
adc
xchg
mov
insb
ss
mov
xor
in
dec
out
hlt
aas
mov
ficoml
add
push
push
mov
dec
and
repnz
iret
das
sahf
call
adc
or
aaa
lahf
rcrl
jecxz
mov
loope
jl
sub
sbb
pop
in
in
adcl
jns
inc
pop
push
xor
mov
les
push
in
hlt
jbe
xchg
and
xor
inc
push
fs
testb
les
push
in
hlt
jbe
xchg
and
xor
inc
push
fs
testb
les
push
in
hlt
jbe
xchg
and
xor
inc
push
fs
repnz
xchg
adc
inc
aam
in
hlt
mov
xchg
mov
fsubrl
add
dec
in
aam
les
clc
jnp
sbb
fs
push
enter
enter
test
dec
hlt
dec
in
aam
les
mov
movsb
cmp
fs
push
sub
mov
adc
add
hlt
push
in
aam
les
mov
movsb
and
inc
xchg
es
and
lret
jp
ja
xchg
xor
push
les
xchg
hlt
mov
and
add
in
jno
xor
lahf
cmpsl
pop
pop
cmpsl
lds
js
fbstp
mov
add
fwait
pop
inc
in
and
fucomip
push
adc
push
aad
dec
jmp
push
mov
xor
fisubl
aaa
jmp
addr16
and
xchg
outsl
mov
cwtl
cld
jecxz
cmp
sub
mov
movsb
sbb
push
inc
add
and
sub
rorb
call
and
adc
cli
mov
in
movsl
mov
insb
fcomps
aaa
pop
lods
jmp
ja
adc
adc
aam
les
mov
movsb
cmp
fs
icebp
inc
xorb
mov
lock
les
int
rolb
lods
or
xchg
hlt
ja
inc
dec
pop
xchg
dec
sbbl
std
insl
loopne
aas
enter
popf
and
pop
sti
and
xor
push
movsb
cmp
fs
push
call
and
adc
add
hlt
dec
in
aam
les
mov
movsb
cmp
fs
push
call
and
adc
add
hlt
mov
shlb
sbb
negb
fbld
and
cmp
rol
fsubrs
add
xchg
fmul
inc
push
and
aas
fdivr
pop
mov
int3
jmp
sbb
rcrb
mov
sarl
jg
scas
mov
adc
pop
push
repz
je
add
pop
mov
mov
xor
addl
je
lret
and
gs
mov
sbb
in
pop
bound
aaa
stos
mov
cltd
cld
cmc
push
cmp
dec
inc
and
push
inc
push
xor
lods
shll
stc
loope
pop
int3
loopne
and
movsl
imul
mov
jns
sbb
xchg
add
ficoml
sbb
adc
mov
add
add
jl
sbb
test
xchg
stc
sbb
push
sub
lds
pop
insl
mov
sbb
repnz
les
outsb
ja
icebp
orb
fsubl
gs
add
and
jle
mov
leave
xor
push
mov
xchg
xor
push
push
rolb
rorl
jl
ds
loopne
cld
cld
push
iret
mov
or
shlb
bound
bound
inc
pusha
pop
lret
dec
dec
push
lock
mov
leave
int
fildll
leave
sbb
out
push
mov
dec
mov
jmp
sbb
mov
dec
xlat
mov
ds
mov
xchg
or
or
rorb
fstpl
xor
push
mov
outsb
jb
cmp
sbb
xchg
inc
inc
mov
jg
mov
lret
mov
push
mov
jmp
push
jno
adc
push
test
ljmp
sbb
dec
test
je
sbb
or
ljmp
test
inc
ss
mov
test
or
aad
pop
add
inc
enter
movsb
mov
rcr
xchg
daa
xor
xchg
movsb
sub
and
adc
sub
dec
xchg
mov
mov
pop
push
xchg
fdivs
cmp
fdivs
aas
mov
repz
mov
leave
leave
mull
loopne
call
xchg
cs
cmp
push
test
insl
clc
or
out
cmp
test
stos
ret
add
lcall
sub
xchg
scas
ret
outsb
push
imul
cli
push
jne
mov
dec
pop
adc
and
mov
push
loopne
shl
mov
cmpsl
ror
inc
aaa
hlt
jae
fisttps
cmp
cwtl
cld
lods
leave
loopne
mov
cmp
lods
pop
jg
push
loopne
lret
test
adc
stos
in
andl
fsubs
out
gs
stc
cltd
jmp
andb
push
pushf
add
mov
lret
ds
pop
push
cld
out
popa
in
push
mov
mov
lret
iret
test
inc
ja
call
stc
push
ret
pop
aam
popf
sbb
add
or
xchg
jnp
inc
xor
lret
rorb
jle
cli
int3
or
data16
shll
push
fnstsw
or
cmpsl
rcr
in
add
pushf
jne
pop
push
aam
les
lcall
popa
repnz
stos
addr16
xor
mov
mov
ret
bound
lods
in
iret
movsl
jle
lods
dec
mov
push
dec
sbb
or
shlb
push
sub
cwtl
mov
or
lods
and
adc
adc
xchg
sub
xchg
fsubl
push
mov
lea
mov
xor
ss
sbb
ljmp
xlat
jo
ficoml
ret
into
push
es
jb
leave
or
inc
adc
mov
push
xchg
aas
jmp
xor
push
jle
mov
jle
sbb
mov
repz
sbb
ja
inc
inc
mov
paddsb
icebp
and
cmc
and
lahf
mov
and
subb
aas
jnp
jbe
out
mov
xchg
repnz
dec
xor
fistpl
outsb
add
lods
pop
mov
pushf
call
test
cltd
xor
in
push
shrl
add
sti
loopne
mov
mov
fnstenv
mov
mov
stos
jno
out
js
or
nop
sbb
notw
shll
mov
cli
and
inc
mov
std
xor
lret
sbb
pusha
lret
clc
mov
gs
ret
mov
mull
into
cmp
stos
dec
jno
push
or
mov
add
lds
mov
cmc
cmpsl
daa
jne
push
add
xor
jp
xor
or
mov
ja
cli
xor
daa
cwtl
mov
inc
jp
sbb
es
dec
xchg
dec
stc
push
ret
or
icebp
pushf
out
arpl
scas
out
stos
fimull
ret
cli
cmp
out
dec
roll
jo
adc
je
clc
aam
xchg
jl
cwtl
aam
neg
jl
ja
add
ds
jle
fs
fdivl
neg
jb
jle
out
add
cmpsl
and
stc
xor
das
rcr
fs
inc
outsb
movlps
rclb
sbb
je
repz
lods
mov
xor
scas
pop
pushf
jmp
movsl
inc
cwtl
xchg
mov
mov
outsb
push
daa
adc
add
xor
inc
xor
icebp
pop
mov
repz
and
out
imul
mov
or
mov
iret
jg
jecxz
jae
cmc
mov
add
sub
mov
out
fstl
add
sti
sarl
jo
shrl
jns
sbbb
dec
xchg
rorb
lock
mov
xchg
mov
dec
dec
pop
mulb
jmp
inc
enter
inc
test
xchg
mov
dec
jb
pop
or
add
xchg
loopne
leave
jne
and
stc
sti
xchg
aad
adc
je
call
mov
dec
ja
mov
fisubl
cmp
cmp
mov
xorl
xchg
push
add
sbb
cmp
jl
dec
in
loop
dec
inc
pop
repz
cmp
repz
fs
lods
cwtl
pop
shll
adc
rolb
enter
xor
mov
inc
jno
movsl
rclb
or
icebp
push
pop
inc
push
add
push
rorb
sbb
sub
xchg
jge
insb
add
xchg
fmuls
ret
or
fs
adc
and
insb
out
jbe
cmp
clc
xchg
in
fildl
jle
pusha
test
cmp
cs
mov
aam
xor
inc
and
repz
xorb
int3
jge
jno
sbb
push
hlt
fldl
mov
pop
jmp
cmp
mov
sub
sub
pop
adc
add
cli
ret
addr16
scas
mov
movsb
jns
aas
fimuls
rorl
jl
inc
aas
daa
icebp
stos
int3
cmp
jmp
in
insb
sub
ljmp
lcall
mov
out
fmulp
addl
sub
fsubs
fistl
mov
test
sub
and
int3
div
or
stc
das
inc
add
out
jle
das
mov
cltd
repz
bound
cmpsb
leave
es
sbb
push
arpl
adc
push
cmpl
pop
mov
sbb
dec
dec
in
adc
jne
pushf
loop
jno
mov
call
lcall
cltd
mov
add
dec
cmp
xor
je
add
mov
pop
jne
add
scas
fldl
fstpl
fiaddl
ficoml
pop
aad
or
or
push
in
lret
cltd
push
imul
ss
inc
push
fcmovb
in
ss
mov
lock
lods
leave
lahf
jge
jg
adc
dec
fdivl
lods
adc
lret
pop
push
mov
sbb
popf
sbb
fwait
add
lcall
mov
xchg
call
add
adc
fs
stc
xchg
xchg
rolb
pop
das
les
fstpt
ss
pop
aas
add
jb
xor
and
push
and
mulb
popf
xor
fnstenv
jbe
stos
adcb
and
inc
test
add
push
outsb
jns
lods
inc
pop
dec
cmp
cmc
sub
pop
in
scas
mov
push
xor
in
adc
add
mov
or
mov
rcrl
jne
pop
pop
loopne
iret
push
dec
sub
call
xchg
cmp
jmp
popa
xor
lds
sub
mov
test
loope
lahf
lcall
lea
mov
or
xor
in
clc
mov
popf
leave
fbld
cmp
push
pushf
fsub
pusha
fptan
ficoms
mov
add
mov
sub
stos
hlt
fsubrl
pop
outsb
jo
cvtpi2ps
cmpsb
fidivl
pop
cmp
adcl
jl
rorl
mov
push
dec
jns
mov
jns
data16
int
pop
push
iret
ror
sbb
les
fwait
xchg
xchg
mov
icebp
mov
movsl
iret
jbe
pop
lret
std
push
pop
in
mov
outsb
out
mov
mov
call
xchg
in
mov
ret
jae
lods
stos
mov
adc
lods
push
mov
jo
sbb
xor
ret
add
xor
mov
shll
imul
push
stc
push
movsl
push
test
fwait
adc
mov
add
adc
xlat
out
je
addr16
mov
jne,pn
popa
mov
xchg
jne
shlb
dec
in
leave
nop
fisubs
rcrl
jno
out
or
adc
mov
shr
sbb
fwait
adc
sbb
testb
sub
pop
jl
pop
into
mov
faddl
dec
int3
inc
jo
in
gs
or
mov
sbb
enter
movsb
fsubrl
mov
ficoml
cmpsb
adc
ljmp
scas
jge
dec
out
fs
test
bound
add
pusha
jmp
pop
popa
xchg
cmp
test
pop
dec
cwtl
xor
ds
out
jg
pop
outsl
xchg
jb
dec
fdivp
pop
iret
outsl
inc
pop
pop
popf
xchg
insl
dec
lcall
fisubrl
mov
ret
mov
and
dec
icebp
inc
lret
push
and
sti
mov
and
sbb
and
stc
and
lds
dec
xor
jmp
or
test
sub
xchg
popf
ret
leave
enter
dec
ds
std
mov
xor
adc
xchg
mov
dec
xor
enter
or
add
subb
mov
push
xchg
jge
enter
test
stos
jne
mov
cmp
add
adc
xchg
dec
adc
iret
jae
test
xor
cmp
inc
mov
je
push
addr16
rorb
outsb
pop
xor
xorb
mov
sbb
cltd
daa
mov
or
or
mov
dec
cltd
fimuls
fnstsw
ret
nop
mov
enter
xorb
ror
cmc
mov
into
push
scas
adc
or
sbb
leave
cmp
ss
jnp
xor
push
mov
mov
repnz
inc
rolb
push
dec
fists
jo
sti
lea
and
push
rcr
and
sub
repz
xchg
adc
imul
and
in
aaa
cmpsb
lods
xlat
stc
pop
inc
aas
pminsw
test
std
cmp
push
lock
mov
jmp
movsl
imul
shrl
je
or
repnz
sub
and
mov
aad
sub
sarb
movsb
nop
xchg
cli
testb
and
push
aam
aas
frstor
in
jle
lret
cmp
enter
mov
call
arpl
jmp
mov
add
inc
scas
add
cmpsl
std
xor
loope
mov
rcrb
mov
cmp
ret
dec
lock
pop
fisubrs
adc
shl
insb
scas
jb
in
push
dec
pop
push
mov
adc
push
pop
dec
xor
jns
lret
sub
nop
outsl
pushf
push
pop
imul
je
adc
xchg
pop
imul
fidivrl
sarl
aaa
xor
sbb
inc
dec
sbb
out
mov
pop
sbb
std
mov
fwait
mov
mov
in
dec
jb
cmp
dec
mov
mov
mov
push
lods
cmpb
mov
or
je
push
aam
testb
sub
cltd
jae
xor
lds
lret
push
cmc
js
ja
jne
es
addl
call
hlt
adc
je
sbb
sti
add
xchg
sbb
fmulp
icebp
mov
jno
insl
xor
mov
pop
lods
jnp
mov
inc
rol
imul
lcall
mov
xchg
and
add
mov
push
incw
lret
xorw
mov
js
loop
sub
negl
mov
xor
mov
js
pusha
jle
add
rcll
xlat
testl
push
jle
movsb
mov
jp
cmp
jno
fisttpll
or
aad
test
leave
xor
inc
xorb
pop
xchg
ret
incl
xchg
bound
mov
or
xlat
daa
and
mov
and
fldt
push
aad
dec
sbb
aaa
ds
push
int3
add
and
lcall
push
push
adc
inc
sbb
out
lea
xorb
xor
scas
push
in
imul
mov
imul
imull
leave
fiaddl
dec
sbb
sub
mov
inc
cmpsb
add
lds
ja
dec
mov
jmp
jbe
cmp
rorl
fcmovu
stc
mov
add
loop
push
mov
aad
mov
cmp
rolb
cmp
or
loop
pop
popa
jb
mov
les
and
call
sub
mov
add
mov
bound
and
in
lcall
cmp
push
lock
popa
stc
das
shlb
movsl
ud0
xchg
in
fucomi
addr16
inc
icebp
test
xchg
cmp
imul
mov
mov
xor
aas
dec
inc
dec
test
mov
cwtl
or
pop
jnp
fildl
pop
cmpsb
adc
movb
inc
daa
shrb
aam
sbb
jle
das
push
xchg
sub
rcrb
lea
or
xor
bound
std
sub
ss
or
inc
mov
inc
fdivrl
cld
dec
mov
pop
jge
jo
dec
ja
shl
and
stos
xchg
jb
pushf
lret
xorl
push
adc
scas
out
test
incl
and
shlb
or
lret
mov
mov
jno
adc
jp
or
pop
adc
lods
nopl
adc
fdiv
pop
pop
lret
xlat
inc
jae
shll
mov
jno
orb
push
ret
sbb
call
or
mov
jecxz
lret
mov
lret
loopne
addr16
mov
rorb
nop
jno
sbb
cli
or
xchg
stos
mov
aam
stos
lock
push
scas
xor
gs
dec
xor
mov
js
mov
dec
nop
scas
add
fcmovnbe
and
jmp
sbb
int3
dec
sub
mov
dec
ret
stos
imul
ret
sub
mov
pop
loop
jecxz
test
xchg
pushf
lock
nop
xchg
dec
adc
mov
sub
mov
outsl
jae
cmc
mov
cmp
and
cwtl
les
lods
mov
cmp
cwtl
icebp
add
xor
xlat
dec
les
repz
cmc
cli
adc
add
xlat
hlt
int
dec
mov
test
ja
mov
rcrl
test
mov
scas
mov
cs
push
repz
jl
sbb
sub
aaa
cmp
ret
xor
ss
subl
xchg
icebp
or
inc
mov
pop
push
loop
mov
add
lea
out
dec
insb
movsl
mov
fcomps
lret
dec
movq
loop
imul
shlb
into
shll
sahf
das
inc
in
push
jae
xlat
aam
je
dec
lods
dec
dec
xor
movsl
imul
adc
test
pop
pop
daa
js,pn
push
decl
mov
cwtl
mov
ja
es
mov
in
push
loop
hlt
add
insb
insb
stc
cmp
ret
pushf
out
faddl
xor
call
jecxz
popf
ljmp
dec
and
adc
add
mov
add
into
mov
stos
hlt
mov
aad
mov
mov
mov
pusha
sti
les
data16
fldcw
sbb
push
and
pop
xchg
mov
mov
xchg
jns
xchg
push
or
gs
push
fs
in
xchg
data16
fcompl
jno
sbbb
add
imul
pusha
push
cmp
cmp
xchg
out
icebp
jno
stos
dec
test
xlat
xchg
sbb
cmc
sub
sbb
movsl
popf
popa
out
enter
xchg
bound
push
dec
and
aas
lods
call
outsl
loope
adc
sbb
ret
jg
mov
push
rorl
imul
repnz
lds
xor
and
fsubs
dec
pop
jbe
cwtl
mov
pop
sub
jl
ss
xchg
dec
rcr
mov
push
lcall
addr16
cmc
mov
imul
inc
out
ret
sbb
stc
negb
inc
mov
xchg
mov
push
inc
movsl
aad
dec
cltd
inc
lret
inc
mov
mov
mov
fwait
mov
pop
sti
pop
mov
hlt
sub
mov
jl
push
arpl
pusha
push
test
xchg
or
xchg
loop
jae
push
pusha
jb
pop
add
pop
leave
mov
adc
ret
lods
lret
inc
mov
or
or
inc
call
mov
test
mov
pop
sbb
out
pop
mov
into
iret
jbe
out
adc
pushf
or
imul
addr16
xor
xor
enter
repnz
stos
dec
jns
sbb
rcll
mov
int3
fmull
xchg
push
cld
jp
cmp
mov
xor
sub
ud0
and
orb
xchg
test
js
hlt
call
sub
or
test
js
sbb
jae
mov
adc
push
xlat
adc
lret
lret
mov
inc
imul
mov
mov
mov
scas
jmp
fnstsw
xchg
jns
out
push
sub
push
jmp
jg
jns
jle
jo
mov
outsb
je
in
mov
pop
pop
mov
or
xchg
jo
push
adc
xor
inc
add
lret
sub
xorl
repnz
pop
sbb
nop
xchg
sbb
arpl
pushf
ja
mov
sbb
sub
pop
daa
cmp
mov
imul
dec
divl
inc
adc
repz
push
sub
out
jbe
ss
cmp
mov
in
or
xchg
push
jp
fnstsw
pop
add
sub
inc
test
lret
or
cld
mov
cmp
add
push
and
xor
sub
pop
pop
fwait
nop
aaa
pop
xor
imul
pop
cltd
imulb
jmp
mov
lea
pop
aam
cmpsb
xlat
mov
lods
and
int
cs
add
rolb
mov
out
mov
and
or
inc
pop
inc
sbb
mov
push
push
ror
mov
mov
stos
cwtl
outsl
call
mov
pop
testb
inc
movsb
push
fs
insl
and
out
sub
loope
jecxz
jns
cwtl
pusha
add
push
sarb
int
dec
stos
arpl
adc
dec
inc
lock
fwait
sub
sarl
inc
mov
xchg
mov
mov
mov
repnz
pextrw
sbb
jp
and
xlat
pop
popf
push
outsl
sbb
imul
scas
mov
push
add
add
inc
and
inc
jns
scas
loope
shll
xchg
dec
lods
fiadds
rcr
sbb
add
cmpsl
bound
rcrb
inc
test
mov
mov
fistps
mov
out
stos
mov
test
mov
test
out
sahf
call
adc
cmp
xor
fwait
jmp
add
outsl
inc
loope
xor
jg
cwtl
jbe
mov
pop
xor
fistps
mov
cs
addb
int
test
call
mov
iret
icebp
into
pop
xlat
sbb
stos
sbb
aas
adc
ss
cmp
testb
jge
ja
mov
movsl
push
or
cmp
push
outsb
mov
inc
stos
pusha
fdivl
dec
sbbl
push
sti
adc
push
movsb
cmp
fs
push
call
and
adc
add
hlt
dec
in
aam
les
mov
movsb
cmp
fs
push
call
and
adc
add
hlt
dec
in
aam
les
mov
movsb
cmp
fs
push
call
and
adc
add
hlt
jl
dec
aam
les
mov
movsb
mov
je
into
push
push
call
fildl
push
sti
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
data16
mov
add
xor
add
add
or
add
add
add
add
roll
lods
add
jae
int3
add
add
add
add
mov
add
add
add
add
add
add
add
add
xor
push
add
mov
add
add
add
add
add
add
jle
inc
add
add
add
scas
add
or
test
adc
data16
add
add
add
add
jl
int3
add
repnz
add
add
add
add
add
add
int3
add
add
add
dec
add
add
add
add
add
les
pop
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
stos
add
add
add
test
adc
add
mov
push
add
add
add
add
mov
add
add
add
add
add
or
add
add
add
add
add
add
add
dec
add
add
add
add
xchg
add
xchg
add
add
fiaddl
add
add
add
add
movsb
add
add
add
add
sbb
inc
add
and
dec
add
add
add
add
or
add
add
add
lcall
add
add
int3
add
add
add
arpl
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
incl
dec
add
add
lcall
add
add
add
add
add
add
mov
add
daa
add
sbb
add
add
add
add
add
repnz
add
add
add
add
add
add
add
pop
add
ret
add
add
add
xor
add
add
add
jns
mov
add
sub
push
add
add
nop
add
xor
xor
add
add
dec
add
ljmp
add
push
add
add
pop
add
add
add
add
sahf
add
add
add
add
add
add
jb
movsl
add
add
add
stos
add
dec
add
add
add
sub
xor
add
cmp
popl
sahf
add
add
filds
les
dec
add
add
push
add
str
lea
add
js
test
incb
lea
addb
add
add
add
inc
add
add
add
add
jecxz
roll
test
mov
add
add
add
add
add
incb
sub
mov
add
add
add
mov
cmp
add
add
add
add
add
lock
add
add
mov
add
and
add
add
out
fisttpll
jg
cmp
cmp
pop
sub
pushf
and
add
scas
int3
test
cltd
xor
std
arpl
sub
jecxz
push
jns
cmp
bound
mov
jmp
mov
or
push
push
or
cli
lods
mov
rcr
adc
cs
cmp
mov
push
sti
addr16
fisubl
adc
dec
jbe
rol
sarb
pop
push
out
push
xor
andb
cld
xor
fdivs
push
push
add
stos
out
jae
cmp
fcmovnu
pop
push
xchg
pop
sbb
sbb
clc
int
mov
clc
add
push
xchg
sarl
add
mov
mov
popa
pop
pop
mov
sub
repz
dec
adc
or
sbb
fsubp
pop
lretw
inc
push
fwait
jl
pop
mov
cmp
lcall
push
or
or
roll
ja
pop
lea
add
sbb
daa
loope
mov
enter
lods
pop
call
and
xor
cmp
mov
or
dec
push
fnsave
jnp
push
adc
dec
inc
or
jnp
sbb
adc
push
jle
bound
inc
fldenv
in
pop
enter
jl
pop
mov
push
fwait
hlt
inc
mov
xchg
add
xor
xor
xorb
sub
cmp
lods
push
loope
fs
dec
testl
and
add
fs
mov
jns
popf
add
inc
push
imul
cmp
sub
xchg
and
in
loop
mov
dec
mov
xlat
sti
xor
cltd
add
xchg
xchg
push
mov
ja
pop
inc
jle
movsl
mov
or
rol
insl
dec
mov
ud2
jb
sub
push
call
jae
in
sbb
shll
sbb
daa
push
outsl
cmp
sbb
je
aam
pop
sbb
mov
in
mov
mov
or
lods
es
iret
pushf
xchg
xchg
mov
cmp
jns
orl
inc
pop
aam
push
loopne
out
mov
lret
lods
inc
fldenv
imul
outsb
mov
mov
xor
add
daa
jno
pop
insb
pusha
rcl
add
cmc
mov
dec
stos
push
pop
das
pop
adc
cli
test
and
hlt
scas
orb
cli
mov
mov
aad
mov
shlb
xchg
call
rcll
stos
mov
mov
sbb
inc
mulb
push
cld
sbbb
shlb
mov
rorl
inc
shlb
cli
mov
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
