call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jns
imul
lea
imul
xchg
clc
popa
jmp
push
mov
add
icebp
pop
rorl
mov
or
jmp
inc
push
mov
inc
mov
pusha
jae
icebp
inc
imul
add
mov
mov
mov
mov
jne
adc
loope
lahf
pop
mov
test
sub
fcomps
adc
push
adcl
inc
inc
mov
loopne
fwait
cmc
insl
adc
pushf
sarl
and
and
pushf
xchg
xchg
hlt
stos
fisttpl
cli
repnz
mov
in
push
hlt
loope
inc
fdivrl
rorl
nop
shrl
mov
or
sahf
call
lods
inc
and
inc
sub
in
aam
test
hlt
push
mov
xchg
stc
xor
popa
fadds
test
out
xchg
and
jmp
out
xor
roll
push
popa
sbb
cli
into
cltd
add
add
dec
fldt
mov
adc
loopne
icebp
mov
push
rcrb
mov
add
icebp
cmp
cmp
ficoms
hlt
stc
daa
test
xor
int3
inc
jmp
in
push
movsb
or
push
into
sub
mov
and
ss
pusha
in
jp
mov
mov
xchg
and
sbb
jmp
push
mov
add
icebp
pop
rorl
mov
or
flds
push
mov
add
es
cmp
push
cmp
sbb
int3
fcmovu
mov
aam
inc
inc
std
and
xchg
out
xor
hlt
sbb
in
adc
jo
dec
cwtl
add
lret
test
inc
sbbl
mov
or
inc
push
fnsave
pop
movaps
stos
xchg
pop
aad
mov
scas
jne
test
xor
or
push
add
add
mov
jo
mov
shlb
outsb
and
out
xchg
mov
xchg
lods
leave
pop
pop
es
popf
imul
mov
mov
sub
mov
arpl
inc
mov
pop
dec
jecxz
loopw
or
insb
jns
sub
cmc
and
add
sub
aad
pop
sti
iret
mov
push
mov
sub
shll
lahf
mov
xor
outsb
inc
movd
push
push
sub
and
jbe
add
xchg
sbb
ficomps
cs
pop
mov
pop
mov
jl
loope
addr16
in
adc
insl
insb
add
dec
or
stos
aad
jns
sub
test
dec
sbb
adc
call
mov
jge
ja
sub
sarb
push
inc
inc
add
fs
xor
imul
call
add
add
lahf
mov
pop
out
dec
jbe
sbb
imul
int3
fst
mov
pop
je
push
mov
adc
shll
pop
or
scas
mov
pop
jne
jo
scas
push
cmpsb
jbe
xor
lahf
and
and
sahf
pop
fisubl
jns
test
mov
xchg
icebp
pop
ficomps
out
sbb
and
jp
xchg
jns
shrb
sub
imul
lret
push
xchg
cltd
mov
sarb
ret
incb
filds
xor
cli
ss
mov
mov
xor
mov
test
add
push
cltd
ret
and
inc
lea
repnz
mov
push
stos
ds
jecxz
xchg
pusha
mov
addr16
lret
mov
fdivrs
push
push
and
adc
pop
and
in
test
es
mov
and
sub
mov
or
xor
dec
popf
bound
imull
lea
mov
mov
fsubs
xchg
push
out
or
push
lcall
mov
adc
stos
adc
das
or
leave
dec
in
in
clc
add
rcl
dec
icebp
repz
inc
arpl
sub
mov
adc
cld
iret
sbb
cwtl
lahf
hlt
repnz
push
jle
xchg
jge
add
bound
cmp
mov
mov
lret
cltd
jo
mov
push
jle
dec
xor
nop
mov
movsb
dec
pop
xor
pop
jp
xchg
xorl
mov
out
sbb
mull
mov
mov
cmp
sbb
sti
sub
xor
test
push
xchg
stos
mov
jns
push
mov
jle
or
daa
cli
fsub
and
in
jp
rcl
adc
push
ss
insb
add
jp
test
add
dec
enter
incb
movb
outsb
mov
out
in
out
dec
jge
inc
pop
cwtl
xor
push
cmp
inc
pusha
push
mov
add
mov
xchg
sti
sub
mov
out
fcomps
xlat
lahf
je
sbb
stos
imul
mov
rol
mov
mov
and
cmp
push
dec
xchg
enter
ljmp
mov
dec
repz
mov
dec
adc
mov
mov
rclb
mov
iret
inc
idivb
sbb
cmpl
movsl
cmc
adc
or
cmp
push
iret
xchg
jnp
sbb
in
dec
nop
enter
cs
pop
scas
sub
inc
push
xchg
ds
xchg
xchg
sub
xor
mov
mov
push
ljmp
jle
adc
jns
es
je
cmc
rcrl
xchg
sahf
jle
loop
daa
and
cmpsb
sub
xchg
mov
pusha
xorb
fsub
xchg
daa
scas
adc
popf
in
xor
jl
xchg
push
enter
int
pop
or
sarb
pushf
dec
add
out
prefetch
mov
lcall
iret
mov
and
adc
push
mov
mov
mov
jecxz
ljmp
call
les
out
mov
xchg
and
sub
div
aam
and
stc
push
or
adc
cltd
nop
lds
mov
aam
lret
loop
xchg
repz
cmpb
pop
mov
xor
xchg
shll
and
ds
jmp
mov
cs
daa
popl
sbb
or
pop
loop
cmpsb
xor
aas
adc
push
jae
jle
inc
ds
out
adc
pop
mov
and
movsl
add
in
inc
stos
fcmovnu
loope
mov
xchg
xor
leave
dec
fsubs
xchg
mov
jge
pop
test
sub
roll
inc
sub
stc
cmpb
pop
mov
mov
cmpsb
out
add
xor
or
sub
out
push
mov
int
repnz
sbb
inc
cmpsb
loope
je
xchg
cmp
inc
scas
stos
adc
lods
mov
roll
stc
dec
lds
mov
lds
pop
aas
decl
cli
push
enter
pop
jmp
sbb
xchg
sbb
jne
hlt
adc
or
sub
adc
push
fidivrl
fisubl
stos
scas
mov
shrb
mov
gs
jb
jg
and
inc
and
cmp
cs
jecxz
hlt
pushf
lea
fdivrp
shrl
out
stos
mov
jb,pt
xchg
push
into
mov
cmp
mov
pop
cwtl
push
les
rcrl
mov
mov
xchg
mov
sbbl
mov
lcall
pop
lret
enter
jbe
fistpl
shlb
fs
mov
jmp
popa
push
cmpsb
adc
sahf
mov
push
arpl
rorb
stos
mov
adc
inc
dec
mov
popf
xorb
cs
push
adc
adc
roll
sbb
push
pusha
sarl
lods
pusha
push
xchg
loope
push
in
aad
cmp
fs
movsb
in
mov
fs
dec
mov
or
mov
xor
mov
fnstcw
pop
stos
sbb
cmp
push
push
sbb
fcmovbe
popa
lret
mov
cmpl
push
sub
scas
scas
sarb
rcl
xor
scas
dec
ret
xor
iret
mov
nop
std
adc
push
repz
dec
mov
jnp
adc
in
ret
add
aad
pop
testb
jnp
jo
sarl
dec
lret
insb
fisttpl
sbb
jne
cmp
mull
adc
mov
jl
divl
pushf
ss
imul
or
adc
rclb
mov
inc
jb
movsl
or
xor
dec
jl
pop
and
lods
fnstcw
jl
push
xor
sahf
int
rolb
test
pushl
cmc
adc
mov
arpl
lea
sbb
popl
imul
stos
imul
jg
xor
adc
push
imul
and
mov
mov
inc
fisttpll
or
or
cmpb
xlat
cmpsl
mov
dec
insb
ret
lret
inc
dec
or
xchg
push
cmpsl
push
xchg
cld
push
inc
jbe
inc
fisubrl
sarb
or
add
jge
rcr
ljmp
xchg
fsubl
xchg
iret
jmp
inc
inc
fbstp
or
pop
sti
aam
add
cmp
fidivrs
ss
nop
nop
push
jne
push
out
lock
iret
cld
inc
nop
lock
dec
cmpsl
movsb
push
inc
rorb
pop
pop
aaa
and
leave
push
dec
dec
xchg
mov
lock
pop
mov
or
or
jge
les
mov
sub
xchg
dec
repz
mov
pop
test
add
push
dec
or
gs
hlt
mov
outsl
xchg
pusha
clc
jnp
lods
jnp
js
jle
fs
stc
sub
insl
movsl
lock
mov
repz
pop
clc
jbe
xor
fistps
push
mov
sub
jns
mov
sbb
and
mov
clts
xor
xchg
or
dec
lret
xchg
lods
test
push
cli
loope
shlb
dec
fildl
ss
dec
outsb
movl
xor
scas
xor
fidivrl
adc
stos
aas
mov
incl
jg
movsl
cltd
cmpsb
sti
mov
sbb
mov
adc
lahf
lret
in
cwtl
les
fstps
into
cs
insb
fincstp
cmc
arpl
xor
pop
mov
gs
cmp
mov
enter
dec
sbb
js
push
sub
pop
mov
inc
punpckhdq
mov
pusha
jne
hlt
xor
push
cmp
gs
xchg
push
push
mov
test
insb
bound
pushf
sub
sbb
add
sbb
pop
out
out
xchg
data16
rcrb
call
cs
or
addr16
lods
ja
and
loop
addr16
ret
mov
and
jl
jae
add
mov
stos
cmp
call
and
mov
and
lahf
push
lea
loopne
sahf
adc
or
mov
data16
jmp
movsl
leave
clc
sub
mov
sub
push
cmpl
mov
pop
add
pop
outsl
ficoml
jnp
loope
dec
push
shlb
mov
sub
mov
stos
adc
ja
lcall
outsb
mov
lret
mov
mov
jb
lcall
sbb
sbb
inc
fs
ljmp
mov
xchg
jb
adc
mov
dec
cmp
pop
movsl
pop
mov
pop
jb
cwtl
shrb
hlt
loop
pop
cmc
sahf
lods
jp
call
outsb
popa
fnclex
adc
mov
and
dec
in
inc
add
testb
pop
lods
jo
jne
sbb
jg
inc
xor
sub
rclb
cmp
pop
outsb
rolb
roll
mov
into
dec
test
or
in
test
inc
ds
xchg
cmp
sbb
out
mov
imul
in
mov
xlat
lea
jne
lods
and
ss
pop
test
cli
mov
sbb
ss
insl
fs
test
mov
cld
mov
or
iret
mov
daa
inc
mov
nop
je
inc
mov
jno
les
adc
and
dec
push
loope
and
inc
jbe
pop
enter
xlat
fadds
insl
idivb
insl
jp
adc
xlat
in
pusha
push
out
imul
pusha
repnz
jg
dec
fs
adcb
xchg
pushf
mov
repz
cmp
dec
inc
in
lret
sbb
in
add
hlt
insl
xorb
subb
dec
push
insl
inc
sub
pop
xchg
int
lret
xor
or
je
jmp
push
mov
mov
test
or
insl
pop
adc
in
fwait
lods
sti
sub
xchg
push
xor
pop
push
mov
jl
jp
ret
movsb
or
lock
push
mov
mov
cmp
xchg
pop
cltd
xor
pop
jp
iret
mov
jg
cmp
sarl
pop
imul
jg
test
and
xchg
lcall
mov
and
xchg
or
adc
sbb
mov
or
insl
cmp
rep
mov
cmpsb
cmp
jne
test
jno
jb
push
out
popa
mov
sbb
jge
xor
jl
shl
mov
add
out
push
adc
insl
mov
xor
fcmovu
xchg
mov
loope
lea
push
lret
push
adc
fmull
add
xchg
push
cli
cwtl
cmp
jge
jne
mov
leave
jecxz
cmp
fwait
dec
mov
adc
stos
lcall
mov
gs
aad
cmpsl
aas
or
cmpsl
imul
jno
sub
adc
imul
jno
cmp
stc
mov
insb
aas
adc
icebp
insb
mov
in
sbb
fldenv
pop
pop
inc
aad
and
nop
cmc
jo
scas
jp
fwait
adc
push
push
xchg
insb
pop
repz
inc
inc
or
icebp
pushf
fsts
shlb
imul
addr16
and
pop
movl
pusha
sub
int3
mov
add
mov
rol
jge
mov
rcr
sti
and
push
repz
sbb
inc
or
inc
iret
adc
cmpsl
add
stos
pop
jp
mov
add
and
pop
repz
repz
test
sbb
ret
jb
pop
cmp
popf
dec
icebp
fdivrl
xchg
sbb
shrl
mov
jbe
in
pusha
xlat
dec
lahf
mov
fistps
sbb
mov
mov
dec
xor
cmc
and
cmp
xlat
sub
jmp
pop
adc
jb
cs
fs
popf
xor
call
jnp
push
stos
mov
push
nop
adc
lea
stos
cmp
imul
xchg
xor
xor
inc
mov
pop
mov
or
or
mov
cmpsb
out
xor
mov
xor
xchg
dec
xor
push
push
cmp
xor
inc
adc
lret
inc
rsm
faddl
xchg
test
aad
sub
inc
push
inc
or
push
lock
inc
cwtl
xchg
xchg
lods
dec
lods
mov
into
or
cmp
sbb
nop
xchg
jge
in
iret
jge
mov
or
lods
mov
or
cmp
or
adc
jae
sarl
das
pusha
fldenv
adcl
out
add
popf
rol
jecxz
or
repnz
fists
jno
inc
shlb
enter
cmp
ja
inc
loope
lea
xor
mov
ficompl
das
cmp
mov
ret
daa
xor
adc
xchg
imul
cli
popf
and
dec
cmp
lret
jno
jl
push
ret
test
xchg
push
sub
mov
cmp
push
fcomip
stc
xchg
jp
or
mov
or
sti
adc
movsl
int
shll
adc
add
nop
leave
pop
data16
and
test
or
push
jmp
out
data16
mov
mov
nop
dec
sbb
add
lret
lea
in
jbe
or
incl
pop
scas
fdivrs
lds
sahf
pop
pushf
mov
dec
xlat
cld
fmuls
jns
sbb
and
inc
sub
mov
jo
ret
into
scas
lcall
xchg
push
cmp
mov
pop
mov
xchg
adc
les
xchg
aam
jg
push
or
dec
enter
push
sub
and
mov
das
stos
psllw
jmp
stos
inc
add
int3
mov
sbb
mov
aaa
xchg
sti
mov
mov
rclb
push
lods
cltd
push
in
push
ja
in
aad
in
sahf
pushw
jge
cli
dec
sbb
ret
or
popl
jb
jle
xor
sub
scas
pusha
lds
ret
pop
into
push
pop
cmp
mov
lock
push
add
mov
xorb
push
mov
push
jp
jnp
mov
outsb
loopne
loope
mov
repz
rorl
add
mov
sti
shl
imul
iret
sti
jo
inc
div
mov
ds
cmpsl
xlat
or
and
jno
shrb
xchg
aam
aaa
jl
lods
loop
insb
into
ja
lods
addl
dec
cmpsb
dec
bound
cld
fcoml
mov
xchg
mov
adc
sub
in
fucomp
cmp
pushf
fdivl
pop
shrl
aad
jmp
stos
in
lods
xchg
sub
sub
sti
push
inc
mov
repnz
fdivl
imul
mov
and
aaa
jne
mov
pushl
mov
add
cmp
movsb
shll
int
out
jg
cltd
sub
pop
cld
jl
jge
out
arpl
addr16
sbb
test
lret
jne
aaa
cltd
das
lods
push
inc
cmp
add
cmp
lret
add
in
clc
pop
mov
add
nop
dec
mov
or
enter
or
js
sub
dec
mov
mov
test
add
cmp
les
sub
xor
imull
in
out
mov
lods
je
scas
push
xor
into
int
sub
dec
repz
cmp
inc
test
bound
jnp
sub
es
negb
dec
push
xchg
loopne
arpl
mov
movsl
sahf
ss
jnp
lods
xor
lock
jbe
pop
loopne
mov
xchg
mov
jbe
fstps
xchg
and
xor
sub
insl
add
xchg
scas
xchg
ss
aaa
and
inc
inc
jl
stos
test
push
mov
mov
imul
imul
loope
imul
jns
mov
fsub
shlb
push
jg
jo
lods
call
test
add
push
xchg
repnz
push
push
fiaddl
movsb
scas
stos
add
sbb
sbb
fisttpl
stc
fcomps
arpl
stos
add
loope
pusha
pop
mov
std
xchg
add
pop
shrl
xchg
pop
xor
dec
add
mov
imul
hlt
xchg
test
scas
popf
push
jnp
mov
sbb
std
seta
cmp
xchg
sub
push
xchg
hlt
repz
push
stc
je
lret
push
jns
cmp
arpl
xchg
rcrl
sbb
icebp
xlat
roll
iret
cmp
lods
inc
adc
nop
test
jl
and
dec
inc
jle
add
adc
adc
hlt
push
xchg
les
mov
jo
mov
test
push
js
sub
push
xchg
addr16
mov
nop
test
jne
test
lds
cmp
lods
loopne
iret
in
or
pop
and
push
dec
mov
mov
ror
jmp
dec
aad
xor
sbb
jnp
fsubrl
push
out
movsl
es
leave
outsb
ljmp
mov
xor
adc
fildl
and
dec
jge
or
sti
lea
jge
or
mov
incl
pop
call
insl
xchg
les
cld
and
test
lcall
fwait
inc
or
xor
xor
rclb
jge
pop
loop
je
dec
int
adc
test
sbbb
arpl
xchg
xor
hlt
mov
ret
and
mov
pop
ret
add
hlt
jl
lcall
imul
xor
mov
cmp
test
lahf
or
subl
xlat
dec
pop
mov
mov
repz
lret
sbb
jmp
lahf
sti
loope
aam
in
aad
inc
xor
push
push
js
fisubrl
ljmp
addl
loope
mov
lret
lods
mov
cli
pop
pop
adc
js
mov
aad
ljmp
inc
pop
movsb
jl
shr
loope
sub
fbstp
out
fdivrs
adc
fists
mov
call
stos
mov
in
push
call
add
mov
cld
movsl
test
and
imul
xor
jecxz
inc
xor
cmp
add
cli
dec
out
ljmp
lahf
jp
push
sahf
inc
frstor
jb
ljmp
fcmovnbe
outsb
aaa
cmp
xchg
daa
sbb
dec
xchg
sub
adc
add
outsl
rorl
pop
icebp
sarb
lret
push
inc
icebp
or
dec
dec
mov
fsts
loopne,pn
cmp
scas
mov
jnp
iret
push
stos
push
cmpsb
call
pop
and
inc
arpl
dec
jnp
push
and
cmpl
aas
mov
pushf
lds
mov
les
xchg
push
add
mov
xor
cmc
push
inc
ds
in
shll
aas
fimull
lret
cmp
xor
pop
adc
sti
sbb
test
dec
cmpsl
mov
pop
and
and
mov
mov
pop
out
or
push
push
dec
push
adc
sbb
pop
subb
insl
or
mov
ja
mov
inc
scas
je
movsl
cmp
mov
dec
pop
shll
sub
jmp
repz
lret
pushf
fsub
push
outsb
pop
lods
dec
push
popa
pop
or
mov
hlt
jge
xor
les
clc
adc
cltd
push
sub
jb
sarb
jg
stc
mov
push
lods
dec
sarl
mov
or
flds
push
mov
add
icebp
pop
rorl
mov
or
flds
push
mov
add
mov
cmp
or
flds
push
mov
and
icebp
pop
rorl
mov
mov
jae
leave
es
test
jbe
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
pusha
notb
inc
das
push
push
out
outsl
xchg
mov
loopne
rclb
inc
mov
loopne
nop
push
adcb
out
mulb
inc
xor
add
cli
push
jbe
inc
add
push
mov
push
imul
pop
into
sub
pop
mov
data16
mov
imul
jns
stos
pusha
xchg
cs
outsb
fdivl
gs
jns
mov
sub
ficomps
stc
outsl
jo
in
jl
iret
push
xchg
filds
jns
imul
push
int
or
imull
testb
sbb
orb
mov
lret
repnz
jbe
sub
test
cmp
inc
push
mov
cmp
test
repnz
les
pushf
stc
imul
or
xor
pusha
data16
add
pop
mov
mov
mov
xchg
nop
sbb
pop
ds
lea
adc
xchg
femms
pop
sbb
mov
mov
jo
adcb
icebp
pusha
out
fists
and
sbb
enter
test
mov
pop
add
add
mov
movsb
dec
xlat
adc
insl
repz
loopne
mov
inc
les
pusha
lahf
xor
cmpsb
dec
clc
jl
inc
movsb
repnz
adc
push
shll
loopne
andb
push
divb
xchg
and
lock
rolb
push
mov
mov
push
jo
pusha
notb
inc
xor
add
rolb
push
mov
mov
push
jo
mov
aam
sub
pop
mov
call
add
adc
popf
dec
sub
cwtl
jnp
cmpb
xlat
xorb
push
jo
repnz
in
cmp
push
ret
ljmp
jae
adc
dec
sub
inc
lea
xchg
enter
addb
in
sub
xlat
fdivrl
dec
rorl
stc
adc
xor
jno
aas
inc
in
arpl
or
stos
sbb
xor
outsb
hlt
dec
mov
xchg
bound
ds
mov
cwtl
cmp
cmp
jnp
sub
xor
mov
mov
sbbl
jecxz
adc
and
xchg
xchg
callw
dec
mov
std
push
jnp
xchg
ds
jle
sub
mov
sbb
jl
in
cwtl
jo
ds
movsl
jmp
or
out
sub
aaa
mov
adc
adc
and
xchg
outsl
in
add
jnp
fmul
leave
or
jge
inc
sbb
mov
xor
sbb
and
outsl
pop
xchg
sbb
pushf
and
stc
pop
jecxz
jle
leave
cmp
int3
aam
push
jecxz
loopne
xor
aad
cmp
add
inc
or
mov
sbb
out
pushf
sub
xorl
lock
xchg
arpl
popf
out
sbb
sbb
cmp
pop
lahf
and
dec
mov
xchg
pop
or
pop
imul
arpl
cmpsb
lcall
push
mov
leave
add
testl
mov
xchg
add
add
push
adc
mov
pop
push
aad
xchg
fdivrl
addr16
sbb
push
ret
repnz
xor
and
in
jnp
movsl
sub
jmp
sub
lods
popf
jmp
jl
inc
mov
push
andnps
ret
adc
mov
lods
push
push
xor
movsb
int
rcrb
push
add
pop
fldz
sahf
inc
faddl
lret
aad
cld
mov
adc
and
leave
andb
jb
add
jecxz
xchg
outsl
sub
sti
pop
dec
jmp
dec
pop
dec
test
mov
es
sub
ljmp
jl
lret
push
mov
xor
mov
push
sub
cmp
mov
jecxz
es
mov
or
cmp
and
fsubl
movsb
int3
arpl
mov
sub
mov
dec
ja
adc
nop
jnp
jl
lds
sub
std
sbb
add
ja
xchg
cld
ficompl
or
hlt
bound
ret
mov
or
xor
sub
dec
sbb
xchg
sahf
shl
sbb
lret
or
into
sub
cmp
push
pop
sarl
push
fcmove
imul
ret
sub
scas
fs
cmp
out
jo
inc
stos
lea
jbe
orb
inc
add
mov
sbb
jb
loope
pop
mov
rcl
ror
sbb
outsl
ss
sub
jnp
outsb
xchg
das
add
imul
mov
adc
xchg
push
fnstenv
mov
int3
jne
lret
jae
mov
fiaddl
xor
jg
lods
xchg
inc
mov
pop
or
iret
int3
testl
es
test
lcall
stc
fnsave
cmp
test
pop
push
icebp
icebp
pushf
jnp
and
mov
push
inc
orl
xchg
sar
push
out
aad
jp
inc
mov
shr
jo
cmpsl
mov
in
xor
mov
rorb
aas
push
loope
xchg
popa
add
das
push
pop
mov
test
repz
test
sbb
adc
rcr
push
and
sarb
xlat
mov
lret
loope
adc
mov
out
xchg
ds
aam
mov
push
cmp
test
not
jge
shl
inc
dec
adc
stos
fimull
loop
out
jle
jns
int
pusha
imul
fcmovnbe
insl
enter
popa
xchg
rol
add
xorl
cmp
lret
mov
js
pushf
push
sbb
mov
nop
xor
pop
push
add
call
js
xchg
mov
js
xchg
ret
pop
xor
cs
sbb
dec
fwait
push
pusha
xchg
add
out
popa
daa
mov
clc
repnz
mov
dec
push
xchg
sub
decl
push
lods
fwait
inc
ljmp
push
add
lock
mov
arpl
loopne
inc
xchg
cmp
xchg
push
dec
dec
cmp
sahf
adc
out
fs
es
or
mov
dec
repnz
ds
cmp
and
mov
mov
mov
lock
arpl
push
push
dec
push
xlat
sbb
fisttpl
xor
add
sbbb
stos
out
pusha
imul
enter
fists
push
xchg
mov
pop
clc
sbb
pop
aas
or
add
xchg
out
ljmp
sarl
hlt
sbb
push
mov
inc
pop
int
cmpsl
sub
outsl
mov
mov
jp
subl
pusha
leave
stos
sbb
int
pusha
dec
mov
imul
or
sbb
jae
movsl
negl
sbb
dec
testb
dec
je
imul
xchg
dec
sub
or
jg
xor
sub
pop
dec
ds
into
ret
pop
nop
mov
mov
cmpsb
mov
mov
dec
aaa
add
stos
pop
sub
pushf
sbb
push
hlt
arpl
andb
pslld
test
cmc
popf
mov
adc
out
xor
mov
xchg
dec
pop
sbb
imul
es
mov
rol
pop
jae
push
leave
stc
add
mov
xor
mov
mov
push
sbbl
sbb
push
adc
lea
xchg
jns
push
bound
test
xchg
push
mov
jne
and
mov
xchg
pop
xor
xor
test
xor
jo
std
out
xchg
roll
out
sbb
cmpsl
cmp
out
mov
enter
mov
jmp
cmp
lret
popf
sbb
outsl
aas
xchg
add
push
lcall
lcall
mov
xor
and
popf
fistpl
add
outsl
adc
inc
lds
jo
sub
popf
add
sub
leave
xchg
dec
and
gs
cli
jl
cmp
imul
or
fwait
lahf
ljmp
push
rolb
jne
negb
and
push
fiadds
ss
xchg
sbb
shll
dec
dec
jb
ffreep
fmulp
fmuls
adc
push
lea
cmp
sub
adc
popa
dec
push
mov
clc
and
in
inc
mov
test
insl
push
daa
sbb
iret
js
and
jbe
mov
mov
mov
pop
push
in
bndldx
lret
inc
cmpsl
jecxz
hlt
xlat
add
out
xchg
mov
nop
mov
dec
adc
adc
mov
fildl
rol
lea
sub
add
jl
fstpl
xchg
adc
addr16
add
shrb
ja
mov
pop
stos
mov
lea
fldcw
jb
dec
mov
sbb
sar
arpl
into
sub
cmp
mov
ja
jnp
test
pop
ficompl
outsb
mov
cs
nop
subl
cmp
inc
addl
or
repz
repz
arpl
mov
cmpsb
pop
jp
icebp
mov
aam
rclb
pop
cmp
imull
dec
sbb
add
lcall
lock
arpl
fmull
das
mov
pusha
mov
in
push
xor
and
dec
es
imul
push
mov
xor
push
sbb
push
sbb
test
pushf
popa
das
js
ljmp
je
gs
lea
hlt
dec
sbb
jno
adc
jp
hlt
sbb
add
inc
xor
fists
inc
xor
sbb
lea
dec
repnz
cld
mov
jae
xchg
mov
arpl
fistpl
shll
addl
je
inc
cmc
ret
arpl
dec
dec
xchg
testb
bound
pop
cs
push
mov
pop
filds
push
jne
mov
sahf
sahf
mov
adc
jge
dec
xor
push
add
jnp
lods
lahf
in
loop
test
sahf
in
out
or
repnz
stos
leave
in
inc
mov
jb
lock
in
jmp
loop
mov
jmp
pop
push
dec
icebp
sti
lods
dec
lret
xchg
stos
stc
adc
mov
loopne
sahf
dec
js
in
sub
cs
lods
sbb
dec
imul
lds
xchg
jmp
pop
pop
in
inc
add
cwtl
mov
sub
jl
adc
mov
lret
jle
xor
xor
cmp
ljmp
jg
aaa
cmp
inc
out
xchg
lea
push
cs
push
roll
push
push
ret
fildl
mov
imul
adc
dec
lods
xchg
lds
sub
cs
arpl
call
cmc
xchg
mov
outsl
and
adc
or
hlt
stos
arpl
mov
adc
daa
andb
out
or
and
rorl
pop
mov
sub
insl
and
inc
cmc
sub
jmp
lret
push
add
jmp
ret
mov
js
jmp
and
dec
pop
mov
inc
test
xor
push
inc
rcrl
nop
iret
frstor
bound
fcomps
jg
push
dec
and
mov
imul
inc
mov
push
and
popf
cmp
ja
aam
mov
and
insb
popa
sahf
popa
xor
push
movl
cmpsl
outsb
ds
mov
add
xchg
dec
ljmp
mov
call
xchg
and
add
or
addr16
loopne
mov
ds
nop
jle
pop
fmuls
in
mov
jbe
dec
mov
mov
jmp
dec
xchg
into
xor
mov
sbb
and
mov
dec
lods
out
or
mov
push
lret
stos
nop
sub
sbb
inc
or
jnp
mov
cs
movsb
inc
in
add
pusha
mov
pushf
ljmp
hlt
adc
inc
pop
jb
sub
jecxz
movsl
lret
push
outsb
push
xor
mov
push
mov
aad
ja
aad
mov
repnz
xlat
inc
inc
mov
or
daa
int3
xchg
das
mov
push
dec
adc
or
insb
mov
jg
pusha
cld
cmp
rorb
sbb
lods
inc
leave
fldl
dec
lcall
pushf
pop
test
out
pop
lahf
shrb
dec
push
sub
jae
movsb
dec
adc
mov
pop
rcll
outsb
pop
lahf
xchg
jge
orl
xchg
insb
shlb
nop
scas
add
sub
sti
pusha
cmpsl
cmp
jno
pop
add
and
jecxz
test
dec
out
jne
ss
scas
fiaddl
sbb
ss
mov
xchg
push
popa
add
imul
pop
cmpsl
fxch
jnp
hlt
arpl
lcall
jno
addr16
pop
cmpsb
sbb
arpl
lds
mov
loopne
iret
xor
imul
cmovo
imul
push
imul
add
pushf
inc
les
bnd
nop
insl
dec
adc
or
pushf
in
jne
fwait
aas
movsl
add
scas
cmp
fdivrs
mov
stos
nop
jmp
es
xchg
movsb
mov
je
jp
pop
lret
popf
pop
and
push
mov
push
mov
mov
push
sbb
out
aaa
cld
dec
sbb
daa
lea
repnz
fisttpl
test
or
sub
out
inc
push
lahf
jne
iret
pop
jg
outsl
pop
inc
lea
adc
xor
repz
mov
inc
xchg
xchg
lret
xchg
mov
stos
shll
jmp
sbb
cs
insb
adc
sti
aad
xchg
movsl
adcb
lcall
push
mov
icebp
fistpl
cmpl
push
sbbb
pushf
mov
in
adc
lea
ret
scas
test
cli
sub
mov
mov
inc
xchg
inc
push
sahf
sub
lods
cmp
xchg
mov
mov
or
negl
dec
lret
cmp
repnz
sbb
sbb
add
and
cwtl
aam
test
push
mov
jo
mov
fistpl
int3
outsl
lahf
je
icebp
popl
popf
out
ror
test
hlt
mov
fsubrl
adc
inc
scas
pop
cli
mov
lret
mov
fstps
mov
sub
mov
aas
ficomps
ja
push
scas
imul
imul
jae
push
in
adc
pop
iret
cmpsb
rcrl
inc
arpl
jp
pop
mov
inc
add
add
adc
cmpb
test
xchg
stos
xchg
into
in
in
jo
mov
push
or
ljmp
inc
dec
movsb
pop
or
int
pop
push
jns
cmp
and
mov
push
int
sub
dec
std
lods
aad
pop
jbe
cmp
jbe
cmpsl
jmp
stos
xchg
push
les
mov
cmp
icebp
repnz
in
and
pop
frstor
ret
inc
int
jl
mov
add
jb
mov
cmp
cmpsl
movsl
push
cld
test
lret
out
cmp
jne
fdivp
outsb
xchg
xchg
fwait
push
pusha
and
out
fiadds
in
adcb
inc
in
xlat
call
scas
and
sbb
bound
addb
sub
les
sub
imul
ret
lret
or
xchg
xor
xor
inc
in
jecxz
cmpsb
sbb
jae
out
and
mov
cli
pushf
pop
or
andb
push
or
inc
nop
cmp
jae
int3
mov
mov
outsw
add
dec
aad
xchg
gs
xor
cmp
fucomi
fiadds
inc
cmp
out
ret
sub
test
aad
lret
ljmp
xor
stos
pop
mov
lret
mov
or
cmp
push
inc
loope
arpl
notb
sbb
pop
adc
push
sub
push
adc
cmp
push
or
pop
push
aad
adc
sub
xor
ss
shll
rcrl
std
xchg
mov
cmc
jne
xchg
cmp
imul
xchg
movsb
sbb
outsb
xor
cwtl
call
or
pop
repnz
mov
pop
jmp
add
psubw
mov
dec
andl
js
lock
into
xorb
add
in
cmp
sbb
dec
dec
push
sub
outsb
aaa
mov
and
popa
sbb
int3
les
xlat
push
add
xor
xor
dec
pop
outsl
inc
dec
inc
addr16
and
repz
inc
mov
xor
dec
inc
mov
hlt
mov
mov
cmc
mov
add
pop
lods
and
ljmp
adc
cmp
push
adc
cwtl
xor
jecxz
mov
or
lock
push
icebp
sbb
pop
adc
jp
jbe
sbb
jle
test
int3
xchg
adc
pop
pushf
je
xor
test
std
mov
lds
rclb
mov
lea
inc
adc
xor
sub
fbstp
jns
xchg
imul
stc
cmp
stc
pop
adc
mov
mov
dec
inc
sti
outsl
mov
mov
movsl
xchg
jb
or
mov
ljmp
fs
lret
jbe
sbb
aas
xor
xor
and
xor
xlat
das
stos
cmpsb
loope
daa
scas
aas
subb
xchg
subb
add
xor
push
mov
mov
dec
pop
xchg
mov
shll
test
movsl
aaa
ficoms
andb
repz
lock
bswap
sbb
pop
and
outsl
mov
jb
add
enter
dec
adc
pop
inc
sub
cwtl
and
jnp
and
int
mov
mov
inc
and
jne
push
pushf
pop
jb
cmp
sub
and
jle
roll
insl
das
push
in
xor
pop
and
dec
push
int
inc
out
xor
mov
or
scas
daa
mov
dec
pop
fidivl
mov
dec
adc
ds
mov
lret
nop
out
enter
mov
repnz
push
ljmp
jno
jg
je
lret
ds
cmovo
inc
subl
dec
outsl
aad
cmp
add
dec
adc
jnp
subb
gs
cmpsb
inc
fwait
cmpsb
push
mov
icebp
cmp
sbb
xor
movsb
jbe
ror
lret
lcall
push
xor
cmp
add
imul
les
shl
and
aas
cmp
xor
jae
mov
int3
sbbl
out
pop
imul
sbb
dec
fs
push
ss
pop
mov
mov
bound
mov
inc
push
fsubrs
mov
movsl
out
dec
pop
bound
push
ljmp
adc
mov
mov
lret
push
repnz
mov
or
das
scas
rclb
stos
popf
mov
jge
push
adc
dec
in
popa
das
push
nop
mov
ret
je
fisttpll
fnstsw
mov
and
das
cmp
xchg
cwtl
fisttpl
aam
std
or
cli
out
xor
stos
and
mov
xor
push
mov
xor
data16
or
cmc
ja
cwtl
repz
or
test
mul
imul
add
popa
ds
add
or
sub
clc
xor
pop
add
sbb
in
and
push
pop
push
fnstcw
mov
adc
repnz
cmp
push
fdivrl
lahf
mov
adcb
outsl
push
xor
jg
fstpt
cld
or
fadds
js
movsb
sbb
imulb
add
cmp
das
jo
jne
xchg
dec
mov
lds
das
scas
addb
divl
add
and
sahf
ljmp
pop
dec
mov
hlt
sub
ds
cmp
inc
mov
add
lods
and
lods
mov
mov
dec
add
dec
mov
aad
call
lods
and
out
lahf
xchg
add
daa
js
into
sbb
testl
inc
adc
push
dec
mov
pop
gs
out
movsl
push
bnd
sbb
sbb
jmp
inc
xchg
and
into
cmpsl
ret
sbb
adc
xchg
sarb
adc
and
aad
dec
ja
add
dec
xchg
inc
testl
jmp
mov
out
or
scas
inc
ljmp
lret
mov
jmp
adc
mov
xor
repnz
xchg
gs
adc
sti
push
xchg
and
add
mov
pusha
dec
or
in
and
push
iretw
pop
test
mov
loopne
jno
xchg
jae
push
pop
das
pop
sbb
mov
dec
mov
fisttpll
hlt
dec
jne
mov
dec
jnp
jo
insl
repz
add
scas
mov
movsb
shrl
lret
test
mull
cmpsb
inc
fldenv
jmp
cmp
ffreep
ds
jmp
add
pushf
daa
adcb
and
sub
xor
stc
jno
lods
pop
xchg
and
ljmp
mov
test
lret
std
cmpsl
push
arpl
mov
icebp
les
es
orl
mov
cmpsl
lods
push
and
sbb
mov
mov
rcrl
or
std
push
pop
pop
addr16
push
sbb
xchg
fildll
aam
pop
or
add
dec
jg
shll
cmp
in
movsl
data16
cli
insl
cli
push
addl
adc
sahf
fidivl
mov
xlat
iret
jb
int
adc
aas
cmp
stos
add
push
sahf
mov
test
mov
push
pop
inc
lret
lahf
jl
leave
adc
cmp
lds
add
pusha
stos
aaa
cmp
push
popf
loope
sub
jno
pop
cmp
jne
inc
mov
sahf
adc
in
mov
lcall
sbb
mov
andb
nop
and
lea
xchg
outsb
push
imul
cmc
js
sarb
int
out
jg
sahf
jmp
xchg
sub
cmp
popa
mov
add
sarl
popf
les
push
adc
js
jns
dec
fbld
xor
xchg
pop
test
outsb
insb
lds
push
test
inc
xor
add
rolb
push
mov
mov
push
jo
pusha
notb
inc
xor
add
rolb
push
mov
mov
push
jo
pusha
notb
inc
xor
add
aam
rclb
movsb
ss
add
bnd
xor
adcb
pop
fdivrl
shlb
scas
sub
jns
imul
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
outsl
sarb
leave
jl
paddsw
and
inc
pushl
scas
add
shrb
jg
push
pop
nop
das
addb
pusha
fistpll
inc
pushl
jecxz
lahf
adc
pusha
pop
push
outsl
push
jg
psubsb
mov
iret
or
ss
and
shll
cmp
push
xchg
pop
mov
cmp
in
xchg
movsb
xorl
lret
xchg
lret
push
and
loopne
sbb
xlat
call
maxps
hlt
mov
stos
fwait
mov
mov
xchg
scas
out
mov
add
rcrl
xor
mov
lahf
jecxz
pop
pop
mov
cwtl
jnp
inc
xchg
sub
inc
add
xor
and
mov
popa
add
cmp
repnz
xchg
xchg
aam
enter
xor
ret
fsubl
lahf
inc
scas
jne
jne
loopne
das
jg
aas
cmp
daa
jns
mov
cwtl
mov
inc
ljmp
adc
shrb
jg
pmulhuw
nop
das
cmp
or
fisttps
ds
adc
xchg
push
xchg
outsl
scas
jg
push
jbe
imul
fiadds
mov
mov
dec
cli
fs
inc
icebp
lock
xchg
or
jg
arpl
push
cld
inc
repz
dec
test
cmpsb
xor
loope
sahf
gs
inc
rolb
sbb
mov
aas
jo
pusha
fists
inc
pushl
and
lock
loopne
shrb
jg
push
pop
nop
das
cmpb
iret
pusha
fists
inc
pushl
and
lock
and
js
lahf
mov
lock
roll
lahf
lcall
mov
xor
jb,pt
jbe
in
ret
mov
or
pop
sub
add
xchg
lahf
push
sbb
xchg
fisubrl
push
or
mov
cmp
jbe
push
cmp
into
in
mov
xchg
jle
call
sbb
sub
or
scas
aad
jecxz
test
pop
movd
push
in
cmp
scas
sub
pushf
daa
fs
ljmp
or
stos
bt
cmp
scas
sub
leave
lea
imul
push
xor
and
sub
lret
inc
pusha
cmp
fadds
mov
in
sahf
inc
rcrl
pushf
and
mov
add
add
mov
xchg
pop
fadds
xchg
lahf
cltd
mov
mov
dec
adc
xchg
outsb
imulb
pusha
pop
fldt
sbb
mov
push
cwtl
mov
pop
xchg
mov
aad
jmp
cmpsl
mov
aad
imul
aam
insl
xorb
sub
inc
xor
mov
cld
shlb
cmp
outsl
fistpl
xor
pop
and
or
xchg
aaa
cli
mov
in
push
leave
and
and
xor
insl
ds
stos
sbb
xchg
cmp
bound
jbe
xor
mov
jb
arpl
or
iret
les
inc
mov
adc
sbb
inc
mov
mov
nop
mov
das
jb
inc
inc
mov
hlt
es
lret
pop
push
inc
jb
je
add
jg
push
jbe
mov
mov
mov
fiadds
xor
clc
xor
mov
xchg
hlt
stc
loopne
dec
xchg
xor
and
ret
add
add
std
icebp
add
xchg
ja
mov
aaa
dec
stc
adc
cmp
in
cli
and
out
mov
adc
pop
or
xchg
in
ss
jno
jns
lahf
push
lret
xor
and
sbb
outsl
in
test
xlat
in
and
mov
pop
lods
or
insl
push
adc
sub
jnp
mov
cmp
fmulp
addb
je
adc
out
mov
xor
xchg
add
gs
rorl
insl
cld
sbb
popa
push
adc
or
sahf
pop
sub
ret
cmpsb
mov
insl
div
mov
stos
test
pop
es
pop
mov
mov
xor
imul
dec
lcall
pop
and
test
orl
push
mov
popf
in
lahf
stos
add
jmp
xchg
xchg
xor
dec
jae
push
push
push
jl
ds
fucomip
pop
add
lock
push
jbe
push
push
data16
dec
cld
pop
xor
aad
xchg
stc
sub
lock
fidivs
call
push
outsl
jp
pop
add
push
xchg
dec
cwtl
cli
icebp
fldl
dec
scas
inc
and
out
xchg
hlt
jmp
pop
sbb
sub
inc
cmc
xchg
mov
inc
xchg
or
push
sbb
enter
cmc
adc
in
movsb
xlat
scas
add
pop
aam
sbb
mov
das
test
pop
sub
fs
sub
lahf
dec
data16
lret
sub
add
mov
outsl
testl
es
pop
ja
cmp
js
outsl
mov
pop
sarb
std
cmp
adc
dec
movl
pop
mov
push
jns
in
aaa
and
out
jno
xor
or
imul
mov
sahf
stos
mov
insb
xor
mov
and
xlat
stos
inc
fsubr
sbb
mov
addl
icebp
jnp
cld
push
add
cs
hlt
pop
or
or
mov
jno
xor
shr
ret
out
pusha
lock
rcl
jae
dec
loopne
iret
mov
add
cmp
lahf
and
adc
adc
lods
mov
aaa
mov
jmp
ljmp
mov
cmp
xor
bound
jne
jg
mov
clc
repnz
jbe
cwtl
cwtl
xchg
pop
addb
jge
sub
loop
int
mov
subb
stos
jno
icebp
mov
mov
fmulp
cmp
lret
xor
arpl
xlat
ss
in
and
or
imull
daa
pop
inc
sbb
pinsrw
sti
cld
and
scas
addr16
insl
fs
dec
sbb
adc
jg
les
xlat
lret
data16
pop
push
mov
and
insb
mov
fimuls
add
jnp
and
cwtl
dec
jge
dec
scas
bound
sub
pop
cli
and
hlt
cli
movsl
inc
mov
out
scas
popa
adcb
lods
mov
xor
rolb
das
inc
dec
movsl
pop
enter
sub
out
inc
mov
lahf
or
or
mov
sbb
xchg
mov
lods
test
xor
and
xchg
arpl
data16
loopne
jae,pn
popa
nop
es
sub
push
hlt
jo
cs
je
repnz
or
adc
mov
movsb
scas
imul
outsl
adc
cmp
cmpl
sbb
jecxz
mov
dec
dec
lods
std
pop
fstpl
dec
cmp
int
fsubs
rolb
sub
out
xchg
mov
cmpsb
stos
sub
pop
ficomps
add
mov
fidivs
or
mov
ficompl
push
mov
lahf
sub
mov
mov
pavgw
subb
rcl
push
loope
xrelease
pop
mov
scas
mov
dec
ficompl
fbld
pop
mov
push
add
cltd
data16
mov
fmull
cmpsb
or
repnz
sub
in
mov
xlat
jnp
adc
out
cmp
push
or
les
inc
stos
push
dec
sbb
pop
test
and
jo
xor
jnp
cmpsb
lret
adc
fmul
ficomps
stos
rclb
movsl
or
jp
movsb
scas
dec
sbb
and
mov
jle
push
fnsave
adc
cmp
mov
addr16
rcr
mov
add
aas
nop
add
leave
cmp
and
dec
movsl
fistpll
repnz
icebp
cmp
or
fxch
call
adc
add
sbb
neg
test
or
mov
jg
mov
xlat
pop
lret
mov
cs
arpl
inc
int3
loop
push
mov
adc
mov
lahf
jmp
lods
mov
pop
push
or
push
aaa
test
sahf
stos
push
and
mov
adc
loope
dec
dec
cltd
push
lods
shlb
imul
pop
push
cli
or
sbb
or
imul
push
sarl
and
test
sbb
fsts
test
addb
sub
push
shll
cmp
inc
sbb
inc
pop
xlat
call
pushf
add
ljmp
icebp
adc
loop
into
jmp
mov
lds
in
divb
xchg
jl
xlat
sarl
add
lds
inc
repz
push
xor
cmp
scas
sbb
xlat
push
rorb
data16
xchg
jne
adc
rcrb
bound
insb
insb
or
sub
cld
pop
call
hlt
sar
out
into
mov
out
sbb
add
inc
and
neg
andb
inc
and
popa
and
dec
adc
in
pop
xor
arpl
cmp
test
push
lea
iret
mov
es
push
mov
pop
cmp
jbe
adc
sbb
xchg
mov
xor
push
bound
pop
pop
idivl
lods
jne
loopne
sarb
sbb
xchg
stos
inc
in
xchg
mov
hlt
pop
dec
faddl
cmp
mov
andl
mov
and
call
popfw
sbb
adc
sbb
sahf
push
ret
ror
mov
cmp
lret
push
pusha
and
hlt
lods
xor
loop
push
fiaddl
fildl
cmp
inc
sub
sbb
add
adc
int3
jp
sti
xchg
cmpsb
xchg
push
jp
or
push
cmpb
pop
adc
jp
xorl
lea
mov
call
xlat
mov
aas
movsl
daa
fwait
sub
fstpt
repnz
or
xchg
sbb
fucomp
mov
test
in
or
cmp
std
adc
sbb
and
xor
sbb
cmp
fs
jecxz
and
fs
push
ljmp
lea
or
minps
call
in
test
jae
jle
pop
test
stc
ficoml
push
sub
xchg
sti
mov
push
xchg
and
xchg
adc
xchg
add
mov
cmpsb
sar
arpl
add
mov
aaa
xor
sahf
pushf
xor
cmp
mov
decl
pop
and
pop
xchg
sarb
pop
jmp
xchg
mov
movsl
rcll
dec
xchg
and
push
or
or
enter
daa
mov
in
lcall
shll
movsb
push
incl
push
sti
pusha
ja
test
jmp
je
sarb
rcl
mov
adc
mov
ret
movsb
data16
ret
mov
out
call
dec
push
jo
fisttpll
push
mov
and
fdivr
pusha
mov
stos
mov
add
adc
ret
pop
jno
imul
mov
cli
jbe
jp
cmp
and
repnz
fldz
rcl
sahf
bnd
sti
sbbl
adc
xlat
movsb
mov
sub
test
add
or
xchg
mov
mov
sbb
xchg
and
daa
mov
into
xchg
cmc
mov
xchg
inc
jmp
ffree
dec
ja
adcl
imul
gs
lea
in
xchg
jne
push
leave
rcll
orl
sbb
cmpsl
add
repnz
cmpsl
jle
pop
jo
hlt
cltd
lcall
aam
das
xor
cmp
imul
repnz
into
loopne
es
adc
pop
hlt
daa
out
jnp
add
mov
imul
cmp
inc
out
mov
inc
jae
cmp
push
jp
sbb
sub
ds
cli
sbb
mov
sbb
repz
out
mov
push
xor
clc
xor
lahf
bound
sbb
add
in
pop
test
and
imul
addr16
pop
cmp
jle
loopne
push
sbb
pop
movsl
not
leave
jmp
cmp
arpl
in
jmp
dec
push
in
push
mov
test
je
add
inc
xchg
int3
inc
sahf
push
cmpsl
sbb
outsb
push
inc
out
pop
rclb
sbb
or
sub
sbb
pop
or
ja
sbb
and
inc
stos
popf
insb
idivl
jmp
lret
clc
test
sub
shlb
sahf
bound
cmp
fwait
sarl
movsb
xchg
or
or
pop
call
divl
mov
shlb
sbb
jecxz
pop
push
leave
bound
mov
ret
cli
fidivs
sbb
in
jae
or
jbe
adc
ficomps
aaa
ds
mov
gs
mov
jmp
cmp
xor
in
cmp
sahf
xor
pushf
sub
cmp
mov
fcoml
add
push
and
sub
lds
xor
sub
filds
movsl
pop
adc
test
aas
rcll
dec
sub
sbb
scas
mov
cld
jecxz
ret
in
aad
pop
jmp
sub
mov
pop
mov
mov
sti
pop
mov
cmp
sub
stos
jmp
xchg
xchg
push
mov
icebp
aaa
push
js
rcl
shrl
out
lret
leave
aas
xchg
or
and
test
sbb
ret
mov
leave
repnz
or
dec
divb
xchg
mov
sbb
dec
imul
inc
out
lock
mov
sarl
hlt
dec
add
icebp
jmp
mov
es
dec
jno
repz
push
inc
xor
lret
mov
in
cmc
mov
push
jae
retw
movsl
or
xchg
jnp
jecxz,pn
and
sbb
call
add
push
cmp
fstl
xchg
push
cmp
cmp
sub
push
dec
je
push
leave
shrl
xchg
fwait
popf
aam
pop
dec
addr16
push
in
xchg
cld
pop
data16
fsub
aad
xchg
pop
repnz
leave
mov
adc
pop
lret
mov
sub
ja
or
xchg
lcall
jns
popa
or
cmovle
xchg
inc
pop
mov
inc
sub
out
popf
add
in
dec
sbb
pop
ficoms
or
push
lea
popa
popf
and
jne
jmp
pop
scas
pop
pop
mov
inc
inc
pop
jge
mov
push
xor
sub
shl
mov
jb
mov
lcall
adc
add
pop
dec
xor
lods
movsl
sub
or
jnp
inc
sbb
iret
hlt
stos
xlat
lock
lret
sub
mov
sbb
mov
xchg
or
and
fs
sbb
imul
call
jp
popa
daa
push
mov
imul
sbb
push
call
in
aam
mov
shrl
orb
stos
filds
xchg
mov
and
xchg
xchg
cmp
out
cld
mov
je
adc
push
aaa
mov
push
ja
dec
call
xor
loope
aaa
mov
in
popl
inc
add
sahf
jo
loopne
xchg
jg
aad
xor
sbb
repz
leave
fwait
icebp
xor
lods
xor
imul
inc
hlt
int
xchg
pop
pop
cwtl
je
cwtl
mov
inc
inc
xor
cmp
xchg
pop
adc
jo
cltd
enter
sub
mov
pop
xor
xchg
les
adc
pop
arpl
paddusb
pop
cmc
dec
lock
ss
xchg
out
lahf
stos
imul
insl
test
mov
xchg
mov
xor
out
and
out
pop
push
and
cmc
lret
mov
mov
fisubrl
lods
shrl
in
scas
jb
jg
fcoml
fwait
pop
sbb
pop
nop
mov
repnz
sub
sbb
inc
fnstenv
jno
fidivrl
stc
sbb
dec
and
rcll
incl
pop
sbb
test
push
call
sbb
push
ljmp
lea
cld
push
cwtl
jb
mov
dec
push
pop
loope
jge
sbb
lret
sub
fisubl
imul
mov
outsb
repnz
dec
adc
xchg
stos
into
fisubl
or
out
pushl
jmp
xchg
shl
out
dec
sbb
shrb
add
mov
adcb
out
bound
clc
lds
xchg
fcmovu
inc
inc
jb
fadd
scas
push
stc
cmpsb
push
cmp
je
adc
mov
int3
xchg
mov
idivl
data16
out
adc
icebp
mov
push
pop
inc
sbb
or
mov
push
imulb
pop
outsl
out
and
out
nop
nop
lea
leave
stos
jp
mov
jbe
add
push
mov
cld
loope
clc
insb
into
jle
arpl
pushf
lret
loope
jmp
mov
xchg
and
mov
cmpsb
add
sbb
stc
jmp
cmpsb
fisttps
xor
pop
in
repnz
xor
hlt
push
mov
aas
mov
cmp
shrb
repz
out
dec
jno
es
lret
rcr
add
sbb
and
jge
fwait
orb
mov
stos
mov
inc
push
imul
in
mov
inc
insl
inc
push
push
shll
jnp
pop
cmp
xor
add
pop
xchg
dec
sti
xlat
add
sahf
jne
pop
mov
inc
add
int3
fdivrs
xchg
imul
mov
adc
insb
fnstenv
faddl
cmp
movsb
fisttpl
mov
mov
sub
xchg
pusha
sub
push
add
or
cmpsl
pushf
loop
xchg
enter
xor
data16
scas
sub
sbb
mov
stos
inc
jno
int3
adc
aad
jmp
pop
pop
fucom
bnd
lock
xchg
leave
dec
sub
add
cs
cmp
sti
out
adc
in
dec
iret
jmp
push
add
add
xchg
dec
out
adc
or
in
jae
pop
imul
outsl
adc
jmp
outsl
lods
pop
clc
or
push
push
cmp
je
int3
jmp
inc
and
in
dec
jb
xchg
push
push
cmp
lea
aas
mov
fcom
insb
test
clc
call
jle
int3
cs
pop
nop
lret
sahf
add
pop
movsl
jb
ficomps
adc
loop
popa
or
jge
and
fcompl
inc
enter
iret
xchg
xor
sbb
stos
xor
pop
sbb
repnz
pop
jno
icebp
aam
mov
pushf
js
lods
rolb
push
fbstp
push
add
int3
xchg
testb
mov
ljmp
ljmp
or
or
or
xchg
pushf
aam
jmp
and
mov
ret
push
mov
mov
lods
jae
pop
movsl
cld
bnd
pop
mov
mov
jle
adc
mov
rclb
push
ss
into
sub
and
cmp
shlb
jmp
lcall
cs
push
pop
stos
loope
subl
or
shll
or
outsl
xor
inc
out
addr16
pop
add
ret
js
jae
push
into
xchg
test
jle
leave
scas
arpl
add
jmp
mov
setp
adc
mov
stos
je
lods
xchg
shlb
ljmp
fwait
out
sbb
in
ja
repz
push
hlt
jl
loopne
add
movsl
aas
adc
inc
scas
cs
popa
mov
or
stos
insl
xchg
pop
rol
cltd
loop
dec
cmpsl
push
invlpg
gs
mov
or
push
lds
out
fcom
adc
mov
cli
outsl
adc
inc
mov
subb
orl
mov
sub
stos
lods
xor
fildl
push
mov
mov
jno
repnz
ss
fiadds
sarl
mov
imul
add
daa
xlat
std
mov
push
xor
pusha
sbb
les
lcall
mov
mov
outsl
fdivr
stos
pop
iret
ss
sbb
xorl
insb
push
inc
inc
sub
rolb
fsubrl
xor
mov
xor
adc
xchg
sbb
cltd
jl
andl
divb
mov
dec
in
out
dec
iret
dec
testb
mov
jne
dec
push
repnz
mov
loopne
push
mov
jecxz
or
and
rcr
shll
jmp
xor
push
xor
ret
mov
shll
aam
sbb
fucom
jecxz
test
or
cmp
orl
inc
push
xchg
andb
mov
pop
and
inc
cmc
lret
and
sbbl
mov
cmp
add
jmp
std
xchg
pop
pop
and
insl
movl
xor
icebp
movsb
lcall
dec
out
sti
mov
pop
add
jo
adc
xchg
xchg
inc
cmp
xchg
or
push
cmc
mov
pop
cmpsb
mov
and
ror
and
mov
lret
xor
outsl
sub
mov
ja
int3
xlat
or
pusha
testb
icebp
mov
jmp
cmp
cltd
add
stos
mov
xchg
stc
pop
dec
and
shl
inc
mov
or
movsb
out
mov
pop
addl
xchg
xchg
xorb
mov
sbb
mov
cmp
std
call
lds
xchg
mov
rolb
mov
sub
jmp
jo
mul
shlb
orb
cmpsb
mov
dec
jo
pop
scas
sbbl
mov
cmp
addr16
icebp
inc
sbb
fstps
punpckhdq
xchg
stos
xorb
scas
dec
int
and
jmp
pop
imul
cli
jne
cmc
ss
fcmovbe
nop
pop
mov
pop
lock
mov
iret
jne
jb
pop
cli
push
add
sarl
push
aas
add
push
dec
ss
repz
dec
std
sbb
leave
inc
popf
or
mov
test
pusha
mov
add
hlt
pop
adc
push
mov
jae
inc
sub
mov
rorb
icebp
lret
imull
push
neg
pushf
cmp
xchg
mov
or
outsb
add
sbb
sbb
mov
inc
mov
shl
shrl
add
xor
and
add
es
loop
add
push
jecxz
pop
jns
fdivrl
push
pop
nop
das
cmpb
iret
pusha
fists
inc
pushl
and
lock
loopne
shrb
jg
push
pop
nop
das
cmpb
iret
pusha
fists
inc
pushl
and
lock
jecxz
shrb
mov
movsb
pop
nop
das
cmpl
pop
out
inc
pushl
cmp
call
outsl
call
pop
nop
das
add
jo
lahf
jne
out
inc
mov
test
out
push
incl
sbb
repz
out
rcrl
int3
adcl
pop
and
xor
adc
adc
ret
out
rcrl
subl
push
arpl
pop
inc
pavgw
add
adc
cmp
lret
out
stos
mov
subb
or
bound
imul
mov
sbbl
dec
test
call
loop
pop
enter
ljmp
dec
xor
push
mov
cmovge
or
sbb
push
xchg
push
loopne
push
data16
add
pop
and
je
pushf
stc
mov
cmc
into
mov
negl
push
outsl
rdpmc
dec
xor
std
adc
add
add
pusha
orl
pop
xor
sti
mov
bswap
mov
jns
fcmovnb
adc
cmp
xor
pop
dec
xor
and
jg
int3
jae
push
sub
dec
movsbl
add
in
and
push
adc
ret
adc
pusha
cltd
push
inc
mov
dec
notb
inc
xchg
jo
inc
aas
cld
sub
test
cltd
in
shr
leave
jnp
divl
cltd
jnp
imul
pop
dec
push
cmp
ja
xchg
shl
cmc
loope
lret
out
scas
pop
or
sbb
or
add
xchg
fwait
stos
repz
ljmp
sbb
adc
pusha
pop
push
outsl
outsb
jbe
mov
mov
mov
subl
jg
outsl
push
pop
and
xor
add
adc
jecxz
repz
out
rcrl
subl
jg
outsl
push
pop
and
xor
add
adc
jecxz
je
loop
rclb
sarl
or
sbb
inc
pop
sbbb
out
mov
je
decb
outsb
mov
sub
dec
rcrl
cltd
fucompp
ja
and
icebp
adc
sub
cmp
sbb
pop
stc
dec
ja
adc
lock
push
push
gs
pop
rorl
push
mov
push
inc
sbb
jp
push
imul
pusha
xchg
mov
sub
fstl
push
mov
lahf
sbb
idivb
fsubs
dec
out
sub
xchg
jl
jp
sbbb
push
fs
mov
das
push
jns
or
mov
jmp
jg
lock
jo
push
shl
xor
fidivl
imul
mov
and
mov
fnstenv
or
sub
jle
mov
adc
or
xlat
push
notl
jp
fwait
mov
fldt
arpl
test
rcl
mov
adc
add
call
loopne
xchg
mov
icebp
fbld
xchg
cmp
add
imul
jge
and
mov
lea
icebp
cld
cmpsb
stos
and
push
xchg
mov
adc
mov
fldenv
dec
mov
aas
cmp
mov
mov
test
clc
dec
daa
sbb
pop
inc
mov
add
pushf
and
sbb
out
xchg
arpl
add
out
lret
andb
sbb
cmp
ret
xchg
and
icebp
dec
pop
pop
enter
mov
popa
popa
pop
dec
push
pop
mov
lret
lret
cld
and
jne
xchg
ror
aaa
outsl
pop
xor
dec
or
cmpsb
lods
mov
jnp
add
inc
dec
adcl
fcoms
aas
push
fsubl
xchg
and
scas
xchg
aam
sbb
shrb
lret
pop
or
mov
mov
or
shlb
nop
xchg
mov
iret
or
mov
mov
cmp
mov
lcall
xchg
jecxz
stos
dec
ret
and
mov
int3
inc
xor
add
jns
lret
and
lds
jmp
jns
dec
and
movsb
cwtl
dec
add
pop
xchg
jb
sub
xchg
mov
push
aam
push
mov
int3
sti
and
fdivr
add
push
pop
lea
mov
mov
or
enter
mov
inc
negb
cmc
pop
sbb
push
cmc
jecxz
or
or
insl
lret
mov
fwait
mov
leave
push
push
scas
or
mov
pushl
cli
jns
sbb
pop
add
aas
and
add
data16
xchg
adc
fdivrl
xchg
sbb
pop
dec
xor
ret
jmp
sbb
test
and
daa
out
pop
insl
pop
sub
jno
sub
mov
jg
cmp
hlt
sbb
scas
mov
mov
pop
add
movsb
imul
test
adc
hlt
jo
lret
mov
rorl
movsb
mov
inc
gs
sbb
addr16
out
xchg
cmc
inc
lock
add
inc
scas
dec
jno
clc
mov
xor
mov
fs
repnz
cmp
bound
lock
cmp
js
imull
adcl
add
cltd
filds
jns
xor
outsb
aam
adc
mov
xchg
mov
xchg
test
adc
daa
xor
test
stc
cmp
sub
mov
mov
sub
sub
dec
cmp
jg
and
movsl
divb
in
push
add
call
shrb
sub
jbe
jmp
mov
cmpsl
mov
mov
test
test
push
les
imul
decb
inc
mov
add
add
jb
movsl
popf
popf
arpl
ret
xchg
imul
cmp
mov
cwtl
sahf
mov
pop
cmp
adc
rclb
outsb
inc
loopne
jbe
test
add
popf
nop
ds
jae
push
call
cmp
adc
in
jo
scas
aam
repnz
imul
lods
dec
push
mov
popf
cs
mov
popf
test
cmp
pusha
std
arpl
add
jne
cmp
subb
dec
cmp
hlt
xchg
cs
jns
aas
jbe
jb
pop
cmp
xlat
ret
jp
arpl
aaa
mov
mov
xor
xchg
cmp
aas
test
into
daa
fldcw
cmp
les
lods
imul
aad
sub
lret
call
mov
mov
add
xor
jnp
adc
in
cmpsl
iret
movsl
mov
fcompl
sbb
movsb
lahf
push
les
insb
xor
inc
pop
xchg
into
daa
mov
call
test
xchg
pop
sub
mov
les
mov
or
sarl
mov
sub
pop
arpl
mov
jmp
jl
dec
xchg
jecxz
xchg
mov
idivb
mov
xchg
aas
dec
shlb
adc
sub
cmp
push
fxch
dec
sbb
pop
aam
dec
aad
mov
and
lret
arpl
sub
rcll
leave
adc
dec
mov
fwait
decl
stos
jae
xor
xor
shll
lcall
pop
addr16
pop
push
fiaddl
out
fcompl
mov
xchg
xor
cmc
subb
das
scas
add
js
fstpt
inc
jae
lods
jno
negl
std
xor
enter
lea
inc
iret
outsb
repz
push
test
sbb
cmc
pushf
frstor
xor
cmp
iret
imul
jl
imul
jns
xchg
aas
push
fwait
js
or
outsb
mov
scas
and
ror
lods
cld
call
mov
lahf
mov
add
mov
pop
cwtl
fstpt
insl
icebp
xchg
sahf
loopne
lock
lds
jbe
stc
ljmp
insl
loope
in
sti
loop
mov
and
aam
imull
pop
push
fcmove
adcb
inc
mov
sub
in
mov
cmp
mov
out
xchg
mov
nop
push
xor
into
cltd
in
cmp
mov
xor
cmp
int
cmp
push
push
xor
xchg
aaa
jp
cmp
lcall
mov
je
or
popf
cmp
bound
sti
push
dec
mov
xlat
mov
mov
shll
inc
inc
cli
lods
std
shrl
push
lret
dec
jbe
jne
sub
cmp
push
mov
lds
loopne
pop
pop
jno
je,pt
data16
or
iret
push
sbb
inc
cmp
bound
push
add
xchg
cltd
sub
ret
loopne
sub
add
xchg
mov
push
call
sbb
addr16
xor
sbb
or
roll
lods
in
in
cmpl
xor
pop
nop
dec
mov
mov
imul
xor
neg
adc
push
outsb
inc
add
sbb
adc
cmpsb
xor
mov
iret
cmp
fldenv
dec
add
icebp
nop
pop
mov
mov
xor
sbb
outsl
gs
pushf
stos
adc
and
sbb
xchg
out
or
fimull
scas
push
fldenv
cmpsb
gs
sbb
mov
cmp
mov
cmpb
or
add
loope
shl
xchg
cltd
outsb
mov
popf
movsb
ret
push
negl
cmp
fldl
and
fistps
out
or
sbb
ja
mov
cmpsb
pop
movsb
mov
lods
push
jns
and
nop
mov
xchg
loopne
cmp
leave
mov
into
mov
mov
sahf
loope
repz
push
outsl
sbb
cs
std
cs
adc
mov
push
pop
cld
rorl
imul
in
enter
push
lods
cmp
ficompl
add
push
jle
insl
pop
fisttpll
xor
push
and
rorb
adc
lea
popf
fsubs
mov
ljmp
xchg
loop
nop
dec
nop
add
pop
arpl
or
nop
xchg
sbb
frstor
cwtl
fildl
test
or
lock
pushf
out
jg
jnp
fisttpl
fwait
test
pop
mov
dec
and
jbe
push
stos
mov
divb
xchg
leave
xchg
and
jbe
cmp
enter
jecxz
fildl
pop
sbb
mov
je
mov
js
mov
enter
pop
lret
ljmp
xor
add
int
cmpsb
in
sub
iret
ds
push
int3
mov
jg
sbb
dec
adc
xor
es
testb
data16
xchg
js
pusha
dec
mov
mov
inc
mov
inc
push
pop
js
pop
fdivs
iret
or
cmp
popf
push
add
jecxz
mov
or
and
adc
sbb
xor
jae
xor
sbb
mov
ss
fildll
sub
mov
ret
iret
pop
jl
push
icebp
adc
pop
shrb
outsl
and
fdivp
cs
insb
pop
jg
sbb
scas
and
out
out
dec
lcall
mov
push
mov
or
pop
aaa
lret
xor
pusha
fs
out
add
pop
arpl
inc
aad
mov
lret
das
outsb
scas
jle
pop
or
sbb
sub
outsb
call
pop
movsl
pop
in
ret
and
sbb
lods
fbld
inc
mov
cli
or
outsl
cmp
mov
pop
popl
lret
mov
mov
je
and
imul
getsec
jge
fstps
clc
add
push
cmp
dec
sub
mov
xchg
mov
xchg
cmp
data16
mov
xchg
addr16
xor
out
pop
cmp
mov
test
sbb
inc
jg
mov
bound
sbb
into
add
jae
pop
call
push
add
fidivrl
lret
mov
mov
sub
mov
sti
call
cwtl
stos
mov
push
in
cli
cmp
xor
jl
pusha
ljmp
int3
dec
sbb
lahf
andb
or
inc
sti
mov
out
dec
pop
filds
jge
sbb
cmpsb
mov
les
test
cld
movsl
outsb
mov
mov
movsb
sarb
mov
xor
xchg
out
sub
adc
cltd
xchg
ret
mov
rol
jb
and
add
sub
mov
out
test
into
movsb
push
pop
jle
or
leave
add
f2xm1
cwtl
push
out
lock
sub
movsl
jbe
outsb
popf
call
movsl
ds
nop
aam
add
jecxz
jns
test
leave
andb
clc
daa
xchg
test
xchg
xchg
lret
lahf
loop
jbe
fstl
pop
cld
ret
aas
pop
add
sbb
pop
movl
pop
sub
or
mov
scas
dec
cmc
fwait
nop
adc
cmp
ss
xchg
in
cmpsl
out
push
fwait
add
into
outsl
jo
xchg
data16
rcll
sbbb
mov
std
mov
adc
adc
push
into
clc
adc
inc
push
inc
nop
cmp
jae
test
stc
push
mov
cltd
fwait
call
movsl
nop
push
or
ret
adc
jo
ret
test
or
inc
cmp
cs
gs
sub
cmp
in
cs
daa
dec
ret
popf
dec
push
popf
sub
into
jne
xor
sub
mov
jns
dec
adc
into
jl
xchg
aaa
or
lahf
push
mov
into
js
push
js
fdivrl
sub
insl
addl
repz
and
add
mov
aam
stos
fwait
shrb
add
pop
or
mov
aaa
les
lret
lcall
sbb
cmpsl
mov
mov
mov
arpl
fidivrs
leave
out
adc
daa
addr16
sub
mov
jae
cmpb
cmp
aas
cmp
lock
sub
pop
sahf
mov
xor
fists
mov
xor
push
popf
lcall
add
cmp
lret
popf
cmp
loope
cwtl
cmpsl
cld
mov
push
and
jno
inc
in
jne
lcall
mov
dec
xchg
addl
into
mov
mov
xor
inc
inc
inc
adc
cmc
aam
sub
or
daa
and
rcrl
jnp
dec
cmc
es
imul
and
and
shl
mov
lcall
inc
orb
sub
cmp
xor
xchg
xchg
lret
fsubl
mov
ja
push
dec
ret
sbb
fidivrs
inc
jmp
jecxz
repnz
les
jp
push
incb
iret
imul
dec
add
cmp
daa
or
push
mov
xchg
ljmp
jbe
jo
enter
test
inc
push
mulb
pop
mov
sar
pop
jmp
test
jl
out
inc
or
adc
xchg
and
negb
sahf
add
dec
call
mov
lea
repnz
test
mov
cs
cltd
ret
or
xchg
out
and
mov
or
addr16
insb
ja
sbb
lock
sbb
add
shr
insb
push
imul
jo
or
and
sub
push
ss
in
movsb
mov
lds
int
sarl
jno
data16
jae
or
xor
and
xor
pop
xor
xchg
add
pop
mov
test
pop
jmp
arpl
add
xor
and
add
scas
mov
mov
adc
lret
jae
ljmp
and
add
js
into
push
sub
test
sbb
sbb
xor
rcl
ljmp
push
jnp
dec
leave
int
in
rcr
add
pushf
iret
ret
imul
jmp
mov
ret
push
adc
jle
sbb
popa
sub
or
stos
es
out
mov
or
pop
cmc
pop
iret
sti
mov
loop
push
cltd
cmp
addr16
mov
rolb
push
fcoms
lock
xchg
cltd
test
pop
sahf
in
movsb
adcb
pop
sbb
testb
mov
xor
fcmove
inc
or
or
clc
out
dec
mov
inc
jne
aas
cs
jmp
sbb
mov
dec
cmp
cmpl
outsb
popf
cmpsb
add
addb
insb
add
sbb
les
add
jge
xor
pop
jne
in
ds
jne
jle
pop
int3
es
lcall
cmp
cmpsl
iret
or
adc
movsb
shlb
add
xchg
jl
shlb
cld
push
lret
sub
enter
xor
mov
push
insb
cmp
aam
scas
popa
rol
ljmp
rol
mov
mov
imul
dec
repz
fisubrl
cmp
jnp
addr16
jle
mov
push
mov
pop
mov
lcall
jae
xor
mov
out
fdivrs
stc
mov
in
sahf
sbb
jne
add
data16
sbb
sbb
mov
out
mov
dec
xor
mov
push
scas
xchg
dec
adc
in
in
mov
cmpsb
lods
in
inc
pop
fstpt
not
sub
cmp
pusha
ss
cltd
cltd
dec
push
or
fcomps
push
jns
sahf
mov
mov
dec
iret
xchg
push
mov
lcall
lahf
jl
pushf
mov
ror
mov
and
int
icebp
test
jne
iret
cwtl
push
push
pop
pushf
cld
mov
or
enter
clc
lods
mov
out
lock
stos
stc
out
push
fwait
adc
das
sahf
jnp
rorl
dec
dec
xlat
imul
roll
mov
imul
popa
mov
xor
out
lahf
jo
mov
les
movsb
mov
mov
and
cs
or
or
pop
push
in
in
cmp
and
fsubrl
add
cmp
mov
sub
push
stos
or
iret
outsb
adc
mov
movsl
inc
cmp
scas
idivb
fcoml
inc
jle
sub
jno
sbb
rorb
dec
pop
test
push
fisubrs
add
cmpsb
icebp
push
sub
sbb
xchg
lock
popa
adc
and
push
aam
hlt
or
rorl
test
xor
cmc
sbb
mov
add
push
pusha
dec
cmp
roll
pop
push
push
les
dec
lods
icebp
jecxz
xchg
movsb
js
mov
cmp
addr16
fstps
inc
leave
cmp
mov
daa
push
cli
rcrl
fsubrl
add
cmc
enter
or
pop
cmp
mov
mov
stc
jg
addr16
les
cmp
cmp
dec
inc
add
mov
or
jge
test
jmp
or
adc
mov
std
cmp
jge
neg
mov
cmp
xchg
inc
data16
int
subb
std
push
jmp
sarl
jbe
outsb
push
fisttps
out
xor
push
pop
add
cmpsl
mov
push
cmp
pop
lahf
mov
pop
xchg
xchg
xchg
push
xchg
add
sbb
push
jmp
pusha
es
aad
lods
xor
push
xor
test
or
and
pop
aas
addr16
sub
stc
mov
icebp
mov
mov
les
divl
stos
push
gs
divb
pop
lahf
cmp
inc
pushf
movsb
je
je
mov
jne
mov
inc
cmp
shll
sbb
in
push
in
pop
addb
arpl
loop
cmp
hlt
inc
mov
xor
cmc
popf
adc
icebp
push
mov
mov
roll
mov
mov
sub
std
push
outsb
add
mov
ret
test
and
clc
lea
fsubl
movsb
xor
adc
loope
mov
rcrb
out
sbb
cmp
inc
lret
cld
jbe
cmpsb
xchg
or
lcall
testl
into
mov
or
arpl
jp
in
mov
push
stos
fmuls
inc
das
addr16
jl
xor
adc
sub
outsl
call
xchg
cmc
mov
les
inc
enter
cld
fld
pop
cmp
sahf
mov
jg
leave
mov
hlt
popa
cld
and
cmp
sub
insl
iret
or
mov
pushf
mov
add
xchg
add
ficompl
push
out
xchg
outsl
jg
jecxz
mov
stos
xchg
mov
adc
mov
cwtl
outsl
pop
xchg
jns
jo
mov
jae
mov
xor
movsl
pop
adc
jg
or
into
inc
and
loopne
pop
iret
daa
pop
fcomi
push
and
lahf
popa
nop
shll
std
scas
bound
xchg
cmp
xor
mov
add
add
sbb
dec
and
sub
jge
inc
xchg
inc
or
xor
mov
jbe
fisttps
lods
mov
xchg
gs
dec
jl
rcr
and
das
mov
dec
cs
insl
mov
addr16
pop
xlat
insb
push
out
jg
add
dec
ficompl
pop
push
adc
add
daa
push
xor
xchg
and
mov
aam
push
aaa
pop
pop
cli
aaa
out
dec
fcoml
mov
testl
lea
cli
out
xchg
push
aas
or
popw
pop
es
adc
or
clc
or
stc
add
repz
mov
cmp
les
sub
notb
or
or
and
mov
cs
jae
stos
test
inc
adc
mov
popa
jno
lcall
scas
mov
xchg
xchg
inc
cmp
imul
sub
jmp
jo
mov
nop
or
out
cmp
mov
dec
ret
adc
mov
dec
push
ljmp
push
xorb
or
and
mov
ljmp
orb
in
sub
or
push
pop
cli
les
ljmp
mov
or
mov
or
lret
mov
nop
xchg
shrl
mov
jns
js
inc
push
jmp
gs
and
rcrb
mov
xor
sbbl
sbb
and
mov
das
adc
es
cltd
popa
dec
outsb
xor
xchg
inc
iret
cs
arpl
dec
gs
cmp
jnp
iret
mov
xchg
push
shlb
bound
sub
mov
sti
push
xlat
xchg
mov
or
push
rclb
fcmovu
roll
scas
dec
test
push
push
pop
pop
stc
ljmp
je
popf
mov
cmpsb
dec
mov
repz
mov
scas
xchg
pop
arpl
jg
outsl
push
pop
and
xor
add
adc
jecxz
repz
out
rcrl
subl
jg
outsl
push
pop
and
xor
add
adc
jecxz
repz
ret
out
rorl
mov
outsl
xchg
pop
arpl
popl
push
pop
and
xor
add
adc
jecxz
rep
ret
iret
rcrl
subl
pop
arpl
and
stos
xchg
sar
in
push
movsb
inc
lock
popa
nop
sbb
xchg
inc
loopne
hlt
shl
ret
cmp
xor
adc
inc
mov
mov
andb
loopne
lock
and
shll
shll
or
adc
inc
mov
jbe
sbb
adc
add
shll
loop
andl
push
repnz
xor
in
icebp
jno
or
push
out
push
or
inc
stos
adc
stos
ljmp
mov
out
mov
hlt
pushf
outsl
adc
add
aas
leave
das
insl
fisttps
lcall
inc
jne
das
out
lock
sbb
sub
or
or
xor
outsl
and
and
add
xchg
or
mov
xchg
jns
inc
push
movsl
dec
rclb
lcall
adc
jne
std
dec
mov
les
jge
outsl
out
shll
icebp
int
stos
sub
add
addr16
push
rorl
gs
adc
dec
dec
cmc
sahf
inc
cmp
xor
xchg
jae
pusha
add
mov
or
xor
xchg
sub
nop
jno
popa
nop
adc
add
xor
and
and
cwtl
icebp
add
sub
pop
sbbl
aaa
in
daa
cld
je
outsb
popf
pop
mov
xchg
mov
movsl
movsb
jae
daa
rcrb
xor
cmp
out
notb
repz
je
dec
mov
mov
push
loope
data16
in
fsubs
inc
push
aaa
in
add
push
lods
add
xor
and
shll
shll
add
adc
inc
mov
mov
andb
loopne
lock
and
shll
shll
add
adc
inc
mov
out
std
push
jle
xchg
stc
popa
imul
test
sbb
jmp
lret
fisubs
outsb
aas
pusha
jle
jg
pusha
mov
jbe
lock
lock
push
xchg
dec
int
fldt
clc
les
lds
bound
ret
call
popf
sbb
fbld
sub
loopne
dec
divl
push
fistl
inc
push
in
mov
repnz
insb
fwait
dec
sbb
fs
jl
pop
xchg
scas
xchg
in
testl
jne
fs
sub
push
lods
xor
and
out
addr16
mov
or
dec
ficoms
dec
scas
xchg
jbe
add
outsb
push
cmp
sbb
mov
adc
rol
ror
int
inc
outsl
xor
pop
adcb
arpl
shrl
cltd
adc
bound
jae
das
imul
xor
sbb
jae
sbb
cwtl
ret
xchg
leave
add
iret
mov
nop
push
inc
repz
dec
rclb
xor
jle
pop
sbb
cmp
cli
shrb
push
lea
int
or
je
add
test
pop
aaa
ret
add
cmp
push
call
cmp
or
out
jo
push
sbb
or
scas
rcll
mov
sti
xor
jne
cmp
cmp
pop
push
enter
sub
int
sbb
int3
cmp
mov
mov
nop
adc
cmp
xor
push
xchg
test
outsb
sbb
leave
jo
loopne
shll
mov
daa
inc
in
nop
lds
pop
sahf
pop
stos
mov
mov
cmp
jns
mov
int3
mov
mov
pop
mov
jecxz
repz
pusha
fildll
xchg
push
and
addl
or
dec
out
aad
insb
xchg
rorb
push
add
sub
addr16
xchg
add
pop
inc
or
push
lea
addr16
ds
push
sbb
inc
iret
and
push
adc
je
pop
cmpsl
pop
cwtl
cmp
arpl
test
outsl
lods
jnp
push
sub
fdivl
hlt
mov
mov
jns
add
pop
lret
mov
push
xchg
push
and
mov
nop
lock
and
jns
out
fildll
push
dec
mov
aas
mov
lea
mov
or
cs
fsub
xlat
xchg
mov
sub
ljmp
insl
jbe
scas
pop
mov
popa
xor
fwait
add
mov
adc
ds
and
pusha
and
jae
and
mov
shlb
rcrl
push
mov
jb
into
dec
inc
push
push
jne
pop
iret
cltd
int
arpl
push
pop
jnp
iret
mov
blci
hlt
cmp
ficoml
ja
adc
xor
adc
xorb
inc
push
fstps
notb
xor
xchg
outsl
fdivl
mov
xchg
jp
insl
or
mov
pop
movsl
lret
popf
into
and
pop
sbb
inc
leave
lods
daa
gs
clc
pop
jmp
imul
popl
push
push
xchg
popa
nop
outsb
insl
adc
lods
ds
dec
sahf
and
cltd
subb
jl
push
outsl
sbb
leave
cwtl
or
jnp
dec
dec
push
adc
iret
push
add
push
out
add
mov
mov
mov
je
scas
jno
test
inc
loope
sub
nop
push
adc
aas
xor
das
adc
out
test
lret
test
ljmp
sub
cli
stc
loop
jbe
cli
fiadds
gs
and
push
mov
dec
dec
imul
xlat
mov
sub
ja
ficoml
jmp
cmp
jns
adcb
iret
push
mov
push
sar
xchg
cmpxchg
test
fs
stos
lods
lods
aaa
outsb
add
jecxz
dec
or
fcompl
pushf
mov
inc
outsb
xchg
add
aas
or
jecxz
sub
hlt
sbb
ret
in
repz
mov
fistl
bound
inc
outsb
test
inc
addr16
add
push
fcmovu
or
jnp
repnz
mov
cmpsb
jp
sbb
pop
dec
dec
leave
lods
stos
mov
repnz
dec
ds
lods
cmpsl
jnp
sarb
xchg
fcomps
jne
cwtl
sbb
imul
mov
jno
jae
flds
aam
cmpl
mov
mov
in
int3
fcmovne
aad
adc
pusha
movsl
sub
ja
push
sub
add
rolb
rcll
jecxz
mov
xor
pop
xchg
insb
mov
gs
xchg
iret
sbbb
leave
rclb
xlat
lock
mov
lods
loopne
out
testb
mov
add
leave
lcall
call
dec
sbbb
xchg
out
ljmp
jge
shrb
cli
sbb
movsb
dec
outsb
push
jmp
and
cs
outsb
les
sub
call
fdivrl
dec
add
in
movsl
call
or
lods
test
jae
add
mov
adc
dec
iret
mov
and
mov
pusha
bound
outsl
push
loope
push
xchg
sbb
jp
mov
push
push
push
mov
stos
xor
sbb
jo
int3
ljmp
xchg
mov
pop
cmp
xchg
cmp
adc
pop
aad
dec
xor
xchg
pusha
mov
lea
jg
inc
lahf
add
xchg
or
in
mov
ljmp
out
ljmp
testb
sti
pop
mov
stc
mov
leave
call
push
clc
xlat
in
clc
out
jge
mov
lcall
into
pushf
hlt
stc
cwtl
push
cltd
xchg
cmpsl
and
and
fwait
push
cli
or
dec
test
fiadds
daa
std
fiaddl
dec
push
mov
je
mov
mov
and
xor
cmp
jmp
out
xor
stos
lea
cmp
out
out
or
lahf
cmp
adc
mov
imul
movsl
mov
push
jl
lcall
aam
lock
repnz
add
mov
addb
or
stos
add
daa
adc
popa
stos
adcb
push
jg
mov
pop
outsl
data16
jno
pop
and
iret
in
sub
add
xchg
ss
shlb
xor
sbb
xor
scas
pop
in
lock
ljmp
rcrl
dec
in
mov
cmp
lods
mov
xor
stos
gs
push
cmp
std
hlt
xchg
test
sahf
test
jnp
push
clc
xchg
mov
inc
and
movsb
out
push
cmp
inc
imul
in
lds
sbb
mov
mov
inc
jl
imul
shlb
xor
bound
jae
adcl
or
pop
sti
prefetch
xor
sti
mov
dec
addr16
cwtl
dec
lds
sub
add
in
dec
mov
sbb
repz
mov
out
aas
fwait
popa
cmpsb
mov
outsl
push
cmp
fisubs
sub
loopne
data16
jge
xchg
sbb
fs
push
mov
xor
push
jb
jne
aad
lea
dec
clc
adc
imul
jbe
inc
call
pop
and
gs
dec
fsubs
and
push
stos
loope
pop
adcb
data16
fisubs
jmp
andl
sub
xor
push
jl
mov
aam
dec
adc
sub
bound
outsb
sub
es
mov
in
sti
mov
imul
xchg
lret
lods
ljmp
inc
fdiv
dec
enter
inc
jbe
nop
xchg
push
test
sbb
sbb
adc
dec
addr16
popf
pop
xor
stos
adc
and
lret
xchg
out
inc
stos
adcl
jb
daa
rclb
or
faddl
pop
mov
xchg
gs
inc
sbb
sbb
dec
and
xor
lods
aad
mov
fidivrl
pop
fdivrl
jns
fcomps
push
into
dec
cmc
cltd
outsl
rol
cltd
inc
nop
arpl
and
dec
pop
mov
sti
xor
cmp
push
sub
hlt
or
dec
inc
imul
scas
push
dec
adc
call
cli
xchg
fsubp
fcoms
inc
in
repz
inc
jp
dec
lret
push
mov
pop
push
mov
sets
push
ja
push
mov
xchg
or
int
aas
inc
mov
lods
jecxz
mov
fcom
inc
xor
add
dec
pop
sbb
outsl
add
inc
add
sub
std
or
out
push
sub
cwtl
push
pop
cmc
test
jecxz
and
data16
or
inc
leave
jb
mov
arpl
cwtl
push
test
push
int
hlt
inc
iret
into
cmp
fisttpll
mov
addr16
or
roll
scas
adc
mov
in
xor
pop
shl
stos
sub
ret
xchg
cwtl
push
mov
and
sbb
or
adc
xchg
scas
add
insb
stos
inc
loope
xlat
xchg
sub
or
addr16
stos
cmp
jnp
jge
add
imul
outsl
outsl
sti
mov
add
xchg
lods
pop
adc
stos
sahf
cld
js
movsb
cmp
sbb
adc
mov
jno
mov
outsb
push
ja
lcall
sbb
sub
cs
out
subb
mov
stc
adc
mov
push
inc
inc
fcomi
insl
push
fs
jns
dec
lock
sub
and
ljmp
xor
mov
sbb
cmpsb
xchg
pop
cltd
push
inc
test
int3
xor
mov
sbb
xchg
cmc
jp
and
stos
xchg
cmpsb
lahf
jno
imul
scas
xor
inc
push
inc
pop
rorb
std
or
inc
inc
xchg
dec
aaa
js
sbb
test
ljmp
inc
mov
mov
imulb
arpl
sti
jg
xor
push
inc
cmpsl
bound
daa
ficoml
or
cmp
jle
fcmovb
ror
insl
inc
fucomi
mov
xor
fcmovnu
sub
sbb
jg
cwtl
mov
in
and
xor
sbb
insl
repz
jo
mov
ret
add
mov
xor
fs
int
clc
gs
sti
mov
call
outsl
mov
sahf
aas
call
lods
inc
insb
mov
fbstp
stos
jnp
dec
add
je
jno
mov
pop
aad
sub
decl
push
gs
cwtl
sbb
dec
data16
jo
jo
push
adc
imull
rcr
xchg
or
jne
outsl
sub
jnp
cmpsb
sub
pop
mov
incb
iret
test
sub
xchg
sub
fdivr
sub
add
mov
mov
fwait
xchg
sub
cmpb
stc
inc
adc
sti
popf
and
aas
clc
pop
call
add
pop
or
jbe
roll
jmp
push
add
out
sti
das
pop
push
jno
mov
dec
mov
mov
xchg
faddp
lret
xlat
cli
and
pop
mov
or
scas
ret
lods
push
scas
hlt
dec
cmp
mov
popf
xchg
test
inc
ffreep
adc
out
in
jo
jb
mov
clc
loop
mov
mov
dec
xor
rorl
mov
fdivrs
push
daa
or
fs
mov
add
pop
push
fmuls
or
stos
cli
inc
inc
jae
clc
js
xchg
mov
scas
sti
incb
cwtl
pop
fiadds
shll
in
int3
push
cmp
mov
loop
sub
sub
jae
inc
inc
hlt
das
mov
les
mov
insb
cmc
popa
fadds
adc
mov
push
in
sbb
stc
aaa
push
fcoms
xor
push
jge
cs
js
cmp
and
ja
mov
jbe
mov
push
cwtl
xor
orl
push
jbe
xchg
xchg
push
pushf
inc
and
add
jmp
ret
dec
cld
or
and
hlt
lret
mov
cli
or
add
or
or
or
pop
pop
sbb
add
push
ficomps
mov
rcll
int
cmpsl
xor
pop
and
cs
pop
add
cmp
popf
mov
mov
xchg
subb
sbb
fldcw
xchg
mov
mov
jne
clc
fcmovu
icebp
or
pop
lea
jmp
xorl
stos
addb
push
mov
push
pop
imul
mull
or
inc
ljmp
sub
xlat
das
ss
add
adc
loop
fldcw
fwait
xor
push
in
repnz
out
mov
mov
jg
mov
cld
mov
jbe
movsl
in
jo
cs
outsb
stos
lea
adc
mov
adcl
popf
pop
mov
push
je
lods
jmp
inc
adcb
pop
test
push
dec
lds
sbb
jl
ds
out
popf
daa
xor
lock
je
push
xchg
cwtl
loopne
mov
repz
jmp
cmpsl
or
lea
adcb
ret
sub
aam
mov
pop
fsubs
add
addr16
rcr
pop
and
jge
cltd
adc
insl
inc
pop
add
cmp
out
push
jno
sbb
scas
dec
push
loopne
fisubrl
dec
pop
repz
inc
jg
pop
lea
inc
aad
fidivrs
inc
add
int
sub
imul
push
add
scas
dec
pop
call
aaa
adcb
inc
add
sahf
stc
mov
test
pusha
lcall
jb
push
es
xchg
sbb
add
aad
jl
lods
adc
insl
xchg
xor
mov
xchg
mov
dec
loop
iret
cli
es
mov
in
das
xor
flds
jbe
mov
in
inc
repnz
scas
dec
bound
sub
or
sbb
das
nop
sbb
insb
mov
fucom
add
push
js
aas
es
inc
lds
es
pop
jl
scas
sub
lcall
test
push
enter
jne
adc
jnp
cli
cmpb
test
mov
fidivrl
sbb
mov
inc
xchg
push
dec
out
mov
cli
adc
sbb
loope
cmp
mov
mov
out
rcl
aam
test
fs
ror
into
rcrb
cmpsb
sub
gs
mov
stc
or
and
cmc
cwtl
jle
xchg
dec
xchg
pushf
outsl
xchg
scas
mov
mov
xor
fcmovnbe
bound
imul
cwtl
mov
and
xchg
push
cmpsb
cmp
sarb
test
pop
jo
iret
cld
sbb
jmp
je
loopne
xor
or
push
and
or
pop
cltd
inc
cmpsl
out
lods
adc
mov
js
mov
imul
imul
jmp
sti
out
repz
push
jbe
lods
mov
xchg
push
push
adc
call
jmp
pop
jmp
push
cld
add
repz
inc
es
loope
push
push
pop
cld
std
int3
pop
mov
push
sub
push
cs
add
and
pushf
ret
xchg
mov
lea
sbb
mov
cwtl
scas
subl
jnp
cmp
sub
adc
add
mov
enter
sbb
lret
out
xchg
xchg
vmovaps
lret
lahf
ss
mov
enter
insb
cmp
pusha
popa
or
mov
jnp
lcall
dec
jnp
ja
pop
dec
fmuls
mov
test
cmc
fucomi
mov
ljmp
ja
lret
xor
sbb
mov
outsb
out
xor
xchg
mov
ja
cli
xchg
xchg
push
jns
inc
push
loop
push
dec
mov
dec
pop
mov
int3
aas
push
push
popf
and
sbb
jl
xchg
outsl
incb
jae
lock
clc
and
sub
xchg
xlat
mov
sub
mov
mov
adc
add
ss
out
scas
mov
mov
cmp
rolb
pop
jno
jle
test
push
les
add
mov
xor
icebp
cmp
inc
add
hlt
push
push
push
mov
dec
pop
jnp
jle
sbb
lea
jae
inc
aad
mov
mov
dec
mov
lods
xor
sub
cmpsl
mov
shl
aad
cmp
aaa
inc
shll
int
test
pop
jb
sbb
mov
pop
pusha
pop
mov
xor
sub
and
int
sub
ss
adc
insb
dec
adc
out
jb
data16
inc
testb
mov
xor
mov
mov
mov
jmp
cmp
rorl
addr16
mov
add
cmp
nop
or
adc
insb
or
sti
inc
addb
jecxz
mov
loopne
ja
leave
aam
sbb
mov
fnsetpm(287
xor
push
shl
dec
xchg
popa
mov
jne
ret
call
fildll
inc
sar
in
lea
leave
inc
mov
jnp
int3
xor
push
mov
push
stc
jae
adc
in
cmp
cltd
ret
xchg
xchg
jns
out
sarb
sub
add
xchg
dec
cwtl
inc
jnp
ficomps
dec
xor
xchg
xor
push
scas
jb
subl
inc
cmp
ficoml
cmpsb
mov
inc
cmpsl
addr16
inc
cmp
dec
mov
mov
sbb
fisubrs
mov
mov
and
dec
and
mov
mov
out
pop
push
push
pop
jmp
adcb
fisttpll
shl
xor
inc
or
js
and
sbb
or
ja
pop
out
pop
pop
int3
push
popa
and
xor
xchg
xchg
push
insb
and
scas
addr16
aas
incl
cmpsb
mov
push
stos
xchg
mov
pusha
pop
sub
mov
daa
repnz
sub
cmpsb
fimuls
hlt
ss
outsl
and
shrl
gs
sub
mul
and
mov
cmp
cmp
or
mov
inc
xor
xchg
inc
movsb
cltd
in
push
or
negl
rcll
jne
enter
sub
movsl
sub
fwait
test
add
add
jo
jmp
in
or
test
adc
out
mov
out
pop
or
dec
xor
push
ds
xor
pop
xlat
sbb
mov
inc
push
ss
or
jns
cmp
repnz
jb
push
and
movsl
rclb
in
adc
mov
push
pusha
orb
jae
iret
pop
stos
cmp
mov
dec
jae
enter
divb
mov
sub
dec
add
iret
ficompl
lods
cmp
cmp
ret
sarb
cmpsl
mov
mov
dec
push
pop
jae
addr16
stc
fistpl
mov
cmp
mov
jg
pushf
xchg
movsb
inc
dec
in
into
jno
repz
addr16
ret
inc
mov
pop
xchg
cmpsb
sbb
inc
xchg
ffreep
loopne
rclb
mov
aam
mov
in
stc
into
inc
je
jl
daa
addr16
iret
push
mov
outsl
jg
dec
repnz
and
in
ljmp
sbb
data16
mov
movsb
xchg
or
std
cwtl
xor
out
push
jns
clc
fistl
and
fstp
std
rcrb
jbe
pop
es
cltd
or
movsl
test
leave
mov
pop
mov
fcomip
aaa
pusha
sub
sti
and
push
aaa
cmp
rolb
je
sbb
insl
add
aaa
inc
outsl
cwtl
dec
mov
loop
or
outsl
dec
fs
shrb
mov
push
aad
mov
or
js
pop
mov
sbb
les
pop
jne
lock
and
sbb
adc
and
repnz
ret
lahf
dec
push
sahf
bound
cwtl
jge
pop
outsl
pop
sbb
fnstsw
lcall
push
je
and
sub
imul
mov
mov
push
mov
xchg
loope
dec
sbb
das
mov
xlat
xchg
xchg
sbb
dec
dec
inc
arpl
pushf
xchg
cmc
push
adc
icebp
rorb
lcall
mov
inc
cmp
outsb
or
mov
xchg
pushl
mov
dec
fistl
call
iret
mov
adc
xchg
cltd
test
mov
lahf
ret
out
sbb
mov
mov
jae
dec
mov
lock
inc
xchg
adc
dec
loope
or
mov
popa
nop
adc
add
xor
and
shll
shll
add
adc
inc
mov
mov
andb
loopne
lock
and
shll
shll
add
adc
inc
mov
mov
adc
add
shlb
shll
loopne
xchg
xorl
inc
inc
push
jno
popa
rclb
loopne
lock
mov
lcall
or
dec
cmp
dec
jne
gs
push
jl
rcrl
inc
xor
fucom
in
aad
lds
mov
gs
push
jl
or
sbb
sub
cmp
int3
cmc
faddl
dec
mov
movsl
lods
xlat
mov
gs
push
jl
or
sbb
sub
cmp
int3
pop
jmp
xorb
lret
rolb
insb
cmp
adc
repnz
daa
iret
les
lods
imul
cmpb
std
popf
mov
in
xor
fcmovbe
adc
inc
xor
add
rcrb
sbb
push
ja
mov
imul
int3
or
cmp
mov
gs
push
or
pusha
pop
out
cltd
jl
sub
and
inc
cs
mov
sub
pop
das
push
or
rolb
xor
or
add
cld
push
or
xor
mov
mov
subb
mov
cmp
xorb
insb
push
jl
or
sbb
sub
cmp
int3
cmc
fsub
in
aad
lds
mov
gs
pop
outsb
and
int3
nop
mov
orl
cli
les
jne
or
aaa
or
pop
inc
push
bound
test
mov
stos
repnz
shl
aad
cmp
add
sbb
sub
cmp
int3
cmc
fsub
in
aad
lds
mov
gs
push
jl
or
sbb
sub
cmp
int3
cmc
fsub
in
aad
lds
mov
sub
out
add
stc
push
cltd
imul
mov
dec
lds
or
mov
xor
jl
jae
dec
lock
xor
das
idivl
sub
cmc
xlat
xchg
sbb
mov
jecxz
push
xlat
sbb
xor
lahf
sti
shl
lock
jecxz
hlt
popa
mov
repz
je
cmpsl
dec
lock
lret
lret
xor
jae
fistps
hlt
add
sub
fistps
fldenv
jl
imul
jmp
rol
push
fistpll
xor
test
leave
jb
aad
jb
stos
jecxz
stos
jno
inc
cmpsl
lahf
jl
inc
sub
mov
mov
addr16
xchg
push
pusha
movsb
or
xor
push
mov
lret
outsb
mov
jecxz,pn
xchg
cmpsb
and
add
xchg
jl
shrl
dec
mov
iret
outsl
sbb
xorl
aad
repz
mov
imul
push
add
aas
pop
sub
mov
cmpb
or
lods
arpl
mov
shll
mov
mov
int
adcl
xchg
jge
cmp
or
xchg
out
mov
push
lods
fsubs
dec
cli
dec
cs
push
pop
mov
int
testl
out
loope
cli
jns
mov
mov
and
xchg
imul
add
fdivr
inc
jmp
jg
jae
cwtl
lret
cmp
pop
nop
ss
sarl
imul
fstpt
adc
hlt
push
cwtl
or
adc
jns
xchg
iret
dec
jno
inc
jb
sub
push
adcb
arpl
sbb
inc
out
hlt
jge
add
push
outsl
mov
decl
fstl
fisttps
mov
movsl
insl
adc
inc
cmp
icebp
lahf
mov
mov
or
and
mov
mov
cli
test
mulb
bnd
insl
mov
cmpsl
xacquire
mov
lcall
cmp
mov
daa
and
lea
or
jns
sahf
and
iret
cmc
fldl
mov
cmp
test
add
or
dec
sbb
dec
out
xor
dec
je
shrl
pop
daa
daa
mov
fstl
mov
mov
push
jno
test
jns
mov
or
aad
xor
pop
fdivrs
adc
push
test
or
mov
jmp
mov
push
loopne
addl
add
push
scas
mov
adc
ja
cmpsb
hlt
stos
add
lods
cmp
lea
add
sbb
lret
fs
aam
int
lea
lods
add
aam
dec
mov
dec
sbb
lds
cld
adc
and
stos
jno
imul
mov
cmp
cmp
add
xor
adc
hlt
leave
add
test
and
mov
sub
int3
mov
pop
jb
into
test
inc
xor
sahf
cs
lcall
aas
in
mov
xor
gs
scas
addl
adc
jmp
in
xor
ds
xor
dec
into
mov
add
insb
das
cmpsl
shll
lods
inc
insl
inc
push
enter
adc
test
ds
or
pop
cli
sbb
es
dec
adc
xchg
fstp
cmp
aas
jbe
daa
lods
sbb
fs
cwtl
lret
pop
inc
or
sbb
dec
xchg
xchg
inc
pop
hlt
popa
jl
hlt
jb
dec
push
cmc
push
or
jbe
rolb
cmpsl
fdivl
gs
sub
sbb
daa
mov
ss
inc
lcall
int
je
iret
stc
dec
out
inc
int3
pop
sub
and
out
cmp
pop
add
scas
test
mov
add
std
pop
cli
repz
lods
sub
xchg
test
push
lock
dec
lcall
push
pop
jnp
mov
dec
les
std
and
rorl
mov
in
pusha
test
popl
mov
lahf
and
sbb
cmp
xlat
inc
imul
ja
sarl
outsl
imul
push
or
mov
scas
pop
loopne
cld
lahf
or
pop
xchg
pushf
mov
mov
adc
insl
push
xchg
mov
dec
mov
fimull
sbb
scas
sti
iret
xor
mov
adc
ljmp
inc
cmpsb
xchg
por
gs
hlt
js
enter
pop
pop
ret
test
push
cs
jns
fwait
sbb
adc
mov
test
test
pop
rcrl
andb
push
push
jg
negb
sbb
shlb
lcall
loope
xchg
xor
push
pop
add
lcall
mov
xlat
push
mov
shlb
push
adc
pushf
jne
icebp
jp
clc
nop
movsb
add
dec
fucomp
pop
push
es
pop
cs
mov
push
inc
addr16
dec
jg
jmp
xchg
dec
xchg
push
rolb
shll
pop
bound
pop
push
call
daa
mov
pop
mov
mov
ret
adc
data16
xor
popf
out
add
xchg
addr16
jnp
icebp
outsb
add
aaa
aad
dec
pop
ljmp
sbb
test
sti
jo
into
mov
pop
or
lock
mov
cmp
mov
xor
add
xor
cmp
hlt
pop
bound
lods
shll
les
adc
xor
push
scas
cmc
fstps
xor
xor
cmpsl
pop
imul
add
in
sbb
inc
push
out
mov
xor
sub
loop
inc
sbb
nop
mov
pop
jno
test
lret
mov
sbb
sub
das
mov
lods
adc
fdivs
push
mov
jae
sub
fsub
adc
int
ret
mov
and
push
jg
out
mov
sub
gs
cmp
adc
or
push
and
xchg
shll
dec
push
mov
push
enter
orb
cmp
clc
dec
iret
mov
push
dec
push
pop
sti
aad
xchg
xchg
fdivrs
sbb
and
mov
sub
mov
add
mov
mov
daa
in
movsl
jmp
inc
inc
fs
sarl
jmp
je
mov
dec
pop
ljmp
std
xchg
cld
lret
or
sbb
bound
cltd
adc
xchg
and
sub
int
cld
in
jmp
inc
in
mov
mov
loope
mov
or
ret
push
cs
adc
int
add
ja
insb
mov
jne
fimull
jo
push
ret
gs
mov
std
push
loopne
rorl
lods
or
inc
cs
lahf
imul
inc
mov
je
dec
fdivrs
and
mov
fs
xchg
pop
lret
add
mov
rep
adc
jg
and
push
pop
mov
lock
enter
mov
inc
scas
mov
mov
xor
mov
popf
cmp
inc
add
xor
push
sar
lods
in
nop
mov
lcall
addr16
popa
jmp
dec
andl
fldl
push
inc
or
sbbb
xchg
mov
pop
mov
inc
mov
stos
jo
fs
pop
jle
inc
mov
pop
cwtl
lock
test
mov
push
rcrb
into
test
xchg
sub
cmp
jg
xchg
jo
data16
les
xor
inc
js
sbb
mov
or
test
ficompl
cmp
sbb
ljmp
inc
ficompl
xchg
fildl
outsb
out
ds
push
std
sub
mov
lret
and
cmp
out
in
stos
shll
push
push
js
mov
lock
push
cmp
mov
lock
sti
rclb
ss
arpl
cmp
xlat
dec
int
addr16
cmp
enter
imul
push
and
iret
and
in
dec
xor
fisubs
push
mov
dec
insb
insl
insl
fmulp
adc
mov
aad
sub
pop
imul
das
out
dec
ror
adc
insl
rcll
sbb
adc
inc
ds
rcr
push
jb
push
adc
mov
inc
pusha
inc
ret
and
test
repz
ficoms
push
ret
sub
jne
sti
xchg
mov
add
push
pop
shrl
pop
pop
jge
jecxz
mov
sbb
popf
data16
ret
fbstp
mov
jge
js
lock
cs
cs
nopl
scas
add
sahf
sub
out
mov
test
std
adc
jp
je
movsb
dec
stos
jle
iret
xor
pop
inc
push
inc
mov
jbe
mov
xor
ss
das
call
dec
lea
xor
jns
out
loop
leave
movsw
add
adc
dec
inc
fdivr
out
popa
in
movsl
out
adc
inc
or
cmc
or
andb
lods
addb
fmulp
pop
mov
or
pop
scas
lahf
push
ret
stos
xor
in
push
aaa
imul
pop
cmp
lret
cmp
mov
pushf
jge
rolb
pop
hlt
cltd
sahf
or
pop
out
jl
sub
test
mov
repnz
push
sub
fidivrs
jbe
push
stos
test
mov
outsb
ss
jno
dec
pop
iret
aam
sbb
xor
decl
clc
xor
xchg
jl
cmp
xor
je
leave
inc
rolb
jne
test
jb
sub
clc
add
adc
mov
imul
jl
mov
mov
insl
push
pop
cmpsl
pop
data16
fs
shlb
cmp
mov
dec
sbb
jg
movsb
lods
xor
add
cmp
ss
pop
insb
rcl
dec
into
sti
nop
or
lahf
nop
cmpsb
mov
out
sbb
or
orl
test
call
and
movsb
or
xchg
out
jp
ss
fwait
stos
mov
mov
lcall
pop
sub
fsubs
pushf
roll
dec
jno
mov
mov
push
dec
push
stos
pushl
sahf
lds
push
mov
pop
popa
xchg
sbb
lods
lods
call
cltd
pusha
xor
jge
inc
jp
sub
push
and
scas
mov
jg
adc
jb
pop
mov
notb
scas
aad
and
mov
pushf
mov
das
shrb
dec
dec
leave
xlat
push
cmp
mov
dec
stc
in
in
fs
imull
frstor
lret
jne
sahf
pushf
mov
inc
and
fidivrs
add
inc
test
or
in
mov
mov
cld
ret
mov
dec
adc
inc
mov
inc
mov
xchg
sti
xchg
cmp
xchg
sub
dec
aaa
or
inc
lcall
pop
pop
cmp
cmp
mov
xchg
add
sub
push
pop
in
popa
xchg
lods
js
mov
cmp
int3
jns
and
mov
jge
xchg
loope
jle
testb
mov
into
mov
ja
jge
lods
pop
cmp
andl
in
xchg
mov
pop
pop
add
or
xor
mov
ror
insb
jge
mov
push
mov
jge
std
ljmp
xor
xor
daa
cmp
or
cmc
add
adc
scas
stc
int3
in
add
not
test
cwtl
imul
iret
and
mov
stos
sbb
dec
out
addr16
in
cmc
mov
ja
jns
arpl
ficoml
xor
nop
add
dec
fnstenv
out
mov
data16
into
sub
xchg
in
aam
sub
cmp
jnp
sub
testb
dec
jecxz
fst
push
mov
jae
jge
negl
insb
xchg
aaa
cmp
popa
dec
push
cmp
out
popf
lods
fstpl
sahf
dec
push
sub
movsb
xor
in
enter
cmp
cli
mov
addr16
jmp
and
lret
mov
jl
sub
push
push
imul
and
jecxz
cpuid
sub
cmp
insl
fimull
les
dec
or
popf
mov
push
mov
xor
int3
mov
arpl
xor
sarb
std
int
cmpsb
jmp
or
mov
lea
pushf
imul
sete
iret
fbstp
shrl
test
pop
aaa
dec
mov
enter
arpl
or
push
stos
mov
pop
loopne
mov
insl
imul
lods
inc
mov
scas
mov
sahf
add
lock
push
outsb
mov
jmp
inc
jmp
gs
adc
outsl
test
cmpsl
rcr
xchg
stos
xchg
shll
mov
cmp
xor
es
mov
ret
sub
daa
cmp
out
mov
xlat
fnstsw
dec
test
call
xchg
insl
lret
dec
or
xorl
sbb
nop
xor
inc
fwait
and
or
sarb
cmp
mov
or
inc
cli
hlt
frstor
fnstenv
xor
jmp
sbb
mov
mov
mov
pop
loop
lods
and
push
or
xlat
mov
test
sti
bound
test
cmp
into
cmp
jnp
xchg
mov
lret
sarl
adc
cmc
popa
int
jne
fsts
lock
mov
stos
arpl
setae
pop
mov
popf
lds
shrb
adc
mov
jb
fildll
fcoms
jp
insb
push
test
pushf
xor
repz
and
lods
dec
jo
sbb
xor
loop
in
scas
add
inc
stos
pop
jg
sub
lods
mov
jo
lret
add
inc
sbb
sbb
fwait
adc
test
movb
cmpsl
pop
aam
add
xchg
pusha
dec
in
mov
out
ret
outsb
lret
cmp
test
sbb
jle
jp
xorb
movsl
or
cli
mov
das
lret
in
aad
add
cltd
fld
lock
push
mov
add
xchg
repnz
outsb
adc
push
pusha
into
sahf
xchg
aad
in
inc
xchg
mov
jp
push
pop
xchg
adc
pop
cs
fimull
int3
inc
dec
inc
sbb
push
sarl
add
inc
fnstsw
inc
enter
pop
xor
test
fnsave
nop
jmp
sbb
aam
fistl
arpl
fstpt
sarb
dec
sub
arpl
push
jp
jae
fistpl
cmp
outsl
push
push
lods
in
pop
repz
fcomi
dec
ja
js
and
arpl
push
repz
iret
mov
mov
in
movsl
cmp
ret
rorl
in
negl
mulb
shrl
xor
mov
dec
fcoml
clc
stos
popf
push
mov
ret
sub
push
mov
js
xor
cmp
mov
push
jl
bswap
pop
lock
or
daa
push
lahf
and
add
sub
arpl
mov
out
pop
les
inc
inc
xor
or
xor
jo
pop
push
fwait
sbb
or
fcoml
push
nopl
push
in
in
adc
mov
sti
lcall
pop
add
dec
psubd
lahf
adc
out
mov
push
jae
dec
pop
lea
cmpsl
push
mov
sti
mov
xchg
mov
add
push
fnstenv
mov
addr16
push
mov
push
ret
or
out
test
ds
xlat
xor
adc
push
inc
sub
pop
fwait
scas
xlat
addr16
cltd
pop
jns
pop
mov
fisttps
push
lods
pop
fwait
test
jne
xchg
push
mov
test
loopne
inc
push
dec
mov
mov
mov
mov
incb
mov
hlt
and
xchg
cltd
mov
icebp
movsb
sub
loopne
iret
inc
lcall
cltd
in
fcoml
cmp
and
pop
aad
pushf
fcom
and
xchg
cmc
cmpsl
fidivs
adc
mov
jns
or
cld
pop
adc
test
mov
cmp
mov
sub
mov
les
lret
dec
sbb
sub
leave
fimuls
dec
xor
cwtl
loop
push
outsl
hlt
mov
mov
std
subl
lea
imul
gs
loope
out
bound
sub
adc
insb
nop
scas
and
rcll
daa
ds
mov
mov
push
push
xchg
int3
mov
add
imul
cmp
outsb
pusha
push
lret
and
jo
dec
out
lret
pop
lcall
push
test
cld
js
pop
push
jnp
pop
and
or
push
sbb
add
add
fmul
fmuls
mov
push
fmull
aas
std
mov
fildl
inc
dec
mov
xor
adc
and
popa
stos
jbe
pop
aaa
dec
arpl
mov
pop
cltd
xchg
and
jl
shlb
fcoml
cmp
xor
or
and
ljmp
loope
cmp
and
outsb
imul
clc
iret
gs
mov
nop
loop
andb
or
fstpl
loopne
and
lret
data16
in
in
dec
pop
aad
cltd
mov
xor
mov
loope
xor
pusha
xchg
icebp
cmp
into
or
repz
jle
lcall
loope
pop
xchg
das
popf
scas
mov
loope,pt
xorb
cs
je
shll
adc
inc
jo
negb
iret
jle
lret
movsl
lock
mov
in
les
popa
jne
cld
insl
negl
add
cmp
fcoms
sbb
fstpt
mov
pusha
out
sbb
xchg
repnz
mov
sahf
fimull
push
mov
scas
aad
sti
mov
repz
clc
cmpsl
mov
sarl
mov
dec
std
jne
mov
push
loope
daa
inc
test
push
mov
sub
cmpsl
pop
pop
xor
mov
test
fsts
cs
cmp
push
decl
lret
sub
sbb
xchg
mov
and
jecxz
cwtl
jmp
pop
cmp
push
sub
adc
or
push
jge
pop
negl
les
xor
dec
sub
or
jae
int3
adc
push
push
jnp
leave
icebp
or
mov
add
push
repz
mov
jp
and
addr16
addb
push
icebp
fwait
sahf
jno,pn
xor
stos
add
sub
aas
pop
cmp
xchg
pop
push
pop
or
or
loop
mov
pop
outsb
pop
movsl
daa
or
sub
sbb
ret
jb
jl
inc
and
and
and
loope
lcall
jle
xor
mov
lcall
mov
cltd
xchg
inc
push
fiadds
insl
jp
in
jl
jecxz
or
or
lds
or
fistps
int3
scas
sbb
xor
mov
aas
xchg
adc
cmp
dec
int3
and
movsl
sbb
ds
dec
loope
inc
xchg
cmp
push
popa
dec
pop
xchg
push
mov
imul
nop
sar
mov
cmp
mov
xor
jp
cmp
enter
mov
or
fcompl
jns
xor
test
aas
push
decb
nop
daa
jbe
ss
inc
shrb
aaa
mov
xor
xor
adc
icebp
fs
and
insl
push
cli
bound
pop
mov
movsb
or
push
xchg
pop
cmc
enter
popf
or
out
sbb
rorl
or
jp
mov
jg
push
cli
adc
sub
xor
cwtl
jno
jnp
fldt
sbb
movsb
les
testl
jb
cmp
xor
push
sbbb
popf
adc
es
xor
mov
into
ror
jno
mov
enter
pusha
sahf
rcr
je
pop
add
adc
insl
adc
jecxz
jno
loopne
jno
inc
cmpsb
add
fs
sbb
popf
xor
lods
jp
ret
xchg
rcll
cmp
inc
mov
and
outsl
nop
push
xchg
fldt
js
mov
mov
test
push
mov
fstpl
lock
out
flds
adc
fsts
sub
cmc
lods
mov
popa
xchg
mov
xor
mov
adc
lcall
cmp
ja
stc
inc
xlat
add
xor
jnp
jns
jle
xchg
scas
sbb
dec
scas
inc
or
outsl
jecxz
or
dec
jle
pusha
mov
mov
cmpsl
xor
popa
inc
inc
pop
aas
inc
fsubp
push
inc
mov
xchg
adc
sbbl
xchg
mov
and
addl
sbb
stos
or
test
neg
ja
test
sbbb
add
mov
inc
or
sbb
sub
cmp
int3
cmc
fsub
in
aad
lds
mov
gs
push
jl
or
sbb
sub
cmp
int3
cmc
fsub
in
aad
lds
mov
in
aad
inc
mov
mov
in
aad
lds
mov
gs
push
jl
or
sbb
sub
cmp
int3
cmc
fmull
aad
mov
cmp
int3
jp
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
imul
mov
xchg
dec
mov
jmp
sti
push
lret
stos
inc
mov
jbe
xchg
dec
cmpsb
pop
mov
cmp
or
sbb
jmp
sti
push
mov
inc
mov
jbe
xchg
dec
cmpsb
pop
mov
cmp
or
sbb
jmp
sti
dec
mov
adc
xor
add
jbe
xchg
cmp
sub
add
pop
and
adc
add
mov
inc
stos
mov
in
fstpt
mov
ds
sbb
es
aaa
push
xchg
mov
push
rcr
jne
sub
loope
ja
xchg
call
or
gs
cltd
pop
ja
jns
xchg
cmp
sub
cmc
cmpsb
jmp
jmp
inc
fdivr
leave
push
adc
cltd
push
xchg
sbb
push
jo
dec
nop
xor
or
sbb
fcmovnu
push
add
imul
xchg
add
or
mov
aad
sub
xchg
pop
xor
sahf
ss
mov
repz
xchg
dec
cmpsb
pop
mov
cmp
or
sbb
jmp
sti
push
lret
stos
inc
mov
xor
loopne
lock
test
pop
xchg
dec
mov
into
sub
das
iret
in
adc
or
sbb
push
clc
or
stc
jp
jo
pop
into
sub
cmp
adc
loop
rcrb
sub
sbb
jmp
sti
push
lret
stos
inc
mov
jbe
xchg
dec
cmpsb
pop
mov
cmp
or
sbb
jmp
sti
push
lret
stos
inc
mov
jbe
xchg
xor
jg
icebp
add
mov
jge
jo
push
add
or
cmpsl
dec
adc
push
lret
insb
cmp
pop
or
jle
inc
test
xchg
repz
pop
inc
fldl
xor
push
xchg
or
push
pop
sbb
push
xchg
jmp
add
adc
xchg
mov
test
repz
hlt
out
call
es
pushf
fcoms
js
in
pop
es
stos
mov
cltd
fsubrs
mov
cmp
aaa
cmp
dec
das
imul
pop
jmp
icebp
cmp
or
add
aam
sbb
aad
popa
xchg
popf
sbb
lds
sub
bound
fs
orl
or
inc
pushf
pop
in
add
sbb
aam
mov
stos
cld
xchg
adc
frstor
adc
jg
scas
js
cmpsl
mov
mov
xor
or
rcr
cld
ds
pop
xchg
pop
mov
inc
subl
add
vpcomub
les
flds
loope
insl
and
pop
xchg
adc
mov
xchg
sbb
pusha
push
out
pop
lea
push
xor
mov
sub
ret
mov
dec
inc
daa
mov
cmpsb
shll
mov
xor
mov
in
out
dec
out
popa
test
daa
xchg
sbb
sub
add
insl
add
add
das
in
mov
jg
lds
bnd
fucom
iret
popa
xchg
cmp
ret
mov
push
ds
adc
lret
rorb
mov
dec
sbb
fsubrl
adc
or
incb
push
cmc
jp
iret
repz
out
mov
mov
dec
add
add
and
push
repz
rolb
lahf
push
mov
insb
cmpsb
sbb
dec
cmp
lds
notb
hlt
adc
mov
jmp
clc
sti
mov
movsl
divb
das
jmp
pushf
aad
popf
sbb
test
js
mov
xchg
xor
sbb
lahf
pushf
ljmp
fbld
sub
in
jmp
jp
sub
cltd
add
adc
into
pop
fidivrs
je
std
inc
jmp
mov
xor
mov
out
mov
cmc
mov
xlat
fdivr
add
xchg
fcompl
testl
mov
push
jno
jne
push
or
jb
add
mov
dec
adc
push
cmc
loopne
mov
aas
sub
mov
jp
adc
das
inc
stos
or
xlat
or
js
aad
sbb
gs
fcoms
or
clc
lock
cli
mov
outsb
lea
mov
lods
inc
xchg
cmp
mov
jne
mov
xchg
cli
xorl
lods
insl
fwait
add
cmp
sub
out
jb
cmp
mov
jmp
sbb
aam
lahf
iret
ljmp
call
andb
adc
sbb
mov
dec
sahf
mov
xlat
ret
out
fstpl
int
inc
pop
jl
notb
testl
aaa
fnsave
xor
daa
lock
xchg
jns
shrb
ljmp
xor
pop
xorb
fwait
jae
pop
xchg
push
gs
jns
mov
fistl
mov
scas
push
test
mov
dec
or
push
loope
xchg
in
dec
sbb
jns
cmp
out
sahf
in
jl
push
jl
jge
clc
or
adc
adc
mov
hlt
inc
push
int3
sbb
pop
cmp
add
out
repz
and
outsb
and
int3
cmc
test
mov
in
testl
pop
ds
xor
insl
inc
xchg
lods
repnz
out
cmp
icebp
push
jp
in
mov
ja
cmc
jbe
cmp
jns
xchg
inc
shrl
mov
cmpsb
push
aaa
fisubl
fstpt
pop
lods
xchg
sub
cmp
cltd
sub
outsl
mov
outsl
pop
pop
lcall
mov
xorl
sbb
into
xor
test
dec
lret
and
sbb
dec
stc
shrb
daa
add
iret
enter
data16
cmpsb
and
pop
into
ljmp
inc
xor
xor
and
add
add
jge
bound
ror
ja
movsl
mov
negl
icebp
xlat
pop
imul
lahf
pop
sub
mov
sub
in
jne
cltd
lds
dec
add
pinsrw
sub
push
in
dec
setne
xorb
sahf
imul
imul
repz
cmp
mov
popa
dec
sahf
lds
stc
insb
or
xor
daa
fidivrl
lods
std
std
adcl
sbb
shrb
jnp
sti
aad
stc
mov
sbb
jecxz
adcl
lods
mov
sbb
lock
repnz
pop
and
lahf
pop
adc
hlt
dec
jo
xchg
push
out
pop
imul
cmp
leave
in
nop
dec
ds
in
or
mov
imul
movsb
cmp
icebp
mov
jecxz
and
shll
mov
inc
repz
adc
jl
cwtl
scas
fisubl
dec
leave
mov
adc
fmul
cmc
fs
jns
pushw
nop
sub
lds
ret
outsl
ret
ss
jl
push
mov
cmpsl
pop
xchg
arpl
push
cwtl
addb
xchg
sub
fcomi
lods
push
push
inc
or
test
jle
lret
sbbb
sbb
mov
jne
dec
gs
xorb
inc
stc
push
pushf
test
into
push
sahf
js
pusha
mov
lcall
mov
in
mov
mov
or
rclb
mov
test
cltd
dec
test
lods
lds
push
fnstcw
out
add
shlb
sub
push
fucomi
daa
mov
mov
push
dec
sbb
push
sub
in
cld
cmpsb
xchg
dec
ljmp
nop
ret
inc
mov
or
pop
cmpsb
out
lods
jb
or
mov
or
push
cmpsl
dec
sub
clc
nop
pusha
popf
inc
or
scas
dec
push
cmp
inc
pop
dec
mov
loop
sub
mov
push
dec
pop
pop
adc
ss
ficomps
repz
add
cmp
mov
mov
fwait
xorl
lcall
popa
int
pavgw
or
aas
xchg
add
lea
mov
xchg
ljmp
in
mov
lods
jmp
dec
xchg
sbb
insl
aam
mov
stos
setge
mov
aaa
mov
ljmp
enter
je
inc
mov
out
pop
pop
lcall
xchg
lods
push
adc
daa
out
shlb
inc
mov
sarl
inc
icebp
inc
pop
sub
cltd
enter
mov
and
enter
adc
sub
mov
and
push
fdivr
repnz
adcb
aam
cmp
xchg
lret
into
jg
in
aaa
div
loope
test
lret
in
pusha
push
mov
or
insl
adc
sbb
insl
fisttpll
movsl
push
jae
mov
jno
and
push
negb
bound
sub
out
cs
dec
lahf
jmp
loop
mov
outsl
jg
outsb
insb
push
jmp
adc
push
push
lock
jp
bound
sub
sub
ljmp
push
pop
imull
jbe
les
mov
push
adc
push
add
loope
icebp
aam
loope
fisttpl
sahf
add
mov
cmp
and
cltd
cs
fwait
pmaxsw
sbb
cmpl
xor
push
or
bts
movsl
dec
sub
fisubrs
dec
cmp
in
jg
mov
cs
dec
das
addr16
xchg
push
loope
cmp
fwait
xor
mov
out
cmp
xchg
scas
iret
jae
pushf
cmp
adcb
and
sbb
jnp
aas
aas
cli
xor
lret
adc
in
push
mov
adc
insb
je
inc
mov
es
pop
aam
mov
mov
call
js
stos
bound
dec
lret
xchg
xor
outsl
addr16
sbb
cmpl
or
divb
rorb
loope
xchg
popa
xchg
lret
xlat
jo
lea
lea
xchg
popa
mov
out
insl
xchg
ja
and
add
xchg
repz
pop
out
xor
cld
repnz
push
and
xchg
in
jmp
fcomp
mull
popf
add
mov
mov
mov
and
cmp
inc
arpl
cmc
cmp
mov
mov
aas
mov
stos
jnp
test
lcall
mov
cltd
pop
lods
sub
mov
push
cmp
fwait
ja
push
es
dec
cmc
shr
pop
cmp
jg
xor
jp
movsl
jb
int
in
pusha
std
pop
adc
dec
add
divb
push
mov
mov
fwait
data16
jo
std
mov
and
mov
xchg
sahf
jg
lods
lret
lcall
adc
add
jle
jmp
popl
mov
sbb
mov
inc
out
adc
sub
cmpsl
pushf
mov
xchg
and
fadds
mov
stos
sti
lret
xor
jo
jmp
sti
es
ret
ror
xchg
push
push
cmp
int
add
out
pop
outsl
ret
je
test
jns
dec
mov
xchg
mov
dec
mov
cmp
lcall
out
push
cmp
adcl
cmp
dec
into
xor
xor
xor
pop
shrb
pop
sarl
adc
cmp
ljmp
sub
flds
jl
adc
pop
mulb
pop
addr16
lods
sarl
adc
fsts
push
xchg
test
or
sub
mov
or
ror
and
or
loope
pop
pop
pop
push
sbb
fistpll
lods
iret
jle
in
or
cmp
scas
imul
push
inc
insb
cmp
jbe
xorl
enter
mov
dec
in
sub
pavgw
pop
stos
mov
or
or
push
popa
mov
and
add
sbb
cltd
ret
cwtl
sbb
mov
fcoml
adc
mov
outsl
add
mov
mov
jns
lods
ja
xchg
mov
jae
cmp
adc
cmpsl
test
jp
xor
xorb
xchg
not
nop
aaa
or
inc
iret
push
in
jg
mov
shlb
dec
adc
in
pop
scas
dec
insb
aad
sahf
aad
pusha
mov
notb
dec
cmpsl
in
int3
inc
gs
pop
push
push
test
aad
adc
dec
insb
add
inc
jo
cltd
imul
int3
dec
or
sarl
inc
fstpt
out
adc
xor
pop
pop
sbb
pop
repz
xor
xchg
xlat
vsubps
add
add
cld
mov
and
dec
adc
xchg
adc
push
and
cmp
jl
cld
add
mov
xchg
cmpsl
sbb
cmpsl
sbb
cmpb
xor
pop
filds
fldcw
fcmovnbe
mov
mov
cs
or
adc
nop
sbb
and
jp
adcb
or
fadd
mov
mov
cmp
pusha
inc
push
or
mov
xor
fnstsw
push
repz
test
lea
scas
mov
and
mov
xor
loop
faddp
mov
pop
cmc
mov
xor
pop
lret
inc
sub
test
mov
pause
adc
testb
rcrl
clc
mov
inc
inc
hlt
jbe
insb
mov
xor
js
xchg
inc
pop
aad
jmp
pushf
in
cld
fs
fisubl
jae
sub
mov
sub
cmpsl
out
loope
out
jo
clc
cltd
pop
dec
fsubrl
add
in
aas
gs
jl
fsts
lahf
add
mov
lret
stos
jae
mov
pushf
lods
rcrb
push
inc
mov
lcall
cmp
int3
sub
arpl
pusha
and
mov
movsl
outsb
adc
pop
inc
mov
lret
movsb
gs
or
in
mov
loopne
jmp
xchg
cmp
shrl
jl
push
fsubrs
cmp
in
mov
and
sbb
mov
sbb
sub
rol
aas
sbb
add
adc
jb
jbe
in
cltd
repz
daa
cmp
inc
mov
std
push
int3
mov
xor
int
aas
test
popa
pushf
push
cmc
scas
xor
incl
test
push
fistps
push
jecxz
les
cmp
mov
jl
dec
adc
pusha
dec
idivb
int3
nop
add
add
push
mov
in
les
mov
jne
dec
mov
xchg
pop
mov
dec
shl
xor
cmp
push
mov
dec
and
ds
pop
add
sub
mov
mov
into
sub
in
subl
je
daa
push
and
cmpl
cmp
jg
ljmp
jl
and
ror
lods
inc
outsl
pop
jns
inc
aam
sahf
cmp
adc
imulb
idiv
and
mov
xorb
int3
xchg
lret
popa
and
leave
mov
cmp
pop
es
dec
jnp
out
das
jg
mov
inc
hlt
rcll
mov
dec
aad
cmp
dec
cmpsl
ret
icebp
mov
xlat
xchg
popa
push
cmc
ficoms
sbb
xchg
pusha
inc
ss
push
scas
push
cmc
xorl
pop
xor
hlt
mov
out
cmpsl
movsb
mov
call
nop
mov
lret
dec
frstor
jb
xor
shl
adc
pushf
pop
dec
mov
enter
mov
dec
bound
loop
lds
jg
push
movl
cld
in
pop
sbb
or
daa
roll
push
dec
ja
ja
or
pusha
pushf
insl
or
shlb
push
addb
or
lret
mov
jne
test
loope
xlat
dec
lds
push
push
cmpsl
jae
addr16
fwait
inc
insb
mov
mov
mov
fldcw
jmp
loop
test
push
add
imul
fs
inc
xchg
jecxz
sbb
repnz
push
adc
pushl
insl
popa
and
cmp
out
jle
jb
mov
sub
jmp
andb
fucomip
lret
in
fiaddl
mov
mov
mov
int3
andb
add
add
push
mov
test
shll
pop
dec
or
jno
fstps
jb
pop
imul
mov
inc
dec
stos
nop
pushf
push
test
jecxz
andb
shlb
pop
and
fs
jp
jb
fldt
mov
sarb
mov
pop
mov
out
sbb
jmp
cli
push
mov
jp
add
call
push
in
or
arpl
inc
jno
dec
testb
pop
jge
rcr
inc
arpl
lds
lret
mov
mov
je
mov
nop
loope
inc
dec
sub
je
mov
out
les
mov
dec
xchg
std
pop
dec
sub
mov
mov
lds
push
mov
fdivrl
rorl
push
rclb
mov
rcl
pop
in
xchg
cmp
outsb
sub
xor
imul
cmp
add
repnz
sub
sbb
sbb
jnp
imul
push
dec
aam
push
dec
test
jecxz
or
shlb
dec
or
pop
mov
enter
pop
out
rcrb
mov
mov
int
je
sub
add
repz
ret
pop
das
mov
subb
pushl
add
imul
add
fsubl
dec
and
int3
xchg
adc
popa
add
mov
inc
sbb
insb
mov
mov
mov
adc
cmp
pop
jle
add
xor
mov
pushf
in
dec
stc
mov
mov
jnp
js
mov
sub
cmp
sbb
sbbb
adc
fistpl
into
repz
lcall
xchg
push
mov
icebp
aaa
out
xor
dec
pop
jmp
adc
push
mov
xor
fmuls
and
pop
jns
push
jb
cli
xor
cmp
mov
leave
push
aaa
out
repz
enter
je
mov
xchg
cmc
mov
dec
cmp
push
add
cmp
cltd
push
push
add
sub
cmp
jbe
inc
xchg
shl
mov
aad
scas
dec
cmpb
mov
faddl
test
cmp
aas
pop
loope
dec
push
test
xchg
pop
xor
pop
dec
or
adc
daa
sbb
sarl
xchg
or
js
adc
es
out
mov
mov
mov
idivl
mov
jo
mov
das
jmp
jns
jo
enter
mov
in
mov
dec
inc
push
xchg
push
mov
icebp
mov
lods
pop
pop
push
jg
dec
mov
in
decb
mov
inc
das
mov
je
sub
hlt
mov
mov
das
jae
push
mov
xchg
xchg
push
scas
add
cmp
push
andnps
pop
add
or
ljmp
mov
repnz
or
mov
rolb
mov
iret
cmp
mov
jnp,pt
or
fisttps
mov
inc
inc
stos
push
das
mov
add
pop
add
lret
inc
jns
mov
xor
and
add
jns
mov
out
dec
xor
mov
jbe
sahf
dec
movsl
pop
xlat
lcall
or
inc
mov
push
test
push
push
mov
stos
ret
repnz
pop
orb
jmp
or
adc
lods
xchg
mov
xlat
loope
jae
scas
or
mov
ret
mov
lea
add
and
add
scas
xchg
sbb
mov
cmp
sbbl
xchg
mov
mov
cmc
movswl
pop
sub
imul
mov
outsb
aas
push
les
das
xchg
fidivrs
or
add
hlt
jle
inc
mov
pop
dec
aaa
mov
sub
push
andnps
xchg
adc
pop
xor
jecxz
pop
testb
cmp
test
sub
lcall
arpl
loopne
push
lahf
sbb
das
pop
shlb
push
xor
mov
test
xchg
push
outsb
stc
ret
dec
daa
lret
mov
std
push
pop
dec
mov
js
add
and
in
leave
fisubrl
pop
sbb
push
push
or
push
flds
inc
mov
aam
inc
add
lock
pop
sub
movsl
xor
adc
add
inc
nop
mov
cmp
jl
jge
in
and
test
jns
inc
out
addb
pushf
mov
jb
call
aas
rorb
xchg
push
addr16
sub
xor
sub
ror
in
or
ds
push
mov
sahf
push
add
push
rclb
jge
jmp
lods
ret
sub
sub
add
test
data16
jmp
ficomps
lods
loopne
data16
jl
ffreep
push
ss
in
or
add
jp
and
out
add
xor
fucomi
cmp
cmp
jno
lcall
jl
adc
add
jns
push
cmp
loopne
int3
pop
mov
cmp
xchg
rcll
mov
dec
sarl
jg
es
inc
cltd
das
add
fidivs
int
dec
push
lahf
inc
and
mov
mov
mov
loop
ja
icebp
cltd
cmp
out
lock
mov
mov
sbb
stos
push
testl
lds
jmp
mov
jmp
sbb
lret
push
out
cwtl
in
mov
mov
mov
cmp
ds
xlat
xchg
lcall
cli
or
xor
stc
cli
xlat
mov
rcrl
xchg
cld
shll
cmp
jle
adc
dec
push
stos
push
out
lods
xchg
mov
insl
mov
xor
xchg
lods
xchg
enter
push
or
gs
fsubl
sub
cltd
pop
hlt
add
test
mov
mov
jp
adcb
sub
xor
mov
adc
xchg
push
enter
or
rcrb
cmp
bound
scas
or
jns
add
popa
int3
fisubrs
sarb
pop
push
sbb
sbb
fs
addr16
xor
aam
cmp
les
mov
mov
lods
adc
mov
in
push
enter
cmpsb
mov
push
push
pextrw
jno
jl
int3
clc
mov
mov
rclb
dec
inc
mov
lcall
dec
inc
mov
inc
andl
mov
xchg
dec
jge
mov
or
mov
shll
pop
ja
ret
cltd
mov
int3
xchg
cmc
inc
pmulhuw
sub
cmp
or
sbb
jmp
sti
push
lret
stos
inc
mov
jbe
xchg
dec
cmpsb
pop
mov
cmp
or
sbb
jmp
sti
push
lret
stos
inc
mov
jbe
cmpb
cmpsb
pop
mov
cmp
or
sbb
jmp
sti
pop
lret
stos
inc
mov
jbe
xchg
dec
cmpsb
pop
mov
cmp
sbb
jmp
sti
mov
fmul
xor
pop
mov
cli
mov
mov
into
dec
sbbb
push
jp
or
outsl
cmp
dec
lret
scas
jmp
cli
mov
fidivrs
or
jp
or
sbb
pop
cmp
mov
cli
mov
fidivrs
or
imul
push
cmp
int
jmp
inc
mov
lret
lret
mov
sub
testl
mov
mov
xchg
arpl
push
iret
inc
aas
movsl
shll
loope
sbb
outsb
in
and
ret
scas
fldt
dec
fwait
dec
mov
iret
or
cmp
test
mov
ficoml
sarl
or
mov
fmuls
mov
shrl
xchg
mov
outsb
dec
mov
sub
dec
aaa
jle
push
mov
jne
add
shrl
cmp
jp
pop
sub
lds
pusha
and
push
push
gs
push
jl
mov
mov
pop
imul
jle
sbb
sub
mov
mov
cli
mov
fidivrs
cs
jp
or
outsb
sub
or
fbstp
in
mov
call
jle
or
inc
sub
sub
mov
out
mov
ret
pop
aaa
pop
adc
pop
inc
sbb
jp
and
std
mov
lret
int3
lcall
ds
cs
jp
or
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
cs
jp
or
outsb
sub
dec
lret
xchg
test
stc
or
sub
add
jmp
sbb
sahf
aad
scas
jg
push
fistpll
ds
cmpsb
push
cmp
data16
sbb
rcrb
fndisi(8087
std
sub
pop
xor
stc
xchg
lahf
inc
int
mov
inc
adc
jl
icebp
add
mov
xor
jbe
test
es
jmp
sub
push
pop
outsb
enter
cli
fldt
adc
mov
lret
cmp
add
push
ds
and
fwait
jne
xor
stc
hlt
mov
lret
push
jne
clc
add
or
inc
loop
cld
sub
test
lcall
outsl
add
das
xor
and
scas
mov
sti
cmp
mov
add
movsl
das
jnp
push
hlt
fdivrs
cli
mov
imulb
cmp
ficoml
fcoms
pop
fildl
lods
xor
mov
jp
arpl
jnp
xchg
adc
cli
or
xchg
or
test
aas
xorb
aad
leave
addr16
push
mov
and
out
in
gs
pop
repnz
xchg
psraw
ficoml
mov
and
push
loopne
imul
pop
push
lds
push
xor
loop
out
pop
mov
testb
xor
rcr
stc
mov
fcom
sub
stc
jg
xchg
loope
dec
mov
mov
daa
cmp
dec
pop
pop
jo
data16
stos
lods
or
cmp
enter
pop
cmpsl
fwait
push
mov
stc
cmpsl
sbb
out
mov
xor
xchg
test
ret
daa
or
dec
ficomps
das
sub
fucom
jg
out
dec
jbe
mov
frstor
jae
lods
outsl
es
or
outsb
int3
xchg
mov
das
enter
jbe
fimull
xor
mov
fs
xor
cmp
icebp
arpl
lea
or
jl
xchg
xchg
sbb
repnz
call
ja
hlt
dec
push
call
outsb
les
insb
xor
add
pop
push
xchg
jmp
fs
xchg
ret
and
pop
and
shrl
movsb
dec
repz
fbld
in
aam
aam
testb
stos
in
rorl
xchg
xlat
imul
xchg
std
xor
loop
repz
dec
adc
jne
xchg
xor
int
pop
nop
push
dec
push
cmpsl
aas
cmp
lcall
xchg
add
inc
jno
mov
push
mov
or
sbb
mov
mov
stc
push
shll
iret
dec
cmpsl
jecxz
nop
push
jmp
pop
sbb
cmpsb
inc
pushf
scas
xchg
adc
inc
cmp
mov
xchg
xorl
loope
pop
jmp
inc
shr
sarb
cmc
mov
lods
inc
push
loope
mov
add
pop
xchg
and
pop
ja
xor
and
in
mov
push
jne,pt
add
push
scas
outsl
lock
fsubs
test
in
xor
mov
cmp
scas
repnz
cmp
xchg
loopne
lret
out
fisubl
jnp
nop
dec
loop
test
push
inc
push
jmp
cs
mov
add
mov
loope
sub
or
mov
mov
cmp
jmp
sub
xor
push
aas
aas
aam
inc
mov
mov
test
add
xchg
mov
repz
rcr
out
shll
mov
mov
mov
push
xorb
std
inc
sbb
imul
dec
outsb
jo
fmulp
ds
push
clc
xlat
leave
out
jg
jp
mov
cmpsl
sub
shrb
rorl
ret
lret
mov
enter
xchg
imul
mov
cmpsl
jno
or
mov
jo
add
xor
out
jmp
sub
sub
pop
ds
andl
mov
cmp
inc
pop
sbb
pop
arpl
and
popa
test
je
pop
mull
pop
test
push
inc
mov
stc
jo
clc
adc
mov
cmp
out
mov
imul
adc
js
inc
test
or
cltd
pop
push
gs
outsl
mov
cmp
lock
fyl2xp1
or
mov
insl
jle
arpl
add
mov
scas
sub
ffree
xchg
lods
and
ret
mov
js
cmp
je
xor
jmp
insb
repz
outsb
sbb
or
in
lahf
add
lea
push
sub
xchg
pop
sbb
jae
xchg
cmpsl
pop
xor
cmpsb
in
jae
mov
sub
xor
in
iret
mov
cmp
cld
je
adc
adc
insl
mov
test
and
pop
outsl
jle
push
push
cli
pusha
les
jne
leave
mov
adc
ja
lret
stos
mov
cmp
cmp
mov
mov
adc
xchg
mov
mov
pop
popf
mov
pop
and
mov
sub
adc
mov
dec
cmp
test
jo
and
int
mov
and
imul
sbb
inc
adc
andb
mov
decb
clc
and
dec
mov
movsb
inc
inc
adc
sbb
jp
push
ret
leave
insb
into
incl
xor
movsl
js
out
pop
dec
jg
pop
and
ljmp
dec
push
mov
cltd
sub
mov
jns
cmpsb
jp
cmp
fld
outsb
and
jno
adc
dec
xchg
lret
rcl
iret
fucomi
sub
testl
je
or
sub
mov
sbb
mov
mov
adc
sub
add
cli
add
push
mov
and
mov
les
push
lret
cld
jbe
outsl
jo
lret
lea
push
push
std
and
test
jnp
xor
xor
outsb
inc
fs
push
mov
lea
sbb
lds
and
lea
and
mov
in
mulb
imul
pop
test
xor
cli
push
or
int
dec
adc
cmp
stos
stos
lret
jl
jnp
gs
mov
fisttpl
fcomps
test
jl
inc
aam
rorl
and
mov
fcoms
iret
pop
imul
bound
in
mov
out
mov
pop
xchg
and
fdivs
fmuls
push
ret
sbb
pusha
cmc
stc
jbe
clc
jge
mov
scas
jbe
mov
cwtl
sahf
xchg
fwait
pusha
jecxz
sbb
pop
inc
or
orl
lods
lods
pusha
test
outsb
inc
ret
dec
mov
scas
ss
add
cmp
xor
dec
rolb
pop
fwait
into
and
xor
mov
mov
mov
lods
push
dec
jne
leave
sbb
push
ljmp
sahf
out
mov
sbb
xchg
mov
push
or
push
mov
dec
lahf
jecxz
shlb
sub
les
and
xor
adc
movsb
cmp
inc
mov
push
pop
ret
pushf
nop
mov
aad
push
shrl
jno
rolb
jo
push
adc
pusha
out
cli
jp
int
mov
cmp
popa
add
xor
push
lcall
in
adc
into
push
push
nop
rol
push
mov
mov
push
or
mov
aas
cmp
pusha
push
mov
or
movsl
pop
add
je
mov
gs
arpl
rcl
rcr
mov
aaa
aam
movsb
lcall
insb
sbb
xchg
and
ret
dec
aaa
mov
pop
jno
popa
lret
mov
cmp
lock
and
xchg
xor
stc
add
mov
mov
test
cwtl
out
lds
push
xchg
jnp
add
jp
addr16
and
mov
out
and
mov
push
and
pop
jnp
push
mov
cmp
and
push
repz
xchg
mov
add
hlt
mov
test
mov
jnp
adc
add
icebp
dec
sbb
cmp
decl
mov
lret
inc
push
mov
dec
sbb
pop
sbb
sti
lcall
into
pusha
cltd
fsubrs
push
cmp
lahf
adc
fldcw
jns
xor
cltd
sbb
and
scas
xor
pop
mov
inc
dec
dec
mov
xor
or
arpl
sbb
popf
imul
aad
xchg
mov
add
mov
xchg
sub
je
sti
mov
and
sbb
js
fs
enter
stc
jmp
mov
fisttps
or
stos
inc
jne
and
or
adc
push
xchg
sub
add
sub
ret
mov
push
stc
mov
call
sbb
es
enter
cmp
push
outsb
adc
popf
out
ss
pop
and
iret
shrl
xchg
mov
push
push
arpl
lds
and
sbb
test
jne
out
shrl
sub
jae
mov
and
inc
imull
add
jns
xchg
mov
cli
or
xor
pop
adc
hlt
pop
inc
data16
mov
outsl
cmpsb
imul
cli
and
repz
xchg
jmp
sahf
mov
out
ja
jp
xor
dec
fdivrs
push
cmp
gs
sti
mov
xchg
and
adc
push
rolb
cli
mov
push
adc
les
dec
dec
lcall
aad
xchg
add
sbb
imul
sbb
sub
dec
adc
iret
or
or
dec
jle
bound
outsl
int
add
and
movsb
enter
sbb
push
aaa
pmulhw
dec
cmp
mov
pop
xchg
shr
push
cmpsl
lahf
test
push
xor
lcall
push
push
and
and
cmp
mov
std
mov
pusha
mov
and
pop
mov
addb
movsb
testb
rol
mov
mov
jb
jns
jo
fidivl
dec
mov
mov
movsb
mov
xor
out
xor
ds
je
push
out
scas
fcmovbe
cmp
aas
jle
jo
shll
jns
daa
inc
call
arpl
syscall
xor
push
mov
int3
mov
adc
fsubs
fdivrl
cmp
mov
mov
je
leave
sub
jmp
jns
jp
js
ror
outsl
add
mov
push
fisubrs
out
and
mov
jns
je
loope
jne
insb
dec
or
popf
or
mov
bound
sysret
pop
sub
push
push
test
mov
out
pushf
xor
pop
lods
lock
xrelease
jg
lods
arpl
fiadds
xor
xchg
push
sub
mov
jmp
lahf
and
mov
mov
dec
xor
push
or
dec
dec
add
leave
sub
adc
andl
push
jle
adcl
lea
mov
add
imul
hlt
mov
pop
push
inc
sub
pop
shl
rcr
mov
mov
add
sbb
push
inc
xchg
jp
jne
mov
insb
jl
mov
push
jmp
cmpsl
push
rclb
adc
mov
dec
adc
mov
lret
adc
pushf
cmp
cmp
in
mov
cmp
std
push
std
push
push
mov
push
leave
cmp
arpl
xchg
xchg
add
mov
imul
int3
jecxz
sti
pop
mov
into
xor
mov
mov
lea
xchg
or
out
mov
mov
sub
jnp
lods
les
jns
xchg
loope
push
roll
mov
sub
rorl
mov
adc
rcl
movsl
sub
pop
jg
dec
sahf
sbb
jb
sar
stos
and
cmp
test
clc
cmc
ficoml
jns
mov
pop
negl
cmp
movsb
rorl
pop
test
lods
aaa
divl
jnp
cmp
icebp
je
lds
lret
xorb
inc
add
std
ficoml
sbb
sub
es
hlt
jle
jp
ljmp
and
cltd
and
shrl
and
jmp
xor
arpl
cmc
push
and
mov
mov
xlat
addr16
and
xchg
scas
aad
push
sti
leave
xor
addr16
nop
loop
in
int
push
sub
push
mov
mov
iret
xor
bound
test
ret
mov
push
adc
cmovp
adc
notb
cmp
mov
push
xchg
fcomi
inc
jo,pn
add
pop
cmp
out
and
jge
mov
fs
aaa
add
pop
jecxz
push
icebp
inc
fcomp
outsl
cmp
in
pop
mov
mov
cmp
lret
cmp
in
inc
push
shl
jecxz
sarl
jbe,pn
add
lret
mov
sub
jo
jmp
mov
cs
outsb
mov
push
xchg
lret
push
js
or
and
int3
fnstenv
ret
lea
mov
xchg
js
daa
lret
xor
ja
sub
dec
enter
mov
jg
lahf
data16
mov
in
jmp
mov
roll
sbb
xor
xchg
push
in
dec
mov
shlb
or
lods
mov
mov
ret
cmp
pop
stc
xor
sub
mov
add
or
and
jae
jnp
clc
out
insl
inc
loopne
adc
flds
adcb
aad
popa
mov
cld
xchg
adc
mov
jmp
adc
dec
sbb
rclb
out
inc
repz
and
pop
sub
jb
dec
jae
jns
imul
mov
ret
fstpt
pop
sti
pop
fistps
sub
mov
call
scas
cmpl
sahf
testl
or
fcmovnbe
xor
cmc
mov
xor
mov
xchg
rorl
add
sahf
dec
jno
inc
xchg
add
lea
mov
adc
into
adc
adcb
fnstsw
sub
loope
shlb
hlt
and
dec
aad
cmp
stos
xor
cwtl
inc
leave
sub
fnstsw
mov
mov
mov
lds
sbb
dec
pop
push
enter
enter
test
adc
sti
mov
pop
xchg
movsl
sub
add
mov
dec
xchg
inc
out
jle
repz
push
pusha
cmp
cmp
stc
push
push
aaa
in
jl
jns
cli
lcall
ss
push
nop
sub
cmp
xor
jmp
aam
mull
out
lcall
pop
xor
into
adc
mov
and
mov
shr
and
inc
sub
pusha
incl
inc
mov
push
cmp
xor
loop
stc
nop
gs
lods
dec
test
rolb
mov
jo
or
mov
jb
iret
push
fs
xchg
xchg
cmpsl
xchg
addb
lcall
inc
inc
and
inc
jne
push
or
int
jg
lret
mov
mov
adc
inc
dec
sub
pop
ret
mov
loopne
cmp
das
pop
idiv
cmp
cltd
dec
jno
or
inc
das
xorb
adc
push
mov
push
mov
jl
sbb
adc
xchg
dec
out
nop
or
int
xchg
pushf
enter
imul
mov
push
xchg
pop
xchg
imul
sbb
mov
ss
jge
fincstp
mov
insb
subb
aam
mov
lret
flds
ret
je
or
ds
arpl
aas
lds
pop
lods
jp
sbb
popa
pop
adc
cmp
mov
adc
inc
jo
and
push
ror
in
inc
pop
or
or
jae
add
test
cmp
sub
push
fnstsw
arpl
outsb
bound
xlat
pop
out
pop
in
int
aas
mov
xchg
pop
add
outsl
push
inc
mov
jg
cli
mov
dec
pop
sti
aas
iret
push
cwtl
aas
add
or
fbld
fmulp
inc
or
data16
cmpsb
sub
cmpsb
adcl
push
pop
ret
push
and
jo
andl
imul
jns
pop
push
or
mov
andb
and
rcll
jns
jo
push
sbb
lea
mov
arpl
mov
stos
repnz
jnp
mov
stos
aas
sub
cmp
push
xchg
adc
xlat
lods
jne
push
fidivl
xchg
into
leave
das
fidivrs
movsb
mov
sbb
inc
rcr
mov
jne
push
dec
sub
stc
pop
cli
fisttpl
sbb
call
jl
push
in
pop
test
test
test
inc
xchg
std
inc
test
into
mov
dec
sub
test
inc
sbb
jmp
scas
rol
pop
add
wrmsr
cmpsb
insl
or
dec
jo
mov
and
xor
imul
hlt
aad
adcl
jne
popa
fs
jecxz
in
push
fisubrl
push
cld
and
dec
movsb
filds
imul
xor
or
aam
movsl
inc
das
dec
fcoml
sbb
pop
cmp
or
cli
cmp
mov
rorb
adc
fbstp
inc
mov
adc
addr16
pop
aad
push
rorl
and
push
hlt
out
push
sbb
das
push
inc
notb
insl
idivl
mov
lea
insl
fmul
or
sbb
repz
adc
aad
add
cltd
mov
sbb
ret
push
adc
and
arpl
jmp
push
adc
movsb
adc
and
xor
lahf
sbb
gs
push
repnz
loop
jno
arpl
cs
ret
pop
dec
fsubr
cmc
xchg
cmpsb
lock
xchg
int
xor
inc
jg
cmp
shll
leave
bound
pop
aaa
mov
jnp
dec
cmp
ljmp
mov
xlat
imull
and
cltd
in
cmc
popl
sti
adc
xchg
lock
lea
sub
cmp
xor
call
xchg
ss
mov
mov
fmull
mov
out
mov
cltd
int3
add
xor
ret
inc
sti
push
pop
int3
cmp
test
in
rcrb
arpl
popf
add
popa
shl
jle
mov
int
out
sbb
dec
mov
dec
mov
cli
or
pusha
loope
xchg
lock
stc
mov
jno
mov
xchg
adc
xchg
fldcw
lcall
out
jle
add
loop
sub
jle
ja
lods
mov
cmpsl
popa
into
inc
rol
in
xchg
cmc
and
sub
jb
inc
and
push
ljmp
hlt
xor
xlat
mov
xchg
fists
mov
fisubs
lea
cmp
and
daa
fildll
dec
filds
clc
mov
inc
and
addb
dec
int
imul
mov
dec
ret
es
fsubs
in
push
movsb
fwait
push
insb
fiaddl
inc
adc
pop
jnp
subb
inc
add
fcomp
mov
int3
mov
fwait
mov
inc
stos
shlb
mov
loope
icebp
pop
push
dec
sub
xor
test
xor
decl
iret
repnz
adc
sub
sbb
dec
xor
xor
cmpsb
xlat
push
mov
enter
enter
test
and
dec
mov
insl
scas
outsl
insl
cmpsb
dec
pop
dec
and
xchg
aam
jae
xchg
lret
adc
test
adc
shll
nop
mov
push
popa
jnp
add
nop
popa
shr
xor
lock
jb
sbb
or
xor
repz
fists
adc
test
test
adc
mov
aad
fists
mov
subl
in
dec
aaa
sahf
push
jp,pn
lods
lahf
xor
jecxz
scas
xorl
jae
lods
aad
orl
mov
insl
int3
mov
packuswb
sbb
mov
int3
adc
in
or
jp
add
push
adc
pop
mov
xor
inc
mov
pusha
popa
data16
sbbl
cmp
sbb
leave
aas
daa
sbb
rolb
ret
or
sbb
ss
cwtl
cmp
shl
cmp
push
or
in
pushl
int
nop
repz
ss
or
adc
and
or
dec
pop
mov
mov
sbb
jb
cli
leave
cs
xor
or
sbb
fstl
movsl
movsl
inc
add
mov
fidivrs
cs
jp
or
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
cs
jp
or
outsb
sub
dec
lret
scas
ljmp
out
stos
fidivrs
cs
jp
or
outsb
sub
dec
lret
mov
cli
mov
fidivrs
test
push
jp
jge
xchg
xchg
aad
lds
in
adc
inc
lock
add
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lock
push
test
mov
in
out
mov
add
pop
add
add
add
add
push
xor
add
dec
add
add
or
mov
outsb
add
add
add
jo
lahf
add
add
rolb
inc
add
add
push
add
sbb
jbe
outsb
add
add
add
add
mov
aam
and
mov
das
add
ja
inc
add
inc
add
add
add
add
jno
jne
lea
das
add
push
add
add
add
add
add
cmp
repz
mov
add
add
add
add
cmp
movl
daa
add
add
add
add
add
dec
add
lret
add
pop
add
add
add
add
add
add
jae
mov
pop
add
add
add
jne
push
add
mov
in
inc
add
add
add
add
add
mov
xor
xor
add
outsl
add
add
add
mov
test
add
add
add
add
add
add
add
add
addr16
add
out
add
add
add
add
add
add
add
add
sti
add
and
lds
adc
in
adc
xchg
push
add
add
add
add
add
add
and
and
jb
xor
add
in
add
add
imul
add
add
xchg
push
add
add
add
syscall
inc
add
add
add
add
in
add
add
add
add
add
add
add
inc
add
add
jo
ret
add
add
add
add
add
add
add
push
add
in
mov
xor
xchg
int3
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
sbb
imul
add
testb
add
sub
push
add
add
in
add
add
add
inc
add
add
add
add
mov
jo
out
add
add
add
aaa
add
add
in
add
sub
in
add
add
and
xchg
add
add
dec
add
add
adc
fwait
add
ljmp
add
add
add
add
ljmp
add
sub
push
add
add
add
into
add
add
add
cmp
add
add
cmp
or
insl
add
add
add
add
cmp
test
add
in
add
add
jecxz
add
ljmp
add
loope
daa
add
in
push
add
add
add
add
and
mov
ljmp
add
add
add
add
inc
add
add
add
add
xor
roll
sub
cmp
pop
add
out
ret
add
add
add
xor
flds
test
incl
cmp
dec
add
add
sub
incl
int
lcall
add
add
add
add
add
add
add
sub
cmpsl
add
adc
add
add
add
add
add
add
add
add
add
add
sbb
call
jne
aaa
gs
cli
pop
je
add
scas
dec
cmpsb
jle
jne
xchg
cmp
xorl
stos
imul
lods
shrb
setl
test
add
pop
inc
jns
adc
das
mov
shlb
in
cmp
je
xchg
stc
pop
in
dec
pop
insb
xchg
push
push
jl
stc
ljmp
outsl
mov
sbb
data16
imul
pop
fnstcw
sub
int3
xchg
cmp
mov
inc
pop
aas
aaa
jo
std
out
int
std
into
push
cld
dec
insb
popf
out
flds
push
stos
dec
jbe
push
fcomps
xor
outsb
mov
cmp
and
add
test
cli
insb
gs
sbbb
sbb
sub
dec
out
add
jnp
imul
mov
push
mov
jne
ja
addl
cmp
cltd
mov
pop
add
and
push
inc
cmpsb
stos
push
ret
mov
fcoms
pop
ret
jecxz
insl
mov
xchg
mov
mov
ror
movsl
lret
movb
push
in
jnp
out
mov
pop
sbb
pop
sub
mov
adcb
xorb
xchg
sbb
xcrypt-ecb
cmpsl
dec
sbb
mov
into
push
or
mov
aad
out
rorl
push
xor
iret
jmp
rorl
add
mov
test
jae
push
or
aas
nop
jb
ficoml
dec
or
pop
decb
inc
mov
sbb
lahf
xor
scas
inc
dec
mov
insb
vmovaps
push
jl
dec
movsb
subb
push
push
mov
sub
sbb
arpl
mov
popf
out
xlat
pushf
jge
sub
pop
xor
xchg
fsubl
push
rolb
insb
add
in
inc
rcll
aas
ljmp
push
dec
or
gs
fidivl
lcall
in
arpl
stc
xchg
mov
gs
mov
test
mov
sti
sarb
out
mov
out
inc
pmaxub
das
sbb
incb
and
aas
jecxz
lods
xor
lret
loop
or
mov
shll
movsl
cltd
pop
jo
insb
adc
and
push
sbb
adc
inc
and
mov
inc
lds
js
push
std
int
dec
adc
and
push
aad
xlat
dec
fnsetpm(287
stc
jo
add
push
jg
pop
bnd
test
push
sub
bound
icebp
jb
dec
call
and
cmp
jb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
