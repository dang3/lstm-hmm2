call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rorb
mov
ror
mov
sbb
jo
add
fdivl
imul
cltd
loopne
lock
mov
or
pusha
sub
add
pop
and
xor
mov
cltd
clc
test
mov
mov
mov
or
add
ss
addr16
mov
call
popa
xor
xchg
stos
adc
jl
mov
clc
popa
add
cwtl
iret
dec
inc
stos
dec
nop
es
loope
out
sub
mov
cmp
sub
shrl
adc
aad
inc
adc
sub
scas
out
jmp
in
cltd
and
rcrb
gs
jg
xchg
fstps
mov
lret
rclb
push
adc
nop
imul
jg
mov
in
cld
inc
jp
cmc
xchg
dec
popa
cmp
pop
adc
sub
xor
iret
cmovo
xchg
push
push
pushf
mov
sbb
pop
inc
sahf
and
js
mov
cltd
loopne
lock
mov
or
js
imul
cmp
adc
test
rep
neg
in
cmpsl
mov
inc
insb
cmp
adc
jg
sub
push
imul
mov
lret
in
adcl
insb
pusha
dec
xor
sub
push
or
sub
rcrl
mov
or
pusha
sub
add
pop
and
jns
mov
cltd
loopne
lock
mov
or
pusha
sub
add
pop
and
jns
mov
rcrb
cmp
add
jne
popa
jmp
inc
mov
inc
pop
push
adc
lahf
cmp
and
xor
outsb
or
push
or
loop
sbb
es
push
ret
add
test
push
mov
ror
lret
mov
pop
or
movsb
fld
sti
dec
inc
mov
xchg
push
mov
and
fidivl
xchg
loop
sbb
fldt
int3
test
or
inc
xchg
mov
arpl
sub
hlt
insl
and
fisubs
int
push
pop
push
sbbb
dec
push
std
jnp
jmp
leave
movsl
iret
dec
sub
je
mov
in
lret
dec
xlat
and
aaa
jl
xor
sub
jbe
pop
push
dec
ret
mov
push
and
inc
adc
mov
aad
cmp
mov
in
into
shlb
and
fcoml
pop
movsl
push
aaa
mov
cli
mov
mov
aaa
fisubrl
shll
mov
scas
les
in
sbb
mov
xchg
incl
adc
sub
imul
lods
push
cmc
rol
outsb
sub
xchg
jmp
cs
ds
lds
lock
daa
test
jp
jmp
pop
sub
in
xchg
dec
negl
jo
mov
int
shrl
dec
adc
lods
shll
lret
xor
int
dec
cmp
adc
cli
fs
imul
inc
pop
inc
jl
rcrl
mov
mov
into
ja
repz
inc
dec
cmp
xchg
mov
cs
stos
cmc
lods
sbb
jmp
sub
cmp
daa
pop
cmp
mov
cs
std
imul
cmpb
addb
dec
insb
add
mov
enter
stc
cmp
sti
daa
test
jne
std
sti
movsb
dec
lock
mov
sti
nop
imul
mov
imul
sbb
add
js
pop
ret
sbb
or
int3
pop
rcll
xchg
inc
loopne
adc
mov
ds
push
fnstsw
out
mov
xchg
loope
add
rcrb
pop
dec
sbb
mov
out
mov
clc
lret
gs
cmpsb
mov
fstpt
sahf
cmc
xor
ss
lret
fldl
cmpsb
push
lcall
lahf
push
aad
ss
mov
pusha
fisubrl
daa
ror
mov
icebp
jp
inc
stos
ss
mov
repnz
jns
dec
inc
add
and
popa
aaa
inc
push
sbb
shrb
stos
in
sub
sub
pop
in
mov
test
in
leave
fwait
je
adcb
xchg
popa
jmp
sahf
lock
dec
jnp
dec
aam
fwait
xor
cs
jecxz
sub
ss
cmp
xlat
sahf
mov
jnp
adc
mov
push
cs
fidivs
sbb
mov
mov
gs
mov
cmp
aad
ret
and
test
popa
dec
push
in
pop
mov
lcall
and
mov
add
push
jns
aas
fnstenv
mov
or
mov
xor
mov
mov
jmp
stos
fs
xor
imul
cmp
sti
add
pop
popf
mov
mov
stos
enter
cmp
xor
fnstenv
xchg
sti
lods
push
fidivl
pop
and
mov
fcomp
xchg
test
push
and
lahf
rcl
and
clc
and
out
adc
std
addr16
add
adc
mov
xchg
pop
sub
loop
repz
jl
roll
mov
pop
sub
insl
mov
ljmp
fcompp
or
stc
inc
push
je
sub
aaa
push
push
js
and
cs
inc
push
cli
add
xchg
popa
and
push
shlb
hlt
adc
xor
sub
jb
mov
filds
mov
jno
scas
aam
adcb
push
sbb
inc
inc
xchg
into
sahf
sub
imul
in
stc
cmc
or
adc
fadds
mov
mov
xor
pcmpgtw
sbb
lret
xlat
pop
sbb
rclb
dec
dec
push
es
cs
lahf
hlt
test
cmp
mov
adc
xchg
mov
test
lods
or
fwait
je
incb
pop
pop
xchg
xchg
in
adc
lods
push
scas
ljmp
sahf
add
paddd
and
dec
add
jl
aas
sub
stos
lea
jne
leave
sbb
push
call
xor
lahf
and
scas
mov
pusha
push
fimuls
cwtl
out
sub
dec
or
sbb
adc
mov
inc
inc
sub
inc
jbe
sahf
cmp
rcrl
cmp
rorl
xor
xor
data16
dec
sub
or
jg
fsubrl
add
scas
daa
in
push
rcll
jae
ja
jae
imul
push
and
push
sub
mov
or
sub
psubq
mul
insb
jp
or
mov
push
stos
mov
loopne
dec
out
ja
or
lret
inc
inc
ljmp
call
jns
cs
scas
insb
xor
jo
les
jmp
popf
fisubrl
xchg
mov
test
scas
xchg
mov
fimull
stos
and
ret
out
out
dec
lock
fisubrl
cmp
aas
dec
jecxz
sub
inc
dec
jmp
dec
cli
in
jp
sbb
push
in
dec
pushf
xchg
stos
or
ljmp
fisubrs
jmp
mov
lret
sbb
icebp
jmp
fcmovu
add
jmp
mov
lods
add
iret
xchg
pop
mov
test
lcall
pop
and
fs
into
add
popfw
fucomip
repz
adc
cmc
pop
inc
xchg
add
mov
pop
mov
dec
fmuls
xor
mov
ljmp
arpl
and
ljmp
sbb
mov
in
cmp
scas
mov
mov
sbb
shrb
mov
movsb
ja
andl
sub
xorl
insl
js
faddl
negl
imul
push
cmp
push
mov
push
pop
add
adc
ret
mov
push
adc
cmpsl
sub
call
nop
pop
and
adc
add
imul
mov
in
imul
int
sbb
push
loope
mov
loop
mov
shlb
mov
mov
bnd
sbb
mov
add
cli
jbe
ds
rorb
adc
or
add
leave
cltd
mov
pop
clc
int3
shrl
mov
add
push
pushl
push
xchg
out
popa
xchg
in
xchg
notb
sbb
test
jno
push
rol
sar
adc
dec
rcrb
mov
loopne
jle
cmp
stc
aam
mov
ljmp
jle
cli
sbb
test
sbb
lods
mov
push
mov
inc
mov
add
sbb
jo
pop
push
out
fwait
test
ljmp
push
pop
mov
jp
and
adcl
xor
sbb
xorl
jb
icebp
js
std
fpatan
sub
jge
in
push
adc
sub
scas
loope
jg
or
movsl
outsl
arpl
aaa
fsubrs
xchg
sarb
mov
sahf
or
pushf
divb
mov
stos
sbb
icebp
mov
sub
mov
cmpsb
push
aas
xor
repnz
bound
push
cmp
push
jl
pusha
ret
xchg
imul
testb
dec
jg
rorl
xor
xchg
loop
int3
pop
jnp
loop
stos
or
mov
and
pop
loope
repz
int3
jecxz
ja
or
daa
fwait
and
jae
cmp
pop
jg
sub
pop
out
test
jae
push
cmp
loope
cwtl
dec
rcll
stc
push
icebp
ja
or
ret
mov
sbb
sbb
fisubrs
inc
push
in
mov
adcb
pop
repnz
sahf
pop
push
adc
test
cmp
leave
xor
pop
adc
js
gs
inc
mov
ja
test
cmp
das
fidivl
icebp
aad
inc
ror
inc
pop
out
add
ror
push
pop
dec
mov
mov
jnp
xchg
cmp
mov
push
adc
hlt
mov
jge
or
adc
dec
stc
mov
pop
or
lret
xor
pushf
test
pushf
mov
and
subb
cmp
jecxz
or
movb
mov
jne
push
pop
pop
sub
sbb
mov
sbb
cli
jae
call
inc
testl
inc
popf
fnstcw
cmp
cld
ret
in
adc
bnd
mov
sahf
iret
add
or
mov
fst
mov
cmp
mov
mov
xchg
inc
insl
xchg
mov
aas
pop
sub
test
or
pop
je
pusha
xchg
adc
xor
xchg
rorb
pop
cwtl
or
adc
icebp
subb
inc
cmp
dec
inc
lea
pushf
xchg
push
push
and
jmp
inc
or
aam
mov
das
xorb
jns
fsubl
insb
lret
lahf
pop
jge
jle
or
shrl
jo
popa
pop
jns
insl
and
dec
mov
out
fldl
or
pop
or
lock
push
lds
data16
jae
rorl
test
in
push
test
cmc
addr16
rcr
jmp
jl
mov
clc
mov
test
test
cmpsb
hlt
imul
pop
jmp
jmp
hlt
in
mov
pop
icebp
and
cli
add
pop
outsl
dec
mov
sub
jmp
in
incl
roll
jbe
test
or
cmp
sbb
addr16
pop
lods
sbb
and
lea
and
les
cld
mov
shl
je
notl
subl
adc
lcall
xchg
daa
data16
addl
pop
out
cmp
lds
pusha
and
mov
imul
add
js
iret
pop
je
bound
push
adc
pop
insb
xchg
insb
mov
lods
std
push
push
dec
mov
mov
or
scas
pop
scas
dec
in
fidivrl
dec
xor
mov
in
mov
fs
sub
jo
jae
arpl
enter
int3
push
pop
and
in
insb
es
sbb
test
push
cmc
sub
aas
movsb
sbb
mov
pushl
jbe
js
mov
xor
jmp
mov
cltd
cmpsl
lock
stos
add
xchg
or
out
cmp
mov
mov
dec
mov
and
pusha
scas
divl
out
loope
pop
cmc
loope
int3
out
sub
daa
xor
xchg
sahf
mov
pop
notl
das
adc
lea
stc
pusha
push
mov
lods
mov
jb
rorb
push
test
cmp
or
cld
icebp
aam
mov
loopne
xchg
or
dec
inc
enter
dec
push
fadds
jmp
jb
mov
push
pop
mov
lret
mov
xchg
loope
pop
mov
js
sbb
mov
pusha
cltd
mov
pop
stc
leave
jp
daa
aam
std
inc
inc
jge
fstl
mov
shl
xchg
shr
cmp
mov
jo
xchg
iret
mov
push
mov
sub
shrl
dec
and
dec
pop
mov
lea
jno,pt
sbb
pop
inc
inc
addr16
xchg
sub
movsb
xchg
xchg
push
lock
adc
adc
mov
aad
ficoms
sub
mov
bnd
shr
mov
mov
js
icebp
stc
fimuls
je
mov
push
add
mov
adc
imul
std
mov
dec
paddd
push
push
loope
jp
push
add
jmp
addr16
pop
mov
shrb
dec
mov
pop
jnp
test
inc
or
stos
xor
outsb
and
cltd
out
jo
adc
mov
imul
arpl
fistpll
fildll
sbb
jae
adc
repz
cmc
loope
les
test
aam
adc
std
test
sub
int
ds
mov
push
pop
mov
mov
jbe
ds
inc
insb
shll
push
xchg
mov
pusha
jns
sbb
test
adc
xor
std
xchg
es
lock
adc
ljmp
jmp
push
ds
sbb
pop
inc
ror
imul
mov
adc
inc
pop
jle
xchg
sub
adc
bound
xchg
add
push
jmp
shll
loope
fsubrl
cli
nop
jbe
push
cmp
dec
or
lahf
add
push
xor
es
sub
decb
and
mov
xchg
or
inc
arpl
cmp
sbb
fdivl
mov
jnp
gs
sbb
jbe
mov
cmc
lret
and
fstpl
adc
pop
gs
outsl
mov
test
addl
repnz
pop
int
jo
mov
xor
and
int
scas
jge
iret
and
sti
mov
xchg
das
data16
in
repnz
jmp
xchg
testb
es
int
mov
adc
fcomps
sti
pop
out
xchg
or
mov
loopne
sbb
bound
push
sbb
mov
and
clc
scas
les
inc
jae
push
addr16
mov
and
cmpsl
inc
adc
fstl
test
and
into
xchg
ficompl
fcmovb
test
fstpt
nop
push
xchg
jns
in
xchg
pop
inc
andl
push
scas
push
dec
lods
outsb
xor
sbb
lock
int
jnp
inc
cmpsl
push
mov
int
mov
inc
cs
pusha
cltd
pop
inc
testl
and
add
and
scas
sahf
loopne
add
das
call
cmp
inc
pop
movsb
ds
xchg
lock
or
inc
push
mov
insb
xchg
imul
mov
test
mov
stos
mov
pop
dec
lahf
lods
ds
mov
popf
adc
mov
int3
adc
jns
cmp
sbb
lds
push
rorl
jbe
adc
repz
sbb
int
rcr
ret
dec
jae
sub
inc
test
shl
cwtl
sub
clc
sub
cmp
sbb
in
into
push
jns
xlat
push
lods
sub
outsl
mov
xor
ret
scas
scas
dec
roll
push
push
cmp
jns
outsl
out
nop
mov
outsb
or
mov
push
add
xchg
sahf
ljmp
aaa
xchg
add
jg
xchg
ret
lcall
add
movsb
pop
mov
cmp
mov
ds
outsl
adc
mov
out
sbb
jle
dec
ss
daa
bound
jg
add
pop
mov
mov
mov
jbe
cltd
inc
xor
int3
call
push
aam
add
pop
add
mov
pop
dec
ja
adc
dec
int
ljmp
push
jb
nop
addr16
insl
subb
pop
and
inc
inc
lahf
mov
pop
cwtl
xchg
jb
xchg
add
movsl
mov
jmp
lods
xor
and
pop
cli
clc
in
fldt
inc
int3
adc
and
sbb
movsb
inc
ljmp
out
scas
imul
cmp
mull
push
jbe
pop
test
pop
ret
rcl
jecxz
xchg
and
mov
add
movsb
fwait
mov
xchg
pmaddwd
loop
arpl
adc
pop
push
push
repz
mov
int3
std
mov
cmp
sti
mov
adc
xor
in
mov
push
mov
ljmp
frstor
or
inc
inc
mov
pop
cwtl
dec
add
sub
sub
adc
pop
jns
jp
push
sahf
cld
cmp
pop
out
adc
rorl
sub
testl
popa
cmp
pop
test
lcall
sub
cmp
sbb
ja
cmp
ja
jnp
adc
pop
inc
ret
xchg
jae
clc
or
in
gs
push
or
leave
xchg
pop
test
ret
inc
push
cltd
jns
rolb
pop
xchg
adc
arpl
push
scas
das
fs
sbb
loop
pushf
pop
jnp
lahf
dec
xor
popf
push
gs
dec
cmp
addr16
mov
pop
sarb
test
and
push
fildl
repz
ficoms
leave
sbb
jb
inc
jae
loopne
clc
lret
push
mov
ljmp
mov
cmp
jnp
jle
mov
pushf
or
lock
cltd
jp
and
enter
xor
pop
int3
xor
jb
xchg
adc
jle
inc
push
and
mov
loop
lret
dec
sbb
xor
pop
stos
aad
mov
dec
jecxz
push
xchg
dec
sub
mov
lahf
mov
lret
lock
sbb
mov
stos
decl
std
inc
cs
push
jge
repnz
mov
sti
and
xlat
in
jg
push
test
cmp
lahf
mov
ljmp
aad
mov
lahf
sbb
hlt
jge
mov
insl
in
ljmp
push
push
cmp
pop
push
loop
inc
dec
mov
inc
enter
outsl
leave
int3
push
pop
ja
push
arpl
cmp
cmpsl
xor
mov
jbe
xchg
add
adc
outsb
movsl
cmc
pop
loope
outsb
nop
popf
xor
add
jmp
jp
or
jp
daa
xor
lahf
cmp
shrl
xchg
ficompl
jae
hlt
cld
add
fcompl
mov
inc
xlat
mov
fisubrs
inc
loope
pop
inc
mov
mov
cmp
movsl
addr16
xorl
jne
out
fdivs
addr16
adc
pop
movsb
push
jb
mull
add
inc
popf
shll
and
add
jbe
dec
into
cmp
sbb
test
xchg
cmp
gs
push
out
scas
push
daa
mov
repnz
int
jg
dec
pop
imulb
jno
cmp
or
sti
mov
js
pop
lcall
xor
decb
dec
movsl
jbe
push
insl
fdivr
ret
stos
and
sub
jg
mov
push
jae
loopne
cs
jo
mov
setne
jl
add
lret
mov
shll
mov
fadds
jecxz
xchg
jp
add
xor
sbb
popa
mov
mov
pop
pop
fcmovnbe
jae
jmp
mov
insb
jl
dec
pop
mov
push
dec
inc
cmc
mov
loope
repnz
inc
add
mov
pop
mov
or
in
xor
je
fisttps
xchg
jl
ja
fiadds
lahf
jnp
fisubrs
jae
sub
sub
das
dec
jb
push
lods
lods
xchg
je
scas
ret
insl
jle
adc
out
xchg
jmp
sbb
stos
ss
int3
ret
jbe
inc
and
fldcw
jecxz
adc
pop
orl
js
js
iret
dec
ret
fs
dec
idivb
jns
jmp
lock
push
mov
adc
mov
and
das
pusha
out
rcrb
pop
popf
int3
cs
sub
cmp
insl
es
mov
dec
arpl
push
push
sbb
xchg
lahf
jg
xchg
and
mov
cmp
xor
adc
repnz
mov
stos
test
dec
and
mov
push
xorl
test
or
push
mov
pop
xor
xor
sbb
stc
jp
push
cmc
dec
xchg
jno
jns
out
and
pushf
jmp
insl
rcrl
dec
dec
or
test
stc
mov
insb
mov
ffree
roll
push
dec
fistpll
mov
ds
or
je
stos
cld
cmp
or
iret
inc
std
imul
mov
mov
sti
push
adc
out
out
arpl
adc
and
fisubs
ljmp
mov
xchg
pusha
imul
pop
xchg
jg
stos
insb
insb
cmp
test
mov
sub
lgs
mov
xor
or
pop
lret
movsl
inc
mov
inc
jb
mov
mov
and
sub
mov
test
testb
add
pop
inc
cmpsb
nop
inc
mov
shrl
lea
je
cltd
xsave
pop
add
testl
push
add
adc
scas
lcall
cmp
and
pusha
jecxz
lock
sbb
sti
negb
data16
fildll
mov
and
into
push
daa
cltd
ljmp
fldenv
or
pusha
sub
add
pop
and
jns
mov
cltd
loopne
lock
mov
or
pusha
sub
add
pop
and
jns
mov
sbb
sub
mov
mov
mov
pusha
sub
add
pop
and
jns
mov
cltd
loope
lock
and
xor
mov
sub
ja
cwtl
cmpsb
fists
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
outsb
xchg
and
adc
add
imul
out
cltd
sub
icebp
test
movsb
daa
hlt
push
movsb
inc
aam
les
xchg
and
and
add
je
fs
push
testl
ss
daa
hlt
xor
inc
aam
les
xchg
cmp
cmpsl
insl
xlat
jge
dec
notl
mov
scas
and
push
lock
fistl
test
adc
negl
push
jl
cwtl
sub
mov
sti
pop
insb
push
xor
mov
mov
adc
adc
mov
fwait
dec
movsb
jg
insl
jge
pop
clc
imul
xor
mov
cmp
dec
ss
gs
pusha
cmp
pop
and
pop
pop
push
les
jnp
or
add
hlt
mov
jno
mov
jmp
clc
xchg
icebp
fsubs
xchg
add
js
dec
jo
and
movsb
sub
out
call
test
pop
add
push
pop
pop
cmp
aam
and
pop
or
dec
mov
outsl
outsb
dec
pop
pop
add
test
xor
hlt
pop
xor
les
adc
adc
push
negl
lods
pop
mov
daa
in
push
cld
inc
aam
frstor
inc
xchg
inc
jno
pusha
out
nop
or
shlb
out
ljmp
add
and
jno
push
les
xchg
or
mov
movsb
jne
push
icebp
jne
xor
xor
push
aam
rolb
or
fs
push
testl
aaa
test
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
push
testl
aaa
test
hlt
push
in
aam
les
xchg
out
dec
fsubrs
and
jmp
sbb
lcall
lock
xor
sub
int3
imul
mov
mov
shrb
dec
sub
daa
sti
jecxz
cld
sub
mov
outsl
setnp
jne
sahf
mov
adc
sbb
outsl
sub
movsl
adc
dec
ds
outsl
lock
mov
mov
dec
cmp
and
in
inc
jno
adc
jnp
int3
imul
xor
iret
sbb
lods
addl
lds
outsb
mov
cmp
test
data16
mov
push
jl
xor
popa
insl
xchg
xchg
sbb
jbe
out
jns
gs
std
inc
je
out
mov
jo
add
inc
pop
adc
sahf
push
movsl
jp
les
sub
arpl
sub
scas
in
cltd
pop
mov
xor
inc
enter
cs
mov
int
nop
push
mov
mov
mov
fs
mov
hlt
call
adc
sarb
ja
and
stc
jb
jns
push
sbb
dec
xchg
xor
lret
sbb
sub
cltd
cmpsb
cmpl
inc
jecxz
add
adc
push
orb
mov
inc
int
fcmovne
cmp
cmp
or
or
fwait
mov
out
cs
sbb
das
push
movd
pop
or
dec
cmp
aas
cmp
inc
add
jg
jg
add
push
lahf
dec
xor
dec
cs
sbb
prefetcht0
push
add
repnz
scas
fsubrl
pusha
jle
mov
fwait
or
pop
lret
repz
adc
sub
push
mov
dec
popf
nop
mov
and
movsl
fldenv
mov
jbe
inc
test
mov
xlat
mov
into
out
notl
sub
aaa
pusha
push
shrb
sbbl
aaa
push
mov
mov
out
ljmp
loope
push
cli
fildl
rcll
sahf
add
loope
jge
push
cs
xchg
xchg
or
or
dec
nop
pop
cmpsb
dec
cmpsl
xchg
mov
sbb
or
adcb
mov
loop
ret
aad
cmp
movsl
or
roll
xor
movsb
pop
js
cli
decb
xlat
mov
push
push
test
pop
sbb
mov
mov
adc
shl
scas
ret
adc
js
scas
sarl
pushf
aam
jae
adc
icebp
ja,pn
mov
push
fwait
dec
add
sub
jne
addb
mov
adc
and
aam
dec
clc
xor
xlat
iret
incl
stos
jb
xchg
ss
xor
les
into
loope
jmp
pop
jg
nop
stos
cltd
xor
jae
fmuls
cwtl
xchg
lea
mov
mov
inc
cli
popa
inc
adc
push
add
iret
sub
inc
and
inc
pop
and
repz
push
push
scas
push
scas
mov
das
pushl
mov
loop
inc
dec
cltd
fs
xchg
xchg
push
cli
pop
mov
xor
push
xor
adc
adc
xor
cmpsl
call
sbb
daa
inc
or
push
pusha
scas
pop
bound
lods
sahf
in
test
xor
jge
add
push
sub
dec
cli
pushf
lock
lods
ljmp
push
and
ljmp
jbe
call
bound
mov
mov
jne
cli
jns
shll
jg
stos
dec
in
add
lcall
imul
fldcw
fdivl
jp
stos
aaa
notb
mov
iret
arpl
mov
xchg
jno
aad
das
mov
fwait
movb
testl
notl
dec
jb
pop
pop
iret
andb
repz
in
push
push
adc
scas
out
lahf
in
mov
in
scas
xchg
notb
sbb
cli
arpl
jbe
movsb
addr16
dec
js
jns
rorl
nop
pop
std
push
aam
sarb
ljmp
fimull
sbbl
jg
cmp
cmp
lahf
popf
cltd
cld
addr16
dec
ret
mov
adc
aad
test
jnp
jg
shl
jno
imul
out
sbb
lret
das
or
xchg
jo
in
adc
in
mov
popa
iret
cmc
cmpsb
addb
aaa
outsl
stc
mov
daa
int
test
ret
and
dec
mov
and
mov
mov
jnp
mov
into
jnp
out
jno
cli
lret
or
mov
inc
xchg
inc
xchg
xor
dec
sbbb
inc
insl
jnp
push
popa
adc
push
adc
jmp
dec
popf
pop
adc
addr16
jp
mov
lock
jnp
das
fdivl
sbbb
ljmp
fucom
or
dec
xor
and
mov
int
test
and
cld
dec
xchg
xchg
mov
xchg
dec
push
div
cmp
out
outsl
mov
xchg
aad
lahf
jnp,pt
and
adc
js
fwait
cwtl
pop
cli
adc
ret
addb
mov
sbb
jecxz
or
xor
scas
jmp
aas
pop
sub
shr
mov
sub
dec
pushf
sbb
mov
mov
rcrl
sbb
pop
xchg
push
mov
mov
xchg
in
sti
push
sub
jmp
popf
movsb
cli
sub
sahf
lahf
pop
dec
sub
scas
repnz
adc
push
pop
addl
gs
sbb
jecxz
notb
in
rcrl
int
xchg
mov
push
int3
negb
jle
jp
std
inc
jmp
jmp
sbb
fdivrl
cwtl
loop
test
clc
cmp
testl
sub
stc
sbb
jg
repz
adc
adc
mov
mov
xchg
outsb
in
fwait
mov
or
inc
or
ja
mov
fsubrs
test
jecxz
pushf
push
outsb
loope
pop
cmp
dec
push
cmpsl
insb
mov
push
dec
xlat
fsubrs
push
repz
push
push
lods
lods
lret
or
jecxz
nop
xchg
mov
xchg
jnp
sub
loope
arpl
icebp
loop
push
faddl
pushf
mov
int3
mov
jb
and
loope
xchg
flds
xor
movsb
jo
scas
int3
leave
jnp
std
xchg
and
pop
xchg
jbe
rcll
ret
pusha
pop
enter
cmp
cmpsb
gs
daa
inc
fprem1
ljmp
adc
stc
fwait
mov
jns
frstor
sbb
test
loop
cmpsl
dec
xor
jecxz
sub
push
int
sub
pusha
sahf
sbbb
cmpsl
xchg
cli
iret
jp
mov
cli
xor
aad
xchg
mov
fs
jo
mov
into
cli
push
mov
mov
into
fstl
or
push
outsl
or
sbb
cmp
les
mov
int3
push
lods
mov
addb
dec
lret
popa
inc
sbb
adc
dec
cwtl
mov
rorl
jmp
test
neg
sbbl
jp
push
dec
rcr
xchg
lds
int3
movsb
xor
dec
out
ljmp
shll
cmp
cmpsl
out
pop
rclb
lret
xorb
hlt
push
dec
xor
test
decb
pushf
addr16
stos
mov
sub
out
les
cwtl
jl
mov
or
andl
test
fdivs
test
pop
dec
mov
insb
dec
xor
test
fidivl
jge
scas
pop
adc
mov
pop
cld
out
lds
movsl
xchg
movsb
rorl
xchg
mov
out
inc
dec
dec
lock
and
jo
xchg
lds
xchg
or
fimuls
cli
push
dec
scas
inc
call
lock
jg
and
adc
pop
pop
adc
jnp
pop
inc
outsl
jl
add
adc
in
jbe
out
jp
insl
xor
jp
xor
xor
or
xor
loopne
sub
xchg
popf
call
jle
lret
jno
out
sub
jg
push
fmull
scas
cwtl
or
sarl
adc
clc
pop
test
sbb
repnz
adc
and
dec
arpl
mov
adc
mov
cli
imull
mov
insl
mov
sub
jbe
js
in
push
stos
call
jb
daa
xor
mov
adc
adc
sbb
adc
loop
test
leave
xchg
fldenv
pop
push
pop
adcb
pop
in
repnz
cs
int
or
invd
jo
sahf
mov
mov
jge
out
jmp
out
or
fstps
leave
add
arpl
or
dec
mov
mov
sub
scas
xchg
xor
scas
test
inc
jge
dec
scas
and
divl
jge
mov
pop
xchg
or
sbbb
mov
inc
pop
pusha
dec
xchg
fnstcw
and
test
addb
mov
lret
dec
pusha
or
xchg
call
cmp
fisttpl
fidivl
fldl
int3
enter
xchg
jge
test
pop
div
mov
push
out
adc
pop
jns
arpl
in
test
mov
fcomip
in
aaa
bound
mov
xchg
mov
scas
mov
call
test
cs
fidivrs
xchg
jle
cs
pop
bound
shrb
cmpsb
ficoml
int
outsb
jno
lret
lret
jecxz
adc
or
xlat
push
pushf
stos
dec
stos
inc
adc
test
into
andl
mov
add
fstp
inc
test
out
mov
add
sbb
das
insl
ja
mov
popf
int3
inc
or
push
insl
cmp
dec
shll
dec
and
shlb
aas
cmp
push
nop
sbbb
cmc
je
fwait
jl
dec
lret
mov
test
clc
adc
jb
mov
outsl
push
sub
cmp
cltd
push
xor
xor
jg
sub
test
pop
xorl
mov
dec
jecxz
add
pusha
adc
sub
or
sbb
stos
ljmp
test
cltd
jecxz
ficomps
adc
adc
clc
in
mov
or
jae
fsubs
and
aam
idivb
int
dec
enter
jl
scas
and
testb
outsb
js
movsl
cld
fidivrl
xor
testl
pop
mov
add
mov
fldcw
int
mov
imul
push
jmp
push
mov
popa
inc
insl
mov
add
les
jmp
lods
xchg
pop
fcmovne
jp
jae
fstl
rcrb
stos
xchg
adc
mov
mov
bound
rcrl
jp
mov
mov
inc
cmp
scas
lods
and
loopne
pop
jb
mov
mov
jmp
push
mov
push
xor
jl
test
mov
jns
xor
daa
mov
pop
mov
inc
adc
in
jmp
sahf
daa
jno
enter
jecxz
scas
or
sub
cmp
jo
mov
ret
and
and
insb
mov
call
sahf
jae
mov
movsl
dec
push
jno
popf
lods
insb
fstl
jmp
fs
lret
mov
mov
insl
mov
stos
mov
sbbb
outsl
xchg
pop
dec
jle
leave
gs
adc
adc
mov
xor
add
add
inc
cmc
push
arpl
dec
outsl
pop
ret
jne
sub
fldl
jns
push
cmp
das
ss
aad
push
xlat
mov
fs
pop
cli
pusha
xchg
sbb
repz
sub
les
repz
sbb
cmp
xchg
push
cmpsl
xchg
pop
xchg
fwait
pop
jno
out
dec
push
leave
iret
loopne
add
cmpsl
dec
xchg
pop
xorl
inc
pop
xchg
fcomip
add
jg
and
jnp
xor
nop
jae
mov
sbb
jb
test
push
fsqrt
fs
pop
xor
jo
loopne
pop
push
xor
mov
lea
addb
pop
push
repz
cmpsb
inc
and
inc
cmp
push
cwtl
icebp
int3
mov
or
in
jo
or
xchg
xchg
loopne
dec
add
fnstsw
outsb
jns
cld
aas
xchg
and
fisubl
fcoms
aad
push
mov
outsb
sub
xchg
add
call
dec
jmp
out
inc
mov
aaa
sbb
out
mov
mov
sbb
cmpsb
sbb
jge
adc
outsl
lock
lret
arpl
and
mov
inc
or
inc
dec
jb
pop
sbb
stos
push
orb
xor
xor
cmp
inc
int
pop
cmp
fstpl
xor
push
lods
fiaddl
scas
insb
loop
adc
inc
cmp
in
stc
push
xchg
push
mov
xor
test
test
test
aas
frstor
xchg
mov
pushf
cmpsl
shrl
inc
ret
mov
mulb
push
xchg
lods
cmp
int3
mov
pop
rclb
arpl
sbb
adc
inc
adc
push
in
sub
hlt
xor
cmp
aam
cmpsb
rclb
inc
sbb
mov
hlt
dec
lock
adc
jbe
cmp
fistpl
fwait
jb
jecxz
mov
ret
loop
outsb
shlb
jecxz
xchg
inc
negl
lods
adc
inc
mov
pop
sbb
in
lret
leave
pusha
cwtl
cmp
xchg
mov
fisubl
dec
test
adc
cmpsl
rcl
bnd
faddl
cld
or
jecxz
jl
shll
or
repz
int
push
out
push
das
out
add
cmp
jmp
xchg
out
scas
push
psrlw
mov
mov
pop
pop
xchg
ret
jl
adc
push
lods
hlt
mov
xorl
dec
mov
xor
mov
mov
sbb
inc
xchg
or
mov
scas
push
xchg
in
mov
add
test
cmp
sub
push
adc
iret
daa
mov
push
add
stos
dec
inc
inc
sub
push
xor
mov
in
sub
mov
lods
push
and
jnp
icebp
fwait
adc
repnz
jmp
loopne
jbe
fiadds
shrb
lret
and
jno
outsl
rcll
insl
aam
cmp
sbb
dec
or
jmp
jle
and
jns
ret
in
call
les
mov
cs
movsl
fimuls
insl
fdivrs
mov
ja
repz
inc
inc
lds
in
aas
mov
lcall
inc
jne
adc
mov
jmp
mov
iret
rcrb
xchg
hlt
or
cmp
fdivs
notl
jp
dec
mov
sbb
out
aad
mov
mov
and
pusha
fildll
fwait
xor
mov
sti
aas
sbb
ret
xor
xchg
push
das
xchg
lock
fistps
inc
or
add
in
lock
xor
cmp
sub
push
ret
push
cld
js
loop
and
and
enter
out
rorb
es
mov
ds
mov
xchg
and
idivl
pop
jecxz
mov
sahf
shl
aas
cmp
movsl
sbb
divb
jecxz
jmp
jbe
inc
xchg
pop
jbe
inc
outsb
mov
or
push
popf
jno
sti
ss
and
les
lock
xchg
mov
dec
xchg
imul
sbb
insl
shll
lds
jge
inc
jge
icebp
popf
sahf
xchg
cmc
test
scas
ss
cs
and
movsb
add
jno
ljmp
movsl
cmp
mov
xchg
fdivl
cltd
lcall
nop
pop
fbstp
cmp
shll
daa
xchg
or
arpl
pop
into
xchg
xor
jle
dec
mov
call
adc
inc
shll
mov
jmp
xor
push
int3
inc
cmp
inc
movsl
push
mov
dec
inc
xchg
xchg
adc
cmc
or
insl
out
mov
fsts
inc
js
pop
add
mov
popf
in
in
dec
or
stos
dec
test
lcall
test
mov
ja
mov
mov
push
sub
sub
test
arpl
stos
pop
mov
mov
cmc
jnp
or
faddl
mov
pop
push
jmp
repnz
xchg
mov
lods
xor
inc
pop
fidivrs
or
lret
cli
in
outsb
das
ja
test
sti
push
xlat
sbb
icebp
pop
sub
mov
sub
adc
xor
out
scas
push
xchg
out
cmpsl
fcoms
jmp
add
mov
adc
std
xor
xor
repnz
int
testl
int
cld
or
xchg
pusha
mov
jp
xorb
dec
jl
jne
sbb
movsb
in
mov
ja
mov
decl
ljmp
pop
add
in
ret
or
pop
aas
adcl
ljmp
jle
adc
cmpsl
dec
add
repz
lret
bound
adc
enter
mov
dec
mov
and
into
je
mov
or
loop
jmp
pop
jl
or
je
jmp
ror
mov
jmp
aam
xchg
push
xchg
add
gs
mov
push
dec
dec
sub
mov
mov
xchg
ret
mov
sub
or
cmp
mov
or
int3
mov
push
ss
jp
mov
add
fidivrl
mov
test
mov
jnp
popa
testl
xor
notl
mov
or
int3
xchg
pop
fsts
jbe
dec
fisttps
jle
xor
adc
jle
xchg
aad
jge
ljmp
iret
cld
mov
loope
dec
xlat
in
jbe
jl
jge
dec
sub
int3
data16
inc
outsb
cmp
int3
xor
mov
cli
dec
sbb
push
call
mov
shll
mov
cwtl
pop
pushf
or
out
sub
test
int3
xchg
jae
add
xchg
call
mov
pop
dec
ficoms
adc
into
cli
xor
cmp
mov
mov
sub
cmpsl
xor
popa
sbb
push
jp
xchg
ficoml
mov
cli
jecxz
mov
push
in
leave
pop
lahf
scas
push
dec
or
push
aad
stos
add
dec
shrl
ret
ja
and
call
sbb
pop
mov
xor
cld
lea
mov
iret
mov
aaa
cmp
lret
pop
dec
loope
xchg
cltd
jp
xlat
or
out
adc
insb
leave
push
incl
repnz
and
sub
pop
repnz
adc
jl
push
outsl
cmc
sbb
push
verr
mov
and
xchg
xchg
add
cmp
movsb
mov
daa
adc
inc
lods
enter
mov
loop
out
jge
sub
inc
jae
push
add
add
sub
mov
push
in
in
xchg
pop
adc
fwait
shlb
xchg
mov
addr16
and
sbb
cwtl
cmp
loop
mov
lds
xor
nop
loopne
add
push
or
iret
pushl
cltd
je
int
xchg
jle
inc
adc
aaa
loope
daa
mov
cmp
hlt
xchg
xor
xchg
ret
in
pop
mov
stos
stos
sub
inc
xor
or
xor
push
loope
mov
mov
adc
sbb
cld
push
lcall
or
mov
fildll
mov
out
push
mov
cmp
jmp
loope
cmp
pop
cld
sbb
std
jo
lret
adc
ljmp
test
cmp
aaa
push
insb
adc
add
sbb
cli
jle
xor
jmp
imul
cs
rcll
xchg
fiaddl
adc
mov
lahf
repnz
xchg
inc
arpl
repnz
shll
sub
inc
push
cld
gs
or
mov
inc
in
pop
movsl
mov
ret
or
imull
popa
xchg
stos
push
pop
in
cmp
cwtl
mov
pop
cmp
pop
ds
sarb
dec
add
jo
mov
leave
out
mov
lods
lret
xor
push
stos
xchg
fcompl
add
mov
hlt
fdivp
push
rorl
lahf
shlb
call
cmp
xchg
in
pop
call
push
cld
push
pop
jmp
fistl
jmp
idivl
fldl2e
les
pop
sbb
push
repnz
das
jne
adc
cmp
jae
lea
mov
dec
testl
scas
inc
inc
js
shll
insl
jo
outsb
rcl
js
into
loopne
cmp
add
inc
lcall
inc
mov
daa
push
not
ljmp
mov
ss
in
lahf
cmp
es
iret
xchg
xchg
sarb
and
ret
sbb
nop
mov
mov
popa
and
cmpsl
jno
sti
adc
mov
add
cltd
mov
xchg
cmp
inc
xor
and
xchg
xlat
fs
push
testl
aaa
test
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
push
testl
aaa
test
hlt
push
in
aam
les
xchg
and
adc
add
je
fs
push
testl
aaa
test
hlt
push
loopne
aam
cmc
add
and
fs
aam
les
dec
pop
pop
lods
ds
test
fildll
mov
cwtl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
shl
shl
vpmullw
in
xchg
sbb
push
popa
inc
adc
xor
popf
vpmullw
test
jne
inc
popa
push
push
push
add
xor
xor
arpl
cmp
mov
mov
push
sbb
and
jae
gs
jp
test
mov
imul
push
mov
in
push
push
fldl
mov
cmp
int3
test
jp
push
lcall
out
inc
pop
imul
fsubrp
das
jns
sahf
test
testl
pop
gs
jne
das
popa
stos
add
sbb
or
or
movsl
dec
icebp
mov
mov
mov
add
cs
int3
or
cmp
gs
cmp
ret
mov
add
sbb
cmp
push
lds
inc
pop
clc
mov
push
aad
pop
and
mov
xchg
in
fsub
aad
movsl
stc
mov
test
mov
pop
push
dec
pop
cmp
and
in
xchg
cmpsl
out
aam
jmp
adc
inc
add
arpl
aaa
pop
push
jns
mov
clc
movsl
in
inc
icebp
hlt
cmpsl
adc
adc
sbb
push
outsb
xor
mov
mov
xorl
jno
popa
push
adc
and
icebp
vpmullw
test
jne
inc
popa
push
adc
and
xor
xlat
pop
imul
cmp
mov
adc
add
xchg
cmp
and
pop
pusha
mov
pop
mov
insb
imul
dec
xor
xchg
mov
or
les
jns
jbe
cld
rorb
fs
adc
mov
popa
add
sti
imul
cmp
inc
jno
lret
xchg
jecxz
mov
aam
fdivr
cmpsb
mov
cmp
push
in
sub
jecxz
sub
dec
pop
pushf
mov
xchg
jne
call
testb
pop
and
lea
pop
ds
lea
mov
pop
nop
adc
xor
adc
loop
lea
stos
push
ja
arpl
aaa
mov
insl
sarl
fsts
mov
iret
add
lret
cmp
ljmp
mov
xor
lahf
test
add
cmp
adc
lods
out
leave
sbb
ljmp
sti
imul
inc
addr16
std
rorb
and
mov
fwait
xchg
push
cmpsb
or
sbb
out
pop
daa
repz
pop
and
movsl
lock
jle
fildll
test
sub
mov
insl
movsl
imul
cmp
mov
push
push
mov
jp
mov
popa
shrw
xor
adc
mov
loope
push
ret
rorb
jbe
xchg
test
adc
ja
cmp
fisttpll
xor
mov
stos
notb
dec
mov
aaa
cltd
xchg
leave
mov
pop
mov
xor
mov
cmpsb
stos
fabs
sti
or
jnp
cmp
adc
lcall
jmp
sbb
mov
popa
xchg
inc
outsb
and
cmp
outsb
addb
xlat
gs
test
out
jp
pop
sbb
fisubrl
cld
ret
fsubs
xchg
jg
nop
add
cmp
and
clc
inc
sub
add
add
xlat
in
jmp
adc
rcrb
jecxz
pop
imul
lock
inc
adcl
test
adc
bound
or
or
js
add
pop
pop
push
btc
mov
sarb
xor
das
cli
lret
mov
sbb
sbb
jae
sarb
jmp
aas
and
jo
stos
daa
test
and
mov
add
add
cmp
mov
icebp
push
jbe
xor
mov
dec
insb
lods
aam
cmp
xor
testl
cmp
mov
scas
in
fstps
fdivrs
jle
and
test
cmpsb
dec
ljmp
push
test
mov
mov
add
not
mov
sub
lahf
mov
orb
adc
repnz
xlat
rcrb
xchg
lret
inc
xchg
imul
push
xor
mov
orl
sbb
adc
insl
dec
or
cs
loope
or
outsb
pop
jmp
xchg
jl
sub
dec
mov
push
pop
repz
and
test
in
xchg
inc
mov
dec
add
sub
ds
outsb
out
push
inc
sahf
imul
nop
and
pop
push
mov
fsubl
inc
pop
inc
xor
insb
mov
out
and
js
add
adc
add
ret
test
mov
sahf
add
sbb
pop
jmp
sbb
inc
push
cmpsl
stos
add
sub
insb
push
pusha
jl
mov
jae
bound
add
into
sbb
gs
fcom
orb
bound
sti
ss
or
jae
decl
ds
push
repnz
cli
mov
out
popf
sbb
cmc
inc
scas
bound
jnp
mov
cli
and
sub
cltd
add
ljmp
lcall
fwait
mov
push
int
test
and
movsl
mov
adc
loop
add
or
fwait
jns
pop
mov
rcrb
cmc
mov
scas
or
mov
sub
dec
lods
sarb
shlb
lock
icebp
push
jbe
jne
mov
jns
mov
lahf
in
cli
cmp
loope
loopne
push
and
pushf
repz
clc
xor
bound
scas
rcrl
fldenv
add
mov
adc
push
imul
mov
mov
sub
out
int
jbe
outsl
das
clc
ljmp
or
movsb
cwtl
arpl
xor
add
xchg
in
add
cmpsl
adc
cltd
int
fwait
pop
fiaddl
loopne
jle
je
jle
faddl
int
rcrb
rorb
pop
aad
cmpsl
idivl
push
sar
vpsllw
add
into
inc
imul
sbb
pop
inc
jae
fwait
daa
lret
mov
adc
test
xor
jge
push
jb
mov
clc
cmpsb
test
sahf
les
scas
mov
xchg
int3
mov
fcoml
daa
outsl
and
fnstcw
and
cmp
fistpll
or
inc
xchg
test
sbb
jge
cmpsl
cmc
pop
inc
ret
push
es
scas
call
fsub
jb
xchg
sar
mov
add
adc
mov
push
lods
inc
roll
push
push
je
addr16
pop
iret
jne
lret
fs
ss
or
xor
jg
cltd
and
les
sub
loopne
adc
and
ficomps
enter
scas
inc
cld
pop
aaa
es
out
enter
pusha
repnz
jmp
cmpsl
cmp
pop
leave
aas
js
and
cmp
repnz
jp
cmc
popf
andl
enter
fidivrs
mov
pop
or
clc
or
lock
inc
mov
call
jae
sub
inc
jo
jbe
pop
add
pop
ljmp
cmp
movsb
and
xchg
jns
mov
ljmp
jl
addr16
loop
cltd
jl
sub
dec
data16
mov
sahf
aad
inc
jecxz
movsl
mov
xchg
lds
insl
outsl
imul
scas
insl
ljmp
fistl
pop
inc
aaa
push
cmpsl
aas
mov
mov
ss
out
push
jbe
sub
jge
sub
loope
mov
jbe
mov
push
hlt
movsb
add
mov
mov
test
xorl
cwtl
ret
push
pop
insb
cld
mov
inc
and
push
fwait
ret
pop
ret
fs
dec
mov
out
loope
sub
jbe
xor
push
int3
cltd
mov
push
add
push
mov
addb
sbb
stc
cmp
lahf
out
jp
leave
mov
subl
cli
fistl
jbe
fwait
add
cmc
icebp
enter
add
das
icebp
imul
sbb
mov
dec
cmp
xlat
cmp
aad
jno
adc
jbe
rorl
pusha
mov
cmp
outsl
mov
or
sub
int3
ljmp
jge
add
push
cmp
or
pop
xchg
stos
inc
lret
gs
mov
sub
int
or
pop
push
xchg
dec
lods
out
sbb
mov
dec
inc
or
xchg
or
lods
mov
or
sub
inc
int
repnz
dec
push
outsb
lahf
xor
sub
sub
push
jge
out
sbb
push
inc
dec
jg
popf
outsl
testl
and
ja
mov
jns
jbe
xor
jnp
arpl
mov
popf
jae
lods
lret
in
add
sub
or
fcompl
mov
pop
popa
dec
insb
sti
and
data16
mov
push
iret
outsb
test
push
sahf
jmp
enter
pusha
add
roll
mov
and
fcmovnbe
ret
and
lret
mov
jle
sbb
cmp
rcll
fidivrl
xchg
add
push
pop
cmp
sbb
addl
xchg
shrl
icebp
pop
cmp
mov
jl
mov
cmp
or
js
imul
mov
das
mov
scas
mov
sub
jp
jo
push
push
enter
jmp
cmp
push
pop
loopne
scas
icebp
xlat
imul
sub
mov
addr16
scas
xchg
aas
gs
fbld
nop
cltd
and
add
jge,pt
jns
lahf
rorl
mov
and
push
shlb
int3
fbstp
xchg
shrb
or
les
fwait
cld
mov
mov
pop
cmp
xor
fcmovnb
jae
cmp
adc
negl
lds
jns
mov
sub
push
sub
xor
push
xor
cld
sub
mov
mov
js
ss
imul
pop
mov
xchg
dec
inc
inc
insb
lret
push
pop
sbb
lds
daa
inc
xchg
jge
mov
adc
cmpl
jns
mov
ss
push
aaa
adc
pop
dec
push
and
arpl
cmp
je
loope
fcomp
xlat
cmpsl
xchg
fs
scas
ss
sub
repnz
dec
lret
sbb
jmp
in
loope
adc
cmp
mov
push
int
or
dec
stos
loopne
jle
icebp
xchg
bound
std
mov
in
xor
cwtl
decb
mov
or
sti
push
repz
ja
add
and
movsb
sub
mov
add
in
push
or
ja
fsubs
jmp
inc
sbb
push
pop
mov
and
mov
adc
test
icebp
mov
jo
pop
cmp
adc
fmuls
test
repnz
nop
sarb
sar
mov
pop
jg
out
jae
sub
xor
inc
dec
int3
mov
lret
lcall
sarb
adc
and
jl
pop
xor
movsb
lock
sbb
mov
mov
xor
je
jp
xchg
iret
out
push
xor
ret
out
or
xor
or
mov
sub
inc
xchg
mov
dec
mov
bound
add
mov
and
out
lds
rolb
fsubr
xrelease
imul
push
jp
and
jb
pop
filds
inc
in
adc
or
ja
shll
bound
int
cmp
lret
cmp
push
andl
cwtl
cmp
test
data16
dec
stos
jns
dec
or
clc
push
int3
or
call
xchg
xchg
sbb
or
cld
sub
fistpll
aas
push
lock
mov
fdivs
mov
call
lock
shr
aam
andl
pushaw
aam
xchg
call
push
inc
xor
or
ficomps
xchg
xor
cld
cmpsb
fsub
out
scas
adc
xchg
xchg
cltd
lcall
mov
add
sub
data16
ljmp
inc
pop
aaa
lcall
pop
sbb
xor
gs
inc
adc
aam
cli
xchg
lds
dec
movsb
and
loop
bound
adc
and
imul
not
leave
xchg
cmpsb
mov
test
cmp
push
xor
push
fisubl
adc
sbb
add
mov
inc
inc
movsb
or
or
bound
shlb
mov
cmp
scas
leave
mov
jnp
sbb
xchg
mov
pushf
mov
fs
xchg
xor
cmpsb
pop
jmp
adc
xor
pushf
stos
sbb
icebp
sub
shlb
stos
inc
out
lret
jmp
mov
lock
and
xchg
dec
xlat
cs
inc
sbb
shll
xchg
push
ret
mov
sub
push
or
popl
adc
inc
es
ret
jge
dec
pushf
add
and
push
mov
cmp
pop
int3
shrl
lret
cmp
fdivp
shr
imul
arpl
jge
lahf
lods
add
mov
pushf
lret
dec
roll
lahf
jae
jae
shrb
xor
mov
inc
das
jge
or
dec
sub
ffreep
pushf
ljmp
cld
js
sbb
mov
in
adc
xor
test
pop
pushf
sbb
lahf
inc
dec
das
jp
popa
test
and
and
gs
push
mov
sahf
xchg
sbb
push
push
cmp
jle
cmpsl
loope
cmp
lea
in
stos
mov
out
xchg
addr16
push
push
movsl
pusha
and
loope
aad
mov
out
mov
mov
call
popa
es
xchg
cld
jle
lret
ss
aam
shrl
cmp
lcall
sbb
cmpsl
jmp
inc
mov
push
xchg
mov
cmpsl
mov
movsl
xor
and
sub
out
cmp
xchg
sbb
idivl
cs
mov
jno
push
xor
insl
cs
push
out
cltd
test
add
or
loope
xor
pop
lea
rorl
outsb
out
xchg
arpl
push
mov
xchg
cmp
std
cmpsl
jl
sarl
sbb
test
jp
push
sbb
sbb
xchg
xchg
and
sbb
dec
lods
and
movsb
add
push
sarb
pop
idivl
xlat
xor
push
gs
xchg
mov
inc
lds
lahf
sub
jg
xorl
cmp
test
lret
mov
mov
ss
push
lea
cmpsb
nop
movsb
movsl
or
and
data16
cmp
adc
js
fiadds
mov
aad
fistps
mov
push
adc
movsl
or
sbb
jle
scas
mov
fwait
mov
in
sbb
sbb
scas
pop
repnz
fcom
xor
sahf
loopne
jecxz
inc
cld
lahf
lahf
and
and
loopne
inc
cmp
std
add
out
lret
jae
inc
fistpll
pop
pop
ror
je
test
test
add
movsb
adc
lods
movsl
push
mov
xor
push
or
inc
popf
ret
icebp
out
leave
lock
xor
or
jge
mov
pop
and
addr16
lea
test
movsl
fwait
jbe
imul
out
iret
and
jg
icebp
adc
xor
xchg
or
fistps
mov
out
mov
movsb
popa
and
pop
fwait
pushf
xor
add
lods
sbb
orl
dec
mov
sbb
adcl
push
les
sbb
inc
mov
pop
hlt
sub
push
dec
imul
popa
out
imul
lahf
popa
mov
sti
imul
es
pop
add
dec
cmp
movq
add
and
mov
jmp
in
insl
sahf
xchg
shll
sub
dec
icebp
fisttpll
inc
pop
sbb
cmc
pusha
dec
dec
movq
lods
xchg
pop
inc
es
popf
sbb
adc
imul
add
dec
into
mov
jmp
movsb
addr16
mov
rcrb
mulb
in
add
inc
hlt
pushf
push
push
adc
ss
jmp
sbb
xor
jns
lret
mov
cmp
stos
dec
fs
into
mov
and
addl
sub
mov
mov
js
add
xchg
sbb
push
test
and
xchg
adc
push
cmp
movsl
js
xor
out
mov
shll
xor
jmp
mov
xchg
inc
fcmovu
enter
mov
das
fldt
and
and
nop
jae
addr16
adc
push
mov
loop
fcmovnbe
or
test
xor
sti
push
scas
add
push
cmp
mov
push
xchg
movsl
pushw
dec
xchg
pop
imul
xor
lahf
or
mov
inc
adc
aas
stos
push
insl
xchg
push
lcall
arpl
fbstp
push
and
sub
mov
mov
ljmp
or
lds
lcall
in
and
jb,pn
mov
sub
ds
inc
ds
pop
add
rol
aaa
mov
in
sahf
cmpsb
jl
decl
cmp
lret
mov
mov
mov
mov
loop
loopne
cld
xchg
das
ljmp
dec
mov
pop
pop
sbb
sbb
pushf
rcll
rcll
xchg
adc
pop
push
stos
cmp
or
add
test
out
jb
and
xchg
pop
leave
inc
adc
insl
cmp
cld
or
test
cmp
int3
push
ss
mov
and
cmpb
pop
hlt
lock
sub
dec
ljmp
repnz
pop
shrb
mov
xor
in
push
add
xor
fdivrl
cmc
push
ss
push
ljmp
in
dec
push
cs
ds
sub
sbb
push
repz
lahf
lcall
fsubl
bnd
jg
lret
jg
cmp
out
sbbl
rclb
dec
mov
fs
mov
push
sahf
pop
inc
sub
pop
mov
push
adc
mov
in
inc
in
jg
shll
jo
jb
lcall
jnp
fnstcw
fidivl
pop
cmc
sub
pop
ds
bound
sub
fbstp
fbld
sti
jnp
lods
and
jge
test
rol
int
clc
data16
popf
jp
ss
inc
rorl
cwtl
test
stos
mov
cmp
icebp
jne
push
inc
adc
loopne
cltd
cmc
hlt
cmpsb
nop
xchg
xlat
inc
data16
add
movsl
pop
jg
leave
stc
cmp
aam
fnstcw
int
push
fcomi
push
add
jl
fadds
mov
cmc
lahf
push
mov
inc
cli
sbb
fimuls
pop
mov
xchg
popf
xacquire
rcll
repnz
push
pop
call
inc
inc
mov
cmp
ss
jge
xchg
pop
fs
pop
leave
adc
bound
xchg
pop
jmp
loope
cmp
jnp
sub
shrb
imul
xor
lods
add
pop
ja
or
inc
mov
pop
imul
jbe
stos
push
push
dec
xor
aas
inc
repnz
cmp
sahf
ret
das
dec
xor
cld
test
gs
stos
xor
outsb
mov
push
cmpsb
arpl
cld
cmp
inc
cltd
adc
mov
push
pop
and
decb
cmp
xchg
insl
negb
push
scas
sbb
orb
dec
or
jp
insl
mov
mov
adc
subl
stos
jb
iret
lea
out
jl
mov
ret
ud1
pop
aas
inc
push
sbb
jnp
je
into
cmp
daa
int
leave
gs
dec
das
inc
inc
jnp
sub
fisubrs
sub
das
call
dec
incb
pop
sbb
dec
and
icebp
mov
rorl
outsb
in
fidivrl
into
lcall
jmp
shll
inc
mov
ficompl
fistpl
fdivl
sub
mov
aaa
inc
inc
or
mov
mov
and
mov
adcb
or
add
and
inc
popf
mov
stos
xchg
sub
xor
cwtl
in
lret
pop
mov
loope
rolb
jb
mov
ja
mov
out
add
mov
stos
and
dec
sti
push
insb
insb
jae
fdivl
and
pop
push
and
cli
dec
mov
push
dec
shrl
push
sub
outsl
sarb
and
add
xchg
fstps
inc
jg
push
xchg
stos
leave
jo
rcrl
mov
push
bound
popf
jbe
fcompl
es
push
cmpsl
std
and
and
push
cmp
adc
mov
test
iret
pop
inc
jmp
imul
in
into
sbb
in
nop
ds
and
xrelease
sbb
inc
jmp
ficoml
adc
cmp
mov
and
mov
mov
rcrl
fcoml
out
xor
repnz
scas
sub
int
inc
jb
mov
xor
pop
out
addr16
movsb
pop
push
fldenv
js
loopne
das
cmpsl
stos
inc
push
cmpsl
les
das
fwait
lea
lcall
xor
mov
es
pushf
xor
lret
push
lret
or
xchg
push
lret
push
sbb
int
cmp
jo
ja
repnz
pop
fs
out
mov
outsl
es
mov
ljmp
jle
int
mov
enter
pop
data16
add
inc
imul
mov
lods
dec
arpl
sbb
inc
es
scas
out
dec
dec
xorl
jge
loopne
subl
test
inc
jae
lret
push
adc
xchg
mov
pop
cmp
jns
loop
pop
lods
xorb
test
and
dec
lcall
test
cmpsb
outsb
movsb
pop
dec
lds
popa
sbb
jp
jp
mov
xor
adcl
cmp
ljmp
pop
cmp
sbb
push
out
popa
or
leave
or
lret
stc
mov
pop
lcall
je
lds
or
dec
xor
pop
cmp
js
xchg
repnz
rcrb
popa
mov
push
test
xor
stos
cmp
add
mov
imul
rcrb
pushf
sub
in
imul
js
pop
sub
inc
lock
push
add
add
mov
inc
jp
mov
inc
sub
pop
mov
jo
or
mov
loope
xchg
movsl
xorl
jno
popa
push
adc
and
icebp
vpmullw
test
jne
inc
popa
push
adc
and
xchg
vpmullw
movsl
xorl
addl
xor
icebp
stos
rol
xchg
movsl
xchg
mov
test
push
push
gs
and
mov
jp
push
push
xor
add
adc
test
adc
movsb
sahf
mov
test
xchg
loopne
nop
hlt
add
aam
and
xor
add
adc
adc
xor
shlb
and
hlt
add
aam
and
xor
add
adc
adc
xor
rclb
and
fidivrs
or
js
lods
xor
add
lds
jnp
or
aad
nop
xchg
cmp
ljmp
enter
in
adc
cmp
aas
jnp
imul
pop
icebp
je
cmp
add
popa
out
sbb
or
or
xchg
dec
test
mov
and
xor
outsb
pop
adc
inc
mov
add
pop
push
fisubrs
das
xor
jp
incb
sbb
loope
adc
and
in
cmp
pop
adc
dec
das
loop
add
jmp
adcb
int
pusha
lahf
and
cmp
roll
mov
roll
push
xor
add
adc
adc
xor
shlb
in
hlt
add
aam
gs
inc
add
jge
fs
imul
test
in
xchg
in
hlt
in
leave
xchg
out
inc
xor
js
fs
dec
cmp
push
inc
rcrl
test
lcall
adc
or
js
sub
je
inc
xor
shlb
in
hlt
add
aam
and
xor
add
adc
adc
xor
shlb
in
hlt
add
aam
and
adc
cltd
popf
cmp
scas
mov
test
mov
test
test
adc
fistpll
loope
ret
out
cmc
out
aam
jecxz
jno
jl
rorl
adc
test
pop
add
bound
mov
xchg
pop
daa
pop
jo
add
shl
lods
dec
cmp
sbb
adc
sbb
pop
cmp
mov
cwtl
lahf
lret
mov
in
outsb
fwait
mov
pop
lea
xchg
test
test
ds
xchg
inc
in
and
outsb
dec
punpckldq
xchg
dec
repz
mov
fadds
and
inc
pop
std
stc
in
fs
movsb
push
or
popa
push
imul
xchg
andl
sub
enter
rcll
xlat
repnz
rcrb
and
push
in
xor
test
and
bound
test
loope
stos
ss
add
fcmovnu
mov
gs
cmp
addr16
mov
pop
fistps
sbb
inc
repz
cmp
xchg
cmp
inc
inc
orl
or
sbb
pop
jno
push
in
sub
mov
mov
sahf
xchg
and
and
bound
inc
cmp
cmp
ret
lret
mov
lahf
popf
pushf
cltd
idivw
push
sub
sbb
push
shll
sar
xor
sub
xchg
cltd
jae
dec
iret
xlat
sbb
lods
cltd
cmp
push
and
call
push
dec
mov
lret
and
rcrl
in
scas
cmp
push
lret
push
jae
xchg
in
lret
mov
out
ret
xchg
dec
xchg
movsl
negl
adc
orb
outsb
sub
mov
xchg
mov
xchg
imul
cli
insl
and
mov
rol
fimull
mov
in
cmp
sbb
inc
sti
mov
stos
push
inc
inc
std
mov
mov
dec
and
roll
mov
mov
pop
inc
in
mov
lods
xchg
xor
scas
xchg
js
or
cmp
je
xchg
in
jg
sbb
addl
sub
mov
xor
pop
imul
sarb
loope
adc
out
sub
and
nop
push
test
into
mov
cmp
jmp
stos
mov
in
das
cltd
fs
mov
jmp
clc
jne
cmp
popa
loopne
icebp
add
lret
or
mov
bound
xchg
int3
push
pushf
push
cmp
pop
cmp
cwtl
sbb
mov
xchg
fcompl
push
fmuls
push
sbb
sub
push
push
dec
out
cwtl
dec
xchg
adc
out
jmp
pop
adc
push
rclb
sub
or
sbb
xchg
imul
out
js
or
cmp
push
aaa
cmpsb
iret
xor
out
lods
pop
add
push
sub
jle
pop
int3
fmull
add
fdivrl
nop
sarl
xchg
sub
aam
rorb
pop
shll
inc
add
outsb
and
aaa
jge
or
mov
push
adc
lcall
ret
inc
nopl
push
std
adc
sbb
push
push
xchg
add
mov
lret
xchg
fsubl
pop
jno
inc
subb
dec
int
jmp
xor
out
dec
mov
mov
mov
dec
mov
jg
xor
test
jno
imul
test
and
xchg
dec
scas
dec
adc
jo
push
dec
jmp
or
lcall
dec
or
pop
mov
dec
fmuls
cld
xor
pop
add
jg
pop
pop
aam
stos
sti
subl
adc
pop
push
pusha
sub
ljmp
pop
ficomps
pop
mov
xchg
in
aam
sbb
test
inc
mov
addl
adc
gs
clc
out
icebp
rcrb
and
and
xor
push
rdpmc
cmpsb
imul
push
scas
pop
popf
inc
push
lahf
inc
mov
sbb
hlt
or
pop
lds
jns
mov
repz
sarb
imul
pop
jmp
dec
call
jmp
orb
fisttpl
in
fisubl
sbb
adc
mov
pop
pop
orl
xor
cwtl
pop
pop
sub
inc
aas
inc
push
sub
imul
out
dec
scas
lret
and
pop
fisttpll
ljmp
popf
push
mov
imul
lds
adc
pop
inc
fsubr
mov
or
int3
sub
mov
dec
pop
pushf
jb
jmp
xchg
and
fimuls
fcmovu
es
mov
push
and
rclb
lock
xorl
aaa
mov
inc
mov
mov
hlt
or
jne
mov
xor
add
ss
add
sarb
add
lea
addr16
sub
pop
adc
es
ficompl
fwait
sub
sub
mov
inc
lods
sti
pop
pushf
xchg
inc
jo
mov
icebp
aas
dec
pop
jo
add
cli
popf
cld
out
sbb
test
jp
fldenv
cmp
es
sub
sub
sub
xchg
jl
pushf
jnp
scas
pop
test
adc
aaa
adc
xchg
mov
imul
cwtl
pop
shrl
stos
popf
aas
mov
inc
jnp
andb
sub
cs
push
xchg
fs
adc
push
rcrl
arpl
xchg
dec
push
aaa
into
movsl
and
cmp
mov
sbb
in
scas
dec
gs
xor
cld
scas
pushf
cmp
popa
mov
or
add
int
push
loope
pop
mov
add
loopne
mov
dec
and
jae
xchg
mov
mov
jp
xchg
inc
jne
fnstcw
les
imul
pushl
mov
icebp
in
bound
aam
mov
arpl
jecxz
in
jge
pop
aas
fwait
cli
imul
bound
xchg
sub
sub
cmp
rclb
or
dec
cltd
add
pop
shll
or
out
fists
mov
add
mov
lods
nop
int
pop
mov
out
mov
sub
pop
js
sub
mov
jb
popa
add
mov
enter
xor
xchg
mov
stc
aas
inc
xchg
jmp
daa
adc
sbb
add
mov
sub
ja
shrb
add
rcl
out
or
push
add
nop
sub
xor
dec
mov
mov
cli
and
mov
adc
fstpl
inc
test
jo
xor
subb
fisttpll
push
fdivrl
adc
xchg
test
jo
shrb
xchg
and
daa
jmp
sbb
daa
xor
cmp
fwait
sarb
lea
ljmp
cmc
push
leave
jnp
ficomps
js,pn
scas
or
or
dec
xchg
faddl
lret
in
sbb
jp
xchg
ja
push
cltd
mov
cmp
push
pop
add
sarl
imul
jnp
push
insl
fcmovu
pop
sbb
or
adc
xchg
repz
jb
out
add
add
adc
and
cld
push
cs
loop
sbb
lock
cmpb
rcll
sarl
imul
je
mov
pop
in
icebp
inc
ret
xchg
sar
push
jo
xchg
aam
adc
inc
inc
icebp
lods
sbb
push
fnstsw
mov
mov
cmc
andl
or
js
mov
loope
push
daa
jle
jae
xchg
popf
lret
pop
and
jle
es
lds
pop
imul
adc
cmp
adc
sbb
mov
jnp
push
xor
jne
mov
outsb
test
sbb
repz
push
jo
sahf
jns
mov
mov
ds
pop
add
insb
mov
mov
xchg
push
xchg
icebp
js
sbbl
push
push
mov
dec
dec
xchg
das
ffree
addl
lods
or
inc
in
cmp
das
add
je
das
xchg
out
cmp
lahf
std
xlat
aaa
xchg
adc
in
push
imul
loopne
ret
add
mov
orb
push
dec
negb
push
in
sbb
insb
jl
andl
mov
jno
adc
jnp
lret
movsb
in
fs
or
jns
add
pop
xchg
into
rcrb
repz
mov
inc
xchg
cmp
jno
fmull
ljmp
clc
or
cmp
add
lods
out
mov
push
sbb
pop
xchg
das
lods
sbb
ret
mov
mov
pop
fildl
dec
pop
clc
jnp
cmc
popa
inc
cmp
repz
sti
lods
xor
dec
mov
stos
mov
stos
ret
mov
out
outsb
fstpl
mov
pop
int3
jns
mov
jp
rcll
push
push
rolb
faddp
scas
and
xchg
xchg
lea
scas
sub
add
ljmp
imul
inc
outsl
dec
repnz
sbb
repnz
repz
sarl
mov
add
inc
dec
mov
adc
xchg
sbb
ss
in
cmp
imul
inc
and
adc
scas
sbb
gs
sahf
xor
xor
mov
inc
mov
cwtl
pushf
push
pusha
add
mov
leave
test
mov
dec
cwtl
int3
jg
lcall
xchg
mov
mov
in
push
dec
xchg
ja
mov
std
dec
fsubs
shll
mov
sbb
out
push
mov
les
adc
arpl
push
push
or
add
repz
dec
sub
mov
les
sbb
dec
mov
adc
shl
push
into
js
dec
or
dec
xor
add
call
adc
shll
lods
mov
cli
data16
xor
jecxz
add
push
mov
shrb
movsl
cmp
xchg
in
pop
cmpsl
xorl
incl
mov
inc
ds
mov
and
mov
push
sub
dec
jmp
gs
add
dec
enter
xor
mov
push
jecxz
sti
lods
dec
mov
jmp
fstps
sbb
fidivrl
cld
imul
push
xlat
mov
ja
jb
jge
cmpsl
mov
add
andb
fisttpll
stos
mov
jmp
xchg
mov
stos
hlt
push
push
push
std
xchg
ret
jecxz
xor
rcrb
ss
sbb
jp
in
adc
adc
cmp
inc
clc
xchg
mov
sub
aaa
mov
inc
lds
and
and
mov
pop
aad
jp
xor
dec
icebp
mov
push
pop
mov
add
cmp
mov
sbbl
dec
test
adc
cmpsb
sub
je
xchg
in
addl
arpl
xchg
push
scas
push
pop
cs
mov
ret
insl
xlat
adc
mov
xchg
ss
jmp
xor
es
dec
cltd
ret
mov
loope
fistps
data16
mov
mov
in
inc
and
xchg
xor
movsl
mov
notb
push
outsl
mov
je
cwtl
push
pop
aaa
sub
mov
in
inc
lods
das
add
or
cmp
je
out
stos
push
pusha
add
xchg
lea
add
push
pushf
push
fs
mov
cmp
cmp
cmpsb
iret
or
and
sbb
insl
push
cmp
sbb
mov
mov
repnz
inc
in
mov
mul
push
rorl
pop
jae
jmp
push
aaa
in
pop
test
dec
loopne
jne
cwtl
dec
jmp
movsb
mov
scas
sbb
scas
aad
pop
test
inc
aas
mov
push
pop
xchg
dec
xchg
sub
inc
pusha
jmp
push
test
or
insl
sbb
mov
mov
lcall
fcmove
cs
es
loopne
mov
popf
std
jo
scas
mov
shll
insl
pop
xor
and
mov
xchg
enter
inc
mov
stos
in
sbb
push
dec
mov
add
inc
movsb
mov
mov
decl
pop
in
lea
imul
shlb
clc
in
xor
rcll
xchg
lcall
add
adcl
inc
adc
ds
cli
insb
xlat
or
push
or
jae
lds
push
hlt
sbb
insl
movsl
fcompl
sbb
call
pop
test
add
je
lret
sub
xchg
cmpsl
jns
orb
cmp
mulb
xor
push
mov
mov
ja
pop
sbb
push
xor
cli
push
cmp
popa
out
mov
lahf
dec
int3
ffree
jbe
push
adc
andb
rcl
imul
xor
dec
cmpsl
test
test
pushf
repz
aas
cli
ds
insl
add
fstl
repnz
mov
sarl
adc
pop
push
lock
stc
lea
sub
xchg
sbb
in
sti
inc
lods
roll
pop
push
inc
adc
add
incl
mov
out
adc
mov
adc
shr
push
mov
or
je
mov
push
test
ss
add
lods
pushf
sub
sbb
jnp
cs
insl
pop
dec
xlat
fsubr
in
cltd
repnz
jecxz
jmp
jge
cmpsl
imul
xor
sub
test
xchg
push
pop
jbe
and
gs
mov
cli
es
inc
sar
adc
subl
push
lret
movsb
pop
cld
ret
xor
pop
test
faddl
mov
jbe
pop
popa
insb
out
xchg
aad
add
push
aam
in
aaa
sahf
popa
mov
ss
into
and
shl
inc
xor
jb
xor
dec
call
lcall
or
dec
adc
pop
fadds
inc
cld
cmp
stc
dec
add
push
jbe
mov
ret
and
jb
jp
jmp
jmp
lret
pusha
jo
in
je
out
sub
pusha
mov
xor
push
gs
int
shll
cmp
stos
shll
aam
stos
loopne
xchg
cmp
adcl
sub
push
je
negb
mov
movzbl
stos
mov
cs
cmp
pushf
fadds
inc
xchg
or
mov
mov
cwtl
ljmp
mov
xor
xor
mov
dec
sub
jne
mov
mov
jnp
out
rcrb
out
daa
cli
push
push
lea
dec
sbb
dec
imul
xchg
xor
andl
jmp
inc
lods
sub
mov
rclb
sbb
mov
in
gs
aaa
dec
xorb
pop
cmc
push
dec
lods
movsb
loopne
movsl
loope
adc
pop
jmp
mov
push
xchg
test
cmp
sbb
sahf
nop
push
fisubs
js
add
popf
mov
pop
fildll
xor
and
push
pusha
inc
mov
push
xor
lock
mov
mov
jge
fisttpl
xchg
adc
mov
test
movsb
leave
fstpl
divb
fistps
mov
rcrb
fucom
inc
sbb
or
and
repz
dec
loope
fdiv
adc
insl
stos
jp
imul
movsb
mov
adc
into
test
cltd
mov
shrb
push
mov
ret
jl
xor
or
pop
inc
test
daa
pop
lods
mov
mov
pop
and
mov
subb
pop
popa
out
sub
ja
ss
mov
je
imul
xor
js
cli
xchg
lds
add
add
jnp
loop
aas
in
fs
xchg
dec
xchg
lcall
lods
jp
addr16
ja
pop
es
dec
add
loopne
xchg
cmp
ja
ret
dec
in
xchg
movsb
ret
nop
or
fstl
sub
dec
mov
jae
test
aaa
lea
or
test
pop
xchg
loope
dec
pop
loopne
push
and
cmp
pop
mov
pushf
dec
or
outsb
dec
cmp
pusha
xchg
push
pop
in
jl
pop
loope
cld
nop
mov
sbb
lret
popa
mov
gs
jp
jg
scas
stos
lahf
mov
repz
xor
or
sbb
cltd
add
mov
dec
popf
jbe
dec
dec
insb
mov
icebp
ret
pop
cmp
ja
xor
sub
lret
adc
fisubrs
or
cmp
shufps
mov
mov
andl
mov
pop
out
push
sub
add
jns
addl
mov
dec
pop
test
sbb
cli
cld
out
mov
sub
mov
ss
sub
js
in
jge
jmp
jno
jbe
mov
push
imul
je
ret
in
mov
mov
xchg
fdivrl
lods
or
prefetchw
push
pop
xchg
andb
push
jge
sub
popa
pop
add
pop
inc
mov
dec
push
popa
leave
mov
leave
inc
cmp
inc
fidivs
jl
and
repz
add
jb
mov
mov
xor
adc
scas
sti
pinsrw
lods
adc
xchg
xor
mov
into
sbb
imul
loop
shrb
negl
pop
shrb
in
jge
sub
mov
mov
mov
pop
mov
ss
pop
push
rcrl
and
xor
iret
sahf
outsl
mov
out
inc
push
mov
cmp
push
dec
lahf
int3
pop
and
into
mov
sub
in
sbb
pusha
cwtl
mov
bound
sbb
rcrl
filds
int
jne
aad
pop
xor
ds
mov
jmp
push
bound
outsb
sahf
call
jle
imul
mov
in
mov
pop
insl
imul
cmp
sub
pop
xchg
movsl
dec
add
ljmp
fidivrs
aas
aas
ret
mov
mov
lods
pop
fs
inc
fisttpl
inc
cmc
into
dec
pop
insb
cmp
mov
aas
loopne
mulw
frstor
pop
ja
mov
outsb
mov
test
cmp
jg
push
testl
mov
push
adc
jge
fisubl
xchg
mov
inc
je
mov
jl
push
xor
push
pop
sub
sub
ds
fnstcw
cmpsb
shrb
sub
idivl
loopne
xchg
xchg
or
xchg
xor
xor
aas
shll
jbe
adc
cs
pop
add
imul
pop
dec
out
push
sarb
lahf
jnp
call
xchg
stos
fwait
addr16
lret
cmp
or
cmovbe
and
into
mov
xor
hlt
jle
icebp
push
adc
in
loopne
gs
test
roll
stos
je
ss
stos
and
jo
xor
mov
pop
scas
out
jg
addl
inc
int
push
sub
xor
lods
adc
xchg
add
in
imul
or
dec
add
in
fwait
mov
hlt
mov
idivb
ljmp
or
push
fsubl
pop
inc
mov
ss
decl
repz
rorl
mov
fcmovnbe
push
jg
repz
cld
xor
aam
pop
jb
mov
je
arpl
sbb
sahf
mov
scas
inc
mov
inc
jnp
sub
xchg
clc
cltd
roll
inc
sub
jg
lods
mov
test
sbb
xchg
cmp
into
lcall
rolb
leave
pop
ret
mov
inc
cld
lret
stc
cmp
movsl
pop
je
mov
jl
sub
sbb
sarl
fwait
xchg
and
repnz
outsl
cmp
or
xor
stos
in
mov
lea
mov
inc
pop
roll
std
mov
mov
ljmp
frstor
mov
out
adcb
je
sbb
ljmp
push
lcall
aad
enter
mov
lds
push
loope
out
dec
cli
addr16
daa
loopne
lea
adc
mov
xchg
push
mov
xlat
dec
fxtract
adc
imul
test
std
lahf
jge
push
adc
mov
dec
icebp
push
in
stos
loopne
sub
popf
shl
cli
or
mov
xchg
movl
lahf
lock
test
testl
call
fs
mov
das
dec
dec
adc
dec
shrb
and
stos
in
fnstcw
stos
cmp
into
lret
xchg
cmp
push
dec
enter
jle
mov
movzwl
xchg
out
js
or
in
pop
xor
lret
ja
mov
xor
iret
bound
popf
jb
mov
mov
cmp
or
clc
sbb
aad
add
and
cld
stos
rolb
adc
adc
xor
shlb
in
hlt
add
aam
and
xor
add
adc
adc
xor
shlb
in
hlt
add
aam
and
mov
test
pusha
in
je
inc
xor
and
xchg
loopne
nop
hlt
add
aam
and
xor
add
adc
adc
xor
shlb
xchg
sbb
int3
sbb
in
pop
cld
dec
test
sti
inc
fsts
cmovg
pop
jecxz
iret
jl
or
sbb
sub
cmp
int3
jg
outsl
in
pop
cld
dec
mov
pushf
das
lods
pop
mov
out
insb
jl
or
sbb
int3
data16
inc
cld
push
mov
pushf
aaa
lods
pop
mov
aad
stos
sbb
or
outsl
shrl
mov
sub
testb
into
test
data16
adcl
and
and
adc
add
push
xchg
push
xchg
jg
pop
xchg
iret
or
cmp
jp
insl
ret
mov
xchg
mov
fldcw
das
imul
bnd
das
jl
stc
dec
or
popa
cmp
int3
das
sti
outsl
das
pop
sti
jg
pop
arpl
cmc
inc
mov
adc
in
sbb
aam
mov
lahf
inc
pop
mov
add
push
dec
aaa
push
dec
jb
out
loope
test
rcrl
and
pop
add
and
sbb
pushf
lret
call
pusha
ds
movq
js
dec
cld
push
mov
pushf
das
lods
push
mov
imull
or
sbb
sub
cmp
test
pop
mov
inc
ret
jae
bound
cmp
mov
pop
cld
dec
lahf
dec
loop
pop
test
das
mov
sbb
xchg
mov
stos
jl
sti
int
rolb
ljmp
cltd
cmp
push
pushf
das
lods
pop
mov
out
insb
fistpll
mov
cmp
int3
jg
outsl
in
pop
cld
dec
mov
pushf
das
lods
pop
mov
out
insb
fistpll
mov
cmp
int3
jg
call
pop
add
cld
mov
popl
lds
lea
out
or
dec
push
mov
dec
divb
in
jle
daa
xchg
out
aaa
imul
push
imul
push
cmpsl
out
or
imul
or
mov
mov
xor
mov
fidivrs
xchg
test
mov
mov
dec
scas
popa
jne
mov
fildll
mov
mov
popa
sub
scas
into
xchg
lret
test
and
mov
jecxz
inc
xchg
pushf
push
push
gs
pop
inc
cmc
cli
outsb
pop
jne
clc
and
mov
mov
out
leave
cli
add
inc
mov
xchg
bound
or
je
xchg
cmc
dec
jno
scas
sub
mov
and
sub
jae
dec
xlat
pop
sub
mov
push
lret
sub
xchg
divb
lcall
or
popf
jmp
mov
mov
add
hlt
lahf
pop
call
sahf
nop
and
int3
sbb
pop
addl
cltd
adc
imul
fmull
xchg
lahf
jne
in
sbb
or
mov
aad
jl
adc
and
gs
add
inc
xchg
shl
xchg
pop
out
mov
cmpsl
push
mov
push
and
and
mov
inc
sub
mov
inc
mov
ds
or
aaa
cmp
int
or
leave
cli
ret
mov
test
xchg
movsl
stos
std
and
pusha
xchg
push
push
out
ss
and
fistl
add
ficoms
push
les
int3
adc
xchg
push
sahf
dec
dec
testb
xchg
cmp
and
ss
loope
jne
fcmovnbe
jge
mov
insl
inc
cli
movsb
cs
into
mov
jg
sbb
cmp
iret
in
stc
mov
add
pushf
push
and
or
lret
dec
lock
mov
out
jns
mov
sub
pop
cmp
mov
fcomps
push
shll
cmp
add
jmp
jae
adc
xchg
add
xlat
arpl
inc
lds
sub
cmc
mov
call
roll
inc
fldz
hlt
ss
mov
dec
jnp
inc
int
imul
mov
jg
decl
fwait
pop
iret
xor
aad
push
cmp
movl
jb
jge
loopne
push
mov
sbb
mov
dec
push
cmp
stos
pusha
sub
pop
sbb
xchg
cmpsl
and
or
pop
scas
lahf
cmp
ljmp
in
fld
mov
ss
loopne
dec
fs
or
icebp
shl
ds
xor
and
xchg
pop
hlt
pop
dec
outsb
mov
xorl
push
cmpsb
hlt
pop
push
jge
xchg
in
std
test
inc
inc
jae
and
lcall
dec
scas
out
push
lcall
ljmp
imul
and
sbb
and
ds
fsubrs
inc
push
mov
ret
out
pop
cmc
fisubrs
dec
dec
ss
mov
xlat
sbb
imulb
hlt
testb
pop
lret
insl
pop
pop
movsb
xchg
nop
xor
imul
inc
pushf
mov
sub
and
cmpsl
cmc
mov
pushf
lods
inc
cs
dec
loop
fwait
jnp
or
fbstp
cli
xchg
inc
hlt
adc
push
add
and
flds
rclb
cmp
ja
jp
mov
xchg
jge
cmp
mov
jle
sarl
cwtl
adc
lret
cs
xchg
xor
jns
dec
bnd
add
lahf
adc
xor
jno
push
neg
test
sub
pop
sahf
jne
leave
xchg
lahf
fwait
mov
stos
and
push
dec
aad
or
repnz
mov
icebp
xor
and
push
lods
and
xchg
and
enter
mov
fstpt
mov
mov
xchg
mov
jno
in
sbbl
cmpb
mov
add
cmp
loopne
sub
sub
push
fistpl
jmp
clc
js
ja
push
pop
push
clc
inc
movsb
test
cmp
orl
lahf
and
sub
fcom
push
cmc
cs
dec
fmulp
xchg
inc
lcall
sahf
cmp
js
push
cmpl
lret
jecxz
cld
outsb
in
aas
ds
std
lods
cmp
int3
push
pop
mov
fiaddl
add
lahf
aas
sbb
xor
xchg
jmp
fistpll
dec
push
cwtl
bound
sub
test
out
stos
arpl
fnsave
dec
push
jbe
or
int3
and
jl
cs
pop
aad
insb
js
gs
imul
or
imul
pusha
jb
sbb
push
pop
dec
jg
or
in
cmc
mov
dec
sbb
mov
test
out
iret
xorl
sti
pop
rcrl
cs
jbe
lods
sbb
cs
mov
call
rcll
push
out
dec
andb
push
mov
sub
add
outsl
mov
mov
xchg
add
push
pop
jecxz
mov
lret
imul
popf
or
fcoml
inc
lods
cs
pop
test
decl
fcomps
lret
sbb
push
mov
arpl
aam
cmpsb
repz
mov
add
or
popf
adc
int3
jl
repnz
sub
test
arpl
pop
pop
or
out
repnz
shl
push
mov
cmp
sub
imul
jo
push
lea
jb
shll
cld
scas
mov
ror
push
int3
jmp
or
push
push
popf
push
rcl
fmul
sub
aaa
es
push
nop
dec
les
mov
sbb
jns
or
sub
or
and
aam
mov
cli
or
xchg
loopne
in
mov
shl
pusha
inc
mov
cld
scas
xchg
loope
dec
pop
and
jge
clc
xchg
mov
dec
movsb
stos
sub
insb
and
jmp
xor
xor
jg
xor
repnz
adc
in
or
mov
out
fsubl
pop
adcb
imul
push
sbb
scas
mov
clc
pusha
push
pop
pop
sahf
sbbl
xor
xchg
and
testl
mov
pop
adc
jno
int3
jge
icebp
adc
js
pop
ror
xor
adcb
out
mov
ljmp
aad
lret
loop
mov
adc
push
jecxz
out
add
dec
fiaddl
sbb
fldt
or
mov
cmp
push
push
dec
xor
push
pop
adc
fwait
cmp
xor
push
fwait
out
sbb
clc
xchg
and
mov
in
xor
xlat
dec
mov
and
sti
inc
add
dec
inc
inc
mov
adc
adc
addr16
push
in
lock
incb
lret
xchg
mov
sbbb
pop
cmc
ja
cld
pop
xchg
rorl
aam
std
xchg
fsubp
repnz
mov
int
mov
cmp
xor
outsl
inc
iret
xchg
sbb
mov
in
fcmovnb
or
lret
ljmp
jp
sti
inc
push
repnz
sbb
into
pusha
xchg
dec
ss
sbb
dec
jecxz
mov
test
aam
mov
mulb
lods
out
pop
mov
xchg
scas
hlt
inc
cmc
out
sbb
push
cmp
es
cmc
leave
jns
cmp
cmp
and
test
aam
cmp
xorb
stc
imul
pop
mov
mov
mov
mov
std
mov
xchg
hlt
dec
sbb
js
xchg
repz
pop
fdiv
mov
dec
push
cmc
fidivrs
outsb
jmp
leave
int3
adc
push
add
loop
insb
mov
sub
pop
mov
cmp
cmp
and
jle
sbb
rorb
fadd
dec
dec
cli
mov
inc
inc
rol
mov
pop
push
pusha
cmpsl
stc
xchg
inc
scas
movsb
lds
add
or
mov
sahf
push
je
push
inc
add
mov
clc
test
mov
adc
repz
enter
sub
sub
inc
and
sub
bound
test
push
adc
ljmp
push
imul
hlt
fadds
xor
insl
inc
dec
dec
or
sbb
push
xchg
cld
mov
mov
cld
mov
ret
sbb
rcl
test
fsts
mov
in
push
mov
lcall
repnz
lds
sbb
mov
cmp
je
xor
jecxz
cli
pop
adc
pusha
xchg
sbb
fmull
dec
je
mov
xor
cmp
xchg
cmp
in
movb
fadds
arpl
jp
ret
das
imul
stc
in
xchg
inc
jbe
mov
lock
adc
jns
mov
pop
mov
dec
daa
dec
sbb
xor
mov
ret
rolb
push
lods
dec
mov
into
es
xor
cmc
mov
xchg
push
in
lret
push
rcrb
iret
shrl
loop
aas
xor
and
ss
jl
imul
ret
out
sbb
adc
adc
imul
repnz
cltd
loopne
add
ja
divb
les
jo
push
mov
pop
jns
leave
fstl
jbe
xchg
aam
dec
lods
loopne
mov
iret
fists
push
mov
sub
repz
xlat
ss
mulb
pop
popf
xor
in
aas
arpl
imul
mov
dec
rcrl
mov
lds
cmp
out
popa
fcoml
sub
and
popf
gs
or
adc
sbb
pop
data16
cld
bound
add
dec
ja
leave
and
add
mov
mov
cmp
sbb
pushfw
std
lock
sub
pop
scas
mov
mov
out
das
mov
negl
cli
xor
mov
sub
testb
ret
mov
jb
inc
sbb
lahf
sti
cs
sub
aaa
inc
sub
add
or
into
xchg
xchg
pusha
dec
sbb
dec
lods
mov
jp
pmulhw
push
pop
call
adc
out
inc
adc
stos
into
testb
xchg
test
sbb
sub
and
sahf
lcall
aam
dec
daa
jno
mov
sahf
sbb
push
mov
dec
inc
sti
cmp
xlat
cmp
lahf
lods
sbb
test
scas
cmpsl
ret
add
and
sbb
mov
push
sbb
popa
push
cmp
icebp
rolb
popa
mov
sbb
cmp
in
jmp
ret
push
sbb
sbb
cmp
movsb
adc
test
mov
and
push
ret
pop
scas
xchg
pop
mov
in
dec
and
add
mov
xchg
xchg
pop
add
jl
mov
ret
xchg
jl
test
lds
addr16
lret
mov
fsub
mov
pop
cmp
lods
dec
sbbb
pop
pop
aas
mov
jnp
loop
dec
jmp
jbe
leave
add
xchg
fwait
es
repnz
add
push
sub
sbb
fisubrs
dec
cwtl
mov
mov
dec
mov
and
pop
dec
lods
cli
sti
pop
into
movsb
add
lea
movsb
jg
lea
xchg
dec
movsb
sub
clc
icebp
imull
xor
std
shlb
fmuls
jb
adc
xchg
fwait
push
outsl
enter
adc
std
xor
jno
push
outsb
xchg
and
aas
lods
mulb
fs
jge
xor
xchg
or
add
jae
and
js
inc
xor
mov
sbb
popf
movsl
leave
gs
aas
push
and
insl
xchg
lcall
xchg
ja
fwait
inc
ss
ljmp
sub
rol
shll
lock
push
sarb
sbb
xchg
xchg
dec
mov
dec
cmp
leave
cmc
ret
mov
lods
push
mov
add
cmpsb
jecxz
fmuls
inc
or
sbb
xchg
mov
les
cld
push
adc
dec
pop
addr16
addr16
enter
xchg
xchg
sbb
mov
cmpsb
jle
rol
div
push
incl
adc
mov
mov
cmp
jp
cmp
hlt
test
addb
sbbl
addl
xor
bound
lret
cltd
mov
jns
add
int
dec
insl
lds
xchg
xlat
inc
aam
dec
jbe
dec
cs
inc
xchg
fs
xor
sbb
xor
out
ficomps
jge
shll
xchg
vpmaxsw
jo
loope,pn
mov
orl
les
xchg
std
enter
or
push
mov
mov
out
dec
out
jb
adc
repnz
flds
push
test
out
jo
aas
imul
dec
ss
jp
mov
and
xchg
mov
enter
push
aas
fs
add
mov
arpl
pop
int
jl
xor
jno
mov
rcrb
lds
push
cmp
cmp
xor
fwait
add
push
xor
sbb
cmp
jae,pt
nop
filds
lret
idivb
mov
test
xchg
or
adc
outsb
jns
push
add
iret
xor
orl
lcall
pop
xor
repnz
in
sti
int3
pop
in
inc
shlb
xor
mov
lds
jecxz
pop
repz
jl
pop
inc
pop
stos
ficomps
ljmp
ret
repnz
out
movsb
push
cmp
cwtl
or
mov
mov
cmp
push
sub
jge
jecxz
or
or
pusha
cmp
adc
rcrb
xor
xchg
cld
movsb
push
xlat
xchg
push
ljmp
subb
add
stos
sbb
pop
jmp
aaa
popa
lahf
movsb
push
stos
testl
lcall
iret
mov
syscall
leave
stos
xchg
mov
mov
xchg
dec
cs
repnz
in
into
and
addr16
push
imul
mov
mov
pop
mov
fwait
mov
push
mov
ret
push
jbe
pop
stos
push
xchg
pusha
ds
int
pop
in
scas
add
mov
shrl
cld
mov
pop
leave
idivb
roll
pusha
or
stos
pop
jl
mov
sti
mov
dec
cmpb
jae
add
pop
mov
mov
pop
mov
sbb
pop
fisttps
gs
fisubrl
lea
pop
push
lock
adc
je
popa
xor
repnz
sub
push
outsl
xor
lret
in
push
mov
dec
sub
adc
mov
sarb
addr16
cmp
cld
adc
scas
ret
push
sbb
cltd
stc
pop
aaa
pop
jmp
pop
jecxz
cmp
xchg
ja
lret
in
sbb
aas
lods
pop
sarb
adc
xor
jae
ror
lods
mov
mov
xor
jp
jp
jnp
btc
daa
jnp
stc
int
rclb
push
mov
pop
ret
push
sbb
cld
das
add
std
sti
fwait
xor
ficomps
scas
cmp
lods
test
cld
pop
dec
xchg
loope
ret
cmpsb
or
mov
outsl
push
adc
lock
fxtract
test
or
insl
sub
scas
aaa
cmp
mov
mov
aas
inc
nop
xor
mov
aaa
daa
sub
push
mov
lret
dec
jle
mov
jbe
into
sub
mov
daa
fsubs
iret
add
ds
fstpt
lds
outsl
pop
icebp
mov
movsb
std
jl
fldl
fists
in
lock
inc
push
insl
mov
dec
not
ljmp
sub
adc
cmp
sub
bnd
pop
cmpsb
jo
jp
pop
xor
hlt
mov
fs
add
dec
cmp
dec
pop
mov
push
sahf
and
sub
stos
push
sbb
repnz
stos
push
jb
sbb
stos
in
push
xor
insl
imul
cmp
lahf
cmp
lcall
mov
scas
sbb
push
test
mov
push
jns
mov
in
fisubs
dec
or
jge
addr16
sbbl
push
pop
or
pusha
adc
xchg
and
out
lret
mov
mov
cltd
dec
jne
aas
mov
push
rorl
mov
push
sbb
lahf
int
push
push
jae
scas
inc
jbe
arpl
sarb
jmp
jp
inc
fwait
inc
rcll
jmp
addr16
call
orl
cmpb
or
fwait
pop
btc
int3
xor
jo
xchg
fbstp
aam
fidivl
and
sub
les
stc
jno
movsb
jp
or
jne
mov
mov
sub
pop
sbb
enter
inc
test
push
push
inc
pop
aaa
dec
data16
dec
les
jge
shlb
inc
out
push
pusha
push
aas
and
dec
mov
adc
xchg
adc
js
add
fcoms
add
pop
sbb
imul
mov
jge
sar
sbb
mov
jmp
push
or
jno
lcall
jnp
hlt
pop
aam
ror
jmp
jecxz
xchg
loopne
outsb
dec
mov
or
insl
lods
lret
push
pop
mov
call
fstl
mov
cmp
mov
jl
mov
rcrl
mov
xor
mov
ja
adc
sbb
or
mov
lock
xchg
negb
xchg
out
clc
repz
push
xchg
mov
ljmp
inc
insb
xor
push
gs
in
sbb
push
and
or
xor
adc
and
jle
cmpsb
movsl
out
mov
cmp
and
call
mov
daa
pop
pop
mov
cmpsb
sbb
jb
sahf
cmp
loopne
sbb
push
cmc
popf
mov
sti
mov
das
test
imul
push
lea
jp
in
cmp
aam
rol
stos
add
inc
cmp
inc
mov
dec
cmp
popf
xor
flds
cli
movsl
sti
add
or
or
in
dec
cmp
inc
out
xchg
jge
pop
jmp
dec
add
mov
xchg
mov
fisubl
lock
mov
mov
push
add
rolb
jnp
dec
pop
aas
fdivs
outsl
sub
fstps
lret
and
es
add
out
mov
cmp
mov
enter
push
cwtl
ret
xor
lods
adc
cwtl
inc
pop
pushf
pop
xor
fdivs
pop
dec
cmp
ds
or
adc
cmpsb
loopne
adc
daa
scas
inc
or
stos
sbb
dec
mov
das
jno
cs
in
cmpsb
pop
daa
and
xor
insl
outsb
movsl
or
push
push
ret
ret
xchg
icebp
or
pop
icebp
push
mov
xchg
jle
insb
push
xchg
and
popf
aam
cwtl
in
repz
pop
lock
out
inc
icebp
xor
rorl
dec
dec
nop
sub
sbb
pop
das
dec
daa
and
add
xchg
jg
dec
pusha
fmuls
or
in
xchg
sub
xchg
push
addr16
xor
jno
pop
popf
push
mov
push
xchg
cld
nop
stos
popa
push
inc
pusha
scas
cli
in
push
adc
inc
add
or
and
imul
jo
jmp
pop
xor
fisttps
call
inc
push
xor
adc
mov
movsl
js
push
dec
dec
jb
das
push
mov
mov
lcall
jl
loop
jnp
mov
xchg
aas
lahf
cmp
mov
xchg
xchg
jb
out
in
adc
and
xchg
pushf
ljmp
mov
lahf
jb
insb
jne
iret
arpl
packssdw
pop
xchg
mov
bswap
adc
dec
or
mov
mov
fadds
xor
ss
in
xchg
sbb
mov
fisubl
mov
jl
pop
ds
movsl
in
icebp
fistl
inc
sti
out
sub
fisubrl
pop
outsb
stos
mov
and
std
test
stos
mul
aad
and
jb
adc
cld
xchg
scas
aaa
or
jns
notl
fdivp
arpl
cmp
and
repnz
mov
inc
push
pop
push
push
std
hlt
xchg
testl
adc
mov
inc
ficoms
pop
sbb
imul
das
xchg
fsubrp
push
mov
lahf
inc
cmp
jle
jl
jg
inc
push
in
cmp
je
mov
adc
sub
mov
pop
rcrl
mov
cmp
jmp
test
dec
inc
mov
fiadds
and
ljmp
pop
int
push
cmp
xchg
adc
or
mov
outsl
push
das
adc
lret
insl
and
add
in
cmpsb
cmpps
fwait
jns
insl
es
movsl
fwait
je
push
stos
cmp
mov
stos
outsl
shll
pushf
das
lods
pop
mov
out
insb
fistpll
mov
cmp
int3
jg
outsl
in
pop
cld
dec
mov
pushf
das
lods
pop
mov
out
insb
fistpll
mov
cmp
int3
jg
outsl
in
pop
cld
dec
mov
popf
das
lods
pop
mov
out
insb
fistpll
or
sbb
sub
jg
outsl
in
pop
cld
dec
mov
pushf
das
sub
cmp
mov
mov
mov
aam
les
inc
xchg
lods
mov
xor
mov
cmp
xor
jae
jae
cmpl
ret
std
shll
mov
inc
sbb
push
insl
arpl
xchg
lods
mov
rcl
jecxz
repz
loop
dec
inc
inc
push
jle
sub
add
sub
out
call
repz
rclb
fbld
dec
add
adc
ss
mov
ret
adc
xchg
jp
mov
scas
imul
mov
shlb
push
mov
test
nop
int3
cmp
xchg
insl
loopne
ss
inc
jge
mov
ret
std
incl
adc
aad
and
fcomi
mov
mov
push
jle
insb
inc
lock
cmpsb
or
test
aad
int
outsb
cmp
xor
out
mov
sub
outsb
sbb
lds
loop
adc
bound
leave
fdivrl
mov
ret
std
shr
jecxz
repz
add
xor
push
push
xchg
arpl
and
out
xlat
lods
iret
fdivrp
mov
movsb
mov
test
jnp
push
aaa
adc
sbb
sbb
sub
clc
shr
xlat
cld
sti
test
xchg
mov
jecxz
mov
pop
js
push
sub
insb
es
jmp
ljmp
shr
jecxz
repz
cmp
xor
arpl
dec
cmpl
ret
std
shr
jecxz
repz
cmp
xor
arpl
dec
cmpl
mov
xchg
addl
adc
dec
inc
mov
pop
add
jge
xlat
lahf
fdivrs
test
enter
mov
mov
jo
mov
sub
stos
add
imul
divb
cs
lds
or
mov
cltd
stc
lea
inc
mov
and
repz
movsl
and
jp
das
add
push
mov
xchg
aam
inc
stos
and
enter
or
mov
inc
xor
xchg
pop
fildl
mov
mov
int3
out
ret
negb
mov
mov
cmp
test
cli
in
jo
mov
mov
sbb
mov
dec
cmp
jb
mov
fcompl
movsl
dec
sub
jne
fnstcw
mov
clc
divb
inc
ffreep
and
je
fdivs
aad
fimuls
fsubrs
mov
mov
pop
repnz
jno
cwtl
inc
pop
mov
cmp
mov
nop
cld
pusha
jmp
fiadds
ffreep
mov
push
pop
aad
xchg
mov
idivl
in
jne
icebp
sbb
rcrb
inc
sti
adc
sahf
mov
iret
ja
mov
sbb
or
inc
push
fs
push
adc
movsb
in
inc
es
and
or
out
stos
subb
pop
mov
stos
pop
xchg
or
lods
mov
mov
out
and
cli
adc
out
in
and
xchg
mov
fbld
xor
mov
movsb
inc
sbb
ja
shll
fs
repnz
dec
and
es
inc
bound
scas
pop
in
cmc
insb
sbb
add
mov
xchg
in
jbe
cmp
xchg
orb
jbe
test
jo
xor
inc
repz
andb
adc
jmp
pop
jge
jecxz
ficoms
mov
jne
popa
xchg
enter
lret
call
lcall
mov
and
cmp
aad
xchg
int
lret
push
imul
and
call
xor
adc
and
out
aas
call
jns
pop
fiaddl
mov
cld
sbb
jmp
daa
adc
push
and
ss
mov
and
mov
sbb
loope
aas
sbb
pop
mov
sub
add
xor
dec
scas
adc
mov
call
lret
shrb
stos
cltd
into
add
jg
jle
fcoml
jl
cwtl
or
cmp
sahf
sub
aas
sub
mov
or
ret
icebp
daa
dec
mov
cs
sub
and
call
gs
xor
dec
std
cmc
add
movsb
jmp
enter
lea
and
inc
repnz
repz
sub
dec
dec
rorl
sub
pop
and
insl
push
iret
add
or
loope
insb
inc
xchg
cltd
cwtl
mov
pop
in
movsb
scas
mov
and
int3
jbe
aaa
dec
adc
pop
jge,pn
push
repz
add
in
mov
cltd
cmpsb
es
popf
pop
xor
or
push
adc
pop
sbb
test
jmp
int
mov
cmp
and
daa
jle
loope
das
cmp
fs
or
jp
clc
push
mov
mov
jmp
arpl
mov
xor
pop
sbb
or
xor
mov
stos
xor
jb
pop
cmp
push
test
add
popf
out
fucomi
js
test
and
shrb
mov
mov
lock
mov
aas
mov
dec
adc
roll
movsb
lret
cli
push
daa
lods
jg
push
xchg
inc
push
daa
cmp
jg
inc
call
jmp
loopne
popa
nop
lret
jnp
or
mov
out
pop
outsb
sub
sahf
movsl
dec
das
std
mov
imul
shl
and
mov
test
dec
inc
sbb
jo
cmp
insl
imul
inc
pop
cmpsl
jp
int
push
mov
mov
inc
mov
or
add
hlt
stc
mov
sbb
jp
ljmp
loop
incl
xlat
js
lret
push
addr16
ret
fbstp
push
xchg
cmp
jae
cs
out
pop
std
inc
mov
mov
jl
mov
mov
mov
add
nop
loopne
popa
pushf
xchg
fs
lods
mov
mov
shlb
mov
ja
mov
or
lods
push
xor
adc
js
pop
outsl
nop
fdivs
push
fs
popf
nop
add
mov
mull
lahf
xchg
mov
shlb
xor
fisubl
les
inc
inc
lods
fldl
xchg
xor
lret
aam
cmp
add
sub
out
mov
aam
data16
inc
sarl
jmp
mov
std
and
out
sbb
push
out
fcmovnb
pandn
pushl
mov
test
jo
test
out
out
rcrb
jno
daa
repnz
sbb
pop
pop
inc
fdivs
ljmp
xchg
push
sbb
xchg
push
scas
fmulp
cmp
mov
jp
test
xchg
stc
cli
xchg
sbb
add
mov
lahf
mov
add
stos
idiv
mov
es
fs
mov
data16
cmp
aam
icebp
jbe
repnz
xchg
data16
jno
or
mov
inc
inc
xchg
movsb
jp
ljmp
rcrb
imul
inc
pop
je
movsl
mov
dec
js
jno
xor
sbb
dec
adc
cmpsl
inc
mov
data16
insl
cmp
mov
or
lds
jecxz
adc
lahf
leave
sub
cmp
les
rclb
cmpsl
out
icebp
pop
inc
and
addb
ret
std
sarb
or
outsb
loopne
mov
repz
nop
shl
pop
pop
dec
jg
and
mov
pop
xchg
jne
imul
rcrb
testb
insb
pop
lret
pushf
divl
ret
jp
ds
jg
pop
ljmp
dec
sahf
adc
jnp
mov
mov
jae
fstpl
add
int
imul
enter
popa
std
lcall
dec
movsl
iret
js
pop
adc
mov
and
and
lods
jmp
and
sub
lea
xchg
pop
xchg
push
cmp
dec
je
vshufps
outsb
outsb
and
inc
xor
es
xlat
sbb
ret
lcall
stc
mov
loop
cmpsb
ret
jl
cld
shrb
dec
imul
or
cmp
push
fisubs
shrl
cli
push
jl
movsb
pop
adc
cli
mov
push
jno
loop
fcmovu
pop
jmp
pop
adc
jnp
enter
hlt
jge
adc
dec
cwtl
pop
or
xchg
mov
movsb
data16
push
sbb
mov
lods
mov
cmpsl
sarb
test
nop
aas
pop
in
outsl
xor
sub
jb
out
insb
daa
sbb
stos
das
idivl
fidivl
xchg
lods
push
and
stos
sub
int3
test
mov
pop
sub
push
xchg
cwtl
loopne
push
mov
push
cmp
insl
sbb
mov
insb
add
adc
das
sub
sub
js
jno
cmpsb
aad
in
rclb
fcoms
adc
push
test
inc
ss
int3
dec
mov
rcr
mov
push
and
push
jl
gs
aad
xchg
mov
cmc
xchg
xor
outsb
lock
clc
mov
mov
mov
ss
repnz
lahf
sbb
shrb
jbe
decb
cs
mov
lahf
je
imul
sbb
lcall
arpl
jmp
fadd
xchg
stc
adc
push
mov
aaa
dec
repnz
xor
or
cmpsb
xchg
adc
mov
loopne
addl
cmp
cltd
ljmp
adc
mov
adc
xor
add
dec
fisttpl
mov
fistpll
pop
or
jbe
and
sub
popa
push
and
jbe
loope
test
repz
xor
aaa
xchg
mov
cmp
dec
inc
xchg
jb
test
push
pop
imul
das
pushf
jnp
call
and
mov
setge
aam
jp
mov
and
repz
and
jp
test
mov
repz
aad
pop
call
jno
jecxz
test
sti
xchg
ficoml
mov
xchg
xor
xchg
cli
out
mov
lret
leave
add
xchg
divb
stos
lds
pop
adc
and
xor
leave
jns
mov
or
lret
testb
push
fidivl
push
mov
xor
adc
cli
outsl
arpl
stc
sti
pop
rol
enter
dec
rcll
dec
jne
jb
test
xchg
lret
sub
mov
cmp
inc
jne
bnd
xor
cmp
cs
dec
lretw
mov
lds
aaa
jg
fld
xchg
push
iret
add
dec
test
call
adc
int
sbb
test
xchg
add
ret
adc
jg
xchg
movsl
push
aaa
add
sbbb
loope
aam
push
push
and
mov
sub
mov
pop
aas
and
ljmp
es
lds
mov
outsl
movb
out
mov
ficoml
mov
rsm
mov
ret
ja
sbb
push
sub
mov
xor
jge
cld
mov
jae
int
rcrb
mov
ret
cmp
repz
bound
push
sub
outsb
lods
adc
inc
cs
leave
or
sub
mov
out
add
sub
inc
cmp
pop
add
xchg
add
sbb
inc
insb
mov
or
sbbl
test
negl
ds
in
negl
int3
jl
movsb
mov
push
jnp
cmp
into
fimull
xor
and
or
movsl
and
ja
cli
je
sub
or
jo
pop
mov
inc
outsb
cmpsl
adc
std
add
pop
pop
shll
gs
imul
fs
inc
push
pop
and
ret
xchg
bound
jecxz
out
pop
pop
enter
int
add
ljmp
shrb
add
out
insb
icebp
inc
rcrl
and
sub
rorl
or
sub
push
dec
insb
movsb
rolb
push
mov
cltd
push
shlb
adc
pushl
xlat
orb
mov
sbb
xchg
jae
pop
call
orb
lock
lret
xlat
xchg
sub
inc
push
hlt
mov
push
out
popa
xor
add
mov
inc
negl
test
jo
dec
cs
xor
fcomip
lods
or
sbb
add
xor
int
dec
jae
push
mov
out
or
movsl
mov
clc
into
mov
mov
into
dec
add
fildl
mov
lret
inc
adc
mov
push
mov
jno
or
test
sub
xchg
push
xor
imul
jg
mov
adcl
rcll
or
frstor
icebp
imul
icebp
and
arpl
gs
arpl
les
xchg
push
shrb
xchg
xor
dec
push
je
inc
xchg
insl
push
bswap
shll
pop
bound
mov
xchg
std
xchg
outsb
das
mov
xchg
mov
cmp
test
mov
fadd
add
fwait
in
jno
pop
call
pop
ss
clc
push
and
loop
imul
jp
adcb
mov
sub
or
push
popa
push
je
sub
aaa
cs
sub
pop
pop
inc
pop
xor
fidivrl
fwait
divb
enter
inc
or
and
mov
int3
cld
mov
loop
or
jmp
sar
xor
mov
sti
ss
popf
leave
push
add
and
lds
rcll
adc
mov
and
push
lea
addb
cld
pop
add
aad
adc
pusha
ret
dec
in
or
lret
lea
pop
not
jg
outsl
xchg
pop
out
movsl
or
xchg
jno
fmuls
push
fcmovb
sbb
xor
cwtl
stos
add
dec
xchg
and
push
aam
icebp
out
and
lret
les
in
and
cmpl
bound
or
mov
add
push
dec
lods
lods
dec
jo
negb
xor
mov
sub
xchg
or
pop
hlt
enter
icebp
pop
fimull
into
imul
sub
push
cld
pop
push
mov
sahf
cmpsl
fdivrl
pop
pop
mov
nop
int3
dec
mov
in
mov
out
adc
jbe,pn
mov
pushf
jb
sbb
lods
out
leave
mov
aad
lret
imulb
mov
loopne
ds
mov
repz
pop
add
out
mov
call
mov
push
push
jno
xchg
out
mov
push
loope
sahf
imul
testl
gs
int3
rcr
fcmovu
popa
pop
xorb
call
mov
notb
jle
test
xchg
push
imul
push
mov
subl
mov
xor
insl
mov
jp
and
mull
jo
inc
movsl
daa
pop
lret
lods
les
inc
in
popa
cmpsl
and
mov
sahf
mov
sub
xchg
sbb
bound
or
inc
jb
cmp
ficoml
stos
clc
test
xchg
imul
and
fcomps
pushf
mov
js
lret
jecxz
enter
ret
outsb
hlt
adc
pop
pop
pop
cmp
cmp
xor
mov
push
lods
cmp
inc
pusha
dec
shr
dec
in
pop
stos
lret
das
jb
out
repz
cmc
sub
cmp
stos
cvtps2pi
pushf
cmp
vpaddd
lret
inc
pop
add
push
fimull
sub
fidivl
stos
adc
lock
std
insb
int3
cmc
mov
jno
adc
jne
adc
xor
mov
sub
mov
pop
insb
out
lods
and
mov
add
in
gs
add
xor
jne
or
or
insb
je
shrl
lock
fcompl
jge
dec
jno
sub
jnp
inc
scas
ss
nop
xor
iret
push
mov
dec
insb
and
hlt
cli
enter
cmp
cli
sbb
lods
cmc
aad
pop
pop
ja
xor
scas
stc
andb
addr16
and
movsl
rcr
mov
es
test
out
fwait
xchg
xor
xchg
pop
cwtl
es
xlat
sub
daa
cmpsl
fs
test
jp
jbe
push
mov
sub
addr16
lock
int
loope
pop
test
sbb
mov
movsl
cmp
das
sub
fcomi
xchg
push
fldt
in
sti
aas
sub
push
insb
mov
fsts
js
decl
xchg
sub
mov
ljmp
lret
in
mov
lods
mov
pop
mov
cli
dec
jae
jb
cld
jb
rcrb
jecxz
xchg
mov
roll
mov
jmp
cld
in
adc
nop
loopne
call
std
lock
jae
jb
bound
mov
loope
out
xor
push
pop
outsl
adc
scas
mov
scas
mov
jecxz
add
rcrl
pop
push
inc
das
sbb
push
mov
pop
and
mov
mov
enter
jl
cmpb
ret
pop
jg
xchg
aam
das
lahf
jp
aas
mov
mov
dec
fldl2e
stos
inc
test
mov
sahf
jl
out
rorl
jmp
adc
add
add
aad
sbb
movsb
outsb
mov
jle
xor
fs
call
mov
call
mov
jmp
xor
push
stos
add
sbb
pop
jle
outsb
jne
loop
push
test
pusha
push
sbb
or
and
addr16
jecxz
out
icebp
imul
std
jl
xor
lds
sahf
enter
inc
push
adc
sbb
and
jp
mov
int
dec
xlat
jle
out
push
test
inc
or
cwtl
xchg
aam
mov
cmp
out
idivw
add
inc
nop
xor
xchg
lret
sub
cmp
or
xchg
in
cmpsb
xlat
cmp
add
bound
sbb
jmp
ror
xor
fidivs
push
mov
mov
cmp
fsubrp
decl
insb
jp
loope
add
jmp
mov
outsb
mov
mov
mov
idivl
daa
ja
lahf
bnd
xor
mov
jo
enter
mov
or
aam
ret
xchg
xlat
push
stc
lods
dec
mov
jecxz
ss
sbb
cli
mov
push
int3
mov
cmp
lret
into
and
fdivs
pop
stos
or
pushl
sbb
cmp
push
andl
sbb
pop
add
mov
test
add
movsb
xor
lahf
lret
insb
add
sbbl
mov
sarl
xor
pop
repz
pop
les
aas
cmpl
push
mov
loop
fdivs
mov
or
sub
xorl
hlt
pop
jo
or
dec
push
out
mov
cld
aad
pop
test
je
push
mov
fdivrs
repnz
sub
je
loope
inc
jo
stos
cld
adc
mov
push
xchg
inc
jmp
mov
gs
sbb
jle
xchg
push
sub
cli
cwtl
call
inc
outsb
es
push
lds
insb
cmp
out
dec
sahf
clc
mov
pop
divb
gs
jmp
test
and
imul
addl
movsl
pop
repz
cmc
imul
cmp
inc
out
loope
les
pusha
mov
ret
push
cwtl
hlt
arpl
jecxz
sub
push
and
pop
inc
ljmp
push
xchg
lret
imul
out
iret
pop
add
nop
int
ljmp
xchg
iret
or
mov
pop
pop
xor
xor
inc
jae
jno
lds
dec
and
loopne
dec
push
leave
je
jecxz
pop
arpl
inc
add
sbb
mov
jl
ljmp
shlb
das
adc
pusha
push
jl
imul
jae
ljmp
cmp
sub
mov
mov
mov
negl
mov
pop
lods
or
xlat
aaa
xchg
lea
ja,pt
or
flds
cmp
dec
xchg
pop
dec
and
adc
out
es
in
test
mov
xor
mov
mov
cs
adc
and
add
stc
mov
leave
add
enter
lahf
ret
imulb
mov
cmp
ret
sub
mov
mov
cmc
cmpsb
inc
mov
lret
bnd
fmull
cmp
add
into
lea
adc
std
mov
cmp
shl
xchg
test
in
jmp
push
and
jp
dec
scas
inc
push
or
lods
xor
or
jno
dec
mov
mov
rolb
test
or
inc
sub
push
shlb
pop
adc
mov
dec
mov
mov
mulb
jp
lds
ds
fidivrs
and
mov
mov
sub
repz
sti
lock
stos
pop
mov
push
rorl
popf
lods
jno
mov
mov
dec
mov
cld
push
pop
xchg
xor
inc
rcll
fdiv
mov
mov
std
imul
in
pop
cmp
xor
repz
xor
cmpsb
mov
pushf
fsubl
frstor
icebp
xor
cwtl
popf
jl
mov
adc
repz
push
into
ret
cmpsl
jno,pt
mov
mov
fldl
loopne
sbb
add
or
pop
and
aaa
mov
add
pop
mov
idivb
jg
xchg
adc
cmp
bound
hlt
lahf
mov
int
sub
daa
data16
push
jge
mov
lock
sub
sbb
jns
push
popf
sub
cmovge
mov
clc
rolb
lods
sub
inc
mov
out
inc
jb
fld1
fimull
dec
and
pop
lods
sbb
jbe
mov
into
mov
in
adc
mov
scas
dec
xor
xor
mov
pop
mov
imull
out
mov
lock
aam
xor
fisubrs
out
mov
sbb
dec
sti
push
scas
cltd
add
push
popa
sbb
in
cltd
pop
xchg
jmp
in
fcomps
icebp
mov
ret
std
shr
jecxz
repz
cmp
xor
arpl
dec
cmpl
ret
std
shr
jecxz
repz
cmp
xor
arpl
dec
cmpl
ret
std
roll
int
in
sub
inc
jge
insl
arpl
dec
cmpb
mov
std
shr
jecxz
repz
ret
mov
fistl
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
sti
mov
pushf
fldt
mov
mov
imul
dec
cmp
dec
sub
insb
or
jmp
fldt
fcompl
or
sbb
sub
cmp
dec
sub
or
jmp
fldt
fcompl
xor
sub
push
push
dec
cmp
gs
mov
call
sti
or
pop
mov
sub
imul
dec
mov
test
cs
das
and
mov
jl
sub
cmp
sbb
add
inc
shl
fwait
mov
jge
int3
add
movsb
sub
cld
fwait
dec
mov
jge
jae
popf
lods
lods
dec
test
int
int3
gs
jnp
shrb
lds
inc
or
xchg
or
adc
inc
add
mov
stos
imul
dec
rol
movzbl
sub
or
fs
lods
sub
inc
pop
push
fs
add
repz
pop
mov
test
jns
jl
mov
pushf
fldt
fcompl
or
sbb
sub
cmp
dec
sub
or
mov
ljmp
decb
outsl
jne
inc
daa
push
pop
and
pop
out
pop
sbb
int
mov
repnz
orl
sbb
push
pop
and
imul
lret
mov
mov
jnp
imul
dec
cmp
dec
sub
or
jmp
fldt
fcompl
or
sbb
sub
cmp
dec
sub
or
dec
mov
out
insl
popa
or
lret
xchg
adcb
sbb
leave
ja
jp
bound
ret
fidivs
cmpsl
add
popa
xorl
sbb
or
aas
mov
fxch
test
pop
aad
inc
pop
and
mov
adc
cmp
jecxz
test
outsl
jmp
xchg
cmpsb
pop
pop
mov
xchg
push
in
rolb
jne
cmc
mov
mov
cmpsb
dec
aaa
test
jbe
jp
test
mov
mov
rcl
xor
cmp
sarb
mov
outsl
sti
pop
stc
inc
add
mov
pop
int
pop
sbb
cmp
xchg
adc
mov
repz
dec
or
stc
imul
lds
hlt
jb
js
dec
push
jl
push
sbb
out
jmp
in
popa
fistps
movb
pop
aas
cld
inc
ret
dec
inc
cli
lahf
push
jnp
or
pop
int3
test
push
loopne
add
lret
cmp
add
adc
or
cs
roll
gs
push
dec
pop
enter
push
add
dec
rclb
jecxz
shr
xchg
push
adc
or
into
stos
mov
pop
notb
out
mov
cmp
in
sub
inc
nop
and
dec
jg
jl
mov
sub
sub
out
lods
in
pop
xorl
or
xchg
inc
out
mov
xor
mov
inc
mov
cli
or
adc
fsubrl
and
pushf
fdivrs
xchg
ss
bnd
mov
icebp
add
cltd
adc
movsb
sbb
or
jl
rolb
xor
mov
jo
jb
std
fwait
xchg
pop
xchg
mov
sub
cmp
ljmp
mov
sbb
mov
call
pop
aam
jo
aaa
cmp
addr16
push
xor
jl
mov
outsl
jp
or
sub
insb
aaa
loope
lods
add
xchg
fsave
je
jns
adc
daa
loop
popa
sbb
ja
orb
and
cli
mov
lods
jns
es
cmp
inc
sbb
and
test
repnz
cli
xor
cmp
fisubl
push
mov
ljmp
popf
mov
cmpsl
das
jmp
andl
mov
xchg
push
sahf
jle
cmp
mov
imul
adc
sub
lea
mov
fldt
jo
xor
inc
and
idiv
out
ror
inc
xor
push
rol
icebp
push
fdivrs
icebp
cmp
sub
pop
mov
add
bound
mov
call
mov
adc
fstpt
or
out
popf
mov
out
push
xorl
inc
lods
inc
shrl
dec
lret
cwtl
pop
daa
test
sar
dec
repnz
in
addb
fldenv
fwait
out
mov
sti
pop
jbe
paddd
mov
push
cmp
daa
mov
pop
push
xor
or
repz
sti
add
int
loop
int3
movsl
insl
addr16
cmp
pop
int
cmc
dec
mov
ret
lret
ss
sbb
and
push
fsts
push
js
or
push
adc
les
push
lret
hlt
repnz
xor
and
pop
jns
add
imul
push
jg
xor
jo
sbb
fwait
idivl
add
mov
lahf
cli
dec
cmp
in
lock
ss
add
aas
imul
push
adc
xchg
mov
pop
add
pusha
push
or
inc
mov
adc
xor
ret
jl
aaa
sahf
push
outsb
jge
ret
push
insl
jl
fdivs
in
popa
mov
lods
aas
add
les
inc
or
inc
xor
in
mov
xor
icebp
mov
hlt
gs
testl
mov
sub
ror
mov
add
cmp
jg
scas
sub
mov
mov
fildll
das
test
xor
push
xchg
jle
adc
xor
adc
cmp
outsb
mov
push
imul
arpl
xchg
cmp
fs
faddp
and
pop
aas
call
test
rcl
test
push
fsubr
push
mov
clc
hlt
add
nop
push
icebp
add
sbb
clc
fsubr
sub
in
xor
sbb
aaa
orb
or
outsl
arpl
cs
enter
stos
test
ljmp
outsb
cmp
negl
js
imul
cmp
sbb
test
xchg
jl
jne
ret
in
push
loope
mov
add
inc
clc
lods
leave
sub
push
and
dec
cld
sub
lcall
push
mov
sub
sbb
lea
push
sub
aad
inc
and
les
cmpsb
sub
rorb
dec
sbb
int3
xlat
ret
movsl
pop
mov
xchg
outsb
gs
outsb
test
push
ja
sbb
jbe
push
fsubl
jl
lea
push
sub
xchg
sub
adc
pop
adc
sbb
and
sbbb
adc
fwait
adc
sub
and
lods
movsl
sbb
fs
dec
pop
adc
in
xor
lret
mov
inc
mov
dec
fsincos
out
jp
mov
bnd
mov
xchg
js
push
mov
pop
and
outsb
adc
int3
insl
cmpsb
in
fnstsw
add
out
cmpsl
dec
and
lods
andb
rcl
loop
sub
shrb
ret
adc
ljmp
rcrl
xor
addr16
aam
fmull
test
inc
dec
pop
lods
js
fdivrl
lcall
inc
mov
mov
and
dec
insl
push
imul
adc
aas
imul
out
or
sub
ret
ret
jns,pn
aam
bnd
inc
out
push
out
jnp
xchg
rol
test
lret
in
iret
in
pop
je,pt
shll
sbb
cmp
mov
fadds
adc
pop
inc
ret
fs
in
cmp
jns
mov
sbb
and
insb
cld
inc
adc
cmc
xchg
fisttpl
cmp
jl
mov
enter
faddl
subb
xchg
shrl
mov
push
push
leave
sbb
icebp
push
push
cmc
xor
in
loop
lahf
xor
inc
inc
pop
mov
xchg
mov
push
mov
jbe
cmpsl
cmp
std
or
arpl
jle
xor
in
mov
movsl
fs
mov
xchg
xchg
inc
adc
dec
and
xorl
fbstp
ljmp
imul
pushf
fstpt
mov
sahf
mov
fwait
mov
loope
mov
fnsave
ret
pusha
stos
dec
cli
out
insb
sub
pop
lods
sbb
lret
out
dec
test
or
andb
pop
rcl
in
sub
sti
xor
jp
sti
push
lahf
jmp
adc
incb
add
sbb
stos
pop
lcall
xchg
mov
sub
ja
cmp
and
loope
iret
inc
adc
and
outsl
xchg
fisubrl
ret
mov
xchg
and
cmc
pop
std
cs
sti
lods
hlt
jl
mov
lret
mov
sbb
fldln2
add
xor
pop
cmpsb
xor
popf
iret
jbe
push
test
mov
lgs
scas
xchg
adc
push
cld
das
loopne
adc
loopne
jmp
out
ret
add
in
add
jo
jae
pop
pop
cmpsb
mov
test
dec
xchg
xchg
sbb
cmp
mov
xchg
mov
fistpll
push
add
push
xor
add
jae
out
out
xchg
fld1
dec
mov
outsb
scas
pop
cmp
sbb
add
lret
mov
mov
clc
adc
mov
and
mov
mov
cltd
insb
push
mov
pop
enter
test
or
das
jmp
xchg
test
or
fisubl
sub
pop
xor
lods
or
push
call
mov
mov
inc
jmp
clc
lock
xor
mov
fs
test
mov
mov
inc
stos
daa
pop
insl
stos
cmpsl
sbb
andb
cld
mov
mov
mov
test
pop
dec
mov
ret
addb
add
aam
mov
push
mov
test
test
movsb
cwtl
jno
push
imul
in
js
jge
sub
pop
and
add
xchg
enter
int3
repz
es
inc
fisubs
and
mov
mov
adc
fdivrs
adc
xchg
push
add
outsb
call
xchg
inc
push
mov
ret
dec
sub
in
mov
pop
dec
out
and
sti
nop
stos
fstpl
dec
mov
shlb
inc
and
jb
xchg
cmp
sub
lahf
lock
dec
arpl
out
sbb
imul
fdivrl
jns
jg
test
std
cwtl
sub
xchg
or
mov
inc
jns
and
fs
andb
aam
movsl
mov
loop
bnd
js
std
mov
xchg
clc
scas
sbb
out
stos
mov
mov
loopne
imul
div
movsl
jp
add
mov
add
xchg
xchg
not
and
aaa
mov
ror
lcall
pop
icebp
sbb
mov
les
sub
insb
mov
mov
bound
jge
nop
dec
repnz
inc
sbb
sbb
fistps
or
adc
mov
imul
loopne
inc
pop
xor
lds
fwait
mov
insb
rorb
jmp
xlat
notb
dec
call
fmull
pop
mov
mov
ljmp
hlt
adc
test
and
pop
movsb
in
mov
jp
fsubs
mov
push
inc
int3
lods
icebp
inc
xor
jne
mov
sbb
pop
shrb
push
mov
dec
mov
add
dec
dec
into
inc
xchg
stos
jl
sbb
repz
mov
out
jmp
popa
mov
push
xchg
xchg
loopne
pop
test
cmp
fisubrs
cltd
sbb
dec
scas
mov
repz
mov
ret
sbb
and
outsb
mov
cmp
ss
enter
add
jb
stos
or
ljmp
cltd
jg
adc
nop
mov
jno
add
test
jp
sbb
xchg
out
sbb
sar
push
mov
stc
scas
fists
jl
test
jnp
aad
or
in
push
xchg
adc
daa
leave
lcall
add
int
mov
int3
xchg
testl
pop
inc
or
das
add
push
out
dec
and
mov
arpl
pushf
add
scas
addb
sbb
add
pop
mov
mov
mov
lcall
in
push
imul
mov
sub
push
in
shlb
lods
pop
icebp
jp
insb
xchg
das
mov
iret
jp
dec
xchg
setnp
push
sub
mov
nop
inc
and
inc
cltd
mov
sbb
push
out
repz
in
aam
fs
arpl
cmp
add
dec
sub
inc
lcall
mov
dec
jno
das
dec
mov
fdivs
ds
inc
subl
cmp
cmp
sahf
mov
push
scas
data16
jl
xchg
js
aam
mov
je
xor
mov
outsb
xor
inc
pop
xorb
loope
inc
fildll
pop
int3
outsb
sbb
xchg
into
bound
les
xchg
cmc
xchg
push
sahf
stos
inc
cmp
pop
dec
jne
adc
lret
and
mov
jecxz
fwait
out
push
sbb
rcll
pop
sar
or
bnd
push
pushfw
inc
fnstenv
jns
dec
enter
int
add
xor
sbbb
adc
fiadds
nop
leave
pop
xchg
pop
dec
aad
sbb
and
sbb
cltd
scas
sbb
pop
pop
fstl
cld
xchg
sub
xchg
mov
fwait
lret
cmp
lret
je
aam
xchg
sub
push
std
lret
and
das
mov
inc
cwtl
adc
stc
out
adc
dec
xor
sub
into
push
or
dec
cmp
xor
sbb
dec
in
jmp
inc
add
rcll
mov
test
or
jae
add
xchg
sbb
mov
push
movsb
push
mov
xchg
jnp
sbb
mov
fistpl
xchg
jae
mov
xor
outsb
jnp
js
dec
inc
cwtl
mov
xchg
jl
loop
push
mov
sub
loop
dec
mov
leave
call
out
mov
xor
jbe
loope
test
pop
fldt
mov
int
jp
bound
vmwrite
and
out
shrb
mov
add
adcb
mov
pop
hlt
hlt
xchg
repz
outsl
movsb
loopne
mov
lahf
lock
loope
aam
insb
cmp
add
push
arpl
push
xor
movsb
push
stos
adc
cwtl
std
xchg
pop
iret
insl
stc
add
mov
mov
sub
lea
rorb
fcomps
push
pop
hlt
mov
mov
repz
jecxz
cs
xchg
cmp
jmp
mov
adc
stos
pop
lock
jecxz
pop
ret
int
fwait
les
sti
mov
or
cmp
ja
or
jp
ret
dec
dec
pop
adc
add
cmp
mov
sub
jns
vmaxps
call
into
mov
inc
add
mov
aam
cmp
add
pop
xchg
xchg
out
in
mov
cmp
loop
in
rcrb
or
fmul
xchg
push
push
mov
push
inc
xor
das
push
arpl
stos
daa
cmp
fildll
dec
lea
enter
push
pop
ficompl
dec
jnp
jmp
xchg
pusha
cmp
rcrb
ja
push
sub
lea
movsb
leave
sub
cmc
mov
xchg
adc
loop
mov
mov
jns
icebp
in
std
jns
xor
out
stos
mov
lret
inc
int3
sarl
fists
sahf
xchg
out
mov
push
rorb
mov
jge
mov
test
mov
cwtl
or
loop
xor
int3
clc
sub
mov
sbb
out
xor
pop
inc
pop
iret
cmpsb
jge
idivb
xchg
cmp
adc
fistpl
jle
dec
stos
push
mov
xor
jns
push
sbb
jb
adc
mov
jne
test
ljmp
cmp
mov
adc
xlat
cmp
pop
ljmp
cld
gs
fsub
cmp
in
test
mov
inc
test
or
andb
fisubs
push
pop
sub
in
cmpsb
push
iret
sbb
mov
cmpsb
cmp
adc
out
sbb
in
cmp
dec
dec
sahf
int3
ss
push
sbb
or
lcall
jl
push
shl
mov
xor
pop
test
cmpsb
inc
xor
xor
addr16
and
push
andl
cmp
orl
aam
cli
fisubrs
sti
iret
out
inc
lahf
cli
hlt
lods
mov
jge
mov
scas
dec
add
mov
jmp
add
pinsrw
pop
jns
jecxz
push
dec
fnsave
xor
mull
js
xchg
or
pop
popf
ja
adc
push
jno
xorb
pop
cmp
movsl
or
cwtl
lea
and
cs
xorb
repnz
cmp
jnp
imul
or
shll
test
xchg
mov
push
es
jnp
jl
jno
pop
push
push
pop
pop
enter
cmp
sbb
mov
xor
jae
adc
push
jne
lahf
lcall
faddl
mov
bswap
shrl
aam
jb
xchg
dec
xchg
call
pop
jae
aam
fcmovnbe
imul
push
xchg
mov
and
cmpsl
or
adc
cmp
inc
jecxz
jns
mov
jmp
jp
mov
or
pop
lds
push
cli
cltd
pop
cld
and
jp
scas
mov
test
sub
lret
fwait
xchg
add
mov
push
sbb
xor
push
mov
dec
data16
jle
arpl
inc
daa
scas
insb
std
pop
adc
sbbb
icebp
out
mov
xchg
es
and
cmp
push
adc
mov
sbb
cmp
sbb
adc
outsl
cmp
xchg
cmpsb
pop
xor
dec
jmp
jg
cwtl
sub
aam
cmp
out
xchg
push
sbb
pop
addb
ljmp
cmp
xchg
ja
push
repnz
dec
mov
out
mov
clc
imulb
sbb
int
mov
inc
mov
push
stc
fwait
xchg
inc
inc
test
in
cmp
sub
pop
dec
arpl
call
movsb
fbstp
push
push
jbe
ds
jle
xchg
add
mov
loopne
imul
jp
out
xchg
and
lret
sti
das
imul
add
lcall
jbe
inc
movb
lds
add
cs
inc
fwait
adc
jge
repz
jp
loope
repnz
cmc
out
cltd
pop
or
inc
mov
xchg
push
or
inc
movsl
lcall
sti
imul
pop
hlt
lahf
and
sti
or
pop
mov
mov
inc
pop
mov
aad
ret
fsubrs
cmp
jp
and
jo
push
popa
loopne
or
push
cld
fyl2xp1
movsb
push
inc
push
push
cmpb
lret
aad
and
scas
mov
mov
into
push
sub
inc
fsubrl
js
sbb
pop
jno
pop
std
xor
or
mov
mov
dec
shl
xchg
clc
and
test
test
and
inc
sub
fstps
pop
pop
insl
xorb
cwtl
dec
fs
jae
ja
cmp
jae
xchg
xchg
push
mov
inc
in
dec
loope
sub
dec
cs
aam
icebp
sarb
cmpsb
popa
inc
jb
pop
idiv
jmp
cs
or
outsl
xchg
arpl
negb
sbbl
call
mov
testl
cmp
xor
dec
roll
imul
cwtl
push
inc
mov
mov
pop
enter
in
std
push
xchg
push
push
int3
add
xor
je
aas
mov
push
xchg
stos
iret
scas
test
arpl
inc
dec
pop
les
imul
mov
or
add
push
and
pop
test
xchg
cmp
mov
add
xor
add
imul
mov
pop
repz
inc
and
mov
mov
cmpsl
dec
fidivs
mov
jge
mov
xchg
adc
in
inc
adc
sbb
scas
push
shrl
fcoms
orl
sbb
push
test
pop
out
or
test
mov
sbb
add
std
and
imul
out
push
sbb
or
pop
cmp
out
out
sub
push
push
sub
push
xorl
xchg
imul
cmc
das
lds
pop
mov
ja
or
aaa
push
ror
mov
pop
mov
jge
xor
cmp
lods
sbb
add
cmp
mov
inc
movsl
daa
ret
jne
xchg
mov
adc
jnp
push
xchg
jae
lods
addl
iret
addl
inc
nop
in
movsb
push
mov
arpl
xor
cwtl
xchg
and
inc
mov
pop
enter
out
cmp
mov
mov
pop
and
in
xor
mov
cmp
inc
jns
cld
jns
and
and
mov
int
jno
data16
cmc
je
outsl
daa
call
outsl
xchg
and
xchg
js
mov
sarb
movsl
add
sarl
xchg
lds
pop
dec
test
cli
pop
xor
xor
out
aam
dec
int
repnz
leave
fsubs
mov
mov
nop
and
or
pop
pop
cmpsl
push
mov
mov
and
sahf
mov
movb
add
loop
inc
inc
stc
in
push
dec
push
negl
push
pop
jle
pop
cltd
mov
enter
loope
add
inc
fisubrs
cs
ljmp
test
mov
sahf
sub
shrl
cmpsb
inc
mov
jecxz
cmp
sub
sbb
dec
pop
roll
stc
add
vpmaddwd
int
out
push
shlb
fiaddl
adc
nop
enter
sub
adc
mov
push
lret
mov
fwait
in
mov
jnp
imul
dec
cmp
dec
sub
or
jmp
fldt
fcompl
or
sbb
sub
cmp
dec
sub
or
jmp
fldt
fcompl
or
sbb
cmp
pop
sbb
sti
mov
pushf
fldt
pop
fwait
insb
mov
jnp
imul
les
sbbl
push
xor
jbe
daa
sub
push
or
fnsave
add
lock
loopne
sbb
push
xor
jbe
push
inc
push
jo
pusha
sbb
movb
shrb
loopne
lret
nop
mov
out
inc
or
sub
add
in
cmc
xchg
test
aad
lock
xchg
rclb
and
je
push
adc
or
mull
movsb
sub
mov
sar
sbb
push
xchg
or
test
popf
pop
ftst
leave
adc
jge
dec
sbb
push
xchg
push
leave
jno
insl
sti
inc
adc
xor
mov
out
add
pop
insl
rol
jg
dec
out
or
jne
push
jb
jno
inc
js
dec
bound
push
adc
mov
mov
xchg
ret
pop
pop
lret
std
stos
iret
fwait
loopne
scas
xor
sub
push
in
orl
rolb
mov
test
cmc
push
cltd
aaa
push
xor
shll
lret
xor
dec
jbe
push
add
jo
fsubs
in
lret
fidivrs
mov
jbe
je
dec
sbb
mov
add
test
cmpsb
loopne
rcll
shlb
adc
jmp
cmp
sbb
adc
aad
int3
mov
ret
mov
mov
or
adc
es
ss
movb
rolb
loopne
adc
push
xor
jbe
push
inc
push
jo
pusha
ss
movb
rolb
loopne
adc
add
popa
das
pop
adc
xor
pusha
push
sub
jno
pxor
inc
leave
pop
mov
test
lds
in
aaa
pusha
pop
pop
idivb
and
scas
mov
mov
jno
int
sub
xchg
clc
xchg
insl
xchg
push
out
or
pop
test
dec
popf
movsl
aas
bound
lods
cmpsb
jae
stc
push
pop
xor
js
push
cltd
sub
push
xor
xchg
rcrb
ljmp
xor
sbb
mov
and
scas
out
sub
mov
push
daa
xor
jae
imul
add
aam
dec
dec
popf
inc
push
test
xor
fnsave
sbb
arpl
jg
fidivs
sub
lock
sub
push
jmp
out
jns
stos
fisubs
subb
sub
push
and
mov
rolb
add
xor
add
mov
insl
shl
adc
out
pop
scas
push
addr16
imul
les
movsb
fwait
pop
ret
aad
mov
imul
ja
insb
fstpt
idiv
push
or
push
jmp
das
and
inc
sti
stos
lods
inc
shrl
mov
push
cmpsl
fidivs
notl
out
mov
stos
sub
xchg
ja
call
sbb
pop
and
sbb
mov
out
cmp
mov
cmp
jle
aam
movsb
jle
fadd
stos
aas
and
stos
addr16
movsl
dec
jns
fmul
fwait
or
je
int
or
hlt
mov
or
out
jmp
pop
aad
gs
stos
adc
dec
sbb
mov
jmp
mov
sbb
adcb
lock
mov
cmp
xlat
movsl
xchg
cmpsb
push
loope
je
subl
push
mov
insl
or
inc
lea
mov
out
adc
xchg
sub
gs
dec
fiadds
cmp
fsts
divb
adc
iret
push
fwait
aas
icebp
jns
popf
cmc
push
test
lret
dec
push
sbb
and
out
fsubs
mov
pop
or
ljmp
xor
and
insl
adc
and
push
xor
cmp
xchg
arpl
popf
fldl
add
mov
icebp
pusha
fistpl
jne
xor
scas
cmp
into
lret
push
je
pushf
lret
dec
orl
add
inc
fs
sub
dec
sub
sub
dec
ljmp
push
dec
or
ret
xor
imull
lcall
je
xchg
stc
lock
dec
lods
or
inc
sub
cmp
cmp
rorb
ss
mov
rclb
loop
sarl
lret
test
push
dec
push
shl
cmp
cwtl
test
test
fcoms
outsl
inc
aad
and
pop
jmp
aam
pop
popf
mov
repz
inc
pop
cmp
jae
arpl
out
jmp
call
adc
sbb
test
pop
fwait
mov
lret
ss
int3
mov
imul
xchg
push
sbb
push
dec
fs
sahf
shll
pop
push
lea
and
ficompl
inc
pop
inc
cli
jl
inc
cmpsl
ret
pause
hlt
into
aam
push
popa
or
daa
xchg
xchg
iret
sub
pop
and
cli
mov
inc
inc
clc
xchg
cmpsl
sarl
pusha
sbb
sbb
mov
and
and
sub
push
xchg
ljmp
pop
jne
fisubl
test
jmp
jns
cmc
outsl
adc
or
xorb
sarl
mov
xchg
pop
push
sub
jae
sbb
and
sahf
adc
xor
js
cmp
loopne
iret
clc
insl
cs
mov
sbb
pusha
mov
pop
lret
rcrl
ja
imul
jo
mov
sbb
imul
adc
aas
daa
loope
lcall
and
or
in
bound
inc
ror
lret
jg
jns
lods
jle
das
lret
sub
daa
mov
jbe
pusha
inc
in
dec
push
outsl
imul
mov
test
add
jecxz
ficoml
out
or
in
cmc
dec
jae
cmp
lods
adc
fs
data16
mov
movsl
shr
js
cmp
jo
xchg
jb
outsl
lods
pop
jnp
into
or
lock
dec
mov
xor
bound
inc
mov
jbe
mov
sarl
lds
neg
and
fistpl
inc
push
mov
mov
inc
aad
jne
and
push
fwait
sbb
lods
inc
sub
inc
int3
in
or
push
and
mov
adc
cwtl
push
in
dec
bound
loopne
loopne
xlat
daa
jg
push
add
xor
repz
push
in
sub
fdivr
push
pop
lods
cmp
mov
or
inc
stc
sub
pop
xor
clc
gs
cmp
lods
xchg
pop
sbb
test
frstor
loope
inc
sub
test
scas
cltd
gs
out
stos
addr16
pop
adc
pop
cli
jge
fimull
push
or
pop
lahf
pop
mov
dec
or
cmp
dec
mov
in
fistpl
mov
add
xor
cwtl
push
lds
hlt
pop
sbb
js
jne
pushf
sbb
repnz
aam
into
pop
add
jecxz
jnp
pop
xor
dec
jmp
xchg
imul
notb
push
mov
add
xor
ljmp
fwait
cwtl
cld
mov
fistpll
enter
imul
stos
cmpsl
fisttpll
sub
addr16
ficoml
cmp
pushf
fildll
pop
sbb
clc
outsl
ret
and
rcrb
add
sbb
stc
enter
xchg
inc
xchg
jo
or
adc
setno
add
aam
adc
mov
mov
push
ret
data16
adc
fsub
cld
push
clc
add
nop
shl
mov
icebp
xchg
mov
fnstcw
aaa
xchg
sti
scas
push
add
sub
jle
nop
orl
out
mov
shrl
push
cmp
les
sbb
fcmovne
insl
in
scas
and
fistps
loopne
gs
add
pop
push
push
xor
test
cmp
adc
lcall
jmp
loope
jbe
jb
cmp
sbb
mov
out
repz
test
in
jge
imul
jge
inc
jp
xchg
push
cmp
imul
and
cmp
sbb
fbstp
out
int
movsl
outsb
push
adc
jns
dec
push
add
scas
test
pop
repz
mov
jo
das
fwait
pusha
adc
inc
loope
jl
pusha
xchg
mov
sub
popf
data16
or
loopne
shlb
insb
aam
ja
dec
and
stos
jg
lret
mov
or
loopne
iret
pop
aas
inc
jmp
mov
push
cmp
xor
adc
cli
add
aad
or
aaa
and
cmpsl
sbb
pop
test
push
fs
nop
in
mov
push
xchg
pop
cmpl
mov
mov
mov
xchg
fnsave
mov
push
imul
jbe
repnz
leave
stos
push
jl
lcall
mov
cmp
insb
push
sarb
jle
icebp
lahf
test
lods
inc
and
cwtl
es
call
lds
ficomps
mov
mov
jnp
mov
loopne
inc
rcrb
inc
pop
nop
shlb
dec
mov
jno
jae
push
call
xchg
ret
adc
es
add
nop
xorl
xor
inc
push
enter
mov
push
arpl
pop
mov
adc
jbe
mov
iret
es
cltd
pop
mov
sub
mov
js,pn
js
push
and
dec
xchg
ret
cmp
push
push
daa
cmp
gs
js
in
xor
test
add
sbb
ja
popf
push
outsl
adc
addl
or
notb
in
inc
insb
lea
xchg
adc
test
andl
sbb
je
std
sbb
push
lods
clc
mov
sub
mov
adc
lahf
sahf
aaa
in
sahf
das
inc
sub
jo
xlat
adc
scas
jo
out
ret
dec
mov
jecxz
dec
or
add
scas
and
mov
xchg
inc
lcall
mov
pop
sub
lret
ss
sub
cmpsl
xlat
out
pop
mov
nop
sbb
fiadds
orb
dec
cmpsl
rcr
loope
inc
push
dec
das
push
or
clc
mov
pop
push
mov
sub
mov
call
lods
push
push
aaa
rcr
outsl
aas
push
shl
dec
enter
bound
stc
push
and
mov
adc
hlt
addr16
cmp
in
add
gs
ja
push
std
push
lahf
loopne
sub
adc
roll
lcall
xor
insb
and
push
add
dec
mov
sub
jne
sub
lcall
xor
adc
mov
fisubs
std
pop
mov
aad
pop
xor
add
jecxz
and
addr16
and
mov
sbb
jns
loop
outsl
pop
jbe
fstpl
xor
inc
andb
or
push
dec
or
ret
enter
sbb
mov
jmp
inc
ss
mov
hlt
cmp
mov
mov
mov
test
loopne
cld
dec
enter
adc
or
outsl
cmp
adc
mov
fistl
into
sbb
pop
sbb
xchg
jb
fidivl
dec
or
test
stos
fisubrl
xor
mov
aas
aad
mov
push
push
dec
mov
imull
pushf
repnz
mov
mov
cltd
and
dec
mov
sbb
dec
es
scas
jg
push
adc
mov
add
jle
cmp
je
call
inc
loop
test
cmpsl
je
test
sub
ja
idivl
add
shrb
push
rorl
mov
push
and
and
sbb
enter
lods
mov
movsl
xchg
notb
loop
dec
fcmovnbe
test
hlt
leave
push
insb
xor
out
dec
daa
shl
rolb
enter
jl
fcos
mov
in
mov
cltd
sti
adc
ljmp
and
iret
les
xchg
lds
ret
push
mov
jg
sbb
xchg
jmp
xlat
ja
pop
cmp
xlat
mov
sbb
cwtl
jno
aaa
inc
test
jg
in
lret
gs
in
jp
ror
sub
out
lret
lods
in
xsaveopt
jmp
or
pop
negb
sbb
insb
adc
jge
and
jae
mov
icebp
sahf
adc
clc
rcrl
cmp
jl
mov
xor
jmp
mov
dec
pusha
mov
cmc
jp
sub
jnp
push
hlt
rolb
jp
fdivrl
aas
jb
cmc
mov
xor
pushf
ljmp
lret
sbb
fwait
mov
cmp
imul
dec
out
ret
jns
sub
std
mov
orl
pop
out
inc
sub
mov
fsubrl
dec
loope
insl
push
cmpsl
or
lods
xchg
cld
mov
inc
sub
addb
jle
sbbl
jb
leave
clc
push
pop
mov
jge
movsb
lret
clc
sbb
out
insl
fisubl
cwtl
or
lods
in
dec
add
or
or
jecxz
cmpl
aaa
shrb
ljmp
mov
iret
aam
loopne
push
cli
pop
inc
push
stc
jl
lret
ljmp
mov
jae
lds
sub
test
adc
daa
movsb
sub
add
sbb
jbe
lea
push
les
test
popa
dec
aaa
mov
push
test
sub
cmp
push
popf
lods
add
mov
push
cmp
pop
imul
jecxz
mov
adcl
outsb
or
jg
shl
cmp
xchg
movsb
stos
pop
jge
inc
hlt
shrl
test
xor
jecxz
mov
sbb
aad
movsl
repz
adc
stc
add
mov
lds
stos
scas
xchg
sub
pushf
pop
in
xchg
dec
shlb
dec
int3
in
jecxz
cmpsb
cmp
mov
test
mov
xor
gs
fiadds
mov
outsb
sar
gs
je
outsb
enter
pop
cli
pop
jns
loopne
lret
cwtl
imull
dec
xchg
adc
ret
and
mov
arpl
sarl
mov
ds
mov
mov
xchg
add
incl
fisubrs
mov
cmc
pop
in
scas
or
das
lahf
sbb
add
jl
dec
call
lds
sub
or
dec
mov
je
lret
ss
aam
sbb
mov
inc
push
sbbl
pusha
lret
pusha
insb
push
call
sub
jle
cli
xchg
xchg
ret
stos
xor
mov
xlat
movsb
nop
call
movsl
int3
pop
fistpll
je
pop
cmc
xlat
jns
cmpsb
js
mov
xlat
jne
and
jnp
pop
or
sbb
pushl
sub
fcoml
rclb
dec
dec
pop
aad
outsl
orb
lds
int
addr16
mov
shlb
iret
fisttpl
repz
jecxz
es
ja
cmc
mov
adc
xadd
pop
lahf
mov
pop
cmpsb
in
arpl
std
push
imul
dec
mov
fcomip
push
inc
testb
mov
ret
jg
rcrl
stc
addl
hlt
ss
push
sbb
mov
lcall
dec
inc
xchg
sbb
xchg
inc
into
dec
sahf
and
int
sbb
sbb
jno
jno
cmpl
aaa
sbb
data16
xor
pusha
movsb
xor
dec
xlat
xor
sbb
jae
mov
test
scas
clc
stc
mov
cmpsl
and
lea
and
lahf
push
xchg
sub
mov
lds
push
xchg
push
mov
int
psubb
iret
cmp
mov
push
out
out
lea
in
cmp
test
jo
add
loop
pop
mov
xchg
xchg
inc
sub
test
pop
insl
mov
pop
and
mov
mov
mov
rolb
js
dec
movl
and
xchg
sub
ret
xchg
repz
and
sub
andb
adc
adc
inc
pop
stos
mov
bound
popa
xor
fdivrl
cmpsb
adc
jbe
fsts
inc
cmovne
daa
add
pop
stc
pop
dec
out
cmpsl
mov
popl
sarl
sbb
aad
or
test
fdivrp
inc
rcl
add
mov
inc
adc
int
out
or
lds
leave
pusha
aad
xchg
cltd
aam
cmc
fistpl
mov
insl
xchg
stos
outsb
or
jo
inc
out
rorl
pop
jne
push
mov
fstpt
jo
data16
add
push
mov
push
fdivrl
sbb
pop
mov
inc
push
push
jae
pop
lods
xor
mov
sbb
cwtl
jecxz
aad
push
inc
enter
inc
mov
jg
jge
push
cmp
loop
test
cmp
xchg
xchg
jmp
or
and
stos
popa
mov
stos
and
cwtl
rcl
xchg
sbb
dec
push
sbb
fcomi
scas
jns
push
cmp
addr16
arpl
shr
dec
xor
imul
repz
in
fcoml
loop
lcall
sub
add
dec
xchg
xchg
jge
je
aam
jge
insl
mov
stos
add
inc
sbb
js
aad
fld1
testb
inc
loopne
xchg
mov
ficoms
scas
adc
sarb
adc
das
xchg
push
jl
xor
sbb
add
mov
dec
xor
fcompl
pshufw
sarb
pop
mov
rorl
dec
sub
stos
jge
imul
scas
fs
popa
mov
out
sbb
cmp
ret
add
faddl
ss
lret
jbe
xor
push
dec
test
icebp
out
ja
stos
fisttpl
cmp
sub
mov
pusha
sub
fdecstp
ret
icebp
fcomip
pushaw
xor
mov
rcrb
cwtl
add
imul
xchg
adc
xchg
jmp
mov
pop
aas
ss
clc
inc
sub
inc
scas
xchg
mov
fidivrs
push
les
pop
stos
movsb
mov
addl
mov
popa
js
pusha
stc
rolb
xchg
subb
ljmp
push
outsl
sbbb
lret
fldl2t
lock
repz
inc
pop
or
ret
mov
inc
aam
sti
sub
inc
inc
inc
stos
into
cmp
adc
xchg
aam
cmp
xchg
mov
xchg
add
fistpl
push
and
cmp
mov
dec
cltd
sti
inc
lcall
xchg
ret
add
jecxz
divb
mov
sbb
dec
mov
jns
aad
cmp
lods
pop
clc
jns
and
mov
or
movsl
sub
rorb
outsb
enter
fwait
enter
mov
test
jbe
add
mov
pop
adc
popf
cmp
xor
in
mov
xchg
bound
in
xor
jg
hlt
daa
ret
mov
sub
jmp
fadd
test
rorl
pop
inc
enter
outsl
inc
or
mov
js
sbb
or
mov
mov
push
xchg
sbb
fbstp
push
xor
sbb
lods
push
ret
insl
stc
icebp
mov
or
mov
inc
cmpsb
pop
pop
je
dec
xchg
mov
or
out
adc
xchg
aaa
int
mov
ret
mov
sbb
lods
mov
dec
addb
mov
in
adc
or
rorb
stos
icebp
or
dec
ret
mov
mov
xchg
ds
pop
dec
sub
mov
int3
dec
lds
out
repz
js
loope
jl
jp
mov
dec
repnz
lock
adc
daa
jno
inc
out
in
stos
adc
pop
jno
call
lods
pushf
mov
jmp
xor
dec
xor
mov
adc
adc
mov
cmp
jnp
shrb
sub
arpl
or
pop
mov
push
inc
sbb
mov
adc
cmpsl
and
and
add
cld
inc
xchg
ljmp
dec
fsubs
cli
inc
lahf
jbe
into
test
sbb
pop
test
xchg
stos
ss
mov
adc
xchg
cltd
test
xchg
xor
addr16
dec
filds
fidivl
iret
js
xchg
cmp
dec
jecxz
mov
mov
push
jne
nop
xchg
inc
or
inc
lods
lods
je
jg
enter
movsb
clc
xchg
pop
test
cmpb
mulb
bound
mov
loop
and
ja
mov
jb
push
ror
mov
aad
bound
hlt
clc
sub
rolb
fisubs
cmp
in
rcr
enter
int
movsl
mov
jmp
stos
adc
add
clc
ljmp
in
push
xchg
and
sub
repnz
sub
xlat
in
popa
cmp
push
sahf
add
xor
cld
push
push
mov
inc
cmp
into
mov
or
test
sbb
push
sub
stos
xchg
pop
lds
out
add
jle
negb
pop
push
push
mov
xchg
push
loope
pusha
aaa
fbld
cwtl
test
loopne
ret
ljmpw
enter
jmp
add
loop
test
and
and
jle
xchg
icebp
mov
imul
xchg
sub
int
sub
mov
and
mov
push
push
add
insb
daa
mov
sub
sahf
icebp
and
pop
jne
sub
in
push
mov
das
xchg
test
jne
int
and
jae
push
lock
pop
cmp
mov
push
adc
mov
scas
pop
push
sub
rcrb
fs
dec
outsb
push
ja
sub
cltd
test
mov
iret
mov
or
fsubrl
ja
pop
lret
mov
and
cmc
mov
adc
fstps
pop
test
push
xor
mov
push
cs
cmp
inc
sub
jmp
mov
jle
insl
fisubs
or
inc
lock
aas
lods
icebp
xchg
faddp
mov
outsl
sbb
push
lods
aad
ss
dec
iret
inc
push
adc
outsl
xlat
sbb
push
adc
adc
out
adc
mov
mov
add
lret
cmp
cmp
push
push
inc
push
jo
pusha
ss
movb
rolb
loopne
adc
push
xor
jbe
push
inc
push
jo
pusha
ss
movb
rolb
loopne
adc
pop
and
jb
push
inc
jge
and
xchg
movl
xchg
hlt
scas
rclb
mov
or
push
push
push
push
jo
loopne
nop
cmp
sbb
mov
out
pmaxub
into
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
adc
lret
in
popf
pop
mov
addb
add
add
add
xchg
add
add
jmp
add
jae
cmp
stc
add
add
add
add
cmp
pop
add
add
add
add
add
add
add
add
add
add
je
mov
imul
add
add
jg
popl
pop
add
add
stc
add
add
add
add
add
lret
add
add
fiadds
push
add
mov
imul
add
add
add
add
add
add
add
add
add
add
add
and
jp
stc
add
add
add
dec
add
add
add
mov
push
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
rolb
mov
jg
fiadds
das
add
add
mov
cmp
addl
add
add
inc
add
push
cmp
cmp
dec
add
add
add
dec
add
jnp
iret
add
add
add
outsl
add
add
or
push
add
add
add
add
imul
add
push
add
add
add
add
add
add
add
jecxz
mov
push
add
push
add
add
add
enter
pushf
add
inc
add
add
aas
add
add
aam
aam
mov
jns
rolb
sub
mov
str
leave
add
add
add
add
add
add
add
add
add
lldt
sbb
sbb
hlt
add
dec
add
add
cltd
add
add
add
push
add
rolb
pop
add
add
add
add
push
add
add
add
add
add
jge
push
add
dec
add
add
mov
pop
add
add
add
add
aam
outsl
add
add
add
add
add
add
add
add
aas
add
pop
add
add
add
mov
aam
lret
add
add
add
add
faddl
outsl
add
add
add
add
mov
add
jmp
add
add
add
add
add
je
jl
rolb
sub
sbb
push
add
ret
add
add
add
add
outsl
add
lret
add
add
sbb
iret
add
add
add
jge
addb
add
add
push
add
je
mov
dec
add
add
add
add
add
flds
outsl
add
add
add
add
push
add
dec
add
add
push
add
add
add
add
inc
add
add
add
add
add
adc
or
add
add
add
aam
jbe
lods
add
add
dec
add
add
add
mov
inc
add
add
add
add
add
add
add
sbb
mov
je
or
popa
add
add
mov
dec
add
add
add
add
movsb
add
pop
add
add
add
add
inc
mov
inc
popa
dec
mov
fisttpl
jae
fdivp
in
pop
out
xchg
loop
mov
ret
jecxz
cld
push
out
sbbb
aaa
popa
mov
movsb
add
ret
mov
popf
sbb
shll
mov
xchg
lock
movsb
cmp
fs
cld
or
js
sarb
cld
fs
mov
xlat
mov
loop
movb
mov
mov
xchg
sbb
test
imulb
mov
xchg
leave
roll
ret
movsb
mov
out
xchg
push
movsb
pop
jbe
jle
pusha
mov
push
pusha
movsb
sbb
and
imul
dec
add
xchg
or
cmp
insl
rcr
and
push
push
cmpsb
xor
mov
xlat
adc
pop
ja
mov
stc
inc
jp
sbb
jns
movb
loop
fimull
fwait
cltd
adc
mov
jl
js
int3
int3
scas
sbb
fmuls
dec
and
iret
fsub
mov
call
inc
scas
popf
lret
jbe
dec
les
mov
dec
lahf
idiv
bound
pop
ljmp
je
negb
shl
jp
push
int3
stc
inc
fs
outsl
leave
test
sbb
loopne
pop
gs
mov
lods
iret
jno
jl
sub
lahf
test
js
jecxz
push
add
daa
cli
add
daa
add
xchg
xor
inc
add
rcll
and
pop
in
arpl
test
jp
xchg
dec
sbb
jbe
das
loopne
mov
xchg
xchg
imul
aaa
in
mov
jns
cmp
sbb
rolb
pop
add
int3
add
mov
jo
stos
cmp
lods
push
mov
or
mov
dec
and
xchg
scas
lea
aad
inc
xchg
aam
aad
scas
mov
cmp
push
push
dec
pusha
in
add
dec
repz
jnp
lret
xchg
xchg
ja
jp
addr16
dec
jg
scas
and
xor
mov
arpl
js
lret
mov
push
mov
fcompl
int3
xor
mov
iret
and
in
add
mov
dec
mov
stos
leave
push
stos
fadds
hlt
sti
rorb
scas
adc
aam
mov
insb
cwtl
ss
in
xchg
cwtl
test
jge
mov
sub
xorl
adc
daa
dec
xchg
push
popf
xor
popa
pusha
movsl
ljmp
cmp
jns
xchg
jns
loope
jecxz
cmp
and
rclb
fistpll
fimuls
or
and
mov
cs
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
