call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xlat
mul
out
das
imul
xchg
fimuls
inc
jne
gs
pop
add
daa
mov
mul
out
xchg
test
push
pop
inc
inc
adc
gs
gs
daa
insl
into
aaa
fisubs
cmp
lahf
stos
scas
movsl
mov
sbb
pop
ja
popa
inc
jns
mov
xchg
mov
outsl
push
mov
lea
sub
fs
out
add
pop
cmp
cmp
pusha
mov
out
je
dec
sub
test
mov
ljmp
fildll
dec
subb
les
push
inc
inc
pusha
sbb
inc
mov
or
or
ret
movsl
and
mov
ljmp
aaa
sub
cmp
or
imul
iret
jne
mov
push
adc
sub
hlt
bndstx
sbb
nop
mull
inc
sub
cwtl
aas
push
out
xor
xchg
xlat
cmc
out
in
jno
std
xchg
push
fistps
outsb
push
jle
nopl
sub
mov
adcl
movsl
ret
push
inc
adc
add
imul
mov
test
inc
ret
lock
xor
pop
and
sbb
pop
pop
push
fs
mov
xchg
mov
movsb
test
push
push
inc
inc
jne
gs
aaa
and
cmc
mul
out
xchg
test
push
push
inc
inc
jne
gs
aaa
and
aam
jo
in
sbb
sbb
jns
mov
push
outsl
dec
xor
jp
jbe
cmp
jmp
shll
movsb
into
push
insb
cltd
cmpsb
pop
cmp
cld
and
push
in
test
or
jg
push
jmp
dec
jno
inc
fdiv
mov
sbb
sub
push
mov
jmp
int3
sbb
mov
bound
movsl
loope
fstp
pop
push
jle
jmp
cmpsl
out
jns
push
daa
cmp
nop
xchg
cmp
xor
shr
bound
lods
repz
out
jge
es
cmp
push
sar
and
mov
pop
testb
adc
sbb
xor
mov
pop
test
or
xchg
push
pop
jg
fcmovne
repnz
jecxz
cmp
mov
sub
cltd
es
inc
jnp
sbb
mov
add
push
add
mov
daa
inc
lock
out
mov
pop
popf
arpl
inc
cmp
cwtl
outsb
rorb
mov
pop
cmp
dec
add
xor
scas
jg
data16
mov
cmp
pop
out
cmpsb
or
imull
adc
add
arpl
xchg
mov
ret
loopne
xchg
div
loopne
add
jecxz
je
mov
mov
jp
cmp
mov
xchg
mov
adc
js
mov
xor
push
push
and
sbb
ss
jnp
xchg
add
mov
sbb
dec
xor
add
cmc
add
lock
imul
out
hlt
mov
and
lock
jp
clc
aaa
push
xchg
adc
notl
xchg
fdivrl
sarl
test
mov
mov
js
pop
mov
mov
popa
or
std
fucom
lds
out
jg
aad
ret
je
in
cmpsl
push
push
insb
adc
xchg
std
push
hlt
mov
mov
fs
out
mov
xor
nop
xor
ficomps
int3
inc
shl
add
pop
push
pushf
in
jge
xchg
sub
mov
jge
cmpsb
push
in
std
aam
push
repnz
pop
stos
rclb
mov
sti
sub
lret
add
lea
mov
nop
test
sub
dec
inc
jmp
cmpsl
les
mov
jbe
mov
mov
std
push
popf
inc
xchg
xchg
sbb
int
loope
rclb
not
xchg
push
ret
andl
jne
andl
jmp
pop
mov
xchg
repz
pushf
jbe
add
lods
ror
jle
push
ret
in
or
arpl
pusha
data16
push
sbb
adc
adc
adc
sbb
xchg
movsl
rcll
aam
dec
or
popa
hlt
iret
jmp
dec
fmul
mov
sbb
inc
leave
or
xchg
inc
shl
sbbb
int3
adc
shll
iret
dec
jno
jae
push
lret
jnp
std
js
out
inc
rorb
mov
cmp
mov
xor
mov
outsb
pop
and
pop
sahf
cmp
push
dec
inc
push
scas
pop
les
fstpt
in
cmc
rclb
cmc
mov
mov
stos
mov
aad
cwtl
pop
sbb
xchg
cmpl
xor
bound
add
mov
gs
add
in
jmp
pop
out
std
jb
xor
push
jo
pop
inc
in
lret
repz
sti
cwtl
loop
stc
cli
sti
or
enter
cmp
icebp
cwtl
imul
pop
xlat
lock
mov
cmp
and
inc
pop
mov
cmp
jecxz
xchg
mov
dec
rol
or
inc
fdivrl
ret
inc
jp
loopne
ret
xchg
insl
clc
int
xchg
sarl
mov
int
arpl
out
add
das
outsb
dec
out
xchg
jle
imul
mov
cmpsb
je
jno
add
add
dec
adc
push
inc
nop
mov
cmp
std
mov
or
int
aas
popf
fisubrs
out
lods
adc
outsl
aas
loope
dec
adc
mov
mov
lea
in
mov
or
mov
movsl
hlt
das
ss
pop
clc
xor
inc
jg
sbb
in
stos
cmp
add
inc
cmp
dec
fwait
nop
loope
insl
dec
aaa
enter
sbb
mov
sbb
mov
lret
cmp
out
mov
xlat
icebp
push
enter
sbb
clc
fmuls
lods
lret
push
int
xor
lcall
imul
and
fcom
inc
lret
pop
lods
cmpl
loop
push
jge
arpl
out
and
insl
pop
xor
mov
xor
mov
addr16
sti
aad
into
cs
int
xchg
xchg
adc
pop
jle
imul
out
push
negl
cmovns
out
movl
pop
dec
xor
int3
jns
and
sbb
addr16
lods
mov
imul
jnp
pop
pop
mov
inc
mov
and
jecxz
cmp
xor
xor
jnp
outsb
je
mov
and
fdivl
sbb
in
mov
pop
inc
sbb
popf
pop
jno
jl
mov
push
inc
cli
mov
sub
cmp
sbb
loop
pop
xor
sub
out
push
jecxz
adc
jo
arpl
ret
pusha
pushf
xor
imul
xchg
fnstsw
cmp
repz
fsub
in
adc
insb
inc
jo
sbb
movsl
fstps
sub
das
fisubrl
jmp
lock
jb
ret
inc
jle
mov
lahf
sub
inc
into
stos
xchg
mov
dec
das
nop
lods
test
and
mov
aad
shll
cmp
sub
movsl
xchg
xor
imul
arpl
repz
jmp
mov
add
adc
test
mov
dec
push
loope
xchg
xor
xor
call
in
loope
movsl
and
dec
mov
fnstsw
pop
sbb
add
and
lea
clc
xchg
inc
popa
sbb
xlat
push
ja
dec
scas
fbld
fdivrl
adc
adc
pushf
daa
jp
adc
data16
or
adc
push
int
push
shl
lods
shll
or
inc
jb
outsl
mov
fndisi(8087
stc
inc
pop
mov
shlb
stos
inc
mov
push
xchg
xorl
daa
ja
bound
jg
out
dec
mov
dec
inc
fildl
push
xchg
or
inc
push
and
icebp
pop
aas
and
arpl
insl
imul
xchg
cmp
outsb
inc
out
divl
test
sbb
mov
dec
dec
mov
int
mov
fwait
call
mov
cmp
mov
and
push
pop
and
js
mov
add
add
pusha
movsb
add
mov
add
add
sti
adc
hlt
jb
aam
mov
out
and
repz
fs
sahf
inc
cmp
ljmp
push
scas
push
outsl
lahf
stc
repnz
xchg
jge
xchg
cmp
mov
outsb
into
fistpll
or
popa
xchg
jmp
dec
lahf
dec
or
mov
sub
xchg
jb,pt
adcl
xchg
inc
inc
adc
sbb
pusha
mov
ds
push
mov
jl
xor
push
cwtl
xchg
out
int3
lea
lret
mov
pusha
ss
imul
jns
push
sbb
scas
add
lahf
push
jle
loope
mov
dec
inc
push
jge
fldl
mov
push
stos
cltd
xlat
or
dec
sbb
enter
lret
adc
jmp
jne
adc
xor
and
daa
fldcw
sbb
cmpsl
aaa
inc
das
cmp
push
jbe
mov
lcall
insb
adc
shl
jne,pn
and
mov
outsb
sub
shlb
test
int
cltd
divb
inc
mov
out
icebp
cli
cs
push
mov
xchg
and
call
daa
mov
out
hlt
sub
mov
xchg
push
mov
and
loop
mov
ja
xchg
pop
mov
sub
pop
cmp
adc
mov
mov
push
cld
mov
add
sub
sti
insl
clc
ficompl
mov
cmpsl
sub
aaa
fiaddl
xor
mov
mov
xchg
cli
into
fs
cmp
push
push
pop
loope
xchg
movsl
pop
jg
lods
sbb
pop
dec
push
aad
hlt
and
push
movsl
fistps
fildl
xlat
add
gs
inc
repz
pop
stos
fs
movsb
push
or
loop
pop
and
mov
add
or
xchg
mov
in
mov
in
inc
jp
xchg
iret
call
sbb
sbb
arpl
inc
jae
scas
aad
pop
ds
icebp
inc
push
inc
mov
sarb
mov
lods
int3
fsubr
mov
inc
dec
add
popf
out
and
daa
test
pop
inc
aad
and
push
push
mov
push
xchg
aam
outsb
and
sub
mov
xor
call
jno
icebp
sbb
call
xor
js
inc
ljmp
cld
pop
add
in
mov
inc
clc
sbb
mov
std
lds
or
sbb
sbb
inc
ss
lret
push
insb
outsl
or
pop
int3
cmc
cmpsl
popf
jae
daa
out
sbbb
push
sub
out
outsb
mov
das
push
pop
gs
sbb
adc
lcall
push
mov
lock
and
fnstenv
mov
push
mov
or
cmp
sbb
dec
das
xlat
cmpb
icebp
cmp
add
push
xor
fwait
loopne
push
in
pop
lahf
popf
jmp
es
xchg
test
sbb
pop
mov
fnstenv
xor
leave
dec
mov
pushf
push
ds
mov
jns
cltd
out
nop
insl
and
fdivs
sbb
js
mov
push
ret
loopne
stos
xor
inc
and
outsl
rcrb
sbb
pushf
cld
scas
dec
mov
cmc
outsl
lret
adcb
sub
pop
and
cmp
inc
dec
pop
push
stos
or
pusha
mov
movsl
jp,pt
in
ficompl
loopne
jae
ljmp
das
lcall
daa
push
dec
js
mov
cmc
in
je
loopne
scas
or
xor
or
gs
jp
sbb
out
cmp
mov
push
xor
sub
xacquire
std
sahf
jle
sbb
lea
or
add
inc
jae
inc
jecxz
inc
cltd
sub
test
dec
int
mov
fsubrs
add
loop
adc
out
fistps
ret
push
xor
xorb
jae
xchg
cmpsb
mulb
add
daa
inc
out
xorb
stos
js
arpl
pop
mov
push
dec
enter
dec
cwtl
stos
test
loop
xchg
cltd
lret
jle
aam
inc
loopne
sub
fst
data16
nop
lret
mov
mov
and
mov
outsb
inc
dec
shrl
inc
and
jle
cmc
iret
pusha
push
js
in
xchg
mov
push
clc
jecxz
fcmovnbe
in
fidivrl
push
es
mov
push
mov
lea
xchg
sub
insl
mov
jecxz
pop
aam
add
ret
test
arpl
lcall
aam
adc
jne
mov
iret
pop
cmpsl
bnd
mov
int3
lea
jns
lock
fstp
mov
mov
addl
mov
int
inc
mov
outsl
arpl
nop
push
adc
or
call
sbb
xor
call
lea
or
imul
or
xchg
out
sub
call
cmpsb
mov
imul
das
sbb
cli
sahf
mov
icebp
mov
stos
dec
call
outsb
insl
jle
cmp
mov
bound
ljmp
pop
arpl
and
cs
push
cmp
js
sbb
call
stc
pusha
pop
xchg
push
inc
ret
push
xchg
stos
cld
shrb
push
mov
dec
pop
lret
jns
push
in
pop
mov
push
dec
negl
mov
fnstenv
and
loope
scas
dec
movsl
pop
cld
cltd
xchg
xor
lds
lods
pop
cmp
popa
push
cli
filds
add
pop
sbbb
setno
adc
xor
je
jge
push
repz
out
inc
arpl
push
mov
dec
pop
addb
mov
clc
in
push
sub
dec
cmp
lock
xchg
push
xor
int3
in
push
lret
repnz
mov
imul
roll
mov
lock
into
inc
in
repnz
cmp
faddp
lret
addr16
mov
jecxz
int
cmp
insl
jae
aad
cwtl
pop
dec
cwtl
or
sub
xchg
push
sbb
mov
das
xchg
pushf
cmp
cmp
rorl
pop
std
mov
pop
enter
bswap
xchg
pop
add
cld
popf
pop
push
aas
push
mov
in
xchg
ret
aad
sbb
mov
enter
xor
dec
nop
scas
xor
dec
stos
or
sbb
stos
and
xchg
fwait
iret
sbb
xchg
and
repz
sub
fimuls
js
stc
int
mov
xchg
test
insb
cmpl
inc
adc
out
lea
mov
pop
jp
inc
sbb
pop
mov
movb
adc
or
arpl
je
cmp
jne
inc
and
std
or
add
test
jbe
dec
cmp
or
out
incb
les
fadds
mov
push
andb
or
enter
sub
xchg
push
sahf
into
sahf
loop
and
imul
int
mov
fisubrl
movsl
fwait
stos
shrd
sti
mov
dec
pusha
inc
mov
or
dec
jl
or
inc
outsl
mull
jge
push
jae
jnp
icebp
mov
mov
mov
add
add
adc
loopne
fidivrs
adc
mov
negl
mov
jle
jmp
or
imul
cmp
xchg
push
sbbb
test
add
and
loop
inc
imul
push
push
sub
pusha
mov
pop
decb
jmp
and
rclb
bsf
pop
mov
mov
add
lea
xchg
push
pop
inc
rcrl
mov
icebp
jno
pmaxub
inc
jnp
test
xchg
or
jo
inc
ss
and
aaa
mov
loop
or
out
lods
dec
jecxz
loopne
inc
cmp
and
push
fsts
mov
sub
sar
call
pop
push
dec
imul
aas
stos
pushl
inc
lea
dec
or
push
push
xchg
fwait
shll
mov
stos
loope
jmp
mov
mov
adc
mov
imul
sbb
movsb
leave
push
fiaddl
pop
mov
push
xor
sahf
rcr
subb
addr16
xchg
push
xchg
cmpsl
pop
cmpsl
stc
xlat
xlat
mov
gs
in
push
dec
shll
fdivs
xchg
sbb
fwait
stc
sub
mov
lret
xchg
xchg
mov
pop
and
inc
stc
xor
stc
add
lock
enter
lret
bound
aam
jnp
sarl
cmp
test
pop
ljmp
inc
test
sub
arpl
cmp
add
cmpsb
andl
sbb
push
enter
and
jae
lcall
sub
fstpt
pusha
cmpsl
jmp
fistps
pop
or
adc
fistps
sub
push
mov
mov
inc
mov
int
das
mov
xorb
mov
inc
cmp
sub
in
xchg
in
mov
mov
cmp
popa
cmp
loopne
jg
in
outsb
les
es
iret
lds
add
hlt
push
or
inc
ljmp
adc
xchg
in
mov
inc
ret
mov
adc
loopne
in
sahf
push
fistpll
add
in
inc
dec
test
divb
and
pop
add
push
mov
cwtl
and
dec
insb
popa
fidivl
xlat
xchg
jb
adc
or
sub
fildl
stos
rorb
outsl
imul
mov
movsl
adc
loop
mov
lahf
mov
mov
xchg
mov
xor
xor
add
cltd
dec
add
daa
lods
add
and
lods
scas
lods
iret
dec
ret
adcb
int
inc
adc
mov
jb
into
jbe
rolb
pop
pushf
fadds
sti
loop
mov
arpl
mov
inc
xchg
adc
cmpsb
xchg
add
xor
jb
mov
inc
sbb
rcrb
movsb
inc
or
cmp
mov
ljmp
rcl
imul
aad
adc
xlat
xchg
add
ja
nop
clc
dec
jo
inc
xchg
push
repnz
adc
movsb
shll
sub
xchg
sbb
fdivs
jae
or
pop
fidivrl
mov
loope
dec
sbbb
test
mov
cwtl
outsb
into
push
xchg
les
push
sbb
add
push
stos
and
jp
adc
mov
mov
pop
fdivl
jecxz,pt
lods
xlat
inc
pop
inc
cmp
into
push
loope
ss
movsb
xor
sti
test
ds
adc
sarb
jno
into
lcall
rol
nop
insl
mov
shrl
scas
xchg
adc
test
cs
test
pop
mov
scas
cmp
leave
sbb
jle
inc
cltd
test
orl
mov
cltd
xor
push
test
and
inc
mov
dec
sti
pop
stos
imul
es
dec
mov
nop
orb
scas
mov
fldl
jno
xchg
js
stos
test
xor
in
repnz
sub
rcr
xor
jmp
insl
pop
pop
int3
hlt
lret
mov
into
push
jle
lods
mov
lock
stos
popa
push
mov
lods
jl
imulb
imul
dec
sbb
adc
lock
cmp
fs
pop
sub
jne
loop
shll
outsb
lcall
stos
aam
andb
jl
rclb
cs
scas
mov
pop
inc
sbb
movsl
sub
sbb
cmp
addb
pop
inc
xchg
mov
sarl
lret
aam
cmpsb
xor
outsl
decb
lea
lds
aaa
addr16
mov
insb
push
mov
jge
mov
scas
mov
outsl
add
arpl
and
shrb
push
jl
jmp
cs
inc
dec
cld
xor
pop
lods
jecxz
cwtl
sbb
inc
push
xlat
mov
pop
xchg
dec
inc
into
cli
inc
out
mov
fwait
lret
dec
mov
aad
cmpb
in
sbb
daa
add
dec
xchg
in
mov
xorl
pop
mov
nop
add
jmp
clc
xchg
data16
loope
push
aas
inc
xor
dec
dec
dec
fisubrl
or
mov
jp
sub
inc
mov
loop
je
test
into
lds
and
adc
pop
xor
lcall
cs
pop
xchg
jns
je
hlt
push
and
out
ss
xor
adc
es
out
fnstcw
mov
sbb
adc
filds
dec
jle
xchg
jecxz
or
mov
js
or
mov
les
lods
ss
sahf
iret
bound
xlat
aaa
popa
outsb
jg
sbb
addr16
jl
ds
push
imul
ljmp
mov
test
jge
out
cmpsl
iret
arpl
sub
lock
xor
mov
inc
or
dec
mov
push
xchg
push
pop
shlb
mov
pop
out
enter
sbb
mov
pop
in
pop
dec
mov
mov
shl
in
jns
xchg
les
xchg
sbb
jo
aas
mov
subl
xchg
idivl
inc
lods
jo
mov
cmpsl
xchg
inc
jmp
int
test
out
xlat
cmc
in
mov
sub
test
jl
mov
push
xlat
pushf
xchg
push
add
ds
xchg
lret
shrl
and
xchg
movsb
mov
addb
push
ss
xlat
pushf
in
fnsave
inc
outsb
out
pop
jecxz
rep
fdivrs
ret
fdiv
and
test
adc
push
cmpsl
inc
nop
jmp
pop
or
nop
enter
ds
mov
outsl
pop
and
dec
iret
mov
inc
xchg
xlat
movb
outsb
call
out
mov
and
jmp
lds
scas
gs
gs
mov
int
jns
push
js
xchg
push
in
mov
insl
jp
stc
nop
lea
xlat
jmp
rclb
inc
outsl
push
in
dec
inc
in
fsubl
xchg
adc
sub
popf
hlt
mov
sbb
add
in
or
mov
sbb
icebp
and
mov
leave
fsubrs
aad
xchg
cmp
mov
in
xchg
xchg
test
push
push
inc
inc
jne
gs
aaa
and
cmc
mul
out
xchg
test
push
push
inc
inc
jne
gs
aaa
and
xchg
mul
out
xchg
test
push
push
inc
inc
test
arpl
xor
and
rcrl
out
xchg
xchg
xchg
push
mov
adc
lea
dec
ficompl
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
fwait
pop
mov
scas
pop
test
adc
sub
sbb
or
pop
cwtl
dec
push
fwait
pop
mov
sti
cmp
or
sbb
call
sbb
or
pop
cwtl
dec
push
fwait
pop
mov
sti
cmp
or
sbb
call
imul
lret
ds
dec
sbb
sbb
dec
pushl
addr16
cmp
xchg
sub
daa
sarl
sbb
pop
and
rcr
addb
je
add
adc
xlat
lock
push
xchg
sbb
or
mov
leave
mov
scas
adc
insb
adc
jge
ljmp
sti
in
aad
push
pop
lret
test
movsb
cwtl
dec
push
lcall
push
xor
fwait
sbb
jne
sub
daa
hlt
clc
sub
push
es
push
int
movsl
jbe
sti
sbb
and
popf
jmp
out
cmp
mov
ja,pn
cwtl
sbb
push
jb
cmpsl
incb
xor
dec
scas
les
or
lahf
dec
dec
lcall
fwait
pop
mov
sti
cmp
or
sbb
call
sbb
or
pop
cwtl
or
push
fstpl
int
xchg
push
stos
addr16
popf
inc
mov
push
stc
adc
fld1
cs
cli
or
sub
jae
dec
mov
lret
lcall
addr16
adc
add
cs
push
out
cmp
jmp
fistpl
lret
call
sbb
or
pop
cwtl
dec
push
fwait
pop
mov
sti
cmp
or
sbb
call
sbb
or
pop
cwtl
dec
push
imul
std
pop
mov
out
testl
cmp
add
not
sub
mov
inc
in
adc
mov
js
daa
xor
xor
xchg
lret
pop
and
ljmp
bound
test
xor
inc
adc
hlt
push
cmp
ret
out
jl
mov
repnz
inc
adc
pop
adc
xchg
dec
adc
roll
out
int
mov
inc
lret
mov
xchg
or
stc
mov
push
cmp
repz
pop
push
aas
adc
les
or
adc
or
das
gs
bound
xchg
cwtl
in
pop
scas
or
lcall
mov
pop
jp
test
mov
jmp
mov
and
cmp
dec
cmpsb
adc
dec
jecxz
dec
imul
xchg
addr16
popf
xor
arpl
jae
das
in
push
inc
ret
jae
add
lds
mov
popa
and
pop
imul
inc
cli
ljmp
jbe
cwtl
sub
ret
xor
mov
fidivl
enter
sbb
mov
xor
mov
and
pop
jnp
cli
add
addl
and
push
ljmp
scas
push
cmc
jne
xchg
xor
dec
stc
mov
fstl
xchg
call
xlat
in
inc
mov
out
sti
dec
push
lds
jmp
stc
dec
sbb
idiv
dec
mov
xor
push
jmp
scas
mov
loope
ret
and
inc
mov
call
jno
mov
divl
or
ljmp
movsb
pop
push
add
pop
adc
xor
pop
xor
sub
add
mov
jno
out
sti
jmp
dec
cs
negb
out
xorb
cli
xorl
and
fsubr
mov
je
xchg
fdivr
add
push
cmp
inc
mov
jno
out
movsb
jns
push
in
mov
mulb
insb
call
fwait
iret
mov
mov
clc
sub
scas
add
push
sbb
int3
ljmp
sti
scas
fstpt
jp
lcall
dec
jnp
test
jmp
scas
fcoms
cmpsl
push
in
jne
stos
add
cwtl
aaa
iret
cwtl
cwtl
add
mov
mov
sbb
enter
add
jns
mov
adc
mov
popl
add
out
test
jl
or
mov
jl
pusha
dec
ret
out
or
jmp
aaa
rclb
sub
push
ss
xchg
into
cmpsl
test
jmp
cmpb
sub
xchg
mov
sub
xchg
sbb
dec
or
inc
jge,pn
push
adc
cli
xchg
mov
pop
pop
scas
mov
repnz
cmc
cmp
hlt
mov
xor
mov
sub
loopne
inc
pop
mov
sbb
pushf
fs
sbb
cmp
test
repnz
jecxz
shrl
loopne
mov
push
pop
add
xchg
lret
lods
jnp
cmp
outsl
sbb
enter
ljmp
inc
pop
jo
cmp
aaa
sbb
sub
add
push
jns
cmpsl
rcr
xor
cwtl
mov
jne
mov
inc
es
mov
pandn
jno
mov
or
loop
leave
rolb
dec
rcrb
test
mov
and
aaa
xor
or
sbb
aas
repnz
adc
jns
push
pop
add
lods
xor
fldt
jae
outsl
and
jnp
rolb
das
xchg
mov
pop
loopew
or
fiadds
cmpsb
jno
orb
aaa
pop
aas
jbe
sub
jb
fdivrs
filds
jge
insl
jge
mov
dec
inc
into
fcomps
popa
mov
in
push
fidivrs
into
add
and
imul
rclb
mov
or
aaa
inc
or
scas
adc
scas
stos
test
pusha
mov
mov
push
imul
jge
sar
test
mov
mov
cmp
dec
rorb
aaa
add
in
sbb
xchg
je
mov
lock
push
or
jbe
imul
scas
daa
inc
ret
push
jle
cmp
mov
adc
add
insl
xchg
and
icebp
scas
lock
mov
int
add
stc
movsl
or
push
xchg
test
roll
xchg
mov
loopne
inc
push
xchg
xchg
mov
and
mov
insl
inc
cmpsb
pop
and
insb
lods
jge,pt
in
cmp
push
sti
imul
adc
dec
jp
clc
insb
jae
xchg
cmp
dec
stos
outsb
inc
xor
pusha
fldln2
or
jb
loop
xchg
mov
negb
xchg
ret
mov
xchg
xchg
repz
pop
fcmovne
int
leave
xchg
ss
sub
xchg
imul
sub
prefetchw
add
inc
sub
add
mov
mov
ja
sbb
subl
subl
ficompl
ss
fs
and
jmp
js
inc
mov
push
div
dec
jb
adc
jne
push
dec
and
repnz
pop
sub
fs
into
sub
iret
pop
sahf
and
jle
sub
or
ja
nop
inc
add
fimull
lock
ljmp
sbb
mov
mov
dec
jle
push
adc
dec
outsl
mov
sbb
xchg
and
divb
arpl
sub
fildll
dec
pushf
inc
or
imul
mov
int3
pop
loope
test
orl
and
xor
shlb
jno
jmp
jg
pushf
enter
roll
mov
stc
dec
insl
push
sbb
jne
daa
leave
nop
adc
cmp
xchg
das
add
out
shlb
adc
fdivrs
mov
clc
aam
insb
pusha
loope
inc
imulb
cmp
insb
dec
ss
inc
xchg
fistpll
stc
and
pop
xor
imul
aas
call
fdivl
popf
or
pop
lahf
test
add
pop
aaa
push
inc
jae
lock
dec
mov
repnz
sbbl
jno
dec
add
in
insl
test
loop
in
pop
mov
test
icebp
fidivs
pop
or
cwtl
pop
sub
mov
icebp
into
int
xlat
call
ds
cmpsl
aad
push
adc
mov
push
jnp
adc
xor
add
sbb
ja
stos
dec
js
xchg
cmp
mov
in
mov
cmp
stc
jo
clc
mov
push
xor
inc
pop
dec
cmp
pushf
jne
outsb
jno
imul
inc
dec
mov
test
dec
pushf
ljmp
add
mov
lret
xor
mov
lcall
imul
addr16
xor
leave
mov
clc
xor
mov
mov
cwtl
jmp
out
lahf
stos
mov
jno
push
mov
xchg
dec
scas
ret
imul
xchg
stos
cmc
mov
lea
mov
lods
xchg
or
cmc
test
inc
loop
pop
mov
lret
add
add
fstpt
pop
scas
push
stos
jle
jo
push
dec
outsl
pop
addr16
stos
cld
or
aaa
jmp
mov
add
mov
inc
sbb
xchg
and
cmp
inc
mull
addr16
aas
cmpl
mov
and
shrb
mov
mov
or
fwait
mov
insl
jno
repnz
loopne
call
cld
loop
popf
fnstenv
push
inc
xor
cmp
mov
inc
xchg
pop
inc
dec
xor
push
mov
mov
cli
pop
addr16
push
inc
sahf
cwtl
mov
or
enter
rorb
jae
out
xor
or
pusha
jecxz
dec
sahf
pop
cli
lock
mov
in
push
test
or
cmpb
xor
aam
fldt
cmp
inc
out
inc
dec
and
push
mov
jmp
xor
shll
add
pop
leave
cmpsb
sbb
std
imul
pop
push
mov
repz
sub
add
stos
lcall
push
loope
jnp
mov
sbb
pop
lahf
adc
int
lods
inc
xlat
add
xor
adc
mov
or
adc
cmp
ss
test
je
jmp
pop
xor
fimuls
pop
adc
push
mov
mov
js
and
fistpl
inc
xor
ror
in
jbe
mov
dec
cmp
sub
test
ficompl
jnp
je
fsubs
push
or
lcall
mov
out
jge
dec
test
lods
enter
pushf
fcoms
dec
push
adc
int
jno
mov
nop
pushf
movsl
sbb
pop
and
push
icebp
jnp
lret
cmp
adc
pusha
stos
outsb
arpl
jbe
lds
xchg
mov
popa
cltd
sub
fcmovnb
push
or
jae
leave
movsb
sub
dec
shrb
mov
loope
adc
dec
cmpsb
outsb
dec
lcall
les
jmp
cli
iret
pop
aaa
cmp
repz
into
popa
sbb
shld
in
pop
xor
cmp
test
daa
dec
cmp
pop
loopne
mov
xor
jecxz
stos
dec
loope
push
jl
xchg
xchg
out
call
push
push
inc
jo
test
push
imul
mov
scas
insl
xor
jns
fwait
jl
sub
mov
sbb
and
inc
mov
enter
sbb
mul
or
jo
sub
sbb
xor
inc
add
stc
sbb
popf
not
pop
and
pop
mov
sub
repz
out
imul
xor
mov
xchg
pop
imul
dec
mov
insl
ja
mov
jl
jo
mov
inc
pop
icebp
inc
sbb
imul
fists
sti
inc
pop
add
ret
aas
mov
push
mov
je
fcmove
jle
sbb
mov
fadd
loope
mov
sub
cmp
outsb
sti
in
jno
nop
mov
cmp
mov
pop
jbe
push
lea
adc
cmp
scas
fwait
sub
mov
in
cmc
mov
std
and
lret
sti
mov
test
mov
repnz
pushf
push
add
adc
insl
lahf
enter
shrl
xor
ljmp
mov
push
stos
dec
pop
stc
nop
and
add
cmp
jp
xor
xchg
int3
shll
push
lea
xchg
sbb
stos
gs
arpl
mov
stos
pop
pop
ja
xor
xchg
inc
push
lods
sbb
jne
or
and
sbb
mov
add
shl
daa
and
adc
mov
inc
lea
push
enter
movsl
loop
bound
out
clc
popf
fdivl
or
xchg
cmp
out
adc
ljmp
inc
and
mov
mov
or
and
mov
push
pop
fwait
pop
push
sbb
push
mov
mov
mov
mov
lock
sub
xor
mov
dec
popa
xchg
call
stos
mov
adc
lods
mov
inc
stc
fdivrl
hlt
cmpsb
pop
fildll
mov
inc
je
stc
decl
xchg
xor
jnp
push
mov
add
dec
imul
inc
pop
dec
jmp
repz
sbb
testl
dec
mov
push
les
loope
xorb
cmc
pop
add
int
xchg
out
sti
test
outsl
in
imulb
xchg
mov
scas
das
mov
lcall
out
cmc
aam
push
mov
arpl
fdivs
and
add
mov
inc
clc
or
mov
jecxz
test
loope
xchg
insl
std
inc
rcrb
sub
jnp
pop
push
sbb
sub
mov
cltd
outsb
inc
lds
scas
push
loope
out
fisubl
sbb
in
or
mov
inc
inc
lods
ds
lock
push
sub
cs
adc
pushf
xchg
mov
xchg
xor
cmpb
xchg
ljmp
pushf
outsl
shl
jo
cmc
sbb
scas
ds
jbe
xchg
sub
xchg
fildll
lahf
push
push
lods
jnp
outsl
daa
shll
jl
sbb
add
ja
sbb
mov
pop
ret
xor
or
lcall
sub
cmpsl
fistpll
movsl
test
sbb
xor
cs
push
push
cmp
mov
inc
jmp
or
jle
xchg
pop
aaa
cli
inc
out
jb
fisttpll
mov
sub
mov
xor
adc
in
sbb
xchg
jle
mov
mov
mov
or
jnp
jns
in
jne
sbb
test
sbb
ss
outsb
js
idivl
fisubrl
psubusb
or
repnz
pop
aas
xchg
mov
jno
mov
dec
dec
decl
mov
data16
adc
adc
add
or
fdivrs
decb
push
mov
cltd
inc
push
jp
sti
repz
mov
dec
mov
call
in
stc
mov
mov
pop
cmp
and
dec
pop
std
xchg
sbb
imul
mov
jb
movsl
push
fiaddl
lret
jge
push
jne
jmp
xor
xor
lock
mov
pop
in
loope
cmpsb
int
inc
mov
insl
leave
lahf
repnz
repnz
or
mov
dec
lds
dec
dec
pop
push
adc
ret
ret
xorl
icebp
mov
mov
dec
sub
leave
shll
push
rorb
mov
aad
je
data16
push
test
mov
loop
jb
mov
dec
popa
sub
cs
add
jl
inc
mov
in
test
mov
call
es
aaa
push
dec
mov
fimull
nop
jge
mov
jg
or
mov
cmp
int
and
hlt
mov
sub
divb
pop
rclb
pop
push
sub
xchg
fldt
adc
add
adc
mov
cltd
pop
mov
rorl
lods
std
jl
mov
psubb
cmpsl
pop
add
jecxz
fisttpl
aas
mov
dec
xor
pop
inc
shrb
sbb
lahf
and
xlat
mov
jae
cld
mov
dec
fs
repnz
mov
in
jmp
inc
sub
ja
mov
jo
lods
rclb
ljmp
fbstp
fiaddl
arpl
std
mov
jmp
jne
xchg
cli
insb
ret
inc
or
outsl
cltd
les
cltd
out
repnz
pop
sub
lret
sub
out
or
arpl
cwtl
fdivs
lods
out
fldl
pop
imul
rcrb
loop
in
fcoms
mov
dec
xor
fwait
inc
mov
out
dec
ljmp
sub
lea
fdivrs
jb
jmp
sub
dec
fadd
cmp
rcll
jbe
mov
std
cmp
in
mov
imulb
sbb
push
dec
imull
or
or
sbb
jo
mov
push
sbbb
push
ja
pop
adc
mov
adc
sti
jg
out
dec
movl
xchg
sub
mov
arpl
sbb
outsb
arpl
dec
push
mov
dec
mov
push
mov
adc
add
xchg
enter
jle
xcrypt-cfb
cmpsl
and
fimull
cmc
mov
jns
popf
mov
rdtsc
loopne
popf
int
xchg
ret
xlat
add
test
and
sub
jno
jo
imulb
pop
inc
in
and
shlb
and
push
add
fs
xor
xchg
xor
sbbb
pop
pop
and
ja
negl
cmp
add
pusha
cmp
push
add
push
pop
jae
pusha
pop
bnd
mov
in
mov
jp
fisubl
sub
inc
fiaddl
call
gs
test
ret
mov
jmp
sub
fcmove
sub
sub
popf
xorl
or
jmp
out
insl
hlt
adc
dec
add
sti
ljmp
or
fmull
cmp
aas
mov
test
push
data16
sub
sbb
xchg
test
test
dec
or
xchg
fldenv
sub
imul
stos
cltd
fnstenv
std
shll
lcall
lds
mov
dec
pop
cs
mov
aas
or
xor
mov
jle
fs
xchg
add
outsl
cmc
jnp
insb
pop
push
adc
jp
lds
imul
dec
pop
out
fdivr
pop
or
ljmp
dec
mov
push
pop
jns
aaa
sbb
push
enter
loop
jp
mov
leave
xchg
sub
add
in
add
lret
std
inc
inc
mov
ja
pop
loope
andb
insb
mov
testb
lock
lahf
test
dec
inc
loope
sub
jns
mov
xor
adc
push
std
in
iret
pop
jl
cmp
nop
jp
mov
je
rcrb
insl
xchg
imul
daa
push
sub
mov
repz
in
orl
bound
mov
and
and
mov
mov
shlb
add
xor
mov
stos
jge
aad
sbb
xchg
push
sub
adc
pop
cltd
ret
jnp
int3
dec
pop
loop
and
xor
sarl
aaa
jne
mov
cmpsb
lock
mov
lods
push
cltd
stos
lds
mov
pop
jns
stc
in
mov
insb
jne
aad
mov
fdivp
or
sbb
jno
cmp
les
jle
jge
jmp
mov
and
mov
cmpsl
mov
and
jno
cmp
pop
cld
ljmp
int
pop
sbb
inc
or
cli
pusha
dec
mov
je
jb
pop
jmp
test
lods
push
lea
insb
arpl
sbb
cld
adc
sbb
movsl
in
neg
cmp
mov
int
aaa
in
push
sahf
clc
pusha
xchg
imul
fucomi
out
inc
insb
add
jp
cmpsb
add
icebp
popa
dec
test
mov
mov
addr16
cltd
mov
mov
or
stos
xchg
add
std
stos
ja
aas
in
ficoml
bound
jge
cmp
dec
pop
lea
addr16
pop
xchg
jle
ret
insl
cltd
rorl
enter
sbb
stos
add
or
std
fwait
xchg
cmc
cmp
mov
sbb
in
mov
subb
into
pop
leave
cmp
lret
bound
cmp
sarb
add
outsb
push
mov
jns
push
scas
adc
into
mov
adc
inc
jecxz
out
mov
scas
insb
mov
repz
loopne
scas
push
insl
sbbl
jne
cmpl
xor
rolw
dec
push
ret
pop
pop
mov
sbb
icebp
xlat
fstps
push
aaa
imul
ret
push
mov
jns
xor
xchg
pop
stos
cltd
pop
inc
in
lret
cmpsb
sub
cmp
mov
adc
sub
fdiv
pop
push
into
add
cmp
jge
add
and
fldenv
inc
mov
fdivs
rcll
loop
loope
and
ret
clc
test
jb
cmp
testl
idivl
inc
scas
xchg
insl
cld
cmp
int
sbb
lcall
adcb
pushf
call
push
test
jle
jge
mov
pushf
pushf
shrl
push
jb
int3
leave
push
mov
lcall
jae
mov
fidivrs
inc
mov
inc
mov
outsb
iret
and
test
vmwrite
pop
bound
mov
lods
mov
push
or
icebp
fildl
push
cld
jo
icebp
push
pop
dec
ljmp
pop
and
sbb
std
mov
arpl
mov
test
or
push
push
mov
scas
add
into
mov
and
ljmp
roll
add
loope
push
fwait
sub
loopne
stos
arpl
iret
jp
jo
xchg
push
lcall
int3
cmp
push
addl
je
enter
dec
mov
ja
inc
inc
mov
insl
mov
inc
outsb
fnstenv
rolb
fwait
push
push
cld
push
inc
fadd
test
cmp
cmc
inc
rcll
int
adc
lock
fildll
sub
sti
push
fdecstp
outsl
or
iret
bound
inc
sbb
sub
lret
aas
lahf
pop
cltd
adc
lcall
or
sbb
call
sbb
or
pop
cwtl
dec
push
fwait
pop
mov
sti
cmp
or
sbb
call
sbb
or
pop
cwtl
dec
push
fwait
pop
mov
sti
cmp
or
sbb
jmp
sbb
or
pop
cwtl
dec
push
fwait
pop
imul
pop
andl
xor
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
sbb
or
cmp
sub
or
fs
lcall
lret
enter
ljmp
sub
pop
pop
dec
jns
imul
mov
mov
lret
jmp
or
xchg
xor
inc
push
jbe
xchg
imul
in
lea
ljmp
pop
jg
insl
dec
sarl
jb
xor
ljmp
fdivs
pusha
xchg
xchg
jae
dec
mov
cmp
sub
mov
mov
stc
sti
push
addr16
cmc
bswap
and
lcall
loope
pop
jbe
xorl
xor
cli
sbb
sbb
lock
and
gs
mov
leave
xor
dec
je
scas
cmpsb
jle
sysenter
jb
push
leave
dec
lcall
leave
lret
push
jmp
adc
jle
adc
cmp
lcallw
stc
mov
fistpl
outsb
rcrb
adc
cmp
pop
dec
jns
jo
sbbb
mov
not
xor
cli
jmp
or
add
cs
and
cltd
fsub
iret
lret
ret
fnstenv
test
push
pop
pop
sysexit
xor
cmp
in
fdivrl
mov
cmpl
dec
adc
dec
dec
jns
imul
mov
leave
lret
jmp
or
cmp
sub
dec
dec
jns
imul
mov
leave
lret
jmp
fldl
ret
sub
and
and
fdivl
mov
xchg
je
testl
sub
cmc
je
movsb
test
imul
xchg
cmpsl
int3
mov
lds
ffree
dec
xchg
add
xorb
add
call
lret
mov
mov
adcb
nop
in
popf
inc
pop
add
mov
xchg
mov
inc
out
pop
lods
push
orl
lret
cwtl
add
mov
sbb
nop
fnstenv
cmp
or
scas
inc
xchg
sub
push
dec
dec
in
mov
mov
jbe
daa
mov
xor
adc
and
mov
shrl
stos
out
push
cmp
adcl
and
add
cmp
rorl
inc
movsl
sub
or
dec
mov
stos
inc
sub
xor
stc
outsl
inc
movsl
push
repz
enter
cmpsl
mov
jno
xchg
rolb
clc
sbb
stos
inc
mov
lods
xchg
pop
test
lods
push
pop
shll
fwait
jg
and
lods
xor
pop
repnz
ror
lock
push
mov
push
push
negl
ret
and
xor
push
cmp
mov
mul
std
hlt
aaa
sbb
lahf
mov
xchg
mov
mov
dec
inc
or
rorl
jle
xchg
dec
ss
pop
aas
in
push
or
inc
fistpll
testb
repnz
cmp
or
xchg
je
xchg
in
xchg
sbb
pop
stos
es
add
push
outsl
mov
xchg
sub
shl
or
fbstp
jmp
pop
adc
cmpsl
negl
repz
repnz
xchg
stos
jmp
sbb
lcall
mov
popa
rclb
das
lcall
pop
mov
jp
mov
push
iret
fisubl
mov
enter
mov
sti
dec
xchg
test
ficoml
add
fnstenv
lahf
jne
jp
sahf
and
loopne
imul
add
sub
and
ljmp
inc
rcl
xor
sbb
push
mov
sahf
clc
sbb
scas
repz
xorb
push
clc
aas
adc
mov
jo
cmp
mov
xchg
lcall
mov
dec
imul
subl
and
push
inc
sbb
mov
rcll
sbb
cmp
subb
xchg
xchg
and
mov
and
jne
es
loopne
sbb
repnz
popa
xchg
addr16
or
jle
xchg
imul
test
jns
mov
dec
mov
dec
jo
xchg
imul
or
or
sub
js
mov
jns
push
mov
mov
sahf
lea
push
std
subl
jl
stc
pop
sbb
repz
imul
mov
shll
nop
mov
in
jb
outsb
orb
xor
lods
int
int
cmp
call
jle
add
out
outsb
or
outsl
push
push
mov
xor
lea
subl
push
ljmp
shr
orl
pusha
lods
loop
and
push
lods
pop
mov
push
int
inc
jp
sub
movb
pop
loopne
or
and
outsl
mov
scas
cltd
les
incl
dec
xchg
clc
popa
push
mov
aaa
push
cmp
mov
das
push
push
xchg
cmp
loope
mov
dec
pop
icebp
repz
or
mov
sbb
ds
mov
xlat
ficoml
add
dec
pop
sub
mov
dec
aad
dec
and
mov
lret
in
das
and
out
ja
push
inc
fidivl
cmc
hlt
pop
andl
lds
loope
push
push
addr16
pop
fsubrl
ljmp
fwait
mov
clc
mov
into
pop
insl
fimuls
ret
es
sub
and
xchg
fisttpl
fstpl
mov
sbb
pop
mov
std
cmc
and
scas
std
sub
xor
stc
jge
fsubl
fimuls
cmpsb
push
fildll
add
movsb
stos
add
push
addb
adc
jne
insb
pop
pop
sub
dec
adc
lahf
dec
cmc
fs
push
and
cmp
mov
dec
mov
jne
dec
mov
pop
jns
or
shll
jg
jo
push
and
out
les
lret
cmp
out
and
mov
or
cmc
or
or
cmp
cmp
mov
push
ret
lods
shrl
iret
inc
lret
into
ret
xchg
mov
cltd
fs
dec
or
xchg
mov
or
mov
pop
out
cmpsb
sbb
jg
test
add
gs
push
pop
out
das
aas
jnp
cli
and
cmp
rcll
insb
popa
lret
cmp
sbb
sub
or
sub
jge
sub
xor
push
jnp
movsl
cmp
inc
mov
decl
xchg
sbb
movsb
jne
data16
or
pop
lea
leave
mov
mov
push
sti
fadd
push
add
push
aaa
pop
das
xchg
js
andl
jo
jmp
mov
aas
test
xor
sbb
lock
adc
xlat
pop
push
mov
mov
pop
xchg
push
mov
add
loopne
sbb
repnz
xlat
dec
lods
dec
shrl
cmp
fs
sbb
icebp
xchg
in
mov
and
ss
repnz
cmc
mov
ss
push
mov
loopne
fistpl
in
leave
dec
loope
mov
mov
inc
mov
jg
loope
jp
xor
dec
mov
pop
in
cmpsl
jno
sbbb
movsl
mov
cmpsb
push
add
lods
push
in
cli
movsl
out
cwtl
and
movsb
jo
notb
adc
loope
insl
mov
mov
out
adc
inc
push
roll
mov
loope
rcll
lahf
cmpsl
xchg
cli
sbb
lcall
adc
lds
or
inc
test
inc
nop
leave
xor
bound
mov
adc
test
sbb
movsl
lret
sub
adc
inc
xor
and
sbb
jno
mov
dec
fwait
rol
lcall
cltd
sbb
jmp
jle
leave
cmpsb
cs
push
inc
add
cltd
jbe
and
jbe
jmp
sub
bswap
aad
jecxz
out
push
mov
jb
sbbb
inc
pusha
xchg
iret
and
mov
js
dec
xchg
xchg
shll
jmp
add
cmc
mov
ljmp
scas
jne
mov
cmp
mov
nop
stc
je
adc
or
mov
leave
cmpsl
jmp
jecxz
in
call
push
xchg
in
inc
movsl
jmp
out
mov
bswap
bound
push
or
call
pop
inc
pop
stos
or
sub
push
xchg
mov
pushf
notl
lret
mov
cmp
push
div
adc
add
lret
mov
bound
shll
push
jnp
repnz
dec
or
dec
push
push
ljmp
cmp
pop
data16
inc
test
push
inc
pop
xor
and
jg
cli
jmp
jno
arpl
mov
call
cmp
mov
int3
cld
or
test
lods
and
or
inc
push
jge
sub
xor
aas
ret
sbb
std
aam
loop
xor
in
sbb
dec
and
cmpsb
mov
divb
add
jge
push
fmuls
mov
movsb
mov
mov
imul
sub
adc
lahf
pop
and
leave
push
add
fdivrs
lea
mov
stos
and
dec
jno
pop
sub
jg
insl
xor
outsb
cwtl
mov
stos
pop
sub
and
js
push
stos
and
rclb
dec
push
mov
in
sbb
sub
in
jnp
iret
fdivp
cmpsl
inc
loop
dec
mov
dec
lret
cmpsl
xor
mov
movsb
and
and
pop
nop
push
enter
adc
jmp
pop
mov
jle
pushl
dec
or
jecxz
mov
push
pop
fcoms
mov
mov
mov
push
jo
mov
out
push
outsb
lods
cbtw
mov
popl
jbe
mov
hlt
popf
add
cs
and
lea
push
inc
scas
push
bound
lods
xchg
jne
jmp
adc
mov
push
pop
daa
dec
jbe
sub
push
clc
mov
call
addb
cmp
loop
push
call
pop
ret
and
push
mov
xlat
xor
ljmp
test
add
or
fwait
arpl
cmc
sub
icebp
mov
repnz
vunpckhps
dec
icebp
popf
inc
daa
push
stos
shrb
out
mov
sbb
test
in
fadds
pop
arpl
cmp
std
sub
xor
mov
add
fnstcw
push
stc
xor
sub
inc
and
adc
lret
xchg
mov
or
and
xchg
dec
push
call
lock
mul
hlt
sbb
pusha
or
lods
mov
mov
and
bswap
movsl
sbb
mov
enter
jg
xor
adcb
jp
lahf
mov
pop
fs
jb
stos
jmp
pop
push
and
repz
cmpsl
mov
into
sub
lahf
test
xchg
xchg
stc
mov
loope
push
popf
or
sub
inc
shll
and
gs
xchg
rcrb
repnz
xchg
movsb
outsb
mov
insl
sbbb
out
fld
stos
dec
jae
popa
into
ljmp
lods
int
mov
add
jle
add
incl
dec
adc
insb
test
pushf
sahf
lcall
pop
rolb
xchg
add
dec
dec
stc
sub
sbb
sbb
add
faddl
gs
mov
daa
sub
dec
cmpxchg
inc
xchg
in
jge
test
data16
imul
push
je
pop
dec
pop
pop
enter
lret
xor
inc
in
mov
movsl
mov
cmpl
push
sbb
jl
or
int
mov
inc
mov
xchg
decl
scas
fwait
call
push
jne
adcb
and
add
addr16
es
push
imul
add
ret
hlt
pusha
bnd
and
xlat
mov
push
mov
mov
in
fadds
in
mov
cwtl
xchg
repz
add
mov
jae
adc
mov
push
pop
insb
aaa
and
fsts
loopne
orl
cmp
xor
clc
out
push
cwtl
outsl
mov
add
push
add
and
add
lcall
cmp
jbe
and
in
addb
in
jb
dec
pop
stos
xor
sbb
std
das
jno
fistps
cld
popf
cmpsl
mov
ret
jmp
pop
xchg
cwtl
in
lcall
jge
out
loop
test
fnstenv
inc
or
push
dec
sbb
and
pop
imul
in
loop
xor
cmp
adc
leave
fbstp
stos
cltd
jb
dec
int
dec
lea
jne
in
cmpsb
cmpsb
rcrl
mov
dec
aad
adc
adc
imul
xchg
addr16
bound
add
stos
hlt
in
push
jge
cmp
je
hlt
into
cli
cwtl
in
add
xchg
rorb
xchg
pushf
mov
lret
lahf
inc
mov
rcl
pop
push
or
imul
rclw
mov
mov
inc
out
aaa
and
lret
mov
or
inc
daa
das
cmpsb
cld
xchg
out
sarb
xlat
or
pop
add
sbb
sbb
pop
sbb
outsl
ds
or
sbb
sbb
jle
data16
push
test
mov
les
in
in
in
out
subb
pop
sub
push
test
mov
mov
mov
addr16
fwait
pop
xchg
in
test
fbld
push
add
pop
push
stos
pop
cmp
ds
insl
add
hlt
sbb
imulb
leave
shr
aad
lcall
jecxz
icebp
sub
mov
mov
mov
test
out
lock
cmp
stos
sbb
out
in
push
leave
ret
pop
sub
nop
pop
sbb
and
pop
add
mov
enter
pop
and
xchg
insb
xor
sub
popf
or
mov
std
rclb
mov
jne
and
mov
test
ja
movsb
ret
adcl
outsb
je
inc
dec
dec
aam
mov
mov
shll
iret
xchg
or
add
js
xchg
jle
rclb
shll
outsb
mov
rcll
mov
cmc
jp
mov
cmpsb
lahf
or
insl
pusha
addr16
test
add
outsl
fpatan
test
out
pop
xchg
push
icebp
hlt
mov
stos
outsb
lahf
mov
fwait
and
inc
inc
enter
mov
ror
xor
ljmp
subb
add
ja
xchg
inc
daa
or
inc
push
xchg
xchg
mov
fwait
cmp
cmpsl
cld
mov
jp
xor
and
dec
inc
pop
inc
xchg
cmpl
outsl
xor
int
test
mov
lahf
add
fisubs
test
fsubl
dec
pop
pop
data16
mov
adc
sbb
mov
fucomip
cmp
popa
xor
inc
sbb
dec
push
mov
xchg
sbb
iret
movsb
ffreep
aas
xor
lods
push
outsb
lahf
sbb
pop
pushf
das
out
adc
cmp
push
or
mov
aas
rcr
sbb
cmp
inc
cmp
mov
popa
xchg
jmp
pop
insb
mov
movsb
daa
popf
loope
lods
lret
dec
scas
lds
xchg
subl
pop
xor
jl
pop
add
adc
fmuls
fisttps
cmp
lods
xchg
cmp
mov
mov
adc
mov
imul
dec
test
cwtl
js
fsubrl
mov
pop
sti
rorl
repz
repnz
push
add
ja
out
scas
sarl
and
xor
cmc
mov
pop
inc
push
add
movb
out
bound
test
push
xchg
add
test
adc
or
add
adc
dec
das
cmp
popf
jmp
imul
pop
call
jne
mov
dec
inc
scas
jle
vmaxss
lods
fwait
xor
popa
outsb
imul
xor
pop
rolb
push
xchg
push
mov
mov
or
cli
add
mov
mov
cmp
jle
xor
das
jmp
sub
pop
add
mov
mov
mov
cmp
imul
into
shrb
jnp
arpl
pop
aam
mov
dec
and
iret
mov
icebp
data16
cmpsb
std
std
mov
and
and
sbb
push
lret
call
xlat
dec
cmc
push
mov
fisttpl
and
test
push
hlt
popa
mov
cmc
and
push
dec
cwtl
push
pop
jl
aaa
pop
xchg
js
xchg
push
je
insl
scas
dec
inc
sbb
movsl
lret
std
adc
inc
stc
jbe
push
enter
aaa
jne
aad
imull
sub
imul
cmpsb
in
shlb
ljmp
mov
xchg
mov
out
sub
sbb
xchg
mov
or
and
cmpsb
adc
xorb
enter
push
in
or
int3
fwait
jb
andb
bound
rolb
xor
jns
sbb
push
mov
movsb
imul
enter
loop
push
jne
inc
loope
out
xor
xor
lret
and
cmp
sub
or
sub
pop
dec
pop
in
xchg
xchg
js
hlt
rorb
aaa
test
int3
cli
sti
mov
jne
or
and
add
adc
mov
jle
dec
lock
adc
xchg
sbb
xor
jmp
add
xchg
jge
mov
or
stos
jae
lahf
mov
jbe
test
add
mov
xor
mov
mov
or
inc
std
sbb
jns
cmc
pop
push
test
push
mov
xor
lcall
xlat
sbb
movsl
mov
pop
dec
push
adc
ss
mov
call
push
call
stos
fs
imul
dec
ret
dec
cltd
xor
and
xchg
insb
outsb
adc
mov
push
scas
les
insb
fldenv
filds
push
sbb
xchg
push
shlb
inc
or
mov
mov
adcb
and
dec
stc
dec
ja
aas
pop
xchg
mov
sub
movsl
mov
inc
dec
push
xor
push
es
add
mov
lcall
sub
jne
outsl
cmp
cmc
sbb
sub
cli
movsl
leavew
xor
fistl
jbe
loopne
sub
stc
test
or
cld
xchg
jno
roll
sub
aaa
push
mov
mov
xor
mov
scas
fdivs
cltd
mull
ljmp
pop
adc
xchg
xchg
or
rol
and
and
not
xchg
loope
dec
or
stc
push
jbe
mov
sub
ss
jmp
fs
or
insl
push
jmp
cmp
inc
sbb
es
es
mov
jl
in
mov
lea
push
lret
dec
cmp
pop
mov
lea
cs
enter
clc
mov
add
xor
xchg
mov
add
ljmp
mov
mov
ja
loope
or
and
mov
test
mov
test
std
in
push
popa
jmp
sub
xor
fld
sbb
pushf
lcall
mov
rcrl
fs
mov
stc
or
jb
cmpsb
cwtl
inc
fsts
cmp
in
push
push
mov
inc
in
jecxz
movsl
jge
lds
shll
mov
daa
cmp
sub
clc
sbb
loope
inc
sub
adc
adc
std
sti
orb
pop
rolb
sub
add
dec
dec
insb
push
mov
fsubs
mov
loopne
push
mov
incb
icebp
pop
testl
out
popf
push
jl
pop
int
and
enter
sub
adc
sti
mov
imul
fs
shr
mov
aas
test
or
in
jg
jecxz
push
movsl
push
jge
leave
cs
stos
je
rcrl
xchg
notb
stos
sbb
fdivs
push
adc
adc
inc
stc
test
inc
and
push
dec
into
pop
int3
dec
call
inc
out
mov
int
mov
cs
stc
push
scas
xor
jl
jns
call
mov
aaa
inc
int3
or
sbbl
mov
lret
movsl
jns
mul
xchg
test
inc
and
xor
inc
cld
cmp
pop
and
sub
cmp
pop
in
lret
scas
movsl
mov
or
mov
adc
in
lea
jae
mov
fdivl
pop
adc
sbb
dec
xlat
pop
and
mul
and
es
fs
flds
cmp
insb
out
adc
push
adc
out
cmp
dec
sbb
divb
loopne
dec
inc
mov
inc
rclb
jl
jb
pushf
cmp
fdivrl
mov
cmp
jns
jmp
sub
addl
adc
scas
arpl
sbb
jnp
pop
neg
and
lds
jp
sarl
popa
in
inc
pop
cli
dec
pop
pop
out
push
std
jne,pn
and
mov
pusha
daa
jae
mov
mov
dec
std
xchg
cmp
fistpll
arpl
inc
shrb
lock
movsl
call
pop
cs
fldenv
sbb
sub
addr16
adc
jne
push
shll
inc
incl
jl
push
movsb
pop
test
arpl
xor
or
outsb
inc
cli
mov
xlat
flds
cld
mov
pop
and
cmc
les
pushf
popl
iret
jmp
sbb
add
jno
sub
add
mov
les
push
cmc
add
cmp
adc
mov
out
mov
orl
dec
int3
loopne
shrb
or
pushf
push
pop
inc
jl
ss
shll
stos
adc
paddb
jbe
adc
xor
jp
sbb
es
lods
mov
mov
and
jp
xchg
mov
sub
nop
jne
subb
sbb
shll
out
or
add
nopl
test
mov
pop
add
add
mov
dec
inc
or
mov
jecxz
push
outsb
sti
xchg
jl
daa
divl
xor
insl
jne
pop
and
mov
testb
outsb
mov
fcoml
and
cmp
pop
mov
stc
lods
mov
clc
sbb
jecxz
pop
jle
mov
lds
sub
pop
pop
dec
dec
jns
imul
mov
leave
lret
jmp
or
cmp
sub
dec
dec
jns
imul
mov
leave
lret
jmp
inc
cmp
sub
dec
loop
jp
push
inc
mov
enter
jmp
sbb
or
cmp
sub
pop
pop
dec
dec
stc
cli
jmp
and
mov
inc
xor
add
xor
push
mov
xchg
sub
jo
pusha
loopne
lock
add
xor
pusha
shll
xorb
and
adc
popa
loopne
lock
add
xor
pusha
shll
xorb
add
je
outsl
shlb
cmp
pop
std
je
and
pop
in
dec
fisttpl
imul
dec
jno
test
xchg
adc
scas
hlt
test
fwait
mov
sti
iret
or
loope
insb
sahf
pop
lea
and
adc
popa
sarl
mov
jge
push
mov
inc
inc
lret
mov
add
pop
jo
nop
mov
lea
cmp
mov
test
xlat
addr16
loope
fnstenv
or
xlat
fiaddl
and
inc
pushl
pop
shrb
sbb
push
jecxz
xor
xor
out
int
xchg
and
jno
cmp
mov
jecxz
mov
push
pop
jo
xlat
xor
pop
fs
nop
pusha
pop
xor
mov
mov
inc
icebp
push
loope
shll
xorb
and
jno
popa
loopne
lock
inc
mov
fmuls
pop
rolb
xchg
add
jb
addb
mov
add
mov
fnsave
inc
fstps
mov
movsb
sbb
rcll
mov
rcll
mov
repnz
hlt
pop
stc
or
push
loope
shll
xorb
and
jno
popa
loopne
lock
add
xor
pusha
shll
xorb
and
jno
popa
loopne
lock
add
pop
inc
mov
xchg
aas
mov
adc
push
js
cmp
push
int3
leave
fwait
or
stc
pop
and
jo,pt
test
inc
pop
lcall
cmp
rclb
loop
pop
cmp
shlb
cmp
mov
in
sub
fs
lret
pop
push
mov
push
xchg
jmp
cmp
push
and
lret
test
pusha
and
mov
cli
jo
stc
out
stc
rclb
mov
test
popf
pop
outsb
xchg
and
pop
mov
mov
sahf
aam
xchg
mov
scas
dec
adc
fimuls
loope
ss
enter
lods
ljmp
imul
or
shll
fwait
dec
or
add
dec
sahf
xchg
test
popa
adc
gs
cmp
andb
cmp
add
fadd
push
mov
dec
aam
loopne
repnz
sub
inc
sahf
sbb
dec
and
mov
mov
in
outsl
sub
nop
fmuls
sbb
pop
imul
in
ljmp
xor
jg
movsl
fldl
loopne
jle
outsl
inc
sbbb
fwait
std
repz
iret
leave
inc
or
pop
mov
mov
pop
and
add
pop
mov
pop
iret
add
test
fmuls
pop
dec
stos
call
dec
movsb
xchg
maskmovq
idivl
daa
lcall
and
lcall
sbb
xorl
stc
jecxz
outsb
inc
mov
mov
ficoml
mov
mov
int
daa
or
cli
jmp
jmp
push
jle
daa
enter
icebp
or
jo
pop
nop
jmp
cmp
push
jg
pop
or
popa
sub
sub
mov
sub
insb
test
sub
addr16
sbb
jp
adc
inc
in
cs
dec
les
mull
mov
mov
add
push
mov
lock
aad
mov
mov
jle
scas
daa
pusha
jmp
in
retw
mov
ds
mov
int3
add
incl
xor
mov
test
or
ret
out
mov
jns
imul
add
xchg
mov
adc
in
sub
push
pop
lock
shrb
fnsave
dec
lcall
ret
cmp
stc
out
inc
lea
out
rcrb
cmp
jae
cmp
insl
sub
aad
lahf
ds
cwtl
sub
inc
test
outsl
test
repz
mov
dec
and
push
addl
dec
test
outsl
insb
ss
or
insl
dec
arpl
xor
das
pop
or
dec
imul
inc
push
inc
insb
sub
pusha
and
stos
xchg
cmp
xchg
es
inc
or
icebp
or
popa
insl
push
sub
cmp
sbb
cmpl
sub
add
fnstcw
mov
movsb
jl
mov
arpl
cmp
cmp
jno
adc
jmp
les
push
pop
cli
lods
inc
cmc
rorl
jae
inc
cmp
addl
daa
pop
aas
mov
fdivr
jmp
jle
and
mov
sbb
pop
and
scas
jl
xor
pop
push
jbe
xorb
mov
jecxz
xor
lock
bound
cmp
xchg
ja
lahf
jp
stos
adc
arpl
out
testl
push
arpl
jp,pn
pop
into
lahf
xchg
test
cmp
aad
push
jae
fldcw
cwtl
inc
add
fdecstp
fwait
or
insb
adc
mov
aas
add
sbb
pop
inc
out
cmp
xchg
adc
imul
aad
dec
bound
jmp
mov
jg
je
mov
stos
lds
jg
clc
fcoms
mov
cmp
xor
pop
or
or
dec
jmp
movsb
insl
sarl
cmpsb
or
add
xor
leave
or
pop
or
cs
fldcw
lods
lds
adc
fnsave
fdivrl
dec
adc
jecxz
jno
mov
mov
mov
or
xor
xor
xor
cmpsl
xchg
jmp
or
shlb
filds
test
cmp
enter
hlt
arpl
mov
add
xchg
add
or
int
jg
pop
dec
fists
pushf
fldl
imul
test
add
stc
test
sbb
mov
or
jnp
es
pushl
mov
aas
or
add
jns
fnstenv
das
stc
jle
jb
outsb
fnstenv
pop
pop
adc
out
push
or
pop
mov
push
fldt
popf
lods
dec
icebp
xchg
js
int3
dec
jb
mov
inc
adc
push
or
lock
orl
jecxz
lret
adc
push
mov
pushf
add
stos
xor
pop
sbb
mov
push
cmp
test
mov
mov
mov
add
shrl
cli
mov
or
sub
in
sbb
jg
mov
daa
sbb
jnp
xchg
test
mov
imull
dec
sub
sbb
pop
jecxz
int
cmp
xchg
xlat
push
fistpll
mov
dec
ret
push
mov
sahf
lods
loope
or
or
cmp
mov
fisttps
pusha
test
pop
call
jbe
and
xor
cmpsb
aam
loope
ficompl
fsubrl
jecxz
test
aad
pop
push
jp
ds
sbb
mov
ja
xchg
jno
cmpsl
add
fnstsw
cmp
fcompl
aaa
aam
sahf
call
int3
push
mov
sub
jbe
lods
movsb
iret
fcompl
mull
nop
add
push
xchg
adc
add
in
stos
lea
rol
aas
or
cwtl
clc
push
pop
mov
dec
push
sar
push
stos
shl
lcall
test
adc
rcrb
pop
push
in
mov
add
mov
outsb
jl
xor
popa
mov
mov
mov
pop
outsl
xchg
lock
nop
sbb
mov
ret
mov
add
popf
aaa
add
push
ret
xchg
hlt
ret
cs
movsl
fcompl
sbb
adc
mov
add
fsubp
xchg
push
stc
xchg
push
mov
lds
mov
and
dec
inc
mov
popl
cmp
fwait
pop
sub
fcomp
shl
pop
sahf
mov
imul
fcomip
aad
lock
dec
xor
mov
lds
inc
cmp
xlat
movb
pop
nop
js
dec
pop
add
cmp
test
fldl
lret
sbb
mov
pushf
sbb
sub
mov
bound
int3
out
movups
dec
int
pop
in
movd
ret
sarb
pop
stos
ret
mov
sub
xor
test
scas
outsb
lods
mov
xchg
pop
mov
andb
push
dec
mov
test
cld
insl
loop
int
mov
outsb
inc
insl
mov
aam
sbb
int
xlat
cmpsl
je
jp
aam
jl
adc
or
ljmpw
xchg
outsl
mov
cmpsb
and
out
imull
push
mov
nop
mov
mov
push
mov
mov
ds
jecxz
cmp
pop
mov
pop
dec
sub
js
dec
pop
std
ss
add
sbb
mov
adc
or
inc
in
arpl
into
push
in
inc
les
push
sbb
loop
in
clc
aas
scas
cmpb
pop
push
xchg
in
or
imul
adc
arpl
in
dec
pushf
imul
mov
push
sbb
mov
cld
mov
pop
mov
imul
add
cs
pop
out
or
sbb
and
add
add
lods
xchg
adc
lahf
jge
in
jnp
pusha
lods
and
jmp
xchg
mov
xor
scas
fnstsw
scas
jae
lret
in
xor
inc
aas
mov
sti
stos
test
cmp
push
dec
push
mov
add
push
mov
dec
ficoml
pop
icebp
into
or
or
je
push
jecxz
cmc
cmc
imul
test
jo
pop
fcmove
mov
movb
dec
leave
mov
insl
aaa
hlt
in
pop
pop
fdivrl
cmp
mov
sub
sti
leave
xchg
or
addr16
dec
mov
cmp
movsl
in
test
and
or
jbe
add
mov
or
fs
repnz
cld
aam
popa
dec
ret
sahf
cmp
xchg
in
fwait
cld
mov
ja
loop,pn
clc
jo
mov
mov
fidivrs
cmp
int
je
push
fwait
dec
push
jns
push
xchg
cmp
pop
sub
dec
xchg
jp
or
pop
cld
push
cmp
push
and
test
in
outsl
ret
add
jbe
or
and
fcmovb
push
and
lret
jnp
aas
sub
ljmp
xchg
std
inc
lea
lahf
fisubrl
sarb
sbb
dec
roll
mov
inc
sub
sbb
jl
pop
xchg
mov
inc
jo
stc
mov
loope
fdivl
mov
adcb
sbb
in
cmp
mov
test
ret
cmp
adc
data16
dec
cli
jo
add
lock
mov
iret
jo
adc
push
sub
mov
ret
ds
and
push
mov
dec
cld
pop
js
xchg
or
popf
mov
mov
movsl
and
cmpsb
test
push
lahf
xchg
jmp
push
push
lock
mov
jle
xor
sbb
aaa
clts
pop
pop
push
ficompl
mov
rol
hlt
cmp
ret
mov
and
test
lods
jg
jg
daa
sub
mov
mov
mov
pop
clc
mov
inc
jg
idivl
iretw
les
sti
xchg
sarb
movsl
dec
xor
cmp
dec
push
jb
or
dec
lock
mov
ds
mov
and
dec
fstps
shl
adc
lret
fs
clc
imul
fnstsw
aas
xchg
int
or
or
jmp
dec
in
mov
hlt
scas
mov
scas
cmp
jg
jle
mov
in
dec
jmp
movb
cmp
shlb
fstpt
popa
sti
xchg
cs
mov
pusha
popa
pop
pop
xchg
xor
int
mov
xchg
sbb
adc
in
idivl
mov
sbb
inc
xchg
ja
mov
out
xlat
lahf
push
jne
mov
push
push
inc
pop
movsb
dec
mov
scas
adc
and
xchg
jg
push
sahf
lods
pop
les
pop
cli
out
movsb
loop
fildl
or
jle
cmp
out
shr
dec
add
jg
mov
mov
push
dec
xor
jne
fsubl
sbb
stos
insl
or
sub
cltd
xchg
mov
pop
je
shrl
jb
bound
pop
and
test
int3
fimuls
mov
cwtl
mov
movntps
test
addr16
rol
inc
jge
outsl
mov
sub
fwait
jno
xor
sbb
jnp
xlat
jno
adc
mov
rcl
cld
jmp
sbb
inc
lods
ss
test
adcb
inc
loopne
jo
jae
xor
push
mov
xchg
outsb
and
adc
and
test
fcmovnbe
cs
les
test
test
and
inc
fadds
test
and
pop
arpl
or
mov
gs
jl
pop
out
jecxz
and
pop
cltd
pop
push
pushf
xor
mov
cmpsb
fcoms
ljmp
xchg
shll
clc
mov
xor
or
adc
rcrb
dec
pop
sahf
ficoml
popf
xchg
test
push
xchg
scas
add
fidivrl
loop
push
jge
mov
pop
test
mov
add
cmp
sbbl
add
sub
add
xor
pop
mov
and
add
lret
movsl
add
pop
add
imul
cmpsl
ds
popf
fldenv
mov
and
mov
lds
or
inc
jne
mov
jne
loopne
in
jo
dec
xchg
clc
dec
int3
shlb
js
mov
xor
mov
jl
inc
int3
xchg
xor
jbe
add
or
shr
push
daa
ficoms
push
or
push
out
or
jle
push
jb
add
cli
mov
stos
ja
or
roll
jl
adc
and
xlat
push
push
lods
mov
push
push
add
shll
ljmp
lret
stc
pop
shrl
les
mov
imul
and
jno
adc
push
lods
mov
imul
leave
and
leave
out
sar
xor
movsl
jbe
push
push
xchg
mov
jecxz
sub
int
jns
pushf
or
enter
mov
adc
icebp
pusha
mov
nop
lods
cwtl
mov
jae
adc
popa
leave
dec
rcr
nop
int3
jb
push
addr16
mov
sti
sbb
or
adc
testb
test
fisttpll
sub
sbb
jb
dec
test
push
and
gs
push
faddl
push
push
mov
movsl
loope
daa
or
lahf
jns
fstpt
mov
mov
mov
arpl
xchg
add
insb
sbb
cmp
mov
dec
fs
call
icebp
inc
int
sub
es
pop
in
xchg
jo
sbb
adcl
adc
leave
sub
scas
push
and
fidivs
test
int3
test
mov
out
jl
in
add
jnp
dec
cmp
add
push
insl
incb
mov
mov
pop
test
jno
push
filds
cmp
movsl
cmp
xchg
inc
iret
add
das
rorb
xchg
jae
ss
mov
leave
mov
stos
lret
fmul
pop
movsl
data16
mov
fdivrs
mov
cmpsl
test
sar
mov
loope
test
sub
outsl
lcall
test
popf
or
das
jno
insb
in
imul
xchg
test
mov
loopne
push
lock
mov
push
dec
xlat
inc
pop
lahf
fldenv
pop
adc
subl
cs
mov
jp
jge
jle
fwait
stc
loop
pop
dec
lret
je
fnstcw
js
les
sub
test
cmp
push
mov
cs
lods
divb
adc
lds
stos
lea
ret
push
hlt
xor
sub
int
stc
leave
sbbb
stos
fs
cmp
and
cmpsl
les
jg
rorl
jbe
push
xchg
pusha
jne
insl
mov
fwait
outsb
dec
ss
movsl
pop
sbb
jne
xchg
sub
pop
scas
dec
ss
push
fsubl
rcrl
push
xchg
adc
push
sbb
push
pop
lret
ss
cmp
ja
xor
stos
icebp
popf
sub
xchg
in
popa
cltd
xchg
mov
mov
inc
mov
mov
clc
mov
add
mov
jmp
jp
clc
fdivrp
adc
and
das
inc
cld
orb
aad
xchg
cmpb
cmp
cmp
nop
add
sub
bound
loop
jnp
repnz
incl
or
mov
fwait
pop
add
push
or
add
or
jge
sub
jb
arpl
subl
dec
rorb
orb
mov
push
pop
in
inc
aaa
mov
adc
jmp
fimull
movsb
repnz
push
cmp
out
mov
inc
aam
aaa
iret
inc
ret
jle
xchg
insl
int3
fs
cld
jnp
out
lret
lcall
inc
imul
aad
push
sbb
ds
cli
pushl
inc
pop
mov
test
pop
mov
rclb
push
jle
or
pop
in
lds
mov
movl
mov
inc
clc
and
lret
mov
popa
call
sbb
add
out
pop
insb
xchg
ljmp
push
ret
push
arpl
popa
cmp
xchg
push
jg
pop
out
pop
leave
insb
dec
xor
jbe
push
in
xchg
xor
adc
cmp
jmp
cmpsb
inc
cmp
in
adc
out
sub
add
dec
adc
cld
faddp
add
mov
inc
lods
dec
fmuls
mov
jne
or
adc
or
xchg
jnp
sti
iret
adc
xchg
mov
jle
jle
js
pop
popl
loop
lcall
xlat
pop
movsl
je
cmp
jp
ja
movsl
jo
loopne
fistps
jno
incb
in
jg
or
popf
sahf
rcrl
cmpsl
outsl
sbb
andl
addb
mov
pop
fisubl
in
outsl
lret
daa
mov
and
aaa
or
mov
push
outsb
inc
inc
xor
ljmp
scas
add
cwtl
and
divb
pop
scas
push
sbb
dec
push
fwait
les
bnd
cmp
jge
and
lock
push
outsb
jo
mov
insb
sti
xchg
inc
mov
ror
sub
push
outsl
fxch
out
xchg
xor
pop
jg
aad
pop
push
ja,pn
jmp
pop
or
mov
push
mov
pop
cmp
ret
ficomps
add
add
test
out
std
loopne
jno
push
inc
test
incb
adc
push
xchg
int
add
in
pop
and
stos
loop
fnsave
jno
mov
in
inc
jnp
enclu
insl
insl
mov
pop
cmpb
in
add
jb
aad
xchg
fimull
mov
adc
setae
mov
add
cs
sub
cmpsl
adc
lock
mov
in
sub
loopne
and
pop
out
test
dec
mov
adc
pop
mov
jbe
xor
scas
scas
push
jg
daa
jo
mov
jecxz
popf
arpl
pop
insb
sub
and
lret
dec
jl
add
pop
mov
ss
push
jp
pushl
xlat
testb
inc
push
xchg
pop
inc
mov
iret
mov
cmp
push
mov
pop
fisttpl
rcr
fsubrs
lcall
ss
fldt
xor
fsts
incb
xchg
mov
pop
xor
and
push
inc
int
aad
dec
mov
push
cltd
arpl
jg
jl
scas
bound
mov
jae
ret
jmp
jns
popl
pop
push
ja
das
sbb
or
mov
xchg
dec
jle
icebp
sti
pop
pushf
clc
inc
pop
mov
rcrl
xchg
xchg
cmpsl
xor
jno
xor
sub
sub
pop
xor
neg
cwtl
mov
and
fwait
push
in
insb
scas
xchg
push
jge
gs
or
mov
in
mov
dec
sbb
out
roll
daa
repnz
adc
aaa
enter
pop
dec
xor
aas
push
jecxz
arpl
push
sbb
push
jg
shlb
xchg
inc
ljmp
jp
mov
popa
cs
mov
fwait
cs
aam
jo
insl
mov
sbb
push
push
mov
scas
dec
ds
loopne
stc
mov
cmp
shrb
pop
mov
push
sub
out
sbb
cmc
or
js
mov
ret
push
jns
xor
lret
add
das
dec
push
fcompl
push
dec
ret
aad
ffree
push
pusha
xchg
scas
movsl
cmc
enter
push
pusha
cli
mov
int3
stos
hlt
sbb
pop
scas
loope
jecxz
xchg
adc
cmp
add
jae
xchg
mov
lret
notl
lock
lock
ja
jle
add
pop
mov
test
jecxz
inc
lods
pushf
das
enter
pushf
pop
movsl
mov
mov
rclb
idivl
stos
gs
ret
rcrb
adc
and
dec
dec
pop
in
or
frstor
icebp
mov
sti
testl
rcll
mov
dec
int3
sub
mov
ret
adc
pop
jbe
xor
and
mov
add
xchg
ret
lahf
or
mov
aaa
call
sbb
out
jl
shl
push
mulb
cmpsb
sahf
test
popf
pop
or
repz
out
jb
and
cli
inc
adc
movb
cmp
mov
pop
cmpsl
inc
push
jmp
movsb
sub
mov
jo
sbb
pop
mov
jl
stc
and
adc
clc
shll
adc
pavgb
pop
shlb
dec
sbb
push
out
mov
cli
scas
push
xchg
pop
jge
pop
jmp
sbb
std
sub
mov
xchg
mov
stc
push
mull
inc
iret
pop
stos
mov
pop
xchg
arpl
sub
mov
inc
jmp
sub
pop
es
imul
sub
cmp
jmp
out
sahf
es
stos
mov
push
lret
xor
or
inc
icebp
push
loope
shll
xorb
and
jno
popa
loopne
lock
add
xor
pusha
shll
xorb
and
jno
popa
loopne
lock
add
xor
pusha
shl
roll
mov
shlb
loopne
lock
add
xor
pusha
shll
xorb
mov
adc
sahf
nop
scas
cmpb
leave
lods
cmc
fcmovne
idivb
jb
inc
pop
push
dec
daa
cmp
sub
sbb
or
stc
bnd
mov
cltd
xchg
icebp
xor
imul
sub
sbb
or
stc
jb
inc
fsts
mov
cli
test
bound
dec
and
xor
add
jle
ja
jp
mov
mov
sub
xchg
add
jno
dec
nop
fnstenv
stc
jl
cmp
and
stos
movsl
popa
cli
test
repnz
push
and
xchg
mov
cmp
pop
mov
loop
ret
iret
sub
stos
fsubl
das
in
add
icebp
pushf
dec
mov
mov
xchg
xor
ja
xchg
xchg
push
xlat
pop
adc
or
ud1
xor
and
repz
mov
push
sub
mull
repnz
mov
imul
push
push
pop
cmpsl
cmp
jp
sbb
sbb
stc
bnd
mov
cltd
sub
lcall
sub
sbb
nop
std
test
int3
fadd
rclb
xor
cmp
cmp
jbe
push
inc
loop
jp
test
in
lock
pop
xor
adc
or
sub
push
push
sub
push
xchg
mov
xchg
lods
out
mov
sbbb
imul
xor
add
adc
loop
bnd
mov
cltd
xchg
mov
jb
inc
pop
push
dec
and
xor
add
adc
loop
subl
fldl
push
test
nop
ret
repnz
stos
insl
mov
cwtl
mov
xchg
scas
inc
mov
pop
sbb
jns
dec
inc
pushf
sbb
pusha
add
fstpl
cmp
xchg
mov
xchg
bound
pop
sbb
jns
push
sub
pusha
pop
xchg
add
pop
out
lds
call
je
cmp
jo
jecxz
andb
icebp
stc
ljmp
and
pop
ret
stos
imul
enter
fs
popa
jo
sub
fsubs
push
push
mov
mov
add
push
cs
in
xor
js,pn
mov
pop
pop
vpunpckhqdq
lds
hlt
jg
pushf
cmp
dec
mov
ss
lret
push
xor
xchg
inc
dec
adc
mov
push
jg,pt
or
fistps
fdivrl
bound
mov
fldenv
fisubrl
mov
mov
pop
iret
pusha
outsl
push
bound
fnstenv
cwtl
fisubrl
ret
lahf
mov
inc
jae
push
cmp
repnz
mov
hlt
pop
lret
sub
call
fstps
insb
les
xchg
jge
sub
add
push
add
dec
cli
or
hlt
cmp
sub
ss
outsb
xor
loopne
pushf
std
and
out
jp
iret
mov
sub
imul
mov
sub
add
jno
test
xlat
fdiv
mov
std
lcall
inc
xchg
mov
mov
loopne
call
pop
pop
cmp
int
sbb
jb
jo
jle
stos
and
and
std
cld
inc
jmp
mov
inc
and
add
cmc
outsb
push
xor
xchg
pop
cmp
mov
int
jns
movsb
in
rclb
aas
fstpl
imul
xor
ja
fists
and
and
test
dec
jns
jmp
xchg
hlt
ds
in
sbb
add
dec
sbb
adc
sbb
stos
das
in
sbb
fstps
pop
push
jmp
mov
jmp
stc
inc
inc
push
push
lcall
mov
push
ret
andb
jp
dec
pushf
pop
mov
xchg
jecxz
daa
daa
lods
int
out
fcompl
jmp
jg
adc
jo
mov
enter
dec
sarb
xchg
adc
cld
lcall
sub
test
cmc
fmul
mov
sub
inc
sub
mov
imul
and
jne
push
jne
cmp
ja
mov
imul
or
lock
mov
cmp
aas
jl
adc
jmp
test
mov
xchg
dec
jno
add
sub
pop
js
jecxz
sbb
xchg
clc
int
jno
outsb
adc
push
sub
lret
idivl
mov
out
dec
push
xchg
out
mov
sbb
sbb
xchg
js
stos
movsl
fs
popf
loopne
lds
fcomp
jp
ljmp
jg
xchg
mov
fcompl
adc
inc
mov
daa
inc
adc
dec
add
xlat
rol
mov
icebp
or
fcmove
mov
daa
xor
xchg
jp
sbb
fimuls
test
arpl
or
call
mov
jg
push
out
test
das
and
js
xchg
in
adc
test
rep
cmpsb
imulb
incl
pop
aam
push
mov
in
push
repnz
and
sub
fsubrl
es
lcall
outsb
mov
aam
pop
sbb
stos
out
les
cmp
nop
push
call
adc
outsb
rorb
fisubs
sbb
pop
sbb
out
imul
push
cmp
cld
fs
in
jns
inc
sbbl
addr16
in
jge
out
xchg
dec
mulb
sbb
mov
loop
jnp
or
cmc
ret
lea
dec
mov
inc
and
jp
negb
adc
out
dec
fnstenv
mov
pop
insb
out
and
stc
mov
sbb
into
jns
popa
lock
xor
into
jle
loop
pushf
sub
add
cmpsb
xor
lock
inc
push
push
cmp
xchg
push
mov
das
sub
or
jno
mov
dec
mov
cmpb
js
mov
mov
add
xlat
push
sbb
test
cmpsl
xor
scas
mov
pop
idiv
and
add
inc
or
int3
in
lds
mov
xchg
loop
cmp
mov
sarl
push
mov
and
out
mov
subl
mov
fcomip
push
dec
inc
cs
and
test
pop
xchg
xorb
dec
std
divl
push
pop
lock
dec
and
lret
add
dec
insl
rolb
lcall
jbe
test
push
pop
sahf
call
add
adc
sahf
stc
lods
cmp
inc
in
mov
mov
cmp
shll
cwtl
xor
inc
inc
mull
stc
jne
insl
push
xor
xchg
test
popa
mov
jns
or
xor
jno
stos
push
adc
mov
jns
cs
push
icebp
sbb
dec
xchg
fs
mov
cwtl
inc
iret
lods
mov
imul
pop
stos
addr16
addb
jl
and
out
mov
mov
xor
mov
and
inc
pop
lods
divb
jnp
or
mov
jle
bswap
sbbb
shll
rolb
xor
pop
sub
lret
push
jb
jo
test
or
jmp
gs
aaa
push
enter
int3
jg
outsl
or
and
dec
cmpsb
mov
xchg
push
ss
add
aas
jp
jno
mov
mov
js
jnp
fists
cmpsb
scas
jmp
lock
sub
xor
add
jge
push
adc
mov
mov
dec
je
aad
xlat
ror
mov
lods
add
out
jns
sarb
and
inc
inc
dec
shll
mov
or
int
test
mov
outsl
dec
adc
adc
jle
enter
add
jge
aad
ret
cwtl
popf
in
pop
pop
push
dec
mov
push
mov
sbb
cmpb
lock
cmp
xor
out
or
sbb
mov
aaa
cli
sti
mov
stos
cwtl
sbb
pop
mov
fdecstp
mov
adc
cmpb
hlt
sub
xchg
and
jbe
dec
cmc
test
insb
push
pop
xchg
imul
insb
lret
push
rolb
mov
cbtw
push
fildll
mov
jb
int
adc
test
ds
enter
sti
and
ds
push
pop
dec
cmc
out
fcompl
adc
ss
in
inc
xchg
cmp
testl
aas
add
pop
sub
daa
andb
lds
push
or
inc
push
xchg
filds
test
jo
mov
sbb
aas
ja
lock
cmpsl
and
shll
aam
iret
add
dec
ret
adc
dec
jno
cltd
adc
jp
imul
cmp
dec
clc
js
jmp
lea
popa
scas
enter
out
push
xor
frstor
insl
adc
ds
cwtl
xchg
movsb
sbb
ja
sarb
push
cmp
push
shl
lret
rclb
outsl
sub
cwtl
insb
mov
adc
pop
pushf
add
imul
mov
sar
mov
loop
push
mov
mov
popf
popf
jle
repnz
and
add
decl
icebp
jge
sbb
in
out
movsl
fstl
hlt
ret
sbb
cmc
mov
fdivrs
push
jl
mov
sub
out
outsl
pop
jae
dec
xchg
mov
cmc
fcompl
addr16
or
mov
push
add
fcomps
ss
leave
cmp
mulb
aaa
in
xchg
shlb
inc
mov
cltd
nop
jg
xchg
adc
loopne
mov
mov
xchg
hlt
add
jmp
hlt
iret
std
clc
mov
and
ret
aas
popf
pop
or
paddusb
jbe
scas
out
sbb
out
inc
clc
push
pop
lock
push
fbld
jnp
fwait
rcrb
icebp
adc
filds
xor
sub
xchg
adc
mov
fsubs
hlt
mov
add
idivb
pop
adc
leave
sti
jge
stos
jbe
adc
lods
dec
aam
imul
jns
and
ja
fimull
xchg
dec
mov
stos
jmp
pop
aaa
adc
mov
mov
je
and
inc
jp
insb
add
pop
orb
pop
sub
pop
jp
clc
fs
jnp
aad
lods
arpl
mov
pop
push
stc
xor
dec
adc
lods
inc
sbb
out
pop
call
orb
lea
sub
sbb
js
inc
int
mov
rorb
xor
pop
ret
mov
mov
push
cmp
lods
decl
rolb
test
push
or
jmp
dec
inc
mov
lds
sub
aas
pop
test
repz
sub
dec
xor
movsb
call
lcall
pop
mov
negl
inc
out
jne
cwtl
leave
inc
jl,pn
cld
pop
into
mov
ret
sub
mov
sbb
lods
sub
fidivl
add
dec
fsubr
or
sub
lock
jae
dec
sub
xchg
mov
rclb
xchg
nop
jmp
into
adc
and
loopne
fsub
iret
adc
data16
sub
out
ficompl
clc
mov
popf
mov
subb
xor
inc
pop
lahf
fdivl
jo
stos
sub
push
xor
sub
mov
add
dec
fs
adc
pop
xchg
addr16
ljmp
cmpsl
mov
and
sbb
jb
fs
pop
dec
popf
jno
xchg
cmpl
adc
pop
and
push
mov
push
mov
pusha
ret
fistpll
fimuls
rorb
mov
nop
gs
dec
arpl
mov
xchg
das
aaa
ret
outsl
iret
push
mov
xchg
xchg
leave
add
mov
pop
sahf
pop
dec
shlb
pushf
and
cmpsb
adc
aam
mov
aad
jae,pn
add
xor
mov
mov
mov
ret
and
xchg
imul
xor
aad
fdiv
or
mov
dec
add
fwait
push
movsl
in
test
nop
fsubrl
nop
scas
shlb
or
subl
ret
inc
sbb
cmc
scas
arpl
dec
jno
cmpsl
scas
shll
and
xchg
and
repnz
call
mov
fnsave
pusha
jmp
add
add
cwtl
add
call
movsl
jo
push
jle
dec
and
mov
out
loop
adc
sub
fadds
pop
add
pop
loop
cmp
aam
popa
lret
cmp
xor
call
mull
ljmp
cmp
push
arpl
push
addb
jns
ffree
cmp
cmp
xlat
sub
flds
inc
mov
xor
dec
repz
pop
es
lods
xchg
mov
fsub
xor
xchg
add
out
mov
push
cmp
jp
pushf
mov
sahf
fdivl
dec
sbb
aad
in
sahf
sub
xchg
inc
mov
jae
lret
insl
sub
xor
imul
adc
ss
mov
mov
pop
push
mov
out
movsb
mov
lds
sub
outsb
jge
push
jae
call
inc
popa
push
mov
jno
lods
jecxz
add
mov
xchg
in
mov
cmp
mov
inc
push
mov
out
jno
imull
push
and
lods
test
push
int3
xor
sub
data16
mull
out
or
mov
into
shrl
lods
bound
lcall
inc
cmp
adc
mov
jecxz
test
rorl
mov
mov
aad
pop
pop
scas
adc
pop
outsb
add
jnp
jp
pop
stos
adc
cli
ds
inc
mov
dec
dec
and
in
cmp
rcrb
push
xchg
testb
es
loope
aaa
data16
std
mov
and
clc
xor
test
iret
mov
jge
jnp
insl
pop
insb
inc
push
inc
ficoml
mov
inc
mov
insl
dec
movsb
ds
mov
xchg
sbb
jl
dec
push
addr16
jecxz
or
or
fcoml
mov
lds
mov
andl
test
lea
jmp
shlb
ret
into
inc
fistl
sbb
sti
mov
cld
cmp
push
or
mov
stc
push
push
movsb
shlb
imul
xor
jmp
cmp
mov
movsl
rorb
add
pop
push
daa
dec
ds
xor
xlat
inc
out
sbbl
mov
pop
xor
or
loop
cmp
adc
sub
daa
xchg
idivb
fstps
or
cli
add
cld
push
gs
jns
add
and
mov
sti
ss
clc
dec
icebp
lods
inc
mov
les
out
push
out
adc
cwtl
subl
pop
nop
cmp
add
cld
fadd
push
dec
jge
test
insl
cmpsl
push
call
ss
pop
cmp
and
lret
roll
or
cmp
outsl
push
xor
xchg
sub
fcomps
jb
or
mov
push
pop
pop
out
xor
push
push
mov
mov
cmp
mov
dec
xchg
inc
jno
std
sub
or
scas
aaa
dec
xchg
jo
call
xlat
stos
xchg
cmp
cmc
adc
fisubrl
xor
test
jp
xor
xchg
in
pop
jg
enter
cli
sub
in
cs
hlt
fbstp
bound
sti
or
xor
imul
xor
int3
and
test
scas
fisttps
in
imul
and
test
testl
sub
inc
push
stc
sbb
adc
dec
jns
jmp
ljmp
mov
mov
jle
pop
dec
in
jno
or
rcll
xchg
jg
ja
mov
bound
aas
flds
and
jl
lahf
ret
mov
add
sub
push
mov
sbb
inc
sbb
js
mov
int
movsb
adc
dec
push
das
xchg
pop
sbb
into
icebp
xor
sub
pushf
cmpsb
mov
add
add
pushf
xchg
fstpl
cltd
addr16
mov
int
loop
out
negb
jmp
cmp
inc
inc
les
sub
or
mov
mov
sbb
les
mov
in
xchg
adc
jl
fidivs
push
stos
push
icebp
jns
mov
pushf
pop
test
sbb
xchg
stos
inc
or
int3
cmpsl
daa
xchg
lcall
in
testb
es
arpl
add
mov
jne
push
xchg
pop
cmp
cmp
addr16
mov
mov
std
sbb
rcl
push
lea
mov
icebp
mov
addr16
pop
leave
push
leave
scas
pushf
stos
sub
push
mov
fsub
cwtl
fwait
cmpsl
dec
xchg
mov
in
mov
pop
insl
jecxz
popa
mov
and
ja
add
xchg
cmc
mov
sbb
sub
jo
scas
pop
cmpsl
jmp
stc
jae
xchg
or
add
xor
lahf
insl
xor
mov
mov
xor
push
add
popf
add
mov
adc
out
repnz
mov
orb
adc
and
adc
jne
inc
push
cmpsb
ret
lcall
adcl
lods
add
push
pusha
loope
std
jle
jne
imul
add
enter
ror
xor
out
cmp
push
push
aad
xor
sub
or
add
mov
dec
ret
dec
cmpsb
push
jae
jo
cmp
mov
mov
xchg
or
pop
add
xor
inc
int
add
push
jno
xlat
iret
push
mov
inc
ljmp
mov
pusha
sub
std
sbb
les
sbb
sbb
shlb
cli
and
dec
std
inc
adc
test
int
and
or
shrb
xchg
clc
dec
fists
xchg
xchg
mov
nop
mov
sbb
stc
adc
xchg
jno
jmp
fidivl
sbb
add
outsb
sub
movsl
sub
mov
je
pop
dec
push
sbb
add
push
fdiv
cltd
mov
pusha
cmc
push
mov
mov
jmp
sbb
add
xor
mov
add
mov
mov
xchg
dec
or
cmp
mov
adc
jae
icebp
push
mov
imul
adc
ds
nop
mov
push
enter
call
push
icebp
pop
push
addr16
fsub
addb
inc
inc
test
mov
dec
pusha
push
ret
imul
cmp
in
and
cmp
dec
lods
adc
sub
cltd
daa
adc
pop
mov
add
mov
and
test
dec
sbb
xor
xchg
int
sbb
add
lahf
add
lods
insb
js
adc
movsl
je
dec
andb
loopne
and
in
inc
dec
cltd
ficompl
push
jmp
sti
testb
mov
mov
into
inc
mov
aaa
or
in
out
adc
dec
lret
mov
adc
mov
ficoml
pusha
js,pt
aas
lods
mov
aas
sub
sub
push
insb
in
jmp
mov
rcrb
repz
mull
or
cmp
mov
in
outsl
ja
push
pop
mov
xor
lods
or
lock
add
inc
cmp
pop
into
mov
adc
mov
popf
sbb
mov
or
cwtl
adc
adc
push
sub
jle
pusha
or
push
mov
jecxz
sub
lds
cmp
ja
xorl
mov
jge
repz
iret
sbb
pop
out
les
adc
test
cmpsb
hlt
int
lahf
fadds
add
mov
cmp
in
push
dec
pusha
imul
mov
and
sub
stos
in
ss
je
scas
inc
sub
nop
hlt
cmp
into
stc
add
push
dec
xchg
jbe
nop
shrb
sbb
jecxz
jns
sub
mov
insb
mov
seto
jge
push
test
fsubs
popf
ja
pop
xor
sti
mov
mov
pop
or
addr16
push
sahf
inc
adc
roll
jno
pop
or
xlat
jecxz
xchg
cmp
lret
jo
inc
arpl
out
mov
sbb
jns
dec
mov
iret
or
add
loop
loop
pop
lock
fldenv
mov
rcll
push
test
aas
inc
dec
fsubs
je
les
testb
inc
sbb
sahf
loope
fisubrs
cmp
imul
jno
mov
iret
in
loopne
sub
cld
gs
in
sbb
sahf
cmp
xlat
rcll
mov
jp
xchg
jecxz
xchg
repz
push
mov
mov
sub
loope
test
jmp
test
push
pop
jmp
loope
in
mov
int
push
leave
mov
adc
adc
push
adc
cmp
push
jne
and
jp
fs
aas
jp
mov
xchg
or
jg,pn
sbb
sbbl
or
xchg
inc
push
add
cmp
xorb
fildll
dec
out
andb
sub
call
adc
in
call
scas
scas
add
cld
adc
in
mov
outsb
cli
push
dec
in
cltd
sahf
sbb
mov
icebp
testl
dec
and
inc
pop
mov
pop
push
xor
xchg
jns
add
push
or
aam
test
mov
xchg
out
push
ficomps
dec
shlb
loopne
jns
iret
roll
mov
xor
mov
scas
jbe
dec
cmpsb
xor
ret
cmp
ljmp
or
lods
arpl
sub
or
jno
lock
popf
jl
orb
pshufw
add
adc
inc
pop
inc
mov
push
inc
scas
mov
jmp
fists
test
in
fstpt
and
adc
adc
sbb
xchg
pop
scas
sub
push
inc
lret
sbb
mov
fisttps
and
xchg
add
cld
jp
inc
lods
dec
out
xchg
adc
insl
push
xchg
dec
push
or
cmp
stc
faddl
std
iret
mov
push
add
imul
pop
test
inc
cltd
lds
loop
inc
sbb
pusha
ja
lods
xlat
or
lret
test
or
call
leave
mov
cltd
xchg
mov
jb
inc
pop
push
dec
and
xor
add
adc
loop
bnd
mov
cltd
xchg
mov
jb
inc
pop
push
dec
and
xor
add
adc
loop
icebp
jmp
mov
cltd
xchg
mov
jb
dec
pop
push
dec
and
sub
push
sbb
or
stc
fsubrp
dec
fsqrt
leave
mov
cltd
adc
call
mov
std
out
negb
add
adc
arpl
push
add
adcl
jecxz
jbe
ret
xor
xlat
and
xor
add
adc
inc
mov
dec
mov
mov
add
adc
and
leave
xor
add
adc
inc
cmpsl
push
inc
or
or
add
das
cmpsb
pop
pushf
push
mov
shll
insb
sahf
inc
mov
push
mov
pushf
push
je
in
js
lret
aas
adc
jne
mov
gs
inc
loopne
mov
jns
mov
dec
lahf
cmpb
xchg
inc
pop
int3
xchg
mov
and
out
xchg
mov
inc
pop
scas
dec
xor
outsb
jmp
push
xor
shlb
bound
lods
je
cmp
pusha
jl
ret
test
fstps
ret
das
int3
mov
bound
mov
mov
in
jl
push
stos
repz
lods
cmp
pop
and
jge
cmp
ss
mov
scas
mov
xchg
jno
shl
xor
xlat
xor
add
shlb
loopne
out
nop
arpl
push
pop
mov
imul
mov
mov
test
jp
paddw
or
push
adc
push
aad
xorb
push
xchg
shlb
xor
sub
pop
int3
xor
push
inc
fistl
and
andb
cmpsb
xor
test
jbe
arpl
push
inc
mov
jo
add
adc
and
xor
shlb
xor
add
adc
inc
mov
inc
mov
jo
add
adc
and
xor
shlb
jp
mov
push
scas
scas
mov
xchg
outsb
inc
and
sahf
sbb
mov
mov
jge
inc
xor
add
or
xlat
mov
pop
in
mov
insl
gs
adc
lods
rcll
push
dec
repnz
inc
scas
dec
mov
dec
cmp
push
fs
iret
xor
pop
insb
xor
dec
fimull
or
bound
int
je
sub
sbb
inc
add
dec
shrb
xchg
mov
mov
in
jle
and
int
jl
dec
test
dec
push
pop
lds
enter
clc
enter
repnz
test
cltd
xchg
or
fs
push
inc
hlt
test
mov
popa
test
sub
and
scas
es
cmp
cmpsb
xor
leave
adc
cmpb
aad
imul
add
mov
add
loope
ljmp
jecxz
xchg
push
xor
es
pop
mov
out
push
into
jo
ss
ja
add
es
xor
xor
mov
dec
test
or
add
adc
cs
insb
out
popf
mov
jle
dec
inc
fs
pop
xchg
aaa
add
repz
add
outsb
or
mov
andb
mov
mov
inc
les
ds
pushf
mov
sbb
xor
notb
jbe
sbb
dec
inc
or
cmp
shll
lock
jecxz
data16
or
out
add
aad
popa
mov
or
pop
lcall
rcrl
mov
outsb
dec
mov
mov
aas
aaa
sarl
orb
mov
mov
push
imul
adc
adc
jns
adcl
mov
jns
jg
cmpsl
pop
ficompl
lea
arpl
les
jno
int
fucomip
leave
cld
aad
popa
fs
xlat
and
mov
push
pop
cmp
push
lods
loope
xor
and
scas
adc
insl
jmp
pop
xchg
and
add
dec
mov
sbb
pop
adc
insl
jecxz
pop
and
jae
cmp
jg
mov
ljmpw
roll
mov
aaa
inc
fldenv
insb
cmp
icebp
jbe,pt
cld
cmp
and
notb
cmp
stos
aaa
sub
and
inc
xlat
mov
inc
ja
mov
inc
mov
out
pop
xor
pop
roll
sub
mov
pop
sub
call
scas
loop
mov
jmp
js
push
cwtl
pop
inc
pop
lret
mov
push
or
push
jno
stos
rcr
jno
adc
lock
push
scas
adc
shlb
enter
and
cmpsb
mov
adc
cmp
add
jno
sahf
xlat
insl
imul
cltd
aad
xor
test
dec
jl
cltd
pop
mov
subb
hlt
add
lret
lods
pop
jecxz
les
lds
std
clc
xor
mov
ljmp
push
cmpsb
lods
mov
pop
cmpsb
cmpsl
mov
rorl
adc
mov
cmp
dec
sahf
popa
pop
adc
inc
arpl
xchg
cmp
loopne
xchg
dec
add
repz
xchg
add
dec
add
pop
cltd
sbb
arpl
addr16
mov
cmp
push
inc
out
roll
jb
mov
js
movsl
sbb
ficoms
pusha
pop
adc
popl
sub
xor
jae
pop
fiadds
pop
bound
fprem1
sub
loopne
adc
or
sbb
test
inc
mov
sub
mov
or
movsl
jecxz
je
mov
fisubrl
or
sub
mov
mov
adc
fstps
sbb
fdivp
xor
xlat
lock
and
sahf
stos
mov
lods
or
adc
xchg
add
sbb
jbe
adc
mov
add
mov
cmp
shlb
jge
jno
push
push
fsubrp
add
adcb
mov
popa
mov
fistpll
or
insl
test
jnp
pop
rolb
repnz
test
add
sbb
lret
clc
les
push
cwtl
dec
sbb
mov
xor
mov
inc
push
test
jno
fisttpl
jno
mov
popa
fwait
pushf
xlat
push
fwait
loope
in
xchg
push
push
push
cs
sbb
insb
clc
push
jge
jecxz
mov
xchg
xchg
fwait
aam
out
jbe
movsl
xchg
xchg
jecxz
stc
mov
cltd
jmp
sbb
mov
and
xlat
into
and
cmc
cmp
push
pop
pop
and
clc
mov
mov
test
push
jo
stos
lods
jbe
fadds
int
pusha
stos
in
pop
or
scas
sub
xor
sub
sub
rclb
jg
repz
bound
or
jecxz
fs
pop
sub
cld
adc
scas
ja
and
xchg
sbb
inc
adc
push
out
adc
in
add
mov
or
fs
fidivrl
je
xor
iret
sbb
pop
test
push
ret
cmp
push
insl
popa
adc
push
shll
cld
in
pop
int
clc
mov
push
add
mov
fnstsw
aaa
std
lock
ss
outsb
xchg
subb
jo
dec
mov
lahf
xchg
movsl
inc
call
mov
jbe
add
in
sarb
int
cmpsl
clc
loope
or
scas
mov
pop
mov
out
xor
or
scas
adc
ja
int
inc
sti
es
hlt
ljmp
and
jg
adc
adc
fdiv
hlt
push
out
push
in
das
add
mov
xchg
fs
das
sub
pushf
sbb
jl
fiaddl
adc
sub
or
cmc
call
insl
sbb
dec
aas
or
icebp
jle
lods
jl
sub
xor
push
lcall
xchg
jno
fsubrs
fcoms
pop
popf
lcall
hlt
sarb
test
push
push
mov
mov
inc
jle
stos
jmp
adc
popf
inc
pop
popa
sti
bnd
or
out
pop
sub
adc
sub
push
adc
mov
pop
repnz
aad
std
jg
pop
pop
mov
shr
inc
mov
jb
imul
iret
xchg
test
cmp
pop
xor
add
jle
iret
cmp
dec
sub
add
mov
jmp
ss
mov
mov
mov
jns
mov
gs
into
cmp
iret
add
ja
repnz
and
call
test
and
pop
addl
sub
mov
popf
jmp
xor
sbb
mov
xlat
aaa
xlat
sub
test
cmp
je
shlb
pop
loope
mov
scas
xor
cmc
push
mov
fsubs
xchg
xor
sub
cmpsl
jno
jmp
push
mov
pop
es
lret
sbb
andb
push
into
push
into
and
mov
lods
dec
ljmp
mov
ss
xchg
pop
adc
mov
bound
scas
xor
ret
adc
adc
repnz
pushf
push
sub
xchg
lahf
mov
leave
fistps
jle
push
jo
test
imul
in
mull
mov
leave
js
push
inc
xchg
add
add
fidivs
mov
out
loope
push
xchg
jae
es
xor
adc
mov
data16
shl
stos
pop
push
cld
mov
pushf
sub
push
inc
fs
xchg
cltd
sbb
mov
test
add
mov
inc
xchg
and
and
dec
inc
jg
fisttpll
clc
jnp
pop
fwait
jbe
xor
add
mov
rcl
mov
sbb
cmpsl
dec
out
notl
jbe
test
stos
addr16
cmp
sbb
cli
pop
mov
scas
loopne
xchg
hlt
pop
and
add
xor
aas
fdivl
dec
sbb
repnz
divl
gs
push
rorl
add
and
das
into
lock
xchg
mov
mov
pop
jne,pt
cmp
jo
jg
push
xchg
fs
jne
in
cmp
lods
mov
shlb
mov
lock
pop
sub
inc
loopne
insl
xor
and
xor
hlt
popa
xchg
cmpxchg
mov
sub
pop
call
lahf
xchg
push
fdiv
sub
cmpsb
sti
movsb
dec
dec
popf
push
pusha
xlat
jbe
mov
mov
loopne
outsl
sub
out
int
adc
xchg
mov
adcl
in
test
jle
daa
sub
stos
sbb
test
push
lea
les
cmpl
mov
nop
sarb
xorl
pop
pop
sbb
xchg
imul
push
int3
push
mov
filds
sub
push
xchg
cli
push
xchg
cmc
lret
mov
adc
shl
adc
push
test
jmp
bound
int3
jno
movsl
xchg
ds
and
adc
cmpsb
sahf
xor
mov
sub
lret
jle
and
shrb
push
lods
pusha
xchg
adc
incb
pushf
in
xchg
mov
repz
pop
mov
add
aaa
mov
mov
dec
test
xor
mov
stc
jae
cwtl
loop
dec
cmp
stc
xlat
idivl
mov
std
or
sub
pushf
call
pop
xchg
scas
pop
pop
js
dec
inc
repz
cmc
pop
hlt
push
adc
or
rclb
adc
or
mov
fnstenv
loop
jns
call
mov
mov
outsl
inc
cmp
mov
icebp
std
outsb
cmp
pusha
pop
ficomps
sbb
clc
mov
testb
mov
es
adc
add
sbb
fbld
or
pushf
aam
test
mov
call
aaa
inc
sub
fcomps
scas
add
aam
arpl
lock
fidivs
fs
out
mov
dec
in
test
or
out
add
cmp
mov
fiadds
sub
push
cs
lods
shr
mov
dec
data16
and
add
pop
test
xchg
roll
push
jbe
cmp
xchg
adc
xlat
inc
cs
xor
add
inc
mov
push
in
inc
cmpsb
shrl
sbb
or
xor
mov
test
cli
loope
mov
mov
mov
jb
leave
icebp
in
jb
cmpsl
nop
inc
xsavec
jnp
andl
pop
lods
je
loopne
push
sub
test
movsb
fdivl
in
shrl
or
push
cmc
jecxz
and
scas
push
rorb
out
xlat
popf
imul
dec
jp
mov
inc
add
lcall
outsb
jns
xchg
out
fcompl
jp
xchg
xchg
and
sub
sub
mov
sbb
and
or
test
xor
test
cltd
imul
scas
mov
lahf
das
jg
mov
mov
arpl
idiv
and
repz
mov
fsubrs
enter
test
enter
fcomi
out
xchg
mov
adc
and
xchg
cmp
pop
clc
clc
in
mov
movsb
ffreep
loop
pop
jmp
jge
lds
jge
loop
add
scas
lahf
dec
leave
aad
push
fiadds
mov
ret
test
mov
pop
roll
loopne
jns
add
adc
sub
pushf
add
sbb
push
test
loope
mov
mov
mov
fcompl
pop
pop
out
mov
shll
or
in
sub
push
mov
mov
cmp
ds
cwtl
fldenv
cmp
or
cmp
add
subl
jno
xchg
adc
adc
mov
push
fsts
or
xor
xlat
cld
jl
sbb
push
cmp
test
leave
and
test
shr
xchg
xor
and
adc
scas
mov
jmp
cmp
and
cltd
ret
pop
in
shlb
or
roll
ljmp
es
add
idivl
jo
enter
fs
pop
pop
inc
pop
outsb
mov
lea
pop
xor
pop
addr16
mov
ret
dec
scas
adc
dec
mov
pop
sub
test
mov
dec
imul
xor
lret
push
into
fst
jg
call
hlt
shl
adc
cld
push
fsubs
inc
test
lods
push
or
mov
push
or
inc
stc
sti
sub
jge
cmp
xchg
daa
out
mov
mov
pushf
lahf
xor
mov
mov
adc
push
add
adc
out
add
rcrb
mov
fmul
arpl
inc
ficompl
out
sbb
packsswb
and
inc
mov
faddp
mov
sar
pop
loope
fisttpl
jmp
sbb
or
add
dec
xchg
jmp
jge
dec
je
pop
aas
int
lods
cmpsb
xchg
inc
jmp
dec
add
std
scas
pusha
cmp
popf
in
or
movsl
adc
jno
dec
or
ret
jae
xor
lock
add
mov
sub
daa
je
scas
aam
add
daa
fcompl
loopne
pop
push
in
sub
out
fcomi
cmp
ljmp
js
sub
fnstenv
adc
jmp
pushf
sub
lods
lret
push
es
loopne
shrb
sub
mov
das
xchg
sub
mov
push
cmpb
jae
dec
mov
lahf
cltd
out
mov
outsl
scas
push
lahf
or
pop
loop
fists
jecxz
or
xor
push
cmp
mov
addr16
push
iret
inc
jge
stc
inc
ss
mov
mov
std
in
mov
pop
and
push
sbb
xor
xchg
xchg
adc
mov
pop
mov
push
jge
jp
and
insl
into
or
hlt
fs
ds
ds
xchg
out
mov
add
xchg
loopne
int3
sub
push
xchg
pop
or
xchg
insl
les
mov
adc
cs
xor
add
sti
fstl
hlt
sbb
ja
aam
push
mov
lahf
and
adc
sahf
rclb
xor
dec
outsb
notl
mov
dec
je
jl
xchg
adc
fldcw
sbb
pop
imul
and
jp
int3
mov
xchg
lahf
adc
movsb
or
adc
jae
cltd
mov
inc
add
andl
ret
enter
cli
jo
ljmp
stc
pop
and
popa
sti
sub
mov
jg
push
or
hlt
loope
mov
aas
sahf
fsubrp
test
mov
pusha
cmp
or
pop
pop
jae
sbb
or
repz
lahf
roll
sbb
push
out
lcall
push
add
ja
dec
xchg
test
add
int
pop
pop
pop
and
mov
mov
adc
or
xchg
shll
clc
jecxz
jl
ror
adc
out
cwtl
das
mov
fadd
jns
insl
sbb
adc
sub
xchg
cmc
dec
dec
pop
push
xor
push
xchg
addb
lcall
adc
rcrb
push
cmp
outsb
fisttps
cmpsl
mov
imul
dec
cwtl
stc
xchg
sahf
movsl
cmp
aas
stc
test
sti
cmp
jno
lods
aaa
lcall
xor
jp
mov
cmpsl
shlb
and
mov
lods
pop
sahf
mull
and
sub
test
stc
mov
push
lds
pop
push
mov
mov
adc
arpl
sub
cltd
and
mov
loope
pop
rdpmc
mov
push
les
pusha
movsl
repz
insb
adc
or
pop
loop
out
lods
pusha
jp
test
pop
adc
in
push
jle
xchg
xchg
pop
aas
ret
fstpl
push
gs
add
cs
jno
mov
mov
xchg
push
stos
aam
dec
sbb
scas
dec
or
sub
scas
pop
lahf
rclb
or
jns
fmull
and
bound
ja
js
stos
xor
test
mov
rcll
int
andb
mov
mov
and
jne
adc
push
cmp
pusha
loope
lar
lods
mov
push
and
std
push
dec
enter
insl
divb
inc
call
stos
lret
jae
xor
cmpsl
fisubl
gs
jns
push
mov
inc
push
mov
xor
mov
jbe
lods
or
add
jbe
in
icebp
std
decb
insl
xor
push
cmp
xor
add
jb
sub
sbb
xchg
loopne
mov
mov
inc
dec
in
or
cwtl
lds
and
push
pop
sti
and
aaa
stos
loopne
sub
mov
pop
popa
sub
push
sar
sub
xchg
addl
mov
fstl
mov
out
sbb
out
in
xchg
mov
ja
push
mov
or
call
lods
push
pop
adc
shll
dec
mov
das
cmp
mov
aas
inc
test
sti
xchg
push
xchg
pop
mov
lcall
pop
fadd
mov
inc
movsb
cmp
rolb
jo
cmpsb
test
xchg
imul
xchg
rcl
cmp
ret
xor
and
inc
mov
add
jno
shrl
insl
mov
mov
add
or
rol
ds
ret
push
ud2
cmpsb
xsaveopt
das
xchg
xor
sub
sbb
push
pop
test
inc
loope
mov
pop
dec
data16
icebp
sub
jmp
sub
dec
pop
jle
xor
ret
cmp
test
stc
dec
jmp
scas
push
mov
outsl
mov
dec
and
les
dec
xchg
mov
outsl
sub
mov
rcl
jb
dec
sbb
or
push
inc
or
cld
insb
sbb
sarb
inc
sub
movsl
lods
cltd
hlt
adc
dec
mov
mov
bound
arpl
andl
outsl
xor
mov
jae
jae
mov
cmp
adc
cmp
pushf
xchg
xor
leave
push
stos
pop
dec
jp
xchg
inc
sbb
adc
or
cmp
inc
popa
insb
popf
out
pushf
jbe
push
les
out
push
cmp
adc
jl
xchg
xchg
and
dec
std
outsb
pusha
out
shlb
stos
sbb
pop
sahf
pop
shlb
addr16
js
push
popf
mov
std
sbb
stos
aam
mov
dec
inc
mov
xchg
mov
adc
pop
cld
or
das
pushf
push
shlb
xor
or
xor
push
sbb
aad
and
rcr
inc
int3
pusha
in
das
pop
and
nop
push
pushf
mov
mov
fnsave
loop
fisubl
xor
aaa
add
scas
das
repnz
movsl
lahf
sahf
cmpsl
ficomps
adc
sahf
pop
cmpsl
sbb
lods
pop
sub
mov
ds
xchg
pop
hlt
stos
sub
xchg
std
sbb
cmpsl
mov
jmp
jno
orb
ss
fdivrl
enter
loop
into
bound
out
add
fnsave
cmpsl
unpckhps
push
lds
lods
rcll
test
jle
leave
sub
int3
xor
add
mov
and
push
xor
test
adc
test
sbb
inc
in
sub
mov
lock
rclb
shl
aas
jne
pop
jno
sarb
mov
int
in
sub
pop
pusha
cmp
push
cmp
adc
mov
ret
adc
sub
vorps
pop
sub
fs
or
loope
jmp
mov
mov
add
inc
outsb
out
cmp
lahf
and
mov
add
fsts
jbe
adc
mov
add
insl
hlt
sbb
adcb
sti
mov
cld
pop
cmp
nop
or
adc
daa
enter
out
xchg
push
pusha
inc
cltd
cwtl
sbb
and
call
adc
add
aad
lahf
sub
adc
dec
out
das
test
mov
lcall
imul
mov
and
mov
sub
pop
sub
adc
push
jb
cmpsb
mov
pop
test
add
or
or
int
mov
jg
rcl
fisubrs
stc
xor
pop
insl
loop
push
xchg
test
scas
jge
dec
les
xor
push
add
out
std
pop
xor
add
adc
inc
mov
inc
mov
jo
add
adc
and
xor
shlb
xor
add
adc
inc
mov
inc
mov
jo
add
adc
and
xor
shlb
mov
xor
andb
mov
and
xorl
jecxz
repz
add
hlt
and
xor
add
adc
inc
xor
mov
jo
ja
cwtl
or
cmp
sub
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
movsb
xchg
xchg
cmpsl
test
mov
mov
sbb
add
je
fs
push
ja
ja
xchg
hlt
in
aam
divl
add
je
xchg
ja
sahf
movsb
xchg
xchg
mov
in
aam
in
xor
and
addr16
sub
sbb
pop
cmp
xor
ja
xchg
mov
in
pop
jns
testb
ljmp
sub
ficompl
popa
das
or
dec
pusha
sub
insl
xor
xchg
lcall
ret
push
addr16
adc
shrl
xchg
sub
xor
dec
xlat
jmp
outsb
mov
push
in
push
xor
movsl
xchg
loop
add
pop
sub
xor
cltd
and
mov
test
in
inc
sbb
pop
mov
sub
mov
mulb
fcoms
add
lea
stc
das
data16
pushf
ja
cmpsl
fs
std
and
jp
push
dec
add
xor
dec
adc
and
addr16
lods
hlt
in
aam
out
xor
and
adc
add
je
fs
push
addr16
adc
loop
xchg
icebp
cmpsb
loope
cwtl
xchg
lods
mov
jne
and
jb
pop
adc
or
sbb
xlat
loope
mov
mov
aam
les
push
push
inc
je
xor
inc
adc
mov
std
movb
aam
divl
and
adc
add
je
fs
push
addr16
ja
xchg
hlt
in
aam
divl
and
adc
add
je
fs
push
addr16
ja
xchg
adc
xchg
mov
pop
fistpl
pop
xchg
push
jl
lods
push
cmp
cmp
fnsave
fdivl
inc
push
pop
jne
pop
jne
jl
mov
sahf
mov
or
iret
adcl
sub
loopne
jle
jns
pop
cs
test
cmp
mov
mov
pop
add
inc
mov
fisubl
xchg
aad
mov
neg
xchg
movb
hlt
cltd
gs
test
sti
call
inc
bound
movsb
add
repz
cwtl
xchg
repz
fstps
clc
xor
xor
and
inc
flds
or
sub
mov
movsl
push
sub
mov
jg
push
aad
inc
sub
xchg
mov
outsl
mov
or
pop
inc
leave
nop
movsl
in
sub
pop
inc
sub
cmp
mov
pop
inc
scas
sbb
aaa
into
adc
test
jns
lea
std
mov
in
jle
fsub
jno
cwtl
sub
fs
dec
ja
mov
loope
hlt
into
cmp
mov
aas
icebp
insl
sub
jecxz
pop
out
aas
inc
mov
add
stc
fnstsw
sub
aam
push
pop
test
sbb
adc
in
mov
adc
mov
pushl
loop
cmp
stos
mov
jnp
adc
jg
lea
cmp
ja
add
mov
in
mov
loope
into
sub
test
jle
dec
stos
std
jge
leave
adc
add
in
orb
and
and
ret
add
cmp
pop
scas
and
rclb
xchg
pusha
int3
mull
dec
jbe
repnz
inc
mov
lcall
sbb
jl
cmc
adc
pop
jns
and
sub
sub
sahf
out
gs
dec
mov
or
cmp
call
cmpsl
sbb
frstor
xchg
inc
push
in
faddl
or
sub
push
xlat
dec
or
push
outsl
jns
dec
fs
scas
mov
ss
leave
and
pop
mov
pop
push
pushf
jge
test
ds
xor
popa
stc
add
cmpsl
mov
jl
nop
rcrl
inc
sti
adc
and
cld
mov
jl
orl
in
sbb
cld
push
test
pop
xchg
xor
shll
aad
cmp
xlat
cmp
arpl
cmpl
loopne
jae
cltd
jbe
in
sbb
rcll
pop
test
dec
sub
add
lock
dec
xor
sub
std
pop
mov
or
xchg
cmc
jo
dec
adc
fadds
stos
mov
jecxz
xchg
out
push
jg
sbb
jg
push
cmp
jg
orb
sub
xchg
inc
mov
sbb
inc
mov
cmc
sbb
add
adc
nop
adc
mov
pop
aaa
pop
pop
mov
loopne
add
mov
lock
add
pop
andl
and
dec
cmpsb
pop
das
rorl
jnp
mov
data16
movsl
add
mov
mov
jae
or
mov
and
int
xchg
loopne
rclb
mov
call
cmp
push
push
into
inc
mov
push
xor
inc
ret
loop,pt
insb
rcrb
jbe
xchg
data16
pop
pinsrw
push
nop
rcll
aam
inc
andl
jle
pop
mov
add
sub
mov
mov
xchg
mov
leave
cmp
jp
jle
or
jne
dec
mov
cmp
dec
push
pop
pushf
dec
cwtl
scas
push
sarb
out
aas
sbb
je
adc
rclb
dec
push
cs
test
test
jae
mov
aaa
int3
mov
ljmp
jbe
and
dec
push
ds
scas
cmp
mov
xchg
sbb
repz
mov
std
and
cmp
lods
push
push
fcompl
aas
ds
test
push
fisttpl
cmpsb
mov
add
cmp
ljmp
mov
jno
pop
stc
or
sub
lods
sub
sub
xor
fisubl
jle
mov
and
sub
in
push
movsl
sub
mov
sub
jae
adc
lds
push
pop
out
push
cmp
mov
adc
pop
hlt
mov
decl
jnp
mov
inc
lods
repnz
rcrl
lret
daa
xchg
xor
add
nop
cmp
mov
mov
ficoml
das
out
movsb
mov
or
xchg
xor
ja
cmp
loope
ficoms
push
and
xchg
jecxz
mul
lahf
ljmp
dec
dec
push
call
sbb
xor
aas
mov
orb
dec
movsl
daa
mov
xchg
std
and
pusha
aaa
jno
mov
xchg
and
out
xchg
xchg
inc
dec
adc
repz
aas
xchg
nop
sar
add
push
ret
sub
push
orb
sbb
movhps
scas
mov
inc
lcall
add
xchg
adc
push
inc
sahf
push
jge
and
cwtl
and
cld
ds
pop
frstor
jns
imul
repnz
sbbl
sbb
dec
lahf
mov
jns
xchg
push
outsl
inc
in
add
imul
xchg
pop
xchg
jecxz
and
adc
cltd
outsb
imul
jae
jmp
add
out
sahf
pushf
xor
movsl
in
repz
cmp
xchg
mov
ja
out
std
jmpw
adc
hlt
pop
lcall
aas
pop
stos
int3
test
popf
xor
in
mov
or
add
in
xchg
imul
dec
cwtl
xchg
adcb
xchg
cmp
xchg
dec
sub
test
and
push
ljmp
fsubl
cmp
xchg
or
pop
xchg
lcall
mov
jno
push
testl
scas
push
pop
in
lret
xor
mov
stos
stos
xor
mov
sub
sub
mov
pusha
xor
or
and
test
xlat
pop
imul
inc
es
cmp
lods
and
ds
shrb
je
jmp
push
push
mov
cltd
test
loope
daa
jno
mov
aaa
mov
xchg
cmp
pop
sbb
sub
imul
lods
cld
lret
lret
dec
jbe
loopne
ja
test
insb
dec
cmp
adc
test
xchg
sub
jbe
xlat
insl
sbb
stc
movsb
sbb
test
dec
scas
out
mov
mov
mov
and
mov
js
push
pushf
mov
mov
push
push
inc
in
addr16
inc
dec
lret
add
jmp
push
xchg
xchg
mov
jg
and
jp
mov
fisubrs
mov
and
insl
in
dec
enter
pop
inc
in
jp
ret
xchg
and
sahf
aad
movsb
sub
push
adc
mov
fisubl
push
pop
jnp
jbe
jo
cmpsl
jmp
lret
or
mov
jg
lret
mov
inc
popa
dec
jg
pop
pop
and
mov
lods
or
lcall
xlat
dec
push
jmp
cs
arpl
fildll
sarl
ja
jl
xchg
dec
xchg
insb
dec
lahf
je
in
insl
xor
daa
add
hlt
rcll
jne
mov
mov
rorl
or
push
icebp
xchg
pop
pop
pop
shlb
mov
mov
pop
xor
cld
aaa
scas
cld
cmp
shrb
out
push
test
es
sbb
xlat
out
dec
jae
rclb
popf
adc
jnp
inc
jo
fsubrs
nop
sbb
jg
ds
fucomip
shll
out
sarb
pop
scas
pop
es
sub
rolb
jb
jns
sub
jl
sbb
pop
and
jno
mov
pusha
andl
sarb
sub
sbb
or
cmc
divb
mov
inc
push
xchg
mov
mov
fcmovbe
in
jmp
mov
jmp
lahf
jbe
or
mov
mov
and
pop
rcll
xchg
pop
test
or
cmpsl
dec
cs
test
mov
addr16
in
dec
push
flds
adcl
movsl
pop
lahf
insl
pop
pop
ljmp
dec
xchg
clc
xchg
and
jmp
sub
call
imul
add
xchg
fwait
pmaxub
push
cmp
xchg
push
adc
out
mov
gs
inc
clc
cmpsl
rol
aam
sbb
in
xchg
mov
cltd
out
out
sub
pop
lock
iret
push
inc
dec
inc
andb
loop
sbb
jnp
ja
cmp
bound
inc
adc
sub
jl
outsl
pop
daa
adc
aaa
int3
outsl
pop
mov
inc
in
das
mov
in
ret
sbb
mov
dec
push
dec
les
pop
xchg
insl
sahf
jns
sub
out
mov
call
xchg
push
inc
gs
jae
xor
sbb
push
insb
aam
movb
xchg
sbb
jns
adc
push
sahf
int
mov
mov
xchg
sbb
loopne
repz
mov
int
sub
in
add
add
add
xchg
loope
lods
mov
cmp
jne
sbb
push
in
mov
cwtl
push
push
mov
mov
sbb
mov
cmp
lcall
inc
mov
fs
and
int
cmc
adc
add
cmp
jge
aaa
mov
xor
jb
jae
inc
xor
mov
loopne
mov
push
add
pop
jle
pop
push
cmpsb
jmp
mov
jg
mov
xlat
mov
pusha
aam
cmp
lahf
mov
inc
scas
repnz
cld
or
push
ss
mov
cmc
data16
jo
xlat
inc
push
iret
push
cmp
leave
sub
dec
push
aaa
jae
ret
jo
mov
push
loop
mov
repz
data16
xchg
out
fcoms
stos
mov
fcmovnu
cltd
sbb
pushf
push
sbb
mov
not
pop
ret
scas
int3
adc
mov
mov
arpl
jns
pmullw
dec
arpl
lret
mov
int3
inc
enter
mov
nop
mov
std
es
movsb
clc
das
mov
adc
pop
loopne
mov
loop
inc
sub
lock
sbb
jg
and
xchg
xchg
or
add
icebp
test
in
cld
das
and
jecxz
cmpsb
shll
lea
les
fcoms
jns
fs
loope
push
pop
inc
inc
push
stos
push
mov
fidivs
loopne
sub
sbb
push
mov
fdivr
adc
fdivrs
sub
push
push
aaa
mov
inc
push
sub
aad
stc
jp
pop
stc
repz
adc
or
lods
lcall
filds
popa
mov
xchg
cli
loop
jne
push
push
out
ror
lret
xchg
andl
mov
movsl
mov
cmc
out
mov
jge
pushw
push
jmp
mov
aas
or
push
adc
cwtl
cmp
jns
push
mov
or
dec
sbb
add
lret
pop
xorl
jmp
test
mov
ror
aam
dec
loope
mov
repnz
add
mov
jae
test
lahf
scas
pop
xchg
and
test
adc
test
inc
mov
add
cmp
enter
notb
leave
imul
push
popf
sbb
mov
mov
outsl
or
jecxz
mov
testl
sti
shll
pop
xchg
out
mov
ss
pop
jmp
cli
fsts
loop
sbb
aas
loop
mov
fistl
lret
sub
repnz
nop
int
fildl
sub
and
add
push
mov
aas
xor
fnstsw
pop
out
cld
and
and
push
or
push
jl
mov
aas
dec
lods
mov
sarl
dec
fcompl
push
js
fimull
and
fucom
mov
bound
add
pop
adc
jg
mov
sar
ja
loopne
or
or
call
test
jmp
jno
and
out
mov
mov
and
movsb
decb
out
pop
or
xor
add
ljmp
ljmp
aas
mov
jno
sub
dec
add
test
nop
pop
xor
fistps
jns
sbb
sbb
das
fcoms
jno
imul
push
pop
xor
add
xchg
push
push
andl
out
inc
shrl
ret
or
insl
add
cltd
hlt
xor
hlt
mov
aam
lcall
push
xor
cmpsb
mov
mov
mov
dec
dec
repz
pop
je
outsb
sbb
daa
mov
xor
cmpb
out
pusha
imul
jbe
shll
movsb
lret
leave
lret
inc
out
sub
enter
jbe
rcrl
in
jg
pop
pop
popa
sbb
jg
mov
addr16
movsl
mov
push
dec
ja
and
pop
shll
xor
cmp
xchg
lcall
iret
jne
hlt
xchg
adc
enter
push
movsb
and
adc
mov
mov
cmp
xor
mov
sub
push
cwtl
push
pop
pop
stc
mov
out
fiadds
popa
aaa
shl
out
push
or
ss
mov
fmul
jg
shrl
out
cli
pop
mov
pop
xchg
and
std
inc
test
xor
jno
repz
into
shl
xchg
jmp
cmp
mov
pop
pop
andb
out
cs
in
adc
xorl
jo
mov
push
dec
cli
xchg
int
shll
ja
xorl
cmp
pop
scas
xor
loopne
pop
mov
sbb
push
test
sbbb
xor
sbb
dec
lahf
sub
pop
push
or
jno
xor
loop
js
lahf
cmp
mov
pushf
jo
shll
inc
cmpsl
pop
jb
stos
cmp
push
push
mov
test
movsb
jg
jnp
xor
enter
faddp
cltd
jge
ljmp
or
xchg
loope
add
or
fs
cmpl
push
sub
into
outsl
inc
outsb
popf
ss
push
pop
popa
xchg
sbb
stos
dec
adc
xchg
mov
pop
inc
lea
push
push
dec
jg
lock
cmpsb
or
pop
jae
or
jg
dec
ret
fmull
fcmovne
ficoms
mov
sbb
dec
inc
push
or
inc
inc
outsl
jmp
cmc
inc
inc
icebp
out
push
pop
sbb
sbb
cmpsl
repz
mov
or
and
mov
and
xor
fcmove
inc
ret
decb
mov
aad
xchg
or
dec
xor
fisttps
data16
mov
stc
add
xchg
sbb
imul
dec
mov
sbb
loop
dec
sbb
adc
shlb
dec
stos
mov
jbe
inc
ficomps
xchg
stos
pop
pop
jge
aaa
cmp
sub
jmp
cmp
adc
aas
cld
mov
cmp
dec
test
push
xchg
mov
sub
test
arpl
in
cli
mov
push
inc
sub
cmp
in
ret
mov
iret
push
sub
js
adc
subl
int3
out
jg
lea
cwtl
imul
stos
push
push
inc
fs
cld
sbb
mov
xor
fwait
add
fmul
inc
mov
ja
fdivrs
stc
insb
xor
addr16
dec
icebp
push
dec
call
aas
lods
mov
sbb
mov
jbe
mov
jge
mov
or
mov
testl
popa
mov
xor
adc
push
gs
sub
jae
insl
daa
arpl
jno
jge
stos
arpl
outsl
jge
outsl
pop
push
cmc
sbb
and
pop
jecxz
jmp
jo
add
inc
incb
loop
repnz
mov
mov
enter
or
or
add
cmpsl
sub
mov
dec
ja
sub
decb
js
test
adc
mov
adcl
lock
loopne
adcb
sarl
cs
cwtl
test
pop
mov
push
cld
ret
dec
aad
cwtl
push
fsubr
push
dec
push
mulb
lods
gs
cli
xor
test
mov
dec
add
xchg
clc
adc
std
jae
add
loop
push
or
aad
push
in
pop
sbb
push
enter
mov
adc
dec
or
fcomip
push
scas
fstp
mov
xor
lret
dec
cld
push
jne
adcl
icebp
mov
mov
loop
mov
pop
sti
ficoms
int3
cmp
movsl
fsubl
insl
out
add
pop
mov
ret
mov
test
scas
xor
outsb
cmpsb
imul
push
cmp
inc
sbbl
jne
adc
lock
push
dec
mov
clc
or
xor
std
imul
aad
fs
jecxz
adc
lahf
ja
pop
icebp
daa
out
mov
lahf
jmp
test
sub
mov
add
daa
mov
cmp
sar
jno
gs
mov
mov
loopne
loop
je
divb
mov
jns
lock
addl
xor
or
mov
push
test
ret
lret
cwtl
lea
sbb
insb
inc
rolb
dec
test
and
dec
inc
mov
test
push
adc
xor
or
std
movsb
and
jle
repnz
lret
enter
cmpl
mov
add
insl
cmpsl
lret
loop
ljmp
bound
xor
adc
imul
shll
int
pop
movsl
dec
test
sbb
fs
bndstx
pop
mov
xchg
fisubrl
mov
mov
icebp
nop
dec
repz
xor
adc
aad
in
or
shrb
add
push
adc
jo
jg
cmp
jg
shl
mov
jp
sbb
lods
mov
out
fwait
add
dec
les
lds
push
into
jns
or
dec
mov
cmc
addr16
fildl
jp
mov
in
xchg
cmc
pushf
push
mov
shll
mov
rcrb
dec
cmp
inc
stos
pop
shlb
neg
cwtl
push
pop
mov
xor
sub
rcll
xor
mov
cmp
lea
iret
cmpl
push
insb
mov
inc
push
mov
lret
mov
in
jl
frndint
movq
out
fwait
lock
add
stc
pop
hlt
icebp
sbb
popa
mov
daa
mov
testb
mov
pop
dec
test
jmp
adc
push
mov
jge
sbb
bsf
sub
insb
xchg
sub
mov
mov
push
xchg
add
jg
jns
fbld
fcomps
xchg
push
push
inc
jle
adc
add
pusha
clc
sub
into
pop
sarl
dec
cmp
arpl
fcomps
scas
mov
enter
sbb
stos
mov
xor
iret
jl
and
mov
sahf
rcl
scas
jnp
out
jmp
fisubl
pop
test
mov
subb
loop
mov
test
pop
repnz
jmp
sbb
dec
icebp
dec
call
ja
mov
aad
or
repz
inc
ds
adc
testb
sbb
push
pop
adc
xchg
loop
jno
movsb
mov
and
dec
inc
ret
fisubrl
sti
fstl
enter
jne
mov
cwtl
jg
mov
fdivs
int3
aaa
sub
popa
outsb
dec
xor
push
leave
movsb
lret
ss
cmpsb
fistpl
jns
sbb
in
jle
pushf
repnz
add
nop
or
push
push
out
xor
add
lcall
les
subl
call
test
push
pusha
fwait
dec
sub
leave
jno
arpl
sub
xchg
clc
sub
dec
mov
push
sub
shr
ret
lods
les
cmpsb
xor
adc
pushf
je
cmpsb
cwtl
call
fildl
in
sbb
repz
cmp
lcall
and
cmp
push
inc
mov
dec
xchg
cmp
cli
cmp
imul
xor
stos
shll
add
cmp
loopne
sub
inc
lahf
pushf
fimull
ljmp
out
xchg
iret
xchg
push
fbld
lcall
jp
in
or
lods
testl
dec
adc
repnz
rol
addr16
shrb
icebp
xor
pop
inc
or
adc
and
mov
test
aam
divl
and
adc
add
je
fs
push
addr16
ja
xchg
hlt
in
aam
divl
and
adc
add
je
fs
push
addr16
ja
xchg
hlt
in
aam
divl
and
adc
add
je
fs
push
inc
ja
xchg
hlt
in
aam
divl
and
mov
iret
in
test
cwtl
mov
jb
add
adc
inc
stos
adc
into
jbe
dec
mov
sbb
or
sub
sub
fisubl
lret
add
adc
inc
stos
jl
mov
push
sbb
or
cmp
sub
fiaddl
fs
pusha
pop
mov
pavgb
arpl
lretw
push
mov
mov
cltd
xchg
fldt
dec
dec
jne
cmp
cmp
cltd
and
jbe
in
fwait
ja
stc
xor
mov
and
ret
cmc
lods
xor
lahf
pop
dec
lret
imul
mov
sahf
mov
mov
mov
or
sbb
movsb
adc
push
mov
and
xor
push
push
adc
subb
jnp
adcb
cmp
xor
in
jb
xorb
stos
scas
xor
push
dec
mov
mov
int
ja
ret
inc
addl
pushf
loop
push
out
outsb
mov
mov
sub
cli
jbe
adc
inc
stos
rcrb
sbb
push
sbb
or
fisubrl
loopne
and
jle
out
pop
std
aaa
iret
adc
adc
movsl
inc
popf
push
mov
mov
mov
jle
xor
and
ret
daa
movl
lods
jns
push
xor
rcrb
mov
inc
stos
push
pop
mov
push
sbb
or
cmp
sub
fisubl
lret
add
adc
inc
stos
push
pop
mov
push
sbb
or
cmp
sub
fisubl
iret
fs
mov
jnp
jmp
insl
dec
in
adc
stc
adc
push
sbb
xor
ljmp
sbb
inc
les
testl
and
xchg
mov
ficompl
mov
imul
cmp
fldt
and
test
ret
mov
ffreep
push
jae
xor
mov
add
js
add
or
lahf
js
mov
add
mov
sub
jae
jo
in
mov
fxch
fnstenv
xlat
xor
mov
arpl
dec
out
ss
pop
and
mov
xor
out
mov
outsl
add
outsb
test
dec
mov
add
cmp
mov
mov
add
pop
xorl
cmpsl
push
jnp
aas
mov
dec
sub
add
mulb
movsb
leave
test
lods
xchg
scas
inc
in
adc
jno
sbb
add
mov
xchg
xlat
nop
xchg
rclb
mov
or
push
mov
gs
das
outsb
cmp
mov
xor
sahf
fucomip
sub
inc
add
insb
mov
push
sbb
data16
xchg
mov
pop
push
test
mov
into
jae
push
mov
xor
dec
fwait
pop
xchg
xor
dec
es
push
cmp
xchg
shrb
xchg
dec
jne
adc
idivl
add
in
adc
xchg
mov
jo
inc
cmpsb
inc
ret
cmp
pop
ret
xchg
aas
inc
xor
xor
inc
push
lock
stos
push
fcomps
insb
shlb
fisttpll
add
movsl
push
and
jb
test
dec
mov
mov
addb
loopne
jno
jb
outsb
test
aas
add
js
add
pusha
push
addr16
gs
icebp
sbb
fildl
jns
and
and
adc
xlat
rcl
dec
sub
fnstsw
lahf
out
pop
add
inc
sbb
out
mov
popa
add
add
jmp
pop
movsl
sub
xor
jns
sbb
inc
mov
dec
pop
imul
pop
and
std
into
into
push
in
push
or
and
fs
arpl
enter
jecxz
mov
js
mov
aas
push
cltd
mov
mov
adc
push
push
and
jle
stc
sbb
xchg
lods
jne
mov
rcl
sub
in
push
mov
fcomps
out
xor
add
addl
js
push
xchg
add
sub
subl
sbb
lods
fiaddl
out
push
incl
cwtl
pop
shrb
fcompl
pop
insl
jo
pushf
mov
adc
sub
push
testb
dec
fwait
mov
inc
adc
jge
mov
cmc
inc
cmp
pushf
pop
int3
cmc
out
dec
mov
loop
pop
aas
fcom
mov
adc
sbb
xchg
cmp
xchg
and
dec
orl
addl
add
mov
mov
out
push
sti
lret
cmp
pushf
bound
add
mov
sbb
ss
lock
icebp
mov
xchg
std
ss
sbb
in
pop
clc
pop
fptan
jo
dec
mov
inc
imul
inc
fldcw
in
lock
lret
and
sbb
out
je
pop
jmp
mov
lods
jnp
push
push
fidivrl
push
cmp
cmc
ss
lods
cld
pop
pop
inc
ljmp
leave
jnp
sti
pusha
decl
out
out
fistps
sarl
aaa
xor
insl
rorl
mov
stos
adc
xor
js
adc
push
aad
nop
fdivrs
mov
leave
and
xorb
cmc
test
xchg
mov
cmc
mov
pop
iret
or
call
in
imul
clc
js
pop
fstpt
mov
aad
pop
xor
inc
out
jecxz
faddp
cltd
lea
scas
xchg
hlt
sbb
jbe
xchg
pop
push
fstpt
and
lcall
pop
mov
test
data16
and
xchg
scas
mov
or
lahf
hlt
xchg
xor
mov
fists
adc
inc
sbbb
and
pop
testb
mov
dec
cli
hlt
adc
mov
in
arpl
push
push
dec
les
xchg
into
aaa
inc
repnz
xchg
popf
lahf
popa
mov
js
dec
movsl
xchg
mov
fmuls
movsb
loopne
xor
fstl
mov
inc
movb
mov
pop
xchg
push
dec
adcl
cld
fs
popf
mov
inc
xor
or
ljmp
loop
sub
sub
incl
jbe
hlt
rcrl
dec
sti
inc
cmp
adc
stos
lret
mov
stc
pop
das
cmp
mov
test
pushf
mov
xor
enter
cmp
movsb
jnp
dec
mov
dec
sub
mov
jnp
adc
out
stos
int3
out
movsl
pushf
push
nop
scas
js
insb
andb
cmp
jp
add
jo
inc
cmp
jno
data16
mov
dec
push
push
mov
xor
rorl
aas
push
mov
loope
sub
cmp
or
sbb
pop
js
push
dec
lock
stos
idiv
pushf
loop
lcall
andb
ret
mov
pop
pop
ljmp
mov
and
cmpsl
int3
push
popf
movsb
and
cmpsb
testl
jmp
clc
mov
gs
gs
cmp
in
sahf
lock
mov
out
repz
xor
adc
xchg
int3
push
and
daa
cwtl
pop
sub
push
jmp
adc
push
daa
hlt
arpl
das
mov
andl
inc
dec
cltd
xorl
rcrb
popl
adc
add
shlb
and
cmp
dec
lcall
mov
stos
cmpsl
das
fmul
cmpsb
inc
push
jmp
std
outsl
aam
filds
iret
xor
ret
push
dec
lds
mov
mov
cmp
mov
pusha
sbb
cmc
xor
rclb
push
sub
daa
dec
fiaddl
jl
or
testb
stos
cmp
push
xchg
rolb
xor
ficompl
out
movsb
cmp
bound
ljmp
movl
mov
pop
dec
insl
mov
or
lods
cltd
mov
cmp
and
aam
xchg
or
inc
call
lods
enter
mov
cmpsl
xchg
pop
dec
xor
jecxz
sub
inc
xchg
xor
pop
negl
sub
ret
xchg
pop
in
jmp
jns
cmpsb
push
in
loop
sti
scas
outsl
ret
adc
xor
cmp
fcoml
ja
pop
push
or
stos
pushf
dec
fxch
fdivp
or
pushl
sbb
popf
fisubs
ret
cmp
cltd
lret
inc
pop
mov
into
push
dec
jmp
jb,pt
push
mov
adcl
push
test
mov
loop
mov
lods
push
xchg
mov
dec
xor
bound
mov
xchg
outsb
jne
mov
lret
leave
fcmovbe
arpl
and
setnp
clc
push
cld
mov
inc
ret
xchg
push
into
and
xchg
notb
hlt
mov
inc
cltd
mov
ret
inc
orb
mov
push
sbb
xchg
jns
cmp
push
sbb
stos
mov
mov
pusha
mov
shll
fsubr
jbe
sub
rclb
jle
sbb
clc
cmp
cmp
or
outsb
xor
fistpll
ficoml
mov
cs
call
mov
stos
sub
in
pop
sub
je
fistpll
jmp
in
sub
sti
and
imul
rorl
test
inc
or
jmp
call
pop
sarl
out
cmp
fcoml
xor
inc
gs
sub
xor
or
inc
ljmp
mov
jle
dec
negl
rcl
push
cwtl
ret
lock
and
es
add
dec
fisubrs
adc
jnp
icebp
lock
inc
shl
inc
inc
rclb
pop
push
pop
pop
pushf
add
jl
pop
cwtl
jle
sub
xor
shrl
call
and
shrb
test
fdivl
jecxz
push
or
in
fcmovne
push
add
xchg
inc
cs
cmp
sub
dec
lahf
mov
mov
cmp
mov
add
lods
repz
int
ret
es
pop
pop
jg
dec
dec
mov
sbb
outsb
outsb
mov
pusha
pop
mov
xchg
inc
mov
xor
cmp
xchg
mov
mov
inc
xor
add
cmp
cmpsb
aas
js
pop
add
jo
lcall
shll
add
into
or
pop
pop
mov
mov
xchg
and
pop
fnstcw
fnsave
shll
fistl
sub
lcall
dec
addr16
inc
cli
mov
dec
mov
jmp
rorb
movsl
outsl
dec
pushf
movsb
mov
repz
mov
das
jp
mov
mov
cvtdq2ps
add
clc
mov
ds
scas
or
and
testb
pop
pop
fdivl
scas
mov
aas
jg
js
lock
cmp
inc
push
bound
gs
cmc
and
sbb
addr16
mov
mov
daa
cs
jp
mov
mov
mov
icebp
mov
pop
out
sub
cmp
in
inc
jbe
movsl
add
push
sub
jno
pusha
mov
cmp
jns
repnz
aaa
xor
int
hlt
jbe
push
fwait
adc
imul
xor
rolb
int3
shr
dec
add
pusha
cmp
adc
dec
mov
pushf
xchg
in
xor
into
adc
xchg
aam
inc
or
sbb
mov
test
sbb
mov
mov
push
jecxz
testb
pop
inc
imul
cmp
test
and
xor
or
jne
call
fcompl
sub
in
repz
mov
mov
pop
cli
loope
scas
inc
sub
jnp
jp
insl
aas
cmp
scas
adc
test
int
or
push
arpl
xor
jne
and
cmpsb
xor
pop
loopne
jge
or
add
rcr
loop
or
xlat
lock
xor
aaa
push
fwait
stc
or
xchg
data16
push
and
enter
int
jmp
jno
or
or
push
sbb
mov
push
push
sub
lock
inc
cmpsl
scas
js
mov
add
int
fistl
dec
sti
pop
jge
and
in
outsb
jle
and
xlat
xor
into
loope
xchg
and
inc
cmc
sub
push
std
mov
pop
cmp
cmpsb
mov
mov
cmp
add
pop
sti
jg
inc
in
push
fsubrl
adc
push
xor
int3
cmp
out
xchg
movsl
mov
aaa
outsl
adc
sarl
mov
jno
test
ret
mov
je
and
xchg
lds
adc
rcrb
sarb
xchg
mov
mov
inc
add
dec
push
mov
sub
repnz
push
das
adc
pop
push
shlb
test
pop
pop
and
jle
or
jns
test
push
push
inc
movsb
cltd
daa
negl
push
jmp
or
fldcw
roll
push
pop
pop
cmp
pop
dec
mov
jmp
mov
outsl
scas
rorb
sub
loopne
arpl
pop
cmp
mov
mov
test
pusha
sbb
add
push
push
dec
frstor
push
and
xor
mov
rolb
push
jb
jp
add
cs
pop
push
shlb
mov
cmp
aas
dec
jb
cwtl
stos
jmp
ja
xor
in
mov
and
pop
nop
inc
insb
pop
or
xchg
fstl
pop
push
add
jmp
mov
shr
sbb
ret
shll
xchg
stc
and
dec
mov
les
ret
mov
mov
das
jno
sbbb
jbe
push
fidivrs
lods
loope
inc
pop
push
fwait
movsb
jns
shr
pop
adc
insb
mov
cmp
cmc
push
cmpsl
test
rorb
fsub
mov
xchg
or
pop
loopne
or
sbb
dec
push
push
sub
and
fists
and
mov
hlt
sub
test
and
lea
es
cmpsb
ss
into
and
pushf
xor
cs
jne
dec
mull
and
xchg
jb
adc
bound
add
in
enter
test
mov
jle
mov
testl
mov
xor
xchg
imul
pop
xor
pop
out
mov
sub
mov
lds
sub
dec
add
add
movsl
pushf
cmpsl
fsubrs
cltd
lret
jae
std
pop
ret
arpl
add
jbe
jo
mov
mov
push
pop
cmp
inc
dec
mov
dec
sbb
cmp
mov
cmp
popa
xlat
add
movsb
mov
mov
push
pop
mov
mov
fs
into
bound
arpl
lcall
mov
xlat
setge
push
fcmovnb
mov
test
icebp
pop
insb
test
cmp
inc
movsb
imul
aas
fbld
jno
test
inc
lcall
lods
push
dec
ficompl
ljmp
push
test
loop
out
ljmp
dec
out
inc
mov
adc
pop
stc
dec
repz
cmp
push
xor
sbb
loope
jge
fcompl
sbb
pop
add
and
mov
rolb
insb
xchg
das
xor
mov
dec
mov
sti
sub
rcll
inc
bound
rcll
inc
sbb
shlb
in
cwtl
push
dec
les
lea
cmp
dec
adc
jl
and
fadd
sub
jnp
mov
and
insl
inc
mov
dec
sti
popw
pop
push
insb
xchg
lock
cmp
adc
mov
ret
mov
inc
inc
mov
cmp
push
ret
xor
divb
mov
dec
repnz
and
sub
jo,pn
pop
sub
mov
lahf
xor
es
mov
in
insb
push
mov
clc
sub
adc
scas
outsb
pusha
adc
idivb
idivl
cmpsl
stc
loopne
shlb
popf
stos
inc
std
cmp
mov
movsl
cmp
cs
mov
xchg
fwait
inc
cmpsb
leave
xchg
mov
mov
hlt
mov
gs
xor
cmp
into
andb
outsb
or
shl
dec
iret
ret
jb
mov
pop
jle
add
aad
mov
js
frstor
push
pushf
xor
adc
xor
ja
out
or
jb
aas
push
fcmovu
lret
into
xor
test
xchg
arpl
test
inc
jnp
mov
xor
fwait
out
jle
imul
popf
repnz
xor
jb
jnp
sahf
pop
lods
adc
out
outsl
mov
push
push
pop
nop
insl
xor
sti
mov
mov
adc
test
mov
lods
sub
mov
push
call
icebp
jbe
and
pop
mov
pop
ret
pop
mov
add
jg
idivb
cwtl
mov
cmp
outsl
rclb
mov
popf
ss
repnz
daa
mov
jne
jbe
adc
inc
pop
push
sbb
clc
fs
in
cmp
das
int
mov
inc
jb
push
mov
sub
loop
fnstcw
loopne
pop
mov
mov
pop
cmp
push
xchg
mov
in
push
sbb
incl
mov
sbb
jne
test
in
loop
rcrl
inc
and
xchg
mov
cld
add
das
sahf
jns
inc
pop
pop
or
mov
xchg
add
mov
in
inc
daa
jns
lds
pushf
outsb
pushf
out
int
lcall
xchg
mov
jle
push
sub
imulb
enter
scas
shlb
scas
addr16
mov
out
lock
das
call
in
jle
add
jp
fwait
imul
sbb
or
cs
add
pop
xor
pusha
rcrb
out
push
lret
fldt
inc
jbe
test
loope
mov
movsb
out
sbb
nop
inc
in
jmp
or
jnp
push
orb
or
aad
loop
mov
mov
lock
add
xchg
sub
inc
xor
movsb
jmp
dec
cli
sub
addr16
or
psrld
mull
push
sub
les
outsl
jmp
out
fldcw
add
jno
and
outsl
mov
insl
jo
std
cld
ljmp
push
pop
jno
stos
push
lea
cmpsl
incl
bound
adc
addr16
std
aas
or
shlb
ljmp
push
mov
dec
push
sub
fidivl
movsb
sbb
test
je
pusha
xor
int
adc
cmp
rcll
jne
xor
imul
add
dec
push
stc
arpl
xchg
cmpsl
out
int3
push
mov
adc
and
cwtl
xchg
mov
sub
lods
and
cmp
test
int
fnstenv
lcall
addr16
jo
arpl
imul
sub
cmp
rclb
repz
sti
out
dec
xchg
imul
mov
jo
push
xor
loopne
imul
stos
popa
popa
imul
cmpsl
or
or
pop
dec
sub
lock
add
jmp
push
xchg
in
push
rcrb
push
dec
push
xchg
out
adc
call
push
flds
es
sub
mov
mov
test
pushf
pusha
xchg
push
or
in
lds
movsl
hlt
sti
das
xchg
in
and
or
dec
adc
dec
jl
cmpb
jmp
imul
pop
mov
and
add
mov
lret
cwtl
in
push
testb
aad
jae
push
sub
mov
test
outsb
ret
bound
lret
pop
xor
sarb
sub
jns
or
xchg
inc
and
push
in
scas
adc
pop
xchg
push
xrstors
sarb
addl
enter
pusha
xchg
repnz
sub
mov
add
adc
jnp
ret
lahf
in
outsl
mov
sbb
aaa
add
xor
std
sbbl
test
pop
mov
scas
inc
adc
xor
cld
iret
or
xor
in
pop
enter
arpl
aas
dec
mov
cltd
xchg
popa
in
pop
ret
mov
test
pop
adc
fisubrl
cld
cwtl
mov
loope
scas
insl
lret
sti
mov
dec
imul
cmp
movsl
rcll
mov
shr
or
sbb
pop
push
mov
xchg
icebp
pop
or
sbb
in
push
aaa
out
xchg
les
jne
jp
push
push
test
pushf
lods
pop
mov
add
xor
mov
lods
fmulp
cmp
jge
sbb
fldt
loope
jne
push
inc
adc
add
sbb
clc
sahf
dec
jae
test
imul
adc
add
pop
iret
aas
fsubp
es
test
sahf
imul
xchg
and
pop
pop
push
mov
clc
out
adcl
inc
jb
int3
out
fldcw
pop
dec
lds
fcmove
enter
xlat
hlt
push
jb
jge
inc
mov
pop
pushf
add
push
mov
scas
add
test
jle
shl
jmp
adc
cmp
pop
fcoms
imul
push
adc
mov
ds
dec
addr16
mov
ljmp
ss
sbb
out
sbbb
jg
mov
and
lods
mov
cs
cmp
adc
inc
je
xor
add
imul
ret
cmp
sub
test
imul
scas
cmp
test
xchg
addr16
jo
add
push
adcb
add
pop
sbb
jb
lds
scas
test
data16
mov
repnz
inc
mov
clc
nop
ret
mov
xor
or
xor
mov
dec
and
inc
scas
les
sbbb
mov
jns
xor
call
mov
cltd
jo
push
xchg
lcall
sbb
mov
leave
and
test
xchg
mov
clc
cld
push
inc
pop
es
sub
xor
xchg
inc
mov
mov
lods
test
pop
hlt
je
mov
fldl
sub
add
test
or
add
xor
clc
push
dec
and
cmpsb
ds
aam
int3
mov
mov
mov
cs
ss
pop
mov
pop
and
ja
lods
adc
xor
popa
orl
jo
xor
pop
mov
push
xchg
jbe
sub
xchg
iret
ja
adc
shl
fs
leave
inc
int
jle
ret
xor
ljmp
inc
stos
push
pop
mov
push
sbb
or
cmp
sub
fisubl
lret
add
adc
inc
stos
push
pop
mov
push
sbb
or
cmp
sub
fisubl
lret
sbb
push
lcall
push
pop
mov
push
sbb
or
cmp
sub
fcmovnb
lret
sti
out
push
lcall
xchg
pop
pop
dec
sbb
subb
lcall
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
loop
fdivs
sub
mov
sub
push
or
add
add
add
mov
add
add
add
add
add
inc
add
movl
inc
add
add
add
pushf
add
add
add
add
add
dec
add
add
add
test
or
cmp
add
outsl
add
add
outsb
add
jo
or
adc
add
jbe
add
jg
add
add
add
push
add
add
add
add
outsb
add
add
addb
add
xor
pop
add
add
add
add
movl
or
push
add
inc
add
add
add
add
add
add
add
cmp
add
mov
jo
xchg
adc
add
jnp
pushf
add
add
sub
mov
add
push
add
add
add
add
add
mov
js
or
push
add
add
add
add
add
add
push
add
add
add
jo
or
add
add
add
mov
push
add
add
add
add
add
sbb
add
add
mov
add
add
add
add
add
add
jo
adc
imul
movl
outsb
add
pop
add
add
ljmp
add
leave
add
add
int
pop
add
mov
add
add
add
mov
add
add
add
inc
add
add
add
mov
add
add
jo
jnp
outsb
add
js
inc
add
add
add
add
add
add
add
outsl
add
add
add
add
addb
add
mov
outsb
add
add
add
add
add
add
add
adc
pushf
add
add
xor
xor
addl
add
or
add
out
add
add
js
xchg
add
add
add
add
add
add
mov
roll
add
sbb
movsb
add
add
sub
stc
add
insb
add
add
add
add
add
cltd
add
add
add
jo
add
jle
or
add
mov
add
add
sbb
mov
add
add
mov
add
add
mov
das
add
add
add
add
add
add
cltd
add
add
jae
lods
add
add
add
add
cwtl
add
add
add
add
sub
and
mov
pop
add
add
add
push
add
cmp
sub
cmp
inc
add
fiaddl
outsl
add
add
add
movl
pop
add
popl
filds
mov
add
add
add
add
insb
add
xchg
add
add
add
mov
fwait
add
insb
add
add
xchg
add
add
adc
push
add
jno
ljmp
add
jge
inc
cs
jb
xchg
and
xchg
lock
js
aad
stc
pop
sbb
and
cmp
mov
push
adc
loopne
or
jp
xchg
leave
cmp
add
jg
pushf
jae
sub
push
mov
movsl
adc
mov
or
scas
movsb
or
mov
xchg
sub
adc
pop
faddl
mov
les
cmpsl
fcompl
dec
add
xchg
test
cmp
cmp
sub
lods
cmp
hlt
add
movl
push
jmp
call
lret
cld
gs
stos
push
push
out
cli
jl
in
mov
inc
rcrb
enter
jb
mov
pop
or
mov
or
xor
xor
cli
sub
mov
stos
cs
mov
lret
arpl
mov
xor
mov
sub
mov
pop
imul
mov
cltd
out
and
push
jmp
rcll
and
into
push
loop
mov
add
dec
push
push
cmpsl
or
mov
stos
loope
rcrl
sti
push
mov
fisttpl
stc
lret
dec
in
dec
lea
or
adc
in
leave
xchg
and
dec
dec
dec
loope
xor
pop
mov
xchg
in
add
into
cmp
jbe,pt
add
and
pop
fidivrs
lcall
add
fwait
pop
xlat
fwait
lcall
mov
inc
or
jno
sbb
pop
mov
xchg
adc
fisubl
clc
popf
xor
jl
mov
sub
fisubrs
sti
mov
mov
and
daa
or
sub
inc
int3
sub
addr16
add
or
mov
and
out
lret
std
mov
jo
mov
mov
dec
fwait
xchg
jbe
xchg
inc
pop
dec
mov
push
add
cli
test
bound
jb
dec
inc
pop
aad
jge
push
mov
mov
jno
aad
xchg
fnstenv
mov
inc
pop
jmp
inc
aam
jge
jns
loopne
mov
fldt
dec
outsl
out
lods
sub
jno
mov
push
xor
or
mov
inc
aaa
cmpsl
cltd
cwtl
sarl
aas
test
stos
das
mov
insb
icebp
push
jns
sbb
jns
inc
test
jns
dec
xchg
add
fdivrl
cmp
je
push
orl
imul
mov
push
dec
scas
sbb
xchg
jo
dec
sub
mov
and
es
cmpsl
pusha
push
pop
aaa
and
ja
mov
cmp
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
