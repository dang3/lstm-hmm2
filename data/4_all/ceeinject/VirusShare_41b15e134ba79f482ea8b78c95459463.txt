call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
ret
mov
mov
mov
jne
sub
sbb
or
pop
imul
dec
xchg
mov
jmp
mov
cmp
sub
sbb
or
cmp
pop
jle
push
mov
js
fdivrp
xchg
jmp
fildl
lret
push
cmp
dec
imul
sbb
mov
mov
fwait
out
ljmp
pop
and
mov
xchg
sbb
rorb
sub
and
sti
and
sarl
mov
aam
push
aad
lret
jnp
mov
fidivrs
lea
scas
imul
loope
roll
pop
mov
shrl
fisubs
repz
out
shll
and
out
mov
xor
ds
shr
jnp
xchg
jnp
orl
lret
jle
xor
bound
les
shl
cmp
imul
or
push
mov
lret
inc
cli
and
pop
mov
sub
js
jecxz
push
lret
jnp
cmp
pop
outsb
pop
mov
fwait
rorb
out
fildl
cld
cmp
jnp,pn
imul
and
mov
rorb
std
popf
lahf
lahf
outsl
inc
pop
sub
pop
jg
cmp
push
sbb
cmp
jmp
xchg
mov
scas
ss
push
dec
dec
push
outsb
cmp
or
lods
jecxz
jmp
fsubrp
out
lret
push
cmp
sub
sbb
or
pop
imul
dec
mov
mov
jmp
lret
push
cmp
sub
sbb
or
pop
imul
dec
mov
loope
orb
mov
scas
mov
pop
loope
fisubl
int
pop
push
aaa
icebp
push
mov
lcall
pop
adc
gs
xor
test
aas
outsb
pop
pop
push
jne
movsb
fs
push
pop
mov
or
pusha
icebp
jae
cs
aad
aam
roll
in
mov
daa
daa
arpl
jg
sahf
inc
pop
adc
push
jge
or
push
jmp
inc
push
cmpsl
mov
adc
repnz
mov
call
jae
xchg
rorb
loope
pusha
data16
mov
or
imul
jo
jae
inc
lds
xchg
cmp
inc
loope
lcall
aam
dec
daa
int3
and
call
frstor
pushf
dec
add
fwait
js
jecxz
mov
and
jmp
push
je
pop
ss
bound
sub
or
pop
cmp
xor
das
and
call
sub
mov
jo
imull
xor
mov
hlt
lcall
loopne
sbb
test
sbb
test
cmp
jecxz
jno
xor
insl
loope
mov
aad
test
ja
mov
ret
mov
dec
pop
out
lcall
add
pause
hlt
jns
mov
jmp
push
pop
test
mov
or
jecxz
jmp
push
inc
gs
les
test
test
outsl
into
aaa
pop
inc
mov
sbb
mov
jecxz
jl
lahf
adc
pop
mov
cmp
orb
add
mov
aad
aad
jle
jne
movsl
add
mov
sub
or
aam
mov
call
sub
inc
cmp
into
subb
cmp
xchg
out
mov
mov
mov
dec
inc
outsb
pop
imul
pop
js
int3
insl
mov
xchg
add
inc
icebp
push
cwtl
jmp
mov
pop
jo
popa
test
push
pop
andl
pop
mov
mov
ljmp
pusha
xchg
xlat
and
and
lods
jle
fsubrs
hlt
xorl
aas
xchg
mov
lock
cmpsb
dec
mov
mov
ja
cmpb
xor
pop
enter
and
xor
mov
xchg
insl
push
xchg
movsb
repnz
scas
daa
mov
cli
dec
pop
lret
sub
scas
ret
es
cmpsl
jo
push
push
insl
cmp
xchg
mov
inc
xchg
push
pushf
jg
stc
add
jb
mov
pop
repz
data16
aaa
add
rclb
ja
push
jbe
push
and
add
mov
cs
insb
mull
push
arpl
and
add
or
lret
or
cli
push
and
sbb
mov
add
xchg
pop
js
and
mov
imul
mov
in
add
jmp
xor
sbb
scas
aad
or
in
jae
in
xlat
lds
mov
or
pop
xchg
mov
es
sbb
iret
mov
add
pop
aaa
stos
jns
add
xchg
pusha
lret
lret
fwait
xor
lods
sahf
jg
jecxz
fcmovnu
cli
lea
pop
js
jne
mov
sbb
stc
ret
into
imul
xor
sub
mov
sub
mov
mov
sub
ja
popf
enter
cli
mov
iret
das
test
mov
jnp
jne
rcll
mov
cmp
popf
mov
lret
sub
mov
pushf
mov
pushf
insb
pop
sbb
pop
sub
inc
leave
jmp
mov
mov
jle
mov
in
fbld
lret
inc
pushf
sub
stos
inc
divb
sub
dec
sbbb
adc
cmp
sub
psubw
insb
movsb
jb
adc
imul
stos
lret
and
loop
lods
mov
in
xor
cmp
jbe
cli
and
loop
mov
and
fimuls
int
and
enter
xor
push
stos
xor
sub
test
dec
sbb
mov
xor
inc
in
sbbl
bound
insb
ljmp
and
es
popa
sbb
dec
loope
lock
mov
and
mov
add
arpl
pusha
add
fwait
mov
cmpsb
pop
gs
insl
out
dec
out
scas
sub
sub
mov
aad
sub
aad
mov
das
jne
adc
mov
and
xchg
mov
add
loop
insb
jecxz
pushf
lods
fnsave
push
scas
sub
dec
pop
mov
call
fstps
pop
into
push
cvtdq2ps
ljmp
mov
pop
push
inc
mov
rol
cmpsl
cltd
addr16
out
sbb
inc
pop
inc
sub
xor
or
jb
rcrb
mov
mov
repz
lcall
dec
dec
mov
push
xor
popa
xor
mov
xlat
xor
and
mov
insl
push
jmp
shrb
dec
leave
dec
adc
fwait
sub
test
xor
mov
insl
mov
xchg
jo
outsl
repz
xrelease
push
test
andb
mov
call
xor
loop
outsl
push
add
imul
pop
jnp
sbb
dec
lds
inc
jbe
xchg
loopne
push
mov
jecxz
popa
ds
sti
insl
sahf
jmp
inc
outsl
inc
xor
out
jne
pop
push
rclb
mov
aaa
in
cld
xlat
mov
mov
and
mov
test
push
push
push
mov
dec
cmc
and
lods
push
jae
xchg
data16
enter
dec
push
and
pop
mov
inc
jns
inc
ret
mov
movsb
in
adc
lcall
pop
dec
cld
insb
clc
or
popf
fsubrs
fwait
stc
adc
sbb
loope
mov
scas
scas
mull
mov
dec
pop
sbb
or
or
dec
mov
sbb
daa
mov
push
push
xor
fxch
and
cmpsl
scas
inc
cmp
add
xchg
call
push
xchg
fdivs
loope
shlb
push
data16
cmp
int
enter
lea
cmp
xorl
in
imul
pusha
dec
adc
add
add
dec
xor
xchg
icebp
fists
sarl
aaa
iret
lret
mov
ja
push
or
std
mov
int3
mov
sbb
test
mov
push
xchg
or
xchg
jns,pn
and
xchg
mov
mov
push
mov
adc
xchg
add
add
rclb
sub
ja
in
fsubs
inc
loope
sub
mov
loop
xchg
push
push
fisubrl
sub
ljmp
push
dec
adcl
nop
push
aas
push
mov
and
mov
repz
arpl
or
dec
mov
sahf
jle
and
fisttpll
stc
add
sub
dec
push
jb
pop
lret
shll
mov
cmp
out
test
push
mov
inc
xchg
outsb
pop
or
and
mov
xor
pop
pushf
in
arpl
mov
mov
movsl
sub
push
jno
fiadds
notb
dec
mov
subl
push
push
inc
mov
lea
pop
aad
in
shll
shl
repnz
dec
pop
testb
push
mov
andl
mov
cmpsb
incl
jle
jo
ljmp
insb
shl
mov
dec
stos
sbb
icebp
jnp
adc
and
cld
test
or
jmp
data16
dec
aam
or
xor
push
pop
cld
push
push
adc
rolb
cmp
out
and
inc
lahf
sub
jp
fwait
test
push
jle
pop
adc
enter
inc
aam
in
test
jg
dec
insb
dec
sahf
cmp
cli
movsl
lods
and
and
mov
lret
jnp
push
sbb
inc
inc
mov
mov
imul
call
mov
adc
ds
xor
sub
bound
scas
dec
data16
sbb
lods
arpl
cmpsl
mov
adc
mov
xor
cmp
mov
jl
mov
inc
out
leave
xor
sbb
cmp
inc
imul
sub
jmp
or
mov
out
dec
subl
cmp
es
lea
cmpsb
push
cmovnp
stc
mov
xor
rcr
pop
mov
push
mov
lcall
mov
sbb
pop
mov
inc
imul
test
adcb
mov
xlat
xchg
lds
mov
insb
cmpsb
jno
icebp
or
test
leave
push
push
popf
pusha
popa
add
jg
hlt
lret
sar
cmp
fisttpll
into
xor
jne
or
sbb
mov
mov
and
jmp
mov
xor
add
rcl
mov
loopne
and
xorb
dec
sbb
mov
cli
imul
xchg
xor
daa
ljmp
mov
int3
sub
lahf
pop
scas
out
pop
sbb
es
lret
insb
adc
and
stc
push
inc
mov
xchg
jmp
xchg
cltd
shlb
insl
and
leave
movsl
inc
lods
and
xor
pushf
jge
cmp
bound
mov
and
test
loopne
mov
mov
mov
mov
lret
pushf
rol
mov
pop
test
idivl
push
add
mov
mov
arpl
fs
pop
xor
sub
jge
cmp
rorl
aam
or
xchg
mov
out
cmp
lods
pusha
mov
sbb
ret
sub
inc
push
idiv
inc
enter
mov
sub
jmp
int3
jne
ljmp
xorb
addr16
shlb
sbb
mov
pop
lret
mov
stos
andl
adc
test
and
sbb
aad
push
or
mov
mov
lock
push
inc
out
iret
push
mov
pop
sahf
dec
jnp
inc
rolb
fsubrl
mov
xchg
sahf
xchg
enter
push
xchg
data16
hlt
dec
or
ja
mov
ja
popf
cmp
lods
add
mov
ja
jnp
rorl
adc
or
fxch
mov
je
orl
adc
dec
xchg
ror
daa
cmp
xor
cwtl
or
push
cmc
jp
rcrl
leave
pushf
cmp
data16
pop
into
fisubrl
pusha
fwait
or
push
xor
fsubr
popa
mov
pop
imull
mov
fstpt
sbb
out
xor
das
rcrb
mov
rolb
shrb
shlb
lcall
pop
cmp
in
jl
out
es
lock
xor
sub
rcrl
pop
xchg
add
adc
lods
or
xchg
push
pop
lods
sbb
sbb
mov
push
dec
or
dec
sbb
adc
dec
push
arpl
mov
insb
das
xchg
adc
je
testl
jae
mov
push
dec
push
jecxz
fildll
sarl
sbb
sub
mov
jbe
enter
jmp
jge
inc
sbb
test
pop
lea
data16
jnp
sub
lods
notb
imul
mov
loopne
shl
lahf
pop
lea
iret
mov
scas
jp
iret
insb
xor
cltd
push
xor
addr16
in
xlat
or
call
jmp
lahf
xchg
loop
mov
dec
xchg
repz
cli
and
mov
mov
imul
jnp
or
int
pop
jl
es
rclb
insb
or
out
lret
dec
inc
mov
cmpsl
loope
jle
daa
icebp
insb
sbb
incb
aad
cmp
loopne
adc
das
outsb
mov
dec
xor
in
outsb
sub
add
push
rcrl
push
call
pop
add
inc
roll
andl
or
repnz
loop
sub
jecxz
fsts
and
dec
xchg
inc
ret
push
sub
mov
jb
cs
imul
inc
test
test
mov
lahf
mov
mov
pop
push
dec
in
mov
xor
stos
imul
adc
mov
je
pusha
fs
lahf
dec
hlt
cmp
adc
lret
test
ret
std
ficoml
aam
jl
incl
push
out
ss
cmova
inc
sbb
jge
mov
std
sub
sbb
pusha
imul
xchg
loopne
jae
leave
mov
lock
cmp
push
push
jne
mov
adc
mov
lods
cmpl
pushf
lods
ret
stc
inc
ljmp
and
adc
mov
mov
xchg
dec
stos
ljmp
inc
mov
inc
fwait
and
xchg
jle
aad
cs
push
repnz
stos
mov
in
pop
cltd
fs
mov
in
jnp
bound
addr16
jo
cmpsl
bound
xchg
dec
xchg
lds
and
xchg
sbb
mov
and
ret
inc
int
push
or
int3
xor
dec
cmc
mov
jae
mov
cltd
xor
mov
mov
mov
cld
aam
pop
lahf
rcll
mov
add
cmp
loop
iret
out
mov
add
movsl
mov
xchg
adc
push
xchg
mov
cvtps2pi
pop
sbb
xchg
xor
dec
adc
mov
cmpsl
addr16
push
scas
in
fs
insb
mov
daa
out
xchg
mov
test
leave
cs
cld
inc
dec
add
jbe
fisttps
outsb
lock
xchg
inc
stos
xor
fmuls
mov
pop
add
jno
jb
addl
out
cwtl
xor
pop
cmp
fs
outsl
xchg
dec
cmpsb
enter
and
push
cmpsl
xchg
hlt
cmpsl
xorl
inc
push
inc
lret
and
fdivs
dec
cmp
xchg
mov
incl
stc
rcrb
add
pop
pop
fcomps
pop
mov
testl
hlt
shll
pusha
or
cmp
dec
mov
subb
pop
and
imul
xlat
mov
inc
jle
sbb
cli
jne
or
in
cmp
rcl
or
sbb
bound
bound
mov
mov
jecxz
in
cmpb
dec
movsb
lcall
ja
xor
and
stos
mov
sarb
sbb
pop
out
pop
stos
jle
test
xchg
cli
out
lahf
jl
leave
orl
push
idiv
out
and
mov
pop
adc
cltd
sub
popa
aaa
in
or
dec
mov
imul
shrl
es
inc
ljmp
das
scas
test
jle
stos
adc
dec
aas
fcmovu
scas
or
shll
rcrl
arpl
or
inc
sub
shl
pop
loopne
mov
addl
xchg
out
imul
jg
cmp
movsl
clc
lret
insl
divl
dec
test
icebp
push
sub
jl
std
hlt
imul
out
aam
and
jmp
sti
in
icebp
pop
or
fiadds
pop
pop
or
leave
fimuls
mov
pop
aam
loope
inc
mov
hlt
nop
push
inc
or
mov
scas
out
mov
and
pop
mov
and
cmc
mov
incl
fcompl
mov
outsb
ret
punpckhdq
mov
jae
push
lds
js
aad
xor
fsub
jnp
cli
mov
sti
push
jp
jle
in
cli
push
push
lods
shrb
mov
pop
lcall
mov
pop
sub
xchg
subl
and
out
es
jbe
sub
cmpl
fnstcw
adc
fistpll
dec
adc
leave
push
roll
repnz
xor
or
fstl
inc
mov
mov
cmp
sbb
popa
jae
hlt
les
xchg
mov
imul
dec
sahf
fistl
or
mov
push
outsl
pop
add
jmp
inc
test
outsb
cmp
jmp
es
test
sub
mov
and
test
xor
ljmp
mov
xchg
pop
pop
pop
lahf
mov
mov
and
ds
mov
les
pop
outsb
mov
or
icebp
fdiv
mov
lds
mov
imul
fldenv
rcrb
push
dec
or
xor
or
je
adc
inc
xchg
es
incb
cwtl
xor
test
dec
cmp
cmp
adcl
jge
and
sbb
icebp
test
adc
mov
mov
lret
hlt
cmpsb
jae
mov
inc
pop
inc
mov
push
out
jno
lret
push
sbb
jb
push
fldt
mov
jnp,pn
stc
test
jo
xor
cmpsb
pop
shll
test
or
in
jb
les
mov
shlb
jl
aaa
int3
cmp
mov
jmp
popf
ret
or
das
ficoml
jb
pushf
mov
in
lcall
mov
xor
ja
add
adc
mov
outsl
lods
and
add
test
leave
lahf
fists
cltd
mov
cmp
jle
inc
add
and
lds
adc
icebp
imul
jge
shlb
neg
pop
cli
ja
test
into
pop
push
cmpsl
pop
xchg
sub
mov
mov
xchg
sub
sbb
repnz
enter
xor
dec
xlat
pusha
out
cmc
pusha
fisubrs
fists
jne
shll
xor
mov
pop
iret
ss
insl
mov
pop
andl
dec
pop
xchg
imul
gs
mov
lahf
mov
aas
or
push
in
in
loope
dec
jge
ja
imul
dec
popa
jb
mov
push
pop
xorl
push
sti
cmpsl
xchg
rorl
mov
cmp
cmpsl
xchg
in
jle
lret
negb
lahf
mov
mov
aad
xchg
xchg
pop
adc
shll
adc
lods
aas
movsl
mov
inc
xchg
test
js
pop
jns
pop
sbb
outsl
stc
inc
xorl
scas
mov
loopne
sub
aam
scas
cmp
and
aad
dec
xor
in
or
push
pop
mov
outsl
arpl
mov
lock
loop
sub
pop
add
jo
and
lret
xchg
imul
aas
xor
or
mov
xor
in
xor
test
sbb
push
gs
mov
mov
ljmp
xor
xor
cmp
and
inc
mov
int
xchg
push
push
cmp
test
divl
add
lcall
or
loop
rcll
xor
mov
out
shlb
sub
mov
std
aaa
sub
xchg
jns
data16
fwait
or
cmpsb
inc
es
xlat
shl
xchg
fisttpll
mov
sarl
mov
jb
scas
das
or
mov
testb
mov
adcl
out
aas
push
inc
loop
adc
sbb
lods
aaa
or
cli
fwait
and
nop
lret
dec
dec
inc
mov
pop
or
leave
pop
cltd
decl
pop
ret
xor
pop
sbb
enter
roll
xchg
mov
xchg
daa
adc
mov
fisttpl
push
xor
dec
mov
sbb
loopne
mov
inc
sub
leave
pop
and
adc
or
arpl
pushf
lret
aaa
lds
mov
inc
add
pop
mov
popa
mov
fdivl
addr16
sub
ficomps
lret
add
mov
fisubl
mov
popf
inc
mov
pop
push
cwtl
insl
adc
push
jne
adc
sub
pusha
push
jne
pop
jmp
sub
cltd
mov
adc
mov
hlt
mov
repz
fdivrs
nop
push
jns
jecxz
out
fdivrl
fbstp
sub
cwtl
adc
jae
adc
mov
icebp
sub
cmp
adc
mov
jmp
pop
push
mov
test
ja
inc
push
gs
inc
push
mov
ja
adc
pushf
mov
ffreep
hlt
dec
dec
dec
insl
xchg
mov
mov
mov
ljmp
add
xchg
ljmp
fidivrs
dec
xor
cmpb
stos
fsubl
ret
addr16
and
out
pop
sar
adc
push
and
sub
jb
mov
shll
gs
xchg
jo
in
inc
inc
cmp
mov
test
in
mov
ss
loop
lods
fcoms
mov
mov
add
cmp
lcall
push
push
sbb
lock
pop
pop
sbb
fwait
xor
notb
adcb
push
add
jl
andb
imul
xor
or
lret
ror
xor
fs
dec
ljmp
cmpsb
sbb
je
out
push
repnz
pop
andl
fwait
mov
jmp
lret
push
cmp
sub
sbb
or
pop
imul
dec
mov
mov
jmp
lret
push
cmp
sub
sbb
or
pop
imul
dec
mov
mov
jmp
lret
or
push
sub
sbb
or
inc
imul
dec
xchg
mov
xchg
mov
sti
into
jmp
fstpt
push
cmp
addl
xorl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
mov
lcall
inc
stos
decb
dec
sbb
outsl
cmp
cvtps2pd
mov
lcall
ficoml
ljmp
jg
outsl
cmp
pusha
pop
pop
push
jp
mov
fildll
mov
mov
or
adc
and
jbe
pop
adc
ret
iret
lcall
mov
add
dec
shl
lods
imul
out
cmp
inc
es
pop
mov
inc
loopne
pop
arpl
out
or
cld
push
xstore-rng
cmpsl
pop
mov
fsubrl
test
cmc
xor
xchg
fmul
cmpsl
xchg
or
or
jo
aad
push
repnz
das
iret
setnp
fdivr
cmp
push
xchg
inc
or
sbb
mov
xor
push
js
jne
out
aaa
sarb
jmp
sti
mov
cmp
pop
push
mov
outsl
shlb
in
pop
lds
enter
out
jno
pop
dec
jo
rclb
pop
loopne
das
adc
stos
imul
ljmp
cltd
sub
aaa
dec
and
push
jp
int3
popf
repz
lods
cmpsb
sti
xchg
lock
mov
sbb
push
push
das
pusha
xor
outsb
cs
mov
mov
mov
ljmp
or
jg
das
pop
push
push
sbb
push
jecxz
cwtl
ret
mov
ficompl
or
pop
sub
jg
cvtps2pd
push
jp
mov
lcall
ficompl
or
pop
sub
jg
cvtps2pd
push
jp
mov
aas
or
dec
sahf
rcll
push
jbe
push
icebp
in
arpl
push
bts
pop
sub
push
pushl
xchg
push
mov
dec
aad
stos
jo
in
xchg
outsl
mov
mov
inc
test
out
icebp
dec
pop
dec
sbb
dec
movl
xor
inc
or
ss
js
push
jge
bound
int
fsubrl
sbb
push
xchg
movsb
cltd
xchg
push
xchg
out
jmp
lahf
es
mov
movsb
jno
xchg
out
out
push
xor
in
iret
movsl
dec
sbb
fimull
aam
push
addb
lea
int
sbb
cmp
push
jp
mov
iret
shll
scas
dec
push
fs
sbb
jmp
pop
inc
lahf
rcr
push
adc
adc
mov
ds
mov
add
fists
jae
pop
stos
or
sub
dec
jl
sahf
push
cli
xorb
jne
push
stos
mov
add
mov
dec
add
sbb
in
mov
lock
aas
xor
mov
sbb
add
xor
push
les
add
iret
xor
jno
test
pop
rolb
sbb
inc
jb
imul
negl
push
rcll
ret
lcall
or
lds
out
pop
popa
int3
mov
mov
lcall
loope
xor
sbb
ficoml
add
push
add
sbb
bound
outsb
mov
cld
xor
mov
add
test
adc
out
cwtl
inc
dec
jae
jb
fs
fs
xlat
lods
outsl
or
add
jno
or
jl
cmpsl
push
mov
push
outsl
mov
adc
xchg
fwait
sub
aaa
incb
xchg
add
push
andl
lcall
adc
dec
add
lcall
fdivrs
dec
push
sbb
cmp
subps
mov
jmp
pop
xor
xchg
shl
xchg
dec
xchg
mov
cld
adc
shrb
push
mov
call
in
insb
stc
push
cmp
dec
sub
movsb
cmpsb
mov
adc
dec
sbb
arpl
sbb
push
add
cltd
inc
pop
dec
cwtl
jnp
jnp
loopne
push
cld
ja
push
stc
mov
mov
aas
xchg
sbb
rcll
bound
imul
xlat
xchg
or
ja
push
mov
test
aad
stc
jne
lock
xor
es
inc
arpl
loopne
mov
inc
int3
sub
sbb
out
sbb
xchg
jo
lahf
add
in
fisubs
add
popa
fstpt
pop
movsb
stos
out
repnz
cmp
pop
daa
xchg
mov
cltd
xor
es
prefetch
pop
mov
dec
jmp
dec
mov
cmp
jl
xor
icebp
pop
stos
leave
sti
push
psadbw
jmp
xor
test
insb
inc
xchg
orl
outsb
pop
xchg
jg
repz
fisttpl
iret
sbb
jl
xchg
adc
lcall
stos
pusha
fcoml
sbb
push
pusha
cmpsl
cs
pop
ja
push
iret
xor
push
jnp
jmp
ret
fsts
std
divb
cmp
mov
sarl
icebp
mov
jno
cmpl
movsb
testl
ss
fsubrp
test
lret
xchg
xchg
and
cs
xchg
xor
mov
pop
les
cwtl
sbb
mov
stos
aad
ds
jg
inc
in
inc
loopne
push
and
adc
outsb
mov
xor
and
jmp
in
mov
lea
out
ja
xor
loopne
in
ffreep
sub
sbb
int3
mov
cmp
add
in
sbb
andl
sbb
es
or
adc
and
icebp
xor
cli
mov
pop
pop
and
imul
hlt
pop
in
mov
insl
je
lahf
sbb
inc
adc
lds
xor
adc
ja
rol
adc
and
clc
fs
loope
hlt
ja
mov
bound
pop
push
outsb
add
mov
jns
inc
adc
pop
aaa
xor
sbb
rcrb
cmpsl
mov
les
xor
out
scas
sahf
repz
mov
fcmovnb
inc
movsb
insb
lods
pop
mov
lods
sub
push
daa
loopne
repz
sbb
jecxz
push
pop
into
out
sub
mov
scas
in
adc
negl
gs
es
lret
out
in
pop
mov
sahf
fisubs
mov
enter
cmpsl
std
inc
out
mov
sbb
and
push
jno
lods
pop
sub
loope
sub
loopne
jne
insb
xor
xor
lods
dec
cmc
test
ljmp
or
adc
and
jne
xor
xchg
cwtl
leave
or
pop
or
scas
into
push
in
sub
or
cmp
in
add
xor
add
cmp
ljmp
mov
icebp
pusha
mov
cmp
movsb
ret
int
lods
jmp
cmp
sbb
mov
imul
inc
lods
nop
sbb
mov
push
pop
jb
jb
dec
pop
sbb
dec
xor
pop
pushf
lds
imul
mov
outsl
loope
xchg
out
rorl
xor
std
mov
int
cld
in
or
or
xchg
mov
lods
aam
adc
cmp
test
mov
cmp
les
sti
push
push
out
xor
sub
inc
ror
mov
lods
add
adc
out
rcl
mov
lret
pop
lds
mov
imul
scas
aam
cmp
test
lahf
mov
lock
rclb
loop
jge
sbb
pop
in
push
adc
dec
xor
mov
inc
cwtl
pop
inc
inc
aam
push
xchg
cmp
xor
adc
data16
push
movsb
add
roll
and
fnstcw
fcomps
mov
mov
dec
sub
rcl
xlat
imul
mov
mov
sbbb
inc
xor
fcmovne
dec
or
movsb
fidivrs
adc
mov
lcall
imul
data16
sub
jge
mov
dec
xchg
sub
or
pop
jmp
and
sarb
mov
add
xor
sub
push
inc
cli
ss
xchg
mov
sbb
or
leave
cmp
in
cmp
push
out
orb
adc
enter
js
xor
sub
imul
inc
or
js
xchg
mov
dec
ficomps
movhlps
dec
lods
sub
or
push
stos
sub
movsl
fwait
cmp
mov
dec
popa
rcll
cmpsl
cmp
add
in
mov
sbb
jno
jmp
stos
pop
ja
and
dec
popf
pop
imul
int3
and
jb
dec
inc
sbb
jae
or
xchg
dec
dec
jecxz
mov
ret
rcll
xchg
pop
cmc
push
and
cmc
outsb
test
imul
push
push
int
push
mov
jne
inc
repnz
sbb
sahf
fidivrl
idiv
ljmp
cs
les
smsw
out
and
fstps
xlat
rclb
jl
jl
mov
dec
nop
inc
xchg
lahf
stos
dec
addr16
bound
xchg
adc
adc
movsb
lret
clc
cmp
repz
or
sbb
movsbl
lret
xchg
pop
test
sub
and
inc
mov
scas
ret
xchg
dec
ret
hlt
out
cmp
ljmp
mov
pop
sbb
push
shlb
push
mov
sub
mov
addr16
stos
dec
xchg
jp
cwtl
mov
adc
loop
inc
push
xchg
out
scas
sbb
stos
jnp
push
scas
mov
enter
xor
mov
or
mov
loope
inc
shlb
int3
xor
sti
mov
sub
sarb
cwtl
fsubr
xchg
xchg
cmpb
stos
sub
repz
pop
imul
mov
pop
pop
repz
arpl
dec
xor
pop
fstp
insl
pop
add
xchg
ds
jns
rcrl
aaa
rcll
sbb
xchg
lret
dec
pop
adc
in
pop
fldt
mov
jbe
mov
stos
outsl
and
jns
push
inc
push
lods
addb
jecxz
xor
mov
sahf
pop
sub
rcrl
negl
fists
xchg
hlt
push
pushf
aas
gs
lea
imul
pop
lret
dec
aam
lock
xor
js
mov
pusha
jnp
outsl
aam
dec
scas
mov
loop
fcoms
mov
insl
pop
gs
je
dec
adc
cwtl
jl
jo
pop
shl
sub
sbb
popa
ret
sbb
mov
pop
das
cld
enter
dec
lea
aad
jns
cmpsl
lcall
or
in
mov
iret
mov
mov
rorl
pop
xorb
jnp
xchg
imul
mov
ret
insb
insb
cmp
xchg
mov
sbb
push
dec
lahf
jns
jb
insb
push
mov
insl
cwtl
cmpsb
repz
push
jns
insb
cmpsb
pop
adc
test
adc
setp
mov
fbld
daa
or
rcrl
push
sub
mov
sbb
cld
add
rcrb
jle
mov
add
xchg
xchg
push
adc
push
pop
fstpl
lds
sbb
divb
push
rclb
cmp
lahf
rcrb
scas
xchg
inc
mov
lret
js
lods
ja
mov
xchg
aas
sahf
dec
or
scas
mov
andl
iret
addr16
jo
in
loop
cmp
jnp
add
or
cmp
je
cmp
ds
cmpsb
add
clc
inc
popl
mov
fs
sub
test
out
push
ja
sbb
sub
loopne
or
notb
mov
xor
and
sarl
add
mov
push
push
pop
cs
clc
iret
jae
dec
cmp
dec
sbb
lcall
das
data16
or
sub
and
test
cmpsb
or
hlt
orb
jae
pop
mov
inc
test
sbb
sub
cmp
cmp
xchg
in
pause
jecxz
dec
pop
pop
int3
std
out
out
repz
out
cld
lcall
in
loop
push
into
jo
das
scas
mov
sar
lock
pusha
lds
out
adc
dec
pop
fisttpll
dec
add
mov
sub
cs
in
insb
add
cmpsl
mov
mov
mov
stos
lret
inc
cmc
cmc
bound
xor
ljmp
mov
shrb
fs
pop
insb
or
std
jns
testb
pop
push
sub
loopne
inc
mov
mov
ss
leave
mov
frstor
mov
xor
inc
leave
xchg
add
push
push
sahf
cmpsb
rolb
iret
or
and
clc
mov
sbb
sbb
mov
stos
decl
jle
sub
xchg
dec
enter
fcmovnbe
push
add
fbld
jbe
sbb
dec
lea
enter
test
xchg
sub
negl
or
jg
lret
or
clc
pop
xchg
es
xor
stos
jns
into
gs
aas
adc
outsl
call
in
sub
jno
mov
cwtl
jno
jnp
jp
push
and
bound
aad
daa
push
mov
jae
xor
jo
dec
mov
scas
aad
mov
mov
mov
das
mov
insl
aam
stos
cmp
sbb
sub
sbbb
loopne
sbb
fmull
add
add
sbb
in
or
roll
into
xchg
push
mov
ret
xor
enter
cmp
push
ds
daa
inc
dec
cmc
inc
and
fistpll
inc
cmp
mov
fcomip
xchg
jae
push
mov
aaa
ret
push
sbb
jnp
out
les
mov
mov
jge
or
mov
icebp
scas
mov
pop
inc
movsl
stos
aaa
call
sbb
fxch
jo,pn
clc
xchg
or
lods
mov
leave
push
mov
stos
std
arpl
push
jmp
out
mov
lea
inc
pusha
or
push
movsl
enter
mov
or
push
and
outsb
fisubs
or
int
push
cmpsl
stc
cmp
js
pushf
or
loopne
scas
repnz
push
subb
xchg
test
pop
out
movsb
and
iret
xchg
ds
sub
stc
sub
or
pop
xchg
sub
in
mov
push
or
or
scas
enter
or
mov
sub
lea
jb
ja
repz
out
adc
repnz
or
insb
dec
mov
push
les
aas
jp
push
cmp
rorl
xchg
pop
xchg
setle
add
lods
cltd
jg
mov
mov
jg
cmp
xchg
adc
add
inc
sbb
ret
stos
sub
push
cmp
jns
stos
sahf
mov
popa
adc
adc
mov
mov
repz
jne
movsb
cmp
popf
cmp
push
mov
push
dec
rcrl
sbb
or
sti
cmc
cmp
xchg
scas
sub
cmp
lds
xchg
jo
inc
mov
shll
cmpsb
sub
cmp
and
add
lock
jl
mov
pushf
dec
pop
enter
fadd
in
push
and
jle
movsl
sbb
or
mov
ds
pop
jmp
xchg
stos
mov
shll
mov
jnp
push
movsb
xchg
repnz
outsl
xchg
pop
add
dec
push
or
jmp
xchg
imul
adc
gs
pop
and
outsl
sahf
mov
mov
shll
and
ret
fisttps
jno
cltd
or
dec
push
mov
ds
fldcw
mov
sbb
mov
rclb
outsb
lea
mov
cmpsb
mov
scas
pop
addb
jo
test
push
xchg
out
test
fs
mov
into
adc
cmp
and
pop
add
dec
dec
gs
ljmp
mov
movsl
jecxz
push
mov
mov
jmp
dec
adc
dec
enter
fiadds
or
push
inc
cmp
cld
fnstsw
and
or
cmc
adc
or
repz
push
push
jmp
in
sub
sbb
gs
dec
xchg
hlt
cltd
mov
pop
xor
and
enter
or
fmull
jns
xor
jle
fcmovbe
xchg
or
mov
xor
scas
adc
jnp
lret
push
popa
jo
nop
sbbb
push
jge
ret
in
pop
adcb
ds
jns
xor
xor
sub
sbb
xchg
dec
negl
mov
dec
rorl
inc
je
and
xlat
test
mov
inc
rorl
test
ljmp
hlt
jns
sbb
pop
jno
gs
xchg
adc
xor
sub
or
cmp
mov
outsb
xchg
data16
sbb
fs
jmp
xchg
cmpsb
or
pop
or
cmpsb
lahf
mov
dec
push
mov
mov
jg
mov
popf
adc
mov
cmp
inc
lock
repz
lock
into
out
cmp
or
xchg
xlat
mov
lods
or
cmp
lahf
stos
mov
or
mov
fsts
subl
idivl
imulb
rcll
and
sarl
dec
jmp
cmp
js
xchg
jp
mulb
popf
sbb
movsl
sbb
xchg
subl
icebp
in
inc
dec
arpl
xchg
lret
push
aas
mov
mov
data16
pop
ja
cld
add
cli
addr16
pop
push
mov
pop
adcl
jnp
mov
clc
pop
inc
inc
xchg
xlat
xchg
enter
xchg
or
lret
cli
addr16
pop
xor
dec
cmp
jne
test
pop
push
sahf
adc
sub
inc
mov
pop
fisubs
dec
xor
paddb
fs
sbb
jmp
push
test
gs
cmpsb
pop
lret
dec
out
incl
pop
add
out
lret
sub
mov
mov
push
push
lock
or
cmp
jns
incl
fcompl
pop
lea
int3
adc
jae
xchg
fst
shrl
loop
ret
out
xor
in
sbbb
pop
mov
jns
push
mov
lcall
xor
and
pop
jb
ficomps
iret
or
scas
add
xchg
push
xor
xor
adc
das
adc
sbb
or
dec
fwait
dec
mov
mulb
fidivrl
or
mov
push
mov
xchg
jecxz
xchg
repz
mov
pop
imul
sahf
jge
enter
out
data16
and
inc
out
add
sti
inc
mov
inc
sbb
call
dec
js
in
jne
or
pop
sbb
xor
ljmp
inc
mov
out
pop
fwait
sbbl
pop
pop
imul
subl
icebp
loop
ds
push
or
xor
or
fisttpl
pusha
movsl
jae
cltd
lods
sahf
sub
test
inc
pop
ja
sub
pop
ljmp
mov
pop
mov
cmp
xchg
push
or
jns
out
pop
adc
sub
rorl
jo
add
xor
test
jg
sub
dec
lret
lret
jmp
mov
inc
xchg
xchg
sti
mov
sbbb
sub
xchg
and
or
mov
loop
lahf
lret
sbb
and
jg
lcall
xorl
inc
enter
push
mov
rcrl
sub
mov
sbb
push
jne
cmp
pop
leave
in
push
inc
fnstenv
jns
inc
addb
mov
xchg
iret
mov
jl
mov
mov
inc
jno
aad
cmp
sbb
addl
adc
lea
mov
and
or
out
cmc
movsl
cmp
mulb
push
mov
dec
xor
adc
mov
loopne
lret
and
pop
xlat
mov
in
lret
std
insb
adc
mov
loop
fiadds
sub
adc
xchg
cmp
adc
cmp
mov
xchg
dec
in
cwtl
in
sbb
sbb
ficompl
sahf
popf
inc
cwtl
sti
and
int3
xor
pop
movsl
sbb
gs
jbe
sub
divps
push
cmpsl
add
std
xor
or
sbb
pop
or
push
aam
cmp
dec
pushl
inc
inc
mov
loope
fisttpl
push
ljmp
cmpsl
or
jne
les
push
lret
mov
rorl
setbe
sbb
fs
pop
dec
into
lahf
xchg
movsb
pop
sub
mov
lods
in
call
popa
repnz
pop
mov
ljmp
cld
lods
mov
pop
pop
fneni(8087
dec
sti
xchg
cs
cltd
insb
sarl
sbb
add
xor
out
les
pop
into
xchg
inc
xor
fwait
les
mov
dec
cld
iret
outsb
hlt
les
andb
aad
jnp
cmp
and
int3
mov
pop
and
sub
xchg
mov
add
mov
into
sbb
and
push
cmc
cmp
shrl
out
fnstenv
sbb
pop
repnz
rcl
outsl
pop
mov
push
aam
lea
xor
and
movsl
out
dec
in
sti
adcl
mov
test
and
cmpsb
cmp
aas
out
cmp
out
xchg
stos
mov
adc
mov
jle
xchg
lcall
xchg
xchg
push
outsl
xor
xchg
aas
lret
or
inc
clc
jb
movsb
in
addr16
push
decb
movsl
ljmp
push
int
jnp
cmp
jmp
mov
xchg
ss
cli
or
cmp
adc
or
dec
ja
lock
dec
add
and
fsubrl
pop
add
aaa
dec
add
push
fildl
sub
je
stos
mov
sub
mov
or
lods
es
jns
pop
lret
and
inc
popa
jb
sti
lods
stos
into
shlb
inc
jg
in
fs
jo
out
push
pop
int
mov
es
xlat
dec
mov
mov
adc
mov
mov
xchg
and
addl
gs
testb
das
lret
clc
push
test
sub
pop
jo
sub
imul
mov
lahf
ljmp
pop
sub
jg
cvtps2pd
push
jp
mov
lcall
ficompl
or
pop
sub
jg
cvtps2pd
push
jp
mov
lcall
fidivl
ljmp
pop
sub
jg
cvtps2pd
push
jp
mov
lcall
ficompl
or
cmp
cmp
rolb
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lcall
bound
movsl
insb
mov
and
rorb
into
cmp
sub
pop
xchg
dec
subb
mov
mov
adc
add
xor
and
rorb
ret
and
pop
icebp
jp
jp
push
orl
mov
or
sbb
sub
cmp
xor
clc
xchg
pop
shll
mov
mov
std
lret
lods
sub
dec
mov
jb
push
jns
mov
sbb
jne
ret
sahf
lock
lret
mov
and
loop
loop
pop
pop
xlat
jp
xchg
out
lods
jbe
dec
sub
dec
add
sub
dec
push
cmc
add
dec
cmpsl
addr16
xorb
fwait
add
push
and
push
fstl
adc
sbb
icebp
cmp
lret
mov
and
bound
and
pop
int3
ret
mov
mov
pop
jb
push
std
jb
test
or
loop
in
xchg
inc
out
repnz
rcrl
jp
push
push
push
xchg
push
mov
adc
add
sub
cmp
lret
and
xor
inc
mov
pusha
mov
divb
out
inc
fbstp
arpl
pop
ljmp
cmpsl
dec
lea
das
rorl
mov
iret
cmc
sub
inc
aad
fisubl
popa
lret
push
mov
mov
pop
loopne
in
or
push
call
out
adc
pop
xchg
jle
add
xor
and
rorb
ret
sub
pop
xchg
dec
cmpb
mov
mov
adc
add
xor
and
rorb
ret
sub
pop
xchg
dec
cmpb
mov
add
das
test
clc
mov
lret
dec
test
mov
lahf
add
cmp
add
mov
mov
popf
testb
mov
jge
fidivl
add
adc
and
aad
dec
int3
sub
jge
xchg
push
jbe
xchg
pop
and
sub
push
out
jo
in
testb
daa
push
out
jg
dec
add
aad
mov
or
jo
scas
mov
inc
mov
fnstsw
jp
adc
dec
jecxz
push
das
mov
jbe
sbb
mov
movsl
iret
jbe
sub
jne
arpl
and
pushf
xor
pop
jmp
lods
jl
testl
push
mov
pop
push
ds
fwait
je
cmp
aaa
xor
pop
test
fisubs
xor
mov
add
out
nop
je
inc
addb
loope
sbb
test
sbb
xchg
jo
in
fcoml
jne
pop
inc
pushf
cs
mov
add
sbb
daa
ret
mov
outsb
lods
pusha
cli
mov
mov
sbb
or
lcall
std
and
das
hlt
mov
out
test
sub
mov
push
lcall
cmp
mov
jne
or
scas
ljmp
cmp
dec
mov
pop
leave
xchg
sbb
adc
dec
add
jns
loop
mov
loopne
push
push
mov
imul
pop
scas
inc
sbb
xchg
and
aaa
mov
test
inc
mov
fimull
ret
cmp
in
scas
pop
das
xor
jne
call
popl
mov
jbe
sti
mov
add
xchg
dec
jge
push
push
shr
pushf
dec
push
les
sbb
fmuls
inc
lret
shlb
sub
fildll
xorl
adc
into
pusha
inc
push
outsl
mov
xchg
sub
aam
cmp
frstor
xchg
pop
cmp
jle
and
adcl
xchg
cmp
pop
push
fisubs
sti
add
adc
outsw
or
xchg
sbb
fdivrs
xchg
push
into
jb
cmp
ljmp
mov
jge
je
jb
orl
add
push
aad
push
shrl
adc
hlt
mov
aam
es
and
dec
shl
fnstenv
orl
mov
pop
cmp
xchg
roll
cmp
bound
fsub
xchg
and
mov
stos
cltd
das
cmp
mov
dec
je
jmp
mov
int
mov
sub
enter
jge
scas
pushf
jnp
adc
mov
jae
sahf
aam
movsl
push
adc
fdivp
test
les
or
cs
sub
or
call
mov
das
jge
popf
mov
shrl
push
mov
jo
mov
js
pop
xor
bound
sub
fwait
lock
adc
push
sub
or
rcll
add
push
jp
aas
mov
pop
xsaveopt
call
repz
daa
inc
inc
outsl
jbe
and
sbb
cmp
mov
cli
mov
mov
sub
inc
iret
test
iret
sub
or
repnz
xchg
push
lock
imul
fldln2
dec
hlt
scas
mov
jl
xchg
sti
add
cmp
ret
jmp
add
enter
das
loope
push
or
sub
sahf
jnp
add
mov
or
and
mov
rorb
mov
add
popl
sub
int3
mov
shll
inc
in
and
inc
inc
insl
ja
mov
sarl
jle
cmp
pop
xor
lahf
repz
rolb
out
add
js
lahf
sbb
jmp
cwtl
xchg
sub
in
dec
stc
or
fcmovne
sbb
pop
icebp
daa
xor
push
and
sub
mov
inc
jbe
sub
push
dec
cmp
jo
scas
xchg
popf
loopne
cmc
ds
sub
stos
stos
stc
push
mov
adc
mov
sarl
nop
imull
add
rclb
bnd
mov
add
or
pop
inc
add
mov
outsl
insl
popf
push
jmp
imul
cmovnp
int3
mov
sub
ret
sbb
jnp
push
shlw
out
mov
cmp
out
fnstcw
fst
jns
in
xor
das
movsl
mov
cmc
mov
imul
imul
out
jp
inc
test
lods
jb
xchg
je,pn
int
es
and
into
in
xor
mov
xchg
loopne
popa
xor
push
mov
fdivs
les
test
ret
arpl
pop
in
gs
dec
mov
icebp
or
mov
sub
loope
ss
or
out
cmp
push
mov
add
mov
and
and
mov
sub
divb
push
inc
pop
dec
xchg
imul
cmpsl
jno
fxch
mov
and
jo
in
dec
andl
popa
cli
mov
mov
pop
add
mov
pushf
xor
out
sbb
dec
fcoms
sub
ret
ss
or
pop
lods
xchg
cmpsb
mov
imul
inc
and
pop
push
pop
scas
les
test
dec
dec
sti
jns
mov
pop
iret
ljmp
sub
push
inc
cmp
pop
fsubp
cmp
jle
mov
int3
dec
lret
jns
mov
jle
mov
call
ljmp
in
xlat
lret
mov
sarb
call
jne
mov
out
jmp
sbb
adc
add
mov
mov
xchg
xchg
sub
ficomps
push
xchg
xchg
adc
fcmovbe
adc
inc
and
xchg
int
out
adc
jl
mov
push
gs
insb
pop
dec
cmp
in
imul
loopne
int3
add
mov
xchg
fbstp
or
xorb
orl
adc
jns
adc
xchg
fsubl
cmp
xor
cmp
into
xor
mov
orb
bound
sub
mov
mov
lcall
sbb
mov
int
aas
xchg
ljmp
in
subl
stc
sbb
push
je
inc
aas
sub
outsb
inc
popf
and
pop
out
jno
cmc
jle
clc
subb
push
inc
repz
int
repz
mov
daa
mov
cmp
xorl
ret
push
jle
ficompl
xlat
in
addr16
mov
sub
add
sbb
mov
gs
mov
sbb
or
inc
jo
push
jnp
aam
cs
push
ljmp
clc
xor
ds
cmpsl
mov
sbb
es
sbb
mov
fldl
xor
xchg
push
dec
push
out
and
sub
mov
mov
cltd
xor
jecxz
std
add
cmpsl
das
mov
mov
push
lock
mov
mov
xor
int3
loop
mov
dec
ret
shll
jmp
add
out
adc
and
stos
or
arpl
mov
outsl
and
or
sbb
push
rcrb
fmul
fwait
xchg
adc
jle
pushf
add
mov
inc
adc
adc
cmp
dec
dec
pop
adc
xchg
scas
outsb
cmpb
mov
call
mov
xchg
mov
es
lea
int3
pop
arpl
int3
push
aad
mov
out
sub
loopne
scas
into
pushf
andl
vshufpd
and
ja
mov
mov
test
call
pusha
popa
aas
dec
xor
dec
std
push
add
sbb
sbb
lds
xor
or
out
fimuls
repz
dec
or
or
xchg
pop
sub
sbb
movsb
pop
mov
cmpsl
fwait
lods
xlat
movsb
sbb
pushl
int
push
fsin
or
idivl
fldcw
adc
lahf
daa
out
adc
cmp
fidivrs
xchg
mov
mov
scas
mov
mov
adc
push
loopne
xor
push
loopne
jmp
out
pop
sbb
loop
scas
and
pop
icebp
sub
out
clc
jb,pt
mov
imul
loop
rorb
daa
xchg
mov
adc
sbb
or
push
mov
dec
cmpl
int3
cmp
push
pop
loop
pushf
stos
jne
pop
push
out
imul
and
add
jmp
insb
push
add
stos
stos
xchg
gs
out
je
inc
cmp
mov
fisubl
inc
sub
xor
movsb
mov
adc
mov
mov
orl
gs
cmp
add
repnz
pop
imul
test
ljmp
mov
les
cld
push
push
add
xchg
xor
sbb
push
ja
or
fs
rcrb
xor
fwait
icebp
iret
dec
pop
mov
mov
or
mov
enter
sub
cwtl
enter
das
or
push
push
aad
xor
aaa
xchg
mov
xor
daa
cmp
cwtl
std
daa
push
or
inc
and
pop
cld
hlt
and
mov
cmp
pop
or
lds
mov
add
push
dec
repz
jg
mov
inc
mov
mov
popa
aam
inc
mov
loop
insw
and
or
movsl
inc
sbb
inc
inc
ret
cmp
test
icebp
bound
aad
cmpsb
pushf
movsb
outsl
dec
jg
jnp
lcall
or
pop
sub
or
je
and
inc
dec
loop
mov
loope
insb
push
jnp
cld
jnp,pt
jne
adc
sbb
push
or
out
pop
popw
mov
mov
lock
test
pop
out
adc
stos
decl
mov
cmp
popa
iret
mov
ljmp
pop
cmp
lret
adc
ss
out
aaa
sbb
loopne
iret
add
sbb
mov
jle
mov
push
in
test
fiaddl
push
sub
pop
fwait
and
ljmp
call
pop
mov
mov
loope
jnp
shlb
push
pop
xchg
sub
sub
test
jmp
jns
lds
popf
inc
sbb
push
addb
test
mov
push
lahf
sbbl
lret
stos
test
ss
sti
repz
mov
roll
sub
and
push
jle
jle
mov
xbegin
push
iret
je
adc
jno
call
ret
cmp
scas
sbb
jmp
pop
out
xchg
into
dec
mov
xchg
cmc
pop
mov
aas
rorb
shlb
dec
movsl
or
sbb
ret
mov
stos
sti
enter
mov
inc
jp
fwait
xor
incl
daa
in
lock
sub
pop
xchg
xor
push
sub
adc
repz
add
cmp
xchg
das
sbb
fsubrs
dec
sub
je
pushf
sti
cmp
mov
cmpb
insb
das
xor
add
jmp
stc
pop
mov
testb
shlb
cmp
jmp
andb
push
lods
mov
sbb
sub
adc
hlt
dec
movsl
adc
sbb
stc
sbb
das
jg
jnp
bound
push
mov
lods
mov
sub
bound
leave
fstps
mov
mov
inc
stos
fs
lea
mov
mov
lret
icebp
stos
cs
loop
sub
scas
xchg
mov
ljmp
push
xchg
ret
push
ficoms
ljmp
addl
das
clc
adc
lret
xchg
mov
add
je
shrl
fdivrl
dec
es
jmp
scas
imul
jb
leave
int
jp
mov
add
xchg
scas
out
fs
rcl
in
xchg
movsl
mov
imul
cld
jne
aam
sbb
out
fnstcw
dec
int3
arpl
jmp
jecxz
sahf
insb
fwait
pusha
xor
out
mov
aad
lods
stc
add
cli
and
adc
push
cmpb
cmc
jne
inc
pop
dec
cmc
cld
incl
inc
inc
incb
xchg
sub
sahf
lock
push
movsl
xor
insl
mov
rdmsr
divl
jl
stc
imul
jbe
cmp
jge
sbb
xchg
push
mov
mov
sub
int
clc
add
das
stos
push
je
mov
push
sub
es
jmp
cli
leave
add
sub
ja
rolb
mov
ss
jae
add
lret
ss
nop
aam
xor
hlt
push
xor
mov
mov
or
std
inc
push
iret
insl
xchg
pop
cltd
sbbl
inc
lds
and
jl
nop
aas
fwait
movsb
xchg
jmp
out
pop
and
ds
pop
adc
or
enter
cmpsb
fsubp
jo
cmp
or
pop
jp
shrl
pop
loop
pop
jb
aas
in
mov
movsl
jge
dec
mov
les
push
lods
xchg
fwait
notl
outsl
pop
lahf
ja
not
or
push
xchg
xor
add
imul
inc
pop
cmp
rolb
jg
jg
movsl
cli
cmc
push
mov
shll
scas
push
sub
out
sub
cltd
sub
jg
sbb
fcoml
cmp
test
lods
sbbl
cmpsl
movsl
push
rorb
jae
and
or
inc
out
xor
jecxz
xor
idiv
add
cmp
adc
ja
addr16
xchg
sub
jecxz
das
in
lahf
sbb
sbb
sub
jmp
add
and
int
cld
pop
push
jbe
adc
aad
test
jge
mov
mov
sbb
mov
mov
cmpsb
loope
cmpsl
loope
xchg
insl
pusha
pop
lcall
mov
sti
cmpb
dec
cmpsl
xchg
sbb
and
mov
les
mov
cltd
cmpsb
mov
jo
push
sub
jns
cmpsb
dec
popa
push
mov
popa
pop
jnp
sbb
pop
inc
icebp
icebp
sbb
insb
mov
xchg
bound
aas
dec
in
cld
jnp
ljmp
roll
test
cld
xchg
dec
push
stc
pop
and
rcrl
or
pop
pop
xor
int3
rcll
or
pop
arpl
mov
pop
push
inc
pop
adc
stos
xchg
lea
mov
jp
pusha
fwait
into
mov
jp
out
and
test
jl
adc
cli
test
mov
pop
fildll
repnz
pop
and
iret
clc
lahf
dec
popa
sub
stc
les
add
xchg
and
add
arpl
pop
fs
pop
cld
ljmp
mov
cmp
ds
scas
mov
in
pop
addb
xchg
rcll
cmpsb
leave
popa
cmp
xchg
aas
dec
cmp
jnp
mov
mov
ss
adc
pop
mov
test
enter
pop
scas
mov
stos
adc
movsl
out
mov
or
icebp
in
dec
pop
adc
ja
pushf
pop
add
les
add
arpl
xchg
rcrl
bound
push
div
sbb
rcrb
lock
inc
add
arpl
adc
ss
or
xchg
iret
rclb
andb
mov
mov
push
outsl
mov
leave
outsb
inc
popf
and
mov
mov
fwait
lret
sbb
fidivl
mov
in
pop
sbbb
cmp
adc
leave
repz
xchg
shl
inc
leave
pop
xchg
and
sbb
jg
xor
fsubrl
or
mov
push
and
cmp
fstpl
sub
inc
nop
shl
test
cmp
mov
inc
adc
xor
inc
mov
test
fs
inc
mov
jl
push
mov
fsubs
mov
mov
leave
sbb
insl
fstpt
lea
dec
lret
bound
mov
xor
sub
jne
and
dec
out
fidivl
or
add
les
pop
xlat
add
sub
repz
fs
mov
mov
out
add
pcmpgtd
add
jne
xchg
or
inc
loopne
testb
mov
je
lahf
xor
or
xchg
mov
mov
add
or
mov
daa
push
lahf
mov
and
cmp
pop
xchg
clc
xor
ret
mov
arpl
lea
adc
ljmp
jp
inc
fiadds
mov
rorb
arpl
repnz
lods
jb
ficoms
out
xchg
sub
xor
xchg
outsb
lahf
xor
xor
mov
or
les
jge
cmp
loope
pop
dec
mov
push
sub
xchg
sub
cmpsb
loop
ljmp
out
testl
sub
dec
cmp
add
add
ljmp
test
bound
cmc
pushf
jp
gs
idivb
in
cmp
neg
in
repz
in
popf
xchg
sbb
push
mov
cli
xor
inc
clc
scas
loopne
stos
scas
mov
xor
stos
cli
lcall
icebp
stc
inc
mov
jae
pop
rorb
push
dec
pop
outsb
xor
movsl
adc
clc
repz
in
or
popf
cmpsb
lods
insl
leave
add
cld
shlb
sti
jno
rorl
les
jb
or
jbe
fwait
test
push
pop
aad
mov
stc
mov
lds
mov
xor
and
in
sub
pop
jnp
inc
sbb
popf
js
push
push
mov
mov
outsl
xor
pop
rolb
into
mov
mov
jl
aam
mov
xor
pop
rcl
es
push
cmpsl
xor
sub
xchg
jae
aaa
bound
dec
call
into
dec
push
mov
outsb
subb
mov
mov
filds
cmpsb
cld
mov
std
lock
sub
jecxz
cmp
sbb
lcall
test
mov
and
sti
sub
imulb
outsl
pop
inc
sbb
jo
stos
leave
test
hlt
or
push
sbb
test
inc
push
pop
sub
gs
les
movsl
add
add
orl
inc
xchg
xor
adc
dec
stc
inc
ret
xor
repz
jnp
pop
call
mov
jnp
push
int
sbb
sbb
dec
mov
sub
das
xor
bound
mov
cld
shll
adc
xor
jno
dec
decl
mov
dec
nop
idiv
mov
int
push
lock
mov
cmc
jns
mov
xor
outsl
jp
gs
mov
out
mov
dec
mov
cmc
scas
aaa
push
out
cmp
add
insl
and
shrl
push
lahf
sbb
mov
mov
fs
aas
and
mov
jmp
cmp
push
jmp
out
jmp
lret
push
or
fisubs
add
ja
mov
or
mov
inc
bound
or
dec
jp
dec
ret
testb
jns
mov
or
idiv
cmp
sbb
leave
sti
rcll
sahf
push
xchg
pusha
sbb
jb
aas
imul
fbld
jno
testw
pop
popa
ret
adc
fsts
ret
cli
mov
test
cli
shlb
lahf
lea
xchg
cs
sti
int
jmp
add
enter
xorl
lcall
cmp
stos
add
cmpsl
pop
pop
or
in
sub
aam
rorb
lods
mov
hlt
sbb
outsb
outsl
adc
in
imul
test
xor
in
xor
test
or
cmpsb
jnp
imul
push
xorl
dec
lods
je
sarb
add
cmpb
jbe
push
or
insb
jl
sbb
inc
cmpsb
rdmsr
push
push
out
add
mov
stos
xchg
gs
addr16
jae
rcll
daa
lods
sti
adc
xchg
pop
std
push
sbb
mov
xor
addb
aaa
inc
icebp
push
or
adc
add
cmp
sub
add
call
adc
pop
and
push
and
repz
push
jnp
push
sahf
jae
push
inc
repnz
jecxz
cmp
cmp
push
lret
mov
sahf
shll
add
xchg
xchg
xor
out
or
fisubl
cmpsl
push
rcll
push
push
bound
roll
and
arpl
std
pop
aad
jo
or
xor
push
sub
int3
pushl
jge
xchg
mov
mov
hlt
ret
xor
add
aaa
mov
mov
repnz
xchg
imul
dec
popa
adc
dec
sub
inc
popa
mov
xor
mov
out
loope
js
inc
dec
pop
xor
mov
into
push
mov
mov
in
xchg
neg
into
js
jne
subb
add
rorb
dec
cmp
ja
mov
stos
ficoml
lret
xor
and
rorb
ret
sub
pop
xchg
dec
cmpb
mov
mov
adc
add
xor
and
rorb
ret
sub
pop
xchg
dec
cmpb
mov
mov
adc
add
xor
and
rorb
ret
sub
pop
xchg
dec
cmpb
mov
mov
adc
add
push
in
cmc
push
sub
dec
xchg
pop
push
mov
lcall
sub
popf
aas
mov
mov
dec
into
aad
push
jp
mov
lcall
dec
lret
outsb
mov
sub
pop
push
jp
xchg
push
cmpl
mov
jle
outsb
loopne
or
dec
fiadds
xchg
ds
inc
fstl
sbb
xchg
or
adc
mov
test
rcll
xchg
test
adc
mov
dec
sub
cmc
add
inc
jp
lds
lcall
push
cltd
addr16
inc
pushf
icebp
mov
xor
scas
inc
sub
fucomip
inc
jecxz
push
aas
push
aam
gs
push
sub
ss
daa
sahf
outsb
jg
ljmp
mov
filds
xchg
gs
jnp
into
mov
loop
xchg
lahf
testb
mov
dec
add
out
jmp
jne
out
add
shll
jne
lds
jmp
stos
fldenv
jo
aad
lds
bound
jl
popf
push
mov
mov
mov
jle
outsb
jecxz
or
and
push
into
inc
jo
jnp
mov
js
push
mov
out
gs
int
jmp
pop
das
pop
fwait
add
jp
pop
fldcw
cmp
add
enter
jg
dec
scas
cmp
cmp
push
jns
push
lcall
dec
fidivrl
outsb
cli
sahf
or
cmp
dec
into
pop
push
jp
mov
lcall
dec
fidivrl
outsb
cli
sahf
or
cmp
dec
into
pop
push
jp
mov
mov
inc
mov
in
xchg
pop
out
xor
insl
idivl
pop
movsb
es
dec
cmpsb
ljmp
ljmp
leave
mov
stos
push
test
or
or
mov
stos
ss
mov
dec
push
aam
scas
pusha
mov
inc
inc
nop
pop
xchg
dec
sahf
ret
xchg
imul
aad
fsubrs
imul
lret
xchg
mov
pop
xor
int
pop
ret
mov
ja
pop
insl
pop
jb
loope
in
mov
or
jo
add
mov
jg
adc
jle
mov
insl
fstpl
ficoml
adc
ret
sbb
imul
xlat
fwait
out
adc
daa
les
shll
fildl
dec
pop
xchg
cmp
out
int
lock
pop
xor
jmp
push
arpl
fisubs
orb
ret
mov
iret
aas
iret
mov
or
ret
xchg
mov
pop
add
popa
mov
mov
rolb
addr16
cmc
mov
aam
xor
sahf
pop
jae
mov
lcall
push
into
arpl
clc
mov
test
out
push
or
or
mov
jnp
pop
sub
push
push
das
fsubr
cltd
in
mov
cmpsb
push
xor
sub
mov
mov
xorl
insb
repnz
adc
gs
mov
scas
imul
stos
roll
mov
repz
and
sbb
sub
mov
nop
pop
test
icebp
adc
in
xchg
hlt
inc
xchg
mov
inc
movsl
out
imul
fisubrl
xor
inc
in
or
fisttps
faddl
mov
add
mov
popa
das
insl
and
xchg
adc
push
aaa
pop
mov
sbb
xor
test
lahf
mov
repnz
fstl
les
dec
pop
cs
cmp
bound
push
repz
getsec
icebp
fistpl
cld
lea
leave
ret
lret
push
add
dec
rorl
jl
stos
fnstenv
lods
das
sbb
xor
adc
push
adc
faddl
pop
sbb
sahf
jle
repz
cltd
cli
nop
lahf
iret
push
shll
mov
xchg
insl
adc
cmp
rol
pop
mov
cmpsl
jns
scas
pop
dec
lahf
ds
sbb
inc
arpl
xchg
aad
imul
adc
out
mov
mov
out
inc
daa
sub
mov
data16
cmp
test
es
push
aad
popf
mov
aad
pop
mov
in
inc
xchg
shlb
pop
dec
shl
loop
sbb
pushf
inc
aaa
ret
movsl
sti
mov
xor
and
pusha
sub
mov
dec
lds
cltd
or
or
insl
push
ljmp
fcoms
mov
mov
sbb
inc
fcmovb
in
push
insl
repnz
sti
sub
movsl
mov
sub
xchg
out
mov
jle
fmulp
movsl
cmp
add
add
and
inc
notl
mov
fimuls
mov
lcall
mov
jl
inc
pop
leave
jnp
fistps
jmp
jmp
imul
sahf
jb
push
movsl
mov
je
mov
cltd
or
and
sti
in
aad
fs
mov
adcb
mov
std
cmpsl
dec
mov
dec
pop
pop
cmp
xor
hlt
mov
dec
lea
inc
jns
push
sar
bnd
rorb
scas
mov
jecxz
neg
or
pop
lret
jmp
jle
scas
mov
out
mov
sub
lds
out
idiv
std
pop
and
mov
outsl
adc
push
add
xor
shl
xor
test
or
sub
xor
fcompl
and
lds
les
mov
adcb
das
movhps
icebp
rcll
fst
adc
lret
fcoml
pop
ret
xor
mov
xchg
push
xchg
mov
mov
arpl
sub
adc
jg
sub
and
gs
add
xchg
sbb
push
daa
push
lret
xchg
inc
adc
add
std
jne
sub
jbe
div
and
popa
sbb
adc
add
inc
push
jge
lret
dec
arpl
out
and
cli
cmp
push
fs
push
sbb
lret
sub
daa
mov
loopne
mov
push
rorb
mov
adc
ror
int
adc
in
mov
xchg
test
fstpl
and
negl
cmpsb
inc
negl
sbb
mov
jl
fisttps
in
and
imul
push
pop
xor
es
aaa
in
mov
jns
sub
ficompl
xchg
jo
mov
sbb
or
mov
cmp
sbb
gs
ret
cmp
or
and
cmp
stos
mov
shlb
and
imul
lret
fnstenv
push
lret
shrl
out
adc
leave
pop
cltd
inc
push
cmp
inc
adc
push
lods
pusha
mov
sbb
andb
int
ret
jns
es
sbb
mov
stc
pop
inc
xchg
shrb
imul
test
sbb
jae
scas
sub
outsl
and
enter
push
fdivrl
mov
ficompl
jg
lret
sub
push
int
aas
mov
pop
adc
fildl
inc
xor
icebp
add
sbb
and
push
mov
dec
or
mov
jl
mov
int
and
adc
nop
insl
popa
cmpsl
fwait
inc
std
icebp
mov
pop
jge
dec
dec
inc
pop
jecxz
mov
imul
inc
rclb
add
lcall
pop
ss
jl
or
cmp
es
cmpsb
lds
icebp
adc
movb
dec
mov
ds
mov
xor
jbe
nop
test
les
leave
js
bound
outsb
inc
fwait
repnz
sub
and
stos
pop
inc
fnstcw
cltd
out
sbb
jg
in
push
scas
ljmp
ljmp
or
sbb
or
mov
mov
lea
loope
inc
pop
stos
adc
iret
loopne
add
adc
mov
sub
aas
adc
cmp
mov
pop
ja
xor
sbbl
xor
outsb
mov
inc
xchg
pop
or
adc
mov
jnp
sbb
mov
jns
es
cs
lret
jbe
mov
xor
fldl
movl
add
das
dec
mov
cmp
add
adc
push
out
sub
adc
dec
repnz
dec
cmpsb
add
ds
hlt
pop
sbb
push
ljmp
cmpsl
nop
mov
les
addr16
or
out
arpl
adc
repnz
mov
or
aam
insl
xor
out
aad
sub
push
ret
pop
sbb
lahf
mov
test
test
mov
out
sub
arpl
out
inc
mov
push
lds
mov
imul
dec
xor
ljmp
das
arpl
stos
test
pop
nop
adc
sub
cmp
fs
adc
cmp
aas
jno
outsl
test
add
sub
test
aaa
fwait
ja
adc
int3
popa
dec
je
rcr
imul
jmp
pop
and
scas
jecxz
jbe
and
call
leave
xor
jnp
sbb
xor
jmp
out
add
aaa
add
mov
int3
rcl
add
shll
addb
addr16
shrb
inc
sbb
lahf
aad
movsl
scas
out
icebp
dec
and
push
push
xor
cmp
outsb
xchg
in
fnstcw
pop
loope
sbb
stc
push
movsl
mov
loop
mov
mov
push
mov
outsl
xor
shrl
push
push
push
ret
xchg
jle
jne
push
mov
jnp
xor
inc
cltd
push
push
jo
mov
iret
pop
add
pop
call
lret
rcl
jle
and
int3
iret
test
mov
pop
pop
cld
cltd
enter
mov
push
movsb
ud1
jo
sbb
xchg
or
je
inc
lahf
inc
dec
lcall
push
sbb
adc
outsb
cwtl
outsl
adcb
mov
xchg
lea
push
push
repnz
mov
sub
push
rolb
mov
das
out
iret
adc
iret
sbb
stos
mov
cmp
popf
inc
cli
and
sti
das
push
bound
ret
shl
outsb
jecxz
push
jg
or
shl
fdivr
sub
pushf
mov
dec
or
mov
data16
and
out
repnz
js
aam
mov
add
add
mov
imul
dec
sbb
popf
cmp
jae
sbb
stc
and
ja
add
cmp
adc
dec
xchg
xchg
dec
into
repz
arpl
cltd
pop
xchg
arpl
jecxz
inc
ja
es
data16
dec
dec
stc
mov
pop
dec
mov
mov
mov
sub
daa
filds
movsb
jge
je
in
loopne
dec
cwtl
bound
xchg
cmp
js
movsl
sbb
inc
inc
movsl
add
sarb
jo
loop
mov
dec
lods
push
sbb
push
mov
dec
xor
adc
dec
cmpsb
sub
stc
and
mov
push
dec
xchg
ja
mov
fwait
iret
pop
fisubrs
mov
movsb
imul
cmpsl
ja
xorb
ss
or
ss
sbb
jge
mov
xor
pop
test
fwait
ss
test
mov
cmp
adc
jb
xchg
movsl
mov
pop
dec
cmpsb
dec
jae
jl,pt
or
test
pop
in
lret
iret
pop
mov
loope
repz
xor
stc
inc
push
int3
xchg
nop
xchg
lds
addr16
cmp
push
pusha
mov
popf
mov
add
ret
xchg
fsubrs
lods
or
dec
imul
cmpsb
pusha
mov
push
jle
shr
cltd
mov
add
out
push
lock
inc
jns
iret
sbb
lods
dec
and
mov
test
cmpsb
sbb
decb
call
xchg
push
or
shrb
hlt
mov
mov
add
test
test
mov
fucomi
clc
xor
sti
cmpsb
repnz
xor
inc
cwtl
ljmp
xchg
in
or
pop
inc
pop
leave
push
gs
add
sbb
or
lcall
fnstenv
test
outsb
lahf
ss
mov
fildl
inc
and
mov
jbe
inc
fstps
sbb
rorb
movsl
jns
adc
mov
jb
pop
or
sbbl
stc
adc
jae
push
cs
negb
and
subl
pop
push
fiaddl
cmp
jmp
sbb
push
sbb
insb
sub
imul
sbb
out
test
out
xchg
dec
loopne
orb
outsb
sti
jb
pop
mov
push
mov
mov
inc
nop
testl
push
mov
inc
aam
dec
lods
sub
jp
jae
test
push
dec
and
mov
inc
repz
push
sbb
jns
sbb
imull
filds
idivl
sub
nop
adc
inc
outsb
mov
inc
fnsave
xor
jno
call
xchg
sar
push
jnp
testb
sbb
loope,pt
dec
adc
cmp
jnp
in
cmp
call
mov
add
xor
pop
jl
jo
dec
repz
push
jl
xchg
cmp
sahf
icebp
loopne
pusha
mov
fdivl
insb
popf
leave
scas
sbb
cmpsb
sub
inc
xor
push
xchg
cmp
test
sub
adc
fnstcw
xor
rorb
sub
cmp
mov
pop
jge
xor
loop
push
dec
mov
cmpsb
std
aad
xor
popa
fisubrl
sub
lea
push
cwtl
repnz
jg
push
mov
cmc
jp
and
shlb
jmp
mov
and
mov
pusha
popa
xchg
inc
mov
mov
gs
xor
rorb
ror
insb
or
or
mov
jp
out
sub
xchg
addl
and
aas
arpl
push
gs
dec
or
outsl
cmpsb
xor
pop
mov
jne
mov
leave
filds
jae
lahf
add
add
xchg
jge
mov
lcall
jno
mov
insl
xor
roll
push
inc
push
lock
ds
dec
loopne
jns
mov
push
cmp
loopne
fwait
mov
insl
mov
test
push
xchg
test
movd
notb
idivl
mov
scas
add
aam
push
xchg
dec
push
ret
sbb
xchg
shrb
or
nop
decl
mov
jno
pop
neg
pop
loope
ret
fnstsw
mov
xlat
dec
out
test
push
dec
xchg
cmp
or
outsb
in
repz
pop
cwtl
lods
push
dec
xor
test
cmp
lea
scas
or
loopne
cmpsl
in
push
fldenv
gs
inc
fwait
jne
pusha
loopne
hlt
sbb
pop
inc
mov
mov
cmp
mov
ret
and
scas
and
aam
pop
ret
scas
lods
mov
xchg
les
loope
mov
mov
loope
adc
push
xchg
pop
lret
subb
mov
jge
and
lea
std
es
gs
icebp
jg
lods
dec
mov
rcrl
loope
pop
jne
add
add
daa
fildll
push
jae
rolb
sub
ret
lret
arpl
loop
mov
sbb
pop
sub
fildl
vxorps
out
test
or
mov
mov
insl
push
jmp
mov
inc
ljmp
adc
jne
leave
cmpsb
and
adc
aas
dec
mov
pusha
xor
jl
or
pop
lds
jae
lea
xchg
movsb
and
jb
popa
dec
popf
sarb
lcall
fdivrs
mov
test
inc
sub
out
mov
test
jmp
jl
je
push
cmp
push
sbb
repnz
sbb
mov
or
adc
je
cmp
mov
push
pop
lcall
mov
subb
call
cmp
dec
daa
jo
fildll
and
nop
add
adc
and
mov
fstl
mov
xchg
push
lret
ljmp
dec
test
filds
incb
fst
pop
sub
sub
dec
add
xor
xlat
xor
sub
movl
fnstenv
dec
bnd
mov
xor
mov
xor
sbb
je
out
mov
cld
or
sub
fcmovbe
push
fadd
test
cmp
or
popf
sbb
or
pop
ret
adc
dec
mov
cmp
into
adc
pinsrw
mov
push
xor
sub
jmp
xchg
ds
inc
pop
lahf
repz
insl
sub
jge
loop
cmp
mov
cmpsl
dec
mov
pop
jo
ds
push
push
jecxz
jb
std
pop
sbb
inc
mov
pop
push
push
pop
je
pop
call
loop
shl
jns
mov
sbb
mov
imul
add
in
adc
jb
call
and
test
xchg
push
jge
push
mov
mov
dec
orl
scas
dec
push
dec
sub
inc
or
mov
inc
aam
pop
int3
or
movsl
jo
push
das
out
mov
or
adc
call
into
insb
das
int
lds
and
fnstcw
ljmp
fsubrl
xor
cmp
insb
pop
hlt
push
ljmp
lcall
iret
cltd
xchg
jmp
xor
leave
rcrb
sbb
mov
dec
push
cmp
rcrl
xor
in
jbe
cmpsb
pmuludq
popa
loopne
mov
sahf
xor
mov
add
cmpsb
push
loop
push
ret
add
ss
ss
pop
push
mov
cmpb
js
push
stc
inc
push
mov
shlb
das
pushf
iret
mov
cmp
and
push
jge
je
push
repz
jno
adc
cli
mov
movsl
mov
mov
cmc
mov
xchg
sahf
leave
xchg
loope
lods
out
sub
push
mov
mov
loope
pop
jmp
jne
push
xchg
int3
cmc
inc
dec
js
mov
sub
adc
adcb
aaa
mov
add
dec
scas
cmp
cmp
cli
lods
imul
movsb
jle
adc
mov
inc
movsb
and
xchg
adc
test
inc
and
out
sbb
mov
pop
and
add
mov
ret
mov
aas
sub
push
lret
test
ljmp
outsl
mov
rcl
les
sub
mov
fiaddl
or
insl
shll
ljmp
mov
sub
xchg
repz
repz
pop
lock
mov
fcoml
adc
and
dec
mov
fsubs
jb
ja
push
sbb
jmp
adc
enter
mov
push
push
cli
insb
mov
mov
xor
add
scas
das
mov
stos
mov
xchg
and
sbb
jle
dec
xchg
mov
mov
inc
das
inc
push
in
pop
fndisi(8087
nop
dec
inc
sub
dec
repz
or
dec
mov
iret
in
xchg
shll
xor
pop
icebp
icebp
inc
lods
jl
in
fisubl
imul
out
xor
daa
sti
in
xlat
fidivrs
and
cmp
dec
mov
cmpsl
sar
repz
jno
int3
pop
enter
sub
inc
inc
lods
fstpl
sbb
push
cltd
adc
push
inc
outsb
mov
cld
imul
sbb
mov
cltd
inc
add
cltd
in
and
call
sbb
pop
cltd
sub
adc
cmp
add
and
mov
nop
xchg
cmp
ret
stos
or
xor
outsb
imul
jge
test
imul
cli
cmp
icebp
inc
inc
insb
pusha
cmp
stc
bound
add
sahf
push
jo
inc
mov
fidivrs
arpl
push
or
xchg
add
push
cmp
sbb
js
jnp
cld
pop
mov
scas
or
loopne
addb
push
or
mov
clc
test
test
xchg
push
std
xchg
add
ja
pusha
repz
mov
and
jbe
lock
stos
xchg
insb
int3
mov
dec
cli
xchg
mov
imul
js
jne
dec
lods
popf
cld
mov
movsl
iret
ds
xchg
pop
fsubp
cwtl
sub
push
cltd
cld
jmp
in
ret
lods
or
mov
daa
mov
ljmp
jbe
dec
mov
adc
sub
lret
mov
push
insl
cmpsb
mov
hlt
rolb
dec
adcl
in
aam
dec
or
inc
mov
shlb
lret
iret
lods
addr16
cld
pop
loop
adc
mov
lock
xor
add
sbb
mov
ljmp
jns
fcomps
out
or
imul
and
stc
inc
int3
loop
pop
sbb
mov
ja
pop
scas
inc
jns
aad
mov
fistl
xchg
mov
pop
sub
les
sbb
fwait
xlat
test
addr16
xchg
dec
mov
jno
fcmovu
out
sbb
out
mov
rcll
shll
sti
lahf
xchg
data16
fdivrl
imul
mov
pushf
data16
mov
cmp
jge
repnz
or
sub
fcompl
mov
push
enter
xor
loopne
or
lret
roll
fisubrl
ja
lcall
aas
and
jne
loopne
int
xor
stc
mov
jne
mov
adc
or
sar
mov
jne
cmp
adc
jbe
adc
dec
fisttps
sub
jbe
js
cmp
adc
mov
mov
pop
aaa
or
movsb
sub
xor
adc
iret
pop
arpl
mov
xchg
cmp
in
xchg
inc
mov
mov
and
sbb
fwait
mov
out
inc
mov
repnz
insb
repz
jp,pn
subl
roll
xor
add
stos
cs
jle
outsb
cli
sahf
or
cmp
dec
into
pop
push
jp
mov
lcall
dec
fidivrl
outsb
cli
sahf
or
cmp
dec
into
pop
push
jp
mov
lcall
dec
fidivrl
outsb
cli
lahf
or
fimuls
pop
ljmp
jle
mov
sahf
ds
cs
ljmp
adc
scas
dec
test
adc
mov
scas
push
mov
mov
sub
cmp
or
pop
jge
pop
jle
outsb
lods
sahf
mov
scas
in
fdivrp
into
int3
fsubr
sub
cmp
insl
ds
insb
pop
jl
dec
cmp
outsb
lods
sahf
mov
scas
in
fdivrp
into
int3
fsubr
sub
cmp
insl
pop
jns
bndstx
outsb
fcompl
int3
jmp
fsubrl
lods
cmpb
add
stos
pusha
cltd
call
lods
stc
enter
fcomp
push
in
pop
repz
test
icebp
push
aas
xchg
mov
inc
movsb
aas
sub
mov
ret
jbe
inc
mov
insb
icebp
pop
jecxz
rcrb
mov
sbbl
or
in
into
sub
fcoml
cmp
cli
bound
xor
mov
adcl
fistpll
mov
fcomip
fcmovne
jmp
insl
inc
loop
pop
pop
rcrl
dec
adc
leave
andl
push
or
xor
xor
sbb
shrl
push
jns
xchg
das
sbb
mov
pop
outsl
repz
mov
scas
in
fdivrp
into
int3
fsubr
sub
cmp
or
sbb
insb
pop
jl
dec
jle
pop
fdiv
clc
mov
xlat
rol
scas
mov
into
mov
mov
push
js
sbb
xor
repz
decl
xchg
cwtl
stos
int3
mov
je
jns
daa
cmp
inc
ds
xchg
fucomp
mov
into
int3
fsubr
sub
cmp
or
sbb
insb
pop
jl
dec
jle
outsb
lods
sahf
mov
scas
in
fdivrp
into
int3
fsubr
sub
cmp
or
sbb
insb
pop
jl
dec
jle
outsb
lods
sahf
mov
jmp
mov
cld
gs
cmpsl
inc
jmp
lods
sub
or
cmp
repnz
into
push
ret
dec
data16
in
ljmp
ss
cmp
loopne
or
cwtl
aam
ror
gs
nop
mov
xchg
inc
cmp
out
jno
xor
test
jg
mov
outsl
rcr
inc
dec
sub
in
pop
scas
stos
mov
jmp
sub
mov
test
sbb
divl
sahf
frstor
aaa
aaa
imul
sub
inc
xor
sub
adc
jmp
fistl
scas
aas
push
aam
fadds
cwtl
ss
ja
push
cmp
add
xor
mov
fs
out
mov
clc
dec
les
scas
das
shlb
and
popa
incb
dec
lea
mov
lods
stc
add
cmpl
and
fists
lods
shrb
gs
mov
xor
addr16
punpcklwd
add
test
sahf
mov
jp
lods
and
inc
mov
icebp
sub
out
testb
fldt
es
fstl
sbb
inc
mov
int
or
data16
mov
out
sarb
pushf
adc
xor
inc
mov
cltd
mov
dec
icebp
cmp
cli
cmc
adc
or
aam
sbb
cld
inc
insl
pop
and
aam
or
xor
sub
orb
ljmp
fadd
test
jmp
wbinvd
mov
test
jle
fnsave
cs
adc
pushf
fistl
xchg
addr16
enter
add
adc
shrl
movl
addr16
mov
jo
jle
stos
cmc
jecxz
push
cmpsb
pop
cmpb
cltd
imul
repnz
ret
pop
sbb
cmp
fstl
xchg
insb
mov
in
pop
rorl
jmp
pusha
fsts
iret
sbb
push
sbb
in
pusha
push
and
loope
sarb
test
xor
test
push
aaa
imul
cmc
aas
fsubr
sbb
stc
icebp
mov
mov
daa
mov
inc
xor
icebp
mov
add
pop
cs
or
push
xchg
sub
arpl
lods
or
testb
and
in
in
mov
mov
cld
xor
push
add
sub
pop
cmc
in
pop
or
xor
les
inc
fisubrs
cmpsl
pusha
in
inc
ljmp
cmp
pop
mov
nop
jae
mov
out
xchg
rcrb
stos
cli
lods
add
mov
adc
mov
inc
add
imul
xor
mov
xor
popa
cmpl
test
int3
add
fisttpl
push
mov
loope
and
pop
repnz
popl
insl
mov
aad
iret
jecxz
jp
int
pop
insl
rorb
scas
push
dec
fidivrl
arpl
push
mov
js
pusha
cmp
jp
mov
cmpsl
test
xorb
adc
add
push
add
pop
outsb
xchg
pusha
push
lret
jl
push
inc
xor
lahf
dec
pop
dec
daa
jae
pusha
pop
mov
mov
testl
das
loopne
ss
in
dec
mov
or
in
fst
sbb
rclb
mov
add
jo
push
int
ret
gs
dec
movsl
fcoms
mov
jbe
adc
pusha
ret
insl
pop
outsb
mov
push
clc
mov
fs
out
sbb
fwait
pop
out
push
inc
ficoml
xchg
lods
aas
pop
mov
jle
daa
xchg
in
test
aam
push
or
lds
lcall
xchg
xor
lret
dec
repnz
lds
push
or
mov
xorb
mov
es
iret
mov
adc
and
inc
sbb
add
int
inc
cmp
sbb
xor
test
movzwl
loopne
test
pushf
jae
inc
jge
cli
xor
inc
lods
jnp
out
sub
cmc
int3
mov
stos
fimull
sub
mov
cmp
or
push
out
sbb
xchg
xchg
push
lcall
mov
mov
add
xchg
cmp
repz
ret
int
scas
xlat
push
icebp
add
ret
clc
gs
pop
outsb
ss
scas
in
sub
jl
and
lahf
mov
insl
mov
push
pushf
inc
ret
pop
cmpsl
xchg
inc
sbb
xchg
push
mov
ret
xchg
loop
insl
out
lcall
mov
int
cmp
popa
push
sub
nop
imul
cmp
and
stc
cmp
xorb
jbe
adc
xchg
out
fsub
nop
add
stos
cmpsb
movsl
dec
xor
xchg
sub
sub
sbb
je
or
add
push
fwait
andnps
mov
xchg
cmc
lret
and
pop
mov
shrl
inc
jg
addb
mov
js
fstp
mov
lahf
out
mov
dec
dec
aaa
sbb
sbb
cmp
dec
jp
add
push
xchg
push
dec
jle,pt
mov
lods
mov
mov
and
addb
mov
mov
mov
aam
mov
andb
fscale
xor
mov
and
outsb
iret
pop
pop
xor
cmp
jbe
xchg
add
ret
xor
decb
jo
push
cltd
jmp
test
sbb
std
das
and
mov
lcall
jae
push
sub
and
pop
xlat
sub
jno
fld
repnz
gs
mov
test
fdivp
mov
dec
sub
or
leave
scas
stos
xor
testb
xchg
fildll
push
insb
cltd
jle
cmp
adc
jecxz
dec
ja
dec
adc
decb
xchg
inc
jno
jg
cmp
push
add
movsb
les
push
int
or
jg
aad
and
cs
pop
mov
rol
out
sbb
xor
jbe
ds
fwait
or
test
cmp
out
jmp
les
dec
nop
loopne
imul
add
sub
ror
call
out
loope
repnz
arpl
clc
inc
push
ror
cld
insl
imul
and
mov
bound
dec
je
mov
mov
aad
jne
pop
aam
mov
mov
les
adc
bound
jne
inc
je
aam
mov
dec
inc
mov
mov
sbbl
and
lods
add
repz
jl
les
pop
outsb
jb
and
add
test
lods
add
bound
fadds
or
mull
inc
pop
lret
out
mov
pop
sub
mov
outsl
mov
and
or
adc
dec
adc
sub
jb
lds
jo
cmc
lds
fdivr
cmpsb
std
push
aas
imul
mov
and
jae
js
push
jp
movsb
mov
mov
lods
cmp
adc
pop
jae
fildll
pop
xchg
dec
xor
mov
mov
cmc
cmp
fcoml
adc
mov
nop
sahf
xchg
add
jbe
cmp
add
push
stc
xchg
sti
mov
xorb
nop
ja
inc
cmp
cs
test
inc
ret
mov
sbb
and
nop
mov
mov
or
add
test
loopne
jb
out
mov
scas
packuswb
jl
push
add
mov
mov
xchg
adc
xor
rorb
pop
or
sub
xor
and
push
stos
rolb
out
inc
cli
push
mov
jae
pop
outsb
jno
mov
cmp
outsl
int
lock
insl
orb
hlt
fisubrl
jne
add
leave
scas
insl
push
sti
xor
cltd
cmp
stos
inc
sbbb
fwait
icebp
cmp
ja
repz
stc
test
pop
push
mov
dec
mov
sbb
sti
sbb
in
and
inc
mov
xor
test
enter
xor
adc
xchg
adc
sbb
sub
movsb
stos
fistpll
dec
ja
mov
add
pushf
das
sahf
pushf
sahf
nop
sbb
sub
mov
outsl
inc
out
push
sahf
sbb
ret
xor
leave
add
das
lds
mov
xchg
aam
add
mov
adc
push
mov
les
xchg
dec
cmp
push
or
gs
cmp
xchg
aaa
ljmp
adc
or
loop
inc
sub
xchg
lods
dec
sahf
xor
cs
jmp
jl
movsl
jae
stos
mov
xor
imul
jle,pn
addl
icebp
cld
adc
imul
int
in
pop
aaa
dec
in
mov
loopne
xchg
mov
dec
jmp
inc
cld
testl
add
pop
aad
sti
dec
inc
jo
sarb
call
mov
fmull
inc
popf
adc
in
xchg
adc
or
xlat
add
int3
nop
and
psubd
sbb
das
sahf
pop
sub
xchg
dec
lcall
js
push
mov
shlb
gs
aas
inc
gs
sti
mov
xchg
scas
aas
mov
cmp
push
das
sub
adc
clc
xchg
lock
cmp
sbb
push
mov
fcmovu
shll
insl
sar
or
cltd
cltd
cli
and
idivl
xchg
lcall
jecxz
lea
imul
pop
shl
lcall
test
xchg
int
jmp
bnd
insb
lods
fildll
mov
add
addr16
sbb
cmp
cld
inc
cmpsb
sarl
mov
xlat
dec
adc
das
movsl
pop
push
adc
and
rcl
xchg
xor
sti
lret
aam
scas
push
fstpl
pusha
test
loope
sarb
and
mov
cmp
sbb
xor
sub
xor
sbb
jo
mov
jne
dec
pop
jp
pop
mov
movsl
cmp
xor
and
mov
cmc
std
sbb
int
adc
idivb
out
int
lret
mov
mov
lock
ljmp
mov
fdiv
cmpl
aad
fisttps
lock
sub
inc
mov
cld
cmpsl
pop
je
push
clc
aas
mov
mov
push
xor
data16
fldt
lds
neg
fchs
fwait
xor
or
ret
pop
mov
test
mov
stos
fisttpl
pop
adc
movsb
mov
pop
js
and
xchg
cs
movsl
fbld
adc
mov
jno
push
es
push
ret
dec
sub
scas
imul
and
fnsave
cwtl
inc
das
addr16
addb
cltd
pushf
outsl
and
cmp
insl
test
inc
mov
in
roll
inc
outsl
outsl
push
cld
int
inc
jb
adcb
data16
pop
gs
jg
cltd
fisubl
cmp
xchg
popa
jb
fidivrl
bound
loope
bound
add
pop
adc
nop
xor
mov
test
mov
enter
xor
out
cld
add
xor
inc
sahf
dec
push
inc
std
arpl
cmp
or
sarb
dec
pusha
inc
cli
out
inc
lods
lods
nop
mov
jb
ljmp
ret
movzbl
xchg
xchg
lcall
push
in
mov
mov
aas
mov
mov
push
inc
sub
in
add
xchg
pusha
xchg
sbb
mov
sbb
nop
jge
pop
mov
cmpsb
cmp
in
inc
push
jnp
mov
add
pusha
rclb
testl
push
insb
dec
dec
mov
out
sub
rol
sub
sbb
clc
sbb
xchg
popf
sarb
scas
mov
ret
or
jl
mov
xlat
test
adc
int3
push
mov
mov
rorb
inc
or
xlat
outsb
fs
fstp
mov
aas
cmp
sarl
jmp
mov
dec
xor
out
push
out
xor
cmp
arpl
ret
jno
xchg
pop
mov
int
inc
cwtl
sarl
sbb
cs
leave
les
xchg
xor
ret
out
sub
xor
and
push
int3
imull
xor
inc
insb
icebp
loop
pop
mov
xchg
arpl
lds
cmp
adc
xchg
repz
fstpt
shlb
daa
pushw
iret
cmp
in
pop
cmp
fld
cmp
adc
sti
ud0
test
xor
arpl
sbb
sub
stc
outsb
push
movb
lods
cld
imul
sahf
mov
movsl
aam
imul
dec
cmovb
sti
aam
aas
inc
xchg
rcrb
add
ja
imul
push
dec
ss
cmpsl
xchg
pop
pushf
scas
sbb
pop
push
fstl
xchg
sub
iret
popf
mov
fildll
movsl
popa
mov
xchg
out
dec
std
fwait
add
mov
imul
mov
add
jecxz
fiadds
je
and
cmp
fildl
pushf
xchg
pop
loop
xor
into
push
dec
inc
sbb
push
imul
dec
pop
into
adc
ret
xchg
sbb
jle
adc
and
pop
gs
nop
xor
notl
aaa
or
daa
lret
scas
popf
mov
add
xor
stos
outsl
dec
push
adcb
stos
cmc
add
dec
iret
imul
rorb
push
adc
imul
jb
ja
out
or
cli
sub
loopne
push
cmc
cmp
cmpsl
mov
sti
jmp
dec
mov
frstor
or
push
hlt
jb
out
sti
sbb
pop
mov
enter
cmp
frstor
xor
add
repnz
stos
or
xlat
stos
sbb
jge
inc
mov
lret
mov
or
ret
push
int
arpl
fdivs
jne
push
inc
mov
add
aad
jp
dec
mov
push
jle
inc
es
xlat
repnz
imulb
cmp
insb
jno
outsl
mov
lcall
addb
std
and
pop
out
loope
movsl
cltd
push
jae
xchg
jbe
in
cmp
add
xchg
mulb
lds
pop
mov
xchg
push
and
hlt
jns
fiaddl
mov
cltd
jns
or
test
adc
pop
push
rorb
xor
lret
movsl
xor
call
xor
adc
inc
push
repz
aam
rclb
jo
mov
push
imul
cli
or
mov
inc
divl
mov
shl
sahf
sub
movsb
lock
sbb
lret
jge
aas
sbb
pop
stos
ljmp
cmp
dec
pop
adc
jae
dec
pop
sbb
mov
xor
pop
and
mov
sub
movsb
add
cltd
inc
jo
popf
ljmp
cmpsl
jae
cmp
push
aam
mov
cmp
jl
lea
in
pop
scas
aad
es
ret
int
sahf
push
push
es
pusha
xor
pop
dec
fcompl
stos
ljmp
jle
js
std
ret
add
add
push
popf
inc
cmp
shr
xchg
sub
fstp
mov
push
sbb
out
js
arpl
cmpsl
in
mov
out
fisubs
mov
xchg
stos
mov
jg
imul
jnp
cwtl
adc
sbbb
jmp
push
sbb
sub
jne
mov
and
xor
jmp
rcpps
jge
xacquire
cmp
cmp
cmpl
adc
cmp
test
dec
aaa
push
shlb
mov
int
mov
mov
imul
xchg
jmp
or
int3
popf
pop
lret
jle
out
nop
mov
cs
xor
lcall
imul
unpcklps
mov
and
add
loopne
inc
ficompl
push
hlt
mov
sbb
jnp
jp
pop
jmp
test
scas
fdivl
xchg
add
scas
dec
jo
and
fcomp
clc
jmp
pop
cmp
stos
mov
jo
fistpll
fs
lock
xchg
outsl
jo
ss
sbb
xchg
sbbl
fstpt
test
xchg
js
dec
icebp
sarb
xchg
add
lret
add
lods
mov
nop
fs
push
adc
lcall
cmp
jnp
stc
mov
fisubs
std
scas
or
xchg
fiadds
movsl
push
xlat
and
mov
xor
mov
fdiv
lret
mov
xchg
pushf
jmp
sbb
les
and
repz
mov
pop
sub
inc
sbb
xor
test
lahf
cmp
into
fsubl
or
jmp
jns,pn
jp
movsl
sarb
imul
and
mov
aam
sbb
icebp
fistpl
add
stos
lret
and
push
je
cmp
pop
xchg
iret
jp
adc
js
mov
outsb
es
mov
andl
adc
int
je
xor
inc
aam
or
cli
xchg
cli
addr16
cmp
push
add
sub
pop
inc
mov
js
repz
lds
iret
aad
enter
outsl
adc
fisttps
aad
hlt
movsl
shlb
pop
cmp
inc
and
and
testl
in
push
push
outsl
int
cmp
or
pop
repnz
pop
pop
fdivrl
in
frstor
push
ja
or
mov
in
jl
fcom
fists
test
jne
int3
mov
push
sub
sti
xor
leave
add
sub
call
stos
pop
stos
scas
arpl
and
scas
lret
fldcw
loope
out
sahf
cltd
cmpsl
sahf
sub
lcall
flds
sti
ret
stos
sahf
lods
in
das
ds
data16
rclb
incl
lcall
push
dec
in
aaa
add
incb
out
and
xor
orl
push
bound
add
gs
sbb
andl
sbb
push
mov
scas
pop
xchg
fs
pop
aad
mov
cltd
fisubrl
ja
push
xchg
pop
push
inc
jle
imul
out
mov
sub
out
js
inc
push
ja
shl
in
mov
pop
add
jge
pop
dec
data16
mov
jg
sbb
call
aad
mov
xor
xor
pusha
xor
andb
cmp
add
add
mov
mov
mov
stos
aam
or
jne
xchg
out
jecxz
fwait
dec
fsub
ja
insl
mov
fnsave
mov
iret
mov
rcll
mov
out
lds
adc
cli
in
subl
loop
je
mov
lods
andl
dec
mov
in
mov
inc
xor
lret
add
jbe
addb
mov
jecxz
enter
loope
stos
xorl
or
mov
pop
sub
push
add
push
lods
xor
xchg
pop
pushf
push
sub
ss
call
jmp
add
xchg
scas
sbb
dec
ficoml
shlb
mov
test
and
push
push
jae
jmp
push
mov
outsl
push
dec
and
repz
out
pushf
in
ret
add
incl
mov
jno
adc
and
shlb
orl
pop
pushf
gs
out
sbb
add
sbb
mov
outsb
int3
adc
ljmp
sub
movsl
add
xchg
pop
dec
push
cwtl
jg
xchg
jns
sub
aad
enter
sbb
push
lods
sub
push
inc
push
into
jnp
and
cmp
packssdw
loop
jno
fiaddl
jne
jp
popa
inc
ret
stos
lcall
in
sub
add
cltd
and
sahf
cmp
scas
movsb
mov
inc
push
jle
cli
sub
push
shll
cli
dec
shlb
push
xchg
shll
mov
dec
mov
inc
dec
pop
ds
imul
scas
xor
es
loop
icebp
adc
cmpsl
mov
pop
add
leave
xchg
cmp
xor
add
jp
xchg
cwtl
dec
cmp
push
jb
adc
aas
lahf
ret
dec
out
sub
sbb
mov
add
add
ds
aas
in
imul
inc
cwtl
xor
icebp
out
inc
fcomps
push
pop
inc
xchg
mov
fmull
xor
mov
sbb
cwtl
in
test
aad
pop
addb
in
inc
bnd
aad
add
mov
add
call
push
mov
mov
mov
sub
xlat
loope
mov
cltd
cmp
loope
rclb
pop
dec
push
or
lock
iret
and
popf
sub
enter
ror
icebp
test
rcrl
imul
pop
scas
adcb
divl
mov
push
leave
jno
addr16
push
in
test
lock
adc
inc
xchg
pushf
pop
aam
loope
lahf
sbb
aaa
dec
adc
scas
in
fdivrp
into
int3
fsubr
sub
cmp
or
sbb
insb
pop
jl
dec
jle
outsb
lods
sahf
mov
scas
in
fdivrp
into
int3
fsubr
sub
cmp
or
sbb
insb
pop
jl
dec
jle
outsb
lods
sahf
mov
scas
in
fdivrp
dec
int3
fsubr
sub
cmp
or
sbb
insb
pop
jl
dec
jle
outsb
lods
sahf
mov
scas
in
fdivrp
into
int3
fsubr
sub
cmp
cmpsb
ds
sbb
hlt
mov
andl
stos
cmc
xchg
movsl
cmc
test
jmp
sbb
or
pop
or
push
imul
movsl
mov
mov
in
aad
sbb
sub
jnp
imul
pop
stos
jmp
test
lret
sti
vsqrtsd
pusha
sub
or
das
add
sbb
fwait
jmp
inc
icebp
sbb
out
or
push
pop
dec
cmp
xchg
push
lock
mov
adc
and
pop
testl
nop
cmp
sub
jnp
xchg
dec
mov
pop
loopne
xchg
cmp
movsb
inc
imulb
jmp
pop
and
test
imul
or
in
sub
lds
xchg
mov
sbb
dec
dec
push
test
mov
sbb
fldt
pop
add
mov
adc
xchg
gs
lods
jp
cmp
cmp
mov
or
sub
lock
push
in
sbb
ss
out
fwait
repz
fistpl
jmp
sbb
sub
jnp
sub
loope
std
in
lcall
fwait
xor
push
pusha
inc
pop
or
cmp
and
clc
fcmovb
shl
in
pushf
mov
nop
jmp
pop
ja
adc
xor
and
push
add
fxch
leave
push
iret
fbld
sti
sbb
sub
gs
push
jnp
imul
test
aad
sbb
sub
gs
push
jnp
imul
inc
jp
push
or
xchg
pop
add
iret
jbe
cs
call
mov
sbb
mov
inc
ficomps
ja
lahf
dec
push
add
push
in
pusha
sbb
mov
jnp
dec
sub
arpl
js
mov
or
pop
mov
fs
mov
repz
xchg
jp
movsl
jns
adc
ds
sub
adc
push
jp
repnz
lods
sahf
dec
into
repz
add
xorb
xchg
ror
mov
adc
and
scas
mov
mov
xlat
das
and
testb
add
and
loopne
out
std
or
and
sbb
out
xlat
xchg
ficompl
mov
mov
outsl
shl
scas
pop
push
dec
repz
rcrl
jb
cmp
out
and
cmp
iret
lcall
mov
outsb
cli
decl
lahf
push
fidivl
cli
and
daa
push
pop
mov
movd
ret
mov
nop
push
rcll
stc
adc
jbe
in
mov
dec
test
and
lods
jecxz
addb
dec
testb
cmp
fstpt
out
cmp
ret
lret
loope
mov
dec
bswap
or
adc
les
lret
xorb
stc
dec
shrl
andl
dec
or
add
out
addr16
gs
sahf
and
push
inc
stos
bnd
leave
sahf
nop
cmpsl
add
aad
into
scas
cmpsb
movb
jae
insb
adc
add
adc
jp
pop
jmp
xchg
scas
inc
mov
jp
inc
imul
in
pop
stc
jmp
loopne
call
inc
mov
adc
inc
mov
out
push
push
jno
jmp
das
mov
into
sub
inc
ja
sahf
in
add
pop
mov
inc
jb
jmp
and
xor
jp
sub
sbb
je
aad
adc
push
pop
mov
pop
xor
push
push
add
mov
pop
clc
dec
or
and
xor
sub
mov
ja
roll
hlt
mov
jle
leave
mov
in
sbb
sbb
mov
inc
cs
fs
jo
cli
call
inc
dec
jbe
adc
jge
test
dec
imul
xchg
js
das
faddl
pop
movsl
daa
js
cmp
mov
testl
rcll
ret
adcb
fs
mov
fidivrl
dec
fdivrl
pop
xor
scas
dec
pop
inc
ret
sub
mov
ret
jg
adc
in
pop
mov
outsl
xor
pcmpgtw
cmpsb
iretw
mov
xor
orl
nop
push
pop
push
xchg
rorl
ret
pop
loope
push
fbld
inc
add
mov
cs
lret
outsb
imul
fcmovne
sub
mov
hlt
in
cli
xor
add
xchg
push
jns
mov
pop
ljmp
out
mov
xchg
push
add
xlat
cmp
cmp
icebp
pushl
xor
add
xchg
rol
dec
push
cltd
inc
jg
dec
push
int3
stos
ljmp
bound
lcall
push
scas
xchg
inc
ret
bound
cmp
dec
fbld
adc
sti
lahf
lock
inc
cld
cs
sub
in
xor
xor
das
jle
in
mov
rcrb
hlt
mov
pusha
cmpsb
sbb
aam
mov
xchg
addl
cld
dec
pop
xchg
loopne
ret
adc
les
xor
sub
sub
insl
add
cmp
xlat
in
xor
mov
and
and
push
lea
sbb
sub
and
imul
mov
cmp
jnp
pop
mov
jg
xchg
fistpll
push
int
cmp
jb
mov
test
vcvtsd2si
icebp
iret
xchg
sub
and
fcmovnu
mov
lea
lock
or
xor
cmp
inc
jge
repz
jg
dec
sbb
jl
aas
insb
mov
jns
call
mov
loope
adc
mov
lock
popf
cmp
shll
out
push
cmc
sarb
stc
jecxz
inc
cmp
jecxz
jo
lods
fst
test
mov
inc
inc
xor
cmp
dec
sub
cli
ret
sub
aad
or
mov
imul
or
jb
pop
popa
clc
and
sub
and
test
sub
mov
mov
leave
fwait
into
pop
jne
mov
lods
iret
clc
sub
cmpsl
out
rol
cmp
push
dec
lahf
jecxz
sbb
mov
cmc
popa
out
ss
insl
je
sbb
fwait
stos
inc
xor
jne
leave
mov
mov
das
out
xchg
scas
aas
jecxz
arpl
sbb
xchg
into
add
jnp
inc
data16
xorb
mov
sbbl
mov
mov
pop
repnz
inc
adc
fs
insl
xchg
rcr
movsl
mov
ret
addr16
mov
adc
arpl
enter
aam
lds
lahf
fisttps
int3
dec
aaa
out
sahf
adcb
add
mov
mov
leave
mov
test
outsl
or
lcall
jl
test
dec
into
in
in
fstpt
xchg
sbb
enter
pusha
add
mov
inc
test
loope
xchg
and
pop
mov
ljmp
mov
adc
popf
repnz
ret
pop
stos
jecxz
test
cmp
insb
xchg
inc
nop
dec
xor
xlat
scas
jg
mov
das
cpuid
xchg
mov
and
xor
daa
sbb
cmc
test
jecxz
add
jge
aam
or
mov
out
icebp
out
enter
in
mov
and
in
test
das
mov
cmc
inc
push
jg
dec
repnz
pop
dec
insl
pop
inc
jle
jp
popf
in
pushf
sub
jge
scas
fstps
mov
lret
jmp
out
jle
cmpsb
in
jnp
inc
scas
jle
out
dec
dec
sahf
cltd
adc
add
dec
sti
stos
cmc
les
int
jmp
push
add
decb
out
push
push
cmp
cmp
xchg
jge
outsl
sub
cmp
inc
adc
push
pop
aas
out
adc
icebp
mov
or
xor
xor
mov
aaa
cmp
popf
xchg
pop
mov
pop
sub
dec
and
pop
lret
jp
aaa
les
dec
xchg
mov
mov
inc
mov
movsb
imulb
movsb
add
dec
or
hlt
mov
or
outsl
jne
cld
lds
ret
lods
clc
xchg
repz
rcrb
testl
push
es
pop
pop
rcrb
push
enter
dec
insb
mov
push
addr16
testl
xchg
mov
imul
xchg
pcmpeqd
pop
jae
lcall
mov
roll
mov
dec
mov
jl
leave
ja
sarl
adc
ss
in
pop
xchg
xor
add
or
es
in
lods
fdivrl
insb
out
pop
andb
add
mov
mov
aas
mov
jo
cld
imul
ss
cld
inc
jb
and
cmpsb
mov
sub
cld
push
add
inc
sub
mov
mov
rcr
push
sub
xor
fs
mov
pop
and
es
ss
lods
orb
cs
lret
test
jb
add
jp
sub
push
mov
inc
rclb
aas
mov
mov
jl
mov
insb
and
xchg
ljmp
mov
mov
cmpsb
lret
xchg
sbb
out
add
jl
insb
push
push
and
pushf
cltd
mov
jmp
daa
insb
stos
out
mov
mov
inc
fistps
lds
fs
xor
sti
scas
lock
gs
inc
and
add
arpl
mov
repz
or
mov
lret
daa
pushf
popa
jbe
cmp
loop
push
fisubrs
std
mov
cmp
or
test
mov
fsubl
cmp
dec
dec
xor
cmp
sahf
dec
aam
pop
jmp
or
fwait
lds
push
xor
repnz
push
dec
or
adc
mov
adc
aas
pop
mov
push
ds
dec
push
not
xchg
pop
cmc
nop
aaa
pushf
loopne
aad
ds
jae
outsb
mov
pop
out
push
lea
imul
xchg
lods
pusha
fiadds
cmc
mov
mov
lods
jne
adc
xchg
cli
sbb
adc
push
inc
in
cmpsb
repnz
jno
dec
xor
push
jmp
sbb
mov
xchg
push
mov
aaa
adc
shl
shl
and
scas
add
cmpsl
in
mov
addr16
add
sub
and
pop
dec
pop
add
or
aaa
xor
or
xor
mov
dec
out
sahf
adc
outsl
ljmp
add
mov
bound
pop
xor
mov
mov
and
sub
sub
dec
lods
test
pop
xchg
mov
mov
mov
stc
jbe
mov
repnz
lahf
daa
xor
sahf
ret
int
pop
aad
xchg
sbb
sub
in
add
sbb
inc
in
dec
dec
cmp
outsb
add
fwait
in
adc
popf
out
mov
xor
sbb
aaa
fcomps
flds
iret
in
jo
jge
ds
xchg
prefetch
pop
rcrl
sarb
push
add
rcl
cmp
sbb
xor
mov
lret
or
dec
mov
stc
sbb
imul
in
pop
sub
sbb
xchg
adc
fdivrl
mov
inc
sub
adc
imul
inc
pop
cwtl
push
or
lock
out
fnsave
mov
movsb
enter
nop
imul
mov
shlb
mov
xchg
insl
dec
pusha
jle
pop
fimull
pop
mov
test
jnp
pop
jae
test
out
dec
lock
icebp
pop
in
xlat
fwait
icebp
xchg
in
and
fsubrl
mov
notb
adc
sub
mov
jae
mov
pop
add
loopne
ljmp
ret
pop
cmp
and
sbb
inc
pop
xchg
int
and
sbb
leave
jb
in
jne
dec
int3
movsb
fsubrp
mov
into
push
xor
mov
mov
inc
sub
xor
mov
mov
jbe
mov
int3
mov
packssdw
in
fdivs
lock
jmp
and
sbb
adc
pusha
cmp
stos
push
push
mov
ficoms
mov
jo
add
mov
insb
fsts
cmp
and
adc
sub
pushf
test
loope
sub
mov
shll
movsl
xchg
in
push
insb
sbb
call
test
test
daa
out
jne
cld
outsl
mov
lods
xchg
jmp
and
fbstp
push
jp
mov
mov
jae
daa
jmp
lret
add
js
sub
xchg
insl
push
stos
mov
iret
add
push
shll
dec
cltd
adc
cmpsb
jne
jg
movsb
mov
das
stos
mov
mov
das
mov
add
or
loop
sub
aas
dec
add
sbb
lret
dec
mov
out
movsb
dec
test
jbe
inc
mov
cmp
popf
loope
ss
adc
and
xor
ja
out
stos
sbb
in
insl
out
push
push
rolb
sbb
rcll
push
pop
rol
xchg
add
inc
lcall
inc
dec
or
test
call
es
fnsaves
inc
stc
push
inc
sti
pop
pop
cmp
cmpsb
aad
sub
jne
cmovge
divb
xor
repz
stos
test
xchg
dec
mov
mov
ljmp
in
js
sbb
enter
popa
jle
and
inc
aas
cmp
mov
xor
xor
popa
jnp
repnz
inc
lods
lret
or
sub
ffree
mov
dec
jmp
fists
jg
xor
add
popf
mull
inc
mov
lret
push
cmp
insl
jle
jnp
outsl
jmp
repnz
js
icebp
or
jne
pop
xor
aad
sbb
scas
je
cltd
lret
and
dec
stos
pushf
popf
xchg
push
in
pop
pushf
call
leave
xchg
cld
icebp
mov
mov
movsl
mov
xchg
aad
fimull
mov
mov
inc
sahf
insb
fdivl
fldt
bound
and
adc
pop
push
or
outsl
push
push
inc
sti
je
pop
or
cmpsb
addl
push
cmc
pop
pop
je
xor
adc
scas
in
mov
push
in
ret
adc
bound
scas
mov
cltd
addb
mov
cmp
inc
pop
mov
repnz
cmp
cld
test
inc
dec
pop
in
xor
out
clc
jle
dec
mov
hlt
xor
outsl
mov
mov
mov
and
incl
lock
and
lcall
push
shrb
rorl
mov
mov
cmp
inc
repnz
mov
test
xchg
jbe
fdivr
into
sbb
inc
movsl
mov
push
xor
push
xor
jb
xchg
add
or
push
cli
push
or
enter
jecxz
and
lods
sbb
es
and
mov
dec
mov
les
imul
mov
fildll
and
xor
addr16
loope
lret
adc
push
inc
loopne
jae
jb
lods
pop
cmp
outsb
push
and
jle
jge
imul
aas
xchg
addb
mov
xor
pop
inc
mov
test
xchg
cmp
popa
insl
and
pop
adc
sbb
mov
nop
add
out
push
mov
loop
andl
mov
mov
sbb
sub
sbb
xchg
adc
mov
cwtl
in
es
xchg
out
push
call
cmpl
enter
scas
fsubs
enter
push
pop
aas
movsb
in
stc
sub
loop
add
add
rclb
sahf
in
imul
pop
stc
cmp
xlat
lcall
jg
sbb
hlt
ret
out
std
pop
fwait
outsb
mov
imul
push
cld
data16
mov
cmp
roll
adc
ss
fisttpl
push
lret
sbb
inc
and
cmp
add
fsubrs
fwait
stc
pop
inc
mov
in
mov
push
cmpsl
fnsave
outsb
inc
sub
xor
fstpl
cmc
jl
imulb
pop
push
jns
cld
xor
test
call
jge
in
cmc
das
test
adc
push
outsb
adc
mov
outsl
dec
mov
gs
fnstenv
inc
fisubrs
roll
test
pushf
adc
flds
sub
push
sub
fists
mov
pusha
adc
ret
imulb
int
aas
pop
aaa
xlat
mov
xchg
fcmovnu
rcrb
cmpsl
and
pop
inc
nop
inc
xchg
loopne,pt
push
sbb
push
push
mov
enter
adc
push
push
push
loope
sti
cld
cmc
adc
sahf
add
enter
inc
push
pop
scas
jns
fwait
cmp
and
loope
and
push
and
fwait
sub
sahf
dec
inc
aad
imul
sbb
adc
inc
fisubrs
cmp
or
pop
jge
mull
pop
dec
adc
out
lahf
push
pop
ret
xchg
ret
mov
dec
jne
cld
int
mov
insl
xchg
repz
push
loop
fbstp
loope
nop
mov
loop
scas
jno
pop
push
cltd
iret
pop
in
loope
ljmp
leave
adc
sbb
dec
movsb
jge
pop
in
aas
pushf
add
and
push
mov
xor
movb
mov
jb
popf
pop
mov
jno
cmp
and
inc
mov
call
loop
xor
push
sbb
sbb
adc
rcrb
jnp
mov
les
icebp
outsb
pop
fs
or
lret
adc
lock
cmc
push
sub
data16
fmull
out
cmp
jno
add
inc
enter
pop
inc
mov
inc
jle
testb
jb
jo
cmp
push
lea
and
insl
mov
pop
mov
loopne
adc
out
lods
and
pop
xor
divl
add
daa
mov
sbbl
lods
es
shr
icebp
xchg
cmp
pop
inc
inc
call
outsb
and
test
or
jo
xor
jl
and
pop
dec
imul
push
sub
inc
pop
sub
jbe
lods
pop
mov
sub
shrb
outsb
push
push
xchg
sub
push
jo
pusha
or
fwait
lret
call
jne
mov
push
pop
jno
dec
xchg
adc
imul
dec
adc
and
ret
or
popa
out
sti
andl
cmp
stos
fld
cmpb
fs
jb
mov
pop
out
lcall
push
pop
loopne
mov
ret
lcall
test
dec
loopne
imul
adc
and
sbb
aaa
cmp
xchg
dec
mov
call
stos
or
popa
outsb
sarl
dec
sbb
jne
call
mov
js
jne
nop
pop
ret
clc
mulb
mov
movsb
sub
std
cld
sbb
outsb
jo
rol
pop
fs
sbbb
stos
gs
pushf
add
scas
sbb
sub
cmp
mov
inc
call
sbb
in
hlt
mov
or
adc
pop
dec
scas
pop
sub
xor
inc
add
adc
notb
fstps
xor
das
sti
cli
mov
ss
test
xor
pop
ss
sbb
cmc
xchg
add
xor
inc
adc
shrb
mov
insl
cmp
and
bound
outsb
mov
adc
leave
push
adc
pop
int3
or
push
in
jns
pop
cmp
pop
mov
adc
roll
sarl
sbb
pop
std
mov
push
dec
rorb
xchg
mov
xchg
fisubs
bound
pop
inc
lahf
addr16
and
rcll
movsb
hlt
xchg
jl
jae
in
jbe
or
mov
or
inc
mov
xchg
ljmp
cmp
mov
das
xlat
icebp
push
jns
stos
jae
mov
mov
out
insl
jo
mov
mov
mov
jl
addr16
ss
idivb
inc
xchg
pop
aaa
test
pop
sahf
shl
push
mov
in
xorb
xchg
sbb
sarb
int3
mov
movsb
lcall
dec
pop
enter
pop
pusha
pop
stos
dec
in
fsub
aad
fstpl
mov
jbe
jmp
dec
call
leave
or
mov
mov
and
clc
mov
das
imul
aad
add
inc
dec
mov
ss
pop
ljmp
mov
lea
popa
xor
inc
icebp
mov
pop
dec
jge
mov
jns
jbe
inc
int3
mov
cld
and
xor
aad
fdivs
mov
popf
or
mov
enter
in
cmpsl
add
xchg
out
pop
mul
scas
sub
mov
xor
repz
call
adc
stos
xlat
mov
ljmp
pushf
out
movsl
mov
mov
cld
test
movsb
jge
ret
cmp
inc
scas
jg
stos
je
fadds
shr
rorb
xor
imul
mov
jp
js
pusha
test
push
xchg
mulb
imulb
push
ret
jecxz
sbb
pushf
sub
in
mov
cmp
repz
mov
xor
lret
inc
and
ja
pushf
aas
add
dec
xorb
jmp
scas
push
insl
xchg
imul
mov
mov
cmpsl
adc
cli
xchg
push
test
sbb
or
fwait
insb
inc
frstor
push
in
das
adc
sbb
repz
jae
lcall
aaa
sti
lds
inc
pop
cltd
arpl
add
adc
jp
add
popf
repnz
xchg
xchg
mov
repnz
movsb
xor
mov
sub
mov
mov
insl
shl
push
push
aas
fists
mov
mov
xchg
mov
int
add
and
call
loopne
pop
rclb
movl
xor
and
aas
clc
cltd
pop
push
xchg
sarl
in
mov
pop
lds
dec
mov
sbbl
jbe
enterw
scas
pop
cmc
leave
test
pop
loopne
mov
out
push
dec
jg
mov
mov
mov
in
or
xchg
mov
mov
in
aad
sbb
sub
gs
push
jnp
imul
test
aad
sbb
sub
gs
push
jnp
imul
test
aad
add
or
cmp
dec
push
jnp
imul
movsl
scas
cmc
fcomi
dec
aad
inc
adc
in
mov
add
in
mov
test
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stc
add
push
fldenv
leave
ss
testl
popf
pop
xchg
dec
mov
ret
sub
sbb
or
stc
push
jmp
ss
mov
xchg
pop
scas
dec
mov
call
or
stc
mov
leave
inc
mov
insb
mov
dec
mov
dec
les
xchg
inc
mov
xchg
addr16
cmpsb
inc
lea
jne
push
jo
and
sbb
mov
push
insb
fimull
or
aad
push
ss
inc
push
test
mov
mov
shrl
mov
test
fidivrs
xor
xlat
sub
pop
cmpsl
mov
xor
or
stc
push
jmp
ss
push
mov
sti
hlt
add
jbe
pop
and
lcall
jmp
leave
loopne
test
mov
inc
xor
push
ret
dec
mov
jnp
stc
push
jmp
jnp
pop
movsl
adc
mov
aad
cmpsb
jo
fsubrl
movsb
xchg
pop
or
fsts
ss
mov
jns
imul
cmp
sub
sbb
or
mov
dec
mov
cmp
adc
out
add
aad
subl
lahf
pushf
inc
mov
push
movsl
pop
mov
pand
out
jecxz
hlt
dec
xchg
mov
jne
jl
pushf
jne
divb
or
jbe
xchg
pop
cmpsb
dec
mov
sub
sbb
or
stc
push
jmp
ss
mov
xchg
pop
cmpsb
dec
mov
sub
sbb
or
stc
push
int3
inc
inc
pop
out
inc
and
dec
push
leave
pop
in
pop
aaa
jo
mov
mov
cs
mov
sub
je
out
inc
xorb
inc
add
push
mov
xchg
jnp
das
jg
sbb
xor
nop
mov
hlt
stc
nop
dec
sub
imul
test
movsb
pop
mov
and
scas
and
inc
mov
inc
fisubrl
mov
jmp
xor
push
int3
push
das
or
shl
jecxz
or
sbb
push
subl
out
std
scas
addl
pop
and
bound
dec
mov
in
and
cltd
pop
aad
jge
sti
cmc
pop
inc
jg
xor
in
pushf
mov
out
addr16
es
fucomi
rcll
jp
jno
arpl
jmp
arpl
sti
clc
or
add
inc
cwtl
jp
in
lea
cmpsl
sbb
int3
or
mov
mov
push
int3
int3
cli
packuswb
popa
pushf
xor
cmp
neg
pop
inc
push
js
das
or
mov
ja
and
push
sbb
orl
movups
and
jl
push
das
cwtl
sub
sbb
icebp
cld
sub
imul
sar
jmp
and
aad
or
test
xor
xchg
into
dec
push
stc
icebp
in
push
pushf
ja
bound
xor
xor
stos
inc
add
in
sti
sbb
clc
ds
jne
call
push
cmp
and
fdiv
dec
filds
outsb
popa
sub
fwait
or
pusha
scas
and
pand
xchg
jnp
cltd
andl
xchg
sbb
xchg
mov
enter
xor
loope
jnp
fcoml
inc
cwtl
adc
jbe
mov
rcl
sbb
es
and
ficoms
cmp
add
lahf
repnz
das
repz
pop
andb
mov
cmpsb
fwait
je
push
imul
sbb
push
mov
sub
xor
or
cmp
sbb
xchg
lods
add
adc
or
xchg
dec
sbb
and
icebp
jo
cmp
cltd
and
stc
push
stos
or
xchg
repz
jecxz
imul
mov
jle
sbb
icebp
push
pop
sbb
scas
cmp
push
out
dec
addr16
push
sbbb
xor
and
test
cmp
mov
push
gs
mov
add
xchg
inc
cwtl
out
sbb
jle
iret
int
sbb
orl
in
ret
clc
ss
out
out
out
adc
mov
popf
push
cwtl
dec
dec
dec
enter
mov
fsubp
pop
ret
push
bound
or
cwtl
cmp
xchg
shlb
stos
push
aam
and
push
aas
aas
movsb
sbb
mov
gs
dec
shl
arpl
xchg
aaa
xchg
pop
sbb
push
mov
xchg
pop
scas
sbb
test
push
arpl
int3
sub
daa
mov
jbe
and
cmpsb
out
mov
and
insl
cwtl
inc
push
sub
push
jmp
rcll
mov
push
mov
lea
and
xchg
xchg
mov
js
pusha
push
xchg
notb
pop
add
movb
cmp
in
cs
mov
cltd
sub
pop
xor
pop
out
lret
aad
and
iret
mov
mov
jg
aad
add
push
jg
cmpsl
mov
scas
mov
jbe
ret
shll
xchg
mov
and
pop
lods
add
gs
mov
dec
enter
insl
mov
fistl
fisubl
add
fsubrp
lods
test
jnp
stc
push
xchg
dec
jl
sub
ds
sti
push
fiaddl
sbb
xor
pop
cmp
push
dec
xor
inc
push
fwait
int3
ss
sub
jecxz
fsubrl
fistpll
pusha
imulb
out
pushf
jno
ja
mov
adcb
not
repnz
add
or
das
cwtl
pop
mov
or
dec
mov
add
outsb
pop
push
shrl
insl
cmpsb
lea
jne
mov
xor
inc
hlt
mov
jo
xlat
scas
rorl
inc
insl
rorl
jae
inc
sahf
sti
xor
pop
notb
cmc
sub
std
push
in
dec
outsl
gs
out
or
and
lds
xor
xchg
xor
and
xchg
idivb
fdivs
pop
pop
ss
subl
hlt
xor
stc
adc
call
fisttpl
or
int3
int
ds
adc
pop
xchg
or
add
xor
std
mov
inc
jl
push
loopne
sbb
sbb
sbb
xchg
xchg
push
daa
mov
xchg
cmpsb
add
jmp
jne
xchg
push
aas
push
add
pop
out
movsl
adc
sbb
icebp
add
jns
cmpsb
pusha
sbb
pop
dec
setle
inc
stos
mov
jecxz
xchg
mov
and
gs
pushf
xchg
xor
mov
and
in
xor
and
in
movsb
lret
lret
ja
les
and
ja
cmp
fstpt
mov
sbb
add
in
sbb
push
inc
rclb
call
pop
nop
arpl
add
xchg
mov
cltd
int3
cld
jne
imul
pop
mull
adc
jl
push
dec
cmpsl
push
mov
or
xchg
aad
mov
xchg
pop
mov
xchg
jnp
lcall
jbe
jb
xor
xor
mov
and
cmp
hlt
std
mov
mov
repz
lcall
cmpsb
xchg
dec
xchg
jecxz
call
cmc
pop
imul
jb
ffree
or
mov
ljmp
aam
dec
into
xchg
out
pop
shrl
pop
loope
outsl
shll
into
fnstsw
jb
dec
sub
fwait
push
jo
fldt
or
sub
imul
int3
scas
sub
and
add
add
dec
mov
add
mov
xlat
cs
repnz
push
and
nop
adc
fs
scas
in
push
ja
and
jl
adcl
cs
xor
imul
mov
repz
adc
sti
or
cmp
dec
mov
adc
dec
lea
pop
jno
add
push
xchg
test
dec
dec
push
inc
pop
push
push
sub
fstpt
inc
pushl
sti
clc
xchg
sbb
or
cld
pop
sbb
in
dec
push
ja
jae
adc
push
mov
test
pop
mov
stc
enter
sbb
jp
lahf
xor
and
mov
xor
and
out
shr
mov
sub
mov
popf
or
pop
roll
xchg
mov
cmp
ds
sbb
inc
dec
mov
aaa
js
shll
sbbl
add
push
out
sti
sti
repnz
imull
mov
pop
sbbb
and
xor
or
out
movsl
popa
dec
push
loope
sub
std
aaa
sbb
cli
jne
cmc
mov
jne
sub
test
andl
scas
adc
das
das
sbb
outsb
xor
test
ja
addr16
sbb
mov
dec
and
xor
dec
sti
push
notl
jbe
jmp
dec
nop
xor
cmp
push
mov
mov
mov
jns
fs
jo
jl
addr16
scas
test
lock
dec
movsb
fs
and
lret
or
shlb
sub
jae
fs
nop
gs
ss
xlat
jl
enter
cmp
fstl
test
cld
mov
insb
xor
cmp
or
adc
movsb
dec
cmp
int3
xorb
cmpsl
xor
cmp
jb
push
adc
neg
jge
dec
dec
mov
fsubrl
mov
sub
fdivl
sbb
add
mov
mov
or
sub
int3
xlat
jae
enter
xor
mov
popa
popa
into
and
inc
jb
stos
dec
jae
xor
inc
jns
iret
insl
jb
enter
mov
xor
mov
je
cmp
pop
jmp
das
push
sub
inc
pop
ljmp
bound
jo
imul
jmp
sub
movsl
repnz
add
mov
ficoms
pop
jns,pn
inc
xor
inc
fisttpll
pop
testl
dec
jg
dec
enter
repz
cmpsl
adc
scas
aaa
nop
push
dec
pop
mov
cltd
fcmovb
out
mov
cmp
lods
jge
cld
push
add
imul
pop
adc
call
add
dec
icebp
xchg
cmp
sbb
xor
jno
push
lods
jmp
fadds
or
pop
jnp
push
shlb
or
jle
and
fildll
aas
outsl
call
lds
push
adc
cld
movsb
xorl
jp
add
cli
mov
in
jae
xchg
dec
push
xchg
cmpsl
xlat
jl
and
dec
cmp
bound
test
sub
sub
sbb
push
and
fsubs
popf
or
aas
les
loop
add
aam
xor
aam
xchg
mov
fisubs
pop
inc
fnstenv
out
and
mov
jnp
cmp
dec
pop
dec
hlt
outsl
out
outsl
cld
outsl
roll
pop
fwait
mov
add
and
movsb
mov
cmpsb
test
js
xor
jo
cmc
jo
repnz
adc
andb
add
or
dec
loope
and
xchg
xchg
add
subl
lock
imul
and
jbe
xorb
insl
pop
insb
nop
cltd
pop
sub
insl
adc
imul
xchg
sbb
shll
xchg
addr16
in
xor
popf
mov
stos
outsl
call
hlt
dec
jg
aaa
lods
push
dec
cmp
mov
add
fs
stos
push
jmp
jle
and
xchg
jmp
testb
sti
ljmp
clc
es
lods
sbb
mov
arpl
popa
sbb
adc
fsubl
call
mov
lret
xchg
xchg
sub
rorl
insb
cmp
fucom
lret
mov
pop
imul
add
aam
mov
fistpll
popa
loop
xor
xor
xchg
push
adc
push
mov
jne
in
add
sarb
fs
mov
adc
and
test
jb
sbb
dec
mov
iret
and
mov
icebp
add
xchg
dec
jae
jnp
push
xor
ljmp
mov
lods
adc
dec
inc
sub
xchg
mov
cmpsl
add
xchg
out
inc
xor
adc
inc
lds
dec
and
or
lods
dec
aam
pop
js,pt
insb
mov
push
xchg
jae
sbb
arpl
add
xor
fldenv
mov
fistl
inc
insl
jns
ret
xchg
push
mov
sub
cmp
in
pop
insb
push
pop
lea
mov
add
jle
sti
movsb
loope
sbb
test
push
mov
mov
pusha
xchg
mov
mov
ret
xor
fldenv
cmp
repnz
cmpsb
push
sbb
mov
push
inc
out
mul
jmp
or
sbb
imul
mov
and
inc
pop
fnsave
stos
mov
repnz
mov
jp
call
pop
add
subb
into
pop
push
int
dec
int3
fsub
mov
into
outsl
jns
call
nop
add
movsb
movsl
or
cltd
inc
stc
sub
sbb
adc
icebp
cmpsl
mov
mov
rorl
cs
imul
lock
sti
xor
sahf
das
jmp
pop
xor
add
insl
mul
pushf
add
mov
add
movsl
fwait
cmp
cwtl
imul
and
mov
adc
pop
lret
pop
xchg
add
ljmp
jg
add
mov
fmull
cmc
mov
xchg
ljmp
sub
xchg
ja
or
mov
iret
out
add
stos
lret
xor
clc
das
mov
push
mov
in
loope
push
repz
outsl
jne
dec
sub
cltd
jae
cmpl
push
push
adc
aad
inc
dec
adc
pusha
arpl
or
cmp
fmull
jl
test
xchg
push
outsb
mov
aas
jae
xchg
add
cmpsb
lods
push
mov
mov
scas
cmpsl
ss
ss
push
in
cmp
aam
test
mov
cmp
mov
mov
popf
xor
cmp
or
dec
movsb
adc
insb
ss
sbb
cmp
ret
fs
arpl
loope
stos
add
fs
call
es
out
and
daa
enter
imul
insb
mov
or
jle
jp
cmp
or
sti
gs
xor
lahf
inc
inc
fisttps
mov
jne
stc
mov
jae
movsl
xor
xor
out
andb
cmp
jnp
mov
sarl
xchg
xor
dec
ret
cmpsb
jnp
repz
sahf
push
push
jae
stos
lret
rolb
movsb
call
jnp
loope
test
push
fnsave
fs
sbb
repnz
fbld
jle
and
sahf
and
xchg
xor
in
mov
add
cld
push
call
addr16
in
imul
js
add
xchg
movl
mov
xor
lods
out
ret
jnp
in
fsub
fstp
incl
movsb
je
xchg
sbb
out
neg
in
jl
rcrb
adc
or
test
pop
cld
fisttpl
cmc
cmp
jb
inc
dec
jmp
pop
xchg
xor
outsl
mov
in
leave
or
sbbl
cld
addr16
fdivr
popf
insb
pop
sub
cmp
out
dec
mov
ds
adc
mov
addb
jb
add
sub
mov
mov
mov
xchg
int
inc
dec
jmp
sbb
xor
xchg
leave
jle
repz
idiv
mov
mov
inc
gs
out
or
dec
sub
dec
and
out
jle
add
mov
jbe
das
pop
sub
cltd
adc
cmc
and
cmc
incl
xor
test
xorb
jg
test
add
adc
lds
fs
add
mov
repz
mov
cwtl
push
push
jg
mov
lods
icebp
sarb
dec
dec
adc
sbb
loope
push
in
push
dec
mov
test
mov
or
jge
xor
mov
loop
cmpsb
or
xor
mov
adcl
leave
into
jge
sub
sbb
jmp
ja
mov
push
lcall
pushf
push
mov
popf
aam
xchg
or
xchg
sub
sarb
mov
add
push
popl
lods
push
gs
dec
lock
shl
push
pop
mov
cs
xchg
lea
jno
mulb
addl
mov
xadd
mov
test
cmc
sbb
xchg
sub
inc
xor
movsb
pop
pop
mov
addr16
and
and
inc
sahf
ja
dec
lock
and
test
aam
out
mov
push
addb
loop
jg,pt
pusha
mov
cmpsl
icebp
testl
dec
inc
xchg
mov
push
mov
fmull
mov
mov
sub
xor
xchg
and
push
cmc
ds
add
dec
adc
imul
fcoml
dec
pop
inc
cmp
and
pushf
adc
push
xlat
jns
add
or
imul
jns
lock
fisttps
testl
dec
dec
jbe
adc
pop
adc
das
lcall
sbb
push
add
push
scas
jge
repnz
or
or
gs
sub
push
loop
and
stos
cwtl
xor
inc
and
or
jbe
cli
mov
cmp
fbstp
adc
sbb
ljmp
stos
jmp
je
fstpt
movsl
cmp
insl
les
imul
mov
rcll
mov
pop
xchg
scas
dec
mov
adc
push
add
stc
dec
dec
cmp
mov
outsl
in
ret
add
push
repnz
into
pop
out
dec
test
pop
idivl
ja
sub
ljmp
popf
fs
pop
or
push
mov
sub
jmp
std
sbb
inc
push
cmp
mov
xchg
cli
jmp
push
fwait
mov
xor
jb
dec
sub
mov
sbb
popa
or
xor
dec
imul
jmp
dec
mov
test
push
mov
shl
lret
fstps
les
pop
negb
imul
sbb
adc
je
cmpsb
xor
mov
pop
scas
lods
sbb
es
mov
mov
fwait
push
fists
cmp
cmp
dec
sub
xor
inc
sbb
std
arpl
jle
leave
push
jge
repz
fwait
jo
adc
add
pop
loope
cmp
xchg
das
dec
pop
sub
je
icebp
call
sbb
nop
dec
xor
push
mov
jnp
fcomi
or
dec
addl
icebp
inc
xor
enter
cmp
mov
or
arpl
jmp
sub
add
lret
and
cmp
mov
js
inc
and
cmp
adc
daa
jg
pop
mov
mov
mov
cld
testl
sbb
cmp
jno
je
jns
push
in
xchg
push
dec
filds
jns,pt
cmpsl
jp
stos
pop
jne
neg
call
mov
mov
sbb
icebp
shlb
mov
push
xchg
outsb
mov
xorb
scas
adc
mov
fidivrs
mov
pushf
push
push
enter
aaa
jle
lret
push
pushf
sub
outsl
adc
in
and
push
pop
cmp
mov
jl
fnstenv
out
add
clc
sbb
fisubs
cmp
loopne
cld
jmp
xor
mov
pop
pop
in
cmp
out
ds
xchg
lahf
negl
xor
mov
stos
int
je
jb
or
testl
loopne
lock
dec
cli
push
ficomps
test
mov
sub
decb
inc
daa
scas
mov
fidivrl
jae
stc
sub
ficoms
jmp
add
popf
sar
in
aaa
in
adc
in
fcoms
push
out
pop
mov
pushl
or
xchg
ret
insb
nop
test
xor
pop
imul
add
pushf
dec
int3
xchg
les
in
mov
xchg
jne
cwtl
loop
xchg
fs
insl
js
data16
shrb
or
int
cmpsl
ret
mov
lret
push
aas
loop
cmp
cs
cwtl
cwtl
rcl
shll
rcrb
mov
mov
mov
xchg
shll
sahf
sub
cmp
xchg
stc
in
sub
xor
cmp
or
jp
mov
aas
xchg
clc
stos
jmp
jbe
arpl
dec
add
xchg
mov
test
cmp
cmp
lahf
mov
imul
jae
into
dec
mov
ret
cltd
out
mov
jo
mov
inc
jne
bound
dec
imul
pop
mov
and
add
push
pop
dec
push
nop
cs
mov
mov
rcr
inc
dec
mov
fcmovu
stos
stos
xor
xchg
cmp
dec
add
lret
subl
mov
pusha
stos
mov
xchg
inc
ja
lret
test
pop
popf
inc
xchg
pop
xor
add
loope
rcr
mov
push
cld
or
fistl
add
jnp
inc
lds
js
pop
sub
sbb
pushf
repz
adc
mov
push
jne
push
or
pop
sub
or
rcrl
cmp
aaa
xchg
inc
sub
cld
pop
dec
dec
lret
je
pop
xchg
mov
jne
mov
aas
lods
cmp
jle
std
call
mov
mov
sub
pop
adc
enter
or
pop
or
das
iret
sbb
mov
sub
sbbb
xor
jecxz,pt
out
aas
inc
sub
cmpsl
push
sub
mov
mov
push
cmc
out
xor
jno
mov
adc
cmpsb
fstl
sbb
ljmp
jmp
xchg
cmpsb
jmp
imul
je
js
or
sub
lahf
sahf
mov
dec
shl
mov
mov
lock
adc
dec
loop
mov
mov
leave
daa
inc
dec
push
pop
cmpsb
out
add
dec
xor
es
and
xor
push
fildl
inc
cwtl
insb
sub
xor
and
inc
push
gs
sub
and
scas
push
jle
xchg
add
insl
or
lret
or
sti
loopne
fiaddl
subl
je
jge
cs
xchg
push
sub
sub
cmp
pop
cmp
es
test
sbb
fnsetpm(287
iret
or
cmpsl
nop
fwait
out
andl
cmp
and
or
inc
pop
dec
in
daa
popf
addl
into
or
fsubs
leave
ss
mov
xchg
pop
cmpsb
dec
mov
sub
sbb
or
stc
push
jmp
ss
mov
xchg
pop
cmpsb
dec
mov
sub
sbb
or
stc
add
pop
ds
xor
inc
test
jbe
xchg
pop
cmpsb
dec
mov
sbb
or
stc
loop
repnz
leave
jbe
inc
test
mov
jns
cmp
cmpsb
dec
rorl
scas
imul
xchg
cmp
add
lea
sub
adc
add
xor
inc
push
inc
mov
mov
mov
xchg
and
repnz
rcl
cmpsb
sub
xor
data16
add
jae
inc
push
push
inc
mov
xchg
mov
fcmovbe
xor
add
insw
dec
xor
cmp
pushl
out
dec
push
or
shrb
fnstenv
decb
cli
mov
dec
lods
pop
xchg
stc
orb
jecxz
outsb
xor
dec
jmp
int
std
in
pop
push
fisubs
cmp
mov
push
inc
lods
mov
lret
xor
and
in
cld
popf
mov
pop
call
mov
aad
repnz
sub
shlb
push
iret
pop
faddl
aad
xchg
arpl
addl
mov
pop
fldt
mov
xor
add
sub
int
pop
in
adc
enter
iret
cmp
mov
sub
jns
and
dec
fnsave
int
std
adc
mov
push
push
mov
adcb
jecxz
ror
ret
cmp
sub
sbb
or
jp
push
inc
push
dec
add
out
test
mov
xchg
shlb
cmp
jl
push
pop
push
and
and
mov
fistl
cmpsb
scas
test
push
inc
je
push
pop
push
add
xor
push
pop
lret
repnz
notb
jecxz
rcl
ret
and
xor
add
adc
bound
arpl
push
inc
mov
xchg
xchg
and
repnz
rcl
ret
and
xor
add
adc
bound
arpl
push
inc
mov
cld
cli
inc
int
fisubs
test
cmp
ficoms
ret
call
pop
pusha
gs
sbb
and
sub
sbb
les
sbb
xchg
mov
in
fs
ret
outsb
inc
fiaddl
pushf
jns
scas
rorb
push
sub
aad
and
ret
pop
mov
mov
xor
lock
call
icebp
test
adc
inc
mov
cmp
adc
xchg
cld
or
mov
adc
scas
fimuls
nop
adc
mov
in
popf
shrl
test
mov
je
xor
pusha
lcall
repnz
sti
sub
repz
and
daa
xchg
scas
jge
stc
jle
sub
fwait
mov
xor
jg
subl
pop
cld
call
mov
add
jo
inc
rol
cli
pop
enter
jbe
ljmp
call
inc
sub
push
sub
pop
popf
cld
sbb
cmpsl
jae
pop
bound
xchg
cmp
lds
ret
test
dec
inc
test
push
mov
outsl
cwtl
lcall
movsl
push
xchg
out
mov
xor
pop
inc
cmpsb
cld
sub
and
insl
lods
dec
sub
mov
xchg
sub
lods
movsb
imul
nop
pop
lret
nop
inc
pop
adc
sbb
jle
jle
inc
mov
mov
test
scas
or
and
mov
ja
or
add
fs
jbe
or
xor
iret
imul
icebp
lret
ret
sbb
xchg
sub
or
jge
mov
cmp
jb
xchg
hlt
inc
test
mov
or
sti
lods
stos
inc
pop
jmp
lods
lods
scas
std
and
outsl
push
sbb
test
cmp
mov
jle
jo
movsl
pop
aad
adc
dec
rolb
fldt
test
xor
xchg
loop
and
mov
or
and
push
ss
je
cmp
mov
dec
outsb
inc
scas
push
inc
xor
cli
mov
xorl
movsb
imul
jmp
cwtl
push
in
xor
push
jno
jb
jae
ja
call
dec
mov
or
fcoms
subl
pop
lock
mov
ss
inc
sbb
and
mov
cmp
xor
loop
xor
xor
xchg
adc
mov
adc
cmp
iret
bound
jle
jle
cli
in
xor
or
pop
dec
or
push
je
sub
xchg
jge
add
int
jbe
push
adc
inc
push
insl
cwtl
enter
fstpl
push
mov
add
sub
mov
jb
push
add
pop
mov
cwtl
ffreep
jo
cmp
lds
lods
data16
dec
test
and
lahf
inc
or
and
push
dec
inc
lea
loopne
jb
mov
ljmp
jecxz
xor
cmp
arpl
out
xor
test
add
xor
mov
push
push
outsl
jg
in
jmp
mov
gs
mov
mov
mov
push
cmpsb
lods
in
imul
test
insb
fisubrl
pop
clc
jmp
nop
mov
mov
or
into
sahf
shll
jg
add
scas
sub
add
push
cmp
dec
push
xchg
add
adc
mov
call
pop
lods
lret
adc
push
xor
in
in
imulb
icebp
imul
or
jecxz,pn
cmp
sbb
pusha
inc
lcall
xor
sahf
rcrl
adc
loop
jnp
lods
pop
mov
aam
mov
jo
lods
rcl
movsl
sbb
fxam
or
jnp
mov
mov
cmc
cmc
mov
enter
lock
adc
sbb
and
mov
sub
outsl
mov
imul
adc
xor
icebp
sbb
mov
xchg
test
pop
jg
dec
inc
cmp
movsb
jb
sbb
pop
jns
loop
xchg
cs
test
out
lock
push
enter
les
xlat
inc
pushf
mov
lret
mov
and
add
faddl
out
in
ljmp
jmp
pushf
sbb
cmp
repz
xchg
movsl
cmp
push
cmpsb
repnz
insb
incb
emms
or
sbb
jo
inc
xor
sahf
stos
push
js
and
mov
add
loope
mov
cli
ret
scas
dec
mov
jp
cmp
out
mov
mov
jne
fxam
in
sub
xor
out
mov
jmp
leave
shll
repnz
dec
mov
loope
loopne
std
test
and
mov
push
sub
pop
ss
mov
cmpl
adc
or
mov
int3
dec
or
jmp
or
adc
int
pop
andb
xor
mov
mov
movsb
sub
sahf
fsubs
inc
cmpl
cmp
mov
mov
ljmp
cmp
push
sbb
lcall
mov
es
pop
ffreep
cmp
cmp
or
out
push
test
ret
sti
cmp
push
roll
and
out
adc
or
xlat
loopne
gs
mov
jns
nop
pop
jmp
lea
pop
and
fdivr
sbb
xchg
dec
dec
loopne
ja
hlt
xchg
inc
into
push
dec
and
pop
cmp
jns
sub
adc
clc
lods
repz
xchg
into
sub
jecxz
xchg
mov
bound
lock
fs
mov
sbb
sub
xchg
ss
mov
or
or
stos
mov
jg
mov
mov
jo
dec
xor
outsl
cld
out
out
mov
les
pop
mov
mov
leave
xor
mov
repnz
mov
sub
or
xchg
enter
loope
cmc
inc
jmp
cmpsb
mov
sbb
loop
je
fisttps
repnz
or
inc
stos
pushf
cwtl
test
pop
add
mov
pop
add
adc
fsubrs
push
adc
ljmp
lret
or
bound
mov
data16
out
insl
cmp
stc
mov
lret
jb
xor
pop
das
cmp
or
shlb
dec
add
aad
push
andb
lea
adc
lcall
iret
jl
mov
xor
xor
inc
push
push
mov
xchg
and
jle
mov
jns
dec
sub
iret
and
xor
mov
sahf
xchg
cs
out
and
xor
pop
ljmp
fidivs
fisubrl
fildll
add
imul
icebp
adc
mov
sub
lods
cltd
cmp
and
jns
or
dec
js
nop
push
or
xor
mov
sbb
daa
jmp
rcr
orl
sti
das
and
shlb
adc
jg
push
js
roll
adc
mov
in
sbb
mov
xor
mov
jbe
lret
in
popa
into
popa
out
cmc
lods
dec
sub
mov
es
rclb
sahf
mov
dec
aad
add
jns
dec
jp
inc
inc
aas
dec
cmpsl
push
ficoml
add
fcoms
add
int3
repnz
mov
mov
movsb
les
pop
std
sub
sets
into
push
subl
sub
mov
das
add
and
pop
shll
push
je
test
ret
mov
in
arpl
cmp
shrl
mov
cld
jb
out
inc
test
rclb
hlt
xchg
push
in
xchg
arpl
add
cmc
mov
imul
imul
pop
dec
or
jmp
je
push
and
push
shrl
add
movsl
imul
jns
int3
imul
or
bound
in
cli
cmpsl
mov
mov
mov
or
dec
out
push
out
jmp
mov
out
inc
pop
mov
xor
ja
mov
pop
xchg
and
popa
push
xor
test
push
jle
orb
pop
movsl
jmp
out
push
and
and
out
jne
sbb
and
sar
inc
jecxz
lea
shrb
arpl
ljmp
and
xchg
jnp
and
clc
filds
jg
test
outsl
sub
mov
and
sarb
pop
adc
jecxz
imul
in
out
jo
in
aam
mov
data16
dec
loop
and
leave
xchg
in
arpl
mov
xchg
inc
mov
je
faddl
scas
mov
je
or
fdivrp
jbe
arpl
inc
pop
cmp
ss
cmpsl
mov
outsl
jp
loope
pop
test
jae
cwtl
clc
arpl
inc
pop
push
out
or
or
adc
imul
movsl
jne
cltd
xchg
out
pop
dec
lods
cwtl
cmp
popf
pop
mov
cmc
push
sar
sbb
mov
mov
lahf
dec
es
test
lods
cwtl
inc
add
scas
or
mov
icebp
or
or
adc
pop
cmp
cmp
add
repnz
idivb
or
jns
inc
sbb
mov
fs
and
mov
jecxz
jg
pop
dec
icebp
repnz
sub
fidivrs
gs
sub
mov
mov
hlt
dec
loope
aam
add
cmpb
or
sbb
mov
mov
mov
or
cmc
mov
adc
pop
jg
push
js
andb
loop
mov
daa
sub
push
xor
in
cmpb
out
and
lret
stos
pop
aad
fdivl
movsb
repnz
adc
sub
js
leave
arpl
jbe
loopne
out
stc
inc
cwtl
clc
mov
dec
aam
dec
ret
rcll
sub
mov
mov
mov
rorb
jge
mov
push
into
jno
lods
mov
mov
orl
mov
shll
mov
and
lea
xchg
dec
daa
xchg
mov
and
sub
pusha
or
cwtl
jmp
push
pop
pop
xor
test
xchg
scas
clc
or
xchg
aam
or
adc
dec
mov
test
in
push
pop
xchg
test
inc
enter
jmp
mov
mov
push
sub
jo
and
push
das
ficoms
mov
push
aad
cwtl
test
add
or
dec
cmpsl
dec
sub
and
pop
inc
pusha
std
jmp
sub
adc
adc
mov
jo
aam
jns
lds
lods
push
jbe
dec
aas
inc
mov
popf
xor
imul
push
xor
stos
icebp
xor
test
cmpl
movsb
add
es
mov
sarl
add
xchg
pop
into
dec
outsl
sti
adc
mov
xchg
movsb
leave
jecxz
mov
ficompl
test
add
pusha
jecxz
inc
inc
sub
sbb
mov
decl
xchg
ljmp
fstps
icebp
xor
stos
fisubrs
pop
fstl
add
in
mov
imul
pop
repnz
adc
add
jge
xchg
push
es
jp
scas
push
aaa
cltd
jmp
roll
sub
sbb
push
arpl
cmp
addr16
cmpsb
addl
add
cmp
fidivrs
out
jae
jge
loopne
ja
cli
cmpb
jbe
negl
and
mov
push
push
or
ss
pop
cli
add
mov
ljmp
out
xchg
andl
mov
add
out
jnp
sbb
push
dec
lret
pop
xchg
cmp
jno
jo
add
movsb
in
leave
call
repnz
loopne
jp
aas
xchg
jl
and
js
outsb
std
pop
or
mov
and
dec
inc
rolb
addl
push
cmp
inc
dec
imul
dec
sub
adc
int3
mov
inc
inc
enter
mov
pop
mov
xlat
sbb
dec
out
push
lock
pop
inc
aaa
das
and
jnp
stos
xor
pop
inc
mov
fs
fsubs
dec
dec
pop
ljmp
ja
fisubrl
push
outsb
mov
sub
fdivl
xor
pop
mov
or
cwtl
stos
push
or
stos
out
push
jns
js
rcrb
cmp
out
adc
sub
loope
jmp
mov
mov
sbb
lcall
js
jae
out
je
inc
scas
jnp
out
dec
xchg
sbb
test
sub
ljmp
out
js
stos
jmp
mov
and
movsl
outsl
mov
jns
jno
push
jo
aaa
jmp
sahf
gs
dec
outsb
mov
pop
repz
add
mov
jnp
sysexit
cmp
or
inc
lods
dec
push
jp
imul
pop
or
cmp
movd
pop
dec
cmp
mov
adc
cmpsb
je
jbe
test
mov
xchg
rcrb
loop
stos
rcll
cltd
mov
push
inc
mov
lods
xlat
cmp
xor
sbb
movsb
out
movsb
dec
inc
or
jmp
push
adc
jge
cltd
sti
cmpsb
test
xchg
add
sarl
add
out
int3
ss
mov
mov
out
enter
mov
rcrb
ds
movsb
push
mov
repnz
pop
add
mov
std
pusha
jb
loop
mov
lds
pusha
push
pop
lods
pop
cwtl
cwtl
fidivs
add
cmpsb
mov
pop
shrb
push
jne
add
rorb
and
int3
dec
cmp
or
pop
nop
pushl
xchg
sbb
jp
dec
add
pop
adc
sbb
jmp
dec
pop
sub
dec
faddp
fwait
cwtl
aad
pop
stos
stos
jb
scas
test
xchg
sbb
das
or
xchg
jp
push
or
icebp
jae
mov
and
ret
xor
push
add
dec
inc
in
mov
sub
jmp
or
cli
rcll
shlb
lcall
stos
cmpsb
fs
push
popf
call
fcoml
ljmp
add
mov
iret
js
push
xor
inc
sbb
mov
lods
push
cld
pop
lret
jnp
sbb
add
adc
pushf
ret
inc
add
rcll
popa
pop
adc
cmp
ret
lock
std
ret
mov
into
lret
jg
js
mov
lods
or
daa
mov
lcall
pushf
shlb
lods
incb
dec
jbe
mov
enter
xchg
jmp
mov
and
inc
leave
xchg
or
mov
pop
add
cltd
cmp
lcall
fdivrp
push
inc
push
ja
test
aad
push
out
loope
shr
in
mov
in
imul
pop
es
pop
xor
xchg
in
inc
sub
lcall
sub
js
dec
cmp
push
xor
xlat
mov
dec
jmp
dec
sahf
movsl
cmp
cltd
mov
sub
mov
jnp
push
jmp
icebp
sub
fcmove
inc
mov
pop
cmp
repnz
mov
push
jo
adc
cmpsl
jo
pop
pop
rolb
js
aam
sub
pop
imul
jns
adc
cmpsl
add
scas
call
jo
inc
mov
sarl
push
dec
mov
fmul
and
int3
jno
popf
aam
dec
pop
loop
mov
inc
push
sbb
xchg
sbb
xchg
push
ficomps
sub
adc
add
inc
pushf
outsb
ljmp
ret
xchg
or
add
repz
add
out
mov
mov
lds
cmpl
and
sub
xchg
ret
ret
pusha
jae
and
hlt
mov
nop
cltd
mov
mov
shlb
push
inc
xchg
leave
sbb
sbb
loop
jmp
outsb
div
testb
in
dec
into
movl
dec
push
or
dec
pusha
xchg
insl
iret
pop
and
jno
and
inc
arpl
mov
jb
sbb
loop
mov
arpl
andl
fwait
lods
lds
ret
stos
jmp
or
adc
mov
xor
jo
fisubrs
hlt
call
inc
shll
fwait
adc
shlb
repz
shlb
pop
imul
xchg
push
or
jnp
flds
sbb
sub
add
or
jecxz
xor
movsl
mov
mov
les
imul
addb
push
rorb
aaa
xor
mov
stc
or
cmp
int
lds
rorl
and
sub
repnz
fnsave
fwait
std
ljmp
loopne
clc
lahf
test
fcmovnu
in
sub
mov
mov
xor
mov
cs
mov
sub
xlat
sarb
or
sbb
lods
pop
sub
or
jbe
push
stos
pusha
into
pop
pop
mov
iret
mov
fbld
xlat
fidivrs
mov
sub
push
scas
aaa
stc
jne
and
mov
sahf
out
sbb
popa
iret
jl
push
adc
es
xchg
mov
cmp
or
sub
test
push
xorl
jg
add
jmp
aas
fcmovbe
and
cli
jns
xor
imul
loopne
dec
and
and
stos
and
sbb
movsl
push
add
std
and
pop
lds
add
jno
pop
mov
shlb
sti
in
push
cmp
fldcw
add
xor
test
sar
repnz
lea
pushf
pop
repnz
repnz
cwtl
repz
pop
sub
insl
aas
fwait
pop
pop
in
jmp
inc
movsb
cmpsb
je
push
movsl
cmc
dec
pop
das
addr16
mov
lret
rorb
xchg
outsb
add
out
xchg
loop
inc
clc
gs
sbb
mov
xorb
addr16
dec
push
pusha
jns
andl
adc
jb
pop
mov
js
loopne
xchg
stc
pop
ret
fildl
xor
adc
and
jecxz
mov
push
or
test
push
xchg
ja
addr16
cmp
mov
pusha
pop
data16
xor
icebp
nop
or
mov
lds
icebp
mov
sahf
mov
cs
into
mov
std
inc
cmp
rcrb
iret
mov
nop
sub
wrmsr
cwtl
repz
ficoms
and
sub
push
shrl
mov
sti
mov
and
fnstsw
adc
cmpsb
and
test
ficompl
imul
and
and
mov
shrb
jg
jge
pushl
xchg
ret
jne
xor
dec
stc
hlt
mov
cmpsb
mov
mov
roll
jbe
outsb
in
push
xlat
gs
mov
js
int
ret
cmpl
mov
push
loope
xor
fidivl
popf
xchg
xlat
jl
jecxz
cs
sbb
movsl
xchg
outsb
enter
and
leave
adc
push
sarl
outsb
aad
mov
addb
xchg
push
or
aas
lcall
aaa
cmp
dec
icebp
inc
shrl
bound
insb
rcrl
popf
mov
cmp
popa
test
arpl
js
lahf
sbb
fsubl
dec
mov
stos
loop
sbb
push
iret
mov
pop
or
mov
scas
fsubl
add
pop
add
fwait
mov
and
or
xor
xorb
mov
jecxz
sti
mov
mov
lock
shl
pop
adc
mov
or
inc
dec
imul
xchg
rcrl
ud0
leave
mov
leave
xor
jg
push
aaa
mov
pop
adcb
sbb
jecxz
or
and
add
pop
addr16
mov
push
mov
icebp
adc
push
mov
notb
push
pop
adc
mov
mov
mov
lds
push
fcom
gs
mov
es
ljmp
rcrb
daa
push
lds
out
pop
jno
dec
scas
pop
divl
mov
aam
outsl
test
lods
mul
mov
mov
les
decl
adc
sbb
cmpsl
add
jle
cmpsl
shl
xchg
cmp
xor
lds
cmp
push
inc
or
pusha
jl
fscale
add
sub
cmp
rolb
sbb
into
cmp
or
daa
das
je
scas
add
scas
lret
shrb
mov
dec
roll
or
mov
jmp
fs
ficompl
adc
adc
lods
push
mov
pop
mov
test
imul
testl
out
cli
cmpsl
or
andl
ret
ret
and
xor
add
adc
bound
arpl
push
inc
mov
xchg
xchg
and
repnz
rcl
ret
and
xor
add
adc
bound
arpl
push
inc
mov
xchg
xchg
and
repnz
rcl
ret
and
xor
push
adc
add
jbe
inc
push
arpl
mov
mov
loop
repnz
rcll
fnsave
int
test
adc
cli
pushf
mov
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
sbb
push
cmpl
add
add
pop
pop
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
out
add
add
add
aam
fadds
in
add
add
lea
push
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
pop
add
add
in
add
ljmp
add
mov
adc
push
add
sbb
add
mov
add
mov
and
roll
lcall
add
add
add
add
inc
add
add
add
add
and
inc
add
add
roll
add
fwait
add
add
add
add
out
add
loop
movsl
add
add
cmp
enter
add
add
add
imul
add
add
add
leave
add
mov
inc
add
add
movsb
add
push
add
rolb
pop
add
add
popa
add
add
add
lret
add
add
or
arpl
add
add
lds
mov
add
add
in
cmp
repnz
add
mov
lea
inc
add
aam
or
cmpsb
add
add
add
inc
add
ja
lret
add
add
add
add
mov
rolb
loop
test
test
ljmp
add
add
xchg
add
push
add
add
in
pop
add
add
add
add
lret
add
fwait
add
add
call
add
add
and
movsl
add
faddl
xchg
add
add
add
add
add
aam
mov
inc
add
add
ja
pop
add
add
add
in
sbb
add
fadds
add
mov
jbe
pop
add
add
sbb
inc
add
add
and
lea
mov
mov
add
add
add
add
int3
add
xor
test
or
insb
add
mov
add
test
in
pop
add
dec
add
add
add
out
add
add
add
pop
add
add
inc
add
into
add
add
add
xchg
push
in
mov
verr
add
add
push
add
adc
jg
ret
add
add
add
lret
add
sub
addb
add
add
add
mov
push
add
add
add
add
inc
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
out
add
pop
add
add
push
add
add
add
push
add
jg
sub
push
or
add
add
add
add
add
add
add
mov
aaa
add
add
arpl
jbe
es
add
and
inc
add
add
add
add
add
lcall
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
ja
arpl
add
add
lea
pushf
add
sbb
insb
add
add
sub
pop
xchg
mov
cli
push
fistpl
nop
mov
mov
sahf
push
push
in
xchg
jg
cmp
jbe
mov
pop
rcrl
pop
arpl
jmp
sbb
pop
test
jo
mov
int3
repnz
lea
push
adcb
push
inc
pop
lahf
arpl
mov
xor
int
adc
outsb
ficompl
cmp
dec
test
jne
dec
cmpsb
insl
fdivl
jmp
dec
aaa
cmpsb
ja
jns
push
mov
inc
cmp
mov
out
mov
ja
sbbb
mov
movb
rcrb
mov
mov
mov
dec
test
cmpsl
sbb
mov
push
inc
inc
and
push
rolb
enter
aaa
icebp
sub
xor
jbe
popw
or
mov
mov
rclb
mov
dec
sub
sahf
call
jns
adc
add
scas
jmp
stos
leave
and
cmpsl
insb
pop
mov
mov
lods
cs
jb
mov
xchg
push
push
cmp
mov
fucomi
fdivp
lods
mov
xor
jmp
sahf
xor
mul
int
loopne
cli
jle
xor
pop
xchg
sub
push
out
int
push
xchg
dec
or
adc
mov
adc
jle
jmp
adc
sbb
dec
fdivrl
dec
dec
bnd
dec
aad
push
cmpsb
repz
cwtl
pop
cmp
outsb
or
cmp
or
movsb
jg
sbb
sub
dec
sub
push
ja
hlt
fsubs
pop
jb
adc
push
or
inc
in
leave
mov
arpl
jae
sub
fs
and
sub
sbb
sahf
stc
push
loopne
inc
ljmp
cli
pushf
es
push
in
xchg
pop
mov
mov
mov
cmp
fldenv
test
into
mov
icebp
into
movsl
mov
aas
inc
jmp
mov
inc
mov
aad
ret
or
fstpl
xchg
mov
adc
push
dec
cs
inc
aad
jle
adc
mulb
xor
adc
sub
xchg
jbe
jno
xor
data16
pop
fstpl
lret
lock
pop
sbb
cli
mov
fisttpll
test
ja
enter
xchg
lds
pop
aad
xor
dec
jno
iret
and
sbb
push
add
mov
stos
es
pinsrw
sub
sbb
dec
push
or
jnp
and
and
adc
mov
xor
repz
sbb
das
or
xchg
pusha
subb
and
sbb
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
