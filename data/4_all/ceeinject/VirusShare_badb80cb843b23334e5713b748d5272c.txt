call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
popf
sahf
sbb
scas
testl
popf
push
lods
ds
push
std
jle
outsb
or
mov
pop
into
insl
jge
lea
popf
push
int3
ds
dec
in
jle
outsb
or
mov
pop
into
insl
jge
lea
popf
push
int3
dec
fsubrs
scas
or
sub
sbb
cli
popa
fisubrl
sbb
xchg
std
dec
or
mov
pop
dec
xchg
mov
xchg
nop
into
pop
scas
jl
dec
es
xor
repnz
clc
mov
xor
xor
add
pop
and
ret
xlat
inc
out
or
fmulp
lock
cmp
jae
sbb
outsl
lret
or
fbstp
lea
jge
popf
sub
push
shrl
xor
lock
jb
push
push
xor
jge
in
call
sbb
push
sbb
fldt
xor
dec
pop
fdivrs
xor
mov
imul
push
sahf
sbb
scas
dec
ficomps
insl
jge
lea
popf
push
lods
ds
dec
in
jle
sub
pop
pop
inc
clc
jae
push
mov
sahf
in
das
addr16
inc
mov
cld
mov
push
fistps
pop
mov
cmp
insl
xchg
add
aad
fadds
xor
add
xor
dec
lret
or
pop
into
insl
jge
lea
popf
push
lods
ds
dec
in
jle
outsb
or
mov
pop
into
insl
jge
lea
popf
push
lods
ds
dec
in
jle
outsb
or
dec
outsl
jg
sbb
pop
test
lret
loopne
int3
jo
sbb
pop
push
inc
and
imul
unpckhps
in
add
lret
adc
mov
pop
ffreep
gs
movsl
imul
or
into
push
lods
test
rolb
scas
push
ret
scas
aam
in
push
cmc
pushf
sbb
fidivl
jns
mull
out
imull
fstpt
andb
sbb
in
enter
pop
imulb
stos
mov
jb
cwtl
idiv
jge
sti
mov
pushl
xor
mov
cld
inc
mov
in
loop
sub
popa
and
add
mov
mov
popf
in
lds
hlt
xchg
data16
push
rol
int
push
fidivl
and
mov
xchg
push
jae
cmpl
mov
jp
cmp
xchg
rep
pop
test
xchg
mov
inc
dec
enter
sbb
mov
sub
cmp
pop
scas
test
loopne
pop
mov
shlb
testb
fprem
fsub
ljmp
pop
cmp
ds
mov
push
mov
dec
ss
ljmp
pop
arpl
xor
adc
shlb
sbb
ret
xor
std
lock
mov
adc
out
int
mov
in
inc
pcmpgtb
imul
jbe
aaa
fwait
xor
adc
mov
and
imull
mov
mov
ja
pop
pop
nop
insb
out
sub
lret
inc
xchg
idiv
push
jb
movlps
or
jle
ds
push
cltd
adc
pop
stos
ja
inc
mov
push
or
lret
js
roll
ret
adcl
mov
pop
or
inc
popf
iret
jae
ficompl
sub
out
fwait
outsl
je
lock
adc
mov
incb
lahf
or
pop
cmp
pop
ljmp
into
sbbb
mov
cmp
jecxz
or
jns
xor
xor
icebp
jns
gs
fisttpl
in
fwait
jp
mov
test
shl
push
shlb
in
movsb
cmc
stos
movntq
sti
aam
jle
into
xchg
mov
mov
jns
add
das
mov
loope
inc
js
data16
sub
std
pop
mov
dec
mov
roll
pop
and
jecxz
rcrb
mov
out
mov
loope
cmp
jno
sbb
xchg
mov
push
mov
jnp
stos
xor
push
call
cmp
repz
stc
andb
aad
jae
in
or
arpl
popf
xchg
repnz
xor
jge
mov
lods
dec
and
out
mov
sar
jno
lds
hlt
mul
push
xchg
ret
imul
xor
stos
arpl
jne
lea
sub
xor
pop
xor
je
jecxz
in
mov
out
jne
fs
test
rorb
add
fldt
mov
pusha
sbb
shll
xor
mov
shll
ficoms
shll
xchg
or
loop
xchg
je
mov
or
ret
inc
out
movsb
pop
add
xor
mov
sub
push
mov
inc
pop
mov
fldt
imul
sbb
jmp
and
mov
xchg
fldl
repz
jecxz
mov
mov
xor
test
scas
jbe
out
or
push
test
in
stc
lahf
sbb
fcompp
sub
mov
inc
addr16
adc
adc
pop
mov
shrl
cmp
movsb
and
ret
jmp
shl
adc
and
loope
xchg
mov
mov
inc
test
clc
sub
mov
pop
jle
xor
fcoml
sti
adc
lods
cli
mov
les
mov
dec
cli
xchg
pushf
daa
add
pushf
in
push
pushf
and
xchg
jb
cmpsl
minps
outsl
das
in
fmul
outsb
add
mov
cmpsb
or
mov
fiadds
and
pop
stos
mov
sub
pop
cmp
cmp
jp
sub
mov
sub
movsl
movsl
hlt
into
add
scas
icebp
mov
xor
xchg
aas
and
out
add
repnz
aas
sbb
mov
pop
fadds
add
cmpsl
dec
das
adc
xor
iret
pusha
ljmp
xor
jmp
out
xchg
and
jae
lret
xchg
and
lret
cwtl
mov
lret
pop
sub
scas
dec
sti
pop
lahf
fcmovu
lret
shr
in
sub
aam
cwtl
sahf
xchg
fnsave
adc
out
inc
in
sar
aaa
mov
xor
call
pop
lods
js
pop
xchg
push
inc
in
xchg
and
sti
ss
inc
js
popa
jle
fucom
pop
inc
fnstenv
dec
sbb
xor
lret
repz
pop
dec
shll
dec
push
jge
dec
sbb
xchg
jno
jecxz
and
sub
ja
aam
push
xchg
inc
mov
pop
shrl
or
push
imul
xchg
bound
movsl
push
insl
or
flds
addr16
jae
mov
mov
and
cmp
adc
ret
push
out
nop
jg
dec
jg
mov
sbb
inc
jb
mov
xchg
int3
test
out
ffree
jne
andb
and
loope
shrl
scas
mov
fbstp
in
mulb
jl
icebp
xor
sub
jg
out
insl
add
aam
lcall
push
and
mov
mov
adc
sub
inc
cmpsb
daa
jbe
out
ret
jmp
arpl
out
shrb
jg
jmp
mov
mov
lock
xor
repz
mov
pop
std
mov
or
mov
mov
mov
pushf
pop
xor
stos
xlat
inc
and
das
sub
pop
pop
fstps
cmp
ret
xor
or
cmpsb
inc
fsubrs
movsl
test
test
pop
dec
and
fisubrs
lcall
stos
jne
fimuls
pop
ljmp
test
mov
mov
test
cld
inc
adc
xchg
or
cmp
pop
les
sub
push
notl
inc
pop
push
add
jl
adc
ja
mov
sub
jle
push
inc
jno
mov
mov
in
mov
mov
mov
fcompl
imul
insl
push
loopne
fs
adc
cmc
clc
xor
pusha
lret
jno
mov
roll
nop
pop
js
pop
mov
das
xor
push
pop
mov
mov
repnz
out
mov
int3
pop
jb
push
pop
in
test
fists
jns
jns
push
or
mov
sahf
loopne
push
mov
xchg
rorl
sub
jnp
sbb
mov
push
pop
les
sbb
adc
ss
mov
add
inc
sbbb
movb
dec
xchg
lcall
and
xchg
sbb
rcrl
cmpsl
test
pop
mov
mov
sbb
subl
out
xchg
or
push
cmp
lret
mov
cmp
int3
imul
sbb
xor
stos
mov
rcrl
or
jge
xlat
lods
dec
aaa
in
and
mov
js
popa
mov
xor
jae
fistps
lods
push
jbe
pop
mov
in
insb
in
adc
enter
rcr
xchg
cmc
js
pop
dec
into
jmp
mov
add
adc
push
jmp
jp
pop
je
hlt
sbb
mov
sbb
nop
pusha
mov
ljmp
shld
lea
fmuls
jno
xchg
mov
js
hlt
js
mov
xor
add
pop
fld
push
and
int3
fidivs
in
rorl
mov
pop
xchg
mov
out
push
jno
gs
mov
fstpt
js
mov
pop
mov
push
jne
int
mov
outsl
cmp
mov
jns
insl
mov
jge
push
inc
xorb
mov
lret
std
test
bound
bound
inc
adc
or
aad
addr16
cli
pop
cs
fs
mov
gs
cli
in
pop
ss
xchg
jno
xlat
popf
addr16
outsb
cld
mov
es
cmc
and
adcb
sub
xchg
rcrb
sub
popa
mov
cmc
mov
sbb
sub
push
jbe
lret
mov
aas
jp
cmpsl
jl
aad
mov
inc
out
cmp
fisubl
xchg
mov
repnz
sbb
lahf
or
ljmp
sbb
cmp
cwtl
mov
andb
add
adc
xchg
mov
jno
ret
movsb
in
imul
pop
shlb
lcall
fwait
imul
dec
cwtl
enter
mov
or
or
xor
jge
call
es
sub
dec
pushf
xchg
mov
cmpsl
mov
sbb
pop
xor
ffreep
ret
arpl
xchg
push
or
xor
jne
dec
dec
jle
xor
pop
ficoml
push
in
sub
sub
test
xor
cltd
shll
lcall
pop
sbb
and
fimuls
inc
addr16
inc
mov
pop
pop
test
lods
dec
rorl
fisttps
push
xor
lock
push
insb
adc
es
dec
xorl
sbb
xor
cli
sub
lds
movsbl
pop
ret
push
xor
cld
insb
outsb
jne
sti
or
pop
daa
das
pop
lods
push
call
sub
sbb
pop
lods
dec
int3
ret
fistl
xor
je
mov
loopne
mov
mov
mov
add
mov
sub
and
adc
mov
jae
cmp
adc
cmp
pop
inc
ja
movsl
gs
lea
ret
in
push
push
ret
xchg
lea
mov
pop
xor
hlt
xchg
push
pop
int3
outsl
mov
and
stos
pop
pop
int
bound
sbbb
jp
mov
jmp
aad
addr16
jb
and
mov
pop
jge
pop
jnp
nop
add
push
mov
lock
ja
fldcw
jns
xor
pop
mov
test
aad
fisubrs
in
push
adc
push
mov
les
jmp
mov
inc
aad
jg
fs
jl
pop
ret
sub
repnz
xor
bound
mov
xchg
and
cmp
xor
cmpsb
out
xchg
leave
fs
push
cmp
in
jl
cmp
int
dec
ljmp
cmpsl
lret
pushf
in
repz
sub
cli
xchg
push
leave
pop
pop
imul
out
fimull
sub
lods
stos
aas
mov
pop
ljmp
shl
addr16
mov
jmp
aaa
loop
pushf
fs
ljmp
mov
and
sub
cmpsl
ret
clc
mov
add
jbe
ficoms
addr16
test
sbb
jb
inc
jnp
xchg
nop
fists
sbb
enter
jae
pop
mov
jg
jge
mov
and
cmp
fisttps
arpl
mov
cmp
inc
jp
prefetch
sbb
adc
movsl
cmp
in
mulb
and
push
xchg
mov
out
or
cmp
lahf
jle
xchg
jle
pop
and
xlat
cmp
and
dec
pop
xchg
cmpsb
or
sbb
imulb
imul
bnd
and
rol
dec
xchg
movl
in
data16
daa
int3
sbb
pop
xor
jle
push
out
push
mov
push
cmp
data16
dec
mov
scas
pop
dec
clc
mov
daa
lds
jmp
jbe
orb
dec
in
or
push
and
rcrb
adc
push
popl
and
js
xor
cmp
stos
jbe
push
ret
adc
jmp
push
mov
xor
inc
enter
xchg
jne
or
notl
testb
xor
sbb
or
stos
lcall
das
dec
xor
sar
sub
jmp
xchg
inc
shl
popa
and
aaa
fbstp
or
sub
test
hlt
jp
cmp
pop
int3
pop
stos
cmp
push
and
rcrl
or
std
adc
sbb
lcall
ret
out
xchg
bound
adc
mov
in
mov
cs
sbb
dec
inc
daa
in
inc
xchg
pop
stos
or
inc
pushf
fldt
xor
cwtl
popf
addl
out
jge
jne
addr16
pop
adc
mov
cmp
fidivrl
mov
pop
cmp
in
cmc
cli
js
movb
movsb
in
stos
push
xchg
out
bound
sub
les
jno
loope
push
aad
jo
outsb
push
andl
into
rcr
aam
insb
mov
fisttpl
pop
push
inc
mov
test
lods
lods
addb
or
jg
test
clc
adc
loop
nop
cmp
popa
mov
test
mov
xchg
mov
lcall
subb
addl
decb
rolb
or
data16
cli
and
push
jo
or
in
dec
push
push
push
lods
xchg
fildl
inc
stos
fs
dec
push
jns
xchg
je
dec
jno
and
mov
pop
shrl
scas
sbb
or
jmp
or
stos
push
sbb
push
and
lahf
adc
dec
mov
mov
mov
inc
jmp
subb
loope
adc
add
stc
add
ss
rcl
jg
or
sbb
pop
hlt
jecxz
and
dec
sahf
mov
and
cmp
imul
outsl
cmpsl
and
dec
cmpb
push
mov
lods
or
adc
xlat
sub
in
in
cmp
pop
jno
jns
jo
lds
jp
jne
push
andb
mov
add
out
jl
into
push
push
ss
flds
and
jb
dec
or
mov
cmp
pop
dec
adc
and
sbb
int3
loopne
xchg
jb
mov
and
pop
mov
ja
sub
shlb
push
js
clc
je
shll
es
pop
adc
mov
inc
repnz
hlt
test
sbb
iret
fchs
mov
and
or
and
imul
in
cmp
in
repnz
mov
arpl
out
loope
mov
insb
mov
add
out
inc
inc
pop
push
es
cmp
add
js
je
mov
fcmovbe
jecxz
push
mov
imulb
jg
xlat
or
test
mov
in
clc
pop
sbb
fnstenv
add
sbb
imul
mov
cmp
push
je
add
in
sbb
cmpl
sarb
aad
xorl
xor
fs
lods
lock
sub
div
pop
adc
jnp
mov
andl
inc
pop
pop
and
pop
sbb
mov
lds
inc
xor
adc
xor
push
dec
notl
hlt
leave
in
cwtl
mov
mov
sub
jle
or
in
mov
jbe
xchg
mov
xlat
pop
cmpsb
in
rorl
push
push
mov
pop
imul
inc
dec
movsl
inc
int3
cmp
incb
push
mov
sbb
jge
fnstsw
leave
dec
mov
jbe
jecxz
outsl
push
jne
hlt
sub
lret
pop
inc
sub
aad
xchg
mov
pushf
push
xchg
notl
jne
out
push
mov
mov
inc
lahf
rolb
and
jns
xlat
sbb
ret
dec
jne
pop
mov
adc
lods
xlat
rolb
icebp
pop
dec
cld
das
push
outsb
adc
push
jnp
or
mov
test
fwait
mov
add
dec
cli
or
push
or
mov
cs
movsl
dec
jno
push
push
jge
xchg
pop
scas
lock
imul
lcall
pop
mov
aad
mov
or
mov
and
hlt
mov
pusha
stos
rorb
jmp
add
xchg
lds
dec
leave
loopne
cld
notl
das
jmp
inc
loopne
add
sarb
insb
push
cs
xchg
xchg
test
bound
pop
into
aas
mov
pop
aaa
test
pop
rorl
fsub
add
dec
pop
daa
ss
jge
and
xchg
movsw
movl
push
sbb
jl
rcl
add
xchg
loopne
cld
hlt
aas
push
test
sub
mov
inc
cwtl
adc
lods
fs
xchg
inc
rcll
and
cmc
jl
daa
in
or
dec
sub
push
mov
adc
dec
stos
es
sub
scas
hlt
mov
fcomps
mov
cmp
cmp
and
icebp
movsl
push
fnop
mov
jle
dec
out
aad
xchg
lods
push
std
dec
sbb
je
insl
pop
pop
daa
icebp
mov
xor
in
cmp
dec
jns
push
pop
pop
inc
dec
test
loope
lea
mov
out
sub
mov
aaa
cmp
gs
pop
loopne
pop
mull
add
stos
pop
testl
int3
jbe
cwtl
std
cmpb
mov
jb
lret
lds
push
xchg
fists
pop
cwtl
mov
mov
out
xor
inc
xchg
ficompl
std
or
mov
jp
fnsave
mov
outsl
jecxz
ficomps
loope
ret
jg
add
jns
js
out
mov
push
icebp
out
cmp
jo
in
inc
popf
testb
scas
mov
dec
adc
jns
data16
pusha
add
inc
mov
push
pop
sub
adc
mov
and
movlhps
mov
or
daa
fs
jnp
mov
push
mov
mov
insb
lcall
xor
insb
pop
push
or
mov
mov
and
jmp
mov
add
test
dec
fisttps
adc
stos
out
out
jge
in
jmp
fs
xlat
insl
aaa
rcl
nop
out
ljmp
shl
rcrb
arpl
xor
in
jecxz
dec
in
outsb
mov
sbb
adc
adc
lea
push
test
out
jge
into
xchg
and
add
xor
in
lahf
shll
pop
mov
repz
mov
in
add
outsl
ret
push
cmp
mov
jmp
adc
jae
push
clc
shlb
dec
push
in
mov
cs
subl
and
jle
clc
cwtl
pop
adc
movsl
cs
mov
jp
fucom
adcb
clc
fsubl
fisttps
push
cmp
sbb
dec
movsb
movsb
fidivs
sub
add
pop
xchg
inc
mov
push
xchg
xor
ss
add
dec
push
rclb
movsl
mov
mov
adc
push
ret
cmpsb
daa
push
outsb
push
xor
mov
inc
aaa
inc
sub
outsl
je
ret
lock
out
stos
jnp
mov
cmp
mov
pop
or
mov
inc
mov
test
pop
adc
mov
adc
jno
bound
ret
loopne
and
outsb
aam
add
jno
sarb
mov
aad
sub
lods
cwtl
rcl
test
orl
cmp
jnp
fneni(8087
icebp
xor
push
in
imul
push
out
push
and
nop
dec
lock
out
dec
imul
icebp
adc
imulb
lahf
cmc
sti
stc
loopne
repnz
in
jbe
sbb
nop
pop
gs
pop
xchg
cwtl
je
jno
lret
push
aam
cmpsl
icebp
push
fnstcw
ficoms
gs
imul
cld
push
test
mov
xor
loopne
mov
aas
ret
push
aas
aam
add
cmp
adc
mov
mov
push
ret
cli
or
push
or
loope
imul
pmulhuw
jg
xchg
inc
pusha
cmp
adc
dec
jmp
or
mov
push
mov
mov
pushf
xchg
filds
aad
rcr
arpl
into
mov
add
cltd
fdivrp
and
daa
in
mov
jns
subb
xor
in
xlat
mov
cmp
push
test
js
push
loop
sahf
xchg
lods
inc
cld
xor
xor
xor
xchg
daa
in
popa
mov
out
sub
add
arpl
push
or
push
movsb
xlat
test
sub
popf
xchg
pop
pop
push
xlat
imul
jnp
and
jbe
ret
cmpsl
mov
inc
cmp
sbb
ja
mov
pop
inc
clc
mov
inc
js
sti
shlb
cmpb
scas
inc
xchg
mov
xchg
ret
mov
or
lock
adc
sbb
sti
dec
mov
jnp
loopne
movups
adc
jno
inc
push
adc
jne
mov
jne
sbb
jle
setp
dec
movsl
arpl
mov
cmp
into
insl
jge
lea
popf
push
lods
ds
dec
in
jle
outsb
or
mov
pop
into
insl
jge
lea
popf
push
lods
ds
dec
in
jle
outsb
or
mov
pop
into
insl
jge
lea
popf
shrd
mov
dec
in
jle
outsb
or
sbb
sub
cmp
dec
insl
jle
adc
ds
mov
addl
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
adc
lea
mov
sub
in
xchg
sbb
mov
dec
loop
loop
adc
and
jb
bound
mov
lods
sub
repnz
sbb
dec
loope
icebp
push
cmc
mov
mov
pop
rorb
lods
and
or
jecxz
enter
ljmp
adc
jns
cmp
cli
insl
fisubl
shll
xchg
push
std
pushf
dec
out
adc
inc
xor
mov
stos
pop
dec
push
pop
cmp
bnd
loopne
pushf
decb
xchg
mov
cmc
stc
pop
mov
mov
jge
dec
repnz
adc
lods
fldl
lea
arpl
sbb
sbbl
pop
shrl
xchg
loop
inc
mov
sub
cmc
xchg
in
xchg
dec
inc
sbb
sub
ret
insb
repnz
cli
pop
loop
jne
fstl
cmpl
repnz
bnd
jmp
xor
and
jb
jnp
mov
mov
mov
jge
add
lea
push
andl
and
aas
xchg
bound
rorl
shlb
cmpsl
cmp
fsubs
pop
fcoml
ds
jb
xor
mov
jecxz
rorb
xchg
ja
outsb
lret
dec
into
sbb
in
xchg
sbb
mov
dec
bnd
insl
adc
and
jb
in
xchg
sbb
mov
dec
bnd
insl
adc
push
cmpl
mov
ret
pop
mov
pop
mov
outsl
or
out
scas
or
imul
jmp
or
mov
jbe
push
mov
jp
daa
dec
std
xchg
sub
out
adc
or
add
mov
popf
outsl
xor
pop
sbb
mov
test
dec
test
xlat
inc
and
jbe
test
adc
ss
or
sbb
lea
jne
dec
add
ret
fchs
adc
dec
xchg
push
imul
sbb
arpl
lret
cmpsb
scas
es
repnz
repnz
sub
jbe
cmp
das
mov
pop
pop
ret
mov
stos
jmp
in
xchg
and
imul
xchg
sub
jb
adc
mov
xchg
shll
or
stc
test
mov
cld
sbb
mov
push
rcl
cmpsb
pop
dec
rorb
cs
xchg
pop
iret
mov
lret
es
or
out
pop
movsb
lock
repz
fcoms
adc
jbe
xlat
sub
adc
jns
sbbl
inc
mov
dec
stos
lods
idivb
cwtl
mov
xchg
sbb
data16
push
aam
mov
stos
out
out
fisttpl
loopne
mov
pop
cmc
sbb
inc
outsl
lcall
movsl
jge
inc
mov
mov
mov
cmpsb
addl
cmc
mov
movsl
int3
dec
fstpt
mov
cmpsl
pop
mov
pop
jmp
push
cli
or
std
imul
mov
rorb
cltd
and
outsl
mov
sbb
or
in
scas
cwtl
pop
adc
test
or
mov
das
gs
sbb
jbe
cmp
add
cmp
cmp
fwait
jnp
sub
inc
add
sbb
fnstcw
call
xor
sub
popa
pop
pushf
aas
stc
pop
aaa
movsb
inc
sbb
xchg
add
icebp
or
cmpsl
shl
lds
daa
cltd
push
mov
insb
pop
dec
idivb
xor
xchg
mov
das
mov
and
leave
xchg
mov
push
push
popa
js
sbb
xor
std
mov
push
ds
lds
mov
xchg
dec
aaa
fnstcw
loop
je
inc
mov
add
and
movsl
and
cmp
shlb
addr16
mov
mov
les
mov
negl
in
shr
movsb
aam
dec
mov
out
lahf
push
aaa
cmp
ds
scas
add
rcrl
mov
stos
fsub
mov
push
addr16
cld
shll
and
adc
loope
fisubs
mov
loopne
and
mov
push
jmp
bswap
mov
sbb
fnstenv
in
jae
push
push
add
push
dec
mov
bound
and
mov
loope
jp
js
in
xchg
movsl
out
out
out
aas
sbb
xchg
loope
jecxz
iret
cmp
push
lahf
xchg
pop
loope
es
inc
sti
pop
sbb
jae
pop
pop
xor
xchg
stos
or
push
cmp
jno
xor
xor
pop
mov
dec
add
nop
jp
sbb
testb
xor
cli
cmpsb
negl
cmp
mov
jae
pmaddwd
fcmovnbe
push
fbld
stos
pop
cltd
lahf
ljmp
mov
fsubr
outsb
addr16
mov
or
fdivl
cwtl
adc
xor
in
movsl
add
ljmp
loope
and
push
aas
adc
dec
test
aad
jl
addr16
adc
bndstx
pop
jle
clc
test
mov
and
xor
add
or
sub
add
and
ficomps
out
dec
adc
mov
sub
cmp
outsl
push
in
in
aas
cltd
xlat
sbb
shlb
sub
sbb
mov
nop
scas
sbb
mov
ds
push
je
fistpl
out
mov
roll
lea
push
sub
stc
pop
les
gs
jbe
adc
stos
inc
sbb
mov
mov
lea
cmp
pop
sub
into
mull
sub
shrb
xchg
xchg
lods
out
push
adc
dec
push
pop
push
jecxz
sbb
mov
ja
cmc
cli
popa
mov
fists
shlb
dec
scas
jb
arpl
adc
lea
mov
ret
sar
in
adc
stc
sub
test
xor
jle
xor
push
xor
xor
addb
aam
std
xchg
mov
pop
insl
mov
dec
mov
dec
xchg
repz
clc
pushf
dec
pop
sbb
insb
leave
fstl
mov
and
pop
testb
nop
mov
pop
es
or
push
insl
sbb
pop
roll
push
xor
movsb
pop
adc
jno
scas
mov
cmp
and
sub
add
xor
insl
xor
dec
lcall
pushf
lahf
push
mov
outsb
jg
add
scas
adc
mov
scas
or
stos
or
fnsave
sub
neg
or
inc
xor
cmc
pop
adc
mov
into
mov
pusha
cwtl
loope
pop
cmp
ficoml
pop
inc
cwtl
clc
out
les
cmp
fdivrl
cmc
jmp
mov
pop
pushf
fldcw
pop
cmp
push
jno
ret
cmp
jae
stc
jbe
out
push
dec
paddusw
clc
and
pop
aad
aam
sub
incb
jp
inc
push
mov
fists
dec
je
jnp
sbb
pop
inc
lock
cs
xor
fldt
imul
popf
push
jecxz
push
and
inc
insl
loopne
dec
cmpsb
out
pusha
dec
push
and
dec
int3
mov
mov
jns
out
insl
xchg
mov
push
jo
or
sub
or
ds
jb
pushl
shrl
push
jns
push
mov
repz
addr16
mov
sbb
mov
in
ret
jb
jecxz
xchg
push
loope
inc
je
push
adc
in
repnz
push
cmp
add
mov
cmp
subb
jnp
scas
and
pop
push
mov
add
push
mov
mov
pop
imul
stos
incb
mov
pop
pop
dec
sbb
imul
out
fcompl
and
dec
popl
pushf
mov
push
cs
dec
cwtl
xchg
insb
push
sti
push
in
mov
xchg
cs
stos
nop
loop
mov
outsb
fldcw
jo
mov
cmpsl
push
sbb
sub
adc
mov
fdivp
lret
inc
insl
sbb
adc
icebp
stc
push
pmaxsw
jp
je
cmp
xchg
sub
loope
sbb
inc
popa
add
lods
pushf
fstl
xchg
ret
repz
cmp
push
fistpl
lahf
jp
mov
adc
ljmp
ds
push
cmpsb
push
push
fsubl
cmc
xorb
jne
sar
xor
dec
mov
loop
test
popa
mov
mov
and
clc
scas
popa
lret
popa
cmpl
jae
sbb
xor
ret
lcall
cmp
jo
je
mov
lea
int
jno
and
pop
je
popa
out
fsubrs
jl
add
ja
pop
xor
xor
adc
arpl
mov
bound
push
gs
icebp
insl
imul
scas
inc
dec
adc
mov
fs
sub
mov
pushf
cmpsl
pop
xor
push
xchg
cmc
xchg
xchg
pop
xchg
mov
push
and
cmpsl
fsts
mov
sub
sub
lea
cmpsb
inc
jns
xchg
xor
mov
leave
negl
add
jge
ja
jecxz
mov
xchg
push
mov
inc
push
cmpsl
xchg
addr16
mov
sbb
push
mov
in
or
jle
mov
cmp
mov
and
inc
sahf
test
jge
xchg
cltd
adc
adc
out
xor
adc
movsl
xor
fidivrl
pop
add
std
jp
push
cld
inc
mov
jge
cmp
lea
mov
adc
dec
sub
pop
push
cmc
xlat
dec
mov
ja
lea
je
inc
fstpt
cmp
ds
sub
adc
xchg
ljmp
xlat
imul
xchg
data16
pop
rcrl
es
push
jg
std
ret
jne
mov
mov
ljmp
les
in
daa
jne
jmp
adc
dec
cltd
outsb
inc
pop
or
fsubl
xchg
add
js
and
icebp
cmp
sub
and
daa
cmc
adcl
addb
cmp
or
rorb
mov
in
adc
inc
mov
dec
xchg
sbb
or
std
test
std
push
xchg
popf
addr16
jcxz
aad
inc
push
mov
push
ljmp
icebp
mov
lods
sub
mov
and
pop
xlat
add
push
movswl
je
lods
fld
mov
jb
cwtl
or
xchg
cmpsb
clc
xor
aad
addr16
inc
jns
movsb
in
adc
jg
mov
aas
add
test
jecxz
add
aas
adc
cs
lods
sub
sub
out
xchg
popf
outsb
in
jle
or
adc
popf
mov
enter
pop
jg
pop
jmp
xor
je
test
jge
inc
push
mov
inc
mov
jns
aaa
divl
mov
movsl
sbb
add
mov
jo
cltd
xchg
mov
incl
push
xor
xor
out
push
jne
dec
ret
cmp
insl
mov
inc
pop
xlat
xor
jnp
imul
jo
push
sarb
mov
js
push
push
shll
inc
pusha
cmp
push
mov
sbbl
sbb
lds
push
xor
aam
imul
test
push
xor
test
and
xchg
in
and
fnsave
neg
jae
dec
lock
inc
add
jae
std
xchg
mov
out
xchg
and
jno
out
int3
hlt
test
xchg
in
notl
sti
mov
addr16
inc
fndisi(8087
mov
dec
jecxz
in
in
push
xchg
insb
nop
inc
insl
ja
mov
int
faddl
pop
cwtl
push
pop
or
mov
mov
mov
dec
push
icebp
xchg
xchg
ljmp
ljmp
push
sbbl
repz
fisubrs
sahf
cmp
pop
mov
loop
ret
stos
lods
stc
adc
mov
pop
add
mov
ret
jmp
fsubs
mov
pop
loopne
outsb
jecxz
pop
dec
sbb
in
lret
iret
sti
cli
cmp
mov
test
fimull
insl
stc
ds
std
and
inc
and
scas
jl
xor
subb
dec
mov
fxch
xchg
mov
dec
push
mov
loop
lea
into
jle
pop
clc
mov
jns
push
aam
pop
and
add
inc
sub
sbbb
stc
insb
rclb
scas
jbe
sub
mov
mov
lret
rorl
jecxz
adc
shr
cmpsl
sbb
cltd
inc
test
std
rolb
mov
adcb
out
ds
lods
aad
imul
mov
cmc
test
ds
pop
mov
pop
test
mov
int3
daa
out
mov
cltd
hlt
mov
in
mov
sub
sub
add
les
push
dec
dec
test
paddusb
std
mov
push
pusha
mov
aad
test
pop
enter
xor
push
les
dec
pop
std
add
xor
add
cmpsb
mov
inc
xchg
lret
adc
leave
cmp
pop
push
ss
mov
int3
cmpsl
inc
or
loopne
add
inc
cli
arpl
stc
sbb
pop
xor
daa
shlb
mov
movsl
ret
add
test
fwait
clc
add
mov
jns
cwtl
leave
mov
daa
pop
mov
cmp
arpl
ds
xchg
fwait
sbb
mov
outsl
lret
mov
pop
xchg
sub
rcll
mov
or
or
and
jmp
ds
cmp
sub
and
and
push
faddl
xchg
cld
roll
mov
inc
mov
adc
push
stc
mov
pop
nop
bound
insl
fnstsw
or
jnp
in
inc
sbb
ljmp
sub
in
sbb
arpl
push
adc
lea
mov
rolb
or
rclb
shl
jmp
xchg
insl
sub
cli
insl
ja
out
jp
out
add
aaa
dec
ret
cmpsl
adc
int
ljmp
or
sbb
xchg
loope
outsl
loope
jb
leave
xchg
frstor
popf
add
pop
sub
ret
fnsave
addr16
mov
lcall
stos
sarl
leave
and
aam
loop
orb
jbe
cmp
pop
mov
stos
pusha
nop
in
xlat
fsubrl
jl
or
outsb
push
fimuls
jne
clc
jnp
add
jbe
xor
push
mov
popa
add
jge
into
push
cmp
mov
jle
imul
pop
xor
fiaddl
sbb
xchg
std
insb
adc
insb
jg
cld
xor
daa
pop
call
push
cs
dec
fnstenv
dec
adc
add
pop
jae
push
test
leave
xchg
adc
xor
inc
cwtl
lods
sahf
push
xchg
push
push
aas
movsb
and
xor
jbe
push
xor
sub
cmpsw
out
sti
xchg
mov
dec
sahf
aaa
and
test
loopne
adc
dec
jg
in
sbb
out
sub
cmp
jmp
lret
pop
outsb
and
push
shrb
sub
leave
ror
aaa
out
into
xchg
xchg
dec
jno
daa
sub
arpl
frstor
insl
cwtl
mov
xor
stos
test
xor
inc
adc
xlat
and
mov
mov
push
dec
dec
nop
idivl
xchg
fxch
sar
inc
pop
inc
jge
pop
loopne
popf
popa
js
fidivl
inc
je
mov
pushw
push
andb
out
mov
dec
jnp
aas
xor
jo
jne
xor
or
je
pop
push
jns
xor
call
cmp
cmp
in
jbe
xor
inc
xor
sub
out
mov
cld
fdivrs
xchg
in
std
xchg
inc
add
lods
mov
gs
lret
or
xlat
aad
cmp
or
aam
inc
sahf
dec
jne
push
sbb
xor
jno
xor
jne
inc
pop
and
hlt
dec
test
fcmovnbe
adc
lea
jl
mov
mov
push
mov
and
arpl
call
mov
jge
cmp
cwtl
push
lods
mov
dec
pop
add
or
sub
dec
inc
fsubrp
push
mov
inc
sbb
pop
or
insb
mov
xor
ret
add
xlat
int
imul
add
mov
flds
lock
push
into
sbb
mov
and
lea
dec
mov
out
in
add
jns
mov
dec
stos
or
nop
mov
mov
and
jo
jae
fiaddl
lret
outsl
loopne
sub
in
mov
cmpsb
enter
sub
mov
inc
lea
scas
pusha
add
jo
das
and
mov
pop
popa
xchg
adc
pop
add
mov
ss
jge
mov
lock
push
xchg
cmp
cmp
jg
rorl
movsb
rolb
test
pop
mov
add
dec
in
fsubr
pop
stos
push
mov
pop
mov
jnp
dec
adc
and
xchg
out
jno
outsb
cmp
scas
cltd
sahf
lret
xchg
addr16
jl
dec
mov
iret
lahf
sbb
mov
out
aam
jne
fadds
shrb
inc
ret
test
negb
push
xor
fiaddl
popa
repz
rclb
scas
cmpsl
add
pop
in
sub
lds
adc
mov
fisttpll
fistps
pop
jp
push
xor
pop
push
pop
popa
dec
lods
xchg
mov
icebp
inc
dec
jo
mov
lret
daa
xchg
add
data16
test
cmp
popl
sub
jbe
in
sbb
or
jecxz
pop
cmp
adc
xchg
sbb
das
leave
shl
add
test
insb
mov
ja
popf
stc
xchg
fdivr
arpl
arpl
outsl
fisubs
out
jmp
push
das
repnz
out
cmp
pushf
or
pusha
sub
push
fcoms
fdivr
add
fmull
packsswb
dec
sub
adc
movsl
cmp
ret
jecxz
or
sarl
push
push
xor
sub
adc
lock
dec
pop
xor
mov
jg
or
std
dec
mov
jl
test
outsb
dec
loope
xchg
inc
sub
popa
mov
or
scas
lods
pushf
out
inc
mov
and
jge
in
sub
sbb
dec
sub
fbld
pop
pushf
repnz
pavgb
mov
filds
xchg
movsl
es
iret
loope
fdivl
inc
inc
pop
mov
pop
cmp
leave
sbb
jge
fnstcw
out
pop
lret
push
aam
xchg
lcall
sub
repnz
sub
dec
cmp
scas
sarl
arpl
dec
fsubs
cmp
or
fwait
out
ficompl
pop
xor
jge
and
insb
add
push
sbb
mov
dec
popf
jp
ja
inc
dec
sub
xchg
out
mov
xchg
mov
xor
in
ss
mov
mov
push
call
stc
std
cwtl
clc
inc
into
pop
insb
inc
mov
dec
jg
ss
or
cmp
shl
xor
xchg
std
shl
repz
add
sub
inc
and
in
mov
out
nop
jno
push
imul
pop
lods
addr16
roll
xor
dec
gs
cltd
cmpsb
xchg
dec
ret
mov
test
or
sbb
adc
jb
loop
scas
adc
popf
insb
cmp
in
jae
xor
cwtl
sbb
std
sbb
cmc
jg
sub
cld
xchg
ret
jp
add
insb
and
fisttpl
pop
or
mov
sub
dec
dec
mov
cld
ret
mov
adc
pop
cmp
pushl
xchg
ret
lahf
repz
ljmp
pop
testb
out
xlat
inc
push
sub
pop
dec
xchg
fisubrs
fsubrs
movsb
cmp
cmpsl
into
inc
mov
out
sub
sahf
imul
ret
inc
cmpl
dec
shrb
in
jg
lods
loopne
push
mov
repnz
inc
mov
mov
cmc
mov
push
das
ret
push
pop
icebp
ror
rorl
mov
ds
rol
jl
jecxz
inc
sahf
and
iret
mov
loope
loope
inc
pop
pop
cmpsb
xchg
push
push
mov
add
dec
sbb
adc
pop
out
mov
loope
pop
pop
sub
lret
mov
loopne
cwtl
jno
aaa
add
add
inc
and
mov
and
adcb
mov
flds
cmp
daa
jno
mov
dec
xchg
xor
push
jl
clc
jnp
idiv
pop
adc
or
test
outsb
cmp
jp
mov
loope
lods
movsb
ds
stos
fs
sub
shrb
and
movsb
test
mov
lds
push
mov
rcl
out
inc
insl
aaa
stc
mov
push
or
inc
jb
scas
dec
ret
inc
mov
int3
fsubrp
idiv
jmp
aas
cli
shll
out
in
into
sbb
xchg
fcmovnb
cs
es
xor
lret
sub
or
mov
outsb
mov
and
stc
shll
std
adc
mov
ljmp
push
test
insl
daa
cmp
cmp
xor
sbb
cmpsl
and
into
xor
xor
jns
or
xor
pushf
icebp
imul
mov
mov
in
pop
adc
jne
andb
push
iret
xor
sbb
mov
inc
rclb
in
stos
mov
push
pop
es
xlat
xor
push
sbb
test
pop
xchg
xor
stc
inc
cmp
jmp
ret
mov
loope
dec
mov
leave
cmpsb
jmp
lret
orb
xchg
sti
addr16
push
and
sbb
mov
in
rolb
or
sbb
in
shrl
ja
jl
mov
push
mov
mov
test
jecxz
cmp
jns
lds
or
pop
xlat
adc
cltd
les
jmp
scas
pop
add
stos
hlt
sub
out
dec
jg
stos
aad
jo
xchg
pop
push
dec
jo
clc
adc
and
jmp
das
dec
popf
sbb
mov
xchg
les
aas
out
pop
out
and
cli
adc
repz
sub
add
xor
cli
dec
mov
into
or
shll
lods
push
fldl
jb
in
xchg
sbb
mov
dec
bnd
insl
adc
and
jb
in
xchg
sbb
mov
dec
bnd
insl
adc
and
jb
in
xchg
lds
sub
repnz
loopne
adc
and
jge
in
insl
loop
cmpsl
sbb
dec
mov
sbbb
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
jp
xor
add
adc
jg
add
pusha
ret
in
mov
sbbb
loopne
mov
rcrb
std
xor
adc
pusha
lods
jo
inc
lea
stos
outsl
mov
in
push
pop
loopne
icebp
in
rorb
std
sbb
or
jns
imul
in
cmp
pop
iret
insb
mov
sbb
dec
mov
mov
test
testb
or
filds
mov
mov
cmpsl
popl
pop
cltd
adc
jg
popf
pop
pop
test
push
lods
adc
jp
xchg
sarb
push
stc
dec
jno
call
outsl
fcomps
cmp
pop
sbb
loopne
fwait
in
inc
lea
test
push
bound
int3
mov
addb
sbb
xor
lea
pushf
test
dec
jge
or
mov
or
xor
fstl
jnp
pop
insb
dec
imul
loopne
and
rorb
add
pop
jo
push
inc
xchg
dec
test
push
mov
call
jns
mov
gs
je
add
sbb
lock
mov
repnz
xor
mov
and
adc
adc
push
sub
adc
sbb
cmp
push
test
push
mov
sarb
lods
add
sbb
jo
inc
lea
mov
dec
nop
pop
loopne
lock
and
xor
add
adc
pusha
lods
jo
inc
lea
mov
dec
nop
pop
loopne
lock
and
repz
in
js
dec
nop
pop
fdivr
xor
jne
sti
ret
push
jle
cmpsl
push
pop
push
inc
adc
and
push
pop
ja
push
mov
sbbb
and
mov
idivl
push
mov
add
jmp
inc
mov
sub
xchg
mov
fsubs
xchg
cmpsl
sti
popa
ret
sub
xchg
pop
jle
das
cltd
lahf
andl
and
jmp
in
popf
js
loope
fimull
pop
push
and
flds
xor
pop
sti
daa
dec
mov
lods
pop
jb
mov
es
push
mov
cmpsb
cmp
ret
jp
rcl
stos
sbb
scas
jg
push
lock
push
pop
mov
cmp
mulb
outsl
scas
movsb
dec
mov
stos
xor
xor
cld
jns
rcrl
or
mov
or
inc
into
ds
xlat
ror
and
xor
dec
mov
mov
xchg
fisttpl
clc
scas
bnd
out
sub
xor
lods
mov
shll
aas
loope
cmc
mov
bswap
out
xchg
subb
push
lcall
movl
loop
inc
addr16
dec
cmpsl
shll
ds
add
popf
inc
int
cli
sahf
stos
sbb
inc
jl
enter
adc
add
cmp
fildll
jns
xchg
jno
cli
sub
sub
pop
mov
mov
or
scas
jnp
push
adc
mov
popa
and
rolb
mov
mov
jl
xchg
mov
imull
rolb
in
rclb
stos
xchg
lods
xchg
dec
sub
mov
fdivs
cmp
cld
gs
mov
subb
icebp
mov
jle,pt
je
pop
add
xchg
scas
lret
lods
icebp
stos
sub
aad
addr16
mov
in
pop
nop
lret
sti
mov
int
cmp
lret
hlt
sub
cwtl
or
mov
js
jecxz
fcomps
addr16
dec
sbb
in
or
pop
mov
ja
adc
pusha
pusha
inc
inc
mov
ficoml
iret
sub
lcall
into
aad
dec
dec
repnz
cltd
repz
aas
andb
sbb
push
xor
sbb
cmpb
mov
mov
rcl
pop
loopne
xchg
stos
in
sbb
mov
adc
push
cmc
arpl
cmpsl
std
push
loope
ficoml
mov
js
repz
jne
mov
imul
lret
jb
jo
mov
daa
aad
mov
inc
rep
fbstp
pop
add
inc
in
ja
lcall
imul
mov
cmc
or
lret
notb
add
lahf
lcall
shrl
jns
and
push
orl
rep
xchg
mov
in
sbb
hlt
adc
sub
lret
sbb
xchg
add
push
dec
into
cmc
sub
xchg
addl
js
arpl
inc
xchg
leave
push
and
dec
enter
cwtl
add
ds
int3
cmpsl
jg
cmpsb
insb
and
xor
aam
jbe
dec
pop
call
pop
inc
nop
popl
pusha
sahf
mov
aam
cmp
mov
lret
aad
jl
pushf
ss
jae
xchg
pusha
repz
cmp
outsb
movsl
mov
jae
and
lret
push
cltd
sbb
lods
stos
jp
push
sbb
int
dec
mov
dec
mov
outsl
mov
nop
mov
push
lds
ss
push
or
imul
rorb
fbld
stos
andl
add
cmpsb
mov
movsb
push
inc
mov
outsb
rorl
jmp
stc
into
movsl
in
sbb
subb
test
fstpl
shl
add
outsl
pop
jl
test
sbb
xchg
lds
les
es
hlt
in
push
add
pop
scas
mov
shl
dec
gs
mov
push
push
aad
movsl
jo
pop
pop
insb
jne
int
insb
cmp
mov
mov
pop
and
movsb
loopne
js
lods
idivb
aas
dec
ret
test
ret
jo
daa
pop
insb
sbb
mov
imul
les
jae
addb
inc
insb
je
add
cmp
mov
roll
push
sahf
ss
je
push
sbb
or
mov
or
test
loopne
rcrb
jno
adcb
imul
stos
lods
or
xor
test
dec
sub
inc
lods
clc
xor
push
jp
cmp
sub
xchg
rclb
lea
push
sbb
push
jb
cltd
lds
hlt
jb
or
adc
push
pop
pop
int3
mov
fcmove
or
sbb
adc
and
pop
or
aad
adc
test
pushf
fs
icebp
gs
les
loope
pop
push
mov
add
add
jne
loope
mov
mov
insl
stos
xchg
rcrb
lods
testb
nop
mov
in
enter
and
push
ret
xchg
inc
xlat
jecxz
push
fs
jp
jp
add
dec
loope
cwtl
outsb
ret
mov
in
pop
jl
repz
ja
lds
push
rcrb
das
loop
out
or
rol
mov
xor
mov
push
xlat
inc
push
lds
and
idiv
pop
enter
dec
push
xor
ljmp
scas
mov
ret
add
in
loope
enter
adc
sbb
shr
jle
jo
push
ljmp
or
test
or
fwait
sub
iret
add
adc
mov
out
iret
mov
and
enter
ss
cli
stos
popa
xchg
icebp
cmp
and
stc
mov
or
cld
cmp
or
jns
inc
jmp
lcall
xor
aad
jl
outsl
jns
mov
sbb
dec
bound
xor
xchg
and
imul
mov
insb
sahf
sbb
addl
sbb
aas
mov
stos
xchg
scas
lea
scas
test
lods
or
ja
xorb
lahf
sbb
mov
jp
dec
addr16
and
or
in
lods
mov
inc
leave
bound
mov
cmpl
sub
push
jne
add
sbb
inc
sarl
movsl
arpl
xor
cmpl
sti
iret
inc
arpl
fwait
mov
aam
mov
fwait
js
cmp
dec
sbb
fwait
pop
nop
test
daa
jne
outsb
add
lahf
mov
add
imul
out
rclb
cli
cmp
lahf
and
iret
dec
push
xchg
hlt
ficomps
pop
pop
push
xchg
xchg
outsb
pusha
scas
sbbl
leave
in
js
sub
sub
mov
clc
loop
repnz
xor
xchg
faddl
je
rsm
mov
or
scas
fldenv
shrb
lahf
mov
dec
les
push
xchg
mov
dec
jne
adc
push
ss
mov
out
and
sbb
or
rclb
and
movsl
ja
stc
es
mov
inc
jbe
aad
test
sbb
fisttpll
les
sti
test
jnp
dec
jg
dec
jge
jl
imul
inc
inc
push
out
test
push
mov
xlat
stc
out
test
out
cmpsl
dec
fsubl
popa
mov
loope
push
test
insb
fs
sub
negb
add
pop
imul
aam
cwtl
ljmp
mov
out
cli
push
pop
xchg
push
shll
mov
inc
adc
pop
dec
gs
xor
lods
xchg
and
int
cmpsb
cmp
inc
icebp
pushf
inc
sub
sahf
in
xor
push
jnp
fdiv
enter
xchg
mov
sub
adc
dec
xchg
loop
inc
mov
sub
inc
cmp
jbe
sub
lcall
adc
out
xor
jne
jb
in
add
pop
sbb
xlat
cmp
flds
in
aaa
dec
int3
push
inc
test
lcall
lret
cmp
shlb
jl
out
ret
inc
dec
in
fbld
add
loopne
loop
adc
iret
mov
ret
push
fldcw
stc
mov
fldenv
in
jecxz
jbe
aaa
fisttps
sbb
xchg
sbb
subl
add
mov
jmp
rclb
ljmp
inc
js
cmp
sub
rolb
add
add
addb
adc
lock
das
adc
shll
ljmp
aam
pop
adc
cmp
xchg
add
cwtl
out
stos
push
loope
add
sub
and
push
mov
cli
lret
lock
jnp
cmpl
push
push
repz
sbb
mov
scas
mov
jnp
xor
jle
sbb
add
pop
adc
or
pop
outsl
mov
add
jp
into
cs
test
cltd
test
inc
imul
xchg
sbb
daa
ja
mov
mov
js
jnp
cmpsb
pushf
dec
adc
fimuls
add
fldcw
pop
mov
and
ja
aaa
leave
cmpsb
and
dec
fmulp
jno
enter
mov
ja
outsb
adc
lea
or
push
lahf
lahf
adc
call
call
popa
or
sub
fs
cwtl
aam
inc
imull
ret
test
push
pop
push
jg
jno
inc
mov
xchg
mov
and
int
add
out
xor
into
mov
lret
and
pop
lods
les
add
and
out
cmpsb
test
push
xchg
lds
out
mov
jecxz
fs
mov
ss
insl
stos
mov
push
imul
dec
sti
jl
mov
and
mov
enter
ret
xor
neg
push
js
rclb
fcmovnbe
lds
sbb
aas
fwait
jno
mov
stos
mov
sahf
inc
insl
mov
adc
fs
in
xor
add
or
shlb
jns
adc
fsub
out
fisttpll
fidivrl
cmp
cmp
popf
negb
leave
mov
in
mov
mov
aas
testb
hlt
adc
xchg
xor
pusha
dec
daa
inc
mov
outsb
xchg
mov
pop
addr16
xor
dec
xor
inc
push
dec
out
dec
adc
test
inc
mov
out
insb
add
repz
xchg
ljmp
and
shrb
call
pop
jecxz
dec
fs
ret
js
pop
aad
dec
fildl
xchg
aad
xor
lret
dec
nop
pop
in
mov
pop
cltd
fmul
in
cmp
stc
les
pop
std
mov
mov
ljmp
sub
add
jae
jne
sbb
and
pushf
cs
cs
push
lods
mov
xorl
rorb
lods
stos
adc
push
ljmp
and
xor
xchg
cmpsb
inc
mov
push
into
xchg
add
mov
xchg
or
out
jp
fstps
mov
inc
out
cmpsb
lret
dec
sahf
jo
rclb
sub
icebp
fildll
pop
xchg
lea
outsb
ficompl
jle
or
aam
pop
dec
xchg
dec
shll
pop
cmp
mov
std
out
add
pop
lods
xchg
and
adc
push
int
rcll
pop
cmp
and
push
mov
mov
int3
mov
or
leave
lock
add
popaw
xor
popf
or
cmp
js
sbb
sub
mov
push
adc
sbb
push
mov
fists
dec
inc
cmp
jmp
out
xor
iret
roll
aaa
mov
repnz
outsl
aaa
xor
std
cs
xchg
cmpsb
sub
add
shrb
xchg
cmpsl
je
pushf
movb
icebp
arpl
cmp
les
test
lods
jp
dec
sbb
mov
cwtl
sub
roll
pop
add
fcomps
lods
out
imul
push
or
xchg
and
sbb
test
xchg
iret
push
test
loopne
pusha
jecxz
inc
jnp
mov
imul
jmp
cli
popf
mov
mov
and
popf
jno
sbb
lcall
sbb
mov
xchg
adc
pop
add
cmc
jecxz
mov
fsubrp
lods
add
cmc
lahf
pop
fmull
mov
mov
stc
jo
inc
sub
insl
idivl
sbb
stc
xor
adc
jo
mov
or
outsb
pop
cltd
add
fimuls
jp
jecxz
mov
icebp
popf
rclb
inc
lock
fadd
mov
sbb
jb
fisttpl
pop
xchg
insl
sub
xor
ds
rcrl
mov
and
insb
loopne
pop
mov
add
mov
stos
mov
loopne
cmovne
cmpsl
mov
in
add
mov
bound
adc
popa
push
ret
cmp
adcl
sub
mov
daa
sbb
movsl
cwtl
loop
sub
cli
fnsave
and
cmp
in
in
fsubrl
daa
arpl
inc
inc
sbb
xchg
or
arpl
mov
mov
aad
mov
aas
sbb
test
jbe
sub
fildll
pop
cld
mov
ror
dec
pop
mov
push
mov
xor
adc
jo
stos
hlt
cmc
das
xchg
adc
inc
xchg
mov
in
jmp
jmp
cmp
out
jns
adc
or
inc
popa
add
lods
ds
and
inc
add
fs
or
cmp
adc
pop
mov
pop
or
mov
test
push
sbb
and
or
xchg
fwait
add
lock
xlat
adc
test
out
lahf
push
cwtl
test
loope
das
mov
dec
or
repnz
lahf
insb
mov
lock
int3
xchg
xor
pop
cs
and
out
xor
pop
sahf
cmp
int
jl
pop
aaa
and
mov
in
daa
or
pop
out
movsb
je
jge
das
or
sti
and
xchg
out
add
inc
mov
sbb
imul
cmpsl
cmp
es
out
xor
pushf
cmpsl
pop
add
lret
es
xchg
nop
push
ss
enter
aaa
cmpsl
pop
and
das
aam
mov
sbbb
icebp
add
imul
clc
or
push
pop
test
insl
andl
repz
out
cmpsl
push
dec
in
mov
cmp
lds
mov
loope
push
xchg
cmc
adc
out
push
add
mov
dec
ret
add
adc
add
mov
aaa
and
shrl
aas
inc
push
scas
cmp
xor
icebp
jl
jp,pn
mov
sbb
adc
sbb
mov
stc
cmc
pop
out
lahf
dec
les
rcrb
iret
leave
test
jns
or
nop
fnsave
movsl
inc
popf
sbb
hlt
pop
fldenv
test
fcomps
add
jmp
mov
fst
cld
ss
stos
jb
inc
pop
cli
out
push
cmc
inc
xchg
or
pop
jb
int
cs
jmp
mov
rolb
daa
outsl
fstl
fmul
ds
cli
jb
or
sub
cmc
iret
cwtl
mov
or
fldl
mov
dec
xor
jbe
andb
mov
ficoml
fwait
inc
cli
jle
mov
rcll
xchg
int
int3
or
loope
nop
cmpsl
sti
cmp
jae
push
mov
cltd
jb
sti
inc
icebp
pop
int3
inc
cltd
xchg
push
mov
inc
xor
cmp
inc
inc
pop
cmp
sub
fwait
shll
push
push
mov
cmp
or
cmpsb
fcmovnb
add
push
gs
mov
outsb
rclb
mov
icebp
add
mov
shl
shll
jl
out
pop
mov
push
rcr
in
dec
sub
stc
add
enter
lahf
push
dec
pop
add
test
dec
mov
jae
sbb
push
test
and
mov
push
sub
iret
jg
xchg
je
in
sub
push
adc
inc
and
aad
mov
fcmovb
incb
cmp
scas
ret
mov
mov
mov
in
cmpsb
dec
dec
out
leave
push
pushf
sbb
add
mov
lea
add
iret
and
mov
push
cmp
test
xor
mov
rcll
sub
fsubl
lret
xor
push
outsl
divb
repnz
lcall
sbb
loop
loope
daa
and
add
jbe
out
adc
xchg
ret
sub
negl
add
mov
jle
inc
cwtl
mov
lcall
stc
es
add
fists
sbb
aam
add
xor
pop
out
dec
fnsave
sbb
jo
dec
out
mov
mov
sub
sbb
gs
cmp
test
cmp
push
stos
push
cmp
incb
loop
pop
jno
inc
and
into
sub
mov
mov
push
clc
mov
and
push
jb
adc
mov
or
ret
stos
add
imul
insb
push
call
repnz
data16
aaa
rcrb
pusha
out
jl
les
js
fldl
das
repnz
enter
inc
pop
push
inc
dec
loope
lahf
sbb
adc
jecxz
repnz
sbb
cmp
push
inc
mov
add
leave
xchg
cltd
sub
fadd
in
sbb
and
arpl
stos
push
lods
mov
cli
jnp
fnstcw
xlat
addr16
fadds
fldt
push
push
add
popa
icebp
sahf
sub
jno
lret
lret
fstpt
xchg
dec
fidivl
jne
jno,pn
in
xor
mov
mov
fs
in
in
fcomps
push
sub
into
lock
fnsave
sti
stc
arpl
add
mov
xor
or
ficoml
bound
pop
mov
xor
ja
xchg
aam
xor
enter
mov
sub
push
jp
or
outsl
adc
pand
xchg
dec
adc
sti
dec
and
lods
jno
lock
aas
pop
lcall
insb
data16
negb
jp
pop
jl
mov
push
lds
add
pop
movsl
or
in
inc
adc
cmp
inc
add
and
jp
bound
test
mov
test
xorl
fdivrs
testl
dec
mov
add
inc
push
mov
fidivs
mov
test
dec
adc
iret
jg
cmp
outsb
pop
fsubr
in
ds
icebp
inc
push
pop
mov
and
push
inc
ret
mov
enter
push
in
in
dec
rcrl
inc
rcl
leave
out
cmp
adc
aad
iret
push
pusha
cmp
sub
jmp
pop
jl
int3
mov
jb
orb
in
lret
adc
pop
sbb
shll
lcall
mov
xchg
ror
jmp
mov
addr16
int
or
lret
ficoml
jge
jb
rcrb
add
mov
not
mov
jmp
aaa
push
pushf
pop
mov
dec
idivb
pusha
adcl
clc
fwait
xor
push
das
adc
xlat
xlat
push
ret
cmpb
dec
out
inc
out
mov
out
sbb
outsb
inc
int3
pushf
xchg
mov
jo
xchg
cld
mov
or
push
fwait
mull
push
pop
daa
xchg
jmp
das
jno
popf
jns
jge
loope
push
pop
xchg
sub
jmp
mov
mov
pusha
push
sti
in
pop
or
add
lods
jg
mov
adc
mov
or
rcl
aas
inc
dec
sub
cmpsb
daa
pop
jnp
inc
sti
mov
jae
mov
jbe
inc
xchg
loop
push
dec
lock
cmpsb
xchg
mov
loopne
popf
stos
jne
mov
inc
or
rol
in
mov
aad
pushf
rorb
test
mov
and
lock
imul
or
test
and
jp
push
sbbl
mov
push
out
fcoml
std
cmpsb
pop
push
loop
fistps
sub
push
lcall
push
lahf
movsl
lret
dec
jbe
mov
insb
add
pop
movsl
push
aad
jae
cmp
or
xor
lcall
pop
sbb
pushf
cli
mov
push
mov
popf
out
cmp
pop
int3
mov
clc
bound
fmuls
aam
xor
arpl
addr16
stos
and
mov
mov
adc
pop
fsubrl
addb
xchg
stos
push
popa
adc
ljmp
jge
xchg
mov
add
jno
pop
fdivr
jl
shl
fistpl
sub
adc
sbb
inc
adc
pop
or
movsb
into
test
inc
mov
std
adc
adc
pusha
lods
jo
inc
lea
mov
dec
nop
pop
loopne
lock
and
xor
add
adc
pusha
lods
jo
inc
lea
mov
dec
nop
pop
loopne
lock
and
xor
add
adc
pusha
lods
jo
inc
lea
mov
dec
nop
pop
loopne
hlt
cmp
adc
add
ss
frstor
jo
rorb
xlat
sub
sub
repnz
loop
and
adc
sbb
sub
mov
or
sar
or
add
popa
insl
inc
jge
lea
mov
repz
sar
or
sbb
imul
mov
in
scas
scas
test
insl
jl
sub
test
idivb
cmpsl
test
jp
ds
mov
dec
adc
xchg
mov
adc
roll
lcall
sub
mov
je
sbb
pop
cmpsl
jb
or
mov
cmp
inc
push
dec
outsb
sar
or
cmp
popa
mov
aam
inc
adc
jle
sbb
fstp
je
jbe,pt
pop
movsb
cwtl
into
test
shlb
jge
xchg
dec
idivb
mov
dec
and
sub
xchg
std
push
xor
in
pop
stc
ret
jmp
aam
inc
insl
add
leave
fcomp
pop
jle
outsb
sub
mov
sub
call
into
ss
adc
pop
jno
inc
jge
lea
mov
jmp
push
fs
sub
adc
sub
clc
mov
test
hlt
dec
test
jnp
imul
popa
push
aas
sub
cli
aam
in
xchg
cmp
xchg
movsl
push
sbb
push
or
jno
inc
jge
lea
mov
icebp
in
sar
or
add
jno
inc
jge
lea
mov
icebp
in
sar
or
xchg
popf
ljmp
cmp
xchg
cltd
rol
in
in
xor
mov
cmpsl
cmpsb
adcl
testl
int
test
adc
icebp
and
xchg
rcrl
imul
jecxz
test
mov
sub
les
adc
outsb
jnp
les
sub
shll
cmp
sub
into
aam
jg
adc
adc
push
fsubs
out
arpl
sbb
mov
sbb
scas
hlt
ficomps
mov
rol
mov
jle
ret
ja
xor
dec
dec
xor
lcall
push
dec
sbb
lods
shll
xchg
mov
popa
ds
cmp
lahf
or
movsl
and
inc
mov
test
sub
mov
ret
cmpsl
push
add
jp
push
ljmp
or
aaa
fsubl
dec
lods
call
imul
out
push
cmp
or
faddl
sti
repnz
add
sub
ja
in
popf
mov
pop
adc
cmp
mov
stos
push
mov
xchg
movsb
dec
push
fmuls
push
fstps
nop
aaa
or
sbb
sub
xorl
dec
or
aam
insl
imul
mov
mov
fsubp
repnz
fs
fdivrs
gs
push
arpl
outsb
dec
lret
lods
jp
pop
pop
jmp
mov
pop
mov
add
fsubrl
pop
sub
shlb
in
mov
pop
popf
xor
mov
sbb
sbb
sub
repz
xor
lods
dec
and
mov
and
hlt
adc
lret
je
and
fucomi
jb
sbb
mov
jecxz
dec
cmp
icebp
scas
sbb
push
and
iret
and
pop
repz
dec
or
xorl
icebp
fbld
sbb
push
addl
pop
inc
ds
notb
les
sti
push
pop
mov
adc
sub
mull
movsb
movsb
fs
fwait
pop
popf
fnstsw
es
sbb
stos
dec
jmp
mov
xchg
aam
dec
push
and
jb
ret
addr16
xchg
mov
sub
roll
aaa
outsb
es
sub
ret
out
fsts
inc
ljmp
cmpsb
fildll
sbb
push
hlt
xchg
sbb
shr
push
dec
ljmp
add
and
cmp
out
add
add
and
sub
cmp
mov
movsb
pop
and
push
dec
cmc
popf
sbb
xchg
mov
sarl
adc
cltd
cli
loop
fwait
or
dec
out
in
out
mov
leave
xor
std
xor
dec
bound
shll
push
or
sub
out
sbb
pop
inc
mov
mov
rcr
movsl
mov
lods
add
cmpl
jmp
pop
pop
lahf
jp
xchg
sbb
jle
repnz
std
roll
jmp
mov
mov
inc
dec
jb
xchg
sbb
ret
sbb
frstor
pop
xchg
movsb
xor
out
push
divl
lods
push
stc
xor
mov
outsb
xor
mov
mov
lods
imul
repnz
subl
adc
lods
aam
inc
data16
push
mov
call
inc
sbb
push
xor
ficompl
ja
add
in
test
jmp
fldenv
pop
and
xchg
xchg
cmp
clc
mov
inc
repz
sub
das
fadd
das
mov
or
fstl
mov
and
dec
rclb
jecxz
ljmp
cmp
push
xorl
mov
je
cltd
inc
xor
sub
into
lret
jns
sbb
fadd
pusha
mov
or
ret
mov
stos
or
lret
je
insb
sbb
mov
dec
lock
pushl
cmp
xor
sub
ja
adc
in
push
hlt
movsl
cmp
and
jae
jo
lret
push
dec
sub
das
pusha
dec
rcr
jnp
add
adc
ja
cmp
or
idiv
lret
fisubl
push
sbb
xchg
arpl
pop
adc
or
pop
sbb
xor
daa
and
jae
jno
daa
ficoml
addr16
xchg
loop
mov
stos
pop
add
fistpll
add
ja
insb
and
cmc
ret
inc
mov
loopne
push
call
sbb
sub
jbe
cmovnp
hlt
into
std
adc
call
adcb
stos
popa
daa
and
xor
inc
jo
scas
or
mov
icebp
sbb
mov
std
stc
out
xor
and
mov
ds
scas
add
std
pop
scas
mov
add
cwtl
sbb
mov
mov
mov
stos
inc
mov
xchg
add
inc
mov
dec
pop
sub
lret
xchg
cmpsb
in
fs
adc
push
jle
popf
out
aam
dec
xchg
stos
xorl
mov
lret
cwtl
add
jp
xor
hlt
add
scas
add
lods
icebp
inc
fsubrl
push
insl
sbb
sub
mov
loopne
inc
fidivs
pusha
fcoml
cmp
mov
out
and
dec
pop
out
shlb
jp
in
push
gs
sbb
cli
pop
adc
cmp
fsubrl
outsb
js
add
negb
jge
aas
iret
iret
ss
and
sub
cwtl
arpl
sub
test
loope
fnstcw
aad
sti
aas
call
test
sbb
rorl
clc
cs
inc
sbb
lock
jecxz
sbb
adc
cmp
jecxz
sub
xchg
fadd
dec
xlat
cmp
pop
les
adc
sbb
jbe
daa
inc
cwtl
mov
cwtl
pop
int
inc
cmpsb
or
xorl
mov
xlat
mov
jle
notb
mov
mov
push
push
out
lret
stc
jl
cltd
andb
add
out
mov
pushf
imul
xchg
test
nop
fimull
mov
mov
sbb
xor
sbb
cs
or
xor
ss
mov
jp
pop
cmpsl
repz
orb
and
imul
mov
add
cltd
fmull
ljmp
mov
lea
mov
cmpsl
push
xor
mov
cmpb
icebp
ror
adc
mov
push
gs
cmp
cmpsb
fld
jge
imulb
bound
push
mov
mov
push
out
mov
test
adc
inc
cmc
dec
pop
xchg
mov
ljmp
mov
mov
pop
or
shll
mov
mov
out
int
daa
les
out
mov
addl
push
adc
movsl
decl
push
cmp
je
ss
mov
js
add
movsl
cmp
adc
test
lods
xchg
aaa
fnstenv
mov
cld
sbb
or
lds
lods
iret
jge
hlt
jo
mov
test
add
daa
andl
into
lock
in
in
int
shrl
dec
dec
adc
push
loopne
mov
mov
or
mov
insl
cmc
pop
in
faddl
and
and
movsl
aas
jo
push
add
in
jp
cmc
in
cmp
and
xor
fs
fldt
dec
ljmp
das
stos
inc
fwait
pop
aaa
add
icebp
std
jne
loopne
push
stos
xchg
insl
lea
dec
das
jg
xchg
push
imul
mov
xchg
jnp
sbb
cmp
mov
lods
les
mov
scas
in
dec
pop
push
aaa
repz
cltd
xor
shl
call
xor
or
in
leave
fstpt
insl
jecxz
mov
adc
push
mov
push
sub
insb
jb
stos
xor
mov
adcl
sub
add
or
jo
or
push
dec
insb
adc
repz
and
out
iret
cmp
push
fs
jbe
push
sbb
test
push
sbb
mov
jcxz
cmp
mov
fidivl
scas
pop
jle
mov
rcll
inc
mov
cmp
xchg
inc
out
and
sbb
jg
stc
xchg
test
pusha
mov
pop
push
ret
out
and
aam
es
dec
mov
jae
stos
pusha
mov
inc
out
stc
sub
lds
nop
cmp
mov
daa
clc
inc
lods
pushf
xchg
push
mov
sti
in
movsl
loopne
fs
movsl
inc
jmp
pop
xor
and
adc
ret
fdivrs
add
cmpsb
add
pushf
lods
jbe
in
pop
dec
fstps
loope
in
mov
lock
adc
stos
mov
push
mov
and
dec
enter
in
fsubr
inc
dec
test
icebp
push
pusha
outsb
popa
jae
fstp
jo
pop
jge
fsubr
adc
aas
les
pop
jne
in
dec
test
cs
ljmp
or
pop
and
lret
in
lods
pop
pop
inc
cmp
ljmp
adc
cmp
roll
sub
mov
adc
mov
sti
arpl
sbb
test
jecxz
nop
enter
push
sbb
inc
push
jmp
int
mov
push
out
gs
inc
inc
cmp
rcrb
out
sbb
fisttps
adcl
in
jnp
inc
rolb
lahf
insb
sub
jg
fwait
sub
test
pop
push
adc
and
sbb
xchg
cmp
push
sub
enter
jne
in
jge
sub
sbbb
nop
xchg
orb
imul
popa
adc
jg
fldl
lret
test
xchg
ret
mov
xchg
mov
push
inc
xor
xchg
xor
test
cmc
fistpll
jecxz
or
fstps
mov
je
fld
cmp
es
mov
inc
pushf
dec
ja
jae
in
fwait
or
cmp
lret
mov
and
insl
and
pushf
push
lret
jnp
xor
loopne
jo
inc
int3
cs
jne
pop
jae
sbb
aaa
pop
rorl
fs
jp
stos
mov
bound
loopne
hlt
mov
pop
xlat
cmp
dec
addr16
jno
pop
xlat
pop
mov
pop
add
cmpl
mov
decl
adc
or
sbb
or
mov
aam
cmpb
adc
stos
idivb
decl
dec
xor
xchg
add
outsl
mov
cmp
or
add
xor
sub
gs
fwait
xlat
pop
les
fadd
movsb
cmc
mov
xchg
jge
jg
xchg
hlt
shrb
mov
loope
or
mov
sub
mov
pop
adc
xor
push
je
andl
pop
enter
lret
add
popf
clc
scas
cmp
and
call
faddl
mov
and
mov
sysret
mov
roll
pop
inc
stos
imul
outsb
pop
xchg
aas
daa
pop
repnz
push
sub
lcall
add
inc
sub
gs
jmp
loope
int3
je
push
cmp
xchg
sbb
mov
in
adc
in
push
lock
in
xchg
sbb
jp
subl
call
jnp
sbb
jbe
hlt
insl
pop
fs
cli
xorl
pop
jmp
mov
pop
sbb
sub
ja
add
daa
mov
out
or
pusha
lret
stc
and
fsubl
fwait
iret
cmp
cmc
mov
call
into
push
adc
xchg
sarl
xor
pop
or
sbb
mov
xlat
push
push
dec
aaa
out
pop
mov
pop
inc
push
push
dec
add
jno
xchg
push
idivb
or
xor
jecxz
or
pop
push
and
cmp
sub
mov
jnp
mov
xor
ljmp
xor
lea
add
pop
mov
jnp
cmp
sti
dec
movsb
in
leave
insl
xsaveopt
jmp
popf
push
sub
repz
xchg
mov
lret
idiv
jg
stc
xlat
push
inc
add
inc
mov
add
fidivrs
cmp
scas
jmp
xchg
cld
inc
fnstcw
or
pop
mov
ljmp
pop
stos
mov
push
inc
and
lods
dec
adc
movsl
push
fcomi
mov
imul
lea
jge
sub
sbb
int3
jns
dec
in
mov
cltd
jnp
adcb
test
js
mov
cwtl
pop
iret
push
lret
sub
sub
js
xchg
mov
sbb
dec
jmp
or
movsb
cmp
xchg
xor
push
push
and
loopne
mov
and
push
jo
add
mov
orb
lds
cmp
pop
popf
cmc
aam
cltd
loop
leave
and
pop
nop
mov
mov
adc
pushf
add
cmp
imul
sbb
insl
jne
mov
sbb
pop
dec
in
aaa
or
lcall
popa
mov
fsubrs
pop
mov
xchg
adc
sbb
and
lahf
xor
and
push
xor
das
pushf
jno
mov
loope
jb
lret
aad
and
dec
aad
outsl
pop
pushf
in
push
xor
fdivs
xchg
push
sbb
xchg
outsl
test
mov
xor
jmp
add
adc
in
push
into
sub
sbb
cmpsl
in
jmp
mov
sub
xor
pop
jnp
push
cmpsb
pop
xchg
cmp
or
jne
cwtl
push
xor
divl
and
bound
sbb
jno
sbb
sub
and
dec
cmc
stos
mov
repnz
dec
mov
cs
inc
push
pusha
int
adc
popa
call
fidivs
xchg
repnz
into
loope
dec
sub
rcr
or
mov
mov
jns
xchg
xchg
loop
add
aas
inc
out
pop
cmpsl
and
adc
sarb
and
lret
push
mov
add
xchg
ss
cmp
add
jns
xchg
mov
flds
adc
push
jl
gs
clc
outsl
std
add
cli
mov
mov
jge
and
leave
outsl
xchg
aaa
xchg
or
mov
sbb
xchg
xchg
add
sbb
nop
ja
jecxz
xchg
insb
mov
insb
outsl
popf
adc
mov
jge
out
and
les
mov
sub
push
cmc
icebp
xorl
iret
inc
fiaddl
inc
daa
cmc
aaa
dec
and
lret
repz
in
fisubs
iret
mov
sub
jno
insb
js
adc
mov
pop
xlat
mov
insb
or
aas
daa
lods
jb
push
inc
jmp
and
std
and
mov
adc
sub
mov
xchg
adc
push
push
cmp
pusha
dec
fstpt
mov
inc
mov
test
cmp
inc
rcrl
stc
bound
xor
mov
icebp
insb
cli
adc
jle
xor
movsl
cld
and
sbb
push
test
sub
enter
dec
hlt
sbb
fnstsw
pop
insb
pop
pop
lods
dec
movsb
iret
pop
scas
mov
and
das
shlb
daa
lds
dec
movsb
lcall
sub
xchg
jmp
daa
js
clc
js
repnz
jo
cmpsl
push
mov
mov
jg
mov
cmp
cmp
enter
push
adc
lods
push
test
jns
fadds
stos
inc
lock
ja
xchg
sahf
lahf
xor
stc
jne
lods
cmpsl
inc
dec
mov
fs
jae
jle
mov
sbb
and
into
xchg
je
mov
rorb
cmc
mov
pop
loope
or
dec
push
fcompl
loope
imul
mov
mov
aaa
shlb
enter
xchg
fwait
dec
rol
jl
push
outsl
push
divl
loope
jb
out
rol
dec
push
cwtl
mov
enter
stos
pushf
movsb
mov
jne
cmpsb
ret
cld
push
cmp
outsb
jno
dec
and
dec
push
nop
ja
hlt
add
inc
xor
xchg
scas
dec
mov
jle
jnp
insl
xchg
jno
insl
mov
xchg
and
xchg
insb
scas
paddw
ljmp
push
sti
orb
int
filds
push
dec
mov
lea
shrb
jp
mov
xor
sbb
mov
imul
shlb
imul
dec
bound
xor
lods
testl
gs
ja
leave
mov
mov
not
sub
rcrl
jl
mov
int3
jmp
ficompl
test
xorb
jnp
adc
adc
xchg
mov
jbe
jg
xchg
fwait
mov
insl
and
sti
cmpl
loopne
test
aad
and
push
mov
jnp
dec
sbb
insb
push
cltd
mov
mov
pusha
andb
mov
pop
in
mov
inc
xchg
movb
jo
leave
fwait
aam
in
xor
cmp
jl
inc
jo
sbb
sub
cwtl
push
xchg
dec
sbb
jae
inc
pop
sub
cmp
jno
fs
mov
sbb
and
add
cmpsl
imulb
cli
fdivl
int
into
loope
cmpsl
mov
movsb
jb
cmp
mov
pop
xchg
orl
icebp
add
push
xor
and
std
lahf
xchg
push
ds
popa
arpl
xor
faddl
adc
inc
cmova
loope
inc
test
imul
stc
pop
inc
in
pusha
jmp
push
ljmp
sbb
xor
bound
dec
push
pop
push
mov
jbe
fcoml
adc
lods
mov
sahf
leave
mov
and
or
cli
sahf
sub
adc
sbb
mov
add
xor
mov
adc
cwtl
cld
rorb
cmpsl
push
and
adcl
cmpsl
jb
mov
popf
test
and
mov
xor
adc
xchg
in
sub
ret
push
adcl
cmp
aad
enter
or
jno
or
ja
test
pop
leave
xchg
dec
add
cmpsb
lock
jnp
inc
es
jp
stos
mov
dec
pop
dec
arpl
inc
push
imul
push
pop
cmp
push
scas
cltd
jo
andl
into
xor
je
mov
sbb
jnp
test
fwait
dec
cltd
outsb
cwtl
outsb
lret
push
test
fxam
fistpll
xchg
jecxz
inc
in
ljmp
das
push
cmp
or
cmp
orb
or
push
cmc
dec
inc
pusha
lcall
jle
push
mov
jnp
test
add
stos
inc
movsl
in
inc
mov
xor
ss
mov
out
pop
lods
ret
popa
sub
es
pushf
test
inc
dec
fbld
adc
es
push
or
sbb
and
sbb
call
mov
mov
movnti
fidivrs
cmovge
aam
jmp
in
sbb
and
push
arpl
push
ds
mov
jo
push
pandn
xor
pop
mov
push
aaa
xchg
iret
mov
mov
lods
js
out
mov
sub
jp
and
stos
sub
cmp
ret
pop
push
mov
aad
shl
aas
pop
dec
xor
js
data16
imul
xchg
inc
hlt
call
xchg
adc
or
lods
shrb
aas
xor
ds
cmp
jo
jg
jmp
into
dec
rcr
test
dec
mov
out
xchg
mov
pusha
enter
fsts
and
xorl
xchg
inc
xor
or
lds
or
data16
ss
inc
and
add
clc
out
or
cmp
popf
icebp
stos
add
mov
inc
into
cmpsl
or
sbb
cltd
xchg
lock
scas
mov
in
push
inc
insb
mov
and
xchg
mov
mov
inc
ror
push
jo
jecxz
ljmp
add
xchg
push
adc
dec
or
or
out
sbb
add
xchg
and
daa
icebp
clc
mov
lret
cmp
mov
or
mov
lret
outsl
mov
scas
sbb
jbe
adc
lcall
mov
xchg
mov
mov
hlt
sub
jbe
push
ficomps
ret
mov
sbbl
dec
inc
add
rcrl
adc
pushf
fadds
sub
popf
xor
call
cld
xchg
popf
mov
dec
movsl
inc
and
imul
cmpsb
dec
call
scas
fsubs
ret
nop
ljmp
gs
pop
inc
ljmp
mov
sbb
mov
xor
add
jno
inc
jge
lea
mov
icebp
in
sar
or
add
jno
inc
jge
lea
mov
icebp
in
sar
or
add
jno
inc
jge
mov
mov
icebp
in
vpmullw
add
pop
jno
inc
std
xchg
jb
bound
pop
cmpl
scas
in
dec
cld
pop
int3
imul
cmp
inc
xchg
cmp
rorl
stc
sub
cmp
or
sbb
in
dec
cld
pop
int3
imul
sbb
jl
dec
call
cmp
or
sbb
in
dec
cld
pop
int3
imul
sbb
pop
cli
and
lds
jb
mov
cwtl
sub
cmp
testb
mov
lds
jns
pop
push
sbb
dec
ja
nop
add
hlt
push
sbb
xchg
fyl2xp1
es
mov
ret
xchg
call
lret
mov
leave
xlat
pop
bnd
leave
sub
dec
out
pushf
push
jl
inc
movsl
imul
dec
cmpsb
jl
das
mov
test
fabs
xor
ss
cltd
jl
fsubrl
mov
sub
and
mov
cmp
and
jg
ret
mov
pop
adc
add
xlat
push
jno
inc
dec
xchg
add
mov
mov
je
jl
mov
dec
test
cld
pop
int3
imul
sbb
jl
dec
jmp
cmp
or
sbb
lods
dec
mov
movsl
sub
insl
call
mov
and
sub
fistpl
mov
mov
lods
dec
stc
pop
hlt
jle
pop
or
stos
sub
int3
imul
mov
cmp
insb
leave
jl
dec
jmp
cmp
or
sbb
in
dec
cld
pop
int3
imul
sbb
jl
dec
jmp
cmp
or
sbb
in
dec
fnstenv
push
repz
addr16
fstpl
dec
fwait
gs
dec
repnz
pop
inc
aaa
daa
nop
inc
adc
push
fisubrl
or
sub
jmp
rorl
xchg
xlat
push
sbb
and
lock
xlat
leave
mov
xor
xchg
pushl
xor
out
mov
loopne
pop
aas
insl
add
or
adc
mov
mov
into
ret
sbb
lods
dec
xchg
push
loope
enter
loop
mov
leave
mov
leave
cmpsl
mov
pop
cmpsl
addr16
jle
pop
ret
arpl
cwtl
adc
lret
adc
add
in
xchg
jp
insb
push
movsb
jmp
lahf
push
jne
push
xor
xchg
sbb
rolb
test
push
push
add
rcrl
movsb
ret
sbbl
push
imul
jp
es
lea
dec
sbb
mov
xlat
mov
jmp
xorl
jnp
push
mov
dec
andb
inc
dec
gs
test
mov
stc
aam
ret
cltd
fwait
xchg
xlat
mov
test
sub
test
ret
lret
stc
popa
pusha
sbb
xlat
add
pop
notl
fwait
out
push
inc
ret
inc
iret
adc
shrl
cmpsb
lds
popf
mov
cmp
and
test
jp
cmp
jge
and
je
jns
or
mov
jne
andl
sub
in
mov
inc
popf
inc
lret
add
or
icebp
jge
adc
pop
cld
dec
cli
cmpsl
andl
loope
cmpsb
xchg
mov
push
mov
sbb
and
movsb
pop
loop
adc
imul
pop
lea
cmp
pop
pop
std
adc
jo
or
push
dec
xchg
mov
popa
xor
dec
fyl2xp1
jb
ljmp
xor
or
incb
mov
adc
gs
xlat
mov
sub
idivb
cmpsl
lea
lds
fsubl
push
sbb
cmpsb
pop
sbb
sub
addr16
and
ss
pop
rcl
fwait
xchg
jne
sbb
ds
ffree
mov
inc
cmp
repz
xchg
and
add
sbb
xchg
out
bound
cli
outsb
orl
ret
out
inc
push
jbe
add
adc
mov
add
sbb
mov
or
and
stos
test
jmp
xchg
cmovge
aad
adc
or
js
insl
or
std
ret
jbe
nopl
fdivrs
pop
ljmp
std
adc
loope
xchg
into
sub
mov
movsl
cmp
and
pop
dec
sub
xlat
leave
ret
inc
pop
pop
mov
xchg
scas
jge
fwait
add
gs
mov
inc
cmc
insl
push
inc
xchg
js
jae
mov
pushf
mov
ficoml
mov
scas
int3
jbe
aam
rcll
mov
lret
and
mov
mul
fnstcw
ret
mov
fdivs
lahf
jl
mov
and
fnstcw
sbbb
mov
jnp
add
andb
push
dec
movsl
mov
jns
sub
insl
mov
add
pop
movsb
mov
test
cmp
call
pusha
xchg
int
sub
mov
rorl
mov
pusha
cmp
and
xchg
mov
jo
fsubs
rolb
cmc
mov
cmp
push
mov
lea
mov
hlt
xchg
fstps
outsb
mov
add
mov
fdivrs
pop
mov
lahf
push
jmp
std
xchg
nop
lea
add
in
mov
dec
stos
sub
dec
or
jnp
cmp
mulb
jne
ret
mov
cmp
cmpsl
adc
xchg
shrl
fisttps
add
push
fwait
cmp
jmp
movsb
mov
clc
leave
mov
mov
jecxz
push
mov
add
jle
out
and
xor
sti
dec
xor
mov
add
and
daa
pop
xchg
mov
addr16
mov
cmc
and
cmc
test
jno
pop
xchg
mov
mov
scas
addl
sub
cmp
into
outsb
fidivs
scas
mov
or
out
cltd
stos
ss
adc
scas
cmp
shrl
bound
enter
cmc
cld
dec
movl
adc
sub
xchg
iret
mov
clc
jo
fadds
mov
inc
loopne
mov
ljmp
cmc
sub
loope
xchg
and
push
lods
outsb
pop
and
push
jmp
jae
cmp
test
in
stc
das
pop
and
adc
and
in
outsb
or
popf
sbb
in
and
cmpsl
shl
jl
cmpsb
in
test
mov
in
pop
out
push
mov
rorl
xor
lock
jmp
lcall
mov
mov
pusha
pop
mov
test
jle
or
and
mov
dec
cli
sub
xchg
push
xchg
andl
lods
arpl
sahf
hlt
lock
popa
cwtl
mov
mov
mov
lcall
cmp
mov
into
pushf
fdivr
js
in
das
jbe
mov
push
cmpsl
ja
add
outsl
adcb
sbb
fisttpll
mov
out
inc
loope
mov
lret
pop
div
pop
xchg
fdivrl
fs
decl
dec
rorb
iret
pusha
pop
in
pop
xor
sbb
push
push
pop
jl
jbe
aad
int
rcrl
loopne
lds
lods
js
stos
pushl
mov
xor
aad
mov
dec
pop
lea
insb
test
jne
xor
js
cwtl
sbb
enter
push
pop
cld
repnz
jbe
je
sub
push
gs
pop
movsl
daa
cmp
data16
dec
sub
push
rcl
xchg
push
cmpsl
mull
and
fcmove
or
daa
pop
push
stc
push
scas
or
sbb
test
xor
push
mov
sbb
or
outsl
mov
jp
mov
pop
inc
stos
cmp
popa
inc
mov
mov
mov
and
lret
jae
lahf
rolb
adc
mov
lds
stos
jno
mov
cli
dec
ds
cmc
push
mov
movsb
pop
iret
les
movsl
rorl
xchg
jge
test
std
leave
fdivl
adc
mov
mov
mov
fwait
pop
sbb
punpcklwd
imul
push
mov
movsb
mov
push
ret
xchg
sar
xchg
sub
cmp
dec
test
mov
popf
mov
sbb
lods
adc
sbb
cmp
push
fwait
stc
rcll
dec
xchg
fiadds
cmpsb
and
bound
sub
lods
cltd
mov
sub
mov
mov
movsb
test
inc
cmc
push
jno
aad
pushf
aaa
push
mov
cmc
sub
cld
pusha
mov
adc
iret
fs
sti
push
pop
mov
aam
movswl
sub
pop
jae
loope
lret
xor
test
fsubs
mov
lret
add
cmp
mov
sbb
cmp
pop
lods
mov
cmp
shlb
push
stos
lret
jnp
mov
dec
push
pop
lds
adc
lret
cmpsb
inc
adc
inc
lods
and
mov
ja
push
inc
adc
in
mov
mov
sub
into
lea
arpl
push
jle
and
ds
xor
clc
call
lret
sbb
arpl
add
daa
inc
scas
inc
lret
push
mov
push
cmp
rcrb
test
mov
fstps
sub
xor
into
aam
insb
je
lret
lods
inc
cmp
and
fcmovbe
imul
or
dec
repz
lods
mov
pop
loopne
or
in
jne
xchg
ss
pop
jge
sysexit
int3
sub
imul
adc
xchg
int3
jle
fidivs
mov
pop
add
jb
adc
mov
xchg
fldl
ret
lret
mov
mov
sub
bound
cli
add
pop
mov
adc
int3
insb
xchg
xlat
lods
stos
das
fs
push
inc
xor
in
add
es
gs
inc
fs
cmc
repnz
es
data16
adc
sub
sub
push
mov
dec
js
cmp
mov
test
xor
mov
mov
mov
loope
nop
ljmp
iret
xor
scas
inc
popa
lahf
int3
loopne
adc
jb
push
mov
les
or
dec
js
repnz
mov
xchg
enter
and
add
fdivl
or
jge
test
and
neg
push
xchg
dec
push
jmp
stc
iret
test
or
das
rolb
or
inc
pop
out
add
xlat
push
or
xchg
jl
jecxz
cltd
in
cwtl
cmc
jle
test
or
mov
sbb
xchg
pop
dec
test
mov
push
outsb
jmp
mov
lahf
xchg
fnstcw
and
jge
ror
sub
cli
call
cmp
inc
loopne
cmpsl
fwait
mov
dec
loopne
ljmp
jl
andl
inc
or
stos
rorl
push
pop
xchg
xchg
dec
ljmp
bound
test
mov
out
mov
loopne
popa
dec
mov
and
nop
mov
push
mov
pop
or
movsb
ficomps
xchg
ficoms
lock
cmp
movl
repnz
fwait
or
or
dec
xor
mov
lods
mov
fwait
insb
enter
fwait
mov
pop
mov
jb
xchg
aas
sbb
mov
call
pusha
mov
push
mov
outsl
push
or
xchg
mov
and
stos
imul
add
mov
xchg
lret
addb
jg
inc
mov
addr16
ds
mov
lcall
or
cmp
add
mov
aam
pop
push
daa
xor
dec
in
mov
in
shl
cmp
inc
mov
cmp
sarb
lcall
cmp
jecxz
mov
sbb
std
sbb
or
pop
jae
ror
sahf
movsb
leave
int3
out
cmp
adc
push
mov
mov
add
dec
ljmp
or
stos
mov
adc
sub
pusha
mov
test
mov
mov
mov
pop
xchg
daa
adc
push
mov
test
test
xchg
sub
stc
ds
or
movsl
sbb
sbb
xor
aas
or
into
and
into
mov
outsb
psraw
xor
sbb
adc
xor
repnz
dec
push
jge
pop
inc
inc
call
cmp
icebp
jmp
ret
push
out
push
js
cmp
fs
xchg
ds
xchg
lret
pop
push
insb
add
fdivs
shrb
mov
pop
jecxz
hlt
mov
jnp
sbbl
sbb
sub
aas
repnz
mov
scas
pushf
stos
cs
jmp
aam
int
mov
int
lods
into
xchg
ds
insb
mov
dec
dec
fimuls
daa
adc
fsubr
shl
int3
call
or
adc
insl
pop
shll
mov
xchg
and
mov
enter
cmp
popa
push
int
mov
pop
loop
in
jb
cmp
pop
xchg
push
push
fimull
or
stc
mov
out
push
jae
mov
lods
loope
cld
dec
ss
cltd
jecxz
push
aas
lds
cmp
xchg
xor
iret
mov
adc
xor
mov
jge
je
es
fst
pushf
dec
xchg
dec
or
iret
pop
xchg
stc
jg
movsb
dec
dec
add
jecxz
mov
inc
int
xor
mov
jmp
mov
nopl
aaa
popf
clc
ljmp
jb
stos
sbbl
cmp
pop
inc
int
fildll
sbb
mov
adc
out
inc
fdivrs
and
mov
fstl
shr
xchg
dec
lods
repnz
inc
adc
sbb
in
mov
jb
adc
sbb
jecxz
leave
jae
dec
hlt
or
mov
hlt
lods
aam
xchg
ja
shl
out
push
pop
cltd
rcll
or
sub
pushf
mov
and
lods
jg
mov
jmp
inc
dec
dec
mov
cs
push
mov
fs
push
lret
fisubl
enter
push
idivl
add
stos
das
and
rcrl
mov
push
test
lret
ret
js
popa
mov
int3
shlb
pop
mov
cmc
cmp
mov
dec
xor
sub
push
mov
mov
ret
aas
inc
in
loop
inc
fisubl
xor
mov
das
icebp
fmull
aam
jl
mov
ss
xor
mov
imul
push
je
movsb
lods
rclb
pusha
cmovne
sbb
xor
sbb
inc
mov
mov
rcll
push
add
adc
nop
xchg
shrb
inc
fcoms
stc
adc
mov
inc
adc
fistpll
jb
xor
inc
lahf
cmp
lock
push
fstpt
cli
loop
jg
mov
je
stc
push
push
push
insl
in
xor
xchg
inc
orl
jp
mov
mov
inc
cmpsl
jns
imul
mov
push
orb
stos
sbb
imul
out
movsb
fwait
je
sub
mov
xchg
ret
popf
jno
leave
dec
enter
orb
fidivrl
shrb
je
dec
loop
rcll
mov
pop
daa
pop
scas
out
push
pop
leave
pop
inc
cwtl
faddl
push
mov
pushl
repz
shlb
inc
lock
fmull
adc
and
cmp
xor
enter
fsts
adc
rcr
cs
ja
lds
and
insl
fists
test
mov
push
sti
imul
pop
cmp
add
std
sub
pushf
dec
dec
fcmovnu
push
mov
ret
shlb
shr
push
or
mov
stc
cld
dec
mov
testb
aaa
dec
and
iret
cs
push
push
pop
and
lds
lahf
inc
adc
fcoms
in
jns
xlat
jnp
cmp
xor
pop
popf
add
daa
iret
and
sub
adc
pop
pop
fidivs
cs
push
das
in
xor
sub
inc
dec
pop
cmp
adc
dec
dec
in
add
pop
int
and
mov
repnz
movsb
mov
jnp
dec
pop
je
dec
enter
xor
xlat
pop
addb
pop
jl
mov
adc
add
jle
outsl
popf
jge
filds
jb
push
adc
mov
pop
xchg
orb
mov
mov
dec
loop
mov
xor
push
inc
shlb
insb
fidivrs
push
mov
jne
mov
cld
jns
pop
xlat
inc
mov
jns
inc
fcoml
cmp
in
rorb
or
or
enter
mov
jno
int3
sbb
je
add
mov
or
pop
xchg
movsl
loop
dec
push
pop
cmp
call
pop
int
jge
and
inc
push
in
stc
mov
or
test
mov
inc
rorl
push
rorl
enter
pop
xlat
or
loop
test
fcoms
fisttps
bound
arpl
mov
xor
pop
popf
cwtl
loopne
cmpsl
cmc
dec
jo
or
sarl
xchg
sbb
js
lock
movsb
sbb
call
cli
ficoms
out
in
add
iret
sbb
jne
pushf
cs
dec
loop
pop
mov
cmpsb
mov
mov
xchg
repz
loopne
jo
xchg
out
aad
or
jno
je
mov
mov
pop
jg
lcall
mov
or
lock
outsl
subb
mov
add
nop
or
add
cmpsl
subb
ret
push
call
xor
adc
dec
dec
dec
lds
mov
sti
xchg
aad
pop
xlat
out
push
xor
fisubrl
mov
je
rcl
cmp
ficoml
xor
jmp
movsl
jbe
rcl
pop
out
or
ja
jg
popa
sbb
lods
push
jl
sub
sub
xor
sub
pushfw
inc
jle
mov
xchg
into
scas
imulb
outsl
sbb
icebp
sbb
fimull
rol
xor
adcl
cmc
cs
shl
mov
test
popa
pop
pop
xchg
pop
inc
mov
push
cltd
sub
sbb
xor
je
mov
jle
push
test
xor
cwtl
mov
int
das
and
push
lods
mov
mov
enter
test
gs
ljmp
push
out
je
sar
and
mov
xor
cli
pop
outsl
sub
fcmovne
add
pushf
and
outsb
pop
les
and
sub
shlb
xor
lcall
shlb
cli
pop
les
ret
rcll
js
ja
push
mov
or
arpl
inc
xchg
in
fdivrs
mov
mov
movsl
push
bound
sbb
fs
sti
insb
test
in
mov
test
cmpsl
xchg
aad
les
cmpsl
lea
aad
clc
out
es
aaa
repz
addr16
add
or
popf
xchg
je
or
push
sub
sub
cmp
dec
sub
loopne
mov
xchg
pop
mov
hlt
in
xchg
ficoml
gs
aad
push
jle
dec
fadd
insl
filds
xor
icebp
pop
les
sbb
pushf
sahf
out
shll
test
repnz
mulb
fwait
mov
cmpsb
lock
outsl
subb
pop
clc
and
adc
cmp
shlb
xchg
pushf
xchg
jecxz
popf
lea
or
lret
movsl
mov
add
xchg
mov
sti
dec
push
lret
pop
cmp
pushf
inc
xchg
dec
aad
cmp
mov
leave
les
pushf
fstp
push
dec
js
fbstp
daa
ss
mov
mov
shrb
xchg
dec
rcrb
sub
pop
aam
sbb
movsb
lods
in
pop
roll
xchg
leave
andl
inc
ljmp
mov
mov
dec
xor
aad
inc
or
cmc
in
mov
scas
cld
jns
sahf
addr16
sahf
cmpsb
inc
adc
or
or
das
cltd
add
jl
mov
js
fsubr
pushf
stos
in
lcall
xchg
sub
add
arpl
xor
or
mov
cld
outsb
stc
inc
enter
push
pop
add
adc
jns
mov
les
sub
mov
sub
out
jle
gs
jg
lret
clc
hlt
ljmp
std
push
mov
inc
leave
adc
pop
add
add
test
mov
dec
popf
jle
gs
or
insl
out
push
stc
lret
or
xor
mov
xchg
dec
sbb
push
dec
pop
cli
loopne
pop
xchg
out
sub
sbb
jp
xchg
shlb
cwtl
roll
and
sub
and
iret
inc
or
inc
push
mov
mov
push
cli
lods
sbb
lock
or
cmp
adcl
adc
nop
in
or
jbe
aaa
ds
fcomps
mov
out
mov
scas
into
add
adc
sbb
mov
cs
pop
sbb
jge
mov
cli
aaa
and
add
xchg
repz
les
adc
adc
into
flds
and
add
pop
ss
in
jae
testb
pop
fadds
rorl
jge
sub
addr16
aaa
jbe
mov
les
mov
test
pop
decl
jae
pop
pop
and
sbb
call
adc
jo
mov
fists
jle
adc
neg
fs
lods
out
daa
pop
add
pop
jo
int
sbbl
inc
xchg
sub
cli
movsb
lret
or
cwtl
call
xor
sbb
and
add
push
and
into
inc
ss
adc
int
add
sub
jecxz
loop
inc
pop
mov
mov
arpl
mov
push
mulps
mov
ret
out
sub
push
mov
jmp
mov
stos
lret
cmp
rol
mov
cwtl
xor
hlt
mov
lods
inc
mov
mov
cmpsl
or
ror
xchg
adc
xchg
imul
cmp
mov
loop
jp
shr
mov
dec
adc
das
push
jb
lock
push
fldcw
aaa
aaa
xor
jp
aaa
push
xchg
jno
sbb
xlat
aam
sbb
pop
dec
aad
cld
add
rcrl
xchg
xor
pop
mov
pop
inc
jne
clc
adc
cmp
sbbb
fdivrl
or
insb
leave
jl
dec
jmp
cmp
or
sbb
in
dec
cld
pop
int3
imul
sbb
jl
dec
jmp
cmp
or
sbb
in
dec
jl
dec
imul
sbb
jl
dec
jmp
cmp
or
sbb
in
dec
cld
pop
int3
imul
sbb
jl
out
pop
mov
data16
insb
inc
cmp
push
push
arpl
imul
add
movsb
ret
in
aam
repz
movsb
push
xchg
mov
fs
push
arpl
add
adc
add
movsb
ret
in
cli
jecxz
repz
rclb
inc
in
shlb
jae
add
and
xor
imul
xchg
xabort
jecxz
divl
adc
and
stc
pop
aaa
pop
out
loope
shrl
xor
insb
add
fucomi
aas
and
sbb
loop
jle
divb
loop
sbb
xchg
les
mov
arpl
mov
sbb
and
push
dec
subb
addr16
fstpt
xor
shrb
scas
adc
add
adc
sbb
mov
sbbl
stos
out
mov
add
mov
aas
mov
sub
xor
movsb
outsl
les
icebp
aad
lods
stos
add
fcompl
or
sbb
aad
repnz
xchg
mov
inc
fs
push
arpl
jae
add
adc
mov
rorl
aam
mov
fiaddl
sub
push
adc
sub
pop
outsl
push
adc
insl
arpl
mov
loopne
mov
in
push
adc
add
inc
ja
push
ja
int3
mov
test
loopne
clc
loope
or
and
add
adc
add
hlt
ret
in
aam
repz
movsb
xchg
xchg
mov
fs
push
arpl
add
adc
add
hlt
ret
in
aam
repz
movsb
xchg
xchg
mov
mov
xor
iret
dec
scas
je
pusha
cmc
mov
push
repz
and
xchg
sti
aad
mov
pusha
or
shl
jnp
sti
sbb
mov
popf
cmovne
pushf
sub
sbb
jecxz
push
xchg
adc
fisttps
jge
sbb
mov
arpl
ss
xor
aam
pusha
daa
cmp
mov
pop
xor
sbb
cs
push
or
push
js
or
mov
insb
push
mov
add
and
movsb
mov
adc
movsl
imul
ja
lods
imul
insb
push
inc
js
sub
xchg
and
jle
mov
fstp
jmp
jg
push
fwait
pop
jecxz
add
sarb
add
push
out
and
adc
adc
push
and
cli
nop
sbb
test
dec
pop
sbbl
sahf
test
out
dec
cmp
fldt
pop
pusha
or
push
dec
or
cmpsb
enter
push
xchg
imul
sub
jnp
add
push
sub
outsl
jbe
cmp
stos
xchg
sub
in
sub
insb
add
pause
xor
jmp
sub
sbbb
mov
or
xor
or
dec
dec
notl
and
lret
daa
mov
pop
pop
mov
inc
jmp
icebp
or
rorb
jb
add
cld
or
and
jecxz
push
mov
mov
out
stc
mov
ja
stc
or
push
int3
and
test
pop
jno
mov
jnp
mov
scas
or
iret
rol
xlat
shrl
mov
nop
or
mov
out
sbb
add
stos
jo
ret
cmpsb
popl
and
xchg
js
dec
xor
jg
roll
in
jno
sub
mov
lds
loop
fs
in
dec
fcmovbe
ret
and
mov
in
add
mov
je
outsb
insb
and
push
push
faddp
push
pop
dec
cwtl
sbb
lock
adc
push
xorl
sbb
cmp
nop
cltd
add
fcmovne
jl
mov
pop
sbb
adc
call
xchg
and
mov
mov
and
pop
dec
xor
psrlq
inc
xor
lret
rolb
xor
adc
mov
daa
ds
adc
in
popa
push
push
repnz
xor
add
gs
arpl
out
push
fmull
or
dec
xchg
push
jne
sbb
mov
pop
xor
or
imul
dec
mov
jns
in
xor
or
je
mov
push
fdivs
mov
mov
cmp
inc
mov
xchg
fiaddl
adc
pop
sbb
sbb
pop
push
mov
jae
outsl
cld
aad
adc
out
popa
mov
imul
pushf
jno
mov
popf
dec
and
data16
ret
loope
repz
popa
dec
xchg
inc
arpl
cs
lds
cmp
cs
jmp
dec
fmulp
inc
mov
pop
add
and
push
xchg
or
jge
movsb
lret
jbe
stc
cmp
insl
fcompl
jae
fistl
out
test
or
shrb
scas
dec
cld
movsb
stc
and
add
enter
pusha
icebp
stos
mov
inc
mov
pop
push
sub
shll
xchg
or
jecxz
enter
repz
inc
pop
pop
leave
cmp
pop
int
ljmp
cld
inc
inc
or
sub
mov
sahf
stos
mov
push
push
mov
or
cmp
insb
xor
loope
ret
xchg
pop
xor
xorb
xor
jb
out
dec
shlb
xor
sub
dec
inc
imul
push
int3
lahf
dec
xchg
pop
or
xorl
or
daa
fsubs
imul
xchg
mov
sbb
out
mov
into
jno
inc
xchg
int3
stos
mov
mov
je
dec
mov
repnz
in
inc
adc
pushf
inc
adc
push
xor
dec
daa
cmp
add
or
out
add
mull
lcall
pop
sub
jnp
rcl
mov
movsl
cmpl
mov
and
out
mov
lea
pop
movsl
ret
loop
mov
dec
push
leave
jg
decl
fwait
xchg
mov
insl
subb
shrl
test
cmpsl
push
int3
sbb
in
call
push
mov
add
lods
fucomp
adcl
inc
ret
mov
xor
sub
cltd
xchg
shrl
pop
mov
faddl
outsl
testb
out
push
pop
push
pop
rorl
movsl
mov
aas
push
cwtl
xchg
aaa
insl
xor
punpcklbw
hlt
mov
xor
mov
test
stc
ret
mov
movsl
jns
jecxz
js
rcrl
fldl
shlb
add
or
dec
ret
in
out
jae
call
stos
sbb
xchg
pushf
repz
mov
js
icebp
cmp
jecxz
push
add
es
adc
and
push
jo
dec
test
mov
imul
lock
xchg
scas
clc
dec
in
or
das
dec
pop
dec
mov
ret
dec
cmpsb
add
mov
mov
or
pop
std
aam
pop
movsl
int
arpl
xchg
popa
std
cmc
into
and
sub
mov
mov
mov
shl
push
push
xchg
fnstsw
sub
push
cmc
sti
jnp
or
das
cs
sbb
jle
test
sub
sbb
xchg
into
cmp
sbb
stos
dec
imul
inc
ret
and
mov
sbb
rclb
push
xchg
add
aam
ja
cmpsb
lcall
pop
sub
cmc
arpl
jge
rcll
xor
cs
sub
inc
sub
xor
and
jp
shrb
sub
push
xor
pop
jns
ss
cltd
aad
pop
inc
mov
pop
cmp
add
jl
push
adc
into
imul
pop
jns
xchg
pop
and
aas
xchg
mov
nop
insl
fcomip
xor
rorb
push
or
cmpsb
lea
shll
loop
popfw
mov
adc
jmp
ds
test
mov
jp
test
jno
mov
mov
sbb
inc
movl
outsb
outsl
push
cmc
rcl
sbb
hlt
add
jo
leave
sbb
pop
or
popa
iret
jns
gs
fisubs
add
subb
out
xchg
and
aas
pushf
inc
sub
lods
rolb
inc
or
dec
jmp
adc
mov
add
cmp
scas
push
fldt
and
js
out
sub
jbe
out
mov
outsb
call
cmp
xchg
pop
sti
pop
sub
pop
outsb
or
add
mov
cltd
imull
xor
cmc
hlt
mov
xchg
inc
mov
lret
stc
mov
lods
xchg
adc
xor
dec
movsb
cmpl
xchg
pop
cmp
push
dec
je
adc
dec
mov
and
sub
push
ds
mov
xor
lret
dec
mov
addr16
inc
xor
inc
mov
dec
dec
mov
andb
inc
sbb
push
inc
dec
sub
mov
cli
into
rclb
or
add
mov
fs
shrl
in
mov
cmp
popa
addr16
ja
imul
xchg
adc
js
stc
and
fadd
dec
pop
push
ljmp
cmp
call
jns
js
pushf
sub
push
xor
rcl
xor
pop
stc
pusha
mov
fs
mov
lcall
fldcw
sub
out
push
cld
stc
xchg
jns
mov
or
out
xchg
out
cmp
push
or
aad
out
lahf
push
fwait
mov
loope
mov
hlt
adc
aas
mov
jnp
in
clc
testb
mov
xor
pop
popf
ss
cltd
ljmp
inc
mov
lret
loope
cmpsb
outsl
cmp
call
xchg
or
outsl
sub
test
cmc
into
ret
pushf
push
xchg
sbb
pop
mov
push
aas
mov
add
xchg
cmpsb
rcr
sahf
mov
sub
sub
ret
mov
adc
cmp
push
adc
mov
mov
cmpsl
xor
mull
pop
sbb
scas
outsl
jae
and
shrb
test
addr16
cmpsb
mov
lret
mov
into
xor
addr16
mov
add
gs
sbb
mov
test
jbe
fmulp
in
and
pusha
mov
push
xor
icebp
insl
fldenv
push
xlat
add
negb
jge
enter
mov
mov
sub
aaa
enter
mov
xchg
mov
add
gs
cltd
int3
push
cld
rorl
inc
dec
sub
sub
insb
lods
loopne
add
push
cs
pop
pop
or
sub
mov
sbb
xchg
cltd
sbb
mov
or
shll
loope
xor
dec
jl
inc
call
adc
cld
adc
loop
lods
lcall
xchg
test
xor
mov
adc
push
sbb
xor
test
int3
iret
sbb
iret
add
adc
inc
mov
hlt
in
enter
lods
push
pop
test
cmp
xchg
div
shl
push
into
xorb
fstpt
and
pop
xor
pop
xchg
cmpsb
aaa
pop
jge
jp
pusha
xchg
jle
xlat
iret
sub
popa
test
pop
xchg
or
jae
fildl
pop
cwtl
mov
pop
adc
jno
popa
imul
insl
mov
push
lods
push
sub
gs
mov
push
adc
aad
xchg
push
dec
inc
iretw
xor
pop
and
xchg
adc
mov
and
pop
cmp
scas
cltd
loopne
push
hlt
mov
out
pop
or
rcll
jno
shrl
scas
jnp
mov
repz
out
es
sbb
imul
vpunpckhdq
dec
imul
adc
mov
jecxz
push
add
xor
sub
ljmp
jmp
jo
insl
hlt
pop
pop
push
jne
inc
je
testl
call
push
dec
push
fs
ja
push
and
leave
mov
xchg
inc
cmp
pop
jns
ret
pusha
out
cli
test
pop
lods
push
jo
lea
cmc
iret
xchg
sbb
mov
jl
sub
adc
ss
add
jg
dec
fwait
lcall
push
iret
push
pop
insb
push
fimull
or
js
mov
push
mov
adc
or
mov
inc
repnz
dec
ds
sbb
jb
dec
aaa
xchg
rclb
jbe
lock
leave
loop
sar
dec
and
jmp
add
lea
mov
sub
push
insl
add
outsl
adc
sub
cmpsb
das
repnz
xor
jg
xchg
mov
enter
add
lock
fcompp
pop
sbb
pop
cmpsb
std
adc
mov
loopne
cld
je
jno
push
out
into
cmp
or
movsb
stc
push
fisubrl
push
jl
fcoms
das
mov
loope
sbb
mov
sub
and
ja,pt
ja
and
ror
add
subl
xlat
mov
popf
adc
or
loopew
inc
je
sub
mov
ljmp
cmp
push
add
ss
dec
mov
xchg
or
and
fs
sbb
test
rol
dec
jp
nop
arpl
loopne
aad
lret
scas
inc
jo
fistpl
fsubrs
xor
push
cltd
adcl
test
adc
or
mov
xor
mov
push
popa
push
loop
pop
mov
sbb
xchg
sub
lret
push
jne
sub
pop
test
fidivrs
pop
mov
cmp
cmpl
add
push
lea
adc
lret
mov
rol
jp
test
mov
sub
test
cwtl
les
subl
mov
jle
lea
int3
lds
adc
mov
add
shll
inc
pushf
pop
outsl
dec
icebp
xor
add
leave
and
xor
sub
test
lock
mov
cmpl
shll
xor
movsb
inc
out
dec
cwtl
addb
out
data16
mov
aas
dec
ror
or
sbb
movb
and
ja
xor
xlat
jg
sbb
lds
cmp
cmp
pop
sub
mov
aas
fcmovu
pusha
iret
pop
jp
addr16
mov
cmp
test
out
mov
out
xchg
xor
popa
adc
xchg
mov
aaa
sarb
fwait
cmp
aas
mov
jp
mov
test
add
inc
xchg
pop
es
movsl
push
or
adc
push
lea
jl
and
in
push
insl
inc
rorl
ljmp
divb
lahf
outsb
sub
mov
hlt
mov
pop
sub
xchg
adc
jno
dec
shrb
movsb
ret
sbb
adc
inc
cmp
enter
inc
sub
xchg
fisttpl
out
dec
or
rcll
gs
gs
pop
dec
popa
enterw
bound
insl
fdivl
adc
push
sbb
and
je
jp
lock
add
or
mov
mov
cmp
out
stc
inc
lret
mov
clc
dec
mov
push
push
fdivrs
add
jno
add
jnp,pn
je
cmc
jmp
xor
xchg
out
outsb
inc
pop
nop
rcll
add
clc
js
pop
sbb
das
and
dec
mov
rorl
rcr
and
push
jne
inc
fisubrs
adc
sbb
loopne
aad
cmp
inc
sub
mov
sbb
sbb
daa
lea
out
inc
daa
xchg
adc
cli
test
push
jmp
or
push
mov
in
add
sbb
and
and
clc
int3
push
call
inc
ret
cmp
mov
fwait
xchg
out
or
pop
daa
cmp
insb
fnstcw
cmp
mov
ljmp
jge
and
xchg
shrl
add
inc
rcrl
test
xchg
xchg
test
jb
inc
jmp
mov
sets
iret
pop
inc
ds
inc
or
pop
fs
jl
add
jo
popa
test
or
sub
cmpsl
fidivl
dec
mov
xlat
fdivs
popf
xchg
lods
dec
cmp
in
push
fldl
aam
push
inc
push
inc
push
outsl
js
and
call
pop
in
sbb
mov
stos
add
lods
cmp
push
pop
pop
add
sti
add
stc
xchg
adc
add
jle
dec
sub
jle
cmp
or
or
mov
pop
sub
fs
aad
mov
cltd
push
or
adc
aam
scas
mov
and
adc
pop
pop
out
aam
mov
jns
mov
cmpsb
pop
imulb
fimull
int3
mov
stos
lahf
lret
out
jecxz
adc
mov
fcomps
xchg
add
inc
mov
xorl
fwait
loope
lahf
or
xchg
xchg
mov
mov
in
add
sbb
daa
sbb
jno
insb
daa
shll
neg
mov
sarb
test
sbb
inc
xor
out
pop
jnp
mov
leave
jne
test
jge
xor
pop
pop
xorl
push
mov
pop
push
das
adc
movsl
dec
add
je
mov
inc
mov
pusha
dec
mov
bound
gs
mov
mov
push
ret
mov
xchg
push
stc
mov
fs
ljmp
mov
fildl
push
call
jp
or
rcl
loopne
add
xor
and
out
cmc
outsb
push
add
rcrl
lret
sahf
or
push
daa
test
les
scas
aad
push
jge
inc
ja
adc
mov
in
das
dec
aad
cmpb
cli
mov
jmp
enter
adc
mov
ficoml
pushf
xchg
mov
push
pusha
sub
mov
xchg
add
jne
mov
jl
push
or
xchg
loop
int3
push
cltd
pop
and
mov
ds
dec
ss
mov
addr16
gs
mov
lea
push
adc
mov
pushf
test
insb
mov
push
out
cmovge
adc
ja
enter
fs
xor
xchg
jno
mov
in
jne
sub
push
mov
aaa
negb
sub
pop
and
out
cmpsb
shrl
jns
lret
xor
mov
sub
insl
jae
aaa
jle
mov
hlt
outsb
repnz
push
pop
lods
test
rcr
ret
aaa
inc
mov
das
sti
movsl
mov
xchg
inc
push
xchg
xorl
adc
mov
jecxz
fistl
or
addr16
imul
jg
cli
lods
shl
inc
out
imul
inc
mov
push
sbb
fndisi(8087
xor
or
dec
movb
xchg
insb
add
mov
mov
jg
mov
call
add
mov
pop
xor
push
out
movsb
sub
mov
cltd
mov
aad
jno
mov
add
fdivs
stos
adc
clc
add
iret
stos
es
nop
cltd
adc
or
or
shlb
jno
jg
ret
push
mull
push
insl
push
xlat
add
inc
dec
push
out
dec
insl
and
mov
sbb
pop
adc
mov
fisubrl
lock
ss
fiadds
pusha
push
stc
cmp
mov
and
cld
and
jae
dec
loop
in
cs
std
sbb
or
sbb
inc
or
outsl
aad
rcrl
leave
insl
iret
js
leave
sub
pushl
and
mov
jne
lret
pop
mov
lret
jbe
in
pop
hlt
sub
or
int
adc
int3
mov
leave
add
aas
cmc
add
add
mov
sub
and
fnstenv
xchg
sti
mov
pop
pop
push
dec
mov
je
xor
dec
adc
std
jb
add
dec
jp
hlt
xchg
dec
sbb
popf
movsl
adc
cmp
adc
lds
fs
push
repz
aad
mov
cmp
addr16
cmp
push
js
les
add
jmp
jne
jmp
mov
sbb
xor
frstor
jg
movsl
xor
rorb
mov
inc
jg
jmp
xchg
gs
aaa
dec
add
enter
insl
int3
icebp
and
sub
fmull
or
jns
daa
movsl
xchg
aas
lcall
int
lock
scas
imul
sub
push
cmp
aam
mov
insb
fisubs
stc
xor
sub
adc
out
sub
hlt
add
pop
mov
cmp
je
lods
add
daa
sbb
sbb
xchg
lahf
pop
mov
mov
enter
pop
add
jbe
sbb
adc
inc
fmul
jo
mov
mov
int3
ret
outsl
sbbl
or
dec
dec
scas
inc
jmp
dec
adc
mov
push
test
mov
cmpsb
mov
das
pop
xor
sahf
in
mov
cwtl
jb
lock
movsb
bound
pop
cmp
sbb
int3
shrb
mov
shlb
inc
sub
imul
das
loop
aas
decl
dec
negb
cmp
add
jg
mov
adc
xchg
test
xchg
repnz
fsubrp
ret
lds
or
mov
xlat
mov
lea
divb
push
pop
push
ljmp
sub
test
mov
mov
mov
rclb
in
sti
cmp
aam
neg
sahf
xchg
bound
in
and
sahf
pusha
arpl
cwtl
mov
push
pop
shrb
adc
je
sub
dec
cmc
insb
loope
jmp
loop
outsb
inc
addl
jge
mov
cmp
insb
mov
add
sbb
sbb
xor
popa
cmp
push
inc
data16
xlat
pop
jecxz
ret
pop
adc
fadd
icebp
push
jl
xchg
ja
dec
or
icebp
dec
arpl
popa
mov
out
stos
cmp
addr16
sub
push
fmull
filds
inc
aam
adc
pop
repz
hlt
jmp
jle
jo,pn
push
test
scas
push
test
ret
mov
push
jmp
pop
jae
add
adc
add
hlt
ret
in
aam
repz
movsb
xchg
xchg
mov
fs
push
arpl
add
adc
add
hlt
ret
in
aam
repz
movsb
xchg
xchg
mov
roll
inc
jae
add
xchg
adc
add
rcr
jecxz
repz
mov
mov
inc
dec
push
fsubl
jae
add
adc
test
hlt
ret
sbb
jecxz
test
or
imul
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
out
cmc
dec
lds
push
push
imul
cli
push
ljmp
add
dec
test
sbb
push
fidivl
and
push
ljmp
adc
dec
push
jp
push
sbb
or
ficoml
sub
into
inc
fstl
dec
adc
pop
mov
mov
sbb
fcoms
add
adc
or
or
inc
es
out
mov
xor
and
out
test
inc
add
pop
mov
mov
ret
insb
insb
adc
mov
mov
push
mov
jo
int
sub
cmp
popf
outsb
and
cmp
jp
xchg
aam
and
stos
or
lcall
sbb
clc
sbb
sub
pop
xchg
cmp
or
testb
leave
xor
push
sbb
push
sub
pop
ret
mov
cltd
int3
add
flds
pop
mov
push
sbb
or
lret
gs
adc
or
jg
arpl
jl
jle
mov
xor
insb
ret
jo
test
nop
das
mov
mov
int3
jbe
inc
jo
rorb
daa
mov
test
pop
mov
lds
or
or
fidivl
inc
cli
push
ljmp
adc
dec
lds
push
sbb
sub
jne
inc
cli
push
ljmp
adc
and
xchg
adc
in
mov
push
es
rorl
faddl
mov
shl
lods
push
shrl
sbb
dec
aad
xor
fistps
sbb
push
mov
les
lock
sets
xchg
add
pop
loopne
ror
out
jb
shll
lods
mov
cmp
xor
nop
sbb
mov
push
mov
inc
or
pop
icebp
scas
popa
inc
dec
repnz
xchg
dec
inc
xchg
ret
mul
rcrb
popa
jne
adcl
ljmp
sarb
cwtl
xor
inc
shlb
andb
iret
inc
call
in
cmpsl
push
push
sbb
jno
push
insl
jb
cli
sub
aad
jns
push
or
out
clc
mov
jnp
cltd
popf
mov
addr16
lds
and
call
stos
ret
jmp
sub
pop
mov
outsl
push
xor
pop
imul
dec
aad
leave
mov
dec
lods
in
pop
push
negb
aam
cmc
popf
sahf
sbb
lods
sub
in
cmp
lock
dec
lods
and
lock
jl
push
mov
push
in
xchg
add
xor
test
fwait
jbe
out
mov
mov
out
pusha
es
or
addr16
jmp
cmpsb
or
push
int3
push
sarl
popf
into
inc
ja
lds
out
jae
sub
adc
mov
mov
cs
cltd
xchg
lods
icebp
xchg
mov
pop
pop
std
shlb
js
push
call
and
jo
jl
and
xor
les
push
jl
pop
mov
in
xchg
mov
cmpsl
addr16
testb
jae
sub
movsl
pop
das
cld
sub
mov
xlat
addb
std
sbb
jmp
inc
fwait
mov
jb
pop
push
pusha
loopne
loopne
movb
cmpsb
xlat
cmc
fs
or
xor
pop
jo,pn
xchg
dec
sbb
pop
sbbl
test
xor
or
inc
xor
imul
pcmpgtw
sti
push
mov
test
arpl
pushf
sbb
cmp
mul
cli
enter
lods
dec
cltd
mov
and
sub
movsb
mov
xchg
sbb
lock
xor
rorl
pusha
adc
fsubs
mov
scas
mov
push
lods
outsl
cmpsl
and
jecxz
push
push
mov
test
add
test
mov
dec
fcomp
and
scas
xchg
push
dec
xor
xchg
sbb
stos
test
in
mov
fwait
push
test
sbb
out
mov
adc
lret
call
movb
pop
cs
daa
push
cmc
loopne
dec
cwtl
lret
pop
inc
push
bound
sub
push
pop
jne
call
xchg
gs
mov
or
jne
mov
xor
aad
add
xchg
add
jg
mov
pop
out
push
push
lock
push
cltd
jg
inc
iret
or
inc
adc
btr
arpl
inc
lods
pusha
xchg
lcall
and
js
out
add
outsl
sbb
lds
mov
icebp
leave
mov
cmp
jecxz
jg
jbe
cmpsl
xor
sbbl
adc
in
movsl
adc
insl
std
and
pop
or
xchg
lcall
cmc
mov
or
mov
xchg
jle
add
mov
pop
lahf
adc
mov
pusha
inc
mov
fbld
inc
sub
push
push
mov
das
bsr
insb
adc
jmp
out
rcll
fisttpl
faddl
xor
push
movsl
xor
pop
leave
sbb
js
sahf
jle
lahf
pushl
and
jge
arpl
push
lds
jno
or
shl
das
cmpsb
punpckhbw
gs
cmp
test
xor
xor
sahf
call
mov
decl
dec
push
test
and
fsincos
test
jbe
pushw
aad
outsl
fisubrl
orps
inc
das
hlt
push
xchg
lods
gs
aad
rcrb
adc
cmp
xor
repnz
aaa
aam
shll
sbb
pop
pop
or
push
mov
xor
inc
andb
sahf
pop
jbe
dec
shlb
xor
leave
jecxz
or
repz
push
and
sub
jb
xor
out
jge
mov
shll
cltd
rorl
scas
xchg
mov
mov
xor
loop
jbe
inc
icebp
sbb
push
cmpsl
sbb
orb
std
mov
js
push
fs
adcb
ljmp
lods
jge
jne
je
movsb
xor
pop
cmpsl
mov
das
xchg
sub
outsl
sahf
push
popl
or
jmp
cltd
xchg
jmp
daa
divl
jg
mov
mov
push
or
push
mov
stos
repz
repnz
xchg
cmpsl
mov
mov
imul
imul
and
xchg
fstps
loopne
in
pusha
jmp
xchg
add
mov
push
outsb
sub
rcl
mov
sbb
cmpsl
test
mov
mov
sbb
sub
pop
test
xchg
fcompl
std
xchg
ja
jno
das
cmp
dec
jnp
fists
adc
sbb
mov
stos
rorl
push
adc
mov
popa
in
mov
fcom
push
clc
cmp
scas
das
cmpsl
outsl
lahf
xor
inc
rorl
loope
das
jmp
cmc
icebp
mov
scas
mov
clc
inc
ret
push
js
push
out
fs
sbb
imul
scas
jo
push
adc
pop
adc
subl
popa
loopne
cmp
movsl
and
jl
mov
jg
into
push
rcll
xchg
jnp
pop
xor
rcrl
mov
ljmp
int
fwait
pop
jne
adc
jo
outsb
mov
fwait
push
mov
jp
inc
insb
es
push
dec
scas
add
and
movsb
add
or
int
clc
test
mov
test
adc
mov
sub
ja
aas
test
xchg
pushf
cmp
push
mov
lea
cmp
adc
std
sahf
sahf
stos
jae
xchg
jb
cmp
mov
adc
jnp
icebp
mov
push
and
jle
jl
or
nop
and
hlt
jae
push
xor
mov
sub
xor
aad
jg
inc
mov
pop
loope
test
adc
and
jbe
pop
inc
popf
add
mov
enter
push
lret
movsl
inc
pop
mov
inc
loop
pop
rcrl
mov
xor
in
arpl
add
pop
in
sbb
out
sub
test
lret
negl
or
or
push
ss
or
cmc
push
loopne
mov
aaa
in
je
and
decl
or
xchg
loopne
mov
je
xor
fsubl
lods
adc
pop
ss
test
test
sub
test
jb
mov
imul
jne
mov
jnp
xor
mov
xor
mov
lods
dec
nop
mov
jle,pn
inc
fimull
addb
sub
or
stos
sbb
cli
push
loop
push
cmpsl
insl
mov
imul
enter
mov
in
or
xor
adc
popa
mov
push
mov
inc
mov
clc
adc
jae
cmp
xchg
sub
add
outsl
arpl
orl
inc
adc
mov
mov
pushl
adc
cmp
fs
cmp
cwtl
jge
and
adc
push
mov
dec
pop
jbe
sbb
movsl
jl
ja
lcall
add
js
mov
adc
cmp
call
xchg
fsubrs
xor
and
add
flds
shlb
and
call
es
dec
mov
jmp
push
jmp
cmpb
in
adc
push
enter
mov
push
xor
lcall
inc
testb
daa
cmp
psrlq
es
jp
popl
shlb
call
sarb
es
fists
pop
movsb
mov
xchg
lods
mov
mov
mov
pusha
xorl
andb
test
int3
jns
scas
or
sbb
push
bound
pushf
xorl
mov
cmp
cmp
sbb
sbb
xchg
inc
mov
jbe
in
data16
xchg
push
push
into
sti
cmp
les
cld
adc
mov
dec
out
out
mov
dec
rcrl
or
mov
imulb
fwait
dec
inc
mov
sarl
ficoml
xorb
adc
pop
scas
lret
pop
mov
cmpsl
push
xor
test
test
jecxz
push
mov
sbb
and
dec
mulb
or
lret
in
dec
adc
mov
inc
push
mov
out
pushf
lds
mov
inc
cwtl
aas
aam
lret
in
ss
repz
or
mov
loop
push
sbb
test
and
xlat
loopne
lds
mov
sbb
test
fcomps
xchg
jne
insb
clc
mov
sub
and
cmc
movsb
adc
aas
stc
jne
loopne
sbb
jge
add
and
inc
sub
repnz
xchg
iret
loop
mov
xlat
jbe
ss
in
cltd
jo
sub
popa
addb
adcl
cmc
in
mov
iret
jle
iret
jo
or
cmpsb
jo
in
mov
jo
sbb
ds
sahf
xorb
push
sub
insl
inc
aaa
or
push
mov
cmovo
inc
xchg
xor
xchg
inc
mov
inc
mov
decb
daa
bound
pop
daa
lcall
push
sbb
fiadds
and
imul
add
pop
xchg
mov
inc
and
lcall
mov
cmp
xchg
push
mov
leave
dec
and
mov
cmc
fsubrl
fmull
rcrb
mov
lods
inc
xchg
mov
mov
imul
pop
or
xor
and
aaa
add
and
nop
xchg
stc
out
jns
out
inc
and
frstor
movsl
cmp
nop
insb
sbb
test
out
mov
inc
loopne
and
jg
test
and
scas
std
sahf
lret
add
xor
cli
dec
jb
jne
jmp
lcall
js
cs
nop
std
mov
clc
mov
icebp
xor
adc
add
and
adc
fwait
test
push
addr16
faddl
roll
daa
icebp
cli
pop
pop
pop
cmp
push
dec
cmc
adc
jle
outsb
loopne
dec
inc
lahf
xchg
pop
inc
lahf
lret
sub
push
sub
pop
lret
add
leave
add
adc
add
repnz
adc
mov
push
sarl
lret
sti
pop
hlt
pop
nop
sbb
dec
jmp
in
add
xor
inc
cmc
xor
fmull
pop
xrelease
jnp
and
shlb
rorl
jne
mov
popa
mov
inc
pop
lret
sbb
xlat
jo
jecxz
leave
adc
lret
out
jle
or
inc
lock
mov
test
pop
dec
pop
xor
insb
bound
rolb
xchg
aas
scas
mov
movsb
stos
shll
enter
sbb
dec
mov
mov
jmp
mov
cmc
pop
lds
xor
dec
adc
clc
cmp
rol
xor
stos
fdivr
out
xor
nop
inc
cli
xchg
inc
insl
push
add
jecxz
lock
xchg
pop
pushf
pop
aas
insl
or
lods
ljmp
push
fmul
pop
mov
mov
outsb
xchg
jmp
in
xchg
shl
das
adc
jnp
cmp
in
add
es
lds
and
mov
xchg
jp
sub
fisubrl
mov
jecxz
outsl
sarb
jnp
push
adc
adc
lods
divb
ds
popf
mov
adc
xor
sub
cmpsb
xlat
mov
movsl
cs
xrelease
jne
test
cmp
jecxz
std
adc
jno
inc
insb
aad
loope
rcll
push
inc
je
push
push
sahf
test
movsb
rcrl
xchg
pop
sti
test
int
mov
pop
jbe
xor
imul
mov
cltd
cltd
jb
inc
sub
cs
adc
popw
xchg
cmp
lds
sub
mov
or
das
jmp
push
stc
lea
jg
adc
fimull
in
cwtl
jg
cwtl
scas
out
in
inc
sbb
adc
lahf
filds
sbb
mov
sub
xchg
mov
je
mov
test
xor
dec
out
mov
mov
and
lds
inc
sub
push
pop
mov
sbb
xor
sub
mov
lock
push
push
inc
jbe
stc
mov
pop
mov
push
fcompl
inc
scas
mov
mov
jge
frstor
dec
std
div
scas
jmp
mov
xor
inc
in
dec
out
mov
xchg
lcall
add
adc
jecxz
push
notb
push
jbe
xchg
xor
cmp
cltd
frstor
dec
lock
adc
mulb
cmp
sbb
mov
inc
outsl
mov
and
fstpl
cs
roll
or
jb
xor
enter
subb
sbb
aam
popf
icebp
lea
inc
adcb
cld
sarl
outsl
loopne
add
pop
mov
xchg
aas
pop
inc
or
sub
in
xchg
cmp
shrl
insl
aas
inc
adc
sub
into
rcrl
cmc
push
icebp
shrw
outsl
xor
cmpsb
jnp
std
push
and
lret
push
in
jo
sub
add
rcrb
arpl
push
stos
icebp
mul
inc
xor
sbb
dec
movb
out
pop
daa
mov
xchg
shll
xor
aas
lods
stc
mov
push
fcomps
adc
imul
subb
mov
daa
cwtl
rclb
arpl
sub
cmpsb
mov
or
inc
mov
jge
push
xor
push
je
movlps
sub
cwtl
push
aad
mov
and
pop
cld
mov
xchg
inc
out
mov
mov
call
out
mov
shlb
sbb
and
fbstp
shrl
imul
lock
subb
idivl
int3
ss
sub
sti
hlt
loopne
dec
mov
mov
out
outsl
push
mov
and
sbb
mov
cmpl
mov
xchg
pop
clc
stos
cld
lcall
xor
sahf
mov
jmp
shll
sti
imul
int
ljmp
sarl
xchg
repz
mov
ja
test
dec
xchg
imul
push
mov
fwait
cltd
and
inc
dec
mov
subl
mov
rcrb
js
mov
inc
leave
xor
push
push
jl
fucomip
nop
jno
pop
adc
jmp
and
cmc
dec
cmp
mov
adc
jno
inc
push
mov
add
sbb
adc
adcb
and
rcrl
xchg
push
cld
push
jp
into
pop
adc
je
push
sub
stos
sub
xchg
jb
add
dec
pushf
rorl
cmpsb
mov
sub
out
xor
in
out
adc
das
fwait
sub
mov
jb
fucomi
jnp
jle
jnp
sbb
push
cld
add
mov
mov
push
hlt
pop
sar
xor
and
and
cmp
cwtl
or
push
imul
jne
imul
sub
test
jge
fidivrs
es
and
add
popa
adc
cmp
jne
call
jle
jbe
adc
mov
adc
push
push
mov
mov
pusha
test
push
outsl
mov
daa
cld
lock
out
sub
inc
xchg
pop
xchg
sub
cmpsb
in
or
repnz
shlb
outsl
jle
fwait
mov
imul
push
int
sub
outsb
movsl
cli
cld
pop
xchg
or
aam
jp
rorl
mov
int3
movsl
pop
shll
sti
push
andb
test
xor
das
rcll
pop
lret
push
test
cwtl
xor
and
adc
outsb
pop
cmp
or
xchg
mov
sarl
xchg
enter
or
sub
pop
jge
testb
ja
adc
stc
jle
sub
mov
push
or
mov
mov
lret
dec
mov
arpl
mov
pushf
dec
jg
sub
and
jnp
push
stc
repnz
mov
bound
aas
cmpsl
ficoml
and
notb
mov
outsb
push
jae
pop
arpl
jnp
push
adc
in
sub
jmp
xor
mov
mov
mov
pop
adc
popa
loope
dec
jle
das
adc
or
or
mov
mov
pop
adc
ror
je
lods
decb
fidivrs
jb
int
mov
test
or
std
xor
sub
pop
aad
ficoml
aas
or
push
and
cmp
daa
push
cmp
rcr
inc
lcall
shrb
test
mov
shrb
cmc
aam
sbb
xchg
or
pop
mov
cmp
insl
mov
mov
out
adc
inc
jne
and
arpl
imul
lret
data16
shll
fucomp
fs
sub
jbe
xor
cmp
popa
jb
xor
mov
ja
das
in
inc
hlt
mov
xchg
cs
jbe
ljmp
sbb
pusha
xchg
movsl
in
mov
shll
in
inc
adc
jno
in
mov
fldenv
lret
lahf
movsl
loopne
shlb
lods
aam
mov
out
or
ss
mov
push
cmc
mov
outsb
cmp
pop
push
push
lods
push
cmp
jg
in
pop
cmp
push
lea
fnsave
aaa
nop
add
stc
xchg
pop
dec
or
cmp
fsubrp
orl
mov
mov
addl
xchg
cmp
sbb
xor
xchg
nop
pop
jmp
mov
mov
gs
in
dec
ret
or
xchg
pop
mov
cmpsl
loope
sti
mov
scas
adc
push
jno
cmp
mov
or
lock
mov
mov
dec
mov
xlat
cmpsl
mov
dec
xor
lods
xchg
cld
adc
popa
and
and
jg
ja
push
pop
ret
or
push
sbb
inc
insl
mov
xor
dec
scas
jecxz
mov
cmc
adc
or
mov
sbb
add
mov
pop
mov
pop
push
dec
lcall
dec
sub
or
rorb
and
pusha
jge
fadds
mov
es
sbb
in
sub
push
pop
push
out
mov
imul
mov
or
adc
and
ss
arpl
in
stos
mov
inc
sbb
inc
dec
stos
repnz
mov
out
fbstp
ds
sahf
add
add
lahf
pop
sbb
mov
sahf
add
or
inc
mov
aaa
or
mov
dec
ficoml
iret
daa
mov
ljmp
lahf
popa
and
fisttpll
mov
sarb
test
and
fs
jo
add
push
pop
loopne
clc
cmp
mov
adc
jb
and
xchg
fadds
or
adc
push
data16
mov
adc
sti
jge
or
fcoml
out
hlt
popa
pop
mov
imul
xor
sub
lea
ds
mov
and
aam
sbb
xor
stos
fildll
stc
fidivrs
bound
ja
pop
iret
dec
jle
adc
repz
push
cmp
mov
and
popf
loop
test
enter
push
xchg
xor
add
push
les
jnp
dec
push
push
or
pusha
push
mov
mov
mov
push
ss
insb
lods
mov
pop
scas
inc
adc
push
sbb
cmp
sub
cli
lock
ljmp
ret
pop
mov
std
int
pop
ljmp
icebp
vpslldq
push
clc
bound
or
in
daa
cwtl
arpl
mov
cwtl
insl
mov
and
or
xlat
push
loopne
mov
in
inc
andb
je
das
pushf
lods
rorl
cli
movsb
addr16
lahf
cmpsb
add
and
cwtl
repnz
pop
in
or
push
rcl
cwtl
pop
add
inc
idiv
insb
arpl
add
mov
pop
adcl
sbb
jp
push
sbb
sub
jne
inc
cli
push
ljmp
adc
dec
lds
push
sbb
sub
jne
inc
cli
push
ljmp
adc
dec
movsl
jp
push
sbb
sub
jne
mov
push
ljmp
std
stos
icebp
pop
test
push
sbb
sub
mov
cli
push
popf
push
adc
push
inc
pop
push
or
jl
insb
popa
insl
inc
sbb
or
sbb
loope
icebp
in
sbbl
push
dec
popa
jl
insb
add
or
cmp
add
int3
xchg
hlt
icebp
in
xorl
push
mov
jno
add
inc
and
xor
rcr
out
xchg
popf
fistps
out
into
or
push
or
inc
adc
cmc
stos
mov
or
sub
addl
xchg
or
xchg
sub
xchg
xchg
ret
shll
and
xor
mov
mov
xor
adc
pop
lock
pop
int3
fbstp
fnstsw
adc
outsl
sbb
push
push
dec
pop
js
insb
add
add
cld
pop
mov
insb
add
in
jg
stc
add
mov
xchg
mov
std
xor
sar
sub
sbb
notb
and
or
fimuls
xchg
mov
xchg
push
fld
pop
rclb
popa
or
add
or
cmp
mov
loope
icebp
rolb
movsb
mov
pop
pop
cmp
add
adc
insl
mov
jo
sbbb
in
clc
jecxz
enter
sbb
or
unpcklps
inc
dec
jge
and
pop
movsb
mov
mov
in
lds
das
xor
add
push
adc
cmp
sub
int3
loope
icebp
in
sbbl
dec
popa
jl
insb
add
or
cmp
sub
int3
loope
icebp
in
sbbl
sbb
add
fstpt
add
test
cmpsb
mov
insl
mov
aaa
pusha
in
inc
inc
inc
push
fwait
jne
mov
dec
mov
sub
fldenv
push
mov
dec
cmp
stos
push
in
cmp
movsl
lock
in
arpl
mov
xchg
dec
add
cmpl
xchg
test
mov
clc
sarb
rorb
arpl
mov
pop
lret
pop
outsl
pop
lea
in
fstl
cltd
cmp
pop
popa
jp
cmp
lock
aaa
pslld
push
sub
xchg
mov
xchg
sub
dec
xchg
jno
test
inc
lock
outsb
das
bound
aad
jns
lahf
std
jp
push
adc
sahf
rol
pop
jecxz
out
imul
rclb
daa
lahf
das
push
test
shrb
sti
dec
in
dec
jae
sahf
mov
and
xchg
mov
iret
xchg
cmpsl
in
movsl
aad
cmp
xchg
nop
aas
add
push
and
dec
cmp
pop
test
inc
jne
mov
sahf
das
xor
jle
mov
pop
cwtl
sbb
iret
lcall
loope
lds
adc
sub
dec
jne
rolb
fdivrl
out
popa
pop
test
loope
aas
xor
xchg
xor
mov
stos
pop
and
jne
dec
pop
sbb
add
or
lods
add
lods
loopne
push
lahf
pushf
mov
test
or
sub
dec
clc
jae
add
adc
xchg
pop
lret
adc
outsb
mov
or
mov
adc
aad
out
mov
adc
or
jae
push
movsb
cmp
fbstp
dec
xlat
in
bound
punpcklwd
rcrl
xor
pop
pop
fpatan
ffreep
sbb
push
dec
inc
cltd
push
ja
mov
fimull
nop
or
push
cs
push
enter
dec
push
hlt
mov
roll
inc
push
in
repnz
stc
cmp
ret
cli
pop
inc
xchg
sbb
pushf
sub
nop
pop
mov
popf
sbb
scas
sub
pop
sbb
call
dec
jno
arpl
sub
inc
dec
pop
or
inc
popa
out
sbb
push
mov
popa
pop
pop
test
pop
jnp
aaa
mov
push
outsl
test
mov
inc
sbb
scas
push
xor
inc
and
in
mov
or
pusha
js
popf
mov
cmpsl
and
jecxz
cltd
cs
lret
leave
inc
test
push
sbb
mov
xchg
push
adc
and
push
arpl
push
and
arpl
inc
sbb
sub
int
sub
lret
nop
out
cli
jecxz
sbb
test
popf
dec
xchg
mov
scas
sbb
mov
ljmp
lds
fwait
mov
dec
in
cltd
xchg
and
xchg
pop
sbb
cmpsl
dec
mov
mov
inc
out
xchg
fistpll
repnz
mov
mov
insb
into
ror
inc
dec
jl
cld
push
fcoms
loop
enter
bound
es
ret
fnstenv
dec
icebp
dec
mov
pushf
mov
in
jo
push
pop
adc
jnp
enter
adc
fs
jnp
sub
push
in
xor
sub
mov
mov
loopne
adc
mov
roll
pop
in
jge
jbe
fmuls
adc
ja
cmp
sub
xchg
mov
scas
out
mov
icebp
js
inc
cmc
push
mov
xchg
les
int3
xor
daa
mov
inc
xor
adc
imul
mov
jmp
mov
cld
mov
mov
inc
jnp
mov
xacquire
orb
mov
lcall
scas
adc
std
dec
or
lret
jb
dec
rcl
jl
arpl
lods
jbe,pn
scas
ret
movl
aam
mov
xchg
popf
mov
mov
jo
and
scas
sbb
xor
arpl
aam
stc
cmp
insb
andl
and
and
ds
dec
mov
inc
cmpsl
in
xor
aam
sbb
mov
test
icebp
in
ds
mov
jecxz
jns
outsl
push
xor
push
leave
fwait
in
mov
add
pop
mov
pusha
sti
mov
stos
dec
dec
jnp
push
stos
push
cmp
fnclex
and
icebp
cmpsb
push
xchg
movsb
iret
sbb
mov
in
addr16
cli
ja
inc
pushf
fwait
je
cli
ds
call
mov
cli
and
stos
aam
and
jns
mov
in
in
inc
sbb
icebp
cmpsb
cli
and
mulb
mov
bound
lret
push
lret
scas
imul
jmp
enter
mov
es
movsb
cmp
loopne
movsb
jns
push
lea
das
lods
adc
mov
ret
ret
add
sbb
nop
push
in
out
sub
rolb
sub
mov
mov
inc
or
inc
mulb
pop
addr16
push
and
mov
cmpsb
inc
sub
mov
nop
mov
test
xlat
scas
sbb
mov
hlt
aas
shlb
lret
sbb
pop
mull
sbb
dec
xor
push
cmp
adc
clc
jg
mov
aam
cmpsl
imul
pushl
cmpsb
in
add
lds
cli
cmc
cmc
xchg
add
test
sub
cltd
cwtl
je
movsl
mov
inc
mov
mov
sub
xor
icebp
scas
test
cmp
or
testl
push
xor
clc
mov
fcoml
dec
insl
and
xchg
stc
int
popf
mov
lcall
ret
insb
js
cmp
adc
and
cmpsb
cmp
dec
movsb
test
pop
xor
xor
out
ljmp
mov
in
jge
or
hlt
popf
int3
out
loope
mov
test
pushl
in
pushf
push
push
cmpsb
mov
push
call
rcrl
mov
into
shll
pusha
add
lcall
xchg
scas
or
frstor
inc
repnz
fmuls
arpl
cmp
dec
mov
mov
sub
push
je
aam
inc
lock
sub
mov
or
lods
loop
cli
inc
push
jnp
lahf
dec
dec
imulb
fildl
insl
lahf
aas
push
add
push
cwtl
mov
dec
inc
lret
test
sbb
dec
cmp
inc
test
aaa
sti
ficompl
mov
and
inc
lret
mov
xchg
mov
mov
in
cmp
fidivs
pushf
cmp
dec
fwait
lcall
lock
mov
lods
pop
aas
adcl
jmp
sub
sbbb
xor
lahf
iret
testb
inc
push
cli
pop
sbb
scas
push
ss
movsl
inc
ret
out
jl
push
dec
into
adc
aas
call
test
sbb
idivl
ds
jl
mov
mov
jno
adc
loop
movsl
bound
pop
cmp
push
ss
sarb
mov
jge
in
aas
mov
sub
adc
cmc
das
pop
clc
pop
xchg
sbb
aaa
sbb
jmp
test
sbb
sub
jge
inc
push
mov
in
push
cmp
lcall
pop
pop
rol
xchg
movb
xor
mov
mov
lret
mov
mov
outsl
retw
cmp
or
je
mov
inc
out
xchg
jmp
mov
jbe
add
outsb
loope
cmp
bound
daa
fdiv
dec
cs
mov
dec
xchg
data16
loope
mov
in
xchg
add
cld
mov
xchg
fdivl
pop
movsl
hlt
loopne
lods
ret
jmp
or
mov
push
sti
cltd
xor
or
das
inc
xor
out
xor
mov
lea
or
test
arpl
andb
lods
push
or
jle
enter
pop
into
pop
bound
mov
inc
mov
pop
pop
bound
lods
dec
test
inc
and
out
adc
pop
out
cmp
ja
inc
call
movsl
sub
sub
rolb
dec
out
out
mov
lret
jae
jnp
shr
pop
dec
adc
push
in
push
fs
pop
xor
cmc
and
mov
xor
adc
loopne
idivb
adc
xor
xchg
hlt
mov
sbb
orb
roll
or
jae
mov
movsb
sbb
in
jae
insb
pop
pop
call
bound
push
ret
mov
rcll
sbb
cmp
cmp
stos
push
imul
cmp
flds
xor
dec
xlat
jb
stos
std
pop
adc
insl
xchg
jmp
xchg
in
loopne
rcl
dec
adc
ds
ret
mov
imul
dec
aaa
dec
xchg
mov
int
cltd
pop
ss
jbe
orb
inc
mov
movsl
ss
sbb
mov
add
addr16
sub
sahf
or
lods
mov
movsl
mov
jle
fsubl
lcall
shrl
mov
add
stos
and
enter
cltd
mov
jp
sub
movsl
xlat
mov
mov
ljmp
inc
xchg
rolb
popa
sbb
mov
xor
mov
push
js
sub
inc
push
clc
loope
and
and
fxch
test
in
insb
pop
xchg
sarb
mov
ja
sub
xchg
outsl
push
and
xchg
mulb
mov
pop
cltd
sarl
sub
cltd
in
test
inc
insb
jle
xor
mov
mov
lock
add
adc
orb
push
call
xchg
ja
sahf
cmpsb
push
in
movsb
outsl
and
dec
out
lock
gs
arpl
stc
push
xlat
adc
cmp
lahf
lods
sbb
test
mov
mov
and
lcall
or
fisubs
int
mov
and
xchg
mov
xchg
lea
jnp
push
sub
test
test
xor
addb
cmpsb
sub
cli
cmp
enter
or
mov
cmc
cmp
inc
out
or
mov
in
pusha
insl
mov
add
test
push
test
stos
mov
xlat
cltd
ljmp
movsb
stos
mov
xchg
and
leave
xor
jo
mov
es
or
rcl
fwait
lock
adc
jo
inc
mov
inc
test
xor
call
addr16
lods
pop
push
fwait
sbb
fldcw
dec
clc
sahf
scas
or
icebp
clc
jmp
nop
push
inc
pushf
dec
testb
or
inc
adc
adc
jge
cli
int3
cmc
data16
or
xchg
push
into
in
stc
add
jnp
add
daa
rorb
xor
rcrl
sub
fisttpl
mov
scas
fsubl
mov
cmp
enter
mov
push
jne
movsb
xchg
sub
push
js
sub
shll
lds
xor
cmp
gs
jle
cmp
setp
mov
lahf
repnz
popf
mov
push
and
enter
mov
adc
div
mov
add
std
cmp
and
push
lcall
sahf
xchg
inc
jecxz
xchg
in
pop
push
es
jl
xor
pop
sbb
and
add
icebp
and
shll
mov
jmp
mov
lods
inc
fs
dec
jecxz
add
jns
out
jb
xchg
bnd
fbstp
fadds
add
or
mov
xor
inc
xchg
adc
in
lds
mull
push
mov
mov
pop
mov
into
xchg
es
or
pop
call
or
and
in
out
or
cmp
pop
inc
pop
mov
call
xor
ja
popf
pusha
dec
and
cwtl
push
mov
fiadds
and
lcall
repnz
sbbb
jno
add
cmpb
test
push
push
cmc
jp
in
adc
push
inc
ret
movb
push
popl
cmpsb
mov
out
imul
jns
andl
mov
push
mov
pop
pop
std
xchg
mov
sbb
orb
sub
xor
adc
and
mov
push
pop
pop
stos
or
and
ds
sbb
mov
movsb
dec
xor
fcmovbe
popa
movsl
ljmp
jae
dec
test
and
pushf
hlt
jb
and
stos
push
add
ret
jnp
rcrl
movsl
mov
in
mov
pushf
inc
mov
int3
adc
mov
or
xor
sub
sbb
or
add
cli
frstor
sub
imul
scas
shlb
or
xchg
out
push
lock
jne
pop
mov
adc
adc
push
roll
cwtl
jae
or
mov
mov
adc
fsts
iret
es
xor
or
subl
fcmove
xor
roll
and
in
or
and
stc
aas
xor
les
xchg
shrb
aas
ss
aad
clc
fstl
xor
cmp
add
pop
sbb
gs
inc
pop
cmpsl
sub
jp
cmc
cmp
pop
sub
jp
in
test
cmc
bound
pop
cmpsb
outsw
lds
mov
mov
push
push
mov
mov
loope
adc
pop
push
adc
or
and
call
mov
pop
xchg
dec
mov
sub
mov
cmp
test
out
sti
shrl
and
push
iret
mov
cli
outsb
xchg
inc
xchg
notb
scas
mov
into
lods
sub
xor
int
xchg
sbb
fwait
out
jp
pop
in
adc
pop
push
adc
mov
cmp
sub
inc
loopne
adc
mov
sub
divb
add
std
popa
jns
pop
pop
cmpsb
cmp
jne
mov
add
jl
rcl
test
and
or
mov
mov
loope
out
scas
or
addr16
fwait
sub
test
add
and
daa
addr16
movsl
fildl
pop
loopne
gs
pop
cwtl
lea
dec
xchg
pop
test
fimuls
dec
sub
cld
mov
push
adc
call
pop
sub
inc
pop
jo
pop
jl
add
cli
pop
ret
sbb
sarb
sub
inc
or
or
jbe
les
and
mov
jb
addb
push
out
ljmp
fcmovne
bt
aad
jmp
and
and
push
or
outsb
xchg
movsl
dec
shll
movsb
mov
push
je
xchg
mov
shrb
and
or
push
jecxz
xor
inc
sbb
fidivl
xchg
cmp
pop
mov
data16
dec
adc
enter
xor
or
pusha
add
aad
out
loope
xchg
and
in
in
adc
cmp
lods
adc
stos
mov
ljmp
sbb
xchg
xchg
jnp
loope
mov
xchg
mov
into
jg
jle
sub
adc
pop
pop
ljmp
xchg
mov
adc
adc
mov
cs
ja
ficoms
popl
cmpsl
jb
jne
xor
push
sahf
xchg
ljmp
call
ds
sahf
enter
lret
setb
das
iret
jg
mov
jecxz
test
adc
daa
mov
ljmp
in
push
mov
or
stc
roll
mov
adc
cs
mov
dec
pop
movsl
enter
jns
push
mov
in
push
ljmp
call
dec
sub
loopne
cltd
push
sarb
std
jbe
call
sub
stos
mov
mov
jecxz
cmpsl
sbb
jge
or
sub
or
clc
or
jecxz
je
cmc
out
gs
dec
mov
jge
idivl
out
adcl
int3
dec
mov
jmp
xor
jmp
jecxz
and
jecxz
cs
mov
push
shr
mov
dec
jp
jae
xchg
call
mov
imull
sbb
cmc
lods
xorl
pop
orl
dec
jns
xor
lods
out
movsl
les
popa
jl
xchg
and
xor
lahf
or
dec
daa
jbe
cli
push
jo
push
sub
data16
dec
pop
cwtl
pusha
pop
inc
movsb
or
xor
mov
dec
inc
out
sbb
out
ljmp
leave
adc
popl
ret
testl
mov
leave
sbb
int3
or
pop
pop
aas
lret
adc
pop
in
mov
or
cmp
test
ror
inc
das
xlat
sarl
cmp
int3
cmp
add
lret
jns
lods
out
xchg
dec
sub
xor
test
scas
fmuls
xchg
in
sbb
addr16
lret
mov
loopne
test
shll
pop
clc
xor
imul
pop
sbb
cmp
daa
repz
dec
jne
cmp
dec
add
jecxz
mov
sub
mov
xchg
shll
pusha
xchg
in
adc
sahf
cs
mov
mov
ret
cmp
or
mov
pop
fwait
mov
lock
sbb
xchg
insb
sub
and
dec
add
lds
cmpb
in
xchg
push
inc
sbb
std
add
addr16
push
pop
outsb
in
sub
add
jb
je
ficompl
and
mov
stc
test
push
jno
xchg
loope
test
mov
gs
cmpsb
or
iret
jp
aas
xlat
sub
jb
and
sbb
frstor
enter
adc
mov
pop
fwait
dec
push
mov
arpl
movsl
test
cmp
or
movsb
or
shrl
mov
jno
popf
int
je
dec
call
mov
xchg
cmc
stos
aam
dec
jns
jle
mov
cwtl
sub
jp
cmp
mov
inc
lods
enter
or
hlt
xchg
mov
push
push
int3
ss
aam
lods
mov
dec
outsl
stc
rcl
popf
cmc
or
push
add
mulb
call
push
fimuls
or
and
sub
and
push
movsl
pop
aam
dec
jl
pandn
or
mov
adc
mov
jbe
bound
repz
cmp
rcl
or
repnz
shll
ret
les
scas
mov
mov
pushf
add
sub
pusha
rcl
lcall
push
out
insl
cltd
dec
xor
sbb
pop
hlt
fistpll
faddp
fists
repnz
sub
push
imul
xchg
inc
xor
mov
js
imul
adc
dec
shrl
inc
repz
sub
idiv
xlat
mov
sti
int
std
cmp
leave
jns
dec
cmp
cmp
repz
call
cmc
jg
xchg
push
popf
cwtl
xchg
jecxz
pop
or
test
outsl
adc
adc
das
lock
push
jb
xchg
mov
cltd
xor
test
mov
mov
insb
lcall
xchg
inc
int3
dec
adc
sahf
inc
mov
fmuls
sub
or
pop
jb
jo
aam
mov
dec
mov
out
xchg
divb
lahf
inc
pop
sub
cli
fadds
popf
addl
popf
ret
sub
mov
jg
cmp
neg
mov
loope
icebp
stos
mov
and
lret
push
clc
xchg
or
or
or
push
fisubrs
enter
adc
adc
mov
cmp
scas
aam
mov
dec
or
xor
push
out
shl
loop
movsl
push
stc
pop
lahf
add
push
mov
in
daa
jecxz
mov
adc
popf
dec
data16
dec
lea
packuswb
mov
mov
mov
in
pop
or
xchg
dec
pop
aaa
xor
sub
jno
cmp
in
sub
aad
jmp
adc
mov
stc
xchg
lods
pop
pop
pop
adc
xchg
call
pop
jo
testb
xor
and
lods
repnz
push
xchg
gs
pop
cmpsb
push
fistpl
mov
fwait
leave
or
fdivr
sub
pushf
rcrl
pop
pop
mov
je
pop
out
mov
mov
dec
xchg
jmp
cs
jae
in
ja
xchg
push
test
push
loopne
std
jmp
clc
ret
and
jp
loope
mov
xchg
rcll
adc
push
ja
lock
jg
sti
mov
adc
push
jne
js
inc
test
lock
sbb
and
test
andb
sbb
sub
loope
insl
scas
jno
sub
mov
fldl
mov
jb
ret
mov
lahf
sar
inc
mov
jbe
mov
xor
push
push
mov
add
or
dec
std
jns
insb
add
or
cmp
sub
int3
loope
icebp
in
sbbl
dec
popa
jl
insb
add
or
cmp
sub
int3
loope
icebp
in
sbbl
inc
popa
fs
add
and
xor
fst
enter
in
cwtl
xchg
mov
mov
jno
add
or
mov
shll
cld
icebp
fwait
mul
sbb
pop
les
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
je
cmovb
pop
or
push
sub
xchg
loopne
dec
push
add
or
add
add
add
or
addb
add
outsb
add
add
add
add
hlt
add
add
add
add
sub
sbb
add
add
add
int
test
push
or
add
add
add
dec
add
add
das
add
add
add
add
add
das
add
add
add
add
cmpsl
add
add
add
xor
xor
or
lret
add
add
add
add
add
add
add
cmp
scas
add
add
add
add
add
add
add
add
add
sbb
add
add
xchg
add
add
add
add
lods
add
add
add
add
add
add
sub
sub
jge
mov
add
add
add
add
add
add
add
add
add
stos
add
insl
add
add
add
or
or
push
add
inc
add
inc
add
push
add
or
icebp
add
lret
add
add
add
add
add
add
add
add
add
add
sub
cmpsl
add
adc
pop
add
or
pop
add
add
add
add
add
jg
adc
inc
add
add
adc
pop
add
add
add
add
add
add
aam
sub
sub
jg
xchg
add
and
sbb
enter
les
icebp
add
add
pusha
add
add
sbb
add
add
outsb
add
add
add
add
pop
add
add
add
add
add
add
dec
add
add
xchg
add
add
and
add
lret
add
add
aam
iret
add
add
add
add
add
add
add
fwait
add
adc
add
inc
add
add
in
add
add
add
add
add
sub
sbb
push
add
add
enter
and
call
add
add
cmp
dec
add
add
add
scas
add
add
add
add
add
add
add
test
mov
add
sub
add
dec
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
and
mov
inc
add
and
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
fiaddl
sub
add
dec
add
insl
add
add
je
pusha
add
add
add
je
addl
add
add
add
add
add
add
add
add
dec
add
or
add
aam
iret
add
add
hlt
add
add
add
jecxz
popa
add
add
add
or
inc
add
add
add
add
sub
faddl
scas
add
add
add
add
add
add
add
add
add
add
stos
loope
or
test
test
fiadds
addr16
aaa
sub
jo
inc
stos
inc
mov
cmc
inc
test
inc
add
nop
rol
or
imul
daa
fcompl
dec
mov
and
divb
jo
inc
cmp
mov
testb
cltd
ret
jb,pt
and
int3
outsl
adc
iret
outsb
push
adc
iret
inc
push
jg
push
fwait
cmp
jle,pn
out
pop
inc
lahf
jmp
dec
jmp
idiv
popa
insb
mov
jge
sahf
rorb
sbb
mov
popf
ja
shlb
sbb
mov
sbb
aad
rcrl
mov
jmp
ljmp
daa
or
sbb
lret
test
test
and
stc
scas
mov
fwait
jo
mov
dec
xor
push
xchg
inc
xchg
xor
sbb
ljmp
ret
or
xchg
push
xchg
lret
daa
xchg
test
and
push
inc
fists
daa
arpl
xchg
mov
inc
ds
arpl
pop
repnz
and
stos
xor
arpl
dec
lods
flds
aad
cmp
xor
or
mov
or
adc
sbb
sub
mov
test
popf
and
pop
mov
push
cmp
out
mov
lcall
adc
xchg
add
shl
sbbb
in
dec
das
test
in
push
xor
mov
insl
bound
pop
xchg
and
mov
lahf
insb
mov
ljmp
mov
jno
in
xchg
pop
dec
mov
xchg
xor
cwtl
mov
or
jae
fmulp
cmp
fildll
shrl
popa
sahf
jmp
adc
es
lea
in
pop
dec
dec
movsl
lods
adc
stos
imul
clc
iret
divb
enter
pop
jb
ljmp
xchg
stc
or
gs
outsl
sub
fwait
pusha
xchg
mov
and
xor
stos
cltd
mov
into
add
sti
add
mov
movsl
xor
shll
xchg
aam
inc
mov
dec
or
add
cmp
jl
andb
je
pusha
xor
imul
sahf
sub
vmread
mov
and
and
mov
movsb
dec
dec
jge
pop
jle
bound
sub
aam
and
fdivl
mov
ds
repz
mov
insl
lock
out
pop
jnp
icebp
rolb
mov
jmp
jno
icebp
out
lahf
fadds
imul
dec
sbb
divb
test
or
shlb
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
