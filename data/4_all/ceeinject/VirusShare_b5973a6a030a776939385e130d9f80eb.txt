call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
int3
ret
fsubrl
sbb
or
pop
in
add
adc
dec
dec
mov
jl
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
jl
insb
lods
pop
mov
lods
sbb
cmp
fdivrl
int3
and
cld
adc
lods
inc
mov
xchg
pop
jmp
jg
bound
faddl
push
pushf
mov
ret
mov
xchg
movsb
cwtl
das
fiaddl
and
popa
pusha
insl
sbb
xchg
cmpsl
dec
les
mov
mov
jns
mov
xor
push
stos
and
je
shrb
lea
push
mov
xchg
and
or
cld
int3
mov
lcall
lods
push
add
mov
in
dec
push
loope
pop
jae
scas
je
sub
cmpsb
xor
int
jecxz
in
aaa
pop
xchg
nop
lods
or
dec
pop
xor
mov
fsubrl
xor
xor
int3
stos
sbb
je
pop
lea
aaa
rcrl
pushf
xor
push
fcoml
or
push
mov
lods
inc
mov
mov
test
in
sti
sub
cmp
mov
sub
sbb
aad
leave
xor
and
leave
adc
imul
scas
sub
insb
cltd
or
pop
lods
cmp
sub
mov
pop
mov
test
test
jns
adc
dec
mov
jl
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
jl
insb
lods
pop
mov
lods
insb
pushf
jl
or
sbb
sub
cmp
int3
cmp
stos
push
cmp
xor
adc
sub
push
addb
movsl
add
jne
or
or
cmpl
inc
sub
cmp
fsubrs
xor
pop
movsb
mov
ficoms
xchg
adc
leave
repz
pop
enter
xchg
fidivrs
or
add
cmp
lret
sbb
test
push
cld
jb
leave
dec
repz
lods
sbb
dec
clts
mov
pop
mov
test
jns
mov
loop
inc
data16
xchg
lods
add
xor
lock
mov
rcrb
push
mov
fistl
pop
xchg
cmp
jae
lret
aam
ret
mov
cli
in
fxch
cli
mov
inc
xchg
sti
popa
fimuls
add
xchg
stc
adc
mov
adc
test
push
cld
ss
mov
icebp
shll
std
pusha
out
adc
test
or
push
out
jns
imul
mov
lahf
int
sahf
lcall
pushf
aaa
in
lods
lret
xchg
add
call
les
fwait
js
test
cwtl
mov
add
rclb
cmp
adc
bound
inc
inc
mov
push
stc
andl
push
movsl
lds
dec
int3
lahf
jl
outsl
and
je
mov
xor
sbb
sbb
out
fsubs
push
lret
pop
js
push
insb
dec
xchg
sahf
adc
jne
imul
xchg
gs
xor
dec
jg
xor
bound
es
cmc
pop
xor
call
pop
cmc
icebp
enter
sub
mov
pop
xchg
mov
std
loope
lcall
xchg
das
negl
cmpsl
dec
int
cmp
jno
mov
push
jae
xor
push
fcoms
add
out
mov
pop
mov
jecxz
mov
xchg
jae
cli
sbb
sub
or
or
daa
mov
jle
mov
xor
mov
pop
inc
lahf
mov
xor
inc
popf
data16
pop
int3
roll
sub
push
sbb
scas
loopne
outsl
idivb
out
insl
scas
jmp
fistpll
test
pop
lcall
xlat
xor
pop
inc
inc
mov
repnz
push
push
pushf
fdivrl
pop
orb
nop
fsubs
sub
leave
loop
cmp
pop
adc
inc
mov
or
daa
fdivrs
cmpl
cmp
andl
stos
add
out
mov
xchg
lods
xor
cld
ja
andb
mov
fstp
xchg
sbb
inc
xor
xor
outsb
add
not
or
sbb
and
rorl
out
orb
dec
scas
pop
mov
mov
cld
insb
popa
add
mov
imul
stos
les
or
mov
int
repz
dec
adc
jo
mov
mov
mov
js
out
rol
aas
inc
test
js
sahf
push
cmc
inc
xor
jle
lahf
inc
in
dec
adc
xor
mov
aaa
out
push
pop
outsb
add
ds
test
hlt
add
cmp
ja
pusha
cmp
or
push
or
hlt
lods
push
dec
push
xchg
and
cmp
xchg
sbb
repz
arpl
dec
mov
aaa
cwtl
call
mov
or
push
adc
sub
aas
int
add
push
bound
in
xchg
nop
xlat
sub
push
pusha
xchg
add
scas
sub
adc
xchg
jp
loopne
push
xchg
jp
mov
lcall
pop
enter
int
adc
and
icebp
cmp
and
push
repnz
mov
sbb
jge
fcompp
pop
xchg
ja
es
xlat
jg
adc
mov
mov
fld
mov
xor
icebp
movsl
hlt
icebp
fs
inc
aad
mov
jo
lahf
imul
addr16
decl
xor
cmc
and
scas
xor
dec
jg
in
add
inc
dec
adc
cmpsb
mov
sbb
cmc
in
xor
and
xchg
arpl
lods
mov
pop
je
rcl
add
lea
iret
push
out
aas
jl
ret
jp
add
and
jo
mov
pop
loopne
arpl
imulb
push
sbb
outsl
sbb
lcall
or
subb
mov
out
arpl
add
mov
call
mov
js
repz
out
sub
mov
jno
mov
dec
adc
dec
sar
mov
movsl
xchg
push
sahf
xor
cmpsl
into
or
jmp
or
into
xchg
or
aas
sub
or
push
fldl
and
mov
and
mov
cld
arpl
imul
scas
inc
int
or
pop
sbb
cmp
xor
jbe
mov
sbb
dec
jae
pop
scas
shl
add
mov
dec
push
sarb
adcb
sahf
cmp
jb
frstor
cmpsl
lret
rcrb
mov
jge
ss
mov
cwtl
pop
lahf
pop
out
mov
pop
sti
loop
repnz
push
fimuls
pop
xchg
jg
cmp
mov
test
addr16
push
jp
xchg
mov
clc
jle
xchg
fmuls
dec
cmp
push
xor
pushf
dec
scas
adc
mov
jbe
movsl
shll
mov
or
outsl
pusha
cmp
inc
shrb
lea
movsb
fwait
push
dec
mov
cmp
movsl
pop
sub
or
xchg
std
lods
mov
xor
in
cltd
xchg
les
pop
jb
mov
js
pop
cmp
mov
das
or
dec
js
mov
cmc
or
adc
aam
loop
cltd
cmp
aad
mov
mov
jno
cltd
lret
inc
xor
or
adc
sti
add
pop
or
or
pop
popf
xchg
adc
scas
mov
jb
aaa
or
ja
rclb
cmc
add
jle
pop
inc
jns
adc
leave
mov
outsl
mov
mov
or
xchg
arpl
xor
cmp
nop
or
sub
xchg
fbstp
jmp
jmp
mov
add
fs
add
movsl
add
mov
mov
jnp
sub
push
loop
adc
xchg
jnp
xchg
into
add
xchg
into
fisubl
jmp
lret
cmp
call
mov
pushf
lods
out
sub
xchg
pop
lcall
xor
push
inc
or
movsl
xchg
cmpsl
inc
test
fimull
fsubrs
adc
movsb
add
inc
xor
dec
mov
inc
cmc
pop
js
lods
outsl
sub
cwtl
flds
mov
xor
xchg
xchg
lds
sub
inc
push
outsl
cmp
pop
xchg
mov
cmpb
stos
dec
ljmp
push
push
inc
or
fstpt
mov
dec
xlat
pop
push
shll
jnp
ja
mov
mov
in
cs
and
lret
cmp
pop
stos
and
sub
push
sbb
mov
sbb
xor
scas
dec
jmp
cmp
and
lock
dec
sub
sbb
addr16
mull
insl
xchg
mov
jbe
scas
mov
xchg
mov
push
mov
sahf
rcrl
dec
xchg
pop
xchg
mov
aaa
xor
mov
add
cmp
mov
dec
scas
mov
emms
sbbl
fisttpll
inc
adc
jb
out
jle
cmc
cmc
lock
rcll
or
ja
xchg
out
fnstenv
mov
inc
loop
xchg
daa
scas
fisttps
fbstp
jbe
fidivrl
rol
sbb
loop
repz
jmp
loopne
mov
out
pop
adc
or
lahf
dec
scas
lcall
inc
add
sbb
and
and
xor
subb
and
sub
and
lea
test
bound
je
inc
sbb
lds
sub
call
out
jb
fmull
mov
es
loope
cmp
scas
cltd
sbb
fmuls
xchg
mov
xchg
cmp
iret
inc
ss
jp
pop
jp
fisubl
push
in
or
das
rcrl
incl
into
mov
call
insl
lahf
test
sbb
lret
add
orl
sbb
push
call
adc
mov
cmpsl
addl
popa
mov
iret
ds
imul
xlat
mov
mov
xor
push
sub
es
xlat
test
fwait
pop
imul
cmp
sbbl
or
int
movsl
mov
dec
addr16
jg
std
int
into
mov
pop
inc
jno
lds
push
xor
cmc
enter
inc
jecxz
xor
mov
stos
add
dec
cmc
pop
or
fcoms
jl
fstp
test
repz
iret
sbb
push
sub
fsubl
push
sarl
cli
mov
jbe
aaa
test
dec
or
xor
ss
outsb
fisubs
mov
mulb
pop
add
sbb
lock
mov
inc
jno
pop
add
pop
add
test
int3
sahf
in
xchg
mov
and
inc
in
xor
push
ret
movsb
pop
mov
and
mov
shll
adc
imul
pop
mov
add
mov
scas
mov
sbb
pop
pop
sti
xchg
sub
ds
inc
jbe
jg
popa
add
xchg
dec
sar
subb
xor
out
push
loopne
fadds
enter
test
lcall
aaa
ss
scas
inc
add
rol
pop
pusha
stc
lret
jns
and
sbbb
push
push
pop
ds
lret
cmpsl
push
aaa
scas
xchg
outsb
repnz
jp
xchg
push
pop
mov
mov
enter
or
pusha
stos
shll
out
mov
aad
dec
mov
pop
test
push
jge
aad
dec
popa
gs
pop
mov
add
in
imul
bound
pop
sarl
popa
adc
stos
adc
arpl
in
inc
sub
jnp
xor
leave
rcrl
insl
cmpsb
lods
dec
dec
jbe
cmp
push
gs
cltd
inc
sbb
push
call
std
sub
xor
scas
stos
sbb
ds
cmp
mov
loope
jge
mov
mov
int
lods
aad
mov
push
push
icebp
xor
cmp
stos
xchg
dec
rorb
daa
mov
and
xor
push
insl
dec
dec
insb
hlt
jno
fmul
inc
cmp
push
cmpsb
ljmp
hlt
mov
hlt
inc
ljmp
imul
xchg
pop
dec
xchg
cmp
pop
cmp
and
jae
clc
outsb
pop
and
dec
mov
nop
or
lds
sbb
sbb
pop
push
sub
out
pop
and
jl
repnz
lret
repz
data16
sub
push
test
xchg
lods
mov
test
hlt
mov
pop
int
jp
pop
ljmp
add
fs
shlb
data16
gs
test
pop
dec
sub
clc
mov
xor
xchg
leave
xchg
sub
ja
or
sub
mov
jb
jle
jg
insl
sbb
mov
lods
or
popf
jo
mov
fsubrs
mov
or
dec
cld
xlat
js
add
push
pop
push
jbe
sahf
xchg
pop
or
push
mov
nop
jecxz
rcll
sbb
add
xor
inc
xor
loop
ds
xabort
outsb
int3
xchg
and
add
sbbl
imul
je
fldenv
rcll
int
add
inc
fnstcw
das
xchg
push
cmp
test
insb
lcall
mov
frstor
sbb
arpl
cmp
mov
das
clc
stc
mov
xchg
pop
sbb
sbb
sub
leave
test
lock
loopne
sti
mov
outsb
mov
mov
mov
out
mov
mov
test
and
test
cmp
cwtl
xchg
sub
ret
pop
or
in
in
xlat
mov
mov
sub
cwtl
aam
or
pop
mov
insl
mov
mov
jb
xor
subl
in
pop
sub
jl
sti
mov
cwtl
repnz
adc
clc
lahf
adc
in
stos
pop
or
mov
les
dec
nop
mov
cmp
mov
popa
outsl
out
cmp
mov
insl
mov
sub
dec
sbb
loop
sub
in
or
cmp
out
ljmp
cmp
and
aad
loope
int3
dec
das
and
ret
rcrl
xor
cmp
aas
or
aam
int
insb
dec
adc
xor
cmp
repnz
fnstsw
insb
add
push
shrl
lea
insl
fisttpl
push
add
lods
lahf
fwait
test
jne
loopne
inc
dec
add
cld
jb
xor
pop
fsts
push
or
fmul
cmp
xchg
test
mov
lock
xchg
data16
jne
dec
push
fadd
in
and
in
outsl
dec
sbb
push
push
and
push
pop
lret
inc
roll
cmp
mov
xor
cmp
je
dec
test
dec
push
out
xchg
jge
adc
jmp
pop
movsb
cmpl
jns
idiv
cmp
in
add
mov
cmp
add
rcr
sbb
push
out
jle
lods
pop
mov
add
fisttpl
inc
xor
mov
insl
sub
sahf
jo
lods
xchg
mov
pop
cmp
arpl
mov
arpl
shlb
dec
sahf
movsl
mov
jno
addr16
rcrb
xchg
inc
loopne
lock
dec
mov
inc
mov
rcl
adc
insb
in
or
mov
mov
nop
mov
rolb
aad
mov
mov
xchg
loope
xlat
adc
in
pop
jae
push
lods
fs
dec
mov
mulb
nop
adc
stos
outsl
push
jnp
push
rcrb
aad
dec
mov
popa
mov
dec
sub
xlat
imul
add
dec
cmpsl
fistpll
cmp
shrl
imull
and
js
sti
mov
pushf
lds
stc
in
cmc
mov
int3
dec
mov
jl
loope
loopne
cwtl
jno
and
out
and
mov
inc
andb
mov
loope
xor
std
add
lods
mov
mov
and
add
push
pop
sbb
xchg
jmp
xlat
subb
cs
repnz
inc
insl
lahf
cmpsl
pushf
mov
roll
jg
adcb
fsubl
adc
xchg
mov
es
adc
sub
rorl
imul
clc
cmpsl
mov
aas
pop
stos
jae
xor
and
in
cld
inc
rolb
pop
inc
ret
div
dec
add
ficomps
imul
outsb
shlb
dec
aas
fadd
fiaddl
andb
jne
push
and
repnz
mov
shll
jns
pop
jp
and
or
mov
std
les
adc
add
or
sub
mov
pop
add
ljmp
inc
xchg
dec
fstl
inc
lods
les
cmp
mov
mov
stos
adc
out
mov
push
lret
dec
add
lcall
inc
dec
stc
aad
inc
mov
rorl
in
stos
mov
or
not
fistps
bndstx
dec
leave
xchg
cs
js
mov
push
jb
in
adc
jnp
adc
add
daa
lret
in
push
xlat
int3
mov
mov
dec
popa
xor
mov
flds
cmp
arpl
xor
ds
mov
fwait
shll
scas
and
pushf
sbb
inc
add
or
andl
push
jecxz
jnp
fwait
es
mov
jmp
test
mov
add
pop
insb
push
cmp
outsl
sbb
sbb
fsub
and
adc
ds
mov
insl
adc
inc
and
lea
subb
push
jbe
fdivp
mov
inc
jb
movsl
lds
push
jecxz
xor
lea
push
mov
inc
jp,pt
jmp
xor
mov
dec
mov
imulb
and
scas
add
mov
dec
movsb
call
jmp
leave
lock
shl
repnz
dec
sub
or
pop
or
pushf
jno
icebp
jns
dec
cmp
in
adc
pop
push
into
clc
or
add
fdivl
sbb
inc
outsl
bound
inc
rclb
mov
fsubrs
jnp
jne
test
mov
pop
shl
inc
fisubrl
jns
lds
push
and
push
loope
inc
sub
cmp
cld
mov
and
rcll
xchg
add
int
push
mov
out
or
test
les
xchg
test
or
mov
xor
fimull
out
add
cli
jbe
pop
xorb
jae
aam
cmp
loop
mov
outsb
lahf
loope
sub
add
int3
test
gs
scas
xchg
or
insb
jle
add
mov
xor
aas
outsb
mov
es
cmp
sbb
aas
and
mov
mov
pop
add
in
sahf
out
pop
andl
or
mov
and
pop
pop
sub
xchg
dec
jb
iret
and
mov
cmp
mov
ficomps
fisttps
fimull
jp
pop
addb
cltd
out
push
in
cmp
loopne
xchg
mov
dec
orl
mov
out
inc
test
xchg
xor
lcall
insl
add
xchg
mov
push
clc
je
push
lds
movsb
adc
daa
sahf
dec
push
enter
pop
repnz
mov
subl
or
inc
shlb
xor
sbb
push
test
aad
cmp
sub
jge
mov
push
movsl
sbb
imul
mov
popf
xchg
clc
mov
inc
out
das
fs
lret
push
ret
fldenv
or
daa
ds
or
out
cltd
adc
in
mov
add
loope
push
sbb
daa
push
fwait
subb
cmpsl
add
addl
ret
movsl
ret
xchg
movsb
xchg
xor
mov
lcall
repnz
mov
mov
sbb
sbb
pop
leave
repz
bound
int3
mov
das
dec
test
addr16
idiv
sub
inc
mov
std
or
push
sbb
adc
psrld
sbb
out
pusha
lcall
push
loopne
stos
jmp
ret
arpl
out
jo
mov
xor
fucomp
mov
std
into
dec
inc
jge
aad
mov
cltd
repz
adc
xchg
adc
cmp
imul
pushf
push
data16
or
lcall
push
pop
lcall
lret
push
sbb
and
jns
jb
push
cmc
stos
call
pop
std
jg
push
wrmsr
cmp
mov
sub
adc
xlat
jmp
test
lea
cld
mov
out
push
xchg
xchg
xor
out
arpl
je
push
cmp
jecxz
sbb
cmpsb
cltd
bndstx
mov
leave
pop
in
out
xor
xchg
push
xor
cmpsl
push
in
loope
bound
out
add
shlb
sub
inc
imulb
fdivs
xchg
clc
mov
sbbb
inc
mov
imul
jno
or
pop
mov
dec
in
aam
vmwrite
or
cmp
or
pop
mov
aaa
mov
sub
jmp
or
mov
add
xchg
aad
int
arpl
scas
cmp
push
jmp
cmpsl
push
pop
push
jno
stos
and
mov
xor
add
in
icebp
pop
sub
test
out
mov
inc
add
rcrb
out
or
cltd
xchg
push
insb
aad
shl
mov
stos
add
out
mov
jae
mov
out
ljmp
adcb
ss
rorb
int3
inc
inc
pop
add
fstps
or
js
js
add
out
insb
jecxz
push
push
ds
mov
andb
lahf
jns
les
cmpb
inc
xchg
xor
call
stc
ret
mov
cmp
add
adc
jp
jb
mov
sbb
cmp
or
push
mov
repnz
cmp
or
or
ret
push
dec
add
fimull
das
add
pusha
mov
mov
lds
mov
mov
push
test
mov
jmp
push
dec
out
xchg
push
test
mov
insl
sbb
mov
jle
mov
ja
mov
fcmovnbe
xchg
jle
stos
or
repz
or
jl
insb
lods
pop
mov
lods
insb
pushf
jl
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
jl
insb
lods
pop
mov
lods
insb
pushf
jl
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
jl
insb
lods
pop
mov
lods
insb
pushf
jl
or
sbb
sub
cmp
int3
cmp
sub
sbb
or
jl
insb
lods
pop
mov
push
pushf
jl
jnp
xchg
adc
and
xor
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sarb
popl
lcall
das
arpl
jae
add
outsl
and
dec
cmpsl
mov
repz
fbstp
das
add
jae
inc
adc
outsl
and
dec
jnp
and
popf
push
out
mov
aas
jo
or
outsb
push
xor
lods
int3
lahf
out
negl
ljmp
pusha
pop
cmp
ja
cmp
jg
aam
adc
in
das
daa
arpl
jbe
lods
call
push
xlat
lds
or
cmpsb
and
push
cmp
cmc
in
dec
not
outsl
stos
sub
lcall
jae
adc
outsl
jmp
maskmovq
negl
cli
mov
fdivrs
out
pop
mov
xor
push
shl
fwait
out
cld
jg
xchg
and
dec
cmp
fdivrp
ret
iret
outsb
add
sbb
mov
out
arpl
shlb
loopne
or
adc
pop
aas
mov
cmp
loop
or
daa
pop
xlat
xchg
ljmp
cmp
pop
xor
mov
repz
addr16
jmp
mov
aas
leave
das
adc
jg
outsl
adc
es
mov
mov
xlat
cltd
mov
inc
inc
add
push
jp
jnp
cmp
or
push
add
cli
xchg
mov
and
add
dec
or
adc
or
scas
sti
mov
ljmp
mov
inc
aas
push
das
arpl
jae
add
outsl
and
dec
ret
mov
repz
fbstp
das
arpl
jae
add
outsl
and
dec
ret
mov
xor
mov
int
adc
add
push
mov
xchg
pop
cmp
push
mov
jae
stc
push
ljmp
shll
mov
sbb
insb
mov
shll
and
add
dec
out
sbb
mov
push
sub
ficoml
cli
xchg
mov
fwait
cmpsl
lcall
mov
dec
jnp
fcomps
jl,pt
pop
icebp
inc
mov
mov
aas
fldt
xchg
hlt
push
and
xor
lds
js
push
jne
or
dec
and
adc
addl
xchg
dec
loopne
pusha
fcompl
push
jns
nop
jp
or
mov
pop
in
pop
dec
adc
pop
lret
and
lret
ljmp
inc
test
outsl
pop
push
scas
std
sti
bound
jle
pop
xor
pushl
mov
aas
xor
dec
iret
jo
sbb
cli
mov
loopne
test
push
mov
cmp
int3
test
mov
push
jae
xcrypt-cbc
cmpsl
push
orb
bound
sub
test
mov
jbe
xchg
cld
mov
jmp
loop
fisubl
out
shrl
inc
jb
sbb
lcall
mov
cwtl
cmp
out
jp
mov
int
mov
pop
xor
cmpsl
push
pop
xchg
ds
mov
scas
in
xor
adc
xlat
out
pusha
inc
mov
mov
jo
imul
jecxz
mov
mov
inc
int
push
or
and
sub
mov
pop
push
loopne
xor
sbb
arpl
scas
call
xor
popf
push
movsb
xchg
push
cmp
imul
push
cmc
addl
adc
shll
shll
inc
out
sub
dec
xor
add
fstps
push
pop
ds
fiadds
pop
aam
jo
push
mov
outsb
cmpsb
jmp
les
cmp
ret
mov
inc
js
ljmp
xchg
cmp
movsb
pop
push
movsb
or
int3
fldl
pop
sbbb
les
push
jae
pop
dec
add
clc
mov
aad
push
sbb
lcall
dec
add
jno
lret
xchg
out
imul
cmc
scas
mov
test
fs
xchg
les
xchg
mov
push
lahf
out
cmp
sbb
adc
pushf
int
mov
ja
cmp
xchg
jle
ja
mov
add
and
pushf
push
adc
xor
jmp
imul
mov
push
sub
es
call
clc
int3
loopne
add
add
cmp
dec
sti
stc
shll
xor
movsl
sub
inc
jle
or
adc
dec
mov
mov
jb
fsts
sub
sbb
icebp
push
inc
fistps
hlt
lds
rcll
fld1
clc
je
out
mov
pop
repz
arpl
outsb
xor
push
or
ja
dec
sbb
jecxz
pop
sbb
adc
push
les
mov
pop
or
jb
cmp
jge
add
sub
pop
push
sub
adc
mov
xchg
in
and
cltd
nop
sub
add
andl
inc
add
movsl
repnz
jg
loop
push
sub
jge
scas
je
ss
push
inc
jp
mov
cmp
mov
dec
push
jbe
fwait
jae
stos
xchg
inc
loope
dec
mov
rcl
jnp
loop
or
add
jmp
push
lcall
ljmp
lret
leave
and
out
mov
addr16
cwtl
xor
popa
mov
rcll
xchg
insb
inc
adc
and
test
cmp
xor
or
pop
pop
pop
push
arpl
xor
cmp
dec
pop
mov
test
dec
les
leave
repz
xor
cmp
inc
rcrl
jb
cmpsl
data16
cs
mov
pop
cmp
repz
jno
mov
fwait
cmc
scas
xor
insb
adc
in
fidivrs
jl
add
add
aam
fcomps
and
imul
mov
xor
hlt
jns,pt
xchg
add
idivb
or
arpl
fstpt
das
popf
ljmp
cmp
pop
ficoml
mov
and
rcrl
daa
mov
sbb
fnstenv
int3
or
sbb
add
not
aas
jg
jne
sub
mov
lret
inc
mov
stc
imul
cmc
mov
push
mov
dec
js
sbb
mov
movsb
out
dec
mov
mov
pop
adc
popf
addb
mov
cmpb
icebp
jbe
fildll
or
inc
inc
adc
mov
leave
sbb
ret
fsubl
jecxz
push
lret
mov
pop
pop
xchg
and
or
enter
fiaddl
sub
aaa
push
fists
fisttps
xor
mov
aaa
mov
push
int3
lret
lret
pop
or
fwait
mov
js
inc
mov
cmp
outsl
adc
insl
loopne
push
iret
jle
nop
cmpsb
inc
lds
cmp
sub
stos
cltd
shlb
scas
orl
repnz
jnp
cmp
mov
push
and
daa
js
adcl
xor
aaa
xlat
je
fnstenv
out
in
cltd
xor
rolb
mov
and
pop
push
push
into
test
mov
nop
orl
leave
mov
push
dec
jae
loope
push
mov
cltd
or
push
dec
cmpsl
fwait
int
mov
push
adc
jmp
mov
out
fldl
add
test
leave
mul
js
add
jg
push
imul
push
iret
pop
dec
dec
sahf
sbb
in
pop
stos
and
cmp
fdivr
push
add
mov
dec
ror
push
cwtl
mov
loopne
fstl
fldl
lret
lock
aam
xor
movsb
cld
popf
xchg
push
push
in
xchg
pop
push
insl
insl
sub
mul
addr16
xchg
aam
mov
push
cmp
ret
inc
test
or
cmp
idiv
mov
push
dec
xchg
pop
or
fwait
jo
stos
ss
sahf
and
mov
shll
aam
aad
xor
sub
lea
push
rolb
clts
or
push
lcall
dec
dec
xor
mov
imul
add
lea
mov
movsl
arpl
arpl
movsb
xchg
loope
shrb
stos
out
xor
loop
adcl
xor
lds
mov
jbe
mov
loopne
insb
je
movsb
mov
pop
jae
xor
xchg
jg
xchg
mov
lret
aaa
xor
testl
jl
push
dec
ds
call
jnp
nop
rolb
out
jne
out
movsb
push
ss
scas
ja
cmp
in
push
pop
xor
pop
or
std
mov
sbb
xchg
enter
sbb
sub
aad
inc
jecxz
into
jo
out
loopne
inc
aam
push
jmp
xchg
test
or
shrl
or
je
mov
jp
cmp
jo
add
inc
xchg
sahf
jmp
pop
sub
fstp
dec
lods
xlat
push
inc
cmp
or
adc
mov
jl
repz
cltd
mov
insl
mov
dec
jp
push
pop
icebp
bound
int
cmpsb
dec
stc
cs
xchg
inc
fisttpl
cmp
repnz
xchg
adc
nop
ret
orb
test
movsb
fildll
out
jp
adc
adc
cmp
sbb
test
nop
cmp
xchg
push
std
in
stos
or
and
add
loope
xchg
enter
inc
mov
cmp
shlb
movsb
call
stos
jg
lock
or
and
pop
shll
insl
xchg
and
xor
xor
cmp
or
loopne
imul
add
jl
mov
add
inc
popf
push
iret
mov
stos
push
aaa
int
mov
pop
inc
lahf
arpl
pop
push
outsl
out
jecxz
push
pop
adc
js
mov
xchg
jns
xchg
xchg
xchg
clc
pop
incl
gs
lahf
insl
inc
cmpsl
jb
out
push
imul
adc
ret
repz
outsl
mov
push
mov
testl
scas
mov
enter
add
daa
sub
jb
add
ret
sub
cltd
jg
mov
pushf
in
sbb
push
cmp
les
mov
popf
jnp
adcl
les
sbb
pop
jne
push
es
push
outsl
sbb
movsl
or
icebp
loope
std
push
mov
mov
pop
imul
dec
mov
push
shlb
pop
mov
repz
push
stos
dec
int3
add
mov
push
arpl
ret
mov
ret
or
sahf
push
dec
inc
in
pop
out
lock
push
mov
pop
jbe
es
mov
repnz
mov
mov
repz
sbb
pop
rolb
pop
mov
lods
push
adc
lock
mov
pop
sub
adc
movsl
xchg
xor
xchg
loopne
std
adc
mov
xor
test
stc
xchg
xchg
cmc
scas
in
cmpsb
sarl
pop
aad
adc
dec
loop
into
cmc
bound
popa
and
sbb
cwtl
push
fidivl
stc
daa
popa
mov
test
cli
es
xchg
in
sahf
jno
push
lds
cld
aaa
inc
or
ror
aam
sub
aas
pop
fildll
xchg
adc
push
dec
loop
mov
mov
push
mov
mov
and
daa
add
mov
fisttpll
xor
loope
mov
jb
sbb
mov
jbe
push
test
cwtl
sub
adc
pushf
jne
aam
cmp
add
inc
inc
adc
xor
ds
loop
int3
or
fwait
push
mov
pop
loopne
mov
mov
sti
inc
addr16
xchg
fildl
sbb
mov
movsb
jl
or
ljmp
test
inc
aaa
fimuls
mov
adc
loope
ljmp
lds
or
lods
sbb
push
jge
ss
stc
insb
enter
clc
mov
sbb
roll
mov
popa
jmp
mov
pop
pop
and
jecxz
subb
jo
inc
out
movsb
jnp
cmp
sbb
cmp
pop
rcrb
sbb
jge
ja,pn
or
add
pop
pop
movsl
adc
or
xor
inc
mov
insb
inc
hlt
pop
add
mov
sbb
ret
xor
faddl
icebp
mov
enter
push
pop
in
enter
mov
sbb
push
sbb
mov
repz
outsl
sbbl
sub
icebp
stos
mov
pop
cwtl
mov
mov
adc
mov
pusha
pop
cld
inc
cltd
cmp
mov
inc
sub
mov
push
xor
pop
lods
and
mov
daa
and
sub
xor
push
sti
cmpsb
inc
and
pop
jle
cmp
mov
stos
sub
ret
mov
add
cmpsb
fadds
or
lock
xchg
push
and
test
push
cmpb
inc
fistpl
xchg
ret
xor
iret
cmp
add
jb
sub
push
test
mov
stc
pop
jle
ret
push
or
fnstenv
std
lahf
pusha
inc
inc
js
imul
jns
mov
popf
xor
in
xor
aam
dec
bound
cmp
out
dec
jmp
and
stos
sub
or
pop
adc
xor
repnz
ror
cld
push
loope
pop
lcall
xor
sahf
in
xchg
roll
add
cmp
test
add
out
jg
call
data16
cwtl
clc
xchg
add
mov
or
mov
pop
repz
loopne
aas
int
adc
inc
mov
enter
pop
dec
mov
lret
inc
mov
loopne
addr16
dec
or
push
fcmovne
mov
mov
das
inc
pop
loopne
std
dec
push
test
dec
daa
add
push
ds
pop
outsl
scas
add
cmp
mov
testb
nop
adc
mov
pop
inc
mov
mov
into
sbb
scas
pop
and
lret
xchg
push
fidivrs
lret
in
or
out
dec
xor
cmp
gs
jbe
arpl
push
fs
mov
sbb
ss
mov
js
pop
lcall
xor
sub
push
rcll
mov
stc
and
mov
mov
ds
popa
je
ret
or
subb
jno,pt
cmp
mov
popa
mov
mov
pop
adc
ja
rcrl
int
popf
shll
xchg
push
lret
ds
lret
mov
or
adc
mov
scas
inc
insb
iret
out
mov
mov
pop
mov
cmc
xchg
mov
lret
xlat
fwait
cmp
jmp
movl
scas
cld
mov
shrb
lahf
push
mov
aam
sub
push
in
cmp
mov
cmp
popf
fwait
pusha
jmp
push
xor
aad
pop
jecxz
mov
adc
lods
mov
xchg
cli
xor
mov
push
cli
cli
cld
xchg
push
dec
xchg
xlat
mov
pop
sbb
clc
sbbb
jg
mov
lods
or
pop
or
jo
pop
call
inc
sub
mov
sbb
pop
pop
cltd
sti
adc
orb
xchg
fisubrs
enter
sarb
cmp
sub
add
sbb
fcompl
and
mov
push
dec
test
aad
pop
les
lea
mov
mov
sahf
out
dec
les
cwtl
sbb
sub
stos
dec
dec
popa
stc
das
cmpsl
and
in
insb
into
rorl
loop
hlt
repz
iret
xchg
jle
das
xorl
mov
sub
jb
or
ret
ret
enter
out
mov
sahf
pop
mov
or
dec
cld
adc
test
mov
cmpsl
arpl
leave
inc
adc
mov
jno
test
ret
flds
adc
in
push
mov
xchg
mov
pop
int3
jne
shlb
orl
mov
test
xchg
ret
sbb
shl
xlat
fbstp
scas
xor
stos
mov
test
mov
xor
and
rcll
movsl
mov
mov
mov
adc
in
lock
jns
adc
mov
in
scas
std
dec
sahf
cld
aad
sbb
mov
xlat
movsb
dec
inc
jns
arpl
movsb
lea
push
sbb
mov
mov
ja
mov
popf
xor
pop
sbb
int
dec
sbb
inc
std
sub
pop
push
jb
fcomps
loope
lds
sbb
mov
sbb
mov
hlt
jo
mov
in
aad
or
mov
jns
mov
idivl
lret
push
mov
cmp
in
pop
adc
or
fsubs
or
cltd
push
mov
mov
filds
ljmp
push
stos
cltd
popa
cwtl
push
or
cmp
inc
sti
jecxz
adc
std
scas
xor
cmp
inc
lods
add
testb
lret
or
xor
mov
adc
jno
mov
pop
test
adc
cli
inc
pop
push
stc
add
shlb
sub
inc
xor
shlb
test
inc
jb
imull
roll
xchg
repnz
xchg
call
cmp
sbb
cmp
imul
cmpsl
push
dec
test
cwtl
pushl
mov
xlat
test
add
lret
xchg
pusha
data16
add
pop
dec
dec
jp
or
test
popf
pop
mov
mov
ret
xchg
sbb
and
hlt
notb
xchg
iret
popa
inc
lret
dec
sub
adc
sbb
sub
cli
inc
loop
cs
pop
sbbb
dec
out
mov
sysenter
idivl
fstps
adc
xchg
out
out
inc
cld
ret
loope
push
loope
and
adc
stos
xchg
cmp
inc
and
fsubrs
pop
loop
ret
push
cmc
jmp
test
adc
lods
push
xchg
leave
dec
test
inc
lahf
inc
sub
aad
dec
into
iret
push
xchg
dec
pop
push
lock
cmpsb
and
test
lret
jge
inc
pop
inc
adc
xor
pop
inc
sbb
cmpsl
fbld
shll
repnz
fnstcw
dec
adc
mov
xchg
pop
xchg
push
fsubl
mov
jb
mov
and
mov
jle
ss
sub
dec
int3
lods
cltd
test
dec
and
movsl
mov
sahf
lahf
mov
mov
xor
outsl
fwait
pop
push
cmp
xchg
dec
hlt
adc
lock
adc
pop
mov
js
pop
mov
cwtl
jmp
adc
and
stos
xor
jbe
rclb
shrb
pop
and
pop
scas
aam
jno
push
cmp
in
adc
aam
fwait
out
sti
aad
std
outsb
jns
xchg
ds
in
push
roll
popa
dec
xchg
push
movsl
pop
inc
jle
scas
sti
sbb
fucomip
jb,pt
cmp
push
lods
pop
fistps
mov
sbb
mov
pop
jns
xor
and
and
dec
push
gs
pop
cmp
pop
cli
sbb
xchg
movsb
imul
aam
xchg
sub
push
arpl
mov
cmp
pop
pop
or
cmp
lret
daa
dec
call
jmp
inc
mov
cmc
ds
pop
das
or
in
xchg
mov
mov
jnp
xchg
loop
push
mov
lock
mov
xchg
stos
test
dec
imul
dec
xor
cs
jns
mov
ficoml
inc
call
into
xorb
idivl
outsb
stc
cmpsl
adc
sysenter
clc
loopne
push
add
cmp
fwait
mov
or
nopl
cmp
bound
add
and
testl
and
jne
daa
sbb
push
lcall
cmp
ds
xor
pop
les
out
pop
cmp
xor
mov
mov
jnp
add
inc
xlat
js
call
imul
das
sbb
push
fnstcw
inc
push
inc
ret
js
push
jle
or
repnz
mov
enter
out
xor
outsb
jae
das
in
adc
sarb
xchg
insl
mov
dec
ljmp
adc
mov
mov
cvtdq2ps
dec
icebp
jb
imul
dec
pop
out
jl
lea
rcll
add
lea
in
ret
stos
xchg
inc
hlt
cmc
ret
mov
data16
das
sbb
repz
cmc
insb
int3
mov
mov
push
int3
jae
sbb
popa
pop
ret
insl
jle
mov
jns
test
flds
loopne
test
test
or
rorl
jle
add
mov
in
ret
aad
psubusw
nop
xchg
pop
clc
or
pop
pop
lcall
int
pop
out
decb
xchg
add
cltd
fs
sub
ljmp
popa
enter
sbb
add
add
push
fmuls
cmc
lea
test
cwtl
jnp
movsl
pop
ret
mov
mov
mov
lock
add
pop
adc
pop
jbe
xor
imul
rcrl
jnp
scas
and
test
in
pop
call
adc
xor
ret
in
mov
hlt
pusha
stc
popa
jl
scas
xchg
and
out
sub
dec
les
xchg
sub
add
dec
ret
cmp
jae
adc
fildll
or
jge
test
mov
adc
cmp
add
cltd
in
mov
imul
imul
in
cmp
mov
or
dec
inc
mov
push
testl
int
popf
add
adc
mov
popf
inc
lock
jne
mov
push
loopne
fidivl
ss
gs
add
outsb
ljmp
mov
negb
ja
outsl
mov
jne
int
fldl
pop
shll
mov
rcll
aas
push
rcll
ss
add
stc
lret
pop
fsubs
jl
and
cmpsl
adc
adc
xchg
sub
sub
lret
cmpsl
aas
push
mov
cmp
mov
in
xchg
stos
outsl
mov
push
and
lret
mov
dec
dec
jno
push
xlat
jle
jg
in
rorl
movsl
lret
push
in
sub
xchg
test
js
dec
sti
ja
add
enter
movsl
out
mov
jmp
lret
mov
stos
xchg
lahf
xor
inc
adc
cmpsb
cmp
fcmovnu
scas
aas
xchg
add
lods
mov
mov
push
dec
pusha
ret
dec
dec
sub
xor
push
and
fadds
or
repnz
pop
mov
sarb
adc
cmp
out
mov
aas
push
das
arpl
jae
add
outsl
and
dec
ret
mov
repz
fbstp
das
arpl
jae
add
outsl
and
dec
ret
mov
repz
adc
xchg
out
mov
aas
push
das
xchg
pop
jae
add
outsl
and
dec
xlat
mov
rorl
mov
aas
lods
test
pop
jae
je
fwait
nop
fsubl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
ljmp
xchg
enter
nop
push
jnp
dec
push
pop
push
sub
or
inc
ljmp
xchg
lcall
pop
pop
push
ljmp
inc
ljmp
xchg
lcall
jae
push
jg
je
mov
sahf
lret
jecxz
dec
xor
adc
mov
ret
dec
fwait
dec
outsb
jg
pop
test
jno
xchg
cld
and
imul
xchg
es
fnstenv
cmp
mov
inc
scas
inc
and
les
dec
adc
pop
outsl
fistpl
mov
cmp
mov
sbb
imull
es
fnstenv
jp
mov
das
inc
adc
imul
movb
daa
push
jns
lds
sbb
or
push
mov
dec
insl
pop
pop
lcall
arpl
jp
mov
dec
push
lcall
xchg
fiaddl
mov
lcall
push
pop
push
sub
data16
add
xlat
mov
stos
mov
xchg
out
mov
mov
inc
pop
aas
dec
inc
and
add
and
pop
and
fidivs
mov
rcpps
push
dec
jno
push
sub
push
lock
idiv
cmc
movsl
repz
out
mov
push
jp
dec
push
pop
push
sub
data16
inc
ljmp
xchg
lcall
push
pop
push
sub
data16
inc
ljmp
inc
push
add
and
fs
scas
adc
adc
rclb
inc
jnp
sti
into
cs
dec
xor
jne
sbb
f2xm1
lahf
mov
shrb
push
imul
in
flds
dec
mov
xor
ror
int
mov
add
jbe
aam
ja
or
mov
lcall
filds
jecxz
iret
push
movsb
aaa
add
cltd
sti
dec
icebp
pop
in
cli
subb
imul
imul
mov
das
cli
cld
test
subl
push
jno
gs
jae
or
imul
push
inc
xor
test
dec
inc
jmp
mov
stos
jg
clc
and
inc
mov
xchg
insb
shlb
stc
sub
mov
push
lock
test
xlat
adc
push
add
and
and
xchg
push
pusha
lock
mov
inc
jns
out
pop
add
ljmp
cmp
cmp
or
lods
mov
fwait
movsl
add
adc
cmpsl
jle
dec
sahf
add
popf
pop
dec
stos
shrl
loope
xchg
push
pusha
loope
xor
leave
addl
sbb
sbb
pop
pop
or
lock
xchg
or
mov
sbb
repnz
je
cs
mul
popf
mov
out
jnp
inc
push
sbb
into
jge
xchg
lds
rol
xchg
test
pop
lahf
push
repnz
cmp
pop
idivb
xor
jo
xor
lahf
loopne
cmpsl
jmp
test
mov
inc
lods
popw
sbb
out
das
mov
mov
xchg
push
inc
popl
xchg
lret
xchg
hlt
jl
leave
mov
sarl
mov
push
push
enter
dec
jne
mov
jmp
or
cli
mov
test
pop
mov
leave
outsb
xor
aas
lods
stos
dec
sub
inc
cwtl
sub
incb
stos
mov
cli
or
neg
cltd
mov
loop
mov
or
add
movsb
add
lahf
dec
xor
ljmp
sbbl
xchg
mov
lods
ds
loope
jge
inc
push
jl
jae
or
addr16
sbb
jnp
fadds
xor
jb
sub
idivb
xchg
lods
repz
test
outsl
fldcw
sti
cld
jl
push
cmc
mov
cltd
mov
mov
shr
cmp
cltd
int
pop
xchg
cwtl
mov
sub
sub
inc
ljmp
fidivs
aaa
mov
and
mov
fldl
jbe
lahf
inc
jge
push
jle
iret
jo
rclb
jmp
rcll
mov
cmp
jns
sub
cmp
aad
pop
outsb
in
mov
seto
inc
jae
aas
pop
add
lret
in
lods
sub
pop
add
shlb
ds
mov
xchg
pop
cmpsb
sub
mov
andl
insl
repz
inc
iret
cmpsl
jb
cmp
xchg
push
sbb
xchg
sbb
in
push
or
loope
mov
adc
or
inc
xor
xchg
sub
leave
xor
xor
int
mov
out
es
xor
ret
sub
leave
in
sub
pusha
cmp
sarl
inc
inc
jo
dec
nop
fadd
lcall
arpl
popa
sbbb
adc
pop
jb
jne
leave
shll
ljmp
or
notb
cmpsb
jp,pt
cmp
sbb
popa
in
dec
pop
mov
psubusb
das
inc
mov
testl
insb
bound
adc
adc
sbb
pop
fdivl
xchg
stos
mov
and
fnstenv
push
or
dec
mov
cltd
movsb
xchg
cld
aam
movsb
inc
mov
xchg
jmp
addb
daa
adc
lret
rolb
ret
sbb
jb
xor
and
xor
addb
fstpt
notb
jl
icebp
pop
shlb
in
mov
and
cmpsl
mov
add
fisubs
dec
jo
mov
clc
jb
nop
mov
push
cmc
test
jecxz
scas
fcmovnu
sub
sarb
fmuls
pop
jno
andl
push
lcall
loopw
gs
push
rorl
or
pop
push
dec
add
push
int3
xor
cld
pop
inc
sub
jge
mov
dec
out
mov
mov
fs
mov
fbld
lret
mov
pop
mov
xchg
pop
int3
mov
add
out
jp
cmp
cmp
dec
aam
shrb
scas
mov
pushf
sub
popf
lods
in
je
xchg
jbe
dec
lcall
mov
add
cmpsl
push
lds
mov
xchg
dec
dec
adc
dec
mov
iret
xor
scas
dec
test
sub
pop
sbb
adc
jns
rcr
out
sarb
jae
add
push
xchg
in
ljmp
data16
cmp
iret
push
dec
filds
cmpsl
shrl
pop
mov
jb
incl
dec
mov
mov
push
sub
gs
mov
xor
ror
dec
cltd
fldt
movsl
mov
adc
sarl
dec
je
lods
pop
aad
cmp
movsb
insl
push
and
cmpsl
sbbl
add
je
sti
sbb
lahf
sub
mov
divb
daa
notb
add
ret
sarb
insl
sahf
insl
or
inc
das
push
pop
push
daa
rorl
jl
rolb
js
pushf
into
sub
xor
stos
mov
mov
jb
mov
cmp
push
iret
mov
ret
ljmp
mov
xchg
dec
xor
pushw
push
add
sbb
push
fnstsw
fidivrl
and
push
ss
sbb
mov
aad
mov
dec
shll
movsl
xchg
cmp
and
or
xchg
int
inc
xor
in
jge
xchg
pop
jb
hlt
insb
sbb
cmp
jae
lds
enter
inc
push
daa
out
dec
jp
inc
xor
test
test
add
cmp
jmp
jp
lcall
push
mov
lahf
add
add
adc
call
scas
sbb
add
mov
shlb
lds
imul
lds
in
xor
xor
pop
adc
and
aam
xchg
fisubrl
xor
push
xchg
cld
out
stos
xchg
idivb
pop
test
jnp
add
and
add
addr16
std
cmp
sti
mov
es
add
xor
stc
pop
pop
pop
jg
or
or
mov
aas
inc
stc
pushl
jnp
ret
xchg
fs
test
orl
sbb
ja
pop
test
hlt
aad
pop
push
mov
xadd
mov
sbb
dec
test
sub
add
jb
jae
xor
cmp
adc
add
pop
rclb
sub
xor
test
and
mov
mov
rcrl
push
add
insl
out
addr16
rclb
inc
fwait
xor
cmp
in
dec
mov
stc
lcall
add
cmp
mov
mov
mov
sub
fs
xlat
adc
pop
jb
adc
fs
xchg
daa
xchg
repnz
scas
sub
lret
mov
iret
es
pop
inc
fisubs
jb
out
xchg
std
xchg
jb
jg
and
xchg
mov
movsl
pusha
lahf
mov
test
add
lret
stos
loopne
xchg
cld
aam
adc
mov
pop
jo
aad
or
inc
mov
cmp
pusha
sub
dec
das
jnp
ss
mov
rorb
imull
imul
insl
jl
jge
scas
and
iret
or
fwait
fwait
not
xchg
repz
mov
shlb
fwait
and
vpcmov
mov
mov
pop
xor
in
adc
fwait
xchg
mov
fs
and
es
adc
aad
adc
test
adc
loopne
mov
mov
bound
pop
xchg
pminub
cmp
sbb
xchg
push
loope
mov
mov
cs
xchg
lds
lret
cltd
push
xchg
ds
xor
shr
cmpsb
pop
sub
out
stos
mov
xlat
jnp
and
xor
add
jl
lods
syscall
lock
lock
pushf
cmp
je
sub
shr
push
je
xchg
loop
cmpsl
aad
pop
in
xor
add
cmp
sarl
addl
popa
xchg
xchg
jns,pn
in
jbe
cmp
aad
push
outsb
addr16
lcall
pop
mov
data16
es
rorb
or
daa
ss
pop
int
cli
dec
sub
ds
pop
testl
cs
and
imul
roll
outsb
or
lds
mov
fildll
add
int3
aam
sbb
mov
adc
dec
jecxz
ss
jbe
adc
lcall
mov
call
cmp
xchg
dec
sub
cmpsb
nop
ja
arpl
sub
pop
pushf
xchg
hlt
dec
lret
xchg
pop
dec
sbbl
sub
sub
andb
add
sub
mov
aam
jg
push
iret
and
mov
cli
ret
adc
testl
dec
ret
mov
sbbl
jecxz
outsl
lods
mov
mov
mov
sbb
lea
mov
aam
dec
dec
pop
mov
mov
xor
cli
jb
xchg
dec
out
sahf
movsb
add
dec
mov
cmpsl
mov
inc
std
xchg
jae
and
les
int3
int3
mov
adc
call
xchg
cmp
rcl
ds
imull
xchg
jle
neg
je
mov
fstl
cs
or
or
mov
xor
xchg
xchg
xchg
lds
and
xchg
jle
orb
testl
push
xchg
cld
jmp
xchg
mov
dec
loopne
out
sahf
imul
mov
mov
push
fisubrl
xchg
lock
push
sbb
mov
dec
push
test
popf
cltd
add
mov
icebp
push
mov
jae
or
cmp
and
and
cmp
push
int3
adc
dec
sub
je
addr16
mov
in
xchg
or
popf
push
sarl
pusha
jl
mov
and
pop
or
push
lock
repz
les
fwait
pop
push
in
mov
sbb
pop
jb
dec
loope
movsl
push
fstps
xchg
gs
jbe
cmpsb
orl
mov
adc
xchg
cwtl
int
cmpsb
push
xor
cmp
sbb
gs
sarb
outsl
andb
sub
push
dec
inc
ret
push
loopne
push
iret
pop
aaa
mov
arpl
inc
cwtl
subl
sbb
popa
loope
fdivrs
sub
mov
and
ds
dec
lcall
cs
movsl
es
cmp
lods
mov
lret
inc
je
fimull
push
mov
stos
mov
or
and
cmpsl
std
mov
jno
test
add
fcmovne
or
rcl
aas
push
ret
lods
icebp
adc
mov
mov
or
imul
pop
fstl
int
mov
xchg
lret
sbb
sbb
pusha
jb
adc
sbb
shrl
dec
inc
xchg
pop
packuswb
mov
sub
fldl
add
lods
rcrb
movsl
jge
shlb
sub
imul
dec
adc
cltd
sbb
stos
fst
mov
repnz
popf
stc
notl
dec
or
jg
testb
jo
notb
jecxz
lahf
xchg
inc
sub
insl
xlat
pop
mov
jg
mov
repnz
xor
or
jb
insl
push
sti
dec
out
movsb
jmp
lea
push
jecxz
xchg
sub
adc
sbb
addl
sarl
add
xchg
inc
mov
lcall
lcall
fdivrs
pop
lea
pop
dec
into
sbb
push
stc
movsl
outsl
bound
popf
adc
or
mov
push
mov
movsb
lcall
sbb
dec
rcll
mov
sbb
cmp
out
cwtl
icebp
les
in
cltd
xor
pop
push
pop
and
push
insb
push
push
xorb
repnz
inc
fmull
sub
sbbl
mov
add
lea
fldl
inc
pop
sub
sub
cmp
repz
mulb
sti
out
icebp
dec
pop
dec
out
adc
lcall
iret
outsl
cmp
jo
jae
daa
push
jb
dec
js
xchg
inc
cli
stos
insl
call
jns
cmp
in
std
in
push
push
mov
mov
ja
mov
lea
mov
int
xchg
adc
sbb
push
test
jge
loope
mov
sahf
xor
sbb
sbb
mov
outsb
mov
add
lock
mov
adc
lods
in
sbb
inc
xchg
mov
jecxz
dec
das
dec
xchg
xchg
xor
add
add
mov
push
js
jmp
in
pop
loop
dec
or
movsl
xchg
mov
jl
dec
adc
xchg
lcall
in
arpl
insb
xor
cltd
adc
je
mov
mov
pop
das
repnz
fcoms
jno
call
sbb
cmp
mov
and
fmul
lahf
aad
mov
enter
aam
outsl
sbb
jl
aas
jb
js
icebp
mov
loope
push
adc
outsb
sub
mov
outsl
out
sub
pusha
jg
movsb
inc
daa
xchg
cmp
push
xchg
jo
arpl
mov
in
cmc
les
scas
cmp
loope
pop
mov
movsl
int3
cld
addl
popa
pop
popa
jge
xchg
jecxz
or
stc
mov
xorb
loope
inc
push
push
pop
mov
dec
xor
inc
add
xor
je
cmpsl
arpl
pusha
cmpsl
mov
adc
out
fists
mov
imul
jne
pop
xor
inc
fsubs
sbbl
les
mov
add
call
mov
mov
out
jns
stos
test
outsl
cmc
sti
dec
mov
scas
sbb
stos
fwait
adc
jecxz
push
repnz
dec
test
inc
out
push
cltd
out
lret
mov
and
and
pop
fdivrs
sub
jle
test
sarb
call
or
mov
pop
push
push
push
lret
and
outsl
leave
bound
pop
mov
cs
jns
call
pop
inc
adc
sahf
rolb
dec
mov
icebp
or
ret
imul
je
cmp
loopne
sbb
xor
push
addr16
xchg
xchg
test
ficomps
arpl
clc
push
and
stos
mov
fisttps
mov
jl
jae
mov
ljmp
nop
mov
or
cld
adc
add
cmp
xchg
mov
rorb
cli
jno
mov
jo
pop
sub
sub
arpl
out
push
ds
scas
dec
in
or
sub
push
jo
add
xchg
pop
in
jmp
adc
loope
aaa
push
xlat
push
add
mov
push
mov
dec
iret
pop
sub
jle
adc
js
xchg
lods
jecxz
pop
xorb
neg
jle
add
orl
mov
and
aaa
fidivrl
mov
or
enter
lcall
and
adc
fcomps
or
stc
shl
repnz
popa
mov
es
and
ficoml
lcall
fwait
cmp
pop
insl
int
daa
push
xlat
dec
stc
loopne
mov
or
out
push
aam
dec
inc
jmp
and
mov
mov
mov
xor
rcrb
push
ret
push
insb
jecxz
bound
pop
cmp
mov
xor
jo
popf
andb
neg
cmc
pop
xor
std
clc
cs
xchg
push
cmp
out
sub
shlb
iret
and
jb
imul
mov
nopl
fcoml
xchg
and
nop
loop
inc
test
insl
out
pushf
iret
cwtl
push
or
shl
popa
push
fdiv
shll
pop
add
adc
test
xchg
xchg
push
fimuls
call
pusha
jmp
pusha
sub
xor
pop
shl
shlb
dec
stos
rorl
sub
adc
subl
cld
arpl
popa
push
mov
xor
inc
pop
mov
fs
pop
xlat
jnp
xor
pop
mov
adc
loopne
sahf
hlt
cmpsb
jecxz
sub
or
jg
sti
pop
and
pop
clc
outsl
movsl
pop
add
jbe
mull
dec
inc
xchg
movl
pop
fisubrl
lahf
mov
pop
push
cwtl
adc
int
nop
mov
pop
insb
push
out
popf
mov
mov
mov
rcr
clc
lods
int3
and
inc
dec
inc
scas
mov
es
inc
xor
add
cli
in
cli
stc
or
lea
ja
lock
leave
scas
lcall
mov
mov
mov
pop
rorl
cmp
aam
inc
sub
and
cmp
sbb
notb
fimuls
pop
scas
les
xor
cmp
dec
movsl
pop
dec
adc
jns
cld
insb
sbb
or
and
sbb
lcall
ds
dec
and
out
cmpsb
insl
call
repnz
xlat
loop
mov
sahf
push
or
jnp
out
loopne,pt
sbb
sbb
ss
sub
dec
push
fistps
mov
pop
rcrl
adc
ret
dec
std
data16
shrb
mov
jno
out
data16
imul
test
adc
inc
push
or
pop
shll
enter
aad
add
cli
in
sbb
out
adc
xchg
rolb
cmpsb
mov
mov
sub
std
cld
mov
pop
pop
daa
and
scas
out
in
mov
movsb
je
xor
cwtl
mov
jle
fnstcw
int
into
mov
repnz
outsl
sbb
sahf
rol
adc
enter
mov
out
mov
aas
inc
in
inc
test
push
adc
popl
inc
cmpps
bound
pop
iret
dec
leave
mov
ss
ffree
std
test
dec
mov
push
lahf
cmp
sti
add
enter
xlat
in
mov
or
xchg
mov
outsl
enter
mov
subb
rolb
sbb
mov
incb
fnstcw
fstps
fucomi
jnp
xor
xlat
outsb
std
xor
mov
insl
mov
push
xor
xor
out
sub
pop
cli
sub
leave
or
aas
push
lcall
cmp
push
clc
cmpsb
xchg
add
fisttpl
xlat
shr
adc
push
cmpsb
mov
mov
mov
insb
push
push
mov
inc
imul
bound
fwait
dec
cmp
ljmp
in
popa
mov
cmp
test
rcrb
pop
pushf
jns
and
or
pop
add
mov
jns
loope
inc
mov
into
xchg
outsl
adc
addr16
lods
int
mov
jno
jno
jbe
mov
jp
mov
outsb
scas
push
sub
pop
cld
sbb
aad
cltd
xor
mov
xchg
ja
mov
aas
and
lea
cmc
sub
push
lods
aam
xchg
push
dec
lret
sub
add
add
rolb
pop
xor
outsl
lds
adc
ret
cli
sti
loop
mov
ret
mov
lea
repnz
lods
loope
jle
lods
jnp
aad
jp
add
subl
push
dec
adc
xchg
mov
mov
test
xor
stos
insb
or
inc
out
or
pop
xor
mov
sti
outsl
and
std
dec
xor
mov
scas
aad
mov
fwait
out
out
ja
addr16
daa
loopne
sti
mov
and
cwtl
imul
pop
mov
addl
cmpsl
mov
push
xchg
outsb
out
punpckldq
dec
jae
mov
sbb
push
cmp
or
mov
iret
or
xor
mov
push
push
push
xor
adc
aad
cmp
test
jns
cltd
sub
or
enter
mov
aam
leave
push
loope
inc
pushf
fistps
jo
int
jne
cltd
pop
pop
dec
fwait
incl
or
pop
adc
add
mov
or
or
adc
xchg
sub
imul
cmc
push
and
aaa
add
enter
mov
iret
push
mov
and
outsb
scas
scas
cmp
cmpsb
push
js
iret
adc
adc
movsl
popf
stc
sub
jle
or
sar
popw
les
xchg
in
hlt
cld
lret
scas
mov
inc
mov
and
icebp
imul
pop
cmpsb
lret
xchg
fiaddl
mov
lcall
push
pop
push
sub
data16
inc
ljmp
xchg
lcall
push
pop
push
sub
data16
inc
ljmp
xchg
idivb
push
jp
dec
push
pop
push
sub
data16
inc
ljmp
xchg
lcall
push
pop
jno
decb
jp
push
jo
pusha
mov
inc
stos
test
or
or
cmp
sub
jp
push
lcall
xor
and
adc
add
loopne
loopne
sarb
into
sub
jp
push
lcall
sub
cmp
or
add
jmp
dec
mov
cs
pop
xlat
push
lcall
arpl
or
stc
or
sbb
cmp
xchg
dec
icebp
mov
icebp
xchg
lahf
lret
cld
push
sbb
and
jne
leave
push
cmp
sub
lcall
pushf
pop
mov
lea
cmpsl
ficompl
hlt
call
pop
pop
jns
test
mov
adc
mov
in
aas
aad
or
dec
and
in
jbe
insb
mov
xor
lock
es
xor
dec
xchg
mov
cmp
mov
and
jecxz
or
in
sbb
movsl
repz
mov
mov
xor
adc
sbb
jmp
cmp
sub
jp
sub
testl
mov
add
mov
aaa
lds
loop
in
nop
add
aas
mov
and
adc
test
insb
addl
pmulhuw
into
sub
js
and
adc
add
lock
or
cmp
sub
jp
push
lcall
xor
and
adc
add
lock
or
cmp
sub
jp
push
lcall
pop
pop
inc
fcoml
lods
lds
popa
hlt
sbb
mov
insb
enter
je
test
push
ucomiss
sbb
dec
mov
adc
adc
add
and
xor
adc
lods
in
inc
cmp
add
je
jnp
or
popa
cmp
or
xchg
sarb
mov
dec
sarb
out
js
mov
outsl
pop
cmpsl
mov
jne
lret
scas
mov
or
pop
packuswb
sbb
jne
rclb
repz
shl
cwtl
xor
ja
push
pop
dec
les
ret
xor
sahf
push
or
jb
in
jo
cwtl
mov
pop
popf
xchg
or
notb
ds
movsl
xchg
sbb
xchg
cmp
out
lods
idivb
cmp
loope
mov
inc
and
clc
mov
xor
xchg
pop
loop
push
fstp
dec
cmpb
mov
cmp
add
lods
std
jle
adc
mov
sub
orl
inc
ss
cld
xchg
xchg
and
pop
sub
mov
testb
cmp
or
fmul
inc
cmp
aad
mov
adc
mov
adc
add
rorb
hlt
scas
sub
dec
sbb
xchg
imul
xor
sub
dec
bound
pop
xor
fwait
mov
jb
sub
dec
cmp
jb
loope
lret
inc
mov
bound
je
inc
push
pop
std
sbb
shrb
sub
pop
pop
out
es
rcr
movsl
xor
fstl
adc
js
adc
pop
jg
or
mov
push
jb
lret
movsl
adcl
cmpsb
fistl
and
jae
push
inc
mov
pop
ret
cmp
icebp
pop
inc
aad
popa
mov
clc
clc
lea
scas
mov
jns
sahf
mov
sub
push
cli
xchg
pop
mov
xor
dec
xchg
sti
xchg
mov
and
add
mov
cld
inc
xor
in
and
push
cs
and
pop
shrl
pop
ja
lds
sti
cmp
push
xor
out
cmp
jg
shlb
sbb
push
rclb
push
xor
stos
dec
or
lods
and
fimull
sub
lods
enter
dec
in
or
pop
sbb
sub
flds
fcoml
movsl
testb
repz
jnp
mov
mov
cmp
and
sub
adc
ljmp
lods
inc
add
xchg
ror
inc
dec
lock
imul
lret
leave
sahf
jb
xchg
arpl
adc
cmp
push
jecxz
xor
in
jmp
jmp
sbb
les
imul
push
pop
add
out
shlb
repz
xor
popa
cmpl
xchg
loop
push
inc
or
cwtl
cmp
fadd
lret
dec
call
add
mov
shll
lea
icebp
shrl
lret
push
or
jne
les
shlb
pop
mov
sub
je
sub
cmp
sbb
arpl
cmp
sub
cs
jge
adc
sbb
jmp
jb,pt
fsubp
mov
inc
ret
cmp
es
incl
pop
cmp
call
bnd
and
out
aas
jmp
bnd
lods
dec
pushf
sbb
sub
je
mov
inc
dec
sbb
lds
into
out
xor
lahf
fs
push
add
dec
ds
es
add
sub
dec
sub
arpl
mov
jmp
mov
popf
and
fucomip
lcall
sbb
jg
outsl
xchg
pushl
jae
cld
inc
mov
mov
jnp
stc
lahf
cld
add
and
jmp
jle
cmpsl
or
xchg
mov
sub
testl
shll
test
data16
imul
mov
mov
lods
mov
in
pop
out
xor
les
cld
jp
nop
mov
cli
mov
add
inc
sahf
adc
or
mov
int
out
mull
mov
jo
xchg
addr16
fadd
loop
lds
test
ljmp
test
fisttpll
or
pop
shr
sub
arpl
pushf
jmp
sub
test
movsl
xchg
je
push
push
sbb
rolb
movsb
and
aam
xchg
pop
ja
adc
and
jge
mov
or
dec
and
xchg
pop
pushf
lods
inc
popf
movsb
sub
push
jno
jb
out
lahf
icebp
mov
pop
mov
sub
inc
dec
xor
jle
cmp
leave
lods
rcrb
pusha
cmp
adc
push
adc
pop
lock
adcb
lds
imul
sbb
aad
lods
jmp
pop
mov
ror
inc
xchg
mov
mov
fwait
cmp
dec
mov
pop
sbb
mov
outsb
lods
fwait
loop
call
sti
sub
mov
out
cltd
icebp
adc
and
stos
iret
shll
pop
xchg
insb
fstpt
xor
movsl
cmp
cmc
out
aaa
repnz
cltd
adc
or
mov
sbb
mov
mov
mov
je
leave
mov
mov
push
cmc
jp
ljmp
cmp
andl
jb
cmp
rcrl
inc
add
sti
ljmp
dec
in
out
cmp
out
dec
xchg
jle
js
push
pop
decl
sub
stc
outsb
push
cmpsb
outsl
lea
ljmp
mov
push
jge
sub
pushf
mov
mov
adc
mov
lretw
loopne
mov
inc
inc
sbb
push
mov
loop
imul
lea
inc
pop
mov
fstp
mov
xchg
icebp
test
mov
xor
movsb
lods
jno
mov
sub
push
test
sbb
daa
scas
ds
dec
sub
test
jge
jbe
aaa
pushf
jne
sbb
icebp
repz
popf
cli
ret
sub
lods
imul
xor
fmull
popf
jae
lret
imul
mov
dec
add
aam
outsl
lock
mov
mov
rcr
or
dec
jne
arpl
adc
xor
hlt
shr
xor
mov
loop
and
fmull
shr
out
push
ret
rorb
dec
jecxz
jecxz
adc
jp
mov
fmull
lcall
xor
xor
testb
pop
sub
add
inc
incl
sub
fdivrs
cmp
cmc
fstpl
pop
or
mov
jl
push
repz
std
aad
adc
inc
mov
push
ficompl
sbb
fistpl
mov
loope
push
mov
loop
lahf
sbb
jle
or
inc
cmp
pop
pop
test
sbb
popa
fstl
or
adc
inc
jb
adc
push
adc
mov
cmp
aaa
mov
mov
scas
bound
js
xor
mov
mov
mov
call
mov
pop
mov
std
cmp
sub
aas
aad
fistl
mov
aas
lcall
inc
iret
ljmp
xor
cmp
mov
leave
or
inc
push
inc
fprem
mov
not
push
sub
lock
gs
sti
bound
mov
es
xchg
adc
or
mov
je
test
movsb
add
pop
fldenv
gs
in
pop
or
hlt
cmpsl
and
nop
mov
inc
call
loopne
fldcw
mov
and
fstpl
push
testb
ret
mov
and
les
dec
add
mov
xchg
or
mov
pop
push
cmp
je
jmp
adc
outsl
loop
in
and
jae
jmp
iret
inc
lret
sbb
mov
push
into
gs
push
das
imulb
dec
push
pop
pop
jb
mov
adc
or
scas
fisttpll
pop
jmp
add
xor
test
arpl
mov
push
jp
cmp
enter
js
or
pop
ret
push
imul
and
jne
mov
insl
push
cmp
data16
pop
pop
jno
xlat
data16
or
xor
notl
notb
mov
aam
ljmp
scas
xchg
insl
je
sahf
test
aas
mov
andl
adc
jmp
inc
inc
call
xchg
lock
jl
add
add
sub
or
pop
gs
hlt
inc
sbb
in
mov
xchg
push
pop
mov
shll
push
lret
mov
lds
ja
test
loopne
cmp
rcl
scas
dec
or
adc
jne
mov
je
fcos
sub
jmp
inc
mov
sbb
xchg
push
inc
xchg
inc
inc
mov
mov
mov
popf
sbb
ret
popa
and
push
lahf
dec
pop
cmp
inc
jns
movsb
movsl
jno
mov
sub
mov
clc
in
pushf
adc
fldt
aam
xor
dec
stos
and
dec
xchg
jmp
xchg
dec
movb
cmpsb
jno
jge
test
push
stc
rcr
cli
mov
jl
adc
data16
lods
push
add
scas
xchg
and
std
aam
lcall
sarl
pop
sub
je
sbb
sub
xorl
lock
lea
lods
inc
js
inc
push
jmp
and
mov
repz
fsubl
add
sbb
movsb
jle
mov
mov
sbb
lret
cs
data16
sbb
or
scas
mov
mov
pop
sti
sbb
in
jge
or
sbb
dec
pop
jg,pt
xor
push
xchg
mov
out
inc
xlat
and
mov
push
lea
mov
lea
adc
or
jle
repnz
insl
pushf
jle
jp
int3
cld
push
adc
data16
out
and
test
xlat
out
repz
push
sbb
dec
cmp
jbe
shrb
aas
mov
mov
mov
push
adc
push
mov
jge
sbb
pop
bound
adc
xchg
xchg
shl
and
dec
sbb
inc
mov
cmp
mov
mov
dec
cmp
xlat
shll
movsl
cwtl
cli
or
push
int
enter
sbb
xor
mov
sbb
mov
jmp
vpmacsdd
pusha
fbld
sub
adc
movsl
and
loop
cltd
mov
insb
push
pop
push
mov
je
pop
mov
mov
xor
popa
xlat
mov
xchg
in
mov
sarl
loope
xchg
jbe
out
mov
imulb
push
fdivrl
mov
out
bnd
sahf
sub
mov
mov
add
xchg
lds
imul
shr
test
add
push
xchg
xor
dec
push
mov
js
inc
push
or
mov
gs
xchg
jmp
xor
jg
mov
add
mov
and
or
ffree
cmp
into
or
ljmp
repz
cmpsb
ret
in
xchg
adc
inc
jge
xchg
inc
jecxz
sub
and
popa
push
lea
sbb
push
bnd
lds
jbe
lock
add
jo
js
cwtl
push
dec
fdivs
ret
sarl
mov
xor
fidivl
adc
inc
push
or
call
les
repnz
lock
notb
ss
bound
insl
cmp
or
daa
mov
dec
loop
push
dec
mov
pop
push
dec
cmp
xor
lock
mov
cmpsl
iret
aad
mov
mov
sub
jge
js
push
pop
scas
lods
dec
fbld
xchg
sti
inc
test
jo
shll
inc
cmc
inc
imul
sub
test
shlb
jmp
mov
hlt
aad
popf
ret
mov
divb
xchg
cmpsl
out
cmp
loope
jle
shrl
adc
dec
sti
xchg
pop
dec
push
bound
mov
mov
lcall
das
or
cmpb
loop
imul
mov
jno
jmp
xchg
mov
jnp
xor
pop
pop
mov
scas
fwait
xchg
sbb
sub
repnz
adc
inc
dec
hlt
iret
jae
movb
pushf
mov
fwait
aaa
test
orb
rcrl
ljmp
xchg
or
fs
cmp
ja
mov
mov
dec
rol
and
xchg
sti
cli
and
test
cmc
jae
mov
mov
sahf
mov
xchg
rolb
test
dec
mov
js
rorl
gs
jnp
ja
std
out
xchg
fsubl
iret
cwtl
in
jbe
inc
inc
add
pop
mov
inc
inc
dec
stos
jmp
stc
and
ret
adc
xchg
loope
push
pop
xor
pop
pop
xchg
mov
adc
xchg
or
mov
jae
jbe
push
sti
sbb
inc
sbb
cmp
hlt
mov
jns
dec
mov
in
ds
mov
or
push
les
jae
inc
cmp
cmp
mov
jg
call
fistpl
push
or
es
pushf
xchg
xor
push
insb
outsl
mov
test
outsl
sbb
sahf
dec
addr16
movsl
addr16
sbb
les
inc
scas
in
clc
push
std
pusha
sbbb
mov
cmp
adc
adc
imul
daa
jno
faddl
and
ret
ds
adc
adc
jp
pusha
sbb
loop
sbb
cmp
pop
mov
xchg
in
xchg
lcall
pop
and
aaa
xchg
lods
sbb
sbb
arpl
test
loope
inc
rclb
mov
cmp
fnstsw
adc
outsl
mov
rcl
sbb
lret
dec
add
or
inc
nop
mov
xchg
pop
mov
xorl
mov
sbb
sbb
orl
idiv
sbb
lds
mov
push
fcomps
lret
adc
xor
out
push
inc
xor
jg
testb
sub
adc
inc
orl
popa
mov
mov
pusha
inc
fldenv
fcompl
sub
lcall
popa
push
mov
lcall
out
dec
jl
js
fldl2t
jnp
and
gs
ljmp
movsb
gs
and
add
inc
or
push
or
xor
mov
mov
hlt
jmp
inc
cli
cmp
or
iret
xor
in
mov
adc
enter
test
mov
adc
movsl
test
cli
and
xchg
outsb
or
pop
in
cmp
pushf
jns
or
mov
add
out
adc
rcll
sbb
mov
inc
and
adc
fistl
pop
loope
fists
int
repz
cmp
and
sbb
loop
cmp
mov
mov
dec
pop
pop
or
add
jmp
cmpb
insl
js
adc
hlt
sbb
call
or
fbld
sub
notl
and
sub
pushf
push
fisubs
jo
jg
stc
jg
loope
adc
xchg
icebp
add
rclb
imul
and
sub
fwait
js
mov
mov
nop
sbb
push
aas
decb
cmpsb
mov
movsb
inc
stos
stos
cld
and
push
cmpsb
arpl
pop
jnp
clc
je
enter
sbb
and
int
push
mov
push
cmpsl
mov
stos
insb
xchg
jge
int3
popf
jno
outsb
push
adc
mov
adc
mov
adc
mov
inc
push
add
cmpb
stos
sahf
lods
divb
sti
mov
xor
add
pop
or
jg
adc
out
int
in
pusha
stc
popf
cmp
stc
pop
and
lahf
fdivr
fcomip
js
and
lret
and
mov
mov
divl
mov
push
loopne
xchg
xlat
inc
adc
pop
or
xchg
addb
jmp
loop
in
cmp
das
mov
aam
ret
add
jge
loopne
or
xor
jo
int3
mov
xor
sti
fisttpl
push
in
add
in
jge
jmp
mov
xlat
dec
inc
dec
sbb
sbb
mov
loop
imul
test
stos
or
adc
aam
sbb
decl
lock
sub
sub
mov
push
rcrl
xchg
mov
xor
add
sti
addb
andl
int
stos
lock
mov
enter
jge
inc
int3
sahf
rcr
pop
rorb
imul
push
loope
jg
jp
or
dec
xor
cmp
fidivrs
dec
outsb
xchg
mov
jecxz
and
push
in
add
scas
shrl
sbb
xchg
fdivrl
stos
sarb
repz
dec
push
sbb
mov
ror
je
inc
cmpsl
xlat
cli
sub
sub
add
mov
pop
add
negb
sbb
sub
jns
xchg
or
push
mov
mov
inc
sbb
sysret
dec
sbb
pusha
lods
push
inc
push
or
dec
stos
jmp
int
lods
cmp
sbb
out
jne
outsb
ret
fsub
dec
clc
pop
inc
xchg
jmp
jae
pop
faddl
pop
mov
je
pop
scas
out
in
add
pop
iret
mov
inc
scas
adc
dec
test
daa
sahf
push
push
inc
mov
dec
cmpsl
mov
mov
dec
pop
cs
push
add
in
js
js
cltd
bound
or
mov
movsb
data16
mov
subb
popf
ret
filds
dec
loopne
xchg
cltd
jb
mov
es
xlat
dec
and
add
scas
push
adc
addb
popf
mov
fidivl
ret
xchg
bound
js
mov
lea
mov
mov
or
stos
lret
xor
add
stc
or
scas
jnp
dec
cmpsb
shll
lret
shll
rorl
sub
je
loope
pop
repnz
pop
fs
das
sub
loop
cld
sbb
cli
scas
mov
sbb
mov
outsb
mov
outsl
leave
xchg
mov
fistpll
lret
mov
mov
js
mov
sarl
add
negb
nop
inc
shlb
call
xor
and
mov
jb
and
adc
sbb
xor
pop
in
push
mov
aam
adc
js
mov
xor
add
insl
xor
ficomps
cmc
xor
jnp
pop
cmp
inc
and
popf
dec
mov
dec
or
push
cmpb
rcll
shll
dec
or
into
lahf
inc
in
sbb
sbb
dec
lods
popf
jge
loopne
repz
js
xor
out
lods
push
mov
xchg
mov
push
fs
cmp
testl
or
cmp
out
gs
std
pop
and
or
pushf
or
xchg
out
dec
mov
subb
mov
add
jns
bound
cmp
jns
inc
dec
add
adc
in
loopne
scas
ror
cmp
lret
addb
xor
dec
mov
ret
and
mov
jmp
xchg
fsubrs
int
addr16
cmp
icebp
das
xor
push
xchg
in
xor
loopne
adc
jae
loop
stos
in
jmp
fstl
loope
ds
adc
fisubs
jb
repnz
scas
call
sub
inc
inc
xchg
xchg
out
stos
push
cmp
sbb
pop
mov
nop
xchg
popa
pusha
sahf
roll
mov
xor
cmp
in
test
cmp
push
pushf
cltd
mov
pop
cmc
das
sub
and
cs
movsb
push
jno
jge
gs
jge
lcall
ss
pop
in
mov
dec
sub
mov
aad
push
sbb
fcmovnbe
std
fdivrs
cmp
daa
mov
lret
mov
jl
sbb
dec
xor
dec
xor
xlat
cmc
inc
dec
pushf
xor
push
ja
inc
jge
or
out
dec
xor
gs
mov
push
in
and
outsl
movsb
inc
adc
xchg
clc
lods
push
imul
mov
and
stos
mov
cltd
add
movsb
nop
stos
lret
mov
jno
lahf
sbb
imul
hlt
push
fdivr
cmpsl
imul
test
mov
xlat
in
loope
add
insl
rcl
push
cmp
dec
jno
shrl
xor
sar
shll
jo
lods
mov
imul
cltd
pop
cmp
mov
cwtl
inc
xchg
mov
sbb
movsl
mov
mov
stc
scas
cmp
bnd
mov
push
mov
inc
stos
xor
and
adc
add
lock
or
cmp
sub
jp
push
lcall
xor
and
adc
add
lock
or
cmp
sub
jp
push
sahf
pusha
mov
inc
stos
xor
and
adc
add
lock
or
cmp
sub
jp
push
lcall
xor
and
jp
adc
jp
rcrb
sub
pop
add
outsl
dec
push
ja
lret
dec
fisubs
mov
jp
push
pop
out
dec
lahf
cmp
or
dec
ljmp
aas
lcall
lcall
dec
lahf
push
mov
mov
push
outsl
enter
xchg
aas
je
xchg
fbld
mov
lahf
insl
cld
inc
cld
outsb
or
cli
test
push
lahf
adc
movsb
push
pop
jns
shl
cwtl
call
cmpsl
push
pop
call
sti
addb
push
ret
fcmovb
enter
cmp
xor
pop
enter
jmp
sti
and
in
jmp
jo
popa
neg
out
out
xlat
push
sahf
sbb
cmp
scas
sbb
push
jb
mov
das
jne
test
push
outsl
adc
inc
repnz
or
lret
mov
out
ret
xchg
movsb
mov
sub
jp
popf
fs
iret
imul
cmc
arpl
mov
inc
lret
nop
lock
test
fidivrl
jbe
jp
add
movsl
test
cmp
aad
sbb
sbb
outsl
rcrb
rsm
aas
inc
das
or
cld
iret
lods
decl
add
sbb
ljmp
pusha
lds
stos
out
scas
cmp
das
mov
stos
and
push
into
pop
ficompl
imul
cmp
jp
inc
cltd
jp
push
lods
pop
test
cmpb
sub
jnp
popa
cmp
test
aas
lcall
lcall
dec
lahf
cmp
or
dec
ljmp
rsm
aas
lcall
lcall
dec
lahf
cmp
or
cs
iret
and
mov
mov
insb
mov
and
pop
mov
push
cmpsl
adc
push
test
sub
popf
mov
mov
mov
fisubrl
sub
sbb
push
data16
loope
pop
insl
test
xchg
pop
jecxz
mov
loope
mov
adc
cmp
or
imul
add
dec
cmp
cltd
dec
stos
std
out
mov
mov
sbb
xchg
test
fstl
xchg
dec
jmp
pop
cmp
rcll
cmp
aad
ja
je
cld
mov
jbe
lds
pusha
call
adc
clc
aaa
negb
daa
inc
mov
and
sbb
xor
mov
loop
xchg
sub
fldl
sbb
mov
leave
inc
push
out
pop
imulb
add
jg
xchg
push
aas
or
xor
scas
push
mov
push
pop
sahf
jbe
cld
iret
sbbb
dec
mov
and
cmpsl
sbb
mov
test
in
mov
loopne
gs
xor
jnp
shr
mov
push
mov
cmp
and
loope
xor
aaa
or
mov
mov
mov
mov
lcall
xor
pop
xor
stos
pop
xor
daa
xor
jecxz
push
jl
jmp
mov
or
xor
test
mov
test
push
andb
xor
inc
test
imulb
push
cmp
lock
mov
add
iret
add
fbld
pop
cmc
fnstsw
lret
cmp
call
mov
fwait
arpl
scas
lds
dec
je
adc
outsb
cmc
rolb
inc
inc
popf
cmp
pop
push
fldt
dec
ja
cmpsl
hlt
fs
add
sbb
cld
cld
sub
popa
xchg
outsl
loopne
or
push
push
sbb
sbb
jl
adc
jae
clc
sti
ficoml
ja
cmpsb
leave
add
stc
push
popa
and
dec
push
vmaxps
mov
pop
test
outsb
inc
aaa
ret
movsb
mov
dec
aas
outsl
push
es
ret
sbb
ret
std
mov
inc
mov
lods
repnz
sub
jecxz
or
mov
mov
aas
test
fsubl
pop
add
jo
and
sbb
mov
pusha
dec
fsubrp
inc
jle
stos
cmp
arpl
outsb
xor
sub
testb
add
adc
data16
sub
dec
ss
mov
in
pop
cmc
test
hlt
iret
inc
xor
jns
sbb
sub
and
fstpt
daa
cld
push
mov
mov
and
nop
xchg
shll
aaa
mov
sahf
sbb
rclb
push
ret
les
pop
pop
mov
push
sbb
pusha
cmp
adc
fldlg2
pop
adc
loop
movsl
aaa
pop
jle
cmpsb
xchg
and
in
xor
adc
cmp
in
xchg
int
mov
js
xchg
dec
and
inc
adc
mov
mov
lods
xor
fidivrs
lret
mov
inc
mov
sbbb
addr16
sbb
lods
and
icebp
lea
data16
mov
dec
push
hlt
in
add
cmp
and
inc
sbb
xlat
in
frstor
incl
sub
int
iret
aaa
scas
xchg
jns
movsb
or
mov
out
cmp
iret
add
stos
popa
ds
mov
rcrl
in
cmpsb
and
rcll
test
ds
jmp
dec
pop
ja
icebp
fmulp
call
rorl
dec
pop
js
repz
xchg
repnz
jno
js
mov
out
shr
scas
callw
and
sahf
ror
push
cmpsl
cmp
clc
add
loope
mov
jnp
ret
hlt
xor
orl
xchg
xor
inc
dec
add
push
push
push
test
mov
in
mov
sub
sub
sub
xor
mov
das
sub
mov
xchg
outsl
dec
and
adc
or
mov
jbe
jmp
ljmp
mov
cmp
int3
lret
movsl
lahf
ret
mov
imull
into
dec
pushf
add
mov
addr16
mov
push
xchg
scas
jecxz
push
xchg
pop
aam
cmp
test
sbb
pop
jo
cli
add
outsb
dec
cld
repnz
adc
pop
inc
cmpsb
sarl
adc
fldcw
in
in
adc
cmp
sbb
sub
and
das
mov
loopne
or
sbb
dec
outsl
cmp
mov
xor
test
xor
mov
aad
loopne
dec
gs
cmpsb
jle
lahf
push
xchg
scas
incb
add
pop
loopne
jo
pop
out
scas
loop
cmp
testl
pushf
insb
jns
imul
bnd
sub
push
jnp
int
pusha
lret
das
subl
jb
push
dec
bound
out
imul
std
push
sbb
pop
gs
les
dec
lcall
dec
scas
push
out
repnz
incl
mov
pop
lods
mov
sahf
adc
pop
jp
sbb
iret
pusha
inc
cli
cmpb
clc
xchg
sbb
cmp
scas
in
jp,pt
mov
lods
fisttpl
rcrb
call
or
adc
push
mov
xchg
xor
or
call
cmp
push
dec
sbb
scas
inc
mov
ss
andl
hlt
nop
adc
sbb
lret
push
loopne
jmp
mov
mov
aam
ljmp
xor
pop
leave
dec
les
gs
jecxz
imul
loope
inc
sbb
dec
xchg
dec
pop
outsl
push
add
insl
cli
in
or
pop
xor
icebp
or
test
test
add
mov
inc
lods
xor
enter
adc
in
mov
es
jnp
popa
enter
imul
out
adcl
iret
rcr
mov
lahf
neg
nop
sbb
pushf
cld
push
pop
cmp
fistps
les
adc
outsb
test
xchg
lock
popa
call
sub
mov
mov
or
mov
pop
and
inc
aam
sub
rorb
les
aad
or
nop
jbe
rorl
repnz
jmp
fisubrl
movsb
popa
and
mov
cmpsb
push
sub
inc
mov
push
or
add
clc
dec
cltd
adc
or
rclb
les
loope
sbb
filds
pop
mov
gs
adc
push
test
push
and
rcll
lock
pop
mov
xor
xlat
pop
fs
pop
dec
jae
hlt
ret
mov
adc
sbb
adc
nop
cwtl
xchg
iret
and
mov
pop
sbb
xchg
dec
into
and
cmp
mov
lahf
jno
push
int3
mov
and
mov
mov
rclb
ljmp
push
out
push
xchg
sub
scas
sub
cmp
and
dec
imul
lds
push
push
sbb
jecxz
faddl
inc
push
mov
out
pusha
testl
outsl
cmc
js
xlat
aam
cmp
loope
mov
loopne
mov
xor
imul
xchg
repnz
in
cltd
xorb
mov
xor
out
mov
mov
scas
xor
sbb
stos
mov
imull
adc
mov
inc
ret
pop
sub
mov
fbld
dec
mov
aaa
call
inc
and
pop
sub
add
jmp
xchg
sbbl
shr
test
jno
jecxz
dec
iret
mov
test
lods
add
fisttpl
push
repnz
out
mov
mov
inc
xor
pop
bound
or
push
add
mov
and
mov
call
loope
xor
or
aam
jae
mov
scas
xchg
lock
aad
mov
test
ljmp
lret
and
adc
xor
nop
push
mov
and
push
jge
and
aad
or
dec
dec
jecxz
push
lea
stos
fdivrs
das
push
inc
pusha
into
mov
push
xchg
dec
fdivrs
bound
nop
mov
mov
in
cmp
cmpsb
test
ret
jp
jns
jo
icebp
mov
int3
shrb
inc
clc
cli
repz
mov
iret
fdivl
sub
mov
mov
sub
jae
loop
int3
and
jno
outsl
dec
dec
loope
mov
pop
jnp
mov
int3
or
ret
or
sbb
insl
mov
popa
mov
sub
pop
addr16
daa
cmp
nop
shll
das
loop
in
cmc
imul
or
dec
adc
mov
adc
out
jns
sti
sbb
gs
pushf
add
mov
pop
lret
dec
add
mov
in
mov
pusha
and
inc
out
push
clc
insb
pushf
sub
push
in
aam
mov
fucomip
pusha
sub
xchg
xchg
mov
sub
xchg
imul
mov
inc
xorl
xchg
xchg
pop
popa
orl
pop
inc
nop
mov
inc
rcr
add
push
xlat
addb
sbb
push
sbb
loop
xchg
outsb
out
or
adc
adc
adc
loope
addr16
or
cmpb
push
jbe
adc
dec
fsts
test
mov
mov
mov
mov
gs
lcall
xor
inc
inc
lds
sub
adc
add
xchg
fwait
enter
shl
mov
aad
adc
inc
pop
push
aas
dec
jne
popa
dec
cmpsb
mov
mov
leave
int3
xchg
je
fdiv
mov
in
push
or
pop
outsb
mov
push
mov
fimull
shr
stos
lods
imul
jb
mov
mov
and
mov
ss
movsl
dec
dec
notb
dec
jo,pn
fisubs
inc
test
push
clc
fstl
mov
xchg
mov
out
cmpsb
mov
hlt
mov
stc
and
xchg
mov
lret
add
push
or
cmpsl
cmpsl
clc
call
jmp
xor
and
inc
cli
or
iret
mov
subl
or
jb
insl
nop
sbb
dec
adc
repnz
jno
gs
popa
add
sarb
mov
sti
fcoml
fisubrs
jg
xor
jle
xor
mov
cmp
xchg
pavgb
sahf
movsl
cmp
aaa
push
andb
inc
mov
mov
jg
add
mov
pop
dec
mov
mov
and
out
les
dec
xchg
stos
push
into
sub
push
jo
orl
stos
out
mov
jecxz
aad
xor
jecxz
outsb
out
push
mov
icebp
sbb
les
cwtl
push
jmp
jmp
ds
lcall
rorb
jno
sub
insb
cmc
add
data16
std
push
dec
mov
sbb
lea
mov
xchg
rcrl
push
icebp
cmc
add
push
mov
scas
call
mov
testl
push
shl
ss
and
testl
lcall
mov
xor
fs
push
test
leave
jne
mov
jbe
adc
ljmp
sbb
sbb
dec
xchg
cmp
mov
movsl
pop
daa
sbbl
ss
mov
add
push
xchg
arpl
out
cmc
xlat
mov
sbbl
ret
jns
pop
mov
ss
add
xchg
lcall
push
or
push
jecxz
pop
xchg
les
orb
mov
rclb
andl
push
jb
jl
mov
xor
dec
pusha
and
mov
or
cmpsl
bound
pop
add
divl
cltd
push
and
fisttps
out
jno
xchg
cmpsb
jbe
int3
jae
adc
mov
mov
lcall
sbb
pop
jle
dec
xchg
sbbl
in
xor
mov
lret
mov
out
push
add
add
inc
pop
out
adc
inc
mov
or
add
addl
inc
sahf
xor
pop
pop
enter
add
lock
shl
scas
dec
and
lds
mov
ret
jae
dec
lock
aaa
shlb
inc
mov
pusha
lods
fnstenv
xchg
fwait
cs
aad
push
les
inc
sub
add
outsl
pushf
daa
or
aad
and
loop
adc
cmp
add
jae
xor
repz
mov
inc
movsb
cmc
scas
sub
repnz
lahf
mov
push
mov
outsb
movsb
mov
push
cmpsl
pushf
mov
stc
lret
pop
test
lcall
mov
mov
out
hlt
imul
add
push
mov
mov
cmp
xor
mov
ret
lret
cltd
data16
stos
dec
xchg
in
in
stos
xchg
dec
jns
mov
jmp
fcmovb
test
dec
xchg
lods
lods
cli
xchg
xor
negb
jmp
pop
int
setns
jae
std
jmp
fdivs
fmulp
fstl
add
jl
mov
push
adc
cmp
or
lret
push
sahf
ds
outsb
jle
pusha
scas
arpl
adc
mov
sti
xorb
leave
sub
add
push
push
stos
cltd
add
pusha
in
jmp
addr16
ds
jnp
xchg
lret
pop
add
cmpsb
iret
outsb
push
cmc
jecxz
rol
lods
scas
xchg
jecxz
jg
push
pop
inc
cltd
xchg
jge
push
inc
mov
sub
in
jne
out
enter
das
xchg
sbb
inc
adc
icebp
cltd
mov
mov
xlat
pop
jne
inc
clc
fisubrl
jg
cmp
and
mov
ficoml
mov
insb
cmp
and
inc
divb
jp
mov
int
leave
cmp
mov
daa
int3
push
xor
jle
insb
outsb
dec
add
xor
movsb
mov
mov
pop
js
shrl
adc
in
out
and
gs
mov
jmp
pop
shlb
inc
jns
inc
pushf
jge
lret
push
shrb
fimuls
lds
lock
stc
clc
orl
inc
or
mov
adc
out
fwait
push
repnz
xchg
cmp
xor
mov
push
call
aam
jo
shll
xchg
clc
or
and
lds
test
mov
sub
mov
and
mov
sub
repz
mov
out
jg,pt
mov
iret
pop
ret
incl
jge
cmpsl
ret
jecxz
jge
cmpsb
push
cmc
push
lret
rcrb
push
sbb
dec
sub
popa
mov
jge
mov
test
gs
xchg
dec
in
inc
cmp
sbb
mov
in
mov
sub
mov
sbb
push
jno
mov
jns
inc
or
out
push
mov
mov
inc
jp
sub
jns
outsb
fdivr
ja
data16
aas
push
mov
cmp
rcrl
mov
sahf
sbbb
cmc
les
push
add
cmp
or
cmc
enter
or
bound
mov
cmp
lock
jmp
stos
adc
hlt
inc
mov
and
lds
imul
pop
hlt
lods
push
and
add
cs
adcl
dec
sub
sbb
add
xchg
jo
cmp
inc
ret
push
and
daa
ret
mov
hlt
push
sbb
pop
out
add
cmpsl
and
add
or
push
data16
sbb
es
cmp
movsb
xchg
and
adc
nop
aaa
out
fidivl
ja
cmp
fs
andps
or
xor
mov
imull
enter
lahf
or
jb
xchg
xchg
xchg
clc
inc
adc
lahf
mov
jge
into
aas
orb
cmp
mov
jle
sub
xchg
mov
pushf
push
xor
pop
cmp
mov
push
inc
cmc
mov
lods
ret
ret
in
add
jp
dec
loopne
imul
mov
pop
insb
jnp
sub
cmpl
andb
pop
loopne
cmc
sub
aaa
or
das
jp
mov
in
push
std
jae
add
xchg
mov
mov
or
lret
pop
addb
jp
notl
push
mov
in
cs
lret
sbb
fimuls
cwtl
mov
adc
stos
push
mov
stos
outsb
lds
mov
mov
xchg
xchg
fisubrl
mov
push
push
jo
adc
fstpt
inc
jnp
lods
and
sub
mov
or
mov
xchg
lahf
movsb
adc
sub
pop
jmp
pop
idivb
inc
cli
addr16
orb
push
inc
enter
sbb
fildll
bound
lret
or
cwtl
add
jne
cmpsb
sub
stc
push
mov
add
fmuls
xor
jl
pop
xchg
or
and
test
add
fsin
sub
sbb
in
pop
je
mov
push
nop
fldl
add
test
or
or
cmc
scas
sub
lcall
xchg
dec
sysenter
add
cmpsb
icebp
lds
dec
fdivrs
fnstcw
in
rcl
cwtl
cmp
das
jge
mov
add
dec
adc
and
fwait
push
in
cmp
dec
aad
pop
xchg
movb
iret
mov
fs
xchg
popa
movsb
ss
cmpsb
je
push
test
insl
mov
addr16
pop
pop
fimuls
or
xor
and
stc
in
loop
hlt
movsl
pop
add
loop
shll
cmp
out
xchg
dec
int
or
pop
icebp
sahf
mov
in
push
push
jbe
pop
inc
incl
mov
mov
insl
loope
aas
push
ds
scas
into
fisubl
mov
ljmp
xor
int3
inc
fs
popa
mov
lods
push
negl
lret
bound
movsb
jge
insl
test
pop
mov
push
fiaddl
jge
into
cmp
es
xchg
aaa
adc
js
jo
sbb
xor
roll
and
push
push
xor
sti
lcall
aad
pop
inc
shll
mov
ret
pusha
xchg
jbe
mov
push
daa
or
out
xor
or
and
sahf
sbb
test
and
jg
lods
fistpl
mov
clc
cs
loop
adc
lcall
cmp
popa
iret
repz
movsl
push
push
or
sub
or
lret
clc
pop
ret
mull
mov
push
test
and
test
cmp
ljmp
mov
and
push
sbb
push
cmp
push
fs
sbb
insl
daa
lahf
pusha
and
pushf
jbe
cmpsb
jbe
mov
and
mov
loop
jnp
add
fmul
lock
xchg
fs
adc
cld
and
aam
out
dec
dec
repnz
into
add
xchg
std
cmp
mov
jmp
push
dec
dec
adc
divb
push
ja
inc
xor
fists
and
or
dec
push
cmp
xor
pop
lds
mov
sbb
test
cmp
iret
sbb
or
into
ja
ret
sub
or
cmp
sbb
xchg
xchg
icebp
out
mov
aad
mov
push
stos
test
and
lock
lret
push
inc
jl
cmp
push
sbbb
mov
jne
pushl
ret
aaa
adc
bound
xchg
int
aas
nop
or
or
xchg
sub
cmp
jecxz
inc
fmull
jno
mov
inc
mul
pop
mov
mov
push
lds
sbb
sarl
dec
mov
xchg
arpl
push
cwtl
jecxz
add
imul
pop
mov
mov
fnstenv
mov
sbb
cmp
or
outsb
ja
arpl
mov
cmpsb
stc
push
adc
outsl
jb
jl
cmp
mov
lret
push
test
cmp
and
loopne
aaa
sub
cltd
data16
dec
sub
movsl
sbb
mov
mov
movsb
cmpsb
xorb
jp
pop
rcrb
orb
icebp
sbb
mov
xor
setp
fs
xor
loope
sbb
lods
jo
xchg
mov
mov
dec
dec
xchg
call
adc
in
ljmp
shlb
loope
push
ret
sub
xchg
fs
cli
repz
sbb
or
mov
leave
pop
popf
pop
sbb
loopne
jmp
iret
push
mov
jae
cld
pop
int
dec
inc
test
dec
jbe
cmp
notl
les
loop
and
bswap
or
pop
into
push
mov
jge
test
rcl
sti
inc
push
inc
out
mov
mov
sub
xor
daa
stos
pop
add
pop
adc
cmp
jl
popa
pop
xor
ss
mov
sbb
sarb
mov
ds
xchg
daa
and
in
xchg
aaa
xor
add
bound
cmp
add
mov
add
xor
loop
movsb
mov
mov
dec
push
sub
ljmp
rsm
aas
lcall
lcall
dec
lahf
cmp
or
dec
ljmp
rsm
aas
lcall
lcall
dec
lahf
cmp
or
dec
mov
pop
mov
das
mov
mov
out
dec
lahf
cmp
or
dec
ljmp
rsm
mov
test
rclb
cmp
inc
in
cmc
and
lds
dec
ss
and
push
sub
jo
mov
mov
cmpsb
test
mov
out
push
jge
dec
ss
es
jbe
mov
out
mov
cmpsb
lods
fld
lea
push
lret
ss
es
jbe
in
ds
xchg
xchg
loope
cli
test
out
push
pop
pop
or
ja
xchg
js
or
mov
jecxz
and
clc
dec
enter
popa
inc
sub
jge
ret
jo
imul
sub
mov
adc
dec
rcr
movsl
fisttpl
ss
jns
jbe
pop
push
xlat
xor
jle
ret
add
es
ret
stc
pop
cltd
clc
dec
scas
ljmp
mov
imul
cmp
mov
push
mov
in
push
shll
dec
fisubs
mov
imul
jge
mov
clc
fbld
add
xchg
cmpsb
frstor
enter
pop
push
jge
dec
xor
sub
jbe
popw
xchg
outsl
xchg
mov
pop
jns
push
or
dec
inc
cmp
push
cmp
repz
loopne
mov
mov
hlt
fisubl
or
xchg
push
inc
push
pop
and
outsb
data16
mov
leave
fidivs
fdivl
cmp
push
cmp
in
xchg
std
xchg
mov
cmpsb
lods
mov
out
push
jge
dec
ss
es
jbe
in
xchg
std
xchg
mov
cmpsb
lods
mov
out
push
mov
popa
popa
lcall
scas
je
fsubr
das
add
and
jns,pn
cmc
jo
fsubrs
repnz
mov
mov
push
test
cmp
mov
out
jnp
dec
xlat
mov
leave
or
stc
mov
jge
jg
mov
dec
sbb
mov
inc
jno
jae
push
add
pop
mov
aaa
cmp
sbb
out
sti
fimull
inc
push
or
jb
or
add
pop
movsb
pop
mov
mov
insb
aam
js
adc
pop
push
push
pop
and
orl
mov
inc
cmpb
xor
scas
mov
dec
cs
ret
cmp
std
push
jnp
pushf
ljmp
cltd
lahf
flds
ss
push
stos
push
imul
xorb
push
adc
mov
imul
cmp
repz
mov
dec
push
push
cld
ret
into
xorb
add
fldt
push
test
xchg
repnz
and
push
insl
jae
add
in
rol
orb
scas
mov
ss
leave
mov
fisubrs
pop
and
dec
bound
adcl
mov
scas
mov
cmc
scas
xlat
sub
loopw
repnz
es
push
add
rcl
mov
int3
aad
jns
addb
mov
mov
sbb
out
stos
inc
out
sub
mov
sbb
jge
das
rorl
in
lret
sub
lcall
ds
push
cmpsb
pushf
add
jae
mov
xchg
push
insb
in
adc
xchg
addr16
aad
xor
pop
push
adc
adc
mov
bnd
loopne
mov
out
test
sbb
call
lahf
popf
cmpsl
inc
xchg
add
shr
and
jmp
jmp
pop
push
cs
orb
mov
sub
xor
push
insb
inc
hlt
gs
out
xchg
addb
and
jmp
cs
insl
mov
jbe
loopne
call
jecxz
cmp
icebp
push
jae
push
pusha
dec
add
out
sub
pop
repz
je
mov
push
enter
stos
push
cmp
cltd
dec
jne
cmovno
adc
addr16
imul
adc
mov
inc
outsb
insl
inc
mov
mov
xchg
mov
jecxz
lret
jae
mov
fwait
or
cmc
cmp
or
push
leave
outsb
int
mov
add
sahf
jb
jmp
mov
dec
cvtpi2ps
lcall
sarb
sbb
and
sub
xchg
xor
dec
cli
repz
insb
inc
popa
ja
daa
dec
mov
in
inc
fisttpll
fstpl
orl
into
cmp
loop
mov
int
push
and
lods
lcall
inc
jge
rcll
lea
push
xlat
dec
je
inc
jmp
pop
mov
mov
leave
pop
sub
jb
jbe
popa
aad
rorl
shl
mov
fidivs
sahf
push
insl
aaa
clc
jbe
fistpl
jne
dec
stos
jns
push
leave
cld
mov
ja
adc
mov
aas
sbb
mov
push
mov
mov
into
inc
jmp
or
pop
inc
cltd
jg
insl
cmp
imulb
imul
push
divl
xchg
mov
add
push
xchg
loop
inc
jne
mov
dec
jbe
ret
xchg
sub
ret
insb
jge
mov
xchg
jmp
lahf
bound
mov
jl
add
inc
jb
mov
mov
pop
addr16
mov
decl
ficomps
arpl
out
lods
inc
mov
test
lret
xchg
ror
inc
inc
sub
into
pop
push
xchg
orb
mov
arpl
popa
and
fistpl
xor
aas
aaa
jmpw
push
int
sti
mov
jg
jne
adc
cmp
push
cmpsl
stos
mov
sbb
aam
es
les
sub
test
imul
ret
les
jp
bound
pop
lea
xchg
xlat
push
dec
xchg
scas
mov
fmul
push
mov
adc
cli
nop
xchg
add
ss
mov
push
adc
jle
xor
cmp
mov
iret
dec
out
in
pop
daa
call
push
or
nop
ja
and
gs
int3
div
fnstcw
mov
movsbl
xor
xor
adc
fisubrs
stos
mov
mov
insw
add
shll
fildl
loope
scas
gs
popf
or
data16
jge
pop
mov
adcl
sub
sub
sti
jo
call
sub
bound
push
scas
mov
fdivs
mov
mov
inc
mov
movsl
push
jo
pushf
sbb
fists
mov
xchg
pop
fmuls
aas
sub
sub
int3
shlb
fwait
shll
pop
fisubl
dec
jge
fwait
scas
pop
lods
xor
cmp
add
lds
jno
inc
or
lock
push
sub
jae
jmp
cmpsb
xor
dec
sti
mov
sbbl
pop
push
xchg
xor
adc
or
shr
popf
jmp
orb
out
clc
sub
jmp
stc
cmpsb
sbb
cld
add
jle
pop
cld
gs
push
mov
dec
in
shll
dec
xchg
je
lea
add
add
pop
pop
nopl
or
lahf
mov
nop
shr
in
scas
nop
push
cmp
mov
mov
int
outsb
stos
sbb
mov
xlat
in
test
sub
icebp
pop
mov
aas
nop
jge
cmp
lock
lods
inc
call
mov
xchg
mov
jecxz
aaa
xchg
xor
sbb
mov
jmp
mov
inc
or
sub
mov
inc
sub
je
out
jg
mov
das
imul
rorb
push
jle
loope
inc
fucomip
inc
inc
xchg
ficompl
mov
cmp
jecxz
cmpsl
push
aad
es
jbe
lods
adc
push
hlt
les
fnstcw
imul
dec
push
push
mov
inc
sahf
in
in
popf
cs
pop
into
out
xor
cmp
shr
pusha
pop
and
xchg
adc
insb
jne
jb
iret
jne
shll
int
loop
inc
test
in
lods
imul
xchg
pop
fcomi
cmp
js
cmp
jno
dec
aad
pop
out
xlat
std
jecxz
and
scas
jge
inc
lock
jg
fcompl
push
mov
pop
xchg
and
mov
push
jo
cmp
add
jbe
mov
xchg
cld
fwait
jge
jne
ds
push
pop
mov
lret
sub
xchg
xchg
out
add
fimuls
xchg
mov
mov
insl
fldt
lods
ss
mov
cs
sbb
pop
adc
xchg
out
pop
push
cld
mov
push
mov
adc
push
cmp
dec
nop
imull
sahf
jp
xor
push
jge
jg
push
in
out
enter
ljmp
div
cli
xchg
fistpll
mov
lds
sbb
pop
js
fcmovu
fsub
dec
adc
lret
fstps
xchg
dec
push
hlt
cmp
fstps
out
mov
inc
or
rcrb
push
jnp
mov
jbe
pop
jecxz
clc
stc
dec
inc
lret
repz
out
xor
aad
push
movb
ret
xchg
xor
adc
mov
aam
test
inc
xchg
xlat
adc
aaa
aam
mov
pop
dec
or
std
inc
inc
mov
ret
loope
mov
movsl
cmp
out
dec
xor
and
in
sbbb
lahf
popa
xor
aad
lahf
test
cmp
loop
mov
mov
mov
xor
loopne
lock
sbb
imul
sub
xchg
pop
popf
popa
and
mov
push
sub
pop
xchg
or
arpl
test
sbb
and
or
xorl
les
add
cmpsb
xchg
jmp
fs
insb
out
data16
pop
dec
xorb
or
cmpsl
out
and
into
mov
inc
or
and
daa
addl
shrl
inc
and
sub
movsb
mov
ficoms
movsl
mov
mov
xchg
xor
xchg
aam
scas
jmp
test
xor
mov
scas
mov
cmp
dec
sub
mov
mov
adc
mov
jns
lret
push
sub
stos
andl
lret
cltd
adc
push
push
inc
mov
xchg
push
jne
out
mov
add
ja
and
and
adc
jle
sahf
ds
mov
sti
mov
js
lods
inc
xor
cmp
jl
hlt
push
outsl
stc
mov
mov
les
jae
pop
cwtl
sahf
shl
js
fld
inc
or
pcmpgtb
gs
mov
inc
mov
rcll
ljmp
mov
xlat
ja
in
mov
inc
out
int3
sub
les
dec
cmp
test
cs
movsb
ret
fs
mov
jns
mov
or
adc
xchg
cmp
mov
dec
in
sub
sbb
inc
or
pop
sub
jae
ret
cmc
dec
sbb
adc
pop
dec
sub
or
stc
sbb
inc
lock
arpl
js
loopne
dec
mov
out
fmull
clc
push
push
outsb
push
add
jl
stc
push
cmp
lods
hlt
sbb
pop
loope
iret
jne
jne
jno
popa
push
push
in
jp
cmpl
rorb
mov
push
es
ljmp
cmp
adc
dec
les
pop
sbb
pop
xchg
adcb
scas
xlat
adcb
loope
cs
push
xchg
out
xor
jb
popf
das
adc
das
iret
lcall
scas
xchg
jl
mov
cmp
mov
pop
cmp
or
data16
jg
sub
fwait
jl
es
mov
cmp
inc
pop
lahf
pushf
and
xor
sbb
cmpsl
push
sbb
inc
or
mov
cmp
mov
outsb
arpl
xchg
in
push
pop
cmp
cmp
iret
sub
pop
lcall
call
cmp
ss
adc
in
inc
les
jns
mov
fstpt
outsl
adc
ss
mov
inc
insl
mov
mov
lds
addr16
je
jmp
or
adc
lods
or
jle
pop
cmp
mov
notb
ljmp
int3
gs
scas
out
clc
repz
adc
bound
mov
lods
test
dec
and
mov
outsl
fidivrs
test
jg
daa
dec
repnz
mov
pusha
fldcw
fbld
cmpsb
mov
outsl
cmc
cmpl
push
mov
add
dec
xor
pop
rclb
inc
lds
inc
je
and
clc
pop
test
jb
imul
mov
loop
or
test
sarb
sub
daa
shlb
mov
iret
mov
inc
mov
push
faddl
sbb
ljmp
mov
mov
js
lods
ljmp
xchg
repnz
sti
lret
stos
mov
mov
adc
scas
jecxz
jle
push
sub
out
cli
inc
sbb
mov
mov
sti
bound
ficompl
fisubrl
ljmp
xor
popw
sub
out
inc
lret
adc
jmp
jle
xchg
stos
xchg
cmp
add
fists
movb
push
inc
inc
xor
icebp
cwtl
ret
xor
mov
dec
and
and
sbb
jbe
stc
pushf
add
pop
push
jbe
sbb
inc
sub
jg
xlat
pusha
daa
push
sti
pop
or
and
jo
fisubrs
sbb
call
xor
repnz
push
outsl
mov
jle
rcll
stos
mov
sub
lods
movsb
dec
inc
adc
sbb
call
int3
sbb
mov
fadds
ja
bound
popf
stos
cmp
shl
fcmovnb
idiv
adc
pop
jp
inc
les
mov
aad
jle
adc
ret
cmp
in
inc
add
seta
jne
mov
sbbl
adc
dec
pop
sub
cmp
mov
shll
adc
aaa
inc
inc
icebp
aad
cltd
mov
xor
popa
fidivrs
sbb
fwait
xor
mov
sub
inc
pop
push
aas
push
mov
fistl
cmpsl
aas
stos
mov
pusha
dec
clc
jae
mov
adc
and
push
xchg
gs
das
add
and
fwait
pushf
xor
repz
fstpl
pop
jl
xchg
sbb
jp
push
mov
aaa
jbe
adc
jle
inc
xchg
and
inc
addr16
sbb
sbb
jmp
fs
mov
dec
mov
push
add
xchg
inc
iret
enter
in
mov
insb
dec
add
popf
js
fs
icebp
sarl
cmpb
orb
stos
imul
andl
pop
xor
adc
in
xor
jb
fstpl
dec
sub
jp
xchg
pop
aad
je
xchg
inc
mov
cli
pop
push
in
inc
fadd
daa
xor
pop
cltd
cwtl
xchg
daa
mov
xlat
pop
cld
mov
js
xor
cmc
in
les
push
push
popa
inc
pop
sub
push
pusha
xor
int
cmp
mov
aam
pop
xchg
or
jno
xchg
clc
loop
aas
mov
addr16
lcall
outsb
js
dec
cmp
inc
arpl
and
xchg
and
jne
sbb
std
test
jecxz
leave
dec
add
sarb
pop
int3
jnp
push
in
dec
mov
jnp
mov
call
jb
mov
mov
push
jmp
cmp
mov
xor
or
stos
outsb
ljmp
rolb
inc
ljmp
ficompl
and
jl
push
cmpb
jge
stos
inc
fildll
inc
jecxz
hlt
push
call
inc
cltd
addr16
into
jl
xchg
popf
xor
xlat
add
inc
mov
mov
push
push
sbb
jp
into
mov
outsl
xor
cmp
fstpl
cmpsb
sub
mov
xor
mov
shlb
into
jo
jnp
addr16
pop
push
or
sub
std
mov
xchg
push
aas
sub
mov
sub
lods
mov
ret
jmp
int3
int3
push
cmovae
clc
adc
jle
lret
faddl
out
sbb
or
addr16
insb
add
lods
out
test
and
mov
arpl
out
aam
fsubr
aas
adc
out
xchg
push
cmp
dec
pop
lea
or
pop
flds
movsl
cmp
inc
push
jecxz
aaa
mov
jl
xor
adc
mov
movsl
sbb
sub
push
sub
cmpsl
jo
jmp
xchg
aam
mov
insb
inc
xchg
xor
jge
mov
jnp
and
xchg
jbe
fwait
sub
sub
into
sbb
lock
inc
and
add
rcrl
xor
xchg
jo
jg
hlt
pop
mov
push
pop
loope
cli
and
fldt
repz
xor
adc
push
jno
mov
xor
jbe
addr16
loop
test
xchg
fwait
xchg
jmp
call
jle
sbb
jno
or
mov
loop
sub
sub
jle
les
out
fdivl
sub
notl
lcall
movsb
aad
test
mov
test
mov
add
icebp
sub
push
inc
in
mov
and
outsl
enter
addl
sub
pop
mov
rol
ds
xchg
rorl
add
shll
mov
mov
pop
ja
xchg
cmpsl
dec
cmp
movsb
es
ret
mov
push
into
cmpsl
les
insb
jecxz
ja
popf
ret
js
loope
testb
fcomps
push
xchg
inc
xchg
lret
xchg
inc
out
or
inc
adc
xlat
in
mov
dec
push
mov
xchg
outsb
aam
test
ja
imul
jno
scas
mov
and
xchg
addr16
testb
ss
mov
xchg
in
sbb
pop
movb
mov
pop
jnp
mov
outsl
add
bound
adc
push
aam
mov
and
stos
jns
cwtl
pop
sbb
mov
lcall
cmp
mov
sub
mov
pushf
adc
adc
cmp
movsl
sbb
dec
outsl
jmp
fiaddl
pop
popf
add
mov
sbb
inc
or
cmp
nop
fisttps
stos
push
cmp
out
rorl
in
jmp
cltd
push
enter
lcall
sub
xchg
jmp
mov
lock
mov
lods
dec
sub
mov
in
push
in
sub
test
mov
stos
popa
cmp
or
aaa
inc
sub
testw
push
cmpsl
std
adcb
bound
loope
mov
call
mov
sbb
stc
leave
jns
pop
imul
int3
outsl
incb
ret
cli
cld
popl
arpl
movsb
cwtl
jl
xor
push
loop
push
sbb
cmc
std
and
or
je
repz
mov
sub
xor
lcall
and
or
aaa
cmp
pop
push
lock
stc
insb
add
jo
or
jmp
cmp
lock
cmpl
push
push
jp
aas
cli
pop
mov
in
xchg
jmp
sub
ret
adc
jle
fstps
aad
es
lds
pop
ss
mov
scas
scas
sbb
mov
fidivrl
jge
mov
push
call
out
mov
fcomi
pop
sar
mov
daa
test
dec
dec
jp
test
mov
push
jbe
inc
out
push
stos
jbe
cwtl
fstpt
fs
ds
out
aam
xorb
les
dec
mov
jecxz
fidivrs
push
jg
fadds
lds
xchg
dec
in
xor
sub
dec
lods
and
into
lret
fs
das
cmc
and
shlb
dec
pop
fisttpl
scas
and
push
fwait
pusha
mov
xor
xor
in
jg
lock
pop
xchg
stc
push
mov
stc
cs
push
lods
inc
dec
icebp
fucomip
mov
jmp
cli
pop
push
mov
int
call
addr16
repnz
sub
lea
mov
je
repnz
dec
rcrb
dec
frstor
sahf
mov
fmull
jnp
aaa
adc
sub
pop
xor
nop
push
xor
pop
inc
or
jl
or
add
cs
xchg
scas
adc
fnstenv
xor
pop
es
sub
fxch
ss
nop
jl
leave
fisubrs
cmpsl
in
cld
aam
cmp
and
inc
lods
inc
lahf
add
or
sub
inc
sbb
jp
push
mov
jp
fmull
out
xlat
xor
aam
xchg
or
fsubl
push
movsb
out
jbe
dec
fistpll
xchg
mov
movsl
lods
data16
loope
les
add
sbb
push
pop
mov
push
mov
popa
popf
arpl
mov
movsb
mov
cld
fsubp
cmpsb
lods
ja
adc
lcall
scas
mov
xchg
push
out
mov
fidivrs
push
scas
jbe
divl
sub
and
add
scas
out
sub
sub
bound
push
add
add
data16
cmp
push
inc
sar
jns
xchg
mov
repnz
ss
inc
stos
test
sub
cmp
fsubrl
dec
arpl
push
jnp
xchg
stos
std
pop
fimuls
stos
jbe
pop
test
in
sti
std
xlat
pop
das
and
cmp
orl
test
mov
cmpsl
mov
movsb
jne
cmc
clc
fnstenv
nop
push
add
sub
push
xor
xor
sbb
lret
loope
or
and
popa
in
cmc
repz
xor
xchg
fcmovu
adc
les
mov
ret
nop
and
sbb
test
test
test
and
and
pop
xor
jge
jnp
nop
dec
xchg
imul
and
int3
rcrb
clc
adc
jmp
jno
inc
testl
push
ja
xchg
pop
outsl
punpckhbw
inc
sub
mov
loopne
subb
push
lock
test
pop
pop
hlt
push
cmp
pop
adc
sub
arpl
sbb
data16
mov
mov
div
outsb
add
mov
fnstenv
sub
xor
push
ret
jne
sbb
out
or
aam
int3
add
cmpsb
sub
push
pop
inc
hlt
xlat
cs
inc
or
push
mov
mov
out
out
push
out
ss
es
jbe
in
xchg
std
xchg
mov
cmpsb
lods
mov
out
push
jge
dec
ss
es
jbe
in
xchg
std
xchg
mov
cmpsb
lods
mov
out
push
jle
pop
mov
es
cmp
or
push
std
xchg
mov
cmpsb
lods
movsb
mov
lods
out
push
push
push
lds
jne
sub
jbe
in
xchg
add
mov
rcr
pop
xor
sbb
in
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
leave
in
stc
std
jmp
rcl
test
outsl
insl
pop
jns
sbb
sub
leave
std
jmp
lods
mov
pop
dec
or
imul
rol
cmc
loope
icebp
xchg
addb
pop
push
push
add
sbb
push
push
jge
dec
push
inc
mov
pushf
xchg
mov
pop
inc
inc
mov
movsl
add
jge
push
loope
andb
push
inc
in
lock
mov
pop
inc
je
test
jo
mov
dec
push
ror
roll
frstor
ret
adc
dec
pop
mov
xchg
repnz
cli
insb
sbb
push
jbe
test
mov
jns
xor
in
and
aam
sub
push
mov
mov
movsl
mov
shlb
push
lods
sub
add
xor
push
sub
mov
mov
xchg
int
or
das
or
loopne
jmp
lods
mov
inc
push
jne
fs
add
sub
pushf
cltd
mov
fwait
lock
cmp
pop
dec
pop
jge
or
jl
or
pop
inc
int
frstor
stc
cltd
repz
sub
or
imul
movsb
leave
mov
popf
mov
pop
pop
dec
insl
jns
imul
leave
in
stc
std
jmp
lods
mov
pop
dec
insl
jns
imul
fstps
fidivl
mov
adc
mov
shrb
xchg
popa
dec
ds
lods
lret
nop
dec
gs
jo,pt
and
cs
mov
in
xor
mov
cs
stc
and
loope,pt
dec
push
out
xchg
test
fwait
pop
mov
loopne
add
fstl
push
pop
push
jge
js,pt
xchg
xchg
icebp
push
je
add
test
xor
popa
lock
fisubrs
sti
daa
push
out
cmp
enter
insb
and
push
mov
mov
sti
cmp
cmpsl
scas
sbb
cli
adc
lea
out
outsl
std
mov
gs
stos
iret
je
les
mov
xchg
sti
repz
outsb
mov
mov
xlat
add
dec
pop
jg
stos
sahf
mov
cs
adc
push
in
leave
sub
scas
sarb
and
or
pop
lock
add
sbb
and
ret
cwtl
xor
cmp
dec
push
sbb
add
mov
jge
jl
push
add
xchg
arpl
aad
fcomi
cmp
push
clc
push
dec
pop
sub
outsl
mov
push
lods
or
cmp
dec
ret
dec
leave
test
lret
cmp
sahf
dec
xor
push
or
mov
rep
add
push
xchg
ret
push
lret
shll
scas
dec
lods
data16
insb
repnz
adc
xchg
push
lea
fdivl
int
push
int
sub
hlt
add
push
add
sbb
sub
inc
lret
sbb
test
add
xchg
in
mov
jns
pop
pop
inc
jg
inc
jne
xchg
dec
inc
sti
orl
adc
out
neg
lret
mov
shrl
pop
sarl
mov
enter
adc
jae
lret
adcb
dec
push
je
sbb
pop
xor
in
add
int
dec
fwait
scas
loop
lahf
dec
cmpsb
mov
cmp
cmp
dec
and
mov
movsl
push
inc
xor
cmp
int
pop
ret
lret
xor
mov
addl
push
jo
pop
es
int
cmp
pushf
leave
pop
hlt
pop
idivb
stos
push
aad
test
push
inc
inc
es
out
fstl
mov
hlt
test
fisubs
test
repnz
mov
cli
mov
pushfw
pusha
ret
clc
xor
mulb
les
xchg
jl
cmpl
add
data16
inc
push
fs
mov
dec
mov
add
les
fistpl
cltd
dec
mov
leave
mov
ss
cmp
or
or
rcrl
mov
cmp
pop
sub
sbbb
movd
int3
adc
and
adc
push
iret
push
xor
xchg
out
js
push
bound
loopne
arpl
push
mov
inc
and
cli
imul
push
mov
popl
jle
sarb
out
sub
scas
and
insb
les
adc
add
pop
or
adc
imul
sub
push
or
outsb
rcrb
push
pop
cli
hlt
test
push
rorl
imul
fsubrl
sub
xor
adc
sub
mov
flds
cmp
repz
cltd
cwtl
push
pop
xchg
mov
cli
dec
dec
cmpsl
addr16
add
sbb
dec
stos
imulb
sbb
xchg
out
mov
dec
xorb
test
mov
shrb
into
inc
les
dec
and
lock
fdivs
push
scas
xor
inc
rol
daa
in
mov
mov
mov
aad
push
cmp
ss
add
shlb
push
adc
cmpsb
sub
jl
xor
outsl
in
xchg
jne
dec
out
lret
adc
enter
xchg
in
mov
add
aaa
sub
xchg
sub
push
mov
out
repnz
test
mov
xchg
sbb
or
shrl
mov
adc
xor
sub
xchg
notb
aas
sti
imul
dec
mov
fisttpll
push
cmp
imul
xlat
dec
arpl
enter
push
xchg
das
jge
test
xchg
jle
push
les
je
cmc
shll
sti
dec
cmp
cmp
insb
jle
pop
xchg
pop
pop
sbb
lret
inc
pop
add
fnstsw
mov
cmp
loope
sbb
insb
scas
xacquire
lods
lcall
jle
and
sbb
jecxz
scas
sub
lret
lret
inc
cmp
orl
ds
dec
aas
ret
mov
mov
push
mov
aam
push
jns
scas
ds
jecxz
popf
pop
mov
fwait
rcrl
push
cwtl
add
xchg
mov
and
mov
popf
sub
xchg
sbb
fldl
add
or
cmp
sub
mov
sub
mov
outsb
addl
mov
inc
ret
add
pop
and
es
insb
lds
inc
fildl
jmp
shlb
and
xor
insl
arpl
push
movsb
ror
add
aas
ljmp
mov
les
insl
and
lock
jno
mov
dec
pop
bound
movsb
jb
xchg
cli
repnz
sahf
or
mov
sub
addb
mov
adc
mov
sbb
push
dec
fistpll
and
outsl
ds
or
xchg
sub
je
jnp
and
mov
pop
sbb
xchg
clc
int3
add
ss
sub
pop
xchg
pop
or
mov
sbb
jbe
sarb
cltd
ss
mov
fstp
loop
mov
fsubp
inc
stos
repz
push
add
push
xchg
mov
lods
jp
outsl
outsl
in
out
pushf
js
jmp
loopne
mov
pop
cmp
mov
aaa
movsl
sbb
sbb
dec
pushw
test
push
add
out
inc
xchg
movsb
idivl
sbb
into
xor
in
in
cmp
jnp
mov
daa
and
dec
push
hlt
add
popa
xchg
pop
and
push
popf
sub
jmp
jmp
cld
pusha
add
mov
pop
icebp
sub
adc
js
push
out
mov
cltd
clc
jne
sbb
cmp
jge
cmp
repnz
dec
aas
lret
jmp
mov
rclb
in
pop
mov
and
mov
push
popa
pop
cmp
pushf
fdivrs
mov
jecxz
in
ds
out
mov
jno
int
jl,pn
push
jg
cltd
cltd
cwtl
jge
in
mov
std
aam
mov
push
ficoml
dec
out
jle
mov
push
xchg
push
xchg
mov
push
push
pop
repz
andb
xlat
cmp
push
lea
mov
jecxz
test
mov
and
push
adc
cmp
sbb
xor
pop
mov
lods
xor
in
inc
pop
lahf
dec
push
mov
mov
pop
pop
mov
pop
push
dec
mov
fadd
in
pop
mov
arpl
in
inc
cltd
push
mov
inc
mov
cmp
scas
sbbb
in
xchg
sbb
testl
pop
mull
sub
ret
pop
lret
sub
cmc
mov
out
push
les
shll
dec
or
mov
jne
ficoms
mov
sbb
sub
aaa
popa
xchg
inc
cmpsb
push
scas
xor
cmc
xor
adc
dec
sahf
or
push
ds
les
int3
test
jle
mov
cmpl
int
into
adc
addr16
sbb
xacquire
sbbl
push
cmc
test
jl
sbb
push
jg
je
or
pop
fwait
ret
sbb
cli
jnp
add
imul
pop
mov
xchg
adc
sahf
jmp
mov
ss
adc
pop
test
dec
addr16
pop
mov
pushl
xor
jecxz
ffreep
lcall
cld
jecxz
sbb
int
and
subb
loopne
orl
cmpsl
or
gs
test
cmpsb
xchg
in
out
andnps
stc
stc
mov
arpl
push
fldenv
or
mov
lea
ss
pop
push
loopne
xor
cwtl
rcrb
aad
int3
push
xchg
mov
faddl
sbb
jae
lods
xor
lds
mov
test
scas
or
adc
dec
fsub
mov
addb
test
insb
push
lret
movsl
adc
push
sub
xchg
mov
int
mov
mov
test
push
cli
xor
inc
sbb
push
cmp
cwtl
xchg
leave
pop
mov
sbb
fwait
mov
add
mov
add
pushf
daa
xchg
dec
jg
jg
xchg
pop
jl
mov
arpl
jb
jg
mov
mov
mov
and
jne
lahf
fwait
xchg
push
tzcnt
cs
enter
xchg
jmp
sub
xor
mov
add
mov
addb
push
out
mov
dec
mov
popf
out
test
out
and
push
cmpsl
mov
sub
mov
loop
push
loopne
lretw
loop
push
mov
shlb
sbb
sbb
into
gs
push
mov
or
std
bound
adc
je
jle
cmp
pop
outsb
inc
dec
cmp
rol
rcll
push
jo
call
popa
mov
and
add
dec
pop
pop
mov
mov
push
pop
or
js
aas
sahf
add
push
outsl
push
pop
pop
insl
lret
dec
popf
dec
or
out
xor
inc
movsl
gs
hlt
or
out
xor
cmp
aaa
mov
cld
push
sub
jno
das
xchg
and
les
aaa
fisttps
pushw
into
add
mov
bnd
or
int
pop
pop
clc
push
mov
imul
mov
fsubs
in
jge
xchg
popf
das
add
jp
adc
cmp
mov
test
sahf
pop
add
out
enter
out
jp
je
jmp
xchg
mov
adc
add
mov
filds
fstl
outsb
in
inc
jl
mov
stos
push
scas
imul
push
jbe
push
mov
lods
adcl
adc
push
xchg
and
ficomps
std
in
push
sub
lahf
add
pminsw
mov
pop
mov
pusha
mov
dec
adc
mov
jo
rcrb
sub
mov
mov
out
dec
outsb
dec
movb
cmp
bound
mov
sub
mov
fwait
rclb
mov
in
jne
or
ret
int
mov
ljmp
xor
adc
cmp
jg
lahf
and
push
pusha
ljmp
test
fisttpl
scas
js
cmp
lods
andl
hlt
divl
cwtl
dec
pop
pop
pop
adc
pop
push
aam
xchg
dec
xchg
pop
ss
cmpsl
test
push
aas
das
jl
js
daa
bnd
mov
ja
adc
mov
jle
jl
jne
xchg
xchg
addr16
fs
inc
xchg
push
shll
pop
push
mov
pushf
testb
lahf
ss
call
sbb
inc
pushf
test
jmp
pop
mov
outsl
or
or
or
jae
movsl
testl
rorb
jmp
inc
push
not
or
into
push
push
mov
fldenv
push
add
sub
mov
ja
es
push
incb
and
clc
sahf
enter
jno
mov
outsl
inc
in
lret
pop
sub
and
cld
sub
cmpsb
jl
dec
test
pop
dec
aas
jp
lret
jle
das
mov
mov
cld
mov
enter
inc
adc
cmp
mov
mov
cmp
jbe
and
mov
inc
push
int3
sahf
adc
loopne
mov
cld
and
sbb
lods
into
fs
leave
mov
fisttpl
mov
sbb
and
rcr
xchg
ja
daa
imul
pushf
je
fs
inc
mov
out
mov
and
out
xchg
sub
ret
sub
mov
and
sbb
pop
push
jg
lock
sub
ret
test
sub
out
pop
fs
xchg
pop
dec
mov
add
pop
in
mov
loop
jmp
cmpsl
lret
add
insl
mov
je
jne
pop
push
cmp
xchg
or
inc
cmpsb
cmpsb
jecxz
adc
pop
sbb
insl
int
sub
sub
addr16
mov
dec
push
adc
mov
lods
lods
repnz
or
out
jne
std
out
inc
push
inc
mov
jne
add
xchg
popa
xchg
lret
ret
rcll
jbe
sbb
xor
neg
pop
fdivr
mov
mov
int3
pop
in
test
ds
bound
fwait
jb
jmp
ljmp
mov
cmp
stc
roll
sub
sub
xor
mov
pop
sub
mov
sub
ja
or
inc
in
jl
ljmp
add
insb
mov
push
leave
outsl
dec
mov
push
mov
loopne
sub
mov
fcomi
das
sub
das
sub
popa
dec
ret
rolb
imul
enter
js
mov
inc
fwait
and
nop
mov
enter
adc
xchg
cmc
jb
lcall
cmp
dec
popf
pop
push
negb
mov
lcall
inc
pop
fwait
leave
adc
in
push
jl
adc
jmp
sarl
xor
push
es
aam
and
sub
xchg
dec
jp
imul
ret
ret
mov
jmp
out
cld
test
push
int
jp
jge
arpl
pop
push
test
add
int
test
in
ss
adc
fwait
aas
or
pop
test
mov
fildl
mov
cwtl
and
dec
es
inc
mov
test
enter
mov
dec
aad
jb
aam
andb
insb
in
imul
div
outsl
jecxz
pushf
jae
jecxz
insl
cmpsb
fs
ret
push
les
cmc
fmuls
addr16
mov
mov
push
dec
into
xor
cwtl
ret
xor
repnz
push
scas
jecxz
in
dec
push
dec
hlt
out
cltd
cwtl
fcompl
lret
mov
inc
dec
ja
add
cmp
add
ja
xor
fldln2
das
xchg
dec
aaa
or
repnz
push
or
ss
ss
push
outsb
mov
icebp
and
movsb
cmc
out
loope
jge
xchg
jae
fwait
arpl
xor
xchg
in
sub
dec
push
push
inc
ljmp
imul
dec
dec
add
xchg
arpl
mov
adc
pusha
xchg
cld
lods
sub
inc
pop
add
add
sub
jg
insl
and
add
loop
mov
push
lahf
addr16
lods
mov
inc
sub
and
mov
ret
out
dec
rcr
movl
lods
jae
mov
xchg
jle
or
pop
ljmp
dec
add
shl
mov
repz
pushf
rcr
fsubs
mov
mov
push
mov
addl
or
outsb
into
jno
inc
lds
shl
mov
jmp
leave
jbe
xchg
mov
ret
loop
outsb
push
mov
dec
pop
hlt
sti
fs
push
aaa
in
insl
insl
xor
loop
push
fcmovnu
push
mov
mov
jg
push
xchg
sub
mov
insb
mov
jg
movsb
shll
mov
inc
clc
incl
mov
vpmaddwd
icebp
sub
call
inc
sbb
lahf
dec
nop
jecxz
cmp
mov
aaa
inc
and
dec
cltd
test
div
orb
testb
xchg
or
mov
dec
mov
int3
cli
bound
add
mov
mov
mov
out
aad
sbbl
or
and
pop
push
cmp
push
inc
xlat
xchg
pop
mov
fwait
movsl
out
int
int
lahf
into
add
jecxz
jmp
sub
sbb
or
jp
int
mov
cmc
jmp
shr
in
add
aam
iret
aaa
pop
cmp
js
or
mov
sub
out
and
test
xor
inc
add
and
xor
pop
popf
inc
push
daa
pop
jnp
shll
dec
or
das
add
cmp
xchg
add
in
stos
ret
test
xchg
dec
adc
les
int3
dec
mov
dec
ljmp
cltd
testb
mov
xchg
frstor
or
or
ja
ljmp
sub
mov
fs
orb
fmul
xchg
ret
and
rcrb
in
cld
mov
xchg
sub
push
scas
rorb
out
cmpsb
push
idivb
xchg
push
jno
sbb
jbe
fs
push
orl
adc
push
xor
pop
sbb
fs
stos
fmull
xchg
adcb
loope
shll
xor
sbb
pop
xor
mov
jle
int3
stos
rcrl
sub
sub
sbbb
xor
rorl
popa
cmp
mov
dec
mov
ret
rorl
lods
scas
jge
inc
jl
jnp
ss
das
out
sub
sub
imul
mov
dec
pop
std
pop
pop
push
cs
int3
das
cmc
fistl
inc
sbb
xor
fnstenv
loopew
faddl
ja
addr16
jge
fstpl
sbb
jg
mov
out
mov
orl
test
jns
in
or
sbbl
aas
pop
xor
sbb
push
push
dec
sbb
jp
jbe
popa
adc
xor
adc
out
or
ret
dec
add
inc
cmpsl
rclb
enter
cltd
adc
push
pop
sbb
nop
pop
aam
movsl
mov
pop
in
sbb
test
mov
mov
cmpsb
add
inc
cld
lds
repz
jge
loope
add
pusha
data16
push
or
push
cmp
loopne
scas
shll
add
insb
out
sbb
inc
jo
pushf
rcl
jb
sbb
loop
add
mov
js
cs
xor
adc
jle
addr16
jne
sbb
fldenv
loopne
or
and
ret
cmc
mov
cmp
jae
mov
leave
xchg
leave
add
inc
push
lcallw
es
in
mov
cmp
pop
lods
push
xor
xchg
pusha
rorl
scas
aad
aad
mov
xlat
sahf
and
or
sub
fs
inc
pusha
cmp
arpl
scas
mov
popf
push
call
fisubs
mov
lods
mov
pop
jo
sbb
xor
into
xlat
mov
enter
arpl
sbb
sub
xor
pop
cwtl
icebp
adc
outsb
cmp
mov
or
call
js
fwait
sahf
mov
jbe
out
and
frstor
inc
fwait
mov
xor
or
mov
pop
mov
int
movsb
jae
pop
dec
sbb
or
outsb
jmp
sub
cmpsb
mov
sbb
mov
lds
repz
daa
in
jne
mov
in
sti
insb
sarb
dec
test
add
mov
and
in
cmp
stos
pop
lret
popf
pop
hlt
cltd
andl
cmc
cli
inc
mov
jp
pushf
mov
je
sbb
xor
mov
pop
lods
sbb
lock
mov
lret
iret
aam
loop
es
sub
add
xorl
pop
mov
lcall
dec
mov
mov
daa
xor
sbb
mov
or
or
inc
or
out
addr16
notb
xorl
and
add
jle
mov
mov
pop
inc
sub
dec
sub
sbb
adc
fsubrp
stos
mov
cmp
dec
cltd
jo
iret
lods
xor
mov
dec
lret
clc
and
out
and
pop
dec
cmp
add
rorl
sbb
pop
sub
pop
pop
xor
inc
cltd
push
into
fbld
fs
jl
or
mov
lea
decl
adc
pop
lret
add
jne
es
jo
shl
jg
cmpsl
sbb
mov
jl
dec
push
cmpb
aad
popa
push
xchg
xchg
incl
add
test
repnz
data16
ficoms
mul
bound
xor
lea
push
lods
loopne
pop
aas
std
mov
jge
and
or
inc
add
mov
mov
icebp
xor
int3
dec
pop
push
addb
adc
mov
jae
inc
lret
push
sahf
dec
mov
gs
je
mov
inc
std
int3
fdiv
xchg
nop
xchg
adcb
pop
inc
jno
xor
scas
mov
lahf
mov
fmul
imul
jns
out
mov
add
xorb
mov
pop
out
pop
pop
lahf
inc
lret
lret
popf
dec
xchg
out
shlb
leave
cs
std
jmp
lods
mov
pop
dec
insl
jns
imul
leave
in
stc
std
jmp
lods
mov
pop
dec
insl
jns
imul
leave
in
stc
std
jmp
lods
mov
pop
dec
imul
or
fucomp
int
std
std
jmp
sub
pop
mov
push
jp
xchg
jbe
inc
ret
jl
sub
jae
mov
cmp
ret
cmp
jecxz
call
xchg
inc
mov
mov
inc
js
push
add
adc
and
xor
ret
clc
shr
adc
enter
test
cwtl
mov
inc
ficoms
arpl
jae
add
adc
adc
cmp
clc
ror
cmpb
into
sub
in
xor
sub
or
sub
fcomps
rclb
in
lcall
hlt
addr16
push
jnp
stos
push
sub
mov
sub
inc
divl
daa
jle
jle
insb
imull
adc
insb
add
mov
test
inc
push
ret
stc
cmp
cmp
dec
testb
push
push
add
sbb
fdivs
test
jge
or
daa
sbb
arpl
mov
xchg
xor
sbb
and
xor
stos
cmp
sar
mov
mov
sub
fcmovnu
fldt
or
add
mov
mov
hlt
push
dec
arpl
dec
add
adc
and
xor
jecxz
repz
addl
aaa
js
pop
sysenter
cmp
inc
fs
push
dec
stos
mov
xchg
stos
idiv
ffreep
into
in
loope
adc
pop
sub
and
push
jp
jno
cmp
mov
test
std
lods
sti
xor
xor
and
je
sub
sbb
or
clc
shr
jecxz
repz
test
cwtl
mov
inc
js
push
add
adc
and
xor
ret
clc
shr
jecxz
repz
test
cwtl
mov
inc
js
ds
and
sbb
push
mov
aaa
aam
mov
sbbb
mov
lea
nop
add
test
rcll
or
sub
push
repnz
pop
stos
jb
in
inc
pop
pushf
xor
mov
sub
dec
pushf
jb
inc
lds
xchg
push
jmp
add
jne
push
jns
stos
mov
insb
adc
dec
push
xchg
mov
xor
rolb
push
pusha
mov
xchg
jbe
cmpsb
add
inc
nop
sbbl
loope
pop
add
in
sub
inc
push
ds
cmpsl
sti
push
lret
int
icebp
jb
movsb
popa
cltd
or
xor
cmp
add
push
sbb
movsb
inc
enter
sarl
sub
jne
das
hlt
cmp
inc
lcall
cmp
ja
cmp
add
out
fwait
xchg
insl
xlat
into
out
jo
xchg
in
and
cltd
shll
outsl
push
out
mov
ret
test
mov
out
fwait
inc
pop
es
dec
mov
arpl
ret
orb
test
std
pop
cltd
fmul
cmpsb
add
pop
cmpsl
dec
adc
ljmp
movsl
mov
nop
or
nopl
clc
add
lods
xchg
push
arpl
adc
les
roll
ret
dec
loope
jge
push
xor
sti
aam
pop
lods
jne
repnz
cmp
fisttpll
pop
jb
loop
cld
lcall
push
gs
bound
fadds
xor
fsubrl
js
mov
sub
xor
rolb
mov
dec
loop
dec
mov
mov
ds
sbb
fstl
lret
aad
jo
out
arpl
push
push
std
sub
xor
sbb
jb
cli
shrl
mov
jg
sbb
inc
inc
mov
cmpsb
adc
mov
sarl
iret
sub
aaa
lcall
test
mov
in
pop
iret
insb
aad
imul
js
lret
mov
insl
jo
pusha
loop
cmp
loope
loope
mov
jo
in
dec
xor
inc
push
nop
out
fs
xchg
pop
imul
call
cmpsb
sub
cwtl
pop
outsl
lds
or
cmp
pop
sub
jae
adc
mov
daa
xchg
insl
inc
pop
mov
adc
loop
test
sub
das
outsb
mov
jne
pop
mov
jbe
sub
xor
add
mov
inc
in
loopne
xchg
in
push
add
test
scas
sub
fcoms
xor
ret
insl
push
fistpll
gs
mov
sub
inc
movsl
push
test
sub
test
mov
cmp
xchg
mov
fcoms
sahf
arpl
mov
and
aas
sbb
mov
dec
push
std
sbbb
xlat
mov
out
dec
loope
mov
jecxz
mov
pop
adc
pop
adc
loopne
push
cmp
add
into
pop
inc
cmp
insb
jne
or
popf
fsubr
les
andl
mov
ja
orb
xchg
mov
cwtl
jl
mov
dec
aas
aad
or
cmp
mov
repz
loope
clc
les
adc
cld
pop
fsts
daa
dec
jecxz
cli
push
lods
cmp
and
test
sub
cmp
dec
push
sbb
cmc
aas
dec
fisubl
aas
sarb
int
call
push
scas
and
loope
sbb
scas
dec
fisttpl
enter
and
push
and
jmp
cmp
dec
or
xor
sub
dec
jno
dec
adc
lahf
jae
add
mov
mov
sbb
insl
jb
add
jge
jge
paddd
test
xor
add
mov
orb
inc
loopne
lods
cs
xchg
scas
or
inc
in
mov
cmc
fistl
push
cmc
lods
sti
call
fs
scas
ficoml
sub
add
xlat
mov
jg
mov
std
rcr
out
mov
loope
stos
loop
jnp
push
sub
lds
sub
pop
push
pop
outsb
inc
cmp
leave
lret
js
in
dec
mov
add
hlt
mov
and
dec
push
adc
cmc
dec
ficompl
fldl2t
xchg
push
mov
or
sbb
hlt
adc
or
mov
sbb
data16
fadds
jg
cmpsl
push
cmpsb
fcmove
add
loop
fwait
loopne
or
jbe
add
ss
mov
test
and
cli
push
fisttpll
lret
sbb
mov
xchg
sub
lret
mov
push
out
or
fildl
clc
xor
inc
inc
jne
dec
pop
xlat
xor
lahf
in
in
cld
pop
hlt
push
test
dec
mov
and
xchg
jnp
and
or
std
add
pop
mov
out
lcall
popf
sub
sarl
adc
ljmp
cld
arpl
lods
xchg
scas
add
mov
aas
je
mov
pop
stos
push
mov
inc
cmp
lods
enter
jge
sahf
movsb
clc
jo
lahf
mov
in
lods
fwait
stc
scas
mov
cmp
hlt
lods
push
adc
mov
ljmp
jne
sbbl
jnp
rorb
bound
add
loopne
sbb
cmp
or
jecxz
je
mov
or
ret
cmp
mov
in
aam
in
cmc
arpl
lret
jae
bound
in
mov
out
cmp
xor
fwait
sub
and
fwait
push
add
aas
or
or
imul
jmp
mov
fisubrs
popf
out
mov
insb
pop
imul
push
mov
js
pop
fistpll
enter
xchg
icebp
ja
aaa
ret
clc
dec
mov
mov
sub
and
mov
test
dec
mov
push
jbe
xor
sbb
lods
dec
movl
outsb
cmp
sbb
and
mov
push
fwait
xchg
shrl
fildl
jg
or
lret
ss
popf
sbb
jb
les
sub
add
push
cmp
pop
or
xor
repz
pop
xchg
xchg
fbld
sub
fcomip
xchg
cld
mov
pop
mov
xor
addr16
outsl
inc
pop
mov
addr16
jp
xor
jbe
sbb
je
xor
mov
inc
pop
insb
lcall
ss
in
dec
aas
test
dec
jne
inc
xchg
jnp
or
hlt
jb
int
insb
cmpb
push
mov
dec
pop
fdecstp
in
mov
or
iret
push
push
or
ror
sub
push
sbb
push
sub
mov
loope
into
push
enter
sbb
stc
xor
add
call
mov
mov
pop
andb
fcoml
fidivrs
repnz
lock
addr16
inc
push
cmp
ret
repz
adc
pop
add
push
aaa
rcll
fsub
mov
call
insl
add
int3
ljmp
cli
adc
xor
and
call
xchg
xchg
sbb
sbb
out
movsb
inc
mov
int3
push
push
sbb
flds
fwait
sbb
jmp
push
lea
push
ljmp
adc
out
mov
movsb
loopne
mov
xchg
mov
cli
or
inc
mov
inc
loop
loop
dec
pop
inc
mov
pop
mov
push
xor
lret
sbb
add
cld
sbb
fxam
mov
dec
xchg
rcrb
sub
shlb
pop
call
loope
scas
in
mov
out
call
push
pop
das
inc
movsl
or
adc
fmuls
sub
xchg
lods
mov
jb
cmp
int
outsb
dec
imulb
or
and
mov
xor
mov
mov
out
inc
jle
add
push
xor
lahf
pushf
xchg
cld
mov
cmp
leave
push
push
addr16
dec
mov
fbstp
testb
loop
sub
xorl
popf
out
pop
int
inc
sub
es
loopne
lds
inc
pushf
dec
mov
out
lods
loope
ficoml
mov
dec
fdivrl
loope
scas
scas
xchg
ljmp
ret
mov
mov
mov
cmp
out
fnstcw
mov
call
ja
jecxz
fldenv
fdivrs
test
insb
sbb
int3
mov
repz
shll
adc
lock
test
in
mov
mov
nop
sahf
push
gs
mov
arpl
cld
xor
test
cmp
cmp
sbb
mov
dec
int
or
andb
sbb
cmc
and
std
lcall
loope
shlb
imul
sbb
std
shl
push
imul
sbb
cltd
jns
lret
xchg
mov
fists
mov
enter
insb
push
mov
pop
ja
adc
outsb
fwait
stc
jle
stos
push
es
xchg
jp
pop
nop
lcall
mov
fmul
stos
sbb
dec
addl
les
sbb
nop
xor
gs
xchg
jae
icebp
dec
push
jb
inc
dec
nop
cmc
negl
out
inc
mov
pop
and
jb
jl
lret
dec
movsb
gs
fwait
outsb
outsb
or
test
jge
xchg
outsl
mov
rorl
fsubrp
adc
xor
mov
xor
or
mov
xor
fldcw
out
inc
shl
sbb
lds
into
push
inc
cmp
rolb
mov
sarb
mov
cltd
iret
sub
loope
cli
sbb
push
pop
imul
push
and
push
iret
imul
sbb
leave
gs
cmc
repnz
adc
pop
repnz
pop
xchg
in
sub
incb
mov
lock
fisubrs
push
daa
aaa
sub
negb
jle
xchg
sbb
nop
sahf
adc
mov
mov
inc
cltd
cmpsb
fbstp
fldl2t
xchg
jae
shll
jl
cltd
mov
loope
and
push
jl
mov
dec
scas
popa
enter
test
fcmovnb
movsb
into
jnp
aad
xchg
xchg
sub
mov
inc
movsb
das
das
loope
mov
push
dec
mov
mov
mov
inc
sti
cmpsl
mov
jb
pop
mov
nop
jmp
sub
sbb
xchg
xor
loop
in
sub
push
movsl
movsl
sbb
sub
insl
clc
daa
mov
outsl
fisttpl
sbb
std
data16
insl
aad
roll
xadd
insl
mov
add
jne
sti
jge
jns
cmp
pop
out
test
cmp
shlb
dec
mov
mov
jnp
lea
fwait
push
mov
mov
cltd
push
push
movsl
lods
sbb
mov
or
jmp
popa
push
push
mov
add
jne
loope
or
or
jbe
fs
and
sub
fsts
and
mov
mov
or
xchg
or
je
call
cli
xor
push
xchg
adc
mov
imul
mov
fistpll
xor
in
pop
inc
mov
pop
rol
sbb
push
ficoml
call
loopne
sub
imul
dec
loopne
nop
push
sub
push
leave
mov
in
adc
shl
movsl
mov
cld
aaa
pop
sub
xchg
aam
mov
mov
jns
sbbl
imul
mov
inc
sub
fcoml
pop
sub
les
fs
sub
pop
fimuls
pop
cmp
fimull
adc
jnp
push
ror
cmp
pop
daa
xlat
pop
jl
cld
stc
and
pop
in
adc
test
xchg
sub
pusha
sub
push
addr16
enter
dec
repnz
stc
push
or
shlb
push
filds
in
fmul
xor
adc
xchg
cli
push
das
cltd
cmp
add
push
lock
addr16
int3
les
iret
mov
jo
je
nop
mov
in
push
or
dec
sti
imul
or
fistl
call
cli
mov
sbb
aad
mov
cli
pushf
imul
cmp
mov
pop
jg
mov
add
push
and
ss
arpl
inc
popa
dec
imul
jle
daa
jo
jmp
cmp
out
test
ljmp
jbe
loope
fcoml
sub
sbb
dec
and
lods
dec
jg
shrl
cmpsl
out
jae
mov
push
cli
jp
push
jo
aaa
sbb
mov
arpl
lds
imul
and
inc
inc
jne
or
add
bound
mov
mov
cmp
dec
adc
shll
add
enter
adc
enter
push
sbb
outsb
push
xor
gs
out
out
imul
shr
mov
mov
das
xchg
dec
nop
leave
inc
adc
in
stos
mov
mov
insl
subl
je
mov
adc
push
in
cltd
add
hlt
xlat
jmp
out
pop
rcrl
xchg
das
mov
cmp
fidivl
push
mov
rcr
test
inc
sub
icebp
adc
or
shrl
pushf
aam
clc
cmpsb
xor
iret
pop
push
mov
xor
jecxz
ret
fdivl
fdivs
pop
push
popa
sub
lcall
cmpsl
add
shlb
es
stc
jbe
leave
push
sub
out
jns
lods
mov
mov
sbb
repnz
addr16
sub
jmp
sub
pop
or
xchg
fs
popf
repz
jle
std
clc
ficomps
pop
pop
gs
add
jecxz
cli
div
dec
mov
cld
and
jb
add
loop
jbe
push
ds
out
dec
mov
push
outsb
loope
mov
js
adc
iret
cmpsb
ljmp
int3
mov
push
pusha
or
mov
xchg
lods
lcall
xchg
pop
sarl
pop
fldcw
sbb
enter
dec
push
insb
xor
lcall
or
and
por
mov
mov
xor
lahf
insb
and
aam
mov
lods
push
les
mov
ljmp
jg
enter
mov
and
cmp
je
xor
adc
ficompl
jb
pop
ficoms
pop
sub
testb
shrl
fisubl
adc
or
movb
mov
inc
js
jae
push
inc
push
cmp
dec
in
popa
adc
cmp
bound
inc
popa
clc
xor
repnz
mov
mov
add
adc
cwtl
push
scas
js
cli
aam
jns
scas
test
sbb
jnp
and
loope
jno
fs
test
add
mov
lret
arpl
std
push
sar
xor
scas
xchg
imul
xchg
push
mov
imul
adc
push
sarl
in
push
ss
mov
faddp
mov
xchg
imul
sbb
add
mov
loop
fistps
sub
xchg
popa
jle
pop
repz
add
data16
adc
add
and
xchg
aam
out
test
inc
jo
icebp
jae
sub
cmpsb
xchg
sti
push
sub
pop
clc
mov
arpl
sub
lahf
cmpsb
cli
sahf
pop
int3
sbb
pushf
jae
and
xor
sub
cmpsl
dec
pop
pop
lea
lods
xchg
and
xchg
bound
movsl
shrb
clc
pop
inc
pop
push
gs
shlb
insb
cmpsl
pop
cmp
aas
sub
out
in
push
aaa
int
shll
inc
dec
filds
pop
mov
out
testb
and
xchg
pop
dec
jae
push
pop
sbb
adc
cwtl
int3
cmp
adc
jnp
dec
push
cmp
jo
adc
das
sbb
mov
mov
popf
mov
push
and
xor
and
push
dec
mov
adc
ljmp
jo
imul
sbb
aas
xor
cmc
cli
sbb
stc
jmp
or
int
bound
pop
or
add
pusha
scas
inc
sahf
mov
pop
data16
insl
shr
dec
std
xlat
jmp
sbb
fs
or
sbb
movsl
inc
mov
sub
mov
ss
pushf
cmp
adc
jecxz
aad
cmp
push
ss
xchg
adc
test
mov
fdiv
rcrb
xchg
ret
lret
jge
adc
xor
or
sub
cltd
dec
movsb
pop
xchg
fs
sub
nop
pop
scas
mov
jmp
push
lds
lods
dec
loope
push
clc
shrl
xor
or
out
ja
scas
pop
loopne
fidivrl
dec
xchg
jae
hlt
lock
daa
xchg
daa
xor
mov
addl
sbb
and
mov
jnp
push
loopne
sbb
cmpb
dec
push
mov
xor
in
sbb
scas
in
ret
sub
cli
adc
mov
mov
out
call
int
xchg
or
jg
outsb
testb
mov
mov
xor
cli
mov
pop
les
add
adc
mov
call
sub
cmp
dec
pop
imul
fcmovnu
fs
pop
xchg
popa
lret
xlat
cmp
ret
std
jle
aas
lcall
andl
out
sbb
stc
mov
jecxz
adc
add
and
xchg
mov
pop
mov
xor
call
imul
daa
int3
icebp
dec
outsl
lret
cmp
aam
mov
fmul
or
jo
arpl
jp
adc
mov
js
mov
adc
dec
xchg
cltd
mov
lock
daa
mov
popf
adc
rcll
mov
xlat
out
mov
jge
and
sub
dec
insb
add
orb
cs
and
xchg
inc
stos
or
mov
icebp
xlat
int
jbe
mov
jb
jb
dec
xor
imul
jg
mov
iret
xchg
cmp
mov
xorb
fsubs
pushf
popa
les
adc
cmp
push
es
or
jae
leave
sbb
dec
sahf
adc
lds
xchg
sub
xchg
push
xlat
lods
mov
adc
repnz
xchg
pop
test
pop
gs
mov
dec
mov
adc
mov
dec
es
xchg
and
mov
or
shrl
insb
mov
adc
sub
jnp
add
cltd
inc
add
push
push
jl
push
fxtract
sti
inc
test
jo
mov
pop
dec
pushf
mov
mov
xchg
inc
popf
xor
xor
pop
test
leave
cmp
or
data16
add
repnz
sbb
in
mov
sbb
sub
loop
jnp
cmp
adc
int3
mov
in
adc
out
jnp
inc
sarb
jle
xchg
sub
xchg
cmp
mov
dec
pusha
aaa
inc
into
sbb
sub
push
in
sbb
arpl
cmpsb
in
loope
pop
cmp
mov
cs
das
jnp
mov
enter
call
leave
lret
jne
popa
cmp
inc
out
jg
or
int
mov
movsb
loopne
adc
xchg
mov
xchg
add
js
es
add
scas
inc
push
xchg
pop
dec
lock
xchg
pop
icebp
fisubrs
push
pop
fidivs
fcomip
inc
xor
dec
mov
and
ds
or
push
mov
in
or
loopne
and
sbb
cwtl
mov
loop
mov
xchg
loope
adc
cmpsb
add
dec
pop
jbe
xchg
out
sbbb
mov
pop
ljmp
daa
ret
mov
movsl
dec
mov
lock
pop
int3
inc
push
dec
out
mov
inc
out
mov
cmp
mov
fnstenvs
js
adc
mov
jmp
dec
neg
mov
xlat
push
inc
mov
inc
mov
dec
mov
cmc
or
add
mov
mov
aas
clc
push
pushf
adc
stc
jnp
xor
pusha
fdivp
lea
sarb
stos
testb
sbb
div
lahf
xchg
push
push
and
fcomps
cs
stc
out
inc
pop
and
push
movsl
jp
shlb
outsb
stos
orl
imul
addr16
bound
lock
or
jno
outsl
push
dec
adc
jl
jp
lock
inc
inc
rolb
jbe
test
mov
and
sub
mov
rclb
mov
push
mov
cld
xchg
loop
dec
arpl
xchg
xchg
les
outsb
ljmpw
pop
in
add
mov
mov
ret
push
movsl
lds
hlt
gs
push
push
pop
fnstcw
cli
int3
push
mov
std
sbb
rolb
jle
mov
mov
mov
mov
lret
jbe
cld
push
add
adc
and
xor
ret
clc
shr
jecxz
repz
test
cwtl
mov
inc
js
push
add
adc
and
xor
ret
clc
shr
jecxz
repz
test
cwtl
mov
inc
jl
data16
dec
add
adc
sbb
or
stc
shr
jecxz
repz
mov
inc
pushf
push
mov
jae
add
adc
and
roll
fdiv
mov
pop
loopne
lock
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
insl
int3
inc
iret
jne
in
jo
mov
sbb
pop
or
add
add
add
add
jl
jl
bound
or
push
add
popa
add
push
adc
add
add
sub
xchg
add
adc
add
add
add
add
pop
add
add
add
fwait
add
adc
imul
sub
mov
push
add
add
and
daa
add
add
add
mov
pop
add
sub
mov
add
cmp
add
jge
pop
add
add
ja
xor
insl
add
push
add
lods
add
add
add
add
pop
add
add
mov
dec
add
add
add
add
fiadds
jo
sub
dec
add
cmp
mov
and
xor
syscall
add
popa
add
add
add
add
mov
jge
scas
add
outsb
add
test
mov
add
add
add
adc
scas
add
add
add
imul
add
add
xor
push
add
cmp
add
add
outsb
add
add
add
add
add
add
push
add
add
add
mov
push
add
cmc
add
push
sub
pop
add
jb
mov
add
dec
add
add
cmp
push
or
add
imul
add
cmp
mov
add
add
add
add
add
adc
imul
add
add
add
add
add
add
sub
popa
add
xor
test
lods
add
add
add
add
incl
pop
add
add
add
add
add
imul
mov
add
add
mov
add
bound
and
xor
imul
add
popa
add
add
add
push
add
add
add
pop
add
add
add
add
outsl
add
add
add
add
add
push
add
add
add
imul
pop
add
sbb
or
arpl
pop
add
add
add
pop
add
push
add
pop
add
add
add
add
or
or
inc
add
mov
loope
fwait
add
add
add
pop
add
add
lea
push
add
add
sbb
outsl
add
add
add
add
add
mov
add
adc
add
add
sub
syscall
xor
imul
push
push
add
add
push
filds
cwtl
add
add
add
add
add
test
cmp
jne
ja
dec
add
add
add
inc
add
ja
dec
add
add
bound
test
les
push
add
add
push
adc
syscall
jnp
mov
push
add
add
add
add
cmp
mov
add
add
add
add
add
add
dec
add
add
add
add
add
add
sbb
arpl
flds
aam
and
dec
add
add
add
iret
add
add
pop
add
add
mov
cmp
add
add
push
add
add
add
add
add
dec
add
add
add
add
sbb
imul
add
add
imul
add
add
inc
scas
dec
das
adc
scas
je
loopne
iret
cmp
push
insl
mov
jmp
cmpsb
mov
mov
or
push
outsl
popf
sarl
and
in
and
mov
nop
or
xor
lds
in
and
mov
inc
stos
mov
das
popf
add
sbb
inc
incb
adc
sub
pop
subb
push
inc
push
lret
pop
lcall
pop
mov
bound
lahf
outsb
xchg
sarl
sub
lret
cmpsb
mov
pop
andb
push
dec
movsl
dec
xchg
lods
or
insb
repz
xchg
repnz
popa
mul
cmp
aam
movsl
lea
rcl
jle
push
aas
cld
mov
in
in
dec
mov
cmpsb
xchg
ds
xchg
daa
test
mov
hlt
rorl
fnsave
xchg
pop
pop
test
call
push
daa
adc
insb
mov
sub
test
cmpsb
jl
popa
and
inc
into
push
or
fsubs
xchg
fs
fstl
adc
mov
sub
pop
jns
ss
push
adc
lods
adc
inc
mov
daa
sub
mov
ret
adc
cmp
notb
out
stos
pop
add
mov
aas
add
pop
subb
cld
or
adc
jp
dec
or
adc
imul
fucomi
aas
jno
jp
test
out
mov
adc
sbb
jp
and
popf
pop
mov
mov
xchg
popf
pop
push
pop
insb
out
mov
lods
pop
shr
cltd
dec
dec
push
xadd
jle
sti
pop
ret
mov
push
lcall
mov
in
mov
add
sub
into
push
and
in
mov
and
xchg
jb
lret
in
mov
imul
xchg
xchg
les
mov
inc
lret
jb
adc
jmp
mov
and
addr16
sarb
pop
cli
insl
sbb
sbb
xor
andb
and
popf
inc
insb
inc
sti
xchg
punpckhwd
fsub
add
mov
cmp
push
push
dec
mov
test
cmpsb
out
ret
int
or
mov
mov
and
cli
popf
adc
jbe
pop
push
shlb
and
fs
movsl
cmp
sti
cmp
stc
push
xchg
push
xchg
pop
add
fsubrs
js
das
das
and
xchg
add
sub
ss
sbb
das
out
pop
cmpsb
sti
fs
js
shl
imul
sbb
stos
xor
shr
pop
test
or
dec
mov
rcll
nop
clc
outsl
in
imul
out
pop
rorb
xlat
jae
jns
and
sbb
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
