call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
rorb
repnz
loop
es
add
scas
ret
push
xor
jb
bound
adc
popa
and
inc
shlb
loop
xchg
repz
mov
add
insb
add
sbb
arpl
adc
inc
lret
and
mov
mov
lcall
in
popa
inc
sub
and
or
jne
mov
out
rol
push
aam
mov
inc
sbb
adc
mov
pop
aas
mov
xchg
aaa
adc
jnp
adc
adc
sub
mov
cmp
dec
add
sahf
out
mov
push
arpl
xchg
and
jae
mov
add
insl
repz
int3
inc
jae
es
in
jb
pushf
mov
cmpsb
dec
dec
jg
add
insl
xlat
lcall
pusha
test
jae
xchg
add
and
int
xor
sbbb
inc
xchg
stos
aas
lods
xor
dec
paddsb
sbb
push
pushf
xor
sbb
loop
test
xchg
jecxz
or
in
add
or
fwait
sub
sub
xchg
rclb
mov
mov
add
push
sbb
pop
inc
adc
mov
repnz
cmpsb
pushf
adc
mov
daa
jne
jbe
adc
imul
mov
scas
in
ret
mov
ficoml
mov
and
bound
adc
arpl
push
and
mov
mov
xchg
repz
shll
and
bound
adc
arpl
push
and
mov
je
xor
shlb
add
jne
test
jp
dec
xchg
sbb
loop
xchg
sub
sbb
push
or
or
push
mov
pop
inc
leave
sub
xchg
push
repz
movsl
mov
jmp
fstps
xor
xchg
shlb
in
adc
mov
mov
xor
stos
fstl
jl
lods
scas
inc
mull
add
lds
jno
insl
lock
xor
imul
test
scas
xor
pop
mov
scas
jns
dec
dec
inc
bnd
out
shll
arpl
pop
or
or
xchg
jecxz
es
test
cmpsl
popa
adcl
xlat
xchg
cld
dec
loope
dec
scas
cmpsl
iret
and
and
add
push
fadds
mov
push
cmp
sahf
push
xchg
shl
jecxz
push
cltd
and
mov
mov
mov
cmp
mov
xor
call
pusha
inc
jmp
xor
mov
and
xchg
push
ss
divl
dec
inc
xchg
mov
adc
popa
dec
nop
shrb
xchg
inc
xchg
sti
mov
jnp
insb
or
sbb
push
jnp,pn
dec
ss
adc
cmp
fmul
sbb
xchg
loop
push
push
icebp
mov
testl
pop
sbb
int
ss
and
xchg
or
add
repnz
sub
mov
andl
std
imul
dec
fs
xor
test
or
xor
xchg
scas
xchg
and
push
push
icebp
xchg
ljmp
fdivrl
ficoml
adc
es
test
je
and
pushf
or
cmp
mov
mov
orb
lcall
les
add
xchg
or
pusha
jle
gs
mov
adc
add
and
pusha
pop
fldenv
inc
or
imul
popa
add
mov
jne
addr16
xchg
pop
pop
data16
je
loopne
sub
jne
sbb
adc
or
mov
push
outsl
aam
mov
adc
sbb
fsts
repz
sti
movsb
call
enter
nop
cmp
push
or
loop
shll
jae
mov
out
sbb
cmp
xchg
out
jbe
pop
inc
icebp
pop
idivl
aad
or
std
sbb
cmp
js
test
push
cmpsb
jge
rcll
push
push
lahf
xchg
and
inc
stos
leave
pop
fadds
mov
test
gs
add
icebp
pop
xchg
scas
adc
insl
inc
sarb
mov
js
in
int3
pop
imul
sbb
add
ds
fwait
in
jl
xor
add
loopne
out
shrl
hlt
roll
test
stos
xchg
dec
stos
xor
popa
push
and
pusha
fidivs
inc
cld
mov
leave
xchg
loope
or
mov
adc
std
std
sarl
push
popf
or
mov
push
cmp
orl
loop
dec
jnp
repnz
jno
adc
subb
mov
mov
mov
stc
outsl
and
pop
jae
mov
add
shrl
adc
xor
leave
mov
sbb
jecxz
nop
push
movsl
xlat
enter
movsb
sti
fsub
mov
or
arpl
and
jne
mov
pop
mov
stc
cmp
pop
dec
fucomp
inc
dec
cs
aad
pop
jnp
cli
jo
fs
push
add
adc
daa
pushf
jle
inc
mov
push
loopne
and
test
push
std
pusha
loope
fxch
test
popf
jecxz
cwtl
cmp
sti
data16
lret
sbb
aas
sahf
pop
aas
imul
loopne
mov
cmp
inc
stc
cli
shll
mov
xchg
cltd
orb
xor
jb
sub
lods
adc
in
daa
popf
mov
out
lds
cltd
mov
push
adc
lock
lret
jmp
mov
test
aas
shlb
std
xor
mov
data16
and
loopne
mov
lds
scas
loop
and
sar
outsl
call
negb
jae
in
mov
out
mov
cld
push
fiadds
inc
repz
fiadds
mov
push
add
fdivl
xchg
lods
sub
fucom
mov
mov
and
inc
mov
je
pop
lods
stos
in
nop
out
xchg
add
mov
jecxz
gs
mov
out
test
lock
or
sahf
cmp
dec
test
mov
xor
push
cmp
xchg
stc
cmp
or
xchg
add
loope
cmp
stc
shl
aaa
in
movsl
mov
mov
rolb
add
loope
mov
cmp
add
repz
les
sbb
xor
out
je
in
into
xchg
mov
aam
mov
cmpsl
movsb
cld
in
and
aas
imull
pop
leave
push
mov
mov
into
out
int
and
shlb
or
jne
fwait
stc
lods
mov
mov
ret
xchg
es
ss
mov
and
xchg
mov
punpcklbw
sub
je
or
jo
push
jne
vcomiss
add
sub
add
lahf
pop
adcb
sbbb
push
and
dec
ficompl
dec
xchg
sbb
test
push
xchg
bswap
repz
and
jmp
pop
stos
cmpsb
rclb
cld
xor
mov
test
and
jp
and
imul
divl
xor
add
mov
pop
lret
jne
fists
aaa
das
cmp
lahf
jbe
xor
push
mov
jecxz
aam
andb
sbb
mov
scas
lret
mov
dec
leave
hlt
sbb
movsb
pop
jnp
fistpll
ja
mov
inc
fistpl
xchg
pop
inc
dec
pop
and
inc
mov
cli
mov
jmp
mov
mov
int
push
ja
jl
popl
dec
sub
fdivl
rcl
imul
or
mov
js
ret
mov
mov
jne
pop
pop
cli
stc
shrb
push
mov
jno
adc
jg
sahf
bound
leave
and
sub
iret
mov
insl
inc
mov
test
cmpsb
loope
mov
std
outsl
aaa
fwait
cs
imul
sub
and
in
sbb
or
push
out
idivl
mov
pop
mov
mov
mov
sbb
int3
jl
icebp
lock
outsb
lods
in
ds
pop
dec
shrb
or
adc
jmp
cs
pop
adc
sahf
push
push
pop
lret
fiadds
push
faddl
dec
pop
xchg
icebp
sarl
and
test
in
adc
cmp
cmpsb
addr16
inc
call
ret
ljmp
neg
adc
test
pop
lahf
js
xchg
aaa
sahf
and
andl
in
or
mov
imul
inc
dec
or
cmp
adc
cmc
adc
icebp
sbb
jo
adc
mov
mov
outsl
push
pusha
push
popa
sub
scas
mov
push
outsb
cwtl
push
mov
push
and
mov
mov
xor
enter
adc
in
aas
cmc
and
leave
sbb
pop
fidivs
xchg
add
jle
sub
inc
lahf
arpl
mov
divb
pop
ss
push
int
ucomiss
icebp
adc
outsl
jmp
push
in
or
clc
int3
jbe
inc
pop
xchg
push
cmp
das
dec
je
sarl
adc
das
xchg
orb
mov
and
or
add
mov
sahf
repz
or
push
jmp
jmp
xor
ret
les
jo
shll
enter
xor
test
call
lds
dec
push
fcompl
mov
or
movsb
xor
aam
mov
dec
or
sbb
push
jge
and
pop
push
fbld
fdivrs
xchg
mov
test
pushf
inc
fs
cmp
clc
xor
dec
inc
and
das
adc
mov
dec
mov
xchg
ret
xchg
arpl
dec
sbbl
stos
mov
xor
cmp
adc
sar
jb
add
ds
xchg
cmp
adc
in
fstps
cs
jle
xchg
cmp
lcall
jg
sar
or
mov
adc
jg
mov
add
addr16
ljmp
mov
cmp
xchg
lock
ss
mov
add
push
std
mov
fidivrs
jle
push
push
fcomp
loope
push
test
jne
pop
fwait
push
dec
jmp
pop
xor
adc
lret
loop
jns
jno
in
movsb
dec
jge
ja
lods
in
rorl
movsb
dec
push
fcoml
sbb
mov
mov
fcom
repnz
xchg
lods
jecxz
ret
add
aas
hlt
out
mov
adc
fdivl
dec
cli
sahf
pop
sti
lods
xor
ret
add
pusha
lret
das
vlddqu
cli
movsl
jmp
mov
pop
xchg
imul
repz
and
lods
inc
inc
outsl
jae
xchg
orb
aam
ret
out
push
mov
jne
sbbl
hlt
test
fs
hlt
push
or
cltd
repnz
mov
xchg
push
push
cs
push
leave
mov
mov
mov
inc
ret
sbb
cmp
or
ret
arpl
test
dec
mov
or
adc
out
lds
mov
lds
lods
mov
xchg
ja
inc
mov
stos
repnz
mov
dec
xchg
xchg
jle
dec
test
fdivp
pop
push
or
in
lods
push
xor
das
mov
and
das
cmp
xchg
ja
mov
imul
repz
fcompl
add
sbb
jg
sub
fxch
jmp
movsl
jbe
push
lods
sub
pushf
insb
pop
adc
and
mov
and
or
loop
or
testl
int3
shlb
add
dec
les
mov
loopne
pop
mov
mov
jae
hlt
ficoms
hlt
xor
lds
movsb
in
shrl
adc
mov
inc
mov
fidivs
jnp
call
jg
inc
mov
or
lahf
push
fcoms
inc
scas
inc
inc
lret
and
push
bound
sbb
ficomps
mov
mov
std
or
lcall
add
sbb
mov
mov
jnp
pop
dec
adc
or
inc
les
mov
bound
adc
add
xchg
xchg
xchg
fwait
loop
adc
scas
and
fisubl
pusha
test
mov
outsl
out
fdivs
add
fimull
out
shlb
cmpsb
in
inc
push
xor
es
xor
or
xlat
lods
pop
fs
xchg
sub
mov
addr16
inc
sarb
lds
fidivl
add
les
pop
int
sbb
int
push
shrl
dec
mov
fs
push
jmp
aas
hlt
xorb
pusha
ret
dec
push
push
push
shlb
jns
xchg
das
lea
ror
test
jl
inc
je
js
cmp
or
adc
leave
and
pop
dec
sub
es
hlt
std
mov
pop
je
sub
or
and
push
inc
fcmovnbe
pop
mov
adc
test
fs
push
push
popf
pop
sarl
arpl
sbb
ja
ss
cmpsl
cmpsb
xor
sub
inc
dec
xor
push
pop
sbb
test
test
pinsrw
xchg
out
jo,pt
add
sub
das
mov
pushf
cltd
out
das
inc
lods
mov
mov
mov
add
jnp
iret
rorl
int
xchg
loopne
call
inc
fwait
sub
ret
out
xchg
sbb
inc
mov
imul
pop
mov
xor
test
nop
lds
outsb
inc
sahf
sar
roll
sub
clc
movsl
icebp
push
pusha
aam
xor
add
lock
scas
jb
mov
lret
std
xchg
and
in
and
xchg
xchg
cmc
popf
and
lods
aas
sbb
push
in
aam
adc
cs
and
xor
mov
lds
dec
cmp
mov
inc
mov
cmp
cmp
dec
test
xchg
sub
push
inc
mov
and
pop
pop
aaa
push
das
sahf
mov
jl
push
jp
mov
sub
xor
jecxz
stc
mov
imul
adc
fwait
sbb
in
loop
adc
cld
cld
and
into
lret
pop
mov
sub
imul
rolb
xor
mov
cltd
push
sub
xor
add
inc
pop
dec
jge
mov
jno
push
push
pop
jge
push
mov
jne
cmp
sbb
repz
mov
fidivrl
mov
ljmp
lods
jg
out
gs
xchg
xchg
adc
das
pop
sarb
dec
or
aam
sub
mov
cmpsl
pop
js
cmp
lods
bound
push
jl
dec
in
popa
div
bound
pop
xor
repnz
scas
pop
test
xor
jbe
das
xor
icebp
jecxz
out
mov
xor
pop
xor
jo
cli
stc
ds
mov
test
or
push
inc
insl
int3
and
test
cmpsb
ss
ja
jnp
nop
jne
xchg
popf
stos
rcll
lret
lock
lods
push
mov
fsubs
jmp
xor
vaddps
push
xchg
jo
fucomi
cmpsl
test
pop
xor
pusha
mov
pop
dec
inc
in
lock
jns
cmp
pop
out
mov
adc
mov
adc
fnstenv
pop
xchg
call
add
aaa
cli
inc
cs
xchg
in
and
cmp
loopne
cmp
inc
xor
and
gs
pop
popf
mov
add
lret
xchg
inc
mov
add
insl
inc
mov
xchg
mov
gs
adc
movsl
pop
shlb
js
lret
jmp
lcall
dec
movsl
pop
sub
aad
xor
xchg
xor
pop
and
pop
sti
lods
call
les
cld
in
xchg
xchg
and
shl
aaa
push
jnp
push
pop
fwait
shll
and
sub
push
aaa
addb
lret
adc
call
xchg
mov
fsubrs
clc
ss
cmpsb
sub
cmp
add
xchg
xchg
mov
cli
cmp
test
mov
mov
rcrl
jle
pop
repz
dec
and
repz
xchg
lea
mov
int3
and
xor
or
hlt
add
jp
pop
mov
or
and
sbb
mov
pushf
or
lcall
mov
mov
sar
lods
jle
mov
mov
ret
inc
lea
dec
sub
fneni(8087
dec
xchg
jno
mov
or
inc
sbb
xchg
gs
nop
out
xchg
fbld
cmc
sbb
call
xor
cmp
push
cs
sbb
adc
das
repz
xor
xchg
fbld
mov
movsl
adc
ja
cmp
js
dec
in
lods
sub
ret
je
test
cmp
subl
jns
icebp
loopne
loope
push
adc
fsubrs
jbe
mov
sub
cmp
cmpsl
inc
sbb
iret
int
ljmp
adc
and
pop
sbb
push
jo
jge
sti
mov
cmp
jbe
out
std
xchg
sub
push
sub
xchg
xor
mov
mov
mov
jp
xchg
mov
imul
in
je
xor
ss
fcmovbe
mov
ja
and
jnp
dec
stos
or
sti
daa
cs
ja
push
dec
movsb
push
mov
push
add
cmp
add
data16
inc
pop
cmp
mov
jae
push
pop
fld
cmp
movsl
adc
daa
sbb
fidivrs
mov
loope
xlat
pop
jge
mov
adc
sub
xor
and
mov
notb
outsl
pop
in
cs
into
or
sub
fildll
jb
cmpl
mov
xchg
scas
ljmp
jge
aas
or
das
shlb
xorl
xchg
std
lret
xchg
lret
in
adc
sub
sub
xchg
insb
xor
fistpll
adc
lret
pop
dec
or
xor
add
mov
cmp
mov
sub
xchg
mov
mov
out
stc
std
lock
ret
iret
ljmp
lahf
push
mov
fisubl
mov
add
xchg
push
cmp
or
ds
adc
sbb
int3
arpl
cmp
jno
and
jbe
inc
push
insl
pushf
lds
cmp
fnstcw
dec
jae
cmp
fists
ret
hlt
mov
sub
inc
mov
inc
ret
sti
test
mov
faddl
pop
and
jne
or
in
in
in
cld
mov
test
in
xor
bound
stc
loop
lret
popa
jb
fsts
jecxz
dec
add
push
mov
pop
mov
out
jns
ja
pop
into
and
adc
xchg
scas
test
add
lods
test
push
mov
sub
imul
stc
jae
mov
push
outsb
in
ljmp
imul
or
insl
xor
aad
outsl
jo
push
xchg
mov
outsb
mov
jbe
mov
sub
test
mov
ret
mov
xor
adc
enter
sbb
outsb
out
nop
popf
cmpsl
lret
cmp
sbb
shr
adc
data16
inc
outsl
shrb
push
jg
push
add
xchg
loop
add
in
dec
loop
out
lea
dec
sub
inc
adc
mov
jae
or
int3
or
mov
mov
pop
andb
inc
or
jo
std
ds
int
jge
jno
push
cltd
das
out
lods
enter
or
movsl
imul
mov
or
jne
lea
inc
mov
sbbl
or
xchg
fbld
xor
cmp
popf
mov
jecxz
sub
out
cltd
mov
or
sbb
std
dec
call
mov
mov
pop
xchg
and
jno
shll
aaa
int3
gs
push
mov
mov
mov
and
xchg
push
push
pop
fnsave
mov
stos
cli
mov
mov
cwtl
in
xchg
pop
call
cmp
sbb
push
sub
fistpl
into
scas
inc
or
xchg
jg
add
cmp
cmp
data16
push
jecxz
mov
add
push
jl
test
mov
cli
mov
mov
outsb
fsubl
sbb
in
inc
movsl
daa
add
js
cmp
xor
aaa
mov
jmp
xchg
mull
dec
mov
sbb
scas
mov
ret
je
pop
stc
imul
jnp
loop
pusha
xor
addr16
aam
and
dec
insl
mov
xlat
rorb
rorl
mov
jbe
inc
xor
mov
iret
ret
jge
repz
add
cs
pop
xchg
ret
add
cmp
fs
sub
inc
cmpb
aaa
mov
sub
push
fldenv
xchg
xchg
sub
test
icebp
mov
int3
aas
addl
cld
push
push
test
sub
push
leave
xor
lock
add
mov
rcrl
xchg
mov
cli
push
mov
add
cwtl
add
pop
movl
stos
movsb
inc
or
xchg
je
sub
jle
jl
adc
or
in
pop
adc
xchg
fwait
mov
and
das
and
stos
lahf
adcl
mov
pop
push
mov
fsubp
les
xor
pop
add
lds
jecxz
aaa
adc
mov
push
sbb
inc
fs
mov
fidivrs
dec
popf
cs
nop
dec
or
jg
xchg
ds
in
lahf
add
push
mov
cli
clc
mov
dec
movsb
and
jnp
not
jo
movsb
pop
rolb
mov
iret
ficomps
pop
gs
into
pop
mov
and
dec
add
mov
fdivr
cmp
les
jmp
or
aam
mov
mov
cmp
ret
sub
ja
je
sbb
insb
and
and
je
cmp
pop
xchg
cmpsb
pop
cmp
mov
xchg
repz
shll
and
bound
adc
arpl
push
and
mov
mov
xchg
repz
shll
and
bound
adc
arpl
push
and
mov
jmp
jmp
adcl
mov
and
bound
adc
arpl
jae
inc
shlb
loop
nop
repz
push
and
lods
int3
mov
je
sti
mov
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
dec
cwtl
jle
outsb
inc
pop
enter
lods
cmp
les
decb
out
jns
imul
cltd
jle
outsb
clc
push
call
dec
cmp
sub
jns
or
js
push
scas
mov
jle
outsb
clc
push
call
cs
sub
jns
insl
sbbb
add
js
daa
fxch
adc
or
enter
sti
sub
movsl
pop
movsl
je
cld
sti
cmovno
push
pop
and
jecxz
push
out
push
mov
movsb
dec
into
xlat
xor
test
test
mov
cmp
lods
jmp
rclb
in
cmp
js
dec
clc
notl
popa
test
or
pop
mov
pop
les
cmp
enter
out
xor
cmp
imul
inc
scas
inc
sahf
push
mov
sbbl
cs
and
dec
add
out
sub
add
inc
pop
test
adc
or
test
mov
cmpsl
fdivrp
lret
test
or
push
push
out
test
cwtl
jle
outsb
clc
push
call
cs
sub
sbb
or
js
push
call
hlt
aas
das
mov
pop
lods
pop
push
scas
lcall
ljmp
out
jmp
in
rorb
imul
mov
or
push
cli
into
pop
xchg
mov
ds
sub
sbb
or
js
push
scas
mov
jle
outsb
clc
push
call
cs
sub
sbb
or
js
push
scas
mov
adc
test
stos
imul
fwait
mov
jns
aas
in
add
jge
cmp
shr
icebp
pushf
jmp
xchg
fs
out
push
mov
test
xor
push
clc
aam
loopne
jae
sarl
push
sbb
jnp
aas
adc
ret
push
sbb
sub
insl
cmp
nop
mov
comiss
jmp
mov
dec
jg
mov
std
sbb
mov
or
stc
fistpl
sub
dec
add
negb
loope
into
stc
fcomps
push
push
mov
mov
xchg
mov
das
jmp
imul
mov
jb
mov
insb
xchg
mov
fcom
cltd
call
decb
push
filds
or
imul
mov
idivl
mov
sub
sbb
xchg
fs
sbb
das
mov
lahf
fsubrl
inc
inc
sub
adcl
aaa
adc
cmp
fidivl
je
cltd
out
xchg
aas
jge
mov
mov
dec
sbb
negb
push
sti
fs
fstps
cmp
jl
lds
pop
push
stos
xchg
mov
imul
cmp
sub
inc
or
lea
sub
mov
inc
pop
inc
mov
pop
xchg
xorb
inc
testl
xchg
push
mov
out
mov
mov
jmp
leave
lea
in
fisttpll
dec
hlt
es
jo
jmp
lods
int
movsb
and
aaa
mov
loop
in
jg
xchg
push
dec
out
sbb
pop
jl
mov
dec
cltd
push
pusha
mov
imul
ret
push
js
or
arpl
sbb
xor
xor
out
daa
sub
cmc
loopne
out
cmp
fdivl
popa
and
mov
das
ret
xor
mov
and
mov
icebp
pop
mov
push
xchg
lss
icebp
jns
in
iret
sahf
pop
inc
leave
sub
call
mov
push
jb
sub
lods
cmp
gs
or
xor
in
pop
roll
bound
adc
leavew
xor
ret
stos
push
push
out
lcall
in
mov
out
sub
mov
pushf
into
adcl
icebp
push
cmpsb
test
jnp
scas
rorb
dec
fcompl
dec
sarb
jae
addl
aaa
push
sbb
mov
cli
mov
mov
sub
mov
mov
daa
popa
popa
inc
icebp
sub
filds
mov
mov
sub
aaa
int3
stos
adc
mov
rcl
fiaddl
add
shlb
gs
in
cmp
pop
mov
fildl
daa
outsb
dec
adc
sub
or
adc
pop
xor
movsl
rclb
or
push
sbb
dec
stc
cli
jnp
ja
mov
mov
push
push
cmpsl
push
mov
add
pop
imul
pusha
or
push
xchg
outsb
push
mov
ss
or
test
leave
xor
incb
cmpl
lods
data16
mov
repz
adcl
cmp
inc
mov
popa
fldcw
sbb
divl
push
mov
push
and
inc
gs
fistl
mov
pop
cmp
sbb
add
hlt
sbb
inc
xor
jo
into
xchg
ljmp
add
xor
cltd
sbb
jle
mov
add
mov
push
dec
jns
inc
lret
inc
cmc
gs
cli
pop
stos
jbe
push
sbb
shrb
push
add
mov
pop
and
scas
add
nop
subl
incl
jl
shrb
out
scas
push
sub
mov
ret
je
fadd
xchg
test
xor
jmpw
std
mov
andb
mov
in
xlat
adc
insl
out
jge
xchg
inc
xchg
mov
out
cmc
ljmp
aam
mov
jb
je
insb
popf
out
cmpsb
arpl
mov
subb
jecxz
pop
daa
inc
xchg
addb
sub
enter
and
or
lods
loop
shlb
leave
dec
call
xchg
inc
loope
pushf
mov
insl
jl
mov
bound
imul
pushf
add
xor
jnp
fcoml
xchg
mov
lock
popf
mov
push
int
movsl
mov
daa
call
in
lock
push
dec
add
ljmp
sub
sub
mov
loope
subl
sub
pop
xchg
in
divb
call
xorl
xchg
imul
hlt
or
insb
jecxz
sbb
sbb
sahf
call
jo
xchg
divl
fdivrs
gs
shll
jl
in
inc
adc
pop
xchg
inc
cmp
cli
or
popf
shlb
pop
pop
xchg
bound
cmp
loope
data16
or
dec
stos
je
add
movsl
fcmovu
xlat
hlt
xchg
push
aam
mov
loop
push
out
in
test
xchg
sub
mov
jne
jle
repnz
outsl
subb
push
jecxz
adc
mov
aam
imul
jp
addl
and
adcb
loop
push
sub
xchg
lret
fidivs
cs
es
cs
xchg
in
pop
inc
xchg
push
hlt
int
jmp
pop
aam
ja
sbb
divl
mov
sti
stos
or
add
mov
sub
mov
loope
mov
arpl
fimuls
fwait
lret
jmp
cmpsb
jo
dec
aas
fstpl
sarl
int
mov
insb
sbb
mov
jecxz
mov
add
dec
addl
es
stos
adc
dec
add
lret
mov
std
pop
jmp
jle
stos
sar
imul
pop
pop
jne
inc
push
dec
shlb
or
insl
je
sti
in
stos
sub
push
push
dec
sahf
in
orl
test
ret
and
cmc
scas
xlat
sarl
fcoml
cmp
xor
leave
cltd
out
in
mov
xor
mov
dec
push
inc
scas
cmp
out
cmc
mov
add
mov
sbb
ficoms
pop
push
lea
stos
lods
stc
dec
lods
shlb
ret
stc
pop
sub
jge
dec
sub
jno
fldt
pop
jle
jecxz
int
xchg
test
int3
or
scas
cmp
in
scas
test
sub
jbe
fisubrl
adc
and
xchg
test
mov
push
js
adc
mov
test
pop
scas
xlat
pop
sbbl
call
mov
add
inc
and
out
hlt
stos
xchg
adc
mov
test
mov
lods
dec
pop
jg
sbb
pop
addb
hlt
lods
loop
rcr
mov
ret
and
sbb
jge
shl
adc
js
popf
and
clc
pop
push
sub
dec
out
xor
dec
push
test
sub
mov
mov
test
pop
test
xchg
aad
inc
int3
sub
sti
cmp
insl
rcll
mov
imul
loope
or
faddl
adc
and
ljmp
mov
push
xchg
and
sti
movsb
fisubs
xchg
add
push
lret
insb
add
jle
jecxz
adc
in
mov
lahf
repz
lret
adc
sub
cmp
int
ret
pop
pop
pop
cmpsb
das
pop
fldt
push
stc
adc
cltd
test
or
cmp
adc
push
ljmp
mov
or
push
push
push
sbb
sbb
mov
repz
adc
mov
shl
push
mov
or
inc
jb
insb
pop
inc
aad
pop
imul
ret
or
adcb
cmp
lret
and
inc
mov
add
add
and
outsl
out
in
fisubrs
cmpsb
xchg
daa
sub
jo
aas
or
dec
jne
adc
stc
push
jmp
lahf
adc
inc
dec
mov
pop
sbb
jle
rcrl
push
pop
sbbb
mov
mov
fisubrl
imul
in
scas
mov
adc
dec
out
aam
xchg
pop
cmp
stc
addr16
sbb
cmpb
dec
cld
cmpsl
and
mov
ja
add
pop
ffree
pop
mov
push
rcr
mov
dec
xchg
movsl
aad
in
mov
aas
shrl
bound
xchg
jge
mov
in
adc
or
stos
sub
cmp
jmp
rol
adc
faddp
push
scas
data16
add
lock
incb
lret
push
mov
enter
or
pop
mov
cmp
movsl
inc
mov
pop
add
mov
fcmove
movl
pop
loopne
outsb
cmpsl
add
push
jmp
push
hlt
shll
lret
mov
lahf
popa
dec
push
pop
cmpsb
test
cmpsb
aad
xchg
dec
push
jmp
push
adc
cmc
in
mov
jmp
inc
or
cmp
shll
pop
mov
mov
xor
inc
out
je
lods
inc
jo
and
scas
pop
mov
repnz
jae
or
push
cmpsl
orb
clc
mov
pop
test
jl
ds
mov
cmpsb
leave
cmp
add
xchg
and
movsb
ret
aam
popa
pop
in
aaa
mov
dec
scas
sub
xchg
sub
mov
pop
and
sub
jg
scas
int3
lock
int
mov
xor
ficoms
and
pop
int3
adc
mov
dec
xor
aas
push
push
lret
imul
push
fnstcw
add
out
leave
aas
pop
and
mov
insb
sbb
aas
sbb
mov
adc
dec
sub
pop
push
imul
aad
adc
mov
push
fldl
or
sbb
frstor
pop
loope
pop
push
mov
adc
add
sub
pop
sub
or
arpl
sbb
inc
xchg
adcb
inc
sub
cmpsb
fldenv
mov
xor
in
insb
cmp
or
stc
push
lods
mov
shl
mov
fstps
ret
cmpb
fisttpll
inc
xchg
mov
bnd
mov
aaa
cmpl
fs
stos
xchg
out
adc
fistl
cmc
jmp
push
jae
xchg
jbe
orb
icebp
addr16
mov
sub
out
sbb
inc
xchg
test
push
test
push
movsl
js
rcll
mov
or
je
and
movsl
dec
or
dec
and
adc
sarl
or
mov
push
xor
movsl
push
mov
jl
sahf
add
pop
jmp
scas
cmpsb
add
pop
cli
cltd
cmc
and
jmp
int3
movsb
cmpsb
stc
clc
mov
jp
aas
inc
test
cmp
add
nop
rorb
lock
inc
sbb
lock
push
mov
adc
sub
jmp
cmpsb
and
js
stc
outsb
push
push
outsb
push
add
sbb
or
pop
jno
mov
mov
and
aam
push
cmpsl
jo
xchg
jns
dec
js
ret
lods
sbb
xorb
lock
mov
fnstenv
push
roll
in
xor
jle
jg
adc
and
push
bound
sub
dec
mov
mov
mov
arpl
adc
lcall
or
mov
dec
repz
mov
iret
mov
leave
out
dec
xor
inc
cmp
xchg
pop
mov
push
test
xor
and
add
cli
add
lea
ss
ja
rcrb
scas
loopne
and
pop
xlat
inc
shlb
popl
insl
lret
out
arpl
ja
ds
repnz
nop
jnp
xlat
icebp
jbe
jp
stc
sub
aaa
sbb
push
js
adc
pushf
xchg
and
adc
stos
loop
adc
into
push
mov
pushf
and
in
insb
aas
fs
dec
in
pop
xlat
outsl
ss
lahf
ror
sarb
mov
jnp
scas
sub
shrb
push
rcrb
pop
add
mov
mov
test
xlat
cmp
xchg
ss
outsl
lods
ja
out
ja
aam
jg
jmp
ret
cmp
push
push
xor
or
movsb
xchg
fnsave
adc
bound
cmpsb
xchg
nop
enter
and
insl
jno
icebp
xchg
ret
movsb
fimuls
add
lahf
arpl
cmp
lret
pushf
js
aas
adc
mov
jle
arpl
pop
sbb
jo
repnz
xchg
mov
or
push
cwtl
push
stos
shlb
rorb
xchg
sub
hlt
cs
dec
mov
sbb
add
notl
pushl
push
push
jp
mov
push
sarb
xchg
lcall
lahf
add
jp
mov
add
stos
insb
mov
push
add
es
xchg
jmp
and
dec
pop
mov
aas
out
dec
gs
test
aam
sub
fmul
fimull
mov
sub
pop
inc
jle
jo
int3
lahf
pop
js
movsl
int3
popf
stos
push
cmp
out
pop
inc
cmp
pop
push
sub
frstor
ret
adc
dec
sbb
stc
pop
mov
stos
fmul
aaa
pop
out
scas
jo
mov
mov
rorb
xorps
mov
mov
and
lock
xor
mov
push
xchg
movsb
clc
testl
pop
cmp
int3
jno
sbb
mov
sub
test
push
pop
mov
cmp
stos
loope
or
repnz
aam
lods
aad
hlt
add
repz
ja
cmp
xchg
loopne
pushf
daa
pusha
sub
cmp
jnp
xchg
dec
mov
pop
ficoms
dec
mov
jge
rolb
adc
shrl
push
addl
lods
mov
mov
mov
movsl
scas
xchg
adc
dec
pop
jo
test
loope
loope
out
stos
dec
push
xor
enter
jg
ret
fstpt
sub
sbb
add
dec
fisttpl
cli
sub
stc
mov
cwtl
out
rcll
pop
dec
data16
or
sbb
dec
adc
pop
addl
fs
fucomip
shlb
cld
sbb
sbb
jae
int
shlb
add
pushf
xor
or
or
jno
mov
scas
repnz
jb
cmp
in
js
cmp
add
mov
or
in
mov
ljmp
or
lods
inc
mov
dec
in
sub
dec
dec
and
adc
sbb
mov
dec
mov
adc
push
sub
rorl
hlt
mov
outsl
cwtl
and
sti
mov
roll
out
fdivr
dec
and
push
clc
call
mov
cli
sub
aad
cs
outsl
push
test
jecxz
xchg
mov
enter
dec
mov
jge
test
mov
popa
call
pop
xor
cmp
or
jnp
call
movsl
hlt
add
add
ficompl
ficoml
adc
sbb
in
stc
pop
ds
xor
xlat
pop
push
cmp
and
repz
and
and
fs
cmp
sbb
js
xor
movsb
imul
les
pushf
je
in
push
xlat
loopne
dec
popf
sahf
adc
idiv
mov
mov
mov
aam
leave
xor
adc
and
clc
outsb
xchg
fwait
aaa
jb
cwtl
iret
inc
fmuls
jle
lods
jnp
add
adc
inc
mov
jno
xchg
test
sbb
out
sahf
fiadds
ret
mov
js
mov
jo
adc
mov
rcr
sbb
fbstp
aad
sbb
loope
adc
cmpsb
push
push
loopne
imul
push
jne
rcrb
ljmp
es
hlt
cwtl
push
test
ljmp
adc
pop
pop
popf
jl
dec
and
xchg
shl
sub
mov
and
das
xor
in
sub
xor
mov
mov
test
icebp
cmp
pop
es
lcall
dec
and
sbb
xor
jg
xchg
mov
push
xchg
in
cmp
outsl
mov
loope
push
sahf
ja
fbstp
call
ja
fwait
jg
add
adc
je
adc
mov
jnp
cmp
jne
aad
adc
xchg
fsubrl
xorb
mov
or
inc
and
jno
or
mov
push
push
inc
dec
cmpsl
sub
push
sbb
notl
enter
add
xchg
sub
dec
mov
pop
sahf
mov
in
into
add
in
lret
imul
dec
xchg
mov
push
sub
ficomps
inc
sbb
loop
addr16
js
call
adc
jbe
jbe
aas
jb
testb
popa
stc
imul
stc
fs
adc
cmp
pop
lret
mov
dec
adc
cwtl
mov
push
jp
jb
xor
push
cmpsl
jge
xchg
int3
adc
lret
mov
mov
fsubl
subb
inc
push
hlt
outsl
mov
scas
ret
pop
or
cmp
imul
stos
or
push
movsb
pop
jge
mov
iret
xchg
insb
in
xchg
jne
fcoms
xor
in
dec
sbb
clc
mov
add
cmpsb
je
sub
xchg
into
lahf
cmp
sbb
add
push
push
stos
mov
or
std
push
mov
mov
cli
xor
ljmp
rol
xor
jmp
les
leave
aam
xor
lahf
addr16
mul
fcmovnbe
jbe
sbb
insl
dec
lret
sub
mov
jns
inc
mov
xor
out
dec
sbb
pop
repnz
rolb
lods
sti
pop
mov
adc
outsb
adc
sti
mov
dec
jo
lret
and
arpl
pop
cmpsl
rcr
sbb
inc
pop
mov
leave
out
int3
sub
outsl
clc
rcll
fdivrs
pop
shlb
call
aad
inc
lcall
mov
xor
jg
mov
mov
mov
adc
ret
mov
xchg
test
xorl
inc
jne
loopne
mov
adc
add
out
pop
test
mov
dec
cmp
cmp
repz
mov
sub
push
pusha
cmp
mov
fldt
lds
ljmp
fists
jmp
dec
mov
testl
push
jp
ret
mov
mov
and
inc
sbb
or
gs
in
ja
sahf
fidivs
jae
in
push
xchg
sbb
sahf
inc
jbe
xor
adc
adc
inc
mov
add
lods
add
or
xchg
jb
stos
into
add
mov
lcall
add
sub
pop
call
outsb
inc
push
mov
addl
push
xor
int
adc
adc
fsubr
jb
sub
push
jb
loope
ljmp
ret
mov
lods
nop
test
stos
in
add
adc
mov
xchg
xchg
push
jmp
lahf
stc
inc
and
sti
sub
jae
clc
sbb
jmp
jne
lahf
push
sbb
mov
es
dec
in
push
xlat
push
mov
out
cld
leave
aad
mov
shl
mov
mov
jecxz
fs
push
cmp
or
insb
adc
movsl
mov
shlb
xchg
mov
int
sbb
and
sahf
pop
and
sbb
je
outsl
mov
sub
lret
cmp
mov
mov
ja
shrl
mov
jg
jl
dec
sarb
pop
mov
lahf
lret
mov
push
jge
sbb
sbb
pusha
cmp
test
fsubs
mov
and
inc
in
or
inc
out
jo
cmp
jle
cmp
lock
call
and
push
sub
mov
sbb
out
push
stc
aas
in
sti
movsb
leave
or
cmp
bound
mov
emms
sub
notl
and
mov
inc
mov
adc
mov
sbb
fucomi
pushf
lods
or
inc
jae
int3
sub
xchg
cmp
pop
pop
xor
and
xchg
push
push
xchg
mov
or
sub
push
push
push
movsb
dec
insb
ljmp
jbe
leave
fs
push
mov
xchg
sahf
mov
outsb
push
fs
inc
pop
imul
sar
cmp
lock
ficomps
arpl
jecxz
xchg
push
fmull
push
iret
lea
mov
inc
loop
push
shrl
movsb
ljmp
push
xchg
call
sbb
mov
pop
dec
fwait
xchg
inc
pop
stos
mov
fnstsw
out
sbb
push
pop
enter
iret
lret
repnz
into
or
add
shrb
cmp
push
pop
fstl
lret
stc
aas
adc
add
inc
iret
cs
jle
outsb
clc
push
call
cs
sub
sbb
or
js
push
scas
mov
jle
outsb
clc
push
call
cs
sub
sbb
or
js
push
scas
mov
jle
outsb
clc
push
call
cs
sub
sbb
or
js
push
scas
mov
jle
outsb
clc
push
call
out
cmp
sub
or
cmpsl
inc
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
xchg
ja
pop
mov
enter
andl
push
arpl
mov
inc
loop
sbb
jbe
xchg
xchg
aaa
cmpsb
pop
mov
addr16
ja
inc
idivb
cmpsl
push
mov
ss
inc
leave
push
mull
jbe
xchg
mov
push
aas
out
mulb
cmpsl
push
xchg
push
out
in
mov
xchg
sub
xchg
jbe
push
les
push
or
dec
out
lds
int
inc
sti
jmp
ss
or
jae
call
in
mov
cmp
js
mov
dec
mov
outsb
pop
ds
mov
mov
cmpsb
jl
flds
fisttps
add
mov
ret
daa
xchg
aaa
rolb
aaa
pop
jae
inc
sbb
push
push
stos
js
xchg
mov
cmp
icebp
loop
int3
cli
mov
jge
fnsave
xchg
stos
push
test
loopne
addr16
loop
xchg
arpl
fsubrs
sub
test
aaa
jge
push
hlt
jl
ficoms
std
jp
push
mov
sub
mov
cmpsb
jae
pop
addr16
ja
inc
test
cmpsl
push
pop
test
stos
inc
fistl
data16
shlb
pop
ret
imul
stos
ret
xorl
adc
adc
inc
and
and
and
divb
xorb
fs
adc
addr16
cmpsl
and
jbe
out
push
repnz
iret
imul
out
notb
cmpsl
push
mov
xchg
xchg
inc
out
mull
jbe
xchg
xchg
aaa
cmpsb
pop
mov
addr16
ja
inc
notb
cmpsl
push
mov
xchg
xchg
inc
out
mull
jbe
xchg
xor
jp
stc
sbb
jp
pop
out
jmp
int
push
fs
add
dec
cmpsl
lahf
out
mov
mov
orl
dec
out
lds
lock
xor
es
out
repz
mov
out
and
fucomi
cli
mov
pop
jle
aas
and
cmp
inc
dec
fmuls
cltd
cld
and
roll
push
inc
xor
xor
sbb
jmp
add
adc
jl
into
adc
jne
cltd
cwtl
and
test
in
shrl
jmp
lock
lea
sti
mov
xor
in
inc
xor
mov
and
in
jge
cmc
add
jecxz
inc
inc
inc
pop
pop
xor
pop
dec
sbb
mov
dec
pop
inc
jmp
xchg
movsb
std
lret
push
xchg
jge
xchg
xchg
pop
nop
cmp
inc
lods
mov
or
xchg
cmp
aam
inc
test
test
cmpsb
lret
or
and
inc
xchg
daa
movsb
les
mov
dec
jle
iret
xor
xchg
ja
inc
jae
sub
mov
lea
mov
js
out
pop
push
bound
sbb
movsb
or
insb
mov
sti
mov
aas
xchg
or
sbb
pop
je
lea
loop,pt
test
cmp
jmp
push
cmp
and
mov
scas
in
adc
fldt
jae
add
fwait
xchg
adc
lret
adc
outsl
inc
cmp
inc
jo
xor
test
pop
jno
mov
mov
cmp
rolb
dec
cmp
jp
dec
das
dec
imul
or
out
ljmp
clc
add
and
lcall
repnz
or
or
jne
xchg
movsb
lods
mov
xor
out
mov
cld
cld
mov
fdivl
mov
fcompl
dec
lock
sub
or
arpl
lds
pop
adc
scas
adc
inc
pop
shlb
pushf
je
dec
pop
cld
or
push
jno
hlt
add
cmp
aam
fnstcw
and
stos
scas
lea
cmp
movsl
xchg
pop
aaa
mov
jae
subb
inc
repz
stc
cli
mov
loope
push
push
pop
cmp
sub
or
insl
push
insb
outsl
es
ret
mov
xor
adc
mov
mov
in
or
inc
inc
lcall
mov
es
clc
test
push
xor
cmp
leave
sub
shr
icebp
pop
xorb
icebp
pop
xchg
shlb
je
jp
fldt
sub
mov
aas
add
pop
add
xchg
cmp
sbb
mov
push
loope
imul
pop
cli
mov
mov
xchg
aaa
mov
out
insl
dec
cmp
mov
sbb
dec
divb
ja
sbb
adc
sub
cmp
insl
cmp
sbb
and
sbb
testb
cmp
or
cwtl
hlt
cmp
shrl
push
mov
cmp
popf
mov
imul
push
mov
scas
mov
push
or
ljmp
cmp
mov
cld
rorl
jl
pop
or
scas
repz
cs
or
aaa
mov
lret
rcll
sbb
rol
pop
dec
daa
flds
xor
or
push
test
dec
dec
jne
lcall
cwtl
adc
nop
vpcmpgtd
fstpl
inc
and
cmpsb
pop
outsl
sub
mov
lods
lcall
xchg
add
ja
lahf
les
mov
mov
insb
mull
or
fsubrl
mov
loop
dec
mov
cmpsl
clc
mov
rol
adc
lret
mov
dec
push
daa
push
inc
dec
pop
call
inc
or
stos
mov
gs
or
out
and
sub
push
clc
xchg
mov
leave
stos
mov
xchg
add
pushf
aad
and
stos
add
xchg
inc
mov
xchg
push
xchg
out
xchg
arpl
mov
jg
fstpt
mov
jl
sahf
bound
lret
mov
imul
inc
es
call
inc
sub
jecxz
xchg
cmp
dec
jb
dec
mov
mov
sub
andb
rcll
js
fadds
arpl
or
pop
int3
xor
pop
mov
clc
cmp
cs
dec
movsb
mov
xchg
rcrl
into
mov
in
pop
dec
das
cmc
es
cmp
adc
or
push
insl
orb
and
stos
pop
mov
test
jno
stos
iret
aam
ja
sbb
stos
push
xchg
sahf
dec
push
repnz
lods
call
mov
in
mov
mov
push
dec
fs
test
push
test
pop
mov
pop
xlat
xchg
and
add
fsubl
inc
mov
rcrl
sub
xchg
jo
in
int
arpl
insl
jae
xor
sar
test
dec
mov
scas
int
in
mov
cmpsb
in
cltd
xchg
rcl
and
stc
mov
pop
add
movsl
push
adc
jne
xchg
lret
xchg
mov
push
xchg
dec
or
mov
pop
and
js
je
out
insl
add
shr
pop
cmp
or
sub
sbb
mov
pusha
jns
movsb
or
aas
add
popa
xor
xor
out
int3
dec
stos
push
sbb
xor
fistl
pop
dec
cwtl
or
hlt
push
les
push
adcl
je
pop
fiadds
or
inc
hlt
add
add
sbb
and
ljmp
aas
mov
add
lret
sahf
xor
inc
mov
call
bound
add
sub
pusha
mov
scas
out
dec
aam
daa
fst
sub
or
fs
inc
and
rclb
inc
or
fistpll
fucom
iret
jns
lods
fcomps
addr16
and
or
cmp
mov
mov
fdivrs
lock
mov
sahf
sbb
adc
adc
adc
sarl
adc
sbb
sub
es
decl
dec
mov
jg
dec
add
and
or
test
push
pop
cli
lea
jge
fiadds
mov
loope
in
stos
movsb
push
stos
ss
push
xor
or
lods
test
mov
push
cld
repnz
stos
jmp
aad
pop
sbb
repnz
sti
sub
jmp
xor
xchg
dec
mov
pop
shrl
mov
and
jne
sub
stos
xorb
inc
test
andb
or
xor
inc
in
movsl
int3
lea
insb
shlb
test
imul
mov
cmp
ds
mov
test
es
cmp
inc
sarb
ja
rcl
sbb
sbb
push
adc
lcall
ja
int3
stc
addl
into
ljmp
stos
cli
dec
cltd
mov
aam
int
adc
imul
lret
dec
nop
pushf
das
out
jbe
inc
adc
fnstsw
movsl
dec
in
inc
xchg
xchg
adc
cs
sarl
ds
les
xor
jl
popa
sub
cmp
loop
popf
xor
js
jp
addr16
test
mov
mov
mov
xchg
cmp
shll
out
fs
xchg
aaa
jge
push
popl
fwait
inc
sub
data16
sarl
rcrl
mov
lret
stos
and
cs
inc
in
and
ret
out
or
aam
popf
dec
pushf
repnz
mov
or
movsl
lcall
or
adc
pushf
mov
pop
xchg
adc
icebp
push
inc
icebp
outsl
adc
test
jbe
leave
cmp
ljmp
stos
dec
pop
flds
mov
ss
xchg
in
xor
dec
std
ret
mov
dec
repnz
lret
sub
shll
rcrb
dec
push
daa
mov
daa
pusha
sbb
daa
out
mov
stc
push
mov
aaa
sti
sarb
ja
mov
cmp
jo
mov
adc
into
adc
imul
sub
xchg
xchg
ror
pop
ds
lea
out
push
push
or
or
mov
pop
inc
cmp
inc
jge
sbb
subb
std
or
into
decl
inc
arpl
pop
sub
cltd
fimull
enter
sahf
loopne
adc
imul
mov
and
mov
cmpb
add
in
mov
jbe
sbb
dec
pop
daa
stos
adc
xor
stos
cmpsl
movsb
or
xor
jb
add
mov
adc
sbb
and
mov
cltd
inc
xchg
movsb
xor
cmpsl
jp
pop
adc
bndstx
jg
cmp
rol
movsb
sub
and
or
mov
mov
loopne
mov
orl
push
adc
add
cltd
fs
das
jo
cwtl
stc
push
push
js
mov
xor
push
or
adc
cli
sbb
sub
jns
add
aad
fdiv
inc
push
add
and
out
sbb
mov
mov
inc
and
call
mov
mov
in
pop
scas
push
or
push
pusha
sbb
jo
aas
cmpsb
mov
data16
movsb
inc
scas
subl
pop
mov
lods
mov
inc
sbb
adc
dec
xchg
jnp
js
mov
jg
arpl
dec
out
inc
nop
aad
leave
adc
mov
push
repnz
aad
pop
sub
decl
movsb
push
fbstp
mov
fcoms
cmp
adc
lret
jle
jnp
cmpsb
ja
push
inc
jmp
je
and
add
inc
cmp
in
pop
subb
push
jno
js
push
cmp
xchg
push
imul
jno
add
shll
or
aad
cmp
push
mov
mov
jp
mov
lods
add
pop
aad
dec
data16
xor
scas
xchg
fildl
bnd
mov
jns
and
xor
leave
ss
movsl
adc
inc
inc
xor
inc
fisubl
xor
mov
pop
mov
cs
out
push
rcll
enter
in
stos
jbe
test
adc
enter
xchg
popf
movlps
fists
inc
out
jg
lds
cs
mov
dec
mov
adcb
fidivl
and
push
jbe
mov
push
xor
ljmp
das
cmp
daa
xlat
popf
pusha
jo
mov
test
sub
xchg
sarb
pop
add
push
jecxz
push
test
cwtl
insl
xorl
sahf
jmp
insl
adc
xchg
mov
jle
pushf
inc
aas
iret
cmpsl
lock
mov
movsl
mov
push
lret
out
jl
mov
mov
int
and
pushf
xchg
icebp
mov
jle
inc
adc
xchg
and
mov
stos
sub
sub
in
pop
pop
xchg
pop
lds
outsl
lea
xchg
sub
push
adc
lods
jecxz
inc
fs
shr
sarb
pop
cmc
ljmp
js
ja
jbe
lods
pop
out
push
fcomps
ds
outsl
aaa
out
testl
dec
leave
inc
fmull
ret
out
push
dec
test
les
clc
xor
mov
and
mov
lret
test
add
adc
fiadds
or
into
or
fs
adc
enter
dec
jmp
gs
icebp
scas
push
mov
std
aaa
add
lock
jp
scas
test
mov
scas
test
dec
ljmp
out
jbe
lea
stos
icebp
xor
jb
sti
sub
push
pushf
and
shl
dec
dec
pop
das
xchg
xor
or
mov
mov
das
xchg
lret
mov
out
test
rcl
popa
shlb
push
dec
jp
xchg
fimull
fisubrl
adc
or
out
and
fst
ja
popa
ss
loopne
xor
mov
xor
enter
or
out
dec
stc
mov
je
imul
int3
std
repnz
hlt
xchg
aad
mov
fwait
inc
cmp
xchg
push
push
int
xor
fsubl
pop
jbe
push
iret
aam
out
add
aam
inc
out
xchg
add
inc
mov
jg
addr16
cli
push
fwait
clc
es
mov
mov
nop
ja
push
dec
and
mov
lock
mull
in
inc
jnp
inc
lock
call
pop
sahf
push
xchg
ss
xchg
pop
ja
hlt
xor
in
push
faddl
sub
inc
adc
sbb
push
mov
sarl
cmpsl
mov
pop
lods
sub
movsl
lods
out
pop
jbe
arpl
lods
cmpsb
pop
into
stos
push
das
sti
adc
adc
mov
or
inc
std
sbb
loopne
call
cmpl
inc
mov
inc
mov
cmpsl
push
ja
out
adc
std
fsubrl
imul
cmp
sarb
xor
sbb
inc
push
mov
imul
decl
xchg
ja
js
in
pop
xor
cld
addr16
push
cmp
arpl
test
lret
push
push
iret
imul
jae
aam
lret
jp
xchg
push
dec
cmp
les
adc
test
xor
scas
xor
in
loop
cmp
dec
add
lods
push
push
sub
repnz
jbe
mov
jmp
inc
inc
dec
xchg
ljmp
stc
stc
and
dec
push
dec
push
mov
popw
sbb
sbb
mov
mov
fsubrs
test
test
jge
and
fsubr
imulb
xchg
jnp
cld
or
adc
sbb
in
xlat
bnd
pop
lods
xchg
adc
lahf
push
push
je
push
mull
or
xchg
cmp
sarl
dec
mov
or
repnz
enter
notb
xchg
adc
jns
or
fidivrs
jae
fimuls
pop
pusha
outsb
je
bound
push
adc
dec
adc
out
xor
xchg
dec
push
cwtl
icebp
es
inc
loopne
mov
inc
insl
add
mov
sub
lret
jle
icebp
fisttpl
into
push
push
iret
adc
mov
inc
pop
aam
pop
xchg
adc
push
gs
xorb
mov
and
cmpb
mov
mov
bswap
jg
xor
test
je
and
lret
jecxz
mov
dec
inc
cmp
fimull
outsb
in
xchg
sub
aaa
cld
dec
pop
orl
pop
cmpb
repz
repz
test
dec
test
add
pop
das
dec
xor
pop
jne
push
insb
mov
adc
dec
test
pusha
fsub
cli
mov
adcl
xor
nop
lret
jl
pop
scas
cmpsb
cmpsl
nop
pop
jno
sbb
or
cltd
popa
mov
sahf
imul
fildl
fmull
mov
test
loope
dec
aad
inc
and
out
or
hlt
ret
syscall
and
pop
das
add
pop
inc
pusha
inc
es
pop
xchg
outsl
cmpb
jns
jmp
clc
mov
jle
push
cmp
mov
sbb
test
mov
xchg
aad
xchg
mov
pop
push
das
pop
sub
pop
test
and
lods
dec
and
cmp
or
clc
movsb
and
xor
add
xchg
fidivl
cmp
in
push
in
sar
fwait
mov
pop
pop
adc
xchg
push
push
mov
outsl
add
daa
outsb
push
xor
dec
inc
sub
xor
push
mov
sarl
lds
into
js
shll
inc
sub
test
out
mov
scas
shll
jnp
push
mov
jo
and
popa
imull
xor
push
test
dec
cmpsl
jns
xor
sti
je
dec
test
outsb
lret
push
rolb
sub
dec
int3
inc
xorl
ret
add
push
cltd
jnp
jb
lods
in
imul
cwtl
pop
dec
rclb
jge
pop
stc
clc
push
nop
shlb
cs
les
std
xor
movsb
pop
push
aas
pop
sub
cld
pop
add
or
or
inc
jg
imul
std
daa
outsl
insb
or
xchg
jbe
insb
or
test
lahf
setno
adc
xor
mov
imul
mov
insl
xchg
jge
sub
lods
leave
dec
or
jns
jns
jae
insl
inc
lret
dec
loope
into
imul
push
lcall
mov
call
ljmp
xor
dec
mov
insb
xchg
jmp
ret
jle
rorb
scas
and
stos
xchg
repz
pop
push
jl
pop
clc
scas
or
inc
lock
imul
jp
icebp
ret
cli
push
add
jnp
aaa
arpl
stos
inc
cli
es
dec
cld
and
and
jne
mov
in
outsb
mov
cs
testl
push
leave
jnp
pop
mov
rolb
gs
scas
cs
and
adc
dec
jmp
and
mov
push
xchg
or
jae,pt
pop
xor
psubusw
cpuid
into
xor
adc
or
adc
adc
arpl
es
pop
sahf
js
xchg
mov
push
inc
enter
pop
dec
lret
stc
xchg
mov
add
or
mov
sbb
inc
pusha
cs
cs
bound
mov
push
cmp
scas
pop
adc
push
add
icebp
dec
call
loopne
jae
cmp
adc
mov
repnz
mov
dec
mov
imul
xchg
out
sub
jns
mov
adc
sti
mov
lock
inc
lods
je
inc
ss
dec
inc
outsb
bound
mov
insb
stos
ds
shrb
push
or
or
inc
xlat
sub
hlt
pop
les
adc
lea
outsb
and
dec
push
or
adc
arpl
push
mov
push
push
in
pop
sub
push
daa
push
mov
mov
mov
subl
repnz
xor
and
jo
mov
sub
sbb
cwtl
pop
pop
fwait
jge
mov
mov
xchg
mov
adcl
aad
sbb
push
push
fbld
xchg
lock
ljmp
xchg
pop
and
stos
xchg
and
xor
sub
in
cltd
bound
adc
pop
fwait
std
xor
lret
jl
loope
in
dec
adc
fs
in
or
lret
jecxz
jne
int3
movsl
pop
aas
test
mov
pushf
cli
repnz
xor
in
push
cli
test
sahf
push
pop
sbb
or
and
test
addr16
cwtl
mov
adc
jle
mov
mov
out
sub
sub
jne
push
loop
adc
mov
pop
adc
push
dec
dec
jns
dec
insl
sbb
sbb
bound
and
and
or
mov
in
mov
sti
int
mov
rol
mov
push
stos
fstp
subps
imul
in
sahf
or
push
or
mov
push
shlb
mov
inc
lahf
jno
dec
lcall
ds
scas
sbb
mov
sub
jl
mov
mov
enter
xchg
sub
sub
inc
sbbb
jmp
add
adc
pushf
idiv
dec
enter
mov
je
shlb
jge
lds
mov
push
sti
xchg
adc
in
xor
push
inc
jge
daa
add
add
push
adc
idiv
inc
xor
xlat
pop
std
sub
jp
pop
notl
mov
imul
into
adc
push
les
stos
cmp
fldt
mov
push
cmpb
mov
rdmsr
adc
xchg
jae
add
call
lock
inc
xorb
mov
jle
aad
xor
lret
loopne
sub
aad
fldenv
in
cld
hlt
jg
cmpsb
mov
scas
movsb
insl
sti
and
into
cmp
pop
sub
xor
std
xor
mov
or
mov
mov
stc
imul
aad
xor
pop
xor
les
fldt
sub
aaa
popa
sarl
lods
push
sub
push
stos
pop
push
popf
mov
xchg
xorl
clc
rorl
daa
mov
cmp
pusha
push
xor
pusha
bound
push
push
decb
pop
jne
test
gs
stos
scas
adc
lods
mov
mov
mov
cmp
xchg
ja
push
dec
lret
sub
mov
add
clc
mov
push
xor
sbb
or
clc
je
inc
sub
jp
mov
aas
xchg
cltd
int
xorb
test
pop
push
aaa
pop
add
ja
inc
notb
cmpsl
push
mov
xchg
xchg
inc
out
mull
jbe
xchg
xchg
aaa
cmpsb
pop
mov
addr16
ja
inc
notb
cmpsl
push
mov
xchg
xchg
inc
out
mull
jbe
xchg
xchg
cmp
addr16
sbb
inc
notb
cmpsb
push
mov
xchg
sahf
inc
jecxz
mull
jbe
xchg
xchg
shll
addr16
ja
notb
mov
fimuls
adc
aaa
push
sub
mov
clc
cmpsl
call
mov
pop
dec
pop
js
push
inc
cmp
mov
xchg
call
pop
mov
push
enter
scas
or
pop
adc
sarb
je
mov
mov
mov
push
lods
xchg
mov
sub
divl
int
std
or
inc
inc
mov
idivl
pop
pop
xor
cmpsl
sbb
mull
cmpb
inc
nop
add
dec
add
mov
or
and
add
out
inc
xor
add
ja
xchg
das
sub
call
test
mov
xchg
test
out
mov
sbb
cwtl
xchg
bnd
imul
sbb
sbb
xchg
int
xchg
insl
lock
mov
xchg
xor
sbb
or
adc
add
sbb
inc
cmp
jle
pop
lahf
and
xchg
sarb
jb
pop
cmp
push
es
jge
sub
dec
or
loop
enter
xchg
int3
imul
mov
rolb
inc
mov
jne
adc
loopne
mov
popf
ret
test
jmp
in
test
fwait
jmp
bound
push
sub
cmp
inc
cmp
fcoms
clc
mov
cmpsl
cwtl
xlat
mov
mov
pop
dec
pop
js
push
inc
cmp
fcoms
clc
mov
cmpsl
cwtl
xlat
mov
mov
pop
mov
push
push
and
dec
fwait
add
fistpll
sbb
xlat
ficompl
ret
mov
cmp
repz
adc
jecxz
sti
popa
fnstsw
add
push
roll
and
mov
jb
dec
and
mov
inc
scas
mov
mov
adc
dec
cmp
in
xchg
sbb
out
inc
jo
leave
movsb
andb
sbb
fdivrs
call
mov
lret
cltd
aaa
and
xor
pop
add
add
imul
inc
fldl
insl
cmp
mov
mov
lea
sub
sub
sub
add
mov
push
xchg
rolb
cmp
aaa
sbb
adc
sahf
aad
mov
dec
xchg
wbinvd
pushf
rcl
test
adc
ffree
movsl
cmp
cmp
xor
jg
xor
std
cmpsb
push
sti
hlt
out
fwait
xchg
pop
aaa
loopne
mov
les
repz
std
lods
mov
fsubr
pop
int3
sbb
sub
scas
outsb
push
mov
popa
sbb
pusha
mov
push
psraw
dec
insb
lcall
jl
aaa
adc
add
inc
sub
adc
scas
subb
fsub
xchg
mov
icebp
ja
loopne
or
cmp
sbb
dec
cltd
adc
div
jle
addl
pushf
push
add
hlt
mov
popl
scas
scas
aas
mov
mov
popf
cmp
add
lods
xchg
jg
push
cmpsl
in
hlt
xor
lods
and
push
or
cmpsw
icebp
xchg
imul
inc
rorl
pop
mov
inc
mov
push
in
pop
jmp
mov
test
movsl
push
jg
mov
xorl
sub
mov
mov
lock
adc
ss
ror
or
stc
mov
call
outsb
mov
pop
fsub
dec
adc
pop
pop
and
adc
test
xchg
stos
adc
daa
ret
push
rcrb
frndint
addl
jmp
in
mov
xchg
ret
pop
add
jg
fidivrl
or
or
adc
xor
mov
pop
cmc
fcoml
ljmp
or
movsb
test
icebp
loopne
or
sbb
mov
inc
jle
cmp
jnp
sub
sbb
and
pop
lods
push
push
int
je
shr
clc
xor
mov
in
xchg
iret
jge
or
ljmp
sub
inc
cmp
push
out
sbb
sub
test
inc
call
jae
out
jb
rcrl
xor
mov
sbb
xchg
lcall
and
imul
inc
pop
popf
push
mov
jg
iret
push
pusha
mov
fld1
or
cmc
adc
add
das
jle
push
daa
or
mov
sbb
mov
lods
mov
mov
ret
aad
pusha
stos
test
mov
jecxz
sbb
xchg
imul
fsubs
jg
ljmp
mov
stos
mov
int
leave
cmp
and
or
xchg
ds
flds
insb
cmpb
sbb
jmp
sbb
orb
jae
dec
addr16
jo
mov
jbe
sbbb
fdivs
pop
fnsave
lahf
out
jno
push
xchg
iret
inc
data16
add
popa
dec
dec
fbstp
mov
lods
lcall
js
sbb
mov
jae
gs
je
xchg
out
test
ficoml
ja
push
pop
mov
push
mov
imul
mov
popa
adc
fstps
xchg
mov
ret
fistps
fisttpll
clc
lahf
push
jne
in
sti
int
dec
jmp
cmp
stos
stos
stos
mov
sub
adc
test
sbb
mov
inc
mov
or
imul
jle
imul
push
jns
ret
out
loop
cmp
fldl
mov
mov
mov
fstps
xchg
dec
xor
fadds
arpl
inc
fwait
out
mov
lahf
pmulhuw
cwtl
mov
push
sub
mov
xor
cmp
mov
mov
dec
xchg
out
pop
loope
add
sbb
icebp
jnp
gs
scas
ret
in
addr16
sub
mov
cmpsb
mov
daa
imul
lahf
mov
push
pop
mov
add
mov
cs
mov
add
iret
popa
xor
push
lahf
sbb
add
pop
fnstsw
lock
lcall
mov
cltd
fisubrl
add
lods
movntps
movsl
dec
shlb
push
leave
sahf
xor
ds
and
push
xchg
jae
and
cmp
jg
es
push
mov
in
xor
sub
mov
scas
idivl
out
sbb
push
pop
and
adc
ficompl
aam
popf
xor
push
mov
lock
cmp
ljmp
mov
lods
push
push
dec
cmp
pop
lds
xchg
insl
fdivl
cmpsb
icebp
push
and
and
fistps
loope
shll
jbe
push
xchg
push
insb
fldl
call
add
fdivrl
adc
cmpsl
nop
fisttpll
sbb
enter
jns
movsl
filds
das
test
or
out
pop
lea
and
mov
test
ja
inc
push
mov
outsl
call
cltd
jge
pop
lcallw
pushl
mov
sbb
jg
out
test
mov
sbb
arpl
push
and
push
pop
pop
xor
mov
punpckhwd
int3
ds
addr16
jmp
testb
les
je
leave
or
cwtl
fwait
or
seto
xchg
add
xchg
xor
aas
add
and
pop
insb
mov
les
push
pop
in
push
lea
cmp
cmp
pusha
testb
mov
cli
fs
inc
std
add
jbe
pop
jae
mov
pop
in
or
push
adc
sarl
daa
cmp
outsl
adc
cmp
hlt
scas
sti
icebp
jle
push
rorl
out
rorl
mov
mov
lds
bound
scas
repz
cmp
and
xor
filds
test
fistps
arpl
dec
stc
andl
aam
rcrl
dec
pop
mov
andb
cwtl
xor
mov
sbb
sarb
aas
aaa
push
cs
push
fwait
gs
inc
testl
xor
push
mov
lcall
int
arpl
pop
push
xchg
pop
movsl
aas
dec
or
lahf
cld
fucomi
cmp
mov
inc
add
push
bound
lods
jmp
repz
add
push
mov
push
xchg
xchg
ljmp
dec
mov
lods
jle
rorb
add
sub
dec
sbb
imul
mov
add
movsb
sbb
inc
adc
jmp
xchg
pop
arpl
in
inc
and
inc
out
push
or
mov
mov
popa
ja
leave
popa
inc
js
xchg
inc
adc
or
pusha
outsl
xchg
pop
xchg
and
pop
mov
cmp
xor
mov
out
ficomps
jae
in
scas
mov
scas
pop
jno
sar
data16
lret
test
inc
addr16
les
orl
jl
mov
fwait
jne
stos
int
jecxz
sub
test
dec
cmp
cmp
push
lods
bound
icebp
aad
push
movsb
jo
ret
mov
sub
in
inc
shr
int
adc
pop
loop
nop
out
or
loope
sbb
add
mov
cmp
cli
aad
mov
cli
stos
movsb
ljmp
pop
cmp
shrl
push
cmp
lock
mov
xlat
mov
cmp
repz
push
imul
leave
and
sbb
and
adc
call
fldcw
clc
inc
dec
or
cwtl
lcall
mov
cs
mov
dec
ret
lock
out
adc
fiadds
daa
pop
pop
xchg
xor
mov
mov
cmp
add
pop
lcall
stos
lods
out
push
push
ret
mov
jo
sarl
xor
mov
mov
mov
push
fdivs
dec
insl
xchg
mov
inc
inc
or
xchg
xor
xchg
jne
lds
mov
lahf
stc
sbb
loopw
int
stos
outsb
add
test
dec
fwait
push
jnp
cmp
or
dec
cmp
stos
push
mov
lahf
shlb
movsb
inc
addr16
jbe
xor
mov
lret
or
lods
inc
scas
cmp
repz
outsl
rorl
cmc
or
outsl
shll
mov
pop
mov
in
mov
sub
pop
ret
jmp
push
pop
stos
sub
jbe
loope
jbe
sub
jmp
das
fs
fwait
scas
rcrl
aas
push
mov
xor
fsubrp
pop
xor
inc
jbe
pusha
ja
sbb
mov
gs
mov
ja
fists
push
orb
mov
out
lret
js
inc
stos
ja
dec
push
stos
movsl
lcall
cmpsl
mov
jg
hlt
lea
stos
dec
hlt
push
or
dec
mov
in
shrb
pop
loope
push
sti
popf
jbe
push
push
arpl
mov
xchg
lock
lret
bound
inc
inc
push
push
inc
aad
fisttpll
and
dec
xchg
dec
pop
jmp
sub
jbe
cmpsl
add
xor
sarl
push
das
cld
or
mov
iret
in
aam
inc
enter
aad
loopne
mov
ss
push
and
push
xorb
adc
xor
or
popa
push
popf
ljmp
pop
iret
and
or
mov
add
push
inc
push
loopne
int
mov
pop
ret
jmp
insl
mov
dec
dec
insl
cwtl
jp
jnp
insl
add
xor
xchg
jo
push
inc
lea
cs
xchg
pop
xchg
movsl
das
xor
out
loopne
or
lods
adc
dec
mov
pop
add
xchg
fdivrl
lock
sbb
xchg
and
add
push
mov
mov
push
in
add
jmp
cmp
mov
add
jmp
clc
push
mov
out
mov
xchg
sub
sbb
mov
out
adc
pop
xor
in
pop
inc
fstl
int
inc
rcll
sbb
daa
scas
mov
cwtl
adc
ds
push
fcomps
jb
iret
dec
or
inc
hlt
imul
pop
dec
sub
push
pop
dec
int
stos
mov
shll
rcr
movsb
push
xchg
dec
inc
test
repnz
push
int
mov
xor
jp
loopne
dec
jecxz
cmp
cmc
fcoml
orl
cmc
mov
daa
bound
leave
dec
inc
movsl
mov
icebp
push
jmp
nop
rcl
dec
ret
or
ficompl
stos
dec
pop
sub
ret
int3
push
fwait
imul
loopne
sub
js
jno
cwtl
inc
sub
test
sahf
adc
and
insl
push
jo
leave
xor
sub
jge
das
out
xor
je
ja
push
les
pushf
int3
out
loopne
daa
ret
xor
mov
sbb
cld
or
and
mov
pop
xchg
mov
sarl
xchg
arpl
xlat
and
stc
adc
sub
jle
clc
push
inc
xchg
ja
xor
push
lahf
movl
cs
cmp
lret
xchg
or
mov
xlat
insl
scas
cmp
dec
xchg
xlat
jnp
sbb
test
mov
call
incb
dec
aam
mov
mov
sub
adc
cwtl
push
sub
in
movsb
add
and
add
push
jne
mov
mov
add
mov
dec
lds
add
mov
bound
xchg
test
test
cmp
dec
pop
adc
sub
fwait
mov
push
sbbb
icebp
adc
jmp
test
stos
mov
dec
fs
pushf
xor
fs
repnz
cmp
fdivl
call
inc
dec
addl
push
jecxz
push
cmp
pop
xchg
pushl
push
mov
lods
nop
xor
dec
mov
mov
or
sti
out
inc
push
mov
aad
xchg
clc
dec
pop
pusha
jecxz
adc
inc
into
into
lea
lret
and
pop
in
in
jae
icebp
pop
popf
ret
fmul
fdiv
add
jmp
mov
adc
pusha
mov
aaa
popf
mov
dec
mov
icebp
into
cmpb
stos
sub
loopne
aam
out
out
mov
and
push
pop
movsl
pop
fdiv
mov
movsb
fneni(8087
mov
xchg
stc
pop
xor
push
pop
push
and
jl
cli
test
adc
xchg
cli
xchg
mov
cmp
es
jb
lahf
loopw
xchg
lods
mov
mov
mov
cwtl
aaa
cwtl
xchg
sbb
adcb
movsl
insl
jp
pop
and
cs
lea
or
mov
sbb
dec
or
fnstenv
inc
mov
fs
stos
sbb
push
insl
mov
jo
inc
pop
pop
rolb
testl
jbe
and
pop
jl
dec
les
cld
cmc
outsb
inc
aad
test
scas
inc
faddl
enter
push
sbb
mov
mov
xchg
fldt
cmp
sysenter
shl
inc
push
add
cli
repz
pop
add
sub
loopne
xor
jae
push
push
mov
mov
call
sahf
mov
lods
mov
and
and
cli
adcl
dec
jbe
mov
jg
push
mov
inc
std
jmp
push
lret
sub
cmpsb
fnsave
ret
pop
aaa
loop
inc
popa
dec
sbb
push
cmpsl
fldcw
xchg
aas
scas
out
fnstcw
mov
sbb
ljmp
repz
push
lock
or
cld
sbb
cmp
xchg
fidivrl
outsl
mov
jno
pop
push
scas
push
cld
cmc
in
nop
jae
xchg
test
adc
leave
or
jne
iret
addr16
push
xor
repnz
or
push
out
test
add
inc
popf
loopne
fstl
xchg
add
jecxz
sub
es
loopne
cmp
mov
lahf
push
pushf
jmp
into
sbb
mov
push
aam
adc
inc
dec
out
inc
lcall
xchg
jbe
les
add
into
aaa
sub
xor
out
cs
xor
sub
sbb
and
pop
jmp
shr
xchg
jbe
fmulp
loope
adc
pop
out
push
rorb
loopne
stos
xchg
jl
icebp
jmp
shlb
data16
and
xchg
out
fmull
mov
test
imul
xchg
or
xchg
mov
xchg
data16
pop
ret
ss
stos
adc
repz
leave
ja
jle
rclb
scas
sbb
mov
jmp
push
lret
je
fs
cmp
inc
xor
outsl
dec
sbbb
daa
lods
int3
jnp
or
cli
lods
push
mov
xchg
push
pop
dec
jge
shl
lcall
adc
xor
push
adc
push
xchg
cmpsl
jbe
xchg
xlat
push
pop
ja
or
icebp
sbb
fldl
cmpsb
lret
jmp
stos
lods
adc
ds
repnz
sti
mov
cmp
pusha
pop
sbb
dec
lcall
inc
mov
loop
fsubs
cmpsb
call
arpl
bound
or
mov
in
adc
imul
jp
push
js
loope
rcrb
and
or
lcall
mov
inc
pop
leave
mov
loop
add
std
ljmp
clc
arpl
cld
sarb
cwtl
popf
outsl
sub
ret
push
inc
lods
dec
xor
jae
xchg
or
xchg
mov
call
sbb
shlb
xchg
sub
pop
int3
mul
and
ficoml
push
sbb
rorb
mov
cmp
lods
pop
fsubrl
cmpsl
in
inc
rorb
lock
push
incb
push
test
jo
inc
cmc
jns
stos
jo
mov
insl
lsl
adc
adc
fwait
mov
xchg
inc
pusha
rorb
lea
outsb
std
leave
lea
and
cmp
loop
int3
mov
mov
xchg
inc
test
jne
testb
popf
daa
xchg
and
stos
jmp
ret
cwtl
add
fnsave
iret
jl
xor
jmp
xchg
mov
fcmove
push
lret
ss
and
ret
sub
xchg
pop
and
inc
std
cmpsl
jae
push
in
pop
mov
orl
mov
push
dec
mov
add
xchg
pop
insl
pop
pop
inc
fbld
js
sbb
lcall
mov
aad
push
add
add
sbb
fs
inc
clc
int3
jns
lods
mov
jge
and
bound
jb
xchg
push
sbb
aad
or
sbb
xor
inc
adc
adc
pop
push
pop
imul
pop
mov
or
outsl
loope
dec
insb
jmp
add
xchg
dec
daa
sahf
cmp
jb
lret
ljmp
pop
or
lds
dec
movsl
cmp
iret
fmulp
xchg
jge
mov
and
jb
or
sub
jle
mov
jl
mull
adc
mov
pusha
cli
cltd
or
test
loopne
adc
dec
mov
sub
lds
xor
mov
lahf
mov
jg
outsb
sti
js
das
mov
push
xor
cmpsl
mov
lods
push
or
repnz
movsb
jp
jmp
bound
imul
hlt
jne
inc
adc
jge
mov
mov
fsts
dec
sbb
rorl
pop
stos
mov
sbb
mov
mov
or
mov
orl
jne
sbb
mov
jne
xor
dec
pop
sbb
xor
ds
xlat
push
fldt
ficoml
fisttps
lret
ss
lods
test
clc
adc
loopne
jo
xchg
popf
dec
scas
sub
lahf
cmpsb
add
xor
mov
xor
scas
sub
sub
lea
adc
mov
push
mov
mov
adc
ds
mov
pop
and
fmuls
dec
push
xlat
dec
and
or
lcall
mov
imul
mov
fcmovnu
sbb
cmp
and
rorl
inc
inc
lret
push
outsb
cmpsb
mov
popl
ss
inc
das
add
bound
ss
jns
test
out
jno
clc
popa
imul
lods
or
push
push
xlat
in
mov
out
test
inc
lock
and
cld
mov
or
in
sub
cmp
sub
bts
mov
push
or
push
mov
orb
pop
jo
aam
add
out
mov
lahf
push
bound
jo
mov
cs
imul
jg
push
imul
out
gs
fwait
pop
pop
bound
adc
mov
sahf
stc
cwtl
in
dec
mov
mov
xchg
pop
mov
mov
int
movsl
in
lea
in
mov
scas
test
lds
dec
sahf
jle
les
fldenv
xorb
ja
xor
std
pop
lcall
cwtl
std
aas
lret
pop
pop
ja
aas
mov
pop
rcl
repz
jp
into
addr16
mov
dec
push
jns
ljmp
aad
stc
out
add
neg
add
mov
jmp
mov
fidivs
fwait
dec
dec
xlat
out
cmpsl
pop
sub
movsl
push
insl
pop
stos
sbb
or
std
jns,pn
rcrb
jg
dec
xchg
jnp
cmp
cltd
push
in
push
push
jecxz
and
cld
lds
fs
push
aam
push
push
filds
push
nop
xor
xor
stos
das
fimull
cmp
popf
pop
in
adcb
xor
stos
lret
jp
cmpsl
dec
test
dec
leave
testl
push
mov
mov
push
inc
push
sub
push
lret
pop
mov
repz
clc
xchg
pop
out
mov
and
mov
incl
push
scas
pop
jns
pusha
jecxz
inc
sti
je
mov
je
out
in
mov
fsubs
xchg
ficomps
into
rcrb
jnp
add
sub
push
mov
lahf
push
nop
ljmp
iret
inc
mov
mov
adc
inc
aas
add
out
pop
and
ja
lcall
bound
stc
aaa
jno
cmpsl
test
addl
jns
cmpsb
ss
aaa
jle
xchg
pop
pop
sub
pop
xchg
cmp
es
push
out
fs
notb
mov
mov
bound
lock
fs
adcb
inc
shlb
push
mov
inc
fsubrs
insl
cmpsl
or
mov
and
sahf
stos
mov
dec
or
out
or
incl
lret
mov
enter
push
ljmp
push
inc
mov
jo
ljmp
sarl
mov
xor
ljmp
loopne
inc
cmp
mov
xlat
adc
lret
call
shrl
pop
js
add
mov
adc
stos
fstpl
pop
mov
test
nop
test
add
cld
inc
jle
jae
mov
sub
loope
iret
fdivs
push
or
ja
fcoms
clc
mov
cmpsl
cwtl
xlat
mov
mov
pop
dec
pop
js
push
inc
cmp
fcoms
clc
mov
cmpsl
cwtl
xlat
mov
mov
pop
dec
pop
push
push
or
cmp
fcoml
icebp
mov
cmpsb
cwtl
xlat
xchg
mov
pop
fs
lock
inc
daa
sbb
inc
cmp
fcoms
push
mov
shr
pop
add
inc
or
out
add
adc
and
xor
int3
xor
inc
xchg
jno
iret
jg
dec
mov
rorl
loope
icebp
out
add
adc
and
xor
popa
sahf
or
jle
dec
mov
rorl
loope
icebp
out
add
adc
and
xor
popa
sahf
jno
sbbl
cs
push
xchg
jo
mov
lcall
popa
xor
cli
punpckldq
leave
push
jnp
pop
push
scas
cmpsb
push
jne
xchg
jge
mov
inc
mov
jnp
cmc
sti
outsb
mov
mov
sbb
xchg
mov
leave
dec
stos
aaa
and
xchg
shlb
sub
clc
sahf
loope
aam
shrl
push
dec
out
inc
xor
mov
stos
push
or
sahf
jecxz
sti
outsb
mov
xor
rol
jle
jmp
lock
inc
jno,pn
mov
or
jle
pop
and
pop
loope
movlps
jno
inc
dec
cltd
add
xor
nop
mov
mov
jbe
jle
mov
dec
loope
in
add
adc
and
xor
popa
sahf
jno
cmpl
sarl
push
loope
cwtl
scas
add
mov
scas
and
cmp
daa
pushf
and
dec
les
lds
cmpb
insl
cwtl
pop
mov
stos
inc
mov
scas
sub
int3
adc
dec
repnz
aam
scas
push
shlb
imul
push
mov
loop
mov
jno
cmpl
sarl
push
loope
icebp
out
add
adc
and
xor
popa
sahf
jno
cmpl
sarl
push
loope
icebp
out
add
jns
int3
icebp
repz
xor
imul
dec
loope
aam
pop
dec
push
ficomps
push
enter
data16
xor
ret
push
addr16
xor
push
inc
mov
fucomp
and
pop
mov
addr16
cltd
imul
cmp
push
xorb
xor
dec
stc
arpl
divb
adc
jl
push
fstpl
lret
adc
xchg
xor
jb
jp
scas
fcmove
push
inc
lods
leave
xor
in
mov
inc
jge
pop
popf
popf
jmp
jl
pop
cld
lods
and
push
mov
stos
xor
roll
mov
sub
pop
jno
lret
outsb
xor
stos
cltd
dec
inc
push
lods
sbbb
or
pusha
inc
repz
mov
mov
push
pop
dec
sub
clc
or
cmpsl
insl
testl
shrb
in
subl
jo
cmc
mov
rcrb
je
and
jno
mov
jb
ss
dec
xchg
fimuls
dec
xchg
test
into
push
and
cmpsl
leave
nop
rcrb
into
pop
jne
iret
lods
dec
sbb
mov
daa
add
jns
enter
mov
sti
and
scas
cmp
jb
inc
cmc
adc
pushf
rorb
in
cmpsb
inc
cmp
ficompl
xor
inc
mov
or
pop
repz
pop
ret
cli
data16
push
and
jb
popa
push
xor
jle
stos
cld
shll
mov
pushf
cmp
xlat
mov
dec
push
inc
mov
stos
pushf
cmp
mov
fsts
mov
push
jnp
je
loope
or
or
xchg
and
test
jge
xchg
jg
adc
sub
adc
xchg
jae
pop
adc
bound
idivl
adc
pushf
mov
xchg
test
mov
fisttpll
cmp
hlt
mov
loopne
adc
fmull
add
add
push
out
or
test
and
sbb
or
mov
cld
mov
pop
pushf
das
fldcw
jecxz
push
mov
push
mov
out
or
push
adc
and
sub
arpl
lock
in
mov
std
test
push
ss
adc
sar
rorl
ss
pop
sbb
div
rcr
dec
lock
cltd
mov
xchg
jae
xchg
std
pop
mov
mov
dec
inc
xlat
pop
inc
cmp
ret
cmpsl
push
orb
movsl
lea
nop
int3
xchg
pop
inc
jns
add
dec
subb
xor
test
cmp
scas
or
sbb
ret
and
ds
lea
ljmp
push
xor
test
nop
gs
xlat
dec
adc
test
sti
cmp
push
xor
outsl
lret
cli
and
mov
add
inc
cmpl
mov
sbb
mov
jl
sbb
popf
hlt
dec
rcl
sbb
repz
out
or
lcall
dec
xor
iret
shl
mov
in
inc
inc
test
mov
rcrb
lods
mov
pop
and
xchg
insb
adc
mov
add
mov
xchg
cmp
aaa
cmpsb
insl
push
add
rolb
outsb
jae
fsts
negl
mov
cmp
mov
sbb
in
xor
cmp
mov
int
stos
or
xor
out
mov
and
inc
or
jge
cmp
xlat
pop
popa
xchg
push
pop
pop
js
jmp
and
nop
cmpsl
adc
vmwrite
shll
mov
mov
jne
xchg
xchg
mov
push
outsl
jmp
xor
stos
add
lret
cwtl
sahf
add
or
inc
cwtl
je
imul
outsb
inc
repnz
leave
testb
stc
inc
adc
ja
aas
insb
fwait
orl
pusha
push
cmp
sti
add
rolb
dec
push
fs
jl
push
ret
sti
aas
mov
int3
and
ja
and
or
sbb
test
imul
ret
sbb
fdivs
push
xor
or
sub
adc
mov
cmp
add
xor
mov
daa
les
test
inc
mov
jmp
into
out
cmp
xchg
ja
xchg
xor
adcb
icebp
xchg
jecxz
xor
mov
mov
cltd
nop
add
adc
mov
mov
jns
jae
cmpsl
es
fsubr
pop
cmpsl
insl
gs
test
xor
mov
mov
inc
or
fucom
xchg
xchg
imul
push
pop
xor
pushf
pop
lcall
cld
sub
loop
test
push
mov
cwtl
negl
jle
lcall
sbb
incl
testl
out
cmp
jbe
xlat
mov
and
dec
pop
add
jecxz
fsubp
mov
test
repnz
lret
and
xchg
push
jmp
cltd
sti
mov
mov
ja
sbb
cmp
das
adc
pusha
cmp
lock
cmp
cmc
pop
loopne
jb
aas
mov
ja
inc
mov
xlat
imul
es
lods
sahf
fwait
add
xor
icebp
roll
lods
arpl
sub
daa
push
lea
cmc
xor
sub
xchg
fisttps
add
push
lds
xchg
add
push
rorb
jae
mov
into
fcomps
sbb
aaa
cmpsb
sarb
cs
jl
inc
cltd
dec
cld
mov
fsub
imulb
xor
sbb
jmp
mov
sbb
push
ljmp
icebp
inc
movsb
insb
fmuls
ljmp
pop
outsb
imul
lret
int
jo
inc
sysret
xchg
pusha
xor
sbb
cs
aaa
es
jnp
add
je
sbb
mov
ljmp
adc
in
jae
movsl
cli
fcompl
sub
out
xchg
push
xor
adc
movsb
scas
in
jns
aas
push
sub
retw
sahf
dec
pushf
push
xor
sbb
enter
ds
lahf
mov
mov
jb
fstpl
pop
add
jns
pusha
mov
jo
les
mov
popa
sbb
push
cmp
scas
cmp
or
add
icebp
add
ss
enter
add
jmp
and
pop
adc
jle
int
fnstcw
dec
aam
and
sbb
dec
mov
repnz
mov
js
push
and
inc
loop
cltd
jne
adc
stc
or
ljmp
pop
in
adc
gs
cmpsb
fnstcw
pop
inc
cmovbe
mov
je
enter
out
jle
cmp
and
cmp
mov
insb
and
dec
push
jge
and
add
cmp
cltd
inc
xchg
test
mov
cs
sub
ss
aas
jecxz
sti
cli
test
aas
inc
jg
sbb
rorl
or
xor
repz
mov
push
jl
and
pushf
and
aas
pop
xchg
sbb
hlt
cmp
cmp
and
inc
jnp
mov
xorl
add
or
mov
cmp
sbb
xchg
fisubl
movsl
fs
sbb
sbb
and
addr16
cmp
fidivrl
xchg
sub
ficompl
mov
pop
xor
xor
mov
cmp
jno
out
pushf
xor
faddp
xor
mov
or
sub
ret
xchg
mov
mov
mov
sub
shll
mov
cmp
mov
cmp
fwait
scas
push
sub
pop
js
add
cli
inc
shrb
int3
mov
aas
cmp
out
or
out
scas
cmc
mov
hlt
loopne
jno
notl
or
mov
dec
ja
ret
out
sub
pop
test
test
iret
mov
sahf
mov
test
test
inc
loope
mov
fdivrl
repz
pushf
sub
sbb
in
loopne
sbb
movsl
fsubp
divl
jno
push
pop
bound
shll
xchg
rclb
pop
dec
mov
pusha
es
pop
mov
leave
adc
sub
sub
or
or
inc
cmp
outsb
mull
aad
mov
push
lcall
idivl
xchg
sbb
add
inc
ja
shr
mov
stc
lods
scas
sarb
mov
lds
inc
pop
in
mov
xchg
loope
sti
popa
mov
mov
lcall
adc
int3
xchg
xchg
repnz
dec
mov
mov
arpl
hlt
mov
inc
dec
arpl
jns
fdivs
scas
xor
jecxz
cmc
jl
lds
mov
inc
leave
aas
lods
lcall
or
and
test
les
mov
enter
cmpsb
insb
add
dec
adc
mov
add
daa
int
andl
filds
mov
xchg
dec
cmp
imul
les
lret
adc
adc
fidivs
aad
inc
in
and
rcll
popf
fildl
dec
outsb
pop
sub
in
sbb
and
incl
xor
test
mov
add
les
sbb
rcrb
mov
bound
xchg
outsb
stos
adc
shlb
xchg
inc
xchg
loop
subb
and
mov
incb
push
mov
lock
inc
mov
jg
movsb
daa
sti
cltd
rolb
aad
pop
addr16
sbb
mov
dec
xchg
into
dec
fildll
mov
repz
loop
leave
cmp
fidivl
stos
push
jns
push
mov
insb
xchg
cltd
inc
loop
sarl
in
add
cmp
mov
mov
adc
mov
outsl
movsl
daa
fdiv
lock
push
mov
sub
cmp
mov
or
gs
daa
adc
std
inc
xchg
sub
sahf
and
mov
in
adc
movsb
pop
out
in
cmpxchg
enter
pop
jmp
in
dec
dec
cmpsb
pop
push
dec
xor
int
adc
data16
sub
dec
nop
mov
inc
popa
fldpi
add
lcall
cmp
fs
ficomps
mov
mov
jecxz
es
imul
out
xchg
cmp
mov
mov
jl
lret
inc
pop
andb
push
incb
mov
scas
imul
dec
popf
dec
jne
jns
add
pop
in
push
lods
cmp
push
fwait
xor
int
mov
sbb
bound
jno
inc
pop
aad
and
pop
mov
inc
mov
mov
scas
in
cmc
roll
jns
xchg
pop
mov
push
xchg
clc
pushf
or
inc
dec
movsl
push
lods
fnsave
dec
dec
mov
mov
push
jp
jne
js
aas
and
pushf
jbe
testb
imul
dec
inc
lods
test
les
aaa
push
push
mov
mov
push
repnz
sub
sub
inc
out
test
mov
aas
pushf
xlat
cmp
leave
add
mov
add
out
push
jae
gs
cmp
cmp
pop
mov
push
repnz
pop
pop
mov
int
bound
out
xchg
loop
loope
cmpsb
lahf
mov
pop
pop
or
and
lods
inc
adc
ja
dec
push
push
mov
inc
cmp
pop
cwtl
and
xlat
icebp
lahf
fidivrl
jge
les
roll
sub
sbb
out
out
push
movsl
sbb
pusha
sbb
add
scas
rcr
pop
imul
or
xchg
and
icebp
lret
scas
sub
pop
in
jge
stos
cmpsb
loop
fldcw
jns
mov
outsl
xchg
lock
shlb
push
push
into
sbb
push
ljmp
aam
ds
cmp
dec
gs
aas
fs
cmp
stos
fcompl
or
mov
jo
mull
sbb
adc
enter
adc
adc
out
sbb
fwait
imul
dec
sbb
rsqrtps
mov
data16
and
mov
cmc
pop
jns
sbb
cmp
push
mov
sbb
mov
outsl
push
out
jne
inc
xchg
stos
or
sbb
xchg
stos
mov
xlat
in
sub
mov
mov
mov
out
ret
jo
or
and
out
xchg
ss
pop
ljmp
mov
lock
sub
test
stos
int3
call
test
pusha
les
dec
pop
aas
out
sbb
leave
jnp
fwait
outsb
test
mov
xchg
ret
mov
shlb
xchg
and
adc
out
mov
lods
movsb
imul
sub
push
lcall
imul
or
adcb
fdivrl
bound
inc
xor
mov
and
adc
out
inc
cli
jae
sbb
mov
cmp
xor
xor
iret
insb
lds
jbe
imul
push
mov
ljmp
lret
rolb
pop
out
lea
int
aaa
fildll
pop
mov
sub
test
sub
lahf
mov
mov
dec
out
jae
aam
cld
pop
mov
sarl
je
lea
shl
incb
mov
fnstsw
scas
in
repnz
mov
lea
bound
out
and
loopne
xor
cmpsl
call
dec
in
iret
sbb
sahf
js
jno
mov
leave
repnz
stos
pop
fisubrl
xchg
jo
mov
stos
jecxz
test
out
fnstenv
or
inc
test
inc
mov
ret
fldenv
movsb
mov
push
loopne
pushf
hlt
and
sahf
cmc
or
mov
leave
mov
pop
lods
bnd
out
sub
lret
in
stos
adc
mov
fbld
dec
sbb
inc
or
subb
insb
popf
hlt
js
shrl
mov
inc
jecxz
mov
icebp
push
js
fiaddl
mov
stos
addr16
mov
and
xor
mov
push
xor
in
leave
inc
ret
call
insb
test
mov
mov
outsb
xor
nop
dec
add
add
jle
mov
push
hlt
sbb
mov
dec
cmc
das
adc
or
mov
jb
insl
and
lret
or
pop
mov
jns
sahf
in
push
dec
arpl
push
addr16
jne
sbb
in
fisubrl
test
out
jle
lcall
push
lea
mov
cmpsl
iret
push
pop
fldt
jmp
fs
inc
add
repz
out
fldl
mov
lret
sahf
int3
fldenv
mov
nop
xorl
lock
int3
lods
ficoml
and
add
scas
dec
hlt
xchg
xor
add
mov
xor
xlat
mov
std
mov
ljmp
mov
imulb
xchg
mov
popf
ss
pop
xchg
pop
push
lret
jne
xor
or
cwtl
xlat
shlb
pop
mov
shl
loopne
lods
jecxz
dec
xor
xchg
cmp
jmp
push
xor
out
mov
movsb
add
add
fiadds
inc
mov
stos
or
cmp
xor
jno
sbb
jns,pt
out
jae
push
pop
adc
fwait
ds
arpl
repz
add
pusha
decl
out
in
sahf
jns
cmp
mov
pop
cmp
dec
daa
pop
in
clc
xor
lret
pop
out
arpl
dec
push
sbb
pusha
pop
sub
pop
xor
inc
push
mov
roll
call
cmp
sbb
or
scas
sub
sub
dec
xor
sub
sarl
xor
rcrl
xchg
test
cmp
xchg
lods
dec
sbb
push
ret
dec
inc
fmul
cmp
cmp
xchg
in
cmp
push
test
mov
inc
mov
cmp
hlt
mov
and
aas
xor
push
es
mov
test
mov
sbb
movsb
addr16
ret
arpl
das
xchg
mov
ret
xchg
mov
pushf
mov
push
push
fs
stos
xor
sarl
addr16
mov
adc
lcall
gs
rolb
or
testl
mov
imul
addr16
ss
dec
pop
mov
test
push
add
daa
enter
push
and
lea
pop
jae
and
or
clc
data16
add
ret
das
cmpb
or
sbb
sbb
lret
fwait
out
adc
push
mov
leave
nop
push
jns
push
and
dec
ret
mov
sahf
mov
or
jb
fs
mov
pop
ljmp
xorl
sbb
push
insl
enter
xchg
push
add
jecxz
lret
insb
fucomp
dec
mov
hlt
push
cmp
mov
sub
icebp
dec
mov
jge
push
adc
mov
cli
aad
or
jmp
hlt
ret
sub
xor
mov
mov
cld
ficoms
dec
aaa
loopne
or
outsl
imul
xlat
jo
xlat
xchg
dec
adc
jl
mov
dec
pusha
xchg
test
mov
lock
cmp
imull
pop
lret
mov
adc
jne
pop
mov
iret
and
xchg
clc
or
add
push
in
sub
lea
popa
pop
mov
test
out
inc
inc
push
ret
scas
out
iret
stos
push
out
pop
and
sbb
mov
pushf
and
push
rcrb
jae
cmp
sub
inc
mov
ja
xchg
je
mov
mov
daa
sahf
push
lcall
push
cli
mov
sahf
push
xor
insb
sub
rcl
aaa
sbb
out
adc
xchg
sub
mov
xchg
lock
mov
mov
fisubrs
out
movsb
lods
mov
xchg
addr16
inc
and
sarl
popa
or
fisubrl
lcall
loop
jle
jmp
jo
sub
lcall
jae
pusha
adc
pop
inc
adc
outsb
dec
repnz
outsb
daa
inc
lock
movsl
insl
adc
and
add
xor
sahf
lret
push
mov
jae
gs
sub
iret
jmp
stos
push
shld
cltd
arpl
sbb
lds
negl
les
cwtl
in
cmp
in
inc
lcall
xchg
sbb
sub
sbb
out
xor
jmp
out
adc
xchg
fldpi
mov
mov
iret
fs
mov
jb
shrl
or
adc
es
jo
out
cltd
cltd
lds
or
xchg
mov
or
jecxz
imul
js
dec
outsb
lods
jmp
xchg
mov
es
shr
cmpsb
js
das
lods
add
xchg
xor
jecxz
mov
mov
ret
addr16
sub
imul
push
fidivrl
mov
lock
push
push
xor
movsl
pop
xchg
xchg
and
dec
js
int
cmp
pusha
ret
mov
lods
pop
mov
push
iret
mov
dec
nopl
sub
shrl
dec
or
mov
xchg
inc
andb
xchg
pop
fsubrl
lods
fnsave
push
fs
mov
pop
and
dec
dec
shlb
cwtl
flds
pop
fisubl
jp
push
adc
sbb
xchg
pop
imul
rorl
xchg
es
mov
adc
scas
es
std
xor
inc
and
int3
ss
jmp
push
push
push
arpl
push
icebp
jnp
push
pop
loope
movl
mov
out
add
pusha
mov
outsb
adc
add
ret
rclb
lods
insb
pop
js
dec
insb
out
adc
and
cmp
ljmp
push
dec
in
mov
inc
mov
xchg
mov
jp
xchg
mov
mov
adc
stc
addr16
pushf
push
mov
mov
dec
inc
jno
scas
mov
lods
pop
xor
xor
sahf
lea
adc
jo
enter
jns
mov
lds
push
fcomp
adc
rorb
fcmovnu
push
xchg
push
sti
push
mov
imul
fnsave
aam
aaa
xor
jns
lahf
jl
fstp
sarb
lret
inc
into
lds
out
out
loopne
sti
add
adc
je
out
lahf
cmp
addr16
nop
push
das
xchg
scas
jo
xchg
mov
xchg
scas
mov
ror
sub
pop
scas
jmp
xlat
sub
cwtl
scas
push
mov
sbb
pop
cmpsb
cmp
dec
xchg
inc
xlat
jno
loope
lfs
mov
pop
pop
stos
das
out
shll
xor
sub
insb
ret
push
push
fxch
mov
jp
dec
pop
push
pop
divb
cmp
xchg
or
ss
dec
xchg
sahf
or
add
shrb
jge
pop
aad
cld
cmp
out
mov
mov
leave
adc
and
xor
popa
sahf
jno
cmpl
sarl
push
loope
icebp
out
add
adc
and
xor
popa
sahf
jno
cmpl
sarl
push
loope
icebp
out
add
dec
and
xor
inc
mov
jno
cmpl
sarl
push
loope
icebp
out
add
adc
and
xor
popa
sahf
jno
cmpl
pop
dec
dec
jle,pn
outsb
push
pop
mov
imul
jecxz
rcr
and
xor
add
adc
inc
stos
push
pop
mov
imul
ret
sub
lret
push
sti
add
adc
add
mov
subl
jecxz
repz
sub
fisttpl
mov
fwait
es
sbb
xor
push
das
mov
add
adc
pop
adc
sbb
cmp
push
in
xchg
push
movsb
add
push
dec
in
xchg
mov
mov
test
xchg
insb
sbb
or
addr16
inc
int3
add
push
mov
movsb
sti
and
dec
outsb
fldenv
icebp
xorl
fmulp
jmp
outsb
out
lcall
ficompl
insb
xor
loop
repz
sub
inc
pop
sbb
adc
lret
or
fimuls
inc
into
dec
incb
xchg
insb
in
sub
mov
fs
pusha
ror
jae
popl
fisubs
mov
inc
in
push
xchg
cmpb
cmp
pushf
push
mov
or
adcl
jl
test
mov
subl
jecxz
repz
sub
lret
xor
add
adc
inc
stos
cmp
int3
sub
jle
fs
lea
inc
mov
push
sbb
inc
fistl
sub
subl
jle
inc
xchg
jle
outsb
shrl
jmp
insb
add
sbb
roll
ljmp
pop
jecxz
repz
sub
lret
xor
add
adc
inc
stos
push
pop
mov
imul
ret
sub
lret
xor
add
adc
inc
stos
push
pop
mov
adc
lret
das
stc
dec
imul
insl
les
mov
int
lcall
daa
jp
pop
fldcw
mov
pop
cmp
pusha
sub
into
fwait
pop
add
mov
ja
xchg
xor
ss
dec
imul
sbb
sarl
sub
enter
lock
xchg
xor
and
lods
mov
insl
xor
or
rorb
shr
in
dec
scas
inc
loopne
rcl
js
sub
imul
test
fcompl
fwait
das
popf
push
repz
push
pop
inc
fiadds
xchg
jb
cmp
inc
ds
xor
cld
imul
aas
fdivrs
andl
ds
lcall
mov
ljmp
fstps
xchg
cmp
push
cltd
lret
push
inc
sub
mov
xorl
or
lea
cmpsb
inc
out
mov
cmpsb
mov
sub
ret
push
movsb
xchg
ds
sbb
lret
cltd
jns
mov
or
shl
sti
imul
adc
mov
push
xor
mov
les
iret
test
mov
fmulp
lods
xchg
mov
aas
enter
mov
mov
fcomps
scas
mov
or
push
pop
push
and
or
ja
icebp
scas
mov
inc
or
lcall
jg
arpl
mov
out
fistps
hlt
inc
addr16
push
and
sub
lds
cltd
push
dec
mov
call
lock
mov
dec
pop
sub
xor
xchg
pop
test
pop
mov
and
das
int
and
sub
mov
sarl
and
sub
adc
mov
movsl
mov
pop
sbb
rcrb
clc
fsub
cmpsl
xor
inc
mov
std
in
push
enter
sbb
xchg
push
mov
mov
or
add
or
add
rclb
enter
clc
push
mov
stos
mov
cltd
imul
or
jne
scas
xlat
lcallw
gs
lret
fidivs
int3
nop
or
test
into
and
pop
sbb
fcmovbe
rolb
and
push
mov
push
int
adc
std
sub
dec
daa
lret
xor
cwtl
sbb
pop
mov
aaa
and
add
addr16
call
fadds
ret
imul
je
adc
and
jae
mov
xchg
lret
cmp
scas
mov
sub
stos
sahf
xchg
push
ret
push
sub
jp
xchg
popf
sub
movsl
test
xchg
mov
push
test
inc
daa
mov
push
fsub
aas
hlt
mov
leave
pop
mov
adc
test
cwtl
je
in
arpl
inc
cmp
mov
inc
jg
or
xchg
pop
inc
xchg
mov
ljmp
adc
je
xchg
cwtl
cs
mov
mov
or
outsb
dec
popf
inc
mov
dec
pusha
add
les
es
nop
fimuls
xchg
xchg
jno
inc
outsb
sub
clc
mov
ljmp
ja
and
jecxz
add
jl
push
and
hlt
fistl
arpl
pusha
cli
in
mov
out
push
sbb
mov
adc
mov
ds
divb
mov
in
test
scas
ja
mov
push
mov
pop
adc
icebp
and
xchg
mov
inc
int
mulb
lret
cwtl
mov
cmp
pushl
dec
negl
jb
stos
jecxz
aas
cs
call
jecxz
jp
fstpt
mov
push
cmp
sbb
xchg
or
push
xchg
pop
stos
stc
add
push
stos
add
test
or
stos
sbb
sti
clc
fdivl
adc
push
and
in
push
shlb
insb
ret
stos
pushw
dec
sbb
lds
iret
imul
xor
lcall
mov
inc
ret
fisttpll
mov
rcrb
or
arpl
mov
inc
pop
inc
cs
enter
lods
rol
xchg
jns
mov
data16
dec
lods
push
movl
bound
add
dec
cmp
js
and
cltd
jbe
test
and
ds
mov
mov
mov
mov
test
sbb
add
fdivrs
inc
add
mov
and
xor
movsl
xchg
sbb
dec
imul
loope
inc
loopne
rolb
pusha
push
scas
bound
fwait
call
sbb
out
xchg
loop
xor
popa
and
mov
sar
ds
mov
pusha
xchg
sahf
xchg
daa
in
xor
scas
mov
in
mov
sahf
and
mov
cmp
jg
or
push
rcrb
and
je
pop
pop
flds
into
xchg
arpl
jmp
mov
lahf
fprem1
jge
int
and
int
or
jge
movb
loopne
pop
dec
mov
lret
lock
push
pushf
or
lahf
mov
cwtl
mov
pop
lahf
add
xchg
cmp
call
pusha
pop
fistpll
cmc
lret
repz
popf
aas
rcr
mov
repz
push
cld
addr16
sti
jle
cmp
lock
cmp
xchg
outsb
and
ss
imul
mov
setb
push
mov
adc
aad
fcomps
mov
pop
or
ret
and
jecxz
fistpl
sbb
out
and
sbb
cmc
gs
fs
ja
adc
fsts
add
rolb
pop
dec
mov
xchg
int
mov
dec
popa
xor
pop
push
and
leave
push
jo
push
mov
es
js
adc
hlt
add
jnp
nop
fdivl
cltd
or
movsl
xor
sub
lret
test
adc
add
push
pop
aam
mov
push
mov
and
jg
orl
cmp
inc
sbb
pop
aam
int
cmp
mov
rclb
add
call
imul
cmp
scas
and
dec
cmp
inc
cmc
dec
mov
imul
popf
xchg
dec
add
test
loope
xlat
lods
int3
add
inc
adc
ficoms
mov
ja
pop
mov
cltd
push
imul
cmp
sbbl
sbb
fwait
andl
xchg
pop
in
clc
xor
cs
loopne
testl
or
adc
ss
xor
or
lds
lods
daa
cmpsb
dec
pop
push
stc
imul
roll
mov
cmp
test
bnd
test
repnz
lahf
cs
into
push
bound
mov
jmp
aas
jae
imul
imul
sbb
stos
jmp
pop
loope
iret
jbe
lcall
mov
ja
dec
sti
push
jb
push
pop
cltd
and
push
inc
orl
cwtl
scas
cmpsb
popf
pop
dec
mov
mov
or
mov
sbb
lock
pop
loopne
and
ss
loopne
adc
sahf
ja
ror
ja
or
or
gs
push
popf
je
stos
shll
dec
push
mov
mov
mov
adcb
push
pop
jno
inc
mov
lcall
and
rcr
cmp
mov
xor
jb
stos
cmp
fwait
sub
pop
mov
lahf
adc
or
jno
loop,pt
out
nop
test
mov
fcoms
inc
mov
test
mov
cmpsl
xor
mov
subb
lret
xchg
mov
jmp
jl
inc
mov
jnp
or
cmpsl
xchg
sub
lock
mov
add
or
mov
pop
push
es
xchg
pop
aam
in
jge
loop
xlat
lahf
add
ja
dec
adc
sbb
andl
clc
addl
xchg
jns
cmp
in
sbb
cmp
cmc
pop
lds
jo
dec
xchg
adc
jg
inc
cli
mov
dec
adc
insl
jg
in
ja
sbb
pop
in
rcll
ja
add
inc
inc
jbe
out
fsubl
test
out
imul
rcl
imul
int3
inc
cmpsl
psllq
cwtl
iret
inc
push
mov
pushf
imul
sbb
les
add
xchg
xchg
push
test
or
jle
stos
daa
jb
pop
sub
test
push
aad
xor
mov
jne
sahf
insl
rol
aaa
mov
dec
mov
pop
xor
xchg
js
adc
push
cmp
loop
imulb
pop
insl
aaa
in
pop
adc
ss
push
push
cmp
in
sbb
and
sub
cwtl
imul
or
dec
mov
gs
mov
int
or
outsl
aad
push
out
bound
das
mov
cmp
cltd
xor
enter
sbb
fsubrl
mov
mov
mov
fcomps
inc
jns
adc
testl
fistpll
xchg
mov
leave
jo
fucomp
lea
sub
out
xchg
mov
mov
pop
mov
pop
shr
test
pop
outsl
push
incb
pop
in
mov
mov
add
xor
data16
xor
or
pushf
push
push
sbb
mov
fs
pop
nop
jns
sbb
dec
jb
mov
fisubl
je
les
jb
fstpt
stos
inc
fsubrl
inc
xchg
std
mov
mov
into
fidivs
lods
je
sbb
popf
test
and
sahf
add
pop
add
inc
mov
xor
mov
les
das
lods
pop
in
test
dec
int
push
sub
inc
call
mov
adc
lahf
push
arpl
orb
sbb
in
call
push
mov
loopne
fcomip
gs
cmpsb
iret
pop
jno
xchg
cltd
pop
shll
mov
jb
sbb
arpl
out
sub
pop
dec
mov
scas
cld
pop
loope
stc
jmp
ret
inc
repnz
fs
dec
add
mov
decb
xor
mov
adc
in
lcall
fwait
jb
mov
adc
hlt
pushf
cmc
inc
mov
add
lods
xor
je
repnz
je
mov
lcall
lret
pop
fidivs
lcall
or
xchg
clc
es
mov
xchg
rcr
or
cld
dec
mov
rcrl
and
cwtl
in
stc
sub
out
adc
xchg
and
adc
shlb
shlb
sub
lret
dec
es
test
fwait
adc
jge
add
jp
or
pop
add
fdivrs
lea
dec
jns
jge
cltd
mov
shrb
in
push
jecxz
aaa
push
movsb
popf
add
rclb
adcb
cwtl
lret
cmp
fmuls
repnz
push
add
adc
daa
mov
or
sub
movsb
bound
jae
aam
cmpsb
sub
pop
lock
imull
cld
int3
lea
shll
jg
and
mov
aam
addr16
stos
clc
sbb
pop
lea
mov
insl
add
mov
rcrb
mov
inc
mov
mov
movsb
push
dec
or
in
pop
mov
dec
mov
or
dec
subl
stos
rclb
out
cs
fxam
or
cmp
aaa
sarb
rcl
xchg
cmpsb
pop
imul
adc
xor
mov
mov
in
xorl
xchg
int3
pop
mov
test
cwtl
dec
out
mov
std
cwtl
les
cmpsb
cli
and
out
scas
push
ja
pop
inc
cmp
rcll
outsl
jl
pop
adc
mov
in
sub
pusha
mov
movsb
sub
in
dec
outsl
insl
loop
cmc
mov
and
and
cmp
jl
or
inc
mov
fisubrl
jge
test
fmuls
mov
fucom
bound
cmp
lods
pusha
jns
leave
aas
mov
shrl
ja
fsub
es
inc
in
cmp
fwait
pushf
in
push
jle
mov
xchg
mov
xchg
in
fcompl
lods
xchg
sti
xchg
mov
xor
ds
orb
je
movsb
addr16
jl
inc
jp
pop
lret
mov
repnz
or
cld
outsl
mov
loopne
cmp
add
data16
repz
pop
ds
mov
addl
and
cmc
mov
les
insl
fisubs
sbb
inc
ja
cltd
fcomps
inc
mov
mov
and
jle
add
mov
popa
sub
jmp
bound
stc
gs
cltd
loopne
stos
mov
xchg
dec
inc
psubw
xor
mov
jbe
xor
sub
cmp
or
sarb
jp
jne
leave
and
dec
lret
sbb
gs
roll
mov
sub
iret
mov
lods
inc
clc
pop
and
outsl
test
sub
inc
lcall
call
push
cmp
aaa
rcll
in
loope
js
addr16
jo
aaa
pop
outsb
adc
in
jg
fisttpl
ret
dec
mov
xor
ret
test
dec
hlt
cs
stos
mov
xlat
sti
loope
subb
cmp
addr16
loopne
imul
mov
or
stos
insl
mov
insl
test
test
pop
dec
insl
sbb
inc
xor
das
inc
add
ficoms
lods
scas
mov
mov
rorl
mov
jno
insb
push
fs
mov
inc
dec
mov
lret
ja
sbb
push
sub
std
clc
adc
cltd
adc
lahf
stos
jl
int3
push
and
fwait
sub
adc
add
outsl
jmp
flds
shrb
cmp
cld
jo
sti
inc
mov
pop
out
stc
cmpsl
jno
out
enter
adc
push
push
pop
push
adc
xor
scas
fildl
inc
jno
das
mov
inc
add
lods
push
shlb
cmp
dec
mov
jl
xor
and
outsb
sbb
icebp
popa
enter
not
xchg
or
pop
roll
cmp
add
dec
pushf
enter
xor
jmp
cmpl
sub
mov
into
clc
dec
shlb
xor
sbb
paddsw
mov
push
dec
xchg
out
cmp
jl
cmp
jp
call
fnstcw
outsb
push
scas
cmp
sbb
imul
fmulp
jmp
iret
rcrl
cmc
xchg
mov
loop
jl
adc
lock
jne
hlt
outsl
jae
add
fs
lret
test
or
jne
push
call
xorl
daa
sbb
dec
pop
cwtl
bnd
int3
adc
mov
inc
xor
lea
jge
aaa
test
into
inc
dec
mov
sub
add
js
push
mov
and
daa
jmp
imul
push
jge
inc
popf
cmpl
fdivr
inc
fcomps
push
inc
sub
aad
cmc
fnsave
jb
jno
jp
inc
arpl
inc
lcall
stos
mov
sbb
sbb
dec
push
cltd
inc
insl
fidivrs
leave
sub
pop
loop
dec
cmp
or
or
notl
cmpsb
sbb
xor
pop
cwtl
cmpsl
or
push
in
bound
push
in
jns
test
pop
aad
xchg
pushf
push
jbe
adc
cmp
rorl
fcomi
pop
js
pop
jmp
inc
das
inc
popl
stos
imul
inc
xchg
ficompl
enter
push
mov
or
aam
out
pop
mov
sub
daa
add
xchg
cs
jecxz
push
sbbl
fstp
hlt
loopne
imul
mov
pop
mov
sbb
in
lds
pop
push
pushl
pop
cmpsl
inc
sub
mov
stos
outsb
bound
dec
cld
mov
popf
dec
pop
inc
int3
stc
sub
scas
scas
sub
mov
pop
mov
xor
int
movsb
decb
fs
push
jnp
mov
mov
lds
pop
test
mov
dec
repz
jmp
jp
mov
test
and
inc
iret
ficoml
in
add
sbb
es
scas
shll
hlt
add
xchg
sbb
adcb
shll
addr16
push
inc
out
sub
and
cmp
loope
pusha
mov
xchg
mov
push
pop
fidivl
mov
cmp
inc
scas
shr
xor
and
cmpsl
sub
push
push
xchg
cmp
stos
enter
lcall
imul
subb
inc
sahf
add
fidivrs
orl
in
scas
int3
xchg
and
repnz
fs
call
sub
rol
pop
xchg
adc
xchg
jae
dec
hlt
fnstcw
out
xor
out
aad
xor
pop
movsb
jo
jge
dec
out
or
mov
inc
inc
out
dec
sub
inc
add
cmp
and
push
or
jle
pop
lock
or
lods
es
inc
in
fs
push
mov
aaa
jno
hlt
loope
push
pusha
out
sub
sub
mov
clc
ret
add
fcmovne
stos
call
scas
dec
fwait
enter
hlt
jne
mov
rorl
hlt
and
xor
loope
das
shlb
xchg
sub
pop
stos
mov
pop
adcb
adc
dec
lods
test
adc
mov
dec
cmp
rcr
mov
mov
jo
dec
mov
mov
xchg
adc
sub
fsubs
mov
outsb
xchg
pop
fcmovne
in
lea
call
inc
pop
sbb
inc
arpl
dec
les
pop
es
dec
call
add
in
and
scas
cmp
out
mov
fdivrl
call
push
bound
mov
dec
lods
into
push
int
xor
xor
dec
mov
rcrl
sti
mov
dec
outsl
cmc
movsl
iret
pop
mov
mov
mov
js
xor
pop
pusha
es
sub
dec
mov
lea
sub
jg
lods
push
fwait
inc
inc
test
jmp
mov
mov
cmp
fisttps
jmp
mov
fucomip
mov
scas
fnstcw
mov
shlb
xchg
adc
dec
mov
push
jbe
xlat
sub
addr16
aam
dec
jae
shrl
pop
movsb
scas
ret
daa
push
push
loopne
adc
ds
pop
dec
icebp
gs
nop
xor
mov
jecxz
mov
dec
lea
aad
outsb
xchg
daa
jmp
test
call
pusha
mov
ss
xor
cmp
fisubrl
pop
push
clc
repz
cmpsl
pop
push
pop
jnp
and
dec
cmpsl
mov
imul
out
xor
and
int
shlb
ljmp
rclb
jmp
xchg
out
movsb
mov
sbb
mov
inc
inc
push
mov
fnstcw
push
nop
push
dec
adc
sub
mov
jl
cmpsl
rcrl
pop
jecxz
loope
inc
stc
jmp
inc
jp
adc
inc
pop
jle
lds
push
imul
jae
rcr
dec
insb
fldcw
sub
sub
movsb
sbb
cmpsb
and
sbb
int
aam
movsb
cmpsb
std
aam
lea
cmpb
pusha
jo
pushf
jns
mov
jp
xchg
outsb
xchg
xor
icebp
push
lock
mov
scas
push
icebp
out
dec
xchg
das
and
jge
xor
cmpsb
daa
lret
addr16
popf
cmp
daa
xchg
pusha
xor
push
outsl
push
stos
cltd
and
push
xchg
lds
jle
add
and
xlat
mov
pop
add
sbb
ss
jb
cmp
test
sbb
mov
inc
test
imul
fdivrs
je
or
subl
xor
fs
fsts
sbb
sbb
pop
pop
pop
sahf
pop
subb
jno
xchg
aaa
jecxz
add
sub
out
jnp
jg
rcl
aas
out
cmp
mov
xchg
xor
lock
sub
jnp
cld
popf
cmpsb
jge
add
add
fstp
sbb
int
mov
sahf
aas
out
leave
jge
inc
bnd
push
pop
repz
xorl
jp
inc
push
xor
sahf
fnstsw
test
inc
pop
stos
jb
mov
pop
push
outsb
cmc
cwtl
out
jp,pn
mov
mov
fwait
adc
stos
cmp
xor
aad
adc
out
xor
jno
pop
in
push
mov
push
scas
call
inc
xchg
or
nop
orb
sub
add
andb
mov
lods
mov
mov
mov
jmp
or
jne
negb
iret
pop
mov
mov
subl
jecxz
repz
sub
lret
xor
add
adc
inc
stos
push
pop
mov
imul
ret
sub
lret
xor
add
adc
inc
stos
push
pop
mov
imul
ret
sub
fisubl
ljmp
inc
stos
push
pop
mov
imul
ret
stos
shll
xor
push
add
fs
jmp
mov
push
lods
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
movsl
xchg
into
test
cmc
cli
xchg
shl
fucomp
sahf
jns
lds
dec
add
jle
push
push
push
shr
movsl
stc
into
test
cmc
scas
in
aad
lds
je
add
ds
push
inc
push
or
into
pop
fsubrp
scas
test
push
push
push
and
pusha
pop
push
jl
pop
add
push
fucomi
jmp
xor
push
out
jge
jb
sub
mov
xor
gs
test
pop
out
mov
fistl
inc
pop
orb
rcll
nop
dec
stc
pop
mov
cmp
dec
sti
loopne
loopne
xchg
mov
stc
movsb
xor
arpl
add
or
imul
imul
sub
into
xor
and
mov
push
lock
aas
dec
jae
add
scas
insl
inc
pop
jno
enter
jg
mov
insl
xor
gs
cmovns
imul
xchg
iret
jnp
or
mov
push
xchg
and
dec
icebp
pop
clc
shll
lret
inc
push
out
out
repz
xchg
into
test
adc
arpl
arpl
pop
cmp
push
inc
pop
faddl
std
cwtl
lcall
out
xor
and
pop
inc
or
mov
jnp
scas
shlb
adcb
sub
adc
inc
or
jnp
jo
mov
stos
cmpsb
ret
aad
lds
adc
cs
push
inc
push
mov
movsl
xchg
into
test
cmc
scas
in
aad
lds
adc
cs
push
inc
push
mov
add
push
cmp
or
loopne
ja
mov
call
jmp
sbb
or
jmp
and
int3
lds
cltd
aaa
stos
je
dec
lods
push
enter
mov
xor
cmp
rcrb
sbb
dec
aas
lock
jge
in
pop
jne
sub
inc
mov
sbb
dec
push
adc
add
xchg
mov
xor
out
mov
push
xchg
imull
mov
movsb
stc
xor
js
rclb
adc
and
mov
pop
cltd
push
cmpsl
and
ljmp
jge
icebp
mov
adc
cmp
unpcklps
fadds
outsb
push
mov
cmpsl
out
cmp
movsb
enter
cli
hlt
mov
add
test
test
jg
pop
and
jo
dec
cmp
fdivrl
aas
pop
sub
hlt
sar
jo
sbb
jge
xor
or
mov
mov
cmc
int3
into
jecxz
inc
mov
xchg
xor
ljmp
dec
cli
or
movsb
xor
andb
enter
gs
les
lea
daa
mov
jl
out
dec
out
inc
push
fiaddl
lcall
ss
outsb
push
mov
pushaw
dec
xor
inc
mov
rcrl
mov
xchg
call
xchg
xchg
mov
cmp
into
jne
dec
xlat
push
sub
popa
popf
ret
lea
test
insl
loopne
ror
jmp
aas
xchg
mov
push
mov
test
ss
ret
or
add
and
sbb
mov
push
or
out
sub
add
pusha
push
ret
pushf
jbe
fs
lods
mov
xchg
imul
iret
or
loop
inc
and
pushf
repnz
subb
jb
dec
jg
and
ja
jp
mov
cs
pop
gs
push
adc
inc
dec
jno
leave
sub
mov
cmc
sbb
add
cld
adc
xchg
fistpll
push
sbb
ret
dec
xor
jecxz
pop
dec
jp
push
mov
dec
sti
out
cwtl
cmp
sbb
les
aam
adc
xor
mov
jb
sub
add
or
lcall
in
pop
or
dec
in
ficomps
adc
add
fst
inc
jae
jmp
leave
jns
bound
add
lcall
arpl
sti
cltd
push
sbb
loop
sbb
ret
adc
repz
mov
dec
dec
push
out
cld
push
lds
inc
xor
inc
push
xor
sbb
push
pop
sbb
or
sarb
push
imul
clc
inc
mov
mov
int
pop
jne
aas
in
mov
insb
scas
adc
stc
popf
outsb
and
stos
arpl
add
ss
add
mov
cmpb
pop
mov
outsb
mov
daa
les
inc
cli
call
jp
insb
or
push
pop
inc
xchg
lcall
out
mov
out
mov
int3
leave
fs
add
leave
out
pop
jl
push
sti
add
mov
xchg
mov
fld
ficoml
adc
gs
or
daa
mov
pop
lahf
cmp
or
inc
adc
loop
mulb
jle
inc
gs
pop
movsb
pop
pop
push
repz
daa
pop
push
mov
lds
imul
lods
sbb
pop
pop
fdivrp
fsubl
cltd
test
mov
xchg
cltd
pop
sbb
rcr
shll
or
cltd
add
or
rclb
and
pushf
enter
dec
cs
mov
pop
lds
int
jb
inc
mov
pop
mov
pop
ffree
in
inc
jge
lea
add
pop
insl
adc
pop
mov
aas
movsb
ds
mov
popf
push
shl
mov
andl
aam
icebp
loop
jge
imul
out
inc
inc
out
xchg
cmp
pop
sbb
dec
jmp
bound
loop
push
push
hlt
insb
inc
adcl
mov
sub
sbb
xchg
scas
in
ja
fdivr
adc
bound
adc
mov
lret
mov
mov
in
loopne
sbb
mov
test
xchg
loop
add
jnp
lahf
popf
adc
nop
sub
mov
call
dec
mov
inc
lods
scas
out
mov
jle
sbb
lcall
pop
jmp
das
sub
adcl
out
and
mov
dec
loop
sub
popa
sti
test
outsb
std
aad
mov
jnp
lods
subb
mov
cld
das
bswap
repnz
daa
sub
xchg
es
ljmp
jmp
dec
jecxz
pop
jp
mul
xchg
mov
es
xchg
fwait
clc
or
pop
sahf
sub
inc
shrb
xlat
enter
sbb
mov
or
inc
test
xchg
jg
add
xchg
push
enter
push
ljmp
inc
scas
rcrb
hlt
mov
push
shrl
sbb
sbb
or
xor
dec
dec
push
fnsetpm(287
or
rorl
gs
daa
cmp
sub
es
xchg
push
lret
mov
stos
sub
sub
or
les
xor
lods
mov
adc
mov
sub
imul
push
lds
ss
data16
sbb
scas
sbb
int3
push
arpl
sub
sbbl
test
mov
pop
cmova
adc
add
test
push
xor
insb
push
pop
lcall
shr
sbb
jo
fistpl
pop
fmull
xor
xor
pop
mov
or
jae
mov
sbb
test
push
cwtl
ja
ja
dec
add
stos
stc
movsl
dec
iret
mov
cmp
pop
xchg
in
fsubs
scas
fldl
or
std
mov
out
lret
repnz
sub
lahf
insb
fistps
shll
mov
pop
mov
incb
add
push
sub
sbb
and
and
in
test
outsl
sub
sub
jb
xor
in
rorl
push
and
mov
xchg
mov
add
pop
pop
repz
push
jnp
xor
mov
mov
pop
xlat
incl
pop
mov
sarl
movlps
bound
xchg
xor
shll
into
sub
dec
sar
cld
mov
xor
test
add
lds
notl
cld
das
cmp
inc
mov
fcoms
mov
sbb
push
fistl
pusha
sub
les
movsb
pop
popa
mov
cwtl
ds
test
push
pop
cmpsl
jmp
popa
pop
icebp
fs
incl
repz
aas
xchg
leave
pop
xchg
lret
je
shl
pusha
jmp
das
int3
sub
lods
popa
add
int
push
sbb
fildl
adc
imul
inc
push
jo
sbb
jmp
jle
call
mov
mov
pop
sub
mov
outsb
in
fwait
adc
sbb
enter
fidivs
stos
popa
add
adc
pop
adc
cmp
pop
cmp
orb
jmp
orl
scas
inc
mov
pop
fidivrl
sub
or
das
cs
test
cli
adc
mov
rcll
sbb
lods
push
clc
cld
sub
test
orb
mov
or
push
adcb
das
xchg
out
push
mov
iret
mov
sub
pop
divl
push
mov
jg
shrb
sarb
imul
pop
in
pushf
cld
mov
mov
popf
sbb
popf
popa
cmp
sbb
outsl
jmp
jl
das
or
push
adc
ss
das
or
xor
cltd
inc
jns
push
jge
ret
decb
add
insl
jmp
fldt
xor
fistpll
xor
sarb
push
sahf
jg
xchg
imul
mov
lcall
scas
gs
in
lods
jo
adc
fs
push
xor
xchg
add
leave
jo
xor
jae
sbb
aad
lret
sarl
xchg
pop
sbb
pop
mov
and
cmc
sbb
stos
int
push
mov
mov
scas
adc
xchg
pop
in
int3
mov
dec
add
ljmp
test
and
daa
sbb
je
je
mov
in
int3
ret
test
and
jb
or
iret
movsl
jmp
cwtl
popl
jno
jbe
cmp
mov
xchg
push
iret
cltd
xchg
adc
ljmpw
mov
push
imul
icebp
jl
lret
test
mov
pop
sbb
jne
cld
bnd
scas
xchg
add
sbb
loopne
push
adc
or
mov
add
inc
xor
mov
dec
iret
inc
sub
cmpl
sahf
jge
mov
fimuls
lcall
cwtl
push
add
lods
daa
mov
int
mov
mov
clc
sub
pop
imul
fistpl
stos
pusha
mov
xor
imul
push
push
lcall
mov
adc
push
sub
hlt
push
inc
rcrl
arpl
jecxz
lds
orb
scas
or
int
mov
ljmp
lret
mov
mov
jne
fdivr
movsb
test
insl
xchg
push
iret
push
add
pop
jns
mov
mov
add
cmc
out
fs
adcb
cmp
pop
jle
fistpll
sub
jmp
out
cmp
sbb
and
jg
add
mov
xchg
sub
jbe
mov
cld
imulb
pop
roll
dec
mov
and
jp
adcl
lret
mov
jns
mov
cltd
push
das
xor
sbb
or
cmpl
and
dec
inc
insb
lds
dec
aas
dec
es
mov
mov
mov
ja
rorl
pushf
push
insl
pop
and
movsl
push
adc
ja
sub
test
inc
je
movsb
xor
or
and
iret
jecxz
mov
inc
int
inc
ljmp
insb
mov
push
or
in
stc
repz
inc
mov
jne
sub
mull
lahf
inc
xchg
lret
call
leave
mov
mov
aad
xchg
pop
adc
pop
std
xchg
add
lcall
scas
mov
cltd
call
adc
jl
cltd
xlat
adc
ja
cld
imul
ret
out
out
test
jecxz
xor
aam
mov
mov
xor
les
ds
sbb
rep
dec
jg
adc
jp
imul
dec
lahf
sbb
xor
das
mov
mov
sub
pop
loope
stc
je
push
mov
leave
sbb
pop
fildll
xchg
pop
add
xor
dec
mov
ret
nop
adc
scas
es
and
jo
addr16
cmp
adc
mov
and
daa
adc
or
mov
push
loope
add
adc
add
mov
adc
jle
add
cmpsl
mov
mov
mov
insb
test
cmp
mov
out
insl
xlat
push
pop
jb
lcall
add
insb
dec
pop
loop
lret
insl
xor
test
cmpb
mov
xor
push
mov
or
and
xor
imul
ja
test
and
xchg
popl
cmpsb
xlat
js
jmp
aam
fcmovnu
cmp
jae
pop
add
xlat
push
dec
lret
jne
scas
push
cs
and
in
rorb
inc
jno
mov
push
pop
mov
stos
sbb
push
xchg
int3
mov
ljmp
iret
pop
pop
ret
cmp
arpl
add
xor
adc
fsubs
and
int3
lods
repnz
fisubrs
jl
and
pop
jg
data16
std
push
fnstenv
movsl
or
sub
jae
jp
lods
sbb
xchg
cmpsl
jp
push
cmp
dec
sub
in
outsb
jp
fldcw
aaa
mov
xchg
fst
mov
cltd
add
cld
cwtl
add
ss
sbbl
xchg
mov
or
xchg
pop
out
push
push
adc
push
mov
xchg
je
rorb
nop
or
fidivrs
sbb
pop
adc
jl
sbb
pop
bound
mov
cmp
aad
inc
cmp
and
inc
iret
movsl
lock
adc
pop
push
dec
or
ret
dec
cmp
xchg
lahf
mov
or
sub
adc
inc
push
movsb
jle
inc
adc
push
loope
xorl
mov
adc
js
sub
push
xchg
sbb
jnp
dec
sti
aas
popa
addb
cmp
shrb
or
das
cmp
notl
sub
roll
jno
jl
jb
fcmovnb
pop
ds
jns
or
cmc
lds
test
outsl
and
or
sbb
xor
js
rcll
lahf
mov
test
ds
mov
jmp
pop
popl
sbb
testb
dec
jb
push
adc
aas
mov
gs
fisubs
jmp
xlat
pushf
scas
scas
inc
xchg
dec
xor
adc
outsl
mov
mov
mov
lcall
in
in
push
mov
pop
pop
sub
in
rcr
test
scas
pop
cmp
mov
outsb
xchg
mov
xor
adc
jl
inc
dec
into
lods
out
pop
mov
sbb
push
ret
mov
mov
out
mov
and
daa
or
out
mulb
rolb
dec
and
mov
pop
movsb
adc
nop
mov
jp
ja
sbb
outsb
std
push
adc
lcall
mov
ss
mov
ss
and
adc
mov
mov
dec
sbb
cmp
sarb
gs
pop
je
adc
jne
cmp
icebp
dec
iret
popf
mov
pop
adc
idivb
pop
das
fistps
jno
add
out
mov
iret
lret
and
and
xor
mov
lea
popf
repnz
into
call
int3
and
outsl
push
or
push
and
jb
pop
xor
test
mov
adc
dec
sub
xor
test
inc
and
aaa
outsb
jnp
rcrl
pop
inc
in
pop
rclb
dec
test
push
add
pop
outsl
adc
push
add
fstp
cmp
adc
fwait
sub
jmp
mov
or
nop
out
mov
aas
fcmovnbe
scas
shlb
fnstcw
sarl
push
aad
mov
push
pop
cmp
insb
daa
sbb
jg
sahf
fsubl
inc
mov
sub
mov
insl
xor
xlat
leave
imul
or
popa
xor
lret
fimull
sub
and
push
add
test
les
ja
out
jns
or
pop
lret
or
icebp
pop
jg
mov
daa
bound
ret
xor
mov
cmp
jnp
jae
ss
mov
xor
xor
repz
and
scas
jle
sub
sub
popa
jge
cmpl
fdivrl
or
das
and
mov
xor
gs
mov
insb
sbb
push
dec
insb
fildl
mov
ja
insb
fidivrl
in
sbb
aaa
insl
subps
aaa
mov
add
push
pushl
jl
mov
cmp
push
jmp
sbb
sti
mov
inc
hlt
xchg
pop
movsb
adc
xchg
mov
jb
clc
xchg
shlb
jbe
jecxz
stos
lea
mov
js
outsl
add
add
mov
int3
bound
cwtl
leave
movsl
decl
push
mov
jns
inc
icebp
je
xor
in
pusha
sti
std
jo
gs
fwait
dec
movsl
mov
jg
mov
mull
sub
sub
iret
lods
or
adcl
add
push
dec
push
adc
aas
adc
lods
lock
out
sahf
mov
pop
mov
int3
dec
cmpsb
cmp
mov
sub
jnp
xchg
dec
sub
mov
aas
mov
adc
xchg
outsl
push
lahf
scas
cmc
mov
xchg
sub
dec
stos
push
subl
loop
or
pop
xchg
lea
push
jo
popa
fidivl
pop
aam
push
out
cmp
mov
cmp
mov
gs
xlat
cmp
leave
push
jl
pop
xchg
push
mov
sub
inc
jg
dec
ds
insb
push
mov
jo
mov
xchg
dec
push
xchg
push
std
push
and
fmuls
mov
int
pop
push
pop
fwait
leave
sahf
or
xchg
jns
mov
les
sbb
cmp
xchg
pop
int3
outsl
push
dec
inc
test
icebp
push
sbb
in
shll
xor
mov
nop
pop
repz
jmp
icebp
loop
dec
sbb
or
orb
pop
or
mov
sti
push
push
push
leave
or
lcall
jno
push
mov
ror
pushl
sbb
jbe
cmpsl
shl
add
mov
add
inc
je
mov
dec
jge
jl
ss
push
scas
cmp
sub
das
cmp
pushf
out
out
test
jmp
xor
sbb
mov
loop
mov
roll
cwtl
mov
data16
js
outsl
out
js
mov
sub
push
mov
push
push
sarl
in
cmpb
jecxz
daa
push
les
lcall
call
mov
and
push
pop
std
jle
popa
pop
addb
mov
pop
in
bound
fisttps
ret
mov
clc
mov
into
mov
data16
pop
cmpsb
insb
xchg
icebp
fbld
xor
mov
les
test
rcrl
jp
fldenv
cmp
scas
push
dec
xor
mov
int
scas
inc
mov
mov
ficomps
adc
add
sbb
ret
outsb
xchg
xchg
mov
mov
outsl
jge
xchg
push
lods
clc
mov
sahf
in
imul
outsb
daa
jmp
loope
xchg
sbb
loopne
jns
ret
pop
clc
xlat
sti
cli
sbb
or
lods
and
popa
dec
dec
jns
xorl
pop
adc
mov
jl
movb
lret
sbb
nop
sbb
pop
cs
lds
mov
call
mov
and
rcll
aad
mov
sub
outsb
lock
sub
dec
insl
arpl
pop
push
lret
xchg
sub
xor
push
or
pop
adc
cwtl
insb
jns
xorb
mov
rcrb
mov
aam
adc
pop
jno
scas
fiadds
fbstp
xor
xor
ds
push
and
fdivrl
push
add
lret
clc
fisttps
mov
fs
push
movl
ret
fdivrs
out
addr16
stos
je
mov
xlat
mov
mov
scas
imul
bnd
popf
mov
adc
xchg
testl
hlt
xchg
sahf
fmuls
sbb
loope
and
mull
mov
xor
inc
test
jns
lods
fiadds
sbb
pop
arpl
icebp
adc
fldenv
bound
out
adc
aaa
ret
notl
inc
mov
ret
pop
mov
and
cli
add
sbb
push
fs
jge
inc
je
cli
jns
movsb
cmp
sbbl
repz
int
stos
push
push
and
fistpl
mov
mov
sbbb
pop
and
inc
call
sub
push
mov
pushf
outsl
iret
jnp
jo
sub
sarb
inc
jle
lret
bound
lds
out
out
add
int3
xlat
push
and
inc
fmul
aad
dec
lods
aad
jo
mov
clc
push
test
shl
fists
stc
negl
sbb
jge
pushl
sbbl
incl
mov
loopne
fnstenv
and
mov
out
das
jne
push
hlt
and
negl
sbb
stos
incb
lds
or
sbb
or
dec
xchg
es
inc
cmpsl
pop
jae
mov
aam
sub
mov
mov
in
mov
divb
jno
add
pop
repz
pop
jecxz
data16
xchg
fadds
test
mov
pop
in
int3
movsl
inc
clc
dec
xchg
outsb
imul
cltd
je
sarb
stos
ret
test
stos
and
and
dec
pop
das
hlt
xchg
mov
subb
insl
pop
gs
out
test
jo
push
fiadds
xchg
jb
mov
pop
cmp
shll
inc
rclb
cmpsl
fxch
cld
aad
iret
test
or
add
mov
or
fwait
or
iret
in
stc
loopne
icebp
adc
xchg
pop
out
repnz
mov
fldt
das
or
into
jo
sahf
and
lods
sahf
pushf
decl
and
jne
imul
shll
and
push
ror
test
cmc
scas
in
aad
lds
adc
cs
push
inc
push
mov
movsl
xchg
into
test
cmc
scas
in
aad
lds
adc
cs
push
inc
push
mov
xchg
cmc
into
test
gs
in
aad
add
jg
dec
add
ds
push
lods
push
mov
into
movsl
scas
cmc
ds
inc
popa
xor
dec
add
shrl
icebp
cmp
or
sbb
and
pop
and
jno
inc
sahf
jno
and
jno
add
adc
imulb
icebp
cmp
or
sbb
dec
xchg
imul
lcall
adc
clc
xor
and
adc
add
push
xchg
stos
jp
sub
movsl
jl
jb
js
xchg
data16
dec
lea
jge
mov
push
testl
xor
jl
roll
dec
data16
jno
pop
movsl
test
mov
pop
gs
mov
in
cmp
mov
adc
loope
push
xchg
jns
pop
arpl
scas
fimuls
inc
stos
lret
xor
and
pop
dec
test
push
ds
fists
sbb
or
jg
xor
push
lds
stos
jno
xchg
inc
xorl
push
jb
and
cltd
jmp
dec
mov
pop
nop
sbb
cmp
popa
dec
mov
sarb
ret
loope
adc
and
sbb
dec
mov
stos
imul
add
or
xchg
sub
lds
sbb
lds
xor
push
clc
movsl
je
loope
icebp
push
movsb
jns
jne
push
xor
ds
arpl
jno
add
and
inc
lcall
mov
ret
cmp
mov
orl
mov
and
xor
add
adc
loope
icebp
cmp
or
sbb
dec
xchg
pop
popa
stos
jno
inc
mov
and
xor
add
adc
loope
xor
cwtl
lea
in
test
inc
dec
xor
inc
mov
sbb
mov
popa
inc
lock
fldcw
add
xchg
in
in
lret
sbb
or
xor
sti
mov
data16
pushf
jns
sub
jae
pop
adcb
iret
outsb
push
sbb
movsb
or
mov
sti
jle
inc
jge
shlb
jne
lods
xchg
lea
jle
adc
mov
icebp
movsb
fisubl
aam
jo
dec
jp
ret
jo
test
push
fwait
fs
pop
sbb
pusha
jg
cld
or
cmp
sbb
test
jns
data16
scas
arpl
sub
jge
jnp
push
fsubrl
jle
out
ret
jecxz
insl
outsl
sbb
mov
sub
mov
push
and
jae
popa
repz
cmp
cmpsl
imul
int3
cli
movsl
inc
mov
inc
aas
sahf
inc
lods
add
mov
in
lret
ret
loop
and
mov
cmp
andb
outsl
adc
jp
fadds
testb
inc
jne
sbb
movsb
fidivs
cmp
inc
jb
test
lock
jmp
xor
sbb
sub
out
push
cmp
rorl
cmpsb
lea
out
xor
inc
arpl
scas
fildll
push
cmp
cvtps2pi
and
xlat
in
jno
mov
mov
pop
dec
jl
std
orl
dec
movsl
sub
inc
into
xlat
xchg
lcall
fs
or
scas
std
cwtl
gs
mov
inc
add
popa
movsb
nop
pusha
cmp
sbbb
mov
jle
movsl
aad
dec
or
cmpsl
sbb
nop
popa
inc
mov
sub
mov
mov
out
push
inc
inc
insb
mov
movsl
sarb
repz
lods
inc
cli
mov
cltd
call
in
nop
push
fadds
fisubl
sbb
daa
pushf
inc
in
sub
sbb
int3
jne
sub
or
scas
mov
mov
pushl
outsl
mov
xchg
or
adc
mov
inc
insl
xor
mov
push
orb
mov
mov
cmp
cmp
xchg
mov
cmpsb
stos
mov
and
lds
add
mov
and
sbb
adc
xchg
repnz
sub
push
or
mov
jbe
mov
fdivs
pop
cld
or
jecxz
mov
sub
sub
push
arpl
jns
aam
loop
lea
jecxz
out
dec
mov
outsl
leave
aad
in
aas
mov
xor
jecxz
subl
pop
dec
pop
dec
jmp
dec
push
adc
pop
movsb
pop
cmp
mov
xor
xor
push
sbb
in
pop
jo
inc
mov
out
xchg
ret
cmp
int
dec
dec
std
les
xor
mov
testl
negb
xor
mov
pushf
sub
pop
xor
mov
out
mov
sub
mov
cmp
das
ja
call
xchg
or
scas
pop
sti
call
mov
xchg
push
stos
iret
sub
push
inc
push
jle
mov
lea
popa
xchg
sbb
mov
mov
mov
ficoml
cwtl
mov
jmp
cmc
xchg
call
push
das
xchg
stc
fdivrs
xor
cmp
push
enter
out
into
push
jmp
faddl
push
test
repz
pop
stc
mov
xor
xchg
mov
push
xlat
sub
rcll
mov
out
xchg
fistpll
jbe
lock
insl
and
mov
jmp
mov
loop
dec
adc
pop
lahf
fcomi
fistpll
fnstsw
inc
cli
mov
push
and
fwait
and
lock
push
sbb
and
jmp
ds
cwtl
stos
jo
xchg
pop
push
cmpsl
xor
sbb
lcall
sub
sbb
mov
les
or
pop
push
movq
mov
sbb
xlat
fdivs
inc
outsl
testl
cmp
push
add
adcb
callw
mov
jl
test
or
cmp
in
pop
sub
sbb
sbb
push
out
cmp
clc
sbbl
and
scas
mov
pop
push
push
push
test
jbe
ljmp
and
lcall
and
mov
fisttpll
aad
add
cmc
push
das
mov
mov
add
aad
fldl
rclb
gs
xchg
and
sub
xchg
mov
seta
insb
into
arpl
rcll
icebp
popf
movsb
mov
push
inc
and
outsl
and
outsb
push
or
adc
pop
mov
repz
mov
xlat
fcmovne
insl
sbb
mov
sub
inc
test
cmp
jne
adc
or
js
imul
mov
fsts
jg
mov
push
mov
pop
rcrb
es
xchg
mov
jae
pop
push
cld
xchg
stos
add
jmp
leave
adc
ret
dec
fbld
cs
shlb
mov
lods
stc
push
jge
dec
repnz
pop
dec
inc
jnp
nop
lock
mov
push
cmc
lds
ja
sbb
dec
push
sti
xchg
cmpsb
pop
push
push
mov
ljmp
or
lcall
cli
jne
rcrb
push
xor
cmp
loop
es
cs
and
mov
call
mov
lcall
leave
sbb
pop
cmp
sub
jb
negb
bound
in
inc
jmp
cs
sbbb
and
pusha
jg
bswap
nop
int
in
mov
jnp
mov
dec
inc
xchg
data16
aam
xchg
test
cmp
adc
call
jecxz
fwait
loopne
jmp
shl
sub
or
lcall
mov
in
lcall
adc
dec
les
scas
dec
hlt
adc
stc
jnp
mov
jb
arpl
or
xchg
mov
pop
jne
cmc
cmpl
or
inc
lods
or
xor
cmp
xor
loopne
out
dec
cwtl
xchg
add
pop
lret
andl
cmpsl
stos
rcr
jecxz
hlt
fcoms
imull
sarl
xor
mov
adc
add
mov
fdivl
sbb
jg
lods
ror
ret
mov
xchg
mov
push
mov
fwait
je
fdivr
sahf
pop
mov
rcll
xchg
sbb
je
xchg
lods
fdivs
fs
das
out
mov
aad
mov
pop
xchg
loop
xor
sub
or
pushf
pop
jo
mov
loop
sub
and
sub
dec
call
idivb
pop
das
cmp
pop
arpl
lock
and
mov
pop
dec
lods
fs
pop
cld
mov
and
push
pop
pop
sub
aam
mov
out
mov
js
or
les
stos
cld
mov
dec
js
xor
pop
xor
rcll
subb
mov
sahf
aam
inc
mov
mov
inc
jge
or
mov
and
jmp
xor
nop
xor
in
lods
cmpsl
sahf
mov
fdivrl
mov
jmp
fwait
cmpsl
pusha
popa
mov
andl
test
sahf
ret
dec
cltd
dec
dec
add
vpunpcklwd
add
pop
insl
cmp
xorl
jl
jbe
ljmp
fwait
push
imul
xchg
lods
or
dec
lods
imul
ds
repz
add
repnz
pop
dec
push
ja
aaa
push
int3
out
lods
xlat
ficompl
add
inc
mov
loop
xchg
fs
sbb
push
fidivrs
push
iret
lret
pusha
ljmp
insb
test
les
insl
sbb
xor
movsb
mov
add
es
mov
pop
das
push
enter
or
and
dec
push
iret
in
stc
shl
push
cmpsb
add
add
icebp
cmp
add
iret
jmp
lock
pushf
xchg
inc
fbstp
cmp
jne
xchg
jg
push
pop
add
xor
jl
or
pop
adc
sti
adc
xchg
pop
ja
push
xor
jmp
xor
lret
xchg
dec
and
neg
adc
pop
cmpsb
imul
repnz
dec
jmp
aaa
jmp
repz
pop
outsl
xchg
push
jmp
sbb
mov
jnp
js
sarl
cmp
mov
outsl
pop
int3
cmc
hlt
add
aam
jne
inc
pop
sub
sbb
sbb
fimull
insb
cmpsb
lods
mov
cs
movsb
jle
sub
add
sbb
int3
aas
inc
mov
push
and
push
xchg
mov
cltd
ljmp
flds
ss
jne
daa
shrl
dec
out
pop
sti
xor
xorl
shrb
cmc
push
cmp
rol
pop
fcomp
jmp
enter
fnsave
and
inc
mov
dec
test
nop
push
mov
mov
jmp
imul
loope
js
push
ds
gs
inc
xor
mov
jbe
loope
cmpsb
xor
lahf
dec
jne
cmovg
sbb
sbb
cltd
aad
sbb
or
ffreep
ficomps
lds
fcomps
sub
lret
xlat
mov
mov
pop
push
adc
stos
rorb
mov
mov
adc
jp
out
push
mov
push
insl
addr16
iret
or
lock
sti
or
lcall
lods
mov
mov
kunpckbw
aas
push
sub
or
xchg
cmp
movsb
cmp
test
ret
and
fisttps
pusha
aas
fimuls
pop
test
fucomip
push
and
bound
pop
loope
or
aas
inc
fldt
pop
cmp
lds
xchg
fisubl
outsl
xor
jmp
cld
sbb
fs
mov
aas
xlat
pop
je
jb
pushf
cmc
fs
mov
sub
orb
or
dec
mov
out
or
cmp
popa
loop
ljmp
shlb
pop
and
cmp
scas
mov
xor
call
dec
sahf
daa
test
and
jnp
mov
out
repnz
cld
jne
dec
pop
and
test
cmp
inc
stc
sub
xor
icebp
lea
enter
mov
adc
push
sbb
dec
mov
cmpsl
cld
js
pop
mov
rcll
cmp
iret
mov
loopne
mov
gs
jbe
mov
jg
imul
add
ret
stos
pusha
xchg
sbb
adc
mov
xor
shll
inc
scas
xchg
sub
pop
sub
push
in
mov
cmp
xchg
mov
hlt
mov
jl
movsl
push
mov
pop
add
xchg
test
mov
mov
cmp
pop
dec
cmpsl
pushf
xor
mov
sub
jns
push
cmpb
test
sbb
mov
aam
adc
xor
mov
adc
pop
sbb
imul
ret
clc
jle
iret
out
xlat
movsl
xor
gs
push
push
stos
rcll
cmp
jmp
cs
cmpsb
mov
pop
arpl
loop
cmp
std
or
mov
into
hlt
int
add
sub
in
mov
stc
inc
out
dec
ficompl
inc
xor
mov
aam
and
dec
fwait
cmc
pop
sbb
iret
hlt
test
and
cmpsb
jmp
inc
xchg
out
fdivrs
pushf
push
call
sub
sbb
mov
mov
adc
push
loop
bound
ja
iret
shr
or
movsb
testb
sub
inc
mov
push
and
mov
sbb
xlat
jp
mov
loop
adc
xor
push
sub
repz
bswap
das
dec
mov
or
push
mov
xor
lcall
shlb
inc
sub
stos
cmp
mov
mov
dec
insb
mov
idivl
sub
pop
push
or
sahf
pop
mov
pop
xlat
mov
add
les
call
into
xor
xor
adc
add
pop
ret
and
rcrb
sub
icebp
outsb
test
add
mull
mov
and
pop
push
add
sti
sbb
call
mov
stc
cld
xor
pop
jo
in
push
mov
jo
push
cli
loope
mov
pop
or
mov
ja
sbb
push
lahf
sub
or
aaa
xor
xorb
cltd
clc
push
test
daa
xchg
sub
jne
mov
decb
push
or
stos
subl
inc
mov
ja
or
movsl
pop
ret
cmp
sbb
dec
add
xchg
jle
mov
sbb
sti
bound
popf
outsb
pop
mov
pushf
xor
fistl
and
dec
in
mov
and
cld
aam
pop
or
xor
cld
sbb
int3
adc
stc
aad
cmpsb
stos
or
or
stos
add
sbb
cli
hlt
fldt
mov
loop
inc
stos
mov
ljmp
pushf
imul
data16
and
fldt
repz
dec
jecxz
inc
mov
gs
push
mov
in
dec
into
ret
adc
push
stos
ja
mov
loop
xlat
addr16
clc
mov
or
sub
mov
pop
cmpsb
or
cmpsl
bound
sarb
addr16
icebp
dec
cmp
ljmp
xchg
sbb
outsb
dec
rorb
push
mov
lea
out
test
add
dec
mov
push
int
rclb
or
or
or
sub
jbe
andl
insl
mov
movsl
jmp
fiaddl
inc
iret
test
mov
xchg
es
negl
jne
dec
aas
cld
dec
data16
iret
aad
xchg
add
pop
inc
add
int
div
sbb
bound
lods
das
inc
mov
paddd
dec
rcpps
fildl
lret
adc
sahf
mov
sti
mov
mov
dec
gs
cwtl
cmpsb
xchg
cmpsl
dec
test
in
xchg
push
mov
sub
adc
std
jmp
outsl
sti
sub
xor
fsubr
out
out
cld
ret
imul
dec
sbb
fdivl
cli
sub
out
xchg
fwait
and
adc
lods
sub
lret
popf
pop
in
cli
loopne
or
js
std
inc
cmpsl
aas
jl
push
jo
scas
lret
divb
scas
andl
add
sbb
pop
xchg
jmp
and
cmp
call
pop
imul
es
icebp
insb
cmpsb
jmp
stos
add
xor
dec
test
jp
aam
push
out
cwtl
call
aas
repz
stos
add
std
movsb
mov
shl
adc
fdiv
or
cmpsl
rolb
pusha
mov
jg
aam
jo
lret
lock
out
xchg
test
or
icebp
sbbb
lds
dec
mov
mov
icebp
or
mov
jecxz
stc
ja
movsb
push
cmp
xchg
xchg
pusha
xchg
aas
ret
pop
sbbl
lods
xchg
xchg
sbb
fistl
call
ds
push
mov
pop
xor
mov
fsubrl
adc
fs
das
jmp
pop
or
dec
or
sahf
pop
mov
mov
lods
dec
movsl
or
stos
jge
arpl
mov
xor
push
in
mov
or
jno
daa
out
pop
jecxz
mov
shll
rol
xlat
pop
dec
add
pushl
es
push
shll
cwtl
out
cld
sub
shr
or
test
addr16
bound
mov
inc
ljmp
in
mov
js
xchg
in
repnz
xor
mov
test
stos
sbb
cmp
cmpsl
int3
inc
push
xchg
or
shl
in
jmp
mov
insl
add
sbb
bound
jge
mov
add
pop
mov
sub
data16
pusha
jne
stc
arpl
mov
out
cmpsb
push
icebp
popf
and
add
xchg
or
imul
jb
lret
jnp
sub
out
mov
sub
inc
aas
pop
push
repnz
cmp
jmp
mov
pop
pop
jbe
cmpsl
faddl
dec
insl
pushf
sti
inc
mov
roll
aaa
enter
bound
push
mov
out
int
scas
pop
fdivs
call
adc
push
push
or
push
dec
lret
ret
inc
cmp
repz
ss
add
out
bound
in
push
loopne
out
fcomps
fidivl
mov
icebp
push
fisttpll
icebp
cmp
mov
sbb
dec
xchg
dec
mov
fdivs
out
lea
popf
repz
add
jge
pop
sbb
test
fnstenv
outsb
out
fwait
xor
aam
imul
mov
mov
pop
arpl
xchg
cmpsl
or
or
sbb
xor
iret
out
cmp
negl
cmp
add
nop
dec
jno
ljmp
roll
or
mov
mov
in
pop
jnp
syscall
and
or
aad
iret
jge
ss
fstpt
cmp
mov
fildl
test
sub
inc
inc
mov
and
push
dec
mov
add
cs
pop
xlat
jmp
mov
and
jo
gs
imul
cld
cli
pop
cmpsb
scas
bnd
add
push
das
test
cmpsl
and
cmp
inc
mov
fisubs
orl
or
fs
inc
mov
mov
lret
jg
xchg
mov
fs
jae
jl
dec
cmp
add
inc
cmp
jns
loopne
nop
cmpsb
xchg
ja
mov
mov
lret
test
mov
xor
sub
or
pushf
jecxz
pop
enter
cs
lods
stos
sub
movsl
out
jns
pop
xor
xchg
fwait
mov
mov
lods
jge
divb
mov
or
adc
movsb
cld
loopne
fisubl
mov
aad
push
ja
sbb
lcall
inc
push
in
insl
insl
mov
lods
dec
fsts
fs
fdivrl
aam
adc
leave
inc
pop
jne
leave
movl
dec
pop
mov
imul
jnp
pop
jno
jg
mov
and
push
inc
mov
aam
sbbb
loop
ds
mov
les
jp
xlat
insb
imul
roll
lcall
in
cmc
sbb
fcomps
pop
and
add
jle
jle
decb
inc
cmp
pop
mov
inc
add
hlt
lods
sub
push
cwtl
pop
pop
inc
push
fmuls
push
xor
dec
xchg
cmp
dec
push
adc
jecxz
outsl
pushl
jle
bound
cs
push
sbb
mov
outsl
or
mov
fsubrs
push
mov
xor
fistl
lods
insb
out
sub
je
shr
rorb
fsts
xor
mov
ret
adc
mov
adc
fnstsw
jne
lea
mov
sub
cmpsl
add
cmpsl
leave
lret
push
jno,pt
bound
cld
sarb
fst
cmc
fidivs
and
lahf
push
push
divb
cltd
add
cmpsb
repz
test
std
xor
scas
movsb
mov
rcll
and
pop
dec
pusha
or
ja
lret
fldl
loope
ds
jl
fadd
mov
xor
push
dec
inc
push
mov
idivb
cltd
pusha
jg
xlat
outsl
cmp
fisubs
or
call
xchg
out
jmp
in
or
sbb
mov
cmpsl
std
jnp
call
sbb
cmpsl
inc
sub
in
imul
or
pop
dec
mov
mov
sti
pushf
stos
sub
dec
ja
xchg
popf
xchg
call
stos
leave
scas
aam
push
jge
sub
dec
rcrb
not
repz
mov
add
push
into
push
xchg
test
push
push
loope
jl
inc
lret
lock
sahf
xor
rcr
sbb
roll
dec
imulb
cltd
movsb
out
push
mov
aaa
jbe
loop
adc
mov
int
xor
adc
adc
cmp
into
mov
pushf
xchg
mov
fnclex
push
movsb
aas
gs
mov
out
mov
sbb
ret
push
mov
movsl
fstpt
xchg
mov
orb
js
or
adc
enter
pop
sbb
push
fisubl
test
jb
cwtl
mov
scas
mov
mov
jmp
test
mov
bound
jmp
inc
adc
xor
cmpsb
mov
and
xchg
sahf
inc
cld
leave
pop
jnp
ret
mov
adcl
pop
fdivs
jbe
les
std
xchg
inc
cmp
test
test
mov
call
dec
ret
fcmovne
push
sbb
stc
test
faddl
dec
shl
cmp
dec
lods
je
movsl
push
mov
loopne
mov
adc
test
push
add
mul
dec
iret
cmc
and
mov
out
push
mov
inc
mov
or
sbb
dec
xchg
pop
popa
stos
jno
inc
mov
and
xor
add
adc
loope
icebp
cmp
or
sbb
dec
xchg
pop
popa
stos
jno
inc
mov
and
xor
add
adc
loope
icebp
cmp
or
sbb
dec
xchg
pop
popa
stos
jno
inc
mov
and
xor
lds
testl
mov
add
lcall
push
in
push
bound
movsl
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
pop
loopne
test
and
sbb
lods
add
add
pop
add
add
add
push
sub
nop
add
pop
add
add
add
dec
add
add
add
inc
add
add
add
add
add
add
add
sub
add
rolb
in
and
and
mov
add
jmp
add
xor
fwait
add
add
jne
test
add
mov
add
addl
add
add
add
movsb
add
add
add
add
inc
add
mov
pop
add
movsb
add
push
js
or
push
add
add
add
add
add
cld
add
xchg
pop
add
fiaddl
mov
add
add
add
add
add
add
add
add
sbb
filds
fldl
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
add
add
add
add
loop
jns
dec
add
add
add
add
loop
sub
pop
add
xor
aam
add
int
add
add
add
add
add
add
add
inc
add
addl
adc
pop
add
add
add
add
add
cmp
mov
dec
add
add
add
add
lret
add
rolb
or
add
add
add
arpl
test
or
or
mov
and
sbb
xchg
add
add
push
add
add
mov
loopne
filds
push
add
add
add
add
lret
add
add
cmp
add
add
add
add
xor
fldl
test
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
test
inc
add
cmpsb
add
or
adc
mov
and
add
add
add
push
test
xor
xor
and
and
addb
add
add
add
add
add
add
add
or
roll
mov
push
add
add
add
les
mov
add
dec
add
add
add
add
add
int
mov
dec
add
sbb
loopne
stos
add
mov
add
add
add
add
and
jg
xchg
out
adc
dec
add
inc
add
add
sub
inc
add
push
add
add
add
add
add
add
add
add
add
sub
add
add
add
or
mov
dec
add
add
add
add
add
and
or
imul
add
add
add
add
aad
lldt
add
and
xchg
add
add
push
add
dec
add
add
add
push
add
add
test
inc
add
or
addl
or
push
popa
add
dec
add
add
add
add
add
add
add
mov
add
add
add
add
add
or
mov
stos
sub
mov
cmpsb
pop
mov
xchg
dec
add
mov
xchg
imul
pop
add
rclb
or
jl
xchg
jo
lock
cs
adc
pop
mov
sbb
out
inc
mov
add
mov
mov
adc
mov
sub
mov
int
pop
shll
in
jmp
mov
popa
mov
sub
xchg
push
push
lods
mov
mov
pop
cmp
mov
cmc
jle
lret
sbb
testl
add
lea
mov
xor
jne
sub
mov
call
and
lret
imul
pushl
ficoms
fbstp
imul
mov
adc
icebp
push
fstl
jnp
jbe
and
sub
insb
lahf
shrl
pop
gs
pop
leave
xor
mov
xor
mov
or
repz
xchg
loopne
mov
or
subl
xor
dec
xchg
and
sbb
adc
scas
sbb
sub
aas
scas
rorl
mov
mov
cld
aaa
push
fsub
je
lret
pop
in
aam
cmp
daa
je
dec
cmp
inc
loop
jecxz
xchg
and
cmp
outsl
das
test
fucomip
pusha
andb
aas
scas
and
mov
inc
lret
adc
ljmp
test
pop
fldenv
test
shlb
out
cmp
push
fistpl
call
mov
loope
cwtl
into
jno
insl
movsl
sub
or
int
mov
sbb
call
repnz
shll
jnp
xor
inc
add
hlt
fdivrs
dec
cmpsb
into
sub
adc
lcall
mov
std
mov
rcr
out
daa
inc
pop
incb
inc
out
nop
xchg
mov
data16
out
divb
sub
pop
or
test
scas
cwtl
mov
xchg
cltd
sbb
sbb
dec
mov
nop
test
js
mov
out
repz
xor
adc
int3
mov
dec
aad
cmp
xor
sahf
sub
mov
daa
sbb
popa
test
arpl
mov
aas
out
sub
daa
and
or
pop
sub
or
arpl
lea
and
jne
jge
jmp
popa
inc
jno
mov
call
sub
into
dec
or
add
outsl
mov
inc
adc
inc
or
and
pop
divl
push
adc
pusha
sub
adc
cld
imul
push
fidivl
inc
shll
mov
sahf
and
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
