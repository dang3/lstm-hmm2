call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
pop
mov
les
sub
sti
pop
leave
and
sti
push
mov
jne
test
jnp
pop
mov
lds
aad
in
nop
loope
sti
adc
stos
and
jne
test
push
movsl
inc
mov
lds
aad
in
cmc
jmp
lock
inc
scas
pop
test
testb
add
add
leave
jnp
pop
divb
cmp
out
lock
aaa
jle
int3
inc
and
test
test
dec
cmp
aad
pop
sti
insl
sarb
adc
and
push
in
push
fstl
xchg
jnp
add
jb
mov
sbb
add
jmp
and
push
mov
pop
mov
stos
mov
jecxz
les
aad
in
sbb
lret
jecxz
mov
push
call
jne
inc
test
pop
das
mov
sbb
add
fcmovu
xor
push
or
jnp
add
mov
jmp
xor
add
xor
fcmove
imul
gs
mov
movsl
dec
mov
lds
aad
in
cmc
repnz
ret
inc
mov
xor
test
in
cs
hlt
dec
adcb
xorb
jne
or
jbe
inc
xor
adc
pop
adc
jnp
cs
pop
pop
xchg
addr16
fucomi
pusha
sti
mov
addr16
and
ret
sti
add
rcrb
idivl
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
jb
xor
push
mov
inc
adc
adc
in
loop
or
xchg
ss
test
sbb
inc
imul
inc
add
or
xor
clc
add
jb
mov
inc
dec
imul
xor
cmp
out
pop
or
fucomi
mov
loop
xchg
jbe
scas
jo
push
int
dec
xchg
insb
popf
push
cli
pop
cmc
mov
mov
dec
push
dec
push
ljmp
push
data16
std
cmc
or
fidivs
sub
push
arpl
loop
mov
and
jnp
mov
adc
push
scas
add
jns
es
inc
and
fs
push
xor
jl
xor
int
outsb
lahf
test
pop
stc
push
sti
cwtl
mov
push
jl
loopne
and
mov
into
pop
in
mov
inc
jne
shlb
adc
in
xor
xchg
adc
fiaddl
and
or
mov
add
cmp
push
cmpsl
out
incl
and
rol
rcr
andb
addb
pop
sarl
pop
mov
xor
jmp
in
fcmovnu
call
inc
rorb
cli
sub
mov
mov
dec
sub
into
pushf
out
jp
jle
sbb
in
xchg
addr16
xor
aas
mov
outsl
aad
mov
aas
pop
pop
iret
inc
xor
subb
mov
and
int3
add
stos
jb
fxam
mov
mov
ds
adc
push
je
ss
roll
inc
not
pop
xor
jns
pop
dec
movsl
dec
sub
leave
xlat
in
pop
ret
fs
mov
divl
dec
or
je
sbb
push
test
mov
mov
popf
movsb
cmp
inc
arpl
xor
or
loop
aam
xchg
imul
aam
cmp
mov
jge
rcrb
lods
cmp
adc
lods
out
nop
mov
js
out
addl
sub
xor
adc
or
je
fmuls
push
sti
inc
pop
push
into
add
push
or
jecxz
and
inc
mov
and
or
ljmp
pop
fcmovnbe
movsb
int3
or
clc
daa
sti
int3
mov
and
mov
pop
push
mov
inc
cmp
hlt
sahf
fcomps
jns
lcall
xorl
pop
and
push
scas
mov
testl
lods
sbbb
insb
push
cmc
xor
push
cmp
out
ret
arpl
sahf
push
xchg
ficompl
jg
sbb
mov
pop
mov
lods
fninit
sbb
getsec
cmpsb
sbb
lahf
stc
gs
jae
movb
sbb
xlat
mov
out
fisubrl
cmp
lret
or
jle
mov
scas
jae
js
xor
lahf
test
outsl
scas
xchg
xchg
mov
jno
fdivrl
rorl
add
xchg
imull
adc
rolb
imul
enter
push
imul
imul
insb
popa
sbb
and
inc
push
push
sbbl
xchg
lahf
aad
and
adc
fdivrl
popl
out
sbb
popa
push
lods
inc
sub
xchg
out
dec
fldt
fwait
mov
pop
popf
jno
fwait
pop
mov
sbb
add
add
and
push
sub
loope
hlt
and
stos
gs
out
mov
or
add
out
loope
mov
inc
xor
xlat
and
adc
xlat
mov
fnstsw
adc
push
out
fcmovnb
sbbl
repnz
stc
nop
movsl
or
mov
lret
or
pop
cmp
pusha
and
jmp
mov
scas
lea
xor
mov
add
fstl
xchg
add
push
jg
push
call
mov
cs
or
add
inc
loop
cltd
jmp
je
cmp
jle
in
mov
clc
cmp
jae
clc
inc
into
stos
pop
loop
loopne
scas
push
dec
add
test
test
cwtl
push
fisubrs
dec
xchg
in
cmp
inc
and
mov
fsubl
ljmp
mov
pop
test
stos
idivb
fs
loopne
imul
jo
popf
xlat
inc
jp
pop
fistpl
shll
roll
xor
jge
cmp
lds
rcrl
mov
adc
cmp
clc
push
dec
and
std
xchg
lods
rdmsr
into
mov
rol
test
or
outsl
popa
mov
shl
repnz
mov
and
jg
mov
mov
sbb
lahf
lret
or
icebp
and
fstl
in
cmp
jae
out
lcall
inc
mov
cmp
or
and
sbb
les
mov
ds
lahf
test
jmp
cltd
dec
dec
sarl
cmp
push
jg
pop
test
aas
sbb
dec
pop
bound
imul
in
movsl
dec
test
mov
les
pushf
jns
add
add
je
hlt
cmp
xor
pop
xor
mov
pop
pusha
push
in
mov
push
add
mov
pop
scas
insb
push
xlat
pop
jnp
inc
mov
call
push
push
jns
dec
fidivrs
xchg
jecxz
adc
addl
repnz
push
repz
push
inc
out
js
sub
cmp
jp
loopne
xor
pusha
popa
cmp
sbbl
out
mov
pop
cmp
inc
sarl
movsl
jmp
and
push
fsubp
das
inc
test
jg
shrl
adc
xlat
or
jno
add
or
add
add
das
push
mov
icebp
lar
movsb
push
cmp
fisubrl
inc
aad
in
nop
or
and
or
sbb
enter
and
mov
repnz
mov
in
loop
pusha
clc
sub
popa
mov
aad
jb
shl
fmuls
lcall
outsb
cs
mov
adc
push
pop
bound
xor
xor
mov
out
in
xor
jl
mov
and
sbb
insl
jbe
ret
filds
jne
push
loopne
push
mov
xor
cmp
daa
aaa
cmp
jae
jne
mov
je
stos
fnstcw
in
in
xor
push
aad
adc
adc
fcmovnbe
push
lods
imul
mov
int3
aas
lea
jns
divb
lret
and
inc
inc
mov
test
adcb
lahf
jle
les
xchg
adc
loopne
mov
pop
xchg
inc
fmuls
int
pop
call
std
js
xchg
push
leave
loop
sub
and
sbb
dec
mov
lds
or
mov
cmpsl
inc
adc
ret
mov
in
pop
jne
insb
bound
lahf
adc
sbb
movsl
fists
fdiv
push
in
stc
xchg
sarl
mov
or
add
cld
loop
lds
mov
daa
mov
scas
in
in
adcl
shrl
xor
setbe
jae
gs
inc
mul
mov
jecxz
ja
stos
into
aad
mov
test
push
mov
std
and
add
scas
add
lods
sub
xor
lret
outsl
in
push
in
loopne
pop
fcompl
jae
pop
xor
inc
add
ljmp
or
or
xor
and
je
inc
xchg
mov
jle
pop
les
mov
mov
out
addr16
jecxz
push
and
lods
xchg
into
cmpl
inc
das
xchg
outsl
mov
pop
enter
xchg
dec
popa
dec
movsb
adc
ss
and
clc
add
inc
dec
xor
fdivr
gs
daa
out
lret
movsb
mov
iret
lahf
jne
pop
shrb
fscale
mov
xor
out
push
mov
divl
jb
nop
into
xchg
sbbl
jmp
dec
rclb
and
in
xor
insb
imul
or
push
inc
push
leave
xchg
cmp
arpl
leave
push
xchg
pop
lret
nop
stos
and
push
nop
inc
call
xor
out
mov
pop
fnstcw
repnz
js
iret
dec
xor
test
adc
mov
cmp
sbb
in
and
sti
out
cs
inc
and
bound
lods
lock
bound
xchg
jge
aaa
add
movsb
or
mov
xor
push
adc
cmp
jp
sbb
popf
movsb
xchg
fisttpll
std
push
and
adc
mov
push
fmull
loopne
xor
and
xchg
jbe
add
imul
sbb
in
or
xor
xor
mov
inc
dec
call
imull
out
mov
imul
push
hlt
add
ss
fsubs
mov
jne
ss
fidivrs
pop
mov
mul
and
mov
cs
pop
sub
add
xor
inc
mov
ss
clc
pop
jecxz
test
or
dec
mov
jmp
jno
icebp
lods
adc
pop
inc
cmpsb
pop
adc
fs
arpl
inc
mov
cltd
movsb
push
pop
mov
dec
stc
sub
inc
cmp
std
aas
gs
ret
loop
jae
inc
or
jg
push
mov
lds
add
lea
push
add
clc
lret
loope
mov
gs
dec
scas
filds
movsl
sub
pop
push
push
dec
out
enter
mov
test
sbb
scas
inc
enter
xchg
in
ljmp
jmp
pusha
dec
dec
or
std
mov
pushf
inc
sahf
jnp
in
dec
sub
std
outsl
cltd
push
or
xchg
inc
xor
mov
loopne
fs
pop
mov
leave
je
ja
in
lret
push
xchg
sub
idivl
scas
pop
pop
test
ja
popf
xchg
push
ljmp
lret
lock
sub
fidivrl
push
xor
sub
sub
push
push
adc
popf
sub
and
jo
mov
and
adc
jnp
imul
xor
inc
pop
cmp
jbe
orb
inc
sbb
or
mov
jno
pop
aaa
js
dec
jne
inc
data16
jns
push
push
mov
daa
cmp
inc
adc
jecxz
lahf
cmpsb
outsb
push
movl
jbe
mov
jns
push
or
add
pop
xchg
sbbb
add
aam
call
jne
loopne
lods
cld
lods
adc
push
cmp
ds
fiaddl
mov
das
push
ljmp
in
test
and
mov
sub
adc
sbb
and
imul
pop
push
lds
push
or
or
pop
cmp
nop
jecxz
push
mov
pop
test
into
ja
das
sbb
pushf
mov
jno
nop
enter
sub
popf
dec
stc
cmpsl
mov
or
sub
or
iret
pop
pop
mov
dec
pop
push
test
ficomps
dec
xor
cmpsl
dec
pop
ja
pop
push
popa
rclb
adc
xchg
mov
aad
not
nop
rcl
aad
movsb
inc
adc
and
leave
out
xchg
in
sbb
bound
xor
nop
adc
addr16
cltd
and
xchg
jo
sbb
cld
jae
xor
xchg
daa
stos
push
xchg
jne
out
aas
jp
cmp
aaa
stos
inc
jmp
cli
xor
mov
mov
addr16
and
sbb
dec
and
xor
fsubr
jno
pop
and
xrelease
pop
add
lret
daa
stos
inc
jae
insb
mov
xlat
decb
pop
xor
stc
sarl
xchg
lcall
movsl
out
dec
xchg
mov
insb
and
das
aas
pop
inc
lods
js
mov
leave
sahf
inc
pop
loopne
cli
popl
push
mov
adc
add
repz
xchg
cwtl
lahf
push
push
js
lret
sbb
arpl
jo
lahf
pop
outsb
out
test
mov
int
bnd
pop
pop
lret
lds
fs
clc
adcl
xchg
shlb
mov
inc
sub
jecxz
jae
movsb
cli
mov
jo
or
mov
mov
clc
mov
adc
xchg
pop
or
xor
sub
xchg
jg
jo
das
fidivs
sarl
mov
cs
ja
ret
fdivrl
gs
nop
ss
inc
test
or
lods
jl
negb
sub
cmp
and
xor
fisubrl
jno
pop
mov
mov
subl
test
std
or
or
xor
xor
mov
jo
into
mov
aad
inc
cmpsl
gs
xchg
mov
cmpl
jle
dec
or
test
xor
jns
cmp
jmp
adc
or
adc
jmp
push
mov
mov
inc
xchg
ja
mov
push
scas
mov
jne
in
mov
push
pushf
popf
pop
mov
aaa
test
push
mov
mov
inc
jp
stos
shrl
dec
push
add
adc
adc
imul
xchg
in
call
cmpsb
add
pop
or
xchg
sbbl
inc
add
pop
push
mov
out
cmp
subb
imul
jp
adc
shrd
rcll
in
push
and
vpmovmskb
addr16
lods
mov
icebp
int3
fldl
add
cmp
xor
dec
subb
dec
cmp
int
pop
gs
rcrb
int3
jl
mov
xor
nop
cmp
mov
test
add
dec
lahf
pop
jnp
or
cmp
leave
fstpl
ret
adc
mov
cwtl
in
insb
jl
jl
dec
xchg
test
push
inc
lods
aaa
push
and
aas
mov
in
mov
sub
in
push
jmp
mov
shl
fisubl
mov
outsl
mov
outsl
in
mov
fidivl
mov
cs
jo
push
pop
push
jle
adc
push
lcall
sub
cltd
sbb
push
xchg
cmpsl
sbb
sahf
inc
or
sbb
das
mov
sti
jecxz
fldenv
add
test
lret
mov
cmpsb
fildll
sub
ficoml
je
cmpl
pop
pop
popf
inc
movsl
lret
fdivp
daa
mov
int
in
mov
test
cmp
movsb
mov
out
sbb
dec
ss
inc
adc
cmp
push
sar
test
push
sete
sub
jnp
sub
stos
std
mov
dec
inc
sar
jb
dec
lahf
or
mov
push
mov
adc
cs
out
lret
sahf
dec
test
xor
pop
cli
adc
xchg
loope
or
in
pop
add
int3
rcrb
enter
roll
xchg
nop
adc
add
mov
add
pop
sbb
jge
mov
sub
fstps
loopne
loop
xchg
popa
mov
leave
imul
fs
imul
pop
lock
push
addb
es
pop
push
jo
ss
iret
cmc
cmp
inc
sbb
je
lcall
pop
fcmove
insb
dec
jno
imull
aam
jecxz
andb
xchg
mov
pop
push
dec
fcoml
jp
mov
das
and
faddl
mov
daa
stos
dec
clc
inc
les
ja
rcl
fwait
inc
call
xor
orl
pop
pop
rcrb
movb
cmp
dec
sbb
test
and
repnz
into
pop
loopne
sbb
sbb
adc
mov
test
xchg
roll
popf
leave
add
or
imul
lods
mov
nop
xchg
inc
loopne
js
or
leave
rolb
lds
dec
mov
jmp
outsb
movsl
jle
stos
mov
mov
jns
add
clc
pusha
out
mov
mov
fcomi
push
ss
add
jbe
jne
les
mov
imul
imul
inc
inc
jmp
adc
sub
mov
lret
sahf
and
xchg
std
push
in
jg
loop
mov
call
popa
inc
dec
dec
dec
call
movsl
xchg
or
lods
insl
mov
mov
xchg
ds
lcall
out
iret
xchg
faddl
xor
sub
sub
xor
shl
std
cmpsb
add
jnp
rol
dec
lods
daa
cmp
xlat
shll
sbb
in
lock
cmp
add
push
add
cli
adc
movsb
sbb
test
fdivrs
cmpsl
or
jno
push
popa
ja
pushf
lods
aam
popa
mov
mov
stos
mov
divb
roll
ret
mov
mov
pop
jo
rcll
test
mov
shrb
loop
outsl
hlt
aaa
ret
sbb
push
sahf
ret
das
mov
mov
mov
je
subl
ret
dec
adc
rcrl
mov
cmp
xchg
addr16
push
adc
out
xor
ds
rolb
add
sbb
adc
inc
jbe
sbb
inc
xchg
ja
adcb
test
in
rcrb
ss
pop
pop
aaa
push
sbb
xchg
scas
jb
test
inc
push
mov
nop
mov
dec
xchg
dec
test
insl
mov
mov
cmp
mov
fldcw
in
xor
sub
xchg
sahf
xor
test
iret
fs
pop
mov
aas
fisubrl
int3
jl
cmpsl
xchg
fbstp
cmp
movsb
adc
inc
test
push
pop
fidivrl
cmpb
jecxz
ror
pusha
xor
or
ljmp
mov
inc
jno
test
outsb
push
std
pop
jb
xor
stc
xlat
call
das
sbb
dec
shll
out
das
das
sub
inc
pop
pop
fidivrs
jno
push
dec
mov
adc
pop
repnz
in
ret
loop
mov
mov
scas
insb
movsb
iret
gs
leave
fsubrl
sub
mov
daa
mov
aad
sahf
aaa
enter
push
dec
ljmp
mov
rcrb
aam
xchg
cld
aad
aas
push
adc
cmp
cmp
push
mov
xchg
add
mov
sbb
jl
es
push
movsb
xor
rclb
es
or
push
ret
cmp
inc
pop
imul
and
and
popf
lods
jnp
subb
push
jne
and
push
mov
and
xchg
ljmp
add
repnz
ds
pop
cmpsl
repz
int
mov
lods
jecxz
test
nop
xchg
cli
sbb
in
mov
arpl
fdiv
dec
sti
xchg
mov
cli
sbb
in
pop
mov
sti
mov
sbb
xor
cmp
mov
clc
push
call
rolb
and
movsb
cli
stos
fdivrs
sub
inc
sub
mov
call
dec
jecxz
cmp
push
inc
and
push
lea
jno
push
mov
dec
fstpl
lock
pop
jl
roll
pushf
hlt
ja
aam
add
sti
lret
xchg
inc
roll
lds
rclb
and
inc
mov
fsub
lods
je
jns
add
movsb
mov
push
pop
dec
in
jns
dec
lea
add
cmp
inc
in
sbb
add
add
pop
rcrl
jno
mov
inc
or
out
inc
sbb
testb
das
call
rcll
xor
cmp
jns
shll
iret
mov
sbb
mov
push
mov
and
pop
test
xlat
mov
nop
cmp
mov
sti
inc
repz
test
test
xorl
imull
and
filds
xchg
test
hlt
cmp
dec
inc
out
jecxz
add
sbb
pop
jo
dec
adc
mov
stc
mov
xchg
imul
adc
add
adc
icebp
ret
push
outsl
sbb
sub
cmp
xor
inc
in
cmp
mull
outsb
lods
pop
jb
fldcw
lods
mov
jmp
sbb
cwtl
pop
cwtl
cmp
lret
or
aad
imul
aad
popf
add
cmp
dec
shl
inc
test
mul
mov
clc
lcall
fwait
cmp
and
pop
jge
repnz
data16
pushf
cmp
mov
repnz
push
int
push
movsl
xor
loopne
or
leave
cmp
push
mov
lret
stc
jecxz
cmp
add
add
dec
push
add
adc
sbb
aas
pop
cltd
jo
pop
stos
sub
test
mov
push
jg
mov
mov
xor
add
push
aas
dec
jb
pop
dec
js
lahf
mov
ret
jp
mov
or
mov
adcb
xor
repnz
sti
test
or
incb
cmpl
stos
pop
push
arpl
shr
sbb
mov
imul
xlat
mov
int
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
dec
movsl
pop
mov
lds
aad
in
cmc
jmp
sti
adc
stos
inc
mov
jne
test
jge
pop
mov
lds
aad
in
xor
popa
and
xor
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
es
ss
dec
push
fldt
push
pop
and
sbb
lret
xchg
stos
idivb
imul
push
dec
push
pop
sub
inc
or
cmpsb
jmp
fcomi
lret
xchg
idivb
es
ss
jecxz
pop
popw
jbe
inc
in
add
xchg
mov
rorb
imul
jne
fs
es
mov
pop
lods
ret
fs
lds
dec
into
xchg
lds
adc
dec
dec
mov
stos
or
jecxz
mov
push
fisubrs
jle
push
sahf
jne
js
add
lods
mov
jle
inc
cld
push
inc
mov
mov
stos
aaa
imul
jecxz
sub
mov
adc
stos
or
mov
sbb
aam
fnstcw
xchg
insb
sbb
jle
add
mov
dec
jmp
or
fldt
hlt
mov
fldcw
mulb
insb
mov
mov
jmp
xchg
jle
rol
fisubrl
mov
mov
iret
push
push
sub
inc
rcll
cmpsb
insl
mov
xchg
xchg
xchg
out
testb
cmc
pusha
cmp
arpl
jae
or
push
and
jle
lods
mov
in
cli
mov
les
cli
and
sub
and
inc
gs
ja
mov
cmp
divl
push
cmp
sbb
cmp
jbe
inc
or
cmpsb
jmp
sti
xchg
xchg
stos
idivb
imul
push
dec
push
pop
sub
inc
or
cmpsb
jmp
sti
xchg
xchg
stos
idivb
imul
mov
push
dec
push
iret
sub
xchg
adc
les
leave
inc
stos
pop
pop
dec
int
incb
fidivl
lret
insb
inc
daa
inc
push
stos
call
or
ja
out
loope
sbb
add
mov
andnps
scas
jle
or
sbb
clc
cli
mov
inc
popf
dec
in
ss
mov
fnstsw
adc
daa
cltd
clc
or
mov
into
sub
add
orb
jae
movsl
fiaddl
int
mov
pop
push
cmp
sbb
xlat
mov
or
loope
jge
stos
inc
inc
data16
mov
icebp
sahf
popf
mov
jmp
dec
orl
imul
fcompl
mov
jnp
cmp
flds
and
das
dec
ret
test
fdivl
mov
xchg
and
repz
shrl
add
fnstsw
jbe
cmp
mov
or
xchg
pop
addr16
mov
in
adc
test
push
add
popf
repnz
std
in
fisubrl
mov
rcll
xchg
in
jge
ss
push
mov
sahf
jle
or
mov
xchg
data16
push
push
jno
xor
shll
push
rol
adc
inc
adc
test
enter
push
xchg
test
cld
mov
lret
inc
and
outsb
mov
sti
fadd
push
xor
pop
mov
push
les
xor
and
gs
jecxz
pop
jne
mov
and
cld
pop
mov
inc
loopne
repz
mov
lcall
or
cs
gs
int3
enter
in
cld
aaa
sahf
push
subl
ljmp
test
ljmp
hlt
leave
add
in
aaa
inc
mul
xchg
xor
adc
mov
sti
adc
inc
clc
je
add
icebp
popa
data16
or
int3
push
je
dec
test
dec
jae
outsl
lods
jae
icebp
mov
xchg
out
push
inc
mov
pop
inc
je
cltd
les
or
dec
jge
aad
popf
push
scas
icebp
test
pushf
rorb
out
ljmp
xchg
sbb
or
pcmpeqd
jnp
testb
test
push
lret
nop
push
test
inc
dec
push
xchg
mov
cli
cltd
in
out
mov
sub
mov
jge
fnstenv
addr16
sub
imulb
and
xlat
cld
lahf
sbb
ror
mov
stos
out
in
mull
into
nop
rcl
jno
pop
dec
xchg
inc
lret
add
inc
test
or
adc
outsb
in
cmp
jp
inc
in
mov
inc
icebp
fistpl
pop
jo
and
fnstcw
or
mov
sbb
lcall
aad
pop
int3
push
adc
lea
push
insb
jg
icebp
adc
call
mov
jns
mov
popf
test
mov
inc
mov
imul
pusha
out
pop
pop
xchg
jle
mov
inc
les
pop
pop
and
push
inc
scas
adc
pushf
call
stos
fs
fisubrl
jbe
mov
mov
aam
into
fwait
stc
jg
aaa
outsl
mov
or
or
arpl
push
mov
or
test
dec
add
push
inc
sub
push
and
or
imul
sub
and
dec
adc
frstor
mov
loopne
and
adc
mov
or
push
loop
loope
cmp
ret
orl
iret
or
push
and
fcomp
push
mov
sarl
fs
pop
inc
push
rorl
insb
aaa
add
and
push
ds
mov
and
js
mov
dec
ror
pop
mov
shl
popf
cmp
jmp
out
movsb
cmp
movsb
fdivrp
outsl
xchg
int
cmpsb
push
or
mov
test
repz
out
int
mov
jnp
popf
mov
stc
jo
mov
cmp
sub
push
inc
cmc
mov
jnp
sbb
imull
clc
mov
dec
inc
mov
stc
test
mov
call
inc
icebp
enter
data16
ljmp
movsl
jno
ljmp
scas
add
cld
jo
dec
jbe
mov
push
xor
sub
stos
pop
test
sub
or
cwtl
pop
sahf
mov
insb
nop
fimuls
cli
mov
stc
test
pop
mov
ja
sub
dec
imul
dec
bound
lods
jl
jnp
mov
push
ds
aam
lock
xchg
jo
mov
mov
and
sti
ljmp
mov
cmp
push
call
test
xchg
imul
xchg
pop
and
xchg
outsl
pop
loop
xchg
push
add
fiaddl
aas
call
adc
dec
cmc
shl
cli
or
out
mov
int
sbb
xorb
dec
adc
lea
dec
and
adc
sub
push
outsb
ss
or
loop
mov
mov
mov
test
push
pop
mov
cmp
divl
stos
jmp
mov
add
stos
push
adc
xor
add
arpl
std
push
sarb
insl
ss
jnp
cmc
cmpsl
pop
cli
cld
adc
fnstenv
add
fsubs
xchg
mov
dec
lret
leave
clc
jl
jg
lods
sub
or
xchg
pushf
es
ja
inc
outsb
add
mov
jecxz
mov
inc
aam
push
pop
pop
mov
addl
mov
pop
rcll
dec
outsb
fcompl
xchg
pop
xor
cld
scas
ds
das
dec
pop
mov
dec
pop
xchg
mov
pop
lock
xchg
cmp
pop
jp
mov
jecxz
sub
mov
sub
sbb
subl
data16
int3
fadds
int3
nop
pop
and
pop
jnp
push
cmp
test
in
pop
int3
mov
arpl
ret
ja
aaa
jmp
and
pusha
or
mov
std
mov
xchg
jne
hlt
push
aas
jb
nop
sub
aad
rcrb
sub
sub
jp
and
mov
addr16
jns
inc
mov
fcmovbe
sbbl
jl
arpl
xor
test
xchg
or
insb
lock
fwait
jns
icebp
int
and
mov
sahf
movsl
pop
or
xchg
pusha
stos
loopne
mov
idivb
xor
mov
divl
xor
dec
enter
clc
fimuls
shrl
sub
popf
aaa
and
or
push
cmp
cwtl
test
pop
pop
dec
rclb
sbb
and
pusha
lock
pop
gs
dec
or
and
pop
repnz
pop
shll
or
adc
sahf
xlat
rcrl
push
lret
rcll
addl
mov
addr16
cwtl
inc
mov
jne
shl
sub
push
xchg
mov
mov
iret
nop
and
xchg
fildll
mov
stc
lds
ljmp
sbb
xchg
out
mull
pop
inc
mov
lcall
mov
testl
sbb
lahf
mov
gs
dec
pop
pop
jle
shl
or
pop
loop
loopne
adc
push
or
fcompl
cli
dec
or
into
adc
cmp
movsb
clc
mov
xchg
xchg
nop
sbb
sahf
fldcw
xchg
xchg
lahf
push
xchg
jbe
pop
mov
cltd
xchg
stc
outsl
sub
mov
push
int3
mov
pusha
je
stc
stc
cmp
pop
xchg
xchg
lret
clc
push
xchg
mov
pusha
outsl
popa
ja
push
mov
imul
sti
daa
popa
push
and
je
lret
inc
imul
imul
pop
scas
bswap
decb
pushf
icebp
jbe
mov
jp
xchg
pop
icebp
in
sti
mov
pop
mov
rolb
jl
mov
out
jnp
aad
push
loopne
pop
mov
arpl
hlt
inc
mov
pop
mov
aaa
inc
mov
jmp
mov
daa
xor
lret
xchg
xchg
ret
rcrl
testl
insb
xor
decb
xor
push
popa
cmpsl
sti
xor
cmp
and
adcl
dec
stos
jns
lods
push
out
mov
das
fadds
enter
and
ret
ljmp
sbb
pop
mov
jns
je
loopne
dec
pop
rclb
fimull
fs
sub
ja
mov
push
pop
adcl
pop
pop
xor
sub
and
xor
incl
mov
xor
ret
cmpsb
mov
push
cltd
out
jo
in
hlt
xchg
mov
xor
js
stos
xchg
repnz
add
sub
push
sub
je
xor
jnp
dec
outsl
icebp
es
xchg
inc
int3
out
push
loop
mov
jmp
dec
mov
aaa
or
out
inc
dec
xor
dec
icebp
test
or
mov
sti
mov
add
push
adc
iret
mov
jmp
push
fldl2t
fisttps
or
jbe
or
sbb
sbb
cwtl
adc
xchg
loope
rcrl
xchg
jmp
add
fistpll
test
cwtl
and
or
jns
dec
mov
out
sub
adc
pop
jbe
dec
push
filds
fwait
mov
inc
lds
call
push
add
push
in
sub
xchg
rclb
add
in
pop
and
mov
icebp
pop
pushf
jg
test
fldt
in
jo
ja
repz
loope
lea
repnz
es
mov
push
jge
and
jg
idivb
pop
sbb
inc
out
cli
aad
and
movsb
jecxz
push
aam
les
push
popa
inc
int3
mov
imul
in
push
add
mov
dec
lock
add
fs
aas
orb
mov
pop
bound
mov
adcl
ficompl
sbb
lahf
sub
and
cltd
aam
stc
push
sti
lea
daa
mov
fcmovu
cs
sub
aam
dec
in
lds
unpcklps
test
cmp
adc
or
jnp
sub
adc
lcall
lret
jge
adc
sbb
mov
in
sbb
xchg
ljmp
dec
test
cwtl
rcrb
sbb
add
stc
stos
loop
addr16
in
enter
mov
in
push
sub
ret
ljmp
mov
cwtl
xor
jno
mov
cmp
mov
aaa
movsl
aaa
sbb
ja
js
xchg
aas
ret
sahf
int3
and
and
or
mov
ds
sbb
es
out
jmp
adc
push
fwait
mov
pop
dec
mov
into
xchg
mov
mov
scas
mov
call
lods
mov
ss
cmp
movsl
dec
dec
cmc
add
data16
outsb
out
in
push
dec
mov
mov
inc
xor
data16
or
jae
mov
in
add
pusha
xor
fnstcw
or
sub
imul
or
mov
mov
adc
rcrb
in
push
into
jno
push
jae
dec
shl
inc
in
dec
loop
jno
sti
ljmp
inc
pop
jno
scas
inc
inc
sub
sub
push
mov
adc
icebp
ljmp
sub
div
mov
out
jecxz
jo
pause
fwait
cld
mov
inc
jecxz
jb
or
xlat
popf
adc
out
test
insl
stos
mov
ret
cmp
add
repnz
mov
mov
pop
pop
aad
movsb
in
pop
xor
ja
mov
repz
ja
orl
je
pop
fisttpl
mov
stc
pop
xor
sbb
adc
leave
subb
xchg
mov
mov
addr16
rclb
dec
orb
aad
push
push
sub
leave
mov
ljmp
adc
adc
lds
mov
sbb
mov
insl
push
clc
pop
xchg
shll
jo
mov
push
inc
sub
and
movsl
call
or
shrb
jecxz,pt
std
std
or
cmp
jo
inc
sub
xchg
add
cs
mov
in
lret
fldcw
cmc
loopne
popa
adc
sub
call
adc
mov
sbb
jmp
add
ljmp
mov
mov
sahf
fwait
das
inc
pop
jo
outsl
sbb
lahf
faddp
jo
ds
out
call
mov
or
sub
cmp
xchg
mov
pop
stos
test
es
mov
cltd
in
lret
loope
mov
test
pop
sbb
sub
xchg
pop
adc
enter
imul
lcall
lea
cmp
sbb
inc
pop
fidivs
out
xchg
xor
xchg
add
mov
sub
jecxz
and
out
xor
je
js
inc
mov
cmpsl
rorb
jge
movsb
xchg
push
mov
dec
sub
into
fldcw
mov
cltd
shl
mov
mov
jp
jp
and
dec
or
jp
out
out
fwait
mov
lcall
or
into
and
or
inc
fistpl
add
es
dec
sub
mov
lods
lods
sbb
jecxz
jge
nop
addb
mov
sub
push
fiadds
fdivr
or
cmp
xlat
add
dec
bound
xchg
mov
fidivl
data16
adc
dec
sbb
mov
mov
push
dec
fbstp
mov
mov
lahf
cmp
in
jo
jmp
mov
test
xor
shrb
arpl
mulb
repnz
icebp
pop
adc
mov
inc
scas
inc
push
int3
iret
gs
cli
test
push
ss
sub
xor
addb
pop
lds
push
xor
and
adc
ljmp
mov
or
sbb
ret
clc
or
adc
fistl
ja
and
mov
sbb
jae
mov
nop
loope
aaa
lea
scas
add
movsb
mov
add
enter
sub
test
outsl
test
in
cmpl
mov
cli
push
stc
sub
cmc
out
xchg
jg
popa
xor
daa
outsl
push
add
mov
dec
fcomps
mov
inc
ss
addr16
add
out
xchg
inc
adc
pop
arpl
jle
lret
push
int
mov
insb
in
aam
repz
jmp
bound
out
out
sbb
test
ljmp
add
mov
xchg
popa
inc
sti
out
pop
push
inc
jb
fisubs
inc
push
mov
pop
clc
fnstenv
xchg
dec
inc
in
inc
insl
jns
mov
xchg
jg
or
daa
repz
and
sub
xor
aam
cld
add
subb
repnz
pop
pushf
lea
sti
cs
imul
in
xchg
mov
call
scas
lret
sub
cli
ds
cwtl
sbb
scas
inc
xchg
sahf
inc
int
inc
dec
loope
push
jg
mov
clc
aam
pop
xchg
flds
fisttpll
dec
out
int3
shr
stc
xor
gs
push
mov
pop
scas
dec
mov
sub
mov
pop
sbb
aaa
dec
sub
pop
cmp
sub
xor
popf
dec
xchg
cmp
sti
aas
outsl
mov
and
push
xor
push
cmp
inc
into
daa
push
pop
or
adc
cs
pop
pop
dec
cmp
push
jmp
mov
nop
ror
mov
inc
dec
cli
shl
jb
lcall
push
inc
ss
and
dec
jnp
repnz
lods
mov
sbb
loop
dec
pop
aam
hlt
test
test
jle
xchg
into
ds
loope
xchg
aas
sbb
sbb
pop
pushf
pop
sub
xlat
clc
stos
cmp
pushf
cmp
insl
sub
jbe
cmp
adc
stos
lea
inc
and
fistl
imul
ja
in
fwait
or
push
aad
inc
mov
scas
inc
sbb
mov
xor
inc
mov
add
fs
mov
popf
popf
imul
hlt
xor
cmp
stc
nop
jb
loope
mov
mov
test
sbb
sub
pop
adc
xchg
mov
orb
test
or
jo
mov
push
dec
xor
mov
push
shlb
jbe
in
sbb
adc
pop
inc
sub
add
and
pop
pushw
sub
imul
pop
push
call
cmpsl
jbe
sub
std
jl
fimull
setp
sub
sub
push
xchg
jnp
jnp
ret
push
and
sub
xchg
adc
mov
jp
sub
push
test
or
sub
mov
mov
out
push
adc
fisubrs
sbb
adc
fnstenv
cmc
out
pop
leave
daa
negl
mov
jmp
lcall
popfw
test
pop
in
bound
pop
call
sub
mov
out
cmpb
xor
inc
adcb
stos
ror
testb
sbb
sti
pop
inc
jae
sbb
enter
sti
mov
inc
insb
sbb
or
movsb
out
pop
pop
jo
or
popf
push
sub
popf
das
jo
mov
lret
add
xchg
xchg
arpl
xchg
xchg
pop
xchg
mov
jg
adc
popf
xor
xchg
sarb
popf
and
push
and
lock
imul
scas
test
inc
fldenv
jp
mov
fcmovnbe
inc
or
iret
je
in
jnp
mov
mov
adc
int3
adc
fwait
push
shrb
js
inc
cli
inc
in
xchg
and
adc
out
cli
cmpsb
or
jns
jecxz
push
aam
in
dec
xchg
ss
loope
popa
aad
push
xor
dec
or
outsb
pusha
fdivl
adc
insl
lock
cmp
addb
insl
lods
es
sub
adc
push
addl
leave
sbb
imul
mov
xlat
dec
xlat
and
mov
jb
outsl
jecxz
dec
pop
mov
and
mov
outsb
in
dec
mov
icebp
push
dec
das
arpl
fidivs
xchg
pop
out
aam
mov
mov
popf
imul
pop
roll
cmp
std
dec
sub
ret
add
add
mov
pop
mov
jns
bound
push
jno
out
adcb
mov
sub
push
aad
cli
out
lds
sbb
and
adc
ret
pop
imul
dec
repnz
xchg
sti
cs
mov
xlat
repz
daa
xor
cmpsb
cmp
mov
jp
mov
xor
lea
aaa
xchg
pop
clc
cld
popf
in
decl
push
pop
sbbl
jo
mov
shll
inc
inc
movaps
stos
cmp
repz
mov
test
mov
inc
fs
push
call
iret
out
add
or
aam
outsb
push
and
in
faddp
pop
jp
ret
lock
inc
scas
lret
mov
aas
pop
hlt
mov
js
imul
enter
sbb
dec
mov
xchg
lret
popa
call
and
add
jo
fs
push
mov
xchg
ss
adc
repnz
sbb
stos
sub
adc
jb
ja
out
pop
mov
and
mov
inc
add
mov
leave
xor
rorb
pop
sub
push
sarl
inc
in
daa
ja
insb
scas
dec
pop
xor
imul
lret
jmp
repnz
sbb
adc
sbb
sbb
loopne
mov
js
inc
jb
xchg
fildll
xchg
adc
push
fdivs
add
cs
push
int3
leave
cvtdq2ps
fbstp
xchg
inc
jbe
repnz
mov
cmp
sbb
pop
lret
je
xor
add
fistpll
mov
shlb
imul
adc
and
push
mov
test
xchg
lcall
fisttpl
sbb
mov
aas
ficoml
loop
mov
or
test
outsl
pop
hlt
push
dec
push
or
mov
cmp
insb
rol
cmc
frstor
movsb
ret
mov
and
pop
sahf
mov
cmc
xchg
pusha
add
repz
jo
arpl
push
mov
push
js
mov
outsb
lcall
mov
xchg
imul
aam
add
inc
aad
nop
xchg
adc
inc
xor
jno
mov
je
push
adc
rep
jmp
jbe
testl
xchg
inc
cs
jns
jbe
fidivs
sbb
ja
lcall
sub
loop
xchg
test
test
cmp
inc
add
cmp
and
mov
test
inc
int
push
push
jnp
daa
push
pop
sub
inc
or
cmpsb
jmp
sti
xchg
xchg
stos
idivb
imul
push
dec
push
pop
sub
inc
or
cmpsb
jmp
sti
xchg
xchg
stos
idivb
imul
push
xor
pop
sub
inc
or
cmpsb
xor
stos
idivb
imul
push
dec
push
pop
sub
inc
mov
cmpsb
adc
push
sub
xchg
lods
xchg
and
cmp
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
rorb
ret
pop
repz
xchg
outsl
icebp
aas
xchg
dec
lea
dec
mov
mov
xor
xor
mov
ret
push
lahf
jecxz,pn
xchg
dec
sbbl
mov
sahf
adc
add
xor
and
imul
dec
lea
push
lods
mov
mov
js
jno
addr16
jg
mov
jge
pop
xchg
inc
andl
add
out
push
push
push
add
aaa
adc
mov
or
sarw
andl
fistpl
xor
mov
data16
ja
into
pop
mov
nop
and
scas
arpl
cmp
pop
cmp
push
stos
push
push
sub
ds
pop
subl
mov
jle
push
popf
mov
xor
and
rcl
jle
outsl
jge
pop
cmp
ror
dec
es
push
movsb
add
lret
mov
pop
loope
pop
sbb
lods
dec
push
xchg
jg
fldl
cli
js
aam
cmpsb
push
fwait
xor
and
pop
jecxz
ja
sti
pop
mov
add
ss
repnz
add
and
mov
inc
fwait
push
cld
jmp
xor
sbb
out
push
or
frstor
insl
mov
lcall
sbbl
or
pop
testb
adc
jae
sbb
pop
mov
mov
inc
mov
rolb
pop
mov
mov
sahf
jae
arpl
xor
and
rorl
ret
push
repz
xchg
dec
sbbl
mov
sahf
jae
arpl
xor
and
rorl
gs
xor
rcrb
push
ffree
add
shll
mov
out
ljmp
push
adc
and
out
add
xchg
mov
add
cmp
inc
es
or
sub
ret
pop
push
dec
xchg
dec
arpl
sbb
sbb
mov
push
jmp
lahf
mov
mov
sub
lahf
and
push
sub
xchg
pop
add
add
jb
jl
dec
pop
xchg
inc
xchg
and
call
popf
mov
mov
ret
jb
leave
or
pop
inc
adc
add
mov
inc
mov
call
in
test
push
leave
sub
push
cmpsb
lret
and
mov
mov
orb
adc
bnd
mov
sar
mov
mov
lcall
ljmp
fnstenv
dec
sub
pop
add
int3
pop
mov
sub
or
repz
pop
pop
sub
inc
out
test
test
and
shrb
inc
outsb
jp
call
push
cwtl
mov
lds
or
pop
mov
pop
push
dec
decl
faddl
sti
sbb
in
xor
stos
std
xor
xchg
inc
lea
adc
inc
scas
cmp
stos
in
popf
push
shll
push
lock
stos
shrl
xor
xchg
ss
sbb
imul
cltd
push
imul
lcall
and
daa
aas
jl
xorl
xchg
lods
mov
adc
not
xchg
je
mov
scas
pop
sub
pusha
xchg
cmp
out
or
mov
mov
dec
ret
cmc
pop
push
or
sub
mov
pop
mov
pop
rcrw
fld1
inc
xor
adc
idivb
or
push
stc
xor
sbb
adcb
xchg
inc
jmp
out
inc
push
into
flds
pop
pop
cmc
pop
les
bound
mov
and
sbb
xlat
mov
mov
pop
or
xchg
sub
aaa
sbb
xchg
fistl
jnp
pop
jno
leave
lods
cmp
jge
mov
or
fwait
add
ret
xchg
push
jle
xchg
imul
imul
nop
push
add
pop
mov
and
push
cltd
mov
add
daa
call
pop
pop
jo
xchg
fstpt
dec
cmpsb
mov
xor
ret
mov
xchg
aaa
sub
loope
lock
mov
jb
outsl
adc
daa
bound
sbb
hlt
movsl
sbb
call
sub
jno
idivb
test
test
jbe
pop
test
outsb
push
sahf
add
mov
nop
test
add
mov
pop
sti
pop
sub
sbb
inc
out
lods
adc
lret
adcb
addb
in
jo
mul
push
or
sub
outsl
ds
ja
sbb
mov
sahf
jns
sbb
xor
out
arpl
mov
add
in
adc
mov
or
lods
jne
mov
shr
rclb
lcall
sub
inc
adc
js
imul
dec
bound
mov
pop
pop
stos
sahf
mov
test
mov
arpl
mov
testl
push
std
pop
arpl
je
pop
mov
jecxz
jo
and
adc
outsl
dec
nop
xchg
inc
scas
fldenv
xchg
out
push
ljmp
pop
cltd
out
or
adc
push
icebp
add
adc
jae
xor
or
popa
int3
jmp
clc
pop
int
fstl
sar
dec
lock
and
test
or
mov
adc
push
mov
data16
lds
and
lcall
out
mov
rcll
hlt
add
aaa
pusha
mov
mov
mov
mov
sub
add
in
mov
push
jge
lods
out
adc
push
nop
pop
ja,pt
pop
aad
insl
fwait
dec
sub
mov
sbbb
fcmove
dec
test
sbbb
aam
mov
sbbl
in
mov
cltd
fdivp
xchg
or
repz
mov
sbbl
cwtl
add
lcallw
pop
std
push
or
mov
mov
into
call
cmpsb
cmp
call
and
cmpsb
repz
mov
sub
xchg
pop
sub
arpl
and
sub
stos
add
pop
jne
data16
add
pop
xchg
cmp
aas
cmp
insl
dec
ljmp
cmp
arpl
cmp
mov
insl
push
test
pop
dec
aad
or
add
pop
test
es
fcompl
outsb
into
test
sbb
push
loope
fldenv
inc
test
xor
xchg
icebp
xor
pop
mov
push
pop
cmpsb
jp
imul
sbb
xchg
lock
call
mov
dec
xor
mov
mov
add
adc
pop
cs
dec
or
sbb
xchg
daa
lea
and
mov
pop
dec
xor
loopne
icebp
adc
jb
mov
ja
adc
jl
add
and
dec
cmovae
xchg
pop
in
fwait
or
lds
fstps
sahf
ds
cld
les
in
add
push
xor
push
aaa
lahf
mov
mov
pop
dec
mov
rorb
xchg
out
jo
cmp
and
insl
inc
rolb
hlt
jg
add
jb
pop
mov
cmpsb
test
inc
js
push
lods
into
xor
ja
inc
mov
je
sti
jbe
je
insb
jmp
adc
jge
add
nop
xchg
sahf
outsl
mov
jmp
sbb
xchg
or
xor
cmp
mov
dec
sbb
test
inc
xchg
or
xchg
sahf
xlat
xchg
cmp
iret
cli
sub
inc
xor
icebp
sti
dec
jge
adcl
test
jge
jmp
lds
sti
push
movsb
cmp
xchg
push
adc
cmpb
or
xchg
cwtl
xchg
mov
fnsave
dec
or
mov
cmpsb
xor
mov
push
pop
frstor
outsl
es
cli
bound
mov
fwait
cmp
ss
add
sub
sub
dec
sbb
jp
scas
sahf
inc
sub
imul
icebp
test
stos
adc
or
ret
rolb
movsb
cmpb
pop
rol
push
fdivr
push
loop
sahf
shrb
mov
scas
jo
clc
and
add
sub
dec
nop
enter
testl
jo
pushf
pop
in
dec
rcrb
outsb
orb
add
mov
testb
outsl
adc
cli
xchg
pop
lds
xor
jg
loopne
out
popw
and
ret
cmpsb
stos
dec
mov
push
scas
adc
sbb
add
int3
adc
adc
lods
pushf
or
insl
gs
scas
in
lahf
pop
sbb
out
insb
pop
ss
pop
lock
loope
lret
mov
sbb
insl
inc
icebp
shlb
lahf
add
fildll
gs
lods
pop
sti
lods
mov
popf
mov
cmp
add
xchg
mov
popa
mov
xor
push
xchg
aaa
aas
xor
cwtl
cmp
mov
lods
popf
xorl
jae
cmc
scas
sbb
adc
ret
sub
or
mov
ret
sbb
fadd
stos
stos
out
sub
jl
lods
in
mov
rol
icebp
lods
ss
dec
test
lea
in
nop
cltd
mov
dec
push
or
sub
pop
xchg
pop
cs
lea
xchg
cld
or
fnstsw
repnz
jge
sbb
xor
mov
push
cmpsl
int
mov
das
inc
or
loopne
adc
in
aad
xlat
cmp
ret
mov
jg
scas
push
mov
fstpl
nop
adc
push
ficoml
movsb
jp
popf
rolb
add
call
dec
stc
xor
cmp
sub
push
pushf
push
das
or
iret
and
pop
imul
aad
cmpsb
and
cmp
cld
mov
mov
adc
mov
jmp
dec
xchg
movsl
fimull
cli
push
outsb
inc
dec
push
dec
cmc
fistl
mov
ret
sub
es
iret
repz
daa
iret
cli
cmp
adc
pop
das
pusha
clc
stos
inc
es
xchg
pop
jo
and
sub
ficompl
int
push
sbbb
icebp
shrb
push
loope
scas
fwait
inc
loopne
xor
cltd
imul
push
ss
pop
add
ljmp
cmp
mov
rcrb
jp
push
pop
mov
rorl
and
in
inc
ret
mov
inc
mov
insb
mov
inc
adc
xchg
icebp
rol
jecxz
pusha
mov
lahf
or
daa
xchg
aad
bound
mov
cli
push
mov
or
push
jno
dec
xor
jae
sbb
int
push
cld
add
ds
push
sub
xor
xchg
lods
js
dec
sub
jb
push
pop
leave
pop
js
imulb
pusha
adc
out
lods
mov
ljmp
inc
push
pusha
inc
insl
lods
fst
jp
inc
aaa
jecxz
or
ret
scas
movsl
fisubrs
and
jl
iret
mov
int3
xchg
loope
test
movsl
mov
xchg
xor
push
shlb
loopne
jecxz
xor
jge
in
push
add
daa
mov
inc
jecxz
mov
loop
or
push
clc
div
jle
enter
or
sub
lods
push
ficompl
pop
fs
std
into
mov
push
int
add
push
aam
push
mov
imul
lods
jp
sarb
dec
or
mov
jb
clc
in
mov
es
es
ljmp
les
cmp
xchg
lret
movnti
fistpl
ljmp
pop
mov
mov
sti
jno
adc
jp
sbb
xlat
into
insb
lods
mov
out
add
int
test
mov
pop
push
ds
jne
cmpsb
and
mov
int
fdivr
jl
pop
sub
sub
addr16
mov
jns
or
mov
mov
mov
xor
mov
inc
push
push
jmp
inc
sbb
sarb
xor
sahf
adc
and
andl
ret
aaa
cltd
pop
lahf
lock
sub
popa
out
popa
push
std
push
test
outsl
mov
inc
mov
xor
pop
in
aam
int
and
jnp
sub
sahf
mov
les
in
insl
cmp
loope
hlt
sbb
les
jb
sub
cmp
sbb
push
dec
lea
cwtl
mov
loop
leave
fidivs
push
data16
push
dec
nop
push
test
cmpsl
sbb
mov
ffreep
fsubs
bound
sub
fildl
dec
lret
aad
cltd
out
gs
std
aas
add
push
sub
lea
mov
ret
scas
sub
icebp
repz
add
in
sub
add
jo
pop
movsl
sub
das
xchg
mov
mov
and
add
push
lret
xchg
inc
sbb
in
fcoml
inc
pop
pop
scas
out
jb
jge
sti
xchg
cmp
jo
sub
mov
in
in
fwait
push
pop
loop
jle
push
test
fadd
sbb
jg
adc
inc
das
pushf
pop
pop
adc
mov
mov
adc
adc
mov
lahf
pop
pop
dec
push
jo
inc
in
jle
dec
xchg
xchg
cmp
xor
adcl
sbb
and
or
loop
faddl
or
mov
addr16
cmp
int
mov
mov
lods
xchg
adc
cmc
xchg
fstps
mov
sbb
gs
push
xchg
pop
mov
mov
xor
inc
out
xchg
sbb
call
xchg
mov
inc
lret
cs
mov
inc
gs
enter
xchg
mov
mov
je
push
sbb
mov
movsb
xchg
or
mov
lock
push
push
jnp
xchg
or
ret
int3
xchg
fisubrs
das
jno
jl
pop
lods
cmp
add
ret
push
dec
scas
mov
mov
push
sbb
sbb
or
dec
adc
cmp
enter
sbb
in
adc
dec
pop
sti
push
sub
jmp
or
cmp
arpl
push
cwtl
fidivs
cmpsl
mov
arpl
dec
mov
aam
cmpsl
sarl
fnsave
hlt
outsb
adc
jge
add
test
push
test
push
stc
leave
pop
test
into
pop
outsb
dec
aas
jge
outsb
jg
ret
aam
testb
es
loopne
push
xchg
ja
xchg
jmp
sbb
add
test
clc
out
jg
and
rcrb
add
aam
cltd
adc
mov
xor
or
cmp
mov
dec
test
sbb
jb
sbb
fiadds
cmpsl
cmp
stc
pushf
bound
call
scas
mov
das
mov
xchg
mov
pop
imul
and
inc
in
inc
add
xchg
mov
push
cmp
pop
mov
in
mov
out
jo
movsb
stos
clc
iret
test
ficoms
cs
in
sbb
lock
cli
addb
testl
cmpsl
es
push
roll
sarl
mov
pop
inc
into
loop
std
sbb
add
shrl
inc
xor
nop
cs
pop
add
xor
mov
mov
js
cmp
les
test
push
mov
lock
xchg
add
dec
lods
addb
fucomp
stos
loopne
adc
xor
cmp
mov
inc
add
and
or
pop
cmp
jge
test
xor
mov
mov
outsl
repnz
xor
nop
dec
push
aam
and
adc
mov
mov
jnp
cmp
sub
mov
push
dec
stos
mov
mov
ret
add
cmp
aam
das
dec
adc
mov
cmpsb
mov
inc
pop
cltd
scas
lret
pop
sbb
aaa
mov
fstl
dec
mov
inc
mov
cltd
insb
sbb
pop
fwait
and
pushf
xor
shll
test
xor
std
pop
gs
cs
mov
ret
dec
lahf
adcb
adc
xchg
mov
and
cmp
push
pop
mov
lds
lods
int3
or
pushf
sti
add
hlt
inc
mov
push
fdivrl
jae
jo
adc
lahf
test
cmp
pop
cmp
sti
test
into
mov
inc
xor
fstl
xorb
pushf
and
clc
cld
movsb
insl
les
sbb
push
mov
loopne
push
insb
ret
mov
je
loopne
mov
xchg
xlat
test
xchg
xchg
cmc
nop
push
lea
sbb
sbb
or
sub
and
and
imul
imul
repnz
add
repnz
jg
jo
push
loopne
cmp
ss
out
ret
test
push
push
jo
lahf
adc
lcall
repnz
xor
mov
sub
push
fdivl
mov
aad
cmpsb
sti
dec
movsl
in
jno
or
and
add
mov
jle
and
adcb
xchg
test
jp
push
xor
sbb
sbb
aaa
push
xchg
in
and
xchg
inc
and
cmpsl
aad
int
mov
cmp
push
mov
mov
xchg
push
popf
adc
jne
loop
repz
mov
push
fcoml
test
mov
mov
popf
jge
repnz
jle
in
stos
es
int3
lods
cmpsl
mov
loope
movsl
inc
dec
lret
icebp
shll
test
inc
mov
xchg
movsb
mov
test
movsl
push
ficoml
or
pushf
clc
jmp
mov
stc
das
lret
int
add
push
shl
jmp
mov
or
xor
inc
stos
pop
into
xor
out
scas
sbb
fdiv
outsl
ficoml
mov
mov
das
in
dec
lods
scas
inc
sbb
movsb
stc
hlt
pushf
pop
and
cmp
sarl
pop
fnsave
cmp
jmp
jecxz
mov
jne
ret
leave
cmpsb
xchg
adc
insb
pushf
add
sar
aad
push
add
fisubs
aaa
or
and
push
jns
pop
xor
stc
das
dec
cmc
dec
cmpsb
in
mov
sbb
xor
aaa
cmp
mov
sub
hlt
mov
push
data16
and
mov
sbbb
mov
mov
push
outsl
pop
add
movsl
scas
mov
into
stos
pop
daa
hlt
out
jmp
mov
sub
es
out
call
xor
mov
lock
lcall
xchg
mov
and
lahf
int
mov
mov
movsb
lds
push
flds
dec
adc
dec
cwtl
cwtl
xchg
jge
adcl
je
fldcw
mov
add
inc
xchg
rorb
inc
push
scas
xchg
xchg
mov
push
aam
mov
lock
fsubr
cmpsb
inc
repz
dec
ret
aas
enter
ret
sbb
jg
mov
jmp
sub
xor
xchg
pop
xchg
sbb
cld
ret
xchg
leave
pop
inc
pop
gs
insb
outsl
xchg
dec
add
int
cmpsl
xor
loop
test
jp
mov
mov
loope
icebp
jp
xchg
ja
icebp
mov
xchg
xor
jle
xchg
call
cwtl
jg
mov
pop
arpl
insb
leave
outsb
push
mov
repnz
nop
dec
and
adc
add
or
popa
or
xor
sahf
jbe
or
mov
push
mov
pop
out
inc
mov
insb
adc
or
imul
inc
cltd
dec
dec
dec
mov
les
aas
ret
mov
mov
push
movsl
adc
ss
dec
leave
cmp
sti
push
test
jmp
cwtl
pop
test
hlt
sbb
and
shl
add
rorl
mov
aaa
fwait
push
fwait
loop
mov
imul
mov
sub
adc
pop
push
push
push
jbe
sbb
push
xor
jmp
dec
inc
xchg
adc
jl
dec
jno
mov
jmp
and
cwtl
in
mov
sbb
cwtl
icebp
xor
sub
shr
jmp
xor
jno
xorb
rolb
arpl
loope
push
dec
ret
xlat
cmp
jl
repnz
loopne
fsubrl
cmp
xchg
push
pop
ljmp
dec
fsts
out
ds
push
push
sbb
dec
sti
test
xchg
jne
fstpl
push
pushw
mov
addr16
mov
xchg
lods
mov
fimuls
jg
cmpsl
rcr
pop
jecxz
fmuls
adc
frstor
push
jecxz
into
mov
push
xchg
pop
xchg
xchg
jbe
pop
out
push
pop
adc
push
ret
ljmp
cltd
adc
push
xchg
jecxz
or
rcl
push
nop
in
mov
xchg
dec
mov
cmp
mov
test
xchg
dec
hlt
sarb
pop
imul
repz
jns
mov
cltd
push
add
daa
add
mov
hlt
fwait
imul
dec
jno
fstps
mov
js
mov
xchg
jno
pusha
mov
in
aas
repz
pop
adc
mov
scas
mov
xchg
xorl
mov
cmp
mov
testb
jl
push
movsl
jno
outsb
and
mov
or
idivb
sbb
ret
not
jnp
leave
mov
insl
mov
test
sub
xchg
call
mov
mov
jle
mov
push
dec
add
pop
mov
xlat
dec
mov
pop
fnstsw
movl
mov
and
jp
jno
push
push
iret
pop
dec
mov
dec
jns
sbb
adc
repz
xlat
jge
or
xor
mov
gs
fs
or
and
xchg
dec
push
call
push
aaa
push
mov
in
daa
aaa
loop
stos
cmp
push
add
imul
mov
addr16
push
push
fninit
call
add
std
or
jno
sti
sbb
jge
jne
popa
jge
stc
sub
or
xchg
shrb
scas
dec
xor
pop
jl
fildll
movsb
loopne
sbb
nop
in
sbb
jle
ja
movb
aaa
push
xchg
inc
out
mov
push
push
push
push
stos
inc
xchg
in
or
mov
jb
push
popf
bound
mov
xchg
daa
push
lea
sub
ds
dec
sbbl
mov
sahf
jae
arpl
xor
and
rorl
ret
push
repz
xchg
dec
sbbl
mov
sahf
jae
arpl
xor
and
rorl
repz
dec
xorl
popl
subl
fidivs
out
sbb
ljmp
xchg
dec
xchg
pop
mov
and
fldcw
mov
repnz
loop
sarb
push
loopne
vpcomuw
in
inc
clc
xor
add
sarb
push
xchg
cmp
enter
call
adc
sti
push
lret
jo
add
xor
inc
jmp
cmpl
cld
dec
lret
fwait
adc
cmp
sbb
mov
hlt
add
jmp
pusha
and
lret
shll
sbb
cmp
pop
xlat
mull
dec
ss
test
pop
clc
xor
adc
push
or
dec
test
jno
and
or
and
xchg
iret
pop
xor
add
repz
repnz
xchg
cmp
mov
lods
stc
cmp
addr16
mov
or
mov
xchg
sbb
fdivrs
inc
jb
movsb
aaa
push
add
cwtl
in
jmp
sub
xchg
cmpb
popa
cmp
mov
ja
jno
adc
sti
pop
shlb
push
xchg
cmp
rorb
pop
icebp
sub
add
mov
mov
rcrl
imul
mov
enter
lea
std
inc
mov
outsl
les
or
inc
xchg
dec
rcrl
xor
ljmp
data16
sbb
sub
xchg
cmp
enter
call
adc
loop
sarb
push
xchg
cmp
enter
call
adc
int
insl
pushl
xchg
nop
testb
inc
and
loopne
mov
pop
cmc
insb
adc
cmp
outsl
imulb
jnp
enter
push
lds
rcrl
dec
push
test
pop
test
daa
js
test
mov
imul
jle
jne
je
add
outsl
icebp
mov
cmp
stos
sbb
icebp
xchg
or
jno
out
das
mov
sbb
shlb
inc
or
ds
push
jo
jb
aad
jge
dec
in
push
xchg
inc
cmp
lcall
and
addr16
jnp
push
sbb
jmp
fists
fcom
pop
stc
and
mov
and
sub
cld
sub
xlat
and
insl
jp
xchg
adc
popf
push
adc
xchg
lahf
xor
outsb
xchg
pop
add
idiv
shll
aas
jle
mov
into
sub
adc
cmp
pop
daa
dec
cltd
fsubl
push
imul
mov
ss
pop
sbb
mov
or
fwait
push
test
xor
mov
fwait
icebp
push
sbb
cltd
push
push
imul
mov
mov
or
push
pop
dec
stos
cmpsl
pusha
push
stc
add
pop
divl
xchg
pop
push
sub
and
or
imul
adc
divb
clc
pop
fwait
loopne
mov
fisubrl
lret
lahf
push
jb
inc
jae
push
mov
inc
lds
pop
and
pushf
mov
xchg
cmpxchg
jb
and
mov
jo
xor
shlb
shlb
into
pop
out
inc
test
dec
fdivs
in
pop
cmp
push
lock
push
cmp
inc
push
jle
pop
int3
mov
fwait
aad
loop
in
mov
and
pop
dec
cmpsb
stos
idivb
addr16
inc
mov
bound
insb
pop
mov
insb
fidivrs
jecxz
sub
clc
insb
dec
sbb
test
fildl
lds
xchg
bound
mov
into
mov
outsl
lahf
rcr
push
fstpl
ja
sti
xor
int3
mov
in
xchg
pop
out
push
cmp
leave
nop
insl
in
add
ds
clc
in
fidivs
jo
scas
xor
push
out
leave
popf
push
xor
sar
xchg
fnstenv
or
push
sbb
das
mov
mov
mov
push
cmp
push
jg
add
adc
fidivl
les
lcall
lods
lret
mov
std
mov
mov
into
mov
fwait
jns
xchg
cmp
cmpb
mov
sbb
sub
mov
jge
int3
mov
lcall
sarb
stos
pop
roll
lock
fstl
shrl
pop
cmpsl
pop
leave
addr16
xor
lock
shr
inc
cmp
mov
or
or
pop
push
push
pop
jle
push
push
mov
dec
mov
xchg
fiadds
jb
insl
xchg
xchg
and
mov
xchg
shlb
or
and
dec
lds
hlt
aad
pop
cmpsb
push
jnp
call
notl
pop
in
push
mov
sub
mov
dec
in
xor
lcall
outsb
fnstenv
outsl
ja
sbb
pop
or
rcll
jl
aam
stos
add
mov
insl
jmp
fiadds
leave
test
inc
xchg
fucomip
out
out
pop
mov
xchg
pop
popf
adc
sar
adc
xchg
popf
inc
fnstenv
sbb
add
push
cmp
dec
bound
ret
in
bound
loope
xchg
jns
test
or
lret
cmc
in
inc
cwtl
sbb
loopne
cmpsl
int3
shll
sbb
jno
test
mov
loopne
aad
adc
cltd
je
repz
pop
movsb
stc
fmul
loopne
outsb
inc
dec
inc
imul
mov
push
or
dec
clc
dec
lea
jmp
push
cmpl
dec
mov
inc
lods
pop
pop
add
or
movsb
sbb
mov
fnstcw
imulb
nop
bound
leave
sar
cmc
ja
fwait
mov
sbb
das
sub
cmp
jle
lds
out
out
movsl
lea
repnz
dec
add
addb
outsl
pop
mov
mov
out
ds
shrb
mov
in
mov
lods
push
fldenv
loop
add
std
or
iret
mov
cmp
iret
fsubrp
sbb
cmpsl
jnp
sbb
dec
cld
loopne
pop
pop
cld
movl
xchg
cmp
push
add
pop
pop
mov
stos
mov
in
rcll
dec
push
mov
sub
push
push
fimull
jno
aad
push
sub
outsb
enter
sbb
xorl
cmp
jle
mov
adc
fwait
in
mov
mov
sub
fiaddl
jmp
mov
movsb
jle
aaa
int
repz
lods
mov
pop
ret
sahf
lods
jmp
jge
pop
iret
fbld
add
hlt
aaa
in
sub
pop
lods
add
ljmp
add
jl
orl
ret
xchg
popf
inc
pop
cmpsb
xor
mov
iret
loopne
pushf
mov
cmpsl
add
in
rcrb
add
sub
mov
xchg
lcall
pop
push
popa
pop
mov
aam
cmpsl
pop
inc
inc
popf
add
or
push
js
pop
cltd
xchg
fidivs
leave
fs
or
shl
push
repnz
sub
dec
xor
mov
jno
mov
jnp
fmull
scas
add
cltd
imul
fisubl
jno
mov
add
shlb
ret
jle
pop
or
test
in
dec
int
addr16
adc
loop
pop
xchg
inc
in
cmp
aaa
insl
adc
jb
outsb
sbb
mov
movsb
repz
lret
adcb
icebp
fldl
mov
ja
and
mov
cmp
lods
mov
out
add
clc
pusha
mov
xchg
cld
inc
sub
or
shl
or
mov
mov
mulw
lds
jmp
sbbl
sbb
jno
rcrl
les
adc
and
inc
movups
xor
inc
pop
mov
jne
mov
mov
cmp
mov
fmul
ljmp
add
mov
es
push
sbb
sbb
in
out
jb
cs
dec
stc
test
mov
sub
or
rcrl
xchg
and
stos
push
sbb
push
add
leave
bnd
pop
lods
jo
add
and
dec
test
or
popf
call
adc
lock
mov
sbb
aaa
inc
dec
in
mov
push
int
imull
leave
mov
adc
sub
push
pop
rcr
inc
mov
xor
stos
insl
dec
movsb
sub
sub
cmp
sbb
in
es
cmp
adc
jle
add
gs
dec
cld
test
popa
mov
shlb
sub
xlat
lahf
mov
push
add
mov
add
fadd
mov
clc
stc
mov
lret
cmp
outsl
or
pop
iret
sti
or
ds
jne
cli
jl
push
jbe
pop
mov
scas
and
sub
xchg
mov
fsubr
in
lret
imul
push
inc
add
fadd
pop
scas
cmpsl
pop
or
pusha
sbb
push
inc
dec
push
mov
pop
cmpl
repnz
arpl
pushf
jns
cmp
sbb
shrl
and
fiadds
fnstenv
loop
lret
pop
pop
xchg
repnz
mov
xchg
in
int3
scas
or
in
int3
and
je
fisubs
push
push
and
pop
add
or
pop
push
adc
fistl
fildl
cltd
dec
add
pop
jp
sbb
cmp
mov
adc
pop
std
or
out
pop
rcrb
loope
mov
push
cmpsb
xlat
nop
fbstp
cmp
fsubl
stc
imul
lods
cld
sbbb
mov
adc
sub
std
cld
lcall
das
mov
int3
int
dec
lds
sub
lcall
dec
cltd
cwtl
cmp
cmpsb
mov
add
pusha
fisttps
xlat
clc
imul
sub
dec
cmc
adc
rcl
jo
enter
add
mov
testb
sub
mov
repz
notl
dec
pop
adc
shll
dec
out
sub
cld
enter
clc
andl
sub
mov
and
and
fldt
int
jle
mov
movsb
sbb
mov
push
inc
xor
idivb
mov
jecxz
movsl
call
sbb
pushf
bound
sub
adcb
outsl
lcall
mov
orb
dec
add
push
aad
dec
mov
nop
or
popa
push
adc
push
cld
daa
testl
and
and
mov
jl
jo
rcll
mov
cmp
imul
rclb
push
push
push
cmp
in
jbe
xchg
dec
cmc
dec
bound
or
dec
in
sti
mov
mov
mov
pop
cltd
scas
sti
pop
hlt
mov
adc
and
lods
push
jb
fsubl
mov
stc
scas
ret
mov
cmp
ret
xchg
cmp
clc
push
mov
fnstsw
inc
inc
jns
stc
out
shll
gs
iret
and
push
adc
outsb
push
outsl
adc
mov
push
xchg
mov
adc
mov
dec
arpl
push
jne
mov
jae
testb
lret
into
shrd
mov
leave
shl
or
jae
nop
addr16
push
push
jle
movsb
pushf
test
xor
pop
xchg
aaa
or
xchg
loope
cmp
out
add
xchg
dec
cmc
xor
nop
insl
lock
sub
mov
sub
inc
jns
insb
xchg
nop
repz
xor
mov
inc
insb
and
and
cli
das
adc
or
int
push
clc
sub
in
inc
dec
ljmp
push
mov
xchg
mov
daa
add
dec
ds
pushf
or
cs
cld
pusha
andb
rcrb
negl
in
pop
lods
andl
pop
inc
push
sbb
nop
adc
pop
lret
loop
arpl
imul
rcrb
repnz
insb
xor
int3
cwtl
mov
lods
pop
xchg
gs
addr16
xlat
lcall
loopne
adc
repnz
dec
movsb
test
inc
push
mov
dec
push
fcomi
jae
mov
sbb
clc
lock
add
loope
xchg
cmp
and
lds
lcall
mov
xor
into
nop
scas
pop
pop
mov
pop
ss
stos
sbb
loope
lret
push
movsb
mov
js
inc
lods
xchg
pushf
aaa
or
lret
cmc
sahf
fsubr
rcrb
test
mov
out
hlt
sub
dec
push
ss
je
jnp
dec
pop
add
add
sbb
test
mov
mov
cmpl
fs
ljmp
loope
fnstcw
xchg
cmp
mov
mov
pop
lcall
jmp
or
test
xchg
push
cmpb
jb
xor
inc
adc
push
xor
add
loopne
jmp
js
add
inc
adc
xchg
xacquire
add
mov
std
mov
ret
dec
cltd
and
lea
xchg
push
ja
sub
lods
fldenv
cmp
inc
popf
sub
jg
xchg
aad
imul
shlb
xchg
insb
loop
int3
add
mov
xorb
shlb
je
bswap
mov
sbb
test
or
push
inc
out
xor
sub
dec
mov
xchg
cmp
xorl
push
stc
arpl
sub
stos
mov
mov
xchg
adc
gs
push
sub
mov
popa
subb
xor
adc
lods
or
sbb
mov
jb
inc
xchg
mov
xchg
mov
mov
aam
dec
pop
dec
stos
in
sahf
push
xchg
pop
push
push
sbb
fcompl
push
xor
add
aad
push
add
jo
mov
lahf
jmp
lret
mov
xlat
xor
leave
daa
ret
rcrb
pop
and
loopne
imulb
mov
andb
add
inc
bound
pop
pop
xchg
pop
scas
mov
jecxz
cli
xlat
stc
in
jnp
xor
loop
mov
mov
add
in
mov
mov
xchg
jae
jl
mov
mulb
cltd
dec
mov
fnstenv
in
shrl
lods
mov
cmpsb
test
pop
pushf
mov
or
fdivrs
dec
insl
dec
out
sbb
push
scas
leave
inc
out
mov
loopne
pop
mov
or
cmp
cmpsl
in
fisubrs
scas
mov
mov
add
bound
je
cmpsl
dec
movsb
jle
int3
dec
xor
ficoms
cltd
scas
out
push
cmp
adc
cmp
fisubl
int
sub
in
xor
iret
call
sbb
out
aam
xchg
rclb
test
clc
push
cmpsb
jl
sbb
ret
push
or
lea
mov
lea
imul
faddl
leave
popf
ret
mov
push
pop
mov
push
xor
jp
or
idivl
pop
dec
or
push
lret
test
jmp
fst
popa
rcrb
adc
mov
xor
mov
test
cmpsb
cmpl
jg
xlat
add
lahf
mov
clc
sbb
sbb
dec
std
push
lds
loop
cmp
sbb
push
lahf
ds
sbb
ja
mov
das
mov
xlat
push
inc
stos
dec
push
cmp
fs
mov
mull
mov
nop
inc
notb
xchg
cltd
xor
inc
mov
shrb
aad
fwait
ret
jmp
pop
or
pushf
leave
mov
cmp
je
or
or
jmp
sbb
icebp
adc
xor
shll
rcl
cmpsl
mov
ljmp
sti
mov
sbb
rolb
jl
loop
das
test
mov
push
sbb
fimull
scas
imul
sbbl
jle
insb
xchg
in
inc
je
xchg
pop
insb
inc
mov
and
cmp
and
es
adc
dec
jb
sub
data16
lods
cmp
jl
ret
addr16
pusha
je
cmp
mov
imul
pop
dec
mov
insb
xor
pushl
inc
sahf
enter
inc
push
inc
stos
adc
cmp
push
sub
adc
add
lds
xor
xchg
scas
push
pushf
and
cmp
ror
clc
ss
push
xor
mov
push
out
mov
daa
fdivl
adcl
pop
pushf
pop
cmc
out
popf
in
sti
sub
jbe
dec
test
imul
jge
mov
dec
push
mov
outsb
jg
arpl
jno
mov
nop
lcall
push
std
xor
stos
out
shll
out
sub
mov
xchg
call
fstps
dec
dec
repz
sbb
jbe
push
lock
idivb
mov
mov
add
cmp
sbbb
fcompl
jge
stc
ds
cmpb
cmp
js
push
push
loop
cltd
cmc
lret
dec
enter
jno
mov
jne
pop
sub
xchg
mov
mov
ret
cmp
jno
mov
das
rol
sahf
xor
sub
call
ret
subb
push
mov
add
cmc
lods
cmc
and
inc
and
sar
js
push
daa
nop
xchg
in
repnz
fisubrl
xchg
inc
push
arpl
into
mov
sub
imul
xor
mov
addr16
dec
inc
inc
daa
sbb
das
icebp
jnp
inc
into
repz
add
dec
inc
in
sub
cltd
inc
lods
pop
mov
cwtl
mov
nop
mov
adc
mov
lds
inc
inc
or
push
lds
fsubrp
aas
mov
xchg
out
out
and
sbb
inc
int
mov
nop
int
xchg
gs
in
sbb
ret
jmp
mov
les
sub
fiaddl
cmpsb
adc
pop
out
icebp
push
in
pusha
gs
mov
les
popa
cltd
mov
lahf
and
into
outsb
mov
adc
mov
aaa
pop
std
jecxz
sbb
sbb
cmp
icebp
aas
pop
mov
jmp
loope
add
lcall
cmpsl
add
call
xor
jae
loop
push
jp
or
push
stc
fimuls
sbb
enter
or
loopne
je
aaa
mov
lds
jle
loopne
cmpsl
outsl
push
dec
or
movsb
sbb
adc
movsb
stos
and
mov
sbb
pop
pop
mov
cmp
mov
and
push
pusha
loope
nop
loop
push
push
in
sbb
ret
adc
pusha
inc
adc
adc
mov
sub
jnp
ret
inc
cmpsb
sbb
nop
ficoml
push
call
mov
pop
lods
cltd
shlb
aad
lods
fsubrp
xchg
test
cmpsb
pushf
rclb
add
dec
out
sbb
aas
pop
mov
outsl
and
pop
icebp
jecxz
sub
aas
scas
cli
movsb
cmp
add
cli
cmp
dec
inc
popf
add
aad
das
push
jmp
or
sbb
dec
and
and
lods
push
xor
ja
add
pop
mov
out
xor
mov
fdivrs
pop
jae
shll
dec
jmp
mov
scas
mov
repz
repz
pop
into
test
pop
cmp
rclb
out
sti
adc
popa
jl
ss
lods
sarl
movsl
pop
pop
icebp
mov
cmc
cmp
inc
or
out
pusha
cld
push
stc
sar
push
sbb
dec
mov
subb
mov
xchg
stc
add
xlat
fnstcw
adc
pop
xor
in
cltd
sub
icebp
dec
jae
lahf
in
mov
mov
enter
jne
xchg
nop
cmp
mov
in
dec
mov
cmc
adcl
jnp
fmull
scas
add
cmp
push
stos
je
mov
jmp
xor
pop
ja
aam
fwait
int3
in
sti
arpl
mov
das
mov
add
xchg
dec
mov
jle
push
cltd
add
xchg
int3
or
push
dec
push
adc
adc
orl
out
fwait
in
inc
test
xor
popf
insl
outsl
mov
xor
stos
movsl
lret
xchg
cmp
pop
fimuls
pop
repz
bnd
xor
add
mov
cmpsb
cmpsb
and
mov
movb
frstor
movsl
mov
idivb
xor
push
xor
enter
movsl
sbbb
movsb
enter
jle
aaa
mov
mov
fcmovu
int3
lds
xor
mulb
repnz
loop
add
ret
xor
fcmovu
fimull
aam
mov
stos
mov
subb
adc
pop
adc
mov
xchg
rclb
inc
dec
pusha
fmuls
leave
sbb
lahf
cmp
cmp
jmp
fcmovnb
mov
into
fdivl
std
pop
mov
dec
and
adc
adc
sbbb
insb
jno
mov
jnp
dec
rorb
mov
pusha
addr16
stos
popa
and
in
mov
jns
or
cmc
loopne
movsl
clc
sbb
pop
iret
lds
sub
and
int3
xor
push
inc
add
fildll
xor
mov
aaa
mov
add
mov
jecxz
adc
cs
sbbl
popf
int
decl
mov
stos
inc
xchg
pop
cmp
add
repnz
in
popw
sub
and
jno
dec
sahf
int
stos
mov
and
add
adc
addr16
xlat
hlt
dec
xchg
pop
and
dec
aas
inc
jb
jp
loop
mov
xor
std
jecxz
ficoml
xor
jno
xchg
jo
jmp
gs
push
es
xor
pusha
mov
adc
std
pop
add
inc
jae
cld
push
inc
mov
outsb
sbb
add
push
inc
ret
fadds
dec
and
cli
jb
jo
daa
jne
dec
jno
mov
or
fwait
dec
clc
adc
pop
lds
inc
cltd
xor
sub
std
push
sbbl
bound
stos
dec
add
pop
xchg
xor
cmpsb
lock
jae
gs
xlat
sbb
add
mov
lea
and
notl
jg
sbb
push
dec
arpl
fisubrl
lock
adc
in
sub
loopne
mov
lret
out
andb
and
in
mov
jl
cld
imul
aam
pushf
pop
aas
mov
mov
jg
mov
fldenv
test
mov
aaa
test
sub
icebp
sarl
sahf
pop
pop
jmp
cld
xor
out
and
test
cmc
in
ss
mov
pushf
adc
add
aas
xchg
inc
arpl
pusha
dec
fdivrs
push
xchg
cmp
enter
call
adc
loop
sarb
push
xchg
cmp
enter
call
adc
loop
sarb
push
xchg
cmp
enter
in
xor
add
jl
push
adc
add
fcomps
lahf
inc
adc
xlat
xor
sbbb
mov
push
arpl
scas
adc
push
fisubs
into
and
bound
sbbb
mov
push
repnz
loop
adc
add
adc
and
jb
bound
mov
xor
idiv
icebp
cmpb
inc
scas
and
and
bound
xchg
dec
jmp
cmp
mov
imul
insb
or
mov
ss
je
mov
mov
ret
data16
pop
outsb
pop
sarl
xchg
adc
and
and
pop
pop
jb
das
cs
jle
pop
in
into
mov
pop
ret
ss
mov
mov
cmpsl
inc
inc
and
mov
bound
ret
and
roll
pop
stos
or
jmp
mov
fnsave
add
sti
stos
xchg
arpl
repnz
ds
mov
mov
and
scas
iret
into
jb
popf
sti
popf
outsb
bound
call
imull
adc
push
fbld
into
xor
add
jb
xchg
outsb
xchg
pop
mov
push
push
jmp
sti
or
jl
push
sub
cmp
dec
mov
sahf
jb
push
or
sbb
push
test
or
jnp
jp
scas
dec
xlat
aas
rclb
jb
movd
out
sbb
test
jb
jge
imul
int
lret
sub
or
pop
out
rorl
xlat
jnp
cs
push
loop
adc
add
xor
and
jb
bound
outsb
sbbb
mov
push
repnz
loop
adc
add
xor
and
jb
bound
stos
add
jb
inc
cmpsl
jle
push
mov
mov
cmp
push
dec
int
jno
aad
ss
cmp
add
xchg
and
shlb
xor
hlt
frstor
pop
pop
jecxz
dec
mov
xchg
movsb
pushf
jns
rcl
adc
and
or
jno
or
inc
rclb
inc
call
lcall
cli
inc
cmp
lret
int3
movsb
out
push
dec
or
sbb
xchg
mov
fs
mov
jne
jl
push
dec
popf
adc
outsb
jbe
into
cmp
and
cmc
add
out
mov
pusha
mov
stos
shll
shrl
jl
faddl
xchg
arpl
sub
lock
mov
test
fxch
xor
sbb
mov
sub
jbe
or
fwait
cmp
scas
fs
mov
stos
andb
movsl
ret
jmp
mov
pop
push
ja
sub
ds
dec
push
das
addl
stc
in
xchg
imul
fildll
mov
lock
jp
cli
in
cmp
ret
push
sbb
cs
mov
mov
pop
jmp
xchg
rolb
jbe
in
ja
lock
in
gs
mov
lcall
js
data16
sti
shlb
mov
or
cwtl
aaa
push
cli
rorb
je
xchg
jl
sti
iret
sub
in
mov
xor
mov
push
movb
pusha
ja
stos
in
jle
rorl
inc
rorb
cld
sbb
push
insl
fbstp
imul
pop
bound
scas
pop
ja
arpl
jmp
or
loopne
inc
dec
sbb
lea
lods
push
enter
sbb
dec
mov
mov
mov
jnp
je
inc
mov
sub
cwtl
ret
jg
aas
xor
cli
jge
scas
out
loop
pop
mov
sbb
inc
xchg
lock
xchg
jne
cmc
sub
lea
test
call
cld
enter
inc
es
stos
scas
shll
sub
icebp
ror
mov
sbb
cmp
loop
nop
dec
icebp
shlb
and
mov
stc
dec
adc
mov
repnz
and
or
jb
into
shrl
push
ss
jns
mov
inc
cmp
add
mov
inc
xchg
push
mov
mov
cwtl
and
xor
jg
call
sbb
pushl
add
fdivrl
pop
adc
and
pop
mov
stc
mov
leave
ret
andb
or
and
ljmp
inc
scas
push
adcb
popa
aam
mov
dec
pop
xchg
outsl
xchg
cmpsl
insl
lds
mov
cwtl
je
or
sbb
mov
sbb
mov
push
clc
push
in
cmp
call
test
and
mov
push
mov
push
ljmp
xchg
cld
dec
and
out
testl
sub
mov
push
xor
int3
lods
sahf
hlt
adc
mov
inc
push
cmp
jae
mov
aam
idiv
sbb
addl
sbb
sbb
lret
ret
dec
sbb
sbb
or
and
in
or
hlt
adc
scas
sub
or
sbbl
mov
imulb
xchg
mov
sub
mov
fidivs
cmpsb
mov
or
push
scas
in
jmp
frstor
cmpsb
push
dec
out
or
outsb
repz
test
pusha
xor
test
incl
xchg
cmpsb
test
inc
push
dec
cmc
xor
add
idivb
fbstp
sub
or
inc
rcl
jne
aas
mov
jp
pop
push
push
cs
lock
push
jmp
fcoms
sbb
loope
das
or
dec
xchg
out
inc
mov
xchg
add
lea
lock
in
mov
outsl
sub
add
mov
push
dec
push
adc
out
and
popf
repnz
xor
loop
rorl
scas
adc
out
mov
cli
jb
add
dec
es
adc
xor
push
andb
or
inc
xor
das
nop
pop
jl
mov
xchg
pop
pop
and
lret
in
in
cmp
cmp
adc
imul
movsl
and
ret
or
lock
xchg
jg
sbb
jp
xor
adc
sub
mov
adc
mov
mov
sbb
faddl
into
mov
dec
cli
and
pushf
mov
cmp
aas
out
movsl
daa
cmp
hlt
es
mov
inc
dec
add
mov
inc
cmp
xor
lret
sub
sbb
jb
addr16
ljmp
sarb
jmp
lock
adc
xor
cld
out
nop
mov
dec
pop
xorl
pushf
bound
cs
jecxz
subl
pop
adc
addr16
cs
xchg
jb
sahf
les
cld
mov
test
mov
adc
mov
mov
aad
or
mov
and
or
repnz
loopne,pt
cld
pop
sbb
out
sub
push
pop
ljmp
xlat
and
imul
les
test
in
cmp
out
test
adc
and
mov
inc
push
push
xchg
cmp
add
and
jbe
jmp
pop
xchg
testl
fwait
dec
leave
cmp
push
sub
mov
or
mov
or
or
stc
pop
cmp
iret
xchg
mov
scas
add
negb
xlat
jae
das
push
lods
lret
mov
fs
mov
fildll
push
fidivrs
sbb
scas
jp
inc
jge
call
xor
orl
test
rcrl
mov
arpl
cmp
lock
mov
scas
xchg
cli
icebp
sub
inc
lock
ljmp
sbb
jae
imul
js
cwtl
fs
mov
and
movsb
int
and
stos
stos
lods
push
jno
lock
es
les
lret
fdivp
xchg
stc
mov
mov
shrl
and
cmp
lock
enter
repnz
sub
js
inc
std
es
lods
pop
lret
insb
push
sub
mov
aam
pop
cmpsl
jl
mov
repz
xor
add
lcall
mov
dec
filds
rcrb
fistl
xchg
lods
xlat
icebp
pop
push
cmp
sbb
push
cmp
push
cltd
mov
add
icebp
jmp
mov
add
int3
pusha
pusha
adc
sbb
cmc
cmp
push
js,pn
sub
sbb
daa
js
loopne
mov
jb
insb
pusha
inc
cli
adc
shrb
imul
jne
xchg
fsubl
pop
or
adc
sbbl
fcmovnu
call
cmp
arpl
mov
enter
inc
fistl
xor
xor
call
nop
faddl
clc
jecxz
adc
jl
out
dec
sbb
push
jmp
lods
push
xchg
pushf
sub
push
fimuls
dec
push
push
mov
ljmp
scas
pop
test
cs
push
jno
xor
stc
les
mov
xor
mov
bswap
scas
adc
jo
pop
pop
lahf
or
jno
add
pop
add
dec
nop
mov
in
mov
cli
orl
popa
cmc
mul
negl
scas
xchg
or
in
xchg
or
pop
aad
jl
mov
mov
jp
jmp
popl
jnp
xchg
dec
jl
out
pop
cmc
aaa
pop
sub
jecxz
faddl
sub
mov
std
std
rclb
out
pop
movl
test
sub
dec
je
fidivs
inc
out
insl
mov
loope
dec
mov
call
jb
inc
fcoms
push
in
in
adc
sbb
jg
popl
lods
mov
mov
gs
test
mov
adc
xor
test
imul
cmc
jp
cmp
popa
lock
fldl2t
es
jle
and
sbb
das
shlb
mov
cwtl
es
sbb
and
pop
inc
push
lret
jg
fstl
aas
movsl
sbb
dec
sarl
add
inc
cld
mov
dec
test
cld
std
aas
inc
icebp
jo
jle
insw
leave
sub
pushf
mov
mov
adc
xchg
shll
negl
dec
pop
das
dec
cmp
shll
jmp
mov
mov
enter
cmp
sub
push
jns
faddl
lds
loope
adc
mov
jl
pushf
decb
xchg
cwtd
ret
popa
mov
cwtl
faddp
dec
dec
enter
mov
andl
pop
push
nop
iret
out
ret
mov
imul
pushl
xor
or
sbb
shlb
mov
test
lahf
test
xor
daa
pop
jbe
xchg
xor
sbb
stos
test
add
xchg
push
sub
mov
shl
pop
xchg
and
mov
dec
repnz
mov
xchg
cmp
push
add
sub
xchg
add
xchg
xchg
je
mov
adc
fistpll
js
ret
jge
lea
into
fwait
jmp
mov
xchg
out
fisttpll
inc
fcmovne
shlb
mov
or
mov
mov
cmp
dec
ficompl
xchg
scas
es
out
int3
and
and
cmp
arpl
sbb
movsb
push
sbbb
cmpsb
sub
sbb
or
mov
popw
adc
mov
dec
fwait
adc
hlt
cs
jb
cli
lret
dec
in
movsb
xor
sub
fnstcw
jno
aad
enter
dec
push
add
adc
xor
xor
sarb
jbe
scas
inc
andb
cmp
mov
sbb
movsl
testl
fmuls
mov
fwait
scas
dec
jo
test
andb
add
xor
dec
test
dec
cmp
sub
sbb
ljmp
or
and
cmp
sbb
icebp
mov
mov
adc
fwait
xchg
jno
add
cmp
or
dec
cli
imul
push
jecxz
xchg
mov
fiaddl
es
inc
adc
pop
mov
cmp
sahf
loope
cmp
int
mov
dec
and
mov
andl
repz
inc
push
push
mov
loopne
lret
sti
incb
mov
and
test
outsb
jns,pn
aad
xchg
sub
xor
daa
or
dec
shll
lret
and
push
adc
mov
in
inc
fists
fs
es
mov
test
mov
call
push
cmp
add
stc
rolb
gs
push
cmp
mov
xor
jp
insl
fnstenv
lock
dec
out
dec
xor
mov
loopne
add
cmp
mov
mov
imul
xchg
mov
cmp
push
bound
pushl
aas
sbb
push
push
pop
xchg
pop
adc
lret
pop
cmp
aam
jl
rolb
adc
sub
test
or
and
je
ja
cld
enter
clc
mov
lods
pop
or
loopne
and
aad
mov
xor
call
pushf
sbb
aam
jle
mov
xchg
and
mov
popa
mov
jns
out
subb
mov
mov
xor
fmuls
mov
orl
dec
mov
mov
add
inc
ja
or
test
lret
sub
xor
repz
mov
add
sbb
icebp
div
and
lock
inc
shlb
lcall
sub
test
cmc
pushf
loopne
push
jns
add
outsb
xchg
rol
lds
jo
addr16
xor
mov
je
stc
add
jmp
sub
shl
add
mov
dec
cs
jge
std
mov
xlat
bound
testl
add
cmc
inc
push
shlb
xor
push
cmc
mov
xchg
inc
test
or
mov
cmp
in
xorb
shrl
insb
dec
push
loop
and
sub
cltd
bound
sub
test
pop
sti
scas
and
pop
iret
clc
flds
push
jmp
mov
jae
jl
sub
cld
cmpsl
fists
sub
mov
cmp
cmp
and
aas
inc
lea
add
scas
andl
mov
int3
jne
popf
ficompl
fnstsw
out
and
jl
je
leave
jge
shll
push
popf
cmp
add
and
mov
in
mov
or
daa
inc
cld
pop
idivb
mov
pop
jno
pop
cmp
out
movsb
movsl
mov
imul
add
xchg
sbb
mulb
pop
fs
jo
gs
and
sbb
inc
cmpsb
inc
xorb
sbb
int3
stos
xchg
add
je
cltd
decb
in
mov
mov
and
xor
out
icebp
in
fwait
add
inc
pushf
xchg
in
cs
ds
pop
repz
or
in
ja
mov
cmp
insb
and
cmp
xchg
xacquire
cmc
or
inc
imul
and
jne
push
dec
fs
and
dec
xchg
and
mov
add
fnsave
add
pop
iret
out
jge
imull
movsb
in
push
mov
js
pop
nop
in
pop
bound
mov
nop
pop
or
bound
out
pusha
xchg
add
in
sbb
sti
and
jne
and
outsl
roll
int3
jno
pop
dec
lea
push
cmpsb
jb
mov
push
inc
cmp
outsb
test
stos
imul
andb
out
sbbl
mov
dec
cltd
rorb
xor
sti
jnp
ljmp
enter
outsl
rolb
das
push
or
adc
push
push
shlb
cmpb
mov
sbb
pushf
leave
mov
xor
dec
adc
sbb
jnp
push
sbb
test
dec
jno
sbb
ds
rorb
repnz
inc
test
test
hlt
dec
aam
sbb
lret
mov
push
cmp
lds
mov
inc
inc
inc
cwtl
pop
in
in
fwait
sbb
jbe
xchg
dec
mov
inc
adc
mov
arpl
imul
shr
enter
cmpsb
das
stc
test
int3
or
jnp
jecxz
test
pusha
pop
cld
lods
out
clc
sbb
nop
lahf
fimull
fistl
add
rorb
mov
xorb
lds
jo
fcompl
scas
mov
nop
sub
dec
xlat
sub
sub
adc
mov
mov
repnz
cmpsb
cli
push
add
or
mov
sarb
subb
and
lcall
scas
sbb
push
sbb
jmp
adc
lret
test
nop
jnp
ret
add
xor
fs
mov
push
idivl
cmp
mov
repz
mov
or
push
inc
or
fs
mov
cmp
jb
cmp
sub
pop
testb
add
mov
mov
clc
cltd
adc
jae
jge
xchg
test
lds
test
mov
inc
pop
icebp
out
dec
and
sub
movl
cmp
into
test
and
ja
fstpt
push
hlt
sub
aaa
scas
leave
orb
in
sub
xlat
out
adc
mov
fildll
xor
xor
inc
mov
jmp
sub
cmp
enter
pop
push
jae
or
mov
jl
out
mov
popa
inc
repnz
adc
and
je
or
ret
mov
fstl
add
data16
dec
push
pop
data16
into
ficompl
xor
add
pop
jmp
and
xor
enter
jge
out
xchg
xchg
rcrb
pusha
adc
pop
push
mov
in
cmp
int
mov
sub
push
hlt
frstor
fcmovnu
mov
lcall
sbb
push
test
test
mov
aad
xchg
bound
push
lret
push
mov
pop
cmp
or
insl
shrl
inc
jl
cmp
outsl
mov
adc
movsl
mov
xor
lret
iret
mov
sbb
stc
sbb
mov
adc
jmp
leave
adc
jno
inc
jmp
xor
sarb
and
adc
or
das
pusha
ja
add
sbb
mov
or
rcll
xchg
test
xor
rol
mov
sbb
sub
xchg
jl
call
sbb
jns
bound
cmp
sub
or
cmpsl
ret
push
inc
xlat
jl
shlb
cmp
test
sub
jbe
dec
or
jle
pop
dec
icebp
jge
jne
scas
adc
mov
es
popf
nop
jge
test
xchg
cmpsb
mov
pop
dec
fs
jmp
add
shl
insb
ss
dec
ror
or
xor
push
or
xchg
adc
pop
js
sub
add
add
shlb
ss
data16
or
cmpsl
lea
sbb
push
shll
dec
cmp
cmc
sub
jnp
imul
fincstp
pop
mov
into
mov
xor
ljmp
ss
push
in
sbb
cmpsb
xchg
inc
xchg
xchg
loope
ret
bound
lds
sub
das
lret
fimuls
sbb
nop
adc
mov
xor
xchg
icebp
cld
shlb
fidivrs
lahf
cmp
add
jle
call
fcomps
adc
push
pop
cltd
ds
pop
mov
lcall
out
mov
ret
cmc
test
sbb
je
inc
sbb
mov
pop
mov
mov
lods
into
push
loope
push
or
jl,pt
clc
shll
or
lcall
aas
push
xchg
aam
xchg
test
notb
fs
jb
sbb
jae
push
push
mov
cmovg
outsl
pusha
xor
or
and
in
lods
popa
jbe
pusha
aad
mov
xchg
cmpsl
or
mov
and
cmp
xchg
ss
mov
sub
call
out
stos
add
sub
in
mov
arpl
inc
sbb
adc
xchg
push
cltd
js
dec
sahf
movsl
icebp
push
jge
scas
movsl
fisttpl
mov
insb
pop
push
xor
lds
repz
sub
flds
pop
imul
or
xchg
cmc
addl
out
or
sahf
fmull
es
ficompl
mov
sahf
inc
push
pop
dec
add
in
xlat
mov
lods
cmp
les
nop
mov
lods
mov
push
cld
sbb
mov
jecxz
push
aad
insb
out
inc
jne
add
lret
test
cld
outsb
aas
pop
cmpsl
outsl
cmp
jns
inc
fadds
mov
in
mov
aaa
popa
movsl
dec
push
test
sbb
enter
mov
repnz
pop
add
sti
mov
mov
cmpsb
push
adc
jb
jne
ljmp
or
fcmovb
pop
pop
iret
dec
fwait
popf
or
cld
xor
cmp
or
stos
aaa
xchg
mov
push
imulb
out
push
xor
add
and
fsubr
ret
mov
in
es
mov
iret
xor
pop
enter
push
mov
xor
pop
leave
bound
or
mov
pop
adc
cld
shr
push
xor
gs
and
and
push
sbb
pop
xchg
fwait
in
and
pop
out
mov
test
in
inc
jno
xadd
arpl
les
testl
cmc
icebp
rcll
jp
outsl
lods
in
mov
push
pop
pop
aad
dec
shll
xchg
xchg
inc
push
sbb
std
mov
mov
jmp
je
pop
sbb
movsl
pop
xor
jns
idiv
sti
roll
sbb
cmpsl
xor
idiv
xchg
jbe
rorb
jbe
fcmovnbe
push
enter
repnz
test
mov
test
xor
scas
push
mov
sbb
jne
push
fsubs
xor
adcl
sarb
pusha
nop
cmpsb
push
inc
jne
icebp
cwtl
mov
or
mov
ret
dec
lahf
adc
inc
aaa
mov
movsb
adc
xor
fsubrl
sub
pop
adc
cwtl
icebp
adc
lret
push
push
dec
dec
pop
add
mov
call
std
loope
dec
jno
scas
and
push
sbb
test
cmp
or
mov
sti
lds
dec
pop
mov
jg
sbb
fstl
int3
jno
testb
and
cmp
jno
popf
fists
mov
sarb
and
mov
loope
adcb
push
mov
push
repnz
loop
adc
add
xor
and
jb
bound
outsb
sbbb
mov
push
repnz
loop
adc
add
xor
and
jb
bound
insl
orb
mov
push
repnz
cli
adc
add
xor
and
jae
bound
inc
adc
data16
push
repnz
adc
test
xor
push
leave
fisubl
mov
stos
cmpl
loop
pushf
mov
sub
cmp
or
sbb
imul
dec
arpl
stos
cmpl
jmp
sti
ror
jecxz
repz
cmp
and
xor
jp
dec
and
stos
cmpl
jmp
sti
ror
jecxz
repz
jle
imul
cmp
adc
jae
sbb
mov
repnz
add
xor
cmp
jecxz
adc
add
mov
test
fsubs
aad
adc
dec
jmp
sti
sub
in
mov
jmp
in
cmc
and
mov
sbb
fcmovnbe
and
dec
sub
add
cs
sbb
sahf
into
push
lock
enter
stos
xchg
pushf
adc
pushf
mov
ret
xchg
insb
fisttpl
fdivs
arpl
sub
mov
sar
clc
arpl
insb
push
es
adc
fcmovnb
aaa
notb
sub
xor
nop
repz
scas
mov
pop
xchg
adc
fs
shlb
adc
adc
xor
push
sub
cmpl
jmp
sti
ror
jecxz
repz
cmp
or
sbb
imul
dec
arpl
into
in
fcoms
mov
pop
mov
js
pop
jne
and
and
popa
sub
fldl
fcmovb
mov
sahf
repz
jnp
data16
sbb
push
cmp
push
xor
int3
lret
int
scas
ret
sti
ror
jecxz
repz
cmp
or
sbb
imul
dec
arpl
stos
cmpl
jmp
sti
ror
jecxz
repz
cmp
or
sbb
imul
dec
arpl
stos
sbb
push
adc
hlt
cmp
or
popf
inc
xor
xor
jbe
inc
mov
push
ja
ljmp
ljmp
scas
test
orb
jmp
pop
sub
fs
clc
out
out
jg
repz
jecxz
inc
int3
fsts
dec
pop
clc
jnp
enter
addr16
insb
call
push
pop
insb
mov
fwait
or
test
jns
adc
mov
out
sub
fcmovnb
dec
xchg
xlat
out
inc
rcll
nop
pusha
cli
pop
sbb
insb
out
shrb
and
or
rcrb
fstps
sbb
jnp
es
mov
test
xchg
push
popl
mov
or
mov
pop
cmpsb
mov
call
lods
push
sub
test
imul
lret
jb
ljmp
stc
lods
ljmp
ja
push
out
fisubrs
xchg
sub
push
inc
mov
std
ljmp
sti
sar
and
fdivs
push
int
sbb
repnz
jg
mov
mov
xorb
xchg
lret
shll
sti
loop
inc
jmp
dec
and
xor
mov
test
aam
mov
rcl
in
les
les
pop
imul
mov
jbe
cmp
push
adc
mov
or
mov
xchg
cli
dec
test
dec
cwtl
ds
mov
add
inc
or
hlt
mov
lock
sub
mov
inc
xchg
xor
push
jge
mov
in
aad
pushw
jnp
lcall
cmp
cmc
xor
dec
aad
inc
cmpsl
sahf
mov
adc
dec
sub
dec
push
in
mov
pusha
popl
and
mov
fwait
cmp
fnstsw
fs
sbb
mov
bound
movb
or
mov
or
jg
push
xorl
push
notl
pop
pop
shrb
mov
xor
out
insl
adc
adc
jle
pop
lea
orl
pop
negb
rorb
cmpsl
icebp
push
mov
or
jmp
fstl
insl
sahf
imul
push
in
lahf
mov
xchg
ret
cmpb
sub
fs
fbstp
add
aaa
xor
xor
add
jmp
mov
xchg
bound
cmp
dec
call
jo
add
cmpl
rcl
mov
ljmp
rorb
xchg
sbbl
or
mov
popf
into
sbb
jge
pop
mov
divb
and
repz
cli
xor
mov
ds
sbb
push
movaps
gs
add
inc
xchg
leave
sub
xchg
jmp
jle
adc
lahf
push
call
out
lods
icebp
ss
movsl
push
imulb
jg
movsl
out
fisubrs
lods
lahf
dec
mov
cltd
lods
mov
mov
sti
push
stos
xchg
and
push
dec
pop
mov
xchg
mov
mov
bound
mov
push
stos
push
xchg
and
push
out
and
mov
mov
fsqrt
mov
popa
imul
hlt
ss
push
jecxz
insb
dec
shll
fbld
cmp
stos
lds
mov
mov
inc
add
xlat
inc
pop
pusha
ds
sbb
xchg
adc
pop
inc
sub
lret
out
imul
add
lahf
movb
inc
sbb
movb
cltd
lock
fstpt
mov
lods
sub
das
or
mov
sbb
dec
pop
mov
or
stc
pop
aam
cmp
out
loopne
add
pop
push
sbb
nop
xor
jmp
or
cmpsl
sbb
pop
add
inc
and
daa
pop
ret
fsubrs
pop
jne
lret
mov
sub
adc
pop
cmp
std
sbb
mov
mov
push
call
mov
lret
dec
sbb
mov
sahf
into
rcrb
in
or
sub
mov
jns
dec
xchg
dec
jb
mov
mov
dec
in
in
pushf
or
cli
xchg
cmp
aad
popf
xchg
int3
jb
pushf
lret
xor
je
scas
cmp
cmpsb
xchg
mov
insb
rcll
mov
mov
sbb
popf
fwait
mov
jne
jae
mov
cmpeqps
jg
pusha
outsb
lods
fcmovnbe
pop
pop
adc
cmpsb
push
push
arpl
icebp
cmp
outsb
shlb
cmp
xchg
fcmovb
and
ja
arpl
push
jle
push
scas
fdivrs
dec
aas
in
and
out
int3
fldt
fmuls
mov
movsl
or
in
fmuls
lea
mov
ljmp
jbe
pop
int3
cmp
adc
insl
mov
fwait
push
mov
jl
jge
jno
fsubl
stos
call
std
lods
add
xchg
jecxz
mov
fldenv
mul
pop
adc
fsubr
add
or
pop
nop
cmp
mov
mov
mul
shlb
mov
push
cmpsb
loopne
sub
push
test
test
jb
rcll
xchg
repnz
and
lahf
popa
call
pop
jns
dec
out
fs
enter
mov
popa
sub
loopne
xchg
push
hlt
pusha
out
add
sub
inc
stos
jmp
faddp
lret
xchg
or
hlt
in
movsl
sub
outsl
rep
inc
jp
mov
iret
xor
cld
fstpt
insl
xor
jg
pop
jae
mov
jbe
fsubs
call
add
or
lret
jb
add
sub
xor
and
lods
push
xchg
popa
inc
add
lea
mov
jp
call
add
out
bound
mov
pop
stos
sub
push
adcl
movsl
jmp
ss
mov
int
ljmp
hlt
push
ret
bound
xchg
dec
ret
pop
loopne
xchg
xor
dec
mov
sub
push
in
das
mov
adc
out
andl
and
push
and
jb
lea
inc
dec
sbb
sbb
cmp
lea
xchg
xor
jmp
outsb
popf
mov
jo
adc
jo
fwait
add
imul
sub
clc
mov
fidivrs
pop
dec
push
shr
dec
pop
push
inc
mov
mov
mov
sub
outsb
aad
fidivrl
clc
ret
jne
jae
mov
push
fwait
inc
je
stc
jle
mov
jl
jae
test
cmp
lret
ljmp
repnz
rcrb
repz
push
pop
adc
inc
shrl
loopne
ja
dec
push
dec
mov
and
insb
dec
xchg
xchg
jmp
lods
push
insl
subl
fildl
xor
inc
outsb
adcl
in
sti
jae
inc
cmp
stc
popf
cmp
sub
xchg
cmc
movb
or
std
lods
lret
cli
cmpb
inc
int3
out
mov
sbb
test
jmp
sahf
insl
movsl
movsb
das
data16
test
lods
call
jmp
pop
mov
push
mov
lock
mov
sbb
inc
fistpl
sbb
fisubrs
leave
adc
enter
rclb
mov
or
test
call
pop
fs
loope
or
mov
mov
inc
xlat
push
jb
adc
bound
cmc
out
xor
sub
shll
shl
jae
mov
pop
xchg
rolb
inc
mov
inc
xchg
and
add
loop
shl
sub
mov
mov
adc
cs
pop
dec
xchg
mov
out
or
or
push
dec
negl
sti
sbb
repnz
int3
jg
hlt
stc
and
ret
cmpsb
pop
stc
dec
lret
dec
mov
adc
jb
fwait
dec
sbb
adc
push
bound
rclb
test
xchg
ret
or
ret
fwait
dec
imul
pop
xchg
push
mov
jae
es
cli
pusha
or
cmpl
negl
inc
lret
jge
mov
sbb
xor
sbb
jb
xchg
arpl
mov
xor
push
add
mov
out
pop
jbe
adc
lcall
jae
loop
xchg
lods
movb
xchg
jo
fdecstp
pop
xchg
sub
add
mov
sarl
jmp
and
incb
cli
mov
int
test
cltd
xchg
les
add
pop
mov
mov
loopne
jle
mov
pop
es
scas
sub
pop
xor
cmpsb
adc
or
ret
pop
andl
orl
inc
test
aam
js
xchg
inc
push
push
xor
ss
js
clc
cli
stc
fsubrs
jp
ja
mov
adc
cmp
xlat
or
push
and
adc
js
hlt
push
pop
lods
push
mov
pop
mov
sbb
cmp
dec
sbb
scas
dec
push
in
jb
insb
sub
inc
jae
jg
js
push
or
sbb
int
aas
and
lret
aad
cmp
mov
clc
fs
pop
add
xor
bound
lods
dec
in
xchg
shll
movsl
jmp
sbb
mov
fnsave
shll
addb
inc
mov
repz
lcall
and
negb
push
jae
insb
jbe
mov
sahf
mov
repz
jnp
addl
cwtl
mov
push
lcall
xchg
sub
loop
out
xchg
ds
xchg
mov
loope
jno
inc
fsubrl
outsl
sbb
inc
jo
adc
into
inc
movsl
jnp
hlt
mov
adc
ss
sub
mov
inc
jne
out
xor
sub
insb
and
push
enter
push
js
mov
inc
arpl
fmul
mov
mov
push
rcrl
sbb
shrb
pop
stos
or
scas
stc
lea
das
xor
ja
cmpb
fcoms
and
aaa
adc
clc
scas
or
call
add
out
adc
lcall
mov
and
rclb
loope
aam
outsl
int3
mov
dec
xor
adc
aaa
dec
mov
jne
adc
das
es
adc
rcrb
ljmp
jecxz
dec
sbb
xchg
fcomip
mov
mov
into
sbb
inc
add
xchg
notl
push
in
jbe
mov
dec
jg
cmp
jl
loopne
inc
mov
or
sbb
pop
xor
dec
cltd
jne
push
cmpb
adc
and
scas
push
jno
sbb
pop
hlt
mov
jno
es
mov
inc
cmp
idiv
shll
xchg
xchg
lods
test
stc
and
xchg
lock
and
jecxz
adc
xchg
sub
cli
pop
jmp
negl
mov
xor
pushf
lahf
xor
jb
push
or
add
mov
adc
popl
stos
push
mov
mov
sub
bound
add
arpl
mov
add
sub
mov
imul
mov
and
push
aad
push
incb
mov
cmp
out
decb
aas
cmpsl
movsb
subb
pop
jb
sbb
test
inc
stc
pop
or
gs
adc
rol
addr16
jo
testl
sbb
pop
dec
lods
dec
or
xchg
jne
mov
inc
lods
xor
popf
and
lret
aad
daa
pushf
and
jecxz
stos
rorb
cmpsl
shll
into
sti
jae
test
in
inc
stos
nop
sbb
sub
jle,pn
repnz
fcom
adc
push
in
stos
mov
sub
xchg
cmpsl
dec
lea
push
mov
sarb
push
daa
sub
dec
jmp
push
xor
fmuls
lahf
js
adc
enter
mov
ret
sub
jg
inc
adc
out
hlt
ds
hlt
mov
sbb
fmull
pusha
jo
out
xlat
add
jo
xlat
sbb
rorl
aam
sub
cmp
sbb
cmp
sub
xchg
xlat
xchg
loopne
fsubp
add
insb
mov
mov
and
mov
mov
pop
imul
adc
popa
inc
push
pop
scas
xor
out
jne
inc
sbb
inc
stc
data16
stc
inc
add
cmpsl
stos
fcoml
stc
mov
stc
mov
cli
mov
ficomps
arpl
sti
cwtl
sbb
xorb
addr16
loopne
fstpl
mov
mov
ret
mov
or
rorb
jne
dec
add
lret
pop
sub
push
push
jo
push
fnstenv
andl
das
mov
cmp
movsl
add
fisttps
inc
rorb
cli
insl
adc
dec
cmp
xchg
std
shll
aad
sub
sub
std
and
das
pop
xchg
cs
and
or
ss
jge
shl
push
add
and
inc
xchg
addb
mov
test
cmc
inc
adc
sub
or
inc
pop
pop
fisttpl
hlt
mov
dec
mov
lret
xor
pop
lahf
out
daa
fsubs
cmpb
inc
mov
mov
cld
jns
sbb
arpl
test
and
adc
xchg
pushf
and
lret
jecxz
ss
jbe
jnp
hlt
jne
jns
adc
outsl
sub
inc
pop
jno
scas
lret
inc
push
mov
mov
mov
ds
das
ljmp
sub
sbb
xor
mov
cmp
lahf
or
lea
adc
mov
dec
and
adc
fldenv
dec
sahf
adc
xlat
ljmp
inc
push
fsubl
push
jle
dec
jbe
lods
insb
addr16
add
fdivrl
cmp
sbb
fsubl
cs
imul
movsl
inc
adc
lret
or
es
xor
sbb
adc
xor
bound
bound
movsl
mov
shlb
in
pop
fwait
pop
add
sub
test
pop
push
imul
pop
fbld
inc
nop
mov
mov
jmp
clc
enter
xchg
xorl
push
mov
mov
into
nop
adc
mov
xchg
shll
ret
inc
clc
insb
inc
dec
ja
cmp
xchg
cmp
test
xchg
xor
mov
or
lcall
push
push
test
or
hlt
imul
jp
adc
lods
or
std
outsb
pusha
mov
mov
or
xchg
adc
adc
sbb
rcll
data16
int3
and
xchg
push
sub
cmp
xor
xor
add
or
rcl
xor
jnp
mov
xor
pushf
cmc
jg
inc
pop
movsl
mov
inc
xchg
or
xorl
mov
outsb
inc
sahf
or
mov
fcoml
xchg
movsl
and
out
and
subl
add
add
loop
mov
out
cmp
sahf
pusha
mov
lods
push
add
imulb
fdivrl
ss
sbb
jo
push
das
aaa
jne
mov
pop
sbb
dec
sbb
cmp
addl
enter
lret
pop
mov
pushf
push
outsl
jecxz
repz
sar
scas
in
ljmp
outsb
cmp
cmpsl
stos
jp
push
xchg
inc
lret
inc
outsb
loop
leave
lahf
xchg
sbb
out
mov
mov
or
flds
in
scas
les
dec
pushf
add
lds
aas
mov
rolb
and
jb
fwait
xor
fldcw
mov
or
loop
pcmpgtw
jno
shr
fdivr
cmpl
outsl
cmp
repnz
mov
aas
es
imul
mov
daa
les
pop
or
popa
dec
sub
mov
cwtl
stc
imulb
and
arpl
sbb
and
arpl
movsl
data16
cmp
cmp
dec
add
repz
adc
push
xchg
dec
bound
in
stos
in
push
idiv
addb
jnp
cld
ss
lea
dec
pop
ljmp
inc
shll
fisttpl
sub
push
fchs
lret
cld
cli
sahf
faddl
pop
mov
out
daa
loop
nop
sti
cmp
mov
mov
cmpsl
out
jne
push
popf
jb
fs
sbb
add
jae
mov
mov
cwtl
push
mov
fs
lock
xchg
leave
inc
dec
adc
rol
pusha
sub
xorb
sub
push
mov
addl
scas
pop
xor
stc
jl
jns
dec
sbbl
push
sarl
shl
mov
sarl
enter
xchg
sbb
sbbl
sbb
shr
in
dec
dec
fdivs
mov
adc
mov
adc
adc
lcall
mov
inc
mov
addr16
lods
popw
jmp
or
daa
pusha
iret
cmpsl
cmp
jmp
fnsave
jb
cwtl
in
mov
lcall
pop
pop
xlat
iret
and
sahf
enter
dec
hlt
shll
shll
mov
add
adc
test
fs
int3
push
jo
incl
inc
rcll
lret
xor
mov
fwait
nop
xor
ja
xor
pushf
mov
sbb
adc
add
cmpsb
pop
dec
and
jl
pop
sbb
mov
out
jmp
xor
add
sub
int
rcrb
adc
iret
or
jg
inc
outsl
popa
cli
pushf
or
lcall
mov
icebp
jge
cltd
aad
push
mov
push
repnz
mov
dec
test
testl
fisubrl
and
dec
imul
jo
sbb
add
cmp
loopne
xchg
test
sub
enter
out
inc
lds
enter
in
dec
xchg
jle
mov
scas
mov
loopne
aaa
hlt
cmpsb
jl
adc
pusha
mov
gs
loop
push
sarb
std
mov
mov
cmp
cmpsb
into
mov
xor
stos
ret
sbb
fcoms
xchg
sbb
pusha
rclb
adc
add
dec
dec
mov
faddl
insb
sarb
outsl
ja
mov
mov
cwtl
pop
mov
mov
shr
adc
test
jo
das
in
dec
adc
test
xor
sahf
sub
adc
or
repz
cmc
or
sub
jb
fcmovb
test
pop
or
addps
and
xchg
inc
push
in
add
ds
imul
cli
sarl
je
movsb
cwtl
sbb
xchg
aam
adc
int3
scas
sbb
imul
nop
mov
push
push
mov
aas
insb
cmp
dec
jle
dec
adc
sbb
enter
cmp
jecxz
es
pop
push
psubsb
sbb
cmpsl
lret
push
jno
mov
ss
hlt
dec
jae
insl
push
jns
mov
call
cmp
into
loope
jl
fstpl
imul
xor
cld
cmp
dec
adc
arpl
add
mov
fdivl
and
push
aam
inc
repz
mov
push
fwait
test
push
std
lret
outsl
mov
fcomps
bound
movsl
jne
loop
stos
cmpsb
clc
arpl
sbb
repnz
pop
sub
mov
imul
insb
movsl
jmp
jg
dec
lods
sub
cld
add
repnz
jbe
enter
imul
aad
jg
mov
dec
mov
and
idivl
xchg
pop
xchg
pusha
xor
or
jmp
lret
cmp
or
jge
inc
push
sahf
jb
push
pop
add
jg
es
push
xchg
sbb
pop
cmp
mov
lcall
fildl
inc
inc
cmp
lret
inc
xor
lret
adc
adc
adc
inc
nop
gs
inc
daa
lea
dec
pop
xchg
sti
jno
or
and
mov
mov
push
cmp
popa
movsb
xor
push
jne
xor
mov
jle
or
rcll
out
xchg
jo
shlb
cmpsl
xor
imul
test
icebp
out
mov
shrb
jmp
lahf
sbb
aaa
inc
mov
push
sub
cmpl
rorl
push
mov
xor
xor
lret
inc
pop
sbb
dec
data16
lahf
addr16
mov
aam
cmpsl
outsb
jecxz
in
xor
loop
dec
mov
data16
adc
jmp
test
push
int3
movsb
mov
mov
cltd
mov
cmp
sbb
mov
jnp
or
rcr
ret
mov
jmp
ja
xchg
dec
mov
and
sub
xchg
mov
fwait
mov
ret
sti
ror
jecxz
repz
cmp
or
sbb
imul
dec
arpl
stos
cmpl
jmp
sti
ror
jecxz
repz
cmp
or
sbb
imul
dec
arpl
stos
cmpl
jmp
cli
push
lret
jecxz
repz
sbb
imul
dec
arpl
stos
cmpl
jmp
sti
rorl
pop
repz
les
sbb
rep
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
mov
push
hlt
les
aam
lock
ficompl
or
inc
scas
push
fbld
je
add
adc
in
hlt
aas
les
aam
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
adc
in
hlt
les
aam
movsb
dec
mov
test
sahf
pop
mov
fbstp
push
mov
popa
adcl
mov
outsb
jne
xchg
pop
js
and
and
test
in
xorl
inc
dec
hlt
mov
pushf
jmp
jno
out
and
in
mov
fwait
icebp
mov
xor
pop
repz
cmc
sbbl
sahf
movsb
fimuls
pusha
and
pop
jge
stos
adc
push
pop
movsl
bound
push
dec
popa
mov
ja
fs
cli
in
jecxz
icebp
or
cmp
mov
inc
dec
jle
outsb
ret
sti
jne
mov
cmpsb
jno
add
push
or
lds
mov
dec
test
popa
fwait
pop
gs
inc
and
into
sar
out
adc
in
hlt
les
aam
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
push
push
dec
daa
push
andb
lret
sub
cmp
or
testb
sbb
stos
dec
orb
lcall
les
cmp
sub
int3
and
sbb
adc
cmp
jno
jp
mov
sbbb
mov
jle
outsb
xchg
sahf
mov
scas
push
fisubs
xor
add
adc
in
hlt
les
aam
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
adc
in
loope
ss
sub
rcrl
mov
pop
repz
or
rcr
icebp
and
xchg
mov
scas
aam
mov
int3
jmp
dec
divb
out
xchg
dec
fdivrs
sbb
outsb
int3
mov
add
call
adc
outsl
pop
bound
adc
mov
fisttps
lret
lcall
addl
jecxz
movsl
mov
sub
in
jecxz
mov
rcrb
mov
xor
dec
inc
nop
pop
fnstcw
sbb
fidivs
fstpt
xor
lods
test
iret
push
sub
sti
rcrl
loop
cmp
add
fildl
push
negl
repz
push
cmc
xchg
adc
out
das
push
sbb
cmp
inc
xorb
pusha
cmp
jp
lcall
jle
cmp
popa
sub
loope
in
loope
and
aad
scas
sbb
iret
xor
mov
test
lahf
sti
pop
add
aam
fldcw
xchg
push
ret
add
jns
lods
mov
cmp
rcrb
or
pushf
fwait
mov
xor
mov
sbb
push
add
sub
xor
loopne
push
cmc
aaa
sub
mov
imul
push
leave
jo
mov
lret
cltd
sbb
adc
call
mov
push
enter
mov
adc
mov
jmp
fcmovu
and
cmp
in
data16
addr16
cmp
jno
adc
cltd
dec
or
andl
xchg
cmpsl
jns
nop
lret
aaa
push
xor
mov
sbb
sbb
cli
repz
sbb
and
clc
dec
in
fimuls
mov
int
inc
dec
movsl
int3
adc
lret
push
rcrb
pop
mov
or
enter
and
lret
adc
insl
inc
pushf
or
pop
daa
mov
adc
scas
lea
fsubp
xor
imull
mov
aas
mov
roll
jmp
stc
mov
out
sti
pushf
mov
repz
xlat
in
cmp
xchg
js
xchg
shlb
cltd
inc
ja
jb
sub
rorl
jae
popa
jb
xchg
lret
insb
fwait
dec
dec
lods
mov
test
les
xlat
jno
xchg
andl
insl
repnz
sub
inc
xchg
sarl
xor
push
mov
sbb
and
inc
mov
jae
imul
stos
insb
fldt
jp
mov
lock
int3
cmc
icebp
repnz
fsubl
and
pop
add
lods
xchg
aaa
addr16
in
scas
fimull
es
cld
xor
movb
dec
adc
mov
jne
xor
sub
leave
insl
jb
push
or
inc
cmp
sub
test
dec
addr16
pop
pop
pop
or
rclb
cld
push
dec
pop
mov
out
jge
daa
jl
fwait
loop
ret
sub
ljmp
cmp
xchg
jmp
scas
insb
lcall
xor
add
addr16
fdivrl
jp
cli
insl
neg
mov
push
push
shll
add
mov
sbb
cmp
mov
push
or
ret
sbb
cs
cwtl
outsb
nop
sub
xor
rol
ss
cli
testl
dec
adcl
jnp
cmc
xor
daa
mov
sahf
ss
inc
inc
loope
lahf
mov
mov
cmpb
jge
push
insl
test
jle
xorl
scas
sbb
inc
shll
sub
ljmp
jno
popf
test
leave
icebp
outsb
sbb
jb
test
cmc
mov
scas
adc
mov
pop
inc
xchg
insb
nop
es
pop
push
xorb
mov
cmp
ret
xor
sti
lcall
fxch
ja
mov
stc
and
dec
inc
dec
pop
stos
gs
shl
in
ss
jmp
in
outsl
and
aaa
adc
adcb
xor
or
movsl
jbe
mov
fistpll
in
and
loope
mov
movsb
pop
and
test
gs
loopne
xchg
mov
adc
sub
dec
xlat
mov
out
outsb
xchg
mov
jle
in
cli
push
cwtl
loopne
lret
lods
pop
xchg
mov
scas
jo
cli
lods
cli
pop
mov
aas
sarb
idivl
dec
mov
movsl
adc
mov
cwtl
jae
mov
imul
dec
mov
cmc
xchg
xchg
pushf
int3
dec
fmull
pusha
jno
repz
outsb
lea
adc
scas
sbb
divl
call
add
je
mov
sub
into
addl
add
ret
dec
cmpsb
and
inc
loopne
or
and
pusha
mov
sub
imulb
xchg
dec
arpl
out
push
cmp
xchg
cmpsb
push
scas
xor
xor
out
cs
pop
imul
sbb
mov
jo
add
and
lds
repz
jg
or
stos
lret
fisttpll
dec
xor
ss
movsb
dec
jg
test
sbb
add
xchg
mov
mov
clc
push
imul
mov
xor
iret
movsl
mov
iret
mov
lea
sbb
lahf
jge
or
daa
dec
inc
push
std
call
push
fcoml
inc
mov
ret
int3
mov
out
jb
jns
repz
pop
dec
test
xchg
lods
das
std
sbb
push
sti
cmpsb
test
adc
xlat
xchg
insb
loop
ficomps
or
jb
sub
call
xor
jae
sub
add
arpl
lods
mov
pop
lea
add
cmp
and
dec
leave
sbb
hlt
cs
xchg
repnz
mov
ds
xchg
out
lea
dec
dec
loop
push
dec
pop
scas
lods
xchg
or
jae
repz
lret
jmp
arpl
je
fdivrs
outsb
cs
inc
jnp
loopne
add
fstps
lock
in
sub
push
mov
adc
adc
lods
pop
insl
push
sti
mov
std
push
cmp
push
xchg
push
addr16
stos
stc
and
sti
or
add
and
in
clc
sarl
and
out
aam
ret
shrl
pop
insl
repz
lods
insl
ds
sti
sbb
test
out
popf
imul
ficompl
xchg
in
xor
popa
bound
xchg
adc
aad
lods
adc
xchg
fmull
fs
fcomip
mov
inc
jp
jp
xor
lea
mov
pop
mov
xchg
aam
mov
lcall
stc
fldl
dec
test
ljmp
addr16
mov
repz
xchg
aam
test
out
sub
cltd
mov
xor
mov
xor
adc
pop
mov
je
or
xlat
fstpt
xchg
adc
or
addr16
push
jns
xchg
repnz
sbb
dec
add
sub
aas
push
test
rolb
divb
addb
in
fwait
sub
xchg
cmp
lods
lock
movsb
stos
jnp
and
jno
iret
mov
mov
bound
nop
mov
inc
pop
add
inc
xor
mov
sub
sub
xchg
sbb
loop
or
xchg
cmp
rclw
mov
jb
fwait
mov
xchg
shr
mov
push
mov
xchg
fstpt
dec
add
outsl
xor
sbb
cmp
dec
adc
dec
mov
dec
stos
loope
aas
hlt
cmp
testb
sbb
cmp
dec
mov
or
mov
movl
hlt
cmp
popf
pop
push
xchg
mov
outsl
jl
dec
dec
jp
lret
mov
adc
sbb
hlt
popa
adc
add
lock
push
pop
mov
push
sahf
lods
dec
lods
cmpsl
std
mov
sbb
lock
out
pop
mov
movsb
sbb
fadds
insl
rorb
and
daa
js
daa
push
jo
aad
sbb
lea
cld
push
subl
push
push
and
movsb
pushf
jne,pt
subb
jb
xchg
outsl
push
jp
xor
sub
sarl
out
sub
iret
xchg
fwait
sub
add
ret
mov
adc
jb
fs
mov
or
xor
add
push
xor
dec
out
dec
mov
xor
cmpsb
pop
cmpsb
xorl
in
sub
cmp
xor
test
xchg
shlb
sub
jmp
jnp
cmpsl
popf
xchg
in
jp
inc
inc
stos
aam
sub
addr16
or
mov
push
ja
je
fldl
and
pop
in
pop
push
xor
or
pop
stos
pusha
lods
inc
dec
jg
adc
or
lds
jbe
ja
shrl
jo
rol
cmp
cmp
popf
adc
sub
inc
outsl
mov
hlt
gs
jbe
xor
fldenv
add
adc
xchg
dec
push
ret
sbb
push
lods
mov
cmp
std
adc
and
xor
std
mov
xchg
insb
repnz
test
mov
dec
inc
cmp
dec
fldt
sahf
shl
and
int3
mov
push
movsl
push
cmp
ss
ja
cli
push
and
xchg
fldt
mov
imul
jno
dec
aad
inc
inc
mov
jge
ret
cmc
cmc
pushf
pop
mov
pushf
and
mov
dec
cmp
or
repnz
and
cmp
nop
ret
arpl
scas
jae
adcb
push
push
sbb
nop
push
fnsave
inc
jle
mov
fadd
mov
xor
or
mov
sbb
sahf
add
dec
or
push
adc
inc
or
jl
sbbb
mov
or
clc
hlt
in
lea
daa
sub
sbb
je
mov
es
adc
sub
jl
aaa
test
mov
inc
sbb
sub
subl
cmpsl
jb
ljmp
hlt
lret
int
rep
xchg
std
mov
pop
test
jmp
sbb
mov
jg
xchg
xor
mov
sub
sub
dec
jle
loopne
adc
pop
enter
mov
and
fldenv
negl
cmpsb
adc
xlat
mov
push
cs
adc
subl
iret
mov
adc
dec
sbb
imul
add
inc
mov
mov
rorl
neg
or
fwait
mov
cmp
sub
mov
mov
aas
dec
inc
pop
xor
fdivs
movsb
dec
fs
int3
jnp
sub
ret
je
mov
mov
cmp
jg
adc
lods
ret
adc
mov
nop
adc
pop
rolb
sbbb
ret
clc
cmc
clc
fisubl
imul
sbb
mov
ss
aas
mov
mov
daa
fdivrs
lret
mov
data16
xchg
xor
fsubrs
push
push
mov
inc
push
aam
lock
call
aas
xchg
pop
icebp
jo
ss
aad
dec
out
dec
xor
scas
das
mov
sbb
aam
inc
pop
out
or
fildll
adc
sbb
adc
mov
test
lret
lcall
aad
mov
cmp
cli
cli
aaa
push
mov
add
les
call
scas
js
push
and
loop
bound
mov
push
aad
mov
add
aam
xchg
jecxz
movsl
out
mov
adc
and
jl
sbb
ljmp
xor
out
hlt
jbe
mov
push
mov
call
adc
les
in
push
jnp
sub
xor
sbb
xchg
mov
ficoms
out
xchg
push
sbb
push
jmp
loop
xchg
add
or
cmpsl
mov
push
out
hlt
dec
loop
sbb
clc
mov
test
push
roll
flds
adc
in
imul
xchg
stos
sbb
stos
stos
loop
jae
and
or
add
mov
push
sub
xor
rol
rcl
movsb
mov
xchg
cmp
test
cld
vmaxsd
popa
pop
mov
jne
cwtl
mov
jge
cmp
inc
dec
mov
insl
pop
cmp
xor
xchg
sub
jae
and
roll
push
push
push
addr16
das
sbb
or
call
hlt
pop
es
clc
cmp
xchg
rolb
ljmp
push
int3
sub
repz
fildl
xor
push
testb
adc
mov
sub
inc
inc
jnp
aas
sub
pop
lahf
rorb
push
pop
iret
cli
stc
pop
dec
sahf
je
bound
mov
cmp
push
pop
jg
and
popa
movsl
lcall
xor
fists
movups
mov
push
pop
out
jbe
shll
shll
jecxz
cmpb
pop
orb
add
jecxz
ret
mov
or
add
cli
push
andl
call
push
loopne
or
stos
inc
mov
jecxz
adc
xchg
es
and
sbb
push
mov
cmp
loope
mov
insb
xchg
mov
pop
jge
clc
pop
sbb
pop
push
push
pop
xchg
jne
inc
hlt
dec
pusha
sbb
pop
pop
stc
pop
mov
jmp
idiv
xor
lret
fstps
imul
fs
dec
jmp
ds
sbb
stc
mov
dec
mov
jbe
dec
cmp
mov
push
test
dec
fnstcw
ret
daa
sub
stc
dec
sub
ds
sti
and
ror
adc
push
pop
mov
andl
mov
dec
adc
mov
sub
xchg
sub
dec
mov
scas
mov
lock
ss
fidivrs
adc
out
mov
push
mulb
scas
test
stos
mov
xor
xchg
inc
pop
inc
loop
push
roll
sbb
sbb
and
push
mov
adc
sub
loope
mov
add
push
sbb
stos
aaa
or
test
ja
inc
mov
into
jnp
iret
mov
push
pop
xor
xor
cs
pop
imul
repz
cmpsb
inc
add
loopne
push
mov
dec
es
testb
out
mov
loope
cmpsl
ja
xchg
sahf
mov
arpl
or
std
in
out
jne
adc
fwait
sbb
inc
lock
pusha
dec
add
popa
icebp
adc
xorb
aad
ds
xor
adc
xor
jo
insb
push
push
into
sub
lock
in
rclb
dec
gs
sub
pop
push
xor
push
cmp
js
mov
sub
ds
mov
or
sbb
push
js
cmpsl
mov
mov
mov
mov
lret
cmp
mov
lea
xor
xor
hlt
push
jmp
mov
cwtl
test
les
mov
dec
ja
es
inc
inc
pop
cmpsb
in
or
mov
cld
ror
inc
or
insb
or
lret
andb
pop
jge
hlt
mov
jecxz
xchg
into
inc
xchg
jle
sbb
sarl
lds
mov
stos
fsubrs
pop
pop
mov
xorl
add
jmp
mov
repz
negl
and
fsub
std
les
jnp
and
int3
icebp
push
call
in
mov
push
lret
xor
xchg
xchg
test
loop
mov
push
loop
cmp
xor
or
cs
push
sub
xchg
sbb
sbb
stos
jmp
lds
sbb
sti
xchg
nop
mov
push
xor
stos
adc
add
sub
push
or
mov
aam
add
pop
push
insb
pop
test
inc
adc
insl
js
pop
into
negl
in
push
xchg
jno
aad
adc
dec
and
incb
cmpsb
push
pop
aaa
out
add
mov
mov
call
xor
or
stos
add
xchg
mov
leave
or
iret
push
js
bound
fstpl
popa
adc
pop
jb
out
fucomip
lret
loopne
hlt
sub
mov
outsb
int3
sub
movsl
hlt
add
in
je
enter
stc
cmp
sbb
jp
mov
enter
into
mov
jmp
addr16
and
jbe
mov
jno
push
mov
inc
mov
sar
and
dec
add
sbb
push
mov
fisubs
pop
inc
pop
shlb
mov
out
sti
adcb
out
mov
out
pop
cmp
sbb
mov
jmp
xor
divl
pop
push
adc
dec
xchg
rcrl
mov
dec
mov
js
out
push
in
mov
test
outsb
aaa
jb
rorl
push
sbb
dec
ljmp
push
jle
ljmp
imul
loopne
sub
outsl
inc
and
mov
mov
cmpb
xchg
aas
icebp
mov
insb
sbb
mov
pop
xorl
les
ffree
jo
repnz
jae
enter
cmpl
lea
mov
lahf
aas
mov
mov
aam
sar
cmp
jecxz
enter
dec
fldcw
out
xchg
sub
stc
mov
add
jle
and
cmc
adc
repnz
sbb
cli
insb
in
int
enter
push
jo
jl
mov
adc
pop
fwait
xorl
jle
aad
lret
mov
mov
dec
out
jmp
sbb
lcall
adc
cmp
cmp
jp
test
jae
repz
dec
push
push
lret
xchg
cli
divl
aad
fisttpll
push
xor
rorb
pop
gs
outsl
adc
sub
dec
and
adc
notl
pop
fsubr
jae
clc
loopne
mov
loope
sub
pop
sub
mov
hlt
add
xor
xchg
test
inc
sub
pop
fwait
aaa
sub
shr
bound
inc
fadd
mov
xor
addl
or
inc
cmp
push
ret
push
aam
mov
mov
dec
stos
fs
jne
lea
scas
jnp
mov
pop
sub
add
cmp
nop
mov
sub
aam
inc
jg
sarb
push
mov
pop
cs
fisttpl
or
icebp
ja
sbb
loop
shlb
mov
mov
push
addb
jge
les
subb
fisubl
xchg
cmp
faddl
cmp
sub
movsb
inc
pxor
push
jp
hlt
popf
inc
mov
xor
push
ljmp
push
xor
jle
stc
stos
pushf
pushl
outsl
movsl
xor
repz
or
je
cmp
aas
sub
push
fnsave
pop
popa
mov
jmp
bnd
add
loope
push
push
subl
push
mov
pop
cs
jne
shr
movsb
pop
add
movsb
pop
and
je
daa
mov
lock
outsb
cltd
nop
dec
push
xor
dec
inc
and
mov
adc
pop
in
jns
test
imul
xchg
pop
xchg
push
shrl
icebp
jge
icebp
insl
notb
pop
mov
test
jae
mov
nop
les
xchg
test
fdivrs
jg
dec
in
mov
or
movsl
or
cmp
inc
popa
rcrb
stos
xor
dec
repz
push
lds
movsb
inc
cmpsl
cmp
insl
xchg
pcmpgtb
and
int3
or
add
clc
clc
stos
or
xchg
lods
int3
xchg
push
add
dec
dec
mov
sub
fwait
out
movq
adc
sbb
sub
pop
mov
mov
mov
out
lods
xchg
movsl
mov
sbb
aaa
adc
xchg
xor
mov
mov
rcrl
cwtl
cmp
cli
and
inc
enter
insb
out
std
pop
imul
cmp
test
dec
and
hlt
add
pop
je
fidivl
fwait
in
cmp
mov
ja
or
mov
sarb
inc
jecxz
ss
jmp
pushf
jmp
inc
out
xor
movsb
pop
stos
cmp
aam
lds
jmp
retw
inc
es
sub
push
lods
fimuls
jg
rcll
xchg
mov
mov
lock
in
mov
jo
add
ja
push
lods
insb
popa
dec
mov
mov
pop
ret
andb
jae
mov
insb
adc
inc
inc
push
dec
and
ficompl
mov
jo
fsubr
loope
xor
ret
inc
gs
mov
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
adc
in
hlt
les
aam
movsb
dec
mov
test
sahf
mov
scas
push
fisubs
xor
add
adc
loopne
hlt
les
aad
movsb
dec
mov
test
sahf
mov
inc
scas
push
fisubs
out
adc
in
hlt
aas
les
rcrb
dec
xor
add
imul
scas
and
sti
adc
jns
imul
hlt
pop
pop
cmp
add
fldcw
test
sti
jns
imul
cmp
pop
sbb
add
mov
fldcw
test
sti
jns
imul
cmp
pop
sbb
jnp
mov
mov
mov
test
mov
js
push
pop
inc
and
pop
adc
icebp
lock
push
or
std
mov
lret
enter
xor
xchg
add
dec
sub
out
hlt
jno
ljmp
mov
test
into
jmp
stos
sub
popa
push
pop
inc
cmp
mov
pop
fistl
fnstsw
jmp
outsb
mov
dec
imul
push
call
or
daa
das
mov
and
xchg
dec
mov
ret
sub
lcall
xlat
pop
push
mov
ljmp
add
lcall
xchg
xchg
arpl
ds
lcall
jmp
jmp
out
mov
imul
cmp
pop
sbb
jnp
mov
fldcw
test
xchg
cmp
sbb
cmp
cs
xor
or
stc
repnz
mov
xchg
iret
mov
outsb
or
cmp
and
pop
popa
add
pushf
sarb
mov
mov
imul
sub
imul
stc
mov
fldcw
test
sti
jns
imul
cmp
pop
sbb
jnp
mov
fldcw
test
sti
jns
dec
jae
data16
aas
sub
fadds
lock
push
orb
leave
cs
adc
lret
jg
jnp
xchg
imul
nop
popf
sub
adc
pop
clc
mov
cmpb
imull
jge
mov
repz
push
in
sar
sbb
rorl
dec
pop
mov
cmp
subl
mov
mov
stos
stos
stos
rcll
sahf
cld
pop
xlat
adc
or
jecxz
lar
xor
jno
mov
dec
lret
inc
lret
cmp
adc
jl
out
add
push
pushl
pop
xchg
dec
shlb
sbb
sbb
insb
out
jb
jno
out
cmpsb
xchg
inc
xor
add
fcmovu
loop
cmpl
mov
inc
xchg
test
shll
mov
lret
ja
adc
roll
push
cmova
mov
stos
and
lds
add
movsl
insb
fwait
je
add
fmulp
test
xor
pop
dec
mov
orb
rcrl
jecxz
and
pusha
inc
xor
mov
push
xor
push
sub
push
cmp
xchg
push
adc
scas
ret
mov
in
inc
adc
mov
mov
dec
test
int3
mov
in
loope
push
pop
int3
jge
push
cmp
stos
ja
push
xor
adc
mov
and
cmpsb
stos
dec
or
mov
fcompl
outsl
mov
loop
test
add
or
addr16
or
je
push
mov
fwait
es
imul
fnstenv
mov
ja
mov
push
enter
loope
and
fsubrl
ss
aam
jge
imul
mov
fwait
std
add
aaa
aaa
nop
loope
rcrb
mov
sub
loop
lea
mov
fistpl
jae
mov
frstor
test
xor
rcrl
adc
hlt
add
cmp
pop
dec
xor
xor
es
cmpsl
lret
mov
scas
xor
xor
ret
lods
add
lea
cmp
adc
xlat
pusha
sub
pop
dec
or
add
pop
cmc
jo
cmc
movsl
das
mov
pop
bound
in
stc
mov
cli
sub
es
lret
imul
lcall
dec
adc
push
push
mov
jne
xor
push
iret
jns
shll
jbe
aad
cmpsl
mov
fisubrl
mov
test
out
pushf
popf
mov
clc
int
fistpll
cmpsb
out
lret
shlb
cmp
cmpsl
pop
add
in
test
push
jbe
sub
orb
data16
adc
inc
scas
cld
sar
mov
xor
pop
lcall
jo
popf
mov
push
pushf
inc
cwtl
ret
adc
xor
adc
xor
stc
leave
js
inc
mov
imul
fwait
stos
sti
dec
add
fcmovne
stc
mov
or
fiaddl
dec
shll
cmpsb
nop
cmp
fldt
jo
jnp
xor
jg
sbb
jno
and
mov
or
pop
push
pop
sbb
stos
jl
or
lcall
loope
sti
popf
xor
mov
aam
fstl
inc
nop
insl
xlat
mov
enter
dec
push
jle
pop
mov
push
mov
test
push
jecxz
ret
cli
insb
loope
or
hlt
sarb
stos
and
cmp
push
in
lret
mov
mov
iret
lahf
inc
sbb
enter
dec
popa
adc
xorl
cmp
mov
arpl
rorb
fs
pushf
mov
and
add
mov
movb
jmp
cmc
add
dec
std
mov
xchg
ds
cmp
ret
mov
mov
ja
pop
lods
dec
cs
sbb
aas
mov
je
push
push
dec
sbb
jle
xor
or
mov
inc
cmp
lock
adc
push
fdivrl
lock
pop
xchg
cmp
loopne
fs
sub
ljmp
outsl
icebp
adc
cltd
lret
jl
pop
sbb
cs
loop
ja
pop
repnz
hlt
aaa
push
pusha
lret
sub
add
sub
repz
aad
mov
xchg
mov
sahf
pop
or
mov
push
pop
push
bswap
pop
adcb
mov
cli
ficoml
or
or
das
jb
mov
add
and
xchg
mov
mov
add
jb
or
adc
mov
lods
iret
sub
push
and
loopne
ljmp
repnz
iret
mov
pop
sar
inc
das
inc
enter
inc
sbb
cld
stc
adc
notb
dec
inc
pop
and
jae
jae
cmp
adc
pop
stos
cld
shr
in
call
pop
add
jbe
inc
in
jge
scas
rcl
jo
pop
sub
sub
dec
js
xor
fisttpl
and
int
sbb
sti
movsl
and
mov
mov
call
sub
mov
pop
jnp
push
and
cltd
or
das
aaa
les
pop
iret
xchg
stos
in
pop
jp
pop
je
out
xor
lods
fs
jb
lds
roll
pop
mov
aam
cmc
jne
or
sbb
ljmp
dec
mov
movsb
push
mov
sbb
fsts
xor
inc
data16
into
xlat
popf
aaa
data16
out
jge
lret
xchg
mov
or
dec
adc
cltd
andl
ljmp
mov
aam
mov
jl
add
clc
push
sub
mov
sbb
jl
xor
add
jno
jno
mov
xor
out
xchg
test
stc
out
sbb
dec
add
xor
js
pop
mov
cwtl
hlt
mov
or
clc
pop
mov
inc
mov
xor
mov
adc
andb
cmp
xlat
sub
push
xorb
outsb
fistl
loop
mov
leave
inc
lods
sbb
fdivrp
leave
jge
ret
fs
jp
pop
cli
or
mov
and
xor
cli
jnp
cmp
lret
xor
xchg
and
add
into
jnp
jecxz
mov
fst
dec
cmp
adc
jb
push
xor
xor
and
jg
mov
incl
dec
cmpsb
fwait
dec
push
out
lcall
cltd
pop
jne
mov
icebp
rorb
out
ss
inc
dec
out
pop
inc
leave
xor
scas
adc
inc
orl
sbb
cltd
stc
fidivrs
fcomp
das
jns
xor
dec
xchg
sbb
hlt
test
fimull
add
lds
fs
out
mov
xchg
jmp
pop
mov
adc
jo
adc
mov
lret
push
and
add
dec
push
sbb
aaa
sbb
pop
pop
ficomps
fisttpl
xor
pusha
mov
pop
cmc
std
test
mov
out
sub
mov
and
rcr
dec
pop
push
sub
mov
cmp
iret
inc
sub
sbb
dec
jno
mov
push
data16
pop
mov
fs
jne
xor
jnp
mov
or
xor
nop
decb
push
outsb
xor
or
mov
mov
fnstcw
aam
mov
pop
sbb
jne
sub
sub
xchg
lret
popa
aam
cmp
push
xchg
leave
imul
loopne
ljmp
pop
bound
mov
andb
or
inc
insb
and
insb
adc
xchg
pop
xor
test
out
lret
test
jno
jno
out
sub
fildl
js
test
loope
inc
stos
mov
shll
loop
mov
bound
sbb
xchg
xor
sub
mov
cli
shrl
jecxz
add
dec
leave
mov
or
cmp
loopne
orb
and
mov
loop
add
xor
pop
adc
ret
push
mov
shl
test
sahf
add
jnp
xchg
adc
loop
daa
and
xor
imul
ss
out
nopl
push
adc
mov
sub
jl
loop
out
pop
aad
cld
mov
and
addr16
mov
push
sbb
loope
int
iret
adc
test
push
pusha
mov
fldl
fidivrs
cld
cmpb
adc
pushf
xchg
sub
fdivr
cmpsl
sub
sbb
xchg
jle
ret
or
lret
es
push
push
subl
stos
inc
jne
mov
mov
inc
sahf
jns
repnz
shr
cmp
mov
mov
adc
mov
cmp
out
arpl
push
cmpsl
divb
divl
xchg
repz
jmp
xchg
xlat
jbe
push
icebp
loop
inc
jo
aam
sub
jle
stos
rcrb
jnp
loop
push
mov
dec
mov
jge
clc
sahf
sti
push
test
aad
inc
jg
in
mov
in
loop
std
rorb
cld
subb
pop
push
test
jmp
int3
fmull
push
cmp
int
mov
and
pop
pop
mov
push
and
jle
xchg
xchg
or
pop
and
xor
scas
dec
or
push
je
mov
in
mov
pop
cmp
mov
lock
xchg
or
dec
push
dec
mov
mov
divb
cwtl
lahf
negb
and
mov
loop
loope
xor
rcll
mov
inc
mov
outsl
mov
push
jecxz
stc
rorb
lds
pop
dec
imul
push
pop
std
mov
cmp
es
mov
xchg
stos
aas
out
dec
js
push
add
test
scas
fisttpll
das
ljmp
ljmp
out
jge
xlat
rcll
outsb
popa
adc
roll
jbe
arpl
push
mov
jmp
inc
test
or
cmp
pop
loope
jno
push
push
lods
imul
mov
fdivs
test
add
ret
fmul
jg
add
dec
test
dec
cli
mov
test
add
gs
lea
adcb
incl
outsb
cld
sbb
xchg
xchg
inc
sub
in
out
xlat
inc
ds
mov
addr16
std
dec
add
mov
das
cmp
mov
push
or
pop
pushf
movsb
daa
rcr
pop
mov
lahf
je
fnstcw
lds
psrlw
xor
enter
lahf
mov
push
fldenv
push
mov
jo
dec
mov
sub
push
jne
xor
enter
cmp
subl
add
test
mov
arpl
ljmp
xchg
xor
scas
adc
mov
addb
jg
data16
xor
adc
dec
inc
lods
or
iret
and
jp
pop
pop
xor
in
or
adc
dec
pusha
lds
in
ss
xor
xchg
jne
ret
sbb
sbb
inc
pop
cwtl
hlt
push
xchg
jmp
mov
xor
jo
fbld
addr16
rolb
cmpsl
adc
adc
push
in
hlt
or
aam
pop
push
mov
std
fadds
ja
pusha
fxch
mov
pop
inc
sahf
push
popa
mov
scas
jae
xor
in
adc
pop
jle
or
ffreep
inc
loopne
dec
or
xchg
lret
loop
aas
fiadds
push
adc
ror
cltd
cpuid
adc
popf
jecxz
and
mov
sbb
mov
lret
mov
sbb
mov
ja
sub
ficoms
sahf
cmpl
mov
push
mov
inc
mov
sbbb
cmp
dec
mov
and
cmp
or
mov
int3
mov
outsb
sbb
and
pushf
dec
dec
xchg
pop
aas
xor
and
repz
push
and
xchg
xorps
dec
cmp
dec
loop
or
scas
mov
sti
lock
and
push
push
inc
mov
clc
aam
in
or
lcall
popl
fnsave
cmpsl
shll
daa
jmp
xchg
outsl
sbb
mov
mov
cltd
jmp
cmp
jle
andl
xchg
stos
lea
fisubs
pop
inc
mov
push
or
mov
jmp
loope
xor
and
adc
dec
outsl
or
xlat
pop
mov
int
and
daa
pop
mov
ss
jl
je
jecxz
int3
jmp
push
ficoms
clc
imul
cmp
sbb
push
dec
cmp
or
jae
xchg
icebp
xchg
mov
imul
loop
jo
dec
and
mov
and
iret
cltd
je
jmp
and
mov
xlat
call
dec
sbb
jo
and
push
loopne
mov
push
repz
add
in
lods
outsb
sbb
pop
fsubs
pop
jo
negb
loope
lret
int
cmp
push
lcall
jo
jae
into
mov
int
jno
sub
inc
pusha
cs
jle
inc
cmp
movsl
jecxz
arpl
fwait
and
dec
stos
jg
repz
mov
xchg
add
pop
lahf
xlat
popa
pushf
sbb
arpl
stc
sahf
ret
shlb
pop
sub
rorl
adcb
fisubs
sub
add
mov
and
dec
pop
sbb
pop
sbb
test
mov
jbe
out
jp
mov
dec
adc
adc
mov
pop
mov
mov
pop
es
push
repz
arpl
xchg
out
mov
and
mov
cli
pusha
push
sbb
in
mov
ds
out
dec
mov
arpl
iret
mov
fildl
fwait
xor
and
push
pop
cs
rolb
add
les
mov
notb
cltd
push
fistl
cmp
xor
sub
sub
jecxz
sbb
lret
push
ds
cli
out
lcall
or
jp
fiaddl
sub
mov
adc
mov
adc
sbb
daa
and
pop
jp
mov
cli
jg
mov
sub
add
sbb
jae
xchg
inc
cli
shlb
fsubrl
jnp
mov
mov
cmc
xchg
or
lea
jb
cmpsb
and
and
sub
loopne
or
mov
cs
push
cld
mov
ljmp
aas
lock
div
sbb
popf
sub
rcr
sti
std
lret
and
loope
inc
lret
loopne
lahf
pop
inc
popa
push
clc
and
fwait
mov
imul
dec
push
enter
ljmp
scas
fistpl
ret
push
sub
rcrl
and
ss
ret
xchg
push
jnp
push
les
popa
jae
stos
and
nop
or
pop
cmpsb
mov
lods
ss
cmpb
insb
push
jae
sbb
mov
inc
clc
cmp
lods
mov
pushf
push
mov
jnp
imul
rcrl
dec
xchg
inc
adc
lods
sbb
or
fwait
adcb
pop
xor
jge
sbb
jno
pushf
rcrl
fdivs
cmc
je
cs
mov
and
outsl
rcll
cmp
mov
inc
push
scas
xlat
test
pop
inc
sub
xchg
cmp
divb
lods
xor
push
xchg
pop
add
sbb
ds
push
mov
add
mov
loop
push
cmpsl
or
xor
push
mov
cwtl
pop
mov
sbb
popa
sub
mov
movl
push
popa
ja
push
or
xchg
addr16
jmp
xlat
xchg
ret
dec
pop
or
int3
mov
cmp
mov
movsl
xchg
pop
in
sbb
rcr
lock
or
mov
jbe
push
inc
hlt
lds
or
int3
pop
outsb
icebp
add
add
inc
jb
jb
cld
push
insb
jo
call
nop
push
cltd
aad
sti
sub
adc
inc
fiaddl
push
adc
rcrl
in
int
addr16
jns
mov
mov
or
imul
adc
pop
jmp
call
imul
mov
mov
cmpb
mov
shr
stos
cmp
cmp
cli
dec
jmp
in
pop
push
xor
inc
out
out
ds
and
aad
insb
jnp
jns
push
sbb
lahf
inc
insb
and
adc
and
repnz
pop
jle
ret
sbb
dec
inc
inc
ljmp
sbb
sbb
out
pop
push
lahf
cmc
or
cmpsb
and
or
inc
rcll
jl
mov
mov
cwtl
or
and
mov
mov
add
mov
inc
shrl
int
pushf
popf
cmp
mov
inc
les
stos
xchg
xlat
outsb
and
xchg
jle
enter
dec
adc
lea
bound
insl
jno
sbb
data16
cmpsl
fmull
fs
adc
add
xor
daa
scas
xchg
push
push
add
aad
pop
or
pushf
push
inc
push
into
ret
dec
imul
xchg
xor
cs
sub
jmp
mov
ret
das
jle
mov
jno
mov
push
push
add
out
sbb
push
shrl
push
leave
push
mov
cs
push
lea
xlat
inc
dec
mov
aas
in
hlt
inc
daa
push
out
fildl
inc
pop
xchg
bound
mov
adcl
cltd
and
call
dec
repnz
loope
cmp
stc
mov
call
hlt
jb
inc
xor
loop
aad
dec
mov
fsub
push
dec
and
decb
ret
mov
notb
push
popf
xor
adc
js
sub
add
in
fadd
cmp
scas
jmp
inc
fists
and
mov
mov
fwait
adc
notb
add
mov
adc
insl
orl
dec
leave
arpl
nop
imul
ja
push
sbb
iret
in
test
fisttpll
repnz
jne
rcrb
fcmovbe
cmpsl
nop
xchg
popl
imul
ret
dec
add
sbb
iret
test
mov
mov
jle
sub
std
into
mov
xchg
dec
mov
cmc
divb
adcb
add
pop
clc
adc
movsbl
mov
lds
cmpsb
icebp
or
inc
xchg
and
out
les
lcall
mov
movsb
decb
sbb
xor
adc
cmp
outsb
andl
ds
jmp
xor
jl
xor
mov
lahf
outsl
out
push
fldcw
mov
jns
add
jg
push
xchg
out
rsm
imul
inc
or
xchg
jl
pushf
add
test
sbb
adc
repnz
pop
xor
jae
pop
test
cli
jae
fiaddl
repnz
inc
add
xor
test
clc
stos
ret
in
out
push
dec
out
insl
sub
mov
sub
lea
dec
repz
movsb
and
xchg
jge
mov
xchg
orb
dec
push
fcoml
xchg
inc
push
pop
lods
pop
jo
adc
mov
add
addr16
and
jb
and
int3
cld
xchg
pmaddwd
jmp
or
stos
fldcw
mov
lret
shll
stc
scas
xor
loop
std
enter
pop
mov
sbb
jecxz
addr16
repnz
das
sub
lods
loope
and
bound
dec
push
push
cmp
mov
sub
jno
les
enter
sarl
ljmp
jecxz
shll
xor
loope
fs
and
lret
add
mov
dec
or
mov
mov
es
inc
enter
push
lock
hlt
jmp
sti
test
aaa
shll
std
js
push
out
cmp
lcall
loopne
rcll
call
dec
cmp
pop
das
add
mov
jg
push
jnp
lock
test
andl
dec
pop
sbb
cmpsl
jmp
int
sahf
cwtl
and
push
sbb
sub
fimuls
sbb
sbb
add
loopne
and
dec
inc
rolb
cs
sub
dec
test
cmp
sbb
jo
insb
les
push
push
push
js
mov
push
adc
adc
les
push
outsl
fucomip
cs
aas
and
loope
push
adc
int3
ljmp
cmpsl
sub
ss
xchg
mov
sti
push
and
xor
mov
sbb
and
enter
push
loop
cli
out
add
xlat
push
js
mov
jecxz
inc
cmpsl
fsubs
in
outsb
jle
out
or
inc
lock
xchg
in
inc
jo
ja
lret
shrl
pop
sub
cmp
pop
sbb
jnp
mov
fldcw
test
sti
jns
imul
cmp
pop
sbb
jnp
mov
fldcw
test
sti
jns
jmp
cmp
imul
fldcw
test
sti
jns
imul
cmp
pop
sbb
jnp
mov
xor
leave
int3
leave
inc
fldenv
adc
add
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jle
sbb
xlat
imull
add
ljmp
add
or
add
or
add
dec
add
push
clc
add
add
add
add
add
add
add
add
push
xchg
sbb
je
sub
std
add
add
add
fldl
cmp
in
flds
xor
pop
add
add
add
add
add
int3
add
add
add
rolb
flds
and
lea
xor
push
add
add
add
add
add
and
xchg
or
add
add
jp
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
or
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
dec
add
sbb
xchg
add
add
incl
mov
add
add
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
int3
add
add
push
add
and
add
add
add
testl
push
add
add
add
add
add
mov
add
push
mov
add
add
add
add
add
add
add
add
add
add
add
jp
and
movl
dec
add
add
sbb
mov
mov
jno
testl
add
sbb
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
aaa
add
xor
stc
add
jae
rolb
clc
add
add
add
add
add
add
add
add
add
add
add
pop
push
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
je
addb
add
testl
pop
add
add
add
add
add
add
add
add
add
xor
mov
test
add
add
lahf
add
xchg
xor
lock
add
add
add
test
mov
add
add
add
add
add
add
adc
xchg
add
add
add
sub
xor
aaa
add
add
adc
xlat
add
add
add
mov
add
add
add
add
add
add
std
add
add
rolb
add
roll
xchg
add
testl
xor
xor
nop
add
add
add
or
add
add
add
add
add
add
add
add
add
cltd
add
or
and
jo
and
dec
add
push
inc
add
add
add
add
add
mov
add
into
add
add
and
stos
add
add
add
add
and
sub
push
add
add
add
mov
add
add
add
cltd
add
add
sbb
out
ret
add
add
loopne
movsl
aas
xchg
and
or
sbbb
cmpl
add
xlat
mov
scas
pop
xchg
or
lods
andl
fwait
push
cmpsl
cmp
or
cmpsb
xor
mov
cmp
pop
not
aam
push
jne
jmp
sbb
int3
ss
pop
and
out
mov
push
adc
cmp
or
push
push
xchg
sbb
adc
or
jmp
loope
xchg
jecxz
sub
into
fcomps
mov
pop
sub
fwait
rcrb
stc
jmp
xchg
incb
add
pop
lret
jp
in
shl
jae
es
or
jmp
and
sti
adc
xor
sbb
aad
or
jmp
pop
fadds
sub
sub
movsl
add
aam
pop
mov
leave
mov
inc
push
and
icebp
sti
jae
cltd
adc
roll
sahf
mov
and
push
mov
mov
sbb
dec
adc
in
mov
push
xor
sbb
shl
pop
enter
dec
test
xchg
popf
les
cmpsl
sbb
mov
sub
sub
outsb
icebp
and
mov
pop
sbb
pop
scas
inc
fst
cmp
jge
adc
dec
mov
lret
xchg
cmp
ss
push
imul
ret
loopne
or
jle
nop
mov
cwtl
and
dec
lock
into
out
sub
pushf
dec
out
ret
bound
sbbl
xor
mov
pop
es
adc
in
lahf
mov
test
push
sbb
ds
cmp
mov
ret
or
stos
xor
cmp
mov
and
adcb
jno
adc
cmp
imul
add
or
fldenv
push
test
roll
sbbl
cs
xor
imul
xor
mov
popf
mov
push
cmp
pop
jnp,pn
test
mov
movsl
int
ds
xchg
cmpsb
adc
xor
jne
add
mov
ds
fdivs
shr
adc
incl
mov
aaa
dec
mov
fidivrs
out
mov
lret
cltd
sbb
rclb
sub
andl
jmp
lods
daa
iret
jo
pop
pop
add
loope
std
jne
sahf
fst
add
ret
jg
xchg
insb
pop
ljmp
jp
out
lcall
call
push
pop
clc
mov
add
xor
into
scas
lcall
cmp
in
ljmp
lcall
pop
cld
popf
movsl
and
loopne
clc
pop
xchg
clc
pop
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
