call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jno
ficoml
inc
cli
xor
push
hlt
xor
sub
mov
push
jp
or
cmp
lret
ds
adc
loop
mov
ret
or
cmp
lret
shr
cli
sub
inc
lcall
roll
sbb
jle
dec
fidivrs
sbb
cs
push
mov
push
ss
and
test
rorl
lea
sub
xchg
mov
sahf
lcall
mov
mov
notl
jnp
lret
xchg
sub
mov
daa
or
sbb
arpl
sbb
loop
outsl
ret
or
sub
mov
mov
mov
inc
add
repz
dec
push
xchg
cmp
dec
pop
mov
sbb
cmp
pop
into
mov
in
rorb
popa
pop
rclb
mov
push
dec
jmp
push
jmp
int
lret
cltd
in
popa
aaa
aas
shll
jp
cmc
icebp
out
xchg
aas
cmpl
push
ljmp
adc
js
movsb
push
jp
or
jl
cmpsl
adc
lods
cmp
iret
add
repnz
mov
cmpsl
adc
addr16
arpl
test
pop
aas
mov
nop
and
and
out
push
mov
sarb
push
lret
gs
sti
pop
ret
push
push
lcall
popa
out
lcall
loop
shrb
jp
or
cmp
ficoml
inc
cli
xor
add
shrb
jp
or
cmp
iret
nop
sbb
mov
les
xor
cmp
and
dec
dec
scas
mov
fimull
jne
into
and
pop
cmpsl
add
lock
shll
and
lret
jae
mov
xchg
inc
jbe
push
sub
rolb
jmp
loope
xchg
mov
add
xor
mov
cwtl
sbb
pop
push
loope
push
sub
inc
and
mov
and
mov
jg
jnp
pop
out
jb
imul
mov
adc
sub
mov
xor
jnp
jbe
mov
inc
test
sbb
pop
or
fisttpll
mov
mov
fcoml
inc
jns
movsl
std
inc
cld
add
jl
les
les
sbb
inc
sub
test
jne
popa
insl
mov
in
int
sbbb
outsb
xlat
std
int3
inc
add
xor
add
jae
cmpsl
sbb
movsl
mov
jbe
xchg
test
mov
fidivl
and
cltd
test
jns
daa
mov
pop
jl
mov
mov
mov
sub
rcrb
mov
sbb
ss
mov
mov
js
mov
mov
or
out
push
mov
mov
and
fcoms
sbb
iret
sub
inc
cwtl
push
mull
lret
xchg
add
test
dec
lock
inc
sub
xchg
jno
jecxz
sbb
push
pop
sub
stos
cmp
adc
insb
jo
xchg
xchg
pop
call
icebp
add
xchg
pusha
and
dec
sbb
push
int3
mov
jns
rorl
sarb
sbb
stos
mov
jmp
nop
push
aas
inc
out
and
mov
ss
push
minps
fsubrl
pop
fs
dec
testl
fadd
add
cmpsl
mov
pop
add
cld
sbb
fisubs
jno
xlat
imul
and
hlt
sub
ljmp
insb
rol
adc
cmp
pushf
xchg
imul
shrb
jne
inc
out
mov
jmp
icebp
stos
shlb
mov
inc
cmp
nop
mov
mov
mov
inc
jge
aas
testl
jg
cwtl
xchg
pop
aam
cmp
lock
in
and
pop
xchg
gs
inc
inc
push
sub
fcmove
popf
mov
mov
cmc
outsl
sbb
ret
aam
adc
je
add
or
sub
ret
pop
dec
nop
subb
lret
push
in
aas
ds
xchg
loope
dec
mov
test
pop
push
fstp
int
mov
dec
pop
push
int3
mov
jg
sbb
xchg
sar
lock
pop
and
adc
das
shlw
das
insl
stc
ljmp
cmp
dec
pop
add
cmp
imul
mov
les
and
cmp
cld
and
cs
lret
push
or
adc
adc
cmc
xor
filds
inc
mov
dec
pop
pop
test
scas
and
lcall
xchg
movsl
neg
inc
sbb
xchg
and
jp
dec
iret
mov
ss
cmp
imul
lahf
cmp
sti
mov
adc
in
inc
addr16
lods
push
jge
ss
dec
mov
xchg
jmp
jae
sbb
shrb
push
push
jge
jbe
cwtl
jne
aas
adcb
adc
orl
loop
hlt
test
mov
pusha
imul
sbb
int3
sarb
mov
lcall
and
push
or
outsb
rolb
push
sbb
jb
pop
and
xor
fnstcw
aaa
call
test
aaa
or
sbb
and
xchg
pusha
lds
in
or
fs
das
sub
jns
lods
lret
insb
sbb
mov
adc
testb
jecxz
bound
xor
or
call
fldenv
js
push
dec
jmp
lods
jge
mov
or
xchg
inc
jge
pushf
pushl
pop
je
ja
and
jbe
mov
in
or
xchg
test
add
pop
and
inc
lret
inc
pop
jp
stos
cmc
es
shlb
xchg
inc
scas
inc
jle
or
pop
bound
je
iret
fsubr
or
cmp
jb
lcall
pop
dec
pushf
pop
mov
in
or
outsb
out
or
and
out
loope
mov
xchg
push
add
push
les
fidivrs
mov
test
es
and
mov
pop
and
data16
jbe
mov
lahf
xchg
test
adc
sahf
aas
outsl
mov
inc
mov
adc
dec
jp
push
loop
adc
orl
or
hlt
lret
fucomip
sahf
ljmp
mov
movsb
jbe
ret
add
jns
repz
sbb
mov
xchg
shll
lods
and
and
jnp
fwait
arpl
lcall
jmp
inc
jb
lcall
das
mov
aaa
add
test
mov
jmp
push
xchg
or
adc
xor
jbe
das
dec
xor
cmp
mov
outsb
push
xor
or
into
jmp
pop
arpl
mov
push
sub
scas
rcrb
and
movsb
lea
psubw
stos
mov
popf
dec
push
jge
lahf
imul
dec
jg
sahf
cli
pop
pop
add
inc
cmp
cmp
nop
scas
inc
enter
pop
mov
cmpsb
or
test
daa
arpl
mov
adc
or
sub
cwtl
test
cmpsl
ds
js
sub
test
movsb
lcall
popf
mov
ss
jns
adc
sub
insb
dec
pop
jnp
jb
adc
insl
adc
gs
ret
fabs
cmc
std
sbb
pop
jns
popf
insb
sbb
adc
loop
cmp
test
dec
jp
int3
test
adc
ret
pop
imul
push
jns
adc
mov
push
daa
xor
and
out
rol
sbb
cmp
ret
into
push
fwait
cmp
loope
jno
lcall
mov
adc
xchg
movb
adc
repz
mov
nop
adc
cmp
cli
jmp
xchg
pop
dec
lock
push
movsb
or
dec
add
mov
adc
imul
xchg
add
and
aam
jmp
push
pusha
pusha
cmp
push
in
mov
push
orl
lea
fldt
jmp
mov
in
repz
scas
sti
dec
lods
xchg
pop
nop
repnz
pushf
lret
mov
sub
mov
xor
fwait
out
and
jp
xchg
sti
fs
lds
lcall
ret
pop
add
xchg
xchg
mov
add
mov
jae
pop
sub
add
das
push
imul
ret
pop
lods
cmc
inc
lcall
or
subl
sbb
insb
mov
jb
testl
das
aad
stc
movsb
sbb
mov
xor
push
push
mov
repz
mov
dec
clc
in
jns
insb
mov
fnstcw
xchg
push
das
inc
in
loopne
fnstcw
xor
sub
ss
cltd
ret
pop
scas
mov
mov
aam
icebp
into
lret
cmc
je
jns
or
inc
mov
mov
jnp
mov
cmp
mov
add
push
lods
icebp
jae
jg
arpl
stos
subb
cli
mov
fisubrs
cmp
jp
mov
dec
shl
loope
fdiv
in
xlat
dec
ds
addb
test
sarb
incb
adc
movsb
fwait
cmp
sbb
pop
mov
mov
mov
inc
sbb
push
sbb
movsl
push
aaa
outsl
jmp
xchg
push
jmp
nop
mov
mov
xor
ret
out
push
inc
mov
cmp
or
jg
xchg
mov
mov
cmovp
std
xlat
xchg
fcomps
cmpsb
jno
jbe
fildl
adc
or
mov
xchg
or
fdivrs
inc
mov
xchg
and
dec
dec
aam
dec
push
fidivrl
shrb
xchg
add
xor
lods
lock
stos
dec
orl
dec
cmpsl
cld
std
mov
sub
das
das
inc
sub
sbb
jmp
xchg
xorb
int
xchg
mov
mov
cmp
xor
xor
sub
int
sbb
xchg
enter
or
mov
cmp
je
jne
xchg
addb
int3
push
shlb
mov
push
aaa
leave
hlt
ret
scas
jnp
lods
test
addb
scas
inc
enter
std
in
das
imul
sub
xchg
mov
in
or
fisttpl
sub
into
int3
cmp
test
dec
mov
jno
pop
pop
and
add
push
stc
popf
loop
mov
iret
xchg
in
fldenv
add
aad
xchg
mov
mov
mov
scas
out
pop
xchg
loop
fbstp
xchg
js
jmp
jne
xchg
adc
outsb
dec
push
fs
mov
loop
xor
xchg
cs
in
dec
mov
aaa
mov
mov
push
or
shlb
pop
mov
ret
pop
outsl
mov
pop
add
or
in
psubw
push
in
dec
lods
loopne
cli
outsb
jns
gs
xor
cmp
push
imul
xchg
push
cli
jnp
ret
pusha
xchg
rorb
xor
lret
fidivs
mov
lahf
mov
lds
xor
push
inc
pop
inc
sub
push
jp
aas
pop
movsb
cmp
insl
adc
enter
gs
jo
imul
jne
jl
push
push
dec
sub
xchg
insl
adc
pop
imul
or
shl
popl
dec
add
push
aad
add
add
fstps
cltd
out
popa
adc
jp
out
hlt
jae
sbbb
jb
lods
pop
cld
adc
sub
sbb
jno
inc
cli
iret
and
xchg
cmp
subl
movsl
mov
repz
or
xor
sub
jp
xlat
mov
xor
mov
xchg
mov
cmpsb
mov
jecxz
sub
pushf
jl
or
pushf
idivb
test
inc
std
repnz
inc
xchg
pop
in
push
or
test
popa
pop
outsl
sbb
mov
mov
hlt
in
mulb
enter
sbb
xchg
fs
adc
xchg
mov
negb
xchg
pop
or
dec
mov
ss
cmp
int3
mov
cltd
dec
mov
aam
scas
add
cltd
or
call
or
rorb
push
pop
jp
daa
mov
push
out
mov
roll
clc
loopne
stc
lea
fiaddl
mov
mov
pop
sbb
lock
adc
adcl
add
mov
leave
push
xor
mov
jne
sbb
enter
sub
jge
movsb
loope
push
pop
and
dec
in
inc
out
aas
xor
loop
xorl
dec
iret
hlt
lret
pop
mov
or
cmp
rcr
xlat
jne
pop
testl
mov
test
enter
popa
pop
cli
fadd
jno
jle
sub
and
adc
movsb
mov
xchg
sub
ja
mov
ret
jle
les
sbb
leave
mov
pop
mov
inc
lcall
xchg
sbb
test
inc
retw
enter
push
xchg
fiadds
leave
pop
fidivrs
and
jecxz
cmc
ss
mov
fstl
xchg
push
int
sub
lds
nop
lock
bound
int
adc
cmp
lahf
lret
aaa
sarb
scas
mov
cmpsl
bound
les
xchg
add
dec
ja
jae
adc
in
xchg
gs
bnd
jl
ret
jns
mov
or
cwtl
add
insb
mov
pop
sti
lds
ds
popa
pop
push
xor
pop
in
fisubs
xchg
divl
scas
sbb
xchg
adc
mov
xchg
int
xor
insl
test
xor
lret
inc
repnz
add
push
int
add
jle
ret
sbb
add
mov
add
lds
fcmovu
push
cmpsl
outsl
adc
pushf
xchg
mov
roll
jge
std
pop
cmpsl
fstpt
out
mov
sub
mov
jns
jge
mov
mov
or
jae
insb
inc
testl
xor
out
outsl
in
lret
add
shll
imul
add
cmp
sub
mov
inc
scas
enter
movsw
mov
cs
out
jns
out
dec
sbb
adc
aad
jmp
popf
ret
dec
arpl
out
jb
out
imul
cmpsl
adc
cs
sti
mov
mov
jo
jns
jno
jne
dec
mov
mov
xchg
sbb
inc
pop
icebp
nop
or
and
lahf
jmp
mov
mov
ja
sub
cs
rcr
xchg
inc
xchg
sbb
loope
xor
stos
les
arpl
out
rcrb
cmpsl
mov
or
xor
nop
dec
in
mov
sbb
sub
cld
sbb
mov
push
sbb
adc
clc
gs
lods
in
loopne
pop
adc
jge
jns
scas
jmp
mov
andl
push
xrelease
mov
dec
xchg
sahf
int3
test
mov
xchg
pop
aad
and
jmp
cmp
xor
lahf
inc
imul
mov
adc
dec
jg
add
out
loop
ficoms
mov
push
or
sub
mov
out
mov
clc
mov
add
daa
push
mov
ret
jae
iret
mov
pop
aam
fmull
dec
test
adc
ja
adc
out
pop
fs
or
sbb
inc
or
dec
daa
and
jo
popf
jecxz
lret
mov
jecxz
adc
and
mov
mov
mov
das
cmp
xchg
push
pop
cmp
cmp
adc
xor
int3
movsb
cld
repnz
imul
mov
mov
lock
sbb
je
mov
cmp
or
mov
and
sub
out
mov
pushf
inc
aam
sbb
jecxz
testb
lock
jbe
push
stos
orps
jnp
xchg
cmp
test
std
inc
push
push
xchg
push
lcall
call
shr
cld
lret
push
sbb
es
jl
cmc
fdivrl
inc
push
cmp
xchg
jp
mov
xor
mov
mov
push
scas
jns
add
cmp
out
xchg
jmp
mov
jb
xlat
sti
ljmp
sti
lret
sub
int
out
test
popf
mov
enter
pop
push
lahf
sub
dec
inc
loopne
lcall
jp
sbb
add
popf
cmpsb
jge
push
push
stos
in
inc
adc
add
nop
sbb
xchg
cmpsb
xor
sti
add
dec
not
mov
les
roll
sub
iret
fmul
or
dec
int3
xlat
aas
fisubl
push
lods
or
jns
mov
out
cmpsb
mov
mov
push
cmp
push
out
sub
pop
push
lea
sbb
sahf
nop
mov
mov
in
mov
imul
dec
cwtl
into
in
insl
and
fisubrs
jo
into
lret
ror
adc
jns
xor
out
leave
nop
push
fisubrs
rorb
popa
pop
jecxz
push
movsb
in
push
push
or
stc
pop
sbb
lret
cmp
pushl
or
and
mov
dec
xor
dec
loope
fstpt
or
fwait
addb
jle
xor
dec
sub
std
repnz
popf
mov
fnsave
xor
jecxz
arpl
mov
or
test
stos
dec
push
dec
dec
mov
mov
insl
adc
mov
sub
test
leave
popa
sub
xchg
das
xor
or
in
sub
rcll
repnz
mov
mov
pop
and
push
adc
push
fldt
stos
xchg
int
in
and
leave
data16
gs
adc
clc
mov
mov
mov
cmp
imul
popa
loop
std
cmpsb
push
pop
out
js
gs
xlat
icebp
xchg
pop
loopne
inc
sti
add
outsl
fwait
add
sbb
push
pushf
mov
sub
sub
xchg
push
xor
clc
sbb
xor
mov
mov
stos
sbb
in
push
pop
push
cmc
lods
ds
cmp
push
insb
cwtl
lds
enter
cli
fcmovu
pop
pushf
fstpl
push
sub
out
bswap
xchg
sbb
mov
or
jmp
mov
dec
jns
push
push
cli
mov
in
stos
jecxz
adcb
xlat
jo
mov
out
sub
scas
pop
mov
fdiv
xchg
sbb
mov
mov
xor
aas
sahf
jecxz
mov
cltd
xchg
push
test
adc
push
stos
nop
jmp
ljmp
ss
sbb
sub
rorb
push
push
adc
add
stos
jne
in
xlat
adc
sbb
mov
mov
cwtl
xchg
dec
fwait
push
xchg
xchg
push
inc
mov
loop
sub
push
outsl
mov
inc
fdivrs
loopne
pop
nop
dec
outsl
enter
adc
rcll
xor
xchg
aaa
add
xchg
test
popf
push
sbb
and
inc
add
cmc
scas
hlt
rcl
cmp
mov
repz
fidivs
pop
add
adc
nop
dec
pop
iret
dec
int
sub
lods
aas
aad
push
xor
jno
dec
mov
test
pop
invd
jmp
mov
jnp
fdivrs
push
insl
cmp
sub
pop
jns
iret
mov
stc
addr16
pop
cmp
rcr
cmp
mov
mov
xor
jb
xchg
mov
sarb
scas
mov
mov
xchg
clc
mov
cmp
add
push
fmuls
inc
or
in
dec
cli
dec
insb
adc
pop
mov
push
pop
mov
cld
es
fnsave
loop
jp
aad
leave
inc
push
sub
minps
lods
jmp
pop
jge
lret
pop
imul
movsb
aad
mov
and
rclb
xor
nop
popf
cmp
jbe
js
jo
clc
adc
sbb
lds
add
mov
xor
mov
scas
inc
lods
sti
sub
cmp
imul
filds
xor
jbe
add
fildll
pusha
inc
fdivs
sbb
mov
lret
fnsave
shlb
leave
aaa
lods
or
pop
fisttpll
dec
mov
ret
cmpsl
jecxz
inc
jae
cltd
sbb
inc
xor
push
xchg
mov
adc
adc
aad
xchg
movsb
lock
pop
cli
jae
lock
cmp
das
jg
fcoml
clc
mov
repz
pop
xchg
jle
jbe
mov
dec
pop
rclb
sub
test
hlt
sub
lcall
pop
mov
dec
xchg
push
shr
xor
imul
mov
pop
sbb
bound
ss
push
addr16
out
test
cwtl
add
and
push
int3
dec
cmpsl
mov
divb
in
cmp
into
ret
addr16
call
xlat
std
and
and
adc
add
cwtl
pop
cmp
or
aad
sbb
sub
testl
dec
lods
xchg
cs
outsl
add
int3
fldt
and
mov
dec
insb
shll
js
jbe
out
iret
fldcw
sarl
xor
lea
push
or
into
cmp
push
addr16
scas
sti
fidivrs
test
mov
pushf
pop
or
aad
ret
outsb
mov
cmp
popf
xchg
sub
xchg
lds
mov
fdivrp
mov
decb
fidivs
cs
dec
sarb
sub
pop
push
mov
add
inc
cmp
cmp
insl
js
lods
jl
hlt
inc
enter
bnd
sub
jbe
xchg
gs
shlb
rolb
mov
shl
daa
xchg
mov
iret
jne
hlt
repz
outsl
jmp
or
jle
int3
enter
sbb
pop
pop
mov
dec
or
cltd
sbb
mov
dec
or
push
popa
cmpsl
cmp
ljmp
aad
icebp
je
mov
int3
jns
es
je
cmc
jl
and
jmp
test
adc
jbe
ljmp
clc
pop
xor
lods
popf
xor
xchg
adc
fwait
inc
or
xchg
pop
lret
pop
aas
or
adc
mov
lcall
loop
shrb
jp
or
cmp
ficoml
inc
cli
xor
add
shrb
jp
or
cmp
push
fidivl
ljmp
adc
loop
and
jp
or
cmp
fimull
ljmp
adc
addb
sbb
or
insl
aad
lds
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
das
push
lret
jae
arpl
pop
bound
jg
mov
repnz
jecxz
xchg
mov
xorb
inc
inc
jae
arpl
adc
add
xor
or
in
sti
shl
mov
mov
mov
jmp
jp
cs
adc
rcrl
xchg
add
in
shl
and
push
add
and
cli
push
mov
loop
pop
icebp
cmp
mov
or
testl
jp
fistpl
int3
xchg
fsubl
cmp
xchg
faddl
cmp
out
xor
bound
inc
sub
xchg
stos
incl
jbe
sub
rorb
sbb
jno
int
daa
push
or
ja
arpl
pop
int
add
adc
rorb
push
xchg
dec
insl
test
pushf
frstor
mov
inc
repnz
fbld
lock
adc
mov
shl
out
out
jb
mov
pop
lret
inc
jmp
sbb
rorb
pop
or
fbstp
inc
pop
arpl
adc
add
stos
mov
shll
sbb
int3
ffreep
scas
lods
insl
subb
sub
pop
cmp
dec
mov
outsb
adc
adcl
or
fsubr
test
lret
cli
add
dec
inc
push
push
outsb
pop
popa
adc
mov
mov
mov
xlat
xor
rcl
adc
inc
mov
addr16
xor
add
adc
loop
bnd
ret
jecxz
xchg
mov
xorb
inc
inc
jae
arpl
adc
add
xor
and
shl
ret
ret
jecxz
xchg
mov
xorb
adc
outsb
je
or
jbe
mov
bound
cmp
jmp
loopne
loopne
js
adc
mov
pop
aam
fildll
insb
pop
and
push
jg
adc
cmp
pop
mov
push
push
mov
imul
mov
rcrl
xor
out
scas
fiadds
push
bound
mov
insl
stc
xchg
cmp
ret
lea
test
jmp
jp
nop
sub
push
std
dec
xor
not
fnstenv
imul
and
xchg
sbb
js
test
idiv
or
jo
pop
popf
dec
mov
js
es
sti
push
mov
pop
and
adc
in
outsl
push
aas
xchg
ljmp
dec
aaa
push
pop
or
mov
xchg
test
lods
iret
mov
es
aaa
orl
sbb
repnz
adc
mov
leave
and
mov
pushf
ja
mov
aaa
add
imulb
lcall
jmp
stc
mov
ret
out
test
jecxz
xor
push
add
and
jno
cltd
jbe
dec
xchg
pop
jns
xor
out
lock
ljmp
lahf
inc
divb
mov
scas
jns
xor
pushf
and
mov
stos
movsl
lock
sti
fdivs
es
push
ds
nop
sub
cmp
test
mov
mov
aas
jg
push
lods
push
push
cmp
inc
push
push
std
xchg
add
sbb
jnp
iret
popf
nop
or
lahf
in
mov
dec
aad
mov
dec
cmpsl
adc
lret
cwtl
xchg
roll
cld
fisttps
sbb
push
add
sbb
xchg
pushf
sbb
ffreep
and
jecxz
outsl
sti
ljmp
incl
and
into
or
xchg
and
xchg
jecxz
and
aas
mov
add
sub
pop
xchg
and
iret
or
insb
daa
pop
mov
out
insb
dec
dec
sub
push
cmp
mov
test
das
push
scas
mov
mov
repnz
hlt
shrl
pop
les
sub
dec
insl
imul
mov
jge
sbb
fidivrl
in
fwait
shll
pop
mov
add
es
inc
xchg
rcl
sub
cmp
adc
mov
insb
in
test
cs
ja
xor
add
mov
dec
pop
orb
cli
adcb
arpl
insb
xorb
or
out
fstl
out
mov
ja
out
lret
adc
or
add
movsl
loope
scas
cmc
sub
sub
je
pop
shr
imul
jmp
jne
jnp
loop
andl
div
mov
insl
shll
iret
mov
xchg
sub
adc
inc
jnp
je
add
mov
and
push
push
fsubrl
cwtl
lock
cmp
fbld
pop
mov
loop
les
xchg
push
jl
xchg
jl
jbe
dec
leave
fldenv
nop
insl
pop
xor
iret
jo
out
out
mov
adc
push
or
stos
test
cltd
call
sub
ficompl
in
push
add
test
lock
test
aaa
nop
fdivs
mov
in
loope
js
fidivrs
mov
jns
and
ret
sbb
adc
fldt
xor
movsl
jb
cmp
xor
loope
int
or
dec
shrb
cmp
cmp
inc
or
inc
adc
xlat
loope
sahf
jnp
xchg
mov
outsb
pop
xor
fwait
jbe
cwtl
fdivp
int
pop
into
in
fsubrl
enter
pusha
fiaddl
pop
cmp
arpl
dec
jb
cmp
cmc
push
lock
js
in
lret
punpckhbw
jo
pop
xor
popa
jne
push
inc
lret
and
xor
movsl
rorb
inc
pop
xor
adc
dec
adc
fldl
rclb
pushf
fnstsw
jecxz
test
addr16
dec
and
mov
cmp
jae
mov
sbb
inc
push
push
cmc
fs
fsubrl
sti
cwtl
jle
pop
push
shll
cmp
dec
or
and
pop
ss
loope
jb
incb
pop
int3
fmuls
mov
loopne
or
js
or
lods
leave
test
loop
stos
repnz
xor
stos
mov
jl
add
fdivrl
or
pop
ffree
rcll
imul
je
roll
cmc
nop
sbb
pushf
xchg
mov
dec
mov
nop
insb
loop
inc
cmp
lock
push
pusha
adc
push
mov
and
push
fsts
lahf
adc
push
mov
loope
gs
push
mov
pop
sahf
adc
inc
inc
shrb
cwtl
imul
scas
mov
filds
and
aam
cmp
andb
movsl
push
loopne
inc
push
cmpsb
hlt
push
cld
pop
hlt
cmp
mov
nop
aam
rorb
idivb
ret
fidivl
push
repnz
jle
push
and
xchg
mov
sbb
push
stc
int3
mov
frstor
les
fcmovbe
paddsw
fiaddl
inc
xrelease
push
out
and
and
out
sub
insb
dec
adc
sar
dec
fcoms
adc
vpaddusw
push
mov
pop
shrb
or
stc
jb
ret
dec
lret
icebp
cwtl
adc
xchg
lock
mov
inc
sbb
mov
popf
add
mov
cmp
or
push
test
in
push
xchg
push
ja
push
lcall
or
xchg
pop
xchg
xchg
in
xchg
mov
lret
pop
dec
jmp
inc
loop
pop
fwait
inc
mov
inc
mov
or
cwtl
in
es
imulb
fisubrl
lret
out
fisubl
sub
outsb
xchg
int
pushf
mov
fsubrl
push
push
adc
std
xchg
push
testl
mov
mov
mov
cwtl
int3
in
dec
pushf
add
jp
mov
sbb
aas
and
or
inc
fs
pop
sbb
mov
push
jo
jmp
cwtl
inc
xchg
es
xlat
in
adc
add
dec
dec
decl
jg
pop
jno
mov
sbb
push
stos
xor
cmp
repnz
scas
or
jmp
iret
inc
xor
sbb
inc
jo
fnstenv
pop
sbb
mov
xor
es
nop
js
mov
insb
nop
jnp
lods
or
lods
or
xchg
mov
dec
push
jnp
aas
sbb
scas
sbb
test
cltd
mov
fdivl
sbb
fsubs
dec
loope
mov
jecxz
jle
hlt
orl
jne
outsl
bound
bound
je
shlb
int
sub
mov
mov
stc
sti
sbbl
xlat
or
ret
dec
shrl
aas
or
les
negb
arpl
stos
sbb
pop
js
nop
jnp
insl
or
ds
or
pop
inc
mov
in
adc
insb
adc
je
js
push
lret
jo
mov
stos
inc
jmp
insb
pop
push
iret
xlat
xchg
int
push
jbe
sub
or
fmull
lret
nop
out
mov
mov
mov
xchg
or
vpmulhuw
jns,pt
cmpsl
ret
sti
pushf
jecxz
es
in
push
xchg
xor
lods
mov
xchg
shlb
inc
imull
xlat
jg
pop
fidivrl
leave
push
test
xor
out
loopne
mov
pop
mov
fidivrs
pushf
loopne
mov
push
cmp
xchg
dec
mov
or
cmp
sbb
fiadds
sub
cld
dec
inc
in
pop
pop
adc
les
adc
inc
adc
push
sbb
enter
and
jp
cwtl
fnstsw
dec
test
rorl
cltd
es
lret
fstps
mov
or
xchg
idivl
xchg
cmpsl
xacquire
loop
out
sti
lret
lahf
rolb
int
inc
mov
mov
push
or
pop
stos
cwtl
notb
sti
pop
cmp
push
mov
adc
pop
lret
pop
scas
mov
fs
push
gs
mov
outsb
out
insl
jecxz
mov
int
fdivp
iret
mov
dec
mov
adc
add
cmp
xchg
dec
mov
dec
mov
cmpsl
mov
pop
hlt
cmp
rcll
mov
imul
sbbb
loope
hlt
imul
pushf
cltd
push
cmpl
mov
dec
add
outsb
cmp
test
push
and
sub
aaa
cmpsb
dec
xor
jecxz
xchg
test
sub
cmp
inc
div
mov
sub
mov
popf
popa
es
scas
push
add
adc
in
push
aam
insb
jne
sahf
test
test
sbb
shrb
sti
sbb
mov
and
inc
cmpsb
push
into
cmpsl
into
cmp
in
aaa
push
push
sarb
rorb
xor
cmp
xchg
mov
adc
aam
pushf
mov
lock
cli
sub
push
mov
in
or
ret
das
stos
out
xor
mov
fidivs
std
dec
push
sbb
xor
pop
leave
push
cld
mov
and
mov
jl
xchg
ret
iret
push
jnp
popa
stc
cmp
mov
mov
lea
mov
add
xchg
sbb
inc
gs
sbb
adc
inc
push
repz
mov
or
test
fldt
aaa
std
test
ss
pop
mov
in
xchg
add
mov
rclb
sbb
out
je
push
loopne
daa
sarl
dec
mov
loopne
inc
aas
add
dec
test
xorb
xor
icebp
fs
jne
stos
lret
jb
and
sbb
into
mov
push
dec
push
int3
cmpsb
cwtl
call
out
mov
fld
in
out
xchg
inc
sub
std
and
ss
pop
out
xorl
leave
inc
flds
data16
addr16
cli
rolb
adc
pop
pop
xor
pusha
sbb
pop
ja
cmp
xor
out
pop
pop
sub
icebp
xchg
ret
push
data16
pop
mov
mov
into
repnz
inc
stos
and
inc
and
mov
cmpl
outsl
push
jp
fwait
mov
sti
dec
data16
jecxz
and
jl
mov
inc
out
xchg
rorb
test
and
arpl
xchg
sub
lahf
xchg
xor
pop
mov
insw
es
xor
sub
mov
out
divb
es
mulb
shl
lahf
nop
or
sbb
sahf
jg
push
popl
pop
nop
aaa
jmp
divl
inc
inc
nop
pushf
dec
bound
clc
pop
xor
or
jbe
pop
mov
push
sbb
cwtl
cmpsl
test
outsb
sbb
jno
adc
cwtl
mov
daa
jae
cli
and
jp
sub
jno
cmp
jb
int
addl
mov
mov
lea
add
test
mov
sahf
and
jle
sbb
sti
fsubs
lea
mov
add
lahf
xchg
mov
adc
mov
loop
pop
and
lock
add
inc
shrl
dec
rorb
clc
jecxz
int3
loope
cmp
pop
push
aam
fstps
pop
outsb
sbb
jae
mov
lods
push
nop
cwtl
mov
sub
sub
cltd
pop
adc
adc
enter
or
out
imull
cmp
cmp
popf
jecxz
ljmp
add
mov
xchg
sub
stos
mov
mov
aaa
push
loope
dec
adc
push
je
mov
add
xor
jle
cmpsb
movsl
push
outsl
aaa
data16
pop
fsubr
fsts
call
dec
lcall
xor
mov
ja
daa
out
roll
mov
jne
mov
xchg
std
ret
xchg
mov
gs
dec
inc
gs
int3
push
sbb
push
out
mov
mov
push
sbb
dec
mov
mov
xchg
loop
jl
sub
cmp
add
int
aad
xor
test
jo
push
outsl
movsl
inc
adc
fldl2e
pop
cmpsl
cltd
xchg
imul
sbb
scas
push
js
data16
cmp
dec
inc
inc
mov
addr16
loop
jge
push
ss
outsb
test
push
push
inc
les
test
dec
movsb
jp
inc
fstl
xor
out
push
mov
pminsw
mov
addl
cli
ljmp
cmp
jnp
mov
cmp
jae
popa
in
andl
fcmovnb
adc
cmp
sbb
pushf
into
leave
pop
cmpsl
dec
adc
mov
ss
or
cmp
sub
sub
inc
cmp
in
into
shrb
mov
cmp
outsl
add
jnp
pop
mov
lods
sti
popf
jbe
adc
lcall
lahf
mov
std
cmp
and
sarl
xchg
cmp
cmp
stc
cmp
push
xor
mov
cltd
mov
ret
mov
ja
xchg
out
lods
mov
push
cmp
add
incl
or
adc
add
adc
lods
roll
and
jns
ret
inc
repnz
aaa
xchg
inc
into
ret
jg
bound
int
sub
pop
push
push
and
sbb
andl
insl
pop
std
loopne
das
pop
andl
lock
xchg
call
lcall
cmp
sub
imul
mov
xor
sahf
inc
cmp
hlt
orl
sbb
xor
fimull
popa
mov
add
in
xor
iret
cwtl
gs
jmp
mov
push
repnz
dec
sbb
iret
mov
sahf
pop
vmwrite
out
lcall
mov
es
stc
imul
mov
inc
gs
lea
data16
flds
xor
je
or
adc
pop
mul
lret
cli
mov
pop
fs
cltd
aad
xor
push
dec
mov
scas
ljmp
in
cmpsl
mov
xor
mov
xor
pushf
cltd
pop
ss
fabs
xchg
sbb
gs
sbb
push
or
mov
pop
add
fdivs
inc
rcrb
sub
add
add
mov
mov
andl
cwtl
jle
loopne
in
faddl
adc
jne
jmp
cmp
xchg
daa
negb
xchg
loop
mov
inc
add
mov
push
gs
repz
imul
push
test
clc
mov
jae
loop
inc
mov
inc
daa
fadds
adc
mov
push
pop
std
dec
shll
mov
or
sar
fwait
sbb
add
sbb
add
leave
mov
sbb
insb
sbb
nop
jmp
mov
ja
outsl
jne
adc
pop
outsb
ljmp
mov
movsl
movsl
or
dec
lret
jmp
sub
pusha
mov
data16
mov
and
pop
test
or
std
popa
cld
cmp
cmp
mov
shlb
mov
ja
fisubs
xorb
adc
jmp
fcom
rcl
mov
fisttps
push
mov
das
cltd
sti
fistps
cwtl
ja
imul
cmp
adc
aaa
lds
les
dec
iret
sbb
pop
jb
into
loop
dec
clc
sub
out
loop
inc
mov
cmp
out
shll
xchg
inc
jecxz
add
stc
cmp
lods
cmp
or
ret
mov
lods
adc
push
add
arpl
mov
xor
mov
ljmp
push
inc
pop
sbb
jno
xchg
xchg
mov
test
nop
addb
fistps
fnstsw
in
add
dec
outsb
loopne
push
or
mov
xchg
imul
inc
inc
jmp
daa
xchg
sbb
push
and
repz
jbe
orb
in
incl
mov
xchg
mov
jmp
loopne
clc
dec
fstps
jecxz
sbb
xor
jmp
push
mov
mov
sub
pop
pop
cmovg
xchg
sbb
push
fwait
lds
mov
adc
test
stos
test
lret
push
and
aam
lock
sbb
call
stos
add
out
xor
xor
adc
push
cmp
adc
std
cmp
sbb
sub
add
aam
sbb
xchg
mov
and
adc
mov
les
jp
push
jmp
sbb
out
mov
mov
pop
loop
lahf
mov
pop
pop
add
aam
xchg
repz
adc
jne
mov
cmp
mov
jo
xor
cmc
hlt
mov
ret
xor
ss
jp
pop
cwtl
rcrb
aam
jns
jecxz
insl
pop
push
enter
or
or
fs
cld
xor
scas
arpl
mov
xorb
inc
outsb
std
dec
lret
jle
addr16
xor
sbb
push
lcall
sub
jge
dec
pop
add
dec
fwait
lahf
fsubs
incl
mov
sbb
gs
rclb
test
mov
sbb
sahf
xchg
xlat
xchg
xchg
cmp
int
gs
in
mov
sbbl
push
and
and
cli
jb
adc
ljmp
push
shll
pushf
popa
mov
sti
sbb
rolb
movsl
or
xchg
fnsave
inc
sbb
popl
nop
insl
jmp
mov
lret
ja
xchg
popf
lods
scas
or
cmpsl
inc
push
int
stos
xchg
shrb
pop
scas
cld
cmp
cmp
cmp
adc
pop
ljmp
stc
movsl
sti
jl
mov
mov
pop
inc
and
xchg
push
addr16
fildll
mov
out
test
popa
ror
dec
push
in
jns
repz
incl
sbb
mov
test
push
inc
push
lahf
aas
dec
popa
mov
lret
int
xchg
popf
or
xchg
cwtl
shlb
push
fistl
les
adc
lahf
inc
gs
scas
sub
sub
mov
or
push
out
adc
fistps
ljmp
push
xorb
loopne
in
sti
cmc
in
bound
push
pop
bound
dec
pop
xor
paddb
scas
and
js
and
push
rcl
gs
xchg
pop
sti
mov
out
add
sub
and
sub
inc
xor
pop
jmp
xor
xor
arpl
and
jge
enter
push
stos
arpl
jg
pop
ficompl
add
hlt
mov
inc
cmp
push
jge
mov
or
sbb
mov
and
and
mov
push
repnz
add
mov
or
cs
dec
jb
gs
dec
cltd
sbb
insb
mov
dec
out
mov
add
lret
pushf
dec
stos
mov
ljmp
lahf
sub
addr16
sub
dec
lds
pop
aas
aaa
pop
inc
mov
dec
jno
xchg
nop
mov
sti
fdivr
push
icebp
mov
xor
xor
addr16
mov
pushf
aam
dec
xlat
test
xchg
and
dec
dec
dec
mov
mov
bound
xchg
loopne
insl
dec
adc
xchg
adc
pop
add
pusha
movsb
out
cmp
fdivrl
add
test
push
cs
fdivrs
ja
lret
adc
fwait
add
call
or
pop
pop
cmp
das
mov
jmp
gs
xchg
cmp
inc
push
jo
push
aad
pop
push
sbb
lret
adc
xchg
inc
mov
xlat
leave
add
push
push
cs
mov
data16
mov
vcvtpd2psx
in
jg
neg
inc
in
dec
insl
push
mov
sbb
sbb
aas
lock
je
mov
jbe
out
lods
mov
pop
bound
fsubr
jns
mov
subl
fdiv
out
rolb
mov
dec
out
push
fs
push
sbbl
jl
dec
fimuls
mov
sbb
push
mov
adc
pop
xchg
cmp
add
adc
or
xchg
lret
xchg
lea
or
int
push
jmp
icebp
insb
xchg
es
lods
leave
pop
sub
scas
jnp
ss
testl
lret
dec
bound
xchg
les
jl
sti
imulb
xchg
and
outsb
pop
sbb
fs
les
pop
in
icebp
cltd
mov
mov
std
cltd
lret
mov
popf
testl
daa
insb
inc
loopne
cmc
outsl
mov
rcll
xchg
arpl
inc
jae
cltd
stos
mov
cmp
mov
jl
and
pushl
mov
shlb
lods
int
loop
xor
mov
fs
push
dec
lods
xor
in
jbe
arpl
adc
add
xor
and
shl
ret
ret
jecxz
xchg
mov
xorb
inc
inc
jae
arpl
adc
add
xor
and
shl
ret
ret
jecxz
xchg
mov
xorb
dec
push
imul
adc
push
out
repnz
lret
repz
ljmp
mov
cmpsl
lret
and
adc
add
mov
jecxz
sub
imul
cmp
jge
insl
fistl
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
data16
or
arpl
lahf
jl
and
stc
pop
lods
xor
bound
sub
or
jl
insb
loop
ret
mov
lods
xor
add
cld
adc
jo
inc
int3
push
and
lcall
inc
ficompl
mov
jnp
shrl
mov
cmp
push
out
cmc
je
nop
xor
mov
inc
clc
push
jg
push
pusha
adc
mov
mov
ret
xchg
add
push
int3
arpl
in
inc
add
stos
mov
sub
push
mov
int
imul
mov
push
test
pop
in
cld
cmp
cld
jge
rcrl
loop
mov
push
mov
int3
pushf
std
rcrb
pushf
mov
rorl
jge
out
and
mov
push
int
cli
mov
push
adc
fcompl
push
jp
sbb
push
addb
pop
arpl
in
cmp
cld
xchg
cmp
int3
push
cld
mov
mov
insb
loop
repnz
ret
movsl
and
in
hlt
push
pop
aad
dec
mov
push
xchg
pop
scas
and
out
push
loop
nop
pop
mov
sub
sub
jns
push
std
or
add
push
lods
push
fldenv
adc
and
push
mov
out
xlat
add
insb
repnz
ret
mov
add
faddl
push
cmp
sub
sbb
or
jl
insb
repnz
ret
mov
add
faddl
push
cmp
out
mov
push
imul
xchg
mov
mov
mov
punpcklwd
push
fcmovu
xor
bound
movsl
mov
enter
lods
or
stc
es
push
xchg
lahf
mov
dec
pushf
or
cmp
lahf
cmp
bound
cmp
lret
aas
mov
fadds
inc
in
aam
popa
ljmp
and
mov
ret
adc
inc
enter
jmp
mov
inc
xchg
unpckhps
cld
jb
icebp
xlat
roll
in
lods
insb
push
cmp
add
add
push
pop
cmp
jg
mov
jg
jge
cmp
pop
call
les
mov
jno
loop
and
or
rcr
inc
xchg
insl
add
add
cmp
aaa
out
sbb
xchg
popa
mov
imul
jp
push
popa
jl
xor
jns
je
mov
pop
jecxz
cmp
shlb
es
adc
icebp
ret
xorl
adc
std
lcall
outsb
jno
mov
jns
aad
std
push
push
outsb
jbe
sbb
push
outsl
jne
mov
loop
mov
sbb
and
push
push
out
repnz
adc
imul
dec
mov
sub
mov
scas
inc
jnp
fnsave
mov
inc
xchg
insb
sub
cmp
xlat
imul
cmp
sub
jb
pop
sbb
cmp
popa
rcll
xchg
inc
cmc
inc
lock
pop
pop
movsb
cli
push
and
imul
jecxz
pop
cmp
lret
and
xchg
jge
or
pop
das
rcrl
sbb
mov
mov
sub
fnstenv
xor
fstl
mov
std
insl
push
in
push
es
adc
jl
imul
lcall
fucomi
lret
arpl
bnd
add
inc
iret
xchg
dec
xchg
add
push
lcall
dec
mov
inc
enter
movsl
dec
sbb
pop
sub
adc
mov
repz
xchg
out
lods
test
jmp
cmp
dec
aad
mov
jmp
push
ja
jp
lahf
js
out
cmpsb
pop
xchg
sbb
dec
lahf
fldenv
sarb
test
jbe
fdivs
repnz
test
lret
stos
int
jae
and
inc
or
cmp
imul
jb
jne
cmp
mov
mov
mov
and
lock
stos
xchg
fwait
int3
outsb
jne
adc
mov
imul
or
push
sub
addr16
jmp
push
xchg
xchg
sti
xor
push
cmpsb
iret
out
test
dec
ss
xor
mov
out
shl
bound
setne
ret
pop
int
push
jb
sbb
mov
mov
js
js
or
imul
pop
das
sub
jmp
push
cmp
stos
xor
js
jp
into
je
test
sub
jge
movsb
pop
outsb
dec
add
pop
and
stos
sub
inc
addr16
nop
iret
mov
xlat
outsl
xlat
ljmp
inc
loopne
imul
xor
aam
roll
scas
pop
aas
outsb
in
sbb
push
add
sub
out
mov
push
dec
inc
sub
subl
or
cmc
pop
cwtl
cmp
ret
mov
mov
fisubrs
jbe
dec
sbb
push
sti
pop
and
or
dec
mov
lret
xor
into
pop
jmp
mov
cs
cli
mov
ljmp
push
pushf
mov
lret
or
inc
imul
sbb
push
imul
clc
fdivrl
xor
push
pop
inc
push
icebp
mov
push
or
mov
cmp
pop
mov
dec
bound
lahf
jmp
comiss
pop
mov
push
cmp
inc
xchg
push
jb
pop
mov
jp
popa
sbb
ret
or
daa
sbb
out
or
cmp
jp
addl
iret
in
mov
dec
mov
mov
jo
jmp
fninit
repz
dec
and
sub
movsl
cmp
inc
jnp
and
fucom
jge
sarl
es
sbb
mov
bound
mov
add
int
cmpsl
ss
pop
dec
mov
movsl
jae
cltd
repnz
dec
pop
repnz
cmpsb
mov
adc
sbb
mov
ljmp
jno
xchg
mov
mov
insl
mov
push
and
mull
sti
mov
jbe
or
nop
pop
aam
add
mov
outsb
lret
or
xor
cli
sbb
cmp
icebp
dec
mov
addr16
fstl
xchg
inc
dec
adc
aam
aas
repnz
in
ja
dec
or
out
adc
dec
sub
pop
dec
inc
jb
sub
dec
sbb
int
testb
mov
je
jae
fdivr
fiadds
mov
mov
insb
rorb
loop
and
push
xor
xchg
sbb
mov
pop
sub
push
rcr
pop
movsb
sarl
dec
or
int
aad
cmp
adc
jb
mov
loopne
nop
loopne
shlb
ret
xor
test
pop
dec
pop
jne
xchg
push
insb
test
dec
gs
clc
lods
mov
addr16
inc
pop
dec
imul
dec
repz
cmpsb
lods
or
and
vxorps
pop
cmp
jns
sahf
pop
jae
pop
arpl
out
inc
xchg
push
cmc
adc
xchg
lret
jge
add
psadbw
xor
lods
push
enter
sbb
insb
mov
xchg
adc
and
fstpt
fnstsw
icebp
mov
clc
bound
arpl
ret
ret
setae
push
dec
or
push
inc
xchg
fmuls
sub
imul
in
pop
popa
mov
xchg
push
xor
inc
mov
jns
inc
pop
shr
add
lods
cltd
jne
cltd
insb
cmp
jmp
mov
cmp
push
daa
pop
and
push
cmp
cmc
add
inc
fstps
cwtl
mov
jbe
aam
cmp
jo
push
rcrl
adcl
cmpsb
jmp
dec
push
inc
mov
or
ljmp
les
push
aam
fldcw
cmp
push
cmp
lds
adc
xchg
push
out
cmp
dec
push
pop
pusha
push
dec
int
cmp
push
stos
cmp
sti
shlb
cli
and
das
mov
xchg
xlat
sub
and
jb
push
xor
sub
ret
sarl
or
xchg
jbe
daa
sub
mov
repz
mov
sbb
jb
jb
and
inc
mov
xchg
repnz
push
xor
subb
xchg
loop
mov
addr16
dec
mov
shrb
leave
adc
push
rclb
pop
in
xchg
jbe
sub
cwtl
icebp
xchg
adc
ror
cli
or
rolb
test
iret
mov
pop
pop
and
out
mov
repnz
out
sahf
dec
or
sub
add
inc
loope
dec
xchg
stos
mov
in
mov
pop
fs
and
aas
cmp
xor
xchg
push
out
aad
xorl
aas
add
pop
push
shrl
in
outsb
popa
sub
sbb
into
fisttpll
cmp
cwtl
fisubrl
push
dec
iret
out
jbe
xchg
mov
pop
pop
test
lods
adc
sbb
xchg
jo
movsb
dec
sub
imull
hlt
xchg
push
je
pushl
push
add
jno
jne
jmp
fnstsw
mov
push
ret
sbb
leave
cmp
outsl
andb
jns
push
outsl
sbb
mov
push
xchg
inc
push
adc
mov
pop
into
sub
lds
aaa
ret
les
ja
imul
mov
inc
sarl
pop
xchg
sub
add
pop
pop
paddsw
jno
pop
pop
fcoml
mov
aas
flds
loop
jl
dec
lea
push
inc
mov
jmp
sbb
add
lret
mov
pop
push
push
lret
xchg
ret
and
outsl
repz
jg
loopne
das
stc
xor
enter
repnz
pop
aam
or
es
mov
mov
addr16
fistps
mov
lods
shl
pop
pop
push
and
clc
arpl
movsl
or
shll
adc
out
loop
and
adc
outsl
mov
sbbl
and
repnz
jnp,pn
lret
mov
and
pop
dec
inc
cmpsl
xchg
sbb
xor
cmpsb
jae
push
jae
mov
lock
das
xor
out
hlt
push
pop
xchg
idivl
int3
lret
test
add
and
cmp
xchg
lds
sub
fucomp
pop
mov
std
cmp
pop
xor
out
jbe
xchg
clc
xor
fucom
mov
or
xor
mov
mov
sub
sub
mov
clc
sti
mov
or
xchg
push
or
fwait
imul
or
mov
in
jne
mov
lods
pop
mov
imul
jnp
lods
mov
mov
daa
fidivrl
mov
cmp
jno
scas
mov
add
mov
mov
jno
out
mov
cltd
xchg
cmp
test
pop
sbb
mov
inc
pop
scas
sbb
mov
push
or
dec
mov
mov
push
cmp
xchg
xchg
add
insl
out
bound
insb
fdivl
pop
xlat
pop
test
push
js
mov
shrl
lock
jb
sti
fcmovnbe
test
sbb
jo
pop
into
test
push
into
stc
add
push
push
pop
js
in
pop
cmpsl
sub
push
mov
sahf
cmpsl
xchg
mov
mov
data16
push
test
mov
xor
jnp
push
jb
sbb
sub
add
fstl
stc
cmp
out
loope
xor
test
mov
add
jns
mov
pushf
xchg
fwait
imul
hlt
inc
out
test
xchg
hlt
leave
out
shrb
cmp
and
jae
fstpl
movsb
push
cld
mov
fcompl
popf
fisubrs
out
sub
mov
in
fldl
mov
xchg
cmp
xchg
push
dec
mov
js
jecxz
jns
add
das
bound
ret
dec
sbb
fdiv
mov
dec
cli
cmc
nop
sti
mov
mov
inc
xor
lock
dec
outsl
dec
cli
cltd
sarw
loopne
popa
imul
fwait
mov
inc
addr16
push
lock
mov
and
divl
mov
insl
mov
mov
sahf
lret
jp
clc
es
adc
mov
add
in
adc
add
pop
lea
aaa
xlat
fcoms
cs
leave
adc
ss
fs
add
and
mov
dec
xchg
daa
test
cmp
jbe
push
pop
rolb
adcl
lret
repnz
cmc
push
clc
cltd
lret
test
mov
int
lds
stos
lds
popf
xchg
stos
add
cmp
mov
roll
inc
adc
sbb
push
inc
push
rolb
shl
or
push
xchg
add
dec
lods
es
icebp
xchg
std
xchg
push
mov
mov
mov
lcallw
sbb
mov
and
xchg
mov
rclb
outsb
push
cli
repnz
dec
and
mov
add
dec
push
out
mov
jne
sub
fs
movzbl
aam
out
jns
fcmovu
add
pop
jmp
jp
lock
sub
shlb
sahf
mov
jbe
loopne
shlb
cli
repnz
insb
sub
addr16
sbb
cmp
insb
pop
mov
rorb
push
movsb
dec
dec
push
jae
jns
pop
das
mov
cmp
daa
sub
jae
lret
mov
xlat
mov
cmp
or
mov
push
push
jmp
aam
sbb
jbe
shlb
sbb
xchg
inc
scas
test
and
xor
mov
out
movsl
fistps
pop
pop
jecxz
lock
enter
test
sub
mov
das
dec
and
mov
pop
or
icebp
cmp
mull
inc
test
loopne
mov
cmpsb
or
xlat
dec
lock
pop
xor
pop
and
or
aam
arpl
sarl
fmuls
or
scas
test
jg
inc
fsub
jmp
mov
mov
iret
pusha
pop
jns
sub
xchg
in
jmp
sbb
push
shlb
test
icebp
das
or
cmpsl
subl
sub
idivb
rcll
adc
sbb
push
ljmp
cmp
mov
movsb
test
sarl
nop
inc
out
pop
inc
ret
cmp
adc
and
fiadds
inc
add
cmc
xor
in
scas
sbb
mov
andl
dec
je
testl
jmp
push
lret
cwtl
xchg
dec
cmp
dec
dec
aaa
shrl
mov
pop
movsl
pop
dec
ficoms
in
sarl
adc
imul
push
out
mov
push
adc
loope
in
and
cmpl
mov
fisubl
adc
push
dec
mov
js
aaa
inc
pusha
aas
jbe
push
aaa
adc
sbb
insb
xor
add
lret
jmp
iret
add
push
popa
out
cmp
ret
incl
mov
sub
add
mull
div
daa
mov
ljmp
repnz
stc
call
xchg
cltd
js
mov
cwtl
push
mov
add
add
xlat
add
push
xchg
mov
pop
and
ret
ja
js
push
mov
mov
es
xor
lcall
lods
movsb
arpl
jg
sbb
mov
pop
ja
pop
cmp
out
xlat
and
cmp
inc
mov
mov
fisttpl
or
sbb
sbb
and
pop
or
es
ret
subl
push
ljmp
cmp
ret
lret
andl
test
or
adcb
aas
lret
lahf
pop
xor
sub
and
mov
inc
add
leave
mov
mov
dec
fidivrs
add
sbb
adc
ds
sbb
mov
ljmp
adc
jno
or
test
pop
push
add
out
stos
jge
jbe
and
push
xchg
sbb
cli
nop
push
cld
xchg
jns
sub
lret
ret
push
fadds
dec
pop
insb
xor
insl
sub
pushf
inc
inc
in
adc
inc
lret
dec
stos
cmc
push
push
pop
jmp
add
test
jo
daa
mov
push
jb
cmp
mov
or
push
sbb
mov
movsb
rcll
or
inc
jmp
aad
aad
cltd
pop
mov
push
sahf
negl
push
cwtl
cwtl
fwait
cmp
push
mov
push
iret
xor
and
pop
push
and
adc
sbb
mov
stc
rcl
ret
mov
adcl
sub
sahf
out
and
xor
dec
xchg
push
out
push
mov
mov
lret
divb
or
int
mov
add
dec
pop
pop
iret
xor
dec
xor
jb
bound
aaa
lods
inc
pushf
or
dec
push
sbb
and
xchg
xchg
idiv
lock
xor
mov
xlat
inc
xchg
cs
xchg
dec
mov
push
and
xchg
fcmovb
pop
outsl
jg
push
or
enter
add
rorb
inc
ljmp
add
inc
sbb
xor
adcb
sub
iret
dec
cmp
pushf
push
pop
repnz
inc
sbb
push
loopne
shll
xor
inc
xor
push
sub
stos
xchg
xlat
push
cwtl
stos
les
int
pop
jp
pop
inc
inc
scas
int3
xchg
lar
dec
adc
cmc
lcall
ret
sarb
rclb
test
xchg
dec
test
clc
jns
fiadds
ror
mov
leave
push
hlt
add
mov
push
loop
es
subl
lret
cmc
loop
dec
mov
mov
push
int3
sbb
xor
daa
fdivrl
cli
xor
adc
pop
repz
mov
in
push
pop
pop
inc
mov
or
aaa
adc
sbb
or
cwtl
mov
push
popf
and
enter
rol
movsb
rcr
cmp
gs
mov
pop
xor
jo
imul
shll
popa
jne
push
and
and
push
fwait
lret
xor
add
and
ss
fwait
and
ret
lahf
cmp
jne
cli
cmpb
sbb
pop
mov
nop
sahf
lods
pop
je
push
sub
lods
mov
les
add
mov
imul
div
daa
lds
nop
cmp
push
mov
sarl
dec
jno
ss
loopne
xchg
sub
shlb
scas
ret
and
pop
add
lods
ss
mov
and
cmp
fdivrl
out
sbb
inc
mov
dec
shrl
shrb
inc
jg
sub
mov
popf
movsl
ret
push
sbb
adc
add
in
aaa
stc
inc
hlt
mov
xchg
add
mov
aaa
shrl
jae
xchg
sarb
scas
cmp
pop
push
push
lock
cmpsl
loope
xchg
dec
mov
outsb
inc
jle
or
imul
loop
aas
ja
dec
stos
jle
ret
pop
dec
lea
push
arpl
and
cltd
pop
scas
mov
adc
in
aaa
add
add
sbb
jb
adc
lea
push
ss
shll
les
xchg
xor
pop
lret
xchg
inc
push
inc
pop
out
je
lea
push
mov
ds
cld
pop
cltd
sbb
dec
sbb
popf
repz
mov
ljmp
sahf
pop
xchg
lcall
mov
xchg
idiv
lods
dec
inc
xchg
scas
mov
ljmp
push
lea
dec
inc
lea
sbb
dec
data16
mov
loopne
mov
aad
arpl
movsb
lds
dec
sub
scas
lahf
push
fwait
pop
jp
xchg
pop
adc
lds
pop
jne
repnz
dec
rcrb
xchg
aad
test
insb
inc
dec
cmpsb
pop
jle
loope
and
pop
pop
xlat
fbld
inc
out
lea
mov
lods
cmp
outsl
jl
sti
cmp
adc
sub
ret
aaa
insb
arpl
int
adc
mov
ret
scas
sbb
jecxz
sub
dec
pop
pop
scas
clc
loop
and
mov
lea
inc
pop
test
push
inc
lcall
mov
shrb
or
les
pop
rolb
bound
pop
push
bound
sbb
mov
jae
lods
fwait
repz
enter
pop
push
push
jae
jge
xchg
or
clc
fisttps
xchg
jnp
cmc
imul
pop
out
sub
shll
sbb
insb
gs
mov
stc
push
outsb
lods
popf
cmp
pop
mov
pop
ljmp
push
mov
mov
subl
inc
and
lret
fisttps
mov
cmp
adc
shll
mov
lret
sbb
insl
call
cmp
mov
xchg
out
or
jg
dec
ret
aas
sub
aad
adc
pop
or
fidivs
lods
addr16
inc
into
pop
aaa
mov
dec
insl
jae
add
int
outsl
sub
push
movsl
lret
cmp
pop
mov
pop
test
inc
and
or
rcl
mov
std
jmp
xor
lods
cld
fldenv
dec
pop
mov
mov
sbb
or
xor
movsb
je
adc
mov
aaa
or
je
cli
mov
dec
dec
mov
and
inc
test
out
jge
inc
pop
mov
mov
jne
stos
jl
sub
repnz
std
sbb
cld
lds
dec
int3
aad
ret
sbb
repnz
cwtl
jmp
pop
jp
cwtl
imul
lods
cmp
and
int
cmpl
test
dec
pop
bound
or
jb
pop
sub
inc
sti
cmpsb
mov
push
pop
inc
out
or
mov
dec
ljmp
call
clc
movsb
popa
inc
into
ja
data16
movsb
pop
jne
xchg
movsb
mov
mov
loop
adc
jmp
pushf
mov
or
popa
inc
mov
into
xor
les
pop
js
ds
sub
bound
call
icebp
test
sbb
call
cwtl
or
inc
mov
ds
add
sub
jns
push
cmp
xchg
inc
test
out
mov
xchg
stc
jo
mov
repnz
out
mov
jmp
jb
insb
loope
loopne
mov
orb
loop
repnz
ret
mov
add
faddl
push
cmp
sub
sbb
or
jl
insb
repnz
ret
mov
add
faddl
push
cmp
sub
sbb
or
jl
insb
repnz
ret
mov
add
faddl
push
or
or
jl
insb
repnz
int3
adc
push
cwtl
add
and
jbe
inc
sbb
xchg
adc
je
sbb
mov
mov
fcoms
sub
push
or
js
push
idivb
fmuls
xchg
outsl
sub
dec
or
js
push
call
aad
cltd
cld
scas
mov
stos
ror
cmp
ja
ja
pop
jne
ss
adc
pusha
es
or
pop
shlb
test
jle
testl
orl
push
fists
cltd
sub
xchg
mov
mov
adc
mov
lea
movsb
mov
or
pop
pop
jne
stc
dec
sub
sub
jb
fnstcw
push
insl
arpl
repz
pop
xchg
mov
or
fdivr
xlat
lret
popf
mov
fnstcw
jge
dec
out
out
xor
addr16
pop
call
xchg
scas
xchg
xlat
add
icebp
push
test
int
test
mov
das
xchg
xchg
leave
scas
cmp
inc
sbb
xor
push
mov
iret
mov
fcoms
sub
jno
popa
push
adc
push
out
lcall
cltd
rcrl
or
pop
sub
sbb
jp
xor
or
das
inc
dec
movsl
rclb
cmpsb
fldl
add
jnp
jo
insl
outsb
js
push
out
imulb
cmpsb
clc
mov
xchg
xchg
enter
sub
push
or
js
push
out
imulb
cmpsb
clc
mov
xchg
xchg
enter
popa
stc
stos
and
aam
rorl
sub
lret
dec
pop
or
in
into
scas
clc
insl
out
cmpl
push
mov
jmp
scas
xor
sbb
ret
js
cld
xlat
push
dec
aaa
jnp
loopne
rcrl
and
mov
loopne
sub
in
inc
dec
loop
aas
push
pop
fisttpl
and
outsb
push
sar
jbe
push
jle
in
sbb
call
ret
push
out
mov
xor
push
orb
cmp
inc
stc
dec
cld
jmp
cmpsl
pop
jae
push
jp
icebp
push
push
lret
sahf
stos
rclb
lret
push
pop
jmp
int
mov
mov
into
pop
push
jmp
ss
xor
lcall
in
xchg
repz
xchg
pop
in
imul
lcall
mov
int
mov
jae
mov
mov
sbb
std
inc
mov
dec
rcrb
movsl
jmp
jmp
jg
sbb
data16
pop
neg
adc
aam
add
int3
stc
xor
fsubr
cmp
nop
fmulp
and
lahf
inc
outsl
mov
in
inc
mov
adc
into
and
push
orb
xchg
dec
inc
and
add
inc
jp
add
pushf
mov
push
jg
fs
xor
les
and
adc
cwtl
push
pop
in
xchg
lods
mov
inc
out
cwtl
push
out
je
add
and
sbb
sbbw
mov
cli
fisubs
cmp
inc
sbb
jbe
sarb
addr16
or
mov
xchg
add
cmpsb
fs
mov
movsl
cmpsb
and
jno
pop
repz
mov
inc
fs
movsl
les
cld
inc
iret
inc
inc
push
test
and
lahf
inc
fidivs
add
jp
test
jp
adc
adc
data16
xlat
cmpsl
out
add
in
sbb
push
sti
cs
lret
scas
mov
out
insb
xchg
insb
in
xabort
into
cmp
inc
fadds
mov
mov
xchg
xchg
cmp
fisttpl
fidivrl
xor
fsubr
xchg
les
lds
pop
sti
in
xor
pop
arpl
xchg
dec
cwtl
cmp
push
push
or
lods
scas
fs
cmc
test
ja
pop
hlt
add
cmp
rcrb
mov
imul
aas
imul
and
cmc
xchg
push
insl
lret
cmp
jle
cmp
add
scas
push
inc
sub
packsswb
mov
jge
hlt
jp
arpl
cwtl
sbb
repnz
jbe
sbb
mov
icebp
sub
aam
lods
xchg
push
fimuls
or
jl
push
mov
cltd
mov
cmpsl
icebp
scas
pop
stos
shlb
and
ret
clc
outsl
inc
enter
lcall
cmp
push
fwait
roll
pushf
cmp
insb
call
adc
pop
jge
mov
lds
adc
inc
lcall
hlt
sbb
pop
add
xor
push
iret
pop
push
aaa
or
enter
subl
test
xor
cmp
add
inc
add
aam
clc
dec
cs
adc
xor
pushf
mov
push
push
cld
ljmp
nop
rcrb
mov
jno
mov
mov
aaa
or
popf
xchg
dec
push
cld
or
dec
addb
jbe
rolb
add
loop
pop
dec
out
xchg
mov
adc
push
les
or
inc
push
push
mov
sub
xlat
pop
rcll
or
cmp
adc
adcl
bound
inc
out
xchg
lret
push
int3
loop
xor
out
std
call
pop
dec
out
or
mov
jbe
add
sub
lock
push
repz
ficoml
mov
sbb
push
sub
fwait
scas
bound
dec
fwait
cmp
popl
xchg
lods
add
push
xchg
test
adc
cmp
into
add
push
rcl
insb
and
sbb
adc
lret
xor
dec
push
dec
das
mov
nop
sub
dec
lds
jl,pn
add
pop
mov
into
std
sub
leave
clc
adc
pusha
pop
int3
or
fistps
pop
xchg
pushf
jbe
mov
lret
sbb
jno
outsl
and
ret
xor
in
mov
dec
inc
or
pop
inc
mov
das
enter
pushf
cmp
sub
das
jb
rorl
push
adc
je
scas
mov
sbb
xor
fsubrl
jo
pop
orl
sbbl
stos
xchg
repz
dec
clc
mov
pop
outsl
or
mov
cmpsb
lahf
pop
mov
cltd
mov
push
inc
or
jns
jg
inc
ret
in
push
push
push
popa
stos
pop
andb
cmp
jg
or
xorl
pop
in
pusha
gs
inc
inc
call
mov
inc
pop
dec
sbb
and
jmp
xor
out
mov
sbb
sbb
push
cmpsb
push
add
cld
adc
push
test
pop
aam
clc
adc
cmp
arpl
out
or
mov
faddl
lds
rcll
ja
dec
pop
jb
fwait
xchg
add
cmp
push
aam
out
aam
mov
and
push
xor
mov
mov
and
ret
jmp
aam
repnz
scas
imul
mov
jae
jo
jnp
test
xchg
jecxz
jecxz
rorb
xchg
popa
testb
mov
pop
jo
das
mov
jmp
nop
into
rorl
xchg
cltd
add
rcll
lods
sbb
sbb
adc
andl
les
mov
sbb
jmp
xor
test
mov
xchg
fcoms
pop
out
cs
orl
mov
test
adc
mov
fistps
das
push
mov
mov
fwait
xchg
cmp
or
cmp
popf
cmp
mov
sbb
out
stc
mov
xchg
jp
stc
mov
jecxz
mov
jmp
dec
stc
stc
mov
addl
or
repz
iret
insl
mov
xor
or
sub
and
mov
mov
jp
inc
roll
cld
faddl
fidivs
sub
push
mov
xchg
mov
cwtl
aaa
cmc
sub
and
loope
pop
fisubrl
test
or
stos
or
xor
xor
dec
jge
fsts
ret
pop
jnp
lea
xchg
jp
pop
stos
rcrl
xor
fisubs
rclb
lods
incl
mov
or
sarb
sbbl
mov
stos
lret
sbb
mov
out
or
mov
fisttpl
sub
and
mov
out
add
xlat
push
jge
test
add
es
mov
ret
cmpsl
mov
add
fs
data16
negl
cwtl
jb
mov
lock
dec
and
add
xchg
pop
cwtl
movsl
fisttpll
push
push
fpatan
cmp
push
icebp
lods
push
in
xchg
adc
adc
into
jge
negb
dec
push
rolb
add
jg
cmpsb
inc
lods
stc
fsubrp
cmp
lock
pop
sbb
mov
mov
pop
xchg
pop
mov
add
add
mov
push
xchg
add
sbb
scas
or
mov
sub
mov
loope
frstor
in
xor
and
xor
lock
lds
and
add
cltd
int
test
push
inc
pusha
sub
cmp
arpl
mov
pop
dec
pop
pop
add
ja
xchg
pop
lcall
in
fcmovnbe
icebp
lahf
rcll
cltd
mov
pushl
shrb
and
loope
sahf
pop
dec
mov
ja
pusha
sub
lds
imul
in
xchg
leave
dec
sbb
and
cmp
scas
push
jl
sub
loope
fnstenv
push
test
mov
mov
icebp
imull
lds
out
mov
adcl
adc
mov
pop
dec
mov
xor
ja
cmpl
cmp
sbb
lods
xchg
lds
cmpl
push
in
xchg
enter
stc
dec
mov
lret
inc
xorb
into
inc
aaa
sbb
mov
adc
jecxz
repz
jmp
xchg
cltd
pop
outsl
and
in
jb
ljmp
aas
mov
jb
push
mov
dec
data16
and
ja
mov
mov
jo
push
test
ss
lcall
jl
cs
inc
mov
add
adc
sahf
insl
dec
and
sbb
not
add
clc
xchg
sbb
or
das
je
notb
jne
sub
and
out
out
test
mov
rcll
roll
inc
xchg
jp
mov
push
push
out
inc
fcoms
dec
jmp
mov
lret
in
jg
data16
add
cmp
sbb
in
loope
xchg
push
rclb
repz
mov
leave
fs
xchg
pushf
insl
adc
data16
adc
lret
jnp
cs
inc
aaa
adc
push
insl
and
jmp
dec
sbb
push
out
sub
mov
dec
lret
jmp
pop
cwtl
mov
add
jnp
pop
in
stos
fmuls
rcl
xorl
sbb
xor
js
ss
mov
ja
xor
loop
dec
sahf
ret
jle
mov
in
xchg
inc
sub
das
inc
pop
mov
cld
mov
ss
pusha
sbb
mov
outsl
xchg
push
sbb
add
inc
inc
stos
pop
add
cltd
xlat
mov
cmpsl
and
lea
inc
sub
sti
int3
out
inc
les
sbb
push
aaa
in
js
and
fcomps
stos
xchg
sarb
out
sub
mov
vmovq
call
aaa
bound
sub
inc
int3
mov
jns
leave
loope
adc
push
xor
mov
jne
mov
popa
call
push
inc
mov
inc
pop
adc
mov
out
xor
sbb
es
lods
out
or
lcall
in
add
adc
inc
xor
dec
cmpsl
daa
pushf
cmc
ret
insl
xor
stos
and
shl
sub
mov
outsb
cmp
int3
outsb
sbb
hlt
push
mov
mov
int3
adc
jo
cltd
and
out
add
sub
mov
push
sbb
pop
testl
aad
ret
cmc
or
ret
mov
pop
mov
outsb
mov
in
jbe
push
orb
sbbb
jge
sahf
cmp
adc
and
jo
adc
and
sub
cmp
stos
mov
xchg
inc
out
and
pop
pop
add
pop
lock
cmp
out
outsb
sbb
mov
add
sbb
sub
sbb
jmp
and
shl
dec
mov
mov
push
sahf
test
jl
ljmp
push
aaa
mov
jmp
iret
adc
mov
call
jp
clc
cwtl
add
rcrb
std
loop
je
fimuls
jnp
lcall
imul
das
pop
sbb
or
sub
add
ja
lods
je
shrl
in
and
dec
sahf
inc
out
dec
pop
xchg
sub
pusha
loopne
insl
and
xchg
sbb
sbb
dec
xchg
mov
fsts
pushl
lea
push
cwtl
mov
ljmp
jmp
push
mov
fstpl
pop
mov
jo
jae,pn
or
lods
popa
movsb
fmulp
out
jno
hlt
int
js
xor
lds
lcall
data16
mov
xor
jo
push
jmp
fs
fbld
inc
cmpsb
lcall
mov
adc
scas
cmp
into
mov
pop
scas
and
cltd
sahf
mov
mov
mov
mov
jo
in
mov
enter
xchg
pop
pop
cmpsb
out
cmpsb
inc
lahf
add
fidivrs
cmp
movsl
fiaddl
add
lods
and
cwtl
cmp
dec
call
sti
mov
or
sahf
mov
imul
add
sbb
mov
jmp
inc
pop
dec
push
int
imulb
aaa
jb
je
mov
out
cld
pusha
xchg
mov
leave
pusha
mov
sahf
push
fwait
mov
in
gs
dec
mov
fcomi
mov
adc
push
xor
enter
mov
adc
pusha
jp
sub
js
inc
nop
mov
xchg
add
and
sbb
push
cmpsl
filds
sub
jne
mov
cld
outsb
cmp
jmp
gs
data16
mov
daa
dec
sbb
xlat
xlat
ret
stos
push
mov
int3
ret
jnp
hlt
mov
gs
dec
xor
leave
into
mov
mov
mov
outsb
mov
dec
push
rcrb
sbb
push
jbe
ret
sahf
sbb
in
rcl
out
cmpsb
dec
and
cmp
xchg
push
jl
mov
sbb
in
push
push
fucomip
push
pop
test
pop
pop
mov
rcl
xor
jmp
insl
stos
cltd
movsb
shl
mov
push
add
out
mov
mov
cli
inc
inc
mul
ficompl
xor
xchg
jmp
push
cmp
loopne
adc
mov
iret
jb
xchg
push
inc
mov
xchg
cmp
cmpsl
pop
cmp
jno
adc
cltd
stos
push
mov
inc
test
dec
lock
outsb
fs
lahf
in
xchg
stc
mov
mov
pop
cmp
inc
rcrb
jp
ss
sub
dec
add
mov
fcmove
xchg
mov
lods
das
sarl
jbe
push
mov
jno
incl
and
jle
sbb
mov
dec
sahf
or
or
lock
adcb
pop
gs
or
pop
xchg
cmp
jb
movsb
lock
enter
xchg
fwait
cwtl
imul
sub
or
sbb
popf
aas
sbb
xchg
cli
test
sbb
lret
push
in
int
loopne
or
xchg
and
mov
xchg
dec
adc
and
pop
cmp
daa
stc
or
xor
outsl
adc
lret
and
mov
push
rorb
xor
push
jbe
movsl
cltd
out
cmp
push
or
cmp
push
loope
xchg
imul
xor
push
decb
pusha
dec
nop
int3
mov
addr16
mov
insb
aaa
cmp
cmpsl
ret
dec
push
fcomi
scas
push
add
in
into
cmp
stos
jg
popa
fcoml
or
adc
jge
pop
lods
stc
popf
mov
lret
xlat
in
inc
enter
es
into
in
pushl
push
cmc
rolb
js
pop
dec
lock
mov
push
jns
pop
or
xor
jae
fcomip
fimuls
sub
jns
lret
fstpl
lret
imul
jl
repz
mov
sub
je
inc
js
shlb
mov
fnsave
mov
test
hlt
ljmp
pop
in
dec
lds
cmp
mov
mov
add
jmp
mov
ret
mov
sbb
or
pop
xor
adc
adc
cmc
adc
sbb
sbb
fisubs
xor
dec
loop
and
fcmovu
in
fldcw
pop
mov
or
sahf
cs
add
dec
loopne
jmp
inc
cmp
nop
mov
add
xor
adc
jg
sub
pop
fs
loopne
cs
mov
push
in
test
xor
mov
mov
and
mov
push
push
pop
push
xchg
std
lahf
pop
sbbl
rcr
mov
cmp
test
jne
cld
pop
push
add
out
cmp
pop
es
repz
mov
mov
in
add
ds
das
fs
cld
std
mov
push
sub
mov
inc
cmp
test
xchg
sbb
pop
sahf
cmp
sbb
jb
das
in
push
daa
adc
inc
sub
xchg
pop
add
pop
aam
aam
je
sbb
sub
add
push
inc
pop
lods
in
es
std
pop
pop
push
xchg
cmpsb
stos
and
cltd
insb
shlb
jmp
mov
test
inc
sarl
rorb
or
flds
push
xlat
dec
cmp
sub
or
mov
pop
pushf
jnp
mov
cwtl
add
xchg
cmpsb
jecxz
rorl
out
xorb
sbb
fildl
fdivl
pusha
inc
movsl
xchg
cmp
jae
add
push
fsts
mov
push
cli
ja
movsl
jno
leave
repz
push
gs
sub
in
xor
imul
mov
leave
dec
cld
arpl
pop
fnstsw
lret
je
out
lds
or
out
cmp
xor
test
int
fmuls
es
jl
insl
sbb
mov
icebp
ficompl
in
sub
and
mov
in
outsl
pusha
cltd
mov
cmp
fmull
shll
xchg
push
jle
popf
mov
loop
mov
or
gs
push
inc
aas
cmpsb
xlat
pop
test
push
jl
mov
adc
jns
sbbb
xor
addr16
push
jb
in
adc
shll
cli
and
ds
adc
rorb
jmp
fstl
sub
mov
nop
ljmp
sub
jmp
addr16
loopne
repnz
jns
in
push
inc
jge
pop
rdpmc
pusha
or
scas
cmpsb
and
mov
xlat
stos
out
pminub
xchg
jb
push
or
les
int
test
stc
adc
aaa
mov
out
mov
inc
jnp
fsubrs
or
cmc
cmp
ds
sub
push
in
in
or
out
mov
aam
adc
or
jo
pop
clc
cmp
or
mov
or
mov
and
shl
loop
mov
int
push
sbb
mov
rcrl
push
add
sahf
jmp
mov
jb
xchg
push
call
loopne
sbb
cld
xchg
xchg
inc
clc
fcoms
loop
pop
mov
inc
dec
dec
or
in
cmp
mov
fsubs
adc
push
xor
rcl
orl
dec
cmp
arpl
jge
push
adc
mov
jne
adc
clc
jnp
flds
adc
adc
mov
mov
sarl
aad
xlat
sahf
subl
dec
sbb
sbb
movsb
test
cmpsb
enter
std
dec
scas
and
adc
xchg
lods
jp
push
fstpt
mov
mov
push
or
inc
movsl
outsb
adc
add
push
call
lods
dec
jns
dec
out
inc
push
mov
out
adc
test
xchg
clc
pop
mov
mov
inc
mov
pop
mov
imul
adc
dec
fwait
and
insl
sbbb
mov
mov
and
sbb
insl
xchg
pop
and
idivb
cmpsb
push
mov
test
pop
mov
xor
jg
rcr
xchg
fcmovnu
dec
mov
test
aaa
dec
inc
movb
inc
cmp
add
rolb
jecxz
sbb
add
loop
add
stos
leave
and
cltd
dec
push
and
cmc
fiaddl
negb
rcr
mov
ljmp
daa
ljmp
js
in
mov
mov
insb
test
sar
pushf
lods
clc
mov
mov
push
popl
movsb
fmuls
xlat
pop
mov
push
mov
mov
push
cmc
mov
aad
shlb
aam
and
mov
das
cltd
pop
ss
sub
mov
aas
push
mov
sub
sub
push
push
scas
hlt
fsts
sti
dec
mov
cmpl
outsl
sub
scas
xlat
mov
and
loopne
mov
cmp
dec
cmp
lock
cmp
push
es
xor
mov
cmp
jl
mov
aad
mov
sub
inc
inc
cmp
jns
std
repnz
xorl
testb
push
jp
sbb
mov
add
cmp
or
xor
push
incl
mov
mov
xor
ret
or
jecxz
loopne
jbe
jmp
sub
cmc
xor
mov
clc
sbb
popa
scas
jge
test
mov
jg
in
jge
pop
mov
mov
mov
fsubl
data16
sub
jg
adc
imul
pop
xchg
test
cwtl
out
cmpsb
fnstcw
stc
mov
pandn
and
inc
imul
arpl
cmp
int3
sub
add
sar
cmp
sahf
inc
add
lods
adc
jg
scas
xor
xor
pushf
fcom
shll
cmp
fcmovb
and
das
xor
or
dec
cmpsb
shrl
je
sbb
dec
sbb
es
push
out
imulb
cmpsb
clc
mov
xchg
xchg
enter
sub
push
or
js
push
out
imulb
cmpsb
clc
mov
xchg
xchg
enter
test
cwtl
push
or
js
call
out
imulb
cmpsb
clc
mov
xchg
xchg
enter
sub
push
or
ss
sbb
call
jo
pop
jns
imul
inc
sahf
push
push
das
xor
fs
rcrl
push
mov
pop
xchg
dec
popa
mov
push
mov
xor
ficoms
mov
mov
rorl
mov
push
xchg
dec
popa
sub
scas
inc
ss
mov
ret
add
adc
loope
icebp
dec
mov
jge
sub
pop
iret
sub
dec
sub
and
popa
leave
xor
ret
and
orb
mov
adc
xor
fdivl
or
mov
or
fistpll
jbe
push
pop
jg
lods
sbbb
cltd
mov
fldenv
jl
incl
mov
stos
ds
mov
outsb
in
push
pop
and
jo
aaa
mov
ss
and
loope
loope
dec
sub
repnz
jg
xchg
xorl
imul
add
adc
icebp
insl
or
push
sub
mov
popa
dec
test
push
mov
fnstcw
lcall
loope
push
popf
jg
xchg
sbbl
pop
inc
sbb
and
xor
add
dec
loope
icebp
call
mov
pop
xchg
and
in
sbb
dec
mov
fs
stos
mov
push
les
fcomps
lds
lds
sti
add
adc
xor
addr16
pop
fldl
mov
mov
cmpb
les
in
repz
xchg
and
sub
push
in
and
adc
loope
icebp
rcrl
push
mov
pop
xchg
dec
popa
mov
push
mov
xor
add
adc
loope
icebp
rcrl
push
mov
pop
xchg
dec
popa
mov
jne
sti
addr16
int
orb
mov
xchg
js
movsb
sub
jle
lret
inc
lea
fldcw
adc
pop
dec
cli
inc
cmp
adc
lods
lock
stos
movsl
jbe
xchg
out
js
outsb
outsl
xor
xor
outsl
inc
cmc
sbb
bound
pop
sbb
sbbl
sub
cmp
pop
inc
test
push
mov
outsb
add
repz
shll
into
sbb
push
lret
push
aam
fisubrs
jbe
sahf
lea
jle
pop
cmp
pusha
fimull
dec
addb
cmp
call
and
inc
or
outsl
sbb
push
mov
pop
pop
fcomps
pop
pusha
sub
int3
mov
clc
clc
mov
fldt
mov
in
xor
cwtl
fldt
mov
pop
lods
and
loope
in
and
cmpsb
mov
daa
lahf
addb
xor
rclb
xchg
xor
shlb
pushf
fbld
sahf
push
inc
popf
mov
sarb
push
cmpsl
arpl
cmp
lret
in
xor
dec
inc
cld
pop
pop
rcrl
push
loopne
xchg
xor
dec
or
dec
xor
lods
mov
sbb
fcoms
enter
imul
and
frstor
int3
push
jl
xor
sub
jp
int
mov
out
mov
mov
dec
arpl
ret
int3
cmp
or
fbld
sub
enter
stos
add
push
out
icebp
rolb
mov
js
lods
je
jmp
fs
mov
lods
mov
sub
cmpsl
mov
rcr
sarl
sub
dec
push
jge
lds
mov
mov
jle
xchg
pusha
cmpsl
jl
popa
data16
add
ret
pop
adc
adc
cmp
nop
loope
xchg
sub
in
mov
lret
sbb
xor
cmp
repz
shrl
adc
and
fistpll
dec
xchg
push
js
pop
cmp
mov
popl
fsubl
scas
jo
push
jg
push
rol
ret
sub
pop
sarl
ds
cs
das
push
lret
ljmp
clc
inc
jbe
aaa
popa
ja
mov
sbb
dec
insl
cli
push
xchg
les
ds
addps
jns
ffreep
pop
jae
fsub
les
sarl
pushf
add
jns
mov
adc
fidivrs
sub
and
ss
rcrl
scas
ror
mov
sti
aad
pusha
loop
jg
mov
mov
mov
jge
and
mov
int3
pop
pusha
ja
je
std
xlat
adc
daa
pop
push
inc
dec
and
mov
cmpsb
pop
leave
mull
test
mov
and
nop
int3
stos
rclb
pop
pop
dec
lock
adc
push
adc
pop
push
mov
xor
xchg
cmpsb
jl
jnp
fsubp
mov
xor
hlt
push
or
push
and
lret
pushf
scas
cmp
mov
cmp
fdivrp
xchg
shll
mov
lahf
or
push
jecxz
ret
push
lahf
adc
addb
jg
aas
les
jbe
arpl
lods
rcl
lock
int3
lods
cmp
aas
mov
out
icebp
cli
outsl
lock
mov
push
dec
adc
cmp
cmc
ret
icebp
cmpsl
test
pop
shld
dec
cmpsl
jns
jns
jecxz
faddl
adc
js
pop
fcoms
outsl
mov
add
pop
xchg
or
jnp
outsl
ss
xor
imul
stc
inc
imulb
sbb
cmp
add
js
mov
push
aas
lods
adc
dec
dec
lods
push
mov
mov
dec
iret
cmc
repnz
mov
rcr
lret
mov
mov
fidivl
mov
mov
sbb
imul
fwait
mov
xor
dec
loopne
loope
movsl
push
xor
femms
add
mov
es
xor
add
call
aad
push
sahf
push
add
popa
lds
and
xor
fcompl
mov
ja
adc
mov
dec
sub
loope
lds
mov
xor
andps
mov
lods
xchg
punpckldq
mov
addb
dec
loope
loopne
adc
enter
sbb
inc
xchg
mov
mov
test
ds
test
jae
xor
mov
push
inc
lcall
sbb
dec
or
mov
shr
loopne
jae
enter
dec
pop
xchg
mov
jbe
adc
mov
sub
cmc
xchg
subl
jp
das
adc
clc
mov
add
push
lods
sub
int3
sub
dec
js
xchg
adc
ret
cmp
stc
insb
add
add
outsl
xchg
xor
dec
aas
mov
outsb
dec
jbe
adc
mov
shrl
add
call
dec
add
daa
das
repnz
jle
movsl
push
rcr
jae
rcrb
lods
mov
lock
xchg
shll
mov
enter
insl
adc
adc
add
xchg
aas
insb
xchg
sbb
mov
std
jmp
cmpsl
and
ljmp
dec
repnz
out
ret
ret
cli
stos
jmp
cmp
sti
call
fisubl
mov
cmpsl
arpl
pop
jle
mov
lds
jnp
cmpl
or
outsl
mov
mov
rcl
insl
outsb
sti
push
cmp
push
jnp
pop
adc
decb
push
and
pop
xchg
pop
sahf
xor
and
repnz
jle
test
xor
fnstsw
sahf
fistl
popa
mov
mov
inc
movsl
add
push
andl
ret
mov
and
jecxz
lret
push
iret
sub
mov
xchg
sub
mov
cmpsb
rorl
add
add
repz
in
pop
adc
mov
jge
lds
or
jns
gs
or
lret
pushf
xor
xchg
cli
mov
sbb
frstor
dec
xor
lods
push
push
hlt
ret
sub
out
mov
inc
add
mov
mov
daa
sub
dec
pop
jae
mov
dec
add
testb
push
push
clc
xchg
sbb
ja
mov
mov
xor
imul
jp
ficomps
shlb
lods
cmp
inc
insl
imul
sbb
sti
mov
push
leave
loopne
mov
push
jns
mov
jns
mov
lcall
lea
repnz
adc
sarl
in
ja
push
dec
sbb
pop
mov
sbb
mov
subb
or
xor
andb
sub
pop
insl
mov
adc
dec
mov
loop
jno
stos
rcrb
scas
divb
into
dec
pop
xchg
fcoml
jp
aas
xchg
cmp
das
movb
sub
lea
enter
ds
adc
and
xchg
adc
push
addr16
mov
xchg
pop
rol
sahf
nop
xor
jg
mov
pusha
xchg
push
ret
out
mov
mov
xor
les
fwait
sbb
ljmp
addb
mov
pop
push
hlt
push
mov
xor
xor
popa
in
lret
lea
stc
or
or
xor
add
bound
inc
push
or
mov
mov
jae
sub
mov
shl
stos
add
mov
test
jo
stos
mov
stos
mov
dec
and
mov
cmp
and
mov
cld
add
stc
sub
xor
fstp
and
sbb
mov
sbb
sarl
mov
imul
mov
xchg
mov
outsl
pop
mov
lods
ja
dec
add
imul
adc
out
loop
dec
xor
setp
mov
rcr
mov
push
xchg
fdivs
inc
not
sub
mov
icebp
fldt
or
and
pop
pop
popa
dec
sarb
les
xor
mov
push
mov
shlb
sbb
lahf
ds
mov
push
push
fildl
test
les
outsl
jo
jmp
aaa
mov
cwtl
addr16
insl
jo
push
je
sarl
jmp
popl
xchg
inc
sbbb
dec
cmp
int
in
or
bound
gs
mov
push
push
addr16
dec
lret
cmp
sub
repnz
push
xchg
inc
push
sbb
cmp
dec
ljmp
cmp
jecxz
mov
adc
loope
and
sub
icebp
push
adc
mov
xor
inc
push
and
div
sub
and
xor
js
sub
add
dec
icebp
cmc
outsl
adc
jno
dec
movsl
shlb
outsb
aad
pushf
jb
sbb
lock
jae
aad
hlt
call
xor
push
and
mov
lret
jo
jl
xor
outsb
pusha
lahf
sbb
fxch
dec
aas
sti
arpl
jne
or
adc
fldt
leave
fldcw
jb
andb
push
jmpw
sub
xchg
dec
lret
pop
or
jg
mov
rcrb
mov
or
inc
in
pop
mov
lea
pop
sub
fdivl
inc
insb
xchg
sti
ds
stc
and
dec
add
outsb
scas
dec
mov
inc
idivb
lahf
imul
sub
pushf
push
dec
or
cmpsb
sbb
dec
es
mov
call
sbb
je
in
arpl
sub
pop
push
or
push
or
int3
mov
imul
jmp
ficompl
mov
into
sti
rcl
fstpl
stos
inc
repnz
mov
out
jg
outsl
call
xchg
ja
fwait
je
and
sarb
push
je
pusha
pop
or
mov
lods
fistpll
dec
cmp
push
or
mov
adc
mov
mov
adc
or
add
pop
push
shll
push
pop
mov
mov
fsubrl
int3
mov
xorl
inc
jmp
imul
inc
in
movsl
mov
iretw
movsb
inc
stos
rolb
fldl
add
jbe
mov
addl
int3
arpl
inc
mov
repz
dec
jbe
pop
out
dec
add
mov
push
shrb
mov
cmp
out
add
inc
and
aaa
icebp
dec
sbb
ret
adc
and
rcr
pop
lcall
jge
std
mov
fdivrs
scas
mov
mov
sti
popf
fiaddl
and
je
insb
sub
enter
sbb
xor
cmp
sahf
inc
fwait
orb
pop
sbb
mov
arpl
and
dec
jg
push
add
mov
insl
pop
adc
pop
xchg
xchg
rol
sub
mov
pop
cmc
std
repz
fsubrs
ss
std
add
scas
mov
jno
imul
outsb
xor
cmp
cmpsl
xor
adc
fwait
inc
and
aam
repz
fsubrl
test
movsl
sub
mov
and
incl
pop
mov
sub
js
test
ss
int
sbb
imul
pop
nop
popa
jne
xchg
mov
push
jecxz
pop
add
dec
mov
aas
sbb
cmp
mov
lods
enter
cmp
jmp
xor
lods
movsb
or
jo
adc
enter
jle
push
test
jmp
ss
pop
fwait
pop
sbb
jno
and
aas
out
inc
jmp
in
nop
sbb
mov
out
xor
jo
adc
cltd
sub
shll
inc
jle,pn
push
inc
sub
movsl
dec
mov
adc
adc
dec
std
xor
mov
dec
xor
movsb
add
imul
leave
dec
data16
lret
jmp
nop
daa
call
sub
or
arpl
in
shlb
es
or
imul
push
mov
add
mov
xchg
outsb
mov
cli
adc
xor
mov
push
dec
lret
push
je
lock
iret
xchg
mov
jbe
popl
out
or
dec
cli
pop
loop
xchg
in
lock
adc
xchg
xchg
push
lcall
adc
push
scas
sbb
fldt
or
xchg
ret
inc
push
cli
mov
sbb
incb
or
pop
stos
mov
inc
scas
lods
out
mov
xchg
push
push
sub
add
idiv
add
mov
fnsave
leave
sarl
cwtl
or
or
lret
fdivrl
jb
lret
or
in
mov
cmp
dec
cltd
and
ficomps
mov
in
pushf
xchg
dec
lods
lahf
aam
mov
sarl
mov
mov
and
fdivr
dec
xchg
imul
mov
orl
in
sub
enter
std
loope
xor
shll
or
jg
popf
mov
sbb
arpl
xor
dec
sahf
dec
loope
cmp
lahf
mull
pop
test
inc
sub
repnz
mov
sahf
into
mov
mov
in
xlat
sahf
imul
sub
lret
mov
jp
mov
inc
cmpsl
mov
mov
mov
or
aam
pop
jbe
add
sbb
mov
int3
int3
into
or
cli
imul
xchg
jg
xchg
dec
or
xchg
das
sub
popa
call
jae
movsb
in
iret
jns
mov
xor
mov
push
xchg
xchg
cmpb
push
ret
pop
int3
xchg
fs
pop
and
push
add
inc
dec
aaa
xlat
add
jp
ror
lahf
xchg
sarb
xchg
scas
push
mov
fisttps
adc
ret
insb
push
and
mov
mov
cs
mov
mov
ja
mov
and
arpl
shl
push
loop
stos
inc
xchg
push
cmpsb
cmc
clc
clc
ljmp
sub
cmp
ljmp
int
and
pop
sbb
adc
mov
test
andl
jle
mov
lcall
in
or
dec
sbb
inc
lock
sbbl
mov
dec
adc
js
sub
shll
aad
lcall
popa
popa
mov
daa
mov
cld
in
push
std
adc
push
adc
dec
ficoms
shlb
pusha
xchg
cltd
rcll
mov
cli
scas
call
rcrl
scas
lea
loope
stc
rolb
jge
aaa
in
inc
sub
mov
sub
adc
ret
xor
insl
es
inc
popf
shlb
cmp
imul
leave
jnp
xchg
movsb
sub
test
sub
dec
out
sbb
sbb
std
aaa
dec
jb
dec
push
sbb
mov
or
test
pop
ljmp
mov
ret
aam
inc
sub
mov
cmp
mov
xor
cwtl
test
xchg
mov
call
jo
shlb
es
inc
mov
mov
pushf
jge
or
shrb
mov
cmp
shlb
popf
repz
xchg
dec
out
push
js
sub
lea
jb
sub
push
seta
int3
cmp
loop
ja
je
jg
xchg
lods
cmp
frstor
aad
jecxz
cmpsl
sahf
and
xor
ss
sbb
stos
loop
stc
dec
push
filds
ret
xchg
rorl
bound
or
hlt
dec
mov
mov
popf
scas
fmul
xchg
mov
sahf
push
dec
or
add
pop
pop
in
add
in
jno
jne
int3
insb
push
test
inc
sbb
nop
lods
xchg
outsl
sbb
lods
jb
ret
movsb
xchg
pop
or
push
cld
pop
test
sbbl
in
push
std
loop
fnstenv
jno
add
dec
sbb
lods
mov
mov
sub
mull
gs
ja
adcl
cmp
das
ficoms
enter
fnstsw
lret
push
xor
sub
xchg
mov
fidivs
mov
xchg
sub
pop
or
and
ja
insl
pop
xor
jae
push
sub
rorb
xor
adc
pop
sub
mov
insl
fwait
int3
stos
pop
mov
call
sub
push
repz
mov
push
std
jbe
add
pop
ja
mov
ljmp
mov
aaa
xchg
adc
xor
push
rclb
stos
xor
push
cli
out
or
fnstcw
outsb
popa
call
jnp
jo
mov
call
fnstcw
sbb
fidivrs
icebp
adc
rolb
leave
sub
repnz
dec
push
cld
jmp
movsl
out
loopne
rorl
mov
movsb
cltd
push
xor
fsubs
mov
jecxz
rcrb
push
inc
stos
mov
jne
mov
jle
add
pop
sbb
sub
clc
inc
mov
pop
out
and
sbb
push
add
cltd
loopne
and
and
mov
dec
and
insb
xchg
movsl
loope
sub
xlat
lock
ret
mov
in
in
xor
fstl
mov
iret
rolb
mov
push
divl
psubusb
add
je
js
xchg
inc
orl
cmp
add
cltd
orl
and
leave
popf
es
das
loop
cwtl
adc
dec
push
in
add
xchg
insb
imul
test
loope
rclb
sub
addr16
rcl
lcall
jae
popf
mov
mov
and
sbb
hlt
jmp
repnz
mov
mov
fadds
push
rcl
add
pop
clc
sbb
jnp
lret
add
dec
js
sbb
mov
mov
test
mov
rorb
push
mov
push
das
repnz
jge
outsl
addr16
adc
cmp
mov
jbe
xchg
sbb
sbb
out
or
cmc
pusha
jnp
cmp
inc
mov
js
pusha
add
das
sahf
or
cmpsb
add
cwtl
jne
sbb
in
fimuls
mov
aaa
add
push
mov
adc
mov
bound
fdivrl
cmp
out
pop
inc
loop
outsb
push
push
addr16
ja
push
or
push
fimuls
test
jns
out
insb
and
in
sbb
jae
jno
fldt
xorb
loopne
mov
pushf
mov
flds
push
pop
and
add
es
and
mov
enter
int
pop
negb
stos
push
mov
jg
or
les
decl
xor
inc
mov
jno
sbbb
add
fistl
xchg
mov
jmp
push
cmpsl
lret
xor
sbb
popa
mov
sub
xor
aas
imul
hlt
cltd
dec
push
aas
sahf
jp
fidivl
xchg
das
rorl
int
jno
push
mov
push
xor
jmp
pop
xor
or
sub
nop
jbe
aad
scas
sar
insb
add
sub
hlt
push
dec
clc
insb
jl
popl
add
iret
les
call
test
jge
xor
aam
dec
cmp
push
add
adcb
inc
cmp
cmp
push
sub
inc
insl
stos
out
movsb
popa
out
ret
and
add
insb
rorb
sub
mov
or
xchg
jb
mov
jl
aaa
jl
lock
cmp
mov
add
pop
xchg
mov
sub
stc
fwait
mov
dec
and
fidivl
shlb
pop
jp
xor
sbbb
sbb
arpl
ret
pop
mov
cmp
and
les
jl
jmp
and
popf
daa
rorb
mov
je
and
shlb
lret
add
rcrl
lcall
dec
push
jae
mov
pop
cmp
pop
jg
jle
iret
test
or
stos
fistpll
or
mov
jp
sub
mov
push
cli
jns
sub
inc
pop
repz
pop
jo
aad
and
repnz
int3
cmp
push
pushf
repz
into
sarl
popa
adc
int
shrl
xor
stc
jmp
into
inc
addr16
pushf
and
nop
sub
xor
loopne
jne
out
push
xorb
push
scas
jecxz
sbb
stc
cmp
in
push
jnp
inc
xchg
pop
push
adc
lret
movsb
data16
xor
int
hlt
dec
mov
fs
xchg
add
xchg
cltd
clc
xor
inc
jns
mov
and
rolb
mov
cmpsb
pop
decb
addr16
aas
loope
divps
movsb
dec
adc
sti
inc
dec
jl
and
xchg
push
xchg
test
scas
pop
repnz
mov
xor
add
adc
loope
icebp
rcrl
push
mov
pop
xchg
dec
popa
mov
push
mov
xor
add
adc
loope
icebp
rcrl
push
mov
pop
xchg
dec
popa
mov
push
mov
xor
ficoms
into
loope
icebp
rcrl
push
mov
jle
dec
popa
mov
push
and
xor
add
into
loope
icebp
test
sarl
idivb
xchg
jle
outsb
mov
pop
imul
insb
mov
fsts
test
push
jns
imul
sbb
or
stc
daa
jmp
adc
cltd
inc
mov
mov
dec
mov
cld
sub
sbb
or
stc
lret
jo
adc
ficoml
loopne
or
icebp
and
or
repnz
adcb
ret
add
inc
xor
and
mov
xchg
hlt
cmpsb
or
sub
in
loope
inc
movsl
frstor
adc
test
sbb
fiaddl
icebp
insb
mov
cmc
shll
cld
cmc
leave
mov
and
mov
dec
mov
test
push
inc
popf
or
or
lret
ss
add
sub
mov
mov
or
xchg
adc
test
xor
jmp
inc
mov
arpl
mov
pop
mov
adc
add
mov
movsl
imul
sbb
or
stc
cmp
leave
or
jge
bound
rorb
pop
test
xchg
pop
mov
fwait
jbe
lea
stos
push
mov
or
es
inc
stc
cmp
fstpl
nop
pop
xchg
pop
mov
mov
leave
push
dec
pop
int3
sbb
sub
xor
in
rcrb
in
loopne
mov
cmc
sbb
or
stc
and
leave
adc
cltd
inc
mov
movsl
imul
sbb
or
stc
and
leave
adc
cltd
inc
mov
movsl
or
les
nop
dec
jns
cmp
out
movsb
sbb
push
arpl
and
push
rorb
mov
dec
pop
faddl
jne
pop
clc
pop
popf
pop
add
mov
shr
or
fscale
jb
xchg
sub
mov
imul
mov
test
inc
jle
jmp
add
mov
hlt
jne
in
add
and
mov
rcrl
xor
dec
inc
in
xor
pop
pop
jl
pop
pop
test
insb
and
shl
cld
dec
xchg
pop
imul
pop
ss
inc
frstor
mov
and
mov
mov
in
jae
adc
jae
mov
mov
lock
xchg
pop
cmp
xor
cs
cwtl
sbb
stos
xlat
outsb
mov
popa
lods
mov
cs
cld
push
shlb
bound
gs
adc
inc
stc
fwait
lret
nop
cmp
jecxz
push
scas
ret
pop
push
push
xlat
ficoms
push
aam
pop
clc
mov
jp
ret
repnz
test
cli
or
pop
dec
push
cmp
lcall
xlat
testb
lcall
push
pop
out
test
fisttps
or
not
jg
aam
sbb
lcall
adc
inc
cmpsl
mov
sbb
aam
sbb
aas
push
sub
pop
sbb
push
outsb
lcall
mov
loop
outsb
or
dec
and
ja,pt
inc
push
out
sub
xchg
push
testl
mov
add
xor
cli
or
jecxz
push
clc
test
sub
out
sub
je
sub
push
jbe
movsl
jae
out
jmp
negl
das
stos
cmc
ret
loop
lret
push
mov
sbb
inc
and
sub
or
ljmp
jb
pop
add
mov
aaa
mov
movsb
call
push
std
dec
xor
daa
mov
inc
test
push
lods
ss
iret
repz
outsl
ljmp
cmc
leave
jge
xorb
or
xchg
ret
inc
js
inc
jbe
ljmp
dec
scas
popf
and
das
cmp
das
jno
mov
pop
fists
out
mov
sbb
jnp
mov
pop
push
rcrb
pop
inc
cwtl
nop
popa
sahf
lds
loopne
or
cmp
xchg
cli
inc
cmp
adc
movzwl
push
jge
ficoml
pop
sti
ljmp
jle
lock
push
push
jnp
adc
in
mov
pushf
mov
add
lock
fldl
gs
lods
pop
fucomp
mov
mov
out
test
repz
dec
inc
cmpsb
in
ficoms
xchg
and
scas
int
or
loop
or
testl
jg
fisubs
mov
pushl
inc
jne
jl
int
std
xchg
jnp
insl
pop
jecxz
inc
xor
outsl
mov
xchg
xor
std
inc
xchg
pop
inc
inc
jb
jb
xchg
mov
sbb
dec
cmova
in
mov
sbb
push
decl
sarl
mov
sbb
int3
xchg
jae
xor
neg
pop
push
enter
fxch
lcall
jle
push
in
pop
push
xchg
imul
insl
je
aas
mov
sbb
sbb
mov
inc
sub
sub
rcrb
pop
fdivr
fcomi
in
call
loop
shrb
inc
je
das
popf
push
and
add
in
pushf
dec
fbld
xor
mov
sbb
lea
xchg
mov
ret
dec
rcrb
out
je
mov
inc
lret
dec
test
jb
dec
bound
cmpsl
imul
xchg
and
jnp
das
mov
movsb
inc
inc
mov
pop
mov
rolb
js
or
xchg
lds
push
lods
in
and
add
mov
mov
movsl
mov
mov
jae
sub
xchg
jle
ret
div
jae
dec
mov
ja
lcall
sub
and
movsl
bound
leave
xlat
pop
scas
mulb
or
pop
in
out
lret
nop
sub
or
cmp
xor
cmpsb
fidivs
cmp
jae
imul
fsubrp
pushf
stos
mov
inc
cmpb
sub
hlt
mov
dec
outsb
mov
ja
ss
not
jle
fiadds
pop
fisubl
and
adc
add
aas
mov
stos
cmpsl
mov
outsb
mov
repnz
dec
pop
stc
push
or
rcll
pop
daa
dec
test
sbb
pop
cmp
push
dec
aam
outsl
or
les
movsl
and
in
push
rclb
cmp
outsl
jmp
pusha
cmp
cmp
xchg
and
ret
ds
lahf
andl
lds
pop
mov
jb
je
adc
and
cmp
imul
lahf
add
cwtl
popf
or
scas
and
aas
adc
xchg
repz
pushf
adc
fcompp
test
lods
dec
jbe
fildl
and
xor
push
ret
outsl
pop
jg
ja
push
mov
test
dec
push
movsb
inc
dec
les
xchg
lock
cmp
cmpsb
aaa
mov
cs
jecxz
mov
jecxz,pn
sbb
xor
pop
daa
inc
lret
push
sti
lods
subb
jg
das
add
mov
cmpb
clc
cmp
sbb
je
mov
nop
push
pop
xorl
sub
sbb
repz
test
clc
xorb
mov
ss
fs
out
ja
addr16
inc
xchg
xchg
js
xchg
xchg
pop
ljmp
insl
dec
add
in
fnstsw
jno
shlb
lods
pop
mov
mov
or
in
roll
insb
sub
xorl
push
cmc
push
xor
mov
leave
lea
loope
add
das
jno
scas
das
xchg
scas
in
and
push
insb
push
sub
push
ret
gs
sub
mov
jnp
mov
mov
lfs
push
pop
pop
loope
nop
xchg
mov
fxch
stos
ljmp
pop
add
out
shl
bound
mov
push
mov
addl
aam
jae
cwtl
shlb
lods
mov
and
int3
or
clc
add
pop
ror
jmp
xchg
es
rorb
and
cmc
sub
mov
xchg
inc
repnz
and
pop
das
adc
and
mov
mov
dec
dec
and
cmc
xor
or
mov
sub
out
dec
jg
inc
cs
adc
sub
lock
out
mul
mov
fnclex
fstl
dec
fbld
mov
rorb
mov
push
scas
inc
js
cmp
sub
stc
in
icebp
pop
xchg
rcrb
sub
es
mov
cmp
jle
aam
adc
shrl
inc
add
xchg
fbld
mov
es
rcrl
mov
push
in
or
inc
shll
cmpsl
sbb
imul
icebp
jecxz
xchg
fsubrp
or
push
in
sub
into
aaa
outsl
in
bound
in
aad
imul
jmp
pushf
test
pop
pop
xor
pop
push
int3
mov
push
push
stos
jo
jnp
pop
call
xor
cmp
je
iret
shlb
int
enter
pop
xchg
out
adc
mov
and
lds
lret
stos
gs
ficoml
or
sub
aaa
cmp
push
stos
das
cmpsb
or
les
rol
and
mov
lret
clc
sbb
fcmovnbe
and
adc
fistpl
cmp
and
bound
push
lret
imul
mov
pop
flds
in
or
cld
sti
scas
dec
popa
mov
pop
stos
lock
leave
pop
pop
jl
jns
push
adc
orl
cmp
pop
fucomp
sahf
ljmp
sar
cld
popa
and
movsb
cli
mov
add
xlat
mov
xlat
push
lock
cld
repz
sub
fbstp
fidivl
lods
addr16
bound
jns
xchg
sub
jne
popf
mov
pop
gs
pop
cmp
pop
sbb
mov
lea
fmul
xchg
or
pusha
rcr
lret
xor
jl
leave
leave
xor
pop
cli
cmp
bound
ret
dec
shl
ljmp
inc
icebp
mov
ret
ljmp
mov
mov
lea
out
rorl
cltd
mov
insb
mull
outsb
nop
daa
popf
fsubs
mov
cmp
pop
inc
aas
xchg
jns
loopne
sbb
icebp
xchg
test
push
aad
add
sbb
lcall
idivb
jecxz
nop
shll
push
fwait
arpl
dec
roll
dec
push
xor
inc
pop
dec
pop
add
sbb
mov
adc
add
xor
in
mov
sar
movsl
orb
and
add
movsl
ja
imul
imul
icebp
pop
jmp
push
and
xchg
lods
dec
push
xchg
pop
loop
movsl
popl
dec
push
cmp
cmpl
fmulp
mov
inc
movsb
xor
sbb
sub
cmc
pushf
repz
fnstcw
push
cmp
mov
enter
pop
clc
pop
jmp
scas
rcl
jo
inc
xchg
out
mov
movsb
popa
scas
fidivs
aaa
pop
lret
jle
ret
or
lret
inc
rorl
mov
enter
xchg
and
push
int
push
xlat
repnz
mov
xchg
imul
adcb
sub
aam
and
xchg
mov
push
xlat
inc
fldenv
and
lods
cwtl
imul
lahf
jecxz
rorl
and
xor
mov
mov
push
addr16
cmc
ljmp
movl
lds
mov
mov
push
call
xlat
test
lahf
and
shl
fwait
repz
out
popf
fs
je
or
rol
test
adc
or
mov
dec
adc
push
loop
sub
mov
dec
add
dec
inc
or
cmpsb
xor
dec
loop
and
cs
std
stos
cmpsb
xchg
pushf
or
test
test
xchg
adc
pop
cmp
mov
stos
jb
sub
adc
filds
dec
mov
sbb
js
mov
loope
fldenv
and
test
pop
gs
mov
lock
ljmp
push
push
push
les
call
mov
lea
xchg
jmp
aas
mov
jbe
mov
adc
lods
sub
lret
inc
xlat
stc
cli
int
sti
mov
adc
and
arpl
jno
pop
in
mov
sbb
and
popa
ss
or
push
aaa
mov
xlat
cmpsb
push
xorl
cmp
push
mov
movsb
enter
int3
jg
insb
add
xchg
out
pop
sub
or
xor
jo
imul
adc
pop
in
out
inc
mov
cld
dec
xchg
jmp
scas
call
adc
mov
je
add
dec
or
and
add
imul
out
pop
stos
adc
stos
sub
scas
mov
xchg
xchg
ljmp
mov
mov
aad
scas
xchg
in
das
data16
cmpsb
fistl
das
loop
daa
mov
xor
cmp
popa
in
dec
and
rcl
pop
xchg
dec
cmp
fstps
incl
cmp
sbb
lods
mov
fisubrl
dec
jge
nop
sub
test
stos
outsl
mov
in
xchg
in
int3
lahf
sub
mov
scas
jno
in
ret
mov
push
das
test
lret
aam
xor
lods
loopne
add
jge
jl
mov
xchg
enter
sbb
push
js
adc
stc
fmulp
movsl
lahf
fs
xchg
movsw
sbb
mov
jmp
dec
mov
in
adc
push
mov
imul
enter
jg
inc
stc
jnp
es
shl
sbb
idivb
inc
mov
iret
jle
aam
add
enter
shll
sarl
mov
cmpsb
push
mov
sti
cmc
mov
arpl
mov
repnz
mov
lret
popa
cmp
es
cmpsb
clc
jb
mov
mov
mov
adc
lret
out
xor
lret
xlat
iret
notb
dec
adc
inc
add
and
jb
repnz
repz
repnz
addl
xorl
add
cmp
jl
lea
ret
pop
push
pushf
loopne
mov
dec
xor
lods
daa
xor
outsl
cmp
jbe
sub
xor
xchg
sub
jge
cmp
hlt
clc
scas
cld
out
jmp
repz
stos
loopne
push
xor
jnp
sub
mov
ss
cli
or
movsb
push
dec
xchg
and
mov
das
cmp
dec
fwait
je
inc
xchg
dec
adc
push
lahf
jns
mov
sub
jl
add
test
inc
pop
outsb
test
cmp
loop
lcall
movsl
add
pop
and
ja
repz
jmp
jmp
out
cld
or
shlb
sar
cmc
fstps
std
cmp
jno
add
bound
or
sub
jne
push
jne
xor
mov
mov
cld
mov
cld
and
dec
mov
add
push
inc
cmp
xor
sbb
fsubr
mov
subb
cld
rorb
movsb
jno
jo
sub
mov
and
mov
jae
push
sbb
imul
and
push
push
push
push
lods
mov
cli
lods
cmp
pop
inc
jnp
sub
jo
jmp
cmc
mov
bound
xchg
les
nop
lahf
pop
dec
sub
cmp
rcrl
orl
adc
rorb
jne
bound
pushf
sbb
inc
jns
dec
push
gs
sbbb
aam
xchg
xchg
call
rolb
pop
cli
mov
inc
ljmp
xchg
xlat
fwait
stos
xchg
bound
push
fsubrs
hlt
mov
or
ficoms
mov
jae
mov
inc
insl
popf
mov
orl
outsl
xor
cwtl
sub
jo
sbb
lret
push
movsl
sbb
xor
jo
xchg
rorb
popa
push
lods
rorb
pop
cmpl
in
or
jl
push
dec
adc
sarb
pushf
out
and
add
jno
inc
xor
pop
mulb
sbb
sub
movsb
inc
pushf
or
repz
xchg
xorb
jg
in
cltd
jb
ret
fstpt
cmc
stos
in
fcomps
add
testl
cld
add
pusha
imull
jge
lods
cmpl
sbb
sti
mov
mov
adcb
cmp
jp
add
inc
iret
icebp
insb
or
lret
adc
add
mov
outsb
or
mov
lret
mov
push
jecxz
jne
ffree
push
mov
out
pop
imul
sub
lcall
hlt
inc
jb
test
mov
jae
cmpsb
bswap
cmpl
out
pop
ret
rorl
jecxz
cmp
ljmp
movsl
ffreep
shrl
jp
sti
lcall
cld
ds
add
testb
dec
and
scas
push
xor
or
xchg
mov
f2xm1
pop
sub
lret
cltd
add
cli
fildll
fs
ret
lods
inc
sbb
mov
sub
sbb
test
in
mov
mov
dec
fldenv
xchg
push
fistps
mov
js
inc
push
push
pop
shrb
pop
push
movsl
dec
daa
xchg
aaa
xor
lea
bound
add
pop
dec
jle
dec
roll
mov
push
sbb
daa
mov
aad
xor
pop
ret
dec
mov
cmc
jne
addr16
mov
ret
xchg
rcr
dec
pushf
or
adc
loope
push
jmp
push
je
mov
xchg
jnp
push
mov
aas
mov
mov
xor
sahf
jle
adc
xor
dec
stos
lds
imul
cmp
mov
pusha
jg
insl
cmp
mov
cmp
sarb
and
add
rcll
lods
mov
pop
data16
jno
ds
dec
mov
jge
push
adc
nop
mov
sub
adc
lods
mull
outsb
push
rcrb
mov
test
push
mov
sub
test
sahf
movsb
cli
mov
jnp
adc
out
mov
adc
adc
inc
insb
push
dec
pop
shrl
mov
lret
mov
cmc
aam
add
add
int3
jno
and
xor
mov
movsb
pop
leave
push
or
push
shrb
fcmovnu
fs
insb
jnp
js
push
mov
xor
test
outsb
jno
cli
jg
xchg
ret
mov
sbb
out
jmp
pop
jge
out
in
mov
sarb
and
mov
mull
pop
cmp
je
cltd
fimuls
xchg
push
mov
dec
fwait
mov
leave
adc
repz
mov
adc
scas
mov
mov
aam
mov
dec
mov
lahf
jno
repz
pop
mov
mov
and
adc
mov
pop
loopne
les
movl
and
xchg
pop
add
pop
push
repnz
mov
push
mov
pop
adc
mov
mov
push
mov
out
and
out
mov
pcmpeqd
icebp
or
push
loopne
mov
xchg
mov
xor
dec
cmp
jge
test
sub
sti
das
or
test
jno
mov
ret
or
out
les
mov
clc
cmp
sti
mov
hlt
sbb
mov
icebp
jmp
popf
jp
out
popa
mov
xchg
bound
jg
pop
mov
stc
push
out
mov
test
es
add
icebp
mov
xchg
pop
aam
dec
xor
pop
sbb
pop
fs
unpckhps
test
add
aam
cmp
lret
or
xor
jns
fs
pop
lds
ja
hlt
fisttpl
jae
xor
xor
fwait
jl
arpl
xchg
jge
fcoml
and
iret
and
mov
mov
cmp
les
xor
push
roll
cs
push
mov
or
push
xlat
inc
mov
jg
movsb
lahf
inc
sub
mov
test
std
mov
mov
orb
in
xor
fbld
lods
xor
lea
ljmp
loopne
aam
pop
shll
mov
ficoms
mov
inc
cmpsb
adc
js
lea
fadd
cmp
sub
add
das
mov
mov
cmp
testb
add
pop
ss
mov
dec
mov
out
fcmovne
xchg
dec
push
out
bound
out
jp
mov
daa
filds
push
loope
inc
lock
or
mov
repz
jmp
pop
sbb
lods
loopne
inc
pop
jno
cmpsb
mov
jbe
lahf
push
movsl
add
and
loop
xor
nop
and
cmp
mov
mov
mov
pop
dec
sub
arpl
and
andl
mov
adc
in
cmc
jmp
gs
popf
bound
pop
push
push
fiadds
xlat
inc
out
test
xchg
pop
loopne
leave
or
testb
loop
cmp
iret
dec
pop
scas
into
dec
inc
inc
aad
data16
add
mov
inc
sbb
out
mov
add
sub
push
into
mov
loope
cmp
or
insl
dec
inc
pop
dec
xor
jl
sbb
fldpi
fs
into
sbbb
pop
mov
inc
popf
stos
or
inc
push
int
push
mov
mov
gs
pop
lods
fidivl
loop
or
push
xor
xor
jle
fwait
daa
dec
mov
incb
out
jge
xor
and
adc
cmp
adc
leave
mov
add
push
jl
mov
or
push
mov
test
sti
hlt
scas
ja
cltd
jl
mov
xchg
pusha
aaa
lret
fdivl
mov
jae
jge
or
es
push
pop
push
lret
cltd
movsb
fdivr
jecxz
xor
xor
dec
inc
inc
in
or
rorb
mov
inc
inc
push
insl
repnz
push
cmp
fdivl
imul
pop
xchg
cs
ljmp
gs
int
inc
mov
jae,pt
rorl
mov
xchg
add
cltd
xchg
lea
mov
out
mov
movsl
xchg
inc
in
inc
dec
cmp
adcl
rol
dec
aaa
ret
gs
cpuid
sar
pop
sbb
dec
imulb
jb
inc
push
and
or
jge
sbb
test
in
insl
lds
clc
ja
mov
xor
mov
push
xchg
cmp
sub
sbb
or
stc
and
leave
adc
cltd
inc
mov
movsl
imul
sbb
or
stc
and
leave
adc
cltd
inc
mov
movsl
imul
sbb
or
clc
and
enter
test
push
jns
imul
cltd
lds
lahf
jae
leave
into
in
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
leave
xor
and
adc
add
add
jae
inc
dec
std
pop
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
mov
leave
lahf
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
addb
jbe
pop
mov
mov
add
adc
fadds
sub
loopne
mov
repz
cmp
stos
mov
push
xchg
cltd
out
pop
inc
dec
mov
fcompl
xchg
div
sbb
jle
mov
cltd
xor
cs
jns
add
and
or
rcrl
fs
push
cmp
jbe
pop
cmpl
push
scas
rorb
les
xchg
pop
adc
repz
sbb
ss
cmp
inc
push
mov
sti
cltd
ljmp
pxor
insb
add
pop
mov
cmp
sub
jb
dec
jb
stos
and
mov
lock
imul
repz
mov
sarl
and
adc
add
push
mov
mov
or
sbb
sub
cmp
adcb
add
adc
cmp
imul
sbb
lods
push
mov
add
cmp
daa
sub
or
imul
out
popf
ja
inc
test
ja
imul
cltd
arpl
mov
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
mov
or
sbb
sub
cmp
leave
xor
dec
je
shll
mov
dec
add
pop
push
out
sub
xor
mov
mov
cmpsb
daa
insb
xchg
mov
mov
cmpsl
mov
adc
sbb
aam
insl
xchg
or
mov
shrl
movsl
cmp
mov
inc
sub
mov
mov
sub
jl
sub
dec
call
mov
xchg
scas
mov
pop
sub
xorb
clc
lret
jns
or
inc
dec
ret
out
push
cmp
dec
rolb
jle
gs
or
or
push
xchg
cmp
pop
movl
rcll
icebp
les
push
or
push
lcall
frstor
pushf
xchg
js
cmp
outsb
add
shld
scas
fimull
jl
inc
cmpsb
negl
movsl
and
cmc
cmp
adc
and
repnz
inc
loopne
xchg
and
jbe
test
dec
xchg
aaa
fadds
adc
add
cmp
ja
pop
call
pop
int
mov
xchg
mov
movsb
jnp
xchg
lret
fdivl
daa
popf
outsb
xor
insb
pop
daa
mov
pop
jne
cmpsl
outsl
outsl
jns
loopne
stos
dec
jl
xlat
sbbl
repz
lret
loope
jb
enter
mov
sub
xchg
sbb
insb
insb
fcompl
arpl
jbe
fisubrl
mov
insl
inc
mov
mov
fisubl
sbb
mov
sbb
or
aam
mov
stos
cld
aad
mov
xor
cli
push
out
fwait
fs
lods
pop
cmp
imul
mov
scas
push
add
mov
jo
adc
clc
inc
push
adc
xchg
inc
pusha
cmc
movsb
cmpb
out
shll
jnp
jecxz
popa
or
mov
ljmp
pop
push
dec
or
pop
inc
mov
cli
push
sub
popf
insl
cmp
xor
fs
in
shr
mov
test
jg
add
xchg
xchg
in
je
inc
mov
jo
inc
jno
dec
mov
mov
pop
xchg
pop
imul
and
adc
jo
in
orb
rol
add
sahf
push
sub
stos
repnz
xor
sarl
mov
jns
mov
movsb
or
sub
andl
sub
pop
mov
je
lcall
mov
and
push
movsb
mov
xlat
js
popf
pushf
loopne
pop
pop
ljmp
add
jae
cmc
bound
js
imul
imull
pop
hlt
mov
movsb
pop
icebp
sub
stos
xor
test
sbb
sub
int
out
mov
sbb
les
jne
jb
fwait
mov
cmpsb
ja
pop
push
subl
rclb
addl
and
sub
scas
loopne
jb
adc
xchg
test
add
stc
leave
gs
cmc
mov
dec
mov
repz
or
test
pushf
and
inc
cmp
out
enter
addl
jae
dec
push
pop
lahf
inc
pop
fcom
add
sbb
jb
mov
in
xor
mov
lock
rclb
jecxz
xorb
rclb
push
sahf
movsl
adc
adc
push
or
pop
sub
adc
push
scas
repz
push
add
jno
imul
cld
mov
cmpsl
mov
sub
mov
dec
add
cli
inc
insl
lock
fnsave
repz
fwait
lcall
dec
mov
idivl
test
ret
mov
out
mov
pop
sbbl
xchg
jecxz
add
sub
mov
pop
push
mov
scas
dec
jmp
and
or
cmp
inc
push
inc
mov
sti
ss
mov
mov
inc
shll
dec
xchg
push
inc
mov
leave
jmp
bound
enter
xchg
lret
xchg
mov
dec
adc
sarb
or
out
mov
mov
nop
inc
gs
js
gs
imul
sahf
outsl
or
adc
dec
rcl
out
mov
in
ror
xchg
cmpsl
pop
sbb
mov
icebp
rclb
and
ja
sti
mov
dec
mov
jbe
aaa
scas
sub
mov
cwtl
call
pushf
outsl
fstpt
jnp
ja
fs
dec
lods
push
mov
jecxz
sub
out
jo
pop
call
arpl
dec
pop
xchg
xchg
ror
arpl
xchg
mov
inc
enter
jns
push
js
pop
fs
jg
mov
sub
jle
pop
adc
and
ljmp
out
iret
push
xor
ja
adc
cmp
movsb
push
mov
divl
sub
mov
aas
or
out
add
sahf
in
das
and
jne
jmp
cwtl
hlt
daa
or
dec
mov
ja
dec
rorl
xor
scas
cmp
pop
xchg
ja
shrl
or
loop
scas
scas
mov
mov
call
fs
inc
dec
add
ljmp
mov
out
mov
lret
jge
shl
fs
fsubl
add
ja
out
xor
jl
das
js
fsub
mov
mov
push
cs
or
xor
or
pop
pop
flds
ljmp
cmp
adc
xchg
leave
mov
leave
imulb
aaa
pop
scas
cmp
and
dec
clc
int3
sbb
add
mov
adc
push
lcall
xor
xchg
mov
xor
stos
mov
cmc
dec
clc
fcoml
lods
sbb
adcb
call
clc
inc
mov
sub
inc
ja
es
mov
shl
je
dec
and
cmp
lcall
or
loope
in
push
jbe
push
bound
dec
dec
xor
mov
ror
and
fldl
dec
cmp
pop
xchg
mov
xchg
jp
sbb
sbb
xor
mov
jne
rorb
mov
cmpsb
jmp
pop
push
mov
xchg
sbb
jmp
and
xor
adc
sub
dec
scas
mov
xchg
imul
push
add
jno
push
icebp
test
mov
xchg
cmpsb
fisubs
push
stc
mov
mov
inc
stos
mov
out
cwtl
addr16
inc
nop
xorb
xor
int3
jnp
stc
sub
cli
into
xorl
in
shl
mov
movsb
popf
cltd
xchg
push
loope
repnz
loop
mov
jae
das
xchg
pop
jb
xor
and
fsubs
sti
mov
sub
lret
add
mov
cmp
iret
sub
mov
sti
divl
xlat
mov
gs
js
add
cltd
or
out
push
aaa
lret
sub
mov
lods
jno
mov
in
lret
add
jae
ss
jecxz
xor
xor
pushf
sub
pop
cmp
pop
jns
jle
rol
pushf
or
mov
enter
gs
push
cmp
orb
sbb
aaa
cmp
and
in
cmpsl
cmp
jg
push
cmp
or
sbb
add
sahf
lea
add
lcall
nop
mov
pop
xchg
and
aas
ret
ja
cmc
mov
inc
insl
xor
addr16
mov
aam
pusha
sub
xor
bswap
cmc
xor
fnstsw
loope
out
dec
mov
leave
in
sbb
xor
xor
je
lods
test
xchg
int3
xor
jp
pop
sub
and
insl
cmp
sub
dec
es
sbb
jnp
fldt
inc
mov
in
mov
adc
stos
mov
fdivrl
push
push
mov
lds
mov
mov
jb
pusha
fwait
sbb
out
negb
outsl
cwtl
sbb
cmp
mov
cmpsb
xor
adc
inc
mov
call
mov
mov
movsb
push
pop
sbb
test
lock
outsl
inc
fs
dec
and
push
pop
xlat
stos
or
fs
loope
push
in
xchg
fcomp
sbb
pushf
xorl
add
pop
aaa
push
mov
repnz
rcr
mov
loop
in
pusha
sbbb
mov
inc
or
outsl
jge
add
mov
mov
dec
lcall
and
lock
insb
dec
mov
pop
xlat
lods
pop
nop
div
jnp
jp
mov
mov
movsl
aaa
aas
sbb
in
loope
std
add
addl
and
lods
inc
lcall
adcl
jno
dec
jne
sbb
mov
test
mov
jb,pt
int3
add
sub
sbb
pop
dec
scas
sub
aaa
xchg
lods
jnp
insl
dec
jg
sbb
cmp
xchg
sti
inc
pop
imul
inc
sub
ljmp
xor
adc
jl
mov
dec
fisubs
imul
iret
inc
push
push
insb
or
repnz
sub
inc
mov
sbb
std
push
push
pop
adc
mov
lret
cwtl
test
inc
ljmp
jb
jnp
nop
hlt
xchg
roll
daa
sti
sbb
psllw
ror
cli
fmull
mov
sbb
stos
cmp
loopne
insl
lret
adc
mov
jo
add
pusha
xor
xchg
sub
lret
orl
mov
lcall
add
push
movsl
jmp
mov
loopne
bound
cmp
lods
mov
mov
lahf
repnz
movsl
shrb
jno
aas
xlat
add
push
dec
push
pop
and
dec
xor
pushf
loop
sbb
mov
cmp
cmc
insb
cmp
and
insb
jg
icebp
mov
mov
push
push
sbb
sbb
lret
vgatherdps
cli
scas
das
jg
rdpmc
imul
pop
or
xchg
add
lods
popa
push
imul
mov
lea
xchg
xor
scas
int
sbb
jns
mov
into
sub
bound
pop
jnp
or
pop
lcall
aad
mov
or
sbb
repz
loop
push
push
imulb
xor
mov
or
iret
out
aas
lods
or
push
insb
hlt
daa
pop
outsb
jmp
popf
mov
pop
jnp
sub
test
sub
mov
in
shl
fwait
sub
add
xchg
test
sbb
xor
sbb
jae
sahf
inc
insb
jg
ljmp
cmpsl
shll
aas
mov
daa
out
dec
jmp
mov
mov
rcr
cmpsb
add
cmc
xchg
jmp
xor
in
inc
xor
adcl
mov
movsl
sbb
ret
inc
pop
divl
add
mov
call
sub
adc
das
dec
out
rcll
jno
xchg
int3
fidivrs
into
xchg
jae
lds
in
das
shl
setg
ret
sub
dec
cmp
mov
ror
call
out
sub
pop
out
std
mov
fdivrl
aas
xchg
mov
icebp
adc
mov
and
repnz
or
ja
adc
cld
test
mov
mov
add
jno
and
fildll
adc
mov
in
popl
testl
mov
add
test
sbb
cmp
sbb
fldcw
xchg
mov
xor
xchg
int3
icebp
pop
and
or
sbb
xlat
fsts
data16
or
and
ret
insl
jge
jae
das
scas
cmp
ffreep
fstpl
pop
lret
sarb
mov
mov
in
pushf
sbb
dec
mov
stos
xchg
loope
dec
or
cmp
jp
fbstp
inc
out
dec
dec
fcmove
jge
clc
adc
ficomps
mov
adc
loope
xchg
cltd
leave
xchg
ljmp
aam
jmp
jge
xorb
stos
shrb
fwait
sbb
pusha
int
adc
dec
test
aas
dec
inc
jle
jne
push
out
and
xor
pop
es
into
mov
fcoms
xchg
mov
mov
popa
loopne
jne
in
lahf
ret
push
push
cmp
add
stc
mov
pusha
sahf
addr16
and
mov
out
ljmp
mov
shll
cli
push
divb
mov
push
or
push
jg
jo
dec
sbb
xlat
testb
adc
insl
jl
adc
mov
jl
repz
add
lds
or
aaa
push
cs
inc
jae
push
and
aas
stos
dec
sti
aas
scas
xor
jg
jns
loop
jmp
sbb
push
hlt
movsl
icebp
or
mov
imul
ret
rcll
xchg
std
cmp
pop
jmp
sub
int3
test
or
scas
call
popa
mov
sbb
les
out
hlt
sbb
bnd
adc
mov
roll
xchg
cmp
int
dec
psubsb
mov
fs
push
mov
mov
mov
fisubs
gs
mov
les
gs
dec
xor
inc
dec
add
bound
pop
cmp
or
addr16
aad
jo
push
push
push
imul
and
jl
xor
out
pop
xchg
popf
es
idiv
and
ds
ficompl
sbb
mov
cli
mov
add
mov
test
mov
jp
cmp
ret
dec
lds
scas
mov
fnstenv
and
jge
pop
les
divps
packssdw
mov
lods
mov
int
cmc
jbe
les
pop
pop
jmp
sub
or
pop
jl
aad
div
push
adc
insb
test
adc
sbb
in
mov
pusha
int
enter
push
les
daa
dec
shll
psubusb
fildl
fsubrl
movsb
sub
sahf
es
cwtl
push
ret
pusha
mov
jns
ret
ds
lret
add
adc
push
sub
mov
outsb
addr16
jmp
push
push
aad
scas
push
push
pop
sar
icebp
pop
mov
cmc
sub
fmul
inc
mov
push
dec
pushf
xor
fidivl
fs
insl
repnz
dec
xchg
mov
pop
xchg
popf
mov
ret
push
vaddss
nop
dec
pop
ret
sbb
aad
mov
inc
jo
jmp
or
adc
xchg
jnp
bts
in
push
aas
and
push
and
cmovb
dec
in
add
dec
add
je
rol
xchg
dec
imull
cmp
jns
cltd
and
xchg
add
mov
jns
jb
inc
lods
stc
test
push
sarl
in
ja
or
stos
jne
mov
mov
dec
fmull
lcall
jnp
lock
int
mov
aaa
push
stc
lahf
sbbl
or
test
add
test
gs
mov
sub
fcomip
in
pop
daa
aaa
mov
out
dec
cli
pop
inc
and
insb
push
cmp
scas
lahf
jns
icebp
or
in
mov
clc
mov
insb
test
addr16
mov
nop
push
cld
cs
outsl
cmp
es
repz
lock
pop
mov
lret
jae
adc
lods
push
ljmp
lahf
rol
push
mov
icebp
xor
test
jge
call
jno
adc
inc
and
repz
push
or
pop
fistpll
cmpsl
cltd
or
adc
nop
xchg
lds
imul
lock
pop
rcrl
in
lock
add
mov
sbb
push
jecxz
or
mov
roll
pop
lock
mov
fsubrl
jl
push
cmpl
clc
jns
sbb
sub
mov
fnsave
dec
xchg
sti
clc
inc
mov
mov
adc
and
push
imul
outsb
data16
push
or
cmp
lahf
mov
xchg
xchg
inc
cmc
inc
adc
push
lea
adc
scas
xchg
ljmp
or
jg
jp
mov
push
jg
add
sbb
sbb
sub
fwait
outsb
je
jge
push
scas
cltd
neg
jbe
sub
call
pushl
ja
divb
repnz
dec
adc
dec
mov
push
outsl
ss
jmp
pop
in
stc
push
lock
fwait
add
mov
mov
movsb
mov
jmp
out
leave
sbb
jbe
arpl
sbb
push
pop
insl
pop
popa
pop
fcomi
daa
xchg
dec
pop
xorl
stos
cmp
pop
jbe
and
lcall
inc
xchg
sahf
mov
call
push
mov
inc
mov
adc
test
dec
test
sub
lds
dec
mov
call
int3
fdivr
scas
jle
push
lret
mov
or
cmp
les
or
dec
sub
adc
in
in
in
push
jp
ret
in
mov
xchg
clc
aaa
into
sub
not
mov
add
inc
lahf
sbb
dec
sub
push
pop
mov
lcall
add
push
inc
mov
arpl
fs
out
xor
cvttps2pi
dec
sub
mov
je
fsubrp
add
xchg
out
adc
inc
xor
sub
cmp
sahf
and
dec
lods
and
clc
and
out
push
push
in
jno
mov
sbb
xor
iret
daa
into
adc
push
jae
call
nop
mov
add
add
jae
mov
imul
mov
int3
out
mov
pushl
mov
mov
lods
fmuls
dec
leave
sti
daa
sub
addr16
hlt
hlt
pushf
cmp
insb
aad
inc
iret
addl
not
out
in
xchg
shlb
dec
add
cmp
lods
mov
pop
jmp
hlt
in
rcll
dec
sbb
inc
js
jl
cmpsb
or
mov
or
sbb
stc
shl
lcall
jbe
lcall
in
sbbb
cmp
mov
push
clc
pop
dec
test
jecxz
pop
test
mov
mov
inc
xchg
fs
xchg
shlb
jg
push
adc
fxch
cmp
arpl
loop
mov
mov
jns
adc
gs
pusha
add
fstpt
dec
fisttpll
or
cmpsb
mov
fisubl
xchg
jp
fwait
mov
loop
inc
jbe
mov
out
and
decl
dec
fiadds
and
push
inc
pop
das
mov
cltd
cmp
ljmp
xchg
mov
ds
into
sahf
jmp
test
fwait
sbb
lahf
xor
fldcw
hlt
jg
adc
loopne
xchg
pop
test
cs
lock
fldcw
push
adc
xor
rolb
push
mov
out
loop
xchg
mov
dec
inc
mov
test
pop
aas
outsl
pop
mov
ret
mov
outsb
push
jp
xor
lock
dec
int3
inc
cmpsl
loopne
xchg
movsb
aam
dec
add
xor
mov
adc
sahf
pushf
shlb
mov
in
mov
xchg
inc
fnstsw
adc
test
jb
daa
enter
lds
sub
sub
incb
mov
shl
xor
pop
stos
fstpl
inc
mov
aam
jecxz
pushl
jg
insb
cltd
aad
sub
mov
ret
jne
sbb
push
ret
test
cwtl
jp
jns
insb
push
outsb
mov
or
shrb
call
iret
add
nop
jae
dec
scas
in
add
pop
cmp
stos
push
test
bound
shlb
pushw
or
xchg
jecxz
mov
add
add
dec
inc
xchg
push
push
pop
bt
xchg
fistps
lods
in
ljmp
xor
lahf
push
lds
pop
xor
xchg
in
push
insb
and
lea
xor
add
pop
or
test
clc
stos
or
mov
and
lock
xchg
dec
mov
movsl
inc
stos
add
popf
cs
sbb
aam
into
push
lret
jge
mov
sub
inc
stos
push
sbb
jl
xor
jae
sahf
mov
sar
xor
pop
dec
sub
mov
xchg
into
push
and
pop
adc
mov
sbb
xor
mov
jno
inc
jmp
adc
pop
pusha
push
imul
pop
pop
mov
cmc
clc
xchg
shll
into
enter
imul
fs
imul
cmp
add
sub
sub
push
daa
bound
jg
or
xchg
lcall
cmc
pop
pushf
and
push
enter
arpl
jns
jmp
mov
ss
scas
nop
insb
adc
mov
and
aaa
fmull
outsb
rsqrtps
fdivs
cmpsb
jle
rcrl
cmp
mov
push
add
lods
pop
xchg
sub
sahf
adc
or
cs
lcall
and
add
loopne
and
sub
add
popf
mul
cwtl
fsts
adc
mov
aaa
pop
add
nop
push
out
pop
and
adc
add
push
mov
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
mov
or
sbb
sub
cmp
leave
xor
imul
cltd
arpl
mov
mov
or
sbb
sub
cmp
leave
xor
and
adc
add
push
mov
or
xchg
jns
jns
imul
addb
xor
popa
lock
sbbl
rolb
push
loope
loope
adc
and
jno
popa
xchg
xchg
add
xor
and
loope
adc
and
jno
popa
lock
add
pop
mov
test
roll
add
jge
jno
fidivrl
aas
mov
push
cmc
adc
lock
leave
push
and
inc
orb
rorb
sti
push
jle
call
push
ds
fcomps
and
inc
ja
lret
push
cli
cmp
xchg
add
adc
es
iret
outsl
mov
movsb
mov
adc
insl
rclb
cld
inc
out
mov
dec
mov
push
xchg
mov
adc
outsl
bound
mov
jno
popa
lock
push
add
adcb
inc
je
push
nop
jmp
push
movsb
mov
mov
jns
add
les
iret
movsl
push
roll
pusha
loopne
dec
addb
xor
inc
shlb
popa
lock
add
xor
inc
rcll
loope
addb
loope
icebp
adc
add
stc
jo
or
jae
inc
movsl
xor
pop
pushf
adc
cld
inc
call
and
faddp
gs
leave
inc
les
and
and
shrl
push
lds
enter
shlb
popa
lock
add
xor
inc
rcll
loope
adc
and
jno
popa
lock
add
xor
inc
rcll
loope
adc
jae
and
xchg
adc
adc
push
xor
out
and
mov
ret
nop
out
test
sti
dec
nop
out
or
daa
xchg
ficompl
cmp
inc
stos
add
dec
shlb
pop
push
jne
icebp
xchg
jg
xchg
mov
jg
jge
xchg
cmp
fsubrl
sub
fisubl
dec
mov
out
int3
jecxz
jne
shlb
xchg
inc
push
in
rcrl
mov
pop
fimull
mov
sub
adc
shrl
push
push
xchg
jge
dec
sbb
push
aad
call
ret
cld
inc
imul
xchg
push
sub
mov
scas
pop
iret
mov
ds
mov
movsl
test
add
fcoml
rolb
mov
inc
aad
addl
dec
dec
cli
insl
mov
inc
xor
cmp
push
popf
mov
pusha
sbb
inc
sbb
ror
fldl
mov
mov
dec
hlt
stc
gs
sti
andb
ds
jbe
into
nop
dec
fucom
arpl
outsl
pop
call
test
enter
shlb
xor
pop
pop
insb
fs
xor
cmp
lods
lea
mov
dec
cmpsl
jg
jae
cmpsl
mov
push
xor
xchg
jo
mov
xchg
dec
mov
inc
call
mov
pop
mov
in
add
and
test
ja
mov
aaa
sbb
cmc
push
push
and
cmp
push
lods
out
out
into
mov
push
ljmp
cmp
ret
mov
divl
repz
aad
jo
ss
dec
aad
lea
out
je
cmp
or
mov
mov
enter
addr16
shll
sbb
jmp
xlat
hlt
jno
jnp
js
xor
cmp
lret
fbld
push
push
xchg
in
jge
push
mov
dec
dec
out
je
stos
movsl
inc
rcl
lods
adc
add
pop
clc
bound
addr16
mov
inc
in
dec
popf
jne
popa
inc
aas
andl
dec
mov
loopne
fldz
fildl
xchg
add
sbb
loopne
test
sub
sub
sbb
xor
test
mov
mov
popf
nop
dec
sbb
in
push
movsb
nop
mov
lret
xchg
cltd
fldl
push
inc
inc
sub
test
les
xchg
shll
pop
nop
mov
pop
xor
mov
incb
daa
in
mov
xchg
cmp
loop
insl
adcb
cmp
mov
push
ffree
mov
push
icebp
test
sbb
aas
popa
dec
in
lahf
mov
fdiv
imul
xor
adc
inc
test
shll
pop
ret
inc
xchg
cmp
push
xchg
fisttps
dec
rdtsc
test
mov
push
dec
jb
fpatan
adc
in
lret
je
inc
xchg
out
jle
bound
insl
push
hlt
push
shll
add
mov
lret
pop
loope
add
sarb
das
jmp
sbb
add
lods
or
sub
fstpt
xchg
mov
and
mov
in
xchg
pop
clc
jnp
xor
xorb
sbb
test
pop
popa
andb
mov
add
add
sub
jbe
stos
lds
cwtl
shrl
xchg
dec
jbe
cmp
mov
sbb
insl
cmp
arpl
popa
lock
mov
enter
inc
xchg
aas
mov
and
mov
test
adc
in
cmp
mov
les
rcr
push
push
out
sbb
int3
ror
jle
lret
xchg
xchg
inc
sbb
mov
adc
xor
dec
or
aam
pop
mov
sbbl
fstl
jb
psrlq
push
xor
pushf
xlat
call
aad
repnz
lock
into
cwtl
sbb
xchg
imul
sub
and
outsb
loop
push
sub
add
je
sbb
inc
ja
push
clc
pusha
pop
adc
jae
inc
inc
pop
mov
inc
mov
and
icebp
fld1
scas
cltd
jg
test
push
xor
into
addb
leave
xchg
cmc
popl
or
mov
push
lock
mov
icebp
xchg
jg
sbb
cmpsl
das
fimuls
adc
rclb
dec
loop
dec
add
test
push
or
push
push
es
pop
pop
popa
adc
cmp
push
adcb
jo
into
inc
es
stos
neg
addr16
ds
pop
inc
dec
and
dec
or
js
iret
jo
rcr
inc
push
es
or
sahf
push
and
sar
daa
mov
scas
and
and
iret
dec
mov
adc
mov
std
cs
or
mov
pop
out
jno
push
mov
sbb
mov
jno
ret
mov
push
mov
jns
adc
jmp
popf
sbb
ret
xchg
sub
xchg
lret
loopne
out
nop
fnstcw
adc
test
adc
stos
jne
je
sbb
stos
outsl
in
ret
lcall
movsl
sbb
imul
inc
or
shll
ljmp
fisttpl
sub
cld
add
js
rclb
mov
inc
sbb
loopne
cmpb
stos
add
sbb
mov
fldenv
xor
and
fdivrs
or
std
outsl
xor
gs
cmp
push
in
cmp
ret
pusha
stos
pop
and
stos
iret
and
xlat
hlt
dec
mov
cld
cmp
push
jne
imul
ret
lea
push
xchg
mov
pop
mov
mull
shrb
jmp
pop
lcall
mov
cltd
jl
popf
mov
push
sbb
or
repnz
insb
fdivs
fdivl
inc
lcall
jmp
lods
jmp
arpl
testb
inc
xor
xlat
cmp
xor
mov
fistps
rolb
pop
in
inc
stc
add
cwtl
fsubrp
lahf
mov
push
sbb
ja
mov
xor
ljmp
in
cltd
lcall
inc
pop
ret
rcr
call
and
push
enter
xchg
pop
outsl
xlat
ffreep
sub
sub
xorb
insl
dec
ljmp
in
cmp
adc
stos
mov
xchg
fdivrs
cmp
and
xchg
loopne
xchg
dec
sbb
fldt
in
mov
adc
fxch
xchg
jge
mov
mov
in
je
into
test
mov
cwtl
inc
daa
cmp
adc
aas
shll
mov
or
xchg
cld
xchg
imul
jle
fwait
mov
repz
sahf
push
xor
aad
inc
out
jle
add
sbb
jno
dec
pop
jmp
mov
stos
jne
scas
cmp
nop
enter
les
jno
cltd
sub
out
inc
imul
mov
int3
roll
lret
mov
fsubs
pop
imulb
mov
inc
or
inc
xor
imul
or
mov
mov
je
push
and
xlat
out
xchg
stc
jp
fiaddl
or
rorb
rcl
mov
or
in
or
sbb
outsb
enter
aas
std
das
add
insl
add
sbb
sub
pop
push
add
sub
lcall
and
dec
pop
mov
xchg
out
lcall
push
inc
repz
cmp
fnsave
iret
outsl
add
and
sti
enter
iret
loop
jge
xchg
dec
stc
sub
adc
or
dec
aaa
shll
fiadds
fcomi
push
js
lds
mov
push
pop
jne
insl
dec
mov
cld
dec
daa
repz
pop
fildll
cltd
aam
out
repz
data16
push
mov
jns
loope
or
es
inc
pop
jae
inc
lods
and
mov
xchg
out
dec
std
inc
or
and
mov
inc
lahf
fstpt
sub
out
cs
sarl
dec
push
lret
leave
push
in
cmp
add
mov
mov
mov
sbb
jo
roll
mov
dec
inc
sbb
push
xor
insl
inc
add
movsb
loopne
lcall
sbb
and
iret
xlat
pusha
xor
sub
call
pop
sub
les
rol
aad
adc
push
inc
test
ror
xchg
jmp
cmpsb
pop
adc
xchg
xor
sete
loope
out
rcrl
and
jmp
leave
adc
jbe
outsl
adc
and
xchg
mov
fs
mov
cmp
sbb
cmc
mov
or
das
push
popf
lock
and
jb
push
in
dec
push
stos
inc
dec
sub
and
and
adc
xor
sub
mov
and
pop
js
test
sbb
push
and
and
sub
jae
jecxz
inc
sbb
fildll
mov
sub
adc
add
pop
xchg
add
loop
lds
outsb
jl
call
xor
cwtl
adc
xor
in
repz
inc
pop
dec
movsb
adc
push
addr16
sbb
jle
outsl
stos
aaa
inc
ret
std
push
inc
jne
pop
mov
push
cld
inc
xchg
sub
fnsave
repz
xor
xchg
dec
lods
leave
pop
jecxz
cmp
sbb
das
xchg
ss
cwtl
jg
dec
imul
daa
stos
loopne
das
lds
jne
push
test
mov
paddusw
push
decl
lcall
test
scas
es
mov
fiaddl
or
mov
xor
cmpsb
pusha
lods
xchg
repz
push
push
or
enter
xchg
add
pop
cmp
js
jns
mov
jmp
lock
add
out
enter
shll
sub
leave
icebp
pop
hlt
data16
dec
inc
mov
icebp
mov
es
inc
std
push
mov
das
pusha
xor
xchg
sub
jecxz
cwtl
in
movsb
adc
adc
jecxz
sahf
mov
outsl
pushf
sub
clc
fstps
out
ljmp
cmp
jmp
fs
std
jno
push
jl
push
fcompl
sahf
push
sub
sub
jns
hlt
ret
jnp
imul
shlb
adc
add
sub
cmpsl
xor
add
jns
inc
jp
and
or
cmpsb
sahf
inc
jg
rcr
jge
test
sbb
inc
sbb
stos
xchg
xchg
ret
mov
lcall
adc
js
mov
inc
out
jns
add
out
in
mov
mov
mov
shll
mov
scas
mov
aam
outsl
pop
fimuls
inc
lcall
fucomi
subl
mov
sbb
sbb
cwtl
ds
mov
xchg
inc
fisubrl
dec
add
sbbl
leave
or
out
cmp
adc
pushf
andb
aas
inc
lahf
insb
lret
inc
push
push
out
repnz
mov
ret
cmp
xchg
notb
aam
dec
cwtl
jo
sbb
daa
test
mov
js
xor
rorb
adc
mov
int
jne
dec
sub
sub
fwait
movsl
lret
xlat
and
pop
dec
gs
mov
pushf
popf
jo
test
mov
or
push
in
push
adc
mov
jmp
inc
inc
insb
test
mov
cltd
gs
cmp
es
fisttpl
stc
ja
lret
jae,pn
dec
pop
leave
outsl
inc
mov
adc
or
mov
add
jno
test
jbe
sub
sti
pop
les
fcmovnu
fstl
xchg
shll
pop
cmp
in
dec
je
in
fs
jp
xchg
jo
fstpl
push
outsl
das
sub
jl
xchg
lahf
jno
lods
mov
shlb
insl
push
hlt
xlat
mov
jecxz
inc
pushf
ja
les
jecxz
jae
push
lock
dec
mov
mov
adc
sarb
or
rcll
push
repnz
inc
push
jg
sub
mov
das
inc
nop
les
inc
jnp
decb
shll
xor
sbb
fmull
popa
add
lea
sub
dec
call
lock
fs
cmp
lahf
int3
in
in
pop
popa
xlat
ds
cmp
jmp
sbb
sbb
xchg
mov
lods
shl
mov
stos
pop
ja
xorl
cmp
fs
rcrl
stos
lcall
mov
insb
push
and
push
jecxz,pn
and
add
gs
jno
mov
mov
push
mov
push
fidivs
pop
xchg
adc
fsubrp
dec
fsubs
sbb
push
fldenv
inc
jns
mov
lret
icebp
mov
inc
cmp
jb
jmp
cli
dec
mov
hlt
fiaddl
jmp
in
jg
or
dec
xchg
movsb
ret
or
daa
popf
pop
outsl
jecxz
adc
jl
push
adc
adc
dec
cmp
or
or
xchg
fldl
adc
cmc
cld
mov
pushf
inc
lea
aam
add
mov
jo
jno
outsl
sahf
jge
repz
testb
xchg
xchg
jno
in
arpl
xor
in
clc
aam
test
dec
cltd
out
fldcw
lret
iret
push
adc
shll
sub
imul
sub
ficoml
cmp
ds
aaa
lcall
popa
nop
or
add
mov
push
push
xchg
lock
mov
add
jae
jo
xor
inc
ja
or
mov
jne
cltd
sub
xchg
mov
sbbb
xor
xchg
push
xor
adc
pop
imul
cli
dec
and
out
call
movb
sbb
mov
outsl
add
jbe
es
mov
xchg
inc
pushl
lods
loop
jmp
inc
dec
repz
push
lods
ja
or
inc
push
repz
jmp
dec
sub
popf
aad
xchg
mov
xor
aam
mov
mov
mov
xchg
daa
mov
sub
pop
jmp
fwait
mov
stc
aad
xchg
or
adc
adc
add
pop
mov
sub
lock
popf
pop
lahf
add
pop
test
jne
pusha
js
add
negl
lods
jno
dec
push
mov
xor
fistps
push
mov
mov
mov
inc
xor
and
pusha
adc
lea
fsts
xchg
mov
xchg
int
rcrb
pop
nop
cmp
sbb
mov
stos
add
je
mov
ds
cmp
jp
nop
fwait
xchg
into
mov
loopne
xchg
dec
jnp
ss
fisubrs
dec
arpl
stc
jle
scas
push
jbe
push
leave
mov
mov
pop
or
adc
hlt
dec
xlat
fsts
rcll
test
jo
push
lcall
mov
cmpsl
iret
fcmovnbe
mov
cmp
pop
add
out
fnsave
sub
ljmp
stos
fsts
or
xor
jae
aaa
and
mov
jecxz
xchg
ret
mov
xor
test
loope
xchg
mov
sub
shlb
nop
sub
inc
or
in
sub
pop
mov
shr
into
dec
mov
subl
cmp
or
test
sub
mov
cmpsb
inc
mov
or
and
sbb
lahf
pop
inc
into
scas
jb
mov
es
mov
push
outsb
or
push
in
mull
xor
scas
jae
push
cmp
leave
fisubl
mov
inc
movsb
mov
idivb
movsb
sub
pop
lock
inc
mov
sbb
and
mov
mov
pop
xor
mov
aad
cwtl
dec
fcompl
adc
dec
filds
mov
mov
jbe
repnz
dec
ret
adc
jecxz
lock
or
outsl
bound
cmpsb
inc
xor
xchg
xor
in
outsb
test
lock
cmpsl
sub
and
jle
ret
out
pop
or
sub
outsl
jg
pop
shrb
arpl
fdivl
mov
and
xor
pop
or
mov
jo
add
subl
ret
pop
mov
lds
lea
xor
push
int3
rorl
mov
jecxz
and
popa
ljmp
inc
daa
jle
jg
cmp
inc
sub
xor
xlat
xlat
fidivs
les
movsb
hlt
cmp
adc
or
push
sarb
inc
and
mov
movsb
pop
mov
and
sub
dec
mov
rcll
cmp
jecxz
leave
cltd
andb
mov
imul
and
outsb
gs
movsb
daa
xchg
inc
mov
lret
movsb
popf
mov
popa
fnstcw
mov
clc
fmul
iret
push
lds
inc
add
mov
leave
sbb
scas
and
pop
lock
scas
dec
or
mov
int3
dec
xchg
dec
dec
addr16
icebp
xor
repz
and
popa
std
mov
stos
shlb
es
mov
shlb
sbb
pop
or
mov
mov
or
mov
push
and
dec
xchg
in
pop
xchg
jl
mov
sbbl
adc
dec
rclb
xchg
inc
xchg
lds
xor
add
dec
push
jle
jbe
es
in
bound
push
mov
sti
das
aad
ja
clc
dec
cli
idiv
pop
fs
test
mov
jmp
inc
cmp
gs
add
mov
jp
xor
cmp
mov
add
aas
pop
div
pop
nop
dec
add
push
int3
adc
in
mov
adc
bound
mov
flds
dec
jne
jae
divb
sub
inc
cmp
pop
xor
push
push
pop
pop
push
sub
in
pop
in
xchg
fcomps
aaa
jmp
das
add
sti
cmp
mov
mov
dec
mov
fidivl
or
or
xchg
cwtl
inc
imul
mov
lret
mov
mov
mov
mov
jbe
mov
pop
add
popa
pusha
daa
insb
add
mov
clc
cmpsb
xchg
lods
inc
shlb
psubusb
push
jle
jbe
mov
les
push
xchg
es
sbb
jae
insb
sbb
pop
cwtl
lcall
iret
mov
or
and
push
adc
pop
jg
roll
lods
pop
adc
pcmpgtd
sub
aaa
lcall
pusha
test
push
sar
sub
ret
std
xor
sbb
loopne
mov
mov
dec
es
fstpt
mov
inc
push
mov
jno
xlat
inc
cmpsb
jecxz
push
mov
push
mov
cwtl
dec
and
dec
xchg
cmpsb
and
cmpsl
mov
add
divb
imulb
fisubl
cld
push
jno
lahf
test
ret
pop
fndisi(8087
adc
mov
jp
inc
sub
or
popa
pop
xchg
add
rorl
in
cmp
sti
in
push
cmc
mov
dec
jmp
and
inc
sub
add
mov
es
rcrl
fisttpl
addr16
sub
insl
ficoms
lret
jg
jns
pop
js
jecxz
icebp
push
pop
int3
lret
push
adc
shlb
aaa
clc
cmp
lahf
fildl
jecxz
clc
test
test
flds
pop
ds
shrb
or
and
fldt
inc
lret
mov
test
imul
movsb
icebp
jge
insl
pop
pop
ss
pop
jge
mov
dec
pop
dec
xor
pop
rcrb
sti
pop
jmp
pop
pop
jo
out
clc
sti
xchg
scas
aad
arpl
aam
repz
mov
inc
into
roll
icebp
loopne
mov
add
popf
outsl
lea
dec
subb
insb
stc
xchg
leave
and
add
xchg
push
add
jge
inc
push
xchg
sbb
and
lock
sub
ds
adc
adc
pop
add
std
dec
ds
or
ss
jge
sti
jne
bound
add
jecxz
cwtl
pop
push
mov
mov
add
sbb
idivb
mov
xor
jno
insb
mov
into
leave
js
dec
xor
cld
xor
mov
mov
add
outsb
push
sbb
das
add
popa
xor
inc
inc
stc
aas
xchg
mov
pushw
shll
push
xor
mov
xor
mov
mov
pushw
testl
lock
mov
test
les
fimull
jmp
test
insb
test
cmp
sub
inc
xor
ret
mov
xor
xlat
mov
incb
ljmp
hlt
xchg
mov
mov
mov
dec
std
fwait
loopne
loopne
ret
lret
cmpsb
test
out
or
in
pop
aad
add
and
jno
popa
lock
add
xor
inc
rcll
loope
adc
and
jno
popa
lock
add
xor
inc
rcll
loope
adc
and
jno
popa
lock
add
xor
inc
rcll
loopne
adc
and
jno
popa
xor
and
scas
push
lahf
push
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
bound
jg
pop
stos
mov
mov
les
add
or
add
or
add
add
add
add
out
add
ljmp
add
add
add
movsb
add
add
add
add
add
add
int
mov
add
mov
mov
add
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
mov
add
add
add
add
sub
sbb
data16
xchg
add
mov
rolb
pushf
add
add
sub
roll
pop
add
add
loope
sbb
add
add
add
add
add
add
add
add
add
add
test
insl
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
movl
js
ljmp
add
add
add
add
add
add
add
daa
add
add
add
add
add
add
add
add
add
add
jno
enter
or
test
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popf
add
add
add
add
add
add
add
add
sub
roll
imul
mov
cmp
data16
add
add
add
add
add
add
add
add
add
mov
xchg
add
add
add
add
add
add
add
add
fldl
xor
inc
add
add
add
add
add
add
add
add
add
add
xchg
add
pop
add
movb
add
add
add
add
add
iret
add
add
add
xor
add
add
add
add
add
pop
add
add
add
add
jb
add
ljmp
add
add
add
add
mov
test
pop
add
mov
add
add
add
jnp
xor
pop
add
outsl
add
add
cmp
daa
add
sbb
xlat
add
add
cmp
sbb
sbb
xlat
add
add
add
add
loope
push
add
iret
add
int3
add
add
add
add
jle
daa
add
add
add
add
rolb
stos
add
add
add
add
add
add
add
fwait
add
add
add
jo
addb
add
add
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
pop
add
add
popf
add
add
add
add
addl
add
add
ret
add
add
add
mov
loop
add
mov
mov
bound
inc
push
inc
pop
mov
mov
cmpb
lret
inc
inc
dec
mov
dec
in
daa
or
jbe
pop
cmpsb
mov
or
add
addl
inc
imul
and
stos
jae
data16
popf
lahf
addr16
cmp
push
jae
pusha
xchg
imul
js
or
xor
or
dec
rorb
push
ds
iret
inc
mov
in
loopne
mov
lret
xor
mov
shlb
in
fnsave
arpl
mov
adc
dec
ret
cmpsb
out
ja
aas
cs
dec
popf
arpl
cmc
sub
mov
xchg
mov
sbb
movsl
xchg
push
in
sbb
xchg
sbb
mov
aad
out
shrb
inc
add
pop
pop
mov
adc
sub
inc
push
pop
cmp
fcompl
mov
test
leave
cmpsb
cmpsl
fsubr
mov
cmp
fwait
pushf
or
das
sbb
incl
cmp
dec
cmp
std
lahf
add
repnz
jl
insb
cmp
hlt
sbb
lea
pop
and
jl
mov
push
push
or
push
sbb
fs
imul
jnp
push
push
jmp
mov
aas
jnp
inc
mov
push
repnz
bound
or
divb
sbb
mov
pop
jmp
xor
out
test
pop
push
xchg
div
movsb
xchg
mov
dec
mov
loope
mov
mov
lret
cmp
hlt
lods
nop
mov
jae
jle
and
xchg
xor
jecxz
cld
pop
loopne
shll
lods
stos
jmp
aad
and
xor
inc
or
clc
iret
push
outsb
cmp
imul
enter
pop
lahf
sarb
inc
ja
xor
shlb
jmp
jecxz
dec
outsb
mov
in
pop
jmp
mov
jae
push
ss
mov
xchg
cmp
sub
mov
mov
push
and
imul
inc
pop
es
lcall
push
sbb
inc
int
lods
and
stos
mov
and
jmp
testb
mov
dec
mov
in
or
mov
inc
mov
sbb
dec
sub
cltd
and
cmp
add
std
jne
inc
pop
xor
fcmove
mov
mov
pop
imull
push
mov
xchg
mov
dec
decl
das
nop
jle
arpl
in
int3
jl
ds
orb
jae
lock
fimuls
adc
test
icebp
push
xlat
add
lods
sub
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
