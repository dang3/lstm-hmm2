loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
test
js
dec
mov
int3
fs
nop
sub
sbb
cmpsb
pop
clc
and
test
mov
test
js
dec
mov
lds
aad
in
cmc
pusha
add
enter
les
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
mov
es
es
jmp
sbb
xor
or
xchg
int
lea
add
mov
lea
xor
imul
dec
ffree
sub
mov
mov
mov
xor
pushl
and
pop
nop
and
mov
mov
xchg
mov
inc
mov
jne
test
mov
lods
mov
cmp
cwtl
pop
les
adc
cmp
sbb
sub
sbb
cmp
jle
add
sbb
fcoml
mov
mov
pop
dec
sbb
sub
inc
add
pop
inc
stc
push
stos
aad
pop
int
test
jmp
mov
inc
push
mov
lds
aad
in
cmc
sbb
enter
test
mov
loopne
idivb
jecxz
repz
mov
dec
jno
jne
jo
push
lods
jo
ret
jmp
fldl
icebp
add
sbb
mov
popa
mov
ja
jb
pop
fwait
xor
mov
loop
xchg
xor
cmp
cmp
in
cmc
sbb
enter
test
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
test
adc
movsl
lret
pop
daa
xlat
mov
push
mov
arpl
mov
insb
jbe
cmp
les
mov
and
fwait
ret
xchg
pop
jle
gs
sahf
jmp
shlb
add
xchg
dec
aam
jmp
call
or
ja
add
cmp
dec
and
xor
fcomp
dec
je
jns
and
into
sbb
loope
pop
sub
cmpsl
lahf
cmc
mov
cmp
pop
inc
addr16
xor
sahf
mov
lods
lea
and
cmpsl
fists
xor
or
and
vmwrite
stc
push
xchg
or
mov
cwtl
pop
into
xchg
call
loope
movsb
xchg
mov
inc
inc
ds
sar
cltd
mov
inc
pop
mov
ss
adc
and
dec
lods
dec
mov
fcmovnbe
js
test
in
sub
shll
mov
cmp
js
cmp
test
mov
xlat
push
ret
xchg
lods
cmpsl
or
mov
fcomip
push
add
push
subb
jnp
jp
mov
mov
mov
out
mov
in
scas
das
movsl
add
fwait
lcall
dec
lret
movsl
ss
aam
dec
pop
sub
scas
sub
mov
aam
ret
sub
mov
imul
sub
pop
xchg
leave
xorl
cltd
aad
inc
inc
bnd
stc
rorb
xchg
popa
hlt
dec
jl
outsb
jno
movsb
bound
fisubl
dec
dec
enter
push
dec
nop
cli
std
cmp
dec
push
sbb
cmp
inc
add
xchg
push
jecxz
jg
dec
hlt
es
stos
getsec
shll
inc
mov
popa
xchg
push
jle
xchg
ljmp
jbe
cli
mov
ficoms
push
sub
cwtl
ja
xchg
scas
adc
insb
lret
negb
jmp
orl
or
dec
je
push
test
xchg
sub
cli
cld
movsl
loope
cs
scas
icebp
inc
push
inc
or
icebp
mov
xchg
mov
movsb
xchg
cmc
scas
sti
push
push
xchg
sub
mov
pop
lret
orb
inc
popa
enter
jns
test
pop
arpl
into
hlt
cltd
jmp
mov
and
leave
inc
movsl
or
js
shl
xchg
adc
pop
inc
and
in
out
movsl
sub
push
repz
inc
test
cmp
sbb
xor
mov
jnp
popa
icebp
in
mov
inc
xchg
test
popf
pushf
jmp
push
mulb
sub
cmp
jle
lock
lret
int
movsb
arpl
xchg
mov
mov
cs
dec
daa
push
inc
cwtl
ljmp
sbb
cmp
std
mov
decl
les
lods
les
push
pop
mov
pop
add
daa
dec
jle
xor
cmc
pop
add
xor
cwtl
ja
rcrb
inc
js
sti
push
fbld
adc
cwtl
add
scas
and
jmp
jno
scas
mov
cli
jle
stc
adc
inc
adc
cmp
into
imul
insb
outsb
mov
push
test
insb
push
xchg
fsub
mov
rolb
stos
pop
jp
cltd
dec
inc
outsl
cmp
mov
mov
xchg
mov
mov
pusha
dec
push
push
outsb
push
data16
cmp
dec
scas
mov
out
sbb
fildll
inc
mov
sub
out
dec
dec
adc
jp
mov
insl
mov
pop
mov
jns
repnz
in
lahf
jp
adc
ljmp
push
vaddsd
sbb
loopne
dec
iret
call
adc
rclb
jo
mov
jae
leave
test
in
test
ret
lcall
sub
inc
pop
fnsave
mov
lock
pxor
jecxz
xlat
xor
mov
xchg
out
lahf
out
shll
shll
lods
mov
mov
clc
xor
scas
adc
push
add
jg
popa
push
stos
inc
dec
movsb
cs
xor
fistps
add
ds
jp
ficoms
es
movsl
mov
aam
xchg
jecxz
and
jo
pusha
imul
mov
add
in
loopne
popa
lock
and
test
pop
adc
xchg
pop
test
sub
mov
mov
inc
out
in
insb
fadds
sbb
loope
dec
xor
js
dec
push
mov
dec
insb
or
in
dec
mov
mov
xchg
int
adcl
mov
addr16
push
sub
sub
scas
jp
xchg
bound
je
imul
jo
test
or
sarb
sbb
or
or
repnz
mov
jle
inc
rolb
aam
cltd
cwtl
xchg
fsubs
test
outsb
mov
ljmp
push
std
es
sti
jo
add
popf
dec
sbb
mov
cmp
xor
sbb
fs
loop
sbb
and
cmc
test
inc
xchg
pop
shll
and
daa
addr16
je
sti
dec
loop
add
imulb
inc
int
or
mov
rcr
in
lock
pushl
shll
filds
push
mov
stos
inc
or
stc
jnp
mov
jno
and
push
dec
xchg
test
mov
inc
std
jg
push
inc
push
lret
cmp
inc
push
shlb
mov
mov
sub
rcrb
sbb
std
sbb
sbbb
ss
dec
sti
cmp
adc
push
add
fstpt
mov
aaa
adc
mov
sbb
hlt
ds
sti
fimuls
cmp
adc
add
je
test
testb
loopne
mov
cmc
lcall
sbb
jae
lock
mov
dec
clc
mov
add
in
subl
add
cmp
mov
add
stos
mov
aaa
scas
imul
sub
jp
xchg
sub
xor
aad
cltd
fdiv
iret
mov
arpl
in
mov
cmc
cli
jo
stc
jnp
xchg
inc
mov
sub
push
mov
mov
pop
push
mov
in
outsb
cs
sbb
addl
pop
sti
push
stos
test
sbb
js
test
and
xor
pop
pop
adc
mov
sub
gs
imul
ja
ret
add
sbb
mov
lds
movsb
aas
push
xor
cltd
ret
stos
xchg
mov
sti
insl
push
push
lret
repz
inc
gs
mov
push
mov
xchg
add
movsl
push
out
and
inc
dec
and
sub
daa
lcall
int
in
sbb
mov
sbb
push
std
mov
mov
test
mov
xchg
mov
test
sub
jl
pop
cmpsl
push
xlat
leave
repz
mov
inc
aaa
dec
fdivl
or
in
imull
and
jo
and
aad
mov
sub
in
push
pop
xor
inc
push
xor
dec
push
imul
fiadds
cmc
push
lahf
jle
shlb
pusha
clc
push
std
shll
cmpsl
out
into
pop
adc
or
popa
adc
mov
mov
sub
cmpsb
out
rcrl
push
sub
sbb
xor
cmp
jae
xchg
adc
pop
stos
mov
sbb
and
ficoml
cmp
fldt
je
mull
cmp
jg
test
cld
xor
into
call
frstor
sub
stc
mov
test
push
jge
mov
pop
in
mov
sbb
outsb
sub
adc
arpl
fldl
js
and
adc
addr16
shl
cld
jne
jle
sub
mov
stos
xchg
jg
push
sub
lcall
ficomps
jo
outsb
ds
jl
push
adc
in
xor
mov
stc
mov
ret
test
insb
aas
aas
sub
pop
lret
and
insl
push
cs
mov
addr16
push
xor
mul
xchg
stos
dec
call
mov
in
xchg
andb
or
jmp
call
incb
and
xchg
jg
retw
push
cltd
fwait
jge
pop
aad
ret
orl
xchg
cs
jmp
mov
pop
mov
test
dec
mov
xchg
jl
ret
in
test
fstpl
fidivrl
cwtl
fiaddl
fldl
iret
jne
add
test
jl
xlat
aad
mov
fmuls
sub
mov
mov
mov
fsincos
icebp
cmp
data16
dec
adc
mov
arpl
xchg
call
mov
jecxz
in
lahf
test
inc
adc
hlt
mov
xor
pushf
lock
push
mov
ret
pop
cli
dec
inc
push
sahf
cmp
scas
push
fwait
xchg
xchg
mov
faddl
sbb
leave
ret
mov
loopne
mov
test
sub
inc
xchg
mov
add
cmp
dec
mov
jbe
enter
fisubrs
enter
repnz
nop
pop
lods
push
xchg
pop
ret
dec
sbb
add
add
push
hlt
sbb
sub
in
xchg
cltd
xchg
jl
inc
jmp
push
mov
mul
gs
cs
cld
arpl
inc
xor
or
push
hlt
stc
pop
cmp
push
aas
adc
mov
in
daa
jo
ret
lods
shrl
cmp
add
repnz
mov
cmpsl
mov
clc
je
push
add
sti
stc
imul
pop
nop
mov
lahf
aad
xchg
push
in
nop
fcmovnu
rep
repnz
icebp
repnz
mov
out
jae
inc
pop
cld
xchg
in
pop
mov
push
aas
mov
in
xchg
jne
cld
int3
sbb
adc
fldt
inc
shll
stc
sub
lock
pop
pusha
push
jnp
aad
xchg
mov
enter
stos
push
popa
imul
rol
stos
bound
dec
xor
stc
iret
cwtl
xor
mov
negl
pop
jmp
int3
cmp
xor
or
in
lcall
sbb
ds
jg
setl
fcomi
add
mov
jne
dec
shr
loope
aas
sub
xchg
clc
fdivr
mov
lahf
xchg
call
add
sarb
mov
sub
es
pop
pop
es
aad
ret
ret
icebp
inc
les
addr16
testl
sbb
sbb
outsl
imulb
std
std
xor
sub
incb
pusha
mov
mov
push
testl
lcall
pusha
fs
pusha
xlat
push
mov
xchg
dec
xchg
push
or
mov
or
test
jnp
dec
xchg
ja
and
adc
js
repz
sar
mov
lock
mov
mov
inc
stc
mov
push
pop
sbb
popf
and
mov
mov
sub
and
push
fucom
dec
dec
aad
es
repnz
repz
push
pop
bound
inc
sbb
lds
bound
arpl
leave
rorl
arpl
mov
mov
inc
imul
fnsave
out
mov
cmp
pusha
ds
gs
push
xchg
shr
cmp
sub
aam
rcl
and
repnz
shll
xor
cli
jnp
dec
push
mov
add
xor
fimull
sub
ror
xchg
cld
xchg
sub
push
cwtl
push
sub
mov
js
sti
mov
mov
sti
mov
jb
push
xchg
ds
xchg
in
nop
fwait
iret
ret
push
popf
mov
xlat
popf
je
add
pop
ja
mov
arpl
je
fsubs
pop
in
hlt
add
cmpsb
mov
repnz
cmp
cmpsb
outsb
lcall
or
mov
and
pop
mov
push
cltd
sbb
pushl
fcomps
loop
pushf
adc
int
adc
stos
mov
mov
xchg
add
pop
inc
xchg
jo
jno
inc
mov
sub
sarl
mov
idiv
dec
pcmpeqw
push
popa
dec
insb
scas
mov
ficompl
adc
stc
insb
mov
xchg
stc
mov
push
sub
push
add
sbb
idiv
mov
jno
jbe
adc
sbb
and
in
clc
mov
pop
shl
mov
push
mov
lods
mov
mov
mov
sub
js
ja
stos
and
dec
jle
jle
faddl
pushf
pop
lret
push
jnp
sbb
mov
popf
adc
aaa
test
jbe
out
clc
test
ss
sbb
inc
sub
xor
lods
cmp
mov
pop
jle
sub
in
cmc
iret
inc
sub
xchg
pusha
ljmp
je
and
out
movsl
cmp
pop
jbe
pop
mov
mov
sub
out
jecxz
mov
sub
cmp
cmc
add
sbb
call
cmp
repz
fcoml
mov
repnz
jne
out
test
and
ret
fnstenv
adc
sti
data16
inc
pop
lods
je
adc
dec
inc
repnz
imul
rclb
cmp
xlat
add
shrb
aas
fidivl
leave
sbb
outsb
lahf
divl
outsb
mov
xchg
sub
xor
push
repnz
push
das
mov
pop
cmpsl
mov
sub
mov
test
cld
daa
mov
push
lret
ja
sub
push
mov
cltd
mov
cwtl
popf
push
out
push
cmpsb
scas
scas
push
xchg
mov
sarl
call
ret
add
jnp
sub
movsb
inc
jecxz
cmpb
pushf
fcompl
rcrb
lods
das
pop
adc
lock
rcll
mov
hlt
mov
negl
fadds
and
ficoml
mov
ds
dec
mov
cmp
mov
mov
adc
xor
in
jle
cld
jg
cld
roll
mov
or
lea
shl
shll
rcl
sub
jno
xor
out
mov
push
fisubrs
imul
pusha
inc
data16
push
lea
mov
fcomps
sar
lds
ja
dec
sbb
push
cltd
je
push
and
mov
test
cmp
mov
addr16
mov
fcomps
jae
pop
xchg
shrl
and
lods
arpl
test
inc
mov
daa
jle
push
idivb
js
loopne
dec
dec
sarl
adc
cmc
test
pop
lods
xchg
loopne
push
mov
adc
inc
divl
xor
mov
jae
pop
adc
addr16
sahf
and
or
in
in
sbb
imul
jns
jp
aaa
jns
pushf
inc
jb
or
xchg
cmp
jns
ret
lock
mov
shlb
hlt
cmpsl
enter
bound
insl
js
jo
cmp
inc
pop
jne
jnp
sti
ret
imul
cltd
sub
sbb
insb
into
jns
sbb
adc
jbe
adc
sbb
dec
mov
xor
mov
mov
pop
test
jb
aad
pop
lret
test
mov
enter
mov
sahf
bound
xchg
outsl
mov
enter
cld
sub
xchg
test
or
ljmp
or
iret
push
lock
cmp
cld
mov
shl
inc
shll
xchg
jl
mov
call
stos
mov
fchs
jmp
outsb
xchg
arpl
in
iret
inc
push
jle
push
xchg
in
icebp
mov
jb
jmp
push
enter
push
push
fsubrp
sub
sbb
fsts
fsubs
mov
outsl
das
cmp
std
mov
xor
jne
jl
xchg
sub
dec
cld
mov
mov
lret
es
les
inc
mov
mov
cmp
aad
dec
cmp
call
cmc
ret
add
aam
cmpsb
mov
pop
or
sub
rorl
inc
jb
ret
lods
ja
mov
add
das
sarl
cmp
push
and
mov
and
add
sub
and
mov
and
jnp
jle
xchg
and
mov
outsb
pop
sub
jbe
or
popf
into
sub
aaa
lahf
mov
enter
hlt
mov
arpl
sbb
fwait
sub
jg
mov
xlat
outsl
mov
pop
mov
lds
mov
lret
dec
ret
mov
out
sbb
cltd
lods
outsb
iret
out
mov
arpl
add
movsb
and
xchg
mov
lock
gs
ja
inc
xor
popa
lds
lea
lahf
or
aas
pop
mov
fistpl
add
shrl
addl
dec
test
mov
lods
jg
cld
dec
out
xor
jo
sub
call
dec
popa
ret
shl
lea
push
cmp
mov
addl
leave
gs
clc
jne
pop
sbb
pushf
daa
and
insl
add
xor
data16
pop
mov
std
lods
xchg
push
cmpsb
add
pop
sbb
pop
push
mov
fistpl
or
fs
cmp
bound
movsl
mov
flds
push
or
mov
out
ret
jb
add
mov
imul
mov
mov
in
sarl
jge
mov
pop
xchg
cs
test
and
es
ss
divb
pop
cmp
popa
lcall
mov
in
jns
dec
cmpsb
imul
sti
lahf
sub
push
or
push
jns,pn
jecxz
xchg
jo
and
fstp
jb
les
xchg
or
lret
mov
clc
push
push
cli
into
mov
pop
and
ret
popa
insb
fs
std
pop
gs
add
push
ljmp
inc
mov
mov
and
les
dec
fisubs
mov
sub
mov
adc
stc
add
cmp
push
aam
sub
loop
in
rclb
es
mov
jmp
xlat
repz
mov
in
lock
js
xchg
dec
mov
test
shl
enter
leave
notl
sub
adc
inc
mov
xor
mov
and
adc
mov
xor
gs
cmp
pop
xor
je
push
mov
lock
adc
test
adc
cwtl
jmp
sub
or
in
inc
add
inc
outsb
push
int
leave
cwtl
mov
mov
add
pop
jo
or
mulb
jno
ds
add
not
flds
mov
ret
scas
push
or
cli
insb
lods
ja
xorl
cmpb
or
and
into
xchg
mov
es
xchg
sti
pop
xchg
pop
sbb
pop
aam
ret
ljmp
push
sub
or
outsl
inc
es
dec
mov
int3
adcb
cmc
cmp
outsl
enter
dec
or
ds
cmp
notl
sub
push
cmc
bound
testl
lahf
out
repz
jno
jo
mov
faddp
sub
and
mov
out
mov
or
push
call
dec
in
js
lock
xlat
filds
mov
mov
mov
push
sbb
push
lods
test
add
mov
pop
repnz
ret
mov
push
ret
pop
dec
or
xchg
dec
jmp
sub
cmp
js
stc
mov
in
bound
push
push
lods
adc
mov
iret
stc
or
push
push
cmp
mov
inc
mov
xor
cmpsb
cli
sub
add
test
lds
test
mov
mov
mov
scas
inc
mov
sbbb
loop
cli
xchg
or
mov
inc
insl
unpcklps
daa
jg
add
add
sbb
or
fsubr
mov
and
and
mov
aaa
cli
mov
out
popf
push
aam
push
add
adcb
inc
mov
stos
insb
sbb
mov
test
shrl
jb
push
outsb
push
aas
nop
push
repz
bound
xchg
shrb
sarl
fistpl
cld
ss
jmp
pop
and
mov
lcall
dec
adc
insb
xor
adc
xor
push
adc
sub
add
pusha
sbb
iret
loopne
test
into
loope
stc
icebp
subl
repz
jb
test
pop
sub
and
mov
or
popf
cli
cmp
push
aas
rol
hlt
jecxz
xlat
decl
xor
mov
inc
jp
and
xchg
int
js
xor
loop
js
jno
adc
mov
add
ficomps
pop
bswap
cmp
dec
inc
sub
pop
stos
int3
xorb
leave
mov
mov
xchg
ret
pop
and
push
ret
jg
inc
mov
imul
add
mov
push
fwait
cmp
fistpl
xor
aam
dec
les
inc
ret
pop
mov
pop
mov
inc
pop
jae
cmp
call
mov
sti
leave
test
dec
cmp
or
test
cli
sarb
add
std
push
pop
and
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
test
js
dec
mov
lds
aad
in
cmc
sbb
enter
test
mov
test
js
dec
mov
lds
aam
in
cmc
sbb
adc
fadds
push
mov
test
js
dec
mov
lds
aad
or
cli
call
xor
inc
popf
ja
addr16
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
out
neg
jmp
sti
imul
mov
inc
imul
or
sbb
cmp
cmp
lret
neg
jmp
sti
cmpsb
mov
fisubs
jbe
inc
push
jnp
outsb
sbb
sub
cmp
lret
neg
jmp
sti
cmpsb
mov
mov
sub
push
adc
jae
js
mov
mov
cmp
mov
iret
xor
outsb
push
aam
ljmp
subl
push
js
imul
pop
rep
mov
sbb
inc
push
xchg
fwait
push
sbb
cmp
push
or
dec
and
insl
xchg
test
dec
daa
arpl
test
lods
orl
rep
mov
sbb
test
cmp
or
and
adc
idiv
add
mov
ret
xchg
sub
pop
leave
or
pop
fistpl
xchg
or
add
les
and
pop
mov
sbb
les
lret
neg
jmp
sti
cmpsb
mov
mov
inc
imul
or
sbb
sub
jge
lret
andb
int3
out
loop
xchg
iret
cmp
inc
inc
cmp
or
jg
pop
gs
push
pop
andl
cwtl
cmpsb
enter
cld
les
inc
or
sub
outsb
pop
lea
arpl
mov
mov
mov
xchg
mov
inc
imul
or
sbb
sub
cmp
lret
neg
jmp
sti
cmpsb
mov
mov
inc
imul
or
sbb
sub
cmp
lret
shl
pop
test
cmp
jle
sbb
popa
pop
adc
inc
inc
sbb
mov
nop
sbb
sbb
jl
xchg
mov
mov
cmp
pop
std
int3
jnp
dec
lods
test
push
dec
dec
xchg
test
fsubr
jmp
cmp
addr16
sub
and
popa
sbb
xchg
mov
in
xchg
fidivrs
stos
daa
es
xor
xchg
ficompl
inc
loope
loopne
push
mov
adc
pop
xor
jns
mov
jne
in
mov
rorb
cmp
sbb
repnz
fisttpll
pop
das
push
dec
sub
jmp
push
sbb
sub
lods
and
mov
inc
cmp
xchg
or
xchg
and
or
jg
hlt
ja
jbe
jb
mov
les
outsl
sbb
jle
leave
jp
enter
jge
xor
push
outsl
dec
notb
mov
adc
cltd
xchg
jo
pusha
pop
ret
jl
das
retw
repz
cmpsb
mov
push
int3
cltd
lret
cmp
test
xor
test
inc
push
ret
sbb
movsl
cwtl
aaa
fmulp
hlt
pop
insl
and
movsb
pop
sbb
push
mov
icebp
mov
or
sbb
adc
loop
inc
scas
pop
sbb
test
aad
pop
js
loope
adc
push
mov
jb
xor
and
test
xor
test
or
cmpsl
push
jnp
pusha
xlat
test
cmpsl
mov
jle
bnd
imul
stos
or
or
aam
mov
pop
or
mov
shll
xchg
icebp
aam
sub
sarb
mov
ds
mov
out
push
imul
inc
pop
lret
adc
lods
cmpl
jp
pop
pop
aam
cli
xchg
cmpsb
cwtl
aas
pop
lret
push
es
sbb
or
pop
mov
mov
cmpb
mov
lock
inc
insl
or
sbb
int
lret
popa
in
jmp
push
into
mov
lret
popf
jo
sbb
cs
and
ja
or
hlt
ret
sar
jle
stos
call
loop
cld
lret
rorb
jae
jbe
or
lods
pushf
pop
call
xchg
rcll
or
jns
pusha
and
mov
testl
or
mov
xchg
mov
and
xchg
iret
and
and
popa
push
lret
sbb
aad
fldlg2
or
in
inc
insl
mov
cmpsb
and
jp
add
call
sbb
nop
hlt
nop
dec
pusha
lret
and
out
mov
leave
xchg
and
cld
lcall
into
add
cwtl
lret
int
mov
pop
in
inc
pusha
or
jp
imul
int
jge
sahf
mov
push
int
shll
dec
fldt
jmp
cmpsb
cmp
cmpsl
adc
dec
mov
mov
push
aas
cmc
lock
jecxz
cmp
lret
inc
mov
aam
pusha
cmp
nop
sub
inc
sbbb
in
adc
iret
mov
imul
xor
hlt
push
pop
arpl
loopne
dec
out
pop
arpl
lcall
pop
and
dec
lcall
cmp
in
je
sti
xchg
sbb
clc
inc
sub
bound
mov
cmpl
fsubr
arpl
cmp
in
pushf
scas
xchg
mov
or
je
lret
mov
mov
imul
shlb
mov
insb
inc
hlt
in
mov
mov
iret
adc
imul
xchg
add
xchg
daa
loope
inc
add
rcrb
adc
andb
scas
sbb
aam
xchg
sbb
push
insl
rcll
ret
push
lret
push
leave
push
int
sbbb
mov
inc
movb
pop
cmp
jbe
leave
iret
mov
pop
mov
addr16
shlb
shlb
jl
push
into
movsl
push
lds
arpl
xchg
ret
push
cli
test
xlat
repnz
or
push
mov
enter
mov
push
int3
push
aad
add
or
aad
cmp
and
lcall
add
mov
pop
cmpsl
arpl
mov
cs
fbld
mov
ja
pop
or
mov
pop
cmpsl
pop
aad
jno
lds
icebp
rcrb
int3
rol
lret
repz
xor
add
shlb
mov
push
push
movl
push
or
icebp
ficoml
subb
xchg
in
mov
nop
sub
stc
inc
sbb
lock
popa
jmp
int3
pop
xchg
and
mov
jl
ja
insb
popa
pop
jns
pop
jmp
cs
mov
push
enter
je
clc
lret
cwtl
lods
test
add
xchg
imul
stc
filds
adc
xlat
fisttpl
cmpl
leave
adc
push
in
mov
cld
xchg
sub
xchg
lds
mov
xchg
insl
cwtd
stc
mov
cmpsb
adc
repnz
notb
xor
dec
fcmove
cmpsl
fistpl
icebp
inc
mov
imul
out
and
mov
pop
cld
aam
inc
pushf
dec
sbb
and
xchg
sbb
gs
dec
push
fnsave
inc
mov
rolb
sbbl
jbe
outsl
cmpsl
dec
int3
pop
test
jns
inc
insb
dec
and
ja
shll
push
mov
sbb
inc
jp
scas
rolb
gs
out
aaa
mov
ret
sbb
je
cltd
jae
push
fisubl
dec
sub
aaa
lods
pop
add
cmp
hlt
push
or
xchg
or
push
loopne
xor
jnp
aad
xor
iret
sahf
sub
pop
and
stc
cltd
adc
dec
adc
jae
xor
push
xchg
clc
and
adc
in
mov
gs
repz
jb
mov
mov
push
and
lret
push
ss
cmc
aad
gs
addr16
pop
lds
or
cli
xlat
adc
pop
sub
xchg
or
out
mov
xchg
mov
push
mov
mov
xor
sub
orb
cld
sbb
pop
mov
loope
inc
or
fbld
arpl
mov
popa
dec
out
clc
add
out
lahf
mov
stos
mov
bound
rorb
cmc
dec
hlt
sbbb
rcrb
dec
cwtl
and
pop
mov
dec
dec
mov
add
outsl
addr16
stc
dec
mov
movsl
iret
lahf
cmp
inc
lret
daa
ljmp
lds
fcmovb
add
movsb
or
rclb
fwait
rorl
jle
push
push
push
or
stos
cmpb
xchg
cmp
sbbl
scas
xor
sarl
scas
and
pop
pop
xchg
loop
inc
mov
xor
std
rclb
cwtl
ret
and
cld
push
test
push
push
not
sub
aam
out
xchg
add
pop
fidivrs
mov
push
hlt
mov
rcll
in
sub
xchg
lea
cmp
aad
and
pop
push
mov
cmp
sbb
pop
push
bound
mov
bnd
rclb
cmp
mov
mov
adc
pop
fstl
mov
mov
decl
fldl
in
mov
xor
mov
mov
lock
in
fsubr
movsb
dec
das
and
rcll
jno
and
ljmp
pushl
lods
xchg
nop
or
xor
repz
jno
or
push
scas
cmp
fisubrs
mov
cmp
lods
fimuls
mov
out
push
push
jns
push
bound
push
mov
cmpb
or
mov
pop
lods
sahf
pop
cmp
lock
popf
xorl
mov
inc
sub
icebp
rclb
cmp
rorl
cltd
mov
mov
xlat
pop
inc
cmp
aas
add
xchg
adc
test
adc
outsb
loop
repz
arpl
mov
shlb
cwtl
add
add
out
mov
sbb
mov
test
mov
popa
xchg
inc
mov
add
scas
shll
lods
or
lock
insb
out
push
test
shl
rorb
andb
dec
or
dec
jp
jg
cmp
adc
or
dec
xor
std
push
mov
or
dec
adcl
mov
popf
dec
int3
mov
pop
vmovapd
cmp
fsubs
dec
out
or
jge
popa
mov
shrb
iret
dec
pop
pop
add
adc
mov
ret
push
mov
test
push
ficomps
test
jns
cmp
lods
stos
dec
and
out
sti
mov
test
sub
mov
ret
stc
xchg
push
mov
cmp
in
mov
stos
and
into
loop
inc
sahf
shl
movsl
sbb
lea
daa
shll
cli
lahf
lea
or
xlat
fcoms
fmuls
or
fistps
lahf
xor
and
mov
or
int
repz
es
push
ret
shr
adc
mov
adc
mov
aad
xor
cltd
movsl
repz
pop
mov
pushl
mov
sbb
mov
adc
movsl
or
daa
dec
xchg
aad
or
inc
or
lds
jl
repnz
mov
mov
pop
cld
stc
or
sbb
sub
push
mov
sbb
hlt
adc
jmp
pop
test
jnp
aas
fwait
mov
cwtl
mov
nop
xchg
incl
imul
fcmovb
mov
xchg
inc
fstpl
std
mov
enter
or
fldcw
cmp
sti
or
in
jle
mov
dec
adc
bound
repz
cmp
push
cltd
mov
cmp
inc
pop
idiv
in
push
xor
cltd
lahf
and
fimull
jne
add
int3
dec
mov
imul
cmpsb
ss
pop
call
xor
jnp
imull
push
rcll
jb
mov
test
push
pop
push
jge
pushf
mov
xlat
sub
jb
adc
mov
inc
or
or
fincstp
pushf
sbb
push
mov
adc
and
adc
jg
jle
sarb
mov
mov
cmp
push
aad
jb
push
movsb
dec
or
aam
push
pop
xchg
and
mov
jg
inc
ss
fucom
mov
mov
mov
add
js
inc
imul
xor
fprem
jb
mov
adc
cmpsl
xor
pop
lods
mov
pop
and
or
ret
push
jne
push
xchg
pop
shlb
iret
jb
leave
adc
and
outsl
cmp
lods
out
icebp
dec
mov
repz
enter
pop
mov
dec
into
subl
inc
mov
xchg
mov
xchg
mov
push
mov
sahf
out
xchg
push
add
sub
dec
inc
fs
addr16
and
mov
sub
popa
inc
fucomip
iret
adc
out
xchg
push
ficoms
stc
inc
jg
sbb
add
lcall
cmp
addr16
jle
adc
movsb
js
lret
fsubrl
sub
lret
popf
dec
mov
mov
push
sub
push
imul
jne
pop
ljmp
and
out
test
xchg
jp
stos
les
pushf
rolb
aam
push
mov
dec
xor
and
subl
inc
imull
jbe
jno
add
cmp
sbb
fisttps
addb
sub
jg
xchg
lcall
call
cmp
mov
dec
testb
mov
push
fwait
pushf
aas
fstp
jle
aad
inc
subl
out
push
mov
fisttpll
pop
sub
inc
jb
adc
in
adc
dec
inc
pop
push
add
mov
mov
push
cmpb
js
xchg
push
jne
divb
mov
shr
jmp
or
xchg
ljmp
add
or
dec
subb
pop
ret
push
mov
movsl
mov
xchg
push
add
les
fwait
lea
inc
loopne
mov
and
rorl
ds
mov
subb
inc
loopne
pop
xchg
xchg
jae
pop
pushf
or
xchg
enter
jg
int3
dec
aad
das
push
push
mov
dec
mov
xchg
lret
dec
jno,pt
push
testl
cmp
sbb
fiaddl
mov
clc
jg
aaa
rcll
xlat
jb
shlb
push
xchg
or
and
or
lods
or
inc
hlt
push
add
cmp
jl
imul
mov
stos
cmp
xchg
pop
movsl
pop
push
inc
cmpb
popa
loope
shrl
and
sbb
je
movsl
popf
push
sbb
mov
outsl
icebp
stc
sbb
data16
mov
dec
inc
jne
or
inc
adc
xchg
cs
insl
mov
cmpsb
std
jmp
jl
pushf
add
xlat
pop
lods
stos
xchg
dec
sub
repnz
xor
xchg
mov
repz
je
lret
dec
dec
jg
or
push
and
insl
stos
or
ds
in
jno
loopne
push
xchg
and
test
nop
cmp
orl
adc
add
popa
mov
movsb
and
xchg
mov
sarb
xchg
xlat
andb
test
add
in
xor
cwtl
inc
xor
or
mov
cltd
xchg
add
mov
mov
cli
xor
hlt
xor
mov
shrb
push
or
jnp
fwait
or
pop
gs
pusha
add
mov
push
lods
aas
dec
lret
aas
mov
cmc
mov
mov
add
xchg
inc
in
mov
cmp
push
jl
hlt
enter
mov
dec
xchg
jmp
sub
shl
jbe
adc
mov
mov
dec
icebp
push
imul
xchg
repnz
pop
push
sbb
or
sahf
jmp
lret
sub
movsl
int3
cmp
adc
inc
mov
popf
lods
loop
in
jns
sbb
popa
or
xchg
shlb
push
add
jbe
push
scas
outsb
fs
jg
mov
lods
inc
jmp
pop
mov
and
xchg
cli
xchg
cmpsl
aaa
les
test
out
add
shlb
pushf
sbb
sub
push
cmp
push
cmp
jnp
stos
ljmp
aaa
rorb
xor
push
stc
outsb
jno
shrb
repz
xor
mov
add
jno
movsl
outsb
repz
cmp
fnstsw
mov
adc
lds
pop
mov
ret
mov
pop
cmc
pop
pop
jns
jle
jb
cltd
sbb
sub
mov
sbb
in
cmpsb
stos
sub
pop
outsb
push
jne
mov
add
adc
mov
leave
repnz
dec
and
ja
add
fwait
sti
outsb
dec
xchg
xlat
scas
movsb
out
lret
test
popa
inc
stos
clc
jb
jbe
lods
mulb
add
scas
xchg
push
dec
stos
mov
sub
ja
sbb
sti
pop
xor
mov
jl
mov
mov
outsb
fcmove
jle
pop
push
dec
cltd
jl
sbb
push
std
xorb
push
in
stc
aad
in
aam
subl
push
pop
or
rcl
sbb
cmp
and
cs
pop
movsl
movsl
ficoml
stc
lods
lret
movsb
xchg
mov
add
js
mov
xorb
ret
cmp
fiaddl
out
mov
add
xor
lcall
jbe
fldt
fcmovu
ljmp
push
pop
in
movsb
jo
and
dec
popf
stos
push
inc
clc
pop
push
loopne
cmp
jbe
jbe
xchg
inc
mov
es
loope
adc
jmp
fbstp
fsubl
fwait
sub
mov
sub
sub
push
nop
stos
mov
add
cmp
push
out
sbb
std
loopne
push
stos
pop
pop
inc
sub
adc
out
lahf
aam
gs
cmc
xchg
dec
sbb
and
lds
popf
sar
fimuls
imul
nop
inc
dec
clc
es
test
fdivr
test
orb
ljmp
outsl
aaa
mov
adc
or
out
aad
js
shrb
addr16
sub
and
enter
add
into
shrl
in
mov
sti
cmpsb
xor
outsb
xor
mov
adc
xchg
jecxz
mov
fs
ret
cmp
mov
jb
push
addr16
sub
cmpb
jg
int
mov
sti
js
add
iret
pop
xchg
mov
cld
gs
pusha
add
imul
pop
fwait
pop
add
lea
mov
sahf
cmpsl
add
repz
insl
inc
dec
fildl
sbb
xchg
cli
movsl
push
and
jno
xlat
inc
push
push
mov
xchg
popa
xchg
push
add
out
mov
fsubrs
sahf
in
insl
sar
push
jle
dec
adc
jno
lcall
push
aas
cmpsl
test
and
les
mov
sbb
pusha
icebp
and
jl
inc
mov
pusha
push
dec
jnp
movsl
dec
sbb
jge
aam
aaa
cmp
mov
loope
and
xorb
and
mov
or
mov
and
dec
lret
lods
xchg
dec
push
or
sbb
cli
pushf
dec
ja
xchg
repnz
repnz
fbstp
repnz
sub
xor
jge
sbb
pop
cmp
fs
dec
mov
adc
xor
pop
cwtl
ljmp
out
push
paddusw
mov
jge
iret
mov
ret
das
inc
add
xor
sbb
adc
dec
lods
mov
xchg
adcl
in
arpl
pop
and
jecxz
jle
mov
cmpsb
shlb
cmp
adc
pop
rclb
add
je
lods
xchg
out
xor
mov
in
mov
outsb
jae
repz
into
push
enter
and
xor
in
jne
fsts
xor
pop
push
mov
out
push
pop
mov
xor
je
sub
pop
test
jecxz
mov
jns
or
push
pop
mov
les
sub
lcall
mov
aas
and
pop
sub
dec
sub
orb
jne
aaa
in
out
lock
push
pop
call
fbstp
adc
mov
divl
in
mov
mov
testb
xor
mov
rep
add
out
push
mov
lahf
mov
push
test
stc
imul
rol
mov
adc
pop
mov
loope
loop
icebp
into
mov
dec
push
sbb
in
repz
fs
cmp
push
pop
cli
insb
decb
vsqrtss
outsl
push
push
nop
or
in
sti
in
fldt
push
inc
push
loopne
data16
jns
sbb
xchg
repz
and
sub
pop
jbe
jl
mov
movsl
movsl
stos
int3
fdivs
mov
or
in
cmp
test
movsb
xchg
xor
in
aam
in
adc
sbbb
jmp
sub
or
add
sub
or
sub
xchg
sbb
sti
aad
roll
inc
sbb
xor
adcb
pop
outsl
and
pop
outsb
lret
movsb
cmpsb
lcall
push
adc
nop
jmp
pop
std
inc
stc
push
push
inc
sbb
jne
mov
adc
push
bound
lds
mov
aas
push
pop
jp
enter
icebp
cmp
inc
call
shll
jmp
js
loope
outsl
das
cltd
rorl
xchg
add
enter
scas
mov
pop
xor
arpl
inc
fstpt
enter
inc
shrb
jbe
xor
in
sub
push
leave
pop
lods
push
xchg
fadds
adc
jmp
jae
push
lods
std
add
pop
into
push
dec
pop
push
pop
popa
add
xor
data16
inc
xor
mov
ljmp
repz
mov
mov
test
cmp
jne
stc
je
js
mov
aaa
fwait
loope
push
and
ret
xor
mov
daa
loope
sub
jl
cwtl
fmuls
cwtl
int3
dec
cli
push
xlat
cld
sbb
mov
stc
inc
les
inc
or
mov
sbb
add
and
fstps
mov
daa
out
imul
in
lods
jl
roll
mov
cmovle
cmp
jo
enter
adc
bound
and
and
add
int
mov
test
rclb
insb
lahf
jnp
jne
flds
jl
inc
pusha
or
std
sub
or
ret
inc
mov
and
lret
push
mov
stos
inc
or
jmp
sti
cmpsb
mov
mov
inc
imul
or
sbb
sub
cmp
lret
neg
jmp
sti
cmpsb
mov
mov
inc
imul
or
sbb
sub
cmp
lret
jbe
inc
jmp
sti
mov
mov
inc
imul
or
sbb
sub
cmp
lret
neg
jmp
sti
cmpsb
mov
jnp
dec
jbe
in
imul
addl
aam
les
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xor
dec
pop
jns
imul
push
popa
sub
int3
stc
mov
mov
insb
dec
pop
jns
imul
or
lods
aad
leave
repnz
int3
jmp
pushf
mov
in
push
fisubl
jno
add
and
xor
flds
pushf
pushf
lock
jmp
inc
cmp
sbb
push
mov
imul
iret
add
test
std
inc
ljmp
mov
ret
fs
cmp
cli
aaa
mov
js
adc
and
cmp
push
sub
jl
pop
dec
int3
ss
pop
and
xor
mov
xchg
xor
inc
cmp
xor
shr
cmp
adc
and
rcrl
sbb
cmp
xor
jae
stc
fcoml
sbb
pop
xor
and
iret
push
dec
fwait
lods
cltd
int3
ljmp
mov
xchg
aam
cltd
cmp
jns
mov
mov
cmp
pushf
scas
dec
dec
insb
pop
pop
pusha
and
sbb
sbb
mov
push
fnstcw
add
shl
faddl
call
cmp
sbb
or
sbb
andnps
popf
mov
leave
mov
lods
mov
cld
ret
lret
lds
and
or
inc
jo
jg
les
mov
mov
fmulp
fisttpll
pop
pop
dec
sub
or
or
or
cld
fldlg2
leave
fdivr
int3
jmp
pushf
mov
insb
dec
pop
jns
imul
or
cld
fldlg2
leave
fdivr
int3
jmp
pushf
mov
test
hlt
adc
xchg
inc
xchg
jl
push
xor
sub
dec
repz
aas
icebp
inc
loope
sbb
sbb
mov
push
mov
xor
push
ljmp
mov
sub
negl
mov
jp
sub
xor
jl
jae
and
push
mov
or
rolb
cmpsl
call
mov
lcall
outsb
lock
sub
jg
nop
sub
adcb
jb
mov
add
and
test
out
sbb
or
addl
adc
xor
mov
mov
jecxz
add
dec
lods
sbb
cld
and
lds
adc
jae
ds
out
push
idivb
outsb
nop
mov
loop
push
or
lcall
or
jmp
lcall
xchg
ficoml
movsl
les
sub
in
insb
push
aam
scas
mov
xor
dec
dec
test
lret
lock
push
or
sub
mov
movsl
mov
mov
movsl
roll
mov
sbb
mov
into
fisttpl
cmpsb
daa
mov
stos
test
lcall
rcll
ljmp
loopne
jb
jp
dec
jmp
xchg
inc
lea
dec
je
lret
jae
sub
ds
xchg
sub
inc
pop
stos
lret
mov
divb
cmpsl
add
rcrb
inc
push
andb
push
jecxz
xchg
push
cli
adc
movsl
pop
jmp
mov
ss
ret
mov
nop
aaa
outsl
repnz
loope
pop
mov
and
adc
adc
sub
adcb
and
lods
pop
or
push
out
into
push
inc
sub
or
test
push
pop
outsb
jl
adc
cmp
sub
sbb
sub
add
push
mov
sarl
push
shrb
call
inc
xchg
xchg
xor
xchg
dec
iret
leave
test
pop
and
sbb
dec
sub
sbb
sbb
dec
int
sbb
aaa
enter
lcall
pop
sbb
xor
mov
cmc
push
gs
imul
sub
mov
dec
xchg
rcll
xchg
and
insb
movsl
mov
clc
xchg
adc
cmp
jno
in
inc
jae
or
pop
add
xchg
inc
or
cmpb
loope
cltd
in
aaa
lahf
in
dec
imul
xor
lods
adc
mov
jg
iret
xchg
cmc
into
and
inc
test
push
cmpsb
fstl
inc
jg
lret
mov
sahf
mov
and
leave
scas
aam
adc
cmp
push
inc
cmp
aaa
lea
push
dec
ja
aas
adc
mov
rcl
adc
push
fdivr
xchg
mov
daa
adc
jge
inc
or
lods
loopne
inc
mov
mov
cltd
pcmpgtb
or
lea
dec
scas
outsb
xor
xchg
cmpsb
out
cmc
sbb
enter
mov
sbb
xchg
scas
and
repnz
mov
pop
jmp
dec
lds
cld
in
mov
jbe
push
out
jecxz
xchg
xlat
pop
mov
push
inc
sbb
jbe
scas
outsl
lret
rorl
mov
shll
and
xchg
mov
pushf
clc
stos
adc
push
in
cld
adc
xor
cmp
pushf
shlb
inc
addr16
or
stos
in
inc
cld
dec
rol
xor
ret
in
adc
push
jo
iret
mov
sub
fmuls
sbb
sub
dec
aad
aam
mov
lcall
sub
stos
dec
mov
push
sub
cmp
lret
data16
movb
fnstenv
mov
or
lret
test
xchg
rcll
pop
es
aam
xor
add
mov
jnp
sbb
in
movsb
fcompl
fdivs
cmpsb
test
add
fiadds
mov
pop
cmp
xchg
sbb
jg
fwait
icebp
push
xor
into
adc
pop
and
lret
xor
ja
xchg
jnp
xchg
test
cmpsb
fcmovu
iret
pop
cld
push
jbe
jo
jnp
aam
out
les
in
in
std
cltd
and
dec
mov
push
cmc
in
in
je
push
mov
imul
lcall
cmpsl
cmpsl
ret
mov
sti
sahf
pop
xchg
fsubrl
mov
bound
adc
call
and
nop
in
mov
arpl
pusha
jmp
roll
imul
fstpt
push
mov
adc
xchg
ret
mov
push
cmpsl
in
ds
jne
insb
push
mov
fsubs
sub
add
enter
sarl
and
or
ret
aad
fwait
nop
dec
repz
adc
xchg
sti
add
fstpt
add
ficoms
cs
lahf
loopne
fwait
pop
scas
pusha
in
stos
dec
pusha
add
mov
loope
in
aas
add
sub
sub
pop
stc
pop
dec
loopne
rcrl
sub
sub
in
sarl
out
inc
push
je
xor
rcrb
into
push
pop
or
mov
adc
daa
jbe
jne
nop
test
rorb
test
xor
loop
dec
clc
sbbb
sbb
mov
ss
movsl
test
add
mov
aaa
fisttpll
xor
repnz
scas
inc
xor
sti
cmp
or
mov
fsubl
jmp
mov
push
jle
jno
sbb
jmp
cli
sub
insl
in
hlt
fdivl
out
and
jb
jg
outsb
add
int
ljmp
cmc
mov
jmp
sub
pop
dec
push
inc
test
pop
lret
or
adc
subl
sub
mov
stc
rorl
clc
mov
jg
sub
fists
movsb
in
out
incb
dec
cmp
push
hlt
xchg
or
dec
pop
sbb
push
cmp
seto
fldcw
push
jmp
dec
daa
imul
pop
jbe
scas
inc
test
fildl
test
mul
lea
xchg
add
and
leave
test
jecxz
loope
adc
inc
jae
add
sub
adc
pop
sbb
mov
pop
mov
add
imul
popf
jbe
pop
pushf
clc
add
fisttps
fisubrs
and
nop
cltd
inc
je
aas
push
sti
aam
xor
arpl
add
adc
jle
js
xchg
jae
xlat
push
rcrb
loope
xchg
rolb
arpl
pop
push
adc
inc
push
data16
ljmp
mov
push
popa
int3
and
out
cmp
pop
outsl
mov
jecxz
cltd
in
loop
jnp
sbbl
inc
pushf
rcr
push
adc
mov
xor
or
shlb
testb
jns
inc
push
stos
or
jmp
mov
adc
cmpsb
in
nop
aas
add
inc
inc
adc
mov
lahf
mov
imull
filds
je
cmp
js
mov
cmpsb
out
xchg
jg
dec
push
es
iret
adc
fs
jl
add
or
pop
leave
and
dec
aaa
sub
pop
scas
push
jp
mov
push
sub
fwait
dec
mov
jg
xchg
loop
sbb
les
addr16
cmp
pop
jle
adc
shrb
xor
in
or
adc
leave
push
and
and
sub
mov
sti
lock
dec
adc
dec
jb
test
ja
out
lret
push
pop
sub
mov
or
out
aam
lds
icebp
mulb
dec
sahf
mov
jmp
cmpsl
push
lods
xchg
sub
mov
cmpsl
inc
push
and
dec
mov
mov
xor
in
lods
pop
test
push
dec
mov
and
repz
lcall
cmp
jae
pop
cs
sub
mov
pop
test
ret
dec
mov
movsb
xor
enter
xor
jg
fstpt
or
bound
orb
sub
in
and
xchg
dec
push
mov
mov
pop
push
xor
subb
bound
lods
incl
mov
orb
lock
add
rorb
lcall
lret
mov
pop
mov
lahf
mov
dec
imul
cmpsl
cwtl
sub
sbb
mov
jl
fldcw
arpl
and
xor
fistpl
or
and
lcall
xchg
rcl
or
and
aaa
not
es
roll
aaa
pop
sarl
sahf
add
bound
mov
shrb
lret
das
adc
adc
rcrb
ljmp
mov
jno
rolb
fistpll
mov
jl
mov
repz
out
pop
ljmp
sbb
pusha
add
repz
or
negl
scas
sahf
xchg
pop
push
in
stc
sub
fstsw
mov
mov
test
cli
pushf
lret
inc
out
pop
jecxz
imul
and
inc
xchg
addr16
sub
stc
outsb
xor
cmc
sha1rnds4
and
dec
push
xor
cld
aas
sub
imul
into
xchg
jecxz
jp
sub
adc
add
mov
xchg
fisttps
loop
in
xchg
cli
aam
and
inc
sub
jne
pop
lahf
pop
lock
pop
sahf
push
add
and
sbb
fwait
ljmp
test
repz
lcall
in
lea
insb
sub
fistpl
pushf
lea
mov
xor
dec
js
and
adc
xchg
pop
push
push
mov
or
sbb
inc
mov
dec
bound
inc
arpl
ret
push
outsl
mov
out
add
mov
mov
push
sbb
push
push
xor
std
test
incb
fiadds
lret
insl
mov
pop
xor
insl
mov
add
sub
or
adc
inc
arpl
jmp
ljmp
int
and
sub
jge
insl
fisttps
adc
sub
into
pop
stos
push
hlt
je
clc
cld
xor
sarb
loope
nop
je
aad
js
stc
adc
scas
cmpsb
test
rcll
sub
je
call
ja
mov
out
shrb
dec
cld
test
es
adc
adc
mov
rol
insl
sti
outsb
int3
sbb
mov
cmp
adc
jge
lods
aas
sbb
outsb
xchg
jo
das
fbstp
mov
cld
hlt
cmp
out
cmp
out
ss
sbb
dec
fbld
sbb
xor
arpl
sbb
jno
and
sub
jle
mov
into
insb
pop
mov
sub
push
lret
dec
addr16
test
jne
adc
sahf
or
insl
or
push
out
fidivrl
js
cmp
push
jmp
lahf
mov
dec
das
shl
sbb
stos
shl
inc
lods
cltd
xchg
cmp
push
mov
dec
dec
sub
lahf
and
or
add
fildl
xchg
mov
dec
xor
mov
cltd
fst
in
cmpsb
add
in
jae
aaa
arpl
movsw
bnd
mov
lahf
xchg
cmp
cmp
lret
loopne
test
inc
xchg
mov
repz
sbb
rcl
mov
and
pop
pop
mov
fsincos
mov
sub
pushf
dec
push
popf
jae
bound
push
test
mov
mov
out
leave
pop
pop
insb
xor
jp
mov
stos
dec
popf
divl
mov
xchg
cmp
pop
adc
push
fwait
icebp
pop
cmc
clc
sub
imul
push
dec
bound
pop
fstps
sbb
mov
out
fwait
add
inc
repz
xor
subl
das
add
xor
mov
jb
scas
xchg
or
aad
ds
xchg
add
or
cli
and
into
sub
push
inc
scas
pop
test
test
mov
movsb
ss
mov
push
arpl
inc
adc
xor
sub
sub
push
jbe
into
adc
cmp
jnp
test
or
cmp
hlt
fcoml
es
jne
js
ret
adc
clc
mov
mov
and
movsb
dec
sub
inc
mov
add
cmp
fnstcw
int
pusha
sub
gs
stc
pop
sub
xchg
loopne
aaa
aam
xor
sbb
das
ss
daa
jg
sub
pop
mov
xor
imul
in
lea
pop
xchg
push
das
pop
sbb
fstps
pop
bound
and
jge
sti
cmp
out
pop
cmpsl
ljmp
aaa
stos
sarb
mov
jmp
pop
mov
aam
fwait
cmp
inc
js
xchg
int
das
and
test
data16
mov
cmp
lea
pop
subb
loope
shr
cmp
out
xor
mov
lods
mov
loop
cmc
addr16
cmpsl
les
fists
or
clc
test
push
sub
xor
jecxz
bound
test
in
and
test
subl
push
push
cmpsb
jne
cli
pop
out
dec
jmp
inc
sbbb
cmp
pushf
inc
xor
icebp
jae
lea
dec
loope
fadds
mov
sbb
lds
lcall
out
pop
pop
jb
test
out
ret
mov
mov
sbb
aam
cmpsl
dec
and
fwait
mov
xlat
int
imul
sahf
in
inc
ret
and
mov
inc
cld
decl
lds
int
push
int3
push
and
insl
pushf
mov
xlat
push
lret
jnp
jle
lock
push
add
or
pop
sahf
xor
and
cmp
clc
into
adc
or
sbb
sti
jns
sahf
cmp
xchg
movl
imul
cs
push
pop
repnz
shll
in
je
out
xchg
mov
fcompl
ss
push
mov
sti
mov
cmpsl
inc
xchg
imul
jl
pop
cmc
insl
push
mov
xchg
or
xchg
mov
ret
lmsw
mov
mov
loop
popa
pop
ds
add
push
cltd
call
dec
push
lcall
cmp
and
pop
push
into
scas
jne
jg
sbb
jl
nop
testl
das
cmpsb
scas
in
pop
adc
push
pop
inc
push
cmpsl
adc
mov
lods
xor
bound
dec
divl
push
jae
cmp
or
pop
in
test
mov
arpl
mov
xchg
mov
inc
lds
es
into
daa
in
clc
push
pop
sub
sub
push
dec
popf
arpl
sbb
add
lret
inc
jp
sbb
push
ss
pusha
add
enter
clc
cmp
sbb
pop
loop
push
jp
imul
and
xor
pop
ficomps
add
pop
fnstenv
repz
dec
ret
jno
inc
int
into
das
cmp
or
jo
je
jae
testl
lret
mov
sbb
hlt
adc
dec
gs
enter
faddl
inc
aam
xor
ficoms
rcrb
out
je
sti
or
rorl
push
jecxz
xor
dec
pop
stos
mov
subl
xchg
in
ja
clc
cs
nop
cmpsb
pop
push
leave
jl
int
mov
bound
xchg
mov
mov
test
mov
outsl
cmpsb
sbb
inc
gs
fdivr
sbb
mov
cld
pop
addr16
mov
xchg
bound
pusha
out
adc
fisubrl
outsb
and
pop
or
dec
add
ret
jne
xchg
pop
xor
jbe
js
adc
push
bswap
xchg
adc
lcall
jno
xor
lods
popf
xchg
lahf
outsb
jmp
clc
int
pushf
out
xchg
mov
in
jne
mov
das
roll
add
cmovb
mov
sub
xchg
mov
sub
and
dec
aas
aaa
inc
xchg
pop
xor
jmp
or
jl
pushf
outsl
push
sub
fdivs
push
lahf
inc
clc
add
or
xchg
jbe
movsb
xchg
ror
scas
cmpsl
jns
fistpll
test
xlat
xor
sarb
jns
add
and
add
icebp
mov
pop
xor
add
mov
std
dec
push
lods
outsl
subl
mov
fdivl
sub
daa
shlb
rol
arpl
std
push
or
outsb
movl
out
push
inc
call
lods
stos
lret
xor
hlt
pop
jl
cli
push
out
sub
mov
nop
bnd
xchg
into
in
ljmp
and
lea
inc
xor
jae
pop
sbb
xor
test
or
jl
jo
fwait
cs
es
in
sub
and
mov
push
lods
js
addr16
dec
sub
orb
scas
movntq
insb
push
nop
add
or
jp
jno
stc
out
sub
jb
cmc
in
arpl
loopne
push
ds
cmpsl
test
xchg
cmp
mov
mov
outsb
sbb
jp
mov
inc
jge
mov
scas
outsl
addr16
mov
pop
or
addl
lea
sti
lcall
mov
shll
jb
jb
mov
add
or
insl
push
xlat
xchg
les
inc
inc
pop
hlt
cmp
pop
mov
sbb
fadd
jns
mov
outsl
shlb
mov
hlt
cld
push
cmp
cmp
xor
and
mov
xor
iret
orb
mov
inc
cltd
in
mov
fcmove
sbb
inc
out
and
nop
ss
aad
push
push
xor
insb
insb
pop
in
jecxz
cli
inc
xor
ljmp
push
mov
mov
aas
loope
push
cli
jnp
jne
inc
aad
mov
add
arpl
fiaddl
clc
dec
fs
adc
cltd
dec
subb
jns
xchg
mov
push
mov
rcr
cmc
jo
mov
adc
mov
jb
jle
xor
pop
sbb
in
insl
mov
mov
mov
mov
xor
sarb
jo
insb
shrl
pusha
rcll
repnz
outsl
stos
scas
insb
sahf
stos
into
jnp
dec
loopne
mov
mov
or
into
das
inc
out
adc
inc
sub
fucomi
ds
xlat
dec
bound
push
out
mov
scas
or
push
pop
call
es
xchg
ret
jae
mov
inc
ds
cmp
or
add
rorl
dec
test
push
mov
loope
and
stc
lock
movsb
xchg
mov
dec
ja
cmp
enter
jp
lea
mov
mov
call
inc
imul
inc
push
xor
xlat
push
sbb
lret
loope
in
sbb
dec
movsb
in
mov
push
arpl
inc
jle
jecxz
lret
lock
js
pop
jl
neg
ss
leave
inc
add
push
sbb
mov
sub
aaa
insb
or
lods
xor
dec
mov
cwtl
adc
stos
xchg
xor
xchg
xchg
imul
cmp
in
pushf
mov
js
adc
adc
stc
test
inc
sbb
mov
loopne
or
pop
mov
jmp
ret
pop
popa
inc
dec
lret
sti
int
dec
add
jns
cmp
add
es
mov
or
and
add
pop
adc
sbbl
mov
pop
xor
jl
rsqrtps
add
push
or
jnp
lcall
xor
sbb
xchg
imul
push
xor
movlhps
sbb
mov
fwait
out
dec
and
push
fisubrl
pop
inc
popa
and
mov
cmc
pop
jbe
sbbl
hlt
xor
fstpt
les
and
xchg
in
mov
dec
add
and
aaa
fisttps
inc
xchg
and
or
sbb
xorb
call
jne
jmp
das
sbb
adc
mov
jbe
cli
pop
pop
ret
dec
pushf
fidivs
adc
xchg
in
pop
movsb
arpl
mov
jecxz
adc
cmp
add
sub
push
icebp
lods
out
clc
cmp
and
inc
cli
sahf
pop
popa
in
xor
mulb
cmp
iret
daa
mov
or
bound
push
mov
jp
test
xchg
std
arpl
xor
negb
and
push
test
notb
dec
mov
or
cmp
out
ds
mov
dec
jbe
push
test
cmpl
bound
lds
idivb
cltd
jge
push
fwait
xor
dec
pop
push
jge
ljmp
pop
aad
fistpl
sbb
pop
pop
or
sti
xchg
xchg
adc
lea
ret
orb
into
mov
mov
inc
outsl
xchg
ret
push
sbb
push
ljmp
shll
mov
mov
jnp
ljmp
test
loop
test
xlat
push
aas
pop
stos
test
popf
or
cld
xor
cld
fdivrl
fldenv
loopne
push
imul
or
cld
fldlg2
leave
fdivr
int3
jmp
pushf
mov
insb
dec
pop
jns
imul
or
cld
fldlg2
leave
fdivr
int3
jmp
pushf
mov
outsl
dec
dec
jns
imul
fldlg2
leave
aad
enter
mov
cwtl
mov
inc
dec
aam
imul
mov
cld
fsts
arpl
int3
sahf
lret
adc
arpl
jae
sti
test
push
pop
lret
dec
mov
fildl
out
or
imul
lret
cmp
or
fistpl
dec
mov
sbb
ljmp
sub
lcall
fildl
push
mov
add
shrb
scas
gs
dec
les
mov
cs
repz
popa
xchg
ficomps
pushf
mov
cmp
jo
push
sub
rolb
xchg
mov
aam
nop
jge
lea
add
lret
les
lcall
lcall
adc
mov
out
jg
sub
mov
mov
pop
dec
jp
sbb
cmc
jnp
jnp
cmp
push
sbb
or
add
lahf
mov
sbb
or
xchg
ljmp
sub
sti
lcall
pushf
pop
sub
and
xchg
sti
add
mov
jmp
arpl
fisttpl
push
mov
add
repnz
ret
dec
sarl
mov
or
mov
pop
scas
dec
xlat
insb
loop
jbe
cmp
cmp
inc
stc
pop
lcall
mov
scas
dec
std
dec
sbb
subl
scas
push
mov
jg
imul
lss
lret
push
stos
sub
cli
imul
fimull
cmp
or
fistpl
dec
mov
sbb
ljmp
sub
sti
jp
in
pusha
jnp
pop
popa
pop
pop
dec
and
sbb
leave
push
sbb
mov
lcall
sbbb
imul
and
sbb
adc
test
lock
xor
pop
lods
mov
push
cmp
mov
leave
or
sub
mov
imul
mov
icebp
cwtl
scas
cs
fistpll
insb
inc
hlt
mov
mov
and
mov
mov
rcll
loopne
pop
mov
mov
jmp
mov
bsr
xor
xor
mov
dec
jb
mov
enter
xchg
add
inc
jnp
jge
push
js
in
stos
push
cmp
xor
add
icebp
xchg
jg
xlat
dec
pop
lods
imul
cld
jae
pusha
or
inc
arpl
jns
mov
jns
xchg
jg
jmp
mov
stos
subb
fnstsw
subl
int
or
aad
sbb
sti
mov
sbb
mov
pop
arpl
sub
lahf
out
jb
shlb
xchg
aad
pop
mov
call
lret
fnsave
lcall
push
inc
xchg
or
insl
sbb
ljmp
test
mov
cmp
fimuls
sbb
stos
and
je
fmulp
xchg
out
mov
and
or
lods
jg
jge
popf
stc
dec
mov
movsb
xchg
aaa
mov
data16
test
imul
xor
rcll
adc
popf
int3
mov
and
mov
into
mov
mov
adc
inc
inc
mov
sub
mov
lock
mov
jmp
enter
xchg
and
out
and
hlt
pop
out
out
push
push
stos
loop
mov
jo
mov
sti
aas
dec
and
mov
popf
int3
sbb
xor
insb
movsb
roll
movsl
outsl
mov
loopne
or
xor
mov
rorb
scas
mov
mov
push
xor
lret
pop
cmp
adc
and
loopne
mov
arpl
mov
push
push
xor
jnp
enter
push
insl
mov
movsl
iret
xchg
mov
adcb
sbb
test
sbb
std
inc
lods
mov
test
jno
jns
mov
fnstsw
sub
inc
in
cmpsl
add
pop
cmp
nop
cmp
jge
call
cmp
and
icebp
movsb
cmp
cmpsl
lea
xchg
dec
imul
pop
add
cmp
in
ficompl
adc
ss
xchg
iret
stos
icebp
lds
addr16
adc
ljmp
or
sbbl
popf
ret
jp
movsb
std
mov
mov
pop
bound
xor
push
xor
xchg
leave
lods
and
jae
jo
aam
subl
bound
pop
mov
out
jp
negb
rolb
stos
daa
std
loope
pushl
mov
into
loopne
jg
test
pop
mov
push
add
jne
xchg
stc
in
mov
arpl
aas
push
xor
xlat
aam
fmull
add
jp
mov
mov
xchg
add
lret
mov
mov
movsl
adc
popa
inc
jae
aam
int
sahf
jmp
jecxz
pop
dec
mov
ret
xchg
jo
mov
xchg
out
mov
loope
daa
out
add
cltd
in
mov
js
int3
dec
mov
xchg
repnz
daa
aas
aam
jmp
rorl
add
into
cmpsb
call
xor
in
pusha
aaa
and
iret
les
movsb
nop
cmp
inc
pop
rcrb
sbb
inc
mov
scas
movsb
dec
scas
ret
inc
sbb
push
inc
jge
pop
loope
sub
fiaddl
inc
dec
and
mov
or
push
pop
push
push
xchg
dec
std
xchg
or
and
mov
mov
hlt
es
xor
mov
in
cmpsl
add
insb
adc
cltd
cltd
divps
mov
dec
jmp
mov
inc
out
js
call
xor
mov
aam
inc
pop
nop
xchg
lret
xchg
xchg
bound
dec
nop
paddsb
mov
or
add
ljmp
int
and
mov
cmp
insb
pop
push
ficompl
clc
dec
test
insl
jmp
jmp
mov
xorb
cs
jne
mov
sti
movsb
push
sub
mov
mov
cmpb
pushf
loopne
mov
pop
push
and
das
js
mov
out
into
pusha
push
push
and
xor
hlt
icebp
and
cmp
ret
in
imul
cmp
cmp
pop
lods
pop
and
out
adc
push
mov
mov
out
add
loop
adc
mov
cld
in
lahf
fistpll
ss
ja
push
inc
enter
pop
jp
or
clc
mul
fmulp
loopne
cwtl
out
incb
out
pop
xor
mov
stos
pop
mov
ss
aad
rcl
cmpsl
mov
lahf
outsb
xchg
andl
sbb
inc
roll
xor
xchg
ja
pop
shr
inc
mov
scas
push
sub
jbe
out
daa
adc
ficompl
pop
cld
out
cmpsl
daa
sbb
cmp
xchg
mov
addr16
push
scas
inc
dec
mov
push
jecxz
cmp
stos
ds
ss
jp
xchg
pop
fwait
out
inc
cmp
sub
out
sbb
mov
jnp
nop
cs
lret
mov
sahf
pextrw
cmp
test
xchg
call
mov
hlt
add
mov
pop
pop
adc
insl
call
fstp
orb
inc
dec
adc
imul
imul
dec
adc
lcall
and
dec
push
dec
sub
and
jmp
hlt
ja
into
mov
fwait
stos
cs
cld
jns
insb
stos
inc
test
insl
mov
and
aas
and
push
xor
push
fwait
dec
dec
stc
and
mov
sbb
enter
sub
add
inc
cmp
cmp
in
loopne
iret
mov
psubw
sub
dec
imul
lahf
mov
inc
adc
jo
jbe
xchg
shll
imul
xlat
pusha
jmp
mov
mov
cmp
fs
add
jb
inc
xchg
mov
imul
mov
ja
cmp
sbb
hlt
push
mov
cmp
add
icebp
cmp
pop
addb
pushf
mov
jecxz
sbb
lods
dec
mov
pop
push
jbe
cs
cs
rcrl
and
and
out
lret
out
pop
dec
mov
lahf
inc
lods
divb
pop
nop
nop
addb
lcall
repnz
cmp
aam
int3
mov
fwait
test
push
mov
sbb
ret
in
sub
insl
lods
repz
or
lock
jbe
dec
rorl
lock
in
aad
fisubrs
les
xchg
insl
adc
ja
aam
mov
stos
cwtl
jno
test
mov
jne
pop
push
push
jno
push
or
ss
sub
jp
mov
aad
dec
mov
mov
lahf
scas
jecxz
mov
mov
andb
fwait
adc
pusha
call
xchg
jecxz
in
insb
stc
ds
lds
aad
js
mov
jg
mov
aad
mov
mov
stos
movsb
movsl
and
mov
notb
insl
and
loop
and
pop
rcrb
aam
movsl
fildl
inc
movsl
pushf
cmpl
cmp
sti
sub
jns
mov
inc
mov
movsl
das
mov
arpl
arpl
imul
aaa
out
jle
aad
or
and
call
xlat
aad
xchg
aaa
or
cmp
sub
jg
mov
cmp
inc
add
sbb
daa
adcl
out
adc
cmpsl
xor
sub
jp
inc
adc
dec
push
gs
cmp
push
insb
inc
xor
push
testb
xchg
sub
addr16
and
nop
mov
add
vpaddw
and
dec
and
inc
and
mov
sub
pop
lds
pop
xor
xchg
jo
lcall
cltd
push
popf
jno
aad
xchg
sub
ja
sbb
or
andl
outsl
pop
cs
ret
imul
js
mov
xchg
push
out
out
mov
popa
popa
pop
lds
mov
aad
or
cmc
mov
xlat
jp
cmpsl
sub
xor
sar
sbb
lock
or
inc
adc
lock
lret
or
push
fdiv
lock
lods
push
out
popf
mov
push
cmp
xchg
imul
dec
cmpsl
std
fwait
cmp
push
shll
int3
ds
std
add
mov
cmp
cmp
mov
mov
xlat
sahf
incl
push
outsl
add
movsb
hlt
mov
outsl
int
pop
movsl
int3
inc
mov
and
cmp
ret
push
lcall
leave
adc
iret
cmp
dec
sbb
lods
ljmp
sbb
bound
or
test
rorl
sbb
ss
pop
push
lret
mov
ljmp
daa
outsb
jne
xor
xlat
jecxz
or
ficoml
lahf
testb
ja
out
lock
mov
shlb
mov
xor
ret
or
popa
mov
outsb
shll
test
out
fwait
ret
nop
pop
xorl
inc
mov
cmpsb
jg
insl
faddp
call
fimull
scas
push
sbb
std
cmp
dec
add
inc
xchg
inc
mov
jmp
mov
cmpsb
pushf
mov
divb
shll
push
pop
sbb
insl
fadds
mov
jle
xchg
and
mov
cmp
ja
add
or
icebp
pop
in
sub
sbb
pop
xor
fistpl
mov
shlb
mov
cmpsb
hlt
sahf
ljmp
lret
js
cmc
sbb
movsb
or
enter
nop
xchg
xor
xchg
fisubl
add
sbb
mov
xchg
jo
stc
sbb
sub
test
rcll
fiaddl
push
add
and
cwtl
out
push
aas
sub
loope
cli
in
cmp
imul
rorl
inc
aas
divl
xchg
outsl
or
in
mov
cs
inc
call
insl
and
testl
xchg
scas
push
cmp
ret
inc
daa
sbb
push
cmp
dec
cs
aam
test
cmp
jbe
or
add
xchg
ret
push
push
test
push
adc
jp
jns
ds
cmc
inc
ret
fdivs
jns
fcos
mov
lds
mov
push
data16
mov
xacquire
gs
inc
push
mov
pop
or
leave
sbb
call
ds
mov
cmc
jge
cld
enter
lsl
lods
xlat
rclb
or
jae
mov
cld
push
jecxz
dec
cmp
sbb
lea
push
jnp
cmp
pop
fistpl
pop
in
xchg
stos
xchg
mov
push
add
imul
add
loop
cmpsb
pusha
inc
jmp
mov
lret
test
in
pop
pushl
add
push
fidivrs
lods
stc
mov
mov
cmp
outsb
jae
idivl
outsb
imul
sub
test
push
jecxz
insb
jne
xlat
or
jmp
adc
and
cmovge
jecxz
std
loop
aas
inc
ret
and
ja
dec
xchg
insl
add
lret
adc
mov
push
xor
pop
sbb
adc
inc
inc
daa
mov
in
rorl
scas
xor
sbb
out
sti
mov
ret
xlat
paddd
lret
jmp
sub
jo
fimuls
movsl
jle
loope
push
inc
mov
dec
mov
inc
cwtl
rcr
mov
cld
cmp
mov
mov
test
aad
jl
icebp
lods
jae
xchg
lock
adc
int
cmp
inc
or
ret
stc
mov
stc
call
shl
pop
sub
adc
xor
daa
xchg
out
dec
sahf
sbb
in
add
xchg
sub
sub
mov
lods
jb
outsl
sub
shrl
or
mov
mov
jnp
mov
mov
sbb
roll
popf
cwtl
lods
adc
jns
or
insb
cmp
jns
push
dec
in
inc
xchg
arpl
xchg
stos
aad
inc
lret
lret
mov
jo
movsb
icebp
popf
lea
daa
jge
and
jg
sbb
jo
cwtl
jge
inc
cmp
push
or
adc
in
cmp
xchg
cltd
inc
or
adcb
xlat
aas
cmc
xchg
mov
and
adc
in
push
jne
pmaxub
test
cmp
dec
pusha
das
popa
dec
add
not
push
or
repnz
loop
pop
imul
clc
mov
stos
adc
aad
xor
jbe
cmp
mov
ja
daa
stos
imul
xchg
add
adc
mov
adc
in
lret
xchg
dec
push
fistpl
pop
pop
shll
xor
out
dec
gs
xchg
xor
fwait
mov
das
mov
stos
cltd
jl
and
les
es
dec
repz
adc
fwait
imull
fisttps
mov
jno
out
mov
aad
xchg
mov
fptan
push
pop
sbb
outsl
iret
mov
xor
cmp
shll
jle
adc
lahf
int3
cmp
mov
cmpb
je
inc
or
arpl
loope
mov
scas
or
push
adc
adc
das
idiv
xor
and
in
and
call
inc
cmp
add
xchg
push
test
daa
or
dec
lock
cmp
inc
jecxz
mov
jae
mov
inc
dec
enter
push
arpl
sbb
pop
aad
add
xlat
cmpsb
and
je
mov
mulb
sbb
lret
mov
cmp
insl
idivb
out
mov
jecxz
fbstp
hlt
sub
push
and
and
push
xchg
scas
mov
add
xchg
repnz
cltd
adc
adc
xor
push
cld
sti
xchg
push
pop
movsb
xorb
adc
jne
sbbb
in
sbb
mov
mov
dec
loopne
push
clts
imul
or
sti
xchg
push
adc
mov
stc
daa
sbb
xchg
cmp
lods
pop
push
xlat
xchg
adc
js
cmc
int
cmp
cmp
outsl
sahf
movsl
popf
out
addr16
and
dec
divl
jmp
test
das
shl
or
push
xor
ret
sbb
sti
sub
inc
push
sub
push
mov
sub
jae
out
cld
test
popf
jnp
jge
stc
sub
mov
add
pop
or
push
pop
shll
in
adc
sbbl
xor
subps
mov
or
ucomiss
stos
fiadds
mov
popa
mov
xchg
and
jns
pop
cmp
iret
sbb
push
loop
sbb
data16
jg
add
pusha
push
dec
and
xor
push
arpl
into
aaa
adc
aas
ds
and
mov
fidivrl
outsb
into
insb
xchg
sbb
pop
xor
fbstp
idivl
fdivs
ja
mov
mov
xchg
mov
mul
push
inc
aaa
popa
inc
xor
adc
fwait
push
loope
repz
cmc
gs
mov
cmp
adc
xor
pop
lret
push
int3
ljmp
lahf
ret
dec
cmp
cmp
test
out
or
inc
cld
push
or
stos
cmp
and
pop
loope
push
adc
popf
mov
or
inc
sbb
sub
inc
bound
call
xchg
adc
inc
cltd
fnstsw
sub
add
pop
push
aas
pusha
push
mov
out
ja
fldcw
mov
jg
jmp
insb
push
addl
in
or
ss
inc
adc
and
cmp
aaa
cs
sub
dec
test
adc
arpl
test
lea
mov
addr16
pop
mov
xchg
in
fiaddl
pop
mov
lret
mov
pop
adc
sbb
dec
inc
data16
insb
fsubl
scas
or
xlat
or
out
jns
jno
sub
inc
aad
xor
cmpsb
cld
and
int3
fwait
mov
pop
xor
push
in
addr16
xor
or
inc
dec
mov
jmp
rcl
add
call
sbb
cmp
in
push
mov
sbb
cmp
nop
mov
stos
repz
cltd
adc
mov
movl
jg
jae
lret
xchg
cmp
push
stos
out
mov
cwtl
daa
jno
ret
ljmp
outsl
mov
test
and
or
leave
mov
fistpll
add
xchg
mov
adc
insl
arpl
jb
lods
pop
lret
xchg
xchg
and
movl
into
mov
mov
xor
out
popfw
scas
xor
dec
mov
in
xchg
push
das
mov
test
jl
xor
std
jle
fs
enter
sbb
xchg
hlt
mov
push
jmp
sbb
cmc
negb
xor
lods
push
ss
jecxz
sarb
xor
jnp
dec
sbb
bound
lcall
adc
jno
lods
pop
push
imul
jb
js
or
bnd
movsb
arpl
and
inc
mov
addr16
dec
push
dec
outsl
gs
fbstp
mov
cmp
xor
dec
mov
mov
cmp
push
xchg
cs
in
fwait
dec
cmpsb
clc
subb
cmp
movsb
lahf
sub
jo
ss
mov
push
lods
push
pop
rcll
cmc
mov
mov
popf
jge
mov
push
bound
sbb
inc
dec
jge
cs
mov
xchg
inc
incl
inc
inc
cmp
iret
cmp
dec
xor
push
nop
inc
push
mov
repnz
mov
adc
xor
xchg
or
mov
dec
cld
arpl
int
into
stc
adc
jle
cmpsb
data16
jecxz
rorl
cmc
das
lret
dec
sarl
loopne
and
mov
ret
pop
std
sub
sub
mov
test
jo
xor
pop
jle
iret
ret
lods
aas
outsb
mov
jmp
push
movsl
jle
push
lahf
int3
ss
popa
iret
pop
das
call
dec
notb
out
scas
bound
mov
popa
push
mov
jae
mov
mov
push
mov
int
add
jmp
push
jp
jnp
test
pop
add
test
pop
mov
mov
sub
push
pop
iret
stos
roll
inc
shr
imul
inc
pop
adc
sub
adc
inc
andb
scas
scas
dec
mov
add
mov
cltd
fmul
add
mov
and
ret
clc
data16
cmp
cmp
scas
xchg
cld
fcompl
mov
in
sbb
adc
cld
mov
push
mov
js
sbb
fnstsw
pop
in
and
ds
adc
push
js
and
fstl
xlat
add
xchg
lods
test
test
inc
enter
push
adcb
jle
fs
lea
aad
add
push
add
arpl
je
aaa
out
inc
pop
ds
out
fninit
cmpsb
sbb
adc
sub
imul
sub
sbb
lahf
movsb
jo
outsl
mov
xchg
shll
es
scas
fadd
gs
xorb
push
mov
ljmp
outsb
inc
mov
and
jmp
nop
pop
xor
lahf
sbb
call
sti
push
or
lahf
sbb
dec
loopne
insl
vmovaps
mov
xchg
mov
add
or
out
into
cmp
push
or
cs
cmp
in
lods
xchg
cmc
adc
subb
xor
fwait
in
adc
mov
pop
das
sbb
cmp
enter
loopne
cmp
int3
je
imul
lahf
and
or
flds
in
and
sbb
lret
int
lods
xchg
add
dec
in
pushf
movsl
sbb
xor
popf
cli
xchg
xchg
pop
sub
cli
int
adc
repz
dec
add
nop
sahf
dec
inc
dec
sub
xchg
ljmp
mov
inc
or
sti
outsl
inc
inc
movsb
sub
mov
jae
cmp
push
sbb
lret
xor
push
mov
cmp
xor
fisubs
adc
imul
push
xchg
ljmp
pop
inc
fs
movsl
fsubrs
xor
jns
mov
add
insl
jbe
sub
loop
or
loope
mov
mov
sbb
or
test
pop
mov
pushf
imul
arpl
adc
mov
test
cltd
mov
mov
inc
iret
xchg
loopne
push
xor
movsb
mov
dec
mov
sbb
ljmp
sub
sti
jp
push
pop
lret
dec
mov
sbb
ljmp
sub
sti
jp
push
pop
lret
dec
mov
sbb
ljmp
sub
sti
jp
push
pop
lret
dec
mov
sbb
inc
icebp
fimull
dec
xor
jne
mov
pop
xchg
xor
dec
popf
sub
je
scas
and
xor
add
adc
inc
fwait
push
jl
jnp
jnp
pop
xchg
sub
cmp
or
sbb
loope
sti
push
scas
add
adc
add
mov
addb
loop
repnz
or
jmp
lock
daa
negb
sbb
xor
adc
sbb
adc
xchg
fbld
xchg
nop
imul
xor
dec
insl
in
popa
les
and
add
xor
lahf
pop
pop
in
sahf
adc
cli
jnp
add
outsl
cmp
sbb
add
fwait
ret
push
arpl
mov
mov
imul
dec
rclb
jecxz
sbb
lret
std
xchg
or
lret
mov
test
pop
das
insl
jnp
sti
out
xlat
or
fiadds
add
mov
mov
jnp
add
imul
xor
adc
add
xor
ficoml
imul
imul
stos
mov
dec
xchg
cmp
and
or
add
repnz
xor
add
adc
inc
cmpb
int
mov
jmp
sti
dec
mov
or
inc
mov
add
add
inc
adc
jnp
sbbb
stos
push
xchg
addr16
shr
pop
sti
inc
mov
jge
add
sbb
daa
fwait
add
jmp
loope
ljmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
imul
xchg
sub
cmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
imul
aad
cs
dec
mov
inc
adc
rorb
pop
xchg
or
xor
cwtl
hlt
aad
mov
inc
rcll
xlat
rorb
push
push
add
stc
sub
mov
mov
and
pop
sub
es
and
or
std
int
mov
dec
pop
dec
pusha
loop
lcall
push
and
repnz
push
inc
xlat
idivb
mov
xor
not
popa
insl
pop
jmp
cltd
dec
lahf
inc
mov
divb
pop
push
vcvtdq2ps
pop
mov
shll
cmc
push
add
insl
loopne
test
cli
or
das
pop
movsb
mov
add
xor
jl
out
movsl
mov
mov
jl
rorl
add
sub
cmpsl
ds
inc
jl
xchg
faddl
adc
cwtl
test
aad
jg
clc
dec
fimuls
dec
leave
xchg
cmpl
mov
xchg
adc
pcmpgtd
dec
ror
inc
pop
adc
xchg
data16
pusha
mov
insl
scas
sbb
dec
xchg
inc
lods
xor
xor
outsb
dec
lcall
add
gs
rorb
movl
ljmp
add
sbb
inc
xchg
mov
xchg
insb
test
shr
dec
notb
dec
std
or
test
adc
mov
dec
fidivl
cltd
push
and
mov
inc
pop
sbb
lret
std
inc
cld
ret
aam
inc
lea
sbb
fimull
adc
inc
repz
cwtl
jbe
sbb
cld
xor
fidivl
outsl
gs
mov
ret
and
push
incl
loope
lea
and
jp
mov
add
inc
in
fsubp
mov
xor
or
inc
fadd
add
inc
daa
jo
sub
cld
movsb
rclb
call
mov
cmpsl
sbb
shrb
mov
aas
scas
out
stos
ja
pop
mov
pusha
dec
mov
leave
cmp
sub
daa
dec
adc
aas
out
test
sub
inc
mov
pop
das
xor
iret
lods
push
inc
rcrl
xorb
shrb
nop
popf
clc
push
in
stc
mov
fwait
repnz
cmp
push
mov
out
xlat
pop
add
shll
icebp
xchg
lods
rorb
test
push
adc
mov
and
loope
rorl
push
dec
mov
jmp
dec
fsubs
dec
stc
int3
inc
arpl
ljmp
fwait
cld
stos
mov
xor
mov
testl
loope
jo
xchg
inc
inc
mov
pop
mov
xor
sbb
push
in
js
mov
mov
lea
js
repnz
jb
flds
xlat
sbb
pop
xor
cli
jl
mov
aam
push
adc
iret
inc
xchg
and
pop
bound
jne
sub
popf
mov
adc
and
xchg
push
nopl
adc
hlt
pop
push
inc
pusha
mov
jnp
pop
repz
outsl
dec
sti
cld
leave
cmp
pop
and
test
push
or
and
xlat
xor
add
leave
in
inc
popa
int
jne
data16
ficoms
pop
outsb
inc
xor
and
mov
imul
jo
jp
fs
jnp
nop
lods
call
fidivs
xor
ja
ljmp
mov
stc
mov
dec
sbb
push
mov
pop
and
adc
aad
in
sbb
movsb
inc
stos
sbb
into
icebp
cmp
xchg
adc
fstpt
push
mov
push
cli
pop
mov
dec
cld
call
ret
pop
movsl
push
inc
popa
adcb
xchg
mov
push
push
in
and
repnz
cmp
les
sub
xor
nop
aas
jecxz
es
daa
repnz
out
xchg
mov
sahf
fstl
or
mov
ljmp
and
setne
jb
inc
dec
mov
xchg
mov
push
jmp
xchg
into
rorl
icebp
cmc
es
or
insl
lret
in
in
rolb
fdivr
xchg
mov
movl
pop
jne
sar
cmp
int
jo
nop
jno
fldt
into
or
popa
xchg
fidivrl
and
cltd
clc
lea
pop
jp
mov
fldt
scas
dec
enter
test
shl
das
aam
push
adc
cmp
les
push
je
outsb
jnp
adc
adc
mov
add
arpl
mov
js
int
test
adc
aas
in
lret
sbb
aas
and
pop
jl
adc
icebp
stos
cli
mov
shrb
popa
aaa
pop
ds
scas
xchg
dec
or
adcl
pop
scas
loopne
dec
adc
pop
ret
dec
mov
idivl
out
test
dec
enter
add
mov
jbe
push
push
dec
push
loop
inc
in
fbstp
lcall
pushf
ja
push
ret
inc
push
ds
leave
adc
popw
out
loop
mov
adc
in
dec
outsb
ss
rcrl
repnz
das
jl
jae
xor
test
data16
imul
adc
push
iret
sbb
repz
cmp
cmpsb
inc
and
jmp
aaa
sti
dec
inc
mov
push
roll
push
rcrl
rcr
pop
push
mov
mov
push
mov
faddl
or
pop
test
and
es
add
cmc
adc
cmp
inc
sahf
or
mov
jne
or
lock
je
fwait
idiv
daa
add
fcoms
les
out
sub
jbe
mov
scas
movsl
inc
adc
ljmp
gs
jg
test
xor
rolb
and
sbb
pusha
lds
cmpsb
inc
adc
pop
stos
mov
rol
mov
sbb
pop
in
xor
loope
jg
push
cmp
dec
clc
ja
in
test
sbb
call
mov
cld
out
xchg
es
subb
lret
inc
sbb
jae
or
or
leave
cmc
cltd
pop
js
jb
cwtl
dec
and
mov
lret
test
insl
subb
mov
mov
sub
pop
orb
ret
xor
push
fstpt
xor
mov
mov
sbb
lahf
cmc
das
into
inc
xor
sub
xchg
jmp
popl
movsl
mov
jns
shrl
std
jb
push
sbb
sub
dec
xchg
and
cli
mov
int
stc
push
mov
out
dec
and
add
xchg
mov
lock
aaa
aam
iret
aad
pop
lods
enter
sbb
fadds
outsl
out
aad
or
call
cmpsl
scas
cmc
arpl
fnsave
icebp
cs
jge
aam
xor
mov
movsl
inc
adc
mov
push
jg
or
jns
rcrb
cmp
inc
inc
xchg
or
popf
in
dec
aad
sub
lahf
mov
mov
jb
push
dec
jmp
pop
rcrb
pop
cmp
rcrb
sub
sub
and
pop
inc
pop
pop
out
sarl
cltd
mov
add
enter
dec
rol
xor
jo
dec
pusha
sti
pop
mov
rcll
test
test
cmpsl
mov
movsb
shll
cmp
adc
jmp
dec
aam
sub
repnz
and
push
push
shrl
popa
sarl
icebp
mov
aas
insb
rcll
xchg
cmp
in
pusha
mov
jge
xchg
cmp
sub
subl
or
push
lahf
imul
aad
and
call
push
xor
xchg
push
jecxz
inc
sub
and
lds
mov
leave
jg
je
fcoms
imul
fdivl
movsb
in
insl
loopne
inc
ficomps
add
nop
and
inc
lret
pop
fdivrp
cmp
pop
adc
push
fucomip
in
mov
pop
js
sub
inc
out
jecxz
cmp
movsl
adc
popa
mov
push
jecxz
inc
xchg
xor
stc
stos
pop
call
imul
adc
mov
xorl
xchg
in
dec
jns
fisubs
pop
adc
pushf
out
out
jno
jne
sbb
xchg
pop
add
pushf
jge
jo
add
clc
push
inc
inc
sbb
pop
xchg
and
xor
xor
std
mov
enter
jbe
inc
jp
and
add
or
sub
or
int3
jo
inc
pop
movsl
loope
and
mov
pushf
dec
xor
and
pop
inc
fptan
fwait
js
decl
mov
inc
sbb
scas
xchg
stos
mov
scas
rolb
ss
call
inc
dec
pop
lds
aam
jae
pop
jns
lcall
xchg
mov
jmp
outsl
xorb
xchg
pushf
xchg
push
or
je
stc
subl
nop
mov
jmp
into
pusha
inc
sar
jecxz
stos
hlt
xchg
jae
test
dec
sub
test
and
int
push
das
decl
sub
mov
lods
cmpsb
into
nop
pop
jbe
mov
lahf
dec
clc
add
aam
arpl
std
ja
sbb
movsb
adc
sbb
ret
in
jmp
cmc
xor
stos
mov
out
mov
cmp
jmp
js
test
fnstcw
repnz
xor
popf
adc
imul
mov
add
push
rcrb
das
push
push
add
mov
out
outsl
inc
hlt
or
mov
fmul
das
lahf
mov
aas
nop
divb
iret
fildl
xor
jecxz
andl
jnp
cmp
xchg
adcl
cmpb
ja
and
and
jmp
sbbl
pop
lahf
mov
inc
sahf
in
xor
ret
fs
fsubrl
jns
hlt
jg
jle
jae
dec
ret
outsb
decl
aaa
js
sub
cltd
pusha
int3
push
mov
scas
push
aas
jecxz
nop
repnz
std
pop
mov
pop
daa
push
adc
sbb
adc
or
outsb
adc
xor
cmp
imul
sarl
fiaddl
data16
sub
out
mov
sub
lock
push
mov
push
shr
xchg
out
setne
cmc
or
out
insb
push
ficoml
enter
or
dec
adc
mov
sar
jp
pop
sbb
mov
lahf
movsl
ror
inc
inc
jmp
test
xor
xchg
sbb
dec
ss
jl
jp
or
jno
mov
aam
out
jo
jp
pop
mov
push
jb
jae
pop
sub
xchg
cmp
and
xchg
dec
sbb
xchg
mov
movsl
sarl
xchg
shll
ja
xlat
jl
pop
or
flds
add
je
push
adc
mov
aaa
jmp
loopne
idivl
test
dec
movsl
and
pop
jae
inc
add
or
push
xor
pop
ret
push
sub
mov
imul
dec
pusha
add
push
test
repnz
add
xchg
stos
pushf
pop
divl
fistl
lret
lds
xchg
shll
adc
popa
scas
mov
jo
mov
push
adc
outsb
mov
push
push
add
test
cmpsl
mov
inc
aas
push
scas
repnz
jmp
fildll
outsl
repz
and
or
inc
sbb
test
or
loop
sub
adc
out
adc
mov
loope
std
jns
aad
les
loop
movsl
insb
shlb
enter
push
ffree
and
adc
cmp
sbb
pop
xor
ficomps
in
fcomps
fisttps
adc
xchg
fists
cwtl
pop
or
xor
jmp
addb
xchg
inc
les
int
cmpsl
mov
out
mov
aad
dec
arpl
fidivrl
xor
sub
dec
jae
adc
popf
fidivs
sbb
out
lret
mov
mov
aad
jmp
scas
and
in
dec
push
aam
rcr
lea
and
aad
loopne
sbb
cmp
and
cmpsl
push
repz
sub
push
or
subb
adc
jnp
subb
scas
fdivrs
mov
and
mov
addr16
cltd
xchg
out
mov
mov
add
clc
add
std
fistpll
mov
jno
in
push
leave
ja
cmpsl
mov
sbb
inc
fs
mov
stos
cmpsb
push
adc
arpl
mov
push
out
xchg
push
fnstcw
sti
push
hlt
js
xor
cwtl
sti
dec
cltd
enter
jmp
adc
test
mov
pop
cmc
mov
stos
pop
stos
mov
mov
push
xchg
dec
outsb
xor
stos
mov
popa
test
sbb
lods
jle
push
int
mov
dec
or
fwait
lea
add
mov
fdivl
stc
int
fwait
pop
push
ljmp
bound
xor
push
int
xor
mov
pop
cmp
inc
fnsave
xchg
into
push
cld
inc
mov
stos
and
std
xchg
dec
out
test
mov
dec
xchg
lret
xlat
mov
gs
inc
sub
xchg
lret
pop
lea
add
inc
insl
cmp
or
cmp
push
bound
xchg
jae
cmovno
or
in
out
mov
cmp
cmp
jmp
add
xor
lock
xchg
scas
iret
xchg
push
ljmp
lahf
hlt
int
in
fadds
jecxz
jge
fs
cmpsl
pop
push
sub
lret
pop
repz
out
in
mov
repz
xchg
sbb
lock
aas
mov
inc
ficoml
xor
sbb
daa
popf
pop
mov
mov
fst
push
pop
xchg
cld
adc
pop
mov
dec
push
or
push
fidivs
dec
cmpsl
sahf
cmpsb
testl
cwtl
lcall
nop
test
cmp
test
sbb
jbe
jne
cmp
jns
scas
cmc
mov
adc
mul
sti
aaa
push
xchg
jns
sub
cmp
fstl
jae
jl
push
xor
mov
out
pop
xchg
or
pop
loopne
push
pop
arpl
cld
mov
ret
mov
or
xchg
lds
sub
xor
jg
xchg
andl
dec
add
xchg
jge
push
das
filds
stc
nop
and
or
dec
loop
xchg
jnp
clc
jg
fnsave
cmpsl
jne
dec
iret
lret
adc
ja
icebp
aaa
loop
dec
xchg
jge
ljmp
push
mov
flds
or
jle
test
lret
mov
pop
adc
or
dec
jge
fcmovnb
and
xor
scas
sti
adcb
add
jmp
sarb
cmpsl
dec
adc
sbb
mov
jmp
sub
xchg
dec
bound
imul
pop
rorb
push
ds
outsl
or
adcl
outsl
mov
pop
fsubs
xchg
lahf
jb
push
mov
mov
js
cmp
push
dec
sub
jb
lret
mov
loope
inc
mov
push
jbe
and
addr16
jge
xchg
lret
mov
adc
sub
sbb
out
xchg
jp
mov
jp
rcll
orb
test
xchg
loope
ficompl
out
xor
addr16
test
ds
jnp
pushf
jmp
scas
sub
sub
leave
outsb
and
mov
out
sub
mov
ret
sub
push
lods
xchg
push
lcall
fs
sbb
adc
lds
int
cmp
or
mov
mov
sub
xorb
push
movsb
lret
jp
rclb
ret
jge
or
neg
loop
sar
ffreep
js
sar
xlat
cmp
mov
paddw
or
aad
xchg
sbb
cld
test
sub
add
mov
cwtl
in
and
outsb
adc
shlb
ljmp
fldlg2
in
pop
cmp
mov
pop
test
cmovne
push
test
or
fadds
rcrl
data16
mov
mov
je
pusha
ljmp
dec
or
mov
lahf
and
cmc
push
or
jb
mov
repnz
mov
ss
cmpsb
shl
add
imulb
jecxz
ret
add
jae
movsl
pop
jl
popa
std
clc
adc
mov
xor
inc
addr16
repnz
xchg
push
mov
sbb
xchg
cmc
pop
push
imulb
shrb
jp
pop
jg
jge
and
mov
pop
js
rcrl
lock
xor
adc
inc
lods
inc
ror
gs
cwtl
ftst
in
pop
mov
xchg
repnz
xlat
hlt
ja
ljmp
mov
fdivr
inc
mov
enter
out
and
push
mov
into
dec
lea
popa
add
addr16
mov
cs
mov
stos
adc
in
cld
sub
sarl
inc
inc
push
sbb
mov
pop
inc
test
jg
mov
ljmp
xchg
or
push
shrl
icebp
push
xchg
mov
adc
ficompl
push
sub
and
mov
in
pusha
sahf
hlt
repnz
or
mov
test
jno
or
outsb
push
push
in
push
inc
lock
repz
lahf
jns
fwait
iret
js
dec
rcll
inc
icebp
std
pop
fdivs
testb
dec
jecxz
adc
popa
or
push
pop
lret
and
jae
and
xor
dec
mov
out
xor
jo,pn
inc
movsb
or
pop
xchg
inc
scas
out
imul
mov
cs
push
pop
cs
mov
add
cmp
add
mov
mov
fidivl
test
pop
and
ja
adc
or
mov
out
mov
sbb
inc
clc
add
pop
sub
fwait
pop
pop
fnsave
xor
mov
mov
je
jge
adc
setb
arpl
push
aad
cwtl
or
imul
add
cmp
inc
pop
xrelease
call
rcrl
and
pop
into
or
dec
or
jge
cmpsl
std
cmp
mov
es
ds
lds
in
and
xchg
rcll
adc
loop
inc
jmp
sbb
jns
adc
lret
mov
push
push
stos
iret
out
xchg
pop
popf
pop
daa
aaa
adc
pop
inc
jbe
add
popf
inc
mov
popl
div
mov
jnp
push
add
shlb
jge
call
mov
je
dec
fwait
sbb
push
scas
lods
test
aas
xchg
bound
ficoms
jb
ret
add
xor
sbb
cmpsl
xchg
cmc
sahf
inc
jmp
or
and
pop
push
push
imul
shr
stos
cmc
cmp
xchg
push
bound
syscall
mov
jnp
lret
xchg
repz
pop
js
pop
xchg
ss
roll
sub
or
aam
adc
ret
ja
jmp
sti
pop
mov
mov
sub
and
jge
push
mov
cwtl
imul
inc
jb
addr16
sbb
pop
xchg
sub
in
ss
inc
mov
testl
cltd
faddp
jnp
mov
jmp
mov
loopne
fimuls
bound
mov
rcrb
fbstp
jne
shr
adc
scas
xchg
mov
sbb
aam
shlb
jle
pop
xchg
xor
mov
jnp
mov
cmpb
lods
orl
and
jg
sub
push
add
pop
mov
add
jg
jns
inc
dec
shll
subl
icebp
test
movsl
sbb
ficomps
dec
sub
int
dec
sub
in
in
pop
sarb
xchg
sti
movsl
stos
call
mov
xchg
mov
incl
mov
int3
loope
pop
inc
mov
pop
out
test
pop
xchg
into
adc
push
mov
je
mov
popl
sti
cmc
cli
scas
shlb
push
xchg
xlat
movsl
mov
jp
addr16
push
xchg
dec
aas
xchg
gs
sub
push
aam
sbb
rorl
and
or
adc
cmpsl
scas
popa
imulb
out
mov
rcr
test
jnp
cmpsb
out
mov
and
fld
dec
adc
jb
jno
adc
in
adc
iret
add
add
je
mov
fdivs
int
aam
fidivrl
rorb
leave
arpl
xchg
repnz
imul
fsubrp
fiaddl
cmpsl
stos
movsl
adcb
filds
jbe
iret
pop
cmp
subb
push
xchg
loopne
lret
mov
inc
bound
cmp
or
mov
mov
or
mov
jno
add
cmp
rcr
dec
or
fimull
daa
ret
addl
gs
aas
cwtl
cmc
dec
repnz
xor
repnz
mov
sub
pcmpeqd
inc
cmpsb
adc
es
fcomps
mov
iret
jo
scas
cmp
pop
xchg
sub
cmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
imul
xchg
sub
cmp
or
sbb
jmp
sti
xor
add
adc
inc
fwait
push
imul
xchg
sub
cmp
ret
jmp
sti
xor
add
adc
inc
stos
push
pop
mov
pop
xchg
sub
cmp
mov
fwait
rclb
add
popa
add
gs
xor
sub
cmp
imul
out
pop
jbe
jge
pop
jmp
sti
ror
or
cmp
addr16
jnp
dec
lea
stos
insl
mov
pop
stos
add
cmp
xchg
dec
leave
cmp
popf
sbb
push
xchg
iret
insl
cwtl
pop
jecxz
das
cmpb
lahf
jg
jns
test
jb
outsl
mov
jo
in
out
adc
push
mov
cmc
sti
xor
repnz
out
mov
sti
ss
jb
bound
iret
orl
cmp
push
aad
jle
jle
or
inc
inc
jge
std
insb
mov
mov
add
out
imul
push
std
out
leave
neg
xchg
mov
pop
adc
mov
pop
adc
sti
mov
repnz
cmp
add
xor
mov
mov
sub
inc
sti
sub
pop
xlat
nop
aam
cmpsb
add
mov
xchg
dec
mov
outsb
pushf
cwtl
ds
aaa
inc
test
lret
loope
ja
popa
insl
fisttpll
mov
add
insl
insl
and
std
dec
stos
popa
mov
adc
dec
xchg
jg
arpl
aas
clc
pop
fisubrl
call
xchg
push
mov
stos
pop
mov
add
push
out
mov
or
or
bound
inc
sahf
push
sbb
cmp
jnp
dec
lea
stos
insl
mov
pop
jmp
sti
cmp
sub
cmp
or
sbb
imul
popf
stos
insl
mov
pop
jmp
sti
cmp
sub
popf
stos
leave
mov
xor
stc
mov
call
lret
pop
xchg
push
jge
gs
push
scas
xchg
mov
insl
cmc
dec
mov
mov
lock
mov
aaa
nop
push
cmp
lods
xchg
out
xchg
pop
mov
pusha
out
sti
stc
mov
dec
cmp
sbb
lret
pop
or
xor
adc
mov
mov
movsb
movsb
fcmovbe
shl
ficoms
gs
jmp
xchg
jno
mov
and
inc
repz
dec
out
adc
fldt
xchg
jnp
mov
mov
out
jno
aad
jecxz
adc
test
xchg
aam
les
push
mov
dec
div
push
add
rclb
push
xor
fstpt
add
mov
daa
pop
push
aam
mov
in
cmp
pop
cmp
insb
pop
popa
sbb
in
cmc
pop
fmul
push
rcrb
xor
scas
xchg
xchg
es
es
sub
test
fistl
or
inc
popl
loope
mov
pop
dec
push
or
adc
cwtl
fdivrs
je
stc
xor
adc
jmp
int3
inc
into
or
dec
es
fsts
into
mov
push
xchg
popa
push
stc
sarl
nop
cli
testl
push
loope
sub
sahf
mov
jl
fldl
aas
xchg
mov
xor
movsl
rcll
jge
push
pop
idiv
shll
loopne
enter
pop
in
daa
loope
mov
mov
jle
mov
lea
mov
fucompp
testl
mov
popf
andb
push
stos
mov
push
flds
dec
in
lock
movsl
repnz
pop
lds
test
push
xor
pusha
lock
test
ljmp
outsl
fwait
dec
testl
xchg
hlt
inc
xlat
es
and
pusha
test
xchg
sbb
mov
lcall
lods
cwtl
es
test
or
fmuls
lahf
aas
mov
adc
inc
iret
pop
pushf
test
mov
cs
pop
mov
or
xchg
or
push
jge
hlt
loope
jecxz
mov
aaa
popa
cmp
clc
mov
pop
push
xor
aaa
imul
jge
aam
js
rcrl
outsl
in
outsb
mov
ljmp
adc
mov
mov
cmp
bound
addps
test
repz
out
inc
fcom
test
pop
je
pop
pop
cmp
inc
dec
repnz
loopne
adc
cli
out
ljmp
lret
dec
out
jno
sbb
lret
jecxz
pslld
testb
mov
ret
clc
rcrl
add
cs
test
mov
lret
imulb
sahf
bound
mov
ds
jbe
jb
cmc
ljmp
sbb
pop
xor
stos
fnstenv
inc
movsb
into
sahf
sbb
call
clc
add
arpl
jg
pop
in
mov
adc
es
cld
or
lods
push
lret
sahf
mov
jp
push
add
sti
pop
pop
lods
sti
jge
daa
jge
push
popl
fwait
movsl
jno
cmpl
cltd
mov
xor
jg
inc
insb
sbb
adc
loopne
rol
mov
outsl
int
fmuls
scas
pusha
mov
mov
out
test
push
fcmovnbe
jb
lea
add
imul
scas
ss
and
fmuls
jge
sbb
pop
jno
loopne
mov
add
pop
jnp
aam
aaa
jecxz
dec
add
test
push
jge,pn
pop
in
add
push
or
jl
push
inc
and
les
addl
into
xor
xchg
je
fcmovne
lahf
inc
mov
ljmp
mov
mov
and
xchg
xor
lret
xor
ss
pop
nop
mov
ret
xchg
enter
dec
andb
iret
out
xchg
pop
lea
inc
loopne
and
jmp
lds
imulb
outsb
imul
data16
jne
add
shll
push
cmpl
mov
int3
push
pop
stos
outsb
dec
fdivl
repz
sbb
sub
jp
xchg
pop
cmc
xchg
addb
sbb
stos
pushl
and
repz
mov
les
mov
lods
adc
and
adc
aas
pop
mov
pop
mov
inc
inc
lods
outsl
lret
test
mov
aad
ljmp
or
dec
pop
aam
es
fsubl
xchg
push
and
mov
lahf
cmp
inc
inc
cmp
sub
fnsave
add
int
or
mov
notb
add
in
dec
pushf
rolb
or
lahf
and
pop
xchg
sbb
lods
jl
xchg
mov
dec
xlat
sub
ficoms
dec
iret
pop
lea
adc
jmp
mov
jbe
in
lret
xchg
mov
push
pop
insb
mov
and
mov
pop
mov
push
dec
push
cwtl
push
nop
loopne
outsl
pmulhuw
push
lcall
loope
mov
or
ret
in
out
pushf
and
xchg
xor
add
mov
push
push
pop
icebp
repz
in
sub
gs
xchg
icebp
popf
insl
dec
out
stos
dec
sbb
or
ret
inc
adc
aas
testl
cmpsl
cli
ljmp
xchg
inc
push
sub
stos
mov
jecxz
jl
shl
aam
repnz
add
fwait
andb
out
pusha
xor
shrl
hlt
in
add
xorl
xor
sub
gs
in
aas
cli
fsubrl
jno
mov
or
adc
leave
in
jp
insl
jb
jmp
ja
dec
jne
mov
sub
cmp
out
mov
xor
cmp
add
shlb
mov
push
mov
movsb
mov
cld
loop
dec
adc
pop
in
add
cli
sub
xor
jns
ja
ret
repnz
push
sbb
fwait
inc
push
daa
inc
push
gs
mov
cmp
pop
cmpsl
stos
sbb
dec
xchg
jmp
sub
movsl
add
mov
call
sti
adc
rorl
adc
xor
xchg
mov
sub
movsb
adcl
mov
xor
mov
movsb
pop
mov
or
cmp
inc
lahf
std
ffree
inc
out
dec
and
push
pop
pop
inc
cmp
imul
mov
mov
xor
push
push
sbb
movsl
push
xchg
pop
out
add
les
lret
sahf
mov
pop
fsts
sti
testb
sbb
popf
fs
sub
pop
jno
stc
test
dec
mov
stos
ja
lock
rcll
jb
sbb
out
jg
stos
push
dec
xchg
push
stos
xchg
shrb
mov
sbb
mov
xor
jge
dec
cmp
xchg
mov
sbb
xchg
and
xchg
or
jno
jbe
into
rcl
in
aaa
push
and
add
ret
mov
or
sbb
lea
jp
in
jmp
or
inc
bound
sti
or
jecxz
std
cli
lods
popf
and
push
and
sub
pop
sub
pop
dec
inc
xchg
adc
loope
sarl
dec
add
addb
push
cli
and
jmp
pop
cs
lods
ret
sar
sub
rclb
mov
es
incl
scas
mov
rorl
lods
test
pop
xor
and
decb
das
mov
dec
dec
mov
cmp
ret
adc
xor
push
cmpsb
pusha
mov
ja
push
aas
and
pushf
les
shll
shll
aam
scas
and
sbb
mov
jnp
jo
push
adc
pop
sub
js
movsb
adc
or
and
pop
xchg
mov
ss
sbb
dec
jbe
pusha
mov
dec
aad
scas
xchg
mov
pop
xlat
test
pop
sbb
dec
push
mov
adc
push
mov
xchg
sbb
pushf
adc
pop
jmp
mov
or
out
adc
inc
mov
js
loop
xor
pop
mov
std
nop
sub
add
test
cmp
fsubr
inc
popf
lods
sub
dec
cld
test
enter
push
inc
cltd
sub
fbstp
fdivs
lods
dec
pop
popl
out
pop
inc
call
pop
jbe
sbbl
inc
push
add
rorl
xlat
xor
lret
inc
jecxz
sbb
sub
mov
loope
cltd
sbb
ja
jns
adc
xor
subl
test
adc
add
xchg
xor
xlat
fdivl
mov
mov
push
test
fdecstp
push
pushf
xor
push
dec
out
xchg
repnz
sbb
cmp
dec
push
pop
cmp
mov
push
xor
jmp
out
out
inc
or
into
jno
decb
jno
jl
sbb
xchg
movsb
xor
fwait
cld
add
mov
pop
mov
cmc
movsb
pop
loop
jbe
cwtl
in
cld
pop
mov
shll
out
sti
shll
cmpsl
mov
mov
stc
inc
sbb
mov
lcall
mov
mov
xlat
sbb
jb
shrl
and
push
xchg
arpl
push
rolb
in
mov
addr16
pop
mov
movsb
lock
inc
loop
xor
sbb
adc
jmp
mov
or
mov
movsb
in
inc
pop
xor
xor
iret
adc
sarl
push
dec
test
pusha
ss
push
icebp
mov
push
cmp
sub
sbb
jne
mov
mov
cmp
adcb
repnz
and
icebp
insl
imul
sbb
testl
and
push
inc
inc
xchg
insl
movsb
jl
xchg
repz
pusha
lcall
negb
scas
xlat
adc
push
icebp
push
cwtl
test
aad
push
or
pushf
mov
int
negb
outsl
sahf
inc
sub
iret
jno
sbb
dec
pop
int
jmp
cmpsl
mov
cmp
mov
xchg
das
in
dec
add
idivl
mov
pop
nop
movsl
insl
xor
scas
cmp
rclb
mov
mov
pop
mov
sbb
cmp
addb
adc
jecxz
std
stc
dec
outsb
repz
and
jle
sub
sub
pop
mov
clc
push
add
lcall
adc
push
pop
rorl
ret
test
adc
inc
popf
mov
into
lret
adc
inc
out
addr16
xchg
ljmp
jmp
mov
stc
popa
out
rol
jo
cmp
ss
jo
mov
adcl
jae
adc
repz
push
sbb
push
cmp
lahf
in
mov
xor
daa
pop
xchg
inc
mov
rol
xor
jns
cmpsl
push
sbbb
test
dec
in
or
sub
cmp
pop
inc
in
in
mov
les
xorl
add
leave
mov
mov
dec
sar
and
cmp
pop
xor
in
adc
ret
sbb
jg
fdivrl
xor
mov
push
into
psllw
adc
xor
pop
out
subb
mov
jle
or
mov
sahf
push
nop
xchg
cltd
fidivrs
or
push
movsb
test
dec
mov
xchg
lds
cwtl
push
pop
dec
leave
pop
mov
add
ds
adc
scas
add
nop
jae
push
das
xlat
andb
mov
push
stos
lret
sarb
test
insl
incb
and
fstl
in
mov
inc
dec
mov
push
out
adc
mov
fbstp
clc
sarl
js
xor
and
xor
xchg
cld
jnp
jge
sbbl
es
pop
je
cs
dec
push
bound
aam
mov
loopne
ret
jno
fsubrs
aam
movsl
aam
mov
bnd
mov
pusha
jo
pop
add
mov
push
dec
out
fisubl
mov
inc
push
cli
sbb
imulb
outsb
es
dec
fwait
fwait
and
out
lock
dec
inc
lods
cmp
xor
lock
push
pop
sbb
inc
popf
notl
pusha
cltd
fxtract
stos
enter
xchg
gs
or
jle
adc
mov
pusha
mov
pop
out
adc
aad
pop
popf
xor
testb
repz
ja
dec
aam
and
sbb
inc
xor
xor
punpckhbw
aad
out
adc
add
daa
fwait
mov
cmp
lcall
repnz
cmp
and
sub
jg
dec
sahf
push
xchg
movsb
adc
and
mov
mov
daa
xchg
jge
jae
jecxz
data16
cmpsb
xchg
xchg
movb
leave
xchg
pop
repz
jne
adc
mov
leave
and
int3
ss
test
or
add
cmp
mov
loopne
inc
xchg
sub
jl
pop
stos
sbb
mov
or
in
insb
xor
popf
mov
push
loopne
imul
in
push
pop
jnp
add
rol
jge
pop
das
imul
cmp
mov
js
popf
movsl
out
loope
jb
int3
popf
dec
cmc
push
mov
or
inc
or
sub
jmp
test
xlat
test
insl
mov
jns
mov
js
shlb
inc
ret
movsl
movsl
pop
adc
and
xor
adc
push
sbb
adc
out
push
dec
adcl
pop
dec
jmp
dec
pop
rcll
pop
mov
push
and
je
adc
pop
mov
push
addl
call
add
push
arpl
aas
lods
ja,pn
or
inc
mov
xchg
and
fsubp
loopne
mov
lods
inc
and
lods
jl
pop
pop
sbb
sub
std
jmp
shlb
pop
jb
hlt
cli
xor
jp
outsl
sub
fdivrl
push
sbb
inc
rclb
add
int3
lcall
jb
add
xchg
cmpb
movsb
pop
push
cli
ds
and
jae
pop
repz
pop
dec
sub
es
jmp
xchg
inc
xchg
jmp
negb
movsl
pop
les
pop
pop
lods
mov
daa
insb
inc
mov
and
ljmp
aas
sub
mov
nop
call
lret
sbb
mov
scas
jge
in
xor
xor
adc
add
cltd
aam
js
jnp
fmull
push
mov
push
push
cmp
lds
add
inc
dec
shlb
test
shll
push
push
addr16
sub
xchg
pop
andl
jge
aas
inc
adc
cmp
cmpsl
xchg
out
jmp
add
fsubrl
jg
movq
rorb
in
mov
out
sbb
insw
jl
sbb
xlat
push
xchg
mov
sar
pop
or
sub
into
sbb
and
test
bound
int3
jo
adc
or
ss
js
daa
shll
pop
pop
fwait
cmp
loop
nop
lea
mov
dec
push
lcall
shl
push
push
pop
push
mov
sub
call
pop
jl
mov
insb
and
aaa
movl
xchg
jno
mov
and
or
mov
movsb
ds
xor
and
or
adc
bound
lahf
lret
and
push
xchg
sub
sub
pshufw
jns
les
fimuls
gs
mov
test
fldcw
inc
loopne
rcrl
mov
push
imul
mov
mov
rsqrtps
mov
push
xorb
xor
sbb
sahf
cmc
mov
pop
ds
fdivrl
lods
and
push
rorb
lret
inc
mov
jl
push
or
dec
xlat
inc
pop
mull
cmp
inc
mov
pop
pop
cmpsb
jp
rorb
mov
push
jo
popf
lods
stos
mov
lret
jno
jl
xchg
enter
aad
jns
or
push
push
pop
jbe
add
popf
pop
rorl
retw
inc
das
in
insl
pop
mov
outsl
scas
addr16
jb
push
mov
adc
les
jl
fld
mov
inc
lcall
push
xchg
mov
fdivrs
mov
aad
mov
imul
pop
and
add
outsb
fnstcw
testb
jp
daa
stos
arpl
out
sub
lods
inc
xchg
cmp
xchg
and
std
pop
or
mov
mov
adc
jne
and
jmp
jle
sbb
inc
mov
xchg
and
add
jp
iret
out
cmp
sahf
cld
lods
xchg
daa
ss
sub
mov
gs
mov
mov
aam
inc
dec
test
imul
mov
mov
repnz
call
push
xor
adc
or
testl
cmpsl
and
xor
adc
aaa
xchg
test
fisubs
mov
hlt
rcll
or
cmpsb
mov
push
mov
cmpsl
cmp
and
test
mov
cwtl
repz
nop
xchg
xchg
arpl
imul
xchg
and
jg
jae
cmpsb
xchg
lock
xchg
outsl
sbb
out
xor
sub
xchg
mov
or
es
sub
push
mov
add
aad
mov
out
and
jge
sub
ja
push
pop
mov
les
pushf
sub
and
and
pop
jno
push
add
sub
aaa
jnp
in
cmp
jnp
ret
xor
popf
inc
fldcw
imul
xchg
lods
or
lods
cmp
pop
xchg
imul
xor
fstl
ja
jo
aad
addb
mov
sub
test
jl
inc
rclb
cmp
xchg
das
fists
gs
stc
jmp
mov
fidivrl
sub
imul
xchg
es
outsl
dec
or
cmp
insl
push
les
mov
push
in
leave
lods
aas
fmuls
repnz
into
dec
or
ret
pop
inc
mov
mov
push
or
lret
loopne
bound
loop
ss
jns
adc
ds
ds
xchg
roll
or
out
inc
into
test
and
aas
scas
insb
out
iret
aas
mov
insl
xor
xchg
and
mov
lock
push
call
pop
cmp
xor
cli
jl
lods
lods
xchg
enter
bound
add
sub
mov
js
mov
aas
xor
push
ffreep
cld
stc
bound
mov
fsincos
and
sti
mov
cmpsb
pop
mov
pop
adc
popf
dec
cld
mov
jmp
mov
sbb
xchg
mov
lds
inc
push
push
fists
addr16
ss
sub
pop
loope
xor
add
jne
mov
or
xor
push
jmp
inc
or
ret
mov
ret
imul
mov
fadds
and
pop
cmpsl
push
mov
cmpl
mov
outsl
mov
adc
cmp
pop
clc
in
enter
add
cmc
andb
and
jno
sub
loop
xchg
xlat
xor
pop
add
push
out
pushf
xor
cmp
imul
outsl
repnz
inc
inc
insb
adc
sub
int3
xchg
cmpsb
shrb
fsubrl
sub
mov
inc
pop
dec
fldcw
adcb
cmc
xchg
pop
iret
lods
in
sub
addr16
shr
imul
cmp
ss
je
in
in
out
pushf
add
subl
pop
sti
pushf
or
or
inc
xchg
sti
jp
loopne
sbb
sub
sub
xorb
fdivp
inc
pop
mov
mov
cli
sub
hlt
and
add
cli
or
mov
daa
jne
lahf
xorb
add
cmp
adc
xchg
and
pop
fimull
in
cs
stc
sub
out
push
lcall
nop
pusha
cli
cmpsl
sub
push
push
out
cmp
mov
sub
mov
jmp
adc
fimuls
mov
aad
mov
movsl
rorb
adc
sbb
fcoms
jno
mov
pop
sbb
test
jecxz
insl
push
cmp
test
mov
ja
sub
sbb
in
xchg
pop
mov
mov
inc
adc
pop
outsb
repnz
js
rcrb
fucomip
push
mov
mov
hlt
cmpsb
in
cwtl
inc
repnz
adc
mov
icebp
xor
and
les
mov
sub
mov
adc
jnp
and
inc
sub
adc
daa
jecxz
push
dec
and
fmuls
insl
ljmp
addb
out
lcall
cmpsb
nop
arpl
xchg
xor
lret
push
popf
push
sub
ds
setbe
pop
in
xor
fwait
mov
dec
sub
fnop
cmp
mov
push
sbb
xlat
cld
xchg
adc
dec
enter
lods
jnp
dec
lea
stos
insl
mov
pop
jmp
sti
cmp
sub
cmp
or
sbb
imul
popf
stos
insl
mov
pop
jmp
sti
cmp
sub
or
imul
fsincos
lods
jnp
dec
mov
jns
dec
fwait
push
jmp
jmp
lret
add
stc
aas
or
push
sub
popf
imul
pop
stos
xchg
inc
xlat
and
sub
and
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
aaa
lret
pop
sti
pop
jmp
iret
or
and
pop
cmpsl
dec
xchg
jnp
imul
in
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
cmpsl
pop
cmpsl
dec
xchg
jnp
imul
xlat
or
cmp
sub
fstpt
lret
psubq
jmp
fwait
jg
dec
mov
test
enter
testl
sub
dec
mov
and
addr16
xchg
mov
pop
push
push
jnp
cmp
sbb
rorl
mov
loop
rcr
mov
mov
je
mov
mov
imul
cmpsl
fcomi
adc
cmp
enter
in
inc
xchg
xchg
loopne
pop
mov
jle
stos
negl
sbb
xlat
sub
and
lret
and
mov
inc
sti
cmp
cmpsb
pop
mov
dec
out
pop
addr16
stos
aaa
lcall
je
inc
mov
mov
popa
dec
xchg
xchg
psrlq
dec
sub
xlat
jnp
pop
xor
clc
sahf
mov
mov
sub
jg
imul
sub
fstpt
lret
pop
sti
pop
jmp
fwait
ja
push
mov
mov
imul
decl
int
insl
pop
mov
sbb
jae
add
add
sbb
inc
adc
xorb
stos
dec
pop
lcall
sbb
movsl
push
aam
stos
hlt
push
ret
sub
mov
mov
mov
aas
mull
push
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
fisttpl
fisubrs
pop
add
aad
inc
out
jnp
lcall
lret
cmp
jno
push
jge
ljmp
xor
pop
dec
mov
es
cwtl
push
das
mov
loopne
outsl
push
movsl
inc
pop
dec
notl
cmp
and
in
les
sub
pop
ds
fists
cmp
inc
out
pop
loopne
push
nop
cmp
and
rorl
push
add
cmp
add
add
mov
xor
or
or
js
lcall
push
int
or
call
cmpsb
roll
out
into
push
dec
lahf
mov
arpl
xchg
into
xor
xchg
dec
subl
stos
add
repnz
sub
outsb
mov
sbb
jge
out
pushf
pop
testb
inc
outsb
push
push
outsl
xchg
mov
movsl
inc
xchg
jmp
std
jl
mov
adc
insl
cmpsl
hlt
test
ret
fsub
in
or
dec
mov
ror
push
cmc
sbb
xor
data16
mov
insb
aaa
sbb
out
imul
popf
adc
mov
subb
cld
fwait
xor
mov
inc
adc
add
push
pop
cmc
cmp
cmp
js
arpl
sub
lock
fwait
mov
and
lret
das
ret
dec
adc
cmp
ja
shlb
jb
es
and
jecxz
add
xor
out
jns
popa
or
dec
add
add
xlat
or
in
push
je
xor
fucomip
lret
mov
callw
out
int
sub
fnstsw
jb
or
mov
pop
hlt
sbb
adc
xchg
cltd
dec
adc
sbb
cmp
je,pn
inc
push
mov
xor
ficoml
cmp
test
adc
mov
cmc
pop
and
call
inc
jmp
push
inc
pop
xor
adc
xor
dec
test
adc
inc
jo
or
xorb
cld
into
adc
mul
loope
in
loop
roll
sbb
cld
repz
jns
scas
pushf
cmp
mov
and
and
jb
sub
gs
in
xchg
dec
xor
arpl
mov
sub
cmp
out
adc
into
jp
jmp
imul
sbb
pop
pop
fisubl
sub
scas
jae
jb
jp
insl
stos
retw
call
dec
mov
flds
dec
xchg
jo
das
add
xchg
cmp
lock
mov
out
lahf
push
stos
mov
aas
fldt
push
les
das
repnz
jae
sbb
jae
dec
jnp
sub
pop
pop
mov
adc
fs
cld
xchg
inc
push
push
addr16
lcall
test
movsb
subb
std
nop
dec
xor
sub
lds
mov
mov
jmp
ljmp
scas
and
mov
pop
push
mov
sub
sbb
mov
les
push
in
or
ss
fdivrs
cmp
sub
push
lahf
inc
repnz
lods
nop
dec
aas
mov
mov
inc
sub
pop
xchg
jge
ja
test
iret
sub
push
cmp
sub
adc
out
pop
cmpl
xchg
bound
dec
cmp
movb
int3
in
mov
xor
pop
mov
sbb
dec
aas
jo,pn
in
or
insl
mov
mov
jmp
adc
jbe
mov
rolb
loop
dec
sbb
test
mov
dec
push
lret
push
pusha
mov
or
scas
hlt
sahf
clc
xchg
pop
jo
cmp
push
aaa
pop
loop
jecxz
adc
in
aaa
inc
push
jae
out
mov
and
cmp
lea
bound
pop
pop
mov
jl
mov
es
in
xchg
mov
lea
icebp
pop
xchg
mov
push
push
int
xlat
movsl
mov
xchg
add
xchg
rcr
loope
adcl
ds
push
aam
repz
cmp
incl
sub
aam
movsl
xchg
and
cmp
icebp
aam
mov
sar
or
fwait
pop
mov
inc
cld
sub
pop
loope
mov
loop
xchg
mov
mov
stos
pop
mov
insb
enter
adc
jle
adc
out
xchg
or
addr16
arpl
dec
cs
gs
das
jae
xor
imul
or
pop
jg
jo
push
sbb
addr16
jp
jo
test
mov
add
jae
xor
push
pop
pushf
xchg
outsl
add
lods
fdivrp
jnp
les
in
adc
mov
push
jno
cmp
jns
push
and
test
push
sub
fnstcw
xlat
pop
fs
gs
pop
xchg
adc
arpl
mov
jno
aaa
les
or
out
jmp
push
jbe
add
dec
cmc
cmp
outsl
push
addr16
dec
xor
ret
jle
rcrl
or
and
je
lods
cmpsl
ret
lods
xor
loop
adc
lods
jb
or
fldenv
cltd
push
mov
sbb
call
inc
inc
popa
xor
out
cmp
hlt
mov
mov
cmp
xor
cwtl
dec
fdivr
iret
inc
mov
cmc
mov
shl
mov
pop
loopne
or
rorl
ljmp
repnz
xor
out
aam
int
outsb
arpl
jmp
ja
lock
mov
sub
mov
pop
popf
inc
mov
sti
push
xchg
xor
push
xchg
aas
punpckhdq
or
out
sub
mov
je
gs
aas
push
mov
aam
mov
dec
adc
inc
lods
mov
mov
mov
jae
inc
push
mov
pop
jno
mov
and
shr
test
das
pusha
mov
lahf
mov
cmp
pop
icebp
cmp
push
icebp
popf
stos
cli
adc
xchg
aad
aam
out
cld
mov
scas
aaa
mov
scas
fldt
mov
xchg
lods
xor
mull
pop
stos
test
and
daa
ljmp
or
jmp
or
movsl
je
mov
leave
nop
xchg
sub
ss
mov
xchg
sub
inc
and
or
fs
cmpsl
jb
test
or
mov
scas
jl
or
jmp
mov
xchg
mov
cmp
out
push
or
repnz
ss
je
jl
adc
imul
dec
ret
test
mov
in
jmp
fnstcw
add
movsl
cld
ljmp
or
scas
popl
mov
shrb
mov
pusha
cmp
sahf
xlat
imul
flds
adcl
lods
rclb
cli
push
adc
mov
pop
mov
rorb
jnp
jae,pn
xchg
xor
pop
shlb
cmp
mov
cltd
push
lret
mov
rcrb
test
andl
data16
xor
xchg
decb
pop
mov
xor
cmp
dec
cmp
mov
cmp
jb
fwait
add
bound
repz
gs
lret
rorl
out
ja
sub
scas
aas
gs
inc
ret
aas
mov
xchg
mov
or
mov
movd
lahf
sub
sbbl
dec
xchg
pusha
nop
ds
repz
pop
mov
mul
insl
xchg
faddl
pop
jo
pop
or
jne
inc
lods
outsb
call
lahf
pusha
ja
mov
addr16
push
fcompl
or
les
sub
imul
out
and
xchg
inc
js
adc
add
dec
ret
jno
mov
mov
pop
pusha
sbb
inc
sahf
pop
test
jl
daa
and
add
inc
aas
std
rcll
test
fistps
adc
mov
xchg
stc
or
dec
mov
xchg
and
adc
out
dec
add
out
jne
hlt
pusha
adc
sub
and
inc
pop
clc
sbb
mov
push
or
test
cmp
ja
fldl
out
adc
mov
sti
adc
fildll
idivb
xor
rcrl
rcl
sbb
push
je
jo
shlb
gs
in
rcl
sbb
add
xchg
gs
push
adc
pop
push
popf
pop
shlb
xchg
out
sbb
js
and
pop
jb
loop
and
and
sub
pop
push
outsl
testl
in
inc
in
dec
jmp
push
jno
push
out
xchg
fimull
inc
xchg
xorl
inc
push
adc
mov
repz
call
adc
mov
ret
xor
jecxz
outsl
leave
dec
adcb
cmpsb
loope
lahf
pop
sub
mov
outsb
mov
mov
inc
insb
pop
cld
sbb
cmp
mov
dec
incb
xor
frstor
push
loopne
cmpl
adc
mov
mov
scas
lea
sub
cld
push
jns
sarb
xor
xlat
outsl
test
mov
mov
fisttpll
dec
ss
cltd
xchg
dec
xor
add
jecxz
outsb
sahf
sahf
ja
cmp
xacquire
insb
and
leave
mov
xchg
dec
notl
jno
xchg
add
mov
jb
outsl
cmp
frstor
xor
out
xor
loopne
jne
mov
and
lret
stos
leave
push
ljmp
cmpsb
into
and
fildll
cmp
mov
cmp
jg
sub
hlt
imul
std
aaa
mov
pop
jmp
inc
mov
pop
mov
repz
mov
pop
push
xchg
enter
lcall
mov
rcrl
fisttpll
icebp
push
xchg
inc
dec
sbb
mov
xchg
test
cltd
xchg
pop
sub
mov
xchg
cwtl
cli
xchg
cmp
add
lcall
adc
outsl
or
rol
aas
shrl
in
mov
jp
push
lock
push
jp
test
sub
push
in
jo
clc
int
xor
movb
int3
adc
int
cmp
pop
cmp
pop
popf
rorl
inc
fnstenv
imul
movb
cltd
xchg
jle
mov
jae
jl
jmp
popa
out
fnstsw
cmp
pop
and
adc
insb
dec
scas
gs
jns
push
jb
lret
inc
test
push
xchg
imul
xchg
jae
xor
inc
out
push
jbe
pop
in
mov
fwait
sbb
add
push
xchg
cmp
aaa
jle
or
cmp
jge
nop
xor
lret
cmp
mov
mov
jno
push
flds
dec
loop
xor
ficompl
das
sbb
jmp
fptan
call
push
mov
clc
sbb
xchg
insl
xor
out
mov
mov
pusha
movsb
xlat
dec
icebp
and
cld
movsb
scas
lret
addb
test
add
das
jge
mov
mov
cmc
loopne
sbb
lds
insb
out
sbb
ja
in
cmpsl
popa
in
in
push
and
movsl
jo
mov
mov
inc
mov
sub
xor
push
dec
jno
lock
outsl
cld
cwtl
in
mov
push
inc
cmp
ljmp
cmpl
arpl
cmp
movsb
mov
pop
pop
mov
inc
mov
cmp
rcrl
or
add
lahf
mov
aaa
lcall
pop
xor
push
cmp
push
xorb
repz
leave
out
add
jne
add
xchg
xor
jl
push
leave
xchg
sbb
add
push
add
mov
in
cmc
fdiv
int3
adcl
movsb
das
or
movsb
push
adc
repz
xchg
imul
or
imul
leave
in
stc
out
fisubs
push
std
in
repz
dec
cmp
pop
cmc
scas
loopne
and
idivl
mov
jl
dec
aad
fwait
mov
je
pop
add
stos
daa
repz
sarb
lahf
imul
fstp
push
das
fimuls
jmp
push
idivb
jae
frstor
mov
push
inc
ds
stos
xchg
xchg
pop
adc
jl
test
insb
int
cmc
clc
call
cs
cmp
sbb
test
xor
cmp
movsb
mov
icebp
out
mov
pop
arpl
mov
dec
ss
stos
or
push
pop
mov
push
dec
adcl
jecxz
ret
xor
mov
xor
lock
jb
out
and
ds
mov
cmp
dec
push
xchg
adc
add
add
adc
mov
lret
dec
movsb
mov
out
sbb
dec
shl
mov
xor
adc
xchg
dec
xorb
sbb
lcall
aad
dec
and
mov
lahf
add
sti
daa
iret
pusha
push
push
fsubr
imul
popa
test
mov
mov
xchg
ljmp
xchg
lds
fmull
scas
xchg
jno
xor
mov
jo
loope
inc
jmp
jmp
or
aas
pop
not
cmp
xor
insl
les
lods
ja
leave
movsl
testb
push
inc
dec
vmovmskps
leave
xchg
mov
push
xor
mov
popa
mov
or
and
scas
rorb
inc
out
int3
into
pop
cmp
push
pop
xchg
push
cmpsl
orl
iret
push
mov
push
jl
lret
and
and
pop
je
loope
sbb
sbb
push
pop
jmp
lods
mov
or
cs
lcall
add
int
aaa
jle
ljmp
cmp
pop
inc
and
insb
cs
sub
pop
xlat
dec
jbe
jne
mov
aam
gs
mov
push
fmul
pushf
push
inc
mov
add
imulb
pop
fwait
and
cmpsb
iret
pop
and
xor
push
fisttps
or
sub
mov
repnz
push
orb
xor
mov
sub
shl
popa
xchg
pop
jb
insl
pop
fstpl
mov
in
movsl
stos
jbe
xchg
mov
add
mov
test
aam
xor
jb
out
jb
or
mov
in
imul
add
xchg
adc
push
rcrb
cltd
and
repz
lret
in
jl
and
pop
mov
xchg
loope
je
add
xor
outsl
xorb
pop
pop
pop
pop
pop
push
sbb
hlt
inc
or
push
fnstcw
out
push
mov
sbb
dec
aam
mov
xchg
add
xchg
xchg
int3
jle
int3
sub
shll
jno
test
int3
je
jne
dec
sbb
test
daa
jmp
pop
pushf
cmp
std
pop
adc
int
mov
pop
sub
and
ds
mov
repz
sub
and
imulb
out
sbb
cld
xchg
test
fists
and
push
and
scas
out
xchg
push
aad
dec
dec
in
sbb
mov
and
or
cmpb
mov
xchg
xchg
adc
mov
loopne
imul
lock
int3
out
mov
adcl
jns
fsubr
jae
js
push
inc
sbb
push
push
dec
bound
xor
repz
mov
jl
cmc
rolb
fbstp
sbb
cmp
stc
xor
jge
pop
nop
adc
and
pop
icebp
aam
pop
add
inc
std
dec
mov
addr16
aad
mov
roll
xchg
pushw
shll
imul
mulb
pop
in
mov
mov
jo
pushf
jmp
movsl
lret
push
xor
bound
mov
sub
out
icebp
insl
rcl
roll
jns
adc
jnp
call
xor
sahf
jb
aas
xor
jb
repz
cli
sbb
mov
popf
mov
in
dec
mov
xchg
xor
gs
les
mov
int3
call
sub
pop
adc
sbb
mov
inc
bnd
adc
ret
pusha
pop
and
popf
cmc
ss
in
lea
cld
mull
sub
mov
or
ds
sbb
lcall
sti
repz
aas
sbb
adc
imul
out
enter
test
pop
out
adc
and
xlat
add
sub
test
iret
mov
test
sti
jp
adc
sarl
mov
repz
adc
pushf
cli
rorl
adc
or
dec
push
sbb
pushf
push
adc
in
fildll
popa
andl
imul
sub
outsl
mov
and
shlb
cmpsl
add
rorb
sbb
mov
cmp
outsb
sub
movsl
rcl
not
adc
xchg
inc
xchg
out
sub
jb
arpl
push
outsw
stc
sub
push
inc
clc
adc
mov
and
scas
in
roll
sub
dec
sahf
add
xor
push
mov
shlb
sahf
imul
mov
arpl
aam
push
andb
cld
adc
mov
testb
lods
push
adc
out
adc
scas
mov
ret
call
sar
rolb
cmpl
dec
mov
repnz
xchg
or
fwait
mov
sub
stos
lcall
add
in
shrb
dec
pop
xlat
jge
movl
stc
and
ds
testl
int
push
mov
cmp
std
inc
outsl
std
testl
ss
jecxz
or
int
fsub
xor
push
jmp
pop
mov
inc
jns
pop
xchg
cs
mov
into
icebp
mov
pop
xorb
addr16
add
mov
ret
cmp
sbb
std
fistps
call
cmp
adc
adc
cmp
dec
rcll
or
orb
push
test
lods
std
pop
loop
and
dec
aas
pop
and
cmpsl
jbe
and
jnp
sub
hlt
dec
dec
pop
andl
add
imul
in
mov
mov
loope
leave
scas
pop
imul
fsts
push
adc
scas
mov
inc
pop
sub
das
mov
sub
add
pop
dec
sub
mov
mov
addr16
insl
push
sbb
pop
pushw
sbb
xchg
sub
loope
xchg
sbb
xchg
inc
xchg
stos
cmp
ret
enter
stos
dec
add
rcll
scas
push
sub
popa
mov
inc
push
dec
inc
test
movsl
mov
push
loop
push
mov
pusha
dec
lret
or
dec
sub
scas
mov
rclb
cmp
xor
ljmp
fdivs
gs
rol
iret
stos
mov
dec
or
or
movsl
dec
hlt
cmp
mov
into
dec
dec
inc
aaa
push
cli
ret
repz
int3
leave
sub
lret
pop
mov
add
daa
stc
mov
add
loopne
inc
mov
subl
dec
or
les
in
in
pop
inc
test
pop
and
les
sub
xchg
push
mov
fwait
loope
movb
ret
daa
lret
add
bound
pushf
jl
in
inc
or
jnp
enter
cmp
mov
popf
leave
testb
rorb
pushl
dec
sub
aas
addb
and
mov
xchg
cmpl
out
mov
pop
sti
stc
xchg
mov
data16
jo
mov
stc
pop
daa
inc
cmp
addl
dec
rol
cld
leave
loopne
mov
testb
adc
xchg
mov
fmull
dec
imul
movsl
addr16
add
xor
mov
sbb
gs
sbb
dec
test
jbe
pop
adc
pop
pop
xor
jle
add
sahf
or
popf
je
in
nop
cmc
cli
push
and
mov
cmp
adc
jo
clc
push
shll
and
cmp
push
test
fistps
mov
fsubr
adc
jmp
xor
inc
sub
sub
imul
pop
push
add
stc
lret
fst
xchg
sub
les
stos
in
pop
adc
pop
mov
lea
inc
cmp
lods
les
call
dec
push
pusha
lcall
mov
bound
sbb
xchg
cmpsl
mov
mov
dec
loopne
imul
fldcw
mov
cs
mov
mov
scas
aaa
repz
dec
mov
es
cmc
and
jnp
roll
adc
add
out
mov
push
mov
sbb
pop
xor
add
push
push
jbe
sub
inc
call
inc
cld
xor
scas
ffreep
loope
mov
and
loop
add
fadds
in
pop
iret
pop
adc
repnz
add
sbb
pop
jp
test
mov
cli
lea
inc
jmp
pop
out
ror
mov
xchg
ja
xchg
aaa
repnz
out
inc
lods
or
cli
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
lret
pop
sti
pop
jmp
fwait
mov
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
fbld
lret
pop
sti
pop
ljmp
inc
stos
mov
cmpsl
dec
xchg
jnp
imul
out
xlat
cmp
sub
out
jne
addr16
cmp
push
dec
movsb
pop
loope
jnp
sbb
xchg
outsl
hlt
sub
cmp
cmpsb
and
int
std
push
insl
int3
push
inc
in
xor
and
xchg
jge
insl
negl
sub
pop
std
push
in
jbe
add
inc
fnstenv
jge
insl
divb
or
ss
es
push
push
out
jbe
data16
push
inc
mov
andb
xchg
dec
testb
inc
frstor
mov
std
stos
inc
push
lods
mov
movsl
negl
loope
addb
stos
fsubl
inc
push
ja
imul
js
sbb
or
into
fidivrs
mov
sbb
addr16
jb
in
mov
sbb
es
test
lock
dec
cmp
cmpl
in
ljmp
inc
inc
push
cmpsb
mov
outsb
xchg
push
sbb
repnz
aad
jle
enter
scas
adc
mov
inc
lods
fimuls
rcrl
mov
mov
sub
ror
sbb
adc
fisubrl
push
dec
pop
jo
jecxz
or
sbb
repnz
cmp
es
jbe
lea
inc
sub
xchg
insl
xchg
cmp
int
mov
add
adc
and
ficomps
adc
stc
or
add
jb
jns
jl
dec
imul
add
in
lret
sbb
sbb
or
pop
flds
mov
mov
mov
stc
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
push
std
push
in
jbe
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
fwait
pop
push
roll
mov
mov
sbb
idivl
sbb
nop
mov
push
repz
and
lea
xor
inc
addr16
sub
cli
xorl
mov
xchg
call
sbb
push
aas
mov
sarb
sarl
test
dec
jecxz
xor
into
loopne
pushf
incb
mov
jnp
insl
clc
mov
add
scas
mov
mov
inc
aad
les
ja
and
and
and
xor
jbe
and
cmpsl
lret
sbb
mov
inc
add
popf
dec
mov
cltd
cmpb
ljmp
das
les
scas
lock
mov
add
pop
xchg
push
pop
addr16
inc
and
dec
or
mov
push
repnz
mov
popf
or
sbb
mov
jl
inc
jno
pop
fs
into
lods
push
adcb
int3
fstps
popf
lea
add
movsl
push
mov
insl
adc
idiv
addr16
mov
dec
push
fisttps
mov
add
gs
rorl
lret
mov
lcall
aam
ret
cwtl
hlt
outsl
cmp
mov
std
xor
pop
ljmp
cltd
scas
mov
rol
and
jge
mov
ret
pop
popl
nop
and
pop
popa
loop
hlt
iret
jle
jmp
cmpsb
jno
lahf
popf
adc
into
stos
push
fld
movsb
sbb
jmp
fucomi
or
sbb
dec
jle
or
roll
adc
data16
dec
rcrl
mov
int3
pushl
cmp
xor
bound
inc
shl
sub
cmc
jae,pt
stc
xchg
inc
cmpl
mov
xor
xor
mov
fs
fistpl
in
mov
insl
hlt
orl
sub
cld
adc
pop
lods
and
adc
pop
aad
gs
fidivrs
sbb
ss
xchg
notb
lds
in
mov
or
or
inc
out
fcomi
ret
addr16
and
sbb
xchg
ret
and
mov
xor
pop
aad
pop
xor
xchg
add
subl
xchg
pop
mov
push
call
jmp
add
fs
adc
lods
lods
dec
mov
or
or
nop
cmpsb
mov
xchg
sti
mov
lcall
xor
add
or
add
pop
cmpsl
cmp
cmpsl
ret
push
dec
xchg
push
jle
ret
imul
mov
fadd
outsl
add
mov
roll
inc
add
loop
cld
xchg
cmp
push
std
xor
into
hlt
mov
js
ret
fwait
push
cld
mov
out
add
mov
pop
mov
std
icebp
sub
shrl
test
or
sbb
loopne
pop
xchg
mov
adc
adcb
insl
xor
flds
cwtl
stos
mov
ds
out
sub
sbb
shll
cmp
jo
enter
sahf
inc
mov
ret
mov
call
out
mov
push
pop
divb
adc
cmp
mov
push
mov
ret
ret
ds
inc
or
or
inc
pop
int3
or
add
pop
mov
cmp
movsl
and
fmulp
adc
mov
push
movsl
addr16
cmp
jo
icebp
scas
or
fsubl
iret
in
cmp
pop
jo
lret
push
xor
push
dec
subb
cmp
sbb
icebp
ds
adc
add
mov
push
mov
sbb
lods
mov
mov
insb
jge
ret
xchg
movsb
dec
dec
jne
ret
bound
imul
bsr
insb
addb
in
int
or
or
cmp
push
test
sub
xor
push
fninit
fnstsw
mov
lds
push
adc
sub
mov
loopne
mov
lods
xchg
pop
aad
sbb
sti
cmpsl
mov
inc
pop
jnp
mov
pushf
or
dec
mov
adc
shll
xchg
push
mov
mov
test
mov
xor
movsl
xchg
cld
ja
mov
pop
int3
popa
adc
dec
test
popa
or
iret
lods
pusha
sbb
xchg
and
sub
adc
and
cmp
mov
loopne
scas
stos
cld
dec
mov
inc
jae
push
test
ljmp
into
and
push
inc
outsl
mov
mov
hlt
lods
xlat
repz
jae
fisubrl
js
lods
lret
xor
pop
cmp
insl
negl
mov
cmp
xor
push
mov
cli
add
outsb
add
jns
jp
mov
sub
mov
xchg
sbb
sbb
lret
faddp
mov
inc
xchg
jle
push
add
test
adc
ljmp
stos
add
mov
xchg
xchg
cmp
insb
lods
movsb
and
ret
arpl
movsl
daa
push
xchg
int
fstpl
inc
xchg
sub
add
sub
xor
jns
gs
xor
adc
cmp
xchg
int3
fisttpll
mov
sbb
mov
mov
push
cmpsb
jb
and
pop
add
int3
dec
or
jle
or
daa
mov
sahf
lahf
xchg
das
stc
push
aas
xchg
push
stos
xor
gs
pop
nop
mov
pop
push
aas
sbb
jns
addr16
and
push
and
ret
cmp
das
sbb
xchg
vminps
mov
fnstenv
mov
xor
int3
movsl
cmp
ret
popa
jb
repnz
push
fistl
js
xor
mov
inc
or
mov
xchg
sub
push
jge
aam
add
sbb
ljmp
sub
dec
div
gs
jge
pop
mov
clc
repnz
insl
dec
sub
and
inc
bound
mov
les
mov
inc
pop
dec
jle
mov
push
jl
loope
test
fcmovnb
dec
repnz
ret
mov
movsl
adc
or
cmpsb
mov
and
xchg
cvtdq2ps
std
sahf
dec
push
pop
push
and
jb
adcl
dec
adc
pop
es
dec
pushf
clc
popf
xchg
xlat
inc
push
repz
iret
jnp
les
adc
adc
pop
mov
xchg
xchg
repnz
mov
fs
inc
sbbl
adc
fadd
dec
and
mov
push
and
sarb
xchg
arpl
shll
and
mov
testl
push
mov
sbb
push
adc
xchg
stos
shlb
jo
cmp
and
mov
pop
mov
xchg
dec
xor
push
das
lahf
shl
xchg
enter
scas
add
fnstenv
dec
repz
ret
loop
lahf
add
push
jb
outsb
push
maskmovq
divl
or
mov
push
jmp
ja
push
gs
idivb
icebp
nop
sub
jp
adc
sub
fsubp
lret
pop
lahf
push
insl
mov
cmpsb
popf
mov
in
addb
mov
testb
out
shr
xlat
mov
outsb
xchg
stos
lds
dec
xlat
jmp
cmc
iret
fildll
cmc
xlat
ds
loopne
pop
sbb
fildll
stc
outsb
adc
adc
rcrl
call
es
cmp
bound
cmpsl
or
mov
mov
mov
dec
divb
rolb
push
cwtl
dec
cld
lock
fsubrs
icebp
ret
or
lahf
xchg
imull
push
clc
stc
xchg
pop
push
push
ret
sbb
xor
push
loopne
add
decb
in
add
jecxz
push
adc
inc
sub
push
pop
sbb
loop
loop
lock
mov
sub
mov
push
mov
mov
imul
mov
adc
pop
and
inc
aaa
and
push
push
adc
sbb
rcll
sub
sub
jmp
add
cld
mov
xor
scas
gs
leave
dec
dec
inc
out
fs
stc
or
aam
pop
bound
jecxz
dec
pop
jp
jo
lret
dec
sub
rclb
pop
das
inc
mov
xor
lahf
cmc
adc
xlat
dec
lret
or
mov
lods
push
adc
fisubl
or
mov
mov
xchg
sub
inc
cmc
stc
or
out
les
mov
into
clc
fistpll
int3
sub
lock
push
mov
loop
xor
lcall
mov
cmp
rolb
out
es
cmp
jle
lods
inc
bound
ret
fmul
sub
aam
sti
xor
push
push
mov
xchg
pop
mov
popf
or
mov
dec
mov
sbb
testb
movsb
andb
jp
and
cmc
mov
sub
adc
mov
cmp
arpl
testl
int
stos
mov
push
popf
mov
inc
or
test
and
ss
cmp
cld
or
insb
cltd
orb
test
movl
out
mov
gs
mov
lea
nop
push
cmp
lods
cwtl
movsl
fsub
sub
rolb
aad
mov
sar
inc
orb
sbb
icebp
xor
and
mov
sti
divl
jp
jecxz
xchg
push
movsl
and
stos
or
cmp
xchg
fwait
cmp
test
inc
fwait
les
imul
daa
add
arpl
cld
orb
cmpsl
pop
or
in
jbe
rclb
lret
jle
sub
jo
mov
and
arpl
je
push
repnz
sahf
add
sbb
call
push
lds
push
jb
mov
ds
mov
cs
popf
loope
cwtl
xchg
incl
xchg
int
lret
jp
sti
xchg
dec
push
cmpsb
sbb
stc
rcll
and
rorl
loope
push
insb
loop
or
ja
xor
lcall
push
stos
mov
stos
scas
test
pushf
push
sub
cmp
mov
sahf
repnz
int
sub
sbb
cmovbe
ret
in
and
shll
dec
xor
jo
add
mov
adc
dec
push
dec
xor
fcmovnu
mov
pop
cmp
cmpsl
test
arpl
ret
ret
mov
mov
jmp
mov
sbb
sbb
frstor
push
dec
fcmove
repnz
out
inc
xlat
addr16
test
pop
in
push
int
mov
xchg
mov
and
push
shrb
mov
xor
pop
lods
movsb
mov
mov
mov
cld
mov
fsts
inc
repnz
pusha
mov
lds
in
pop
push
xchg
sti
dec
pushf
mov
mov
add
insl
idivb
mov
cmp
inc
outsb
aas
test
enter
inc
cmpsb
or
jmp
pop
sub
stos
inc
push
int
bound
into
aaa
stos
out
addl
dec
fwait
xor
adc
imul
sbb
adc
dec
mov
or
int3
pop
add
cmpsl
push
inc
adc
pop
jb
les
mov
gs
xor
sti
fsubl
mov
es
mov
ljmp
mov
in
xor
movl
lahf
ficoms
cltd
mov
stos
xchg
jno
mov
andl
pop
push
mov
fsubrl
xchg
movb
mov
gs
out
dec
and
jecxz
mov
or
addr16
xchg
cmpsb
les
jne
push
inc
and
or
pop
mov
xor
je
pop
movsb
push
sub
je
jge
aad
ret
and
inc
js
or
push
pop
mov
xor
inc
lods
mov
mov
fidivl
jne
xor
loopne
inc
ljmp
lock
cmpsb
cmpsb
inc
and
aad
orb
pop
popf
dec
movntq
mov
dec
je
cmp
aas
pop
dec
mov
loop
xchg
sbb
inc
jno
cmp
addr16
roll
aad
or
or
and
and
movsl
sbb
test
xchg
scas
out
fistpll
cmpsl
jne
arpl
mov
clc
test
jl
imul
pusha
mov
fadd
popa
ja
jmp
call
pop
jo
mov
dec
jns
jp
cmp
int
xchg
jge
ljmp
mulb
loopne
xor
call
loop
mov
sti
mov
scas
add
mov
stc
mov
or
push
push
fisubl
aaa
push
cs
ret
dec
dec
ljmp
iret
adc
jae
cmp
daa
out
xchg
out
push
push
mov
dec
daa
lahf
adc
push
loopne
mov
mov
shlb
jo
stos
pcmpeqw
mov
loop
out
outsb
xor
push
gs
into
jne
push
enter
test
xchg
xchg
mov
mov
fs
add
and
fisttpll
xchg
scas
repnz
loop
xchg
jecxz
add
and
les
cmp
jo
stc
xchg
add
test
pop
fsubrs
inc
cwtl
dec
stc
sub
popf
push
mov
outsl
pop
aas
fidivrs
bound
out
out
div
xchg
loop
mov
fstl
pop
and
aad
ljmp
fisubl
and
push
pop
push
adc
fcmovnb
cmpsb
sub
add
call
push
dec
inc
cltd
jmp
push
stc
arpl
insl
mov
jmp
iret
mov
mov
lret
sub
mov
test
mov
push
iret
jnp
insb
leave
dec
ficoms
imul
ret
mov
enter
stc
push
pop
lret
jns
xor
pop
comiss
adc
outsb
jge
mov
adc
inc
pushf
lahf
jg
rclb
lods
ds
inc
add
in
cmp
test
cmpsl
inc
jo
mov
xor
mov
or
dec
fcomps
push
rorl
mov
outsb
xchg
push
jae
shlb
daa
je
pop
adc
mov
sub
shl
add
mov
mov
out
xchg
add
mov
jg
cli
sub
jne
gs
nop
arpl
aam
lahf
xchg
in
std
imul
xor
out
mov
sbb
or
ljmp
dec
pop
or
stos
mov
out
push
pop
addr16
and
xor
or
sbb
fisubs
out
test
mov
pop
push
and
adc
sarl
dec
lret
test
dec
mov
rcr
aaa
lods
pop
push
daa
dec
ds
cmpsb
in
push
sarl
in
and
dec
scas
xchg
es
fstpt
sbb
aaa
mov
adc
nop
push
mov
outsb
mov
sub
adc
push
les
dec
xor
imul
sbb
jae,pt
dec
xor
ret
xor
outsl
mov
dec
push
in
mov
es
add
rorb
pop
xchg
xor
sub
fildl
aas
adc
pushf
add
in
lods
pop
loope
movsl
jo
xchg
mov
adc
idivl
lret
push
jp
mov
xorb
hlt
insb
loope
int3
mov
inc
and
popf
pop
dec
mov
xor
inc
mov
push
jbe
rclb
insb
xchg
arpl
into
dec
inc
and
repnz
lcall
repnz
test
in
inc
mov
int3
icebp
mov
push
or
sbb
clc
dec
out
inc
sub
sbb
xchg
in
and
or
mov
std
push
add
fstpl
shll
pop
es
stos
xchg
dec
jmp
shrb
jp
cmp
ss
fadds
or
sub
sti
cmp
test
or
xchg
xor
push
sbb
movsl
imull
jbe
scas
scas
jl
mov
jnp
mov
inc
in
xor
cmp
inc
jl
dec
pop
push
cld
outsb
pop
xchg
out
stos
pop
aaa
lds
inc
addr16
outsb
push
decb
mov
mov
mov
mov
jecxz
cmp
and
mov
mov
sbb
add
mov
inc
aad
mov
subb
dec
sbb
cmp
scas
sub
pop
popf
push
dec
fwait
insl
sti
cmp
mov
push
inc
mov
lret
pop
cmp
jecxz
dec
aam
out
add
cmpl
dec
jb
aad
cmp
jp
imul
enter
ds
cmp
mov
cltd
in
adc
cmp
xor
jmp
andb
sub
mov
mov
lcall
cmp
adc
loope
inc
outsb
jo
add
cwtl
addl
jo
outsl
jae
lcall
and
sub
pop
and
push
xchg
loopne
arpl
xchg
shlb
jg
je
scas
push
es
into
cmp
test
xchg
pop
sbb
out
add
je
icebp
shl
in
cmp
or
fxch
ds
rcrb
cmpsb
sbb
shl
call
adc
inc
add
fnstcw
push
popa
jns
out
les
jno
push
adc
adc
mov
xor
jle
jle
lea
add
cmpsb
push
sbb
lahf
mov
fiaddl
jo
inc
lock
shlb
int
jmp
dec
mov
dec
push
add
pop
xchg
push
popa
mov
test
bound
mov
push
sbb
pop
cmp
jns
in
push
jo
add
aas
or
mov
inc
push
repz
enter
mov
fidivl
push
cmc
adcl
enter
jae
mov
xchg
dec
push
jmp
insl
nop
push
jb
pop
aas
fnstenv
adc
mov
pop
cld
rcl
or
out
xchg
push
rol
push
xor
das
xor
add
mov
sarl
cmc
mov
cs
push
xor
mov
fdivs
imul
sub
push
pop
aam
jmp
nop
dec
xchg
in
popf
adc
pop
orl
gs
mov
popf
sbb
mov
repz
jge
in
test
addl
into
mov
dec
mov
push
jne
dec
aaa
or
imul
lds
cmp
inc
decb
inc
xor
cwtl
and
das
divb
xchg
inc
in
pop
jge
ss
cwtl
push
jo
ss
mov
xchg
iret
lods
cltd
lods
in
or
cmp
dec
sub
xor
adc
dec
inc
and
out
mov
psubq
loop
push
inc
xchg
cmp
push
fldt
enter
pop
cmp
xchg
xchg
jmp
loop
and
mov
insl
testl
fwait
pop
push
push
dec
pop
fmull
mov
mov
or
push
sbb
jp
or
sbb
jp
jle
ficoml
clc
aas
scas
add
leave
inc
sti
xchg
or
stos
and
push
lret
push
and
adc
popa
into
inc
iret
fwait
add
fimuls
stos
mov
jb
pop
sub
fcmovu
mov
mov
and
ret
fisubs
cmpb
dec
loopne
ljmp
mov
and
cmp
mov
fdivs
cmp
mov
pop
xor
clc
xor
jb
out
pop
stc
mov
jae
jne
mov
aaa
dec
cmp
cmc
pop
call
out
shll
push
jae
jle
cmp
in
jg
lods
in
movsb
shl
cmp
movsl
or
mov
and
cmpsb
push
fcomip
rclb
xor
sub
clc
out
test
fimull
adc
out
lods
out
mov
sub
sub
les
push
dec
scas
cmc
sarb
jne
and
pushf
add
push
inc
adc
or
jg
and
mov
out
stos
into
mov
dec
into
dec
pushf
stos
push
cmp
rolb
clc
scas
cmpl
mov
add
add
dec
insl
push
pushf
mov
call
push
lods
repz
fwait
mov
mov
xor
sahf
fs
mov
add
shl
mov
rcll
clc
out
xchg
test
daa
sahf
sbb
out
sub
aaa
pop
adc
add
in
shrl
enter
dec
gs
out
ret
cld
pop
aas
xlat
pushw
je
jecxz
cs
xor
gs
repnz
jne
add
pop
ret
shr
cwtl
dec
rcrl
dec
lods
lods
ljmp
or
push
ja
mov
push
lds
push
mov
push
or
jecxz
inc
mov
cmpsb
scas
push
lea
std
icebp
aam
adc
ljmp
xchg
mov
into
loop
adc
dec
adc
cmp
mov
mov
sbb
data16
lock
outsl
xor
cmp
mov
out
mov
push
imul
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
push
std
push
in
jbe
lea
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
push
test
in
jbe
and
inc
lods
mov
cmpsb
dec
xchg
jge
insl
negb
sub
pop
std
push
in
jbe
lea
inc
lods
mov
cmpsb
out
jge
sbb
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jl
xor
das
xor
arpl
ja
lods
add
add
push
add
add
add
add
cmp
add
add
add
jo
in
add
add
push
add
add
insb
add
movsb
add
add
incl
pop
add
adc
add
add
add
add
out
add
add
movsb
add
add
add
add
add
add
add
jnp
out
add
dec
add
xchg
add
add
add
add
cmp
add
add
add
push
add
add
add
ja
cmp
add
push
add
add
add
addb
add
add
pop
add
add
push
add
adc
js
aad
push
add
out
add
jmp
xor
imul
adc
add
add
arpl
arpl
pop
add
xor
inc
add
mov
add
add
add
pop
add
add
add
add
add
test
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
adc
mov
inc
add
stos
add
add
add
add
add
nop
add
add
add
add
rolb
insl
add
add
add
addl
popa
add
data16
int
popa
add
add
add
add
add
jo
mov
icebp
add
add
add
add
add
cmp
and
lea
mov
mov
push
add
add
ret
add
add
add
add
mov
add
add
add
int
test
add
lods
add
add
jo
pop
add
dec
add
and
pop
add
add
jge
dec
add
add
xor
add
add
add
jno
pop
add
jp
scas
add
popa
add
mov
pop
add
add
add
add
add
add
add
add
add
sub
add
pop
add
cwtl
add
pop
add
je
add
out
add
out
add
add
rolb
add
addr16
add
add
pop
add
adc
fildl
mov
push
add
add
sub
ljmp
add
add
ljmp
add
add
add
add
adc
faddl
data16
dec
add
add
int3
add
add
add
add
data16
aaa
add
add
add
add
add
add
loop
call
add
add
icebp
add
add
add
add
add
add
dec
add
add
add
out
add
add
add
push
add
add
jo
aas
add
adc
sub
adc
add
add
add
add
add
and
pop
add
add
sbb
or
add
add
out
add
add
add
add
jns
nop
add
add
addl
adc
add
dec
add
add
add
add
add
add
add
add
add
loopne
js
push
push
mov
call
sub
fimuls
adc
push
mov
pop
mov
inc
cmp
mov
xor
nop
dec
dec
push
inc
pop
testl
std
sbb
mov
mov
nop
into
enter
pop
cmp
repnz
dec
imul
xchg
mov
fisubrs
dec
inc
in
cs
mov
cmc
vmovaps
sbb
not
or
ret
pop
es
roll
fucompp
data16
fcomps
enter
test
sub
pop
inc
rcll
jo
nop
or
sbb
nop
pusha
outsl
cwtl
and
adc
lahf
scas
js
jge
xchg
mul
and
inc
out
iret
out
fistpll
xor
mov
aas
mov
ret
lcall
jp
les
cltd
cmc
hlt
call
in
mov
mull
or
cmp
mov
sbb
mov
mov
xchg
push
sbb
and
cwtl
je
aas
testl
test
mov
pusha
hlt
jecxz
cmp
push
arpl
lret
outsl
mov
shrb
aaa
sarl
inc
ss
xchg
mov
sbb
adc
xchg
dec
push
in
fidivrl
push
sbb
into
lahf
push
push
into
cltd
out
les
push
push
fisttpll
mov
out
mov
mov
push
ret
push
cs
dec
into
imul
adc
lods
movsl
addr16
into
mov
jbe
sbb
sub
fwait
out
xchg
ss
jae
out
aas
cltd
ljmp
push
rcrb
movsb
sbb
mov
leave
mov
or
test
mov
jo
popf
mov
xor
fistl
lcall
sbb
mov
aaa
mov
and
aaa
add
xchg
in
test
in
mov
mov
xchg
cmp
int
adc
ret
test
and
lret
outsl
arpl
xchg
shr
cmp
jle
xor
jg
mov
push
jge
loope
mov
mov
clc
add
mov
jg
xor
in
stc
ss
inc
sbb
jg
inc
or
mov
mov
jae
loop
out
outsb
pop
mov
fidivrs
sub
bound
jmp
sbb
sub
push
ds
test
lret
jge
push
cmp
test
test
xchg
sub
cmc
fs
sbb
into
xchg
xchg
xor
lds
out
adc
ljmp
jns
pop
out
fistpl
mov
fildl
dec
testl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
