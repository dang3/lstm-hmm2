call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jg
outsl
icebp
pop
orl
jno
add
cmp
xor
adc
inc
push
jg
outsl
mov
orl
pop
rorl
jmp
out
xor
or
adc
scas
jno
inc
push
jg
outsl
ja
sbb
aas
shrl
mov
jmp
int3
adc
xor
pop
ljmp
lock
shlb
hlt
imul
movsb
or
notl
sahf
stos
and
push
inc
push
cli
sti
mov
mov
aaa
mov
mov
shl
jp
ds
push
and
xor
je
cs
das
leave
addr16
mov
pop
or
mov
out
out
xchg
rorb
jg
outsl
mov
test
sbb
cmp
lcall
shll
movsl
adc
out
cld
sbb
mov
dec
mov
shrb
lock
add
pop
add
loope
or
iret
adc
dec
pushf
hlt
les
scas
fldl
xchg
mov
shrb
xlat
out
out
or
xor
lods
mov
outsl
xchg
pop
cmc
dec
xchg
aas
loope
icebp
pop
rorl
jmp
out
cltd
filds
iret
sub
lahf
pop
arpl
mov
es
aas
inc
pop
pushf
jnp
or
inc
fbld
push
cld
xor
or
cmp
and
aas
mov
mov
lcall
and
and
and
shrb
xor
and
jae
das
icebp
pop
rorl
jmp
out
xor
add
adc
inc
push
jg
outsl
mov
orl
pop
rorl
jmp
out
xor
add
adc
inc
push
jg
dec
out
cld
pusha
jg
xchg
out
mov
dec
fcoml
fmulp
dec
sbb
cmc
cmpsl
flds
ret
es
lcall
mov
enter
mov
mov
ja
xor
inc
cli
fildll
xchg
xchg
sbbb
ss
inc
ds
stos
push
aam
cs
mov
jo
sub
test
movsl
and
leave
ss
cmpsb
push
es
push
sbb
loopne
and
adc
xchg
fcmove
mov
repnz
insl
out
cmp
pusha
sbb
xlat
shr
sbb
inc
aam
and
xchg
dec
mov
inc
sub
push
pushf
dec
imull
je
xchg
mov
stos
cmp
dec
mov
lock
pusha
add
sub
lahf
xchg
mov
jae
imul
add
rclb
jmp
sub
imull
jle
icebp
inc
arpl
push
push
outsl
dec
jbe
cmp
adc
mov
shrb
add
les
xor
lock
lea
cld
mov
dec
xlat
loope
mov
lods
lcall
jge
or
push
loop
mov
or
and
sbb
es
dec
pop
xor
in
or
inc
loope
test
adc
out
dec
addr16
mov
mov
stos
jnp
inc
imul
cmp
pusha
sub
sub
pop
mov
mov
mov
push
xchg
int
push
rcr
mov
add
jmp
or
mov
dec
out
fwait
ja
add
or
push
ret
shrl
divb
dec
cltd
shlb
stc
pop
xchg
pop
inc
stc
mov
dec
lret
jno
aas
lods
adc
xor
mov
mov
sbb
nop
push
dec
sti
stos
xchg
inc
shll
push
mov
mov
cmc
xchg
pop
push
aad
movsb
xor
fsts
outsb
add
addr16
and
fisttps
iret
sbb
jecxz
and
das
insl
bound
notl
mov
lret
and
into
imul
stos
xchg
sub
popa
leave
push
sub
jnp
setp
dec
jo
repz
lret
mov
mov
rcl
inc
test
xchg
sti
loopne
pop
lock
test
outsl
cmp
sahf
push
sbb
fstl
imul
mov
aam
cmp
stos
xlat
jmp
loop
push
mov
xchg
dec
push
fmull
or
or
std
cmpsl
dec
out
cltd
loopne
add
xchg
cltd
lock
push
inc
inc
les
lock
gs
mov
pop
sub
mov
inc
pop
inc
pop
movsl
mov
inc
pop
pop
sbb
jno
jge
cmpsb
cltd
stos
and
mov
sbb
or
ficoms
mov
and
sbb
scas
out
xchg
repz
notb
cmc
stos
js
inc
lret
cmpsb
lea
pop
inc
mov
ficoms
into
fldenv
mov
push
imul
pop
add
pop
stos
mov
xor
adc
faddl
dec
adc
out
jmp
in
push
dec
mov
dec
or
mov
and
mov
push
shlb
call
push
aaa
repnz
sarl
cmpsl
pop
dec
jmp
pop
mov
xchg
repnz
addr16
das
mov
and
in
jmp
cli
push
ret
push
adc
jb
fsubrs
iret
inc
popf
ja
lret
insb
clc
test
dec
add
lea
jp
movsb
iret
sub
dec
pop
adc
mov
aam
out
jp
push
ljmp
inc
aaa
cld
and
aam
sbb
gs
fsubrp
mov
mov
rcll
jecxz
ret
inc
lea
mov
sbb
jp
pop
push
and
sbb
in
aad
mov
jb
jae
inc
enter
shrb
push
stos
iret
stc
in
xor
in
jne
ljmp
das
pop
xchg
js
mov
ror
add
push
or
push
adc
mov
in
push
and
inc
inc
xchg
dec
jo
xchg
dec
imul
sti
cltd
inc
in
sub
pop
lock
cmp
bound
xor
pop
inc
enter
jae
ds
and
stc
ss
mov
pop
jp
dec
nop
loope
add
jbe
push
fistl
imul
mov
dec
je
mov
in
mov
in
test
adc
pusha
pushf
lcall
xor
pusha
in
je
stos
inc
pminub
mov
outsl
sub
cmpsb
hlt
add
mov
sub
subb
out
xchg
adcl
xor
aam
rcl
mov
mov
inc
add
xorl
pop
jb
jmp
out
lods
sbb
adc
lea
stc
fcmovnb
xchg
ret
xor
sub
data16
push
mov
repnz
sub
mov
cwtl
inc
movsb
push
out
dec
pop
popa
cmpb
stc
repnz
sbb
out
repz
xor
jg
jmp
loopne
mov
inc
inc
mov
xor
daa
cmp
inc
fists
dec
and
mov
mov
adc
lret
push
fs
jge
mov
in
cmp
shlb
aaa
pop
or
cmp
movsb
mov
push
jbe
sub
push
cltd
mov
in
xor
mov
cltd
cltd
daa
mov
js
lahf
inc
push
pop
andl
adc
xor
jg
cwtl
sahf
pop
xchg
jnp
aas
gs
xor
add
sahf
loope
xrelease
adc
jae
jns
cmpsb
pop
popf
xchg
push
stc
dec
iret
scas
mul
mov
add
jmp
or
mov
scas
xchg
jno
ds
dec
pop
test
inc
jmp
push
aad
out
pop
pop
test
iret
leave
insl
dec
enter
dec
sub
loopne
imul
xor
jle
mov
inc
in
sahf
bound
rcrb
fists
cmp
dec
mov
inc
and
popf
test
test
repnz
std
dec
test
pop
or
jb
fcompl
inc
push
das
outsb
mov
inc
in
push
cmpl
in
sahf
adc
xor
insb
bound
daa
xchg
arpl
jecxz
mov
std
xchg
mov
call
and
jg
or
decl
pop
jle
or
sbb
sub
jge
int3
stos
out
sbb
cmp
add
pop
cli
jge
push
out
xchg
sbb
lods
jnp
push
cmpsb
mov
fisttps
jo
and
rcrl
sahf
inc
cwtl
mov
das
xchg
mov
mov
cli
mov
jle
inc
test
cmp
fwait
shl
xchg
jae
imull
xchg
fs
insb
sub
or
jbe
mov
ss
into
enter
fcoml
lea
cmp
repnz
lock
add
test
data16
mov
mov
push
and
mov
ja
jge
sbb
sbb
test
inc
icebp
xor
out
push
cmp
cwtl
mov
push
and
mov
xor
mov
xor
cwtl
push
pop
push
adc
and
outsb
add
cmpsb
sub
mov
cmp
mov
fsubs
iret
repnz
mov
fsubl
out
mov
dec
dec
pusha
push
jl
sub
rcrb
add
testl
mov
xchg
xchg
jne
andb
ja
fiadds
jl
data16
push
aaa
js
popf
lret
call
shlb
arpl
in
fisubs
sub
jecxz
nop
xor
dec
or
adc
push
sub
xchg
out
or
xor
test
repz
adcl
mov
iret
push
cld
jl
les
sbb
sbb
dec
mov
stc
cltd
fisttpll
mov
rcrl
fstl
dec
jae
stos
test
sub
or
dec
aaa
cmp
in
jg
and
test
cmpsl
repnz
out
jae
std
xchg
jp
mov
pop
cmp
loope
mov
add
mov
in
hlt
out
into
xor
leave
xor
dec
xchg
sti
push
sbb
mov
inc
jo
cs
add
jle
or
nop
dec
repz
into
loop
push
mov
pop
test
mov
mov
lock
inc
xor
xor
cmpsl
pushf
scas
push
or
inc
lods
mov
mov
mov
sub
mov
mov
in
adc
test
mov
in
mov
bound
push
pop
xchg
test
subb
mov
fmuls
fmul
pusha
jno
ret
fwait
movb
je
add
ds
adc
inc
mov
rcrb
sahf
and
shrd
out
insb
out
push
inc
add
jns
push
adc
xchg
std
and
cmp
test
sysret
pop
lods
jp
and
arpl
xor
cs
lret
and
adc
ret
daa
decl
jmp
fists
dec
addr16
jge
adc
push
mov
hlt
mov
mov
push
or
pop
test
cmp
mov
iret
outsb
and
shrb
push
xor
mov
jo
sub
add
mov
cmpsb
jp
sub
sub
or
mov
mov
or
mov
lods
and
xchg
clc
fmull
mov
leave
insl
adc
adc
mov
fs
xor
jnp
inc
lods
int
movsl
jmp
jl
mov
lcall
inc
mov
mov
aaa
cltd
sti
loop
into
jnp
mov
xchg
cltd
jge
add
xchg
lret
push
stos
mov
xor
jo
mov
outsb
test
sub
lods
ret
xchg
icebp
pop
repz
cmpsb
add
or
inc
ds
sbb
idivl
stos
dec
popf
stos
push
sbb
or
mov
ds
jbe
inc
dec
push
scas
cld
jmp
in
addr16
adc
inc
addr16
adc
lret
out
clc
sub
call
lea
xlat
xor
shr
or
scas
es
adc
dec
mov
dec
push
xchg
fcoms
xor
cli
fisttpl
dec
loopne
fcomp
pop
pop
sub
fldenv
adc
mov
fidivrs
xor
loope
shr
clc
xchg
ljmp
dec
hlt
aas
xor
testl
mov
jle
pop
xchg
lds
stos
cmpsb
out
rolb
inc
and
sbb
repz
outsl
add
ss
cli
sub
pop
pop
leave
xor
in
fcmovnu
push
jl
push
and
sub
inc
dec
ss
mov
mov
iret
shrb
je
ret
sbb
sti
imul
inc
xor
lock
jo
imul
sub
and
push
gs
cwtl
xchg
arpl
sbb
fsubrs
pop
imull
or
dec
add
xchg
mov
inc
imul
je
and
dec
add
dec
pop
lcall
push
add
pop
es
sbb
sbb
add
mov
mov
or
push
and
and
mov
out
inc
inc
cmp
lock
pop
psraw
inc
pushf
push
lahf
mov
out
dec
pop
adc
ret
jno
loop
sbb
cmp
cmpsb
mov
pop
dec
jmp
lods
and
xchg
std
inc
cmp
test
xor
fiaddl
xchg
adc
mov
test
push
out
inc
mov
inc
or
xor
fbld
jg
add
movsl
mov
aam
paddw
ss
pusha
mov
xchg
mov
inc
push
push
cld
sub
jnp
adc
adc
push
in
jb
pushf
out
test
or
add
fwait
push
jno
adc
mov
inc
xor
add
icebp
xchg
inc
aam
adc
pop
or
dec
cmp
imul
xor
add
scas
andb
cmpsb
outsb
pop
xor
dec
pushf
decl
into
fstpt
mov
push
mov
and
push
lret
jbe
paddb
pop
jno
sarb
es
sarl
adc
js
or
pop
aaa
and
inc
push
ss
mov
add
daa
punpcklwd
mov
out
mov
inc
dec
cmc
arpl
addr16
daa
pop
mov
ss
jmp
inc
scas
lds
sub
and
sub
out
add
outsl
or
pop
pusha
popf
or
cld
dec
push
ja
jns
jge
mov
popf
and
push
adc
sub
xchg
fimull
or
mov
or
lods
lahf
xchg
ret
dec
je
outsl
xchg
enter
lea
aas
and
mov
jle
mov
dec
jl
dec
xchg
mov
fsubl
into
sub
adc
mov
inc
dec
sbb
jmp
pushf
jmp
mov
ret
out
jae
lea
loop
push
cwtl
pop
xchg
push
subb
jns
jge
in
inc
mov
loope
pop
loop
add
hlt
sub
in
loopne
aam
jmp
sub
in
out
dec
out
ret
or
loopne
mov
sbb
xchg
adc
sbb
xchg
clc
push
pop
sbb
xorb
jae
mov
push
mov
adc
or
add
push
popf
repnz
mov
leave
lods
sub
fsubs
popa
sub
and
aas
mov
mov
xlat
mov
in
lds
pop
mov
push
push
and
nop
adc
jns
lods
xchg
add
mov
punpckhwd
out
shr
adc
mov
jbe
stos
filds
mov
pop
daa
repz
add
jo
ret
ja
insl
sbb
mov
stos
int
add
adc
scas
xchg
push
fsts
rolb
jo
sub
jle
callw
cmp
sub
fstl
xor
jl
pop
xor
movsl
inc
stos
xor
aas
mov
imul
mov
dec
mov
inc
jle
mov
mov
mov
pushf
fsubs
add
cmp
lods
push
mov
inc
jl
sbb
std
xor
and
mov
push
lods
dec
mov
rcrl
add
xor
sub
jle
ss
mov
mov
stos
mov
lret
pop
fstps
push
pop
sbb
insb
popf
mov
and
xchg
imul
inc
stos
pusha
loopne
adc
das
mov
shl
jnp
or
xchg
push
or
nop
jno
push
xchg
cmp
arpl
sahf
jmp
mov
stc
mov
cwtl
mov
inc
scas
dec
lock
jl
dec
loopne
jmp
mov
cli
or
mov
adc
jo
mov
popa
test
lret
nop
idiv
jbe
and
xchg
pop
push
sbb
and
xchg
pop
mov
mov
xor
mov
shll
lock
mov
outsl
mov
and
or
or
push
push
ret
test
cli
xchg
dec
pop
adc
shr
mov
jecxz
push
clc
lods
mov
loopne
ror
imul
and
lret
in
ds
adc
mov
pop
inc
jge
add
pop
pop
push
mov
mov
mov
int3
out
add
add
cld
cmp
jno
jmp
or
ret
jo
movsl
in
xchg
stc
mov
sub
cmp
inc
iret
jge
popa
js
sti
test
fnsave
aaa
push
jnp
movsb
mov
adc
pop
aas
mov
fwait
sahf
push
xchg
clc
sub
daa
add
inc
xor
movsl
sub
or
outsl
shr
sbbb
adc
ja
fdiv
dec
push
pop
mov
ret
js
loope
repz
push
scas
adc
imul
inc
mov
lahf
popa
and
sarl
jl
std
jecxz
nop
xchg
enter
fsub
jb
lret
jmp
cmpb
ja
xor
mov
popa
fildl
ja
ret
add
fdivs
mov
push
cli
xor
or
pop
sbb
xor
rol
sub
pusha
cmc
pop
js
push
add
stos
fldt
fdivr
mov
sbb
push
and
cmpsb
xchg
dec
fidivs
stos
int3
fisubrs
fcmovb
pop
mov
stos
jp
xor
fsts
push
scas
add
out
outsl
shr
js
hlt
cmpsl
sbb
pop
dec
out
es
stos
imul
fmull
mov
dec
mov
sbb
imul
aaa
ds
xor
call
pop
dec
push
or
aam
loop
mov
shll
jbe
cmp
std
jae
shrd
int
xchg
sub
sub
hlt
adc
outsb
sysret
push
popa
dec
mov
or
loopne
sbbl
shlb
adc
leave
push
imul
jnp
push
outsb
fs
shr
push
mov
cwtl
sub
mov
out
or
jg
shrl
sti
fimull
mov
dec
mov
ljmp
jge
jmp
dec
add
jne
test
daa
icebp
out
sarl
mov
icebp
add
sti
stc
push
rcrl
das
lea
and
test
mov
loop
or
orb
fwait
pop
ja
mov
push
or
sub
xchg
sub
rcrb
xor
mov
in
notb
cmc
lock
xchg
xchg
add
mov
push
iret
sbb
lcall
imul
and
or
popf
shll
cmp
int
fwait
sbb
hlt
clc
pop
stc
jle
into
mov
mov
insl
cwtl
loope
cmpsb
sbb
pop
mov
jo
or
dec
mov
sub
add
cmp
out
in
test
ret
and
imul
loop
test
loope
sti
inc
jg
xchg
add
mov
mov
aas
push
lret
in
inc
jne
add
in
sbb
xor
test
pop
pop
mov
les
cmp
pop
xchg
jp
sbb
push
pop
in
mov
scas
sbbb
jo
pop
fsubr
inc
adc
into
popa
stc
dec
jge
or
outsl
sahf
in
loopne
orb
pop
mov
mov
nop
mov
jmp
shll
ljmp
and
xor
out
xchg
xchg
xchg
adc
mov
dec
lcall
repz
adc
push
clc
test
dec
ds
and
subb
inc
test
int
icebp
dec
and
lcall
std
insl
pop
out
cli
add
jp
stc
push
daa
push
sub
notl
jbe
loopne
in
push
or
out
pop
sub
orl
enter
popa
hlt
cmp
sbb
testl
inc
jmp
sub
mov
ret
out
repnz
ret
cmpxchg
rorb
stc
cmc
in
enter
inc
jg
xor
push
push
add
sub
mov
pop
jb
adc
cmpsb
sub
dec
or
dec
data16
insl
pop
xchg
add
fldl
popa
pop
mov
xrelease
stc
cmpl
out
push
iret
inc
xchg
adc
pusha
pop
ret
inc
cmp
push
inc
sub
or
dec
or
pushl
or
sbb
inc
cmc
test
sub
pop
mov
xchg
iret
sub
sub
shlb
nop
sti
pusha
push
je
cmp
sub
jecxz
mov
jae
outsl
gs
mov
inc
jle
les
mov
push
mov
in
pop
pushf
adc
fildll
xchg
jecxz
jp
repz
out
sbb
sub
out
call
dec
popl
and
push
add
lea
popf
test
dec
inc
pop
ss
dec
jo
push
add
inc
int
dec
sti
js
sub
cmp
dec
xchg
jb
add
cmc
cmpsl
mov
push
es
jne
dec
pop
jnp
sub
stc
xor
xor
insl
cmp
mov
inc
pop
movsl
cmp
jmp
bound
and
sbb
fcomps
inc
fwait
jb
jg
mov
ret
adcl
mov
ret
add
sarw
aad
movsl
xchg
imul
in
aam
loop
or
gs
mov
call
shll
sbb
ret
in
mov
pop
xchg
xor
cmp
mov
jg
pop
les
in
cmp
sub
scas
dec
add
push
add
inc
shll
loope
icebp
pop
rorl
jmp
out
xor
add
adc
inc
push
jg
outsl
mov
orl
pop
rorl
jmp
out
xor
add
adc
inc
push
jg
out
mov
mov
lds
xor
mov
dec
mov
inc
outsl
push
pop
gs
sarl
loope
icebp
pop
inc
movups
fsubrp
fwait
jne
iret
iretw
sbb
or
cmp
sub
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
push
dec
inc
jl
insb
add
imul
int3
test
pushf
xchg
int3
add
dec
inc
dec
jbe
data16
or
cmp
sub
int3
cmpsb
cwtl
imulb
out
xchg
lea
inc
push
push
inc
fs
add
push
and
cmp
fdivrl
nop
xchg
cwtl
out
rol
jmp
sub
dec
sbb
sbb
aaa
adc
lock
in
aad
daa
dec
xor
xor
push
jo
mov
mov
jl
jl
fistl
in
adc
mul
imul
fldt
out
not
push
dec
push
xor
fwait
or
lret
xor
lods
adc
arpl
imul
inc
pop
lds
sbb
aam
sub
call
or
jns
dec
inc
sub
sbb
sub
cmp
aam
xor
xchg
sub
loope
mov
inc
pop
and
in
out
sbbl
push
dec
inc
jl
jnp
or
push
push
cmp
xor
in
cmc
out
xchg
xchg
xchg
sub
pop
or
js
popa
push
js,pt
jbe
mov
mov
sahf
andb
mov
out
push
dec
inc
sbb
adc
pop
bound
inc
imul
mov
cmc
in
int3
shrl
sbb
insb
add
push
cmp
sub
int3
cld
imul
out
xchg
mov
pop
push
dec
inc
jl
insb
data16
or
cmp
sub
int3
cld
imul
out
xchg
mov
pop
push
les
xor
and
repnz
cwtl
add
and
gs
mov
add
aas
into
lahf
movsl
mov
push
shr
repz
cmc
xor
pop
lahf
mov
fnstsw
jns
pop
jb
sbb
cmc
lods
inc
jne
pusha
inc
or
xchg
sub
dec
add
push
pop
cs
mov
cli
hlt
dec
ss
push
insl
jne
sbb
arpl
pusha
mov
sqrtps
int
call
ja
lret
sub
push
inc
fstl
push
and
pop
mov
jle
iret
mov
sub
in
inc
adc
xorl
outsl
out
xchg
jmp
xlat
pop
sti
inc
xchg
int3
inc
or
cmc
and
out
xchg
cld
sub
mov
ficomps
psraw
scas
xor
call
mov
fistl
inc
imul
mov
cmc
ljmp
out
sub
jae
xchg
xchg
test
jg
js
sbb
out
sub
cld
daa
xor
inc
dec
inc
aad
dec
ret
sbb
push
mov
inc
add
jo
or
loop
xchg
test
mov
pop
sbb
xchg
and
xchg
js
cmp
andl
repnz
jecxz
mov
adc
popa
in
daa
addr16
pop
aaa
xor
or
lock
inc
push
fdivrs
les
es
mov
and
das
je
pop
into
stos
aad
inc
xor
jge
jge
sbb
inc
test
cmp
cmp
loop
lods
mov
cmp
cmp
or
mov
mov
std
inc
mov
mov
rol
pop
call
clc
jnp
in
and
cmpsb
push
sub
adc
ss
out
icebp
repnz
test
dec
mov
pop
jbe
cmp
push
sbb
jns
mov
mov
fsubl
in
cmpsb
nop
jns
sbb
scas
icebp
adc
xor
mov
dec
push
jbe
push
insb
sbb
push
xchg
stc
jns
loope
jge
lahf
push
mov
pop
xor
cmpsb
out
cmpsb
xor
jnp
pop
sahf
or
inc
add
xchg
push
rolb
or
dec
or
sbb
outsb
xor
xchg
jo
xchg
shl
aam
inc
out
lahf
sbbb
cmp
push
es
insb
cmp
sub
dec
shll
push
fneni(8087
les
xor
inc
repz
add
and
frstor
add
push
negb
aas
push
das
fwait
test
jge
iret
or
ljmp
cltd
xchg
sbb
push
bound
cmp
loope
jb
repnz
or
call
pop
mov
or
jb
testl
aam
xor
test
mov
fcoml
pop
dec
xchg
dec
cvtps2pd
es
or
dec
lock
push
cmp
add
pop
lds
gs
cwtl
xor
xchg
and
testl
xchg
js
xchg
sahf
insl
push
cmp
test
xor
pop
adc
xchg
insl
and
mov
cmp
mov
rcrb
mov
js
scas
rcrl
jmp
or
inc
dec
mov
iret
sub
cmpl
jmp
sub
adc
mov
je
mov
iret
bound
mov
add
push
ds
cmp
in
xchg
cmpsb
imul
dec
xchg
ss
aam
sub
sbb
pop
outsb
xor
popf
pusha
es
mov
fcompl
inc
daa
mov
lret
flds
leave
cmp
mov
mov
sbb
in
sub
ds
out
fcomps
nop
add
add
neg
ljmp
or
mov
lahf
xchg
and
mov
enter
mov
mov
addr16
not
sub
lret
es
in
mov
add
sub
scas
sbb
dec
ror
inc
ret
cltd
scas
add
pusha
xchg
cmp
insb
mov
mov
lods
xorb
lcall
or
lods
fxam
mov
xor
push
popa
pop
cs
shl
dec
pusha
sub
jecxz
pop
jp
mov
data16
push
mov
enter
jmp
mov
sub
adc
punpckhbw
ret
xor
jno
push
push
cwtl
ja
xor
xor
rdpmc
jle
hlt
sub
mov
xchg
cmp
mov
icebp
enter
cmp
std
inc
dec
and
loopne
push
pop
fdivrp
fs
fildl
push
xor
inc
dec
cwtl
outsl
aas
mov
add
xor
mov
addr16
mov
cmp
push
ficomps
out
lret
cwtl
mov
icebp
inc
scas
arpl
cmp
sahf
lods
stc
or
mov
insb
clc
in
out
out
rcrl
stos
jo
inc
push
inc
data16
push
add
mov
inc
add
pop
add
rclb
push
jge
cli
sub
enter
shl
push
sbb
fwait
lds
dec
cmpb
test
scas
or
lret
int
outsl
add
test
notrack
mov
pop
xor
push
xlat
lods
dec
cltd
pushf
icebp
pop
mov
jo
ds
mov
adc
mov
in
inc
pop
pop
fisubl
aam
inc
and
loope
loope
repz
cs
pop
add
or
sbb
or
adc
dec
or
clc
lret
ljmp
call
inc
jo
nop
inc
cli
adc
mov
and
pop
das
out
or
or
push
fimuls
jae
xor
out
sbb
jmp
or
jns
sbb
es
addr16
dec
cmp
sbb
shl
mov
pop
pop
push
decl
xchg
push
fcompl
je
inc
sti
xchg
js
dec
add
divl
subl
movsb
fxch
add
ret
cmpsb
fcmovbe
jge
pop
jbe
cmp
dec
insb
into
sub
ds
shl
xor
sbbl
scas
mov
mov
out
cwtl
sbb
jle
mov
test
pop
mov
rcrb
jmp
imul
push
lea
sub
pop
and
mov
aam
ret
mov
fsub
in
cmc
icebp
loopne
mov
push
stos
pop
lods
or
cwtl
cli
mov
movb
xor
sbb
stos
pop
dec
dec
sub
popl
cmpsl
fs
scas
cmpsb
aam
ja
sbb
imull
in
cmp
pop
jnp,pt
mov
jg
test
xchg
xchg
into
nop
xor
popa
cld
mov
cli
imul
dec
loopne
add
mov
rorl
adc
ss
nop
mov
js
lods
movsb
scas
pushf
mov
mov
dec
mov
mov
pusha
xchg
inc
arpl
mov
hlt
out
and
dec
sbbl
mov
sarb
jle
jns
pop
mov
mov
jmp
sub
xor
push
sahf
data16
lods
nop
cmp
in
clc
and
arpl
imul
pop
xlat
sub
adc
addl
aas
imul
repz
mov
ret
lahf
push
sbb
out
pusha
arpl
adc
pop
cld
mov
ret
arpl
or
mov
cmp
mov
push
dec
inc
adc
mov
roll
popa
sub
fwait
jno
das
inc
ret
bound
sub
push
mov
sbb
sahf
ds
push
clc
sahf
into
fistpl
dec
push
or
repz
jae
mov
inc
add
sbb
add
inc
adc
pop
hlt
dec
into
mov
mov
jg
jg
lock
adc
repnz
add
sbb
push
push
push
mov
add
cli
mov
fcmovnbe
mov
and
mov
outsb
mov
or
outsl
ja
cmpsb
mov
fs
mov
arpl
cmp
pop
dec
and
add
popa
ljmp
mov
add
mov
dec
sbb
imul
jo
mov
das
adc
test
adc
push
and
out
sbb
adc
or
and
movl
push
es
loop
loop
movsb
movsl
cmp
clc
inc
clc
dec
das
pop
cmc
cmp
inc
push
test
enter
mov
sub
or
inc
mov
ljmp
mov
pop
lcall
mov
pushl
popf
mov
test
mov
inc
stos
inc
mov
xchg
shr
inc
icebp
lret
popa
insb
push
sbb
nop
jae
mov
cmp
push
xchg
push
popa
aam
in
jp
out
mov
jnp
int3
mov
cmc
dec
jmp
jne
adc
or
addr16
subb
fists
dec
mov
hlt
pop
enter
std
sub
cmp
xchg
int
pushf
hlt
dec
push
jp
outsb
push
dec
inc
dec
int3
outsl
out
sarl
shr
mov
sbb
lods
rol
out
push
lods
out
inc
cmp
sbb
test
mov
mov
jbe
subl
dec
jns
push
xor
lods
inc
xor
cmp
push
xor
sbbb
ja
xor
fisubrs
outsl
and
out
std
pop
xor
pop
push
popf
sbb
mov
sbb
jae
mov
xor
test
imul
fdiv
fdivrl
loope
xchg
sbb
imul
insl
sub
xor
int3
jno
fisubl
scas
cmp
pop
inc
sbb
addr16
movsl
loopne
jns
push
xchg
jle
loope
cmp
mov
clc
cmpsb
sbb
jl
fisttps
dec
add
out
arpl
mov
jbe
nop
gs
bound
mov
or
sbb
jns
push
data16
loope
and
sbbb
les
jno
test
repnz
jmp
mov
xchg
add
int
ret
mov
adc
call
je
sbb
test
fildll
pop
data16
push
sub
and
repz
ret
push
ret
movsb
cmp
xchg
mov
in
ret
jo
mov
repnz
mov
loope
stc
imul
sahf
cmpsb
jae
clc
jp
ljmp
jecxz
pop
pop
xchg
xchg
xlat
jbe
orl
imul
adc
icebp
adc
movsl
push
aad
mov
cmp
test
test
and
adc
adc
fcoms
push
sub
into
fisubl
push
sti
and
xchg
pop
roll
pop
jmp
mov
pop
sbb
add
sub
loope
lods
pop
xor
xchg
adc
ljmp
ds
jecxz
mov
dec
xchg
mov
jl
imul
frstor
test
xor
cmpsl
cs
pop
adc
insl
mov
mov
xchg
push
xchg
push
add
mov
js
scas
sti
mov
in
into
std
jns
and
repnz
push
ret
scas
ds
xchg
js
mov
imul
adc
mov
dec
cli
shrb
lret
push
push
jecxz
enter
adc
out
push
cmpsb
or
sub
and
fisubs
es
lock
shlb
add
inc
pop
or
xchg
mov
mov
mov
sub
fwait
ljmp
loope
cwtl
pop
mov
out
cmpsb
or
fwait
cwtl
mov
jnp
jae
out
add
dec
mov
bound
fcomi
test
xor
add
mov
aaa
cmp
lock
shll
cmc
xor
sbb
fsubrl
xor
jae
pop
loopne
mov
pop
xchg
add
scas
push
cmpxchg
scas
adc
lahf
xchg
enter
and
sahf
dec
add
imul
pop
out
pop
ret
cmp
jl
mov
lods
rol
int
mov
mov
or
adc
cmp
add
clc
ds
roll
ret
iret
into
jns
movsl
mov
jle
cli
notl
mov
pushf
gs
movsb
cmp
aas
inc
xchg
cs
pushf
or
ds
push
cli
nop
cwtl
mov
mov
adc
cmp
add
jae
dec
scas
js
call
sub
outsb
dec
mov
adc
ds
cmp
into
jmp
inc
or
insb
add
andl
xor
push
jbe
cmp
add
or
dec
imul
and
push
pop
dec
cmp
inc
xchg
es
test
xchg
mov
sbb
pop
out
pop
mov
lcall
add
dec
repnz
dec
adc
mov
lahf
cld
sbb
sti
mov
int
insb
and
push
jns
stos
jg
xchg
sbb
jo
pop
vpunpckldq
sbb
test
xor
xor
stos
fsubrs
sbb
adc
dec
xchg
mov
mov
clc
mov
int3
rorl
add
test
and
sub
xor
scas
stos
int3
dec
mov
jge
out
adc
shrl
imul
scas
rol
pop
rorb
jmp
cs
std
divl
cmpsl
lock
and
mov
ret
jnp
testb
outsl
cmp
and
orb
mov
jbe
lods
pop
aas
mov
xlat
mov
pop
popf
push
dec
es
mov
pop
xchg
lds
mov
popf
jno
lods
add
cmp
test
push
cmp
sbb
jbe
adc
andb
enter
test
add
lods
lds
mov
mov
pushf
lods
sarb
imul
or
jge
pop
cmpsl
push
and
call
push
push
mov
sub
in
push
cwtl
push
mov
mov
jp
xor
jl
incl
loop
pop
add
mov
hlt
cmp
leave
jl
shrb
xchg
mov
pop
fwait
mov
inc
inc
mov
xor
pop
pop
mov
or
xor
mov
lret
out
out
sub
sbbb
rcll
in
and
rol
dec
sbb
rcrb
lds
test
leave
adc
out
fsts
cs
sbb
jbe
pop
ret
lea
out
gs
fwait
jno
lret
es
lock
jbe
jo
cmp
sbb
cwtl
in
mov
fimuls
cld
test
out
pop
cmpl
push
jl
enter
ljmp
sarb
lock
lods
int3
shl
out
icebp
std
mov
mov
ret
mov
bnd
scas
imul
dec
mov
arpl
popa
jecxz
mov
and
pop
testl
sahf
lock
lahf
jp
aaa
test
push
fsubrp
ja
xor
push
iret
lods
pop
mov
and
ror
inc
dec
inc
arpl
jmp
mov
sysenter
insl
in
cmp
orl
cltd
sbbl
lock
addr16
sub
pop
xor
sub
dec
pop
cmpsl
repz
inc
decl
sbb
sub
icebp
stos
jne
mov
into
fiaddl
xchg
and
rol
mov
stos
fwait
ja
sbb
fbld
adc
inc
sahf
add
xor
and
mov
jg
insl
daa
xchg
bound
mov
ja
pop
lret
hlt
mov
mov
mov
inc
jo
les
das
in
push
adc
popf
mov
mov
xor
add
xchg
lock
insl
mov
mov
fxch
mov
sub
out
add
shll
jecxz
xchg
dec
sub
push
insb
inc
mov
pop
mov
dec
fdivl
mov
xor
stc
in
add
call
addr16
dec
stos
xchg
xor
cmp
mov
neg
push
sti
outsb
inc
shrl
mov
movsl
rcr
or
test
cmc
adc
sub
cmp
mov
and
shlb
xchg
xor
xchg
push
and
test
xchg
out
test
jb
rclb
pop
jnp
mov
dec
jg
popf
jbe
and
test
inc
sub
dec
addb
and
add
mov
push
bound
push
xchg
aas
adc
and
js
inc
cmpsl
and
sub
sub
ljmp
gs
and
inc
ljmp
rorl
inc
pop
push
call
out
ss
lock
add
jmp
in
adc
movsl
push
cmp
lea
pop
dec
imul
mov
imul
dec
lods
int
adc
xchg
sar
testb
push
jl
into
scas
cmpl
adc
inc
das
lods
sbb
jb
popa
fs
cmp
mov
cmp
mov
hlt
arpl
mov
adc
jle
jge
shl
or
cmp
dec
xchg
push
nop
mov
imul
sub
ljmp
sbb
and
push
dec
cltd
xchg
mov
scas
xor
in
out
idiv
mov
repz
cmc
stc
daa
lds
or
inc
add
jp
aas
or
movb
push
inc
imul
inc
repz
and
mov
shr
sbb
shll
test
fldt
sub
inc
bound
aam
xchg
loopne
and
pop
hlt
inc
cmp
adc
xor
les
jae
xor
mov
xchg
enter
push
loope
jno
adc
xchg
lret
jnp
add
add
xchg
clc
fmulp
js
or
test
and
stos
imul
jl
gs
out
aaa
xor
mov
imul
push
pushf
push
pop
data16
inc
imul
pop
dec
pushw
sub
int
es
daa
into
lcall
jne
arpl
or
push
fcoml
adc
adc
xor
test
mov
insl
jle
mov
jmp
jecxz
push
fimuls
jmp
out
cmp
sbb
fs
sub
fisubrs
pusha
add
jge
iret
inc
movsl
push
aad
jmp
xor
sbb
xor
mov
mov
pop
out
inc
mov
les
and
cmp
icebp
pop
lods
mov
push
in
dec
push
adc
daa
bound
push
adc
dec
pop
push
xor
sbb
cmc
inc
or
in
push
into
rol
push
pop
outsl
lds
or
jge
jle
mov
in
loop
iret
in
ret
lret
mov
jno
or
out
stos
test
adc
imul
in
rol
cmp
pushf
test
xchg
jns
mov
into
cmpsb
inc
iret
es
add
imul
lcall
add
jg
pop
mov
push
cmp
jno
les
ficoms
or
or
xor
bound
jge
mov
jmp
push
lret
clc
dec
gs
loop
sub
into
inc
dec
bound
xor
leave
jmp
dec
fdivrp
arpl
scas
sbb
test
notb
or
push
dec
and
dec
scas
cmc
push
lods
mov
xor
sub
fwait
mov
xchg
cmp
faddp
nop
cmp
jno
dec
mov
iret
xchg
inc
pop
xor
mov
out
sub
jb
mov
cld
out
mov
insb
add
xor
dec
xor
xchg
pop
testl
hlt
xor
pop
pmaxsw
xchg
jne
inc
shll
mov
mov
mov
jbe
addr16
pop
dec
mov
xchg
add
mov
xlat
movsb
in
jae
or
xor
mov
ss
and
push
jb
mov
pushf
xor
stos
mov
adc
xchg
adc
iret
popl
xor
jecxz
mov
pop
fists
mov
int
xor
pop
xlat
xchg
mov
sbb
cmc
popa
xchg
outsb
dec
push
outsl
cmp
inc
mov
lods
inc
dec
push
shl
push
xchg
push
pop
das
div
cmpsb
jecxz
test
and
sub
jbe
xchg
pop
mov
pop
add
stos
jmp
mov
and
out
hlt
clc
daa
pop
xor
repnz
dec
dec
mov
ds
xor
sub
xchg
xchg
jmp
loopne
jl,pn
mov
testl
or
pop
push
jbe
adc
pop
in
jne
repz
inc
xorl
xchg
pop
dec
mov
mov
jl
addr16
fmuls
test
daa
mov
jl
mov
out
inc
mov
pop
fstl
adc
outsb
pop
fnstenv
hlt
inc
ds
mov
fdivrl
adc
jne
xchg
and
push
push
rcll
jmp
xor
mov
adc
lcall
jge
outsb
inc
cmp
push
ja
push
hlt
cmpsl
iret
cmpsb
jnp
sahf
add
imul
lea
nop
xchg
jo
je
cs
filds
add
pusha
mov
repz
fldenv
xor
cmpb
pop
push
jno
inc
dec
xor
mov
inc
jg
insb
data16
or
cmp
sub
int3
cld
imul
out
xchg
mov
pop
push
dec
inc
jl
insb
data16
or
cmp
sub
int3
cld
imul
out
xchg
mov
pop
push
dec
jl
insb
data16
or
cmp
sub
fcoml
xabort
in
out
xchg
mov
push
jbe
data16
or
mov
xor
in
xchg
jmp
add
inc
dec
push
pop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
cmp
sub
sbb
or
jge
dec
xor
mov
pushf
mov
int3
lret
int3
cmp
sub
sbb
or
jl
insb
pop
pop
dec
sub
popf
mov
fmul
int3
cmp
sub
sbb
or
jl
insb
pop
pop
dec
dec
mov
stc
out
loop
mov
mov
pop
sbb
imul
dec
jae
adcb
mov
jbe
pusha
cltd
xor
mov
xlat
cmp
cmp
jbe
cmpl
mov
push
arpl
in
jmp
lea
les
in
jno
inc
lret
xor
popl
lcall
pop
push
lret
add
mov
cmp
or
adc
insb
add
dec
inc
es
jp
je
stos
in
jmp
and
scas
rcrl
testl
mov
arpl
mov
mov
sub
sarl
and
loopne
call
pop
out
test
jmp
mov
xor
cmp
sub
sbb
or
jl
insb
pop
pop
dec
dec
mov
pushf
mov
fmul
mov
dec
push
pop
pop
dec
dec
push
cmp
xor
iret
cmp
int3
into
mov
iret
into
cld
jge
stos
stos
mov
push
pop
inc
js
dec
outsl
push
aas
and
push
or
leave
fxch
fsubp
sti
mov
or
mov
mov
sub
jns
je
dec
imul
dec
mov
pushf
mov
fmul
int3
cmp
sub
sbb
or
jl
insb
pop
pop
dec
dec
mov
pushf
mov
fmul
int3
cmp
add
jae
lret
stos
mov
test
lods
js
movsb
out
out
rcrb
jp
mov
pushf
xchg
xchg
mov
inc
clc
lahf
or
mov
gs
cmp
hlt
and
insl
cmp
add
iret
push
adc
and
dec
pop
out
jne
cmpsl
adc
add
push
sbb
cwtl
popf
adc
mov
dec
jge
hlt
sti
xchg
and
lret
imul
mov
mov
push
cmp
add
and
fwait
inc
sbb
mov
xor
ja
leave
imul
inc
leave
fimull
cmp
std
mov
pop
pop
loopne
mov
mov
xchg
xchg
cld
sarb
addl
mov
xchg
xor
es
pushf
lret
movsb
andb
dec
jns
xchg
xchg
mov
pop
jnp
cld
out
push
loop
in
lret
push
insl
cmp
mul
imul
sub
ja
cmp
test
subl
daa
jle
adc
adc
mov
cwtl
sti
testl
das
mov
fwait
pop
popa
sbb
push
lds
xlat
jp
adc
jne
xor
iret
sbb
cmp
lods
icebp
mov
mov
das
popf
push
pop
dec
popa
enter
shr
loopne
jo
daa
dec
cmp
enter
repz
add
jle
xchg
adc
xchg
mov
add
or
xor
sti
lret
add
mov
ds
push
mov
out
sti
movsb
adc
loop
ljmp
or
out
pop
into
mov
and
cli
loope
pop
lcall
inc
inc
jo
mov
jge
nop
aas
mov
push
movsb
mov
loope
and
addb
push
adc
xchg
mov
push
dec
inc
ljmp
cmp
fisttpll
fstpt
mov
stc
adc
call
lds
iret
stos
loopne
movl
pop
sarw
jb
outsb
adc
mov
add
mov
shrl
int3
pushf
xor
jle
jp
mov
leave
pushf
lahf
data16
xlat
inc
and
sub
add
cmc
repz
cld
lods
out
mov
lret
dec
stos
or
jmp
cmp
mov
test
cld
aad
popaw
sar
dec
push
clc
lcall
add
mov
sarl
dec
dec
pop
incl
push
notl
lea
loope
mov
repz
push
adc
jbe
lods
ds
xor
mov
jle
mov
lea
add
xor
and
push
add
daa
int3
cmp
in
xor
out
xor
jl
loope
or
shr
or
ss
popa
pop
push
in
or
push
inc
in
and
jge
test
subb
xor
in
addr16
inc
movsb
adc
movsb
inc
sub
mov
xchg
push
push
les
xor
out
xor
jmp
rcrb
adc
int
ja
mov
adc
std
adc
std
xor
pop
xor
or
ret
fdivrl
lods
out
jge
mov
lret
mov
mov
cmp
cmp
cli
jnp
inc
xor
addr16
shl
les
pop
add
dec
and
sbb
inc
sbb
jmp
loopne
ja
inc
fiadds
push
inc
or
in
inc
inc
and
xor
adc
dec
push
jno
test
and
arpl
mov
push
and
test
pop
stos
sub
xchg
hlt
aas
add
cmp
pop
push
sub
insl
imul
mov
stc
pusha
mov
push
repz
lods
andb
into
clc
inc
inc
call
cmc
jmp
imul
push
insb
add
xlat
repnz
push
sbb
fnstcw
inc
pop
mov
rcrl
lds
mov
mov
sub
pop
mov
push
pop
mov
in
enter
in
xchg
xchg
and
mov
mov
sbb
rcrb
sbb
dec
in
popa
push
add
and
or
sub
cwtl
in
pop
shlb
and
test
scas
add
dec
ret
dec
adc
sub
pop
addb
or
or
sub
mov
jp
jo
cwtl
mov
and
mov
lret
call
xor
es
fxam
and
pop
dec
adc
jle
or
mov
xchg
pop
roll
mov
adc
pop
lds
xchg
fcmovu
aam
inc
mov
mov
sbb
dec
cmpsb
sahf
jo
icebp
insb
adc
aas
arpl
shr
sbb
sbb
push
aad
sub
add
jl
and
ss
insl
push
bound
mov
sbb
push
sub
ds
in
into
pop
dec
jb
call
stos
mov
push
repz
inc
push
inc
push
cwtl
xor
call
call
push
into
loope
pop
sub
insb
rcll
or
mov
mov
lea
ss
add
adc
lret
adc
les
sarl
jne
inc
cwtl
ja
rol
mov
sahf
pop
pop
pop
cmpsb
push
arpl
cmp
out
cmp
stos
sub
fisttpl
cld
push
test
imul
in
outsb
xchg
dec
lcall
int3
shll
cmp
imul
add
xchg
adc
pop
mov
jno
push
push
mov
mov
jbe
cmpsb
add
or
call
arpl
inc
adc
jp
out
and
scas
or
dec
sbb
mov
subl
and
loope
shll
sub
stc
decb
scas
scas
xchg
jmp
hlt
das
pop
cwtl
jae
and
rorb
inc
or
jg
mov
add
push
nop
fs
mov
negb
mov
je
or
insl
int3
pop
sbb
aad
add
add
aaa
mov
jo
push
pop
daa
out
cmp
setg
push
jnp
adc
in
cli
hlt
pop
test
test
test
and
cltd
adc
cmp
stos
lret
jl
mov
xor
psubusw
add
jl
sbb
pushf
adc
jge
das
mov
jmp
xchg
cmp
in
mov
jae
pop
cld
out
sti
pop
call
aad
pop
pop
and
mov
mov
xchg
pop
push
push
xchg
ror
stos
push
fs
adc
adc
mov
jno
lret
xor
call
xchg
lahf
dec
fwait
pop
cmp
sbb
push
or
sbbl
sub
es
pop
cmp
into
inc
xchg
mov
aad
jge
stc
sub
push
negb
push
loopne
insl
push
adc
popf
or
test
sub
rcrl
fwait
sar
orb
sub
cmp
lods
fisubs
sbb
cmpb
repz
cmp
dec
cltd
push
pop
mov
jns
je
push
outsb
pop
int
ljmp
stc
xchg
fdivr
pop
nop
or
notl
icebp
out
fisubs
inc
xor
xchg
mov
pop
popf
std
mov
cmp
bound
lahf
mov
cmp
jo
loopne
xor
shr
pop
pop
push
ret
imulb
imulb
and
push
ss
les
mov
ret
mov
and
pop
ror
xlat
jge
rcl
cwtl
xchg
or
cmc
adcl
ds
mov
dec
lock
jnp
dec
inc
push
mov
inc
cmp
add
mov
and
pop
aas
iret
inc
jne
mov
into
mov
dec
push
mov
lahf
cs
adc
mov
xchg
scas
pop
fmul
pop
adc
sub
xor
cmp
jno
inc
push
imul
sub
filds
movsl
dec
outsb
sbb
cmp
daa
mov
push
movsl
fbld
mov
aam
addr16
int
mov
in
scas
andb
xchg
into
xor
adc
ds
pop
jns
sbb
inc
mov
int3
xchg
ja
xchg
das
rcrb
test
jmp
out
xor
je
in
iret
andb
mov
out
jmp
push
sbb
aam
sahf
mov
inc
ret
in
mov
inc
lods
inc
and
push
dec
fisubrl
and
xchg
sub
or
xor
fmuls
cmpsl
xor
sbb
out
call
scas
jl
test
mov
xchg
mov
push
xchg
mov
test
or
roll
ja
mov
adc
outsb
pop
pop
dec
mov
pop
and
enter
jecxz
push
aas
cs
nop
imul
and
cmc
add
mov
xorb
pop
aad
ret
cltd
cmpl
sub
mov
daa
call
loop
mov
adc
cmp
add
js
or
sahf
mov
js
push
loope
adc
bound
subl
jno
push
xchg
pop
sbb
cmpb
mov
mov
fldl
push
arpl
sarl
inc
mov
insl
sbb
xchg
lods
test
mov
cmp
mov
add
jle
bound
jns
dec
mov
cmpsl
scas
inc
jns
repz
sub
mov
adc
mov
mov
je
inc
adc
sub
mov
pop
mov
add
pop
icebp
and
stos
xchg
jg
cld
xchg
jge
pushf
sbb
outsl
lret
or
xor
mov
or
mov
and
mov
and
add
or
fsubp
fsubrs
xor
nop
scas
xor
daa
cmpb
ret
aad
mov
nop
js
ljmp
push
out
cld
xor
push
dec
jno
adc
sti
ret
jns
pop
loope
lahf
pop
cs
xor
ret
cmp
mov
aas
cmp
das
xchg
pop
and
int
sahf
cmpsb
sbb
xchg
sbb
xor
in
imul
xor
jae
ficoml
xchg
add
add
xchg
cwtl
pop
push
mov
pop
inc
jl
lds
inc
sbb
test
popl
test
add
rorb
add
xchg
xorb
lea
repz
jl
sbb
hlt
js
mov
call
mov
loope
and
outsl
adc
xchg
mov
dec
mov
mov
adc
xchg
mov
or
push
cmp
and
and
insb
les
xor
ret
fdivl
push
lods
jbe
test
stos
add
in
aaa
lods
jo
das
addr16
mov
mov
int3
test
cmp
sub
js
out
mov
pop
adc
xchg
inc
jp
les
int
adc
leave
xchg
mov
mov
sbb
cmpsl
push
insl
jp
add
dec
gs
test
dec
push
cmp
sub
cmp
stos
icebp
or
inc
add
outsb
xor
cmpb
ror
out
jb
pusha
daa
hlt
mov
std
rclb
cmp
in
dec
sti
jge
lods
lret
insl
xor
hlt
mov
xor
aad
inc
outsb
testb
sub
mov
out
test
sbb
mov
xor
jmp
mov
cli
in
push
daa
adc
sub
cmc
andl
icebp
enter
pop
push
dec
jl
aam
add
test
push
in
lock
xor
mov
jmp
or
xchg
jno
jo
mov
jp
ss
pop
and
test
aad
cld
xchg
mov
cld
pushf
cld
cmpsb
xchg
fldl
mov
cmp
mov
insb
aas
out
aaa
fidivs
push
and
adc
jge
jmp
pop
dec
pop
jo
lock
and
aas
pop
aam
and
mov
mov
mov
jb
jnp
out
cli
fdivs
pop
lods
xor
dec
shlb
inc
insb
sbb
cltd
push
mov
add
leave
jle
pop
ja
pop
dec
or
faddl
push
inc
mov
fst
xchg
sbb
cmp
dec
sub
imul
out
sbb
push
mov
mov
mov
in
sub
insb
out
call
lret
sub
addr16
outsl
mov
inc
mov
xor
inc
inc
sbb
add
in
mov
pop
lds
mov
jle
dec
sbb
dec
test
xor
int
imul
cmp
xor
rol
cmpsb
xchg
fidivrl
int3
xor
in
js
aaa
pop
push
out
and
sbbl
pop
sub
shl
pushf
jge
adc
mov
sub
jns
loopne
cmp
inc
roll
movsl
push
not
push
push
push
hlt
inc
in
inc
fldpi
cmpsl
sub
xor
push
push
cmpsl
push
das
fwait
lds
inc
xor
mov
aad
in
pusha
sub
fmul
sbb
sub
push
xlat
mov
add
cmpb
xchg
and
movsl
push
out
xor
fmull
pop
push
pop
imulb
push
bound
adc
test
push
jae
sub
fdivrp
sahf
xchg
test
xor
jmp
cli
jmp
mov
cmp
pusha
xor
cmp
dec
jae
cmp
cmc
push
pop
lahf
xlat
and
or
pop
dec
pop
lret
xchg
xchg
inc
jmp
jl
push
inc
and
cmp
pop
xchg
add
jmp
out
dec
mov
push
or
out
mov
ret
imul
jmp
in
sahf
insl
sub
pusha
push
aad
out
das
out
sub
sbb
cmp
sub
les
and
sub
jge
adc
jecxz
orl
mov
xor
sub
mov
push
and
pop
inc
mov
jb
fwait
pop
add
in
sbb
aaa
push
cwtl
cli
lret
rcll
adcb
mov
xor
pop
mov
hlt
mov
cwtl
in
nop
add
mov
xchg
lret
xchg
adc
mov
jne
add
mov
pusha
and
sub
cmp
push
lret
mov
mov
cmc
mov
push
in
lods
adc
and
insl
add
dec
push
dec
jb
jb
mov
mov
addr16
mov
inc
inc
iret
add
push
mov
push
lcall
outsb
divb
sub
into
dec
add
les
mov
das
dec
inc
negb
fcmovnbe
loop
jae
popf
mov
push
loop
xlat
push
out
xchg
mov
addl
std
rcl
jle
cmc
push
aam
jmp
push
mov
adc
popf
repnz
dec
pop
push
add
cli
xchg
push
sub
dec
pop
xchg
adc
cmp
sbb
xor
ret
cmp
fwait
mov
sub
pop
push
mov
and
pushl
push
pop
adc
stos
ds
pop
inc
int3
jge
mov
clc
jmp
leave
aas
out
cmpsb
adcl
cmp
out
mov
adc
mov
push
stos
idivl
xchg
inc
stc
mov
adc
scas
push
mov
sbb
out
icebp
out
ret
jo
push
or
in
fwait
lcall
cli
movsb
and
pop
push
sbb
add
lret
or
sbb
outsl
sarl
cmp
cld
rcll
xchg
fcoms
jl
je
mov
jge
push
pop
sbb
push
jmp
or
push
xor
rcrl
mov
jecxz
sarb
loop
cmpb
xlat
out
push
cmp
xor
movsb
or
xchg
xchg
es
or
sbb
sti
mov
es
sub
add
inc
repnz
fwait
mov
pop
jae
test
and
into
aas
lahf
les
jb
scas
iret
or
cltd
lea
in
or
scas
push
negb
arpl
ljmp
xchg
xor
hlt
arpl
ljmp
and
imul
xlat
pop
pop
cmp
adc
or
push
push
mov
and
dec
cs
lret
in
mov
imul
pop
stos
mov
hlt
xor
dec
pop
push
into
fidivrs
mov
loop
dec
rcll
lahf
xchg
adc
test
bound
arpl
sar
pop
ljmp
push
inc
out
stc
fwait
mov
int3
push
fcoms
and
call
cmp
loop
xor
adc
scas
pop
imul
ds
lock
pushf
sub
das
pop
cwtl
shrl
mov
shr
cmp
xlat
popa
fldt
sub
mov
clc
or
lea
jo
mov
cmp
cmp
mov
jo
fsubl
push
test
in
repz
fwait
addr16
pushf
add
addb
leave
lcall
jo
pop
mov
jae
lret
divb
fnstenv
pop
jae
add
sub
test
cmp
leave
add
daa
pop
test
or
shll
fildll
xchg
jp
push
loop
cmpsb
insb
xchg
test
adc
andl
or
sbbl
aad
imul
sahf
jle
mov
sbb
test
repnz
mov
loop
dec
movsb
repz
lret
dec
lea
lcall
inc
mov
add
jnp
xchg
es
mov
xor
mov
mov
lret
imul
jp
inc
xchg
hlt
and
jbe
push
pop
lds
jp
out
fs
pop
xchg
call
dec
adc
sub
dec
dec
mov
loopne
push
push
icebp
js
aaa
call
scas
aam
int3
mov
xor
in
mov
sub
insb
icebp
aad
or
ds
and
bound
loopne
fwait
test
hlt
scas
inc
xchg
and
sub
xor
shll
ja
inc
sbb
int3
sbb
rolb
or
lcall
and
into
pushf
dec
clc
mov
xchg
mov
sbb
adc
ss
add
mov
cltd
scas
adc
pop
add
fs
outsb
xchg
inc
lods
fdivrl
add
dec
adc
jle
cmpsb
loopne
out
dec
or
push
xchg
cmpsl
ret
lds
std
or
push
cli
pop
push
iret
cmc
mov
add
test
xor
add
dec
inc
sbb
pop
push
ljmp
sub
mov
subl
push
inc
dec
mov
cmp
cmp
gs
mov
ja
dec
jno
andl
xorb
fwait
push
jo
imul
or
push
or
in
and
ficoml
stos
pop
fstpt
leave
sbb
mov
out
push
rcrb
jecxz
fnstsw
and
data16
daa
sub
cmp
ja
gs
aaa
mov
mov
xlat
xor
pop
sahf
mov
inc
jle
adc
pushf
xchg
out
or
sbbb
mov
outsb
in
pop
es
out
pop
iret
or
mov
mov
hlt
shr
sbb
iret
popa
out
mov
cwtl
in
mov
push
fcmovnb
lds
xor
pop
xchg
pop
incb
jg
stos
fsubrp
xchg
shll
pop
or
aas
popa
jecxz
out
ret
mov
imul
xchg
fwait
sub
cmp
mov
fwait
stos
push
pop
cwtl
or
cmp
inc
cmp
push
dec
aaa
test
je
push
sbb
mov
lahf
sbb
jno
enter
ret
mov
mov
scas
mov
fwait
out
or
les
adc
cmp
cmp
sahf
mov
inc
cltd
cs
stos
sub
push
fcoml
fdivs
cwtl
sbb
int3
sub
mov
xchg
shr
fwait
mov
mov
nop
pushf
pop
lock
fs
adc
add
gs
mov
dec
js
inc
sbb
dec
sbb
popa
aam
repz
xlat
add
add
push
rcll
mov
jae
push
pop
rorb
bound
loopne
jmp
repnz
mov
leave
dec
aam
mov
cltd
iret
or
out
xchg
test
sti
pop
mov
lahf
aam
imul
js
and
gs
mov
jge
lods
jnp
mov
ljmp
lock
mov
jle
data16
incb
outsl
lahf
mov
mov
mov
xchg
loop
sbb
js
cmp
stc
pop
pop
inc
cli
or
popf
jnp
sub
ret
add
dec
jp
loope
imul
or
sbb
hlt
enter
pop
jnp
mov
mov
xor
sub
mov
push
ja
stc
call
push
sbb
pop
inc
rolb
xor
jb
pop
push
jg
stos
sub
sbb
or
jl
insb
pop
pop
dec
dec
mov
pushf
mov
fmul
int3
cmp
sub
sbb
or
jl
insb
pop
pop
dec
dec
mov
pushf
mov
fmul
int3
cmp
sub
sbb
or
jl
insb
pop
pop
dec
dec
mov
pushf
mov
fmul
int3
cmp
sub
sbb
or
jl
insb
fistpl
inc
mov
mov
mov
and
xor
sub
gs
push
push
inc
sub
jp
mov
mul
mov
mov
xchg
ja
inc
push
push
inc
daa
xor
pop
jno
stc
mul
jmp
shll
mov
dec
xchg
pop
aaa
sub
cmp
out
fwait
mov
cli
jmp
lock
ljmp
and
lods
std
jb
add
adc
aam
hlt
test
rcrl
dec
bnd
cld
imul
jg
ficoms
sub
xchg
cli
arpl
or
cmp
es
push
sbb
jmp
xlat
sbb
es
pop
cmpsl
cmc
or
cmp
cmp
xchg
enter
setp
stos
add
es
adc
sbb
sub
dec
sub
push
lcall
mov
inc
sbb
cmpsl
sbb
sub
mov
xlat
loop
loop
ja
mov
mov
out
push
pop
popf
jg
and
xchg
inc
dec
cmp
xor
scas
sbb
cmc
gs
pop
int3
leave
fadd
lods
test
test
xor
and
inc
inc
adc
jbe
xchg
mov
into
rcr
cmpsl
repz
shr
addr16
or
es
sub
push
imul
aaa
filds
mov
movsl
repnz
icebp
adc
xor
add
aaa
and
out
mul
aad
lds
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
pop
add
aad
lds
xchg
xchg
test
mov
out
rorb
inc
imul
sbb
or
call
mov
xchg
loope
bnd
push
adc
imul
push
rorl
sub
jno
int3
push
ret
push
cmp
dec
push
add
adc
jnp
push
dec
inc
adc
cwtl
cmp
pop
pushf
dec
dec
xor
mov
push
shrb
lret
jmp
scas
or
jge
inc
mov
sub
cmpsb
pop
aaa
divl
rcrb
iret
test
mov
cmpsl
pusha
mov
movsb
pandn
inc
dec
dec
mov
lods
ds
xchg
pop
lods
xchg
fs
test
xor
inc
popf
mov
movsb
clc
test
out
movsb
push
out
fwait
mov
imul
mov
jo
call
cmpb
orb
les
fstpt
lea
stos
and
lock
xchg
cmpsb
fiadds
xchg
pop
mov
jmp
sti
mull
jae,pt
mov
inc
inc
lods
inc
xor
stc
mov
mov
stos
in
pop
mov
jae
push
cmpb
pushf
leave
sahf
or
mov
ja
cmp
sub
fwait
dec
mov
xor
dec
sub
dec
test
xchg
test
sub
inc
push
lock
icebp
mov
sub
push
pop
in
clc
adc
jbe
push
gs
daa
mov
mov
mov
es
test
push
pushf
stos
sahf
test
xor
out
aam
inc
into
fsubrs
xor
into
int
sub
sub
negb
lcall
push
std
shl
push
push
or
fcmovnbe
ds
cmpsb
fcomip
pushf
in
mov
jl
and
xchg
add
adc
mov
push
mov
ret
mov
ljmp
daa
xchg
cli
loopne
pusha
sbb
sarl
mov
or
xor
adc
push
sbb
xchg
das
inc
fcoml
push
enter
mov
jae
cmp
jae
mov
lods
dec
mov
call
cmp
mov
lock
jge
out
sbbb
dec
pop
aad
mov
mov
mov
cwtl
adc
cmpsb
push
aaa
lods
insl
sbb
inc
cmp
mov
repnz
fs
xor
inc
pop
test
add
sub
mov
flds
ljmp
and
iret
arpl
pop
mov
sub
mov
xchg
movsb
pop
pusha
fdivl
outsb
std
shll
dec
mov
adcb
loop
add
mov
or
cmpsl
mov
aam
cmp
sahf
icebp
add
lcall
insb
xor
xor
sbb
push
sbb
jns
imul
mov
repnz
push
pop
pop
lods
cli
out
jns
test
daa
inc
or
fwait
enter
add
lretw
clc
pushf
mov
lcall
pop
jp
mov
jb
fstpl
sti
pusha
ret
cmp
inc
pop
iret
decl
popa
xchg
or
out
repz
repz
je
or
pop
pusha
xor
mov
ja
jl
sub
icebp
je
repnz
mov
push
sbbb
pop
push
int3
je
or
mov
cld
jge
xor
push
dec
loopne
pop
dec
adcb
fldenv
movsb
outsb
add
pop
xchg
push
add
push
xchg
mov
add
push
push
mov
into
lahf
inc
adc
jp
pop
icebp
add
mov
loop
fcompl
and
popf
mov
popa
dec
inc
inc
out
push
cmp
inc
rol
fwait
pop
mov
mov
adc
xlat
leave
push
xrelease
popf
jmp
and
xchg
rolb
insb
iret
icebp
xor
or
out
data16
dec
fisttpl
jne
dec
imul
sub
mov
aaa
out
sub
dec
into
sub
push
mov
fwait
test
mov
jnp
iret
pushf
pop
push
mov
mov
add
or
adc
ljmp
dec
clc
cwtl
xlat
test
or
sahf
sbbl
inc
popf
sbb
lahf
cld
ljmp
rcrb
push
mov
xor
cmp
xchg
arpl
jg
iret
imul
xor
stc
cmp
imul
mull
repz
repnz
imul
imul
xor
jl
jno
scas
loopne
mov
fisttpl
lcall
and
push
int3
ds
je
and
xchg
es
pusha
mov
aad
or
mov
adcl
and
add
inc
es
lret
push
add
lock
sbb
outsl
push
out
nop
jp
bts
or
xchg
cld
out
ss
out
jbe
scas
cmp
insl
lret
cmp
pop
nop
xor
cld
and
cwtl
xor
mov
mov
sbb
pop
push
stos
lret
dec
imul
or
xlat
lret
popf
imul
mov
sahf
mov
jp
mov
repz
sarb
or
inc
stos
dec
pop
inc
lret
std
popf
pop
shll
mov
push
lock
mov
mov
push
sbb
push
mov
shlb
jmp
cltd
roll
and
popa
lret
dec
int
and
ja
in
pavgb
jl
mov
xor
mov
adc
push
push
xchg
cld
stos
cltd
or
arpl
sub
ficoml
lahf
pop
xchg
pop
mov
pop
or
test
std
and
cmovb
loop
jmp
xchg
hlt
cmp
push
clc
ret
mov
fiadds
xchg
jno
push
jecxz
je
stos
and
mov
andb
add
int3
shlb
mov
out
xor
xor
mov
jo
fldt
stos
ret
pop
jl
movswl
pop
test
lods
insl
push
or
aaa
clc
xor
mov
les
daa
or
jmp
shr
jae
ffree
push
testl
int
mov
fs
addl
adc
pop
adc
cs
iret
test
mov
repz
out
jl
dec
clc
ret
data16
and
push
dec
adc
cmpsl
sbb
mov
enter
fisttps
xchg
or
xchg
adc
sbb
mov
in
dec
inc
repz
push
pop
jae
in
jecxz
lcall
jmp
sub
jo
ret
popf
cmpsb
and
pop
xor
lret
mul
popf
xchg
lods
jns
or
push
inc
mov
dec
fcmovnbe
xchg
mov
sti
movsb
jo
ud0
xor
xor
and
fldenv
push
or
ret
dec
loop
adc
xor
in
std
mov
add
loope
jl
mov
xchg
outsl
data16
daa
in
andb
push
jle
sub
sbb
pop
call
push
or
and
lret
out
adc
and
jge
jecxz
dec
out
shlb
out
lds
adc
imul
sahf
lods
out
loope
test
addr16
and
out
mov
ds
scas
inc
push
xor
sub
and
in
xor
test
dec
pop
mov
dec
ret
jl
int3
test
shlb
dec
sbbl
dec
subl
mov
shll
rcr
sub
test
mov
shl
mov
pop
mov
pop
mov
adc
jl
dec
or
rcl
cmp
xchg
pop
adc
sbb
rclb
lods
pop
cmp
fidivl
sbb
mov
jnp
outsb
mov
test
cmc
jg
pop
cmp
pop
add
das
dec
hlt
xor
mov
into
push
fdivr
push
push
out
stc
push
aas
movsl
cmpl
hlt
fldl
lret
test
leave
shrl
add
mov
mov
dec
push
adc
lea
jg
xor
out
mov
or
mov
ds
insl
pop
jl
push
xchg
pop
jb
out
stos
lcall
dec
in
loope
mov
pushf
int3
fbstp
push
lret
enter
xchg
gs
add
cmp
test
outsb
mov
stos
leave
data16
dec
fs
cmp
mov
mov
add
out
push
in
sbb
mov
inc
mov
mov
push
movsl
ret
bswap
or
aad
rorb
cmp
or
insl
fsts
outsl
xchg
pop
in
mov
mov
xlat
mov
push
inc
xchg
repnz
adc
mov
mov
pop
mov
add
shrb
sahf
lock
cmp
pop
addr16
mov
pop
daa
subl
xor
add
shrl
idivl
mov
sahf
or
inc
das
in
insb
rolb
out
pop
cs
cmpsl
cwtl
mov
es
xor
out
push
dec
add
ret
pop
mov
xor
in
pop
insl
jae
sbb
add
icebp
sub
fyl2xp1
daa
dec
loopne
inc
jbe
nop
or
je
and
dec
push
hlt
fwait
push
shl
push
sbb
lahf
fwait
add
jns
sbb
scas
push
pop
popa
mov
loop
mov
add
pop
and
roll
addr16
cs
adc
pop
movsl
cmc
sub
inc
inc
ja
adc
push
mov
rclb
divb
jmp
imul
mov
push
in
mov
call
mov
lods
push
call
mov
cmp
notb
sbb
add
push
data16
in
push
cmp
mov
and
clc
repz
loopne
inc
push
sbb
pop
ret
xchg
xchg
imull
bound
mov
mov
mov
clc
leave
notb
loope
pusha
lret
inc
aam
sub
add
add
shrb
out
dec
mov
push
mov
jmp
mov
popa
cmp
jg
pop
adc
lahf
sub
dec
push
ds
out
test
fcomps
bound
scas
js
mov
popa
adc
or
sub
lds
push
sbb
cmp
sub
shrb
cmp
scas
repz
lret
add
incb
in
pop
xor
inc
shll
sub
cmpsb
sbb
cltd
jb
jmp
push
jae
pop
push
shrl
adc
jl
mov
in
sarl
iret
mov
jo
jg
outsb
mov
cmp
xor
xor
adc
or
xchg
fdivs
pop
outsl
pop
and
inc
pop
jmp
inc
ret
sbb
lret
mov
pusha
mov
into
inc
push
test
or
add
lods
addr16
adc
cbtw
mov
insb
add
lock
es
or
roll
jns
cld
ljmp
adc
je
jecxz
lea
sbb
xchg
add
incl
cmc
pop
stos
pop
fnsave
cmp
inc
call
mov
jmp
cmpsb
mov
pop
icebp
add
or
cmpsl
psubusw
insl
mov
mov
sbb
inc
rclb
aad
jb
pop
jmp
xchg
adc
jnp
inc
std
mov
push
mov
fldcw
sub
xor
sbb
mov
push
and
cmc
enter
mov
je
shll
es
pop
dec
orb
hlt
mov
ret
push
out
hlt
adc
repz
sti
movb
loope
cld
mov
push
xor
push
fisubs
dec
test
push
mov
call
sbb
pop
push
rcrb
lea
jg
jl
sub
mov
xchg
add
inc
icebp
insl
inc
mov
inc
jb
jp
push
clc
in
mov
sbb
mov
into
mov
or
adc
and
insb
fildll
test
inc
stc
and
push
addr16
ret
leave
fcomp
sub
push
jecxz
out
stc
dec
pop
sbb
jbe
cmp
adc
sti
xchg
dec
lahf
lcall
push
cltd
ret
out
xchg
push
fsub
mov
push
lret
js
inc
arpl
push
jno
xor
call
out
mov
das
addr16
mov
xor
inc
xor
xchg
xchg
enter
xor
icebp
mov
pop
fsts
cmpsb
lret
stos
mov
aam
iret
outsb
dec
pop
jnp
jl
mov
std
add
mov
cmpsb
clc
gs
fadds
push
push
adc
movsl
pop
fbstp
scas
push
cld
testl
aad
cmp
shl
jmp
adc
or
cmpsl
std
jnp
xchg
fs
sub
repnz
aas
push
cmp
push
and
loope
sbb
mov
sub
or
ds
sbb
out
xchg
ret
or
cmp
xor
pop
mov
pop
std
sub
loop
xchg
mov
xchg
pop
push
call
ret
nop
xor
aam
imul
ret
push
xor
cmp
mov
inc
cmp
loope
mull
cmpsl
sub
icebp
fimuls
test
pop
arpl
in
push
or
add
mov
xchg
cmp
fldenv
push
cwtl
notl
cwtl
add
sub
inc
rorl
ret
mov
xorb
inc
nop
push
addr16
addl
dec
push
xor
pop
add
pop
cltd
push
dec
xor
punpcklbw
pusha
sbb
leave
xlat
xor
mov
subb
test
adc
outsl
and
in
sub
xchg
cltd
dec
mul
dec
pop
std
mov
jecxz
push
jle
adc
dec
xchg
je
lock
aad
fdivrl
into
insb
inc
imul
xchg
xchg
shlb
mov
jg
and
daa
pop
adcl
dec
out
sbb
jnp
jge
mov
scas
jb
add
push
jg
int
bound
pusha
pop
add
insl
xor
fldcw
sub
inc
and
inc
sub
mov
sbb
loop
loopne
mov
push
clc
push
cmp
and
mov
movsl
icebp
test
pop
nop
fwait
xor
jecxz
cmp
lret
mov
add
push
cmp
push
orb
jecxz
or
xorb
lret
adc
pop
ss
daa
sbb
scas
jb
int
andl
mov
enter
pushl
push
mov
popf
test
test
fisubs
mov
shr
xchg
lods
fnsave
shll
insb
push
ret
mov
cltd
inc
shlb
ret
push
dec
fs
popf
jl
loopne
inc
sahf
mov
in
jns
ljmp
pop
arpl
into
lahf
out
fimuls
dec
xchg
fisttpl
push
mov
bound
xor
add
or
mov
jnp
pop
ret
mov
es
lea
push
sub
sbb
pop
push
dec
jg
cmp
faddp
lods
xchg
call
jp
cmp
jp
cmc
jle
add
sbb
mov
scas
mov
jne
adc
push
mov
cmp
cmp
rcrl
push
mov
mov
lock
ss
pop
mov
jl
jns
inc
or
dec
push
les
fs
inc
jo
adc
jne
and
inc
xorb
lea
add
cmp
dec
fstpt
insb
or
inc
xchg
das
leave
xchg
out
fsubrs
dec
mov
popa
jg
dec
mov
ret
lock
add
mov
adc
xchg
dec
add
idivb
pop
lcall
sbb
and
mov
sub
roll
xlat
scas
mov
jle
mov
sbb
mov
les
mov
pop
add
pop
mov
cmpsb
jl
loope
mov
mov
in
or
addb
jae
adc
or
int
lods
and
pop
xchg
repz
in
mov
out
gs
js
lds
cmp
cmp
mov
filds
push
rcll
push
enter
inc
arpl
xor
scas
sti
jmp
inc
sbb
dec
arpl
dec
pop
jbe
daa
add
inc
or
or
mov
cli
mov
pop
loope
cmp
sub
in
pushf
fnstsw
adc
mov
ljmp
testb
xorl
lret
inc
mov
push
ret
mov
lahf
fwait
rcrl
ja
mov
jmp
mov
pushf
or
aam
shrl
js
mov
imul
lds
adc
insl
sub
fistpll
shl
push
mov
mov
jp
mov
pusha
cld
outsl
insl
ljmp
cmp
gs
mov
xchg
mov
fcmovu
mov
add
imul
in
cmp
lock
xorl
push
in
and
xchg
jns
inc
test
mov
ja
test
fwait
inc
and
int
and
dec
int
lret
cmp
and
enter
cmp
inc
out
mov
xor
cmpsb
ja
int
pop
rol
js
outsl
es
aas
push
mov
pop
lods
push
or
xor
shlb
mov
cli
int3
adc
mov
fninit
push
add
mov
add
stc
in
mov
aas
lea
pop
int
mov
mov
push
sbb
jo
and
xchg
into
mov
loope
cmp
cmp
das
or
and
loopne
fwait
xor
mov
or
aaa
add
and
jno
push
and
mov
add
xchg
imul
dec
subb
dec
pushw
mov
scas
pushf
mov
cmp
sbb
stos
dec
shlb
sub
popa
and
jns
subb
dec
xlat
inc
xchg
jnp
pop
stc
inc
jno
lds
negb
pop
pop
xchg
popf
adc
push
dec
push
test
stc
xchg
mov
inc
aas
pop
testb
out
pop
nop
add
mov
cmpsl
inc
test
mov
cmpb
loop
cmpxchg
inc
jg
in
inc
sub
inc
shrl
fcmovnu
push
xchg
ja
sub
push
and
pop
pop
jecxz
jnp
and
sbb
mov
jl
rorb
inc
pop
mov
in
nop
lret
or
fstpt
ficoml
xor
test
sub
lods
mov
or
jb
in
das
or
cld
in
pop
cmp
loope
inc
dec
mov
dec
fldcw
xor
and
aaa
cmp
in
add
push
jns
mov
lcall
cmc
xor
clc
mov
push
rolb
dec
ss
rclb
xor
mov
cmp
sbb
por
xor
shl
adc
fstpl
scas
inc
fildl
sbb
imul
sti
stos
mov
mov
int3
in
das
inc
dec
mov
lea
insl
ret
stc
loopne
out
push
dec
pop
test
inc
and
cmp
xchg
out
out
mov
fcoml
xlat
imul
jmp
mov
pop
adc
rclb
popa
aad
sbb
xor
and
inc
leave
mov
or
adc
and
imul
mov
fists
out
enter
pop
xor
movsl
repz
fmuls
cmc
rclb
add
out
or
add
jae
movsl
test
and
lock
outsl
pop
mov
cmp
bound
repnz
mov
xor
mov
ret
stos
insl
xor
dec
mov
sar
incb
les
xchg
mov
scas
mov
jge
out
in
add
arpl
repz
jns
or
rol
pusha
sbb
fcmovu
lahf
pop
rol
dec
leave
inc
in
movsb
xchg
jmp
aad
xor
inc
call
inc
call
int3
add
pop
rolb
hlt
fildll
fimuls
mov
xor
jge
ficoms
movlps
setge
and
mov
scas
mov
and
ss
jno
mov
pop
popa
jecxz
imul
mov
push
outsl
mov
repnz
push
lea
xchg
or
ret
bound
push
dec
mov
insl
fsts
test
cld
dec
xchg
push
fcmovnb
push
shrl
popa
fwait
jbe
sbb
mov
push
mov
push
mov
mov
xchg
int
cmp
xchg
mov
add
add
pop
cmp
mov
out
push
shl
or
cmp
test
push
mov
pop
adc
push
lret
jno
pop
pusha
cltd
sub
xchg
loope
aaa
sub
sbbb
cmp
pop
and
cmp
fs
popa
add
mov
cltd
lret
gs
dec
inc
daa
xor
pop
add
aad
lds
xchg
xchg
test
ja
inc
push
push
inc
daa
xor
pop
add
aad
lds
xchg
xchg
test
je
push
push
push
inc
es
push
add
into
aad
shll
cmpsl
cmpl
jg
daa
xor
xchg
or
aad
mov
cmp
push
mov
mov
or
ljmp
lahf
sub
pop
decl
iret
jp
push
lcall
outsl
fidivrl
dec
cli
pop
ljmp
lahf
sub
jp
push
lcall
jno
pop
lret
pop
ljmp
cli
sub
subl
jae
pmaxub
imul
xchg
stc
je
call
cmp
jge
pop
call
ret
xchg
ret
lret
lcall
not
loop
cmpsl
lret
push
cmp
adc
and
jp
or
cmpsb
lea
inc
inc
std
insb
imul
mov
ljmp
jecxz
repz
mov
mov
jg
mov
pop
mov
or
popa
aad
or
sbb
test
dec
rolb
xor
insb
adcb
divl
pop
cmp
pop
ficompl
stos
xchg
decl
aaa
jnp
cmp
pop
mov
fists
xor
pushf
in
sbb
imul
movsl
lods
mov
je
imul
dec
cli
stc
ljmp
scas
sub
jp
sub
testl
add
pop
lcall
cli
inc
popf
aaa
xchg
xor
fistpl
jge
jle
push
mov
or
enter
insb
out
xchg
xor
sahf
add
lret
outsb
into
dec
fidivrs
jg
dec
cli
pop
ljmp
lahf
sub
pop
decl
jp
push
lcall
outsl
fidivrl
dec
cli
pop
ljmp
lahf
sub
pop
decl
jp
push
lcall
mov
lods
std
xchg
movb
into
in
popa
mov
jb
sbb
push
mov
pop
pop
lret
outsl
xor
lods
xchg
frstpm(287
xor
push
inc
in
jg
jae
ds
jbe
out
addr16
cmp
mov
push
mov
scas
test
xchg
or
out
mov
dec
mov
mov
inc
das
ds
fidivrs
cmp
insb
push
call
xor
cmp
arpl
push
push
call
mov
gs
cmpsl
jno
add
cmc
xor
shll
div
rol
or
cltd
iret
mov
mov
adc
ja
nopl
popf
mov
into
cmp
cmp
pop
popa
sbb
into
dec
iret
dec
xchg
mov
je
outsb
stc
xchg
into
mov
fs
or
ljmp
sahf
ret
fwait
and
ret
mov
stos
mov
call
lret
sub
mov
movsb
orl
jno
fxch
aad
mov
add
insl
jmp
add
pop
loopne
or
rolb
jnp
ljmp
stos
repz
nop
xor
fwait
imul
cmp
jp
cmc
aam
mov
call
and
es
sbb
and
mov
adc
lahf
aas
in
jb
xchg
ret
repz
cmpl
bound
lret
jl
fimuls
in
xchg
sarl
push
and
pop
sarb
adcb
sahf
shlb
push
xorl
insl
sub
push
push
and
or
sbb
inc
mov
lea
inc
or
dec
movb
mov
jbe
insl
lret
sbb
testb
adc
and
sub
ja
dec
mov
mov
imul
pop
insb
in
sbb
add
aaa
inc
sbb
add
cmpsb
fiaddl
fwait
mov
fidivrs
push
je
dec
inc
pop
mov
ja
int3
adc
sbb
sti
inc
xchg
or
push
sub
notl
iret
xchg
xchg
jns
mov
mov
sti
int
stos
sub
stc
test
cmpb
xchg
arpl
out
cmc
mov
repz
adc
ja
loope
add
dec
fisttps
arpl
sbb
add
inc
lea
stos
pusha
lods
sub
into
aas
xchg
enter
fdiv
lock
imul
movsb
in
aad
stc
jle
jo
sti
jg
mov
in
sbb
lcall
push
dec
push
sbb
mov
pop
and
add
mov
in
fs
pop
pop
ffreep
rep
mov
les
mov
mov
sbb
popf
mov
jnp
ror
pushf
movzwl
decl
lea
mov
lea
hlt
sub
pop
pop
inc
das
jae
cmpsl
adc
stos
lret
pop
or
test
int
pushf
push
jo
xchg
jns
das
sbb
adc
lea
sahf
mov
jb
cmc
in
mov
pop
sbb
mov
or
mov
rorl
lock
cwtl
add
or
cmp
cmp
jecxz
adc
orb
cwtl
sbb
pop
vpmacsdqh
mov
or
cmpsb
stc
mov
pop
bound
dec
hlt
mov
jns
jno
cwtl
outsl
dec
inc
fcmovbe
je
roll
or
adc
lcall
push
sbb
test
popa
mov
add
add
and
divl
loop
ljmp
aas
dec
mov
outsl
cwtl
nop
fwait
stos
push
outsb
lds
hlt
test
jge
cltd
int
add
jg
lds
rcrl
jbe
and
lcall
mov
js
and
inc
cwtl
iret
popf
lods
or
mov
sub
or
imul
xor
rcll
leave
pop
mov
and
ds
mov
cltd
and
inc
dec
xor
vmovlps
dec
decl
mov
add
dec
inc
cmc
mov
mov
lret
inc
bndstx
gs
cs
fisubl
xchg
sub
mov
jb
ja
sbbb
es
bound
jecxz
xor
xor
ds
lret
jl
mov
jnp
mov
in
loopne
sub
sub
mov
sub
test
mov
adc
imul
sub
ret
je
push
fwait
in
lret
push
xor
mov
jne
xor
cmp
inc
jg
ret
subl
pop
add
mov
mov
out
mov
add
mov
outsl
int
mov
aad
aas
ret
inc
fistl
clc
std
sub
in
jne
xchg
jge
rorb
push
dec
mov
stc
jbe
cmp
mov
mov
inc
jo
cmp
inc
out
mov
cmp
ss
or
shll
test
mov
les
and
xorl
push
cmpl
inc
sub
fwait
mov
cmp
shlb
xchg
flds
jmp
dec
sub
xor
inc
scas
xor
enter
xlat
pop
jno
test
hlt
sub
bnd
in
shrb
cmp
stos
fists
hlt
mov
fistl
and
inc
frstor
jmp
in
cmpsb
dec
sbb
imul
or
cmp
jg,pn
mov
ds
cld
cmp
popf
xchg
mov
jo
fcoml
in
cmpsb
push
lcall
mov
adc
js
pushf
fisttpll
call
push
xchg
adc
sbb
orb
xchg
pop
inc
jae
je
scas
pop
lods
or
into
rcr
mov
xchg
and
dec
nop
jne
dec
xor
xchg
int3
xor
in
dec
push
notl
mov
test
aam
mov
sub
mov
xchg
les
lahf
push
leave
mov
fists
imul
aas
inc
xchg
lock
mov
out
push
daa
in
jle
push
or
loope
out
cltd
mov
mov
dec
push
sub
pop
pushf
bswap
mov
lods
cmp
rdpmc
push
stos
mov
inc
jge
mov
addr16
inc
movsl
addr16
jae
cmp
adc
fldcw
pop
cmp
inc
add
mov
icebp
or
sub
dec
insb
js
xchg
cmp
stc
dec
repz
ljmp
jle
in
lret
arpl
jmp
insb
push
repz
dec
add
js
mov
xor
mov
mov
es
dec
sub
lret
int
inc
int3
or
cmp
mov
and
mov
push
mov
or
mov
frstor
sbb
in
cmc
loopne
negb
cmp
std
jl
jl
xchg
dec
out
mov
ret
mov
inc
loopne
xor
ss
push
mov
push
sbb
dec
push
das
leave
sub
sub
jmp
fwait
jbe
fisubrs
out
insb
push
imul
cli
mov
xor
pop
bound
dec
and
pop
xor
mov
out
jo
mov
cvtps2pd
jno
dec
xchg
cmp
mov
jle
icebp
imul
lcall
test
xchg
daa
inc
subl
loop
in
push
in
aaa
arpl
rcrb
popa
add
mov
gs
add
ljmp
lea
out
dec
inc
xor
inc
inc
inc
cltd
xchg
scas
in
test
mov
xor
stos
add
imul
inc
icebp
es
sub
cld
aaa
jmp
icebp
ret
dec
add
lods
mov
jbe
xor
sub
mov
xor
jge
dec
ja
packuswb
fistpl
add
jecxz
ljmp
mov
clc
test
mov
or
fnsave
inc
or
cmp
mov
ret
je
lods
mov
and
popa
lcall
inc
sbb
pop
cmc
push
sbb
mov
pop
sbb
les
std
jo
and
in
pop
inc
xchg
cmp
pop
out
ss
mov
movhps
jle
mov
pusha
jecxz
ret
push
shl
add
shld
push
mov
adc
lret
or
iret
adc
mov
loope
sub
inc
cmp
adcl
cmp
push
fisubrs
sub
jnp
mov
push
or
sbb
push
imul
repz
fimuls
insb
orb
xchg
das
dec
pop
jo
gs
pop
jecxz
add
mov
jp
sub
inc
test
xor
sbb
jecxz
dec
mov
jg
das
mov
sub
jmp
mov
mov
movsl
cmpl
mov
call
push
xchg
ljmp
lea
lods
dec
mov
mov
bound
and
mov
adc
inc
mov
mov
loope
fidivs
stos
outsl
inc
cwtl
out
fidivrs
jne
cld
insl
cltd
in
pop
mov
sub
icebp
push
int3
add
aas
dec
and
mov
enter
gs
out
dec
push
fsubp
pop
ret
aaa
xor
xor
jnp
hlt
push
and
jbe
les
mov
mov
cmp
inc
lea
dec
scas
mov
cs
jb
ja
inc
outsl
adc
repnz
aaa
mov
and
jge
lods
jmp
mov
and
add
fistpll
add
pop
mov
xchg
xchg
and
xor
clc
cmp
addr16
dec
sbbb
outsb
addr16
sbb
aad
subl
pop
cltd
mov
adc
sahf
mov
push
xchg
jne
ret
mov
nop
dec
cmp
jg
or
push
xor
dec
adc
push
into
insb
xchg
stc
test
aam
jecxz
sbb
jecxz
mov
insb
cmp
addr16
add
dec
lea
add
push
jb
loopne
sbb
rolb
mov
push
jbe
aaa
lahf
dec
fisttps
or
jle
mov
sub
rcll
lds
filds
sub
stc
out
lds
pop
inc
mov
lods
in
in
mov
xchg
push
cmpsl
sub
ds
shll
jle
pop
loope
add
push
imul
scas
test
aam
mov
rclb
insb
cs
ja
jns
xlat
fidivrs
out
inc
push
call
jb
mov
inc
insl
xchg
nop
call
sbb
add
out
in
into
ret
and
fnsave
dec
lods
pop
xchg
mov
dec
mov
cmc
sbb
pop
mov
inc
cmp
xor
xchg
push
fiadds
outsb
mov
inc
mov
mov
out
mov
mov
test
icebp
xor
pop
sbb
jecxz
cmp
inc
loope
fwait
mov
add
or
dec
xchg
mov
mov
xor
xor
push
daa
pop
sahf
cmp
sbb
mov
rcl
das
mov
xor
leave
sbb
lods
inc
xlat
mov
pop
data16
nop
aad
mov
push
mov
stc
inc
push
aam
jmp
ja
push
fs
inc
fldenv
fstl
les
sbb
jne
mov
inc
lds
jbe
sahf
or
cwtl
fisttpl
arpl
push
jmp
in
loopne
and
iret
in
cli
cmp
cmpsl
mov
shll
add
les
cltd
pushf
jbe
mov
rcrl
fcmovnu
cmp
adc
aaa
adc
xchg
scas
js
push
and
mov
inc
jle
xor
inc
jp
cmp
out
imul
cmp
and
pushf
jae
fidivs
into
pop
scas
cltd
loopne
imul
add
divl
lahf
mov
movsb
fmuls
mov
add
push
icebp
cs
sub
cmpsb
cltd
pop
push
fcomp
cmc
adc
rcrl
push
xor
outsl
push
mov
cmp
mov
mov
xor
jecxz
loope
out
cmc
icebp
xchg
cwtl
or
push
or
jne
mov
mov
movsb
or
sbb
cltd
roll
lods
inc
hlt
daa
and
add
pop
pusha
int3
cmp
repnz
stc
cmp
std
xchg
popa
mov
arpl
inc
xchg
movsl
mov
and
push
idivl
repz
xchg
cmp
push
mov
mov
push
cmpsb
adc
movsb
mov
es
push
adcl
leave
adc
push
mov
push
cmc
lahf
add
shr
sub
dec
or
cld
xor
test
ja
arpl
push
push
loope
and
test
mov
push
xor
jp
adc
adc
test
sbb
pop
outsl
jmp
call
repz
dec
and
inc
xchg
ret
mov
dec
inc
and
arpl
and
mov
inc
xchg
loope
mov
aas
mov
gs
movsb
sub
push
cwtl
decb
lea
outsl
inc
cmc
xchg
jae
add
fnsave
push
subl
mov
cmc
push
pop
lahf
mov
lcall
int
mov
dec
push
sub
jmp
dec
push
psllq
inc
jl
mov
cld
aas
lret
push
mov
xor
xchg
inc
or
sub
daa
adc
jns
or
cmp
sbb
movsl
sbb
cwtl
fsubrl
sub
pop
movl
pop
jl
sub
jbe
ss
xchg
fcompl
orl
dec
inc
add
jle
mov
mov
mov
lret
dec
sbb
or
lcall
mov
std
xchg
jle
sub
xor
jge
loope
gs
pop
fldenv
cmp
sbbl
lret
lret
jg
cmpsb
iret
hlt
aaa
mov
cli
je
fsubp
mov
push
xchg
mov
push
mov
cmp
and
shlb
pop
fsubrs
mov
fisubrs
roll
hlt
daa
out
divl
shrb
mov
xchg
dec
xor
dec
fidivrs
les
in
xchg
nop
addr16
sbb
mov
add
sub
add
in
sahf
inc
pusha
push
sub
jne
and
and
jmp
pop
or
mov
stos
jp
adc
pop
ja
cltd
stos
lahf
fs
sub
cmpsb
sahf
adc
mov
popa
or
jno
jl
jns
movsb
xchg
mov
cmpl
add
pop
jne
cltd
xchg
xchg
rcrl
cwtl
push
andl
gs
cmc
and
dec
rol
test
add
sahf
inc
or
leave
jo
pop
andb
mov
mov
int
cmc
fs
mov
dec
shr
out
loope
xchg
sub
in
lds
xchg
pushf
xor
or
leave
movsb
push
sub
jle
mov
add
adc
sbbb
pop
jg
in
gs
in
clc
aas
cmpl
inc
shl
or
inc
mov
gs
bound
pop
lret
movsb
addr16
lock
push
data16
xchg
lods
js
and
cmc
dec
ds
ss
push
or
inc
es
mov
inc
loop
rolb
pop
xchg
cs
xchg
sarl
out
jae
mov
lea
push
outsb
jmp
ljmp
lods
lahf
scas
aam
lock
inc
subb
cmp
rcr
or
aad
in
pop
adc
sub
cltd
popa
cmp
in
mov
pop
jnp
iret
mov
in
push
push
mov
ficomps
pop
shlb
ss
jmp
sub
pop
shlb
adc
call
cmp
fisubl
insb
dec
jle
jle
sub
mov
shl
xchg
mov
int3
lret
outsl
nop
sub
in
cmp
jae
add
jge
sub
aam
jmp
and
lcall
loop
push
nop
clc
stos
xchg
sbb
xor
sti
sahf
dec
imul
movsb
subl
jns
repz
fnstsw
stc
fwait
push
arpl
xlat
inc
cli
mov
sub
mov
jge
sbb
inc
fs
lcall
rcl
ret
and
mov
out
or
dec
in
fisubs
sub
or
cld
fsubs
in
pop
nop
cmp
xchg
ljmp
cs
hlt
aam
or
inc
movsb
sub
adc
push
loopne
outsb
pop
jns
or
and
orl
mov
add
insb
cmp
sbb
test
imul
fmull
and
dec
jae
jb
popa
pop
in
outsl
addr16
sub
push
xchg
mov
stc
adc
xor
dec
add
jp
add
mull
pusha
sbb
in
mov
scas
pop
push
mov
test
xchg
xor
or
mov
add
xor
pop
jge
addb
sahf
out
lea
push
adc
mov
js
das
add
ja
jle
enter
xchg
jae
adc
or
lock
and
and
fmuls
xor
and
fs
sub
outsb
push
cmc
push
sbb
pop
adc
mov
cmp
rclb
add
rclb
push
mov
xchg
jl
and
mov
cli
fildll
cmp
cld
xor
out
cwtl
or
cmc
cwtl
pushl
jno
mov
addb
xchg
enter
xor
lret
lret
dec
mov
sti
dec
pusha
adc
lret
mov
roll
scas
xor
add
cmpsl
xchg
scas
dec
aam
test
sub
push
inc
xchg
rcrb
sub
pop
lea
ret
push
mov
lret
xor
addr16
fisubl
adc
dec
xor
jns
aad
sub
mov
cmc
sub
sub
into
pop
jge
add
mov
or
je
cmp
ds
inc
ficomps
jl
fisubrs
and
repnz
insb
js
pushf
mov
mov
clc
xor
mov
mov
sti
lahf
sbb
test
sub
adc
mov
sahf
popa
mov
aad
test
mov
pop
mov
idivl
add
cltd
mov
mov
pop
jo
mov
lock
repnz
inc
test
jno
jae
push
and
adc
or
js
imul
fmulp
mov
mov
hlt
arpl
xchg
jnp
in
mov
push
fwait
and
outsb
clc
add
xchg
es
inc
je
inc
test
fsubs
add
mov
xor
jnp
and
push
cmpsl
dec
dec
iret
xchg
adc
mov
popf
test
or
out
test
jp
mov
rcrl
pop
pop
sbb
xor
sub
push
stc
test
and
pop
dec
push
in
loope
mov
test
ds
sti
icebp
add
rcl
into
push
lret
shlb
pop
mov
test
sub
pop
call
in
fimuls
push
scas
sub
push
sbb
and
mov
stc
or
cs
ljmp
cwtl
out
cmc
adc
cs
mov
leave
xor
jne
push
inc
sahf
xor
cmp
outsl
add
and
adc
add
xchg
sub
mov
mov
jl
repz
scas
arpl
dec
sub
add
rclb
jmp
jns
xchg
inc
jmp
push
sbbl
xchg
pop
and
jg
lcall
dec
dec
xor
sbb
clc
inc
shll
scas
xor
pop
jno
sarl
pushf
addr16
xchg
movsl
mov
test
or
popa
fbld
inc
ljmp
les
or
mov
or
ljmp
ja
fidivrs
and
fildl
ds
int3
mov
mov
mov
push
or
idiv
outsl
xchg
xorl
mov
pop
test
add
and
sti
mov
pop
jp
imul
xchg
dec
mov
test
mov
xchg
xor
cmp
les
repz
test
sbb
push
and
mov
dec
out
cli
aam
mov
sbb
dec
xor
push
lods
insb
daa
lock
cmc
imul
adc
inc
neg
cmp
ds
pop
nop
cmpsl
adc
lahf
mov
xchg
add
push
pop
sbb
push
scas
xor
loope
stos
push
icebp
sbb
add
add
mov
xchg
sbb
push
ret
aaa
cld
sbb
imul
aaa
das
push
not
jae
out
push
ficoml
xchg
dec
mov
mov
movsl
aas
jno
imul
and
and
out
adcl
cli
inc
stos
or
pop
rcrb
mov
xlat
ror
daa
cmp
mov
pop
and
or
fbld
sub
adc
hlt
dec
lock
repnz
fnsave
mov
or
cs
mov
jg
dec
cli
pop
ljmp
lahf
sub
pop
decl
jp
push
lcall
outsl
fidivrl
dec
cli
pop
ljmp
lahf
sub
pop
decl
jp
push
sahf
jp
fidivrl
dec
sti
lahf
ljmp
lahf
sub
pop
out
dec
iret
jp
push
lcall
outsl
fisubrl
dec
jp
adc
and
shlb
xor
enterw
call
testl
inc
push
movsb
or
fsubs
push
clc
inc
call
push
mov
out
pop
enter
xchg
fcoms
sarl
loopne
icebp
das
cmpl
mov
mov
mov
lretw
sub
fmuls
mov
gs
push
xlat
shrl
sbb
ds
les
mov
jo
adc
adc
jbe
xor
mov
out
mov
xchg
cmp
mov
lcall
into
mov
inc
mov
les
mov
pop
or
mov
lahf
clc
fmul
mov
pop
push
jge
out
jecxz
cmp
sbb
loopne
sub
pop
cmpsb
or
mov
imulb
xlat
cmp
cmpsb
test
xchg
xlat
sahf
xlat
xchg
adc
mov
imul
pop
imul
js
dec
cmc
jge
movl
repnz
pop
mov
inc
push
into
popa
fbstp
add
dec
sbb
xor
inc
into
inc
out
aam
mov
movsl
sub
ret
pop
in
jmp
sbb
ss
pop
jmp
mov
mov
subl
or
sub
push
loop
adc
cs
jle
mov
mov
out
js
push
xchg
cmp
enter
call
push
mov
out
js
push
xchg
cmp
dec
jmp
movsl
inc
in
adc
ret
inc
xlat
into
cmpsb
and
repnz
repnz
adc
jne
pop
jns
sub
shlb
xor
sbb
cmp
push
adc
xchg
inc
xlat
jge
loope
push
inc
in
ljmp
out
sarb
lcall
hlt
sbb
push
dec
aaa
sub
push
mov
xchg
lea
add
mov
bound
xor
pop
aaa
ret
mov
enter
out
andb
pusha
popf
pop
sbb
push
mov
rcr
pop
sub
cwtl
or
sar
push
mov
popa
leave
imul
sahf
mov
pop
push
cmp
sub
sub
in
and
push
movsl
xadd
fisttps
push
or
adc
push
shl
addr16
add
add
sbb
adc
fisubrl
flds
dec
and
adcl
out
mov
dec
inc
insl
outsl
cmpsl
loope
xchg
pop
shl
pushl
xchg
jae
mov
sub
and
es
sub
shlb
subl
mov
cmp
arpl
aas
lock
cmpsl
pop
int3
pop
dec
lcall
repnz
dec
out
jnp
pop
sbb
mov
rorb
imul
mov
cs
in
fldcw
mov
xchg
cli
aas
adc
mov
aas
dec
pop
dec
rcr
jp
mov
inc
je
push
fmuls
es
shll
hlt
loope
das
lcall
mov
or
and
lahf
push
mov
out
ud0
jmp
pop
sarl
sbb
insl
shr
orl
mov
ror
loopne
ds
ss
xor
clc
ja
mov
jg
sub
dec
push
sti
jg
pusha
arpl
push
nop
ljmp
jp
dec
in
icebp
cmp
xchg
sub
pushf
jnp
lods
sub
pop
mov
outsb
fwait
and
mov
add
scas
loop
add
mov
cmc
stos
inc
cwtl
cmp
popa
popa
mov
adcl
bound
outsb
push
push
xchg
jne
jbe
dec
push
jb
adc
xchg
loop
daa
jno
lret
push
xchg
jnp
orb
pop
ret
xor
push
inc
in
jo
data16
push
lock
fisttpll
jo
xor
adc
nop
adc
sahf
jg
sub
sub
push
shr
out
jns
cmc
sbb
jnp
rclb
jmp
mov
mov
or
enter
lds
and
pusha
xor
cli
aaa
sti
scas
fwait
inc
scas
xlat
ja
pop
js
mul
out
xchg
xchg
dec
fld
mov
shlb
shrb
jecxz
insl
jo
ds
pop
xlat
jo
into
outsl
and
mov
stos
test
jo
into
sbb
data16
fs
mov
mov
push
adc
fcomps
arpl
inc
int
out
call
out
mov
nop
faddl
rol
subl
call
cmpsb
add
jb
push
daa
pop
lcall
jo
shrl
lods
xchg
call
cli
sub
insl
pop
sub
add
out
sub
push
inc
pusha
xchg
das
daa
inc
mov
movsl
scas
add
setns
cwtl
inc
test
mov
push
outsb
pop
add
popa
inc
fs
mov
add
aas
clc
jmp
cmp
sub
xchg
adc
xor
mov
aad
js
sbb
cmpsb
popa
call
cmp
mov
jp
pop
jo
shlb
mov
mov
bound
orl
leave
leave
lahf
je
cmp
dec
pop
xor
mov
in
sbb
cmp
lcall
ret
add
dec
xchg
add
mov
jp
test
add
out
js
sbb
stos
inc
push
mov
pushf
fucomp
and
aad
or
or
adc
sbb
aas
nop
fiaddl
inc
push
inc
repnz
in
push
outsb
insb
and
or
popa
inc
fsubrp
and
lahf
xchg
into
push
sub
xlat
seta
or
fiadds
or
sub
cmp
dec
or
cmp
clc
inc
mov
adc
out
mov
call
aad
shrl
jg
sbb
arpl
xchg
dec
dec
icebp
jle
fisttpll
add
jecxz
insb
cli
jno
jecxz
test
jne
cltd
aad
mov
xchg
cmpsb
loopne
jmp
cmpsl
lea
je
mov
insl
inc
mov
inc
inc
pop
push
adc
sbb
sarl
enter
cltd
and
aas
out
mov
and
aas
test
mov
pop
test
xchg
fdiv
in
push
and
or
adc
xchg
jo
subl
mov
mov
fisubrl
mov
stos
flds
jb
test
es
int
outsb
lahf
lods
cmp
test
xor
adc
cmpsl
mov
dec
lcall
hlt
adcl
lock
mov
outsb
mov
xor
or
scas
or
mov
and
lods
sbbb
aaa
nop
rcl
cmpsl
pop
add
push
xchg
adc
cmc
mov
mov
push
add
repnz
xlat
loopne
mov
sbb
inc
arpl
in
mov
jle
fimuls
inc
lock
outsb
lods
pop
jg
ret
mov
jmp
jae
fsubs
inc
pop
push
xchg
or
cmp
add
stc
cmp
adc
repz
and
push
mov
mov
add
sub
out
sub
sub
add
lds
add
lcall
in
in
xchg
out
ja
movsl
movsb
rcr
cmp
push
jecxz
xlat
xor
insb
mov
divb
pop
mov
mov
fnstcw
popa
adcb
lods
push
lcall
mov
sti
add
orl
mov
scas
dec
daa
xor
lret
lret
ret
adc
loop
and
dec
faddp
xchg
sub
dec
mov
xchg
and
push
sub
add
sbb
cld
or
dec
in
shl
push
dec
cld
pushf
xchg
sti
movsb
in
xchg
xchg
mov
inc
sub
call
inc
jno
xor
and
in
pop
add
dec
std
ljmp
mov
mov
cs
mov
mov
test
lock
lcall
xlat
outsl
add
sti
fucom
cmpsb
sub
pop
hlt
test
jno
sbb
movsl
mov
xchg
outsb
std
sahf
jno
dec
dec
sbb
pusha
xor
in
fsubr
lods
or
shrl
rcll
pop
sub
lods
and
jmp
jge
jge
movsb
dec
xor
mov
enter
mov
fistpl
mov
pop
mov
inc
in
mov
inc
out
jb
or
int3
dec
sub
lcall
push
jns
fldenv
fnstenv
test
clc
mov
into
push
cs
div
dec
fimull
and
sbb
fcomps
xchg
icebp
pop
fisubs
stos
mov
lcall
loopne
xchg
mov
std
movsl
lods
sahf
lods
mov
ljmp
rcrl
mov
lea
jge
das
jnp
add
mov
shrl
mov
lret
inc
xor
enter
mov
arpl
push
sbb
sub
xchg
pop
push
subl
mulb
mov
inc
add
dec
and
clc
shl
lret
das
outsl
cmpsb
fildl
imul
jecxz
jl
and
in
loopne
aam
add
into
dec
je
xor
pop
mov
pop
dec
ds
and
pop
pop
lahf
lret
aas
push
mov
mov
push
test
add
mov
mov
repnz
and
lahf
pop
ja
push
xor
add
iret
push
lret
ror
gs
jg
push
add
dec
and
bound
lds
sbb
mov
sub
mov
les
fimull
sub
fstl
ss
pushf
je
mov
std
dec
iret
mov
stos
mov
lods
push
sti
ret
call
xchg
adc
sbb
ud0
ret
and
mov
outsl
push
into
lock
in
incb
lcall
ret
inc
fdivs
fisubrs
je
iret
push
dec
les
ss
xchg
push
ss
daa
push
jo
dec
xchg
inc
sbb
enter
ret
add
and
add
movsl
adc
arpl
ja
cmp
bound
mov
sub
dec
mov
notl
jne
xor
cltd
mov
jl
jmp
jmp
in
lahf
popa
xor
gs
cwtl
scas
mov
mov
sbb
gs
jmp
add
jl
sbb
ficomps
ljmp
frstor
cli
out
out
sbb
and
sarl
adc
jge
enter
testl
jge
add
cmp
cwtl
push
and
stos
and
xor
notb
pop
fwait
mov
adc
pop
test
in
xchg
popa
jbe
pop
dec
incb
mov
mov
ret
inc
decl
rorl
jmp
out
test
or
xor
mov
pushf
mov
push
repz
xor
pop
insb
std
cld
jmp
pop
jmp
lahf
call
mov
inc
mov
push
insb
rclb
sbb
mov
mov
and
mov
addr16
mov
xchg
hlt
stc
ficompl
lods
out
mov
adc
push
adc
pop
aas
ss
mov
sub
cmpb
out
cli
mov
xchg
and
xchg
aad
fs
loope
xchg
test
sahf
inc
xchg
mov
dec
jmp
notb
and
scas
jnp
inc
lds
pop
push
pop
xor
or
xor
inc
fsubl
mov
mov
lock
fadds
jecxz
out
dec
pop
jbe
sti
mov
sbb
scas
jecxz
jecxz
xchg
cwtl
hlt
adc
or
jne
stos
jns
insb
pop
int3
or
sti
xor
in
bound
mov
push
mov
pop
cs
dec
mov
cmp
xchg
jno
xchg
mov
inc
xchg
jnp
mov
mov
pcmpeqd
out
jmp
repnz
dec
data16
push
adc
mov
cmp
sub
repnz
enter
incb
xchg
jmp
push
push
jl
push
push
stos
push
xor
cmp
ja
dec
scas
adc
mov
mov
jl
mov
adc
dec
or
or
lock
dec
xchg
inc
push
push
pop
sub
or
cmp
mov
insl
iret
ss
or
hlt
pop
testb
inc
or
and
incl
lret
push
sbbb
dec
cld
jmp
sbbl
daa
inc
mov
push
stos
push
mov
insl
mov
mov
or
jmp
cmp
mov
sub
and
mov
sbb
lret
shlb
lahf
rorl
dec
jno
test
insb
dec
sahf
cmc
pop
xchg
mov
popf
mov
sub
and
in
addr16
hlt
pushf
adc
lds
lods
dec
test
jmp
mov
adc
notb
cs
insl
push
inc
test
add
test
jmp
aas
xor
pop
and
jl
cmp
mov
cli
cmp
icebp
stos
pusha
fidivrs
mov
gs
mov
push
mov
pushf
mov
adc
imul
inc
iret
inc
pop
adc
sub
xor
mov
adc
aaa
shlb
xchg
lret
leave
pop
add
mov
leave
out
inc
ror
mov
add
jne
lahf
adc
mov
push
in
rcll
pop
lods
inc
lea
lea
xchg
lods
jle
divl
loopne
imul
in
les
je
and
arpl
pop
aam
aam
jmp
mov
mov
ret
into
add
in
or
push
dec
mov
mov
shlb
clc
cmp
std
or
je
mov
adc
jae
stos
mov
mov
push
mov
out
mov
and
cmpsl
gs
xor
std
pop
jge
nop
icebp
jmp
outsb
sub
mov
push
mov
rclb
jl
push
iret
sub
sub
jge
jbe
adc
jmp
sub
shlb
into
xchg
fcmovnbe
inc
xchg
jl
sub
lcall
or
lds
cmc
inc
out
xor
btcl
mov
pop
insb
lea
push
pop
insl
stc
or
xchg
std
and
cmp
leave
push
ss
popa
dec
inc
mov
xchg
jnp
cmp
dec
sub
movsb
fnsave
pop
out
mov
cmp
iret
les
mov
lods
out
mov
out
mov
std
ss
imul
or
push
out
lds
push
pmulhw
push
adc
jge
jecxz
pushf
aaa
pop
xor
mov
addr16
popa
pop
inc
mov
xor
aaa
es
push
mov
dec
mov
dec
clc
rcr
test
ffree
mov
cmp
in
mov
inc
cmp
mov
sbb
out
jge
icebp
ret
xor
cmp
add
in
xchg
mov
movsb
push
push
sub
mov
jmp
aad
lds
loopne
rcl
dec
jecxz
or
inc
fwait
mov
ret
adc
push
out
jno
or
dec
dec
jmp
out
or
jecxz
mov
mov
enter
andl
adc
xchg
jns
ljmp
enter
out
out
jle
outsl
mov
jb
mov
xor
pushf
add
movsb
insb
fnstenv
or
ret
push
inc
jp
fistpl
jns
mov
or
out
cmp
cmp
xchg
rolb
shll
sti
push
xor
paddsb
xchg
imul
cmc
js
xor
cmp
xchg
push
fisubs
jbe
and
mov
push
add
imul
mov
sbb
mov
mov
scas
rclb
test
add
and
push
lcall
stos
dec
data16
add
jns
or
imul
sahf
mov
push
flds
mov
mov
popf
pop
outsl
mov
inc
jge
scas
push
lret
fidivl
stos
icebp
fiadds
sahf
xor
int3
add
in
js
lds
mov
cltd
pop
rcl
pop
sbb
bound
outsl
push
mov
push
pushl
sub
fstps
sti
push
out
pop
inc
add
lret
mov
fsub
daa
and
cmp
pop
dec
xor
fstps
aam
mov
dec
icebp
sub
hlt
bound
aas
and
mov
add
test
add
arpl
ficomps
loop
xchg
jb
lahf
sbb
nop
jne
pusha
and
and
jg
out
mov
lods
sahf
lret
sub
xchg
add
fisubrl
adc
inc
imul
iret
cli
mov
pop
aas
test
cs
imul
aaa
ljmp
mov
in
outsb
push
pop
lret
aaa
out
or
andl
jle
fcmovnu
xchg
pop
jnp
arpl
adc
insl
sbb
test
sarl
enter
xlat
aam
jp
bound
inc
xlat
xchg
ss
test
pop
mov
adc
iret
pop
sbb
cli
test
lcall
push
xchg
int3
and
mov
xor
jns
mov
sub
add
rolb
mov
cmp
sbb
jecxz
pop
imul
and
ja
push
mov
lret
mov
ss
pop
push
inc
inc
xchg
dec
lods
jp
pushf
dec
cld
push
cmp
pop
cwtl
popf
adc
cltd
xchg
push
mov
sbb
push
jp
add
test
sub
pop
mov
cmpsl
cs
lock
pop
mov
data16
inc
fstpt
push
pop
xor
stos
mov
jns
lea
or
icebp
jmp
sbbl
pop
xor
rcll
cmpsl
sbbb
and
insb
scas
movsb
push
inc
dec
xchg
xchg
push
xor
fistpl
mov
cld
dec
push
insl
pop
cli
dec
push
shlb
jle
mov
les
enter
add
fwait
pop
cs
lock
shll
jb
fists
adc
jns
movsl
fsubl
xlat
or
popf
imul
pop
insl
mov
mov
in
xorl
hlt
outsb
test
rolb
mov
js
sub
in
dec
xchg
fcoml
aam
inc
and
ret
lahf
ret
pushf
and
test
fs
jo
test
cs
pushf
push
clc
repnz
sbb
stos
pop
push
mov
xorb
adc
mov
and
out
out
pop
mov
movsl
decl
pop
sub
or
push
mov
es
sahf
pop
xor
int3
jge
xchg
out
gs
push
fisttps
mov
ret
jae
daa
ja
sub
popa
sbb
or
mov
push
or
cmc
xlat
mov
xor
pop
push
loop
insl
clc
xor
jno
or
ret
xchg
push
stos
das
dec
cmpsl
fidivrs
adc
jmp
call
xchg
and
push
lods
jl
dec
inc
mov
sub
imul
cmp
xor
add
adc
fsubl
add
insb
insl
lock
bound
out
pop
jle
pop
cmp
outsl
loope
and
sbb
ds
add
jg
pop
fs
sbb
inc
xor
xchg
adc
jge
pop
dec
jns,pt
sbb
xor
imul
or
sub
cmpsb
lock
and
das
or
out
inc
rcll
out
fisttpll
mov
fcompl
lea
adc
imul
xchg
cmp
andb
leave
cltd
std
mov
scas
lahf
pop
or
sub
inc
test
je
mov
adcb
shr
nop
inc
aaa
loopne
das
fwait
test
fcmovnbe
jg
stos
aas
xchg
pop
lea
stos
addr16
pusha
sbb
dec
jge
add
xor
push
and
cmp
daa
aam
sub
insl
loopne
je
sbb
xchg
popf
sahf
xchg
stc
xor
add
in
xor
arpl
jno
sbb
jns
lds
aam
in
mov
mov
mov
popa
pop
sbb
adc
ret
pop
insl
push
mov
dec
add
das
mov
jmp
aaa
arpl
repnz
test
inc
cmc
push
clc
mov
pop
and
push
push
or
pusha
int3
paddsw
mov
movsl
jle
stc
or
les
push
jnp
dec
xor
mov
scas
rorb
or
push
xor
mov
es
aad
pop
in
cld
stc
pop
mov
xchg
xor
pop
push
lahf
aaa
cmp
inc
sbb
iret
xchg
lock
in
push
fisubl
pop
mov
sbb
and
test
mov
mov
lods
test
fmuls
dec
adc
outsb
cmpsl
mov
xchg
push
mov
pop
pusha
add
inc
addr16
shrb
sbb
inc
push
lods
rolb
ja
xor
mov
add
push
hlt
test
or
sub
mov
out
xchg
mov
movsb
inc
pop
mov
loop
loope
xchg
mov
loope
dec
dec
clc
pop
mov
ja
adc
adc
arpl
fwait
inc
dec
sub
sbb
outsb
sahf
xchg
push
pop
jg
mov
adc
jle
cmpsl
mov
inc
inc
mov
xchg
lods
xlat
aam
jmp
dec
mov
arpl
xchg
call
cwtl
add
fidivl
sub
push
push
test
pop
mov
sub
cmpsl
or
mov
repz
and
clc
test
mov
inc
adc
into
pop
and
xor
xchg
jo
sub
lock
cs
cmp
fistl
xchg
mov
add
mov
das
sub
add
out
mov
in
subb
xor
stos
out
push
sarl
jno
lahf
mov
inc
push
mov
jge
jbe
xor
inc
and
pop
and
mov
add
scas
lods
divl
xor
pop
les
test
pop
out
dec
xor
pop
mov
movsl
je
mov
in
xchg
lds
in
outsl
enter
orl
fdivrl
mov
repnz
sti
inc
int
mov
mov
out
inc
fidivl
or
idivb
sti
rcll
adc
jecxz
rcl
div
dec
sarl
pop
inc
call
push
mov
out
js
push
xchg
cmp
enter
call
push
mov
out
js
push
xchg
cmp
enter
call
push
mov
out
js
imul
fsubs
clc
inc
call
xchg
mov
sbb
jl
pop
rcll
xlat
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
or
mov
mov
sub
mov
lcall
pop
fimull
js
push
sub
pop
inc
push
jp
mov
lcall
aaa
fimull
cmp
push
sub
cmp
push
jp
mov
lcall
ud1
movsb
or
push
pop
int
std
or
pop
inc
loope
xorl
cli
jmp
lds
mov
cltd
mov
pusha
xor
mov
mov
daa
push
aas
cmp
jns
in
cltd
xchg
loop
mov
adc
dec
lock
pop
xchg
arpl
mov
movsl
push
push
dec
mov
sbb
dec
fmuls
xchg
add
pop
mov
mov
or
mov
ljmp
pusha
inc
jmp
sub
imul
call
mov
or
dec
or
xchg
cmc
pop
and
mov
fwait
dec
xchg
mov
lock
push
pushl
negb
mov
js
in
push
cwtl
sbb
cmp
mov
push
jp
mov
mov
mov
js
push
dec
lret
dec
sti
pop
xchg
lods
adc
lret
pop
sahf
dec
leave
dec
inc
scas
aaa
mov
scas
cmp
leave
jp
pop
lea
ss
push
jp
out
jge
pop
jmp
decl
or
add
jle
inc
call
pop
enter
call
stos
cmp
dec
ljmp
mov
mov
pop
enter
call
stos
cmp
dec
ljmp
pop
xchg
sbb
test
cmpsb
mov
cmp
addb
pop
sub
arpl
ja
add
inc
adc
mov
xchg
aaa
lods
stos
aad
out
push
pusha
pop
and
inc
push
data16
cwtl
flds
xlat
mov
pop
mov
and
lea
movsl
push
mov
xor
in
adc
and
out
jmp
movsb
xchg
xchg
imul
std
fstl
cmpl
inc
in
sub
movsl
push
pop
ja
in
hlt
scas
sub
ljmp
into
xchg
mov
mov
stos
in
inc
pop
int
jbe
movsb
jp
js
inc
or
out
scas
fists
aaa
daa
les
mov
jmp
subl
jb
xor
ret
clc
pop
ja
out
loopne
movsl
jno
mov
imul
ljmp
repz
mov
mov
sbb
loopne
dec
daa
shll
and
dec
lcall
cmp
cmpsb
mov
pop
ret
inc
ret
stos
cwtl
add
inc
imul
adc
pop
inc
mov
inc
pop
adc
jmp
or
sti
cmc
fnsave
add
jno
test
jne
rcr
xchg
movsl
or
xor
cmp
lahf
and
inc
sub
mov
and
or
fsubr
push
stos
in
scas
cmpsl
push
roll
aam
lds
jl
push
adc
gs
or
mov
clc
cmpsb
or
mov
into
mov
mov
adc
iret
mov
push
mov
and
pop
mov
out
push
jmp
loop
shlb
fidivrl
xorb
and
test
cwtl
push
xchg
mov
dec
fdivrs
mov
sbb
sahf
aas
fistl
and
jle
test
mov
xor
mov
ret
sarb
daa
inc
pop
add
outsl
push
pop
and
out
mov
iret
imull
push
pop
mov
jge
ret
pop
and
jbe
pop
adc
ret
or
shlb
adc
cmpsb
xchg
dec
cmp
cmp
xchg
mov
sti
xchg
nop
xchg
dec
mov
mov
pop
and
mov
std
mov
ret
scas
std
xor
add
out
mov
icebp
stos
sub
inc
pop
data16
sbb
adc
cli
and
add
scas
ret
mov
cmc
inc
dec
cmp
inc
xor
inc
lods
xchg
mov
jge
fistl
mov
in
xchg
xchg
sbb
arpl
inc
inc
js
mov
sub
or
icebp
mov
adc
mov
or
inc
dec
stos
mov
mov
dec
fdivl
mov
dec
and
fwait
shlb
dec
sub
or
imul
mov
mov
pop
mov
mov
mov
in
orb
sbb
jp
xor
lods
xchg
and
jns
push
repz
outsb
dec
add
adcl
test
aam
stc
out
mov
leave
xchg
sub
mov
or
cmp
adc
adc
xchg
mov
test
aad
cwtl
cli
inc
inc
or
rcl
inc
addr16
mov
jo
xchg
jmp
insl
inc
sbb
lods
mov
ds
test
adcl
ja
adc
jp
sbb
sub
addr16
mov
add
stos
push
nop
or
mov
loope
pusha
inc
ret
icebp
aad
out
inc
mov
pop
dec
das
or
xchg
adcl
addb
xor
shlb
adc
mov
cmp
pop
mov
or
mov
mov
and
sarl
adc
sti
rcrb
cli
cld
or
and
add
mov
dec
inc
xchg
mov
jb
test
inc
pusha
lret
and
push
pop
or
sbb
mov
cmp
xchg
gs
popa
adc
push
adc
mov
movsl
cmp
jae
jle
and
nop
repz
dec
jl
cmp
add
jg
leave
pop
fadd
sbb
push
loopne
sbb
dec
inc
pop
rolb
and
ret
push
test
jmp
cmp
pusha
and
movsb
sub
or
call
aaa
lea
pop
mov
clc
insb
push
lea
dec
clc
popa
pop
xchg
ljmp
mov
out
loope
jmp
sub
xor
or
dec
mov
mov
popf
inc
je
push
mov
add
movl
push
and
cmp
xchg
idivb
push
xchg
cltd
cmpsb
hlt
or
aas
mov
adc
dec
test
imul
rcll
push
xor
test
lret
nop
sub
cmpsb
sahf
adc
mov
push
push
in
mov
sub
and
sbb
add
ja
shr
cmpsl
jmp
xlat
fbstp
adc
mov
sbb
rcll
lock
mov
call
adc
stos
fdivrs
insl
and
loopne
mov
sub
lods
xor
mov
inc
nop
push
mov
or
hlt
mov
fs
pop
insl
insb
push
dec
adc
dec
sbb
in
into
jmp
dec
push
mov
in
ljmp
cmc
sti
lcall
clc
mov
push
xorl
cmp
lods
ficoms
cwtl
stos
xlat
push
mov
in
stos
idiv
mov
jbe
and
shlb
sub
mov
lret
cld
lds
inc
stos
sub
mov
pop
popf
jmp
icebp
icebp
outsl
dec
sub
aas
or
into
dec
inc
lock
daa
sbb
add
daa
xchg
imul
jge
mov
sahf
call
pop
xor
or
int
pop
shrb
sub
das
mov
push
fcoms
sub
outsb
mov
out
push
out
xor
loop
pop
cmp
xchg
dec
lea
arpl
pop
mov
popf
cmp
push
dec
mov
or
sbb
jge
inc
xor
and
mov
cld
js
adc
xor
test
and
cs
cmp
mov
mov
cmc
fiadds
aas
and
gs
ret
incb
pop
sbb
lods
in
mov
sbb
repz
xchg
pushf
movsl
push
cmpsb
leave
out
dec
fs
arpl
jmp
xchg
movsl
int3
and
adc
std
xor
sub
in
dec
jnp
sbb
mov
push
jnp
mov
stos
rclb
mov
inc
stos
sub
out
repz
fwait
lret
mov
dec
ds
shlb
and
inc
jmp
std
adcl
xchg
inc
xor
test
adc
out
sahf
ret
mov
jl
out
into
lock
cmp
add
enter
cmp
adc
or
inc
int
sub
xchg
cwtl
cwtl
push
cmp
or
push
sub
adc
mov
clc
insl
stos
clc
add
ja
xor
jmp
adc
mov
jbe
pop
stc
sub
or
pop
adc
mov
cld
rcl
fiadds
mov
icebp
and
nop
lret
inc
push
jge
rclb
stos
mov
pushf
sarb
xor
mov
jg
js
jle
sbb
jge
mov
and
imul
inc
cmp
and
fbld
cli
mov
jmp
xor
cltd
jg
xor
inc
rorb
mov
inc
mov
and
push
lods
fs
push
out
sub
mov
pop
lret
rorb
insb
mov
ret
jno
repnz
lret
xchg
mov
aad
lret
jp
jne
push
and
push
loope
pusha
lcall
sti
inc
sbb
ljmp
addr16
out
sub
sub
call
mov
shll
pop
into
and
repnz
jne
fisttps
jb
pop
pusha
mov
dec
pop
bnd
mov
loopne
lahf
dec
sub
sbb
lods
cmp
in
fcomip
ss
rcll
mov
shll
sub
pop
cwtl
mov
mov
mov
fldt
arpl
and
xchg
mov
mov
or
insl
cmp
fcompl
dec
mov
xlat
mov
int
fdivl
loopne
ljmp
call
stos
lock
movsl
pop
adc
dec
out
sar
adc
jmp
xor
insl
lea
pop
out
subl
stos
mov
xor
bound
sub
jae
jnp
push
data16
pop
out
pop
into
addl
and
jecxz
addb
into
cmp
cmp
arpl
adc
dec
jne
shrl
inc
cwtl
push
push
add
adc
xchg
jmp
in
fwait
jnp
cld
jge
adc
rcll
mov
mov
les
repz
push
lods
lods
bound
mov
mov
mov
cmc
jb
mov
and
jo
lret
clc
mov
sub
mov
nop
mov
xchg
mov
jl
jo
jmp
xlat
adc
mov
aas
and
xor
movsl
rcrl
xchg
inc
aam
imul
into
pop
mov
xchg
sub
mov
sub
ds
jno
pmulhuw
adc
pushf
mov
outsb
xor
xor
or
mov
adc
das
rorl
mov
and
jle
or
push
lea
xorl
push
mov
test
jb
sbb
and
jns
fcmovbe
das
pop
push
into
inc
xchg
push
push
push
enter
add
out
dec
cld
scas
cmp
ja,pn
jl
mov
sbb
insb
and
push
push
or
aas
push
movsl
adc
cmpsb
jge
flds
xor
pop
fisubrl
arpl
mov
push
sahf
mov
loop
ss
add
in
cmp
push
in
mov
adc
movsb
pop
push
fimuls
jb
xchg
out
aas
and
cwtl
movsl
sbb
out
mov
cld
imul
mov
in
add
sbb
pop
lods
call
lock
xor
inc
jge
sub
ret
adc
jg
push
dec
cmp
enter
mov
ret
sub
fidivrs
mov
jo
fmuls
bound
aaa
or
hlt
xchg
movsl
ss
fsts
lods
stos
pusha
movaps
jbe
cmpsl
enter
mov
stos
xor
out
jae
or
xchg
add
es
ss
loop
inc
and
jns
mov
push
adc
adc
jnp
rolb
add
sbb
inc
popa
mov
push
xor
jns
cs
shlb
mov
fnstsw
fbstp
cmp
cmp
mov
mov
sub
into
xchg
cltd
inc
cmp
mov
pop
adc
mov
les
popf
hlt
in
fwait
or
jl
mov
dec
push
loop
repnz
out
js
jl
int3
lahf
std
inc
out
out
mov
pop
and
int3
xchg
mov
loope
push
js
adcl
pop
jp
fnstsw
sub
or
outsl
xor
dec
jnp
add
je
aaa
stos
xor
imul
ljmp
xchg
lods
push
lret
mov
cmpsb
cmp
mov
stos
stos
ret
sbb
insl
fwait
cmp
mov
je
pop
fldt
subl
jp
adcl
pop
sub
sbb
mov
xlat
inc
icebp
dec
in
push
mov
negb
jecxz
pop
filds
mov
repnz
jno
jo
lds
nop
mov
ret
inc
push
jle
add
and
mov
or
pusha
or
jo
dec
mov
mov
pop
xchg
inc
xor
mov
mov
mov
mov
bnd
add
das
not
xchg
push
adc
aas
xor
jbe
dec
test
mov
or
cmp
pop
or
sarb
lock
daa
sbb
push
clc
cmp
push
push
loopne
lds
or
mov
sub
dec
insl
mov
stos
push
adc
push
mov
andl
daa
cmp
cwtl
push
sbb
xchg
aam
mov
insb
jge
pushf
xchg
stos
push
and
movsb
inc
mov
mov
cli
jmp
jae
and
int3
mov
lcall
imul
xor
mov
xor
push
dec
test
cmp
cmp
push
jnp
xchg
or
jno
imul
lds
mov
adc
rolb
imul
xchg
addl
push
jl
aad
aad
icebp
jmp
inc
jo
jmp
scas
pop
adc
push
mov
mov
insl
ja
clc
and
test
sarb
push
fdivrl
gs
andb
hlt
push
mov
pop
pop
cmpsb
or
cmp
std
dec
jbe
push
insl
incl
cwtl
lahf
add
mov
add
cmp
pop
cs
cmc
lods
lret
lds
pop
out
or
fwait
mov
mov
pop
lds
push
pusha
push
enter
adc
push
filds
sahf
add
in
adc
mov
scas
inc
or
cmp
dec
bswap
test
cmp
cmp
ja
dec
cmc
sti
mov
xor
add
mov
gs
adc
push
pop
pop
dec
outsb
dec
mov
or
jmp
into
aaa
jno
js
mov
sub
pop
cmp
insb
xchg
sub
cmp
mov
jnp
ret
add
jmp
hlt
imul
sti
cmpsb
je
cld
pop
jns
cmp
lret
insb
mov
adc
push
add
push
fnstsw
repz
es
notl
xchg
mov
sub
xchg
push
cmc
arpl
xchg
push
jne
ss
inc
data16
lret
mov
adc
repz
fsubs
aaa
sub
xchg
dec
rcll
pop
cltd
xchg
push
xchg
mov
loop
mov
adc
push
sbb
cmpsb
sti
jne
cli
dec
sub
jecxz
and
scas
pop
test
imul
mov
and
dec
push
outsl
shll
lock
cmp
imul
xchg
xchg
lods
sbb
ds
adc
xchg
pushf
leave
cmp
ljmp
inc
pop
movsb
xor
data16
out
add
inc
mov
mov
and
ret
dec
ret
inc
loop
or
inc
add
repnz
insl
rcl
orb
cmp
in
fisttpll
int3
outsb
test
mov
mov
push
jnp
add
jne
and
cmp
std
xor
jb
insb
jns
out
insb
inc
fmull
out
push
in
and
fs
adc
sbb
or
jo
ret
and
adc
je
sti
psubusw
mov
cmp
pop
push
bound
imul
pop
cmp
jns
jns
or
adc
and
in
movsl
daa
adc
pop
insl
dec
add
mov
outsl
xchg
mov
cmc
int3
push
cmp
add
jns
sbb
xchg
cmpsl
adc
push
mov
fcoml
popf
pop
rol
and
jmp
call
lea
adc
sub
dec
sbb
enter
mov
cltd
in
xchg
jp
in
gs
fcoms
arpl
inc
or
jae
shr
pushf
mov
cmpsl
xlat
xor
arpl
mov
inc
pop
push
add
roll
loopne
push
pushf
cmp
pop
addl
fs
mov
lret
imul
dec
sar
nop
sahf
pop
out
cs
sbb
fcmovnb
clc
pusha
adc
or
jnp
sbb
cmp
xchg
loope
repnz
mov
cmp
decl
or
mov
pushl
nop
or
push
cmpsl
std
loopne
out
jno
das
fidivrl
xchg
dec
insb
jbe
ret
enter
jne
fists
lds
sub
test
push
mov
or
push
jl
int
add
je
dec
adcb
popf
mov
enter
outsl
pop
shrd
push
xchg
loop
cmp
adc
mov
mov
lahf
sbb
out
mov
les
repz
lahf
push
cmp
shlb
pop
cmp
int
lret
mov
pushf
pusha
jns
lret
lock
adc
push
in
out
or
test
lcall
icebp
sub
mov
fisttps
push
jne
mov
xor
sub
aaa
cwtl
mov
sbb
test
cmp
push
xor
es
adc
jmp
in
push
mov
pop
add
imul
lret
dec
lret
lahf
rclb
sub
push
xchg
or
push
in
sbb
and
adc
or
push
or
xchg
mov
es
out
aad
clc
repz
je
iret
inc
push
sbb
and
sbb
push
mov
fs
icebp
fcomi
pop
pop
xchg
push
mov
lods
lods
jmp
pushf
xchg
xor
add
or
sahf
aad
push
xor
sbb
call
sbb
and
outsb
jne
jg
aam
adc
mov
rorl
movsl
test
fnstcw
pop
inc
fidivs
daa
inc
mov
mov
icebp
test
inc
xchg
aaa
stos
stc
inc
lret
lcall
lods
push
mov
negb
iret
lods
mov
mov
out
xchg
daa
shrb
in
movsl
mov
es
lock
into
nop
push
insl
mov
mov
outsl
push
dec
out
sbbb
arpl
jp
add
lds
xchg
fdivrl
stc
ljmp
insb
daa
push
cwtl
jns
es
dec
sbb
push
cmp
repnz
mov
jmp
icebp
js
adc
adc
cmp
fs
add
dec
pop
and
jns,pn
jb
rcr
out
xor
sbb
inc
jmp
and
stos
outsl
pop
addr16
jecxz
lock
add
xchg
cli
sahf
mov
fsubr
test
out
lret
ja
mov
or
push
jo
pop
jbe
int3
lahf
sbb
jnp
daa
insb
or
jg
rdpmc
mov
jp
cmp
popf
aaa
loop
enter
roll
scas
push
mov
out
jnp
add
push
jnp
jp
mov
xor
lret
test
inc
or
inc
mov
sbb
cmp
jns
cltd
mov
mov
jmp
fldl
add
adc
or
std
aas
je
dec
lock
jno
xchg
lahf
mov
dec
xor
cli
sbb
push
out
xor
sub
sbb
cs
stc
gs
std
push
inc
xor
cmp
aam
mov
pop
cmp
or
mov
push
repz
dec
jne
cmpsl
dec
cmpsl
xchg
xchg
push
inc
fisubrs
xlat
and
loop
ret
js
ja
dec
icebp
cmp
loop
jns
mov
jnp
in
mov
cs
outsb
cmp
or
xor
loopne
xchg
das
les
sub
insb
movsl
xor
lods
mov
subb
dec
mov
dec
fistl
or
inc
faddl
pop
push
or
sbb
fwait
or
outsl
and
add
jg
push
insb
fldenv
sbbl
inc
mov
jbe
test
aas
jle
mov
and
in
mov
mov
insb
inc
or
daa
inc
lcall
push
sub
aam
lds
das
push
cmc
out
daa
test
push
mov
push
pusha
test
mov
push
test
jnp
imul
imull
stos
mov
out
mov
mov
cmpl
inc
add
push
pop
cltd
lret
mov
or
insb
mov
adc
rcl
and
shll
mov
and
mov
aas
mov
aaa
xchg
lods
mov
ret
bound
mov
pop
stc
xchg
push
loopne
cmpsl
mov
test
iret
out
cld
shlb
test
shrl
dec
and
mov
stc
sbb
mov
mov
aas
fildl
sub
and
mov
adc
xor
pop
mov
neg
inc
or
imul
pop
xchg
dec
jg
mov
nop
push
mov
jns
addr16
in
mov
sbb
fcomps
into
orl
es
adc
push
dec
dec
xchg
sbb
arpl
mov
pop
mov
aaa
imul
dec
inc
rcrl
ficoml
mov
and
ret
jmp
pusha
push
xlat
or
push
inc
and
ret
adc
xchg
mov
mov
aaa
jp
pop
outsl
bound
inc
xor
xor
cmp
ret
inc
fldenv
repz
mov
xor
fmuls
ret
test
fcomps
push
jp
mov
lcall
pop
fimull
js
push
sub
pop
enter
call
stos
cmp
dec
ljmp
shrb
cmp
push
jp
mov
lcall
pop
fimull
pop
cli
push
sub
pop
enter
call
add
mov
mov
xchg
pop
and
xor
decb
je
push
inc
adc
leave
xchg
xchg
movsl
cmpsl
mov
xlat
hlt
out
testl
xor
inc
inc
push
push
fs
test
mov
les
hlt
testl
xor
inc
inc
push
push
fs
test
rcl
cmpsl
xchg
mov
test
pop
push
addr16
lahf
in
inc
cld
add
outsb
in
enter
mov
jg
push
push
cltd
lahf
push
jnp
mov
inc
pop
shr
outsl
add
repz
cmp
cmp
sub
in
out
cmpsb
addl
push
xor
out
xchg
add
test
les
repnz
jp
adc
bound
inc
adc
add
fsubs
in
push
test
push
push
and
xchg
hlt
in
idiv
jae
inc
ja
and
fs
loope
hlt
pop
mov
xchg
xchg
mov
or
adcb
aaa
mov
movsb
inc
pushf
lahf
pushf
outsl
mov
jnp
inc
rcrl
mov
in
cmc
loop
pop
adc
and
xor
inc
inc
push
push
fs
test
mov
aam
in
hlt
sahf
jo
push
push
dec
daa
jp
pop
and
and
adc
in
es
lret
ret
mov
cwtl
mov
sahf
cmpb
inc
jl
and
xor
fs
or
int3
stc
out
fdiv
rcl
vphadduwd
cmp
push
adc
add
addr16
test
mov
aam
in
hlt
testl
xor
inc
inc
push
push
fs
test
mov
aam
in
hlt
testl
data16
aaa
xor
push
call
int
daa
out
rol
sbb
sbbl
loop
arpl
gs
cmc
rcrb
xchg
push
stos
in
data16
xchg
popa
mov
lahf
jno
rclb
test
in
pusha
orb
out
cld
mov
fwait
daa
mov
mov
shl
frstor
add
sub
mov
test
push
jge
lahf
inc
mov
inc
mov
test
sub
push
mov
outsb
stc
xchg
mov
jle
or
fdiv
test
in
sub
stos
mov
mov
adc
cli
add
int3
mov
jg
out
sub
push
ss
imul
loop
dec
test
ljmp
lahf
in
sub
fadd
popa
sub
in
mov
in
or
sbb
xchg
jo
mov
loop
pop
xor
pop
add
add
cltd
inc
pop
adc
in
push
jb
jp
pop
and
testl
add
leave
ljmp
pop
dec
adc
xchg
mov
ret
adc
jmp
into
pushf
das
call
fs
hlt
pop
fidivrl
in
mov
mov
addb
xorl
fistps
inc
inc
inc
das
adc
and
je
inc
fmulp
mov
fsubrs
jae
xchg
jnp
or
rcll
sti
fadd
cltd
pop
push
lods
popf
lret
dec
aaa
ficompl
jbe
mov
xchg
xchg
fisubs
mov
xlat
sbb
pusha
cmp
loop
pop
fsubl
mov
add
adc
push
mov
std
insb
das
ficoms
push
aam
out
push
shlb
fldl
jl
js
pushf
sti
dec
adcl
push
imul
dec
mov
xor
mov
in
push
repz
mov
sub
pop
loop
add
pusha
or
hlt
pop
xchg
mov
in
pop
fld
gs
cmp
jp
jl
das
pusha
dec
ret
mov
lods
sti
sbb
lret
mov
mov
lcall
out
push
adc
push
inc
pop
sbb
cmpsb
ds
rcrl
mov
fcom
push
pop
fimull
adc
mov
pusha
mov
inc
jne
cmp
push
in
sub
sti
inc
cmpsl
icebp
and
int3
xor
shrb
std
gs
jno
jb
add
cmpsl
call
fdivrl
cmc
rcll
aam
ja
add
loopne
cmp
insb
imul
mov
xchg
mov
frstor
mov
or
mov
int
shr
xchg
movsb
mov
lfs
and
in
outsb
xor
cmp
les
mov
adc
or
pop
test
sbbb
xchg
cmpl
jae
cmc
out
adc
jecxz
frstor
lcall
outsl
mov
xor
jns
jg
cbtw
cltd
mov
test
add
lcall
xchg
dec
sub
fistl
adc
inc
shrl
int
in
add
rcrl
cmp
std
jo
popa
mov
mov
mov
dec
dec
cmp
cmp
or
lea
in
in
inc
mov
popa
dec
dec
xor
adc
dec
pop
arpl
push
cld
jae
push
xor
xchg
dec
testb
jns
cmp
hlt
mov
xor
xor
das
sbb
push
sbb
lret
decl
mov
mov
jg
cmpsb
arpl
mov
mov
mov
inc
xor
dec
pop
pop
fists
and
lods
xchg
pop
sti
lret
and
mov
xchg
xchg
fiadds
loopne
sbb
sub
cmp
imul
pop
arpl
jmp
or
aam
rclb
outsb
lret
js
fwait
xchg
fdivrp
sbb
sahf
xor
xchg
in
mov
lock
add
fnstenv
mov
adcl
fnstsw
loope
jmp
scas
jmp
mov
add
xchg
lods
dec
into
jp
fs
insb
dec
add
pop
cmp
mov
in
fs
fcmove
sti
shlb
and
popf
jb
lods
movsb
js
arpl
movsl
xlat
cmp
inc
mov
or
shrb
and
cmc
inc
ljmp
repz
pushf
lret
aam
xor
sub
jbe
or
hlt
hlt
sbb
sub
sbb
mov
mov
dec
scas
rol
out
sbb
les
fisubrs
in
push
mov
jge
pop
adc
or
test
outsb
pop
hlt
inc
push
mov
jae
outsb
or
int3
add
jnp
and
mov
xchg
sbb
cwtl
insl
lds
ss
lds
mov
int
xchg
add
fs
jnp
repz
outsb
xchg
adc
xchg
sub
or
jne
adc
pop
pop
clc
out
shrl
inc
inc
jecxz
pop
inc
gs
ss
scas
dec
shll
stos
roll
mov
cmp
test
aaa
sbbb
cmp
ffree
push
adc
loope
inc
out
push
frstor
mov
xor
push
add
pusha
mov
and
js
repnz
inc
and
call
insb
dec
jmp
repz
adc
or
pushl
stc
loopne
dec
or
or
fxam
pusha
fidivs
pusha
adc
xlat
out
or
mov
fyl2xp1
push
jbe
jp
movsb
mov
mov
jo
mul
into
push
adc
dec
adc
or
imul
data16
adc
mov
sbb
cli
sbbl
xchg
ds
testb
lea
cmpsl
pop
add
cmp
adc
scas
outsw
ds
and
xor
inc
loope
pop
mov
repz
cs
imul
enter
mov
mov
push
pop
out
ret
cld
sub
js
pop
pop
loopne
jmp
call
into
or
movsb
mov
cmp
ja
xchg
mov
mov
dec
fisubs
notl
idiv
scas
sub
outsl
jns
pop
shll
adc
dec
push
repnz
adc
push
aad
xchg
push
pop
xor
dec
inc
push
sbb
or
mov
jns
jg
inc
jo
daa
cmp
repz
fnsave
sarb
fucom
jg
in
xor
xor
sbb
ret
mov
cmpsl
lret
jecxz
add
or
and
adc
loopne
dec
pop
test
mov
pop
sub
mov
mov
mov
or
add
mov
std
gs
cld
mov
mul
xchg
bound
inc
test
and
push
pop
jnp
das
or
pop
pop
je
ja
mov
mov
lret
add
xor
mov
jne
scas
test
push
sbb
cmpsl
shll
out
rolb
movl
stc
data16
pop
xor
outsl
and
dec
sub
test
into
pop
ret
hlt
sbb
cltd
and
rclb
dec
stos
lcall
in
or
int3
jo
and
lahf
xor
add
stc
sub
sbbb
sub
sti
test
inc
mov
sbb
sbb
pop
adc
lahf
mov
lret
push
ljmp
daa
mov
add
jge
test
int3
ds
mov
push
mov
push
ret
shr
mov
pushf
jo
add
clc
hlt
and
lds
in
xchg
add
fst
cmp
lret
into
rol
call
fisubrl
rol
dec
adc
loop
pop
cmp
push
sbb
push
ss
add
inc
daa
jno
jmp
mov
push
and
or
fisubl
jg
xor
xorb
test
push
ds
aaa
sti
fisubrl
decb
and
sahf
mov
mov
popa
sbb
sub
dec
sarb
and
rorl
cltd
imul
out
adc
sbb
mov
push
sbb
jne
mov
jmp
ljmp
xchg
inc
push
aas
jnp
fdivrs
rcrl
loopne
fstpt
std
leave
in
lret
ja
insl
inc
andl
sbb
mov
ds
and
call
mov
loope
push
stos
imul
sub
mov
movsb
js
fdivrp
jmp
push
roll
or
mov
icebp
lds
mov
rcl
push
jecxz
int3
mov
cltd
jnp
arpl
jae
lock
inc
loope
dec
cmpsl
jp
cli
scas
mov
xor
mov
or
lods
xor
out
and
lret
call
xchg
sbb
sbb
cli
fldt
add
jnp
mov
fistl
add
or
xchg
call
testb
mov
rcrb
or
repnz
popf
jg
and
dec
push
lret
inc
cltd
mov
jg
cwtl
hlt
push
xchg
jecxz
dec
inc
mov
mov
mov
pop
mov
sti
jae
ret
cmpsb
sbb
scas
pop
xlat
movsl
adc
jge
and
adc
push
push
movsl
loopne
adc
mov
sti
cmp
int3
daa
hlt
sub
and
dec
sub
rcr
mov
cmpl
rcll
mov
sbb
call
mov
xchg
out
shl
xchg
inc
inc
cmp
test
cmp
bound
add
lahf
push
inc
jp
jae
mov
pop
idivl
aad
dec
add
push
bound
mov
out
rcr
adc
sti
dec
mov
ret
mov
loopne
pop
mov
sub
cmpsb
and
cmp
in
push
test
je
or
fimull
loope
lock
fbld
ret
cmp
lahf
mov
sbb
jle
push
adc
sbb
xor
dec
mov
test
pop
xor
orl
push
adc
cltd
fsubrl
push
push
ljmp
inc
addr16
popf
push
inc
or
cmc
sbb
mov
fdivrs
repnz
and
xchg
and
or
xchg
pop
ljmp
clc
push
jp
pusha
cmp
je
inc
mov
sub
mov
call
dec
xchg
sbb
enter
jecxz
inc
or
dec
pop
imul
cmpsl
xchg
shlb
cmp
cmp
push
pop
out
jo
xor
scas
jbe
js
inc
bound
push
shrl
imul
or
mov
pop
xor
sti
jnp
arpl
mov
xchg
out
pop
movsb
imul
mov
cmc
jecxz
jecxz
mov
inc
out
xor
or
test
xchg
and
ss
es
test
sarl
adc
xchg
add
push
jbe
push
out
int3
mov
dec
dec
pop
arpl
inc
or
adc
jecxz
sbb
mov
and
sahf
mov
stos
dec
and
add
roll
pop
aad
push
loopne
test
lret
mov
add
addr16
fistpll
inc
xlat
pop
negl
bnd
ss
pop
js
mov
sar
dec
insb
imul
lcall
push
inc
and
jmp
lahf
cld
inc
push
mov
xchg
pusha
xlat
push
int
jae
ja
jmp
cmp
adc
jns
adc
mov
mov
push
ret
lods
repnz
mov
sti
pop
je
inc
pandn
sbb
fiaddl
cli
and
mov
mov
ret
jo
scas
ret
icebp
and
and
movsb
std
mov
call
clc
push
push
pop
ret
imul
sbb
xor
addr16
fisttps
ljmp
inc
mov
push
lahf
shl
inc
iret
pushf
adc
jmp
rorl
in
scas
repnz
ds
mov
xor
test
pop
cmpsb
sahf
outsl
scas
mov
mov
push
adc
arpl
enter
loope
jno,pt
sub
imul
xor
jb
lods
in
jmp
mov
lret
data16
or
pop
das
dec
jbe
pushf
popa
mov
jns
sub
in
dec
xor
dec
mov
pop
mov
aad
inc
aas
adc
inc
int3
shl
rcrb
fcoml
ss
nop
mov
inc
add
ret
jg
xchg
loopne
js
and
add
jp
dec
pusha
jle
in
xor
mov
mov
push
cmpb
pop
cwtl
xor
imul
int3
pop
xor
int3
xchg
sbb
imull
out
cwtl
std
jne
jge
xor
add
js
jg
outsl
rcll
jno
stos
mov
pop
sbb
repz
faddp
add
jo
xchg
mov
test
or
inc
andb
icebp
sbbl
or
cmpsl
mov
mov
in
or
movsl
pop
mov
lahf
movsb
fiadds
scas
inc
sub
mov
jp
movb
xchg
lods
adc
xchg
int
adc
push
push
sahf
mov
or
inc
inc
mov
fisubrs
jp
xor
pop
aad
sbb
in
and
cmp
jecxz
out
mov
gs
jo
test
xchg
jnp
cmp
dec
mov
jnp
push
call
mov
dec
dec
cmp
aas
sub
add
test
xor
testl
pop
loopne
aas
inc
aaa
xor
dec
dec
repz
into
inc
mov
std
jmp
mov
ficoms
mov
or
lret
mov
sti
mov
cmpsb
iret
loop
mul
xor
mov
or
rclb
ja
cwtl
adc
insl
or
negb
shl
clc
cltd
and
pop
sbb
loopne
push
inc
jmp
push
mov
mov
cs
mov
loope
movsb
ljmp
pop
mov
pop
cmc
xchg
dec
fdivl
dec
sub
inc
lods
rcrb
shll
fidivrs
jle
scas
nop
nop
jp
inc
jb
pop
mov
mov
repz
mov
inc
dec
es
ljmp
xchg
mov
negl
adc
xor
fst
movsl
pop
test
lret
aas
fldenv
sbb
and
sti
jb
out
in
dec
int3
inc
or
dec
iret
jp
cmpsl
sub
test
pop
mov
xchg
inc
jnp
lret
xlat
jge
inc
or
stos
fcomps
and
leave
add
call
fisttpl
arpl
sub
mov
mov
mov
movsl
jns
inc
std
push
adc
or
nop
cmp
pop
mov
mov
fcomps
inc
stc
and
ss
sbb
lret
pop
jp
scas
xor
mov
clc
mov
sbb
jge
mov
outsl
mov
leave
mov
cmc
add
bound
or
sti
stc
mov
js
insl
mov
sub
popa
pop
adc
imull
sti
cmp
fcompl
xor
xchg
pushf
scas
mov
jb
xchg
mov
arpl
add
push
adc
xchg
jnp
sbb
cmp
inc
icebp
jo
ds
push
and
sbb
sbb
xlat
inc
mov
ds
loop
in
std
iret
lahf
mov
sbb
pop
les
jg
adc
mov
push
ss
incb
loopne,pn
shrb
xlat
lds
pop
mov
rol
cltd
sbb
jno
in
dec
stos
data16
sbb
dec
xor
sub
mov
cld
shll
xor
lcall
push
adc
inc
jns
lock
repnz
adc
cmp
out
and
push
dec
test
mov
xor
mov
xorb
lahf
fimull
mov
adc
add
aad
mov
xchg
lea
fsubs
or
std
scas
fidivl
mov
pusha
pop
mov
in
xor
clc
cmc
loop
adc
add
jecxz
aam
loopne
lds
data16
sbb
mov
xlat
add
sub
add
lods
push
int
ljmp
sbb
shl
inc
jge
cltd
insl
mov
sub
push
es
jo
out
out
push
addr16
lock
test
and
and
cli
fsubrl
mov
mov
sbb
stos
in
jb,pt
shlb
mov
mov
call
sub
int3
mov
and
or
mov
bound
mov
xor
rcrb
or
aam
mov
jae
push
dec
in
rcrl
pop
dec
mov
mov
inc
int3
or
dec
xor
mov
jnp
jmp
ja
nop
xchg
push
sahf
mov
sbb
jae
mov
scas
ficoml
cmp
shlb
jbe
cmpl
fcompl
sub
jnp
and
popa
mov
sub
int
test
fstpl
xor
jle
add
push
in
imul
mov
mov
insb
fsubs
data16
xchg
sub
xchg
xchg
mov
xchg
ret
xchg
insb
inc
push
shlb
sbb
movsl
jmp
loope
push
out
stos
cmp
mov
push
push
cmp
out
dec
enter
push
data16
or
mov
repnz
cmc
test
sub
inc
arpl
rclb
mov
ja
insb
pop
sub
addr16
adc
add
inc
pop
sbb
pop
pop
push
jb
lods
sub
mov
jp
cwtl
fidivrs
stos
stos
or
fcoms
fs
xor
xor
push
xorl
lods
mov
push
int
das
lock
mov
fldl
test
dec
push
stc
mulb
imul
sub
xor
xor
pcmpgtd
mov
pop
std
push
dec
mov
subl
push
test
sub
stc
int3
shr
lods
push
sbb
popa
push
pop
ss
rcrb
jl
fwait
mov
pop
jns
and
es
xchg
inc
call
xchg
jle
pavgb
jle
shll
shrd
pop
dec
xchg
dec
cmpsb
nop
dec
cs
cmpsl
cmc
test
fstp
add
icebp
push
xor
test
push
add
push
ret
add
inc
sub
push
sub
imul
or
jno
xchg
pushf
pop
xor
sbb
xchg
das
xchg
fmul
adc
into
cmpsb
add
xchg
dec
and
imul
or
cmp
icebp
scas
and
push
or
jle
mov
adc
hlt
jl
sti
rolb
imul
inc
scas
cmp
dec
mov
push
push
icebp
add
sti
scas
in
sbb
mov
lods
outsl
jg
stos
sahf
cmp
adc
cmp
sbb
push
and
sbb
pop
xchg
rolb
add
icebp
ljmp
outsl
lea
pop
inc
xchg
push
scas
pop
mov
sti
test
pop
cmp
std
add
imul
mov
pop
pop
cmp
outsb
je
stos
xor
out
out
ret
test
lcall
cmpsl
out
pop
lods
fldenv
dec
sub
orb
ljmp
sbb
movsb
mov
mov
jns
test
je
gs
int3
inc
stc
mov
das
test
out
cmpsl
inc
jo
stos
roll
lret
movsb
mov
sub
pushf
adc
cmp
lea
mov
inc
add
mov
xchg
jg
jge
imul
and
pop
mov
hlt
pop
dec
inc
push
jmp
enter
mov
push
repz
arpl
xor
sub
out
loop
mov
jnp
les
cltd
dec
push
inc
data16
xor
mov
fsubs
adc
mov
popa
or
into
arpl
lds
sbb
mov
ds
push
mov
mov
pop
mov
out
int3
in
sbb
mov
mov
inc
aas
ss
add
mov
imul
imul
ljmp
arpl
loope
shrl
sahf
sti
repnz
sub
lret
and
insl
cli
push
mov
or
inc
mov
std
dec
inc
pop
sbb
pop
sbb
lods
mov
inc
push
sbb
push
push
jo
lock
aad
mov
ret
mov
cltd
insl
sbb
jo
daa
in
mov
aam
push
xchg
or
lret
pop
adc
vmovss
adc
xor
xchg
setns
out
repnz
lahf
loopne
faddl
das
mov
lods
dec
mov
in
stos
jno
les
divb
loopne
hlt
push
inc
xorb
shl
mov
pop
lret
push
xor
push
movsb
shlb
mov
out
repz
jno
inc
cltd
loope
xchg
dec
jg
orb
xchg
lcall
jge
sti
loopne
mov
mov
jnp
sub
mov
es
cld
or
lea
xor
inc
inc
push
push
fs
test
mov
aam
in
hlt
testl
xor
inc
inc
push
push
fs
test
mov
aam
in
hlt
testl
xor
inc
inc
push
push
fs
test
mov
aam
in
cmc
testl
inc
push
push
fs
test
mov
mov
pop
sub
sbb
or
in
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
addr16
push
or
jae
js
jl
or
aad
pop
add
or
add
add
or
push
add
add
inc
add
or
add
add
add
add
add
test
push
add
add
add
add
add
add
add
add
movsb
add
sub
mov
or
push
add
add
add
add
add
sbb
cltd
add
add
rolb
add
add
add
add
add
add
add
add
add
lahf
add
add
add
fiaddl
pop
add
add
add
jb
jb
mov
ret
add
data16
add
fiaddl
movsb
add
add
add
add
add
add
dec
add
adc
xor
mov
add
add
add
add
add
add
add
jb
loopne
daa
add
add
add
lret
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
movsb
add
add
sbb
xchg
mov
sub
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
sbb
adc
call
add
sub
mov
lcall
add
add
sbb
clc
push
push
add
add
pop
add
jb
jb
call
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
mov
add
add
add
sbb
pop
add
add
add
add
add
add
hlt
add
add
sbb
and
or
stos
add
lahf
add
add
add
icebp
add
jb
mov
add
ret
add
add
add
add
in
add
add
cmpsl
add
push
add
and
sub
add
add
add
add
add
mov
add
add
add
add
push
add
sbb
ja
sub
test
mov
movsl
add
add
sbb
mov
and
add
add
add
adc
mov
xchg
in
add
add
add
mov
add
add
add
push
add
add
add
add
inc
add
lcall
add
add
add
xor
push
add
add
adc
add
add
add
sbb
and
add
jb
call
add
add
add
add
add
add
add
add
and
push
add
sbb
add
xor
pushf
add
add
add
lahf
add
add
add
add
add
add
add
add
add
push
add
add
add
xchg
add
add
add
pop
add
add
jb
sbb
add
and
test
addb
add
add
add
add
xlat
call
cmp
fcomp
push
sbb
push
push
pop
add
pop
filds
push
mov
push
or
or
lock
ja
push
jl
mov
mov
cltd
stc
pushf
push
aaa
mov
jecxz
and
mov
mov
and
arpl
stos
inc
int
push
mov
xor
inc
aad
add
fidivrl
sbb
outsl
push
dec
pop
mov
and
pop
rorb
pop
adc
xor
pop
mov
loop
cmp
push
incl
repnz
dec
orl
dec
pop
call
jnp
data16
xor
sbb
xchg
je
push
stc
adc
mov
rcll
aam
jbe
push
lret
scas
popa
mov
cmp
ss
fcmovnbe
lods
adc
out
sub
loop
movl
xor
adc
mov
cmp
cld
lea
iret
sbb
lahf
loop
xchg
add
les
push
int3
sub
insb
xor
dec
sub
cmp
push
mov
enter
and
sbb
pop
addr16
dec
sub
aaa
or
xor
fistpll
fs
mov
loop
dec
push
pop
xchg
xchg
adc
cmp
sub
inc
jo
mov
cmc
adc
push
xchg
orb
mov
ret
push
fiaddl
out
test
mov
ret
dec
cmp
xchg
and
loope
rep
cmpsb
in
lahf
push
aad
or
loope
mov
jle,pn
icebp
int3
test
aas
lea
int
ss
lret
pop
jle
call
jb
ja
iret
lods
in
xlat
dec
orl
and
pop
stos
bnd
cmp
push
popl
push
lds
adc
mov
inc
add
mov
clc
test
iret
mov
mov
mov
mov
dec
push
cltd
mov
adcl
jo
adc
imul
or
jmp
fmuls
ret
sub
lock
inc
push
adc
jl
xchg
cmpsb
mov
out
les
lret
dec
dec
ret
dec
push
pop
lahf
mov
jns
pop
mov
xor
mov
gs
loop
mov
icebp
adcb
jbe
jbe
sbbl
pop
movl
daa
shll
dec
leave
dec
xor
out
subl
mov
sub
jnp
es
aas
adc
jmp
ljmp
or
icebp
cmc
mov
lcall
movsb
pop
dec
xor
ret
stc
mov
mov
jmp
and
cmc
fstl
cli
xor
jns
shl
leave
xchg
and
dec
sbb
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
