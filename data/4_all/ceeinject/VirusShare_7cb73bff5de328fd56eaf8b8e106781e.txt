loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
xor
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jecxz
test
data16
lcall
adc
int
sub
jns
sub
mov
cmpsb
scas
push
test
data16
push
jmp
or
sub
jge
lret
out
mov
dec
cmpsb
mov
in
xchg
adc
es
sarl
cmp
and
jne
jge
push
lds
sub
and
leave
adc
add
sbb
out
pop
sarl
shlb
mov
inc
in
mov
add
lea
leave
add
lock
cmp
or
lds
jmp
ds
xchg
mov
call
jge
xlat
dec
div
sbb
bound
inc
jns
add
add
ss
leave
stos
or
or
cld
cmpl
sbb
ficompl
push
mov
test
neg
fidivl
cmc
xchg
or
or
sar
push
sub
test
mov
pop
cmc
cmp
daa
movb
mov
pop
dec
int3
jns
test
jmpw
push
fnstenv
shlb
hlt
adc
popa
stos
jno
pop
scas
push
xchg
lret
sub
sbb
or
inc
movsb
popa
dec
xchg
sub
adc
ret
mov
add
xchg
mov
pop
movsb
jl
sbb
sbb
shlb
mov
sbbl
es
sub
sbb
or
jns
imul
cltd
jbe
data16
push
jmp
es
sub
sbb
or
jns
imul
rorb
mov
jno
pcmpgtd
pop
mov
lds
cmp
ljmp
fildll
fmul
add
xchg
sub
iret
addb
clc
jecxz
cmpsb
fcom
test
sub
cld
sbb
add
cmp
data16
push
loopne
outsl
repnz
mov
test
bound
xorl
jno
and
cmp
data16
jle
cmp
mov
fs
incl
mov
mov
sub
aam
scas
mov
push
and
lds
popa
push
movsl
or
mov
add
dec
icebp
xchg
xchg
idivl
sub
and
or
pop
jne
jne
repnz
ljmp
and
stos
test
cli
jge
lods
aas
inc
ret
shrb
xchg
mov
jg
xchg
andb
pop
xor
add
jnp
in
lock
push
in
adc
or
or
test
sbb
mov
mov
push
negb
je
pop
xchg
sbb
lds
dec
inc
cmc
lret
lds
or
pop
aam
or
scas
jmp
nop
and
inc
sahf
dec
dec
inc
xchg
mov
sub
xor
mov
jo
sarb
lock
add
xchg
mov
fwait
lds
inc
push
pop
int3
loop
mov
mov
cmpsl
push
or
or
les
or
sbb
mov
scas
push
mul
mov
cli
inc
inc
insb
mov
data16
notb
bound
jg
inc
int3
xchg
cmp
push
sbb
push
data16
ljmp
mov
ss
fnsave
dec
and
push
xorb
lods
loope
in
call
dec
sarl
adc
mov
in
mov
push
out
fsubrs
sbb
ja
cmp
sub
mov
push
mov
cld
mov
cmp
movsl
xlat
fiaddl
cmp
jne
pop
mov
xchg
xchg
pop
frstor
ljmp
sub
int
ss
or
jge
scas
cmp
xor
jle
inc
ljmp
cmp
jae
arpl
pop
cmpsl
dec
add
jge
bound
cmp
stos
pusha
rcrb
sbb
daa
call
dec
rcl
rcrl
movsb
add
subl
xchg
iret
cwtl
push
fisttpl
fucom
mov
cltd
add
outsl
mov
ret
sub
jmp
gs
xchg
clc
out
pop
ljmp
xchg
xchg
jo
xchg
pop
mov
jno
cmpsl
push
lds
loop
imul
pop
es
sbb
movb
xor
aas
scas
movsl
fmuls
mov
loope
cmp
fwait
adcl
xor
pushf
repnz
imul
and
sub
std
imul
push
pop
add
leave
mov
sbb
xlat
push
sub
pop
xor
fs
push
adc
jle
jae
in
das
cltd
sub
jp
aad
xor
inc
dec
sub
and
mov
cmpsl
popa
cmp
inc
pusha
test
push
mov
push
add
lods
pop
xchg
inc
ja
cmpsl
int
mov
xchg
mov
addr16
push
sti
cmp
out
mov
dec
mov
rorl
mov
arpl
mov
push
stos
mov
pop
leave
cmp
dec
in
sbb
cli
mov
iret
dec
add
lds
jne
lods
xor
ret
xchg
sub
xchg
mov
mov
out
mov
fisttpll
leave
stos
adc
test
mov
ret
daa
or
aas
mov
sbb
sub
pop
inc
sub
into
ret
jo
inc
cmp
aas
cltd
xchg
sbbb
adc
into
cmp
movsl
call
cmp
dec
les
mov
outsl
mov
es
dec
lea
or
pop
test
lret
adc
pusha
sub
fcmovne
cmp
adc
xchg
mov
mov
inc
pop
loope
xchg
adc
mov
cmpsb
mov
stc
sarb
in
roll
les
int
cmpb
xor
mov
fdivs
jne
jnp
mov
mov
dec
bound
add
pop
mov
add
fbstp
in
arpl
sub
sub
push
xchg
lret
shll
into
shr
lret
add
jle
aaa
outsb
dec
jne
stos
das
jle
jmp
int
iret
mov
sbb
fistl
mov
ret
in
xor
mov
cmp
ss
sub
adc
sub
cmp
jno
cld
in
js
hlt
adc
aas
xchg
fwait
mov
pop
cmp
ja
mov
mov
jecxz
psllw
or
xchg
addr16
jns
in
sub
xchg
ret
jecxz
jae
int
pop
xchg
into
call
popf
add
lret
stos
push
fcoml
test
cmc
mov
cmp
xor
fcompl
rcrb
push
addr16
push
sub
les
push
iret
dec
repz
ret
out
jl
aaa
sbb
minps
mov
mov
leave
mov
pop
jg
or
bound
lea
push
mov
cmp
int3
and
mov
mov
jae
inc
jne
xlat
xchg
das
adc
jnp
mov
cs
dec
pusha
fxch
pop
lock
scas
and
nop
imul
imul
inc
jns
add
xchg
cmpsb
aam
dec
jno
xchg
sub
sub
call
adc
arpl
in
test
in
into
fnsave
aas
ret
dec
cmp
and
daa
test
in
push
ljmp
pop
cmpsb
fadd
je
out
cs
mov
add
sub
dec
inc
or
mov
fisttpll
outsb
add
inc
dec
je
cmpsl
fists
mov
sub
or
sbb
xchg
push
test
fistl
cwtl
sbb
ret
mov
adc
mov
xchg
int3
jmp
and
test
repz
jg
push
mov
mov
insl
aam
sub
test
add
fists
int3
mov
cmp
adc
push
add
cmp
sub
cmc
stos
adc
cltd
addl
test
pop
lods
push
dec
pusha
fnstcw
lods
mov
jns
adc
cmp
dec
inc
mov
test
inc
add
adc
cmp
cmp
pop
jae
push
sub
push
adc
push
es
push
scas
movsb
test
xchg
jp
add
pop
daa
mov
fstps
push
jns
adc
imul
in
fs
cmc
xchg
sub
push
adc
mov
mov
mov
mov
add
cmpsb
mov
out
in
mov
xor
orb
adc
movsb
jne
fwait
pop
mov
lcall
jae
ss
xchg
sbb
or
cmp
lret
mov
inc
mov
add
sahf
inc
sub
lret
xor
notl
repz
push
fwait
xchg
cmp
push
fwait
icebp
mov
cli
mov
addr16
mov
jle
mov
jge
mov
fiadds
jg
lcall
insl
orl
ds
add
std
cmp
mov
sbbl
sub
mov
movsb
xor
xchg
mov
mov
push
xchg
fsubs
aaa
cmp
test
add
mov
mov
test
push
imull
les
insb
dec
inc
lods
add
xchg
and
scas
xchg
daa
mov
movsl
sbb
adc
les
stos
test
mov
das
enter
fs
push
mov
sub
push
loopne
jmp
mov
aaa
mov
or
and
popa
jae
jns
stc
test
push
mov
jle
mov
or
xlat
push
in
or
in
or
jne
sbbb
lahf
fadds
insl
je
jne
jmp
aaa
pop
sub
jno
pop
test
push
arpl
orb
sub
ljmp
outsl
sub
xchg
test
inc
xchg
sbbl
pop
out
pop
out
jecxz
jae
dec
xchg
je
pop
sti
pushf
sub
push
lret
pop
imul
adc
scas
adc
stos
jg
and
inc
repnz
xchg
mov
or
mov
repz
in
adc
add
mov
je
jmp
dec
mov
mov
jp
dec
cmp
xchg
mov
cltd
test
mov
and
mov
addb
imul
mov
nop
xor
mov
or
aas
pushf
mov
push
mov
mov
sarb
lods
sbb
enter
pop
sub
adcl
icebp
xor
xchg
aas
push
leave
mov
jl
sub
add
and
mov
lcall
rep
cmp
cmc
xchg
arpl
push
dec
insl
pop
jo
pop
jecxz,pn
fs
push
or
push
movsb
push
pop
xor
into
mov
add
pop
mov
daa
in
push
dec
vpunpcklwd
pusha
xchg
movsl
sbb
sub
sub
pop
clc
push
adc
jbe
jl
cwtl
adc
leave
insl
dec
into
mov
sub
sub
push
fstps
rorl
push
jns
or
out
addr16
jecxz
movsl
aas
jmp
add
mov
xor
mov
loope
inc
push
sti
jnp
addr16
mov
lcall
sbb
cmp
ffreep
ret
cmp
xor
je
add
jg
mov
sub
push
xchg
push
pop
mov
jnp
sub
inc
mov
into
stos
lcall
jb
or
or
pop
cmc
fadds
pop
out
mov
sbb
mov
jle
sub
gs
ror
fsubrl
sbb
test
cltd
je
out
pop
lock
les
subl
in
push
mov
subb
into
ljmp
aam
lods
add
lcall
mov
push
dec
mov
lret
jmp
xchg
xchg
add
arpl
pop
sbb
test
or
jecxz
add
stos
mov
adc
push
fiadds
push
mov
sub
mov
jbe
fcompl
or
inc
loopne
movsl
enter
test
pop
out
push
add
mov
push
loop
xchg
call
dec
cmp
pop
dec
imul
mov
xchg
xchg
dec
dec
dec
xchg
xchg
ret
ds
fcmovu
ds
lods
mov
pop
out
orl
push
jno
or
clc
sub
jae
mull
inc
xchg
lret
and
andb
or
or
or
xorl
dec
mov
cli
sub
xor
mov
int3
iret
test
enter
xor
sbb
loope
shlb
ljmp
subb
mov
in
loope
pop
lea
dec
sti
add
lock
mov
cmp
and
sub
inc
push
xor
xchg
dec
out
cltd
scas
adc
and
dec
stc
decb
push
stos
dec
and
mov
mov
mov
mov
mov
or
lds
push
aaa
iret
xor
cs
jecxz
enter
out
fdivs
inc
or
cs
scas
pop
and
or
outsb
inc
and
pop
cmp
or
jo
or
repz
add
cmc
lock
insb
test
popa
pop
sub
and
cmp
xchg
pop
dec
add
out
and
out
and
mov
xchg
pop
jnp
cmp
mov
cmpsl
pop
push
je
mov
jb
or
fwait
adc
lret
mov
mov
ret
leave
inc
cmpsl
push
iret
test
andb
ja
xchg
mov
pushf
std
add
push
xchg
ss
mov
call
lea
dec
fisubl
and
xorb
aaa
cmp
sbb
ljmp
add
push
inc
lcall
add
aaa
mov
lret
cmp
sti
out
fidivrs
nop
add
cmove
xor
jb
inc
loope
push
inc
out
cmp
adc
call
pop
mov
nop
in
lea
repz
loope
dec
out
stc
or
jl
cltd
push
fdivl
push
insb
cmp
adcb
mov
call
lds
pop
lcall
xor
lods
or
or
and
ljmp
sbb
leave
xor
xor
roll
les
push
push
nop
xor
inc
gs
push
pop
das
test
movsl
sbb
call
pop
xor
ds
add
ss
sbb
shlb
ss
jl
in
pop
rolb
xchg
dec
dec
sbbb
movsl
jbe
cmp
jmp
add
pop
hlt
in
cmc
push
jl,pt
ret
bound
mov
ja
mov
mov
sub
shrl
in
pop
xchg
mov
lock
mov
push
jnp
xor
pop
rcr
xchg
imul
xchg
pop
mov
shl
jp
dec
or
cmc
lds
xlat
add
sbb
jnp
stc
loope
hlt
dec
fs
xchg
aaa
pop
sub
int3
sub
inc
add
sti
outsb
aam
and
enter
cmpsl
push
stos
pop
adc
arpl
lea
faddl
pop
arpl
jbe
xchg
dec
ret
push
cmpsl
sbb
in
push
test
stos
pop
mov
jns
call
pop
bound
inc
leave
cltd
dec
inc
aas
sub
inc
mov
sub
cld
in
inc
out
push
in
add
jecxz
sbb
arpl
shll
int
flds
scas
adc
fs
add
xchg
aaa
jg
fwait
andb
test
mov
pop
xchg
inc
push
or
ret
sub
div
cmp
out
int
pushf
mov
mov
leave
out
rcrb
mov
cs
pop
pop
jle
sub
cmc
push
pop
leave
lea
xchg
pop
inc
add
and
xor
rcl
adc
mov
and
subl
and
jae
pop
hlt
fwait
and
xchg
jecxz
xchg
xor
rolb
mov
and
inc
sub
scas
mov
adcb
addr16
adc
je
fwait
push
or
lret
out
out
in
lahf
cli
or
gs
lods
or
loop
cmp
add
cmp
dec
into
shlb
fst
sub
pop
jne
dec
mov
xchg
or
inc
js
cmp
cld
into
xlat
push
pop
ficoml
xchg
or
arpl
movsl
cwtl
jns
sahf
pop
inc
jl
bound
rcll
fnstcw
flds
mov
sub
sti
in
js
lea
xor
xchg
pop
rcr
cmp
and
sbb
push
push
lret
scas
sbb
addr16
std
stos
mov
cmp
or
je
cmp
jp
push
test
push
mov
mov
daa
xchg
mov
sti
daa
enter
mulb
xchg
xchg
cmp
das
ljmp
sub
dec
sub
xlat
mov
lcall
subl
rcl
mov
int3
jo
orb
or
pop
fildl
enter
cmpsb
lds
test
rcll
mov
scas
loope
dec
fldenv
add
or
inc
fisttpll
ljmp
ljmp
pop
add
mov
outsl
cmp
es
popa
cmp
outsb
xor
pop
inc
into
mov
push
mov
sub
mov
nop
das
int
in
cli
sbb
sbb
out
out
cmp
lea
push
cmp
sbb
pop
popa
sbb
fwait
ss
xlat
cld
push
inc
add
jg
mov
xor
mov
xchg
or
fadds
jecxz
dec
xor
in
and
ret
cwtl
pop
push
das
addr16
movsb
fs
fwait
insl
mov
jb
add
mov
dec
icebp
xchg
jb
out
jnp
cmc
push
rclb
fidivs
ds
xorl
test
or
shl
repz
jmp
or
jbe
orl
sbb
xchg
mov
ss
test
je
adc
daa
aad
cli
cmp
jge
jle
or
pop
inc
daa
mov
push
pop
jbe
decb
cmp
push
rolb
and
xchg
dec
sbb
push
mov
sub
and
test
lock
out
push
pop
inc
scas
lods
shl
cli
imul
pop
jg
push
dec
xor
mov
pop
pop
insl
out
push
push
mov
mov
jg
jecxz
mov
pop
sbb
insb
test
sub
in
aas
stos
mov
cmpsl
xchg
ret
test
mov
ret
stc
sbb
mov
or
jg
mov
in
mov
les
loop
aas
add
sub
add
jnp
sahf
stc
test
aad
fwait
inc
pop
pop
stos
jg
jnp
ret
cmp
das
je
fiadds
flds
mov
mov
popf
mov
jecxz,pn
test
pop
int
in
sbb
adc
push
add
sbb
jg
dec
xor
cmp
push
inc
adc
outsb
or
mov
scas
mov
and
sti
mov
cltd
jno
aaa
mov
fst
sbb
mov
xchg
dec
push
mov
mov
data16
aas
mov
mov
or
stc
test
in
shll
pop
and
add
ret
jno
push
jmp
push
jecxz
and
leave
mov
inc
mov
sahf
ds
bound
stc
or
enter
stc
sarb
and
dec
jg
add
push
jmp
dec
stc
not
fcompl
inc
mov
sub
xor
dec
push
mov
popa
sbb
push
shld
arpl
xchg
pop
xchg
aas
mov
mov
pop
adc
or
cmp
loopne
mov
mov
outsb
xchg
adc
inc
ljmp
pop
inc
push
pusha
icebp
xor
popa
movsb
fistpll
push
pop
fsubrs
je
mov
clc
jae
pop
or
inc
mov
xchg
pop
mov
outsl
push
pop
lahf
popl
mov
rclb
test
xchg
fs
shrl
ficoms
jecxz
int
fwait
push
ljmp
icebp
xchg
mov
lret
bound
fidivrs
mov
lds
push
fstps
jg
dec
movsb
dec
stos
bound
loop
sbb
nop
in
sub
arpl
xor
cmp
test
shll
or
daa
pop
inc
jnp
lods
out
pop
xchg
fsubs
add
jo
test
push
leave
or
pusha
lret
pop
repnz
out
mov
lahf
xchg
pop
scas
test
cmp
and
adc
add
or
xor
inc
fnstenv
add
in
and
cmp
jae
aam
inc
inc
xorl
jge
pop
ja
xchg
enter
int3
pop
sahf
test
out
sar
fistpl
movsb
cmpsl
addb
rclb
fnstsw
imul
rolb
popa
inc
adc
add
cli
popa
insb
enter
dec
push
cmpsb
daa
popa
mov
pop
sbb
outsl
fldenv
jnp
lcall
or
adc
jmp
ljmp
insb
push
fs
mov
cltd
lods
dec
mov
and
cmpsl
lods
mov
loop
iret
and
jl
pop
ficomps
pop
mov
xor
frstor
mov
push
xorl
jo
cmpsl
xor
imul
mov
and
sarb
push
inc
in
mov
mov
mov
or
movsl
cmp
call
inc
rclb
aam
sbb
xchg
mov
icebp
stos
mov
cs
test
insl
dec
pop
cwtl
ja,pn
add
lock
ss
mov
or
popf
xchg
jle
mov
lods
xchg
push
call
scas
mov
xchg
add
inc
mov
push
pop
call
xchg
push
mov
aaa
je
add
mov
adc
pop
lcall
mov
std
into
inc
test
sti
das
cli
jo
outsb
dec
sub
lahf
out
rorl
cli
mov
sti
sub
mov
repz
sbb
pushf
xchg
dec
mov
sbb
out
inc
jmp
and
or
stc
adc
lea
addl
cltd
cmc
jl
or
mov
xor
xor
aas
shlb
mov
push
mov
dec
adc
scas
xor
notl
aas
jecxz
sarb
push
movsb
pop
xchg
sbb
std
inc
cmc
clc
in
mov
cwtl
pop
push
repnz
stos
inc
adc
cmp
iret
cmc
pop
aaa
sbb
cwtl
mov
inc
jg
cs
rol
shll
xor
mov
inc
cwtl
jae
data16
push
jmp
es
sub
sbb
or
jns
imul
cltd
jbe
data16
push
jmp
es
sub
sbb
or
jns
imul
cltd
outsb
mov
push
jmp
es
sub
sbb
xchg
insl
xchg
js
lea
mov
stc
push
jmp
out
sub
insb
mov
or
cmpsb
into
mov
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
xchg
sahf
push
mov
mov
jbe
add
adc
xchg
push
cmpsl
ds
pop
xlat
dec
idivb
outsb
push
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
push
ds
xor
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
sub
movsl
or
sbb
push
data16
int
jbe
popf
jne
gs
std
xchg
jnp
mul
push
lret
pop
mov
jge
push
int
push
push
loop
sub
pop
dec
in
testb
repz
icebp
ljmp
cmp
pop
sub
sbbl
test
fmull
or
movb
dec
push
dec
gs
mov
rcr
stos
push
xchg
inc
jge
iret
xchg
icebp
cmpsl
mov
test
sti
ljmp
scas
push
pop
inc
xchg
jbe
out
loope
inc
test
sub
jle
nop
sbb
add
sahf
push
sahf
divb
pop
rol
cmp
mov
sbb
pop
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
testb
lcall
add
mov
and
leave
pop
rcrb
sbb
andb
sti
push
jmp
fstpt
and
push
mov
push
sti
ja
insl
rorl
xor
add
cmp
inc
int3
push
lret
pop
lock
into
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
sahf
adc
stos
push
fs
xor
jno
lods
xchg
test
dec
movl
and
addr16
xor
lea
jg
nop
adc
sub
inc
sbb
lahf
mov
or
pop
out
mov
mov
add
adc
dec
dec
sub
lcall
xor
mov
adc
test
test
fucomip
adc
mov
adc
xor
adc
arpl
dec
or
jnp
xchg
scas
aas
mov
out
or
inc
aas
mov
xchg
iret
jnp
push
inc
bound
push
adc
xchg
movsb
lea
jg
mov
jp
bound
loope
mov
pop
sub
stc
fst
xlat
jg
outsl
jge
xor
bound
inc
aad
ficompl
jns
insl
cmp
xor
fsubl
mov
push
dec
nop
or
sub
inc
popa
outsl
mov
stc
dec
mov
push
test
push
shll
imul
fistpll
mov
shrl
pop
in
loopne
push
cmpsb
bnd
dec
xorl
jnp
adcl
xlat
mov
push
fildll
cltd
aaa
aam
in
std
jmp
adc
and
dec
adc
xchg
mov
cmp
leave
or
iret
incl
inc
rclb
lret
sbb
imull
lds
cs
fistpl
cmpb
enter
rorb
inc
or
adc
push
mov
mov
lods
aaa
mov
mov
rorb
mov
mov
mov
xor
pop
pop
pop
stc
test
nop
pushf
cmp
jmp
sub
mov
arpl
lods
cmp
arpl
orl
push
out
fs
clc
leave
call
push
popf
hlt
jmp
jb
popa
jne
mov
out
lds
inc
outsl
je
loop
mov
cmc
test
jl
sti
dec
lea
shll
xchg
sub
dec
incl
idivb
test
cld
cmp
and
add
xor
inc
xor
enter
xor
jl
movsb
int3
int
pushf
leave
xor
cmp
dec
lods
xchg
mov
push
lret
push
push
ret
mov
lods
inc
orb
and
aaa
fnstsw
mov
cmp
in
in
cmp
jle
or
jne
cmc
cmp
loopne
sub
std
xchg
jno
dec
push
or
fs
and
fmuls
cmpsb
out
sbb
stos
xor
xor
cmpsb
fdivrl
inc
out
fnsave
push
dec
pop
push
sub
pop
sub
ret
jecxz
dec
subl
lock
fisubrs
inc
jnp
iret
imul
adc
or
mov
xor
mov
xor
js
jae
pop
and
mov
or
fs
incb
xchg
repz
scas
negb
fsubrp
or
scas
sub
cld
adc
call
mov
mov
xor
push
movsb
add
pop
add
rcrl
inc
fimuls
stc
mov
xor
test
in
jns
cli
mov
push
je
or
push
sub
in
or
shlb
and
mov
loopne
je
dec
mov
mov
scas
mov
idivl
xchg
mov
push
pop
pop
cmp
negl
pop
pop
cld
or
repnz
cmp
xchg
jns
lods
xchg
js
or
add
lret
mov
cmp
mov
hlt
and
jmp
in
pop
sahf
ret
out
adcl
adc
mov
cmp
stos
cld
ficomps
rclb
xchg
stc
mov
sbb
lret
mov
mov
pop
jno
xor
in
pop
fiaddl
and
and
leave
ret
adc
sahf
insl
in
fwait
push
sbb
push
jl
and
dec
push
stos
pop
adc
jge
mov
aad
push
ret
mov
mov
add
cltd
xor
sub
push
mov
jne
adc
mov
mov
mov
dec
shlb
in
or
les
and
cmc
shl
xchg
jno
xor
mov
pop
mov
mov
test
mov
aaa
fildl
incb
push
or
out
dec
outsl
cmp
sti
int
mov
push
xchg
out
push
rorb
stos
mov
gs
or
movsl
in
pop
jnp
push
sub
fisubs
pop
push
push
fildl
imul
adc
pop
inc
add
inc
push
add
fsubl
push
fstpt
sub
insl
sub
aam
lret
fstl
push
aas
jb
push
jae
and
sub
lods
inc
mov
push
cmc
inc
out
loope
notl
jae
test
cli
stos
mov
pop
jle
stc
clc
sub
outsl
add
pop
iret
rorb
xchg
cld
scas
cmpsb
stc
mov
fsubrl
mov
mov
jb
cld
mov
cmc
pop
sub
fwait
insl
inc
bound
xor
aas
scas
fwait
stos
dec
fisttpl
clc
mov
mov
clc
inc
mov
mov
and
lds
int
mov
xor
push
loop
add
inc
pop
and
push
jmp
es
xchg
mov
pop
shll
nop
sarb
jae
or
add
out
ffree
inc
adcb
data16
jae
or
push
call
jno
mov
pop
roll
jle
jmp
pop
xor
scas
stos
test
adc
mov
mov
mov
fsts
out
pop
in
jno
cmp
dec
in
push
lods
xchg
lods
int
sub
enter
cltd
jmp
adc
xchg
mov
fwait
and
mov
enter
shl
xor
bound
jo
add
scas
add
pop
aas
cwtl
jle
inc
mov
xchg
xor
out
bound
mov
lcall
ret
ja
adcb
jg
leave
cmp
push
xchg
sub
sbb
aaa
in
inc
jmp
sub
rcr
int3
or
je
xorl
mov
call
fcompl
test
cwtl
mov
in
mov
pop
int3
orb
sub
push
sub
div
lret
nop
or
fbld
adc
out
ds
jns
mov
pop
sub
dec
xchg
xor
xor
fistps
decb
movsl
pop
push
aad
cmpsb
cmp
cmp
push
popa
fstps
sub
scas
lahf
adc
arpl
rorl
push
mov
dec
and
sub
aaa
pop
xlat
adc
addr16
sub
sbb
lret
inc
sbb
scas
negb
lahf
xchg
stc
adc
js
in
mov
lahf
mov
pop
sarl
jg
and
popa
in
dec
xlat
nop
int
repz
pushf
dec
mov
mov
into
movsb
rcrl
adc
dec
imul
cmp
lock
mov
adc
jle
pop
fdivrs
icebp
ja
sahf
xor
mov
popf
repnz
pop
add
push
mov
or
dec
out
mov
cld
inc
lret
es
inc
in
int3
lcall
shll
jns
lods
stos
sti
jb
imul
add
popf
mov
adcb
insl
loope
lds
xchg
fsts
xor
out
arpl
jbe
jo
xorl
xchg
cmc
out
mov
push
add
imul
jno
test
xchg
test
xchg
and
fldl
sub
mov
test
mov
adc
xor
inc
aam
add
or
shrb
lret
sub
adc
lcall
psraw
xlat
jno
ficoml
repz
jnp
pop
call
clc
adc
insb
jg
inc
iret
cmp
pop
jnp
test
push
jno
pop
sti
movsl
push
jnp
mov
addr16
xor
outsb
loope
inc
cmp
pushf
cmp
xor
xlat
loope
mov
jno
adc
inc
jbe
sbbl
mov
nop
cli
stos
xchg
aas
mov
or
inc
imul
jno
stc
in
cmp
shrl
xor
fs
mov
test
popa
stos
cs
movsl
test
icebp
imul
jno
fdivr
cli
imul
lahf
jl
dec
or
mov
test
clc
jae
hlt
dec
sti
cmp
insb
in
push
stos
adc
mov
push
and
mov
decb
scas
mov
sbb
daa
push
repnz
shlb
adc
mov
cmp
mov
add
push
std
xor
push
test
mov
mov
mov
repnz
daa
xchg
fdivrp
lods
les
ja
sub
cs
aaa
cmp
push
and
push
out
or
cmpsl
xor
sarb
sub
lea
rorb
in
and
xchg
arpl
mov
test
and
sub
sarb
sarl
fs
mov
inc
push
inc
and
mov
push
cmp
mov
dec
test
arpl
sub
xor
out
xor
or
or
test
xchg
mov
dec
pop
fsub
or
push
mov
lahf
sbb
xor
repnz
xchg
sbbb
sti
xchg
jae
pop
or
mov
jp
add
jle
xor
mov
cmp
loop
sti
xlat
sbb
pop
or
mov
insb
jo
out
int3
test
lods
sub
jnp
sub
ficoml
rolb
push
aam
sbb
jb
rcrl
adc
mov
clc
out
or
mov
movsb
adc
jne
push
or
test
insb
xchg
and
or
xor
notb
xor
mov
xchg
push
cwtl
call
dec
cmp
jnp
sub
and
test
cmpsl
xor
in
adc
adc
sbb
dec
movsb
push
mov
cltd
or
lret
sahf
pop
cmp
jb
push
insl
in
cli
pop
jbe
popa
int
leave
je
mov
push
lods
xor
and
add
mov
jno
mov
pushf
xorl
mov
lret
pop
add
jecxz
inc
rcll
fnstenv
js
xchg
cmp
inc
mov
xchg
push
xor
aaa
cmp
in
and
sahf
jl
or
mov
cmpsl
dec
aad
xchg
inc
cmp
add
push
popl
cli
sarb
adc
stc
lret
aam
mov
pop
call
fnstenv
xor
sub
fs
mov
stos
pop
xor
sub
xchg
mov
sub
sbb
mov
mov
mov
jle
testb
sahf
mov
pop
pop
call
int3
lcall
push
xchg
jge
hlt
and
mov
pop
xchg
mov
fwait
or
sub
or
sbb
sub
pop
inc
pushf
jp
jp
mov
popa
repnz
inc
addr16
ds
mov
std
mov
push
inc
push
daa
push
or
jnp
lods
xor
enter
shll
cmc
test
fdiv
xchg
sbbb
roll
icebp
cmp
jnp
sti
mov
jo
jnp
addl
xchg
cmp
fisubs
adc
hlt
push
gs
lods
lret
or
push
sub
mov
lods
lcall
in
insl
push
jge
adcl
push
into
pop
mov
adc
fwait
or
mov
inc
test
test
mov
mov
imul
inc
cmpsb
xor
dec
fildl
pop
pop
mov
incb
push
mov
xchg
imul
arpl
sub
lcall
mov
add
mov
pop
loopne
sahf
add
pop
mov
mov
ret
push
add
jbe
cld
pop
popa
pop
fcmovbe
mov
fwait
notl
enter
lods
es
sahf
movsl
mov
xchg
scas
fisttpl
in
lret
pop
js
mov
ret
inc
mov
aas
jnp
out
mov
jp,pn
push
arpl
ud1
sbb
lods
xor
jnp
fs
dec
cwtl
sbb
lret
ljmp
pushf
jg
mov
and
shl
mov
dec
fmuls
xor
dec
jbe
pop
jae
xchg
dec
xchg
pop
xchg
iret
mov
popa
sbb
out
push
fnsave
xchg
xlat
aaa
repnz
ljmp
push
sub
ret
add
rcr
cmp
push
cli
sbb
pop
xchg
mov
incl
mov
test
cmp
mov
sub
sahf
xchg
push
test
mov
inc
xlat
sub
push
push
cli
fxch
pop
mov
xor
ja
jg
xor
cmp
call
stos
les
loop
jo
fbstp
push
outsb
or
jge
jnp
cmp
adc
icebp
in
cmpsb
rol
mov
repz
adc
lahf
fsub
fisttpl
aaa
or
mov
das
repnz
lods
stos
pop
xchg
mov
ret
les
fwait
loop
data16
mov
xor
push
pop
pop
repz
xor
es
pop
cmpsb
pop
gs
sbb
fwait
mov
cltd
mov
and
add
in
pusha
lods
jg
xchg
roll
xor
add
inc
imul
push
jno
and
std
cmpsl
shrl
sbb
sub
outsb
push
add
jl
sbb
push
mov
test
push
arpl
pop
inc
nop
data16
pop
mov
jle
jbe
cmpsl
push
mov
loop
adc
aad
sub
xchg
mov
test
bound
in
pushf
push
in
xorb
mov
push
xchg
add
mov
adc
and
std
fildl
addr16
aaa
jmpw
adc
mov
jecxz
stc
cmp
jle
jae
or
pop
lods
mov
rorl
aas
mov
js
ss
insb
cmp
int3
jbe
inc
mov
inc
les
or
adc
popa
fs
sub
add
testb
xchg
xor
pop
clc
fdivrs
inc
mov
ret
loop
aad
pop
mov
push
mov
mov
arpl
pop
or
mov
mov
or
pop
aas
shrb
lret
push
mov
pop
mov
call
jl
push
sub
frstor
inc
out
jbe
loope
dec
pop
push
icebp
cmc
in
adc
ret
sbb
sub
jno
jno
dec
das
pop
cmpsb
adc
pop
ja
out
cwtl
sub
ret
push
cmp
mov
sbb
mov
shll
add
testl
jae
inc
adc
shlb
outsb
movsb
fs
or
test
lahf
or
xchg
dec
imul
outsb
xor
push
test
movsl
test
int3
mov
or
repnz
out
add
lock
lea
mov
imul
data16
test
jp
push
or
cmpsb
in
shlb
push
shlb
mov
shll
mulb
push
mov
stc
xchg
jg
mov
sub
nop
push
insl
subl
xchg
int
nop
imul
out
rol
fcmovu
leave
mov
mov
lods
push
dec
test
jg
lods
fstpl
sbbl
int3
dec
out
xchg
push
ds
or
sub
leave
xchg
aad
sub
addb
je
sbb
add
cmp
popf
repz
mov
dec
cmpsb
cmp
mov
mov
divb
sub
fs
or
pop
stc
xor
addr16
pop
nop
imul
xlat
sbb
xor
jae
popf
movb
xchg
jo
lds
xchg
adc
lcall
insl
enter
add
neg
push
xor
add
sti
xor
jecxz
jb
push
test
xchg
push
lret
les
pop
inc
cltd
jge
fs
lods
es
ret
lret
jo
inc
and
outsb
xor
popf
addb
idiv
sbb
pusha
insl
adc
das
cmpl
adc
lds
ja
bts
into
mov
cltd
aam
sbb
sbb
mov
ret
imul
dec
xchg
out
in
rol
addr16
cld
and
push
ljmp
rclb
inc
jge
out
outsl
mov
repnz
or
rcll
add
mul
sbb
pop
les
aas
or
jl
insb
sub
xor
push
inc
loop
in
lods
les
into
push
ds
adc
push
imull
xor
mov
mov
mov
mov
or
xchg
and
pop
lods
imulb
test
push
push
mov
xchg
daa
pop
inc
fbld
cmpsb
rcr
sahf
add
loope
mov
xor
jo
pop
mov
sbb
push
sub
cmp
dec
div
xor
mov
push
ret
ja
mov
popa
cmp
xchg
xchg
ret
int
icebp
cwtl
push
cs
int3
mov
inc
push
in
cmp
inc
dec
pop
outsl
sahf
lods
cmp
cmp
pushf
ret
lods
jno
xor
mov
mov
pop
aad
and
negb
xor
loope
lret
xchg
or
and
daa
pop
sbb
rorb
iret
outsl
jmp
mov
cld
lret
sbbb
adc
cwtd
adc
mov
rcll
aam
mov
push
test
hlt
lds
mov
lret
shrb
xlat
rcrb
mov
and
nop
pop
add
inc
div
fcmovu
inc
xchg
hlt
bnd
popl
aas
fists
sub
ss
jbe
lock
pop
sbb
sti
or
jnp
aas
fcmovne
dec
fisttpl
xor
std
in
cmp
cli
push
popa
jge
adc
add
repz
andb
push
jnp
call
shr
jne
mov
insb
sub
dec
mov
je
aas
and
jno
sub
stos
fwait
inc
mov
adcl
dec
and
pop
dec
shlb
in
xor
pop
stc
fisttpl
call
adc
push
mov
hlt
int3
movsl
arpl
cmpsb
add
es
jbe
xchg
dec
call
es
data16
movsb
sbb
mov
data16
gs
xor
inc
or
sbb
mov
cmc
or
mov
and
and
hlt
mov
cmpsb
cli
loope
mov
jns
aas
lods
outsb
mov
push
fs
or
pop
addr16
mov
sbb
and
rcll
les
push
sbb
or
xor
mov
adc
add
loope
inc
mov
jns
jnp
push
icebp
stos
jmp
mov
enter
pop
movsb
jle
pop
jle
mov
dec
popa
push
out
scas
and
fisttpll
pop
scas
jle
xor
repnz
push
fmuls
lods
pop
and
loope
add
xor
mov
out
enter
pop
xor
jge
add
pop
filds
and
sub
imul
fldl
inc
xchg
ljmp
mov
inc
mov
loope
mov
push
jns
scas
lods
shrb
ja
add
pushl
mov
movsl
pop
sub
mov
cltd
shrl
insl
lret
repz
inc
jp
pop
dec
push
mov
cmp
lcall
in
fisubrl
jns
jmp
sbb
movsl
lds
xor
popf
xor
cmp
test
loope
imul
ds
inc
xchg
les
lret
aad
leave
dec
xchg
and
and
scas
fisttps
subb
out
push
out
movsl
into
nop
lods
mov
iret
sub
jmp
stos
push
add
or
push
loop
xchg
push
fimuls
push
or
adc
jmp
out
and
rolb
xchg
pop
push
sbb
xchg
mov
in
mov
les
ds
mov
aas
and
sti
inc
aaa
ja
dec
inc
cmp
xchg
mov
jecxz
inc
imul
dec
sbb
test
cmp
sub
xor
fcmovnbe
int
xor
les
scas
sbb
sahf
enter
add
adc
push
and
movsb
sub
int3
cmp
sbb
pushf
dec
fiadds
push
inc
inc
int3
mov
in
mov
fldt
add
mov
sbb
in
mov
pop
into
divb
xorl
mov
test
out
pop
dec
or
sub
pop
xchg
lods
xor
shlb
fisttps
push
ret
jmp
pop
inc
pop
cld
dec
outsb
int3
dec
mov
ss
inc
ficoms
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imulb
sahf
push
mov
mov
push
into
data16
jbe
xchg
xchg
push
cmpsb
ds
pop
dec
out
imull
sahf
pop
mov
mov
push
into
data16
jbe
xchg
xchg
movsb
or
mov
mov
pop
mov
orl
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
aaa
xchg
sarb
dec
dec
pop
xor
inc
push
outsb
inc
sbb
cmc
fcmovu
lret
test
mov
pop
dec
dec
pop
cmp
sub
sbb
or
stos
jmp
stc
hlt
jmp
into
imul
push
mov
xor
ss
add
or
fstps
cltd
cmp
adc
cmp
outsl
loopne
xchg
or
leave
jmp
popa
inc
out
test
jne
ret
cmp
movsl
push
aad
xor
pop
adc
sub
in
sbb
jp
pop
push
lret
jg
cmp
xor
mov
jne
pop
inc
mov
aad
aas
cmp
jns
dec
pop
imul
push
or
out
mov
xor
inc
popl
jne
call
cwtl
movsl
mov
mov
pop
pop
inc
sbb
fs
stos
xor
mov
jmpw
cltd
movsl
dec
out
xchg
mov
rcr
lahf
xor
xchg
add
adc
fcmovnu
lret
cli
stos
int3
fbstp
mov
push
pop
pop
es
cmp
outsb
cmp
adc
loope
rcl
rcr
mov
lcall
jns
dec
and
push
jg
push
or
je
subb
rol
ljmp
loop
sbb
pop
dec
or
jns
ret
cwtl
mov
fcmovne
out
in
cld
or
pop
sbb
sub
sub
inc
sub
sbb
or
cli
jmp
lret
test
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cli
jmp
lret
test
mov
repnz
inc
pop
jp
outsb
icebp
mov
inc
adc
nop
cmc
movsb
cmp
cmp
adc
repz
insl
repnz
lds
cmpsb
and
ror
pop
repnz
mov
mov
int3
inc
dec
pop
cltd
in
mov
xor
xlat
jg
fsubs
or
roll
inc
scas
and
lret
int3
fistps
out
mov
movsl
mov
loopne
mov
nop
mov
in
lods
mov
stc
push
push
scas
enter
xor
push
cltd
jne
stc
cmp
popf
push
push
add
pushf
push
stos
inc
inc
ljmp
xchg
jmp
les
insl
daa
jno
insb
sub
mov
cmpsl
in
aam
inc
or
push
int3
cltd
cltd
pop
mov
repz
mov
sbb
cwtl
imul
xchg
movsb
xchg
sar
inc
das
xorl
testb
shr
test
aaa
gs
push
aad
jb
jle
jmp
and
ja
mov
ret
inc
sbb
mov
push
fmuls
in
clc
jb
add
cmpsb
and
int
pop
je
jb
imul
scas
mov
stos
stc
imulb
test
xchg
mov
shll
and
gs
addl
mov
push
mov
mov
pop
sub
sbb
lock
popa
into
popa
mov
adc
test
mov
pusha
push
mov
or
add
je
test
scas
xchg
pop
jl
or
ss
arpl
cmp
fidivrl
mov
popf
ja
repz
ja
add
cwtl
std
inc
int3
or
gs
xchg
test
or
cmp
jmp
in
inc
mov
xor
cmp
jge
mov
sub
js
stos
xchg
mov
xor
mov
jb
in
push
imul
sbb
mov
aas
adc
cmpl
in
test
mov
jne
loopne
or
inc
xchg
lods
dec
lock
test
jl
mov
jno
jb
mov
shrl
stc
push
insb
mov
adc
adc
sahf
aad
js
lcall
sbb
ret
mov
xchg
sub
fmull
jns
adc
ss
push
push
push
cwtl
std
sbb
dec
add
out
ss
mov
es
movsb
push
push
add
cs
in
shrl
aaa
push
rcrl
mov
sbbl
pushf
inc
jmp
in
gs
or
cmp
pop
mov
hlt
push
jae
out
cmp
xor
cmp
popa
cmpsb
pop
inc
fbld
or
dec
les
ret
shr
clc
int
fidivs
push
insb
iret
adc
add
push
xchg
fistpl
cmp
cmpsb
enter
mov
xchg
aaa
sahf
sub
dec
sub
sbb
ss
xchg
out
ss
ljmp
mov
mov
ljmp
jbe
and
in
mov
lret
sbb
jb
insl
xlat
out
out
inc
mov
fcomip
insl
mov
add
mov
enter
aaa
hlt
jmp
dec
dec
or
or
pop
into
leave
sub
xor
or
stos
dec
mov
fstpl
pop
sub
jns
ds
call
sub
jmp
ret
test
lcall
rcrb
aam
inc
fstps
icebp
movsl
mov
pop
push
fsts
hlt
add
shlb
add
ds
jle
jb
nop
mov
js
or
adc
insb
mov
mov
loopne
jmp
jbe
jne
pusha
ficoms
xlat
xor
popa
daa
hlt
aad
aaa
xchg
fwait
je
jmp
jp
mov
xchg
and
loopne
pop
mov
lock
pop
add
jb
adc
cmp
add
es
xchg
cmp
inc
and
push
in
adc
nop
clc
jmp
data16
and
insl
xor
fimull
aaa
inc
mov
jl
fcoml
or
daa
cmp
int3
xchg
filds
scas
xor
test
push
cmpsb
mov
xchg
repz
add
and
pop
ret
es
aaa
in
jecxz
xchg
repz
xor
arpl
add
out
xlat
dec
add
out
inc
cmp
push
es
lock
leave
pop
inc
jno
scas
out
imul
cmp
lcall
push
les
mov
mov
test
enter
inc
xchg
pop
scas
imul
pop
xchg
stc
or
mov
sbb
lret
add
idivb
lret
jns
adc
sbbb
cmpsb
dec
enter
hlt
jbe
cmc
pop
imul
popa
mov
das
lahf
sub
cmp
lahf
cmp
xor
mov
mov
push
sbb
jle
and
fstpt
inc
xchg
fdivrs
data16
aam
cmpl
mov
jo
movsl
xor
divb
daa
adcb
int3
mov
xor
mov
jno
shr
insl
xor
cwtl
sbb
dec
fwait
insb
sbb
mov
jae
xor
insl
jbe
and
dec
inc
fiaddl
pop
jae
xchg
and
mov
sbb
or
ret
out
or
xchg
jno
jge
rorb
jge
pop
inc
in
sbb
xor
mov
dec
fstps
and
mov
fsubrl
test
and
or
pushf
std
stos
and
daa
sbb
add
jmp
enter
jmp
push
add
lea
mov
jbe
lods
xchg
push
jge,pt
push
lea
add
push
or
popa
insb
mov
clc
mov
pop
loope
and
lret
int3
lret
outsl
mov
mov
mov
mov
mov
add
cmp
adc
dec
push
mov
cmpsb
sti
loope
loop
call
lods
push
mov
dec
push
stos
mov
clc
cmpsl
fwait
pusha
inc
cmp
sbb
sub
insl
mov
sbb
push
inc
imul
push
adc
or
gs
nop
rorb
icebp
faddl
mov
test
inc
arpl
adc
imul
and
ficoms
inc
jno
add
movsl
xchg
lahf
xor
nop
call
push
push
add
push
movsb
add
lret
xchg
dec
jne
mov
xor
jle
xchg
jmp
loopne
cli
sbb
pop
and
loope
rcrb
movsb
outsb
and
rcll
push
or
in
outsl
mov
aad
xor
sub
xchg
data16
mov
shll
pushf
popa
mov
jb
imul
xchg
lea
xor
jmp
push
andl
es
cmp
add
add
jae
xor
xchg
cmp
xchg
sbb
adc
scas
inc
dec
cli
or
jne
sub
mov
sti
lods
jmp
or
out
ljmp
test
or
repnz
jge
out
lds
or
pop
mov
add
wbinvd
shrb
leave
mov
and
in
stc
inc
inc
fmull
xor
orl
sbb
dec
dec
in
loope
lret
mov
and
stc
inc
lret
lock
mov
mov
popa
test
xlat
ror
stc
add
cmp
cli
fldt
xlat
add
mov
push
xor
and
std
jle
popf
pop
xchg
imul
iret
and
mov
xor
call
insb
fisubs
icebp
and
popf
ret
out
stos
jb
jg
mov
in
mov
mov
push
es
lcall
popf
cmp
test
jno
add
mov
cmp
mov
sbb
scas
dec
mov
sarl
mov
cmc
sub
cmp
push
fisttps
adc
inc
mov
in
ja
mov
test
ljmp
adc
push
popf
fadd
js
sub
rclb
mov
fdivr
in
cmp
fbstp
jmp
and
movsb
cmpl
cmp
dec
adc
hlt
aam
xchg
sbb
jmp
adc
xor
sub
inc
mov
inc
add
mov
push
jecxz
jl
gs
repnz
inc
iret
jo
insb
repnz
icebp
adc
dec
pop
and
cmp
sbb
pop
mov
sbb
or
adc
movsb
push
cmp
jo
xchg
adc
mov
aam
cmp
fistpl
sub
sbb
jbe
aam
je
sub
xor
lcall
mov
int3
pop
xlat
and
cmp
fs
push
push
inc
imul
scas
enter
out
push
pop
mov
pushf
icebp
sti
enter
cmpl
dec
scas
sub
ret
out
pop
inc
adc
mov
jl
scas
insb
daa
loop
out
xchg
mov
add
jbe
jbe
in
test
cs
mov
mov
dec
mov
xor
add
jl
ds
push
repnz
mov
movsl
or
out
aad
aaa
mov
lahf
cmc
cmp
mov
mov
sub
cld
fstps
dec
xor
sub
iret
test
xchg
jo
pop
and
jge
jl
imul
push
pop
pop
cltd
outsl
test
mov
dec
cli
shlb
aad
push
mov
mov
ds
add
push
test
xor
mov
testl
lods
movsl
test
leave
xchg
cs
mov
cmpsl
mov
imul
sbb
dec
mov
mov
icebp
sbb
sbb
or
enter
jnp
inc
mov
dec
cmpsl
cmp
call
idiv
daa
enter
outsl
sbb
xchg
in
mov
subl
test
subl
jl
xchg
sub
pop
or
andl
ror
add
and
sbb
sbb
stos
cmpsb
imull
cs
and
mov
ljmp
pop
cld
dec
push
sub
lcall
add
popa
lods
mov
sbb
flds
mov
jo
movsb
scas
and
jmp
cmp
add
sub
mov
mov
add
ret
imul
cmp
adc
rorb
lahf
push
dec
les
push
and
filds
mov
inc
xor
sti
loopne
fidivs
test
mov
loopne
popa
or
std
sub
inc
fdivrl
xchg
aaa
mov
out
call
cmp
loopne
adc
xchg
js
stos
insl
mov
add
add
inc
in
add
inc
sbb
xor
nop
sub
and
push
mov
in
enter
pusha
jno
mov
adc
or
outsl
call
and
call
xor
or
cmc
out
push
jp
bound
add
cmp
push
push
and
pop
cmp
test
jmp
jne
aad
sbb
pop
pop
mov
addr16
jp
hlt
mov
mov
mov
pop
arpl
lcall
scas
mulps
lds
or
movb
aaa
or
call
adcb
divl
lahf
cwtl
inc
lds
popf
cmp
movsl
aam
sahf
push
leave
push
add
dec
test
sub
insb
push
into
adc
fdiv
jge
subb
int
loopne
imul
movsl
push
push
add
mov
push
jnp
inc
es
adcl
cmp
and
call
push
enter
mov
fimull
adc
out
adc
psubsw
pushf
fprem
dec
fcomip
pop
jg
sub
inc
dec
call
fsubp
and
repz
xchg
sub
jns
jb
xor
jne
sbb
mov
mov
jecxz
mov
andl
and
xchg
repz
fiadds
xchg
mov
mov
inc
divb
mov
mov
inc
xchg
movsl
adc
shll
hlt
mov
adc
das
sbb
xor
cmp
and
push
xor
inc
inc
je
aam
pop
movl
mov
flds
loopne
enter
inc
xor
pop
outsb
jle
push
or
ljmp
ljmp
jg
sar
cmp
lods
negl
pop
and
cld
out
shll
fisubl
sub
mov
ja
or
pop
or
inc
in
pop
int
into
jae,pn
dec
jmp
cmpsb
add
jg
lahf
adc
jmp
jb,pn
mov
std
mov
test
loope
mov
add
clc
stos
daa
add
ds
pop
je
je
mov
clc
call
push
arpl
divl
xor
mov
xor
lock
les
pop
idiv
sbb
pop
stc
in
scas
in
cmp
cwtl
mov
aas
pop
cmp
jno
sbb
andl
or
xchg
je
lods
stos
sub
das
fucomi
sbb
stc
cmp
icebp
jg
dec
pop
outsb
rcl
and
js
outsl
sub
and
push
add
roll
out
stos
mov
mov
cli
jns
push
sub
jne
arpl
mov
sahf
clc
push
sub
es
or
mov
xor
pop
sub
test
sbb
lahf
out
fbstp
pop
pop
ja
loop
loope
dec
mov
cmp
outsl
movsl
outsb
jmp
shll
lea
inc
mov
ljmp
loop
adc
fbld
je
lret
ja
insb
bound
nop
adc
ret
push
shl
in
or
orl
xor
sub
sbb
fisubl
or
sub
cmpsl
lods
dec
in
out
push
ret
mov
and
enter
mov
jne
dec
cmp
push
or
roll
mov
xchg
movups
movsb
add
mov
cmp
in
je
scas
xor
mov
fcoms
push
mov
daa
stos
add
pop
dec
imulb
stc
int
inc
or
aad
xor
push
add
jle
lds
test
or
mov
mov
adcb
and
mov
lahf
movsb
dec
inc
repz
pop
add
inc
lds
xchg
repnz
repz
ret
dec
mov
aas
xchg
sub
call
out
push
xchg
inc
push
or
je
dec
cld
xor
mov
jecxz
addl
sbb
daa
cmpsb
pop
lock
jno
scas
aad
pusha
in
add
mov
insl
add
popf
cmpsb
cmp
cmp
sbb
sub
jne
inc
ljmp
mov
cmp
cmpsl
xlat
add
mov
test
push
int3
sbb
jae
loop
icebp
inc
imul
mov
sub
pop
sbb
mov
imul
mov
mov
outsb
jle
into
scas
repnz
jb
ret
jmp
lea
ret
mov
jnp
repnz
xlat
aaa
test
stc
xor
jl
jp
or
mov
fisttpl
pushf
or
sbb
dec
in
out
fidivrs
push
dec
dec
or
je
std
xor
int3
mov
mov
jecxz
mov
ja
jno
lods
repz
je
cmc
mov
idiv
jae
imul
push
int3
es
stos
push
insb
je
mov
push
cli
pop
add
pop
xchg
js
sbb
xchg
lahf
xchg
ficompl
push
jmp
loop
dec
jno
test
mov
pop
mov
xchg
jne
push
fldcw
jg
fsubrs
lea
shll
cmp
push
inc
sbb
insl
xchg
shlb
or
cmp
out
fwait
in
out
idivl
sub
mov
loope
sbb
mov
inc
rcl
fistpll
push
stos
mov
or
jge
push
sbb
movsb
cmp
into
xchg
orl
loop
pop
cltd
and
lds
add
mov
adc
mov
dec
in
xor
jle
scas
dec
in
sub
push
cmpsl
push
lret
cmpb
sub
inc
cwtl
sub
dec
inc
jmp
add
cmp
mov
jb
push
sub
js
out
jg
pusha
stc
xchg
loope
xor
jmp
lahf
mov
and
pusha
clc
mov
in
and
enter
mov
shll
mov
ss
fstpl
rorl
mov
jmp
sub
jge
div
or
mov
cwtl
jno
jns
sbb
dec
ja
lds
sbb
push
arpl
imul
es
cmp
or
xor
mov
sub
mov
pop
add
js
iret
dec
lret
bound
popf
xor
push
stc
cmp
pop
inc
xchg
xor
mov
outsl
xchg
mov
xor
dec
jp
jmp
testl
test
xlat
mov
mov
sbb
and
push
xchg
inc
iret
clc
pop
lds
stos
xchg
push
adc
adc
xchg
pop
add
adc
sbb
jp
test
xchg
fwait
sub
cmp
inc
in
adc
sbb
and
and
in
xchg
xchg
sti
js
adc
pop
sub
imul
popf
out
push
in
mov
sbbl
jns
test
dec
nop
test
leave
inc
and
add
sub
fstl
mov
xor
ficomps
scas
jle
roll
sbb
or
sub
or
mov
inc
jle
mov
fildl
call
cli
push
lds
test
mov
push
out
loopne
shrb
jnp
sbb
shlb
add
mov
jge
sbb
call
jg
adc
out
lds
sbb
daa
xor
das
cmpsb
repnz
lahf
imul
add
aad
lods
jmp
dec
cmp
imul
push
lret
adc
movsb
and
lods
push
std
inc
leave
inc
lds
cmpsl
fbld
not
jecxz
stos
leave
ja
jae
aaa
adc
mov
lods
testb
fmull
sbb
jne
test
mov
jne
mov
jbe
pop
cmp
not
fnstsw
pushf
mov
dec
rclb
dec
jns
mov
lea
inc
imul
lret
pop
nop
aas
or
fldl2e
gs
sbb
pop
push
sub
test
scas
mov
popf
adc
mov
icebp
ds
cmpsb
subb
fadds
lcall
js
push
push
stc
jl
mov
psraw
movsl
pop
jle
xor
or
lret
inc
xor
loop
xchg
pushf
pop
xor
sbb
push
enter
lods
repz
andb
insl
inc
xor
lcall
mov
mov
mov
aas
pop
enter
mov
dec
ds
push
das
fldcw
jp
int3
mov
clc
sub
or
add
inc
scas
xchg
xchg
add
sbb
nop
cltd
mov
push
adc
dec
cmp
ret
int3
js
imul
cmc
aas
adc
bound
pop
lcall
mov
cmpsl
mov
jecxz
push
xchg
fistl
mov
pushf
sub
aad
inc
stos
jo
or
sub
fwait
aas
jbe
xchg
sti
daa
aas
fildll
adc
jge
int
jle
mov
mov
jne
pusha
push
xlat
xchg
loopne
fidivl
push
lods
cmp
outsl
sti
xchg
mov
cmp
and
mov
pop
jae
adc
cli
xchg
pop
push
jns
out
jae
cmpsb
fisttps
sbb
pop
sub
in
push
arpl
cmp
xchg
inc
or
addr16
das
cld
mov
xchg
enter
xor
mov
aaa
xor
insb
mov
mov
or
jno
cmp
mov
xor
or
dec
cmp
push
aas
hlt
pushf
cmpsb
jb,pn
paddd
popa
pop
jo
imul
push
sbb
mov
addb
and
add
xchg
pop
sbb
int3
mov
test
aas
int3
stc
imul
in
pop
jp
add
mov
and
dec
roll
sbb
mov
pop
xchg
fcomps
pop
sbb
add
sub
into
and
and
xor
int3
movsl
daa
out
mov
mov
or
xor
pop
mov
push
jle
lods
push
mov
clc
dec
movsl
dec
xchg
arpl
dec
or
push
outsb
in
mov
addr16
mov
pop
mov
sbb
fnstcw
cltd
mov
push
jg
xchg
jmp
inc
mov
xchg
mov
mov
lret
push
add
cmpsb
push
pop
cmp
sub
sbb
or
cli
jmp
lret
test
mov
pop
dec
dec
pop
cmp
sub
sbb
or
cli
jmp
lret
test
mov
dec
dec
dec
pop
cmp
cmp
or
sbb
jmp
into
fdivrs
mov
jns
dec
bound
sub
cmp
or
push
jo
lret
and
inc
gs
mov
data16
push
mov
repnz
mov
push
movb
imulb
out
or
jnp
imul
stos
data16
push
mov
ss
fistl
lret
jb
imulb
sbb
or
jnp
push
pop
dec
xchg
decb
sbb
clc
lret
push
cmp
or
jnp
sbb
sbb
and
fwait
and
adc
add
repz
add
or
testb
mov
or
push
std
push
ja
or
cli
sti
aaa
jmp
daa
push
and
cmpsb
mov
mov
imul
sbb
inc
ja
arpl
dec
ret
cmp
adc
arpl
pop
mov
xchg
loopne
fcoms
xchg
mov
inc
mov
xchg
ss
sub
stc
lret
or
cmp
mov
pop
mov
arpl
mov
add
lret
arpl
push
inc
push
cmp
add
in
cmpsl
movsb
xchg
xchg
je
shlb
movsl
jg
jl
outsb
mov
sub
lahf
mov
pop
pushf
xchg
dec
add
stos
xchg
fwait
rorb
es
lret
xchg
jo
and
or
pop
xchg
dec
call
fstl
test
jg
arpl
dec
mov
std
fldcw
sarb
xlat
cmp
int
fbld
clc
aaa
lret
pop
mov
push
xchg
dec
mov
mov
mov
xor
and
fsubl
stos
and
push
out
and
fistl
lret
push
cmp
sub
sbb
or
jnp
imul
jbe
data16
push
mov
ss
fistl
lret
push
cmp
sub
sbb
or
jnp
imul
jbe
mov
cmc
hlt
push
scas
sbb
mov
clc
mov
data16
push
aam
mov
add
int3
daa
push
mov
xlat
adc
subb
mov
outsb
cmc
and
cmp
push
push
jb
aas
mov
je
into
adc
mov
xor
pop
sub
repnz
pop
mov
jb
jmp
push
push
popa
add
sbb
cmc
inc
outsb
dec
in
jns
movsb
aam
sahf
dec
out
sub
mov
xchg
adc
add
push
repnz
rcr
es
lret
add
xchg
mov
cmpsb
jns
cltd
push
sub
mov
arpl
ret
jae
jmp
ficoms
sub
inc
cli
gs
ret
cmp
into
xor
and
out
push
jbe
inc
push
jb
aaa
sub
fists
out
movb
push
in
cmp
mov
negb
mov
ret
sub
fisttps
adc
xchg
inc
sbb
push
outsb
adc
jbe
ds
fdiv
fstps
les
repz
out
sbb
int
mov
jge
push
mov
stc
lock
shl
icebp
cli
stos
dec
outsb
movsb
cltd
adc
mov
pop
push
push
lods
xchg
std
jnp
icebp
filds
cmpsl
mov
pop
cli
mov
pop
mov
outsl
inc
cmp
in
daa
mov
add
insl
pop
jmp
push
push
stos
cli
add
xchg
decl
dec
mov
mov
adc
aad
sti
cltd
pushf
xor
shlb
inc
andl
mov
dec
lock
mov
pushf
outsl
push
mov
subb
mov
idiv
daa
mov
icebp
inc
test
js
pushf
and
add
jb
xor
sbb
jle
pop
inc
sub
scas
les
pop
in
or
fiaddl
lock
jbe
adc
xor
out
insl
inc
in
dec
push
jg
mov
xor
loop
or
mov
repz
or
push
paddd
add
movsb
xchg
mov
push
clc
pop
mov
mov
in
pop
jno
addr16
mov
daa
xor
dec
insl
pop
scas
ss
rcrl
leave
jge
jmp
cs
xlat
pop
cmpsb
stos
push
pop
pop
dec
in
popf
vxorps
in
imul
jae
xchg
lret
adc
lea
push
mov
cmp
jge
adc
cmp
mov
jl
mov
out
shrb
leave
leave
inc
jae
and
aas
cltd
cmp
sbb
xchg
pop
adc
rcr
jge
push
pop
ds
and
imul
test
inc
cmp
mov
dec
lret
into
loope
lahf
sub
mov
in
push
enter
clc
fsubrs
sbb
xchg
sbb
cwtl
cld
or
cld
inc
test
pop
out
ret
sti
inc
es
pop
arpl
rcl
cmp
xor
addr16
push
fdivrl
gs
iret
fnsave
pop
and
and
xor
mov
mov
mov
int3
sbb
mov
cs
repz
rorb
and
pop
das
fs
add
daa
mov
in
aas
mov
pop
and
jb
flds
xor
and
cmp
loop
popa
mov
cmc
lea
arpl
and
testl
out
fimuls
sbb
pushf
sub
pop
dec
movsl
cmp
das
test
and
cmp
mov
cmp
popa
adc
dec
fildll
or
mov
aas
mov
cmpsb
fs
js
in
jmp
mov
mov
and
mov
les
mov
outsl
xor
xchg
jge
mov
pop
lcall
fiadds
mov
lods
push
mov
ret
lods
lock
push
icebp
ss
mov
in
js
sbb
repz
ja
pop
sbb
aad
aas
addb
repnz
loop
int3
jle
push
inc
jnp
shl
lods
adc
cs
mov
push
xchg
cmp
dec
rolb
into
mov
icebp
or
fwait
jmp
fwait
shll
repnz
jnp
sti
mov
sbb
jo
add
push
fwait
mov
stos
add
xor
lds
ds
cmc
xchg
pop
stc
mov
lahf
push
loopne
xchg
and
pop
cmpsb
bound
sbb
xchg
adc
mov
test
insb
mov
and
ret
mov
lds
jne
into
test
push
call
pop
mov
jecxz
or
mov
adc
dec
mov
dec
jnp
lret
cli
inc
mov
mov
push
lea
jns
outsb
dec
sbb
cld
roll
push
mov
ret
lods
fwait
mov
insl
push
retw
dec
sarl
and
addr16
sub
pop
loop
jecxz
cltd
and
sub
or
popa
gs
fcmovb
ret
add
add
adc
pusha
bound
fcomps
popa
sbb
int
inc
dec
add
and
or
and
pop
push
fwait
int3
or
loope
jecxz
popa
ret
bound
popa
loopne
divl
pop
or
mov
mov
dec
insl
pop
pop
sahf
jo
mov
inc
pop
aaa
call
scas
shll
in
mov
mov
mov
xor
pusha
mov
imul
sub
mov
xor
mov
dec
push
in
xor
adc
dec
dec
shll
stc
pop
rclb
in
mov
ficomps
add
lcall
jne
push
jg
rcrl
jb
add
mov
out
pop
in
testb
rcrl
xchg
add
push
mov
mov
xchg
in
mov
sub
add
data16
mov
add
sbb
and
dec
xchg
or
mov
out
mov
jae
xchg
outsb
mov
mov
inc
lahf
clc
out
adc
sub
adc
xchg
inc
js
sub
adc
fstps
push
rcl
loopne
int
inc
sti
sbb
hlt
mov
pop
leave
mov
sti
outsl
or
shl
mov
js
or
and
push
sub
mov
jns
jl
inc
jmp
cmpsb
jl
xor
xor
jle
test
jl
jnp
xor
xchg
add
into
imul
push
leave
repnz
ljmp
movsl
pop
cmp
sub
lds
ret
jnp
dec
mov
adc
xchg
and
bound
dec
inc
push
in
jbe
hlt
xchg
js
push
dec
pop
rcr
inc
pop
add
sub
fistl
int
fcoms
or
jle
repz
mov
push
rol
rolb
lods
test
fwait
mov
clc
shrb
xchg
inc
lock
mov
je
out
mov
cwtl
scas
out
pop
out
rclb
lods
mov
push
inc
mov
jne
into
xor
cmp
inc
inc
fsubp
dec
fwait
pop
addr16
hlt
pop
jecxz
add
and
enter
mov
push
jecxz
sub
repz
inc
and
adc
jg
or
orb
push
cmpl
dec
mov
xchg
jno
sub
rcrb
setno
or
cs
xlat
adc
dec
fs
xor
xor
mov
mov
and
ds
cmp
scas
int
mov
insl
jl
clc
fs
sub
inc
cwtl
daa
mov
ds
scas
arpl
cmp
sarl
insl
insl
les
push
js
arpl
fbld
lret
inc
in
sub
sbb
out
push
or
out
dec
sub
dec
push
test
dec
rorl
pop
sub
dec
push
xor
fimuls
fs
pop
and
fidivrs
pop
rolb
sbb
popa
push
int
in
out
xor
cwtl
sahf
jmp
pushf
sub
and
push
clc
dec
push
and
jp
nop
inc
pop
pop
pop
jmp
pop
jno
xor
pop
icebp
mov
cmp
jb
and
int3
jbe
cwtl
xor
inc
push
and
mov
push
add
jnp
cmp
xor
and
std
fiaddl
ds
stos
add
ljmp
movsl
dec
add
mov
aad
div
jne
adc
add
out
push
dec
andb
add
jp
or
mov
int3
outsb
js
in
mov
dec
jns
aad
dec
mov
rorl
fidivs
cltd
mov
pop
data16
add
or
ficoml
mov
iret
add
push
xchg
xlat
out
xorb
and
fwait
in
in
std
mov
cmp
mov
cmp
push
jg
insl
inc
adc
outsl
movsl
push
or
jmp
pop
jl
test
push
pop
aam
jle
xchg
pop
incb
in
sbb
loop
lahf
push
sub
adc
loope
jmp
ljmp
add
dec
cltd
xor
jno
mov
gs
add
movsl
add
out
gs
fisubs
cli
das
inc
fisubs
lcall
mov
js
jg
sub
test
and
stos
ret
xchg
mov
ljmp
or
jns
adc
pop
xchg
mov
cmc
or
mov
and
rolb
mov
sub
xor
xor
fidivl
mov
shl
jo
xor
jecxz
aam
daa
outsb
dec
mov
test
pop
pop
test
adc
jne
imul
sub
mov
loope
dec
dec
addr16
cmp
dec
call
inc
push
xor
hlt
push
pop
or
pop
call
xchg
jbe
or
sahf
je
mov
pop
sub
jl
pop
nopl
aam
lcall
lret
pop
mov
lahf
mov
rolb
add
mov
stos
outsb
mov
es
ds
sbb
movsb
xchg
inc
mov
arpl
mov
ret
fwait
sub
pop
addl
cwtl
sub
fsubs
xchg
mov
repnz
test
and
mov
and
pop
push
xor
insl
repnz
mov
mov
cmp
or
jne
stos
xor
or
or
jl
movsl
cld
adc
and
mov
shrl
test
je
sbb
out
push
sub
popf
aam
add
ret
jecxz
lock
cmp
push
dec
pop
cmc
inc
push
push
fs
arpl
ds
jo
jb
stos
adcb
mov
cmp
and
and
clc
push
adc
stc
dec
mov
mov
jmp
test
or
loope
int
adc
mov
or
adc
outsl
sbb
frstor
mov
xchg
jecxz
jo
imul
fstps
mov
inc
loope
pop
pop
test
fistpll
and
sti
pop
aaa
dec
xchg
push
pop
push
adc
and
lods
scas
inc
jge
and
stos
int3
jnp
movb
add
mov
pop
add
inc
sbb
push
mov
mov
outsb
divl
push
out
or
dec
or
inc
xchg
sub
and
rolb
jmp
jg
pusha
mov
les
lret
inc
lret
sub
dec
sahf
pop
stos
repz
jns
jl
lods
pushf
fdivl
mov
hlt
and
imul
bound
mov
dec
mov
xchg
pop
jne
icebp
lret
jg
sbb
dec
jge
mov
std
test
hlt
mov
jne
pop
test
aad
iret
pop
lea
adc
jle
push
add
jbe
fsubs
aad
lret
push
nop
jp
in
orb
rcl
mov
push
outsb
push
xchg
fnsave
test
popf
xor
xor
adc
mov
roll
js
test
sub
ss
mov
adc
or
mov
aam
sub
popa
or
mov
jecxz
popf
mov
sbb
cmpl
push
pop
push
lods
jne
aaa
scas
or
int3
cmp
adc
mov
push
jp
xor
xchg
xor
cld
jmp
add
cmp
incb
out
sbb
test
popf
cs
fisttpll
lret
paddd
imul
mov
stos
lcall
nop
xchg
loop
push
xchg
inc
popa
in
and
mov
test
rcll
cmp
pop
les
cli
mov
dec
add
push
notb
cmp
jge
icebp
mov
adc
adc
stos
xchg
addr16
test
mov
or
and
mov
test
bound
pop
test
shlb
mov
or
mov
add
lods
sbb
fiadds
mov
dec
push
push
outsb
jmp
ret
sbb
push
daa
mov
adc
cmp
leave
sbb
fs
jmp
jbe
popa
lret
das
fwait
inc
js
inc
sarl
aas
cmc
out
pop
dec
scas
out
pop
pushf
outsl
jo
dec
movsl
add
cmp
or
enter
push
push
mov
jmp
mov
dec
xor
bound
dec
in
xchg
sbb
cmp
ret
mov
jno
and
call
cmp
cmpsb
loopne
mov
cwtl
adc
add
movsl
mov
cli
popf
mov
jmp
mov
xchg
pop
mov
lods
dec
and
lods
loopne
hlt
in
stos
fcomp
cmp
aam
inc
add
lahf
jmp
lods
jae
rol
scas
shl
dec
shrb
lcall
loope
jmp
stos
xchg
test
lock
mov
cwtl
imul
mov
adc
adc
aam
sub
movsb
add
add
inc
call
cmp
adcl
jnp
push
in
pop
mov
xchg
jae
adc
adc
stc
add
dec
xor
inc
sarl
pop
add
imul
clc
cwtl
push
sbb
sub
add
cmpb
push
mov
add
insb
repnz
int3
dec
xchg
es
iret
out
adc
mov
in
leave
jns
dec
fbld
inc
pop
inc
cltd
jle
ja
xor
mov
in
mov
jl
jns
add
add
adc
outsl
addr16
jnp
iret
mov
sbb
and
lods
cmp
inc
enter
aas
addr16
xchg
lock
sbbb
insl
mov
pop
clc
pop
mov
hlt
inc
mov
xor
mov
dec
and
loopne
psadbw
les
xchg
bound
aam
pusha
cld
out
push
cs
mov
mov
mov
in
jle
pop
sub
cli
popa
test
sbb
push
jmp
rcrl
xor
mov
mov
fwait
push
push
mov
push
mov
sbb
sbbl
call
lock
pop
xor
stc
push
pop
shl
jo
dec
adc
scas
cmp
lcall
call
ret
or
sub
pop
push
sti
mov
arpl
pop
repnz
push
cwtl
cs
jecxz
jecxz
data16
jecxz
add
xchg
adcl
scas
scas
or
fcompl
cmpb
shll
std
xlat
in
shlb
xchg
repz
adcl
push
xor
call
ds
dec
pushl
popa
sub
sahf
leave
jns
sbb
pop
aam
inc
popa
adc
sbb
push
loope
mov
mov
jl
inc
in
sub
je
rclb
rcrb
inc
in
ret
mov
daa
daa
fcoms
push
cmc
clc
leave
enter
sub
pushf
and
imul
not
fisubrs
or
xor
or
fs
sbb
popf
sbb
adc
fmuls
daa
pop
mov
cmpl
lea
push
and
push
sub
in
mov
aam
jecxz
lret
push
mov
setb
adc
std
lods
inc
test
jmp
mov
ja
nop
lcall
cs
pop
cmp
in
pop
es
fs
in
aaa
shl
jb
les
gs
xchg
jp
stos
push
adcl
loopne
adc
pushf
sbb
xor
pop
mov
mov
test
cmp
inc
jmp
out
iret
push
fdivrl
jbe
adcb
pop
xchg
pop
mov
push
in
lret
test
sarl
mulb
add
sbb
rolb
shll
fs
loope
push
fwait
js
inc
notb
mov
sbb
cmc
outsb
sbb
push
idivl
inc
adc
pop
mov
in
mov
inc
xchg
adc
inc
mov
xchg
in
out
mov
dec
sti
das
mov
xor
inc
pop
pop
scas
push
mov
pushf
lods
sbb
mov
sub
lcall
and
cmp
loope
mov
jecxz
jb
mov
and
mov
pop
xchg
xchg
xor
dec
push
dec
out
les
mov
or
jbe
addl
cmp
lahf
push
cs
or
call
push
incl
aam
push
insl
pusha
cmp
fwait
sbb
dec
cmp
in
cmpsl
addl
iret
cmp
loopne
push
xlat
pop
in
dec
push
push
sub
mov
cli
and
xchg
mov
in
aam
popa
lgs
jmp
sbb
sbb
sub
adc
hlt
popa
adc
scas
pop
pop
xor
cmpsb
mov
mov
aam
mov
sbb
inc
add
ret
sbb
lcall
mov
es
and
pop
loopne
sbb
movsb
mov
push
add
push
rcrb
dec
js
pop
lds
mov
rdtsc
push
pop
xor
mov
xor
push
mov
ret
cwtl
jnp
popa
rcrl
lret
add
outsl
in
fistl
scas
sbb
insl
ds
ret
daa
pusha
push
ret
fstl
ljmp
imul
lret
dec
imul
jns
push
inc
sbb
pop
stos
add
push
xor
sbb
or
xor
inc
or
add
sub
sub
mov
xor
lahf
jns
pop
pop
push
std
jae
insb
fdivr
or
sbbl
subb
pop
ficompl
push
push
xor
enter
adc
pop
dec
subb
cmp
jno
lret
or
add
test
cmp
in
sub
imul
and
leave
cmpsb
ret
jo
ljmp
mov
pop
gs
sbb
fidivs
popf
mov
fiaddl
mov
fwait
xchg
js
in
jle
outsl
cmpsb
mov
lcall
adcb
scas
sub
jbe
dec
jno
jo
push
push
les
adc
ficomps
push
lea
sbb
das
jmp
inc
cmp
mov
xor
pop
xchg
loopne
mov
mov
push
jne
cmpsb
jne
test
push
ljmp
adc
insl
rolb
mov
fdecstp
mov
inc
push
aaa
pop
mov
sub
mov
popa
mov
mov
pop
dec
xlat
data16
bnd
or
insl
sub
mov
aam
xchg
lea
mov
push
mov
or
ja
mov
jp
inc
push
pop
jb
mov
jb
dec
das
sbb
add
dec
fadd
das
fbstp
fmul
mov
jns
orl
push
pop
insl
mov
test
inc
push
mov
sub
flds
rcrl
mov
pop
cmp
mov
insb
xchg
lcall
adc
push
popl
loop
arpl
sbbb
sbb
data16
sbb
rcr
add
inc
push
add
fisubrl
or
fmull
jno
mov
lea
pop
adc
fistpl
cltd
add
jmp
jo
jg
sbb
aaa
rorb
xchg
xchg
loop
dec
lds
jmp
pop
mov
sub
jp
notb
movsb
or
jmp
jle
imul
outsl
and
das
adc
xorb
cmp
inc
xchg
std
inc
adc
xchg
sti
addb
jno
dec
fisttpll
push
insb
mov
cmc
add
mov
push
pop
pop
adc
and
movsb
mov
repnz
sub
outsl
adc
mov
sbb
adc
or
xor
sbb
nop
inc
outsb
mov
xchg
cmpb
js
cs
lods
stc
jns
cmp
push
pop
and
mov
adc
cmp
add
test
out
xchg
mov
cli
clc
add
sti
pop
add
sbb
mov
icebp
mov
fmull
sbb
fildl
ret
xabort
mov
or
add
mov
xchg
hlt
mov
or
sbb
movsb
dec
lea
inc
xchg
push
jecxz
push
and
je
test
jne
sub
loop
and
shll
sub
leave
inc
aaa
sbb
mov
xor
jnp
fisubrs
add
pop
cmpl
add
data16
cmp
fistl
lret
push
cmp
sub
sbb
or
jnp
imul
jbe
data16
push
mov
ss
fistl
lret
push
cmp
sub
sbb
or
jnp
imul
jbe
cs
mov
ss
cs
sbb
or
jnp
imul
jbe
data16
push
mov
ss
pop
xchg
dec
push
les
aam
mov
or
mov
fadds
call
cltd
in
test
out
inc
aaa
js
push
ja
sub
enter
call
idivl
pop
dec
aaa
jns
push
ja
sub
enter
call
idivl
and
pop
sbb
sub
or
xchg
jecxz
mov
lret
lea
and
mov
enter
out
adc
arpl
or
jmp
pop
sub
sbb
ljmp
jge
or
and
shrb
pop
aad
inc
jl
mov
dec
aaa
jle
xchg
pop
out
xor
mov
in
push
xchg
fucomp
cmpsl
mov
jb
out
lcall
in
test
pop
call
push
pop
pop
in
adc
addr16
mov
pop
mov
pop
push
daa
push
enterw
fidivs
loopne
xlat
xor
and
testl
lret
cmp
xlat
pop
fadds
call
idivl
pop
dec
aaa
js
push
ja
outsb
fdiv
mov
mov
mov
xchg
fucom
fcoml
sub
aaa
sub
push
insb
inc
dec
adc
and
mov
movsb
shlb
or
out
mov
jb
push
cmp
jge
sahf
sbb
jl
cltd
xchg
fwait
stos
mov
mov
pop
dec
aaa
js
push
ja
sub
enter
call
idivl
pop
dec
aaa
js
push
ja
sub
loopne
xchg
mov
sub
or
adc
ss
xor
push
mov
cmpsl
subl
insb
movsl
xchg
fiadds
jo
mov
add
aas
fwait
int
mov
xchg
popa
or
aad
pop
xchg
adc
jb
movsb
sbb
jg
inc
dec
jmp
cmp
mov
cmpsb
aad
mov
loope
cmp
push
push
pop
push
inc
and
aas
pcmpeqb
lock
pop
mov
out
sahf
push
xchg
dec
and
push
push
ret
add
pop
inc
push
inc
adcb
fistpll
aas
sub
adc
cmp
dec
test
add
dec
lods
out
inc
in
addl
scas
xor
popf
jae
pusha
or
xor
mov
xchg
leave
ficoml
das
and
cmp
loop
jmp
sti
pusha
out
inc
mov
clc
xchg
cs
test
daa
push
daa
xchg
mov
lock
int
cmpsb
ljmp
mov
dec
sbb
sub
jl
leave
cs
mov
fisttpll
sbb
and
push
add
adc
flds
movsb
imul
inc
orb
dec
push
push
adc
imul
mov
xchg
mov
inc
jg
outsl
test
sahf
or
outsl
xor
jecxz
cmp
xorl
fisttps
pushf
sub
cld
pushf
jl
adc
xor
stc
jae
sahf
push
and
inc
ja
sbb
mov
jecxz
iret
cmp
mov
nop
daa
xor
lret
mov
mov
clc
inc
xchg
push
jp
push
lods
mov
push
fsubl
push
in
adc
sbb
movsb
arpl
push
and
js
nop
hlt
and
packsswb
sti
push
daa
ret
imul
push
push
or
sbb
imul
pusha
cmp
inc
bound
in
lods
cmp
ds
sub
cmp
jns
xchg
mov
mov
out
push
stos
insb
push
lds
ja
fists
mov
les
push
loopne
out
in
mov
enter
or
lret
imul
push
lret
inc
pusha
scas
aaa
or
in
and
imul
inc
mov
ror
js
cmp
xor
jmp
int3
cmp
mov
xchg
jge
push
daa
mov
clc
in
or
imul
pop
mov
cmpsb
stc
or
clc
loop
ss
mov
xor
mov
sbb
repz
add
insb
int3
lcall
cmp
push
mov
push
xor
xchg
mov
sub
xor
pusha
imul
jno
dec
jmp
in
sub
aaa
xchg
pop
mov
xor
cmp
mov
xor
adc
popf
mov
mov
xor
in
insl
jge
addb
out
inc
int3
rorl
sub
push
lock
push
lret
in
jnp
repz
pop
cmp
or
jns
mov
mov
sbb
jecxz
fbstp
push
loopne
mov
shl
dec
and
lcall
shl
pushf
pop
pop
jno
in
ss
sbb
cmp
xchg
mov
inc
push
aad
push
js
or
icebp
xchg
jno
dec
jb
adc
in
mov
out
xlat
imul
or
or
in
push
pop
ret
xchg
push
test
adc
fmulp
icebp
jmp
popf
fcompl
out
in
ljmp
loope
stos
sub
pop
or
cmpsl
add
in
push
out
loop
inc
outsl
and
test
inc
jecxz
scas
push
in
sbbb
inc
sub
and
bound
pop
data16
sub
push
lock
roll
lcall
push
sub
loop
push
push
and
mov
stos
lock
sub
mov
and
pusha
pcmpgtd
jge
add
mov
and
sar
sbb
mov
fistl
hlt
mov
fstpl
cld
movsb
adc
sbb
iret
pop
xchg
xchg
or
jae
pop
xor
xchg
xchg
push
fstpt
push
mul
xor
scas
inc
mov
test
mov
test
xchg
insb
out
orl
adc
sbb
mov
fmuls
push
sbb
push
sbb
pop
push
clc
loope
stos
jecxz
jbe
imul
loope
ficoml
jle
and
mov
xchg
pop
das
lret
adc
sbb
sub
aam
mov
push
fsts
dec
pop
outsl
fcomi
stos
inc
sub
mov
push
cmp
aad
xlat
rcrl
mov
push
rol
aad
flds
and
xlat
test
cli
mov
popa
xlat
insl
out
xchg
pop
mov
jmp
or
lea
pop
fimuls
lea
mov
xchg
dec
insl
data16
ret
xchg
scas
das
sub
and
enter
sahf
push
rcl
mov
and
xchg
stos
adc
ss
fsubl
call
out
jb
pop
pop
mov
data16
inc
push
pop
xor
fildll
rcrl
movb
mov
outsl
test
fs
lahf
cld
or
mov
dec
out
pop
rcll
mov
aas
sbb
addr16
outsb
enter
pushf
loop,pt
pop
gs
cld
cmp
test
sbb
mov
adc
int3
mov
sub
or
fsts
into
sub
xchg
sbb
hlt
sub
loopne
xor
shlb
and
in
ret
xchg
inc
inc
rorl
into
inc
out
push
shrb
sbb
jp
outsl
sbb
xor
bound
insb
push
imul
push
adc
addr16
xor
cmp
scas
cld
lods
mov
jno
iret
xor
cmp
lock
mov
xor
cs
xor
fnstsw
add
lods
mov
mov
add
sub
mov
dec
and
rcll
scas
or
dec
test
mov
mov
inc
xlat
imul
jae
pop
mov
inc
dec
xchg
adc
jns
add
imul
adc
xchg
push
loop
adc
pop
pop
sti
mov
mov
in
rcrl
insb
and
xchg
stc
cmp
std
mov
mov
add
xor
ljmp
mov
xchg
call
push
cwtl
orb
fdiv
into
and
sbb
and
cld
or
inc
jb
ficoms
lods
sub
lahf
fimull
pop
mov
xor
js
pop
mov
pop
insb
fwait
adc
pop
int3
adc
inc
add
mov
adc
jge
pop
mov
cmp
adc
mov
mov
in
xchg
pop
sbb
xchg
and
xchg
jge
jmp
pop
lahf
jae
mov
pop
mov
daa
call
rorl
stc
lods
stc
add
lods
xor
jle
push
test
xor
aas
outsb
cmp
mov
cmp
out
pop
dec
outsl
mov
pusha
shll
mov
jbe
cmp
imul
insb
cmp
mov
aam
sub
icebp
jg
fnstenv
xchg
movsb
xor
jmp
mov
enter
cwtl
sub
mov
jbe
lcall
mov
insb
jo
jle
adc
data16
fcompl
lods
insb
lock
or
xchg
dec
call
std
mov
ljmp
add
push
stos
pop
bound
and
jae
xor
cmp
and
and
mov
push
fidivs
iret
sar
push
pushf
repz
and
imul
imul
sbb
test
int
lods
or
mov
jmp
cmp
cmp
imul
jecxz
rcll
lret
lds
mov
nop
das
stos
lea
push
adc
mov
and
push
jnp
pop
pop
enter
pop
jle
ret
inc
pusha
pop
pop
push
cmpsl
and
add
jle
lea
fistl
sbb
in
in
out
sub
aas
cmp
test
sti
push
movsb
sarb
or
adc
ds
rcll
shl
loope
rcr
ds
jmp
adc
cwtl
xor
dec
outsl
loop
jns
aaa
std
mov
or
enter
test
adc
call
cmp
xchg
lahf
mov
add
in
sub
scas
fimull
jle
pop
divl
sub
add
sbb
mov
mov
or
pop
sbb
data16
cmpl
bound
xchg
out
inc
mov
and
jbe
in
add
jnp
daa
movsb
push
mov
es
adc
adc
addr16
jge
das
cltd
movsb
dec
dec
or
mov
stc
inc
mov
inc
adc
pop
inc
nop
sahf
push
xchg
xor
sbb
stc
adc
fs
jge
add
sub
fnstenv
add
daa
add
sub
mov
xchg
lods
dec
shll
sbb
loop
mov
sti
movsb
push
jb
dec
xchg
adc
mov
test
in
push
jo
rcpps
mov
inc
test
mov
push
push
push
int
jbe
adc
fisubl
push
or
mov
scas
mov
jl
sbb
loop
cltd
jo
xchg
int3
rcrb
stos
fwait
test
adc
pop
sub
pushw
sbb
imul
mov
fisttpll
adc
scas
lock
mov
sub
xor
dec
push
lret
inc
out
jl
xchg
jbe
mov
adc
std
mov
jo
incl
fsub
jo
xchg
push
mov
mov
imul
mov
adc
push
rclb
push
fmull
out
or
in
int
out
dec
sti
push
mov
xchg
adc
add
arpl
add
or
stos
sub
adc
and
out
fiaddl
cmpsb
inc
insb
cltd
sbb
insb
adc
in
mov
mov
push
aaa
or
or
std
mov
sub
jle
sub
sub
call
fidivl
fs
es
shrb
iret
clc
or
shll
lret
out
mov
mov
xor
xorb
je
or
dec
test
xor
out
xchg
pop
add
movsl
dec
push
ret
sbb
jno
mov
jmp
mov
dec
jmp
adc
les
adc
cmp
xchg
add
and
jl
mov
lahf
daa
cmp
or
push
push
pushf
rorl
mov
cs
mov
icebp
sbb
sbb
jo
subl
pop
jmp
int
cmp
and
adc
fwait
xor
and
clc
psubsb
adc
daa
mov
add
rcrb
pop
and
adc
fiadds
adc
xor
xchg
mov
fnsave
and
sub
push
in
jge
mov
dec
push
outsl
xor
iret
lret
add
mov
pop
jmp
xchg
mov
fsubr
pop
rcrl
cmp
mov
repnz
and
sub
xchg
mull
xchg
push
fdiv
lock
xlat
pop
or
sti
lret
xor
mov
mov
dec
xchg
mov
ljmp
xor
mov
bound
imul
jne
pop
lahf
mov
data16
pop
mov
std
lcall
data16
insb
shl
sub
xor
js
xchg
push
sub
ret
fidivrl
mov
pop
int3
stos
imul
mov
addr16
xchg
jnp
iret
mov
and
clc
pop
xchg
add
adc
sbb
pop
and
jmp
dec
sub
xlat
aaa
adc
xor
cwtl
sub
sahf
or
xchg
std
jp
unpckhps
inc
pop
arpl
jno
mov
push
adc
pop
testl
push
mov
mov
pushf
aaa
cmpsb
push
jmp
mov
jle
xchg
push
std
lahf
mov
je
mov
pusha
or
outsb
and
xor
jle
inc
ss
add
loope
cmc
aaa
scas
fwait
add
aas
push
dec
or
lods
jecxz
dec
movsb
pop
or
outsb
pop
cmpsl
push
orl
arpl
int
lcall
mov
ret
mov
xchg
out
pop
add
jp
pop
sbb
and
xchg
cltd
out
pop
xor
pop
add
lahf
out
and
mov
cld
pop
std
shl
sbb
sub
pop
clc
fldt
push
cmp
movsl
outsb
out
mov
add
pop
adc
inc
and
repnz
insl
loopne
sub
lcall
popa
jnp
dec
loopne
adc
sbb
mov
scas
ret
pop
test
mov
imul
dec
mov
fsubl
push
std
out
add
and
sbb
pop
in
push
rcrl
jp
pusha
inc
out
leave
test
mov
shlb
lret
push
in
push
jp
test
mov
pop
clc
jmp
sbb
push
push
xchg
sbb
in
fwait
and
mov
sbb
sbb
fld
arpl
lahf
push
xor
sbb
mov
repnz
lock
sub
mov
insb
dec
sbb
jne
or
addr16
mov
xor
in
insb
xorl
adc
fmull
or
lret
pop
mov
andl
clc
mov
and
or
jg
xchg
ss
lret
das
xchg
mov
push
cmp
xorl
sbb
mov
and
addl
rcrb
movl
jmp
cli
adc
xor
inc
xchg
mov
add
xchg
pop
imul
stos
jl
inc
cli
setle
rclb
das
mov
push
stc
xor
jns
pop
mov
stc
inc
cmp
push
sti
xchg
or
ss
push
mov
inc
add
xchg
subl
mov
or
mov
mov
pop
xchg
adcl
test
cmc
test
loopne
fdivl
shrl
inc
sbb
adc
popf
pushw
mov
push
xchg
push
jecxz
sub
push
mov
and
jmp
in
adc
or
insl
lods
adc
sbb
ds
cmp
mov
pop
leave
scas
shll
std
xchg
es
dec
imul
fnstenv
mov
sub
sbb
or
jp
pop
and
jmp
mov
mov
icebp
mov
rclb
sbb
pop
ficoml
xor
pop
mov
sbbb
addb
aam
movsb
push
xchg
jo
mov
add
push
fists
adc
or
push
xor
dec
cmp
jp
dec
dec
js
mov
jg
clc
jns
mov
push
sti
cmp
xchg
inc
imul
and
mov
push
xor
jge
icebp
adc
gs
mov
inc
cmc
or
lods
aaa
leave
jmp
insb
cmp
cwtl
movsb
cmp
jae
insl
xchg
sub
into
jmp
lea
lahf
dec
xor
mov
inc
ss
sub
add
fildll
sbb
cmpsb
mov
sti
outsl
loope
mov
call
xchg
gs
mov
sub
sub
jnp
push
push
fmul
dec
jb
or
jp
repnz
lea
fldln2
icebp
scas
pop
in
repz
and
xchg
adc
mov
xchg
cli
push
jmp
push
hlt
cmpsl
mov
out
pop
xchg
pop
sbb
in
and
and
cmp
xchg
xchg
mov
rcr
xchg
mov
add
sti
pop
mov
dec
xchg
and
outsl
leave
lods
ret
out
flds
mov
lods
pop
pop
dec
push
mulb
jbe
nop
mov
xchg
mov
insb
fs
jne
xchg
out
fnsave
fnstenv
fistpll
scas
mov
mov
popf
mov
mov
xchg
push
shll
in
mov
pusha
loop
xor
xor
and
daa
push
push
ss
cmp
loope
loop
insl
push
pop
push
dec
push
jno
in
stos
pop
mov
push
mull
jl
pop
push
xor
jmp
mov
add
or
push
nop
xchg
adc
sub
fistpl
inc
popf
inc
arpl
out
aam
dec
mov
shlb
test
popa
sbb
ret
dec
nop
adcb
fbld
xor
jnp
mov
inc
cld
leave
cld
popaw
lods
iret
rclb
adc
xor
add
inc
scas
jno
mov
fmuls
jp
lods
sub
jmp
je
cmp
cmc
sbb
mov
out
mov
fmuls
mov
sub
stos
or
and
pop
movb
bound
shl
ljmp
mov
repnz
jbe
cmpsl
dec
lret
lret
icebp
mov
movsl
or
movsb
mov
or
shl
sbb
fwait
mov
fxch
or
sti
shll
pop
xor
or
push
negb
lods
ja
jg
shll
sub
or
shl
adc
inc
test
jmp
jge
dec
pushf
jmp
mov
dec
into
hlt
adc
ss
cli
lret
jl
cmpsb
int3
ss
fmulp
lahf
clc
fwait
add
mov
ss
enter
lods
and
xlat
sub
xchg
pop
out
mov
out
cld
cmp
push
pop
push
cmp
insb
jo
pop
mov
clc
xor
in
mov
dec
clc
adc
jmp
and
add
push
mov
and
xor
test
adc
pop
fdivrs
mov
add
inc
fwait
dec
fdivrl
and
pop
lods
xor
mov
push
sub
mov
arpl
inc
int
or
mov
cmp
pop
sbb
push
dec
iretw
ret
push
pop
cmp
mov
cli
inc
push
ljmp
nop
mov
fcompl
xchg
adc
scas
xor
mov
int
jno
faddl
daa
push
pop
out
sbb
jae
jecxz
jo
decb
mov
jge
or
xchg
xchg
mov
lea
mov
pop
mov
xchg
je
push
mov
xchg
push
lea
mov
jne
mov
fmuls
dec
push
ds
jmp
popa
repnz
test
out
jmp
xchg
cmp
jle
pop
loop
scas
pop
data16
call
push
lahf
test
or
outsb
jl
insl
and
imul
aad
je
call
fnstenv
push
dec
test
cmpl
nop
jbe
lcall
mov
sbb
lods
xor
pop
push
or
hlt
pop
inc
xchg
mov
shlb
insb
lock
jne
and
ret
jmp
icebp
xchg
or
jb
int3
and
movl
jo
scas
cmp
in
movsl
pop
std
ficoms
imul
orb
add
cmp
ja
xchg
adc
decb
push
cmpsb
imul
push
xchg
adc
jp
sbb
daa
jne
push
sahf
shr
sub
dec
ss
lea
inc
mov
mov
xchg
pop
test
mov
pop
sub
jg
dec
insb
fisttps
int
pop
mov
ss
test
xchg
xor
push
inc
pop
mov
test
incb
enter
sbb
push
inc
in
push
inc
sbb
or
mov
vandnps
out
dec
clc
mov
push
ret
push
mov
dec
inc
aad
fwait
xchg
dec
cmp
mov
je
into
bound
jbe
icebp
sahf
popa
cmp
cmpsl
daa
or
in
xor
data16
stc
sti
pop
fucom
ret
fildl
stos
cli
cli
fcmovu
pop
dec
test
dec
popf
dec
mov
push
popf
pop
stos
mov
pop
fmuls
sub
mov
dec
xor
jb
cmp
xor
mov
push
mov
enter
sbb
mov
out
inc
mov
inc
or
cmc
mov
mov
jecxz
arpl
push
and
aam
in
dec
push
in
in
fcoms
mov
stc
dec
adc
xchg
sbb
adc
push
std
gs
movsl
mov
sbb
xor
sub
push
pushf
int
insl
pop
xchg
test
xchg
pop
add
out
push
fbld
mov
int
sub
mov
popa
ror
mov
test
add
lahf
std
pushf
mov
sub
add
jno
push
scas
dec
ja
or
xor
add
sbb
push
scas
scas
punpckhdq
call
mov
xor
popa
dec
aam
cmpsb
jnp
dec
jb
insb
sub
enter
movsl
lods
lock
ljmp
ficomps
and
jecxz
insl
xchg
lods
sahf
jg
push
jmp
mov
pop
cmpb
xor
jo
sahf
movb
cmp
jb
fmul
jge
pop
mov
loopne
mov
jl
mov
push
and
adc
push
jnp
in
push
pop
mov
dec
fisttpll
iret
loop
adc
idivb
ljmp
insl
jecxz
in
enter
call
idivl
pop
dec
aaa
js
push
ja
sub
enter
call
idivl
pop
dec
aaa
js
push
ja
sub
enter
call
idivl
pop
dec
aaa
js
push
ja
sub
enter
call
idivl
pop
loop
js
pop
daa
nop
aaa
testl
mov
fwait
int
fnstsw
mov
jge
dec
sub
sub
imul
int
fnstsw
jmp
sti
jge
jge
dec
sub
sub
imul
aad
lds
xchg
jmp
sti
je
pop
inc
adc
cmp
push
dec
jnp
mov
push
decb
pop
sbb
pop
xchg
sub
adc
sub
insb
addl
mov
popa
inc
xchg
mov
repz
sub
rorb
sahf
add
pop
fwait
xlat
outsb
pushf
cmp
in
pop
jp
lret
and
cs
sub
xchg
sbb
lcall
mov
stos
out
jl
js
mov
or
push
jo
inc
jge
inc
push
lret
movsl
and
adc
lods
insl
dec
mov
or
cmpl
add
stos
and
push
add
jle
hlt
lock
das
or
scas
or
mov
fwait
int
fnstsw
jmp
sti
je
sbb
inc
cmp
imul
test
test
lcall
adc
inc
cmp
es
and
jo
or
shll
scas
mov
sti
cs
sbb
jge
push
sub
push
jns
mov
xchg
out
mov
cmpsl
mov
sti
insl
or
dec
sub
sub
imul
int
fnstsw
jmp
sti
insl
or
dec
sub
sub
imul
jb
scas
push
push
mov
cmp
jge
imul
add
pop
inc
push
popa
xor
dec
add
dec
cli
out
pop
ja
sub
cs
xacquire
pop
rorb
pop
mov
mov
push
mov
pop
mov
pop
jno
outsl
cmp
andl
mov
popa
jbe
or
jg
add
sub
ficoms
fcmovne
dec
cmp
xchg
sub
in
jnp
rcr
subl
fistpll
packsswb
mov
dec
mov
mov
xor
and
stos
aaa
fs
push
jecxz
cld
nop
adc
das
xor
sarb
mov
fmull
dec
jg
sbb
adc
xor
pushf
out
shll
dec
jge
lock
or
xchg
cmp
adc
pop
ja
pop
imul
xor
sbbb
inc
push
aad
mov
cmp
xchg
mov
js
fldcw
xchg
ss
cld
mov
push
hlt
ljmp
xchg
stos
cs
out
xor
jae
sbb
mov
shlb
outsl
jecxz
xlat
mov
or
pop
cmc
test
out
test
or
xor
push
xchg
inc
xor
mov
cmp
cmp
std
loope
data16
or
dec
pop
sbb
pop
push
pop
xor
mov
leave
pusha
lret
or
sbbl
fs
bound
mov
loop
mov
mov
int
inc
sbb
ljmp
hlt
in
xor
jbe
inc
inc
idivl
lahf
jmp
out
dec
icebp
or
aas
shll
and
adc
int
ret
pop
cmp
adc
fbstp
sub
shrl
dec
inc
cltd
dec
inc
incl
and
jbe
push
xor
mov
loope
sub
out
xor
sbb
push
sub
jb
loop
mov
or
jecxz
ficompl
jno
cmp
test
je
shl
pop
xor
inc
dec
data16
mov
push
and
aad
repnz
cmp
push
test
cmp
jle
dec
xor
rcrl
iret
and
js
jmp
lret
xor
mov
pop
xlat
and
imul
loop
jg
stos
fcmovnu
lods
cli
inc
jbe
inc
xchg
xchg
in
xlat
jecxz
jmp
js
insb
in
or
shr
lret
outsb
and
or
pop
mov
sub
int
int3
push
addr16
push
inc
mov
out
je
pop
mov
sub
jle
xorb
cmp
bound
push
lahf
sbb
test
mov
cmc
insl
push
paddusb
sbb
in
jl
test
sbb
js
lret
ja
mov
and
jb
and
xor
mov
out
adc
test
xchg
mov
sbb
out
subl
sbb
ret
fdivl
or
mov
jo
es
das
xchg
gs
dec
shl
jmp
mov
sub
dec
cld
or
push
jmp
jg
jo
cmp
cmp
push
lock
test
test
xor
mov
push
out
mov
sbbl
sbb
dec
sarb
dec
mov
lahf
mov
mov
or
sub
insb
jo
mov
sbb
lret
out
lods
vxorps
inc
jmp
lods
cmpl
lea
mov
and
insb
mov
repnz
push
mov
inc
jo
scas
test
pop
adc
pop
aad
sarl
pop
sub
ss
in
fucomip
movsl
in
push
xchg
xchg
pop
fnstenv
add
test
adc
mov
enter
icebp
or
movsl
shlb
push
mov
dec
add
negb
jo
loope
inc
and
adc
pop
adc
test
jle
stos
lods
dec
push
dec
div
lock
pop
js,pt
test
stos
into
pop
mov
mov
outsb
cmp
imul
filds
inc
inc
in
ret
lea
fcoms
inc
mov
fmul
and
aam
lea
in
adc
jecxz
iret
xor
add
mov
in
popf
testb
dec
call
jmp
cmc
es
repnz
pop
mov
or
nop
push
inc
jmp
aas
fstpt
xchg
cmp
gs
jns
pop
mov
pop
cmp
sub
xchg
xor
mov
daa
cmpsb
insl
fwait
jle
inc
popf
aaa
cli
mov
mov
sub
adc
in
stos
test
mov
imul
rclb
add
in
pop
cmp
mov
jnp
push
jp
dec
mov
test
sbb
nop
sbb
dec
mov
cmc
popf
popa
mov
clc
jbe
ret
sub
call
sbb
push
mov
push
cmp
pause
push
mov
lods
or
sbb
aas
sbb
ja
mov
mov
ja
dec
pushf
inc
sub
jmp
add
addl
stos
ja
dec
lret
popf
inc
cmp
jl
push
ds
lock
hlt
lods
or
pop
aaa
sbb
addr16
fcmovb
mov
std
sub
push
js
mov
mull
int
xlat
cmp
les
adc
sbb
jl
and
push
movsb
test
xor
sti
lods
ljmp
repz
dec
enter
cmpb
xor
outsl
inc
in
lahf
xlat
js
jecxz
fimull
mov
out
jo
iret
jmp
sub
pop
lock
dec
sbbb
into
xor
rcll
add
xlat
roll
loopne
insl
sbb
int3
jge
hlt
lcall
mov
in
and
and
iret
sbb
mov
ja
mov
nop
cmpsl
cmc
sub
sub
adc
and
mov
sub
in
mov
jecxz
arpl
cmp
ret
loop
push
fdivl
sub
pop
in
call
out
pop
mov
sahf
xor
ja
iret
test
xchg
fcomps
jg
enter
in
xor
push
mov
mov
push
inc
sub
ljmp
ljmp
lock
xor
add
andb
testb
repz
out
fisttpll
mov
jnp
nop
add
fisubrl
daa
arpl
stos
sbb
es
xor
scas
mov
sahf
aas
mov
mov
mov
daa
pushf
lret
sub
int
das
inc
and
and
dec
call
popf
jecxz
jle
mov
fwait
testb
pop
flds
pop
jno
xchg
push
adc
imul
aaa
cltd
ss
mov
ds
das
xchg
push
and
sbb
sarb
adc
in
cmp
pop
pop
sub
fld
xor
or
arpl
or
push
into
mov
leave
orb
and
and
adc
mov
ljmp
cld
and
sbb
sub
push
inc
pop
push
or
test
xchg
shlb
xchg
arpl
cld
mov
insl
add
mov
popa
jno
jne
sbb
ja
xchg
xchg
sahf
pushl
jecxz
push
arpl
mov
push
fmul
test
cs
push
leave
movsb
psubw
dec
sbb
xlat
and
add
cld
outsl
loope
mov
pop
push
xor
add
inc
jno
lock
jecxz
xor
inc
ja
adc
xchg
andb
rorl
or
fwait
xor
test
ss
jb
dec
daa
mov
cmp
cli
je
pushw
scas
nop
hlt
push
addr16
pop
jmp
and
cwtl
aas
pop
out
cmp
bnd
or
enter
add
mov
push
sti
mov
sbb
sub
rorl
jp
negl
lcall
aad
out
dec
movb
imul
clc
outsl
lret
mov
push
cs
in
sub
push
ficoml
add
pop
push
mov
and
sbb
cmc
mov
mov
out
dec
cmp
jne
pop
inc
insb
and
cld
or
cmc
mov
or
pop
int
mov
push
mov
mov
loop
jns
in
repz
loope
mov
subb
outsb
sbb
inc
cmp
std
shl
inc
sub
and
sub
cmp
gs
shrl
cmp
stos
jae
jo
notb
aaa
in
lods
or
les
mov
jno
in
mov
jne
out
sahf
enter
loopne
xchg
push
mov
jns
int
mov
sbb
inc
mov
adc
and
push
cmc
ret
or
daa
shr
divl
mov
sbb
ror
iret
icebp
push
fcomp
jmp
sbb
xchg
pop
lret
mov
xchg
push
adc
mov
pusha
clc
notl
dec
push
xor
adc
pop
daa
enter
xor
lea
shlb
int
mov
mov
insl
loope
shrb
mov
fwait
dec
inc
outsb
loope
cmpsb
sub
shll
in
aas
data16
push
sub
sbbb
sar
jnp
jle
jle
arpl
out
pop
mov
xchg
push
and
das
sbb
xchg
lret
pop
fistl
push
outsb
jns
and
sub
sub
fsubrs
sbb
test
movsb
jb
or
std
push
jmp
adc
je
mov
xchg
inc
mov
orl
aam
daa
imul
jg
xchg
dec
pop
xchg
in
inc
cmpsb
mov
add
stc
push
xchg
jmp
sbb
jmp
mov
out
xchg
enter
jnp
sbb
cwtl
sub
roll
jecxz
inc
mov
cmp
test
jnp
jae
out
push
or
insb
push
sub
xchg
enter
ret
sub
scas
xchg
pop
or
adc
or
rcrl
xchg
dec
xchg
cwtl
sarb
adc
jg
rcr
mov
fcomps
arpl
test
add
call
daa
bound
lods
push
pop
mov
loop
call
scas
push
rcrb
in
inc
sbb
movsl
mov
dec
out
out
into
fcom
js,pt
gs
add
ja
cmp
std
push
roll
rorb
dec
mov
out
sbb
add
movl
cmp
aaa
adc
lea
scas
push
jge
rcr
push
in
jmp
or
inc
je
add
adc
ficomps
stc
fldcw
popa
xchg
cld
ja
xchg
ja
jns
sub
enter
inc
sbb
das
ret
mov
icebp
xchg
jmp
icebp
jns
orb
ss
jbe
adc
jo
xchg
leave
nop
or
adc
dec
cmpsb
insb
push
add
xchg
sbb
call
outsl
out
push
pushf
xchg
push
lock
repz
sub
pusha
sub
pop
jecxz
sub
or
lret
les
inc
and
mov
adc
mov
fcompl
into
mov
dec
pushl
cmc
fildl
add
cli
dec
add
mov
mov
out
cld
sbb
adc
ds
pop
sbb
lock
orl
push
insb
jno
fmuls
sarl
push
push
popf
gs
adc
xchg
loop
sub
mov
lea
lret
mov
movsb
fists
das
pusha
adc
fdivrp
aam
mov
js
sbb
aas
ret
addb
lahf
jmp
aaa
or
jle
mov
int3
jns
lea
cmc
inc
lods
xchg
mov
test
cld
stos
in
mov
sub
jmp
call
cld
icebp
pusha
xchg
mov
sub
sub
push
cmc
xchg
pop
adc
mov
jnp
movsb
popa
pop
adc
insl
loope
push
mov
inc
add
fstpl
gs
or
pop
cmpsl
adc
test
in
stc
mov
dec
addr16
sbbl
mov
mov
xchg
cmp
mov
je
shrl
adc
push
adc
rol
imul
hlt
fnsave
xchg
je
xchg
movsb
fcmovb
shr
add
into
rorb
js
adc
lock
icebp
mov
push
out
and
ljmp
or
jecxz
push
push
in
pushf
jecxz
cmpl
ret
fsubrs
ds
sarl
add
mov
inc
cwtl
insl
pusha
push
add
fs
jp
jge
push
mov
xor
xchg
dec
push
add
loopne
orl
es
sub
lds
aas
icebp
mov
xor
lds
sbb
dec
call
pop
sbb
hlt
mov
icebp
jno
fs
adc
cmp
addr16
out
pop
jmp
add
imul
bsr
int3
lds
inc
sbb
push
out
shrb
scas
mov
push
cmp
xchg
mov
jle
jmp
mov
adcb
fxtract
inc
mov
test
sub
movsl
mov
sbb
push
jo
sub
xchg
pop
int3
div
out
out
ret
xchg
negl
xlat
push
std
loope
push
int
pop
imul
mov
data16
fidivrs
mov
inc
cmpsl
xchg
movsb
das
jae
das
iret
arpl
push
arpl
cmp
loope
xchg
sub
add
cs
call
fidivl
call
ja
pop
pop
aad
cltd
test
mov
ret
aaa
xchg
outsb
stos
push
and
or
fildl
aaa
nop
loope
push
inc
xor
add
jne
and
sub
adc
repnz
popf
int
inc
and
add
pop
nop
ljmp
loopne
enter
popa
dec
push
mov
dec
fnstenv
int
xor
or
dec
inc
mov
mov
in
add
and
insl
fcmove
fldl
roll
mov
fs
test
xchg
adc
rcrb
daa
push
adcl
sahf
popf
dec
pop
lea
adc
inc
and
xchg
shll
mov
sub
dec
orl
std
push
addl
cmc
or
pop
or
stc
xchg
cmpsl
xlat
mov
out
ret
hlt
mov
roll
jnp
mov
cli
and
or
pop
fdivr
inc
pop
add
xchg
aad
mov
jne
mov
fiadds
mov
sbb
rcrb
sub
sahf
test
std
adc
push
mov
out
gs
jno
jns
jg
andl
scas
jns
in
mov
jecxz
test
subl
jnp
subb
shrb
mov
iret
xor
jl
jno
clc
out
pop
into
mov
mov
adc
sbb
push
add
push
jo
cmp
mov
fs
pop
jne
fiadds
xchg
mov
fwait
sarl
dec
test
repz
inc
push
insb
or
xchg
stos
movsb
xchg
mov
lods
cmpsl
lcall
imul
sub
hlt
dec
outsb
cmp
cmp
test
cmc
mov
jp
dec
sbb
cs
into
mov
je
andb
jo
insb
xchg
or
xchg
shl
jne
popa
push
xor
iret
icebp
fisttps
mov
pushl
in
aam
add
out
mov
push
push
jno
or
dec
dec
dec
iret
fisubs
data16
fwait
pop
test
arpl
hlt
cmp
xor
push
addl
ret
orl
lret
inc
sub
or
mov
sbb
les
inc
mov
mov
arpl
inc
or
shrb
insb
jle
or
jmp
sub
xchg
inc
hlt
push
nop
fwait
pop
popa
imul
sub
mov
cli
lods
jnp
pusha
dec
jle
mov
mov
dec
notl
mov
rclb
incb
jmp
arpl
xchg
in
std
andl
test
pushf
xor
pop
daa
xor
push
mov
inc
imul
ja
mov
jg
imul
enter
sub
pop
mov
and
insl
pop
adc
push
sarb
pop
inc
sbb
imul
pop
xor
adc
xor
dec
sub
mov
je
mull
xor
negb
outsl
cli
lret
xor
dec
cmp
fldt
aas
xor
and
in
dec
jl
mov
mov
sub
stos
jns
cmp
outsl
shrb
daa
mov
mov
or
sub
popf
adc
addr16
cmc
cli
add
xchg
loop
inc
xor
adc
and
scas
cmc
frstor
add
ret
sbb
std
addr16
jl
cmc
or
cvttps2pi
test
cltd
repz
dec
aad
pop
cwtl
shrb
int
push
jns
pop
dec
cmp
fistpl
inc
lods
dec
pushf
fcompl
xchg
xor
clc
aaa
sbbl
nop
push
dec
aam
xor
pushf
inc
adc
lahf
popa
jns
insl
mov
dec
xchg
sub
cmp
movsl
push
fnstcw
movsb
fdivp
mov
in
fldl
rcll
fwait
jle
std
dec
cltd
cmp
cld
jp
dec
in
mov
outsl
leave
shr
add
fwait
sub
pop
mov
fwait
mov
xor
or
loop
int3
sub
jnp
sub
xor
adc
scas
imul
out
das
gs
mov
fcomps
push
jo
push
js
stc
xor
js
sti
fistl
and
bound
mov
push
cs
shlb
lahf
add
inc
loopne
icebp
cmp
dec
mov
jp
test
cli
jmp
fdivrs
popf
add
fistps
test
xchg
int3
into
loope
pop
ret
pop
je
cld
sbb
pop
jnp
lret
repnz
mov
add
cmp
out
cmpsl
test
out
jnp
cli
xor
adc
pop
adc
sub
cs
insb
adc
or
mov
add
inc
fdivs
lret
and
ljmp
rorl
mov
mov
out
fdivs
mov
pop
sbb
mov
outsl
and
and
and
nop
cmp
add
sarl
mov
insl
and
test
push
dec
sbb
or
pop
fbld
inc
jmp
sbb
add
dec
call
jno
mov
popa
outsb
mov
push
sbb
repnz
ss
adc
cmpl
dec
fdivrs
mov
std
sarb
inc
sub
shr
xor
popf
fldenv
add
jecxz
xor
sub
sti
inc
mov
data16
adc
int
in
sar
cmp
push
adcb
inc
imull
sub
fcoms
or
scas
adc
aad
push
repz
mov
ljmp
lods
addb
outsl
mov
jae
shrb
and
icebp
icebp
pop
ficomps
add
int
and
insl
jne
daa
push
daa
lret
add
xor
pop
into
and
repz
gs
rcll
test
ret
cli
or
iret
pop
loopne
scas
in
enter
sub
cltd
or
lock
aad
push
jno
stos
mov
jnp
lea
mov
lcall
jae
jp
inc
pop
scas
lds
popf
sti
sub
mulb
stos
fbld
and
xor
xchg
sti
jp
sub
leave
push
add
adc
xchg
jne
push
jbe
mov
ret
pop
les
xchg
movsb
fstpt
aam
out
outsb
out
dec
nop
mov
in
sub
cmp
adc
push
add
addr16
and
mov
jae
mov
inc
jb
cmp
jns
cltd
lods
test
inc
rcll
xchg
pop
inc
fldcw
mov
inc
xor
xchg
sbb
sub
lea
xchg
das
out
jg
push
jae
and
test
out
pop
lods
push
int3
rorb
jp
mov
push
stos
stos
cmp
and
test
jo
enter
decb
ret
fnstsw
sbb
sbb
iret
cmpl
test
ds
pop
fidivrl
insb
cs
sarb
in
jmp
adc
std
pusha
mov
mov
push
movsb
push
inc
imul
xor
inc
stc
dec
push
cmp
push
mov
lods
sub
xor
sub
mov
pop
divb
dec
fnstcw
popf
xchg
mov
shll
popa
aad
push
rolb
sub
jge
daa
shll
jg
rorb
sub
lret
mov
pushf
iret
sub
call
mov
xchg
ljmp
push
cmp
jg
addl
sub
push
repz
push
cli
ficoms
push
xlat
sbb
sbb
out
iret
clc
mov
icebp
popa
in
into
pop
popf
dec
stc
xchg
jle
cmp
cmp
mov
icebp
inc
aad
loope,pn
sub
adc
push
imul
cwtl
in
jnp
sub
and
data16
cmp
jno
mov
fstpl
mov
mov
data16
in
arpl
inc
cmp
jne
out
and
mov
sbb
and
mov
sti
jo
jb
leave
push
adc
fwait
stos
fnstsw
jmp
sti
insl
or
dec
sub
sub
imul
int
fnstsw
jmp
sti
insl
or
dec
sub
sub
imul
int
fnstsw
ljmp
dec
sub
sub
imul
in
mov
fwait
int3
stos
fnstsw
or
hlt
xorb
ret
mov
repnz
loop
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
push
mov
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
jb
bound
push
add
cmp
push
sbb
arpl
repnz
ret
jecxz
jbe
ret
adc
and
push
add
xor
jae
inc
add
mov
ret
jecxz
repz
addl
adc
arpl
jae
inc
add
or
mov
out
xchg
fisubl
in
sarl
and
and
jb
and
xor
xchg
push
cmp
js
lret
ret
jne
mov
gs
in
sbb
cmpsb
mov
inc
hlt
adc
int3
dec
pop
addb
xchg
mov
xchg
xchg
jl
mov
and
out
xor
repnz
mov
test
adc
sub
idivl
pop
aaa
arpl
xor
jae
int3
push
bnd
fistps
in
dec
mov
or
cmp
pop
ret
push
int3
cmp
sub
push
add
loop
push
in
jl
push
aas
repz
pop
lea
mov
in
mov
sub
mov
shrb
bound
push
add
xor
jae
inc
add
mov
ret
jecxz
repz
ret
cmpb
push
jp
packssdw
or
out
mov
scas
aad
or
rcl
jno
adc
add
daa
popa
je
dec
pop
adc
push
xchg
fneni(8087
xchg
loop
cld
xlat
xor
loopne
addb
imul
arpl
jae
inc
add
mov
ret
jecxz
repz
ret
adc
and
push
add
xor
jae
inc
add
mov
ret
jecxz
repz
ret
adc
and
jp
mov
push
call
cmp
xchg
in
inc
sbb
notb
sbb
mov
mov
test
inc
test
insl
idivb
test
jle
ja
fadds
shl
popf
jns
and
or
sbb
pop
mov
rcll
stos
add
repz
push
jo
ja
in
push
pop
inc
and
mov
push
out
pop
jl
xchg
pop
xor
addr16
jl
push
les
push
popa
movsb
in
pop
les
jno
mov
mov
cmp
popf
hlt
mov
loop
out
mov
adc
int3
jo
adc
into
lock
push
or
push
ss
sub
loop
jb
sbb
out
lods
cmp
inc
and
jle
xchg
stos
int3
sarl
or
pop
jg
lock
int
xchg
lcall
add
and
jae
sahf
movsb
lods
shll
xchg
push
push
adc
bound
js
enter
stc
inc
mov
ljmp
or
rcrb
stos
jg
sbb
in
lea
leave
gs
mov
push
mov
mov
jno
and
out
inc
xchg
in
lahf
out
jg
stos
test
pop
sahf
jb
xchg
es
adc
out
adc
int3
mov
inc
mov
int
das
push
xchg
and
sbb
cwtl
scas
jne
fstpt
cmc
daa
push
cmp
dec
mov
movsb
ljmp
push
mov
fwait
ret
pop
ret
insl
mov
cmp
xchg
scas
outsb
sub
adc
lea
jae
push
lcall
sbb
mov
ret
inc
xchg
jno
mov
sbb
mov
mov
loope
mov
int3
lods
fcoml
ljmp
add
lods
jns
fimull
bts
out
jle
mov
rcrl
std
ret
clc
divb
das
dec
add
scas
mov
in
aam
mov
dec
enter
sub
hlt
push
icebp
mov
stc
lahf
xchg
aam
xchg
inc
cmc
andl
dec
mov
pop
hlt
lock
in
enter
scas
sbb
outsb
cmp
add
xchg
stos
test
sbb
in
ffree
add
xchg
xchg
mov
rsm
js
mov
mov
sub
rcl
scas
addr16
push
mov
cmp
or
call
or
aad
rdtsc
shlb
push
add
fwait
fwait
aaa
sahf
test
push
jns
loopne
inc
xlat
testb
sbb
xor
cltd
push
int3
dec
mov
dec
push
push
and
pop
push
insl
ficoml
pop
dec
push
test
dec
and
aad
jnp
pusha
int
jmp
add
subb
icebp
loop
mov
lock
addr16
int
push
dec
leave
cmpsl
inc
fcmovb
jnp
xor
loope
pop
mov
lds
test
dec
out
inc
clc
xor
inc
mov
mov
dec
sub
mov
imul
imul
movsl
xlat
jg
mov
fmulp
inc
std
ret
or
int
outsl
shrl
andb
dec
imul
dec
push
jge
xor
fisttpll
adc
sub
or
insb
shll
mov
xchg
pop
stc
cwtl
and
inc
bound
out
and
mov
aas
pop
leave
mov
jmp
popf
arpl
in
or
xchg
cli
xor
pop
push
jmp
and
ds
mov
inc
sub
movsb
xor
jmp
fdivr
popa
xchg
xor
lods
mov
adc
loop
inc
mov
sbb
rorb
sub
int3
or
jg
add
cmp
rcl
cltd
adc
test
mov
pop
xor
mov
cmp
cmc
sub
arpl
mov
push
xor
int3
fisubl
int3
lahf
testb
scas
les
sarl
jne
xchg
lock
add
push
test
push
jg
mov
fwait
cmp
add
cmp
push
mov
xorb
stos
pop
xchg
pop
sbb
cmp
cli
mov
xchg
inc
jmp
add
insl
sbb
out
lcall
lea
imul
sbb
subl
sahf
in
shlb
loope
dec
lods
push
lcall
xor
pop
push
ljmp
or
mov
cmpsb
imull
test
dec
movsb
mov
cmpsl
mov
push
or
xor
mov
push
sbb
inc
repz
repnz
stos
jecxz
pop
jb
in
cmp
out
pop
les
fstpl
sub
iret
add
xchg
popf
fidivrl
popf
pop
dec
repnz
pop
sbb
and
inc
or
jg
jge
mov
cwtl
push
xor
inc
jmp
dec
fwait
mov
pop
xor
mov
push
and
stc
dec
cmp
jb
sub
pop
and
nop
pop
xor
adc
cmp
enter
cmp
pop
dec
addr16
push
roll
orl
jbe
adc
shr
mov
add
enter
jge
push
mov
shlb
leave
dec
dec
sub
sub
jp
dec
or
in
push
ret
xor
stos
adc
mov
push
in
sbb
imul
mov
lea
lcall
xor
lea
fimuls
mov
inc
sbb
push
mov
outsl
lret
roll
push
stc
mov
mov
mov
in
xorl
xor
cmpsb
jmp
sbb
mov
mov
inc
add
mov
inc
mov
ret
cs
roll
xor
lahf
lret
pextrw
push
ret
addr16
jno
sbb
lret
scas
pop
nop
mov
inc
es
mov
pop
jle
into
push
mov
mov
jns
jecxz
bound
leave
or
retw
test
leave
mov
cwtl
ja
adc
push
pop
leave
gs
jecxz
jo
sub
les
imul
push
cld
jb
push
imul
shll
or
jmp
sbb
push
into
stos
mov
dec
mov
mov
repnz
xchg
pop
lock
push
add
imul
mov
jne
fadds
or
loop
or
lods
jbe
arpl
adc
cmpsb
sarb
subl
fcom
orl
xor
and
lret
nop
adcb
pop
pop
outsb
cmp
adc
or
lea
iret
push
lahf
mov
imul
es
das
icebp
in
scas
cmp
xor
push
xchg
push
lret
clc
jle
push
dec
pop
lret
add
jl
inc
dec
test
push
mov
jb
sti
jbe
movsl
test
xchg
js
inc
test
mov
outsb
pop
dec
xchg
mov
xor
dec
hlt
fisubs
rcrb
icebp
cmpsl
jg
scas
shrb
repz
sahf
loop
icebp
push
xchg
pusha
jecxz
fbld
xor
push
pop
fldt
add
fstpl
adc
outsl
push
leave
pop
or
sbb
sbb
inc
imul
bound
shll
mov
cmpsb
test
add
cmpsl
jne
pop
es
ret
cmpsb
mov
sbb
mov
or
mov
push
jno
inc
mov
aaa
rcrl
std
shll
call
in
dec
lods
loopne
ljmp
lret
popl
int3
adc
addr16
jp
mov
js
push
and
nop
das
push
pop
cmp
test
das
repz
adc
in
clc
sub
fs
jmp
cmp
iret
mov
ljmp
xor
adc
cmp
mov
push
sbb
scas
ds
dec
fnstcw
test
outsl
mov
test
sub
push
push
iret
push
inc
lock
inc
or
jge
sbb
cmp
cmp
or
push
dec
in
into
shrb
jbe
xchg
fdivl
cmp
loop
cmp
push
fnstcw
jae
xor
or
dec
mov
mov
sti
lcall
out
mov
mov
and
sub
pop
or
push
shr
dec
shlb
xchg
mov
adc
xchg
ljmp
insb
jne
pop
out
cld
inc
pop
shrl
mov
add
stc
shrb
jo
push
or
negl
repz
add
sub
imul
mov
rorb
pop
shlb
or
es
outsl
pop
repz
cmp
rcl
push
out
mov
pop
icebp
idivl
xor
jge
insb
outsl
inc
and
in
push
pop
xlat
pop
aas
divps
pop
popf
push
pop
adc
sub
pop
popa
lea
iret
movsl
cmp
icebp
pop
shll
pusha
aas
ds
mov
lret
enter
pop
cmp
and
aam
lea
add
int3
push
adc
push
je
in
or
or
inc
in
loop
int3
scas
jae
out
lahf
int
dec
jg
cmpsb
scas
inc
mov
jl
push
xchg
add
lock
outsl
push
sub
aam
cmp
loope
add
dec
lods
mov
push
idivl
cwtl
dec
ss
dec
bnd
jle
out
outsb
add
inc
ret
fldl
lods
fmul
cmc
xchg
fstpl
mov
lods
mov
cmpsl
fisttps
sbb
ljmp
dec
jl
and
fs
lock
xor
es
jno
test
dec
sub
xchg
mov
ljmp
or
arpl
xchg
adc
loope
lds
movsb
int3
cmp
sbb
dec
or
pop
fbld
xchg
clc
fsin
aas
add
pop
add
dec
push
dec
fidivs
test
pop
pop
jns
jmp
ljmp
cmp
lea
out
pop
xchg
jge
push
cli
cmp
mov
dec
std
bound
cltd
mov
arpl
rolb
das
int3
ret
ret
or
rcll
cs
ja
sub
adc
mov
mov
push
inc
loopne
push
xchg
shrl
sub
xor
xchg
sub
mov
mov
fisubrl
mov
adc
jne
je
or
push
ret
push
cmp
xlat
jmp
testb
mov
mov
stos
mov
mov
shl
lock
int3
xor
jbe
sbb
das
arpl
push
sub
xchg
imul
pop
push
fildl
and
push
sbb
subl
xchg
pop
mov
and
insl
sub
pop
test
xor
xchg
push
hlt
mov
mov
insl
aam
scas
mov
xchg
push
lret
sub
dec
inc
fsubl
idiv
ret
mov
sbb
cmp
imul
mov
mov
xchg
xor
imul
jbe
int3
cmp
push
pusha
xor
xor
jne
scas
lods
lock
mov
out
hlt
or
mov
lods
fsts
and
xchg
pmaddwd
addb
push
ljmp
enter
sbb
in
fmul
dec
jmp
jo
cmc
lcall
push
cmc
lods
aaa
insl
add
dec
pop
fs
not
sti
adc
jns
inc
push
movb
rolb
sub
sub
and
mov
fcomps
stc
and
insl
daa
inc
outsb
add
or
rcr
psubsb
bound
add
jns
sbb
rol
loopne
loope
call
mov
aam
add
adc
xchg
pop
push
in
movb
aas
add
or
popf
loope,pn
and
dec
mov
mov
mov
mov
adc
movsl
pop
fnstenv
xchg
push
lcall
andl
jle
xor
xor
mov
xchg
into
push
add
repz
movsb
add
lret
aas
cmp
negl
push
adc
sbb
sub
into
ljmp
ja
mov
push
xlat
cmpsl
sub
ja
cli
out
mov
das
mov
cmpsb
adc
lock
scas
inc
into
pushw
xchg
stos
cltd
push
bound
fistpll
iret
jmp
inc
sub
mov
mov
xchg
sbb
ds
cld
jmp
xlat
sbb
dec
fidivrs
scas
or
daa
jecxz
jbe
or
pop
sub
hlt
mov
mov
add
shll
loopne
adc
mov
aas
cmpsb
fs
push
xor
fnstenv
push
sub
pop
aaa
pop
shll
xor
cltd
scas
pop
dec
inc
push
adc
ficoml
push
data16
rcr
xor
test
rcrl
ret
scas
mov
lcall
rorl
out
pop
dec
cli
hlt
fs
popf
fldenv
aaa
or
lock
cmp
shrl
stc
fadds
mov
repnz
jecxz
lock
outsb
in
cwtl
test
jnp
jle
jp
sbb
and
pop
cld
add
pop
cmp
ret
push
daa
jmp
das
ljmp
xchg
mov
cmp
add
and
iret
loope
out
or
addr16
pop
lods
in
test
adc
cwtl
into
sti
clc
lahf
sbb
xchg
push
mov
jmp
mov
xchg
pop
ljmp
and
out
xor
jge
scas
push
rclb
add
xor
pop
mov
push
aas
ret
mov
stos
push
xor
fucomp
cmp
lods
dec
push
arpl
icebp
xor
xchg
mov
and
fcomip
dec
loopne
add
xchg
vpcomud
out
mov
xor
sub
js
popf
lea
ds
inc
popf
lods
pop
xchg
mov
mov
es
push
mov
sub
pop
stos
mov
adc
repnz
mov
cmp
mov
mov
and
push
cmpsb
cli
imul
jo
pop
out
ljmp
movsl
and
xor
lea
sub
mulb
cmp
ljmp
xchg
addr16
xchg
lret
int3
arpl
imul
dec
fists
push
push
cltd
into
test
jmp
dec
in
lea
cmp
stos
pop
clc
pop
xchg
pop
xchg
push
fidivs
in
mov
ret
repz
loop
std
xor
fsubs
jb
insb
inc
int
jo
ret
stos
dec
lahf
pop
xchg
push
cmpsb
mov
sub
in
mov
jp
dec
push
mov
ret
mov
jb
sub
dec
icebp
popf
xchg
pop
dec
jo
inc
sbbl
jo
lds
push
rcrb
mov
cmpsb
enter
ja
or
mov
mov
dec
inc
outsb
dec
mov
test
aas
scas
lahf
ret
add
aas
and
insb
cmp
aam
or
mov
nop
push
and
fsubrs
aaa
stos
or
lret
fdivl
out
cltd
je
mov
mov
aam
lods
pop
enterw
adc
sub
jb
add
ret
push
mov
or
inc
out
push
pop
mov
mov
stos
mov
add
mov
or
mov
lods
test
sahf
or
test
sbb
ss
lcall
xor
cmp
mov
mov
push
pushf
xchg
icebp
ret
dec
ja
dec
lods
fadd
xchg
shrb
inc
xchg
or
push
sbb
sub
jns
int3
repnz
xor
pop
pop
les
insl
movsb
arpl
adc
mov
xlat
mov
cmpsl
scas
and
pop
xchg
out
fwait
out
jns
outsl
jae
push
mov
cmp
mov
mov
repz
jnp
outsl
stos
insl
sub
js,pt
inc
mov
ret
ds
sbb
mov
add
mov
test
jne
dec
lret
shll
lret
jb
je
repz
sti
in
stos
push
mov
push
pushl
xlat
xchg
pop
add
push
ds
cmpl
xchg
in
fwait
test
loop
outsl
sbb
shl
push
test
adc
loopne
push
mov
xchg
outsl
fstps
addl
movsl
ficoms
lret
xor
out
jbe
cli
iret
imul
xor
shrb
leave
add
mov
cmc
movsl
mov
loopne
jmp
mov
mov
popa
lret
pop
mov
mov
fidivrl
jp
push
jp
jle
push
xchg
pop
sub
scas
subl
fsubrp
jnp
jecxz
pop
sub
ljmp
aam
sbb
fwait
in
outsl
and
pushf
clc
xor
jecxz
mov
mov
xchg
fwait
or
sub
test
jne
xor
or
out
cmp
testb
sub
test
sbb
and
jl
cmp
icebp
test
aam
adc
lahf
lods
and
stos
arpl
pushf
sub
icebp
xchg
or
or
inc
push
insl
cmpsb
fdivrl
xchg
jo,pt
fistpl
pop
sbb
mov
pushf
lock
rcrb
xor
lds
inc
and
pop
inc
jmp
mov
imul
lds
ja
or
cmc
imul
int
push
mov
imulb
and
shl
sbb
sbb
imul
scas
cmp
jecxz
cs
loopne
add
inc
pop
jno
and
inc
xchg
push
adc
test
scas
rorl
faddl
ja
fcmovne
mov
pop
or
orl
mov
cwtl
mov
dec
mov
lods
iret
mov
sbb
leave
imul
or
sub
mov
jnp
xor
jmp
dec
out
dec
xchg
xchg
or
sbb
sbb
mov
stc
mov
dec
mov
std
xchg
mov
or
jns
je
jb
xor
jno
rcrl
cmp
jbe
lods
rorb
shlb
stos
jbe
lret
es
mov
add
out
inc
clc
lods
push
test
cmpsb
fcoms
fcoml
dec
mov
pop
cmp
jge
mov
mov
inc
int3
dec
lcall
ds
mov
mov
aas
lods
push
loopne
jmp
mov
or
ljmp
gs
jno
je
add
xor
jne
adcb
cmp
jbe
nop
jne
iret
push
shrl
mov
cmp
out
scas
jno
rcrb
les
pop
sti
jo
in
das
leave
jp
sub
and
into
insb
movntps
repnz
loop
dec
xchg
dec
xchg
pop
test
fcoms
adc
shlb
jo
pop
int
push
addr16
lcall
xor
insb
shrl
pop
dec
scas
popa
cmp
insl
imul
push
mov
mov
daa
stc
cmpsb
adc
pop
sub
imul
sub
push
jne
inc
std
adc
mov
imul
lret
imul
fsubl
shlb
push
push
push
xchg
insb
xlat
push
popa
lea
test
sub
lds
cmpsl
inc
ds
imul
push
and
aad
pop
std
sub
or
cmc
jmp
arpl
or
mov
add
push
mov
jl
push
movsb
jecxz
cmp
xchg
xchg
jno
fs
daa
mov
inc
out
ljmp
loope
leave
xchg
int3
pop
mov
inc
cmpsl
ret
inc
orl
outsb
jns
ffree
les
xchg
imul
xchg
cs
mov
sub
inc
and
fimull
xchg
xchg
out
add
fwait
loopne
xor
addb
mov
out
cld
push
xchg
rclb
or
hlt
sub
add
rcrb
and
sbb
nop
jbe
jo
sub
mov
daa
and
jmp
mov
out
fcoml
inc
inc
cmp
lahf
or
mov
stc
inc
outsl
mov
shll
or
dec
mov
jg
cmp
in
inc
inc
imul
out
pop
or
aaa
les
add
insb
or
and
cmp
notb
mov
xor
in
push
out
inc
cli
push
popa
addb
xchg
inc
es
sub
jb
and
sub
pop
popf
mov
outsl
xor
test
mov
insb
mov
push
add
and
stos
push
lret
in
pop
pop
and
js
clc
jp
and
outsb
lds
popa
push
sub
add
test
gs
or
test
rorb
cs
cmc
xchg
clc
movsl
push
dec
cmp
dec
mov
push
cmp
andb
add
sbb
sahf
pop
inc
mov
mov
and
insl
es
mov
dec
mov
sarb
fnstsw
das
arpl
and
into
stc
rorl
sbb
sbb
sahf
out
push
in
cltd
fs
xor
arpl
jae
inc
add
mov
ret
jecxz
repz
ret
adc
and
push
add
xor
jae
inc
add
mov
ret
jecxz
repz
ret
adc
and
push
addl
arpl
repz
push
repnz
mov
add
mov
mov
shll
bound
push
add
xor
jae
inc
add
mov
ret
imul
insl
cmp
sub
imul
sbb
pop
jns
sbb
bound
cmc
fimuls
cltd
fisttps
xor
mov
fwait
pop
imul
jne
or
sub
pop
or
mov
lret
mov
mov
mov
fwait
xorl
inc
xor
and
dec
add
jmp
fdiv
mov
scas
xchg
in
iret
stc
xchg
hlt
push
daa
or
cs
cmp
jecxz
cli
sub
hlt
xor
fdivrs
int
aad
aad
cltd
inc
mov
push
pop
jmp
in
adc
add
push
lret
mov
fnstcw
arpl
imull
js
add
mov
jp
out
jmp
sti
mov
lods
add
mov
fsubp
xor
in
xchg
imul
mov
xor
push
push
xchg
jmp
mov
out
and
cmp
dec
rolb
ret
pop
sub
xor
bound
lds
xchg
mov
sbb
sbbb
subl
je
mov
popf
bound
sbb
pop
popf
sub
cmp
out
add
xor
out
sarb
mov
push
imul
jno,pn
push
sub
pop
sub
test
sti
cld
iret
in
mov
mov
lods
divl
adc
push
jne
jg
sub
lahf
sti
sahf
cltd
scas
icebp
flds
in
mov
push
imul
das
pop
push
sub
imul
mov
lret
mov
stc
stos
jmp
fwait
cmp
jnp
dec
or
sub
pop
or
mov
lret
mov
stc
stos
jmp
fwait
cmp
push
mov
andl
cli
shll
js
outsl
mov
mov
or
lods
push
outsb
fimuls
sbb
test
stc
lods
lcall
je
es
or
mov
mov
and
test
push
shr
or
std
es
dec
ficoms
cmpsl
sub
out
push
inc
iretw
push
mov
push
xchg
mov
add
push
mov
cltd
push
cli
xchg
add
dec
mov
stos
adc
pop
lret
imul
repz
repnz
sub
mov
fsub
push
cmpsb
xchg
aad
int3
pop
or
rcrl
leave
cmc
dec
cmpsl
je
and
mov
xchg
roll
fistl
popa
dec
ss
push
mov
or
out
jmp
pop
mov
jle
xor
cs
fwait
lret
cmp
adc
jbe
adc
xor
push
aaa
popf
nop
sti
sbb
jge
scas
lcall
add
in
mov
lea
xchg
in
pop
cmp
adc
je
xor
ja
pop
scas
lea
inc
aaa
ljmp
imul
mov
and
sbb
out
loope
divl
ret
orb
mov
hlt
jns
arpl
or
std
push
mov
dec
pop
jb
ret
das
lret
add
out
jle
out
pop
or
orl
mov
iret
xchg
addr16
loop
mov
lcall
sub
push
mov
add
dec
ds
les
jmp
sub
pop
jge
fisttpl
add
cmpl
sbb
ja
cmp
loopne
out
mov
mov
xchg
das
cmp
xlat
pop
in
int3
lods
dec
inc
inc
push
pushf
cli
jl
rolb
xchg
dec
lcall
cmpsl
inc
outsb
insl
repnz
hlt
inc
lahf
loop
pop
mov
jnp
and
jle
mov
movsb
movsb
or
je
stc
ss
test
sub
sbb
lock
pop
sti
xchg
aam
mov
xor
adc
sbb
ja
or
in
addr16
jnp
cmp
clc
sti
xor
adcl
xchg
mov
imul
and
jp
mov
inc
int
ret
cltd
fwait
dec
outsl
scas
orl
pop
hlt
iret
loop
mov
insl
popf
or
xchg
sub
sub
mov
inc
pop
nop
jo
int
loope
inc
lds
xlat
fbld
cmp
int
jg
js
fs
lods
loop
xor
adc
mov
mov
lea
or
imul
sub
int
sti
pop
jnp
ja
nop
push
lcall
or
in
mov
data16
mov
push
mov
mov
test
jne
loopne
fbstp
push
xor
rcrb
sub
push
mov
xor
mov
hlt
xorb
cmp
jbe
push
nop
jle
push
aad
mov
xchg
loopne
sub
enter
or
int
pop
cmp
push
arpl
mov
out
jnp
jg
in
cltd
lds
push
imul
das
lret
es
js
cmpsb
in
sbbb
popa
dec
mov
jae
jae
imul
cmp
sarb
int
push
and
movsb
mov
jmp
call
addr16
sub
insb
dec
xchg
cs
sbb
adcl
add
inc
je
cmp
push
push
movsl
cs
xchg
jp
pop
inc
jo
or
popf
mov
daa
gs
mov
adc
test
std
inc
sub
les
jmp
jo
loope
jmp
jp
push
mov
inc
sbb
fsubl
or
push
lea
imul
in
mov
je
adc
push
scas
sti
aas
nop
jmp
mov
mul
cmp
stos
rcr
cmp
and
cli
xor
inc
das
into
or
mov
push
dec
movsb
cmpl
sbb
mull
cs
in
cld
fbstp
sub
into
sub
fldt
or
lcall
and
inc
out
ret
adc
es
mov
push
clc
add
lahf
cltd
ret
push
xor
lods
jmp
outsl
add
sub
mov
aad
mov
test
mov
jb
call
scas
lahf
ds
pushf
and
ret
cmp
mov
cmp
fisubrs
enter
inc
mov
ljmp
or
gs
jecxz
je
mov
fnstcw
lea
insl
push
mov
fidivs
loope
push
dec
pop
mov
mov
sub
aad
sbb
add
pop
cmc
add
test
push
or
cmp
or
inc
cmovp
scas
clc
add
lods
sarb
xor
dec
xchg
or
cmp
in
mov
iret
lret
movsl
jbe
insl
cmp
inc
bound
mov
cltd
push
mov
add
or
cld
mov
int
in
mov
fwait
adc
test
pusha
jbe
or
pop
jl
mov
jne
pushf
mov
arpl
cmc
cmp
sub
es
push
jg
xor
xchg
and
lods
outsl
fstps
fcoms
mov
pop
lods
pop
inc
cwtl
test
arpl
dec
push
pop
cltd
sbb
pushf
sub
or
std
stc
jg
cmpsl
inc
and
inc
mov
sbb
add
xor
rol
imul
jo
sbb
in
mov
pop
pop
sbb
mov
pop
insl
fists
mov
shlb
pop
mov
dec
in
nop
das
bound
push
cmp
nop
movsb
mov
jns
fisttpll
mov
jmp
cmp
cmp
sub
dec
mov
mov
sbb
push
lods
je
pop
shl
cmp
dec
inc
pop
jne
movsb
dec
popf
sub
cmp
push
adc
test
rcll
lea
sub
adc
adc
fwait
mov
xchg
rcrb
sub
jnp
or
rolb
shl
into
out
xchg
leavew
jo
cmc
stc
jle
mov
sahf
movb
mov
push
fisubl
js
outsb
andb
lea
mov
int3
jns
cltd
stos
imul
sub
out
test
jp
leave
shlb
popa
and
mov
mov
test
dec
cltd
cmc
jb
cmp
add
cmpsb
negb
push
mov
cmpsl
out
fisttpl
mov
enter
fwait
repnz
loop,pn
adc
xchg
jle
adc
popa
pop
shll
lds
ucomiss
mov
jl
push
xor
scas
imul
push
mov
inc
cld
mov
imull
xchg
pushf
subb
inc
dec
mov
push
mov
fdiv
mov
push
xor
rcll
aam
pop
pop
add
adc
mov
cmp
mov
daa
mov
mov
shlb
jo
setb
pop
jb
shlb
arpl
xorb
or
int3
mov
sub
pop
mov
push
test
pop
notl
shl
mov
xchg
popa
orb
stos
lea
inc
jecxz
rclb
sub
insb
mov
pop
movsb
pop
aas
or
shrl
imul
scas
addb
scas
and
mov
add
fdivl
enter
xor
std
and
add
int
or
push
jge
mov
in
mov
test
pop
lea
gs
repz
jnp
divl
xchg
mov
fwait
push
aas
fisubs
mov
insl
push
mov
sub
xchg
dec
lret
jmp
ret
shll
cmp
cmp
cmp
xchg
cs
jb
cmp
jbe
add
int3
and
das
addr16
xchg
arpl
fstpl
rolb
je
dec
jecxz
jne
or
bound
ja
jg
add
mov
mov
outsb
outsl
mov
push
jo
cmc
enter
jb
lcall
nop
lock
movsl
outsb
pop
pop
fcmove
add
das
sub
decl
in
lahf
mov
test
dec
ljmp
xor
fistpll
mov
fisubrs
movsb
cmc
loopne
insl
dec
sti
imul
imul
jmp
daa
mov
and
sub
and
mov
out
mov
dec
insl
push
stos
insl
mov
xchg
fadds
mov
dec
cs
outsb
loopne
xchg
lahf
in
xlat
pop
and
and
enter
fildll
test
arpl
cmpsl
shrb
or
addps
mov
clc
mov
mov
xor
xchg
pop
mov
cwtl
into
loop
ret
pushf
fidivl
pop
repnz
test
sbb
aad
sub
and
adc
frstor
je
jge
mov
stos
cmp
push
leave
in
mov
xchg
pop
mov
cmpb
push
jnp
test
fcoms
mov
call
orl
dec
rcrl
inc
mov
push
push
into
add
mov
dec
pop
xchg
mov
jns
mov
lret
jnp
mov
and
repnz
xorl
pop
icebp
movsb
out
mov
xor
mov
rol
jo
and
and
jb
dec
aam
aaa
popa
mov
sub
and
data16
or
fwait
pop
fs
std
push
jge
in
sahf
scas
daa
dec
mov
mov
out
mov
pop
sti
and
div
sbbl
xor
in
sti
xchg
inc
shr
decb
cmp
jl
filds
arpl
cli
push
xchg
in
push
xor
jo
idivl
shrb
scas
cmp
mov
fistps
mov
or
jmp
dec
rorb
inc
out
or
scas
je
add
push
outsl
popf
dec
pop
lahf
inc
fs
lcall
pop
ljmp
dec
jecxz
stc
lret
iret
mov
jnp
adc
dec
sub
xchg
pop
cmp
andl
nop
loopne
mov
stc
cmp
scas
adc
jge
sti
or
push
ds
mov
es
and
and
ret
les
testl
inc
mov
lock
mov
das
movzbl
jmp
rcll
mov
jl
stos
lock
dec
loop
add
js
imul
or
xchg
ror
fs
inc
jle
stos
outsb
mov
jmp
fadds
ss
in
and
jns
fstps
das
inc
cmpsl
or
in
addl
test
jle
test
adc
push
jg
cmpsb
dec
mov
nop
dec
push
test
xor
aad
mov
icebp
lcall
jns
outsl
xor
test
dec
or
rorb
iret
mov
das
and
adc
inc
jne
sti
call
mov
sub
and
add
pop
ja
sbb
loope
sub
popa
insl
rcll
in
add
jo
out
xor
mov
jecxz
lock
cmpsb
je
stos
mov
inc
ja
in
stos
mov
int
imul
incb
mov
ljmp
stos
in
inc
mov
adc
mov
enter
push
sub
pop
sbb
je
add
jge
aam
adc
mov
leave
repnz
mov
hlt
aad
popa
imul
insb
jns
push
sbb
ljmp
dec
xchg
es
cmp
mov
jno
xor
sub
fildll
mov
fnstcw
xor
cmp
sub
jns
data16
aas
test
push
scas
fs
shr
push
fadd
in
cs
fcmovnu
jg
js
push
popa
out
jge
lahf
fdivr
xchg
shl
call
xchg
mov
clc
and
rcll
adc
push
mov
mov
ret
sbb
xchg
xor
mov
out
or
addr16
xchg
adc
test
int
les
and
ljmp
dec
popf
out
in
arpl
pop
xchg
jmp
and
jmp
or
add
sbb
dec
cltd
in
adc
or
ja
xchg
adc
push
or
and
lcall
call
out
xor
in
imul
insl
ljmp
stos
orl
pop
inc
pop
push
inc
shrl
jbe
movsl
mov
insl
jno
push
movsl
sbb
stc
xchg
cmc
outsb
imul
lds
adc
lea
flds
lcall
ss
sbb
mov
jbe,pn
lret
xchg
bound
stos
lahf
scas
dec
or
leave
ret
insb
push
pop
mov
pop
mov
test
dec
push
adc
aad
push
nop
testb
xchg
out
nop
inc
decl
popf
xor
pop
cmpsl
stc
mov
or
ret
jbe
cld
cmp
cmp
jne
pop
dec
scas
shrb
andl
lds
test
mov
pop
repnz
popf
mov
push
xor
insb
outsb
std
xor
inc
out
jp
icebp
mov
sbbb
jmp
xor
test
inc
movsb
jae
popa
sub
mov
daa
lret
xor
adc
movsb
xor
loop
stc
sbb
inc
pop
sub
dec
call
or
add
adc
pop
sbb
sbb
sarb
imul
rcl
lcall
pop
iret
out
shlb
iret
int3
les
cmpb
sub
mov
movsl
or
inc
sbb
mov
out
leave
jmp
dec
rcr
gs
xlat
adc
pop
lods
pop
or
adc
test
xor
dec
imul
das
ficoms
lret
sti
in
cltd
inc
out
adc
or
test
cmp
pusha
cmc
rcrl
mov
jmp
mov
mov
xor
and
fmull
repz
ljmp
cltd
fsubrs
inc
inc
fs
cmp
pusha
aas
sbb
sti
enter
xchg
fsin
or
into
mov
jne
popf
mov
add
popa
inc
mov
push
push
jne
dec
inc
mov
mov
mov
pop
or
xlat
insl
nop
mov
frstor
pop
mov
sarl
dec
xor
enter
dec
mov
inc
mov
cli
test
pop
fnsave
stos
loope
stos
out
mov
adc
in
popf
out
push
pop
ret
inc
jne
cmp
into
adc
and
push
mov
dec
out
lcall
sub
xor
xchg
pop
xchg
fwait
pop
popf
sub
negl
or
je
cltd
dec
aaa
repz
cmp
jne
xchg
xchg
loope
sub
mov
mov
fxch
mov
loopne
stos
jmp
mov
mov
out
push
out
xor
out
shll
sub
inc
stos
pop
sahf
icebp
lock
lods
lcall
out
mov
adc
pop
es
mov
mov
sbb
sub
popa
jnp
xor
aad
xor
and
das
outsb
mov
popa
mov
mov
call
fidivrs
fnsave
inc
inc
adc
aad
mov
sub
add
mov
test
sahf
push
fdivrl
enter
sub
push
mov
lea
cwtl
fcmovnu
out
les
or
loopne
pop
and
sbb
ret
test
push
dec
pusha
sub
pop
shrl
xchg
add
jne
xor
ficoms
std
add
jp
adc
lods
sub
xchg
xchg
fsubrl
pop
cmp
movsl
pop
mov
popw
gs
pop
push
fstpl
xchg
fnsave
jae
adc
les
lds
add
out
inc
xchg
mov
or
cltd
loope
insl
or
pop
outsl
fisubs
xor
hlt
stc
jo
dec
jbe
mov
rcrl
nop
aam
pop
fs
xchg
inc
push
jle
jno
mov
fidivrs
ror
iret
mov
mov
aam
pusha
push
outsl
lret
pop
pop
push
popf
inc
push
std
push
hlt
lods
pop
xchg
sti
jmp
fidivs
imul
loope
adc
jg
sub
jns
dec
fbstp
mov
imul
shll
inc
repnz
in
and
inc
test
adc
in
incb
iret
in
mov
icebp
icebp
sbb
jge
iret
xchg
push
pop
mov
cld
mov
inc
pop
hlt
jb
mov
sub
addl
ficoml
sub
and
movsb
scas
lds
aad
int
pop
jle
and
stos
add
inc
arpl
les
aam
push
mov
jae
iret
jge
repz
inc
icebp
push
mov
xchg
sbb
out
bound
adc
jae
aas
clc
push
iret
dec
test
cli
vmwrite
test
xchg
lret
shr
rclb
test
test
das
jmp
testl
xor
xchg
mov
les
test
pop
or
rorb
pop
lock
jnp
lock
icebp
sahf
cmpb
mov
cmp
mov
mov
jnp
std
xchg
icebp
jmp
jns
mov
jns
dec
mov
sbb
inc
add
pop
popf
inc
xchg
fldenv
sbb
sbb
stos
xchg
in
call
mov
icebp
out
or
aad
adc
scas
lahf
jl
mov
add
push
fcompl
movsb
loop
jmp
cmc
push
push
sbb
rcrl
xor
cmc
xchg
dec
mov
add
mov
dec
and
std
xor
aaa
or
cltd
mov
push
in
dec
out
sbb
cmp
mov
sbbb
test
mov
test
adc
mov
xor
xchg
pop
js
pop
outsb
popa
mov
rolb
xchg
pop
sub
cmp
xor
jo
cld
popa
xor
pushf
bound
aas
pop
popa
fbstp
cmp
push
xor
inc
cli
mov
push
pop
orb
lds
outsl
jnp
orb
jo
sbb
xor
jne
xlat
fiaddl
testb
in
imul
push
jp
jae
sbb
sbb
xor
aam
imul
popf
arpl
sub
outsl
imul
aam
add
pop
xchg
dec
cwtl
into
fst
xor
push
fistl
pop
ja
jo
loopw
movsl
sbbb
xor
dec
sbb
adc
lahf
jp
fwait
ret
js
out
xchg
popf
fisubrs
jle
aad
push
insb
dec
or
mov
sbb
jne
imul
xchg
or
dec
pop
mov
add
sbb
out
aaa
or
or
and
xchg
mov
test
test
add
mov
int3
lods
mov
and
lret
out
mov
rolb
outsl
or
or
xor
popf
pop
dec
xor
push
mov
clc
in
jl
push
cmp
cmpb
lahf
jns
dec
fucomip
lret
fistl
pop
pop
test
ffree
pop
push
les
jecxz
or
push
jo
push
lock
fadd
std
push
inc
adc
cli
sbb
dec
sub
jae
movl
mov
loopne
add
lret
xor
jb
enter
pusha
or
mov
push
out
adc
iret
repz
pop
add
inc
cmp
gs
adc
pop
sbb
ret
add
fildll
mov
mov
push
push
inc
pop
lds
xor
mov
mov
and
xchg
push
cwtl
cmpb
sbb
imul
clc
mov
mov
xchg
mov
sbb
or
aaa
mov
nop
cmp
fwait
jns
fdivrl
jp
sub
inc
inc
mov
into
inc
lds
repz
adc
sub
loopne
pop
push
and
or
mov
test
inc
into
popa
repnz
insl
enter
fsubl
pop
icebp
mov
lock
dec
les
jo
fisubs
mov
rcrb
sbb
sbbb
or
js
jg
lock
sti
jne
add
pop
loop
jmp
mov
fisubrl
jae
cld
loope,pn
add
filds
mov
into
cmp
pop
es
mov
test
inc
cmp
adc
mov
ffreep
add
fldenv
cmp
mov
aaa
push
out
aam
push
cwtl
inc
loopne,pn
aaa
dec
mov
sub
arpl
adc
inc
fcom
push
push
adc
jo
movsb
or
je
xchg
sbb
pop
scas
dec
sbb
push
pop
int3
in
sub
mov
add
sbb
jp
mov
pop
int3
sbb
aad
out
add
push
shrb
sbb
mov
mov
cmpsb
mov
xchg
mov
clc
je
adc
push
sub
cld
cmp
add
sbb
rcr
mov
add
adc
xchg
xchg
add
pop
dec
or
sub
pop
or
mov
lret
mov
stc
stos
jmp
fwait
cmp
jnp
dec
or
sub
pop
or
mov
lret
mov
stc
stos
jmp
fwait
cmp
jnp
dec
or
sub
pop
or
sti
imul
stc
mov
sub
dec
sub
sub
pop
or
fstpt
lret
mov
hlt
ss
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
jp
add
cmp
test
add
pop
or
add
add
add
pop
mov
rolb
add
lock
add
add
add
add
add
add
add
add
add
add
xor
push
add
xchg
add
lcall
add
add
add
add
add
xor
xor
cmp
adc
dec
or
add
ds
add
add
xor
add
add
add
add
add
xor
sbb
pop
add
imul
add
jne
adc
cli
add
add
int3
add
add
fiaddl
imul
add
cmp
test
add
add
add
inc
add
adc
call
add
fiaddl
ljmp
add
add
add
add
push
add
add
pop
add
add
add
dec
or
add
add
add
incl
mov
inc
add
repz
add
jno
add
lea
popa
add
add
add
pop
add
add
add
pushf
add
add
gs
add
add
add
ret
add
jnp
lea
incl
gs
add
add
nop
add
or
mov
pop
jnp
and
add
add
icebp
add
add
mov
add
or
addl
mov
add
and
sub
cmp
jo
cmp
adc
xchg
scas
add
jne
gs
add
add
jns
sbb
sbb
add
add
mov
add
add
jno
push
add
add
add
add
add
add
add
add
add
add
jns
cmp
and
or
jo
testb
add
add
add
add
dec
add
add
add
add
add
test
sbb
add
mov
add
add
add
add
aas
add
lock
add
add
xor
sub
pushf
add
add
add
adc
jns
jns
add
add
add
add
add
add
add
add
add
inc
add
add
mov
jns
insl
add
add
dec
add
sbb
add
add
add
aad
dec
add
fildl
sub
add
sub
add
add
pop
jne
jne
and
push
sub
in
adc
sub
add
and
push
test
bound
outsl
add
add
add
add
add
add
pusha
add
add
out
add
add
add
and
add
add
mov
add
add
add
rolb
add
add
in
mov
mov
add
add
add
add
add
add
xchg
add
add
outsl
add
add
add
xor
mov
and
add
sbb
push
add
add
add
add
add
add
add
add
jns
add
add
add
xor
icebp
aad
xor
pop
cmp
and
test
out
imull
sahf
xor
ret
and
int
loopne
push
adc
andb
adc
popa
lret
dec
sub
cli
scas
push
push
xor
push
nop
pop
lahf
mov
fnstsw
leave
jmp
jne
clc
mov
xor
pop
xor
mov
pop
xor
pusha
int
add
lret
mov
sbb
notb
fistpll
ror
mov
adc
pop
add
aam
xchg
aad
iret
sub
xlat
pop
mov
lret
imul
nop
dec
xchg
repz
sti
pop
cmp
push
addr16
jbe
mov
fsubs
loop
loope
dec
adc
push
push
mov
push
in
mov
fnsave
inc
inc
shll
repnz
push
inc
push
inc
jecxz
or
dec
lds
iret
ret
imul
or
icebp
icebp
cmp
pop
loope
sbb
xchg
fistl
adc
and
popf
lcall
pushl
jne
and
and
adc
cmpsl
add
push
shll
sarl
movsl
xor
out
adc
stc
iret
jg
es
push
fistps
mov
inc
lret
push
sub
pop
dec
imul
inc
daa
or
dec
adc
fstpt
xor
push
sar
push
inc
fdiv
call
lea
dec
ja
jno
gs
xchg
adc
cmpsl
pop
cli
rolb
cwtl
lcall
stos
mov
push
je
dec
mov
sub
mov
inc
jge
stc
rcrb
jmpw
dec
lahf
outsl
sbb
sub
and
mov
enter
mov
lret
or
xor
sti
adc
pop
scas
daa
push
imul
cmc
push
inc
adc
imul
jl
xchg
xor
push
in
cmp
inc
xchg
fmulp
gs
push
fs
mov
loopne
and
jbe
jmp
fldenv
dec
add
leave
mulb
inc
jge
add
push
sub
push
pop
js
lds
rclb
outsb
bound
xor
adc
aaa
add
fisubrl
add
add
or
test
inc
xor
mov
nop
in
mov
push
stos
repz
inc
cmp
sahf
aad
fwait
sbb
pop
cmpsl
add
sbb
adc
cli
fdivrs
lahf
adc
lret
pop
or
xchg
jo
or
mov
sub
mov
pop
pop
mov
adc
cli
ja
mov
and
scas
dec
push
and
cmc
xor
cwtl
or
dec
adc
enter
sub
icebp
leave
pop
xor
ror
pop
add
cld
or
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
pop
hlt
add
xor
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
push
add
in
hlt
add
in
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
sbb
add
and
add
sub
add
inc
cmc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
cmc
add
add
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
push
testb
pop
testb
testb
insb
testb
je
add
jl
add
test
add
xchg
testb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
add
mov
testb
fdiv
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
adc
add
cmp
add
pusha
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
add
int3
clc
add
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
clc
clc
add
add
add
or
add
and
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
cwtl
stc
add
mov
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
pop
cli
add
fs
add
ja
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
nop
cli
add
cwtl
cli
add
test
add
mov
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
