call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
mov
or
movsb
push
mov
pop
push
jecxz
mov
inc
in
push
std
data16
fldl
or
jge
dec
mulb
lea
popf
xchg
jbe
xchg
mov
insl
jge
dec
negb
lods
xor
cld
inc
mov
sbb
cmpsb
ficompl
in
push
addr16
fxch
scas
inc
mul
add
jb
into
jle
mov
push
dec
cwtl
cmp
clc
sbb
push
sti
fsts
stc
mov
int
mov
sub
ret
sbb
mov
or
sti
inc
xor
aam
int
clc
sub
add
xchg
sbb
and
ret
jl
daa
mulb
fmuls
pop
jge
in
push
add
movl
inc
pop
dec
nop
lahf
in
hlt
gs
mov
out
push
inc
icebp
mov
mov
ja
jnp
imul
imul
push
mov
push
mov
in
fldt
dec
sub
mov
insl
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
mov
sub
jl
or
movsb
adc
or
or
aam
mov
inc
scas
push
cwtl
add
dec
repz
ret
push
xchg
xor
out
les
ss
inc
cmpl
or
xchg
jne
jg
js
inc
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
loopne
fistpll
sbb
xchg
or
inc
daa
es
xor
jg
ja
lock
fwait
mov
push
loopne
xchg
push
xchg
pop
aad
jnp
adc
mov
jge
int
fcmovnbe
xor
mov
and
xor
inc
pop
ljmp
jle,pn
jp
dec
inc
mov
cmp
sarl
sbb
insb
sub
and
push
xchg
sti
int3
mov
mov
test
jg
adc
cmp
mov
ja
and
icebp
aaa
ljmp
sbb
xor
add
out
lret
mov
sti
fsubr
iret
adc
xchg
stos
iret
jnp
push
popf
mov
fcmovnu
orb
mov
test
or
xchg
mov
daa
fisttpl
inc
and
add
pop
sub
xchg
push
push
imul
mov
xchg
cltd
lret
mov
and
das
popf
mov
daa
inc
aaa
jl
lods
sbb
mov
aas
pop
and
testb
out
cli
pop
inc
punpckldq
mov
aas
ret
je
mov
xchg
pop
sar
xor
fs
cmp
push
xchg
insb
dec
lods
lock
and
les
lods
jae
lods
icebp
aad
or
int3
mov
inc
pop
shl
and
scas
or
ds
xlat
push
dec
pusha
adc
sub
sbb
adc
mov
xor
std
jle
cmpsl
les
or
lock
sub
push
hlt
loop
dec
mov
mov
jecxz
lock
sbb
dec
ret
das
test
ss
xor
mull
dec
fistpll
std
cmpb
jb
cmp
hlt
outsb
mov
ja
xchg
sub
jmp
loope
sti
mov
std
add
adc
mov
adc
pop
cltd
aam
jp
or
fistpll
mov
jae
push
jl
hlt
push
push
or
movsb
std
fs
xor
xor
andb
imul
jmp
mov
mov
cmp
jns
aaa
sar
test
jnp
mov
cmp
lea
jmp
mov
add
or
mulb
sub
and
jo
xchg
lret
push
mov
addr16
mov
add
lock
in
ljmp
xchg
adc
xchg
cli
pusha
lock
shl
lods
jp
in
and
push
sub
mov
divb
movsl
push
or
ret
mov
cli
mov
mov
icebp
std
pop
movsl
push
les
xchg
lock
xchg
sbb
sbb
inc
test
fiadds
daa
gs
repnz
xchg
sbb
pop
out
or
or
mov
std
popf
jmp
loop
pop
out
sbb
lods
movsl
xchg
stos
inc
aam
cld
mov
pop
jmp
stos
nop
push
mov
cltd
mov
stos
pushf
aam
lods
test
dec
dec
movb
imul
jne
jae
out
out
mov
in
int3
fmul
ret
push
int
shll
add
lods
mov
cmp
cmp
sbb
test
mov
mov
cmp
push
dec
jne,pt
int3
xor
mov
aas
or
dec
or
or
aas
sahf
add
rcll
ljmp
movsl
sbb
xchg
dec
or
or
dec
cltd
insb
js
ret
fwait
cli
cmp
inc
mov
insl
fistpll
adc
and
mov
pop
notl
das
sahf
cmp
push
outsl
or
jne
add
jbe
push
das
xchg
and
add
test
sbb
sbb
pop
cli
pop
pushf
pushf
jg
or
pusha
lods
lods
sbb
out
or
jmp
fistl
in
xlat
sarb
dec
dec
sub
and
inc
ss
mov
xor
inc
fs
sub
mov
repz
xchg
mov
testb
xor
xchg
lods
inc
cmpsb
cs
mov
into
adc
and
mov
xchg
lods
cltd
and
test
xchg
jb
mov
test
ss
mov
ret
mov
inc
lods
pop
jbe
jecxz
push
mov
jg
jnp
xchg
xor
add
movsl
push
jp
pop
rcrl
sbb
pop
test
xchg
shlb
cmpsb
insl
sbb
in
jne
add
aad
fsubs
call
orb
inc
mov
mov
roll
push
inc
jns
pop
xchg
cli
fisubs
sar
push
movsl
cmovb
pop
pop
push
jg
inc
mov
xorl
inc
inc
mov
cwtl
inc
adc
xor
add
fldcw
pop
adc
xchg
add
mov
adc
inc
jg
fmuls
dec
outsl
aad
rcll
jg
xchg
nop
fnsave
mov
enter
addr16
jg
jmp
xchg
je
mov
sub
or
adc
test
or
sar
mov
nop
je
add
and
pop
xlat
stc
or
dec
sub
std
lods
xchg
arpl
jecxz
xchg
pushf
daa
mov
lea
cld
popf
in
push
mov
cmc
sub
in
sub
in
stos
mov
jmp
push
pop
pop
iret
xor
aas
out
inc
movsb
pushf
push
test
inc
pop
mov
pop
push
or
in
mov
mov
and
jmp
add
mov
in
add
jg
inc
cmp
add
imul
jb
icebp
outsl
mov
cmp
clc
add
and
int
sub
mov
test
jl
cmpsl
fnsave
clc
enter
sbb
int
repz
mov
pop
push
mov
loop
cmc
xchg
shl
sub
xchg
adc
push
jmp
lods
enter
jl
xchg
loope
ret
pop
andl
es
popfw
push
inc
sbb
lock
out
cmpb
ret
pushf
negl
in
or
xchg
pop
pop
jmp
jle
icebp
sti
lcall
jo
jns
push
test
xor
sub
dec
iret
movsb
nop
mov
int
mov
mov
mov
dec
xor
movsl
stos
ljmp
or
outsl
loope
sbb
ds
or
xor
xor
push
stos
je
nop
sub
xor
mov
test
or
sbb
add
fstpt
pusha
div
divb
jnp
cmp
mov
pusha
xor
sti
and
xchg
xchg
lods
jo
dec
in
cld
xor
add
xchg
ret
in
xchg
cmpsb
outsb
shlb
mov
lods
and
pop
cltd
pop
lret
aaa
pop
gs
out
clc
and
mov
neg
mov
out
pop
ja
sub
or
push
xorl
inc
icebp
push
cmp
fidivrl
mov
adc
sub
xor
movsl
jns
push
jnp
out
push
inc
cmpsb
call
push
jl
pop
xorl
mov
std
lds
cli
cmpsb
imul
arpl
mov
lods
adc
in
xchg
and
jg
test
cmp
push
sbb
xor
enter
push
lds
int3
sub
loopne
test
iret
or
mov
lahf
gs
dec
stos
push
lahf
loop
mov
push
mov
movsl
in
mov
adc
mov
xchg
mov
test
xlat
push
xchg
test
add
aam
pop
push
arpl
inc
xor
fcoms
xchg
fldcw
cmpsl
add
mov
push
push
jmp
push
iret
sbb
ret
sub
das
std
movsl
fidivs
mov
mov
bound
jno
scas
popl
mov
xchg
inc
pop
fisttpl
stos
iret
inc
rcrl
sbb
mov
pop
daa
and
add
sbb
sub
in
cwtl
in
jmp
push
popa
rclb
xorl
mov
or
adcb
leave
gs
mov
adc
push
xor
lods
fwait
dec
bound
sti
adc
mov
or
inc
sbb
lret
sub
xchg
inc
xchg
loop
or
divl
pop
sbb
or
or
cmp
cltd
mov
das
xor
scas
pop
mov
xor
gs
popa
out
hlt
pop
ficoml
push
repnz
cmp
int3
inc
test
push
xchg
adc
jecxz
out
sarb
pop
push
mov
daa
adc
stos
mov
lods
sarb
subb
testb
aad
fwait
sub
push
js
push
std
ret
mov
das
loope
mov
sti
iret
mov
cmpb
enter
pop
test
lcall
xchg
sub
fmuls
pushl
cmp
daa
bound
add
popa
mov
scas
arpl
cmpsl
les
int3
hlt
pop
outsb
loop
xor
jns
dec
add
sub
imul
xorl
int
mov
sahf
and
sahf
pop
mov
int
and
call
aaa
push
push
aaa
jg
xchg
mov
or
insb
jb
sbb
test
scas
xchg
sub
mov
inc
adc
mov
dec
gs
sbb
repz
sysexit
stos
dec
loopne
or
lahf
inc
js
sahf
daa
shl
rclb
xor
movsl
sub
movsl
hlt
stos
movsb
inc
push
cmp
cs
jns
xor
xchg
mov
push
adc
mov
int
mov
repnz
jo
pop
xor
mov
inc
arpl
bound
push
mov
je
divl
dec
ficomps
push
movsl
lret
aam
and
lcall
dec
lea
pop
out
cmpsl
add
and
inc
movl
lret
inc
mov
xor
or
cltd
jo
add
xor
adc
mov
sbb
pop
pop
inc
lods
sbb
pop
and
push
dec
sub
repnz
mov
mov
push
lret
mov
mov
pushf
xchg
sub
insb
mov
inc
sbb
fisttps
addr16
xchg
call
jmp
ljmp
jp
fiadds
pop
pop
into
cmc
add
xor
mov
repnz
xlat
shlb
xor
orl
mov
fwait
dec
sbb
call
fwait
repnz
xchg
insb
das
lds
and
mov
loope
mov
sub
std
xchg
ds
lods
lds
stos
sbbl
xchg
and
cmpl
mov
pop
fisttpl
add
bound
adc
push
jae
mov
mov
mov
mov
inc
insl
xchg
idivb
xchg
xchg
inc
adc
mov
mov
stos
addr16
mov
dec
jmp
mov
aaa
je
enter
cwtl
or
fdivs
mov
adc
xor
rcrl
mov
push
jmp
add
imul
mov
xor
es
outsb
and
call
or
inc
add
enter
test
aas
push
sub
out
shll
ret
and
addr16
jno
lret
xchg
push
xchg
icebp
and
fdivrl
mov
pop
aad
out
pop
pop
cmp
inc
into
dec
jno
or
adc
cmc
call
xchg
ljmp
fdivs
lods
xchg
sbb
das
xchg
lahf
das
mov
das
inc
frstor
pop
xor
push
in
loop
adc
lods
scas
mov
mov
jg
fcompl
cmpsb
adc
add
fimull
sti
clc
scas
mov
pushf
fidivs
or
call
xor
les
sbb
mov
xor
or
cmpsb
lcall
xchg
adc
movsl
jecxz
test
lods
shr
lods
cwtl
mov
ret
ss
xchg
ja
lcall
ja
push
adc
ret
xor
dec
cmc
call
int3
ss
mulb
add
or
cld
push
fstl
adc
xchg
xchg
adcb
cltd
sbb
sub
mov
push
out
rclb
pop
out
fildll
gs
das
mov
mov
push
jmp
xor
dec
aas
les
les
mulb
xor
jnp
add
loopne
inc
jmp
xchg
xchg
test
jb
movsl
inc
lods
mov
mov
insl
aaa
punpcklwd
xor
or
and
lods
pop
pop
pop
cmpsl
mov
es
out
push
rolb
roll
jg
loopne
idivb
mov
sti
and
add
pop
jns
fnstsw
push
insb
add
cwtl
adc
lea
push
je
sbb
inc
loopne
orl
or
loope
call
jmp
cmp
mov
sbb
idiv
adc
sub
lret
jne
neg
cli
fldt
xor
push
mov
inc
cmc
xor
fcomps
pop
or
inc
movsl
je
jb
adc
jns
sub
icebp
aas
pop
and
or
fstps
scas
sbb
mov
and
test
lds
jp
dec
inc
inc
js
mov
pop
mov
jnp
pop
dec
pop
lea
dec
sti
add
clc
pop
sbb
insl
cs
jmp
pop
pop
sbb
stos
int3
repnz
fs
repz
fsubl
add
insb
push
xchg
popf
ret
mov
inc
test
fst
jmp
sub
adc
or
dec
fs
ss
je
mov
add
orl
dec
scas
mov
pop
movsl
jne
arpl
xchg
scas
pusha
adc
add
xor
dec
mov
insl
fwait
cmpsl
cmpsb
push
stos
inc
in
jnp
cmp
cmp
test
jmp
scas
xchg
pop
lcall
outsb
cs
inc
mov
sbb
dec
pop
je
ret
movsb
pop
cmp
insb
data16
sub
adc
xchg
pop
hlt
mov
les
into
iret
stos
lods
loope
pop
inc
cmpsb
jae
lret
addl
push
cmp
push
test
pop
das
out
cltd
dec
push
add
dec
in
mov
repnz
sbb
push
test
popf
loope
add
inc
fwait
jo
xor
repnz
dec
adc
xchg
pop
fsubp
insl
mov
pop
daa
jp
pop
insb
sbb
and
les
pushf
and
add
cmc
cli
rorl
cmp
out
into
inc
test
sub
call
sbb
mov
push
jle
mov
jo
lds
sbb
aam
test
fsubl
add
pop
sub
mov
sbb
xchg
inc
inc
rorb
add
adc
je
sbbl
add
shlb
mov
addr16
sub
stos
pop
mov
lea
stos
lret
in
lock
stos
hlt
dec
repz
fsubr
sub
jle
add
or
es
call
dec
cmp
adc
mov
adc
xchg
sub
clc
iret
cld
pop
sbb
inc
mov
aam
cltd
push
jecxz
sbb
and
pop
adc
sub
dec
push
xor
lods
pusha
idiv
pop
pop
sbb
jbe
inc
mov
push
popf
test
icebp
out
pop
mov
xchg
xchg
imul
notb
pop
imul
sbb
dec
shl
pop
and
lret
inc
orb
jge
shrb
aam
je
mov
jns
aas
fs
les
jle
push
jae
push
and
in
dec
gs
call
jg
and
scas
lods
add
les
daa
imul
fdivrp
imul
mov
mov
cs
testb
popa
dec
stc
roll
xor
fisubrs
mov
aam
cltd
cmp
jbe
test
sbb
int
sub
adc
xchg
push
add
xchg
push
xchg
les
push
mov
push
nop
mov
jl
sub
xorl
and
cmp
sbb
aaa
fistpl
pop
testb
push
lret
clc
pop
out
pusha
ror
cmpsb
movsl
push
xchg
fwait
pushf
inc
pop
cli
aaa
jo
mov
jae
cld
sahf
mov
clc
stos
dec
mov
movsb
in
xchg
popa
int3
insl
imul
shrb
and
jbe
adc
int
dec
sbb
inc
xchg
movsb
dec
dec
js
xchg
hlt
adc
cli
cmp
outsl
mov
cmpsb
cmp
mov
arpl
out
dec
jg
scas
and
xchg
jae
lcall
int
inc
pop
or
and
cmp
cmpsb
nop
test
adc
dec
test
int3
and
repnz
popf
sub
loope
and
jp
and
call
lea
jg
insb
sti
test
mov
mov
mov
adc
sbb
in
popl
js
and
dec
lea
repz
inc
mov
daa
xchg
int
mov
push
ja
cmpsb
scas
out
sbb
jb
mov
notl
or
imul
inc
adc
pop
enter
repnz
scas
je
je
push
xchg
push
or
das
jl
xor
out
dec
fs
and
add
push
cmp
in
push
jns
or
pop
jle
dec
dec
mov
in
js
shrl
xchg
aas
mov
out
loope
sti
mov
stos
jmp
adc
call
scas
mov
mov
mov
hlt
mov
and
fdivrs
pop
notb
sub
aas
sub
jb
or
mov
xchg
and
fscale
mov
test
fs
fwait
push
icebp
sbb
icebp
out
pushf
dec
mov
mov
sub
dec
or
xchg
mov
or
add
sub
cwtl
out
mov
sub
inc
and
jle
jno
test
ret
sahf
pop
pushf
hlt
or
neg
fs
add
and
jle
inc
push
ss
pop
leave
xchg
push
cld
lahf
fcmovnu
jae
mov
dec
clc
cmpsl
sbb
lods
mov
pop
or
or
add
adc
insb
cmp
and
pop
loop
add
pop
int3
imul
adc
add
call
mov
mov
enter
xor
push
arpl
je
jno
dec
pop
cmp
out
dec
xor
loopne
shl
push
addr16
ja
scas
cmp
mov
dec
in
mov
mov
sbb
xor
pop
pushf
and
into
sbb
mov
fisttps
push
lock
add
pop
ljmp
sub
or
xchg
sbb
cmp
shl
popf
repz
call
sub
mov
fnsave
mov
mov
mov
aam
mov
outsb
push
aad
mov
dec
add
clc
mov
sarl
and
sbb
push
add
inc
and
testl
xchg
in
jne
in
inc
cmp
lea
cmp
movsb
sub
add
sbb
je
aaa
into
cmpsb
das
out
dec
mov
adc
aas
adc
and
jbe
inc
neg
jbe
xchg
dec
inc
and
mov
xor
cmpb
les
mov
fs
mov
nop
sub
mov
mov
out
in
in
inc
add
aas
xor
movsb
rolb
push
xor
sub
or
test
ds
xchg
es
xchg
add
mov
test
jmp
mov
jb
les
aas
dec
inc
mull
inc
popf
cmc
mov
xor
inc
stc
stos
xchg
ss
dec
fucomip
xor
sbb
push
fs
inc
mov
inc
jmp
xor
lret
or
mov
pop
enter
pop
aas
sub
pop
dec
xchg
jno
mov
js
xchg
jl
repz
cmpsl
testb
mov
mov
fsub
jbe
xchg
inc
or
repz
loope
fs
or
mov
dec
or
and
aam
out
scas
scas
jecxz
pop
pop
test
movsb
insb
repnz
je
pop
bound
xlat
push
mov
mov
cmpsb
pop
add
loopne
pop
sahf
mov
mov
cs
test
jnp
call
jne
out
lock
jae
in
mov
pop
cmp
mov
and
je
mov
xor
shr
popf
mov
gs
gs
aam
in
mov
and
ljmp
jno
xchg
in
psraw
test
jmp
imul
and
das
pop
cmpsl
xchg
icebp
insb
xor
loope
mov
and
sti
out
gs
shr
insl
adc
pop
jmp
push
xchg
jle
lahf
push
icebp
and
or
popf
inc
shll
movsl
ja
inc
nop
mov
out
rclb
pusha
pushf
ja
pop
pop
insb
sti
enter
xor
push
mov
push
lock
mov
mov
mov
fldl
iret
xorb
or
aad
scas
pop
arpl
lahf
jge
dec
in
cmp
dec
cs
push
mov
sbb
pusha
mov
ret
lret
out
sub
dec
mov
test
es
js
ss
jp
push
out
or
fstpt
shll
loopne
jp
stos
add
aas
and
in
cmp
pusha
jbe
add
xchg
xchg
test
nop
push
int3
sahf
in
xchg
lret
mov
mov
movsl
mov
xor
ret
into
and
mov
jns
mov
and
scas
mov
sub
stc
shlb
cmpsl
dec
adc
mov
dec
fnstsw
jno
imul
and
mov
sarl
insl
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
jbe
push
lods
push
mov
inc
in
push
std
data16
fldl
or
jge
dec
negb
lods
push
pop
mov
add
xor
and
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pushl
fisttpl
pop
jnp
inc
pop
cli
insl
out
jnp
out
dec
lcall
imul
scas
or
cmp
jg
dec
jmp
sti
das
mov
pop
bts
iret
out
dec
jnp
imul
scas
fs
cmp
jg
dec
inc
pop
stc
das
mov
cmpsl
cmovne
mov
scas
xor
or
pop
jb
pop
lock
lret
jg
add
pop
adc
mov
arpl
cld
loope
test
sub
cmp
lret
push
inc
mov
addr16
push
lcall
imul
fadds
lret
inc
icebp
ds
fdivs
xor
scas
ficomps
sub
or
fisubrl
test
jg
outsl
sti
mov
das
mov
repz
push
pop
inc
pushl
xchg
in
in
ret
xchg
push
sbb
dec
jle
scas
aaa
fimuls
mov
mov
lods
fistpll
pop
xlat
sbb
cmp
xchg
or
ror
negl
imul
flds
dec
sub
mov
or
mov
dec
outsl
pop
icebp
das
mov
fwait
pop
cmp
int
popf
iret
jnp
xor
sub
test
aad
lcall
dec
ret
xchg
mov
outsl
loop
jmp
xor
pop
fimuls
pop
test
lds
mov
push
mov
push
fisttps
push
sbb
jg
outsb
out
aas
fwait
bts
mov
iret
imul
scas
or
cmp
jg
dec
jmp
sti
das
mov
fwait
bts
mov
iret
imul
scas
or
cmp
jp
ret
xlat
pop
adc
jge
jmp
clc
mov
shrl
mov
cmc
jl
pop
inc
insb
or
xchg
jp
hlt
adc
test
fnsave
mov
insl
jo
cmp
lcall
fwait
stos
fimuls
mov
in
fdivs
iret
mov
push
xor
fs
stos
and
testl
dec
ficoms
mov
outsb
and
pop
mov
sub
ret
lds
pop
mov
mov
push
stos
cmp
jmp
lahf
inc
add
mov
push
data16
adc
pop
jae
cmp
inc
insl
fbstp
testb
notl
cmp
out
inc
sar
xor
mov
jge
xor
int3
in
fxch
and
imul
imul
lret
jae
enter
rcr
add
je
jge
and
inc
fstps
mov
sbb
jecxz
in
andl
movsb
arpl
sub
xchg
push
idivb
mov
mov
bswap
add
flds
dec
hlt
or
fwait
push
cwtl
jge
mov
mov
daa
lock
xchg
mov
jnp
sbb
outsl
enter
sbbl
les
push
les
stos
push
sbb
cmp
and
xor
dec
dec
pop
fwait
mov
jmp
xor
inc
pop
lahf
push
loop
divl
push
test
xchg
and
cmpsb
mov
sbb
lock
fstps
icebp
jbe
inc
js
cmp
out
inc
ret
cwtl
ds
sbb
js
cmp
push
push
aas
ljmp
js
add
cmp
jnp
pusha
stos
add
or
idivl
push
js
cltd
dec
cmp
adcb
dec
mov
out
enter
mov
pop
cmp
mov
imul
mov
mov
adcb
lock
ret
adc
mov
mov
push
popf
pop
dec
mov
adc
push
or
lods
or
fs
stc
loop
inc
pop
dec
in
and
jle
sub
push
out
jle
icebp
pop
mov
xchg
cli
aas
sub
sbbl
cmpsl
shll
sahf
fwait
pop
cltd
xchg
in
mov
or
and
pop
push
push
add
pop
jae
and
les
xchg
mov
pop
mov
test
aad
aam
adc
lcall
popa
pop
popl
mov
imul
or
adc
jne
inc
mov
xorl
fwait
xchg
jnp
pop
xchg
repnz
mov
nop
les
or
nop
jns
xor
in
sbb
daa
and
aaa
adc
pusha
outsb
jecxz
pop
push
outsb
mov
jmp
out
push
xchg
rolb
outsb
dec
lcall
add
icebp
ret
cli
sbb
add
repz
push
lcall
iret
fists
cwtl
xchg
inc
add
xchg
adc
pop
inc
xor
pop
je
dec
or
mov
cwtl
jg
push
js
movsl
fldt
cs
mov
dec
iret
mov
mov
xor
popa
and
or
nop
icebp
test
incb
mov
out
add
dec
jecxz
pushf
cs
xchg
mov
loope
jl
ffreep
filds
cld
xor
xchg
jmp
mov
inc
insb
in
sub
lahf
ds
pop
addl
xchg
mov
cmp
vpternlogd
push
addr16
les
call
shlb
inc
je
lea
sub
pop
xor
push
push
dec
push
mov
sbb
jg
jecxz
ljmp
mov
cmp
into
jo
enter
push
repz
add
add
and
mov
stc
sarl
enter
cmc
fimuls
mov
and
pop
sbb
adc
stos
rclb
adc
add
sub
cmp
xor
dec
jnp
hlt
sub
xor
mov
movsl
adc
mov
cmp
push
mov
insl
jb
adc
and
les
stos
xor
daa
xchg
dec
insb
repnz
sub
mov
arpl
mov
sbb
ret
mov
fcom
addr16
xor
movsl
outsl
repz
in
dec
ss
jg
push
adc
mov
pop
das
leave
dec
add
pop
ror
iret
push
ds
fmull
in
std
mov
stc
ret
scas
mov
adc
fldl
rcl
or
add
hlt
lods
sbb
icebp
loopne
push
aam
test
xor
inc
push
pmaddwd
mov
jmp
sahf
jno
mov
mov
jbe
in
lock
cli
mov
jae
jbe
lret
in
add
lret
sub
xor
dec
dec
js
mov
and
int
adc
pushf
sbb
xor
push
add
cmpsb
add
sbb
push
in
rclb
sahf
nop
ret
shll
andl
enter
loopne
xchg
adc
test
cs
adc
jle
or
mov
add
add
hlt
jmp
out
cld
push
icebp
sub
mov
stos
pop
mov
push
push
pop
pop
insl
fidivs
fsubrs
mov
lcall
push
test
subl
ret
pop
cmp
mov
push
mov
pop
call
xchg
mov
ret
enter
mov
repz
jnp
fnsave
inc
lret
or
or
xor
popa
lret
loope
stos
xor
lds
sahf
xlat
cwtl
pop
and
inc
sahf
stos
andb
adc
cmp
aaa
xchg
testb
cs
addr16
mov
in
pop
mov
and
int3
push
mov
mov
mov
rcr
add
lds
sbb
sbb
cmp
jp
loope
sub
xchg
adc
data16
adc
jmp
fsts
hlt
leave
mov
cmpsb
jecxz
mov
jnp
or
mov
cltd
fcmovnbe
mov
pop
scas
clc
addl
sarb
test
cmp
adc
std
bound
repz
shrb
outsb
adc
fstl
push
je
xchg
cwtl
mov
cltd
scas
cwtl
jge
mov
addr16
std
into
out
sbb
add
or
call
fsubl
cmp
and
inc
xlat
ds
mov
cmp
cmp
in
mov
js
dec
cli
jbe
testb
or
dec
push
ds
xchg
nop
decb
add
cmp
call
mulb
adc
imul
pop
xchg
pop
gs
lcall
les
xor
scas
xchg
test
push
scas
cmc
sahf
into
enter
shlb
xor
rol
loope
movsb
mov
pop
insl
push
mov
adc
test
jp
fisubl
gs
mov
mov
imul
mov
ljmp
inc
mov
cmp
repz
mov
jnp
cmpsb
scas
adc
or
imul
nop
push
xor
test
insb
xor
arpl
test
xchg
shll
data16
aam
inc
and
aad
loope
lods
mov
out
jbe
inc
cli
in
and
mov
subl
aas
outsl
clc
dec
dec
mov
and
sti
jne
jge
outsb
jnp
seto
or
std
sti
mov
push
in
xor
dec
shrl
and
push
lods
dec
cmp
adc
mov
cmp
outsl
outsb
ret
dec
fadd
dec
les
and
ficompl
imul
dec
ficomps
fcoml
cmpb
outsb
pop
pusha
cmp
jmp
mov
lret
inc
repz
das
scas
sub
sbb
xchg
aaa
lret
cli
xchg
mov
cmpsb
je
mov
scas
push
movsl
or
and
xchg
xor
and
data16
mov
push
dec
movsl
outsl
inc
rcrb
xchg
clc
mov
call
imulb
cmpsl
test
mov
push
mov
loop
add
mov
loop
out
sbb
cs
daa
xor
inc
dec
inc
daa
jl
divb
repnz
out
sti
and
ss
lea
sub
sahf
aad
lods
mov
add
int
mov
sahf
sarl
adc
pop
cmpb
repz
fwait
test
jge
cmc
leave
xchg
or
push
xor
icebp
sbb
icebp
mov
jge
or
and
jnp
cmp
dec
dec
adc
scas
mov
xor
in
push
mov
xchg
push
push
xchg
jge
scas
pop
fiaddl
fistpl
andb
mov
dec
fld
ficomps
int
inc
sub
daa
pop
inc
mov
add
xlat
pop
enter
iret
cwtl
test
fiaddl
xchg
cmp
imul
stc
mov
inc
lahf
add
ja
das
cs
push
inc
cmp
ljmp
arpl
and
cmp
in
dec
fists
cli
pushf
mov
sbb
jmp
rorl
mov
pusha
out
pop
cs
cmc
daa
mov
mov
push
lds
pop
js
loope
jne
sub
clc
sarb
push
jp
push
push
xchg
mov
enter
or
hlt
test
pop
jp,pt
jo
add
jl
xchg
and
dec
xor
xor
mov
lret
push
mov
lahf
cmp
cld
rcll
inc
arpl
roll
inc
sub
pop
cmp
pop
insb
cmpsl
xor
test
push
or
pop
call
repz
inc
enter
push
or
movl
rorl
sbb
adc
pop
leave
or
dec
mov
rcll
inc
arpl
out
inc
test
subb
or
inc
sti
adc
mov
ja
jnp
into
add
mov
std
push
sar
sbb
push
call
arpl
mov
shll
ss
xor
sub
addl
inc
mov
or
inc
hlt
cmpsl
cwtl
pop
rcrb
jne
ds
mov
fisubl
es
pop
in
jo
pop
dec
fnstcw
fcmovu
jae
push
aad
mov
fwait
sub
mov
test
into
test
hlt
mov
push
xor
xchg
ret
andb
mov
rorl
mov
sub
out
push
lds
push
daa
mov
leave
test
shlb
add
xchg
cs
jnp
sub
clc
pop
andb
out
cs
pop
dec
xchg
or
out
idiv
fwait
jbe
test
rorl
lret
lret
out
mov
mov
jno
fnstsw
shl
insl
xor
inc
and
dec
loopne
mov
hlt
jl
stos
test
mov
mov
or
cmp
add
sbb
addr16
test
rcl
jb
add
std
int
adc
enter
in
pop
xchg
in
mov
adc
cs
insl
mov
dec
lods
xor
out
dec
sub
xchg
dec
ret
fmull
jp
addr16
jg
lods
xchg
lret
mov
mov
inc
xor
aaa
test
push
push
jne
add
jl
add
dec
or
cmp
int
ja
out
pop
ja
or
push
ss
pop
mov
mov
das
ds
pop
hlt
imul
jmp
mov
scas
rorl
aas
dec
stc
mov
lds
sub
adc
cmp
fwait
loop
sbb
mov
fs
ja
add
mov
sub
inc
pusha
int
push
cmp
sub
into
dec
aaa
outsl
je
or
out
imul
lea
popa
cld
loop
sub
dec
cld
cmc
clc
pusha
aaa
pop
sbb
ljmp
add
movsl
arpl
push
adc
cwtl
int
lahf
sub
cmp
hlt
and
mov
mov
lock
mov
fldenv
push
cmp
inc
stos
add
mov
fwait
mov
xchg
or
sbb
outsb
mov
jg
insl
pushf
mov
add
pop
punpckhbw
sarb
pop
cmp
jge
fidivl
add
idivb
xor
lea
imul
lock
jo
mull
loopne
sbb
adc
clc
pop
xchg
or
jnp
outsb
sti
jne
outsb
inc
xor
and
in
mov
pop
bound
push
ret
repz
pop
int
pusha
lcall
and
pop
ja
pop
jg
js
lods
jg
mov
xor
out
cmp
and
xchg
lds
xor
lea
cmp
rorl
add
out
and
adc
pushl
test
lret
addr16
xor
ds
sbb
pop
fdivs
or
enter
test
ss
popa
mov
enter
xor
movsb
sub
dec
xlat
sub
pop
repnz
xor
ds
mov
outsl
icebp
xchg
ljmp
mov
sub
out
sti
pop
adc
ja
pop
jbe
out
xlat
inc
repnz
sarb
mov
addb
mov
mov
and
and
movsl
and
imul
repnz
cli
les
xchg
and
stc
out
cld
icebp
popl
xor
sahf
xchg
mov
scas
mov
jle
mov
pop
movsb
dec
les
addr16
std
cmp
orl
lret
cli
repnz
or
xchg
call
sub
mov
movzwl
mov
cmp
outsl
ret
arpl
cld
push
out
rcl
or
jbe
out
dec
cmp
push
sbb
fidivl
inc
mov
jae
push
nop
arpl
adc
sub
mov
add
xor
and
fwait
icebp
or
xchg
jb
dec
hlt
pop
sub
fwait
pop
dec
pop
jmp
or
mov
imul
mov
xor
cmpsb
nop
cmp
cli
pop
scas
cmpsb
add
or
cwtl
shl
xor
inc
pusha
mov
and
iret
mov
dec
pop
les
je
in
das
push
jl
cmpsl
mov
mulb
sub
xchg
incb
mov
mov
hlt
sbbl
clc
and
loopne
pop
xor
mov
push
push
add
lock
lret
and
fiadds
mov
imul
movb
das
push
icebp
repnz
and
test
mov
jno
addr16
sbb
and
fisubs
lods
jb
bound
dec
clc
shrb
mov
cmpl
andl
sub
lock
or
jnp
mov
movsb
add
shlb
ja
pusha
pop
jle
imulb
xchg
repnz
imulb
cs
stos
lret
sub
jp
aad
push
lret
sarb
mov
into
xchg
fsub
push
scas
dec
sbbl
mov
sub
cwtl
fwait
sti
dec
dec
es
mov
jne
xchg
lods
test
mov
xchg
lods
push
sub
or
out
cmp
nop
std
in
mov
lods
dec
mov
mov
cmpsb
dec
jg
inc
ja
js
dec
pop
shrl
or
mov
xchg
dec
inc
incl
ss
mov
subb
jp
or
bound
into
shrd
in
jb
pop
adc
jo
inc
repnz
adc
mov
roll
jecxz
add
cmc
inc
jns
or
js
sbb
push
rorl
push
iret
sahf
jecxz
leave
out
add
movsb
movsb
sub
stc
loopne
iret
and
aam
push
dec
aaa
cs
inc
cmovnp
inc
out
inc
and
rcrb
jle
outsl
fsub
loope
insb
and
fsubrl
mov
mov
ja
icebp
jns
and
jp
push
dec
cld
mov
inc
mov
mov
sbbl
outsb
sar
jns
adc
push
daa
jbe
cs
xchg
sub
jmp
dec
adc
cmp
push
mov
mov
ficompl
arpl
arpl
in
in
ja
rcrb
dec
testb
and
push
insb
cmp
mov
jnp
mov
or
shll
shlb
mov
jns
xchg
rclb
repnz
sbb
int3
int3
dec
mov
in
push
cmp
das
out
stc
scas
sti
mov
xchg
sbb
jb
xor
dec
xor
ja
or
out
cmp
imul
adc
mov
out
push
add
outsl
fs
xor
add
pushf
pop
les
xchg
jmp
or
jecxz
inc
in
mov
jno
and
bound
pop
in
imul
mulb
jb
push
ret
arpl
jmp
mov
inc
rorb
fisttpl
pusha
rorl
mov
jmp
xor
clc
faddl
xchg
xor
lods
add
outsb
int
fcmovnb
push
add
jl
mov
mov
and
push
icebp
ss
add
xchg
clc
cli
xchg
pop
les
out
inc
sti
dec
mov
outsl
mov
ljmp
aam
int3
repnz
or
xor
inc
pop
push
xchg
cmp
inc
xchg
mov
repz
jne
js
and
sub
stc
or
test
call
out
mov
inc
pop
mov
adc
out
outsl
fildl
push
sbb
xchg
rorb
mov
mov
xor
mov
gs
xlat
sub
ffree
sbb
aad
adc
loop
push
mov
jg
pop
int
ss
push
bound
jle
insb
jo
wrmsr
popa
aaa
xchg
and
subl
cmpb
insl
mov
popa
inc
insl
push
clc
cwtl
sbb
xchg
test
jp
xchg
jle
mov
shrl
shll
imul
fadds
xor
mov
mov
rcrb
out
arpl
sub
pop
jge
push
movsl
mov
push
roll
or
out
jmp
xor
out
or
dec
ret
mov
add
pop
out
inc
and
pop
shll
movsl
pusha
inc
sbb
fldl
fsubrl
fsubr
xchg
and
movl
mov
push
cmpsl
xchg
and
cmc
xor
sub
loopne
loopne
sbb
mov
cmp
loop
test
push
bound
push
jns
xchg
lret
cwtl
fstpl
out
popf
insb
cli
pop
lcall
aad
lods
jnp
mov
or
cmpsl
mov
xor
popf
fimull
stos
mov
imul
xchg
push
xchg
adc
leave
or
loop
add
cmp
push
imul
jo
add
test
dec
mov
das
adc
les
cmpb
mov
seto
sbb
hlt
rolb
mov
jg
adc
scas
ljmp
arpl
xchg
inc
mov
sbbl
sahf
xchg
fsts
test
dec
iret
aaa
loope
cmp
cmpsl
fwait
xor
pop
inc
daa
xor
push
rorl
popa
sub
pop
mov
popf
xor
repz
push
inc
int3
insl
cmp
pop
orl
pop
rorl
mov
push
push
cld
or
mov
xor
insb
popa
bound
dec
lds
fcomps
cmc
sbb
loop
cmpsl
cmpsb
xchg
mov
aaa
fiaddl
push
jl
shlb
ret
addr16
and
ds
push
div
lcall
je
xchg
mov
std
xor
fcmovnb
test
mov
dec
mov
stc
lahf
nop
nop
imul
mov
and
mov
cmc
pusha
jp
les
shrl
jge
sub
das
xor
mov
pop
push
ljmp
mov
mov
stos
cmc
push
cmpsb
fnstsw
mov
clc
add
fldenv
or
adc
sub
or
repz
stos
fwait
ret
xlat
add
std
push
fdivs
sbb
add
sbb
inc
fwait
inc
push
mov
repz
mov
movl
aaa
mov
int
mov
jle
jmp
repz
cmp
dec
mov
test
mov
mov
mov
cmp
pusha
outsb
leave
add
dec
cmc
int
pop
mov
test
add
sub
jle
push
push
nop
std
fiaddl
adc
in
jmp
orb
nop
xor
xchg
inc
jo
std
imul
sub
xchg
or
cmp
jmp
sbb
mov
sub
and
and
cmc
into
test
sub
jo
cs
inc
sub
mov
out
cmpsb
insb
gs
pusha
dec
xchg
inc
aaa
and
divl
inc
aaa
lret
das
inc
repz
adc
mov
mov
fwait
bts
mov
iret
imul
scas
or
cmp
jg
dec
jmp
sti
das
mov
fwait
bts
mov
iret
imul
scas
or
cmp
jg
dec
xchg
pop
sti
das
mov
xor
stos
pop
mov
iret
imul
scas
or
cmp
jle
dec
jmp
cli
das
mov
fwait
movntps
mov
gs
fadds
pusha
les
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
iret
or
cmp
and
jnp
mov
mov
jne
gs
orb
sbb
dec
lds
imul
pop
mov
mov
jne
gs
mov
pushf
sbb
dec
fcompl
imul
adc
iret
push
mov
push
cltd
or
in
test
lret
push
mov
mov
out
adc
leave
and
push
jge
push
xchg
pop
or
adc
cmp
arpl
fs
ss
mov
test
cld
fsubl
fwait
mov
out
std
xchg
pop
jbe
fs
stos
lret
fists
jb
push
xchg
cwtl
push
out
cmp
dec
rcrb
in
test
push
insl
divl
mov
mov
jmp
in
scas
rol
test
dec
in
cmc
clc
sbb
push
and
daa
clc
adc
jbe
popf
test
cli
dec
sub
push
push
into
fwait
ljmp
mov
xchg
jmp
push
or
cmp
dec
fistps
imul
or
sbb
mov
jne
jl
out
loopne
rolb
push
mov
test
mull
add
std
cmp
add
shrb
cmpsl
dec
mov
sbb
jnp
repz
aam
test
mov
mov
cld
inc
mov
rolb
pop
lods
dec
lds
imul
adc
stos
and
gs
xchg
or
cmp
dec
lds
imul
adc
stos
and
gs
xchg
or
in
cltd
int
cli
xchg
out
adc
jbe
lret
xor
jle
cmp
fidivrs
enter
or
rcl
cmp
cmpsb
jg
cmp
outsl
mov
mov
cmpsl
pop
mov
int3
xchg
test
jmp
sarb
push
dec
call
sbb
shll
or
mov
sbb
arpl
cmp
sahf
or
int3
fadd
scas
mov
mov
and
into
mov
mov
jb
mov
jl
mov
mov
or
fldcw
mov
mov
outsb
inc
dec
ror
fs
or
pop
cmc
xor
and
push
mov
or
cmp
lods
xor
add
mov
dec
leave
pushf
add
xor
inc
lcall
mov
imulb
jl
mov
xor
add
out
push
fists
enter
or
cwtl
mov
sbbl
clc
test
ja
xchg
mov
push
adc
pop
and
mov
outsb
lcall
adc
out
dec
mov
mov
sbb
and
mov
les
je
add
jp
push
jmp
sub
push
mov
pop
fldt
xor
push
xchg
outsl
sbb
push
mov
outsl
push
insl
arpl
dec
movsb
cmp
fwait
mov
mov
pop
insl
inc
sbb
pushf
add
cli
jns
outsl
inc
insl
in
gs
add
jp
loope
clc
call
aam
inc
mov
push
sti
pop
jp
jmp
push
push
in
pop
lret
pop
in
dec
mov
imul
mov
mov
test
sbb
inc
test
adc
inc
jp
sbb
rcll
dec
mov
shrl
scas
xchg
sub
out
inc
fcomps
xor
stos
aaa
das
mov
rcrl
clc
das
je
sub
roll
xchg
fisubrl
rorl
or
dec
add
pop
fstp
adc
orl
fdivrl
clc
mov
jl
or
mov
pop
pop
dec
loopne
inc
add
loopne
and
lock
xor
outsl
rcrb
je
mov
xor
mov
xchg
adc
mov
ja
and
sarl
jb
mov
pop
jne
xchg
andl
rorl
idivl
adc
lret
inc
test
xor
lock
mov
inc
push
loopne
movsb
cltd
loop
call
sbb
sub
mov
xchg
in
enter
mov
imul
popf
xchg
ret
loope
mov
in
insb
addl
push
aaa
aas
xor
push
push
sub
push
rclb
jl
cli
cmp
in
jbe
pop
jo
orl
mov
sbb
iret
xor
and
jl
nop
rclb
pop
faddl
push
mov
in
nop
imul
cmp
jge
stos
dec
jmp
mov
mov
xchg
imul
das
daa
pop
fnstcw
mov
imul
icebp
mov
xchg
data16
inc
mov
jmp
sub
pop
add
mov
hlt
mov
inc
jo
xchg
pop
push
jg
loopne
dec
mov
pushf
mov
mov
sbb
fistpll
xor
sti
lcall
js
inc
add
and
xchg
test
and
add
out
sbb
test
jo
xchg
xor
jb
data16
mov
jge
mov
mov
aam
gs
andl
mov
jae
jae
push
lahf
inc
mov
flds
pusha
adc
xchg
push
inc
jg
int
push
lods
dec
mov
icebp
stos
inc
mov
pop
aas
jnp
ffreep
test
push
push
mov
loop
pop
jmp
jge
lret
add
jae
loop
lds
andl
mov
dec
in
icebp
sbb
movsb
add
mov
std
arpl
loop
inc
fcom
inc
add
aaa
mov
pop
bound
test
mov
sbb
fwait
push
or
xchg
sti
ja
xor
addl
call
hlt
fstpl
push
push
mov
pusha
rcrb
mov
out
stos
repnz
cmp
popa
daa
adc
mov
push
dec
sahf
adc
pushf
in
pop
mov
outsb
lcall
pop
loope
mov
mov
cltd
pop
xchg
jecxz
repz
pop
fdivs
inc
adc
mov
jmp
cltd
pusha
clc
rorb
xor
les
adc
pop
or
or
pop
xchg
dec
faddl
sti
data16
xor
jnp
cmpl
cmp
movl
inc
sahf
and
setg
mov
mov
and
iret
shr
data16
xchg
lcall
ja
stos
mov
test
sarl
movsl
aas
sbb
mov
lods
push
pop
mov
es
sbb
out
out
jo
mov
and
xchg
iret
push
xor
cmp
rcrl
mov
sahf
mov
jp
pop
das
cmp
xor
xor
pop
pop
in
scas
into
cmpsb
bnd
dec
mov
xor
rol
jmp
mov
cs
sub
or
out
mov
dec
inc
arpl
xlat
push
lds
sbb
pop
lock
adc
pop
and
push
lods
in
ret
in
cmp
cmp
in
mov
daa
stos
out
subl
sub
mov
mov
dec
jns
adc
fidivrl
inc
test
pop
push
ds
cltd
cmc
insb
and
imul
enter
pop
jbe
and
ljmp
inc
inc
cmc
nop
lock
jecxz
adc
je
lea
test
inc
jno
ja
ljmp
rol
cmpsb
test
test
lret
sarl
mov
ret
pop
std
ljmp
fists
inc
sbb
adc
adc
enter
push
xchg
ja
push
es
mov
dec
mov
and
pop
daa
xlat
test
mov
xor
arpl
add
jmp
outsl
or
lahf
jp
into
or
mov
aaa
cltd
adc
push
xor
loopne
mov
xor
dec
into
push
jno
test
out
or
or
or
jle
and
stos
pop
arpl
mov
sahf
pop
xchg
inc
jge
push
push
xlat
into
xchg
mov
lret
cmp
popa
iret
mov
xchg
repz
add
scas
or
ret
sbb
pop
lcall
mov
int3
cli
add
loop
and
cmpl
cld
imul
dec
nop
ss
adc
mov
or
outsb
xchg
xlat
inc
ds
or
dec
lds
decb
hlt
leave
imul
or
and
movsl
add
lock
add
mov
sbb
out
sahf
push
call
out
xor
or
popf
jle
mov
rclb
cmp
pop
push
fscale
mov
mov
ret
xchg
enter
mov
shrl
test
jo
or
mov
in
call
in
fwait
push
lods
jne
sub
and
pop
data16
inc
fists
xchg
sub
roll
insb
and
jne
push
dec
dec
lods
add
test
push
addl
jne
mov
and
mov
pop
insb
push
xchg
aas
std
jmp
or
add
cmpsb
imul
xchg
jecxz
data16
pop
cmc
rorb
mov
repnz
sub
and
push
push
xchg
aam
repz
roll
jecxz
sub
addl
pop
add
jp
and
rcrl
inc
call
in
mov
add
sbb
mov
mov
inc
xchg
dec
dec
addr16
cli
dec
movsl
pusha
cmc
push
movsb
rorl
inc
pop
in
pop
out
xor
test
sbb
cld
movsb
and
mov
mov
xor
pusha
fmuls
sub
mov
inc
cmp
addr16
push
in
fdivp
xchg
and
sub
mov
adc
xor
fmull
cwtl
out
mov
adc
adc
lret
imul
movsl
arpl
out
push
xchg
shrb
xchg
fistps
jg
dec
push
pop
pop
jecxz
les
aam
mov
enter
push
fidivl
or
xlat
addb
je
lods
mov
push
pop
or
orb
imul
js
jle
add
push
fcoml
add
sbb
dec
dec
sbb
lret
lahf
jb
xchg
dec
movsl
push
jo
xchg
imul
nop
jecxz
stos
repnz
mov
mov
mov
js
popa
mov
sub
sbb
cmp
shrl
push
outsl
addb
add
jmp
inc
cmp
adc
mov
add
inc
aaa
pop
inc
mov
in
aam
pop
lea
mov
adc
imul
cmp
add
popf
out
inc
xor
test
aad
jle
mov
push
enter
ss
dec
push
inc
out
or
mov
iret
and
sub
out
hlt
mov
test
and
inc
push
mov
adc
or
pop
xchg
xor
and
sbb
jge
pop
sub
hlt
out
inc
lods
fisttpll
das
add
sti
sbb
test
push
jne
xchg
inc
mov
mov
int3
cmp
out
adc
jo
aaa
push
and
js
and
aas
sarb
adc
lcall
push
inc
pop
mov
jb
test
jns
add
cmp
mov
xorl
cmp
insl
cwtl
mov
xor
push
mov
das
mov
daa
push
sub
xor
int
stos
mov
jo
pop
imul
mov
arpl
cwtl
xlat
adcl
mov
int
int
leave
xchg
stos
les
jp
in
arpl
push
cmp
sbb
xor
cmp
gs
fsubrl
jp
adc
inc
jl
daa
fs
pop
and
adc
pop
push
leave
adc
data16
pcmpgtd
adc
sbb
jmp
or
jl
pop
pop
mov
sysexit
xor
xchg
mov
mov
sahf
sbb
xor
dec
cmp
mov
shrl
xchg
mov
xchg
sbb
stc
and
lcall
push
mov
xor
stos
roll
jne
jo
xchg
cmpsl
mov
push
ficomps
nop
aaa
fdivrl
mov
testl
push
les
rorb
sbbb
shrl
add
mov
xchg
xor
xchg
sbb
xchg
into
inc
xchg
icebp
cmp
iret
mov
cmc
lds
loopne
lds
xchg
filds
sbb
rcr
xchg
les
pop
and
mov
andl
loopne
pusha
mov
rcrl
mov
or
lcall
pop
fisubrl
pop
mov
lret
xor
jl
mov
je
mov
pop
mov
jp
shrl
lret
adc
gs
pop
sbb
movsl
cli
sbb
loope
lods
dec
fwait
push
pop
mov
cmp
rcl
lret
mov
test
ret
pop
fbld
lea
inc
inc
fidivs
imul
pusha
subl
nop
lcall
lcall
insl
gs
inc
or
pop
mov
repz
je
pusha
xchg
and
fstpl
xor
push
push
iret
aam
mov
xlat
lret
sbbb
xchg
nop
adc
jne
adc
test
mov
cmp
or
fcompl
push
adc
call
add
xchg
adc
sub
mov
call
rcl
hlt
pop
fidivs
xchg
jb
mov
shll
out
xlat
sub
outsb
lods
sub
sahf
lret
in
lea
inc
andb
mov
pop
pop
or
sbb
int3
xchg
icebp
jmp
push
call
stos
mov
jl
lcall
xchg
out
adc
xchg
popa
jecxz
mov
cmp
int
jecxz
and
jmp
test
adc
jmp
fdivs
dec
jne
mov
pop
xchg
popf
nop
sbb
jp
lods
jno,pn
dec
jle
call
xchg
mov
sub
pop
cmovp
mov
sar
mov
mov
hlt
dec
fsubrs
popf
xor
lret
data16
out
fistpl
cli
jb
jne
cltd
cmc
push
pop
les
mov
mov
mov
movsb
in
in
andb
pop
push
jb
dec
int3
sbb
mov
xor
pusha
adc
sbb
lcall
incb
mov
dec
add
sub
scas
cmp
adc
rcll
loopne
int3
lds
dec
pop
pusha
mov
cmc
icebp
lahf
cmpsl
xchg
mov
fidivrs
xchg
push
out
popf
xchg
addr16
inc
shr
int
fs
stc
xorl
and
xor
aad
lods
movsb
repnz
xor
pop
mov
std
push
mov
adc
jne
mov
into
jne
jl
mov
arpl
out
dec
jle
sub
shl
add
cmp
or
loop
add
inc
stos
call
xor
sahf
in
scas
sbb
sahf
lds
imul
int
xchg
or
pop
std
adc
sarb
es
arpl
mov
jae
push
fimull
xlat
and
cmpsb
out
xchg
pop
into
inc
sub
ret
inc
mov
and
push
sbb
or
jle
push
neg
xchg
xchg
sub
and
in
scas
cmp
xchg
fisttpll
je
fs
fs
sub
xchg
pop
xchg
gs
ret
cmpsl
pushf
in
jb
adc
fisubl
mov
jb
dec
in
sbb
ret
adc
and
es
stc
sbb
pop
call
sub
ret
mov
insl
arpl
sbb
push
or
pop
add
pop
add
xor
fs
stc
xor
lea
lcall
mov
cmp
mov
test
mov
insl
pusha
stc
or
dec
xor
clc
adc
jecxz
out
xor
sub
adc
xlat
or
jo
popl
and
jp
gs
lcall
mov
pop
push
mov
and
mov
pusha
es
sub
in
jae
dec
dec
loop
mov
test
shlb
pop
sbb
and
inc
jns
and
mov
mov
outsl
int3
xchg
es
hlt
add
cmp
or
dec
int
mov
adc
je
or
sbb
xchg
popf
xor
sub
scas
mov
ret
mov
xchg
cmp
stos
not
gs
mov
sbb
lea
inc
int
les
rcll
pusha
aad
subl
push
or
test
jae
push
call
das
test
mov
inc
fsubs
ret
mov
xchg
imul
mov
imul
dec
xlat
loop
mov
or
adc
mov
sub
pop
cmp
dec
leave
push
jg
and
in
jnp
loopne
mov
ret
in
xchg
test
inc
js
cmc
js
add
jno
sub
and
sbb
xchg
and
xchg
pop
movsl
or
pop
cmpsl
mov
jp
aad
mov
adcl
mov
push
gs
ss
fnstcw
add
lret
mov
test
popl
xchg
add
jl
stos
loopne
and
xchg
pop
les
lret
icebp
mov
inc
pop
push
mov
je
scas
mov
sbb
ret
ja
xor
and
in
loope,pn
pop
mov
lods
dec
add
ror
jns
mov
dec
int
jecxz
iret
jns
and
scas
jae
scas
inc
mov
fs
xlat
es
dec
outsb
cmpsl
or
xchg
mov
in
rcrb
jmp
sub
jbe
pusha
mov
add
pop
les
test
mov
mov
lahf
mov
shrb
xor
fisttpl
inc
mov
sub
sbb
mov
arpl
mov
jns
jl
or
xchg
in
dec
pop
pop
mov
loop
push
mov
xchg
jle
fdivrs
cli
push
lret
in
fisttpl
cwtl
mov
js
sbb
sbbb
fisubrs
sub
sub
adc
outsl
sar
shrl
sbb
mov
jle
adc
icebp
dec
xor
mov
xchg
fisttpl
xchg
cmp
jl
int3
jp
lret
es
int3
fstl
mov
enter
je
jg
cmpsl
add
jle
sarl
aad
push
js
arpl
stos
push
jno
cltd
add
inc
cltd
lock
xor
push
in
fstpl
dec
xor
ret
lods
popw
pop
jo
das
fsubrl
jae
lods
mov
hlt
inc
lahf
cmpsl
and
mov
ficoms
popa
mov
insl
inc
inc
inc
mov
jp
aad
add
add
push
inc
das
ret
out
sbb
pusha
jle
jmp
ret
cmc
cmp
jmp
xchg
nop
adcb
out
push
subl
cmp
mov
cmpb
inc
fstl
and
push
inc
sbb
ss
inc
stos
cmp
pushaw
cli
cli
dec
int3
aas
inc
popa
mov
dec
aas
cmp
mov
xchg
jg
push
jge
fs
hlt
jbe
sub
xchg
mov
mov
inc
xor
mov
or
pop
sbb
xor
fsubrs
or
fstpl
mov
push
popa
mov
jnp
insb
mov
call
cltd
out
loop
popl
pusha
xor
lods
jg
addr16
or
push
ja
les
clc
cmp
jecxz
jns
insl
mov
loopne
ret
aam
and
jbe
scas
loope
pushf
imulb
add
repz
add
mov
ss
call
and
xlat
mov
mov
fisubrl
imul
fs
xor
dec
and
inc
mov
or
xchg
icebp
mov
lea
insb
cmpsb
mov
xchg
loop
mov
bound
and
gs
add
jo
mov
adc
push
sbb
sub
xor
into
push
dec
xchg
mov
lcall
add
sub
sbb
test
add
test
outsl
test
cli
ds
imull
jp
rcrb
sarl
inc
aaa
je
data16
or
out
or
xor
cmp
push
jmp
js
aas
cmc
scas
jg
mov
sub
add
ret
arpl
push
gs
shrb
rcll
sub
in
inc
cli
test
pop
add
pop
js
fisubs
jbe
sti
test
mov
push
sbbb
rcl
fidivrs
enter
push
cmp
add
test
xor
and
sub
push
test
cmp
mov
je
pushf
icebp
push
ss
les
arpl
mov
add
sar
pop
mov
mov
adc
stos
js
adc
push
push
adc
gs
mov
incl
lods
loopne
out
pusha
cltd
pop
divb
jae
adc
add
sub
arpl
xchg
out
movsb
arpl
rcl
push
or
xchg
pop
fdivp
ja
inc
jne
insl
mov
inc
out
inc
loop
cmp
pusha
shl
mov
shlb
rcll
jl
in
nop
into
dec
jg
add
push
jnp
leave
rolb
inc
pop
ret
push
fidivl
pop
push
add
mov
imul
cmp
mov
cmpsl
pop
into
out
out
shrl
mov
jo
push
addr16
and
test
lds
movsl
xchg
pusha
sahf
mov
and
repnz
out
dec
mov
xchg
je
adc
jl
arpl
ret
gs
lock
push
gs
pop
cmp
bnd
push
fisubrs
xlat
ret
cmovno
aaa
pop
aas
adc
mov
mov
push
inc
jl
scas
outsl
jnp
jae
cmp
cli
pushf
clc
push
sbb
dec
test
sbb
mov
inc
cltd
call
popa
push
mov
lods
mov
jae
mov
xorb
xchg
stos
xchg
daa
pusha
mov
mov
fldenv
mov
pushf
push
mov
xorb
fldenv
ret
push
and
mov
mov
int3
je
push
fists
or
fadds
aaa
and
push
loop
cmp
pop
xor
jbe
sbb
sub
pop
cmc
imul
adc
stos
and
gs
xchg
or
cmp
dec
lds
imul
adc
stos
and
gs
xchg
or
cmp
dec
imul
adc
stos
and
push
sti
mov
sub
pop
jne
gs
mov
xor
inc
int
mov
add
inc
rsqrtps
bound
jb
mov
bound
pushf
testl
sbb
pop
inc
rsqrtps
bound
jb
add
jg
outsl
inc
lahf
into
sarb
lock
nop
jmp
cmovnp
jp
push
sbb
jg
outsl
sub
fwait
lret
int
out
rolb
and
pop
inc
adc
xchg
shl
push
sbb
push
jp
sbb
pop
test
repz
lock
imul
pop
jb
loope
fldl
sub
mov
or
test
fisubs
push
push
sub
popf
cmp
ret
scas
mov
or
jl
out
negl
sbb
lods
cld
popf
sub
aaa
add
mov
and
sub
sbb
iret
pop
pop
pop
mov
mov
ret
subl
pop
sahf
xchg
popl
out
aaa
and
sar
je
les
fsubrs
lds
cmp
cmovb
jnp
jb
add
jg
outsl
sub
sti
scas
jmp
lcall
jp
insb
and
imul
adc
push
out
lods
ljmp
out
nop
lcall
cmp
sbb
cmp
add
mov
mov
xchg
xchg
xchg
lds
push
jns
dec
aaa
sbb
dec
adc
outsl
xor
loop
repnz
out
mov
inc
rsqrtps
bound
jb
add
jg
outsl
xor
loop
repnz
out
mov
inc
outsb
inc
mov
mov
sub
cmp
movsl
divb
push
ret
out
pop
jmp
cli
add
gs
mov
mov
das
mov
pop
mov
cmc
jmp
in
xchg
lock
test
mov
out
ds
push
dec
scas
sti
popa
cmp
jb
lret
lret
in
fadd
mov
xor
jae
aad
or
movsl
push
hlt
mov
fdivs
add
sub
out
cmc
pop
ljmp
arpl
and
ja
ljmp
inc
jnp
inc
cmp
outsl
jo
das
ja
add
cmp
inc
ja
mov
gs
push
divl
jl
into
daa
cmp
in
push
xor
icebp
pop
xor
dec
fdivs
mov
jge
jns
sti
pusha
sub
xchg
ret
outsl
pop
push
addr16
bound
xor
out
pushf
repnz
adc
movsb
imul
jge
jb
pop
test
cmpsb
filds
repz
into
pop
xor
cld
push
aad
jb
bound
mov
mov
addr16
aaa
stos
std
loop
push
hlt
mov
movsb
push
xor
shrb
cmp
pop
xor
daa
loopne
div
push
jmp
repnz
xor
mov
jnp
xor
push
and
sub
int
sbb
sbb
mov
or
jae
xlat
mov
clc
cltd
out
dec
add
push
out
mov
test
stc
jno
outsb
lret
pop
cli
push
xchg
ret
xorb
fsubs
dec
sub
daa
out
roll
mov
xchg
pushf
jle
iret
sub
mov
ror
dec
mov
adc
pushf
xchg
mov
pop
roll
mov
mov
jbe
cmp
and
int3
es
outsl
ljmp
or
lahf
adc
movsl
pop
sbb
icebp
clc
inc
adc
cmp
int
test
icebp
mov
cmc
push
fisubl
sti
jl
psrad
pop
mov
aas
jbe
ja
inc
mov
dec
push
mov
notl
push
imull
push
insb
xchg
xchg
sbb
pop
movsl
sub
cld
fsubs
jge
loope
cmp
mov
dec
sbb
pop
cmp
icebp
pop
fstpt
dec
iret
iret
mov
cmp
jns
and
adc
mov
decb
lods
lcall
or
hlt
push
int
jecxz
push
dec
mov
test
js
cmpsb
mov
fisttpl
push
mov
push
add
cmp
clc
movsb
js
sti
jmp
jle
push
and
xchg
adc
je
adc
push
add
add
xchg
cld
mov
in
jg
mov
or
dec
xchg
adc
out
mov
and
and
mov
and
and
fsubs
pop
mov
mov
sub
insb
leave
mov
cmc
pop
sbb
movsl
movsl
adc
addl
rorl
stos
insl
xor
outsb
ljmp
push
add
pop
stos
xchg
and
mov
mov
pop
mov
outsb
fiaddl
stc
sub
iret
sub
sbb
add
jl
inc
sub
inc
adc
std
mov
in
cmp
inc
adc
ja
gs
push
mov
mov
leave
out
lahf
and
xor
lcall
es
jno
jmp
fistps
test
fwait
ret
cltd
daa
movsl
cmpsb
lcall
mov
loop
fimull
into
xchg
das
sbb
imul
lcall
jbe
cmpb
popf
imul
sbb
mov
arpl
ret
jmp
inc
adc
imul
ret
rorb
or
adc
jp
inc
ror
sub
into
ja
test
mov
in
enter
sbb
jo
hlt
pop
movsb
add
pop
mov
xor
dec
and
mov
sub
mov
call
or
sbb
or
data16
xor
dec
or
mov
imul
sahf
mov
sbb
aam
sub
sarb
popf
xchg
pop
fdiv
xlat
cmp
sub
inc
cwtl
mov
lahf
addl
out
fcoml
iret
data16
xchg
or
ja
xchg
aad
ss
repz
mov
ss
xlat
add
loopne
dec
mov
add
fs
mov
movsl
daa
dec
jnp
fs
stc
or
xchg
sbb
inc
pop
mov
dec
or
adcl
dec
stos
mov
shlb
fidivl
cmc
arpl
xchg
stos
fdivrl
repnz
aad
das
jne
hlt
cmpsb
or
aam
out
je
push
in
cmc
mov
sub
and
dec
and
test
ret
add
and
sub
cs
fwait
adcl
sub
insl
xchg
nop
push
daa
and
and
lahf
mov
dec
mov
pop
or
test
or
xchg
add
imul
ljmp
subl
scas
rol
mov
cwtl
mov
cmc
xchg
stos
sar
jns
or
cmp
divb
or
inc
fsubrl
and
or
movsl
sbb
das
mov
out
fisubrl
sub
call
cltd
xchg
das
adc
mov
in
fldt
sub
in
push
aam
movsb
xchg
xlat
dec
jg
stc
add
mov
repz
sub
nop
adc
xchg
jmp
inc
mov
xchg
insl
cmp
mov
jp
cmp
jno
and
pop
cwtl
in
xor
das
or
mov
test
sbb
lcall
and
pop
inc
out
mov
pusha
add
std
cwtl
or
in
sub
enter
ss
cmp
mov
cmp
add
into
les
push
stos
mov
push
loop
adc
test
mov
add
jg
cs
cmpsl
dec
data16
jo
adc
add
test
add
and
leave
es
imul
aas
add
push
and
or
jg
lahf
pop
mov
ljmp
in
pushf
test
pop
xorb
xchg
popa
mov
inc
nop
cli
sub
push
inc
pop
jnp
jno
sbb
jns
sbb
mov
inc
xorb
dec
mov
icebp
adc
pop
cmc
lret
in
jmp
dec
and
inc
or
add
mov
ret
andl
and
fs
adc
lods
mov
fldt
clc
cmpsl
adc
pop
mov
popf
dec
xchg
sub
or
xor
lods
sbb
xchg
addr16
mov
adc
sti
iret
jmp
push
test
or
jl
sub
ret
sub
cld
push
inc
cmc
inc
jmp
rcrl
mov
and
fstps
outsb
popa
xchg
and
ror
mov
lods
arpl
mov
pop
loope
dec
or
imul
or
shlb
in
xchg
popa
int3
xlat
test
and
fsubl
xor
jge
enter
fnstenv
mov
inc
xlat
aas
out
loopne
xor
inc
lahf
shrb
sub
adc
pop
in
mov
sbb
cmpsl
fsubrs
xlat
mov
fwait
cmp
in
inc
ss
add
out
fs
and
repnz
mov
loop
cltd
or
ljmp
imul
pop
xchg
lds
add
sarl
in
mov
stc
pushf
adc
out
hlt
cmp
hlt
fmull
push
adc
incl
int
loopne
arpl
js
cs
call
int
xor
jmp
maxps
daa
daa
lods
dec
jb
in
mov
mov
lock
pushl
and
mov
fnstsw
movl
aam
clc
das
dec
hlt
lods
lock
xchg
lods
sti
imul
cmpsb
push
fistpll
jnp
gs
lock
out
jecxz
add
out
adc
xor
dec
je
cli
nop
lret
cltd
scas
push
and
cltd
int3
std
jnp
aaa
mov
outsb
cmp
inc
std
daa
lods
scas
or
or
loop
enter
jp
dec
sbb
dec
jecxz
aad
cmc
jle
dec
fnstcw
or
lods
xchg
in
mov
movsb
call
enter
sbb
popf
mov
clc
cltd
xor
cltd
or
roll
jnp
lret
adc
ds
inc
xchg
repnz
xor
and
stos
mov
ja
dec
pop
lods
inc
outsb
push
sahf
cli
cltd
inc
dec
or
in
cli
add
scas
pop
int3
cmp
dec
faddp
adc
mov
xchg
shlb
add
adc
jno
xor
add
cmp
fcmovbe
es
loopne
hlt
cmpb
mov
pop
push
dec
pushf
out
inc
mov
ja
cmpsl
mov
xchg
mov
adc
call
push
das
loope
sbb
mov
jg
lret
fidivl
pop
sub
testb
mov
jbe
cmp
mov
push
pop
divl
jnp
inc
xor
xlat
cltd
jne
sbb
das
or
xchg
ljmp
xchg
xorl
clc
aam
fucompp
jp
addb
dec
adc
or
enter
xchg
mov
cmp
mov
dec
int
cmpsb
add
mov
faddl
cmp
jno
dec
sub
fdivs
es
mov
pop
jmp
lahf
and
rclb
lcall
mov
mov
cmp
leave
push
mov
imul
jle
int3
icebp
sub
test
fwait
sub
es
cmp
loope
dec
mov
pop
inc
add
sar
xor
mov
push
mov
hlt
loopne
mov
clc
mov
nop
mov
outsl
bound
inc
mov
cmp
mov
int3
or
data16
pop
in
xor
jo
data16
lds
add
jbe
test
int
jecxz
lret
dec
mov
pop
pop
xchg
push
mov
push
cmpsb
dec
mov
xchg
in
mov
gs
pop
daa
int3
es
xchg
mov
push
repnz
stos
fstpl
int
sbb
data16
lret
adc
clc
mov
clc
add
aas
scas
push
push
rcrl
inc
xchg
int3
or
andl
sub
pop
scas
enter
jecxz
and
ljmp
stc
sub
push
jno
lret
out
pop
adc
xor
push
jae
iret
pop
loope
es
shl
jnp
mov
sbb
arpl
sub
add
push
rclb
jle
stc
pop
pop
lret
xor
loop
sbbl
add
aam
cmp
loopne
mov
insl
es
cmp
addr16
mov
aad
std
test
push
cmp
in
and
push
mov
xchg
cltd
or
nop
and
clc
imul
push
setno
hlt
dec
xchg
pop
add
mov
jle
and
xor
or
dec
mov
pop
cmp
xlat
push
fstl
das
mov
add
mov
pop
pop
sar
in
mov
cmpl
push
mov
push
cs
dec
sub
xor
aad
inc
in
aam
mov
ljmp
add
das
and
out
adc
sbb
fisttpl
sub
jae
mov
fstpt
fwait
mov
pusha
enter
lret
negb
push
inc
imul
pop
xor
xchg
add
cmpsb
pop
xchg
daa
xor
pop
pop
adc
int3
mov
mov
sub
pop
xchg
jmp
outsl
les
and
stos
jbe
or
push
loopne
lock
addb
and
arpl
clc
jbe
cmpsl
std
adc
and
dec
mov
mov
test
inc
cmp
fiadds
or
fisttpl
in
and
or
out
clc
inc
lcall
std
inc
lret
xor
and
pushf
add
cmp
mov
push
cli
xlat
int3
push
scas
outsl
mov
push
cmp
mov
testb
dec
bound
subl
inc
popa
adc
and
cmp
pop
push
mov
arpl
imul
lock
sbb
aaa
popf
shlb
test
inc
mov
mov
mov
fndisi(8087
ret
adc
xchg
pop
inc
xor
sti
pop
ficoms
aaa
mov
xchg
xchg
mov
lret
enter
in
repnz
adc
scas
das
jne
mov
or
adc
mov
cmp
xlat
xchg
int
mov
mov
or
sbb
adc
repz
rolb
imul
js
and
xchg
sbb
adc
mov
addr16
fwait
add
leave
sti
sub
fiaddl
mov
mov
xchg
shrl
in
push
mul
mov
or
add
aam
pushf
lret
mov
add
push
and
outsl
add
inc
jl
mov
ret
cs
mov
sub
mov
lods
loopne
sahf
push
mov
pop
test
cmp
adc
dec
adc
push
lcall
addr16
jo
xor
ficoml
icebp
xlat
sub
mov
and
jno
sar
adc
ja
idivb
sbb
stos
cmp
jl
js
popf
lcall
std
pop
shrb
fstps
out
xor
dec
mov
inc
dec
lods
cli
lahf
xchg
xlat
lahf
adc
inc
enter
sbb
push
xchg
and
lea
add
jp
mov
mov
fists
sarl
mov
pop
jg
cmpb
dec
xor
int3
mov
push
sub
les
mov
push
js
lahf
inc
std
jl
mov
lahf
xlat
test
cli
loop
int
mov
nop
xor
ret
mov
stc
dec
pop
dec
push
inc
jp
cmp
and
jno
je
setle
jae
jne
leave
inc
inc
inc
fsts
in
mov
addl
jb
stos
pop
cmp
sub
jl
push
repnz
in
xlat
xchg
jge
mov
ficoml
sub
mov
xor
fnsave
inc
jns
int
push
lods
jp
stos
sbb
sbb
es
iret
shlb
inc
inc
or
inc
inc
or
pushf
insl
and
shlb
out
mov
cmp
test
mov
cmp
mov
mov
aam
pop
loopne
xchg
adc
and
xorb
pop
push
cmpb
enter
xor
inc
pushf
jb
mov
sbb
rcll
enter
jl
xchg
pushf
ja
xchg
sub
in
movsb
outsb
test
mov
push
popa
scas
rorl
fcmovu
sub
aam
dec
movsl
hlt
adc
scas
movsb
lahf
ret
push
enter
cltd
or
push
sbb
mov
pop
fisttpl
push
imul
pop
mov
lahf
iret
jmp
fs
mov
xchg
mov
sar
cld
fsubrs
jle
add
inc
jl
out
mov
jae,pt
test
sub
popf
fwait
jge
daa
movsb
inc
lret
inc
inc
add
cmp
decl
nop
aad
test
lock
jecxz
pop
in
and
dec
adc
mov
add
ljmp
cltd
lret
test
mov
push
mov
lea
mov
sar
ja
bound
pop
jno
or
cli
test
sti
outsb
adc
fcompl
xor
mov
push
or
pop
lcall
adc
js
sbb
jmp
popf
mov
cwtl
dec
clc
ljmp
cmpsl
lods
outsb
adc
inc
sub
dec
adc
mov
filds
jge
or
fstl
cmp
cmp
mov
mov
in
add
jg
subb
xchg
sub
inc
jbe
in
loope
cltd
push
sahf
push
push
aas
dec
fwait
mov
sbb
call
repz
lret
fstpl
or
mov
xor
lcall
xlat
push
xchg
lea
push
loope
mov
mov
lidtl
cmp
je
fcomps
fistpl
out
dec
xlat
aad
mov
mov
sub
jo
xchg
faddl
jle
xor
jae
lret
push
addr16
xchg
xchg
fld
testb
xor
lods
into
pop
into
imul
cmpsb
mov
pop
or
xor
and
insl
les
lcall
insb
ljmp
cld
ds
adc
sub
lds
outsb
in
fbld
cmc
mov
mov
push
stos
push
xor
lret
bound
push
sbb
and
movsl
cmp
push
imul
or
in
pop
sub
sbb
lret
cltd
adc
mov
add
push
addr16
pop
repz
ljmp
mov
cmp
mov
gs
mov
insb
test
or
dec
sarb
mov
movsl
adc
push
mov
jmp
pop
sub
jnp
cld
stos
mov
pusha
cwtl
ret
push
fidivl
sarl
stos
dec
shrb
inc
sahf
popf
lods
shll
sahf
push
lcall
lods
es
sarl
dec
jne
sti
jmp
shlb
hlt
jmp
jmp
in
loope
shll
xchg
test
pop
addl
insb
test
repz
iret
pop
movb
mov
adc
jbe
js
pop
mov
aam
fistl
xchg
adc
sub
adc
rclb
dec
adc
lret
push
and
xchg
imul
mov
mov
xchg
xchg
adc
stos
inc
mov
and
add
push
push
dec
jle
cmp
cmp
xlat
cmpsb
pop
mov
push
mov
xor
decb
mov
sarb
pushf
stos
mov
int
js
pushf
cs
iret
arpl
mov
inc
mov
dec
push
mov
xchg
sub
daa
enter
inc
std
xchg
clc
add
xor
dec
push
fcomp
addr16
inc
insl
pop
add
loopne
and
cld
mov
xchg
cmp
sbb
pop
pop
xor
cli
cmp
hlt
mov
cmp
cmc
xchg
sub
rcr
cmp
icebp
lahf
inc
pop
testl
ja
cmp
pop
mov
cmc
mov
sub
push
mov
jecxz
enter
push
push
pop
sbb
aam
jl
mov
push
pop
dec
lds
lds
stos
mov
mov
in
cmc
in
pop
push
jo
movl
xchg
sbb
jl
push
aaa
in
fbld
jp
in
sbb
test
xor
fcomi
mov
shll
call
dec
test
int
sarl
jae
and
sub
imul
and
inc
push
ds
aaa
sti
xor
lock
inc
push
mov
or
inc
sbb
imul
outsb
sbb
cmpsb
push
add
fisttps
insb
pop
js
inc
push
loope
sub
out
adc
dec
mov
fs
add
rolb
movsb
sub
add
cli
and
incl
into
push
fdivs
jmp
jmp
pop
pop
inc
pop
cmp
cwtl
arpl
xor
shlb
loop
sbb
pop
mov
addr16
cld
add
mov
mull
sub
xor
mov
xchg
xlat
and
call
sub
mov
mov
popf
test
popa
jae
subb
lods
jge
dec
loopne
cmp
mov
insb
push
push
push
in
mov
push
lret
addr16
call
or
std
mov
cmp
out
add
loopne
dec
test
popl
mov
push
mov
pop
push
inc
es
and
cs
mov
adc
push
pop
iret
xchg
mov
rol
das
cmp
aad
in
jnp
loop
push
addr16
sub
add
imulb
lods
fsubs
jmp
pop
and
loopne
sub
dec
mov
repz
pop
jns
pop
imul
fsubr
das
in
das
imulb
test
fdivr
sub
adc
loop
jmp
out
cmpsl
loope
in
and
out
sarl
js
or
aad
test
inc
push
jmp
mulb
adc
loop
out
cmc
pusha
outsl
mov
rorl
xchg
mov
dec
xchg
mov
inc
add
int
jbe
inc
inc
sub
gs
testl
mov
and
daa
mov
movsb
je
int3
push
ret
inc
je
push
gs
pop
and
ljmp
dec
lret
fs
inc
sub
mov
jmp
mov
sbb
mov
je
cltd
sbb
or
and
sahf
jmp
jo
loopne
jg
cmp
mov
add
popa
mov
mov
sub
mov
nop
adc
add
jb
add
jg
outsl
xor
loop
repnz
out
mov
inc
rsqrtps
bound
jb
add
jg
outsl
xor
loop
repnz
out
mov
inc
rsqrtps
bound
jb
add
jg
outsl
xor
loop
neg
or
cmpsb
out
mov
inc
orps
data16
jb
add
jmp
out
repnz
ret
adc
or
pop
fstl
int
lahf
daa
pop
mov
or
mov
cmpsl
seta
xchg
negl
vmptrst
outsl
aaa
lahf
daa
pop
mov
addr16
push
incl
cmpsl
pop
cmpsl
seta
mov
negl
dec
xlat
jg
outsl
cs
ds
movswl
scas
outsb
fistpll
dec
incl
scas
and
testl
dec
sti
pop
and
addr16
xchg
cld
orb
pop
pop
push
aas
fistpll
pop
out
pmuludq
cmpsb
mov
fmul
outsl
scas
mov
xor
repz
xor
jns
cmpsl
lahf
test
enter
in
inc
ret
mov
jecxz
fdivr
xchg
fistps
scas
cmp
out
negl
jl
add
ss
aaa
mov
mov
data16
sub
sbb
or
pop
pop
add
jae
imul
xor
add
push
xchg
ret
ja
seta
or
jle
aas
fistps
ja
mov
gs
movsb
xor
push
loopne
push
ljmp
mov
lahf
ds
pop
mov
ja
push
lcall
scas
pop
mov
das
out
pop
decl
jg
sub
inc
pop
jb
jae
add
add
mov
lret
data16
jecxz
divl
xorb
std
stos
or
inc
lds
ja
sbb
adc
hlt
pop
ret
imul
and
iret
dec
sti
jnp
outsl
fstpt
mov
iret
push
incl
mov
cmpsl
seta
xchg
negl
dec
xlat
jg
outsl
aaa
lahf
daa
pop
mov
addr16
push
incl
mov
cmpsl
seta
xchg
negl
dec
xlat
jg
outsl
aaa
lahf
or
sbb
add
xchg
xchg
push
out
jnp
lcall
mov
mov
hlt
cmp
inc
jp
push
sbb
push
aas
xchg
inc
filds
lock
inc
mov
or
sbb
lcall
inc
test
xor
movsb
cmc
movl
sar
or
jns
mov
jb
into
push
mov
sbb
mov
jb
mov
push
cld
xor
scas
clc
and
mov
or
jnp
pop
and
in
sbb
icebp
or
xchg
pop
std
stc
in
jge
ret
sbb
or
jbe
aam
out
lahf
add
aam
std
or
out
arpl
sub
mov
jns
adcl
pause
scas
movsl
in
dec
repz
fmuls
xchg
push
xchg
jae
test
mov
je
fcomps
adc
cmp
sub
add
insb
loopne
sub
and
imul
cmp
xchg
out
bound
push
inc
jns
adc
movsb
adc
adc
les
mov
and
sub
adc
push
cltd
jecxz
mov
push
in
add
mov
imul
cmp
jle
adc
cwtl
mov
shlb
sbbl
sahf
xor
xchg
cwtl
adc
fists
nop
xchg
lret
insb
call
cmpl
ja
and
out
jnp
test
cmpsb
shlb
cld
mov
mov
xchg
rcll
xor
icebp
mov
sbb
inc
sbb
mov
jns
dec
pop
xchg
daa
mov
dec
add
scas
add
mov
sub
sub
mov
mov
sbb
push
jnp
and
pushf
push
cmc
popf
out
mov
iret
adc
inc
gs
push
stos
fstl
std
imul
std
aad
stos
pop
xchg
cmp
les
aaa
jno
mov
iret
rcrl
ja
out
lea
shll
out
data16
sbb
mov
pushf
enter
cmpl
enter
mov
xchg
shr
ja
sarb
rolb
xchg
aad
or
or
mov
dec
jne
and
orb
loope
out
loopne
mov
inc
bound
std
mov
out
push
xor
jo
rcrl
out
mov
clc
cmc
sbb
jbe
cmp
mov
pop
lret
cmp
pop
cltd
dec
daa
dec
sub
sbb
adc
pushf
add
push
push
xor
add
es
fld
outsb
insl
fadds
and
les
pusha
adcl
inc
mov
test
cli
clc
pop
mov
imul
or
xor
out
and
fcoms
or
and
jnp
jns
fs
mov
pop
dec
mov
cmp
lods
jnp
out
js
jmp
notb
mov
jge
aaa
jne
sub
in
outsb
js
out
inc
call
outsl
pop
sar
and
pop
xor
mov
and
inc
es
ds
hlt
loopne
sub
inc
popl
aam
insl
cmp
inc
add
mov
and
and
pop
pushf
push
jge
insb
or
jmp
mov
jae
fbld
sbbl
call
rcr
fldenv
fisttpl
or
xchg
add
aas
mov
in
sbb
or
and
mov
mov
mov
nop
inc
rcll
or
pop
add
aad
adc
test
and
imul
loope
in
push
stc
daa
rorl
lea
sbb
dec
xor
mov
lods
cltd
loopne
mov
or
mov
or
ret
repz
test
incb
jmp
ret
dec
mov
gs
xor
jne
rcll
fcompl
xor
mov
mov
ss
mov
and
sbb
inc
adc
aaa
in
push
mov
sbb
add
pop
loop
cld
inc
pop
mov
xchg
jge
mov
mov
pop
rcrb
ret
ljmp
mov
rcrb
jbe
sbb
mov
inc
cli
loop
mov
lds
notl
leave
bnd
test
xor
mov
mov
das
xor
push
movsl
inc
pop
push
imull
cmp
in
mov
fcomps
cmp
mov
jae
dec
jns
loop
mov
mov
loopne
arpl
rol
cmp
mov
aad
fdivr
mov
push
out
in
cltd
pop
sub
cltd
or
stos
pop
rolb
mov
lret
fistl
in
mov
pop
int3
xchg
hlt
mov
js
out
mov
dec
mov
lret
lcall
hlt
cmp
or
loope
push
mov
xor
hlt
lret
add
and
dec
sbb
push
int3
les
scas
stos
adc
pop
fcompl
xchg
push
std
mov
cmp
adc
pop
rorl
sbb
dec
cmp
sbb
xlat
mov
add
icebp
lds
in
je
ror
shll
mov
jge
adc
xchg
dec
xor
repnz
jnp
popf
xchg
or
iret
xor
xchg
mov
mov
das
lods
ds
jge
mov
in
lret
or
mov
cmc
sub
sbb
or
cs
mov
mov
loop
cmp
ss
cld
movsl
int3
fisubrs
testl
cs
sti
fcoml
iret
loopne
mov
cltd
iret
push
jns
pop
mov
or
or
int
mov
sub
inc
fcompl
xor
xchg
rclb
jle
popa
popa
sub
ficoml
sub
bound
lret
xor
into
repnz
pop
cs
test
jne
out
mov
mov
out
adc
nop
pop
sub
jne
aad
jo
mov
add
jmp
inc
push
nop
icebp
xor
jnp
ret
sbb
jo
ljmp
movsb
sbb
add
in
out
inc
jnp
dec
sub
nop
xchg
pop
sub
dec
pop
fadds
stos
cltd
fdivs
pusha
lds
add
imul
imul
push
out
adc
mov
mov
cmp
cmpsl
pop
and
or
fidivrl
sbb
cli
or
addb
adc
sbbl
inc
adc
repz
movsl
test
xchg
and
fwait
lret
mov
mov
shlb
add
loopne
addl
pop
stos
imul
aaa
sbb
pop
or
insl
aas
jl
lcall
and
enter
sahf
and
dec
adc
pop
stos
outsl
mov
mov
out
mov
mov
cmpsl
add
push
mov
push
aad
fstpl
inc
push
xor
jmp
mov
mov
fildll
loop
cli
add
jbe
dec
adcb
add
dec
out
inc
or
ja
dec
cmpsb
ljmp
push
xlat
fistpll
mov
flds
sbbb
dec
dec
xchg
into
xchg
insb
das
enter
xchg
cmpl
addr16
int3
js
push
imul
jge
in
adc
outsl
lock
or
jecxz
xor
movl
jb
jb
dec
lds
pop
adc
aam
mov
aas
jb
ss
negb
jnp
mov
sbb
fxch
ljmp
dec
cli
ficoms
push
cltd
popf
sbb
mov
sub
mov
sub
jge
loopw
orb
cmpsl
or
pushf
cmp
stos
mov
mov
push
push
mov
lahf
lcall
push
jnp
imul
dec
adc
xchg
push
aas
fistpl
push
dec
mov
mov
clc
in
sarl
lahf
sbb
mov
test
addr16
xor
repz
aas
add
rcll
and
and
xor
test
pop
pop
shlb
cmp
sub
or
jnp
fbld
shrl
xor
pop
mov
ffree
mov
cmpl
ja
and
ret
daa
in
fs
ret
or
xlat
dec
lock
decb
xor
xchg
sub
test
cwtl
aam
outsb
xor
xor
mov
mov
cmp
or
iret
or
and
xchg
bound
orb
nop
dec
jae
pop
sahf
stc
sbb
lret
popf
outsl
sarb
inc
in
imul
sbb
sub
xchg
stc
rclb
test
xor
mov
cwtl
jmp
pop
or
int
or
mov
xchg
jg
rclb
and
mov
or
dec
add
cmovns
hlt
out
push
scas
cmc
sub
sbbb
xor
adc
jmp
sbb
mov
cmpsl
aas
push
pop
repnz
icebp
pop
xor
int3
dec
not
lea
je
jmp
lret
loopne,pt
faddl
rolb
jg
jmp
rcrl
mov
fwait
enter
xchg
adc
sub
xlat
dec
out
jmp
add
int3
add
xchg
insl
ror
push
mov
lret
pop
daa
sahf
call
loope
cmp
jle
push
mov
and
aas
scas
push
mov
fwait
ret
xchg
push
sbb
scas
mov
ret
loop
cmp
sub
add
bound
test
push
mov
daa
and
mov
jp
clc
sub
push
pop
fildl
lahf
adc
add
inc
mov
adc
mov
mov
xchg
mov
out
xor
xor
test
mov
and
and
or
mov
jbe
mov
xor
aaa
fcompl
sbb
xor
int3
add
test
insl
dec
inc
repz
int3
sub
sbb
cmp
outsb
lock
mov
cmp
out
add
es
mov
arpl
push
test
jle
clc
arpl
push
pop
xor
or
pop
xchg
scas
add
stc
sub
xlat
xor
and
loope
insl
lock
xorl
sbb
test
sbb
arpl
jb
es
into
jbe
jbe
int
out
push
cmpsb
push
loop
lret
and
add
aad
daa
call
adc
aaa
cltd
jae
shrb
sbb
mov
testl
scas
xchg
repnz
aad
xor
or
sbb
addl
cmpsl
inc
mov
adc
hlt
pop
out
push
add
out
jl
ja
lret
or
enter
xchg
insl
sbbl
mov
jge
jl
in
je
jnp
add
jmp
enter
test
pop
ss
and
xor
test
lret
sbb
jmp
inc
cltd
add
lret
dec
jbe
aas
pmulhw
xchg
mov
lds
in
cmp
pop
lret
mov
mov
mov
mov
divl
enter
clc
push
mov
jb
mov
cmp
cmp
jmp
fs
shrb
int
push
cs
sbb
es
mov
aam
std
stc
movsl
xor
cmp
hlt
mov
insl
in
cmp
loopne
loopne
sub
outsb
pushf
outsb
dec
and
inc
mov
loop
cld
dec
xor
push
mov
in
and
pop
lret
fidivrs
xor
popa
mov
outsl
cmp
popa
inc
hlt
inc
lock
cwtl
popf
jnp
dec
jmp
je
mov
sbb
pop
cmp
mov
fs
int3
std
push
dec
enter
and
in
ficoms
loope
lock
std
shr
arpl
jb
repz
lcall
cmp
int
fcomps
sub
xchg
add
fistpll
fwait
mov
fnstsw
into
mov
jo
push
stos
es
sbb
leave
xor
aas
insb
jbe
fs
cld
pop
ljmp
nop
repz
popa
push
popf
push
mov
xorb
in
lods
fdivrp
scas
icebp
push
cli
xchg
jecxz
and
icebp
mov
sub
shlb
rcrl
jl
fwait
push
lret
mov
lret
mov
pop
leave
popa
sub
dec
and
mov
mov
or
cmp
sub
cmpsb
xor
in
ds
cmpsl
fwait
lods
pop
sbb
repnz
jmp
xlat
mov
mov
xor
call
test
mov
jle
test
or
mov
xlat
hlt
pop
idivb
bound
mov
add
js
in
cmp
cmpsb
push
imul
xchg
sbb
jae
pop
test
cld
push
and
mov
cmp
xchg
push
test
dec
lahf
insl
fldlg2
mov
mov
xor
shll
lret
sub
jnp
add
shll
cmpsb
or
sbb
xchg
test
bound
arpl
inc
xor
shr
push
repz
or
das
fld
hlt
les
sub
shlb
mov
jmp
xchg
lock
sahf
imul
out
into
xchg
out
sbb
mov
outsb
pop
mov
stc
out
negb
push
call
dec
jno
movsb
cmp
test
scas
fildll
outsb
xchg
or
cmp
cld
frstor
sti
loope
push
pop
and
mov
sub
add
add
sbb
fistpll
or
cltd
jp
clc
mov
inc
ljmp
xor
lret
sbb
push
and
xchg
jle
out
add
dec
xor
imul
les
adc
sbb
dec
clc
add
or
pop
ds
xchg
mov
and
xor
push
andb
outsl
add
mov
mov
les
jno
dec
or
in
js
es
idivb
mov
dec
mov
xor
fsts
xor
xchg
ret
daa
adcl
in
outsl
es
mov
xchg
jle
dec
xor
loope
inc
cli
cmpsb
jmp
lods
pop
lret
jbe
cmc
ja
adc
bound
adc
sbb
sbb
dec
insb
test
ret
xor
out
js
fucomip
mov
mov
in
stos
add
mov
out
mov
xchg
gs
sbb
sbb
jl
sbb
pushl
jmp
sbb
fildll
adc
adc
outsb
jnp
and
ss
sbb
adc
aam
leave
ds
sub
add
je
mov
mov
cmpsb
xor
sti
imul
adc
lock
add
sbb
aaa
inc
pop
daa
and
cmp
sub
imul
les
int
movsb
xchg
test
dec
test
fwait
push
mov
mov
add
or
iret
push
lret
jbe
jno
fucomip
push
fwait
not
push
sub
dec
nop
pop
mov
sahf
cmp
xchg
ficompl
cmpsl
jne
push
icebp
xor
movsb
mov
lods
lock
jp
ret
inc
push
and
or
insb
fsubrs
cmp
cli
das
xchg
inc
cmpsl
pop
notb
sbb
lds
aad
sbb
add
mov
cmp
repnz
out
movsl
ror
scas
push
in
jbe
lods
bound
cmpsb
add
loop
js
lods
xchg
mov
imul
enter
je
xchg
pop
mov
rclb
std
repz
adc
xor
push
fistps
push
add
mov
cmp
pop
mov
sbb
mov
rolb
arpl
data16
mov
or
adc
arpl
or
pop
push
sbb
inc
jns
mov
cmp
stos
imulb
sub
pop
pop
call
jecxz
jmp
fdivl
fcmovb
xchg
jbe
or
or
mov
lret
je
cltd
in
pop
cmp
sub
leave
add
fs
xor
ret
or
mov
xchg
daa
mov
int3
test
sub
gs
pop
dec
out
or
inc
jg
push
setle
or
test
sub
add
scas
adc
pop
mov
bound
loopne
in
insb
push
sub
in
add
enter
icebp
lahf
xor
lcall
enter
pop
sub
dec
int
mull
cwtl
lahf
mov
xor
pushf
xor
enter
push
add
add
or
scas
loop
jbe
outsb
xchg
fildll
in
es
stc
push
pushf
adc
mov
rcr
and
nop
add
ffree
ret
sbb
ja
test
sbb
rorb
jne
xor
cmpsb
dec
mov
mov
leave
stos
je
int3
mov
and
aas
test
shlb
loop
out
subl
jns
xchg
scas
xchg
mov
dec
leave
rclb
int
mov
lret
xchg
popa
cltd
mov
inc
xchg
mov
sub
jp
rcrl
aaa
dec
mov
pop
shl
cltd
xlat
jl
loope
loopne
xor
test
cmp
xor
xchg
test
adc
xor
ljmp
das
mov
push
mov
imul
and
or
jge
dec
dec
aas
ret
cltd
nop
xor
and
push
mov
in
js
mov
mov
lea
and
dec
dec
mov
fisttps
xchg
aam
xor
pop
jge
adc
sub
loope
outsl
mov
lds
xchg
push
mov
imul
and
mov
push
mov
push
subl
mov
test
push
cmp
js
jmp
lea
add
or
shrl
add
add
mov
and
sub
jle
sahf
addb
pop
or
xor
mov
sbb
pop
pushf
xchg
aas
push
jle
jne
lret
or
outsb
cs
lret
push
arpl
sub
mov
dec
dec
push
push
fidivrl
js
int3
out
jo
fdivs
shlb
push
popf
mov
jbe
test
or
and
pushf
repz
into
inc
int3
push
ds
das
add
pushf
xchg
dec
in
repz
push
pop
cmpsl
jg
sar
ret
lahf
lea
mov
dec
add
xchg
loop
sbb
loop
idiv
or
mov
mov
mov
mov
into
push
shlb
mov
inc
lods
lds
push
out
lds
les
movhps
xlat
push
std
or
adc
sub
pop
push
xlat
xchg
mov
aad
sbb
cmpsb
mov
out
adc
sbb
in
dec
push
dec
cmp
jmp
dec
dec
cmp
push
jbe
test
xor
loope
imul
mov
mov
jbe
mov
ss
inc
iret
push
std
and
pop
orl
inc
jne
outsb
push
jae
mov
test
or
nop
cmp
mov
shlb
negb
sbbl
push
stos
mov
sbb
jae
test
xor
sti
inc
push
orl
popf
xor
mov
shll
iret
das
outsl
inc
lret
subl
mov
mov
cmc
dec
rolb
in
test
cli
cmp
xchg
js
movsl
je
push
xor
hlt
loopne
sbb
xchg
gs
pop
xchg
filds
aad
mov
cltd
xchg
mov
or
sub
jns
icebp
lret
jbe
dec
jae
pop
ds
loopne
cld
je
stc
pop
das
iret
inc
mov
xchg
cmc
popf
cwtl
test
and
dec
adc
into
pop
sbb
lods
inc
jg
push
cmpsb
test
sbb
les
jle
mov
inc
bound
mov
out
enter
xchg
jo
dec
xchg
inc
jae
ds
imull
jle
or
sub
mov
mov
push
cmpsb
and
mov
test
popa
adc
fnstsw
iret
sbb
dec
push
sbbb
sbb
xlat
xor
jns
add
aas
pop
sbb
mov
jae
sub
mov
or
fidivrl
bound
int
adc
stc
daa
dec
adc
bound
cmc
jge
mov
inc
daa
daa
in
adc
push
int
and
fldt
xchg
outsb
push
jle
push
out
testb
pop
push
jl
adc
inc
out
jns
insl
lret
scas
adc
and
push
xchg
mov
jae
ficomps
xchg
adc
mov
jne
xor
cmc
pop
fst
push
xchg
push
fidivl
loope
aaa
cmp
je
pop
pusha
fiadds
lea
fidivrs
and
mov
popa
scas
cmp
sarl
or
ficomps
bound
xchg
std
adc
jge
xlat
inc
mov
popf
les
ja
addr16
push
incl
mov
cmpsl
seta
xchg
negl
dec
xlat
jg
outsl
aaa
lahf
daa
pop
mov
addr16
push
incl
mov
cmpsl
seta
xchg
negl
dec
xlat
jg
outsl
aaa
fwait
daa
pop
mov
addr16
push
incb
mov
cmpsl
push
xchg
aas
xchg
negl
dec
xlat
jg
outsl
aaa
lahf
and
stos
jne
addr16
xlat
jg
adc
pop
movsl
cmp
xlat
outsl
mov
cmpb
jp
push
pop
xchg
dec
xorl
outsl
in
cmc
ljmp
je
mov
mov
mov
cmp
sub
sbb
or
cli
xor
and
pop
stos
popa
lcall
addr16
or
cmp
sub
cli
xor
add
and
pop
aam
in
xor
push
sub
cmp
jp
sub
xchg
push
icebp
add
mov
cltd
ljmp
lret
mov
bound
in
push
cs
ds
fstl
dec
push
inc
fs
or
fabs
clc
xchg
enter
sbb
in
cli
xor
lcall
andb
incl
imul
in
shl
adc
cli
mov
rcll
add
in
lcall
pop
xor
add
or
lret
icebp
aaa
sbb
int3
test
pop
sbb
mov
add
and
imul
loop
and
push
pop
in
cmpl
rorl
push
cli
xor
mov
adc
cmp
lcall
into
aas
std
das
in
push
push
arpl
jb
push
mov
ss
push
fisubs
sbb
or
das
in
jl
inc
mov
mov
call
xor
ds
popa
call
ret
xor
dec
in
cmp
or
cli
xor
and
adc
add
push
mov
mov
mov
cmp
sub
sbb
or
cli
xor
and
adc
add
push
mov
mov
mul
in
outsb
outsl
loopne
xchg
mov
jle
pop
dec
sbbb
pop
or
fwait
int
repnz
sub
hlt
adc
ss
cmc
mov
pop
lret
xchg
inc
es
sub
les
jne
mov
daa
div
ljmp
adc
mov
xor
and
jmp
dec
mov
adc
dec
jne
sub
nop
adc
hlt
out
sub
lea
ljmp
sbb
cli
aad
sub
jmp
int
negb
mov
out
ficompl
insl
popa
outsb
cmp
aaa
flds
push
das
sub
test
leave
sarb
jp
loope
xchg
das
dec
mov
or
call
fsubl
inc
stc
jne
std
in
lds
mov
xchg
adc
out
in
outsl
ss
xor
xchg
test
cltd
imul
cmpsb
push
mov
xlat
rcrb
add
jle
fmuls
mov
repnz
sti
pop
lock
sub
clc
adc
fsubrp
mulb
dec
mov
or
xor
or
outsb
pop
rcrl
jle
jl
and
sbb
test
inc
sub
dec
mov
xor
mov
and
cld
lea
enter
sbb
call
fcompl
inc
repz
mov
cmp
out
pop
test
cmp
cmp
loop
xor
pop
repnz
rcll
adc
clc
mov
push
lods
dec
inc
outsl
jp
mull
push
mov
xchg
imul
dec
rol
call
movsb
in
popa
or
cmp
push
pop
rcr
mov
mov
fsub
lods
es
fucomi
add
outsl
sbb
cmp
cmp
mov
cmpb
out
stos
lret
xchg
lret
xor
daa
cmp
mov
std
je
in
dec
jmp
inc
stos
push
cltd
inc
xlat
loope
sbb
push
cs
mov
pop
clc
jns
cmpsb
pop
cmp
inc
jge
adc
fsubrs
adc
push
mov
and
or
sti
adc
mov
xlat
iret
jp
adc
ja
dec
ret
inc
int3
jno
stc
and
rcrb
cmpsb
push
adc
mov
xor
push
into
sub
pop
out
std
lahf
mov
xor
icebp
xor
movsb
popf
xchg
addr16
dec
cmp
loop
cmp
mov
out
mov
jbe
insb
fiadds
adc
dec
jo
or
in
mov
negl
mov
jge
out
negb
in
ds
jle
mov
int3
xor
loopne
lea
jae
lcall
jns
ja
das
push
je
xchg
jno
fs
jno
and
mov
jo
or
shrl
jmp
shrb
into
or
orb
mov
add
aas
inc
mov
insl
jae
rcrb
repnz
mulps
adc
stos
std
fdivr
mov
xchg
mov
nop
cs
push
push
adc
aad
jae
lahf
or
dec
pushf
mov
inc
test
mov
cli
push
scas
ljmp
sbb
mov
fldl
sti
pop
flds
cltd
xchg
int
stc
or
add
sti
imul
data16
mov
dec
mov
mov
jbe
dec
test
sbb
je
sub
negl
xor
jno
lcall
and
nop
xor
mov
fsubrs
movb
sbb
xor
fldl
mov
ja,pn
sahf
xor
xchg
xor
add
ja
cld
xor
inc
test
cwtl
add
pop
mov
lahf
enter
push
and
pop
imul
cltd
fisttpl
leave
sbb
dec
in
stos
imul
fidivrl
inc
outsb
jmp
sub
push
jbe
test
cmp
push
bound
loope
out
inc
imul
push
mov
xchg
sbb
sbb
sub
sub
xchg
lods
iret
mov
xchg
mov
sub
je
xchg
xchg
dec
hlt
or
addl
mov
xorl
ret
cld
jmp
pop
add
clc
mov
sahf
pop
pop
add
rorl
mov
inc
std
dec
pop
dec
cltd
shlb
ljmp
sbb
stos
xor
jg
pop
jb
loopne
aaa
mov
pop
movsl
cmp
scas
pop
std
inc
add
into
and
cld
rcrl
in
sub
jnp
sbb
dec
aam
dec
jno
sbb
dec
xor
cmpsl
outsl
mov
cs
xchg
mov
cmp
scas
scas
orb
outsb
rcrl
pop
iret
push
inc
or
test
neg
stos
mov
push
xlat
scas
stos
xchg
sbb
fistps
dec
adc
cmp
inc
and
jecxz
js
int
lods
fs
cltd
das
cmp
rclb
cmp
shl
cmp
shr
inc
xchg
cs
mov
or
push
into
and
cld
and
or
push
xor
cmpsl
xor
lcall
or
jge
iret
push
je
pop
mov
loopne
test
mov
dec
pop
sub
xchg
mov
jp
ljmp
sbb
out
data16
cs
insb
mov
add
imul
movsl
imul
arpl
sub
popf
mov
out
orl
repnz
repz
pop
push
lahf
add
xchg
call
test
aad
dec
mov
push
out
pushl
push
movsb
sahf
mov
pop
je
repnz
add
push
shrb
repz
xchg
cmp
out
testl
cmp
jb
and
add
outsb
popa
es
loopne
call
loope
pop
negl
and
andl
out
ljmp
push
push
sub
pop
icebp
test
cltd
aad
inc
sbb
xor
out
subl
mov
mov
out
mov
pop
aaa
sub
cmpsl
push
es
lret
or
cmp
mov
adc
sti
lds
aad
jae
add
push
sub
adc
repnz
push
insb
loop,pn
test
jae
lahf
sti
jno
dec
mov
xchg
mov
movsb
call
push
fistl
scas
rorl
push
clc
int3
mov
mov
xor
loope
ret
pop
enter
pop
sub
cli
inc
ret
es
movl
loope
mov
push
arpl
or
ret
xchg
out
cld
movb
pop
repnz
ja
fndisi(8087
xchg
fisttpll
sub
fcomps
or
sub
cmpsb
out
gs
adc
jp
and
sbb
jg
bound
int
cmp
or
mov
jge
jbe
outsl
and
data16
xor
adc
inc
jbe
cli
es
pop
nop
cmp
jle
cmovo
mov
sub
pop
and
push
test
xchg
inc
test
leave
repnz
cmp
imul
push
jno
add
leave
insl
test
xchg
inc
sbb
adc
sub
sbb
add
jge
dec
sbb
outsl
lods
xorl
cltd
mov
ja
inc
subl
fwait
stc
jecxz
xchg
and
data16
in
push
jae
push
push
ja
std
mov
movsl
stos
arpl
rolb
pop
movsl
mov
testl
add
lret
or
adc
shlb
add
adc
pop
push
jbe
fcompl
cmp
shrb
pushf
inc
cmc
xchg
push
shl
mov
test
ret
inc
mov
cli
fwait
out
xor
stos
push
frstor
dec
js
in
mov
push
outsb
sub
pop
test
cmp
pusha
dec
popa
or
scas
dec
push
xchg
push
push
adcb
andb
icebp
fcoml
sub
data16
cs
xor
xor
cmp
mov
push
out
stos
mov
mov
fsubs
push
hlt
or
jle
lret
imul
ret
push
sti
ret
lods
dec
nop
je
jg
and
pop
stc
sub
mov
aas
std
xor
fwait
aad
pop
rclb
lahf
ds
cld
loop
lods
mov
arpl
adc
pushf
scas
andl
ss
arpl
xchg
das
loopne
adc
lret
sahf
js
inc
pop
xlat
mov
in
out
jg
repz
inc
es
cmpsl
cmpsb
or
mov
and
fbstp
adc
adc
sbb
shrl
sbb
fcompl
mov
mov
jae
cli
test
in
inc
scas
fstps
inc
push
sub
fwait
push
cmc
mov
mov
out
sbb
test
out
lods
dec
cmp
jnp
mov
cs
test
inc
inc
ss
repz
push
push
and
jle
pop
shlb
les
iret
in
xor
test
shrb
aam
add
pop
and
insl
in
stos
aaa
fidivrl
outsl
cmpsl
and
cmp
loop
mov
les
je
int3
or
add
mov
mov
sub
daa
add
cmc
je
sub
fs
dec
cs
mov
movsl
or
fstps
pushf
dec
or
fistpl
in
mov
adc
fnstcw
push
pop
lret
test
ret
push
mov
dec
push
pop
test
cmpsl
int
call
jb
jnp
adc
mov
add
lds
or
xor
jae
xorb
mov
movsl
jo
fcmovu
pop
add
mov
jp
and
dec
out
jecxz
dec
jecxz
cmc
push
push
cltd
or
and
xchg
jl
dec
jae
imul
cmp
mov
leave
int
sub
pop
in
lahf
das
cmc
test
cwtl
push
add
adc
ror
ficoml
dec
out
xchg
test
jae
cwtl
lret
or
pop
push
adc
push
clc
xchg
out
arpl
sahf
add
lret
push
jbe
mov
jo
mov
xchg
push
and
mov
arpl
dec
inc
je
icebp
xchg
test
pop
shll
imul
cmp
cmpsb
bound
pop
std
xchg
push
sti
mov
mov
pop
adc
lock
push
sbb
mov
call
sbb
mov
ds
push
xlat
pop
dec
sti
pop
test
cmpsb
mov
adc
aam
mov
xor
xor
sub
adc
je
sub
fsubrl
popf
push
jnp
jl
call
sbb
dec
ret
and
sbb
push
sub
in
push
adc
xchg
push
dec
push
pop
scas
adc
repnz
fwait
or
sub
mov
mov
cmpsl
push
jns
adc
xor
mov
and
shrb
insl
mov
sbb
mov
lcall
xchg
pop
lods
mov
xor
fsubr
cwtl
xor
orb
inc
insl
xchg
insl
cmp
lods
fmuls
adc
xchg
pop
pushf
and
cmpl
xor
aas
cmp
mov
add
xor
or
mov
push
cmp
cwtl
gs
sub
mov
fwait
je
mov
stos
lea
insb
sarb
xor
xor
outsl
mov
sub
cwtl
aam
stos
lea
mov
ret
adc
lods
or
inc
aam
push
mov
add
push
rcll
in
mov
xor
mul
xchg
out
mov
jmp
fstpl
inc
pop
xor
mov
sub
cmp
cmpsl
pop
or
mov
jae
arpl
mov
cld
shll
push
repnz
dec
xor
inc
mov
dec
cs
fmulp
mov
push
xor
cli
sti
dec
testl
jns
loopne
or
negl
hlt
pop
sub
repz
sub
popf
pop
scas
rep
daa
repz
or
dec
pop
sub
cmpsb
push
add
decl
lods
jno
push
add
add
inc
jl
add
ficompl
or
arpl
push
push
sti
adc
test
push
xchg
hlt
insl
dec
adc
dec
add
jmp
packsswb
xchg
sbb
adc
pop
mov
loop
les
int
ret
sbb
pop
mov
push
test
and
fiadds
call
jp
ret
lret
jmp
adc
decl
mov
stos
icebp
les
lret
out
sbb
cmp
es
xor
in
inc
stc
int
mov
add
jnp
shl
aad
pop
dec
and
mov
mov
push
cmpsb
shl
movsl
push
mov
dec
sub
jmp
jl
sahf
sbbb
cmp
push
stc
ret
outsl
hlt
mov
sbb
fdivs
mov
jp
lods
sub
cmp
fidivs
stc
push
adc
iret
mov
js
rcrl
shlb
pusha
cli
aas
in
push
jnp
mov
or
mov
xor
int
xchg
mov
pop
and
xor
adc
popa
roll
imul
cmc
push
clc
cmovg
divl
jp
notl
or
sbb
jnp
out
sbb
push
sub
mov
push
aam
dec
lret
mov
sub
push
jns
mov
push
push
or
sbb
jne
sahf
jae
pop
popf
jb
shll
mov
outsl
or
cmpsb
out
xlat
mov
vminsd
lcall
cli
insl
scas
insl
cwtl
dec
mov
in
sahf
jmp
outsl
je
movsb
pop
or
dec
mov
scas
adc
jae
jb
xor
daa
fstpl
mov
ret
mov
jae
jge
mov
int
push
push
xchg
xor
cmp
daa
jle
pop
xchg
adc
lock
push
add
mov
xchg
popa
sbb
jne
rcll
mov
popa
shl
not
push
xchg
xchg
mov
xor
clc
xor
xchg
das
inc
ds
sbb
xor
movsb
push
mov
lds
xchg
movsl
dec
sti
sub
jbe
fisubrl
sub
fs
pop
sub
rolb
xchg
out
dec
and
sti
nop
jnp
insb
mov
xor
or
jl
or
mov
xor
jae
imul
pushf
adc
adc
add
xchg
and
fs
or
adc
pop
shlb
xor
mov
xor
ds
in
dec
adc
cmp
lret
fisubs
xchg
push
aad
call
push
notl
in
imulb
jns
outsl
push
jns
in
jne
scas
pop
push
push
orl
rol
test
push
dec
call
mov
in
inc
nop
outsb
xor
sbb
xor
idiv
push
rcrl
das
es
mov
dec
mov
and
pop
lret
mov
lahf
ret
lock
jp
outsb
cmp
and
ror
gs
dec
pushf
out
in
outsb
push
clc
or
nop
aas
mov
les
mov
pusha
mov
iret
inc
enter
xchg
add
sbb
fldenv
adc
lods
addr16
or
movsb
incl
mov
arpl
cwtl
mov
jecxz
cs
mov
sub
sbb
lret
sub
sbb
push
aaa
jne
and
insb
cmpsl
adcb
push
int3
add
addb
pop
cwtl
popf
and
jno
dec
dec
int
mov
dec
push
punpckhwd
pop
sub
adc
jbe
jg
push
rorl
cmp
shrl
mov
cmpsl
mov
sbb
std
pop
subb
inc
fs
mull
mov
cmpsl
test
pushf
pop
dec
pop
dec
das
push
lock
bound
add
imul
or
xchg
jb
ds
cmp
add
pop
mov
add
test
mov
and
add
popf
mov
sub
sbb
push
sbb
mov
mov
adc
inc
dec
lds
and
mov
and
pop
sbb
outsl
xor
jno
shlb
push
insb
imul
adc
dec
cmp
jmp
xorl
ret
mov
mov
or
adc
inc
lahf
movsl
sti
hlt
jmp
add
repnz
jecxz
rclb
subl
mov
addr16
xchg
cmp
push
cmp
mov
hlt
or
loopne
dec
js
adc
pop
enter
sahf
sub
jle
jecxz
push
loopne
out
lret
aam
insb
mov
aaa
lahf
out
add
ficomps
cmp
push
lods
mov
outsb
hlt
loope
jb
dec
and
movsb
sar
mov
xchg
movq
sbb
mov
push
gs
sbb
es
pop
xchg
jne
inc
shrd
or
add
pushf
sub
cld
xchg
dec
cmp
fmuls
outsb
pop
test
scas
in
push
push
rorb
pop
or
xchg
sti
loopne
push
loop
insl
into
js
imul
pop
out
aaa
shrb
and
cld
push
pop
sub
negb
xchg
insb
gs
adc
jno
mov
call
gs
out
lods
rorl
ficoml
mov
lods
bound
dec
popa
scas
jnp
cmp
cld
aaa
flds
xadd
or
push
jnp
inc
jo
mov
jb
and
dec
mov
inc
cli
ret
addb
push
or
mov
sarb
xchg
xchg
dec
push
mov
push
mov
dec
cwtl
or
into
out
inc
xor
stc
daa
addl
mov
pushf
xchg
out
fldenv
add
pop
pop
mov
mov
jae
fiadds
pop
mov
mov
push
cs
push
int
test
mov
fsubrs
pop
cmp
ss
xchg
hlt
inc
fdivr
inc
roll
xchg
ljmp
ret
mov
bnd
fcomps
lret
ficoml
scas
jae
pop
out
mov
popa
adc
inc
mov
fwait
scas
hlt
addb
aaa
iret
cmp
cmc
dec
or
cmp
cltd
and
mov
push
push
and
mov
lds
fcmovnu
push
cmc
add
je
stos
adc
mov
fcmovnb
dec
xor
je
imul
mov
arpl
jbe
sbb
vorps
lret
xchg
lret
ror
stos
mov
push
call
or
adc
or
inc
bound
in
push
pop
fcomps
mov
int3
dec
xchg
sub
movsl
xchg
mov
mov
dec
hlt
rcl
inc
cli
jl
and
mov
call
push
push
xchg
cmp
mov
xchg
idivb
inc
mov
jnp
mov
pusha
xchg
lea
scas
aam
pop
ss
int
mov
cmpsl
xor
and
sub
out
cmpsb
dec
xor
mov
arpl
out
iret
xor
sub
clc
xlat
mov
push
dec
ret
mov
sti
scas
adc
mov
dec
lock
in
mov
fs
clc
xor
or
into
add
sbb
cmp
dec
cmpsl
insb
mov
inc
mov
inc
sbb
insl
pushl
inc
jmp
or
andb
xchg
mov
cwtl
in
push
jmp
push
sub
sub
pop
xor
loopne
cmp
sahf
lds
insl
outsb
fdivs
mov
and
pop
add
jp
int3
or
icebp
sbb
sub
push
xor
fstl
jb
cmc
pop
out
mov
or
out
push
dec
ss
and
lret
popf
mov
pop
cmp
bnd
inc
xchg
mov
insl
les
in
fcoml
test
jle
sub
fcmovnu
xchg
adc
cwtl
xor
dec
jmp
ficoms
xor
add
arpl
mov
cld
nop
cmp
cld
test
popf
daa
push
lcall
inc
or
mov
sub
sub
xchg
lds
mov
jp
sbb
push
out
sbb
add
cmp
sbb
sbb
cltd
dec
arpl
aam
cmp
xchg
cmp
adc
adc
les
aam
xchg
sbb
cmp
push
movsl
ror
adc
dec
mov
xor
fadds
inc
push
xlat
mov
adc
inc
lods
jmp
mov
icebp
mov
xor
mov
fwait
repz
push
xchg
movsl
fisttps
adc
pop
int
loopne
push
fwait
add
adc
cwtl
imul
lret
mov
and
jbe
jle
mov
push
push
addr16
aam
add
cmp
xchg
rcll
pop
or
push
enter
out
aam
xorl
inc
into
xchg
outsl
jge
stos
hlt
lret
ret
imul
stos
xchg
xor
dec
and
xor
xor
dec
mov
xor
inc
aad
flds
arpl
mov
mov
sbb
xor
add
daa
sbbl
rcrl
add
fbstp
cmp
aas
insb
clc
into
fmuls
xchg
stos
mov
and
dec
cmpl
rorl
sar
ljmp
jno
popa
lcall
mov
cmp
sub
sbb
or
cli
xor
and
adc
add
push
mov
mov
scas
pop
mov
cmp
sub
cli
xor
and
mov
pop
mov
pop
jne
sarl
sub
sbb
add
into
ljmp
or
sbb
jne
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fisubrs
int
std
cmc
in
in
mov
jmp
cli
andl
gs
addr16
and
int
xchg
cmc
in
in
xchg
lea
pop
push
dec
inc
sbb
insl
gs
jbe
aad
xor
aas
lds
xor
popf
mov
mov
jg
add
gs
jg
imul
lods
std
addl
sbb
jle
and
xor
or
jle
mov
test
push
jnp
aas
and
clc
gs
gs
push
push
cmp
sub
adcl
dec
or
dec
test
insl
loopne
add
adc
sbb
add
bound
lods
pop
pop
add
xchg
lcall
sub
and
or
popa
mov
jns
in
movsb
jge
into
inc
jge
sub
jge
mov
xor
push
and
bound
cwtl
sub
dec
push
hlt
pusha
cltd
jne
inc
pop
jo
lret
xchg
fwait
sar
in
jns
cmc
test
dec
xlat
pop
or
push
or
sub
lds
ret
jecxz
leave
fldcw
cmp
outsl
js
push
push
xor
test
popl
call
leave
cmp
and
add
push
pop
insb
inc
mov
mov
nop
into
stc
lea
pop
push
dec
inc
jge
insl
gs
xor
int
std
cmc
in
in
xchg
lea
pop
push
dec
inc
jge
insl
gs
xor
imul
sub
loopne
or
dec
xor
mov
imul
xchg
ret
xor
mov
ljmp
movsb
jge
imul
xor
dec
and
repnz
sub
int3
mov
jmp
add
adc
mov
pop
cli
ljmp
xorb
jle
pop
es
sub
insb
mov
dec
fdivs
jns
dec
adc
inc
mov
sbb
adc
add
mov
jp
ja
insl
imul
add
mov
imul
dec
sub
pop
pop
mov
cmp
sub
jb
fwait
js
cmp
push
mov
jmp
push
data16
out
jl
ljmp
daa
ljmp
mov
jne
stos
shrb
inc
jp
shll
jle
mov
push
xchg
shlb
add
popa
and
pop
jne
or
mov
sahf
popf
xchg
xor
hlt
sub
loope
cmp
pop
push
add
mov
mov
int
dec
pusha
pop
cmp
leave
mov
dec
outsb
orl
hlt
incb
push
pop
mov
mov
jbe
jmp
sarb
lret
dec
cli
pop
imul
sub
push
daa
ljmp
daa
bound
rcll
dec
xor
imul
fimuls
sti
fiadds
fldcw
test
push
mov
inc
jmp
loop
lahf
aaa
lret
std
insl
sarl
push
mov
roll
push
add
ror
mov
clc
jmp
inc
scas
test
jmp
ja
cmp
mov
je
pop
mov
sbb
xor
aad
inc
push
push
sti
fsts
shlb
negl
cmp
jmp
xchg
and
pushf
xor
push
inc
fwait
call
adc
add
xchg
jne
xorb
lods
lret
and
jg
cmp
or
pop
notb
xor
push
mov
scas
int
dec
cmpsl
call
in
cltd
roll
fcom
xor
inc
std
adc
and
mov
in
sbb
jbe,pt
mov
aaa
adc
xchg
inc
jno
dec
sub
lods
iret
cltd
int
pop
push
popl
push
and
lods
xchg
addr16
cltd
mov
xorl
or
mov
cltd
pop
addr16
push
iret
popf
pop
sbb
inc
stc
xchg
fwait
inc
adc
sub
dec
cmpsb
inc
rcr
notb
cld
inc
imul
xchg
sbb
repz
mov
jbe
idiv
sub
xchg
add
or
andl
push
jmp
or
push
ret
push
mov
lcall
push
dec
jp
xchg
mov
movsb
or
jge
shrl
inc
int
ljmp
pushf
adc
lea
lods
dec
icebp
sbb
push
add
inc
add
nop
add
arpl
addl
or
ret
cmp
ret
dec
dec
divb
mov
mov
mov
inc
shlb
or
cmp
ret
das
jns
mov
stc
cmp
leave
enter
or
cmc
or
mov
lods
and
mov
mov
fimuls
adc
dec
sub
pop
into
adc
sub
fimull
dec
inc
jns
test
fistl
pop
sub
inc
cvtps2pd
lods
mov
lea
mov
push
shll
jge
jge
adc
in
scas
ret
xor
popa
in
lcall
popa
aam
add
stos
xchg
mov
or
xor
cmp
dec
hlt
bound
js
out
orb
out
or
mov
std
das
inc
push
sbb
cmpsl
test
cmpsl
insl
xchg
or
xor
imul
dec
rcl
ss
xchg
stc
jle
ret
sub
pop
rorl
xchg
je
out
popf
adc
int3
out
mov
or
cld
push
mov
or
jg
pop
adc
mov
rcrl
sahf
and
inc
clc
rolb
loope
mov
test
ret
sbb
adc
clc
lods
mov
adc
mov
push
dec
orb
repnz
push
test
les
add
mov
fs
and
sti
sarb
ljmp
das
fstpt
into
or
adc
gs
bound
rorb
inc
imul
scas
lds
xor
jb
fucomp
jge
push
test
xchg
mov
insb
movsl
ds
cmc
aaa
mov
cmp
jbe
shrb
xorb
inc
test
fadd
xchg
pop
stos
jo
and
mov
xchg
jmp
mov
cmpsl
jecxz
xchg
stc
jno
push
mov
dec
pop
ret
dec
jbe
mov
jg
fsubrl
and
mov
xchg
mov
jl
or
int
mov
inc
clc
dec
fidivs
loope
xchg
hlt
cmp
mov
dec
cli
js
and
mov
movsb
ljmp
out
pop
mov
pop
or
mov
cmp
jae
push
cli
jmp
xchg
fwait
scas
out
hlt
lods
sub
pop
pop
test
lahf
dec
pusha
aam
and
xchg
nop
insl
ljmp
sti
xor
jg
xchg
iret
jl
mov
pop
adc
add
xchg
inc
sub
adc
jbe
les
jmp
test
xchg
jo
int
push
pop
dec
add
pop
in
scas
xchg
jge
sbb
test
stc
add
sbbb
loop
sbb
and
inc
or
les
cmp
sbbl
add
adcb
ror
pop
rcrb
mov
xchg
notl
mov
jl
or
inc
inc
stos
xorb
cmp
mov
cltd
add
xorb
mov
test
repz
or
out
jge
and
int3
sbb
sub
iret
fistps
add
pop
rclb
clc
outsb
out
shlb
mov
in
jmp
dec
cs
cmpsb
xchg
lods
lea
std
and
movsl
pop
into
cmpsb
inc
fisttpl
out
mov
jbe
fs
xor
fiaddl
repnz
sub
negl
in
and
or
inc
push
enter
enter
pusha
pop
popa
jo
aas
stos
xchg
jp
cltd
adc
cltd
xor
pop
mov
test
sbbl
rol
loop
xchg
jl
arpl
cs
in
daa
dec
push
sbb
adc
repnz
mov
cmp
pop
and
or
aam
adc
jl
cli
jae
mov
push
jbe
mov
cwtl
jmp
mov
mov
mov
ret
cli
lock
mov
mov
add
mov
push
sub
orb
xchg
repz
cmp
into
mov
cmpsl
mov
cltd
xor
xor
cltd
pushf
ds
leave
jb
lock
pop
rcll
mov
jmp
dec
dec
les
pop
pushf
aas
or
add
icebp
testl
mov
add
inc
shll
cwtl
je
mov
lods
hlt
icebp
lea
xchg
pop
and
adc
mov
subps
jmp
lea
or
jl
mov
mov
sub
cmp
int
lcall
inc
in
and
fildl
in
mov
adc
lahf
loop
xchg
scas
insl
dec
fcomi
sbb
or
movaps
cwtl
jb
aaa
pop
inc
fldenv
pushf
mov
mov
jl
mov
insb
lret
and
out
outsl
lods
out
adc
mov
add
mov
das
iret
push
pop
push
daa
movsl
repnz
cs
pop
xchg
lea
jae
test
lods
iret
push
xchg
rolb
jmp
and
jne
outsl
cmpsb
bound
push
add
lods
and
xor
es
xchg
mov
rcll
outsl
jbe
jmp
int3
add
pop
mov
pop
sbbb
cmpsb
adc
mov
andb
or
mov
pop
imul
outsb
ret
outsl
ret
jns
push
fcompl
test
add
xchg
clc
fs
int
aad
push
cmp
and
mov
dec
and
pusha
jp
mov
pop
pop
mov
dec
mov
push
clc
clc
push
pop
or
je
add
pop
jecxz
dec
mov
or
das
inc
and
stos
stos
jbe
test
lea
jo
adc
jl
leave
adc
sti
sbb
or
out
repz
test
pop
or
test
or
scas
add
dec
mov
pop
nop
int
clc
test
pop
stos
push
pop
mov
dec
jmp
es
imul
mov
test
mov
orb
fdivs
sbb
lret
movsb
mov
push
sub
movsl
scas
enter
cltd
sbb
lock
xchg
dec
sarl
out
cwtl
lcall
add
faddl
dec
insl
pop
aam
xchg
pop
adc
and
sahf
clc
mov
data16
dec
cmpsl
mov
das
or
xchg
arpl
enter
push
out
xchg
loop
pop
mov
cld
rolb
and
hlt
mov
sub
mov
ja
cmp
into
mov
addr16
jge
mov
into
cwtl
repnz
push
js
lcall
loopne
cmp
lods
int
ljmp
pop
sbb
xchg
mov
mov
enter
xor
xchg
push
jne
mov
arpl
pusha
push
cmp
add
aaa
push
ret
push
addr16
lcall
push
mov
xchg
jecxz
and
cmc
bound
sbb
mov
mov
xor
dec
imul
and
xchg
push
lret
pop
push
sbb
fwait
mov
cmp
or
mov
xchg
mov
mov
sbb
jmp
fdivl
push
in
inc
xchg
out
in
loop
fists
push
sti
sub
xor
inc
mov
int3
mov
xchg
adc
mov
in
nop
fcoml
daa
jmp
and
push
sub
xchg
popa
outsb
jmp
sbb
push
adc
movsb
out
inc
sub
push
pushf
xor
xor
ja
pop
imul
dec
ja
in
push
lods
icebp
sub
sbb
mov
or
or
clc
mov
ret
loop
cmp
add
repnz
push
cli
addl
or
pop
bound
in
jecxz
jbe
jl
ljmp
pop
cltd
mov
movsl
sub
stos
stos
fistpll
test
mov
jae
add
pushf
nop
ljmp
and
pop
push
outsl
pop
pusha
imulb
pop
mov
dec
mov
lock
hlt
movsb
sahf
shrl
jmp
subl
daa
jae
sahf
add
ss
fdiv
jg
xchg
xchg
popf
mov
je
nop
sar
das
or
cltd
cmpsl
bound
fs
fmul
ja
fdivs
sbb
loope
outsl
add
bound
ret
push
lret
cmp
cmp
adc
test
add
dec
inc
fisubrs
outsb
stc
fcmove
adcl
call
or
adc
cltd
jmp
cmp
and
das
jge
daa
popa
out
mov
jae
mov
cli
outsl
repnz
cmp
enter
adc
out
fcoms
stc
loope
push
pop
sbb
dec
mov
call
push
xorb
cmp
daa
lock
and
jge
fldt
stos
and
or
or
cli
test
fists
fnsave
out
idiv
xchg
adcb
fimull
xchg
aam
faddl
pop
pusha
iret
mov
stos
mov
cli
inc
pop
inc
or
dec
and
lds
lret
loope
mov
rorb
out
aaa
pop
gs
jnp
stc
and
stos
outsb
fdivrl
jl
pop
jmp
sahf
enter
add
frstor
loopne
jmp
adc
xchg
sbb
cmp
xor
or
cmp
vmxoff
jns
mov
sub
int3
push
mov
pushf
dec
xlat
sti
xor
fisubrs
and
jl
addb
mov
jp
mov
pop
cmpsl
out
ljmp
cmp
test
imul
mov
sbb
shlb
sub
xchg
jae
push
jecxz
sub
jl
lods
testb
mov
out
cwtl
or
ror
stc
loop
add
ja
out
dec
cs
mov
sbb
jno
adc
cmc
imull
fwait
repnz
push
mov
es
push
jecxz
out
cmp
dec
test
test
cld
xchg
fs
mov
pop
test
jnp
mov
out
testl
dec
test
outsb
lret
fnsave
adc
bound
pop
mov
or
nop
pop
jnp
sbb
loope
jno
xchg
dec
lahf
mov
cmp
and
xchg
mov
in
xor
js
mov
adc
pop
test
sub
adc
inc
cld
data16
sbb
jg
shll
xchg
int3
dec
pop
mov
cli
jge
sbb
pop
jmp
mov
inc
cli
pop
mov
and
clc
jno
jmp
xchg
enter
orl
es
or
test
arpl
xchg
cmp
mov
cmpsb
dec
cmc
sub
and
push
aam
ds
jmp
mov
xchg
arpl
subl
lret
lea
jmp
mov
pop
lahf
hlt
pushf
dec
and
lods
jl
adc
pop
pop
hlt
or
adc
test
xchg
clc
popa
rcr
shll
hlt
cmp
movsb
sbb
xorl
add
push
gs
lea
xchg
loope
aaa
cmp
xor
out
push
xchg
xor
mov
or
testl
add
and
dec
jne
mov
adc
stos
mov
adc
std
loope
sbb
jb
jne
nop
ds
testb
sbb
ret
xor
sbb
push
sub
scas
cmp
adc
sbb
ret
mov
sub
mov
xchg
cltd
and
shr
mov
ja
outsl
push
or
mov
cmp
aas
lret
xchg
into
inc
stos
shlb
jae
or
outsl
or
dec
dec
dec
or
push
sub
mov
inc
test
scas
rclb
jl
mov
pop
cli
cmp
leave
push
insb
xchg
clc
push
push
dec
lods
les
popa
jp
getsec
gs
pop
xchg
mov
out
inc
or
aaa
pop
bound
xor
cld
in
out
push
inc
mov
inc
jp
dec
push
lods
loopne
pop
jne
stos
sub
xor
pop
xor
cmpsl
sub
in
lret
mov
sub
xor
daa
push
mov
or
clc
mov
fmul
jbe
sbb
jnp
mov
pop
fisubrl
das
xchg
pop
int
movsb
dec
mov
je
lods
fisubl
sbb
push
lahf
jl
xchg
push
repz
dec
cmpsl
out
push
push
adc
adc
mov
cmpsl
addr16
push
sub
jno
outsb
xchg
in
jmp
mov
test
dec
in
add
lret
inc
mov
in
cmp
std
mov
sbbl
orl
add
cmp
add
cmpsl
push
jmp
repz
movsl
addb
or
fdivl
fdivs
repz
lcall
gs
mov
mov
in
out
xchg
xchg
mov
xor
inc
inc
cmc
push
ljmp
aad
cld
or
lods
in
cmp
push
push
addr16
cmp
mov
jle
xchg
mov
test
pop
xchg
cmpsb
xchg
fistl
pop
test
add
sbb
gs
cmpsl
sbb
cmpsl
and
bound
gs
jp
test
pop
and
cli
test
lods
jp
cwtl
imul
pop
cs
fsubr
lcall
lds
push
addw
push
push
adc
out
add
xchg
nop
mov
pop
push
insl
sbb
sub
mov
mov
sub
cli
pop
sbb
mov
add
scas
dec
in
jmp
movsl
sbb
xchg
mov
icebp
cmp
cmp
out
stos
cmpsb
mov
aad
loopne
mov
fbstp
push
daa
pop
jmp
ss
ret
xor
mov
test
pop
inc
nop
sti
cmp
sti
std
jno
fidivrs
ret
aam
cmpb
or
or
out
ljmp
jo
add
push
stos
ljmp
pop
jmp
cli
cmp
cmp
inc
scas
aad
cli
sbb
add
rolb
pop
mov
in
test
lcall
jns
sarb
fidivs
fimuls
dec
fstl
aas
bswap
mov
dec
mov
roll
pop
cmp
jbe
ljmp
loope
ret
xor
jnp
pop
shlb
jl
out
and
pop
mov
mov
adc
pop
and
lret
les
shll
cmp
loopne
subl
lret
or
cltd
scas
in
add
addr16
pop
or
or
sbb
lods
aaa
cwtl
mov
hlt
xchg
cld
cwtl
sub
xchg
fdivp
movsl
jnp
cmp
mov
add
mov
pushf
pop
into
hlt
sbb
lret
jns
lcall
or
testl
sbb
sbb
jmp
leave
fisubs
cmpsl
or
push
aas
push
aaa
xchg
mov
and
xor
and
add
jb
or
sbb
movsbl
push
cli
je
iret
add
adc
mov
cltd
mov
loop
int3
test
icebp
cmpsb
pusha
stos
loopne
testb
xor
scas
sub
sub
dec
filds
push
fs
push
add
movhps
mov
dec
fsubr
cmp
pop
xchg
xor
mov
js
pop
lcall
lcall
les
sub
adc
cld
jbe
sbb
call
ss
js
xor
inc
lret
int3
decb
sbb
es
inc
jg
leave
pop
popf
cmc
jbe
stos
mov
test
xor
insb
addr16
sub
add
mov
in
and
add
pop
cmp
insb
push
cmp
lcall
bound
mov
test
cmp
mov
aam
loopne
imul
test
sbb
lcall
dec
jg
lret
cld
cmc
lods
xor
fistps
dec
xchg
mov
aam
loop
sub
scas
xor
sbb
mov
outsb
bound
lock
pop
dec
lds
or
jbe
jg
dec
sub
mov
cmpl
daa
cmp
cmp
and
sub
icebp
movl
paddsb
mov
fs
loop
add
ljmp
sbb
xchg
nop
ljmp
adc
mov
dec
ficoms
and
loop
sbb
das
pop
sbb
jnp
es
inc
jecxz
repz
inc
lds
fidivl
jnp
sbb
add
pop
std
add
push
add
cli
inc
pushf
cmp
xor
cmpsl
mov
sbb
adc
jnp
and
add
call
lods
add
sahf
xchg
push
ds
addr16
mov
pop
cmovbe
push
test
xor
xchg
pop
mov
and
xlat
aad
in
adc
in
xor
fwait
sbb
xchg
fsubl
mov
jl
cmp
xlat
add
in
push
mov
add
cltd
dec
inc
push
adc
test
or
test
sub
out
mov
fisubrs
fcmovnu
int3
loopne
dec
stos
mov
mov
sbb
out
scas
das
xchg
mov
or
and
test
lcall
push
add
rorl
and
mov
fldcw
mull
inc
int
fistl
popf
add
div
xor
loop
xchg
add
mov
push
push
out
xchg
sahf
or
adc
out
mov
push
sahf
fwait
or
mov
in
adc
push
aad
push
repnz
pop
mov
inc
dec
test
lock
inc
ds
mov
pusha
cmpsb
mov
scas
es
ss
fisubrl
outsb
lahf
or
cmp
push
in
mov
dec
mov
in
test
stos
cmp
mov
fadd
xchg
lcall
hlt
add
pushf
or
xor
les
push
inc
pop
jl
jne
imul
test
scas
cli
lds
xchg
lea
pop
push
dec
inc
jge
insl
gs
xor
int
std
cmc
in
in
xchg
lea
pop
push
dec
inc
jge
insl
gs
xor
std
lds
xchg
lea
pop
push
dec
inc
lea
fs
xor
and
cmpsl
cmc
int
popf
xchg
popf
test
push
mov
xlat
jne
adc
test
ret
fimull
stos
fisubs
out
xor
dec
cmp
shl
xchg
push
mov
psrld
loop
repnz
adc
and
xor
inc
mov
bound
xchg
pop
mov
jle
imul
fmul
xchg
fisubs
sbb
orb
les
rcll
loop
mov
dec
orl
mov
pop
jno
lods
jno
mov
xchg
mov
sbb
ret
cli
push
into
inc
into
sbb
adc
divb
pop
outsl
mov
inc
push
inc
inc
arpl
add
and
cmp
ret
and
jne
jge
dec
insl
pop
pop
push
pop
and
mov
push
pop
sti
addr16
lods
sahf
arpl
shll
push
sar
negl
xchg
out
and
adc
repz
cmp
pop
xchg
mov
xor
push
mov
xchg
xchg
xchg
test
stos
adc
jp
push
mov
pop
rorb
loop,pn
xor
adc
and
pop
incb
push
sahf
bound
add
outsb
lods
jle
push
int3
push
loop
xchg
js
into
cmpsl
scas
pop
mov
jno
adc
jecxz
roll
cmp
mov
pop
add
stc
popf
sub
xor
push
stc
add
or
sub
imul
jo
and
pop
mov
jb
orb
mov
push
rcrb
loop
repnz
adc
and
xor
inc
mov
bound
xchg
pop
mov
push
rcrb
loop
repnz
testb
cmp
pop
rcrl
test
jne
xchg
inc
adc
cmp
mov
adc
cld
in
shll
jb
or
mov
sub
pusha
fisttpl
les
pop
sub
lret
jmp
push
sti
jb
dec
pop
adc
sbb
lcall
mov
adc
ljmp
push
hlt
xlat
jmp
ret
out
pop
jnp
hlt
xchg
sahf
jo
ss
jge
dec
mov
into
cli
test
dec
pop
xor
das
push
add
loop
scas
outsl
fnsave
int3
jl
jg
lock
mov
sbb
or
mov
xchg
add
les
mov
pop
movsl
cmpsl
outsl
or
or
cmp
out
mov
out
sub
mov
jo
rolb
inc
add
xchg
stos
testl
sbb
scas
out
pop
repz
addr16
and
sarl
ret
sbb
adc
imul
in
test
mov
inc
ljmp
mov
push
xor
cmp
mov
cld
loopne
out
adc
pop
in
add
nop
ljmp
mov
outsb
popa
mov
hlt
jg
xor
das
jns
mov
imul
das
mov
pop
out
xchg
push
pop
inc
dec
mov
inc
cmp
mov
sub
sub
repz
or
mov
pop
fidivrl
dec
in
push
call
push
jbe
pusha
inc
pop
sahf
mov
dec
testl
mov
icebp
dec
and
rclb
adc
decb
in
push
adc
mov
adc
pop
lret
push
mov
mov
dec
and
int3
rorb
out
lds
push
mov
ret
sub
stos
sahf
inc
fbld
scas
or
call
into
roll
lret
xchg
jns
or
aad
outsl
sbb
loope
in
jo
xchg
jge
add
fisubrl
push
and
cmp
lea
std
xor
clc
shlb
push
in
or
xchg
adc
push
xchg
jnp
cmp
aas
lds
aam
fadds
std
jl
mov
outsl
mov
test
xor
movsb
xor
stos
push
xor
xchg
jecxz
mov
or
mov
xchg
mov
sarl
and
jbe
add
repnz
cld
lods
cmc
inc
and
and
ficompl
inc
aad
cmp
mov
mov
dec
inc
push
and
fwait
cmc
movsb
frstor
movsl
in
or
icebp
push
incl
lock
and
jmp
dec
stos
adc
xchg
sbb
cmp
in
xor
popa
movsb
mov
pop
mov
ja
cmp
dec
cmc
xchg
push
sub
icebp
insb
jg
clc
add
xchg
push
jne
ljmp
popf
stos
mov
add
mov
mov
int
xor
push
pusha
pop
cmp
loop
add
pop
mov
jle
in
adc
or
or
cmp
cmp
sbb
loop
xor
inc
dec
add
divb
lcall
or
gs
jns
out
cwtl
sbb
jmp
loope
xchg
lahf
or
insl
popf
movsl
or
dec
push
pop
add
mov
xchg
fdivs
dec
rclb
xor
cmp
mov
or
movsb
movsb
mov
daa
in
sub
mov
sbb
lock
cmp
jae
decb
fwait
cmc
cmp
adc
ret
mov
inc
incl
push
or
xchg
or
pusha
xchg
enter
aad
jne
cli
pop
xlat
data16
push
test
in
adc
cld
ficoml
jge
xchg
es
jnp
cs
scas
daa
add
or
lock
ret
fsubs
out
fidivrs
add
lods
pop
jno
jge
aaa
mov
push
cmpsl
lods
roll
xor
sbb
pop
jbe
andb
aaa
dec
add
pop
adc
mov
pop
clc
inc
pop
sub
dec
dec
ret
test
js
out
mov
scas
add
push
enter
faddl
mov
and
and
int
push
lcall
sub
icebp
popf
dec
in
mov
push
cwtl
and
popf
cld
in
lahf
sub
or
inc
stos
rcrb
mov
cmp
pop
lock
clc
aam
add
jmp
scas
imul
test
bound
inc
xchg
je
or
pusha
imulb
daa
xlat
insb
xchg
pushl
daa
mov
jne
add
aaa
mov
push
xchg
lds
jecxz
xchg
aad
mov
push
ljmp
mov
push
sbb
dec
jecxz
cli
jnp
int3
stc
jge
aad
roll
xchg
aaa
insb
stc
es
xorb
jns
push
fidivrl
or
dec
jno
inc
or
mov
add
add
sbb
lds
mov
pop
xor
stos
lcall
push
je
arpl
lods
mov
xor
jb
sti
sbb
sbb
xchg
and
pop
jnp
call
aad
jl
push
out
jl
jl
sbb
repnz
bound
shl
push
sbb
cmp
mov
les
sahf
or
and
data16
pop
cmp
stos
inc
mov
cmpsl
pop
inc
pushf
fwait
xchg
xor
aam
pop
pop
pusha
aad
mov
ljmp
ja
pop
loop
mov
jbe
xchg
pop
pop
arpl
mov
cld
rcr
xor
mov
inc
or
jnp
aam
xchg
xchg
fidivs
cld
jmp
push
pop
xchg
dec
dec
jo
mov
scas
lock
fstps
shrl
pusha
push
sub
in
sbb
imul
notl
pop
lret
ds
adc
xchg
fdivs
ret
add
mov
test
movsl
lods
stos
pop
or
jae,pn
into
shl
loopne
test
sbb
push
loopne
movsb
xor
xor
inc
mov
les
cmp
icebp
mov
fisubl
cmp
sub
ret
ficomps
stos
jmp
loope
cld
pop
cltd
outsl
popf
inc
add
and
repz
rclb
dec
jmp
mov
in
or
ror
daa
mov
out
iret
ljmp
lcall
or
addr16
push
ja
mov
mov
push
cli
xchg
arpl
mov
sbb
inc
lods
push
int
mov
cmpsb
popf
cld
cmp
lret
rorl
stos
or
shll
jmp
cmp
adc
add
adc
mov
sub
jp
rcll
sub
cs
idivl
stc
and
jmp
sbb
mul
outsl
es
scas
jecxz
notl
call
loope
nop
jns
aas
faddl
test
push
jo
rcr
in
lock
xchg
inc
fwait
cld
or
cmp
jge
push
in
add
jle
jmpw
shrl
loop
push
test
mov
fwait
mov
jmp
mov
loope
mull
sbb
push
iret
inc
test
sbb
mov
out
mov
mov
lock
loope
xchg
ljmp
add
mov
inc
in
jne
iret
pop
sarb
adc
or
pop
cmp
and
inc
cmpsl
mull
pop
inc
sub
adc
mov
mov
mov
jno
sub
jge
jae
xchg
cltd
jl
cld
cmc
inc
int
push
sbb
xlat
inc
ja
inc
mov
cmp
mov
xlat
inc
loope
jl
jnp
jno
pusha
ret
sbb
xor
sub
mov
cmpsb
fsubrs
les
cli
enter
xor
or
push
adc
cld
ror
sub
in
xchg
sub
fsubr
stos
push
sbb
mov
mov
pop
insl
mov
pop
aam
out
pusha
stos
xlat
rep
aaa
push
cltd
mov
sbb
cmc
lret
fldenv
pop
sub
dec
aam
bound
sub
pop
std
insb
enter
mov
dec
cmp
mov
sbb
adc
inc
xor
daa
xor
loopne
in
repnz
or
and
shl
fs
or
dec
jge
inc
das
adc
leave
shlb
imul
shrl
sbb
idivl
hlt
jnp
cld
divl
inc
xor
xor
push
jae
lret
inc
pop
sbb
fcoml
test
jae
lret
jae
iret
std
fsubp
aas
stos
pop
sub
hlt
cs
popa
in
jnp
lds
cmp
xor
xchg
xor
int3
out
pop
ss
ljmp
je
mov
mov
gs
jo
scas
push
sub
xor
mov
or
fidivs
loopne
fadd
insb
push
loop
mov
pop
loop
jb
movsl
ljmp
arpl
cltd
pop
cmp
add
cltd
push
or
sbb
imul
pop
or
loop
clc
inc
push
inc
arpl
and
cmp
fadds
repnz
mov
std
lret
add
cld
arpl
ss
add
ret
inc
fnstenv
push
icebp
inc
mov
shlb
bound
cmp
xor
dec
and
daa
jl
ret
imul
leave
push
inc
sub
jae
scas
jmp
inc
adc
pop
push
negl
pusha
push
loopne
ds
imul
lea
push
xchg
aaa
lret
insl
bnd
clc
movsl
and
dec
mov
xchg
lds
clc
pop
add
xor
rolb
adc
or
fimuls
lret
add
enter
cmp
jl
jmp
push
lock
or
jg
mov
mov
test
inc
push
nop
scas
scas
cs
push
jmp
push
xchg
movsl
ret
mov
andb
test
mov
std
cltd
jnp
mov
sbb
push
xor
bound
mov
mov
cwtl
inc
sahf
xor
mov
scas
mov
popa
aad
into
mov
outsl
adcb
scas
das
ret
dec
cmpsl
pop
dec
ficomps
cmp
les
pop
cmp
mov
dec
lods
out
iret
popf
repnz
mov
push
sub
and
and
in
jb
cltd
jns
jge
and
push
es
aas
movsl
pop
ret
pop
nop
popf
lds
lock
cmovne
sub
inc
and
sbb
ja
cli
pop
lret
pop
sbb
mov
rclb
shlb
loope
mov
sahf
mov
add
push
popa
call
mov
int
mov
or
jp
xchg
add
mov
dec
and
fnstsw
scas
cmp
insb
shr
mov
jl
lods
insl
aaa
dec
dec
lcall
xchg
repnz
pop
push
mov
or
cmp
mov
rol
fiaddl
mov
and
divb
sbb
sti
sub
and
xchg
adc
jp
push
outsl
out
popf
lahf
and
int
or
xchg
mov
xor
mov
cld
icebp
out
mov
mov
or
inc
shl
fnsave
push
xchg
push
mov
fucompp
lcall
ljmp
mov
pop
push
xchg
or
aam
sub
mov
adc
inc
push
divb
adcb
and
inc
pop
push
rcrb
sbb
popa
add
xor
lods
daa
int
sahf
jnp
les
aaa
add
jns
ficomps
jp
imul
outsl
scas
mov
out
xchg
xchg
pop
jecxz
fs
aam
add
mov
sbb
inc
loop
cltd
enter
sbb
and
dec
push
in
andl
ds
lods
sbb
xchg
test
enter
adc
and
or
adc
push
lock
and
push
xor
sbb
jl
loope
and
xchg
cwtl
and
or
idiv
adc
mov
ret
and
mov
popf
mov
jo
xchg
sub
orl
push
and
sbb
and
add
jl
stos
push
jbe
pop
push
shl
pusha
cs
xor
fisubl
leave
pop
cmp
jl
popa
out
dec
lret
addb
inc
sti
and
mov
cmpl
mov
nop
fadds
je
cmp
hlt
fistpl
faddl
sub
mov
loopne
lcall
mov
jecxz
inc
add
or
testl
add
adc
xchg
cmp
xlat
adc
aam
sbb
mov
jne
jmp
ret
lods
subl
int
lods
popf
mov
lea
pusha
pop
lock
jmp
xor
mov
inc
in
mov
jo
sar
xchg
loop
sub
and
or
pop
cmpsb
cmp
xchg
inc
push
lcall
flds
jecxz
sbb
lock
pop
cltd
hlt
mov
aas
out
dec
mov
int
adc
cs
jae
jl
jg
jge
pop
sub
dec
aad
sbb
out
hlt
scas
push
call
popa
leave
dec
sbbb
repz
test
fdivr
js
arpl
pop
das
pop
mov
or
rcr
repz
mov
enter
add
xorb
mov
mov
jne
test
mov
inc
in
jo
adc
jnp
fwait
cmpsl
jae
lea
xchg
mov
cmp
es
dec
jo
imul
and
stos
fldt
jns
bound
decl
xor
cmpb
movsb
push
jge
adc
imul
jns
mov
push
or
mov
push
xor
aas
jae
pop
in
in
imul
push
es
loope
mov
loope
mov
mov
inc
or
sub
arpl
xor
arpl
cmc
ret
ja
jecxz
mov
add
mov
and
jle
adcl
xchg
cmp
mull
int
movsb
fwait
incl
or
ds
es
not
mov
push
mov
xlat
int
pushf
jae
cmc
inc
fidivrl
arpl
pop
popf
xchg
fidivl
repz
fsubs
out
cmc
mov
pop
and
negb
sub
or
or
mov
or
xor
cmp
adc
mov
clc
mov
movsb
lcall
push
scas
dec
or
out
push
sbb
ja
sub
aad
mov
jmp
pop
out
jmp
pop
inc
jno
adc
stos
faddl
add
push
mov
sub
push
subl
in
lea
loope
jns
rcrl
dec
lods
adc
and
loopne
das
into
jnp
push
or
cmpsb
jae
cmp
mov
cmp
mov
movb
push
jb
fadds
rcl
jae
fs
adc
mov
hlt
sub
mov
into
push
enter
mov
loope
js
pop
xor
test
in
into
xchg
xchg
adc
jne
pop
lcall
iret
mov
sti
inc
cs
mov
mov
hlt
fiadds
cmp
sahf
xchg
adc
pop
inc
aad
into
sub
pusha
xor
js
mov
mov
add
pop
int3
push
jo
mov
scas
mov
aad
cmpsb
std
mov
inc
lret
sahf
nop
leave
push
in
aas
lret
sub
or
cld
lock
ja
hlt
cld
enter
stc
loopne
sbb
je
ret
movsb
ljmp
and
bound
stos
mov
dec
testb
mov
mov
xchg
jg
aaa
ljmp
fidivl
mov
pop
sub
xor
iret
mov
aaa
add
dec
fnstsw
inc
insb
jge
les
dec
dec
outsb
repz
jl
loopew
hlt
in
mov
popf
clc
sbb
cltd
xchg
call
add
and
aam
iret
lret
jns
inc
and
shll
ret
rcrb
jecxz
ljmp
cmp
pop
adc
adc
sbb
movsl
inc
rcrb
xchg
mov
imul
clc
les
add
xchg
fisubrl
cmpsb
repz
or
or
jecxz
rcrl
mov
mov
mov
fcomps
xchg
pop
movsb
sbb
xchg
push
sbb
cltd
xchg
out
repz
xchg
shll
decb
call
cmp
push
push
sub
test
cmc
xor
rcll
mov
ds
pop
ffreep
shrb
inc
movl
mov
push
jo
xchg
push
mov
add
into
add
inc
adc
jmp
mov
in
inc
push
je
notb
leave
into
sub
dec
inc
popw
jo
into
adc
add
cmpsl
mov
imul
cmp
mov
pop
pop
inc
jnp
adc
lods
int
das
cs
aaa
xor
mov
out
imul
mov
mov
sub
xchg
cmp
sub
test
out
stos
xchg
push
nop
dec
ss
aad
push
add
mov
fstpl
mov
push
cmp
loop
mulb
arpl
and
cmp
and
jno
rolb
in
bound
xchg
nop
xor
int3
test
mov
pop
jle
fwait
cld
xchg
jg
pop
pop
insl
aad
cmp
sbb
dec
outsb
repz
push
jns
lods
pop
js
rclb
sar
pop
jp
lcall
adcl
jae
fwait
pushf
psrld
xchg
jmp
sub
in
sub
out
jp
into
lea
loopne
pop
cli
in
lock
nop
cwtl
pop
call
fdivrl
dec
jns
jle
dec
lcall
movsl
data16
jmp
sub
adc
jo
inc
xchg
mov
xor
push
fnstenv
daa
push
or
add
push
sarb
push
jmp
dec
movsb
and
out
cli
sbb
scas
addl
push
repz
push
cmpsl
mov
cmpsl
inc
mov
movsl
adc
and
xchg
cld
movsl
into
sbb
jl
ja
mov
and
jo
les
push
push
push
lods
xchg
enter
int3
and
enter
jne
jne
pop
pop
or
mov
inc
not
shrb
movsb
jne
mov
and
xchg
push
in
lahf
dec
sbb
js
int
pop
add
push
jmp
or
rorl
jae,pt
stos
and
loope
repz
mov
stos
popa
das
std
les
dec
cmp
cs
pop
jge
ret
int
mov
jmp
adc
ds
dec
mov
fnstsw
test
lahf
xchg
les
leave
lcall
jge
aam
out
sbb
or
repnz
or
jnp
dec
ret
sub
push
test
out
stos
in
aam
inc
sarb
sbbb
stos
and
dec
xchg
sub
or
adc
xchg
dec
pop
mov
leave
lret
sbbl
push
cmp
jl
fisttpl
fidivrs
pop
xor
mov
bound
fildl
xor
push
mov
jno
jecxz
cli
mov
sub
adc
push
test
mov
pop
sbb
adc
mov
or
adc
xor
das
push
test
lea
loope
jmp
ss
or
adc
test
xchg
adc
test
dec
stos
out
gs
movsl
mov
jp
insb
cmp
xchg
lods
mov
sub
xor
and
icebp
dec
xchg
mov
push
jbe
pop
sub
test
push
xor
dec
xor
fs
xor
xchg
pop
insb
mov
ret
cmp
mov
sbb
scas
push
xchg
mov
lret
cmpb
in
inc
ljmp
sti
imull
lret
push
fnstsw
or
cmpl
popf
adc
fiadds
lods
cmc
dec
ret
xchg
stc
or
cmp
pop
int3
push
pop
call
call
cmc
outsb
lcall
lahf
xchg
cmpsb
sar
iret
and
int
test
adc
dec
mov
xlat
sbb
mov
mov
mov
hlt
mov
pop
aam
int3
or
jg
adc
std
cs
insl
jecxz
pop
mov
add
cmp
imul
mov
jg
add
jns
add
cmp
out
sub
cmp
insl
mov
add
pop
test
call
push
or
addr16
and
pop
arpl
mov
gs
pop
imul
jb
push
dec
sub
push
cmp
mov
pop
test
lods
mov
aam
std
xchg
stos
cmp
xor
mov
fs
push
jmp
sbb
cs
dec
sub
mov
dec
inc
in
add
mov
loop
das
mov
icebp
sbb
inc
scas
pop
jb
stos
in
subb
les
cli
mov
cmpsb
fmul
pop
fnstsw
jge
loopne
add
in
xchg
in
pushf
fisubrs
mov
bound
xchg
pop
mov
push
rcrb
loop
repnz
adc
and
xor
inc
mov
bound
xchg
pop
mov
push
rcrb
loop
repnz
adc
xor
xor
inc
mov
bound
xchg
pop
stos
outsb
mov
ret
push
out
ret
into
fisubrs
mov
bound
insl
hlt
or
or
rorl
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
cmpl
add
push
pop
add
or
add
add
add
cmp
cmp
add
xchg
add
add
add
push
int
xor
cmp
add
add
add
jno
mov
jb
or
dec
add
and
lods
add
ss
add
lea
cmp
sub
testl
jno
imul
mov
add
cmp
pop
add
mov
int
jecxz
sahf
add
add
xchg
insb
add
add
lahf
add
add
add
add
and
xor
xor
xor
flds
fadds
mov
pop
ljmp
add
add
add
add
sbb
leave
add
push
add
add
and
jecxz
or
aad
test
mov
leave
add
add
fadds
out
add
add
add
add
ja
mov
jno
incl
sbb
add
add
add
add
and
lcall
add
add
out
add
add
add
add
add
mov
jno
dec
add
add
add
sub
push
push
xor
jno
adc
add
add
les
popf
add
add
lods
add
add
add
add
add
add
add
add
add
add
call
add
add
popf
add
add
add
add
push
add
lea
cmp
xchg
add
add
icebp
add
add
add
add
flds
xchg
add
addr16
add
add
inc
add
add
add
dec
add
add
scas
add
add
push
and
fadds
sub
lods
add
add
and
add
mov
add
add
add
cmp
adc
add
add
add
add
add
add
inc
add
add
adc
inc
add
add
add
add
add
add
push
add
xchg
in
add
clc
add
add
add
add
add
add
jno
dec
add
add
add
add
inc
add
mov
pushf
add
add
add
add
xchg
add
add
mov
add
add
add
roll
xchg
add
testl
mov
insb
add
add
ljmp
add
add
push
dec
add
add
add
add
dec
add
adc
sahf
add
add
dec
add
repnz
add
add
add
add
add
add
pop
add
add
popf
add
add
add
out
add
add
add
add
add
and
add
pop
add
add
pop
add
add
add
add
roll
mov
dec
add
add
add
add
add
inc
add
add
add
add
add
add
adc
sub
roll
outsb
add
add
add
add
add
add
or
push
add
add
add
add
add
inc
add
add
add
or
ljmp
add
int3
add
cmp
pop
add
add
add
add
add
add
mov
xchg
add
add
add
xor
out
add
add
cmp
push
xchg
ret
mov
aad
or
rol
pop
clc
adc
adc
sub
frstor
lcall
add
cmp
mov
ret
test
shlb
stos
in
sbb
stos
sub
push
jnp
pop
cmpsb
mov
lea
mov
add
stos
sub
lahf
roll
out
jbe
dec
out
add
cmpsb
xorb
push
dec
stos
xchg
loope
or
xor
dec
cs
or
cmp
rolb
stc
mov
into
fidivl
push
fstp
cmpsl
inc
test
mov
lcall
imul
es
scas
leave
mov
xchg
xchg
leave
inc
push
cmp
pop
aam
adc
mov
int3
add
flds
mov
inc
pop
imul
les
mov
lock
add
sbb
insb
mov
sti
xchg
jne
adc
ret
fstps
stc
mov
mov
lret
or
xchg
inc
aam
insl
sub
ret
pop
or
movb
jle
popf
xor
mov
xor
leave
xchg
add
rcr
mov
jbe
cmpsl
cmp
cmpsb
ja
cld
push
inc
cmp
std
fistpll
lds
lea
xchg
hlt
lcall
adc
and
loope
call
stc
mov
xor
je
pop
jmp
test
ljmp
loopne
xchg
ljmp
mov
addr16
and
inc
push
in
aas
imul
sbb
popf
lock
xchg
add
adc
loope
jae
mov
inc
leave
in
mov
pop
std
sbb
push
dec
std
int3
cmpsb
aam
pop
fsubs
cltd
pushf
pop
cmpsb
into
gs
repnz
and
push
jb
aaa
lahf
xchg
sub
jecxz
xor
insb
dec
bound
xchg
and
mov
cs
repnz
aas
cmpsb
xchg
popa
adc
sub
cltd
arpl
mov
or
fdivrs
shll
add
iret
dec
xchg
dec
pusha
cmp
push
adc
fisubs
push
jg
movsl
sub
incl
inc
inc
nop
or
mov
out
shr
lcall
inc
lea
jns
je
mov
dec
add
inc
aad
jae
int3
adc
cmp
push
cmp
sub
jae
mov
push
adcb
push
push
pop
mov
push
out
popa
mov
inc
ss
dec
xchg
stos
xor
jno
jg
es
jl
mov
mov
addb
stc
sub
loop
mov
inc
sbb
add
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
