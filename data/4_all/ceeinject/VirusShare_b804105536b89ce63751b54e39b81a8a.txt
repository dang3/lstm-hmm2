call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
je
fs
push
lret
inc
fstpt
mov
les
hlt
imul
aam
les
sub
je
fs
push
lret
inc
and
adc
add
hlt
imul
pop
mov
movsb
jmp
or
push
roll
mov
mov
hlt
mov
inc
cmpsl
ds
pop
ljmp
mov
and
lahf
adc
ds
xchg
or
sbb
les
mov
mov
push
and
adc
jmp
xchg
pop
pop
inc
pop
dec
scas
mov
xchg
or
mov
jl
xchg
int3
mov
imul
mov
adc
sub
sbb
mov
mov
ljmp
test
loop
dec
js
les
adc
ds
cmp
fildl
jnp
push
dec
pop
cmp
mov
or
sbb
lret
movsb
adc
xchg
in
jmp
push
movsb
push
outsl
sub
orl
hlt
in
or
jmp
in
push
fildl
stos
and
adc
add
hlt
jae
arpl
push
les
xor
xor
and
pop
std
insl
aad
out
divb
push
test
roll
push
ja
push
sti
add
and
jb
dec
mov
add
xchg
adc
sbb
pop
lock
out
test
stos
add
xor
and
adc
add
hlt
imul
aam
les
sub
je
fs
push
lret
inc
and
adc
add
hlt
imul
aam
les
sub
je
sarl
enter
fisubrs
std
xchg
adc
xchg
push
cmp
es
and
sbb
fwait
cmp
scas
orl
dec
pop
jne
cmc
xchg
or
lahf
test
divl
add
sbb
sti
xor
int
hlt
adc
xchg
sub
mov
clc
rcll
imul
jge
mov
aas
mov
pop
fcmovu
cld
dec
out
orl
or
push
sbb
sub
sub
push
dec
pop
insb
inc
fldln2
xchg
pop
rcrb
lods
pusha
aad
std
inc
push
adc
push
sbb
xchg
mov
mov
inc
add
mov
xchg
gs
scas
movsl
mov
jbe
push
or
jmp
and
lret
enter
pop
pop
inc
or
push
inc
push
adc
inc
fldt
add
cmc
mov
bound
adc
cmp
add
xchg
and
or
leave
xchg
xchg
in
mov
mov
sbb
jl
ficomps
mov
out
mov
dec
cmc
lods
nop
xlat
jge
lds
xlat
add
xchg
ljmp
adc
jl
and
arpl
sub
adc
scas
jae
adc
std
sub
mov
call
aas
xchg
jbe
sbb
jno
je
lahf
bound
pop
out
rol
icebp
lock
mov
push
pop
push
mov
test
iret
sub
sub
mov
sbb
and
dec
cwtl
dec
mov
cmp
sahf
and
mov
into
test
cmpsl
and
mov
inc
mov
xchg
int3
daa
orb
call
or
lds
adc
cmp
push
fmul
mov
in
cli
mov
mov
fsubrl
fwait
and
pop
imul
xchg
int
adc
jo
pusha
rcr
fidivrl
out
imul
adc
je
lods
pop
sbb
sahf
adc
rorb
out
mov
jmp
rorb
cmpsl
or
loop
kmovw
sar
push
cmpsl
add
inc
and
outsb
xchg
mov
out
repnz
mov
roll
dec
hlt
movsb
mov
dec
out
in
xor
lds
roll
aas
fcomps
fadds
outsl
add
mov
and
out
ljmp
jg
mov
and
sbb
push
sub
push
fcmovnu
cmpsb
lret
mov
test
jmp
xchg
or
cmp
daa
add
imul
enter
out
lahf
pop
inc
enter
xlat
in
pop
push
mov
ds
jecxz
pusha
dec
cmp
mov
jb
xchg
push
mov
clts
in
xor
jnp
test
repnz
mov
aaa
pop
repz
or
add
je
mov
test
push
jmp
pushf
sbb
insb
mov
lcall
frndint
lcall
dec
adc
and
dec
test
and
dec
and
lret
or
addr16
inc
jle
cmc
fidivrl
int
adcb
pop
lds
add
call
mov
mov
dec
cmpsl
or
adc
sub
mov
xor
jno
das
jl
dec
adc
xor
jns
dec
ljmp
orl
cli
mov
es
bound
jnp
lock
sub
jne
inc
sub
aaa
popf
sbb
xchg
jg
xor
xor
xchg
push
sub
mov
rolb
fstps
adc
pop
jmp
sbb
pop
jle
add
lahf
scas
or
sub
adc
mov
or
loopne
fidivl
or
int3
and
xor
aaa
ss
pop
repnz
jmp
inc
shl
pop
pop
mov
jae
rol
push
pop
popf
lret
push
xor
jmp
inc
icebp
push
cmp
leave
sarl
adc
fcmovu
push
sbb
lret
mov
sub
xchg
xor
jbe
pop
or
pusha
jo
xchg
test
pop
sub
movsl
orl
jg
mov
push
xchg
in
ret
ljmp
add
and
xchg
inc
test
std
adc
adc
sbb
inc
fwait
adc
in
pop
push
data16
fidivs
lret
aaa
das
or
sbb
clc
or
das
jnp
mov
push
jbe
mov
jb
jnp
pop
push
jecxz
xorl
xor
cmp
xchg
mov
push
xchg
int
or
push
xorl
sbb
gs
sahf
xor
repnz
pop
mov
ss
and
scas
ret
jg
out
or
mov
jnp
ljmp
mov
lock
repz
pop
sub
cmpb
aad
cmpsb
lea
flds
mov
je
sub
add
sbbb
adcl
andb
mov
jno
mov
insb
cs
jge
les
nop
push
stc
xor
mov
rolb
imul
jmp
or
or
jo
sbb
push
dec
mov
adc
aam
add
stos
in
jle
cwtl
and
pop
fwait
inc
ret
dec
fisttpll
inc
sahf
mov
jb
push
aad
sbb
fs
push
inc
push
and
movsl
sbb
mov
xlat
lds
test
jecxz
nop
repnz
and
lahf
push
mov
jmp
je
data16
notl
pop
movsb
adc
push
daa
dec
inc
and
cs
aaa
dec
clc
icebp
into
insb
sub
cmpsl
mov
mov
pop
inc
sbb
mov
add
pushaw
cmp
or
test
dec
add
ss
adc
xorl
jge
ljmp
mov
jae
jmp
shrl
movsb
jle
adc
repz
mov
fldenv
mov
adc
mov
andl
dec
outsl
cwtl
inc
adc
cmp
in
push
shrb
or
sarb
mov
fbld
pop
xor
cltd
push
divb
cmp
mov
inc
pop
rolb
lret
add
mov
jno
jg
fdivrl
inc
cs
sbb
or
jmp
jmp
fisubrs
subl
push
push
cmp
shlb
movsb
mov
ret
repz
jns
and
sar
cli
jno
lods
adc
test
lahf
shrb
sub
pop
pop
push
imul
jecxz
sub
iret
lods
mov
fstp
and
jmp
push
sahf
add
test
idivb
lret
rcrl
insl
xchg
mov
mov
add
inc
mov
insl
test
std
popf
pop
push
cmp
pop
push
jecxz
sub
frstor
mov
dec
mov
sbb
cmpsl
mov
loope
mov
leave
jae
aad
in
dec
jg
mov
jg
outsl
mov
dec
jg
mov
fmull
or
std
inc
loop
xor
cmp
ljmpw
sub
scas
inc
repnz
xchg
push
dec
jnp
add
xor
call
bound
mov
dec
or
arpl
jo
and
jae
cmp
cmp
add
mov
mul
jno
mov
adc
jp
nop
ret
mov
insl
int3
test
cmp
add
cwtl
and
cmp
inc
fldcw
ja
jecxz
or
ret
jge
push
pop
xorb
fwait
mov
rcr
jb
lret
inc
push
sub
pop
sub
xor
mov
xor
add
push
xor
dec
jmp
adc
jbe
xchg
cmp
xchg
cld
push
sub
lcall
xchg
dec
jmp
std
out
std
je
leave
jne
mov
push
fldcw
jb
jbe
xchg
and
nop
sub
mov
push
inc
mov
leave
out
sti
das
rorb
xor
leave
fnstenv
adc
or
inc
xchg
ss
adc
mov
jle
imull
in
xor
das
cmp
stc
add
pusha
fmuls
loope
lahf
popa
lea
loopne
or
push
fnstsw
push
ljmp
jb
mov
push
push
sarl
jg
in
movsb
jl
out
mov
lahf
mov
sbb
rcl
push
je
mov
push
or
aaa
push
cmp
inc
sub
mov
std
loopne
xor
xor
jns
jnp
jo
lcall
push
sub
fstps
into
xchg
add
out
or
loopne
mov
pop
xchg
scas
push
mov
in
inc
xchg
xor
inc
sti
inc
popf
pop
adc
mov
rcrl
nop
out
xor
movsb
push
outsl
jp
test
pop
lods
sbb
lahf
or
xchg
inc
sub
lret
cmp
mov
sbb
es
xchg
sbb
cmp
popf
icebp
or
dec
pop
cmp
fsubrl
adc
sbb
jmp
sbb
push
or
adc
mov
rorl
mov
fldl
jbe
xchg
sbb
sti
inc
stos
dec
or
ljmp
into
sbb
mov
jo
movsb
movsl
movsl
out
sti
ret
lds
mov
adc
out
neg
xor
and
xchg
mov
cmc
movsb
xlat
bound
test
mov
sub
cltd
push
xor
jle
pop
inc
mov
cmpsl
add
lahf
sbb
push
mov
shlb
lcall
nop
loope
int3
imul
xor
jbe
mov
insl
ljmp
cmp
or
pop
jmp
inc
lods
or
or
shll
xchg
dec
mov
push
cwtl
pop
lret
les
adc
dec
and
and
nop
rorb
mov
pop
test
jle
leave
dec
leave
ja
rol
ljmp
mov
imul
add
push
imul
add
lods
in
mov
in
jae
insb
or
mov
iret
mull
xchg
incl
test
dec
push
pusha
pop
stos
and
xor
lret
mov
cld
mov
or
hlt
scas
dec
cmpb
lods
rcr
xchg
sarl
jmp
sub
out
movsl
cmp
add
sarl
out
vaddpd
or
dec
jae
fmul
lock
pop
and
lea
sbb
cmp
pop
lret
cmp
daa
jbe
repz
das
and
push
inc
stos
and
push
shrb
push
xchg
add
loop
stc
addr16
xchg
mov
pop
cmpsb
es
cmp
std
mov
dec
ss
stos
lock
in
or
or
ljmp
xor
les
js
dec
je
icebp
mov
xchg
cmp
pushf
xchg
testl
push
push
stc
xchg
push
jne
pop
mov
sahf
test
sub
xchg
dec
data16
jp
jmp
inc
sbb
daa
lcall
jbe
sub
cmovp
mov
test
mov
cs
dec
insl
stc
lock
mov
pop
mov
pop
mov
sbb
fcoml
mov
ficoms
mov
jl,pt
fistpll
and
dec
inc
pop
ret
pushf
mov
dec
into
data16
push
popa
aad
and
add
add
test
pop
sahf
pop
js
mov
sub
lahf
or
jmp
inc
fdivrs
sub
shll
out
cwtl
out
int
repnz
lret
inc
call
inc
inc
cmp
xchg
add
loop
sbb
mov
and
sbb
in
cwtl
pushf
sub
mov
test
mov
push
jb
inc
push
sbb
in
xor
adc
jbe
jecxz
repnz
adc
out
pusha
jb
adc
paddsb
jb
xchg
test
ja
sub
fwait
lock
mov
sbb
xor
mov
int3
mov
aad
mov
pop
test
out
xchg
push
les
pop
popf
xchg
inc
or
lock
sarb
xchg
ljmp
cmp
mov
inc
nop
icebp
push
arpl
or
inc
arpl
ss
sub
call
and
inc
clc
jns
jl
or
dec
pop
movsb
adcl
jge
lret
sti
or
mov
js
cmp
sbb
add
je
dec
loopne
nop
cli
ljmp
imul
arpl
in
adc
pop
pop
and
loopne
xchg
cmpsl
and
add
fwait
sbb
notb
mov
les
inc
lcall
loopne
mov
xchg
stos
inc
xor
popa
adc
into
dec
call
add
inc
es
sarb
shlb
jmp
lea
xchg
mov
imul
scas
xchg
xlat
int
andl
loop
ret
ret
into
xlat
or
push
dec
mov
lods
mov
je
cs
cld
scas
jp,pn
movsl
pop
cs
je
hlt
mov
push
inc
add
pop
cmc
mov
push
out
push
add
fimull
notl
lock
push
lods
arpl
rolb
push
mov
cmpsl
jne
daa
push
in
lock
jb
pop
stc
sub
jne
jne
or
and
push
aaa
pop
bound
mov
mov
sbb
jg
aad
es
in
mov
les
rorb
mov
xor
and
das
or
jg
push
dec
xor
test
dec
jecxz
shll
mov
addr16
mov
pop
jge
lods
and
call
inc
dec
cmp
insl
and
out
dec
lods
sbb
test
fdiv
movsb
mov
test
sbb
fnstenv
out
movl
in
xor
sbb
mov
outsl
scas
testb
leave
int3
adc
hlt
mov
xchg
mov
test
test
push
int
dec
sbb
leave
or
or
sub
dec
fs
add
pop
jge
cmp
test
or
push
and
pop
dec
sub
aam
mov
psrlq
scas
scas
lret
adc
lret
or
pop
jno
cwtl
cmp
sbb
repz
sti
test
fistl
dec
decb
ljmp
inc
xor
jg
sarb
fiadds
mov
xchg
loopne
or
stos
cli
rclb
sbb
shll
add
sbb
mov
aaa
frstor
daa
repnz
ret
jb
mov
sahf
mov
adc
adc
jbe
pusha
sub
sbb
jge
icebp
mov
cmp
jo
adc
popa
cmp
daa
divb
imul
clc
sub
adc
lods
cld
push
pop
shr
xor
fcomip
mov
jl
jg
jbe
mov
sub
mov
inc
enter
clc
stos
jg
inc
cmp
fldt
sysexit
int
fst
pop
push
inc
mov
popf
inc
aad
mov
sbb
add
xchg
sbb
ja
jb
lahf
pushf
xchg
imul
pop
leave
inc
mov
xor
test
mov
xor
cld
xchg
pop
inc
rcr
pushl
mov
mov
stc
jecxz
sbb
mov
push
lret
and
mov
mov
hlt
mov
gs
jg
cmp
stos
repnz
lahf
nop
in
cmpsl
fcompl
sbb
or
and
push
stos
push
and
or
movsb
pop
lods
fimuls
div
int3
stos
clc
mov
inc
lds
mov
adc
in
or
dec
jmp
mov
inc
in
adc
add
les
push
cmp
imul
push
and
push
sbb
aaa
dec
and
push
into
stos
mov
push
pushl
je
adc
jbe
sarb
pop
add
mov
or
aaa
test
inc
std
or
sbb
and
adc
int3
icebp
in
pusha
hlt
jns
out
lret
pop
xchg
lock
sbb
jmp
daa
popf
int3
cmp
leave
mov
pop
fwait
lods
push
mov
out
mov
mov
aas
fcomps
in
out
pop
pop
js
and
lds
mov
dec
cmp
lcall
cmpsl
ja
imul
push
or
push
lret
push
lods
sub
pop
push
add
test
sub
insl
add
insb
out
aas
int3
push
rcl
xorb
mov
mov
mov
lods
ja
clc
movsl
das
pop
comiss
mov
lahf
mov
jno
sarb
imul
stos
cld
aad
xor
pop
je
insb
out
es
dec
notl
repnz
ds
dec
cmp
cmc
mov
xchg
ret
inc
pop
xor
push
xchg
cltd
xchg
js
test
ss
inc
imul
data16
loope
pop
pop
adc
add
add
push
test
inc
push
lea
xchg
clc
cltd
mov
push
jb
fisttps
dec
xor
fidivrl
cltd
and
add
fldt
sbb
lcall
jb
push
popa
test
jb
or
jmp
pop
sub
fldcw
insl
std
scas
jmp
mov
jecxz
lods
lcall
loope
or
ret
stos
cltd
push
nop
xor
popa
test
lahf
gs
xchg
pop
std
xchg
and
bound
xorb
add
adc
int
fucomip
pop
mov
xchg
adc
dec
js
jle
cmp
std
ss
into
insl
inc
test
lret
xchg
mov
fstps
sub
fwait
mov
repnz
sarb
and
mov
sbb
mov
mov
mov
mov
loop
or
fmuls
inc
and
pop
int
testl
dec
testb
mov
mov
push
add
xchg
addb
imul
ljmp
jne
or
inc
pusha
ss
dec
push
adc
push
xlat
insl
mov
jecxz
mov
sbb
imul
mov
sahf
call
rolb
mov
int
xchg
xchg
roll
je
stc
movsl
adc
add
sub
or
cmp
push
sbb
repnz
faddp
xchg
addr16
in
pop
mov
jo
popf
sub
pop
xchg
sbb
popa
sub
cltd
in
insb
mov
je
shrb
int
movsb
cmp
xchg
mov
dec
dec
and
hlt
stos
movsl
fnstenv
xchg
jbe
cld
loopne
inc
repz
hlt
mov
sub
imul
repnz
add
dec
in
orl
pop
jno
and
fwait
push
daa
cli
insb
fbld
jp
cmc
push
aad
addr16
jnp
lods
xchg
mov
test
and
repnz
adc
dec
adc
adc
xlat
push
cmc
pop
jge
inc
jge
fiaddl
je
mov
sub
jnp
je
or
insl
shll
bound
test
iret
sarb
imul
mov
xchg
insb
dec
sbb
ret
dec
adc
lods
out
jo
subb
mov
lahf
sbb
jmp
mov
mov
in
nop
aaa
out
or
idiv
push
in
stc
mov
lock
mov
adc
es
mov
inc
xchg
xchg
dec
aaa
int3
pop
push
sub
xchg
or
je
push
ret
fwait
and
shrb
mov
rol
push
push
adc
push
inc
push
out
decl
js
push
cmp
sarl
xor
jne
or
mov
pop
mov
int
cwtl
scas
add
or
mov
pop
fbld
int3
in
enter
inc
je
mov
push
cli
bound
inc
sub
lock
test
fsubrs
add
lock
jae
pop
leave
jl
jmp
mov
inc
inc
xchg
rorl
push
mov
and
or
stc
mov
dec
test
sbb
scas
xchg
cmp
stos
jne
xchg
add
xor
jmp
jmp
arpl
jp
xchg
pop
mov
xor
or
rcrl
push
gs
push
fucomp
jge
popa
scas
stc
sbb
add
popa
sub
mov
movsl
mov
inc
sbb
xor
ficomps
cmovno
out
stos
push
dec
xor
xchg
imul
subl
ret
and
cmp
push
icebp
aad
gs
jmp
loop
arpl
xor
adc
outsb
shll
fiadds
dec
lret
mov
test
loope
scas
daa
mov
jno
repnz
jle
ja
pusha
push
jns
imul
mov
fcmovnb
test
fisttps
and
sti
mov
daa
mov
jg
inc
and
adc
add
hlt
imul
aam
les
sub
je
fs
push
lret
inc
and
adc
add
hlt
imul
aam
les
sub
je
fs
push
lret
inc
and
adc
add
hlt
imul
aam
les
sub
je
fs
push
lret
inc
and
adc
add
hlt
imul
jle
les
mov
jnp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
lahf
pop
jo
inc
daa
rcrb
inc
insl
adc
shlb
testl
daa
push
push
and
ja
addr16
loopne
shlb
iret
mov
shl
pop
repnz
jo
call
inc
or
out
or
xchg
fistpl
test
xor
nop
dec
pusha
arpl
aaa
xor
int3
mov
mul
dec
dec
add
xchg
pop
cmpb
jmp
popa
imul
in
test
inc
int3
mov
push
push
add
sub
push
inc
popa
pcmpeqw
pop
push
jle
jae
or
cmpsb
cmp
mov
addr16
xchg
out
pop
mov
daa
call
repnz
addr16
sbb
add
sub
rol
call
adc
aad
add
jne
or
adc
shl
xor
fcmovbe
test
cmp
ljmp
push
addr16
cli
inc
addr16
shl
cwtl
dec
aas
dec
dec
mov
addr16
pusha
pop
xorb
daa
pop
push
and
ja
addr16
xchg
xchg
mov
cmpsl
cwtl
xlat
mov
dec
testl
dec
jle
push
xor
jne
cmpsb
loop
mov
fistpll
xchg
shll
push
and
push
dec
add
movd
cmpsb
mov
cmpsl
mov
lock
sti
jb
pop
aaa
pop
adc
sbb
ja
adc
lock
cmpsl
rcl
mov
out
pop
pusha
pop
jo
inc
daa
push
push
and
ja
adc
lock
cmpsl
rcl
mov
out
pop
pusha
and
test
pop
nop
pop
loopne
mov
mov
sahf
jp
ret
daa
adc
sti
insl
xchg
mov
cmp
or
sbb
adc
push
idivl
shlb
fldl
imul
mov
adc
addr16
fidivrs
mov
ror
jge
aad
ret
cmp
movsb
sbb
cld
cmp
xchg
int3
adc
jns
frstor
cmp
push
sub
cmp
adc
cltd
idivb
mov
or
outsl
fimuls
mov
lea
movsl
mov
stc
pushf
dec
outsb
pop
daa
inc
sahf
test
dec
int
jbe
push
adc
sub
das
adc
xor
movsl
enter
pop
xchg
shll
adc
int3
xchg
shr
push
dec
cmp
pop
enter
sub
pop
cmp
xor
mov
mov
jle
sub
es
test
xchg
mov
cmp
insl
and
movsb
adc
inc
mov
aad
dec
jnp
sar
add
xorb
iret
add
cli
or
mov
repnz
and
inc
pushf
cmp
imul
lds
inc
loopne
mov
push
pop
mov
in
jecxz
hlt
das
leave
xchg
xor
dec
jg,pn
pop
or
dec
sbb
movb
or
pop
in
aas
ret
push
arpl
jmp
mov
ja
lahf
mov
popa
push
xor
mov
int
mov
cmpsb
movsl
sub
jmp
xor
fldt
in
cltd
std
outsb
cmc
ret
fcompl
mov
ds
adc
cmp
adc
clc
mov
loope
addr16
popa
in
shrl
mov
or
xchg
push
dec
test
aas
jae
ret
scas
xor
mov
mov
mov
jb
pop
jbe
cmpsb
xchg
ret
or
adc
ja
pop
fidivl
push
shlb
insb
add
ljmp
cmp
cli
mov
ret
in
sub
es
jl
jnp
daa
popa
or
xlat
xor
test
stos
mov
dec
dec
inc
mov
xchg
es
sub
jle
pusha
pop
inc
mov
xor
cmp
jo
fsubs
and
jmp
insb
sub
lahf
pushf
ss
lahf
das
lods
scas
xchg
or
call
mov
dec
fsubrl
push
pusha
lods
xchg
fists
pop
jge
xor
mov
xor
sub
cs
aaa
repnz
mov
int3
mov
or
mov
xchg
mov
mov
mov
scas
in
cmp
nop
fwait
jnp
ret
stos
and
xchg
lahf
sarl
pop
dec
dec
rcl
arpl
cmp
sub
push
xor
bound
fldcw
fcmovbe
add
jl
mov
out
xchg
mov
addr16
lds
shll
outsl
jno
fisubrs
ja
mov
mov
js
ret
push
pop
mov
mov
call
cmpsb
sub
lret
mov
testb
inc
mov
lock
push
inc
mov
stos
cltd
push
lds
dec
mov
cmp
mov
repnz
daa
mov
sub
sub
mov
into
nop
daa
iret
sti
hlt
push
mov
mov
sbb
cwtl
xchg
mov
cmp
lds
push
mov
inc
jns
lret
adc
aaa
repz
mov
pop
imul
shlb
jo
cmp
outsb
out
xchg
mov
push
addr16
mov
aad
outsb
jno
out
popa
xchg
jnp
dec
sub
push
adc
pop
dec
lcall
lods
sub
es
lret
loopne
mov
ss
rcl
idiv
push
jae
cmc
sub
mov
setae
out
aad
mov
mov
orl
in
aas
les
push
mov
sbb
push
data16
leave
adc
mov
jl
fstpl
lea
and
cmp
cmp
test
lods
fwait
cmp
xchg
adc
addr16
fcoms
xor
imull
aas
stos
inc
sub
adc
cwtl
pop
pop
mov
mov
adc
sti
mov
push
inc
addb
adc
mov
insb
push
inc
sbb
cmp
and
xor
xchg
mov
jo
aam
fbld
inc
pop
jbe
out
test
xor
push
leave
ljmp
lret
push
or
jne
mov
mov
pop
add
inc
lahf
in
push
adc
imul
les
mov
shll
xor
fidivl
xchg
xchg
mov
hlt
jnp
aaa
cmp
pop
inc
repnz
xchg
push
jbe
je
sar
stos
out
xor
insl
fisttps
insb
stos
jp
outsl
mov
and
sbb
lock
mov
movsb
jp
pop
cwtl
cmc
shrl
add
fidivrl
lahf
fmulp
into
mov
cvtps2pi
mov
lret
mov
int3
and
je
bound
lods
cmpsb
mov
xor
adc
jne
add
inc
sub
and
cli
mov
push
mov
push
cs
inc
or
dec
cmp
js
fs
movsb
std
push
inc
pop
test
mov
stc
mov
mov
mov
push
cmp
pushf
roll
in
out
int3
add
or
mov
lock
cmp
push
cmpl
cmpsb
test
fs
incb
dec
lret
outsl
push
dec
sbbb
ret
xlat
cmpsl
dec
out
jle
iret
enter
test
test
adc
add
test
push
mov
call
jmp
adc
fdiv
mov
lods
xchg
ljmp
cld
les
fstps
push
sbb
orb
leave
inc
lods
shrb
in
pop
mov
pop
and
lret
enter
mull
in
push
je
inc
call
cmp
lea
fmuls
mov
data16
outsb
push
mov
lods
fchs
and
js
dec
out
roll
mov
ds
xchg
cli
inc
mov
mov
and
or
lock
cmp
cmp
mov
test
scas
test
inc
loope
gs
mov
xchg
add
ljmp
movsl
popa
mov
int
mov
cmp
jne
mov
leave
add
clc
or
out
cs
mov
cwtl
jne
test
mov
pop
daa
jne
pop
scas
inc
or
loope
add
xchg
sbb
jo
or
or
inc
test
rcrl
mov
pusha
xchg
aam
jnp
mov
pushf
dec
xchg
into
adc
call
pop
mov
jl
sub
test
push
cmp
mov
cmp
or
in
dec
push
pop
pop
mov
dec
mov
fstl
sub
sar
clc
xchg
push
clc
mov
push
pop
jle
jle
hlt
repnz
mov
adc
pop
fistpll
pushf
or
mov
psrld
xchg
hlt
mov
sbb
jae
xor
sbb
add
mulb
cwtl
test
or
xchg
adc
cmp
mov
adc
insl
adc
inc
adc
and
mov
push
dec
pop
pop
dec
dec
dec
call
fisubrl
scas
loop
push
sbb
push
sub
or
xor
lret
mov
rcr
ss
pop
mov
fisubs
jbe
sub
cltd
sub
push
mov
outsb
cmpsb
js
mov
dec
rcr
lcall
fs
sub
mov
leave
icebp
out
mov
outsl
scas
push
and
in
and
push
movsl
loopne
in
fistps
mov
int
clc
std
cmc
mov
push
mov
xchg
xor
dec
xor
cmc
jge
ret
test
push
mov
cmpsb
and
ljmp
call
cmp
sti
xchg
jmp
pop
in
fwait
pop
ret
movsb
addr16
inc
jae
pop
jne
int3
or
xchg
xor
or
and
test
push
xlat
jns
call
outsl
lret
dec
mov
lret
ja
fidivrl
xchg
test
ds
ja
sbb
xor
cmpsb
cmc
lcall
dec
jg
imul
add
fwait
jg
push
jmp
push
mov
cmp
and
sub
repnz
aad
int
loop
jae
into
sub
sub
mov
sti
js
ljmp
in
xchg
xlat
dec
pop
mov
sbb
jp
or
mov
jle
out
out
fs
sub
imul
pop
mov
jecxz
push
ja
sar
xchg
mov
push
andl
test
roll
sbb
scas
fmuls
mov
pop
cmc
and
add
divb
mov
lods
in
inc
rcr
test
mov
test
inc
mov
test
fst
je
sbb
roll
dec
cmp
lds
push
xor
leave
mov
pop
fwait
cmp
push
in
popa
dec
inc
inc
pop
pop
xlat
jl
mov
scas
cmpxchg
xor
mov
rcr
mov
and
xor
adc
jb
jecxz
or
adc
mov
push
cmp
cmp
das
push
mov
nop
cmp
jo
sbb
mov
cmp
dec
jns
stos
sub
push
mov
movsb
cmc
push
in
push
or
mov
loop
mov
popa
xchg
sub
imul
mov
addb
dec
mov
cmpl
fnstsw
sub
adc
popa
stos
imul
fcomip
pop
ljmp
call
mov
inc
jb
and
push
arpl
pushf
xchg
out
jmp
mov
stos
xor
icebp
in
stos
test
dec
push
pop
adc
dec
jbe
and
sti
jmp
scas
shrl
pop
pop
cmp
insl
inc
pushf
fisttpl
xchg
sbb
xchg
ss
movsb
mov
jmp
inc
add
pop
cmc
loop
or
dec
hlt
addr16
dec
lcall
push
aas
insl
sbb
inc
flds
sbb
pop
ficompl
add
imul
movsl
pop
jb
cwtl
lret
xchg
adc
lahf
push
and
jo
jne
stos
daa
push
or
pop
arpl
mov
test
cmc
stc
cmp
cmp
adc
adc
mov
cs
lds
inc
inc
je
das
add
sub
out
cmc
sbb
leave
adc
and
stos
sbb
out
pop
xchg
jl
inc
clc
push
ja
leave
pusha
pushf
out
movsl
xor
cld
adc
lds
insb
xlat
cli
cmpb
xchg
push
fs
dec
mov
pop
std
inc
int3
enter
push
or
fimuls
and
lds
idivl
xchg
cmc
mov
mov
dec
es
xchg
dec
dec
inc
rolb
test
jnp
pop
push
ja
pop
mov
pop
dec
inc
icebp
dec
add
test
xor
jmp
add
test
cli
xlat
pop
sub
sub
rcr
mov
fdivl
cmpsl
dec
xor
insb
mov
jl
jnp
iret
shll
cmp
filds
add
outsb
jecxz
mov
adc
add
call
movsl
lods
pop
adc
mov
fldcw
out
pop
pop
cmpsl
rcrl
negl
ret
xchg
jbe
ret
and
pop
fmulp
mov
jo
scas
xchg
in
outsb
outsb
push
sbb
sbb
cmp
shll
std
ret
out
inc
add
mov
leave
decl
cmp
mov
xchg
fldt
popa
dec
sbb
xchg
int
or
idivl
filds
pushl
push
mov
hlt
xchg
jl
adc
pop
mov
dec
mov
push
imul
dec
lods
add
rorb
dec
dec
mov
mov
lret
fdiv
mov
mov
std
pop
inc
into
jmp
jb
das
cmp
pop
das
insb
fsubrl
add
adc
insb
fmull
pop
xchg
push
sarl
xor
mov
adc
push
and
cmc
adc
xchg
pusha
jp
mov
outsl
inc
jo
xchg
push
cmp
or
or
inc
cmp
scas
jge
cld
dec
dec
add
dec
mov
or
xchg
lret
mov
aam
xchg
xor
sbb
mov
ret
push
xor
or
test
mov
add
mov
cmovno
mov
or
pop
rclb
cs
int
pop
shl
pop
mov
adc
dec
mulb
fwait
mov
sub
xchg
xchg
push
outsl
orl
repnz
shrl
fdivl
add
pop
stc
inc
lret
sbb
into
test
sahf
lret
mov
pop
sar
mov
fstl
inc
nop
popf
mov
xchg
scas
and
popf
or
mov
sbb
mov
nop
rclb
stc
pushf
cmp
cmp
inc
push
xor
pop
hlt
xorl
mov
xchg
jle
mov
dec
insb
pop
aam
dec
subl
imul
dec
popf
ficoms
jp
imul
fs
pop
xor
mov
jl
inc
stc
fisttps
pop
lock
dec
imul
sub
cmc
icebp
adc
jmp
bound
push
call
mov
mov
cli
loope
fstl
loopne
push
std
sbb
or
and
ret
pop
lret
insl
test
iret
les
sub
ret
sbb
inc
bound
testl
xorb
cmpsl
lret
addb
cltd
les
aam
mov
adc
adc
pop
daa
in
xor
loope
test
das
ja
insl
ret
mov
pop
mov
adc
pop
pop
rcll
scas
mov
adc
int3
arpl
aaa
daa
movsl
pop
mov
mov
jg
cmpsb
cmc
mov
shlb
push
inc
aam
inc
repz
shll
push
fdivl
ret
sahf
jg
push
fcmovne
adc
dec
sub
xor
adc
shlb
cmpsb
movsl
icebp
aaa
jp
out
enter
into
sub
adc
add
or
ret
aad
jne
mov
xor
push
cld
sbb
movsb
or
sub
out
je
mov
xchg
ljmp
and
jl
scas
jno
mov
add
mov
lcall
mov
or
lahf
ds
xchg
pusha
sub
pop
std
incl
adc
xor
mov
into
sbb
imul
std
sbb
jo
jno
jae
xchg
and
leave
sub
mov
in
inc
je
je
movsb
xchg
fwait
leave
xor
and
daa
jmp
enter
shr
out
and
insl
js
test
movsl
adc
and
icebp
lcall
out
fnstsw
pop
movsl
ret
pusha
lods
outsb
inc
fisubrs
push
test
test
es
inc
sarl
subb
mov
add
xchg
imul
mov
loope
out
cmp
mov
push
imul
pop
rcr
das
dec
sbb
adc
test
int3
adc
bound
inc
aad
outsb
test
idivl
push
dec
cmpsb
int3
xchg
and
bound
aam
add
pop
fstps
add
cmpsb
mov
cmp
test
mov
out
and
ja
push
pusha
imul
fbstp
lds
dec
out
fisttpll
add
lock
inc
fldl
mov
arpl
push
mov
test
mov
xor
add
cmc
fldcw
pusha
jnp
out
push
mov
cmpsw
movsl
pop
sbb
test
gs
test
les
movsl
push
dec
mov
inc
push
fcoml
cmp
xchg
or
jge
mov
movb
fwait
add
mov
push
pop
fmull
push
and
lcall
mov
push
popa
fmulp
addr16
mov
or
lret
mov
pop
xor
test
gs
jno
or
out
sahf
jno
into
addb
jns
push
rcrb
jp
neg
and
enter
inc
je
pop
aas
xchg
sub
subb
jl
jno
jne
test
xchg
mov
sub
dec
dec
pop
jb
jp
push
lods
xchg
mov
and
sbb
jbe
lahf
push
cmpsb
pop
or
xor
xor
fisubrl
sti
push
movl
out
pop
rep
xchg
mov
fdivl
pushf
sbb
mov
push
mov
or
jp
nop
push
sarb
bound
movsl
xchg
cmpsb
adc
dec
and
or
dec
push
jno
add
inc
jg
push
or
sub
pop
xchg
lahf
test
and
mov
test
popf
jle
cmpsb
cli
jle
jns
popa
bound
addl
pop
cli
mov
push
jecxz
sahf
out
sti
inc
arpl
pop
in
add
stc
imul
and
pop
fsts
adc
and
cmp
lret
sbb
mulb
sbb
cmpb
add
push
sbb
fwait
movsb
insb
rcll
xchg
cmp
pop
inc
and
mov
sbb
scas
lds
jmp
add
mov
in
shr
fstps
lods
push
inc
gs
xchg
push
or
rcl
mov
cld
push
movsl
lds
pop
push
stc
neg
cwtl
cmp
mov
fstpl
shrl
xchg
pop
stc
lret
movsb
lret
and
shll
out
pop
mov
jno
cmp
bound
mov
mov
xchg
adc
inc
inc
adc
xchg
xor
sbb
test
mov
pop
cmc
ficoml
push
pop
push
or
xchg
adc
int3
pop
ja
xchg
push
mov
pop
imul
or
jmp
addr16
add
xor
or
xor
xchg
dec
or
lcall
jns
mov
mov
mov
dec
std
or
dec
mov
adc
fwait
pop
mov
pop
jmp
and
add
inc
cmp
scas
mov
inc
out
in
mov
push
mov
fsubrp
leave
mov
test
ret
cltd
je
sarb
mov
jno
mov
mov
push
jp
jne
dec
icebp
decl
lods
fistps
enter
pusha
adc
mov
jecxz
lret
loop
sub
mov
movsb
and
in
ret
pop
inc
mov
nop
movsl
nop
cmp
ds
enter
sub
jl
add
xlat
adc
repnz
xor
jae
or
icebp
out
fwait
out
jecxz
jns
outsb
aaa
mov
add
shll
idivb
test
lock
jo
jbe
sbb
and
popa
and
lock
pop
enter
movsb
sub
sbb
mov
cli
outsl
dec
mov
call
adc
or
ret
call
ficoml
arpl
out
pop
into
lods
and
insb
dec
add
in
out
insb
roll
mov
cs
loope
pop
mov
int
leave
cmp
xchg
mov
jg
clc
sub
dec
rolb
fistps
mov
shrb
icebp
and
mov
inc
lcall
and
mov
shlb
inc
fsubrs
dec
xchg
cwtl
inc
lea
lods
sub
mov
jbe
jg
cmp
gs
je
sub
lock
lret
dec
sub
pop
sub
sub
fdivl
imul
xchg
mov
dec
pushf
mulb
push
jg
in
fidivrs
call
scas
add
push
stc
rclb
jp
fimuls
fmull
pop
mov
pop
mov
or
pushf
js
jno
dec
sti
jg
in
adc
ficoml
pop
cmp
fnstenv
adc
or
les
inc
ret
push
ds
mov
xchg
test
lods
iret
jae
aad
inc
mov
scas
call
mov
out
fsts
mov
and
fiadds
lcall
jmp
xor
andb
sub
mov
push
into
and
pop
dec
cmpsb
insl
mov
imul
dec
jge
in
sbb
push
xchg
mov
push
and
xor
mov
cmp
ja
hlt
ljmp
mov
sbb
adc
out
jno
pop
lods
ret
adc
mov
pop
push
xchg
enter
fwait
add
jmp
or
stos
ds
or
sbbl
mov
clc
push
or
mov
test
lods
lods
jle
ror
test
ja
mov
mov
mov
add
bsf
cmpsl
sub
addr16
xor
add
and
xor
ret
mov
nopl
sarb
hlt
imul
int
mov
xchg
aam
cmpb
ss
push
push
and
ja
adc
lock
cmpsl
rcl
mov
out
pop
pusha
pop
jo
inc
daa
push
push
and
ja
adc
lock
cmpsl
rcl
mov
out
pop
pusha
xchg
mov
daa
push
xlat
and
ja
out
xchg
cmp
rcl
mov
out
pop
pusha
pop
jo
inc
daa
push
push
and
ja
adc
pop
sbb
sub
outsl
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
or
inc
sub
gs
lods
sub
pop
push
and
stos
loope
cmc
lret
or
mov
movsl
outsb
push
sbb
jne
gs
adc
jp
mov
lcall
out
xchg
mov
movsl
mov
call
jge
or
sbb
out
aad
out
mov
nop
mov
cmpsb
lret
push
xor
dec
fstpl
mov
push
lret
test
out
insl
fimull
out
dec
fsub
push
out
stos
jl
xor
out
neg
jl
out
cmp
movsl
inc
sbb
inc
add
cs
inc
sub
sbbl
js
aad
lds
xor
loopne
or
iret
mov
ss
pop
adc
mov
inc
push
jmp
cli
mov
rclb
mov
mov
shlb
cmp
sbb
stos
or
ficoml
cmc
stos
xchg
sub
mov
xchg
xor
jne
mov
dec
sbb
mov
mov
mov
sub
scas
adc
fdivrl
aad
fstp
in
mov
orb
movsb
arpl
aaa
pop
adc
and
pop
jp
mov
filds
sbb
leave
inc
cmp
sub
push
pop
or
adc
das
pop
in
mov
ret
in
test
push
jbe
dec
adc
sbb
pop
add
mov
lcall
xchg
fiaddl
or
inc
sub
gs
adc
jp
mov
lcall
xchg
fiaddl
or
push
call
sahf
mov
add
fdivrs
jecxz
imul
push
fs
xor
pop
in
fwait
jno
inc
mov
jno
dec
push
test
add
cmp
jnp
das
cmp
ljmp
mov
push
mov
adc
add
add
fdivrl
inc
mov
mov
filds
jge
pop
dec
xor
jnp
add
outsb
mov
cmc
cltd
call
adc
or
inc
sbb
cmp
sbbl
sbb
iret
int3
fbld
pop
mov
ljmp
push
sub
push
aaa
subb
dec
fisubrs
fstpt
jno
repnz
test
data16
std
stos
inc
cli
add
faddl
inc
mov
das
pop
pop
mov
mov
call
ret
lods
sub
inc
push
pop
xchg
das
and
add
lret
bound
hlt
add
dec
adc
movsb
fwait
js
and
test
repz
mov
out
mov
dec
mov
push
mul
in
scas
das
sbb
pop
jp
adc
andl
dec
xchg
jo
push
lcall
ja
ret
inc
mov
outsl
mov
dec
add
imul
sub
out
sub
inc
ficoms
out
lods
leave
push
lea
scas
insl
fwait
dec
mov
xchg
sub
loop
pusha
ja
push
inc
imul
pop
movsl
xor
xchg
nop
adc
adc
sub
push
xor
test
call
jp
xor
in
insb
push
pop
jp
xor
icebp
xor
xchg
aaa
push
cmp
clc
and
sbb
or
fs
inc
jg
popf
sbb
pop
sbb
dec
int
or
adc
pushf
cs
loope
nop
lret
add
lahf
out
xchg
sahf
inc
and
sbb
push
pop
push
notb
pop
xchg
leave
cld
int3
lret
mov
lea
mov
pop
adc
mov
in
stc
dec
inc
cmp
xchg
and
push
sub
jbe
and
outsl
ret
aas
stos
in
shll
push
sbb
and
jge
cmpsb
xor
inc
daa
in
or
dec
pusha
les
ja
lea
fs
icebp
data16
sub
push
imul
stc
aad
sbb
shlb
jp
sarl
repz
and
sub
or
lahf
arpl
cs
in
mov
es
call
scas
dec
enter
add
ss
jnp
stos
sahf
loope
push
fidivs
adc
adc
push
jo
insb
mov
mov
mov
or
pop
xchg
lea
sbb
and
xchg
sti
mov
pop
imul
out
xchg
mov
push
pop
imulb
and
mov
lods
xchg
mov
mov
cmpsl
sub
push
adc
shlb
lret
jne
cli
insl
push
push
cmp
test
jge
mov
ss
repz
mov
out
xchg
push
cwtl
push
sub
fwait
and
dec
push
inc
gs
or
push
jecxz
add
add
inc
int
push
ss
sbb
mov
fnstsw
lods
fs
mov
push
mov
inc
sbb
lahf
daa
das
out
jae
pop
pop
rorl
js
sbb
das
mov
and
push
or
cli
xchg
cmp
stos
shl
xchg
ljmp
lahf
adc
pop
pop
out
in
xchg
xchg
jne
mov
in
mov
je
test
mov
pop
ja
xor
mov
push
push
movsb
mov
ljmp
add
dec
xor
sub
test
call
aad
in
mov
push
repnz
inc
jae
jecxz
and
in
mov
push
out
jl
pop
mov
mov
rol
inc
sbb
jecxz
inc
negl
mov
push
xchg
test
xor
and
lea
ljmp
das
push
fcomip
fcomp
sub
lahf
add
jecxz
insb
sub
adc
call
inc
and
andl
cmp
jno
fnstcw
outsb
ds
jae
fcmovb
adc
push
jo
fsts
hlt
fdivl
xchg
bound
fisubrl
mov
and
into
pop
call
jns
inc
rcll
mov
pop
loopne
xor
push
sub
xor
jnp
pop
fidivrl
xchg
insl
ror
mov
pop
dec
js
frstor
sub
cmpb
or
xrstors
cmpsb
xchg
inc
cli
or
test
cmp
scas
mov
add
stos
lahf
push
jge
sbb
inc
mull
lods
divl
mov
in
pop
scas
notb
jne
jae
enter
cmpsb
push
fiaddl
sbb
pop
mov
into
test
popl
hlt
jmp
ds
and
pusha
jp
fwait
add
xchg
or
mov
jg
loop
cmp
xlat
test
push
cmp
lret
push
or
mov
mov
pop
mov
mov
xchg
in
or
xchg
test
sbb
mov
cmc
insl
sub
leave
mov
xor
push
daa
incb
shlb
jno
adc
push
insl
xor
dec
les
inc
dec
out
ss
int3
andl
add
mov
mov
mov
sbb
test
dec
jle
push
push
jg
cmpsb
pop
mov
adc
aam
sti
icebp
pop
adc
dec
sbb
call
inc
pop
add
add
mov
addl
ds
or
xor
mov
jae
lret
or
add
mov
cmp
sub
ja
adc
add
icebp
in
mov
jmp
jp
dec
and
mov
in
push
pop
mov
xchg
leave
xchg
or
or
sub
iret
push
add
mov
xor
out
adc
adc
push
ljmp
in
test
jo
sub
aad
mov
and
mov
stc
fld
add
call
mov
inc
adc
aas
push
gs
jb
test
or
or
inc
pushf
xchg
test
jg
imul
lds
sub
call
imul
or
and
jg
push
repnz
enter
outsl
pop
inc
mov
cltd
aam
and
enter
je
push
mov
aad
lods
dec
sub
push
nop
ja
add
xor
jecxz
stos
ds
cmpsb
outsl
subl
xchg
add
xor
mov
in
aaa
pop
flds
dec
les
xchg
adc
sbb
mov
fstp
movsl
addl
xor
mov
sbb
jbe
adc
push
inc
stos
iret
dec
mov
add
push
add
mov
rcl
jecxz
cmp
hlt
rclb
stc
cs
mov
xchg
cmpsl
sbb
jnp
pop
frndint
or
clc
scas
cld
cmp
dec
rcll
cwtl
or
icebp
or
out
xchg
xchg
es
pop
dec
ret
sbbl
arpl
test
popa
lds
inc
leave
rcr
ret
dec
mov
mov
mov
pop
mov
in
cmpsl
mov
or
inc
xor
add
mov
in
cld
aas
push
test
lods
adc
fcomip
dec
roll
imul
ljmp
out
lea
fs
add
loope
insl
ds
mov
jp
cli
lock
push
inc
shrb
out
dec
fnclex
dec
bound
mov
mov
mov
hlt
jb
mov
mov
clc
sbb
cwtl
dec
pop
push
cmp
pop
and
jp
dec
jmp
call
push
mov
fcmovb
pop
mov
insl
pop
xchg
scas
clc
shl
ret
mov
sbbb
inc
pop
cmp
push
mov
js
ret
push
push
inc
sub
js
flds
inc
lcall
push
sub
adc
imul
sbb
clc
fsubrs
cs
roll
pop
jbe
mov
jp
icebp
addr16
mov
into
enter
imul
push
loopne
shlb
test
pop
imul
inc
cmp
push
cmp
pop
pop
pop
rorl
lret
out
cld
mov
cmc
cs
push
ret
decl
adc
faddl
xchg
push
inc
mov
outsl
fs
xor
daa
adc
inc
mov
jmp
jnp
mov
and
add
frstor
pushf
sbb
jo
sti
leave
stos
mov
pop
fistpl
pop
divl
jnp
jno
jae
adc
mov
test
dec
jmp
adc
sbb
stos
int
mov
xor
sbb
out
mov
push
les
mov
jno
nop
add
xchg
mov
cmp
sub
or
nop
mov
push
pushf
xchg
mov
mov
pop
mov
cmp
xor
repz
movsl
inc
lea
and
insb
shll
mov
mov
adc
shlb
push
add
mov
mov
orw
in
jl
mov
stc
insl
push
sbbw
pop
daa
jnp
mulb
sub
inc
inc
fmull
imul
je
shll
push
mov
cmp
xchg
xchg
or
dec
in
enter
movsb
cmc
sar
out
lret
lcall
and
push
rolb
aam
adc
xchg
sti
or
pop
mov
sbb
jno
insl
dec
sbb
adc
mov
mov
push
mov
clc
das
sbb
xor
loop
inc
cltd
pusha
movsb
xor
in
aaa
mov
hlt
ds
sbb
add
cs
mov
out
dec
jmp
mov
dec
or
and
aas
cltd
rcr
js
push
sarb
dec
jne
repz
push
lret
xchg
stos
jae
ds
ss
mull
push
adc
mov
mov
xchg
mov
or
dec
xor
in
adcb
adc
jnp
cmpsl
popa
fisttpll
stos
pop
std
pop
sub
pop
out
dec
loopne
sub
data16
fwait
mov
test
shll
shlb
mov
add
inc
sbb
dec
pop
xor
roll
out
lret
movsl
sahf
jp
sahf
outsb
fildll
nop
jb
xchg
fcomps
ljmp
mov
int
adc
inc
sub
sbb
outsl
xlat
fsubl
push
clc
leave
lods
push
into
and
ljmp
pop
pushf
add
jno
mov
js
dec
jmp
xor
jns
testb
or
clc
cmp
cmpsl
adc
jl
int3
add
sbb
inc
xor
test
sahf
out
mov
in
int3
das
ret
pop
ljmp
insl
int
stc
xchg
inc
scas
repnz
rcr
inc
cmp
mov
js
hlt
imul
push
data16
or
xchg
or
sub
xchg
fstp
sbb
mov
sub
mov
or
push
sub
sbb
cmpsl
pop
ja
jne
das
jecxz
and
jae
adc
cmp
xor
fmul
in
cmpl
out
testl
xchg
shlb
mov
mov
jmp
adc
pop
push
xbegin
push
cwtl
movsb
sbb
insb
mov
ret
popa
popf
mov
push
add
outsb
xchg
push
mov
sbb
inc
dec
push
add
dec
cmp
pop
xchg
adc
or
test
les
imul
cltd
adc
js
icebp
mov
out
mov
cwtl
cmc
lret
inc
lret
fwait
jp
loopne
popl
mov
jno
cli
cmp
das
ret
insl
xchg
push
mov
pop
add
ficompl
mov
shl
mov
pop
out
pusha
cmpsl
shl
mov
xor
xor
loope
jecxz
aaa
addl
rclb
loopne
sub
pop
sti
jnp
cmp
push
aaa
push
bswap
jns
mov
repnz
fcompl
scas
push
enter
nop
sbb
cld
lods
add
dec
add
adc
xchg
pcmpeqd
js
mov
sahf
out
popf
or
sub
inc
sub
pop
jb
pop
into
mov
adc
daa
lea
xor
ds
in
jmp
push
inc
jle
outsl
adc
inc
sbb
pop
mov
adc
pop
and
cmp
aam
add
lds
fcomps
lods
dec
dec
popf
fwait
pop
jp
divb
test
outsb
jle
add
pop
or
jns
sub
cld
les
inc
dec
ds
pop
fs
push
fst
sti
hlt
test
push
ljmp
nop
push
lock
pushf
push
inc
xchg
pop
movsb
mov
fsubrs
xchg
test
mov
xor
enter
nop
enter
xor
aas
or
sarl
ss
inc
or
sbb
iret
call
inc
lods
loop
or
fldcw
xlat
aas
or
mov
sub
jp
xchg
orl
dec
enter
dec
mov
or
insb
out
dec
pop
pop
daa
mov
lock
inc
pushf
clc
adc
or
mov
ret
gs
cmp
enter
mov
and
or
or
aad
mov
enter
call
pop
add
out
sub
aam
repz
xor
lds
jnp
cmpl
cmp
loope
inc
or
mov
xchg
inc
ljmp
sub
out
lahf
subl
push
add
mov
cmpxchg
in
mov
pop
mov
les
adc
aam
and
daa
das
scas
mov
movsl
test
call
inc
in
pop
add
aam
adc
and
mov
adc
cmpsb
add
fildl
daa
mov
adc
adcl
std
loope
outsb
push
fidivl
ljmp
sub
into
fsub
mov
mov
mov
loop
jge
fs
lret
push
or
xchg
lret
cmp
fcmovnbe
clc
imul
push
ficompl
sbb
fwait
mov
mov
subl
cmp
push
lock
cmp
push
sbb
sbb
inc
xor
stos
addl
dec
mov
mov
cmp
sub
pop
adc
mov
cli
sub
mov
or
out
pop
cwtl
into
out
andb
test
aas
sbb
push
lret
push
jp
dec
fdivs
pop
les
arpl
ror
xlat
push
jmp
fwait
mov
push
mov
daa
sbb
pop
nop
sub
in
mov
add
sbb
or
aaa
scas
push
and
dec
xchg
fsts
xor
callw
in
iret
gs
movsb
jmp
sbb
jae
mov
fdivr
jmp
loope
cwtl
sub
dec
fidivs
fsubl
jp
call
mov
out
and
mov
sar
sub
jl
cmpsl
mov
inc
aaa
loope
adc
int
fidivrl
add
jecxz
jno
js
pop
aas
inc
ret
outsl
pop
dec
adc
outsb
pusha
or
lcall
inc
fldenv
jb
repnz
rclb
or
movsl
out
in
inc
mov
jne
movsl
xor
xchg
mov
cmp
jb
or
into
and
push
sahf
and
or
push
movl
cltd
adc
cld
sbb
mov
mov
xor
aam
pop
stc
cmp
pushf
pop
inc
mov
adc
and
and
xchg
jecxz
ja
jp
xchg
pop
aam
mov
jbe
fcmovb
repnz
into
adc
cmp
insb
pushf
push
ja
orl
or
bound
jecxz
int
xor
pushf
add
push
add
jecxz
testl
outsb
test
loope
cmp
push
les
jmp
xor
xchg
stos
push
mov
push
cmp
aaa
in
dec
sbb
fistl
xchg
pop
pop
rorb
repnz
sahf
add
xor
push
and
xchg
mov
pop
pop
dec
lods
rorb
je
mov
test
rcrl
ficomps
enter
sar
adc
fdivs
xchg
jo
sbb
or
sub
je
sub
mov
cmp
adc
push
daa
xor
clc
mov
push
sub
add
outsb
mov
out
cld
lods
adc
je
addr16
in
jl
jns
mov
xchg
and
orb
mov
fildl
js
xor
fwait
cli
mov
data16
in
xchg
gs
add
or
jle
xor
mov
pop
xor
push
jbe
mov
jbe
pop
aas
pop
adc
xchg
sub
shll
in
aas
daa
clc
dec
mov
mov
fwait
push
das
fildl
iret
xor
stos
insl
cmp
lcall
aaa
cmp
and
sbb
inc
xchg
aam
aas
jle
jbe
mov
mov
mov
fs
out
ffreep
insl
dec
enter
js
mov
cltd
imul
push
dec
mov
xchg
cmpsl
repnz
push
scas
ret
cmp
sti
fwait
lea
mov
jbe
push
enter
mov
in
rcrl
xor
test
mov
push
out
repz
push
ds
lcall
int3
sahf
fwait
adc
push
outsb
pop
ss
loop
sub
mov
aam
movsl
ffreep
push
lcall
mov
roll
out
mov
in
shlb
repz
jmp
ljmp
mov
jb
shrb
dec
add
movsb
scas
repz
jge
into
sbb
inc
dec
loop
lds
call
cmc
movsl
adc
lret
xor
sub
sub
pop
loope
jmp
and
test
jmp
pop
push
cli
lods
jb
xor
test
xor
xlat
mov
imul
xor
xchg
push
jne
jle
xlat
jne
movsl
lea
jmp
loop
cmp
popf
jno
cmp
xorb
lcall
cli
pop
sbb
lcall
or
cmp
lret
test
mov
xor
pop
pop
out
mov
pushl
in
pop
movsb
cmpsb
aas
inc
push
rol
fwait
pop
in
mov
cmpsl
mov
int3
xchg
adc
jnp
stos
das
jno
outsb
push
cmp
sub
das
scas
adc
pop
ds
mov
sub
jp
dec
xor
xchg
cmpb
cli
fbld
mov
shl
mov
push
pushf
ret
pop
repnz
je
sub
xor
cmpsl
xchg
insb
mov
xchg
aam
inc
pop
fsub
fnstcw
lcall
jo
addr16
in
popa
xlat
subb
mov
push
dec
mov
adc
pop
and
xchg
jb
daa
cli
sbb
lret
add
loop
sbb
lds
mov
sub
mov
arpl
out
inc
pop
pushf
xchg
notb
cli
rcr
outsb
and
jnp
subl
std
data16
or
jecxz
pop
add
jp
scas
inc
outsl
pop
daa
ret
fs
and
mov
xor
nop
mov
adc
and
ret
repz
cmp
ds
out
je
xor
xchg
push
push
add
and
lcall
sbb
mov
add
xchg
out
mov
add
push
sbb
adc
xchg
adc
dec
sbb
dec
loope
insl
push
fcmovb
lea
out
repz
dec
sbb
std
cld
add
lahf
repnz
fmull
in
xor
push
add
cli
jg
inc
dec
in
rorb
iret
cmp
push
push
xor
aad
mov
iret
out
psrld
lcall
iret
and
lcall
xchg
jns
pop
mov
push
gs
out
fs
sbb
mov
push
mov
imul
adcl
add
daa
shr
jmp
pop
mov
je
mov
adc
jge
push
divb
mul
xchg
jns
mov
rolb
pop
movsb
mov
jnp
icebp
lods
pop
scas
push
mov
lds
clc
xor
int
dec
add
lods
xchg
leave
daa
ret
inc
loop
jae
pusha
xlat
cltd
sub
inc
mov
push
or
js
or
xchg
loopne
cmp
mov
xor
lret
adc
int
movd
push
add
inc
rcr
jnp
outsb
cld
movntps
lds
leave
push
add
cltd
xlat
inc
cs
push
xchg
lret
test
adc
popa
mov
pop
test
xchg
sub
mov
cmp
push
std
jp
sbb
bound
sub
inc
sub
rol
xor
jecxz
dec
cmp
out
rol
add
add
push
std
pop
cmc
movsl
push
lods
je
mov
lret
xor
push
mov
cmp
dec
pop
inc
push
pop
mov
xor
popf
sbb
xchg
xchg
pop
ret
std
mov
insl
jne
gs
adc
jp
mov
lcall
xchg
fiaddl
or
inc
sub
gs
adc
jp
mov
lcall
xchg
fiaddl
or
inc
dec
jne
ficoml
mov
lds
mov
test
mov
mov
jo
sbb
adc
cli
in
aad
outsl
add
mov
cli
adc
cmc
in
aad
ffree
lret
mov
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
push
add
in
aad
lds
xchg
test
and
jo
dec
push
insb
add
aad
lods
xchg
mov
dec
push
cmpl
repnz
scas
std
sbb
sbb
mov
cmp
xchg
insl
call
enter
leave
inc
inc
push
push
or
mov
pop
aad
imul
xchg
sarb
ljmp
push
sbb
pop
movsl
int3
sbb
or
and
mov
push
cmp
dec
mov
mov
orb
je
insl
xor
stos
into
test
movsl
fldl2e
ljmp
out
mov
cmp
shrb
xor
xchg
xor
and
inc
das
inc
shll
jbe
rolb
pop
add
cmc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
xchg
xchg
mov
lret
fildl
aad
adc
adc
cmp
fs
jo
jne
xor
out
aad
mov
std
out
rcl
rolb
xor
sub
push
inc
dec
jl
outsl
push
xchg
mov
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
test
jns
sbb
jmp
inc
xchg
mov
push
sub
sub
out
jo
sub
add
sbb
call
dec
xor
mov
mov
push
daa
mov
and
shrb
cmp
mov
mov
je
in
bound
jbe
gs
addr16
xchg
sbb
sub
pop
pop
clc
in
adc
dec
mov
popa
sahf
iret
mov
sub
insl
mov
and
mov
repz
xchg
xchg
add
mov
outsl
sbb
lahf
dec
sbb
xor
loopne
xchg
mov
jmp
inc
cmp
shll
sub
push
lret
xacquire
cmpsl
push
test
xchg
popa
xchg
js,pn
and
xor
aad
lcall
in
pop
daa
pop
sub
cmp
push
lret
xor
mov
adc
gs
sbb
jo
sbb
das
or
fldcw
sbb
adc
movsl
inc
mov
adc
mov
pushf
cpuid
nop
stc
and
or
mov
inc
rcrb
or
je
push
cwtl
dec
add
cltd
loop
jae
movsb
and
cmpl
push
xchg
and
imul
cmp
cltd
insl
test
fisubl
hlt
pop
fnsave
hlt
sbb
cwtl
and
imul
mov
aam
aam
xor
sbb
aad
xor
popf
lret
and
nop
daa
inc
orl
mov
adc
inc
pop
sub
adc
cmp
subb
push
lret
or
std
shl
jl
pop
outsl
sub
fnstsw
or
out
ret
mov
cmpb
iret
push
rcr
outsl
pop
cmpsl
in
pop
testb
mov
ret
jae
push
jne
js
fldenv
push
in
or
clc
cmp
aam
stos
or
push
push
lcall
mov
sti
jo
gs
jae
iret
sub
sahf
in
jnp
jns
cmp
xor
add
xor
pusha
fs
xor
sbb
adc
push
iret
sub
and
add
pusha
push
pop
arpl
dec
ret
add
dec
imul
or
aad
xor
dec
sahf
pop
les
xor
pop
or
sahf
mov
test
mov
test
dec
mov
mov
jns
add
mov
into
shrl
sbb
nop
cld
shll
nop
cmp
rcl
aaa
dec
and
mov
push
movsl
inc
clc
cwtl
pop
mov
xlat
and
pop
xchg
and
mov
das
shlb
and
jge
dec
add
mov
inc
and
add
mov
push
test
push
push
popa
pop
dec
push
aad
sti
inc
test
sub
adc
mov
pop
lods
and
mul
shl
add
inc
ljmp
push
inc
clc
aad
stos
insl
mov
sti
sahf
shlb
in
mov
or
or
add
mov
push
mov
mov
hlt
popf
mov
push
data16
add
jb
lock
imul
adc
jge
jl
xlat
ret
adc
mov
daa
jle
push
std
inc
data16
push
ja
jae
ret
add
jecxz
inc
leave
push
pop
jno
imul
arpl
shl
mov
mov
ret
sub
or
mov
cmpsb
test
fnstcw
cmp
sbb
jmp
mov
bound
mov
inc
pop
lods
add
pusha
lods
dec
in
lahf
adc
js
inc
data16
outsl
arpl
dec
pop
popf
jb
mov
out
lcall
inc
daa
jnp
xchg
pusha
mov
push
and
inc
out
xchg
and
mov
mov
sub
add
inc
shl
jbe
icebp
cmpsb
mov
xlat
push
push
mov
or
lea
mov
or
mov
lock
xchg
xchg
test
pop
mov
cmp
dec
fimull
ret
fisttpl
enter
out
mov
push
adc
leave
fnstcw
mov
xor
cltd
mov
mov
fdivr
icebp
adc
test
or
out
push
fidivrs
sub
sbb
mov
movsl
int
ljmp
popa
xchg
push
inc
faddp
jle
dec
pop
jmp
int
pop
rcl
cltd
scas
mov
mov
setne
and
add
push
lods
inc
iret
or
loope
jle
inc
ds
xchg
sub
out
inc
or
cmpsb
push
jle
sub
addb
test
pop
and
adc
addl
aad
xchg
xchg
test
daa
cmp
in
sbb
xchg
dec
iret
jg
cmpsl
pop
insl
and
lahf
sahf
aas
dec
jns
mov
fimull
xor
pop
mov
cmpsl
or
xlat
ret
in
orl
push
leave
fsub
jge
aad
or
dec
gs
call
jge
or
inc
pop
scas
imul
xchg
cwtl
lock
mov
fldt
push
cld
pusha
in
xchg
adc
and
std
inc
xchg
inc
cmp
addr16
les
lods
lahf
imul
pop
shll
std
scas
mov
in
sbb
mov
xchg
sbb
xorb
or
cmp
mov
fisubl
push
push
scas
sub
mov
idivl
or
roll
inc
adcl
jle
and
bnd
jl
cmpsb
lods
fs
inc
push
adc
leave
jno
test
in
notl
or
push
lods
jae
adc
out
dec
xor
inc
sbb
mov
sub
jnp
ret
xchg
outsl
dec
inc
out
movsb
and
adc
mov
pop
scas
jle
xchg
dec
push
and
pop
test
mov
cmp
push
lods
andb
mov
rcrb
lods
xchg
push
or
or
xor
in
imul
push
jecxz
push
movsl
mov
xchg
call
dec
push
jb
sbb
scas
jecxz
arpl
pushf
movsb
fdiv
loop
fdivl
and
shlb
pop
sahf
sarb
lods
outsl
rcll
adc
push
dec
hlt
fists
popf
notl
in
das
jecxz
clc
mov
cmp
lea
shll
into
ljmp
daa
int3
xor
ret
jbe
nop
inc
xor
adc
dec
and
pop
into
push
lods
jge
cmp
xchg
mov
mov
data16
jmp
fldl
arpl
mov
push
insb
pop
rcll
jns
in
fnstsw
mov
or
jge
ja
arpl
or
sahf
mov
not
push
mov
pusha
mov
dec
imul
inc
push
scas
into
dec
data16
xchg
mov
fwait
dec
rolb
in
rolb
pop
xor
push
push
mov
push
jp
fdivr
shl
sbb
jmp
jmp
jo
lock
sbb
dec
or
push
xchg
addl
mov
aam
movsb
or
push
inc
mov
pusha
scas
icebp
adc
sti
aaa
js
push
ret
cmp
pop
or
data16
pushf
sub
jbe
adc
cmc
and
mov
cmpsl
pop
test
xlat
cmpsb
adc
vmovntpd
out
add
cltd
rcll
xor
in
mov
xchg
shlb
push
pop
mov
push
add
inc
sub
sbb
lret
jmp
jne
cs
dec
enter
gs
inc
or
dec
leave
push
sahf
or
ret
xchg
imul
push
mov
adc
pop
cmpsb
rcrl
es
ret
ljmp
inc
and
adc
sub
rol
fsubrl
jb
push
ds
int
cld
inc
dec
xor
popl
inc
leave
outsb
mov
outsl
adc
hlt
leave
into
addb
fsubr
sub
pusha
mov
enter
lds
outsl
pop
push
push
xchg
push
mulps
pop
pop
push
pop
lods
xor
pop
pusha
jge
rcrl
fistps
sarl
loopne
xchg
mov
adc
stos
cmc
test
or
cmc
out
daa
hlt
cmp
jns
adc
dec
lods
cmp
add
enter
out
sbb
loopne
fisubrs
lret
out
aaa
pop
js
and
pop
dec
repnz
and
jo
js
fucomip
mov
fs
xchg
fisubl
or
testb
lds
mov
jb
xchg
stos
lret
lret
jecxz
sub
pusha
xor
decb
sarb
push
rcrb
adc
or
in
je
xorl
adc
lods
mov
pop
mov
jbe
arpl
xor
mov
out
add
leave
mov
sbb
add
arpl
add
mov
testb
ljmp
xchg
mov
ret
mov
xor
cltd
mov
mov
int
pop
in
and
adc
sbb
int
mov
pushl
aaa
movaps
push
movsl
lods
pop
pop
adcl
inc
xor
mov
cli
enter
sub
fidivrs
fisubl
imul
push
loope
xchg
repnz
outsl
sbb
fldcw
cli
loope
adc
inc
pop
sti
cmp
push
mov
push
mov
adc
push
fbld
push
sbb
call
inc
iret
xchg
inc
test
stos
or
jmp
ret
call
cmpsb
negl
stc
std
rcrb
or
inc
push
cmpsl
push
push
cmpsl
xor
push
mov
inc
es
and
adc
mov
cli
xor
pop
pop
test
lahf
shr
ss
fldlg2
lea
das
mov
xor
bound
pop
xchg
push
fs
stos
ret
fistl
iret
adc
fs
or
xor
sbbl
jmp
insl
lds
mov
mov
lods
dec
inc
mov
jl
push
les
cmp
aaa
aad
dec
mov
pusha
mov
mov
ss
xorl
inc
and
cmpsb
hlt
jecxz
pop
xchg
mov
jge
push
jo
mov
and
push
mov
dec
sti
mov
adc
sarl
jle
test
push
inc
scas
jmp
jb
js
ret
jns
inc
iret
mov
mov
dec
mov
mov
and
mov
mov
sahf
or
dec
xor
je
cld
popa
sub
push
clc
shlb
sub
mov
mov
insb
dec
push
dec
xor
mov
add
test
mov
xchg
pop
pop
pop
jl
insl
int3
nop
loop
sub
sbb
dec
in
dec
ljmp
sub
adc
sbb
push
cmp
add
lcall
mov
clc
lahf
imul
sub
out
jns
adc
push
fs
leave
jnp
cmp
repz
inc
sub
testb
or
fstps
sbb
stos
add
and
mov
mov
push
and
sbb
mov
xor
popf
cmp
je
mov
int3
test
add
shlb
or
sub
addr16
xchg
pop
data16
in
daa
pop
mov
je
leave
shr
jp
mov
push
jno
and
pop
inc
pop
cmp
mov
mul
pop
sub
adc
test
cmp
shlb
mov
mov
cmp
ror
mov
mov
daa
rolb
shll
imul
sbb
sbb
arpl
adc
movsl
cmp
outsb
aam
push
push
sbb
sbb
push
mov
fdivr
cs
scas
inc
jge
lret
dec
mov
ret
jo
cwtl
xor
daa
jns
in
enter
mov
mov
data16
push
pushf
cmpsl
dec
mov
icebp
mov
inc
sbb
xchg
cld
pusha
pop
mov
fucomp
fstl
xchg
mov
in
adc
jl
ret
sub
adc
pop
adc
ficomps
push
jnp
jp
test
and
xor
pop
sub
mov
cmp
je
jmp
mov
xor
ret
test
and
cmp
lds
loopne
mov
mov
pop
ret
xchg
adc
aaa
cmp
leave
fidivrs
pop
cmp
test
stc
mov
gs
sbb
xchg
lods
mov
and
push
xor
aad
mov
pop
test
jecxz
dec
inc
fdiv
push
or
push
ret
mov
sub
rcrb
mov
mov
xchg
sub
push
xchg
incl
mov
lds
push
das
pop
les
imul
out
dec
cvtps2pd
out
int
cmp
mov
xor
adc
mov
jae
mov
imul
dec
call
and
xor
test
aam
jmp
in
jge
inc
fimull
and
subb
sub
mov
scas
jle
shr
inc
mov
mov
pop
sarl
shl
subb
xor
rcl
cli
mov
mov
cmp
push
inc
addr16
add
xchg
or
mov
aad
stos
pop
in
mov
ret
cmp
push
std
pop
push
mov
jmp
outsb
es
cli
mov
xchg
and
xchg
arpl
jecxz
clc
jg
in
loopne
push
ss
dec
test
dec
cmp
stc
sub
loop
push
sti
pop
pop
imul
mov
bound
adc
pop
adc
sub
test
aaa
lret
add
cmpsb
mov
cwtl
das
inc
adcl
mov
mov
add
mov
std
lret
je
push
clc
cs
out
add
testl
add
lea
cmp
in
mov
cmpsl
gs
jle
popa
into
rcrb
mov
pop
in
adc
sub
jno
sbb
shl
push
xchg
aad
xchg
movsb
xor
aam
mov
or
jecxz
inc
xor
mov
pop
jb
pushf
mov
test
pushf
jmp
push
xchg
ljmp
mov
push
jecxz
out
movsl
inc
cmpsb
push
es
xor
into
adc
pushf
out
sub
mov
mov
divl
leave
stos
cwtl
add
cmp
sbb
aas
and
xchg
imul
cld
test
xor
and
mov
push
xchg
and
rcrb
xchg
fldpi
push
aaa
pop
hlt
inc
int
movsl
dec
push
jnp
cmpsl
and
popf
mov
mov
mov
icebp
fs
addl
xor
jnp
test
cmp
sub
lea
mov
mov
xchg
scas
ljmp
adc
pop
cmp
jmp
pop
and
mov
mov
icebp
leave
dec
sub
push
lock
mov
in
mov
imul
rol
imul
subl
idivl
fidivl
jmp
addl
popa
xchg
cmovs
fucom
out
fistl
lret
lods
aaa
adc
call
scas
aas
lods
mov
push
push
xor
stos
insl
cltd
test
in
into
cmpsb
jb
jb
adc
xor
push
clc
cmp
fs
adcb
outsl
dec
mov
pushl
push
push
cmp
jle
call
mov
aad
sbb
inc
popf
xor
jnp
and
dec
js
push
outsb
pop
fistps
mov
cwtl
pusha
push
mov
add
mov
mov
and
mov
es
add
iret
mov
and
push
mov
inc
cmp
xor
lods
mov
dec
scas
mov
addb
lea
mov
jp
pop
or
mov
leave
and
xor
dec
inc
movsl
mov
or
movsb
daa
mov
cwtl
cmp
mov
shrb
dec
cmp
adc
push
adc
adc
and
jno
in
rorb
push
pushf
leave
sbb
mov
mov
js
test
mov
movsl
int3
bound
push
loopne
scas
pop
xchg
add
fs
xchg
jp
xor
mov
or
push
xchg
push
xchg
mov
jnp
and
jecxz
imul
mov
jle
mov
lock
or
loop
test
ret
mov
icebp
push
or
xor
in
cli
xlat
xchg
cmp
mov
mov
addr16
add
divb
mov
mov
mov
repz
mov
mov
dec
js
dec
cld
icebp
ficoml
lret
je
add
pop
sahf
pushf
xor
sub
ds
repnz
cmpb
imul
loope
daa
pop
insl
or
mov
arpl
push
push
mov
inc
add
mov
jns
mov
repnz
dec
and
xchg
in
sub
inc
mov
push
sbb
push
push
in
mov
fstpl
jne
pushf
out
std
int3
mov
jb
ja
jns
sbb
jl
jno
dec
and
push
and
pop
ret
fscale
inc
in
jne
dec
sub
fdivr
pusha
ror
test
xor
inc
pop
fs
int
xor
cmp
mov
mov
pop
dec
test
pop
sbb
test
test
xor
out
fcmovnb
add
sbb
loop
lock
xlat
pop
dec
sbb
fmull
or
and
movsl
fiaddl
xor
jg
xchg
pop
out
call
dec
sub
jp
add
and
subb
mov
inc
pushf
and
push
mov
push
jl
jnp
pop
dec
sub
and
std
jb
push
sti
lds
inc
ret
and
mov
adc
out
cmpl
jne
and
ret
xchg
in
outsl
lret
mov
repnz
xchg
leave
xchg
pop
dec
pop
data16
arpl
dec
loopne
dec
or
pop
and
pop
sub
fiadds
dec
lea
jmp
xchg
jmp
jp
rcrb
mov
cmpsl
ljmp
outsb
jecxz
sub
fwait
dec
push
pop
pop
push
sbb
imul
imul
in
dec
inc
mov
jo
cli
mov
push
pusha
pop
gs
adcl
add
in
pop
lahf
iret
and
sub
std
inc
out
stos
int3
daa
push
push
rcll
lahf
repz
inc
shrl
test
cmp
and
jmp
sarb
stc
lea
inc
or
lods
das
jl
mov
sub
test
imul
sahf
data16
lret
xchg
jbe
int3
pop
cli
arpl
inc
ret
mull
cmc
adc
aas
pop
ds
int
lahf
add
shl
hlt
mov
scas
bound
ret
scas
push
sub
push
lods
adc
sub
sub
dec
sbb
pop
movsb
out
ss
mov
pop
jbe
test
or
cmp
int3
and
cmp
ja
mov
mov
push
jmp
scas
jge
jge
mov
xor
inc
cmp
sahf
jl
sub
inc
ljmp
aam
shrb
adc
and
stc
xchg
shr
das
clc
decl
int3
nop
pop
inc
mov
adc
mov
daa
sahf
cmc
push
cmp
mov
imul
test
pushfw
and
addl
lret
aas
in
push
loopne
xchg
lea
je
xor
dec
cmp
out
xchg
dec
scas
push
mov
mov
ret
sub
loop
add
leave
stos
mov
pop
xchg
inc
lods
jle
jge
in
jecxz
fisttpll
push
cmp
cmpsb
dec
xor
gs
mov
out
push
lea
cmp
push
cmp
push
fs
pop
cld
test
out
sub
mov
pop
cld
lcall
imul
pop
mov
dec
scas
and
loopne
pushf
xchg
xchg
fstpl
fistpl
pop
jb
loopne
clc
dec
rcrl
out
cltd
pop
js
sub
cmp
insb
xchg
mov
jnp
movb
push
jge
xor
xor
shlb
and
fs
mov
cmp
inc
into
push
and
xor
pop
dec
lods
xlat
xchg
dec
mov
xchg
je
inc
mov
repz
inc
inc
jo
inc
xchg
int
lcall
repz
outsl
int
sbb
adcl
mov
xor
xor
push
inc
add
cmp
sbb
push
dec
jl
enter
cld
inc
dec
orb
jmp
jmp
fdivl
sbb
ljmp
sub
imul
jl
push
push
xchg
outsb
cmp
xor
mov
adc
addr16
shlb
lock
and
das
lret
aas
dec
frstor
mov
sbb
and
or
cmp
inc
inc
xchg
mov
xor
imul
and
fisttpl
xlat
popa
lret
iret
sub
out
and
dec
int3
sub
call
in
mov
nop
mov
pop
mov
iret
movsl
lret
into
je
div
pop
enter
js
rolb
fadds
cwtl
mov
mov
addb
pop
aad
repz
jg
dec
add
mov
jecxz
inc
shrl
mov
push
outsb
mov
stc
lods
mov
mov
dec
mov
inc
dec
lock
inc
in
aad
lds
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
movsl
xchg
xchg
test
push
push
inc
inc
xor
adc
in
aad
mov
and
je
gs
push
inc
inc
xor
adc
in
aad
mov
movsl
adc
jne
iret
call
xor
lods
ljmp
sub
cmp
std
enter
out
je
mov
test
sbb
dec
stc
cmp
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
jns
cltd
pop
cltd
dec
test
sbb
or
cmp
sub
faddl
int3
xor
and
push
pushf
inc
mov
jns
nop
bound
insb
leave
dec
mov
mov
scas
sub
fdivl
sub
pop
dec
test
mov
sbb
jl
cmp
sbb
aam
mov
in
aam
mov
test
arpl
in
mov
movsb
or
mov
push
jl
insl
cltd
fmul
xchg
cmp
shl
leave
in
fimull
jg
mov
fldl
loop
mov
mov
jns
lods
leave
sbb
aas
jmp
and
int
std
sbb
pushf
xchg
push
js
add
pop
pushf
addb
dec
fstps
stc
or
movsb
sub
adc
inc
mov
mov
pop
dec
test
dec
pop
xor
cmp
stc
xor
std
cltd
mov
pop
lcall
pop
aam
jmp
clc
jmp
faddl
int3
sub
cmp
pop
pushf
dec
mov
pusha
lods
nop
pop
orl
rorl
stc
push
mov
pop
dec
mov
aas
int
fnstcw
mov
cmc
and
leave
jno
jne
mov
js
inc
cld
dec
mov
imul
cld
and
jae
arpl
mov
inc
mov
add
pop
mov
jns
mov
test
sbb
or
cmp
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
jns
mov
test
sbb
or
cmp
sub
fdivl
fsts
pop
cmp
test
xor
lea
int
jl
test
sbb
jg
and
or
xchg
mov
adc
pop
adc
jae
ss
imul
pop
cmp
mov
cmp
lret
aad
movsl
stos
xorb
mov
xchg
jecxz
dec
lea
pop
xchg
rclb
das
xor
cmpsb
test
dec
imul
outsl
das
mov
mov
add
adcb
mov
pusha
insb
or
sub
jl
loope
xchg
push
pushw
mov
adc
push
and
aaa
into
nop
pop
add
push
icebp
jmp
call
cmp
test
das
enter
sbb
add
outsb
or
ljmp
cmp
mov
fcmovu
dec
and
pop
jno
cwtl
cwtl
or
fidivl
fmuls
arpl
sbb
scas
loopne
inc
push
stc
adc
push
jge
out
push
and
cmp
adc
clc
outsb
imul
jg
inc
sbb
mov
ret
enter
mov
aam
icebp
shlb
jmp
mov
roll
push
in
cmp
inc
arpl
shlb
jae
adc
push
xlat
jl
push
push
pop
cs
push
stos
cmc
cmp
and
or
movb
add
jl
xchg
cs
fldt
mov
pop
mov
fld
push
rol
mov
inc
aas
ss
clc
rcrl
lahf
and
aaa
mov
scas
jae
outsl
fnsave
data16
clc
fistpll
outsl
rclb
sub
iret
call
pop
mov
adc
lods
push
loopne
pushl
add
insb
mov
sbb
aad
aaa
lcall
xlat
rclb
push
cmp
fnstcw
sub
lret
pop
jge
mov
jb
int
and
ret
pop
stc
enter
fists
pushf
mov
mov
aad
lea
mov
push
xor
aam
jns
sti
ja
arpl
imul
addr16
setnp
pushf
adc
inc
ds
loop
out
ret
sbb
jl
sahf
in
or
cmp
lods
out
add
fldcw
adc
cmp
mov
mov
ljmp
test
cmp
and
lahf
push
test
pop
jecxz
iret
pop
inc
push
rcrl
arpl
int3
dec
push
fld1
insl
pop
mov
mov
or
sbb
jno
rcr
push
ss
cmp
sbb
inc
jle
jae
pop
mov
adc
aas
mov
add
cmp
mov
call
inc
stc
and
in
fisubrs
jecxz
jge
inc
xchg
sbb
mov
cmp
push
fiaddl
jmp
in
jno
cmp
jno
xlat
xor
xchg
sub
lcall
pushf
push
test
mov
dec
pop
push
imul
cmc
push
cmp
dec
fs
fs
repz
test
pop
or
enter
xor
mov
lahf
xchg
lret
mov
sahf
adc
adc
stos
mov
xchg
sub
fsubrs
xchg
movsb
lods
lret
pop
and
pop
shll
and
pop
test
call
xchg
into
pop
mov
lds
jmp
xchg
test
jb
dec
push
sub
ss
movsb
dec
insb
lcall
jbe
lret
loopne
mov
popa
and
mov
loopne
insl
mov
dec
xor
and
xchg
sbb
rorl
jmp
cmp
dec
jno
cmp
test
dec
frstor
jp
inc
add
push
xchg
ror
fisubs
clc
or
repz
push
test
jp
push
shll
jmp
sbb
jmp
out
imul
push
loopne
cltd
rorb
xor
pop
push
dec
sbb
iret
cld
xchg
pop
out
jbe
jg
jb
outsb
aas
icebp
dec
sub
dec
pop
and
pop
add
push
les
data16
adc
fsub
test
xchg
sarl
ljmp
jmp
inc
sti
test
mov
xchg
xchg
pop
xor
in
adc
daa
dec
add
fcom
and
pop
mov
cmp
xlat
inc
popf
jl
test
cwtl
jbe
dec
push
inc
push
ror
fidivs
pop
stos
adc
outsw
nop
or
adc
or
adc
aaa
mov
jle
test
into
hlt
adcl
nop
loopne
sub
mov
push
enter
popf
pusha
loop
xchg
inc
adcl
cmp
xchg
xor
inc
and
jge
clc
pop
sti
add
push
ds
pusha
add
scas
paddq
mov
addl
scas
or
mov
loopne
lds
incb
sbb
pop
fs
clc
or
inc
jp
arpl
in
push
xchg
pusha
ss
xor
xchg
jecxz
imul
jg
loope
shrl
jp
fnstcw
xor
xor
xor
fidivs
std
ret
dec
add
mov
stos
lahf
cmc
loope
ss
fisttpll
add
insb
fimuls
xor
mov
pushf
xchg
xchg
add
out
ret
mov
rcll
lcall
cwtl
xlat
pusha
pop
into
notl
cmpl
cmp
inc
popa
dec
hlt
jle
push
pop
xor
pop
insb
add
jae
jbe
ret
or
leave
or
pop
je
cmp
fadds
mov
rorb
push
hlt
xchg
jmp
add
cmp
pop
addr16
roll
sbb
mov
jns
inc
in
imul
imul
pop
mov
mov
clc
xchg
adc
mov
loop
outsb
and
add
xchg
pop
xlat
js
and
and
mov
jle
sbb
aas
push
jle
dec
cwtl
in
mov
inc
pop
jl
cmp
ret
xor
loopne
sbb
fildll
adc
mov
sbb
xchg
cmp
aaa
out
js
pop
rcrl
js
jae
mov
pop
pop
xchg
ja
test
inc
adc
and
call
jno
mov
lods
push
test
cltd
addb
loope
dec
pop
push
les
ds
add
fidivrs
fimull
bound
xchg
lret
int3
out
mov
jle
test
cmc
lahf
sti
mov
add
cmpsl
fiaddl
push
in
add
arpl
pop
daa
repnz
leave
cmpsb
dec
aam
popf
in
add
pusha
dec
dec
leave
stc
pop
test
dec
movsb
mov
in
lock
sbb
out
test
pusha
mov
jnp
imulb
cwtl
adc
fbstp
fmulp
xor
push
lahf
xorb
mov
stos
push
in
inc
add
aaa
xchg
sub
pop
cld
or
jbe
std
pop
std
adc
data16
or
adcl
pop
sub
imull
mov
cmpsb
enter
out
inc
cmp
jmp
mov
inc
mov
dec
arpl
sti
sub
xchg
xchg
mov
insb
mov
push
xor
out
cmp
mov
gs
mov
pop
add
out
ljmp
and
mov
adc
sbb
rol
test
ds
or
sub
call
jbe
icebp
add
cld
mov
xchg
cs
inc
ror
sub
adc
shrb
addb
mov
addr16
push
xchg
stos
test
nop
mov
mov
sub
mov
es
pop
and
cli
push
inc
lods
int3
fs
filds
pop
mov
jae
stos
fsubp
cmpsb
pop
das
xor
scas
sub
pop
xchg
std
div
cltd
xchg
dec
mov
test
jge
cld
xor
lret
dec
cmp
dec
cli
xlat
inc
and
xor
sarl
cwtl
movsl
lahf
pop
xor
push
dec
shrb
pop
or
ss
jne
aam
xchg
jge
jg
lea
adc
sub
mov
mov
pop
call
dec
cmpsl
xor
insb
fdivs
lret
jb
leave
test
mov
jne
mov
mov
adc
shlb
scas
or
push
cmp
es
int
rcll
pop
sahf
int
fwait
sbb
popa
outsl
dec
adc
jae
out
lcall
mov
mov
outsb
add
pop
movsl
popf
in
xchg
cmp
sbb
sub
push
pop
and
jecxz
xchg
lret
sub
jbe
cs
pop
daa
dec
ficoms
adc
fwait
mov
inc
insl
push
fcmovne
test
ljmp
push
push
insl
add
mov
inc
jle
and
sbb
xchg
jbe
mov
pop
ljmp
pop
xchg
push
lret
cld
mov
push
or
inc
mov
push
stc
pop
jl
cmpsl
or
sti
add
cld
pop
pushf
decl
loopne
xchg
adc
mov
jmp
das
jo
and
sar
scas
in
int3
add
jbe
into
lret
rcrb
shll
aas
inc
xlat
mov
cs
adc
not
sub
or
adc
insl
movsl
push
inc
jl
xchg
out
movsl
popf
sbb
add
sti
inc
dec
inc
es
cmp
test
add
fsts
movsb
mov
add
pushf
lret
jbe
repz
jg
cmp
jno
das
scas
mov
push
inc
jmp
dec
lods
jle
icebp
mov
loop
jae
sti
loopne
stc
jae
add
cmpsl
xlat
lods
cmp
lods
aam
jb
out
add
adc
pop
cmp
jns
lock
sub
fwait
pop
jp
push
nop
adcl
push
mov
sub
scas
pop
iret
jne
sub
push
std
adc
mov
sbb
loope
sbb
adc
inc
repnz
xchg
sahf
push
int3
loopne
mov
adcl
jo
dec
pop
aad
int
pop
mov
add
std
shlb
and
adc
jne
inc
inc
inc
pop
cmp
xchg
jne
aad
repz
popf
mov
inc
mov
out
outsl
repnz
mov
sub
aad
mov
fstpt
dec
adc
imul
sub
rcrl
push
fst
pushf
arpl
push
leave
sub
clc
cli
and
dec
clc
ret
sub
pushf
cmp
rolb
cli
mov
loop
lahf
cltd
std
lods
lcall
adc
popa
jno
dec
std
scas
scas
fidivrs
dec
xor
mov
lds
inc
mov
jecxz
test
cmpsb
jle
or
mov
stos
out
repz
jb
inc
repnz
cmp
jbe
fmul
and
push
leave
ljmp
xor
mov
and
cmc
daa
add
pop
push
addr16
movsb
push
dec
xchg
pop
int3
into
jecxz
push
adc
pushf
movsb
mov
add
dec
dec
mov
and
mov
test
in
ljmp
sti
mov
fwait
in
test
jnp
xlat
cltd
ret
add
push
scas
adc
jp
out
xchg
push
and
dec
add
xchg
imul
add
stos
pop
dec
orps
shrl
dec
cmp
lea
popa
push
xorb
jae
xchg
shrl
test
or
mov
mov
sub
mov
pop
out
pop
fisubs
cmp
nop
push
pop
jg
cmp
or
movsb
negb
or
push
test
in
add
mov
fldenv
pop
add
xchg
enter
xchg
loop
call
adc
lret
sti
enter
mov
cmp
cmp
test
push
push
cmp
and
push
movsl
xlat
insl
cli
imull
in
push
xchg
arpl
ror
add
call
xchg
mov
subl
and
push
sti
cmp
imul
sub
in
jns
sub
ret
and
add
shlb
stos
xchg
dec
xor
clc
js
adc
jae
pop
in
adc
int
xor
negl
cmp
hlt
add
test
pop
push
dec
sar
cs
ss
pop
movsl
clc
mov
adc
inc
mov
push
lods
and
xorb
rolb
mov
jno
cli
fldenv
or
pop
mov
mov
faddp
imul
cmpsb
adcl
jge
fwait
jle
jl
sbb
sbb
das
sub
xor
cltd
jb
jge
mov
adcl
xor
std
js
cmp
xchg
pop
in
iret
xchg
dec
int3
push
push
or
test
jnp
pop
sub
jl
push
outsb
mov
shrl
ret
adcb
popf
jne
test
push
ljmp
mov
mov
adc
movsl
unpcklps
xor
sbb
fimuls
frstor
outsb
add
xchg
push
and
adc
arpl
test
ret
movsl
scas
fnstsw
pushf
xorl
sub
mov
out
and
rorb
dec
and
shl
ret
or
push
leave
test
fwait
addl
xchg
pop
insl
inc
jle
clc
pop
imul
out
in
lret
pop
movsl
lahf
lods
pushf
and
and
inc
inc
in
mov
scas
lds
loope
jae
mov
inc
in
movsb
push
mov
adc
mov
es
cli
push
and
jge
inc
push
cli
insb
mov
loopne
inc
imul
pop
dec
movsl
mov
dec
mov
pop
std
pop
pop
and
xchg
dec
aad
xchg
scas
push
jecxz
into
mov
mov
push
sub
mov
sub
scas
sbb
pop
push
push
sbb
xchg
gs
sbb
inc
lahf
or
mov
mov
jge
cltd
fisttpll
popf
and
inc
mov
lods
mov
icebp
and
jne
xchg
cltd
adc
sbb
movsb
and
xchg
lods
movsl
jae
in
in
xchg
push
repnz
cmp
addb
pop
sub
xchg
lods
mov
ljmp
xor
xchg
sub
push
and
cmp
daa
leave
push
xor
arpl
mov
imul
and
test
xchg
dec
repnz
adc
inc
int3
and
dec
out
inc
dec
enter
icebp
push
divl
inc
jecxz
leave
pushf
cmp
pop
movsl
pop
in
roll
mov
shl
mov
cmp
add
dec
int
sub
loopne
sbb
sbb
cli
mov
lods
cld
xor
shll
out
insl
lcall
cmpsb
outsl
nop
cwtl
scas
data16
lcall
and
cwtl
push
jo
dec
ss
scas
cmc
cmp
stc
cwtl
cld
dec
mov
stc
lods
jb
pop
jg
or
shlb
cmp
pushf
sbb
push
or
outsb
and
gs
push
xor
mov
dec
rclb
mov
xor
mov
push
push
mov
ljmp
jne
jmp
mov
movd
mov
push
int3
movsb
sahf
mov
out
shll
lock
inc
mov
xchg
in
xchg
mov
loopne
ja
scas
inc
inc
in
je
mov
cwtl
dec
stos
or
jp
cmp
jl
jl
pop
mov
xchg
jmp
cmpl
mov
les
das
pop
mov
xchg
mov
jle
roll
testl
imul
sbb
pusha
les
sti
movsl
outsl
into
sbb
cwtl
je
es
ret
dec
inc
cmpsb
into
adc
lahf
loopne
mov
lock
xchg
jo
std
jnp
mov
lods
pushf
xchg
push
push
scas
jb
aas
movsl
jp
inc
fcom
sub
ss
sbb
xlat
std
das
data16
xchg
mov
daa
das
ret
xor
icebp
fldt
fstpt
dec
or
push
popf
mov
push
push
jmp
pop
imul
ret
cltd
lret
sbb
jb
jmp
xchg
add
mov
xor
xor
addb
jp
scas
loope
jo
mov
popa
dec
jnp
repz
push
push
call
mov
push
fimuls
push
js
pop
adc
jp
addr16
arpl
xchg
adc
mov
imul
or
mov
cmp
and
insb
mov
js
xor
gs
jl
sub
popf
stos
mov
mov
cmpb
xchg
call
cld
pop
pusha
sbbb
and
fnstcw
sub
push
sbb
imul
fadd
fldenv
or
scas
mov
popf
lods
mov
pushf
xchg
imul
lods
mov
jmp
add
or
add
and
sbb
loope
shll
nop
pop
arpl
sbb
jl
add
push
dec
test
push
pop
cmp
push
jns
xchg
inc
frstor
sbbl
and
push
sbb
mov
or
jbe
sbb
jg
fisttpl
fsts
lcall
jg
pop
jecxz
sbb
aam
jge
or
nop
sub
lret
daa
in
fdivr
xorl
fdivs
xchg
push
rolb
dec
movsw
cmpsb
loopne
daa
pop
repz
shlb
sbb
outsl
cmp
sub
mov
lret
mov
xchg
bound
lret
jg
cmp
xchg
repz
sahf
lret
mov
aam
inc
xor
or
pop
dec
pusha
lcall
push
mov
pop
adc
sti
cmp
inc
arpl
dec
mov
xchg
jmp
xchg
sub
add
test
mov
loop
pop
std
daa
sahf
pop
push
and
mov
lods
repz
xor
jae
jge
or
gs
jmp
mov
scas
imul
xchg
neg
gs
inc
fistl
push
cmp
and
int3
mov
mov
jb
adc
inc
sbb
cli
xchg
loope
dec
add
sbb
out
jecxz
pushf
insl
icebp
cmpsb
cmp
pop
bswap
ret
mov
ja
loopne
ja
cmp
inc
adc
ficoms
ds
fldl
mov
mov
stc
and
jno
xor
jbe
movsb
fstps
push
add
scas
cmp
jmp
adc
lret
test
push
test
mov
out
aas
dec
lods
cmp
sub
jb
add
xor
fneni(8087
ja
test
ss
mov
mov
lods
push
and
sub
sbb
lahf
in
xchg
mov
in
jecxz
xor
pop
das
mov
inc
mov
sahf
mov
push
out
rclb
sbb
loopne
and
sbb
test
int
cmc
scas
outsl
mov
xchg
and
aam
ret
mov
loop
pop
jae
push
lods
pop
je
fildll
roll
incl
xchg
mov
dec
cmpsb
mov
dec
push
mov
outsl
jle
and
add
mov
dec
gs
lret
ja
xlat
test
cmp
ds
movsb
sub
sub
and
push
or
cmc
dec
bound
sbb
cmpl
or
arpl
sub
test
mov
std
mov
jnp
lea
sbb
inc
adc
xchg
sub
shl
inc
ss
push
int
outsw
and
or
clc
mov
mov
fsubrs
hlt
add
iret
mov
sub
mov
es
fcmovne
test
cmpb
in
insl
sbb
fstpl
sar
cmp
xchg
sbb
sub
xchg
incl
jo
add
in
cmp
ficoms
aad
mov
mov
mov
dec
test
pop
and
jns
call
cli
in
stos
xor
in
rcrb
test
test
insl
imul
ss
lcall
xor
mov
int
mov
aam
mov
test
or
push
fs
adc
inc
mov
imul
xchg
call
sbb
sbb
in
sarl
inc
les
lret
aaa
ds
dec
cwtl
mov
mov
cmpsl
aad
inc
dec
cmc
lock
mov
mov
test
push
adcb
ret
sbb
dec
push
out
insb
jmp
sahf
mov
sahf
adc
push
sbb
jl
adc
popf
int
pop
push
mov
pop
pop
pop
das
cmpb
ds
ds
pushf
dec
xchg
push
adc
push
subb
mov
add
aas
cmp
pop
out
sbb
push
test
xor
mov
rclb
cmp
add
cmp
sbb
adc
jle
enter
cmp
loopne
adc
xorl
ds
enter
lret
call
repnz
dec
mov
insb
cmp
frstor
and
in
mov
rcll
loope
out
adc
insb
cmpsl
push
insl
orb
jo
scas
test
test
add
add
pop
stos
cmpsb
inc
into
int3
and
cmp
dec
pushf
pop
mov
jns
mov
test
sbb
or
cmp
sub
fcompl
int3
sub
cmp
dec
pushf
pop
mov
jns
mov
test
sbb
or
cmp
sub
fcomps
int3
sub
cmp
dec
pushf
pop
mov
jns
mov
test
sbb
sti
sub
fcompl
int3
sub
cmp
dec
pushf
pop
or
cmp
push
jbe
data16
jl
sbb
ret
push
shll
lcall
daa
xchg
pop
test
mov
cmp
sub
jp
push
lcall
cmp
sub
sbb
or
mov
ss
push
lcall
and
xor
add
pop
ljmp
mov
sbb
or
push
stos
xor
aam
sub
popa
add
adc
repz
int3
pop
push
pop
nop
icebp
xchg
pop
out
das
fcmovbe
dec
call
outsb
pop
cmc
daa
das
lds
pop
incl
cmc
lcall
jbe
sub
or
mov
mov
jp
dec
in
dec
xor
dec
shrb
xchg
ret
std
sbb
nop
or
in
cmc
fdivrs
sti
mov
jo
imul
cmp
push
nop
sbb
lock
inc
int
enter
test
xchg
cwtl
pop
push
ljmp
and
daa
ret
js
mov
jg
lcall
sub
xor
sbb
adc
loope
lock
cmp
sub
jp
add
sahf
or
stos
pop
mov
gs
stos
pop
cmpsb
pop
aam
int3
das
std
add
and
ljmp
cmp
mov
xchg
mov
push
call
dec
fnsave
dec
call
ficomps
cmp
hlt
sub
sbb
or
clc
sbb
or
cmp
sub
jp
push
lcall
cmp
sub
sbb
or
clc
sbb
or
cmp
sub
jp
push
lcall
pop
scas
add
cmpsl
jne
test
repz
xchg
es
dec
add
sbb
xchg
shlb
mov
adc
bound
sub
pop
sub
sub
ret
mov
aaa
scas
cmp
mov
mov
jg
mov
cmc
mov
push
mov
add
sbb
xor
cmp
ja
jne
push
adc
test
lret
push
imul
pop
mov
xchg
push
iret
xor
aaa
pop
iret
add
das
lods
es
sbb
jo
call
jecxz
jo
cmc
sub
test
sbb
add
shrb
and
sahf
mov
dec
xchg
cmp
mov
gs
mov
push
dec
sub
incl
lret
cli
cli
pop
gs
and
pop
inc
dec
movsl
jge
xchg
repz
jecxz
ljmp
jmp
dec
mov
out
sarb
mov
sub
or
pop
sbb
push
xor
addr16
pop
hlt
cmp
add
mov
loop
xchg
aad
xor
fisubrl
fidivl
push
xchg
mov
idivl
and
or
mov
in
adc
sub
ret
push
fmul
and
ret
out
and
loop
push
mov
std
mov
mov
rcrl
movsb
mov
and
mov
psrlw
lods
andb
stos
xor
xor
push
repnz
cmp
out
nop
movsl
inc
mov
lret
xchg
loope
scas
mov
cli
imulb
and
lods
or
not
xlat
dec
push
adc
pop
xor
mov
cmp
in
in
mov
jbe
push
ret
adcb
in
xor
popa
sub
scas
cld
ja
je
clc
scas
mov
test
or
fnsetpm(287
jns
or
push
ds
jne
sbb
cmp
repz
test
sbb
shll
push
dec
adc
jg
push
adc
mov
sub
cli
orl
dec
cmp
push
mov
mov
mov
pushf
jmp
push
mov
icebp
ror
jge
inc
mov
pop
jge
js
xchg
and
mov
cmc
icebp
sub
pop
in
inc
lock
andl
mov
mov
mov
fimuls
sti
cmp
add
imul
dec
jmp
mov
test
pop
dec
lods
push
inc
es
cltd
lcall
out
outsl
mov
fistpll
jnp
ds
shll
xor
jae
aam
iret
iret
inc
sbb
outsl
insl
in
cmp
ret
mov
xor
repz
jmp
arpl
subl
lret
mov
repnz
incb
sahf
cltd
sbb
push
pop
push
mov
in
insb
insb
aam
inc
cmp
into
movsb
out
out
loop
pop
or
mov
data16
lea
mov
movsb
popa
xchg
mov
adc
mov
mov
idivb
mov
or
out
or
cmp
js
jae
pop
xlat
pop
rcrb
aas
xchg
addr16
stos
push
repz
push
jae
ret
ljmp
test
xlat
cwtl
inc
pop
mov
dec
xchg
mov
test
outsl
mov
test
cs
int
test
jmp
lcall
dec
jne
divb
pop
xchg
aaa
jae
mov
int
out
xchg
loope
imul
repnz
jns
pop
leave
push
jo
loope
nop
sub
mov
dec
and
mov
sub
sub
inc
xchg
clc
inc
aaa
loop
mov
xlat
xor
lods
fstpl
mov
jns
int3
add
or
adc
pop
pop
inc
adcl
outsl
in
jb
inc
mov
mov
repnz
scas
or
nop
aad
bound
add
add
push
xchg
cs
testb
cmp
outsb
mov
inc
aam
add
lahf
rorb
in
jae
xor
mov
dec
mov
cmp
cli
push
sahf
inc
jl
pop
xchg
or
int3
fisttpll
leave
fisubl
sti
int
or
jbe
enter
dec
out
fcoms
outsb
stc
mov
lds
xchg
adc
xchg
adc
icebp
mov
repz
aas
mov
lds
out
jmp
incl
push
mov
stos
adc
push
adc
loope
adc
sarl
mov
mov
jecxz
xchg
insb
push
mov
int3
push
je
rcrb
cwtl
sub
pop
jb
lods
add
inc
and
cmp
push
and
dec
and
lahf
or
and
pop
jle
in
std
jne
mov
and
mov
into
xor
dec
sbb
jle
fimull
xchg
rcrl
out
pop
and
jge,pt
push
movsb
adcb
mov
mov
fwait
nop
push
testb
mov
add
andl
stos
mov
inc
negb
fldcw
mov
dec
and
dec
outsb
in
adc
lock
push
js
dec
dec
mov
sbb
idivb
pop
int3
add
adcb
ss
dec
pop
adc
pop
jecxz
fisttps
fisubrs
std
sbb
shlb
repz
mov
add
rcl
sti
mov
sahf
movb
ret
lret
xlat
into
js
mov
pop
push
out
jno
popf
testb
es
cmp
adc
cmp
dec
pop
out
mov
adc
cmp
aas
out
and
test
or
mov
repz
lods
xchg
mov
test
ja
xchg
aaa
push
cmp
push
dec
repnz
mov
test
xor
fcoms
clc
imull
ret
ss
cmpsl
lods
popf
mov
inc
test
cltd
shrd
fisubrs
or
sbb
sbb
inc
mov
call
sahf
aad
add
sarl
outsb
adc
mov
loop
int
ljmp
mov
sahf
cmp
mov
outsb
roll
leave
push
pop
mov
stos
pusha
jl
sbb
mov
cld
outsl
sar
fld
mov
and
xchg
jae
or
mov
in
push
push
popa
sub
sbb
dec
adc
arpl
lods
aad
imul
sub
repnz
loopne
xor
or
push
mov
cmpsb
sub
ja
fstps
dec
and
out
cmp
inc
or
push
iret
aad
mov
dec
jne
jno
fdiv
int3
outsl
imul
push
test
mov
stos
fmuls
call
push
adcb
mov
into
fldt
ret
fldenv
dec
sub
insl
lcall
cmpb
stos
pusha
or
inc
pop
jmp
rolb
mov
into
neg
lcall
sti
mov
sbb
push
out
adc
lret
xor
or
adc
and
call
sub
push
xlat
adc
sub
xchg
dec
nop
jbe
push
into
add
orb
mov
addr16
jp
push
sbb
add
jbe
fimull
push
mov
add
pop
cmc
movsl
adc
sub
popf
xchg
xlat
cmp
pop
push
rol
lcall
xor
push
aas
insb
fsts
inc
bound
imulb
shrl
or
popa
cltd
test
inc
shrl
ss
xchg
test
mov
or
test
movb
mov
aaa
scas
sub
test
adc
ss
cwtl
push
inc
shll
sbb
pushf
pop
sti
sahf
mov
xor
iret
and
push
pop
push
push
sub
or
cmpsb
xchg
xor
insb
mov
add
sub
rorl
shr
pop
sub
cld
inc
add
adc
int
mov
mov
mov
or
aam
jg
push
jae
mov
in
jg
lcall
or
sub
pop
movsl
call
dec
inc
mov
mov
test
pop
fdivrl
push
mov
aam
fidivrl
rcll
test
cwtl
cwtl
jg
scas
inc
pop
mov
push
inc
aad
cmp
dec
and
push
xor
repnz
xchg
mov
sub
idiv
inc
fwait
leave
pop
pop
add
lock
sti
mov
pop
mov
popa
lahf
dec
adc
addb
sbbb
pushf
mov
adc
sub
test
inc
out
loop
lahf
sub
sub
in
mov
inc
xchg
iret
sub
nop
pushf
sbb
repnz
divl
icebp
sbb
lea
fxch
mov
iret
add
adc
sbb
add
cmp
push
rcll
orl
push
addl
and
dec
pop
dec
sub
jae
mov
lahf
je
xor
in
cmpsl
pop
nop
test
pusha
pop
ja
jo
cs
je
popf
lcall
add
shll
sbb
or
push
data16
lret
sbb
mov
jb
sub
aam
jae
push
mov
decl
and
cmp
leave
nop
test
stc
clc
shlb
mov
test
adc
push
mov
test
adc
or
jnp
sbbb
push
test
dec
fsubr
push
lret
jnp
es
pop
fcomps
stos
ja
stos
pushf
out
cmpsb
ss
leave
std
js
xchg
cmp
add
pusha
nop
inc
popf
mov
inc
hlt
and
andl
inc
movsl
sahf
mov
cmp
insb
stc
mov
push
stc
xorb
add
out
dec
lods
sbb
lret
sahf
or
push
or
movsl
imul
xor
in
fadd
xor
fadd
out
jbe
jmp
pop
inc
xchg
fcoml
daa
outsb
addb
sahf
in
add
jmp
sbb
loopne
cmc
fcmovnu
das
arpl
arpl
dec
out
fcmovne
push
mov
fimull
and
je
push
cmp
je
movsb
mov
loopne
loope
int3
out
adc
imul
mov
xchg
dec
mov
ja
test
hlt
sub
dec
dec
xchg
cmc
les
sub
push
mov
fdivr
or
xchg
rcrb
testl
sub
jnp
mov
jmp
outsl
or
adc
pop
and
daa
mov
test
sbb
xchg
sub
and
out
orb
call
push
push
mov
sbb
imul
sbb
xchg
jle
lods
aam
popf
js
push
push
syscall
mov
mov
mov
mov
xchg
notb
int3
es
arpl
imul
popf
cmp
bound
xor
adc
pusha
mov
jo
fildll
dec
and
mov
pushf
mov
mov
cli
leave
pop
clc
and
mov
call
and
sub
cld
hlt
dec
dec
pop
mov
outsb
fistps
out
scas
jns
iret
sub
popf
pop
adc
lcall
add
add
xlat
jmp
dec
push
in
imul
jge
push
insl
mov
fisttpl
out
lcall
insb
js
ds
and
mov
sub
xchg
lret
or
xchg
in
push
je
xor
inc
stos
lret
or
cmp
mov
scas
jmp
mov
push
in
mov
cmp
int3
sbb
ret
add
mov
sahf
ds
mov
push
aaa
sahf
arpl
dec
jg
mov
dec
add
nop
outsb
sub
int3
lcall
jg
js
sbb
fdivr
pop
or
mov
jecxz
sbb
fisubrs
push
ljmp
ja
mov
mov
xchg
cmp
cmpsb
cmp
cmp
inc
jg
pop
and
je
pop
pop
in
mov
nop
leave
inc
fbld
xchg
cmc
mov
or
push
push
gs
xchg
test
mov
fimull
dec
adc
xchg
cmp
repnz
aaa
jmp
lret
cmp
mov
fsub
mov
sarb
jo
mov
arpl
daa
jmp
add
mov
or
sbb
and
adc
inc
cmp
xchg
push
adc
inc
js
lea
lods
aam
cmc
arpl
xor
cwtl
ret
jecxz
jb
fucomip
lret
mov
mov
mov
cs
cltd
gs
push
arpl
mov
jnp
mov
push
push
imul
repnz
inc
cmp
je
dec
push
sbb
in
push
mov
stos
jmp
test
cmp
pushf
test
lods
xchg
jns
mov
ss
inc
test
jle
dec
cmp
filds
pop
jle
pop
dec
call
push
adc
call
pop
in
dec
push
test
lcall
outsl
das
mov
xchg
xchg
dec
aam
jge
and
lret
stos
fnstsw
loope
xorl
xor
pushf
mov
push
mov
lret
in
mov
test
jp
cmc
ljmp
dec
mov
dec
jle
mov
inc
and
lret
lds
ja
ss
inc
cmpb
fld
xchg
test
push
out
stos
adc
push
or
lea
xor
test
push
pop
ljmp
test
push
stc
jno
je
lods
xor
mov
adc
and
push
xchg
add
jge
adc
cmpsb
out
test
ret
mov
popa
add
sbb
mov
dec
mov
mov
mov
push
sbb
add
jae
das
ret
push
je
shlb
cmp
xchg
ret
xor
divb
mov
inc
mov
sub
iret
jnp
mov
jae
in
call
ret
inc
pop
sub
or
dec
xchg
cmc
jmp
les
inc
cs
xor
inc
in
pusha
add
in
cmp
orl
jmp
and
les
in
and
xor
sbb
jg
sub
xchg
xor
imul
mov
jb
sub
call
shrb
dec
test
inc
mov
pop
and
push
sbb
into
jl
shld
sub
outsb
movsl
mov
push
rclb
out
push
movsb
int
cmp
scas
add
das
ljmp
fiadds
pop
lret
enter
and
or
mov
ffreep
sub
fidivs
or
out
adc
or
jl
push
out
xor
mov
lcall
adc
mov
adc
mov
leave
mov
out
xchg
sub
mov
xchg
into
and
lea
mov
xor
pop
mov
push
ret
adc
addb
outsl
adc
test
stc
mov
rclb
sbbl
aaa
jecxz
dec
sbb
lret
mov
jmp
es
ret
shll
shl
js
out
in
push
in
arpl
aam
icebp
pop
inc
pop
out
scas
mov
and
or
mov
imul
jno
inc
or
add
movsl
mov
sbb
jo
mov
roll
imul
or
pop
fcmovbe
adc
nop
or
movsl
xchg
jg
mov
iret
push
xchg
xor
cmp
pushf
dec
out
in
sub
dec
fstl
mov
jns
and
js
bound
decb
push
mov
fnstenv
add
and
div
inc
add
or
rolb
push
sahf
lea
insb
dec
mov
and
sbb
pop
sbb
xchg
mov
jno
popa
fwait
and
repnz
xchg
movsl
push
pop
cmp
dec
pop
fsubs
push
pop
pop
push
sahf
test
ds
bound
push
xor
xchg
jle
stos
cltd
adc
adc
lcall
mov
lcall
mov
sahf
test
mov
les
psllq
or
mov
js
push
pop
cmp
ret
pop
adc
adc
mov
orb
push
xorl
inc
pop
xchg
push
enter
mov
adc
dec
mov
stc
or
cld
push
test
cmp
adc
in
mulb
push
mov
jmp
mov
xchg
cli
fdiv
inc
cli
mov
pop
pop
movsl
adc
jae
lods
pop
lock
imul
pop
ss
sbb
dec
decl
sbb
movsb
ljmp
cmp
pop
loop
fidivrs
lahf
mov
in
sbb
mov
daa
push
cmpsl
push
adc
push
pop
in
xor
xor
push
jl
mov
scas
mov
fdivl
mov
push
lahf
fwait
push
or
rclb
je
and
clc
xchg
sub
fcomps
xor
fcoms
jecxz
scas
push
pop
push
lock
fldenv
shlb
and
dec
test
lret
test
cli
jg
test
cmpsl
inc
push
mov
pushf
mov
push
outsb
sbb
pop
das
fisubl
jbe
and
or
push
cltd
mov
not
popf
roll
mov
xchg
mov
adc
sub
mov
aad
mov
inc
mov
jp
cmpsl
cmp
cltd
roll
insl
icebp
mov
jbe
push
xchg
fsubrl
rorb
pop
add
sbb
inc
rorl
cmc
push
pop
cs
sub
jns
pop
and
push
inc
mov
aam
add
mov
pop
mov
pushf
loop
out
mov
test
int3
mov
aaa
and
push
ds
fmul
mov
mov
loope
ret
out
pop
stos
insl
sbb
push
ds
pop
test
sub
lea
movsl
jg
xor
notl
lods
jns
sbb
stos
clc
sub
mov
mov
xchg
lods
and
add
clc
out
sub
mov
add
cmp
mov
sub
mov
mov
push
xchg
popf
adc
mov
mov
repnz
and
lret
dec
push
sahf
add
lret
xchg
jne
pop
sti
xor
imul
push
mov
add
jns
xchg
adc
in
dec
aad
sbb
and
fisubs
ret
cli
sti
add
imul
rorb
mov
and
jp
ret
mov
and
mov
sub
ja
popa
ja
mov
adc
push
or
div
adc
sub
mov
push
and
xor
loope,pn
push
jne
cwtl
mov
fildl
out
cmpsl
es
fnstenv
sbb
mov
cmp
dec
or
or
fadd
insb
insb
rcl
lcall
movsl
ljmp
jmp
sbb
in
xchg
or
mov
or
faddl
sarb
add
jg
mov
mov
dec
cmp
mov
mov
pop
push
adc
mov
ds
addr16
jl
or
inc
rolb
movsb
icebp
inc
adc
xor
mov
gs
sbb
orb
jno
lcall
dec
push
fimull
in
dec
mov
ja
out
repz
movntq
mov
push
jp
dec
sti
xchg
cli
nop
cmp
aaa
xchg
sub
pop
stos
and
imul
js
ljmp
aaa
cmpsl
pop
popa
cli
adc
push
call
sub
ret
jae
xorb
sub
cli
dec
std
arpl
mov
mov
lret
les
fs
sbb
adc
int3
ljmp
xor
fiaddl
pop
sub
jbe
dec
movsl
shll
fadd
push
outsb
inc
push
cmp
mov
lahf
mov
push
pavgw
adc
inc
loope
icebp
cmp
cld
push
rcrb
outsl
movsb
or
shrl
pushl
andl
mov
fbstp
mov
lcall
pushf
movsl
ljmp
dec
mov
or
outsb
fsubrl
or
ret
shrl
int3
jmp
mov
push
mov
stc
and
fnstcw
xchg
test
jo
jp
mov
shlb
xchg
insb
inc
mov
scas
stos
std
mov
jl
rclb
movsb
loop
jno
pop
cs
push
cmp
inc
push
or
scas
test
cmp
mov
je
mov
xor
out
out
xchg
jb
cwtl
lods
fs
out
pusha
call
test
imul
jnp
je
cmp
out
lds
test
jmp
les
mov
jnp
and
lret
arpl
fprem1
cwtl
cltd
mov
jecxz
lahf
push
jmp
push
stc
sub
outsl
mov
in
inc
dec
cld
out
test
scas
ja
in
adc
cwtl
leave
sahf
leave
int3
fwait
stos
mov
pop
mov
jle
pop
sbb
mov
sub
sbb
or
clc
sbb
or
cmp
sub
jp
push
lcall
cmp
sub
sbb
or
clc
sbb
or
cmp
sub
jp
push
lcall
cmp
sub
sbb
or
clc
sbb
or
cmp
sub
jp
push
lcall
cmp
sub
cwtl
cli
mov
pop
sbb
mov
iret
shlb
mov
test
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
adcl
add
xor
and
push
arpl
sbb
bound
mov
mov
jecxz
jecxz
adc
add
xor
and
push
push
inc
inc
jae
arpl
xchg
xchg
addl
mov
ret
jecxz
adc
add
xor
and
push
push
inc
inc
jae
arpl
xchg
andl
xchg
stos
sahf
rcll
add
popa
jae
fsubr
arpl
adc
cmpb
bnd
movsb
or
mov
inc
pop
bound
stc
cli
push
call
ljmp
cltd
sti
dec
sbb
cmp
inc
in
pop
leave
mov
test
roll
insl
sub
cmpsb
cs
add
adc
iret
je
push
outsl
inc
xchg
jp
addb
dec
daa
xor
nop
and
xchg
loop
sar
std
pusha
int
das
mov
and
sti
insl
notb
addb
add
dec
add
mov
leave
mov
movsl
jmp
xchg
push
xchg
cs
cmpsl
ret
ret
xchg
repnz
dec
adc
add
xor
and
inc
inc
jae
arpl
xchg
addl
rol
ret
jecxz
adc
pop
jae
arpl
adc
push
push
sti
loop
fsub
shlb
adcb
inc
jp
inc
adc
pop
jae
sbb
out
lock
aad
lock
mov
push
mov
push
sub
pop
adc
inc
jae
arpl
xchg
addl
rol
ret
jecxz
adc
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
rol
ret
jecxz
adc
push
sub
cmpsl
dec
roll
xchg
xchg
jne
mov
test
fnstenv
add
dec
ja
inc
cld
and
jecxz
jg
into
xchg
xor
inc
rcl
mov
or
pop
shl
push
push
xchg
ljmp
lcall
mov
pop
mov
sbb
jp
sarl
movsb
and
shll
jp
adc
mov
mov
fldenv
xor
nop
or
ror
je
jmp
fisttpll
add
add
push
int3
push
pop
fwait
mov
js
imul
cmp
scas
and
jmp
add
add
xor
inc
fbld
test
xor
xor
scas
jmp
xchg
scas
pop
aas
xchg
int
inc
icebp
pop
shlb
lds
pop
xor
popf
bound
icebp
andb
movsl
sub
dec
push
filds
push
les
adc
jecxz
ds
xor
aas
dec
fwait
sbb
test
stos
jl
mov
sub
imul
nop
pop
or
imul
out
adc
add
popa
daa
jne
roll
cltd
pop
xchg
or
hlt
push
cmp
dec
xor
cld
and
out
ljmp
scas
xlat
sub
xchg
cmp
mov
xchg
cli
pop
xor
addb
mov
fldl
fisttpl
inc
add
adc
pop
mov
add
cltd
sbb
inc
rcl
sarl
adc
or
int3
dec
mov
push
add
insl
pop
ss
sub
sahf
insl
mov
lds
sub
lret
ret
popf
aaa
push
int3
or
lods
jbe
shrb
gs
popa
or
stos
jecxz
pushf
jbe
mov
mov
je
mov
out
lahf
leave
jne
sub
ja
xchg
cmpsb
dec
mov
push
jge
loope
popa
and
icebp
and
lcall
jne
in
and
cli
mov
loope
in
int
ljmp
fisubrs
pop
pusha
sbb
lahf
out
and
pop
xchg
dec
outsl
cld
add
push
and
jg
jbe
stos
sahf
bound
out
push
or
gs
fimuls
and
mov
data16
xchg
clc
int
pushf
and
inc
inc
xchg
icebp
jp
into
mov
cmp
fsubp
xchg
clc
push
add
pop
cmp
mov
rcl
inc
sub
int3
ret
loopne
pop
shrb
jl
mov
jae
aam
inc
xor
je
push
fmull
imul
fwait
in
das
fimuls
jno
pushf
fldcw
mov
dec
jl
add
mov
add
loopne
clc
sarb
jecxz
in
clc
xchg
push
ss
int
sub
adc
in
aam
in
add
sbb
sahf
dec
cmp
and
scas
or
push
xor
and
adc
mov
outsl
or
jns
dec
or
cli
stos
call
and
in
pop
mov
push
bnd
aas
inc
xchg
pop
fldt
dec
xchg
or
lock
pop
repz
and
stos
push
mov
mov
test
xor
leave
jb
adc
xchg
rcrb
iret
js
sub
les
lods
xor
sub
push
cmp
mov
jl
lret
jl
fidivrs
pop
push
test
lcall
xor
out
dec
imul
or
fldt
lods
adc
cmpsb
cmovl
dec
js
pop
xchg
call
mov
inc
jle
lgs
psubsw
xchg
jnp
cmpsl
icebp
ljmpw
cmp
push
mov
xchg
xorb
imul
pop
cmpsl
or
pop
outsl
orl
ss
scas
pop
jb
fucom
aam
mov
adc
inc
cmp
filds
sbb
jno
pusha
sub
lahf
cmp
fdivs
or
jne
adc
mov
cmp
rcll
lcall
jl
cmp
cwtl
pop
add
fstp
mov
lea
mov
jg
pop
cmpsl
xchg
shlb
stos
cmpsb
ja
sarl
push
push
icebp
outsl
addr16
inc
clc
in
movb
lcall
adc
inc
rcrl
or
jmp
rolb
sbb
mov
push
mov
js
jl
jb
cli
std
push
fmul
pusha
sub
sbb
inc
jp
sarl
adc
mov
pop
cld
sti
pushf
xor
cld
dec
xlat
add
sub
xchg
out
inc
ror
inc
fsubl
cmp
push
jmp
icebp
push
divb
inc
push
dec
sbb
sub
ret
mov
jg
scas
dec
xor
fsubrl
les
cmp
dec
cmp
or
xchg
aaa
fcomps
js
add
stos
ficoml
fadd
sahf
outsl
mov
jno
sub
push
sahf
fs
je
jo
lcall
jbe
lret
fldcw
push
adc
pop
loope
scas
cmp
aaa
inc
adc
clc
xchg
pusha
sub
or
insl
push
adcl
es
gs
cmp
outsb
sub
popf
jg
cmp
fnstenv
rorl
cmp
xchg
cmpl
dec
cli
stc
movsb
or
jo
lcall
jmp
sbb
dec
cmp
ja
pop
nop
add
test
in
inc
mov
push
add
push
push
add
into
rclb
cmp
mov
test
popa
pop
pop
jge
scas
icebp
pop
push
imul
incl
gs
lea
push
stc
aad
ja
jno
mov
out
jo
sub
mov
out
sahf
in
sbb
or
aaa
add
and
cmp
push
cmp
xchg
xor
pop
in
mov
les
pushf
xor
cmp
pusha
pop
mov
ffreep
xchg
test
adc
xor
je
into
sarb
or
cmp
dec
sub
cs
pop
xchg
in
repz
loope
pop
mov
int3
xlat
cmp
add
mov
stc
and
pop
push
push
cmovne
xchg
adcl
cs
fimull
imul
jmp
fldl
enter
mov
sub
imul
xchg
jmp
dec
cmp
mov
xchg
ja
test
dec
add
xor
mov
sbb
decb
adc
roll
inc
xor
sti
push
shl
into
sub
xlat
cli
xor
jo
movsb
pop
push
pop
sbb
cmp
jb
mov
mov
jmp
jle
jmp
out
iret
push
xlat
out
sbb
in
in
jns
aaa
sub
add
push
and
cmp
push
pop
es
dec
dec
sbb
xchg
mov
shll
sub
lds
sbb
cmpsb
inc
pop
xchg
sub
sti
cmp
sub
push
fwait
xchg
dec
dec
mov
mov
and
sub
or
push
push
enter
sbb
xchg
mov
push
lods
or
fcoms
or
daa
aam
shlb
ret
push
out
test
or
adc
stc
int
ja
filds
dec
pop
sbb
scas
push
dec
fistps
pop
inc
mov
jecxz
popa
inc
xchg
dec
out
mov
gs
stos
arpl
pop
pop
adc
add
repnz
lret
mov
sbbl
xchg
xor
or
cmp
sbb
fisttpll
mov
xchg
jp
js
dec
cld
cs
cmp
subb
mov
jne
enter
popa
shlb
idivb
inc
xchg
or
dec
lret
and
out
pushf
pop
or
aaa
push
jecxz
jmp
hlt
mov
mov
leave
xchg
test
outsl
cmpsb
ljmp
or
sarl
sarb
push
xchg
es
insb
mov
and
mov
xchg
mov
mov
ret
test
mov
sti
adc
shll
mov
cmp
sbbl
popf
fdivrl
ss
out
lods
mov
inc
dec
fcomps
sti
jecxz
insl
jmp
jge
fwait
ds
add
push
mov
mov
test
dec
out
push
jo
popa
pop
insl
fsubl
mov
in
fiadds
sub
mov
jne
lds
loop
sub
and
std
pop
aam
adc
push
add
add
inc
cmp
fwait
pushf
sbb
pop
add
jl
xor
decl
mov
mov
pusha
jne
xor
int3
repz
lret
lock
stos
and
sub
mov
jbe
cld
add
out
shrw
mov
jmp
inc
les
push
test
mov
sub
xor
iret
fsubp
scas
sbb
loopne
fs
dec
clc
inc
push
sahf
sub
or
jo
call
scas
jb
pop
insb
fistps
pop
push
aam
mov
andl
mov
lahf
je
out
mov
inc
fs
mov
xor
jns
daa
dec
in
mov
adc
insl
mov
scas
jle
mov
filds
std
push
mov
pop
movsb
mov
lret
add
mov
loop
sbb
mov
insl
fldl
xchg
arpl
jns
cmp
enter
mov
xchg
push
insl
pop
movsb
sahf
push
je
aaa
shr
jo
lret
vminsd
or
mov
sub
push
insl
xor
fwait
sbb
add
jnp
cs
rorl
or
andb
push
cltd
dec
mov
inc
and
data16
inc
lods
cs
pop
in
testl
cld
xor
fstpt
sbbl
pop
in
adc
dec
jl
xor
js
mov
push
popl
ss
mov
lcall
push
addl
push
sub
in
xor
cwtl
mov
xchg
test
xor
pop
orb
in
mov
out
ret
jg
xlat
add
out
out
ret
popa
lcall
clc
std
lock
popf
out
add
lods
mov
mov
mov
pop
ss
mov
lock
int3
add
cltd
add
mov
pushf
jecxz
adc
jne
test
push
stc
xchg
movb
inc
fimull
jno
inc
fiaddl
jns
jmp
inc
inc
inc
out
imul
jne
hlt
aaa
ret
cmp
in
iret
cmp
fistl
xor
and
outsb
xlat
mov
sbb
fld
dec
mov
fwait
pop
jne
sbb
aad
jmp
add
insb
or
mov
ret
cmpsl
mov
mov
jns
push
push
int3
ja
push
xlat
cld
aad
std
jno
sbb
mov
icebp
push
int3
fnstsw
sbbl
pop
xor
setle
adc
xor
pop
arpl
sbb
xchg
cmpsl
sarl
outsb
je
aad
cmpb
adc
pop
xor
and
lret
add
aas
xor
and
pop
in
loopne
ss
daa
adc
xor
lret
into
mov
addr16
push
clc
test
outsb
pop
xor
filds
xchg
shrl
adc
xchg
xchg
mov
enter
pop
pop
out
xchg
sbb
pop
mov
aaa
cmpsl
imul
cmpsl
push
popf
fstpt
outsl
addb
cmp
movsl
xlat
and
or
sar
es
adc
movl
xor
xor
hlt
stos
jp
sbb
pop
mov
data16
imul
stos
jo
xor
push
sti
insl
fwait
push
add
add
xchg
pop
jmp
repnz
leave
and
jne
aad
mov
int3
stos
loope
xchg
and
ljmp
fs
inc
hlt
in
je
leave
sbb
sub
adc
call
scas
test
xchg
cmp
sub
icebp
add
in
fwait
stos
jb
aaa
dec
pop
push
dec
roll
dec
in
cmpsb
xor
push
jmp
std
adc
pop
into
pop
pop
cmpsl
sub
and
hlt
xchg
sub
mov
mov
pop
cli
adc
ljmp
or
lds
rorb
mov
sub
sub
mov
jbe
fists
fiaddl
mov
xchg
fs
mov
mov
or
push
xlat
push
fistpl
adc
ja
jmp
and
das
lock
lret
fmull
int3
mov
outsb
dec
add
lock
outsl
lret
dec
jbe
cmp
in
test
hlt
fimull
jno
jne
test
scas
xchg
and
shll
arpl
push
das
stos
and
aaa
jecxz
scas
mov
pusha
mov
testl
xchg
fmul
insb
ret
inc
lahf
or
and
xlat
pop
in
mov
aas
adcl
repz
xor
ljmp
in
and
inc
scas
outsl
outsb
mov
mov
pop
out
add
mov
mov
sub
add
adcl
push
aam
jg
repz
nop
dec
cmc
push
cmp
cs
bound
xor
cmp
pop
bound
lcall
jge
add
and
and
push
stc
repnz
into
xlat
cmp
xor
sub
add
jnp
mov
add
adc
addb
enter
add
shll
inc
lea
repnz
ret
xor
sbb
outsb
jl
int
inc
in
xchg
jl
jnp
call
and
popa
insb
inc
adcl
es
sbbb
cmpsl
test
popa
stos
std
or
xlat
mov
in
movsl
mov
test
xchg
fs
je
gs
add
add
cs
test
xchg
pop
es
sarl
sub
aas
cmp
and
or
test
mov
test
rcrl
mov
adc
dec
fs
stos
jp
jl
or
mov
pop
xchg
mov
push
cmpsl
aas
cmpsb
scas
int3
cltd
and
mov
push
fs
loopne
push
nop
sub
ljmp
sub
adc
mov
cltd
adc
pop
cmp
or
lret
into
lds
cmp
dec
shll
out
popf
mov
dec
subb
dec
cmp
inc
cmp
xor
mov
das
and
mov
bound
dec
insb
fldt
jnp
enter
ret
jb
repz
pop
cwtl
mov
stos
icebp
jnp
mov
jle
and
fstl
cmpl
rorb
jns
cmpsb
push
jl
jp
pop
test
mov
dec
push
jne
push
jns
adc
mov
es
xchg
cmc
mov
xorb
iret
andb
outsl
pop
or
mov
imul
push
roll
gs
inc
xchg
fsubr
xor
inc
sbb
cld
data16
mov
test
sbb
jbe
call
pusha
mov
mov
dec
adc
cmpl
jle
enter
fiadds
pop
lcall
dec
insb
enter
add
sbb
lock
aam
aaa
or
dec
into
cmpsl
stc
dec
add
cmp
or
dec
adc
jae
adc
cli
inc
add
xlat
cmp
mov
inc
lret
fmul
lret
and
inc
cmp
loopne
nop
fildll
test
mov
sti
icebp
sub
fisubrs
sub
sbb
sub
jb
ljmp
adc
dec
mov
outsl
mov
xor
lahf
adc
sub
mov
repnz
sbb
pop
push
mov
popf
dec
push
or
mov
jno
push
lret
cwtl
fdivrs
lret
cld
or
adc
xor
adc
divl
or
popf
pushf
movsl
scas
js
xchg
mov
jp
inc
in
jnp
inc
aad
mov
add
adc
call
xor
xchg
pop
xor
xchg
cli
push
out
test
push
enter
mov
daa
sbb
ret
sbb
jae
jo
jbe
ss
fnstenv
rorl
cmpsl
les
outsl
xchg
adc
push
mov
cltd
dec
lods
daa
xor
pop
mov
add
pop
in
in
lret
xor
cmp
and
mov
arpl
sub
rcl
inc
mov
fisubs
scas
dec
fldcw
lods
int
loopne
out
mov
bound
icebp
pop
dec
sbb
dec
cmp
in
jge
xchg
dec
mov
js
lds
adc
roll
enter
int3
decl
dec
push
sbb
inc
dec
iret
cli
sub
mov
mov
mov
adc
sarl
jno
cmpsl
mov
mov
cltd
push
cs
cmp
jnp
test
out
stc
loop
mov
add
adc
dec
dec
adc
push
mov
jecxz
inc
fstpl
add
cmp
pop
dec
out
cltd
adc
js
sbb
sbb
push
int
sub
lods
mov
mov
ja
lcall
inc
jo
mov
out
adc
sarl
sahf
pushf
ret
inc
test
inc
sbb
cmpsb
movsb
jecxz
leave
ljmp
jno
or
jbe
push
mov
xchg
daa
mov
cmp
int
in
btc
add
bound
cmpsl
dec
sbb
dec
aam
add
xor
jae
insb
std
mov
push
sahf
sub
lahf
fdiv
mov
in
inc
sbb
je
in
sar
jns
mov
pusha
jg
rclb
ljmp
popa
mov
dec
js
jp
in
lahf
icebp
xchg
sti
sub
icebp
dec
lds
xchg
jmp
push
push
xchg
sub
cmc
hlt
rcrl
adc
gs
hlt
addr16
ss
repz
outsl
mov
lahf
mov
ret
push
mov
push
pop
inc
xchg
jb
or
cmp
and
pop
sub
out
mov
jns
adc
mov
cmp
mov
test
outsl
cli
out
leave
mov
ret
cwtl
inc
cmpsl
jcxz
mov
test
jle
repnz
icebp
dec
pop
das
iret
xchg
sbb
adc
mov
xchg
or
push
out
push
sbb
sbb
xchg
jns
ret
inc
loopne
mov
xchg
mov
sahf
sti
lahf
ret
or
mov
repnz
movb
mov
leave
loopne
pop
lret
mov
insb
cmp
sub
mov
inc
fisubs
into
divb
inc
aas
cmovs
or
mov
aad
loopne
xchg
xchg
push
xlat
mov
mov
push
pop
aam
aaa
pop
cmpsb
inc
int3
mov
nop
fadds
rclb
decl
push
int
mov
adc
mov
push
outsl
push
adc
aam
jns
in
and
stos
jp
jbe
dec
or
outsb
imul
lcall
sbb
popa
loop
xlat
nop
pop
xlat
bound
mov
std
das
ja
sub
dec
hlt
mov
xchg
fidivl
fsubp
inc
pop
cmpl
loop
add
fisttps
pop
push
testl
mov
push
or
push
bound
inc
pop
jno
ja
clc
lret
mov
sbbb
icebp
popa
and
insb
and
xor
mov
gs
mov
cmp
call
outsb
xor
xlat
or
test
mov
mov
cmp
mov
push
and
mov
es
xchg
into
cmp
push
jnp
into
and
add
mov
aas
in
loop
shlb
add
sub
dec
xchg
mov
mull
test
inc
push
iret
cmpsb
sub
ja
jo
pop
aad
test
add
mov
sub
sbb
outsl
rcr
pop
cmpsb
dec
pushf
sbb
push
push
idivl
arpl
push
mov
arpl
jns
inc
pop
mov
scas
nop
xchg
ret
cltd
popl
inc
inc
popa
add
jg
sbb
loope
jg
repz
xor
sbb
sahf
push
xchg
adc
cmc
lock
popf
ja
call
ret
and
cmp
xchg
dec
scas
push
mov
ret
jmp
mov
sub
cmc
shlb
jne
ret
mov
aas
xor
adc
cwtl
stos
push
popa
insb
xor
xchg
pop
pop
sub
inc
pop
pop
dec
and
repz
mov
stc
mov
jbe
pop
add
in
jg
icebp
or
xchg
fdivrl
inc
jp
xor
sbb
pop
out
vpshuflw
pop
sbb
lret
xchg
mov
inc
jne
lret
xor
cs
popa
cwtl
fbstp
pop
bswap
outsb
icebp
pop
in
stos
addb
jmp
imul
sahf
sbbl
and
cwtl
xchg
ret
popf
mov
inc
pop
lods
ds
inc
sbb
add
xor
and
inc
inc
jae
arpl
xchg
addl
rol
ret
jecxz
adc
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
rol
ret
jecxz
adc
add
xor
and
push
push
inc
inc
jae
arpl
xchg
addl
rol
ret
loop
adc
add
xor
and
push
push
inc
inc
jae
arpl
sbb
dec
cmp
cmc
movsl
adc
cwtl
orl
cmc
push
xor
adc
push
push
mov
test
cwtl
orl
ljmp
sub
or
adc
or
pop
inc
dec
push
bound
sub
sbb
call
lret
xor
cmp
inc
adc
imul
xor
xor
push
jae
lods
or
inc
lret
adc
stos
sub
pop
inc
cmp
mov
jns
mov
pushl
cmc
add
hlt
pop
jp
ds
cs
jecxz
std
je
cs
lds
leave
mov
popa
jo
cltd
or
xlat
and
add
out
xchg
pop
xchg
std
mov
fstl
flds
lret
movsb
jnp
or
notl
cmc
je
cld
dec
mov
push
dec
addr16
outsb
pop
shrb
pushf
add
out
or
mov
push
fdivrl
hlt
sub
add
xor
shlb
sbb
or
or
sbb
sub
in
clc
loope
icebp
fadd
jo
lret
cltd
rolb
sub
pop
pop
sub
lret
in
out
xchg
inc
popf
pushf
lret
mov
xchg
pop
bound
dec
movsb
imul
xor
and
fcomip
inc
std
xchg
mov
mov
add
inc
jge
and
cs
and
rcrb
std
mov
ror
cmp
sub
sbb
or
js
push
push
mov
orl
sarl
and
xor
add
adc
push
push
mov
cld
xlat
jg
xchg
out
jnp
cltd
dec
aas
nop
xlat
test
xchg
lret
sti
sbb
mov
sbb
frstor
cli
jne
cld
adc
dec
into
xor
cmc
and
xchg
dec
lods
mov
popf
mov
mov
loop
and
add
and
pop
or
cmc
lret
push
lods
clc
xchg
insl
scas
and
dec
inc
xchg
fisttpll
popa
movsl
push
loopne
aad
jmp
pop
cwtl
pop
xor
or
pop
add
mov
dec
sbb
icebp
mov
mov
add
repz
ljmp
mov
out
mov
adc
jno
rol
sbb
dec
sahf
push
add
mov
in
loopne
jae
jecxz
sub
xorw
xor
xchg
daa
test
xor
sub
pop
xchg
xchg
and
sbb
pop
jns
xchg
ja
sbb
fnstsw
dec
sbb
shlb
mov
in
hlt
or
cld
dec
in
xchg
and
and
outsb
fstl
sti
in
mov
xor
xchg
adc
mov
test
inc
cmp
pop
inc
sub
xor
pushf
mov
mov
jecxz
das
outsl
cld
dec
sbb
orb
dec
sbb
pushf
in
push
scas
pop
add
adc
aas
xchg
jl
test
dec
and
lods
pop
sbb
push
mov
sub
rcll
xor
push
mov
sbb
jmp
sub
rclb
lret
mov
addb
inc
cmp
repz
and
mov
test
test
and
fsubrl
mov
push
es
in
bound
inc
cmc
sub
data16
shrl
adc
imul
push
lods
xlat
adc
add
adc
mov
cwtl
push
shl
leave
add
shll
inc
mov
fisubl
mov
popa
jnp
fxam
xor
stc
mov
icebp
mov
cmp
xlat
rcrl
mov
cmp
ret
loopne
mov
jecxz
sbb
mov
pop
fsts
jmp
call
mov
inc
jecxz
inc
add
xor
hlt
sbb
xchg
icebp
cmp
lret
ret
mov
stos
xor
inc
pop
cmpsb
inc
aad
fadds
pop
jg
dec
popa
test
sarb
cmpsl
dec
int
mov
addl
or
mov
stos
jge
repnz
adc
mov
std
call
push
adc
push
popaw
xchg
ret
jp
ret
fldcw
dec
dec
sub
mov
pop
sbbl
jg
jle
and
pop
or
and
cwtl
mov
fmulp
mov
cmp
jecxz
sbb
dec
int3
mov
or
out
adcl
popf
cmp
notb
adc
xor
cmc
dec
pop
or
or
out
cli
pop
cmpsl
outsl
pusha
bound
push
push
push
cld
mov
fidivs
fiaddl
xchg
lds
xlat
es
sub
fimuls
jbe
and
pop
push
cli
adc
inc
push
mov
adc
jne
lret
and
rcr
ss
push
mov
mov
in
in
imul
rorl
xor
pop
cmp
adc
add
aad
xor
or
dec
in
js
test
insb
popa
addr16
sub
cmpsb
cmpsb
out
and
cmp
cld
cmp
or
data16
xorb
mov
mov
inc
ja
pop
mov
sbb
lods
aad
fdiv
ret
jae
call
dec
cmp
inc
mov
sub
icebp
adc
xchg
add
cltd
mov
jle
jg
mov
jo
stos
dec
mov
repnz
icebp
inc
fnstsw
std
aam
dec
arpl
in
std
jnp
sbb
aad
adc
pusha
dec
repnz
sbb
dec
or
add
pop
jno
and
test
sbb
fisubl
push
lahf
dec
or
mov
xor
lahf
pop
mov
jno
mov
imul
inc
dec
xor
pop
jle
mov
shrl
ja
add
movsl
std
pop
test
mov
pop
pusha
stos
fwait
cltd
pop
inc
cmp
mov
aam
dec
dec
cmp
xchg
repz
cmp
pop
mov
leave
push
ja
or
xor
jge
mov
mov
sbb
cmp
das
ds
or
mov
jle
cltd
jmp
mov
xor
mov
dec
popa
sbb
adc
cmc
shr
sbb
sub
out
fdivs
rcl
jmp
std
fcmove
jo
jno
cli
sbb
call
push
xchg
sub
lds
and
ret
xorps
paddusw
les
or
mov
enter
ret
test
clc
dec
and
xchg
add
mov
pop
loop
adc
loopne
jecxz
mov
cmp
inc
add
push
mov
loopne
xor
push
sub
adc
cmp
divb
xchg
popa
gs
gs
mov
cmpsb
daa
ds
sub
data16
mov
push
jnp
sahf
xchg
adc
frstor
push
mov
adc
cwtl
cs
fisttpl
add
pushf
dec
addr16
pop
negl
xor
call
cmp
loop
mov
add
mov
inc
and
imul
sbbl
pushf
test
xchg
out
xchg
in
xor
lret
xor
cli
flds
inc
jnp
add
orb
or
out
mov
lret
inc
jmp
lods
pop
xchg
mov
sti
or
orb
jbe
pop
dec
dec
pop
mov
push
imul
fdivrp
lds
pop
xor
sub
xor
lods
add
imul
cmp
push
outsl
mov
xor
incl
jo
nop
mov
lcall
add
fidivrs
jmp
sub
leave
xchg
mov
ret
jne
or
fsub
add
insl
sbb
push
mov
daa
mul
iret
mov
sbb
or
jg,pn
and
int3
sbb
loope
add
cmpsl
test
sub
das
mov
lods
dec
cmp
ss
push
sub
mov
inc
sbb
test
xor
mov
fimuls
fbld
push
icebp
out
or
mov
jnp
lcall
jmp
bound
std
pusha
test
inc
lock
xchg
stos
mov
mov
sbb
sub
mov
cmp
jo
into
adc
xchg
or
cs
lcall
sti
add
push
popf
sbb
inc
push
or
pop
cmp
repnz
pop
cs
mov
and
jecxz
iret
stos
cli
repz
push
cmc
lahf
xor
xchg
sbbb
negb
stos
outsl
cs
jp
lret
out
in
xchg
imul
les
lret
adc
ret
cmp
pop
lds
mov
les
leave
scas
stc
xlat
cmp
ss
sarl
fs
mov
insl
mov
or
sub
mov
push
call
test
xlat
addr16
cmp
clc
fldcw
sbb
pop
mov
mov
xor
aas
fs
mov
out
xchg
das
aas
xchg
int3
movsl
mov
std
xchg
les
imull
fmull
pop
jle
or
push
mov
push
popf
bound
sbb
push
fs
inc
jge
adc
lahf
cmp
fsubl
mov
jle
add
daa
pop
idivb
dec
out
push
mov
fsubr
inc
jb
mov
in
and
repnz
ljmp
lock
gs
jmp
push
xor
aaa
shl
add
aam
sub
nopl
out
ljmp
cwtl
fnsave
mov
arpl
xor
lods
cli
movsl
mov
mov
or
xchg
sbb
jbe
sub
adc
xchg
das
mov
jle
dec
arpl
pushl
sbb
leave
dec
inc
ss
jle
insb
fcoml
aad
inc
xchg
jno
dec
push
pop
stc
inc
insl
push
sbb
inc
gs
jecxz
and
fcoml
add
mov
mov
push
push
aas
or
int3
push
xor
xchg
es
push
aas
fimuls
repz
pop
sub
cs
xchg
popf
mov
mov
inc
sbb
js
pop
mov
and
outsb
cmpl
cmpl
jo
mov
add
negl
mov
ret
das
outsl
and
cmp
loopne
fisubrs
je
xchg
mov
in
mov
lret
les
sar
adc
sbb
sbb
bound
out
xchg
aaa
adc
pop
cmp
add
ss
pop
cltd
mov
pop
mov
cmc
jmp
cld
fnstenv
ret
lds
in
dec
pusha
lds
inc
lds
popf
in
cmp
and
mov
xor
xlat
pusha
test
sub
lret
mov
jl
insl
fwait
test
pop
aas
push
sub
mov
inc
movsb
ss
mov
mov
aad
xchg
fsub
pop
nop
popa
iret
sahf
aam
ljmp
pop
fwait
pop
fsubrl
jns
jns
dec
ss
rcll
lcall
fsubr
shrb
cmp
mov
mov
jno
lahf
or
fstpl
shlb
mov
ficoms
leave
movsl
fcmovu
int3
into
leave
inc
sub
fwait
inc
jns
xor
loope
xchg
mov
movsb
dec
mov
and
gs
xlat
mov
jmp
lahf
inc
aam
lods
nop
jnp
decl
das
into
into
cmc
dec
inc
bound
clc
or
insl
fidivrs
dec
inc
or
inc
insb
fld
imul
arpl
sbb
insl
pop
sbb
in
shlb
jbe
repz
push
jne
jb
sar
jns
pop
jle
icebp
push
ljmp
inc
or
test
push
popf
scas
jb
rolb
cmp
and
inc
outsb
cltd
inc
cmp
jb
sub
mov
lret
lock
stc
aaa
pop
loope
cmpb
pop
stos
or
xchg
jnp
mov
aam
or
mov
pop
sahf
inc
xlat
in
inc
xor
fcompl
xor
cmpsl
xchg
dec
or
mov
fdivrl
and
out
ja
loopne
xor
xchg
mov
sbb
adc
add
mov
or
aaa
mov
xchg
pop
stc
fildl
xor
pop
jnp
enter
repz
sub
mov
push
and
cli
std
testb
scas
add
or
xor
sbb
sub
fldt
pop
jbe
jb
adc
mov
aas
lret
test
std
out
leave
jne
insl
mov
loope
adc
andb
out
int
dec
jge
lcall
rcll
sbb
adc
shlb
rcrl
les
mov
mov
jns
aas
and
cmp
jl
mov
sahf
push
cmp
sbb
adc
mov
xor
mov
adc
sub
xor
push
and
pop
call
inc
incb
cwtl
sbb
mov
sub
adc
mov
pop
mov
pop
insl
je
insb
xor
in
xchg
mov
cltd
mov
and
imul
repnz
push
inc
test
incl
cwtl
stc
cmpsb
jmp
loop
insl
lahf
loop
mov
pushf
sub
mov
loopne
pop
mov
pop
push
xchg
and
int
fldenv
sbbl
sahf
jns
and
cmc
xchg
cmpsb
enter
pop
mov
adc
sbb
sbb
jns
inc
gs
or
sbb
add
mov
xchg
popf
orb
xor
xchg
mov
cmp
loope
or
sub
add
lds
and
jno
jl
xchg
add
xchg
stc
pop
imul
out
loop
out
in
and
xchg
adc
inc
push
rolb
pop
test
jno
into
jmp
clc
gs
jb
mov
mov
adc
sub
call
popa
std
push
gs
test
sahf
into
sub
in
xor
call
mov
data16
adc
repnz
je
test
and
cmc
call
cmp
dec
sbb
enter
movsl
in
test
push
addr16
cltd
fs
inc
ljmp
aaa
int
adc
int3
in
cmpsl
push
loopne
aad
aas
sti
fisttpl
mov
pop
mov
fidivl
mov
aaa
mov
roll
inc
movsb
sub
movsl
pop
push
adc
pop
pop
dec
in
arpl
cmpl
sbb
inc
xchg
push
pop
cmc
inc
dec
repnz
inc
std
cmp
or
push
movsb
jp
and
add
inc
push
fwait
jp
and
mov
faddl
bswap
mov
test
sub
inc
jmp
lods
xchg
push
sbb
lret
mov
xor
and
sbb
fs
jecxz
lahf
add
xor
loopne
js
add
xor
xor
push
pop
jl
pop
imul
add
hlt
loop
rorl
scas
movsl
add
sbb
mov
ja
sahf
inc
xchg
je
dec
cli
mov
sub
jl
inc
cmp
enter
repz
hlt
mov
sahf
arpl
popa
push
inc
insl
jmp
decl
mov
clc
ret
scas
or
jno
dec
jg
add
jbe
xchg
jbe
insl
xor
hlt
dec
or
xor
sbb
sub
xchg
jecxz
inc
gs
mov
cld
incb
xchg
sahf
lock
jp
lcall
imul
adc
add
fdivs
sub
jb
in
xor
fs
faddp
xor
loope
sbb
stos
xlat
xchg
lea
bound
inc
or
push
pop
jle
mov
cmp
mov
arpl
jnp
or
mov
imul
scas
fstpl
lds
adc
sbb
adc
mov
jg
daa
sub
cltd
sbb
testl
mov
arpl
loope
pop
dec
stos
push
xor
cld
push
sahf
inc
es
sub
jge
pop
das
or
pop
mov
frstor
push
and
and
test
push
sbb
call
or
cmp
mov
rolb
jl
xor
lock
out
ret
pop
ret
sub
sub
mov
and
cmp
cmp
cld
mov
pop
add
xchg
ret
out
imul
pop
ret
pop
cmp
aas
and
addl
in
lods
je
cli
cmp
cmpsb
lods
push
sbb
inc
stos
cs
enter
sahf
in
idiv
out
pop
mov
or
rorl
sbb
ret
xor
jno
popf
cltd
lods
test
aad
xor
ret
in
fisttpll
shll
cld
imul
or
std
and
pusha
ret
dec
js
roll
mov
ret
das
daa
push
push
imul
mov
sahf
xchg
int3
sbb
jmp
out
shlb
mov
aad
and
sbb
and
ja
scas
sbbb
pop
pop
pop
dec
test
jge
inc
into
andb
xor
sub
shll
cmc
jo
shrb
scas
cmp
fstpl
in
inc
push
sbb
or
in
bound
out
pushf
push
push
xchg
stos
mov
loop
pop
daa
aad
jns
push
testl
shl
adc
and
movsl
jl
ljmp
mov
or
fisttpll
push
notl
push
aaa
notb
out
lret
and
pop
idivb
cmovg
inc
dec
xchg
movsb
xchg
sbb
xor
cmp
push
push
outsl
in
xor
pop
adc
sbb
pusha
xchg
ds
inc
or
movsl
in
nop
jnp
dec
lret
lret
pop
insb
aas
outsl
push
pop
js
fcmovnu
in
es
or
add
pop
add
mov
faddl
add
out
cld
dec
ljmp
mov
roll
adc
call
inc
mov
jge
movswl
xchg
mov
cmp
cmp
imul
aaa
jnp
cmp
je
push
sub
pusha
and
dec
adc
jle
mov
out
pusha
mov
icebp
push
ficoml
pop
mov
pop
sbb
and
subb
xchg
mov
push
test
lea
push
mov
ljmp
icebp
mov
cmpb
bound
imul
pushf
xlat
les
fmuls
jmp
push
sbbb
jmp
jno
sub
jae
leave
dec
filds
xlat
adc
in
in
outsl
xchg
rorl
push
sti
sti
mov
std
mov
fwait
inc
lret
fs
dec
push
fsubrs
icebp
inc
push
filds
dec
pusha
add
xchg
jno
jno
or
int
mov
dec
shlb
fs
enter
xor
dec
inc
adc
cmpsb
lds
out
out
sbb
leave
leave
xchg
das
out
sub
sub
mov
jno
icebp
popf
icebp
pop
xor
inc
out
sub
lock
jo
addb
mov
jp
jle
push
push
in
sti
sbb
pusha
adc
push
mov
xor
leave
insl
ss
out
xchg
xor
push
pop
cli
les
jo
xchg
push
inc
in
xchg
adc
shlb
aas
cs
jo
mov
push
pop
les
shll
scas
xor
mov
push
data16
les
xchg
hlt
or
mov
xchg
sbb
jns
popf
out
stc
iret
lea
xchg
popf
jns
or
adc
ret
inc
fwait
sub
mov
pop
xchg
outsl
es
sub
ds
test
dec
movsl
inc
je
xor
ds
inc
inc
mov
inc
cmp
jp
popa
lret
mov
and
cwtl
mov
aaa
inc
clc
or
mov
pusha
daa
sbb
inc
into
popf
ret
into
or
inc
or
mov
jp
lcall
and
aaa
popf
lcall
lea
or
jb
pushl
cmp
into
or
ljmp
jp
add
xor
jmp
and
stos
inc
mov
jne
cmp
mov
mov
aas
stos
mov
int
leave
lret
cltd
or
negb
bound
js
fadds
pusha
push
sbb
dec
push
add
jecxz
call
pushl
add
and
test
insb
xchg
mov
daa
pop
fs
jge
and
push
ss
aaa
std
inc
shl
movsl
insl
mov
jo
stc
jno
push
adc
pop
xor
popa
xor
pop
xchg
data16
lahf
push
add
xor
or
and
mov
mov
pop
jb
and
fadd
lock
not
push
cmp
arpl
lahf
int3
movsl
dec
mov
jg
data16
negb
aam
push
xor
sbb
ret
mull
imul
loope
fwait
mov
xchg
scas
inc
add
mov
call
sbb
inc
dec
add
pusha
cmp
bound
mov
dec
bound
leave
mov
jge
cmp
fisubl
aad
sahf
sbb
out
and
daa
cmp
aas
sbb
xor
mov
lock
fstpt
stos
enter
pop
cwtl
xchg
sahf
daa
pop
lret
mov
mov
and
enter
cmp
sbb
insl
stos
jmp
and
fists
push
sti
popa
dec
cs
fnstenv
aaa
lret
push
jno
mov
or
xchg
fisttpl
jbe
cmpsb
xchg
shrb
lock
push
movsb
int3
int3
sub
mov
xor
cmp
loop
int3
xor
mov
pop
clc
mov
adcl
sbb
mov
cld
out
jno
inc
mov
ret
pop
adc
adc
jle
mov
cmpsb
mov
into
add
lock
mov
hlt
jne
ror
test
and
aad
ror
mov
adc
ljmp
xchg
mov
cmp
pop
mov
pusha
jp
jg
aam
fstps
jbe
mov
jbe
push
cmc
shlb
xor
mov
fstl
orl
sahf
dec
sub
jae
cmpsb
adc
es
arpl
pop
add
lods
adc
fadds
cli
jns
iret
stc
dec
cmp
fcompl
iret
popf
push
aaa
pusha
jno
adc
or
and
push
fdivrl
dec
push
push
mov
mov
insl
ja
insb
sub
or
out
test
sbb
xchg
icebp
fadd
enter
sub
sbb
or
js
push
push
mov
orl
sarl
and
xor
add
adc
push
push
mov
cltd
mov
fadd
leave
sarl
sub
js
jno
pop
dec
js
mov
mov
icebp
fadds
adc
fwait
mov
or
sbb
or
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
mov
or
adc
out
cli
or
pop
add
add
pop
push
add
add
add
hlt
add
add
testb
add
add
insl
add
out
dec
add
add
in
gs
add
inc
add
add
sbb
sbb
xor
cmp
imul
rolb
add
add
add
add
add
add
mov
add
add
add
add
push
add
add
add
adc
add
add
add
and
add
add
add
xor
mov
add
add
pop
add
xor
mov
add
add
add
dec
add
js
pop
add
add
add
add
pop
add
xor
mov
add
testl
xor
sahf
add
pop
add
js
xchg
add
or
lds
cs
add
add
add
add
add
add
add
imul
add
and
jo
out
and
push
add
scas
add
add
pop
add
inc
add
add
push
add
add
add
add
add
add
add
add
add
and
inc
add
inc
add
add
add
ret
add
add
roll
add
add
testl
add
lret
add
xor
push
add
scas
add
add
js
cmp
mov
add
xor
add
and
push
add
add
add
pop
add
add
add
add
int
fiaddl
pop
add
add
add
add
add
add
add
ss
add
add
jns
cmp
lcall
add
inc
add
mov
add
add
testl
dec
add
add
add
add
add
add
pusha
add
push
add
add
add
push
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
call
add
push
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
sub
testb
add
add
push
add
add
add
add
ret
add
add
add
cmp
in
xor
inc
add
insl
add
add
xchg
add
add
add
add
add
add
add
in
pop
add
inc
add
pop
add
adc
add
test
adc
and
dec
add
push
add
add
add
sbb
mov
add
add
add
pop
add
inc
add
add
add
jnp
xor
xor
insb
add
add
add
add
add
add
pop
add
and
cmp
lds
pusha
add
add
push
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
lods
add
add
and
push
add
mov
add
add
add
add
push
add
add
add
cmp
cmpsb
add
add
add
repz
out
jle
lods
push
inc
adc
pushf
cmc
mov
sub
outsl
add
lcall
pop
xchg
cmp
lds
xor
inc
xchg
mov
je
jg
cmp
stc
mov
adcb
test
mov
mov
pop
cmp
jge
inc
cli
sub
rcrl
mov
mov
fwait
and
cmp
aaa
xchg
gs
mov
mov
jns
xor
and
divl
sbb
push
cmp
adc
leave
sbb
cltd
xchg
inc
roll
or
sub
out
movsl
pop
pop
mov
jl
xor
mov
mov
xor
in
loope
xchg
aaa
stos
mov
xchg
imul
out
shrl
inc
lds
xchg
adc
fwait
pusha
movsb
sbb
adc
shlb
mov
jnp
sub
push
int
pop
leave
xor
das
imull
cmc
pushf
cld
lods
adc
xchg
mov
fidivrs
pushf
xchg
ljmp
xor
or
addl
scas
lock
mov
lds
call
in
clc
cmp
jns
ret
sub
mov
ret
pushf
test
sub
dec
pop
cmpsb
lock
dec
dec
inc
xor
cmc
push
imul
xchg
xor
cmpsl
hlt
mov
fcoml
jmp
jb
mov
sub
mov
ja
xorl
in
push
adc
pop
jmp
sbb
jge
sbb
or
fdivr
push
dec
push
sbb
jl
shrb
cmp
mov
stos
inc
fs
shrl
cs
jmp
mov
test
jmp
pushf
mov
dec
mov
dec
sub
pushf
ret
es
les
or
sahf
pop
je
push
jno
jmp
in
data16
sub
repz
jl
or
mov
adc
sbb
cltd
pop
in
add
subb
xor
sub
aaa
xorl
rorl
aaa
xor
dec
pusha
popf
loopne
fimuls
fsubrs
xchg
pop
insl
mov
cmovno
push
fs
fldcw
mov
pop
into
mov
leave
cmp
mov
sbb
push
xchg
divl
mov
xchg
jg
cwtl
cs
das
adc
pop
out
jne
xchg
push
and
push
arpl
push
jno
and
mov
ficoml
fdivrs
in
pop
aam
xchg
cmpsb
push
test
cli
or
out
adc
lret
int3
and
inc
xchg
int
mov
sbb
shll
xchg
or
jge
inc
sbb
mov
mov
aam
gs
sub
sub
xor
dec
pop
jno
in
nop
idiv
mov
nop
add
mov
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
