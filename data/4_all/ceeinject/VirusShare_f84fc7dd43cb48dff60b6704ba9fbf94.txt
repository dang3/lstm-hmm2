call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
sbb
push
fbld
jbe
sbb
gs
or
adc
pop
aas
xchg
mov
outsl
mov
push
push
lahf
push
scas
jbe
push
iret
push
fbld
out
ss
pop
andb
aas
xchg
pop
cmpsb
outsl
mov
pop
sub
jle
outsb
leave
pop
decl
xchg
ds
int
paddusw
dec
orb
fstpt
aad
fistps
ss
push
fisubrs
cld
sbb
push
shr
adc
test
loopne
insl
sbb
repnz
push
scas
nop
mov
pop
data16
rcr
push
adc
add
lock
sbb
sti
outsl
cmp
add
cmp
lret
out
das
divb
xor
movsb
les
sub
mov
or
jns
shll
xchg
popl
xchg
add
into
das
ss
mov
add
shl
nop
pop
add
push
add
cld
fidivs
cs
sub
dec
repz
test
and
dec
repnz
jo
pusha
sub
sti
outsl
mov
lahf
sbb
dec
sbb
notl
daa
xchg
inc
xorl
data16
push
iret
or
es
das
insl
fisttps
into
mov
sub
mov
xor
ret
adc
bound
mov
lcall
xchg
mov
xor
sbb
push
inc
leave
push
flds
fdivl
popf
js
dec
xchg
les
push
jge
pavgw
in
or
jg
ret
jbe
jle
push
fbld
out
ss
pop
out
idivb
xchg
pop
cmpsb
outsl
mov
inc
push
lahf
scas
jbe
push
iret
push
fbld
out
ss
pop
out
idivb
xchg
pop
cmpsb
outsl
mov
inc
xchg
leave
aas
rcrb
push
sub
outsb
shr
movsl
sbb
es
aaa
sbb
mov
xchg
ret
test
shrb
outsl
in
ret
xor
pop
jo
lods
subb
sub
cmc
mov
jne
xchg
call
xor
lret
ss
push
and
shl
push
add
mov
cmpsb
push
loop
or
push
gs
lret
xchg
xchg
ss
jle
cs
mov
insb
add
jns
sbb
and
jnp
dec
push
inc
sub
fwait
jecxz
jnp
xchg
cwtl
out
jp
insl
fdivrl
dec
cmp
arpl
xorb
movsl
clc
jl
pop
stos
and
dec
mov
sub
and
pop
sbb
push
mov
arpl
mov
mov
enter
or
and
cmp
test
fcompl
add
push
std
cmp
mov
movsb
jns
cmpsb
and
es
mov
add
dec
hlt
popf
clc
add
lcall
test
sbb
hlt
ljmp
in
cmpl
mov
xor
jmp
xchg
jmp
xchg
sub
pop
or
mov
fwait
xor
xchg
cmpsl
jp
mov
push
cmp
sub
rcrb
lahf
cmpsb
sub
lods
mov
test
js
and
mov
std
push
in
push
or
jge
int
test
repz
or
fdiv
or
push
push
cld
and
dec
pop
stos
fs
and
fdivr
out
xorb
cwtl
and
dec
lods
imul
mov
pop
mov
fsubr
call
mov
sarl
scas
cld
out
cmp
aad
ret
insb
outsb
push
pop
into
ret
pop
adc
mov
xchg
jne
daa
into
sti
mov
xchg
jmp
repz
sahf
lahf
mov
inc
adc
or
jns
arpl
iret
mov
mov
cmp
mov
test
push
cmp
inc
sbb
push
sbb
dec
inc
add
outsb
push
jp
sbb
mov
push
mov
in
loopne
dec
fwait
notl
stos
shrl
inc
inc
test
mov
inc
and
rcrb
es
jl
negb
mov
push
jb
add
sub
jae
leave
and
xchg
aas
sbb
xor
pop
pop
and
pop
adcb
push
cmp
mov
imul
rcrb
xchg
or
ds
xor
xchg
cs
inc
testl
mov
jecxz
cmp
ret
in
mov
cmp
les
iret
xchg
push
mov
inc
js
sbb
sbb
andps
add
push
inc
mov
adc
push
aaa
lahf
jo
in
fidivrs
dec
mov
mov
mov
xchg
inc
loop
push
nop
xor
and
push
insl
mov
enter
inc
orl
aam
add
mov
and
inc
and
and
cmp
jmp
cmc
sbb
push
or
jns
add
sbb
ret
add
adc
jmp
imul
cmp
aam
jnp
lods
xchg
ret
mov
ds
or
cmc
loop
mov
rolb
dec
movsl
push
in
cli
mov
sbb
ror
pop
rcrb
push
mov
mov
aas
rorl
dec
fsts
out
push
rclb
or
jno
add
xorl
filds
test
in
loope
inc
or
stc
or
mov
mov
mov
mull
iret
mov
icebp
testl
insb
mov
jp
mov
xlat
pushf
stos
or
pop
add
shr
add
out
fwait
push
pop
xchg
cwtl
shlb
mov
outsl
insb
pop
jmp
cmpsl
jno
sbb
dec
orl
add
inc
lods
xor
push
dec
fidivl
icebp
cmc
bound
insw
cmp
jge
mov
push
and
sbb
xor
mov
push
cmp
imul
dec
cmp
inc
aaa
pop
inc
stos
push
lret
pop
pop
addr16
jno
mov
inc
lds
mov
clc
imul
sub
mov
flds
add
mov
test
add
jg
shlb
out
movsb
pushf
pop
add
push
mov
inc
pop
sbb
add
add
addr16
push
adc
je
sti
insl
sub
ja
cs
insl
rcr
mov
push
xor
and
xchg
lret
mov
inc
shl
out
ret
lock
loope
adc
cwtl
xchg
adcb
dec
jae
in
insb
sub
cld
mov
je
cmp
or
dec
enter
pop
addl
and
dec
loop
push
pop
or
mov
sub
dec
nop
sub
std
lock
hlt
shlb
stc
pop
jb
cwtl
sbb
shll
add
jns
pop
cmp
cmc
sarb
mov
adc
pop
lods
jae
fcompl
or
inc
andb
loop
mov
sbb
fadds
int3
dec
in
push
adc
fnstsw
mov
add
pop
rolb
fistl
cmpsl
adc
pushf
push
fldl
incb
pop
fsubr
mov
and
pop
mov
add
mov
sar
sub
insl
lret
hlt
sub
lea
outsb
jno
cmp
sbb
push
jge
nop
insl
into
adc
leave
adc
jno
mov
loop
ss
pop
sti
inc
xor
in
add
cmc
pusha
gs
inc
and
hsubpd
push
push
or
and
push
pop
push
imul
lcall
cld
mov
push
or
loop
cmpsl
sti
mov
or
stc
inc
dec
movsb
jnp
movsl
stos
aad
mov
lret
inc
fsubrs
lods
pop
lcall
ret
inc
pop
or
mov
sbb
lock
leave
jbe
std
cld
fidivl
loopne
push
rorb
xchg
fldcw
jp
cmp
rcr
aaa
pusha
inc
push
inc
std
mov
and
mov
gs
push
loop
lods
mov
aaa
popf
mov
jno
inc
push
xchg
shlb
add
jno
dec
push
ret
push
cmp
pusha
fistl
xor
scas
out
out
jle
cmc
mov
dec
xor
cmpsb
mov
bound
sub
cld
addr16
mov
test
test
cmp
pushf
in
push
test
push
or
stos
cmp
mov
and
out
enter
insb
lret
mov
insb
test
mov
in
add
mov
js
cs
call
mov
mov
dec
jns
es
dec
outsb
arpl
add
mov
mov
cltd
movsb
xlat
or
nop
adc
cmpl
sarl
mov
and
pop
mov
mov
adc
fiaddl
subb
jb
mov
mov
push
xor
xchg
xor
inc
stos
lods
and
cld
sahf
jbe
fsts
dec
cmpsb
jecxz
stos
cmpsl
popf
mov
filds
fs
int3
mov
push
xlat
cmp
test
fdivr
mov
ja
adc
mov
jae
push
fcoms
jb
xor
sub
jg
push
add
into
mov
and
push
dec
lret
sbb
bound
jb
arpl
or
xor
jbe
lods
in
mov
test
push
mov
test
mov
cld
fmuls
daa
push
int3
orb
dec
jmp
or
pop
sbbb
iret
fldl
rorl
rolb
popf
pop
or
adc
mov
push
arpl
loope
sub
negb
imul
rclb
mov
pop
pop
sbb
fs
cltd
sarl
pop
push
sbb
dec
mov
push
loop
jb
fiadds
fwait
aaa
or
push
pop
lods
xor
cmpsl
lahf
add
dec
loope
sub
mov
scas
adc
dec
movb
popa
int3
int3
dec
jno
xorb
xorb
pop
adc
mov
mov
sub
out
fistpl
repnz
push
ret
jno
or
sbb
repz
jge
clc
orl
movsb
mov
jb
add
mov
ds
aaa
out
repnz
icebp
jae
adc
xchg
jecxz
mov
add
push
cmpl
fsts
test
or
lret
mov
add
xchg
mov
jl
imul
bound
scas
pop
inc
lahf
out
xchg
fmul
mov
arpl
in
cmp
mov
or
pop
adcl
adc
cs
mov
inc
xor
mov
adc
sub
stos
xchg
cmp
leave
jle
cmp
movntps
test
ret
sub
mov
dec
jle
or
fists
push
std
push
sbb
pop
push
sahf
pop
mov
push
pop
adc
xor
or
sbb
pushf
sub
push
mov
cmp
loope
add
subl
mov
adcl
cmp
mov
adc
jns
std
imul
outsl
lock
stos
mul
sbb
filds
mov
adc
cmp
mov
or
bound
jbe
cs
mov
cwtl
push
and
fiadds
sbb
movsl
arpl
xor
insb
aam
mov
or
cli
in
lods
mov
test
dec
test
iret
scas
push
rcll
je
cmp
push
cmp
into
dec
sub
xchg
call
xor
xchg
jmp
les
stos
jle
ficomps
gs
je
or
insb
and
in
mov
jmp
inc
adc
inc
cld
addb
adc
cmpsl
and
push
dec
call
mov
xor
addb
jp
mov
mov
and
mov
out
pop
js
push
lods
repz
ficoms
jge
loop
dec
shlb
inc
or
add
add
fstps
add
cmp
orl
scas
push
ja
in
rcll
iret
mov
je
cmp
js
xchg
and
ss
orl
pop
lock
cs
movsl
mull
icebp
out
xchg
stos
pop
and
in
xchg
mov
outsb
test
jmp
push
and
roll
cmp
push
jno
ljmp
lds
gs
inc
sub
xchg
stos
nop
sti
shr
out
mov
inc
ret
push
dec
pop
mov
scas
adc
dec
lahf
mov
stos
mov
movsb
jle
movsl
out
push
into
adc
jle
jge
cmp
sbb
lret
lea
xor
or
inc
mov
fisttpl
pushf
shrb
fidivs
xchg
aas
mov
ds
or
out
scas
lahf
in
xchg
cltd
div
outsb
and
mov
sub
jle
or
adc
test
fs
fstpl
ret
jmp
hlt
out
scas
lods
or
imul
or
sub
cmp
sub
mov
fisttpll
lcall
or
out
xchg
imull
mov
js
jge
hlt
cli
cld
mov
insl
mov
jb
adc
loop
mov
mov
and
push
xor
pop
dec
ljmp
out
aad
popa
push
pop
popf
xchg
std
lods
mov
cmp
push
aaa
loope
je
inc
insb
repnz
ss
sub
jl
fidivrs
cmc
and
push
or
jbe
icebp
sti
cmp
mov
mov
mov
lret
arpl
mov
testl
insl
aam
mov
sub
adc
add
and
jb
dec
call
push
mov
lret
mov
movsb
dec
into
sub
jp
adc
lcall
add
mov
sbb
or
inc
loope
aad
sbb
dec
inc
movsl
das
mov
mov
sbb
aaa
shl
mov
sbb
push
and
arpl
jno
sbb
out
push
fistps
cwtl
sub
mov
xorl
jg
pushf
add
inc
mov
icebp
test
shl
mov
pop
lock
cmp
jno
cmc
xchg
sti
dec
cwtl
mov
popa
int
gs
jmp
jp
outsl
mov
mov
test
mov
rclb
jb
xchg
mov
jnp
hlt
lahf
sarb
xor
xchg
pop
clc
enter
dec
jmp
gs
rolb
push
mov
mov
inc
mov
inc
xchg
inc
movsl
test
addr16
mov
mov
adc
stos
daa
pop
pop
sub
es
test
sub
cmp
xlat
repz
jmp
in
add
xchg
lods
mov
push
add
adc
aad
sbb
jmp
repz
xchg
dec
jo
add
out
loop
pop
aaa
push
xchg
in
ficomps
xlat
int3
xlat
jmp
mov
push
cmp
les
sbb
andl
sub
int
xlat
push
jge
aam
inc
xor
test
jle
push
fnstenv
into
push
dec
or
fcompl
xor
stos
rol
outsb
divl
mov
ja
std
pop
icebp
xchg
pop
xchg
push
ret
push
cltd
xor
cmp
shl
icebp
lock
adc
roll
dec
jne
jge
pop
jbe
shr
pop
mov
int3
jbe
push
mov
int3
sbb
push
pusha
push
negb
bound
pop
adc
int
insb
sub
fstl
or
xor
inc
mov
mov
jecxz
mov
dec
adc
jae
pop
sbb
cmpsl
arpl
rcrl
scas
jge
test
jl
mov
push
test
cli
pop
rorb
leave
mov
add
repnz
or
push
xchg
inc
fdivrl
stc
lds
jae
mov
fmull
test
jo
dec
mov
lock
stc
iret
mov
popa
xor
icebp
std
adc
push
mov
sarl
jo
xor
mov
pop
ljmp
push
cmpsb
daa
xchg
adc
imul
cmp
or
add
jg
icebp
js
xor
inc
push
mov
lret
cltd
cmp
sbb
int
loope
sub
rolb
out
jmp
dec
mov
inc
xor
sbb
push
mov
loop
ret
orl
mov
sbb
call
mov
jg
stos
bound
cmc
fiadds
cld
xchg
pop
or
dec
mov
push
aaa
movsl
nop
arpl
pusha
mov
ja
sbb
ds
mov
inc
das
jl
fsubl
ret
nop
dec
cmp
push
outsb
lahf
and
mov
pop
cmp
xchg
mov
inc
pop
je
or
xlat
cli
fcoml
shlb
dec
clts
mov
sbb
das
les
mov
mov
push
loope
into
xchg
pop
add
rol
jmp
fadd
fs
jno
shlb
xor
mov
mov
mov
pop
xchg
icebp
ror
mov
sub
stos
pusha
xchg
adc
and
das
pusha
pop
pop
adc
push
rclb
lcall
roll
xor
in
loopne
outsb
ret
int
mov
mov
mov
sahf
xchg
outsb
add
lret
pop
mov
or
pushf
cmc
data16
imul
repz
dec
xchg
int3
pop
cmp
push
imul
add
scas
shl
mov
xor
jo
fisubrs
aas
xor
lret
jge
push
shrl
and
subb
cltd
rorl
add
xlat
push
inc
mov
push
in
call
shl
xchg
popl
sub
js
test
xchg
xchg
mov
in
push
sbbb
mov
out
pushf
fs
push
sahf
mov
jecxz
test
popf
fwait
pop
mov
add
pop
mov
aam
mov
mov
mov
push
push
xlat
test
sub
cmp
mov
clc
sub
add
mov
notl
test
jo
loop
pop
cmp
in
imul
jge
cmc
jnp
xchg
adc
mov
sbb
jns
or
pop
bsr
mov
xchg
arpl
loopne
xchg
insl
xor
stos
test
aaa
call
cmpsb
dec
push
loop
pop
rcr
gs
insb
push
rol
sbb
cld
sub
or
sbb
xor
push
imul
jmp
mov
cli
mov
or
push
int3
jl
movsl
shll
mov
cmc
addl
mov
aaa
cli
mov
or
ficoml
push
mov
pop
jo
aas
mov
pop
fnstcw
sub
nop
mov
add
je
insl
sbb
pop
inc
jmp
outsw
insb
pop
int3
cmp
jo
jge
in
xchg
push
loope
cmp
push
mov
clc
push
in
cmpsl
add
jecxz
loopne
test
lods
cmp
push
addr16
mov
addb
pop
aam
lods
scas
inc
sbb
or
repnz
and
rcrl
test
lcall
jno
in
jbe
xchg
and
sbb
mov
xor
mov
push
out
mov
rorb
lcall
repz
sbb
and
icebp
lahf
cmc
jne
pushf
sub
mov
in
mov
repz
je
pop
jb
sarl
and
push
mov
sbb
mov
cld
inc
out
fstl
sbb
lock
or
sbb
insb
or
and
jne
push
test
mov
lcall
inc
push
lea
push
push
test
inc
or
xchg
icebp
iret
xor
jmp
add
or
lret
cli
add
clc
jle
pop
jmp
dec
iret
or
cltd
dec
inc
fcmovne
pop
adc
stc
sbb
aad
scas
in
xlat
push
mov
mov
out
xchg
enter
pop
xor
pop
fcompl
ret
pop
iret
adc
dec
xor
push
inc
xchg
ds
pop
nop
push
imul
pop
fcmovnbe
fimuls
int
icebp
lock
dec
adc
push
pushf
dec
ss
iret
mov
add
gs
xlat
jecxz
mov
dec
lcall
in
push
pushf
mov
lret
clc
mov
test
loopne
dec
mov
cmp
addr16
outsl
int
fnsave
jle
stos
fcmove
mov
mov
std
mov
and
mov
jg
ficoml
inc
jbe
lret
sub
ljmp
xor
rcl
popf
push
mov
push
int
ficoml
xor
push
stos
xchg
push
jne
lcall
jnp
int
les
jno
push
rclb
adc
cmc
dec
dec
cmc
mov
in
mov
daa
xchg
inc
jbe
ja
std
cmp
pusha
or
or
jl
fcomp
dec
mov
xor
xchg
xchg
jge
push
mov
adc
add
mov
jo
mov
mov
enter
and
mov
scas
mov
inc
ficompl
push
sti
int
push
lret
rcll
pop
cwtl
seta
stos
dec
shl
mov
imul
xchg
fwait
xchg
cmpl
aad
xor
mov
mov
fdivrp
jae
jecxz
cltd
cmp
cmp
jl
and
lahf
cmpsl
fcomps
xlat
xchg
pusha
sbb
nop
aaa
push
mov
int3
pop
xor
imul
pushf
scas
or
lds
lret
dec
cli
xchg
les
int
pop
cmpsl
popf
jmp
rcll
daa
pop
push
push
aam
push
push
stos
lret
in
push
mov
pop
call
imul
es
xor
jmp
lret
fs
dec
jp
pop
dec
add
jg
pop
movsl
out
mov
je
dec
lret
fnstenv
mov
icebp
push
xlat
addr16
fldcw
lock
mov
ds
mov
jecxz
ret
sub
insl
popa
jecxz
adc
pop
aad
ficoml
sti
dec
mov
mov
mov
and
popa
fucomi
cmp
add
in
pop
cmp
adc
jno
or
aad
cwtl
sub
xchg
mov
push
out
clc
add
add
daa
ss
and
push
push
mov
js
or
jmp
adc
fwait
or
in
cs
dec
or
mov
aaa
imul
test
jge
or
sub
fstpt
out
xchg
hlt
fs
int
push
and
add
sub
mov
push
push
aam
push
and
in
inc
mov
imul
adc
push
inc
imul
lea
loop
test
inc
xchg
cmpsb
inc
repz
fiadds
jecxz
xchg
shrl
inc
inc
and
and
outsl
mov
pop
sub
pop
int
jnp
pop
xor
push
insb
pop
xchg
xchg
pushf
ret
cltd
push
push
push
inc
leave
cmp
fldcw
push
and
cld
xchg
jmp
int
adc
shll
pop
mov
dec
xlat
movsl
add
pop
sub
sbb
mul
xorl
jbe
push
iret
push
fbld
out
ss
pop
out
idivb
xchg
pop
cmpsb
outsl
mov
inc
push
lahf
scas
jbe
push
iret
push
fbld
out
ss
pop
out
idivb
xchg
pop
cmpsb
outsl
mov
inc
mov
data16
mov
es
inc
push
sbb
das
divb
xchg
pop
cmpsb
xchg
push
dec
jbe
push
iret
push
fbld
lock
icebp
aaa
push
daa
pop
pop
dec
pop
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
fisttpll
std
insb
in
adc
dec
lods
fsubrl
dec
cld
imul
cmpb
int
std
insb
in
sbb
or
cmp
sub
fcoml
dec
mov
insl
pushf
outsl
mov
mov
les
in
cmc
sbb
or
cmp
sub
fcompl
outsb
popl
sbb
push
out
jns
dec
ret
xchg
dec
mov
pop
push
or
mov
xlat
inc
push
xchg
add
mov
xchg
ret
xlat
inc
mov
loope
ss
mov
inc
ficoml
mov
imul
movsb
inc
cmpsb
mov
in
inc
push
sbb
lock
dec
add
xchg
fnstcw
dec
xor
add
mov
ret
sub
mov
lret
and
mov
cmp
push
add
pop
pop
clc
cmp
mov
gs
pop
mov
mov
add
int
ret
mov
cmpsb
daa
add
test
in
mov
lret
jl
insb
in
sbb
or
cmp
sub
fcompl
push
cld
fs
je
add
lods
sub
frstor
mov
inc
in
pop
shrl
popf
xor
dec
lahf
jns
or
js
psubb
inc
pop
mov
movsb
sub
or
cmp
sub
mov
sbb
or
xor
cltd
insl
test
scas
or
cmp
sub
fcompl
dec
cld
jge
insl
pushf
sbb
lods
sub
jl
insb
in
sbb
or
cmp
sub
fcompl
dec
cld
jge
insl
pushf
sbb
lods
sub
jp
out
push
mov
mov
les
cmp
jo
xor
clc
enter
sub
push
jle
stos
lock
xlat
xorl
dec
je
pop
sbb
adc
and
dec
out
rol
xor
mov
lret
iret
movsb
js
fxam
int
push
int3
outsl
orb
cli
pusha
jbe
jnp
cs
adc
fldenv
test
dec
mov
xchg
and
insl
dec
adc
mov
out
inc
inc
es
call
fsubs
and
pop
cltd
pop
inc
push
stos
cli
fdivrl
pop
gs
mov
inc
dec
icebp
pop
dec
pop
leave
mov
xor
sub
mov
mov
jb
lods
xchg
cmpsb
xor
gs
mov
push
add
das
xchg
mov
loope
dec
shrb
xchg
xchg
xor
clc
push
jo
add
jge
mov
cltd
pop
jo
lcall
push
cltd
stos
jo
cmpsl
inc
in
popa
cmp
loopne
sarl
push
cld
nop
mov
shl
cmp
sbb
inc
pop
mov
jne
sti
mov
jmp
jle
pop
adc
je
cmpsl
sub
ror
sbb
mov
push
or
adc
jmp
push
int3
pop
cld
sbb
xor
cmp
nop
or
push
repz
imul
jg
pop
inc
adc
enter
jo
jge
xor
out
in
xchg
lahf
dec
sar
sbb
xchg
sbb
pop
shl
into
push
test
mov
loopne
mov
cmp
mov
dec
mov
or
sub
xlat
mov
insb
mov
cwtl
decb
or
jb
jle
icebp
aas
loope
pop
xorb
xchg
and
sahf
mov
divb
in
mulb
mov
sbb
adc
mov
push
push
insl
cmp
jb
lods
cmp
aad
pop
pop
push
mov
and
mov
dec
test
sub
jg
mov
or
adc
sbb
fwait
lcall
fidivrl
cwtl
xor
xlat
xor
pop
pop
arpl
jo
es
std
push
jg
insb
mov
xlat
dec
cmp
test
xchg
jo
cmp
repnz
mov
repnz
and
push
or
movsl
clc
xchg
test
cmp
lret
adc
xor
movsb
cmp
out
mov
out
addl
mov
int
cmp
mov
adc
popl
push
loopne
imul
fnstsw
jb
fdivs
outsb
dec
cmp
outsb
mov
nop
cmp
mov
cltd
movsl
lock
xor
mov
int3
ja
leave
xchg
flds
sbb
repnz
sahf
rclb
jmp
cs
pusha
mov
inc
dec
int
push
cwtl
loope
add
fdivrs
les
stos
roll
inc
cmp
jecxz
rcrl
and
mov
scas
hlt
sti
shl
dec
lcall
movsb
andl
es
jmp
not
mov
int3
cwtl
je
rcll
pop
iret
jmp
jge
cmpsb
mov
aas
stc
mov
fwait
iret
mov
fs
scas
xchg
insb
lea
mov
or
xchg
dec
adcb
adc
aas
jle
mov
pop
inc
jge
repnz
xchg
scas
xlat
lods
mov
icebp
cltd
xor
mov
push
cltd
xchg
int
jge
lret
mov
xchg
xor
dec
clc
popa
mov
adc
shll
inc
test
mov
xor
int3
out
int
in
es
lcall
fsts
outsb
sbb
adc
cmp
fdivr
inc
jecxz
into
scas
bound
js
push
mov
adc
cmp
pusha
adc
push
mov
mov
pop
stc
inc
arpl
pop
add
shll
inc
cmp
cld
in
popa
shll
outsb
sbb
loope
xor
mov
insb
fwait
mov
mov
sbb
adc
lahf
ljmp
inc
ss
andl
in
cmp
adc
pop
push
adc
or
pop
fdivs
stos
push
xor
not
mov
push
cmp
jp
ja
inc
das
xorb
mov
mov
xchg
mov
and
je
mov
xor
jmp
fildl
popf
in
push
mov
ret
cmp
dec
jae
sete
lds
jnp
data16
add
mov
bound
in
sbb
fisttps
xor
cmp
int3
cmc
jbe
ficomps
jl
jae
loop
pushf
push
mov
push
enter
dec
sub
fmull
fbstp
add
stc
and
in
nop
fs
popf
inc
or
adc
push
push
sub
sub
aas
rolb
pop
loop
xor
mov
jg
cmp
dec
lcall
cmc
adc
fdivrl
push
stos
cmp
repnz
outsb
cmpsb
pop
or
mov
pop
jbe
pop
sahf
xor
cwtl
aaa
mov
pop
push
imul
jl
mov
stos
arpl
or
mov
mov
mov
mov
add
sbb
xor
lcall
addr16
fs
test
icebp
pop
inc
lds
mov
sub
dec
mov
imul
insb
cmp
and
nop
dec
in
mov
mov
sbb
imul
call
sub
sbb
int3
add
xchg
and
mov
shlb
push
mov
xchg
insb
lds
xor
icebp
mov
lods
push
in
mov
push
mov
lret
popa
jge
cmpsl
mov
aam
pop
pop
sub
sub
cmpsb
das
push
fildll
movl
sahf
xor
xor
in
mov
sbb
in
cmp
imul
xchg
dec
imul
mov
inc
loop
insb
movsb
mov
mov
std
add
adc
pop
pop
sub
inc
arpl
jmp
scas
out
mov
nop
ljmp
in
insb
aas
mov
bound
push
inc
movsl
add
push
popf
clc
xchg
int
inc
xor
and
xor
or
orl
dec
sbb
pop
mov
inc
cmp
cwtl
sub
jmp
jns,pn
add
das
adc
fs
push
jo
dec
cmp
inc
mov
xchg
jg
inc
xorl
sub
cmpsb
dec
mov
lret
xor
dec
xor
lahf
or
pop
std
fsubs
stc
rorl
fiaddl
xchg
out
mov
pop
xchg
adc
stos
je
imul
sbb
es
and
mov
inc
data16
push
mov
ss
sbb
jns
xchg
lods
sub
add
add
xor
out
daa
rep
push
mov
xor
mov
push
cmp
nop
sar
lods
xchg
dec
adc
shrb
jne
into
popf
call
add
or
insb
bound
adcb
repz
or
jo
insl
add
push
shll
ficoms
sbb
jmp
sahf
jmp
call
ljmp
pop
das
mov
shlb
jnp
add
and
into
or
and
jge
inc
push
out
andb
fisttpll
xchg
push
cmp
std
or
in
cmp
mov
sbb
jae
shlb
inc
sub
xlat
or
or
push
sbb
pop
dec
push
cld
add
and
aam
into
lcall
mov
jnp
push
jle
and
and
imul
sub
into
lods
jb
push
jo
or
dec
jae
jp
loopne
inc
jle
pop
jg
mov
push
xchg
shlb
adc
inc
xor
rorb
pop
dec
sbb
les
jne
jbe
jmp
push
fmull
sarb
mov
dec
int3
pop
iret
sbb
xor
cmp
sub
mov
mov
sbb
sbb
inc
popf
cmpsl
sti
in
or
scas
lcall
dec
or
adc
adc
sbbl
xchg
cmc
pop
lods
and
mov
lods
sub
and
mull
insb
leave
mov
lds
mov
jne
sub
jne
xchg
ljmp
pop
in
mov
ljmp
mov
rcr
out
pop
pop
xor
in
add
mov
subb
ret
dec
sub
lods
testb
pushl
cmp
mov
lds
cmp
nop
jmp
enter
push
or
gs
outsl
lods
inc
aad
mov
std
repnz
ret
roll
mov
scas
clc
cs
ret
jle
mov
rolb
ja
adc
scas
lret
aas
pop
and
lret
arpl
push
stc
sysexit
hlt
insb
and
loope
inc
push
adc
or
outsb
pop
test
pop
fldenv
popa
cmpsb
xor
push
aaa
lea
icebp
pop
push
scas
xor
mov
inc
movsb
rcrb
mov
rcll
out
mov
sbb
mov
jg
stc
fwait
push
sbb
mov
add
adc
sub
outsl
loopne
dec
jo
and
test
cwtl
push
mov
aas
inc
sarl
cmpsl
scas
mov
pop
lret
pop
xchg
movsl
mov
arpl
xlat
cmp
push
cmp
xchg
lret
test
lock
sub
inc
fs
lock
lcall
gs
out
sub
adc
xchg
xor
daa
adc
pop
sub
int3
xchg
mov
repnz
popa
fwait
pop
inc
mov
pop
insb
lea
cltd
mov
cmp
mov
cmpsl
cmpsb
adc
jnp
jl
testb
mov
roll
xor
leave
ss
mov
jbe
xor
enter
out
frstor
jge
xor
addr16
lret
adc
in
fldl
cs
jp
cmp
mov
add
cmp
scas
jl
pop
scas
sub
xor
shl
ja
inc
or
xor
insb
adc
int
lods
jge
pop
sbb
inc
adc
cmp
repz
ss
gs
pop
mov
and
push
or
jp
negl
jg
cmpsb
pusha
mov
jae
out
inc
call
cmp
bound
lcall
stos
inc
stos
test
xor
lds
push
lods
dec
nop
cld
dec
pop
jnp
push
inc
and
jne
and
sub
fisubrl
adc
ja
loope
push
sub
test
sub
stos
pusha
data16
push
jne
adc
cltd
pop
repnz
in
mov
pop
jle
lock
movsb
jnp
xor
std
pushf
mov
push
xchg
lds
jns
outsl
push
or
or
das
cmc
adc
addr16
outsb
push
rclb
adc
pop
fwait
add
fldenv
push
mov
push
aam
arpl
cmp
cmp
jle
out
mov
pop
mov
push
or
inc
lahf
sbb
jp
sti
push
arpl
fistl
pop
pop
xor
lret
pop
adc
inc
lock
jbe
sbb
push
pushf
mov
mov
fbld
dec
test
dec
mov
loope
cmp
cmp
fsub
mov
ret
sub
xchg
inc
roll
mov
sub
roll
stc
xor
testb
lea
xlat
gs
sahf
scas
xchg
insl
aam
push
and
add
fidivl
adc
add
jne
sbb
lret
lahf
jb
sbb
ret
sub
sub
loop
clc
push
fistpll
lea
jo
test
jbe
dec
mov
xor
push
push
mov
shlb
mov
pusha
fwait
jo
dec
lcall
xor
xor
mov
sbb
jae
or
push
in
sub
scas
mov
in
scas
or
push
daa
or
leave
push
cmp
push
andl
xor
loop
stc
int
iret
cmp
pop
adc
bound
arpl
out
mov
mov
xor
sbb
sbb
sbb
jns
jbe
dec
cltd
adc
fxch
test
outsb
cwtl
sbb
arpl
std
mov
nop
insl
xor
loopne
aas
insl
mov
dec
daa
push
sbb
nop
mov
dec
pop
pop
outsl
push
mov
xor
adc
pop
adc
iret
pop
in
cmc
push
jge
pop
cld
aaa
xor
inc
insb
inc
cmp
pusha
repnz
pop
cmp
pop
cmpsb
xchg
mov
popl
sbbl
adc
out
and
cmp
rorb
fistpll
sahf
sbb
mov
orb
sub
mov
jp
xor
add
push
push
push
or
mov
adc
and
cmp
mov
fucomp
mov
jg
push
push
add
cmpsb
xor
push
mov
cmp
mov
pop
mov
jle
in
inc
sti
ja
cli
into
fbstp
pop
mov
dec
dec
mov
adc
push
push
cltd
jns
dec
stos
and
dec
mov
cmc
imul
arpl
sbb
jmp
pop
lret
xor
cmp
mov
std
lcall
test
sahf
or
in
jle
inc
cli
pusha
pop
mov
addb
mov
or
mov
dec
gs
sub
iret
loopne
pop
fadd
das
adc
jno
test
mov
inc
or
add
movsl
xchg
mov
out
in
in
xchg
daa
out
in
pop
mov
dec
daa
sbb
shrl
cmpsl
dec
mov
pop
shll
adc
out
fwait
je
xlat
ljmp
ljmp
sbb
frstpm(287
cli
and
sbb
out
cmp
dec
xor
jns
jle
rcr
loop
lret
jle
xor
jbe
icebp
jno
pop
in
testb
shll
mov
sbb
fisubs
cmpsl
stc
mov
mov
stos
mov
mov
sub
daa
dec
mov
push
or
cli
adc
or
mov
xor
test
jecxz
add
xchg
pusha
xor
sub
push
test
push
lock
ret
or
gs
jnp
stc
cld
jecxz
imulb
and
insb
sub
sub
jo
fistpl
sbb
movl
negb
add
xchg
fsubl
leave
xchg
outsl
push
pop
pushf
sub
sub
int3
gs
jg
cmp
xchg
js
add
testl
jae
out
and
in
repz
mov
sub
arpl
jp
ret
mov
jmp
or
dec
outsb
loopne
js
pop
pop
inc
mov
mov
subl
cmpsb
mov
icebp
std
push
stos
in
flds
fsubl
sbb
jge
fwait
xor
cld
mov
enter
pushf
mov
cmp
cwtl
sbb
ret
or
sbb
stc
cmp
xor
adc
icebp
cmc
jmp
pop
enter
sub
jl
jo
addr16
jne
movsb
test
jbe
adc
or
flds
faddl
and
xchg
mov
mov
cld
out
das
pop
iret
imul
icebp
aas
push
jmp
pop
mov
call
sub
pushf
and
test
dec
js
in
mov
jecxz
cmpsl
mov
ret
xchg
enter
xchg
rcll
cmp
sbb
pop
push
jmp
inc
pop
mov
xchg
push
jge
pop
fmull
int
lea
lea
xchg
ljmp
out
repnz
push
insb
cli
movsl
pop
in
adc
mov
dec
fisubs
and
dec
xorb
mov
adc
mov
aaa
mov
jo
leave
popf
shlb
cs
xorb
sahf
popa
xor
testb
test
rcll
jl
pop
jp
mov
mov
add
push
and
shl
and
stos
nop
mov
push
adc
push
cltd
nop
push
jnp
sbb
dec
or
dec
mulb
inc
inc
dec
or
popf
js
nop
in
imul
mov
jge
adc
repnz
test
dec
xor
stos
push
push
lds
cmp
jo
and
repz
movsb
jb
xor
jns
xchg
mov
stc
loop
dec
daa
adc
xor
sbb
jle
sbb
mov
mov
pop
sbb
sbb
xor
ja
inc
mov
jle
ret
pusha
insl
es
or
cmpsb
push
push
push
leave
or
sub
repz
outsl
add
icebp
sbb
test
lahf
fnsave
lods
jae
jmp
frstor
cmp
stos
push
sub
push
add
jle
or
push
jmp
add
outsl
mov
stos
aam
adc
cmp
jo
movsl
mov
sub
inc
outsl
cmp
cmp
lret
or
mov
mov
xchg
pop
into
outsb
mov
outsl
scas
adc
ds
shr
cmpsb
adc
jno
data16
and
lock
fs
in
mov
cmp
dec
push
cmp
sbb
adc
stc
xchg
in
adc
and
mov
cmp
repnz
fistpll
dec
push
inc
lods
cmp
adc
pushl
ja
dec
scas
das
sbb
jl
icebp
insl
cmpsb
push
mov
js
cli
pushf
mov
ret
lock
cld
jbe
and
ds
xor
mov
test
in
out
rcl
xor
xchg
cli
xorb
dec
sbbl
repz
mov
mov
std
fidivs
jecxz
jno
sbb
mov
fwait
add
lret
inc
loope
sbb
mov
push
hlt
lret
inc
mov
popa
pushf
out
xchg
adc
jbe
into
lret
test
inc
loope
cmp
lahf
icebp
mov
dec
adc
shlb
jb
lods
add
or
das
bound
jle
cwtl
andb
ret
sbb
ljmp
mov
repz
mov
fdivrp
ret
sub
or
sbb
add
push
xor
out
sti
aam
fsubrl
rdpmc
add
sahf
or
imul
repz
cmp
mov
cmp
out
xor
es
popf
outsb
adc
les
in
test
lock
pushf
cmpl
cwtl
pop
mov
test
mov
mov
jbe
aam
pop
lods
stc
fs
pop
push
mov
ds
and
sti
jle
outsl
leave
xchg
xor
jnp
sti
sahf
jge
clc
fisttpll
inc
mov
out
es
inc
push
mov
inc
shrl
sub
test
or
sub
adc
pop
pop
in
loopne
jne
imul
iret
push
pop
test
scas
dec
jns
add
into
scas
int3
roll
jo
add
mov
mov
xor
pop
cmp
ja
ret
inc
in
sub
bound
je
je
jae
pop
inc
and
scas
cmp
sub
subl
rep
or
jnp
sub
popf
sbb
dec
push
fcoml
push
xchg
and
push
js
scas
lret
out
xchg
stc
mov
fwait
notb
out
sbb
mov
in
xchg
mov
aaa
push
or
jo
cs
cmp
std
mov
adc
iret
dec
push
inc
ret
xor
sbb
sub
call
sarb
je
cs
cmpsb
inc
ret
adc
push
xchg
sub
or
mov
adc
fimuls
sar
push
fs
testb
and
inc
aam
in
das
gs
hlt
cmp
add
fdivrp
xchg
mov
fcmovbe
mov
xchg
jno
inc
mov
pop
xlat
pop
fsub
mov
adc
or
aas
stos
jg
ljmp
lret
or
mov
mov
jnp
push
lock
outsb
ret
imul
mov
cmp
in
dec
mov
push
rol
and
xchg
mov
rcll
pop
in
fdivp
rcr
sbb
int3
into
adc
daa
adc
fsqrt
pusha
ret
lods
mov
dec
inc
fisubrs
lods
imulb
mov
lcall
cmovl
insb
int3
fimuls
lods
cwtl
adc
cmpsl
push
adc
sub
fcoml
cmc
pop
scas
sbb
mov
and
outsl
decb
xor
lcall
fwait
pop
subl
xor
and
mov
push
mul
inc
loope
inc
inc
push
add
pop
int
sarl
jne
cld
addr16
adc
lahf
in
stos
sbb
clc
jae
test
loopne
xchg
rorb
cmp
in
pusha
adc
push
in
lcall
cwtl
subb
add
mov
or
sbb
mov
scas
push
mov
out
push
jge
pusha
and
fdivr
push
or
mov
adc
mov
mov
andl
int
cld
outsl
shrl
test
hlt
mul
cltd
jmp
mov
into
nop
or
les
ljmp
loopne
mov
les
scas
dec
jne
ljmp
lea
int3
dec
cld
jge
insl
pushf
sbb
lods
sub
jl
insb
in
sbb
or
cmp
sub
fcompl
dec
cld
jge
insl
pushf
sbb
lods
sub
jl
insb
in
sbb
or
cmp
sub
fcompl
dec
cld
jge
imul
dec
leave
jl
insb
in
sbb
or
cmp
sub
fcompl
out
jge
sbb
xchg
add
inc
inc
push
push
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
rcr
shll
add
adc
or
push
sbb
xchg
popa
xchg
adc
add
xor
xor
mov
shll
add
adc
inc
mov
mov
mov
add
xor
and
imul
cmp
jp
imul
bound
jp
jae
gs
jge
mov
ja
cwtl
xchg
mov
xchg
push
sub
cs
lds
iret
xor
jle
jb
mov
call
sub
cmpsl
and
xchg
out
pop
cmpsb
xor
ficomps
test
pop
xor
xchg
mov
fs
popa
push
add
inc
repz
cmp
test
and
xorl
cmc
arpl
or
dec
and
sar
jl
insl
inc
or
jno
ret
and
push
mov
jle
ret
sub
shl
add
fsubrs
push
fisubs
inc
cmpsl
clc
xchg
xchg
sbbl
ret
mov
xchg
and
adc
or
stc
jae
pop
pop
dec
xchg
mov
push
mov
or
add
and
test
cltd
adc
xor
mov
lret
adc
add
arpl
inc
mov
xorl
clc
adc
inc
inc
daa
hlt
aas
ficoml
shlb
sbb
push
scas
pusha
mov
bound
retw
jae
inc
mov
mov
andl
jecxz
repz
and
shll
shll
add
adc
inc
mov
mov
andl
jecxz
repz
and
shll
addr16
and
add
imul
cmp
dec
lahf
mov
xchg
insl
add
cltd
and
dec
pop
inc
dec
adc
cmp
xlat
push
push
mov
mov
lret
movsb
je
loop
rol
lock
insb
iret
out
test
addb
sti
outsl
lods
pop
jle
and
sbb
and
loopne
clc
pop
mov
xchg
sbb
in
cmc
out
fs
jb
dec
aad
cmp
mov
scas
mov
adc
lcall
adc
and
ja
mov
dec
or
inc
bound
add
pop
or
loopne
mov
mov
xchg
ret
and
jno
test
push
or
xor
mov
pop
es
into
pop
pushf
jnp
push
pop
movsl
mov
xlat
or
je
push
loop
push
mov
out
or
imul
dec
fwait
mov
jg
jge
push
pop
addr16
push
loope
mov
adcl
push
in
bound
and
sub
ret
xchg
fidivs
daa
clc
or
out
icebp
mov
fisubs
sub
pop
shl
dec
arpl
jb
sbb
adc
andl
dec
adc
or
int3
loop
daa
sub
add
jne
mov
adc
test
jae
push
mov
arpl
push
push
mov
mov
inc
push
push
iret
cld
lss
mov
cmc
lock
cmp
and
mov
call
fwait
sbb
sub
jmp
jle
xor
rorl
addr16
and
adc
lods
iret
in
jnp
repz
movsb
ret
ret
into
sbb
jbe
inc
and
popa
xor
push
outsb
sti
xchg
imul
adc
stc
inc
ret
imul
in
pop
inc
lea
cmp
sahf
jp
inc
fnsave
adc
popa
jl
add
in
mov
mov
jb
insl
scas
scas
push
test
repnz
dec
dec
cli
mov
or
into
jno
stos
call
cmc
test
mov
rcl
push
insl
leave
jmp
js
idivl
xor
cmp
cmp
jle
push
enter
and
inc
dec
jae
jne
adc
pushf
jecxz
xchg
push
push
lahf
push
js
pop
mov
shll
mov
insl
fiadds
inc
and
pop
sbb
dec
es
xor
adc
out
jbe
movsl
out
roll
mov
mov
mov
push
scas
jb
rolb
jmp
and
inc
fstps
jmp
xor
testb
sti
cmp
popf
lahf
aad
fdiv
cmp
xchg
sub
push
adc
das
jne
cmc
cld
das
push
imul
sub
insb
out
lea
pop
cmp
mov
xor
adc
decl
inc
lock
cmpl
into
inc
into
movsb
adc
adc
out
sub
test
and
mov
mov
jmp
mov
mov
inc
xchg
push
ljmp
test
lcall
out
call
sub
dec
cmp
xchg
les
mov
shlb
jno
jns
addr16
inc
add
cmpl
and
fisubrs
push
push
rclb
in
and
aas
stos
xchg
jnp
fisttpll
pop
fiadds
in
jns
sub
push
ss
movsl
push
pop
mov
jne
dec
pop
jnp
fists
xchg
pop
lock
insw
arpl
ret
fwait
mov
shl
and
add
enter
inc
mov
and
pop
dec
lods
rcrb
test
cmp
imul
sub
push
mov
cmc
cmp
sbb
std
test
cld
push
adc
and
ficomps
adc
sbb
shrl
clc
pop
les
ret
sub
mov
jno
or
leave
cmp
imul
adc
pop
aad
in
je
push
lods
mov
hlt
fwait
lea
pop
xor
jle
outsl
pop
add
in
sti
cltd
faddl
mov
xchg
call
sarl
cmp
loope
into
in
xchg
jo
aas
inc
xchg
sbb
lahf
xchg
cwtl
cmp
sub
loop
push
pop
cmp
pop
dec
je,pn
daa
loopne
aas
sub
push
ret
cmp
loop
and
sti
push
es
dec
js
lret
aas
test
xor
hlt
add
cs
xor
dec
loopne
sbb
popa
out
add
fsubs
or
mov
std
cmp
inc
testb
mov
in
add
pop
inc
inc
dec
and
mov
xchg
push
xchg
popf
inc
es
jp
fwait
dec
enter
cmp
nop
pusha
movsb
mov
aaa
vunpckhpd
sub
cld
inc
push
imul
push
test
adc
test
andl
mov
out
mov
xor
sbb
sub
inc
xchg
pop
pop
push
test
aas
jge
adc
inc
lods
aaa
jle
faddp
push
mov
pop
movb
ljmp
jb
mov
and
lock
out
movsl
and
adc
bound
mov
cmp
xlat
lcall
cmpsl
sub
mov
movb
add
push
shlb
test
repnz
jo
jmp
and
adc
jg
dec
push
cmpsl
mov
push
sub
mov
out
int3
hlt
add
xchg
in
lods
sahf
fldl
in
sahf
xchg
add
stc
push
mul
mov
sahf
fldcw
pop
ss
dec
daa
icebp
mov
js
add
adc
into
out
outsl
in
stc
adc
dec
sahf
dec
push
lret
sub
popf
pop
imul
lahf
jb
lock
out
mov
jbe
int
popf
fcomps
sub
aaa
ljmp
add
add
test
andl
mov
inc
xor
or
pop
adc
lods
lods
push
or
push
push
ss
mov
test
je
into
xchg
stc
fidivrs
push
leave
in
arpl
roll
cmp
dec
loope
out
dec
xlat
dec
sbb
push
mov
xchg
adc
cmpsl
mov
ss
push
pop
call
dec
adc
int
and
js
lods
stos
xchg
mov
jbe
addr16
pop
outsl
call
out
mov
loopne
std
fcmovnu
popa
adc
rcrl
gs
add
jge
mov
stc
fsubl
sar
into
ret
test
dec
faddl
sub
jae
mov
xor
je
mov
incb
mov
ficoms
fdivrl
or
ds
repz
push
pop
inc
push
leave
in
mov
mov
dec
test
sbb
ljmp
adc
add
jle
fisubrl
mov
xor
jne
dec
pusha
jle
xchg
cmp
add
clc
jno
mov
or
pop
hlt
out
enter
lea
xchg
dec
dec
lret
bound
fistpl
dec
adc
mov
fiaddl
lock
mov
inc
mov
mov
and
mov
inc
xchg
test
adc
mov
push
xlat
sbb
xor
inc
data16
daa
mov
add
mov
xchg
rorl
pop
sti
test
cli
push
or
adc
sarl
xchg
inc
addr16
push
dec
mov
scas
pop
or
dec
out
iret
dec
lods
nop
out
push
push
int3
enter
push
outsl
rclb
ret
mov
cld
gs
into
mov
into
jae
sbb
mov
xlat
rcll
cmpsb
daa
idivb
push
ja
stc
pop
call
mov
add
cmpsb
lods
and
int
push
pop
add
lea
or
adc
add
aad
repz
sbb
insb
call
mov
popf
add
jle
lds
into
je
test
pusha
movsl
dec
xlat
mov
test
gs
dec
push
lods
push
jae
mov
test
jns
into
iret
mov
adc
mul
imul
push
mov
in
inc
vpavgw
sub
out
lock
mov
jl
push
ljmp
add
sahf
leave
xchg
push
outsl
dec
push
dec
icebp
dec
xlat
or
das
add
sub
push
arpl
out
in
push
push
inc
lret
mov
js
adc
repz
pusha
call
lahf
rol
pop
inc
fs
std
clc
mov
cmc
lahf
in
mov
stos
insb
das
cmpsl
loope
cmp
cmpsb
sbb
out
jmp
xor
nop
inc
adc
fs
stos
js
icebp
jns
movsl
sub
addr16
cli
cwtl
fnsave
popa
mov
jno
aas
lock
pop
cmpsl
adc
rol
in
in
push
sbb
inc
sbb
popa
pusha
cmc
xor
fcoml
pop
imull
sar
loop
or
add
and
xor
cmp
jbe
loopne
aam
sub
ljmp
cwtl
rcll
sbb
xchg
and
fldl
add
pusha
push
fldenv
adc
mov
flds
fildll
hlt
mov
add
mov
imul
test
or
daa
daa
loop
enter
adc
pop
cltd
jne
mov
and
jne
jp
jbe
push
jbe
xchg
and
in
enter
jb
mov
ss
or
fmul
add
shlb
pop
pop
push
jne
dec
cmp
orl
je
out
repnz
js
mov
or
insl
js
and
mov
loopne
pushl
les
xor
jg
or
insb
dec
jecxz
lcall
xchg
pop
imul
jg
daa
adc
loopne
and
imul
fstpl
mov
andb
icebp
fiaddl
aam
push
push
rorb
cmpsb
repnz
xlat
mov
and
mov
rcr
js
mov
push
push
cwtl
mov
mov
dec
mov
idivl
xorl
sub
out
popa
mov
test
sbb
mov
xor
cltd
ja
add
dec
clc
int3
int3
bound
adc
loopne
dec
dec
push
adc
add
dec
jmp
dec
adc
xchg
dec
sub
icebp
loope
lret
outsb
jne
mov
inc
cmpsl
sub
arpl
pop
mov
dec
sahf
jno
daa
scas
adc
test
cmc
pop
mov
test
xchg
bound
hlt
imul
adc
and
into
pop
int
mov
xor
jno
ss
xchg
fdivrs
and
sub
cmp
nop
mov
jae
add
mov
cmpsb
sahf
lahf
adc
leave
and
xlat
jo
adc
shlb
and
fdivrp
or
sub
push
cmp
in
flds
xor
fstpt
addl
pusha
sbb
ss
add
mov
stos
fmul
icebp
iret
xor
jge
mov
pop
or
cmpsl
xchg
stos
pop
lret
add
sbb
mov
xchg
sbb
jmp
test
loope
popf
scas
cmp
insb
cs
mov
cmpsl
dec
jl
add
shll
das
pushf
mov
inc
daa
cmp
aam
ja
in
pop
scas
sti
jns
in
inc
jl
xor
imul
rorb
popa
arpl
ja
mov
inc
les
arpl
inc
adc
mov
sbb
sahf
cs
jae
push
cmp
test
fcomps
lods
mov
shl
jl
add
pop
cmp
lods
and
pop
pop
stos
dec
dec
lcall
mov
push
xchg
leave
add
jbe
hlt
mov
subb
sub
loope
fincstp
movsl
jl
mov
cmpsb
cmp
std
test
test
test
lods
lea
inc
idivb
scas
sub
cs
test
fbld
xchg
fs
push
mov
shrl
xchg
call
inc
pop
mov
inc
add
mov
xlat
add
sub
jge
push
lahf
into
imul
jp
js
xchg
adc
popf
leave
test
mov
sbb
push
and
add
addl
cwtl
xor
ret
add
call
test
insl
insb
sbb
inc
aas
and
cs
dec
jecxz
mov
lahf
pop
cs
insb
pop
enter
fcmovbe
jae
arpl
jne
js
inc
inc
stc
pop
ret
test
cmp
or
push
xor
mov
ret
in
addl
pop
incl
xchg
pop
inc
lea
scas
xchg
jae
loope
pop
xchg
sbb
ss
cmp
cmp
lds
ja
incb
jnp
fstl
hlt
lahf
hlt
and
fs
loope
cmp
loope
add
mov
and
inc
fidivs
std
call
push
xchg
daa
bound
pop
mov
imul
pop
push
adc
mov
cli
jle
pop
int
dec
pushf
mov
lret
leave
jb
and
xchg
xor
cmpb
fs
fdivrs
sbb
into
stos
popf
jmp
and
push
mov
sub
cwtl
or
dec
nop
and
inc
add
int
pop
es
fsubrs
mov
lds
xor
mov
inc
adc
out
jbe
cld
or
mov
cmp
mov
pushf
dec
test
rorl
sbb
clc
jnp
sbb
cmpsb
gs
incl
cli
push
addb
mov
fwait
push
xor
repz
popf
test
loop
or
push
stos
lcall
insb
inc
out
mulb
xchg
xchg
dec
cld
les
cmpsl
in
scas
int
int
adc
in
jbe
xor
test
roll
sub
addr16
cmp
ds
push
lods
or
fdivl
dec
int
cltd
xorl
jecxz
shlb
imul
addr16
xchg
mov
mov
xchg
data16
adc
push
xchg
xchg
imul
addr16
jnp
or
aam
sub
sbb
out
jle
arpl
xor
and
jae
cli
ss
sbb
scas
pop
sbb
mov
cmc
sbb
cmp
in
add
jbe
fistpll
cwtl
add
add
fs
imul
push
and
push
sbb
test
mov
imul
out
mov
pop
dec
dec
or
dec
repz
hlt
cmp
fs
jp
je
adc
cmc
xchg
xlat
push
mov
dec
mov
or
pop
dec
mov
xchg
or
jmp
sub
dec
mov
test
sbb
sub
rclb
adc
dec
arpl
stos
jae
jle
push
test
fadds
repnz
cmp
xor
enter
sahf
inc
adc
adc
iret
cmpsl
cwtl
test
push
or
popa
ds
cld
jae
add
pushf
cs
das
dec
rorl
mov
mov
push
push
push
sub
daa
xchg
and
xchg
stc
ja
xchg
les
mov
xor
or
cwtl
sub
pop
pop
mov
fistpl
in
out
and
mov
sbb
pop
push
iret
orb
jns
loopne
sbb
ljmp
pop
adc
cmp
and
push
push
ss
negb
adc
ds
mov
cmpsb
adc
jae
mov
add
pop
cmpsb
cmp
pushf
cmp
add
scas
xchg
push
loopne
icebp
andl
xor
xor
pop
jae
or
lret
stos
in
xchg
or
inc
mov
cmp
jno
cmp
inc
push
or
jbe
das
icebp
xor
rclb
or
sti
out
add
mov
negb
mov
daa
aad
mov
pxor
cmp
aam
aas
mov
pop
scas
js
leave
or
cmpsb
pop
sub
mov
les
cmpsb
adc
xchg
pop
scas
enter
fnstsw
cmp
scas
stc
outsb
pushf
daa
mov
mov
jne
push
test
jp
cli
test
or
decb
mov
jecxz
lods
or
jge
std
lea
or
jnp
imul
sbbl
cmp
sub
adc
pop
mov
lahf
pushf
xor
lcall
xor
int3
cmp
inc
cltd
jno
xchg
mov
adc
xchg
imul
fisubs
loopne
cmp
aam
cmpb
jmp
sub
jnp
push
and
enter
lret
mov
icebp
inc
pop
or
test
lods
frstor
push
test
sti
jne
stc
xchg
lods
and
jne
pop
mov
lds
push
mov
cmp
out
push
adc
out
pushf
dec
push
xor
bound
mov
ret
popf
xchg
mov
and
push
dec
push
mov
test
les
mov
jno
repz
mov
loopne
dec
movsl
shll
xchg
mov
sub
push
fbstp
sti
pop
imul
movsb
data16
rcll
jno
sub
adc
dec
xor
xchg
xlat
sub
ret
push
jge
mov
mov
jge
lock
addb
jg
popa
mov
pop
mov
gs
dec
and
cmp
cmp
cmp
jae
popf
xor
lret
push
mov
pop
cmp
mov
movsl
pop
dec
xor
mov
mov
in
and
lcall
jo
mov
adc
jge
add
inc
push
jns
jo
or
out
pop
popa
test
in
stos
mov
dec
xchg
mov
add
imul
jmp
aad
je
shl
fstpt
cmp
cld
xchg
mov
add
insb
lea
daa
cmp
pop
sub
xor
outsb
repz
inc
jmp
adc
popf
pop
sarb
inc
jg
dec
add
and
clc
arpl
test
mov
cmp
xor
dec
or
clc
sub
and
in
andl
out
dec
push
dec
pop
sbb
mov
push
pop
xor
into
fsubrl
adc
mov
jmp
push
add
and
push
arpl
sub
in
lds
pop
mov
push
rolb
out
push
cmp
sbb
inc
call
sub
xchg
sti
and
sbb
sbb
lret
mov
dec
outsl
mov
jne
mov
inc
ljmpw
push
pusha
cmp
outsb
sbb
or
inc
fimuls
push
or
add
ds
icebp
in
stos
push
call
add
pop
repnz
cmpsb
cmp
xchg
mov
mov
lret
fs
std
leave
ljmp
mov
sub
jo
cs
jle
jb
dec
movsb
outsl
and
in
std
out
xchg
leave
push
mull
ret
mov
aad
mov
outsb
push
testl
lods
adc
cmp
les
lods
je
std
pop
movsb
or
int
leave
push
jo
leave
cmpsl
sbb
test
mov
push
inc
aas
ja
movl
mov
cs
push
jp
loopne
leave
lret
adc
jmp
jns
mov
repz
push
cmp
pop
jmp
cltd
mov
outsl
mov
add
test
out
clc
daa
adc
jl
outsl
add
cwtl
xchg
nop
roll
loop
test
ret
insb
and
add
push
out
loopne
ficompl
xchg
mov
and
add
lods
lds
ret
add
lods
xchg
mov
adc
mov
mov
leave
pop
xchg
xchg
add
jns
test
mov
push
sub
xchg
push
imul
or
stc
cwtl
jb
sbb
and
in
adc
idivl
hlt
outsb
adc
mov
jmp
andl
add
lcall
mov
jns
fidivrs
loop
jle
ret
arpl
dec
aad
xor
jle
ficompl
std
xor
inc
sbb
cmc
cmpsb
cwtl
inc
cmp
inc
inc
js
lock
mov
mov
jns
mov
std
lret
xor
lret
cmp
movsl
mov
sbbl
sahf
js
dec
or
les
ljmp
outsl
lods
adcb
std
imul
dec
rcll
mov
es
dec
mov
inc
adc
dec
hlt
cmpsl
movsl
jbe
outsl
add
repz
push
out
push
leave
in
jne
leave
rorb
loopne
les
sahf
xor
hlt
js
xor
sub
cmpsl
hlt
xchg
and
mov
pop
fsubr
out
testb
jae
pop
adc
shll
pushf
lcall
sbb
out
fdivrs
sahf
cmp
je
adc
je
or
enter
setp
cmpsl
pop
int
fstpl
cmp
sahf
mov
mov
inc
sahf
mov
cmp
pop
xchg
and
adc
sub
mov
loope
xchg
arpl
push
push
mov
popa
xchg
adc
add
xor
and
shll
shll
add
adc
inc
mov
mov
andl
jecxz
repz
and
shll
icebp
xor
arpl
push
push
mov
popa
xchg
adc
adc
xor
leave
rol
and
adc
inc
and
mov
popa
in
imul
js
push
push
xor
dec
or
add
cmpsb
fcoms
test
cwtl
mov
js
push
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
js
push
push
cmp
data16
inc
clc
mov
cli
test
lods
xchg
mov
or
or
jb
ljmp
andl
xchg
iret
shll
pop
iret
sete
xchg
cmpsw
pop
mov
cmp
loopne
inc
or
es
aaa
xchg
ss
into
fnstcw
xchg
add
xor
add
and
in
rclb
movl
dec
inc
mov
sub
daa
fwait
pop
dec
adc
xlat
jbe
mov
gs
push
test
pusha
sub
out
stos
in
fcmovu
shlb
in
adcl
repz
push
push
mov
sub
inc
mov
fisubs
mov
adc
sbb
mov
xchg
mov
adc
mov
mov
push
dec
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
push
push
push
inc
pop
sbb
ja
mov
mov
iret
stos
clc
call
std
push
clc
mov
cmp
or
adc
pop
cmp
mov
enter
int
icebp
mov
push
jb
sbb
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
js
push
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
js
or
xlat
call
add
out
movsl
rclb
cmp
xorl
xlat
icebp
test
sti
sub
jb
aam
cli
fcmovnb
add
xor
fldln2
sbb
xchg
jle
sub
pop
push
dec
lods
cmp
cmp
add
jg
sub
xor
inc
addr16
xor
cmc
ret
repz
cmpsb
jne
xchg
inc
insb
mov
sahf
loopne
popa
mov
hlt
js
cltd
repz
js
mov
mov
hlt
mov
aad
popf
loope
mov
iret
popa
jae
jne
ficoml
cmp
mov
push
and
jmp
fsubl
sbb
inc
cmp
dec
push
loop
lods
sbb
push
xor
jae
adc
xchg
sbb
sub
mov
sbb
bound
loope,pt
test
mov
test
shll
mov
mov
mov
xchg
lret
pop
add
sub
hlt
aas
pop
push
repz
stc
push
cmp
imul
es
stc
jne
movsb
or
mov
add
jle
xorb
ret
sbb
mov
popa
bound
lock
jno
dec
add
mov
aam
sbb
xchg
jecxz
lea
inc
xchg
loop
lret
in
xchg
jle
inc
push
cmp
push
xor
mov
test
stos
in
xchg
add
jle
movsl
mov
xor
js
jg
loop
clc
pop
xchg
mov
dec
popf
or
sub
lods
movsb
lea
iret
mov
pop
rcr
add
aam
imulb
cwtl
mov
in
fcompl
mov
into
jp
popa
push
sub
xor
xorl
mov
inc
and
rol
cli
js
dec
cmp
lcall
fcmovu
clc
mov
push
jp
das
vpmulhw
loopne
jge
fadds
jmp
nop
cld
mov
add
cmpl
xchg
mov
movsb
xlat
lcall
fldenv
adc
pop
hlt
fincstp
dec
and
cmp
add
fsts
test
call
fsts
int
mov
jmp
jmp
jge
outsl
or
or
and
mov
inc
cmp
test
push
cmpsl
movsl
jb
out
bnd
cmpsb
dec
sub
repz
aad
loope
push
out
mov
jbe
cmpsl
das
adc
lret
add
fldcw
mov
enter
test
mov
and
repnz
ja
ficoms
lcall
jp
and
add
xor
mov
pop
out
ss
or
xlat
into
fldcw
das
in
ljmp
adc
fsubl
fmulp
enter
push
mov
push
daa
lcall
pop
out
roll
clc
jg
mov
das
push
lds
lea
imulb
mov
xor
shll
int
or
mov
movsl
adc
xor
iret
dec
sarb
fildll
inc
sub
sar
sub
push
into
adc
scas
and
out
jae
sbb
ss
sub
in
jmp
fistpll
fwait
inc
scas
cs
pop
repnz
shlb
data16
sbbl
cmp
dec
outsl
push
or
jne
dec
mov
cltd
fnstenv
add
int
push
pop
pop
je
mov
icebp
das
rorl
push
jmp
jae
lahf
sub
rolb
cltd
pop
xchg
mov
je
jno
dec
out
ljmp
or
fists
inc
push
pop
cmp
pop
out
data16
and
add
xor
xchg
pop
pop
int
shll
sub
pop
sahf
sub
into
sbb
jbe
sub
mov
and
inc
mov
xchg
mov
shlb
inc
std
mov
or
movsb
pop
sub
and
ret
adc
sbb
mov
mov
cmpsb
mulb
inc
lea
cs
pop
dec
push
scas
fldt
decb
inc
lods
adc
lods
add
mov
add
dec
sub
jbe
cmp
jo
adc
push
or
mov
push
nop
shll
dec
adc
xchg
daa
sbb
mov
cli
inc
push
ss
pop
sub
arpl
mov
and
rorb
dec
xor
test
shll
in
xchg
fbld
dec
cli
jne
add
dec
xor
orl
nop
dec
inc
stos
lods
xchg
movsb
or
inc
out
mov
push
imul
adc
jns
and
sbb
in
jl
pop
or
pop
mov
pop
xor
in
ss
jo
push
xor
aad
scas
and
loop
jbe
pop
fimull
dec
and
jg
outsb
pop
sub
and
in
clc
cmc
mov
sub
lcall
push
mov
and
mov
lds
shrb
xchg
mov
dec
jg
fisubrs
loopne
xchg
pop
push
add
fwait
incb
adcl
add
adc
mov
lds
pop
int
out
sbb
mov
arpl
cmpl
cmp
aaa
decl
mov
stos
mov
fmuls
sub
jns
pop
add
dec
lcall
mov
call
jno
inc
popf
les
les
stc
mov
in
js
or
mov
dec
dec
sti
loopne
out
mov
cmpsl
cmp
jle
cwtl
sub
xchg
int3
inc
jle
xor
mov
inc
inc
xchg
and
sbb
ds
data16
jl
sbb
sub
jecxz
imul
jmp
int
sti
add
jb
nop
dec
xchg
lret
jl
lods
mov
outsl
fmull
sub
lods
jne
decl
mov
mov
sub
enter
adc
push
popa
push
ljmp
sbb
jle
add
cmp
fcmovnu
dec
and
in
loop
movsb
dec
leave
ss
in
xchg
jmp
jle
jecxz
lcall
lea
cmp
lahf
ret
pushl
xchg
xor
and
xchg
mov
jmp
pop
xchg
ret
ss
push
jl
incl
imul
les
div
mov
jmp
xor
mov
sahf
iret
out
insb
dec
lods
rorl
lock
insb
dec
mov
enter
xor
pop
mov
pop
aaa
push
pop
ret
jp
pop
lahf
sbb
clc
sub
pop
xchg
jg
icebp
int
push
out
into
aas
ds
jbe
mov
insl
mov
je
xor
add
mov
inc
jne
fidivrl
aam
cmp
out
ret
lcall
imul
push
loop
sub
pop
mov
shlb
andb
sbb
ljmp
ljmp
repnz
or
dec
out
mov
dec
addl
sub
out
div
jg
push
stc
push
in
or
lret
xchg
fcomps
pushf
addr16
dec
test
std
cli
cli
jno
and
addr16
jbe
fcompl
ret
pop
fwait
push
scas
push
in
pusha
jae
enter
cwtl
test
or
lfs
inc
xchg
dec
add
outsl
pop
push
add
dec
push
fsub
mov
inc
xorl
xchg
sarb
pop
pusha
in
pop
xchg
mov
sbb
pop
adc
xlat
xlat
aas
pop
pop
fists
jl
sbb
mov
pop
pop
clc
nop
dec
dec
sbb
xchg
cmp
repnz
outsl
dec
add
jmp
adc
int3
bound
and
xchg
call
clc
cmp
mov
icebp
cmp
dec
iret
cmpsl
popf
adc
mov
mov
jmp
loop
dec
add
rolb
or
sar
sbb
aas
mov
add
add
jae
sbb
rcr
scas
xor
jo
push
dec
andl
fstp
in
mov
pop
xchg
cwtl
addr16
xchg
das
inc
jle
pop
pop
rclb
xlat
int
jns
das
inc
ret
ret
sbb
adc
jg
adc
push
inc
ret
movsb
std
movsb
jbe
mov
pop
add
sbb
imul
frstor
lods
iret
mov
ja
pop
pop
fildl
mov
loop
cmp
lods
in
jl
adc
jmp
sarb
pop
gs
sub
stc
mov
sar
mov
sbb
pop
cmp
pop
lret
add
lcall
out
fwait
dec
jl
xor
cmpsl
in
shl
ljmp
cmp
cmp
mov
mov
frstor
divl
xor
imul
and
push
cltd
popl
dec
aas
imul
inc
push
cltd
stos
xchg
xchg
or
pusha
inc
lock
out
jnp
lret
imul
sti
push
sub
xchg
sub
aad
cmp
outsl
dec
out
adc
in
jg
inc
int
hlt
jecxz
dec
iret
int3
leave
test
call
push
lea
dec
and
mov
ja
push
sbb
cwtl
lcall
mov
imulb
daa
pop
divl
jo
pop
mov
in
or
jbe
lock
mov
cs
xchg
sahf
jae
out
sbb
jmp
aaa
cltd
inc
pop
clc
fs
mov
stos
pop
adc
fimull
pop
out
inc
and
inc
xchg
lret
sub
inc
mov
mov
out
out
sbb
lods
mov
jge
add
stos
inc
pop
inc
adc
mov
and
ret
decb
mov
inc
aam
std
sbb
push
mov
xchg
xor
mov
pop
imull
xor
bound
lret
sbbl
cmp
stc
pop
cmp
pushf
pop
pop
xchg
test
mov
pop
mov
popa
in
pop
adc
mov
andl
jbe
stos
mov
imul
xchg
cmp
repz
jo
mov
mov
das
sub
and
sbb
lea
inc
pop
xchg
add
out
into
inc
popa
outsb
add
mov
sbb
into
jns
push
cmpsb
aaa
cmp
mov
fbld
in
mov
pop
fildll
shr
out
addl
pop
inc
inc
aad
jg
add
xor
fcomps
ficoml
cmp
push
aaa
adc
aas
je
cmp
add
mov
add
inc
lods
push
jmp
test
ror
dec
test
lods
mov
scas
rorb
mov
push
test
js
lret
xchg
daa
mov
xchg
mov
daa
xchg
mov
aad
scas
out
ret
push
sbb
jp
out
push
add
inc
pop
movsl
fnstsw
mov
loope
dec
or
mov
dec
imul
adc
sahf
or
aam
fwait
push
fisttpl
inc
clc
pop
cmp
add
insl
fcmovb
roll
xchg
out
loop
push
pop
jg
mov
ret
cmp
cwtl
mov
jg
cwtl
stos
jecxz
adc
leave
out
and
and
popl
pop
push
mov
std
inc
stos
add
lods
mov
subl
mov
push
jae
fidivrl
pop
rcrl
test
loop
sub
add
fistpll
in
cli
push
mov
push
shll
sbb
jb
mov
jnp
dec
xor
lods
or
xlat
xchg
rep
cmp
push
inc
push
pop
jne
mov
mov
cmp
dec
xchg
dec
mov
pop
outsb
lahf
xor
cli
jne,pt
mov
clc
out
repz
in
sub
push
icebp
add
repz
cmc
add
loop
leave
dec
add
push
sub
jg
cwtl
in
aas
sahf
fstpl
push
pop
ret
scas
jle
add
negl
cli
int3
xor
dec
data16
jge
lcall
sub
inc
loopne
push
rcl
dec
inc
adc
stos
jmp
sub
xlat
push
jecxz
lods
sub
sbb
cmp
dec
cli
ss
pushf
or
movsl
scas
inc
push
stos
nop
cmp
addr16
push
lret
jnp
xchg
or
shll
in
jo
mov
adc
in
add
daa
fnstenv
and
inc
imul
add
sub
sahf
or
push
ja
sarb
push
sub
out
popl
fcoml
jb
fists
sub
addr16
sbb
out
pop
fprem
cmpsb
adc
lret
xchg
adc
pop
std
add
insb
rcll
inc
out
xor
pop
popf
mov
adc
arpl
divb
push
rolb
mov
std
sbb
dec
es
divb
jbe
inc
faddl
outsl
xchg
xchg
fucomp
jmp
mov
and
mov
fcmove
or
mov
pop
xchg
mov
lcall
pop
sbb
mov
out
fsubl
hlt
mov
jmp
pusha
fld1
in
xchg
jle
lods
push
cmp
jno,pt
fldenv
repz
dec
add
xor
cmp
test
inc
inc
insl
xchg
lea
adc
movsl
sub
cmp
sub
rclb
notb
lcall
pop
shrb
mov
sub
loopne
jecxz
fcomi
div
mov
sbbb
xchg
pop
jle
sub
lock
nop
dec
jnp
pop
aad
jg
mov
mov
mov
xchg
lods
sahf
xchg
hlt
xchg
stc
aad
imul
xchg
lods
pop
hlt
mov
aaa
insb
jl
mov
inc
add
xlat
mov
scas
ret
cld
cmp
sbb
mov
jg
inc
in
mov
data16
out
mov
xor
sar
jbe
mov
adc
pop
decb
into
mov
adc
inc
sbb
cmc
or
int
xor
jb
shl
cmp
lds
adc
or
insb
cmp
loopne
push
push
push
mov
aad
pop
cld
cs
ret
sbb
lods
cmpb
test
daa
jae
cli
cltd
pop
lahf
mov
aam
cmp
mov
cs
lret
pop
mov
movsl
add
mul
je
inc
jbe
add
add
mov
lea
dec
lds
add
xchg
mov
xchg
leave
mov
sbb
jo
roll
push
fdivl
pop
lods
sbb
loope
out
mov
ret
jo
and
cwtl
enter
xor
cs
fwait
in
sub
sahf
outsl
rorl
fnstenv
lods
mov
in
clc
icebp
dec
cmc
lds
dec
aaa
sub
sbb
xor
fidivs
sbb
addr16
cmpsl
into
pop
sti
ret
sbb
mov
sbb
mov
movb
inc
shrl
or
int
xor
lock
pushf
mov
jb
dec
dec
mov
mov
lahf
push
and
mov
push
xor
or
sbb
test
mov
cmc
movsb
pop
shll
push
sbb
lds
imul
push
stos
loope
nop
jle
mov
or
outsl
adc
mov
ja
adc
inc
js
mov
push
test
inc
xchg
and
outsb
orl
mov
lret
sub
std
in
shl
aam
add
mov
xchg
add
movsb
mov
xchg
in
int3
add
popf
sbb
nop
mov
test
mov
cmpsl
je
data16
or
jecxz
movsb
pop
mov
aad
mov
mov
das
and
mov
ret
and
out
lds
rolb
lahf
outsl
and
int3
pop
mov
xor
in
add
aam
xor
into
jp
mov
fidivrl
push
mov
outsl
int
or
mov
mov
popa
mov
test
and
pop
sbb
iret
add
cs
jb
int3
repnz
out
fiadds
add
lret
xor
jno
adc
push
mov
lods
into
es
jnp
daa
sbb
fidivrl
pop
pop
add
adc
push
into
pop
hlt
pop
cmp
lods
das
nop
cmpsl
lea
mov
gs
jb
sbb
sub
or
inc
jmp
mov
outsb
push
lcall
push
sbb
mov
mov
sbb
adc
dec
into
pop
dec
dec
mov
shrb
pop
xor
testl
cld
push
pcmpgtd
aaa
sbb
adc
mov
ljmp
inc
mov
aad
mov
ja
lods
cmp
bound
cmp
into
loop
sbb
outsb
cli
push
sub
call
mov
imul
mov
or
movsl
int3
adc
into
mov
hlt
je
mov
xchg
add
jae
les
arpl
mov
push
movsl
xorl
jbe
or
xor
or
xor
add
cmc
adc
sti
sbb
test
push
inc
pop
cmp
pusha
scas
push
mov
fldcw
das
inc
ss
insb
cmpsb
push
inc
add
xor
and
jno
mov
int
push
pop
pusha
fs
les
cmp
push
cmp
sahf
shrl
sub
jp
xor
and
adc
mov
test
mov
test
xrelease
dec
sti
mov
std
pop
mov
icebp
mov
inc
loope
out
or
outsl
or
mov
ss
add
sbb
add
icebp
or
popf
xor
jo
jmp
or
lea
dec
cltd
sti
repz
or
adc
sahf
sbbl
xchg
test
ja
mov
daa
lcall
popa
inc
jg
sar
mov
iret
scas
aaa
cs
lock
sub
or
adc
fs
test
mov
flds
data16
add
and
int3
lcall
mov
push
cwtl
pushf
jl
xchg
sbb
sti
data16
jl
test
mov
lock
fs
push
or
shlb
pop
push
lret
sub
mov
push
iret
cmp
or
cmp
addl
dec
sub
cmp
sub
inc
sti
shrb
xor
xchg
cmpsl
mov
jo
or
das
sub
das
lods
push
mov
add
fnstsw
pushw
xor
mov
mov
xchg
dec
fwait
push
jmp
push
pop
sarb
sbb
jle
stos
sub
sub
or
bound
clc
inc
icebp
aaa
sbb
ljmp
jno
jnp
xor
xchg
sub
sahf
insb
dec
lods
lock
adc
das
cwtl
dec
je
or
pusha
orb
and
aaa
cwtl
ja
idiv
push
add
sbb
pop
loope
stos
clc
cmpsl
mov
ss
mov
or
cmp
mov
dec
or
or
mov
add
scas
lock
lea
cmpsl
inc
jb
mov
cmc
xchg
shl
repnz
pop
das
enter
and
leave
xchg
jo
xor
popf
mov
jle
lea
xor
aaa
mov
add
sbb
xchg
dec
in
jae
mov
aaa
les
mov
les
fisubl
arpl
jecxz
or
loopne
aaa
push
ret
int
clc
je
inc
repz
xor
shrl
fldenv
es
mov
jo
in
jl
inc
sbb
fdivrl
sub
mov
cld
fsubrs
sub
fucom
pop
and
mov
iret
mov
mov
data16
push
mov
or
rcrl
fcompl
mov
cli
cmpsb
and
fisubs
repz
add
ja
add
aas
sar
xchg
mov
sbb
xchg
cltd
es
ret
notb
pop
pop
mov
xchg
inc
insl
addr16
lock
xor
movsb
stc
xor
dec
push
lock
push
les
push
leave
aas
pushf
sarl
cmp
rcl
sbb
cli
jo
sbbb
in
xchg
pop
sub
pop
push
mov
out
aaa
repz
sub
mov
pop
scas
jb
push
jo
enter
mov
arpl
pop
push
add
cwtl
mov
in
cmp
sbb
sbb
xor
ret
loopne
arpl
shlb
xor
jl
adc
fcoms
dec
cmp
cld
stc
jmp
icebp
add
mov
adc
test
mov
adc
mov
clc
mov
sub
mov
inc
cmp
push
adc
aad
ret
repz
faddl
push
xchg
adc
addb
repnz
outsl
ljmp
in
sbb
rorl
test
repnz
xchg
mov
and
pop
push
xlat
pop
sub
out
sub
call
mov
xchg
shlb
jge
stos
sub
out
sub
jge
cmp
push
jg
in
pop
ror
pop
inc
or
pushf
xorl
hlt
dec
testb
mov
das
xchg
sub
xchg
out
inc
jb
sbb
xchg
arpl
mov
andl
add
dec
inc
jb
movsb
jo
xchg
movsb
dec
inc
cmp
xchg
popf
out
test
sub
adc
sahf
sbb
pusha
pop
adc
pop
in
inc
popa
shll
pop
fld
pop
loop
push
push
and
push
movsb
xor
rolb
pop
dec
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
js
push
push
cmp
data16
inc
clc
mov
cmpsb
fcoms
test
cwtl
mov
js
push
pop
cmp
data16
inc
stc
mov
cmpsl
fcoms
test
cltd
mov
js
push
add
jbe
out
mov
jb
enter
and
pusha
sub
aad
vpmaddwd
in
pop
loop
xchg
scas
mov
jne
fs
adc
xor
shl
in
xchg
xchg
test
push
push
inc
inc
jne
gs
aad
add
and
rol
shl
in
xchg
xchg
test
push
push
bound
add
adc
pop
dec
push
mov
mov
pop
mov
test
mov
xor
mov
inc
adc
jle
orb
lods
sbb
test
mov
sarb
adc
bound
test
test
int
repnz
nop
out
cltd
lock
inc
sti
hlt
push
pop
adc
jne
movsl
xor
js
push
mov
cltd
aad
fxam
mov
xor
pop
fsubrs
jno
mov
adc
sub
sbb
test
ss
cmpl
inc
cli
add
and
sub
ss
mov
cmp
mov
mov
mov
xor
shl
in
xchg
xchg
test
push
push
inc
inc
jne
gs
adc
xor
sbbb
call
push
sub
inc
jne
sbb
fs
dec
arpl
mov
movsb
nop
xchg
mov
xchg
std
ror
fdiv
lds
sbb
ja
gs
jg
add
push
dec
mov
lds
fnstcw
movsl
mov
jne
gs
adc
xor
shl
in
xchg
xchg
test
push
push
inc
inc
jne
gs
adc
xor
test
imul
outsb
pop
ds
jecxz
mov
pop
add
iret
je
in
cs
add
pushl
shrl
loop
inc
scas
test
incl
cmp
add
stos
sbb
inc
and
std
sbb
jmp
lods
cs
sub
pusha
cmpl
insl
fnstenv
or
mov
xchg
mov
mov
jmp
inc
scas
loope
test
aam
pop
ficoml
lock
jl
mov
fxch
in
xor
pop
cmp
adc
aas
sub
xchg
fwait
ds
add
das
jle
sbb
sbb
cwtl
jp
test
mov
fsincos
xor
ljmp
das
outsl
das
mov
and
out
fucom
push
mov
mov
adc
xchg
push
popf
and
outsb
dec
aad
push
addl
pop
int
insb
xchg
in
aas
pop
cmp
mov
push
xor
enter
jb
mov
mov
cmpsl
dec
push
sub
scas
stos
jmp
ss
repnz
cs
or
enter
dec
push
pop
ljmp
pushl
pop
mov
jle
repz
aad
ja
cmp
jmp
movsl
or
or
iret
movsl
mov
aaa
sub
cs
push
in
jl
xchg
int3
mov
neg
adc
bound
xor
fnsave
cmp
sub
lods
enter
push
sarb
pop
cli
les
mov
scas
sahf
test
mov
mov
lea
dec
jb
mov
in
inc
aaa
sub
shl
xchg
push
cmp
iret
es
movd
cltd
mov
jae
aam
arpl
xor
sub
js
jl
pop
hlt
addb
pusha
shll
xor
fdiv
sub
sub
cli
inc
incl
fldcw
cmp
cli
imul
ret
push
dec
pop
mov
popa
inc
mov
cmp
loope
cmp
xor
xor
mov
fistpll
jno
cmp
cmp
imul
movl
push
xchg
lock
sbb
loop
sbb
pop
add
jmp
or
pusha
fsubs
ja
fnstcw
sbb
out
fcomp
imul
sarl
sbb
dec
lret
ljmp
jecxz
xchg
lahf
ss
xor
pop
cltd
popa
adc
cmp
repz
push
sbb
bound
mov
js
push
mov
xor
scas
xchg
stos
jle
shl
cmp
pushf
mov
and
and
sar
xchg
pusha
sbb
shrl
subb
mov
int
repz
sbb
int3
xor
dec
xchg
test
sub
roll
fnstcw
daa
cli
jns
lods
push
pop
push
xchg
add
adc
add
dec
mov
sbb
mov
int
mov
inc
xor
and
lea
inc
cmp
insl
sub
cmc
dec
pop
adc
dec
pop
js
dec
gs
nop
cwtl
xchg
add
mov
xchg
les
aad
push
inc
cmp
mov
les
lret
das
inc
sub
push
lret
mov
mov
sub
adc
in
ret
pop
testl
lods
imul
mov
adc
movsb
inc
es
cmp
mov
jno
xchg
mov
lahf
mov
fwait
mov
cld
inc
adc
push
cld
call
fbld
push
mov
les
popf
sub
dec
jno
jnp
xchg
lret
push
pop
sub
sub
xchg
inc
push
jnp
les
or
mov
xor
inc
push
pop
dec
stos
mov
out
xchg
push
inc
xor
test
jo
popa
divb
mov
mov
cwtl
jb
data16
fwait
xor
mov
pop
test
les
in
jnp
cmpsb
pop
xchg
into
cmc
and
jle
sbb
sub
faddl
sahf
dec
and
cli
jl
stos
pop
in
mov
push
sbb
add
xchg
enter
or
sub
pop
inc
adc
pop
adc
ss
adc
insb
lods
lahf
pop
test
push
ja
daa
hlt
repnz
xlat
enter
push
sbb
add
dec
loope
add
sub
aas
lret
inc
mov
jl
jp
sarl
mov
jmp
into
sbb
jl
cli
add
mov
js
jae
loope
mov
fucomi
mov
add
cmp
xchg
dec
lret
inc
dec
xor
loopne
mov
cmpb
fdivs
push
xchg
scas
or
stos
adc
jecxz
jb
xor
mov
jl
sbb
jl
push
mov
adc
jle
int3
and
movsl
push
movsl
test
outsb
test
outsl
stos
frstor
push
movsb
pushf
popa
cli
and
push
sbb
pop
cmpl
inc
mov
mov
add
test
mov
aad
clc
pop
xchg
add
stos
rorb
insl
loop
jns
ficoms
leave
test
enter
movsl
xchg
test
in
pop
push
je
addr16
cmp
negl
mov
jne
adc
mov
inc
iret
mov
dec
out
clc
add
stos
mov
xchg
pop
jo
jl
adc
xchg
mov
enter
jp
jp
stos
out
popf
fwait
aaa
mov
ljmp
mov
orb
dec
sub
mov
rcrb
push
cmp
sub
jae
insb
data16
sbb
fsubrl
pop
mov
jl
fnstsw
cli
pavgw
mov
xlat
jne
roll
mov
js
icebp
mov
or
push
mov
fisttpl
lds
xor
or
mov
in
sub
in
stos
cmpsl
adc
adc
loop
or
push
xchg
loopne
inc
mov
ds
rcrl
stos
dec
jae
mov
sbb
out
leave
adc
push
add
sbb
push
icebp
out
jnp
mov
jg
in
adc
cld
inc
adc
jnp
pop
add
in
cld
xor
cld
dec
mov
push
inc
pushf
cmpsl
mov
xchg
sub
andl
shlb
or
add
ss
clc
shlb
incl
hlt
repnz
dec
loope
js
leave
xchg
sbb
dec
cmp
loopne
adc
dec
jmp
stc
stos
push
int
push
aas
cmp
dec
pop
in
sbb
inc
stos
pop
lahf
add
mov
inc
sbb
mov
leave
test
fnsave
ja
aaa
and
sub
push
mov
test
add
js
fstp
sti
pop
jp
jge
inc
push
lock
lcall
pop
dec
inc
and
or
lahf
pop
imull
mov
inc
and
dec
push
xchg
nop
xchg
cmp
and
imul
mov
mov
cmpsb
fsubrl
enter
aad
fisubs
jb
jne
adc
out
mov
lods
ret
std
jp
insb
out
or
add
fdivl
jp
mov
mov
sub
leave
popf
mov
sub
xchg
mov
jne
test
adc
pop
sarb
mov
mov
xchg
inc
xchg
or
add
out
mov
xchg
mov
pop
xchg
outsb
lods
mov
or
push
add
mov
and
pop
lret
pop
sub
push
sbb
into
movsb
jae
sub
lret
mov
sahf
loope
stos
cmp
out
rcrb
xchg
inc
test
les
mov
add
sbb
adc
sti
ficompl
inc
lods
lcall
test
adc
inc
shl
jl
inc
jb
sub
ljmp
cmp
mov
jg
nop
mov
addr16
imul
adc
inc
lret
xchg
pop
and
mov
stos
insb
mov
and
jnp
add
mov
jne
push
sbb
cld
mov
xchg
dec
aas
lock
imul
iret
adc
out
push
and
jae
jo
add
xor
scas
je
pop
jmp
dec
adc
test
lret
add
inc
xchg
aas
dec
sti
fists
lods
jo
push
dec
xchg
xor
jno
xor
push
cvtdq2ps
add
out
cmc
push
sbb
adc
pushf
fists
test
aas
adc
test
loope
and
cmp
ss
cs
cmpsl
push
call
and
and
cs
adc
xor
enter
sub
lcall
cmp
mov
movl
push
mov
push
inc
sbb
jg
enter
movsl
rolb
loopne
xor
push
aas
pop
push
xor
jns
cmp
and
pop
daa
addr16
pusha
add
jne
mov
hlt
iret
pushf
jle
push
fmul
loop
stos
jo
cmp
sbb
push
and
mov
jecxz
insl
sbb
sbb
sbb
pusha
ja
pop
jle
scas
jg
sbb
mov
sarl
push
out
shl
nop
outsb
int3
xchg
mov
dec
rcrb
cmpsl
add
shlb
imul
scas
add
clc
fsubr
xchg
push
and
mov
or
or
adc
scas
test
pxor
fstp
loop
test
movsl
inc
gs
das
pushf
mov
add
mov
push
sahf
fimuls
mov
add
push
xchg
or
xchg
mov
rcr
mov
aas
adc
dec
movsl
imul
or
test
and
and
hlt
push
jl
bound
mov
dec
push
adc
loop
xor
push
cld
sahf
ja
pop
stos
xchg
and
ret
shll
xor
gs
and
in
mov
push
or
sbb
insb
jmp
scas
jge
xchg
ds
or
mov
cmp
add
inc
jns
sti
hlt
pop
jns
cmp
scas
jns
sbbb
rcrl
shrl
xor
mov
add
pop
cwtl
shl
fwait
inc
mov
sub
xor
out
test
les
stos
jbe
cwtl
pop
out
xchg
inc
dec
cwtl
iret
mov
bound
jmp
mov
push
std
xor
aas
sbb
xor
ret
or
mov
cmp
insb
adc
and
iret
and
sti
test
mov
or
pop
mov
popa
sbbb
lret
inc
pop
add
add
or
lret
cmpsl
ljmp
pop
stos
lcall
jo
scas
cli
dec
mov
in
dec
repnz
pop
int3
add
mov
sahf
inc
mov
mov
pop
negb
data16
iret
mov
int3
jp
push
ret
popf
sub
lea
insb
jae
jnp
sub
in
cmc
div
lcall
mov
ret
xchg
mov
sti
mov
out
inc
mov
push
push
xor
ret
pushf
mov
xor
jmp
outsl
ds
mov
ds
adc
movsl
and
mov
divb
mov
inc
add
les
mov
arpl
pop
mov
inc
repnz
jl
pop
aad
test
out
push
push
mov
and
dec
cmp
adc
addr16
adc
insb
push
ss
andb
mov
pusha
cmc
push
daa
cmp
xorb
push
pop
sti
jp
mov
mov
aam
jecxz
inc
pop
lods
lret
or
fcomp
push
jmp
dec
pop
stc
pop
add
orl
sub
gs
js
clc
push
mov
pop
scas
xchg
jae
cmp
cmp
aaa
in
jne
out
jae
fs
jmp
jg
rcr
in
push
pop
pop
sbb
xor
pop
cmp
sti
cmp
daa
mov
cmp
rorb
lods
add
xor
negb
jge
adc
insb
subb
jmp
repnz
xchg
bnd
cmpsb
adc
and
sbb
jle
xor
push
mov
sub
jle
push
stc
jo
je
mov
xchg
ljmp
and
xor
push
mov
fs
xor
movl
loop
inc
notb
addr16
subb
push
ret
pop
cmc
jo
inc
push
fadd
or
add
mov
lods
or
push
sbb
cmpsl
adc
add
aaa
or
adc
push
mov
sbb
pop
les
add
pop
in
mov
push
dec
aad
enter
cmp
push
pop
loopne
test
sbb
push
call
add
js
and
mov
jb
insl
test
data16
inc
adc
dec
sbb
mov
outsb
mov
sbb
mov
sbb
push
pop
leave
push
mov
and
iret
mov
imul
xor
sti
xor
pop
sbb
mov
sbb
ljmp
jl
stc
dec
xchg
jp
imul
mov
mov
call
jns
out
scas
test
outsl
es
jmp
outsl
jecxz
ficoms
daa
cmp
int3
lcall
dec
cli
ret
pop
out
sbb
xor
rcrb
scas
fwait
out
in
ja
mov
sub
std
pop
int
adc
int3
psubsb
lea
sti
or
test
movsb
popa
dec
and
nop
fmuls
out
jg
xchg
mov
fidivs
cmc
dec
in
jne
dec
cmp
or
mov
lods
push
dec
insb
je
xchg
rclb
xchg
ret
imul
jbe
fwait
ret
cmpsb
xor
mov
cmp
xchg
cmp
ret
rcr
xor
pop
and
repz
and
in
inc
or
pop
ret
subb
xchg
dec
addr16
sub
jge
stos
dec
js
fcmovne
shlb
repz
mov
xor
loope
inc
movsl
pop
in
dec
popa
shlb
testl
inc
fs
xor
outsb
add
test
leave
cs
data16
mulb
popf
ja
scas
outsl
ficompl
fistpl
pop
add
and
push
jbe
mov
fdivrl
enter
popa
cmp
pop
rdmsr
ret
cmp
rclb
std
mov
cs
hlt
pop
dec
sbb
stc
ret
sbb
popa
mov
fnstsw
push
jge
fadds
sub
test
cmp
jge
sub
push
loop
rcrl
mov
push
push
xchg
cmc
add
bound
leave
inc
jns
jno
enter
insb
adc
adc
repnz
mov
xchg
xor
sub
scas
mov
ret
test
fcmove
or
and
lods
add
repz
fistpl
mov
out
enter
dec
paddusb
ret
jbe
clc
test
pushf
pop
sar
add
dec
adc
movsb
movsl
mov
mov
cltd
jnp
cmp
mov
inc
std
mov
sub
shr
lahf
jb
jmp
daa
push
sub
push
addr16
add
fwait
movsb
xchg
out
mov
rcl
inc
mov
test
ss
movsb
ds
cmpsb
mov
add
xor
or
mov
mov
or
test
mov
xor
cmc
xchg
sbb
leave
sub
adc
sbb
mov
or
jecxz
cmp
xchg
add
mov
loope
sub
mov
das
test
pop
and
popa
in
ss
lods
inc
cmp
es
repz
stos
cmp
cmpsl
sbb
xchg
lock
mov
add
pop
mov
out
push
pusha
xchg
or
push
xchg
lret
mov
cmp
push
loope
add
roll
fsts
negl
adc
jb
or
movsb
lods
inc
lcall
xchg
xchg
ror
and
popa
dec
movl
mov
sub
pop
fwait
jne
push
nop
ror
dec
enter
loopne
js
jb
sub
cmp
imulb
pop
fwait
push
jae
push
sub
lcall
sbb
mov
leave
test
jo
outsl
mov
mov
loopne
jbe
fcoml
dec
adc
test
mov
add
jnp
xor
push
inc
and
or
pop
push
ljmp
movsl
mov
mov
cmc
scas
mov
test
icebp
mov
aam
and
push
hlt
imul
mov
fwait
sub
push
lcall
add
mov
push
inc
subb
ds
or
lods
push
pop
mov
mov
and
aas
mov
into
dec
aaa
les
and
fs
jnp
dec
pop
and
in
xor
xchg
test
out
push
fwait
cmp
sub
add
aam
push
mov
push
ss
adc
or
orl
fbstp
test
adc
test
lods
xchg
mov
cmp
inc
push
sub
mov
dec
adc
and
xor
imul
arpl
mov
es
in
stc
shll
dec
scas
dec
inc
pop
jns
jbe
jae
pop
lret
mov
inc
les
ret
movsb
std
aam
push
gs
dec
stos
mov
xor
jbe
xor
int
push
pop
call
lea
popa
jmp
pop
mov
pop
mov
lock
sbb
and
lahf
fisubrl
popa
pop
test
enter
mov
mov
mov
mov
cmpsl
mov
addl
dec
movsl
bound
push
inc
sub
mov
pusha
insb
aam
sahf
add
insl
sbb
adc
mov
pop
iret
jb
lods
fstpt
pop
cmp
les
dec
inc
mov
out
sub
outsl
test
fadd
aam
jns
scas
int
push
idivb
cs
xor
jbe
adc
jno
outsl
ret
sbb
add
mov
pusha
lret
sbb
test
push
adc
pop
mov
hlt
mov
or
out
sub
xchg
rolb
cmpsb
mov
xchg
inc
pusha
cmp
pop
sti
outsb
mov
jg
imul
dec
and
test
fcmove
jmp
jo
mov
mov
sbb
mov
scas
xchg
sti
lea
inc
cmp
push
jmp
mov
adc
sub
and
movsw
mov
jo
cmpsl
pushf
cmp
addr16
aaa
inc
sbb
lret
dec
xchg
insb
insb
inc
mov
pop
insb
xor
add
out
push
scas
in
jp
fs
sub
mov
mov
dec
pop
pop
mov
aam
fstl
xor
fmul
push
fisubrl
clc
sahf
ja
rclw
mov
je
ja
cmp
rorl
adc
sbb
pop
fwait
mov
imul
dec
sub
or
das
fisttpll
cmpsl
push
pusha
rol
xchg
rcrl
into
adc
lret
inc
cmp
cmpb
dec
xchg
push
jle
es
scas
cmc
ret
jl
mov
dec
jae
sarb
sub
notl
fstpl
sub
push
sarb
dec
icebp
xchg
cmp
mov
xchg
cs
sbb
lock
push
out
jg
cltd
push
push
sbb
mov
ja
jns
sbb
mov
and
sbb
add
lcall
push
mov
pop
loopne
inc
jae
ds
sbb
inc
mov
or
or
or
andb
cmp
gs
dec
popa
push
stc
cli
or
inc
loopne
mov
lods
pop
jbe
insb
mov
std
lock
fisttpl
fisubs
scas
fldl
cmp
jo
sbbb
inc
aad
jns
mov
sub
ja
inc
mov
cld
ljmp
iret
jmp
cmp
mov
data16
push
scas
and
jle
enter
push
adc
aaa
stos
repz
jmp
xchg
cs
jp
push
enter
inc
sti
pop
fildl
and
push
subb
outsb
inc
imul
call
add
inc
pop
rcrl
iret
jb
xchg
xor
xchg
ret
ret
jmp
jge
mov
pop
xor
call
cmp
je
movsb
cmc
cmp
imulb
sbb
fdivp
mov
stos
sbb
xor
adc
xchg
jmp
mov
cmpsb
dec
inc
mov
andb
jp
inc
pop
inc
pop
shr
pop
in
cmp
ja
sahf
sahf
push
call
ss
std
dec
sahf
mov
cmp
jg
sub
into
push
sahf
or
mov
in
sbb
add
frstpm(287
in
dec
jo
xchg
and
xor
aad
cmpsb
dec
subl
stos
les
mov
push
icebp
lock
xchg
movsb
jg
movsl
jmp
add
add
outsb
adcb
mov
movsl
shll
jbe
cmp
mov
or
xor
jg
fistps
adc
jnp
and
lds
outsb
mov
scas
and
jmp
mov
add
cld
or
shlb
enter
cmp
cmc
mov
scas
jne
add
fcompl
xchg
or
and
jno
and
pop
stos
mov
ja
shl
in
xchg
xchg
test
push
push
inc
inc
jne
gs
adc
xor
shl
in
xchg
xchg
test
push
push
inc
inc
jne
gs
adc
xor
shll
loope
xchg
test
push
push
inc
inc
jne
gs
adc
xor
shl
in
xchg
xchg
test
push
push
inc
jmp
jno
push
gs
jne
inc
into
push
fisubrs
jns
dec
pop
pop
int
lock
dec
jnp
adc
call
fstp
int
mov
cltd
lea
jns
dec
pop
pop
dec
sub
sbb
std
stc
int
fst
int
rorb
lea
pusha
insl
push
cmc
inc
dec
xor
and
adc
sbb
xchg
andb
aad
into
lea
jge
add
das
sbb
cmp
outsl
incb
push
inc
pop
orl
call
pop
in
add
rorl
sarb
stc
mov
data16
inc
pop
arpl
outsb
mov
xchg
push
push
inc
test
pop
cltd
popf
push
dec
jge
cmp
sbb
bound
clc
mov
push
mov
cltd
fidivrs
push
mov
push
jmp
sbb
int
out
mov
jb
mov
cmpsb
ja
jp
scas
cli
pop
adc
push
std
je
mov
mov
in
mov
cltd
or
fstps
ds
add
ror
rolb
popf
cltd
jecxz
das
sbb
sub
sub
inc
inc
je
push
mov
rcr
fsincos
fdiv
in
push
cmp
sub
cmp
push
or
popa
stos
cwtl
pushf
mov
test
cld
std
out
sub
cs
pop
cmp
jmp
fstp
int
mov
cltd
lea
jns
dec
pop
pop
dec
sub
sbb
leave
fstp
int
mov
cltd
lea
push
mov
inc
movsb
pop
push
or
inc
enter
and
fucomip
mov
inc
mov
and
mov
xchg
xchg
das
int3
xor
fisttpll
stc
mov
pusha
out
add
stos
cltd
out
fstp
jge
mov
jns
sub
xorl
push
out
jns
cmp
mov
test
scas
inc
push
into
or
outsl
jnp
fstl
dec
jecxz
mov
jle
push
adc
test
mov
xchg
rcrb
ror
sar
cmp
roll
lahf
dec
xchg
insb
sbb
xchg
adc
sbb
xchg
add
sbb
jne
fbstp
xchg
cli
neg
movsl
inc
pop
mov
mov
adc
add
dec
mov
add
sbb
mov
adc
daa
sub
sub
dec
in
xchg
arpl
adc
adcl
jp
jb
rcll
cmpsb
and
loope
mov
sbb
sub
mov
pop
mov
adc
jbe
std
pop
jle
stos
aad
sub
or
xchg
xor
imul
fsubrs
push
lret
push
inc
idivl
ret
xchg
xchg
test
in
out
add
or
iret
roll
lahf
mov
cmp
xchg
pop
clc
movsb
loope
inc
adc
pop
ficoml
dec
dec
or
ds
jne
loope
jb
fcoms
adc
push
adc
jp
jbe
sub
push
iret
sub
out
mov
push
cmp
or
adc
das
ficomps
fdivrs
cmp
sub
cmp
sbb
jl
cmc
cmp
pop
es
pop
sub
lret
es
sub
xchg
mov
dec
lock
aas
ret
sbb
insb
push
movsl
je
addr16
cmc
dec
or
lcall
sub
sbb
daa
ret
scas
pop
mov
dec
lods
mov
ss
lahf
sub
test
test
push
adc
push
xchg
notl
in
cmpsl
lea
shr
xchg
mov
rol
mov
ss
arpl
test
rcrb
iret
shll
iret
mov
lahf
pop
xchg
in
daa
gs
xchg
cmp
cmp
into
dec
xchg
stos
pop
hlt
fwait
mov
mov
in
cmpb
aas
jecxz
add
mov
xor
adc
mov
mov
fs
dec
sbb
and
and
addr16
hlt
pop
shrb
inc
inc
mov
fisubrs
add
pop
add
dec
sbb
mov
das
inc
out
pop
pop
fwait
jg
fs
jne
sub
push
push
incb
scas
shrb
pop
mov
mov
xchg
push
mov
sbb
xchg
inc
in
inc
lcall
test
push
in
int3
inc
jae
xchg
iret
insb
cmc
push
jo
xchg
out
xchg
or
ljmp
sub
fwait
sbb
push
jae
mov
jg
andb
xchg
repz
sti
into
pop
add
test
and
gs
into
xchg
xchg
mov
pop
xchg
cld
or
loope
ffreep
lods
and
popf
xchg
inc
aam
and
adc
aad
fldcw
sub
scas
dec
addr16
mov
cmp
stos
mov
shl
test
lahf
sub
divl
jne
mov
mov
nop
loop
lds
insl
out
cli
push
mov
pusha
in
push
imul
cld
test
mov
cmp
mov
push
sbb
pop
out
das
lods
stc
mov
or
fcmovu
adc
pushf
xchg
jg
inc
pop
fdivrs
mov
jb
rolb
xor
into
rclb
in
sub
aam
mov
test
mov
std
adc
cs
push
mov
and
pop
stc
ret
xorl
out
cmp
jbe
sbb
jbe
loope
push
pop
push
lock
xor
mov
das
arpl
or
mull
jge
jnp
adc
jecxz,pt
fstpl
pop
jg
cltd
jl
or
in
scas
sub
adc
test
inc
imul
int
mov
add
mov
inc
dec
fnsave
pop
lcall
scas
mov
add
xchg
pushf
cmc
rorb
fidivrs
mov
pop
repz
push
pop
add
rorl
inc
test
cmp
hlt
cltd
mov
cmovbe
mov
jo
or
cld
sbb
aam
inc
insb
sbb
das
mov
adc
and
inc
sbb
adc
pop
loop
push
xchg
or
inc
jecxz
cmp
xchg
imul
mov
or
inc
push
cld
fldt
xchg
xor
das
inc
je
mov
mov
cld
sbb
dec
add
fdivs
xchg
into
jge
in
dec
sbb
xchg
mov
pop
and
push
adc
cltd
adc
jbe
or
push
dec
pop
or
xchg
push
or
pusha
xor
test
dec
sbb
and
popf
inc
fnstcw
push
mov
mov
arpl
adc
mov
ja
ud1
xchg
test
adc
leave
jns
dec
add
mov
into
sahf
or
and
cwtl
loop
and
mov
stos
adc
mov
scas
xchg
loopne
cmp
mov
jns
mov
pop
mov
sar
pop
ret
js
pop
cs
mov
mov
call
jne
cmp
push
mov
fldl
inc
push
insl
adc
cld
scas
mov
lahf
add
push
add
push
iret
and
pushf
xchg
cmp
dec
xchg
dec
pop
rcrb
cmp
into
mov
pop
ja
pop
jbe
out
pop
cwtl
fisttpll
out
aas
int
push
xor
push
ja
xor
jmp
leave
mov
inc
xchg
jmp
cmp
jns
fstps
dec
test
sub
fadds
es
lods
aam
push
xchg
push
mov
ret
xchg
mov
icebp
cltd
sbb
rolb
gs
cltd
push
dec
cwtl
push
xlat
or
sub
sbb
int3
call
cmc
mov
xchg
or
and
push
mov
lds
adc
cwtl
stos
cltd
icebp
pusha
jne
xor
aas
lods
icebp
sub
cmp
movsb
addl
ret
pop
dec
in
sbb
mov
jae
mov
xor
outsb
lock
jae
mov
xor
xor
sub
mov
lods
icebp
lods
int3
add
xor
sbb
xchg
mov
aaa
imul
and
mov
cmp
jecxz
cmp
or
fists
pop
lcall
cmpsb
cli
inc
mov
rcl
fs
test
repnz
push
and
mov
bound
incl
xchg
fidivl
xorl
cwtl
pop
mov
add
jecxz
push
lahf
xchg
aad
sub
jmp
mov
jmp
rcr
cmp
cmovno
ss
push
xchg
pop
loopne
mov
dec
popf
mov
jno
repz
lock
inc
and
iret
int3
mov
ret
subb
sahf
jg,pt
test
ret
sub
mov
and
or
dec
nop
jmp
xor
rcll
pop
sub
push
call
dec
pop
ss
cwtl
sbb
cmp
hlt
daa
adc
rcr
mov
mov
inc
pop
ror
mov
cwtl
push
adc
xchg
outsb
adc
lods
test
call
mov
cmpb
mov
repz
lods
push
test
push
pop
outsb
pop
repz
pop
aas
dec
clc
out
in
icebp
in
and
push
daa
and
adcb
rorb
jnp
adc
push
pop
test
push
aad
insl
adc
int
pop
sti
popaw
inc
sbb
daa
imul
aad
int3
or
hlt
or
mov
outsl
cmpsl
aaa
add
mov
scas
cli
jnp
mov
daa
scas
daa
shlb
xor
sub
inc
jmp
push
xchg
mov
fisubs
or
pop
aas
daa
daa
cmpsb
xchg
mov
adc
je
push
jge
enter
je
pushf
cmp
in
hlt
test
cmc
mov
cmp
xlat
movsb
subb
inc
push
bound
testl
cmp
cmp
mov
xchg
ficompl
sbb
clc
mov
sarb
test
mov
cmp
xor
fucomi
daa
push
inc
add
cmp
cmp
xlat
cmp
in
cmp
pop
sbb
dec
xchg
pushf
mov
jne
sbb
in
inc
push
sub
push
pop
movsw
pusha
adc
adc
ret
out
add
inc
in
sbb
popf
sbb
ficoms
push
roll
stc
pop
inc
mov
jg
movsb
push
cmp
xchg
subb
stc
push
out
xchg
js
mov
and
mov
xchg
gs
iret
fxch
mov
jge
lds
sbb
fs
adc
pop
mov
scas
mov
loope
lret
mov
push
in
sbb
je
xor
js
aam
push
sbb
das
adc
add
pop
mov
outsb
jge
mov
inc
sbb
test
mov
xchg
add
sbb
dec
or
negl
out
js
in
fldt
xor
fsubrl
push
out
pusha
push
xchg
sub
call
sbb
mov
jnp
jae
sbb
pop
adc
cmpsl
fadd
loop
push
mov
xor
ja
insl
addr16
or
cli
arpl
mov
jnp
push
sub
fs
xor
or
out
mulb
lods
scas
mov
pop
daa
leave
mov
dec
js
stc
pop
popf
xchg
xchg
jge
outsl
sbb
mov
inc
lcall
push
jo
fmul
jns
and
flds
xor
out
jo
sub
sub
leave
hlt
loop
das
mov
fisttpll
cmpsl
xor
cmp
pusha
cmp
icebp
sbb
or
lock
mov
and
cwtl
adc
jl
sbbl
jns
js
ds
jp
loopne
imul
dec
pop
push
test
push
call
bound
jnp
jne
sahf
mov
pusha
sub
popf
aas
mov
rcrl
imul
pop
insb
out
inc
add
jnp
lahf
js
cmc
aad
out
iret
insb
pop
dec
jp
repnz
mov
add
sbb
stc
or
in
or
icebp
in
cmp
adc
sub
or
push
imull
fisubl
fnstenv
add
cmpsl
mov
mov
popf
std
lods
push
out
fnstenv
add
or
data16
test
outsb
xor
push
rorb
adc
xchg
lret
adc
bswap
cmp
loope
int3
dec
addr16
mov
adc
lret
dec
dec
mov
sbb
adc
adc
aam
outsl
jle
es
and
push
stos
xchg
pop
mov
and
out
push
or
push
and
aam
mulb
scas
out
adc
pop
inc
push
sub
adc
xchg
dec
add
mov
mov
iret
iret
enter
push
and
inc
test
imul
mov
dec
ret
lcall
or
sub
and
inc
cmp
dec
mov
lcall
lods
push
dec
cs
addr16
pop
outsb
pop
scas
pushf
pop
iret
pop
fisubs
dec
xchg
xorl
push
lret
pop
mov
rorl
jge
js
stos
jb
xchg
lods
xchg
lahf
ficoml
inc
pop
mov
push
insl
int
xchg
and
repz
mov
lahf
orb
add
mov
adc
push
mov
xor
sahf
bnd
mov
out
lret
adc
sub
ljmp
jmp
cmpsb
pop
push
jb
cmp
push
in
sub
and
dec
jmp
pop
fbstp
js
inc
jne
inc
jle
add
xchg
fnstsw
mov
pusha
xchg
push
pusha
jle
dec
shlb
sbb
sub
jno
xchg
iret
fidivs
jns
mov
or
xchg
pusha
aad
in
lret
andl
data16
jg
xadd
pushf
dec
mov
call
shrl
ds
sub
daa
sbb
xor
xor
dec
jmp
xchg
loope
inc
int
cli
xor
call
adc
iret
or
leave
jg
adc
sbb
popl
ljmp
push
divb
jns
dec
lds
test
jg
jmp
dec
mov
pop
add
mov
sbb
stc
inc
dec
inc
bswap
xchg
push
cs
jp
fiaddl
jmp
add
call
xor
cmpsl
cmpsb
mov
clc
mov
xchg
and
pop
outsl
insl
add
mov
or
push
mov
cltd
rclb
inc
fwait
xchg
fmul
xchg
push
adc
mov
or
sbb
add
push
fidivs
aaa
mov
push
push
in
pop
mov
inc
push
cmp
push
sbb
fwait
cli
addr16
mov
xchg
cmpsl
dec
mov
stos
cli
insb
push
sahf
jp
jae
sub
fsubrp
pop
aam
test
mov
push
rorl
mov
push
adc
xchg
cmp
xor
add
jo
inc
out
in
and
dec
popa
jne
jp
clc
std
pop
jg
lret
dec
push
jecxz
mov
push
xor
mov
xchg
inc
mov
cmp
push
pop
lods
push
mov
mov
ds
jge
xchg
in
sub
scas
mov
push
sbb
mov
xor
inc
std
cmpsl
push
mov
dec
aas
cmp
int
sub
and
mov
ss
fsub
xor
pushl
push
outsb
jbe
mov
inc
sbb
mov
push
ficompl
sbb
inc
or
sbb
adc
pop
cli
js
push
sub
xchg
in
mov
add
repnz
cmp
std
sbb
not
cmp
aas
inc
shrl
push
push
loop
or
mov
sarl
out
ret
xchg
out
pop
lods
test
ret
or
test
mov
pop
jle
sbb
out
inc
cmpsb
adc
addb
pusha
popa
test
push
adc
pop
aaa
sub
jge
cmp
inc
arpl
into
adc
in
mov
movsb
subl
push
or
xchg
and
lcall
and
adc
jb
xchg
hlt
adc
jb
push
ret
mov
or
iret
arpl
das
mov
fidivs
pop
testl
push
ret
loop
sbb
sahf
pushf
cld
jnp
test
cmp
mov
push
mov
out
mov
fwait
daa
push
ljmp
js
in
jno
adc
adc
mov
inc
loop
in
mov
leave
in
cli
cmpsb
xchg
repnz
adc
hlt
inc
push
mov
movsl
call
cwtl
scas
cltd
mov
push
les
cmp
out
adc
xchg
mov
mov
or
cmp
push
mov
lock
jg
dec
cmp
int
push
sbb
mov
pop
inc
roll
fisttps
rcrb
shl
jne
cmpsb
and
pusha
les
dec
fisubl
testb
addr16
ja
mov
lcall
in
test
mov
lcall
inc
scas
cmc
in
push
test
adcl
pop
imul
scas
cmp
stos
mov
out
out
pop
jg
movsb
cwtl
xor
out
sahf
lret
repnz
adcl
lahf
in
push
mov
jns
push
pusha
cmp
cld
mov
inc
push
sti
aaa
jb
and
imul
mov
xlat
jo
mov
mov
dec
fnstenv
es
xchg
xchg
xor
stc
fidivrl
push
inc
xor
in
pop
int
xor
sbb
adc
cli
xchg
daa
mov
xchg
mov
hlt
xchg
lods
and
xchg
push
pop
mov
test
stc
and
shrl
pushf
ss
cmp
xor
ja
sub
and
mov
inc
imul
pop
lods
jmp
cli
out
stos
bound
movsl
add
aas
leave
lods
stos
cld
lret
xor
sbb
mov
and
xor
push
pop
inc
testb
cs
mov
xor
and
test
push
jo
jmp
dec
mov
ds
pop
shlb
cld
sub
aas
insb
pop
xor
push
mov
jge
ljmp
and
pop
mov
and
jb
test
jmp
lds
mov
xchg
add
pop
fwait
mov
jp
arpl
incl
push
add
mov
and
xor
inc
cs
loopne
movsl
out
xor
jae
sbb
push
rcll
test
popa
cmp
lods
mov
xchg
jecxz
scas
in
call
sbb
test
inc
push
fldt
push
loopne
jb
mov
and
adc
inc
mov
idivl
cmp
mov
out
cmpsb
ss
out
inc
push
insb
arpl
mov
stos
push
xor
mov
in
inc
xor
jo
mov
dec
clc
shl
cwtl
jg
je
ds
in
insb
mov
dec
add
mov
out
add
or
push
ja
cmpsb
lods
sub
ljmp
mov
out
shrb
inc
mov
pop
loopne
popf
loop
push
ja
sbb
daa
dec
pop
decl
test
inc
mov
mov
push
lret
ds
xorl
dec
in
push
popa
sbb
cld
sub
sub
aas
into
popa
and
add
inc
xchg
sub
cs
iret
xchg
and
out
jge
xchg
inc
test
jnp
push
int3
pop
ror
fcoml
pop
mov
fldl
les
and
outsb
lock
ficompl
or
movsl
add
imul
add
es
dec
ret
inc
add
movsl
xor
fiaddl
sub
adc
imul
iret
movsl
mov
mov
add
rorl
jge
sbb
mov
mov
addb
sbb
fiaddl
lock
pop
test
pop
negl
cmpsl
and
mov
sub
pop
cmp
loope
dec
add
aas
cld
pop
jne
add
and
cmp
gs
adc
jecxz
stos
test
push
js
pop
clc
inc
in
js
loope
mov
jbe
sbb
adc
addl
rorl
sahf
pop
pop
cmp
push
cmp
clc
cmp
repz
sbb
icebp
or
imul
mov
add
int
mov
mov
mov
loope
sub
jmp
mov
inc
mov
inc
jmp
js
mov
fisttpl
inc
jae
mov
sub
fwait
adc
into
std
push
insb
lods
in
mov
fisttpl
jne
rclb
movsl
jle
mov
mov
insl
xchg
pushl
shlb
insb
shrb
adc
je
repnz
lcall
jns
rcrb
arpl
adc
ret
test
or
pusha
js
pop
mov
mov
lods
push
rcrb
mov
lret
imul
iret
push
and
dec
push
mov
shrb
roll
insb
jnp
lods
push
mov
push
xor
mov
xor
sti
jmp
sbb
stos
jl
inc
movsl
ljmp
lahf
fdivrl
in
jmp
outsl
inc
or
nop
pop
jg
push
out
or
push
add
sbb
jp
mov
outsb
push
xor
dec
in
xor
mov
push
pushf
xor
jp
dec
sub
int3
xchg
cwtl
xchg
xchg
nop
cmp
test
mov
jae
aad
push
iret
inc
dec
out
leave
xchg
xchg
mov
dec
push
xor
es
fucomip
mov
cmc
push
adc
pop
dec
inc
inc
in
sub
lods
repnz
dec
negb
data16
in
inc
inc
dec
lods
mov
dec
fwait
push
mov
call
lock
aaa
cmp
jl
push
jle
dec
mov
ret
movsl
ret
mov
rorb
xchg
cmp
cmp
out
push
sub
push
adc
xchg
movsl
loop
mov
mov
adc
jno
clc
sub
loop
test
add
and
push
xor
int
or
jge
sub
pop
xchg
jbe
gs
pop
das
fwait
mov
pop
mov
or
and
subb
add
insl
loopne
push
inc
insl
push
jle
movsw
cmp
xor
jle
in
mov
movsb
jmp
in
rorb
fnstcw
xchg
mov
mov
clc
insb
xlat
push
outsb
int
mov
fwait
and
push
mov
dec
sub
sbb
leave
fstp
int
mov
cltd
lea
jns
dec
pop
pop
dec
sub
sbb
leave
fstp
int
mov
cltd
lea
jns
dec
and
cmp
jmp
fstp
int
mov
fwait
lea
jnp
dec
pop
pop
dec
sub
cltd
or
arpl
fnstcw
jbe
data16
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
xchg
into
adc
and
xor
stc
out
icebp
add
xchg
pop
mov
push
rcrb
add
adc
and
xor
inc
mov
arpl
xchg
ds
jle
push
rcrl
jecxz
repz
adc
and
xor
inc
mov
arpl
xchg
pop
ret
jle
dec
mov
jae,pt
adc
enter
cwtl
je
mov
lods
cmp
sti
iret
leave
inc
xchg
mov
js
push
cwtl
sahf
pop
push
mov
inc
or
push
mulb
ds
bnd
or
xchg
adc
sub
push
xchg
inc
add
dec
call
mov
mov
jge
adc
pusha
shll
pop
add
inc
jg
andl
inc
xchg
xchg
push
xor
fs
sar
mov
cs
and
add
mov
out
repz
mov
nop
push
mov
mov
pop
adc
test
sti
fwait
adc
cmp
jle
jg
sbb
cmp
aas
pop
into
adc
and
xor
inc
mov
arpl
xchg
pop
mov
push
rcrl
jecxz
repz
ja
push
fimuls
jge
add
ss
and
push
out
jmp
and
int3
push
xlat
cmp
sub
jg
into
push
fcoml
jnp
es
aaa
cli
arpl
or
fisttpl
adc
dec
in
outsb
jne
cmp
fwait
add
jae
orl
mov
push
rcrl
jecxz
repz
adc
and
xor
inc
mov
arpl
xchg
pop
mov
push
rcrl
jecxz
repz
push
xchg
scas
pop
popa
mov
adc
xchg
lods
lret
imul
mov
std
pop
push
jecxz
mov
mov
or
adc
add
insb
jp
mov
push
or
dec
sub
pop
aam
in
sub
adc
mov
mov
iret
popf
mov
not
sbb
mov
push
xchg
or
addr16
push
pop
rolb
dec
stos
mov
inc
push
aas
out
add
push
fsubs
cwtl
mov
push
out
pop
and
add
adc
dec
jmp
imul
fs
cli
mov
and
and
fmul
mov
push
call
cmp
mov
xor
and
stc
mov
in
sbb
dec
mov
pop
leave
movsbl
sbb
aad
sarl
dec
push
pop
sahf
out
sbb
nop
int3
div
xchg
cmp
mov
push
push
adc
stos
rcr
xchg
mov
dec
popf
dec
fdivl
fcoml
mov
cld
rol
imul
mov
aaa
and
ja
adc
scas
push
imul
sahf
mov
inc
je
add
test
movsl
pop
rcrb
fwait
js
and
ljmp
nop
movsl
stc
dec
xchg
lret
mull
pop
push
and
cmp
outsl
ficompl
lahf
inc
xchg
fcomp
sbb
adc
adc
dec
inc
mov
adc
jg
arpl
xchg
cli
xchg
rcrl
sbb
dec
mov
insb
ljmp
push
ljmp
add
sbb
scas
sahf
dec
xchg
pushf
gs
jne
in
and
test
adc
mov
jne
mov
popf
lods
add
dec
sub
inc
inc
scas
cmova
loope
jmp
loope
mov
sub
das
adc
fildl
inc
out
in
cwtl
hlt
ret
sub
movsl
xchg
lahf
dec
mov
push
cmp
dec
lods
roll
push
shl
pop
lcall
push
inc
jne
ret
add
mov
xor
movsl
jno
lahf
ja
ror
movsl
cli
fs
pop
xchg
adcl
data16
insl
mov
sbbl
mov
cld
cmp
daa
xchg
push
ja
sub
insb
outsb
cwtl
pop
rolb
jns
insb
loope
jmp
scas
mov
sarl
or
or
dec
das
xlat
or
in
mov
mov
and
pop
xchg
xchg
rclb
stc
sti
cmp
and
outsl
test
cwtl
or
mov
movsb
cmp
xchg
ret
sbb
paddb
inc
je
dec
jne
pop
push
inc
add
add
fistl
in
repz
pop
rcrb
aaa
ss
repnz
cli
jbe
insl
sbb
nop
push
mov
orl
cmp
cli
js
lret
jmp
pop
xor
xor
in
mov
mov
das
sahf
jnp
or
xlat
out
cmp
repz
repz
mov
mov
xchg
pusha
jae
inc
lret
adc
lock
inc
scas
out
cmp
fwait
jae
mov
fstp
cld
dec
rorb
mov
repz
fsubl
cltd
add
push
add
insb
xchg
jno
je
add
xchg
mov
xor
shll
jmp
stos
test
repnz
dec
stos
stc
sahf
mov
adc
sbb
sbb
fimuls
mov
push
mov
and
mov
insb
ss
xchg
jno
jg
pop
not
mov
lret
loopne
enter
int3
push
aas
add
mov
enter
aas
and
imul
jl
add
sbb
and
sti
xchg
je
stos
in
movsl
or
mov
add
imul
mov
inc
pop
cli
or
jo
and
add
std
in
push
ds
mov
xchg
aam
cmpb
imul
push
pop
outsb
inc
jno
xor
mov
add
or
push
fcmovu
ljmp
sbb
sbb
lret
ret
clc
sub
adc
cs
push
fldenv
lret
cmp
arpl
in
jmp
cld
xchg
sbb
adc
mov
loope
fistps
pop
outsl
mov
sbb
frstor
xor
data16
arpl
addl
push
aad
test
and
test
push
stc
repnz
jne
movsl
push
sbb
fstl
push
das
or
pop
pop
cmp
fimull
xor
xor
xacquire
mov
push
mov
incl
dec
or
inc
dec
cmpb
push
cmc
ret
mov
xchg
je
jg
xchg
jb
loope
xor
xchg
je
sub
push
and
es
addr16
mov
andl
stos
ss
in
pop
inc
loopne
or
iret
xorb
jmp
jmp
sbb
jnp
push
sbb
push
insb
enter
mov
dec
bound
outsb
call
loope
aam
mov
pop
xor
out
and
add
punpckldq
cmp
out
cmp
jl
cmp
cli
sarl
leave
movsl
movl
push
and
aad
popf
push
aam
into
dec
pop
ja
stos
sbb
into
sti
sbb
inc
shll
push
les
mov
pop
push
fadd
or
cmp
pop
cld
and
mov
daa
sahf
insb
lahf
adc
mov
sbb
jno
into
mov
fstps
dec
jp
push
hlt
mov
adc
orl
shlb
adcl
mov
push
xor
sub
adc
and
jp
shll
mov
loopne
shll
dec
iret
pop
fbld
push
or
adc
cmp
aas
and
jbe
shlb
ljmp
mov
iret
jp
in
xor
pop
jle
jns
ljmp
aaa
mov
dec
aas
add
sub
and
xchg
out
sbb
mov
lahf
sub
into
fdivs
clc
mov
rcrb
mov
or
adc
mov
pop
stos
into
inc
subl
js
mov
push
aam
daa
call
ljmp
dec
jmp
std
scas
inc
aad
mov
lcall
cmp
popf
inc
and
imul
bound
pop
test
shlb
or
in
in
mov
or
jg
movsl
cmpsb
cs
sbb
jecxz
out
add
add
jno
mov
dec
jo
dec
fwait
mov
popa
xor
and
aam
jmp
push
popf
dec
jp
scas
cli
mov
sbb
adc
lods
xchg
jmp
int3
sbb
add
or
shll
idivl
mov
repz
enter
sub
scas
lret
cmp
rcll
mov
sahf
arpl
sbb
lods
sarl
test
pop
push
inc
inc
dec
pop
scas
jne
jmp
scas
enter
xchg
rolb
sbb
iret
sarl
dec
or
xchg
les
jp
cmpb
out
cmp
lret
cmc
adc
imull
movsb
cmp
jnp
jp
stos
outsb
xor
mov
lcall
inc
push
orl
ss
out
sbb
fsubl
mov
dec
xchg
jle
cmp
pop
push
loop
cmp
movsb
les
divl
mov
xlat
dec
mov
adc
aaa
sub
out
in
aad
shr
mov
dec
sbb
pop
sbb
mov
std
jbe
loopne
test
pop
imul
mov
or
jb
aad
mov
xchg
xor
lahf
sub
push
filds
pop
les
sub
sti
ljmp
mov
lds
aas
adc
add
clc
inc
out
mov
jo
fwait
lods
cmp
ljmp
inc
insl
sti
imulb
xchg
test
scas
push
les
ret
adcb
xchg
scas
pop
adc
loopne
and
ficompl
nop
pop
aaa
sub
iret
call
pop
sub
shll
out
daa
cmp
js
sbb
jl
mov
mov
repnz
pop
push
push
mov
xor
andl
pop
rol
push
sub
xchg
or
mov
dec
sbbl
adc
fadds
call
ja
por
jg
aam
xor
jno
lret
mov
out
push
jbe
mov
jle
jp
cld
rol
pop
loope
sub
ffree
cli
mov
mov
pop
cwtl
mov
xchg
subl
and
cs
int3
sub
inc
ja
fcomps
mov
jne
out
lea
xlat
dec
jge
mov
hlt
adc
push
push
adc
jmp
dec
fstl
inc
orb
mov
loope
stos
lcall
mov
pop
or
loopne
pop
xor
or
xor
fldl2t
movsl
adc
mov
and
cs
xor
xchg
shll
mov
mov
inc
pop
or
fdivl
mov
leave
ja
dec
fdivl
sar
test
or
push
popa
xchg
sub
inc
add
mov
shlb
or
xor
dec
push
sub
fxch
decb
mov
test
es
int
test
stc
hlt
cmp
cmpsb
orb
xor
xchg
out
push
aas
jle
aas
mov
mov
cmp
or
out
mov
xchg
xchg
and
repz
scas
or
repz
popa
dec
pop
leave
insb
fists
mov
lds
sbb
div
popf
dec
dec
movsb
sub
mov
in
push
cmp
push
pop
pop
stos
rorl
pop
pop
insb
movsb
lcall
fcoml
arpl
mov
xor
mov
add
std
mov
ljmp
cmpsb
loop
mov
push
je
push
mov
cmp
and
fsubrp
mov
fcomp
movsl
test
aaa
pushf
subb
pusha
in
ficoms
pop
sub
fdivrs
fiaddl
jb
cli
mov
mov
aam
cmp
pop
push
dec
pushf
loopne
cld
rorb
and
cmc
enter
jp
mov
push
xchg
xchg
in
add
jecxz
sbb
xchg
push
jle
xchg
movsl
cltd
and
jnp
adc
js
pop
lret
sub
pop
or
fdivl
clc
lods
cmp
push
add
mov
mov
jbe
pop
mov
insb
sub
out
mov
mov
cmp
les
push
dec
mov
shlb
add
movl
cli
and
adc
lahf
lret
sbb
out
das
dec
jle
sbb
out
enter
lods
mov
cmc
hlt
mov
clc
hlt
idivl
frstor
add
mov
pop
lds
mov
popf
imul
xchg
daa
shrb
xlat
adc
sbb
sahf
scas
je
push
sub
mov
daa
ficompl
jg
fs
arpl
pop
or
jo
mov
notl
out
push
push
loopne
lods
icebp
cmpsb
cmc
xchg
xor
in
outsl
test
sub
pop
fucom
shrl
inc
iret
xor
call
fwait
loope
pushf
jns
sbb
xor
movsl
dec
cwtl
and
fcom
lods
cmpsl
mov
int
adc
aam
popf
les
js
rcrb
mov
cmp
mov
fistpll
mov
fiaddl
sbb
int
mov
outsb
pushf
sub
je
xchg
loope
test
fwait
test
sub
push
mov
add
aas
inc
sub
push
cld
fwait
mov
enter
dec
aad
sub
cwtl
pop
loopne
cli
lock
rorl
and
jecxz
es
gs
outsl
lods
ud2
movsb
mov
mov
stos
sti
ret
xchg
aam
movsl
cmp
cmp
in
pop
mov
stos
mov
or
xor
imul
xchg
mov
pop
test
dec
outsb
ss
insb
and
test
xchg
outsl
mov
ficomps
cmc
or
in
jbe
pop
xor
or
std
jmp
movsb
inc
mov
adc
xor
inc
pop
aad
pushf
mov
cmp
mov
and
std
sub
sub
loop
dec
xlat
jae
mov
push
sbb
mov
push
adc
push
add
sub
xor
xchg
shrb
xor
gs
lods
mov
jmp
cmp
daa
cld
jns
dec
push
fistpll
cld
add
int3
mov
ret
ret
mov
dec
adc
xor
mov
insb
and
xor
fcoml
test
xchg
sbb
push
testl
sbb
push
testb
jae
mov
mov
ja
stos
test
fcmovne
push
stos
and
rcll
ss
mov
lods
xchg
ret
cltd
movl
das
jg
xchg
in
push
roll
imul
dec
xor
dec
icebp
scas
or
js
sti
fistpl
inc
in
push
aad
push
add
dec
dec
daa
ljmp
les
out
shlb
pop
test
daa
repnz
sub
adc
fsubrl
shll
sbb
loopne
lret
mov
pop
xchg
mov
adc
mov
pusha
aam
nop
jns
idiv
jp
icebp
mov
aas
lds
add
mov
rorb
test
pop
lods
inc
repnz
adc
add
lock
jge
gs
xor
inc
test
adc
add
test
sbb
push
push
sub
sbb
jnp
mov
or
imul
jg
pusha
lret
fstps
lret
jae
loop
dec
ret
pop
daa
dec
cmpsl
or
sbb
jo
jnp
jge
inc
rol
aaa
addr16
xor
cmp
leave
lds
dec
or
jmp
jge
jp
inc
ret
fsts
clc
enter
and
loop
or
in
mov
xchg
push
cli
mov
cmp
sbb
mov
loope
loope
cmpsl
mov
sub
loop
cmp
nop
cmp
sub
inc
stos
mov
shrl
shll
push
mov
int3
shlb
enter
push
mov
inc
cmc
mov
cmp
fidivrl
xor
mov
cmc
in
adc
dec
decb
sbb
scas
xchg
pop
les
arpl
mov
jae
sub
mov
lret
adc
push
add
out
sar
xchg
ss
fcmovnu
lret
outsl
dec
std
ss
dec
in
xor
jne
mov
sub
sbbl
ja
sbb
loope
adc
sub
xor
mov
add
sbb
push
rclb
sub
cmp
loopne
insl
adc
xor
push
and
or
in
jmp
xchg
push
jb
jmp
adc
pop
ljmpw
jmp
subl
cmp
inc
and
push
jl
adc
je
xchg
movsl
fstpl
or
and
gs
jne
cmpl
push
fcoms
cli
stos
jmp
ret
enter
pop
cmp
xchg
fbstp
push
fs
pop
repz
sar
xlat
call
sbb
pop
sbb
adc
int
out
adc
mov
dec
sbb
xor
sub
or
sub
inc
int3
xor
mov
mov
sub
shlb
mov
leave
add
icebp
sub
jo
decb
loope
pop
mov
out
pushf
or
or
arpl
jge
shl
fsubrp
call
hlt
mov
iret
mov
mov
pop
mov
mov
ds
mov
hlt
das
pop
add
stos
lods
and
push
cmc
fisubrs
xor
mov
pop
xor
int3
mov
lret
xor
pop
lcall
mov
xchg
mov
cmp
inc
pop
pop
je
adcb
test
divb
lcall
mov
xchg
mov
push
sbb
insb
mov
stos
mov
xchg
sbb
mov
les
pusha
push
jmp
or
dec
scas
notb
adc
pop
mov
pop
fmuls
dec
jo
xchg
cmpsb
inc
fnstenv
mov
and
ret
movsl
jnp
or
mov
inc
arpl
push
sbb
mov
test
sbb
std
fsubr
push
adc
mov
mov
mov
add
inc
sahf
and
cmc
pop
mov
cmpsl
add
jnp
xchg
mov
adc
shrb
fcomps
movb
mov
testb
in
xor
inc
mov
mov
arpl
push
xchg
nop
inc
sarb
ror
imul
push
fwait
fwait
je
aaa
and
xor
into
mov
mov
das
xor
arpl
adc
imul
jp
insl
iret
dec
xor
dec
xchg
stos
shll
adc
or
mov
pop
scas
mov
pop
icebp
ret
push
inc
pop
test
test
or
sbb
repnz
push
xchg
or
mov
mov
and
adcl
mov
mov
bound
out
push
rcl
mov
in
xchg
push
jg
stos
adc
cld
mov
xor
and
scas
add
les
lcall
mov
pop
xlat
pop
adc
inc
lahf
mov
dec
or
inc
lahf
xlat
ficoms
mov
mov
ds
pop
xlat
stos
inc
mov
hlt
addr16
bt
fdivl
das
mov
lods
push
push
dec
xchg
imul
faddl
std
jbe
in
inc
push
dec
cmp
repnz
jne
dec
xor
push
lods
test
std
data16
fdiv
mov
test
mov
lcall
dec
aad
xchg
insl
jecxz
mov
cmp
and
lret
iret
sbb
jb
or
in
jmp
ds
mov
xchg
clc
roll
cmpsb
mov
jl
nop
mov
rcr
push
inc
nop
add
cmp
ja,pt
push
cmp
jecxz
mov
lcall
adc
lock
add
mov
stos
and
jo
lret
rclb
cld
cmp
cmpsl
mov
add
jae
lods
jp
mov
inc
fdivrs
call
aam
jp
je
cld
mov
dec
bound
mov
xchg
bnd
push
lock
popf
repz
rolb
pop
pop
sub
bound
sub
jmp
dec
mov
insl
push
ja
mov
xor
ds
and
ds
cli
test
mov
test
push
ret
mov
sbb
out
mov
xor
aas
lcall
test
push
mov
jle
add
mov
inc
add
cli
cmc
out
test
jnp
dec
jmp
mov
add
sbb
dec
out
xchg
test
movsl
sub
xchg
sbb
mov
test
jecxz
pop
mov
int3
adc
fdivrs
pusha
fyl2x
dec
add
icebp
inc
fistpl
dec
mov
iret
mov
fistps
fistl
or
paddusw
movups
scas
js
adc
xlat
xchg
mov
mov
cmp
dec
out
adc
cmp
fidivrl
add
mov
es
ja
out
clc
lds
jb
sbb
xchg
mov
cmp
insb
push
daa
pushf
popa
xchg
test
cmp
mov
and
jmp
and
xor
mov
inc
dec
pushf
cmp
jns
xchg
mov
push
loopne
dec
nop
push
into
pusha
xchg
jno
push
in
dec
cmpb
in
cmp
jmp
xchg
andb
jg
test
jnp
outsb
sub
mov
mov
dec
cli
js
lahf
daa
out
adc
mov
sbb
or
mov
cmc
mov
gs
mov
fsubs
jmp
inc
clc
mov
out
cmp
mov
shrl
mov
int3
mov
mov
out
int3
iret
inc
inc
clc
out
jmp
mov
add
imul
or
test
stos
add
cmp
sbb
cwtl
scas
popf
in
imul
mov
jo
cltd
xchg
popf
gs
mov
andl
arpl
cs
scas
lock
in
push
popf
scas
inc
add
xchg
sbb
cmp
push
jno
rol
lea
or
rcl
rcll
es
aam
out
out
sbb
sti
rorb
jecxz
mov
adc
fbstp
inc
enter
dec
lahf
add
nop
xor
gs
adc
das
scas
mov
cld
and
mov
sub
or
stc
xchg
or
mov
pop
jp
fwait
jp
stos
cwtl
push
or
sbb
jle
xchg
fdivs
xchg
out
xor
inc
mov
arpl
xchg
pop
mov
push
rcrl
jecxz
repz
adc
and
xor
inc
mov
arpl
xchg
pop
mov
push
rcrl
jecxz
repz
adc
outsb
xor
inc
mov
arpl
xchg
pop
mov
push
rcrl
jecxz
repnz
adc
and
xor
inc
mov
arpl
xchg
hlt
or
or
or
mov
imul
popa
clc
push
aad
fcoml
push
push
mov
add
adc
and
xor
leave
and
xor
add
adc
inc
mov
adc
jno
add
xor
sbb
push
xor
aaa
adc
inc
dec
push
inc
mov
adc
and
inc
cmpsl
subb
push
xchg
fcmovbe
lahf
movsl
inc
mov
jb
push
dec
outsb
fcmovnu
imul
and
popf
shll
std
mov
xor
dec
sahf
jg
test
mov
lock
jno
or
mov
sahf
xchg
int3
rorb
sbb
lods
test
inc
andb
mov
pop
add
inc
mov
xor
into
rolb
iret
push
pushl
sbb
in
stc
push
sbbl
nop
repnz
loopne
test
xor
es
mov
imul
mov
cmc
jno
test
adc
repnz
xor
add
jo
inc
or
mov
outsl
nop
popa
loopne
lock
push
xchg
mov
cmpsl
dec
movsl
inc
lahf
push
out
daa
in
mov
shlb
rclb
test
push
mov
mov
dec
pop
pop
cmpsb
dec
cmp
and
xor
jns
adc
add
sbb
push
movsl
jo
mov
loop
xchg
gs
les
jo
inc
mov
inc
mov
jno
add
adc
and
xor
shll
xor
add
adc
inc
mov
inc
mov
jno
add
adc
and
xor
shll
sbb
scas
xlat
int
repz
mov
mov
scas
inc
repnz
inc
xchg
addl
pop
xchg
enter
xor
xor
push
test
fs
or
push
mov
push
loope
fwait
test
add
lock
inc
stc
lds
shlb
call
inc
push
jo
out
ljmp
or
mov
shrb
or
inc
addr16
call
inc
lret
fstpt
mov
pushf
lea
xchg
orl
cmp
clc
ss
xchg
sbb
movsb
je
movl
cmp
bnd
and
ret
jns
mov
xchg
push
adc
daa
sub
ss
lret
data16
into
jl
dec
adc
popf
mov
jle
jne
pusha
inc
imulb
subb
call
mov
repz
xor
scas
add
sbb
xchg
cmc
jl
push
ret
mov
cltd
lds
in
pop
jp
gs
mov
xlat
scas
scas
lods
xlat
mov
sbb
icebp
loope
pop
fstpt
cld
jg
and
data16
push
lds
inc
xchg
lea
hlt
stos
in
inc
push
jl
mov
iret
mov
gs
mov
gs
jnp
daa
cmp
outsl
popf
mov
or
or
lret
inc
mov
push
xor
xchg
and
out
dec
and
xchg
add
adc
movl
mov
scas
and
mov
mov
cmp
jno
jbe
adc
mov
or
mov
and
out
jbe
icebp
lods
rcrb
stos
scas
ss
mov
test
add
aam
into
pop
out
js
dec
sqrtps
sets
in
rolb
xchg
lcall
xor
jns
repnz
out
enter
ficomps
sbb
pop
ret
push
aad
mov
aaa
mov
in
lcall
imul
mov
popf
or
cmp
pop
insl
inc
mov
pop
dec
dec
push
repz
cli
jbe
sahf
dec
jbe
out
pop
mov
xchg
mov
cli
jbe
push
jp
inc
jg
call
sarb
cli
sub
cmpsl
and
xor
sbb
xchg
out
mov
xchg
mov
sbb
stos
xchg
add
nop
in
jmp
xchg
daa
jo
stos
mov
xchg
jmp
mov
jmp
xchg
test
bound
inc
cmp
sub
jp
das
pop
mov
mov
cmp
sti
pop
lret
stos
dec
in
push
xor
cmp
add
jmp
outsl
sub
pop
insb
imul
mov
lahf
inc
movntq
adc
jns
fcomps
fildl
icebp
push
dec
test
fcoms
repz
lea
dec
shl
clc
mov
imul
push
and
test
daa
mov
ror
cmp
cmp
xchg
xchg
inc
push
out
out
mov
std
xorb
ja
dec
repz
inc
aam
push
loopne
cltd
lahf
mov
xchg
ljmp
das
pop
push
cmp
xchg
mov
jae
adc
jnp
pop
mov
imul
in
arpl
popl
in
mov
iret
sbb
daa
pusha
ljmp
out
xor
daa
mov
dec
fsubp
shll
dec
sub
repz
jno
mov
leave
shrb
arpl
fwait
popa
stc
cmpsb
cs
dec
push
mov
sub
add
cmp
and
inc
dec
add
mov
lret
pop
mov
lret
xchg
test
divb
out
jmp
pop
add
cmp
inc
push
add
lds
ljmp
mov
mov
hlt
cltd
push
rcll
lea
inc
orb
xor
sbb
pop
lea
call
or
pop
enter
inc
xchg
scas
add
sbb
sub
cmpsl
xchg
sub
mov
pushf
jmp
out
sbb
in
xchg
lock
jmp
orl
lds
mov
jne
sub
adc
mov
jnp
dec
mov
sti
xchg
jbe
loop
jno
aam
sbb
popa
cmp
aaa
sbb
adc
sbb
pop
fists
xchg
stc
pop
cmp
cli
jbe
or
loopne
xor
push
inc
mov
sub
pop
insl
push
jecxz
pop
or
out
dec
sub
jl
fsubp
pop
xor
push
sub
and
aaa
xchg
sub
out
dec
repnz
mov
sbb
sahf
dec
add
mov
sbb
stos
out
lret
int
and
enter
pop
inc
fstl
icebp
xor
scas
adcb
inc
lds
adc
shrb
or
cmc
bound
cmpsb
scas
inc
adc
mov
imul
xchg
fsqrt
addr16
insb
xor
pop
or
add
mov
mov
clc
push
jb
js
dec
sub
sbb
push
mov
arpl
inc
daa
int3
pop
xor
sub
cwtl
jecxz
sub
jecxz
gs
int3
xchg
mov
xlat
lds
adc
jp
out
sbb
shrb
jl
in
out
hlt
xor
sub
adc
mov
je
enter
scas
arpl
rolb
pop
scas
outsb
lea
cli
mov
repz
cltd
pop
outsl
pop
test
push
stos
fwait
xchg
nop
inc
mov
xlat
and
ret
pop
adc
pop
outsb
mov
es
addr16
mov
clc
xchg
negl
xchg
mov
fdiv
xchg
les
push
data16
ljmp
xchg
jnp
idiv
inc
add
jbe
insl
or
rclb
inc
in
sub
nop
pop
sub
jmp
cmp
lahf
push
mov
or
lods
mov
in
outsl
sub
sub
pop
cmp
cmp
es
xchg
push
push
imul
cmp
jno
outsb
ss
int
or
aam
sub
push
fildll
and
sbb
lahf
add
decb
int3
jmp
pushf
mov
mov
jp
ss
dec
xor
outsb
sbb
icebp
lods
add
fisttpl
sbb
cmpsb
mov
sti
inc
insb
mov
push
and
loopne
sbb
test
or
pop
cmp
or
sub
les
insl
in
jl
pop
inc
jecxz
into
jns
push
sub
frstor
sub
pop
fstpt
daa
xchg
iret
jb
aam
js
sbb
dec
pop
fprem
scas
jae
js
xchg
ja
mov
pop
mov
enter
and
pop
pushf
mov
jnp
add
movsb
icebp
adc
push
sbb
cmp
sahf
mov
lahf
mov
pop
and
xor
test
aad
push
mov
jecxz
mov
sub
mov
inc
add
cmp
shr
adc
aas
xlat
arpl
add
sahf
sbb
xor
rolb
iret
movsl
out
je
shlb
insb
rol
pop
pushf
repz
push
test
xchg
popa
push
shl
ja
enter
data16
pop
lret
mov
dec
outsb
sub
stos
xchg
lret
inc
scas
push
cwtl
add
mov
aaa
lcall
repnz
mov
adc
mov
lahf
lret
incl
or
bswap
nop
and
addl
cmc
sub
xchg
adc
jg
mov
inc
dec
movsb
push
xchg
or
scas
fisubs
repnz
mov
dec
leave
icebp
push
push
lret
jecxz
and
add
ss
cmp
lods
jmp
xchg
inc
mov
call
pop
sbb
stc
mov
popa
sarb
rorl
or
arpl
outsl
repz
fs
or
aas
pop
outsl
test
scas
push
inc
pop
fdivrl
inc
cmpsl
lcall
lds
jmp
loope
mov
sti
and
in
test
movsl
sbb
cmp
fs
jmp
lods
testb
or
lds
or
dec
ss
ljmp
dec
and
fsubl
mov
pop
jno
sbbb
mov
repz
stc
clc
jecxz
js
arpl
pop
adc
leave
mov
shrb
add
jb
enter
push
pop
mov
xchg
inc
aad
xchg
fst
mov
lea
mov
cmp
mov
gs
hlt
fmull
pushf
sub
xchg
dec
mov
sub
jnp
xchg
dec
fadd
inc
daa
faddp
jbe
lcall
push
test
pop
rorl
fwait
imul
pop
test
push
leave
cld
in
loop
mov
mov
rcl
rcrb
xchg
aad
jno
dec
add
into
inc
and
inc
stc
jle
test
test
rcll
mov
dec
lahf
mov
sub
sbb
pop
js
in
nop
pusha
pop
jge
daa
pop
fidivrl
push
in
lahf
mov
mov
fldl
mov
pop
dec
jnp
sub
xor
sub
adc
dec
pop
and
rolb
dec
xlat
push
aaa
popf
loopne
pushf
xlat
dec
mov
ret
mov
mov
cmpsl
shrb
data16
dec
pop
leave
or
test
repz
xchg
adc
pop
push
push
ror
insl
hlt
hlt
in
jb
stos
mov
cltd
jl
pop
bound
adcb
loope
sub
imul
loopne
mov
jns
jae
adc
dec
dec
mov
clc
pushf
in
insl
mov
leave
scas
repnz
jmp
cmpb
adc
mov
daa
inc
leave
or
imul
pushf
cmpsb
inc
sar
popa
insb
adc
mov
mov
jle
mov
fisubrl
jb
in
cwtl
ret
mov
leave
xchg
scas
push
push
sub
ja
bound
jecxz
mov
cs
xor
shlb
and
and
mov
sbb
xchg
mov
jge
aad
xchg
inc
cmp
xchg
ret
xor
adc
xor
mov
xchg
rol
push
push
jmp
adc
sub
shr
pop
cmc
push
loope
in
xor
sbb
popa
int3
push
out
or
and
jmp
adc
in
in
pop
inc
and
mov
xor
mov
scas
push
xor
out
xchg
aas
push
mov
jg
mov
mov
mov
repnz
in
mov
cmpl
xor
insb
aad
jecxz
repnz
pslld
sub
aaa
sub
mov
loope
bound
enter
test
pop
daa
adc
ljmp
and
loop
jns
mov
push
cmp
test
mov
mov
dec
pop
and
fs
adc
pop
push
ds
sbb
mov
mov
out
push
mov
and
dec
rcrl
in
xor
lret
mov
cmp
in
test
jmp
enter
sub
fidivrs
jo
cld
in
add
insl
popa
sbb
inc
sub
pop
bound
das
aam
imul
jb
inc
add
lods
lret
inc
or
in
push
in
inc
sti
in
cmpb
jae
mov
stos
enter
hlt
stc
adc
cmpsb
mov
gs
arpl
je
fiadds
pusha
enter
jne
mov
out
push
das
sbb
xchg
stos
mov
sub
lret
addr16
sbb
xchg
or
mov
dec
pop
popa
push
adc
out
and
xor
jmp
ret
or
adc
sub
mov
outsl
mov
and
mov
pop
add
gs
jp
divb
outsl
sarb
cmp
mov
cmp
les
mov
fwait
mov
sbb
lea
cli
mov
sahf
out
xchg
imul
xchg
xchg
cwtl
jb
pushf
fucomi
mov
xchg
add
sti
inc
pop
movsb
ljmp
insl
adc
scas
orb
mov
call
xor
out
lds
adc
inc
push
add
add
sarl
loope
mov
jmp
and
add
mov
mov
jl
ss
jp
jnp
adc
cs
add
push
push
inc
lea
jp
cmpsl
xor
adc
loop
mov
xchg
jl
mov
mov
fs
xchg
xor
andb
icebp
in
mov
mov
adc
mov
inc
js
push
lods
stos
or
sahf
lret
jno
push
inc
adc
push
js
mov
push
and
shll
out
xchg
add
mov
sha1msg2
cmpsl
sbb
stos
mov
push
jno
loop
push
mov
repz
push
pop
out
stos
mov
lret
in
fstpl
xor
add
xchg
mov
sahf
xor
inc
push
nop
in
pop
pop
dec
lahf
lahf
push
mov
and
mov
adc
cmc
xor
sti
lret
dec
cs
ja
sub
jecxz
mov
sbb
mov
jecxz
jle,pt
cmp
lret
ret
xchg
ret
add
lret
iret
mov
mov
lock
dec
aad
or
jecxz
in
rol
mov
sarb
jne
adc
lods
shll
jae
cmp
mov
das
push
mov
push
push
lds
mov
jnp
in
pop
lcall
xor
mov
or
add
jbe
push
jmp
mov
jge
fistps
jns
adc
jae
sbb
sbb
sbb
xchg
mov
mov
rep
push
out
or
sbb
lock
xor
adc
mov
pop
pop
lahf
aad
or
adc
cwtl
lods
imul
sbb
dec
jecxz
cs
or
addr16
cwtl
mov
mov
aam
xor
std
fstl
lret
cld
in
mov
in
pop
and
orl
std
or
adc
xchg
push
sub
bound
pop
testb
jns
cmp
mov
icebp
into
ja
xchg
in
lret
mov
out
adc
push
push
jno
shl
push
repz
push
sbb
jae
add
and
loope
mov
ret
outsl
out
xor
cs
sahf
das
xchg
insb
sbb
adc
outsb
test
idivb
movsb
rclb
xchg
jp
adc
push
mov
adcb
cmp
pop
push
movq
pushf
mov
popa
pushl
fbstp
jb
push
inc
lods
mov
enter
or
xchg
push
loop
adc
addb
repnz
mov
and
xchg
jno
pushf
dec
js
jg
xor
cmp
jo
adc
inc
lds
jge
sub
push
pusha
mov
imul
mov
and
clc
mov
cmp
dec
lahf
ds
mov
cmc
dec
sbb
jb
xchg
cltd
out
loop
inc
out
cmp
js
notb
mov
lret
cmp
xor
sbb
fucomip
inc
jo
popa
cmp
ret
loop
adc
cmp
test
out
add
dec
xchg
clc
cltd
mov
and
sbb
and
scas
mov
inc
aad
mov
inc
jb
inc
jnp
pop
pop
dec
pop
mov
mov
insb
jl
jp
xchg
mov
adc
xchg
mov
jg
sub
xor
mov
mov
jecxz
adc
inc
pushf
xchg
daa
add
mov
jno
lods
jns
xor
lods
imul
mov
fsts
les
jg
mov
lods
jp
dec
or
icebp
ds
outsl
ds
imul
adc
fmull
decb
out
sbb
fdivl
push
inc
sbb
test
or
out
fwait
je
push
ja
xor
xor
pop
add
das
incb
cmpsb
inc
popf
les
pop
ret
jae
cmp
imul
pop
cmp
dec
xor
push
lret
mov
adc
xchg
pop
dec
xchg
in
and
in
in
sahf
xor
into
mov
cld
add
adc
loope
cmp
inc
sbb
sbb
pop
popa
cltd
xchg
jo
or
xlat
inc
clc
adc
push
mov
fs
rclb
lock
mov
lahf
xlat
sbb
shll
movsb
js
mov
xor
aad
mov
xchg
or
push
xor
mov
orl
cmp
inc
leave
loopne
jg
inc
cli
and
sti
adc
faddl
lods
cmp
jle
fdivrs
cmpsb
mov
xchg
js
mov
push
iret
fisttpl
mov
lahf
and
in
push
ljmp
dec
test
jecxz
loopne
sbb
addr16
lret
insl
adc
mov
xchg
and
out
repnz
jae
sahf
pop
imul
leave
mov
add
xchg
or
movsl
pop
mov
shrb
pop
out
into
jns
inc
xchg
icebp
out
sbb
and
or
sub
push
mov
pusha
inc
fistps
fwait
cmp
jb
sti
rcrl
mov
inc
movsl
dec
adc
xchg
dec
adc
jge
loop
sbb
adc
js
push
or
pop
aad
push
nop
jl
lock
jg
popa
cltd
inc
das
cmpsl
xor
iret
pop
leave
out
xchg
xchg
sti
aas
push
jnp
mov
jnp
mov
das
cwtl
jo
and
jbe
mov
test
cmp
jae
popa
icebp
jecxz
or
lcall
mov
mov
push
fucomip
cwtl
loop
dec
mov
push
xor
xchg
sbb
fstl
jnp
sbb
sub
mov
push
iret
xor
ss
pop
enter
adcl
fcomp
jle
xchg
jp
or
xchg
fildll
mulb
mov
stc
adcl
ljmp
fistps
fs
push
int3
std
mov
cmp
or
in
rclb
ret
repnz
push
pop
test
add
stos
xor
xor
movsl
pop
pushf
in
es
inc
cmpsl
cmp
mov
mov
movsb
cld
push
ficoml
and
sub
test
and
cwtl
add
xchg
shr
dec
mov
sub
push
pusha
std
cmp
cltd
adc
mull
lock
mov
pop
mov
cltd
in
or
or
dec
scas
enter
out
fs
insb
add
and
push
loop
int
outsb
sub
pop
mov
aad
in
xor
lahf
adcb
xor
adc
pop
dec
jbe
inc
xorb
jg
das
add
mov
sub
jmp
vpacksswb
and
mov
and
mov
imul
setns
cld
cmpsb
xchg
jp
std
sbb
jecxz
out
pop
or
sbb
ss
sub
mov
ss
jnp
cmp
inc
dec
or
loope
mov
cmp
outsb
imul
pop
hlt
mov
imul
fstpt
xor
out
ret
cltd
mov
push
xor
push
push
out
sbb
add
xor
aam
mov
push
ffreep
ror
and
cmp
xchg
or
movsl
dec
inc
nop
movsb
div
je
lds
add
cmpsb
nop
test
orb
out
cmp
notl
mov
fisttpll
sahf
add
sub
rcll
imul
inc
push
idiv
mov
repz
hlt
cmpsl
jecxz
mov
adc
cmpsl
int3
push
mov
aad
pop
jp
dec
jp
std
insl
stos
inc
mov
or
in
pop
in
adc
sti
xor
or
loop
out
test
add
sub
sbb
sub
into
sarl
insl
imul
mov
ret
sbb
add
test
pop
inc
mov
stos
out
mov
push
fcoms
mov
notb
test
add
jns
ds
test
and
mov
and
test
inc
outsb
cmpsl
sbbb
repz
lods
xchg
jnp
jmp
sbb
sub
xchg
mov
sbb
lock
les
cltd
rcrb
jbe
mov
in
push
cmp
jmp
mov
cmp
xor
jbe
pushf
dec
std
lock
pop
push
cmovle
xor
movsb
test
lahf
add
fldl
cmpsb
pop
fmuls
sbb
mov
inc
out
in
in
pop
dec
pop
or
std
daa
push
inc
mov
lret
jo
mov
daa
mov
jne
int3
or
push
stos
xchg
push
adc
pop
push
xchg
dec
cmp
incl
daa
add
cmpsl
out
cmc
mov
lods
pmulhuw
inc
xlat
xchg
mov
gs
sbb
fimuls
lret
push
test
pop
mov
dec
mov
cmp
dec
mov
stc
mov
add
bound
cmp
loopne
lcall
enter
inc
scas
test
or
xor
je
mov
push
mov
lock
daa
pop
mov
iret
xor
push
cli
mov
les
mov
sbb
add
cmp
in
es
adc
inc
aaa
or
arpl
cld
adc
hlt
xor
in
adc
inc
mov
inc
mov
jno
add
adc
and
xor
shll
xor
add
adc
inc
mov
inc
mov
jno
add
adc
and
xor
shll
xor
add
adc
inc
mov
inc
mov
jne
add
or
and
and
xor
fsts
andl
nop
inc
mov
jno
jbe
cltd
pmaxub
into
das
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
roll
aad
jle
xchg
sub
jno
cmp
or
pop
add
push
add
add
or
and
add
add
add
add
add
or
dec
add
add
add
add
add
add
cld
add
xor
add
add
addb
add
add
add
add
add
mov
add
mov
mov
add
add
add
dec
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
bound
addb
add
add
add
pop
add
add
add
add
push
add
add
add
mov
add
add
test
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
sbb
mov
add
add
add
add
mov
add
mov
or
add
add
add
aad
loop
add
in
add
add
add
add
icebp
add
add
scas
add
add
add
add
add
ljmp
add
add
add
testb
add
add
add
add
add
add
add
pop
ret
add
add
add
out
bound
bound
sbb
add
add
aad
pop
add
ljmp
add
add
sub
add
xor
push
add
add
aad
testb
add
loopne
inc
add
add
add
add
add
add
lds
adc
mov
aas
add
add
add
add
cmpsl
add
mov
add
add
mov
testb
add
ret
add
add
add
add
add
add
in
add
add
add
add
add
add
icebp
add
add
lahf
add
add
add
test
bound
cld
add
bound
adc
aad
aaa
add
add
add
add
in
add
add
add
add
lahf
add
incl
bound
testb
add
dec
add
add
add
adc
push
add
popl
sub
dec
add
add
add
mov
pop
add
add
jne
sub
pop
add
add
add
iret
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
or
or
add
mov
add
add
add
add
add
add
xchg
add
add
add
add
fwait
add
or
add
pop
aad
jne
sub
lea
push
aad
adc
clc
add
add
add
add
add
add
ljmp
add
add
add
add
and
mov
movl
pop
add
push
incl
mov
add
pop
add
add
add
add
inc
add
movsl
add
ljmp
add
add
add
pause
orl
into
roll
jns
dec
pop
lods
fbstp
sarl
mov
dec
mov
es
icebp
fs
test
add
pop
inc
mov
ja
cmp
ret
jnp
push
inc
pop
or
or
cmp
iret
sub
xor
pop
jb
mov
mov
sbb
sbb
notb
fdivs
mov
into
ficoml
push
or
cmp
sub
cwtl
imul
ret
push
push
xor
mov
adc
testb
jg
jg
div
cld
popa
push
int
movsl
stos
jmp
xchg
xlat
call
shlb
bound
scas
or
rolb
xor
test
push
xor
mov
les
sti
fiaddl
ds
mov
push
adc
sub
das
mov
dec
push
aas
fbstp
and
pop
into
cmpsl
inc
cwtl
mov
mov
adc
aas
scas
enter
cmp
sbb
inc
jbe
int
data16
repnz
lahf
pop
dec
xchg
out
pop
jge
lods
push
incl
mov
push
sti
cmp
jbe
xchg
push
add
jge
push
sarb
inc
scas
cmpsl
scas
sub
ss
sbb
mov
inc
xchg
pop
xor
xchg
mov
pop
adc
cld
enter
icebp
lcall
sar
das
pop
sbb
jecxz
xor
mov
or
mov
sarb
aas
cwtl
cmp
lret
mov
aad
cmc
push
xorb
sahf
test
pop
xchg
movsl
ret
mov
xor
loope
icebp
add
test
stos
cmc
ljmp
movsl
dec
lock
nop
add
jle
pop
sub
sub
inc
push
mov
mov
cs
fsubl
fsubp
push
dec
inc
cmp
rcrl
sub
pop
fwait
in
adc
testl
sti
jb
add
jb
and
ret
mov
adc
push
mov
xchg
dec
pop
adc
lea
or
andb
cmp
sbb
dec
xchg
mov
sbb
loop
push
inc
mov
pop
negl
es
mov
scas
mov
arpl
out
dec
mov
jp
push
hlt
fdivrl
pop
lds
sub
aam
aad
sbb
cmpsl
mov
ficompl
outsl
pop
call
push
out
mov
fs
jno
jb
mov
jl
jecxz
loopne
lret
int
pop
inc
lahf
pusha
leave
mov
xchg
lds
fists
insl
mov
incb
sbb
fdiv
dec
or
dec
out
mov
dec
roll
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
