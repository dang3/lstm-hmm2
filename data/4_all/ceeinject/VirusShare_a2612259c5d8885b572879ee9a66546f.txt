call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xchg
or
jecxz
shll
xchg
faddl
outsl
xor
and
push
xor
add
repz
mov
movsb
ret
aam
les
adc
add
inc
jae
inc
push
push
inc
repz
add
movsb
fcmovbe
stos
les
adc
add
inc
or
jb
dec
cmp
add
repz
xchg
pop
les
or
fsubrp
cld
push
ja
push
pop
stc
out
and
pop
scas
cmp
cmp
lcall
adc
loop
sub
stos
mov
jbe
adc
fs
sub
mov
aad
mov
or
imulb
lret
out
dec
hlt
and
and
in
movsb
add
mov
and
arpl
lret
mov
adc
mov
pusha
sub
je
imul
fisubrs
and
iret
pop
cmc
ret
in
add
clc
arpl
lods
inc
fstps
scas
xchg
adc
imul
add
roll
mov
push
inc
jb
ja
inc
popa
push
push
in
or
lret
hlt
mov
movsb
mov
mov
adc
add
xor
and
push
sub
adc
xchg
in
jecxz
rol
ret
int
jmp
sbb
dec
sub
pop
sub
outsb
xchg
mov
jecxz
mov
test
hlt
mul
out
jno
push
add
popa
add
inc
adc
fs
mov
xchg
mov
mov
ffreep
mov
adc
add
xor
and
push
xor
adc
repz
mov
movsb
ret
aam
les
adc
add
xor
and
push
xor
adc
repz
adc
mov
dec
das
sti
imul
or
dec
cmc
or
cmp
stc
dec
xor
lods
leave
jnp
jg
jne
add
mov
data16
adc
aad
outsl
add
or
sub
push
jnp
mov
iret
sub
mov
inc
mov
rclb
xor
das
cmc
inc
popf
add
mov
sub
push
mov
shlb
push
addl
inc
jae
xor
daa
jb
jb
jbe
mov
fisttpl
adc
lcall
xor
ret
insb
sarb
lods
mov
gs
push
fists
push
fxch
sub
arpl
sub
insl
in
sub
pop
cld
pop
inc
push
push
cld
lret
xchg
and
test
popa
sbb
push
mov
jae
lea
fdivs
adc
sub
add
mov
jnp
ds
pop
outsl
into
inc
xchg
in
aaa
cwtl
ret
add
add
insb
mov
adc
out
lods
pop
std
jp
mov
enter
pop
out
add
dec
pushf
lods
pop
xor
adc
scas
outsl
sarb
cmpsl
rcrl
mov
mov
mov
xchg
xor
push
les
dec
push
add
mov
xchg
adc
imul
ljmp
sbb
sbb
fwait
jne
fwait
and
push
fidivrl
push
jmp
adc
jg
stc
aaa
push
in
fcompl
cltd
cli
pop
out
xor
test
or
adc
push
mov
jmp
sti
inc
jno
sahf
sti
cmp
pop
pop
dec
out
jns
aad
jne
lahf
inc
pushf
xlat
pop
out
and
and
mov
pop
in
adc
sarb
orl
pop
aad
mov
dec
stos
push
jg
pop
mov
push
mov
jae
cld
xor
mov
mov
loopne
sub
hlt
std
loopne
std
movsl
mov
ja
sti
jle
mov
xchg
in
jge
adc
dec
ret
repz
stc
jl
int
pop
xchg
mov
inc
cmp
rcrl
sub
fdivrl
popa
js
xor
adc
test
inc
lahf
add
lcall
inc
lds
mov
loopne
xchg
or
test
xchg
ljmp
dec
fnstsw
mov
push
xchg
test
fdivrs
and
mov
orb
dec
jge
into
js
xor
hlt
mov
add
push
stos
stc
cmp
insb
pusha
add
test
or
add
pop
orb
cmp
andl
sub
xchg
jo
add
cmc
in
pop
push
int3
fldt
test
int
adc
in
loopne
jge
inc
mov
ret
fadds
fistps
mov
sbb
mov
jae
loop
or
enter
shrb
pop
push
pop
pop
hlt
jle
mov
les
test
jnp
sbb
mov
and
imulb
add
in
xchg
rcrb
jl
and
cmc
js
les
inc
jo
mov
fstpl
popa
jno
leave
stos
ja
outsb
stos
mov
lret
inc
sub
xchg
push
sbb
test
pop
and
cs
fisubrl
in
pusha
xchg
sbb
in
rclb
mov
xor
aam
cmp
hlt
sbb
repz
leave
or
mov
dec
loop
mov
push
stos
sub
and
lea
push
insl
stos
loop
rol
xor
rcrl
push
pop
call
cmp
pop
les
and
xor
sub
pop
aaa
dec
pop
lahf
loope
pop
shrb
mov
shll
inc
movsl
mov
jb
out
inc
pop
mov
stos
dec
imul
pop
mov
js
lahf
popf
imul
and
and
inc
push
addr16
cmpsb
sub
ss
mov
in
sahf
rolb
and
inc
test
mov
xor
repnz
lods
xchg
imul
and
push
mov
cmc
add
insl
in
fbld
add
dec
insl
xor
sbb
mov
lcall
inc
cmp
inc
in
movsl
stos
add
aas
xchg
imul
cmpsl
pop
negb
lahf
push
lods
repz
fsubs
clc
mov
repnz
adc
imul
aaa
cmp
mov
popa
fdivrs
call
lods
fiadds
adc
sub
jae,pt
pop
lock
jno
pushf
xchg
loopne
and
sub
cwtl
ss
jle
jns
cmpsl
push
movsl
dec
pop
mov
pop
cmp
rcll
mov
movzbl
stos
push
test
mov
pop
inc
bound
mov
xchg
rcrl
and
mov
cmpl
shll
insl
shlb
inc
pop
sti
or
inc
sub
cmp
fldl
and
cld
and
mov
lods
pop
pop
filds
pop
out
cmpb
add
inc
pop
jo
mov
mov
mov
insb
mov
inc
mov
mov
imul
cs
xor
mov
add
in
xlat
pop
adc
mov
in
adc
xchg
adc
and
mov
setns
sarb
and
inc
and
dec
js
pop
mov
add
lret
push
push
ret
pop
xchg
pop
clc
jge
in
je
push
pop
and
fistps
and
inc
test
stos
repz
cwtl
pop
jb
jnp
xchg
mov
mov
pop
mov
xor
inc
pusha
sbb
insl
xchg
jns
cwtl
pop
mov
pop
mov
mov
lahf
add
loopne
mov
xlat
add
movsl
and
stos
xor
cs
sar
arpl
push
push
inc
dec
jbe
int
test
jecxz
repnz
and
gs
jmp
xchg
rolb
jb
add
inc
in
das
push
mov
sbb
push
insl
nop
ljmp
add
std
dec
arpl
mov
xchg
int3
jmp
xor
stos
stc
adcl
dec
aam
and
cld
inc
jl
jle
fsubrs
out
sbb
mov
sbb
popa
clc
cmp
xchg
xchg
push
gs
pop
dec
and
bswap
rcrb
mov
movntq
xchg
icebp
inc
lea
ja
dec
test
das
lods
push
lea
inc
aad
js
xchg
jb
ja
movsl
jp
cmpb
out
add
mov
dec
fs
mov
fs
lods
daa
roll
fcmovbe
mulb
jmp
push
sarb
cmpsb
mov
adc
js
and
and
aad
or
jecxz
mov
sub
add
mov
lret
inc
sub
aad
inc
sti
mov
mov
xchg
adc
inc
lods
mov
and
popf
inc
jnp
push
sub
pop
inc
pop
test
pop
pop
cmpsl
adc
xor
mov
daa
lret
nop
call
in
sub
adc
push
add
scas
mov
cmpsl
cmp
cmp
sub
pop
int
lds
push
jno
insb
test
lret
xlat
mov
jne
lea
push
aaa
jge
mov
rcrb
fldcw
rorl
pop
sbb
mov
dec
hlt
ja
dec
es
aad
push
les
out
xchg
je
or
jb
add
push
imul
out
push
stos
mov
lods
adc
movsb
dec
mov
xchg
hlt
aaa
sbbl
mov
pop
stc
jl
movsl
mov
insb
adc
out
pop
repnz
xchg
cmpsb
push
das
js
imul
xor
cmp
xor
pop
xchg
insl
mov
addr16
jne
aaa
ss
fcomps
imul
in
inc
das
xchg
aas
lods
out
mov
dec
into
bound
xchg
sub
cli
inc
mov
jecxz
adc
adc
ja
push
and
cs
rclb
or
loopne
dec
cmp
jno
pop
mov
sbb
or
dec
adc
add
cmc
outsb
pop
jb
int3
nop
bound
mov
out
dec
js
cld
push
xor
stc
pop
lock
addb
xchg
lcall
mov
insl
add
jecxz
xor
add
jg
divps
sbb
xor
ljmp
popa
xor
mov
shl
sahf
outsl
pop
insb
clc
jecxz
test
insl
popa
add
mov
push
dec
xchg
ss
mov
popf
cs
loop
pop
cltd
out
ficoml
lds
outsb
add
xor
push
adc
hlt
sarb
sub
sti
and
push
rclb
push
movb
cmovns
je
stos
lret
lds
inc
mov
sbb
pop
push
mov
pop
jns
cmc
jl
mov
fstpl
add
lret
xchg
sub
fimull
pusha
push
mov
or
stos
sbb
das
push
lods
xor
push
data16
jl
shll
insl
sub
xor
gs
loopne
adc
ud2
data16
sub
sub
pop
arpl
nop
gs
call
sbb
xlat
dec
lahf
ret
andl
mov
adc
sub
adc
cmp
mov
or
fldl
jl
jns
or
sbbb
push
adc
ljmp
push
pop
ret
in
sti
inc
pushf
jbe
mov
adc
sub
call
xlat
push
dec
add
xchg
and
xor
push
sbb
shl
dec
and
mov
pop
or
mov
and
inc
in
push
shll
lods
lret
lea
xor
rcr
xor
xor
cmp
shlw
or
inc
cwtl
jb
and
mov
add
adc
roll
inc
xchg
rcr
dec
push
pushf
push
xor
xor
lods
push
cwtl
or
pusha
inc
and
jp
scas
rolb
pop
call
cmp
inc
push
or
mov
and
jb
fcoml
in
lcall
ret
nop
xor
jecxz
inc
fdivr
shll
mov
leave
mov
rcll
push
pop
das
repz
shll
ljmp
mov
mov
inc
dec
outsb
test
ret
jbe
dec
mov
push
xor
and
dec
xchg
mov
xlat
mov
mov
or
js
callw
aas
adc
mov
inc
dec
mov
cmp
xor
mov
mov
pushf
dec
ja
nop
cmpsl
push
roll
shrb
pop
xchg
movsb
sub
mov
cmp
mov
xchg
outsl
mov
test
sub
pop
add
push
cli
addr16
dec
test
rolb
call
fwait
in
xor
cmpsl
movsb
sub
aas
in
dec
xor
mov
orb
ja
jno
leave
sub
pusha
les
dec
jae
push
dec
add
fidivrl
xchg
movsl
lret
jecxz
xchg
xor
and
je
mov
divb
fldl
jnp
pop
sbb
push
les
mov
mov
popf
inc
or
jecxz
sub
xchg
or
or
aaa
test
test
hlt
mov
shll
in
mov
test
stos
ss
repz
insb
enter
or
ds
pop
pushf
pop
mov
enter
ljmp
mov
pop
mov
dec
icebp
and
sbb
in
shll
pop
or
add
adc
bound
loopne
bound
xor
xchg
dec
cmp
int
jne
adc
xchg
mov
iret
push
mov
xor
arpl
mov
shlb
stc
xchg
mov
nop
xchg
lea
adc
lea
popf
adc
sbb
std
movhps
mov
xor
cmp
test
imul
push
push
sbb
jnp
inc
add
push
loopne
adc
std
jns
push
adc
xchg
jp
push
inc
adc
mov
stc
cmc
adc
mov
shll
lock
das
add
pop
inc
push
lock
int
push
mov
push
mov
mov
pop
and
mov
data16
outsb
cwtl
dec
pop
in
std
stos
jmp
andb
cmp
mov
cvttps2pi
sbb
inc
fiadds
int3
push
jb
adc
or
ret
jbe
cmp
dec
movb
mov
aad
pop
jne
ret
in
icebp
xlat
adc
test
adc
inc
test
les
and
add
addr16
xchg
ss
cmc
cmc
stos
adcl
aas
aaa
dec
pusha
dec
inc
cmpsb
fsub
mov
mov
jmp
cli
and
jp
cmc
or
sub
stos
test
mov
out
push
jne
xchg
lret
je
mov
push
inc
std
outsl
lock
and
dec
xchg
xchg
xchg
mov
xchg
push
mov
fcmovne
int3
adc
mov
cwtl
sbbl
xchg
xchg
nop
jg
repz
mov
neg
add
mov
mov
test
aaa
iret
std
and
add
sub
daa
jno
push
and
cmp
mov
xor
mov
lock
cmp
pop
daa
and
ss
or
xorl
add
sti
fists
fldl
es
mov
bound
stos
testl
inc
stos
daa
cmp
cli
lods
lret
xorl
push
push
call
shlb
lret
pop
and
rorb
and
mov
int
insl
cmp
push
mov
icebp
loopne
loop
pop
jns
test
jno
sbb
call
or
orl
adc
in
cs
outsb
fsubs
jg
jmp
outsb
pop
dec
xor
pop
pop
add
std
mov
jecxz
mov
xlat
mov
inc
mov
ror
aaa
jg
into
out
pop
enter
and
sbb
jo
and
rcr
rorb
sub
cmc
jnp
cmpsb
lods
cmpsb
ss
mov
ljmp
jnp
mov
das
mov
jb
cli
fs
pop
je
adc
adc
sbb
negl
in
pop
mov
sbb
push
test
jne
pop
rclb
mov
sbb
subl
aam
gs
add
push
divb
mov
call
scas
dec
lahf
jae
or
fldt
mov
mov
xor
or
sub
fucomi
or
js
xchg
subb
dec
enter
cmp
lock
jo
cltd
and
mov
aam
xor
xor
fsts
xlat
pushf
lret
jmp
aaa
or
mov
mov
les
dec
xchg
out
jl
lods
cmp
test
mov
inc
and
sub
mov
insl
scas
subl
sub
stc
mov
sbb
mov
lahf
cld
and
pop
loope
push
sti
adc
test
lea
dec
mov
in
pop
test
push
or
push
shrl
call
aad
loopne
out
hlt
movsl
imul
das
mov
mov
jecxz
sub
adc
ds
sti
mov
pusha
test
aaa
dec
lahf
inc
outsb
xchg
adc
pop
decb
mov
test
pusha
jg
out
sbb
xchg
movsb
mov
adc
pop
push
popa
mov
mov
and
mov
rorl
pop
push
dec
add
sub
fwait
and
sbb
adcb
lahf
pop
ret
push
xor
imul
sbb
scas
sbb
xlat
push
mov
mov
mov
pushf
jmp
shrb
cmp
scas
leave
mov
lods
jmp
lcall
dec
out
sbb
subl
psllq
nop
dec
bound
inc
sti
xor
cmc
fcoml
ret
fld
enter
daa
fdivs
or
aam
int
or
iret
dec
stos
cwtl
stc
push
outsl
addl
gs
sub
pushf
cli
mov
jnp
fwait
mov
roll
cmc
xchg
movsl
js
inc
loopne
inc
out
pop
mov
cli
test
adcl
mov
mov
sti
dec
adc
xor
jle
adc
scas
jbe
cmp
push
fs
cltd
imul
popa
adc
push
push
pop
mov
xor
jns
cmp
imul
std
pop
das
in
mov
jae
pop
int3
aaa
mov
mov
dec
in
or
sbb
push
pop
cmp
mov
push
sbb
mov
cmpsb
sbb
mov
mov
sbb
jle
xchg
jbe
cmp
push
sub
repnz
add
mov
lods
push
mov
out
pop
or
or
or
out
mov
jns
les
dec
clc
add
jo
mull
mov
scas
sub
fildll
push
gs
out
mov
andl
or
ja
pushf
aas
rcrb
mov
xchg
inc
gs
jo
mov
out
xorl
xor
andl
fs
push
ss
pop
xor
mov
in
data16
cmp
leave
jmp
xor
mov
dec
lret
xchg
lea
les
sbb
mov
arpl
imull
sbb
iret
xchg
nop
jge
arpl
imul
lods
lods
cmpsl
hlt
loop
sbb
clc
sbb
sbb
rcr
mov
cld
fnstenv
ret
jmp
ljmp
inc
insl
mov
xor
repz
lret
jge
jmp
pop
pop
mov
sti
in
into
push
insl
aaa
inc
out
jp
iret
push
jne
sub
inc
mov
test
xor
sbb
dec
pop
mov
test
gs
push
imul
cmp
and
outsl
xor
shll
js
and
or
or
in
popf
adc
adc
and
out
push
sbb
or
push
out
dec
push
inc
sbb
xchg
push
scas
out
fisttpll
out
dec
test
push
das
and
jle
mov
inc
js
ljmp
out
test
inc
jo
call
lods
outsl
lret
cmp
adc
push
orl
fisubrl
test
push
adc
lret
scas
ds
leave
xchg
lods
mov
popf
scas
or
push
cmpsb
fists
pop
mov
or
xchg
lcall
imul
jae
xchg
mov
adc
hlt
mov
pop
divb
or
sub
out
add
scas
loop
fcomps
mov
dec
jb,pt
xchg
lret
imul
xchg
test
andb
sbb
mov
ss
mov
repnz
mov
add
xor
js
or
popf
sbb
dec
cwtl
dec
jb
jl
loope
ret
in
enter
lods
adc
add
fists
sahf
sbb
xchg
jo
xchg
ret
cld
inc
pop
sbb
inc
scas
cli
aam
movsl
pop
inc
jmp
repnz
xor
mov
mov
stc
xchg
and
mov
aad
xor
clc
mov
imul
jg
push
sub
and
das
stos
movsl
dec
sub
adc
fst
test
cwtl
jo
arpl
sub
sahf
and
loope
fs
xchg
mov
mov
sub
inc
jmp
xchg
add
xchg
mov
and
cmp
lahf
sbb
push
mov
movsb
mov
lods
sahf
and
sbb
ljmp
repz
outsl
out
adc
and
das
sbb
cli
pop
subb
mov
std
mov
aam
repz
push
aas
stos
or
andb
popa
dec
pop
push
insb
js
xor
rcrb
std
popa
xchg
je
inc
add
addb
inc
test
data16
dec
sub
cmp
fwait
cs
movsb
add
pusha
daa
test
dec
cmp
xchg
testb
dec
ja
out
mov
or
adc
in
mov
loope
in
call
in
cmc
xor
mov
pop
loope
cli
mov
xchg
ljmp
aaa
jnp
xchg
and
adcb
cmp
in
adc
aam
jns
jge
cs
push
fisttpll
mov
fs
push
xlat
insl
cwtl
fildll
popl
sbb
pop
pushf
sti
rolb
adc
popf
dec
hlt
popf
push
pop
shlb
sbb
jb
xor
xor
dec
in
fdivs
ljmp
psubb
addr16
cmp
iret
clc
aaa
aas
dec
ficoms
jnp
and
jge
add
iret
aam
jp
lods
dec
sbb
dec
cltd
sbb
mov
pop
and
jmp
pop
cmpsb
stc
je
pop
jne
stos
lock
test
mov
or
or
prefetch
jo
mov
outsl
enter
mov
scas
cmp
xchg
cmp
lret
jb
and
pop
daa
das
das
push
pop
add
jecxz
cmp
ret
aam
les
adc
add
xor
and
push
xor
adc
repz
mov
movsb
ret
aam
les
adc
add
xor
and
push
xor
adc
repz
mov
movsb
ret
aam
les
adc
add
xor
and
push
xor
adc
repz
mov
movsb
ret
aam
les
adc
add
sahf
push
and
and
fwait
cld
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
scas
inc
mov
adc
jb
adc
and
nop
outsb
cmpb
mov
xor
inc
mov
adc
add
xor
and
xchg
push
loopne
rorb
cmpb
mov
mov
push
out
pusha
ljmp
iret
and
mov
jecxz
cwtl
push
jno
sub
and
sub
sub
jecxz
iret
jo
or
adc
add
ljmp
ret
scas
push
insl
push
aad
orb
mov
fwait
mov
in
adc
incl
push
es
mov
jne
sbb
outsl
jg
and
negl
scas
mov
jbe
fldenv
adc
das
sarb
or
loopne
nop
lds
ret
mov
sub
out
out
add
iret
and
rcl
rol
leave
push
lcall
mov
inc
push
jo
xchg
in
mov
mov
rolb
lock
pop
aad
subb
lods
mov
jno
sahf
xchg
out
mov
adc
cmp
adc
sbb
dec
mov
mov
hlt
out
js
xor
xchg
push
das
pop
aas
xchg
rcrb
fsubrs
jg
dec
mov
movb
fidivrs
outsb
mov
stos
rcrb
es
pop
test
sbb
cmp
cmp
and
cld
jns
gs
mov
xchg
dec
lock
out
jmp
cmp
sub
adc
xor
inc
fldl
pushl
iret
and
shrb
sarb
pavgb
nop
outsl
cmpb
mov
mov
adc
add
xor
and
shrb
sarb
pavgb
nop
outsl
cmpb
mov
xchg
mov
mov
jl
cwtl
cmpb
aas
xor
xchg
jge
enter
adc
hlt
push
mov
aam
filds
sub
shrl
jo
daa
cmpb
in
dec
mov
push
faddl
cmp
cwtl
add
inc
pushf
enter
arpl
cmp
push
int
mov
pop
xor
pop
fwait
popf
mov
mov
divl
mov
adc
pop
sub
aaa
lret
scas
dec
pop
addr16
inc
mov
adc
mov
and
pop
pop
add
adc
sti
xchg
jmp
scas
lcall
xchg
adc
cmc
jno
int
stos
sbb
scas
mov
mov
leave
or
cmp
lea
mov
es
shll
movsb
xlat
mov
xchg
jle
outsl
std
dec
jns
mov
hlt
loope
sbb
sub
jbe
sub
iret
adc
stos
sub
fnstenv
pop
cmp
nop
mov
xor
andb
cmpsb
push
xchg
rol
push
test
push
iret
cmp
xor
jo
cmp
stc
jle
cmp
adc
push
push
jbe
pop
or
lcall
xor
jge
cmp
out
in
xor
sbb
inc
inc
jne
xor
adc
add
ljmp
push
xchg
inc
xchg
ret
xor
mov
pop
sub
scas
jnp
xor
dec
shrl
out
cwtl
xchg
lahf
mov
faddl
mov
push
arpl
dec
clc
jle
dec
sbb
out
loop
or
cli
push
sbbl
loope
inc
lret
or
push
cmp
mov
aam
std
xlat
scas
mov
cmp
push
mov
xor
mov
dec
loop
andb
in
sub
lea
dec
sbb
mov
and
push
mov
pop
sbb
das
xor
sbb
mov
push
pop
flds
int3
shlb
stos
mov
insl
push
stos
fsub
inc
lea
push
mov
jg
outsb
fwait
out
lock
or
push
cltd
or
fstps
in
bound
out
pop
sub
sbb
xchg
je
xchg
adc
aas
enter
sub
stos
pop
jg
fs
pop
xchg
les
adc
inc
lds
inc
dec
arpl
pop
std
mov
xchg
lret
xlat
fwait
enter
std
lds
hlt
sarb
mov
int3
bound
fnop
clc
pushf
and
or
cmpsb
rclb
inc
add
imul
xor
sbb
mov
pop
repnz
ret
pop
jecxz
xor
hlt
adcl
cmp
and
mov
sarb
pop
mov
int3
xchg
sbb
incb
push
xlat
pop
mov
and
and
push
lret
fwait
sub
sbb
ds
adc
and
nop
enter
sub
or
rcrl
bound
inc
or
lea
xchg
mov
mov
ds
pop
mov
test
fisttpl
rcl
negb
xor
icebp
shrb
aaa
or
jo
sub
ret
rolb
cmp
fidivrs
add
adc
inc
sub
push
in
rcll
inc
out
xor
push
mov
sahf
cmp
xchg
mov
repz
gs
mov
lea
loopne
out
push
pcmpeqb
movsl
cli
jg
int3
outsl
cmp
ret
or
add
pusha
inc
in
pushf
stos
sub
xchg
jne
rorl
sbb
js
lock
mov
cld
jecxz
push
xchg
stc
sbb
pop
pop
xchg
mov
loope
imul
jecxz
test
xor
outsl
xchg
mov
in
jno
pop
mov
cmp
arpl
call
repz
hlt
pop
sarb
clc
mov
cmpl
dec
insl
pop
js
or
and
and
mov
cmp
cmpsb
adc
pop
aam
cmp
insl
test
enter
xchg
sbb
jo
adc
lea
loopne
sub
mov
out
jmp
int
xlat
insb
mov
cmp
ret
pop
popl
push
sub
enter
pop
mov
xchg
push
rolb
ds
sarb
aaa
test
sbb
push
hlt
dec
or
xchg
sub
rclb
and
jne
mov
test
add
jns
dec
cmpsb
xchg
in
test
jge
sub
pop
jno
rolb
faddl
inc
sub
jmp
mov
adc
dec
mov
std
adc
fbstp
mov
mov
nop
fsubrl
leave
jmp
xor
xor
imul
push
pop
mov
ja
lcall
sub
cmp
pop
cwtl
ja
mov
int3
dec
inc
fsubs
push
sub
nop
jae
xchg
in
cmpsb
and
test
dec
sbb
or
mov
shll
inc
insl
out
in
or
movsb
adc
enter
pop
sahf
push
shlb
sbb
fs
movsl
je
out
pop
inc
and
lods
int
insb
loopne
jnp
push
dec
cmc
int3
inc
call
xchg
lods
pop
fwait
js
imulb
mov
mov
lods
inc
addr16
shll
and
sti
mov
add
and
jmp
mov
jno
lcall
dec
out
imul
ficomps
rcr
ds
iret
fucomp
lahf
out
std
repnz
test
dec
in
int3
iret
mov
and
sbb
iret
mov
or
in
mov
push
andb
inc
out
rclb
inc
enter
xor
sbb
loopne
test
ror
fstpt
jmp
gs
dec
into
dec
mov
jno
out
mov
js
mov
lds
adc
test
cwtl
popf
sbb
outsl
js
insb
iret
xchg
jnp
cwtl
cwtl
test
cmp
mov
ret
jmp
dec
cmp
mov
out
sub
push
rorb
dec
cmp
adc
adc
push
and
jg
repz
js
cmp
pop
rolb
test
popf
pop
push
mov
dec
sub
arpl
shll
dec
icebp
sub
adc
push
lds
lret
ror
sbb
movb
insl
xchg
adc
mov
fisubs
out
sub
out
jmp
addr16
mov
jle,pn
movsb
mov
roll
jl
and
jmp
jo
in
cmp
xor
ret
mov
cli
adc
push
xchg
xor
ja
pop
sub
sbb
pop
mov
sub
mov
or
mov
sahf
lahf
pusha
lods
mov
mov
nop
adc
lods
push
mov
je
aaa
add
mov
pop
in
jge
cwtl
cmp
icebp
jg
dec
out
push
shrl
jo
push
inc
dec
sti
mov
inc
and
jp
movsb
adc
xchg
xor
daa
in
out
pop
shl
movsb
push
jge
mov
adcb
outsl
push
xchg
ja
pop
popa
push
push
xchg
xchg
hlt
jne
xchg
mov
cld
sub
fisubrl
sbb
mov
cmp
xchg
mov
repz
mov
jg
repnz
or
xor
sub
dec
dec
push
sahf
sbb
adc
leave
pusha
dec
mov
and
push
xchg
out
ljmp
dec
adc
cli
insb
test
add
xor
mov
add
in
add
cs
fdivs
dec
das
jge
gs
mulb
out
ss
inc
inc
call
or
imul
and
mov
shl
and
jno
inc
or
aaa
pop
push
call
pop
jmp
cmp
xchg
in
cmpsl
lods
xchg
mov
lret
repz
decl
ljmp
into
mov
sbb
mov
repz
imul
mov
cmp
mov
icebp
in
adc
pop
adc
pop
dec
xchg
sar
dec
inc
xor
ffreep
jmp
add
cmpsb
fldl
push
in
daa
lcall
jo
mov
adc
adc
or
cmp
repz
mov
outsb
mov
dec
scas
scas
movsb
das
dec
sbb
mov
es
push
fbstp
leave
insb
jo
out
pop
inc
pop
ljmp
mov
and
out
inc
pop
push
les
add
adc
lea
ret
cmp
jne
in
mov
es
bound
pushl
andb
aaa
enter
not
mov
fs
cmp
ljmp
mov
mov
inc
idivl
std
sbb
daa
jle
imul
jns
je
cmp
xchg
pop
mov
fsubs
loopne
cmp
xchg
scas
push
mov
and
dec
pop
dec
cmp
dec
pop
mov
pop
ja
adc
sahf
dec
push
mov
jne
or
adc
xor
mov
mov
mov
mov
sub
sub
inc
pop
and
mov
pop
inc
dec
push
and
movsl
ljmp
lret
cmpsb
aaa
out
cmp
or
mov
mov
add
pop
inc
outsl
lods
cs
lock
fnstenv
adc
add
in
call
sbb
jecxz
sbb
push
xchg
fwait
sub
lods
data16
in
bound
mov
mov
mov
insl
adc
jecxz
in
mov
movsl
sub
out
or
cmp
or
stos
push
call
je
mov
shlb
mov
jmp
fs
in
and
ss
pop
pop
push
pop
cwtl
jae
dec
xchg
or
push
push
pop
sbb
addr16
dec
leave
mov
adc
movsb
push
mov
lea
and
mov
cwtl
ljmp
sbbb
pushf
loop
xor
fistpl
or
add
mov
lahf
jns
push
xchg
aas
popl
pop
mov
add
aaa
inc
xor
rcl
and
ud2
xor
pushf
adcl
cmp
push
repz
lret
lar
mov
jg
add
push
out
xor
cwtl
loopne
imul
cmp
dec
xchg
push
js
dec
cmpsl
movsl
cld
pushf
pop
mov
adc
mov
mov
out
addr16
leave
shll
mov
ds
imul
stos
adc
and
outsl
std
and
add
push
pop
pop
pop
test
repz
mov
add
add
frstor
push
movsl
out
iret
stos
int3
repz
or
mov
insl
inc
cmpsl
cmp
lods
outsl
rolb
inc
pop
jg
mov
xor
lock
jns
cld
add
inc
js
xchg
mov
mov
cwtl
repnz
dec
je
js
ret
aaa
jno
lds
jnp
push
jno
ret
cmp
sbbb
cs
cmp
jnp
pop
or
push
xor
sub
mov
fdivl
mov
jp
mov
test
popa
enter
dec
mov
pop
jno
into
sbb
mov
xchg
jg
out
mov
shll
mov
sub
jg
sahf
data16
or
es
clc
ja
lret
add
xchg
fs
shrb
cmc
cmc
mov
push
adc
cmp
rcl
lahf
push
pop
test
int
and
cmp
data16
fstl
into
imul
loopne
push
cs
mov
push
test
xor
aaa
add
and
mov
aad
and
cmpsl
cmp
fisttps
dec
push
cmpsb
cmp
test
mov
xchg
pusha
in
sub
loope
in
cli
inc
add
mov
inc
incl
mov
repz
mov
inc
ja
cmc
push
fisttpl
sbb
jnp
pop
mov
dec
and
test
jb
lret
int3
jns
outsl
pop
add
int3
jmp
inc
insb
lret
imul
lret
pop
and
and
iret
mov
out
xor
cmp
push
sbb
outsl
lock
jecxz
adcb
je
sbb
push
loop
faddl
and
mov
loop
dec
mov
push
sub
jns
push
mov
cmp
cmp
lds
sbb
std
daa
add
mov
sub
std
inc
dec
dec
sbb
pop
xchg
xchg
adc
dec
mov
and
xchg
shrl
dec
test
inc
dec
mov
pop
in
inc
push
insb
cmp
leave
jle
outsl
xchg
ret
pop
or
in
cmp
jae
jge
lcall
test
jl
or
dec
xor
xor
in
pusha
xchg
jae
mov
sbb
mov
mov
xchg
insl
mov
inc
inc
fidivs
cld
xchg
ss
lret
xor
mov
jecxz
aaa
pop
mov
jmp
sarb
imul
dec
mov
cmpsb
push
inc
mov
int
and
in
cmp
mov
or
movsb
call
dec
adc
loop
inc
sbb
fstpt
jg
jns
push
add
dec
jno
mov
scas
add
mov
jbe
and
cli
add
xor
aaa
dec
dec
mov
gs
mov
not
leave
xchg
fsts
add
pop
arpl
in
sbb
and
nop
popf
pop
cld
sbb
pusha
xor
and
jo
and
adc
or
test
cs
mov
fsubl
dec
arpl
mov
shrb
adc
xchg
add
pop
repz
adc
mov
cwtl
jecxz
je
fisubrs
cmp
fs
stc
cwtl
mov
jmp
and
ret
dec
xor
mov
pushf
cmp
jae
pop
mov
test
cmp
pop
jbe
mov
and
minps
cli
imul
sub
sbb
adc
jecxz
aaa
xor
mov
or
and
push
cmpsl
shl
lcall
xchg
loopne
arpl
popf
xchg
push
cmp
cmp
push
mov
arpl
inc
outsl
mov
fld
push
mov
sub
ret
dec
adc
shrl
test
out
cltd
pop
sbb
lret
fcmovb
iret
test
and
cli
out
in
cmpsb
xchg
nop
das
iret
jmp
cmpl
xor
mov
cmc
xor
mov
repz
loopne
xchg
out
std
iret
icebp
push
mov
das
rorb
or
pop
push
mov
imul
pusha
add
rclb
and
push
adc
test
popa
sbb
sbb
stc
into
adc
shlb
mull
fcmovb
cmp
loopne
stc
test
adc
lods
daa
push
jae
dec
fucomi
jle
jns
shr
inc
mov
repz
sub
daa
scas
pop
and
pop
insl
push
pop
leave
popf
sbb
push
in
adcl
mov
jp
mov
cmp
pop
push
lods
jmp
roll
es
mov
ljmp
shll
inc
or
pop
mov
stc
and
pop
mov
and
cld
arpl
js
aaa
std
enter
xor
lret
mov
int3
and
jbe
sbb
movsl
or
enter
dec
ja
jo
push
push
mov
push
and
mov
addr16
sbb
loopne
dec
data16
adc
adc
xchg
push
gs
lods
add
repnz
flds
mov
xor
jns
popf
mov
test
in
loopne
loop
fistpll
neg
add
test
push
cmp
push
xchg
repnz
inc
fs
aaa
enter
mov
int
jo
loop
cmpsl
or
orl
cmpsb
mov
or
aas
mov
test
jl
enter
data16
lea
add
test
icebp
mov
add
push
int3
lds
fisttpl
pop
sub
ds
xor
shrb
dec
sub
pushf
dec
pop
mov
popf
scas
test
xchg
xor
cmc
hlt
fidivl
adc
loopne
inc
int3
pop
xchg
shll
jecxz
mov
lcall
dec
inc
aad
cmc
imul
mov
mov
stos
mov
das
or
sbb
sub
push
cwtl
stos
push
mov
icebp
sub
mov
inc
icebp
mov
icebp
pop
lahf
lret
add
or
lods
hlt
loop
es
jne
mov
in
nop
out
and
out
bound
fidivs
pop
or
or
sahf
loopne
cld
xchg
xchg
test
sbb
mov
lods
mov
adc
dec
and
iret
movsb
jp
addr16
imul
inc
in
push
push
sbb
lahf
jmp
les
scas
sbb
icebp
inc
iret
inc
insb
call
inc
adc
mov
xor
mov
sbb
in
push
push
pop
fs
loop
insb
push
aas
inc
mov
xlat
daa
inc
imul
push
push
mov
cmpsb
fsub
in
pop
mov
insb
adc
push
jl
cli
pop
push
xor
xchg
pop
enter
mov
dec
ja
arpl
inc
outsb
add
jle
sbb
stc
loopne
inc
push
call
mov
mov
lcall
pushf
roll
pop
xor
adc
test
mov
dec
sbb
adc
in
sub
jg
pop
xor
out
pushf
pushf
mov
push
push
cmp
pop
jmp
stos
pop
and
and
jae
out
mov
jns
call
icebp
loop
fbstp
mov
cs
lock
dec
aaa
or
ss
and
jle
pop
or
xor
dec
inc
inc
sbb
pusha
outsb
add
aam
cld
adc
or
xor
mov
and
jne
rorb
or
scas
xorl
jl
cltd
aam
gs
sbb
fcompl
mov
rclb
orl
xor
dec
xchg
inc
pop
adc
jb
mov
in
lock
notb
in
cmc
ret
ds
movsb
pop
push
in
lods
jp
mov
sbb
mov
push
outsl
and
stc
loop
aad
mov
jae
pop
movsl
cmp
jns
into
addr16
xor
mov
aad
cli
jae
call
inc
jae
push
adc
cmp
test
mov
test
cli
notl
sub
lods
push
dec
jp
addr16
jg
jl
loopne
mov
fs
sbb
subb
out
adcl
fdivrl
les
fcoms
imul
in
jmp
or
jecxz
mov
mov
and
and
mov
shrb
aad
test
loope
stos
lods
jne
cmpsb
outsl
xchg
daa
pop
testb
xchg
stos
sahf
push
pop
leave
adc
mov
sbb
movsl
jnp
in
sub
add
or
adc
aad
std
pop
jae
in
fdivp
ret
mov
jne
mov
push
pusha
aam
xor
popa
pop
ja,pn
or
sbb
mov
push
outsb
lods
sbb
inc
sbb
call
insl
push
imul
in
out
or
mov
xchg
push
in
test
iret
inc
pop
mov
push
int
or
movsb
sbb
in
ds
or
sbbb
stc
adcb
gs
std
and
fwait
std
push
fisubrl
aam
add
push
sbb
sbb
or
mov
adc
xchg
fwait
sti
scas
push
inc
pop
mov
pop
mov
sbb
test
add
andb
cmc
jp
fbld
jb
xbegin
and
loope
cmpsb
mov
adc
outsb
or
cmp
sti
push
clc
out
mov
in
shrl
xchg
jb
and
cmp
in
push
mov
out
inc
inc
loopne
jbe
and
adc
arpl
lret
or
sub
and
sbb
lahf
add
push
lea
fwait
sub
cwtl
push
mov
mov
stos
jae
push
es
es
jg
testb
jbe
lcall
jbe
data16
mov
mov
adc
ja
dec
xchg
mov
ficoml
sub
out
ja
pop
xor
xchg
and
cmp
not
jle
int3
cmp
push
filds
push
push
dec
outsl
cmp
jns
in
pusha
mov
roll
cs
dec
insb
lcall
lahf
jle
inc
sub
cmp
daa
push
xchg
inc
cld
sub
les
xor
pcmpeqb
stos
sbb
ret
dec
jp
out
inc
jmp
sub
and
xchg
jae
dec
cmpsb
dec
inc
xchg
push
ret
fsub
push
adc
fstl
xchg
cld
xlat
jnp
sub
push
test
jp
add
adc
add
xor
and
shrb
sarb
pavgb
nop
outsl
cmpb
mov
mov
adc
add
xor
and
shrb
sarb
pavgb
nop
outsl
cmpb
mov
mov
sub
pushl
iret
loopne
shrb
sarb
pavgb
nop
outsl
nop
jg
dec
dec
pop
inc
scas
sbb
sub
adc
xor
mov
xchg
pop
pavgb
out
orb
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lahf
pop
aad
in
cmc
dec
lcall
mov
js
push
add
sbb
call
test
mov
dec
js
dec
add
dec
add
pop
xor
call
pushf
test
inc
cmpsl
pop
or
pop
add
sub
inc
push
insb
pop
or
lods
fwait
popf
lea
dec
push
mov
lcall
sub
jae
stc
in
in
inc
mov
jl
mov
cmp
cmp
leave
sbb
in
lods
ret
lret
jmp
nop
mov
lods
add
stos
in
xor
sbb
fdiv
sbb
enter
mov
mov
jno
cmp
mov
cmp
lock
in
sub
mov
pushf
push
in
mov
movsl
mov
stos
js
lahf
jne
scas
imul
or
mull
leave
js
cmp
push
sub
sahf
je
js
add
cmp
mov
pop
loop
xchg
mov
lods
or
scas
jge
insb
add
sbb
mov
mov
sbbb
cmpsl
icebp
fsubr
xor
push
sub
imul
imul
mov
sti
fwait
leave
div
in
sbb
add
pusha
push
xor
scas
orb
test
cwtl
mov
inc
js
push
add
sbb
call
test
mov
inc
js
push
add
sbb
aas
mov
and
ret
imul
loop
pop
movsl
cmp
mov
sbb
cli
adc
pusha
lahf
xor
sub
xor
aas
lret
xchg
xlat
mov
mov
jae
jmp
dec
psrlq
in
mov
jno
mov
dec
mov
push
cmp
pop
orl
inc
inc
mov
outsb
mov
stos
das
push
movsl
iret
xor
enter
das
mov
and
das
in
push
jmp
enter
lret
sbb
jmp
jb
out
aad
mov
aaa
fisubs
mov
pop
data16
cmp
repz
mov
out
sarb
push
cli
pop
lret
jl
pusha
pop
popf
out
ss
and
jno
pop
sbb
imull
outsb
push
xlat
pop
xchg
dec
test
mov
mov
lret
andl
rolb
cmp
xor
xchg
mov
out
sbb
push
lock
aas
pushf
imul
add
or
cmc
mov
adc
mov
dec
shll
xchg
push
pusha
push
mov
addb
cwtl
mov
outsl
push
sbb
fs
xchg
push
inc
arpl
hlt
mov
mov
mov
lret
adc
xor
cmpsb
mov
stos
xchg
aaa
mov
daa
subl
dec
mov
les
adc
dec
in
je
cs
rorl
pop
jno
mov
or
xchg
jp
fimull
pop
mov
mov
rol
into
mov
popa
ss
jl
insl
mov
ret
sbb
push
cld
sahf
push
adc
inc
lret
jb
or
adc
movsb
in
repz
rcll
pop
xchg
push
xchg
in
mov
lods
jae
stos
pop
sbb
sbb
scas
notb
mov
fsts
ds
dec
dec
xchg
imul
sbb
push
movsl
lds
mov
add
mov
ret
in
testl
leave
mov
aas
rcll
bswap
jo
out
cmp
je
mov
push
in
mov
mov
mov
mov
gs
mov
cmpsl
push
or
inc
cmp
xor
dec
push
in
mov
push
mov
dec
mov
out
popa
leave
scas
adc
shlb
jle
icebp
xor
sub
popa
sub
jne
jae
dec
int3
jns
xor
lds
and
and
xchg
sbb
sub
movsb
loop
mov
or
xor
jge
movsl
sub
jnp
rorb
push
js
or
adc
outsl
sub
add
inc
stos
or
movsb
pop
stc
fildl
mov
es
mov
pop
mov
xor
dec
fcmovnu
call
shll
rorb
stos
pop
cmp
mul
subl
cmp
aaa
imull
pop
adc
sub
out
add
cmp
sub
lea
adc
xchg
mov
imul
adc
inc
mov
ss
jg
jae
test
mov
fcmovb
sbb
aad
sahf
mov
pop
mov
pop
jo
ficomps
mov
and
dec
clc
cltd
out
mov
fs
cwtl
in
adc
jb
les
in
dec
mov
daa
jp
push
cmpsl
arpl
in
push
pop
cli
int3
jl
adc
pusha
mov
cltd
les
shlb
les
scas
push
mov
rolb
pop
nop
mov
jbe
in
mov
sti
pop
mov
stos
push
fisubrs
shlb
inc
push
mov
and
pcmpeqd
adc
aas
jno
mov
jo
inc
int3
cmp
imul
cmp
clc
test
mov
lret
iret
aaa
aas
ret
inc
xlat
sbb
inc
mov
icebp
add
loopne
cli
push
jecxz
sbb
jmp
jmp
lret
and
int3
push
lods
xor
adc
mov
jecxz
leave
xor
in
pop
adc
negl
aam
lock
shrb
mov
xor
mov
and
movsl
add
mov
inc
dec
cmp
or
rorl
mov
shrb
call
popa
arpl
loope
into
push
iret
xorl
mov
mov
inc
sar
jo
xchg
out
xchg
xchg
popa
fistpll
in
pop
sahf
push
pop
mov
or
imul
and
mov
xor
std
mov
push
mov
mov
jp
testb
je
ret
mov
push
lret
movsl
xor
or
xchg
fisttpl
int
push
sahf
pop
xchg
das
mov
in
ficoml
lret
mov
pop
test
iret
jo
xchg
push
jg
divb
cs
daa
clc
jnp
in
jbe
shrl
push
cmp
in
mov
pop
in
rolb
cmc
gs
xchg
inc
push
dec
or
subb
mov
outsl
xor
push
push
jo
adc
mov
sahf
xchg
add
pop
push
adc
fdivrp
sti
int3
inc
hlt
xchg
pop
add
out
or
cmp
dec
sub
jnp
pop
mov
mov
repz
popa
imull
mov
cmp
loop
mov
movsl
in
pop
push
add
push
adc
ret
jp
add
cmp
mov
push
xor
or
mov
mov
fldl
lea
push
cmp
or
mov
adc
and
push
mov
lahf
loopne
mov
push
mov
xor
fsubr
bound
add
mov
dec
fwait
jae
loopne
clc
jmp
adc
pushf
xchg
xor
aaa
jg
lods
movl
daa
push
cld
bound
mov
in
dec
test
scas
mov
dec
call
popa
roll
or
add
iret
setge
xor
add
frstor
icebp
stos
push
lods
inc
xchg
lcall
sub
dec
enter
cmpb
sbb
fisttpl
and
sti
daa
andb
inc
dec
popf
sti
addl
mov
arpl
dec
sub
loop
jnp
mov
scas
adcl
cs
rorb
sbb
aam
cwtl
sub
or
pushf
push
das
popa
lcall
out
lahf
mov
data16
adc
popf
inc
fcoms
mov
xor
and
aad
jbe
inc
je
xlat
jle
movsw
pop
idivb
jae
ljmp
das
pop
and
or
aaa
push
mov
rorl
xor
xor
movsl
aas
mov
rcll
cmp
cmp
out
dec
hlt
iret
sbb
sbb
movb
fxch
xchg
lock
ds
call
shl
jecxz
jecxz
fsts
loopne
xor
push
and
mov
mov
add
push
xor
or
fsubrs
xlat
lds
inc
inc
cli
in
lret
fadds
sub
add
cltd
pushf
fcompl
lcall
test
inc
popa
mov
mov
out
xchg
sub
fs
test
push
add
xchg
push
xchg
add
ds
sarb
or
icebp
and
xor
movsl
cmpsb
cmp
pop
es
mov
scas
mov
pop
xchg
pop
mov
sbb
inc
xchg
fucompp
inc
stos
fistps
bound
lock
in
pop
mov
aam
sub
loopne
mov
inc
jne
mov
cmp
leave
lret
mov
jne
aas
insb
cmpl
push
adcl
jo
inc
testl
xchg
dec
jmp
sti
lods
xchg
add
out
dec
mov
jg
mov
out
adc
pop
lahf
jb
xor
push
xchg
add
dec
xorl
pop
dec
and
mov
push
jbe
aas
orl
jbe
or
inc
or
xor
dec
pop
adc
outsb
out
push
xor
rdtsc
and
js
aad
xor
andl
clc
mov
loope
jg
inc
dec
or
pop
adc
cmp
or
sub
int3
lea
inc
adc
jnp
push
pop
or
or
int
xchg
xchg
jmp
int
aad
inc
lock
pushl
mov
pop
shlb
aam
sub
push
nop
or
shrl
insl
add
insl
jle
pop
dec
cld
cmc
ret
ret
push
loopne
xorb
inc
and
mov
shll
adc
jne
in
in
fdivl
push
mov
pop
add
pop
cmp
js
and
popa
inc
subb
mov
pushf
xor
inc
jmp
stos
jl
mov
push
jb
xchg
add
push
cs
fbstp
push
jae
inc
dec
and
cmc
xor
inc
jb
xchg
imul
stos
stos
push
aaa
repnz
jae
or
sbb
movzwl
pop
in
adc
xor
movb
cmpb
je
stc
icebp
dec
lea
out
xlat
insl
cmpsb
mov
cmc
dec
popa
dec
jnp
scas
pop
popf
pop
mov
shll
out
sbb
jge
cmp
mov
clc
push
nop
fisubs
mov
xchg
fs
daa
dec
xor
int3
push
fchs
mov
stc
lahf
jae
and
or
mov
imul
mov
push
lods
adc
sub
mov
les
fwait
in
movsb
xchg
adc
xor
mov
icebp
adc
arpl
push
sahf
push
adc
cmp
xchg
cmp
adc
ss
push
std
dec
lcall
xchg
fcmove
mulb
test
stos
inc
in
in
cmp
mov
cmc
mov
loope
cmp
test
cmpsl
shlb
xchg
jnp
pop
inc
cli
adc
testb
fnsave
add
inc
jl
test
sub
out
mov
xor
out
add
push
push
addl
mov
in
pop
pushf
outsb
faddp
repz
mov
add
xchg
sti
xchg
mov
sub
or
sbb
mov
pop
cs
loopne
and
dec
fildl
aad
sub
call
cmp
push
sub
ret
or
add
je
pop
je
cmc
rorl
push
into
push
addr16
cmp
mulps
or
mov
aaa
pop
outsb
jmp
daa
and
jecxz
bound
push
stc
cmp
fsts
test
pop
mov
std
mov
int3
enter
outsb
xchg
test
jbe
mov
fistpll
xlat
ret
nop
sub
xchg
mov
jle
in
loop
cmc
cmp
and
imul
cmp
inc
pop
rorl
outsl
in
daa
jg
int
mov
arpl
xor
in
jae
jmp
aaa
ret
into
pop
push
fsubl
cld
std
fwait
or
lods
adc
mov
xlat
ret
dec
mov
inc
test
push
aaa
dec
popf
sub
jp
decb
push
in
cmc
ret
mov
mov
jl
les
or
add
jns
cmpsb
jmp
jp
daa
pop
aaa
cmp
fstpt
int3
pusha
shl
in
pop
fisttps
and
push
shlb
and
xor
out
push
into
insb
enter
sbb
jne
mov
push
ss
push
or
jb
sub
or
cwtl
xor
and
and
out
cmp
and
push
jp
shll
push
mov
dec
xchg
in
ret
das
xchg
mov
lock
inc
push
cmp
or
inc
sbb
mov
test
jecxz
ffree
jmp
pusha
xlat
mov
mov
not
arpl
out
repnz
in
xchg
mov
and
loopne
stc
or
jb
push
leave
add
or
cmp
pop
imul
in
out
daa
jne,pt
aam
jecxz
jo
xchg
inc
out
adc
xor
xchg
pop
icebp
mov
stos
pop
sub
pop
mov
xor
mov
sub
inc
out
push
and
push
lds
xlat
dec
push
xchg
push
icebp
lret
fdivrs
fs
fisubrl
xor
dec
cld
and
inc
jb
mov
pop
dec
xor
jns
cwtl
jle
popf
call
mov
loope
in
ja
divl
push
jl
dec
fidivs
mov
xchg
and
inc
loop
in
lcallw
and
push
mov
jg
jmp
adc
hlt
dec
outsl
test
mov
jle
pop
and
loopne
lds
xchg
aaa
mov
add
inc
movsl
das
push
dec
or
pop
or
jo
int
fidivrl
jmp
mov
fsubrs
mov
push
mov
mov
mov
dec
adc
jmp
je
xchg
jmp
cmpl
sub
stc
xchg
icebp
std
xchg
shlb
dec
sbb
loop
xlat
nop
pop
decl
fwait
cmp
or
cmpsb
faddl
test
fldenv
das
call
jae
jno
lcall
mov
dec
add
dec
lea
scas
fs
notb
cmp
add
bound
gs
in
inc
mov
xchg
or
ljmp
sbb
cmp
dec
ljmp
push
pop
lock
mov
insl
movl
inc
xor
xchg
out
xor
icebp
mov
cmpb
xchg
out
stos
or
lds
push
cmp
lds
imul
fiadds
add
stos
clc
outsl
adc
sbb
push
leave
arpl
adc
gs
xchg
popa
dec
push
ja,pt
adc
xchg
inc
stc
lret
insb
rol
out
outsb
adc
xchg
insb
aas
aaa
jo
ds
fisubs
inc
in
fimull
xor
xchg
rep
sub
pushf
cmp
jmp
inc
jl
mov
loope
sbb
mov
lods
mov
dec
inc
cmp
mov
pop
xor
adc
shll
push
jnp
xlat
and
mov
mov
cs
lahf
and
xor
mov
and
adc
xor
pop
xchg
jmp
negl
jp
adc
xchg
outsl
inc
and
or
into
mov
outsb
jle
call
pop
jecxz
push
arpl
xchg
jge
repz
aaa
ficomps
imul
aas
loop
imul
pop
mov
dec
xlat
jge
adc
or
or
or
mov
mov
xchg
leave
iret
jae
mov
pop
addr16
ret
xchg
push
int3
rclb
int
in
mov
fists
xlat
je
pop
ds
bnd
push
push
pop
dec
pop
cmc
sub
or
ljmp
sbb
mov
push
push
out
in
or
cmp
das
mov
inc
mov
shll
jl
sti
push
cmpsl
sarl
js
mov
fs
mov
sub
push
movsb
dec
sahf
pushw
mov
dec
fs
js
inc
dec
inc
into
sarl
out
cmpsl
dec
scas
cmc
mov
adc
movsb
pop
lods
call
ds
scas
lret
cmp
jge
cmc
xchg
insb
roll
ffree
in
into
push
out
mov
shlb
and
mov
pop
pop
scas
mov
push
jecxz
or
ljmp
scas
pushf
arpl
xchg
and
aaa
cmp
cmp
test
out
dec
insb
mov
sbb
je
stos
lods
rol
fdivp
lcall
sti
xchg
mov
mov
loop
imul
mov
push
xchg
adc
sub
js
ss
out
adc
add
pop
stos
icebp
mov
jbe
dec
jo
mov
pop
jl
cmpsl
fidivrl
mov
or
inc
or
mov
jae
aad
lods
jp
cmpsl
mov
jmp
mov
mov
or
jnp
mov
out
and
leave
mov
jne
out
cmp
push
inc
call
es
adc
int3
mov
lds
add
mov
lahf
sbb
dec
ja
lds
lods
cmpsl
sbb
mov
mov
sub
xchg
push
out
jl
and
adc
fmuls
dec
xchg
in
movsb
mov
adc
mov
or
mov
adc
pop
sbb
and
fidivl
add
popf
sub
lret
call
out
or
jg
inc
ret
cmp
mov
jp
cmove
push
cmp
adc
sbb
sbb
xchg
mov
xchg
jg
add
dec
sbb
add
sbb
pop
cmp
cmp
jle
sbb
or
scas
aas
leave
into
mov
pop
cmovae
fbstp
pmullw
shrl
xor
dec
jg
mov
mov
mov
outsb
mov
iret
ficoml
dec
add
push
xor
outsl
jg
mov
or
xchg
and
add
jl
nop
fucom
ret
or
loope
call
pop
outsl
scas
mov
cmp
gs
fldl
dec
addr16
test
and
pop
stc
sub
xor
jecxz
mov
push
mov
or
cmpsl
mov
push
jno
imul
scas
shrb
in
icebp
lods
sahf
push
cwtl
fdivl
add
jmp
ljmp
popf
mov
insb
iret
pop
filds
orb
mov
notb
or
fildll
push
dec
add
jmp
dec
outsb
mull
mov
shlb
jb
sub
stos
mov
add
adc
flds
jo
adc
mov
jecxz
cmp
xor
flds
divl
add
jb
clc
orl
subl
ja
fidivl
adc
or
or
xor
jo
test
push
xchg
jbe
das
cmpsb
rcrb
mov
jge
fs
mov
xchg
ficoml
pop
sbb
mov
or
push
xchg
fnstenv
dec
xor
jecxz
jo
push
xor
fs
ljmp
stc
test
adc
leave
andl
clc
cmpsb
ret
jl
push
daa
test
sahf
mov
popf
or
cmp
mov
add
xchg
mov
mov
xor
mov
dec
notl
sahf
insl
pop
or
dec
dec
cs
inc
and
aas
in
sub
adc
sub
nop
enter
and
arpl
aad
and
ret
sbb
fldenv
mov
dec
sti
xlat
xchg
popf
js
fs
and
mov
lock
jno
or
fs
loopne
mov
pop
xchg
mov
pop
adc
push
mov
xchg
xchg
lret
and
pusha
mov
gs
xor
mov
cmpsl
test
jp
idivb
xor
sub
jecxz
push
stc
inc
inc
lcall
std
les
mov
pop
adc
js
cwtl
into
jecxz
ss
roll
nop
push
fcoms
add
mov
mov
sub
or
cld
out
inc
loope
arpl
popa
mov
out
jnp
imul
or
icebp
cmpsl
mov
xchg
jbe
test
popf
addb
in
xor
sub
add
pushf
adc
or
popl
mov
inc
mov
sub
je
lret
pusha
push
xchg
sbb
jo
fnstsw
dec
push
jbe
mov
loopne
jns
addr16
jns
shll
clc
mov
push
xchg
dec
shl
or
out
incb
mov
testb
lods
xchg
mov
sbb
sti
add
adc
fs
loop
sbb
push
xor
loopne
leave
pop
xor
pop
clc
mov
lock
ud0
in
push
jmp
shll
lods
fiaddl
out
sub
lods
push
xor
or
notb
call
mov
sub
nop
aaa
cwtl
aas
sbb
outsb
push
shrl
jmp
loope
loopne
xchg
add
in
insl
repz
fcomps
jle
cmp
xlat
add
add
pop
shlb
mov
insb
inc
sahf
sub
push
pop
or
in
fimuls
cmpsl
test
call
adc
stos
push
jmp
dec
nop
addr16
cmp
and
into
mov
inc
daa
lret
in
movl
fidivrs
ret
inc
inc
outsb
jo
pop
jge
mov
pop
lea
xor
xchg
or
inc
push
ljmp
ss
push
add
xchg
push
push
dec
cmpsb
sahf
lahf
mov
out
dec
ret
nop
and
es
jl
cmc
or
out
add
rcll
sbb
push
sub
xor
daa
or
mov
popa
lods
or
add
mov
enter
test
cwtl
mov
inc
js
push
add
sbb
call
test
mov
inc
js
push
add
sbb
mov
test
mov
inc
mov
jne
add
cmp
icebp
clc
loope
rcr
cmc
leave
test
xor
ret
jne
jb
popf
xlat
lret
js
push
outsb
insb
movsl
inc
mov
or
clc
or
cmp
sub
pop
mov
push
lcall
dec
fidivrl
lret
sbb
or
clc
or
cmp
and
pop
mov
push
cmpl
mov
cmp
sub
sbb
or
sub
ljmp
repz
sbb
cmp
movsb
mov
lret
sbb
mov
push
mov
pop
inc
sbb
sub
dec
push
mov
ror
jg
jg
lahf
inc
and
or
and
xchg
je
insl
jbe
dec
scas
in
and
outsl
dec
mov
dec
cmp
push
add
cmpsl
or
mov
jp
push
fwait
xchg
pop
and
icebp
jmp
xchg
lret
or
mov
aaa
movsl
jmp
clc
icebp
pushw
lret
xchg
aaa
mov
and
out
pop
sbb
mov
cltd
jp
jb
push
std
pop
push
cmp
or
loop
in
xchg
inc
fdivrl
pop
inc
sbb
push
push
js
push
int
fisubrl
cli
sbb
or
clc
adc
and
xor
inc
mov
push
notb
fimuls
test
jge
js
xchg
orw
pop
aad
rorl
sbb
in
cmc
cmp
and
pop
ficompl
mov
lret
ja
or
outsl
test
mov
pop
xlat
and
or
push
out
sub
sbb
sub
cmp
push
lret
sbb
or
clc
or
cmp
sub
pop
mov
push
lcall
dec
fidivrl
lret
sbb
or
clc
or
cmp
sub
pop
mov
push
lcall
cltd
mov
test
clc
dec
das
jbe
loope
sub
xorl
mov
imul
adc
dec
loop
add
lcall
add
dec
adc
orl
inc
cmpl
divl
adc
mov
jmp
jae
dec
out
imul
inc
outsl
das
push
mov
repz
or
and
or
inc
rcr
adc
imul
das
fdivrp
je
shrl
mov
add
xchg
xor
cs
xchg
fisubrs
js
xchg
or
mov
jle
negl
cmpsl
icebp
cmpl
mov
dec
xchg
es
cmc
fistl
jbe
lcall
adc
aad
movsl
clc
mov
aad
ret
xchg
cmp
push
movsb
fsubrs
pusha
push
sub
mov
sub
adc
bound
lahf
and
outsl
mov
mov
daa
mov
adc
cli
add
mov
test
sahf
in
shlb
jmp
lret
jbe
jmp
xchg
js
mov
pushf
rcrb
jp
pop
sti
mov
lret
cmpsb
cmp
pop
pusha
or
cmc
inc
cmp
and
test
add
in
add
mov
push
jo
xchg
sbb
jb
mulb
push
and
shll
lret
pmulhw
js
push
stc
mov
mov
push
dec
stc
pop
jmp
jb
cmpsl
cs
xchg
js
addr16
push
lahf
inc
push
cmp
jno
xchg
mov
mov
push
mov
push
or
aad
cmp
cmp
and
pusha
dec
xchg
push
xchg
fstpt
mov
pop
add
or
int3
mov
pop
dec
mov
lods
popf
sub
sub
es
xlat
push
out
repz
ror
xchg
fcmove
push
or
sub
or
lock
das
sti
aaa
jmp
push
pop
loop
jmp
cmpsb
sub
inc
adc
jno
jne
sub
and
xchg
jg
inc
test
and
or
xchg
aam
sub
cmp
dec
or
mov
je
int
mov
pop
sbb
cld
and
mov
xchg
mov
js
mov
lcall
fwait
add
daa
sub
push
add
cltd
fwait
jns
mov
or
je
dec
pusha
aas
jbe
je
sti
iret
jo
out
sbb
test
jnp
jge
lods
pop
ja
test
ja
pop
ficoml
or
inc
or
ss
imul
xor
adc
push
popf
mov
ds
shlb
into
gs
notl
hlt
sti
jns
cwtl
sub
aaa
push
push
test
jnp
in
push
into
xor
adc
mov
lds
fcmove
cmpl
mov
inc
add
call
int3
jle
dec
jmp
and
loopne
mov
lock
mov
loop
sub
popa
mov
xchg
out
stos
pusha
jmp
insl
out
push
sbb
insl
cmpsb
inc
xlat
out
outsl
out
ret
mov
or
stc
repnz
xor
xchg
daa
hlt
xchg
push
pop
xor
jnp
cmpsb
xor
xor
aaa
stc
jne
dec
push
adc
pop
imul
into
mov
mov
jmp
mov
jne
xchg
mov
adc
and
sbb
push
push
or
push
aam
lea
pushf
xor
xchg
rcrl
test
mov
push
xlat
sub
repnz
shrl
add
fs
sbb
dec
mov
insb
adc
sub
insb
jo
jle
sub
popf
es
xor
out
lcall
rcrl
mov
xchg
and
aam
adc
xlat
test
stc
mov
addr16
dec
daa
ljmp
inc
daa
movsl
mov
aam
cltd
jb
sbb
dec
ljmp
lret
mov
lods
out
subl
inc
pop
call
sti
mov
inc
mov
repnz
add
adc
inc
or
test
sti
adc
mov
outsl
mul
es
mov
out
mov
sbb
pushf
push
out
jle
mov
jo
xchg
adc
inc
psubw
cld
cld
ret
sub
ljmp
jmp
push
push
push
pop
or
or
lcall
mov
dec
cmp
jmp
es
lret
push
lods
test
loope
sub
test
int3
jns
push
jmp
outsb
push
shrl
cmp
push
into
les
fstps
xor
rolb
fwait
push
shr
push
fwait
inc
push
rorl
pop
mov
ss
pop
inc
shrl
ret
loop
pop
sahf
mov
fwait
dec
add
leave
mov
push
enter
adc
mov
popa
adc
aaa
pop
into
sti
xchg
mov
das
mov
cmpsb
pop
xor
or
ud0
mov
jne
pop
and
add
or
or
sahf
mov
rorl
or
or
call
or
nop
fisttpll
inc
xchg
mov
in
shrb
fldcw
test
ficompl
cld
test
fwait
into
dec
pop
mov
xchg
or
inc
psrlw
std
or
dec
ret
mov
fs
ja
push
in
fmul
lock
bound
test
or
adc
addr16
xor
adcb
fisubrl
xor
push
daa
push
inc
jno
sbbl
dec
push
add
mov
xor
and
ja
subl
mov
jns
add
dec
jbe
shrl
and
add
xchg
in
popf
insb
mov
mov
in
pop
int
data16
mov
cmp
int
hlt
jo
sbb
mov
out
cmc
mov
pushl
iret
frstor
xchg
inc
cwtl
scas
ja
sbbb
ja
shlb
scas
sub
test
ret
jno
jp
xchg
lea
jmp
mov
jge
mov
es
push
jle
test
lods
lock
sbb
push
sbb
inc
imul
incl
pop
sbb
mov
mov
jno
jb
lret
push
xchg
data16
sub
movsl
xchg
and
jo
aam
or
add
mov
fstps
shlb
ds
push
ret
insb
fcomps
mov
std
das
dec
aas
pop
cwtl
add
cld
jb
jge
push
stos
in
jno
in
jmp
lcall
pop
jg
fwait
sbb
int3
xor
into
dec
cmp
xchg
in
inc
icebp
ja
inc
fsubl
movsl
mov
nop
loopne
dec
mov
dec
jmp
ret
cmp
aas
popf
lret
inc
xor
mov
rorl
mov
xchg
inc
pop
jo
or
out
scas
adc
jb
or
repnz
adc
mov
mov
pop
push
sub
aaa
and
addr16
xor
mov
mov
dec
sbb
in
inc
flds
sarb
fsub
sbb
gs
dec
shrl
gs
clc
dec
adc
repnz
pop
adcl
xchg
cmp
sti
mov
dec
aaa
pop
adc
pop
sbb
mov
out
popf
fld
sbb
pop
fnstenv
xchg
jmp
js,pn
lcall
jbe
sub
lret
out
and
pop
lret
lods
mov
mov
roll
int
push
mov
lcall
sub
aaa
sbb
aas
push
lret
inc
imul
add
imul
pop
push
stc
lea
dec
push
push
mov
bound
outsl
adc
lret
cmp
jge
enter
xchg
fnstsw
dec
jecxz
pop
jle
ss
adc
adc
push
daa
dec
enter
mov
rcl
rolb
outsl
mov
xor
ja
in
jnp
pop
push
dec
pop
test
add
push
push
inc
cmpsl
es
stc
stos
dec
dec
mov
shll
mov
inc
sub
dec
test
xchg
movsb
cmp
sti
out
stos
mov
mul
add
roll
out
hlt
sahf
rorb
int3
pop
mov
or
mov
lea
pop
loope
repz
int3
push
sub
in
xlat
clc
es
lds
pop
shrb
lcall
xor
loopne
inc
jne
jno
or
adc
lds
mov
or
lock
outsl
addb
test
mov
out
cmp
out
and
mov
cmp
out
ds
jmp
xchg
enter
cmp
xor
xchg
lahf
xor
bound
xor
sub
mov
sbb
ljmp
repnz
cmp
and
orb
aam
nop
pop
add
loopne
pop
sub
repz
push
mov
inc
addb
cmovp
lret
dec
cld
or
aaa
inc
stc
sub
mov
and
pop
pop
and
mov
push
fst
jl
in
inc
mov
rclb
bound
push
adc
arpl
xor
pusha
in
sub
xchg
jge
outsb
sbb
dec
rclb
insl
cmp
adc
sahf
add
cmpb
inc
scas
mov
lret
rorb
imul
cmpsb
ror
cmpsl
xor
iret
pop
or
mov
hlt
sbb
xlat
fdiv
pushf
mov
mov
fwait
jp
pop
shrb
sahf
cli
sti
mov
jge
jg
fldt
xchg
pop
stos
xchg
push
dec
mov
inc
loope
divb
xor
popf
notl
inc
pop
and
lods
pop
pushf
xor
and
dec
cmpsl
cwtl
push
test
inc
jmp
xlat
in
insl
jne
mov
shl
or
lcall
inc
or
shlb
test
movsl
in
js
dec
push
sti
sub
movsb
add
lock
pop
or
in
stc
in
scas
repz
data16
add
pop
dec
add
xor
icebp
clc
xchg
jmp
mov
imul
fstps
fiaddl
push
nop
or
fcom
add
addl
cmp
cmp
pop
or
cmp
pop
xchg
test
xlat
cmp
pop
pop
sahf
imul
cmpb
mov
adc
inc
lods
adc
cli
popf
pop
outsb
sbb
push
pop
es
popf
ja
cmc
xor
popa
in
aad
dec
dec
lods
in
les
leave
out
add
jnp
sbb
das
push
arpl
cmp
sbb
fstpt
and
clc
dec
les
cltd
lock
cmp
xchg
sub
and
aam
out
inc
mov
ret
sahf
or
outsb
push
add
int3
mov
jbe
and
pushf
popa
jb
mov
inc
std
lcall
add
mov
inc
or
xchg
or
mov
js
jp
lods
inc
test
addr16
jge
rclb
stos
clc
xor
je
and
add
inc
xchg
xor
mov
shrb
stc
lods
scas
lods
cmp
push
pusha
sbb
fdivrs
xchg
mov
loopne
mull
jno
inc
out
rcrl
adc
lret
in
adc
insl
cmp
pushf
pop
adcb
adc
jl
mov
sub
mov
cmp
add
push
jg
mov
inc
mov
incl
fucomip
cmc
rcll
or
out
pop
xchg
and
es
aad
mov
mov
jno
je
out
leave
or
filds
xor
jp
sti
and
and
fnstcw
lret
out
inc
mov
add
xor
popa
das
loop
jl
mov
sub
inc
out
pop
loope
je
sahf
sar
scas
inc
jle
xorl
lea
insl
sub
aam
xchg
sbb
or
push
add
ret
dec
imul
sub
mov
push
sbb
ret
dec
sahf
es
xchg
adc
sub
sub
cmp
push
cld
arpl
mov
and
fdivs
sub
xor
pop
cmpsl
clc
nop
xlat
mov
push
push
xor
or
adc
xchg
sub
adc
mov
lcall
cwtl
xor
push
inc
movsb
lahf
jb
or
xchg
mov
xchg
cmp
xchg
adc
je
xchg
data16
add
and
enter
aam
popa
lock
pusha
sbb
aas
sbb
out
in
fsubl
gs
xor
cmc
arpl
mov
mov
push
or
xchg
xchg
loop
inc
sti
jle
dec
push
cltd
fs
enter
dec
ljmp
mov
add
sub
lds
iret
xchg
cli
adc
flds
ss
lods
pop
jmp
xor
repz
scas
repz
mov
xor
jecxz
and
xchg
je
cmp
fldcw
aas
aas
adc
jo
jmp
mov
inc
in
stc
sbb
pop
inc
test
fwait
jp
adc
gs
aad
sub
dec
and
or
ret
sti
fdecstp
nop
sbb
xchg
movsl
je
push
xchg
pop
mov
fdivrl
mov
es
movsb
pop
or
in
nop
sub
push
xchg
out
add
inc
add
mov
adc
stc
or
jno
or
inc
icebp
push
ss
jl
push
push
add
sbb
mov
imulb
out
adc
icebp
jno
insb
cwtl
sub
pop
cmp
sbb
push
xor
or
outsb
pop
push
scas
and
mov
test
adc
or
jnp
inc
mov
sbb
das
push
js
mov
or
pop
inc
mov
sbb
ret
popa
cld
inc
aaa
xchg
jno
inc
cli
push
lcall
dec
add
in
lea
inc
jb
mov
mov
decb
cmp
lret
push
cmp
push
decb
push
push
jb
test
gs
scas
ficoms
popa
jg,pt
sub
dec
sarl
shll
sub
mov
mov
lds
insb
scas
fstpt
dec
and
icebp
mov
and
lret
cmp
mov
fisttps
bound
push
cmpsb
icebp
push
idivb
add
dec
sti
pop
outsl
pop
xor
repz
lods
pushf
call
mov
sti
xchg
mov
push
mov
imul
or
rorl
push
out
imul
cs
or
pop
xor
inc
dec
xor
sub
aas
jnp
pop
or
pop
fldl
pop
not
and
push
loop
xchg
sub
and
bound
cmp
mov
jle
test
jnp
push
xlat
into
sub
fldcw
iret
inc
repnz
vmovups
fwait
inc
jg
push
enter
xchg
stos
xchg
ret
cmp
sbb
xor
push
das
mov
jae
xor
ss
xor
cmpsl
jb
mov
cmp
pop
stos
inc
dec
loope
adc
or
sbb
addb
jmp
cwtl
xchg
stos
ja
stos
ljmp
shr
lock
imul
sub
int3
sub
mov
jmp
pusha
stos
imul
push
loopne
push
sub
pop
dec
cli
lret
jo
loop
xchg
inc
pop
cmp
mov
adc
mov
and
in
jb
adc
mov
sbb
ret
sbb
fcomi
das
inc
push
mov
inc
scas
lret
cmpsl
bound
inc
les
mov
ljmp
insl
sub
sbb
sub
imul
movsl
sbb
imul
and
xor
call
addr16
fimuls
mov
fistpll
ljmp
mov
dec
out
sub
xchg
jl
fcomi
bound
xor
or
shrl
xchg
addr16
rcll
enter
outsb
or
andb
pop
cmpsb
fs
gs
and
fldcw
sub
fstpt
push
push
push
cli
inc
dec
push
cmovb
adc
sub
add
jae
xchg
push
shlb
mov
pop
adc
dec
loopne
mov
loop
insl
scas
ljmp
call
inc
fs
popa
mov
or
or
clc
push
mov
ret
sbb
lds
in
in
dec
repnz
push
push
ds
mov
aad
sahf
add
mov
dec
scas
sub
pop
sub
inc
cltd
mov
adc
std
es
add
mov
cmp
adc
inc
add
pop
stos
sbb
sub
sub
and
or
in
into
pop
and
addl
push
icebp
out
repz
pop
sbb
xlat
mov
fisubrl
sub
mov
insl
xchg
int3
xchg
jb
jecxz
jbe
rolb
cld
lods
leave
jmp
and
mov
fimull
and
dec
sub
adc
clc
aaa
in
jmp
arpl
push
mov
lahf
das
lea
stc
mov
test
jno
je
mov
outsl
sti
repz
or
aas
ljmp
xchg
fcoml
test
imul
mov
lods
and
sub
enter
sbb
pop
mov
leave
adc
adc
or
cmc
xchg
jne
adc
xchg
stc
lcall
sbb
out
push
adc
pushf
xor
pop
inc
push
jae
repnz
fstpl
cmp
scas
add
inc
cmpsb
mov
bnd
mov
dec
xor
mov
movsb
mov
test
shrb
lret
cltd
inc
and
shrb
cmp
loopne
xor
out
imulb
cmp
scas
test
add
fistpll
adc
or
xor
mov
push
loop
inc
cmp
loope
imul
adc
xchg
and
aas
lods
out
ret
pop
fwait
xorb
imul
sahf
adc
aaa
push
sbb
and
mov
xchg
sar
add
imul
pushf
dec
dec
lea
jb
fmull
lock
lea
mov
fdivl
arpl
jnp
push
fidivl
cmpsb
aad
jl
aaa
mov
mov
add
lret
sbb
add
mov
cmp
lods
sahf
mov
jns
mov
push
mov
add
inc
cmc
es
daa
mov
push
sbb
mov
idivb
push
shrl
lods
and
sbb
cmp
mov
adc
mov
bound
insb
jle
shlb
out
cs
test
dec
mov
pop
or
or
aas
xchg
test
in
xor
inc
mov
pop
incl
aad
sub
je
out
cmp
test
aam
stc
sub
fcmovb
push
lcall
adc
pusha
lds
loope
rorl
das
popa
or
ds
push
dec
aas
xchg
and
test
mov
popf
cmp
in
fdivr
cld
ljmp
xor
or
xor
addl
stc
hlt
mov
sbb
into
or
jns
mov
enter
jb
and
pushf
gs
push
inc
add
fsub
stos
and
add
fidivs
stos
xchg
loopne
outsl
mov
test
fiadds
xor
lret
jbe
in
frstor
push
jns
xchg
inc
out
jnp
push
lret
xchg
sub
mov
fdivrs
stos
aas
mov
movsl
xor
xchg
aad
jne
mov
ret
nop
bound
ds
or
scas
add
xchg
cltd
aam
out
xor
ds
pop
cmp
cmp
rorb
pop
sbb
push
push
pop
push
leave
pop
add
push
aaa
lock
in
rclb
push
dec
or
jp
xchg
pop
push
cmp
pusha
popf
call
test
cmpsb
ret
out
or
push
mov
in
fwait
scas
add
mov
shrl
pop
fmuls
ljmp
push
pushf
lcall
push
mov
and
addb
cmpsb
xchg
out
fs
mov
cmovae
sub
fxch
mov
cmp
pop
and
ret
mov
dec
dec
jl
subl
popa
sbb
push
pop
and
sbb
pop
in
jge
int
andl
ret
pop
xor
jl
cmpsl
ret
adc
xchg
fwait
adc
and
sarb
imul
sub
out
push
mov
cmp
ljmp
mov
jo
jp
jbe
jbe
jecxz
xchg
mov
popa
imul
lock
pop
push
pop
adc
sub
clc
enter
insl
xchg
push
fdivrl
das
popa
inc
push
mov
sarb
mov
mov
push
out
outsl
xchg
mov
pop
cwtl
jne
into
sbb
xor
cmc
popf
cmp
sub
xor
incb
jno
adcl
addr16
sub
rcll
mov
jg
sti
xchg
imul
icebp
push
mov
or
addr16
lods
push
inc
rorb
jns
fs
cmp
push
fidivrl
lret
sbb
or
clc
or
cmp
sub
pop
mov
push
lcall
dec
fidivrl
lret
sbb
or
clc
or
cmp
sub
pop
mov
push
lcall
dec
fidivrl
lret
sbb
or
clc
or
cmp
sub
pop
mov
push
push
fdivrs
lret
cwtl
push
in
cmc
inc
nop
fsubrs
mov
test
ja
mov
cltd
sub
aas
mov
mov
sbb
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
and
clc
jns
mov
cltd
sub
pop
fldcw
js
mov
mov
pop
enter
stos
pop
xchg
or
shrb
rcll
jmp
repz
ljmp
inc
or
dec
add
mov
adc
cmc
lds
leave
pop
pop
xchg
loope
repz
adc
pop
lahf
dec
fcoms
testl
mov
sbb
lods
ss
lea
pop
push
pop
imul
rorl
aas
mov
and
fdivs
cmpl
notb
fstps
arpl
pop
std
popf
leave
lods
stc
lds
inc
js
xchg
xor
mov
nop
push
and
sbb
pop
imul
adc
mov
rcll
int3
loope
mov
pop
rcl
sub
dec
mov
das
imul
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
fsubrs
jle
sub
scas
cld
lods
clc
jo
sbb
dec
std
dec
dec
or
aaa
jle
insb
cld
dec
int3
jns
sub
cmpb
aad
mov
pop
cmpl
sbb
outsb
fistpl
or
jmp
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
icebp
mov
inc
jnp
mov
out
cmp
dec
adcb
jmp
jecxz
je
pop
dec
mov
mov
call
pop
jnp
fstps
inc
xor
lds
ss
hlt
outsl
aas
or
mov
xchg
nop
repz
fcom
stc
orb
jo
mov
call
jg
leave
lret
push
test
mov
sub
push
arpl
mov
cmp
js
rclb
mov
or
lcall
mov
lahf
dec
repnz
xchg
mov
lds
imul
xchg
pop
push
or
add
or
mov
mov
mov
cmc
arpl
lea
pop
shr
aad
mov
loopne
jno
dec
lcall
adc
push
push
jg
mov
mov
and
es
rorb
inc
xor
call
push
clc
mov
mov
cmp
xor
sarl
mov
pop
and
call
lret
mov
and
movsl
mov
dec
mov
dec
xchg
mov
push
repz
lock
mov
movsb
loop
lret
sub
scas
fimuls
stos
je
ret
xor
inc
jns
stos
or
idivb
jae
data16
loopne
xlat
cmc
fstp
je,pn
cs
push
mov
xchg
jno
jg
dec
xor
push
mov
mov
lcall
mov
jae
leave
and
or
mov
mov
stc
xor
mov
sbb
in
xor
cli
dec
push
adc
nop
adc
lock
test
pushf
jno
jg
jg
jge
mov
mov
das
inc
push
rcll
roll
decl
inc
cmpsb
pop
jl
push
ret
mov
repz
and
loope
mov
ljmp
enter
jne
sub
test
xchg
add
lods
sarb
mov
jl
repz
pop
in
mov
loopne
aad
test
nop
jnp
dec
pop
outsl
cs
in
aam
adc
and
mov
or
outsb
jb
inc
mov
push
xor
dec
daa
nop
lcall
into
cmp
nop
scas
adc
cmp
outsl
dec
sub
out
inc
popf
addr16
mov
lods
subl
sbb
adc
sub
mov
xor
icebp
mov
orb
fnstcw
xchg
ss
pop
aam
mov
scas
sti
mov
cmp
push
push
je
int
cmp
dec
ljmp
ret
xor
scas
fildl
mov
rorl
and
clc
out
add
mov
mov
les
test
popf
leave
jmp
stos
rcrb
cmp
nopl
xchg
fcmovb
fmull
lcall
and
rcr
xchg
fbstp
jmp
xor
jae
ljmp
fdivs
fcomps
lock
xchg
popa
andl
lret
in
and
inc
cmp
xlat
enter
lea
cwtl
sub
push
cmc
pusha
sub
out
sub
xchg
in
sub
dec
pop
mov
jge
dec
outsl
icebp
leave
sbb
daa
cmp
sbb
sub
lret
loop
jecxz
pop
loop
xchg
pop
pop
addr16
loop
pop
dec
roll
js
cltd
add
cmp
jge
popf
stc
fwait
in
push
pop
scas
xchg
add
push
mov
or
dec
cmp
sti
adc
stc
sbb
mov
aam
or
dec
adc
push
and
mov
testl
cmc
call
adc
mulb
in
or
add
or
mov
jg
lahf
test
mov
jp
jl
or
ljmp
xchg
push
fdivrl
fistpl
addr16
xor
ds
xchg
dec
insb
sub
sbb
pop
adc
mov
pusha
test
push
pop
mov
and
ret
outsl
insb
outsl
mov
cld
cmp
cltd
push
fistps
xor
sbb
push
mov
imul
adcb
les
jecxz
mov
mov
sub
icebp
add
push
ja
xor
imul
mov
jns
or
xchg
outsl
xor
into
xchg
push
mov
mov
pop
aas
inc
and
and
movb
repnz
imul
inc
ja
dec
xchg
push
xchg
fcom
js
push
xchg
mov
mov
enter
pushfw
in
adc
push
in
or
fs
lahf
pop
bswap
shlb
xor
lods
xor
sub
loopne
or
mul
insb
mov
mov
fadds
dec
lret
adc
popa
cltd
xchg
jo
push
jae
mov
out
sbb
pop
dec
out
stos
sbb
push
popf
add
add
dec
int
xchg
daa
mov
xor
mov
pop
xchg
xor
cmpsb
pushf
repnz
loop
inc
clc
xor
sahf
popf
int3
sbb
cmpl
jno
push
xchg
jmp
inc
push
cmp
push
adc
jle
inc
jle
in
mov
xor
and
xor
xor
fiadds
jecxz
test
push
dec
rcrl
cmc
cmp
fimuls
aas
aas
pop
test
sbb
fldln2
jae
jl
and
dec
movsl
dec
push
mov
xlat
jnp
ficoml
dec
fistl
sub
loop
jmp
and
xchg
popa
sti
ret
aaa
xlat
adc
cltd
jmp
out
popf
pop
push
mov
test
test
sub
jo
addr16
jle
sub
push
and
loop
lods
pushf
jo
pop
rorl
jl
test
inc
jae
mov
test
mov
enter
pop
dec
sub
dec
fstl
inc
adc
dec
sub
mov
jns
cmp
aaa
insb
xchg
fstpl
out
test
adc
cmp
xchg
jnp
mov
pop
insl
xor
sub
fidivrs
lea
cmpsb
sti
and
or
and
xchg
rorb
jb
cmpsl
test
mov
mov
lcall
ret
adc
pop
es
mov
nop
aas
mov
cmp
iret
and
cmp
popf
testl
xchg
pop
pop
dec
xchg
mov
pop
adc
insl
adc
scas
call
jecxz
dec
aaa
insb
shll
stc
test
into
addr16
lea
xchg
sbb
and
mov
inc
faddp
insb
jns
jp
xchg
aad
sbb
xchg
lods
movsb
rcrb
fcomps
jno
jge
popf
mov
repnz
test
out
sub
out
pop
add
inc
test
hlt
jnp
rcll
sbb
ffree
cmc
ljmp
push
les
and
jae
aaa
lods
fs
dec
addl
outsl
jbe
sbb
gs
hlt
adc
icebp
lods
mov
cmpl
pop
addl
stos
dec
and
mov
add
xor
int3
movsb
push
adcl
mov
lret
inc
lods
pop
repnz
push
push
scas
jno
jb
inc
adc
inc
aam
aaa
mov
aam
mov
mov
ficoms
mov
fadds
xchg
mov
cmp
insl
or
inc
aam
sbb
scas
push
push
inc
iret
loope
les
imul
xchg
imul
cld
xlat
jg
inc
repz
sbb
xchg
rorb
insb
sbb
popa
popf
inc
cmp
mov
cmc
lcall
pop
inc
out
mov
sub
push
push
sti
or
mov
mov
in
sub
xor
dec
pop
es
iret
fsubrs
jnp
or
xor
lea
gs
pop
sbb
xchg
inc
sbb
leave
sbb
out
mull
mov
xchg
repnz
xchg
pop
jns
out
pushf
or
xor
add
cltd
dec
orb
cwtl
imul
es
imul
xor
xor
stc
adc
fadd
inc
mov
out
sbb
test
cmp
insl
inc
scas
out
movb
push
inc
lods
rcr
pop
mov
andnps
jae
sbb
mov
fs
les
jne
mov
lahf
mov
xor
inc
mov
sti
js
addb
fcoms
int
call
xchg
cmc
sarl
mov
lret
ss
adc
and
iret
outsl
jmp
mov
cmc
mov
xor
arpl
cmpsb
push
mov
shrb
dec
cmp
xchg
rcl
xchg
icebp
movb
jp
cs
sbb
lret
push
adc
jbe
pusha
add
xorl
jl
jbe
push
das
push
or
xor
inc
mov
xchg
testl
adc
sbb
sar
movsl
push
popa
lahf
add
jae
push
stos
enter
sub
stc
mov
lods
sub
mov
cmp
inc
add
cmpsb
fs
add
stc
sub
mov
sti
outsb
adc
pop
push
rcrb
pop
adc
in
adc
jnp
mov
jp
jb
imul
adc
into
or
iret
add
mov
notl
sbb
lds
add
push
int
neg
pop
mov
push
in
xor
cmpsb
pop
lret
movsb
sub
subb
mov
push
xchg
inc
add
dec
fisubrs
rorb
in
rolb
imul
and
icebp
lcall
xchg
jb
or
ljmp
addr16
sub
ret
adc
fldcw
adc
inc
push
pop
pop
in
mov
mov
adc
call
lods
jl
or
stos
enter
ss
dec
jmp
inc
jno
int3
mov
daa
jl
nop
js
mov
aas
cmp
cmp
popf
fcomps
mov
mov
in
out
cmp
insb
mov
xor
xchg
and
pushf
jge
lods
push
inc
lcall
ret
pop
add
popf
or
jb
mov
xchg
jle
test
and
jmp
mov
pop
fdivs
push
cmpsb
repnz
out
xchg
jle
stos
mov
dec
sub
sub
mov
cmp
add
mov
jp
inc
ds
cmp
je
lock
scas
cwtl
push
and
sbb
dec
pusha
lret
cmc
xchg
aaa
sti
test
jp
lahf
xchg
lods
lock
repnz
ss
xchg
fwait
push
push
mov
mov
arpl
bnd
jbe
xlat
imul
sarl
pusha
shl
mov
and
fwait
or
xchg
dec
push
imul
lock
out
dec
les
pop
les
mov
mov
inc
in
add
mov
dec
xchg
call
jle
in
jb
arpl
dec
ret
mov
xor
cmp
sbb
mov
mov
xchg
cwtl
jns
cmp
inc
repnz
sarb
sti
test
or
jmp
add
sub
inc
rolb
mov
es
pop
add
gs
cmp
lahf
sbb
jg
jle
inc
movsl
sbb
xchg
div
xchg
test
cmp
dec
pop
xchg
ficomps
push
xchg
adcb
clc
xchg
sub
inc
push
fs
jns
daa
mov
out
cltd
les
mov
xor
leave
push
and
mov
push
dec
fidivrl
jge
popf
xchg
mov
push
loope
xchg
xor
sbbl
mov
cmpsb
les
mov
mov
lds
push
cs
pushf
cmp
lret
add
gs
inc
mov
test
adc
xchg
out
mov
jb
je
movsl
cld
cmp
pmulhuw
dec
xchg
cmc
cmpsl
popf
mov
imul
icebp
add
mov
loop
jmp
cmp
jns
mov
sub
ficoml
and
adc
daa
adc
fmull
lret
sti
or
in
dec
xchg
das
jp
div
sbb
xor
sti
sbbb
gs
gs
mov
adc
das
push
cltd
out
and
rorb
std
jmp
sbb
fsubrs
ljmp
dec
in
adc
mov
adc
lea
mul
mov
fs
cmpsl
les
push
imul
sub
dec
int
and
adc
fildl
test
cwtl
jbe
stos
mov
dec
and
ljmp
xchg
cltd
loope
mov
sbb
cwtl
xor
in
dec
inc
stos
pop
lds
xchg
push
imul
xchg
sahf
fwait
mov
sarl
je
bound
push
cmpsl
nop
shrb
dec
jae
lods
test
lcall
in
sbb
pop
out
inc
iret
loop
mov
fdiv
mov
cmc
popf
push
pop
fistpl
into
sbb
dec
mov
push
out
leave
ret
push
push
xlat
sub
dec
pop
cmpsl
cli
aaa
push
gs
mov
insl
clc
cmpsl
aam
test
ret
mov
mov
test
sbb
out
mov
xorb
jmp
jp
mov
sbb
dec
pop
clc
sub
xchg
adc
and
ret
mov
enter
movsb
xchg
push
dec
adc
jae
add
mov
popa
cmp
inc
addl
push
fbstp
jl
and
mov
mov
mov
pop
add
xchg
inc
inc
cmp
insl
mov
jbe
mov
pop
push
mov
cli
pop
push
imul
loopne
pop
inc
hlt
push
int3
mov
jbe
lret
jb
rcrl
push
sti
pop
cli
push
inc
pcmpgtd
popf
enter
loop
ret
pop
dec
or
inc
mov
imul
pop
ret
mov
mull
jo
jl
cmp
dec
cmp
mov
sub
out
xlat
jecxz
ljmp
popf
outsl
ret
aam
mov
mov
int3
and
dec
xor
je
mov
mov
mov
lods
out
mov
dec
sub
lds
push
pop
cmpsl
inc
dec
in
data16
outsl
and
das
xchg
xchg
sbb
mov
popf
inc
xor
repz
inc
clc
jp
or
xchg
pop
fisttpl
arpl
jb
icebp
mov
pushw
ds
jnp
fdivr
push
loop
cs
inc
nop
or
push
push
sahf
scas
cli
pop
sub
mov
inc
mov
roll
sub
adcl
mov
iret
push
mov
ret
icebp
and
int3
movsb
add
out
or
pop
mov
sub
xchg
cmc
lods
add
fcmovnu
xchg
sub
xchg
add
jmp
cmpsl
stc
ret
cmp
inc
adc
loop
adc
jge
fsubl
sti
xor
xchg
clc
push
ret
fwait
and
enter
adc
in
cmp
cli
pop
test
sub
dec
nop
push
test
xor
repz
pop
enter
push
lcall
push
out
imul
sbb
es
and
ds
cs
xor
xchg
pusha
int3
xor
pop
adc
mov
inc
xor
cmp
loop
lret
fcoml
or
enter
les
iret
inc
adc
stos
lea
jno
push
mov
pop
repz
les
test
mov
icebp
movsl
cmp
mov
popf
test
fisubs
lods
movsb
and
mov
dec
sbb
sub
test
fcomp
lcall
jne
xchg
push
lods
data16
sbb
ss
jno
xorl
outsl
mov
push
xor
fsubl
and
pop
mov
addl
rorl
jae
lock
cmp
pop
inc
scas
jb
dec
sbb
add
aas
xchg
lock
xor
mov
jle
fwait
dec
repnz
test
pushf
das
dec
lret
mov
inc
and
jb
mov
jge
into
iret
push
repz
fdiv
lcall
andb
add
out
xor
xchg
sub
scas
sahf
inc
mov
jecxz
sub
sbb
int
and
mov
fs
iret
pop
lock
mov
int3
jmp
in
imul
aaa
adc
jmp
fcomps
popa
cs
jnp
stc
popf
test
push
mov
sarb
sub
rcll
stos
imul
pop
xchg
and
aas
mull
and
int3
shrl
nop
int
cmp
rcr
cmp
cmp
push
jl
js
add
xchg
sub
out
push
and
jb
fldcw
pop
popa
sub
scas
scas
adc
mov
sarb
push
inc
inc
mov
jbe
mov
fbld
inc
ljmp
sbb
and
push
xor
je
jmp
dec
or
xor
sbbl
mov
out
adc
mov
adc
data16
xchg
xchg
out
mov
inc
xchg
adc
loop
ss
lcall
add
push
inc
xor
out
inc
insb
mov
sahf
push
xchg
xor
mov
mov
call
jnp
test
aaa
mov
and
cmp
in
xorl
or
xor
pop
pop
les
aam
sub
popf
ljmp
dec
popl
inc
inc
lods
data16
fimuls
sbb
xor
or
xlat
psllq
xor
xor
dec
push
and
push
jp
popa
pop
dec
test
push
scas
pusha
xchg
xchg
push
add
scas
pop
push
sahf
inc
std
sbb
lods
or
pop
data16
ss
xchg
dec
adc
in
inc
sbb
mov
daa
sbb
mov
in
fstpt
fwait
jmp
enter
sti
pop
lea
push
pop
call
jb
enter
aas
xor
shlb
mov
adc
add
xor
jp
fwait
fs
loope
stc
and
sub
ja
out
push
movsb
pop
sbb
cmp
test
and
dec
sub
pop
rorl
out
inc
mov
js
xchg
leave
rclb
aad
xchg
xor
or
push
in
repnz
pop
adc
xor
xchg
mov
mov
aas
leave
ljmp
cmc
leave
inc
xchg
fucom
jnp
aas
fidivrl
mov
pop
sbb
arpl
jne
and
fs
cwtl
mov
pusha
test
sbb
mov
repnz
aas
push
or
out
int
gs
decl
out
insl
push
sbb
stos
mov
add
push
inc
nop
fld
cmpsl
and
loopne
aad
sub
shll
cmp
lret
pusha
jle
ds
test
mov
xlat
push
stc
cs
sub
outsb
jmp
lods
sub
mov
fcmovnbe
xor
lock
test
sub
mov
pushf
ds
inc
lds
mov
cmc
movsl
aad
or
shr
push
dec
data16
lea
fistpl
add
cmp
pop
push
and
call
push
mov
jge
adc
inc
std
adc
rorb
mov
xchg
or
jbe
xorb
lret
test
cmpsb
scas
pop
in
cmp
dec
out
mov
test
addl
adc
cmc
push
in
and
rol
ror
insl
fstpl
mov
in
in
inc
cwtl
push
addl
fcoms
stos
mov
xor
imul
mov
or
inc
fdivrp
ret
push
xor
and
les
xchg
jle
mov
dec
push
push
add
jg
mov
ffreep
xchg
dec
lcall
xor
nop
mov
fidivrl
repz
mov
pop
jmp
sub
pop
ss
mov
xor
or
insb
mov
mov
cmp
mov
out
outsl
mov
into
pop
inc
dec
mov
and
imul
sbb
sbb
adc
lret
shr
repz
dec
add
or
or
dec
sbb
jl
mov
aam
lods
xor
scas
and
cltd
xor
inc
call
mov
sub
dec
sub
ret
arpl
fsubs
stos
je
popa
xchg
std
mov
jle
inc
test
cmp
inc
or
ret
fnstcw
ret
cmpsl
nop
xorb
incb
sub
loop
pop
popf
or
adc
mov
ret
cwtl
sub
pop
push
int
lret
xlat
or
sub
sub
cmp
lcall
xchg
mov
fisubl
insb
cmp
mov
repz
lods
adc
ds
movsb
and
es
dec
in
pop
test
arpl
lock
pop
mov
adc
data16
sti
std
int3
mov
out
cmc
fwait
mov
jo
xor
int3
das
push
fwait
fwait
cmp
xor
fdivp
jne
push
outsb
icebp
outsb
lds
sub
repnz
mov
cmp
pusha
jle
shll
aaa
sub
dec
xchg
popa
in
mov
dec
lods
sarb
addb
xor
movsb
addr16
cltd
pop
test
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fldcw
js
mov
cwtl
sbb
dec
fcomps
imul
cltd
sub
pop
fld1
jmp
addr16
sub
cmpsb
adc
mov
sbb
ret
push
mov
cmpsl
pop
xor
add
inc
leave
inc
fnstenv
or
jns
dec
ret
pop
xor
add
push
mov
mov
mov
sbb
imul
pop
xor
and
adc
fld
sub
dec
js
ret
lcall
and
jg
divl
ror
out
cs
repnz
inc
inc
faddl
mov
adc
ss
sub
imul
inc
dec
cld
fs
mov
push
je
mov
sbb
push
ret
cmpsb
and
aad
jbe
leave
xchg
xorl
inc
ss
push
dec
leave
pop
mov
xchg
out
push
ret
ficompl
push
out
inc
jbe
pop
and
or
dec
mov
push
loopne
sbb
hlt
sub
mov
pop
cld
arpl
push
fldl
in
sub
sbb
imul
pop
xor
add
push
leave
inc
mov
inc
out
jmp
jo
add
cmpsb
or
xchg
int
loope
filds
mov
mov
lret
aaa
cwtl
in
sub
cmp
or
imul
mov
int3
imul
idivb
mov
xchg
add
push
popa
mov
jns
dec
ret
pop
xor
add
push
leave
inc
fnstenv
or
jns
dec
ret
pop
xor
add
push
leave
inc
fnstenv
mov
call
lahf
and
jp
nop
adc
jb
xor
dec
mov
cmp
mov
aad
aaa
pop
xchg
mov
jmp
shlb
cmc
addr16
cmp
sbbl
xlat
shll
mov
lcall
mov
adc
mov
cwtl
adc
push
xchg
inc
cli
test
cs
in
xor
cmp
fwait
or
or
jp
mov
mov
mov
mov
loope
or
out
aaa
mull
lcall
icebp
lods
mov
imul
xchg
out
test
pop
pop
dec
andl
jg
pop
daa
insb
outsb
dec
add
push
mov
add
in
jl
imul
xchg
sub
shrl
sbb
stos
and
adc
into
pop
mov
mov
cmp
ss
lret
iret
push
into
hlt
jp
subl
inc
xchg
inc
inc
jo
stc
dec
and
mov
add
scas
loope
push
pop
xchg
xor
outsb
push
xchg
push
test
dec
add
sbb
push
je
sub
movsl
int3
cmpsl
cmp
jns
xchg
outsb
test
neg
and
loope
ljmp
inc
fadd
mov
mov
jnp
mov
hlt
sub
fstps
jl
incb
mov
adcl
cmp
dec
inc
pop
pop
jl
dec
xor
stc
sbb
icebp
jl
or
cmc
xlat
pop
jmp
xchg
and
sub
add
mov
pop
stos
dec
fildl
movsl
rclb
aam
lea
sahf
nop
in
adc
std
jmp
icebp
push
out
push
rcl
mov
add
sbb
hlt
add
out
lods
dec
add
mov
pop
or
xor
mov
leave
lret
call
dec
jle
jns
subl
sub
xchg
jg
jecxz
cmp
cmp
mov
mov
xor
mov
push
push
or
in
scas
dec
das
loopne
add
inc
cmp
mov
xor
push
loope
out
mov
xlat
ljmp
or
mov
and
push
movsl
or
or
int3
jnp
mov
test
movsl
lea
xchg
in
jno
cmp
xor
dec
push
dec
jns
out
mov
xchg
inc
xchg
jo
push
cmp
cmpsl
add
xor
push
sub
nop
fcompl
scas
push
or
pusha
jecxz
in
rcrl
div
cli
lds
sbb
xor
insl
cmp
cmovle
push
sarl
pop
pop
dec
sbb
and
in
dec
lahf
inc
aad
cmp
jns
mov
inc
xor
loop
cmp
and
jp
stos
mov
ffreep
stos
push
out
inc
gs
push
cmp
leave
dec
or
and
add
fcomp
sti
push
inc
dec
dec
test
push
push
outsb
mov
push
roll
mov
xchg
push
push
loope
or
ret
mov
fisttpl
sarl
xor
inc
in
dec
ficomps
push
lock
or
adc
dec
cli
rcrb
mov
sbbl
inc
xor
xchg
sbb
jp
add
push
push
and
mov
mov
imul
xor
sub
mov
xchg
pop
mov
mov
test
and
and
mov
cmpsb
inc
sub
mov
jge
sub
enter
inc
push
fisubs
adc
and
movsb
outsl
rolb
mov
in
psubb
outsl
dec
leave
push
in
nop
hlt
les
clc
stos
mov
and
enter
not
mov
sahf
ja
dec
mov
outsb
dec
bound
cmp
cmp
xor
scas
cmp
jg
imul
mov
sub
and
les
iretw
inc
push
stos
mov
mov
nop
sarb
rorl
and
xchg
jecxz
sub
loope
aaa
mov
xor
push
jno
jge
jmp
arpl
arpl
push
arpl
sub
in
sarb
or
std
shlb
addr16
xchg
imul
sub
cmc
mov
pushf
and
or
es
push
pop
ja
add
insb
sub
pop
sub
imul
jae
lret
cli
mov
lcall
enter
addr16
cwtl
frstor
push
lds
mov
dec
mov
lcall
mov
fisubs
inc
pop
sub
adc
and
jae
push
cmpsb
and
jae
jne
rorl
out
js
cmp
adc
rclb
push
and
test
mov
loop
mov
imul
inc
cmp
mov
lods
lcall
jno
fwait
scas
push
xchg
mov
leave
inc
dec
inc
pop
push
rolb
hlt
les
add
adc
xor
psubq
mov
mov
mov
nop
xlat
sti
dec
sbb
pushf
mov
xor
jecxz
loopne
sbb
dec
stos
pop
jbe
loopne
dec
xchg
push
sub
mov
pop
pop
push
pusha
dec
mov
stc
aam
pop
and
xor
into
mov
enter
testl
test
sbb
jmp
jg
xchg
stos
mov
js
imul
and
inc
xchg
pop
jge
pop
into
jne
fldl
les
repnz
xorb
imul
test
mov
jge
fyl2x
dec
push
repnz
xchg
add
cli
xchg
pop
negl
xchg
sbbb
fisubl
nop
ss
inc
movsb
sub
sub
loope
sbb
push
stos
frstor
sbbl
xchg
jns
pop
pop
sub
mov
mov
fwait
jg
les
pushf
fildll
ficoml
cmp
addr16
jecxz
pop
aas
push
cmp
mov
stos
and
test
cmp
sbb
dec
arpl
insb
inc
cmp
hlt
rcrb
insb
mov
and
inc
xchg
pop
rolb
shll
mov
push
inc
inc
out
call
jnp
sub
jbe
call
add
outsb
mov
add
push
movsb
or
and
int3
jge
dec
sub
mov
jle
call
sbb
inc
sbb
ljmp
pop
jp
stos
or
das
fisttps
call
and
adc
sbb
push
sub
xchg
and
mov
xor
cmp
jmp
sub
push
push
call
cmp
mov
mov
mov
sbb
jbe
outsb
pop
test
dec
cmp
les
in
mov
push
and
cli
lods
xchg
jle
popf
mov
repz
ljmp
dec
pop
mov
dec
mov
rorb
rcrb
add
data16
sub
insb
inc
lods
cld
lock
jb
pop
test
push
push
adc
repnz
push
sbb
cmpsb
adc
xchg
mov
sub
fisttps
fstp
es
push
pop
mov
lret
xchg
adc
out
mov
popf
jmp
xlat
and
mov
cmp
jle
cmp
out
pop
jg
dec
mov
add
rolb
push
and
jge
pop
addb
cmp
mov
shlb
sbb
or
mov
mov
adc
int3
sbb
jle
fcmovbe
fidivs
stos
jg
xor
jb
inc
in
cwtl
xchg
iret
icebp
lcall
clc
or
jmp
pop
aaa
sbb
loop
shlb
movsb
icebp
in
fildll
xor
push
jae
mov
dec
mov
addr16
adc
pop
jmp
add
mov
pop
and
mov
mov
popa
mov
pop
lcall
pop
jmp
and
push
push
xor
jno
and
clc
loopne
outsb
dec
mov
mov
jg
out
sbb
push
inc
ret
pop
jle
andl
fstl
idivl
adc
xor
std
add
pop
xchg
popa
ret
mov
or
jmp
add
xchg
sub
add
push
pop
ja
jle
inc
in
in
and
fs
or
or
xchg
fstpt
fldt
pop
mov
sub
mov
mov
pop
cli
std
movsb
jecxz
loope
adc
in
lret
out
sub
cmp
ret
cmpsl
ret
xchg
xor
je
into
add
xor
mov
push
rcr
fs
mov
int3
scas
jmp
inc
xor
fwait
mov
mov
dec
sarl
inc
jmp
pop
cmp
out
cwtl
jge
adc
out
cmc
cs
dec
xchg
das
mov
insl
js
or
cmpb
push
in
sahf
clc
rcrl
loop
fdivr
xchg
lcall
jg
jae,pt
adc
push
push
popl
push
inc
jmp
lret
stos
jbe
out
dec
inc
movmskps
fucomip
das
fsub
rcrl
ljmp
iret
push
sbb
xchg
cltd
jnp
mov
push
lods
cmp
or
call
or
push
sti
xor
int
mov
inc
add
fs
mov
jecxz
out
jns,pn
loopne
xchg
cmp
aas
and
mov
hlt
cmpsl
mov
add
mov
pop
stc
stos
push
and
pop
cmpsb
sbb
xchg
inc
std
jmp
or
out
pop
fs
idivb
pop
aas
cld
adc
std
loop
mov
daa
arpl
inc
jae
out
test
adc
jnp
loope
sbb
setl
aam
jne
imul
icebp
sahf
ss
ja
dec
and
lret
push
inc
and
push
cwtl
jmp
loop
mov
loopne
push
jecxz
cmpsb
lods
jbe
test
inc
movsl
shlb
gs
inc
dec
leave
rcrb
xchg
inc
xchg
inc
ljmp
dec
seta
mov
leave
lock
dec
or
test
inc
mov
in
pop
jo
inc
cmc
mov
mov
clc
ja
rcrl
stos
sahf
sbb
ljmp
add
repz
fiaddl
push
add
pop
jp
jg
mov
cmpb
ret
xchg
sub
adc
in
les
stc
xchg
cmp
lds
or
lock
cmp
stos
inc
jge
mov
lahf
add
scas
and
ffree
add
push
repnz
pop
imul
cwtl
inc
addr16
add
jp
in
push
mov
xchg
push
and
mov
fsubrl
push
cmp
push
jp
leave
addr16
mov
adc
repnz
push
cli
jns
mov
sub
orl
dec
and
in
ds
into
in
cmp
mov
mov
push
cltd
xor
test
icebp
hlt
lods
dec
jg
sub
inc
push
lar
push
or
jbe
popa
fstpt
mov
inc
nop
inc
xchg
scas
mov
orb
dec
lods
and
fnstenv
jge
dec
daa
stos
fisttpll
add
mov
rolb
push
clc
xor
mov
add
fcoms
cmp
in
push
xor
adc
adc
add
or
cmp
jno
cltd
cmp
ljmp
mov
or
mov
fcomps
jo
lret
add
lock
mov
cmp
mov
xchg
push
popf
in
cmp
mov
inc
out
and
ja
xchg
inc
std
imul
sbb
nop
dec
dec
pop
mov
sub
add
fldcw
push
lock
push
lods
adc
loopne
push
lcall
jp
push
jns
push
pop
jnp
aad
xor
das
cmp
out
mov
or
dec
dec
ljmp
js
int
gs
and
sbb
fsts
mov
jo
xor
xor
shll
outsb
pop
pop
sbb
xchg
sub
cmpsl
fs
xor
outsb
and
xor
xchg
cmp
rcll
xchg
lods
pop
jo
mov
test
fadd
jg
cmp
adc
cmpsb
pusha
fists
and
test
sahf
icebp
lahf
testb
pop
nop
rclb
insl
cli
sub
movsl
mov
mov
ss
jge
lods
es
pop
fwait
mov
inc
xlat
and
addl
mov
adc
jmp
dec
das
add
mov
nop
sahf
movsb
cwtl
mov
pop
imul
mov
xor
inc
push
out
mov
fnsave
shlb
aam
lods
cmp
in
hlt
push
adc
jecxz
xor
sarl
sub
cmp
sbbl
int
push
add
cmpsl
and
mov
jno
xchg
xchg
clc
ss
xchg
jg
pop
mov
mov
jle
les
iret
xchg
stos
repnz
btc
push
mov
out
push
jns
push
das
mov
out
cs
dec
push
mov
push
mov
sub
sub
popa
test
cmp
cs
fdivrs
or
ret
push
jno
push
jge
cmp
call
or
dec
call
xchg
mov
pushf
adcl
cmp
out
push
aad
inc
cltd
mov
cmp
sar
jg
or
pop
rclb
fdivrs
jle
inc
sbb
clc
inc
je
and
dec
iret
stos
addr16
dec
std
in
and
mov
loope
sub
or
fs
fcmovnu
add
insb
mov
out
gs
fists
mov
mov
jmp
gs
lahf
xor
pop
pop
push
les
stc
pusha
shlb
and
push
and
jnp
les
es
sarb
popa
xchg
dec
cmpb
push
cmp
pop
repz
push
lea
mov
xlat
push
jmp
dec
adc
js
xor
push
iret
outsl
out
daa
push
pop
rcr
xlat
cmp
jo
mov
je
fimull
das
pop
or
test
fidivrl
xchg
mov
pop
mull
push
pusha
jo
fstpt
pop
jne
jb
fwait
mov
and
test
or
aad
bndldx
mov
fwait
inc
push
out
adc
dec
cmp
daa
mov
pop
push
and
gs
xor
pop
inc
pop
mov
rcrl
inc
fwait
roll
popf
push
popf
adc
sbb
sbb
lret
dec
pop
mov
aam
mov
jae
in
out
jno
jle
clc
lret
pop
scas
fcomip
inc
adc
sbb
ljmp
push
xlat
mov
ficoms
fnstsw
adc
insl
xor
mov
scas
in
push
testl
mov
pop
cld
inc
aad
rol
addr16
sbb
mov
aad
jecxz
aaa
shlb
and
mov
cltd
andb
rcl
sub
lods
mov
sub
xchg
mov
test
add
mov
testl
jns
push
sub
rclb
arpl
jae
in
loopne
imull
sbb
adcl
or
pop
sub
cmpsb
test
enter
test
rorb
push
mov
ret
movsl
mulb
fbstp
mov
negl
inc
cltd
mov
scas
pop
int
and
out
lret
fdivs
push
out
js,pn
cmpsl
jae
dec
add
fistl
xchg
mov
aas
fdivl
test
cmp
mov
je
aaa
sbb
aas
test
ficoms
jae
xor
push
sub
lahf
adc
sbb
sub
mov
mov
lcall
sbb
xchg
imul
fnstcw
sbbb
add
aad
push
and
cmp
jle
pop
stos
rcll
and
das
push
lock
pop
sbb
xchg
xchg
push
lcall
or
push
aad
pop
ret
or
push
cmp
mov
xlat
xchg
jmp
xchg
xor
leave
aad
mov
movsb
xchg
fwait
lods
je
add
dec
cltd
shlb
xor
xchg
insb
and
push
jo
ret
or
xchg
pop
ljmp
cs
jmp
xor
adc
cmpsl
push
push
scas
push
idivl
mov
loopne
jbe
enter
pop
fisubrl
ljmp
stos
adc
jno
sbb
and
stc
fstpl
repnz
mov
mov
adc
adc
xorl
icebp
repnz
jbe
pop
ret
ds
call
data16
push
xor
adc
enter
stc
xor
adc
add
jp
xor
in
mov
mov
lahf
xor
jmp
stos
lea
int3
into
pop
inc
add
mov
aad
sar
jge
fdivl
nop
call
popa
stc
clc
fmull
in
jg
add
pop
add
xor
scas
pop
adc
adc
aam
imul
test
inc
cs
fwait
pop
or
imul
mov
loop
popl
lods
and
std
out
sub
mov
mov
stos
arpl
shrb
push
in
push
bound
add
popa
pop
addr16
pushf
movsl
sbb
imul
arpl
iret
dec
lcall
out
movsb
aam
js
jp
aaa
loop
inc
lcall
mov
popa
jg
test
dec
pop
mov
mov
pop
jl
mov
xchg
adcl
mov
push
call
mov
mov
push
dec
out
daa
xor
or
cmp
adc
sub
lods
mov
sbb
lea
hlt
out
and
adc
mov
adc
xchg
insb
dec
inc
pop
dec
and
pop
loopne
pop
or
mov
mov
and
pusha
sub
mov
push
sbb
sbb
add
cmp
jno
cmp
dec
in
roll
sbb
mov
test
dec
sub
mov
jge
loope
mov
add
mov
clc
rcl
cltd
and
repz
test
dec
add
sbb
notb
pop
add
nop
jnp
leave
push
loop
std
pusha
ss
enter
or
aas
pushf
pushf
or
loope
xchg
scas
xor
cmp
lret
out
jnp
xchg
cld
insl
lcall
loopne
pop
or
lods
popa
jae
mov
dec
outsb
cli
or
stos
jbe
mov
lret
movsb
dec
or
xor
inc
push
sub
call
pop
pusha
pop
and
and
mov
xchg
fs
add
sbb
push
push
add
xchg
cltd
push
inc
int3
out
jecxz
cmpsb
cmpsb
sbbl
dec
sbb
sub
icebp
lret
out
jecxz
loope
aaa
and
inc
js
outsb
mov
pop
cmp
xlat
popa
cmpsb
xor
xor
and
sti
pop
xchg
sti
vmovdqu
or
sbb
shlb
add
push
out
idivb
outsb
jae
adc
clc
inc
notl
popa
inc
popa
popf
orb
xor
add
cmp
iret
xor
or
repz
pusha
ret
push
cmc
lahf
xchg
mov
xchg
and
mov
loope
push
insl
es
stos
in
mov
iret
call
imul
inc
lret
popa
fadd
fs
lods
xchg
fwait
scas
ja
jp
hlt
xor
lea
insb
and
push
lret
into
or
and
cmpsl
icebp
xchg
sub
out
dec
stos
popf
add
mov
jns
cmp
aaa
enter
xchg
mov
ja
sbb
test
aaa
jecxz
inc
and
daa
mov
adc
mov
aaa
insb
pop
xchg
mov
jecxz
lret
xor
ret
mov
push
bound
or
mov
inc
xchg
cmp
call
pop
arpl
ljmp
jg
or
or
pop
lret
xchg
out
clc
push
xchg
cwtl
sbb
ret
cli
dec
xchg
cmpsb
data16
mov
xor
xchg
adc
mov
outsb
cmp
dec
sbb
std
fs
jnp
xchg
sub
xchg
xchg
rorl
fldl
dec
push
lret
repnz
xchg
and
dec
mov
inc
jecxz
xchg
mov
out
dec
and
mov
xchg
sti
jle
nopl
clc
dec
cli
outsl
test
mov
sub
mov
loop
dec
push
popf
imul
xchg
jmp
inc
gs
sbb
inc
mov
cli
push
mov
jg
mov
arpl
enter
mov
xchg
mov
xor
gs
in
daa
cmp
imul
pop
xor
add
push
leave
inc
fnstenv
or
jns
dec
ret
pop
xor
add
push
leave
inc
fnstenv
mov
stc
rorl
pop
xor
and
jae
arpl
push
leave
inc
fnstenv
or
jns
dec
ret
pop
xor
add
add
jmp
lods
ss
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
loope
add
mov
pushf
adc
inc
xchg
adc
data16
or
sbb
imul
pop
shlb
pushf
adc
cld
jb
inc
fdivrl
cmp
and
sbb
dec
ret
jbe
cmp
or
mov
loopne
and
sub
push
xchg
push
jge
dec
mov
xchg
cmp
pushf
jae
push
jmp
insl
mov
xchg
pop
sub
dec
add
xchg
jns
cmp
decb
cmp
jmp
mov
adc
stc
out
pop
lods
test
rorl
test
int
rcrl
mov
loop
mov
or
mov
xchg
adc
push
mov
and
xor
push
leave
adc
jbe
inc
int
cmp
outsl
push
sbb
jecxz
loope
jle
pop
cmp
inc
iret
jae
pop
in
adc
jae
adcl
bound
bound
xchg
sub
fnstsw
popa
sub
and
loop
push
sbb
jmp
cs
mov
mov
adc
bound
rcr
scas
sbb
addb
or
bound
fidivrl
loopne
and
pop
enter
add
pop
fbstp
mov
ret
jge
add
mov
mov
lret
jno
jle
xor
popa
adc
jge
imul
sbb
cmp
sar
outsb
fnstsw
cs
jb
inc
fcoml
mov
sbb
insb
loop
repnz
ret
lods
and
in
cld
jb
inc
fcoml
mov
sbb
insb
loop
repnz
ret
lods
and
and
ret
cld
mov
jmp
insl
outsl
in
enter
push
clc
add
dec
and
xchg
inc
mov
mov
or
lock
in
add
ret
scas
xchg
test
pop
push
cmp
mul
push
imul
xor
cmp
ficompl
es
sbb
cltd
cwtl
xchg
xor
cmp
inc
push
cmc
sbb
imul
push
jo
cmc
in
in
xorb
bound
sbb
push
jecxz
scas
arpl
adc
xchg
push
lea
jg
rcrb
pop
dec
in
push
or
jge
and
imul
scas
mov
sub
ret
repnz
xchg
jmp
outsb
mov
sti
notb
stc
loop
mov
pop
sub
inc
cmpsb
aaa
rcrb
ret
pop
sbb
mov
fbld
mov
jge
adc
nop
dec
and
inc
subb
or
push
adcb
or
sbb
xchg
cmpsl
jnp
out
test
sbb
stos
es
out
in
data16
sbb
outsb
xor
mov
sbb
int3
dec
cmp
pushf
pop
and
jno
mov
jmp
pop
add
sub
xchg
rclb
pop
add
cmp
dec
inc
fildll
mov
mov
sbb
sbb
cltd
or
xlat
std
xchg
aam
sub
mov
test
mov
inc
dec
xchg
cmp
adc
cwtl
xchg
xor
sahf
xor
add
sbb
adc
stos
mov
lret
loope
outsl
fdivr
push
lds
mov
lods
mov
inc
sti
and
push
pop
lock
and
dec
pop
std
out
int
iret
int3
push
lods
test
psrad
mov
out
ret
mov
inc
sbb
clc
sbb
mov
sbb
jg
aaa
and
in
cmp
icebp
ficoms
lret
xchg
sbb
sbb
incb
adc
mov
mov
pop
push
out
push
push
fcomps
ljmp
sbb
hlt
pop
test
xchg
pop
sarb
gs
xor
call
cmc
dec
mov
ja
loopne
push
aas
ret
mov
jmp
mov
jge
and
mov
mov
push
insb
push
fs
or
xchg
outsb
adc
lret
das
leave
push
cmp
stc
jmp
xor
mov
jno
mov
dec
mull
mov
mov
ja
in
mov
cmp
cmpsb
pusha
xorl
pusha
fstpt
xchg
push
inc
test
adc
and
out
mov
sub
push
out
push
lcall
dec
pop
jo
clc
mov
lret
mov
dec
ss
pop
bound
ljmp
and
mov
fsubrs
xorb
push
jmp
loope
xor
push
add
push
xor
jbe
and
clc
push
mov
push
add
hlt
js
pop
add
cld
pop
stos
scas
ret
icebp
mov
adc
das
add
inc
adc
add
mulb
mov
sub
xor
xchg
jge
jg
pop
repnz
jecxz
scas
pop
xchg
out
cli
push
cmp
iret
cmpsl
dec
in
inc
and
inc
jae
imul
mov
push
inc
mov
icebp
mov
mov
mov
faddl
orl
pop
data16
mov
mov
fisubs
loope
xchg
push
rorb
mov
xchg
adcb
imul
pop
loope
cmp
sub
aaa
and
cmp
pop
add
lock
stc
imulb
or
mov
cmc
or
stos
jmp
sbb
out
call
inc
push
fcomp
movups
ret
rorl
mov
xchg
arpl
push
movsb
inc
je
popf
loop
fcompl
rorl
rcll
pop
push
mov
popf
mov
mov
cli
pop
inc
js
ljmp
dec
and
add
jbe
insl
add
xchg
clc
adc
xchg
add
adc
mov
data16
adc
adc
dec
mov
add
jnp
xor
mov
pop
cmp
push
sbb
sarb
mov
leave
in
roll
ss
cmp
dec
inc
test
shrl
fsubl
mov
xchg
jnp
nop
mov
jg
push
cli
xchg
cmp
dec
mov
incb
hlt
add
gs
fwait
jnp
pop
pop
negb
or
std
add
fidivrl
sbb
xchg
mov
jecxz
or
sub
lods
int3
lods
iret
adc
in
lret
inc
hlt
pop
loop
movsl
int3
xchg
out
cmp
js
mov
ds
mov
pop
mov
test
out
or
inc
inc
nop
mov
je
mov
push
mov
mov
or
adc
push
jo
cld
hlt
xor
jg
xor
xor
stos
arpl
dec
mov
and
scas
out
cmp
pop
jo
xchg
fstps
test
test
mov
stos
add
pop
and
xor
push
pop
push
inc
sahf
fdivs
addr16
add
subb
xor
decl
loopne
sub
pop
or
in
push
mov
outsl
ret
xor
test
jmp
mov
pop
addr16
sbb
pusha
and
push
push
test
loop
xchg
inc
cmp
test
sbb
sub
imul
and
jecxz
pop
test
mov
xor
js
dec
mov
nop
ljmp
push
inc
sub
cld
mov
aad
sbb
cmpsb
mov
or
aad
xchg
loop
add
push
lods
and
fisubl
call
inc
dec
push
or
lock
clc
dec
push
xchg
loop
inc
mov
loop
mov
adc
adc
jp
out
je
dec
in
lock
lods
cmp
cs
out
mov
aam
lahf
inc
xorl
ljmp
and
pop
adcl
popf
cmc
pop
push
out
xlat
sarb
push
jbe
mov
mov
mov
dec
outsl
push
and
orl
and
lcall
push
add
cmpsl
dec
out
add
les
cli
xchg
push
lock
sbb
or
mov
out
push
pop
mov
in
sub
mov
pop
xchg
add
arpl
js
cmp
add
push
and
ret
sub
push
adc
into
fs
jmp
test
mov
adc
mov
loop
hlt
cmp
jp
cld
pushf
sti
aaa
filds
sbb
jne
dec
pushf
mov
pop
sbb
cld
sbb
cmp
xchg
xchg
lods
in
mov
mov
or
mov
fistpl
jge
inc
fbld
xchg
ja
push
repnz
mov
out
test
add
movsb
push
fstpl
test
inc
sub
outsl
sbb
hlt
dec
shll
mov
ficoml
jnp
loopne
jb
in
in
je
push
fsubr
popf
cmp
scas
mov
jae
scas
int
cmp
insb
cs
jb
in
dec
pop
inc
es
pushf
jne
in
jecxz
mov
nop
movsb
mov
out
mov
pop
sub
dec
inc
cmpsb
pop
ja
push
push
mov
icebp
iret
adc
iret
inc
mov
imul
addb
addr16
sbb
xor
push
std
xchg
sahf
mov
jne
mov
adc
addr16
jns
mov
or
mov
fst
shl
mov
xor
iret
sbb
push
je
sbb
jae
mov
daa
dec
cmp
adc
cs
ds
and
push
pop
bound
mov
test
xchg
subb
adc
sub
aam
jmp
xor
xor
pop
pusha
and
aaa
xchg
cmp
popf
clc
mov
inc
and
xchg
or
xor
jl
dec
jae
ljmp
stos
and
jno
aad
ss
mov
inc
cmp
push
cltd
ret
push
mov
out
xor
mov
bound
dec
pop
adc
orb
push
loope
mov
pop
icebp
es
sbbb
movsl
out
mov
pop
loop
inc
dec
cs
inc
adc
cmp
div
popa
pop
push
or
push
mov
xlat
fs
test
jmp
fdivs
aam
pop
test
push
aaa
clc
call
add
mov
unpcklps
sub
mov
inc
lahf
call
xor
mov
adc
stos
mov
sub
mov
pop
repz
in
out
cmp
inc
bound
inc
fs
fnstcw
adc
add
xchg
lock
and
dec
aas
arpl
int3
mov
lahf
pop
inc
pop
mov
adc
inc
orb
xor
fmul
fdivl
and
ror
mov
fstl
inc
test
subb
sub
daa
add
into
cmp
cld
sub
mov
jb
sub
mov
adcl
or
sti
test
dec
outsb
bound
and
push
in
aas
ret
and
or
jge
mov
mov
mov
mov
xor
pop
insb
dec
dec
push
retw
xor
repz
mov
pop
add
mov
jns
inc
and
test
jl
pop
add
adc
and
push
fstps
mov
xor
xor
mov
mov
cmc
mov
lods
cmp
mov
sub
pop
mov
add
cltd
mov
and
mov
test
xor
dec
xchg
inc
xchg
movsl
jne
insb
sbb
add
add
xor
jnp
jne
cmp
insl
lret
repz
stos
stos
sub
xlat
pop
cltd
add
fistpl
pop
cltd
pop
jns
mov
test
add
inc
stos
xlat
int
add
mov
pop
fwait
sub
insl
push
std
loopne
add
push
mov
int3
fcoms
lock
cvtpi2ps
insb
out
test
jno
fidivl
mov
push
inc
std
popa
jae
inc
add
mov
mov
lds
inc
je
jne
icebp
arpl
popf
repz
adc
xor
mov
int3
dec
ja
xchg
dec
mov
test
lcall
dec
lahf
test
adc
xor
lds
or
and
lods
cwtl
mov
xor
jne
in
push
popf
cld
test
outsb
jg
adc
jb
mov
inc
ret
in
xchg
dec
int3
push
bound
andl
les
push
pop
int3
push
mov
ja
fldcw
mov
mov
xchg
sub
das
mov
pop
fdivrl
jge
xchg
push
aaa
push
mov
or
xchg
lret
xchg
mov
lcall
fcomi
outsl
insb
daa
insb
or
imul
clc
add
jge
aad
and
inc
ds
jecxz
cs
add
repnz
test
call
mov
mov
mov
je
das
push
push
inc
jne
mov
scas
push
push
call
adc
lock
add
adc
add
adc
cmpsl
push
push
jle
dec
push
aam
mov
xchg
or
inc
cwtl
mov
inc
jge
fs
jno
das
cmc
test
lahf
lods
mov
add
jp
les
xor
jns
je
jl
xchg
mov
andb
add
cli
ja
out
xchg
stc
mov
pop
push
das
cmpsb
mov
inc
xchg
lea
enter
add
xchg
jns
mov
cld
test
mov
fistps
adc
mov
pop
sbb
int3
jno
adc
rcr
xchg
fdivrl
pop
bound
inc
xor
push
test
insb
mov
call
push
das
movsl
fdivrl
mov
inc
push
lds
orb
mov
ds
lea
xor
loope
cmp
jmp
xor
jbe
dec
test
insl
popf
andl
sbb
movsl
je
adc
dec
jp
icebp
adc
lea
ds
ficomps
cmp
faddp
dec
push
xchg
xor
xor
jbe
inc
mov
jae
pusha
xor
xchg
pop
mov
hlt
imulb
push
sahf
loop
negb
movsb
pop
mov
push
xchg
adc
jl
dec
loope
mov
pop
int3
out
xor
addl
cmp
cli
push
adc
sub
pusha
and
fildl
cld
mov
call
lahf
insl
outsl
sub
pop
jno
loopne
ljmp
dec
mov
jmp
xchg
adc
cwtl
cmp
popa
push
arpl
push
pop
mov
jmp
mov
fsts
stc
roll
adc
sbb
fs
cwtl
jge
lods
sub
mull
push
repnz
inc
dec
data16
cld
mov
cmc
pop
push
sbb
mov
jne
ljmp
mov
shll
fmulp
incb
mov
outsb
mov
je
inc
cmp
ret
xchg
sbb
jle
mov
jns
mov
mov
insl
mov
push
pop
je
aad
cmp
pop
fisubrl
rcll
jle
jno
scas
dec
mov
xor
cli
lcall
push
xor
inc
cmp
mov
jbe
aas
xchg
cmp
test
rclb
mov
in
js
cmp
cld
push
in
xlat
xchg
push
bound
mov
push
sub
mov
xchg
imul
mov
pop
fldl
adc
push
fsubrs
dec
sub
dec
pop
fadds
daa
je
notw
xchg
push
shrl
fcompl
xor
push
notb
imul
sub
aaa
ret
mov
and
xchg
sbb
aad
or
push
mov
xchg
pop
xchg
ss
shl
repz
movsl
arpl
mov
cmovl
pop
or
stc
jo
shrl
in
insb
repnz
sub
mov
dec
mov
into
shl
lea
mov
adc
inc
and
repnz
sub
insl
das
cs
mov
ljmp
in
into
xchg
push
psrlw
add
jge
and
lock
je
xlat
in
outsl
pusha
sub
sub
and
icebp
stos
dec
adc
push
imul
inc
push
lods
iret
mov
pop
mov
add
stos
jb
xor
mov
aad
adc
out
cmp
sti
jne
pop
mov
pop
icebp
pop
dec
divb
outsb
mov
xchg
hlt
add
fldcw
fst
inc
jmp
clc
mov
mov
xchg
rcll
mov
sub
inc
mov
lret
shr
jge
mov
lods
lcall
lea
jecxz
fildll
lret
inc
cmc
jb
popf
call
xchg
in
cmp
into
or
cmp
clc
popa
pop
imul
mov
fmuls
insl
sub
inc
bnd
outsl
ret
push
or
jge
sub
ret
mov
sbb
mov
cmp
stos
fsubr
cmpb
xlat
and
outsl
xorl
mov
push
and
push
pop
mov
aam
js
jns
xor
or
push
mov
and
or
arpl
xor
and
push
sbb
jno
mov
xchg
dec
xor
xchg
jno
or
mov
inc
jp
cmc
ss
push
mov
ror
iret
mov
mov
adc
cld
cli
push
cmc
cmpsb
cli
in
push
outsl
out
ret
xchg
xlat
pop
fimull
add
je
mov
jo
cmp
or
lock
dec
iret
adc
dec
xor
scas
addr16
xchg
ret
mov
push
mov
daa
xor
push
out
stc
insl
or
scas
or
cwtl
out
push
call
lret
je
je
lds
ret
out
xorb
in
dec
cs
push
test
icebp
cmpsl
pop
bnd
stc
lret
sub
or
out
pop
mov
call
loope
sub
daa
imul
ja
orb
jne
xchg
ss
adc
dec
jmp
inc
gs
pop
pop
sahf
cmc
scas
gs
and
dec
sbb
mov
mov
test
push
insl
mov
adc
lret
xchg
stc
in
add
stos
pushf
loop
mov
into
sub
shl
sbb
adcb
clc
cmp
fcmove
addr16
sbb
rorl
or
adc
shl
xchg
push
addb
fcompl
xchg
lret
push
je
add
add
pop
imul
mov
out
adc
xor
mov
stos
inc
in
mov
fimull
pushf
addr16
rcrb
inc
jne
mov
mov
in
pop
sub
mov
aaa
ds
sbb
out
dec
jbe
sbb
in
sbb
mov
inc
out
popf
sbb
popf
dec
push
push
xor
movsb
mov
jecxz
out
les
mov
in
sbb
push
arpl
cmp
cmpsb
add
dec
jo
add
push
in
cmp
leave
fcom
arpl
or
mov
inc
outsl
sub
mov
xor
xchg
jbe
bound
mov
xor
add
mov
mov
xchg
xor
out
cld
sbb
popa
ss
stos
xor
adc
or
scas
adc
sbb
movsb
sbb
lret
sub
push
cmp
inc
pop
sub
push
fstps
cmp
jns
fs
movsl
cmp
xchg
xor
sub
cmp
or
incb
loop
mov
ja
sbbb
mov
mov
out
movsl
stc
inc
rol
stos
imul
in
cmp
jle
xor
push
sub
stos
xchg
jge
ss
or
adc
sbb
lcall
test
xchg
jecxz
jns
xor
pop
loop
je
popw
sbb
rcr
iret
jge
ljmp
in
fsubl
adc
jnp
jecxz
xor
lret
sub
imull
imull
repz
call
pop
insl
pop
cli
add
xor
divl
push
fdiv
sbb
call
mov
fs
lret
js
fists
and
jo
mov
fsub
movsl
adcb
inc
pop
xchg
mov
ret
sbb
test
mov
dec
cmp
push
orb
iret
out
cmp
or
jne
into
movsl
sub
sbb
lock
imul
idiv
ror
popa
jg
test
je
jmp
fcoms
add
cltd
mov
inc
mov
inc
repnz
pop
rcrb
sub
out
rcrl
mov
inc
arpl
sti
jae
mov
repnz
lret
jmp
mov
dec
sbb
xchg
jle
stos
dec
stos
jecxz
ficompl
outsl
movsb
fisubl
rorb
dec
dec
pop
sub
clc
cmc
sub
pop
popf
arpl
shl
clc
adc
sub
sub
scas
cwtl
test
aam
pop
loopne
mov
mov
test
fistpl
ret
cmp
lahf
out
shlb
ror
cwtl
in
decb
popa
push
aas
mov
and
aad
lods
mov
pop
and
ret
ficoms
mov
sub
das
cld
pop
mov
jo
sbbb
xchg
popf
dec
cs
adc
dec
neg
sbb
sbb
inc
js
jecxz
inc
cmc
popf
cli
testb
ret
xor
xlat
in
mov
and
out
lds
xchg
mov
orl
xor
ret
inc
ret
fbld
sub
hlt
les
icebp
je
and
pop
cmp
push
inc
push
push
push
dec
jmp
cmpsb
cli
dec
adc
ds
or
cwtl
outsb
insb
adc
sbb
std
push
push
cmp
dec
adc
and
sub
lock
dec
push
push
call
gs
cmp
push
sub
dec
jmp
push
adc
loope
les
mov
cmp
add
lret
jg
mov
sbb
inc
fimuls
push
test
in
xchg
nop
into
xor
xchg
dec
cmpsb
lahf
xchg
testl
adc
xor
test
and
rorl
ret
push
mov
inc
xor
scas
or
stc
xor
xor
add
and
dec
dec
in
leave
mov
aaa
pop
mov
sbb
and
mov
pop
in
jae
adc
scas
stos
cltd
mov
xlat
pop
cmp
lea
out
xor
pop
gs
pop
popa
add
sbbb
mov
and
cli
push
pop
dec
inc
adc
pop
push
shrl
mov
movsb
pop
mov
lea
outsl
out
jne
sub
fucom
sbb
pop
aad
int3
shrb
mov
notb
rorl
ja
aaa
push
in
shl
aaa
lock
mov
mov
les
and
sub
dec
inc
and
je
cmpsb
popf
pop
pop
and
mov
es
push
dec
lea
bound
mov
popa
or
ss
xor
pop
adcb
cld
jb
inc
fcoml
mov
sbb
insb
loop
repnz
ret
lods
and
in
cld
jb
inc
fcoml
mov
sbb
insb
loop
repnz
ret
lods
es
push
in
clc
sbb
inc
fstl
mov
sbb
dec
lret
insb
ss
nop
add
mov
in
in
jb
ret
sub
ret
sbb
lcall
bound
dec
inc
jns
imul
push
sbb
loop
repz
stc
mov
mov
jb
inc
jns
imul
cmp
pop
loop
repnz
ret
jmp
cmpb
push
inc
popa
push
jno
add
adc
and
xor
ljmp
test
push
cmp
ds
jmp
mov
movb
adc
out
testl
sub
ret
push
jo
cmp
imul
pop
es
cmp
stc
mov
aad
pop
push
xor
jp
inc
dec
daa
ss
or
fldenv
push
repnz
xor
mov
jb
sub
daa
sbb
cmp
cmp
mov
or
inc
cmpsl
mov
mov
fnstenv
jl
xor
or
scas
push
icebp
fwait
dec
cltd
shr
xchg
sub
cmpsb
lea
loopne
shrb
add
repnz
imul
dec
jb
inc
pusha
push
imul
cmp
xor
fptan
rol
loopne
lock
mov
push
cmp
sbb
or
sbb
push
adc
xchg
leave
ret
mov
aam
pop
xor
and
or
push
and
ja
jp
inc
sbb
pushf
shr
mov
fsubp
fldl
pop
jb
sub
sub
or
cmp
sub
fptan
leave
ret
jmp
cmpb
dec
inc
jns
imul
cmp
sub
fptan
leave
ret
jmp
cmpb
pop
jge
fcoml
in
xchg
inc
ret
xor
es
cltd
orl
jge
call
push
ja
lcall
jge
stos
add
inc
test
push
and
jp
mov
sub
les
sbb
int
cmp
xchg
int3
outsb
scas
pop
xchg
faddl
jo
mov
ja
scas
or
loopne
mov
sbb
dec
fildll
repnz
mov
in
push
inc
sbb
jp
mov
pop
add
sub
mov
xor
add
inc
cmc
push
add
mov
xlat
dec
sbb
xchg
ffreep
add
es
cld
add
cmpsb
aad
insl
inc
xor
push
cmp
sub
ljmp
aaa
jb
int
test
shlb
dec
add
aam
and
outsb
aad
ljmp
repz
pop
xchg
test
push
test
adc
mov
fdivrs
adc
cmp
clc
sbb
xchg
or
dec
adc
dec
pop
sbbb
xor
repnz
xchg
xor
stos
lea
int
repnz
mov
insb
fimull
mov
ds
cwtl
cld
xor
xchg
pop
jae
mov
stc
jbe
mov
lds
push
xchg
adc
addr16
xorb
pop
dec
mov
pusha
std
js
ss
outsl
sahf
hlt
adc
jmp
pop
faddp
push
aam
mov
in
arpl
arpl
loope
insl
iret
inc
insb
aas
sahf
sub
ljmp
movsb
imul
icebp
sub
or
hlt
dec
call
movsb
and
hlt
adc
or
sbb
mov
mov
xor
or
xor
bswap
lods
and
popf
and
and
mov
sub
iret
das
sbb
xor
push
and
ficomps
cwtl
xchg
shll
xchg
mov
and
xchg
cltd
fimull
jmp
and
fsubrl
fwait
pop
fcoml
faddp
aad
mov
add
mov
clc
xchg
mov
dec
pop
nop
pushf
mov
es
scas
repz
sbb
push
push
fwait
aam
sarl
hlt
dec
je
je
cmpsb
pop
xchg
xor
data16
dec
insl
divl
imul
fsubl
cmpsl
out
xlat
lea
into
dec
mov
loopne
cli
sbb
add
sarl
jmp
mov
fmull
stc
cmp
jo
int
or
or
mov
dec
push
mov
call
inc
pop
lret
cmp
je
test
imul
pop
cs
scas
dec
adc
push
fwait
jnp
mov
fs
xchg
cmpsl
nop
int
dec
mov
aas
dec
add
xchg
mov
pop
push
scas
jno
sbb
inc
mov
addr16
xchg
pop
fiadds
jo
cld
mov
outsl
or
adc
dec
and
shl
push
lds
in
push
xchg
adc
mov
mov
dec
fimuls
jl
dec
sub
daa
enter
js
and
gs
loop
cmp
xor
test
inc
inc
scas
mov
fistl
addr16
or
out
jge
imul
and
xor
sbb
inc
popf
or
push
sub
lret
jne
adc
mov
sti
dec
xchg
cmpsb
addr16
or
mov
lcall
xchg
clc
sub
les
jmp
xchg
jmp
lds
insl
push
ret
and
cld
add
mov
adc
movsl
push
lahf
cmp
push
or
ja,pn
outsb
cmc
mov
popa
mov
push
movsb
jmp
add
cltd
jbe
icebp
xchg
cmp
xchg
mov
pop
addl
mov
xchg
mov
xchg
mov
push
into
out
call
insl
rol
movsl
jle
lret
bound
stos
push
in
insb
fs
jmp
jne
out
inc
jnp
inc
pop
xchg
push
mov
and
mov
or
sub
sub
fisubrs
repnz
cmp
mov
outsb
dec
sub
repz
cld
jmp
mov
add
cmp
fbld
ljmp
ljmp
pop
pop
test
cmpsb
in
lods
lock
lcall
js
scas
outsb
xor
push
sub
mov
cmp
mov
leave
add
mov
inc
icebp
pop
cmp
sbb
dec
addr16
bound
ljmp
lahf
mov
aad
mov
es
inc
mov
push
lds
out
adc
push
cld
cmp
mov
jp
mov
dec
or
xchg
into
aam
int3
inc
cmp
sub
aad
inc
pop
popf
call
xchg
shr
xor
fstl
jl
shlb
cmp
dec
push
jo
push
xor
test
jle
test
dec
xchg
and
pop
push
or
inc
pop
dec
and
xchg
cmp
scas
mov
in
hlt
stc
and
jb
mov
int
mov
sbb
and
repz
add
ret
inc
and
dec
inc
xor
add
inc
add
fdivl
daa
add
in
stc
dec
dec
mov
cmpsl
inc
mov
inc
icebp
pop
je
sub
xor
jo
mov
jge
and
leave
pop
fisubrs
push
inc
out
mov
jb
ficoms
and
in
sub
jbe
leave
mov
sbb
aam
mov
lods
sbb
or
outsl
lea
dec
inc
and
sbb
pop
stos
dec
mov
nop
adc
rorl
fnstsw
or
pop
or
cs
jbe
mov
sahf
out
notb
ds
std
fstps
and
sub
outsl
test
or
out
push
adc
stc
mov
ficompl
sbb
push
insb
sbb
pop
adc
fdivr
outsl
mov
add
lods
pop
aam
adc
outsl
dec
push
aam
push
push
jp
rcl
jecxz
jmp
add
fs
sti
sbb
cmp
cmp
std
pop
push
fadds
adcl
rolb
xchg
xlat
fcomip
sbb
loop
push
insl
rcl
fnsave
push
loop
mov
dec
outsb
jle
or
xchg
mov
stos
pop
mulb
leave
and
jns
adc
arpl
xor
loop
int
out
aaa
fisttpl
xlat
xchg
repz
lcall
fiaddl
bound
mov
adc
int3
jbe
ss
cli
dec
xchg
aaa
jns
xchg
and
add
jns
dec
movsl
pop
mov
repz
aam
jl
mov
mov
ja
arpl
mov
pop
pop
jecxz
pop
xor
add
bound
cmp
cmp
fwait
movsb
mov
rcr
call
jne
pop
adcb
mov
xchg
mov
dec
jg
out
es
insb
xchg
outsb
mov
shrl
mov
mov
lret
inc
mov
loop
pop
repz
enter
push
mov
sub
jmp
xchg
cmp
pop
dec
push
gs
push
pop
hlt
sbb
jo
xor
ja
ret
aaa
scas
repz
or
inc
ret
mov
cli
jp
mov
and
ret
fisttps
pop
or
fstpt
fwait
sarb
xchg
in
fsubr
daa
jge
add
jecxz
or
js
in
in
sbb
or
jle
inc
sbbb
outsl
adc
in
sti
rcl
lcall
add
cmp
cmp
fmull
imul
insl
pop
movsl
jno
push
or
mov
cmp
xor
mov
cltd
xor
pop
sub
and
cmp
mov
negb
or
ss
pusha
fcomi
mov
sub
aaa
push
rcrb
sbb
push
sub
adc
sub
enter
cmp
fwait
sub
xchg
mov
and
mov
jg
xchg
dec
je
bound
bsf
js
out
dec
jle
sub
dec
stos
inc
pop
lds
push
popa
adc
mov
push
out
xlat
mov
lea
scas
mov
push
sbb
jae
jg
add
pusha
sbb
cwtl
je
jo
ret
inc
adc
dec
add
mov
aad
ss
inc
loop
andb
mov
sahf
xlat
adc
aaa
out
xor
loop
jg
or
sahf
xor
das
xor
out
pop
mov
fistps
cmpsl
outsb
ret
sbb
mov
mov
or
mov
pop
lea
sub
jmp
mov
push
xorl
lods
pop
in
jmp
es
pop
imul
in
sub
icebp
lds
cmp
xor
mov
add
and
pop
xchg
jne
jmp
push
arpl
lds
jmp
into
sti
shlb
lea
add
push
sbb
add
mov
cmp
sub
icebp
pop
jns
scas
sub
loop
fdivl
add
jmp
rorl
lcall
das
cwtl
test
lret
sbb
jle
push
mov
xor
js
sbb
addb
pop
xchg
mov
xlat
sbb
inc
fnsave
in
sbb
and
push
dec
dec
aaa
insb
leave
cltd
xor
divl
leave
aas
not
inc
pushf
lods
mov
es
mov
push
cmc
adc
push
xor
push
subl
add
data16
clc
ja
pusha
dec
sub
xchg
xchg
sub
icebp
adc
mov
negb
scas
jmp
daa
pop
jae
mov
push
fimull
push
mov
push
mov
aam
test
push
pop
pop
and
mov
jne
sub
jne
mov
sub
mov
push
xor
push
sbb
add
cs
push
xchg
sub
das
cmc
add
inc
push
test
jne
fnstenv
lods
cmp
movsb
cmpsl
leave
mov
adc
lods
or
faddl
xchg
pushf
fistps
pop
sti
push
mov
cmp
stos
adc
int3
js
cltd
and
mov
in
cli
into
cmpsl
in
fwait
iret
sub
fcoms
mov
and
and
es
sahf
ds
loop
pop
mov
pushf
xchg
cmp
stos
push
loope
gs
jl
das
test
sub
add
mov
leave
pop
ficompl
stc
cmp
movsb
mov
xor
mov
mov
cmp
xor
outsb
adc
jg
push
aaa
jno
loop
xchg
adc
sbb
xor
dec
sbb
ljmp
adc
jmp
nop
mov
mov
xor
jo
pop
xchg
add
pop
sbb
jge
icebp
xor
cld
mov
enter
push
mov
fs
pop
fstl
dec
pop
stos
mov
mov
addr16
ds
test
lock
negb
jl
cmpsl
movsb
mov
mov
aad
sti
mov
lods
jnp
jl
xor
jae
adc
push
test
lock
pop
testl
lret
lds
pop
in
mov
fs
mov
popa
fcompl
outsl
cmp
outsl
xchg
std
mov
push
jo
mov
lods
outsl
jns
faddl
push
scas
add
and
gs
mov
ss
ret
cmp
aad
dec
adcl
mov
sbb
stos
cmp
in
inc
jmp
dec
or
push
cmpsb
push
mov
nop
popf
out
dec
xchg
enter
push
cmp
cli
or
out
cltd
fs
inc
in
lock
ja
or
sub
dec
fistpl
mov
nop
inc
sarb
idivl
and
mov
mov
mov
iret
mov
sbb
xor
jae
aas
flds
fisttpl
xchg
arpl
mov
jmp
or
adc
adc
add
or
xchg
fcoms
jmp
sbb
inc
out
jp
add
push
cltd
pop
pop
jecxz
jo
nop
rcl
mov
pop
dec
test
jae
pop
cmpsb
xor
xor
or
lods
sub
mov
outsl
cmc
shrb
cmp
jmp
jle
mov
hlt
movsb
bound
stc
jecxz
mov
mov
repz
inc
dec
gs
adc
push
jl
cmp
leave
push
inc
or
mov
inc
and
inc
shlb
cwtl
push
jle
push
adc
js
cmp
pop
sarb
mov
or
xor
test
inc
sub
sbb
or
jae
lds
xchg
out
mov
dec
jno
xchg
or
mov
and
inc
mov
pop
loop
lret
sub
push
sbb
xor
sbb
xorl
sub
cli
jae
push
dec
jge
aad
push
repz
xchg
test
repz
inc
ror
mov
fmul
shll
push
jp
ret
and
shll
imul
cmp
sbb
divb
cmp
inc
lcall
addr16
mov
xor
lods
mov
adc
mov
mov
popa
popa
push
xchg
cmp
and
cmpl
rcr
daa
jp
mov
insb
repnz
push
dec
in
sahf
mov
out
or
xchg
test
xlat
add
inc
insb
or
jecxz
xchg
ret
loope
and
movsb
and
push
pushf
icebp
dec
mov
push
add
inc
cmc
cwtl
movsb
xor
out
mov
loope,pn
js
mov
push
or
sbb
dec
and
jo
dec
xor
dec
sbb
nop
ret
adc
lcall
fldl
xchg
sub
sbb
sarl
leave
inc
rorb
sub
sahf
stos
adc
cld
or
inc
and
cmpsb
mov
mov
insl
or
jecxz
mov
dec
pop
sahf
dec
sub
lds
sarb
lret
mov
ret
out
pop
decl
and
in
jge
push
sbb
cmc
in
mov
mov
bound
lock
movups
pop
inc
add
cmp
out
pop
mov
scas
adc
setns
jnp
jp
xchg
shrl
jno
pop
cmp
cmp
scas
sti
aas
clc
mov
dec
dec
and
scas
lock
xor
add
loop
ljmp
cmpsl
fwait
aam
xor
push
jmp
loope
lret
lds
mov
adc
push
cmp
int
pop
jb
scas
add
fnsave
call
in
xchg
std
and
daa
and
mov
lods
repnz
and
inc
loope
lods
das
dec
popa
aad
xchg
xchg
cmp
xchg
test
mov
mul
stos
test
mov
pop
dec
jmp
xor
int3
cmp
jecxz
in
cmpsb
pop
bound
adcl
sbb
lahf
and
mulb
sub
cmp
adc
sub
inc
xchg
out
mov
data16
push
filds
int3
lcall
sarl
stos
xchg
std
mov
ret
and
mov
outsl
stc
push
mov
pusha
outsb
pop
in
xchg
add
or
sub
repz
and
dec
pop
sbb
jb
rcr
shrl
nop
mov
pop
push
fs
or
pop
fcomi
xchg
pop
push
int
fimuls
push
mov
insb
pop
cmpl
sub
in
sub
adc
jg
mov
add
mull
xor
js
dec
mov
test
and
adc
push
pop
or
cmp
and
mov
iret
std
rclb
sbb
fdivrp
testl
loopne
jle
jo
jmp
mov
adc
xor
out
add
sahf
add
movsb
jns
jno
mov
test
dec
mov
rdtsc
cmc
cmpsb
pop
loope
fsubrs
jnp
scas
scas
pop
push
pop
push
leave
adc
cmp
sub
addr16
jo
push
fnstsw
jae
xchg
inc
add
ds
popa
push
test
pop
mov
sbb
scas
ret
les
and
dec
mov
fists
sbb
icebp
into
adc
popa
sub
dec
xor
ret
pusha
ss
sbb
out
dec
mov
repz
addr16
lea
nop
xchg
orb
jecxz
aas
js
test
mov
push
jae
movsb
push
sub
pop
imul
and
add
mov
ljmp
mov
pop
xorb
adc
stc
or
jmp
sahf
and
roll
jl
in
loope
icebp
or
pop
mov
daa
or
pop
sbb
jp
jg
jae
popa
aaa
pop
imull
lahf
dec
mov
mov
mov
dec
lock
push
ds
stc
push
or
dec
imul
filds
inc
adc
imul
jge
dec
inc
fldenv
aas
push
jno
call
lret
out
mov
lret
aad
cli
xchg
add
push
jle
sub
xchg
mov
xchg
inc
xchg
outsl
and
jns
push
sbb
mov
xor
jne
xor
imul
dec
add
push
sub
push
popf
xchg
iret
movsl
pop
andb
bound
cmp
cwtl
dec
push
mov
and
ljmp
test
sbb
push
and
scas
rclb
frstor
adc
xchg
fldenv
aas
mov
popf
shrl
xchg
nop
leave
cli
jp
xchg
dec
ds
jmp
insb
aam
popf
and
test
inc
pop
ss
loop
cmpsl
inc
push
sbb
jmp
bound
outsb
into
inc
outsl
pop
outsl
sbb
xchg
xor
push
ret
xchg
negb
lret
jp
xor
mov
xchg
or
dec
pop
jl
sbb
cmp
push
push
inc
rcll
sar
pop
xor
push
icebp
adc
sub
push
xorb
in
in
into
cli
or
cmp
dec
add
push
ds
adc
movsb
cmpsl
inc
adc
jae
xchg
mov
rcll
scas
test
insl
jae
scas
inc
mov
or
and
aas
jnp
xchg
pop
into
add
and
lock
movsb
push
fidivs
jns
cmp
int3
addb
out
scas
aaa
jecxz
mov
imul
repnz
sbb
mov
adc
push
xor
test
inc
push
sub
dec
mov
or
jmp
subb
aam
cmp
cmp
xchg
mov
pop
outsl
int3
pop
push
adc
inc
or
mov
fildl
sti
jmp
push
cmc
pop
push
sbbb
les
xchg
sub
test
pop
enter
adc
push
mov
call
sbb
pop
insl
cmp
bnd
pushf
aam
rcll
xor
mov
jp
stc
ret
push
add
js
and
test
sbb
lret
fmull
push
shll
repnz
inc
lret
das
xchg
lcall
or
nop
arpl
addr16
aad
aam
aaa
mov
gs
pop
filds
jae
les
cmp
xlat
pop
pusha
jecxz
insl
inc
test
cmp
inc
dec
mov
movsl
xchg
rolb
xor
sbb
or
pop
cmp
iret
mov
or
mov
shlb
jae
pop
andl
notb
xchg
bound
in
mov
addr16
jecxz
pop
mov
popl
mov
mov
aam
daa
scas
jmp
adcl
mov
in
xor
pop
cmp
sbb
imul
popl
mov
test
sbb
inc
cs
mov
pop
jecxz
dec
pop
add
and
cmc
jbe
xor
in
cmp
mov
outsl
jge
inc
pop
sbb
movsl
adc
adc
stos
jb
lahf
xchg
pop
das
fmull
dec
popa
imul
lahf
imul
loope
sub
loope
dec
popf
in
fwait
jne
cwtl
sbb
sahf
daa
add
or
sub
and
test
movsb
adc
into
mov
stc
add
xlat
xor
xchg
hlt
sbb
or
jle
out
lock
cld
or
icebp
push
dec
xchg
hlt
aad
dec
nop
adc
iret
movsl
leave
add
stos
lods
sbb
aaa
test
fwait
pop
jp
scas
pop
and
fstps
shrl
lods
jge
add
mov
push
outsl
lods
pop
jo
jo
imul
lods
outsb
insl
lret
daa
jecxz
or
push
cltd
pop
xor
xor
xchg
popa
aad
adc
cmc
dec
dec
dec
dec
jno
popf
xchg
call
push
test
les
cmp
lahf
or
out
jbe
sbb
push
jmp
into
push
adc
ficoml
mov
pop
scas
mov
mov
scas
das
xchg
popa
dec
and
adc
mov
cmp
sti
sub
stos
divb
mov
push
push
mov
push
jo
dec
inc
jns
imul
cmp
sub
fptan
leave
ret
jmp
cmpb
dec
inc
jns
imul
cmp
sub
fptan
leave
ret
jmp
cmpb
dec
ret
imul
fptan
leave
ret
in
mov
mov
jb
inc
jge
imul
cmp
jmp
push
adc
div
loop
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
lods
les
sub
xor
jbe
pop
add
add
add
or
or
add
sbb
xor
xchg
add
dec
add
roll
add
add
xchg
xor
or
test
add
test
inc
add
mov
and
adc
add
sub
adc
add
add
add
jnp
nop
add
add
add
inc
add
jae
pop
add
das
add
add
add
add
add
add
dec
add
sldt
add
add
add
add
insl
add
add
add
add
add
dec
add
sub
push
add
add
jnp
cmpsb
or
add
add
add
add
add
add
add
add
add
add
loopne
movsl
add
add
add
sbb
das
add
add
add
add
add
dec
add
push
ljmp
add
sbb
and
ret
add
add
add
add
add
add
add
add
add
add
das
add
add
add
xor
push
add
add
es
add
add
add
movsl
add
and
clc
add
add
sbb
test
pop
add
add
or
mov
clc
add
lds
iret
add
add
mov
addb
add
add
add
pop
add
hlt
add
add
addb
add
add
sub
sub
push
add
lds
cmpsb
add
pop
jne
pop
add
flds
cmp
push
add
add
add
add
add
add
loope
test
out
test
add
and
and
dec
add
add
add
or
add
sub
imul
dec
add
add
leave
add
add
add
add
popf
add
add
add
dec
add
fiaddl
push
add
add
add
xchg
add
add
xor
lcall
add
add
add
add
add
adc
add
xchg
add
push
add
cmp
pop
add
add
add
add
add
inc
add
dec
add
add
add
add
add
add
dec
add
add
add
add
adc
add
xchg
add
add
dec
add
roll
add
and
or
pop
add
movsl
add
cwtl
add
add
xchg
adc
add
push
push
push
add
add
add
add
add
les
aas
add
add
add
add
les
les
aas
add
add
add
stos
add
add
add
add
add
add
mov
or
pop
add
aad
push
add
add
add
jne
add
add
add
inc
add
add
add
addl
add
add
pop
add
add
add
pop
add
add
add
dec
add
xor
add
add
leave
add
add
add
add
add
add
imul
add
adc
add
add
aam
mov
stos
add
add
add
lea
add
mov
pop
add
pop
add
pop
add
add
stc
dec
pop
pop
mov
or
add
repz
lods
sbbb
mov
mov
sub
sti
je
mov
arpl
mov
aam
and
mov
mov
add
and
xor
gs
pushf
out
xchg
repz
mov
mov
and
hlt
sub
andb
imul
mov
stos
in
ljmp
js
jge
inc
dec
push
lods
cmpsb
jnp
xchg
cmpsb
dec
mov
and
push
sub
fs
int
jl
arpl
sbb
inc
enter
enter
movsb
in
xchg
add
call
sub
jns
xor
mov
popa
adc
mov
sbb
jle
stos
out
leave
mov
push
mov
pop
cmp
mov
scas
inc
jnp
aaa
out
xchg
inc
jge
pop
nop
fldcw
aaa
jo
xchg
mov
mov
adc
xor
mov
sub
lret
jl
jns
mov
out
loopne
pop
mov
repnz
jmp
xor
repnz
xchg
pop
mov
or
lods
cmp
in
and
in
test
sbb
cmpsl
stos
outsl
cld
xchg
mov
add
notl
nop
loope
ret
stos
push
xor
push
mov
nop
leave
ret
enter
sub
push
cmp
fdivp
push
fwait
or
popa
gs
rorb
mov
dec
out
add
or
dec
sub
inc
pop
rcpps
xchg
cmp
or
mov
das
mov
mov
cmp
add
xor
popa
add
bndldx
inc
cmp
xchg
jp
adc
aas
dec
cmpl
sub
mov
inc
jo
jl
pop
nop
inc
or
inc
mov
arpl
shr
xlat
jne
cmp
pushf
cmp
scas
jbe
or
shll
adc
mov
jl
xchg
cs
into
cmp
inc
add
sub
shrl
movsb
adc
mov
push
in
pop
int
rorb
push
rol
and
xor
sub
push
mov
mov
movsb
sub
cld
or
cld
pop
xor
push
push
addr16
sbb
leave
in
xchg
lods
mov
add
mov
insb
imul
hlt
lods
xlat
popf
test
cmp
mov
inc
pusha
sub
dec
imul
cmc
pop
or
push
xchg
pop
fnstcw
sub
insb
add
in
movsb
jecxz
cmc
add
cmp
fwait
or
sub
cmp
cmp
fwait
ds
and
mov
cmp
lods
cs
xor
mov
stc
sub
stos
lods
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
