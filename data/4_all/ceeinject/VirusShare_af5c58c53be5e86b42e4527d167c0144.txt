call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jl
cltd
sub
jg
or
sub
loope
mov
int
mov
rorl
pop
add
cmp
inc
and
std
mov
int
xchg
test
jmp
mov
cmp
sub
pop
mov
into
idivl
lret
cmpsb
out
mov
jo
add
xor
push
sahf
inc
int3
xorb
sahf
lahf
or
sub
mov
cmp
sub
cmpsb
jp
add
and
je
jo
push
push
dec
shlb
xor
add
mov
and
cld
pop
std
outsb
fdivrl
push
dec
insb
push
and
dec
je
pop
insl
insb
pop
push
dec
jo
sahf
sbb
movsb
js
or
jl
jecxz
les
icebp
mov
fcoml
mov
loop
adc
fdivp
mov
add
loope
or
and
cld
jb
insl
mov
mov
je
loope
xchg
jno
out
icebp
and
sub
jno
and
lahf
inc
std
xor
fistps
inc
roll
push
add
outsl
and
cwtl
adc
inc
push
loopne
sarl
cwtl
cli
pop
movsl
jmp
test
and
outsl
add
je
mov
std
xor
lods
movsb
clc
cmp
push
adc
xor
popa
sub
mov
mov
int
mov
rorl
pop
add
cmp
inc
or
xchg
fldl
lods
rcrl
in
mov
pop
push
and
mov
xor
mov
xchg
mov
pop
pop
gs
jb
mov
sbb
or
mov
les
sub
sub
pushf
and
and
mov
daa
mov
push
bnd
hlt
push
pop
arpl
add
clc
jp
lret
xor
jno
cmc
outsb
push
clc
xor
cmp
mov
or
lret
mov
xchg
or
add
sbb
rcll
adcl
inc
and
push
ret
rol
lods
or
xchg
fidivrs
and
add
cmpsl
aad
loop
shll
and
mov
repz
mov
xchg
aas
repz
outsl
les
bnd
dec
push
adc
outsb
push
fists
stos
xchg
fs
movsb
push
cmp
push
ret
or
arpl
add
fidivrs
test
jmp
or
mov
xor
scas
fstpl
imul
aas
outsl
in
nop
hlt
mov
mov
addr16
into
insl
lea
out
imul
popf
popf
shlb
mov
adc
sbb
mov
les
adc
movsl
fiaddl
ret
inc
pop
imul
addl
shll
push
mov
fildll
dec
sbb
push
sbb
clc
xlat
icebp
fstpt
mov
cmpl
push
cmpb
and
stos
shr
decb
imul
negl
imul
rol
or
movsl
cmp
dec
jnp
imul
loop
lock
mov
xorb
pop
and
popa
cmp
mov
inc
and
mov
mov
push
pop
mov
popa
or
test
dec
push
cmpsb
xchg
insb
mov
sbb
jnp
and
push
and
push
xorl
dec
aas
xor
mov
mov
arpl
cmpsb
dec
out
bound
mov
and
icebp
xchg
repnz
dec
cmp
xor
js
out
out
dec
xchg
dec
push
stos
push
dec
mov
movsl
fcoms
xchg
cwtl
push
jno
xor
and
mov
sub
dec
nop
push
cmp
rcr
iret
aas
negb
pop
dec
inc
sub
aam
shl
mov
lea
sbb
mov
cltd
dec
lret
lret
mov
cmp
repz
sar
xchg
cmpsb
sti
imul
sarl
dec
test
xor
call
push
ret
ret
cmc
jno
push
aas
mov
dec
nop
mov
aas
nop
in
cmc
stos
mov
sbb
outsb
out
mov
ficoml
into
xlat
inc
lret
pop
pusha
dec
sub
dec
aam
insl
push
sub
mov
test
mov
mov
shll
ja
lods
xorb
mov
mov
xor
pop
or
mov
and
pop
pop
dec
adc
xlat
sub
cmp
enter
sbb
addr16
out
cmc
mov
lret
push
ret
in
push
xlat
inc
add
pop
mov
push
lahf
mov
out
adcb
mov
adc
xor
jbe
push
loop
pop
and
mov
daa
popf
mov
je
sub
aad
xor
jge
pop
and
inc
orb
mov
or
add
pop
and
dec
xor
insb
dec
popa
cmpsl
sub
pop
movsb
test
sub
into
inc
ja
mov
addl
push
push
cmp
mov
outsb
loopne
clc
stc
mov
fstpl
shlb
xor
and
dec
rol
subb
call
inc
ljmp
mov
xchg
mov
pop
in
xor
jmp
cmp
mov
cmp
mov
ror
jnp
cmp
push
mov
and
push
cld
jo
dec
cmc
jmp
xor
sti
leave
stc
pushf
mov
inc
jecxz
adc
xchg
rcrl
aad
pusha
adc
xor
lcall
dec
js
fistpll
add
aad
test
jmp
in
sarl
dec
dec
call
pushl
adc
jg
dec
hlt
push
jmp
mov
pusha
and
out
dec
xchg
sub
sub
lret
pop
mov
sbb
jmp
xchg
push
jne
test
lock
fbld
aad
fdivl
and
adc
outsl
es
lock
and
xor
xor
inc
push
cmp
mov
jns
inc
pop
in
mov
mov
dec
popa
or
ss
ret
pusha
cmp
push
sahf
gs
mov
add
xchg
cltd
xlat
mov
mov
push
mov
int
mov
inc
and
fcompl
inc
ljmp
fs
pop
sub
sti
sub
push
jae
xlat
jbe
dec
xor
cmp
scas
xor
jmp
or
dec
push
orb
shlb
rcll
dec
lods
fimull
lods
in
and
mov
ss
sub
cmp
mov
xor
mov
ret
fsubs
pusha
mov
pop
push
cld
fadds
fmuls
hlt
adc
lock
mov
add
mov
shlb
out
mov
ds
add
mov
lds
std
mov
sti
lret
or
into
cmpsb
xchg
mov
data16
mul
pop
xchg
stos
movb
cmp
cmpsl
adc
rolb
mov
inc
cli
push
jge
int
adc
and
mov
lock
dec
mov
pop
adc
pop
dec
inc
leave
pop
mov
sbb
push
je
ss
mov
fwait
lods
das
pop
pop
push
xor
add
mov
push
test
std
cld
in
inc
add
mov
rcll
or
pusha
mov
cmp
fadd
shll
mov
mov
aaa
adc
scas
add
fisubs
movsb
xchg
jns
movsb
inc
jae
popa
lret
in
jmp
lahf
xchg
jp
ficoms
mov
lea
out
stos
ret
pop
mov
pop
addr16
shrb
push
repnz
or
pop
lds
or
inc
mov
adc
mov
out
idivl
xchg
inc
push
ljmp
mov
mov
xchg
jg
arpl
xor
dec
sbb
aaa
in
dec
ret
cmc
in
xor
movsb
loopne
mov
repnz
js
lret
pop
int3
adc
jo
sub
mov
loope
xchg
dec
adc
insl
insb
arpl
shll
inc
sbb
adc
add
xchg
hlt
pavgb
mov
scas
clc
daa
sahf
call
push
and
in
cmp
test
cmp
push
aad
clc
loope
push
push
xor
mov
add
aaa
mov
pop
pop
cmpsl
ja
lds
adc
stos
shll
std
sub
jmp
sbb
inc
mov
jmp
push
movhlps
cmp
cld
push
repnz
mov
mov
mov
roll
and
dec
in
daa
gs
fwait
push
idivb
xor
push
push
mov
fcoms
cmpsb
das
ja
mov
nop
inc
push
or
push
xchg
test
mov
pop
push
mov
mov
sbb
outsb
ljmp
loopne
arpl
mov
mov
out
fs
sub
dec
or
lods
adc
inc
jo
fldt
es
jecxz
cmp
mov
add
add
pop
sub
shr
xor
mov
cmpsl
ds
xor
mov
cltd
sub
mov
test
imul
dec
sub
mov
dec
mov
and
push
insb
add
and
lahf
leave
mov
or
pop
inc
cmpsl
pop
cmpl
pop
and
fwait
je
stos
cmp
jae
fildll
in
jmp
ljmp
enter
inc
push
repnz
pop
repnz
xor
rcr
pop
std
sahf
xchg
pushf
inc
sub
add
sbb
shll
adc
push
sbb
rcrl
pusha
arpl
in
mov
les
int3
pop
test
jbe
cmpsb
mov
movsl
lcall
push
xor
jg
mov
add
scas
cmpsl
pusha
test
in
add
rcrb
sub
jne
push
bound
inc
arpl
and
shlb
xchg
inc
hlt
es
js
out
test
and
popf
fcmovu
mov
mov
add
or
fistpll
jae
cmp
push
mov
mov
subl
dec
and
xchg
pop
pushf
out
cmpsb
mov
jp
push
cmp
arpl
mov
or
jg
scas
or
pop
mov
cmovnp
cli
push
xor
mov
fldl
fcmovnu
sub
inc
push
mov
outsb
add
repz
adc
scas
mov
test
cmp
gs
mov
ret
push
sbb
jg
sub
jmp
insb
push
ror
aad
in
xchg
pop
frstor
outsb
test
adc
inc
fnstcw
sub
stos
mov
xor
mov
cltd
adc
ret
sbb
outsb
rep
push
jecxz
or
add
jb
jg
dec
insl
jnp
repnz
int3
movb
adc
cli
or
mov
pop
loopne
dec
jb
inc
leave
jae
mov
xchg
lcall
sub
fsts
pusha
mov
imul
pop
jno
xor
notb
out
xchg
mov
int3
jne
test
mov
xchg
jmp
subb
adc
js
cltd
inc
enter
sbbl
aaa
sti
mov
pop
loope
lret
jg
mov
icebp
inc
shll
das
roll
inc
xor
popf
rclb
xchg
out
and
adc
mov
sahf
ljmp
xchg
xlat
fldcw
cmp
adc
jae
int3
repz
sub
fsubs
jg
mov
push
rcrb
adc
popf
cmp
ficoml
jge
mov
pop
lcall
in
xchg
jle
js
push
jns
push
idivl
or
jnp
fistl
int
in
and
add
mov
push
mov
mov
addr16
sub
add
cmp
pop
mov
sbb
lret
rorl
adc
lea
std
mov
shrl
loop
sti
int
sub
stos
out
fildll
push
push
jo
test
aad
stc
add
addr16
xchg
cld
out
out
mov
les
xchg
fdivrs
in
cmp
in
mov
cmc
push
add
test
std
cmp
push
jb
fdivl
cltd
aas
jbe
mov
lock
mov
xor
and
jecxz
daa
movsb
in
loop
and
cmc
lret
cs
fs
test
push
rcrb
pop
add
mov
in
jg
int3
mov
add
pop
scas
fidivs
subb
dec
inc
fs
mov
push
jb
xor
or
pop
dec
mov
sub
lods
inc
sbb
jae
xchg
push
mov
push
pop
rorb
mov
fldt
in
mov
out
fsincos
sti
xorb
ss
xchg
add
cwtl
insb
dec
xlat
jge
test
cmc
into
pop
mov
or
fs
or
sub
cltd
daa
icebp
push
pop
and
xor
enter
add
jecxz
mov
mov
inc
testb
mov
icebp
mov
in
cmp
dec
xchg
lods
mov
pop
jge
test
lods
mov
lods
popa
popf
ds
movsb
and
pop
in
xlat
push
pop
add
jmp
xchg
loope
std
stos
outsl
pop
and
lods
mov
mov
data16
and
adc
inc
icebp
int
cwtl
out
jbe
faddl
lret
ja
sbb
notb
in
xchg
push
xchg
leave
push
cmp
push
adc
daa
ss
mov
loop
cmc
std
fldl
mov
mov
push
cmp
loope
inc
adc
xchg
in
jb
lea
hlt
scas
push
iret
xor
or
pop
insb
test
sbb
rcrl
or
test
lahf
push
push
popf
jle
mov
xchg
jle
bound
xchg
lea
or
and
adc
insl
test
mov
cmp
scas
lret
mov
mov
outsl
cld
xor
addr16
sbb
push
fmull
sub
jl
jge
mov
cmp
sahf
aas
add
lcall
adc
mov
fisubl
cmp
adc
pop
dec
and
cmp
aaa
ljmp
adc
pop
cmpsl
mov
xchg
sbb
cmp
sub
pop
xor
into
xchg
mov
mov
outsl
lret
popf
inc
mov
test
add
loopne
jnp
adc
stc
lret
inc
dec
fldl
mov
lods
push
outsl
add
or
imul
repnz
push
push
in
lea
inc
push
imul
add
xor
and
jmp
and
or
pop
xor
add
xchg
int3
lods
jo
cmpsb
out
cwtl
cld
mov
add
add
loop
add
hlt
loope
fdiv
sbb
lds
movsb
imul
pop
cwtl
stos
sub
popa
sub
push
cmpb
movsl
xchg
or
dec
jns
fidivrs
test
add
andb
icebp
outsb
push
pop
sub
add
rorb
ja
mov
adc
sub
or
cmp
leave
popa
and
scas
sti
and
jmp
push
add
adcl
nop
jae
cltd
sub
scas
in
and
inc
add
xor
sub
mov
and
pop
fsts
mov
sub
mov
adc
push
ds
mov
negl
push
and
inc
les
inc
leave
jg
dec
aas
sbb
movsl
js
loopne
cmc
fstl
xchg
repnz
add
ss
in
dec
popa
xor
mov
sub
or
out
mov
or
dec
add
loopne
sahf
add
inc
mov
and
aad
add
int
push
fisubrl
loop
addr16
lahf
mov
scas
lds
out
or
stc
add
fnsave
add
in
cmp
fdivrl
sbb
jae
and
mov
dec
fnstcw
ret
sarl
xchg
mov
push
cmpsb
movsb
jbe
sti
in
mov
or
mov
xlat
andl
ret
jecxz
dec
call
rcrl
push
iret
cmpsb
jp
inc
mov
xchg
cli
jle
cwtl
jnp
bound
sti
addr16
xor
push
pop
fldenv
cmc
mov
fdivr
inc
pop
out
jae
loope
cld
add
or
loop
pop
pop
push
or
int3
jecxz
outsl
push
mov
daa
mov
jbe
jecxz
mov
stc
or
adc
bswap
in
adc
push
aad
movsb
stc
aas
fwait
cmp
cmp
ds
inc
repnz
in
jae
adc
movsl
and
test
mov
or
imul
sbb
mov
std
cwtl
ret
mov
hlt
adc
clc
outsl
adc
std
loop
jb
dec
sbb
push
dec
lret
int3
add
aas
rorb
mov
out
cmp
sbb
inc
xchg
fldcw
push
cmp
inc
inc
fs
out
pop
mov
jg
js
and
adcb
pusha
adc
ret
cmc
rclb
mov
stc
cwtl
jno
ds
or
ljmp
cmpsl
xorb
pop
jo
rcrl
js
or
push
loopne
mov
mov
pop
and
add
mov
push
xchg
mov
fcoms
pop
mov
mov
leave
push
sbb
movsb
or
call
dec
and
xor
push
daa
fisttpl
es
les
test
push
jbe
push
sbb
cmpsb
lods
shrl
cwtl
xchg
cli
sbb
xor
jle
dec
fists
repnz
cld
iret
xor
lcall
sub
repz
or
lahf
push
sbb
scas
xor
mov
mov
nop
dec
loope
sub
inc
xor
rorl
out
or
xchg
in
sub
and
jg
dec
enter
jae
fmull
je
lock
mov
outsb
in
jl
mov
push
negl
xchg
jp
and
nop
pop
stos
cmp
mov
dec
pusha
sbb
mov
mulb
stc
shrl
add
adc
push
daa
sub
pop
jl
repz
xchg
xor
int
test
jb
cmp
shrb
stos
push
pop
dec
in
rcll
dec
add
popa
jnp
lds
jg
mov
and
fists
daa
stos
dec
mov
cld
lods
adcl
div
inc
outsl
scas
mov
insb
dec
outsb
sub
mov
insl
fsubrs
mov
dec
fcoml
mov
ja
rcrl
xor
adc
and
insl
mov
jbe
mov
push
nop
push
icebp
scas
mov
mov
popf
test
rcr
aad
mov
adc
pop
mov
xchg
ljmp
mov
stos
and
push
fwait
cmp
push
push
ds
jle
and
push
scas
xchg
cli
fs
test
push
push
inc
ret
xchg
xor
gs
test
sarl
int
cld
outsl
push
inc
aaa
pop
push
mov
inc
mov
pop
push
pop
pop
mov
in
or
aam
stc
or
insb
jo
sub
adc
aad
mov
cmp
dec
jle
jmp
lock
jno
mov
in
stos
arpl
gs
sbb
or
inc
repz
outsb
or
insb
data16
mov
inc
jbe
xchg
sub
lods
push
push
xor
mov
nop
shrl
xchg
mov
popf
lods
pop
cmp
idivb
push
mov
out
xchg
nop
pop
mov
or
popf
mov
scas
push
push
movsb
sahf
popf
test
dec
jb
sub
loopne
xchg
or
mov
mov
rorb
add
push
sub
dec
xor
or
fdivs
lret
popf
mov
sub
adc
and
add
jne
mov
loopne
leave
enter
gs
cmpb
cmp
jns
mov
xchg
push
mov
push
pop
dec
xchg
mov
je
out
sub
push
mov
mov
push
inc
mov
out
pop
insb
pop
inc
push
nop
jle
fistps
fs
mov
xlat
aas
int3
loope
gs
push
sbb
sub
jns
lret
sub
cli
into
mov
mov
mov
mov
ror
pop
sbb
xchg
jl
sbb
in
push
call
aad
stc
dec
jl
mov
clc
xchg
mov
jecxz
ss
aad
pop
or
push
loope
mov
mov
std
sub
add
scas
mov
sub
jge
xchg
ds
cmp
or
dec
dec
sub
cmp
outsb
lret
test
jae
push
jmp
mov
out
dec
pop
outsb
outsb
cmc
lret
ljmp
mov
cmp
adc
inc
and
lds
hlt
stos
pop
data16
inc
aas
test
in
ja
out
pop
lea
mov
lcall
loop
sub
fildll
hlt
mov
xchg
in
mov
bound
imul
es
into
popa
aam
rol
jae
or
mov
cmpsb
jl
loopne
loope
add
fiadds
sbb
stos
fstps
sub
data16
inc
or
and
test
pop
mov
iret
pop
lods
pop
aam
xor
scas
lods
bound
mov
jb
mov
mov
cmpsl
pop
cmp
dec
xor
lret
dec
push
iret
cmc
adc
insl
cmp
mov
mov
sub
ljmp
stc
cmp
lahf
adc
sti
mov
pop
notl
dec
das
mov
pop
pop
xchg
mov
dec
imul
jmp
jmp
out
adc
mov
add
pop
mov
in
adc
jbe
es
adc
push
push
cli
jb
out
bound
orb
test
add
push
and
inc
cmpsl
add
and
jmp
fs
ss
sub
xor
aam
add
push
jmp
cwtl
aas
mov
out
and
das
push
lods
test
cmp
dec
push
dec
out
arpl
mov
push
pop
out
repnz
ds
repz
lret
mov
push
shrb
mov
jmp
jmp
cltd
cmp
mov
mov
jmp
sub
mov
mov
lds
repz
ja
out
mov
jl
nop
fimull
js
mov
mov
adcl
and
scas
push
or
data16
pop
dec
fs
add
xchg
dec
lock
cmpsl
cli
mov
jle
lcall
push
jmp
addr16
icebp
in
loope
or
pop
sbb
sub
mov
mov
int
mov
rorl
pop
add
cmp
inc
or
xchg
fldl
lods
rcrl
and
inc
add
cmp
inc
or
cwtl
fldl
lods
aad
icebp
imul
mov
jno
push
popf
ror
add
cmp
cmpl
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sub
mov
push
xchg
jbe
in
pop
and
jno
arpl
push
enter
cmp
push
rcrl
test
mov
add
adc
inc
nop
and
mov
jbe
sbb
push
aas
pop
fxch
out
fwait
inc
loopne
std
jb
mov
pushf
and
je
or
jno
insb
js
xchg
int
sbb
xor
inc
lods
clc
in
int3
adc
pop
les
les
inc
lock
sbb
pop
adc
jno
jns
adc
jo
mov
mov
movsb
jge
push
scas
mov
ja
dec
mov
cwtl
mov
push
mov
push
hlt
jno
mov
xor
mov
into
mov
std
pop
jo
sahf
leave
mov
xor
add
aad
movsb
ret
rorl
fldl
lods
and
pusha
xor
mov
or
xchg
bound
xor
gs
sahf
enter
jae
outsb
push
or
add
dec
or
inc
outsb
mov
out
add
cltd
cli
push
fsubrs
inc
jecxz
mov
pop
test
mov
pop
movsb
test
jmp
in
gs
push
mov
hlt
pop
loopne
lock
add
or
ja
je
xchg
and
sub
out
rorl
xchg
js
dec
rcrl
test
mov
add
jno
popa
enter
sub
sbb
dec
rcrl
test
mov
add
jno
popa
enter
sub
fsubrs
es
cli
mov
icebp
dec
dec
jmp
mov
jne
sbb
adc
jle
cmp
nop
mov
pop
or
dec
mov
lcall
mov
pop
push
add
or
insl
rol
lods
xor
dec
fcoml
mov
pop
pop
push
stos
xchg
lret
and
pop
lcall
xchg
int
lds
or
je
aas
js
hlt
das
dec
mov
fs
pop
ret
jbe
lahf
in
or
or
mov
mov
movhps
push
aad
jnp
dec
inc
cmp
cwtl
int
bound
dec
sar
mov
adc
scas
stc
das
pop
sbb
add
push
mov
dec
cmc
lods
mov
xchg
push
pop
cltd
inc
xchg
mov
not
pop
lcall
aad
fistpll
jecxz
pop
add
inc
aas
and
js
sti
push
lret
lahf
lret
pusha
cmp
mov
jmp
pushf
pusha
aad
out
cmp
nop
ret
sbb
repz
les
jmp
jl
push
shrl
ret
jae
xchg
lret
xchg
and
arpl
pusha
out
jecxz
mov
rcll
outsl
out
jae
ret
repnz
add
popl
subb
xor
or
ss
cs
std
outsl
in
inc
xchg
push
mov
scas
adc
fcompl
mov
fisubrs
rclb
test
out
inc
mov
lea
and
aad
inc
xlat
lret
pop
fwait
xchg
data16
jmp
shll
std
mov
dec
ror
adc
loop
adc
fisubs
lds
sbb
add
mov
mov
test
insb
mov
shl
inc
fsubrs
out
sbbb
mov
sahf
and
jo
ret
hlt
out
loope
jecxz
add
mov
test
aaa
test
mull
pop
jl
or
mov
lea
sbb
out
add
cmc
inc
ror
sub
dec
jle
or
jg
negl
lahf
mov
stos
sbb
sbb
jb
icebp
mov
jg
jae
sarb
addb
mov
sub
hlt
std
ret
das
test
cmp
cmpsl
jae
cmpsl
in
ret
push
jo
jp
sti
jecxz
xchg
pop
sbb
clc
dec
out
inc
push
lods
nop
jge
scas
mov
mov
push
push
pop
mov
arpl
cs
dec
lds
into
sahf
test
mov
aad
pop
je
repz
push
in
into
aaa
movsb
sbb
mov
jg
xchg
int
jb
fisttpl
push
mov
mov
scas
ss
xchg
dec
paddsw
adcb
xchg
xchg
dec
push
adc
pop
scas
dec
test
jle
popa
sbb
loope
push
jecxz
int
cmp
mov
imul
ds
fmuls
jnp
mov
pop
ss
jmp
outsl
mov
pop
insb
sub
push
push
ss
xchg
xchg
xchg
dec
xor
xlat
jecxz
inc
add
xor
add
mov
fcoml
ret
enter
and
push
rcrb
pushf
mov
adc
mov
pushf
test
or
inc
jp
insb
xchg
sbb
pop
shr
jnp
sbb
or
sbb
jp
repz
roll
div
mov
daa
xor
in
or
repz
cli
jecxz
aam
cmc
ja
andl
xlat
rcll
adc
std
cmc
push
or
in
movsb
inc
loope
insb
inc
lret
movsl
mov
fstps
daa
jb
adc
lret
loopne
mov
fldt
pop
push
mov
and
ja
push
hlt
lds
xchg
jecxz
pop
repnz
dec
test
lock
add
fwait
inc
jne
mov
sub
or
aas
xor
out
jb
and
jne
sub
ds
loope
idivb
pop
lahf
mov
or
popa
cmp
stos
stos
mov
aas
lock
shlb
xchg
mov
mov
push
pop
jp
inc
lahf
fwait
mov
in
inc
cmp
loop
notl
mov
fildl
and
lahf
dec
mov
lret
aas
test
dec
cmp
call
test
push
or
addr16
lea
sub
lret
add
sahf
adc
into
jo
mov
stos
add
mov
fs
pop
adc
shr
imul
and
pop
and
or
daa
aam
mov
loop
and
xchg
pop
test
inc
stos
adc
sbb
les
mov
jbe
xchg
cmc
pop
imul
rorb
aad
cli
xorb
das
sub
pusha
mov
je,pn
mov
sbb
sbb
adc
xchg
aas
arpl
pop
add
jle
sbb
push
imul
jns
dec
movsl
imul
lea
or
movsb
mov
movb
out
lock
cmp
jae
adc
pop
mov
adc
ljmp
imul
sti
scas
sub
jae
xchg
lret
lcall
imul
hlt
outsb
dec
test
xor
jns
pop
or
or
lret
mov
outsb
jns
xor
lds
mov
sub
out
xchg
dec
jno
rcrb
inc
ljmp
pop
out
sbb
xor
clc
inc
pop
xchg
mov
lock
jae
xchg
pop
lods
mov
in
push
push
ja
mov
mov
xchg
mov
lea
loope
sub
push
add
cmpsb
push
inc
test
out
roll
mov
mov
rorl
sahf
jae
push
pop
rolb
out
addl
scas
or
pop
add
cmp
jbe,pn
push
nop
loopne
xor
outsl
jae
mov
adc
neg
jbe
add
jl
out
push
and
inc
insb
jns
and
mov
mov
dec
and
test
aas
sub
jne
pop
mov
jno
in
pop
or
mov
push
fxch
shll
sub
cmpsb
jge
lcall
int3
push
or
stos
push
add
lret
jmp
jb
mov
shrl
and
ss
js
scas
dec
push
sub
test
rcrl
in
add
push
cs
jp
scas
repz
inc
loopne
ljmp
fsubrs
jecxz
stos
repnz
cs
cmc
adc
idivl
mov
scas
fbld
in
mov
sub
dec
lahf
xchg
jmp
pushl
push
jnp
cli
xlat
cs
lods
mov
cmpsl
add
shl
movsl
jnp
xchg
imul
sub
dec
and
dec
cs
ljmp
mov
xor
fidivrs
fildl
push
xor
xchg
mov
xor
dec
loope
or
inc
dec
out
xchg
inc
gs
jg
sbb
rorb
in
in
pop
xchg
addr16
sbb
and
mov
cltd
lret
xor
pop
movsl
loope
push
add
push
loopne
jle
dec
in
arpl
out
adc
sub
adc
mov
fst
imul
scas
mov
or
cmc
xor
pop
add
mov
fcoms
mov
shlb
mov
icebp
cmc
jmp
mov
jl
lea
out
loop
adcl
movsb
jle
cld
sbb
sbb
xchg
cmp
aad
cli
sub
jl
adc
sarb
scas
lds
jae
jmp
popa
xchg
out
imul
hlt
push
adc
and
xor
int
stc
jge
or
push
adcl
repz
hlt
xor
jp
daa
in
mov
cmp
lahf
xor
mov
cmpsb
ret
cmp
test
mov
jbe
outsl
lea
push
adc
addr16
mov
cmc
ret
xchg
pop
in
cmp
push
incl
cli
es
mov
push
fwait
cld
mov
mov
cld
shlb
gs
pop
pop
dec
push
pop
int3
leave
jne
fsubr
imul
aas
lahf
leave
xlat
call
call
sbb
xor
mov
push
push
push
repnz
scas
xor
sar
push
mov
test
push
jne
lods
sub
call
mov
pop
sub
aam
mov
lret
pop
xchg
or
pop
ljmp
inc
mov
in
in
addl
mov
les
jo
loope
repnz
hlt
loopne
fsubl
stos
push
jns
xor
enter
jb
xlat
xor
add
push
jp
jg
int3
or
int3
aaa
mov
cmp
mov
fcomp
ljmp
mov
cmp
mov
fisubrl
cli
test
cmp
aas
pop
mov
mov
insb
sbb
outsb
xor
test
cs
xlat
or
pminub
es
inc
pusha
stos
mov
adc
push
shrd
ds
jge
popf
testb
push
jbe
stos
pop
mov
add
pop
sbb
call
or
popa
loop
adc
imul
cmp
enter
sbb
in
mov
jg
jae
mov
inc
jg
lea
sti
pop
inc
xor
pop
xor
add
mov
clc
add
or
idivb
dec
ret
inc
stos
pusha
xor
fisubl
mov
sbb
sahf
mov
pop
pusha
mov
xor
fldl
push
stc
in
adcl
add
loope
imul
insb
ja
ret
mov
xchg
pop
adc
in
xor
andb
in
cmpsb
shll
or
das
inc
and
sub
ret
sub
shrb
sbb
cmp
add
loop
fimuls
dec
movsl
sbb
jb
xchg
in
mov
nop
std
movsb
repnz
mov
imul
adc
leave
scas
push
jae
xor
insb
js
in
neg
mov
add
sti
push
negb
mov
xor
fwait
xor
sar
stos
cmp
adc
mov
mov
and
adc
mov
lods
insb
insb
in
xor
outsb
mov
ljmp
mov
cld
dec
insb
jg
aaa
clc
xchg
lahf
loopne
cmp
imul
jnp
ja
test
dec
fucomip
push
scas
add
jb
or
adc
add
stos
arpl
jg
mov
lret
rorb
jecxz
lods
dec
and
shufps
dec
fwait
lcall
dec
call
test
in
push
sub
ljmp
xor
pop
cld
or
clc
xchg
add
push
jae
lret
addr16
sbb
mov
pushf
push
inc
lods
pop
add
negb
pop
das
mov
orb
lcall
dec
pop
fnsave
inc
sbbl
and
scas
jp
jnp
push
paddd
shr
or
pop
mov
adc
mov
mov
cltd
filds
jmp
pushf
xor
test
sub
pop
mov
jbe
lock
add
mov
fstps
mov
jns
inc
leave
sahf
mov
scas
imul
push
jmp
insl
pusha
mov
or
adc
lods
adc
and
pop
out
mov
xor
xchg
mov
or
xchg
std
push
or
sbb
xchg
filds
xchg
and
movsl
adc
outsl
adc
sbb
jnp
das
in
mov
movsl
or
adc
out
sub
out
mov
sbb
decb
ret
sbb
mov
aam
fcmovne
mov
addr16
push
sub
sub
sbb
xchg
mov
pusha
or
jle
xchg
lods
or
jecxz
enter
xchg
inc
shll
fwait
popa
xchg
addr16
mov
mov
dec
ss
mov
push
je
stos
jg
pop
push
fnstenv
cli
gs
push
cmp
repnz
pop
scas
or
pop
xchg
imul
inc
loope
jle
pushf
jge
test
xchg
lret
test
lods
flds
out
outsb
fneni(8087
inc
insb
out
sub
dec
stos
xchg
jb
mov
leave
sar
and
sbb
cli
data16
sbb
cmc
push
xchg
pop
mov
fsts
add
or
mov
test
adc
dec
adc
mov
jge
cltd
add
faddl
lds
lds
mov
inc
fcoms
sbb
stos
ja
movb
aaa
adc
mov
pop
int
imul
push
inc
dec
fadd
mov
cli
jp
std
popa
cmp
cmpsb
pop
imul
mov
cs
xor
bswap
xor
popaw
imul
cwtl
sub
movsb
jg
sub
loopne
adcb
pushf
das
flds
sahf
popf
arpl
ss
js
jmp
nop
push
pop
pop
cmc
les
fs
mov
sbb
jmp
aam
cmp
pop
daa
xchg
cmp
lock
push
xor
std
cmpsl
push
scas
leave
mov
add
mov
push
aas
mov
iret
or
loopne
je
mov
fidivs
mov
mov
mov
scas
mov
jmp
insb
arpl
pop
fldl
add
push
or
push
jl
jp
ret
push
scas
out
int3
imul
cli
xor
dec
sti
jmp
daa
int3
in
sub
subl
lods
and
pop
lods
mov
mov
adc
sbb
les
divb
movsl
std
sub
cli
faddl
inc
popa
or
pop
xlat
arpl
fstpl
mov
cwtl
mov
pop
mov
mov
int
mov
mov
xor
test
pop
or
dec
loopne
out
ficoml
out
mov
lods
add
adc
sub
call
xor
test
mov
fwait
loopne
push
rcll
cmp
or
lods
adc
and
das
imul
mov
lods
test
repz
adc
jp
mov
popa
mov
lcall
aad
xchg
lea
das
pop
and
push
sbb
push
rcrb
pop
cmc
aaa
push
es
cli
pop
and
pop
ret
mov
int
cmp
and
popf
nop
movsb
mov
fisubs
pop
adc
call
pop
orl
js
andb
inc
push
xor
daa
fisubs
sti
daa
out
cli
mov
xor
out
sbb
lret
cmp
incb
orl
pusha
mov
inc
fdiv
inc
and
aas
jl
pop
call
dec
dec
pop
push
mov
push
cmp
inc
mov
push
lds
xor
les
adc
fwait
fsub
jno
lea
std
mov
rolb
and
mov
out
faddl
out
leave
shlb
cmp
push
je
daa
rclb
movsl
dec
into
jp
xlat
sbb
jne
aaa
stc
add
mov
rolb
les
call
mov
orl
pop
adc
pop
adc
sbb
scas
adc
push
adc
push
fdivrl
sub
mov
idivb
in
pop
cmp
fcmovu
cmp
add
add
outsl
cmp
mov
movsb
mov
gs
and
fsubrl
xchg
imul
jp
jb
shll
pop
lret
sbb
pushf
prefetchwt1
mov
inc
sub
cli
or
sbb
xchg
mov
cli
push
add
xor
push
pop
popf
lods
sbb
clc
cli
in
pop
cmpsb
mov
jo
inc
fiaddl
push
out
pop
xor
aam
sub
xchg
cmp
out
cld
adc
repz
mov
insb
and
mov
aaa
scas
aaa
idivl
push
ljmp
add
cmp
xchg
in
test
pop
pop
push
ret
sub
ja
or
jo
inc
mov
std
test
loop
das
add
sub
jae
aad
xchg
mov
bound
pop
jnp
jne
mov
sbb
insl
xchg
cmc
jns
nop
ret
fists
lret
into
jno
lret
mov
pop
inc
or
ret
pop
xchg
jnp
rcll
mov
mov
or
jp
dec
adc
and
dec
das
pushf
mov
cwtl
cmpl
jbe
jae
sub
scas
arpl
mov
aad
and
xor
sub
mov
outsl
fcomp
lods
xchg
mov
mov
inc
inc
sar
je
cmc
pop
cmpb
dec
in
mov
xchg
dec
mov
loop
cs
movsb
push
push
enter
mov
dec
cmp
xchg
or
inc
js
inc
rorl
scas
out
inc
xor
cld
inc
mov
xlat
push
xlat
cmpl
mov
jg
sbb
inc
cwtl
imul
out
adc
negl
aaa
ss
enter
sub
stos
lret
cmp
call
xchg
fidivrs
adc
or
mul
adc
mov
daa
mov
push
or
pop
pop
push
pop
pop
stc
in
mov
lods
mov
push
xor
cwtl
mov
inc
bound
push
ror
mov
mov
cmp
mov
pop
enter
incl
sub
mov
popf
jbe
iret
push
adcl
jae
lea
divb
push
push
and
fsubrl
movsb
mov
je
in
pop
iret
aas
testl
dec
push
out
cltd
mov
fsubl
cwtl
add
adc
popf
mov
dec
xor
jg
in
and
mov
or
xor
and
xor
insb
xlat
pop
cwtl
daa
jnp
shl
leave
or
inc
adc
cmp
inc
or
push
jge
xchg
call
lcall
gs
cmp
dec
inc
insb
jmp
sahf
or
dec
mov
lcall
or
mov
icebp
paddq
ja
out
lea
sbb
add
in
inc
mov
or
imul
in
xchg
push
hlt
fildl
xchg
dec
rcrl
mov
hlt
cmp
jne
rorl
in
cli
call
mov
adc
xor
push
lret
jecxz
dec
add
cmp
dec
adc
jmp
cli
ret
into
cmp
loopne
mov
and
cmc
dec
flds
pop
stos
jecxz
ds
les
pushf
pusha
sbb
xchg
jle
cli
and
mov
push
rsqrtps
inc
pop
arpl
jge
cltd
cmc
sbb
xchg
mov
mov
xor
cltd
dec
lods
xchg
xlat
and
lds
adc
mov
mov
and
fdivp
mov
jp
and
inc
lds
daa
cmp
jg
aas
out
aam
sub
mov
or
push
dec
imul
int
into
bound
pusha
sbb
sub
das
jecxz
push
test
out
call
frstor
sti
sbb
mov
cltd
addl
inc
mov
fisttpl
aam
or
sub
xor
cmp
shrb
and
xor
mov
push
leave
dec
popa
mov
fimuls
jmp
or
xor
sub
leave
out
shll
dec
pop
cmp
ljmp
imul
pop
or
lret
mov
and
and
insb
andb
adcl
inc
stc
xchg
imul
push
add
mov
cmpsb
je
fcmovnu
lods
pop
add
xchg
pushf
push
xlat
cli
jp
jle
dec
stc
cmpsb
rorb
lock
and
ret
xor
jb
ds
movsb
and
xchg
jno
fs
jmp
xchg
rclb
jbe
push
pushf
sahf
xchg
mov
push
arpl
imul
cmp
repnz
fldt
and
aas
pop
jp
out
mov
push
cmp
sub
cmc
dec
push
mov
incl
aad
mov
sub
dec
cmpb
popa
aam
test
ret
xlat
mov
cmpsb
push
xchg
decl
sarb
lods
scas
rcrl
cwtl
cmp
repz
daa
repz
cltd
xchg
push
cli
cmp
ret
repnz
push
adc
inc
out
jb
test
dec
mov
add
jge
cs
mov
dec
push
dec
gs
mov
stc
cmpsl
add
cmc
pop
or
mov
repnz
jnp
cmp
les
out
data16
mov
push
imull
add
ret
ret
movq
shr
dec
adc
push
bound
daa
scas
jns
inc
and
lods
add
test
push
ja
fiadds
sti
int
dec
fidivl
cmp
gs
test
mov
add
xor
or
mov
mov
daa
es
imul
test
xchg
add
add
jbe
int3
aaa
movsl
cmpsw
pushw
mov
or
sbb
xchg
add
les
push
rcrl
test
mov
add
jno
popa
enter
sub
sbb
dec
rcrl
test
mov
add
jno
popa
enter
sub
sbb
dec
rcrl
and
cwtl
add
jno
popa
enter
cmp
mov
push
push
fadd
test
inc
mov
adc
sahf
aaa
scas
daa
mov
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
scas
xchg
mov
mov
stos
mov
aas
add
xor
and
jg
dec
jno
popa
scas
xchg
mov
mov
iret
icebp
das
adc
add
pop
and
jg
dec
jno
popa
scas
xchg
mov
mov
iret
icebp
das
das
aas
pop
jl
xor
pop
add
out
mov
dec
scas
pop
incl
inc
repnz
in
or
dec
jbe
push
outsl
cltd
ret
test
cltd
add
jp
adc
sub
std
sub
fldcw
and
jno
popf
push
test
inc
inc
pop
int
xchg
dec
mov
xor
rcll
lock
loope
push
divb
mov
cmp
push
mov
shr
shll
sbb
adc
iret
cmp
xchg
add
adc
pop
inc
push
or
jge
cmpsl
pop
push
shl
ds
push
fidivs
pop
int
adc
cltd
jge
scas
jo
xor
xchg
mov
aam
sbb
ret
push
fs
push
adc
xor
jle
dec
fs
popa
icebp
xchg
mov
mov
iret
icebp
das
adc
add
xor
and
jg
dec
jno
daa
jmp
idiv
out
mov
sahf
xchg
outsb
jge
push
or
cmp
repz
ror
lret
fbstp
xchg
out
iret
sahf
dec
push
cmp
dec
or
sub
cmp
rcr
out
sahf
aad
mov
das
adc
add
xor
and
jg
dec
jno
popa
scas
xchg
mov
mov
iret
icebp
das
adc
add
xor
and
jg
dec
jno
popa
scas
xchg
sbb
adc
xlat
jbe
rcrb
push
addr16
into
adc
sbb
ds
jb
adc
xchg
xorb
xor
pop
faddl
sti
loop
sub
or
add
out
shr
stos
jmp
mov
xor
popa
jb
out
xchg
inc
xchg
or
arpl
dec
insb
push
mov
neg
xchg
scas
and
aad
sti
stos
int
jne
sbb
mov
das
xchg
pop
cmpsl
or
lea
xchg
ret
inc
mov
aad
xlat
jbe
push
je
in
jg
into
es
jnp
sbb
inc
pop
gs
int3
dec
int
dec
bnd
gs
sub
fistpl
xor
xor
jmp
outsb
in
rcrl
mov
mov
xchg
mov
inc
jmp
lcall
sbb
lahf
stc
pop
incb
xchg
ja
in
or
and
mov
out
push
cli
loopne
push
out
jecxz
add
fsubl
lcall
xor
jne
push
mov
mov
mov
inc
add
fdivr
ljmp
cltd
cmp
add
jno
call
lea
scas
sbb
mov
add
mov
add
pop
punpckldq
dec
add
or
shll
mov
push
fs
lods
and
in
lahf
mov
in
jecxz
cmp
pop
rcrb
mov
sbbb
dec
add
popa
and
setge
mov
jecxz
out
push
inc
fcmovne
pop
leave
iret
in
call
mov
jg
xchg
aas
mov
repnz
inc
pop
das
js
jg
es
je
cs
mov
insl
push
cld
fwait
add
mov
fadds
xor
dec
pop
mov
or
cmp
cmpsl
or
out
mov
outsb
aad
or
push
push
in
pushf
mov
pop
popa
aas
stos
imul
cld
sub
lds
shl
lock
mov
rcrb
and
int3
lock
in
push
aaa
jo
stos
outsb
adc
rcll
pop
sbb
stos
dec
jecxz
inc
add
sbb
in
pop
bound
sub
cmp
xor
ret
push
fstps
xor
or
das
enter
mov
int
lock
pop
mov
inc
int
inc
imul
fsubrl
pop
movsl
or
lret
inc
mov
lcall
adc
dec
shl
js
pushf
cltd
outsl
lahf
cmpl
dec
inc
inc
add
rcll
sub
test
fcomps
xchg
and
mov
adc
and
inc
sub
into
jmp
dec
rcrb
das
and
dec
loopne
mov
roll
out
aad
jl
dec
popf
mov
jne
push
or
popf
sbb
aad
and
fildl
mov
sbb
xor
mov
cmp
jnp
mov
xchg
rolb
dec
mov
nop
xchg
sub
inc
and
mov
push
in
out
test
xor
dec
cmp
sbb
jns
std
fsts
push
into
into
cwtl
and
dec
sbb
in
sbb
xchg
insb
add
xchg
inc
clc
inc
push
xchg
dec
xchg
js
add
scas
nop
mov
jno
inc
lret
mov
movb
adc
stos
jmp
adc
ret
cwtl
xor
pop
test
or
ficoms
mov
and
sbb
fdivr
test
inc
fs
xchg
mov
dec
mov
dec
mov
stos
jmp
xchg
inc
xchg
sub
test
ret
loopne
and
push
sti
insl
repnz
ret
jae
call
in
cmpsl
leave
dec
sub
inc
mov
bound
loopne
imul
mov
add
push
cmp
dec
aad
mov
or
xor
add
mov
es
add
mov
push
in
or
pop
xlat
lcall
dec
xor
idivb
pop
cmp
nop
incb
push
mov
loope
lods
aas
cs
sbb
ljmp
dec
jmp
pop
jnp
aaa
jl
iret
push
add
shll
mov
mov
mov
cli
ret
sbb
je
out
add
lds
std
ja
xchg
and
into
mov
aas
ds
dec
or
in
push
repz
adc
mov
rcrb
inc
in
insl
sub
xor
vmwrite
fstps
cltd
ds
push
xor
test
push
sbb
jns
std
data16
leave
cld
xchg
mov
cmpsl
jp
cmp
dec
loopne
mov
ret
mov
cmp
ss
out
ret
or
xor
inc
aas
mov
push
adc
sbb
lea
add
aad
lods
mov
push
rcl
mov
dec
xor
dec
cmpl
mov
cmp
add
lahf
subl
pop
cmp
jbe
aam
mov
fucomp
xor
test
stc
dec
lods
pop
out
insl
cmc
lret
or
push
sbb
ret
dec
inc
testb
pop
test
mov
sbb
add
pop
aas
sahf
sbb
cs
cmc
adc
out
repz
sub
xor
push
cwtl
mov
jnp
add
dec
fidivl
mov
repz
je
mov
or
shlb
add
lods
push
and
mov
lahf
ja
sub
test
cmp
js
xchg
sbb
icebp
push
dec
jmp
decl
inc
sbb
fld
stc
mov
xchg
jp
pop
das
xor
sub
imul
add
das
outsl
jmp
pop
lcall
aad
push
jle
mov
rcrl
push
xorb
ljmp
inc
pop
fs
inc
and
push
ja
insl
mov
into
or
adc
testl
cmp
mov
lods
sub
les
push
mov
in
xchg
test
pop
dec
int
dec
pushf
push
cmp
out
dec
adc
push
leave
sbb
mov
loop
ljmp
jp
or
mov
inc
or
sarl
or
or
mov
aam
cmpsb
movsl
push
mov
gs
je
mov
jmp
jp
fmuls
sarl
fwait
out
pop
sub
jmp
lds
and
jno
adc
fdiv
aad
mov
add
lods
jb
or
sahf
pop
add
jmp
cltd
push
xlat
gs
push
push
pop
incb
pop
mov
jle
aaa
scas
add
pop
mov
sbb
mov
mov
pop
mov
test
jbe
jae
or
jle
push
in
rcll
push
mov
push
jmp
push
or
int
dec
ret
js
xchg
fs
jp
xor
test
icebp
subb
stos
adc
les
testl
insl
dec
push
fwait
imul
pop
add
mov
xchg
mov
push
daa
mov
sahf
es
sti
dec
imulb
fcoms
mov
movsb
xor
push
aas
bound
fstpl
push
mov
cmpsl
dec
mov
sub
inc
and
in
fst
jle
cmp
sub
mov
pop
xchg
sub
jp
pop
xchg
pop
sub
xor
ljmp
cld
fwait
test
mov
jne
addr16
mov
mov
pop
xchg
pusha
sbb
into
xor
cmpsl
scas
pop
cmpsb
add
daa
stos
movsb
into
std
in
xor
aam
add
or
mov
test
lds
fidivrl
jbe
js
sbb
mov
iret
or
pop
test
data16
push
mov
xor
sub
stos
out
sub
mov
enter
mov
and
mov
loope
repz
outsl
inc
sbb
mov
fisttpll
fisubl
push
sti
ret
inc
std
fwait
outsl
sub
scas
add
bound
cmp
outsl
push
in
stc
outsb
xlat
and
jle
or
push
repnz
xchg
aas
push
stc
xor
xlat
or
and
lea
xchg
lret
stos
daa
lods
or
mov
dec
jmp
xorl
es
add
loop
test
shll
insb
stos
cwtl
mov
mov
cli
loopne
repz
das
out
in
call
xchg
scas
dec
jg
bsr
dec
sub
stc
xchg
pop
push
jg
ficoml
ljmp
xchg
in
nop
outsb
xchg
xchg
jns
test
push
sub
cmc
and
lock
pop
push
bound
pop
pop
push
push
jno
xchg
jg
into
mov
push
cmp
enter
mov
pushf
mov
xor
mov
insb
add
ss
sub
hlt
mov
push
push
out
loope
cmp
leave
or
bound
pause
testb
pop
rcll
test
fldt
add
or
mov
add
orl
lcall
lret
test
mov
jo
imul
jp
dec
or
dec
aad
movsb
mov
imul
inc
cmc
mov
adc
mov
sbb
aas
fiadds
out
jmp
pop
and
sbb
push
stos
adc
outsb
cmp
dec
mov
inc
pop
mov
jns
popf
ror
es
testb
add
lea
push
movl
in
xor
xchg
sti
push
sub
cmc
jl
movsb
add
and
sub
jmp
fwait
inc
jb
push
ja
jecxz
mov
aas
xchg
ss
popa
loope
add
rep
aas
pop
arpl
pop
dec
enter
jecxz
mov
testb
jp
adc
pusha
test
cmp
arpl
push
fcoml
jl
jno
out
out
stc
data16
sbb
add
std
shrb
outsb
xchg
loop
shlb
push
dec
pop
mov
sub
out
fnsave
pop
push
push
xor
into
loop
pop
lods
stos
xor
dec
cltd
popf
aas
push
and
in
lods
cmpl
xor
pop
pop
pop
sbbb
mov
cld
dec
xchg
popf
or
outsb
test
je
popa
dec
dec
cli
pop
loopne
or
andb
cmp
pop
daa
mov
bnd
mov
jb
in
cmp
into
push
and
fcompl
sub
mov
jmp
push
mov
fwait
push
daa
testb
sub
pop
or
into
pushf
xchg
push
sbb
inc
push
push
adc
sarl
inc
dec
push
jno
ja
rcll
and
dec
roll
dec
in
and
and
and
mov
fcomps
in
dec
out
mov
mov
push
and
loopne
ds
adc
mov
pop
andl
push
jns
jb
push
leave
iret
push
call
sub
sbb
sbb
fmuls
push
jp
jb
call
dec
gs
mov
insl
lahf
pop
pop
test
dec
stos
dec
iret
neg
xchg
pusha
push
and
mulb
movsl
dec
cmp
jmp
push
and
ja
stc
lock
sbb
jg
incb
push
dec
dec
inc
js
dec
push
sbb
push
sub
dec
mov
shlb
out
mov
xchg
lods
scas
pop
sub
push
or
loopne
mov
mov
das
daa
add
mov
jbe
pusha
xor
and
sub
and
sub
lea
div
ljmp
and
dec
jecxz
sub
adc
xor
pop
sbb
xor
push
test
sub
cmp
sbb
xchg
stos
rol
rcrl
imul
and
out
xor
mov
or
loopne,pt
es
testl
push
loopne
in
mov
ucomiss
jecxz
mov
sbb
push
inc
mov
addb
mov
xchg
or
and
into
int
dec
adc
xchg
pop
mov
lock
xorb
dec
sbb
adc
aam
jne
jle
mov
dec
adc
leave
push
mov
ljmp
cmpsl
or
sbb
jb
jp
call
iret
cmp
imul
mov
cwtl
dec
lahf
insb
mov
imul
add
shll
mov
mov
and
inc
aad
nop
dec
lea
jmp
es
push
frstor
mov
ficompl
add
or
or
mov
aam
shlb
jl
mov
out
push
mov
mov
pop
add
or
or
mov
sbb
xchg
lret
mov
roll
mov
dec
in
mov
dec
xchg
mov
ljmp
pusha
push
cmp
push
dec
enter
nop
imul
add
ss
and
int3
mov
int3
movsb
pushf
pop
imul
sahf
push
xchg
gs
in
jb
sbb
push
cmpsb
repz
dec
lods
push
ljmp
xorl
dec
out
xchg
std
scas
ds
loop
or
and
test
rsqrtps
ret
lods
or
sub
pop
shlb
cmovo
sbb
push
call
in
pop
jg
shll
jb
mov
test
pop
sbbb
and
push
push
test
outsb
arpl
and
sub
cmp
int3
vxorpd
sbb
fldt
fwait
dec
es
push
jbe
jge
sub
clc
movsb
lea
push
add
in
shll
aaa
mov
jp
push
inc
inc
mov
xchg
sub
adc
mov
loope
jg
fldenv
or
sub
dec
popf
cmp
push
in
mov
jns
or
xchg
rcll
leave
andb
mov
inc
in
inc
xor
add
stos
mov
sbb
das
testl
mov
mov
out
xchg
int3
pop
popf
lret
hlt
mov
in
lods
arpl
xchg
dec
scas
sahf
mov
out
out
insl
popf
lea
in
stos
adc
pop
ja
lea
lahf
fcoml
fisubs
mov
popa
inc
jns
adcb
sbb
insb
add
push
shlb
ja
scas
dec
mov
cmp
enter
cmp
add
mov
jb
lahf
inc
nop
sub
inc
jno
in
push
sbb
add
shll
aam
push
mov
dec
cmpsl
aas
daa
sti
mov
outsb
mov
push
mov
cmc
push
js
cs
push
cmpsb
inc
mov
stos
clc
sarl
rorl
loopne
adc
movl
int3
jecxz
cmp
dec
cwtl
daa
shr
flds
lret
jns
ja
push
jle
fldenv
xchg
add
push
mov
pop
push
shlb
adc
gs
jne
repnz
xchg
cmp
and
xchg
mov
call
test
sub
inc
leave
jecxz
insb
sbb
push
ds
push
cmp
lcall
hlt
les
cld
ret
mull
xor
leave
add
jecxz
or
aaa
imul
adc
mov
les
or
xchg
ja
or
repnz
dec
mov
ss
push
mov
adc
test
lahf
jecxz
xor
in
xchg
jne
inc
jno
dec
ficompl
iret
cmp
cmc
in
add
and
add
sbbb
inc
inc
mov
adc
adc
sub
aad
and
cwtl
test
lret
or
dec
popf
mov
and
xchg
cltd
xchg
mov
xchg
adc
mov
je
cld
mov
sbb
pop
test
dec
int3
shlb
inc
jae
dec
int3
fsubl
jne
adc
mov
xor
stos
push
aad
jnp
ret
cmp
scas
xchg
cmp
mov
or
sbb
test
test
pop
stc
adc
mov
mov
shrl
mov
xchg
insb
sub
mov
sub
lret
js
dec
movl
xchg
cmp
fnstcw
cs
movsl
jnp
pop
sbb
pop
in
call
jo
cmp
jnp
dec
iret
dec
jne
mov
pop
scas
pop
jg
push
and
addr16
lds
pop
cmp
or
repz
ljmp
add
sub
and
mov
scas
idivb
cwtl
cs
inc
fisttpl
jb
fbld
adc
jo
nop
mov
jnp
inc
mov
mov
dec
mov
sub
test
rorb
rorb
mov
xchg
addr16
nop
pop
cmpsl
cmpsb
mov
adc
lcall
mov
test
cli
icebp
lahf
mov
faddl
pop
lret
insb
push
jmp
inc
xchg
cmpsl
xlat
cmp
fs
push
in
ror
sub
pop
leave
test
repnz
adc
inc
mov
outsl
sahf
in
fildl
lret
add
mov
mov
sbb
negl
adc
jbe
and
adc
push
dec
loope
inc
mov
scas
xchg
mov
mov
add
cltd
test
push
in
push
add
stos
dec
sub
inc
xchg
sub
mov
and
sbb
subb
sub
xchg
jne
cmp
mov
cmp
push
jbe
sbb
pop
js
mov
pusha
xlat
inc
jmp
pop
cs
repnz
cld
sbb
test
add
mov
mov
out
jecxz,pn
nop
pop
cmp
sahf
js
fildl
pop
test
pop
and
pop
fdivrs
in
jns
xor
rcrb
jns
in
xor
sarb
adc
or
mov
inc
test
xchg
inc
xor
and
cmp
adc
stos
add
ja
insl
cmp
jmp
out
sarl
insb
mov
jne
jb
or
sub
ja
cmc
jmp
xchg
add
pop
push
mov
int
aaa
sub
out
aam
push
xchg
xchg
test
stc
jecxz
insb
mov
test
sub
repz
sti
or
outsl
es
cmp
pop
loope
fimuls
push
xchg
repz
lods
jp
xchg
push
mov
leave
xchg
push
fidivrl
pop
cmp
inc
aam
xchg
add
cltd
out
mov
hlt
das
cmovno
mov
fwait
lods
dec
push
dec
push
mov
push
mov
sbb
fimull
jb
test
dec
or
bound
inc
xchg
xor
push
lock
addr16
rcll
push
fsubs
jo
or
dec
jge
out
mov
add
ret
les
cmp
pop
fisubl
sti
jb
ret
or
push
scas
out
and
fcomip
std
fisttpll
sbb
loopne
inc
int3
test
jg
jl
cld
mov
idiv
and
lods
lods
mov
xor
xor
dec
dec
sbb
dec
push
pop
push
les
push
mov
adc
fdivrs
xchg
and
in
jnp
loop
push
in
add
out
cld
insb
in
sub
jns
imul
or
lcall
sub
adc
popf
or
jecxz
stos
enter
daa
ret
inc
xor
es
or
sub
enter
pop
bound
lds
xor
xor
ret
mov
movsb
sbb
out
mov
push
dec
rclb
testl
mov
mov
out
inc
popa
cmpsl
mov
dec
cmp
xor
and
scas
mov
decb
sub
sarl
aas
adc
cmp
or
push
sub
xor
movsl
out
mov
leave
xlat
in
lcall
lods
mov
out
jns
lret
popa
ljmp
out
xchg
imul
test
mov
push
hlt
xor
push
out
fwait
mov
into
popa
mov
fimuls
lcall
cltd
and
fcomps
add
and
sub
dec
jnp
sbb
jle
mov
cli
sub
and
les
mov
fidivrl
jnp
shr
push
loop
fimull
mov
stc
addr16
mov
and
cs
std
jmp
test
sub
xchg
xor
std
mov
out
mov
cmpl
push
ror
iret
push
jmp
fadds
dec
jo
inc
shll
test
insl
jo
mov
sbb
test
or
frstor
xchg
idivb
inc
popf
jbe
sub
or
cltd
mov
or
push
cltd
das
push
je
push
cmpl
pop
ficoml
jns
xor
outsl
or
inc
cli
and
adc
sahf
push
inc
cltd
loop
shll
aas
leave
inc
dec
stc
stos
xchg
jne
mov
pop
adcb
xchg
pop
aam
adcl
inc
iret
icebp
das
adc
add
xor
and
jg
dec
jno
popa
scas
xchg
mov
mov
iret
icebp
das
adc
add
xor
and
jg
dec
jno
popa
scas
xchg
mov
mov
iret
lock
das
adc
add
xor
and
jg
dec
jno
popa
scas
xchg
mov
movsl
out
sar
inc
iret
jno
push
das
out
aas
stos
movsl
xor
push
sbb
idivl
add
adc
and
xor
dec
out
ss
adc
jl
addb
mov
push
rcll
add
adc
and
xor
inc
xchg
popa
cmpsb
jno
addl
jbe
push
rclb
loope
icebp
ss
adc
and
xor
inc
xchg
popa
cmpsb
jno
sub
aam
roll
mov
jo
and
push
jne
jl
mov
fdivrs
repz
rcrl
cs
in
nop
out
push
fiadds
push
imul
addr16
sti
xchg
jae
cli
mov
mov
les
js
adc
addl
cs
aas
mov
xor
rolb
fyl2x
mov
loop
imulb
xchg
dec
jno
sbb
inc
cltd
dec
es
insb
shr
sbb
jp
push
es
sub
jno
popf
mov
xor
sub
cmp
push
fyl2x
mov
sbb
ficompl
push
xor
push
push
jbe
ja
adc
aaa
ret
and
xor
inc
xchg
popa
cmpsb
jno
addl
jbe
push
rcll
loope
icebp
pop
fs
ja
and
ds
push
call
hlt
and
push
hlt
xor
nop
test
ja
gs
out
test
sbb
and
xor
repz
faddl
mov
ss
mov
data16
adc
add
push
xchg
popa
cmpsb
jno
addl
jbe
push
rcll
loope
icebp
ss
adc
and
xor
inc
xchg
popa
cmpsb
jno
addl
jbe
push
rcll
loope
icebp
ss
jo
mov
dec
mov
jo
movsb
inc
or
cmc
loopne
fstl
push
gs
out
fwait
inc
xchg
mov
and
xchg
dec
cmp
je
mov
xor
push
into
mov
pop
lods
xor
mov
mov
xchg
sbb
orl
and
and
shl
mov
mov
cmpsl
sub
push
xor
repz
cli
imul
or
cld
ss
lret
jg
test
sar
out
shrl
in
inc
lea
cmp
jo
jge
or
sbb
testb
mov
movsb
loop
cld
sub
int
call
gs
sar
cmpsl
mov
xchg
out
push
cvtpi2ps
xchg
repz
push
sahf
call
jo
ffree
jmp
out
mov
fcomp
cmp
je
jg
push
rcl
fdivl
jl
inc
insb
rcll
sub
adc
subb
sti
inc
fiaddl
fs
cld
sarb
daa
stc
sub
popf
test
mov
iret
add
mov
test
int
stc
mov
shl
cmp
aas
push
cmc
and
sbb
sti
incb
jecxz
dec
adc
jmp
cmpb
int3
rcrb
dec
add
mov
add
mov
std
ss
shrl
xor
iret
int
nop
imul
xor
dec
in
and
sbb
ret
xchg
jae
aam
outsb
mov
shr
ret
push
mov
cld
iret
pop
das
imul
mov
jnp
ret
repnz
test
or
movl
data16
cmc
test
loopne
repz
adc
mov
movsl
mov
bound
cs
inc
out
jle
sbb
movsl
imul
and
call
cltd
lahf
jne
data16
xchg
sti
mov
mov
dec
sbb
cmc
lock
mov
adc
xorb
adc
push
push
mov
pop
mov
and
pop
pop
jne
pop
and
add
cmp
movsl
sbb
mov
pop
js
push
jle
test
filds
jns
popa
je
out
or
test
cmpsl
repnz
mov
clc
bound
cli
adc
inc
mov
pop
mov
call
loope
xchg
in
inc
es
lret
jle
movsl
fisttpll
push
test
jae
and
mov
push
sahf
dec
jo
aam
push
movsl
mov
mov
das
push
movsb
mov
mov
lods
hlt
adc
jo
imul
xchg
inc
mov
mov
sahf
jbe
adc
negl
cli
rorl
test
dec
std
jne
jl
jp
adc
xchg
es
ss
rolb
push
push
ja
mov
lahf
ficomps
shlb
push
paddsb
pop
arpl
jnp
jo
jge
shr
pop
pop
xchg
push
push
xor
dec
mov
test
movsb
sahf
sub
insb
cmp
jne
add
push
cmp
xor
das
mov
lcall
xorl
xor
and
jns
ret
aam
sub
cmp
js
rcr
in
mov
lea
std
push
inc
ds
fmulp
mov
or
rolb
pop
cmp
cmp
or
out
test
or
scas
xlat
adc
pop
outsl
sbb
pop
add
push
mov
xor
stos
mov
loopne
pop
cmp
orb
sub
add
movsb
outsb
mov
mov
daa
mov
cwtl
adc
mov
ja
stos
js
add
sub
inc
adc
mov
pop
push
aaa
and
cmpsl
dec
mov
setbe
out
fdiv
xchg
in
cmp
mul
test
or
lret
sbb
mov
fdivl
adc
jle
push
roll
test
cs
int3
mov
pop
xor
mov
mov
cmp
push
push
mov
shl
mov
sar
fwait
movsl
std
nop
mov
addr16
mov
sbb
mov
imul
dec
imul
adc
cmp
jno
test
ja
push
gs
lret
mov
sbb
dec
dec
into
or
fmuls
xor
fwait
or
dec
dec
jp
or
daa
push
js
or
aam
dec
xor
dec
sbb
in
push
push
sete
mulb
arpl
fmuls
pop
jl
jbe
fidivrl
push
lods
loope
xor
sub
push
pop
ficompl
test
pop
mov
ficompl
and
jo
repz
push
inc
mov
inc
sub
lds
shlb
shll
ret
in
lock
mov
stc
cmpsb
fcoml
xor
cmp
sti
dec
cmp
insb
bound
sbb
je
and
xor
lahf
mov
aad
scas
push
cmp
xchg
lcall
or
mov
ficoms
rcl
push
jmp
mov
pop
inc
insl
popf
jg
pop
cmp
cmpsb
push
mov
paddd
dec
leave
shr
inc
test
cmp
negl
data16
and
sub
jle
push
push
xchg
or
jge
inc
fucom
scas
pop
jge
inc
mov
loop
pop
push
addr16
insl
adc
lods
loop
shr
mov
imul
cmp
stos
fadd
push
inc
test
sbb
and
mov
or
ljmp
jmp
mov
inc
mov
pop
sbb
push
frstor
mov
pushf
pop
jmp
arpl
bound
stc
cmp
into
jo
jp
ss
inc
xor
xor
lock
push
outsl
pop
dec
test
mov
lcall
mov
lods
iret
das
jno
dec
or
insl
les
data16
jbe
lds
adc
add
jne
pop
sub
mov
into
sub
mov
mov
mov
adc
push
and
xor
mov
cmp
dec
pop
jnp
xchg
insb
lock
loopne
mov
jns
in
mov
in
mov
jnp
cmp
insl
or
xchg
adc
mov
and
pop
imul
xchg
adc
xchg
xor
pushf
jbe
pop
pmaxub
xchg
ret
cwtl
scas
push
xchg
andb
test
jnp
outsb
fisubl
and
pop
dec
xor
rorl
inc
push
scas
into
in
adcb
ds
xor
inc
cmpsl
cltd
test
fstpt
popa
jmp
sub
jmp
jno
mov
jl
mov
xor
cmp
mov
sub
fisttpll
cmp
popa
push
inc
cmc
shlb
xor
xchg
out
lahf
cmp
in
add
pop
in
loope
dec
adc
pop
inc
xlat
inc
dec
stc
insl
push
mov
lods
icebp
lea
loopne
dec
lea
push
and
movsl
sbb
aas
or
and
xor
xchg
outsb
out
loopne
enter
dec
mov
xchg
and
mov
loope
add
clc
cli
adc
jae
loopne
popa
push
fs
lock
arpl
subl
sbb
lea
pusha
xchg
cmp
xor
divb
pushf
pop
jnp
mov
cmp
es
cmp
inc
ss
mov
and
mov
push
cmpsb
lahf
push
mov
sti
test
push
in
ljmp
add
popa
aad
pop
lock
das
jbe
imul
data16
sar
mov
mov
inc
or
les
iret
insl
dec
adc
shrl
pushf
sbb
pushf
pop
subl
lcall
add
imul
dec
xchg
addl
mov
test
in
pop
and
and
test
sub
int3
in
jo
pop
mov
jno
shl
jno
mov
pop
in
popf
mov
xor
fimuls
iret
and
mov
outsb
loop
addr16
add
xchg
fwait
in
or
pop
push
lret
dec
or
sbb
jo
inc
xor
jns
push
imul
dec
and
mov
std
xchg
repnz
into
adc
fwait
adc
inc
cmp
in
jp
cmp
add
stos
enter
and
imul
add
push
lahf
jno
mov
movsb
mov
scas
xor
das
xchg
xchg
xchg
popa
xor
mov
xchg
movsb
jns
fimuls
js
and
push
stos
imul
add
cli
mov
in
and
or
push
mov
inc
xchg
inc
movsb
das
jmp
sbb
adc
pop
jmp
fstl
or
jl
fbld
mov
adc
inc
pushf
aas
pop
mov
std
fdivs
push
xchg
mov
push
outsl
cmp
jge
sbb
and
stos
pop
call
pop
adc
rcrb
xchg
jbe
jp
dec
shlb
pusha
int
mov
xor
lods
fnstcw
nop
push
fnstcw
xchg
jne
sub
adc
cmp
cld
jle
out
sub
les
lcall
test
dec
or
or
mov
sub
mov
pusha
aad
fisttps
push
ss
jge
xchg
pushl
push
add
sbb
sbb
repnz
push
cmp
jge
and
arpl
fiadds
imul
push
and
dec
inc
loop
fildll
dec
cmpsl
inc
xchg
add
sub
cmp
inc
addr16
aaa
adc
push
adc
inc
adc
imul
fs
add
xchg
push
and
scas
out
jne
in
push
jl
in
or
popf
aam
push
rclb
pushw
fdivl
das
and
xchg
rcrb
dec
mov
imul
loopne
xchg
jmp
ds
xchg
pop
out
sbb
loopne
xor
xchg
movsb
das
shlb
and
out
in
mov
pop
xchg
or
xor
imul
mov
xorl
inc
addl
xor
out
clc
cld
insb
adc
mov
add
or
sub
adc
and
in
mov
inc
jnp
xchg
jecxz
adcl
int3
lock
mov
mov
mov
les
or
adc
gs
lods
aam
in
mov
pushl
xor
mov
xchg
out
in
fs
ds
push
mov
xor
xor
mov
inc
pop
imul
fisubs
popa
push
rolb
add
pop
mov
dec
popl
cmc
cli
mov
fisttpll
sbb
adc
mov
push
repz
mov
pop
mov
inc
les
andb
mov
addr16
fld
mov
adc
mov
lahf
popf
lret
sub
and
adc
or
add
pushf
sub
cli
les
xchg
sbb
adc
xchg
loop
out
jmp
xchg
das
add
jne
stc
repz
jp
pop
or
mov
js
stc
add
mov
inc
out
ror
out
cld
xchg
data16
gs
cmp
ss
mov
test
cmpb
adc
addr16
ljmp
mov
pop
pop
and
imul
in
fs
cltd
inc
cmpsl
or
xchg
stos
mov
mov
push
or
mov
fsubrl
lret
xor
inc
popf
and
mov
shll
mov
add
dec
sbb
or
insb
fisttps
sub
mov
cmc
jno
xchg
push
movsl
sub
int
fcoms
leave
push
mov
scas
cmp
mov
das
inc
int
aas
in
jge
fadds
enter
lret
sub
add
adc
sub
xchg
loopne
sub
loope
dec
xlat
add
dec
push
adc
dec
inc
loope
jl
and
imul
loope
cmp
sti
cwtl
mov
faddl
stos
pop
repnz
xchg
push
pop
out
add
lods
das
jbe
push
loopne
mov
fnsave
cmp
xor
stos
mov
leave
xchg
sub
pop
push
fsts
and
divb
push
iret
int
dec
pop
gs
nop
mov
fsubl
sbb
mov
pusha
ret
das
lahf
lds
sbb
mov
sub
mov
mov
bound
mov
inc
xor
imul
addr16
push
mov
lea
mov
push
test
mov
iret
out
mov
sbb
imul
shr
mov
jae
loope
pop
mov
daa
iret
mov
jae
or
push
mov
repz
scas
mov
push
das
ret
mov
mov
sbb
icebp
add
xchg
mov
icebp
pop
pop
push
cmp
fisubrl
out
mov
nop
sub
out
mov
inc
mov
dec
aaa
pop
and
enter
and
push
add
add
inc
jle
jecxz
mov
jo
jne
scas
pop
cmp
sub
outsl
pop
push
bound
into
inc
insl
pshufw
hlt
sbb
lahf
mov
pop
cli
mov
mov
call
fs
shrl
stos
pop
insb
lahf
js
cmp
dec
adc
and
sub
iret
or
lcall
inc
leave
xchg
or
lret
add
call
adc
mov
mov
pop
sub
add
out
int
int
fimull
xchg
mov
pop
loop
mov
push
pop
fimuls
inc
jo
fucom
jne
test
and
test
lods
ja
jle
aaa
aaa
lea
and
dec
dec
ret
std
arpl
sbb
mov
cmpsl
scas
pop
jecxz
add
lods
std
mov
loope
mov
push
push
repnz
pop
cmpsl
data16
push
pop
sbb
mov
shll
stos
cmpsb
mov
enter
mov
jge
cmp
dec
mov
jb
adc
cmc
shl
jns
addl
cmpsb
sub
xchg
in
imul
adc
xchg
cmp
clc
push
add
and
in
xor
pop
fidivs
and
test
push
mov
out
xchg
pop
push
jne
dec
out
in
xchg
and
inc
adc
stos
iret
sub
mov
loopne
in
mov
and
dec
and
mov
mov
test
lock
jno
mov
push
mov
jmp
xor
mov
add
mov
lds
push
xchg
jge
jnp
fsubp
jne
mov
call
rcl
mov
dec
fcomps
sbb
jns
jecxz
cltd
imul
bound
mov
js
out
sar
scas
jp
and
pusha
push
ljmp
mov
xor
aaa
into
lcall
js
popf
mov
mov
mov
sbb
inc
mov
movhps
inc
popf
int3
add
mov
jg
dec
xchg
push
add
jle
rcr
iret
inc
cmpl
xchg
push
and
inc
xchg
mov
call
xchg
pop
ficomps
daa
mov
loopne
push
cli
and
add
cld
xlat
xchg
stos
mov
es
adc
shrl
int3
push
mov
repz
shlb
loopne
xor
adc
inc
ds
pop
loopne
sub
adc
leave
mov
cmp
fstpt
lds
jmp
inc
pop
add
fnstenv
adc
mov
data16
stc
push
pop
ja
add
and
das
pop
sbb
and
std
packssdw
leave
xchg
sbb
pop
pop
stos
outsl
leave
mov
jl
inc
dec
loop
adc
sbbl
into
adc
in
inc
clc
out
loope
out
or
jecxz
pop
dec
dec
push
or
movsb
stos
mov
mov
cmpsb
je
lret
pop
and
neg
push
mov
fcoms
adc
mov
sahf
jmp
xor
clc
pop
imul
mov
pop
fidivrl
cs
lock
scas
cmc
jno
fwait
sahf
push
mov
xorl
jecxz
hlt
divb
dec
mov
adc
cmc
outsl
mov
out
fstps
push
sbb
aas
push
test
pushf
int
sarl
jb
addb
lea
pop
testl
scas
test
or
jp
adc
test
adc
add
sbb
stc
nop
jnp
xor
dec
lahf
pusha
imulb
xchg
add
mov
mov
or
jle
shll
cmp
outsl
repz
aaa
jae
bound
insb
push
gs
sahf
sub
nop
lret
cmpsl
dec
add
pop
mov
jg
rcrl
int
inc
xchg
dec
shrb
inc
jo
sbbl
test
xchg
nop
imul
insb
aaa
inc
sbb
arpl
movsb
push
in
jnp
stos
xor
movsl
popa
sbb
xchg
iret
and
aaa
ljmp
dec
in
sahf
push
fimuls
push
ret
mov
cmpl
jl
sbb
xchg
xchg
lcall
dec
mov
daa
inc
insb
fsubrs
adc
fsts
inc
and
jle
or
xchg
jge
call
cmc
xchg
inc
dec
pop
fwait
stos
sub
add
rorb
add
xchg
add
fnstenv
pop
push
mov
leave
and
jb
das
and
inc
ja
jg
jmp
inc
sub
out
sahf
lret
pop
ds
pop
mov
add
popa
mov
mov
pushf
cmp
ret
jbe
lods
lahf
add
ja
mov
xchg
stos
outsb
cltd
insb
into
stos
fwait
push
push
adc
dec
dec
or
iret
or
pop
push
bnd
out
and
push
addr16
xchg
aam
into
das
insl
jmp
dec
aam
aam
jge
out
pop
leave
push
repz
call
mov
in
pusha
xchg
jno
in
cmp
cmp
aad
pop
xor
cmpsl
jl
mov
loop
adc
outsb
cmp
in
inc
mov
scas
mov
push
or
std
jne
fstpt
data16
ret
mov
jg
into
mov
orb
leave
mov
adc
pusha
xchg
jecxz
repz
aas
push
in
xchg
out
pop
addl
mov
imul
cmc
sbb
in
les
xchg
jns
pop
loope
les
jne
jne
pusha
fistl
popf
bound
cmc
mov
fs
stos
cmpsb
pushf
cmpb
pop
popa
or
arpl
and
stos
pop
push
lahf
jg
dec
cmp
add
mov
jns
xchg
push
or
ljmp
loopne
addb
dec
jmp
nop
ror
cmpsl
pop
fstl
jno
lock
adc
adc
std
xchg
jns
iret
dec
test
sbb
imulb
xchg
or
jg
clc
jmp
repz
push
mov
jnp
adcl
les
rol
mov
popa
out
loop
mov
mov
sti
push
rcrb
lods
push
es
inc
scas
xchg
ss
jl
cmp
out
mov
shrl
jg
mov
cmpsl
add
cmp
cmc
loope
xchg
lret
xchg
inc
jmp
insb
js
add
dec
mov
rcr
push
push
pushf
and
xor
xor
rolb
dec
sub
fcom
sbb
data16
les
int
pop
pop
aad
outsb
xor
mov
cwtl
mov
cmpsb
shrb
adc
dec
enter
mov
daa
pop
push
mov
insl
in
bound
xchg
pop
fisubl
out
inc
pop
and
mov
sbb
jnp
jne
inc
imul
shl
jo
cmpsl
dec
rorl
mov
push
sbb
sti
clc
inc
pop
pop
mov
mov
mov
lock
lods
mov
ja
cmp
movsl
in
or
cmpb
orl
push
or
cmpsb
or
push
ds
xor
int3
jp
pop
mov
inc
clc
jle
aam
sub
dec
push
xchg
lret
inc
scas
inc
outsl
aam
fnsave
lods
add
jge
pop
dec
rorb
inc
mov
jo
popf
sub
loope
sub
pop
lods
bound
ret
push
mov
xlat
mov
mov
fists
les
cmp
fsubrl
sub
mov
ret
jno
xchg
push
sbb
repnz
out
dec
dec
pop
outsl
mov
add
jns
and
sbb
dec
inc
fwait
imul
fstpl
xchg
mov
fwait
ret
xor
test
xor
je
cmp
ja
lods
dec
cmp
push
insl
mov
ret
cmpsl
xchg
jbe
fcoms
test
xchg
pop
stos
sti
mov
cmp
cmpl
lea
dec
push
sub
ret
mov
adc
imul
stos
cmpsb
xchg
mov
gs
mov
addr16
xlat
aas
mov
test
add
int3
inc
jne
adc
inc
and
dec
jl
orb
jnp
mov
pop
in
mov
and
imul
and
daa
and
mov
xchg
push
out
testb
xchg
popa
cmpsb
jno
addl
jbe
push
rcll
loope
icebp
ss
adc
and
xor
inc
xchg
popa
cmpsb
jno
addl
jbe
push
rcll
loope
icebp
ss
adc
xor
inc
xchg
popa
cmpsb
jno
add
push
mov
push
rcll
loopne
icebp
ss
adc
and
xor
inc
xchg
loope
icebp
mov
inc
outsb
cld
or
add
leave
es
ss
xchg
xchg
stos
movb
mov
daa
mov
xchg
xchg
adc
push
push
cmpsl
ss
xchg
xchg
out
testl
mov
xchg
xchg
pop
es
cmpsl
movb
es
push
mov
jbe
inc
fists
cmpsb
les
pop
out
cltd
sbb
cmpsl
push
fiadds
repz
scas
or
cs
pop
scas
push
lods
jns
lsl
mov
mov
mov
imul
stos
pop
pop
cmpsl
xor
jns
imul
xchg
inc
pop
sbb
xor
fsubs
in
mov
test
mov
push
xchg
mov
mov
mov
ss
xchg
cmpsl
inc
arpl
ret
lahf
push
sub
ja
enter
call
inc
int
cmp
out
jmp
or
xchg
adc
dec
stos
loopne
add
pop
mov
or
xchg
inc
xlat
test
test
push
lds
test
lret
std
push
pop
icebp
es
and
mov
add
cmpsl
mov
out
testl
mov
xchg
xchg
push
out
mulb
inc
xor
inc
mov
xchg
data16
cltd
and
rorl
push
out
js
or
and
inc
nop
cmp
push
mov
idivl
xchg
xor
mov
out
test
push
out
cwtl
sbb
out
shrb
jp
sub
push
xlat
cmpsb
daa
mov
xchg
xchg
pop
out
divb
inc
push
cmpsl
ss
xchg
xchg
out
testl
mov
xchg
xchg
pop
out
divb
inc
push
cmpsl
adc
fwait
cmpsb
cmp
jnp
aas
shll
scas
sbb
xchg
push
adc
clc
in
fldcw
add
dec
insb
repnz
xchg
pop
pop
push
fs
mov
enter
mov
bound
push
or
adc
int3
mov
push
add
repnz
ja
push
xchg
rcrb
push
std
push
push
std
xchg
sub
faddl
lods
ret
ds
dec
loopne
scas
or
test
cmpsl
sbb
stos
std
cmp
sub
xor
xor
lods
ja
aaa
inc
push
addl
mov
bound
mov
add
icebp
jg
lar
add
in
pop
xchg
outsl
sub
test
js
add
mov
out
lock
dec
mov
jle
lea
in
lea
fisubrs
xor
add
cmp
mov
cmc
loop
bnd
enter
loop
pop
mov
pushf
ja
das
clc
incb
cmp
mov
jmp
pop
inc
cs
mov
cmp
push
xchg
xchg
cld
push
push
stos
lret
sarb
xchg
scas
in
cmpsb
cmp
movsl
mov
gs
xor
or
add
mov
sub
in
dec
ljmp
pushf
imul
sbb
pusha
mov
mov
or
aaa
das
push
test
xchg
mov
jne
or
test
push
xor
push
adc
pusha
push
fs
test
in
jae
lret
aam
mov
out
fsts
fcomi
push
dec
rsm
das
or
out
std
add
xor
out
mov
jl
pop
orb
dec
out
mov
int
iret
push
push
cmp
subl
lds
in
adc
mov
jne
sbb
cli
sub
push
and
daa
mov
sar
hlt
or
test
mov
dec
inc
arpl
or
in
ss
mov
and
in
jmp
inc
xor
ret
movsl
xor
test
cltd
fs
jnp,pt
dec
lahf
sub
jle
or
xchg
pushf
lock
mov
jne
jp
push
mov
cs
pop
jns
pop
jle
lods
nop
mov
sbb
pop
inc
es
xchg
movsl
cmpsb
xor
sbb
fidivrs
fdivrl
mov
add
mov
jg
aas
popa
dec
inc
sbb
fmul
pop
and
test
add
shr
jns
pop
out
test
xchg
fdivrl
sub
popa
pop
decl
push
adc
js
jns
or
dec
outsl
push
loopne
push
movsb
sti
pop
enter
shlb
and
cmp
cli
cmp
imul
mov
and
mov
pop
mov
cmp
cmp
sub
mov
stos
jb
jecxz
adc
dec
jb
fbld
push
mov
rcrb
push
rcrb
pusha
dec
ljmp
icebp
inc
cmp
sbb
lcall
cmp
in
lock
gs
aaa
lret
in
gs
pop
add
mov
push
rcll
or
imul
jnp
insl
int
out
das
icebp
xor
imul
in
xchg
sahf
and
shl
lahf
mov
jb
das
loope
inc
imul
push
ret
pop
sbb
daa
punpckhbw
loope
out
lods
inc
mov
add
out
and
dec
mov
cmp
fcomps
lret
icebp
in
mov
xor
jp
xchg
adc
dec
pop
xchg
and
inc
icebp
orb
and
sub
add
and
and
cltd
mov
add
dec
push
stos
and
xor
mov
dec
jbe
pop
lea
imul
fimuls
cmpl
int3
mov
subl
fsubr
daa
sub
dec
mov
fwait
inc
outsl
mov
clc
lods
jae
js
sarl
pop
and
add
fwait
lret
mov
push
mov
jbe
iret
pop
pop
pop
mov
mov
sbb
lahf
push
jp
out
pop
cld
imul
lods
fisubl
insl
in
push
mov
mov
sbb
outsb
dec
cmp
pushf
lahf
jp
push
or
jbe
fdivrl
call
scas
enter
inc
sub
or
mov
dec
inc
aaa
lods
inc
jecxz
stos
movsl
adc
das
jmp
loop
iret
fcmovbe
mov
inc
pop
dec
cltd
push
fwait
adc
jge
addl
mov
pop
adc
imul
and
jo
push
loop
test
dec
andb
ds
out
aaa
insb
aad
mov
fdivs
push
ja
fldcw
pop
or
test
cwtl
jp
testl
cmp
pop
loop
fdivr
mov
dec
jecxz
add
mov
cs
or
out
shlb
add
inc
pushf
mov
jecxz
jne
adc
cmp
daa
adcb
inc
or
jg
gs
mov
jb
es
push
loopne
pop
aaa
into
sahf
stc
in
sub
push
adc
std
xchg
enter
sbb
inc
sbb
neg
push
pop
stos
xor
sub
ja
inc
cmp
jo
daa
xchg
inc
jl
xor
mov
js
test
mov
mov
or
pop
jnp
shlb
aas
add
insb
pop
push
scas
xor
int3
mov
stos
and
mov
push
fisttpl
in
xchg
insl
sub
and
push
testb
sub
mov
jmp
xchg
jbe
mov
mov
push
dec
pop
mov
xor
dec
mov
aas
push
mov
push
inc
scas
jp
or
repz
sbb
and
xchg
jae
sub
sbb
cmp
aas
adc
aam
or
arpl
or
movsb
push
adc
mov
mov
ja
int
lret
into
and
jno
inc
dec
mov
mov
dec
test
lahf
adc
in
icebp
inc
inc
xchg
lcall
xor
cmp
insb
cmc
adc
mov
adc
xchg
sahf
mov
jae
mov
cmp
dec
jae
or
cmp
or
xor
call
enter
jne
hlt
push
xor
lahf
push
push
shrb
js
mov
loopne
cmc
in
lea
fs
bound
fisttps
cmp
test
inc
mov
mov
sub
xchg
loope
out
pop
xor
pop
cmp
mov
jae
into
ret
jnp
dec
les
mov
pop
sub
dec
int
inc
or
dec
inc
xor
xchg
in
cmpsb
dec
sti
jle
lods
rcll
jle
bound
sub
jle
adcl
mov
clc
inc
test
into
lea
icebp
sub
xor
sub
add
jns
movsb
pop
add
jecxz
jo
adc
sbb
stos
shll
stos
iret
add
subl
sahf
and
mov
cmp
js
dec
push
shrb
adc
mov
or
xor
aaa
adc
bound
push
cltd
in
pop
imul
outsb
imul
or
mov
stos
fimuls
mov
dec
shll
xchg
mov
movsb
jns
xor
les
xor
aas
int3
sub
rcl
jl
adc
sbb
and
mov
pop
mov
in
sbb
movsl
into
xchg
xor
mov
ror
jp
imulb
pushf
lret
xchg
jle
sbb
pop
lds
jo
sub
pop
testb
and
sub
sub
sub
push
lahf
mov
mov
decl
ss
jg
xchg
in
je
xor
dec
or
push
xchg
mov
pop
loop
pop
adc
jecxz
jnp
sbb
inc
mov
add
ljmp
lods
jmp
lock
gs
jne
jo
faddl
aam
push
sub
jecxz
mov
pop
mov
imul
bound
pop
ds
push
pop
add
addr16
sub
cld
sahf
cwtl
push
or
add
push
mov
pop
hlt
dec
lods
aad
cmp
movsl
icebp
mov
cmp
sbb
testb
shrl
hlt
daa
mov
xor
adc
fcoms
repnz
xchg
cmpsl
mov
pop
mov
cli
inc
pop
cs
mov
scas
ffreep
lods
push
add
fsubrl
xor
lret
xor
push
jecxz
xor
add
cmp
leave
cmc
shr
dec
pusha
mov
pusha
aaa
outsl
into
sbb
dec
mov
jnp
lods
or
and
mov
movsb
insl
movsl
jecxz
lds
push
mov
mov
mov
mov
mov
in
jne
dec
or
lods
stos
inc
bnd
mov
in
je
and
imul
in
sub
jnp
repz
pop
mov
std
rcr
daa
mov
fcmovbe
cmp
pop
call
add
adc
lahf
lret
dec
and
orb
mov
adc
shll
popa
pop
dec
sbb
outsb
leave
enter
imul
add
mov
imul
adc
int
xchg
and
fisubl
cmc
jl
sub
jmp
push
adc
repz
movsl
pop
inc
cmp
mov
xchg
into
xor
dec
pop
and
cwtl
arpl
xchg
jno
lret
and
sub
repnz
jnp
cmp
addr16
inc
js
daa
iret
adc
and
adc
rclb
sub
scas
add
stc
int
fidivs
cs
loopne
rolb
or
roll
jp
mov
push
imul
push
xor
cmc
add
fstps
cltd
jle
arpl
scas
ret
rolb
adcl
lock
cmpsl
pop
pop
out
push
cmpl
lret
jb
out
aam
pop
testl
int3
aas
and
and
cli
dec
push
adc
lods
icebp
push
sbb
xlat
xor
std
push
movsb
lret
cmp
and
xor
jbe
jmp
xor
jg
fsubrl
adc
xor
and
push
into
insb
and
push
jae
xchg
adc
icebp
cmpsl
fisubrl
sbb
sbb
mov
push
cmp
xor
xlat
shr
sbb
repz
pop
xlat
push
inc
ficomps
mov
pop
testl
dec
ljmp
or
sbb
jl
jl
arpl
jle
lret
fidivl
cwtl
ja
inc
inc
mov
xor
nop
pop
dec
xor
inc
shl
xor
insl
out
lods
ljmp
into
imul
lds
dec
movsl
inc
int
pop
out
lds
add
and
arpl
fdivl
es
push
pop
inc
pop
sbb
sub
gs
into
test
push
lretw
out
notb
notb
std
lds
sbb
outsl
and
daa
scas
fwait
imul
and
add
adc
pusha
mov
jmp
or
xor
cld
xchg
add
rcll
sbb
jbe
negb
or
lret
mov
js
addr16
lock
adc
mov
push
mov
stc
xchg
sbb
out
es
outsb
dec
add
outsl
or
aam
mov
iret
adc
pop
add
sub
fnstenv
jmp
xchg
les
shrb
rep
int3
or
adc
xorb
mov
inc
arpl
adc
ja
cs
insb
adc
lods
inc
lds
inc
stc
xchg
out
lods
into
imul
mov
sbb
xlat
jl
mov
ror
push
dec
iret
sub
dec
popa
jb
scas
repnz
ja
addr16
data16
mov
or
arpl
test
out
mov
jae
inc
shll
jmp
inc
pop
stos
jge
cmc
sbb
ficomps
and
cli
sub
rol
add
out
jp
pop
mov
pushf
push
inc
fidivrl
cmp
loop
out
xor
inc
gs
mov
xor
outsl
into
int3
sub
xor
mov
xchg
pop
pop
pop
int
xchg
in
mov
into
imul
add
or
test
mov
or
std
inc
jp
fucomip
inc
mov
sbb
in
icebp
setg
lcall
push
jb
mov
and
pop
mov
fdivr
mov
clc
in
adc
sub
int3
inc
cmp
aad
mov
loope
movsl
xor
pushf
das
arpl
frstor
loop
stos
mov
cmc
xor
test
xchg
loopne
ljmp
dec
push
in
sahf
sub
lds
dec
clc
pusha
lods
push
lds
mov
mov
jbe
pop
inc
xor
mov
std
or
pop
aad
or
insl
adc
or
cli
push
rcll
pop
jl
dec
jg
call
jecxz
insb
add
mov
popa
ret
int3
aas
xor
sbb
sti
in
jbe
xchg
sbb
lret
bound
in
push
push
mov
js
xor
sbb
jne
sbb
inc
and
pop
mov
pop
rcrb
mov
lods
aad
enter
sub
sbb
mov
sub
push
or
outsl
decl
and
int
mov
roll
adc
idiv
fmull
lds
leave
loope
xor
dec
out
mov
loopne
or
mov
jne
inc
add
hlt
rcll
push
aam
xchg
dec
xor
pop
push
push
leave
and
mov
pop
daa
dec
addl
mov
ss
dec
jmp
or
out
jp
lcall
lret
fistps
jnp
adc
mov
int
mov
pushf
sarl
xchg
pop
movsb
xor
xchg
shll
jbe
ljmp
xchg
movsb
cwtl
dec
sub
jne
mov
js
inc
xchg
or
adc
and
psrld
hlt
mov
push
in
inc
icebp
push
stc
cmp
movsl
push
nop
int3
lock
sbb
pop
jne
push
mov
mov
ret
imul
loope
xchg
dec
scas
pop
push
inc
xlat
inc
mov
mov
add
dec
mov
insb
pushf
dec
ds
nop
push
pushf
mov
pop
adc
sub
imul
or
push
pop
int
push
xchg
push
xchg
in
add
dec
insl
sbb
ds
add
fisttpll
pop
ja
shll
lock
xchg
insb
out
mov
and
cmp
daa
jno
lret
out
jne
push
or
mov
xor
mov
in
notl
or
jbe
mov
mov
cltd
testb
adc
jle
inc
sbb
and
sub
jl
pushf
push
adc
out
movsb
in
mov
test
or
xchg
sbb
movsl
and
xchg
push
imull
push
fnstenv
outsb
pop
push
inc
repnz
ret
je
push
cmp
inc
push
loope
sub
daa
dec
pushf
stc
int
inc
es
pushf
push
and
subl
add
lods
sbb
in
div
cwtl
push
xchg
adc
xadd
icebp
out
mov
mov
mov
js
sub
cmp
fists
out
or
stos
cmc
mov
int
cmp
addr16
push
stos
in
mov
pop
push
pop
out
lds
mov
mov
dec
xlat
repz
inc
inc
xlat
and
rcl
clc
lock
cmp
xor
pushf
iret
cmc
mov
cmp
in
mov
dec
inc
mov
rorl
int
negb
out
cmp
sub
mov
idivb
adc
sbb
adc
sahf
fadds
push
sbb
inc
mov
mov
sub
and
test
sub
out
adc
out
push
jno
or
outsl
mov
inc
loope
subps
rep
lret
imul
jge
add
jne
sbb
movsb
mov
sarl
lea
push
sbb
fsubs
or
scas
mov
xor
arpl
clc
cmpsl
mov
fldt
cmpsl
subb
shrb
out
ja
data16
sbb
add
pop
test
stc
subb
stc
sub
cmpsl
mov
cmp
adc
pop
mov
mov
rolb
loop
mov
scas
in
or
rorb
fst
pop
sub
xor
cmp
or
or
lea
leave
pushf
add
xlat
shll
es
lods
xchg
pop
mov
xchg
mov
popa
loope
inc
popa
xor
mov
aaa
test
out
mov
dec
iret
adc
add
xchg
in
test
ss
scas
lcall
xor
sub
pop
mov
push
jmp
ret
and
inc
dec
mov
jmp
cmpsl
push
mov
outsb
sti
imul
dec
pop
mov
nop
es
data16
sbb
in
jl
mov
dec
adc
jbe
sbb
out
and
pusha
xor
pop
sti
inc
xor
gs
and
insl
mov
out
mov
mov
sub
inc
adc
lret
test
shl
mov
cs
fmul
push
xchg
sub
push
lcall
je
aad
repz
xor
ret
push
das
dec
loopne
daa
sub
imul
jnp
xor
rolb
lds
loopne,pn
repnz
push
pusha
fists
enter
imul
xlat
in
jbe
pop
push
dec
call
inc
inc
push
jb
xchg
mov
jb
pop
mov
out
inc
xchg
rolb
movsl
movsl
push
clc
pop
gs
fmull
ret
subb
adc
adc
cmp
jne
sbb
lods
popf
push
insb
xor
dec
cwtl
pop
mov
lods
pop
xchg
arpl
dec
fadds
push
pop
jge
jp
addl
scas
aas
push
jb
inc
add
mov
pushf
dec
out
fisubrl
movsl
orb
dec
dec
aad
cltd
icebp
pop
push
jno
cli
xor
ss
or
in
rorl
fisubs
enter
sahf
pop
mov
inc
dec
lods
daa
mov
dec
dec
ss
add
test
and
and
cmc
xor
mov
and
ljmp
popa
fists
outsb
and
pop
mov
outsb
gs
adcb
cmp
push
rcr
jb
jae
push
mov
les
testl
stc
mov
arpl
pop
hlt
scas
loop
loopne
sbb
aam
xor
aas
pop
inc
jge
cmpsb
push
mov
adc
dec
loopne
clc
aaa
adc
repnz
push
jne
aam
dec
cmp
mov
pop
sbb
addr16
popa
or
dec
cmpsl
jecxz
shlb
popf
fmull
add
ja
xchg
xor
test
jmp
mov
test
outsb
lahf
movsb
add
mov
into
pop
stc
aaa
repz
js
imul
cld
xchg
icebp
cmp
inc
in
movsl
mov
imul
xchg
adc
dec
cmp
xchg
outsb
psubw
mov
xchg
cmpsl
stc
lea
adcb
sub
jg
out
jmp
insl
xor
sarb
sbb
inc
mov
sub
repnz
or
aas
fnsave
shl
add
fidivrl
iret
pop
aam
push
adc
lea
repz
mov
add
shrb
cwtl
mov
into
cmp
je
add
pop
icebp
fs
rclb
mov
pop
cmp
ret
fbld
rclb
lods
insb
dec
and
dec
stos
inc
inc
divb
xor
jbe
rorb
sub
movsb
ljmp
dec
or
cmc
pushf
lret
push
pop
lock
mov
mov
scas
sbb
inc
xor
jecxz
test
enter
cmp
ret
xchg
js,pt
jge
xor
pop
xor
adc
add
in
jle
inc
mov
and
mov
data16
cmp
add
mov
sbb
dec
les
jmp
add
mov
or
cmp
fstps
or
js
dec
andl
test
das
cld
rol
adc
push
in
outsl
xchg
mov
jp
fdivl
push
add
mov
into
push
cmp
clc
pop
and
push
mov
cmpsl
inc
fwait
pop
mov
cmp
test
inc
mov
pop
dec
mov
sub
pop
add
das
mulps
ds
leave
imul
repnz
lcall
addr16
pop
xor
push
fimull
xchg
loop
fcompl
in
movsb
or
jnp
lods
je
mov
in
movb
cli
in
cltd
cmc
cmp
add
out
sbb
mov
xor
dec
iret
push
xlat
popf
mov
xchg
mov
scas
inc
imul
pop
mov
out
and
daa
shll
cmp
cltd
repz
test
jne
inc
dec
das
mov
push
jbe
inc
push
xlat
cmpsb
daa
mov
xchg
xchg
pop
out
divb
inc
push
cmpsl
ss
xchg
xchg
out
testl
mov
xchg
xchg
pop
out
divb
inc
push
cmpsl
mov
xchg
jbe
inc
xlat
cmpsb
daa
mov
xchg
xchg
push
out
divb
inc
push
cmpsl
ss
xchg
xchg
out
testl
mov
sub
xchg
pusha
xchg
out
xchg
sbb
fwait
push
stos
ds
outsb
mov
lahf
outsb
or
sbb
fistps
jnp
jnp
mov
fwait
push
stos
ds
dec
jmp
sti
or
sahf
sbb
dec
mov
jnp
mov
fwait
push
stos
ds
dec
jmp
sti
outsb
or
pop
shrb
xor
sti
push
fwait
jle
insl
jmp
inc
in
mov
mov
push
inc
push
iret
mov
ficomps
push
push
ficoms
lret
ret
popa
testb
jb
mov
mov
movsb
xchg
arpl
mov
movsb
in
fucompp
iret
adc
pusha
movsl
mov
jge
les
and
and
sbb
pop
testl
fnsave
js
sub
mov
jbe
fs
clc
shrl
jmp
sti
outsb
arpl
fwait
jnp
cmp
out
xchg
test
jae
fwait
sbb
cmpb
sub
adc
adc
cmp
mov
mov
aas
iret
pop
sahf
push
jp
aam
fwait
push
stos
ds
dec
jmp
sti
outsb
or
cmp
imul
test
push
fbstp
jg
outsl
mov
mov
sbb
test
fidivrs
stos
pop
mov
mov
mov
jb
fbstp
dec
scas
sbb
addl
jbe
push
fstps
add
fs
enter
mov
jmp
sti
outsb
or
cmp
imul
out
mov
fwait
push
stos
ds
dec
jmp
sti
outsb
or
cmp
imul
out
mov
sahf
es
jmp
int
sub
mov
inc
nop
test
data16
mov
add
lods
decl
sub
imul
cmp
add
or
sarb
outsb
sub
in
adc
orb
inc
out
mov
popa
jnp
push
xchg
je
movsb
out
test
movsl
mov
xchg
outsl
in
xor
pop
dec
sub
xlat
mov
outsl
dec
inc
mov
ljmp
xchg
aaa
mov
and
ljmp
sbb
pop
pusha
mull
popf
jne
dec
testb
lds
xchg
inc
js
aam
sub
loop
cmpsl
or
push
pop
mov
inc
stos
dec
repz
cmpsl
xchg
pop
cmp
pop
stos
ss
shll
push
mov
inc
into
ret
xchg
sti
adc
movsb
cmp
ja,pt
dec
mull
sbb
psubusw
cmp
aad
imul
sbb
shl
adc
sahf
mov
lock
jns
and
pusha
orl
adc
mov
insb
jo
into
imul
xor
push
adc
rcrb
testb
fs
aaa
sbb
lods
in
push
sub
pop
dec
ss
js
jg
lahf
leave
movsl
inc
cmp
jnp
fcos
jp
xchg
pop
and
rolb
and
scas
stos
and
scas
fisubrs
push
inc
xchg
jp
push
and
mov
loop
pop
dec
cmp
push
lcall
sub
out
xchg
icebp
or
enter
outsb
adc
sahf
fsubl
movsb
inc
dec
test
cmpsl
dec
sub
std
xchg
mov
dec
xchg
jae
mov
orb
sub
sahf
sti
aas
xor
pop
pop
jmp
iret
pop
psubw
jo
xchg
xor
and
shl
cmp
aad
mov
xchg
mov
jns
push
mov
sbb
sbb
arpl
mov
mov
cli
dec
and
pop
repz
shll
cmpsl
js
int3
jnp
sub
scas
stos
aam
cmp
jns
mov
loop
js
addb
out
xchg
cmp
out
pop
ret
or
test
mov
push
dec
fsubrs
jle
call
test
push
scas
rcr
jecxz
inc
mov
fdivrs
repnz
dec
rcl
dec
push
out
ret
inc
mov
test
inc
xor
jg
outsb
call
sub
test
fdivrs
dec
test
push
and
sbb
enter
popa
repz
xchg
or
scas
loopne
and
ret
add
pusha
sbb
test
mov
clc
mov
mov
mov
mov
aad
adc
bound
jo
out
dec
outsb
jo
xchg
push
dec
lahf
dec
out
jmp
lea
adc
and
repz
mov
mov
lcall
xchg
and
xchg
xchg
aas
sub
pop
jno
outsl
xchg
mov
xchg
jbe
daa
fwait
push
adc
outsl
loop
push
in
js
imul
negl
jns
outsb
jle
lock
orb
mov
aas
mov
cmpsl
mov
sub
fwait
aas
negl
ljmp
imul
ja
test
call
int
inc
or
xchg
test
inc
mov
stos
cmp
mov
test
push
push
sarb
sti
out
hlt
jno
pop
and
and
in
addb
xor
ss
lret
pop
and
and
cli
mov
add
push
das
lcall
inc
insb
test
push
mov
movsl
jns
jl
fiaddl
insb
outsl
call
cs
pop
mov
xchg
test
sub
push
mov
test
jle
add
push
in
test
int
push
sbb
pop
inc
insl
sbb
ret
mov
les
and
mov
aas
sub
mov
lds
jne
arpl
cmpsb
cmc
xor
jecxz
push
stc
lock
fistps
popf
cmc
jae
les
or
sbb
sbbb
push
or
lods
addr16
mov
inc
out
push
xchg
lretw
mov
imul
test
aam
int
cmp
aad
mov
mov
inc
fwait
popa
mov
mov
lea
mov
ss
in
mov
sti
sub
xchg
xchg
pop
jne
mov
xor
loop
mov
or
mov
adc
xchg
jne
sarl
push
repz
outsl
jno
mov
mov
mov
jns
hlt
pop
inc
les
cld
inc
adcb
push
fidivs
inc
or
inc
mov
jbe
dec
or
cmp
pop
cmp
xchg
or
or
jmp
and
jbe
repz
enter
sbb
jns
jo
arpl
jmp
movl
pop
shrl
dec
and
stos
iret
clc
mov
push
jno
or
loope
jb
push
pop
loopne
cmp
add
sub
mov
push
xor
fnstcw
pop
mov
movsl
in
imul
jge
sbb
sti
sub
es
or
mov
cmp
in
pop
lcall
test
mov
gs
dec
insl
mov
cmpsl
add
jne
push
dec
int3
std
mov
cmc
jns
lret
mov
lahf
cmp
add
add
out
sti
cmp
aad
push
sahf
popa
xlat
mov
test
ja
sbb
sub
orl
pop
push
xchg
mov
into
adc
push
jecxz
ljmp
insl
icebp
cli
idivb
pop
testb
add
and
push
loopne
dec
divb
stos
push
mov
cs
aam
and
adc
jne
dec
add
xchg
xchg
fs
adc
push
sub
inc
sbb
imul
in
incl
xlat
pushf
test
repnz
dec
xor
cmpsl
dec
jp
push
int
insb
inc
gs
push
ror
inc
sbb
xchg
addb
cmp
dec
mov
sub
add
jno
mov
push
sub
loop
pop
mov
out
imul
cwtl
imul
mov
pop
jecxz
loop
cltd
cltd
mov
dec
cmpsl
inc
bound
out
jecxz
roll
jae
jbe
push
sub
sbbl
loopne
push
mov
jg
jo
roll
and
mov
xchg
mov
mov
shlb
notl
call
ljmp
lock
mov
cs
icebp
xor
xor
shr
aam
insb
repnz
push
push
inc
pop
data16
xor
mov
shlb
inc
adc
pop
aad
ss
imul
ret
dec
out
jmp
loopne
mov
xlat
out
push
lods
push
push
jl
and
sub
cmc
cmpl
fldenv
lods
mov
adc
or
gs
dec
data16
inc
in
cld
sarl
andl
jp
jge
les
stos
push
je
pop
pop
lea
in
sub
outsb
faddp
rol
mov
inc
push
sub
in
or
mov
mov
sbb
test
stc
cmpsb
xchg
les
xchg
or
mov
mov
ss
sbb
push
ss
stc
inc
sbb
mov
pop
imul
stos
xor
push
pop
enter
dec
sub
out
xchg
jle
sbb
xor
xor
jnp
xchg
fadd
inc
negl
ljmp
test
adc
xor
xor
sbb
sbb
jo
xchg
loop
and
lods
stos
insb
mov
pop
dec
movaps
dec
ret
cmp
jae
call
ficomps
inc
cmpl
insl
lock
lds
out
pusha
movsl
sarl
cmpsb
mov
pop
in
dec
enter
and
pop
pop
add
call
jge
mov
xorb
jmp
paddb
pop
fistl
xchg
push
callw
test
push
cmpsl
dec
sub
aad
mov
es
add
test
aad
sub
xor
loop
inc
int3
adc
mov
sbb
xchg
scas
mov
lret
arpl
adcl
adc
test
inc
cmpsb
rcr
loope
je
inc
pop
icebp
or
andb
xchg
jae
fs
jno
cmp
push
jmp
test
mov
into
int
adc
mov
adc
out
js
loop
stos
rcl
xchg
out
mov
out
or
xchg
cmp
fimull
adc
pminsw
ss
mov
lcall
sub
sti
mov
adc
daa
jecxz
incb
int
mov
repz
shrl
rclb
mov
inc
dec
mov
stos
or
add
inc
inc
add
jo
jmp
mov
cmc
push
mov
cmpsb
loope
mov
ret
jle
add
inc
fimull
ror
xor
jecxz
fwait
fs
jge
mov
pop
test
jns
shl
fidivrs
lret
mov
cmpsb
bound
add
mov
outsl
mov
pop
enter
push
cwtl
sbb
fistpl
call
inc
stos
ja
pop
aaa
insb
enter
push
popf
fadd
push
movsb
mov
adc
in
fsub
dec
call
les
aas
test
in
in
cmp
xchg
cmp
mov
inc
push
pusha
in
xor
out
cltd
mov
inc
pop
dec
outsl
fwait
mov
cmp
pop
dec
fldt
repnz
push
ja
pushf
jo
or
xchg
adc
xor
adc
mov
jns
scas
notb
xchg
push
pop
mov
push
ds
xchg
xlat
xor
into
nopl
xchg
mov
popf
xchg
iret
xchg
loope
into
jle
ja
push
shll
push
pop
jp
inc
cld
std
dec
daa
sahf
push
pop
pop
imul
dec
or
sub
xchg
or
stc
mov
pop
mov
repnz
mov
popa
aad
sub
lock
pop
mov
lds
xor
adc
sub
mov
and
mov
imul
adc
push
stos
sub
aas
mov
scas
into
cmp
mov
les
jecxz
jbe
sahf
jl
mov
cli
adc
pop
sub
adc
dec
inc
shll
mov
jmp
arpl
push
inc
jns
loopne
aam
and
notb
lods
pop
adc
jno
sub
gs
sti
sbb
push
in
jmp
mov
jle
add
mov
pushl
in
mov
sti
clc
cwtl
testb
push
arpl
bound
jge
push
in
leave
je
xor
rorb
pop
inc
rcrb
popf
cmp
and
out
test
cmp
push
jecxz
sbb
inc
cmp
sahf
push
ds
stos
sbb
cmp
sbb
cmp
jmp
sub
add
mov
adc
adc
push
or
ss
inc
push
scas
pop
push
int3
mov
daa
push
mov
scas
jne
clc
push
adc
jnp
or
add
xchg
xchg
xor
push
stc
pushf
mov
dec
fmuls
sbb
mulb
je
flds
push
out
xchg
xchg
dec
test
cmpsb
push
in
int
dec
popa
es
and
data16
std
lcall
out
mull
insb
sub
lret
hlt
rcrb
or
sbb
pop
div
xchg
and
mov
cmc
jg
jmp
mov
inc
ret
stos
pop
addl
mov
fs
push
xchg
cwtl
es
test
ret
push
and
sub
mov
in
push
xor
mov
add
ss
jge
adc
sub
mov
std
xchg
and
cmpsl
shrl
clc
xchg
imul
in
mov
jo
inc
mov
jnp
and
dec
xchg
pop
lods
dec
ss
inc
ss
ljmp
mov
nop
imul
sbb
sti
jo
in
xchg
push
addr16
pop
mov
inc
dec
xor
cwtl
aas
xor
push
or
aas
inc
sub
movsb
cmpsl
jmp
jge
sub
arpl
xor
or
inc
movsb
and
jmp
cmp
push
mov
mov
out
test
adc
mov
jb
jp
jmp
loopne
aam
fisttpll
or
ds
repnz
inc
test
xchg
adc
mov
inc
or
in
dec
aam
fs
mov
decb
test
or
bnd
test
sti
ret
mov
ds
pushf
xchg
leave
das
xchg
mov
into
mov
or
arpl
dec
ror
jne
pushf
movsl
stos
cmc
inc
lds
mov
mov
mov
das
jmp
and
add
and
or
adc
into
lcall
xlat
push
push
imul
in
filds
testl
les
push
lea
jp
push
mov
std
int
sbb
addr16
ret
pop
cltd
cwtl
pop
call
pop
inc
push
stos
jne
pushl
xor
sub
dec
call
xchg
mov
cmp
cld
mov
lea
popf
lock
loope
adc
xchg
xor
mov
loopne
inc
andb
inc
push
and
cmp
jne
sub
mov
xchg
sub
mov
pop
popa
cmc
lods
test
jecxz
stc
es
in
sbb
ret
cltd
and
std
xchg
add
fistpl
push
jecxz
inc
or
aam
add
dec
xor
stos
call
pop
and
jmp
add
jne
or
push
and
push
sbb
movb
dec
out
mov
call
fisubs
sarb
pusha
incl
jne
lret
and
jo
dec
sbb
rcrl
push
hlt
ja
adc
xchg
out
popf
sti
aas
xchg
out
pop
aad
push
cmp
decl
jbe
xlat
mov
bound
mov
mov
scas
cmp
mov
fnsave
and
stos
pop
pushf
loop
mov
repnz
mov
add
in
xchg
fildll
sbb
lret
mov
aam
fwait
jecxz
out
mov
xchg
test
daa
stos
movsl
cmpb
inc
xor
test
test
cwtl
jns
ljmp
hlt
mov
pop
add
sbb
push
repz
divl
pushf
jp
scas
sub
mov
shr
xchg
mov
je
xor
das
inc
add
pop
adc
clc
cld
or
xchg
ds
jle
jno
adc
push
icebp
mov
lret
inc
mov
pop
out
or
xchg
mov
xchg
ret
xchg
mov
inc
push
jns
cld
mov
loope
rcr
test
inc
stos
mov
cltd
push
insb
pop
sub
adc
lods
into
clc
and
int3
or
in
xchg
inc
imulb
jge
int
mov
cmp
outsb
mov
mov
mov
insb
inc
or
mov
in
popf
xor
cmp
and
push
into
sahf
mov
adc
enter
mov
pop
loope
mov
aam
and
rcll
push
jae
mov
enter
imul
rorb
jg
mov
or
or
mov
pop
adc
inc
scas
stc
into
leave
inc
iret
rcl
rolb
cmpsl
xchg
and
andl
mov
add
mov
cmp
subl
stc
in
into
gs
mov
xlat
xor
nop
mov
test
pmuludq
pop
mov
aas
cli
sub
dec
pop
inc
mov
add
and
and
xchg
mov
sub
sub
mov
dec
pop
mov
adc
in
nop
lea
push
dec
adc
pop
cltd
cmp
sbbl
data16
mov
adc
loope
pusha
jle
out
rcrb
jnp
test
push
movsb
pop
or
pop
mov
call
insl
cmpsl
fistpl
dec
inc
xor
dec
xchg
push
mov
xor
testb
xor
jne
or
sbbl
xchg
ret
dec
incb
mov
and
rol
loope
sbb
inc
inc
xchg
inc
dec
xchg
xlat
movsb
jl
lds
fidivl
sarb
xor
shll
insb
scas
jp
rcr
cmpsb
push
pusha
pop
add
mov
cmp
lret
cmpb
pop
mov
add
jecxz
lods
mov
pop
jle
jb
pushf
inc
fbld
movsl
in
stc
repnz
adcl
out
and
in
orb
cmp
lcall
int
push
cmp
jnp
imul
mov
mov
ret
xor
out
xchg
jae
mov
lds
test
cmpsl
js
stos
fwait
orb
push
pop
aaa
ror
jns
jecxz
fnstcw
mov
push
fs
xchg
mov
movl
xor
lahf
xchg
lahf
jp
push
adc
add
dec
cmp
pop
xor
jb
sti
aam
mov
mov
js
in
hlt
push
jmp
dec
or
sub
mov
mov
mov
cmp
fcoml
js
clc
jge
sti
sub
adc
sbb
push
rorl
jno
incl
inc
jnp
arpl
clc
or
cmp
jmp
enter
lcall
push
mov
cmp
nop
arpl
mov
mov
xchg
adc
mov
mov
lcall
mov
pop
aad
rorl
test
xchg
fs
sub
outsb
test
cmp
xor
fnstenv
shll
repnz
adc
ss
dec
bound
xchg
push
ljmp
insl
outsl
das
cmpsl
mov
out
fwait
test
lds
outsl
roll
add
jp
jge
mov
testb
call
xor
inc
stos
lods
jns
dec
insb
incl
or
cwtl
add
or
add
cli
lcall
notb
out
cwtl
pop
mull
fnstcw
mov
sub
adc
mov
nop
pop
xchg
sub
mov
adc
jge
add
in
dec
inc
xor
rclb
mov
icebp
mov
movsb
negb
push
je
mov
movsb
mov
mov
dec
fst
add
cld
adcb
pushf
cwtl
dec
adc
adc
aam
rolb
ds
sbb
loopne
imul
add
lea
xchg
ds
add
in
inc
jbe
dec
out
adc
pushf
adc
je
jmp
or
cld
hlt
sti
test
fildll
fdivl
movsb
testl
add
xorb
iret
sub
test
aas
sub
imul
cmp
sbb
sub
cmp
mov
rorl
mov
pop
pushf
shlb
es
test
movsb
cli
or
popa
sbb
jmp
dec
add
pop
and
scas
dec
or
or
jne
add
mov
icebp
jmp
xor
xor
sbb
push
and
sub
mov
mov
push
cmpsb
fstl
insl
cmpsl
cmpps
push
push
dec
lahf
add
popf
jl
sarl
sti
mov
push
inc
push
lahf
out
and
sub
mov
gs
ds
mov
ja
clc
jmp
fs
jb
icebp
gs
lods
or
push
xchg
xchg
mov
fistpl
loop
dec
imul
cmp
and
xchg
push
movsl
pop
je
in
sbb
pcmpgtd
xorl
jo
lock
mov
lea
divl
pop
inc
fwait
insb
xorb
cmpb
lcall
mov
rcrl
fnsave
or
adcb
sti
jl
js
ret
mov
subl
sahf
iret
dec
loope
dec
pop
cwtl
xor
jns
adc
lret
jge
add
iret
lea
add
jl
loop
cmpsl
push
mov
mov
add
hlt
scas
test
add
cwtl
ret
clc
jp
push
in
cs
and
adc
mov
sub
jo
xor
push
scas
pop
test
sub
rorl
inc
scas
xchg
add
inc
jp
xor
seta
insl
leave
icebp
jb
int3
add
adc
ret
mov
xor
or
sahf
jg
sub
mov
sbb
aad
xorb
sub
in
into
out
sub
add
outsb
mov
sahf
push
js
push
pop
mov
add
jno
aam
push
test
stc
imul
pop
das
lret
gs
ja
scas
mov
std
ds
dec
jmp
sti
outsb
or
cmp
imul
out
mov
fwait
push
stos
ds
dec
jmp
sti
outsb
or
cmp
imul
out
mov
fwait
push
stos
ds
dec
jmp
sti
outsb
or
cmp
imul
out
mov
lcall
pop
fisttpl
jle
scas
or
cmp
cmp
shll
xchg
add
in
mov
add
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
fdivrl
in
lea
inc
jecxz
into
mov
int
or
or
jge
loop
pop
sub
fdivrl
in
lea
lods
mov
jl
bound
cmp
sub
lds
xchg
test
xchg
cmc
movsb
lds
and
sbb
arpl
pusha
das
jnp
mov
mov
ljmp
imul
out
pusha
cmc
sbb
adc
or
xor
mov
push
fnsave
and
xor
ret
orb
dec
sbb
shll
xrstor
aaa
out
insb
nop
or
loope
sbb
lock
pop
sub
fucom
fcoml
enter
std
inc
test
dec
rorl
xchg
and
or
mov
sub
mov
inc
push
jno
or
arpl
pop
movsl
pop
rorl
in
or
ret
push
cmp
xor
sub
mov
ja
dec
dec
fsubl
add
cmp
pop
push
pop
lea
sub
adc
test
lea
fnsave
xor
add
adc
es
sub
mov
test
call
icebp
mov
test
push
and
sbb
imul
aam
les
std
mov
pop
dec
sub
js
nopl
dec
cmp
stc
test
aam
mov
mov
cmp
insb
or
cmp
sub
fdivrl
in
lea
lods
int
cmp
insb
or
cmp
sub
fdivrl
lahf
lock
jae
adc
jge
or
nop
add
pop
scas
je
inc
or
test
mov
dec
nop
decl
into
cwtl
add
rcll
xchg
imul
pop
popf
stos
xchg
lock
cmp
jle
mov
or
in
popf
add
push
arpl
scas
cld
punpcklwd
mov
mov
mov
repnz
test
loopne
fisubrs
add
add
cs
jb
pop
clc
add
xchg
and
cmp
dec
jno
enter
std
push
pop
cli
pop
out
pop
sahf
dec
dec
and
push
lods
test
adc
lods
les
add
movsb
lods
pusha
cwtl
dec
cltd
mov
fwait
push
and
sarb
push
adc
mov
xchg
xchg
inc
call
in
or
cmpl
mov
dec
mov
add
cmp
lret
out
test
pop
outsb
fs
xlat
mov
fiadds
mov
mov
ret
pop
addr16
mov
cmp
xor
adc
cli
std
jmp
stos
jo
shlb
or
dec
aaa
loopne
or
sub
popa
outsb
shlb
jne
aaa
mov
test
pushf
lods
shll
inc
adc
jns
push
les
inc
jo
pop
xchg
jl
aam
push
movsl
test
add
lret
fstpt
test
sti
test
in
xchg
and
mov
data16
enter
popf
icebp
and
bound
mov
xor
sub
or
xlat
dec
scas
daa
sub
cld
std
int
jbe
ret
aad
repz
dec
xchg
dec
mov
sbb
sti
push
cmp
arpl
sbb
xchg
sub
test
dec
mov
or
xor
loope
call
arpl
sbb
pop
mov
sbb
sbb
inc
sar
sbb
jae
je
std
xchg
ret
xor
inc
add
jl
sbb
aas
into
ljmp
push
jle
sub
frstor
test
int3
or
dec
lret
mov
cmp
nop
xor
cmpsb
push
xor
push
add
push
jo
lods
jl
in
or
push
cltd
lcall
cmp
inc
mov
mov
ds
hlt
aaa
or
cmp
xchg
xchg
mov
adc
int3
lret
xchg
jmp
les
fisubrs
dec
ljmp
ds
popa
addb
call
stos
jbe
out
sbb
and
add
mov
or
sbb
xor
js
lock
mov
pop
dec
outsl
pop
daa
mov
xorl
jmp
in
bound
add
rolb
xchg
sub
leave
cmpsb
xlat
sbb
daa
std
xchg
cmp
addb
push
and
cltd
loopne
mov
jo
jecxz
xchg
popf
jmp
loope
cmp
xchg
cmp
insb
test
js
outsb
scas
pusha
add
jmp
das
test
mov
dec
jnp
xchg
sub
inc
fsubrp
add
jecxz
pop
push
lds
jecxz
stc
pusha
xor
inc
xchg
dec
mov
jno
fcoms
lret
cmc
in
pop
ss
stos
add
iret
lea
mov
cmp
xor
cmc
out
inc
gs
gs
adcb
cmpsl
test
fldenv
adc
dec
sub
cs
shrl
nop
insb
test
ljmp
jne
sub
arpl
jno
pop
mov
inc
insl
or
sub
rcrl
hlt
stos
push
adc
and
sbbb
push
or
ret
mov
jne
inc
and
dec
xchg
pushf
je
jno
cmp
xchg
arpl
loopne
das
fisubrl
sarl
xchg
jne
xchg
mov
or
fldt
push
ljmp
cmp
test
sbb
mov
sbb
sahf
fwait
popf
mov
notb
adc
cmc
adc
addr16
jb
iret
mov
lcall
test
and
lods
cmc
sysexit
fmul
pop
fwait
insl
lods
mov
movb
pop
inc
inc
iret
rep
xor
or
mov
mov
mov
leave
or
test
cmp
sarb
mov
frstor
sub
and
push
lret
std
inc
sub
mov
cmp
jnp
mov
fisttpl
je
mov
mov
cmp
pop
add
xor
fsubrp
movsb
mov
push
out
pop
jmp
dec
jl
loop
ret
sti
mov
mov
xor
packsswb
mov
fidivs
shlb
ja
pop
in
mov
pop
pusha
shrb
leave
push
cmp
or
jns
fsubl
cwtl
sti
call
cmp
ds
out
and
pop
dec
addr16
lret
mov
add
rclb
ret
push
ljmp
out
jbe
stc
adc
add
mov
mov
fsubs
adc
cs
add
bound
mov
xor
dec
sub
cmp
cmp
or
dec
cld
sahf
fwait
xchg
mov
add
mov
sbb
popa
pop
ljmp
sub
repz
mov
inc
movl
rcrb
xor
js
push
pusha
aam
stos
mov
add
outsb
push
int
test
cs
pop
mov
mov
mov
push
fistpll
push
pop
sbbb
sahf
outsl
mov
cmp
leave
fnsave
sbb
std
or
mov
jmp
xor
adc
lcall
pop
rcrl
pop
mov
mov
push
push
dec
out
icebp
inc
mov
pop
inc
hlt
inc
or
push
push
cmp
lret
ret
push
das
ljmp
pop
arpl
repz
fwait
jnp
and
and
adc
lods
jp
leave
sub
xlat
dec
int
lret
out
ljmp
lods
add
hlt
sbb
outsb
cmc
sbb
in
push
dec
enter
xchg
or
int
xchg
xor
fstpt
pushf
bound
xchg
lret
pop
scas
sbb
cmp
popa
mov
ret
aaa
push
add
adcb
jnp
out
faddl
das
dec
add
push
movsl
xchg
stos
imul
js
mov
ja
popa
das
jo
xor
xor
in
mov
cmpl
ss
fs
add
push
jmp
mov
into
and
and
dec
iret
icebp
mov
test
push
cmpsl
pusha
sbb
cmp
or
inc
popf
ficoml
out
sub
ret
dec
add
pop
add
inc
lret
jmp
adc
pop
ret
fsubl
test
and
xchg
pusha
lock
push
stos
mov
popf
sub
sbb
fwait
mov
sub
fidivl
loopne
cmp
mov
pusha
popa
pop
fmull
cld
jno
movsl
add
xor
sbbb
sbb
jae
pop
push
repnz
test
push
mov
xor
out
jns
jae
mov
insl
pop
icebp
cld
das
dec
lahf
pop
jge
fisubl
sub
stos
in
mov
xchg
bound
ja
or
insb
sbb
add
jge
add
sbb
pop
lcall
std
xlat
push
fadd
mov
add
dec
sbb
push
icebp
mov
pop
push
sbb
outsb
imul
jg
mov
and
ss
sub
mov
push
mov
imul
pop
dec
or
xor
fs
aas
data16
push
enter
loop
stos
sarl
aas
adc
inc
sbb
mov
mov
jno
xlat
xchg
sub
pop
fdivs
mov
ds
stc
dec
dec
mov
mov
insl
push
stos
fwait
iret
imul
jecxz
shll
nop
scas
push
sti
lahf
loop
xor
adc
inc
fistpll
xor
xchg
inc
mov
pop
xchg
mov
inc
sbb
sub
mov
bound
dec
dec
test
ret
mov
pushf
pop
xlat
mov
movsl
in
ss
lock
xor
jl
mov
cs
scas
loopne
addl
xor
out
rclb
jo
xchg
add
enter
sbb
xchg
js
push
cltd
loop
not
pushf
push
mov
fxam
or
dec
mov
push
xchg
mov
nop
arpl
lock
cli
dec
cli
shll
add
dec
sahf
pushf
pop
mov
inc
in
aam
xchg
dec
mov
or
ficoms
jecxz
sbb
jmp
roll
pop
pop
pop
pushf
stos
sbb
inc
jmp
test
movsl
scas
sub
divl
xchg
ja
sar
sub
pop
inc
pop
loop
mov
outsl
daa
mov
mov
pop
sbbl
rcll
adc
inc
mov
arpl
push
inc
dec
aad
and
pop
xor
push
cltd
adc
inc
andb
jne
and
push
hlt
cld
push
subl
int
pop
jae
pop
lret
ljmp
inc
out
jnp
ds
push
add
sbb
lcall
sti
xchg
aam
cmp
outsl
mov
movsl
gs
incl
mov
lcall
test
fldl
sarb
movsl
enter
mov
push
push
fsubp
shr
lcall
in
fstpt
arpl
syscall
xchg
jl
pop
lret
xchg
sbb
sbb
mov
and
aaa
iret
ja
jnp
aam
mov
scas
enter
jl
in
jb
stos
mov
pop
xor
sbb
ret
inc
push
mov
push
mov
enter
sbb
ss
push
hlt
mov
lock
xchg
mov
or
repz
repz
divl
loop
in
cltd
cmp
mull
xchg
pusha
insb
cltd
lods
add
stc
mov
push
mov
mov
adc
and
scas
call
xor
adc
andb
bound
inc
fdivrp
mov
sti
push
jns
xor
arpl
fstps
or
pushf
lcall
xlat
loope
jmp
popa
inc
add
cli
std
shrb
mov
sbb
sub
lcall
sub
adc
or
dec
xor
jb
mov
mov
inc
or
fiadds
rcl
cmp
pop
or
inc
ds
aad
ss
imul
in
and
stos
mov
sbb
xor
mov
sub
dec
fnstenv
push
cmp
add
pop
stos
adc
fdivl
ret
daa
clc
shr
psllw
int3
das
cmp
jmp
xor
sub
rcr
jg
fucomp
inc
push
idivb
mov
push
clc
mov
addl
in
aad
inc
stc
pushf
or
or
mov
cli
pop
mov
jnp
fsubrl
icebp
add
mov
lods
mov
imulb
cmp
or
mov
stos
jae
add
repz
fcmovnb
insl
roll
pop
mov
add
loopne
shrl
mov
cmp
loop
dec
mov
sahf
add
sub
and
or
loopne
xor
xchg
je
sbb
mov
fwait
int
fstpt
lds
dec
push
sbb
das
insl
scas
cwtl
push
sub
cmc
mov
inc
sbb
mov
mov
jmp
cld
inc
sbb
lods
push
ljmp
lds
loope
or
decl
insl
ret
shlb
push
xor
out
imul
arpl
fwait
das
je
test
cmc
mov
imul
cwtl
push
repz
arpl
xchg
push
pop
xchg
cltd
mov
jecxz
jno
inc
sbb
icebp
outsl
pop
xchg
mov
mov
inc
adc
stos
cmp
and
sbbl
cwtl
xlat
ret
push
push
imul
jge
fwait
and
sbb
inc
lahf
stc
mov
jg
cmp
cmc
cmc
jne
mov
jns
test
popf
sub
jp
loopne
cmp
mov
outsb
xchg
jmp
enter
mov
inc
out
cmpsl
outsb
sidtl
loope
inc
stos
cmpsb
push
mov
cmp
ret
adc
fdivrl
xchg
rorl
fwait
cmp
dec
push
cltd
in
sub
push
xchg
or
jno
push
adc
pushl
add
pop
sub
or
inc
dec
repz
sub
sbb
inc
xchg
mov
xor
loope
xlat
outsl
jns
xor
pop
sbb
pop
fistl
repz
ljmp
xor
pop
gs
add
dec
in
cmp
loope
push
fsubs
xchg
mov
insb
inc
mov
jno
movsl
mov
lods
mov
mov
test
xor
sub
or
and
iret
ss
pop
notl
cmp
ss
add
mov
push
ds
fdivrl
jle
insl
aaa
out
xchg
test
mov
mov
rolb
inc
aas
mov
adc
dec
lods
in
mov
or
jle
xchg
mov
insb
pop
xor
popf
cmp
xchg
pusha
ror
mov
or
iret
sti
add
mov
add
aaa
insl
sbb
push
ljmp
mov
lods
enter
test
mov
sbb
xor
lea
mov
sbb
hlt
pop
lock
adc
arpl
push
mov
mov
lock
into
or
jp
sub
ljmp
in
lret
xor
cmp
mov
cmp
aaa
mov
ror
loope
scas
mov
negl
inc
test
dec
pop
mov
in
shlb
pop
out
lea
lods
out
inc
fwait
push
loopne
push
push
xor
push
adc
jb
xchg
adc
in
cmp
push
mov
in
into
dec
mov
xchg
testb
fisubs
mov
into
pop
pop
and
cmp
adc
xor
inc
lea
in
pop
stc
jp
in
adc
xorl
lretw
in
scas
aad
add
shll
pusha
mov
test
lods
inc
in
push
out
test
add
sub
sub
imul
in
sub
in
fisttpl
and
and
decb
adc
mov
push
dec
jb
and
sub
fiaddl
test
push
xor
pop
xor
push
mov
or
adc
repnz
cwtl
add
xchg
mov
js
mov
call
or
gs
fmuls
loopew
mov
mov
mov
adc
lock
fcmove
pop
xchg
insb
xor
mov
cmp
dec
push
imul
cmp
and
stos
out
popf
int3
xor
stos
sbb
or
push
je
jecxz,pt
xor
add
mov
mov
or
pop
jmp
movsl
popa
stos
cld
neg
lcall
mov
sub
sbb
mov
es
push
cmp
aaa
sub
push
iret
add
into
mov
mov
scas
mov
sti
mov
les
sub
sbb
and
faddl
push
data16
push
daa
sbb
dec
das
mov
mov
or
mov
push
insb
or
mov
add
arpl
xchg
pop
movb
jno
ljmp
mov
mov
sbb
jo
ret
loop
int3
test
xlat
testl
lcall
pop
std
popf
into
in
push
push
lea
and
sub
or
jle
cmp
xchg
test
push
sar
fildl
pop
push
int3
std
out
jno
mov
lret
mov
scas
jns
ss
xor
jmp
scas
gs
mov
dec
mov
mov
or
mov
jno
sub
pop
fcmovb
mov
add
jl
rcl
fidivl
jne
dec
mov
rclb
jle
xlat
adc
out
push
cltd
push
mov
xor
pop
das
ret
addl
cmp
jg
lods
mov
lock
cs
sbb
or
imul
adc
mov
xchg
call
scas
sbb
adc
dec
dec
inc
push
rcl
pop
push
aas
mov
mov
call
icebp
loope
dec
xor
lret
push
cmp
sub
mov
sub
push
arpl
and
das
add
aam
rol
mov
adc
insl
push
call
sub
pop
lds
stos
inc
cld
outsl
lret
dec
mov
pop
mov
movsl
arpl
movsl
es
xchg
clc
add
pop
mov
out
ljmp
sbb
dec
call
cmp
pop
fnsave
xor
mov
cmp
or
addl
mov
mov
push
stos
loope
jmp
adcl
push
and
cmp
jmp
icebp
aaa
xlat
jmp
scas
insl
or
mov
xor
mov
dec
divl
xor
inc
dec
adc
jae
and
cmp
xchg
test
xchg
test
in
in
and
mov
in
bound
int
aad
movsl
sbb
sub
push
fwait
sub
inc
cmpsl
shlb
insb
or
mov
sbb
pop
or
xor
dec
fwait
sbb
fistpl
jo
into
je
int3
pusha
dec
and
xchg
xchg
repz
push
and
out
xchg
cltd
inc
mov
and
and
push
aad
inc
test
test
fst
xchg
xchg
mov
aaa
xlat
js
sbb
add
mov
clc
fwait
out
test
inc
test
daa
mov
inc
testl
or
jbe
cmp
fdivs
push
pusha
fwait
xlat
and
lods
sbb
inc
pop
dec
xchg
out
dec
jns
push
pushf
dec
rclb
add
push
data16
outsb
cmpsl
xlat
es
hlt
int3
insb
adc
lcall
sub
push
jbe
jmp
push
push
fwait
mov
mov
clc
fcmove
sub
pop
xor
jg
adc
stos
jmp
and
push
inc
std
ja
push
addr16
adc
in
cli
adc
ret
sbb
aas
or
ljmp
dec
cmp
mov
out
jae,pn
push
in
sub
xchg
sub
jl
in
jo
xor
mov
sbb
cmpsl
sti
repz
pop
sahf
cmp
inc
scas
outsb
dec
jmp
in
or
cmc
xor
mov
mov
mov
mov
ret
push
loop
cmpsl
mov
adc
out
fsub
mov
lds
fistpl
fdivp
test
and
cmp
push
sub
jl
add
out
jge
sub
push
rcrl
pop
add
pop
popf
lock
ja
imul
scas
ss
jmp
xor
jne
xor
pusha
or
aas
sub
sbb
lods
mov
xor
cmp
or
xchg
adc
imul
shll
push
or
mov
xor
mov
fisubrl
jmp
add
inc
jae
jae
cmp
faddl
jne
hlt
int3
xor
adc
out
jne
inc
xor
inc
repnz
in
sub
fsubr
add
call
je
jle
lret
xor
in
bound
jo
repnz
jne
hlt
mov
inc
fcoml
cmp
mov
pop
lcall
nop
fidivrl
filds
mov
mov
cmp
push
fildll
frstor
lods
or
jnp
push
lods
add
dec
xchg
mov
nop
dec
inc
outsl
cmpb
aas
add
dec
jecxz
add
je
jp
out
pop
pop
hlt
bound
cmp
sahf
shrl
push
mov
mov
pop
aam
repnz
clc
push
inc
fwait
sub
mov
add
push
jb
push
testl
lock
jno
pop
stos
in
inc
imul
add
scas
push
data16
sub
mov
dec
inc
xchg
mov
das
sbb
xchg
dec
cmp
inc
xchg
lea
lods
out
cmpl
mov
jns
ror
inc
test
jb
pop
adcb
or
fstpt
dec
movsb
out
add
sbb
push
data16
inc
pushf
dec
loopne
adc
clc
ja
jo
aas
filds
ror
inc
insb
or
fwait
loope
xchg
mov
jne
push
int
fidivrs
sbb
out
out
sub
mov
fiadds
push
daa
lret
and
testl
out
add
fs
adc
jge
mov
mov
cmp
xor
inc
push
test
cmp
cmc
popf
mov
fistl
rol
xchg
fwait
orl
int3
sarl
sub
repnz
xchg
sbb
cmpsl
xchg
xor
lret
aaa
repz
pop
pushw
inc
adc
call
call
popf
in
lea
lods
int
cmp
insb
or
cmp
sub
fdivrl
in
lea
lods
int
cmp
insb
or
cmp
sub
fdivrl
in
lea
lods
int
cmp
insb
or
cs
fdivrl
in
lea
sbb
test
ret
and
xor
repz
inc
rcll
incl
and
icebp
arpl
push
icebp
inc
mov
adc
jecxz
rcll
and
adc
jmp
icebp
arpl
pop
mov
adcl
push
ret
cmp
push
and
cli
inc
lods
and
je
jge
jo
xorb
mov
int
xor
call
push
or
dec
xor
mov
inc
inc
out
into
es
fmuls
ds
fsubl
sbb
adc
in
repz
or
xor
adc
jecxz
push
out
xchg
or
adc
hlt
and
xchg
push
mov
mov
adc
jmp
mov
mov
rcrl
add
andl
adc
add
aam
roll
pusha
mov
or
imul
push
ret
faddl
loope
cmp
push
bound
xor
stos
rclb
xor
push
mov
roll
xor
or
fsts
inc
mov
adc
mov
inc
pop
lret
jl
xchg
or
bound
jo
inc
in
hlt
dec
popa
xchg
jno
and
push
ret
push
fistps
insl
cli
push
out
cmp
sbb
ret
inc
xchg
insb
or
push
cmpsb
pop
popf
xor
loope
icebp
arpl
push
roll
xor
add
jno
inc
rcll
and
adc
rcll
mov
adc
mov
cmp
push
sbb
ror
cmp
adc
es
test
mov
arpl
inc
push
cmc
pusha
adcl
out
jp
pop
cmp
xor
test
loope
js
sbb
mov
test
inc
and
sbb
fists
xor
shl
push
jle
cld
add
xchg
dec
shr
gs
and
fadds
pop
test
jp
rorb
sub
stos
adc
clc
mov
lret
mov
mov
and
and
cmpsb
cwtl
sbb
xor
rcr
loopne
mov
cmp
scas
fst
test
popf
rorl
stos
and
scas
push
xchg
mov
mov
pop
shl
inc
stos
push
mov
add
rorl
sub
cmp
mov
cs
mov
test
add
in
lods
repz
or
cltd
ljmp
and
pop
inc
mov
daa
push
mov
dec
jp
imulb
sbb
dec
or
lea
fwait
jo
cmp
push
pop
push
rcll
fmull
push
cmovnp
cmp
push
dec
popa
or
aas
sbb
or
hlt
inc
jae
mov
imul
and
mov
push
shl
inc
lea
jmp
js
into
mov
xor
cmc
ror
call
lret
xchg
mov
xchg
mov
inc
dec
rclb
mov
mov
jno
lcall
lea
push
das
adc
pop
jmp
cmc
xchg
and
orb
add
dec
or
ljmp
fwait
lcall
pop
or
mov
sbb
or
out
xchg
and
insl
pop
jb
xchg
pop
mov
movsl
pop
pushf
cltd
popa
stos
mov
inc
pusha
pop
pop
loopne
int3
sub
lret
and
jns
adc
into
cmpsb
push
loopne
scas
lock
or
je
jbe
loop
pop
xchg
test
insb
out
ss
dec
ss
and
pop
mov
mov
andl
push
roll
jle
popa
pop
xor
es
hlt
mov
cmp
imul
out
inc
notl
jno
push
adc
push
xor
stos
mov
movsl
cmc
or
sbb
adc
rorl
cltd
sub
mov
data16
xchg
inc
scas
negl
cmp
pop
cmp
sti
pop
in
push
cmp
rorb
outsb
xchg
xchg
lcall
sub
mov
cld
adc
or
cmp
add
inc
mov
push
jnp
and
inc
xor
call
icebp
pusha
pop
arpl
shll
loope
out
push
push
push
mov
ret
test
dec
push
cmp
jb
adc
lds
lahf
jmp
mov
in
inc
and
or
cmp
stc
cld
inc
test
lahf
push
rorb
push
mov
jno
mov
pop
and
adc
cltd
mov
inc
pop
xchg
divl
lret
cltd
icebp
adc
dec
inc
sub
dec
sbb
dec
aad
xchg
cmp
add
push
loope
outsb
dec
cltd
sub
mov
vcvtps2dq
dec
push
movsl
insl
loopne
add
push
sbb
jmp
in
aaa
clc
shr
or
std
out
repnz
mov
or
pop
mov
push
xchg
xor
cld
push
add
xor
ja
icebp
xchg
dec
mov
mov
cltd
loopne
idivb
or
outsb
int
xor
lods
and
fcmovu
add
inc
insl
mov
cmp
cmp
jno
jmp
addr16
xor
push
sbb
int
outsl
ret
hlt
sbb
push
push
push
and
xor
cmp
js
and
aaa
lret
ja
jo
mov
sbb
jne
jmp
inc
mov
in
add
xor
loopne
bound
pop
cmp
push
push
fnsave
fimull
jae
stos
pop
push
or
xor
jae
jnp
sub
rcrl
cmp
aad
aas
adc
in
push
icebp
cmp
jge
sti
dec
in
fisttpll
add
xchg
sub
or
mov
out
cmpsl
adc
ja
dec
inc
pop
xor
mov
stos
xchg
pushf
xchg
daa
shl
in
xor
xchg
stc
clc
or
pandn
sub
outsl
xchg
add
lods
inc
xchg
xchg
and
iret
jne
test
mov
pop
in
ja
daa
or
sub
sahf
add
mov
jne
push
lret
dec
dec
dec
lods
cmpsl
sbb
mov
sarl
or
adc
pop
roll
mov
cld
add
addr16
dec
scas
cld
wbinvd
addb
inc
mov
sahf
sbb
add
sbb
fimuls
idivl
roll
adc
push
mov
xchg
mov
inc
xchg
push
jne
cmp
xchg
and
cmc
es
xor
xor
ljmp
arpl
es
outsl
mov
andl
pop
daa
sub
jne
mulb
push
adc
lock
adc
lret
shl
ror
ret
jne
inc
movsl
dec
mov
pop
gs
lret
mov
mov
shrl
and
movsl
repz
fs
outsb
xchg
in
pop
inc
mov
sub
ljmp
pop
stos
push
jbe
outsb
rcll
add
sub
out
jge
xchg
out
sub
pop
mov
or
adc
pop
and
scas
xchg
push
mov
ret
push
jb
sti
inc
dec
adc
sbb
jl
clc
pop
jp
xor
inc
test
insl
sub
mov
fistpl
inc
xchg
adc
add
arpl
jnp
and
lret
add
ljmp
cs
or
rolb
shll
xchg
sbb
aam
cmp
mov
inc
fs
adc
fisubs
in
adc
push
out
or
fs
push
out
bound
xchg
repnz
pushf
push
or
jmp
dec
xchg
popa
adc
scas
fmull
pop
push
push
add
fwait
arpl
xlat
loopnew
lods
lret
scas
push
call
scas
jp
sub
stos
lea
test
xor
inc
push
mov
add
fwait
pop
dec
sub
daa
in
push
loop
sbb
or
loope
cmp
mov
sbb
dec
sub
pop
roll
adc
pop
ja
xchg
daa
cltd
sub
push
sub
cld
cmp
xchg
cmp
adc
std
mov
dec
pushf
pop
testb
lret
repz
int3
stos
movsl
push
xchg
out
jecxz
add
lahf
xchg
or
lea
xchg
fmuls
xor
cmp
les
lret
sbb
mov
out
and
ret
out
movsb
pop
jle
outsl
adc
hlt
dec
bound
mov
cmp
sbb
mov
ret
pop
and
jmp
scas
test
cwtl
mov
testb
mov
fsubrl
cltd
mov
mov
es
ljmp
pushf
sbb
jae
or
in
jle
pop
xchg
repnz
cmpb
xor
aas
mov
pop
cli
sub
and
xchg
lds
mov
outsb
enter
inc
xchg
scas
pushf
std
adc
stc
cmpsl
int3
aas
mov
nop
mov
jg
sbb
inc
and
mov
sbb
sub
orb
dec
add
xchg
inc
mov
sub
inc
jl
pop
cld
fsubs
xlat
loope
cld
iret
scas
outsb
add
data16
ljmp
fwait
jo
out
dec
pop
jge
scas
js
mov
lcall
pop
in
cmp
mov
mov
sub
mov
rorb
clc
add
cs
cs
jg
cltd
inc
lea
xor
fcomp
jp
sarl
adc
sbb
or
jmp
fcom
rcl
cmp
jmp
scas
insb
mov
cmp
xchg
iret
sbb
inc
aad
jb
adc
jne
scas
icebp
std
aas
data16
fs
les
iret
cmp
xor
mov
sub
mov
in
xor
mov
inc
adc
mov
push
jle
push
or
loopne
enter
push
inc
sbb
cmp
in
cli
or
outsb
lods
mov
js
mov
sub
xchg
es
clc
addr16
mov
xor
xor
jns
mov
bound
lock
lock
cmc
mov
push
push
arpl
imul
gs
sarl
pusha
jle
mov
out
adc
fstpl
push
arpl
or
loope
inc
daa
sub
je
ja
inc
push
and
int
mov
into
cmpsb
sub
cmc
insl
or
inc
in
loopne
shlb
sub
add
ds
ss
and
jb
ds
pusha
sub
sbb
mov
addr16
push
cmp
pop
push
pop
vpsllw
add
mov
loope
out
mov
push
pslld
sub
or
and
cmovbe
ss
arpl
je
xor
out
xchg
jo
inc
js
push
loopne
jmp
mov
int3
or
sub
and
mov
mov
fstl
shlb
fnstsw
cmpsb
dec
testl
mov
pop
cmpsl
mov
int
lahf
and
sub
out
xlat
cmpl
mov
fsubrl
addl
loope
sarl
fidivs
xchg
mov
mov
call
mov
mov
clc
std
push
mov
out
jns
in
push
pop
out
mov
sub
xchg
aas
fildll
xor
out
pop
push
incl
push
hlt
jb
jmp
pop
jne
jecxz
jp
test
outsl
lea
pop
mov
ss
test
mov
loopne
fdivs
cltd
fwait
mov
call
xor
inc
test
xor
and
mov
jbe
ds
push
jns
test
mov
jp
xor
arpl
or
push
xchg
mov
pop
test
push
pop
ret
adc
scas
push
xchg
jle
pop
int3
cmp
repz
dec
dec
xchg
or
jge
push
outsb
inc
jo
mov
in
loopne
test
or
xor
cmpl
xchg
data16
rorl
push
add
jecxz
cmc
daa
mov
mov
jl
sbb
out
xor
daa
cmp
mov
fwait
aad
les
jno
les
jl
lret
data16
movsb
popa
sub
das
jnp
pop
dec
adc
mov
push
cmp
fxch
jmp
loope
adcb
rorb
cmpb
shlb
add
adc
inc
movsl
mov
mov
add
mov
int3
daa
js
daa
decb
mov
or
mov
lods
pop
ja
out
dec
pop
sarb
icebp
clc
pushl
xchg
fwait
divps
mov
mov
pusha
or
add
mov
push
lss
sbb
adc
in
jge
mov
push
inc
pop
sbb
lds
fwait
leave
mov
mov
lret
push
cmpsb
aaa
je
lock
dec
leave
cmp
arpl
cmc
fdivrl
mov
cmp
aaa
dec
sbb
add
dec
xor
lcall
sbb
xor
add
out
add
es
push
and
push
xchg
dec
mov
and
adc
fcmovu
stos
icebp
movsb
rdpmc
cmp
xchg
cs
jmp
pop
mov
fcomip
pop
pop
imul
sub
adc
js
xchg
pop
inc
jle
popl
mov
mov
mov
sub
push
pop
pop
cs
std
jl
dec
sbb
adc
imull
cs
lret
cmpsb
outsb
rolb
add
add
js
ret
jo
pop
mov
aam
sahf
cmp
cmc
dec
pusha
add
and
mov
push
pop
mov
cltd
lock
scas
xchg
dec
jecxz
repnz
xchg
pusha
cmp
roll
or
mov
mov
lock
in
cld
sub
stos
cmp
or
into
mov
sbb
lea
jae
xor
les
pop
js
in
xchg
repnz
dec
mov
dec
xor
mov
push
jge
call
out
dec
mov
add
pop
mov
sbb
scas
mov
push
pusha
push
fcompl
pop
mov
xchg
lahf
negl
dec
shlb
push
popa
dec
shll
test
pop
shll
or
mov
test
mov
push
cld
adc
mov
clc
mov
add
pop
out
dec
sahf
ljmp
cmp
int3
xor
decb
mov
sbb
gs
std
sub
inc
mov
out
lods
call
dec
out
push
mov
ret
pop
in
cmp
pop
pop
imul
lret
repz
aas
ss
sub
push
inc
add
mov
es
dec
lahf
jb
jno
pop
jo
arpl
sub
jp
ret
push
loop
and
or
dec
sub
and
cmp
and
jp
fdivr
notb
jg
add
scas
loopne
das
mov
adc
mov
cmp
fcomp
mov
mov
gs
test
cwtl
cmp
inc
int
loop
inc
loop
and
repnz
rclb
test
mov
imull
shrb
and
fcoml
or
cmp
inc
aad
scas
fists
aaa
xlat
lret
cmp
mov
jecxz
fs
ljmp
mov
nop
push
lods
cwtl
mov
pop
sarl
call
xchg
adc
cwtl
insl
clc
add
jo
inc
mov
or
mov
scas
jns
jb
mov
je
cmp
cmp
rcl
nop
inc
dec
fdivrp
xor
insl
pop
xor
mov
mov
daa
sub
or
dec
or
sub
mov
mov
lcall
dec
repz
std
push
fs
es
lret
sub
pushf
pop
das
pop
test
xbegin
data16
mov
sti
int
sub
addb
or
sub
sub
pushf
repz
xorb
xchg
jl
dec
leave
lods
jl
adc
mov
dec
cmpsb
out
add
ja
jb
jae
mov
mov
sbb
loopne
cld
cmp
push
xor
inc
inc
mov
shrl
jno
sub
jmp
jmp
fists
filds
icebp
inc
fildl
mov
mov
jl
lcall
add
xchg
cmc
xchg
jp
test
rorl
aaa
dec
dec
test
insl
push
loopne
loop
imul
inc
das
out
push
push
cmp
adcl
lods
fildll
push
jl
add
fdiv
sbb
leave
mov
inc
adc
and
jmp
jecxz
pop
repz
shll
or
add
dec
xchg
and
in
add
jno
mov
inc
ret
inc
repnz
mov
mov
inc
push
cltd
sub
ljmp
fdivrl
push
or
or
aam
sahf
cmp
pop
outsb
mov
scas
aaa
lock
pushf
mov
out
rcll
scas
aas
xor
popa
jne
and
sbb
cmpsl
ret
leave
cmp
jmp
sub
cwtl
adc
les
frstors
shll
cmpl
cmpl
jle
insb
jnp
into
dec
es
out
xchg
js
jbe
push
fidivl
and
aad
mov
rcr
enter
das
mov
adc
out
sub
adc
jne
in
test
sahf
insb
inc
sbb
inc
xchg
jae
adc
pop
jnp
orl
and
adc
and
ja
lahf
and
pusha
les
mov
pop
lcall
push
lret
sahf
xchg
push
pushf
push
cmp
daa
call
lds
outsb
sbb
jae
jmp
js
push
sbb
mov
mov
push
or
je
mov
add
aaa
jecxz
sbb
push
adc
clc
jno
pop
pop
or
push
ljmp
sub
lret
jno
or
adc
jno
push
ret
les
dec
jbe
xor
ds
jl
dec
or
stos
imul
or
cmp
pop
lahf
push
mov
ljmp
in
imul
cmp
lds
scas
fildll
leave
sbb
iret
inc
mov
orl
lds
xchg
and
cmp
pop
sbb
sub
mov
outsl
pop
adc
jns
cmp
mov
lret
sti
in
or
dec
add
mov
js
lahf
jg
push
pushf
sbbb
les
aam
add
in
inc
std
out
inc
push
xchg
adc
push
jg
test
cmc
xor
sub
or
roll
inc
fsubl
es
repnz
mov
or
pushl
cmpsb
insb
pop
fimuls
xchg
mov
loope
gs
imull
in
or
jns
mov
or
mov
fadd
call
sarb
pop
enter
ds
cmp
jb
test
xor
mov
daa
xchg
aad
mov
clc
clc
xor
outsl
insb
pop
pop
lret
adc
mov
into
imul
or
fmuls
jl
movsb
inc
nop
cmp
js
xlat
gs
mov
mov
jmp
xor
xor
mov
and
mov
divb
push
addr16
push
in
bswap
mov
sti
pop
subb
push
js
dec
pusha
adc
mov
and
int
bound
sub
iret
aas
mov
mov
mov
ficoml
sbb
push
pop
sbb
and
popa
ret
shlb
or
mov
movsl
out
iret
pop
pop
mov
cmp
fisubs
ret
push
mov
popf
mov
loopne
pop
and
imull
ss
inc
pop
push
dec
dec
andb
dec
dec
stc
mov
xor
or
or
fimull
ljmp
sar
rorl
aas
fmuls
mov
fidivrl
lcall
xchg
and
xchg
clc
imul
mov
out
push
mov
ljmp
repz
jnp
jecxz
out
add
subb
js
adc
movsl
dec
cmc
fdivp
jns
bound
nop
jecxz
mov
xchg
cld
jl
jmp
sar
sarb
pop
lock
adc
js
in
push
mov
lahf
xor
push
mov
lds
mov
mov
jnp
push
or
mov
and
test
mov
pop
cltd
mov
clc
sub
mov
jecxz
xchg
sbb
int
pop
in
jne
inc
jge
and
pop
test
or
out
inc
out
in
mov
ret
imul
cs
mov
adc
ret
popf
stc
adc
dec
push
jg
popf
dec
loopne
cs
lea
arpl
sbb
mov
sbb
stos
loopne
int3
jb
add
mov
movsb
scas
lods
mov
mov
and
sbb
loop
test
mov
dec
test
sbb
aad
pop
sti
outsl
int
pop
dec
xchg
adc
mov
mov
dec
in
add
out
mov
data16
jle
push
ds
xor
pusha
test
repnz
add
pop
cwtl
and
lds
xorb
sub
insl
stos
xor
popf
xchg
jmp
fidivl
xchg
and
rorl
enter
out
jp
test
jge
mov
pop
pop
mov
add
adc
dec
in
icebp
pop
das
jp
pop
cmp
pop
cmp
or
sbb
icebp
xor
add
mov
sub
std
push
es
xor
sub
daa
ds
scas
popa
ja
push
out
add
faddl
dec
imul
int
sub
jnp
push
into
hlt
xlat
dec
mov
jl
cmpl
jg
enter
cld
inc
jno
adc
sahf
cmc
cmpsl
imul
cld
inc
mov
push
xchg
pop
adc
xchg
fucomip
adc
fcoml
mov
mov
pop
push
inc
aas
dec
call
adc
sub
mov
mov
xchg
sub
aas
ss
or
pusha
xchg
roll
xchg
jl
push
into
sti
neg
sti
aam
xchg
xor
pop
xchg
adc
xor
es
jge
mov
sub
mov
jl
add
lock
bound
xchg
xchg
faddl
mov
clc
push
movl
inc
mov
xchg
push
add
ret
add
jbe
adc
lahf
xor
dec
int3
jnp
cmp
jns
rolb
repnz
ljmp
or
sub
pop
sub
push
imul
fnstenv
lds
dec
and
pushf
jecxz
mov
push
and
sub
xchg
add
outsb
sahf
mov
aam
and
or
mov
fiaddl
mov
bound
test
fdivl
mov
adc
rcl
ret
and
adc
rcll
mov
adc
jecxz
rcll
and
adc
rcll
mov
adc
jecxz
rcll
and
adc
lds
inc
mov
adc
jecxz
rcll
and
xchg
sbbl
push
leave
imul
mov
outsb
cld
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
lods
sub
pop
and
adc
mov
or
add
pop
add
add
push
or
add
addl
ljmp
add
add
add
add
pop
add
add
add
add
add
add
jl
scas
add
add
pop
add
add
add
add
add
add
add
aam
ret
add
test
dec
add
test
add
add
add
pop
add
add
push
add
add
add
adc
arpl
push
adc
insl
add
add
leave
add
add
add
add
add
add
add
cmp
mov
add
add
cmp
dec
add
mov
jl
jge
push
add
xchg
jno
insl
add
or
push
add
add
push
and
add
add
add
add
add
adc
xchg
add
add
out
add
add
add
adc
lahf
add
add
loop
lret
add
add
add
add
add
add
add
or
add
add
pop
add
add
testl
adc
cmp
add
add
add
rolb
movsb
add
add
add
pop
add
add
add
add
add
push
add
addl
mov
add
sbb
xor
and
add
add
cmp
add
daa
add
das
add
push
add
add
add
add
add
add
mov
add
add
in
dec
add
mov
pop
add
add
add
insl
add
add
add
add
add
add
add
add
add
xor
fwait
add
insl
add
add
add
ljmp
add
add
add
add
add
add
add
verr
add
dec
add
add
push
add
xchg
add
aam
scas
add
lock
mov
add
push
add
add
add
add
addl
add
add
lcall
add
add
xchg
add
add
add
inc
add
add
add
add
dec
add
sub
push
add
dec
add
add
add
bound
popl
jmp
pop
add
or
dec
add
add
aam
jns
stos
add
add
add
add
add
sbb
movsb
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
fiaddl
aam
aam
jno
mov
mov
addl
add
add
add
add
popl
cmpsl
add
or
dec
add
add
add
or
jecxz
add
xor
data16
pop
add
add
add
add
add
push
jne
addb
add
add
add
pop
add
add
add
inc
add
str
fildl
push
add
add
add
add
add
out
add
ja
ret
add
xor
add
add
add
add
add
add
push
add
add
add
add
adc
lret
add
add
sub
mov
dec
js
cmpsl
rol
xor
and
or
mov
fld
out
xchg
ret
dec
sbb
xor
fcom
sub
out
jl
add
push
pop
sbb
shlb
sub
mov
sbb
xor
test
leave
mov
sti
pusha
add
mov
faddl
or
dec
not
sub
movsb
dec
sub
jno
addr16
xor
fucomi
push
mov
into
ret
lds
iret
fmull
insl
cmpsb
cwtl
sub
sbb
lret
xchg
xchg
lret
mov
cmp
js
imul
xchg
cltd
pop
pop
daa
sbb
subl
repnz
add
cli
movsl
in
sub
outsl
lret
or
inc
jno
hlt
enter
push
les
mov
jb
adc
sbb
adc
mov
rolb
lods
and
cmp
faddp
push
data16
aas
cmp
out
cmp
mov
cmpsl
leave
xor
dec
out
adc
mov
sbb
ljmp
or
test
mov
hlt
mov
cmc
shll
js
add
cmpsb
mov
or
dec
mov
cmc
into
and
or
push
in
dec
pop
jg
in
dec
mov
mov
in
push
test
cmp
inc
jae
cmp
in
jge
ss
mov
imul
sub
jns
icebp
xor
ss
adc
in
jg
push
dec
sub
std
cmpsl
icebp
or
or
add
js
mov
xor
dec
jnp
gs
and
add
pop
mov
xchg
xchg
mov
fimull
jns
xchg
insl
js
push
and
cvtps2dq
into
cmpsl
inc
faddl
or
pop
les
cs
fnstsw
out
push
sbb
mov
push
add
jl
push
pop
sahf
lds
xchg
loopne
cs
lahf
insb
mov
mov
xchg
bound
sub
cmp
roll
shrl
out
jl
adc
mov
pop
insb
cs
icebp
dec
dec
lcall
repnz
and
xchg
jmp
daa
push
or
mov
sbb
bound
push
mov
or
int
dec
test
jmp
dec
pop
push
inc
xchg
in
sbb
cli
popf
jg
aaa
fs
jbe
enter
jge
cmpsl
rcll
mov
jno
cmp
cmp
mov
and
je
loopne
mov
mov
xor
adc
sub
imul
inc
xor
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
