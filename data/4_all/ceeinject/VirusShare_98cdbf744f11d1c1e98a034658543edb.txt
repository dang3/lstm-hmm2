fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
lods
es
push
push
test
das
jmp
mov
xchg
data16
out
jns
movb
loope
out
out
push
mov
cmpsb
xchg
inc
xchg
jl
data16
xchg
push
movb
out
aas
ljmp
into
push
fimuls
scas
jg
outsb
mov
dec
jbe
insl
xchg
cmp
xor
sbb
outsl
mov
lcall
mov
movsl
jg
lea
lahf
subb
push
cmp
scas
mulb
imul
pop
test
dec
test
test
xchg
cli
mov
jnp
out
lahf
xor
cmpsl
pop
test
or
mov
in
mov
dec
mov
js
leave
ss
dec
inc
xchg
data16
jle
xchg
inc
inc
push
dec
push
jns
sbb
cmp
push
mov
mov
out
add
pop
cltd
dec
inc
jle
das
pushf
in
out
xchg
push
push
inc
cltd
decb
or
sub
push
mov
cltd
fsubrl
into
ss
test
shlb
xor
es
pop
rcll
cmpsb
mov
inc
lahf
dec
outsl
cmpsb
jle
dec
lahf
pop
cs
ds
push
fcompl
xlat
test
addl
jae
fs
pop
xchg
sub
xor
leave
data16
subb
pop
addl
test
out
mov
les
enterw
ret
fs
rclw
jecxz
xchg
push
xchg
push
mulb
push
mov
mov
push
into
push
cmpsb
jbe
inc
xchg
cmpsb
data16
xchg
ss
notb
movb
mulb
out
push
push
mov
cmpsb
jbe
inc
xchg
cmpsb
data16
xchg
ss
notb
movb
mulb
and
adc
in
mov
sub
adc
rorl
stos
shll
roll
xor
movsb
ja
shrl
jp
test
in
jb
subb
jnp
and
cli
dec
out
jbe
test
and
mov
decl
mov
add
add
xor
lret
jecxz
fs
out
js
in
xchg
ss
lcall
roll
xchg
mov
ficompl
lret
pop
fidivrs
repnz
mov
pop
sbb
insb
jg
movsl
pop
mov
loopne
mov
and
addr16
repz
inc
notl
mov
mov
mov
outsb
jo
add
push
lods
cmp
ds
pop
push
dec
insb
daa
leave
movsl
dec
gs
xchg
sbb
or
pusha
xor
addr16
mov
cmp
and
sub
aad
mov
inc
out
test
mov
jae
adc
mov
adc
and
cs
ds
push
jmp
and
out
stos
stos
pop
jp
into
dec
data16
addl
sbb
fldl
fimuls
mov
mov
add
ja
sti
push
jnp
and
pop
xchg
stos
xor
mov
lds
push
add
imul
aam
jmp
enter
sbb
je
pop
dec
add
insb
test
fcmovnbe
gs
insl
push
push
ja
and
fs
iret
jnp
mov
pop
pop
push
rol
lcall
push
ret
out
xor
inc
cli
scas
push
xor
and
pop
mov
inc
xchg
daa
enter
imul
aad
add
push
scas
into
pusha
loopne
xlat
fimull
insl
leave
notl
dec
in
xchg
add
aam
jb
aas
mov
adc
cmp
push
imul
xlat
or
scas
inc
mov
and
adcl
fsubrs
fs
jmp
push
inc
test
frstor
ljmp
mov
inc
mov
in
cmp
mov
jne
jae
adc
stc
sbb
icebp
fdivrs
movsl
ret
pop
test
scas
movsb
cld
jg
test
imul
popa
mov
test
xchg
std
cmpsb
mov
jg
pushf
push
jmp
mov
mov
inc
xchg
mov
js
sub
adc
int
push
gs
or
cmc
dec
mov
das
adc
repnz
mov
jae
gs
lods
cmpsl
lret
inc
cmp
lods
push
mov
sub
gs
lock
fs
jge
and
mov
jl
mov
mov
scas
sbb
ffreep
dec
mov
lods
lods
in
lahf
sarb
in
fdivrs
sub
outsl
int3
stos
xor
pop
sub
xchg
in
test
cmp
fidivl
lods
mov
push
out
mov
push
cli
jo
mov
outsb
cltd
loopne
pop
test
lahf
push
mov
xlat
sbb
mov
in
idivb
stos
and
xchg
mov
popa
and
cmc
xor
push
cmp
push
mov
cs
dec
lods
inc
jbe
jae
cvtps2pd
cmp
add
loope
dec
mov
out
fistps
arpl
lods
xor
in
hlt
xor
adc
fidivs
xchg
mov
push
mov
and
icebp
mov
jbe
popa
rcrb
and
pop
adc
push
fistpll
lret
pop
lods
dec
aas
push
pop
xchg
ret
mov
cmp
add
gs
scas
jae
adc
fisttps
pop
ljmp
and
aam
lret
adc
mov
aam
gs
out
or
mov
cmp
int3
jecxz
adc
push
cltd
out
fldenv
call
movsb
sarl
dec
push
adcl
in
notl
int
add
daa
add
movsb
stos
sbb
mov
stos
mov
daa
jp
fsub
stos
incb
mov
sahf
cld
dec
or
dec
inc
fbld
xchg
pusha
sbb
dec
mov
sub
inc
nop
call
outsb
push
mov
subb
inc
adc
sbbb
xchg
dec
std
push
pop
sbb
aad
lods
dec
dec
dec
or
add
pop
mov
dec
test
xor
pushf
repnz
adc
popf
jmp
push
std
dec
cs
pop
xchg
leave
xchg
aaa
lods
mov
pop
xor
cmp
sub
sub
cmp
lahf
out
inc
inc
xchg
movsb
jns
bound
inc
loope
push
dec
inc
or
mov
push
ret
add
inc
repz
mov
in
pop
movsb
movsl
xor
insl
pop
cmp
cmc
les
xor
mov
sti
sbb
jecxz
lods
inc
push
sbb
dec
outsl
jg
xor
iret
cmpsl
sbb
fldt
mov
and
int3
jle
cmpsb
lods
sti
testb
icebp
xchg
icebp
mov
scas
fdivl
push
push
int
shll
insb
test
insb
sub
std
push
sbb
inc
call
in
add
aam
jbe
cli
rcrb
inc
or
xor
popa
or
xchg
in
xor
pop
pop
data16
jmp
xchg
outsl
imul
mov
fsubp
int3
push
cmp
stos
dec
std
inc
bound
dec
stos
adc
stc
js
or
sbb
sbb
ret
pop
sti
sahf
and
sbb
movsb
sbb
jne
jb
cwtl
cltd
aas
inc
ret
and
jnp
aaa
jle
ret
fcomps
ds
les
sar
jb
loope
in
jl
aas
cs
ret
stos
dec
push
aaa
push
xchg
insl
mov
mov
lret
pop
aad
mov
incb
mov
mov
into
jo
cmp
mov
addl
xchg
fadds
jo
push
scas
popa
add
shrl
jnp
mov
int3
bound
xor
sub
fcom
in
mov
popa
out
dec
pop
push
or
push
sbb
gs
mov
and
push
jge
pop
jmp
sahf
addr16
jl
popf
test
sbb
dec
mov
xchg
lcall
push
xchg
cmpsb
popf
sbb
popa
cmp
ljmp
and
test
dec
sub
movsb
dec
and
inc
movsb
shlb
sbb
in
loope
sbbb
in
into
pop
dec
lret
sbb
adc
push
ja
fildl
pop
ja
mov
add
push
pop
pop
lods
ret
or
shrb
jg
outsl
sub
setae
imul
cs
or
fmuls
cmp
insb
pop
insl
pop
pop
addr16
mov
jo
mov
push
movsb
adc
es
stc
dec
sbb
sub
mov
arpl
mov
js
sub
xchg
inc
xor
adc
or
push
xchg
sub
idivb
push
aaa
push
or
pushf
jge
dec
insb
test
int
mov
daa
movsl
push
clc
fistps
out
loope
dec
rcrl
mov
or
faddl
push
add
daa
pop
pop
pushf
xchg
sbb
imul
cmp
ds
xor
fcmove
shlb
outsb
push
push
ds
xchg
cmp
imul
ja
xchg
xor
les
rcrb
pop
inc
out
fucom
subb
insb
in
pop
mov
sub
pop
repnz
nop
addr16
ds
scas
shl
enter
or
sub
popf
push
sbb
cwtl
fsts
mov
jmp
inc
adc
xor
repz
mov
addb
lods
clc
pop
rolb
mov
pop
or
out
in
xor
cmpsl
sbbb
pop
fwait
arpl
nop
jnp
rorb
outsl
mov
pusha
push
lods
cmp
push
out
fiaddl
push
aam
jmp
cmpl
pop
cld
iret
pop
ds
jae
sbb
popf
iret
les
jmp
mov
cmpsb
inc
repz
iret
leave
cs
int
movsl
jo
std
mov
push
cli
cmpl
ss
fiaddl
jno
pushf
dec
mov
push
in
push
cmpsb
jle
lret
adc
adc
xchg
test
iret
out
mov
xchg
fsubs
shll
sub
iret
push
push
shll
mov
fs
imul
lea
out
jmp
add
sbbb
loopne
lcall
pop
dec
dec
lods
rcrb
inc
rcl
syscall
mov
lahf
sub
jmp
mov
leave
cmp
gs
bswap
bound
dec
xchg
int
pop
sub
outsl
ret
adc
adc
jle
xchg
cli
add
xchg
in
movsl
lret
jg
sarb
into
mov
mov
mov
jbe
bound
sbb
cltd
test
pop
cmp
ret
pushf
imul
xchg
and
lock
mov
ret
inc
dec
loop
cwtl
dec
into
xor
dec
xchg
std
insb
mov
nop
jl
out
mov
mov
rcll
cmp
inc
push
icebp
sbb
ret
cmp
loopne
sub
rcr
fbstp
add
insb
mov
mov
mov
test
xchg
xor
push
or
out
or
push
movsb
sub
popa
sub
and
leave
jo
shrl
jl
mov
and
inc
jge
icebp
mov
dec
push
jne
push
xchg
and
loope
push
mov
sbb
jbe
out
inc
ret
stos
sti
ljmp
xchg
mov
pop
jb
arpl
adc
cmpsl
aas
enter
movb
mov
cwtl
les
mov
jnp
fisttpl
sub
jp
jns
cmpsl
push
or
mov
mov
scas
add
aam
data16
lds
or
pop
adc
insb
push
outsb
bound
repz
ds
mov
adc
stc
sub
mov
mov
mov
stos
nop
pop
negl
add
add
xchg
pop
leave
mov
cld
adc
mov
adc
push
dec
dec
aas
popf
out
inc
xor
jo
mov
cwtl
jnp
shll
cmp
fidivrs
inc
rcll
jle
popa
pushf
cli
faddl
cmp
stos
out
sbb
xchg
adc
test
mov
sbb
adc
insb
or
lds
pop
insl
aad
sbb
sbb
cld
repnz
sub
jg
lcall
mov
notb
push
adc
inc
loopne
lret
insb
repnz
dec
stos
test
mov
pushf
and
andb
pop
jecxz,pt
mov
icebp
or
xchg
lret
aam
out
jge
mov
not
enter
mov
or
and
xlat
mov
pop
aaa
fistl
adc
hlt
cld
rolb
lods
std
or
jecxz
inc
mov
push
push
call
sub
fldt
jecxz
adc
jo
je
mov
sbb
out
dec
fstl
arpl
pop
jne
repz
pop
xchg
cld
in
aas
rorl
loope
je
rcrb
icebp
dec
cld
negl
out
out
repnz
aad
push
call
fwait
shrb
test
and
and
aas
add
xor
mov
rclb
cmpsl
out
push
les
cld
insb
cmp
dec
xor
hlt
jne
mov
dec
aas
dec
movsb
sbb
cltd
sbb
push
push
mov
mov
mov
fldt
add
pop
xor
pop
in
inc
cmp
aaa
or
lret
mov
repz
mov
dec
arpl
jne
aaa
mov
jno
push
mov
mov
es
sub
notb
out
mov
or
mov
jg
cmp
push
dec
movsl
pop
outsl
sbb
lcall
inc
daa
pop
sbbb
xor
rcrl
adc
lcall
xor
das
inc
les
dec
icebp
test
dec
pop
and
cmp
vcvtsi2ss
jl
inc
xchg
int
push
cmp
xor
js
mov
js
cmp
and
call
sbbl
add
push
pushf
scas
push
cmp
jmp
in
js
or
lcall
sub
das
pop
jl
pop
jb
enter
in
add
pop
xor
dec
cwtl
sbb
mov
jp
out
jecxz
adc
call
dec
outsl
add
or
icebp
add
jg
and
rclb
inc
ret
mov
xchg
div
pop
push
shrl
xlat
xchg
in
dec
sub
jmp
adc
shl
sub
jmp
lret
ljmp
xor
dec
xor
aaa
mov
test
inc
and
cwtl
xlat
push
scas
pusha
ljmp
push
adc
clc
repnz
cmpsl
mov
insb
mov
push
lret
jno
cmpsl
data16
pop
je
xor
lea
cmp
xchg
xchg
pop
push
test
out
jg
dec
jp
nop
add
repnz
jmp
imul
xor
mov
xlat
cmpsl
lret
mov
push
mov
pusha
mov
push
adc
or
xchg
inc
pop
movb
mov
insb
aas
scas
mov
aaa
roll
shlb
mov
out
ss
mov
mov
shlb
int3
sbbl
lock
and
dec
cmpsb
xlat
dec
movsl
das
lahf
daa
pop
add
gs
cmp
xor
insb
iret
cmp
dec
mov
jns
fldt
cltd
cmp
or
sar
popa
and
cmp
das
xorb
push
mov
push
stc
fsin
mov
push
loopne
shr
dec
mov
rclb
lahf
sti
mov
push
je
push
out
push
push
xchg
push
add
sub
fiadds
dec
jecxz
loope
mov
pushf
orl
jecxz
call
jp
das
sbb
fucom
add
lods
mov
and
jp
add
shll
sub
test
xchg
dec
insl
incl
movsb
jns
pop
aam
clc
mov
jae
rcrl
cmp
cs
xchg
inc
outsl
sahf
fnstsw
add
je
ja
lods
lahf
xchg
pop
aas
add
cltd
fs
decl
insb
jnp
dec
and
mov
mov
push
or
addr16
enter
mov
xchg
je
or
mov
bound
push
inc
pop
cltd
adc
outsl
add
xor
and
or
sub
fsubr
outsl
pop
adc
rolw
adc
xor
push
cmpsl
push
jg
dec
cmp
into
ret
xchg
inc
dec
and
xor
dec
push
out
adc
jne
and
sbbb
test
or
sub
scas
out
outsb
jecxz
pop
mov
punpcklwd
iret
mov
adc
jmp
aaa
ret
and
mov
call
and
mov
cmpsb
hlt
lret
imul
clc
movsl
lea
sub
pop
xor
sbb
inc
test
fcomps
lods
adc
mov
jmp
cmpsl
out
arpl
xchg
inc
add
pop
lret
adc
and
push
pop
shlb
test
lods
divl
push
push
inc
ljmp
mov
mov
add
cli
add
sahf
in
and
in
xor
aad
pusha
pop
nop
xchg
daa
gs
imul
push
iret
dec
cmp
cwtl
add
fdivr
into
rolb
sbb
xchg
mov
rcl
pop
and
add
test
adc
js
cli
inc
sbbl
mov
cmpb
push
mov
sbb
push
out
cwtl
sbb
fdivl
lcall
adc
je
ds
loop
lds
adc
add
pop
rcrl
xchg
cmp
mov
mov
out
xchg
and
mov
fs
outsl
test
leave
int
xchg
adc
xchg
dec
movsb
ss
dec
stc
add
lods
and
or
in
ret
mov
or
out
inc
jnp
inc
ljmp
sub
mov
in
mov
arpl
inc
xor
pushf
ss
sub
imul
sahf
fdivl
out
jecxz
lea
lcall
xchg
jp
out
sti
test
xchg
cmp
fisubrs
aad
rol
jecxz
xchg
aad
es
sbb
cmp
or
sbb
xlat
lret
psubw
dec
sub
iret
movsl
mov
enter
xchg
repnz
inc
jg
mov
lock
xorl
xchg
mov
repnz
enter
cmpb
movsl
iret
ljmp
sti
push
lea
std
fadds
jae
mov
fisttps
mov
cwtl
pop
in
iret
pop
lret
mov
outsl
loopne
test
out
inc
imul
sahf
sub
and
movsl
lret
stc
repz
inc
cmp
stos
in
xor
push
movl
dec
in
in
sub
imul
mov
aad
cmpl
cmp
pop
adc
pop
ret
sbb
out
or
mov
lret
mov
je
jg
fstpl
cmp
mov
add
pop
mov
mov
xchg
or
addr16
cmp
cmpsb
daa
and
jns
cmc
repz
daa
lcall
popa
dec
xor
jmp
adc
push
mov
mov
mov
xor
jl
outsl
fists
pop
inc
ljmp
in
gs
ljmp
xlat
repz
mov
push
rcrl
xchg
pop
cld
sub
dec
inc
gs
and
dec
test
pop
jb
scas
aad
push
adc
jbe
daa
jmp
xchg
lds
test
stos
adc
out
out
mov
xchg
xlat
mov
es
jo
push
dec
cld
inc
xchg
lret
cmp
add
fists
lock
fildl
mov
js
xor
test
mov
xchg
nop
fiadds
dec
lret
xor
jo
and
in
cwtl
push
into
shll
int3
or
pop
cs
or
leave
icebp
cmpsb
and
lcall
xchg
add
insb
dec
xor
push
loope
daa
push
sub
pop
xor
jmp
test
popa
data16
cld
icebp
mov
pop
out
push
and
jb
jo
pop
sti
or
insb
push
andb
xchg
loope
jl
aad
sub
jecxz
andl
shll
cli
sub
sub
adc
xor
iret
mov
mov
ss
stos
js
das
leave
lahf
pop
mov
sub
jne,pn
mov
js
xchg
cmp
mov
jecxz
cmpb
cmpsb
lahf
xor
subl
sub
lock
cmp
sub
inc
insb
cmp
orb
push
pop
lcall
xchg
inc
arpl
and
and
adcb
jge
dec
ret
jl
mov
add
push
ljmp
pusha
mov
jp
push
cmp
out
std
sub
andb
mov
adc
ret
out
push
jnp
xchg
in
inc
xor
adc
bound
xchg
cli
int
insb
movsl
push
xchg
pop
ret
dec
sub
aad
cmp
fdivs
cmp
jg
movsl
cmp
mov
push
lods
xor
mov
divb
enter
sbb
addr16
dec
iret
std
popa
sarb
ds
pop
ljmp
into
dec
add
inc
loopne
lock
aaa
into
mov
cwtl
fstps
mov
fdivs
lcall
mov
mov
imul
pop
dec
push
testl
sbb
repnz
js
mov
cmp
jne
mov
lds
jne
divb
ljmp
xlat
mov
stos
and
in
or
mov
mov
je
inc
mov
jae
mov
sub
pop
rcl
xchg
jp
sbbb
xlat
loopne
std
and
jns
adc
iret
fldcw
call
shl
sub
out
fnclex
sahf
imul
popa
repnz
repnz
xchg
xchg
pushf
imulb
enter
jb
std
xor
or
mov
jg
xor
pusha
cmp
and
pusha
mov
in
pop
mov
test
mov
push
xor
rcll
data16
orb
mov
add
mov
adc
xchg
add
xor
das
lret
push
fdivrl
mov
ret
push
lret
add
lret
aad
js
fsts
out
test
mov
ljmp
rcll
fwait
outsb
ja
or
mov
cmp
es
das
inc
push
push
lock
outsl
ds
das
ljmp
mov
xor
scas
lds
scas
or
repz
inc
mov
fimuls
xor
inc
xchg
xor
lret
pop
add
lret
test
push
mov
cmpsb
jbe
inc
xchg
cmpsb
data16
xchg
ss
notb
movb
mulb
out
push
push
mov
cmpsb
jbe
inc
xchg
cmpsb
data16
xchg
ss
notb
movb
mulb
out
push
push
mov
cmpsb
jbe
inc
xchg
cmpsb
data16
xchg
ss
notb
ret
ret
xor
add
push
mov
cmpsb
jbe
inc
push
xchg
mov
inc
loope
outsb
scas
mov
mov
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
or
pop
out
idivb
cmp
mov
les
pop
inc
dec
push
xchg
addr16
jbe
pop
int
xor
or
sbb
sub
cmp
push
push
cwtl
pop
mov
push
fsubs
call
fsubp
mov
dec
xchg
adc
mov
pop
leave
adc
gs
jg
push
lcall
stos
jnp
pop
or
jmp
mov
imul
adc
pop
mov
fistl
pop
cltd
shrl
ret
xchg
ja
fs
push
sti
call
cs
mov
pusha
xlat
inc
jmp
movsb
sbb
sub
mov
mov
test
and
cmp
aas
add
sbb
sub
cmp
test
cmc
push
or
sahf
mov
ss
cmp
cmp
sub
mov
jecxz
outsb
jnp
pop
cmpsb
test
and
ss
jbe
push
mov
leave
jne
not
out
pop
jae
popw
pop
stos
pop
sbb
mov
jle
shlb
push
popf
daa
add
xchg
cltd
test
cmp
pop
idivb
xchg
pop
cmpsb
push
push
xor
jbe
push
hlt
push
ss
xchg
ja
inc
mov
xor
cs
in
or
pop
mov
pushf
inc
xchg
cltd
dec
xchg
pop
xchg
pop
mov
or
jmp
adc
jbe
sub
test
movl
js
mov
data16
mov
es
sbb
sub
cmp
push
push
cwtl
data16
mov
es
rorl
push
movsb
cmc
das
popf
push
aam
inc
inc
push
psrad
cmp
sub
cs
arpl
mov
jns
imul
and
and
stos
test
call
sbb
out
mov
jg
push
rclb
pop
or
dec
mov
inc
push
jae
or
rcr
sbb
add
push
fstpl
inc
inc
cmp
mov
out
sub
std
loopne
dec
ljmp
jo
push
and
addr16
fsub
sbb
cli
push
jle
add
repnz
push
push
sbb
popa
push
cmpsl
mov
aas
mov
scas
xchg
xor
inc
ficomps
push
nop
rcll
xchg
jmp
fdivp
in
shll
test
inc
ljmp
push
jnp
pusha
jae
pop
or
xor
xchg
cltd
shll
leave
xchg
popa
mov
hlt
sub
xchg
pop
mov
mov
sub
leave
fsts
rcrw
aad
les
push
ss
pushf
pop
pop
rorb
jns
ds
pop
mov
cmpsl
mov
jmp
mov
xchg
mov
dec
fistpll
mov
aam
ja
fiaddl
xor
fs
adc
or
insl
rcr
aam
add
and
pusha
xor
sub
in
call
fs
lds
push
loop
add
xor
cmpsb
jecxz
adc
pop
add
pop
lock
xchg
mov
test
push
xchg
out
sub
add
shlb
and
sub
movsb
fimuls
imul
das
or
adc
fwait
sbb
scas
pop
sub
clc
icebp
xlat
dec
mov
cli
adc
stos
mov
xchg
xor
fdivr
dec
cli
push
mov
jmp
ret
int3
fs
pusha
jp
lods
in
add
pop
adc
xchg
push
or
gs
cmp
das
das
dec
pop
shl
incl
adc
jp
insb
rol
adc
dec
stos
inc
cmp
in
movsl
and
sti
pushf
testl
add
loop
jg
divl
ret
xor
cmp
lret
ja
push
test
sub
jno
push
xor
pop
inc
cmp
ljmp
adc
lret
loope
adc
jg
movsb
stc
xchg
jmp
or
test
xchg
frstor
test
dec
dec
call
and
inc
and
jmp
data16
pop
or
sub
mov
ja
pop
jno
jl
sbb
lea
jnp
mov
add
push
sbb
mov
dec
add
xchg
mov
xor
cmp
das
push
and
push
sub
pop
mov
mov
xchg
jge
neg
je
sbb
inc
test
int3
xor
xchg
sbb
mov
pop
cli
sub
lret
call
ror
jae
sbbl
shlb
stos
lods
movsl
in
pop
xor
and
pop
jg
add
movd
dec
out
adc
lret
shlb
xchg
mov
or
dec
xor
stc
mov
enter
sbb
in
ja
iret
jg
mov
mov
sub
mov
mov
lfs
test
lock
lret
push
xchg
push
ficoms
nop
les
push
jne
daa
xchg
push
addb
sbb
jbe
adc
sbb
fidivl
dec
stc
es
xor
adcb
jnp
jne
cs
mov
fsub
add
adc
push
lods
loop
or
idiv
into
cmc
in
fistps
xchg
mov
jle
inc
rcrl
addr16
clc
int
aad
or
cwtl
scas
mov
movsl
hlt
aam
fwait
les
jecxz
xor
shl
cwtl
sbb
cmpsb
xor
mov
mov
andl
dec
mov
sbb
pop
jo
fstpl
clc
push
fs
sub
mov
rcll
jg
lret
jecxz
mov
adc
add
xor
sbbl
in
jnp
cmp
mov
lea
movsb
jb
stos
sahf
xor
mov
add
and
mov
pop
sahf
test
jmp
push
insl
jno
popf
test
ja
sbb
stc
hlt
jne
cltd
mov
mov
mov
aad
sahf
mov
xor
cmc
js
call
cmpsl
vcvtsd2ss
adc
pop
test
mov
outsl
mov
sbb
jb
mov
inc
pop
out
andl
cmp
push
rcrl
rorb
cmp
mov
fldt
jno
jl
call
pushf
xchg
or
loope
push
repz
loopne
mov
cmp
and
add
sub
lods
sub
mov
insl
pushf
pop
lcall
inc
test
aas
lds
loope
inc
jl
stc
in
es
rorb
cltd
push
xchg
sbb
mov
hlt
mov
or
popf
clc
ljmp
into
sbb
in
jae
scas
ja
icebp
jg
push
leave
mov
movsb
shr
cld
jle
fistpl
xor
cmp
fcoms
cmpsl
insb
cmp
xchg
jmp
push
xor
sub
jbe
jb
inc
out
cmp
adc
rorl
sbb
xlat
xchg
jns
arpl
sbb
cmpsb
mov
push
outsb
xchg
lods
mulb
movsl
mov
mov
dec
mov
ret
nop
sbb
push
int
loope
pop
or
stos
jl
ja
dec
push
adc
into
leave
cmp
add
mov
shr
test
out
jns
mov
shll
adcl
fadds
xorl
add
lds
push
xor
add
iret
arpl
std
jmp
scas
cmp
and
sub
cmp
mov
inc
mov
push
add
cwtl
decb
adc
rol
mov
ljmp
sub
dec
jnp
fs
out
xor
enter
lret
loope
mov
xor
push
mov
cli
pop
scas
repz
jae
subb
lahf
push
push
sti
mov
pop
call
sbb
cli
lret
adc
xchg
std
pop
and
popa
mov
ja
and
ljmp
int3
mov
loope
and
mov
into
cs
inc
xchg
daa
dec
fstl
jecxz
jbe
add
jecxz
mov
lock
mov
or
aam
xchg
xor
clc
adc
imul
cwtl
dec
das
subl
add
rolb
lea
adc
mov
hlt
rolb
ss
mov
sbb
in
into
stos
lock
daa
mov
inc
push
fdivs
sub
adc
mov
test
movsl
pop
or
cmc
mov
hlt
rcrl
loopne
je
fcomps
rcl
pushf
fwait
imul
out
jo
mov
adc
dec
and
cmp
pop
or
sbb
testb
test
mov
cmp
ja
movsl
push
dec
jmp
inc
cmp
push
push
test
dec
cmp
push
push
outsb
push
and
gs
ror
lret
push
sbbb
inc
jb
out
fstpl
ror
in
gs
es
jmp
dec
and
sub
sbb
fwait
aam
movsb
mov
fisubrl
cmpsl
out
iret
jp
sarb
add
pop
cmp
ret
or
add
mov
lds
sbb
enter
aas
mov
or
push
std
fcmovu
loopne
adc
inc
sbb
dec
xchg
mov
pop
lcall
ja
pop
push
jle
dec
shl
add
push
and
jmp
sbb
sub
add
dec
notb
call
lods
faddl
sbb
insl
cmp
aad
iret
pushf
bound
outsl
adcb
adc
add
ret
push
sbb
mov
inc
popf
add
cmc
or
imul
rcrl
das
mov
pop
jno
in
dec
imul
pop
xchg
sub
xor
mov
push
dec
gs
stos
mov
adc
movsb
pop
xor
push
pop
cmpsl
dec
xchg
leave
insl
fisubl
mov
inc
mov
sbb
mov
popf
sbb
push
mov
xchg
movsb
insl
sub
push
testl
mov
lea
and
xlat
imul
sarl
sbb
fildll
es
fmull
addr16
ss
sub
jge
shl
mov
jge
pop
es
fnsave
xchg
ljmp
in
push
push
push
aas
xchg
dec
scas
out
xchg
xor
mov
in
xor
cmc
sbb
mov
jecxz
inc
fs
adc
jge
inc
jmp
fnstcw
xchg
mov
jno
cmp
cmp
cmp
sub
je
jp
lret
dec
inc
daa
idivl
and
lods
add
daa
fdivrs
mov
scas
mov
test
cld
and
cmc
andb
je
mov
mov
adc
or
pop
sbb
je
sbb
fiadds
inc
loope
repz
pop
add
add
mov
lea
cmp
jge
fcoml
mov
ret
mov
inc
fwait
or
leave
xchg
fcmovb
rorb
mov
mov
and
adc
inc
dec
ret
mov
sbb
ret
sbb
xor
icebp
loop
hlt
jo
inc
push
data16
cld
and
das
cmpsl
dec
sahf
in
push
ss
andb
cmp
sub
jmp
int
jl
leave
loope
push
inc
insb
lcall
ds
fildl
xchg
lods
xchg
or
mov
push
test
ja
inc
out
push
dec
fsubrs
add
sahf
aad
and
pop
loope
xor
inc
xchg
cmp
ds
or
jle
fldcw
lret
xlat
cltd
add
push
push
pop
lods
in
mov
dec
mov
push
or
jmp
mov
scas
nop
push
loop
xor
adc
mov
cli
mov
mov
imul
cmpsl
ljmp
dec
pop
imul
cs
pushf
pushf
pop
fimuls
push
ffree
loope
testl
inc
inc
cmp
mov
mov
mov
sub
scas
add
mov
ds
sbb
pop
int3
push
dec
lock
xor
rcr
mov
cmp
shrb
mov
xchg
cwtl
inc
outsb
cmp
loop
scas
adc
loope
test
lea
and
or
inc
mov
insl
jae
push
pushf
lret
fsubrs
add
push
lds
movsb
push
insb
setno
inc
dec
push
inc
dec
sti
inc
inc
pop
jmp
in
xchg
inc
nop
add
push
xchg
ret
mov
shlb
xor
dec
jecxz
xchg
xor
push
sti
or
std
dec
stos
int
pop
push
cltd
loope
insb
leave
xchg
push
ds
push
push
cltd
mov
jae
xor
mov
mov
sub
stos
outsl
arpl
lret
pop
repz
or
outsb
push
mov
sarl
aaa
adc
pop
mov
in
addr16
sub
cmp
ljmp
and
sub
aaa
jecxz
cmp
sahf
mov
or
or
mov
nop
cld
rol
lcall
mov
xor
mov
xchg
xchg
daa
jge
dec
in
ljmp
loop
cmp
pop
nop
inc
clc
cs
xchg
loopne
adcl
das
push
add
lea
rcrl
mov
xchg
add
ret
cwtl
rcrb
cmpsl
inc
int
loope
dec
in
pop
rcrb
imul
push
cwtl
loop
jecxz
pop
pop
dec
repz
ds
mov
add
pop
cltd
cmp
push
add
minps
xchg
fldenv
jmp
insl
cld
and
mov
sub
pop
inc
leave
outsb
shll
pushf
adc
xchg
cld
ret
pop
lock
insl
sti
jae
mov
adc
ret
dec
sbb
cmp
push
lods
add
jne
arpl
out
sub
pop
mov
add
inc
lock
sub
imul
jecxz
add
mov
pop
mov
mov
ljmp
lods
dec
insl
and
in
pushf
and
mov
in
std
out
cs
mov
pushf
lock
or
dec
and
out
pop
jb
jb
add
dec
cli
add
and
test
mov
pop
sub
push
mov
mov
xchg
fsub
aad
mov
sub
sub
ror
xchg
insb
xchg
adc
dec
cmp
nop
nop
mov
sub
sub
push
in
movl
mov
into
push
or
xchg
sbb
jae
and
cmp
arpl
into
fwait
pop
das
sub
mov
sbb
pusha
imull
push
lods
out
mov
lods
xor
sub
xchg
pop
shll
iret
sub
insl
add
xchg
xor
pusha
daa
ficoms
or
outsb
add
fbld
cld
xchg
fiaddl
test
iret
lret
dec
fbstp
push
hlt
and
rclb
icebp
into
int
aad
cwtl
aas
cs
sub
pop
mov
push
cmp
push
stos
in
mov
outsl
loopne
xchg
pop
jle
inc
lock
loopne
dec
aas
in
or
lcall
xor
mov
rcl
mov
shrb
mov
inc
or
aad
xchg
fcoms
loope
push
pop
in
xchg
xchg
shl
jno
cmpsb
jns
shll
pop
icebp
and
jae
test
stc
cmp
outsl
loop
mov
ljmp
mov
mov
nop
in
dec
jl
cwtl
mov
lods
xchg
dec
inc
js
sti
jns
adc
out
cltd
mov
std
mov
lret
imul
adc
icebp
insb
add
lock
pop
daa
pushf
dec
shrl
dec
sbbl
jb
dec
push
notl
outsl
or
sbb
adc
inc
add
jne
dec
pop
std
or
push
cwtl
mov
in
push
lds
lea
cli
scas
mov
add
test
xorb
add
xchg
xchg
hlt
ljmp
mov
arpl
and
xchg
ror
les
lcall
or
lahf
insb
dec
test
xchg
pcmpeqw
pop
enter
push
cmpsb
mov
scas
push
test
push
pop
lods
pop
sub
adc
push
dec
push
test
add
cmp
fsts
push
stos
ja
adc
sti
mov
xchg
popa
mov
push
in
adc
lea
cmp
mov
cmp
dec
jp
loopne
fwait
or
jae
cmp
addr16
mov
inc
xchg
fistpll
dec
push
into
movsl
dec
out
cli
ret
movsl
popf
mov
jle
aaa
lahf
and
inc
aaa
sub
repnz
pop
and
mov
cld
push
in
sti
jns
sub
movsl
dec
mov
iret
mov
jne
mov
cvttps2pi
das
xchg
dec
dec
pop
push
imul
lds
pop
enter
push
add
cli
xchg
mov
fsts
out
mov
push
call
mov
add
fidivrs
das
dec
inc
movsl
pop
jae
pop
cld
cvtdq2ps
mov
popl
push
xor
jg
xor
cltd
mov
stc
arpl
pop
out
scas
ficompl
fs
dec
jnp
not
out
ficoml
cmp
inc
mov
iret
mov
mov
pushf
rcll
popa
fsubrl
sbb
test
push
imul
data16
mov
lock
rcr
mov
in
cmp
ljmp
xchg
movsb
jmp
mov
mov
lret
inc
outsl
mov
fwait
cmp
sub
mov
cmp
xor
dec
outsb
xor
jmp
jae
add
loope
mov
inc
testl
sub
int
or
fadd
fldenv
or
add
jle
movsl
imul
pop
movsb
pop
lock
pop
fsubl
push
mov
repnz
jl
andl
pusha
mov
xor
xchg
sub
mov
inc
jge
jecxz
in
mov
push
lahf
xor
mov
jae
jb
ret
sub
test
std
cli
pop
adcl
daa
mov
ja
cmpxchg
cmp
sub
jle
push
fdivrs
mov
adc
jecxz
dec
inc
enter
sti
js
mov
pop
xor
mov
cld
jg
pop
ss
ficomps
mov
pop
in
xchg
xchg
and
outsl
test
ljmp
jo
or
jg
int3
rcr
ret
inc
addb
sti
fildl
arpl
ss
jb
add
mov
sbb
aas
jp
inc
gs
xchg
popf
cli
mov
mov
les
xchg
bound
cmp
popa
cld
aas
into
mov
or
rcrb
lock
push
mov
inc
sbb
mov
mov
insb
shrl
ss
scas
cmp
push
cmp
iret
push
mov
jbe
mov
sahf
pusha
std
or
aad
leave
clc
shrl
fdiv
adc
cmpsl
int
inc
or
xchg
lahf
sbb
ret
jmp
xchg
push
pop
adc
xchg
sub
push
adc
dec
rol
adc
mov
rolb
jle
rorb
xor
lods
add
aaa
ret
mov
jo
mov
aad
int
cwtl
out
mov
flds
aad
movl
mov
lret
cwtl
sbb
int3
lods
xor
iret
xor
ja
orb
movsb
scas
dec
imul
hlt
fistl
out
aaa
jl
cmp
imul
xchg
jp
inc
dec
cld
leave
lret
pop
sub
orb
sar
mov
addr16
jns
sbb
lods
dec
gs
arpl
mov
cmp
dec
add
sbb
cmp
pop
mov
and
lcall
outsb
sbb
sbb
lock
or
xchg
test
adc
pop
dec
mov
push
mov
pusha
filds
lret
test
xchg
jecxz
jno,pn
icebp
lock
gs
inc
jle
or
push
pop
push
pop
or
cmp
imul
cmp
push
cs
push
push
adc
or
and
jne
pop
dec
mov
sub
loope
aam
sahf
adc
jo
mov
adc
dec
nop
hlt
outsl
iret
aaa
test
xchg
mov
ror
rclb
jno
or
mov
xchg
call
and
loopne
lcall
mov
jae
dec
lods
test
test
xchg
mull
adcb
inc
jle
mov
xor
es
pop
lea
je
cld
ljmp
imul
cmpsb
rcr
mov
inc
mov
cmp
mov
inc
mov
sbb
mov
cmp
ds
pop
lcall
je
adc
lea
adc
shrl
imul
jle
bswap
mov
aas
xchg
fistps
push
mov
pop
ret
ficompl
mov
dec
xchg
xor
and
pushf
sub
fdivr
inc
mov
xor
sbb
inc
sub
inc
cmp
mov
test
insb
dec
fsubr
stc
test
lcall
nop
cli
jl
xchg
inc
test
in
in
push
jmp
mov
xor
inc
mov
inc
jge
and
xchg
xchg
xchg
loopne
pop
cwtl
fnstcw
adc
loopne
pop
cld
into
popf
out
xor
push
mov
fcmovbe
push
outsl
popa
jmp
sbb
mov
and
push
gs
pop
dec
sub
jb
dec
push
repnz
xchg
lahf
in
mov
pushf
int
add
dec
mov
or
in
leave
jp
push
xchg
cld
lcall
dec
insl
pop
test
mov
lock
addr16
out
popf
inc
sub
nop
cmpb
cmpsl
outsl
out
test
aas
sub
push
mov
pop
movsl
push
iret
mov
jae
pop
out
out
or
mov
mov
stos
sbb
lods
or
jns
fdivrs
pop
and
add
pop
test
sbb
cmp
lods
push
jg
test
dec
repnz
jmp
adcb
incb
dec
xchg
push
mov
and
outsl
sbb
or
adc
stos
pop
or
clc
xchg
out
dec
jmp
call
push
pop
inc
test
imul
jge
jge
fisubrs
jp
sub
xchg
inc
inc
icebp
and
int3
rolb
jns
fists
ret
stos
cltd
out
push
jnp
popf
inc
inc
daa
cli
arpl
mov
out
dec
movsl
inc
xchg
sbb
adc
stos
jmp
rorb
test
mov
pop
pop
add
repnz
int3
sysret
mov
or
into
addr16
xor
push
push
add
adc
jle
movsl
mov
fnsave
clc
and
add
test
push
mov
adc
pop
shrl
mov
jo
mov
mov
sub
sub
xchg
pop
cmpsb
push
push
cwtl
data16
mov
es
sbb
sub
cmp
push
push
cwtl
data16
mov
es
push
out
idivb
dec
xchg
xor
mov
data16
mov
int3
push
fsubs
loope
sbb
in
xlat
cld
out
idivb
dec
xchg
pop
cmpsb
call
push
xor
test
iret
jno
sahf
mov
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
movsl
add
xchg
dec
jmp
test
mov
jp
push
pop
adc
sub
push
or
ficoml
lds
xor
dec
gs
jne
inc
pop
push
or
jb
enter
xchg
lds
and
add
push
inc
or
or
cli
mov
imulb
cmc
and
cs
out
out
ror
cwtl
inc
or
cmpsl
enter
jno,pn
sti
jo
sbb
mov
and
rcrl
cmp
cmp
inc
sbb
out
dec
rcrb
mov
negl
cli
xlat
jg
lds
cld
sub
ficoml
cli
repz
in
in
cmp
jne
test
mov
cmp
pop
pop
out
roll
mov
out
les
leave
jp
popf
pushf
dec
call
or
pop
cmp
lock
ficompl
jne
pop
add
movsl
push
push
pop
cmp
sbb
sbb
mov
aad
and
dec
adc
rolb
push
fs
fsubr
loopne
lock
into
mov
out
fs
das
data16
add
pop
add
imul
lock
mov
hlt
aad
inc
pop
aaa
cmp
aas
push
sub
aaa
jnp
popa
int3
lods
shrl
in
cmc
stos
lds
xor
dec
cmp
inc
sbb
movsl
cli
mov
test
xchg
lret
cmc
stos
lds
xor
dec
cmp
inc
sbb
movsl
cli
adc
aas
and
jl
lret
mov
inc
loopne
pop
les
test
xchg
sub
sbb
sti
mov
rcl
iret
xlat
mov
loop
adc
dec
rep
pop
call
es
aas
xchg
mov
and
outsb
push
jge
push
mov
inc
mov
cmp
adcl
push
mov
jo
push
mov
addr16
into
jle
fcompl
or
popa
xchg
stos
inc
mov
mov
imul
scas
into
lods
inc
mov
imul
dec
popf
outsb
in
popf
jb
lret
and
jecxz
mov
mov
pushw
into
std
loope
sub
insb
fst
insl
sub
jb
cmp
sbb
jno
dec
mov
cli
mov
test
sti
jae
cmc
int3
icebp
mov
es
pop
xchg
push
cmpsb
cwtl
das
js
cmp
leave
push
addr16
out
pop
jmp
sbb
xor
mov
int3
ret
add
mov
and
mov
in
jg
jno
jge
and
adc
pop
push
cmp
js
mov
je
cmp
fldcw
mov
jbe
pop
sbb
cmc
jns
ret
scas
jmp
shrl
fwait
mov
and
scas
cld
adc
xchg
lahf
mov
leave
loop
and
inc
icebp
insb
dec
fcompl
add
add
mov
aaa
stos
mov
sbb
addb
xor
das
mov
add
sub
sbb
cmp
repnz
jae
fdiv
lods
call
jg
movb
int3
dec
push
aam
and
ljmp
jbe
out
xorl
cld
cmc
loop
sub
aaa
mov
dec
insb
xchg
andb
cmp
xchg
lea
cld
xor
test
mov
pop
lods
push
test
dec
fnstenv
jbe
jg
mov
in
lea
dec
jb
aaa
gs
push
adc
sub
repz
mov
aas
or
pusha
xchg
in
add
scas
jns
jne
popf
pop
or
mov
mov
jae
je
lret
or
cwtl
mov
test
xchg
sti
lcall
cmp
cld
daa
pop
push
xlat
and
loope
push
je
fidivs
fdivrs
mov
aas
mov
pop
and
rorb
fs
fs
inc
int
aaa
repnz
shrl
pop
cli
push
pop
xor
fcoms
mov
dec
das
fiadds
mov
mov
fdivs
out
inc
cmpsl
ljmp
pop
in
add
int
mov
insb
dec
mov
pop
ret
jge
mov
je
mov
rorb
mov
mov
sub
pop
clc
cmp
mov
jle
jmp
fwait
jp,pn
adc
adc
fadds
and
je,pt
movsl
scas
sbb
jo
mov
loop
xor
scas
adcl
add
mov
sbb
push
out
xor
adc
inc
addr16
mov
sbb
nop
notl
shlb
xchg
xor
mov
mov
out
sbbl
jmp
xchg
ret
sbb
mov
nop
stc
and
pop
mov
mov
test
bnd
add
jae
cmpsl
mov
hlt
lea
daa
fidivs
xchg
loope
test
pop
dec
push
test
scas
sub
mov
mov
cmp
xchg
gs
mov
push
adc
or
xor
push
add
adcb
xchg
jns
sti
push
js
lods
in
aaa
xchg
hlt
sbb
mov
stos
jl
lods
sbb
cmpl
out
stos
sbb
jae
cmpsl
xorb
xor
xor
push
or
cmp
leave
inc
inc
ljmp
call
dec
sbb
mov
push
sbb
dec
shll
imulb
xchg
pop
xchg
mov
xchg
cld
incb
jmp
dec
adc
iret
jnp
dec
pop
lea
mov
jge
mov
cmp
and
icebp
xor
xchg
mov
repnz
movsb
jae
fnsave
fisttpl
sub
dec
push
xchg
xchg
mov
xchg
sub
sub
shl
push
sub
test
xor
cmp
movl
cmp
outsl
loopne
shr
adc
or
adc
and
jns
and
int
xlat
inc
sbb
lret
sbb
outsb
lods
out
repnz
daa
inc
sbb
dec
fdivrp
mov
clc
loopne
add
mov
inc
cmp
pusha
cmp
xlat
and
pusha
int3
dec
jge
add
scas
mov
daa
aaa
fistps
sub
jmp
repnz
push
pop
das
movq
es
or
dec
cs
push
sub
out
and
hlt
or
mov
movsb
ja
mov
jno
sahf
fcomp
xchg
test
inc
test
arpl
insl
mov
outsb
jns
cmpsl
enter
fwait
das
adc
adc
addr16
cmpsl
mov
ljmp
add
jae
add
ja
push
ja
lea
outsb
mov
popa
add
mov
ret
out
and
aam
pop
aaa
mov
ss
rorl
dec
inc
fsubr
arpl
jp
xor
pop
cmp
dec
into
mov
cmc
int3
inc
sub
je
test
push
sbb
movsl
fisttpll
lret
fcmovbe
xor
out
mov
call
popa
jns
std
pop
fnstenv
sbb
in
jns
cmp
in
test
sbb
cld
cmp
mov
xor
fnstenv
xor
mov
pop
cwtl
push
rorb
subb
xchg
in
jae
addr16
fucom
orb
jle
ret
sti
adc
in
pop
xchg
lcall
das
lcall
adc
pop
in
adc
pop
jle
mov
dec
cmp
shll
and
and
imul
cmp
pop
fcmovb
push
stos
test
rcrl
xor
ja
cmp
and
jmp
scas
cmp
inc
pop
jle
adc
adc
fs
mov
int3
lods
movsb
test
insl
outsl
popw
push
or
icebp
mov
and
pop
jmp
scas
lahf
inc
mov
xchg
stos
pop
out
pop
aaa
mov
mov
pop
lock
dec
mov
int3
sahf
or
test
test
js
pop
and
into
xchg
xchg
xor
shl
sub
push
xchg
mov
jne
pop
pop
fcomps
xchg
or
pop
adcl
inc
jo
lret
into
repnz
enter
dec
jbe
enter
sbb
adc
pop
out
push
cwtl
push
popa
sub
js
inc
mov
xlat
les
ss
std
sbb
shrl
push
mov
rcrb
inc
mov
dec
jbe
fsubrl
out
outsb
fidivl
mov
xchg
loopne
fnstcw
fcom
and
dec
cmp
dec
das
push
pusha
mov
mov
sbbb
cwtl
xchg
stos
push
in
insb
xchg
fisubl
in
mov
das
add
out
inc
inc
push
mov
cli
int3
push
in
addr16
icebp
loopne
ret
pop
and
outsl
out
sysexit
leave
in
or
aam
ja
add
push
roll
aam
and
and
push
icebp
add
dec
pusha
mov
cwtl
cs
lahf
test
cmp
xlat
daa
jle
push
lods
or
fsubrs
mov
lds
sarb
mov
outsl
mov
jae
lods
test
xchg
movd
push
leave
ret
xchg
jo
pop
mov
je
arpl
adc
scas
sahf
sub
mov
adc
xchg
fisttps
jp
or
rcl
inc
scas
sbb
cld
lret
xor
push
sbb
imul
loop
and
out
push
hlt
pop
daa
fnstenv
add
das
aad
jnp
jno
lcall
and
sbb
mov
adc
cmp
adc
ljmp
dec
rcll
jp
inc
sbb
ljmp
scas
jmp
push
hlt
cmc
adc
add
mov
les
xor
fildl
ljmp
shlb
insl
add
loop
jae
inc
adc
repnz
lret
pop
dec
mov
sbb
jge
int3
fcoms
jl
repnz
les
dec
in
fldt
imul
in
nop
in
push
mov
push
jp
pop
mov
popa
ja
push
arpl
push
add
dec
xlat
pop
test
inc
ret
out
aas
mov
jmp
mov
xchg
mov
sahf
lods
push
addb
lahf
mov
int
stos
jecxz
sub
xchg
scas
jp
mov
into
mov
adc
mov
out
movsb
sbb
inc
fdivs
ds
xchg
clc
data16
sbb
mov
pushf
pop
test
pop
lahf
clc
lahf
xor
sbbb
sbb
lods
push
jne
insl
jns
add
dec
sar
push
sub
arpl
adc
or
sub
pop
mov
in
sar
dec
lea
pop
jno
cmp
dec
scas
add
jne
pop
or
adc
dec
ret
dec
dec
jecxz
and
mov
mov
adc
add
sbb
push
out
cltd
mov
hlt
dec
jb
stc
fisttps
notl
sub
adc
xor
imul
xchg
cmp
jmp
jecxz
mov
shll
jbe
cmp
push
test
fldcw
and
mov
xchg
loopne
shlb
enter
mov
jmp
push
out
dec
fstps
push
filds
andb
mov
and
sub
dec
mov
mov
mov
pushf
mov
push
scas
xchg
jmp
iret
cs
pop
test
adc
inc
lods
in
add
jno
inc
and
ret
push
inc
jg
push
dec
sub
nop
lds
inc
hlt
mov
or
daa
test
xchg
cli
jb
mov
notl
lcall
hlt
test
or
aam
scas
jb
mov
pop
cmp
cmp
aad
rorb
loope
pop
ljmp
mov
pop
dec
inc
sub
lods
lods
add
ds
aaa
stc
mov
xchg
lods
push
loop
xlat
ret
pop
gs
dec
jbe
dec
xchg
and
jns
jae
dec
leave
mov
out
hlt
xchg
ja
jle
pop
stc
arpl
in
out
mov
adc
pop
jbe
dec
subl
repnz
rorb
push
add
inc
je
ja
stc
push
iret
fwait
insl
cmpsb
xor
xorl
ret
mov
fistps
xchg
lds
movl
stc
push
loop
lock
sbb
jne
sarl
inc
adc
sti
pushf
jne
jp
push
and
push
or
cld
inc
lock
pop
mov
sbb
jbe
sahf
leave
sbb
out
and
mov
sub
sbb
mov
dec
or
jo
in
iret
cmp
aad
movsb
hlt
enter
mov
sti
outsl
mov
cmc
ds
cli
pushf
adc
adcb
aam
push
imul
sub
fwait
adc
cmp
add
cmp
adc
cmp
leave
out
mov
ljmp
out
scas
sub
aaa
mov
add
idivl
pop
xchg
int3
loopne
sbb
cmp
sbb
rep
shll
inc
xchg
daa
mov
add
iret
pop
or
mov
rcrb
mov
in
adc
rcrb
adc
lods
ficompl
jmp
aas
inc
jo
xor
sub
jp
je
and
add
jl
test
dec
sub
mov
push
dec
push
or
lcall
mov
aas
setp
movsb
loope
mov
je
mov
lods
loope
movsl
lods
mov
imul
mov
stos
push
sti
sub
cmp
orl
in
xor
mov
pusha
push
dec
movsb
movsl
lcall
sahf
ja
adc
call
shll
cmc
cmpsl
xchg
imul
out
or
pushf
das
scas
dec
movsl
xor
test
push
aaa
push
ret
iret
lds
jb
pop
repnz
outsl
mov
adc
mov
clc
ljmp
daa
fucomip
stc
pop
sbb
mov
sbb
sbb
mov
ret
or
mov
inc
adc
ss
and
arpl
scas
mov
nop
into
loop
sub
or
movsl
rorl
jecxz
cmp
repnz
arpl
mov
mov
adc
cmpsl
xchg
push
mov
mov
dec
aam
cmp
xchg
add
stc
dec
decb
ficoml
sub
adc
rol
fmulp
dec
insb
mov
push
jb
les
inc
pop
test
stc
mov
xchg
filds
sbb
add
sbb
int3
es
fwait
ja
aam
push
lods
imul
mov
and
call
jns
mov
mov
xchg
inc
subl
jb
ror
mov
mov
gs
out
mov
test
out
mov
xor
mov
js
ret
sar
add
cli
xchg
push
sub
fmull
and
sub
out
das
fcom
mov
iret
and
ficompl
mov
jae
rcrb
sub
xor
pop
out
or
ret
lock
cmp
lret
outsl
pop
push
xchg
idivl
icebp
or
sub
xor
pushw
sahf
dec
sbb
and
mov
not
sub
mov
mov
adc
addr16
mov
icebp
mov
adc
mov
xchg
add
enter
fistpl
int3
push
loope
sbb
sbb
sbbb
pop
and
xlat
dec
jmp
roll
sar
pop
loope
mov
xor
mov
outsl
jne
xchg
pushf
icebp
xchg
std
fst
test
push
push
pushf
push
jae
rcll
sub
inc
inc
cmp
hlt
or
inc
adc
fistpll
outsb
adc
out
jmp
bound
lods
pop
or
in
xchg
aaa
aaa
sbb
sub
xor
pop
mov
and
xchg
push
mov
push
and
ficoml
aad
inc
ja
movb
cwtl
enter
cltd
imul
sahf
lock
lahf
xchg
mov
push
mov
ficomps
fmull
fstl
sarb
aam
and
pop
ret
mov
call
or
mov
dec
mov
lock
aam
xor
in
insl
mov
movsl
xchg
mov
mulb
shrb
ret
aad
xor
sub
sbb
ds
mov
test
or
cmp
push
ja
adc
testb
pop
mov
dec
sub
push
xor
inc
cmpsb
pop
dec
jbe
addr16
lock
or
lret
mov
mov
cmpsl
jge
js
gs
fidivrs
popa
lock
fneni(8087
pusha
mov
fisubrl
outsb
or
aam
jae
adc
pop
mull
push
mov
out
mov
jb
fldl
mov
stos
movsl
and
inc
mov
push
fisttpl
lret
adc
dec
dec
insb
pop
fsubrl
add
lret
sub
jmp
stc
iret
cmp
jns
mov
or
in
mov
dec
pop
jno
inc
add
cmp
cmp
data16
sub
jae
or
mov
sbb
roll
inc
insb
push
loopne
mov
and
push
ret
cmp
jne
sub
sub
mov
xor
or
ss
sub
fsubs
dec
and
dec
jne
test
jge
push
jne
sarl
sub
js
scas
stos
fcoms
jle
cwtl
adc
dec
sahf
mov
sub
stos
test
dec
push
cmpsl
add
xor
outsb
in
imul
pop
stos
push
push
push
sbb
cmp
fnstsw
jbe
cld
cmp
adc
add
inc
arpl
cmp
push
inc
cmp
cmp
and
std
jnp
popf
dec
loop
jno
in
mov
jbe
xchg
push
pop
or
push
stos
xchg
dec
xchg
mov
jmp
mov
push
sub
mov
shlb
int3
aam
xchg
pop
out
insl
mov
mov
mov
jae
imul
stos
int
sub
shrl
cwtl
outsb
jne
or
movsl
pop
test
aad
or
loop
sbbl
or
cs
pop
adc
push
adc
iret
pop
jmp
and
rclb
sbb
insl
mov
lsl
pop
cmp
pusha
enter
sub
inc
dec
and
ja
lds
mov
jbe
pop
pop
push
push
mov
bnd
sti
push
data16
icebp
dec
cmp
xor
dec
inc
mov
clc
adc
inc
or
mov
loope
fs
lods
repnz
mov
fwait
jbe
outsl
test
mov
inc
xor
sub
in
popa
pop
in
push
shll
or
and
jl
sub
add
adc
sub
inc
rcrl
pop
xorb
or
push
shr
adc
adc
lcall
jp
jmp
xor
sahf
fwait
mov
jb
fisubrs
mov
fisubl
ds
ret
daa
int3
loope
mov
pop
jl
repz
add
push
sub
dec
jae
repnz
aad
or
pop
test
cs
fnstenv
jmp
jp
pop
jns
ret
ss
test
lret
addr16
mov
or
aas
push
mov
mov
sti
cmp
call
push
lods
loopne
cmpsb
jge
cs
add
jle
add
mov
imul
ja
xlat
jae
outsb
incl
out
mov
pushf
cmp
xchg
notl
clc
adc
sti
imul
adc
xlat
sub
jle
loopne
or
stos
sbb
xchg
dec
mov
add
adc
insl
adc
or
int3
test
cmp
or
lea
fstpt
jns
push
incl
lret
lret
rcrb
test
ret
pushf
aaa
and
bound
xor
mov
scas
mov
test
dec
scas
inc
aam
dec
ds
iret
push
aaa
fistpll
mov
fistl
fmull
sbb
fiaddl
add
mov
outsb
xlat
subb
stc
addr16
adc
hlt
push
jno
jmp
ds
push
xchg
pop
mov
lea
pusha
test
pop
sbb
sub
in
clc
cmp
cmp
pop
lds
sub
inc
loope
xor
push
jl
subl
cwtl
xor
push
roll
jnp
std
sub
dec
shr
imul
fisubl
cltd
adc
test
mov
jecxz
mov
mov
xor
jp
iret
or
shrb
push
scas
dec
in
adc
xchg
daa
pop
jne
ficoms
hlt
scas
int
mov
mov
mull
inc
sar
xchg
mov
fimull
jo
xchg
das
dec
or
mov
std
cmpsl
cmp
mov
ds
cmp
jmp
mov
xchg
cs
inc
fistpll
mov
cs
xchg
adc
sbb
xchg
jb
sbb
cwtl
adc
vcvtpd2ps
jnp
mov
jno
fsubrs
in
jp
out
lock
fnstenv
cwtl
mov
xlat
divl
jo
inc
imul
fnstenv
js
sbb
lret
insl
mov
dec
cs
xchg
sbb
push
inc
lret
mov
xor
out
sub
fists
jmp
and
sbb
data16
jge
lcall
in
repnz
push
mov
cmpsl
test
out
neg
add
mov
aam
js
dec
and
pushf
and
loop
sub
and
repz
rclb
push
cmp
add
jae
sbb
adc
and
jae
test
or
out
mov
lret
cmp
add
push
push
loop
xchg
push
or
mov
es
xchg
xorb
mov
icebp
into
test
cwtl
add
mov
in
sbb
mul
pop
stc
repnz
sbb
adc
and
jae
mov
jl
mov
iret
jno
push
or
sub
mov
add
and
enter
std
testb
lods
jl
outsl
std
inc
lahf
mov
sub
call
loop
shrb
shll
pop
loop
mov
dec
mov
movsl
arpl
addl
or
cmp
push
arpl
pop
jge
inc
and
xchg
xchg
push
mov
inc
nop
orl
cmp
mov
lret
push
sub
xchg
dec
sbb
je
mov
add
adc
nop
loopne
xor
lahf
sub
sbb
mov
lret
cmc
stos
lds
xor
dec
cmp
inc
sbb
movsl
cli
mov
test
xchg
lret
cmc
stos
lds
xor
dec
cmp
inc
sbb
movsl
cli
mov
test
cmc
add
lcall
add
cmp
inc
cmp
movsl
cli
mov
test
xchg
lret
in
cmc
stos
lds
aad
and
pop
adc
aad
in
cmc
test
push
pop
push
dec
rcrb
sbb
pop
or
lret
out
hlt
stos
mov
mov
jp
push
pop
push
dec
data16
inc
sbb
mov
mov
xchg
cwtl
lret
jp
lcall
push
inc
push
push
jg
outsb
xor
push
adc
scas
out
lret
cltd
les
jp
add
cs
shll
xchg
lret
and
popa
pmaxub
pushf
out
push
notl
cmpsl
daa
leave
sub
stos
mov
mov
aam
nop
ret
andb
lahf
add
push
inc
lcall
cmc
add
repnz
outsb
xchg
out
jg
sub
stos
or
daa
sub
push
pop
xor
sbb
mov
stos
mov
mov
imul
jbe
mov
stos
cltd
sbb
or
or
lahf
lretw
mulb
cmp
mov
jmp
lret
mov
pop
xchg
cmp
sti
iret
fisubl
gs
lcall
push
push
jno
data16
dec
adc
ret
sar
mov
out
dec
pop
push
push
pop
bound
insb
adc
push
cmpsb
xchg
ficoml
out
xchg
stc
mov
mov
push
sub
or
sbb
add
mov
enter
divb
punpckhdq
jle
cs
jbe
inc
sbb
cmpsb
cli
mov
xchg
xchg
lret
imulb
es
push
pop
push
dec
data16
inc
sbb
cmpsb
cli
mov
xchg
xchg
lret
imulb
es
in
mov
pop
adc
inc
cmpsb
xchg
loop
insb
testb
shlb
mov
lods
lods
stc
ljmp
push
adc
and
mov
lret
push
pop
testb
ret
xor
movsl
adc
data16
rorb
bound
push
xor
fbstp
adc
push
insl
push
mov
aas
out
pop
loop
out
lcall
lret
addr16
pop
ret
enter
aad
pop
sbb
cmp
xor
add
nop
stc
pusha
xchg
add
out
xchg
jle
xchg
xchg
insb
fstps
js
ficomps
sub
imul
mov
sbb
xchg
or
jmp
ds
mov
das
pop
pusha
inc
jb
xor
ret
je
insl
enter
and
pop
cmp
and
call
xor
or
out
fdivrl
fstpt
cld
jno
xchg
sarl
cmpsb
mov
jp
fdivs
mov
pop
fisubrl
arpl
inc
je
cmp
mov
fwait
pop
sbb
mov
loopne
mov
jno
mov
repz
test
addr16
cmp
rcrl
jns
dec
cli
mov
movsl
push
push
adc
mov
les
inc
mov
call
mov
dec
mov
xchg
shr
in
in
add
loopne
xor
sub
mov
dec
sub
cmp
imul
xchg
mov
inc
sub
push
sub
sahf
jns
mov
mov
dec
leave
loop
hlt
xor
sbb
cmpsl
or
pushf
mov
jno
out
mov
das
sahf
stos
popf
cli
pusha
adc
ljmp
fxch
loop
add
fimuls
push
loop
out
es
sub
push
ja
pusha
fmull
pop
pop
aas
cwtl
dec
insb
xor
mov
ficompl
sbb
jge
je
loopne
sar
xlat
ror
mov
xchg
cmpsl
cmp
jnp
jg
fs
adc
mov
sub
mov
fisubrs
in
mov
lret
mov
and
add
jb
or
jp
dec
fldenv
inc
rcrb
inc
xchg
ret
mov
mov
int
or
popf
add
fwait
pop
mov
push
xchg
xchg
mov
add
lcall
push
flds
shrl
sbb
mov
out
lret
ljmp
mov
leave
add
add
lahf
xchg
sbb
in
std
out
push
popf
push
pop
call
pop
insb
arpl
push
testb
xor
test
lds
push
cmp
cmpl
xchg
xchg
push
filds
leave
xorb
xchg
iret
add
add
xor
mov
in
adc
mov
shrb
outsb
inc
push
sub
cmpsb
jmp
inc
sbb
lret
mov
pop
jo
inc
cmc
and
fdivrl
insb
push
xchg
cmp
mov
lds
add
xor
ss
popf
cmpsl
jno
mov
lock
mov
bnd
cmc
cmp
xchg
cmpsl
jnp
fucomip
xchg
scas
addl
mov
adc
mov
fstps
mov
xchg
pop
cs
xchg
mov
clc
mov
sbb
mov
orl
cmp
jp
add
test
add
ret
push
imul
stc
adc
push
jmp
xchg
cmpsb
inc
mov
dec
imull
xchg
inc
push
jge
and
shrl
imul
xor
stos
xchg
cmp
and
xchg
stc
dec
fldenv
or
fsubrp
roll
mov
add
fneni(8087
dec
jecxz
fwait
into
xor
aad
inc
and
push
std
push
mov
das
or
mov
nop
scas
xor
push
inc
xchg
fstpt
push
mov
pop
add
pop
mov
repz
cwtl
sbb
pop
les
and
push
pop
mov
mov
pop
dec
cmpsl
pop
cmp
dec
lods
mov
sub
mov
mov
notl
cmp
push
imul
cmpsb
inc
sbb
shr
aam
push
fidivl
in
pop
shl
cltd
pushf
fstp
xchg
int
jp
xor
or
lods
push
xchg
arpl
pop
jg
xchg
lret
jmp
push
rclb
xor
cmp
sbb
mov
mov
mov
xor
aam
ficomps
cmp
rcrb
lret
std
shlb
negl
mov
daa
inc
or
pusha
cmp
mov
sahf
loopne
lret
sub
repnz
fstpl
cmpsb
movsb
idivb
inc
popa
fisubl
push
nop
shl
cmp
add
pop
stc
inc
push
xchg
cmp
jbe
adc
orl
jb
sahf
addl
fidivrs
lretw
leave
enter
stos
add
mov
lods
jp
test
cli
mov
pop
push
and
inc
cmc
loop
dec
mov
jno
mov
pop
and
sete
mov
and
aad
or
mov
pop
roll
xchg
mov
jbe
mov
mov
nop
loopne
mov
lret
iret
mov
dec
cwtl
pop
lret
push
popa
hlt
push
sarb
adc
mov
cmpsb
cmp
bound
pop
lods
xor
imul
xchg
mov
out
faddl
aaa
scas
cmpsl
xchg
out
out
loopne
sahf
dec
push
cmp
popf
or
popa
pop
pop
hlt
fwait
cmpsb
mull
je
lret
bound
sbb
inc
gs
scas
fstl
je
push
mov
adcb
enter
lods
stos
xor
movsl
je
xchg
fwait
push
and
out
xchg
adc
rcrl
lcall
mov
push
psubsb
es
pop
adc
jge
lret
sbb
sbb
ss
lea
pusha
iret
test
sti
and
or
sbb
add
pushl
pushf
or
push
push
int3
cmpsl
scas
cmp
push
sub
fcoms
dec
insl
adc
data16
movsb
and
movsb
stos
pop
xorb
insb
negl
add
and
jo
push
clc
push
or
std
cltd
cmpsl
cmp
mov
dec
push
movsl
dec
icebp
cmp
jns
lock
pop
inc
push
lods
sub
incl
sub
repz
aaa
jmp
sub
cmp
xchg
adc
roll
dec
xor
mov
loop
mov
mov
jecxz
xchg
pop
jae
loope
jae
pop
lods
sahf
lods
fisttpl
cmp
jno
push
insl
dec
jno
add
test
loope
in
arpl
jnp
and
scas
imul
out
adc
xor
pop
es
aaa
inc
sbb
pop
shll
and
mov
loop
ljmp
lret
mov
mov
jo
mov
and
les
cld
mov
sbb
loopne
call
pop
das
adc
push
dec
test
js
mov
outsb
ret
inc
cmp
mov
mov
mov
or
adc
xchg
xchg
adc
out
and
mulb
mov
ficompl
scas
mov
setne
inc
xchg
sub
lods
jno
fdivrs
test
xchg
jo
aam
add
into
insl
or
and
clc
jns
xchg
imul
mov
test
ja
sbb
dec
test
ret
pop
xchg
xchg
mov
adc
faddl
sub
ret
xor
daa
ds
rcll
mov
and
dec
inc
dec
mov
push
pusha
addr16
fsubrs
pop
sti
fs
insb
add
cmp
mov
repnz
stc
xor
jl
push
add
add
int
jb
outsb
pushf
insb
cmp
mov
mov
dec
ss
push
push
sti
xor
cmp
jno
jae
jo
orb
jmp
xorl
dec
xor
mov
sub
cmpsb
or
push
xor
nop
rorl
cmpsb
repz
aad
adc
cmp
pop
xor
cmp
sub
mov
and
popa
mov
mov
sub
stos
push
push
pop
mov
mov
mov
push
xlat
rorl
add
inc
arpl
adc
inc
push
jmp
aam
shll
and
add
hlt
mov
mov
dec
or
hlt
aam
sub
push
fstps
pop
mov
ficoms
xchg
cmpsb
sbb
mov
mov
sti
repnz
jb
adc
cmp
or
lret
lea
flds
cmp
les
cmp
rolb
cmp
insb
sbb
movsl
pop
dec
ja
addr16
pop
mov
pop
pop
aas
xchg
mov
cmp
cmp
and
or
movsl
fwait
inc
pop
xor
cmc
pop
push
push
mov
cli
inc
es
add
and
cmp
call
ret
cwtl
sub
inc
sbb
aad
aaa
sub
cmc
insb
cmp
stc
testb
xchg
sbb
cltd
test
bound
mov
insb
loopne
inc
pop
push
add
sti
or
inc
mov
scas
cmp
dec
mov
lcall
in
test
pushf
fisubl
jecxz
faddl
jle
arpl
cmpsl
xchg
pop
ljmp
jp
stos
and
xchg
std
xchg
pop
xor
sub
pop
pop
mov
jne
int3
je
inc
mov
sahf
mov
test
push
lods
fidivl
in
pop
add
out
mov
lret
push
out
sarl
test
mov
mov
divb
mov
cld
jge
pop
mov
std
lahf
arpl
cli
sub
and
das
pop
mov
adc
fwait
enter
movsb
ljmp
aam
ret
fs
jl
imull
mov
pop
pop
test
inc
sbb
xor
pop
xor
outsb
add
push
mov
or
jmp
ljmp
repz
arpl
les
in
jne
inc
sub
std
jno
ficoml
jae
add
mov
cmp
push
cmp
adc
xor
xchg
lea
addr16
xor
mov
lds
push
bound
push
xor
ret
xor
fstpt
rcr
mov
sub
sbb
shl
mov
std
or
mov
andl
xlat
test
cmpl
mov
repz
sub
adc
xor
fistpl
or
push
mov
dec
adc
inc
and
in
push
mov
lods
insl
std
mov
and
inc
ficoms
adc
je
push
sbb
xor
lods
rcrb
dec
cmpsl
sarb
js
test
cmpb
gs
outsl
sbb
js
jg
call
pop
sqrtps
xor
mov
call
mov
aas
int3
sbbb
pusha
add
scas
cmc
push
jl
push
out
mov
inc
enter
and
insl
es
jmp
lcall
pop
sti
mov
int
lods
shll
sub
mov
fcoml
fistpll
in
nop
adc
xchg
cmpsl
mov
fwait
addr16
cmp
cmp
add
popa
dec
fs
daa
xchg
add
push
test
dec
sbb
xchg
mov
mov
mov
sbb
lahf
subb
mov
jb
cld
addb
sbb
mov
push
sbb
sbb
mov
stc
les
cmp
push
loop
andl
stos
ljmp
mov
xchg
in
cmp
mov
jbe
fdiv
aas
out
loopne
lods
cmpxchg
mov
fs
mov
add
das
das
sub
mov
fcoms
sub
inc
std
loopne
pusha
movsb
cmpsl
xchg
mov
adc
hlt
sub
jns
lods
repz
dec
pop
cmp
ret
xor
iret
fucomi
or
jp
insl
xchg
xor
dec
lods
mov
cld
iret
scas
filds
cli
in
out
add
ffreep
add
movsb
xchg
pusha
xchg
dec
lds
dec
mov
pop
pop
das
ja
and
xchg
dec
xor
jl
cmp
fsubrp
pop
ds
pop
add
cmp
mov
sbb
sbb
mov
mov
orb
shl
xchg
sbb
popa
inc
adc
stos
popf
and
xchg
push
scas
lock
dec
enter
and
loope
mov
sub
or
pop
dec
movsb
inc
cmp
pop
jl
mov
ror
pop
aaa
sub
sub
popf
stos
cld
adc
bound
jmp
cmp
idivl
stos
divb
mov
push
xchg
jo
out
imul
ret
aad
dec
and
aam
lock
lock
ja
sbb
shlb
sbb
mov
add
mov
fcoml
jmp
in
push
mov
sbb
into
push
cmp
clc
and
pop
das
int3
inc
cmp
pop
adc
iret
sbb
mov
movl
sbb
dec
scas
shrb
cmc
scas
out
je
xor
aam
ret
adc
rol
fucomip
sti
pushw
pop
repnz
mov
dec
push
pop
cmpsl
xchg
mov
aaa
fstl
xchg
jmp
xor
shlb
aam
push
push
das
jmp
stos
call
pop
jns
mov
out
popa
aam
jae
pop
dec
fidivs
test
pop
xor
test
cmp
pop
or
fwait
and
in
cmc
sbb
js
and
test
outsl
stos
cmc
lods
mov
mov
add
mov
mov
inc
add
and
inc
loope
push
push
sbb
cltd
decl
xchg
jmp
ficoms
pop
pusha
scas
sub
fidivs
shrl
pop
push
or
aam
cmp
pop
vprotq
jbe
int3
leave
xchg
cltd
pop
enter
in
cs
sbb
push
rolb
sbb
push
in
jge
fistl
nop
stos
or
inc
scas
mov
int
int
add
popa
shrb
xchg
cmp
xchg
cs
nop
jecxz
rorb
test
push
pop
int3
and
ja
inc
or
inc
fwait
jae
std
js
push
and
adc
mov
push
outsl
mov
inc
repz
hlt
adc
cmp
imul
sbb
xchg
sbb
mov
jge
dec
mov
xor
add
in
mov
mov
inc
mov
shrl
cltd
add
scas
dec
mov
adc
pop
pusha
jae
lock
dec
and
dec
inc
push
sub
push
xchg
and
mov
std
andl
and
movsb
pop
cwtl
popf
das
inc
and
add
push
fstpl
mov
inc
mov
sub
and
or
adc
jne
shlb
addr16
pop
movsb
pop
adc
push
ret
or
ror
loop
adc
add
push
cmpsb
dec
jbe
mov
jno
nop
mov
lea
ret
mov
inc
mov
push
and
fstpt
orb
add
daa
xor
pop
pop
inc
maskmovq
testl
nop
lods
sbb
push
inc
inc
push
sbb
outsb
sub
lock
dec
cmc
sbb
pop
add
js
jno
xor
inc
addr16
xchg
adc
mov
sbb
dec
into
jp
xchg
sub
ljmp
mov
das
xor
mov
sub
and
and
repz
fnsave
push
js
addr16
dec
add
test
jne
adc
and
adcb
add
mov
aam
mov
add
ljmp
sbb
ds
sahf
push
test
gs
cli
sarb
int
adc
and
or
jo
bound
cmp
pop
push
add
sbb
sti
xor
mov
mov
outsl
jmp
ss
repnz
jmp
push
sbb
adc
cltd
push
jae
add
loope
leave
cld
mov
adc
fidivrs
sub
sub
daa
movsb
xchg
or
scas
push
push
xlat
and
jns
lret
xchg
mov
aaa
and
cmpsb
ret
xchg
mov
xor
outsl
lahf
xchg
out
jl
rorl
push
cmp
in
sbb
pop
repnz
xor
jae
fldcw
clc
clc
insb
sar
push
arpl
fmuls
pop
daa
xlat
gs
repnz
lds
and
mov
fwait
out
sub
xlat
icebp
popa
add
jb
cld
icebp
jl
fstp
je
cmp
jnp
pushf
adc
adc
and
cmpsb
cmc
xchg
jns
fdiv
pushf
cmp
pop
pop
jne
add
out
roll
pop
repz
pop
mov
int
inc
ss
dec
imul
push
or
sbb
and
pop
out
or
sub
cltd
jo
sub
or
shlb
cld
pop
add
fs
sub
or
and
ret
clc
xchg
shlb
jle
mov
mov
test
xlat
pop
aam
adc
adc
mov
mov
sbb
mov
lahf
pop
hlt
and
inc
add
sti
add
addr16
mov
cmp
jne
sub
in
fdivrs
xlat
ss
scas
aad
xor
mov
xchg
fsubs
mov
xlat
or
lods
jne
push
jmp
popf
cmp
or
mov
mov
leave
sbb
jmp
pop
sbbb
in
pop
lret
dec
insl
in
jb
bndldx
lods
adc
cmpb
add
xchg
dec
push
fcmovne
cmp
cld
xchg
popf
fdiv
gs
cmp
shlb
sub
enter
aas
fld
sbb
out
add
arpl
fldenv
xchg
pop
mov
or
in
pop
push
hlt
jp
lahf
fistpl
push
sbb
ret
mov
ja
popf
stc
mov
sbb
aas
insb
sbb
cmp
add
dec
mov
fstpt
and
notb
sbb
mov
jo
mov
inc
outsb
jmp
cmp
lods
pop
or
nop
sbb
test
pop
les
xchg
bound
sub
and
dec
je
push
pusha
and
ss
push
faddl
xchg
jge
int
sbb
ret
jge
inc
cltd
stos
and
adc
out
xchg
mov
lods
dec
xlat
pop
mov
mov
adc
mov
xor
ds
add
sar
lods
mov
call
push
pusha
sub
aam
hlt
xchg
inc
ss
jbe
mov
fnstsw
xor
imulb
cli
out
jnp
inc
mov
push
es
rcll
add
enter
cmp
sbb
fisubrs
mov
mov
aad
push
sbb
cmpsl
adc
cwtl
cmp
pop
into
inc
loope
mov
or
mov
xor
adc
fistps
mov
les
pop
insl
cwtl
mov
loope
gs
xchg
jne
push
scas
ljmp
div
sub
dec
mov
mov
mov
inc
in
sbb
push
dec
xchg
fsub
adc
test
jl
rol
and
je
and
fcmovnb
mov
cmc
pop
ret
inc
lahf
div
pop
sti
and
pop
cltd
mov
adc
sbb
sti
cmp
ja
sbb
mov
call
fwait
push
jno
shlb
jnp
dec
outsl
mov
rcr
inc
fnsave
ret
add
mov
add
flds
sbb
aas
sub
and
fstpt
inc
mov
xor
ss
jl
ss
add
mov
mov
lds
or
insl
mov
mov
push
out
adc
adc
hlt
dec
ja
adc
jnp
xchg
mov
icebp
push
jbe
push
jecxz
aad
lret
jne
xor
dec
pop
ret
fsubs
sub
clc
jg
or
out
cmp
rcll
dec
sarb
push
aaa
cmp
add
xchg
decl
xchg
jb
dec
mov
mov
jno
rolb
scas
aam
cld
stc
cwtl
cmp
sub
outsl
xor
mov
jl
movsl
and
aas
jmp
pop
jmp
jmp
cmp
push
xchg
clc
nop
jge
pop
push
punpckhdq
xor
fisubl
int
jae
std
mov
mov
cmp
lret
outsb
loopne
shll
cmc
jg
mov
add
cmpsb
add
jne
mov
clc
add
les
pop
cwtl
js
xchg
xchg
cwtl
jg
insl
addr16
movsl
lock
cmp
or
arpl
mov
and
cmpl
into
and
cmp
test
jb
out
les
sbb
fstl
mov
push
bound
add
pop
cltd
roll
cltd
adc
jno
push
and
inc
stc
bound
leave
sbb
cmp
sub
mov
sahf
insl
mov
mov
mov
pop
push
jmp
pusha
mov
cmp
ds
pop
dec
or
pusha
xorb
lcall
mov
sbb
jle
xchg
mov
mul
xor
push
mov
dec
data16
inc
sbb
cmpsb
cli
mov
xchg
xchg
lret
imulb
es
push
pop
push
dec
data16
inc
sbb
cmpsb
cli
mov
xchg
xchg
lret
imulb
es
push
pop
push
dec
data16
inc
sbb
cmpsb
cli
mov
xchg
xchg
lret
out
imull
es
push
pop
push
dec
cmp
sbb
or
dec
inc
sub
xchg
mov
cmp
jne
dec
and
insl
add
pop
pop
jae
jle
cmp
nop
in
cmp
loopne
shrb
and
insl
add
or
inc
cmp
nop
in
cmp
loope
shrb
and
insl
add
or
inc
cmp
loopne
in
lock
mov
adc
imul
js
mov
jge
imul
xchg
fistps
jo
pusha
loop
and
mov
cmpsl
dec
loopne
xchg
dec
mov
dec
adc
sub
mov
sub
cmp
push
push
sarb
pop
imul
les
inc
sub
add
push
dec
pushf
arpl
movsl
mov
or
lret
imul
or
mov
lods
shr
enter
insb
decl
pop
jmp
hlt
out
mov
pusha
jmp
mov
pop
mov
and
insl
add
or
inc
cmp
nop
in
cmp
loopne
shrb
inc
mov
inc
cmp
dec
les
mov
lds
mov
mov
inc
or
pop
jae
inc
sub
inc
add
mov
mov
test
mov
sbb
or
sub
mov
std
lock
loopne
shrb
and
insl
add
or
inc
cmp
nop
in
cmp
loopne
shrb
inc
dec
lea
xchg
or
jp
inc
add
jae
scas
mov
mov
in
pop
jno
incb
insb
xchg
fdivrs
xor
add
add
mov
mov
sti
mov
popa
add
adc
lods
adc
clc
add
std
cli
adc
cmp
gs
cwtl
mov
mov
stos
lret
stc
mov
adc
ret
add
push
dec
pushf
icebp
dec
fs
shrb
insb
icebp
int
or
mul
dec
das
xchg
xchg
xchg
or
jnp
push
out
dec
adcl
scas
cwtl
sub
shll
pop
sub
cmc
mov
pop
push
int
cmpsb
cld
call
sbb
sbb
jae
and
xor
fcmovb
insl
push
mov
push
xchg
lret
add
and
pop
push
add
xchg
dec
shll
mov
xchg
mov
aaa
in
jno
xchg
cmp
or
inc
pop
insl
sbb
sub
imul
sbb
adc
add
fdivrp
xor
imul
aad
jbe
mov
bound
icebp
mov
lret
mov
xchg
ret
inc
pop
add
jg
cmp
insb
sarb
xchg
fs
inc
repz
adcb
bound
lds
lea
xlat
aam
sub
jp
cmc
xor
lods
ret
and
sbb
mov
lods
sub
pushl
ror
lret
es
push
nop
fistpll
xor
inc
out
call
dec
roll
sub
lret
popf
mov
inc
repz
sahf
das
jno
inc
fidivrs
movsb
lret
gs
incb
adc
popf
imul
lds
sub
in
loop
pushf
lods
adc
or
mov
push
iret
inc
cmc
enter
jmp
imul
scas
pop
mov
inc
adc
fistpl
cmp
fucomip
push
xchg
inc
divb
in
mov
dec
shl
dec
mov
xchg
ja
rcl
fwait
xchg
jnp
js
ret
push
sub
mov
pop
push
jp
stc
jg
or
cwtl
call
fs
xor
cltd
mov
jp
fstl
push
stos
fadds
push
shll
cmp
js
mov
mov
push
pop
inc
out
xor
imul
adc
dec
insb
mov
std
push
cltd
js
mov
repnz
cmpsl
dec
sbb
mov
xor
mov
cmp
mov
cwtl
popf
jo
ret
lds
push
dec
jo
daa
add
sbb
fwait
mov
insb
sub
adc
in
jne
push
push
loopne
pop
jl
pushf
cs
sbb
imul
sahf
mov
fs
lret
add
imul
sub
xchg
pop
sbb
popa
jmp
outsb
cltd
mov
imul
pusha
in
lret
and
dec
xor
jno
out
mov
addr16
pop
mov
xchg
inc
sub
dec
repz
sbb
jb
scas
aam
es
or
xlat
leave
lock
aas
clc
sbb
cltd
xlat
lahf
aas
ficompl
fisttpll
sti
cld
jl
in
sahf
pop
push
shl
sbb
rcrb
jo
cmpl
and
mov
mov
push
mov
jnp
jg
rcrl
test
sbb
sbb
mov
inc
inc
std
stos
gs
loopne
in
fdivs
stc
pop
dec
pop
lahf
ss
fwait
xchg
jmp
add
repz
insl
lret
insl
inc
ret
jg
movsb
and
mov
mov
or
mov
lret
fldl
push
sbb
and
insl
dec
pushf
test
sub
scas
dec
cmp
dec
xor
add
leave
lahf
push
or
mov
cmp
in
negl
data16
jae
movsl
and
mov
test
and
loop
xlat
daa
cmpb
test
jmp
jl
into
sbb
pop
push
adc
push
lods
dec
adc
xchg
or
outsl
lea
sti
mov
stc
jo
jnp
cmpsl
mov
pusha
adc
sbb
pop
and
repz
das
xor
xchg
clc
insl
repnz
dec
mov
inc
mov
lea
jbe
repz
hlt
icebp
add
add
les
out
xor
xchg
push
mov
loop
enter
int3
lret
call
or
incb
in
stos
fnsave
mov
or
adcl
push
out
mov
push
js
imul
lods
outsl
adc
arpl
or
shrb
xchg
pop
sbb
es
gs
adcl
pop
test
iret
xchg
pop
sub
filds
mov
sti
or
das
jl
cmc
inc
aad
icebp
in
adc
test
nop
mov
int3
pop
and
daa
and
xchg
xchg
inc
clc
pushf
into
or
movsb
mov
xor
pusha
sub
sbb
jae
out
mov
test
dec
mov
call
jl
xchg
sbb
hlt
inc
push
scas
addb
daa
sub
bound
jb
and
pop
addr16
mov
adc
mov
push
sbb
jae
pop
cmp
xchg
pushf
lret
mov
xchg
scas
pop
sbb
dec
jb
and
xor
cmp
repnz
mov
stos
orb
mov
jnp
mov
rcr
ret
ss
cmp
lcall
mov
xchg
xchg
addr16
cmc
cmp
xchg
push
cld
clc
mov
ljmp
sub
clc
xorl
mov
mov
enter
sub
imul
loopne
inc
cmp
ret
xchg
push
jae
das
jg
gs
mov
sub
ds
mov
mov
xchg
xchg
outsl
ret
push
pop
xor
insl
test
mov
arpl
pushf
movsb
cmp
mov
in
sahf
negl
jae
popa
cmp
pop
dec
dec
xlat
pop
push
jne
add
outsl
xchg
sti
dec
js
mov
out
cld
ret
fldt
xchg
cltd
stos
ds
ljmp
sub
mov
dec
ss
pop
arpl
push
sub
and
out
cli
cli
sbb
jmp
mov
rorb
dec
rclb
jmp
out
xor
cmp
daa
in
inc
jmp
pop
cmp
mov
push
cmp
push
shlb
pop
mov
stos
xchg
jp
pop
xor
fnstcw
insb
lret
pop
jne
cmc
mov
push
sbb
adc
add
inc
push
xchg
add
in
dec
fistpl
or
push
jg
dec
cld
lea
adc
lcall
jno
mov
testl
push
add
or
inc
cwtl
repnz
addr16
dec
add
adc
cld
jg
push
jge
xor
lcall
sub
mov
loop
int
jl
mov
dec
add
push
scas
movsl
add
dec
ja
sbb
aas
mov
and
jnp
push
push
xchg
je
shrl
jno
jge
aas
notl
or
push
xchg
idivl
movsb
add
add
sub
imul
adc
fsts
pop
mov
xchg
insb
iret
cli
test
sub
xchg
mov
push
or
push
nop
adc
cmpsb
or
pop
xlat
mov
mov
ja
outsb
sbb
int
adc
js
clc
pushl
cmp
enter
stos
dec
cmpsb
lcall
dec
jmp
dec
test
lea
cmp
scas
push
or
jl
fimull
push
movsb
stc
push
in
xlat
mov
jle
rcll
adc
mov
mov
mov
dec
fwait
pop
jp
stos
jo
mov
adc
xchg
jmp
sub
cld
xlat
mov
ljmp
push
or
push
je
out
out
in
jbe
sbb
fistps
lods
shl
push
aad
mov
sbb
mov
je
add
push
cmp
cwtl
pusha
pop
sbb
xlat
dec
adc
ss
or
inc
int
jl
rorb
or
mov
testb
mov
imul
inc
xchg
adc
xor
lds
cmp
mov
push
mov
cmpsl
stc
add
adc
mov
imul
add
lcall
dec
mov
mov
jns
push
test
pop
cmpsl
push
pop
and
mov
adc
sti
iret
arpl
adc
sub
cli
mov
enter
jb
jp
inc
es
add
shlb
or
cmp
jg
sbb
jmp
mov
cld
pop
enter
jle
imul
xor
fsubl
ss
in
stc
add
call
cld
mov
fisubl
std
mov
cwtl
mov
xchg
in
dec
push
pop
cmp
enter
loope
mov
scas
loop
stos
iret
outsb
stos
arpl
movb
loopne
call
shlb
in
scas
sub
std
push
insl
mov
xor
insb
iret
add
mov
imul
inc
outsb
rcll
aas
out
sbb
add
imul
movsl
mov
push
pop
mov
pop
lea
repnz
hlt
outsl
add
adc
enter
lods
add
or
cwtl
xchg
add
jecxz
mov
repnz
jbe
lds
adc
lahf
lea
imul
push
fwait
xor
xor
popf
xor
pop
push
mov
sbb
addr16
aad
adc
add
shlb
shlb
or
mov
push
psrlq
aaa
std
scas
int
or
int3
xchg
adc
xor
js
inc
cmp
push
xchg
dec
mov
jmp
or
repz
fwait
jl
dec
dec
in
shll
inc
push
int3
pop
sub
adc
and
inc
test
dec
cmp
pop
shlb
pushf
les
ja
mov
xchg
hlt
incb
int
popa
dec
push
je
inc
jle
mov
sub
cltd
mov
int3
rol
mov
mov
xor
in
loope
mov
inc
negl
or
std
sbb
sti
cmc
jge
dec
push
sbb
xor
mull
inc
sarb
add
loope
mov
iret
dec
jno
cmp
jle
dec
xchg
pop
dec
push
mov
adc
dec
or
mov
rolb
pop
subl
inc
and
push
hlt
in
popa
cmp
aaa
enter
and
gs
mov
mov
jecxz
and
push
repnz
imull
roll
pop
xchg
ss
push
lds
sahf
push
xchg
dec
dec
std
sub
and
inc
movsb
mov
inc
xor
lods
or
mov
xchg
and
pop
icebp
ds
xchg
push
mov
daa
cmp
or
cmp
sub
cmc
in
add
sbb
or
lds
push
sbb
mul
inc
outsb
in
jne
in
cmp
adc
mulb
or
sahf
mov
mov
jge
pop
cmpsb
dec
push
ret
scas
imul
pop
add
mov
ret
js
xlat
imul
jge
sarl
cld
mov
cwtl
inc
xchg
int
fsubl
lods
jns
and
ret
push
ja
mov
cld
pop
repz
jo
cmp
adc
mov
ljmp
lea
xorps
dec
std
cmpb
cmpsl
je
jg
cmp
sti
in
jle
out
cmpsb
repnz
sbb
jmp
sub
je
mov
and
and
sub
sub
xchg
aam
jg
dec
jo
and
push
sarb
xchg
les
fldt
sbb
fimull
andl
gs
and
adc
sbb
mov
push
leave
mov
xchg
les
imul
push
jl
xchg
pop
rcll
jmp
scas
adc
in
mov
in
imul
pushf
adc
xchg
inc
add
dec
hlt
add
mov
xchg
sbb
jg
xchg
push
imulb
sarb
pop
sbb
rcll
leave
cmpsl
mov
xchg
sbb
jns
repnz
sahf
push
and
mov
fucomip
push
es
jecxz
andl
sub
flds
xchg
test
inc
push
xchg
movl
jp
pop
sbb
in
lahf
mov
inc
xchg
stc
divb
imul
inc
inc
fldcw
cmp
in
bound
fs
sub
jl
nop
xor
xchg
add
sti
adc
mov
jmp
adc
inc
cmp
cmp
fdivr
in
mov
movsb
pop
fs
in
push
sbb
pop
jns
fcomp
fimuls
xor
mov
in
xchg
mov
bound
sbb
jnp
xor
pop
or
jp
mov
dec
inc
mov
imul
add
lds
pop
and
or
lea
mov
lret
jo
adc
add
adc
loop
inc
and
scas
pop
in
mov
into
loopne
fistl
and
imul
aam
xchg
sbb
ret
fidivs
xor
addl
lods
xor
mov
mov
cwtl
call
movsl
add
repnz
mov
push
icebp
insl
ljmp
dec
lret
cmp
test
jns
cwtl
fisubrl
xor
mov
push
clc
les
inc
enter
test
jb
add
rorl
aaa
je
int
pusha
sub
pop
adc
enter
fiaddl
addr16
cmp
mov
fldcw
sbb
sbb
jnp
mov
mov
daa
cli
jp
loop
or
mov
imul
addb
and
cmpsb
mov
das
test
jns
cmp
mov
jae
fisubs
mov
pop
dec
xchg
mov
cmp
sub
fldt
lcall
mov
pushf
sti
push
adc
movsl
lock
sub
sbb
cltd
pop
adc
fadd
clc
sbb
outsb
outsl
in
jle
mov
int3
xor
aas
pop
mov
bnd
fdivl
loope
leave
lret
adc
mov
sti
jge
adc
pop
divl
clc
adc
jmp
in
xor
call
adc
repnz
lcall
pop
insb
sbb
xchg
push
out
aaa
push
jb
pushf
add
inc
aam
pop
cmp
dec
insb
aas
sbb
inc
je
mov
or
mov
outsl
divl
pop
out
pushf
xchg
push
mov
jns
stos
jecxz
je
pop
adc
xchg
loope
push
xorl
mov
sub
sbb
fcomi
mov
fsubl
or
push
push
sbb
fldl
scas
je
fcomp
pop
sub
js
data16
out
cli
das
mov
jecxz
int
pop
mov
outsl
aaa
clc
arpl
movsl
sbb
xchg
push
sbb
mov
cwtl
lods
push
add
and
jg
pop
ret
lret
adc
ss
xchg
push
imul
lahf
xor
jbe
sub
cmc
pop
shl
mov
cmp
pusha
jb
pop
ljmp
test
jmp
pop
inc
push
cmovne
add
add
or
xor
xchg
pop
sub
out
mov
push
inc
inc
pop
dec
push
lds
fsubs
rolb
push
push
cwtl
and
push
loopne
sub
ljmp
push
adc
or
adc
cmp
add
fst
stos
ret
push
inc
cmp
jecxz
lea
push
das
push
mov
mov
mov
xlat
insb
je
or
int
jno
aam
sub
inc
outsb
fwait
sub
ret
lcall
pushf
add
jae
pushf
sbb
mov
push
in
jp
adc
das
fistl
imul
mov
cwtl
es
ljmp
mov
jno
arpl
jge
add
loop
fldz
loop
in
outsl
in
aaa
jne
adc
mov
sub
adc
xor
movsl
dec
cmp
addl
xchg
push
dec
mov
cld
pop
cwtl
jno
mov
stos
xchg
add
and
cmc
repnz
xchg
dec
mov
mov
loopne
fcoml
pop
stc
xchg
jl
insl
movsb
xchg
pop
ret
cmp
inc
leave
out
xchg
scas
pop
mov
mov
xor
shlb
lret
adc
movsl
imul
adc
cmpsb
mov
iret
lds
mov
mov
cmp
push
fstps
pop
ljmp
lcall
test
bound
shr
mov
mulb
cld
fisubl
mov
in
or
add
scas
lods
lds
fstpl
xchg
push
xchg
xchg
sbb
pushf
jg
xor
fidivl
and
bound
adc
add
jne
into
sbb
or
aaa
repnz
loopne
shrl
dec
adc
leave
dec
pop
pop
rclb
cmpsb
jl
fdivrp
aas
push
mov
lea
lods
push
xor
sbb
cli
std
insl
push
jle
jmp
mov
xchg
lcall
cwtl
dec
sub
call
in
cmp
divb
clc
mov
imul
cmp
mov
icebp
inc
jno
cld
xchg
or
add
mov
adc
fwait
lds
pop
loope
das
pop
pop
xchg
cmp
jmp
pop
bound
enter
sarl
and
mov
mov
adc
mov
popa
xchg
mov
mov
jmp
repnz
xor
popf
jg
and
sub
push
aas
je
or
test
inc
loop
mov
ljmp
testb
sbb
dec
aam
out
in
add
out
add
or
inc
test
loop
in
in
rcr
cmp
inc
test
xchg
cmpb
dec
inc
mov
add
lret
sbb
and
sbb
fbld
add
js
lahf
in
in
mov
aad
hlt
in
mov
out
shll
adcb
mov
jmp
xchg
leave
dec
rclb
mov
stos
in
repnz
movsb
out
icebp
mov
adc
jmp
mov
pop
sbb
mov
jmp
daa
fidivs
inc
cmp
out
les
nop
add
or
popf
xchg
pusha
addb
sub
xor
cld
rorl
cmp
int
cli
jno
dec
outsb
outsb
jno
dec
insl
stc
sahf
addb
sbb
clc
mov
ljmp
sub
jecxz
int
xchg
cmpsb
push
cmp
mov
test
mov
ret
jmp
pop
inc
fists
call
cli
lea
lret
lret
jb
or
push
xchg
add
mov
jl
xchg
cmpsb
adc
jmp
sub
and
mov
nop
mov
push
and
in
fs
movl
pop
jl
jns
dec
cli
aad
adc
or
adc
jg
hlt
dec
rorl
int3
add
sbb
lods
push
jg
dec
lea
hlt
cli
cmpsl
jbe
aad
xor
adc
push
arpl
jo
sbb
dec
adc
push
add
mov
fdivp
repnz
ljmp
dec
lock
or
int3
in
arpl
js
shrl
xor
in
out
les
fcompl
push
arpl
push
mov
adcl
xchg
aaa
hlt
add
loop
pop
daa
fs
xor
cli
aas
movsl
mov
and
mov
dec
xor
and
and
sub
adc
aam
pop
adc
cld
shll
sub
mov
xor
pop
outsb
dec
push
pop
mov
cmp
into
and
mov
cmp
into
mov
xchg
adc
inc
repz
jp
in
cs
cs
cli
cmp
mov
int
and
sub
imul
xchg
int
jle
outsb
mov
clc
push
push
jg
dec
outsl
cmc
cmp
stos
sub
das
aam
xor
xchg
nop
mov
inc
std
add
subl
cmpsb
push
cltd
inc
xor
repz
fadd
into
mov
jae
into
adc
dec
push
lahf
inc
movsl
movsl
sbb
or
inc
mov
movsl
vmovdqa
xchg
and
lret
addr16
sub
xchg
lods
xchg
mov
pop
popf
mov
xchg
loope
movsb
adc
sub
ret
add
or
popf
icebp
iret
sub
sbb
pop
out
lods
inc
push
insb
out
ror
scas
jno
push
cmp
and
cld
in
test
pop
xlat
lock
jecxz
popa
ret
sub
add
xchg
loop
ljmp
sub
push
jp
rclb
cmpsl
fbstp
mov
dec
fcompl
pushf
mov
ret
test
sahf
test
fiaddl
and
mov
ss
rol
fmuls
sub
daa
pop
fwait
inc
mov
pop
pop
leave
pop
imul
adc
jno
inc
je
leave
push
fisttps
xor
cmpb
adc
mov
push
jle
mov
cltd
cmp
mov
xor
adc
xchg
out
jns
lcall
and
rcrl
insb
add
or
inc
cmp
nop
in
cmp
loopne
shrb
and
insl
add
or
inc
cmp
nop
in
cmp
loopne
shrb
and
insl
add
popa
sbb
mov
mov
std
lock
popf
shrl
and
insl
add
or
rol
xor
cmp
orb
push
cmp
inc
mov
andl
cs
fnstenv
and
xor
add
adc
arpl
push
mov
inc
mov
andl
jecxz
repz
and
xor
shlb
add
adc
mov
loop
mov
inc
mov
andl
jecxz
repz
and
xor
push
adc
arpl
sbb
sarb
jae
js
enter
inc
pop
cld
fmuls
inc
sbb
test
jb
push
cmp
filds
insb
sbb
repz
cmp
sub
jge
cmc
jb
adc
fsubp
repz
sbb
lea
fsubl
cmp
rorl
es
push
cmp
lods
xchg
jo
add
adc
ror
scas
sbb
mov
rcrb
pop
mov
insb
mov
xor
xchg
nop
mov
push
cmp
inc
push
sbb
dec
push
rcl
je
ret
sar
lock
xor
shll
andl
jecxz
repz
and
xor
shlb
add
adc
arpl
push
das
push
ljmp
adc
movsl
push
movsb
add
jae
and
push
out
incl
jecxz
mov
mov
mov
adc
das
lds
loopne
or
adc
ret
and
xor
shlb
add
adc
arpl
push
mov
inc
mov
andl
jecxz
repz
and
xor
shlb
add
adc
arpl
push
mov
inc
xchg
sbb
sarb
sub
notb
mov
jns
xor
xchg
pop
test
fldenv
pusha
popa
lods
push
in
mov
addr16
add
inc
pop
push
inc
repz
popa
inc
pop
adc
bswap
or
xchg
jg
stc
popf
mov
jnp
addr16
xor
aam
xchg
or
jbe
insl
or
js
xor
xor
stc
xchg
mov
inc
adc
adc
and
mov
stos
jge
cmp
sub
imul
mov
jecxz
scas
shl
lock
inc
jl
cmpsb
mov
jmp
xor
les
sub
push
ss
pushf
and
ss
adc
inc
jecxz
push
sub
and
rorb
shll
ljmp
test
or
ret
out
mov
call
out
ss
aaa
mov
inc
add
cmp
shll
in
pop
and
out
out
pop
lock
mov
sbb
xchg
loope
or
mov
cmpsl
inc
mov
mov
int
mov
nop
cmp
insb
cmp
and
mov
xchg
icebp
mov
repz
sbb
pop
out
and
cli
loop
movb
mov
inc
and
dec
negl
push
mov
cltd
and
mov
fwait
stc
cs
xchg
mov
pop
scas
xchg
lea
sbb
cmp
aaa
pop
cld
cmp
mov
jae
out
sbb
push
and
push
mov
xor
jmp
cld
daa
jmp
aaa
push
shll
fidivrs
enter
mov
adc
mov
dec
sahf
das
dec
sti
leave
imulb
dec
jge
int
mov
int3
mov
cmp
mov
shl
es
mov
mov
aam
loop
sbb
addr16
outsl
pop
ds
lods
dec
xchg
inc
mov
inc
pop
fcoms
fstpt
or
sahf
inc
pop
sbb
mov
dec
and
jno
push
idivl
mov
aad
sub
jp
push
mov
pop
daa
fildll
std
cli
push
cltd
cmp
test
push
and
lret
inc
int3
and
ror
fcoms
xlat
jl
cltd
dec
jg
push
mov
push
adc
iret
add
add
jae
add
jb
adc
sti
xchg
sbb
jne
gs
into
int
inc
or
pop
and
jmp
sarb
nop
cwtl
icebp
insb
sbb
std
jge
xor
mov
or
push
stos
and
je
pop
or
lahf
sete
dec
lea
pusha
cmp
movsb
std
int3
inc
jno
push
jmp
mov
jno
shlb
add
mov
mov
icebp
into
mov
pop
jb
lret
dec
adc
fstpl
cmpsb
dec
icebp
in
sub
push
sbb
push
xor
stos
xchg
fimull
sarb
jbe
mov
aad
out
mov
js
jae,pn
add
adc
loope
push
sarl
push
aaa
xchg
stos
clc
les
insl
sub
sub
out
cmp
jno
fstl
cs
cmp
outsl
popl
push
and
lcall
sub
sar
cmpsb
dec
mov
mov
xchg
mov
pop
adc
sub
pop
xchg
sub
in
cmp
xor
mov
jle
aam
aad
call
jmp
aam
adc
mov
arpl
std
sarb
push
sbb
jecxz
mov
mov
push
loop
mov
xchg
or
jmp
xchg
test
dec
ss
inc
lret
push
xlat
xor
sub
sbb
pop
xchg
aam
cs
lret
in
or
repz
out
jle
clc
mov
jecxz
inc
push
mov
fucomip
fmuls
pop
movsb
cmpsl
add
imul
push
mov
shlb
aam
lods
loope
out
shrl
scas
push
push
ss
ret
sub
out
jno
mov
call
dec
pop
mov
movsl
dec
and
xchg
sbb
lock
mov
outsb
std
mov
daa
movsl
dec
dec
adc
inc
jge
sbbl
lea
mov
cmpb
imul
stos
imul
cmp
mov
into
pop
adc
call
pop
cmp
enter
dec
mov
insb
dec
xchg
aam
mov
jl
and
dec
repz
add
pop
inc
mov
push
jg
mov
push
and
icebp
inc
and
mov
out
sub
adc
push
pop
dec
adcl
inc
add
sbb
test
nop
outsb
dec
dec
jns
stos
push
jno
mov
add
outsl
rorl
sub
into
shll
out
jae
into
movsl
or
insb
push
jl
push
and
or
and
xchg
add
adc
push
test
mov
mov
inc
fisubs
lea
pop
fsubr
outsl
mov
ljmp
sti
cmp
mov
dec
cmp
divb
adc
ss
add
mov
jo
addl
dec
xchg
sti
mov
jae
lods
jno
leave
ret
mov
stos
push
scas
in
jno
fs
jb
pop
mov
cmpsb
adc
ljmp
pop
scas
inc
setno
aam
fidivrl
lahf
into
add
cmpsb
cltd
fadds
imul
xor
push
mov
fwait
add
pop
lahf
imul
mov
jo
cmpsl
shl
dec
push
imul
push
or
icebp
mov
andb
mov
push
cmp
push
popf
pop
mov
mov
stos
push
ret
shrl
aad
test
in
mov
sbb
test
and
pop
push
and
inc
push
ds
cmp
ret
ret
aas
imul
mov
xchg
jbe
lea
push
and
repnz
sub
andb
push
add
xor
xor
and
js
imul
sbb
xchg
fadd
sub
xor
jne
inc
cli
sbb
xor
fcmovbe
xor
scas
into
and
inc
dec
cmpb
add
mov
adc
bound
mov
and
aas
dec
xchg
sub
lods
out
popa
movsb
shlb
loop
stos
in
inc
clc
stos
and
and
mov
dec
xlat
sub
mov
cwtl
xlat
repnz
xchg
and
cwtl
jp
mov
insb
pop
rsqrtps
aam
dec
fcompl
stos
in
aad
lahf
movsb
adc
lahf
xor
into
fwait
sbb
fistpll
inc
add
dec
cs
sbb
loop
mov
jmp
add
fldcw
rolb
mov
xchg
cli
popf
lret
jnp
rcrb
fcomps
movsl
xchg
jnp
ja
mov
add
mov
mov
inc
cmp
mov
mov
cmp
shr
inc
aam
fisttpll
in
daa
int
sbb
outsl
push
es
roll
and
inc
mov
repnz
shl
and
pushf
lock
sub
mov
inc
mov
shrb
sub
dec
clc
or
std
ret
aam
scas
sbb
xor
xor
aad
lods
mulb
gs
js
jg
mov
push
cwtl
xor
loop
pop
sbb
inc
movsl
pop
mov
cltd
sbb
rcr
mov
and
cmpsl
push
xor
mov
xchg
ss
fcomps
gs
push
negl
test
push
into
mov
cltd
mov
inc
enter
fistl
test
xchg
push
jmp
adcl
pop
add
lret
add
push
add
sbb
pop
dec
push
adc
aaa
xorl
push
dec
imul
andb
jg
and
sub
lcall
push
push
lret
cmpsb
test
hlt
ret
xor
xorl
push
ror
or
xchg
mov
pushf
int3
mov
pop
sbb
std
dec
imul
das
push
cmp
fwait
loope
js
stos
adc
repnz
push
jo
lods
fcoms
cmpsl
pop
js
shrb
jnp
dec
pusha
push
out
mov
mov
ret
test
into
adc
push
js
hlt
xchg
push
pop
int
add
test
addr16
fisubl
pop
test
sub
xor
repnz
inc
ficompl
cmpsb
enter
xchg
in
jnp
idivb
xor
xor
push
lahf
aad
push
sbb
cmp
mov
and
mov
lret
or
ret
or
fmuls
jg
pop
cmp
bound
or
ljmp
fs
xchg
pop
dec
mov
dec
add
pop
icebp
ret
lds
daa
jo
scas
sub
push
in
push
push
dec
xor
inc
pop
fildl
and
and
insl
pop
adc
mov
loope
push
inc
and
xor
lods
subps
cmp
insb
je
or
lock
mov
ss
cli
inc
pop
add
mov
int
cmc
lods
out
mov
jbe
sbb
or
dec
pop
aaa
fwait
push
mov
mov
jb
push
sub
lcall
and
enter
cmp
stc
mov
inc
add
cmp
mov
sub
loope
icebp
sarl
movsl
lea
dec
xor
scas
xor
push
mov
fwait
cmp
hlt
mov
daa
outsb
push
fbld
bound
cltd
cmp
xor
repnz
lret
cltd
int
xor
xor
fildl
subb
dec
xor
xor
pushf
cs
jp
loop
fiaddl
lcall
add
ds
movsl
rcl
fs
outsb
lods
repnz
pop
push
fadds
test
popa
adcl
movsb
push
andl
in
cwtl
xchg
ret
scas
movsl
mov
sbb
mov
inc
xor
adc
icebp
pop
inc
mov
lahf
pop
mov
pop
fdivl
outsb
leave
sub
nop
ret
adc
dec
pop
jl
lret
popa
imul
mov
test
mov
cmp
push
enter
mov
loope
iret
inc
mov
nop
lret
sti
xor
jbe
push
dec
lcall
or
xchg
sbb
loope
sbb
cmpsl
lock
add
jns
cld
adc
and
fistl
or
push
dec
xchg
ret
pop
fimull
lret
push
sub
mov
data16
mov
je
inc
pushf
inc
iret
aaa
movsb
lret
decl
jmp
fxch
icebp
fwait
jg
movsb
and
mov
hlt
and
pop
inc
sahf
mov
pushf
cmp
xchg
mov
inc
test
mov
and
in
hlt
pop
insl
or
ljmp
xor
jae
mov
enter
lcall
sub
call
insl
out
mov
sub
fimull
jne
mov
arpl
cmp
test
lods
pop
pop
imul
movsb
repnz
xchg
xchg
imul
mov
sbb
jmp
xchg
xchg
dec
fstpl
sub
push
lods
insl
aaa
out
das
sbb
xor
mov
adc
ss
ds
popf
cli
xchg
jge
dec
aas
adc
outsb
mov
movsl
jno
popf
lahf
lods
cli
aad
and
dec
jne
push
bnd
nop
popa
pop
inc
insl
subb
jp
daa
xchg
xor
push
icebp
dec
test
lods
insb
data16
pop
les
adc
test
dec
in
inc
sub
std
mov
inc
test
mov
movsl
sub
fisubs
lret
sub
cmp
jbe
mov
js
cmpsl
insl
shlb
and
stos
sub
shll
fisttps
add
or
clc
into
addr16
stos
aas
adc
test
insl
sbb
xor
movsb
sbb
push
aad
popa
les
stc
jmp
gs
mov
dec
add
andps
jbe
cld
movsb
pop
push
call
cld
dec
add
das
je
cmp
and
hlt
add
lods
and
int3
mov
cwtl
mov
xchg
cli
jne
inc
mov
inc
lcall
in
insb
imul
or
xchg
movsl
push
mov
fldcw
insb
inc
js
repz
adc
mov
lods
push
inc
dec
cs
call
cmp
or
popf
lods
push
cmpsb
cmp
adc
sub
fs
inc
ds
ret
popa
push
jge
shlb
outsl
push
xchg
cmpsb
mov
arpl
stos
pop
cmp
adc
xchg
arpl
hlt
add
push
jb
movsb
mov
flds
fnstenv
xchg
fucompp
test
mov
insb
sub
xchg
aaa
lock
stos
inc
cmc
push
cli
popa
adc
das
cli
dec
push
jo
and
cmp
adc
push
std
lret
std
xchg
fistpl
jae
xchg
lcall
push
aas
fldl
loopne
xchg
scas
sbb
gs
jmp
enter
push
mov
outsb
pop
mov
jmp
ljmp
push
mov
jbe
xor
test
fstpt
sub
ljmp
adc
xchg
mov
dec
fadd
pop
inc
js
enter
mov
xchg
xchg
sti
push
ret
push
fisubs
push
push
xlat
and
mov
pop
shll
arpl
and
test
shr
mov
int3
arpl
lods
movsb
or
push
lret
cmp
orb
jg
jmp
sbb
imul
add
mov
sub
icebp
pop
cmp
cmp
push
jge
inc
sbb
push
imul
pop
pop
enter
cmp
and
dec
jb
mov
test
or
pusha
mov
inc
mov
out
enter
jbe
movsb
outsb
cmp
and
mov
dec
push
dec
jb
andb
jne
in
xchg
adcb
mov
mov
stos
add
or
iret
fstpt
xor
mov
test
aam
adc
cmpsb
out
mov
mov
cwtl
and
in
addr16
ja
test
xchg
gs
or
cmp
jb
xchg
jg
jbe
test
push
repnz
sbb
lods
sub
add
cmp
scas
cli
inc
sbb
sahf
dec
das
aam
mov
icebp
pusha
jmp
sbb
test
xor
push
add
or
test
sbb
je
mov
stc
in
push
adc
das
add
jb
mov
imul
sti
loopne
pop
pop
xchg
movsb
add
rcr
xor
mov
incb
mov
fwait
jge
js
push
loope
stc
imul
push
ds
repnz
mov
xchg
mov
jg
sub
jle
xor
arpl
add
pop
and
out
xor
mov
or
pushf
mov
arpl
dec
and
adc
enter
fs
jnp
lret
adc
mov
fbstp
cmp
mov
insl
repnz
xor
ss
insb
push
push
add
std
inc
insb
xor
mov
jg
mov
or
inc
std
call
cltd
lcall
nop
cmpsb
push
pop
cmp
sti
mov
pop
pop
cmpsb
cmpsb
sub
push
pop
hlt
pop
bound
jmp
ret
fidivrl
insb
das
test
pop
testl
sub
pop
adc
js
push
rcrb
sbb
add
cmp
and
outsl
xchg
push
fcomp
xchg
mov
pop
jg
clc
adc
sbb
push
add
imul
mov
and
aad
mov
push
add
in
mov
xchg
lret
ffree
arpl
js
rclb
imul
mov
jecxz
mov
sub
mov
xor
inc
dec
loop
es
add
filds
pop
mov
inc
inc
jmp
iret
sub
xchg
pop
out
sbb
shl
inc
sbb
sqrtps
pop
xchg
pop
adc
add
jle
dec
in
dec
pushf
popf
sbb
stos
pop
aas
leave
cmc
js
aas
mov
test
xor
jp
arpl
decl
mov
arpl
xorl
mov
pop
fucomp
sbb
cmp
pushf
fsts
mov
pop
mov
pop
iret
xchg
xor
fs
xor
out
sarl
cmp
xor
inc
test
inc
into
or
mov
loopne
loopne
insl
adcb
mov
push
in
out
push
pop
adc
inc
int
push
imul
push
addl
daa
in
pop
in
test
cmp
iret
flds
gs
in
sar
xor
icebp
insl
jg
adc
cmc
or
xorb
sahf
movsb
xor
iret
xor
popf
es
pushf
imul
pop
rolb
movsb
out
fwait
js
lods
inc
mov
inc
ja
inc
xchg
lret
adc
fiadds
insb
push
adc
pop
aas
ret
add
outsl
mov
adc
sbb
xor
mov
imul
jb
mov
xchg
or
xor
mov
les
push
out
loop
aaa
add
jecxz
enter
aaa
movsl
outsb
in
sbb
sbb
and
dec
jnp
xlat
or
jno
ret
sub
ror
mov
push
pop
out
fcmovne
cltd
or
mov
cmpsb
xchg
cmp
repnz
jl
push
mov
shrb
xor
icebp
cmpsb
loop
pop
mov
and
pop
push
sbb
jl
sub
pop
adc
and
movsl
iret
mov
cli
mov
lods
mov
or
or
outsl
ss
dec
cs
sub
cmp
insb
push
stos
mov
sub
out
sub
jnp
xchg
xor
mov
push
mov
jl
adc
cmp
loopne
shlb
mov
jl
loope
mov
gs
movsl
in
repz
jmp
enter
ja
jg
rcrb
loopne
popf
and
xor
mov
es
sub
ja
mov
andl
daa
imul
fsubs
or
lcall
in
push
popf
outsl
popa
xchg
ficompl
inc
in
pop
push
mov
push
pusha
rorl
add
mov
add
clc
dec
jle
test
insb
punpckhdq
xchg
das
movsb
add
enter
int
pop
lret
shrb
pop
gs
mov
dec
jb
mov
outsb
out
cmc
push
push
adcb
or
xchg
or
aaa
hlt
jg
push
iret
xor
jo
push
xchg
lods
popf
xor
jge
cmp
mov
fbstp
and
xchg
jmp
les
and
sbb
and
ljmp
inc
mov
push
mov
push
pop
add
ja
sti
push
fidivl
inc
jmp
xchg
cld
mov
mov
pop
ja
cld
mov
adc
jg
add
sbb
popf
int
pusha
adc
inc
mov
inc
test
cmp
ror
xchg
jnp
dec
sbbb
fadds
dec
dec
bound
adc
sbb
add
and
pop
movd
imul
mov
ss
addr16
test
jo
dec
xor
sbb
jns
inc
and
xchg
mov
and
data16
fcmovb
scas
add
xchg
xchg
dec
xor
lret
inc
jle
and
cltd
cmpsb
movsl
stos
pusha
xchg
bound
hlt
and
packuswb
jb
daa
mov
jecxz
and
pushf
pcmpeqd
cmp
adc
sub
xchg
leave
out
cmc
sbb
shll
icebp
ljmp
fcmovnu
dec
or
mov
mov
roll
jl
inc
hlt
add
rcrl
xchg
jmp
imul
popa
xlat
xor
fisubrl
add
push
push
rorb
lcall
mov
shlb
sub
and
mulb
lret
xchg
mov
clc
push
rcrl
int3
ss
test
adc
popa
aam
pop
adc
pop
rclb
jno
adc
cmp
lds
jle
and
push
mov
mov
lret
into
inc
push
push
xchg
arpl
ret
and
adc
idivb
jns
or
ljmp
cltd
std
stos
test
js
jg
pop
test
pop
adc
inc
xchg
cld
pop
icebp
shlb
es
enter
js
or
es
cs
jno
mov
inc
add
adc
test
sbb
sbb
scas
xlat
ret
jge
sub
dec
ret
mov
pop
push
and
call
and
std
pop
int
push
xchg
and
mov
sub
int3
popa
push
push
andb
jecxz
repz
and
xor
shlb
add
adc
arpl
push
mov
inc
mov
andl
jecxz
repz
and
xor
shlb
add
adc
arpl
push
mov
inc
xor
add
xchg
jo
add
nop
ret
and
and
rolb
loopne
lock
push
mov
inc
mov
andl
jecxz
repz
and
xor
shlb
test
or
outsl
xor
dec
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
and
xor
add
adc
pusha
sbb
and
in
fcoms
xorb
mov
shl
push
xor
insb
adc
pusha
push
jo
inc
jbe
push
mov
mov
cmpsb
mov
not
out
push
ret
ss
adc
jbe
les
cmc
mov
mov
add
es
inc
lcall
repz
fisubs
jge
mov
subb
dec
push
lock
int
les
mov
lods
xadd
das
mov
push
jne
jne
push
and
test
test
or
ret
mov
or
pop
cld
push
pop
and
push
cld
jno
cmc
jo
mov
imul
cmp
cld
shl
fbld
push
and
stos
pushf
fdivrp
iret
lret
sbb
inc
subb
orb
movsl
test
cmp
fcompl
fists
out
data16
push
cltd
mov
xchg
insl
mov
repz
pushw
add
adc
test
inc
inc
jbe
data16
sub
test
cli
repnz
inc
je
push
das
xor
push
xor
shl
rclb
mov
insl
jae
arpl
jno
or
adc
add
fucom
incl
mov
xchg
mov
dec
popa
inc
inc
inc
xor
inc
inc
jbe
data16
mov
cmpsb
loopne
lock
shl
and
xor
add
adc
pusha
push
jo
inc
jbe
data16
mov
cmpsb
loopne
lock
shl
and
xchg
outsb
ret
in
and
and
jg
sbb
jge
adc
sbb
gs
cmp
sub
lock
mov
aam
shl
dec
movsl
or
outsl
dec
pop
push
dec
rorl
iret
hlt
jmp
jg
cwtl
pop
xchg
aad
out
das
sbb
mov
outsl
pop
add
cmp
push
test
mov
aas
xor
jg
fldcw
or
inc
pop
push
mov
pop
dec
and
add
inc
add
std
cli
out
sbb
pop
add
mov
adc
repz
out
dec
inc
daa
test
cmp
xor
add
ss
cmc
adc
adc
in
int
add
jl
jns
shrl
mov
inc
leave
mov
push
cs
mov
outsl
sub
rcl
jp
pusha
in
rcr
push
lcall
pop
ss
iret
add
loopne
leave
stos
leave
xchg
fwait
jge
shr
inc
popf
shlb
test
push
and
stc
mov
lret
mov
adc
mov
xlat
mov
lea
mov
xchg
pushf
push
popf
hlt
xchg
xchg
pop
mov
pushf
cmpsl
xchg
sub
xchg
jns
xchg
dec
loop
in
sbbb
cmp
das
cli
sarl
das
add
xchg
xor
cmpsl
and
hlt
xor
ljmp
xor
mov
and
lods
push
pop
mov
jmp
and
sub
loope
or
leave
arpl
or
stos
in
inc
lret
imul
aam
lods
add
gs
stc
fsubrl
out
ret
into
and
iret
rcrb
call
popa
mov
mov
pop
jmp
pop
repz
jecxz
cwtl
mov
push
inc
lret
fwait
leave
inc
or
mov
add
sbb
lds
shr
stos
arpl
push
rcrb
xchg
add
sub
fucomp
stos
xor
mov
ss
ret
repnz
push
xlat
jbe
jnp
leave
push
and
mov
fwait
loopne
cmp
push
negb
xchg
jecxz
repnz
cmpsl
mov
lea
jle
lret
add
sub
push
sbb
jae
ret
imul
mov
mov
gs
enter
and
pop
fs
pop
mov
cmpsl
xchg
push
xchg
cli
xchg
xchg
mov
in
stc
mov
mov
mov
jo
mov
jbe
nop
fwait
xor
sbb
daa
dec
popf
test
movsl
outsl
dec
pop
and
mov
dec
mov
dec
test
and
outsb
out
sti
lahf
fimull
cmp
ljmp
and
pop
mov
or
fwait
jmp
mov
sub
int3
push
jbe
lods
mov
mov
clc
mov
out
mov
subl
in
xorl
mov
enter
arpl
push
mov
test
clts
inc
xchg
add
decb
shlb
pop
pop
lock
movsb
es
xor
pop
xchg
cmp
sub
pop
in
lcall
inc
pop
pop
fdivp
mov
cwtl
lcall
push
int
cmp
dec
pop
add
pop
cld
mov
pop
or
fwait
add
fs
scas
pop
sub
popa
pop
jecxz
mov
int
cmp
lahf
sbb
inc
and
or
add
jae
fisubrl
test
int3
ss
dec
push
sbb
mov
shll
addr16
cwtl
mov
cmc
lret
mov
movsl
ficompl
shll
jl
add
in
add
popa
mov
jno
inc
insb
xor
cmp
mov
mov
cmpxchg
jge
imulb
sbb
in
mov
mov
pop
popf
idivl
scas
mov
add
xchg
dec
push
dec
rcll
or
or
cmp
adcb
pushf
leave
cld
jne
pop
ja
sub
cmp
or
ret
repnz
xchg
cmp
lds
jmp
stc
cmp
jge
jae
mov
mov
or
ffree
add
xchg
mov
mov
test
dec
popf
add
adc
lahf
adc
faddl
data16
in
lds
mov
sub
and
xchg
aas
pusha
inc
mov
test
add
in
out
push
loopne
test
xchg
inc
or
lock
adc
ljmp
call
bound
add
inc
push
jmp
ror
inc
jnp
pop
dec
ret
loopew
xchg
outsb
in
push
icebp
dec
xchg
add
xlat
mov
pop
dec
js
loope
xchg
test
in
int3
les
sub
mov
push
es
push
pop
cltd
out
jno
xor
mov
pop
mov
int
mov
in
xchg
jmp
mov
test
ja
ljmp
js
jo
mov
and
out
shrb
insb
imul
inc
jmp
imul
pop
jbe
adc
add
orb
testl
cmp
popf
jne
mov
outsb
inc
popl
mov
fiadds
sbb
dec
daa
das
loopne
mov
rorb
push
movsb
dec
imul
cmp
daa
gs
rcl
nop
pop
ljmp
sti
repnz
sub
push
lds
frstor
call
aad
subb
iret
push
int
out
in
rorl
loope
icebp
inc
mov
adc
sub
cmp
das
out
adc
push
adc
cmp
inc
pusha
out
mov
jmp
out
mov
or
call
xlat
cmp
jbe
or
inc
fstpl
out
imul
add
push
push
mov
arpl
or
out
js
cmpsb
cld
sub
add
cmp
and
dec
mov
mov
hlt
sbb
call
push
or
das
and
push
dec
push
jge
fistps
enter
into
lcall
pop
cmp
in
adc
arpl
test
pop
pop
stos
ret
jnp
dec
ljmp
mov
fdivrs
push
mov
add
sub
loope
pusha
int
repnz
das
addb
outsl
inc
stc
mov
mov
mov
pop
iret
sub
fidivl
in
dec
sbb
xorb
ja
inc
xchg
shrb
jae
xor
mov
movsb
pop
shrl
scas
cmp
lea
xor
and
jmp
test
push
imul
add
jb
icebp
push
popa
add
inc
inc
xor
mov
aas
pop
push
out
inc
ret
icebp
stos
call
ss
stos
push
pop
es
outsl
jo
out
dec
call
xor
dec
lds
mov
xor
pop
scas
jno
sbb
pop
leave
mov
xor
push
sahf
fcoml
jbe
faddp
xchg
les
xchg
bound
cwtl
out
jns
hlt
pop
cwtl
dec
aad
add
cs
stc
cmp
testl
cmp
popa
jp
insl
or
int3
cmc
inc
movsl
jnp
ja
mov
dec
push
fsubrl
dec
jl
cmp
daa
out
lds
jmp
jp
in
push
ljmp
hlt
dec
mov
cmp
pusha
cmp
push
push
mov
sahf
xor
lahf
shll
sub
cmp
dec
cs
hlt
iret
push
xchg
mov
cmpl
jmp
cs
add
aas
std
sub
fnstenv
adc
mov
popa
mov
push
test
popl
push
mov
lods
lea
scas
ret
push
cmpsb
and
cmp
push
mov
jmp
xor
jae
movl
lcall
inc
pop
mov
lods
iret
push
and
jnp
pusha
pop
cmp
ds
fcmovb
push
xchg
lea
clc
push
inc
cmc
mov
outsl
insl
ja
jmp
add
and
into
into
jmp
aad
mov
sub
sub
xchg
outsb
sub
pusha
mov
or
inc
les
cmp
add
cmp
idiv
aam
cmp
jns
xchg
cmc
out
mov
xchg
cmc
mov
aaa
push
stc
cmp
or
push
add
loope,pt
pushf
shrl
and
or
mov
or
idivl
mov
push
and
jno
push
rcll
add
out
maskmovq
testl
nop
sti
mov
ret
dec
jo
jb
aad
out
shlb
add
pop
lock
push
pop
in
cmp
lret
mov
sbb
shrb
icebp
jbe
sbb
jbe
or
fldcw
or
and
or
fistl
outsl
adc
or
push
mov
cmp
rorl
dec
fwait
outsb
shrl
subb
mov
scas
inc
push
stc
jbe
cmp
push
pop
mov
insb
fsubl
out
cs
cmp
xor
dec
or
out
mov
lret
sbb
pop
cmpl
add
push
fistpl
xchg
jae
sbb
jno
pop
cmpsl
pusha
adc
loopne
sbb
mov
aas
adc
cmp
add
inc
mov
sub
mov
inc
push
push
and
mov
push
cmp
out
adc
inc
xchg
jbe
inc
test
outsl
cmp
insl
imul
cmp
mov
push
ds
aad
adc
and
push
mov
idivb
iret
push
shrb
dec
pop
subb
arpl
mov
mov
xchg
xchg
push
push
mov
jb
and
arpl
dec
xor
jns
sbb
leave
ljmp
jae
xor
jmp
inc
push
aam
push
jne
jne
push
pop
sub
xchg
ret
cmpsb
dec
xchg
adc
and
pusha
leave
int3
sub
push
popf
mov
or
push
dec
mov
jle
inc
dec
call
cli
and
in
push
icebp
ret
gs
mov
lods
repz
mov
fidivrl
pop
mov
hlt
call
pop
push
mov
mov
or
addr16
icebp
into
std
jb
cmp
bound
aaa
fwait
jb
xchg
stos
clc
and
cltd
orl
cmp
mov
sub
sbb
rcrb
into
shr
mov
jmp
xor
inc
aaa
mov
jle
pop
xchg
xor
mov
mov
hlt
jmp
ljmp
lahf
cmpsb
jns
fidivl
and
cmp
fs
pop
ret
sub
sub
push
imul
sbb
ret
ret
dec
mov
int3
aad
lahf
xchg
ror
popf
mov
pop
aam
movsb
into
xor
pop
cmpl
insb
add
aad
out
jg
or
sub
cmpb
in
xchg
jp
xor
cmp
dec
jo
dec
mov
imul
ret
movaps
jg
push
adc
ficompl
fnstsw
push
lahf
xor
loopne
sub
mov
mov
mov
out
xchg
insl
push
xor
lahf
outsb
imul
pop
xchg
fsubs
test
push
rcrl
mov
sub
push
cltd
pop
adc
test
rol
push
int3
inc
cmc
js
adc
ret
lret
pop
call
pop
mov
or
stos
fmulp
sub
dec
cltd
xchg
add
xor
mov
pop
das
jns
clc
subl
mov
adc
or
mov
ja
and
dec
add
mov
xor
cmp
adc
push
cmpsb
aas
nop
fucompp
pop
and
jb
xchg
push
pop
jae
add
pop
loope
fistl
repnz
mov
push
xor
jo
push
pop
daa
dec
mov
xor
in
mov
jo
mov
or
cmp
jno
inc
sub
mov
sarb
add
lds
lret
lcall
mov
loopne
lods
cmp
out
inc
mov
mov
xchg
add
shrb
sub
xor
out
cld
pop
push
and
pop
cwtl
push
push
aam
push
adc
popa
test
mov
into
out
popa
xchg
jge
aam
scas
test
adcb
sbb
xor
mov
aaa
cmpsl
lods
ret
mull
xor
inc
cmp
add
les
stc
sarb
sub
inc
push
int3
pop
in
jne
pop
iret
add
push
inc
clc
jo
and
es
adc
unpckhps
push
nop
mov
push
test
mov
mov
lock
aas
rorb
jecxz
aad
mov
rcrb
xchg
xor
sub
cmp
and
jb
push
test
pop
js
inc
rorl
xchg
sub
adc
cmp
test
loope
pop
out
pop
in
mov
in
pop
loopne
sub
hlt
pop
sub
mov
jbe
mov
aad
xchg
xchg
inc
dec
mov
clc
push
testl
cmp
mov
jmp
pop
pop
and
cmp
mov
inc
aam
mov
or
or
xchg
push
or
in
mov
icebp
adc
inc
pop
cli
scas
fdivrs
test
std
sarb
jns
mov
out
xchg
cmp
es
xor
mov
and
inc
mov
mov
cld
dec
js
push
adc
popf
mov
adcb
add
daa
push
aad
in
sub
mov
sbb
jecxz
popl
mov
pop
sbb
jbe
adc
std
out
add
dec
out
add
fbld
lret
fisttpl
pop
jb
xor
pop
inc
adc
or
gs
mov
dec
push
jp
xchg
adcb
aas
fsubrl
mov
test
pushf
ja
pop
push
sbb
mov
sub
cld
pushf
out
rcrb
sbb
outsb
mov
mov
scas
pop
mov
mov
dec
enter
push
lret
and
jle
rol
loop
test
subl
xor
sub
fisttpll
cltd
es
push
ret
into
jb
jne
dec
lcall
dec
pop
arpl
int
xchg
sbb
push
xor
pushl
dec
dec
cmp
jo
mov
inc
xchg
cmpsl
pushf
push
sbbl
xchg
ja
aad
daa
jl
jns
or
lret
mov
pop
cmp
adcb
shr
insl
sbb
mov
xor
movsb
popf
dec
mov
aad
insl
in
pop
mulb
xor
imul
pop
sbb
mov
mov
pop
jns
add
xlat
or
xchg
jecxz
pop
shlb
jp
xchg
xchg
pop
push
outsb
test
imul
pop
int
cltd
dec
push
push
call
movsb
push
jb
enter
or
mov
jl
roll
xchg
enter
frstor
in
jmp
pushf
add
ljmp
repz
xor
xchg
adc
out
into
jnp
pop
pop
inc
fisubl
sbb
scas
subl
mov
mov
add
cmp
and
scas
xchg
jl
stc
pusha
stos
out
jno
inc
in
push
mov
pop
sti
std
fdivrs
mov
jo
dec
dec
leave
pop
inc
cmp
mov
loopne
in
add
outsl
mov
in
int
cs
lret
out
push
pushf
iret
movsb
push
andl
incb
js
data16
fisttps
jae
out
sbb
ret
dec
outsl
icebp
les
mov
dec
outsb
faddl
insb
icebp
pop
mov
mov
cmpsl
mov
cs
scas
dec
and
jg
in
mov
or
pop
dec
test
xor
lret
xor
cmp
sti
fcmovu
push
jb
or
xchg
push
adc
sahf
icebp
xor
fidivl
and
cs
inc
bound
mov
movsb
push
sub
inc
int
push
sub
fnsave
dec
cmpsl
xor
mov
mov
lcall
hlt
xor
push
lahf
scas
sub
sbb
mov
mov
sbb
fidivrs
shl
ja
sub
clc
popa
and
jbe
jl
fs
or
aaa
in
pop
add
mov
sub
add
lds
es
sub
js
mov
repnz
sub
jge
insb
rorb
icebp
pop
and
and
jo
xchg
bound
pop
cmpsl
sub
lea
add
rcr
dec
mov
mov
sbb
mov
iret
mov
push
mov
popa
xchg
fdivp
aad
sbb
and
push
scas
mov
mov
mov
dec
call
in
into
cmp
adc
std
mov
jge
mov
xchg
std
pop
pushf
ds
setae
pop
lock
mov
jae
divb
and
sub
enter
pop
push
push
sub
stos
sbb
inc
into
icebp
and
das
push
loop
or
sub
pop
cli
fidivs
fcoms
sbb
lock
jecxz
inc
xchg
jnp
push
out
test
xchg
push
mov
aaa
ljmp
es
sti
scas
pop
insl
adc
sub
fwait
cld
jb
pop
pop
sbb
jns
aad
push
push
mov
adc
mov
test
mov
movsb
adc
mov
into
test
stos
aad
mov
jp
icebp
jge
cmpsl
jae
adc
loop
mov
nop
clc
jg
pop
add
or
xchg
sub
mov
mov
mov
inc
cmc
cmp
push
leave
dec
pop
push
lcall
cld
xchg
push
cltd
ljmp
dec
mov
insl
adc
sbb
cli
jns
dec
sub
aas
loopne
daa
jg
popa
jl
fnsave
fldcw
insb
ljmp
icebp
add
push
adc
stc
xchg
sbb
sub
mov
add
in
sbb
leave
fs
aam
lret
push
ljmp
push
popa
mov
adc
je
jb
test
sbb
cltd
movsl
mov
popf
lcall
xor
mov
fwait
aaa
pop
inc
inc
in
push
jb
jecxz
push
mov
xchg
push
jg
jle
in
sub
popfw
mov
lock
inc
xlat
mov
aas
sub
fbstp
loop
lahf
cmpsb
sbbl
cmpsb
out
aam
dec
jno
mov
pop
cs
dec
loopne
jecxz
pop
imul
ret
aas
dec
and
loope
loop
aas
int3
aas
imul
ljmp
in
or
mov
out
mov
shlb
gs
ds
cs
mov
pop
ds
nop
ds
push
dec
pop
pushf
insl
stos
mov
call
fldenv
pushf
push
adc
push
movsl
orl
cli
loope
subb
mov
enter
jno
or
std
add
jg
ss
xor
int3
lret
sub
shrl
cmp
xchg
int
mov
daa
dec
adc
insb
pop
mov
pop
outsl
mov
xchg
xchg
jne
test
test
fdivr
ret
mov
inc
add
movsb
mov
les
stos
jns
push
xchg
fsubr
frstor
add
or
loopne
das
into
stc
aad
and
loope
fistpll
ret
mov
mov
inc
push
sbb
push
jp
cmp
push
pop
int
adc
pop
sub
lret
mov
add
mov
dec
mov
xchg
pusha
mov
jno
dec
lret
das
sbb
cs
pushf
sbb
push
mov
xchg
jp
lods
mov
xor
popa
in
sti
xchg
fidivrs
sbb
cmp
inc
xor
aas
inc
push
push
mov
mov
cs
mov
cld
mov
div
lret
das
jp
cmp
sar
test
mov
jle
fidivrs
fs
xchg
stos
loopne
daa
lret
les
adc
adc
ret
xchg
in
pop
add
jge
jbe
mov
dec
icebp
sahf
sub
insb
daa
sbb
sahf
xchg
shll
mov
or
xlat
pop
out
push
das
mov
jecxz
adc
aam
mov
ret
movsb
or
dec
insb
lret
gs
adc
sub
sub
cltd
pop
mov
jg
jle
xor
xor
popa
xchg
lcall
sbbb
push
mov
in
fwait
mov
ljmp
pop
dec
sub
push
dec
dec
out
add
sarl
dec
xchg
inc
scas
pop
lret
xor
jmp
je
cvtps2pd
xor
or
inc
in
lcall
sti
std
jg
adc
int3
jo
mov
jnp
icebp
xchg
push
jmp
popf
mov
sbb
incl
movsb
jae
lea
sarl
mov
stos
jge
pop
popa
jbe
mov
sub
or
or
jno
mov
fsubr
cmp
jae
cld
sub
adc
mov
add
cmpsb
mov
movl
pusha
push
jo
inc
jbe
data16
mov
cmpsb
loopne
lock
shl
and
xor
add
adc
pusha
push
jo
inc
jbe
data16
mov
cmpsb
loopne
lock
shl
and
add
pusha
adc
lock
jo
inc
jbe
data16
mov
cmpsb
loopne
loopne
shl
out
push
insb
push
pop
xor
pusha
push
pusha
inc
inc
jbe
data16
mov
rcll
or
sbb
or
sbb
dec
xchg
js
push
mov
jg
aas
xchg
push
pop
mov
dec
clc
pop
clc
cmpsl
or
cmp
dec
lcall
push
aas
cwtl
and
sbb
dec
call
aas
sbb
sub
decl
pop
jecxz
daa
js
mov
imul
and
inc
lahf
push
fs
jge
or
add
xchg
repz
cmp
mov
inc
push
mov
pop
add
in
pop
repnz
cwtl
ret
push
hlt
lods
ljmp
test
cli
pop
jmp
mov
outsl
mov
cltd
lock
loope
nop
aaa
repnz
add
test
or
out
dec
add
pusha
fstpl
pop
outsb
loopne
loop
jge
pop
popf
mov
out
xlat
pop
xor
mov
xchg
js
ja
lock
sbb
pushf
fwait
jg
pop
subb
sub
push
jo
cmp
bound
pop
rorl
es
xlat
mov
pushf
push
fstpl
inc
ljmp
pop
pushf
or
cmp
dec
mov
js
mov
mov
dec
call
leave
popa
lret
imul
sub
or
jle
pop
sti
jle
push
mov
sbb
enter
xchg
sahf
sbb
pop
in
jle
push
jae
sbb
sbb
lea
lods
fisttpll
dec
decl
inc
stos
jp
pop
iret
push
aas
cwtl
push
pop
mov
dec
call
mov
cmp
dec
lcall
push
aas
cwtl
push
pop
mov
dec
call
jnp
daa
inc
sar
mov
mov
xchg
fcmovb
outsl
sti
stos
in
mov
push
in
mov
stc
mov
repz
or
or
cltd
xor
sub
gs
pop
fbstp
inc
xor
imul
test
pushf
jp
inc
sub
scas
sub
in
dec
into
dec
xchg
and
insl
xchg
in
and
cmp
cltd
inc
jnp
aam
cmp
mov
fildll
js
inc
mov
in
sti
mov
in
add
imul
jp
rcll
out
adc
cmp
cld
leave
mov
jg
iret
ret
adc
mov
jae
pop
push
fstpt
pop
push
loopne
mov
push
sub
mov
or
cld
pop
leave
data16
repz
cmp
and
lret
adc
aas
cmc
jbe
outsl
mov
push
inc
in
out
movsb
mov
js,pt
jg
hlt
out
mov
sbb
pop
mov
and
test
mov
aaa
add
mov
push
in
mov
jp
push
std
jae
jl
mov
in
xor
pop
scas
testl
ljmp
mov
mov
jmp
icebp
arpl
in
in
mov
dec
sti
cmpb
cmp
test
and
mov
mov
dec
pop
push
dec
enter
hlt
fidivrs
cmp
sbb
cmp
fcoms
lret
data16
pusha
and
mov
add
push
sub
xor
inc
bound
insb
xchg
mov
cli
out
orl
adc
mov
cmp
pop
pop
jp
jecxz
ja
cmp
dec
ss
repz
out
pop
mulb
outsb
out
cmpsl
das
popa
or
outsl
sbb
sbbl
pop
jno
xor
dec
lock
iret
or
xlat
scas
call
add
xlat
push
scas
pop
imul
in
fidivrl
out
dec
loope
daa
add
xchg
aad
sub
mov
mov
pop
ret
sbb
mov
sub
cmp
add
cmpsb
loope
jae
aad
jb
cmp
mov
rol
adc
in
pop
sub
lods
out
aam
in
aaa
add
test
mov
dec
adc
adc
jge
mov
lcall
dec
daa
ret
sub
int
mov
push
mov
ds
mov
call
push
and
push
ds
mov
mov
pop
lds
sub
mov
dec
movsl
push
push
lds
mov
xchg
stc
popf
into
enter
lods
mov
mov
cmc
cli
fistps
test
pushf
xchg
andl
pop
jg
mov
bound
jns
jmp
sbb
pop
flds
jne
or
test
pop
movsl
mov
add
pop
outsb
add
rolb
xchg
mov
xchg
pop
iret
in
data16
in
out
push
mov
push
sub
mov
pop
hlt
mov
mov
fmulp
xchg
mov
pushl
xchg
sarl
xchg
mov
js
loope
pop
adcl
xor
and
fdiv
push
aam
testb
adc
pushf
mov
inc
or
dec
cld
pop
and
add
sub
adc
sub
sahf
sub
test
add
jp
cltd
mov
mov
mov
int3
inc
lahf
dec
ljmp
leave
lods
flds
xor
negl
jns
pop
ja
jp
jp
shlb
rorb
jg
cwtl
insl
mov
push
inc
ljmp
jae
mov
ffree
mov
mov
ret
fucomi
adc
xor
cltd
fbstp
mov
add
pop
xchg
lcall
or
sti
daa
jae
pop
scas
rcr
not
sti
cmp
adc
scas
ret
jnp
out
inc
rcll
jnp
mov
mov
xorl
cs
and
gs
aaa
sbb
movsl
popf
mov
jmp
mov
lahf
stc
jp
adc
enter
xor
mov
mov
xchg
push
arpl
lahf
xchg
loopne
movsl
sub
sti
lds
push
aad
xchg
or
mov
fimull
int
adc
mov
sarl
dec
lds
mov
hlt
mov
idivb
pop
add
movsb
xchg
push
pop
dec
mov
adc
pop
fcomp
psraw
and
mov
cmpxchg
leave
clc
imul
outsl
cmp
insb
int
and
xor
cmp
push
adc
or
imul
fmulp
inc
xor
adc
loop
adc
cmp
lea
ja
fists
sbb
addr16
test
add
pop
dec
sbb
push
xchg
lsl
mov
inc
pushf
movsl
movsl
dec
xchg
mov
pop
sub
dec
cltd
mov
sub
mov
test
scas
stc
mov
xor
mov
mov
rcll
adc
idivl
mov
test
popf
xor
push
leave
push
push
xchg
test
stos
arpl
repnz
int3
push
das
lds
jle
fistps
mov
aad
xor
bound
mov
push
inc
nop
sub
sub
fidivrl
test
xlat
int
stos
inc
push
push
jbe
sbb
sbb
push
int
dec
jge
jno
js
stos
in
push
push
mov
pusha
repz
insb
pop
xor
out
xchg
test
mov
cmp
call
adc
and
jle
cli
lret
ret
fdivrp
lahf
or
ret
stos
push
cld
or
in
adc
ret
mov
sbb
cmp
mov
fisubrs
sbb
jge
add
arpl
fidivs
dec
ljmp
xchg
inc
xor
xor
pop
pushfw
ret
dec
pusha
xchg
and
ljmp
mov
cmp
fld
test
xor
call
add
int3
push
sub
push
shrl
outsl
jns
push
pop
add
aad
enter
xchg
fcompl
leave
repnz
jecxz
int3
sub
inc
incl
fmull
or
pop
gs
jecxz
or
xor
hlt
xchg
repnz
dec
bound
push
frstor
cmp
in
jge
pop
aas
xor
adc
je
inc
inc
dec
cmpb
xor
xchg
ficompl
inc
orl
jb
leave
loopne
mov
insb
pop
cwtl
xchg
insl
jge
movups
or
out
jecxz
and
cmpsb
add
mov
xchg
in
cmp
lahf
inc
or
and
add
xchg
gs
outsb
jb
loopne
cmp
daa
cwtl
jecxz
lcall
cs
push
xchg
or
dec
xor
ds
sahf
lar
xor
cli
or
sub
fs
mov
mov
adc
push
sub
ret
add
cmp
jo
dec
dec
scas
mov
or
mov
test
push
addl
cs
mov
inc
xchg
imul
xor
and
fwait
icebp
mov
fisttpll
or
mov
ffree
sub
fsts
dec
push
mov
xor
adc
inc
dec
jmp
fwait
inc
dec
sti
jp
jecxz
mov
sbb
xor
fsts
pop
nop
pop
out
jl
fldz
push
mov
jo
cmpsb
mov
push
mov
lea
ret
cs
hlt
jnp
fwait
or
push
call
sar
bound
push
fwait
inc
inc
int3
push
arpl
je
out
mov
stos
ja
test
xchg
and
adc
add
cli
aaa
or
loop
repz
inc
sbb
in
rcl
inc
push
push
adc
mov
jmp
js
lods
push
out
fistl
xchg
data16
scas
out
gs
movsb
cmpsb
sbb
sub
lods
xor
popf
imul
sub
std
lahf
or
stos
cld
lcall
push
es
dec
xchg
addr16
mov
iretw
jl
pop
inc
fwait
ljmp
fst
aam
cmpl
iret
inc
outsb
sarl
repnz
xchg
fwait
out
cmp
jg
ds
cmpb
cli
mov
nop
je
cmp
sbb
sbb
inc
bound
scas
imul
in
and
add
or
rol
call
add
or
aad
and
stc
daa
shrl
adc
insb
xor
mov
out
push
pop
andb
frstor
in
rclb
or
mov
ret
sbb
andb
sti
out
loope
xchg
lret
mov
add
clc
fdivrs
mov
fwait
cmp
mov
aam
mov
ret
add
test
xlat
test
add
test
dec
push
jno
fmulp
xchg
sub
mov
adc
dec
lods
call
iret
test
and
adc
test
or
mov
mov
xor
hlt
fsubs
mov
hlt
enter
cmp
mov
daa
ja
subb
pop
loope
scas
mov
fsubs
out
xorb
mov
cmp
mov
incl
xchg
vcvttps2dq
fisubrl
sbb
ja
mov
testl
mov
mov
lahf
or
ret
and
sub
cs
inc
cmp
mov
mov
xchg
fxch
imul
sahf
outsb
fnstsw
add
sbb
pushf
mov
lcall
inc
jne
movsl
mov
je
and
push
or
xlat
xor
xchg
sub
adcb
and
hlt
dec
cmp
sbb
mov
jb
cmc
sbb
jge
outsb
roll
mov
cmp
popf
enter
sbb
mov
sub
xor
push
in
adc
popf
jns
orb
test
loop
fistpll
xorb
push
js
jl
in
pop
pop
loopne
xchg
rcr
mov
imul
xchg
dec
jge
pop
mov
lret
jno
jns
insb
insb
inc
inc
adc
movsb
jp
jecxz
fsubp
nop
stc
mov
mov
pop
sub
push
inc
scas
test
mov
inc
lods
std
and
add
in
dec
enter
sarb
sub
lods
mov
insl
movsb
es
push
xor
mov
dec
jge
xchg
xor
pushf
push
adc
push
jmp
cmp
adc
dec
ret
rorl
mov
mov
push
xchg
iret
mov
popa
aaa
out
push
in
outsl
push
dec
push
dec
mov
add
push
in
lret
fsubs
in
sbb
ret
push
mov
sub
andb
ja
idivb
xorb
lds
sub
or
insl
into
rol
inc
mov
sahf
cmp
push
sub
cmp
dec
dec
cmp
inc
and
dec
pop
outsl
jb
push
test
fcmovnu
cmp
cli
adc
lods
add
or
pop
lods
push
or
in
push
and
jno
add
ret
bnd
mov
mov
lock
std
xor
lods
pushf
shlb
cmp
hlt
inc
rcr
test
mov
mov
std
fs
shrb
test
cmp
mov
lods
cwtl
stc
je
aam
pusha
mov
mov
dec
repz
push
test
repz
insb
inc
loope
mov
xchg
pop
mov
test
outsb
adc
scas
push
pop
push
mov
mov
adc
sub
out
xchg
mov
pop
cs
mov
dec
popf
push
sahf
adc
push
gs
mov
pop
and
loopne
cmc
xchg
push
xchg
test
addb
sbb
xor
mov
test
inc
dec
xlat
loop
test
fisubrl
push
fildll
cmc
mov
xor
rcrl
ss
cmc
in
out
cmp
sub
sub
xorb
clc
pop
mov
movsb
pushf
outsl
bound
add
scas
mov
push
aad
cmc
fldcw
test
cmc
out
xorl
mov
and
arpl
adc
ret
mov
mov
dec
imul
mov
sbb
pop
imul
aas
fidivrl
cli
lahf
push
movsb
jp
inc
cmp
test
nop
inc
lcall
xor
xor
ficoml
inc
jl
roll
push
jp
push
ja
inc
sti
bound
pop
pop
les
lret
adc
push
lods
add
xchg
xchg
mov
jnp
ret
mov
sbb
mov
fisubrs
imul
aad
cs
paddq
sbb
mov
inc
jbe
test
sub
pop
xchg
fs
je
xchg
inc
out
pusha
into
sub
pop
dec
push
lret
popf
mull
add
into
cwtl
mov
punpckhbw
imul
insb
je
mov
or
mov
sahf
jns
popa
ss
nop
mov
or
sub
cmc
xchg
pop
or
cltd
push
add
jge
fucomp
ds
movsl
call
xchg
push
inc
loop
sti
push
lods
inc
in
testl
fsubr
mov
xchg
push
cmpsl
addr16
das
sahf
lods
xchg
loopne
imul
rcr
gs
movb
or
mov
lahf
pop
mov
cmpsb
cwtl
xchg
bound
iret
add
nopl
inc
xor
ficompl
pop
adc
jl
ljmp
pop
test
daa
js
lock
cmp
sub
mov
or
cmp
adc
add
fcmovnu
jnp
and
mov
arpl
cmp
rclb
mov
lea
adc
call
cmp
pop
xchg
sub
and
ljmp
stos
data16
push
sahf
flds
jmp
pop
pop
mov
ret
bound
ljmp
inc
jg
frstor
mov
insl
fcompl
repnz
test
pop
fistps
insb
xorb
dec
xchg
add
xchg
insl
mov
pop
shlb
aam
mov
mov
ss
popa
enter
add
mov
movsb
xchg
pop
pop
jp
out
xor
cmp
test
and
xor
aas
cwtl
mov
fisttpll
or
inc
insb
inc
xor
jecxz
xchg
fcmovnb
rcll
mov
add
in
fwait
sub
imul
adc
ss
add
in
lock
loopne
fildl
sub
push
pushf
loop
cmp
scas
popf
xchg
aam
mov
push
mov
test
out
es
cmp
stos
jae
stos
inc
std
xchg
popa
mov
pop
jns
sub
fcmovb
aaa
mov
add
cmp
outsb
in
stc
nop
dec
stos
mov
call
mov
cmpsb
call
mov
mov
loopne
outsl
sbb
xchg
cmp
add
jbe
cmp
xor
sar
mov
cmpsb
fdivl
xchg
mov
test
outsb
xchg
orl
jge
add
cmp
lock
mov
adc
jecxz
xor
mov
jmp
inc
dec
push
sbb
imul
dec
aas
addl
xor
hlt
inc
lcall
inc
ljmp
faddl
sbb
repnz
inc
aas
stos
jp
xor
xchg
pop
in
out
jg
data16
xor
pop
cmp
pmulhuw
gs
push
icebp
out
ret
nop
into
sub
xlat
xchg
sub
mov
jb
fistl
filds
pop
mov
bound
cmpsl
jge
mov
and
push
repz
test
mov
not
adc
mov
iret
dec
pop
sub
jge
lcall
icebp
popf
fadds
jge
call
jp
mov
sarb
inc
ret
in
test
in
jp
push
adc
sbb
ret
test
and
xor
sub
in
pushf
les
lea
xchg
and
adc
orb
mov
popa
cmp
aas
and
addr16
test
pop
cmpsl
xchg
lea
or
aam
mov
and
nop
hlt
lcall
int
mov
lcall
ret
and
sub
sub
push
inc
sbb
cmp
or
nop
inc
sbb
cmp
sbb
cmp
sub
lds
push
sub
cmp
repz
mov
enter
lcall
fisubrl
mov
cmp
push
insb
dec
fbstp
cmpsb
xor
mov
es
gs
dec
mov
in
pop
cmp
std
dec
insl
jge
mov
outsl
or
mov
xchg
loopne
or
scas
inc
push
mov
jb
push
inc
jmp
or
int
ret
pop
in
psrlw
mov
push
jle
xchg
sub
in
or
imul
mov
or
mov
and
sahf
js
les
js
jecxz
sahf
or
add
neg
in
in
mov
idiv
ret
dec
insb
js
pop
xor
mov
mov
sub
icebp
adc
xchg
insl
dec
test
mov
fidivrl
sbb
stc
dec
xor
mov
mov
lahf
dec
pop
sbb
mov
int
xor
adc
push
cmp
idivb
adc
sub
or
add
mov
mov
sub
pop
cli
xchg
rcr
inc
mov
mov
jle
popa
test
and
arpl
inc
sbb
cmp
outsb
pop
ss
xorb
ljmp
xchg
outsb
mov
lock
sub
mov
scas
lret
mov
ja
cltd
or
lret
cli
xor
push
jb
jnp
xchg
xchg
pop
sub
mov
std
lds
push
out
xor
dec
jge
mov
xor
jge
jle
lods
inc
xor
inc
movsb
shrl
xchg
xor
test
cmp
sbb
jno
imul
xchg
lcall
mov
ret
jmp
sti
pop
outsl
fldt
push
xchg
aaa
mov
add
cmp
stos
and
xorl
ret
sbb
mov
stos
lret
xchg
ljmp
jecxz
push
bound
test
mov
xchg
sbb
imul
xor
fsubs
aam
inc
aas
dec
aad
loop
cwtl
mov
into
sub
addb
sub
or
test
xchg
and
jle
lahf
lea
mov
fwait
iret
call
lock
cmc
lret
mov
push
mov
aad
lcall
push
lret
rorl
pop
sub
out
aas
xor
data16
pusha
lcall
xchg
mov
imul
in
stc
out
mov
sbb
jmp
mov
dec
imul
add
pushf
dec
les
and
movsl
jmp
leave
jno
dec
bound
movsb
mov
ljmp
or
out
fstl
data16
cmp
std
xor
scas
ret
loope
jns
imul
in
cmp
adc
push
je
mov
xor
sub
je
xchg
ficompl
dec
inc
arpl
gs
jle
mov
insl
rcr
cmc
pop
xchg
lahf
ficomps
or
rclb
insb
and
fwait
jne
sbb
sub
leave
movsb
jl
movsb
push
xlat
test
iret
test
jbe
cwtl
stos
dec
call
sbb
test
je,pn
enter
inc
and
rcr
dec
out
inc
and
cmp
jecxz
push
cmc
in
push
movhps
or
fcoml
ret
lea
pop
add
in
fisttpl
sahf
sbb
rep
jge
pop
jnp
push
cmp
cmp
add
pop
xchg
hlt
hlt
pop
jecxz
cmpsb
test
imul
sti
ret
cmp
push
rcll
outsl
and
jecxz
jl
out
int
sbb
mov
into
popa
sub
sbb
mov
loope
push
scas
mov
pop
cmp
xchg
and
push
dec
hlt
lock
dec
xor
std
data16
imul
ds
cltd
mov
fs
pop
add
imul
and
xchg
inc
cmp
jp
dec
add
xchg
adc
cmp
dec
dec
and
test
mov
push
adc
sub
xchg
push
out
sbb
sub
movb
and
xor
cmp
shlb
scas
mov
jnp
mov
sub
add
stos
lea
jne
pop
setge
pop
shll
xchg
jo
mov
sub
fmull
and
dec
fcomi
sub
mov
rcll
std
sub
pop
bound
imul
jmp
out
push
adc
ds
jecxz
cmp
push
sbb
cmpl
dec
lcall
push
aas
cwtl
push
pop
mov
dec
call
mov
cmp
dec
lcall
push
aas
cwtl
push
pop
mov
dec
call
mov
cmp
dec
sti
pop
iret
push
aas
cwtl
push
test
mov
dec
call
xchg
sbb
sub
pop
iret
push
shlb
test
iret
sbb
daa
mov
mov
cmpsb
and
movsb
add
add
or
add
pop
add
push
add
or
add
add
push
add
add
add
cmpsl
add
cmp
mov
xlat
add
add
addl
mov
add
add
adc
imul
inc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
cltd
add
add
ds
mov
jecxz
adc
lea
xchg
add
fiadds
sub
add
jno
cmp
dec
add
add
add
pop
add
add
add
pusha
add
add
add
add
add
add
push
add
add
add
popl
call
add
loopne
push
add
jl
scas
add
add
lea
imul
mov
add
add
lahf
add
add
movl
jo
jl
jl
roll
mov
add
jecxz
jl
int
pop
add
add
add
pop
add
add
arpl
sbb
add
add
outsb
add
mov
inc
add
add
add
mov
inc
add
add
push
add
mov
fadds
add
add
add
lahf
add
add
add
add
xchg
add
add
pop
add
or
mov
pop
add
mov
mov
add
pop
add
add
dec
add
jl
jl
addl
add
mov
sbb
add
add
add
incb
mov
add
add
add
sbb
mov
add
jl
test
mov
add
add
add
add
add
add
lahf
add
add
add
mov
add
add
dec
add
jecxz
xchg
add
pusha
add
add
add
dec
add
jl
xor
adc
jl
addl
jl
movl
lods
add
add
add
add
add
add
add
jne
lock
add
add
add
add
add
add
mov
dec
add
add
add
add
mov
pop
add
add
hlt
add
add
add
or
add
add
add
and
mov
add
add
add
add
cmp
add
pusha
add
add
add
add
dec
add
adc
fadds
pop
add
add
lcall
add
add
pop
add
rolb
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
xchg
add
aad
roll
or
jo
outsb
add
add
add
add
add
add
push
add
add
add
add
add
insb
add
add
add
xchg
add
add
dec
add
add
add
pop
add
add
mov
add
jno
push
add
pop
add
add
add
movsb
add
add
xor
add
add
add
add
cli
jge
es
inc
mov
popf
iret
jp
inc
scas
mov
addb
sbb
mov
add
aam
inc
leave
or
mov
sbb
out
inc
push
iret
sub
ficompl
push
lea
out
or
cmc
in
cmpsb
xchg
mov
adc
inc
inc
adc
cmp
in
int3
mov
pusha
push
inc
adcb
xchg
jp
dec
cmp
pop
test
sbb
mov
rcll
inc
lcall
in
mov
jecxz
ljmp
xor
out
mov
push
sbb
ljmp
jnp
push
cmpb
ljmp
jno
cld
fcoml
clc
push
sarb
leave
pop
mov
fstpl
xor
mov
jno
cmp
cmp
sbb
sub
pop
pop
xchg
add
push
jbe
jl
mov
xor
push
fimuls
fidivrs
sbb
icebp
pop
dec
mov
and
stc
scas
data16
add
ljmp
lea
pop
aas
popa
pusha
pushf
xor
add
popa
fwait
jne
inc
hlt
jne
out
mov
test
in
jg
adcl
or
lahf
jo
xor
iret
stos
sbb
sub
cltd
and
inc
inc
push
dec
aas
inc
jecxz
outsb
sbb
stos
lret
pushf
rcrl
fmull
mov
lds
cwtl
cmp
in
mov
dec
mov
jbe
or
aad
xor
cwtl
out
roll
cmp
cli
not
ret
cld
std
push
lock
push
mov
adc
mov
cmpsb
rorl
xor
cmp
and
fmull
jns
pusha
cmp
jl
data16
fld
sub
fcomps
mov
jecxz
insl
setle
xchg
xlat
movsl
sub
cli
xor
pop
stc
xchg
jo
adc
subl
dec
or
lret
test
push
nop
mov
jae
mov
icebp
xor
scas
fs
pop
push
mov
add
sbb
mov
mov
xor
clc
push
xchg
dec
mov
insb
and
cmpsb
cmp
add
cwtl
jp
jp
add
loop
insb
inc
inc
push
inc
sbb
dec
mov
sub
and
fnsave
xor
xor
mov
rol
scas
xor
adc
inc
jmp
in
inc
mov
imul
mov
fcoml
pop
addr16
loope
call
test
je
xchg
xchg
cmp
in
or
sbb
mov
hlt
repnz
xchg
es
xchg
lcall
arpl
rclb
mov
scas
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
