call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
movsb
fs
push
jnp
imul
push
gs
imul
fnsetpm(287
jmp
jmp
xchg
stos
test
fs
imul
or
add
ftst
lret
mov
push
jmp
clc
movsl
pop
xchg
mov
jge
dec
arpl
add
xor
cmp
icebp
mov
fucompp
in
in
in
stos
add
and
cvtpi2ps
cmp
fcom
daa
movsl
std
ljmp
sub
pushf
inc
mov
je
jmp
xchg
pause
fcomi
in
int
cmp
jmp
jmp
push
repz
or
stc
movsb
fs
sbb
dec
and
negb
or
loope
ds
inc
stos
movsb
or
jnp
pop
adc
xor
cld
arpl
rorb
adc
enter
xor
xchg
arpl
mov
testl
sbb
sarl
push
sbb
fs
sbb
mov
hlt
add
cmpsb
or
sbb
sub
enter
inc
test
push
imul
sbb
or
sbb
ror
loop
repnz
cmpl
add
jp
push
dec
dec
gs
push
imul
scas
stos
test
test
icebp
mov
fs
xor
inc
outsb
inc
push
inc
inc
mulb
mov
shr
xlat
in
xlat
test
sbb
sbb
ja
or
add
hlt
fnsetpm(287
lret
aam
jmp
fwait
movsb
mov
fs
push
jnp
imul
or
add
hlt
fnsetpm(287
lret
aam
jmp
fwait
movsb
mov
cmpsl
int3
or
or
xchg
dec
xchg
mov
or
adc
cltd
xchg
sub
or
addb
xchg
insl
imul
jmp
jecxz
and
jmp
pop
es
or
or
mov
daa
arpl
ja
inc
lcall
adc
sub
jmp
sbb
in
mov
pop
and
add
outsl
rcrb
xchg
addl
mov
clc
mov
xchg
xor
jbe
ljmp
inc
mov
sub
or
or
pop
lock
orb
test
push
dec
inc
inc
mov
shll
mov
sub
test
sbb
mov
jp
xchg
xchg
mov
aas
ljmp
pop
out
cmp
pushf
stos
push
fdivrl
adc
rcrl
ds
test
push
xor
popa
int3
cltd
mov
mov
adc
in
stc
jmp
testb
shrb
imul
sarl
sub
dec
stos
cld
sub
mov
fs
mov
dec
push
push
fistpll
mov
pushf
pop
jp
lea
mov
daa
stos
sub
sub
mov
mov
pop
or
xorb
fwait
leave
jne
inc
inc
push
ds
jl
cmp
int3
enter
push
mov
pop
jbe
cmc
aaa
addr16
inc
outsl
dec
rcr
push
sub
lret
aaa
and
es
mov
cs
add
cs
mov
sahf
in
hlt
adc
dec
dec
xor
push
push
sub
dec
loope
pop
aam
repz
stos
stos
sbb
push
addb
cmp
mov
mov
lea
jle
test
ficoms
xchg
jnp
sbb
xchg
push
lea
mov
dec
iret
pop
lock
pop
call
pop
shl
lock
leave
jae
cmpsb
jmp
cmpsb
xorb
fnstsw
and
sub
add
sarb
inc
bound
sti
push
inc
add
out
xchg
xor
lock
inc
mov
dec
and
pop
mov
jle
bound
mov
fimuls
int
cmpsl
inc
divl
sbb
jecxz
cmpsb
pusha
cmc
cltd
in
pop
and
xlat
outsb
das
shr
cmp
dec
xchg
xor
fcoml
adc
nop
mov
mov
icebp
jmp
fmul
js
data16
decl
jno
mov
xchg
adc
hlt
and
shlb
lret
pop
adc
dec
imulb
loopne
jmp
lds
sbb
add
sub
jmp
mov
push
dec
or
adc
imul
ss
jb
sti
mov
adc
les
sub
aad
push
pushf
pop
je
addl
mov
inc
jmp
in
in
arpl
jecxz
mov
fld
xor
test
jb
and
inc
std
mov
sub
or
lods
jnp
add
pop
fldcw
adc
rcrb
daa
je
insl
pop
mov
and
lods
sbb
inc
out
mov
sub
iret
in
mov
sub
jbe
xchg
scas
repz
jecxz
pop
mov
jg
pop
cwtl
lret
pop
jge
and
push
ja
mov
jnp
in
pop
pop
mov
inc
fstpt
mov
cli
lods
aad
out
jnp
dec
mov
stc
cs
mov
lods
out
ljmp
sub
loopne
jne
or
jp
scas
popf
std
push
sub
xchg
nop
cmpl
or
or
jecxz
adc
jg
fistpl
add
sbb
pusha
int
mov
pop
imul
jp
and
sbb
pop
loopne
sub
pop
ja
lds
loope
nop
not
jo
cmp
fwait
outsb
sarb
ja
jl
lock
cs
pop
mov
add
or
nop
jmp
in
shl
add
out
mov
mov
mov
into
xchg
outsl
repnz
pop
int
xchg
lret
ljmp
shlb
mov
scas
pop
cwtl
adc
lcall
pop
outsb
hlt
push
or
and
mov
cli
aaa
sub
cmc
inc
push
arpl
xor
cmpsb
sub
jge
bound
icebp
sub
cmc
adc
in
daa
mov
jge
adcl
repnz
sbb
mov
arpl
mov
ret
mov
cmp
mov
mov
jne
mov
shlb
push
and
mov
pusha
lea
stc
mov
stc
and
ljmp
sbb
sub
inc
loop
inc
imul
mov
lcall
jnp
push
cltd
jl
insb
decl
pop
add
cmp
cwtl
aam
dec
or
jae
pop
lahf
push
sub
je
mov
push
cmp
andl
and
cmp
xchg
push
and
inc
mov
rorl
iret
lods
and
aad
mov
add
mov
ss
outsb
ret
fwait
clc
cmp
mov
mov
push
inc
nop
sti
and
addb
push
imul
push
into
bnd
cmc
inc
neg
push
leave
arpl
nop
cmp
iret
sbb
xchg
and
xchg
test
scas
lcall
jge
in
push
mov
mov
jb
cld
stos
ret
ret
pop
push
loopne
cwtl
cmpsb
sub
je
push
push
mov
mov
dec
hlt
jne
xchg
mov
iret
cmp
icebp
repnz
xchg
mov
test
mov
push
fstl
mov
sub
in
xchg
in
mov
and
xchg
dec
scas
enter
ror
or
cmp
into
adc
adc
aaa
icebp
and
and
sub
sbb
lret
xor
test
out
pop
fwait
imul
xor
mov
sbb
scas
dec
cmp
mov
adc
mov
dec
jge
pop
test
pop
cmp
cmp
fsubrl
sub
cld
pop
xor
daa
in
jge
xchg
lahf
jge
ja
mov
les
loopne
aam
fisttpl
mov
jnp
push
ljmp
roll
xor
push
jno
jne
scas
pop
inc
jnp
mov
lcall
xchg
pusha
mov
pop
and
lret
daa
cmp
and
push
xchg
lret
and
jo
in
lret
outsb
xor
and
mov
jp
xchg
xchg
mov
mov
fs
add
dec
jecxz
push
repnz
add
and
mov
jl
xlat
or
rcrb
add
data16
stc
push
imul
dec
pusha
lods
sub
ret
xlat
aam
and
lret
pop
ja
sbb
xchg
jnp
sbb
lds
xor
inc
addr16
aas
mov
pop
inc
addr16
cmp
fsubrl
adc
fidivl
push
xchg
push
mov
cmp
pop
add
loopne
push
push
popa
mov
adc
cmc
movsb
xchg
test
pop
xor
movsl
cmpsb
pop
shlb
iret
or
jmp
decb
pop
cwtl
mov
mov
mov
inc
iret
add
dec
fiadds
pop
je
mov
int
inc
subb
test
ds
mov
repz
ret
into
xor
inc
repnz
sub
addr16
enter
push
jns
adc
pop
popf
jmp
add
pop
push
sub
aam
stc
xlat
call
mov
mov
mov
push
dec
jae
push
push
hlt
fxch
pop
jno
addb
mov
mov
pop
jp
aas
add
cmpb
pop
cmp
imul
cltd
ret
xchg
sbbl
push
movsl
icebp
mov
cmp
leave
fs
aad
ds
cs
cmp
daa
xchg
psubq
mov
pop
shl
pop
push
push
cmpsb
out
insl
cmp
xor
arpl
je
int3
jae
adc
cmp
test
and
je
movsb
jg
jg
pop
or
add
std
pop
dec
aas
inc
das
pop
and
cltd
insb
cmpsl
je
pop
or
movsl
lcall
imul
fimull
cmpsl
js
pushf
sbb
cmpsl
xor
lret
cli
or
gs
mov
mov
pusha
fnstsw
aaa
dec
les
test
or
in
test
ja
xchg
mov
cmp
jge
cmp
push
jns
mov
mov
js
or
call
std
or
leave
daa
sub
mov
in
int
pushf
pop
lock
ret
jbe
les
jmp
outsb
sub
push
adc
cltd
dec
push
lahf
insl
loope
es
mov
push
jnp
enter
mov
loopne
lret
fstl
jge
scas
xchg
les
sbb
mov
inc
xchg
and
or
xor
pop
lahf
xchg
out
imul
cld
in
fnstcw
mov
add
or
ror
std
mov
les
lret
orl
inc
stc
mov
adc
loop
sub
xchg
fs
aas
push
gs
jno
push
cli
cmpsl
aas
jne
and
pushf
insl
xorl
mov
sbb
mov
stos
test
push
sbb
nop
enter
lahf
pop
xor
add
mov
repnz
pop
pop
scas
ret
xor
push
adc
out
sarl
cmpsl
dec
xor
ss
repnz
imul
push
cwtl
xchg
inc
cmp
fsubl
sub
xor
fiaddl
and
mov
fldcw
mov
sarl
pop
sub
or
les
loope
ficoms
inc
sarl
mov
rcrl
sahf
jne
clc
mov
out
sbbl
mov
mov
inc
xchg
popa
jns
mulb
hlt
and
or
xchg
imul
sbb
in
xor
xchg
jp
in
lock
jo
int
jg
aas
loopne
xchg
inc
cmpsb
iret
imul
adc
pop
test
dec
clc
ficomps
lret
fsubr
jne
popf
and
or
std
hlt
movl
sbb
insl
test
pop
idivl
push
push
xchg
cmpsl
cmpsb
dec
pop
fcoml
shrl
jecxz
fstpl
xor
push
cmp
fbstp
mov
mov
jl
std
sbb
sub
les
cmpsl
mov
vrcpss
xor
cmpsl
add
or
imull
add
xchg
mov
in
aam
dec
in
mov
hlt
and
mov
jge
lret
and
popf
fsubrs
shl
jns
iret
jbe
imul
out
push
sbb
shr
push
cmp
insb
cwtl
xlat
imul
cmp
gs
pusha
push
dec
fstpt
dec
int
push
ret
adc
lods
dec
lahf
sbb
es
das
push
sbb
adc
mov
sahf
push
fisttpl
mov
nop
add
mov
sub
stos
lock
scas
je
int3
and
push
xor
push
or
ret
push
push
cmc
push
xchg
mov
lds
stc
fwait
stc
mov
or
je
repz
pop
jb
jne
outsb
cld
pop
add
das
in
repz
lea
push
test
adc
shlb
int
mov
and
jne
pop
rorb
mov
push
gs
addr16
jmp
xchg
pusha
mov
inc
adc
pop
pop
push
nop
in
cmp
push
push
testl
fstpl
adc
xchg
mov
sbb
mov
test
push
insl
push
mov
xchg
xor
dec
hlt
or
pop
push
and
fsubrs
push
pop
sbb
jno
out
dec
sbb
mov
add
inc
adc
test
and
call
int3
aas
mov
mov
cli
xchg
xor
dec
and
jmp
lds
sub
out
jbe
jecxz
xlat
inc
push
push
rorb
push
xchg
nopl
jae
sbb
jp
out
push
sub
mov
shrl
outsb
mulb
dec
int
push
jb
fwait
jne
cmpl
sub
clc
sahf
loopne
mov
imul
push
jo
jl
stos
lock
sbb
dec
cmp
or
jbe
push
testl
std
fdivrp
scas
loop
pop
icebp
loop
jbe
add
mov
pop
add
mov
test
mov
ret
mov
insl
neg
cmp
xor
xor
movsb
dec
cmp
and
lret
or
mov
loopne
and
repnz
and
inc
lods
sahf
ja
or
fstl
push
push
sub
sbb
dec
dec
jl
sbb
test
xor
adc
jmp
cwtl
or
sub
out
push
and
mov
mov
addr16
sbb
dec
test
imul
jecxz
sbb
push
sbb
outsl
rcrl
fistpll
int3
lret
es
addr16
out
icebp
sbb
push
test
cmp
mov
push
dec
inc
jns
push
add
cmp
inc
inc
mov
mov
and
clc
xchg
mov
inc
mov
push
mov
ret
push
add
and
aaa
fadds
lock
cmc
pusha
add
mov
cmp
hlt
ss
sub
push
scas
es
test
adc
xchg
dec
lods
sbb
ja
cmp
mov
bound
xchg
subw
push
cmp
std
ja
decl
iret
cmc
shll
rcl
loop
cmpb
idivl
divb
adc
or
movsb
ljmp
lods
push
popa
mov
push
jmp
mov
xchg
xchg
test
sub
xorl
or
xor
jmp
xacquire
lcall
inc
je
mov
cmpsw
jmp
adc
and
leave
xchg
lret
repz
movl
or
inc
iret
pop
inc
jle
loope
stos
add
push
punpcklbw
sub
dec
inc
sub
pop
lcall
arpl
jmp
ja
js
lret
mov
mov
dec
jecxz
mov
xchg
jae
hlt
enter
cmc
fstpl
js
fdivs
pop
nop
ja
jns
loop
rcl
xchg
std
ss
ret
xchg
mov
sbb
dec
jo
lods
mov
and
movsb
sbb
adc
shlb
mov
xchg
nop
dec
or
daa
sbb
les
cmp
push
jne
mov
mov
xchg
inc
mov
hlt
sub
add
int3
lret
ret
xchg
mov
push
jmp
fidivrl
add
fwait
scas
sub
in
sub
push
outsl
cmp
bnd
cmp
movsl
jno
jno
dec
cmp
xchg
mov
icebp
repnz
inc
jl
lcall
fidivl
adc
mov
decl
ds
sub
dec
cmp
es
push
sbb
addr16
and
and
jns
and
insl
mov
push
xor
out
shlb
pop
and
xchg
pop
repnz
pop
mov
jae
bound
loop
in
mov
mov
mov
lcall
dec
test
mov
in
xchg
bound
std
or
hlt
out
sub
sub
sarb
xlat
scas
sbb
pop
mov
loopne
jp
imul
roll
add
or
push
iret
jp
cwtl
movsl
popf
inc
inc
xchg
test
rcrl
stos
mov
fsubrp
mov
push
arpl
testl
sub
mov
test
dec
stos
xchg
adc
push
inc
insl
sbb
pop
xchg
mov
test
mov
rol
fwait
pop
dec
loope
rorl
test
scas
pop
out
sub
xor
push
mov
pop
andl
testl
adc
mov
push
wrmsr
fidivl
jb
mov
fs
xchg
shlb
stos
mov
popf
dec
outsb
mov
stc
mov
mov
fcmovne
push
pop
enter
mov
and
lret
jmp
out
mov
test
cmpsb
cltd
bswap
outsl
adc
pop
lret
in
xor
out
xor
into
fstpt
inc
cs
call
mov
inc
jns
mov
ror
xor
mov
push
loopne
in
popf
repnz
sub
int3
add
and
jno
jmp
xchg
addr16
bound
or
nop
mov
xlat
dec
push
xor
stos
scas
lods
xchg
add
xor
cmpsb
push
addl
cld
clc
and
adc
or
and
gs
out
push
jo
dec
lahf
pusha
rcrl
rorl
push
in
test
imul
add
repz
add
adc
popa
arpl
loope
out
ljmp
push
and
push
or
rcl
xor
pop
sub
out
test
stc
lahf
adc
sbb
xchg
sub
lea
mov
mov
xchg
inc
repnz
xchg
adc
lea
push
add
into
fbstp
lods
sbb
ret
paddd
cwtl
out
scas
lret
inc
fadds
fsubs
add
cmp
inc
or
pop
cwtl
or
mov
cmp
sbb
xchg
cld
mov
loopne
pop
fs
cltd
jge
cmp
inc
adc
xlat
dec
add
daa
fisubrl
dec
mov
scas
inc
push
pop
xorb
cmp
jae
push
repz
or
repz
fcomp
inc
jnp
xor
fwait
jp
sub
pop
ret
rorl
sbb
rorb
and
pop
dec
insb
dec
orb
push
hlt
iret
stos
xchg
mov
mov
pop
fstpl
data16
out
daa
add
inc
lret
xchg
scas
jb
sbb
xchg
and
push
mov
xchg
jecxz
push
adc
mov
fcmove
and
xor
aaa
push
push
mov
mov
push
add
dec
lds
dec
mov
push
gs
mov
cld
or
pop
aaa
lret
test
lds
dec
in
push
scas
popf
daa
and
xchg
out
mov
jo
out
push
sahf
inc
mov
cmp
loope
mov
dec
out
xchg
xor
inc
mov
lret
adc
jge
dec
mov
int3
jo
idivl
mov
mov
test
mov
out
sub
mov
xchg
int
pop
hlt
subl
and
add
loopne
mov
add
adc
lock
dec
cmp
imul
adc
ds
jae
sarb
jnp
dec
jmp
mov
or
sbb
insb
mov
xchg
std
or
xchg
enter
xchg
xor
lea
iret
movb
jbe
mov
outsl
add
pop
insb
push
xor
lret
inc
sub
sub
sub
incb
inc
sbb
ret
mov
mov
lock
add
adc
shlb
arpl
repz
jnp
fsubp
fistpll
mov
jecxz
inc
repnz
in
popa
test
xchg
mov
mov
mov
les
ficomps
je
loope
lods
mov
ja
inc
popa
mov
and
sbbb
mov
jbe
cmp
xchg
icebp
mov
arpl
das
ljmp
es
ficoml
mov
mov
pop
adc
and
add
xchg
divb
mov
out
jge
test
mov
incb
ljmp
js
bound
dec
outsl
mov
mul
xlat
xor
clc
sbb
test
add
push
xor
xchg
mov
sub
pusha
ret
xor
mov
int3
pop
in
pop
icebp
add
rolb
hlt
pop
or
jb
jbe
jle
iret
fldenv
test
or
int3
pusha
leave
adc
jle
inc
sbb
andl
mov
ljmp
lods
fdivrl
push
push
out
mov
out
in
or
mov
dec
dec
inc
loopne
movl
pop
ret
mov
push
insb
inc
jmp
push
cmp
popf
mov
xor
push
repz
sbb
inc
push
jo
sub
hlt
push
mov
mov
inc
add
popf
ror
call
ja
popf
adcb
cwtl
in
or
sbb
sub
cwtl
mov
gs
aam
enter
sbb
push
mov
jne
out
testb
sti
idivb
daa
fidivrs
inc
dec
pusha
mov
cmp
inc
pop
pushf
adc
leave
jae
xchg
jne
insb
push
cltd
mov
jg
fs
add
movsl
ret
dec
and
aad
aam
or
sbbb
dec
mov
inc
imul
or
add
hlt
fnsetpm(287
lret
aam
jmp
fwait
movsb
mov
fs
push
jnp
imul
or
add
hlt
fnsetpm(287
lret
aam
jmp
fwait
movsb
mov
fs
push
jnp
imul
or
add
hlt
fnsetpm(287
lret
sar
ljmp
mov
inc
pop
push
dec
bound
imul
or
sbb
sti
les
inc
jnp
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
pop
sahf
dec
jno
inc
imul
in
fs
dec
inc
es
loope
icebp
sti
shr
fwait
mov
stos
xchg
pop
popa
dec
jno
inc
imul
or
lret
loope
sar
shl
fwait
into
mov
xchg
inc
repz
jno
jmp
adc
ret
xchg
movsb
sahf
xchg
mov
out
cld
xchg
xor
pop
jnp
sbb
mov
pop
loop
dec
jb
mov
xchg
pop
mov
les
pusha
add
xlat
in
xor
or
mov
test
fwait
jb
adcb
mov
mov
jg
jb
or
insb
xor
ret
dec
pop
fwait
xorl
pop
mov
dec
jmp
cli
sub
push
push
lret
hlt
adc
mov
stos
ret
cltd
notb
mov
in
adc
fistl
sbb
arpl
mov
mov
stos
int3
cmp
xchg
imul
or
and
inc
cltd
xchg
mov
dec
mov
popa
push
cmpl
sbb
cmp
xor
jecxz
repnz
orl
pushl
xor
jno
add
jg
push
insl
pop
jbe
sub
cmpsl
mov
mov
mov
leave
rol
xor
sub
adc
sbb
or
cmp
jge
test
mov
icebp
loopne
int
iret
cli
ds
daa
ss
adc
xor
or
cmp
sub
fndisi(8087
lret
icebp
sti
shr
fwait
mov
stos
xchg
pop
popa
dec
jno
inc
imul
or
cmp
sub
fndisi(8087
lret
icebp
sti
shr
fwait
mov
stos
xchg
pop
popa
cmpsb
ja
imul
cli
and
jnp
ret
fbld
fsubrs
mov
push
aas
cli
sub
sbb
push
cs
out
push
sarl
push
cltd
cmp
cmp
adc
pop
cmpsl
jg
add
cmpl
adc
pushf
rcll
mov
subb
mov
dec
cmc
mov
adc
xor
lcall
aaa
mov
jmp
shl
pushl
jbe
adc
lahf
scas
push
mov
fstl
aas
pop
mov
mov
jnp
mov
pop
imul
inc
in
int3
ret
mov
sub
pop
add
out
cmp
pushf
mov
cmpsb
jnp
sub
ja
cltd
clc
push
and
sbb
mov
xchg
shll
enter
cmp
mov
sub
mov
pop
push
dec
dec
outsl
push
cmc
cmc
in
add
mov
add
loopne
inc
test
sbb
icebp
lret
test
es
mov
mov
arpl
and
mov
pop
push
in
ja
xor
xchg
pmulhw
in
fisttpl
push
addl
lock
cmc
out
mov
je
pop
cld
add
ffreep
movsb
push
inc
cwtl
and
xchg
pop
lcall
sub
and
add
dec
and
test
mov
or
repnz
xlat
int
mov
test
xlat
or
test
xchg
jle
stc
enter
loope
jne
pop
mov
popf
xchg
cmp
hlt
lret
and
cmpb
addr16
adc
push
and
add
jle
loopne
or
or
cmp
shl
incl
mov
fsubrl
aas
and
push
pop
ljmp
push
cli
jg
les
xchg
out
and
adc
andb
sub
dec
inc
js
xchg
and
stos
into
mov
inc
out
in
jle
inc
cmp
rcll
addb
adc
jae
pop
mov
jl
std
lret
pop
jl
fisttps
push
or
jmp
adc
add
pop
xor
cmp
sti
lret
or
cmp
in
jle
push
call
mov
sub
xchg
stos
addl
aas
inc
lcall
push
cli
dec
fisttpll
push
xchg
cwtl
aaa
xchg
xchg
lret
adc
cmc
addr16
out
adc
movsl
add
mov
jbe
leave
mov
add
insl
inc
sbb
insb
mov
cmp
out
dec
cli
xor
iret
pusha
dec
sbb
or
sahf
and
sarl
cmpsb
js
inc
test
js
loope
sbb
push
xchg
lret
dec
scas
in
test
aad
fwait
shlb
jo
lods
dec
add
lods
lret
test
jl
dec
pusha
flds
lret
lahf
lret
out
adc
icebp
lock
pop
cmc
pop
xor
repnz
imul
movsb
aad
push
pop
dec
stos
mov
aas
loop
dec
pop
mov
test
mov
mov
inc
jns
aaa
fs
xchg
mov
das
roll
jnp
mov
pop
jbe
popf
add
inc
lds
ret
enter
mov
add
mov
push
mov
ljmp
and
pop
lea
cmp
lret
jo
jo
pop
fstps
daa
or
test
ret
out
outsb
imul
subl
out
sub
mov
fistpl
dec
popf
testl
cmp
add
pop
mov
iret
std
pop
xlat
insl
push
lods
ljmp
pop
mov
aam
adc
fdivrs
sarb
lock
cwtl
sub
fstpl
aas
xchg
and
lds
loopne
scas
push
push
hlt
pop
xlat
inc
cli
faddl
push
out
inc
imul
rcrl
pop
lds
mov
push
pop
pop
or
add
push
mov
push
into
mov
icebp
or
mov
cmc
mov
cmp
out
cmp
test
scas
xchg
dec
ss
fstps
addr16
dec
add
pop
cli
js
mov
enter
add
jbe
cltd
cmpb
or
adc
icebp
sarb
scas
jo
xorb
imul
in
add
out
jb
mov
sarl
mov
xchg
dec
lahf
dec
std
insl
enter
repz
mov
out
push
cmpl
icebp
mov
push
cmp
mov
inc
xchg
pushw
hlt
je
or
fs
sub
imul
incl
rclb
in
shl
ror
mov
jne
xor
cmp
adc
test
test
pusha
add
pusha
pop
aad
je
andb
in
ds
jo
test
lock
gs
ds
loop
out
xor
in
or
sbb
loopne
stos
xor
das
push
adc
sbb
in
xor
loop
ret
push
orl
jl
fsubl
int
cmp
jg
cmc
lcall
pop
dec
push
in
dec
push
fwait
sub
int
fldcw
test
test
lock
push
idivb
push
sbb
dec
gs
xor
insb
pop
xchg
sti
stc
fiaddl
movsb
push
jae
in
inc
jnp
jl
decl
into
jecxz
xchg
mov
int
sbb
mov
lods
xchg
push
stc
jne
inc
pop
mov
cltd
and
imul
lahf
out
imul
in
mov
mov
fwait
cltd
mov
sbb
jnp
or
das
and
adcb
and
sbb
adc
insb
xchg
ficoml
and
lock
push
lods
inc
mov
fmuls
movsl
cmpsl
insb
inc
and
cld
cmp
jo
cmp
rcr
out
mov
cmc
bound
decl
pusha
les
cwtl
inc
test
imul
push
imul
add
pop
ja
jnp
or
xor
jne
orl
pop
inc
pushf
push
les
cmp
loopne
in
or
push
icebp
lds
ret
rclb
mov
cmc
daa
mov
inc
xchg
lods
and
inc
lret
dec
push
mov
aas
or
push
loopne
sub
dec
pop
fists
pop
les
out
mov
jp
adc
int3
jg
sub
adc
mov
jge
cmovno
sbb
scas
lahf
cli
inc
loope
pop
rcrl
push
ljmp
dec
gs
jl
sbb
lea
jns
notl
inc
loopne
inc
or
jmp
call
fldcw
enter
mov
xchg
mov
sarl
jle
pop
mov
lods
or
aad
mov
insb
pop
mov
fadds
test
dec
mov
cmp
loopne
xor
test
rclb
inc
xor
or
add
push
repz
push
push
ljmp
jns
imul
sarb
sub
xlat
js
rcl
or
neg
add
mov
das
inc
mov
inc
adc
stos
pop
push
mov
sub
mov
mov
add
mov
enter
ds
pop
cld
ficomps
jp
rcl
test
push
je
aam
pop
in
repnz
mov
gs
es
xchg
mov
imul
adc
jge
push
adc
into
scas
lahf
cmp
mov
xchg
out
cmp
and
sub
adc
or
push
arpl
test
aam
xchg
mov
aas
jecxz
ss
arpl
fmuls
loope
iret
add
dec
ljmp
inc
jnp
bound
out
mov
pop
or
cmp
adc
enter
sub
add
lret
mov
jnp
ficoms
sbb
ds
mov
xchg
nop
push
cltd
test
test
loop
adc
andl
inc
dec
in
scas
push
pop
sbb
ss
test
mov
add
pushf
jg
xchg
add
sahf
adc
and
mov
movsb
iret
lods
das
call
fyl2xp1
out
dec
fxam
out
lea
jnp
lea
or
xchg
push
scas
xor
jge
lahf
fst
pop
adc
cli
pop
in
int
cmp
ret
in
pushf
std
cmp
and
ds
cmpsb
xchg
lods
or
shll
push
sub
mov
mov
jl
repz
gs
lods
and
daa
add
loope
push
push
jmp
xor
mov
das
cmp
imul
cmc
inc
inc
mov
rcr
mov
outsl
mov
mov
divb
hlt
test
mov
cmp
push
ret
mov
lods
adc
daa
aam
push
or
sahf
popa
out
jns
mov
insb
in
pushf
push
or
cmp
pop
icebp
scas
cs
add
pop
mov
jecxz
pop
packsswb
pop
loope
xor
in
sbb
ljmp
mov
fimuls
loopne
sti
fistps
stc
push
nop
pop
mov
cmpsb
movsl
lds
data16
imul
sbb
fidivrs
xchg
repnz
inc
addb
jb
test
mov
mov
sub
and
inc
daa
lret
inc
mov
es
cld
popa
cmp
push
push
ljmp
insb
cmc
mov
mov
push
xor
leave
out
mov
inc
lea
add
jo
sbb
divl
fs
mov
mov
adc
bound
call
rep
adc
dec
pop
jg
mov
xchg
xchg
mov
outsl
fnsave
hlt
aas
enter
push
cld
insb
mov
xchg
mov
ja
mov
sub
cmp
sti
pop
and
cld
ret
idivb
mov
xor
push
push
daa
js
push
push
and
jb
lods
mov
lcall
adc
pop
xorl
jle
ss
or
mov
mov
cmp
cmp
stc
mov
loopne
test
push
inc
or
lods
add
and
mov
jne
inc
insl
jne
pop
stos
nop
outsb
xchg
bound
test
sub
insl
aas
out
ljmp
fs
js
imul
jl
pushf
xor
inc
sbb
test
cs
inc
stc
fisubrl
jmp
mov
inc
inc
pop
jb
stos
call
push
imul
push
fadds
and
dec
pop
xor
fcmovb
loope
leave
cmc
pop
cld
pop
in
push
cmp
icebp
loop
xor
or
add
aaa
pop
in
cmp
add
mov
arpl
jmp
xchg
add
rclb
call
inc
cmp
xor
insl
push
fdivl
or
cmp
stos
fldcw
or
push
inc
adc
fwait
pop
test
sti
jb
add
cwtl
enter
mov
and
ljmp
clc
in
xchg
inc
mov
shll
out
cmc
pop
and
notb
fbstp
stos
aad
fidivl
and
int
insb
add
movsb
xchg
ljmp
mov
das
push
repnz
sub
pop
pop
cwtl
insl
pushf
mov
mov
mov
inc
test
pushf
or
ss
xchg
mov
aaa
cmp
ja
and
in
out
enter
adcl
or
xor
ljmp
insl
fcmovnbe
sbb
mov
or
sub
jg
daa
int3
mov
pop
inc
pop
test
cmp
movsl
xchg
nop
push
push
mov
sbb
jge
cld
aaa
pop
popa
test
sub
pusha
push
add
jns
and
dec
inc
jo
test
sti
dec
gs
aad
jne
add
aad
shrb
in
jne
push
pop
dec
jge
mov
mov
adc
mov
enter
loop
loopne
mov
shrb
adc
jg
push
cmp
decb
jmp
inc
sbb
push
xchg
out
dec
cmp
ja
pop
push
push
jg
sbbl
adc
imul
dec
xor
cli
dec
jns
and
add
popf
inc
stos
mov
or
popf
cwtl
lods
adc
test
test
mov
cld
addl
cld
popa
test
mov
jecxz
mov
sysenter
fidivl
add
lcall
xchg
pop
and
roll
sub
cmpsb
stc
inc
scas
jl
xchg
push
jne
je
xchg
fwait
cmpsb
add
sub
dec
xor
xchg
cmpsb
xchg
lds
adc
das
clc
push
stos
loop
lods
push
mov
ss
and
xor
gs
add
fildll
and
call
in
mov
mov
loope
cmc
or
fiadds
dec
xlat
clc
jo
xchg
sbb
ss
rcll
jecxz
fs
mov
fnstenv
add
xor
mov
aam
pop
jp
and
orl
leave
imull
or
scas
movsl
inc
je
cmp
mov
mov
in
and
mov
stc
cltd
fwait
mov
pop
mov
mov
add
mov
insl
pop
push
mov
inc
xchg
bswap
adc
mov
inc
mov
mov
cld
pop
into
rcrb
decb
inc
lcall
in
subl
iret
push
shrl
xchg
jl
mov
or
jnp
mov
cli
and
mov
lahf
lahf
out
out
mov
inc
popa
push
pop
jg
stc
test
jecxz
dec
je
andb
das
lret
jns
iret
adcb
dec
int3
pop
and
mov
addl
es
addr16
pop
mov
xchg
pop
xor
popa
inc
or
inc
ja
jmp
repz
push
jmp
cmp
jecxz
push
cmp
mov
mov
sbb
subl
mov
dec
jge
cmpsb
push
mov
mov
stos
stos
arpl
cmova
xchg
xlat
gs
inc
loopne
jnp
je
jno
movsl
jnp
outsl
cmp
and
test
pop
or
in
mov
adc
dec
mov
sbb
lds
mov
mov
rorl
mov
jo
das
jge
cli
fists
adc
and
add
xchg
pop
inc
rcrb
int3
cld
mov
ljmp
stos
inc
dec
out
es
pop
or
adc
adc
dec
xchg
add
xor
and
dec
pop
and
cmc
mov
pusha
sti
iret
pushf
xchg
add
iret
outsb
mov
dec
fbstp
lret
scas
xor
ret
lcall
xor
cltd
fnstcw
divl
shrl
xlat
mov
mov
mov
xor
aad
sub
mov
and
xchg
inc
aad
mov
cvtps2pd
dec
cmp
lods
pop
lea
fld
in
mov
das
sbb
jb
int3
inc
jno
or
push
add
xlat
mov
mov
scas
popf
sub
push
fcom
cmpsb
les
cld
aaa
adc
fistpll
popf
aam
and
repz
lock
test
xchg
xor
jge
stos
sarl
push
repz
add
f2xm1
push
xor
jge
lret
jmp
jnp
sub
inc
fstpt
iret
imul
sub
test
data16
pop
rol
xchg
ret
mov
out
imul
fisttpl
das
daa
repnz
rorb
sub
filds
mov
xchg
sub
loope
jecxz
sub
shrb
fcoms
jecxz
jmp
mov
or
pop
xor
int
mov
or
dec
sbb
ljmp
dec
lret
sub
out
dec
cmc
ja
jns
fldenv
imul
dec
out
pop
aas
push
add
adc
out
mov
nop
cmpsl
cwtl
cli
and
ss
xchg
dec
sbb
cmp
jmp
pop
jmp
ret
ljmp
data16
inc
cmp
aas
popa
mov
and
stos
test
mov
xchg
aad
pop
gs
hlt
add
dec
jge
mov
orl
gs
daa
es
jmp
ja
xchg
add
jo
orb
sbb
int
mov
and
shl
xor
dec
data16
test
rcll
lcall
call
fadd
movsb
dec
xchg
int3
loopne
mov
call
add
gs
sbb
xlat
push
xor
pop
mov
ret
bound
out
xchg
cmp
and
cmp
sub
mov
or
jns
je
cmp
lods
xchg
std
lcall
jg
dec
iret
inc
les
or
push
lods
xor
add
mov
inc
movsb
mov
mov
pop
js
pop
inc
and
add
js
scas
daa
add
repz
out
or
dec
sbb
out
fs
jns
scas
dec
insb
push
or
sub
mov
stc
pop
and
arpl
ljmp
xor
mov
adc
push
or
mov
pop
push
shlb
fcoml
int3
pop
testl
jle
mov
pop
inc
pushf
mov
outsl
add
cmpsl
out
movsl
mov
push
cwtl
xor
iret
lods
jp
jno
sub
mov
sub
clc
cmp
pop
push
xor
rcll
sbb
dec
int3
pop
or
call
push
scas
mov
out
and
mov
jmp
sbb
mov
mov
hlt
or
jecxz
cmp
imul
out
es
cmp
lods
xchg
add
stos
addl
stos
jmp
mov
loopne
lock
gs
xchg
cwtl
int3
mov
mov
cltd
dec
popa
into
xchg
outsb
jbe
inc
or
jmp
sbb
add
inc
ret
and
xchg
push
gs
ss
div
or
lock
stos
dec
xchg
scas
adc
lock
pop
and
mov
add
cld
xchg
dec
aad
lock
sbb
jg
inc
pop
lret
lret
outsb
cmc
idivl
mov
mov
cmp
xor
xlat
out
pop
cmp
push
arpl
xor
subb
iret
cmpsb
out
test
sub
push
stc
adc
dec
loopne
cmp
sub
imul
out
test
stos
lds
pop
js,pn
ds
mov
notl
shrl
xchg
insb
push
arpl
and
adc
mov
arpl
mov
pop
fidivl
pusha
cld
fs
inc
xchg
and
dec
adc
xchg
jne
pop
ret
hlt
cmp
out
pop
je
lahf
stos
or
popa
rol
mov
loop
incl
shlb
pop
sub
lret
shrb
fdivp
pop
xchg
lods
mov
dec
and
int3
adc
push
add
leave
dec
mov
pop
adc
pop
xor
cld
lock
ss
cwtl
lcall
imul
sar
stos
lret
pusha
jns
jno
sti
xchg
js
cmp
sbb
bound
movsl
je
mov
push
pop
lahf
xor
push
and
ljmp
jecxz
aaa
mov
std
push
jmp
push
pop
dec
jge
xlat
xlat
in
test
js
inc
push
or
dec
sbb
jns
push
push
pop
mov
xchg
lods
roll
pop
cld
in
stos
inc
push
push
xlat
shll
pop
outsb
outsb
add
jecxz
out
sbb
icebp
imul
jns
ds
loope
outsl
push
sub
cmp
adc
push
xor
inc
outsb
sbb
mov
mov
aaa
test
sbb
and
push
push
lds
push
pop
cmp
fisubs
inc
movsl
insl
mulb
mov
popf
sbb
gs
xor
push
push
and
bound
lret
adc
stos
mov
add
test
sub
in
cmp
daa
mov
add
mov
or
xor
jl
sahf
xchg
inc
push
xchg
pushl
or
enter
push
cli
dec
cmc
shll
movsl
mov
mov
addb
or
sbb
sbb
or
dec
dec
in
cli
popa
mov
push
pop
int
xor
push
popa
subl
movsb
js
inc
ljmp
pop
test
aaa
xchg
and
loop
lcall
sub
es
mov
ja,pn
push
xlat
xchg
nop
xchg
and
inc
and
pop
mov
rcrb
or
xchg
pop
sarb
and
dec
pushf
out
adc
cld
cmp
repnz
std
aam
lcall
mov
push
and
or
orl
cld
cltd
dec
mov
fadds
adc
insb
push
in
jmp
lods
lods
push
ficompl
jl
sarb
aas
xor
inc
enter
jnp
cs
xchg
xchg
mov
sti
lcall
jnp
mov
ret
movsl
dec
nop
jno
sub
or
cmp
sub
fndisi(8087
lret
icebp
sti
shr
fwait
mov
stos
xchg
pop
popa
dec
jno
inc
imul
or
cmp
sub
fndisi(8087
lret
icebp
sti
shr
fwait
mov
stos
xchg
pop
popa
dec
cmp
imul
or
fstpt
lret
icebp
sti
shr
fwait
mov
test
jno
inc
imul
or
mov
push
xor
push
shr
in
sub
dec
inc
jle
outsb
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
lock
jo
inc
iret
push
fistps
scas
je
loopne
lock
dec
rcrb
das
mov
nop
seto
pusha
out
jo
inc
iret
push
fbld
scas
xor
loopne
lock
dec
rcrb
inc
mov
orb
pop
pusha
out
jo
inc
iret
push
fbld
scas
xor
loopne
lock
mov
jnp
push
adc
fildll
add
adc
mov
or
xchg
das
xlat
test
inc
xor
xchg
adc
scas
aas
cmp
sbb
sbbb
dec
testb
jno
dec
movsl
xor
and
mov
lret
mov
nopl
jo
add
jo
pusha
out
mov
or
mov
lock
ss
cmp
nop
add
scas
adc
cmp
add
adc
nop
mov
pop
repz
aas
add
push
jb
lahf
shrb
ficompl
jle
sub
mov
dec
aam
mov
orl
jo
inc
iret
push
fbld
scas
xor
loopne
lock
dec
rcrb
das
mov
orb
jbe
jmp
mov
arpl
push
inc
leave
jne
mov
inc
jle
sub
in
jbe
push
aas
mov
lcall
push
repz
push
push
mov
inc
ret
rcrb
jo
stos
pop
mov
mov
xor
loopne
lock
dec
rcrb
das
mov
orb
pop
pusha
out
jo
inc
iret
push
fbld
scas
xor
loopne
lock
dec
rcrb
das
mov
orb
pop
pusha
out
jne
int
add
jb
in
testl
out
sahf
mov
pop
cmpl
cli
stc
test
mov
popf
icebp
sub
mov
dec
pop
xlat
mov
xchg
sbb
push
pop
and
or
jp
mov
push
movb
stos
sub
jg
mov
xor
xchg
test
bound
mov
fisubs
jmp
and
jg
sub
mov
sbb
pop
adc
dec
idivl
icebp
xor
movsl
cli
out
outsl
and
popa
dec
mov
or
jnp
push
rclb
cltd
call
daa
mov
rol
xchg
inc
aad
in
mov
in
jbe
mov
mov
adc
push
push
pusha
add
sbb
fdivp
xchg
insb
stc
shll
xchg
or
jle
sti
lds
inc
cld
xchg
adc
mov
jmp
push
lods
mov
inc
shlb
pusha
push
cmp
sarb
or
mov
or
or
nop
nop
lret
stos
cmp
push
hlt
and
hlt
incl
sub
jecxz
mov
add
or
repz
push
mov
jne
jp
repnz
loope
stc
mov
pop
in
sbb
fimuls
pop
xor
pushf
enter
xor
adc
sub
mov
or
lea
pop
jbe
mov
xor
aaa
push
mov
adc
xor
mov
mov
pop
icebp
lea
scas
dec
maxps
loopne
testl
mov
loope
lds
xchg
test
mov
sti
and
push
push
movsb
sbb
pop
sbb
and
pop
lods
jno
jp
push
loope
sbb
imul
in
mov
adc
je
cwtl
xor
data16
inc
je
cmp
lcall
lret
mov
subl
test
inc
sbb
cmpsb
sar
jns
pop
frstor
mov
ret
xor
dec
mov
lahf
sbb
mov
mov
popa
stc
mov
xor
aas
inc
add
repz
mov
pop
sti
or
lods
mov
mov
mov
fwait
enter
xor
pop
mov
jnp
and
adcb
mov
pop
inc
fisttps
pop
test
filds
xchg
adc
sub
cltd
jmp
mov
push
xchg
push
cmp
inc
cmpsl
mov
push
aam
xchg
les
xchg
mull
mov
popf
movb
dec
arpl
mov
sti
pop
jp,pt
mov
sahf
inc
push
sahf
shll
jl
scas
frstor
mov
inc
outsl
xorl
inc
xor
mov
subl
xchg
sbb
push
sti
push
test
arpl
sub
pop
fsts
les
mov
loop
add
stc
lret
sbb
cmpsl
lea
and
and
rclb
xlat
nop
inc
repnz
divb
fwait
sbb
sbb
pop
jb
das
in
sub
push
mov
les
push
faddp
mov
mov
push
clc
lahf
jb
call
enter
rclb
mov
cmc
mov
movsb
adc
ja
aas
lds
adc
mov
int3
sbb
push
xor
adc
adcb
add
xlat
dec
push
out
shll
inc
adc
dec
fisubl
xchg
arpl
xor
dec
in
adc
pushf
sbb
adc
pop
push
sub
inc
cld
popa
setne
jo
fnstcw
jl
iret
aas
xchg
aam
sti
jge
inc
stos
rcrb
mov
push
ret
inc
dec
lcall
and
addr16
jae
mov
xor
dec
adc
mov
or
das
push
adc
fisttpl
adc
dec
cltd
xchg
test
jo
cmovnp
pop
cmpl
out
cmp
xchg
xchg
arpl
aas
pop
popa
sbbl
xchg
mov
pop
jno
fistpll
dec
mov
lahf
repnz
ja
out
adc
add
mov
sub
xchg
push
sahf
adc
sahf
cmc
mov
int
scas
fwait
jne
daa
popf
int3
pop
jae
aam
test
lahf
push
mov
js
ret
cmp
sbb
mov
xchg
sbb
stos
enter
stos
mov
int3
pop
addr16
icebp
inc
add
add
out
sub
mov
jnp
inc
ja
fcmove
pop
adc
fst
shr
mov
xor
repz
or
ja
mov
std
push
mov
lock
add
test
popa
inc
enter
pop
add
js
testb
xlat
mov
pop
cld
imul
lcall
pop
add
and
mov
dec
mov
mov
or
cmp
cmp
in
imul
mov
sbb
sti
mov
jbe
adc
outsb
popa
orb
dec
jne
add
cmp
fucomp
or
cmc
fiadds
adc
jae
add
out
lea
cltd
xchg
ja
arpl
outsl
fsts
stos
push
out
pop
shrb
jno
outsb
jge
ds
push
pushl
insl
and
mov
ja
stc
jno
repz
push
fbstp
ss
jecxz
cmpsb
ret
data16
rolb
aam
push
and
mov
test
aas
adc
insb
fnsave
pop
or
add
dec
rcll
les
mov
pop
or
mov
mov
movsb
and
pop
mov
push
lds
cmp
sub
into
and
ret
aad
mov
repnz
fmulp
inc
pop
push
fucomi
jle
xchg
in
nop
jecxz
add
push
clc
insl
mov
dec
lret
aad
std
sti
out
shrb
mov
dec
mov
xchg
dec
insb
test
das
stos
mov
mov
jno
or
rclb
lcall
adc
ss
cli
in
hlt
jns
scas
push
bound
jb
and
sbb
or
jno
mov
mov
imul
jle
adc
shl
mov
jge
lds
add
lds
push
outsb
sub
push
push
mov
fadd
outsb
test
push
sbb
cltd
fmul
mov
mov
push
jns
inc
sub
pop
das
pop
pop
or
mov
adc
jnp
jmp
pop
dec
push
mov
addr16
mov
in
mov
pop
arpl
icebp
aad
cltd
popw
add
mov
jecxz
fidivrl
sub
push
shl
jae
mov
cmp
jne
mov
jbe
fnsave
stos
imul
xchg
ret
imul
nop
push
push
fdiv
dec
repnz
dec
pusha
jo
inc
jb
dec
rorb
sub
push
call
xchg
addps
cmpb
aam
jae
push
sahf
test
pop
xor
sbb
cmp
dec
jo
call
adcl
ret
in
cmp
dec
xchg
or
inc
test
aas
push
hlt
and
pop
dec
sbb
pop
cmpsl
mov
jae
add
psllq
sub
mov
mov
xor
jno
jge
pop
push
sysret
xchg
dec
xchg
mov
std
adc
rorl
cmp
insl
or
jno
pop
xchg
lahf
pop
inc
ljmp
adc
mov
test
xchg
mov
push
and
push
dec
mov
idivb
jne
fsubrs
xchg
pusha
cmc
fnstsw
adc
aaa
xor
sbb
stos
or
les
inc
pop
push
jle
pop
cmp
adc
adc
int
dec
clc
push
icebp
clc
jns
pusha
je
xor
sub
jns
iret
inc
lods
push
and
pop
pushf
sub
les
outsb
dec
sub
push
insb
ffreep
lea
xlat
pop
cmp
insb
std
fstps
mov
insb
test
movsb
inc
push
fbld
add
scas
cmp
lods
pop
lds
andb
sub
andnps
dec
mov
push
lcall
mov
push
mov
arpl
mov
js
cltd
xchg
ficompl
lea
push
sbb
test
cmpsb
cwtl
push
sub
mov
mov
data16
std
or
sti
mov
xchg
mov
fadds
inc
jae
jbe
jbe
clc
dec
cmpb
out
aas
xor
lret
and
loop
adc
call
ljmp
repz
stc
cmp
sub
cwtl
iret
jo
mov
sti
shr
xchg
cmp
mov
std
loope
inc
adc
mov
push
pop
aaa
out
negl
jbe
jecxz
inc
sbb
xchg
push
push
sub
adc
in
mov
and
mov
in
sub
sub
dec
mov
lea
or
cmpsb
jle
jae
pop
xchg
cmp
jnp
in
rcll
jecxz
adc
dec
aas
test
ljmp
stos
mov
dec
jnp
jl
stc
jle
sbb
push
call
cmp
stc
leave
mov
in
orb
sub
mov
imul
shlb
xor
sbb
aad
sbb
add
les
pop
jo
jmp
cmp
inc
mov
rorb
stos
or
sub
das
sbb
cltd
scas
cmpl
push
cli
inc
adc
cmp
jmp
outsb
stos
jno
jnp
addr16
lods
loope
or
jo
xor
sarl
jg
mov
int3
pop
jle
in
dec
mov
xor
sbb
push
jne
cmp
mov
aas
cwtl
mov
les
jae
and
stos
push
aaa
bound
adc
das
inc
call
and
cmpsl
outsb
outsb
mov
outsl
std
notb
pop
cmpsl
xlat
sub
repnz
push
ficoms
stos
ret
dec
xchg
mov
xchg
in
dec
push
adc
shrl
dec
pop
xchg
stc
pop
xor
push
add
roll
gs
dec
je
cltd
dec
adc
pusha
ds
lahf
adc
cmp
adc
stos
jp
pusha
out
test
call
aad
jg
inc
lea
mov
dec
mov
adc
mov
inc
jae
loope
filds
jno
out
inc
xlat
into
or
push
rclb
cwtl
scas
add
ret
outsb
nop
stos
fldt
mov
aam
jo
lret
out
cmpsb
sarb
in
out
faddp
dec
mov
ret
cmp
inc
outsb
mov
inc
mov
pop
cmpsl
rcrb
pop
jns
mov
les
lds
loopne
jo
rcrb
jg
inc
aas
movsl
icebp
adc
cmp
pusha
or
out
or
xchg
ja
and
insb
adc
sub
repz
sub
inc
cmp
hlt
imul
fisubs
or
pop
ret
add
xchg
dec
repnz
test
imul
and
adc
stos
orl
iret
cld
add
xor
inc
cmp
scas
adc
jns
andb
jg
and
arpl
dec
xchg
mov
repnz
fwait
pop
pop
and
mov
mov
inc
clc
mov
or
rcrb
lds
inc
pop
shll
jb
sub
mov
jae
push
stos
bound
dec
or
xchg
je
pop
imul
mov
or
cmp
inc
jmp
bound
mov
nop
push
cli
mov
cs
aaa
out
push
sbb
ljmp
or
adc
imul
push
xor
add
mov
add
or
notb
and
mov
add
xchg
fs
in
ds
and
dec
xlat
and
and
xor
adc
nop
mov
enter
inc
divb
cmp
jne
pop
int
jle
dec
and
imul
add
pop
cmp
xchg
mov
mov
dec
lahf
fcomip
inc
xlat
mov
sarl
jnp
jge
fisttpll
ja
and
push
loopne
sbb
sbb
xchg
inc
sbb
dec
cmpps
sti
xor
imul
lret
jbe
popf
inc
push
adc
jb
repnz
and
lea
out
inc
mov
mov
xchg
cmp
adc
cmp
data16
mov
inc
mov
testl
sahf
adc
sbb
lods
adc
pop
addl
fbstp
fstpl
inc
add
addps
fnsave
xchg
sub
fbld
aas
push
stos
stos
cmp
repnz
test
repz
mov
dec
push
push
xchg
loope
xor
and
mov
fwait
cwtl
lea
push
dec
dec
repz
sti
arpl
sbb
cmpl
add
cwtl
pop
jae
lods
push
push
subw
sub
mov
fld
cmc
repnz
mov
out
enter
or
int3
mov
push
faddl
nop
mov
push
jecxz
and
out
lds
loope
adc
cld
es
out
repnz
mov
dec
out
push
fildll
xchg
in
mov
mov
jbe
add
or
loopne
inc
xchg
fsts
nop
repz
in
add
sub
ror
jp
sbb
and
inc
add
adc
lret
jg
dec
xor
cltd
pop
inc
fidivrl
scas
dec
jmp
cwtl
pop
dec
outsl
shl
add
mov
xchg
mov
notl
xor
mov
mov
ds
mov
divb
sub
push
sub
stos
inc
mov
adc
in
and
fistps
stc
popf
mov
stos
in
mov
mov
loope
sti
movsb
xor
push
cmpsl
ret
je
xchg
mov
jns
cmp
push
jmp
cmpsl
data16
or
dec
cwtl
mov
or
mov
addr16
and
lock
pop
mov
out
stc
cmp
xor
cmp
test
mov
pop
stos
int3
xchg
cld
mov
mov
in
xor
pushl
push
lcall
fsubrs
sbb
cmp
sub
cmc
lods
out
dec
push
shrb
gs
dec
pushf
pop
push
mov
pop
pop
push
mov
jne
fsubrp
fbld
xor
mov
adc
loope
call
adcl
aas
clc
xchg
dec
dec
xlat
push
rcl
pusha
inc
mov
insl
push
mov
cmp
push
addr16
lea
mov
xor
fs
xor
jne
jnp
ja
push
movsl
cltd
loopne
xor
xorb
cli
jle
or
lds
cmpsl
aam
push
and
inc
mov
sarb
out
gs
or
in
sbb
xor
jae
call
adc
jne
dec
mov
sahf
sbb
arpl
push
cmp
aaa
sahf
repz
xchg
orb
scas
test
sbb
xchg
or
add
mov
rol
and
dec
in
mov
pop
arpl
outsb
scas
jne
or
jge
inc
jae
ret
addr16
pop
outsb
loope
xchg
pop
or
popf
xor
sbb
shrl
jmp
scas
jle
lret
or
jno
fldt
jo
add
dec
out
inc
mov
aad
cmp
sub
sub
cmp
jl
adc
cli
iret
xor
xchg
adc
iret
aaa
adc
mov
outsl
mov
add
adc
lea
add
mov
in
xor
test
xor
enter
test
sbb
addb
arpl
insb
mov
scas
jne
loopne
cmp
into
test
loopne
lds
push
xchg
das
sub
out
cmp
pop
xchg
sbb
mov
sbb
xchg
call
jne
inc
push
lret
pop
sub
cld
pop
fs
daa
ret
mov
fwait
push
cmp
cmc
pop
lods
imul
nop
sbb
mov
shll
arpl
sbb
jp
fcoml
lcall
in
in
and
jecxz
dec
adc
push
fistl
lock
cmpsb
jecxz
in
mov
pop
ss
repnz
sub
push
jo
jl
inc
jecxz
and
bnd
dec
aad
pop
xchg
inc
mov
loop
jb
jo
dec
into
lds
push
dec
icebp
lock
popf
les
jns
and
cmp
adc
inc
pop
push
test
cmp
enter
lret
into
fstpt
dec
loope
in
lahf
popa
pop
out
mov
jno
or
xchg
jmp
sbb
leave
insb
into
test
inc
sub
add
pop
lods
std
pop
pop
push
arpl
shl
dec
or
jae
sub
lcall
cmp
sub
mov
hlt
stc
aaa
cmp
out
test
fisttps
sbb
enter
sbb
inc
jne
mov
int3
cmp
push
mov
scas
add
cli
xchg
mov
out
les
sub
sbb
cmpsb
mov
xor
int3
loop
add
sbbl
mov
adc
xor
scas
imul
popa
add
jo
clc
pusha
clc
js
orl
jo
or
cs
es
inc
movsb
shrb
and
shrb
sub
cmc
sbb
xchg
imul
call
cmp
in
rcrb
cmp
lea
lret
cltd
mov
jecxz
mov
mov
xchg
fldl2t
lcall
mov
data16
mov
cld
inc
mov
inc
negb
inc
iret
cmpsb
and
gs
jmp
lods
cmc
sbb
sbb
xor
xor
sbb
gs
xchg
inc
push
in
or
test
or
push
pop
pop
sub
and
mov
and
mov
scas
scas
mov
fdiv
btr
mov
test
gs
adc
and
inc
push
add
xchg
mov
scas
cs
cmp
mov
cmp
or
fisttps
mov
adc
loop
mov
rcll
cs
cld
pusha
sub
mov
xchg
inc
ja
aam
and
ret
jae
ja
mov
enter
mov
pop
or
or
jmp
push
stos
sbb
dec
mov
data16
lahf
push
sub
sbb
orl
cmp
lds
scas
mov
adc
push
mov
push
pop
jp
xor
sub
pop
out
jl
inc
cmp
push
testl
cmp
and
test
lea
add
mov
fsts
push
and
add
insl
add
mov
inc
testl
movsb
shrl
pop
imul
sbb
xchg
aad
rcl
cld
cltd
aaa
fdivrs
add
xchg
xor
cmc
push
lods
mov
pop
xchg
sub
lods
in
pushf
push
jecxz
sbb
push
sub
xor
xchg
aam
mov
data16
stc
inc
fidivrl
mov
mov
xlat
dec
mov
pop
in
or
mov
fdivr
push
into
mov
cld
mov
repz
test
pop
mov
std
ljmp
push
cld
xchg
xchg
and
fistpll
aas
orb
stos
mov
xor
cmp
jb
and
sahf
fisttpl
dec
jb
inc
sbb
loope
rcll
xchg
lea
ret
nop
pop
push
shr
xor
rcrb
ds
xor
enter
lods
pop
adc
and
sub
dec
lahf
add
jbe
movsl
jp
dec
mov
mov
xorb
outsl
lcall
jbe
add
je
into
mov
dec
aad
xchg
add
arpl
push
mov
or
adc
xchg
dec
stos
mov
mov
mov
mov
jle
dec
shr
mov
xor
lcall
push
cmp
mov
cmovbe
xchg
gs
lods
outsb
fcoms
xor
scas
rcl
lahf
iret
inc
jb
idivl
adc
mov
pop
or
or
pop
lods
xchg
sbb
sub
push
ljmp
jp
sub
or
cmpsl
icebp
hlt
les
jmp
or
add
adcl
inc
mov
lahf
sbb
cmp
inc
mov
aad
xchg
inc
and
and
movb
and
test
ja
xchg
xor
stos
je
cmc
out
add
outsl
push
stos
sub
fstps
push
rcrb
or
imull
push
xchg
bound
or
sahf
movsl
repnz
stos
sbb
mov
lods
nop
mov
push
lods
jle
mov
pop
xchg
out
adc
mov
push
jns
and
outsl
pop
or
fwait
sub
dec
out
repz
cmp
sub
cmp
xchg
cmp
fldl
cmpsl
mov
inc
mov
mov
inc
std
mov
hlt
sub
xchg
cmp
inc
daa
stos
mov
cmp
adc
dec
jmp
push
fbld
scas
xor
loopne
lock
dec
rcrb
das
mov
orb
pop
pusha
out
jo
inc
iret
push
fbld
scas
xor
loopne
lock
dec
rcrb
das
mov
orb
pop
pusha
out
jo
inc
iret
push
fbld
scas
xor
loopne
lock
dec
rcrb
das
mov
orb
pop
popa
out
jno
inc
iret
push
fbld
scas
xor
loopne
lock
dec
shrb
xlat
cmpsl
cmp
jg
outsl
loopne
cli
mov
mov
add
mov
dec
or
dec
sub
cmp
js
push
ljmp
enter
call
push
pop
sub
dec
dec
sub
push
repz
mov
call
dec
dec
and
aas
xor
pop
ss
mov
cwtl
jb
imul
fisubl
jnp
rol
pop
mov
adc
xor
dec
shll
pop
repz
jne
test
xchg
mov
lods
mov
pop
pop
je
ljmp
jo
and
test
bound
xor
clc
lahf
rcll
movsb
mov
fdivrs
orb
lcall
cmpsb
push
and
addr16
adc
arpl
xchg
jmp
xchg
sub
dec
cmp
add
dec
inc
and
or
pop
fwait
arpl
dec
adc
shlb
lret
add
in
mov
mov
mov
call
jb
inc
sub
and
js
push
cwtl
fnstsw
or
pop
adc
inc
das
cmp
jne
data16
xchg
cli
sub
int
sahf
mov
call
vmwrite
insl
dec
cmp
jge
jle
cli
in
ljmp
enter
call
push
pop
sub
cmp
js
push
ljmp
enter
call
push
pop
sub
cmp
js
push
stc
add
enter
xor
push
notl
stos
inc
jp
ror
stc
jmp
and
out
or
mov
cltd
jae
stc
push
jno
add
jns
clc
lcall
arpl
jne
push
inc
xchg
insb
insl
call
sbb
push
xor
pop
jae
and
push
jbe,pt
ficoms
les
mov
jb
mov
and
cltd
cmpb
xchg
ret
cld
sti
and
adc
mov
cmp
ret
mov
sub
push
fsubr
jne
pushw
aad
mov
loope
pop
popf
sti
push
movl
cmp
and
in
pop
or
inc
in
push
mov
fwait
outsb
rcll
cmp
pop
push
fwait
sbb
mov
mov
mov
nop
jne
outsb
add
xor
lods
jbe
mov
icebp
lods
fisubrl
inc
lods
mov
inc
pop
mov
xchg
jl
scas
dec
pop
lods
call
pop
pop
ret
sub
jns
mov
add
shrb
loope
cmpsl
push
push
aaa
mov
cmp
rcrl
mov
pop
test
daa
mov
push
int
sub
sahf
aaa
pop
xor
push
or
out
clc
orl
imul
dec
int3
dec
insl
in
iret
aam
push
jmp
pop
cmpl
sbb
dec
cmp
pop
popf
insl
xchg
jno
out
insl
xor
icebp
push
push
jb
leave
inc
cmpsb
pop
movsl
cmp
inc
jle
mov
fidivs
xchg
imul
adc
sti
sbb
mov
push
jmp
mov
sbb
jl,pt
scas
jbe
sbb
je
push
pop
sbb
adc
xor
stos
in
call
cmc
sub
mov
and
sub
cmc
bound
stos
dec
lods
or
ja
mov
add
fcompl
add
xchg
or
pop
loopew
pop
dec
cmp
mov
fcoml
leave
imul
ret
sarl
pusha
and
lods
shlb
pushf
movsl
pop
xor
stc
in
inc
adc
push
mov
sub
scas
ret
mov
in
pop
mov
insb
cld
sub
int
inc
fisubrl
insl
repnz
fcmovnb
loopne
push
mov
sarl
cmp
pop
nop
and
lret
lret
cmp
jo
das
xchg
mov
sbb
xor
mov
repz
push
jbe
push
cmp
mov
add
mov
and
aam
mov
adc
xorb
cli
sbb
iret
xchg
push
outsb
cld
xlat
jmp
das
cmp
je
dec
cs
mov
iret
xor
maxps
in
pop
bnd
insb
dec
xchg
rcl
mov
shl
fs
fdivrs
repz
xchg
scas
stc
das
enter
mov
sarl
pop
cmpsl
xchg
jnp
jecxz
movsl
xchg
sarb
hlt
loopne
iret
imul
mov
aad
hlt
lods
sahf
sti
mov
cmpsl
lods
ret
das
jecxz
push
arpl
sbb
lret
jmp
jp
mov
lock
cmp
fldl
aad
xchg
std
pop
or
push
into
fisubl
data16
dec
xchg
ds
aaa
fiadds
mov
lahf
xchg
mov
loope
imul
mov
mov
dec
jge
pop
inc
cmpsl
xchg
test
ljmp
mov
jl
jbe
cmp
aaa
xor
cmp
aad
mov
and
xorl
cmp
out
aad
lods
pop
or
pop
cmp
call
sarb
test
pop
sub
decl
push
mov
fldcw
add
xor
lods
mov
jl
mov
shll
js
mov
sbb
mov
ret
or
imul
dec
jmp
test
movsb
lahf
mov
add
adc
sbb
cmpsl
outsb
popa
mov
xor
and
je
arpl
inc
out
push
pop
or
jle
neg
jbe
add
mov
xor
pop
xor
lods
repnz
fwait
shl
push
lods
adc
cmp
pop
insb
mov
pop
neg
sbb
insb
lods
cmpsb
pop
or
aam
push
fldenv
xlat
jnp
in
sub
xor
adc
mov
pop
xlat
out
mov
xchg
jl
push
leave
lods
push
rol
mov
mov
jae
pop
adc
push
fsubl
mov
std
dec
jne
push
sahf
movsl
aad
mov
xchg
gs
inc
scas
lret
ss
mov
dec
mov
inc
inc
adc
lock
mov
push
jo
cmpsb
push
cli
dec
test
inc
mov
stos
mov
lahf
ror
pop
mov
aaa
lea
jge
sub
ret
mov
push
lods
call
jle
dec
nop
aas
jecxz
push
in
fldcw
push
test
insb
fdivrs
fists
call
in
insl
das
jb
popf
fisubrs
flds
lcall
orb
imul
xchg
ds
lcall
aaa
cmp
adc
shlb
push
push
stos
js
std
cmpsb
movsl
and
mov
inc
fmul
in
dec
sub
test
stos
adc
adc
stos
arpl
scas
or
hlt
aas
stos
dec
in
rcll
inc
lcall
call
in
int
inc
inc
lcall
shl
xchg
test
fcoms
enter
cmp
andl
xor
jo
pop
sbb
lods
test
sarl
aaa
mov
pop
pop
fs
jns
sub
xor
add
adc
test
xchg
pop
test
pop
cmp
mov
punpckhbw
xor
int3
fs
ret
ja
dec
push
loopne
sub
sbb
aam
test
mov
sbb
lcall
cli
jle
or
es
and
and
pop
js
lret
dec
xor
adc
inc
testl
jns
movsl
sub
and
mov
lahf
movsl
mov
subb
push
adc
sahf
call
add
mov
mov
mov
or
out
sub
xor
cmpsl
rcr
or
int
jg
pop
loope
add
jb
cmp
or
dec
xor
pushf
mov
leave
and
shrl
jno
xchg
out
jbe
fwait
cmp
sbb
insb
cmp
cmp
push
xor
stc
mov
aaa
int
dec
aad
scas
movsb
subl
jle
cmp
sub
add
push
dec
mov
xchg
xchg
sbb
lds
ds
mov
pop
push
popa
mov
popf
pusha
adc
xor
inc
xchg
sbb
std
pop
stos
or
cs
dec
mov
lahf
lahf
cs
adc
mov
mov
add
sti
mov
andb
std
lcall
pop
dec
ljmp
adc
mov
xor
xchg
out
sub
sbb
cs
in
cmpsb
popl
or
jg
or
das
jne
mov
lret
in
shll
push
adc
mov
inc
cld
sub
adc
jecxz
imul
divl
lahf
stos
shr
dec
dec
scas
movsl
sub
or
popa
loope
addr16
inc
stc
repz
jle
and
nop
mov
pop
sbb
mov
call
and
pop
jo
dec
les
push
rcrl
jp
sub
xchg
iret
jge
lock
loop
jl
xchg
lods
into
aaa
jp
popf
xor
mov
mov
mov
in
movsl
lcall
out
xchg
add
jmp
popa
sarl
jle
inc
mov
pop
xor
pop
pop
or
arpl
pop
js
repz
movsb
add
fdivp
adc
hlt
lret
xchg
out
adc
and
leave
mov
jne
fs
jne
inc
shll
lahf
ljmp
rcrl
xchg
adc
cld
lds
lock
mov
xchg
daa
push
pusha
mov
xor
sbb
jnp
mov
mov
jns
sbb
push
jno
movsl
push
ret
fsubs
adc
pop
push
inc
leave
fs
fdivs
int
cmp
inc
dec
imul
idivb
pop
ljmp
cmp
mov
dec
pop
cmp
add
xlat
in
sbb
clc
mov
lret
mov
adc
push
in
jbe
cmp
data16
loope
xor
sub
sub
sub
mov
push
rcl
xchg
rcr
lea
inc
dec
mov
fldenv
std
into
or
rcrl
jle
push
cmpsb
stos
xchg
fimuls
pop
icebp
mov
repz
jle
cwtl
aad
add
and
pop
add
scas
in
into
cli
sahf
sbb
negb
repz
pushf
add
pop
dec
out
pusha
mov
sbb
cmp
pop
push
rorb
mov
push
xorb
or
adc
mov
rol
fisttpll
test
adc
mov
xor
aad
inc
sbb
dec
push
cmp
or
pusha
fsubs
mov
out
sti
fmuls
idivl
fdivp
mov
push
xor
jbe
out
es
lret
ljmp
cwtl
fildl
lods
dec
js
lret
lcall
sub
pop
dec
dec
das
jns
add
or
push
push
in
popa
das
inc
xchg
jp
sbb
sbb
cmpsl
sbb
sbb
out
mov
test
stc
xchg
stos
push
jb
dec
xchg
xor
jp
gs
in
repz
mov
adc
mov
dec
out
or
aam
mov
loopne
sub
adc
push
popf
bound
hlt
dec
rorb
mov
jbe
sub
sbb
add
mov
arpl
push
mov
dec
xor
cltd
fwait
test
pop
cmp
jle
lcall
fs
ja
pop
jbe
je
jmp
add
fcompl
mov
gs
inc
push
jns
scas
roll
add
dec
ss
repz
sub
js
test
adc
cmpl
xchg
adc
popa
js
push
call
test
andb
jb
loopne
xchg
scas
mov
mov
sbbb
fwait
shlb
lods
xor
xchg
jo
cmpsb
push
push
lods
sub
xchg
stc
insl
jmp
mov
add
sbb
pop
lahf
pop
ffree
push
das
in
jmp
inc
sbb
inc
mov
test
sub
fsubr
xchg
dec
inc
ja
pop
dec
or
outsb
xlat
xchg
mov
hlt
jge
or
jno
adc
mov
ds
cwtl
pop
dec
enter
xchg
repz
pop
lods
fildll
stos
jbe
xchg
xchg
jnp
jp
sbb
or
pop
push
mov
and
les
jno,pt
mov
imul
jns
mov
lret
sbb
adcb
sti
pop
xchg
call
dec
push
jbe
test
lahf
jns
fs
push
andl
loop
jb
push
mov
sub
das
sbb
xchg
inc
daa
es
aaa
inc
cwtl
or
mov
and
mov
out
mov
and
xchg
adcl
add
pusha
out
mov
pushf
dec
fidivrl
cmpsl
gs
into
lcall
pop
add
loope
leave
in
jbe
jp
xchg
mov
aas
jp
pop
mov
sub
test
sbb
cld
idiv
sarl
xor
out
lods
stc
fwait
or
test
xchg
popl
bound
inc
push
push
sbb
in
add
js
mov
iret
addr16
mov
push
cmp
shrl
mov
lahf
test
jp
inc
xlat
test
fbstp
sbb
sti
inc
out
xchg
call
ret
out
xor
in
push
pop
push
sub
dec
outsl
cmpsl
and
or
test
movsb
jnp
push
int
push
mov
sbb
inc
push
stos
mov
mov
out
aas
xchg
dec
or
cli
add
mov
add
adc
xor
imulb
popa
fcomps
add
mov
pop
sub
pop
xchg
shlb
sub
outsb
sbb
cld
lret
xlat
stos
mov
test
fldcw
pop
andb
jg
inc
frstor
jecxz
xchg
dec
sub
bound
cli
mov
xchg
mov
sub
stos
test
scas
ds
cmp
mov
shlb
pushf
sub
push
repz
pop
jecxz
mov
inc
push
daa
and
das
inc
jns
loop
dec
jne
or
addr16
fwait
mov
xchg
lds
xchg
sub
pop
mov
aas
dec
mov
mov
and
movsb
ljmp
fcmovb
repnz
stc
jl
jl
cltd
push
cmp
enter
mov
fs
mov
inc
push
jle
xchg
or
popa
add
cmp
js
jae
inc
jle
out
outsl
lds
jne
pop
dec
dec
cltd
cmp
sbb
mov
rorl
lar
fwait
mov
cmp
aam
ss
pop
into
pop
js
push
ljmp
lret
js
ss
mov
xlat
adc
pop
js
push
rorl
push
mov
ret
mull
inc
mov
sub
fsubp
out
cli
gs
sbb
mov
jne
popa
jno
and
mov
dec
pop
loope
sub
std
jnp
arpl
std
stos
ficoms
sub
push
mov
mov
repnz
popa
cmp
sbb
dec
add
loop
movsl
jnp
pop
xchg
cmp
jecxz
mov
xchg
jmp
xchg
xor
movsl
mov
jle
pop
cltd
dec
jg
pop
aad
mov
inc
lret
ret
mov
mov
pusha
rorb
sub
sti
out
inc
xchg
sbb
addr16
arpl
or
add
ljmp
jg
loop
cwtl
adc
in
fwait
xchg
pusha
fcmovbe
adc
repnz
xor
and
mov
mov
rclb
outsl
ret
mov
imull
mov
mov
push
mov
push
outsb
sub
jmp
lds
adc
pop
ret
dec
aam
mov
call
add
xlat
movsb
pushf
ss
pop
xor
fidivrs
mov
adc
loop
dec
into
jmp
clc
sbb
mov
les
jns
daa
pop
sbbb
jb
nop
mov
pop
mov
xchg
adc
sub
lret
push
test
pop
stos
cmp
int
adc
stc
push
add
mov
xchg
es
not
inc
pushl
popf
scas
or
pushf
ja
ja
sbb
hlt
loopne
cld
sahf
data16
adc
push
push
dec
jecxz
pop
pop
dec
sbb
mov
scas
inc
xor
dec
cmp
int
inc
sub
cmp
loopne
pusha
inc
mov
test
iret
sub
aaa
add
in
mov
add
leave
or
sub
dec
daa
or
sahf
xor
popa
in
insb
mov
and
sbb
and
mov
decl
pop
ja
pop
mov
sbb
mov
dec
and
xor
mov
mov
pop
pusha
inc
jo
in
jbe
cwtl
test
mov
pop
cmpsb
sti
gs
loopne
sub
repz
cwtl
fdiv
mov
push
outsl
dec
or
xor
sub
sub
out
xor
jmp
jns
testl
push
rclb
pop
je
lret
push
xlat
xor
aaa
in
xor
and
in
ljmp
pusha
mov
rcll
repz
je
pop
cmpsb
push
mov
jbe
loope
repnz
or
adc
rorb
mov
movsb
xor
stc
mov
in
mov
divb
call
stc
sub
xor
push
sti
push
pop
mov
imulb
sbb
sarb
gs
jg
xor
jo
mov
dec
xor
dec
mov
dec
leavew
or
decl
fwait
dec
movl
dec
js
ljmp
mov
inc
enter
add
pusha
ja
cmp
cs
fstpt
cmpsl
loopne
or
adc
jecxz
mov
das
dec
mov
and
repnz
mov
jo
jge
mov
cmp
jge
lods
adc
repz
daa
mov
sub
or
dec
mov
sub
pop
sub
negb
sub
cmc
stc
mov
or
scas
xchg
and
or
mov
pop
jne
jg
sbb
jg
ret
ja
popa
pop
inc
xchg
enter
dec
mov
dec
pop
sbb
mov
shl
inc
mov
repz
cmp
mov
cld
xor
test
push
mov
out
pop
mov
and
ffreep
fsubrp
bound
insb
je
test
fwait
lods
shr
mov
ja
jl
jg
out
pop
and
jns
fsubl
xor
jnp
inc
and
mov
jo
push
jo
jle
push
jle
out
and
jmp
jp
adc
cmp
mov
test
xchg
jne
mov
std
inc
out
and
shlb
mov
fimull
mov
or
cmp
rcrb
repz
cmp
pushf
cmp
sub
mov
stos
out
xchg
adc
arpl
sub
adc
push
cmp
shll
mov
add
pop
test
jg
xor
cmc
sbb
or
out
xchg
lea
push
lret
dec
push
movsb
stc
gs
test
sub
pop
sbb
mov
xchg
iret
push
inc
sti
popa
jne
repnz
xor
fwait
add
imul
dec
daa
and
call
pop
mov
add
xchg
pop
sbb
daa
or
out
inc
mov
jnp
pop
adc
sarl
lods
loop
pop
hlt
mov
data16
or
mov
jns
loop
sbb
or
jae
push
mov
push
pop
mov
test
push
inc
nop
jo
cs
data16
dec
iret
add
and
out
adc
sub
jno
fisttps
sbb
outsl
fists
mov
rclb
andl
out
into
dec
mov
test
mov
mov
in
cmpsl
outsb
stos
sbb
mov
mov
pop
dec
ljmp
sub
mov
pusha
das
xchg
mov
xchg
inc
movsb
test
js
dec
and
cmp
or
pop
xchg
nop
icebp
and
mov
add
sub
nop
bound
add
dec
add
data16
xor
sub
cmp
neg
jl
out
and
push
adc
mov
push
cmpsl
mov
add
fists
in
je
loope
test
lcall
add
lea
dec
lock
mov
sbb
mov
push
jle
cmp
mov
mov
scas
mov
fbstp
xchg
mov
and
jae
adc
pop
jno
test
addl
and
cmp
insl
lods
add
jb
pusha
jbe
gs
jae
movsb
daa
int3
add
mov
jl
cli
cmp
scas
adcl
and
test
add
jnp
js
mov
jns
leave
inc
xlat
dec
test
int3
pop
jecxz
loop
mov
xor
inc
cmp
mov
iret
test
call
inc
push
loop
out
sarb
repz
push
aad
push
testb
fistpll
xor
inc
sub
cmp
dec
ret
out
dec
and
loope
shrb
movsb
mov
sti
jmp
icebp
lahf
dec
daa
or
mov
cmpsl
enter
mov
arpl
movsl
mov
push
data16
mov
js
mov
ficompl
out
out
aam
jae
mov
enter
mov
test
dec
rolb
test
pop
or
mov
inc
xor
popa
orl
fwait
xchg
jl
lcall
addr16
sbb
or
lret
out
ret
dec
sub
aaa
push
aaa
test
stos
loopne
movsb
cmp
dec
ja
mov
and
mov
int3
lret
mov
mov
mov
jns
or
or
mov
mov
dec
pop
cld
aad
out
aaa
mov
sub
data16
push
pop
pop
mov
xor
xchg
pop
rcrl
jo
add
repnz
loope
sarl
fwait
into
lods
push
add
or
lcall
pop
jge
add
dec
fcoms
or
inc
push
out
fisubl
mov
push
pop
cmp
push
pop
mov
xchg
mov
into
data16
push
in
cmp
or
xchg
jne
mov
scas
push
inc
js
sub
mov
aam
fdiv
push
clc
inc
xchg
pop
mov
ljmp
enter
call
push
pop
sub
cmp
js
push
ljmp
enter
call
push
pop
sub
cmp
js
push
ljmp
enter
call
push
pop
sub
cmp
js
push
out
mov
mov
call
rclb
rclb
xchg
jne
jno
popa
fists
inc
jb
fisttpll
inc
test
jg
outsb
loope
rorl
aas
mov
loope
xchg
jno
fists
inc
mov
adc
loope
rorl
pushl
jno
fists
inc
mov
adc
mov
aas
jecxz
lds
popa
andl
mull
xchg
adc
push
in
mov
xchg
jnp
push
dec
sbb
dec
mov
and
leave
scas
fisubs
jb
orb
shll
sub
cmpb
out
fsubs
fisubrl
jg
cmp
pop
aam
add
push
xchg
jp
jo
mov
iret
push
cwtl
xor
push
bnd
mov
loop
icebp
pushf
outsl
cmp
aas
xchg
mov
sbb
lret
mov
loopne
sub
shl
dec
nop
push
roll
hlt
adc
jge
pop
and
fimull
lock
dec
mov
xorl
push
iret
inc
mov
adc
loope
rorl
aas
mov
mov
mov
pop
cmpsb
pop
mov
je
jno
popf
or
fsubrl
fdivrs
in
xor
push
mov
jle
add
mov
lea
dec
lods
fiadds
jae
jp
lcall
xor
lahf
adc
loope
rorl
aas
mov
mov
pushl
popa
fists
inc
mov
adc
loope
rorl
aas
mov
mov
pushl
je
mov
lods
aaa
je
js
or
pop
and
mov
pusha
add
or
xchg
xchg
xlat
shlb
pop
popa
push
mov
out
push
add
mov
mov
pop
stos
mov
add
insl
mov
pusha
jae
fcmovnbe
lds
add
aad
and
lods
psrlw
mov
ret
shll
inc
pop
mov
je
scas
nop
arpl
mov
adcb
enter
or
mov
fnstenv
test
pop
pop
cmpsb
xchg
loop
add
aam
iret
xor
aam
push
jno
inc
mov
inc
or
cmp
add
mov
hlt
xor
ds
fmull
mov
xchg
jp
aas
fcomp
ficomps
aam
xchg
das
lahf
test
stc
xchg
fcoms
mov
push
mov
cmp
cmpsb
std
inc
sbb
fstps
jne
leave
addr16
es
jmp
popf
lret
inc
jae
lahf
sbb
xor
push
in
dec
push
out
jbe
mov
sahf
in
jo
xchg
cli
sti
cmp
scas
sub
test
fsubr
sbb
mov
jecxz
push
daa
stc
lods
in
mov
adc
cmp
jb
popa
fs
add
adc
jb
cwtl
cmp
cmovg
sbb
dec
loopne
sbb
sub
add
lea
add
lods
mov
pop
aaa
pop
sarb
add
sub
mov
aam
pop
inc
int3
pop
aad
cmp
mov
jge
mov
xor
xlat
push
mov
in
fistpl
mov
push
xchg
movsb
pcmpgtb
aad
aaa
cmpsl
inc
ja
pop
xor
popa
repz
insl
jne
push
dec
aas
sahf
inc
mov
in
loope
test
cmpsb
clc
sub
adc
push
mov
sub
inc
mov
aam
mov
popa
fwait
dec
xchg
push
mov
cld
cmp
stos
cli
lahf
jecxz
loop
stos
jl
ret
mov
push
jge
inc
pop
aad
inc
jbe
mov
cwtl
test
imul
imulb
enter
es
out
sbb
sti
adc
scas
aas
dec
inc
movsl
in
sbb
in
mov
sbb
bound
sub
mov
cmp
add
scas
cmpsb
pushf
push
out
enter
inc
in
sbb
loopne
adc
stos
jbe
mov
xchg
adcb
int3
jg
xchg
leave
mov
cmpl
adc
or
popf
aas
push
fisttpll
inc
test
dec
xor
and
lods
lods
push
inc
bnd
and
mov
xchg
fucomi
loope
mov
pop
sti
dec
rcrl
or
cmpsb
cmpsb
mov
xlat
push
push
aas
adc
jne
push
inc
loop
idivb
jp
mov
pusha
or
xor
jmp
outsl
cmp
mov
insl
sbbb
adc
int3
aas
mov
popf
push
jge
rorl
cld
mov
and
mov
mov
imul
movsb
sub
xchg
movsl
jp
loope
or
mov
inc
sub
scas
sarl
mov
or
jmp
and
mov
into
add
or
push
ss
leave
mov
cld
cmp
mov
mov
insb
mov
or
mov
jle
mul
dec
pusha
and
push
clc
int
fistpl
cmp
sub
mov
repnz
movb
push
sub
mov
fisubs
in
leave
mov
jb
enter
in
stc
adc
arpl
jg
mov
fcmovnb
inc
ds
mov
cmp
outsl
mov
pusha
mov
inc
push
jae
xchg
jle
sub
adc
pop
jecxz
and
jb
js,pn
mov
mov
and
cmc
fsubp
sub
push
adc
test
xchg
pop
sahf
xchg
xchg
repz
push
aas
mov
xor
jo
pop
test
push
or
lea
cmpsl
icebp
push
inc
sbb
clc
jbe
int3
inc
call
and
andb
jns
loope
arpl
sub
inc
insl
cmp
mov
sbb
cmp
mov
push
mov
jae
or
cwtl
mov
adc
aam
popa
jae
mov
popa
sbb
pop
out
pop
movsl
dec
sti
shll
test
mov
cmc
popf
out
and
and
adc
aas
das
outsl
cld
mov
pop
lahf
cmp
and
stos
xchg
xchg
jno
adc
rclb
xor
fcoml
sub
fsubl
insb
in
imulb
scas
in
adc
cmp
push
or
jae
push
adc
jmp
sbb
and
push
mov
sahf
scas
pop
xchg
popa
cmp
stos
hlt
and
outsl
int3
push
sub
push
int3
adc
or
push
popl
xor
jne
dec
rclb
push
cs
dec
addr16
shrb
push
xor
cmp
cltd
cld
popf
jmp
xchg
movsb
inc
mov
xchg
cli
jb
pop
mov
cld
icebp
aam
xor
stc
loope
pushf
movsl
inc
pop
stos
test
push
repz
mov
test
push
cmc
call
pop
ret
movsl
cmpsb
xchg
or
fs
in
and
pushf
lcall
and
dec
jo
stos
test
call
addl
in
mov
insb
ja
mov
push
and
cmpsl
push
inc
sbb
loope
int3
addr16
scas
sti
call
jmp
sbb
test
ljmp
cwtl
enter
sub
inc
dec
add
lahf
insl
push
push
xchg
push
stc
pop
andb
cmp
stos
movsb
sbb
push
enter
loop
cltd
je
fsts
rcl
aaa
in
std
pop
cmp
jne
jge
mov
enter
jg
xchg
pop
inc
adc
fsubrs
mov
jmp
in
adc
mov
mov
jbe
dec
stos
aaa
push
add
pop
lret
or
mov
dec
loop
mov
fsts
imul
cs
in
sub
ficomps
push
cmp
test
jns
dec
push
popf
jmp
pop
or
adc
fcompl
ret
fstps
repnz
push
test
add
dec
outsl
lds
jnp
adc
inc
pop
or
sbb
add
mov
xchg
popf
stos
lret
into
out
pop
or
pop
mov
sbb
test
adc
out
and
in
pop
repnz
mov
dec
fimull
adc
in
mov
shll
dec
sbb
mov
iret
clc
leave
pop
sti
pushf
adc
pushf
neg
stos
mov
mov
mov
ds
fimull
nop
addr16
pushf
xchg
in
popa
dec
fnsave
ja
mov
stc
jg
in
enter
fcompl
cmp
or
scas
das
pop
sub
fidivl
or
bound
fiaddl
popa
in
loopne
testl
fwait
mov
repz
push
adc
pop
sbb
aad
add
sub
arpl
and
call
mov
cmp
pop
mov
xchg
es
sti
ja
mov
or
adc
mov
mov
testb
and
push
inc
insb
sbb
fwait
pop
loope
jbe
sub
mov
mov
xor
hlt
fisttpl
add
or
mov
jae
aas
loope
jae
sub
mov
or
fistpl
push
cli
pop
fidivrs
push
add
inc
std
ret
stc
pusha
lods
outsb
mov
push
xor
sub
xchg
rcr
movsb
and
push
pusha
lds
pop
mov
cmp
es
lcall
fstp
mov
jb
sub
pop
enter
or
pop
das
dec
xchg
jnp
insl
std
in
sti
push
add
dec
xchg
lret
imul
outsl
aam
mov
das
or
mov
pop
fisttps
ficoms
iret
orl
loope
lods
enter
inc
adc
inc
addr16
call
xor
je
je
pop
fst
xchg
sub
adc
dec
inc
ds
test
xor
imul
ja
add
and
pop
icebp
inc
and
ret
push
fsubl
fstpl
les
or
rclb
fnstenv
xor
jecxz
repnz
jns
in
push
jle
mulb
nop
pop
sbb
pop
mov
inc
push
ljmp
popa
lds
arpl
sahf
imul
mov
in
pop
addb
lret
insl
mov
inc
mov
push
stos
and
pop
fbstp
clc
push
pushf
lods
and
call
ljmp
or
inc
push
js
inc
push
scas
rorl
lea
pusha
dec
jge
fcomps
mov
jecxz
cmpsb
xor
sub
and
mov
lods
jl
clc
inc
push
stos
sbb
mov
lret
jmp
xchg
mov
sub
lcall
xor
push
jnp
clc
or
mov
repnz
inc
out
out
add
test
pop
sti
jle
jb
scas
lret
jbe
pop
lea
push
insb
jmp
pushf
jnp
in
xor
inc
inc
xchg
mov
clc
ret
das
pop
cmp
mov
scas
iret
test
add
dec
mov
add
sub
lods
fs
and
mov
lret
cltd
xchg
mov
imul
fnstenv
in
add
pop
scas
mov
incl
lahf
jno
mov
mov
movsl
icebp
fimuls
loop
inc
js
arpl
call
push
mov
clc
fs
cltd
xchg
sahf
pop
lds
popa
inc
imul
es
subl
js
enter
mov
iret
push
or
lahf
dec
xor
add
pop
test
std
and
mov
jle
inc
and
xlat
int
sub
or
mov
mov
pushf
lea
or
jle
pop
fldl
jb
stc
push
inc
cli
lahf
scas
jmp
int
sbb
inc
cwtl
mov
cmc
enter
push
push
int3
adc
fbstp
push
mov
xchg
popa
xchg
fstl
cmp
xchg
daa
push
aas
jl
pop
adcl
mov
add
pop
and
and
ljmp
ficomps
popf
outsb
sahf
xor
add
sbb
incb
repz
or
es
bound
nop
dec
add
and
aaa
xor
mov
mov
ret
stos
popf
pop
cli
xor
mov
xor
pushf
inc
sub
in
rolb
cltd
mov
sbb
mov
mov
mov
dec
repnz
cltd
ss
in
out
pop
gs
jne
stos
out
outsl
jno
add
add
jmp
sub
aas
shr
lds
sub
xchg
inc
dec
stos
and
leave
sub
pop
stos
inc
sbb
leave
adc
adc
lods
dec
add
call
cmp
jg
pop
fcoml
xor
mov
dec
xor
inc
add
mov
cli
imul
bnd
jbe,pn
movsl
push
push
lock
movsl
pop
data16
add
mov
repnz
jmp
imul
repnz
xor
std
mov
sub
adc
xor
sbb
rorb
in
jnp
jge
mov
mov
adc
push
jp
push
inc
pop
mov
pop
pop
loopne,pt
loop
mov
push
popa
rorb
jae
and
addl
cmc
stos
fs
push
push
mov
inc
push
std
iret
mov
std
mov
test
ljmp
out
sbb
fs
mov
mov
shl
mov
nop
es
cwtl
push
lods
in
xor
inc
xchg
fmull
push
and
mov
and
test
xlat
cmp
jp
push
xorb
cmp
stc
mov
pop
jmp
pop
and
fwait
cmp
inc
sbb
lods
xchg
mov
mov
pop
jge
inc
and
dec
cmpsb
mov
ret
movsl
movsb
aaa
cmp
vmovdqu
xchg
push
xchg
je
mov
cwtl
xchg
je
dec
jno
xor
fcomip
pop
mov
push
mov
mov
jo
sub
lock
push
xor
lcall
iret
cmp
jb
test
jg
or
movl
imul
clc
jae
lahf
xchg
xlat
sub
icebp
cli
or
insb
insb
ljmp
inc
xchg
ret
into
push
roll
insl
push
cmp
sbb
lcall
pop
sub
sbb
mov
mov
jne
mov
mov
daa
enter
aas
inc
adc
push
popf
movsb
cmp
jns
pop
push
dec
cmpsb
mov
das
pop
fidivl
adc
mov
and
mov
inc
xchg
adc
jbe
sbb
ds
cltd
testb
xor
scas
mov
lods
aad
dec
daa
stc
add
rclb
and
fstl
bound
jno
push
call
sbb
pop
outsb
xchg
das
fisttps
pop
mov
punpckhdq
inc
mov
jbe
clc
fisubl
rcr
mov
enter
js
mov
xor
pop
daa
dec
add
dec
push
cmp
add
sub
xchg
nop
test
sti
mov
mov
out
shlb
out
sbb
xchg
in
into
mov
cmpsl
mov
out
dec
adc
xchg
jle
into
in
stc
scas
xchg
insb
sub
incb
fisubrs
lock
repz
mov
rcr
fs
pop
jp
ljmp
push
jae
xlat
fistl
inc
daa
popa
rcr
mov
lahf
ljmp
test
out
adc
call
add
popa
incb
or
loopne
push
shrb
mov
iret
shlb
and
addr16
in
inc
mov
cmp
sub
push
pusha
inc
fbstp
popf
push
dec
add
pushf
push
or
or
mov
lret
jp
inc
pop
jns
cmp
lods
test
xchg
xchg
fdivp
push
cld
lock
dec
fnop
test
add
xor
fwait
push
out
into
mov
and
push
testl
mov
push
fs
mov
mov
fbld
lret
pop
je
push
or
adc
cmc
in
inc
and
pop
call
push
fldenv
scas
loopne
arpl
daa
shlb
push
sub
je
imull
and
cmp
fists
mov
fldl
sub
popa
mov
cmp
inc
fwait
push
fwait
pop
xor
fidivl
ss
adc
imulb
imul
rorb
fcoml
je
mov
loopne
imul
dec
cld
or
pop
sub
movsl
stos
or
clc
sti
loope
mov
cltd
mov
push
bnd
sbb
dec
mov
inc
pushf
push
jae
ja
jg
jb
popf
mov
sbb
cmp
push
adc
pop
repz
imul
ficoms
ja
mov
pop
inc
xchg
and
mov
mov
adc
test
std
lock
fdivrp
ss
std
dec
adc
sbb
lcall
insl
mov
ds
inc
mov
lock
adc
ror
test
sub
test
ss
daa
and
roll
ds
cwtl
cwtl
aaa
or
insl
cli
jg
xor
inc
xchg
sbb
fisubrl
dec
cmp
arpl
fadds
xchg
xchg
or
dec
fimuls
filds
cwtl
clc
call
out
div
popa
aam
out
popf
mov
sub
sbb
xchg
loopne
push
lcall
mov
andb
adc
dec
fld
aad
fwait
sub
je
xorl
cmp
cwtl
or
adc
lods
test
sub
pop
pop
or
push
adc
lret
outsb
jmp
repnz
fsubrl
mov
dec
sub
inc
adc
push
mov
sub
ret
aas
xor
dec
inc
ficomps
cmp
jle
lea
mov
cmp
sub
add
aas
repz
mov
pop
subb
xchg
jb
rcl
movsl
and
sub
add
lods
adc
mov
shr
dec
pop
mov
lods
jnp
xlat
repz
pop
cmp
mov
adc
insl
mov
dec
aam
mov
mov
add
out
test
dec
stos
mov
idivb
inc
popf
dec
mov
imul
or
popf
adc
sti
xor
jp
jg
test
adc
sbb
cmp
bnd
xchg
pop
dec
push
jmp
sub
mov
jne
sub
clc
addb
adc
add
adc
and
movsl
sar
clc
iret
out
cmpsb
test
fimull
jle
push
jbe
punpcklbw
sbb
cwtl
push
mov
jbe
xor
ja
add
mov
in
pop
pop
or
sti
push
ret
or
or
clc
xor
pop
push
stos
and
movsb
xchg
icebp
and
aaa
hlt
stc
hlt
mov
sub
cmp
jecxz
cmpsl
outsb
std
mov
and
ds
dec
push
dec
inc
sub
mov
xchg
fsubs
pop
inc
push
mov
jnp
je
rcl
les
mov
fisubl
mov
daa
mov
mov
dec
out
ljmp
pop
lcall
dec
inc
mov
and
idivb
add
pop
insl
inc
or
out
mov
pop
jmp
in
cmp
loopne
sub
imul
cmp
push
add
mov
rorb
cmc
jbe
xlat
cmp
js
lret
mov
in
outsb
test
loope
mov
pop
adc
addl
in
test
ja
movsb
lcall
inc
inc
sbb
push
xchg
clc
add
xchg
jno
aaa
es
mov
pop
cmpsb
dec
cmp
jb
hlt
loopne
xchg
dec
inc
cmc
sub
xchg
clc
aaa
add
test
fsts
test
add
cmpsb
movsl
mov
add
sarb
outsl
xchg
sub
stc
pusha
fidivl
mov
inc
jbe
mov
xor
outsl
mov
pop
push
insl
and
insb
inc
inc
js
bound
pop
dec
inc
lods
pop
sub
pop
xorl
movsb
mov
aaa
mov
pop
ss
cli
lods
cmp
shlb
mov
popa
dec
push
dec
andb
dec
or
mov
rol
or
ja
xchg
sub
arpl
sahf
add
scas
scas
jg
pop
add
xchg
jp
ficoml
sbb
xor
rep
push
xor
sub
jl
mov
mov
lahf
pusha
xor
jbe
shll
icebp
popf
inc
or
inc
sub
js
inc
addr16
ja
push
cs
loopne
cmc
push
es
jge
aaa
cmp
or
test
in
cmp
js
dec
arpl
idiv
pop
inc
cltd
and
add
int
xlat
test
iret
xor
adc
xchg
lds
loope
mov
shr
xchg
shl
test
es
cmpsl
lds
loope
mov
and
mov
push
xor
mov
pop
cmp
adc
ja
sbb
push
mov
jmp
sbb
test
or
push
mov
xchg
popa
push
mov
pop
outsb
je
jo
inc
xor
push
aam
sub
jbe
ret
xchg
fildl
adc
push
ret
mov
dec
mov
mov
jle
xchg
push
es
mov
insl
jp
shl
outsb
mov
and
mov
inc
dec
mov
inc
mov
jb
test
or
dec
mov
jmp
daa
pop
adc
or
femms
xor
cmp
sub
push
ljmp
cmp
push
repz
sbb
mov
push
fimuls
mov
mov
movsl
xchg
push
or
sahf
mov
mov
cmpsb
sarl
inc
js
and
repnz
test
fidivs
mov
xchg
sbb
popa
xchg
add
mov
loope
adc
push
mov
xor
fwait
mov
inc
insb
lds
dec
addr16
mov
fs
adc
imul
push
pop
out
fildll
stos
xor
xor
xor
xchg
and
je
test
xor
addr16
or
sahf
adc
int3
sbb
lock
inc
inc
sub
xor
xor
popf
mov
pop
aas
jo
iret
iret
lods
or
adc
and
sub
push
push
and
sbb
inc
bound
xor
sub
mov
in
addr16
cwtl
test
gs
sub
xor
decl
dec
push
and
and
mov
xor
ja
outsl
ja
mov
or
jo
xchg
add
insb
test
mov
inc
and
dec
iret
push
mov
sub
xor
dec
inc
popa
ficoms
inc
mov
adc
loope
rorl
aas
mov
mov
pushl
popa
fists
inc
mov
adc
loope
rorl
aas
mov
mov
pushl
popa
pop
push
iret
inc
aas
xor
add
outsl
loopne
rorl
aas
mov
mov
pushl
popa
fists
inc
mov
xchg
jg
outsl
dec
cmc
rorl
dec
cmp
outsl
outsb
jg
into
inc
sub
pusha
mov
int
mov
xor
adc
and
xor
inc
adcb
mov
xchg
push
mov
add
adc
and
xor
adc
inc
xorb
arpl
jae
pop
inc
adc
pusha
jne
roll
fwait
adc
and
xor
push
push
lock
ud0
add
out
les
dec
xchg
repz
lock
pop
adc
sub
mov
sbb
test
jb
push
rcrb
subl
es
xchg
out
das
fsub
fdivrs
cmc
ret
lock
loope
sbb
sbb
lea
faddl
in
das
fsubl
int
mov
pop
sub
push
jmp
fisubrs
adc
scas
icebp
iret
push
sbb
xor
int3
mov
jbe
mov
pop
in
cmp
push
add
ret
cmp
xchg
pop
xor
mov
push
insb
xor
cmp
pop
push
push
mov
sub
sti
mov
shlb
lock
xchg
push
push
es
mov
inc
xchg
push
mov
add
xor
rolb
and
pop
fyl2x
das
in
out
fstpl
lods
insb
cmpsb
adc
outsb
xchg
pusha
bound
push
mov
loope
jecxz
mov
sbb
pusha
js
stos
dec
mov
push
xorb
mov
pop
lahf
xor
ss
push
lds
loopne
or
adc
jecxz
repz
rclb
and
xor
inc
adcb
mov
xchg
push
mov
add
adc
and
xor
rclb
and
xor
inc
adcb
mov
push
sbb
shr
aaa
int3
mov
testb
mov
in
xor
or
rcrb
adc
add
insb
pusha
or
in
pop
jl
rcrb
sbb
or
adc
pop
and
xchg
mov
sub
xor
mov
flds
int
push
subb
xchg
sbb
mov
pop
push
daa
lock
je
push
mov
mov
jbe
test
xlat
jno
xchg
add
sbb
arpl
fstpt
pop
adc
bnd
mov
imul
sbb
jns
sub
stos
sub
cwtl
mov
call
or
andb
ljmp
loope
xor
mov
je
out
ror
scas
or
and
outsb
push
sub
and
jno
dec
xor
dec
pop
pop
fucomp
adc
nop
xor
mov
mov
lahf
data16
scas
stos
rclb
outsl
add
xchg
lret
sbb
cli
lods
sahf
ret
sbb
mov
inc
push
xor
mov
sti
mov
popa
dec
mov
sbb
push
jbe
in
fndisi(8087
sbb
xor
ret
push
inc
mov
dec
jae
clc
rcrb
inc
out
pop
push
aaa
inc
sbb
cwtl
push
into
jbe
repz
mov
push
xchg
imul
inc
les
test
das
mov
rcrl
std
ret
add
pushf
outsl
inc
xchg
xor
fcmovbe
mov
pop
inc
pop
push
sbb
jg
data16
push
ds
xchg
push
movsb
stc
or
cmpsb
lea
call
loopne
lods
push
or
and
push
lods
xchg
mov
push
jnp
dec
and
inc
lcall
jp
ret
mov
sub
aas
aas
pop
ljmp
add
mov
ret
imul
mov
pop
movsl
jno
in
push
push
int
cmp
popl
dec
jne
jb
out
xchg
pop
xor
in
sub
inc
std
arpl
or
jb
fldl
cs
mov
dec
jbe
jg
data16
xor
jne,pn
mov
imulb
lahf
jne
pusha
adc
arpl
dec
jl
stc
test
add
dec
mov
inc
lea
enter
push
data16
add
sbb
cmp
and
sbb
hlt
or
dec
jb
mov
adc
xor
mov
test
xor
cmpsb
xor
mov
pusha
pop
mov
lock
test
dec
popf
push
cs
jmp
arpl
push
addr16
add
lret
mov
jmp
jp
out
sub
ljmp
mov
aam
cmpl
lods
shrl
lods
or
jb
insb
pop
mov
cwtl
mov
in
movsb
aas
in
ficompl
lock
cld
xchg
xorl
clc
inc
ret
clc
mov
sti
push
cld
xchg
lahf
std
sar
sahf
dec
loope
movsl
push
mov
loop
out
ret
mov
and
mov
bound
mov
test
sarl
leave
mov
pop
je
inc
mov
mov
mov
pop
scas
jb
out
sahf
push
pop
pop
pop
pop
push
adc
ds
test
aas
lds
in
hlt
scas
daa
jp
hlt
gs
test
scas
clc
sbb
faddl
or
clc
and
scas
ljmp
push
push
popf
outsb
stos
push
lds
xlat
leave
icebp
out
insl
push
add
clc
or
les
push
fadds
scas
adc
sbb
je
test
xlat
adc
fldl
mov
cmpsl
cltd
xor
sahf
dec
test
mov
pushf
jns
call
lds
popf
sub
and
lret
mov
aad
fwait
mov
test
loop
cmp
xchg
adc
mov
add
inc
aaa
lahf
shll
dec
shrb
aaa
insb
jne
push
mov
xchg
cli
sahf
sbb
fcoms
cmpb
jmp
das
mov
inc
aas
xor
inc
movsb
lds
movsb
les
sti
mov
push
dec
shrl
repz
inc
dec
aam
in
cmc
mov
cmp
test
adc
push
push
pop
fdivs
lods
movsb
lock
cmc
std
aad
mov
cmp
mov
cmp
decl
leave
mov
pushl
dec
jns
mov
push
push
cltd
xlat
adc
cmp
push
mov
ret
adc
and
mov
xor
sbb
push
mov
idiv
adc
rorb
push
cmp
adc
daa
dec
push
xchg
mov
push
subb
mov
mov
and
xlat
pop
mov
mov
pop
lahf
incb
cmp
or
test
jnp
int3
or
sahf
adc
or
push
jecxz
xor
dec
mov
fs
pop
stos
jecxz
ret
lea
ret
movsb
imul
sbb
divl
or
and
popa
gs
or
stc
adcl
push
loopne
dec
testl
xchg
or
sarl
idivb
das
in
jp
xorb
cmp
push
cmpsb
insb
mov
hlt
push
fdivr
push
xchg
sarl
ret
sbb
adc
addb
int3
adc
ds
jno
cmp
xor
std
dec
push
xchg
adc
and
xchg
pushf
fwait
xchg
int
out
sbb
push
data16
jg
stc
loope
adc
pop
test
in
test
jnp
stos
sbbb
inc
outsl
loopne
sub
mov
mov
add
sub
arpl
fucomip
jge
cmp
jbe
mov
test
cmp
inc
push
mov
into
lock
ss
popf
mov
ds
pop
lret
adc
cmpsb
add
in
mov
pushf
popa
sbb
jl
stos
addr16
xchg
pop
xchg
or
addb
inc
movsb
cmp
cltd
mov
xchg
xchg
add
pusha
je
or
and
iret
call
mov
out
nop
jecxz,pt
pop
xchg
cmpsb
pop
inc
pop
cmp
jp
andl
out
cmc
lret
mov
lods
ja
hlt
aad
iret
cmp
dec
shl
sbb
pop
or
dec
lea
divb
test
or
sbb
in
hlt
mov
mov
and
adc
lods
enter
add
dec
lods
hlt
ja
lret
and
popa
lds
in
and
jl
inc
call
sub
rclb
mov
mov
scas
adc
push
xchg
loop
xchg
and
add
std
lahf
push
fisttpll
cmp
inc
outsl
sbb
cli
jo
rcrl
mov
cmc
test
fnstcw
aad
jns
outsb
insb
mov
ret
fstpl
aas
mov
cld
mov
inc
sahf
mov
jge
or
mov
push
jnp
imul
stc
les
call
mov
mov
sbb
icebp
and
imul
sbb
or
mov
jae
lea
mov
or
int3
lock
xchg
sbb
sbb
push
xchg
and
std
adcb
mov
pop
dec
jnp
lock
nop
cltd
cs
jmp
mov
pop
mov
sbbl
sbb
dec
and
mov
in
xchg
mov
xlat
test
negl
roll
cmp
mov
mov
or
dec
jg
shr
push
inc
sbbl
inc
xor
lret
jecxz
mov
adc
cmp
test
dec
xor
mov
les
add
repz
adc
lret
mull
jo
adc
incl
mov
mov
ds
pop
push
or
adc
fists
icebp
inc
arpl
xor
jne
ret
lcall
pusha
sub
jbe
pop
clc
out
xchg
push
xlat
add
ljmp
and
cli
pushf
xchg
xchg
pushf
xchg
scas
stos
mov
adc
sbb
mov
movsl
jge
sbb
out
adc
nop
pop
negl
fistl
shlb
outsb
inc
fldcw
dec
lds
test
add
aas
inc
mov
fstps
push
cs
push
mulb
sbb
adc
faddl
adc
fsubl
fldl
sbb
mov
clc
stos
bswap
mov
inc
nop
push
aaa
pop
add
mov
cmpsl
cmc
jge
out
mov
xchg
xchg
dec
stc
out
test
out
mov
pop
adc
xchg
jge
ret
addl
sbb
std
pop
or
sub
jb
add
pop
arpl
mov
fs
xorl
mov
xorb
add
insb
inc
sub
push
sarb
andl
movsl
mov
imul
sub
repnz
nop
sbb
mov
push
imul
and
or
sarb
mov
push
push
lcall
xchg
adc
in
ds
xlat
ss
pushf
daa
pop
xchg
sub
and
es
inc
mov
push
and
or
int
out
jne
push
dec
push
mov
clc
lret
xchg
cli
add
fs
jno
xrelease
movsb
les
mov
mov
adc
mov
mov
cmovno
mov
add
inc
xchg
add
arpl
nop
mov
icebp
dec
dec
add
sub
out
outsl
shl
inc
push
fsubp
dec
mov
testl
loop
lods
mov
pop
xchg
pop
fisubl
dec
fisubl
cmc
jg
or
inc
int
dec
inc
sti
shrb
mov
pop
clc
jne
mov
insb
add
add
pop
int
mov
push
pop
push
xlat
sbb
xlat
xor
and
movsl
mov
dec
sti
mov
iret
push
jge
sub
pop
sahf
or
push
xchg
rclb
int
fnstsw
rolb
repnz
mov
mov
scas
mov
xchg
jb
sarb
xorb
xor
or
and
in
in
out
aas
sbb
shr
sbb
je
mov
push
ss
popf
jmp
xor
ds
mov
test
xchg
adc
out
aam
sbb
das
and
push
stos
sarl
push
pop
xor
sti
lea
icebp
es
loope
leave
jno
pop
das
or
jmp
sar
push
scas
stos
mov
lret
ds
iret
sbb
cmp
xchg
shl
mov
dec
fidivs
divb
xor
mov
jl
clc
dec
mov
mov
jg
dec
lcall
popf
loopne
cmpsb
mov
out
movsb
mov
or
sub
data16
hlt
sbb
aas
adc
adc
xor
popa
push
std
insb
imul
push
stc
lcall
adc
fistl
push
and
fistps
addr16
sbb
imul
pop
pop
adc
outsl
dec
mov
cmp
scas
xchg
or
dec
cld
cmpsl
sbb
mov
or
sbb
test
loop
dec
xor
pusha
jmp
shlb
pop
or
ljmp
movl
xchg
pop
pushf
scas
dec
mov
enter
mov
shrb
sub
dec
push
es
dec
jns
jb
int
xor
or
jae
and
dec
bound
shll
push
fs
mov
add
out
sti
das
mov
pop
dec
pop
lea
jmp
push
pop
cli
mov
pop
jae
xchg
lods
adc
mov
ror
test
in
jnp
popa
add
jl
rcrb
cmpl
sbb
xchg
push
aas
cmpl
into
out
dec
cwtl
hlt
lock
sbb
aam
dec
movsl
sbb
nop
sbb
mov
and
dec
pop
bound
jl
les
pop
out
sahf
mov
push
sbb
insl
lods
insl
fiadds
rclb
imul
out
pushf
push
push
iret
shl
insb
push
and
add
mov
jae
hlt
mov
or
int3
int3
rcrb
iret
jno
jno
and
inc
decl
std
out
fldl
sub
cmp
sbb
mov
push
jo
cmp
mov
inc
mov
mov
repnz
fldt
push
punpckhbw
imul
daa
sub
xor
loope
movsb
dec
or
sahf
jl
cltd
jae
leave
dec
cwtl
jmp
mov
movsb
cmp
cmp
pop
lcall
inc
fs
sbb
insb
lods
ja
loope
push
aad
add
out
or
or
xlat
dec
jo
popf
xor
enter
iret
fisttpl
into
push
ficomps
xor
adc
cmp
jns
fisubs
leave
push
ficoml
clc
mov
or
dec
adc
pop
adc
loopne
fs
and
scas
repnz
cmp
in
ss
dec
pushf
addr16
jae
stos
iret
pusha
test
dec
dec
jo
lods
cmpl
sub
arpl
cmc
arpl
fbstp
fwait
imul
cmpsb
dec
mov
std
add
mov
gs
lock
push
ss
pop
xchg
pop
imul
xchg
inc
cmp
adc
test
jg
out
jb
mov
xchg
test
mov
pusha
shll
sub
repnz
pop
pop
fisubl
sub
cmp
and
mov
push
inc
push
cmp
das
arpl
cltd
jo
ret
sarl
jl
dec
mov
xchg
insb
testb
inc
mov
int3
loop
adc
pop
test
loope,pt
fstpl
sbb
iret
xchg
sbb
pop
out
sti
jmp
andb
pusha
clc
jg
cmpsl
cld
push
xorl
mov
in
mov
mov
adc
lret
push
jle
sub
push
addr16
fisttps
inc
mov
and
adc
test
and
mov
jecxz
xchg
in
xlat
pop
cmp
pop
sti
fisttpll
mov
cmp
lret
outsl
mov
mov
jp,pn
dec
xchg
jae
push
daa
sub
aaa
xchg
andl
ljmp
jb
push
cmp
xchg
sub
and
inc
addr16
sub
pop
cwtl
xor
aaa
pop
fbstp
je
sbb
pop
pop
add
and
sub
popa
xchg
daa
sub
jmp
cwtl
dec
mov
mov
aaa
cli
and
push
call
sti
sub
dec
in
push
arpl
icebp
shr
repz
in
sub
ret
and
addr16
call
and
inc
jno
addr16
rolb
cmp
push
push
ret
mov
test
mov
dec
pop
xor
cmp
or
dec
and
push
or
daa
and
aam
adc
fs
push
in
push
adc
push
aad
xchg
push
loope
add
mov
jae
and
lock
test
sbb
filds
cmpsb
dec
lret
rcrl
int3
and
lahf
ficomps
fisttpl
ret
and
scas
push
jp
cmp
mov
mov
xchg
and
lea
loop
or
lret
or
fs
ds
lret
test
mov
mov
cwtl
mov
mov
and
pop
sbbb
stos
ret
inc
cmpsl
mov
lret
pushf
roll
ror
cmp
movsl
lea
or
call
push
push
push
orl
out
je
push
dec
icebp
sbb
xor
inc
push
mov
fisttpl
movsb
xchg
out
fadd
idiv
add
xchg
sub
clc
cmp
pop
movsb
push
hlt
mov
in
bound
jb
jge
and
add
push
or
jb
dec
mov
enter
stos
cmp
fisttpl
movsb
dec
sbb
sbb
xchg
fmuls
adc
pop
push
xchg
sub
push
dec
loope
pop
pop
fisubrs
xor
cltd
out
or
dec
sbb
mov
shl
add
jb
add
cmp
imul
add
push
add
mov
jmp
pop
push
call
mov
mov
ret
stc
mov
in
jmp
gs
clc
sbb
mov
cltd
movsl
mov
mov
push
cltd
adc
jns
stc
test
inc
data16
cld
mov
loop
jge
jne
xchg
jge
dec
hlt
repz
sub
adc
and
mov
pop
inc
shll
into
adc
xor
pushf
movsl
push
jl
pushf
iret
push
out
mov
jl
mov
iret
jg
rcl
xor
sbb
popa
or
pop
dec
das
inc
mov
insb
or
aaa
ss
mov
push
mov
leave
pop
test
test
push
in
sti
call
lods
lods
aaa
mov
shl
xor
mov
insl
cmp
and
into
stc
inc
mov
lds
repnz
cmpb
fbld
icebp
dec
dec
ret
mov
xchg
add
or
xchg
lods
and
inc
sbb
jecxz
sarb
sahf
or
add
push
xlat
mul
pushl
insb
or
fcompl
adcl
mov
sbb
aad
adc
jle
push
mov
imull
repz
enter
lcall
mov
jge
dec
cltd
scas
outsl
jmp
sti
lods
lahf
fs
aam
popf
xchg
jb
cmp
das
mov
setno
test
push
inc
or
cli
stos
movl
hlt
stos
int
mov
js
scas
push
sbb
sbb
push
jge
push
cmpsb
std
popf
mov
pushf
in
lret
outsb
pop
roll
cld
jo
outsb
sub
xor
in
pop
jno
incb
out
push
add
jmp
fdiv
inc
int
xlat
cmp
inc
shl
xor
inc
mov
sahf
lcall
adc
pushf
xchg
or
xor
xor
inc
xor
adc
dec
and
xchg
aas
jl
jbe
lret
call
stc
orb
adc
push
sarb
mov
cwtl
std
jae
jg
jo
sbb
outsb
pmaxsw
jg
add
std
pop
adc
dec
or
cmp
adc
shl
push
pop
bound
jge
shrl
dec
xchg
cmpsl
jmp
sbb
mov
in
rclb
adc
xor
mov
aam
push
jg
movaps
in
push
mov
rcrl
cli
mov
push
push
mov
push
pop
jp
mov
sbb
inc
js
std
lds
pop
mov
std
sbb
jo
dec
out
push
incl
jmp
js
pop
aas
xchg
loopne
out
mul
and
decb
dec
jo
in
mov
mov
je
jo
stos
js
sub
xchg
loope
sub
outsl
lret
xchg
imul
insb
pop
and
sub
cmp
xlat
data16
xchg
jge
and
jp
lods
aam
cmp
ljmp
xchg
adc
sbb
cmpb
cmc
lret
pushf
push
loop
fistl
arpl
jbe
jb
sti
sbb
cmpsl
stc
push
mov
loope
pop
inc
xchg
sbb
js
cmc
and
push
cmp
in
push
pusha
jnp
cltd
out
pop
hlt
push
test
dec
and
mov
mov
and
inc
out
xchg
lds
cmc
lret
pop
cmp
aad
xchg
inc
movsl
out
mov
les
dec
mov
in
daa
lock
lret
jo
sub
cmp
not
repz
xchg
lds
ja
pop
fidivrl
dec
aaa
mov
push
movsb
adc
test
lods
int3
scas
mov
loope
jmp
mov
addr16
aam
mov
jnp
call
dec
cs
bound
shlb
in
dec
mov
push
in
jo
ds
push
pop
pop
xlat
push
xor
fists
xor
mov
mov
js
xchg
jbe
stc
xchg
aaa
outsl
fs
call
mov
adc
sahf
test
or
cs
xchg
push
insb
mov
mov
cld
inc
cmp
das
jge
sbb
pop
mov
std
push
jge
or
or
dec
das
push
fnstenv
xchg
sbb
mov
into
adcb
test
sub
jmp
push
jl
push
xchg
push
adc
loope
xorl
pop
adc
hlt
call
mov
mov
mov
dec
cld
xor
dec
aam
test
push
push
loopne
loope
mov
das
les
mov
cli
clc
jne
pop
loop
sbb
mov
pop
mov
lcall
pop
imul
push
or
sbb
out
imul
leave
sbb
xchg
popa
xor
and
aam
std
fs
sbb
inc
mov
pop
sbb
sub
fwait
cs
aam
mov
mov
in
bound
sub
mov
mov
aam
in
jp
push
push
lods
mov
sbb
xor
mov
and
scas
jo
add
adc
and
xor
rclb
and
xor
inc
adcb
mov
xchg
push
mov
add
adc
and
xor
rclb
and
xor
inc
adcb
mov
nop
shlb
add
nop
jecxz
repnz
inc
adc
sub
aaa
lock
orb
mov
mov
jo
add
adc
and
add
in
jp
loopne
xchg
fldt
pop
mov
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
into
mov
xchg
xchg
stc
rcr
lods
mov
dec
pushf
pop
cmp
jle
push
arpl
jae
push
ds
into
mov
xchg
mov
sahf
repnz
ret
dec
and
outsb
add
push
pop
pop
jb
inc
ds
into
mov
xchg
mov
sahf
repnz
ret
dec
and
push
sbb
and
cs
daa
push
and
out
rcll
sbb
xchg
jns
sub
pop
mov
and
mov
sahf
jg
dec
push
pop
repnz
int
std
addl
js
outsl
add
mov
jb
push
mov
fldt
loope
lock
jle
sti
in
setge
sahf
into
das
stc
cmpsl
sub
jecxz
repnz
ror
pop
adcl
popf
bound
imul
jno
mov
rorb
push
daa
jecxz
cmc
adc
sahf
sub
mov
sti
movsb
aam
add
or
pop
or
sbb
sahf
ja
in
ljmp
lods
or
cmp
mov
sahf
repnz
ret
dec
and
outsb
add
push
bound
jb
inc
ds
mov
mov
xchg
cmpsl
cmp
sbb
push
pop
xor
mov
lret
jmp
aad
jmp
sti
cld
cmp
cmp
gs
stc
pop
jnp
inc
daa
push
push
test
out
ljmp
mov
xor
jle
push
bound
jb
inc
ds
into
mov
xchg
mov
sahf
repnz
ret
dec
and
outsb
add
push
bound
jb
inc
ds
into
mov
adcl
xchg
and
std
xor
lds
add
sbb
stc
pop
jnp
lret
pusha
icebp
icebp
ds
cmc
xchg
cmpsb
pushf
test
mov
or
sbb
movsb
sahf
jl
jle
push
adc
shrl
push
fs
enter
sbb
lahf
xor
mov
dec
mov
in
pushf
es
mov
pop
ja
sub
rcrb
push
jmp
pop
mov
lods
mov
sbb
jge
call
inc
mov
push
mov
xchg
fidivl
xor
push
es
lock
imul
xorl
cmc
pop
arpl
mov
jb
xchg
sub
pop
adc
pop
filds
cltd
sahf
or
cmpsl
add
jnp
mov
inc
adc
popf
pusha
jge
cli
js
aam
and
fidivl
cmp
dec
inc
adc
dec
jle
xchg
std
pop
mov
or
cmpsb
andb
and
mov
inc
and
jno
push
inc
pop
lock
cmp
mov
cmp
pop
aam
jb
imul
das
mov
in
sub
xchg
xchg
lods
pop
loope
and
bound
lods
aaa
popf
test
movsb
loop
adc
push
jg
inc
push
inc
dec
lea
sub
jg
xchg
jle
lock
rol
inc
push
lret
sbb
lea
femms
push
jns
scas
and
in
bound
pop
sbb
movsl
imul
data16
addb
popa
test
xlat
inc
xlat
lcall
mov
scas
dec
inc
add
in
insb
dec
mov
test
xlat
outsb
jb
pop
adc
push
pop
popf
inc
xchg
push
fs
jle
out
inc
roll
ss
dec
jns
xchg
sbb
sbb
test
js
or
stos
ficompl
rorl
jmp
jno
push
cmpsl
aaa
inc
mov
xchg
jne
mov
sbbb
test
shrb
das
bound
mov
lods
mov
push
sub
or
xchg
dec
mov
mov
dec
pop
imul
je
sub
outsl
inc
int
sahf
cltd
outsl
or
rcl
push
nop
push
mov
in
or
call
iret
push
xor
xchg
jb
mov
mov
out
jmp
inc
xor
divb
shll
mov
xor
cmp
call
xlat
xchg
fldl
int3
and
cmc
pop
ret
push
call
neg
ret
xchg
imul
cmpsl
outsl
lea
ljmp
lcall
gs
push
pop
daa
repz
into
add
ror
mov
jmp
dec
xchg
enter
lret
outsl
mov
inc
dec
out
je
adc
xchg
setb
data16
shlb
cwtl
lcall
sahf
inc
leave
xor
mov
bound
je
and
and
xchg
in
call
arpl
push
sbb
test
pop
xchg
mov
enter
adc
lret
fwait
pop
cmpsl
sbb
sbb
jmp
out
std
inc
popf
dec
mov
cltd
sub
push
sbbl
ror
jecxz
outsb
xchg
shll
adc
les
mov
imul
xchg
or
sub
push
mov
movntpd
dec
movsl
insb
cmp
mov
lcall
aas
stos
in
inc
and
gs
fldl
dec
in
cmpsb
mov
in
mov
xor
lret
mov
push
mov
sub
cwtl
lods
xor
call
bt
mov
inc
mov
pop
pop
shr
push
out
pop
mov
mov
xor
push
pop
iret
cmpsb
sub
pop
fisubrl
cwtl
cmp
mov
xor
pop
mov
std
out
movsb
pushf
aas
aad
or
adc
mov
outsl
in
pop
das
jge
inc
stos
int3
mov
outsb
fistpll
into
jb
jmp
lods
mov
test
fidivrs
ljmp
addr16
jg
enter
rcll
inc
shll
pop
call
push
push
aaa
jno
les
in
cmc
adc
out
cmc
fdivs
or
fwait
mov
or
jle
aam
mov
movsb
jne
mov
sub
jg
dec
add
dec
call
xlat
push
hlt
adc
push
pop
xchg
xor
inc
or
aaa
inc
push
test
lods
dec
xorb
push
loope
push
rol
cmp
sar
ss
and
sbb
jecxz
test
fdivl
xchg
mov
scas
xor
in
sub
and
arpl
cmpsb
jo
and
outsl
aam
ret
insl
mov
jp
push
push
call
mov
pop
sub
or
mov
fldl2e
sbb
hlt
gs
nop
and
dec
rcrl
sub
xchg
add
or
mov
mov
add
push
add
lret
outsb
mov
out
sbb
jae
fnstsw
mov
out
test
or
cmc
lret
test
jmp
push
or
int3
mov
sbb
jg
sbbb
shlb
dec
push
shlb
es
jp
in
mov
add
and
cltd
fwait
add
jg
arpl
out
cld
sbb
lret
std
cmc
loope
dec
push
pop
or
ffreep
push
jo
mov
jae
push
push
loopne
mov
xchg
jecxz
movsb
add
pop
jbe
and
aaa
das
in
test
out
cs
cmp
movsb
add
add
into
loopne
inc
dec
add
mov
inc
fnstenv
or
pushf
sbb
pop
loop
jns
bnd
dec
jecxz
push
mov
cmc
outsb
xchg
loopne
lret
test
outsl
and
pop
dec
xchg
add
mov
jp
dec
adc
adc
adc
xchg
arpl
imul
std
pop
push
mov
pop
pop
rclb
xchg
roll
add
jns
rcll
mov
push
setnp
jecxz
dec
xor
xor
dec
mov
and
jg
mov
sbb
int
cwtl
dec
jg
shr
mov
push
scas
dec
fiaddl
test
inc
prefetch
push
clc
pop
lods
jg
out
fistl
jp
jge
mov
loope
sub
je
jl
cmp
jmp
ret
xor
push
sub
lcall
lahf
out
cmp
mov
push
lret
cwtl
dec
ja
xor
leave
pop
loopne
pop
mov
mov
imull
inc
dec
xor
dec
xchg
push
scas
lea
add
xor
mov
mov
test
rorl
pop
enter
mov
stc
cmp
sahf
repz
sub
imul
mov
cmp
sbb
popf
mov
pop
and
js
das
pop
adc
loopne,pt
mov
ret
mov
mov
das
add
jge
nopl
popf
int3
ss
fcmovu
outsb
xchg
pop
ja
cli
shlb
inc
insl
enter
fildl
pusha
ds
das
adc
push
addr16
sub
call
insl
test
scas
mov
iret
dec
push
push
js
in
pop
sbb
add
bswap
dec
mov
xor
xor
xchg
mov
outsl
popl
inc
cmp
mov
xchg
int3
mov
pop
xor
arpl
je
test
jp
test
gs
sub
outsl
negl
dec
nop
jge
dec
in
cli
inc
push
sub
out
sub
rorb
inc
pop
xor
push
andl
and
mov
jmp
jl
cmpsb
movsl
test
les
mov
repnz
add
push
push
pusha
fcmovu
imul
in
pusha
in
leave
and
cmpsl
rolb
xchg
sti
insb
cmp
mov
int
in
push
inc
lahf
or
mov
cmpsb
xor
sbb
pushf
jg
stos
xchg
sub
mov
aad
push
push
rorb
nop
aas
xchg
add
jp
and
testl
jbe
mov
rol
jmp
adc
fs
repz
mov
je
jno
jbe
jne
daa
and
dec
cltd
imul
adc
mov
mov
repz
xchg
int
mov
lahf
inc
add
inc
push
mov
aam
lahf
mov
int
mov
inc
dec
in
jmp
sub
pop
push
push
icebp
pop
xlat
das
cmp
sbbb
adc
ljmp
or
gs
ret
fs
mov
sub
rcr
outsb
xor
pop
pop
cmpsl
cmpsb
push
mov
iret
addb
gs
aas
jns
mov
xchg
xor
pusha
in
in
xor
rcrl
sub
xorb
mov
jne
dec
sarb
ds
int3
loopne
pop
call
mov
mov
mov
lahf
stos
inc
mov
int3
es
sarb
aas
xchg
sub
call
pop
add
mov
pop
and
das
push
cmc
push
mov
adc
outsl
cld
jmp
and
loop
inc
mov
push
cmpsb
pop
call
fldcw
cmpsb
data16
mov
leave
pushf
push
andb
inc
insb
push
xchg
lods
inc
shrb
xchg
jae
and
out
dec
inc
xchg
adc
lret
stos
sbb
mov
push
aas
cmpsl
mov
into
imul
js
aad
mov
adc
mov
pop
and
lea
jmp
fdivrs
mov
xchg
pop
call
push
aas
lahf
mov
testl
cmp
ds
lock
pop
xorb
cmp
push
fsubs
push
inc
movb
add
stos
stos
lcall
lret
in
sbb
jmp
leave
fs
dec
xor
std
pop
mov
fs
xlat
std
leave
inc
movsl
outsb
dec
cmc
int3
dec
ljmp
aaa
mov
jl
sub
fldl
ja
in
adc
scas
sub
out
sbb
fstpl
stc
pop
es
addr16
inc
loop
cld
mov
mov
mull
fs
out
cmpb
xchg
dec
jbe
cmc
and
pop
and
push
daa
mov
jmp
and
push
inc
dec
cmp
jbe
push
sub
fisttps
fdiv
divl
mov
and
movsl
jle
add
pop
push
fmulp
out
xchg
cmp
xor
je
std
enter
roll
pusha
fldt
xchg
sub
pop
mov
or
cmp
adc
fisubs
jnp
mov
mov
lret
xor
enter
test
mov
fs
xchg
jne
adc
mov
xor
and
call
push
inc
inc
push
xchg
xor
jl
lret
int3
fcomi
ja
jg
pop
mov
or
ret
mov
mov
pop
mov
mov
fnstcw
dec
lods
mov
cmp
repnz
cld
divl
jmp
enter
out
sbb
add
inc
mov
cmp
push
and
jle
xchg
dec
inc
pop
inc
add
mov
sbb
aas
out
outsb
lret
dec
mov
les
mov
push
mov
sub
es
aad
lret
into
adc
call
adc
rcr
mov
aam
xor
ja
push
xor
mov
es
mov
int3
rcr
ret
add
out
sbb
dec
and
pusha
insb
lds
sbb
cmp
fwait
cmpsl
inc
xchg
repnz
outsl
popa
call
jg
add
dec
push
sbb
add
inc
cmpsl
pop
push
mov
insb
cld
ja
jbe
jl
std
xchg
popf
xchg
inc
hlt
int3
addb
mov
cmp
mov
fiaddl
sbb
mov
das
mov
leave
mov
xor
inc
test
test
decb
addb
dec
imul
mov
popa
push
mov
outsb
loopne
test
popa
mov
or
loopne
sbb
cwtl
leave
push
jl
fsubs
inc
cmp
rcrl
gs
inc
fwait
subb
mov
sarl
mov
call
arpl
rolb
out
sbb
cmp
test
add
jo
out
sub
pop
and
sbb
cltd
lock
cli
lods
or
xchg
out
jge
lcall
rclb
mov
clc
xchg
xchg
jns
insb
dec
js
push
push
xchg
inc
adc
xor
pop
sbb
test
ds
mov
inc
loopne
int3
jmp
and
lock
daa
sub
mov
sub
shl
and
shr
pusha
mov
mov
inc
or
pop
push
dec
jl
cli
mov
ret
les
cmp
jo
dec
lret
loopne
xchg
mov
jns
insl
jb
adc
mov
jle
popl
cmpsb
movsl
jae
test
xor
test
push
mov
icebp
out
dec
addr16
sti
in
filds
shlb
mov
sub
loope
xchg
dec
cwtl
in
negl
add
pop
mov
in
out
repnz
out
lret
outsl
pusha
xchg
or
add
into
push
arpl
xor
inc
nop
dec
mov
xchg
pop
inc
mov
gs
mov
push
pushl
cwtl
mov
xlat
fstpl
adc
jnp
sub
push
push
pop
dec
rorl
sub
jb
sbb
fldl
ret
mov
int3
pop
jle
andb
cmc
sub
cli
add
pop
lret
add
cmpl
les
popa
cmp
das
jp
mov
sbb
add
sbb
and
mov
rorl
ja
mov
or
inc
sub
mov
imul
pop
add
add
or
aas
push
lcall
xor
mov
shlb
cmp
push
das
fnstcw
ffreep
into
loope
mov
dec
icebp
mulb
sti
and
out
jge
cmp
push
sub
ja
hlt
pop
jl
xchg
mov
aam
sbb
pusha
lds
stos
dec
fwait
nop
lret
sub
sahf
imul
mov
imul
jb
cmpsb
xor
xor
ret
or
test
push
negb
xchg
arpl
int3
mov
shlb
cmpsl
mov
jb
imul
shlb
fwait
adc
in
mov
scas
ljmp
insb
lock
cli
rcr
fisubl
sub
stos
adc
cmp
cs
addr16
sub
aas
and
aas
dec
fwait
mov
test
mov
adc
fdivs
out
repnz
adc
adc
dec
and
stos
in
mov
jb
test
ja
nop
xorb
adc
cld
or
dec
xchg
cmp
inc
mov
lock
into
test
sub
or
xchg
test
pop
add
call
pop
fcomp
loopne
pop
and
pop
add
cmpsl
lea
mov
cmpb
xchg
or
pop
ret
sahf
sbb
ljmp
xchg
sbb
cmp
mov
jbe
jo
jb
int3
rcll
loope
popa
lret
inc
pusha
xchg
sbb
mov
ror
dec
cwtl
cwtl
ds
jo
jecxz
xchg
dec
inc
inc
dec
mov
mov
cwtl
mov
push
gs
adc
mov
repz
mov
flds
outsl
sbb
or
dec
push
pop
sar
mov
jns
shl
sbb
add
jns
pop
xchg
and
cmp
ret
into
xchg
and
sahf
pusha
enter
popa
movsb
cld
jp
ds
les
jo
add
xchg
outsb
mov
cmp
cmc
loopne
daa
xor
sub
lret
push
lds
aas
sbb
cmp
or
add
sbb
and
ss
push
mov
sbb
jp
mov
mov
mov
pop
push
cmp
cmpsl
xor
xchg
dec
adc
mov
mov
test
cld
pusha
and
pop
mov
push
psrad
inc
orb
clc
out
je
call
movsl
xchg
hlt
xchg
out
out
ljmp
dec
sarl
sti
sbb
push
filds
imul
repnz
push
dec
adc
mov
sbb
inc
and
sbb
inc
or
dec
mov
or
into
test
gs
push
mov
loope
cmp
lods
repnz
xor
jae
push
test
mov
pop
mov
cmc
mov
xchg
int3
adc
outsb
add
loop
xor
fs
cs
add
loop
aam
or
movsb
adc
cmpsb
aad
lret
xorb
pop
fdivrl
adc
shlb
imul
outsl
jo
in
testb
pop
pop
imul
adc
pop
sub
sar
cltd
and
pop
into
mov
ror
mov
std
aaa
mov
xor
or
pushf
adc
daa
pop
into
pop
mov
and
xchg
ret
fucomip
sbb
cmp
mov
inc
test
iret
jg
out
mov
dec
adc
mov
sbb
cmp
cltd
fdivrl
lret
mov
jae
sti
stos
or
adc
fs
clc
fsubp
mov
shll
lea
nop
push
ret
ds
stc
es
jae
adc
daa
outsb
adc
movsb
cmc
lds
or
adc
sbb
sub
xor
push
fists
lock
or
cmc
cmc
adc
jae
fcmovbe
inc
rol
rol
fistpll
jb
rcrl
dec
push
or
fisubrs
or
xchg
jmp
mov
scas
cld
fldt
cmovge
shr
jecxz
adc
test
jl
dec
or
jl
js
adc
pushf
mov
jl
mov
cmp
mov
out
jmp
lods
xor
rcll
dec
mov
stc
or
aaa
cwtl
fsubr
out
mov
fld
adc
xchg
cli
xor
adc
xorl
inc
jb
fdivr
mov
mov
dec
mov
or
aad
pushf
push
clc
or
mov
xchg
out
stos
push
push
je
xchg
add
sbb
adc
out
lret
cwtl
xchg
dec
mull
inc
sbb
xchg
add
andl
xchg
mov
sti
popf
outsl
cld
data16
sub
or
repnz
sbb
sbb
mov
sbb
mov
stos
xchg
jg
inc
and
ljmp
cltd
aad
lds
lret
jl
sub
repz
sbb
cmpsl
adc
out
sbb
and
stc
sbb
fidivrs
mov
mov
push
int
out
jecxz
pop
shll
std
or
stos
cmp
out
scas
mov
sbb
fmull
mov
in
mov
xchg
sbb
and
mov
or
cmp
jg
dec
shrl
jb
stc
rorb
insl
stos
mov
test
aam
rclb
xchg
je
lods
pop
lahf
lahf
fisttps
push
push
out
mov
fcompl
cmp
iret
cmp
jp
cli
push
pusha
sbb
sub
xchg
leave
mov
and
cmc
movsb
pop
bound
mov
add
xchg
fcomi
lods
scas
inc
sub
aam
pop
imull
shrl
and
mov
mov
ja
inc
xchg
dec
jecxz
lea
stc
sub
push
xor
inc
andl
repz
jle
sbb
popf
push
pop
nop
in
pushf
xchg
int3
inc
in
pop
mov
mov
mov
stc
push
push
ss
ret
bnd
cmp
ds
or
ljmp
or
pop
and
popf
sub
call
mov
xor
add
xor
pop
lret
frstor
push
cld
mov
pop
mov
xchg
cli
jl
jns
push
sub
cmp
aad
lods
aas
cs
pop
adc
fucom
fidivrs
aas
inc
cs
mov
dec
jbe
mov
xchg
mov
dec
js
inc
inc
cld
xchg
cwtl
cmpsb
test
gs
mov
bound
and
fcoml
aas
lds
push
fdivl
movsl
cmpsb
add
jb
cli
push
and
sahf
pushf
jo
test
sub
jns
jmp
stos
mov
and
jnp
dec
movsb
loope
xchg
sbb
jg
cmpsl
in
cwtl
xchg
jne
push
stc
cli
sub
fs
not
mov
push
add
roll
leave
sbb
sub
clc
cld
aam
imul
dec
test
or
lods
sahf
inc
push
scas
lcall
and
icebp
cmc
scas
ja
pushf
cmpsl
fcoms
mov
xor
sub
xor
insb
pushf
cmp
push
fldenv
stos
lret
cmpsb
adc
data16
push
lods
dec
maskmovq
notl
clc
scas
jae
stos
into
jl
aad
pop
cmp
arpl
mov
or
mov
nop
in
mov
lods
imul
dec
mov
adc
and
bound
push
mov
cmp
mov
sahf
repnz
ret
dec
and
outsb
add
push
bound
jb
inc
ds
into
mov
xchg
mov
sahf
repnz
ret
dec
and
outsb
add
push
bound
jb
inc
ds
into
mov
xchg
mov
lahf
repnz
ret
dec
and
outsb
add
push
bound
jb
inc
ds
into
mov
xchg
mov
sahf
bnd
mov
mov
gs
xchg
mov
rorl
cmp
sub
pop
lahf
dec
or
mov
add
adc
movsl
sbb
or
pop
xchg
dec
mov
cwtl
push
mov
mov
test
notb
enter
call
jae
sub
push
mov
and
fsts
push
arpl
scas
pop
popf
dec
loope
cwtl
dec
test
mov
sti
lcall
cli
cld
inc
inc
add
les
sbb
xlat
scas
dec
adc
sub
cmp
mov
and
clc
dec
dec
xchg
and
movsl
aas
jo
push
xchg
popa
out
dec
mov
mov
mov
cwtl
je
jno
adc
push
xor
sub
das
sbb
cmp
sub
xchg
js
mov
push
push
dec
adc
pop
xor
lds
imul
sub
rcr
popa
pop
xor
inc
mov
fstp
stos
cmp
mul
dec
psubb
js
pop
or
call
mov
lea
adc
sbbb
icebp
sub
jmp
cli
xchg
inc
xchg
dec
in
es
xor
test
mov
inc
out
std
jmp
inc
fildl
clc
add
adc
jae
jg
dec
mov
pop
mov
xchg
dec
nop
inc
call
adc
pop
es
add
popa
ljmp
dec
popf
jo
lods
imul
rclb
dec
mov
cwtl
push
mov
jno
add
adc
and
xor
rcrl
or
cmp
sub
js
push
popa
mov
adc
and
xor
rcrl
pop
and
dec
aas
jns
iret
rcll
push
sub
mov
cmp
ds
jae
mov
in
mov
movsb
es
das
scas
subb
clc
inc
xor
mov
icebp
dec
lods
jl
cli
call
xchg
and
inc
in
insl
in
rorb
repz
or
shl
push
fmul
push
hlt
jnp
add
add
or
movsl
jmp
addr16
pop
in
xchg
cwtl
add
and
and
jmp
add
repnz
mov
adc
cwtl
and
in
fdivrs
jno
xchg
or
add
pop
sti
lahf
clc
lods
dec
and
das
aam
adc
loope
and
adc
test
daa
push
das
pop
loop
mov
data16
jb
and
mov
cmp
xchg
dec
jne
inc
insb
icebp
fdivrs
fdivp
sbb
shll
in
cli
sbb
jb
shrb
push
add
and
and
fidivl
in
lea
shrl
mov
or
fxch
out
popa
push
push
adc
inc
cmp
mov
outsb
pop
scas
call
int3
pop
ret
inc
mov
adc
lods
pushf
loope
leave
cmp
adc
adc
sahf
push
sbb
add
xchg
sub
xor
push
shll
arpl
xor
les
movsl
int3
in
sub
inc
jmp
push
iret
pop
sub
fs
leave
inc
outsb
subb
mov
push
adc
xor
and
jle
mov
xchg
loopne
push
sub
jmp
hlt
stc
icebp
ret
and
adc
test
pop
sbb
lds
jo
aas
imul
mov
sub
mov
mov
jmp
xchg
pop
ds
add
pop
scas
or
ret
jb
inc
in
mov
fs
xor
sti
pop
aam
add
mov
lds
mov
xchg
pop
and
imul
or
cmpsl
jb
loope
mov
mov
adc
add
dec
adc
arpl
popa
jg
int
inc
pop
push
rcll
sbbl
adc
fs
xchg
mov
lahf
jg
adc
inc
mov
int
push
movsl
fldl
inc
out
test
or
enter
jb
jnp
push
xchg
push
xchg
cltd
aad
mov
test
sti
outsb
in
lds
sbb
add
push
inc
dec
test
cs
shlb
je
push
gs
pop
test
inc
cld
pushf
mov
pop
pop
sub
out
in
push
mov
adc
dec
and
fwait
add
addr16
std
repnz
jmp
push
xchg
outsl
data16
outsl
imul
pop
lods
and
out
lcall
push
sub
jb
test
xchg
outsb
jnp
lods
stos
fwait
aad
mov
and
fwait
mov
fidivrl
mov
mov
int3
je
adc
jp
pop
cwtl
cmp
sub
outsb
xchg
les
pop
jle
outsb
adc
lcall
jg
jp
inc
sbb
mov
repnz
add
push
ja
stos
pop
mov
lret
jns
xchg
lahf
fcmovnbe
aaa
stc
test
adc
ja
inc
adc
dec
xor
bound
push
aad
movsb
add
shll
addl
xchg
imul
shlb
fstp
push
lret
inc
jg
lock
cmpsl
mov
clc
mov
ds
lods
or
or
pop
xor
xor
inc
push
sub
repz
jbe
test
xchg
pop
mov
das
mov
mov
ret
mov
orl
jmp
push
out
addr16
insl
ds
push
sahf
mov
add
mov
mov
out
xor
lret
lock
mov
or
adc
jne
mov
mov
xchg
in
in
jle
pop
gs
add
sub
into
xchg
aas
std
mov
xchg
lret
dec
fistpl
pop
inc
imull
pavgb
out
call
xor
sarb
mov
add
push
rcl
and
pop
inc
iret
add
pop
pop
cmp
in
mov
sarl
dec
addr16
fs
cmpsl
mov
pop
mov
sub
pop
and
push
cli
aaa
cmpsl
pop
mov
stc
lods
mov
out
cmpsl
jns
daa
shll
add
test
je
mov
cli
popf
and
and
sbb
enter
jp
lock
cmc
add
hlt
into
inc
inc
and
mov
popa
sub
fsubl
dec
clc
cmp
or
pop
andb
inc
les
loope
jne
push
mov
sarb
lock
fsubrl
cmp
lahf
imul
xchg
stos
sub
xchg
push
push
ss
mov
sarb
addb
and
insl
ja
jge
cmpsb
shl
jg
imul
adc
xchg
gs
or
sub
enter
jbe
or
repz
jl
aaa
sbb
repz
push
jmp
xchg
and
mov
stos
negl
shrl
mov
in
icebp
scas
in
popa
pop
leave
testb
stc
pop
mov
addr16
lods
cmp
loop
sbb
xor
div
sbb
test
aad
sub
push
shlb
xor
cmp
and
mov
sub
mov
mov
push
fsts
jmp
jbe
out
pop
inc
cmpsb
loop,pn
es
movd
sbb
test
jns
cli
fiaddl
outsl
dec
iret
dec
push
mov
jg
out
xchg
lcall
inc
sarl
push
ds
fldenv
xor
jmp
push
push
ret
push
mov
scas
cltd
mov
arpl
push
jae
insb
pop
mov
push
into
pop
insb
sub
mov
push
xor
dec
and
dec
sbb
popf
fidivs
push
push
pop
mov
rorb
popf
lahf
adc
adc
adc
call
mov
jecxz
fbstp
das
popf
idivl
xchg
xchg
loope
lods
lahf
pop
or
lds
add
lods
mov
lret
hlt
add
mov
notb
xchg
xor
push
jp
cmpsl
sub
mov
sub
fdivs
sbbl
adc
aad
or
mov
add
mov
lahf
inc
lcall
addl
arpl
fsts
adc
test
jnp
stc
xchg
icebp
repnz
mov
movsb
movsl
insb
dec
scas
insb
nop
ljmp
add
popf
leave
sbb
fs
xchg
jb
add
addb
stc
and
sub
lods
lock
test
popa
mov
sub
or
inc
and
mov
aad
stos
shrb
loopne
sbb
and
leave
pop
cmp
adc
int3
cli
mov
leave
bound
xlat
ss
cmp
push
aas
mov
pusha
ror
adc
cli
adc
push
pop
rcr
push
mov
push
ljmp
sub
imul
das
inc
inc
sbb
pop
je
addr16
sbb
fwait
mov
dec
stos
test
out
ds
pop
or
xor
arpl
push
push
mov
in
and
lock
out
mov
pop
mov
mov
xlat
pop
je
pop
loope
outsb
lcall
hlt
add
mov
enter
cwtl
lock
jge
fxch
out
and
push
jl
mov
popa
out
sub
lcall
push
mov
jge
sbb
shl
inc
adc
aaa
loope
lahf
shl
cli
xor
outsb
cld
add
jne
push
or
or
fcompl
and
dec
inc
pushf
jae
lret
jae
lods
rorl
adc
jecxz
and
loop
jno
aas
insb
sarb
hlt
iret
jns
jmp
sbb
shl
push
out
decl
ljmp
fmulp
cmp
pushf
push
cs
out
loopne
cmpsb
mov
testb
xor
sub
jbe
push
mov
jb
ss
inc
pop
fistpll
lods
ret
movsl
fsts
dec
jno
ret
mov
mov
ret
movsl
push
xchg
and
sub
xor
xchg
sub
std
sub
jecxz
cmp
mov
sahf
in
insb
mov
dec
adc
addl
sub
mov
sub
dec
cmp
stos
in
sub
mov
lea
scas
ficompl
je
mov
mov
xchg
mov
add
shrb
and
movsl
imul
js
sub
insl
ficomps
sub
insl
inc
pop
cmp
lcall
adcb
inc
stos
pop
jmp
je
scas
inc
mov
out
out
lahf
or
fidivs
in
cmp
mov
in
cmp
xlat
mov
pop
inc
mov
mov
push
scas
dec
test
push
mov
mov
fimull
dec
xchg
ret
repnz
das
mov
gs
fdivs
adc
jns
repz
sub
dec
pushf
aas
fcmovb
sti
add
mov
cli
mov
das
adc
push
xchg
leave
loop
mov
jmp
and
cmp
xchg
pop
adcb
jno
hlt
fprem1
xlat
fs
or
push
push
lds
xchg
add
fisubs
jne
or
pop
test
and
sbb
xchg
mov
loopne
fisttps
or
cmp
xlat
and
sbbl
pop
cmpsb
jmp
stos
aas
cmp
mov
outsb
aad
or
lret
insl
add
push
pop
gs
pop
xchg
clc
sub
push
cmp
mov
imul
and
push
mov
inc
fninit
ret
push
mov
inc
fcoml
repz
jmp
pusha
and
fdivs
and
xchg
outsb
lea
fcomip
enter
and
fdivl
push
mov
cmp
rep
add
or
mov
mov
fldt
orb
lods
push
mov
jecxz
or
cmpsl
into
xchg
subl
dec
nop
xchg
push
push
dec
int
cld
arpl
enter
mov
fucomp
imul
adc
mov
sbb
sub
rep
rolb
ljmp
cwtl
pop
hlt
shll
sub
sub
lods
mov
dec
aam
jbe
stos
dec
fbld
lcall
or
pop
push
repnz
xchg
int3
pop
mov
je
hlt
int
fadds
or
subb
sub
orb
mov
sahf
fstpt
loop
mov
mov
fists
int
sub
push
dec
cmp
jmp
ds
cmovne
sahf
popf
nop
xchg
mov
dec
popf
dec
mov
sbb
iret
and
ret
mov
lods
in
sub
cmpsl
cmp
pop
and
sbb
inc
imul
jo
lods
dec
je
cld
or
jnp
add
xchg
inc
fs
imul
sub
js
in
fld
bound
add
sbb
xor
jle
mov
push
pop
fldcw
lds
imul
ficoms
std
in
and
out
out
sbbb
jp
mov
add
jnp
sahf
incb
in
mov
leave
je
and
mov
inc
fnstcw
ret
xor
jg
lcall
call
insb
adc
sub
clc
scas
jmp
mov
cmpb
addr16
cmp
xchg
add
jle
mov
xor
jbe
inc
jg
cmp
aam
lret
mov
nop
push
cld
xor
or
dec
mov
idivl
ret
shll
divb
std
ss
inc
lock
sar
rep
jl
pop
and
xlat
std
les
into
mov
sbb
scas
andl
subl
mov
mov
add
int3
mov
adc
imul
fistps
jbe
mov
pusha
loop
stos
jge
cmpsb
xor
fisubl
dec
ljmp
dec
xor
sti
push
sbbl
test
sahf
neg
sub
mov
add
add
xlat
jge
push
xchg
inc
lret
clc
in
push
rorb
fucomp
push
jae
mov
cmp
rcll
pop
lods
gs
lock
fwait
das
ficompl
or
jp
mov
ja
mov
out
out
int
cmp
xchg
inc
mov
sub
pop
cmp
scas
movsl
js
mov
pop
inc
btr
ss
sub
mov
xor
pop
dec
mov
sub
popf
push
add
subl
popa
pusha
mov
push
dec
call
xchg
and
ds
xor
sub
loop
mov
cmp
dec
sbb
xor
xchg
movsb
out
sarb
daa
cltd
xor
cmp
sbb
adc
aad
mov
mov
cltd
mov
pop
stos
xchg
adc
hlt
test
outsl
xchg
push
xchg
arpl
shl
xlat
sub
lcall
outsl
shl
iret
dec
cltd
mov
std
addr16
xchg
rorl
mov
xlat
lahf
daa
xchg
outsl
ljmp
outsl
xor
imulb
sub
push
push
xor
rolb
lods
cli
lods
push
fimuls
mov
pop
pop
test
push
dec
inc
ds
lock
xchg
bound
in
mov
std
jnp
or
hlt
jns
push
pop
out
add
mov
shl
pop
popa
and
pop
and
movl
and
insb
add
leave
es
sbb
test
repnz
icebp
jl
mov
aad
imul
dec
xor
mov
insb
mov
push
fldl
in
aam
cmp
dec
jmp
cmpsb
and
add
faddl
out
push
xchg
lret
lret
pushf
fcomps
outsb
push
cmp
xchg
les
xor
add
lds
xchg
lods
or
mov
loopne
mov
pop
mov
lods
mov
lds
xchg
mov
in
mov
sbb
outsl
pop
cld
mov
and
inc
mov
xchg
sahf
dec
jmp
pop
jb
fcomps
iretw
mov
out
sbb
or
pop
mov
xor
and
pushl
fstpl
dec
ja
dec
inc
daa
dec
mov
add
sbb
xor
adc
daa
cltd
push
shll
mov
inc
xor
pop
or
mov
shrl
cltd
xor
and
push
jns
in
out
mov
outsl
mov
push
outsb
js
add
mov
mov
xchg
mov
mov
pop
inc
fnstcw
xchg
xchg
xlat
jb
push
pusha
and
push
jle
lock
int
loope
add
negl
sub
addr16
mov
ret
cmp
dec
icebp
imull
push
test
mov
or
outsl
jl
stos
jb
pop
cmp
aam
jecxz
movsb
jle
hlt
cmp
mov
push
shll
cmp
sub
int3
jae
imul
dec
mov
mov
scas
sub
mov
jg
inc
adc
std
lahf
push
call
daa
pop
bound
ret
call
sahf
lock
mov
sbb
mov
dec
cmpb
fistpll
rcl
repz
clc
sbb
push
sbb
out
mov
fwait
add
mov
mov
jp
xchg
jmp
push
mov
loop
bound
imul
out
dec
popa
push
sub
hlt
dec
ljmp
scas
push
pusha
insl
gs
add
push
cmp
adc
fildll
dec
ja
cltd
frstor
fmuls
mov
sub
inc
add
into
jp
xor
pop
jl
xor
xor
push
push
push
daa
xchg
ficoml
jg
gs
pop
wrmsr
rorb
mov
cmpsb
test
lahf
adc
jecxz
mov
mov
sbb
shlb
hlt
outsb
lahf
cli
ret
push
scas
pushf
xchg
cmp
ret
ds
mov
rorl
xchg
dec
mov
aas
inc
in
inc
jne
sarb
dec
adc
loop
imul
int
jo
fmul
xchg
jmp
sub
mov
push
outsl
mov
mov
push
mov
jecxz
cmpsl
sub
pop
je
pop
xchg
sbb
out
test
lahf
lods
adc
sti
pop
jnp
lods
fucom
jmp
cmp
hlt
lahf
mov
and
ds
pop
dec
mov
cmp
loope
cli
dec
lock
fs
mov
icebp
pop
adc
sbb
and
cmp
gs
pop
repnz
pop
movsl
mov
cmp
les
in
dec
popf
cmc
jbe
push
sub
push
xchg
add
jae
jmp
ljmp
lret
andnps
stos
arpl
mov
push
cmp
out
ds
add
dec
fists
scas
ret
pop
lds
sbb
ret
clc
jecxz
sti
xchg
dec
push
int
loope
mov
lods
xor
mov
sub
add
jno
sub
fists
cmc
iret
imul
stos
outsl
insl
sbb
lods
or
mov
push
and
into
add
dec
bound
out
mov
lods
lods
stos
sti
imul
jg
mov
fidivrl
jno
je
lods
pop
inc
sbb
xor
in
adc
cmp
or
cmp
mov
adc
mov
push
mov
jne
adc
sbb
test
mov
iret
lods
inc
xor
jae
aaa
sbb
pushf
test
jns
movsl
jo
fwait
shlb
inc
adc
inc
mov
mov
mulb
push
lahf
hlt
out
xchg
sbb
stos
cmp
fisubl
hlt
dec
xchg
push
ss
call
shlb
aam
ret
incl
jb
clc
sahf
popf
je
lret
pop
dec
lods
cmpsb
mov
jp
scas
cmpb
fnstenv
and
and
and
aam
add
les
mov
stos
in
mov
mov
pop
and
subl
shll
bound
out
cli
orb
xchg
add
outsl
or
xadd
arpl
fists
dec
pop
ror
inc
pop
sub
repz
xor
ja
arpl
insb
xor
inc
sarb
mov
idivb
cwtl
jmp
test
jno
lds
rcr
and
ret
loop
mov
hlt
xor
xchg
adc
inc
imulb
test
stc
jne
push
aad
mov
cmp
jmp
adc
stc
push
jne
lret
out
fninit
into
mov
loopne
pusha
jecxz
lret
shll
and
or
orb
mov
ss
addr16
add
out
xor
nop
dec
test
and
mov
xlat
push
cmp
or
add
out
call
pop
jle
pop
sub
fisubrl
sahf
in
std
test
mov
xor
dec
int3
and
or
pop
mov
pop
sbb
add
dec
ret
mov
jmp
push
xchg
je
les
repnz
mov
adcl
into
loop
xor
test
cmp
lods
push
inc
cmpsl
faddp
sarb
and
cmpsl
sbb
xor
pusha
cmpsl
imul
and
sub
stos
repnz
nop
pop
repz
push
cmp
jo
mov
add
std
push
cmpsl
mov
bound
cmp
mov
enter
mov
jg
fistps
int
ss
jbe
xchg
int3
mov
repnz
movsl
fldl
inc
bound
fcoml
in
or
xchg
aas
pop
sub
into
cmp
movsl
dec
fldln2
mov
push
push
out
ljmp
jae
je
dec
in
cmp
cmovge
xorb
ficompl
mov
jl
ret
xchg
pop
jnp
pushf
sub
cmp
xchg
iret
fsubr
ret
stos
imul
push
int3
xor
cmp
push
out
cmc
js
and
sub
mov
loopne
insl
fimull
lret
mov
lcall
push
repz
int
les
shll
in
loop
jle
push
popa
gs
jge
mov
sti
dec
testb
xchg
cmp
lret
js
dec
sub
stos
inc
fimuls
lret
pop
jne
out
mov
fiaddl
mov
sub
in
mov
push
jg
icebp
aam
push
jmp
and
popa
xchg
adc
lods
add
in
nop
aaa
das
dec
cmpsb
mov
mov
push
testl
jge
pusha
mov
sub
xorb
imul
xor
hlt
stc
inc
insl
mov
push
mov
sbb
ds
cli
test
shrb
xchg
les
xchg
xor
xchg
xlat
jge
xchg
out
xchg
fsubs
clc
sarb
mov
addl
js
or
push
out
xor
push
push
push
push
inc
mov
xchg
lcall
lock
mov
jns
aas
cmc
sarb
and
insb
sub
cmp
xchg
pop
pop
push
leave
xchg
stos
add
cmpsb
cmp
xchg
dec
mov
cwtl
push
mov
jno
add
adc
and
xor
rcrl
or
cmp
sub
js
push
popa
mov
adc
and
xor
rcrl
andl
xchg
and
cltd
push
mov
faddl
enter
or
cld
in
mov
pop
orl
scas
and
mov
cltd
mov
or
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xorl
lds
clc
adc
test
insl
push
jg
push
add
add
add
add
add
add
add
add
jmp
pop
add
add
add
add
add
add
jae
das
add
add
jns
add
mov
add
test
add
add
add
add
add
jns
addb
add
add
add
adc
add
add
add
add
filds
inc
add
add
add
add
add
add
add
sub
adc
test
out
mov
add
add
add
add
add
add
jle
dec
add
add
popl
add
dec
add
data16
add
add
or
xchg
jno
test
add
jl
aad
sub
mov
adc
js
dec
add
add
pop
add
add
add
cmc
add
add
movsl
add
add
jle
jle
inc
add
add
add
add
jno
and
jg
filds
push
add
add
add
mov
add
add
and
aad
jl
push
add
add
add
ljmp
add
add
add
add
aad
roll
add
add
pop
add
add
add
add
add
push
add
add
add
add
out
add
add
add
add
add
add
add
cs
add
add
add
inc
add
add
add
add
jle
mov
add
iret
add
aad
dec
add
add
add
add
das
add
clc
add
add
inc
add
add
pop
add
add
add
add
add
add
push
add
add
add
push
gs
add
add
addb
add
jbe
cmp
add
add
add
xor
popa
add
lcall
add
add
add
add
add
movsl
add
push
push
add
mov
add
add
add
dec
add
add
adc
adc
jecxz
add
add
add
add
icebp
add
add
jae
or
jle
jbe
aad
mov
js
or
add
add
push
cmp
mov
jns
and
add
add
adc
jmp
inc
add
add
add
add
add
add
add
add
inc
add
add
add
outsl
add
jecxz
push
add
movb
add
inc
add
dec
add
add
add
add
add
inc
add
inc
add
add
add
add
test
add
mov
add
sti
add
add
add
add
add
add
add
add
add
add
add
add
sub
xchg
add
add
dec
add
add
add
outsl
add
add
add
add
add
push
push
add
add
add
add
addl
popa
add
add
add
add
mov
add
jle
pop
add
add
add
add
outsb
add
add
mov
adc
add
add
push
pop
add
add
addl
push
add
icebp
add
pop
add
add
add
add
decl
adc
hlt
fs
pop
xor
xor
mov
mov
cmp
subb
repz
mov
adc
mov
add
inc
adc
xor
or
xor
cmc
shll
sbb
push
sahf
daa
mov
inc
outsb
xchg
push
stos
repnz
dec
lret
inc
int3
cltd
add
subl
sub
cmp
mov
fisubrl
loopne
dec
outsb
sbb
jg
outsb
mov
or
pop
xchg
les
bound
shll
jge
popf
insl
dec
outsb
stc
incl
in
mov
loopne
cmp
mov
adc
sub
dec
ret
mov
and
mov
sub
jae
xchg
ja
mulb
sub
cmp
push
xchg
add
dec
scas
es
push
repz
cmp
sbb
mov
inc
in
sti
jo
mov
test
xor
jmp
fisubrl
mov
repz
pusha
mov
sub
inc
filds
aad
jno
xor
xchg
mov
lds
and
mov
ret
out
xor
call
repnz
sahf
dec
shl
cmp
stos
out
cwtl
cld
mov
addr16
pop
lcall
fwait
add
dec
cld
pop
push
in
loop
int3
popa
push
cwtl
or
lret
pop
add
sbb
sub
mov
cmp
or
or
jge
sub
pop
pop
lods
xchg
jnp
in
jae
mov
pop
and
movsb
movb
into
andb
add
cwtl
call
xchg
sbb
sbb
negb
mov
jmp
nop
xchg
push
pop
dec
lcall
nop
mov
test
shll
mov
jmp
sub
pop
adc
pop
sti
out
fistpll
fnstcw
jle
and
xor
inc
test
pcmpeqw
or
and
rclb
add
lods
stos
pop
and
adc
es
cli
cmp
pusha
das
push
mov
xchg
out
cmp
lret
cld
push
sbb
sub
lahf
addr16
outsl
or
push
or
negb
sahf
std
clc
sub
push
test
sti
mov
pop
data16
insl
add
xor
sahf
movsl
mov
lock
mov
and
cmp
mov
mov
adc
cli
bound
push
or
repnz
rcl
and
stc
jnp
enter
aad
enter
repnz
imul
cli
cmc
les
loope
sbb
out
inc
pushfw
pop
and
into
bnd
addl
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
