call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
xor
dec
adc
outsb
jae
adc
push
insl
cs
jmp
iret
xchg
ljmp
sarl
and
jle
outsb
jae
arpl
push
ds
pop
mov
mov
out
mov
jecxz
sarl
rcll
data16
pop
add
dec
es
xor
fiadds
fwait
cwtl
rcll
rcrl
adc
push
ja
arpl
mov
push
or
push
in
mov
jecxz
xlat
inc
xlat
fistps
les
outsb
jecxz
faddp
into
roll
xlat
xor
scas
jg
or
mov
push
int
and
adc
and
in
mov
adc
cmp
jmp
add
testb
push
lods
dec
inc
stos
mov
mov
arpl
jecxz
rolb
mov
xor
jmp
fdivs
enter
and
xchg
push
push
mov
jecxz
sub
iret
sub
mov
std
in
xchg
mov
xorb
adc
mov
sarl
pop
adc
outsb
xchg
push
sbb
push
ds
jne
cmp
in
mov
mov
movsb
ret
scas
pop
pop
push
cmp
sbb
sbb
or
dec
mov
lock
idiv
out
cmp
cmpsb
ret
inc
daa
popa
or
push
inc
cmpsb
dec
push
sbb
stos
icebp
stos
xchg
fwait
sti
in
mov
mov
pop
pop
dec
dec
jb
push
sub
sub
inc
cs
mov
out
repz
jecxz
sarl
and
jle
outsb
jae
arpl
push
ds
cs
mov
out
repz
jecxz
sarl
test
stc
ret
insb
mov
lock
fiaddl
xor
out
mov
or
rcrb
push
bound
rclb
push
mov
or
sub
pusha
mov
rolb
add
testb
mov
sub
jbe
in
cmpsb
ja
daa
or
mov
add
cltd
or
xchg
inc
add
jg
enter
lahf
cmp
xor
icebp
insb
and
lahf
xchg
jge
lea
sub
in
mov
sub
lock
fists
icebp
sbbb
mov
inc
cmp
pop
lock
mov
into
dec
mov
jmp
aas
or
fistpl
hlt
movsl
dec
add
mov
dec
or
jecxz
iret
imul
jecxz
fildl
cmp
xor
in
mov
add
flds
outsb
xchg
leave
inc
addr16
out
xchg
jnp
scas
std
lret
or
jns
ret
jecxz
pop
xchg
jge
cmovl
loop
daa
mov
xor
mov
test
clc
pusha
push
adc
out
pop
ds
xchg
mov
add
mov
movsl
outsl
test
ljmp
cmp
mov
sub
sahf
xchg
lea
add
out
fidivl
add
cwtl
mov
sti
cmp
shlb
stos
adc
add
pop
xlat
and
repnz
pop
out
push
cmp
sub
push
push
clc
call
inc
data16
in
xchg
je
mov
cmpsb
std
flds
cmp
ficoms
and
add
sub
add
gs
fcoml
push
and
loop
push
push
call
sbb
scas
mov
xchg
js
das
jo
or
lock
es
inc
jbe
icebp
xchg
adc
xchg
push
xor
leave
inc
cs
test
mov
test
icebp
push
bound
repz
xchg
cmp
cvtps2pi
xchg
inc
xor
mulb
xchg
push
sub
jle
cwtl
insb
and
pop
cld
test
imul
je
es
xchg
mov
xor
inc
push
mov
and
mov
lds
adc
in
cwtl
xchg
lea
dec
pop
add
sahf
and
mov
lret
or
cld
sti
mov
adc
and
ljmp
or
movsl
jmp
dec
push
push
sarl
dec
push
pusha
cmpsl
addr16
std
ret
jb
mov
or
pop
insl
sbb
jns
mov
aad
or
fisttps
pop
popa
pop
mov
or
arpl
lds
jle
push
pcmpeqd
push
mov
in
inc
insl
adc
push
mov
cmpsb
lock
mov
add
gs
and
inc
ret
push
pop
insl
jp
in
or
xor
sub
andb
popa
into
xchg
les
test
movsl
jmp
insl
sub
jne
cmp
inc
insl
hlt
xchg
call
imul
push
inc
jp
mov
das
dec
xor
adc
xchg
xor
or
dec
ss
ret
jns,pt
mov
jae
icebp
lods
lret
mov
aad
scas
hlt
xchg
movsl
movl
xchg
repz
daa
xor
daa
adc
mov
ret
int
mov
pop
xor
out
insl
mov
rol
push
mov
adc
fsubrs
add
push
inc
mov
dec
adc
popa
aaa
and
xor
push
nop
inc
rcrl
mov
push
mov
hlt
pushf
cwtl
in
lds
jo
ljmp
arpl
xchg
mov
dec
jl
loop
push
and
popf
pop
fmul
outsl
jns
and
ja
add
fidivrs
pushf
sbb
fcomps
mov
icebp
call
pop
jecxz
inc
aad
shlb
lock
cwtl
pushf
cmc
jge
adc
xor
cmc
lock
inc
outsb
push
push
sub
je
insl
pop
pop
jae
lret
adc
lea
jl
les
mov
cmp
mov
sub
xchg
mov
mov
jb
hlt
push
jle
push
insb
and
pop
test
pop
mov
adc
mov
xor
push
xor
jecxz
dec
popa
js
test
aam
mov
adc
adc
movsb
aaa
dec
negb
ret
stc
arpl
in
imul
aas
int3
mov
fidivs
adc
add
pop
aam
mov
mov
cmpsl
jg
enter
pop
cmpsl
pop
fisttpl
iret
pusha
mov
jge
fsubp
adc
sbb
pop
xor
jp
add
fwait
andb
jb
test
or
push
cmp
jg
dec
push
out
inc
enter
xchg
enter
loopne
and
imul
jge
js
fdivp
xchg
sub
xor
xchg
push
jns
adc
cmp
call
jbe
stc
ja
adc
add
jbe
and
cli
inc
push
test
push
repnz
dec
mull
pop
leave
aaa
fbstp
mov
icebp
jo
jb
loopne
adc
pop
in
je
push
fistpl
cs
lods
outsb
hlt
inc
or
sti
cmp
insl
mov
sub
mov
and
mov
mov
ljmp
cmp
repnz
fwait
lods
stc
cmpl
mov
mov
and
pusha
push
mov
cs
inc
sub
movsl
pop
dec
aam
fmuls
sub
test
ja
dec
pop
testl
dec
jmp
jp
jge
fwait
mov
and
out
stc
or
or
adc
cmp
lds
push
pop
jmp
lock
xchg
rcrb
arpl
push
vpermi2pd
cmp
testl
dec
xor
lcall
mov
testb
mov
daa
inc
jle
icebp
sub
cmp
add
imulb
je
pop
or
xchg
daa
sub
push
loope
mov
or
pop
jmp
jb
lret
jbe
leave
adc
mov
in
rolb
mov
imul
dec
push
pushf
sub
scas
add
insl
fwait
rolb
insl
test
xchg
ss
addr16
inc
decl
and
add
push
stos
arpl
fcoms
subl
lods
stos
call
and
addr16
mov
out
faddl
xchg
sbb
adc
pop
mov
loope
xchg
xchg
int3
lods
xchg
stos
push
in
insl
insb
nop
lods
insl
hlt
xchg
nop
xor
jnp
ror
sub
sti
xchg
mov
or
mov
ljmp
mov
out
xchg
in
xor
mov
in
mov
nop
push
gs
testl
xor
loop
lds
insl
jne
dec
pop
jp
je
mov
fisttps
fidivrs
imul
or
xlat
jmp
dec
xor
cmp
mov
mov
push
pop
xchg
inc
fadd
cmc
push
test
jo
adc
pop
sub
mov
rolb
sub
add
jne
inc
movsb
lahf
cmpl
popa
outsl
rcll
fwait
cwtl
sub
int
or
jge
cmpsb
in
lcall
jnp
add
cltd
div
shr
test
mov
pop
add
mov
rclb
mov
or
push
cmpsb
xchg
mov
loop
mov
aad
push
scas
fdiv
stc
mov
mov
cmp
popf
leave
ret
rcll
cmpsb
jecxz
push
outsb
sbb
dec
mov
fcmovu
and
in
xchg
dec
xor
or
loopne
or
push
jno
push
ret
sbb
outsl
pop
lcall
sbb
jne
popf
adc
into
fneni(8087
stos
dec
push
ljmp
into
push
cmp
or
jmp
shlb
iret
cmc
rcrl
inc
xchg
aas
cmp
xor
stos
sbb
pop
mov
lock
lods
frstor
lea
lods
sbb
adc
sbb
int3
push
or
stc
cli
mov
aaa
test
jle
popa
rclb
mov
mov
inc
fucomp
fwait
xchg
icebp
add
push
inc
lcall
addl
jae
push
push
mov
or
repz
sbb
mov
cmp
xor
fisubrs
test
lds
or
cmp
pushf
and
sub
lods
sub
jmp
icebp
lcall
push
push
sub
jbe
imul
xor
je
ficomps
loopne
subl
and
lahf
aam
xchg
xchg
out
sub
pop
in
mov
mov
rcrb
or
call
rcrl
and
leave
iret
icebp
jb
rcrl
loopne
jne
jge
shlb
arpl
inc
aam
in
jnp
push
repnz
call
jne
addr16
test
add
mov
jae
push
cmp
loop
inc
or
mov
aad
test
dec
mov
jno
jge
sahf
les
lods
repz
je
testb
inc
fildll
mov
call
add
or
cmc
xchg
xlat
pop
pusha
adcl
mov
push
aaa
or
adc
fucomip
xchg
mov
add
xor
lock
push
prefetch
or
out
in
or
testl
cmpsb
in
add
push
shrl
cmpl
xchg
mov
sub
fcmovne
push
sahf
adc
cmp
pop
xchg
pushf
sbb
test
xchg
sbb
lcall
int3
mov
lcall
lods
cmc
cmp
sub
fiadds
sbbb
adc
sbb
adc
and
dec
sarb
pushf
mov
ret
int3
mov
lds
es
mov
mov
pop
push
aaa
cli
push
cmp
imul
add
lods
mov
test
stos
or
cmpsl
xchg
jno
or
add
push
xchg
movsb
fidivrl
adc
inc
jecxz
mov
add
pop
add
pop
loopne
les
pop
popf
pop
xor
mov
adc
adc
cmpsb
pushf
daa
insl
aas
mov
sarl
sar
mov
scas
stc
shlb
sbb
fucomp
das
iret
ret
jecxz
inc
sahf
fwait
xor
fstp
cwtl
fwait
xchg
outsl
and
fsubl
data16
shr
das
or
iret
sti
fisttpll
ss
ret
sub
cmp
jge
stos
cmp
stos
mov
push
jmp
push
fsin
fnstenv
mov
subl
jecxz
mov
test
add
sti
leave
sub
or
sub
add
lret
hlt
clc
popa
lret
push
jnp
sbb
enter
jnp
lock
sbb
or
int
lds
loope
jo
push
push
mov
mov
addr16
outsb
dec
mov
into
xor
dec
scas
push
pop
jb
scas
das
pop
testl
lcall
jno
nop
bound
inc
push
enter
xor
ja
cld
xor
div
adc
pop
cld
movsl
xor
or
shr
push
dec
pushf
jmp
push
lret
push
ja
pop
mov
fwait
sub
shrb
mov
mov
adc
push
rcll
cmp
jl
jo
xor
nop
aaa
or
adc
adc
or
adc
mov
insb
xchg
lods
push
inc
inc
mov
push
sbbl
pop
jmp
ja
push
jmp
rcrb
sbb
mov
push
mov
adc
ljmp
cs
push
push
shll
mul
or
mov
push
xchg
out
std
je
in
mov
out
cmp
or
aad
mov
pusha
pusha
dec
aas
and
cmpsl
cmp
and
add
iret
jno
mov
mov
sub
fs
jbe
mov
gs
loopne
mov
stos
push
add
dec
sub
add
leave
dec
add
cmp
shll
mov
shll
fmuls
mov
imul
in
incl
pop
pushf
jo
mov
ljmp
icebp
cld
pop
or
push
dec
lds
add
push
and
dec
inc
cmp
negb
shr
or
jg
out
clc
nop
push
sub
xor
add
je,pt
loop
out
sub
jp
xchg
ss
stos
pop
movsl
dec
xchg
or
or
xchg
fiadds
leave
ss
lea
imul
cmp
sbb
fisubrs
adc
test
pop
jbe
daa
ss
and
orl
sbb
lods
mov
mov
test
xor
or
pop
leave
xlat
and
adc
xor
mov
push
stos
lcall
jns
cld
or
push
inc
mov
stos
pop
shrb
pop
test
pop
icebp
and
xchg
sar
loop
xchg
sbb
mov
in
iret
fnstcw
or
in
lds
push
faddl
push
jo,pt
adcb
mov
rcl
add
mov
jl
xchg
imul
push
sub
sub
ret
loopne
inc
in
add
adc
jne
cmp
xchg
or
pop
mov
adc
cmp
lret
xchg
cltd
inc
dec
test
shl
roll
pop
push
mov
jp
mov
test
xor
add
mov
or
xlat
scas
mov
test
or
push
sti
add
mov
sub
sub
inc
repz
data16
mov
ds
jae
in
cwtl
in
xor
sbb
fisubrs
out
scas
cmp
faddl
sbb
and
sub
and
push
inc
xchg
push
scas
clc
inc
or
adc
fildll
into
in
idivl
dec
fs
out
push
fwait
sub
lock
and
data16
xchg
pop
push
jo
push
popf
jne
test
push
jg
xor
jnp
test
xor
movsl
test
add
lock
ljmp
mov
push
out
add
cmpsb
leave
pop
cld
pop
aas
push
sahf
fsubrl
add
orb
add
cltd
out
xchg
loop
xor
sbb
lods
movsl
xor
lahf
test
jno
pop
dec
push
icebp
dec
jecxz
loope
sub
add
pop
repnz
test
cmovb
adc
mov
jns
test
adc
lods
cmp
and
adc
or
movsb
push
lods
dec
iret
repz
icebp
in
mov
mov
test
jb
cmc
enter
xchg
rcll
sub
cs
cmpsb
out
repnz
enter
sbb
jp
xor
test
fisttpll
jo
shrl
out
negl
push
pop
push
push
sub
clc
test
insl
xor
jb
adc
and
addb
push
dec
ss
pop
cmpsb
int3
pusha
xor
or
jge
mov
out
and
and
mov
sub
shrl
lds
ljmp
dec
xchg
popf
stos
dec
or
stos
jns
xchg
hlt
add
test
sti
loope
mov
mov
push
popa
xor
idivl
xlat
in
out
loope
push
mov
adc
push
out
mov
pop
jle
push
jbe
nop
pop
xor
lahf
and
aas
dec
push
rcrb
xchg
or
stc
inc
dec
fsubrl
repz
pop
jo
push
inc
inc
dec
dec
sahf
pop
mov
fiaddl
pop
sbb
pop
mov
sbb
nop
dec
mov
push
mov
mov
mov
stos
sub
fsubrp
ds
pusha
aas
pop
dec
jge
inc
lods
adc
inc
in
push
mov
and
test
into
adc
jns
fistpll
repnz
lock
into
repz
fcompl
mov
push
cld
mov
faddl
ljmp
xlat
xor
in
lods
push
mov
aam
inc
adc
inc
fildll
adc
lods
repnz
xor
test
gs
into
or
andb
fsubrs
orb
shr
sbb
and
xchg
movsb
mov
mov
inc
cmp
pop
push
sbb
mov
mov
add
out
push
jge
xchg
sbb
or
pop
insb
out
jle
or
mov
or
xchg
mov
shl
into
jge
xchg
lods
gs
repz
jecxz
and
mov
xor
stc
out
push
fmulp
mov
inc
cld
sub
xchg
outsb
mov
jl
aad
scas
js
push
stos
mov
lret
jge
repz
xor
push
leave
sub
jnp
mov
xchg
xor
add
dec
xor
mov
out
dec
aas
insl
mov
mov
xchg
aad
mov
cmp
cmp
cs
icebp
dec
cmp
push
mov
add
loopne
cmp
xchg
aad
xchg
and
pusha
xchg
es
dec
cmp
mov
push
jno
call
arpl
data16
fisubl
es
mov
mov
repz
jnp
and
mov
cmp
xor
xchg
pop
push
mov
inc
jmp
cltd
loope
add
lods
negb
and
adc
xor
cmp
cli
leave
hlt
and
fsubl
or
inc
daa
loopne
cld
xchg
push
test
fwait
lds
adc
xor
jo
outsb
jne
fiadds
ss
cltd
or
popa
xor
push
sar
and
ja,pn
cmp
sbb
into
lea
inc
inc
popa
lret
popa
adc
lret
mov
mov
ds
adcb
clc
pop
lock
inc
lods
sbb
lahf
mov
sub
mov
jae
push
mov
and
jg
jae
inc
and
scas
jle
pushf
call
in
mov
mov
jno
repnz
fnstenv
sub
mov
sbb
dec
push
daa
gs
cmp
cmp
scas
scas
bound
lock
hlt
xor
daa
cwtl
mov
jnp
pop
mov
fwait
sub
mov
iret
mov
mov
dec
lahf
push
lds
sub
lcall
lods
in
neg
mov
repz
mov
fs
mov
out
sbb
fbld
fcompl
push
es
mov
scas
jp
dec
pop
stos
cltd
adc
mov
daa
aas
inc
push
gs
push
std
push
stc
fs
in
push
pop
adc
add
mov
div
or
fsubp
loope
xchg
outsb
jle
scas
or
mov
int
lods
xor
loopne
imul
lods
das
and
xchg
mov
into
scas
aad
out
dec
mov
ja
push
and
push
sbb
fstpt
cmpsb
or
lock
int
orb
mov
jp
dec
pop
sbb
cmpsb
ljmp
jbe
jecxz
cmp
imul
pop
lahf
mov
xchg
cmpsb
repnz
pop
xchg
or
push
push
rcll
add
cmp
setp
inc
lret
outsb
and
outsl
lahf
cmp
xchg
outsb
in
adc
or
cltd
pushf
push
pop
and
aaa
sbb
jmp
pushf
push
mov
out
adc
xchg
sub
inc
or
lret
fs
andb
int3
pop
xor
cs
fs
mov
xchg
mov
xlat
ds
cmp
cmp
dec
add
js
sub
sub
popf
int
mov
mov
inc
roll
outsb
aaa
and
test
out
and
popf
sub
iret
lea
sub
jle
xor
dec
pop
or
inc
popa
cmp
cmp
repnz
cmc
hlt
dec
and
xor
sbb
sbb
dec
sub
and
push
sbb
xlat
mov
insb
out
mov
push
aam
pop
outsl
ds
inc
mov
pushf
cmp
sbb
sahf
xchg
push
xchg
or
cmp
pop
hlt
jo
lahf
loope
dec
cld
lret
je
inc
dec
xor
scas
imul
daa
mov
push
adc
pop
inc
cmpsl
sub
ljmp
or
push
fimuls
outsb
xchg
js
inc
repnz
mov
xchg
xor
mov
xchg
jg
popf
sbb
lahf
les
and
dec
mov
mov
adc
inc
iret
les
pop
mov
sbb
cmp
pop
sbb
mov
and
and
xchg
fs
or
lock
jl
sub
lret
xlat
xorb
lock
mov
mov
sub
in
xchg
clc
add
push
mov
and
or
inc
sbb
mov
xorl
jns
arpl
inc
and
inc
pop
jle
and
push
push
les
mov
cmc
pop
pop
and
es
add
mov
stos
imul
dec
fbstp
push
imul
test
sbb
mov
lods
dec
mov
cmp
mov
fadds
data16
push
jle
outsb
jae
arpl
push
ds
cs
mov
out
repz
jecxz
sarl
and
jle
outsb
jae
arpl
push
ds
cs
mov
out
repz
jecxz
sarl
adc
jle
outsb
jecxz
arpl
push
subl
fisubs
ljmp
sub
dec
jp
outsb
jae
jae
push
ds
out
mov
pop
fs
sbbl
sarl
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
aas
lea
popf
in
outsl
pushf
sbb
jmp
scas
sbb
out
dec
out
pop
pop
lods
bsr
lea
popf
pop
in
dec
std
jg
outsl
repz
sub
scas
sbb
decl
pop
pop
or
jnp
pop
das
jmp
fisttpll
jg
outsl
out
lahf
sub
lret
cmpsb
sbb
aas
cmpb
jmp
jg
aam
outsl
add
dec
pop
sbb
cmpsb
mov
mov
not
mov
jno
mov
push
dec
scas
cmpb
outsb
bound
inc
jbe
xor
and
shlb
out
and
js
and
pop
adc
aam
insl
pop
add
add
cmp
fildll
popa
sahf
jno
fsubrs
ret
popf
pop
stc
arpl
lahf
or
dec
fnstsw
js
lock
mov
and
jnp
inc
insb
jo
bound
or
and
push
cli
push
in
scas
in
mov
cmpsl
push
out
cmovb
mov
test
insl
lret
ja
add
out
aaa
inc
and
popf
aas
stc
das
popf
pop
in
dec
std
jg
outsl
dec
lahf
sub
scas
and
push
iret
xchg
call
outsl
imul
icebp
sbb
sub
imull
dec
shrb
adcl
cmp
sti
dec
addr16
cmp
pop
out
int
loop
pop
lret
and
imul
psllw
mov
outsl
fstpl
or
iret
jge
dec
out
pop
pop
lods
bsr
lea
popf
pop
in
dec
std
jg
outsl
fstpl
or
iret
jge
dec
out
pop
pop
lods
or
mov
jge
sub
inc
hlt
or
inc
cmp
repnz
mov
sbb
mov
jmp
add
enter
add
aaa
pushf
mov
xchg
jne
dec
xor
mov
pop
or
adc
mov
adc
jnp
lret
lahf
out
fs
lock
in
jne
mov
test
cmp
ret
mov
pop
ds
int
test
adc
pop
mov
icebp
cmp
adc
xchg
outsb
sub
adc
mov
jecxz
inc
ds
movsl
int
mov
push
outsl
mov
add
mov
lock
std
fidivrs
xchg
cld
test
lock
sbb
arpl
inc
ja
jo
cmpl
mov
in
fsubrs
mov
sbb
cld
movsl
adc
xor
or
pop
ja
pop
pop
jno
out
xchg
lea
into
cmp
and
xchg
sbb
pop
lahf
repnz
gs
mov
sub
and
jae
loopne
or
lret
and
les
cmp
ret
sbb
stc
leave
cmpsl
test
mov
pop
fimull
jo
ret
or
pop
in
aas
insb
js
jb
and
mov
mov
xchg
cwtl
in
in
push
js
iret
inc
rolb
jl
sti
fs
mov
sahf
sbb
xor
out
inc
xorl
cmp
xchg
push
add
cmp
repnz
add
adc
scas
loop
xor
pop
and
fistl
fildl
or
inc
into
fstl
cmp
roll
jmp
into
mov
in
loope
int
lret
loop
outsb
out
mov
out
repnz
stos
cltd
mov
push
jecxz
sbb
xor
leave
jmp
dec
scas
cmc
int
cs
movsl
loope
inc
add
test
xor
fs
data16
lcall
sti
int3
pop
rcll
mov
sbb
lahf
addb
das
ljmp
rorb
ds
or
push
test
les
jl
mov
sbb
int3
push
jg
mov
inc
sti
push
ss
and
mov
and
or
decl
pop
test
enter
xor
push
and
cld
jb
pop
fcoms
and
and
rorl
nop
fidivrs
iret
pop
add
rcrb
shll
popf
outsb
cmp
rolb
arpl
fs
movsl
mov
xor
lahf
mov
jnp
shl
flds
js
movsl
sti
pop
and
adc
jbe
push
dec
mov
loopne
xchg
pop
fmul
xor
and
cmp
out
sbb
fwait
movsb
lret
cmc
mov
outsl
dec
sub
add
and
mov
jle
cmp
out
cs
mov
pop
stos
mov
mov
sub
mov
dec
inc
daa
xchg
ds
push
adc
adc
add
lret
fcmovnbe
enter
std
ret
loop
out
xchg
xchg
gs
jecxz
lea
xor
or
jmp
in
sub
mov
loopne
in
ficoml
cli
je
sti
push
insl
call
pusha
mov
out
je
mov
cltd
xchg
arpl
stc
cs
dec
insb
cmpsb
insl
cli
push
xchg
push
pop
mov
sub
into
mov
loop
test
movsb
add
enter
ret
cmp
rorb
aad
push
mov
cmp
and
rolb
xchg
frstor
loopne
andb
nop
mov
rcrb
arpl
fldl
popf
add
cli
mov
fnstenv
je
jb
cmc
jge
je
mov
addr16
rcrl
xor
and
xchg
or
jmp
imul
xchg
add
lahf
fildll
jp
inc
dec
bound
or
fsubrp
sti
mov
in
mov
lods
pop
mov
aad
in
xchg
inc
out
pop
cmp
int3
jbe
cmp
mov
int3
pop
in
xchg
insl
lret
jnp
jnp
jbe
lcall
dec
popa
mov
sti
loopne
fistpl
ljmp
mov
in
hlt
lock
aam
xchg
lods
pop
pop
cmp
stos
mov
mov
shlb
call
jle
sub
mov
mov
jg
fsubl
imul
mov
jno
ljmp
sub
mov
in
jg,pt
movb
clc
jae
inc
iret
repz
in
mov
adc
pushf
lret
ja
pop
jl
push
adc
stc
sub
aam
ret
loopne
lahf
push
pop
sar
sahf
push
or
jl
mov
xchg
in
mov
sub
pop
rol
sti
jbe
daa
adc
jnp
gs
push
loopne
push
daa
bound
adcl
and
loop
adc
stc
xchg
jnp,pn
cmc
pushf
adc
sub
adc
fisubl
ja
sbb
mov
rolb
mov
mov
ljmp
lock
mov
mov
std
add
or
popa
adc
out
incb
cmp
lahf
adcl
cmp
fbld
test
out
mov
mov
in
jae
cmpsl
jg
add
xor
mov
jne
ret
ficoms
xchg
in
icebp
mov
push
adc
stc
xor
sbb
jno
aas
cmpsl
aaa
dec
int
sub
fwait
fwait
or
in
pop
mov
ljmp
pop
test
ss
xchg
sar
lret
xchg
scas
xor
in
push
cmc
push
and
push
in
mov
push
cmp
sub
imul
jnp
insl
arpl
sbb
outsb
pop
pop
ja
aad
nop
xchg
shl
ret
aam
jb
inc
inc
inc
fidivrl
cli
leave
sub
adc
pop
dec
aas
and
jle
fbstp
cmp
repz
sub
pop
fldln2
mov
dec
fisttpl
cmp
cs
scas
push
mov
in
dec
jp
inc
stos
orb
mov
jg
bound
mov
mov
ror
jae
adc
adc
leave
or
testb
ja
inc
stos
in
or
push
leave
dec
stos
and
push
adc
inc
sub
pop
xor
cmpsb
cmp
cs
dec
mov
sbb
aad
mov
ja
icebp
and
jge
mov
add
xchg
pop
push
adc
mov
cmp
cli
and
mov
inc
mov
or
fldt
stc
call
ljmp
sbb
xchg
stc
push
ds
fwait
call
sub
lods
mov
movd
xor
aam
arpl
mov
js
jno
rolb
fildll
enter
bound
shrb
pop
popa
sbb
enter
adc
or
push
xchg
arpl
cmp
pcmpeqb
jl
xchg
out
shlb
out
cmpsl
inc
fimuls
push
inc
mov
dec
ret
and
call
sbb
scas
pop
mov
adc
cmpsb
pop
mov
push
xchg
jp
test
mov
mov
jnp
lret
bnd
sub
adc
out
add
mov
ds
and
and
sub
cmovbe
sub
xchg
push
add
push
add
insl
pushl
dec
sbb
repz
sbb
or
mov
iret
push
leave
lcall
add
or
sbb
xchg
lcall
imul
inc
gs
enter
in
mov
sub
xchg
notb
xor
stos
push
dec
cmp
and
inc
out
pushl
xor
stos
and
stc
jns
and
sub
pop
pop
push
xor
jno
pop
outsb
aas
addr16
push
cmp
inc
or
xchg
dec
daa
pop
sbb
jecxz
inc
sub
mov
fstl
jp
inc
jg
cmp
sbb
loop
lds
aad
mov
in
in
leave
lcall
lret
xlat
dec
lcall
xchg
movsl
mov
aam
sar
push
mov
outsb
xor
sub
test
jae
pop
cmc
push
xchg
inc
jb
in
mov
out
push
bound
stos
dec
stc
xlat
and
pushf
sub
jo
fisttpl
shlb
or
ss
or
inc
outsl
je
and
inc
in
rorl
adc
bound
sub
xchg
xchg
ret
lods
jae
jp
lret
add
testl
xchg
lods
xor
leave
ficoms
dec
test
cwtl
and
nop
xchg
xor
pop
adc
jb
jns
lock
into
mov
mov
mov
mov
jge
cmp
jmp
sub
add
pop
push
mov
xchg
adc
push
ljmp
repnz
xchg
inc
push
mov
and
jmp
mov
daa
add
jns
mov
mov
cli
mov
lock
cwtl
xchg
inc
fisttpl
lods
out
xchg
aam
inc
xor
test
inc
cmpsl
dec
inc
mov
dec
and
cmc
jo
xchg
push
and
push
pop
xchg
jecxz
daa
rcll
sub
sub
hlt
push
fidivrs
xor
or
mov
xchg
pop
cmc
xor
loopne
test
mov
sub
lods
mov
pop
lcall
or
and
jecxz
mov
xor
push
in
cs
pop
lods
aam
lds
xor
dec
imul
shr
ss
outsb
and
inc
mov
cmp
cltd
sbb
addr16
cmpsb
ljmp
sub
mov
das
add
enter
cmpsl
pop
adc
xor
lcall
inc
test
mov
imul
sub
pushf
or
cmp
sbb
inc
lahf
inc
add
int3
leave
xor
push
cmp
int3
jb
adc
add
sarl
out
pop
sahf
jmp
in
orb
xlat
push
push
push
repz
add
cli
imul
iret
inc
cmc
adc
push
enter
inc
mov
pop
enter
loop
js
xor
imul
out
imul
pop
call
sub
dec
mov
dec
xor
jbe
lcall
xchg
jnp
insb
stos
sbb
mov
inc
stos
and
sub
jae
push
mov
bnd
mov
fiaddl
dec
jle
es
fs
add
iret
ds
popa
sti
clc
das
pop
fnsave
out
test
sahf
stos
popa
cmpsb
jg
or
cmpsb
inc
xchg
aaa
cmc
or
xchg
cs
or
push
sti
pop
mov
sar
arpl
lret
inc
sbb
mov
je
sbbb
jbe
stos
loop
and
xchg
push
fldz
aad
sbb
xor
jecxz
lret
xchg
ss
addr16
push
add
aad
cmp
push
lret
adc
add
mov
ja
orb
fcoms
inc
scas
into
lock
jnp
or
adc
sbb
mov
jmp
and
ret
lahf
scas
fldt
sub
rcrb
int3
ret
add
in
push
fidivrl
jnp
ficoms
sahf
in
cmp
push
lock
sub
jl
in
xchg
inc
imul
lahf
vpsubq
test
fnsetpm(287
das
xchg
sub
clc
aam
aaa
xchg
enter
pop
lret
loop
adc
fisttps
mov
and
jnp
lea
stos
jno
test
cmp
ds
adc
mov
pop
data16
mov
jbe
popf
aaa
cli
cwtl
test
lcall
xor
icebp
adc
mov
cmpsb
jmp
push
xchg
add
add
adc
icebp
jbe
icebp
push
adc
and
stos
xchg
rcrl
cltd
add
lock
and
or
leave
mov
mov
insb
xor
push
addr16
loopne
mov
dec
mov
cmp
push
dec
adc
mov
cmp
test
mov
xchg
lods
cli
outsb
inc
xchg
mov
and
adc
inc
cmp
loopne
in
add
icebp
out
push
sbbl
or
andb
add
mov
mov
lds
fnstenv
outsb
dec
repnz
out
das
push
fnstsw
dec
push
hlt
pop
cmc
lock
jnp
or
jmp
shlb
movsb
lea
inc
or
push
subl
aam
sti
pop
or
dec
dec
mov
sub
scas
dec
outsl
jp
cmc
flds
pop
mov
es
cli
push
adc
push
dec
pushf
dec
dec
dec
cmp
popf
push
ret
or
inc
pop
cltd
divl
sbb
mov
and
inc
sub
imul
or
push
mov
in
mov
add
mov
shlb
stos
pushf
and
mov
mov
outsl
cwtl
jmp
insl
mov
sub
cmpsl
in
mov
add
rcl
cmpl
dec
and
mov
outsb
push
and
int
dec
repnz
inc
jno
cmp
xchg
fs
rorl
xchg
push
dec
jno
dec
pop
and
xchg
cmp
or
dec
cmp
fdivr
dec
imul
jge,pt
movsl
hlt
lret
fisubl
dec
xchg
jge
push
imul
clc
sub
pop
lea
test
pusha
cmp
mov
loope
cmp
aaa
or
add
test
xchg
xchg
sbb
test
add
addr16
and
jb
add
scas
fcomi
outsl
and
adc
or
adc
or
add
test
sub
sub
ret
mov
dec
xor
xchg
fcoml
jp
lods
scas
cmp
mov
mov
popf
loopne
sub
cmp
das
aaa
cmp
adc
fs
xchg
in
lahf
aaa
hlt
cmp
sbb
sub
xor
mov
notb
test
cmpsl
push
mov
stc
das
jecxz
in
cwtl
cmp
outsb
ds
popf
and
adc
or
enter
xchg
repnz
loope
sub
repnz
cmp
daa
rol
push
ret
loop
xchg
imul
fmull
adc
mov
in
imul
cli
xchg
add
aam
mov
mov
mov
cwtl
adc
mov
jno
cmp
jns
cmc
and
sub
mov
dec
nop
pop
dec
jb
add
outsb
xchg
es
sub
fstl
inc
ja
dec
iret
dec
add
popa
iret
les
cmp
or
cld
inc
push
pop
int3
sbb
lea
inc
lods
rcl
ds
js
xor
cmpsb
and
pop
sbb
push
divb
loop
push
sbb
sbb
add
mov
in
loop
or
in
mov
or
add
sti
mov
add
in
addr16
loopne
movl
pop
inc
and
gs
push
ds
inc
dec
and
out
inc
pop
ret
adc
cwtl
mov
out
xor
xchg
rcll
test
or
fsts
jge
pop
enter
mov
lahf
call
and
aam
test
ljmp
cmp
dec
pop
in
lods
inc
mov
int
lds
push
push
aad
mov
repz
sub
xchg
pop
adc
adc
leave
pop
mov
cmp
mov
fcoml
mov
add
mov
jmp
cmpsl
sub
in
mul
pop
aad
mov
fwait
rolb
sub
jmp
mov
out
jmp
jbe
pop
imul
lret
mov
xchg
stos
jge
pop
out
jmp
mov
dec
int
sbb
cltd
ret
xor
outsb
test
sub
scas
fsubr
push
outsl
push
cli
inc
inc
mov
sub
sbb
cmc
sub
pop
and
push
xchg
fisubrs
repnz
or
stos
test
lret
mov
dec
sbb
ret
sbbb
mov
ss
add
int3
decb
mov
dec
cmp
popa
test
in
int3
jg
rcrl
cmc
movsl
test
in
test
movsl
scas
and
mov
cmp
xor
imul
out
sbb
ret
inc
dec
cmp
shll
pop
out
mov
xor
jge
xor
mov
dec
mov
loopne
inc
ss
push
dec
leave
hlt
and
push
dec
gs
subb
lds
aas
stc
push
push
pop
sahf
xchg
push
orl
mov
adc
mov
out
and
mov
dec
mov
dec
imul
xor
mov
imul
enter
call
stc
xchg
mov
inc
xor
push
sub
cld
pop
mov
pop
sbb
cmp
jge
mov
cld
push
xchg
je
or
add
dec
fadd
push
add
test
sub
cmp
lret
imul
les
or
push
jecxz
mov
jae
mov
rorb
cmp
aad
arpl
in
or
sbb
mov
lcall
rol
dec
xchg
dec
jmp
pop
xor
push
or
je
imul
inc
add
dec
sub
aad
dec
adc
repnz
or
jb
mov
test
int
sbb
pop
jb
imul
popa
jno
xchg
dec
or
mov
jg
xor
test
or
stos
jmp
into
push
daa
or
fwait
inc
out
arpl
popa
dec
fsts
fnstenv
jecxz
inc
cltd
out
cwtl
cmp
movsb
imul
jle
jle
call
scas
lods
mov
not
xor
mov
pop
adc
mov
fldcw
aam
pop
add
mov
xchg
pop
addr16
inc
enter
scas
jecxz
mov
xor
into
popa
fs
push
pop
add
push
push
jne
sub
push
jae
cwtl
popl
adc
mov
push
push
or
in
pop
ljmp
xchg
popf
inc
xchg
iret
sbb
mov
aam
mov
icebp
or
and
cli
jbe
pushf
insb
mov
pusha
mov
rolb
push
fld
push
pop
mov
jnp,pn
sarb
push
les
jg
stos
xchg
sarl
lcall
push
in
iret
and
fwait
daa
push
mov
in
inc
or
inc
dec
mov
aaa
sbb
bound
insl
dec
fidivs
data16
je
out
popf
sbb
mov
popa
jmp
dec
test
add
push
outsb
mov
pusha
push
aad
mov
gs
fsubs
pop
ret
mov
divl
inc
cmpl
arpl
repz
inc
xor
scas
adc
out
mov
and
lret
mov
pop
ds
sub
insl
inc
sbb
ljmp
out
dec
or
icebp
cmp
pop
push
repz
mov
sbb
push
int3
mulb
jge
jb
mov
xchg
imul
dec
enter
loop
push
lcall
bound
ret
push
enterw
imul
ljmp
inc
fcoms
mov
neg
adc
xchg
paddq
dec
fdivrl
and
sahf
std
pop
or
pop
sub
cwtl
mov
cmp
js
mov
dec
xchg
xchg
jbe
ljmp
iret
ljmp
and
jg
jbe
mov
add
cmp
test
fidivrs
lds
push
shl
imul
jmp
pop
gs
cmp
inc
dec
mov
ljmp
push
ljmp
or
or
adc
popf
stos
and
fdivl
xchg
loopne
add
pop
pop
jb
mov
mov
scas
add
int
pop
push
ret
and
jnp
test
cs
rcll
inc
jno
jp
push
pop
cmp
sub
cli
cmp
xor
in
and
or
pop
lea
mov
xchg
fsub
loop
push
push
cmc
pop
jb
fcoms
sbb
jne
sbb
cld
or
mov
cmpsl
fdivr
push
rclb
dec
das
cmp
mov
cmc
je
mov
push
mov
push
or
insb
inc
fidivs
das
stc
lcall
adc
add
cs
inc
ret
or
sub
xchg
pop
xor
cmpsb
pop
nop
ficoml
pop
adc
scas
pop
dec
mov
push
pop
vunpcklps
xor
xchg
pop
shrb
sbb
insb
sub
pop
outsb
jge
rorl
cmp
sub
adc
xor
aas
push
inc
mov
mov
pushf
xor
imul
movsl
push
push
out
cltd
in
cmpb
xor
stc
push
movsl
test
jmp
call
pop
aas
xor
push
mov
push
mul
mov
sub
dec
mov
sbb
push
mov
ds
mov
jle
cmp
jno
sub
inc
ds
adcl
cmp
clc
outsl
cmp
inc
mov
addr16
call
mov
pop
pop
add
add
mov
jnp
mov
pop
in
dec
std
jg
outsl
fstpl
or
iret
jge
dec
out
pop
pop
lods
bsr
lea
popf
pop
in
dec
std
jg
outsl
fstpl
or
iret
jge
dec
out
pop
pop
test
das
cltd
pop
in
dec
xchg
jg
outsl
fstpl
or
iret
jge
inc
out
mov
imul
std
jg
outsl
sbb
adc
adc
adc
inc
or
adc
add
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
xchg
ds
mov
cmpsb
jno
dec
mov
xchg
in
mov
inc
push
push
ss
es
add
jbe
xor
loope
icebp
add
lds
inc
push
jno
popa
es
outsb
inc
adc
xor
dec
cmpsb
repz
mov
out
push
sahf
push
xor
or
ds
and
xor
roll
xchg
mov
sbb
sbb
jmp
mov
push
pushf
sti
fs
sbb
mov
inc
insl
std
loope
repz
sub
mov
add
ja
cwtl
mov
jle
fisttps
pop
or
push
int3
insb
aam
in
dec
cld
mulb
iret
adc
loope
and
add
dec
adc
dec
push
mov
add
jbe
bound
repnz
mov
je
movsl
int
imull
cli
inc
cmpsb
scas
jno
push
inc
adc
add
lret
movb
or
insl
dec
inc
inc
insb
cmp
sahf
arpl
add
jbe
push
mov
roll
add
xor
movl
cmp
inc
jmp
rclb
ret
fistpll
enter
pop
add
outsb
das
xor
push
xchg
test
nop
out
ret
aam
out
stos
mov
jae
add
ja
arpl
xor
pop
add
pop
call
cmpsl
xchg
in
xchg
mulb
push
push
ss
es
add
jbe
xor
loope
icebp
add
mov
inc
push
push
ss
es
add
jbe
xor
inc
sbb
sbb
dec
stc
cli
jg
jno
movsb
pop
je
fbld
add
into
test
test
pop
loop
scas
push
cmp
add
jl
jne
push
movsb
iret
in
cmp
test
addb
mov
cmp
test
add
inc
lret
cmpsl
in
jno
adc
ss
and
push
sbb
fs
adc
jmp
adc
dec
pushf
ret
mov
adc
cmc
lock
es
mov
xchg
arpl
xor
pusha
and
call
test
push
pop
sbbl
stc
rcrb
xchg
inc
jp
fwait
je
mov
into
ds
in
sti
dec
sbb
dec
and
push
or
mov
jnp
jmp
inc
int
pop
test
cmp
dec
aas
pop
sub
shrb
popf
aas
stc
arpl
lea
jae
aam
ret
mov
or
outsl
or
mov
dec
out
mov
scas
imul
in
stc
into
mov
jl
xchg
rol
movsb
jle
stos
lock
test
cld
loope
mov
decl
js
ret
stos
lds
sbb
aaa
sbb
sub
cmpsl
addr16
bound
gs
cmp
inc
iret
mov
jmp
push
push
inc
in
sub
adc
sub
mov
sbb
xchg
cmp
pop
dec
repz
inc
sarb
jmp
mov
cs
mov
mov
pop
mov
std
sahf
sbb
dec
dec
sarb
mov
push
add
das
mov
mov
fldcw
push
jg
mov
cmp
add
xchg
inc
addr16
jmp
pop
jns
test
mov
jl
fnstsw
clc
rol
ficomps
pop
jl
push
pop
push
inc
inc
inc
adc
inc
add
sub
xor
out
in
sub
imul
mov
push
inc
jecxz
xor
jns
jno
jmp
sbbl
mov
inc
mov
sub
cmc
push
das
mov
push
repz
jge
pminub
enter
jmp
push
int3
divl
loopne
cli
or
in
push
shr
jl
dec
inc
das
jl
adc
push
clc
test
stos
mov
or
ret
data16
push
fdivrl
sub
sbb
movsl
outsl
mov
in
popa
mov
addr16
jmp
cmp
cmpsl
into
push
and
imul
insb
inc
mov
int3
ret
leave
pop
stc
sub
data16
std
or
lds
sub
or
sub
or
jecxz
clc
and
or
mov
lcall
out
inc
xor
sub
insb
lock
incb
xor
sub
cs
out
xor
or
adc
das
xchg
pop
jnp
xor
jo
inc
sub
popa
pop
mov
inc
jp
cmp
mov
shl
cmc
lcall
in
mov
shrb
sbb
enter
xchg
out
fstpt
stos
push
pop
cmp
dec
cmpsl
popa
mov
int
les
lods
mov
mov
sub
dec
sub
js
and
cvtps2pd
hlt
lahf
and
mov
xchg
mov
loopne
and
and
pop
popl
popf
xor
in
push
xlat
mov
adc
iret
aad
fs
stc
jp
cmp
xorl
xchg
xor
push
cmp
gs
pop
into
lret
push
lea
lods
fyl2x
jl
repz
ss
add
idivl
jae
pop
jmp
pushf
dec
xor
lods
jecxz
cmc
aaa
int
in
addr16
mov
push
je
xor
ret
pop
fcoml
mov
andb
jle
cmp
xor
dec
sub
jnp
inc
lret
aaa
or
and
movhps
inc
cld
out
out
or
push
sbb
mov
or
mov
jns
fildl
pop
push
mov
mov
mov
or
ror
in
rcrl
pushf
cmpsb
sbb
out
inc
mov
out
inc
or
jo
sbb
pop
mov
loopne
mov
sub
shll
xorb
sbb
pop
mov
popf
pusha
dec
outsb
aad
daa
jnp
aad
inc
sti
pop
pop
push
rcl
cmp
pop
mov
mov
sbb
aad
in
ret
push
mov
push
mov
shrl
xor
pushf
outsb
or
xchg
lods
scas
dec
push
jge
mov
cwtl
xor
xchg
repnz
add
inc
push
xor
cmc
cs
push
fdivrs
insb
jne
and
xchg
mov
nop
mov
leave
stos
mov
or
rcr
jae
out
into
add
push
jnp
mov
push
rcll
aas
sahf
dec
in
icebp
leave
push
jo
ret
call
sub
pusha
cli
fiaddl
push
lahf
hlt
std
movsb
jle
push
xor
push
pop
sbb
mov
cli
dec
inc
xlat
fs
sub
nop
dec
jge
push
sahf
insl
mov
mov
sub
cltd
stos
xchg
int3
loop
out
cmp
test
or
sub
or
mov
repz
repnz
enter
inc
scas
push
pop
aad
mov
insl
inc
loope
and
lock
xorb
sbb
frstor
push
jg
fstps
sub
xlat
out
pop
add
mov
sub
and
adc
or
or
fisttpll
push
scas
inc
dec
ss
sub
shl
ret
cmp
jae
call
ret
jno
jbe
lods
adc
jmp
insb
jno
jnp
out
out
sbb
jmp
cmp
repnz
cmc
das
adc
popf
shrb
inc
push
dec
jnp
ljmp
aad
xor
outsb
in
lret
insb
std
leave
fadds
into
mov
mull
sub
insb
ret
lahf
inc
outsl
cld
mov
jne
mov
stos
and
orl
jbe
dec
test
jp
outsl
adc
cmp
loopne
mov
xor
loopne
inc
jmp
test
ds
out
sbb
add
fsubs
leave
enter
mov
pop
xchg
test
sbb
inc
fisubs
std
stos
jecxz
sub
xchg
pusha
notb
add
push
sub
sbb
hlt
imul
cmpsb
out
les
or
dec
mov
int3
popf
push
add
xor
add
cwtl
cmp
xor
es
sub
call
inc
std
xchg
sti
mov
mov
in
sbb
push
inc
or
mov
sub
xor
icebp
fs
xchg
sbb
ret
mov
popf
fdivr
rcl
and
arpl
inc
adc
in
pop
dec
xchg
out
inc
mov
sar
cs
push
pop
loop
or
jecxz
call
xlat
jae
es
xor
bound
sub
pop
enter
into
xchg
pop
mov
inc
cmpsb
ja
push
sti
stos
push
lock
push
mov
shlb
sub
dec
mov
or
mov
test
push
sarb
or
bnd
int
mov
adc
in
hlt
je
xor
mov
or
or
push
cmp
enter
out
mov
add
inc
fiaddl
cwtl
lret
cld
mov
bound
sub
mov
sar
repnz
jne
out
xchg
jecxz
filds
mov
sbb
test
cmp
sbbb
inc
mov
movsl
inc
cmpb
cmpsl
or
push
aas
add
dec
fcmovbe
add
add
dec
or
insl
in
and
imul
jg
cld
cmp
dec
cmp
add
push
fisubs
adc
cmc
andl
outsb
js
lds
mov
mov
or
lods
add
sbb
je
pop
int
jecxz
sbb
cmpsb
lret
notl
popa
fidivrs
mov
sub
je
jg
push
aaa
call
pop
jge
nop
sub
add
xchg
jge
stos
dec
movsl
decb
cmpsl
sub
mov
sub
dec
pop
fimuls
jns
outsb
push
or
bound
test
or
mov
cmp
mov
pop
xchg
out
repz
aad
sbb
add
adc
sbb
pop
sbb
ror
jne
sti
subb
sbb
inc
inc
dec
out
std
cmp
inc
andl
loopne
xor
sbb
dec
xchg
enter
or
fdivrl
adc
and
xchg
sbb
movl
lods
mov
daa
data16
or
jo
jecxz
xor
addr16
std
fcomps
jmp
and
push
push
mov
lods
call
das
push
lret
jo
and
out
cmpsb
jbe
lods
sarb
mov
xlat
scas
mov
mov
fcomps
mov
sub
xor
pop
xor
sbb
imul
bound
xlat
dec
sarl
xchg
pop
inc
loopne
dec
std
lock
int
fidivrs
loope
mov
rcrb
xchg
push
xor
cld
test
loopne
push
negl
pop
sub
mov
sub
add
xor
mov
insl
scas
mov
jge
xor
jnp
aad
adc
sti
roll
xchg
lods
in
scas
test
and
icebp
or
test
divl
xchg
pop
dec
or
enter
dec
fildll
ja
lock
xor
add
in
cmp
sbbl
ss
cmp
daa
fwait
mov
xchg
lds
inc
sub
stos
hlt
add
addr16
test
ret
push
add
test
loope
bound
stos
stos
adc
adc
push
lods
mov
cmp
xchg
xchg
push
sub
push
xor
movsl
pandn
jge
ret
out
mov
stos
pop
loope
mov
cmpsl
jmp
inc
in
pop
sub
jne
into
rclb
aas
das
add
call
push
sub
pop
sub
or
ja
scas
inc
fimuls
mov
cltd
into
push
and
inc
inc
aaa
sbb
cmp
cmpsb
and
idiv
lcall
lret
aam
mov
jns
and
daa
dec
pop
jg
pop
out
pop
into
adc
ficoml
stos
sub
aam
icebp
imul
mov
repz
repz
mul
pusha
stos
or
lret
xchg
fsubl
jo
pop
pop
and
dec
sbb
xchg
test
sbb
xor
xor
imul
shl
pop
dec
mov
pop
adc
xchg
sbb
sbb
sbb
adc
cmp
push
sub
jo
push
add
inc
test
in
push
push
out
jge
mov
push
and
mov
push
fidivl
stos
push
jb
and
add
lds
subl
inc
js
cli
ja
jmp
mov
push
fdivrs
sub
jo
dec
loop
dec
std
pushl
inc
mov
loop
mov
in
xchg
xchg
mov
out
add
inc
and
cltd
fimuls
jbe
adcl
sbb
push
inc
js
mov
gs
test
sbb
push
push
mov
lods
mov
or
sbb
jno
ds
xor
pop
jne
cli
imul
push
or
pop
pop
pop
out
icebp
xchg
movsl
fisubrl
pushf
nop
pop
popa
mov
xlat
repz
cmpsl
cs
dec
cmp
movsb
push
mov
adc
xchg
pushf
jb
pop
cmp
in
push
clc
cmpb
mov
cmp
or
imul
ds
or
loope
pop
add
cld
push
fcomps
jbe
lea
sub
scas
mov
ret
ja
idiv
mov
or
mov
mov
adc
inc
push
mov
push
outsl
sub
xchg
repz
adc
icebp
test
mov
mov
and
test
push
dec
add
into
gs
daa
lods
or
lret
xchg
mov
add
and
sbb
lret
imul
addb
out
mov
cmpsl
jbe
xchg
mov
mov
push
push
fwait
push
repz
bound
outsl
jae
xor
jmp
add
xchg
out
fstps
aas
mov
iret
fldlg2
cmp
into
les
mov
sbb
lahf
lods
push
adc
push
sub
ret
mov
repnz
and
adc
fistps
jge
repnz
jbe
sub
pushf
pop
aas
or
xchg
pop
mov
and
fs
insb
pop
icebp
pusha
in
cmp
loopne
in
xlat
aad
xor
push
sbb
call
ja
inc
mov
inc
scas
ja
js
mov
in
pop
push
inc
ret
sbb
mov
inc
std
out
jo
mov
jle
ret
vprotq
out
mov
xchg
loopne
mov
faddl
jl
fdivrl
sub
pop
jbe
rolb
hlt
or
inc
sub
xor
fldl
cld
jae
cmp
xchg
mov
xor
mov
aam
je
cli
sub
dec
add
mov
push
jbe
or
fwait
xchg
jl
shll
jo
inc
add
inc
and
pushf
mov
push
in
dec
adc
jg
dec
push
psrad
mov
pop
xchg
xchg
sub
and
cltd
inc
icebp
lcall
pushf
inc
mov
adc
push
in
rclb
subl
sbb
std
xchg
lods
adc
xchg
and
dec
or
fisubrl
adc
stc
sahf
filds
leave
dec
sbb
pop
push
arpl
pop
loope
sti
cld
push
push
shr
xor
xchg
lock
pop
fdivrl
adcb
sub
imul
fwait
or
sahf
jge
mov
xor
jle
loop
xchg
sbb
xor
ds
inc
inc
jnp
jb
dec
sub
or
add
lea
aad
jbe
xor
pop
mov
movsl
iret
push
add
out
pop
rcrb
test
cmp
mov
dec
cmpsb
aad
jmp
xchg
dec
add
mov
and
or
in
cwtl
xchg
adc
out
adc
xor
lods
fcomp
lcall
mov
cmp
pop
inc
dec
adc
xor
imul
pusha
decl
jmp
dec
adc
jg
gs
jge
lock
popa
dec
fsubs
and
icebp
pop
cltd
push
mov
mov
into
sub
mov
sbbl
sub
iret
push
xchg
int
rorl
in
out
xchg
pop
jl
rcl
sbb
cs
xchg
mov
int3
lock
paddusw
bswap
or
jg
js
and
cld
dec
xchg
int3
pop
iret
filds
add
jge
xor
sub
stos
mov
movsl
cwtl
mov
leave
stos
pop
push
scas
mov
pop
mov
int
push
inc
leave
cltd
fdivr
mov
jle
pop
push
ret
add
xchg
popf
cmp
mov
jnp
pop
sbb
or
cmp
push
je
xchg
imul
mov
test
mov
mov
ret
xlat
ret
cltd
cmp
mov
cmp
sbb
lahf
or
inc
rol
repz
pushf
dec
and
pop
shll
mov
ja
push
sub
lods
adcl
push
add
loop
cs
idivb
xchg
mov
fidivs
inc
cmp
jmp
orl
mov
fdivrp
lahf
repnz
add
std
out
lcall
ds
or
jb
jmp
mov
mov
sbb
call
cltd
dec
test
push
pop
mov
jp
iret
addr16
add
dec
fscale
mov
outsb
je
nop
fmul
and
push
pop
xchg
ds
mov
arpl
add
pushf
smsw
xor
mov
dec
inc
neg
jb
mov
push
imul
cli
and
dec
insl
or
lock
or
dec
or
adc
hlt
mov
xchg
inc
stos
adc
imul
pusha
in
out
icebp
sbb
cltd
or
das
fldenv
adc
mov
sub
xor
pop
scas
aam
scas
add
sub
mov
jo
mov
sub
inc
jbe
dec
stc
mov
mov
or
dec
mov
lret
pop
mov
push
xchg
sub
repz
jb
aad
mov
leave
movsl
or
jnp
rorb
and
rorb
or
mov
in
and
lods
out
ret
cmp
cmpsb
inc
fs
mov
into
push
adc
movsl
add
dec
inc
or
pop
in
fistl
cmp
aas
mov
aaa
fldt
fs
add
out
sub
push
mov
xor
stos
and
xlat
lahf
lods
outsb
testl
add
js
mov
sbb
push
mov
lods
repnz
push
pop
out
mov
and
cmc
sbb
out
mov
inc
call
aad
lcall
imul
pushl
es
jl
cmpb
stos
test
or
es
mov
mov
cmpsl
or
jg
rclb
xchg
sub
test
cs
cli
clc
dec
div
popa
test
mov
aaa
pop
sti
in
mov
jnp
iret
sarb
inc
xor
je
pop
lcall
mov
mov
push
dec
in
in
mov
popf
adc
sub
mov
sbbb
cmc
add
cmpsl
jge
cmpsb
insb
cs
imul
push
pusha
inc
pusha
pop
jne
sbb
mov
push
sbb
add
push
xchg
mov
int3
and
and
enter
pop
insl
outsl
push
dec
or
or
adc
lock
outsl
mov
lret
pcmpgtb
cs
fisttpl
push
inc
dec
movsl
in
jns
add
xchg
or
jecxz
in
ljmp
lret
sub
insl
mov
adc
in
push
xchg
inc
jle
adc
push
jnp
loopne
push
lods
loope
lret
push
ds
pop
std
xchg
pop
inc
scas
cld
mov
outsb
push
in
shll
mov
sub
orb
inc
push
stc
imul
sarl
data16
sahf
addr16
gs
outsb
adc
int3
adc
roll
imul
int
out
data16
jo
mov
dec
sub
pop
subb
bound
adc
and
sub
sbb
ja
and
sbb
jle
fxch
shrb
cmp
fsubrl
loop
inc
mulb
push
inc
jg
adc
mov
push
imul
popf
aad
hlt
mov
cwtl
cmc
repz
mov
fisubrs
or
push
aad
pop
push
jecxz
xor
xlat
dec
rol
and
inc
pop
mov
bound
nop
test
and
mov
push
movsl
aad
imul
mov
test
mov
and
mov
rorl
cld
xchg
mov
lock
out
push
hlt
pop
xchg
inc
cmc
jo
adc
inc
xchg
push
mov
sbb
and
inc
sahf
enter
push
mov
in
inc
iret
push
into
pop
mov
mov
xor
mov
or
add
out
pop
sub
jno
inc
test
fldcw
loop
pop
outsl
ret
ret
ret
ss
pop
imul
jp
sub
sub
or
iret
xor
lret
xorb
cmp
lock
jb
daa
dec
inc
adc
in
lret
arpl
std
lock
mov
jg
mov
jno
lods
pop
dec
inc
sub
or
loope
in
int3
pop
outsl
xor
xor
test
push
iret
subl
out
leave
orl
mov
mov
std
sahf
repz
pop
dec
xchg
fwait
adc
sbb
jns
xor
loope,pn
out
loop
pusha
fmull
in
pop
addb
insl
ljmp
out
xor
shrb
popa
arpl
mov
cmpb
mov
pop
lret
in
lcall
hlt
repz
mov
xchg
fdivrl
sbb
decl
stc
xchg
aaa
out
sti
and
inc
shll
lods
or
lods
pop
and
jp
mov
imul
and
and
adc
adc
fs
ss
aaa
xchg
ret
in
cmp
mov
pushf
loope
ja
call
arpl
sub
mov
aas
bound
dec
aaa
push
loope
and
aas
call
inc
mov
ret
inc
dec
decb
and
push
arpl
call
cwtl
cli
sti
aaa
xchg
add
out
sar
lea
xchg
mulb
push
push
ss
es
add
jbe
xor
loope
icebp
add
mov
inc
push
push
ss
es
add
jbe
xor
cltd
cmpsb
icebp
add
mov
cltd
push
push
ss
es
add
jbe
xor
loope
lock
add
mov
mov
es
and
cltd
into
jle
fwait
stos
adc
or
jecxz
mov
or
jnp
imul
ret
dec
cmp
add
push
fildl
jecxz
mov
or
pop
xchg
pop
ret
dec
jmp
fwait
lds
jg
mov
or
imul
cmp
xor
add
push
repz
clc
out
push
push
inc
inc
sbb
pop
pushf
rorb
jae
cmpsb
jnp
shl
adc
call
mov
and
pushf
outsb
js
mov
insb
push
push
mov
arpl
orl
sub
rep
pop
cmpsb
insb
inc
jge
or
outsb
imul
pushf
repz
pop
outsb
mov
fdivl
pushf
ljmp
lock
lahf
jl
jle
loope
push
cmp
mov
fdivrp
in
lret
ret
push
mov
bound
mov
jmp
rep
in
verw
jecxz
sbbl
mov
and
in
mov
and
sarl
js
jecxz
push
jbe
jecxz
xchg
pop
rcrl
mov
outsl
mov
daa
jmp
lret
inc
cmp
sub
popf
or
pop
cmpsl
and
push
ljmp
push
addb
lahf
rolb
sub
jle
jg
cmp
add
push
dec
mov
xchg
add
mov
push
testb
adcb
and
call
jecxz
jmp
arpl
push
fildl
mov
mov
or
jnp
imul
ret
dec
xor
add
push
fildl
mov
mov
or
jnp
imul
ret
dec
xor
pop
dec
aas
or
xor
lock
mov
pop
pop
outsb
movsl
jo
mov
mov
cmp
mov
adc
cmc
mov
loopne
xor
addl
push
cmp
rcrb
outsl
sub
flds
push
xchg
jle
outsl
add
aaa
pop
dec
mov
or
mov
dec
dec
repnz
cmp
xor
fldenv
pop
daa
mov
out
mov
mov
and
xchg
dec
pop
xchg
movsb
scas
pop
adc
and
push
inc
sub
mov
and
mov
sbb
mov
lods
ret
insl
mov
mov
movsb
ret
scas
xchg
sub
mov
xor
out
jg
or
sub
xor
sub
mov
test
mov
leave
push
push
or
xchg
sbb
sbb
movsb
insb
repz
decl
mov
out
dec
add
dec
in
cmp
dec
addl
push
stc
lcall
mov
cmp
jg
and
es
xlat
insl
dec
fbstp
xchg
mov
cmp
xchg
cmp
or
stos
repz
aad
pop
sti
and
dec
sub
imul
push
in
inc
mov
xor
in
xchg
lret
or
rclb
ds
bound
add
adc
fists
mov
push
pop
sub
cmp
sub
lahf
mov
sti
mov
shl
hlt
jl
mov
loopne
shlb
inc
scas
in
or
data16
cmpsl
rcrl
xchg
outsl
out
cmp
jmp
or
sub
insl
sahf
das
or
adc
paddsw
xchg
and
or
add
and
or
fildl
rcr
mov
mov
jle
mov
sub
shrb
into
sbb
icebp
adc
roll
push
cmpsb
mov
sub
arpl
push
xchg
xchg
ljmp
cmp
dec
dec
push
loop
inc
push
dec
sub
fwait
jl
cmp
ss
cli
xlat
lret
mov
or
loope
fcmovu
lea
mov
loope
hlt
into
push
jmp
cmp
iret
push
js
stos
cld
mov
fistl
loop
mov
and
mov
sbb
shl
stos
fsubrp
inc
lods
int3
push
stos
pop
insb
ret
dec
pop
aad
sti
out
pop
fadd
dec
push
sti
iret
repnz
jo
test
add
lds
inc
nop
lods
mov
int3
dec
sbb
pop
xor
loopne,pn
dec
cmpsb
jne
lock
cmp
mov
inc
mov
jl
sub
or
pop
pop
lahf
cmp
out
mov
fsubrp
movsl
pop
mov
rcll
out
int
xor
xchg
pop
pop
jmp
leave
call
cwtl
add
jno
iret
mov
je
pop
fidivs
or
dec
or
cmp
cmpsl
fbstp
fdivrs
sub
subb
fcmovnbe
mov
sbb
fdivrl
dec
test
and
adc
cmp
push
push
das
loop
xor
cmpsb
and
pop
mov
fwait
mov
insl
in
xor
xchg
lods
fiadds
out
dec
std
dec
or
and
sub
roll
dec
call
xlat
dec
out
sub
fistpll
sbb
xor
xchg
aam
push
jp
inc
lcall
sahf
lret
stos
mov
cmp
insl
lea
cmpsb
xor
test
jno
mov
push
mov
cld
das
mov
andb
add
mov
sub
pop
push
sub
push
or
insl
jae
xlat
pop
ret
adc
stos
pushf
out
aaa
outsl
orb
mov
jg
rcll
mov
mov
sbb
shll
xor
add
lods
jnp
fdivr
push
daa
out
cmp
cmc
jg
xchg
add
enter
sahf
mov
xor
push
nop
push
fcomps
fldcw
or
cmp
test
pusha
ja
xchg
stc
adcl
negb
out
mov
loope
pop
cmp
adc
insl
sbb
fs
dec
mov
pop
or
sub
inc
dec
xchg
push
lret
jmp
sti
mov
lret
xchg
int
iret
movsb
iret
loop
mov
and
push
or
lods
xorb
popf
sqrtps
mov
jl
mov
out
or
pop
push
pop
cs
lods
push
mov
das
scas
xchg
pop
mov
jg
fcomp
into
mov
rcll
push
xchg
cmp
sbb
lret
pop
mov
popa
sbb
lds
adc
das
loope
cmp
popf
lods
sub
pop
mov
mov
and
pop
scas
or
and
pop
or
mov
fimuls
rcr
sub
pop
mov
push
test
adc
xor
inc
lock
imull
mov
nop
fwait
push
sbbl
cwtl
sub
mov
insl
ficoml
add
pop
sbb
sub
add
mov
xchg
push
dec
mov
dec
and
xor
punpckhbw
mov
xchg
jmp
pop
push
and
cmp
xchg
das
sar
lods
repnz
sarl
ja
rcrb
inc
and
fildl
bound
push
and
push
push
add
pop
aam
popa
hlt
fdivs
stc
mov
dec
rcrl
cs
adc
enter
orl
jae
rorl
pop
dec
loopne
cli
scas
es
xor
sub
fiaddl
insl
popf
out
stc
mov
push
sbb
sbb
popf
xor
push
pop
out
add
insb
add
adc
add
lret
out
sub
shrb
xor
xchg
jne
push
pop
enter
cmp
adc
outsl
icebp
cmp
out
clc
cwtl
sub
cvtdq2ps
sahf
lods
out
push
movsb
stos
fcmovbe
mov
xchg
loopne
push
outsb
sahf
pushf
push
adc
jg
jg
jl
inc
out
fmul
add
and
inc
mov
sti
pusha
and
test
lods
aad
or
stc
or
fldenv
add
mov
or
inc
mov
inc
fisttps
cmp
aas
pop
mov
xchg
sbb
gs
cmp
and
in
repnz
xor
add
inc
icebp
push
sub
pop
out
or
fistps
mov
sbb
movsb
in
movsl
mov
jb
dec
ret
ljmp
pop
adc
movsb
clc
adc
mov
push
lahf
sbb
popf
mov
jl
or
dec
push
and
jge
xchg
and
shll
adc
icebp
or
sub
lret
scas
sub
cmp
add
xchg
dec
stos
insl
addr16
mov
cmp
out
insb
jle
xchg
sbb
aas
add
out
xor
inc
pop
or
lea
rcl
sub
mov
jnp
outsb
fmull
sar
xchg
mov
adc
scas
mov
test
movsl
scas
psrlq
pop
ds
fs
push
mov
cs
mov
sub
and
push
fdivs
mov
push
mov
jae
and
mov
insb
cmp
shrl
cmpl
inc
push
faddl
push
add
int3
in
add
dec
aas
and
sub
jb
ret
dec
mov
cmp
pop
icebp
sbb
mov
sti
aaa
xchg
mov
jo
gs
sti
sub
mov
adc
shll
adc
mov
jg
lock
xor
lahf
or
test
adc
jmp
sbb
push
xchg
pop
sbb
or
cmc
dec
cmp
mov
sbb
xchg
leave
xor
jne
sbb
xlat
imull
hlt
push
sbb
inc
mov
dec
out
rcr
xor
fdivrs
mov
fldcw
pop
lods
dec
insb
cli
ja
mov
mov
or
das
aam
mov
sbb
mov
aaa
dec
sahf
cli
daa
fs
test
sub
add
jmp
scas
rclb
std
push
dec
mov
inc
mov
sbb
cli
inc
xor
sub
jb
in
mov
dec
adcl
push
mov
in
dec
fdivl
test
mov
andl
loop
out
dec
ljmp
cmpsb
sbb
pop
push
mov
xchg
mov
scas
in
iret
adc
pusha
in
mov
rcrl
jb
lret
mov
cs
jl
shlb
or
mov
dec
sbb
sbb
ja
mov
fldenv
push
out
mov
leave
loopne
in
int3
xchg
add
cmp
jecxz
jge
jmp
pop
dec
and
cmpsl
shrb
adc
sub
lods
jle
push
jbe
scas
jo
aas
icebp
call
test
ret
and
inc
or
lahf
insl
cmp
mov
push
xchg
aas
fwait
iret
dec
loope
movsl
xchg
dec
sahf
pop
mov
movsl
pop
pop
dec
xor
icebp
lret
jb
out
and
pop
mov
je
jns
out
mov
incb
cmpsl
pop
stos
xor
cwtl
jge
popa
cmp
mov
ss
lahf
sarl
fs
xor
push
xor
sahf
clc
mov
push
daa
push
jb
shl
lea
outsl
cmp
sbb
imul
aaa
pop
pop
cmp
dec
jns
pop
push
cwtl
cmp
dec
inc
pusha
aaa
pop
lahf
mov
mov
xor
inc
adc
mov
xchg
adc
dec
les
mov
pop
test
cmp
stos
xlat
push
cmp
je
data16
sarl
arpl
sbb
in
addb
dec
mov
loopne
xor
outsl
je
jge
cmp
jmp
rcrl
jl
pop
shll
xor
ja
fmull
andb
jns
out
mov
cbtw
mov
mov
aas
cs
xor
test
call
sbb
lods
xlat
mov
mov
test
jge
ret
test
rorb
out
mov
push
cmp
mov
push
fsts
fdivrl
sti
jecxz
adc
sub
inc
imul
sbb
mov
popa
cmpsb
jge
fstpt
ljmp
and
pop
push
cmp
add
xor
jl
cmp
jae
xor
aaa
mov
cld
xchg
ret
sub
pop
and
es
jne
push
mov
mov
pop
pushf
lahf
call
sahf
cmp
aad
cmp
dec
lds
lods
pop
lock
aam
jbe
jecxz
add
aam
inc
gs
dec
inc
jns
loope
addb
movsb
je
adc
add
lods
sub
or
mov
das
loop
cmp
fst
les
dec
int3
mov
test
fs
inc
push
push
ds
adc
push
in
adc
jmp
insb
arpl
mov
add
mov
and
sahf
xor
ret
popa
int
mov
push
add
out
sarl
sbb
test
mov
pop
push
insl
icebp
stc
out
xorl
sahf
mov
xchg
dec
ljmp
fcoms
cmp
jmp
sub
les
mov
mov
mov
pop
mov
insb
lock
fcoml
insb
jg
sahf
sub
mov
add
aam
in
add
out
jle
jns
cltd
out
xchg
dec
xor
jno
or
adc
mov
shrl
cmc
rorb
pop
test
mov
jno
int
mov
shr
ret
mov
add
jl
stc
and
out
cli
mov
aam
fnsave
xor
sbbb
push
aam
test
std
or
popl
das
dec
pop
out
dec
or
sti
mov
adc
lods
dec
ret
or
ljmp
adc
sbb
push
pop
jb
mov
pop
loopne
mov
cmp
in
mov
pop
jbe
jmp
ret
mov
lcall
mov
mov
mov
out
testl
int3
mov
sbb
hlt
insb
lds
insl
dec
sbb
mov
and
dec
int
push
mov
jmp
int
fdivl
ficomps
mov
lcall
push
std
sbb
and
push
sub
jbe
adc
mov
push
dec
pop
ret
fs
mov
or
xchg
mov
jns
cmpsl
or
dec
mov
lods
rcrl
out
mov
in
loop
scas
les
test
cmpsb
or
pop
pop
bswap
push
rclb
push
aaa
adc
xor
test
dec
das
adc
stos
add
dec
xchg
push
daa
mov
and
fiadds
xchg
push
andl
pushf
inc
cmc
mov
inc
and
mov
or
adc
inc
lea
mov
mov
or
xorb
mov
rclb
insb
xor
rorl
cmp
xor
xchg
pop
adc
testl
sbb
cmp
and
sub
push
call
mov
loop
jo
ret
icebp
sbbb
mulb
in
or
jns
cmp
lahf
cmpsb
lock
mov
pop
mov
mov
loop
mov
cmp
cli
out
xor
lahf
orb
jge
out
or
pop
or
cmpsb
jno
aad
xchg
test
inc
mov
sub
add
jecxz
inc
or
int3
mov
ljmp
test
sub
mov
insb
inc
stos
dec
xchg
mov
sbb
cltd
cmpsl
xor
or
push
xchg
xchg
inc
xlat
adc
mov
icebp
bound
or
inc
or
stos
fldlg2
test
ret
jo
fidivl
scas
mov
cli
lock
sbb
xor
pop
push
mov
or
adc
nop
gs
dec
cmp
jne
add
xor
xchg
inc
mov
dec
movsl
adc
jne
outsb
and
xchg
insl
mov
jle
in
fnstenv
cld
scas
mov
mov
stc
mov
ret
lret
lock
add
or
int3
inc
imul
movsb
mov
push
cmp
aas
orb
cs
xor
xor
xchg
iret
pushl
dec
iret
mov
mov
fistpll
inc
cmp
popf
or
push
mov
std
imul
rorl
jnp
inc
loop
pop
xlat
sbb
or
cmc
js
inc
sbb
adc
xchg
cmp
sbb
mov
jns
mov
xor
sbb
test
sub
push
and
pop
stos
test
cwtl
and
cmpsb
iret
push
fisttps
lea
stc
fstl
ror
push
dec
pop
std
mov
ret
into
idivl
or
sahf
xor
inc
and
ds
or
ds
cs
jno
pushl
ret
addr16
in
popf
inc
fistpl
nop
leave
cmp
daa
xchg
std
push
ja
cmpsb
xchg
lods
mov
jne
out
mov
test
add
ret
and
hlt
dec
lret
sti
push
inc
shrb
loope
dec
pop
inc
sarb
and
pop
pop
movsb
ss
mov
mov
add
scas
mov
xchg
imul
shrl
imul
sub
les
pop
bound
jle
dec
loopne
ret
in
int3
lret
pop
hlt
adcl
rcrb
out
jmp
sbb
fisttpl
mov
shrb
and
aaa
pop
rol
aad
repz
mov
xchg
mov
fbld
cmp
add
ret
mov
lock
and
dec
push
xchg
movsl
pop
ljmp
fisubs
jns
lret
sub
or
cli
imul
ja
mov
dec
pop
sbb
fisubrl
and
loopne
data16
js
in
icebp
or
data16
inc
push
ss
icebp
cmp
arpl
ret
lds
xchg
cmpsl
sub
cmp
adc
lret
sbb
insl
dec
insl
mov
push
mov
xchg
sub
pop
int3
std
and
std
push
clc
lock
cltd
and
push
jle
push
imulb
sub
leave
adc
sarl
xchg
mov
inc
into
cltd
int
add
inc
cmp
mov
scas
test
sti
push
mov
mov
test
push
cmp
out
gs
icebp
jecxz
mov
outsl
inc
push
fs
dec
sub
and
mov
movsl
inc
sub
insb
clc
jp
and
inc
mov
sahf
dec
shlb
arpl
mov
sti
aas
inc
xor
jno
rcll
or
and
sub
add
movsb
aaa
xlat
fucompp
add
pop
dec
pop
xchg
bound
cs
or
sbb
fwait
ja
xor
mov
pop
test
and
and
cmp
jge
popf
testb
xchg
jnp
jg
xchg
in
push
push
insl
jo
fldl
pop
and
jl
pop
leave
in
jg
std
pxor
pop
fcomi
std
mov
movsb
inc
lret
lock
jbe
xchg
xchg
in
and
fcomp
or
mov
test
xor
out
jl
inc
incb
jmp
or
mov
sbb
test
add
sub
pop
je
fsub
or
rorl
fbstp
push
scas
inc
mov
in
mov
inc
mov
shl
inc
and
and
jno
sbb
xchg
and
push
mov
jmp
pop
stos
mov
shl
xor
push
outsb
dec
lods
aaa
or
mov
pusha
jp
push
jle
xchg
dec
leave
mov
out
dec
jecxz
xchg
bound
add
adc
iret
and
aas
mov
inc
add
fnsave
orb
xchg
adc
aam
mov
push
out
es
dec
xor
outsl
push
shrb
push
mov
push
dec
in
movsb
xor
icebp
mov
inc
test
ret
inc
inc
mov
arpl
jmp
pop
rol
jns
cld
cld
cmp
lcall
cmp
jg
dec
das
inc
adc
pop
push
lea
cmpsb
adc
call
push
pop
fdivrl
fstpt
or
pop
cmp
mov
das
ds
sbb
push
push
loop
cwtl
ret
int
mov
sub
jns
push
repz
adc
in
pop
pop
inc
cld
movsl
stos
lods
outsl
and
cmp
xchg
sbb
xor
add
dec
das
neg
mov
out
push
xor
xor
in
aas
cs
inc
adc
push
inc
aas
mov
out
outsl
mov
jecxz
sub
xor
popf
mulps
lea
push
cld
xor
in
and
adc
xor
bound
and
pushl
insb
jecxz
fidivrs
jmp
mov
xchg
push
loopne
nop
xlat
sbb
pop
and
or
xor
sbb
mov
jo
xor
mov
rcr
ja
insb
sub
bound
pusha
or
shrb
add
push
scas
clc
xor
aam
jecxz
lcall
add
call
sbb
in
mov
movsl
inc
mov
xchg
leave
pop
loop
adc
or
adc
lret
pop
stc
cmp
bound
ljmp
mov
mov
mov
pop
mov
push
adc
loopne
scas
mov
xor
cli
inc
and
ret
outsl
push
aad
imul
and
jno
js
add
loopew
stos
lret
loop
sub
jb
and
inc
leave
ljmp
cmp
push
imul
dec
mov
push
pop
mov
icebp
test
wrmsr
imul
add
iret
fsubrp
call
rorb
sub
lds
outsl
ror
mov
xchg
adc
xchg
sbb
push
cmp
pop
lds
inc
xchg
push
ljmp
sub
in
xchg
sub
or
shl
jge
lahf
ret
adc
daa
adc
mov
enter
orl
mov
movsb
insl
cmp
sub
adc
in
sub
pop
lret
or
xchg
sub
add
outsb
mov
push
xor
and
mov
add
xchg
lods
adc
jge
ja
jecxz
cmp
fwait
in
adc
enter
movsb
xchg
push
dec
dec
xchg
sub
dec
sub
push
mov
pop
sbb
sub
test
daa
out
dec
test
dec
hlt
xor
lock
xchg
push
xor
adc
xchg
inc
divl
sub
adc
jge
aaa
ffree
pop
ret
cmc
jl
pop
mov
jmp
pop
in
jge
adc
jmp
mov
sbb
clc
fnstcw
ds
add
xor
stos
fwait
pop
mov
arpl
push
fildl
mov
mov
or
jnp
imul
ret
dec
xor
add
push
fildl
mov
mov
or
jnp
imul
ret
dec
xor
add
push
fildl
mov
mov
or
jnp
imul
repz
sub
sub
push
fcmovnb
lret
mov
pop
cmpl
repz
mov
jecxz
mov
in
mov
push
and
arpl
popa
jae
popa
add
inc
and
repz
xchg
jecxz
shll
and
push
or
rcll
inc
and
jmp
cli
ljmp
mov
dec
push
jnp
jae
or
pcmpgtw
fcmovbe
int3
stos
xchg
xchg
push
adc
fmul
lcall
aas
mov
jb
xor
aas
pop
fstps
jecxz
push
cmp
mov
or
and
mov
inc
pusha
lods
lds
pop
movl
subl
mov
jae
lahf
add
inc
and
repz
rorl
loop
sub
ret
add
mov
mov
cld
fdivrs
and
or
add
sti
jg
jecxz
mov
adc
repz
xor
pop
faddl
aam
jl
or
loope
and
scas
push
outsb
push
jae
inc
xor
int3
inc
xor
mov
stc
in
repz
fidivrl
or
jp
or
dec
xor
fbstp
mul
add
in
sahf
ffreep
into
xor
dec
cmp
addr16
jle
push
and
cs
fsubrl
repz
loopne
mov
xlat
nop
iret
jo
inc
and
pop
inc
and
or
daa
inc
xchg
iret
cmpsb
call
jecxz
shll
and
jae
arpl
arpl
push
xor
mov
mov
jecxz
xchg
jecxz
shll
and
jae
arpl
arpl
push
xor
mov
mov
lock
scas
and
adc
arpl
stc
push
outsl
mov
sub
push
sub
lahf
mov
bound
mov
pop
mov
fisubl
lods
insb
pop
shl
mov
stc
outsl
mov
test
xor
adc
adcl
push
sbb
adc
imulb
push
mov
sbb
clc
enter
jno
and
push
sub
mov
insb
mov
and
inc
jns
xchg
xor
inc
mov
loop
scas
std
loope
fisttps
or
add
xchg
xlat
or
sub
and
or
dec
jns
and
push
xchg
in
mov
outsb
out
cmp
inc
out
adc
sbb
adc
scas
es
push
into
out
add
pop
xchg
sbb
lods
sbb
rcrl
scas
loopne
jp
pop
mov
sub
add
test
and
ret
arpl
dec
mov
push
dec
int
popa
rclb
jg
inc
loop
clc
rcll
pop
inc
pop
add
mov
mov
fbld
rcrb
je
loope
lock
jo
arpl
out
or
adc
dec
jle
arpl
add
movsb
jno
sbb
loope
lcall
xchg
mov
dec
mov
jae
mov
adc
pop
sar
xor
js
pop
lret
lds
shlb
lock
call
xchg
push
call
inc
sbb
loope
lods
inc
adc
xchg
xor
or
dec
das
push
or
sbb
fwait
push
sub
shrl
sbb
test
dec
push
dec
and
mov
jb
gs
push
pushf
jg
xchg
arpl
lods
popf
insl
gs
std
out
divb
stos
rorl
dec
int3
lock
in
test
dec
aaa
lods
sub
leave
lea
repz
lret
xchg
sub
repnz
push
dec
pop
es
sbb
sub
jg
les
pushf
mov
mov
adc
mov
mov
test
add
inc
sarl
mov
cmpsl
fdivs
dec
leave
dec
mov
hlt
pop
out
testb
jb
aaa
mov
inc
shrl
xchg
stos
jnp
or
jg
mov
ret
sbb
aas
sbb
out
js
cld
inc
jg
cmpb
xchg
dec
es
out
inc
sbb
out
adc
fisttpll
ja
and
pop
jge
pusha
mov
int3
jl
xor
lods
stc
xchg
add
fsub
jp
push
je
out
data16
lock
pavgb
push
loopw
cwtl
js
cmp
icebp
ljmp
and
insl
lock
mov
and
xor
stos
lret
testb
and
lock
jns
mov
je
mov
cmpsb
inc
sahf
and
out
out
mov
inc
es
out
adc
and
pop
dec
mov
add
test
int
popf
add
std
dec
icebp
pop
pop
adc
leave
jl
mov
push
push
in
add
mov
xchg
add
cld
enter
mov
dec
pop
insb
jg
lods
fs
inc
xchg
loopne
insb
cwtl
lea
enter
shrl
push
and
xchg
test
icebp
loope
popf
loopne
fdivs
push
pusha
mov
pop
mov
inc
jl
push
jecxz
xor
fmul
call
dec
lahf
mov
jo
xlat
and
jmp
xchg
or
out
fnsave
xchg
mov
pop
aad
sarb
jecxz
shr
in
inc
xchg
adc
iret
int
fucom
lret
lret
insb
adc
inc
mov
sbb
cltd
or
pop
pop
mov
sub
jo
bnd
xchg
pop
xor
pop
or
mov
pop
or
mov
paddq
mov
pop
push
dec
pop
sahf
sbb
test
xchg
mov
mov
push
notb
mov
sub
mov
mov
mov
in
mov
repnz
xchg
lret
jg
cwtl
imul
mov
xchg
mov
int3
gs
repnz
dec
stos
fildl
es
push
cmp
cmp
rcrb
aad
adc
and
push
xor
imul
aad
pop
jge
loope
lcall
scas
mov
vcvtsi2ssl
jbe
clc
mov
mov
fistpll
imul
mov
mov
mov
repnz
sub
jnp
cli
cmpsl
insb
ss
sub
ljmp
and
and
hlt
insl
xchg
popa
inc
and
mov
xor
lock
push
enter
mov
dec
in
inc
test
in
mov
and
add
push
mov
fstps
dec
xor
out
mov
cmp
mov
fadd
dec
lock
cmp
loop
rclb
mov
test
notl
icebp
dec
push
dec
push
in
mov
int3
dec
jo
add
xchg
stc
inc
fdivs
cltd
pop
xor
shl
push
jo
inc
test
mov
hlt
int
les
pop
cld
cltd
lahf
dec
mov
cltd
cmpsl
push
test
repnz
jno
btc
sbb
call
jns
enter
cmp
sub
inc
cli
xlat
sarl
outsb
xchg
jp
sbbl
add
and
fidivrl
fldl
das
ret
addb
loopne
mov
mov
jae
stos
mov
jae
jnp
data16
jns
int
lea
inc
minps
pushf
fiaddl
xchg
pop
push
gs
aam
andb
movsl
mov
jbe
cs
jbe
xor
dec
jg
stos
and
and
xcrypt-cfb
cmpsl
loop
pushf
add
pop
in
pop
adc
xchg
mov
testb
push
icebp
movsb
adcb
push
rclb
jnp
push
dec
xor
js
lods
stos
and
int3
les
sbb
test
pop
sub
das
mov
loope
cmp
cltd
std
push
loop
jg
xor
in
xor
mov
ret
push
push
cli
add
repz
divl
push
jae
sbb
and
sbb
int3
jnp
test
orl
xchg
xor
scas
ret
bound
aas
movsb
out
loope
je
fcoms
sar
pushf
pop
movsb
inc
pop
dec
and
daa
mov
sub
mov
pusha
dec
sbb
call
xchg
jle
cltd
ret
loopne
ljmp
and
xchg
mov
push
lret
out
shll
dec
enter
mov
sar
rcr
popf
out
push
andb
stc
xor
and
jmp
xchg
mov
fcoml
in
dec
movsl
stos
loopne
pop
rcrb
xor
sub
adc
mov
aam
hlt
jecxz
xchg
aad
out
mov
and
or
nop
xlat
lret
push
cmp
icebp
push
mov
add
push
adc
inc
bound
iret
data16
inc
stos
rcrb
test
lret
inc
jmp
add
fidivrl
push
jmp
int
sarb
nop
test
nop
mov
xchg
pop
lret
cwtl
cli
lock
pop
std
xchg
repnz
dec
int
add
stos
inc
pusha
xor
loopne
jmp
jns
out
jo
cli
sbb
sar
push
pop
adc
inc
push
in
mov
roll
aad
mov
mov
scas
sub
or
ja
sub
popf
inc
sbb
jnp
ss
mov
scas
stc
add
xchg
leave
xchg
sub
loope
popa
adc
lret
cmp
and
or
ds
das
inc
jp
popf
testb
xor
sahf
sub
mov
xchg
lret
pop
in
test
std
pop
push
inc
jb
inc
and
mov
adc
decl
addb
or
mov
adc
push
add
imul
aas
xor
mov
loope
daa
nop
push
xchg
adc
ret
lods
sbb
push
and
icebp
push
aaa
loopne
cwtl
das
repz
mov
sbb
cmp
pusha
or
mov
ffreep
cmpsl
or
cmpsl
inc
mov
pop
pop
add
cmp
rorb
cltd
adc
in
or
out
push
test
or
imul
test
aam
rcl
dec
movsl
pop
aam
sub
add
fistl
inc
into
jg
push
iret
fs
mov
jl
mov
pop
and
cmp
xchg
lock
sarb
xchg
das
adc
outsb
shrl
jmp
push
mov
insb
pushf
cmp
negl
repz
in
inc
insl
sbb
out
inc
mov
sti
repnz
mov
push
push
or
loope
mov
dec
jb
mov
jo
test
aad
lock
xor
jnp
and
cltd
shl
sbb
push
cmp
lret
shlb
mov
xlat
call
pop
mov
add
sbb
inc
shll
cmp
push
scas
sbb
cmc
out
mov
mov
sub
and
ret
imul
mov
add
jl
nop
jle
inc
and
dec
sub
icebp
cmp
mov
jb
sbb
rcr
jmp
mov
or
mov
fcmovu
sbb
sub
xchg
xchg
jne
add
ficomps
inc
cmpsb
xchg
fmuls
js
testl
xlat
pushf
mov
cmp
js
fwait
dec
lret
jecxz
or
ja
mov
mov
loop
mov
or
and
in
dec
adc
add
push
jno
mov
int
xchg
out
add
sub
cmpsl
andb
dec
and
scas
and
sub
movsb
out
mov
mov
int3
mov
mov
mov
lahf
sahf
xorl
aam
jge
in
arpl
lret
aas
test
mov
xchg
arpl
shl
int
mov
and
sbb
addl
or
out
aas
sub
dec
ret
stc
loope
xor
pop
lea
pop
mov
fucomip
cmp
pop
jno
bound
rorb
std
sub
adc
mov
jbe
in
fnstcw
stos
loop
xchg
imul
std
cmp
int3
popf
or
mov
sbb
roll
lcall
cmp
jno
mov
shr
outsl
scas
sbb
rcrb
repz
cmp
mov
ret
pop
and
push
in
mov
mov
pop
stos
or
je
inc
xor
push
dec
hlt
aas
outsl
jle
lcall
test
pop
or
je
in
pop
adc
mov
mov
cmp
sbb
jge
jb
sub
sub
test
in
mov
xchg
in
xlat
neg
dec
sbb
icebp
adc
shrb
fsub
mov
clc
mov
lds
jae
push
inc
mov
pop
push
xor
cmp
jle
dec
fwait
pushf
ss
outsl
push
cwtl
push
inc
mov
stc
jg,pt
test
jl
adc
lods
sbb
mov
clc
pop
or
cmpsl
pop
mov
push
push
dec
scas
loope
jp
xor
insb
movsb
daa
stc
fistps
push
sbbl
jb
ficomps
mov
mov
ret
stc
lods
pop
dec
movb
stc
fcomps
sub
out
ret
add
aad
jb
jl
sub
daa
lea
pop
mov
lds
add
dec
scas
call
pop
and
mov
jle
bound
mov
push
mov
jne
jne
cld
cmp
xchg
lahf
ret
test
dec
mov
test
scas
jge
dec
adc
in
or
fsubl
sbb
cltd
lahf
adc
adcl
sbbl
xchg
sub
sub
sbb
sub
push
outsb
fists
mov
popl
pop
testb
in
cmp
sub
mov
xchg
xor
mov
int3
adc
cmp
pop
mov
adc
cmp
fstl
sub
imul
loope
iret
pop
inc
bnd
addr16
lods
or
sub
pop
pop
outsl
cmp
cmp
sbb
push
imul
adc
fucompp
xchg
pop
push
pop
les
ljmp
pop
pop
dec
add
repnz
push
inc
inc
popa
inc
cmp
popf
pop
cmp
sub
lcall
stc
lds
pop
test
sub
inc
jbe
push
mov
insl
insl
sub
jns
jae
cmp
in
mov
daa
adc
jns
inc
std
leave
adc
movsb
dec
shl
add
lret
jo
sub
fnsave
adc
dec
imulb
xor
clc
push
shll
jae
dec
int3
mov
sbb
adc
lret
xchg
out
ss
jmp
nop
pushf
lods
pop
outsl
jnp
mov
and
fxch
or
mov
out
xor
and
cmpsb
lods
js
aaa
mov
or
aam
sahf
cmpb
shl
jns
cmpsl
imul
push
fs
enter
dec
sarb
adc
mov
mov
shlb
cmpsb
imul
xor
jae
xchg
or
jne
jge
adc
or
sbb
push
daa
xor
js
jae
lods
sar
movsl
sub
and
xchg
arpl
cmp
cltd
mov
stos
outsb
cmp
iret
push
sub
add
cmp
repz
cltd
cmp
push
sbb
sbb
out
je
inc
testb
ret
sbb
jge
xchg
test
sub
inc
inc
testb
jb
jno
out
push
cmp
pop
cmp
and
out
push
stos
in
mov
mov
out
test
aaa
push
stos
pop
stos
dec
jp
sbb
stos
xchg
not
mov
shlb
negb
sbb
das
xchg
mov
arpl
idiv
out
out
inc
adc
jo
push
rep
dec
sti
lahf
mov
pushf
bound
rol
stos
lea
stos
imul
mov
jp
cmp
push
xchg
je
mov
ds
cmp
pop
or
shl
ret
mov
js
cmp
daa
mov
fdivl
xchg
lock
int
sbb
sbb
fnstenv
inc
xchg
les
cmp
setle
stos
repz
mov
cld
lods
xchg
mov
inc
stos
pusha
mov
je
imul
push
outsl
jge
mov
arpl
or
xchg
adc
sub
call
xchg
test
and
add
pop
bound
imul
add
repnz
jge
or
xchg
into
cli
mov
cltd
scas
lret
and
or
outsb
aam
mov
jnp
imul
mov
and
inc
cli
mov
mov
lock
dec
imul
test
xorl
lea
rcll
sub
imul
aam
dec
out
roll
decb
adc
mov
js
mov
pusha
repz
stos
cmp
outsl
mov
cmp
rcrl
cs
pop
xor
xchg
insl
lahf
into
cltd
outsl
cwtl
push
adc
shll
ret
fistpll
stos
push
adc
sub
testl
insl
inc
ja
mov
test
mov
dec
pop
ret
clc
or
jno
jmp
jg
scas
jecxz
int3
idiv
divb
into
mov
dec
mov
pop
ljmp
dec
lods
xor
mov
jmp
jmp
cld
jg
scas
xor
jbe
or
loop
sub
lcall
push
scas
fdivs
sbb
sarb
mov
mov
sti
mov
sub
iret
pop
adc
push
in
bound
out
push
mov
movsl
jne
jg
jno
sub
cmp
pop
lret
lahf
add
out
imul
pop
cmp
jmp
jnp
jg
inc
sub
cld
imul
iret
lea
xchg
mov
pop
sub
leave
inc
mov
rcll
ds
sub
and
cli
jo
cmp
cld
dec
sub
in
pop
stos
sbb
push
ja
sarl
mov
out
mov
xchg
dec
xor
jle
fisubrl
jbe
lock
jns
dec
and
xchg
repnz
jns
insl
jg
cmp
jae
enter
lds
les
stos
mov
adc
mov
dec
addb
push
mov
mov
ss
movsb
jns
pop
mov
mov
and
xor
out
insl
cmpsb
mov
dec
int3
aam
mov
subl
repz
cmpsl
mov
out
movsl
dec
jmp
xchg
out
add
mov
imull
jmp
popa
pop
and
scas
idivl
out
xchg
dec
lahf
sub
sub
inc
gs
stos
inc
repnz
clc
fs
popa
test
jmp
call
fstpt
cld
sub
jne
xor
xchg
aam
repnz
ljmp
sbb
xlat
shlb
cmpb
jg
push
fistpl
adc
pop
jne
cltd
xor
mov
fistpll
mov
push
pop
out
lods
stos
adc
add
and
jbe
mov
gs
ljmp
sub
mov
and
inc
or
cmp
jno
cld
fidivrl
aas
loopne
inc
inc
sub
xor
xlat
das
gs
ljmp
xchg
pop
scas
jge
cltd
movsb
jno
loope
es
in
mov
sbb
mov
lahf
pop
adc
lods
std
mov
inc
ret
xchg
das
into
pop
sub
sarl
repz
inc
std
out
test
push
notb
fwait
mulb
inc
imul
popf
push
fdiv
adc
fs
jb
add
fildll
in
push
scas
dec
decb
xchg
scas
ret
rorl
mov
dec
xor
or
loopne
mov
push
sub
pop
dec
adc
xor
stc
mov
adc
ljmp
addr16
sti
xchg
popf
sbb
xor
add
pop
pop
andb
add
outsb
sbb
lcall
rorl
mov
dec
enter
iret
mov
or
insl
cli
shll
fidivl
fistpll
setns
xchg
shl
jae
push
mov
pop
shll
dec
wrmsr
orb
in
mov
sbb
int3
dec
adc
fcmovne
add
imul
push
inc
and
and
and
or
push
mov
outsl
mov
shrb
cli
inc
and
stc
lret
jmp
fsubrp
inc
cmc
pop
dec
out
inc
pop
push
inc
mov
loope
cld
ds
fisubrs
loope
add
pop
sub
leave
add
mov
jno
push
ja
inc
mov
sbb
fs
mov
add
push
gs
push
jge
test
in
inc
push
mov
jle
pop
movsl
ret
mov
mov
int
sbb
loope
and
pushf
mov
xor
cwtl
lahf
test
cmp
lret
sbb
notl
mov
movsb
lcall
movsl
push
jo
aaa
cmp
in
insb
add
out
rep
aas
sub
in
jle
pop
xchg
stc
or
into
out
leave
testb
mov
inc
fisttps
inc
enter
xor
faddp
sarl
or
pop
lahf
xchg
in
ds
xor
sbb
xor
in
xchg
cmp
cmp
sbb
mov
mov
adc
pop
movsb
xchg
xlat
xor
inc
repz
xchg
lahf
out
vandnps
sbb
pop
mov
push
push
sbb
adc
cs
lock
and
cmp
orb
dec
gs
aaa
outsb
inc
setb
popa
mov
fsubs
mov
and
add
fdivr
inc
xchg
arpl
fld
push
cmp
leave
jge
sbb
inc
dec
pushf
jb
jns
in
popf
or
shr
jnp
xor
testl
in
addb
jge
fs
mov
insl
cmp
mov
lret
dec
jb
push
dec
push
out
or
and
mov
push
xor
adc
and
movsb
or
sub
call
xor
sub
not
ficomps
jne
enter
inc
data16
cmp
push
xchg
enter
and
cmp
fsubs
scas
jb
iret
push
push
imul
fisttpl
mov
fs
lds
or
data16
push
dec
rclb
mov
jmp
push
push
cmp
adc
mov
shll
push
xlat
jp
fdivrp
jae
fidivrs
mov
in
shlb
mov
push
jg
lcall
loope
mov
sub
adc
scas
sub
movsl
pusha
pop
jns
repz
sbb
shlb
out
mov
pop
sti
cmp
push
xchg
push
mov
ret
cltd
sbb
jecxz
xchg
jecxz
shll
and
jae
arpl
arpl
push
xor
mov
mov
jecxz
xchg
jecxz
shll
and
jae
arpl
arpl
push
xor
mov
mov
jecxz
xchg
jecxz
shll
and
jae
bound
bound
push
xor
mov
mov
jecxz
xchg
jecxz
push
mov
mov
mov
fwait
jmp
lods
int3
mov
cmp
or
sbb
cs
or
fs
lcall
cwtl
fld1
leave
jge
enter
sub
cmp
or
sbb
dec
js
dec
imul
mov
clc
stc
mov
fcomps
sub
cmp
or
sbb
dec
js
dec
imul
in
int3
cwtl
fldcw
sbb
sub
cmp
dec
push
scas
push
fwait
xchg
xchg
loop
push
mov
sbb
adc
scas
sbb
jle
mov
pop
jmp
xchg
inc
add
inc
mov
mov
mov
sub
pusha
je
in
test
daa
push
pushf
inc
test
jmp
jmp
mov
xor
js
imul
mov
bound
enter
aam
cmpsb
imul
cwtl
push
sub
mov
dec
add
aaa
jmp
movl
sbb
jns
int3
mov
cmp
fsubr
sub
cmp
or
sbb
dec
js
dec
imul
mov
clc
stc
enter
inc
push
jg
outsl
jno
add
js
push
in
or
int
int3
lret
ficomps
mov
outsl
sub
pop
or
cmp
add
aas
sub
jmp
out
int
jmp
lods
xchg
nop
lods
orl
pusha
dec
jge
push
imul
mov
clc
stc
enter
sub
cmp
or
sbb
dec
js
dec
imul
mov
clc
stc
enter
sub
movsb
mov
mov
sahf
sub
out
adc
pop
lock
std
lds
outsl
sbb
popf
xchg
jmp
aad
or
xor
mov
or
aam
push
addr16
insb
sub
mov
xchg
pop
outsl
xchg
jecxz
cmp
dec
sbb
shr
ret
dec
gs
dec
movsl
mov
and
sti
or
jg
test
in
nop
scas
push
insb
xchg
std
repz
movsl
cwtl
dec
pop
dec
xchg
mov
add
rcrl
fs
data16
mov
data16
out
mov
mov
andb
lods
pop
push
mov
ror
rcll
lods
push
pop
inc
xor
xchg
jecxz
andb
in
cs
or
cli
add
movsb
imul
push
out
dec
mov
sti
andl
aaa
jb
xor
add
dec
sub
ret
dec
out
cmp
pop
and
or
mov
js
popa
movsl
popa
mov
and
cmp
and
aas
ret
sbb
mov
pop
pop
fucomp
adc
data16
push
movl
jno
fidivs
inc
xor
xchg
pop
push
enter
pusha
or
xor
adc
movsb
add
lds
mov
mov
rorl
iret
cmp
scas
sub
stos
adc
fdivrs
jle
xor
cwtl
lds
xchg
and
mov
pop
or
mov
dec
imul
jne
sbb
ja
xchg
sbb
test
fistpl
pushl
mov
dec
jo
fmull
inc
sbb
cmp
das
jae
mov
out
pop
xchg
cmpsb
aaa
adc
pusha
sbb
data16
iret
stc
repz
cwtl
fsub
sbb
push
lcall
jmp
add
inc
clc
mov
cmp
rorl
inc
fwait
test
adc
outsl
fcompl
jge
mov
out
sbb
test
mov
xchg
mov
jg
lods
cmc
fisttps
lahf
and
pop
sbb
pusha
outsb
pusha
mov
push
xlat
inc
pusha
mov
inc
sub
insb
je
mov
or
cmp
loop
loop
adc
push
jb
test
sbb
dec
mov
xor
sbb
imul
and
scas
out
or
cmc
data16
sub
and
ror
jne
add
int3
dec
jnp
dec
sahf
outsl
dec
cwtl
in
loop
fsubr
and
and
xchg
xor
gs
pushf
xchg
push
shll
xor
repz
test
fbstp
or
dec
aad
cmpsl
jge
aam
push
rolb
and
arpl
pop
xor
int
cmp
mov
add
mov
movsl
jb
cltd
push
sub
pop
mov
or
adc
dec
push
sub
ss
inc
loope
stos
cmp
jecxz
push
xchg
lret
imulb
pcmpgtb
std
addr16
subb
aam
dec
iret
jno
mov
pop
sbb
cmp
jg
imul
push
mov
pop
movb
inc
lea
mov
push
lret
jle
in
jnp
rcll
xor
repz
int3
and
out
jle
push
mov
lcall
cmp
mov
xchg
dec
inc
xor
nop
mov
xor
pop
jns
push
mov
push
leave
adc
into
loope
fmuls
push
addb
sti
mov
js
popf
sti
xchg
xor
inc
adc
negl
sbb
push
mov
lock
roll
incb
and
shrb
mov
jl
jl
push
addb
std
mov
loop
pop
add
add
xchg
mov
andl
sbb
cltd
push
fcmovnb
loop
ds
xchg
mov
fisubrs
popf
adcl
cltd
js
ret
or
daa
mov
stc
cmpsb
aaa
arpl
push
insb
add
ss
js
sahf
and
mov
sbb
and
jle
mov
mov
mov
pusha
sti
movsl
jns
inc
iret
add
cs
mov
std
fldt
xlat
imul
adc
lret
pop
movsl
and
lcall
pop
aas
push
shlb
adc
mov
sbb
add
push
imulb
or
inc
dec
iret
mov
push
adc
sar
int
xchg
roll
xor
aam
pop
lret
xchg
addr16
or
ret
adc
dec
pop
push
loopne
cs
mov
inc
into
jno
test
mov
cli
ficomps
mov
sub
adc
adc
jnp
hlt
mov
arpl
pop
jno
lods
es
add
js
cs
aas
and
pop
xchg
mov
add
push
dec
jns
sub
pop
sub
push
in
les
pop
call
movl
sbb
mov
cld
bound
mov
test
dec
inc
xor
fdivrl
jp
std
ret
test
cmp
sahf
in
adc
ret
lret
pusha
addr16
lock
lahf
ror
jle
incl
rorb
or
add
test
jmp
sti
je
push
sub
aam
sbb
das
imul
cmc
jg
xchg
cmpsl
xchg
xchg
stos
cmp
or
icebp
loopne
aad
insb
cmpsl
mov
leave
ljmp
and
repz
inc
fcmovne
ret
and
push
sbb
in
es
mov
fsubrs
out
int3
push
daa
in
pop
mov
or
stos
lahf
and
iret
test
push
mov
jno
icebp
lret
xor
jne
cmp
mov
test
jl
mov
push
sub
ss
jp
pop
and
inc
rcrb
dec
jle
inc
pop
scas
call
push
xorl
pop
ficomps
insl
dec
ret
dec
dec
sub
sub
stos
xlat
les
and
cmpsl
and
push
xor
pop
push
stos
cli
xor
testl
add
scas
das
sahf
es
lcall
iret
repz
push
xchg
sbb
adcl
roll
in
mov
cs
out
out
fwait
push
xor
dec
xorl
xlat
sbb
pop
lods
sbb
pusha
jecxz
imul
sbb
mov
fbld
mov
jg
in
push
push
into
mov
add
into
adc
test
insl
lea
popa
idivb
or
adc
shrb
xchg
repnz
xchg
xor
lret
out
mov
mov
jle
lcall
in
and
inc
jo
jl
xchg
bound
adc
inc
addr16
icebp
xchg
test
rorb
pop
mov
xlat
in
sub
fildll
and
into
icebp
lcall
push
mov
movsb
lods
adc
ja
ret
or
call
ret
xor
sbb
cmp
inc
sub
insb
sbbl
mov
sbb
add
cmpsb
or
ds
mov
xor
fildl
sub
mov
out
push
mov
xor
dec
sbb
xchg
shll
ljmp
jnp
out
fwait
and
pop
dec
cld
movsl
data16
jge
rol
rolb
bound
imul
pop
jo
inc
lock
in
push
stos
xor
dec
jnp
js
test
cmpsb
ljmp
cmp
push
jae
repz
int3
ret
and
cmp
out
mov
push
pop
add
push
pop
inc
mov
and
push
lock
xor
xchg
xchg
pusha
aad
pmuludq
arpl
cwtl
cmp
aam
adc
repz
lods
adc
mov
xchg
or
pop
les
push
push
mov
stc
stos
clc
jnp
inc
test
and
push
push
test
testl
push
sbb
test
in
rcr
sti
sbb
mov
sub
pop
mov
dec
imul
and
test
fisubrs
sub
sbbl
mov
pop
xchg
repz
ds
pop
inc
outsb
xor
es
lcall
mov
lods
lret
sub
cmp
add
pop
int3
ss
xor
push
outsl
fs
cmp
pop
scas
pop
mov
insl
jno
shrl
sub
cltd
iret
in
xor
aas
xchg
sbb
pop
push
pushf
enter
loop
mov
arpl
push
cmp
dec
cmp
gs
and
xor
adcl
adc
or
es
pop
jne
mov
or
daa
lret
jns
or
ret
outsl
mov
dec
mov
adc
adc
push
mov
add
adc
inc
and
add
lods
mov
adc
xlat
and
imul
enter
inc
add
add
call
xchg
clc
mull
ja
cmp
insl
inc
mov
pop
or
jns
inc
repz
in
mov
pop
into
mov
in
xor
xor
loop
mov
xchg
xor
mov
negb
or
data16
jmp
mov
pop
adc
sti
sub
xor
dec
movsb
sarb
filds
sub
shlb
dec
mov
mov
adc
repz
into
cld
and
lods
out
lods
dec
insl
and
aaa
push
push
inc
push
sbbl
sbb
in
cmp
adc
jne
in
mov
push
rclb
inc
aam
das
lcall
fs
push
inc
popf
into
xor
std
fidivs
out
push
scas
jmp
sti
sbb
loopw
aaa
sub
jle
add
and
fmulp
fisubl
jle
into
adc
rorb
jb
mov
gs
xchg
adc
push
jecxz
mov
jge
jge
std
scas
push
xchg
and
iret
aad
push
push
cltd
push
inc
cmp
jg
sub
push
push
push
daa
test
daa
adc
pop
jae
push
lret
test
sbb
icebp
pushf
sub
loopne
and
pushf
xchg
xor
cmpsb
jg
xor
mov
xchg
sbb
and
add
pop
mov
dec
cmp
call
push
sti
xchg
or
mov
pop
xor
pop
dec
int
and
dec
dec
aas
mov
pusha
stos
out
in
adc
xor
xchg
mull
or
out
xchg
lahf
ja
fwait
mov
subb
adc
and
sbb
inc
cmp
push
push
loope
loopne
ja
lret
fcompl
dec
jl
push
and
int3
pop
mov
add
in
into
push
and
int3
test
jo
ds
icebp
pop
stos
dec
dec
popf
pushf
sbb
cld
fsub
mov
mov
push
inc
inc
dec
lret
sub
shll
mov
jns
addr16
sbb
mov
and
jns
cli
push
mov
std
pop
lods
xor
shlb
or
pusha
insl
xchg
cmpsl
dec
xchg
xchg
popf
mov
xor
fldl
fistpll
sub
cmp
ficoml
xchg
ljmp
pop
lahf
mov
sbb
aaa
das
stos
stc
inc
loopne
mov
stc
stc
std
test
lds
mov
out
mov
push
rorb
cltd
cmp
jns
adcl
pop
pop
or
mov
pop
inc
xlat
and
movsb
lcall
adc
adc
fistl
mov
cmp
sbb
lret
or
xor
out
cmpsb
pusha
cwtl
out
pop
push
xorb
push
mov
adc
insl
ss
mov
xchg
pop
jb
xchg
call
or
ret
pushf
adc
xchg
mov
mov
inc
add
icebp
loopne
xor
cwtl
enter
mov
das
std
or
out
aas
and
mov
iret
loope
imul
rcrl
js
mov
nop
notl
fucom
lock
xchg
push
subb
mov
or
pushf
roll
inc
jge
xor
jecxz
dec
adc
cmp
inc
mov
out
insb
jo
mov
push
in
bound
sbb
push
lock
mov
pusha
imul
pop
sbb
mov
fcmovne
xchg
dec
ss
mov
arpl
xor
nop
addl
fstps
mov
inc
xor
pop
jle
imul
outsb
jg
ds
rcr
push
ds
xor
add
xorb
hlt
std
dec
fadds
test
dec
pop
outsb
ds
jmp
nop
cmp
into
cltd
mull
mov
jmp
mov
out
call
mov
stos
hlt
je
gs
cmp
stos
fmulp
in
push
je
imul
insb
mov
jl
in
subl
jle
push
pop
add
mov
push
add
or
sbb
inc
jecxz
fwait
inc
bound
inc
pop
xchg
jl
ss
cmp
push
push
xor
arpl
lret
pop
repnz
xlat
mov
imul
fcompl
cs
into
inc
sbb
pop
aam
and
lock
imul
popa
adc
fldt
sarb
fdivrl
gs
bound
das
dec
mov
xchg
aam
rol
test
popl
sbb
and
call
jnp
mov
inc
sub
cmp
rclb
mov
push
jmp
std
pop
cmc
or
pop
loopne
fadds
dec
mov
push
adc
out
mov
adc
cmp
xor
pop
jle
push
add
mov
sub
rclb
btr
xchg
shll
es
std
xor
bound
dec
arpl
jnp
adc
jo
mov
pop
adc
es
ret
repnz
mov
data16
int3
mov
fisubl
out
cld
sub
call
test
and
push
les
ljmp
dec
mov
jmp
or
push
jne
fs
adc
cmp
popf
pop
sarb
test
dec
popa
js
lds
std
push
adc
mov
out
pop
lods
in
test
sbb
xchg
cmp
xorl
cmp
jge
mov
and
dec
std
in
imul
mov
or
mov
sbb
fildll
mov
pop
mov
call
pusha
roll
cmp
cmp
mov
jg
jge
push
ss
incl
loopne
fistpll
dec
aad
inc
ret
shl
dec
push
scas
repz
dec
cmp
movsl
mov
pop
lods
pop
xchg
jge
xor
mov
or
mov
and
mov
in
mov
repz
or
adc
ror
xor
mov
mov
fcomip
dec
push
adc
repz
mov
dec
pop
jecxz
dec
pop
shlb
sbb
movsl
mov
fstpt
adc
cmp
fmull
mov
in
bound
mov
cli
mov
rol
shrl
ret
stc
sti
out
addr16
loope
lock
fdivs
test
or
outsb
mov
jmp
aas
adc
sbb
call
xor
sti
daa
jo
in
or
cli
push
std
mov
cwtl
loop
mov
stos
in
pop
stos
xor
jle
cld
adc
and
jl
sub
stc
cmp
inc
mov
sub
sbb
pop
in
rolb
jecxz
lock
cmc
jno
pop
and
ret
fsubrs
mov
addl
movsb
push
cmpsl
adc
add
xor
dec
add
dec
ret
mov
push
int
fstps
fisubrs
nop
xlat
out
ss
fs
xor
sbb
jo
out
pop
mov
mov
in
lret
jp
dec
in
lock
leave
aaa
addr16
cmp
dec
xchg
mov
fsubs
aaa
inc
pop
fisubl
pop
cmp
and
push
nop
push
push
or
xchg
cmpsl
sbb
arpl
cwtl
cs
mov
test
sbb
je
cltd
lahf
fcmove
cmpsl
in
das
sub
cmp
rclb
jmp
out
scas
aaa
xor
mov
nop
adc
push
imul
shll
adc
inc
pinsrw
pop
rcr
adc
jnp
xor
fldenv
imul
lds
push
sahf
or
lods
sub
inc
or
out
psrld
ret
movb
cwtl
jle
jl
or
jnp
sahf
xor
xor
sbb
or
sub
aaa
pop
mov
fdivr
pop
je
shll
mov
jae
add
add
adc
or
mov
stos
in
dec
or
sub
shl
sub
aaa
stos
xchg
xchg
sbb
dec
bound
iret
jl
xor
and
xchg
addl
dec
out
out
pop
pushf
clc
jg
std
lock
outsl
push
popf
jl
fwait
or
pop
inc
leave
int
add
push
cs
cmp
insl
shl
cltd
mov
lock
xchg
push
and
cmp
xchg
jmp
sbb
mov
daa
sbb
roll
enter
mov
cwtl
add
sbb
cmp
inc
cmc
pusha
ljmp
or
pop
lret
cmp
jmp
in
adc
movsl
mov
and
arpl
ficomps
pushf
or
xor
jmp
decl
stos
pop
cmp
cmp
adc
jle
push
mov
inc
test
lret
fisttpl
pop
xchg
repz
sahf
das
fstpt
pop
lret
or
sbb
and
popa
mov
xchg
rcrl
or
std
fildl
scas
cmp
cmp
add
jle
testl
outsl
mov
aad
nop
ja
inc
sti
les
cli
dec
clc
and
jle
pop
mov
lret
mov
test
push
fwait
popa
adc
addl
leave
test
pop
ficomps
xor
cltd
out
mov
aam
cmpsl
push
or
or
pop
sbb
fstpt
inc
cs
stos
xor
or
loopne
jl
fisttps
push
data16
add
jg
daa
cmp
lock
outsl
or
jecxz
je
nopl
lcall
jb
inc
jl
daa
xor
push
cmovl
aad
fwait
jns
push
outsl
cwtl
int
out
mov
mov
xchg
xchg
je
sahf
dec
sub
imul
mov
cltd
push
pop
loopne
jmp
jle
sub
push
jnp
jb
daa
cli
shll
xchg
inc
fildll
inc
jg
aad
ja
and
test
pop
in
cli
mov
add
ljmp
pop
xchg
mov
pusha
aam
mov
mov
test
movsb
gs
loop
dec
inc
jnp
jb
faddl
fs
pop
xchg
push
cmp
mov
lcall
push
shll
xor
lods
xchg
mov
adc
or
push
jo
cld
insl
test
push
xchg
sarl
pusha
xor
and
ret
subb
in
jle
inc
fstpt
jecxz
imul
xor
in
or
je
aad
lds
sub
test
add
dec
jecxz
pop
adc
inc
lods
push
movsb
in
jb
vpsraw
sbb
dec
andb
dec
icebp
iret
adc
or
subl
pop
outsb
movsl
test
loope
repz
sub
mov
cmc
inc
mov
testl
inc
xchg
cmc
jecxz
in
aas
imul
hlt
pop
sbb
pop
popf
out
mov
mov
push
loop
fsts
mov
push
in
xchg
call
pop
dec
pop
int
pop
les
mov
sbb
xchg
dec
sbb
jne
sbb
lret
inc
pusha
sti
mov
test
inc
push
lret
in
push
mov
je
pop
mov
test
xchg
adc
das
mov
dec
in
mov
loop
mov
xchg
jp
rcrb
ret
mov
jle
aam
cmp
insl
xor
xchg
pop
inc
stos
mov
jge
mov
decb
ret
jne
int3
dec
imul
or
std
pusha
dec
pop
scas
push
loop
icebp
cs
popa
fsts
and
xor
mov
and
les
and
fiaddl
or
push
cli
ss
lds
orl
and
rclb
lahf
out
push
sub
clc
data16
mov
fsubl
add
cmc
pop
cmp
sbb
jbe
mov
dec
cmpsb
fsts
fimuls
in
ret
lret
lcall
lcall
popa
sti
mov
shlb
in
jne
aas
push
stc
inc
dec
icebp
adc
rcrl
fs
inc
mov
cmp
inc
xor
xchg
iret
lret
dec
mov
and
mov
mov
cmp
or
outsl
push
inc
mov
scas
cwtl
push
dec
and
push
cmc
mov
in
bound
inc
dec
adc
idivb
xchg
xor
cmc
pop
jae
pop
outsl
ret
int
xor
stos
lea
je
or
cmc
pop
mov
movsb
add
sbb
hlt
test
pop
lret
icebp
xacquire
jns
inc
xchg
test
push
aaa
jo
sbb
or
pop
stc
int
out
lods
loop
int3
pop
inc
push
mov
adcb
cmpsl
cmpsb
pop
pop
cli
clc
fiaddl
pop
or
pop
pop
mov
push
or
sub
pop
push
imul
mov
clc
stc
enter
sub
cmp
or
sbb
dec
js
dec
imul
mov
clc
stc
enter
sub
mov
pop
push
imul
mov
clc
clc
enter
sub
cmp
or
sbb
dec
js
dec
jmp
adc
mov
pop
add
adc
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
stc
jmp
hlt
je
div
xorl
dec
je
add
push
sbb
xor
jmp
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
jmp
hlt
mov
movsb
mov
adc
je
push
inc
jo
inc
addr16
les
sbb
and
cmpsl
jno
sbb
add
mov
jge
insb
int3
dec
scas
or
xchg
test
or
test
mov
cmpsb
fs
mov
lahf
dec
and
enter
add
adc
adc
cmp
mov
add
daa
jl
or
mov
leave
loopne
test
hlt
ja
inc
cmpsl
lcall
lcall
sub
xor
or
test
loop
add
push
fcompl
push
dec
and
push
sub
in
cmpl
mov
cs
popa
je
sti
movsb
loopne
xor
aam
in
hlt
mov
movsb
mov
fs
je
add
adc
and
jb
test
mov
aad
rorl
pop
or
sbb
imul
push
pushf
test
mov
lret
xor
cmp
jnp
push
jl
pushf
xchg
jmp
xor
test
mov
inc
imul
sub
and
xor
jmp
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
int3
roll
inc
inc
stos
xorb
lret
pop
nop
pop
aas
jo
mov
aad
and
scas
and
out
popa
push
dec
xchg
adcl
faddl
push
jno
inc
lock
in
gs
xor
xchg
clc
push
mov
mov
xor
imul
fsub
pop
and
push
adc
es
push
and
and
insb
or
jecxz
js
jge
jecxz
mov
lock
std
jmp
and
jge
xor
or
ds
xchg
adc
inc
or
test
add
sbb
daa
jae
in
add
mov
test
jle
xor
xor
call
push
adc
mov
rcrl
pop
cwtd
jae
loopne
enter
xchg
popf
or
fdivrs
insb
inc
jecxz,pn
inc
call
das
scas
test
pusha
cmp
add
push
ja
fdivl
mov
pop
std
enter
dec
daa
cwtl
shl
mov
jne
neg
mov
pusha
repz
push
inc
pop
and
imul
in
cmp
sub
sbb
adc
xchg
repz
cs
movsb
xchg
adc
jno
adc
jp
xorb
mov
or
fucomip
adc
xchg
add
aas
push
xor
mov
pop
lret
in
in
jge
insb
scas
xor
sub
in
ss
loop
fwait
pop
aam
fadds
push
xor
jmp
mov
inc
loop
xor
inc
dec
loopne
imul
lret
ret
test
xor
mov
outsb
push
xor
pop
insb
xor
push
or
das
adc
pop
xchg
xchg
mov
and
mov
out
jae
ja
ret
mov
ja
pop
test
mov
jo
lock
sub
jbe
pop
jp
cmpl
mov
out
leave
lahf
hlt
xchg
mov
or
mov
pushf
xchg
stos
mov
xor
scas
aaa
fstl
ja
jno
add
dec
jns
jbe
decl
xchg
gs
aaa
mov
pop
mov
mov
sub
inc
mov
sub
cmc
xor
cmp
mov
push
into
sbb
mov
mov
out
out
adc
mov
incl
and
nop
dec
mov
inc
fmul
shll
fstps
mov
add
sbb
mov
xchg
lcall
rorb
or
lcall
adc
shrb
mov
jbe
lock
stos
insb
and
imull
or
sbb
jo
sub
rcll
daa
pop
pop
push
lret
out
sbb
in
mov
insl
mov
cmp
dec
test
stc
xchg
ljmp
repz
shrb
fcoml
cmp
xor
sbb
mov
scas
inc
push
jp
in
int3
imul
dec
xchg
mov
data16
dec
pop
insb
cmp
jge
adc
cmpsl
and
repz
fxch
inc
xchg
pop
mov
add
ret
push
int
fsubr
push
inc
sarl
adc
hlt
cs
mov
or
sub
sub
sub
arpl
cmpsl
lods
aad
int3
pusha
insb
jno
xchg
add
inc
push
mov
pushf
xchg
iret
ret
add
adc
popf
jg
loope
mov
addl
pop
loop
mov
sbb
cmp
int
call
mov
pop
andl
sqrtps
and
xor
mov
cmc
push
pop
mull
pop
dec
hlt
adc
pop
lcall
and
xchg
dec
inc
pop
ret
mov
mov
pop
pop
mov
aam
loope
xchg
cmp
xchg
into
inc
fdivrp
int3
or
sub
inc
pop
cmp
repz
in
loop
add
sub
xchg
or
int
inc
gs
jmp
add
decl
cmp
and
std
jbe
clc
adcb
jle
push
fiaddl
push
fs
push
mov
sbb
pop
mov
push
sub
mov
adc
test
rol
das
push
push
sbb
cld
add
xchg
cmp
test
mov
add
inc
sbb
aad
mov
xor
dec
jg
lret
inc
in
push
mov
cmp
xchg
mov
push
loop
cli
repnz
js
adc
push
pop
push
in
rcll
push
cltd
mov
dec
dec
sub
jae
stc
adc
jmp
out
scas
pop
push
pop
ljmp
inc
lods
mov
cmpsb
fidivl
mov
outsb
cwtl
fcomi
push
mov
jne
mov
iret
adc
adc
push
inc
fcoms
cli
mov
dec
pop
or
pop
aam
pop
add
or
loop
fs
loopne
loopne
xchg
js
loopne
jno
stos
pop
sahf
cmp
cltd
pushf
sbb
std
dec
cltd
dec
mov
loop
es
lahf
adc
xchg
lcall
pusha
mov
add
pop
mov
fiaddl
mov
cmp
dec
ljmp
jno
jl
mov
rcrb
repnz
lods
shl
mov
pop
xchg
cmp
es
mov
mov
arpl
ret
inc
imul
xor
les
and
xchg
sti
fdivl
and
ja
imul
popa
xor
adc
imul
jo
iret
and
pop
ljmp
test
fidivl
mov
mov
adc
xor
inc
mov
adc
jg
fnstcw
je
loope
jmpw
lods
fstpl
sub
int3
add
mov
pusha
popf
mov
in
or
xchg
and
xor
scas
out
cmp
aad
shl
dec
sbb
cmp
cld
xor
adc
subl
pop
sub
out
pop
xchg
xchg
adc
and
jge
cmpsb
push
aad
jge
int
adc
mov
adc
test
mov
fistps
addr16
mov
push
dec
cs
push
cmpsl
dec
cmpsl
loope
xchg
push
roll
mov
xor
pop
in
fldt
jg
adc
xorb
inc
xchg
cmp
into
xor
push
pop
push
lret
insb
lds
arpl
xor
lods
ficompl
mov
cmp
cltd
lret
pop
xchg
jae
or
xor
jmp
aam
cmp
out
jl
add
ss
fiaddl
js
bound
add
adc
and
adc
pushf
mov
adc
cmp
and
add
scas
out
jecxz
push
sbb
sahf
xor
mov
daa
mov
and
cmp
sahf
mov
add
adc
in
imul
imul
jne
mov
iret
jle
inc
imul
jb
and
and
push
or
xchg
aad
repnz
or
test
es
imul
andb
cmp
stos
sti
dec
dec
mov
push
dec
inc
ja
out
popl
test
stc
lcall
mov
adc
lret
gs
cmp
push
sbb
dec
pop
and
cmpsl
mov
jae
add
sbb
clc
popf
in
push
enter
movsb
mov
jg
push
cmp
push
je
dec
test
and
inc
call
aaa
push
in
mov
push
or
fisubs
rcll
btr
dec
loope
pop
pop
fwait
mov
jmp
bound
lcall
jle
mov
dec
push
in
push
add
fidivs
lods
xor
out
xchg
orb
pop
dec
ret
clc
in
cmp
cmp
lods
in
add
push
jb
out
jbe
add
push
jo
rorl
push
add
in
or
pop
inc
mov
or
pusha
jae
xchg
push
rorb
dec
pop
cmp
ficoml
fmul
fwait
sub
or
sub
xor
mov
adc
test
add
mov
mov
fists
pop
fsub
ficoms
mov
mov
movsb
jno
push
cmp
cli
roll
in
aaa
xchg
loop
jp
sbb
xchg
arpl
push
bound
jle
inc
push
in
sub
cmp
bound
xchg
mov
mov
mov
cltd
xor
push
incb
inc
shl
leave
lret
mov
leave
loop
xchg
jne
fiadds
pop
sbb
lock
sbb
and
lock
lret
xchg
lcall
enter
jecxz
pop
cs
add
add
popf
sub
jae
test
cld
lods
or
shrb
push
jp
ljmp
jmp
orb
mov
jmp
jo
mov
repz
xor
out
inc
xor
ss
push
jge
fsubp
mov
clc
fimull
sub
fisubrl
fs
pop
in
jle
add
fwait
clc
add
push
or
addr16
or
and
jne
scas
push
sub
outsl
leave
iret
in
fistps
mov
repz
dec
icebp
xchg
xlat
lret
jns
ret
pop
adc
cmp
pop
push
rcrl
addr16
pmuludq
mov
aaa
out
jno
iret
push
bnd
push
or
pop
add
shll
or
cmp
jmp
bound
out
or
cmp
xor
bound
js
or
outsb
lds
cmp
test
or
out
pop
pop
lds
xchg
rol
mov
lods
ds
mov
jp
lock
fwait
pusha
dec
fiadds
pop
ja
notb
aaa
dec
sub
cmp
insl
mov
adc
or
or
stc
or
mov
add
hlt
jo
test
xor
jg
xor
adc
aaa
cli
cmpsb
and
in
das
ss
pushf
andl
loopne
pushf
incl
jno
aas
pop
daa
and
mov
cmc
xorl
jmp
repnz
outsb
dec
shl
sub
add
ljmp
sub
push
mov
add
aas
js
and
or
sub
std
fwait
inc
inc
nop
sbb
imul
movsl
or
jp
subb
inc
lret
fucomi
mov
ss
ja
aaa
scas
xchg
or
daa
jbe
jp
dec
push
push
jbe
mov
push
dec
pslld
or
gs
adc
add
pop
pop
mov
repz
cmp
or
test
fs
mov
les
out
jne
mov
test
mov
pop
mov
inc
inc
mov
dec
fxch
clc
cmp
inc
adc
call
xor
mov
dec
ficomps
cmc
sbb
das
jns
or
adc
sbb
fiaddl
sbb
fdivrl
lcall
shrl
or
stc
add
in
in
insl
loop
sbb
or
or
or
out
arpl
idivb
loopne
and
or
in
out
mov
push
mov
cmpsl
cmp
fstps
fs
and
fiadds
adc
cmp
lcall
jno
xchg
push
mov
clc
scas
adc
rclb
jl
jge
out
sub
push
loope
test
leave
lock
lahf
xchg
movsl
aas
fidivrs
lret
leave
lods
xor
xorl
jbe
push
xchg
arpl
mov
int
aas
push
leave
cld
ljmp
mov
pop
lret
add
add
arpl
lea
fisubrs
sbb
testl
or
mov
dec
mov
and
aas
mov
adc
xchg
xchg
cs
mov
sbb
scas
cwtl
loopne
dec
dec
insl
arpl
xor
cltd
pop
out
xchg
inc
mov
loope
in
fisttpll
fcmovu
fdivrp
out
test
push
push
dec
and
or
ret
add
out
cmp
stos
adc
pop
insl
lret
stos
and
adc
add
in
jns
cli
in
push
push
outsb
subl
insb
addr16
loope
and
js
stos
xor
imul
lods
push
push
mov
ja
mov
loop
jno
ret
pop
adc
ret
sahf
mov
cmp
xchg
jnp
icebp
sbb
xchg
jle
push
xor
cwtl
sub
or
cwtl
pop
xchg
or
dec
sub
or
dec
dec
mov
addl
mov
cmp
xor
add
jecxz
fucomi
outsb
call
adc
shl
imul
cmpsb
in
cmpsl
test
mov
fimuls
stos
dec
add
xor
fucom
jae
fcmovu
pusha
mov
cmc
or
sbb
fsubrl
mov
mov
mov
and
cmpsl
xchg
movsb
clc
in
rep
mov
jb
cmp
push
push
push
in
add
push
imul
pop
jns
jbe
inc
xchg
daa
adc
sub
pop
imul
xor
and
fldcw
push
push
push
or
andl
leave
js
xor
loope
scas
js
addb
or
push
mov
fldl
xor
inc
mov
mov
mov
sbb
stos
outsl
xchg
outsb
js
or
xchg
and
cmpsb
inc
movsb
aam
sub
test
in
cmp
pop
incl
xchg
mov
rcl
inc
mull
idiv
ficomps
sub
xchg
or
mov
jle
push
shll
mov
push
and
jl
clc
repz
in
dec
xor
push
push
mov
dec
in
mov
or
pop
xor
stc
mov
or
js
xor
clc
pop
sbb
add
and
mov
mov
or
movsl
push
push
sub
jle
out
xchg
add
or
mov
push
jb
jno
mov
sahf
adc
xor
cmpb
dec
mov
cmpsl
push
push
mov
insb
or
push
and
mov
outsb
and
daa
icebp
mov
xor
mov
icebp
add
or
xchg
cwtl
dec
adc
std
test
pushf
mov
movsb
leave
popa
pushf
cmpsb
es
mov
jae
adc
stos
std
xchg
or
dec
jne
mov
cmp
push
add
cwtl
xchg
cli
lret
ja
test
icebp
lea
je
add
ret
mov
jns
pusha
mov
outsl
and
dec
fisttpl
icebp
cmpb
inc
mov
jp
xchg
andb
push
outsl
jne
inc
mov
leave
call
ljmp
and
add
cwtl
notl
push
mov
adc
cwtl
pusha
nop
das
adc
xor
scas
incl
xor
adc
gs
loop
adc
test
lahf
jb
or
mov
ja
inc
mov
push
test
jmp
jg
adc
call
push
aad
cld
ret
outsl
imul
cmp
lcall
cmp
fsubs
jg
lahf
mov
xor
lcall
jo
jle
nop
out
arpl
aas
out
addr16
arpl
cltd
aam
pop
push
lods
movsb
sub
in
in
dec
pop
push
ss
ja
repnz
jp
fcoml
xchg
maxps
sbb
fistps
add
insl
sub
sub
ss
dec
imul
inc
push
bound
into
jbe
pop
arpl
filds
lcall
push
add
jbe
testl
jae
mov
pop
push
jmp
xchg
dec
mov
ljmp
add
stos
sub
adc
mov
aaa
adc
divb
loope
imul
sbb
cmp
jmp
add
ja
std
jmp
sbb
add
xchg
lret
mov
mov
mov
xchg
push
xor
xlat
test
fiaddl
loope
push
bound
sub
mov
xchg
cli
adc
in
outsb
mov
xor
outsb
mov
pop
mov
mov
sub
jge
mov
bound
lret
xor
xor
ror
sub
iret
fwait
out
pop
inc
xchg
push
pop
cmpb
cmp
xor
insb
inc
adc
xor
and
outsb
xchg
icebp
fs
pop
add
mov
mov
in
mov
and
push
pop
cltd
call
push
push
lods
mov
or
xor
inc
leave
pop
inc
imull
test
xor
out
adc
pop
mov
fwait
adc
cs
das
push
sub
cs
cmp
adc
add
dec
lcall
pop
int
mov
mov
xchg
xchg
in
xor
add
leave
xor
mov
xorb
mov
sti
inc
mov
sub
sub
iret
cmp
push
cmc
and
jnp
jle
outsb
push
push
mov
xchg
sub
subb
jno
ds
ljmp
sahf
sub
fucomip
xchg
pop
push
jnp
xchg
push
sub
popf
mov
mov
mov
mov
pop
add
lds
or
ret
hlt
in
mov
pop
ja
mov
xchg
fisttpl
jae
and
lods
adc
push
outsl
add
mov
scas
stos
cwtl
push
pop
xchg
jb
xchg
lock
les
data16
xchg
popf
ficoms
subl
ret
add
jae
xor
or
sahf
jp,pt
mov
bound
jp
jmp
pusha
jb
mov
xor
jmp
lret
outsb
sbb
or
pop
imul
enter
dec
adc
xor
sub
cmpsl
or
mov
mov
into
mov
scas
lods
fiadds
rorl
orb
loope
fdivl
mov
in
scas
mov
sbb
adc
shl
or
addr16
mov
into
xlat
inc
lods
add
pusha
cmp
cmpsb
lret
cmp
stc
out
gs
repnz
adc
fists
inc
jbe
nop
jmp
cwtl
pushl
imul
jmp
cmp
outsb
xchg
xchg
mov
mov
movsl
xchg
xor
test
add
adc
inc
fsubs
mov
andl
movb
fnstcw
je
push
testl
sti
fwait
adc
or
inc
sbb
ds
outsb
test
out
test
ljmp
ds
adc
daa
xchg
dec
xchg
push
ret
mov
popa
daa
mov
sub
outsb
ds
push
mov
mov
mov
mov
mov
mov
push
iret
mov
xchg
xor
arpl
dec
cvtpi2ps
cld
xchg
sbb
out
jno
inc
rclb
pop
push
pop
xchg
or
dec
loope
xor
jne
sahf
xchg
mov
lods
mov
cld
movsl
cmp
rolb
cmpsl
insb
push
push
xor
inc
setns
in
mov
fwait
jbe
rclb
out
hlt
sahf
add
inc
les
orb
adc
cmpsl
jg
xchg
and
and
outsb
pop
loop
or
add
jl
or
stc
addl
dec
mov
xchg
out
out
lret
mov
sub
adc
rcll
scas
enter
fidivl
mov
fcoms
add
mov
fwait
pop
add
call
pop
mov
ficoms
fcom
push
or
lret
vpmaddwd
jo
xchg
dec
lahf
inc
xchg
mov
pop
clc
data16
or
data16
cmpsl
dec
jle
dec
adc
nop
out
and
pusha
mov
outsl
cmp
ret
push
les
pop
xchg
add
mov
sub
jbe
sub
dec
sbb
push
push
int3
dec
xchg
je
ljmp
test
scas
mov
flds
inc
mov
hlt
int
dec
les
mov
bound
ss
outsl
push
sub
insl
rcll
hlt
les
adc
imul
cmp
outsl
inc
movsl
and
jno
and
or
hlt
jge
shr
mov
aam
fs
xlat
lret
mov
out
shlb
inc
mov
rolb
mov
xchg
xchg
andb
imul
iret
xchg
stos
jo
arpl
xor
sub
cmp
dec
adcl
cmp
andl
xchg
sub
jno
inc
lcall
mov
shlb
sbb
adc
dec
xchg
add
adc
sbb
jle
cmp
aaa
dec
mov
push
ds
dec
mov
lds
xor
cmovbe
inc
sub
push
repnz
lea
imul
fs
idivl
je
xchg
test
ficoml
mov
xor
or
clc
sub
cld
rorl
lret
xorl
inc
cmp
inc
fsubrl
xor
push
jmp
repz
jmp
stos
frstor
sti
mov
enter
xchg
aam
loope
inc
xor
sub
and
xchg
clc
mov
jecxz
sarb
icebp
or
repnz
and
xlat
lods
aad
jmp
xchg
inc
or
mov
popa
out
jg
push
sahf
cmp
pop
push
in
jl
jnp
pop
mov
pop
jns
push
movsl
pop
repnz
lds
scas
ficoms
add
lds
cmpsb
push
jbe
mov
cwtl
cmp
repnz
sub
or
aam
in
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
jmp
hlt
mov
movsb
mov
fs
je
add
adc
and
xor
shrb
in
cmc
cmp
mov
inc
imul
add
or
jmp
lock
and
dec
jns
imul
dec
mov
imul
stos
inc
lcall
es
pop
movsl
es
sub
sbb
sub
jp
sub
lods
push
stos
inc
stos
jbe
data16
push
ljmp
sub
jle
enter
imul
push
mov
xorb
jecxz
repz
ret
es
and
jbe
jle
push
shlb
fisubrl
shll
ror
sbb
add
lods
push
jmp
rcll
shrl
xchg
repz
dec
inc
bound
sbb
jmp
push
adc
lods
repz
aad
in
pop
xrelease
divl
inc
stos
xchg
movsb
dec
mov
enter
cmp
aad
dec
lock
sbb
cmp
push
jp
add
fists
incl
xor
lret
sub
sbb
push
arpl
xchg
data16
mov
mov
stos
popf
sub
lret
xor
aad
wbinvd
or
rol
imul
rsm
push
aad
pop
outsb
inc
pop
popa
lea
mov
aad
in
or
mov
mov
pop
jp
stos
inc
lcall
push
fidivl
shll
and
xor
add
adc
bound
push
loopne
push
iret
aas
pushl
out
daa
sahf
push
xchg
push
cmpsl
push
dec
cmpsb
sub
push
loop
sarl
das
ret
mov
mov
mov
sub
repz
sub
dec
repnz
cwtl
adc
andb
fidivl
lret
sub
sbb
or
jp
push
pop
mov
cmpsb
mov
jbe
data16
push
ljmp
sub
sbb
or
jp
push
pop
mov
cmpsb
mov
sbb
mov
gs
xchg
ret
pop
fsub
test
in
push
or
dec
xchg
and
push
add
xchg
mov
fisttps
xchg
jns
movsl
mov
movsl
sarb
and
sub
repz
xchg
xchg
dec
xor
jne
scas
hlt
mov
lods
cmp
xchg
insb
enter
movsb
sar
leave
push
pusha
push
xor
inc
stc
pop
lcall
out
rorl
push
clc
cwtl
shr
cwtl
ficompl
lock
mov
lret
xor
repz
and
hlt
dec
bnd
jle
and
push
data16
dec
dec
mov
mov
pop
stc
add
cmp
adc
or
jb
insl
mov
pop
cmp
push
or
pusha
adc
cmp
mov
pop
add
jb
mov
and
and
pusha
push
in
xlat
sbbb
push
paddd
js
cltd
mov
dec
xor
int3
xchg
xlat
adc
xlat
add
jo
inc
cwtl
movsl
loopne
dec
scas
rep
push
pushf
inc
fldcw
aad
dec
cs
loopne
mov
jb
xor
and
into
pushf
or
test
jmp
mull
mov
or
aas
imul
mov
mov
les
imul
jo
adc
or
mov
call
inc
jno
addl
movsl
aaa
mov
imul
jmp
xchg
in
xor
loope
mov
cmpb
loope
test
fdivr
push
adc
mov
enter
fwait
inc
sbb
jp
add
pop
aas
lods
and
pop
repz
push
ret
inc
imul
in
jbe
dec
pushf
sbb
adc
cmp
adc
ja
xchg
loop
cmpsl
jle
mov
pusha
andb
sahf
sub
or
fisttps
aas
jae
jo
jmp
lahf
stos
cmp
mov
lret
push
sbb
into
cmp
sbb
adc
and
shlb
orl
and
jno
cld
cmp
cmp
ss
daa
jne
ss
add
das
sub
pop
and
pop
fisubrs
push
cmp
ja
mulb
mov
jl
push
lds
imul
inc
test
dec
mov
mov
out
jge
in
shrb
bound
fwait
jnp
adc
jnp
sbb
and
and
pop
stos
mov
push
popa
popf
test
repz
adc
mov
imul
xchg
push
jns
loop
scas
in
push
xchg
popa
fwait
cmpl
adc
movsl
xchg
dec
pop
pop
fsubl
lahf
mov
ljmp
inc
jmp
push
push
pop
add
lea
aas
xor
scas
int3
insb
or
daa
pop
mov
mov
pop
dec
out
outsl
sbb
add
mov
js
das
mov
xchg
inc
sarb
cvttps2pi
mov
imul
push
mov
ljmp
xchg
dec
add
dec
scas
out
xchg
cmc
adc
icebp
push
cmp
and
xchg
movsl
stc
pusha
in
lods
and
fs
clc
shrl
popf
push
mov
pop
mov
ret
pop
xchg
xor
subb
pop
lret
outsb
add
or
or
xor
mov
cmp
stc
sti
sub
push
les
mov
pop
fidivl
out
or
arpl
ds
xchg
mov
cmpsb
test
lea
cmp
les
jns
cmp
sbb
clc
fcompl
or
jg
mov
lods
or
insb
test
insl
sbb
sbb
cltd
push
movsl
mov
imul
add
sub
xor
jmp
pusha
lds
mov
shrl
mov
xchg
push
int
out
sbb
lret
push
pop
insl
rcrb
cmp
shr
pcmpgtd
adc
ret
into
rolb
ljmp
test
cmc
jne
leave
jle
out
sahf
add
lret
dec
roll
jl
ss
rolb
and
cmp
std
mov
sbb
push
mov
inc
mov
dec
pop
enter
or
mov
sarb
je
adc
dec
jp
mov
test
test
push
inc
xchg
push
cmp
sub
mov
xor
into
enter
out
sbb
aas
dec
mov
mov
dec
dec
dec
mov
or
xchg
pop
pop
or
jle
fiadds
add
add
push
pushf
pop
push
pop
ret
or
dec
inc
ret
loopne
rorl
sbb
jne
adc
jo
or
adc
xor
lods
jbe
jmp
sub
mov
bound
pop
xor
mov
jl
jb
icebp
test
daa
xchg
stc
xchg
out
sub
pop
mov
loop
addr16
rcl
shrb
inc
inc
ror
ja
xchg
mov
fucomip
adcb
add
and
mov
cli
push
scas
push
mov
and
dec
loop
add
dec
xchg
mov
lcall
enter
cmp
cltd
dec
decb
js
and
daa
push
jp
mov
mov
ret
pop
jae
scas
cmpsb
jp
data16
mov
aas
add
outsl
sbb
fwait
sbb
add
push
scas
lcall
pop
push
int
fdivl
mov
xor
mov
jno
adc
addr16
testb
mov
addr16
cmc
int3
sbb
push
les
and
ret
jg
jle
mov
movsb
hlt
xor
pop
into
loope
out
xchg
ret
push
shlb
adc
out
xchg
sbb
pop
ret
xchg
outsl
jo
mov
cld
mov
scas
decb
push
cmp
adc
pusha
lcall
jo
popf
pop
sub
and
push
inc
add
xchg
mov
ds
in
push
js
int
jl
fstps
jmp
in
jmp
cs
cmc
add
in
dec
xchg
loopne
dec
sarb
push
sahf
inc
outsl
rcl
push
mov
inc
sbb
xor
mov
pusha
fucom
mov
rcrb
pop
jl
ljmp
popa
out
mov
sub
push
dec
outsb
or
rclb
jo
and
out
les
jnp
or
mov
jg
cwtl
outsl
xchg
jl
outsl
data16
and
cmp
negb
jge
iret
fcomps
push
jnp
lds
sbb
mov
mov
sub
clc
sub
pop
shr
sbb
popf
xchg
dec
mov
add
pushf
jge
les
inc
mov
movsb
insl
sbb
loopne
inc
test
adc
divl
lock
or
lods
repnz
mov
les
icebp
sub
mov
lock
pusha
adc
stos
sub
loop
ficomps
pop
subb
mov
mov
les
adc
out
mov
mov
mov
outsl
mov
lods
dec
push
push
mov
pushf
sub
xchg
or
aad
insb
mov
aaa
sbb
orb
jmp
cmpsb
movsb
ficompl
mov
adc
outsb
out
and
add
jnp
pop
jle
cld
lds
test
push
data16
ljmp
popf
jmp
mov
shrl
out
push
push
test
or
gs
and
in
fmull
cmp
mov
mov
push
out
sub
mov
scas
lret
je
in
xor
push
and
pop
lret
sub
add
cmpsb
in
out
add
sbb
mov
add
pop
mov
fidivrl
xchg
inc
mov
sbb
add
mov
inc
cmc
mov
xchg
mov
inc
outsl
pushf
inc
jle
cwtl
stos
sysenter
add
cmc
jl
iret
dec
pop
mov
mov
loopne
cmp
sbb
js
pop
jns
pusha
jg
add
subl
jae
mov
adc
sarb
out
adc
cmpsl
insl
adcl
leave
push
mov
ret
inc
xor
push
push
in
xchg
push
mov
sbb
push
outsl
cmp
sbb
int3
cld
adc
jmp
lods
pushf
ret
mov
sarl
sub
inc
jl
addl
lods
adc
nop
cmpsb
cld
xchg
ljmp
xlat
in
mov
push
dec
inc
inc
mov
sbb
adcl
jns
neg
mov
loope
sbb
sbb
xchg
add
test
imul
fnsetpm(287
xor
stc
fcmovnb
stos
repnz
sub
in
push
testb
es
pop
push
mov
in
and
dec
xor
and
push
mov
mov
push
out
push
cli
repz
pushf
xchg
mov
lock
ds
int
cli
adc
or
pushf
int3
stos
mov
andl
or
sub
ss
fnsave
stc
jmp
sub
add
lea
loop
jle
pop
xor
jle
xchg
scas
repz
clc
jmp
mov
mov
nop
clc
imul
ret
mov
xchg
or
icebp
adc
loope
leave
jne
jg
push
ss
dec
test
imul
outsl
insb
and
cmp
adc
imulb
or
in
and
imull
out
push
mov
sti
bound
lahf
cmp
rorb
sub
xor
outsl
shll
adc
ds
lahf
xchg
nop
repnz
gs
ret
mov
out
xor
icebp
jne
sub
push
jmp
cli
int3
cli
mov
xchg
aad
insb
push
popa
cmp
out
mov
stos
add
clc
inc
xlat
ja
les
cmp
and
sub
and
jl
je,pn
sar
adc
mov
dec
lods
in
aaa
data16
jb
rcr
mov
cmc
std
in
cmp
adc
or
rorb
pop
cld
imul
pop
inc
outsb
pushf
fwait
adc
jg
jecxz
mov
je
sub
add
pop
xlat
dec
and
pop
push
jo
mov
addr16
leave
push
mov
out
pop
jp
dec
dec
imul
das
cmpsl
outsb
dec
pushf
fildll
mov
push
test
pop
or
ret
scas
ds
pop
push
sahf
ja
cli
int3
mov
pop
xchg
in
xchg
data16
jecxz
xchg
jp
dec
xor
xlat
inc
mov
jno
stc
in
aas
sbb
push
jp
mov
movsl
addr16
in
clc
dec
inc
outsb
push
jo
and
inc
cmc
ret
inc
xchg
dec
push
cmc
mov
out
sub
das
inc
stos
imul
lret
lea
loopne
mov
xchg
in
popl
iret
mov
aam
cwtl
ds
in
xor
mov
push
adc
imul
fstpl
dec
ds
inc
sub
mov
and
mov
imul
mov
pop
les
adc
clc
xor
lds
test
adc
adc
xchg
out
icebp
out
insl
jb
mov
dec
xor
dec
push
les
jbe
mov
adc
xchg
jbe
das
cmpsb
mov
mov
jns
sbb
insw
leave
cmp
pop
insl
push
idivb
lods
sbb
sbb
and
sahf
repnz
pop
dec
adc
rcll
in
sub
into
test
xchg
jno
mov
sbb
adc
lods
data16
sub
xorb
jns
push
out
push
adc
mov
xchg
stos
xchg
xor
pop
push
stos
iret
mov
xchg
sbb
mov
mov
jno
cmp
xchg
mov
loop
dec
adc
jl
push
pop
test
push
out
nop
fimuls
push
loopne
and
xchg
jne
nop
int3
imull
addr16
push
xchg
and
jp
xor
repnz
and
dec
jne
ret
cmp
mov
mov
jecxz
add
rcrb
sub
xlat
fs
pop
cld
subb
icebp
lea
in
out
push
aaa
jmp
movsl
out
stc
and
push
jmp
and
clc
mov
sub
push
dec
and
fstps
and
push
inc
inc
imul
cwtl
mov
push
cmp
int
pop
nop
add
sub
mov
jbe
xchg
xchg
mov
pop
mov
cmp
sub
jo
jge
in
inc
push
add
push
mov
inc
repnz
ss
push
jae
in
dec
sbb
shrb
push
daa
shrd
and
pop
xor
in
and
repnz
fs
scas
sbb
ret
jne
mov
mov
mov
out
inc
shl
push
shl
frstor
or
xchg
inc
lahf
insb
int
mov
fstl
std
flds
mov
pop
fimull
mov
stos
dec
jge
in
dec
lret
das
ja
dec
sub
xchg
cmpsb
xchg
and
aas
loope
jge
adc
and
mov
adc
jne
test
dec
lcall
xor
shrb
loop
pop
sub
mov
xor
rolb
and
enter
push
popa
cmp
pop
pushf
and
fcoms
sbb
dec
mov
ret
clc
sti
jge
mov
pop
inc
movsb
inc
sub
ds
sbb
jae
insb
enter
popf
pop
aam
mov
mov
idivl
icebp
mov
ds
push
jnp
bound
addr16
inc
pop
mov
xchg
or
iret
shl
hlt
out
push
into
xchg
call
mov
nopl
bound
in
jno
aas
sti
dec
pop
push
xchg
mov
insl
jbe
jmp
repz
adc
pop
scas
daa
nop
out
xor
adc
loope
sbb
pop
xchg
imul
add
dec
lods
lcall
cmp
loopne
outsb
out
cwtl
add
addr16
mov
repnz
insl
scas
mov
mov
sub
bound
in
xchg
mov
jg
sub
lcall
nop
push
in
fs
lret
jge
popf
insb
je
dec
lods
inc
mov
mov
fisttpl
dec
test
popf
daa
roll
push
and
xor
push
add
sbb
mov
cwtl
lret
mov
orb
mov
xorb
mov
dec
sub
fdivrp
dec
add
inc
push
mov
gs
push
jle
lods
xchg
mov
mov
popw
jb
jg
sarb
inc
lods
loope
and
in
enter
fimuls
pop
int3
scas
daa
shl
sbb
std
shll
xor
mov
dec
xor
out
out
xchg
mov
push
in
fcoms
iret
fxtract
lea
je
movsl
cmp
pusha
ret
call
movsl
sub
jo
adc
add
inc
out
loopnew
cld
test
push
inc
cltd
add
icebp
imul
or
jle
in
es
int3
cmpsl
inc
adc
lea
dec
int3
xchg
pop
rorb
cs
or
xchg
and
mov
adc
loop
hlt
pop
sbb
mov
ljmp
xchg
not
mov
lea
rcrb
aas
cmp
or
add
xchg
lea
push
inc
lret
sub
pop
int3
cmpsl
adc
cmp
jb,pn
out
inc
mov
adc
mov
popf
xchg
ja
ret
test
push
adc
sbb
outsl
mov
mov
insb
and
outsb
loope
push
inc
inc
mov
sbbb
cmp
jge
mov
test
cmp
pop
push
cs
repnz
aam
frstor
ret
loope
fsubs
ljmp
fistpl
mov
xor
pop
dec
loope
scas
test
shrb
call
fildll
lret
shl
mov
mov
mov
fildl
nop
mov
mov
xorb
push
adc
sub
pop
cmp
dec
cltd
push
rclb
lret
hlt
mulb
add
xor
push
dec
inc
subl
mov
icebp
jbe
pop
in
jle
test
pop
daa
js
mov
xor
cmpsl
adc
inc
cmpsl
jno
fstpl
pushf
add
ret
pop
cs
pop
mov
outsl
lds
push
lock
jmp
gs
sub
sbb
call
push
jcxz
aas
into
ljmp
cs
popa
je
inc
aas
stos
mov
inc
pop
fwait
bound
lods
popf
sbb
adc
inc
xchg
jno
rorl
xorl
pop
mov
sub
aad
out
rcrl
push
std
pop
xchg
mov
mov
mov
or
mov
sub
shrl
loop
test
lock
mov
mov
in
add
arpl
sub
mov
jl
pusha
sub
in
leave
dec
inc
call
fs
lcall
cld
or
mov
cmp
stos
cmp
adc
cmp
push
sub
shr
push
jbe
leave
iret
movb
call
pop
adc
cmp
lods
push
cmpsb
sbb
cs
ljmp
aad
pop
mov
repz
movsl
scas
mov
addl
and
adc
stos
imul
xchg
rolb
mov
xor
push
cmpsb
test
lock
lret
aaa
pusha
jns
pushf
push
mov
xor
jbe
jbe
xchg
insb
lods
addl
sub
xchg
rcll
add
sahf
adc
arpl
sbb
xor
xchg
xor
xchg
adc
cmpsl
mov
jae
mov
push
addb
mov
and
xchg
lods
ljmp
loop
pop
push
pop
je
pop
add
adc
cmp
sbb
out
arpl
lret
mov
xchg
pop
mov
ret
int3
push
pushf
adc
popf
ret
adc
xor
mov
bound
lret
sbb
loopne
add
mov
cmpsb
xor
ds
out
imul
lea
sbb
jmp
and
fucomp
aam
lahf
jnp
test
notb
adc
xchg
inc
lock
mov
cwtl
push
sub
dec
xor
or
inc
movsb
jbe
dec
popf
add
data16
cmp
push
cld
pop
test
nop
out
loopne
pop
fstl
daa
dec
mov
push
fiadds
fcoml
in
mov
xchg
loope
aam
shrl
call
mov
mov
cs
popa
add
inc
divl
add
mov
jmp
adc
pop
inc
ss
bound
insb
jmp
push
fdivl
sbb
mov
nop
mov
stos
movsl
fcmove
lods
jo
mov
in
xor
xor
cli
inc
lock
ljmp
mov
xor
rol
cltd
xchg
imul
data16
mov
divb
cmpsb
inc
lds
mov
push
xchg
mov
in
sbb
lret
enter
arpl
bound
pop
sub
loop
int3
aas
stos
dec
jmp
or
or
jle
mov
cmp
mov
sarl
xlat
xor
dec
stos
jp
std
push
lods
gs
arpl
jge
cmp
dec
nop
push
in
or
lret
pop
in
jge
xor
ljmp
aad
dec
fcomp
sub
sub
jp
fisttpll
in
push
push
sbb
mov
sub
ficompl
mov
in
cmp
js
add
insb
lcall
in
xor
shl
in
nop
pop
adc
mov
rolb
pushf
addr16
mov
inc
xor
add
jecxz
hlt
cmpb
add
ret
lahf
pop
mov
fsub
push
test
imul
mov
xchg
jl
and
pop
rcrl
movsb
adc
les
cwtl
dec
aas
xchg
inc
push
fwait
scas
adc
xchg
dec
push
xor
or
cs
inc
hlt
loopne
iret
jecxz
jp
int
xchg
sub
pop
cmp
mov
jnp
push
and
movsb
mov
stc
nop
repnz
std
and
mov
shlb
cmp
xor
pop
aam
leave
mov
adc
je
sbb
cmp
cli
sbb
in
xchg
int3
push
pop
jo
lock
mov
in
inc
xchg
mov
xchg
sub
mov
jo
mov
lds
daa
push
lahf
lret
test
pop
add
movsb
mov
sbb
xchg
sbbl
add
mov
jp
xor
cmp
adc
adc
fisttpl
mov
scas
scas
test
aam
mov
jb
ja
mov
repz
jp
cmpb
imulb
outsb
and
js
cmp
jbe
adc
std
leave
test
stos
sti
push
scas
cs
pop
outsl
push
dec
mov
arpl
jge
iret
mov
pushl
fdivl
mov
inc
add
xor
ss
jne
mov
mov
cmp
xchg
jecxz
hlt
sahf
xchg
repnz
mov
mov
inc
mov
lods
push
rcll
pop
add
subl
push
fidivl
lret
sub
sbb
or
jp
push
pop
mov
cmpsb
mov
jbe
data16
push
ljmp
sub
sbb
or
jp
push
pop
mov
cmpsb
mov
jbe
data16
push
ljmp
sub
push
testb
jp
outsb
xchg
jnp
mov
inc
lods
jbe
data16
push
ljmp
aad
mov
or
movsl
dec
mov
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
xor
pop
movsl
push
pop
mov
fmulp
daa
add
add
add
or
add
outsb
add
add
add
add
cmp
and
add
out
add
add
add
xor
pop
add
add
add
add
add
xor
or
inc
add
insl
add
add
add
add
add
add
xor
sti
add
pop
add
add
pop
add
add
add
add
add
add
add
add
add
mov
push
add
add
test
pop
add
add
inc
add
test
or
int3
add
add
out
add
bound
pop
add
and
pop
add
add
add
add
add
add
add
test
push
add
and
add
pop
add
add
or
test
iret
add
add
add
add
ja
xor
imul
add
add
add
jge
test
pop
add
push
add
add
add
add
int
dec
add
add
add
add
pop
add
add
lret
add
add
add
push
add
loope
mov
and
add
int3
add
push
push
add
imul
or
jle
mov
pop
add
add
ja
lret
add
add
add
dec
add
add
dec
add
add
dec
add
add
push
add
add
add
add
add
add
add
add
add
loope
popl
dec
add
add
add
add
add
add
add
add
bound
roll
dec
add
add
sbb
fiadds
and
add
add
sbb
test
ja
pop
add
add
add
add
add
add
mov
dec
add
dec
add
pop
add
push
add
add
add
mov
add
add
add
test
xor
add
adc
add
cmpsl
add
mov
imul
add
cmpsl
add
add
add
add
xor
mov
add
incb
sbb
pop
add
and
cmpsb
add
add
add
add
add
filds
sbb
dec
add
int3
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
int3
add
test
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
leave
add
loopne
push
add
fadds
push
add
mov
add
xor
fadds
fadds
push
add
or
inc
add
add
add
add
add
add
add
add
add
sbb
jno
roll
add
add
sbb
test
add
add
add
popa
add
add
add
adc
add
addl
dec
add
lods
add
or
int3
add
add
add
add
add
add
add
add
daa
add
add
add
int3
add
add
add
add
xor
mov
add
sti
add
xchg
add
add
add
popf
add
int3
add
add
out
add
add
aaa
add
push
add
add
add
xor
adc
mov
roll
push
xchg
cmp
or
inc
mov
in
dec
push
jbe
xchg
sub
aaa
fwait
sub
add
pop
cmc
mov
mov
mov
pop
fwait
add
pop
test
jle
in
popf
jno
pop
xchg
ljmp
pop
sbb
dec
sub
pop
sub
add
mov
movsb
sub
pop
out
ret
imul
inc
sub
push
fnstenv
fwait
into
and
mov
fwait
and
stc
sub
pop
jne
dec
lret
lods
inc
fcomip
xchg
mov
inc
jne
xchg
sub
or
xchg
mov
adc
ljmp
add
mov
stos
pusha
nop
into
lret
xlat
imul
push
lret
fs
jns
push
imulb
sbb
xchg
data16
fdivs
xchg
popa
pop
mov
filds
mov
mov
push
jae
stos
nop
sub
test
push
and
aaa
pop
jno
xchg
iret
pop
cs
iret
xor
sub
insl
stos
cmc
add
or
jns
and
jl
cld
sbb
fwait
jnp
push
cmp
push
test
ljmp
jbe
push
bound
aad
cld
push
sarl
lcall
ret
out
dec
adcb
ret
lods
or
decb
je
xchg
idivb
popf
cli
ljmp
movsb
rcrl
mov
cmp
into
adc
dec
in
ljmp
clc
xor
mov
test
notl
stos
mov
and
sahf
jge
dec
adc
sbb
xchg
outsb
es
movsb
ret
xchg
lock
push
jp
movsl
jns
fxch
ja
dec
stos
jle
inc
xchg
mov
mov
dec
arpl
sub
xor
pop
mov
stc
lods
xor
inc
icebp
sub
shrb
in
mov
xchg
iret
in
jge
call
cmp
lea
sbb
repz
push
xor
cmpsb
ja
mov
ljmp
scas
mov
mov
or
xchg
imul
mov
mov
or
push
sarl
mov
mov
mov
stos
lds
xor
mov
push
dec
data16
cs
adc
lods
dec
loop
pop
pop
mov
dec
insl
jns
xchg
xor
push
xor
lahf
in
imul
ds
push
divl
and
adc
add
xchg
mov
add
stc
sbb
inc
insl
lcall
lods
dec
jge
jmp
lcall
mov
xor
jb
lods
mov
pushf
adc
sub
aam
push
inc
inc
stos
xor
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
