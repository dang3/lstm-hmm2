fsubr
loopne
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
fs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
int3
sbb
ds
cmpsb
jg
das
pop
pop
dec
dec
fcompl
test
mov
scas
popf
fisttpl
out
pop
push
dec
push
jge
insb
cs
or
cmp
sub
fcompl
in
scas
pushf
lock
mov
mov
insb
pop
sbb
or
cmp
sub
fcompl
mov
decl
ret
mov
dec
dec
xor
dec
xchg
push
sub
std
pop
scas
pop
adc
mov
ret
daa
movsl
or
sub
lds
popa
xor
inc
popa
popa
lret
jae
mov
push
mov
jae
or
mov
mov
fcompl
adc
sub
jmp
push
pop
cmp
jle
mov
or
inc
add
jl
filds
add
repz
ret
jns
hlt
insl
add
cmp
sub
mov
mov
pop
iret
mov
fstpt
lods
push
arpl
jmp
mov
and
sbb
mov
call
adc
jl,pn
insb
cs
or
cmp
sub
fcompl
in
xchg
pushf
loop
and
or
push
and
sti
imul
mov
jle
xchg
sbb
mov
add
dec
or
inc
jns
push
pop
mov
mov
sahf
xlat
xchg
dec
in
fwait
mov
sub
out
pop
push
dec
inc
pop
adc
cmp
sub
fcompl
in
scas
pushf
fimuls
pop
push
dec
push
jl
insb
cs
or
cmp
sub
fcompl
in
scas
pushf
fimuls
pop
push
dec
pop
icebp
inc
shrb
inc
dec
xlat
fcoms
rcll
cmp
cmpsb
or
arpl
pop
mov
xchg
fwait
or
inc
psrlq
test
roll
repz
scas
pop
sbbl
clc
mov
xor
addl
cmp
or
adc
cmp
fsub
shrb
jno
sahf
xchg
ds
or
pop
mov
push
adc
sub
inc
negb
lcall
leave
xchg
pop
inc
mov
mov
cmp
sarl
and
mov
jl
mov
sbb
jnp
addr16
or
pusha
mov
lcall
fs
mov
and
inc
push
ficoms
dec
icebp
faddp
sub
frstor
std
mov
mov
sbb
adc
aad
mov
rcl
push
jg
popf
xlat
fldl
inc
pop
pop
sbb
aad
xchg
xor
mov
adc
inc
idivl
jle
mov
gs
push
test
jl
repnz
dec
sub
insb
scas
cmpsb
dec
inc
mov
xchg
cmp
sub
aad
push
arpl
insb
xor
call
ljmp
mov
jmp
outsl
mov
scas
mov
dec
fsts
xlat
test
in
out
enter
fsub
nop
pop
cmc
push
lock
aad
lret
clc
pop
or
inc
sbb
cld
incb
ret
sahf
and
outsb
jge
cmpsl
test
jne
lcall
in
scas
jle
negb
jnp
les
mov
mov
lock
ja
icebp
cmpsb
shl
adcl
mov
sbb
push
addr16
adc
xchg
mov
shrb
popf
cmp
mov
pusha
dec
test
adc
mov
pushl
hlt
repnz
mov
cld
push
aas
inc
jne
cmp
hlt
adc
pop
push
mov
fbstp
sarl
in
fs
xchg
into
adc
pop
sub
mov
in
mulb
lret
adc
imul
dec
cmp
jle
xchg
fs
dec
add
or
dec
xchg
mov
mov
jae
int3
repnz
fldcw
incl
jle
aas
lds
lcall
sbb
loop
movsl
mov
mov
push
cld
and
push
decl
test
into
std
jo
fisubrs
or
movsb
xorl
popa
cmpsb
xchg
mov
xor
jnp
xor
loope
enter
cmpl
lock
jae
sti
or
mov
filds
addr16
rorb
je
jmp
xorl
pop
and
aaa
das
sarb
mov
xor
rcpps
pop
xchg
gs
xor
sti
mov
stos
and
testl
adc
push
or
and
sbb
mov
insl
js
popf
lcall
pop
sbb
mov
clc
fidivl
pop
adc
inc
jne
ret
daa
cmp
jmp
hlt
pop
pop
inc
jne
mov
sbb
repnz
lahf
rclb
insl
mov
addr16
sbb
add
pop
cmc
and
or
pop
test
hlt
js
shll
sbb
movsl
lods
test
arpl
sti
sub
xchg
mov
pop
orl
xor
push
inc
add
sbb
mov
das
adc
add
lock
testl
stc
push
cmp
popf
lcall
push
cmc
pop
add
shrl
test
fmull
test
mov
cmpsb
xor
test
incl
and
cmpsb
hlt
sub
sbb
or
push
es
mov
fldenv
pop
popf
inc
daa
inc
dec
mov
fbstp
insl
cmc
cmpb
icebp
cmpsb
push
mov
sub
sti
jecxz,pt
popa
in
mov
adc
pop
aad
mov
mov
unpckhps
push
outsl
scas
sbb
dec
inc
pop
cvtps2pi
out
xchg
dec
loopne
popa
cmc
ret
xchg
addr16
popf
popf
repz
jne
icebp
outsb
sbbb
jp
push
pop
push
pop
fwait
mov
jo
pop
sub
clc
inc
jle
and
pop
lret
adc
cmpsb
mov
sbb
in
dec
sbb
xor
inc
pop
fcompl
sub
add
test
mov
cmpsl
in
mov
imul
mov
sub
xchg
xor
lock
dec
flds
out
fcomp
xor
jb
jl
sub
lcall
sub
clc
out
lds
xor
stc
ret
mov
in
mov
loop
cmp
rsqrtps
test
mov
jae
hlt
mov
clc
out
rcll
sub
movsb
clc
out
cmpsb
xchg
inc
pushf
cs
adc
movsb
sub
lret
ret
out
aaa
lea
or
scas
lods
scas
add
out
mov
and
mov
mov
std
add
mov
pop
mov
mov
push
ret
sub
ror
adc
nop
xchg
fsts
mov
sub
les
lea
outsl
lods
adc
jo
cwtl
mov
andl
mov
in
cmp
test
xchg
divl
jle
dec
daa
jae
adc
jg
ret
and
sbb
nop
ret
and
sub
out
leave
mov
adc
xor
dec
lock
lock
into
fisttpll
int
adc
cltd
cmp
sbb
shlb
push
jo
pop
outsl
adc
nop
mov
jbe
in
inc
xchg
not
sub
dec
mov
gs
sbb
ja
xchg
lea
pop
push
inc
cld
mov
hlt
sahf
lods
aad
push
xchg
or
leave
inc
shlb
xchg
pop
in
xor
addb
bnd
movsb
adc
xchg
scas
inc
fsubs
dec
jo
pusha
mov
loope
pop
inc
inc
add
mov
mov
mov
xchg
inc
mov
jne
in
cmpsb
arpl
xchg
stos
cmc
mov
mov
lds
pop
mov
cmpb
push
cmp
scas
or
pushf
pop
sub
mov
jbe
xchg
jge
inc
mov
jnp
ret
aaa
jbe
sbb
outsl
mov
nop
pop
hlt
dec
int
ss
stc
cmp
pop
fwait
rclb
aas
loopne
add
sub
xchg
imul
xchg
fsubrp
jmp
adc
sub
push
push
and
xchg
mov
mov
jl
mov
ret
add
arpl
test
jo
adc
addb
scas
mov
inc
insb
push
sub
inc
dec
mov
jge
mov
popf
sti
push
push
push
int
jne
mov
je
lds
jge
dec
cmpsl
adcl
lds
dec
mov
jecxz
outsb
daa
cmp
pop
sbb
ret
or
test
add
adc
xchg
mov
jnp
fs
int3
sahf
mov
adc
inc
paddusw
cmp
ja
xor
cmc
sub
sbb
loopne
mov
int3
inc
sqrtps
xorl
push
aaa
daa
xchg
popf
pop
push
sbb
out
dec
add
sbb
jg
aas
mov
andl
mov
and
adc
pmaxsw
mov
pop
pop
pushf
lcall
movsb
out
mov
or
es
jno
adc
aas
inc
cli
gs
sub
dec
jmp
daa
test
daa
jp
xchg
shlb
adc
push
out
enter
pop
push
jbe
xchg
adc
sbb
push
push
and
gs
sbb
pop
mov
stos
add
shll
mov
addl
mov
imul
stc
adc
inc
aad
mov
sub
cmp
mulb
movsb
mov
pop
xor
faddl
in
jae
scas
mov
fs
cs
jb
call
aas
adc
test
push
xchg
std
daa
mov
xchg
mov
and
out
int3
dec
aam
std
jl
adc
imul
mov
rcl
pop
lea
cltd
test
jmp
fisttps
cmp
mov
inc
psubusb
lahf
repz
mov
jnp
or
vmread
push
and
inc
cmp
cs
lret
cmp
inc
and
dec
mov
loopne
mov
lea
push
leave
dec
gs
out
addr16
push
mov
pusha
movsl
insl
mov
pop
sub
and
shrl
mov
fwait
idiv
sbb
add
jg
dec
jb
js
xchg
xor
sbb
shll
push
in
sub
out
dec
jns
insl
lea
movsl
or
sub
outsl
jbe
jmp
inc
jbe
sbb
push
jp,pt
cs
pop
or
xchg
dec
lea
jg
mov
ss
jae
push
addr16
add
mov
test
loope
and
lahf
rclb
jg
inc
data16
outsb
loope
cltd
aad
and
sbb
xchg
iret
lods
loopne
lahf
pop
or
push
aaa
sbb
jne
add
jae
add
push
stos
cmpsb
mov
pop
add
cmp
loop
shrb
pop
mov
pop
mov
xorl
pop
pushf
lcall
jmp
pop
pop
mov
inc
rcll
outsl
movsl
test
lds
ja
and
pop
mov
cltd
jns
or
dec
inc
loopne
rcrb
cwtl
mov
adc
xchg
adc
pop
sbb
stos
and
rcll
addr16
and
and
xor
sbb
stc
rclb
hlt
jno
xor
aad
shlb
out
mov
adc
mov
cmpsl
push
popf
mov
lds
out
loope
pushf
clc
outsl
push
fdivrl
lahf
push
cmp
je
ss
dec
mov
or
mov
clc
lahf
push
scas
loope
cmc
add
outsb
cmp
inc
xchg
repz
xchg
mov
add
or
enter
pop
cmpsl
xor
pop
shrb
sub
nop
pop
rorb
mov
or
gs
movsl
stos
xor
mov
pop
fbstp
xchg
or
jo
or
stos
sbb
push
or
outsl
jge
jae
das
cs
in
mov
jmp
pusha
mov
ret
mov
jo
jb
xor
pop
test
rcr
fdivs
icebp
insb
int3
pop
loopne
push
jne
mov
sahf
xor
adc
xchg
fsubp
sarb
add
pop
xchg
cli
or
repnz
or
ljmp
jo
and
mov
ret
xchg
shl
subl
into
mov
bts
pop
stos
test
nop
frstor
adc
mov
out
ja
aas
lret
sti
fst
cli
stos
or
bound
inc
mov
and
mov
aad
mov
xchg
inc
insl
sub
insl
mov
repz
and
mov
cmpsl
fisubrs
add
or
mov
xor
les
cwtl
fwait
jg
insl
sbb
out
addr16
cmp
mov
xor
cmpsl
mulb
ja
in
mov
add
jns
pop
push
stos
xor
imul
dec
or
icebp
dec
xor
pop
jg
inc
addr16
arpl
xchg
std
je
xchg
cltd
xchg
mov
dec
insl
std
push
xchg
sub
and
add
aas
rcl
mov
fwait
int3
mov
push
sub
gs
pop
ss
pop
rolb
loop
fwait
rorb
rolb
cld
and
out
pop
xchg
movsb
fistl
test
data16
je
lea
cmp
jo
mov
clc
iret
mov
push
clc
into
dec
xor
xchg
inc
cli
xchg
xor
jecxz
cli
out
test
jg
shrb
pushf
xchg
pusha
mov
mov
pop
hlt
lods
sub
sub
xchg
or
xlat
cmp
push
dec
test
mov
and
mov
fwait
dec
popl
fidivs
mov
in
ja
test
loope
jb
dec
jno
jnp
insl
aam
jmp
xchg
out
mov
pop
xchg
call
xchg
repz
pop
mov
xor
clc
fbld
xchg
fildl
push
or
jecxz
xchg
add
inc
sti
dec
mov
sub
xor
lcall
and
sub
adc
in
jno
mov
pop
insl
jnp
sahf
dec
dec
out
pop
fnsave
dec
sub
pushf
data16
lcall
push
ficoml
cmpsl
jb
inc
dec
add
negb
insl
shrl
inc
mov
mov
idivl
testb
mov
mov
adc
or
or
repz
xlat
test
mulps
and
cmp
adc
push
pcmpeqd
push
fsubr
daa
dec
mov
in
test
dec
cld
insl
fidivl
call
mov
clc
or
push
pop
xchg
sub
les
inc
fisubrs
xor
pop
push
inc
jno
enter
into
sub
mov
shlb
xchg
pop
push
mov
push
jae
insl
and
mov
loope
lahf
add
push
daa
adc
push
xchg
mov
push
movsb
repz
inc
cmp
add
sti
ja
xchg
nop
jmp
xchg
movb
adc
mov
push
sbb
insl
mov
dec
cltd
mov
sub
pop
bound
or
pop
call
mov
mov
mov
movsb
inc
and
flds
bound
sbb
xor
xor
pop
mov
adc
push
fwait
ja
or
dec
xchg
push
xchg
es
pusha
or
gs
mov
adc
cmp
jl
mulb
popf
or
jns
cs
push
pop
jbe
rcl
jo
gs
adc
loopne
xchg
mov
hlt
les
out
aas
mov
repz
xchg
adc
jl
mov
push
mov
ds
mov
dec
out
in
and
arpl
outsb
mov
lcall
pop
jmp
cmp
and
loope
inc
xchg
dec
hlt
iret
sub
inc
das
dec
or
ljmp
stos
inc
mov
sti
xchg
cmpsl
jecxz
sub
movsl
daa
pusha
jbe
jmp
in
jo
xor
sti
flds
or
inc
or
loop
jb
daa
pushf
mov
dec
mov
iret
xlat
xor
iret
daa
aaa
stc
jl
aad
scas
mov
shll
outsb
ss
call
xor
xchg
sahf
mov
test
add
or
mov
adc
std
cmp
js
stc
jnp
popf
sub
cmp
pop
lock
and
mov
sarb
jle
inc
mov
mov
ds
mov
and
aaa
notb
movsl
pop
out
mov
mov
jl
scas
mov
ret
hlt
jg
adc
aam
push
mov
inc
in
cmp
and
inc
leave
mov
bound
adc
xor
hlt
sbb
subb
ret
lea
lock
divb
arpl
movsb
sti
aam
pushf
out
xlat
cltd
xchg
outsw
dec
jne
cmp
mov
xor
in
popa
lods
xorb
into
xchg
int3
cs
jb
pusha
cmc
mov
cmpsl
lret
sbb
xchg
scas
stos
inc
pop
sarl
or
jge
sbb
add
shlb
lcall
orb
cli
leave
push
push
enter
ret
movsl
imul
out
mov
sbb
cwtl
pop
xchg
xchg
sbb
mov
popa
pop
push
addr16
mov
fmuls
pushf
fnsave
dec
mov
ja
orb
mov
lods
inc
jb
sahf
jno
into
subl
add
sub
in
stos
nop
xor
jecxz
stos
xchg
cmpsl
pop
fidivrs
rorl
sti
fcompl
sbb
sbb
inc
into
push
notb
dec
scas
repz
icebp
or
adc
das
sub
adc
xor
and
mov
lcall
insb
xchg
lcall
aam
xor
mov
test
insb
mov
inc
mov
fldl
sub
pop
adc
testl
dec
pop
rol
jno
cwtl
fwait
cmp
xchg
btc
lahf
push
push
fisttpl
jp
cmp
inc
or
andl
les
lea
scas
loope
outsb
and
inc
mov
xchg
cwtl
xor
mov
jg
fs
js
push
nop
pop
or
mov
pushf
stc
fldenv
call
jnp
jge
cwtl
mov
clc
adc
sub
xlat
push
aaa
arpl
cwtl
xchg
fisttpll
jno
cmp
std
jl
mov
dec
jae
inc
add
cli
int
inc
xchg
dec
add
orps
ja
out
mov
rcll
mov
pusha
xlat
inc
rcl
pop
pop
loope
add
stos
movsl
xchg
ret
dec
and
jno
fwait
and
sub
cmpsb
orb
sub
dec
cld
mov
mov
adcb
dec
jecxz
dec
jnp
std
dec
popa
xchg
cmpsb
stc
or
jp
cmp
lock
test
dec
lret
sbb
inc
xchg
in
test
sub
pusha
add
shll
cmc
or
jecxz
mov
adc
cltd
mov
xor
push
jno
ds
shr
subb
pop
insl
scas
push
loope
push
mov
and
fwait
jns
jo
andl
lret
dec
mov
push
xchg
test
repz
icebp
add
in
and
inc
in
mov
mov
out
sbb
fstl
xor
add
insl
shlb
mov
imul
mov
orl
dec
out
pop
test
xchg
push
xor
jp
xlat
cmp
arpl
and
outsl
stos
jle
push
jb
int
es
push
bnd
mov
cwtl
xchg
insl
fwait
xchg
cmpsl
das
in
sarl
bound
push
xor
int3
add
test
cmp
aaa
mov
rclb
pop
lahf
rorl
lods
push
test
add
cs
add
lcall
mov
mov
jecxz
call
and
lods
test
sub
repz
dec
aaa
lods
xchg
adc
fidivrl
ljmp
pusha
dec
inc
push
in
push
add
testb
call
xchg
and
inc
popf
data16
fbld
insb
shlb
pushw
nop
divb
jo
mov
push
dec
push
outsl
and
pop
cltd
iret
jno
fcmovb
pop
pop
adcb
addr16
mov
sbb
hlt
or
cmp
inc
adc
mov
pop
jae
xor
sub
fstps
fcomps
ljmp
fidivrl
pusha
mov
repnz
or
imul
pop
mov
xchg
lahf
leave
andb
jno
ss
int3
mov
push
dec
ja
inc
xchg
xorb
stos
pop
fwait
and
outsb
es
test
jbe
aad
xchg
pop
cmpsl
push
pusha
adc
jb
cmp
cwtl
jge
scas
hlt
mov
in
into
sbb
or
int
outsb
inc
jg
push
imul
dec
sahf
bound
inc
lcall
sbb
mov
and
push
rcrl
jne
les
xchg
in
push
sbb
xchg
cltd
and
test
out
in
pop
bound
icebp
insb
lods
in
xchg
int3
pop
icebp
pushf
xor
push
gs
imul
cmpsb
jp
rcrl
cmp
cli
stos
stos
dec
xchg
mov
dec
lds
scas
lret
cmp
ljmp
or
pop
mov
add
push
rolb
lahf
push
xchg
lds
xor
out
lret
test
mov
jnp
cld
outsb
lahf
jge
sbb
cmp
stos
adc
mov
cmp
adc
loop
mov
add
push
push
lods
aam
fadds
xchg
add
test
inc
test
adc
fs
jbe
in
lret
mov
popa
ljmp
mov
jg
pop
mov
aad
inc
outsl
sub
dec
and
neg
js
hlt
fdiv
sub
test
lcall
dec
fwait
push
int3
insl
sbb
cmp
out
mov
add
sub
push
sbb
ret
and
dec
adc
dec
loop
xlat
mov
jbe
sub
in
lock
jl
dec
sbb
jmp
cmp
push
or
xlat
xor
std
int
scas
and
push
xor
cmpsl
mov
pop
lock
mov
dec
into
mov
mov
addr16
dec
daa
loopne
cmp
pop
sbb
outsb
js
mov
cmpsl
jmp
lret
les
mov
jne
test
sub
jne
repz
lods
lock
orl
repz
xchg
jo
mov
in
sbbl
scas
lret
dec
scas
and
in
loop
inc
mov
das
sahf
setg
add
lret
iret
pop
push
jns
in
lods
mov
push
or
dec
sbb
dec
cmp
pop
or
cmp
sub
fcompl
in
scas
pushf
fimuls
pop
push
dec
push
jl
insb
cs
or
cmp
sub
fcompl
in
scas
pushf
fimuls
pop
sbb
es
sub
or
cmp
sub
fcompl
in
cmpsl
pushf
fimull
pop
cli
dec
ljmp
or
cmp
sub
fsubl
and
mov
add
inc
xchg
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
sti
xchg
xchg
imul
mov
sbb
cmp
push
or
ja
xchg
xchg
stos
xlat
fwait
out
xchg
imul
pop
pop
es
aaa
cmp
sbb
or
xchg
xchg
ret
cmpsl
shll
and
mull
dec
xor
inc
xor
add
add
lret
test
fcomi
mov
cmp
dec
repnz
test
jl
into
sub
ret
cwtl
cmp
mov
xlat
stos
pop
push
outsl
push
jge
pop
inc
call
imul
sbb
hlt
es
pop
push
sub
jo
mov
sbb
cmp
xor
pop
xchg
push
arpl
enter
imul
or
adc
stos
xlat
fs
mov
lock
push
outsb
loope
mov
push
sub
stos
inc
pushw
sub
mov
idivl
lods
add
mov
inc
in
sbb
pushf
sbb
inc
mov
jle
pop
out
es
sbb
jle
js
sbb
mov
xchg
xchg
mov
mull
jae
inc
daa
push
aaa
and
push
add
xor
out
test
int
orb
sub
cmp
dec
adc
data16
mov
xchg
fwait
mov
fnstcw
bound
gs
inc
or
and
insl
add
sahf
movb
repz
stos
xlat
fwait
out
idivl
imul
daa
dec
aaa
cmp
push
sbb
ja
xchg
xchg
stos
xlat
fwait
out
idivl
imul
daa
dec
aaa
cmp
push
sbb
ja
xchg
mov
xlat
xor
push
cltd
mov
adc
sub
mov
push
loopne
and
cmp
fsubl
jmp
cmp
fcoml
lcall
test
movsb
aas
jmp
inc
add
into
xchg
dec
sbb
dec
jo
jge
fwait
add
pop
stos
and
cmpsb
mov
mov
fxch
adc
fistl
and
sahf
xchg
sub
dec
inc
push
repz
mov
repnz
cltd
cmpsb
clc
popa
lcall
xor
sbb
daa
xchg
adc
mov
icebp
cmpsb
sti
cmpsb
ljmp
xchg
pusha
push
outsb
pop
inc
cmpsb
xchg
out
das
cmp
sbb
int3
notl
push
clc
fldcw
mov
in
cmp
and
cmp
insb
cli
aas
scas
mov
ret
sarl
pop
stc
mov
ljmp
popa
xor
mov
imul
sub
adcb
fidivl
dec
cli
jb
fistl
jle
fstl
mov
pop
popf
mov
xor
push
bound
das
sbb
aas
pop
sbb
xor
rol
add
jbe
xlat
imul
mov
insb
dec
push
movhps
mov
clc
fstl
jmp
jno
mov
or
rcll
push
pop
ret
xchg
sti
out
stos
dec
xor
dec
fmull
ds
mov
sub
movsb
loopne
imul
mov
popf
test
mov
inc
cs
cmp
iret
sbb
incl
xlat
repz
pushf
shlb
mov
push
xchg
cmpsl
add
ljmp
jae
cmp
add
add
jg
je
xchg
pushl
dec
andl
mov
adc
xchg
xor
fisubl
and
das
test
dec
inc
std
mov
add
dec
andb
push
and
push
push
pop
adc
in
and
jg
daa
dec
mov
inc
push
mov
test
push
js
xchg
lods
pop
add
and
scas
xchg
mov
icebp
mov
cwtl
jnp
adc
xor
pop
or
inc
pop
mov
arpl
add
adc
xchg
fstpt
leave
push
imul
cltd
addl
pop
out
jo
dec
mov
rol
mov
and
sub
push
push
and
xor
jmp
arpl
jmp
mov
mov
iret
pop
outsb
in
pop
inc
and
aam
test
jle
pop
jmp
push
mov
mov
popa
pusha
xsha256
cmpsb
adc
dec
jecxz
cmc
arpl
addl
jmp
lret
xorb
push
pop
test
sub
repz
dec
mov
jg
jne
pop
lahf
jns
ficompl
xor
stc
test
mov
gs
lret
sub
dec
cmp
and
lcall
aad
std
jae
inc
out
xor
cmpl
cmp
sub
sub
addr16
repz
mov
lds
push
jne
xor
xchg
cmp
mov
stc
xor
aas
xchg
call
push
sub
jg
jecxz
mov
popf
jb
popf
lds
mov
in
dec
xchg
pop
jb
sub
inc
push
sti
addr16
inc
pop
ret
sti
dec
lcall
je
sbbb
dec
rcr
xor
dec
loopne
bound
test
cmp
cwtl
inc
sub
xor
mov
mov
sbb
es
sub
and
jle
mov
push
push
cmp
cmpsb
stos
add
adc
jle
clc
ficoml
xorl
and
jne
jns
jmp
fstpt
jge
ret
jp
mov
das
call
nop
add
bound
push
dec
or
xor
pushl
mov
xor
pop
popa
cs
dec
es
and
dec
in
inc
ret
dec
or
pop
pop
stos
cmpsb
pop
arpl
jl
jbe
lods
aad
cltd
mov
lahf
sbb
jns
mov
inc
loopne
nop
pop
shlb
push
push
stos
cmc
adc
scas
insl
daa
scas
insl
lcall
popa
addr16
movsb
test
pop
sub
int
test
pop
cmp
outsb
and
adc
pop
inc
and
sarl
popa
lahf
mov
sub
int
add
add
or
lahf
aam
xor
int3
xor
hlt
sahf
mov
mov
std
sub
rcrl
xchg
or
pop
aas
cmpsl
add
push
jge
insb
or
sarl
sub
sti
sub
sbb
push
and
test
push
sbb
add
and
out
fimull
imul
repz
add
cmp
loopne
mov
in
xor
mov
push
jg
jge
test
xchg
imul
jmp
inc
pop
mov
push
mov
cmc
gs
jo
jb
nop
mov
xchg
cmpsb
rolw
or
pushf
dec
pop
mov
pop
fwait
push
inc
or
inc
je
cmp
nop
jp
pop
idivl
pop
cwtl
mov
sarb
lret
rcll
rcrl
aaa
push
insb
inc
mov
ret
rolb
pop
in
or
xor
or
scas
mov
mov
pop
lret
movsb
ret
mov
aam
pop
xlat
add
dec
jp
xchg
dec
xor
imul
mov
jae
cmp
inc
push
fwait
es
fiadds
adc
mov
or
lods
adc
adc
pushaw
pop
pop
push
insl
repnz
mov
daa
movsb
cmp
jne
jbe
cmp
xor
mov
jbe
test
fistl
xor
mov
dec
addr16
xlat
out
jmp
mov
jl
je
mov
push
or
imul
push
jae
mov
dec
call
mov
cmp
push
cmc
enter
into
push
xor
mov
jnp
inc
insl
mov
mov
roll
xor
icebp
xchg
ljmp
dec
imulb
cmpsb
lret
push
test
xchg
xchg
or
dec
jmp
in
fs
imul
test
call
repz
fmuls
pop
and
std
int3
jecxz
shrl
aaa
mov
fildll
adc
mov
nop
loop
pop
stos
data16
mov
lahf
xchg
jl
mov
push
sub
loope
pusha
inc
fidivl
adc
or
inc
adc
imul
jae
pushf
int
cmp
icebp
jae
lahf
xor
adc
lret
mov
sub
mov
test
inc
call
sub
jl
test
xor
mov
roll
cwtl
int
inc
outsb
and
jmp
bound
ret
xchg
push
mov
ret
data16
out
loopne
inc
mov
rorb
insl
daa
mov
inc
iret
inc
push
hlt
sbb
test
mov
mov
add
lea
pop
mov
inc
cs
js
popa
cmp
aad
fisubl
sbb
dec
mov
xor
sbb
mov
sbb
lods
cld
and
jne
lahf
sbb
cmpb
leave
das
push
lcall
xchg
sub
jnp
ss
out
and
fwait
subl
add
mov
cmp
lret
stc
imul
mov
lock
fimull
mov
pushf
sbb
jne
loope
fisttpl
add
hlt
gs
push
insl
mul
outsl
fbld
aad
mov
test
loope
cld
cmp
sub
das
sbb
cli
push
adc
sbb
pop
out
add
arpl
mov
dec
daa
fs
subl
jmp
xchg
jp
adc
outsl
sub
pop
adc
jnp
and
xchg
cmp
mov
or
ret
cmp
inc
test
xchg
aad
or
sbb
pop
push
push
andb
or
out
and
js
push
fsubrs
pop
sub
push
fsubrl
ljmp
pusha
popl
adc
mov
or
adc
jnp
rorb
clc
daa
je
mov
repnz
mov
fldln2
xor
cli
cmp
ret
je
or
push
pop
sub
xchg
in
cmpsb
clc
xchg
sbbb
cli
jmp
lods
mov
add
sbb
jp
data16
ja
mov
call
mov
or
sub
adc
aas
aas
lret
stc
jo
jbe
aaa
pop
xchg
dec
jecxz
iret
pop
mov
enter
lret
in
ja
fwait
adc
and
lcall
push
pop
lcall
ffreep
idivl
ja
dec
decb
xor
inc
mov
ja
sbb
std
pop
filds
popf
test
and
jg
iret
dec
aaa
cmp
mov
fisubrl
mov
daa
ret
or
gs
inc
jl
sbb
das
adc
sarb
dec
mov
outsl
mov
loop
mov
mov
ret
xor
cmpsl
pushf
scas
mov
pop
jecxz
pop
js
out
jne
testl
ficomps
fmuls
xchg
hlt
cmovge
into
sarl
cs
fdivs
fcomp
mov
daa
xchg
aad
das
cmp
and
notb
icebp
ud2
outsl
xchg
fldenv
ja
mov
mov
lahf
mov
and
in
pushl
leave
insb
lahf
sahf
or
inc
add
mov
mov
inc
mov
leave
sti
sbb
cmp
sub
sub
stos
dec
xor
cld
push
mov
dec
loope
dec
pop
in
xchg
jns
nop
mov
inc
out
pop
insl
add
stos
dec
shrl
ljmp
pop
mov
or
pop
pop
out
stos
jns
add
fnstsw
push
mov
push
scas
cmc
outsb
rorl
mov
cmp
mov
push
stos
aaa
pop
movsl
inc
cmp
xor
fnsave
ja
xor
les
in
push
push
into
dec
scas
xchg
push
push
xor
xlat
mov
cbtw
and
lcall
jo
jmp
icebp
leave
adc
adc
add
fisttpll
jge
test
leave
adc
cmpl
adc
push
bound
xor
pop
pushf
cmp
xor
push
loope
mov
push
cltd
push
jmp
aad
leave
dec
sbb
mov
jle
scas
arpl
inc
sub
lahf
push
xchg
jle
ret
fucomip
loopne
cmp
inc
cmp
shrb
bound
stos
out
fxch
es
jne
out
popa
sub
inc
xchg
adc
cmp
iret
push
jnp
push
adc
cmp
jecxz
inc
sbb
out
xchg
jp
push
sub
bound
mov
pop
push
imul
nop
mov
cmp
loop
stc
out
sti
pop
mov
shl
outsb
mov
or
add
scas
lock
pop
fldcw
jbe
push
add
movsb
xorl
enter
xchg
stc
pop
into
cld
mov
add
mov
loop,pn
and
addb
ss
je
pop
or
jge
cmpsl
leave
mov
cli
sbb
mov
mov
and
mov
sti
aad
pop
arpl
lods
ds
push
inc
repz
lea
sbb
jl
aad
pop
inc
scas
push
out
pop
jns
xor
xchg
repz
arpl
mov
divl
dec
mov
push
jl
mov
sub
ljmpw
inc
sbb
sbb
sub
das
lods
aaa
arpl
out
repz
stc
out
aas
jne
pop
add
push
testb
jnp
mov
repnz
sub
mov
sbb
push
sub
movsb
xchg
dec
js
fsub
lret
cmpsl
jle
add
pop
dec
sub
inc
xor
cltd
test
data16
pop
aad
inc
lret
addl
dec
xor
popa
pop
sti
sti
out
cmp
mov
bswap
in
out
sub
push
fs
and
ret
idivl
and
fisubl
roll
fsubrp
bound
lods
pop
shrb
sbb
cmp
adc
cmp
ret
out
cmp
inc
jnp
mov
mov
fnstcw
sbb
push
push
mov
jns
in
xchg
or
adc
or
xor
cmp
inc
xchg
or
mov
lret
sbb
adc
add
cltd
outsl
or
push
or
test
fmull
mov
adc
or
pop
pushf
stos
outsb
dec
popl
fisttpl
or
loopne
jno
add
xchg
sbb
cli
add
mov
repnz
rolb
add
lahf
mov
dec
cltd
mov
pop
and
adc
insb
jbe
stc
cmp
popf
xchg
movsb
and
popa
adc
arpl
xchg
insl
popf
pop
lea
divl
adc
fiaddl
das
push
scas
inc
orb
pop
in
pop
nop
xor
imul
fcoml
sub
aas
divb
inc
and
shll
mov
sub
jecxz
insb
clc
adc
std
les
mov
test
push
cmp
loope
fnstenv
fstps
ljmp
adc
aas
sarl
movsb
lods
sub
mov
es
pop
push
xor
mov
enter
test
xor
mov
cmpl
xor
pop
add
mov
sti
lret
jnp
pop
xchg
mov
jl
pop
stos
push
or
ljmp
and
push
adc
or
pop
mov
and
mov
pusha
jno
stos
jl
mov
sahf
xor
add
jns
adc
mov
call
pushf
xor
pop
fidivrs
lahf
dec
fwait
rclb
sbb
cmpxchg
lret
pop
fstpl
sbb
dec
ja
dec
idiv
push
xchg
pusha
ja
stos
push
push
mov
pusha
push
jo
and
aad
or
adc
test
cmp
sbb
out
rcrb
sbb
shll
mov
out
xchg
cmpsl
out
addr16
scas
das
xor
or
sbb
clc
cmp
aaa
fcmovnbe
sbb
cwtl
daa
and
mov
pop
mov
stos
mov
xor
montmul
cmpsb
in
into
mov
mov
lret
leave
pop
pop
push
gs
testb
pop
imul
pop
fs
stc
and
adc
pop
imulb
sbb
outsl
cmpsl
movsb
mov
mov
cwtl
leave
pop
jg
adc
jl
repz
jmp
xor
sahf
popl
shrl
jnp
rcrl
mov
fbld
xor
mov
mov
jle
test
xchg
mov
js
mov
into
xchg
dec
insb
outsl
xchg
mov
and
stos
cmpb
mov
arpl
roll
jno
cmpsl
inc
mov
and
jns
fsubl
in
frstor
aas
and
leave
xor
std
inc
sbb
xor
out
jae
test
mov
pop
xor
sbb
xchg
repnz
inc
mov
imul
loop
inc
mov
and
popa
dec
je
addr16
scas
stc
dec
jno
cmp
and
xlat
mov
push
mov
cmp
enter
cld
leave
clc
lret
movsl
mov
enter
pop
imul
dec
mov
dec
xchg
test
xchg
cmp
aaa
jns
add
lahf
and
outsl
dec
push
in
imul
stc
jl
jno
mov
jmp
xlat
nop
je
imul
adc
ljmp
movsb
dec
push
fs
bound
inc
test
in
dec
cltd
iret
xchg
ficoml
fiadds
inc
in
and
pop
mov
push
mov
gs
inc
lods
jecxz
imul
jb
sbb
mov
arpl
sbbl
std
add
cltd
sahf
mov
gs
push
negb
fwait
mov
mov
lods
shlb
xchg
mov
fucomp
ljmp
jae
or
je
je
push
out
mov
test
mov
sbb
or
cmc
cmp
pop
mov
jp
jo
notl
into
xchg
and
jl
lods
lock
adc
lock
xchg
fcomps
mov
sbb
jp
stos
mov
xor
mov
mov
jl
cmp
jne
jl
ficoml
xchg
int3
mov
enter
cmp
jg
cmpsb
inc
or
imul
jg
loopne
pop
mov
and
jmp
cmpsb
mov
cmp
add
daa
outsl
pop
push
add
lock
mov
and
sub
xchg
sbb
repnz
in
ds
loop
dec
inc
inc
jno
inc
in
aam
out
in
cmpsb
jne
out
add
lcall
idivl
xchg
push
fmull
push
mov
cmp
idiv
psubsb
mov
int
pushf
and
call
repz
and
test
popa
fs
dec
das
loop
jge
data16
test
scas
das
mov
ficoml
mov
jg
movb
insl
push
int3
lds
push
lret
stos
mov
sub
test
adc
push
fcmovnu
jne
out
les
ret
roll
or
imul
loop
cmpsl
ljmp
inc
push
sarl
and
adc
or
lods
jae
cmp
in
cmpsb
cwtl
dec
addb
inc
movsl
xchg
insb
mov
jbe
pop
cmp
rcl
outsl
inc
xchg
sub
int3
jle
pop
bound
je
inc
sbb
xchg
out
dec
loope
int
cs
and
hlt
pop
xchg
sub
divb
aas
imul
or
lret
das
popf
and
stc
push
mov
lret
shl
movsb
lea
push
inc
adc
outsl
inc
or
pop
cmp
add
fistpl
jmp
sbb
subps
lcall
sbb
jae
pop
iret
mov
jnp
fidivs
or
insl
imul
ret
mov
cmp
iret
xlat
fmul
lcall
fistpl
shll
dec
aad
arpl
push
mov
cmp
pusha
and
xchg
sbbl
cli
mov
fadd
sub
imul
jno
sbb
mov
inc
inc
pop
xor
fsubrp
in
fidivrs
and
out
pop
dec
jg
jmp
mov
aas
fwait
push
push
aas
mov
mov
dec
xchg
aam
inc
mov
lret
popf
stc
mov
mov
shr
test
dec
xlat
mov
in
dec
jae
sbbl
jne
cmp
int
pusha
dec
inc
dec
lods
inc
sbb
add
inc
shrl
xor
inc
idiv
jle
mov
fucomp
xor
pop
nop
sbb
imul
fnstenv
lret
addr16
inc
xor
push
xor
or
or
ror
cmp
xor
into
pop
out
push
mov
lahf
mov
sbb
adc
clc
dec
jb
out
popa
jae
inc
xchg
imul
jno
xchg
fimull
inc
mov
sti
rolb
fcmovnb
hlt
and
cs
pop
rolb
add
inc
cwtl
mov
out
ljmp
lock
cwtl
fdivrs
test
pop
mov
repnz
pop
fldcw
xchg
scas
cmp
lods
lcall
scas
push
loop
adc
shrl
and
sbb
fwait
ss
pushf
xchg
push
shl
sub
sar
fildl
sbb
dec
test
xor
inc
int
xor
aaa
imul
dec
push
std
out
imul
daa
cwtl
push
aaa
jge
iret
lods
dec
mov
fwait
lods
add
mov
test
jge
mov
adc
push
fwait
cmp
sub
insl
pop
mov
test
arpl
in
aaa
movsl
lcall
fists
mov
sub
jg
pop
outsl
out
ja
lret
pop
adc
cwtl
enter
add
push
sbb
mov
and
and
or
insl
fcoml
shlb
pop
lret
iret
mov
push
sahf
push
ljmp
sarl
push
notl
pop
pop
cmp
insb
xor
adc
cmp
mov
jle
ficompl
pop
fmul
aam
mov
or
fisubl
popf
cmp
aas
gs
sbb
sub
xor
sub
aam
pop
jne
mov
scas
sti
std
mov
repz
insb
mov
paddq
ficoms
pop
test
test
mov
xchg
or
lcall
sub
mov
cwtl
sub
rorb
dec
les
add
and
jne
dec
int
jl
sub
mov
fildll
enter
push
xchg
fucomp
mov
sahf
inc
into
ret
test
xchg
int3
lods
or
add
pusha
cmpsb
stos
and
ror
and
cmp
pop
mov
and
add
out
jne
gs
sub
jl
jmp
cmpsb
mov
cmp
cmpsl
lret
mov
stos
xlat
fwait
out
idivl
imul
daa
dec
aaa
cmp
push
sbb
ja
xchg
xchg
stos
xlat
fwait
out
idivl
imul
daa
dec
aaa
cmp
push
sbb
ja
xchg
xchg
stos
xlat
fwait
out
idivl
imul
daa
dec
aaa
cmp
push
sbb
ja
xchg
xchg
fisubl
stos
xlat
sbb
or
test
xchg
mov
dec
iret
mov
mov
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
into
iret
sub
mov
push
mov
inc
push
mov
lods
and
push
loopne
shlb
xor
add
jo
pusha
jecxz
repz
push
mov
mov
inc
xchg
aaa
xor
jae
pop
sub
and
imul
lcall
jle
ret
dec
out
les
out
lock
xchg
mov
fsubl
sub
fwait
insl
les
cwtl
cmp
xchg
sti
sub
enter
xchg
out
dec
faddl
ret
sar
ror
andl
mov
lods
inc
xor
int
mov
cs
pusha
jmp
ficoms
out
ret
mov
push
loopne
pop
xor
jg
mov
mov
pop
out
jae
cmp
push
pushf
cmpsl
add
mov
mov
push
insl
xor
push
aas
push
aas
xchg
rcrb
dec
dec
sub
sti
mov
mov
test
nop
mov
arpl
mov
xchg
aaa
mov
jo
pusha
jecxz
dec
pop
icebp
test
mov
and
dec
mull
pop
movsb
icebp
push
in
out
fldl
lods
cmpsb
push
lock
sub
jae
push
out
sub
xor
orl
in
js
stos
add
sub
leave
push
roll
ret
xor
xor
shll
jne
sbb
pusha
jecxz
repz
add
xor
arpl
jae
xorl
and
jo
pusha
jecxz
repz
add
xor
arpl
jae
xorl
cmpsl
or
in
adc
in
xchg
test
mov
mov
mov
leave
or
shrb
mov
stos
and
push
fbld
push
fcoms
pushf
mov
sbb
push
xor
add
inc
inc
pushf
push
adc
jmp
addr16
xchg
movb
inc
jecxz
roll
insl
cli
sbb
jno
icebp
sub
outsl
pop
inc
mov
jge
clc
mov
mov
aam
mov
mov
sti
pause
pop
jo
loopne
mov
jecxz
mov
lret
rorl
aaa
cli
dec
sbb
sub
push
push
cmp
sbb
cmpl
aad
test
pop
adc
dec
ljmp
or
mov
out
adc
push
in
sti
mov
xchg
and
in
imul
or
bound
adc
fstpl
mov
xchg
jmp
adc
jbe
jle
dec
movsb
cli
dec
rcl
dec
pop
fcmovu
pop
dec
xchg
in
xor
in
dec
ds
adcl
imul
dec
iret
cmpsb
in
ljmp
jo
es
test
pop
lods
jb
decl
orl
fisubs
push
ret
pop
sbb
out
out
mov
jns
nop
fs
push
lret
pop
mov
and
sub
outsl
fnstsw
outsl
mov
mov
repnz
shl
fidivl
inc
stos
inc
bound
and
push
mov
std
rcrb
mov
imul
subl
push
pop
mov
or
xchg
lahf
jae
nop
icebp
xchg
mov
or
gs
paddd
pop
inc
jb
mov
loop
shrl
sub
sub
lods
sub
or
gs
jp
iret
xor
lods
jnp
xchg
lods
cmp
sbb
outsl
push
popa
mov
add
in
xchg
dec
add
test
push
xchg
xor
mov
mov
movsb
popa
ret
mov
jnp
mov
mov
mov
pop
pop
pop
mov
loope
call
dec
xor
adc
decl
jo
or
int
mov
push
xor
repz
pop
fcomps
xchg
mov
xchg
sub
xor
testb
popf
rcrb
xor
daa
mov
pop
bound
out
movsb
in
mov
xor
push
pop
mov
hlt
mov
mov
pop
shrb
push
mov
lods
push
int
lret
insb
inc
inc
sub
pop
stos
xlat
mov
sbbb
sub
idivl
xor
ficoms
dec
in
into
mov
push
out
scas
outsb
aas
data16
cmp
out
fdivs
test
mov
push
push
clc
mov
dec
mov
addr16
mov
add
fildl
push
stc
and
in
sbbl
push
dec
cmp
scas
ror
sbb
fiadds
cltd
cmp
xor
jne
sarl
clc
xlat
xchg
push
mov
adcb
mov
fiadds
inc
lahf
push
fstp
mov
mov
imul
push
test
aaa
insl
push
nop
aaa
enter
out
or
xchg
inc
mov
pop
mov
lods
icebp
pop
push
mov
or
fstl
mov
daa
outsl
int3
push
movsb
sub
jp
enter
psubsw
nop
inc
fs
out
cmpl
les
int3
or
cs
rorb
in
hlt
adcl
pop
cmc
and
push
push
pop
cmpsb
inc
js
sub
mov
sbb
push
mov
arpl
int
push
out
pop
sbb
mov
aaa
and
dec
scas
pop
out
adc
push
rorl
iret
ja
test
add
mov
orb
loopne
adc
pop
mov
or
sarl
adc
cltd
pop
sub
pusha
mov
and
cli
sub
lret
repz
shll
cmpsb
lds
ds
insl
pop
mov
int3
xor
pusha
or
mov
jmp
adc
mov
enter
xor
nop
push
pop
fldcw
fsubrs
jp
mov
push
xlat
dec
sbb
and
fisubrs
pop
out
rcrl
push
out
cmpb
xchg
xchg
mov
pusha
sub
cmc
out
je
and
nop
mov
and
fnsave
jp
mov
cmp
jb
jnp
aas
popl
outsl
jle
pushw
rclb
dec
sub
addl
add
fadds
fmull
das
loop
mov
mov
cmpb
aas
sbb
jp
f2xm1
dec
dec
dec
into
aaa
jecxz
test
xorl
sbb
adc
jmp
cmpsb
ret
or
add
scas
push
ja
repnz
outsl
sbb
xor
sbb
insb
xchg
icebp
loope
xor
sub
sahf
fs
cmpsb
repnz
int
js
lea
add
daa
pop
stc
inc
ds
arpl
xor
xor
mov
jb
push
out
lcall
int
int
push
enter
jns
or
dec
mov
and
mov
pop
cltd
scas
xor
fnstsw
sub
jle
push
test
jmp
pop
shrb
jmp
lock
sub
adc
into
inc
mov
push
mov
or
dec
mov
cmpsb
stos
dec
xor
bound
scas
inc
repz
jno
insb
sub
hlt
test
cwtl
test
dec
jmp
adc
jno
push
ljmp
jns
push
dec
mov
lods
lret
push
dec
insb
sbb
imul
inc
bound
xchg
insb
out
in
pop
mov
mov
or
jecxz
inc
xchg
gs
dec
or
mov
stos
add
pop
mov
mov
jae
dec
cmp
mov
inc
add
inc
sbb
aad
push
arpl
or
out
jbe
fld
cmp
add
dec
in
inc
cmp
sahf
fcomps
rorl
fwait
loope
stos
aaa
mov
or
fs
out
hlt
imul
bound
mov
decl
fs
scas
in
icebp
jmp
xor
dec
xchg
repnz
sbb
scas
stc
sbb
or
jb
fildll
sbb
dec
enter
xchg
mov
jns
xchg
mov
mov
mov
mov
adc
push
rolb
out
xchg
stc
cmp
and
ret
lods
xchg
adc
cli
mov
pop
rcll
mov
rorb
lret
negb
xor
xchg
sub
mov
mov
and
xchg
orl
scas
adc
loopne
jb
test
ds
and
loopne
jl
cmp
cld
sahf
add
outsb
lret
xchg
mulb
mov
xor
out
mov
in
scas
popf
jg
dec
add
xchg
cmp
jae
pusha
add
arpl
cmp
or
cmp
add
and
adc
repz
mov
roll
push
push
adc
rclb
aas
loopne
and
add
sub
mov
mov
push
clc
adc
pop
int3
xchg
loope
mov
mov
cld
jmp
in
xlat
testb
jo
in
push
mov
mov
sahf
jl
mov
pop
cmpsl
movsb
dec
sbb
repz
push
je
cmp
xlat
jl
sub
push
mov
sub
and
xlat
cli
mov
jecxz
imul
push
add
lds
xor
jbe
aaa
push
lahf
and
mov
je
out
in
insl
fwait
jbe
popa
out
dec
inc
outsl
mov
sbb
icebp
psraw
ret
jo
shl
aad
movl
fistpl
ja
rcrl
fadd
loope
sahf
dec
je
cwtl
nop
lea
leave
cmp
xor
mov
mov
fisttps
test
dec
mov
jmp
inc
adc
cmp
inc
lret
stos
movsl
cmp
mov
sbb
in
or
xor
out
pop
aad
ret
aad
fisttpl
sub
jle
adc
mov
in
or
or
dec
out
cmp
nop
cmovae
and
lcall
xlat
cwtl
mov
test
sbb
outsb
and
addl
lods
out
mov
jnp
xor
jge
sbb
test
pop
std
sub
in
in
mov
inc
sub
inc
mov
addr16
or
mov
lods
push
in
jb
aas
clc
cmc
cmp
and
inc
cmp
bound
dec
add
push
dec
or
mov
mov
fimull
scas
or
cmp
and
xchg
je
adc
push
out
add
mov
xchg
xchg
sub
mulw
cmpsl
sub
fiaddl
mov
mov
sti
cmp
and
pop
cld
push
pop
decl
pusha
outsl
loop
les
pop
jp
pop
xlat
xchg
mov
popa
leave
push
and
xchg
sub
in
or
cmp
ret
mov
mov
jge
outsl
setno
mov
mov
insb
pop
and
push
pop
enter
jle
xor
or
add
mov
dec
mov
out
mov
mov
cmc
inc
cs
pop
jns
lret
ret
mov
and
in
pop
push
dec
pushf
orl
inc
or
sbb
rclb
adc
cmpsl
daa
push
sahf
and
pop
push
setp
push
fimull
cmp
pop
mov
insl
push
mov
out
arpl
test
and
push
or
bound
insl
in
stos
lock
dec
adcl
mov
or
and
jmp
xchg
push
pop
nop
push
xchg
and
inc
leave
inc
outsl
enter
fmuls
inc
jle
inc
out
les
jae
popa
jmp
stc
mov
xor
mov
push
mov
inc
jno
aam
filds
and
or
inc
in
or
aad
pop
enter
mov
push
xlat
rorb
repnz
movsl
adc
jnp
inc
fdivrl
push
mov
addr16
adc
insl
in
push
mov
cmp
adc
mov
outsb
xor
cwtl
testb
faddp
cltd
clc
out
sub
scas
ffreep
inc
mov
fsubl
mov
mov
loop
jnp
push
negl
jns
push
mov
push
push
xor
dec
lods
inc
pop
lods
inc
fwait
imul
fildl
pop
mov
ds
pop
scas
movsl
xchg
mov
sub
xor
or
cli
xchg
lds
xor
jmp
into
mov
jo
pop
lods
sbb
cmc
fwait
andl
mov
and
arpl
cli
cmp
xlat
ss
and
incl
test
scas
popf
adc
adc
scas
mov
xor
aas
pavgb
cmpsl
push
dec
inc
lea
insl
iret
adc
mov
outsl
nop
test
pop
sub
lea
in
cmp
xchg
mov
test
test
mov
mov
movsb
sub
loop
cmp
mov
sbb
in
inc
pop
pop
les
int
outsb
shll
movsb
daa
pop
out
inc
repnz
jne
loope
sub
out
jne
es
cmp
xchg
mov
jl
xchg
or
mov
pop
inc
sti
jle
lock
push
adc
movsb
jle
and
sbb
movsb
xor
cmp
push
vcmpps
push
ja
gs
sub
push
insl
jne
mov
cmp
inc
out
fwait
dec
jb
fisubl
mov
jbe
mov
jg
adc
and
in
mov
test
xchg
cmp
movsl
cmp
jp
or
cmp
pushf
bound
mov
mull
pushf
push
jno
add
shrl
push
scas
in
mov
lds
or
shll
dec
cltd
adc
fidivrl
jns
mov
movsl
cmp
and
dec
daa
mov
int3
xchg
fs
sub
stc
dec
neg
out
xor
sahf
jbe
inc
movsl
and
lods
stos
mov
loopne
mov
dec
xor
pop
stc
fs
mov
das
jnp
in
shll
iret
mov
xchg
xchg
pop
xchg
adc
les
add
cwtl
jae
adc
and
sub
jp
int3
xchg
jbe
xor
sbb
ss
dec
and
mov
jnp
fsubl
inc
mov
inc
vmread
bound
and
fldenv
dec
push
jne
pop
add
mov
cmp
movsb
xchg
mov
std
aad
aad
adc
das
or
sub
cltd
nop
js
jb
cmpsb
sbb
dec
pop
add
pop
jnp
lock
xor
outsl
jg
or
pop
hlt
fmul
lea
fadd
fidivl
fistpl
mov
xchg
shrl
fnstcw
das
scas
cmp
fs
std
pop
xchg
jp
dec
cld
sub
rcll
jmp
scas
push
lret
cmp
stos
jecxz
fstpl
jg
add
movsb
mov
bound
mov
in
outsl
ss
daa
or
sbb
dec
or
xor
jg
sti
aas
inc
popa
xchg
daa
sub
pop
shrb
gs
sub
rcrb
or
scas
leave
int3
lcall
jecxz
add
and
sub
rolb
call
outsl
data16
jg
inc
push
jl
in
outsb
call
jae
daa
int
test
data16
stc
jns
lea
ret
lea
fdivrs
fisubrl
addr16
into
stos
mov
jle
fbstp
out
ret
nop
nop
dec
sbb
sub
rorb
outsl
aaa
sub
ja
iret
int
stos
sub
push
jl
test
mov
data16
add
negb
ret
lret
iret
push
push
imul
push
cmp
cmpsl
lds
rcll
cmp
arpl
jbe
jne
and
dec
push
pop
addr16
cmpsb
aaa
fnclex
push
sub
xlat
lret
pop
loop
mov
pop
imul
adc
pop
mov
pop
popa
dec
pop
lahf
into
flds
icebp
movl
mov
addr16
jno
mov
cmp
push
jnp
mov
ljmp
imul
pop
test
jle
xor
int3
fidivrs
fistl
fucomip
sub
adc
sti
icebp
rolb
cld
stos
pop
das
popa
jecxz
pop
ret
mov
movsb
fmull
pop
mov
lret
cmp
push
push
cli
fdivr
sbb
sub
stc
xchg
and
movl
pop
and
imul
imul
outsb
add
and
mov
xchg
jmp
adc
lea
xorl
out
sub
lcall
in
insl
cld
mov
pop
add
je
fcmovne
je
fimull
jge
xchg
inc
or
push
aam
jl
push
imul
les
lods
loope
mov
fstl
mov
shl
out
sub
jns
jno,pn
jl
dec
pop
les
outsl
xchg
nop
shlb
jne
fs
ret
movsl
mov
mov
and
pop
inc
add
inc
mov
repnz
les
fidivs
mov
lcall
cmp
or
jmp
mov
dec
cmp
into
mov
mov
ds
nop
inc
mov
lods
jbe
sbb
mov
ret
push
enter
rcrl
mov
inc
test
lahf
in
xor
add
sbb
test
iret
insl
inc
adc
or
scas
rclb
rcrl
push
cmp
mov
es
imul
rorl
pop
lods
ja
xchg
and
pop
leave
cmpb
lods
popa
lahf
cmpsl
movsb
jnp
add
adc
jbe
xchg
jecxz
sbbb
xlat
lea
cmp
adc
pop
sti
repz
jno
adc
lret
sbb
sarl
iret
fcmovnu
test
imul
mov
or
or
inc
mov
mov
out
xchg
push
inc
xchg
test
inc
push
mov
jecxz
sti
or
inc
repnz
ss
inc
sub
movsb
imul
mov
mov
test
or
xor
ret
pop
ret
sbb
jge
inc
cltd
mov
pop
push
cmp
inc
or
les
or
sahf
add
cmc
jle
lahf
ret
or
mov
dec
repnz
mov
icebp
sbb
mov
cmp
mov
or
jo
imull
arpl
mov
insl
add
lods
out
insb
push
mov
mov
sarb
movsb
dec
out
shl
lods
push
pusha
jmp
add
jno
addr16
mov
add
out
stc
pusha
xchg
jns
aaa
insb
cmp
mov
fs
add
test
or
ret
addl
jbe
and
mov
or
hlt
popf
mov
imul
ret
test
or
arpl
dec
lods
das
push
jb
out
mov
ljmp
and
adc
jp
adc
dec
pop
and
jmp
pop
test
lahf
sbb
nop
idivb
inc
xor
popa
or
xor
mov
je
jo
das
xlat
pop
xor
push
out
adc
lahf
pop
test
dec
pop
inc
xchg
testb
push
jns
jle
lock
adc
push
adc
push
cmpsl
xor
xchg
addr16
movzwl
adc
cld
or
cmpsl
push
xor
addb
xor
outsl
or
add
stos
mov
and
pop
jmp
faddl
push
fsubl
or
aas
mov
pop
mov
jmp
fs
mov
idivb
movsb
dec
mov
mov
xchg
shlb
jae
in
icebp
cmp
in
mov
sbb
or
cmp
out
adc
in
test
scas
leave
xchg
fwait
daa
and
lea
rclb
jecxz
imul
or
dec
inc
dec
cld
mov
inc
decb
fcmovnb
lock
stc
imul
dec
or
dec
sbb
adcb
cmc
mov
rcll
test
dec
cmovo
aas
mov
int3
loop
insl
xor
icebp
or
sbb
out
fidivs
xor
cltd
dec
jbe,pt
and
sbb
sub
aam
in
dec
or
sbb
aaa
jg
jle
lds
xchg
jns
adc
push
int3
sbb
or
je
lds
hlt
pop
out
sub
push
xor
push
dec
scas
sub
pop
ja
sub
daa
sub
jne
scas
jmp
dec
inc
pushf
xchg
outsl
hlt
test
ret
add
mov
gs
std
mov
inc
mov
mov
dec
iret
add
loopne
aaa
popf
pop
ffree
outsl
inc
xor
fcomps
cs
xor
jnp
pop
imul
int3
xchg
mov
mov
and
enter
xor
ret
pop
pushf
push
shlb
aas
iret
rcrb
outsl
dec
cmpsl
arpl
jl
mov
fildll
sub
jl
fidivrl
jmp
mov
loope
addb
pop
fcomps
in
outsl
filds
loop
mov
in
inc
xchg
imul
iret
loope
mov
inc
adc
in
out
ja
lods
mov
fmulp
mov
cmp
cwtl
cmp
adc
aam
enter
cmpsl
and
mov
lea
mov
jp
es
fidivl
popf
nop
enter
insb
fs
sbb
push
addr16
std
push
xchg
enter
dec
inc
lcall
sbb
out
sub
js
fwait
clc
and
mov
call
pop
push
mov
add
xchg
les
jae
push
test
fcomps
xchg
xchg
bound
rcrl
mov
testb
lods
mov
sbbl
jge
jns
test
mov
cmpsb
jae
xor
fwait
and
cmc
popf
pop
push
push
push
add
cmp
int3
mov
jge
out
mov
pop
push
inc
loope
cli
in
ds
adc
rorb
enter
js
iret
je
push
mov
mov
push
roll
popa
mov
and
and
xor
cmp
dec
inc
je
fsubl
and
push
call
push
adc
mov
orb
cs
or
bound
jns
dec
ljmp
add
sbb
aad
outsl
push
ret
insl
xchg
mov
das
jmp
push
insb
fwait
push
cwtl
fildl
sub
jge
or
push
hlt
ret
sub
les
arpl
sub
or
negb
mov
insb
jbe
pop
or
and
jno
enter
les
std
data16
xchg
mov
pop
xchg
cwtl
push
or
ficomps
dec
in
pop
shr
mov
aaa
fistl
arpl
cmpl
jo
pusha
jecxz
repz
add
xor
arpl
jae
xorl
and
jo
pusha
jecxz
repz
add
xor
arpl
jae
xorl
and
jo
pusha
jecxz
repnz
pop
mov
mov
inc
lock
loopne
roll
fwait
xor
add
jo
pusha
jecxz
jae
add
xor
xor
fistpl
pushf
das
mov
inc
dec
push
pop
addr16
gs
or
cmp
call
xchg
cwtl
cmpsl
test
mov
or
js
or
sbb
sub
inc
enter
call
xchg
cwtl
cmpsl
test
mov
cmc
push
ja
cmp
aaa
cmp
lcall
repz
jmp
sub
sbb
add
sub
sbb
subb
lods
mov
int
mov
sbb
std
sub
xchg
popf
stos
and
daa
std
or
test
jmp
adc
popa
jle
add
das
fildl
repnz
test
popf
rcrb
fwait
or
fwait
das
clc
stos
pop
sbb
inc
aaa
mov
xlat
daa
arpl
js
xchg
data16
mov
pop
or
ljmp
inc
mov
xchg
out
mov
ret
cwtl
pop
test
inc
mov
js
cmp
or
rcr
and
jge
mov
add
or
mov
sbb
add
push
outsl
sbb
sub
fcoms
mov
shrl
dec
and
js
insl
jns
push
outsb
aaa
insb
mov
flds
lret
stc
std
into
rcl
testb
xor
outsb
fs
rolb
pop
mov
mov
clc
cltd
into
not
sub
adc
sbb
daa
sub
cmp
enter
call
xchg
cwtl
cmpsl
test
mov
addr16
pop
sbb
sub
cmp
enter
call
xchg
cwtl
cmpsl
test
mov
movsl
test
testl
and
test
jae
jle
adc
js
add
in
mov
xor
adc
sbb
mov
xor
icebp
jle
and
sbb
jl
inc
add
sahf
cmp
dec
sarl
push
subb
nop
xlat
jmp
shlb
mov
mov
cmp
mov
pop
dec
inc
pop
and
push
jne
mov
sub
mov
lods
and
push
jbe
movsb
hlt
pop
mov
icebp
inc
insb
call
inc
mov
dec
jp
mov
rorl
xchg
aas
pop
dec
hlt
outsb
notl
cmp
push
mov
xor
add
cmp
adc
pushf
xor
push
test
shr
aad
mov
push
imul
cs
cmp
jp
jb
push
cli
lcall
push
sub
push
xchg
cmpl
and
mov
mov
mov
dec
hlt
out
bound
pop
and
add
imul
sbb
and
sbb
mov
jecxz
jg
std
jg
mov
xor
dec
mov
xor
loope
jnp
sbb
pop
cmc
popl
test
je
loop
xor
nop
loopne
incb
push
jb
popa
popa
lds
out
push
imul
sub
lds
xlat
mov
into
mov
or
sub
repz
jmp
or
sub
dec
push
out
mov
jge
and
cmpsl
xchg
sbb
hlt
lea
rclb
cmp
stos
inc
into
nop
cmp
or
ljmp
cmc
jl
inc
loopne
and
pop
jb
fst
int3
dec
xchg
dec
xchg
or
outsb
and
rolb
and
inc
sbb
xchg
pusha
test
sahf
in
lahf
add
mov
jns
push
sbb
sti
ret
sub
sahf
adc
rolb
mov
push
clc
jns
mov
mov
lods
aad
insl
out
or
mov
sub
or
pop
pop
in
js
mov
out
cld
dec
or
jns
push
pop
lret
cmp
jns
sbb
std
bound
push
push
popf
fdivs
add
fwait
cli
cli
jp
push
seto
in
xor
int3
in
and
lret
xor
fdivrs
and
dec
mov
pop
xchg
rcrb
adc
lods
push
rolb
mov
lods
lds
inc
xor
sbbl
pop
sbbl
xor
lcall
fcmovne
outsb
sub
xchg
call
cmp
push
int3
pop
lret
lds
sbb
adc
push
int3
mov
rol
nop
jge
sbb
jnp
js
mov
sub
fs
adc
pop
inc
fisubs
push
dec
mov
sti
aam
imul
or
xchg
std
scas
cmpl
mov
jbe
mov
xchg
or
or
ds
xor
pop
pushf
rol
cmpsl
sahf
ljmp
or
xchg
repz
xchg
pop
sbb
into
mov
mov
pop
lret
das
inc
mov
mov
xor
inc
sbb
fsin
data16
cmpsl
fstpt
cs
push
inc
into
gs
jo
push
pop
stos
xor
rorl
rcll
loopne
cmp
inc
sahf
adc
add
pop
push
cwtl
test
movsb
add
mov
cmp
mov
jecxz
lods
and
in
xor
int3
dec
insl
ficompl
in
loope
dec
sbb
jmp
mov
lods
xchg
clc
lahf
dec
mov
inc
mov
pop
xor
xor
test
mov
aad
ljmp
in
lcall
lea
lods
lods
and
mov
pop
ret
sub
dec
pop
add
mov
jb
inc
pop
jae
cmp
xorb
sbb
js
aaa
or
xchg
call
in
repz
out
jbe
jne
jl
mov
daa
pop
movsl
push
mov
mov
in
sbb
adc
dec
lret
js
decb
je
xor
popa
mov
iret
sub
adc
shlb
shrl
jbe
push
add
negl
mov
pop
jo
imul
mov
stos
jmp
pop
mov
pop
push
jl
js
into
inc
lods
into
or
and
mov
bound
xor
push
nop
jae
call
pushf
je
mov
lret
fidivrl
stos
jp
filds
mov
xorb
call
add
or
insb
stos
mov
loope
jle
or
and
sbb
inc
cmp
lcall
mov
dec
sbb
sbb
xor
ficoml
pop
popa
push
aam
repnz
xor
outsl
sbb
clc
add
cmp
sub
out
icebp
sbb
aam
arpl
out
sbb
push
and
pop
inc
iret
mov
sub
xlat
int3
iret
mov
adc
fcompl
loope
sub
jae
mov
or
push
lea
divl
sti
or
mov
les
loop
cmp
test
sub
inc
leave
and
cmp
cli
in
and
mov
cmp
mov
mov
loope
adc
sbb
jb
mov
jns
loop
mov
inc
lods
sub
dec
adcl
or
xor
xchg
arpl
movsl
xchg
jge
repz
sub
push
inc
xor
and
adc
cmp
js
popf
shll
sub
adc
or
and
mov
xchg
test
arpl
or
mov
in
xchg
pusha
xchg
push
add
ja
xchg
xchg
dec
and
xchg
sti
pop
ljmp
ret
andb
ja
jb
stos
mov
dec
pop
outsl
dec
jp
subb
sbb
push
int
imul
sbb
mov
jle
pop
repz
shrl
out
mov
gs
xor
je
scas
iret
jne
jg
or
xchg
mov
sbb
sbb
pop
iret
cltd
cmp
or
mov
jno
jmp
xlat
push
ficompl
pop
xchg
jl
and
adc
jp
fdivrs
mov
xchg
lar
mov
cmc
xchg
rcrb
fsubrl
ja
shlb
inc
stos
sub
dec
dec
movl
mov
xchg
scas
int
inc
popf
and
push
mov
aam
movsb
icebp
fldenv
inc
stos
lods
sub
dec
xchg
dec
daa
inc
call
sbb
add
inc
insl
mov
fistps
ja
test
test
lods
dec
xlat
pushw
jae
xchg
push
xor
loop
sti
lods
xchg
add
repz
bound
xchg
xchg
lds
pop
into
stos
adc
pop
pop
cmp
cmpsb
jns
jns
mov
jne,pt
jle
mov
sub
push
mov
mov
cmp
add
fistpl
dec
cwtl
mov
jmp
fdivs
jns
push
in
mov
sahf
stos
enter
iret
popa
sti
aam
aam
pop
push
adc
leave
push
imul
mov
enter
jne
ljmp
call
cmpl
sub
dec
loope
sbb
and
adc
or
mov
arpl
ss
xchg
sti
dec
andb
cmc
add
icebp
adc
je
push
cs
cmc
lock
sub
cwtl
mov
test
xchg
xchg
mov
test
lahf
out
call
jne
jle
inc
decb
shlb
sbb
lods
dec
xlat
inc
xchg
lock
cli
adc
xor
je
pop
rorb
loop
mov
lcall
sub
movsb
mov
ds
inc
xor
jmp
orl
lods
xchg
repz
je
xchg
cli
ficoml
lods
adc
lds
jbe
das
mov
dec
push
or
cmp
leave
lahf
and
push
lods
movsb
fildll
xlat
pop
sub
std
bound
lahf
fiaddl
mov
fcomip
push
xchg
mov
sahf
ljmp
cwtl
call
lahf
pop
shll
imul
mov
lea
jb
adc
jecxz
cmp
sub
xchg
add
fstpt
lea
dec
mov
pop
push
dec
jns
pop
das
cwtl
ds
lcall
push
aaa
cmp
mov
les
mov
and
test
xor
inc
out
sbb
test
cmp
pop
out
cmp
repz
mov
dec
pop
dec
negb
pusha
adc
int3
jmp
xor
xchg
mov
lret
or
sub
and
pop
jg
aam
sub
jnp
js
sub
les
mov
mov
scas
sub
sbb
mov
fmul
sti
push
jl
js
xchg
sub
imul
lods
mov
sbb
push
pop
fs
pop
jge
adc
popa
jb
test
sbb
cmpsb
leave
in
adcb
jp
jns
popa
xchg
outsl
adc
adc
mov
add
inc
cmp
insb
mov
rol
mov
push
inc
stos
in
cmp
clc
arpl
adc
popf
mov
jmp
lds
shll
daa
mov
mov
das
cwtl
add
in
dec
aas
adc
out
pop
iret
jle
pavgw
andl
dec
ja
aam
xchg
dec
cmp
mov
fmul
mov
inc
pusha
push
pop
orl
and
adc
xchg
sbb
scas
mov
loop
cmp
add
mov
sbb
push
aaa
clc
push
cli
pop
icebp
das
outsb
cwtl
mov
inc
push
orb
cmpl
lods
cmpsb
mov
shrl
xchg
repz
jo
or
lods
and
repnz
mov
xchg
repz
or
ror
andb
pop
push
lds
xchg
or
loop
sub
cmpsl
aad
shlb
popf
mov
fisttpl
outsb
repnz
notl
lea
jae
les
mov
pop
sub
mov
into
adc
xchg
push
mov
add
mov
loopne
fwait
in
pop
ljmp
sbb
and
test
test
cli
lahf
and
lret
scas
sub
jo
fsubr
lock
mov
in
jae
lret
testb
pop
and
jns
mov
xchg
adc
movsb
sbb
dec
or
icebp
into
sbb
dec
sbb
out
sub
out
xor
repz
sub
inc
ss
adc
add
dec
add
lret
mov
arpl
popa
inc
popf
mov
cmp
jbe
notl
add
pop
mov
icebp
cmp
xchg
inc
popf
push
jg
xchg
int3
lcall
sub
jecxz
ret
cwtl
xor
jnp
mov
scas
mov
adc
sub
loope
cmpsl
xchg
movsb
popa
adc
adc
ret
fisubs
data16
std
pop
jmp
sbb
inc
popa
negb
pop
lods
lcall
sbb
pusha
outsl
dec
stos
or
or
adc
dec
xor
bnd
dec
subb
inc
jnp
jns
dec
lds
push
push
lcall
aas
aaa
add
push
push
and
andl
pop
insb
popf
pop
pushf
aad
add
inc
sub
pop
dec
clc
movsl
stos
pop
outsb
sbb
test
xchg
mov
pop
jno
inc
divb
pushl
nop
jnp
fisttpl
nop
addr16
pusha
xor
lcall
arpl
ret
xchg
sub
jne
sbb
sbb
dec
fisttpll
lods
pop
std
test
test
adc
cltd
mov
mov
popa
adc
push
hlt
or
xchg
daa
pusha
adc
jne
scas
cwtl
mov
add
cs
roll
adc
hlt
inc
loop
mov
pop
ret
out
add
iret
imul
ret
mov
cltd
pop
cmpsl
adc
xor
pop
cmp
out
push
xor
dec
and
inc
fwait
jl
repz
pop
cli
insb
lahf
xchg
push
mov
pop
adcb
js
xchg
pushf
xchg
lods
test
pop
jbe
out
es
push
adc
ret
add
clc
or
stos
and
sbb
test
cmp
orb
fucomi
outsb
mov
inc
or
mov
pop
sub
clc
xor
pop
pop
loope
fdivr
outsb
mov
lea
jg
pop
stos
dec
pop
lahf
cwtl
or
adcl
loope
ja
inc
mov
imul
aaa
shl
cmpsb
stos
enter
inc
aas
fs
cld
je
and
lea
aad
jle
dec
lret
repnz
inc
aad
adc
mov
fadds
scas
sub
shrb
mov
adc
jl
scas
jecxz
iret
jmp
and
lods
and
lds
stos
fldln2
sub
std
mov
mov
cs
fdivrs
adc
pop
shl
nop
sbb
mov
nop
std
mov
xor
mov
test
pop
fisubrl
jmp
push
bound
jne
sub
icebp
dec
mov
shl
push
and
xchg
sti
iret
inc
fs
cmp
insl
je
loop
mov
add
jnp
mov
in
inc
xchg
imul
push
aam
lcall
adc
shll
mov
pop
in
repnz
add
or
adc
or
ljmp
mov
cmp
push
fs
cs
sub
cmp
pop
cmp
xchg
in
xchg
pusha
add
arpl
add
adc
popf
sub
fisttps
mov
xor
push
mov
sbb
cmp
test
lret
icebp
shrb
dec
inc
jle
jo
add
dec
pop
ror
pop
insb
jle
into
add
clc
add
aam
xchg
ret
push
les
ret
shrl
mov
jge
icebp
ja
popa
jl
js
mov
adc
jne
xchg
jle
out
cwtl
cltd
adc
push
pusha
movsl
mov
sarl
xor
pop
fwait
push
sahf
clc
arpl
pusha
mov
ljmp
jbe
sbb
xor
inc
mov
pop
push
int
sahf
push
or
or
pop
insl
pop
add
js
adc
mov
add
pop
cltd
push
ret
mov
arpl
cwtl
pop
ss
jle
mov
add
jae
mul
popa
mov
fs
pop
dec
dec
cvtps2pi
cmp
sarl
enter
loope
mov
cmp
lahf
outsl
xchg
pushl
sbb
xchg
sbbb
ret
aad
bound
cltd
ljmp
dec
mov
hlt
ss
cs
insl
jg
icebp
inc
and
inc
xchg
shlb
pop
jg
or
bnd
xchg
fwait
fwait
out
dec
lret
aad
stos
mov
pop
clc
inc
pop
pop
fcomp
insb
sbb
sarb
jns
xor
jge
add
sbb
add
das
or
push
das
mov
shll
push
ret
dec
enter
outsb
popa
adc
pusha
xchg
jmp
lods
fcmovu
lcall
lret
lahf
add
jo
cld
dec
or
cmp
mov
sub
test
mov
xchg
insb
push
xchg
out
or
cmp
popf
mov
sub
pusha
push
js
orl
mov
nop
xor
mov
inc
es
push
jns
bound
outsl
push
dec
pop
sbb
sub
jne
ret
dec
fidivrl
das
xchg
cmp
add
cmp
ja
pushf
and
nopl
push
adc
push
jl
or
lret
cmovae
out
jmp
scas
mov
pushf
cmp
add
nop
dec
dec
leave
pop
pop
outsb
sbb
setbe
int3
or
imul
push
jb
insl
or
addr16
push
lcall
xchg
fists
cmc
lds
jmp
insb
adc
out
cwtl
cltd
lcall
flds
sbb
cli
jmp
sbb
and
mov
adc
mov
or
mov
dec
jae
mov
mov
jl
test
fs
xchg
loope
add
xchg
push
adc
push
leave
cmpsl
ljmp
xor
mov
arpl
loope
jno
and
sti
icebp
cmp
repz
push
ret
shl
dec
and
daa
insb
or
adc
jns
push
and
add
ja
xor
mov
scas
out
gs
jb
aad
jb
lret
inc
pop
adc
movsl
shll
mov
test
sub
fisubs
pop
push
mov
mov
inc
sub
cwtl
xchg
shlb
ret
sub
outsl
or
jl
in
iret
cmp
xlat
aas
mov
bound
push
orl
movsb
mov
pop
gs
pop
mov
and
xorb
imul
js
movsb
xchg
sti
sbb
push
xor
add
imul
int
loopne
mov
loop
add
testl
pop
call
dec
dec
adc
movsl
ss
sub
sbb
out
and
std
xchg
dec
push
leave
out
repz
gs
stos
xor
in
jb
mov
and
int
jmp
jmp
or
adc
ljmp
pop
mov
orb
mov
sbb
jl
cwtl
loopne
cmc
or
adc
xor
ret
pop
les
mov
leave
mov
mov
insl
insl
mov
xchg
add
inc
sub
jg
dec
inc
pop
out
cmp
out
jge
lock
ljmp
mov
jbe
and
int
xor
lods
je
fs
aaa
fidivrs
pop
jbe
aam
stos
pop
dec
and
sub
hlt
sbb
and
outsl
inc
imul
cmpsl
loopne
test
loope
lret
xchg
push
sbb
shlb
mov
inc
or
dec
pushw
adc
inc
bound
push
mov
and
pop
mov
loopne
mov
cmp
push
sbb
push
leave
and
popf
adc
lods
inc
les
icebp
mov
ljmp
mov
pop
jmp
push
mov
iret
lahf
inc
hlt
in
xchg
pop
rolb
dec
push
scas
xchg
add
or
pop
jmp
jl
jnp
sub
dec
xchg
xchg
pop
push
mov
push
mov
pop
xchg
or
mov
cmp
push
sbb
adc
add
rcrb
js
push
push
dec
mov
out
clc
lock
iret
in
xchg
nop
mov
addr16
andb
push
mov
jb
push
stc
pushf
mov
aad
push
sbb
jmp
jmp
bnd
enter
mov
jbe
stc
jns
sahf
inc
pop
add
jo
scas
push
jecxz
gs
sub
dec
and
dec
add
hlt
testl
call
and
aas
mov
adcb
testb
dec
adc
inc
ds
arpl
xchg
gs
push
sbb
dec
ret
jae
out
outsl
lds
adc
cmp
jmp
ret
lock
add
popa
xor
or
xor
aam
mov
addl
sbb
push
imul
xchg
test
paddb
mov
ljmp
sti
xor
mov
mov
push
cmpsl
fbld
sbb
pop
and
jmp
clc
push
sub
pusha
xor
scas
push
int
xchg
mov
out
roll
and
jno
dec
xor
cmp
dec
mov
rcrl
sarb
xchg
icebp
mov
outsl
mov
inc
sbb
push
in
fisubrs
cmpsb
push
jle
jne
pop
ds
andb
outsl
dec
outsl
test
call
sbb
push
push
add
add
adc
push
movl
sub
sub
test
and
stos
xchg
xor
xchg
stos
cmp
jmp
roll
mov
cld
pop
adc
add
jl
mov
inc
in
adc
jmp
sbb
cwtl
mov
and
pop
dec
or
mov
or
cmp
mov
add
subl
jnp
je
sub
mov
sub
in
mov
lods
ja
fs
and
test
dec
jmp
outsb
push
into
xchg
inc
pop
pusha
movb
pushf
cltd
test
scas
sahf
je
jecxz
inc
ljmp
jge
data16
out
or
inc
sbb
xlat
adc
lea
pop
roll
dec
inc
jno
mov
stos
fnstsw
nop
fs
mov
push
xchg
mov
cmp
imulb
mov
or
jae
push
outsl
scas
xrelease
cld
fsub
jge
negl
imul
aam
test
push
pop
sbb
sub
cmp
enter
call
xchg
cwtl
cmpsl
test
mov
addr16
pop
sbb
sub
cmp
enter
call
xchg
cwtl
cmpsl
test
mov
pop
push
pop
sbb
sub
cmp
enter
call
xchg
push
dec
or
push
pop
sbb
sub
jb
call
pop
addr16
push
dec
inc
pop
cmpsl
dec
mov
xchg
mov
cltd
dec
xchg
and
fbld
into
aaa
cld
pop
in
pop
pushf
mov
mov
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
lea
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
idivl
sub
fcompl
out
imul
adc
and
push
sub
add
xlat
les
testb
inc
adc
scas
push
int3
jmp
mov
mov
adcl
or
lret
fbld
inc
push
add
adc
lret
cmpsl
mov
ljmp
popa
push
jo
sti
dec
mov
jl
shlb
out
leave
in
add
popf
addr16
inc
aas
mov
imul
out
out
cs
sub
inc
and
xor
daa
inc
mov
leave
dec
stc
push
xchg
push
out
or
cmp
ss
addr16
scas
or
inc
inc
lods
pop
pusha
and
aaa
sub
hlt
cwtl
or
push
fmuls
pop
js
filds
lahf
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
adc
lret
cmp
sub
jns
arpl
lods
dec
test
jns
or
push
fld
fdivl
sub
cmp
pop
xchg
fnstcw
imul
adcl
sbb
xor
cmp
testl
mov
cmp
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
push
pop
cmpsl
sub
inc
int3
and
loope
nop
mov
outsl
ds
repz
pop
adcl
mov
inc
in
not
data16
adc
aad
pushf
jecxz
fnstenv
ja
pop
pop
test
push
jecxz
repz
jo
into
cmp
pop
inc
xchg
jg
mov
pushf
das
test
sub
cwtl
aad
inc
mov
mov
sarl
fisubs
pop
cld
push
add
test
and
xchg
sahf
inc
add
add
jnp
jo
pop
rclb
mov
xchg
shlb
pop
adc
mov
loop
pop
add
repnz
fst
jno
imul
outsb
dec
mov
ds
imul
ss
pop
mov
mov
sbb
aad
ret
sub
push
mov
loop
bound
add
pop
xchg
loopne
int3
mov
and
rclb
pop
cmp
ds
xchg
push
xchg
negl
jmp
repz
dec
iret
dec
jo
mov
push
cld
inc
aas
jle
or
xchg
cmp
into
and
sahf
mov
inc
inc
jecxz
xor
scas
ja
mov
add
ljmp
xchg
adc
in
add
cld
sbb
push
pop
loop
push
pop
add
mov
sub
es
pop
dec
shr
pop
shr
and
mov
movsl
movsl
pop
inc
and
jnp
flds
int
mov
inc
call
mov
xchg
pop
int
nop
mov
leave
adc
lock
aad
mov
push
push
rolb
std
add
cmp
iret
test
sbb
sbb
scas
insb
mov
lods
xchg
jge
mov
fiaddl
popa
rorb
sbb
cmpsl
push
jecxz
ja
popf
jge
dec
shll
mov
push
lods
ds
jne
test
cmp
or
lock
cltd
leave
xorb
adc
stc
leave
das
xchg
lds
test
aad
lret
mov
outsl
stos
inc
xchg
out
cmp
xor
test
js
sub
cmpb
push
inc
dec
sarb
mov
shlb
fldcw
jmp
xchg
in
arpl
jbe
loope
ret
sbb
xchg
sti
notb
inc
fdivr
sbb
jae
cmp
mov
sub
cmp
push
daa
mov
adc
lcall
sti
jmp
fiaddl
mov
iret
data16
in
aaa
jmp
cli
xor
pop
inc
jp
xchg
out
adc
in
std
add
insb
ljmp
inc
add
push
xlat
adcl
loope
push
xchg
ret
pop
popa
fisttps
jo
data16
std
bound
mov
mov
loopne
stos
xorb
test
mov
mov
fstpt
sarb
dec
ds
pop
cmp
jae
jg
jo
arpl
std
and
add
mov
cmp
gs
fs
neg
test
je
push
fisttpl
push
aaa
and
and
jno
lods
jb
fldenv
faddl
testb
mov
sbbl
sub
out
jbe
fdiv
cwtl
fmulp
sbb
pushf
cli
pushf
cmp
into
mov
jle
xor
push
lcall
jge
mov
je
xchg
dec
and
shll
add
mov
push
loop
clc
bound
inc
je
adcl
pop
pop
shlb
mov
loop
xchg
std
fiaddl
xor
mov
addr16
jo
movsb
or
push
mov
sub
ds
enter
sub
mov
fstpl
mov
leave
test
aaa
js
aaa
shl
out
add
push
in
add
shlb
ss
and
sub
xchg
push
orb
cmp
gs
and
lret
lcall
das
hlt
stc
inc
and
je
rcrb
xchg
and
and
push
ja
add
add
fidivs
ss
ds
cmp
pop
adc
lea
ret
repz
push
lods
rorl
shl
mov
scas
je
jp
mov
std
xor
sbb
imul
cltd
daa
jns
or
pusha
push
faddp
xchg
dec
into
arpl
fs
in
faddl
jmp
push
pop
xchg
push
out
sahf
lock
clc
loop
jb
mov
push
xor
fld1
out
push
sti
hlt
mov
cli
out
pop
into
inc
sahf
pop
test
leave
inc
adcl
faddl
mov
add
adc
or
mov
push
adc
jbe
cld
mov
pop
mov
add
jp
jge
sti
sahf
jno
in
pop
sti
dec
shr
movsb
xor
incb
mov
test
insl
jbe
or
cmp
out
and
dec
insl
cwtl
sbb
xor
jecxz
add
repz
mov
push
inc
dec
push
es
ret
pushf
xchg
repnz
popa
incb
addr16
push
enter
sbb
lcall
sbb
cmp
stos
xor
xor
dec
daa
pop
push
or
lret
repnz
leave
imul
scas
inc
je
sub
movsl
out
fwait
adc
inc
aaa
dec
stc
lods
mov
jp
xlat
ljmp
lahf
pop
cmpl
dec
and
outsb
inc
dec
loope
gs
xor
pushf
in
add
cwtl
loopne
and
jne
xor
jns
call
scas
add
pop
mov
push
loopne
mov
mov
sahf
jmp
add
add
iret
jmp
jnp
ret
or
jmp
add
push
fdivrp
xor
mov
adc
and
inc
xchg
and
ss
xor
adc
sub
loop
scas
mov
push
dec
lahf
scas
mov
sub
sub
sub
shll
test
cmp
mov
inc
or
mov
test
mov
adc
push
and
dec
xor
ja
or
push
dec
hlt
jg
std
clc
ss
pop
push
clc
das
int3
out
sbb
out
and
xlat
cli
lods
mov
xor
mov
sub
or
std
mull
push
jne
sub
push
jno
pop
push
jp
cmp
sbb
add
pusha
fsub
ret
nop
jae
mov
push
pushf
in
data16
arpl
mov
jp
adc
cmpsl
jle
inc
lcall
add
xchg
sub
push
mov
sbb
cltd
or
aad
cmpsl
add
jns
mov
push
prefetchwt1
fldcw
pop
xchg
add
lcall
add
or
scas
out
pop
in
test
inc
popf
pop
xchg
fmulp
leave
scas
pop
pop
test
cs
out
nop
xchg
pushf
fcomps
pop
cltd
insb
or
or
je
pop
sbbb
out
xchg
in
les
or
dec
lock
adc
aas
push
jo
jmp
jbe
cmpsb
sbb
popa
or
nop
scas
cmp
add
test
scas
dec
mov
cmp
cmpsl
or
test
pusha
out
bound
xor
sbb
mov
ss
jl
gs
add
xlat
dec
das
mov
mov
and
addr16
into
loopne
out
stc
fdivr
out
xchg
dec
arpl
aaa
test
inc
and
je
inc
push
dec
push
xor
lahf
or
and
or
movsb
inc
test
cs
inc
pop
popf
outsb
es
ljmp
imul
inc
push
aad
jmp
rorb
in
aam
sbb
daa
cltd
add
ret
pop
fadds
out
inc
mov
xchg
push
jge
cmp
mov
js
or
and
nop
fnsave
mov
cmp
mov
lahf
jae
cmp
adc
ja
lret
mov
add
fdivrl
and
mov
mov
in
shlb
les
in
pop
out
ror
out
orl
mov
lods
mov
mov
test
idivb
xor
shlb
fidivrl
fsubl
out
mov
mov
leave
test
inc
out
jnp
add
js
cmp
push
xchg
push
jmp
push
pop
push
sub
ficoms
adc
jbe
jns
bound
sbb
mov
pop
std
std
mov
push
in
stos
adc
mov
xchg
pop
in
adc
mov
jb
mov
jns
mov
fistps
sbb
add
popa
pop
mov
add
outsb
cmp
into
push
lds
cli
sbb
imul
sub
add
push
pop
jb
xchg
fdivrl
icebp
addb
jo
pop
out
lds
into
or
jne
pop
pop
loopne
mov
lret
and
mov
lahf
mov
add
movsb
jb
stc
xor
cltd
mov
sbb
mov
add
sub
fdiv
and
jo
pop
sbb
jl
mov
call
ljmp
out
pushf
popa
aas
mov
outsl
lds
mov
mov
and
dec
sbbb
dec
arpl
popf
push
aaa
sub
outsl
mov
adc
xchg
xchg
push
and
scas
xchg
or
sub
push
test
push
mov
jno
cs
pop
pop
mov
jae
mov
int3
stc
jbe
push
sbb
mov
xchg
pop
adc
gs
bsf
les
out
fwait
lret
test
cmp
orl
xorl
hlt
mov
lret
push
test
sbb
mov
xchg
inc
cltd
mov
dec
lret
pop
inc
out
bound
int3
loop
sbb
sub
das
mov
sbb
cltd
push
stc
and
rol
dec
inc
inc
or
push
jp
call
and
and
rorb
sbb
pop
daa
imul
fs
cmp
xor
jmp
ret
add
rolb
imul
cmp
ljmp
jg
bound
push
push
adc
pop
sahf
mov
pop
lods
test
push
stc
fimull
jg
in
sti
xchg
fcomps
push
add
sbb
add
xchg
cmp
jbe
or
jge
pop
mov
cmc
mov
testl
push
hlt
cwtl
cmp
in
xor
sbb
shrl
call
lret
sbb
cmpsl
xor
sub
sub
divl
adc
out
adc
in
inc
mov
adc
mov
sahf
jno
iret
inc
dec
adc
iret
push
jge
loopne
data16
mov
test
clc
stc
sbb
imul
mov
ljmp
sbb
sub
pop
push
rorb
push
dec
xchg
inc
lcall
imul
jmp
outsl
mov
xchg
or
in
mov
cmp
or
vpunpckldq
lahf
aad
leave
jmp
loop
cwtl
mov
and
sub
dec
dec
roll
jp
call
xor
add
loopne
sub
sbb
pop
sbb
sbb
and
shlb
mov
mov
adc
adc
cmpsb
rclb
sub
mov
cmp
fisubs
inc
out
es
mov
mov
in
loopne
sbb
xchg
xchg
mov
test
test
movsl
jmp
dec
outsb
cmp
push
xchg
movsb
push
cs
lods
outsl
lret
pop
hlt
dec
out
pop
jne
dec
mov
orl
outsb
mov
aam
test
aad
in
xorb
mov
sti
outsl
mov
rorb
mov
and
xchg
dec
rcrb
adc
decl
lcall
or
mov
into
je
sbb
add
cmp
mov
cmp
xchg
insl
push
or
sbb
into
xchg
push
and
shr
dec
shrb
dec
mov
sahf
adc
mov
outsl
and
or
scas
jnp
cltd
cli
cmpsl
cmp
das
mov
mov
in
xchg
movsl
jo
sbb
push
or
dec
sub
divl
jge
orb
add
lahf
xchg
test
aas
clc
js
push
push
cmp
scas
addr16
in
aam
ljmp
imul
js
mov
lahf
add
mov
lret
pop
cmpl
mov
xchg
push
dec
jne
negl
aad
jae
and
jnp
outsb
in
jbe
xchg
test
xchg
sub
inc
dec
sub
jns
push
sub
movsl
addr16
dec
mov
fnsave
adc
rolb
int
rcll
sub
loope
xchg
xor
repnz
xorl
aam
aam
adc
mov
jge
adc
sbb
xchg
sub
sub
fidivl
fwait
inc
mov
bnd
pop
push
jae
scas
popa
sub
lods
mov
stc
xchg
push
in
xor
iret
repz
sub
xchg
pop
pushf
xor
loope
das
jb
pop
mov
cmp
or
xchg
in
mov
mov
dec
inc
test
inc
out
dec
mov
pop
lret
mov
fmulp
movsb
mov
push
push
add
cmp
jo
rcrl
test
ret
xchg
xchg
xchg
pop
mov
cmp
pop
lods
cs
mov
jbe
repz
adc
mov
mov
mov
int
and
inc
mov
jl
icebp
mov
pop
iret
pushfw
and
imul
dec
inc
insb
push
jl
xor
mov
scas
leave
repz
stos
and
xchg
mov
enter
sub
dec
fadds
pcmpgtw
jnp
aas
out
andl
cmp
clc
out
xlat
insb
cmpsb
sahf
subb
dec
aam
shll
jb
sbb
jg
push
fs
mov
insb
and
in
sbb
adc
addr16
enter
inc
fs
mov
xor
push
fildl
and
xor
or
push
flds
mov
mov
xor
imul
jbe
scas
sbb
movsl
cmpsl
jmp
and
leave
xchg
arpl
sbb
outsb
mov
test
mov
lock
push
cmp
clc
mov
adc
aad
ljmp
jne
cmp
ja
mov
mov
aam
push
mov
sti
pushf
jbe
test
ja
shl
xor
or
jb
jns
sub
and
pusha
data16
xor
push
addr16
je
push
pop
sbb
xchg
ja
push
test
inc
jge
scas
cmpsl
iret
sti
mov
rcrl
mov
mul
mov
mov
jge
les
mov
pop
roll
daa
xor
test
bnd
xchg
xor
adc
ret
inc
mov
mov
cs
ret
jge
movsb
popa
mov
sub
add
xor
xchg
outsl
cmpsb
js
cmpsb
mov
adc
rcl
pushl
nop
sbb
mov
lret
out
push
shrl
je
lcall
mov
sub
pop
lods
jae
jge
push
in
or
inc
out
jp
xchg
std
fwait
xlat
mov
push
push
xor
loop
add
cmpsb
lock
mov
push
scas
add
mov
push
jecxz
xchg
xor
les
inc
loop
mov
cwtl
dec
nop
jecxz
stos
mov
dec
push
rcrl
adc
test
lods
adc
stc
xor
aaa
dec
scas
jmp
nop
sbb
into
bound
sub
mov
cmpsl
or
cs
cmp
das
shlb
mov
mov
incl
mov
xor
cmp
or
aad
cld
aam
push
cs
mov
mov
loopne
cmp
or
push
push
dec
insl
aaa
outsb
push
push
pop
pop
notl
adc
pop
mov
pusha
pop
fcoms
cmp
mov
fists
sbb
iret
jne
out
mov
pop
cmp
lahf
pop
pushf
daa
test
inc
js
adc
dec
ret
enter
lcall
int3
in
mov
add
push
nop
shrl
mov
mov
fisubs
jge
loopne
loop
mulb
int
mov
lcall
pop
cmpsl
inc
mov
mov
rcr
jecxz
jbe,pt
sbb
iret
into
cmp
adc
sti
sbb
sub
xor
btc
js
outsl
lods
mov
dec
in
or
into
das
and
adc
jl
iret
or
in
pop
pushf
mov
cmp
push
inc
aam
ja
shll
jnp
xor
and
mov
pop
mov
xchg
adc
dec
sahf
mov
mov
adc
mov
sahf
and
ss
cmp
data16
sub
adc
mov
ja
repz
add
sbb
outsl
in
adc
mov
pop
sbb
cltd
mov
scas
jns
or
out
in
push
xor
movsb
adcl
jecxz
clc
sbb
dec
leave
fwait
xchg
dec
cmp
mov
or
enter
pmaxub
push
push
outsl
shlb
mov
push
add
aam
pop
pop
ljmp
mov
sarb
imulb
fimuls
cmp
scas
in
mov
cmpsl
sub
mov
sbb
push
insl
in
lret
mov
out
pop
rorb
int
pop
stc
push
mov
test
push
out
adc
ds
jp
jne
jne
icebp
xor
int
mov
add
arpl
pop
ss
mov
jnp
stos
les
jmp
adc
ja
mov
xlat
lret
lcall
bound
xchg
gs
mov
fadd
stos
dec
jmp
fdivs
cmp
mov
xchg
nop
adc
iret
lock
aas
inc
mov
jmp
int
movsl
jns
aad
das
arpl
pop
loop
jle
out
adc
cmp
adc
into
test
pop
pop
and
cmp
and
cmc
sbb
sub
lahf
gs
icebp
xchg
push
imulb
and
lret
push
pop
push
dec
pop
jp
shll
out
mov
xor
xor
fstl
mov
adc
rcll
ret
into
push
sub
rorb
lock
push
and
addr16
push
imulb
fimull
inc
mov
pushf
push
cmp
xchg
pop
sbb
std
lods
jo
stos
addb
mov
dec
mov
xchg
xor
cs
inc
cwtl
cwtl
je
mov
cmp
fwait
rcrl
jns
es
mov
lret
sub
or
sbb
stos
or
push
xchg
add
subl
mov
pop
sbb
loopne
xor
and
mov
rolb
out
data16
mull
push
movsb
pusha
jae
xor
neg
inc
mov
jp
out
sub
test
mov
imul
insl
add
cwtl
jge
sub
stos
adc
add
mov
adc
mov
int
dec
aaa
setl
out
cmp
imul
inc
in
xchg
or
movsl
cmp
jge
push
pop
fucom
icebp
mov
cmp
pop
lcall
lret
mov
xchg
jg
sbbl
popa
cmc
aam
jno
cld
imul
ficoml
roll
fldcw
or
pop
pop
shll
in
loope
xorl
mov
lock
cmc
push
jo
and
push
call
mov
inc
jp
mov
mov
pop
sbb
xchg
jl
and
pop
test
movsl
push
into
and
stc
and
pop
jecxz
test
outsb
hlt
push
sub
imul
aas
jge
sub
add
jecxz
sub
or
repnz
cmp
popa
adc
sarl
clc
sub
push
jae
popf
les
popa
lea
rcr
push
sub
jbe
aas
push
mov
movsl
cmp
aaa
sub
mov
in
aad
int3
fs
inc
movzwl
or
iret
out
mov
mov
int3
mov
out
sbb
adc
lods
daa
mov
dec
xor
cmpsb
popa
pop
mov
mov
out
mov
int
mov
adc
push
stos
and
insl
jmp
cmp
sbbl
push
xchg
stc
rol
jae
sarb
xchg
mov
mov
rcrl
mov
fimuls
push
shll
jle
outsb
test
push
jle
add
inc
test
fs
push
pop
sub
push
adc
test
mov
dec
in
lahf
xor
test
sti
mov
push
aad
pop
aad
lret
shrl
gs
jns
sub
outsl
movsl
add
xor
into
mov
clc
xor
aas
test
xor
insb
imulb
push
scas
andl
fwait
outsl
dec
pop
hlt
fucomip
ss
inc
lcall
ja
icebp
mov
pop
fisttps
cltd
or
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
idivl
sub
fsubl
int3
aaa
cld
pop
in
pop
pushf
mov
inc
lods
push
pop
mov
insb
xchg
sbb
or
xlat
frstor
int3
ss
pop
in
pop
pushf
data16
inc
lods
push
pop
cmpsl
dec
mov
xchg
out
ja
inc
lods
sub
fdivs
popf
push
pop
in
pusha
jmp
add
inc
mov
inc
mov
andl
mov
push
jecxz
rcl
and
xor
add
adc
inc
mov
mov
andl
jecxz
repz
and
shlb
ret
add
adc
add
mov
andl
jecxz
repz
and
rorb
int3
adc
es
cld
xor
push
sbb
adc
push
and
adc
mov
mov
sbb
xchg
fprem1
xor
pusha
xchg
and
in
int3
jg
addr16
insl
push
xchg
lahf
mov
pop
add
je
decl
and
int3
aas
rcr
test
or
bound
mov
mov
inc
xor
jecxz
adc
adc
int3
dec
dec
sub
clc
rcrb
cld
les
or
mov
inc
ss
sbb
pop
insb
test
and
fistpll
fs
imul
jae
push
mov
jp
xor
xchg
ret
jle
mov
xor
adc
mov
push
lret
mov
bound
xor
and
shlb
ret
add
adc
inc
mov
mov
ljmp
push
lea
xchg
inc
movb
mov
add
add
inc
notb
push
mov
pop
loope
stos
outsb
xchg
xor
inc
mov
cmpsl
jl
add
sbb
mov
loopne
jmp
notb
jecxz
repz
and
shlb
ret
add
adc
inc
mov
mov
andl
jecxz
repz
and
shlb
ret
add
adc
inc
mov
cli
leave
xor
enter
mov
mov
pusha
lcall
jae
cmp
aad
inc
cwtl
ja
das
mov
test
xchg
mov
mov
lcall
rcrb
or
xchg
xor
enter
call
dec
xchg
or
aam
mov
leave
add
xchg
and
xlat
stos
cmp
pop
lahf
cmpsb
or
mov
add
and
inc
push
cmp
push
mov
xchg
lods
dec
cmp
jae
mov
das
leave
jmp
dec
sub
pusha
cmp
jae
lcall
push
pop
jmp
mov
scas
lods
mov
dec
dec
fildl
inc
test
bound
push
fidivrs
in
adc
test
xchg
xor
fidivl
insl
dec
les
imul
cmp
sahf
jmp
stos
stos
mov
mov
rorl
push
jmp
cltd
push
int3
insb
adc
add
out
cmp
mov
enter
fmul
fsubr
lods
xchg
sub
sub
ficomps
dec
pop
adc
mov
pop
and
dec
rcll
leave
mov
aaa
xchg
pop
rolb
pop
jae
adc
in
push
or
dec
jl
cmp
in
mov
addr16
inc
imul
lods
pop
inc
mov
insb
dec
aam
iret
jl
dec
cltd
add
rcll
stc
xchg
in
xor
loope
mov
nop
and
fdivs
mov
mov
dec
and
out
inc
push
scas
jnp
sbb
pop
mov
cmp
ret
shll
daa
cmp
mov
xlat
in
pop
adc
not
sbb
inc
xchg
pop
mov
fisubl
fimull
mov
sub
sbb
cmp
cmc
test
sbbb
fwait
inc
test
xlat
lcall
ja
and
lcall
mov
or
mov
adc
jg
sarl
ret
sub
enter
pop
aad
mov
and
mov
xchg
lods
xchg
sti
sub
add
adc
mov
int3
popa
push
push
add
add
xorb
add
pop
cmp
cmpb
xor
jb
lcall
int
scas
lods
dec
inc
xlat
cmp
push
dec
xchg
ret
test
mov
cmp
mov
sti
filds
jo
addr16
in
mov
pop
movsl
rcr
xchg
loopne
mov
cmp
cli
ljmp
xchg
push
xchg
adc
sbb
dec
stos
pop
js
push
fs
add
jmp
add
les
push
jl
lods
push
pop
mulb
or
jmp
sub
addr16
sbb
or
mov
movsl
jg
loope
mov
out
daa
cmp
testl
mov
repnz
push
test
jge
sahf
inc
arpl
enter
inc
aam
pop
movsb
add
inc
pop
outsl
sbb
mov
and
fstpl
ds
mov
mov
insb
mov
adc
insb
arpl
notl
fcomip
negb
cs
sub
xchg
js
je
add
fldcw
jns
or
push
push
mov
cltd
cmp
out
jl
cmp
mov
dec
xor
inc
adc
packssdw
daa
or
jbe
sti
mov
out
icebp
pop
adc
nop
inc
jae
sahf
ja
ret
adc
mov
sub
jge
out
ds
cli
out
out
inc
int3
clc
mov
loopne
cmp
test
mov
add
xchg
pusha
pusha
mov
inc
mov
loope
cwtl
jmp
stos
not
push
push
cmp
adc
cmpsb
inc
xchg
es
cmp
fisttps
and
jge
mov
insb
inc
fwait
mov
push
push
test
pop
icebp
mov
adc
mov
sub
cmp
lret
cmpsl
test
cmpsl
data16
dec
dec
mov
scas
mov
stos
cmpsb
dec
pop
adc
sub
test
scas
jbe
lds
out
push
clc
repz
ja
push
mov
sub
inc
sbb
arpl
aad
gs
sbb
lret
incl
outsl
and
movsb
add
add
mov
push
call
rcrb
bound
pop
pop
incb
sub
fistps
sbb
jnp
inc
ds
xchg
outsb
enter
js
inc
cwtl
adc
loopne
or
sbb
in
xchg
lock
sub
mov
scas
insb
jns
cmpsl
loop
dec
or
test
or
mov
repnz
ljmp
aad
out
lods
cld
and
clc
test
filds
sbb
pop
out
push
call
int3
les
and
mov
push
test
pushf
repz
push
push
jb
rcll
cld
out
jle
cmc
arpl
sarb
dec
lods
ret
adc
repz
jb
mov
mov
push
mov
and
add
ss
lea
jnp
hlt
xchg
adc
lds
and
xor
call
cmpsl
out
pop
xor
dec
inc
pop
sbb
add
jge
in
enter
repnz
push
mov
mov
lret
or
mov
repnz
push
cmp
cmp
addr16
adc
inc
sbb
fdivl
mov
movsb
inc
push
cmp
ds
xchg
sub
cmp
std
cmp
lds
push
adc
pop
cltd
jg
test
push
sub
cmp
cld
je
lock
mov
lret
lods
test
cwtl
addb
mov
and
out
cld
cmpsl
mov
sbb
ja
test
push
out
pusha
jno
movsl
sbb
stc
out
dec
out
xchg
adc
xchg
mov
pusha
push
pop
leave
pusha
sarl
push
hlt
cmp
sti
cmc
shrl
aam
pop
enter
rcll
sbb
ss
jo
pusha
je
dec
cmpsb
std
pop
xor
dec
mov
movsb
pushf
push
scas
lea
adc
nop
loope
shr
adc
repz
inc
push
xchg
ja
stos
rclb
and
shl
cmp
ja
xchg
dec
add
cwtl
xor
jno
imul
pop
dec
dec
adc
ljmp
daa
les
fldcw
push
test
and
xchg
jb
pop
notb
xchg
std
aas
inc
adc
in
lds
cmpl
push
xchg
in
add
xchg
popa
mov
sub
cli
xlat
xor
imull
daa
sti
inc
shrl
xchg
das
push
fs
jge
leave
out
addb
mov
push
ljmp
aad
jo
ja
mov
lahf
loopne
add
xor
test
imul
loope
inc
cmp
outsl
jo
mov
mov
adc
andb
mov
test
dec
into
mov
pop
jne
test
repz
dec
int3
nop
in
adc
jmp
cmp
dec
cltd
dec
rcll
shrb
xchg
ret
ljmp
jae
popf
pop
or
aaa
insl
dec
mov
push
leave
sbb
sub
pop
push
cmc
inc
test
xchg
loope
popa
mov
ljmp
add
ljmp
rcll
dec
xchg
mov
lret
cmpb
cs
in
mov
mov
cmp
jne
xor
adc
adcl
xor
mov
inc
negb
stos
jmp
addl
mov
es
inc
jge
mov
push
in
movb
mov
pminub
int3
roll
sbb
into
mov
hlt
fsts
xchg
lea
lock
pop
xchg
xchg
out
aaa
repnz
hlt
xchg
jns
cmpsl
cmc
out
das
or
adc
sbb
xor
xor
repz
btr
jmp
sbb
call
rcrl
shll
ror
cs
and
loope
ljmp
jno
jae
add
xor
sti
mov
dec
out
mov
insb
pop
lahf
roll
pop
fdivs
testb
dec
fidivrs
mov
inc
and
test
push
nop
push
or
or
cwtl
add
pop
pop
lods
sbb
inc
pop
cli
push
movsb
movsb
pop
aad
mov
sbb
ss
dec
jno
stos
or
mov
scas
lret
or
jg
mov
jl
out
jmp
sahf
inc
sbb
xchg
xor
mov
sbb
repnz
mov
jbe
pop
inc
mov
cmpsl
dec
std
mov
in
push
vhaddpd
mov
sub
test
add
jne
arpl
lds
pop
ja
shrl
dec
cltd
xchg
add
ret
dec
insb
orl
sbb
or
xor
mov
add
sbb
and
in
push
push
dec
mul
sbb
les
aad
push
dec
xchg
pop
ret
inc
cltd
inc
dec
cmp
jb
inc
ror
xchg
popa
mov
insl
xor
and
fwait
test
sub
je
out
xchg
femms
xchg
into
adc
out
inc
fnsave
je
scas
sub
sub
jge
test
xchg
xor
xor
das
adc
and
js
inc
pop
ds
arpl
inc
adc
loop
adc
aas
mov
xor
or
imul
add
shl
das
xchg
push
insb
fwait
xchg
cmc
ljmp
jg
icebp
mov
pop
cmp
popa
orb
cmp
mov
int
sub
subl
mov
mov
jb
gs
push
mov
adc
mov
mov
add
mov
jl
xor
inc
dec
popa
pop
pop
fwait
xchg
leave
dec
xchg
jo
mov
or
sti
js
mov
mov
lds
pop
leave
sbb
or
fcmovnb
pop
jge
outsb
lods
test
sbb
cmp
mov
push
outsb
popf
xchg
mov
adc
and
cmp
loope
call
fxch
jmp
arpl
inc
imul
popa
cmp
decl
adc
dec
add
loope
jne
lret
daa
and
shlb
mov
ss
pop
mov
enter
popw
and
adc
xchg
pop
jnp
mov
jno
outsl
pop
rorl
mov
adc
ficoml
mov
jbe
lds
cli
in
je
cmpsb
push
aaa
pushf
aas
pop
pusha
xchg
dec
jmp
jp
rolb
incb
negl
or
sbb
xchg
mov
xchg
jl
cmp
sbbb
rcll
fcoml
add
pop
rorl
jnp
cmc
stc
ljmp
adc
pop
xor
pushf
push
and
mov
test
movsl
cmp
pop
mov
repz
aas
inc
lea
add
cli
sti
cmc
or
or
daa
cmpb
lock
jne
dec
sub
cmp
jmp
dec
push
gs
inc
ficoml
jo
jmp
jbe
mov
stos
mov
jp
std
out
inc
mov
aam
leave
lods
xchg
ljmpw
jmp
sbb
push
and
jno
sub
test
arpl
mov
out
sub
and
jmp
cwtl
insb
mov
inc
lahf
lock
cmp
popa
lods
dec
push
jmp
repz
test
scas
stos
mov
jbe
sbb
push
inc
in
divb
jl
dec
mov
loopne
stos
insb
or
movsl
xchg
iret
and
pushf
sbb
pop
cmp
es
and
fsubr
add
push
and
sub
mov
insl
mov
mov
std
into
xchg
iret
push
repz
adc
add
test
out
popa
pop
lds
rclb
sub
loope
cs
lods
dec
fisttpl
nop
fmull
aas
cmpl
jp
test
movb
in
push
mov
mov
pushf
or
fists
mov
mov
mov
gs
inc
mov
dec
adc
mov
lea
out
inc
ljmp
fwait
dec
mov
xlat
movsb
add
mov
or
stos
aam
pop
push
mov
leave
mulb
mov
sbb
inc
lods
mov
push
mov
mov
test
dec
in
div
inc
mov
cltd
xchg
xor
add
rcrb
repnz
test
andl
aas
les
inc
shlb
lret
inc
jp
jp
icebp
in
fistl
aad
adc
mov
or
xchg
add
mov
or
xor
test
and
push
push
cmc
and
imul
sub
jg
cmc
jo
rcrl
xchg
loopne
aaa
movsb
fsubrp
or
and
test
dec
push
idiv
xchg
mov
jo
jle
cmp
mov
sbb
adc
mov
cmpsb
inc
sub
add
pop
fstp
int
pushf
mov
aad
and
leave
adc
mov
pusha
addl
sahf
out
mov
inc
lret
xchg
mov
xor
xchg
mov
es
das
push
loopne
push
cli
jmp
clc
outsl
sbb
pop
lock
ds
scas
dec
jno
cmp
xchg
test
push
fs
repz
xlat
xchg
ret
fcompp
mov
mov
insl
outsb
push
sub
xchg
mov
aaa
adc
pushf
out
aad
mov
pop
sub
and
cld
sub
xchg
cmp
loope
xchg
sbbb
fists
dec
sub
ja
xchg
sqrtps
dec
fdivs
mov
fimull
adc
jnp
mov
jae
in
sub
xchg
orb
push
fs
not
mov
repnz
mov
scas
jns
push
cmpsl
fwait
mov
mov
loopne
cs
xor
sub
push
inc
call
out
mov
xchg
dec
push
push
or
push
dec
sub
adc
lcall
ret
mov
ja
in
movsb
mov
pusha
hlt
lret
cmp
jl
arpl
and
and
es
ds
jns
and
cli
ret
cld
xchg
cmp
je
hlt
data16
dec
xor
fiadds
lock
pop
cmpsb
lret
ret
mov
pop
stos
fdivs
add
das
iret
jns
jae
imul
sbb
pop
nop
jp
shll
mov
rcrb
imul
rcrl
mov
cmp
inc
pusha
subl
scas
pushf
mov
xchg
insl
clc
out
dec
mov
leave
xchg
mov
dec
inc
or
enter
sbb
push
add
icebp
mov
xorb
js
sarl
notl
cmp
or
flds
dec
in
cwtl
fistps
in
mov
mov
ret
sub
sbb
and
dec
fbstp
sbb
xchg
shl
ds
mov
aaa
js
mov
sar
add
xchg
ret
jle
iret
push
inc
xchg
ja
stc
xchg
ss
and
pushf
add
mov
lock
jle
stos
cmp
mov
xchg
mov
mov
dec
dec
add
push
fdivp
in
fwait
lea
test
pusha
and
xchg
stos
add
hlt
push
inc
fwait
sbb
sub
cmp
loop
cmc
xchg
sbb
jnp
inc
jle
cltd
push
mov
mov
jns
add
or
int
mov
insl
outsl
push
roll
jnp
mov
clc
or
loop
sbb
mov
dec
sub
into
hlt
inc
or
adc
pop
insb
outsl
sbb
xor
repnz
xchg
jmp
jecxz
or
sub
pusha
pop
push
dec
adc
pop
dec
jb
mov
mov
mov
or
dec
addb
nop
push
out
movsl
mov
adc
push
xor
or
jle
mov
decb
inc
insl
ss
cmp
test
std
push
push
stos
push
pushf
into
cmp
inc
je
adc
add
dec
jle
cmp
cmpsl
insl
and
cmpl
cmp
dec
push
push
jno
outsl
loop
and
or
cmpsl
mov
sbb
mov
inc
out
hlt
int3
arpl
dec
pop
sbb
sub
push
xchg
adcl
test
inc
and
arpl
or
ds
xchg
cmp
mov
in
inc
loopne
es
sub
push
mov
mov
fstpl
rcrl
addb
pop
mov
add
mov
insl
bound
sub
out
pop
lock
adc
ret
gs
test
cmp
fwait
lahf
push
icebp
dec
mov
je
aam
adc
push
mov
add
js
repz
call
mov
ror
pusha
jns
mov
cmp
in
test
shr
xor
out
insl
mov
or
push
xor
push
sar
into
insl
lock
lea
shrl
stc
inc
mov
add
lock
dec
jg
push
daa
sbb
push
outsb
add
subl
pop
vmovntps
push
mov
jle
jp
jns
out
dec
push
outsl
or
bound
xchg
or
and
out
add
pop
notl
jo
adcl
addl
jns
cmp
cld
vmread
pop
repz
jle
sbb
insb
rcrl
sbb
push
lods
pushf
push
fstpt
jbe
jno
enter
arpl
int3
adc
mov
fwait
shr
jb
pop
dec
repz
in
push
mov
add
iret
xor
scas
gs
js
mull
pop
loope
cmpsb
ljmp
mov
sub
lea
jp
aam
loopne,pt
jns
push
imul
hlt
and
jns
sub
jge
sti
cmp
mov
rolb
rcrl
sub
cmp
mov
pop
xchg
ficoms
stos
mov
cmp
cwtl
mov
sbb
and
pop
xchg
fiadds
lods
push
sub
push
ret
mov
rcll
out
loope
ja
cmp
stc
fisubs
add
lods
rolb
fildll
cli
mov
sub
xchg
cmp
cltd
loopne
icebp
push
jae
adc
repz
mov
sarl
gs
mov
outsb
in
adc
in
in
jmp
xchg
mov
xlat
cmp
into
mov
outsl
fwait
jmp
bound
js
pop
shl
repz
mov
das
or
xor
inc
xchg
sub
inc
and
popf
mov
jmp
mov
pop
je
cmp
dec
pushl
out
cwtl
aas
les
data16
scas
addr16
sbb
lcall
movsb
sahf
adc
js
push
dec
lcall
mov
lahf
fs
cmp
int
xchg
outsb
in
out
cmp
inc
mov
and
in
aaa
xor
out
adc
adc
push
popf
ret
dec
push
popf
pusha
add
sbb
bnd
aad
fistps
adc
mov
xor
fwait
xlat
mov
ret
jmp
add
cmp
sbb
mov
aaa
xchg
or
push
sub
ret
sub
shlb
xor
mov
std
or
dec
enter
mov
or
push
in
xor
mov
pusha
fnsave
lea
add
dec
push
push
pop
cld
adc
outsb
sub
enter
mov
ds
add
movsb
shll
out
jo
jnp
adc
pop
pop
cmpsb
pop
lret
push
cwtl
or
cli
les
out
or
pop
inc
push
int
jmp
and
aad
lds
xor
filds
lahf
das
outsb
test
lcall
insb
test
sbb
mov
fsin
push
push
jl
xchg
cli
mov
dec
std
in
pop
add
ja
shlb
test
jp
inc
push
ja
add
stc
and
mov
popa
imul
adc
pop
popf
push
mov
pop
daa
pop
and
add
lahf
ret
pop
shlb
push
adc
test
cmpb
mov
jno
rorl
inc
pusha
jb
call
std
iret
inc
push
push
jae
inc
in
out
xor
rcrb
adc
push
jmp
movsl
gs
fdivl
jp
loop
andl
repz
shll
test
xlat
popa
pop
clc
mov
add
jae
xchg
pop
push
xor
je
xchg
mov
int3
lods
dec
int
cmc
dec
iret
lcall
movsl
out
push
jp
outsl
fistpl
mov
cmp
adc
adc
mov
loop
cli
fistpll
out
cmpsl
pop
xor
mov
sbb
xor
add
fucomi
mov
arpl
adc
add
xor
and
shlb
ret
add
adc
inc
mov
mov
andl
jecxz
repz
and
shlb
ret
add
adc
inc
mov
xor
bound
xor
and
shlb
loop
xchg
arpl
push
push
mov
bound
xor
and
shlb
ret
add
fs
or
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
cmp
sub
sbb
or
mov
push
cmc
xor
inc
mov
inc
lods
push
pushf
lea
in
push
fsubl
xor
les
sbb
or
jl
insb
sbb
sarb
je
imul
fsubl
cmp
sub
sbb
or
jl
insb
test
dec
dec
lods
mov
cmp
test
les
sbb
pusha
mov
push
mov
arpl
adc
clc
test
push
dec
cmpsl
lds
repz
addl
testb
add
or
add
inc
mov
sbb
jns
not
sbb
leave
clc
rcrl
xchg
adc
in
and
add
les
or
pop
test
fstps
dec
xor
out
add
stc
addr16
ror
cmp
mov
jno
mov
or
mov
adc
roll
fcomip
xchg
mov
in
dec
jmp
pop
cmp
fwait
movsb
insb
lods
add
dec
mov
les
sbb
or
jl
insb
xchg
pop
jle
xor
ret
pushf
je
cmp
sub
in
fsubl
pop
jge
pop
aam
cmpsl
fidivrl
sti
cmp
dec
sarl
hlt
sbb
mov
orl
jl
sub
fldenv
std
add
push
sbbb
mov
xchg
jae
pusha
xchg
xor
insb
xchg
pop
movsb
dec
mov
inc
lods
push
pushf
mov
in
adc
and
xor
les
sbb
or
jl
insb
xchg
pop
movsb
dec
mov
inc
lods
push
pushf
mov
in
adc
and
xor
les
add
sbb
mov
cmp
add
add
mov
call
mov
adc
enter
mov
mov
xor
push
leave
outsl
movb
sbb
ja
std
sbb
sbb
pop
dec
loopne
repz
and
testl
adc
pop
add
shlb
sbb
add
mov
ds
movsl
bound
arpl
push
loop
movsb
loope
sub
lods
loope
addr16
or
mov
aad
lahf
loopne
mov
sbb
aam
fildl
dec
call
pop
dec
pop
addr16
or
or
pop
adc
fwait
test
cld
add
cli
mov
movb
lea
int
dec
cmp
in
shll
ficoms
mov
jecxz
pop
loopne
outsb
stc
es
add
into
cmp
inc
fcmove
push
dec
dec
popf
and
push
movsb
dec
mov
and
and
pop
mov
or
jns
xchg
daa
testb
adc
daa
xor
dec
mov
push
xchg
imul
mov
lods
cmpsl
push
mov
or
sbb
pop
mov
xor
lds
das
cmp
sub
fisubrl
inc
and
test
mov
sub
inc
fdivs
pop
add
or
pop
fldpi
mov
cmp
and
fcompl
aaa
sub
adc
sbb
ds
mov
mov
sbb
pop
and
xor
pop
xchg
out
cmp
cvtpi2ps
stos
add
cmp
stos
loop
aam
ljmp
mov
xor
outsb
fldenv
or
fldenv
cwtl
sti
cmp
das
dec
cmp
enter
add
push
ljmp
ret
sbb
mov
rcll
imull
std
lret
inc
and
rcll
mov
adc
cmc
or
sbb
ret
inc
test
lret
and
cmp
aad
mov
or
sub
dec
add
xchg
sub
dec
fs
or
jge
aas
jmp
or
enter
sarl
lret
loope
add
sbb
dec
fnsave
in
int
sahf
xchg
push
lods
adc
dec
roll
jecxz
xor
add
repnz
test
add
fiaddl
jecxz
iret
arpl
xchg
decb
sbb
shlb
and
mov
lds
jo
add
mov
int
mov
adc
add
push
inc
mov
sub
sti
scas
or
inc
dec
cmpsb
dec
xchg
out
sahf
or
dec
pop
test
sub
adc
icebp
mov
sub
les
mov
xchg
leave
in
mov
mov
adc
ljmp
inc
and
dec
jecxz
cli
enter
adc
jp
sub
mov
push
fwait
sbbl
ret
push
lret
dec
xor
stc
inc
adc
mov
xchg
popa
inc
ret
push
jge
cmpsb
mov
jb
pop
xchg
inc
icebp
cmp
inc
out
pop
out
call
or
sub
das
mov
lcall
jl
les
fistps
aas
push
or
jecxz,pn
or
jp
add
lahf
out
mov
jmp
jge
sbb
xor
adc
arpl
cwtl
push
jmp
push
mov
mov
push
xor
sub
xchg
sbb
stos
dec
stos
popa
jb
repz
je
loopne
inc
cmp
scas
xchg
mull
jne
cs
leave
push
mov
ret
clc
loop
or
mov
movsb
movsl
rcrb
mov
xchg
out
mov
xor
mov
popf
push
and
xlat
push
adc
push
sarb
lods
add
shl
fistps
pop
popa
imul
fimull
sbb
aas
jmp
test
sbb
dec
das
out
pop
inc
dec
lock
mov
pop
dec
imul
inc
and
pushl
mov
cmp
inc
ror
ss
inc
sbb
repz
xor
jbe
mov
mov
cld
pop
scas
scas
leave
ret
jmp
imul
js
inc
push
push
repz
pop
aam
push
outsb
mov
xorl
cmpb
mov
addr16
jbe
and
xor
jne
aam
sbb
cwtl
notl
jle
aad
lcall
cmpsb
xorb
mov
sub
dec
cmpsl
ljmp
jnp
jmpw
mov
jg
mov
es
fs
cmc
cltd
adc
add
push
xchg
out
fs
dec
sub
sahf
int3
or
mov
sahf
xlat
or
xorb
stos
xor
sbb
flds
jns
sub
pop
xchg
and
pop
stos
cmp
stos
int3
xchg
push
dec
jb
mov
cltd
cmp
cmp
cmp
mov
mov
cmpl
sbb
dec
outsl
daa
addr16
adc
loop
cs
scas
jge
mov
faddl
inc
inc
mov
insb
incb
inc
add
cli
aam
push
out
lret
mov
loope
fadd
adc
insb
pop
mov
mov
jecxz
inc
fidivl
jae
testl
cmp
xchg
mov
out
and
mov
and
push
sarl
dec
addr16
mov
push
das
iret
add
loop
inc
aad
aam
jmp
inc
lret
xor
cmp
sarl
sbb
fcomps
add
std
dec
mov
cmp
ja
dec
or
imul
outsl
daa
in
mov
push
test
cs
es
cmpsl
inc
lods
and
rcl
bound
and
inc
mov
test
inc
addr16
jg
cmp
mov
jb
sbb
testl
shl
lea
mov
dec
fstpl
loopne
sub
push
loopne
push
ret
lret
sbb
xchg
dec
inc
cmp
pop
lods
adc
cmpsl
cmp
lds
and
stc
cmp
fists
rcll
push
out
ret
into
outsb
enter
jno
aam
fisttps
movsb
lods
sti
das
mov
aad
add
mov
lods
sbb
sub
mov
mov
mov
imul
repz
sub
aad
scas
xchg
cmp
mov
sub
mov
fwait
or
adc
imul
dec
subl
hlt
ja
mov
dec
jne
dec
jmp
mov
xorb
ss
call
or
cmp
push
fidivrl
lods
sub
fsubrl
push
pop
inc
inc
xchg
mov
jmp
or
fcmovnb
mov
loop
push
cmc
add
cmp
lret
xchg
int3
lods
cmpb
push
cmp
push
mov
shl
sbb
pop
push
scas
ret
faddp
sbb
sahf
pop
movsb
adc
ja
aaa
mov
push
icebp
cmpsb
into
aas
js
inc
mov
cld
xchg
in
sbb
call
test
adc
data16
or
or
cmp
dec
bnd
insb
xchg
popa
stos
cmc
aam
inc
aas
dec
popa
cli
in
inc
mov
popf
lea
mov
sbb
mov
fs
xchg
sbb
add
push
xchg
jge
sahf
notb
push
sarb
hlt
dec
fbstp
ret
sub
mov
or
adc
ds
mov
dec
out
imul
int3
das
pushf
jbe
icebp
addr16
shlb
mov
jnp
mov
in
inc
sbb
scas
dec
jecxz
cmp
xor
pop
xchg
adc
bound
jae
adc
ja
call
xchg
lret
imul
and
repz
sub
xor
outsb
fbstp
aad
lds
push
mov
data16
adcl
cwtl
jne
sub
mov
push
mov
loop
xchg
fidivrl
pop
push
pop
xor
add
es
pop
jle
mov
popf
icebp
lods
sub
push
mov
fidivs
out
jnp
out
addb
add
push
orb
cmp
inc
jbe
nop
jge
mov
mov
push
mov
mov
jne
aas
mov
add
mov
inc
shll
adc
cmp
xor
lahf
push
call
sbb
xchg
aad
loope
icebp
stc
push
sub
or
decl
cmpsl
stc
push
mov
mov
inc
out
and
mov
adc
cmp
sbb
lcall
sub
mov
dec
jnp
insl
lahf
test
mov
mov
mov
out
cmpsl
test
iret
adc
pop
xchg
jo
pop
xor
xchg
mov
xor
jnp
inc
faddl
mov
and
lods
lahf
mov
lds
push
inc
xlat
xor
shll
scas
out
mov
sbb
inc
fs
lcall
cmpsl
lret
cmpb
pop
icebp
jl
pop
imul
mov
pop
pusha
not
jp
rclb
movsb
js
mov
movntq
mov
in
fisttpl
test
adc
xchg
and
cmp
cs
or
xor
loope
push
mov
mov
inc
inc
cmpsb
push
enter
lcall
inc
and
push
pusha
rorl
or
dec
mov
imul
ljmp
pop
pusha
into
das
sub
lcall
xor
mov
outsb
xchg
add
cwtl
add
hlt
int3
and
cmp
repnz
je
cld
cmp
loop
ret
imul
flds
test
jnp
adc
cmp
hlt
outsl
cmpsl
sub
sbb
mov
clc
subb
pop
cltd
fisubrl
cmp
jecxz,pt
mov
xchg
mov
cwtl
jbe
stos
cmp
arpl
test
ss
cld
stos
ja
mov
fld
sti
cltd
mov
mov
or
cmpb
pop
xchg
add
sub
dec
cmp
push
jns
pusha
out
cwtl
cwtl
xlat
mov
adc
pop
fst
xchg
adc
aas
dec
rolb
int3
jg
loope
roll
popa
dec
mov
add
rcrl
adc
jae
test
cmc
ljmp
rcll
jns
enter
leave
outsb
test
dec
into
sarl
fstpl
popf
and
mov
mov
xor
sub
sahf
mov
mov
scas
mov
inc
sbb
or
pop
es
psubusw
je
ss
icebp
push
cli
sub
inc
inc
test
gs
mov
mov
dec
sub
and
inc
dec
sbb
cmp
stos
jnp
adc
ret
movsb
mov
push
jnp
pop
xchg
or
cli
repz
sti
lock
dec
js
add
pop
mov
sti
xlat
jp
sbb
dec
mov
push
mov
sbb
xchg
fldenv
jl
dec
add
shlb
push
jbe
jp
sub
in
lret
inc
push
lea
mov
dec
imul
fisttpll
mov
sbb
inc
push
adc
adc
imul
and
fcompl
jnp
cmp
jo
test
adc
mov
jnp
out
xor
jno
adc
xchg
aaa
out
repz
imul
stos
pop
mov
cmp
mov
mov
popf
mov
sahf
mov
inc
xchg
arpl
ljmp
lods
pop
or
sbb
xchg
test
outsb
nop
mov
adc
cmp
jg
inc
and
jge
addr16
testb
cmp
push
sbb
and
pop
jle
movsb
sahf
mov
add
push
mov
fnstcw
je
fsts
add
xchg
jnp
ljmp
cmpsl
orl
and
mov
push
pop
gs
pop
lock
loope
imul
pop
mov
in
std
lcall
lea
add
lock
in
loope
xor
or
fisubrl
or
or
add
ret
jns
loope
pop
jbe
or
jge
cwtl
xlat
sub
adc
and
or
mov
popf
inc
jno
pop
adc
mov
pop
mov
pop
xchg
pop
mov
stos
or
movsb
adc
jnp
jl
xchg
dec
dec
jg
lret
fidivrs
cmc
xor
out
fwait
clc
sbb
dec
xchg
iret
jns
or
inc
pop
mov
test
mov
out
fldl
test
sub
dec
out
lret
in
jae
stos
and
pop
xor
cltd
icebp
mov
cmp
in
enter
xor
or
in
sub
orl
lock
test
sbb
fstps
test
fadds
test
jmp
add
fcmovnbe
jo
ret
addl
cmp
dec
stc
imul
sbb
cmp
mov
mov
fsubl
fists
out
push
and
mov
mov
in
lods
lds
mov
dec
add
or
dec
and
inc
jb
scas
subl
int
sub
inc
ds
xchg
mov
insb
lods
ja
dec
mov
mov
inc
jle
lret
scas
pop
mov
mov
mov
stc
out
cmp
minps
cmp
jle
sbb
xor
fnstcw
xchg
aaa
or
xlat
dec
movsb
pop
inc
jne
fsub
and
mov
shl
int
outsl
in
mov
mov
lahf
mov
adc
jne
cmp
jnp
pop
outsb
call
sbb
fidivl
inc
push
push
cmp
push
fidivrl
and
mov
js
bound
mov
lret
inc
stos
daa
mov
dec
jecxz
dec
xor
sarb
mov
jnp
jne
lock
cmp
push
imull
pop
hlt
ljmp
cmp
push
addr16
dec
out
xor
iret
pop
xchg
addr16
cwtl
mov
rorb
push
mov
lcall
fsubs
or
rcrl
inc
push
xor
or
jae
fwait
rcrl
rolb
scas
mov
int3
inc
sbb
sbb
xchg
scas
adc
push
and
mov
xor
sti
sub
cltd
dec
repz
cmp
cwtl
loope
xlat
mov
pushf
inc
popa
div
xchg
repnz
pop
sub
hlt
aam
mov
and
mov
push
inc
pusha
push
loope
rcrl
adcb
aaa
test
or
inc
incb
cmpsl
jg
inc
rcll
push
outsb
lea
pop
mov
repnz
popf
fcmove
pop
and
xor
and
movl
int3
inc
addl
loop
ja
outsb
jb
or
push
mov
rolb
sti
std
adc
hlt
add
lea
mov
imul
shlb
popa
repnz
cwtl
int3
cmp
push
mov
sbbl
or
jle
mov
in
pop
xchg
scas
cmp
imul
stc
pop
mov
inc
and
pop
xchg
xchg
dec
push
dec
aaa
repnz
mov
sub
xor
xlat
fsubr
out
mov
les
shll
imul
nop
sbb
xchg
push
pop
and
repnz
test
xchg
or
movsb
xorb
ret
lds
xorl
pop
fsts
pushf
inc
test
jns
idiv
adc
test
scas
xchg
push
pop
push
jg
push
int3
jecxz
outsb
push
and
mov
jg
xor
shrl
sbb
pop
test
cmpsl
leave
mov
mov
incl
aaa
mov
add
and
jb
xchg
andl
pop
arpl
mov
jb
inc
int
loope
out
repnz
repnz
dec
sbb
cmp
lahf
xor
imul
mov
jbe
sub
mov
je
cmpsb
sub
bound
mov
sub
ds
fsubs
shll
mov
lds
xchg
stos
or
jne
fcomps
lea
sbb
mov
movsl
or
push
jl
pusha
in
mov
cmovne
sub
xchg
pushf
lahf
pop
xchg
imul
jns
ja
int3
xchg
cmp
out
jl
dec
sbb
add
push
aas
and
cltd
stos
mov
xchg
dec
cmp
and
in
stos
shl
in
mov
out
mov
adc
ret
jmp
test
adc
mov
faddp
mov
leave
je
aas
out
test
or
push
push
add
sub
repz
insl
bound
add
jns
cmpb
mov
adc
push
inc
xlat
cmp
xor
in
mov
xor
push
dec
loop
stos
js
std
stc
rcll
and
jno
sbb
mov
aas
push
cmp
iret
dec
cmp
mov
sbb
xorb
aas
xchg
fstpt
and
loope
lret
addr16
out
rsm
mov
adc
fsubrl
push
xchg
stos
das
out
cmpsb
data16
dec
cmp
aaa
imul
ficoms
movsl
mov
push
fs
mov
jne
lcall
jge
adc
mov
std
pop
add
addr16
jmp
jbe
sahf
cwtl
jo
fstpl
and
push
add
repnz
fbld
xchg
and
jo
xchg
cmp
call
aaa
out
xchg
out
clc
add
push
xor
sub
outsb
mov
pop
sarl
shll
adc
stos
sbb
lcall
lret
or
inc
cmpsl
lcall
test
movsb
ss
adc
dec
or
cmpsb
dec
push
stos
aam
push
or
gs
mov
sub
mov
cmp
js
leave
xor
icebp
sbb
sbb
mov
ljmp
xor
dec
ljmp
pop
decl
std
push
movsl
lock
xchg
cmp
lahf
cmp
aad
out
imul
push
inc
sti
xchg
fwait
push
shrl
mov
cmp
adcl
cmpsl
dec
pushf
xor
jne
add
lahf
jnp
mov
in
mov
or
lahf
arpl
mov
mov
std
clc
je
jg
ljmp
cpuid
xchg
or
jbe
fwait
mov
or
aam
lret
jg
mov
jbe
mov
cmp
outsb
incb
ret
negb
xchg
add
xor
xor
xchg
fmull
mov
fcoml
pop
aaa
sbb
stos
ret
mov
mov
popf
xchg
push
or
inc
sbb
divl
push
std
sbb
fs
mov
mov
adc
std
nop
mov
cmc
aas
mov
xchg
jae
xchg
push
addr16
mov
jle
push
pop
mov
xchg
pop
push
dec
ja
sti
mov
cmp
fs
pop
dec
stc
adc
icebp
mov
stos
pand
mov
movsl
mov
shr
test
out
mov
push
inc
sbb
ljmp
jne
stc
out
add
cld
sub
jb
lahf
les
sbb
iret
mov
push
dec
ss
lret
scas
cmpsl
sbb
add
mov
inc
loope
sbb
movsb
aaa
test
fbld
out
push
cmp
rcrl
movsb
lock
xor
mov
lock
mov
daa
add
dec
push
or
fnsave
mov
push
dec
and
sub
pop
fwait
push
adc
push
pushf
leave
mov
pop
lcall
addr16
inc
cmp
sbb
jo
je
cltd
xchg
adc
and
notl
loope
adc
inc
lods
pop
adc
fsts
sbb
stos
push
or
std
add
adc
in
cli
push
sar
icebp
mul
add
lock
lods
addr16
rcrl
icebp
push
xchg
inc
outsl
mov
jmp
adc
pop
lcall
lods
int
dec
insb
popf
push
add
lea
push
mov
pop
inc
insl
sub
xchg
xchg
sub
dec
inc
stos
scas
daa
xor
rclb
and
adc
add
out
inc
sbb
push
xchg
push
jg
push
xor
xchg
push
dec
stos
lock
loopne
aas
stc
xlat
cld
test
ficoml
add
test
cmp
xchg
sarl
pop
dec
mov
xchg
js
or
nop
popa
mov
xor
lods
fdivs
in
arpl
loopne
sahf
js
scas
cltd
adc
call
daa
jle
cmpsl
into
je
call
ss
dec
pushf
add
test
or
shlb
add
pop
ss
stc
aaa
repnz
add
sub
int
ror
fidivl
lds
enter
insl
mov
sti
xor
jns
jle
lods
sub
cmc
arpl
aam
mov
jl
insb
xchg
pop
movsb
dec
mov
inc
lods
push
pushf
mov
in
adc
and
xor
les
sbb
or
jl
insb
xchg
pop
movsb
dec
mov
inc
lods
push
pushf
mov
in
adc
and
xor
les
cld
test
movsb
int3
mov
pushf
lods
push
pushf
mov
in
adc
add
xor
les
sbb
or
jl
insb
xchg
pop
and
mov
mov
mov
mov
lret
ret
mov
movsb
mov
dec
mov
les
and
pop
je
jmp
push
imul
test
hlt
stc
aam
mov
cmp
and
adc
add
push
dec
data16
imul
mov
shr
cld
loope
ficomps
xor
pop
push
insl
pop
jno
cmp
or
add
jmp
icebp
jecxz
cmp
and
loop
icebp
imul
mov
cmp
mov
test
pop
or
and
ror
neg
movb
adc
cmp
sub
fistl
out
cltd
sbb
and
jle
sti
cmpsb
rorl
dec
ljmp
cld
hlt
fdiv
adc
popa
fidivrl
jmp
mov
dec
sbb
cmp
jbe
loopne
mov
xchg
jmp
enter
in
sub
hlt
pop
xchg
sarl
shl
insb
and
fs
inc
sbb
ret
pop
testb
sub
cltd
pop
pop
test
mov
mov
in
aam
fldl
xor
cmp
or
push
jl
dec
jo
ljmp
loope
mulb
insl
pop
or
adc
xor
cmp
cltd
fisttpll
jmp
hlt
cmpsl
stos
xchg
mov
or
jno
push
cmp
cmp
imul
fdiv
test
in
aam
les
xor
and
adc
add
je
fs
imul
test
in
aam
les
xor
and
adc
add
je
fs
imul
roll
sbb
fadd
or
push
in
stc
cmpsl
je
les
dec
mov
cmp
incb
push
mov
fildll
cltd
test
sbb
mov
xchg
test
imul
rol
cmp
or
rorl
into
movsb
insb
jge
sbb
push
cmpsb
adc
cld
mov
inc
fwait
cmp
sub
in
cmp
and
mov
rolb
imul
cmp
or
add
lock
jmp
movsl
sti
mov
sbb
xor
mov
dec
sti
je
ds
out
push
adc
or
fnstenv
into
mov
fcompl
iret
mov
sub
movsl
rorl
stos
lahf
cmc
sub
adc
mov
cmp
mov
int
jecxz
aas
pop
lods
jge
rolb
mov
shlb
nop
dec
mov
or
ret
lds
aaa
dec
insl
jmp
lret
mov
insb
adc
mov
mov
das
nop
dec
ja
aas
add
mov
shll
add
daa
add
incl
cltd
push
pop
mov
ror
and
sub
push
push
test
lds
xchg
or
sub
adc
adc
sbb
push
lret
mov
xorl
test
push
lock
cmp
dec
adc
cmp
pop
xchg
cmpsb
sbb
push
lret
xor
cmc
imul
fwait
xchg
and
pop
jb
clc
int
and
or
cmp
inc
arpl
add
fcmovne
jnp
cs
daa
enter
into
scas
sbb
scas
inc
jnp
or
std
adc
outsb
or
rcll
lods
popa
or
jecxz
daa
jbe
pop
inc
sub
inc
imul
out
or
cmp
cld
leave
jle
aaa
cmp
fcmovbe
scas
jecxz
dec
push
push
or
jo
xlat
push
push
jecxz
xorb
mov
loop
flds
cmpsl
xchg
mov
pavgw
loop
push
lods
enter
xlat
cs
adc
pop
in
mov
clc
add
movsb
adc
mov
mov
mov
or
sahf
add
xor
dec
jns
push
insl
in
out
das
aaa
jmp
aaa
mov
in
sbb
cmp
clc
pop
xor
push
arpl
repz
fsub
es
sarl
sub
test
mov
rclb
sbb
push
repnz
daa
xchg
repz
sub
fbld
adc
lret
das
dec
jecxz
push
cmp
jns
jmp
out
js
push
dec
sbb
sbb
push
popa
cld
mov
scas
push
mov
in
xor
pop
in
rolb
icebp
popf
xor
popf
push
xor
iret
dec
xchg
outsl
pop
cmpsb
mov
push
das
mov
movsb
mov
ja
call
push
aas
push
mov
fld
dec
cmovl
jae
stos
std
mov
cmpsl
add
xchg
push
stos
mov
and
add
into
je
ror
push
inc
sub
or
add
dec
xor
mov
jns
iret
mov
outsb
cmp
xor
call
inc
push
dec
orb
mov
in
imul
arpl
cmp
pop
mov
or
in
ror
insl
int3
jg
push
and
std
mov
imul
movsl
inc
clc
push
push
pop
push
mov
sahf
in
or
lds
pop
lret
ljmp
cmpsb
fwait
jno
ss
sarl
subl
fs
xchg
scas
repz
orb
sub
ljmp
loop
jbe
mov
or
adcb
dec
push
sahf
push
fs
fucom
mov
mov
mov
scas
and
lock
aaa
test
add
test
inc
push
ja
xor
or
test
lds
pop
cmpsb
je
fldenv
xchg
sahf
rcl
xchg
mov
jge
in
in
popa
mov
pop
mov
sbb
and
int
pop
push
mov
add
mov
outsb
lret
dec
or
ret
or
insb
mov
jne
push
or
pop
dec
jge
jecxz
cli
loop
push
sbb
imul
dec
ljmp
lods
dec
enter
push
sbb
mov
pop
mov
xchg
iret
mov
sub
les
xor
jg
dec
mov
inc
jb
icebp
pop
cmp
xchg
fisttpll
test
cmc
loopne
enter
jmp
cwtl
inc
insb
push
ds
ljmp
gs
xchg
adc
inc
das
pushl
inc
or
in
cmc
pop
test
or
cmp
mov
repnz
push
insl
cs
cmpsb
iret
mov
pop
mov
rclb
je
loope
sbb
push
lret
mov
nop
pushw
dec
cld
scas
out
cmp
pop
inc
xor
in
jge
dec
pop
mov
out
add
loopne
lahf
mov
fistl
pop
cmp
hlt
xchg
test
data16
ret
xor
lea
sbb
push
pop
ds
push
and
push
out
adc
xlat
mov
push
dec
rcrb
lea
rcrl
in
ret
dec
adc
movsb
xchg
mov
outsb
sub
sbb
xchg
dec
mov
adc
enter
loop
loope
dec
popa
out
mov
push
mov
adc
jns
mov
xchg
xchg
out
mov
mov
movsl
adc
lods
sti
push
mov
lret
jp
inc
sub
cltd
cmp
or
pop
jl
jb
stos
pushf
jmp
das
daa
cld
test
lahf
xor
mov
mov
inc
incb
dec
loope
dec
xchg
jns
cmpsb
push
lds
sbb
sub
pop
cmp
repnz
push
cli
adc
cmp
adc
loope
mov
add
int
ss
iret
push
es
and
jne
cmpsb
add
dec
xlat
shl
jns
in
shlb
mov
mov
xchg
pop
mov
std
iret
repnz
jae
pop
cmc
subb
loopne
iret
push
test
mov
xchg
and
sub
cwtl
push
data16
into
push
or
loop
mov
inc
frstor
aam
fiadds
jne
xor
or
lods
ds
xchg
xchg
imul
popf
stos
push
dec
cmc
lea
cltd
shl
scas
xchg
fwait
and
adc
adc
push
push
pusha
xchg
insb
insl
testb
adc
gs
popf
fisubrl
lret
and
add
jns
mov
push
arpl
push
mov
jecxz
out
and
adcb
push
or
jnp
add
stos
cwtl
cltd
loope
loopne
sti
test
jne
pop
or
mov
sbb
xor
ja
mov
test
inc
mov
sti
push
fadd
popa
ja
aam
sub
sub
fistpll
jle
scas
pop
mov
push
jl
inc
cld
loop
sub
adc
mov
sbb
sbb
mov
push
or
aad
inc
mov
sub
enter
add
or
xchg
rcll
or
and
pushf
cs
aad
enter
inc
aam
mov
sbb
out
mov
repnz
push
cltd
jb
sub
and
jb
repnz
ja
repz
out
mov
test
push
shll
jo
push
jne
out
aas
push
mov
or
cmc
in
scas
popa
sbb
stos
jne
push
or
adc
inc
cmpsl
std
pop
fwait
scas
xchg
xchg
jbe
or
or
call
pop
sub
sbb
movsb
loopne
pushf
lret
cli
pop
mov
sub
subl
into
pop
stc
push
roll
notb
outsb
call
sahf
xlat
inc
xchg
addl
cmp
and
loope
add
movsb
andl
int
cld
pop
xchg
xorb
dec
xor
mov
fwait
test
mov
icebp
mov
ljmp
mov
inc
mov
lcall
ficoms
jb
dec
sbb
pop
dec
hlt
push
pop
int3
jne
cmc
dec
negl
sub
scas
cmc
pop
mov
mov
in
call
aam
pop
mov
lcall
ret
inc
add
cmp
sbb
jbe
call
fimuls
xor
sbb
neg
arpl
in
fidivs
xchg
stos
dec
cmpsl
mov
pop
lods
inc
test
rolb
mov
mov
add
jg
notl
and
dec
xor
repz
xor
jno
xor
std
xchg
leave
popa
sub
jae
lods
nop
scas
outsb
add
mov
or
hlt
outsl
mov
sub
mov
fsubl
pop
std
pop
imul
stos
xchg
sbb
lret
mov
orb
mov
movsb
stos
insb
jb
and
je
jbe
xlat
int
or
pop
or
pop
hlt
stc
js
lock
mov
fwait
andl
aad
jge
cmp
cmc
insl
nop
popa
leave
shll
shl
xor
push
ljmp
es
mov
pop
js
out
in
push
stc
inc
fwait
mov
cmpsl
scas
cmp
inc
out
xchg
sahf
mov
mov
sub
aam
popf
fcomps
xchg
dec
jp
inc
inc
xor
mov
imul
in
mov
or
fists
in
loopne
mov
rcll
mov
and
dec
xchg
xlat
sub
inc
xor
imull
xchg
fprem1
xor
sbb
or
sbb
pop
test
pop
add
adc
icebp
mov
add
cwtl
out
sbb
mov
lret
rol
mov
mov
sub
cs
stos
add
mov
pusha
movaps
pop
ljmp
jnp
scas
mov
and
aaa
clc
stos
popa
stos
rcrb
cwtl
xchg
push
das
mov
mov
fistpll
test
and
push
mov
pop
inc
clc
movsb
adc
pop
or
cwtl
aas
and
mov
mov
adc
lea
xor
push
out
fistpl
mov
xchg
aas
adc
ljmp
sbb
arpl
push
jmp
xor
fimull
mull
inc
push
pmaxub
scas
test
rclb
pusha
fcmovu
inc
jl
lds
push
inc
mov
xchg
sti
imul
jge
cld
movsb
sar
pop
adc
or
jp
xor
jmp
mov
mov
cmp
out
cmp
rolb
pop
sub
bound
mov
xchg
inc
and
inc
adc
jbe
inc
mov
mov
or
sub
mov
in
movsl
imul
stos
ja
pop
lcall
enter
in
or
rcll
outsb
rorb
lock
orb
push
hlt
jmp
xchg
mov
icebp
adc
jmp
lcall
daa
dec
mov
lret
imul
cld
mov
fdiv
clc
push
and
addr16
les
jnp
repnz
fwait
bnd
push
test
testb
fwait
pop
mov
dec
popf
orl
push
fs
sbbl
sub
orb
repnz
sarb
mov
orl
push
lcall
cmp
sub
lock
mov
mov
pusha
repz
popa
pop
fistl
in
scas
cmpb
mov
test
pop
in
push
pushf
stc
ret
and
clc
std
lahf
sbb
inc
fbld
lods
adc
xor
dec
or
jb
mov
lahf
je
scas
xor
push
rorl
mov
cmp
int
push
or
mov
int3
movsb
adc
ja
jno
xchg
shrb
xchg
inc
push
or
std
js
dec
andb
arpl
xor
add
adc
dec
negl
dec
push
rorl
lods
pop
mov
in
js
cmpsl
xor
dec
pusha
popa
sbb
jns
sbb
fistpl
jo
cmp
cmpl
ja
aas
dec
cltd
add
lods
mov
sub
cmp
scas
lret
and
imul
popf
pop
and
loopne
pop
mov
sarl
push
shlb
cmp
mov
push
sub
fadd
push
push
repz
test
lahf
sti
imull
je
icebp
dec
nop
les
or
xor
push
loopne
sbb
out
test
mov
or
fwait
or
cmp
arpl
lods
test
not
sub
lret
sbb
sti
jne
fprem1
out
add
jecxz
cmp
stc
movsb
jecxz
add
out
xchg
xor
das
mov
sbb
daa
pop
into
dec
xor
fstp
bound
jnp
insb
sub
xor
fsubl
pop
icebp
pop
mov
adc
fnstenv
lahf
cli
cmp
int
movsb
pop
gs
jmp
shr
addr16
mov
test
lock
outsl
lds
cmp
xor
push
dec
pop
stc
sub
adc
loopne
push
cwtl
mov
mov
jle
jno
add
push
out
push
in
dec
cltd
push
push
cmc
scas
fstl
pop
xchg
imul
lcall
aas
out
inc
in
movsb
ljmp
ja
scas
iret
enter
hlt
add
sub
xor
scas
test
jecxz
xor
jns
mov
mov
xchg
cli
cmp
add
lea
xchg
clc
push
loopw
lret
nop
inc
xchg
mov
ret
out
push
or
popf
addr16
cmc
pop
add
or
xchg
jbe
mov
jl
push
andl
pop
pushf
jb
push
pop
gs
sub
cmp
jge
test
xlat
sub
rcr
pop
mov
or
dec
rcll
sbb
sub
iret
es
enter
stc
jecxz
adc
lret
gs
jg
movsb
inc
gs
xchg
jle
mov
xcrypt-ctr
cmpsl
pop
mov
pushf
mov
xor
iret
std
xor
ss
popa
addr16
rorb
dec
aaa
icebp
sbb
push
das
push
jnp
pushf
stos
mov
mov
outsb
cmp
jb
xchg
lcall
call
dec
mov
mov
mov
add
dec
in
lret
out
cmpsl
fneni(8087
sub
sahf
in
inc
into
inc
xor
mov
mov
inc
addb
cmpsl
inc
lds
fists
imul
aad
fstps
pusha
shlb
jnp
repz
das
pop
jbe
jne
cmp
mov
shlb
mov
xchg
jne
inc
lea
icebp
lock
cs
fucomp
fimuls
push
adc
jmp
orl
shlb
jle
xor
xor
lods
push
mov
icebp
push
insb
ljmp
stos
in
aaa
addr16
fsubl
sti
cmp
lods
dec
dec
mov
add
loope
sub
imul
cmc
adcb
or
sbb
mov
in
inc
movsb
movsb
and
cmp
cmp
add
int3
arpl
loopne
mov
vcmppd
arpl
xor
mov
addb
cmp
pause
adc
icebp
ds
or
fcmovb
dec
fisubrl
lcall
movsl
dec
cmp
test
and
xchg
arpl
pusha
xchg
jno
mov
pop
push
adcb
ss
dec
stc
addr16
test
out
push
xchg
pop
and
loopne
loope
inc
inc
fidivrs
jns
sbb
cmp
and
xchg
mov
push
xchg
nop
add
or
xlat
sbb
mov
fs
fbld
dec
xchg
jne
inc
mov
add
cmp
and
add
in
test
jno
popa
out
inc
jae
jle
dec
fwait
lea
cmpsb
inc
fsubl
xchg
ret
mov
mov
inc
sbb
ds
mov
adc
dec
xor
adc
push
mov
cmpsl
das
call
cmp
adc
idivb
cmp
lds
sti
xchg
or
nop
jae
enter
xchg
ret
add
leave
mov
insl
mov
les
xchg
add
mov
lret
test
xchg
cmp
in
and
xlat
jne
jge
in
and
subl
fcomp
popa
sbb
lds
clc
pop
add
or
adc
loopne
mov
sub
imul
push
or
xlat
imul
dec
and
xchg
popa
sbb
and
in
stos
pop
hlt
pop
pop
scas
negl
cs
push
mov
adc
inc
sbb
int
outsb
mov
mov
mov
pop
nop
pop
dec
gs
shll
mov
lds
pop
mov
inc
cli
lcall
add
lcall
rcrl
cmp
sbb
mov
aaa
fisubrl
scas
and
add
xchg
mov
fcomi
int
inc
ret
lods
and
or
push
adc
outsl
cmp
xor
xchg
mov
lahf
pop
adc
mov
jo
ss
inc
xchg
or
mov
je
stc
and
sahf
nop
aam
jmp
test
xchg
jg
rorb
es
out
cmp
sub
int3
or
fadds
shrl
and
xchg
orl
mov
dec
lcall
pop
pop
dec
pushf
je
xor
or
call
dec
rclb
movsb
into
push
fcmove
mov
sub
daa
movsb
repz
inc
test
push
int3
sti
cld
inc
test
mov
add
xor
sub
xor
dec
imull
sbb
mov
sub
sbb
fdiv
sbb
aad
sub
cmp
in
xchg
adc
mov
mov
sbb
mov
stos
cli
add
out
lods
mov
iret
cmp
ljmp
fidivrl
fstpt
sub
mov
mov
mov
xchg
out
jg
repz
fbstp
adc
jmp
out
dec
pop
repnz
mov
inc
fsubl
push
xlat
xor
js
faddl
int
js
fld
jecxz
inc
lods
popa
hlt
push
test
or
paddd
xor
jg
or
cld
and
ss
aad
out
das
call
jae
ret
ret
sub
icebp
mov
sbb
stos
mov
ss
xchg
mov
scas
icebp
aam
add
sbb
add
andb
repz
pop
push
es
add
aam
sub
repnz
pop
repnz
sub
ljmp
pop
rorl
js
push
inc
pop
mov
sub
cmp
icebp
leave
jl
outsb
pop
add
sub
sbbl
lcall
jbe
cli
cmp
push
es
aaa
clc
and
rcrb
icebp
iret
test
push
push
and
lret
cmp
loope
ret
pop
je
and
fdivr
push
cmp
push
mov
enter
cld
dec
mov
mov
iret
cwtl
out
sbb
pop
dec
gs
ljmp
lods
icebp
ja
jge
ljmp
pop
fcoms
inc
leave
xor
lret
fndisi(8087
hlt
ret
mov
jo
or
mov
sbb
jb
pop
mov
lret
inc
cmpsb
sti
xor
ds
js
add
add
pop
jmp
mov
rcr
xchg
out
jge
daa
rorb
xchg
movb
aaa
sub
push
imul
jnp
inc
xor
in
or
mov
and
scas
sub
orb
xchg
jl
mov
ds
mov
mov
pop
movsb
shl
sub
cmpsb
push
inc
negb
fs
push
cmpl
xchg
mov
sub
fs
mov
jns
pop
inc
mov
dec
je
das
dec
cmpb
sti
cmpsb
movsl
jmp
idivl
jp
cmpsb
and
sbb
jg
jp
or
loopne
push
gs
and
xchg
imul
js
ss
orb
les
imul
mov
fmuls
pop
lcall
bound
mov
cltd
jecxz
mov
xorb
dec
sbb
divl
fldz
inc
push
cmp
or
in
loop
lcall
pop
add
scas
add
fadd
fcoms
outsb
std
sub
aam
mov
jbe
insb
push
push
add
cmp
jge
cmp
scas
add
sub
daa
pop
rclb
je
push
push
cmp
dec
push
cmp
adc
and
fbstp
and
add
lods
repnz
sar
imul
insl
sub
scas
jge
enter
and
lahf
sbb
jmp
pop
into
mov
iret
jns
fiaddl
jb
push
xchg
push
xchg
mulb
aaa
xchg
lret
lcall
insl
cmp
lock
movsl
mov
popa
and
add
orb
xchg
fcoml
sbb
enter
inc
out
lock
std
imul
add
mov
insl
add
mov
inc
bound
adc
jp
movsb
push
xchg
test
in
aam
les
xor
and
adc
add
je
fs
imul
test
in
aam
les
xor
and
adc
add
je
fs
imul
test
in
aam
les
xor
and
adc
add
dec
fs
pop
inc
lods
mov
mov
fxtract
leave
in
aam
add
xor
mov
cld
rcrl
sub
push
inc
pop
cmp
mov
test
push
add
add
add
add
add
add
call
add
add
add
add
add
in
add
add
add
add
add
test
sub
xchg
add
add
lods
add
popf
add
add
add
add
add
dec
add
add
add
add
outsl
add
pop
add
add
add
add
js
sbb
popf
add
lret
add
add
add
add
xor
add
sub
js
inc
add
add
add
add
add
add
add
mov
add
add
add
add
add
stos
add
add
jle
add
adc
clc
add
add
add
add
add
add
or
add
add
add
add
pop
add
add
add
add
add
add
add
xchg
call
add
add
add
add
add
add
add
mov
add
adc
aad
push
add
add
add
or
add
add
add
roll
add
inc
add
add
add
add
add
in
add
adc
pop
add
into
add
add
add
lret
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
pushf
add
add
add
add
add
js
call
add
mov
sub
add
add
pop
add
add
lret
add
fwait
add
add
add
add
push
inc
add
add
in
addr16
add
in
sbb
loope
sbb
xor
into
add
add
into
add
add
push
popa
add
add
add
add
jecxz
cltd
add
add
add
add
add
inc
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
sub
mov
mov
sbb
cwtl
add
add
add
add
add
add
mov
aas
add
push
add
add
add
add
add
add
add
add
add
add
lcall
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
sbb
in
add
out
add
add
in
add
add
add
add
add
xor
imul
add
int
add
add
add
add
add
add
add
xchg
add
inc
add
add
add
inc
add
cwtl
add
add
add
add
add
add
add
add
add
sub
mov
clc
add
add
add
add
add
add
add
add
add
cmp
xchg
add
add
add
jae
add
adc
jns
out
ret
icebp
xor
mov
fidivrs
mov
lods
out
mov
jne
insb
dec
mov
dec
xchg
xor
xchg
mov
cmp
xor
xchg
fiaddl
movsl
js
push
push
sub
lret
test
sub
cmpsb
push
ror
push
sahf
out
call
in
and
outsl
popa
je
push
sbb
test
pop
scas
xchg
das
cltd
in
inc
and
mov
add
or
lret
mov
pop
mov
lret
mov
outsb
cmc
mov
mov
test
mov
push
call
lahf
push
fcomps
cli
movsb
jg
aam
jmp
jo
inc
mov
dec
mov
mov
fwait
and
mov
bt
push
loopne
in
sbb
jae
test
sub
test
bound
mov
pop
test
and
adc
mov
or
pusha
shll
negl
dec
test
in
mov
test
aas
movsl
sub
jo
pop
mov
outsb
rcrl
aam
addr16
xorl
insb
jp
or
in
mov
xchg
pop
wrmsr
adc
xchg
xor
sbbb
rcl
leave
pop
push
lds
ds
mov
xlat
sub
insb
jne
push
push
dec
out
movsb
ss
lret
sbb
jl
aas
sbb
ficoml
jae
aas
pop
sbb
lea
push
popa
mov
int3
mov
mov
push
mov
arpl
clc
lods
scas
xor
push
push
add
xor
and
clc
inc
inc
cwtl
adc
add
xor
and
dec
cli
int
outsb
adc
insb
push
cwtl
adc
xor
jbe
jnp
xor
mov
and
scas
jb
add
shr
pushl
adc
pop
das
sti
fdivrl
fiadds
dec
pushf
or
inc
sub
sub
imulb
pop
jl
ds
pop
jmp
adc
test
jl
add
ja
lods
add
mov
fwait
inc
mov
jnp
xor
or
aaa
mul
adc
adc
hlt
in
call
divl
lea
fwait
daa
fwait
cmp
or
ret
push
sub
bound
fimuls
mov
rcll
test
xor
cmc
sub
clc
roll
call
pushf
sahf
jl
hlt
mov
jmp
sub
inc
jmp
xor
into
pop
lret
test
jbe
mov
jecxz
adc
pop
lock
add
push
adc
cmp
out
rcrl
mov
sub
stc
jo
push
adc
sbb
lret
out
sti
mov
inc
xchg
and
add
shll
adc
xlat
push
movsl
and
addl
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
