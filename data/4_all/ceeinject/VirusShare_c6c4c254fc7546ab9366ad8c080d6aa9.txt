call
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
movl
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
jae
repz
or
sbb
insl
xchg
pop
loope
negl
jae
inc
mov
and
xor
adc
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
and
ss
stos
pop
mov
xchg
pusha
repz
pop
cmpl
xchg
xchg
js
mov
inc
dec
xlat
add
das
cmpsl
mov
sbb
xchg
xchg
mov
out
push
mov
fimuls
or
data16
cld
int3
fidivs
mov
xchg
out
arpl
arpl
inc
push
adc
repz
sbb
dec
mov
inc
xchg
mov
inc
dec
mov
sbb
mov
or
nop
repz
adc
mov
pop
or
test
jo
pop
in
xchg
sub
push
adc
and
jnp
push
aad
lods
movsl
mov
push
std
xor
sub
cmp
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
scas
dec
popf
pop
loopne
or
sub
sub
fadd
movsl
sub
aaa
in
push
cwtl
jg
outsb
mov
mov
mov
fwait
jg
das
xlat
cmp
leave
push
into
cmp
ss
push
test
imul
jl
dec
xchg
pop
arpl
pushf
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
jecxz
notb
arpl
push
sbb
je
sub
and
mov
rol
repnz
lods
inc
ss
xchg
xchg
daa
xchg
nop
mov
sahf
mov
adc
mov
push
leave
mov
mov
dec
dec
insl
mov
shrb
jmp
adc
aad
faddp
xlat
mov
lods
dec
es
outsb
jp
add
mov
mov
jo
fdivrl
fdivl
jae
faddl
cld
push
push
sub
mov
fs
inc
je
cld
pop
sbb
push
dec
iret
mov
mov
push
insl
push
xchg
xorl
rclb
mov
xchg
mov
add
mov
xchg
addb
out
arpl
mov
shlb
mov
jno
notl
dec
cmp
and
mov
mov
testb
jns
sbb
sbb
xchg
mov
out
in
jge
mov
fldenv
mov
addl
fisubrl
aad
mov
enter
adc
jl
or
xlat
mov
arpl
inc
es
bound
and
push
mov
imul
and
mov
repnz
and
lret
ljmp
lods
sub
in
and
dec
mov
dec
jnp
lock
in
shl
jle
std
daa
ds
pop
xchg
loop
mov
sub
in
xchg
xor
cmc
stc
xor
test
rcrb
push
and
shrb
lahf
inc
mov
loopne
fcoml
and
test
stos
lds
mov
fldenv
cmp
sahf
sub
sub
fcoms
inc
gs
stc
lcall
fistpll
insl
roll
push
xchg
hlt
and
xor
sbb
sub
out
jg
jl
sarl
addb
sbb
add
sbb
shrb
popf
jmp
les
jb
ret
xchg
mov
jno
mov
mov
mov
cmp
pop
cmpsl
loope
mov
cs
mov
cmp
scas
push
fucomp
mov
fwait
and
jg
cs
sbb
sbb
adc
adc
pushf
fstps
bound
lahf
scas
sbb
jge
sahf
inc
jl
add
push
inc
mov
or
movsl
or
lret
fcmovnu
jo
push
inc
sub
mov
or
lret
mov
push
and
pusha
mov
repnz
push
xchg
or
shl
lcall
dec
mov
fdivrs
xchg
pop
mov
je
rcl
adc
cmp
xor
mov
inc
jns
mov
in
dec
sbb
adc
jb
scas
loopne
sub
insl
mov
fs
bound
or
stos
jo
inc
sbb
cmp
inc
cmp
int3
dec
icebp
insb
sub
sbb
lret
sbb
insb
hlt
push
mov
xchg
push
shl
dec
cmp
int3
fdivrs
jne
dec
push
sub
push
lds
cmpsl
test
divb
lock
out
push
or
inc
hlt
lret
test
pop
jg
inc
dec
outsl
xor
jge
popa
mov
insl
leave
add
xchg
mov
scas
enter
into
outsb
clc
in
pxor
push
sub
jns
mov
cmpsb
cmp
fistpll
into
mov
jns
fdiv
sub
and
dec
sbb
in
mov
hlt
test
mov
sub
pop
jecxz
jecxz
jp
xor
fstps
popa
scas
ja
dec
ja
mov
mov
leave
sti
pop
mov
push
inc
and
adc
imul
cs
cmp
cmpsl
dec
inc
bnd
nop
lret
daa
outsl
hlt
cmpsl
hlt
add
add
push
jo
push
sbb
imul
out
sub
mov
in
cwtl
fsubrl
or
mov
or
mov
pop
jp
pop
out
jb
xrelease
xlat
dec
pop
mov
add
cmc
pusha
cmp
sbb
into
in
call
outsl
pop
add
push
mov
add
call
jge
add
divb
cltd
adc
negl
adc
std
adc
ljmpw
jne
jecxz
push
into
movsl
xor
jnp
out
lea
jecxz
inc
sbb
sbb
popa
cmp
lea
cmpsl
in
mov
rcrb
jmp
dec
xor
jne
cmp
and
loope
mov
jns
fdivrl
push
cmp
movsb
pop
lods
and
mov
xchg
lret
lahf
inc
pop
jmp
jg
cltd
out
test
pop
mov
data16
push
mov
loop
mov
mov
jo
mov
jae
out
cs
cmp
int
insl
stos
xlat
in
int3
mov
dec
or
push
in
pop
and
push
repnz
jae
test
sub
mov
fbstp
scas
or
dec
cmp
and
ljmp
add
add
jmp
xorb
aas
add
push
push
pop
jl
adc
in
test
adc
push
inc
out
and
or
xor
popa
push
mov
xchg
in
mov
ds
in
or
nop
and
or
add
outsb
dec
mov
and
cmc
rcrl
fldcw
push
cmp
add
pcmpeqw
dec
xchg
std
repz
popf
out
mov
insb
fsubs
enter
in
adc
test
xorl
jns
cmp
sbb
stc
pop
pop
aas
cmpsb
push
insb
mov
test
sbb
gs
or
sbb
cld
dec
sbb
xchg
xor
mov
sbb
add
ret
int3
repz
aas
jbe
rcrl
test
push
test
leave
hlt
clc
sub
cmp
les
aad
shl
scas
ljmp
inc
loopne
cwtl
sbb
int
or
fistpl
pop
dec
jno
movsl
xor
dec
repz
dec
call
fbstp
and
in
push
mov
adcl
jns
in
xchg
xchg
lret
jle
mov
xor
sub
lds
or
jbe
das
outsl
mov
pop
test
call
sbb
stc
test
iret
pop
sbb
mov
inc
out
xchg
xchg
mov
adc
mov
ret
fimull
add
push
aad
push
pop
hlt
fwait
jmp
mov
les
lret
fnstcw
aas
pusha
lcall
inc
pop
hlt
sbb
mov
sub
hlt
ret
xchg
mov
test
xchg
add
xchg
adc
push
adc
jae
icebp
or
inc
cwtl
push
fcoml
das
jne
jne
cmp
test
out
push
cwtl
popa
jbe
das
cmpsb
add
fwait
sub
aad
sub
inc
inc
jecxz
jl
pop
mov
adcb
fcmovbe
out
push
lods
ret
enter
push
cmp
mov
pop
push
xlat
and
std
clc
push
ljmp
xchg
cmp
fwait
mul
ja
jbe
mov
js
int3
jbe
sbb
push
jne
and
ret
dec
inc
hlt
cvtpi2ps
addr16
inc
cmpsl
and
sti
sub
fnstcw
and
fistpll
pusha
lock
push
lds
pushaw
push
adc
adc
cmp
pop
push
jno
jge
test
pop
dec
cmpsb
sbb
mov
xchg
add
lcall
and
and
sbb
mov
lds
stos
lds
jo
pop
lods
fmuls
mov
iret
or
testb
stc
sub
icebp
xor
xchg
cmp
dec
and
push
fstps
out
rclb
ret
ja
shrb
mov
int
stos
ret
mov
and
inc
jno
mov
jae
pop
out
inc
aam
sar
das
push
pop
aad
jp
jns
icebp
or
fsubs
repz
sub
or
test
push
and
scas
cmp
cmpsl
movsb
lea
xchg
jge
jns
outsl
loope
xlat
lahf
fmulp
sbb
cmp
push
xor
mov
decb
ficoml
xchg
pushf
mov
dec
lock
inc
cmp
cli
daa
out
lret
xchg
sahf
cmp
sbbb
adc
lods
xor
pop
loopne
clc
sub
adc
int
dec
xlat
out
fnstsw
sub
sub
jns
mov
jns
sbb
jge
sbb
pop
aam
inc
dec
stos
or
push
scas
inc
and
pop
push
into
out
inc
outsb
repnz
adc
and
jb
jge
mov
or
mov
push
mov
push
dec
jns
repz
xor
and
add
lahf
mov
pop
sti
jp
lret
xchg
imul
int3
dec
push
add
jbe
call
sub
add
icebp
xchg
mov
dec
movsb
aad
div
jae
cli
xlat
test
test
mov
push
repnz
or
push
jb
arpl
inc
dec
fadd
push
push
jl
inc
pop
data16
adc
sub
data16
sub
jp
int
inc
push
loope
das
push
repnz
jnp
sbb
stos
add
or
or
sahf
mov
and
mov
idivb
dec
pushf
jp
insl
mov
imul
mov
fs
jmp
test
adc
add
lods
jmp
sbb
out
lds
lret
pop
push
lock
inc
xor
pop
clc
dec
mov
insl
stos
inc
rorb
je
cmp
push
xchg
call
aaa
jmp
add
inc
and
shrb
pop
xchg
dec
push
cli
mov
dec
pusha
pop
push
cmpsb
das
outsl
dec
ja
jo
dec
pop
insb
rolb
or
pop
loop
mov
fistl
xor
mov
xor
cmp
pop
add
push
cwtl
pop
jecxz
inc
lret
push
xlat
pop
leave
iret
sbb
dec
cmp
or
outsl
iret
push
or
xor
icebp
pop
les
fsubr
out
lods
push
xlat
mov
xchg
loopne
mov
iret
popa
es
in
lret
test
sbb
push
jmp
and
pop
push
mov
jge
push
ljmp
in
jo
jge
into
jae
in
cmpsb
in
and
mov
cmp
xchg
push
push
std
add
test
std
xor
repnz
push
pop
jle
fwait
loop
jns
add
mov
cli
loope
iret
xchg
mov
int
xlat
rcl
push
sbb
mov
mov
pop
adc
fwait
cmpsl
adc
test
je
les
sub
icebp
insb
adc
lock
ret
lods
out
dec
sbb
inc
add
push
inc
xchg
sbb
test
pop
dec
jmp
inc
push
xchg
shl
sub
add
fistps
fsubrl
add
arpl
lret
aam
push
push
add
inc
ds
dec
mov
inc
gs
xchg
mov
sbb
lcall
int
fs
xor
cmpl
dec
xor
jecxz
in
add
push
push
mov
mov
or
sbb
les
xor
ror
mov
sub
dec
sahf
lcall
lods
sbb
add
rclb
mov
cmpsb
pmulhw
shll
adc
and
pop
mov
es
mov
inc
decb
mov
mov
js
out
outsb
idivl
out
xchg
dec
into
aad
adc
mov
in
mov
gs
insl
arpl
mov
fisubrl
push
int
mov
dec
es
or
stos
or
add
mov
lahf
cld
fstl
ja
jno
jp
setns
sub
das
fdivrs
repz
pop
xor
inc
mov
sbb
ret
cmp
arpl
add
fsubr
hlt
repnz
push
mov
cli
mov
mov
negl
test
adc
sahf
add
push
cmp
jecxz
mov
inc
jae
xor
cmp
pop
in
icebp
sub
stc
enter
out
add
dec
sbb
dec
mov
int
loope
mov
js
popf
pop
test
aas
insl
cltd
adcb
pop
mov
gs
cmp
or
pop
cmp
sub
popa
aas
cmp
cmpsl
cld
jnp
scas
jmp
lea
and
push
fdivrs
ljmp
into
fcomps
lahf
inc
lods
test
mov
mov
das
push
cltd
mov
xchg
arpl
jge
shlb
push
in
pop
aam
jb
add
stc
int
ret
in
dec
xchg
daa
lret
jno
xchg
and
imul
xchg
movsb
cltd
je
jle
cmp
mov
es
outsb
or
jns
mov
mov
into
sbb
nop
adcb
mov
mov
cli
or
add
adc
stos
cli
hlt
jge
sahf
jp
scas
cli
je
pop
sti
sbb
shll
fwait
nop
stc
out
lahf
in
lods
and
pop
gs
inc
test
xor
sbb
rorl
xlat
mov
shll
out
or
scas
aas
adc
push
sub
std
xchg
push
arpl
pop
mulb
cld
mov
add
and
movsb
dec
stos
mov
push
cmp
popw
lods
les
xor
lcall
jnp
testb
or
lock
ljmp
imul
adc
aas
js
movsl
push
mov
mov
push
pop
and
fimuls
inc
stc
loop
or
movsb
sbb
scas
and
or
mov
mov
xor
adc
jb
sbb
push
in
js
mov
into
xchg
dec
loop
imulb
repnz
jne
adc
filds
push
jne
mov
push
sub
jmp
fwait
jl
fs
cli
cmp
fwait
xor
push
jg
sub
je
or
jns
pop
cli
mov
mov
and
shrl
call
mov
push
cmpsl
fnstcw
jle
lds
pop
stos
adc
pop
test
jp
add
mov
pop
inc
jp
cmpsb
inc
xchg
or
or
mov
fcmovu
mov
xor
orb
sbb
mov
cld
adc
dec
jns
cmp
jae
mov
mov
pop
xor
out
adc
adc
mov
push
ljmp
xchg
add
jae
into
push
and
pop
hlt
or
stos
and
outsl
fwait
and
adc
xor
cltd
xorb
or
cmpsb
xchg
xchg
je
mov
sub
or
push
js
pushf
cli
int
cli
or
push
mov
xchg
xor
ds
pop
add
jmp
adc
test
and
pop
mov
add
out
xor
cmp
lcall
icebp
mov
xchg
mov
popa
negl
cld
lret
pop
and
xchg
mov
enter
data16
lret
push
jnp
stos
rolb
test
das
add
arpl
movsb
ja
outsl
imul
cs
out
inc
ret
out
mov
inc
sbb
out
cwtl
mov
jmp
fdivr
daa
sub
mov
mov
imul
outsl
xor
adc
in
sub
sub
inc
in
jp
sahf
std
cmp
aam
and
addr16
bound
call
cmpsl
cli
rcll
inc
xor
and
enter
or
xor
loop
fldenv
mov
scas
inc
sbb
ja
inc
mov
int
dec
mov
mov
daa
movsl
pop
mov
test
lea
fiaddl
inc
cmp
jmp
mov
incb
inc
mov
mov
arpl
xor
sahf
pop
jbe
inc
imul
dec
cltd
scas
cmp
mov
xchg
cmp
js
loope
pop
jl
fimuls
loop
sub
add
adc
jecxz
sti
mov
stos
mov
ss
sub
outsl
pop
js
call
mov
mov
mov
out
jle
pop
mov
push
cmc
inc
incl
mov
ret
mov
hlt
pop
cmpsb
aas
adc
xchg
rolb
in
das
mov
and
push
js
scas
xor
xor
mov
aad
gs
insb
xchg
in
out
lahf
add
hlt
bound
or
pusha
push
pusha
daa
push
out
dec
out
mov
mov
cwtl
pushf
subl
mov
int3
js
iret
cld
cs
cmp
dec
cltd
sbb
xor
out
outsb
dec
mov
jb
xchg
push
mov
sbb
cmp
push
into
imul
jmp
pop
mov
mov
jae
insl
ret
and
unpcklps
aad
cmc
js
je
mov
movsb
push
repz
jns
xor
lods
bound
sub
bound
aad
std
cld
mov
clc
xchg
gs
popf
outsl
jp
jnp
jmp
pop
xor
test
push
lret
jmp
arpl
leave
mov
add
jno
scas
popa
leave
lods
sbb
sahf
mov
mov
or
dec
outsl
ret
and
push
cs
in
imul
mov
dec
mov
adc
mov
push
sub
xor
setbe
jg
mov
mov
mov
lahf
and
fisttpll
xchg
push
mov
insl
or
jecxz
movsb
in
cli
cld
das
xlat
aad
sar
stc
push
dec
sbb
or
adc
dec
or
aas
jmp
inc
cli
dec
pop
xor
xor
xchg
lock
jno
sbb
or
sbb
gs
ud2
enter
inc
jno
dec
cmp
inc
sub
dec
mov
inc
aaa
mov
scas
out
testl
lock
pop
add
test
jl
mov
test
xor
cs
cmp
mov
out
sbb
test
xchg
mov
leave
mov
dec
test
jmp
addl
mov
cli
insl
mov
fcomip
ljmp
cmp
dec
popa
iret
pop
addr16
rcll
mov
lret
loope
dec
sub
pop
scas
sahf
out
movsb
sti
sub
or
pop
sbb
xor
pop
in
sahf
xchg
shr
ss
lods
fidivs
mov
inc
movsb
repnz
clc
and
jns
push
test
sbb
inc
dec
pop
pop
jmp
mov
push
cld
mov
fidivl
jl
cli
cmp
xchg
or
roll
sub
aaa
or
out
in
jl
xchg
sbb
mov
sbb
ficoml
push
gs
movsl
mov
jae
dec
loop
pop
outsb
mov
xchg
and
addr16
mov
or
mov
sub
lods
mov
adc
ljmp
clc
mov
stc
loope
and
fmulp
jmp
call
fcmovnb
inc
out
adc
push
xor
repz
lcall
clc
int
xchg
add
call
int
add
push
adc
pusha
add
jae
sub
js
cmp
cmp
leave
aas
repz
aad
xchg
scas
jno
adc
dec
jl
sarb
jle
xor
cwtl
cmp
jno
push
add
dec
gs
cs
mov
mov
outsb
adc
mov
and
out
sub
jmp
mov
fistl
sbb
sub
lea
pusha
cmp
mov
mov
rcll
jecxz
int
mov
cmp
test
mov
sti
mov
xchg
mov
inc
or
and
int3
mov
mov
lret
sbb
add
cmp
std
loopne
or
mov
pop
push
fldl
sbb
pop
inc
enter
mov
dec
mov
pop
or
addr16
mov
sub
push
stc
ret
push
cli
adc
ret
loopne
fisubl
sarb
or
push
inc
add
mov
je
pop
insl
test
je
inc
sbb
xchg
sbb
mov
pop
ror
cmp
ljmp
pusha
mov
call
mov
inc
rcrl
mov
push
ret
lods
inc
and
cmp
ljmp
repnz
xchg
push
sbb
pushf
lods
fnstenv
mov
xchg
xor
push
test
daa
ljmp
pop
ja
lods
dec
fldt
mov
xlat
mov
mov
out
dec
out
mov
and
xor
stos
mov
mov
xchg
test
movsl
cmpsb
cwtl
out
imul
add
and
fadds
stos
mov
mov
jae
jne
adc
and
int3
out
dec
cmc
mov
and
lret
lods
jmp
and
jge
fmul
into
add
or
jg
lcall
jmp
adc
js
mov
or
dec
pop
addr16
xor
push
sahf
and
cmp
icebp
sbb
xchg
mov
xchg
mov
idiv
addr16
loopne
aam
lret
mov
cmpl
push
mov
arpl
iret
xor
push
iret
pushf
aad
ret
mov
cli
loop
test
nop
mov
std
cltd
inc
mov
push
lods
sbb
and
add
icebp
pop
dec
cmp
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
jecxz
repz
or
sbb
insb
mov
orl
lods
jae
inc
mov
and
xor
add
adc
loop
repnz
or
sbb
insb
mov
orl
lods
jae
jmp
fs
and
in
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
lahf
rorl
loope
lds
mov
aas
jno
popa
pop
adc
outsl
xor
lahf
rorl
loope
xchg
iret
cmp
push
cmovno
jno
popa
pop
adc
jg
outsl
and
icebp
mov
xchg
xlat
and
outsl
sub
pusha
add
pop
inc
and
push
cmp
not
loopne
mov
push
iret
inc
ds
inc
cltd
dec
hlt
adc
jno
ss
push
dec
fldenv
fnstenv
loopne
push
cmc
imul
test
ret
jno
pusha
psrlw
jg
nop
frstor
jae
dec
push
jmp
or
and
lock
pop
adc
and
lock
and
out
icebp
xchg
bound
push
or
dec
push
hlt
iret
outsl
add
dec
add
and
pop
negl
adc
inc
ds
fists
xorb
jno
push
outsl
cmp
lock
xchg
and
orb
and
scas
adcb
jg
sbb
sbb
jg
outsl
and
xchg
sarl
filds
push
push
pop
inc
daa
jno
popa
inc
adc
xor
repz
mov
out
rcrl
cmp
dec
maxps
or
nop
out
mov
icebp
fbstp
fidivrs
aas
daa
outsb
or
or
cli
and
xchg
xchg
std
iret
cmp
push
cmovno
jno
popa
pop
adc
jg
outsl
and
icebp
scas
loope
xchg
iret
cmp
push
cmovno
jno
popa
pop
adc
jg
outsl
and
add
xor
out
fistpll
dec
dec
test
sub
daa
movsb
aas
sbb
rolb
loop
stos
cmpl
xchg
ret
xchg
shlb
aam
mov
repnz
stos
push
orl
cmp
or
mull
sub
fisubrs
xchg
aaa
dec
mov
stc
pop
inc
sbb
in
xchg
fwait
mov
mov
dec
std
lea
sahf
es
jmp
clc
lods
shll
je
push
and
daa
inc
aaa
cmp
and
je
xchg
mov
jle
sub
fisubl
pslld
sub
cmpsl
cmp
xor
iret
mov
mov
mov
cmpl
cmp
fs
and
leave
stos
adc
xor
daa
cmp
test
pop
push
movsl
out
push
outsl
je
stos
adc
pusha
aam
loopne
push
les
sub
mov
xor
bound
add
arpl
mov
in
cmp
jnp
mov
jbe
inc
sbb
mov
leave
cmpsb
or
lahf
negl
fldt
dec
fucomip
in
pop
inc
imul
gs
mov
mov
cld
es
adc
inc
rep
test
push
cmp
clc
jno
add
test
hlt
shlb
mov
mov
jnp
aas
pop
cmp
cmp
mov
mov
lret
and
push
ret
jp
pop
jl
cmp
mov
scas
dec
lds
popa
sti
call
add
dec
mov
loopne
xor
gs
mov
rorb
add
cli
or
outsb
inc
cmp
push
inc
push
sub
push
pop
aam
cmp
test
xchg
and
xor
or
jnp
push
hlt
test
sti
mov
xchg
inc
dec
mov
testl
sbb
ret
cwtl
jmp
in
scas
jbe
mov
xchg
inc
or
jbe
sahf
push
fdivrs
sub
lods
fldl
fs
ja
add
sub
scas
incb
pop
push
daa
popf
push
into
xchg
das
aad
jl
es
xor
sub
mov
dec
in
sahf
ret
jnp
adc
mov
sahf
add
jmp
pushf
std
enter
daa
xor
mov
pop
xchg
cmp
add
sahf
pop
mov
scas
and
ret
mov
or
sub
ret
and
lock
fucomip
notl
sahf
fcoms
test
sub
pusha
push
repnz
xchg
inc
mov
stos
adc
sub
int3
mov
pop
shlb
cwtl
add
insb
fadd
test
sti
add
add
out
sbb
or
aas
xchg
add
xchg
andl
scas
movsl
popf
or
scas
pop
out
xor
inc
notb
jge
out
jne
mulb
inc
enter
shll
into
cmc
mov
push
jl
sbb
mov
mov
imul
push
sub
mov
xlat
testl
aad
cmp
inc
mov
sbb
mov
pop
bound
in
mov
xor
cmp
mov
push
adc
das
pop
mov
lds
out
xchg
mov
dec
repnz
test
hlt
jb
shlb
aad
aas
sub
enter
jmp
sbb
pop
and
mov
and
xchg
fstpt
xchg
dec
cmovge
and
add
cmpl
aaa
stc
ds
and
pop
lret
and
ret
jecxz
mov
cmp
lret
lods
cmp
fdivs
gs
outsl
rcr
fmuls
push
or
dec
push
imul
shrl
adc
mov
add
sarl
dec
jo
fiaddl
pop
fimull
or
inc
cvtpi2ps
xor
repz
add
push
push
jnp
aaa
insl
lahf
stc
pop
push
cmpsl
xchg
fsub
dec
mov
test
gs
xchg
outsb
adc
pop
je
adc
xlat
mov
int
inc
mov
cbtw
or
outsl
out
neg
psrlw
adc
in
leave
loopne
cmp
int3
add
stc
cmp
outsl
xchg
mov
lock
test
xchg
mov
icebp
movsl
push
adc
xor
add
mov
mov
orl
loop
jl
jmp
jo
lock
jg
outsb
shr
sub
inc
mov
push
add
pusha
mov
inc
pop
mov
es
outsb
sbb
jle
aas
sbb
outsb
push
std
mov
mov
data16
cmpsl
jae
aas
mov
movsb
data16
sar
inc
jne
and
aad
pop
push
iret
addr16
arpl
and
mov
pop
jge
mov
pop
jne
std
and
test
popl
cld
or
sbb
push
inc
stos
data16
lcall
adc
add
shll
mov
fbld
mov
shll
sahf
loop
adc
inc
cmp
mov
outsl
push
add
nop
popa
xor
jmp
subl
jns
add
sbbl
scas
insl
jnp
pusha
idivb
lock
add
push
jmp
and
xchg
and
orl
dec
sbb
mov
in
cmp
mov
fcmovnb
dec
int
dec
push
mov
mov
and
push
out
sbb
out
xchg
daa
push
xor
jge
adc
mov
adc
push
dec
js
insb
in
clc
and
mov
sbb
stos
ljmp
in
std
xchg
int
aad
lods
xchg
jae
mov
sub
jmp
push
and
cli
cmpsl
or
les
daa
sub
int
idivb
mov
hlt
imull
mov
xchg
fdiv
jb
mov
nop
movb
fsubp
xchg
mov
jge
push
pop
es
mov
mov
leave
arpl
dec
jb
sub
in
adc
aaa
test
push
int
and
arpl
and
idivl
sahf
int
mov
pop
or
call
and
ret
dec
test
les
jae
icebp
inc
stos
push
into
lock
jb
xor
in
jb
fdiv
in
stos
sbb
test
enter
xchg
ret
and
cmp
xor
and
xor
mov
push
cmp
call
push
int
xchg
mov
js
mov
fidivrs
sahf
dec
cli
loope
lods
jecxz
rcll
pop
shlb
xor
jno
pop
push
and
pop
jae
lods
jge
ljmp
jle
inc
and
pusha
sbb
shll
and
imul
sub
and
imul
sub
pusha
lahf
push
arpl
jg
clc
daa
clc
inc
cli
int
cmp
xor
pop
bound
pusha
xchg
adc
jle
pop
jns
sarl
fucomip
popl
dec
add
adc
insb
mov
pop
or
cmc
xchg
movsl
or
seto
daa
in
cld
arpl
insl
xor
cs
mov
add
gs
arpl
pop
movsb
push
addr16
enter
sbb
mov
pop
leave
or
cli
mov
sub
dec
lods
ds
push
xor
jns
push
xchg
mov
pop
imul
jo
jno
sti
sbb
repnz
leave
sahf
fsubl
cmp
in
mov
xor
xchg
mov
jnp
jno
xor
ret
sbb
addr16
les
fldenv
jp
lods
cmpsl
js
cs
movsl
adc
jbe
scas
mov
js
or
mov
dec
sub
pop
sbb
icebp
cmp
mov
jg
sbb
data16
test
iret
lea
jg,pn
jns
mov
push
jb
test
mov
add
fildll
jne
adc
mov
jle
in
cmp
addr16
xorb
insb
mov
push
ss
xchg
mov
out
push
cwtl
xchg
sbb
push
cwtl
adc
or
test
xchg
dec
inc
sbb
in
or
pop
aaa
mov
scas
jl
mov
lahf
xor
pop
xchg
xor
pop
test
popl
pop
adc
ss
add
sub
leave
mov
pop
int
icebp
mov
mov
xor
into
mov
divb
loopne
scas
and
iret
mov
out
push
inc
loope
sbb
imul
inc
cmpsb
jle
aad
int3
hlt
push
sbb
adc
ss
sub
loop
pop
ficompl
ret
ret
lahf
jno
outsl
cmp
ficompl
and
test
cmp
in
daa
inc
jge
test
popf
sbb
hlt
cmc
pushf
test
adc
mov
fcomps
aaa
jg
cmpsl
sahf
movsl
mov
dec
adc
iret
jnp
pop
add
cli
and
adc
mov
clc
addr16
mov
stos
shlb
daa
adc
out
mov
stc
pusha
cli
and
adc
in
aas
push
mov
out
in
jge
mov
pop
bnd
inc
inc
jo
xor
push
adc
int
cmp
push
out
sub
push
lds
cmc
xor
jo
aaa
or
cmp
pop
aam
movsl
fstps
orb
mov
stos
outsb
mov
pop
int3
xchg
sub
cld
jnp
or
xor
and
inc
and
push
outsb
lods
movsl
hlt
xchg
loop
ret
add
sbb
insb
shr
adc
int3
sbbl
popf
mov
fiaddl
fwait
test
mov
insb
mov
mov
xchg
sti
mov
addr16
loope
pop
or
addl
sub
gs
dec
pop
es
roll
into
cmp
cli
int3
iret
ficoml
cmp
cmp
push
fimuls
sbb
cwtl
fimull
mov
or
fs
jne
sub
bound
add
pop
jle
push
push
out
stos
jle
push
xor
ljmp
jp
pusha
xor
cmp
fldcw
icebp
cli
ret
test
fs
mov
mov
pop
mov
push
cs
sbb
gs
movsb
mov
sub
mov
arpl
ss
ja
dec
in
mov
adc
dec
add
lds
in
sub
mov
dec
and
lods
fisubl
add
mov
inc
push
in
mov
jbe
mov
mov
mov
out
int
jge
mov
in
mov
mov
xchg
xchg
or
xchg
shl
aam
gs
xchg
pop
lret
ss
out
push
mov
cli
in
xor
cmp
popfw
fistl
lea
and
fst
in
orl
push
sub
cwtl
xchg
jmp
cmc
inc
ja
in
les
out
mov
jno
mov
lcall
lahf
popf
andl
sahf
mov
in
cmpsl
into
jle
pop
adc
lcall
inc
add
mov
mov
clc
fmuls
out
scas
ja
and
xlat
or
fwait
lds
adc
sub
mov
xchg
mull
or
movsb
push
icebp
cltd
call
insl
je
xchg
data16
loopne
push
pop
dec
mov
lods
out
jl
xchg
inc
stos
push
mov
ja
push
dec
jl
mov
mov
mov
lock
jg
stc
inc
and
push
adc
add
test
int3
xchg
rorb
flds
aas
scas
loopew
fnop
cmc
lcall
mov
mov
inc
popa
and
hlt
daa
test
xor
in
cli
ret
out
out
lods
push
add
mov
js
stos
pop
xor
sbb
add
xor
or
push
add
mov
fwait
loopne
loopne
mov
sbb
sbb
aaa
jns
nop
daa
in
cltd
mov
cmpsl
mov
inc
test
mov
mov
imul
sahf
or
js
mov
jmp
dec
mov
repz
arpl
leave
scas
inc
cld
xor
vpshlb
les
and
push
dec
sbb
sbb
inc
test
xor
ds
xchg
xchg
enter
mov
fistpl
jno
or
pop
add
adc
jecxz
out
je
int
jge
dec
mov
lahf
push
ret
adc
xor
xchg
jno
xor
stos
push
aaa
hlt
daa
and
lods
mov
or
mov
popa
sarb
jge
mov
les
ds
dec
out
xchg
pop
xlat
repnz
sub
mov
lcall
adc
xor
gs
mov
aaa
or
add
pop
stos
stos
andl
std
fsubl
mov
jle
aam
pusha
mov
aam
aas
mov
jmp
sbb
add
cmp
notl
sbb
je
push
inc
xor
imul
mov
lock
sahf
filds
ljmp
mov
adc
sbb
mov
notl
xchg
fdiv
cli
add
lods
cmpsb
lods
adc
sub
xchg
add
or
lods
jle
xchg
cmpl
cmpl
stos
bound
xchg
cmpsl
lret
in
stos
jge
xchg
xchg
adc
and
adcb
mov
fdiv
add
push
jg
jp
sub
stos
movsl
xor
aaa
ja
das
sarl
pop
sti
repz
rclb
sbbb
xchg
int
cld
jge
sbb
cwtl
not
outsl
lods
stc
enter
adc
mov
enter
sbb
loope
dec
cmp
fistl
ja
bound
push
es
mov
data16
fildll
add
add
push
xchg
jae
dec
jmp
push
jmp
sub
sub
jmp
out
dec
xchg
pop
imul
sti
or
shr
jp
adc
faddl
sub
jecxz
push
cmpsb
mov
inc
jns
cmp
pop
jne
notb
mov
fidivrl
cmpsb
shlb
sbb
xchg
push
les
adc
mov
sti
aas
mov
fcoml
cmc
mov
ljmp
push
cld
insb
lods
adc
mov
xor
lods
mov
and
adc
jg
sbb
mov
dec
jnp
mov
ja
xlat
mov
sbb
push
outsl
jecxz
subl
call
in
add
pop
xchg
sbb
ja
loop
fisttpl
or
push
xchg
adc
inc
xchg
cmp
int3
xor
jae
leave
lret
add
mov
int3
and
into
jp
adc
lds
add
es
jb
fcmovnbe
cmpsl
icebp
jg
scas
dec
jl
and
gs
mov
lock
sub
jb
lret
aas
xchg
pushf
add
leave
xchg
sub
dec
fwait
cmp
stos
mov
ss
or
loope
xchg
je
insl
xchg
xchg
cmp
pop
xor
push
jo
lcall
mov
and
test
xor
test
cmp
adc
mov
mov
daa
add
shl
scas
adc
mov
pushf
mov
and
jo
xchg
pop
mov
xor
cs
push
aaa
or
or
js
sahf
mov
adc
sbb
mov
mov
cwtl
ret
popa
cltd
cltd
pop
cmp
ret
xchg
shll
iret
mov
xchg
mov
ja
dec
aam
ds
and
lock
bswap
adc
loope
push
adc
ljmp
sti
add
pushf
aaa
pusha
stos
mov
movsb
imul
data16
inc
fisttpll
sub
vpxor
je
adc
sub
and
pop
popf
add
and
pop
sbb
xchg
xor
aas
pop
xlat
dec
icebp
ja
inc
dec
sub
imull
adc
cmpsb
or
add
adc
dec
rol
std
or
add
push
inc
pop
imul
push
mov
mov
or
inc
clc
cmp
push
pushf
mov
cmp
ljmp
pusha
inc
or
pop
mov
stos
mov
and
dec
mov
pop
add
addr16
cmp
adc
mov
test
loope
sub
push
mov
int3
push
or
lea
fiadds
pop
pop
add
jae
add
push
cmpb
inc
adc
cmpsl
xchg
mov
add
rclb
js
test
jmp
sbb
out
test
dec
ret
mov
pop
add
xor
jmp
push
jne
decl
xchg
orb
xor
sbb
and
scas
loop
dec
out
mulb
flds
xor
sub
or
xchg
xor
mov
loope
out
push
nop
jge
rcr
mov
jg
add
cmp
dec
lds
fstps
pop
sbb
les
jmp
cmp
and
int3
jp
mov
fimuls
xchg
pop
cmp
sarb
stos
cmp
shr
enter
or
sbb
jg
ss
adc
cmp
repnz
in
lcall
out
push
mov
sub
ss
out
xor
outsb
and
in
or
cmc
jmp
inc
in
xor
outsb
sbb
cli
mov
dec
call
mov
nop
or
or
adc
and
pop
test
cmpb
nop
out
adc
mull
jo
arpl
add
xchg
mov
pop
and
inc
es
sub
loopne
pop
or
ja
jg
pop
push
mov
inc
ljmp
xchg
sub
hlt
sub
mov
xor
addr16
ljmp
xchg
mov
out
jno
enterw
data16
xchg
and
add
dec
pushf
int
adc
fcoms
xor
xchg
sbb
shll
mov
inc
mov
mov
cs
mov
int3
sahf
sub
jle
dec
xchg
repnz
pop
adc
mov
lret
pop
add
xlat
xor
dec
inc
mov
jmp
pop
repz
hlt
push
pop
xchg
xlat
ja
inc
into
or
inc
mov
sahf
or
xchg
sbb
aas
or
adc
pusha
lds
xchg
imul
test
sbb
in
push
push
repz
mov
inc
mov
pop
pop
aas
testb
add
insl
sahf
andl
cwtl
cmpsl
pop
int
lret
jnp
dec
inc
jp
push
mov
add
and
jecxz
push
movb
into
add
outsl
lock
imul
dec
stos
mov
pop
or
xchg
or
out
icebp
orl
adc
int3
ret
lock
or
mov
sub
std
or
cmp
push
push
test
lahf
shl
arpl
mov
nop
xchg
sti
push
push
xchg
or
jno
into
push
adc
pop
scas
dec
sub
aas
dec
xorb
stos
pop
adc
pop
aam
in
mov
push
loopne
push
cmp
sbb
or
ror
mov
loop
adcb
pop
cmp
inc
add
lret
xchg
arpl
or
mov
adc
push
jg
aas
xchg
movsl
in
mov
ret
sbb
lods
push
cmpsb
popa
movsb
sub
fistps
xor
mov
cmpsl
icebp
enter
cwtl
push
aaa
and
mov
loope
mov
imul
add
mov
push
imul
icebp
jae
inc
imul
lock
into
add
sbb
sbb
cvttps2pi
dec
adc
stos
scas
cmp
sahf
or
gs
sti
xlat
outsb
inc
fs
mov
jns
fldcw
push
xchg
aaa
or
insl
mov
sbb
mov
adc
movsl
sbb
pop
in
in
fwait
or
aaa
cli
jno
add
adc
mov
mov
dec
push
dec
std
cltd
fildl
data16
out
mov
xor
lds
sbb
push
and
mov
out
pop
mov
negb
addb
xlat
daa
repz
and
adc
jbe
in
xor
lods
clc
aas
cmc
mov
aaa
int3
mov
imul
push
cli
outsb
cs
add
xor
cmp
stos
cld
pop
jbe
pushf
inc
and
cmp
ror
shl
icebp
aaa
std
popf
xchg
je
cmc
mov
aaa
jns
ds
sub
sti
das
mov
stos
fldt
sub
repz
leave
mov
mov
pop
mov
jno
inc
sti
mov
xor
out
rorb
subl
outsl
xorb
sbb
in
sbb
mov
mov
jo
ljmp
and
mov
pop
cmpsl
adc
xchg
dec
inc
mov
and
push
jb
jbe
add
test
stc
push
movsb
dec
push
adc
xchg
dec
lret
mov
int
je
popa
sbb
add
cmp
js
cmp
orl
pushf
int
pop
sbb
push
mov
cmc
ja
icebp
push
scas
jl
inc
jge
imul
push
sbb
cli
or
xor
scas
mov
scas
loope
xchg
iret
cmp
push
cmovno
jno
popa
pop
adc
jg
outsl
and
icebp
scas
loope
xchg
iret
cmp
push
cmovno
jno
popa
pop
adc
jg
outsl
and
icebp
scas
loopne
xchg
iret
cmp
push
cmovo
jno
popa
pop
adc
jg
insl
and
icebp
scas
in
xchg
iret
add
outsl
pop
loopne
lock
jno
push
sub
nop
ficoms
in
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
mov
ret
add
xor
and
int3
arpl
xchg
inc
jno
inc
mov
xor
and
les
ret
add
xor
and
jae
arpl
inc
adcl
mov
adc
repz
lret
add
sub
cmp
imul
pop
mov
inc
movsl
dec
jecxz
adc
push
inc
lea
sub
mov
mov
cmp
cmp
sub
rorl
inc
repz
jl
inc
stc
push
lcall
mov
fcomip
scas
scas
pop
in
ret
test
add
mov
inc
and
pushf
es
ret
inc
ret
cltd
or
roll
adc
push
sbbl
pushf
addr16
sub
aas
pop
xchg
adcb
jns
mov
sub
stos
int3
xchg
ret
ret
jae
mov
pop
push
mov
mov
mov
sbb
jecxz
xor
imul
out
lods
xchg
mov
mov
adcb
rorl
repz
ret
adc
and
cmp
push
jp
mov
imul
aam
repz
xchg
xor
sub
daa
cli
inc
sti
add
or
nop
push
repz
mov
imul
xchg
inc
loope
out
in
jno
pop
out
push
ljmp
jbe
jo
inc
lahf
and
xchg
push
jecxz
jmp
addl
mov
xorl
mov
xor
and
rcll
ret
add
xor
and
jae
arpl
inc
xorl
mov
xor
and
rcll
add
outsb
scas
es
sti
mov
xor
lea
push
scas
scas
test
mov
out
cltd
add
jp
mov
in
push
ret
fcmove
jmp
insb
push
or
cwtl
frstor
xchg
inc
out
clc
cmc
push
rol
and
dec
jmp
jp
idiv
xor
lcall
adc
sbb
cmpsl
mov
sarl
add
mov
bound
push
xor
out
mov
xchg
rcl
and
dec
mov
inc
or
or
jbe
outsb
dec
loopne
jmp
push
or
cli
cs
push
iret
inc
jl
pop
je
cmp
fstpl
inc
mov
test
or
push
lock
daa
in
imul
xor
or
push
clc
and
jno
lods
test
movsl
lock
lds
mov
sti
fwait
adc
cmpb
fwait
jmp
mov
ljmp
cltd
popa
cld
pop
add
push
cmp
bound
popa
loope
lock
clc
or
movsb
mov
lahf
or
lock
divl
xor
mov
adcl
cmp
mov
es
xor
repz
dec
cmp
fcoms
mov
push
mov
cmp
jno
movsl
xchg
push
jg
pop
sbb
adc
mov
fidivrl
sub
cld
icebp
scas
das
loopne
mov
dec
adcl
cltd
add
or
xchg
testb
in
adc
out
sub
push
out
sub
xor
xchg
mov
dec
adc
out
fcoms
frstpm(287
push
repz
sub
in
fsts
inc
and
jb
cmp
loop
pop
sbbb
mov
in
into
inc
or
jmp
jnp
cmp
and
mov
fdivr
negl
jne
mov
push
rclb
mov
mov
in
add
roll
sti
out
push
rolb
or
out
enter
push
xlat
sahf
ljmp
pop
and
stos
inc
jle
jo
inc
enter
gs
outsb
ficomps
sbb
fsubs
jg
xchg
mov
xchg
mov
es
sbb
in
test
imul
mov
ret
clc
add
lea
push
mov
mov
inc
lret
jmp
inc
in
cld
pusha
pop
aas
es
jge
and
fildl
loop
ret
sub
imul
adc
in
sub
cmp
pop
adc
add
adc
add
fiaddl
testl
scas
xchg
scas
jno
lahf
fs
ficomps
xlat
loop
mov
push
pop
in
jmp
push
and
inc
sti
sub
insb
sbb
xchg
jno
jmp
imul
push
mov
add
jnp
jno
in
push
sahf
pop
mov
rolb
xchg
cmp
adc
scas
cmp
push
cmc
into
lock
outsb
scas
pop
and
mov
and
movsb
cwtl
jbe
mov
sbb
add
push
jge
pop
scas
xchg
mov
mov
int3
push
unpcklps
divb
cmp
and
daa
sti
sti
into
add
cld
inc
test
jno
cmc
pop
inc
cld
and
cmpsl
xchg
jecxz
test
movsb
out
or
std
repnz
and
cmpsb
mov
into
ljmp
dec
or
int3
je
data16
jecxz
std
mov
aaa
clts
es
lcall
jmp
cmp
xchg
and
fistps
out
out
inc
or
jae
push
adc
out
inc
test
adc
out
dec
rol
int3
daa
daa
sbb
jne
lock
fstpt
cs
sub
mov
pop
push
adc
dec
cs
into
pushf
jge
std
jnp
clc
lock
cmp
push
xor
ret
jae
fwait
ds
xor
add
mov
repnz
mulb
mov
xor
xor
fs
shl
cmp
pop
cmpsb
int
add
pop
leave
fistl
push
daa
mov
mov
out
popa
add
or
js
xchg
mov
stos
into
inc
subb
adc
je
repz
in
push
cmpsb
mov
fsubr
lock
int
mov
adc
add
popf
pop
mov
dec
in
mov
push
sub
push
mov
icebp
push
dec
pop
mov
pop
jnp
and
test
push
shrb
fisubrs
mov
sbb
or
dec
mov
pop
add
leave
dec
les
and
pop
mov
mov
push
cwtl
cltd
aad
push
mov
es
movsl
sti
in
jecxz
inc
lret
test
pop
inc
orl
gs
outsl
add
mov
pusha
test
fimuls
jg
fisttpll
sbbl
dec
cltd
je
pop
cmp
lock
cmc
dec
sbbb
cmpl
mov
mov
mov
add
mov
jo
pop
or
out
daa
cmp
nop
mov
cmpl
leave
fists
lahf
cmp
shrb
sub
ftst
rclb
das
repnz
push
sub
cmp
cs
out
les
or
repz
or
sub
movsl
adc
jne
xchg
cmpsb
fs
and
divl
pop
and
fidivrl
ja
sub
scas
int
sbb
dec
popf
lahf
lea
test
repz
jg
ret
mov
jo
fptan
dec
jb
dec
fisubrl
pop
mov
fisubl
sub
pop
xlat
and
outsl
int3
pop
sbb
das
aad
in
jae
jnp
cwtl
mov
jge
xchg
add
xchg
stc
jge
cld
in
ficoml
and
mov
push
mov
jns
sbb
sub
fldcw
lea
jecxz
cld
pop
adc
invd
popf
pop
jg
mov
sbb
jbe
xorb
sub
into
mov
js
movsb
mov
xor
cmp
daa
insb
mov
push
dec
mov
shlb
repnz
xchg
in
inc
loope
pop
jle
out
out
add
push
dec
imul
das
mov
ss
es
jl
cmp
testb
stos
or
insl
stos
jg
pop
sub
ss
mov
sar
inc
popa
lock
aas
fs
fimull
pop
es
cmp
mov
pushf
mov
lea
sbb
sbb
fisubrl
lret
pop
fcomip
gs
mov
jae
jl
outsb
test
repz
sub
adc
lret
aaa
popl
adc
mov
ds
or
add
xor
inc
loopne
push
sub
mov
into
out
fldcw
xchg
scas
jo
adc
aas
xchg
aad
out
mov
inc
sub
iret
xor
cmp
comiss
mov
mov
jne
sahf
stc
mov
push
mov
stc
jne
mov
push
call
ret
or
or
mov
mov
push
mov
scas
adc
add
fadds
ret
cmp
pop
int
inc
lahf
mov
xlat
and
and
movsb
sbb
rolb
mov
mov
and
je
cmp
in
and
adc
insl
test
pop
loopne
add
or
subl
mov
nop
test
mov
jo
sarb
in
adc
sub
and
and
jns
jbe
push
filds
je
pop
xchg
jle
adc
sbb
push
aad
mov
insb
xchg
insl
jo
cld
pop
sub
insl
pop
punpckhwd
mov
stos
shlb
jnp
dec
out
jne
out
mov
addr16
fwait
cld
in
lock
mov
insl
shl
mov
cmpsb
fidivs
mov
push
mov
jmp
pop
jle
aas
addr16
push
cmpsl
loopne
mov
add
push
sbb
clc
xchg
pusha
pop
hlt
mov
xchg
mov
add
mov
or
mov
arpl
mov
cli
js
mov
mull
fcomps
pusha
jl
mov
leave
test
lea
pop
out
gs
inc
cmp
bound
cmp
adc
aad
insb
iret
clc
and
mov
repnz
mov
jg
test
or
cmp
mov
inc
movsb
jge
mov
jg
out
mov
int
fbld
xlat
add
xor
push
imul
add
in
lods
mov
out
cli
xlat
shl
sbb
out
jbe
cmp
mov
loopne
xor
jb
test
decb
icebp
mov
rcrb
pop
push
xor
mov
repnz
or
iret
xor
loop
mov
adc
ret
lcall
mov
push
inc
mov
shl
cli
dec
jge
mov
sbb
cs
outsb
sub
lret
or
jne
pop
jo
leave
fsubs
aas
mov
gs
adc
push
lods
sub
mov
popf
jae
scas
xchg
bound
jne
pop
dec
cmp
ret
mov
scas
xor
push
push
inc
xchg
adc
mov
xchg
push
adc
iret
push
insl
push
loope
xor
loopne
pop
icebp
sub
adc
mov
loope
ret
sbb
sar
pop
fstpt
xor
jg
insl
jp,pn
loopne
fs
out
hlt
mov
dec
adc
lret
xchg
jle
aas
xchg
fimuls
mov
insl
je
movsb
les
mov
scas
pop
in
jp
scas
repnz
mov
sub
mov
adc
testb
cltd
cmp
add
imul
fldt
add
or
dec
cmpsb
cmp
pop
xor
add
sbb
lahf
jmp
bound
stos
mov
ret
bound
mov
push
sbb
les
test
cmpsb
xor
xchg
pusha
and
push
rclb
xchg
pushf
mov
add
mov
shll
xchg
cmpsl
sub
loop
dec
ret
enter
mov
and
jge
mov
jnp
cwtl
xchg
push
fisubrs
insb
iret
sbb
ret
bnd
sbb
or
imul
cli
ficomps
jne
sbb
push
push
push
fstpl
loop
or
add
push
adc
inc
leave
lock
xchg
xor
cmp
and
cltd
jg
and
das
cmp
in
sub
cwtl
or
pop
add
add
cmpb
popf
fsubrp
jmp
adc
sub
mov
mov
push
aam
mov
or
movsl
push
testb
loope
inc
rolb
xchg
not
add
or
divl
icebp
je
dec
dec
add
cmp
xlat
xchg
in
xor
jns
cltd
jle
jg
leave
xor
insb
lahf
fisttpll
subl
mov
pop
dec
test
dec
clc
xor
iret
or
sub
sahf
ret
mov
stos
scas
dec
inc
cld
insb
adc
xor
mov
or
bound
std
mov
and
mov
adc
push
cmp
lss
xchg
lock
push
push
aad
lret
roll
and
sbb
jl
and
or
mov
ret
sbb
imul
pop
inc
das
xor
icebp
push
imul
cwtl
cmc
sbb
dec
mov
mov
ljmp
push
mov
push
jb
lock
or
testl
sbb
and
adc
add
push
int3
lcall
jmp
fcoms
inc
sbb
scas
test
out
sti
mov
sbb
adc
popa
push
cmp
imul
jge
out
cmp
std
andb
jb
mov
lahf
in
xchg
repnz
adc
and
mov
lret
and
dec
mov
loope
stos
and
pusha
add
mov
mov
inc
mov
lock
call
xorb
pushf
shlb
and
mov
fisttpl
xor
aaa
mov
xor
out
or
dec
aad
or
jnp
cmp
add
pop
out
shll
mov
in
ret
xor
inc
xchg
insb
xchg
test
inc
sub
loop
pop
xchg
or
sbb
insb
pop
mov
jp
push
inc
push
mov
ljmp
inc
sti
jl
sbb
and
and
push
xchg
lret
stc
mov
or
sub
push
in
jge
pop
mov
cmpsb
popa
push
imul
xor
stos
jns
inc
loope
dec
dec
lret
mov
dec
lods
sub
sbb
inc
xchg
adc
mov
insl
mov
jbe
aad
mov
sbb
cmp
jmp
std
cmpsb
mov
pop
sbbl
out
out
mov
sahf
enter
jae
add
push
xchg
je
inc
sarl
cmp
dec
pop
lret
adc
ljmp
js
loopne
cmp
add
dec
push
or
lcall
push
sarl
xchg
mov
pop
hlt
and
gs
adc
test
pop
aaa
daa
ja
mov
inc
push
xchg
jl
jae
cmc
ret
jnp
mov
enter
mov
cwtl
lods
mov
lods
cmp
jecxz
test
dec
fisubrl
xchg
out
pop
mov
pop
pop
jmp
in
int
pop
ret
data16
xchg
mov
push
sbb
add
mov
xchg
push
sbb
mov
push
loopne
shr
lret
imul
cmpsl
xchg
lcall
and
inc
fs
pop
scas
rorb
dec
sub
inc
adc
add
lds
test
mov
or
dec
ljmp
add
pushf
mov
stos
jecxz
lods
repz
outsb
push
addr16
adc
mov
scas
arpl
sbb
xchg
xlat
ret
inc
mov
movsb
dec
sbb
inc
inc
or
mov
xchg
adc
bound
ljmp
fs
jo
scas
jl
and
mov
push
nop
xlat
xor
jle
shrl
mov
mov
stos
addr16
aas
xchg
inc
syscall
jle
fbld
pop
mov
pop
stc
sldt
mov
mulb
js
push
aad
inc
pop
fmuls
or
rorb
inc
mov
dec
cmpsl
and
jecxz
push
flds
xchg
mov
pusha
mov
fldt
shlb
jecxz
das
cs
add
fdivl
rorl
or
push
daa
or
dec
ja
cmp
xchg
insb
ds
stos
out
and
ljmp
jl
out
mov
je
stos
rcll
int3
sarl
out
push
adc
data16
mov
cmp
gs
xchg
lods
sbb
push
xor
movsl
fsubrs
jb
inc
popl
or
sub
adc
xor
insl
dec
shlb
add
popf
pop
xlat
fidivrs
push
das
mov
bound
out
cmc
sub
xor
fldl
mov
popf
jp
cmc
mov
insb
lods
mov
lahf
cmpb
mov
inc
and
test
sub
je
xlat
mov
mov
pop
popf
or
enter
das
xchg
scas
aaa
mov
sti
insl
dec
loope
cmp
cmpl
movsb
mov
aam
mov
out
and
pop
push
arpl
pop
rcrb
imul
and
rcrl
xchg
into
sub
movsl
cmp
sbb
loope
jp
in
popf
xchg
cmpsl
and
add
xchg
mov
in
mov
negb
sub
xchg
arpl
xchg
push
mov
loop
cmp
aad
mov
sub
push
mov
out
dec
movb
imul
enter
fisubl
stos
or
fwait
movsl
loop
fldl
mov
dec
add
mov
push
or
inc
xor
adc
dec
mov
mov
inc
jl
pop
cs
push
sub
hlt
cltd
xchg
push
ds
and
jne
push
fdecstp
daa
jg
es
mov
movsl
bnd
cmp
cmp
and
mov
mov
mov
fcoms
mov
pop
xchg
imul
push
sub
arpl
cmpsb
ss
shll
sbb
ret
or
jmp
and
int
pop
sbb
mov
push
in
bound
xchg
daa
xor
and
jl
fs
iret
adc
mov
jno
adcl
cltd
notb
lds
les
gs
xchg
addr16
pop
jno
cmp
bound
jae
cmp
and
in
dec
dec
imul
jno
pop
jmp
jecxz
mov
sub
cmp
push
imul
pop
in
sbb
xchg
xor
mov
jp
dec
mov
sbb
dec
repnz
push
stos
mov
push
arpl
nop
cmpsb
subl
addr16
sub
fdivrl
push
lret
xchg
mov
inc
movsl
iret
repz
mov
add
ja
dec
pushf
jl
ds
mov
jmp
sbb
popa
dec
jns
jecxz
sbb
push
push
out
mov
add
pop
mov
shll
mov
fwait
out
outsl
lret
in
and
fnstcw
imull
mov
xchg
or
ds
ss
shrl
cmp
mov
loope
xchg
mov
fbstp
jge
stos
inc
fs
push
iret
dec
pop
scas
imul
scas
and
inc
inc
mov
mov
adc
aaa
pusha
out
mov
dec
test
popf
aam
jge
push
mov
arpl
in
mov
sub
jmp
in
dec
scas
sub
mov
iret
push
mov
add
mov
xchg
xchg
inc
cld
lahf
cmp
add
daa
dec
std
in
iret
pop
xor
popa
or
push
lcall
jecxz
jo
mov
out
rcrb
movsb
jns
fisttpl
jbe
jb
add
imull
cld
push
ret
and
pop
pop
and
lret
les
fwait
lea
or
das
sbb
fs
add
inc
push
out
aaa
inc
mov
push
dec
inc
nop
test
icebp
push
mov
scas
ja
pop
popa
js
mov
adc
movsb
sti
dec
jo
test
and
sub
addr16
pop
mov
fmull
or
dec
jmp
out
fwait
jl
jmp
lods
mov
xlat
test
xor
sahf
xchg
mov
jmp
test
mov
mov
xchg
push
cmpsb
ss
call
outsb
adc
or
pusha
popf
and
or
je
stos
cmc
repz
push
fwait
cmpsb
mov
jnp
cmp
test
out
dec
scas
mov
mov
pop
into
push
adcb
je
dec
dec
test
push
lahf
shlb
jle
lock
pop
jns
iret
push
stos
mov
lea
jl
xlat
sbb
add
add
imul
aad
test
cltd
push
pop
pop
idivl
loop
jns
sbb
add
scas
insb
xor
lods
mov
int
stc
push
mov
jns
adc
idiv
icebp
push
xchg
loope
dec
pop
clc
sbb
xor
cmc
and
jg
mov
rorb
mov
adc
adc
adc
push
popf
or
inc
push
pop
popf
dec
dec
add
stos
iret
mov
scas
jg
pusha
jmp
jge
test
not
sub
dec
dec
xorl
jno
cmp
pop
push
in
cmp
loopne
nop
xchg
mov
lock
pop
imul
pop
hlt
outsl
and
loope
or
xchg
and
test
push
jno
and
stos
pop
pop
cwtl
iret
scas
adc
decl
add
sbb
es
aaa
push
jg
pop
inc
in
inc
mov
push
xchg
and
xor
cmpsb
sub
xor
cmp
lds
jge
adc
idivl
sahf
pop
dec
push
mov
adc
push
popf
pusha
sbb
int
mov
in
loop
mov
ds
cmpsl
inc
mov
mov
repnz
mov
lock
hlt
mov
shlb
nop
push
pop
lret
cld
mov
idiv
in
bound
loopne
out
std
jmp
xlat
mov
jmp
hlt
cmp
jl
fidivrl
sub
ret
add
pop
add
mov
sub
test
adc
xor
in
arpl
in
notb
xor
dec
dec
mov
mov
addr16
mov
fwait
in
push
das
addr16
cmpsl
in
xor
xor
push
push
mov
sub
pop
xchg
pop
movl
mov
adc
pop
push
dec
addr16
and
fdivrs
sbb
out
ss
sub
adc
stos
lds
popf
jle
xor
arpl
adc
cld
out
xchg
xchg
bnd
jmp
icebp
mov
fcmovnb
in
popf
pop
add
push
addl
mov
xorl
mov
xor
and
rcll
ret
add
xor
and
jae
arpl
inc
xorl
mov
xor
and
rcll
ret
add
xor
and
jae
arpl
inc
xorl
mov
xor
adc
out
testl
xchg
push
addl
and
xchg
mov
aam
pop
mov
or
sbb
or
enter
fdivs
std
dec
in
jge
lea
pop
lods
dec
mov
sbb
or
clc
or
enter
test
cwtl
insl
mov
lea
sub
dec
mov
sbb
call
cmp
cwtl
insl
mov
and
mov
dec
mov
lahf
data16
mov
call
insb
clc
mov
jns
adc
cmp
in
aas
jae
push
popf
sub
into
sub
xchg
imul
gs
aad
int
mov
imulb
fiaddl
out
mov
xchg
js
add
insl
and
int3
mov
je
sbb
sahf
scas
loope
cmp
data16
cmpb
icebp
aad
outsb
in
cmpsl
inc
and
adc
jo
in
pushf
loop
test
ret
mov
push
push
sarl
sub
clc
adc
loop
dec
sub
inc
cmp
sbb
popf
sub
add
add
sub
sbb
pusha
cld
cmpsb
or
enter
test
cwtl
insl
mov
lea
pop
lods
dec
mov
sbb
or
inc
lods
push
aam
loope
std
and
sub
cmp
and
pop
lods
inc
scas
pop
out
pop
mov
mov
les
cwtl
sbb
call
pop
scas
jl
push
or
mov
leave
pop
mov
insl
mov
lea
pop
lods
dec
mov
sbb
or
clc
or
enter
test
cwtl
insl
mov
lea
pop
lods
dec
mov
sbb
or
clc
or
in
jp
addl
adc
ret
lret
js
ds
fcomp
fwait
xchg
inc
mov
out
jnp
mov
push
sub
jl
out
sub
rcr
fsubrs
mov
or
in
mov
xor
in
jmp
pop
loope
cmp
aaa
sti
cmc
cmp
sub
mov
sub
in
in
mov
mov
push
dec
push
jb
cmp
cmp
ds
sarb
arpl
imulb
dec
fidivs
outsl
and
loop
jne
and
adc
mov
mov
xchg
sbb
popa
stos
imul
xchg
mov
fldcw
mov
sahf
cmp
xchg
scas
cmp
dec
inc
lea
xchg
sub
les
in
push
orb
bnd
sub
popa
push
sti
lahf
xor
mov
mov
clc
jo
sub
lcall
loop
loop
push
je
addr16
out
cltd
sub
xor
scas
or
fwait
mov
cmc
xchg
cmp
sbb
add
dec
dec
dec
pop
out
aam
lret
inc
out
or
xor
and
sti
js
out
dec
clc
push
je
fwait
out
testl
mov
gs
fidivrl
lret
adc
sbb
push
adc
adc
repnz
sub
aam
std
pop
inc
pop
loopne
dec
lods
cmp
es
xchg
xchg
sbb
jbe
mov
mov
scas
mov
push
add
test
jae
adc
add
dec
mov
fildl
rcrb
jg
pop
sbb
hlt
adc
and
rcrl
adc
mov
sbb
scas
std
jle
addb
test
or
punpckhwd
movsl
mov
pop
rorb
dec
int3
popa
or
sub
dec
int3
cmp
adc
loope
push
xchg
cmp
cli
aad
pop
pop
inc
je
dec
in
call
rorl
aas
pop
dec
jle
push
dec
dec
or
mov
sbb
test
int
pop
scas
ret
lods
mov
push
rcrl
in
add
xchg
lods
jbe
mov
jmp
xchg
push
push
sub
in
adc
pop
jecxz
iret
mov
inc
mov
cmpsl
in
pop
sbb
incb
mov
jl
mov
mov
dec
fistl
inc
mov
jle
inc
data16
inc
sbb
mov
xlat
lds
jge
or
mov
shlb
pusha
lret
cmp
outsl
xor
jmp
sub
mov
sub
or
adc
xlat
adc
dec
icebp
sbb
cli
cmpsb
dec
imul
xchg
fisttpl
js
nop
bound
dec
stos
mov
std
mov
dec
popf
push
ja
or
mov
cltd
pop
mov
rcll
out
popa
push
lahf
in
add
cmpsl
jns
mov
push
mov
pop
cmp
cmp
repnz
adc
lret
sahf
cmp
fisubrs
sbb
mov
and
leave
push
lock
test
mov
xlat
nop
neg
loopne
adc
repnz
add
dec
clc
mov
sub
stos
out
or
dec
lahf
jo
inc
mov
dec
sti
push
mov
data16
dec
in
inc
es
mov
mov
cltd
arpl
in
ljmp
cli
push
push
cmc
mov
and
sar
add
cwtl
gs
cwtl
lds
push
mov
in
movsb
mov
jo
int
mov
xchg
push
xor
stc
adc
push
fldl
mov
lret
mov
xor
and
call
icebp
cltd
inc
dec
sti
js
in
dec
stos
xchg
add
clc
push
outsb
daa
sarb
cmp
dec
sbb
imul
mov
ret
sbbb
inc
xor
pop
imul
push
sbb
lret
sub
imul
or
leave
es
dec
rcrb
xchg
repnz
aad
sbb
mov
repnz
push
push
lods
arpl
inc
mov
lods
adcl
jecxz
nop
sahf
aas
add
mov
cwtl
lret
mov
xchg
and
or
cmc
fldl
xchg
sbb
lcall
mov
stos
ds
pop
dec
shrl
leave
push
xor
in
jmp
leave
fidivrs
jecxz
inc
mov
sub
mov
or
iret
add
test
and
pop
sahf
enter
and
out
jbe
pop
loopne
mov
push
ficomps
mov
cmpsb
push
jle,pt
test
mov
push
mov
mov
and
rorb
lods
cmp
mov
add
xchg
mov
mov
sahf
in
adc
cld
inc
mov
or
cmc
rcr
sahf
push
or
gs
dec
ret
inc
mov
rcll
xor
daa
in
sub
xor
fwait
push
in
jle
mov
rcr
and
stos
cmp
push
cltd
cs
sub
test
xchg
mov
sbb
mov
mov
add
aam
sarl
xlat
add
pop
in
or
jb
sub
addl
cmp
jbe
add
imul
mov
rorb
push
jns
lahf
jnp
sub
pop
push
push
push
adc
or
adc
ja
sbb
xchg
jnp
test
rolb
sarl
int3
fwait
out
jp
movsb
mov
push
inc
cmc
jns
or
or
inc
mov
inc
scas
aad
sbb
push
shlb
decl
aad
add
or
inc
adc
inc
pop
mov
pop
decb
enter
dec
xchg
or
jp
or
ret
sbb
not
add
gs
pop
dec
stos
pop
das
inc
ja
xor
sti
or
imul
imul
inc
mov
inc
aaa
fisttpll
pop
aas
aas
loop
imul
jns
cwtl
fstps
orl
rcrb
iret
xor
call
xchg
test
push
cs
into
xor
add
cmc
mov
sbb
fisttpll
lods
ss
out
push
pop
aaa
mov
adc
adc
dec
dec
lea
xchg
out
int3
cmp
push
xor
push
es
dec
pop
bnd
lret
jge
divl
jnp
xlat
ljmp
inc
in
mov
mov
ja
and
push
aas
and
in
hlt
gs
inc
mov
xchg
aam
sahf
or
add
fwait
pusha
mov
sub
fs
push
stos
jp
cmc
stos
test
jnp
mov
push
add
fidivs
repnz
xchg
add
addr16
nop
scas
shl
jg
mov
push
and
stc
xor
test
cmp
loopne
cmpsb
sbb
mov
mov
dec
stos
and
call
mov
add
inc
stc
rcrb
jo
out
add
jne
mov
sbb
hlt
add
cmp
mov
loop
push
sub
fisubrl
loope
dec
inc
push
jo
mov
sbb
sub
stos
out
data16
and
push
and
sbb
jg
das
jmp
and
test
into
dec
push
or
sti
jae
fbld
jl
out
stc
test
xor
inc
lock
or
in
cmpsl
ja
out
movb
jmp
imul
push
jmp
cmp
test
sub
mov
mov
test
xchg
mov
jl
fcmovbe
enter
add
gs
in
repnz
lret
scas
pop
or
xchg
jns
dec
iret
push
popa
fistpl
pop
ffreep
mov
sbbl
bound
lds
push
mov
jnp
sbb
xor
pusha
push
fucomi
in
cs
pop
pop
imul
scas
inc
add
outsb
add
je
rolb
popa
movsb
aas
nop
add
inc
orl
ljmp
and
rorb
dec
out
adc
jge
dec
xchg
push
or
and
cmpsl
in
xchg
push
jnp
jmp
jno
push
add
out
test
fimull
dec
out
xor
inc
and
cmc
fsub
push
push
dec
test
inc
iret
push
and
inc
loope
jb
adc
out
scas
mov
rcll
shlb
rcll
repnz
lret
dec
idivl
scas
in
inc
mov
and
lret
sub
shl
mov
rclb
and
mov
cli
cld
jae
lods
mov
std
notb
push
xor
outsb
jno
dec
pop
pop
inc
adc
dec
xchg
ret
xchg
jp
pop
out
mulb
push
push
loopne
add
mov
dec
mov
sbb
sub
add
fnsave
sti
jno
pop
jl
pop
sub
add
inc
out
insl
mov
mov
mov
add
iret
lcall
mov
adc
push
mov
pop
mov
xor
lahf
xchg
in
adcb
mov
jno
lret
push
inc
jno
jns
sub
rolb
cmp
rcrl
pushf
xchg
inc
add
insl
call
xor
add
movsb
int
lahf
jl
sub
mov
in
out
inc
adc
fidivl
mov
lock
cmp
or
fwait
or
loopne
xchg
cli
ja
jmp
je
es
shr
inc
ljmp
aad
mov
cmp
and
and
pop
loop
sbb
fs
loope
pop
add
xor
dec
popf
xchg
adc
push
pop
push
pop
adc
ret
pop
cmpb
enter
jbe
jo
das
fcoml
push
xchg
inc
call
mov
clc
sub
inc
loopne
mov
xor
mov
stos
xor
insb
repz
imul
imul
sahf
sbb
pcmpeqw
out
pushf
aam
sahf
jg
sub
cmc
andl
push
addb
pop
ss
mov
ret
cltd
out
mov
add
lahf
mov
pop
mov
je
sarl
push
jnp
jp
stc
leave
jbe
jae
fstpt
leave
mov
mov
cmp
jb
push
pop
packuswb
sub
dec
jp
pop
mov
and
cmp
mov
xlat
std
pop
jp
jge
iret
pushf
sub
imul
jnp
xchg
jb
add
mov
enter
in
daa
or
mov
dec
pusha
daa
jns
sbbl
stc
pushf
aam
xchg
jg
mov
dec
movsl
adc
in
dec
inc
out
movsb
cmp
jg
lcall
ds
scas
cmp
inc
shrl
ljmp
in
jp
not
jae
jle
test
jl
inc
mov
out
inc
je
dec
imul
push
mov
xor
mov
out
xchg
out
mov
mov
pop
scas
div
out
dec
in
or
push
into
and
and
sbb
in
jns
mov
sbb
mov
sbb
sub
dec
int3
jns
push
int3
cmp
mov
sbb
xor
rcl
out
ljmp
pop
ret
aam
mov
push
sbb
flds
test
xor
cmpsl
into
sbb
ds
push
pop
pushf
jecxz
bound
cmp
mov
jge
jne
dec
xor
jmp
lods
les
mov
xchg
pop
or
movsb
cwtl
adc
xor
andl
outsl
push
je
shll
mov
out
cbtw
inc
sbb
cld
or
jne
cltd
jns
lahf
push
dec
popa
and
and
dec
sub
xor
movb
sub
xor
mov
rcl
out
sub
inc
mov
xchg
xor
jb
es
pop
jecxz
mov
add
fwait
pop
shlb
lock
mov
sbb
test
mov
rcl
xchg
stos
in
xchg
inc
xchg
or
cltd
ret
push
inc
mov
lahf
and
in
mov
std
xchg
dec
testl
sar
std
hlt
push
enter
fnstenv
rcll
sub
rcrl
daa
aam
aaa
mov
repnz
add
cmc
jp
stos
pushf
int3
mov
in
jnp
lahf
rcl
sbb
dec
pop
xor
add
and
enter
inc
xlat
icebp
pop
sahf
push
sub
lods
mov
mov
xchg
lahf
or
push
and
nop
das
cli
nop
imul
cmc
rorl
scas
mov
mov
cmp
arpl
sub
cmp
repz
cmp
fdivrl
shll
shlb
out
sahf
rcrl
loope
int
jle
shl
dec
cli
clc
and
mov
xchg
pop
je
jle
xchg
sbb
add
xchg
pop
xor
mov
xor
les
lcall
pop
push
xchg
add
pop
clc
add
aam
decb
inc
adc
das
add
and
lea
in
cmp
cmp
movsb
sarl
mov
repz
xor
jbe
loope
adc
mov
adc
rcll
add
sbb
mov
cmp
scas
icebp
cmpsl
es
adc
cltd
adc
mov
xchg
xor
xchg
pushf
or
outsl
sbb
push
pop
dec
fcmovb
scas
stos
lods
push
xor
push
loopne
xor
dec
pusha
cmp
inc
js
jle
mov
lret
xchg
mov
mov
bnd
dec
mov
mov
imulb
dec
xor
shll
push
adc
and
add
aad
lahf
jge
bound
push
cli
stc
push
ret
js
ret
fldenv
pop
cld
jo
pop
lret
jp
lcall
inc
aam
nop
pop
push
sbb
repz
cli
and
idiv
call
cli
lods
and
lds
aas
les
jmp
rcrb
adc
push
pop
adc
ds
scas
lahf
scas
das
inc
enter
lods
repnz
sub
inc
sub
fs
cltd
test
shlb
cmp
icebp
cmp
adc
add
fsubl
and
pop
pop
fdiv
lods
lahf
loop
push
pop
in
cli
inc
push
mov
push
jns
stos
loopne
popf
or
adc
mov
in
inc
out
pop
movsb
outsb
je
vpunpckhbw
outsl
add
popl
sub
lods
ss
inc
jno
and
or
push
js
push
xchg
add
lret
sub
xor
ja
scas
gs
xchg
and
mov
into
xor
cmpsl
adc
xor
cmp
jo
push
in
ja
jbe
fs
jle
xorb
enter
fs
pop
fidivs
or
lahf
mov
imul
pop
adc
jp
shll
dec
inc
pop
push
mov
xor
add
daa
popa
push
inc
test
paddb
push
ja
orl
aas
fcomps
mov
popf
dec
add
inc
add
adc
hlt
lcall
mov
subb
addr16
sub
dec
cmpsb
inc
iret
fwait
stos
hlt
aad
cmpb
cmp
lret
mov
sbbl
mov
inc
adc
jmp
mov
in
jno
leave
test
orl
dec
add
stc
daa
cltd
iret
stos
cltd
mov
ret
push
or
test
push
aad
xchg
cld
sub
cmp
jns
out
mov
mov
outsb
movsb
das
mov
inc
mov
dec
push
stos
and
test
repnz
cmp
or
lea
movsl
lret
negl
add
movsb
cwtl
dec
cmovne
or
pop
scas
dec
and
popa
push
sub
mov
or
jo
inc
pusha
cmp
sbb
outsl
mov
cmp
mov
adc
or
dec
dec
repnz
inc
dec
mov
aad
mov
dec
test
push
call
test
mov
enter
pop
mov
mov
jl
adc
mov
and
and
fiadds
or
stc
cmp
sub
mov
decb
mov
lret
jno
mov
mov
hlt
mov
xor
subl
jmp
sub
sbb
icebp
dec
and
ds
add
lahf
adc
xchg
inc
pop
or
or
sbb
pop
popf
ja
sahf
xchg
sbb
jg
shr
in
dec
dec
sbb
mov
and
mov
jns
in
jo
and
mov
jne
std
sbb
dec
mov
ds
jno
inc
aad
lret
pop
push
fs
jns
sbb
gs
jb
leave
xor
sub
jg
scas
lcall
xchg
cld
iret
hlt
push
dec
cmc
add
bound
cmp
loope
adc
out
test
xchg
dec
cmc
fwait
jmp
clc
and
rorl
test
push
mov
and
push
mov
repnz
push
sub
mov
mov
insb
inc
sbb
mov
ja
js
lods
xchg
or
clc
xchg
pushf
jno
sub
iret
jmp
mov
cmpsb
inc
rclb
mov
fs
jecxz
data16
pop
aad
adc
aaa
dec
sahf
in
je
pextrw
adc
ret
xchg
movsl
and
dec
sub
mov
adc
push
leave
push
lds
lods
lcall
or
or
cmpl
cmp
nop
div
fimuls
dec
dec
imul
and
xchg
fisttpl
adc
lods
les
fdivs
ljmp
pusha
mulb
pop
inc
outsl
inc
adc
sti
sub
cmp
mov
lods
push
xchg
cmpsb
fs
test
fistpll
lds
out
outsl
hlt
jbe
inc
sub
cmpsl
pop
call
dec
dec
mov
pop
xchg
out
xchg
inc
std
push
scas
aad
or
data16
mov
insb
sbbl
sbb
xchg
ja
pop
aas
stos
pop
dec
cmp
sbb
cmpsb
js
push
inc
popa
pusha
stos
mov
mul
cld
aad
cltd
sub
shll
sub
and
scas
lods
dec
addb
xchg
fldl
shlb
mov
jp
or
shrb
pop
insl
sub
push
jo
aaa
testl
cmpsl
push
push
pop
and
ss
iret
jp
pop
cmp
push
loope
sub
mov
push
mov
test
std
lahf
mov
ss
jge
in
jo
fs
pop
xor
test
inc
adc
cmpsb
pop
scas
push
lods
orb
setae
stos
jns
subb
push
stc
shrb
and
add
mov
mov
xchg
mov
stos
xchg
lock
jo
sub
popf
mov
mulb
jecxz
or
pop
cmpsl
jb
call
add
dec
or
dec
pop
xchg
push
iret
rcr
test
xchg
adc
subb
xchg
push
cmp
ret
dec
adc
das
add
lret
inc
loop
in
rcll
mov
js
adcl
cmp
lret
xchg
xor
cmp
mov
lcall
loopne
push
xor
cmp
jne
out
dec
fildl
fistps
outsb
sub
in
mov
popf
mov
scas
scas
mov
roll
jno
cmp
fwait
adc
rcr
fs
js
fs
lcall
frstor
mov
and
sub
adc
sub
push
sbb
push
inc
leave
or
mov
mov
push
xchg
imul
inc
or
push
jae
lea
scas
jmp
das
inc
xchg
jnp
fisttps
xor
mov
into
sub
pop
fildl
pop
lahf
pop
pusha
and
or
pop
sbb
mov
push
xor
and
push
jnp
or
sahf
cltd
dec
movswl
adc
adc
bound
sub
mov
in
push
dec
stos
jle
pop
push
jecxz
mov
mov
cmpsb
ficomps
xor
xchg
hlt
frstor
jo
arpl
adc
lret
mov
outsb
xor
cmp
stc
adc
add
pop
aam
sub
inc
and
es
xchg
sahf
fiadds
and
shll
imul
jbe
test
and
mov
ror
in
cmp
bound
fistps
fmull
outsb
ja,pn
lods
dec
movsb
xchg
push
sub
clc
push
daa
inc
hlt
test
mov
add
lods
push
mov
cmpsl
fcmovnbe
fadds
push
enter
or
dec
arpl
mov
and
fs
cs
lcall
inc
daa
pop
mov
mov
mov
add
cs
lods
loop
rolb
hlt
mov
jnp
push
imulb
or
jnp
nop
adc
xchg
dec
idivb
mov
jb
lock
sub
filds
arpl
scas
mov
aas
negl
mov
mov
pushf
mov
mov
cltd
gs
jno
xchg
xorb
jle
les
stc
aam
sti
jno
or
ss
adc
cmpsl
adc
dec
cmp
pop
fildl
aaa
jae
insb
lock
inc
xor
pop
dec
data16
mov
or
mov
insl
mov
lea
pop
lods
dec
mov
sbb
or
clc
or
enter
test
cwtl
insl
mov
lea
pop
lods
dec
mov
sbb
or
clc
or
enter
test
cwtl
insl
mov
or
dec
mov
sbb
or
clc
or
enter
test
cwtl
insl
mov
lea
repnz
dec
lret
mov
add
jo
inc
cmpsl
push
mov
out
mov
sbb
sbb
pop
shlb
mov
addr16
ja
xchg
inc
cmpsl
push
mov
xor
add
adc
loopne
lock
shrb
aaa
mov
addr16
ja
and
inc
cmp
xor
loopne
shll
inc
mov
mov
adc
adc
inc
hlt
cmp
das
enter
fs
sub
fsubrl
cwtl
xlat
cmp
test
dec
and
xor
clc
or
jmp
fsubrs
notl
or
in
sarl
out
sbb
sub
sbb
sub
cs
lods
pop
push
in
shlb
push
leave
mov
mov
mov
xchg
andl
out
daa
adc
cmpb
fsubrs
ss
mov
js
sbb
xor
push
pop
lods
dec
fcomip
adc
cld
es
or
and
inc
dec
pop
lock
nop
cli
pop
js
push
or
add
cmpsl
push
mov
xor
mov
adc
xchg
sbb
inc
rcll
and
xor
add
adc
pop
lock
mov
jg
inc
add
lret
push
fildl
pop
mov
nop
inc
xchg
addr16
xchg
push
es
cmp
adc
push
push
roll
aam
fildl
jnp
inc
mov
xchg
xchg
bound
or
push
jmp
hlt
jo
push
lret
xor
xlat
add
adc
loopne
lock
shlb
aaa
mov
addr16
ja
xchg
inc
cmpsl
push
mov
xor
add
adc
loopne
lock
shlb
aaa
mov
addr16
ja
xchg
rcr
das
pop
lock
and
mov
mov
mov
ds
inc
dec
out
xor
inc
out
loope
add
pushf
add
hlt
xchg
inc
add
faddl
aam
mov
push
lahf
out
xchg
and
or
sub
ljmp
out
adc
xchg
add
fldt
outsb
jecxz
scas
ret
xor
mov
add
addb
mov
mov
pop
sbb
sbb
out
xor
shll
popa
mov
lret
in
in
or
mov
pop
xor
jo
insb
and
xor
lods
cwtl
in
xor
cmc
cmp
pop
icebp
adc
pop
mov
fstpt
lock
nop
arpl
popa
pusha
mov
loopne
lcall
push
jmp
lret
shlb
sbb
mov
aas
mov
xchg
jb
popf
mov
push
sahf
push
xor
fcmovu
and
out
inc
jmp
jo
sub
or
xchg
inc
sti
adcb
cs
xor
push
sub
mov
aaa
leave
push
arpl
lock
pop
imulb
or
mov
int
mov
lret
lret
call
js
in
mov
xor
add
jge
xor
add
aaa
sub
jns
xor
add
xchg
jmp
mov
and
push
push
and
daa
sbbb
cmp
xlat
mov
pop
std
cli
pop
pusha
jmp
mov
hlt
pushf
push
or
or
mov
orl
loopne
jbe
adc
dec
sahf
adc
ljmp
ljmp
fwait
dec
outsl
sub
cld
test
ret
xor
jp
int3
in
pop
jle
sub
push
andl
jbe
aam
outsb
ficoms
and
or
into
call
mov
mov
imul
push
std
clc
jmp
ret
pop
sbb
imul
out
or
xor
mov
cltd
push
or
outsl
into
shl
movsl
sub
in
jne
scas
or
cmp
ds
push
mov
testb
loop
cltd
pop
mov
repnz
mov
das
dec
mov
cmp
mov
sbb
lods
push
jnp
aaa
cmpsb
adc
and
add
movsb
cmp
mov
mov
lods
jmp
mov
push
jp
out
mov
ja
mov
sbb
idiv
or
movsl
andb
mov
fiadds
inc
jle
xor
roll
adc
jbe
cmp
jb
push
ss
mov
js
push
xchg
inc
mov
repz
mov
cli
imul
push
push
inc
mov
lea
jns
prefetcht2
xor
pop
adc
adc
lcall
and
xchg
cmpsb
jae
fsubl
sub
orb
xor
pop
lret
or
xlat
push
dec
test
fwait
xor
sub
fld
jge
jo
notl
mov
fs
mov
and
xor
xchg
movsb
jp
or
xchg
lds
repz
inc
popf
scas
punpcklwd
cwtl
inc
les
movsb
add
loopne
inc
jp
pop
je
cld
repnz
mov
or
das
push
xor
xlat
mov
daa
stos
lods
jne
cmp
mov
adc
or
lock
bound
sbb
in
mov
sbb
cmp
adc
jno
xor
dec
add
jmp
lcall
aas
enter
adc
push
xor
mov
icebp
outsl
sub
hlt
sti
mov
cmpsl
mov
mov
add
lcall
pushw
daa
inc
adc
adc
adc
dec
push
cwtl
mov
adc
xlat
das
inc
dec
ds
aas
sub
iret
repz
in
dec
push
xchg
add
fadds
push
lea
adc
loop
or
dec
rolb
mov
mov
mov
bound
loope
cmc
movsl
or
push
in
or
out
add
bound
lret
push
ret
or
dec
xchg
loop
insb
dec
movl
jmp
adc
repz
enter
ja
cmc
add
loope
lock
push
fbld
in
xchg
js,pn
testb
jbe
loop
and
mov
mov
fmuls
stc
stos
lret
test
int
into
sub
xor
pop
imul
les
mov
xchg
xlat
sbb
mov
xchg
mov
add
jp
xchg
xchg
or
mov
sbb
outsl
xor
inc
mov
inc
lea
in
cld
push
lock
add
arpl
xchg
push
in
test
test
push
cld
inc
loopne
push
aad
xchg
add
repnz
or
push
or
dec
hlt
push
pop
mov
push
pop
or
sub
jnp
mov
inc
xor
xor
sub
adc
imulb
jnp
jno
or
push
les
js
sbb
cld
and
mov
aam
lcall
stc
out
jl
mov
jle
repz
pop
sbb
sbb
jbe
and
lret
popl
mov
add
jle
jg
push
jno
cltd
add
adc
mov
pop
les
in
stc
ja
mov
mov
pop
scas
incb
xor
arpl
lcall
addb
add
pop
pop
and
xchg
fisubrl
jne
insl
mov
mov
fcmovnbe
enter
imul
in
or
frndint
dec
mov
mov
loop
imul
sti
mov
pusha
cs
test
inc
jno
and
out
mov
mov
pop
mov
inc
call
pop
fwait
mov
dec
movsl
mov
loop
std
test
scas
xchg
xchg
push
sbb
xor
or
mov
lock
popa
hlt
jno
jp
mov
mov
pop
adc
stos
cmp
repz
inc
test
ja
mov
out
stos
call
pop
adc
xchg
push
aam
repz
xor
mov
ss
leave
cmp
cmpsb
rcrl
dec
orl
xchg
add
mov
adc
sbb
clc
int
xor
and
data16
mov
in
pop
dec
and
icebp
iret
mov
pop
push
mov
not
push
cs
js
sub
and
inc
push
adc
jno
and
js
push
adc
call
add
test
test
into
mov
movsb
xchg
sub
cmc
adc
ds
icebp
mov
push
add
out
xor
pop
mov
outsl
cmp
add
push
pop
cmp
aad
das
mov
adc
sub
divb
sahf
jnp
ret
nop
mov
lcall
fadd
xchg
sbb
popa
ljmp
jno
fimull
ljmp
jl
je
pusha
sbb
test
test
jle
rcrb
dec
sbb
fwait
test
loopne
dec
inc
ljmp
adcl
shlb
mov
mov
movsb
addr16
push
fsubrs
add
cmp
loope
xchg
enter
and
xor
cmp
adc
xor
lods
adc
push
pop
or
cmp
out
and
mov
ja
in
xchg
xlat
pop
lods
into
dec
mul
outsl
push
mov
lds
push
fnsave
nop
inc
invlpg
and
mov
fwait
cmpsl
xor
xor
dec
mov
les
les
pop
mov
push
xchg
xor
mov
hlt
cwtl
push
mov
lahf
mov
outsl
ficomps
sbb
pop
mov
dec
pop
cmp
dec
and
push
int
mov
push
scas
xlat
push
fstl
inc
out
inc
dec
jns
enter
imul
out
lahf
pop
lret
aaa
lds
or
jbe
or
xor
mov
lret
lret
int
sub
xchg
push
je
aas
jns,pn
ret
into
fdivl
sbbl
gs
xchg
ret
imul
jno
orl
sahf
cli
sti
sub
pop
mov
cmc
fwait
push
and
xchg
sub
addb
mov
mov
jns
js
dec
int3
lcall
lods
fwait
nop
out
rep
add
add
sub
sti
and
lcall
out
xchg
sub
mov
test
mov
lcall
and
sarb
js
outsl
aad
not
loopne
mov
in
push
or
push
push
xchg
xchg
ret
or
pop
mov
cmp
push
pop
std
stos
scas
data16
sbb
sbb
fists
aaa
cmp
lods
pop
mov
xchg
or
lcall
out
adc
das
inc
int3
fistl
dec
inc
daa
jbe
sbb
out
pusha
rep
sbb
jecxz
andl
stos
orl
xchg
sarb
dec
sub
lods
incl
jno
push
aam
int
jb,pt
add
cwtl
pop
shlb
jns
pop
inc
aad
in
cmpb
int
popa
enter
push
lds
fs
jae
adc
out
and
lea
add
shl
adcl
mov
sbb
hlt
out
popa
pushf
orl
pop
xor
hlt
fwait
jb
loop
fnstsw
lods
pop
jle
test
sub
push
mov
and
rcrb
in
shlb
dec
shrl
mov
jo
jge
lds
leave
mov
dec
sbb
cmpsb
movsb
sbb
sbb
clc
in
outsl
push
jns
and
dec
repz
pop
scas
cs
std
pop
mov
or
jbe
test
sarl
jne
ret
mov
mov
push
aas
jno
in
inc
lret
jns
pop
mov
adc
inc
mov
mov
divl
pushf
fcmovnbe
mov
fmulp
repz
movsb
pop
aaa
or
ja
lret
subb
test
sbbb
and
dec
pushf
ja
pop
or
std
lret
das
lea
scas
jl
lret
and
ficompl
jecxz
pop
and
push
negl
negl
sub
sbb
add
mov
xchg
cltd
mov
push
jecxz
arpl
and
movsl
andb
sbb
sbb
out
push
jbe
hlt
shll
in
fs
mov
scas
fistps
insb
lret
and
aaa
inc
dec
xor
jnp
movsb
jnp
pop
mov
ficoml
cli
cmc
aam
cmp
loop
sub
dec
jns
adc
xchg
adc
sbb
jo
fs
and
fstps
test
xchg
fistpll
insl
push
push
repnz
xchg
inc
mov
mov
or
iret
loopne
and
cmpsl
jmp
leave
jne
jnp
aad
fildll
lea
or
movsl
mov
les
sbb
xchg
inc
shll
inc
fwait
or
mov
xchg
mov
mov
jo
insl
cmp
cmp
lock
or
loop
mov
and
mov
notl
cwtl
out
add
push
ja
push
xchg
jb
jecxz
fsubl
pop
fcoml
aas
icebp
lds
stos
cs
fwait
lock
mov
lret
sub
aaa
int
inc
sarb
incb
sarb
les
shl
jge
aam
mov
je
and
xchg
adc
sbb
sahf
xchg
daa
cs
xor
xchg
push
dec
cmp
jb
rorl
mov
jns
mov
sub
das
push
stos
divb
ss
stos
xor
cmp
es
mov
adc
pop
jp
shl
in
ret
and
mov
xor
test
push
imull
in
xor
or
je
add
sbb
dec
rcl
jne
mov
and
sub
xchg
stc
lret
push
or
int3
jbe
jo
rorl
kmovw
mov
mov
hlt
jle
test
test
ret
stos
mov
push
xchg
xor
nop
cltd
adcb
fdivp
in
popa
add
jl
cld
mov
adc
push
insb
cmc
insl
ds
mull
aas
jae
push
les
arpl
mov
and
cmc
daa
cld
stos
and
mov
je
dec
popa
adc
cwtl
dec
jae
int
mov
stos
pop
shrl
into
in
dec
adc
cmp
pushf
sbb
sbb
mov
insb
stos
xorb
outsl
lods
cld
xchg
push
out
mov
sbb
movsb
pop
cmpsb
bound
test
pop
sbbb
jbe
lret
lahf
push
cltd
fnstsw
mov
inc
push
adc
and
scas
ret
jl
cmp
repz
add
dec
rcrl
test
and
pop
adc
mov
jns
sbb
fildl
lcall
cmp
fbld
sub
push
inc
cmp
cmp
insb
lods
pop
int3
jo
adc
mov
dec
test
ret
insb
in
cmp
pop
push
pop
pop
and
loopne
adc
push
and
jle
jnp
mov
stos
xor
and
xchg
push
add
xor
adc
test
pop
ds
testb
shll
mov
xchg
push
mov
mov
push
xchg
cmp
push
sbbl
mov
inc
aad
dec
pushf
lret
inc
mov
cmp
fcoml
adc
jbe
push
ret
sbb
or
movl
cmpsb
cli
mov
jg
gs
dec
fildl
cmp
int3
push
adc
aad
adcb
in
aad
pop
or
cmpsb
sbb
sub
hlt
lods
ret
pusha
outsb
fstpl
inc
mov
xchg
lds
imul
and
xchg
xor
stos
insl
std
or
inc
mov
iret
jo
xchg
pusha
xor
xor
cwtl
xchg
int3
mov
cli
pop
cmp
mov
fstp
js
push
dec
int
scas
cs
ret
lret
jmp
dec
xchg
test
add
xor
sub
dec
movsb
lret
add
dec
sub
sbb
fstpt
adc
jge
pop
add
cmpsb
cmp
xchg
cmpsb
and
inc
pusha
or
pop
xchg
into
pop
pusha
and
ret
push
dec
and
push
dec
xor
adc
insl
subb
adc
cs
mov
xor
insl
mov
imul
xor
icebp
test
sbb
push
jns
insb
fisttpll
inc
hlt
pop
sbb
push
pushf
insl
mov
add
ret
adcb
je
mov
adc
leave
sub
mov
adc
in
adc
imulb
add
jge
pop
movsl
and
mov
imul
lret
arpl
fldt
jo
push
mov
ss
icebp
dec
inc
jno
sub
fidivrs
dec
push
cmp
and
sbb
outsb
mov
sbb
push
cmp
and
dec
dec
add
xchg
push
mov
in
outsb
pop
je
in
imul
sbb
jge
pop
je
into
push
jno
das
push
lds
into
test
cmpsb
fdivr
inc
push
lods
and
aaa
gs
mov
pop
mov
mov
cmp
das
imul
out
outsb
mov
stos
ret
xor
out
mov
pop
adc
mov
addr16
idivb
jg
and
xchg
inc
mov
loopne
ss
das
das
dec
and
add
lods
sub
jg
jb
jbe
and
add
push
jl
ficomps
cwtl
xchg
dec
push
jle
cmc
nop
mov
fwait
lea
mov
dec
je
pop
stos
lret
pushw
xchg
and
adc
sub
or
cmp
lret
dec
mov
fnstenv
pop
push
pop
mov
cmp
push
cmp
movsb
mov
aaa
icebp
add
icebp
sbb
sub
xchg
pop
pop
sbb
rorl
addb
jecxz
jmp
pop
sbbb
lods
jns
pop
fnstcw
rolb
pop
mov
mov
das
inc
pop
aad
jg
addr16
stc
inc
jp
test
adc
test
jbe
pop
pop
aad
loope
pop
orb
fldt
std
adc
pop
fnstenv
pop
and
shrl
insl
mov
mov
xor
and
xlat
push
repnz
lea
ds
mov
adc
sbb
hlt
inc
mov
shrb
or
push
scas
sti
or
stos
aas
jl
mov
dec
lds
xchg
xchg
sub
imul
xorl
imul
das
test
dec
cmp
and
push
lock
out
sti
inc
sbb
rorb
bound
andl
and
sbb
mov
push
repz
and
jecxz
jle
and
rcrl
jno
or
mov
movsl
mov
xor
lods
adc
repz
in
xor
mov
and
mov
jmp
test
out
jl
mov
jg
stos
jns
das
push
inc
adc
inc
push
dec
aam
xchg
sub
nop
or
sti
stos
or
jmp
push
push
dec
pop
mov
fsubl
push
dec
int3
ret
pop
jno
cwtl
insb
ljmp
stos
cmpsl
scas
subb
jnp
sub
sbb
pop
dec
sbb
jbe
jmp
ljmp
pop
xor
les
inc
push
iret
mov
sub
push
add
mov
ret
out
inc
push
sub
shlb
icebp
leave
sahf
and
sbb
sahf
mov
pushf
mov
cmp
inc
std
leave
ljmp
sti
mov
insl
pop
inc
add
sub
add
stos
mov
mov
outsb
loope
xor
outsb
push
xchg
das
add
push
dec
pop
arpl
add
lahf
mov
repz
xor
push
push
dec
cs
std
popf
cmp
imul
sbb
lahf
mov
inc
jno
mov
adc
imul
dec
cmp
popf
add
add
test
push
fisttpll
in
cmp
push
cltd
test
adc
fisubrs
stc
sahf
sub
cmp
xchg
push
mov
dec
fists
add
scas
pop
adc
xor
scas
inc
nop
add
cli
mov
and
inc
lret
call
in
dec
pusha
xchg
popa
mov
mov
push
cwtl
push
gs
mov
arpl
lds
lret
repnz
out
enter
arpl
fwait
push
lret
mov
enter
aam
std
pop
mov
jnp
push
es
push
dec
cmp
bound
xlat
dec
xor
imull
sub
loopne
insl
fstpt
shlb
mov
andb
pop
pop
push
fwait
movsl
cwtl
test
add
popa
mov
cmpsl
jbe
test
cmp
mov
out
jmp
cld
in
or
addb
in
mov
push
xlat
inc
fnstenv
sbb
aaa
fnstsw
lds
notb
xor
js
xor
pusha
or
pop
adc
inc
add
idivl
cmp
xor
je
lock
inc
pusha
mov
adc
nop
fists
mov
lahf
in
movsl
pushf
movsl
mov
outsl
add
xchg
ljmp
mov
or
mov
sbb
in
jmp
add
iret
inc
cmp
leave
dec
adc
aad
cmp
adcb
mov
add
adc
xchg
sub
dec
lret
arpl
adc
pop
push
clc
cltd
lret
scas
adc
inc
adc
lock
push
or
xor
and
fldl
dec
and
mov
xchg
lret
out
fnstenv
sbb
out
or
pop
xor
std
in
pop
lods
data16
xchg
inc
mov
inc
sub
dec
jnp
pushf
jecxz
cs
mov
mov
pop
lcall
mov
loopne
lods
mov
in
and
pop
test
roll
xchg
fbld
jle
dec
mov
stc
pop
push
sbbb
sbb
mov
inc
mov
fcomip
mov
hlt
sbb
push
cli
mov
stc
push
test
and
push
xor
cmp
negl
mov
push
loopne
outsb
out
sbb
xchg
int3
loope
mov
imul
xchg
pop
jmp
imul
ss
es
test
sbb
loopne
mov
cmpl
dec
xorl
jae
shlb
push
in
ret
clc
add
mov
push
dec
and
mov
scas
jmp
jnp
and
call
dec
jle
cmpsl
xchg
push
hlt
xor
adc
or
das
and
mov
mov
movb
jns
sbb
cltd
sbb
fdivrs
out
sub
or
sbbl
sahf
fimull
scas
bound
sub
test
and
mov
pop
sub
cmpl
or
add
pop
negb
test
aas
mov
ljmp
int
and
stos
clc
dec
movsb
call
cmp
xchg
jg
push
mov
xor
add
adc
loopne
lock
shlb
aaa
mov
addr16
ja
xchg
inc
cmpsl
push
mov
xor
add
adc
loopne
lock
shlb
aaa
mov
addr16
ja
xorl
mov
xor
push
lock
daa
sarl
mov
outsb
nop
xchg
pusha
arpl
inc
inc
push
mull
xor
andb
pop
clc
bsr
rolb
aas
cmp
js
push
negb
cmp
pop
fstpt
and
fcoml
inc
mov
push
pushf
push
sbb
insb
divb
dec
cmp
sub
sbb
or
cld
push
jbe
inc
int3
push
cld
push
lods
xor
push
mov
lcall
into
and
or
cwtl
iretw
push
mov
test
inc
enter
adc
and
ja
gs
jns
mov
inc
push
stc
fisubrs
nop
out
jl
iret
leave
xchg
lods
inc
xchg
jns
imul
push
xor
pushf
divb
cmpb
sub
pop
mov
sub
aas
lret
stos
data16
jbe
sub
test
push
push
mov
mov
cmp
cmpsb
jecxz
or
std
xchg
mov
xor
inc
sbb
andl
jl
shll
xchg
mov
mov
mov
lods
es
adcb
ds
ret
sub
adc
xchg
iret
push
call
test
pushf
add
adc
icebp
cmp
pop
fisttps
cmpsb
push
mov
xchg
outsb
stos
pop
cld
dec
hlt
cmpsb
cs
sbb
pop
adc
mov
inc
xlat
push
or
xor
inc
ret
imul
lahf
cs
mov
jmp
adc
push
lds
ss
popa
int
adc
add
cmp
xchg
sub
sbb
or
cld
data16
jbe
inc
int3
push
mov
push
mov
jl
insb
negb
cmp
sub
sbb
or
cld
data16
jbe
inc
int3
push
mov
push
mov
jl
lret
inc
mov
repz
scas
mov
pop
out
and
dec
cmc
inc
dec
sub
xchg
pop
aaa
hlt
adc
out
shrb
mov
movsl
add
push
enter
push
pushf
pop
pop
push
adc
movl
jge
fsub
movsb
aaa
in
test
mulb
cmp
push
aad
pop
sti
jne
fisubrs
mov
cmp
pop
mov
push
xchg
repz
pop
mov
mov
cmp
mov
out
pop
loop
loopne
mov
mov
sbbl
test
jnp
test
jb
cmp
cmp
sub
aad
pop
leave
add
gs
jle
fildll
add
or
das
aam
lock
sub
orb
lret
mov
sub
mov
int
cmp
ret
out
inc
sub
hlt
cld
mov
sbb
in
cmp
test
imul
xchg
xchg
sbb
das
push
aam
bound
je
sbb
cli
gs
mov
xor
call
jmp
mov
jae
sub
add
cmp
pop
add
pop
es
mov
mov
sub
int
xchg
test
shlb
sarl
add
cli
das
cld
inc
push
inc
cld
loope
pop
push
mov
shrl
mov
ret
dec
gs
out
sbb
test
sarb
loopne
mov
cs
call
bound
call
or
test
inc
push
mov
push
imul
mov
adc
mov
jecxz
shr
les
mov
test
push
mov
into
cmp
pushf
scas
push
mov
test
dec
notl
pushf
pop
cli
in
and
ss
rcrb
imul
jbe
xor
dec
xor
inc
lahf
punpckhdq
push
mov
ret
and
fldcw
out
push
sub
jae
out
or
por
ds
or
loope
mov
popa
scas
lea
inc
xor
in
outsl
push
sti
push
ss
add
stos
pop
and
sbb
mov
jmp
push
scas
mov
lods
pop
loop
out
cmp
inc
mov
jne
lods
adc
adc
jmp
cmpsl
cmpsl
fimuls
or
mov
pop
scas
add
xlat
dec
jp
out
mov
or
daa
popf
ss
iret
rorl
xor
lods
pavgw
shrb
stc
add
cli
dec
sub
call
add
jno
movsl
movsl
jmp
xchg
fstpl
pop
cltd
and
sub
and
jecxz
mov
push
addl
cmp
hlt
mov
pop
ljmp
mov
jge
aad
andl
popa
stos
mov
in
lods
xchg
or
ss
jg
pop
xor
stos
cmp
xor
push
repz
jb
rcll
jecxz
jb
mov
fnstsw
pop
lds
mov
insb
movsb
scas
jns
mov
ja
mov
hlt
mov
cmp
imul
dec
xor
mov
cmpsb
stos
fwait
jl
lds
sahf
push
jnp
mov
sbb
mov
in
test
out
push
lcall
fists
iret
sti
jae
test
add
mov
cmpsl
xor
xchg
xor
sbb
mov
dec
jo
adc
sub
pop
stos
xor
js
gs
clc
test
sbb
outsb
aaa
mov
or
fmull
shll
mov
aas
rcll
aas
cltd
loop
in
add
aas
out
call
pop
or
inc
sbb
inc
out
pop
pop
lahf
lahf
or
xor
inc
and
ja
mov
sbb
push
js
dec
lods
push
or
push
jb
stos
push
mov
mov
jle
xchg
cmp
stos
aam
cld
xor
push
clc
mov
mov
pop
mov
mov
in
mov
mov
stos
push
lret
scas
adc
push
lock
xor
adc
push
adc
popf
int3
cmp
mov
aam
and
xor
adc
mov
frstor
and
cmp
jl
or
dec
sub
push
dec
rorb
popa
ds
cmp
into
sbb
insb
ds
repz
jns
mov
icebp
mov
jo
xor
gs
repnz
lret
mov
sti
jp
loope
or
jbe
daa
call
enter
jae
repz
out
pop
test
sbb
rcrl
out
xchg
notb
dec
xchg
xor
shll
push
sbb
int3
ss
mov
movsb
inc
cmp
inc
clc
push
xlat
xchg
lods
mov
shrl
add
and
scas
push
dec
mov
aad
cld
xchg
jge
jg
aaa
pop
push
lods
inc
aaa
sbbl
popf
sub
and
mov
lahf
pusha
sbb
adc
adc
mov
pop
aaa
push
jg
dec
mov
lcall
aad
inc
sub
cmpb
pop
mov
push
adc
dec
and
adc
pop
ss
fbld
push
xchg
pop
jl
or
adcb
sub
hlt
sbb
les
ss
in
dec
cli
fld
mov
dec
sbb
push
insl
pop
add
add
and
test
js
shl
ss
mov
xchg
gs
lea
xchg
fistpll
mov
jnp
sbb
cltd
fistpl
iret
in
and
sbb
out
mov
mov
fbld
sub
add
adc
fisttpl
clc
ljmp
lods
jae
out
pop
adcl
lods
mov
stos
js
jo
loop
xor
or
xchg
jne
xor
mov
lcall
fs
sbb
fstpl
ljmp
cmc
sbb
imul
movsl
push
sbb
pop
lahf
lds
mov
xchg
or
fucomp
dec
arpl
cld
popa
pop
addb
mov
popf
js
push
rcll
push
jne
icebp
cld
ja
insb
xchg
ja
mov
lcall
pushf
mov
psrlw
ret
or
test
and
pop
stos
sub
sub
xor
pop
mov
das
inc
pop
add
mov
mov
fcmovbe
xchg
or
es
jns
ss
cli
jno
fdivrl
repz
jl
ret
adc
xchg
out
loop
sub
mov
leave
sbb
dec
sahf
and
je
loop
mov
addl
adc
mov
cwtl
jecxz
adc
xor
xchg
sub
nop
and
cmp
jmp
mov
inc
fucomi
clc
jo
jmpw
xchg
popf
pop
in
pop
push
xlat
mov
in
test
popa
test
and
stc
xor
jp
dec
add
ret
pusha
pop
push
mov
hlt
cltd
scas
mov
jno
or
and
cmp
inc
scas
movsl
cs
mov
jl
pop
iret
notl
pushf
or
loope
sub
xchg
xchg
and
xchg
cld
mov
xorb
xchg
xchg
pop
mov
je
outsb
addr16
adc
jge
push
xchg
ljmp
and
int3
lock
test
push
sbb
leave
cmp
std
pop
cmc
or
pop
push
inc
gs
dec
cmp
sbb
fwait
jmp
ljmp
mov
jns
es
adc
mov
jmp
xchg
mov
xor
outsb
pop
ja
xor
jae
scas
mov
push
mov
push
repz
xchg
or
or
and
test
fcom
in
cli
sbb
cmp
subb
stos
dec
inc
shll
mov
scas
add
lret
dec
or
cwtl
imul
cmp
mov
adc
cwtl
pop
pop
shlb
adc
fcmovnbe
or
test
push
jbe
xor
sub
movb
adc
jg
pop
lds
inc
jmp
jmp
add
mov
sbb
icebp
adc
jl
jnp
jle
ljmp
scas
popa
les
scas
pop
push
in
xor
das
sub
rolb
xor
sbb
inc
sbb
dec
sbb
inc
shr
rorl
clc
mov
cmp
call
cmc
mov
out
cmp
leave
outsb
dec
mov
xor
sbb
xor
in
pop
imul
shlb
mov
jb
shrb
pop
ss
inc
in
std
cmp
mov
call
and
out
adc
lret
popl
sub
sub
pop
bound
xor
lods
arpl
es
jnp
jne
iret
push
arpl
pop
mov
jg
pop
jl
pop
mov
dec
aas
sbb
mov
pop
dec
cli
in
and
insl
cli
aad
add
xor
mov
inc
push
fistpl
unpcklps
lock
push
iret
pop
loop
pop
leave
mov
sbb
mov
mov
sti
pop
sub
dec
add
or
adc
pop
jae
xchg
xor
dec
xchg
nop
mov
jp
cs
adc
sti
add
xchg
mov
jae
xchg
out
inc
shll
cmp
xor
jle
jp
leave
aas
adc
push
xlat
xor
subl
test
mov
sub
dec
fs
lds
pop
es
hlt
mov
rorb
push
vmread
sbbl
xchg
mov
incl
ret
addr16
jmp
push
push
scas
dec
pop
pop
mov
ja
jmp
imul
div
les
jnp
movsl
inc
fs
fstps
inc
mov
xor
mov
insl
and
mov
and
int3
pushf
std
enter
inc
sub
push
rcr
outsb
out
repz
pop
dec
dec
jl
or
pop
adc
std
inc
js
and
mov
jle
fidivs
inc
int3
mov
pop
leave
sahf
cli
jb
lock
ret
iret
sub
add
aaa
stos
adc
ret
dec
jmp
cli
mov
push
jp
xor
sahf
fcoms
mov
sahf
or
maxps
mov
dec
xor
cld
inc
cmc
fistl
pop
ds
mov
push
insl
and
cltd
loopne
test
rcrl
shr
pop
repz
adc
sub
sub
stos
push
mov
push
repz
xchg
xchg
push
sbb
add
mov
lds
jne
int
mov
and
mov
rep
scas
mov
loope
loope
add
add
nop
adc
cmp
bound
cmpsb
dec
idivb
call
je
mov
ja
xor
sbb
pop
insl
push
push
adc
cmpsb
sub
ljmp
xchg
fsts
mov
fmul
mov
leave
je
jns
inc
dec
in
int3
dec
inc
push
movswl
int
fdivrl
shrl
push
mov
mov
enter
cmp
add
les
fstpt
hlt
cmp
add
lret
fiaddl
push
aas
xchg
adc
popf
push
mov
dec
fsubs
icebp
loop
pop
das
sub
push
je
xchg
xor
push
sub
leave
jno
inc
sbb
sub
fdiv
jle
mov
sbb
and
int
outsl
and
mov
es
mov
push
mov
mov
mov
gs
lods
mov
fistpl
clc
lds
pop
aaa
sub
pop
lods
mov
or
shr
incb
cmc
add
mov
cli
mov
outsb
ficompl
icebp
enter
rorl
stos
in
arpl
mov
fsubrs
insb
cmc
or
jbe
loop
cwtl
rorb
pop
dec
xchg
cmp
rcrb
jae
inc
jp
shrb
test
dec
repz
testl
xor
je
jge
or
stc
or
mov
fstpl
lods
mov
cmp
jle
and
cltd
shrl
push
and
xchg
nop
outsb
xchg
mov
lea
mov
mov
lcall
ror
pop
pop
out
icebp
leave
jl
dec
in
arpl
add
add
xor
stc
mov
xor
pop
sbb
xchg
mov
mov
and
gs
stos
lock
jl
fadd
addr16
or
jne
cmpsl
loope
inc
je
hlt
pop
cwtl
sbb
add
bound
popa
and
jl
in
add
movsb
cltd
in
incl
aas
mov
imul
repz
shl
mov
and
xor
gs
jb
mov
cmp
icebp
sub
stc
adc
adc
inc
inc
sbb
pop
fcoml
mov
pop
inc
push
or
rcrb
dec
fnsave
mov
jno
les
inc
cs
shrl
dec
dec
addb
jp
mov
inc
mov
repnz
xchg
add
lea
das
xor
pop
adc
jl
push
xor
mov
push
xchg
jb
dec
add
add
inc
jg
push
xor
imul
cmpsl
in
mov
mov
inc
and
pop
inc
fadd
addr16
push
mov
xchg
mov
add
shlb
pop
inc
xchg
pop
out
pop
jecxz
or
in
sub
leave
mulb
andb
aam
xor
jp
or
lea
dec
push
cmp
movsl
sub
ja
stc
sbb
add
insl
ret
push
jmp
and
and
pushf
test
paddq
popf
aam
mov
rol
push
hlt
outsl
pop
les
int3
into
cmpb
std
mov
pop
xor
pop
add
lret
dec
stos
clc
inc
mov
pop
adc
test
inc
daa
or
cmpsb
cwtl
outsb
and
cltd
negl
repz
xchg
xor
add
outsl
fimuls
add
je
jle
outsl
push
jl
inc
pop
rolb
mov
arpl
aaa
imul
adc
cld
mov
sub
iret
push
int
dec
scas
jns
out
or
mov
lds
lock
sbb
insb
cmpsl
push
js
jne
cmp
cli
adc
ss
jge
hlt
out
mov
and
add
push
jmp
cmpsb
mov
dec
pop
mov
push
inc
das
mov
mov
pop
jecxz
lcall
pop
das
cmpl
repz
das
les
insb
inc
mov
cmc
or
mov
into
inc
in
fwait
jo
ljmp
and
mov
imul
xlat
popf
fcmovnbe
adc
xchg
or
stos
mov
js
stc
mov
lret
cmc
jmp
mov
and
jmp
and
insl
je
ret
sbbb
call
inc
mov
sbb
mov
or
or
inc
js
decl
inc
dec
shlb
sahf
push
enter
xchg
lods
jne
jge
mov
jo
rcl
inc
sahf
cmpsb
mov
xchg
jae
jl
cmp
or
enter
add
lahf
sahf
sqrtps
enter
pop
sarl
inc
mov
adc
sub
imul
test
sub
aad
movsl
pop
mov
aaa
sarl
clc
lret
clc
or
xchg
cmc
aas
pcmpeqb
aaa
insb
mov
ficompl
sbb
lock
movsl
ficoms
filds
mov
or
outsl
mov
outsl
fwait
cmpsl
mov
mov
sbb
push
mov
cmpsb
inc
jno
imul
fdivs
lods
das
test
fists
out
into
jno
mov
ret
fs
lret
int
xchg
orb
repz
fsubs
icebp
neg
xchg
sbb
data16
lcall
push
pop
inc
mov
push
das
fistps
cmpsb
sbb
xchg
push
std
pop
daa
fidivl
xor
add
sbb
or
push
stos
sub
data16
sub
ja
repz
out
mov
ds
pop
sahf
add
mov
xchg
dec
or
and
cmp
pop
or
push
frstor
push
cwtl
aam
and
cwtl
xlat
mov
lds
ds
jecxz
mov
cs
sub
int
pop
insb
jmp
sbb
lret
jo
cli
pop
cmp
mov
jno
adc
in
test
lock
shlb
mov
ret
cmp
sbb
leave
or
adc
mov
sahf
inc
lods
mov
lcall
in
call
pusha
sbb
repz
dec
pop
sub
pop
sub
push
mov
fwait
inc
lahf
sbb
mov
das
add
fildll
push
sbb
inc
mov
lret
or
das
and
adcb
mov
mov
lret
fisubrs
outsb
int3
aas
hlt
hlt
in
mov
pusha
call
fidivl
roll
dec
sti
test
add
bswap
movsl
jecxz
lods
orl
push
xor
divb
repnz
sbb
orb
pushf
mov
add
mov
imul
mul
xor
lock
cwtl
sub
xor
adc
sbbb
jecxz
sahf
mov
push
insl
pop
sbb
pusha
pop
insb
lods
adc
dec
push
lods
sub
mov
dec
pushf
data16
mull
cmpsl
add
stos
push
test
xchg
push
movsb
xor
aas
and
fwait
dec
imul
mov
out
mov
movsb
iret
lock
sub
mov
pop
mov
int3
test
adc
lret
inc
or
or
imul
push
adc
lahf
push
or
adc
mov
mov
xchg
insl
cmp
cmp
jb
cmpsl
pop
andb
pop
xor
dec
btc
fsubrs
cmc
in
cmp
and
push
faddl
mov
add
incl
dec
xchg
mov
push
mov
push
cmp
sbb
cli
push
into
repnz
adc
enter
mov
mov
jge
lods
pop
int3
sarl
cld
cmp
cwtl
fidivrs
inc
pop
mov
mov
xor
movsl
jns
xor
dec
shlb
mov
dec
aaa
mov
rcrl
dec
jmp
imul
rcll
add
pminsw
cmpsb
iret
push
es
pop
pop
inc
jecxz
mov
out
ja
push
pop
les
dec
imul
xchg
push
repz
mov
fnstsw
cmc
pop
insb
adc
sbb
push
push
or
loope
pop
adc
icebp
test
test
scas
jmp
pusha
adc
adc
push
divl
mov
xor
icebp
push
mov
sub
cmpsl
sub
pop
jmp
fidivl
cmp
aas
sbbl
pop
sbb
fsub
in
mov
cmp
mov
inc
inc
sbb
mov
push
adc
mov
bound
adc
stos
mov
inc
sarl
es
adcb
mov
mov
mov
lea
adc
cwtl
ret
cmp
mov
inc
out
rcrb
jecxz
pop
add
ret
push
fs
mov
aas
and
mov
insl
cltd
push
js
mov
scas
xor
sub
adc
inc
jbe
stc
pop
sahf
in
xor
ss
test
pop
iret
aam
and
fldl
and
pop
sbb
cmp
dec
jle
and
ja
mov
in
add
push
dec
sbb
addr16
adc
mov
jae
js
outsl
call
cmp
fstpl
lret
xchg
jbe
fwait
sub
push
sub
and
popa
mov
cmp
push
xor
add
cs
mov
insb
jle
cmpsl
mov
xor
lret
lods
pop
icebp
pop
cmp
pop
stos
fcompl
push
lahf
or
loope
aaa
test
and
leave
aas
mov
lds
pusha
lcall
scas
jae
dec
xorb
or
push
sti
push
cmpb
int
adc
mov
lock
add
xchg
mov
or
mov
mov
pop
xor
push
dec
bnd
mov
fnstcw
mov
loope
fisubs
sbb
xor
and
ss
pusha
cwtl
stos
in
sahf
andl
aam
sarl
mov
and
push
dec
bound
mov
lret
cs
jb
mov
jne
mov
xor
add
inc
mov
push
outsl
pop
mov
repz
popf
sub
fisttps
dec
rcl
push
mov
enter
imul
cmp
iret
ret
cltd
lock
mov
sbb
jle
ficoms
dec
ds
repnz
ljmp
inc
lods
pcmpeqb
jp
jp
je
push
jne
fbstp
xor
push
test
add
fs
sbb
dec
clc
sbb
das
pop
mov
negb
dec
cmp
sub
sbb
or
cld
data16
jbe
inc
int3
push
mov
push
mov
jl
insb
negb
cmp
sub
sbb
or
cld
data16
jbe
inc
int3
push
mov
push
mov
jl
pop
idivb
dec
lods
cmpsb
sub
sbb
int3
xchg
cld
data16
jbe
inc
int3
push
mov
add
loop
repnz
ret
cmp
cmp
sbb
mov
adc
jbe
int3
and
scas
and
arpl
imul
add
add
ljmp
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
dec
pop
lods
mov
test
xchg
adc
xchg
xor
add
adc
fs
in
cmc
push
or
test
js
les
aad
xchg
adc
add
adc
or
push
fbstp
xchg
mov
sub
xchg
push
fcomps
int3
test
stc
push
ret
pop
aam
in
mov
inc
movsb
xor
ror
adc
fdivs
mov
xchg
mov
cwtl
nop
stc
mov
das
inc
movsl
sbb
in
or
icebp
xchg
add
push
add
gs
mov
inc
js
push
movsl
add
mov
adc
pop
lds
dec
cltd
cmp
push
test
movsb
pop
xchg
pusha
sub
in
pushf
fs
ja
nop
fcmovnb
fs
dec
call
lock
or
xorb
adc
int3
cmp
and
ret
mov
ss
aad
mov
subb
xchg
nop
scas
enter
loopne
mov
jge
insl
pop
movsb
sti
mov
inc
gs
mov
movsb
adc
sahf
inc
in
hlt
gs
int
ja
pop
bnd
stos
pop
movsl
dec
lret
mov
inc
xchg
cmp
arpl
nop
and
in
aam
cmc
jo
jge
or
xor
in
mov
mov
or
aam
shlb
mov
mov
nop
and
es
aam
testl
les
test
adc
fs
in
cmc
push
add
test
hlt
les
test
adc
fs
in
cmc
push
add
daa
push
or
xlat
add
in
pop
andb
push
push
inc
fs
inc
cli
repz
jecxz
adc
xor
xchg
lods
xor
or
adc
add
ss
mov
test
mov
jnp
add
out
xchg
rclb
ljmp
xor
xchg
add
fistpl
mov
add
adc
inc
lret
aaa
or
das
lods
push
or
push
into
xor
mov
adcl
test
or
mov
lret
push
out
mov
xchg
inc
imul
imul
pop
test
adc
movsb
in
lahf
inc
inc
jecxz
push
pusha
jg
sbb
repz
sub
push
mov
scas
sti
mov
loope
or
pop
inc
push
es
xorl
loope
ss
adc
sbb
rolb
mov
in
std
outsb
xchg
lret
push
stos
xor
aad
call
xchg
hlt
jb
push
imul
push
bound
mov
adc
lea
sbb
sahf
xchg
mov
mov
xor
testl
xor
iret
and
jno
xor
jge
xor
cs
cwtl
or
arpl
outsb
xchg
push
push
cwtl
pusha
test
sbb
sub
pop
es
xor
aas
xlat
test
jno
cmc
xchg
sbb
sub
cwtl
push
in
outsl
adc
loop
xor
lcall
data16
fisttpl
sbb
int3
mov
mov
lock
fisttpll
mov
pop
adc
mov
stos
div
std
add
gs
and
enter
frstor
pop
mov
xchg
xchg
mov
scas
cmp
jge
sbb
lock
jns
mov
mov
or
sbb
mov
fadds
aam
testb
loop
add
push
divl
push
sbb
sbb
jp
xchg
jp
add
and
pop
add
or
mov
jecxz
pop
sub
stos
js
sbbb
shl
push
in
xchg
and
cmp
jnp
jno
ja
xchg
cli
and
fs
push
pop
add
fwait
mov
sbb
xor
inc
and
and
sbb
jg
xor
test
and
jmp
xor
js
cmp
cmp
mov
stos
inc
push
xchg
push
and
push
mov
and
out
cltd
ja
lea
jmp
mov
icebp
inc
add
push
cs
cmpsb
in
xlat
sbb
aas
outsb
movsl
xor
std
inc
and
mov
sbb
mov
jae
out
mov
dec
xchg
arpl
lret
icebp
outsb
fmul
mov
xor
jns
dec
sbb
push
testl
xchg
in
lds
arpl
add
jmp
sub
jmp
sbb
and
inc
mov
sub
xor
cmpsb
arpl
sbb
enter
inc
fdivl
cmpsb
sti
or
add
sahf
movsb
pop
imul
or
in
xor
lods
xor
lahf
sbb
out
in
aad
push
mov
faddl
mov
hlt
mov
cmp
movsb
cmp
mov
mov
sub
jmp
or
lret
sub
pop
xor
add
jmp
jle
mov
arpl
pop
mov
mov
dec
sub
cmp
sahf
cltd
test
ja
sub
shl
mov
lea
sbb
insb
jl
icebp
mov
test
fwait
mov
idivl
jno
divl
repz
repnz
jbe
xchg
js
add
and
out
repnz
pop
mov
or
xchg
or
mov
mov
ror
insl
pop
loopne
push
dec
pop
shrl
pop
mov
ja
scas
daa
xchg
add
hlt
sahf
arpl
push
fidivrs
rolb
push
pusha
rclb
loopne
or
pop
or
aaa
jge
icebp
data16
js
dec
mov
lock
and
xchg
xor
in
push
xchg
or
and
dec
jb
sbb
out
mov
sbb
push
xchg
idiv
nop
out
adc
xchg
pusha
rorb
push
pop
sbb
inc
mov
je
hlt
aad
sbb
das
mov
test
ret
mov
subl
jmp
cmpsb
int3
pop
pop
sahf
jns
lea
loope
lcall
xor
sbb
jl
dec
test
movsb
push
lcall
int
cmp
jge
mov
or
stc
stos
or
and
scas
mov
icebp
cs
push
mov
adc
mov
sub
jmp
outsl
jp
into
int3
inc
ljmp
dec
sbbb
fistps
bound
xor
push
pavgw
sbb
pop
or
mov
xchg
jl
loope
movsl
movl
xlat
add
into
xlat
and
xchg
mov
push
add
pop
sarb
iret
movsl
sbb
sub
sbb
pop
jo
scas
sbb
ds
push
cmp
ds
or
xor
pushf
out
add
insb
insl
push
addr16
loop
add
mov
or
hlt
cmp
add
sbb
mov
adc
fisubrl
mov
push
pop
bound
push
push
aaa
out
and
pushf
xor
out
jg
push
imul
push
push
pop
insl
cmp
dec
orb
in
ss
test
cmc
push
inc
mov
data16
scas
mov
jg
add
sub
lahf
and
push
adc
repnz
ss
lcall
out
mov
arpl
or
adc
mov
leave
sbb
inc
jns
loopne
imul
dec
dec
inc
cmp
jmp
mov
loop
sub
pop
push
push
mov
hlt
scas
test
add
test
mov
mov
mov
adc
rorb
mov
inc
leave
inc
mov
mov
cmp
testb
mov
pop
stc
xor
pop
mov
sub
push
arpl
sbb
mov
mov
pop
mov
shrl
scas
fiaddl
dec
cmc
sub
inc
bound
inc
mov
aad
push
test
inc
inc
ljmp
lret
mov
sub
pushl
pop
es
in
xchg
mov
push
xchg
mov
or
loopne
inc
mov
fiaddl
outsb
xor
cli
and
push
xchg
repz
inc
inc
xchg
div
aam
loope
arpl
jecxz
and
mov
add
inc
sbb
aam
mov
xchg
or
pop
lcall
cmp
add
jmp
mov
movsl
ret
aad
es
lods
cmp
xchg
jmp
sarl
add
je
lcall
mov
mov
out
testb
inc
mov
cmp
pop
imul
mov
push
lock
scas
push
cmp
push
loope
imul
dec
les
imul
outsl
rorl
xor
xchg
and
outsb
cmp
mov
cmp
into
xor
and
push
repz
xor
xlat
and
dec
xchg
lods
outsb
test
mov
cli
jecxz
push
test
shlb
pop
pop
jno
jge
push
ret
call
les
std
push
sub
nop
pop
jmp
xchg
ret
stc
or
or
lea
call
push
adc
mov
sub
and
mov
adc
push
cld
xchg
mov
out
shrb
adc
scas
push
xchg
pop
jle
outsl
dec
push
or
xchg
test
or
jmp
test
push
adc
inc
loopne
mov
mov
jns
mov
sub
andl
outsb
xor
in
loopne
inc
and
xchg
add
inc
enter
in
sub
push
divb
and
daa
lods
shll
mov
adc
outsb
add
sbb
arpl
pop
cmc
mov
fcom
adc
push
scas
stos
mov
adc
jmp
repnz
lcall
mov
inc
push
or
push
popa
xor
call
cmp
dec
lret
shll
loopnew
mov
popa
subl
cmp
test
push
stos
pop
fimuls
mov
outsl
nop
lret
and
lret
out
inc
sahf
pop
cli
fs
mov
inc
mov
leave
icebp
pusha
jecxz
in
rcrl
jo
push
and
mov
std
pusha
or
daa
arpl
add
ret
lret
cli
sbb
push
push
cs
cld
cmp
adc
jb
pop
pop
jnp
mov
mov
xor
jg
cmc
cwtl
fs
jae
clc
xor
pop
iret
or
cmp
fsubl
pop
shr
push
std
dec
sbb
mov
pusha
adc
sbb
cltd
ss
adc
shrl
data16
gs
shrb
aas
jbe
inc
inc
shr
icebp
cltd
push
xor
pop
in
inc
jmp
jp
jns
rclb
jmp
xor
sub
push
icebp
add
fs
adc
cli
out
neg
addr16
in
jp
in
jo
lods
mov
scas
adc
push
push
or
push
icebp
push
sbb
cmpsl
sbb
add
sbb
lds
lock
mov
leave
cmp
pop
mov
sahf
cmp
jmp
test
or
xchg
xor
xchg
or
lcall
sbb
push
cmp
loop
push
mov
xlat
add
xlat
push
pop
xor
mov
sbbl
addr16
cmp
scas
in
and
sub
arpl
push
loopne
cmp
jae
xchg
out
sub
into
inc
add
out
jmp
mov
shl
sub
and
outsl
xor
into
call
pop
repz
jl
cmp
xchg
clc
cmp
out
and
stos
ljmp
andb
mull
fcmovnbe
mov
xor
sbb
pop
sbb
jbe
pop
adc
or
inc
inc
or
pop
or
sub
xorl
pushf
sub
mov
hlt
shl
xchg
jbe
ss
pop
gs
sarl
add
ja
jae
scas
icebp
lds
push
jo
filds
add
xor
and
mov
stos
push
jbe
inc
je
pop
nop
push
lea
dec
pop
test
inc
and
loopne
outsl
xor
add
or
push
push
inc
bound
or
jne
push
xchg
mov
pop
or
ret
fwait
pop
mov
add
dec
repnz
and
mov
daa
sub
sub
fldt
fwait
dec
xor
iret
xchg
lret
xchg
fadds
mov
stos
in
stos
push
sarl
dec
push
push
sub
call
dec
jp
ljmp
int
int3
and
pusha
mov
sub
int
inc
in
sub
pop
adc
mov
or
pop
push
lods
popa
mov
ds
inc
sub
lds
push
cmp
out
test
out
jno
dec
fwait
dec
es
scas
xchg
ret
subl
lret
push
notb
fmuls
fadd
ror
ret
scas
add
add
xlat
in
cmpsb
cld
in
jmp
lret
enter
cli
in
pushf
xor
imul
and
xchg
add
loop
xchg
outsb
cmpsl
cltd
mov
fcmovne
int
fcomps
jae
cli
jmp
pusha
lcall
rcrb
lock
leave
pop
jle
jns
lods
push
mov
sub
imul
sbb
in
test
lret
ss
aam
lods
clc
jl
push
int
or
xlat
rol
repz
in
fisttpl
mov
pusha
pop
imul
ljmp
mov
call
sub
add
mov
mov
lods
fcmovne
mov
loopne
pop
out
cwtl
push
fistpll
pop
js
lcall
int
test
mov
push
or
mov
std
jno
nop
daa
mov
xchg
adc
int3
nop
dec
cmp
dec
xor
insl
xor
sbb
xor
lds
mov
lret
pop
pop
fisttpll
inc
ja
dec
lods
outsl
inc
jg
sub
loope
or
int
mov
dec
mulb
into
adc
xor
adc
pop
mov
pop
stc
pop
dec
sbb
incl
loop
pusha
lods
fcompl
sub
mov
in
sub
shlb
aad
sbbb
sub
sbbb
dec
jne
push
cmpsb
loop
pop
mov
loopne
add
in
and
in
push
jecxz
jo
and
stos
in
pop
out
push
iret
loop
adc
add
aas
int
inc
mov
xor
pop
test
sbb
or
cmpsb
cmp
pop
ret
mov
int3
imul
jl
imul
outsb
call
xor
addr16
testl
ficompl
sahf
mov
out
hlt
jbe
push
jge
jmp
cmc
in
lock
jmp
fsub
xor
into
sbb
sahf
mov
xchg
scas
sub
sar
lds
xor
ficoml
or
xor
inc
mov
dec
dec
adcl
ljmp
xlat
and
mov
pop
dec
loope
sbbb
sbb
cmpsb
imul
insb
inc
mov
call
sbb
hlt
xor
lahf
daa
xor
mov
mov
pop
sbb
sub
jg
xchg
dec
aad
lock
inc
je
or
cs
add
scas
scas
xor
repz
adcb
in
iret
movsl
add
lret
pop
subb
xchg
mov
mov
call
ss
mov
adc
pop
xchg
pop
lcall
xor
cli
pop
in
mov
pop
fisttps
cltd
add
lea
je
aad
dec
ficoms
les
sub
pop
icebp
out
out
jl
mov
dec
test
dec
jge
jle
pop
lods
shlb
xlat
push
fstpl
add
add
je
sub
mov
sbb
jnp
push
mov
inc
das
divb
aam
sub
or
test
add
in
fildll
sahf
dec
daa
test
inc
xor
pushf
sub
int3
sbb
pop
nop
dec
mov
test
lret
outsb
inc
pop
adc
es
in
push
imul
sbbb
adc
mov
loope
or
popf
push
int
dec
lahf
aas
and
idivl
pop
jnp
aam
cmp
sub
lret
fidivrs
lcall
test
dec
dec
dec
stc
inc
jns
test
jb
aas
mov
popa
std
mov
mov
xor
mov
push
test
fsubrs
outsb
incb
inc
pop
xchg
ja
mov
mov
cwtl
outsl
inc
and
jp
mov
adcl
jo
pusha
xor
jg
xchg
mov
dec
push
jg
je
lods
mov
je
fistpll
popf
xchg
mov
addb
sbb
fildll
sahf
cmp
or
stc
repz
jb
addr16
jl
scas
lock
cmp
pusha
jns
int
out
pop
xor
pop
mov
adc
adc
mov
xchg
out
orl
xor
repnz
inc
mov
cmp
jecxz
mov
jbe
mov
aaa
push
test
dec
pop
sub
jb
in
xor
adc
fcomps
sub
fs
jg
das
cmp
hlt
les
add
add
mov
push
cmp
movsb
ja
mov
pop
inc
sub
enter
sbb
into
fisttps
jnp
icebp
cmc
in
out
pop
cmc
mov
xchg
or
inc
jmp
int3
fistl
enter
pop
dec
call
arpl
jns
lahf
sub
addr16
out
sti
xchg
mov
pusha
mov
jne
xlat
movsl
in
test
comiss
and
xor
cmpl
gs
push
in
ret
push
into
push
adc
mov
ljmp
je
bnd
mov
push
jmp
xor
mov
les
mov
dec
nopl
adc
je
sbb
cmp
fwait
cs
lods
lods
leave
or
out
cmp
xor
shll
insb
lea
lods
sahf
lahf
mov
mov
addr16
jb
add
mov
jmp
pusha
fwait
dec
mov
aad
xchg
ljmp
outsl
or
clc
jg
fisubl
insl
insb
ret
push
adc
out
idivl
negl
push
dec
adc
aaa
mov
imul
or
stc
jne
push
into
push
or
adc
cmp
xchg
dec
ret
lcall
outsl
rolb
call
mov
or
out
cmpsb
or
mov
jle
cld
outsl
adcb
or
insl
inc
mov
or
lds
pusha
leave
add
push
xor
scas
mov
lock
mov
inc
leave
inc
and
repz
lcall
in
jmp
mov
cmpsb
dec
addb
inc
cmpsl
adc
sub
xchg
lcall
adc
call
or
pop
fldt
pop
std
sub
add
add
mov
dec
mov
sub
sub
adc
or
jne
mov
daa
push
outsb
adc
push
arpl
outsl
push
xlat
jg
pusha
sbb
out
pop
adc
xchg
dec
insb
xchg
roll
mov
cmc
xchg
pop
cld
inc
pop
add
sub
adc
hlt
outsl
mov
out
adc
ret
jo
mov
repnz
lret
mov
stc
sahf
test
lcall
dec
into
icebp
jp
xor
popf
movsl
ss
mov
xor
dec
inc
bound
xchg
stos
sub
repz
jb
pop
sbb
cwtl
sbb
adc
pop
mov
pop
lods
xchg
inc
jg
fisttps
stos
xchg
dec
imul
cmp
lcall
mov
mov
add
push
sub
stos
cmpsb
movsb
js
dec
jge
insl
pop
xchg
nop
jl
push
xchg
inc
shll
stos
repnz
test
sub
push
mov
hlt
push
out
sahf
call
outsb
add
xchg
and
fisttpl
inc
sbb
pop
into
mov
xlat
mov
pop
push
inc
outsb
ljmp
pop
ror
mov
fisttpl
test
cmp
jb
dec
test
subl
loopne
pop
and
push
leave
scas
idivl
mov
dec
push
test
rorl
std
imul
mov
cmp
scas
es
xor
add
inc
call
and
cmc
sahf
data16
sbb
out
sub
push
sbb
jnp
jge
pop
cmp
dec
sti
xchg
dec
loopne
sbb
sub
pop
jecxz
sub
push
sbb
lods
pop
mov
ja
ret
roll
dec
and
and
mov
pop
gs
frndint
xorl
inc
nop
mov
lods
fisubl
pop
push
xlat
sarl
xor
pop
push
push
jecxz
adc
push
adc
mov
sahf
test
sahf
or
mov
push
shll
fs
jp
out
inc
outsl
xor
add
xchg
mov
in
sahf
sub
enter
push
jmp
jbe
pop
push
into
push
xor
out
dec
jae
outsb
jae
xchg
push
and
xchg
dec
int3
xorl
cmpsl
add
iret
push
decb
sbb
les
in
scas
inc
cld
mov
neg
stos
std
enter
inc
jmp
fldcw
or
cmp
jecxz
test
cmp
xchg
cmp
jnp
sub
push
leave
dec
pop
movsl
addr16
arpl
popa
cltd
in
sbb
pop
repnz
insb
jbe
rcll
scas
mov
ds
cmp
mov
sbb
and
aam
imul
cmp
xor
lea
insb
and
pusha
ljmp
outsl
jae
das
insb
jo
test
pushf
repz
adc
or
dec
sbb
push
testb
scas
mov
xor
and
xchg
mov
lods
data16
mov
outsb
xchg
mov
ret
leave
jmp
idivl
adc
test
jbe
adcl
push
out
add
lea
sub
or
mov
rorb
jge
out
jnp
enter
or
jp
jmp
addb
lods
mov
mov
xor
in
mov
jmp
or
mull
lods
enter
cmp
out
sarl
push
xchg
in
hlt
les
test
adc
fs
in
cmc
push
add
test
hlt
les
test
adc
fs
in
cmc
push
add
cld
xor
pop
les
cld
xchg
xor
add
adc
fs
je
lds
cmp
in
hlt
gs
cmc
aam
fldt
mov
mov
pop
mov
mov
lds
pusha
in
pop
dec
divl
add
shlb
fs
mov
lds
pusha
in
xchg
add
dec
push
rolb
loopne
lock
add
mov
inc
lds
pusha
in
xchg
add
xor
repz
push
inc
into
dec
ret
mov
mov
jo
and
adc
xor
mov
push
lds
sub
out
popf
adc
test
add
cmp
cmc
lcall
mov
int
repnz
nop
ds
gs
xchg
adc
mov
js
push
and
lds
in
mov
nop
adc
dec
movsl
into
fdivrs
shrb
fs
addb
stos
adc
adc
mov
adc
pop
sbb
inc
sar
nop
mov
cmp
ss
xor
ja
cmp
movsl
jne
shll
in
orb
sbb
push
cmc
pusha
in
xchg
add
xor
inc
shlb
gs
mov
mov
pushf
pusha
mov
idivl
cmpsw
fs
mov
sbb
cmc
push
fldenv
mov
mov
jo
insb
rcrb
push
xor
gs
adc
imul
add
sbb
test
mov
movsl
xor
inc
shlb
gs
mov
lds
pusha
in
xchg
add
xor
inc
shlb
gs
mov
loopne
push
je
lcall
push
jb
sub
mov
je
in
arpl
adc
pop
lcall
sbb
sub
daa
lds
jae
fs
hlt
jbe
stos
cmp
and
inc
add
insl
dec
test
jno
xchg
stc
inc
adc
xchg
cmpsb
or
outsb
movsl
xchg
lea
jmp
insb
cmc
jae
jge
adc
inc
mov
dec
add
mov
and
mov
mov
int
jge
fisubrs
mov
mov
lcall
lock
or
sarl
mov
daa
xor
sbb
int3
mov
xor
sbb
leave
int
adc
cli
testl
div
push
stos
sbb
scas
loop
adc
inc
in
enter
inc
std
stos
push
sub
xor
cwtl
shll
and
test
insl
outsb
in
stc
adc
popa
das
or
push
jp
lret
jl
mov
mov
pop
cmpsb
out
daa
adc
pop
lds
push
pop
mov
aas
mov
inc
inc
mov
scas
push
xor
daa
pushf
pop
sbb
push
and
xchg
ror
sub
and
test
inc
push
icebp
mov
mov
insb
sub
xor
out
jno
sbb
je
mov
jne
jae
dec
add
mov
outsl
vrsqrtss
dec
add
pop
js
testb
jo
cli
cmc
in
dec
inc
jns
mov
cmp
add
add
scas
lds
pop
imul
push
outsl
adc
push
cmpsb
dec
pop
sbb
lret
or
test
mov
lock
add
out
ret
js
jns
daa
or
push
lds
xlat
push
pop
rclb
adc
in
cmp
pop
sub
pop
mov
fwait
lret
mov
les
and
dec
insb
mov
pop
fidivrl
ficoms
pop
mov
insl
fcomps
mov
cmpsb
push
and
sbb
xchg
popf
xor
mov
imul
test
mov
mov
sbb
cs
mov
push
pushf
leave
push
rcrb
add
mov
loop
dec
xchg
dec
xor
push
xor
adc
jge
add
xor
shr
ret
jg
and
loopne
xchg
xor
cmpsb
js
call
gs
ret
repz
sub
ljmp
rep
in
push
add
mov
fldt
out
leave
gs
ljmp
dec
or
xor
loopne
jo
ja
outsl
jp
cld
je
mov
roll
push
js
test
fs
push
xor
dec
js
call
or
pop
js
jo
out
bound
mov
mov
pop
out
cld
push
push
push
pusha
les
jbe
jecxz
dec
nop
dec
add
mov
push
lds
adc
int
and
shll
xor
cs
inc
mov
pop
movhps
iret
stc
cmpsb
out
js
lods
js
fisttpl
inc
inc
pop
pop
inc
or
cmpsb
sub
pusha
cltd
lret
and
mov
popaw
std
daa
shll
xor
jp
int
lods
cmp
add
add
addr16
cmp
es
cld
bound
lds
lods
pop
imul
cmp
cmp
ficoml
scas
add
js
lret
aas
loope
push
pusha
clc
sbb
cmp
aas
out
mov
rcll
stc
cli
mov
jo
lcall
cli
ljmp
loope
xchg
cmp
pop
sub
or
mov
ja
test
pop
leave
push
pop
lcall
inc
xor
mov
dec
incb
addr16
mov
pop
out
adc
data16
adc
clc
or
pop
popf
orl
push
loope
and
out
sbb
add
mov
adc
insb
cltd
adc
sub
leave
inc
bound
jne
test
mov
jne
xchg
mov
inc
pop
sbb
xor
cmpsl
xchg
out
dec
scas
iret
insl
mov
pop
mov
jae
imul
jns
adc
fadd
jmp
js
out
or
cs
sbb
dec
js
pop
iret
mov
xlat
rcrb
mov
cli
pusha
xchg
jge
pop
xor
neg
xchg
and
sarb
cmpsl
or
outsl
pop
out
mov
popf
add
mov
sub
cltd
das
lret
sbbb
fimull
adc
sbb
pop
pop
push
dec
fstpl
sarb
nop
cmp
enter
incb
insb
addr16
clc
js
push
movsl
nop
fdivp
pop
sub
xor
out
inc
push
dec
xchg
jbe
imul
jp
xchg
cs
js
cmc
lea
jg
cmp
fldenv
fsubrs
rcrb
loop
out
sub
loopne
dec
xchg
push
cmp
insl
lcall
and
mov
xchg
cmp
xchg
or
iret
rcrb
mov
jp
cmp
pop
pusha
test
jg
outsb
sbb
jae
sub
xchg
jmp
adc
inc
outsb
test
dec
out
hlt
inc
into
adc
pop
sarb
sti
int
and
cmpsb
cld
xor
pushw
push
pop
sbb
inc
mov
xor
popa
pusha
sbb
adc
jle
dec
inc
push
orb
test
mov
add
jns
push
xor
dec
jns
mov
out
mov
cmpsb
xchg
add
insb
jns
jae
xlat
cmp
sub
daa
xor
or
das
sub
stos
jno
cs
insb
pop
inc
das
push
sldt
dec
jg
or
rcll
mov
or
orl
inc
jge
sub
adc
jb
enter
imul
push
fdivrs
test
inc
xchg
sbb
xor
jo
ja
lds
and
dec
mov
scas
loop
notb
lea
pop
add
out
push
in
adc
and
xor
or
shrl
shl
and
xor
mov
popf
test
pop
add
pop
andl
cld
hlt
pop
cmp
jo
xchg
mov
lcall
mov
push
cmp
in
push
pop
lret
push
fnstcw
or
ret
cli
push
mov
fldcw
aas
ret
lds
test
xchg
and
popf
aam
add
testb
scas
pusha
or
and
dec
adc
popa
xchg
std
rolb
push
mov
dec
pop
xor
bound
insb
pop
jmp
mov
push
pop
mov
xchg
inc
pop
mov
mov
sub
ljmp
adc
pavgb
jp
popf
pop
xchg
pop
mov
iret
fnstenv
mov
dec
aaa
scas
imul
mov
out
xchg
fwait
and
int
mov
loope
xchg
and
lods
shl
sahf
repnz
pop
lret
out
int3
cltd
icebp
roll
in
dec
test
pop
imul
add
cmp
xchg
lods
out
rcrb
sub
rorb
std
nop
rclb
stc
pop
jnp
mov
pop
sbb
pushf
cli
out
dec
mov
jo
push
xor
test
mov
adc
or
mov
fidivs
jb
xor
lods
insl
xor
dec
cmp
xor
adc
pop
mov
icebp
xlat
mov
xchg
or
adc
bound
or
mov
stc
mov
imul
repz
pop
mov
aas
add
adc
mov
and
and
fnsave
into
andl
jge
mov
pop
movsb
lret
subl
jb
std
pop
or
clc
dec
popf
stos
inc
jmp
fstl
andb
sub
std
fdivl
mov
popf
js
adc
lds
inc
pushf
test
icebp
cmp
enter
popa
mov
insl
push
cwtl
xor
cmp
movsl
mov
stos
dec
dec
jmp
and
pop
xchg
xchg
add
test
imul
xchg
insb
lock
cwtl
sub
cmpsl
pop
xchg
adc
ret
cli
icebp
mov
mov
mov
and
mov
not
or
xlat
rolb
dec
loopne
shrl
adc
les
out
icebp
cltd
sbb
insl
hlt
add
cli
rcrl
sbb
nop
jbe
dec
xchg
dec
add
xchg
pop
xchg
test
sub
cmpb
cmc
push
sub
push
into
sub
fisttpll
mov
inc
es
adc
cmp
mov
lcall
mov
dec
lcall
or
push
lods
xor
inc
xchg
pop
ret
cmp
lods
psllq
dec
scas
repnz
fsubrl
lcall
hlt
lcall
call
ror
add
mov
inc
push
xchg
and
mov
jno
pop
push
icebp
or
sbb
ret
and
xchg
push
jle
ja
lods
dec
mov
scas
dec
pop
xor
mov
pop
push
lock
cmp
mov
or
jno
add
mov
cmpl
push
subb
inc
lods
sub
fcoml
jge
add
out
test
ficoms
enter
aas
mov
dec
inc
loop
rcr
xchg
cld
fnsave
jmp
and
add
mov
outsb
push
ret
pop
xor
mov
and
and
push
test
dec
adc
incl
adc
mov
adc
fsub
pop
xlat
mov
ret
hlt
xor
pop
jbe
andb
mov
xchg
jmp
int
jg
jl
out
enter
jno
xor
paddd
test
fdivl
mov
in
xor
shrl
push
pushf
stos
mov
jle
sahf
mov
sub
in
mov
insl
xor
loop
in
scas
sbb
mov
shrb
sahf
adcl
jmp
les
jo
inc
or
out
ljmp
jns
ja,pn
leave
xor
aaa
rol
arpl
push
mov
mov
fs
repnz
jno
push
fwait
fs
lock
xchg
jecxz
mov
repnz
xchg
js
sbb
bound
shlb
aam
dec
adc
ja
out
popl
inc
int
outsl
push
mov
inc
enter
pusha
push
xor
test
sti
scas
gs
adc
cltd
test
es
mov
mov
adc
xchg
imul
or
fidivl
aam
loope
add
js
imul
push
mov
sbb
fldz
in
test
andb
incl
adc
lock
inc
mov
das
pop
cmp
cmp
pop
int3
imul
mov
es
mov
in
scas
mov
repnz
pop
and
xchg
mov
or
das
stos
repnz
or
sub
fistpll
loope
push
push
pusha
fwait
xchg
lcall
sub
push
cld
repnz
hlt
sahf
xor
jge
gs
add
push
push
aas
inc
sbb
nop
jnp
jae
jnp
lea
xchg
shll
mov
mov
add
cmpsb
into
pop
rcll
cli
push
inc
lret
lea
insl
push
inc
adc
shrl
push
push
sbb
jp
cltd
sbb
add
or
nop
sahf
fmul
fprem1
dec
push
imul
ret
ds
fidivs
imul
xchg
stc
pop
shrb
xlat
mov
ror
fldenv
testb
cmc
sbb
movsl
push
insl
sbb
or
xlat
cli
les
testb
pmaxub
ret
inc
in
hlt
jge
mov
sbb
insl
lock
and
pop
jno
mov
aam
adc
cld
push
push
and
sbb
imul
xor
cmp
lret
test
in
cmpsb
sub
inc
in
mov
jecxz
fnstenv
push
cli
cmp
addr16
dec
pop
add
push
hlt
mov
movsb
mov
add
xchg
sbb
ds
addl
mov
mov
jl
cmpsb
mov
mov
fldcw
insl
cli
jb
mov
addr16
mov
inc
aas
fldz
jne
add
cmpl
adc
push
imul
je
sub
push
jl
inc
je
sub
fistps
test
inc
pop
or
cmp
pop
jns
call
sub
rcrb
fstps
daa
idivb
rorl
adc
lds
add
int3
movsl
out
adc
sub
ficomps
push
sbb
mov
sub
pushf
aam
ljmp
add
xchg
pushf
int3
fildl
lods
aas
inc
push
and
iret
je
jno
dec
outsl
mov
pusha
mov
sbb
push
and
fistpl
pop
cmp
pop
push
fcmovne
outsl
and
cwtl
mov
push
lcall
bnd
es
xor
arpl
int3
out
pop
lock
out
push
outsb
repnz
push
in
or
lods
add
test
add
je
shr
add
inc
test
aaa
push
xorl
out
pop
adc
mov
repz
dec
rcr
mov
in
mov
cmp
ret
or
mov
in
test
lret
pop
jl
jge
test
inc
push
rcrb
out
insb
jns
inc
jae
test
push
out
pushf
rorl
push
call
incl
in
xchg
dec
push
ss
xchg
adc
notb
imul
lea
js
adc
sub
sbb
adc
pop
int
shl
loope
roll
push
xchg
xchg
push
jmp
cld
pop
and
pop
subb
test
rorl
mov
test
push
or
pop
jge
stc
sub
aaa
int
sbb
add
mov
xor
sbbb
into
sbb
rcrl
dec
dec
xchg
push
xor
pop
rorb
dec
sbb
stos
xchg
xor
push
stos
sbb
mov
pop
fsubrs
xchg
mov
jmp
je
test
jge
cmp
lods
div
dec
fbstp
adc
push
cmc
jge
sub
adc
mov
repnz
pushw
fnstsw
cltd
mov
fs
xchg
mov
jle
adc
sub
rclb
aas
pop
fdivrl
pop
sub
aaa
rcr
jbe
in
icebp
out
and
mov
xchg
or
pop
cmp
fimuls
and
test
jnp
dec
ljmp
xchg
scas
inc
push
ret
jmp
test
inc
sbb
jl
xor
jae
fnstsw
mov
sbb
xor
sbb
cwtl
aad
and
mov
ss
or
cltd
leave
mov
jno
mov
rcll
xchg
cmpsl
fwait
sub
xor
test
iret
adc
sub
loop
addb
inc
rclb
xlat
jns
mov
je
cmp
mov
clc
or
push
mov
lods
lods
lods
cmp
xchg
xchg
std
cmp
jne
xor
cmp
sub
dec
mov
add
test
mov
call
je
mov
dec
dec
jne
cld
data16
sbb
sarl
pop
mov
and
lret
enter
inc
xlat
pop
and
add
pop
rolb
ret
fcompp
add
xchg
sbb
sub
ret
enter
push
in
cli
jmp
movsl
inc
pop
negl
mov
mov
jecxz
sub
xchg
xchg
leave
lds
dec
mov
xchg
stc
fsts
ljmp
dec
in
adc
pop
pop
clc
leave
push
je
mov
jp
or
scas
and
jno
loope
pop
out
inc
push
and
hlt
aam
inc
test
and
sub
fcmovnu
inc
mov
outsb
push
mov
or
mov
lahf
movsb
sub
xor
sti
adc
cmp
xlat
test
js
adc
in
mov
fdivp
cltd
lret
hlt
xchg
pop
mov
jb
fucomp
and
lea
dec
jno
add
mov
lods
push
or
xor
mov
orl
push
jmp
stos
movsl
xlat
jp
addr16
not
sbbl
in
pop
insb
mov
and
and
or
and
xchg
cltd
pop
data16
mov
aam
cmpsl
int
test
mov
mov
mov
dec
and
inc
shrl
lods
sarl
aam
mov
stos
daa
push
jg
das
mov
xor
inc
or
notl
cmp
test
adc
xor
test
xchg
xor
nop
xor
adc
repz
adc
aas
dec
mov
stc
dec
out
into
inc
jmp
sahf
jl
cmp
in
lcall
lret
out
push
or
xor
or
jle
mov
push
sub
loopne
or
rcl
adc
mov
mov
ja
ror
pop
sub
ljmp
int3
sti
pop
shlb
pop
cmp
fisubrs
iret
or
mov
jnp
mov
xchg
push
clc
iret
fwait
call
dec
ret
addl
mov
cli
push
pop
sub
sahf
fmull
mov
imul
mov
movsb
xchg
and
outsb
nop
xchg
in
sub
adc
and
push
mov
not
or
xchg
in
jl
daa
pop
cld
push
or
lahf
aaa
pop
jae
or
mov
jecxz
les
das
into
hlt
xchg
push
test
int3
dec
inc
inc
nop
sti
and
leave
xchg
into
fiadds
outsl
loop
push
xor
jno
aas
bound
and
xor
dec
cmpsl
rorb
sbb
out
lret
and
mov
cmp
movsl
shll
jge
lcall
add
mov
mov
ss
cmp
sbbb
testl
stc
insl
jl
push
insl
push
repz
data16
xchg
shlb
into
cld
in
mov
in
loope
push
push
or
xor
mov
mov
mov
lcall
add
jle
sti
mov
les
ss
mov
repnz
in
out
fldt
pop
pusha
in
add
outsb
cmpsb
xchg
push
adc
mov
in
pop
div
stos
test
add
cmpsb
aas
sub
adc
stos
shrl
mov
pusha
dec
out
sub
add
sahf
push
enter
sbbl
jno
mov
sub
adc
inc
cwtl
cmp
addr16
mov
out
jge
sti
aas
cwtl
pop
aad
mov
lcall
inc
loopne
mov
out
inc
clc
mov
mov
aas
les
pop
gs
adc
and
cs
mov
aaa
adc
dec
into
or
push
mov
out
adc
in
xor
leave
cmp
dec
adc
inc
adc
pop
int
mov
fwait
das
jg
fidivl
inc
sub
cmp
inc
aaa
in
mov
mov
leave
fs
and
fs
nop
loop
inc
sbb
es
outsb
and
je
out
jecxz
mov
or
mov
stc
dec
leave
add
out
and
mov
xor
sbb
inc
iret
in
or
mov
jge
cwtl
les
test
add
insb
mov
and
mov
mov
jno
jae
popf
stos
inc
lcall
adc
dec
adc
xchg
inc
jno
es
scas
popf
mov
sub
mov
out
enter
xchg
jb
add
mov
cmp
mov
pop
fisttpll
push
fs
pop
dec
push
movsl
push
mov
pop
inc
mov
sbb
mov
adc
cmp
jb
cmp
out
test
lret
xchg
push
dec
lock
addr16
inc
mov
xor
cmp
add
jle
dec
jno
in
sbb
jns
stos
cli
pusha
shlb
push
fucomi
jge
scas
int
lahf
cs
xchg
pusha
popf
stc
add
xor
lcall
mov
pop
std
or
andl
adc
cmp
cs
call
sahf
xchg
cmc
arpl
push
mov
rcr
loope
sub
or
subb
popa
jl
cmp
cmp
mov
dec
repz
bound
ja
daa
cwtl
jmp
movsb
lock
rcrl
aas
cmpsb
xchg
or
sub
shrb
js
lds
mov
sbb
negb
bound
popa
or
fisubrs
int3
outsl
cmpsb
shr
aaa
mov
xchg
test
adc
lock
push
mov
lea
int
sbb
icebp
mov
and
clc
mov
mov
sub
loopne
sbb
in
xchg
add
xor
inc
shlb
gs
mov
lds
pusha
in
xchg
add
xor
inc
shlb
gs
mov
inc
push
jne
in
adc
and
shlb
gs
mov
lds
pusha
in
xchg
add
xor
inc
jp
loopne
xchg
jne
inc
pop
push
dec
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
lea
push
push
call
add
push
push
pushl
push
push
call
leave
ret
add
lcall
test
filds
pop
add
add
add
or
add
add
add
cmpsb
add
add
xlat
add
sub
mov
mov
add
aaa
add
add
push
add
add
or
mov
roll
inc
add
add
cmp
mov
add
fwait
add
sbb
inc
add
add
add
inc
add
jae
dec
add
nop
add
add
add
jge
movl
inc
add
jmp
add
inc
add
add
xchg
add
ret
add
verw
add
add
add
jae
fildl
inc
add
add
add
add
add
add
add
add
add
add
pop
add
arpl
roll
jl
mov
sbb
pusha
add
add
xor
cmp
add
adc
add
add
add
xor
pop
add
add
add
add
add
pop
pusha
add
cld
add
movl
test
add
add
inc
add
add
inc
add
roll
add
add
add
add
add
add
add
add
sbb
mov
add
add
jnp
sbb
cmp
stos
add
and
add
add
add
add
cmp
dec
add
add
add
jns
mov
mov
add
add
cmpsb
add
add
add
aaa
add
add
xchg
nop
add
add
add
add
test
das
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
push
add
inc
add
pusha
add
add
arpl
add
add
or
adc
incb
pop
add
add
data16
add
jge
jae
push
add
sub
pop
add
add
sub
int3
add
or
add
add
mov
add
add
add
add
add
add
add
add
push
add
pushf
add
add
addl
add
add
or
push
add
add
sub
je
fiadds
add
fiadds
mov
add
dec
add
add
add
add
push
or
pop
add
add
fiadds
jae
xlat
add
push
add
add
mov
add
add
mov
add
add
add
add
adc
addl
add
push
add
add
cmp
pop
add
add
add
add
add
cmp
mov
and
xchg
add
add
add
add
inc
add
add
add
mov
add
mov
add
add
add
add
add
add
add
add
fiadds
sahf
add
add
add
add
lods
add
add
push
add
dec
add
add
add
add
lret
add
cmp
lods
add
add
cmp
add
add
add
add
or
add
mov
add
inc
add
add
add
add
fiadds
outsb
add
add
add
scas
add
fwait
add
add
add
add
nop
sti
jmp
mov
xchg
or
pop
mov
cmp
jecxz
cltd
or
dec
mov
loopne
push
pop
cmp
xor
pop
scas
xor
femms
jo
je
js
insb
jne
fcmove
and
sbb
mov
jp
cmp
in
jge
pop
or
xor
lret
dec
lods
push
mov
lds
mov
sbbl
out
adc
popf
xchg
mov
jne
pop
cmp
andl
mov
mov
or
bound
mov
or
mov
push
movsb
rorl
clc
insl
mov
jmp
call
jns
cwtl
lcall
fs
adc
lcall
stc
xor
pop
mov
mov
push
xor
push
jo
std
andb
idivl
push
and
mov
pusha
pop
ficompl
das
mov
push
or
out
pop
ds
cmovns
scas
cmpsb
iret
sahf
addr16
adc
dec
dec
jg
pop
push
std
sub
xor
push
in
sbb
sub
xor
das
adc
rcrb
loopne
xchg
jge
and
sub
gs
sti
je
cmc
jo
fs
add
ds
jge
jo
out
mov
sub
pop
ds
jb
sbb
in
rorb
sub
sbb
das
pop
es
test
push
add
cmc
sbb
cmpsl
stos
outsl
xchg
mov
pop
cmpsb
push
cmp
std
xchg
shll
lahf
in
ss
inc
bound
insb
fs
stos
movsl
mov
add
and
sub
jmp
dec
inc
aad
cmp
shr
push
mov
loop
mov
data16
data16
jbe
push
mov
out
pop
cmpsb
lock
loopne
xchg
in
je
out
out
lret
adc
adc
icebp
psubb
cmpl
cmpsl
mov
pushf
ret
enter
mov
int3
and
insl
mov
xlat
stos
xchg
inc
sbb
outsl
adc
dec
xchg
or
mov
xchg
mov
sbb
sbb
add
cmp
xchg
jl
jmp
adc
pop
daa
test
jo
dec
add
add
outsl
les
mov
xor
cld
out
xchg
sbb
adcb
enter
adc
fdivrl
sub
cmp
mov
and
test
adc
dec
leave
ds
push
sub
jecxz
test
mov
cmp
xchg
icebp
adc
jno
fnstsw
push
adc
iret
daa
mov
mov
sub
dec
add
fbstp
xchg
add
add
add
add
add
rolb
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
add
add
sub
add
push
clc
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
iret
clc
add
mov
clc
add
lods
clc
add
movsb
clc
add
pushf
clc
add
xchg
clc
add
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
call
clc
add
cld
clc
add
adc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
mov
add
test
add
sar
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
and
add
sub
add
xor
add
cmp
add
inc
cli
add
dec
cli
add
push
cli
add
addr16
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
cli
add
lods
cli
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
