adc
decl
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
sar
mov
mov
mov
mov
sub
mov
lea
pop
pop
pop
ret
nop
lea
push
mov
shr
mov
sub
mov
mov
shr
mov
mov
mov
shr
lea
mov
mov
call
leave
ret
push
xor
mov
push
sub
mov
call
mov
mov
pop
pop
pop
ret
lea
push
mov
push
mov
push
mov
call
mov
mov
pop
pop
pop
jmp
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
mov
sub
mov
lea
call
leave
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
nop
lea
push
mov
push
mov
push
call
mov
and
mov
movl
call
mov
mov
add
mov
mov
pop
pop
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
mov
test
je
mov
mov
cmp
je
cmp
jne
test
jle
cmpl
jne
movl
mov
test
jle
cmpl
jne
imul
gs
xor
cs
insb
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
mov
sub
orl
mov
add
sub
test
je
call
mov
sub
mov
add
mov
mov
xor
divl
imul
mov
mov
sub
mov
add
mov
call
jmp
mov
cmp
ja
pushl
call
jmp
call
mov
sub
mov
add
mov
mov
dec
mov
mov
cmp
ja
call
mov
inc
mov
mov
cmp
jbe
andl
cmpl
jne
call
mov
sub
mov
mov
sub
mov
cmpl
jge
mov
mov
jmp
fldl
call
inc
mov
mov
mov
sub
test
je
call
jmp
andl
jmp
mov
inc
mov
mov
mov
cmp
jae
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
mov
add
mov
movzwl
mov
andl
andl
jmp
mov
inc
mov
mov
cmp
ja
mov
and
mov
mov
add
movzbl
mov
inc
mov
add
movzbl
mov
mov
inc
mov
jmp
mov
dec
mov
mov
add
movzbl
mov
dec
mov
add
movzbl
mov
mov
add
movzbl
mov
mov
mov
mov
add
mov
xor
mov
add
mov
jmp
jmp
pushl
call
pop
cmpl
jb
mov
leave
ret
push
push
push
call
mov
mov
mov
mov
movb
movb
movb
movb
mov
mov
add
mov
mov
add
mov
mov
mov
add
add
mov
mov
mov
push
call
mov
mov
mov
mov
movzbl
sub
je
incl
cmpl
jbe
call
mov
jmp
call
mov
mov
movzbl
sub
je
call
incl
jmp
push
push
call
push
push
push
mov
pushl
call
xor
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
pushl
mov
push
call
pushl
call
push
pop
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
cmpl
jne
push
push
push
push
push
call
push
lea
push
push
call
add
leave
ret
sub
cmp
or
sbb
popa
rcrb
out
cmp
adc
insb
call
cmp
sub
fdivrl
int3
or
sbb
push
mov
mov
insb
call
cmp
sub
fdivrl
int3
or
sbb
push
mov
fwait
outsl
clc
push
std
or
mov
pop
pop
scas
pop
test
xchg
jno
addr16
shll
pusha
mov
lahf
adc
pop
jae
and
movl
js
mov
mov
adc
xor
or
cmp
jge
fcoml
bound
stos
or
dec
pop
stc
push
or
cmp
or
dec
mov
pop
call
add
xchg
pop
mov
mov
repnz
push
sub
lea
add
test
adcl
mov
cmp
rclb
rolb
out
inc
popf
repz
in
mov
jmp
js
bnd
sbb
pop
fidivrl
jmp
cmp
or
sbb
push
mov
mov
insb
call
cmp
inc
dec
fcomps
dec
cld
pop
in
or
cli
fdivr
fsubs
fstpl
outsb
pop
mov
bound
dec
test
or
aad
enter
xor
pop
jb
or
dec
cwtl
cmp
mov
mov
pop
lods
test
mov
insb
call
cmp
sub
fdivrl
int3
or
sbb
push
mov
mov
insb
call
cmp
sub
fcompl
xchg
adc
mov
xor
out
sbb
cmc
or
ret
hlt
xchg
dec
or
int
lods
out
mov
sti
cmp
fcomps
cmp
scas
loopne
cwtl
push
sti
add
icebp
xlat
add
or
dec
call
xor
repnz
push
in
cmc
daa
cmp
lahf
jne
addr16
hlt
cmp
sbb
add
std
imul
insb
push
fimuls
xchg
fwait
adc
lcall
push
aad
insb
adc
std
lret
jmp
lret
shl
or
nop
adc
mov
fnstcw
pop
leave
mov
jge
test
imul
daa
cmp
jns
movsb
xor
mov
mov
cltd
cmp
leave
mov
call
outsb
jo
mov
bound
sbb
cmpsl
mov
lods
mov
jle
pop
xchg
jge
leave
daa
pop
data16
pop
cmpsb
sub
mov
xchg
push
adc
fs
stc
inc
jne
gs
out
insb
movsb
dec
xlat
xchg
xchg
jne
pop
cmp
test
dec
cmp
out
incb
iret
lret
cmpsb
shlb
icebp
push
lods
or
hlt
adc
mov
aas
movsl
lds
test
imul
jae
sbb
loopne
adc
jnp
jnp
push
ret
or
cli
mov
mov
xchg
or
push
into
jno
push
xchg
lahf
cmp
lock
xchg
mov
jmp
dec
rorb
fsub
mov
jb
fimuls
or
int3
inc
lret
in
sti
mov
cmp
mov
iret
data16
pop
adc
ret
xchg
movsb
and
hlt
sbb
sbb
sbb
scas
jle
dec
dec
mov
dec
icebp
dec
sarl
sub
fnstcw
sbb
test
sbb
mov
subb
jle
jge
jne
inc
call
in
mov
jg
sub
lods
mov
clc
test
pop
push
cmc
inc
inc
js
or
jne
popa
mov
cmp
mov
push
mov
bound
mov
cwtl
ss
xchg
popf
into
pusha
adc
addr16
cmpl
sub
ljmp
cli
mov
cltd
or
arpl
shrb
leave
int
out
jge
xchg
dec
xchg
pop
sub
or
sbbl
into
cmpsl
mov
sub
sbb
jo
or
sbb
mov
sbb
sub
push
arpl
jge
cmp
in
pop
pop
nop
mov
push
xchg
xor
mov
and
pop
in
sbb
mov
scas
repnz
xor
repnz
push
int3
mov
xchg
lds
in
mov
mov
or
cmpsb
jae
iret
sarb
sub
pusha
adc
pop
insl
xchg
clc
insl
dec
sti
dec
lods
cli
int
ja
enter
sub
shll
jbe
shlb
pusha
dec
sti
sbb
mov
mov
jo
push
lret
cmc
out
inc
pop
xchg
adc
push
bound
push
or
push
sbb
xor
dec
mov
push
jbe
fwait
mov
inc
fidivrl
push
jmp
ret
add
aaa
popa
repnz
ja
push
in
adc
scas
shrl
stos
pop
test
jo
sub
push
xor
lahf
cmp
popf
scas
adc
mov
int3
sti
push
adc
xlat
or
pop
pop
xor
xchg
into
mov
cltd
pusha
cmc
loopne
sbbl
mov
mov
adc
adc
pop
out
push
sar
jmp
mov
rcrl
in
in
in
mov
out
enter
pusha
fidivs
lock
mov
rcll
enter
scas
xlat
fs
mov
xchg
in
sub
cs
jo
bnd
inc
ds
mov
ss
dec
out
inc
popf
cmp
mov
pop
in
andb
lods
mov
arpl
sub
pop
or
sbb
jnp
shlb
sub
sub
lods
sub
mov
xor
addr16
into
pop
int
imull
jno
jnp
adc
fidivrs
repz
cmp
test
push
adc
sbb
pushf
mov
jg
sbb
inc
jge
pop
and
pusha
or
xchg
aaa
test
xor
jg
pop
popa
xor
and
arpl
inc
inc
xorl
push
shll
fst
mov
scas
data16
push
xchg
cmp
out
mov
jl
pop
sarl
fidivl
dec
cmp
mov
scas
and
lock
dec
xchg
push
sub
push
jecxz
pop
data16
jo
adc
sahf
inc
cmp
pop
outsl
pop
dec
ret
std
xor
jle
dec
loope
push
or
pushf
arpl
je
je
pop
orb
xor
xor
dec
in
pop
packsswb
jbe
nop
xchg
fnstenv
in
out
int
xor
insb
fcomp
outsl
ficoms
inc
pop
pop
and
les
pop
ficoml
lret
enter
inc
pop
mov
inc
cltd
adcb
add
pop
lcall
rorb
daa
aad
shrb
adc
and
push
repz
cmp
sbb
lcall
lret
hlt
aam
pop
ljmp
push
dec
push
sub
mov
inc
add
add
and
xchg
dec
iret
mov
repz
int3
loope
js
jl
insb
jbe
add
lahf
in
jne
shll
movsb
inc
movsl
adc
or
xchg
cmp
dec
je
scas
adc
push
in
sub
pop
adc
dec
leave
add
dec
mov
mov
push
nop
sti
and
bound
adc
add
push
xor
and
jge
sbb
jns
adc
mov
test
or
push
sub
in
xor
dec
sbb
and
sub
shr
add
iret
lea
jo
ret
cmp
stos
xor
mov
lods
int
pop
fdivrs
lods
cs
aad
lods
je
imul
cmp
shlb
in
daa
mov
or
xchg
repnz
xor
insb
jnp
pop
dec
test
jmp
leave
aas
inc
repnz
je
jne
mov
mov
pusha
adcb
fbstp
nop
ret
xchg
pop
jg
xor
xor
loope
mov
inc
loop
loope
scas
mov
pop
into
enter
or
mov
add
push
test
dec
out
sbb
cmp
js
jmp
mov
mov
add
insb
inc
push
mov
or
push
inc
cltd
leave
inc
imul
movsl
ds
int
jb
adc
and
dec
in
push
movsl
stos
cltd
cmpsl
and
dec
push
jae
ja
out
ja
mov
mov
push
pop
ljmp
scas
or
loopne
jmp
divl
and
loope
sti
popa
clc
and
xor
push
repz
aam
out
or
adc
push
cmp
scas
xchg
imul
add
jne
mov
jbe
mov
es
or
into
mov
roll
pusha
nop
pop
out
ss
xor
lahf
mov
pop
fcomps
push
or
scas
xchg
inc
das
stos
xchg
out
add
xchg
mov
push
pop
mov
mov
sub
test
shl
push
jmp
push
push
sub
out
xchg
lcall
push
lahf
cmp
pop
mov
and
movsl
adc
adc
imul
lods
dec
frstor
mov
sbb
mov
cmp
and
lods
mov
mov
push
rcrb
aas
cli
stos
inc
fdiv
mov
stos
fidivrs
dec
dec
mov
scas
jmp
push
int3
xlat
xchg
movsb
insl
movsb
inc
bound
out
mov
mov
ja
and
clc
loope
push
stc
dec
daa
addr16
cmp
push
insb
mov
mov
cmp
fwait
push
push
insl
mov
into
inc
mov
call
pushf
jle
push
call
frstor
xlat
inc
xchg
adc
xor
inc
testl
bound
dec
lods
or
and
in
jl
mov
xchg
rclb
jle
sbb
push
xchg
pop
pop
sbb
into
dec
or
fidivs
arpl
mov
andb
xor
mov
sar
jg
mov
bound
add
inc
sbb
push
repz
decl
test
pop
subb
fwait
pop
mov
adcl
cmpsl
jbe
pushf
add
push
adc
cmp
cmc
mov
push
push
addr16
xchg
cmp
dec
xchg
mov
pusha
mov
jp
ret
mov
jns
jmp
xchg
xlat
xorl
inc
lahf
aam
arpl
mov
inc
sti
test
lock
fisttps
fcomip
dec
jae
fcoml
movsb
adc
add
inc
in
lods
cmpsb
jo
jmp
add
hlt
sbb
xchg
or
daa
cmpb
pop
pop
fs
mov
xchg
int
enter
jb
xor
pop
xchg
xchg
dec
lcall
out
jbe
call
scas
mov
ret
mov
xor
push
and
aad
mov
sub
roll
inc
inc
bound
hlt
adc
in
leave
stos
les
iret
cmpsb
ljmp
and
inc
lahf
sahf
push
add
fsubl
pop
aam
pop
xchg
loope
jle
pop
out
mov
jo
pop
loopne
imul
lds
mov
push
xchg
dec
mov
sbb
lahf
in
das
test
push
jbe
es
pop
dec
testl
call
je
inc
push
pop
sub
jp
icebp
es
outsl
or
imul
nop
test
dec
sub
ret
inc
push
cmp
dec
js
xor
test
ret
hlt
pop
or
mov
pop
inc
test
int3
cmp
jno
push
cmp
fdivrs
or
iret
push
imul
inc
ds
das
dec
dec
test
sub
push
leave
fs
push
lds
mov
or
test
es
cld
jb
push
aas
xchg
incb
mov
lods
sbb
addr16
lock
cmpsl
fadds
mov
and
ret
mov
aad
sbb
jp
mov
clc
outsl
test
push
popl
cmpsl
call
cwtl
jo
repnz
jl
mov
mov
cmp
sub
mov
inc
mov
lret
lods
cld
rcr
nop
testl
fidivs
ret
movsb
or
lret
jmp
fcomps
arpl
cli
call
es
sub
cmp
mov
mov
clc
and
ja
push
sbb
add
fstl
inc
sbbl
test
movsl
mov
mov
and
mov
pushf
test
push
pop
clc
push
je
jl
inc
fmull
inc
out
dec
or
fwait
scas
loopne
add
rorl
into
pop
sub
out
inc
sbb
sub
aad
mov
icebp
aam
xchg
lahf
mov
mov
sarb
roll
hlt
or
test
pop
outsb
add
and
lods
cli
dec
insb
call
lret
sub
add
jecxz
xchg
jg
jmp
lock
aad
xor
lahf
sbb
cwtl
orl
push
sbb
outsl
xchg
stc
push
clc
fwait
mov
test
jns
test
mov
fsubr
pop
xlat
pusha
xor
nop
mov
popa
cmp
inc
dec
ret
push
add
dec
ret
pop
pop
lods
fistl
jecxz
pop
cmpsl
jne,pn
jnp
adc
cmp
mov
dec
push
fwait
and
mov
jge,pt
xlat
mov
inc
xchg
and
repnz
jb
or
stc
add
sbb
push
pop
mov
jnp
xchg
arpl
mov
mov
sti
mov
call
imul
dec
adc
cwtl
mov
sbb
or
je
push
xchg
cvtpi2ps
imul
pop
dec
mov
ds
sub
repnz
scas
cmc
ret
push
into
pop
jne
std
fists
pop
xor
xchg
aad
mov
inc
push
add
add
mov
inc
or
test
ss
mov
jb
cmp
push
fs
sbb
mov
gs
call
push
fcmovnb
dec
loopne
clc
add
fcmovnu
sub
cmpsl
cld
jne
sarl
fmuls
mov
mov
lea
adc
jae
je
lret
ffree
xor
hlt
pop
mov
arpl
sub
cmp
stos
out
jle
push
adc
gs
mov
in
pop
xchg
mov
inc
cltd
dec
sti
outsl
in
xor
xchg
imul
mov
popa
in
xor
push
sub
dec
scas
push
icebp
lock
lock
lret
xor
cmp
mov
or
popa
mov
call
push
hlt
pop
dec
fistpl
movl
je
sub
shll
mov
jb
add
insl
push
stos
mov
cmp
xchg
mov
push
jp
cs
mov
pop
jle
rorl
push
fcoml
jmp
frstor
add
lret
cmp
mov
mov
push
addb
cmp
sahf
sbb
movsl
mov
jo
push
jne
jo
pushf
pop
insb
cmp
push
mov
xchg
add
sahf
add
push
lcall
sbb
arpl
dec
xchg
mov
xor
pop
aas
test
cltd
push
mov
je
dec
pop
mov
and
orl
fldl
in
call
clc
sub
mov
push
xor
dec
pop
push
dec
ret
lods
adc
test
or
das
xor
sti
or
push
popf
in
jns
or
and
addl
sub
sub
push
xchg
or
and
aas
inc
jmp
xchg
sub
movsl
and
rcl
xor
jmp
icebp
cltd
adc
or
jmp
in
lahf
dec
push
repz
push
loope
insb
stos
push
dec
sub
jle
mov
pusha
movsb
add
cs
test
sub
sub
das
or
push
imul
roll
dec
inc
xor
pop
clc
ret
es
cld
push
lock
cmc
or
push
mov
stos
or
fnstcw
sbb
sbb
xor
xor
cltd
cmc
push
cmp
mov
dec
scas
fnsave
inc
inc
pusha
mov
or
lea
mov
push
adc
and
addr16
bound
cmpb
mov
mov
mov
add
sarb
scas
push
sub
sti
dec
jle
pop
cmpsb
add
cmp
or
cs
inc
pop
sub
xchg
cltd
push
cli
icebp
popf
mov
icebp
hlt
lahf
in
repz
das
mov
sti
aam
pop
add
int3
cmp
clc
pop
pop
sub
xchg
xlat
daa
out
jg
cmc
xchg
inc
dec
cmpsl
sub
jbe
or
movsb
or
mov
cmp
fnstsw
pop
add
imul
lcall
leave
xchg
leave
sub
test
and
jno
mov
push
jl
add
call
add
push
pop
aaa
dec
in
add
mov
jns
jno
popa
jmp
int
lods
rol
leave
adc
lret
popa
lock
xchg
xchg
dec
mov
cmp
cmp
loop
movsl
testl
jge
sti
loope
adc
and
sbb
pop
jl
addr16
cmp
pop
mov
mov
outsl
dec
or
mov
adc
sub
test
bnd
shlb
pop
insl
cwtl
adc
or
or
lahf
cmp
or
pop
xchg
cmp
std
scas
dec
dec
das
adc
ss
dec
out
bound
arpl
or
aam
arpl
mov
cld
adc
iret
imul
fs
jne
out
jns
pop
xor
popa
push
repz
popa
dec
lods
or
imul
or
sub
mov
arpl
and
pushf
fwait
stos
gs
push
imul
push
popa
icebp
out
shrb
jl
outsl
and
stos
lods
xlat
imul
xchg
loop
cwtl
dec
mov
int
ror
mov
inc
aam
sbb
push
cmp
mov
add
lahf
push
fsubr
mov
aas
fcomps
scas
prefetch
movsl
mov
std
test
vphsubbw
mov
pushf
xor
xor
xchg
cli
jl
push
jb
push
or
rcrb
jmp
or
add
divl
pop
xchg
xchg
repnz
fsubp
mov
imul
mov
movsl
xor
push
add
out
js
sahf
shlb
outsb
sbb
pop
leave
jno
sbb
arpl
scas
xchg
stc
dec
cmpsb
and
dec
aaa
loopne
inc
out
sub
fmull
cmp
insl
mov
pop
call
pop
mov
bound
inc
bound
push
imul
mov
out
push
ret
popf
xorb
popa
jle
and
adc
mov
scas
aad
lock
pop
adc
dec
ljmp
pop
xor
aad
and
mov
push
iret
into
and
inc
and
aaa
rorb
mov
in
mov
adc
dec
inc
rorl
jmp
cli
cmpsl
pop
sub
mov
call
dec
aam
jns
pop
ja
insb
cmp
in
mov
aas
repz
add
subl
jns
into
jbe
in
jecxz
loopne
sbb
pop
and
and
xchg
arpl
hlt
cmp
mov
aaa
add
pop
add
popa
push
ret
dec
sub
push
pop
and
leave
xor
add
lret
push
shrb
into
jge
mov
cli
sub
sti
decb
call
push
jno
mov
pop
sbb
push
lret
pushf
push
and
pop
icebp
mov
mov
sti
fdiv
mov
test
mov
push
push
pop
stos
add
repnz
pop
xchg
mov
xchg
adc
or
ss
xor
scas
fiadds
cmp
pop
lcall
adc
fnsave
push
dec
jns
bound
daa
imul
in
cli
inc
add
xor
fmuls
jno
dec
push
ficoms
cmp
shlb
bound
shrl
cwtl
adc
loope
adc
syscall
adc
imul
aad
ffree
pop
dec
cmp
pop
jecxz
jl
dec
jo
jbe
jb
push
jne
dec
lret
or
push
pop
mov
repnz
lret
adc
bound
mov
ficomps
jge
das
cmpsl
js
pop
sub
mul
xor
mov
cmc
loop
addr16
mov
mov
mov
jecxz
push
push
mov
and
xor
outsl
clc
stc
aas
pop
push
lock
outsb
sub
insl
dec
or
jno
fistps
xchg
inc
adc
daa
ret
clc
mov
std
adc
fistps
sub
dec
xor
nop
xchg
dec
fwait
inc
or
jmp
xchg
pop
hlt
and
jl
sbb
or
fisubs
lahf
dec
in
out
dec
inc
mull
lock
fwait
pop
add
jmp
filds
rorb
mov
daa
mov
xor
jg
and
xor
in
cwtl
lea
pop
xor
jmp
dec
cld
mov
mov
fs
in
fldcw
pop
inc
imul
mov
mov
sub
sti
ljmp
orb
xor
popa
pop
pop
inc
icebp
lret
mov
jne
rorl
push
xor
mov
xor
cld
jg
test
aaa
fwait
sub
jne
pop
mov
jne
jns
cli
sti
mov
lahf
cmpsl
inc
pop
rolb
ficoms
mov
xchg
ret
call
hlt
jge
dec
ja
sbb
pop
xorb
dec
xor
repz
push
mov
les
pushf
xchg
and
push
push
xchg
pop
mov
test
je
push
pusha
push
and
iret
pushf
aas
mov
cmp
inc
test
lret
cmpsl
je
push
cld
push
rcrb
ss
in
icebp
orb
mov
fidivl
jno
and
and
int
mov
sub
push
ds
or
pop
loope
sbb
cmp
stos
mov
dec
push
cmp
sbb
xchg
loope
mov
repnz
sub
pusha
push
lret
shr
rcll
aam
and
insb
inc
push
pavgw
pop
aam
mov
dec
push
stos
mov
inc
cmp
pop
das
int3
into
or
inc
bound
add
lods
in
inc
push
xchg
xchg
inc
sub
pop
js
pop
inc
add
mov
push
daa
pushf
mov
mov
daa
mov
pop
fimuls
rorl
sbb
cld
sbb
push
mov
mov
insb
call
cmp
sub
fdivrl
int3
or
sbb
push
mov
mov
insb
call
cmp
sub
fdivrl
int3
or
sbb
push
mov
mov
insb
call
cmp
sub
fdivrl
int3
or
sbb
push
mov
inc
out
jl
sbb
ret
and
push
mov
sub
pushl
movb
call
pushl
movb
movl
movl
pushl
movl
movl
movl
movl
movl
movl
movb
movb
call
add
test
jne
push
pop
jmp
push
push
push
push
pushl
call
mov
xor
mov
push
push
lea
push
push
call
test
jne
lea
push
push
pushl
call
test
jne
lea
push
call
lea
push
call
push
push
lea
push
push
jmp
mov
pop
pop
pop
leave
ret
push
addb
mov
ja
push
mov
xlat
mov
out
xchg
inc
xchg
jo
jo
addb
mov
pop
shlb
loopne
xchg
xlat
add
adc
and
cmpsl
jo
addb
mov
pop
shlb
loopne
lock
add
xor
in
stc
add
inc
loopne
repz
aas
mov
sbbl
sbb
xchg
and
faddl
ljmp
push
jmp
and
mov
pop
and
jb
ja
lea
push
dec
cmp
xor
add
iret
aaa
mov
addr16
add
pop
ror
call
xlat
out
jp
shll
adc
xor
pop
pop
mov
ss
lock
cmp
sbb
test
or
xchg
push
xchg
enter
xchg
lods
adc
push
mov
add
addb
mov
pop
shlb
loopne
lock
add
adc
and
xor
pusha
cmpsl
adc
add
jnp
dec
movsb
push
test
xchg
jo
or
out
pop
repz
adc
daa
call
imul
lds
inc
mov
mov
cmpsl
and
shll
push
lds
pop
repnz
shlb
loopne
lock
add
adc
and
xor
pusha
cmpsl
jo
addb
mov
pop
shlb
loopne
lock
add
adc
and
xor
pusha
cmpsl
jo
and
int3
iret
inc
ja
xor
cmp
adc
out
and
cmp
ds
push
in
mov
xor
call
lods
or
mov
add
pop
and
loopne
inc
repz
pop
jle
pop
jae
jg
mov
add
xlat
aaa
outsb
dec
jge
lods
mov
xchg
lcall
jmp
push
inc
mov
loope
outsb
and
mov
shl
pop
in
push
out
jl
jno
fwait
addr16
fstl
mov
scas
mov
push
or
push
push
adc
jnp
lret
pusha
ret
jg
sti
xor
push
outsl
out
mov
sbb
repnz
sbb
xor
dec
subl
data16
aam
arpl
ljmp
xchg
dec
out
loope
jbe
cwtl
stos
mov
test
push
andb
mov
movsb
xor
xor
mov
aaa
scas
push
inc
sub
aam
cmp
cmp
jbe
scas
add
jl
cmp
xor
mov
mov
push
test
push
ret
and
dec
xor
jl
mov
cmp
pop
mov
sub
je
push
test
out
push
sbb
xchg
sub
loope
sub
cmp
notl
jno
push
xor
jbe
add
xor
out
es
adc
pop
or
mov
mov
ds
rorl
mov
leave
xchg
dec
sub
mov
arpl
mov
into
mov
ds
shl
call
sbb
or
out
sub
push
mov
pop
into
lods
adc
dec
cwtl
ret
mov
lcall
inc
push
mov
insb
inc
cmc
mov
into
mov
jnp
call
adc
repz
addl
xchg
pop
cmp
dec
popa
mov
push
and
vfrczss
jl
pusha
mov
pop
push
jns
lea
ss
sbbl
fldenv
or
mov
mov
cmpsb
pop
jg
fwait
sub
and
mov
sub
push
pop
mov
push
in
out
add
insl
xor
pop
lock
imul
mov
outsl
push
out
cli
xchg
int
cmpsl
or
and
inc
jne
sti
dec
fs
push
pop
adc
xchg
jp
fiadds
insb
cmp
sub
inc
mov
ljmp
jb
movsl
int
xchg
cmp
push
xor
push
fwait
inc
roll
cmpsb
xchg
in
and
cmpl
cmpsl
mov
or
pop
test
fs
out
mov
cmp
das
lret
fildl
dec
inc
and
leave
xchg
cmp
add
int3
movsb
push
loop
je
add
jecxz
sbb
enter
and
jnp
dec
push
xchg
out
push
cmp
pushf
jg
int3
xchg
sahf
mov
cmpsb
inc
or
or
test
dec
out
mov
test
xor
mov
push
push
push
lret
pushf
mov
mov
pop
fadds
mov
pop
mov
add
mov
cmpsb
rcrl
lcall
mov
addl
xlat
mov
mov
ret
out
sub
mov
dec
inc
addb
imul
add
mov
sbb
ss
pusha
mov
sub
lods
and
xlat
push
popa
in
and
jno
push
dec
mov
ret
movsl
and
push
xchg
and
pop
and
call
mov
imul
pop
imul
jns
inc
lods
jne
fisttpll
xchg
sbb
int
sbbl
add
sbb
pop
cmp
mov
jl
rcl
test
mov
xchg
sub
lods
les
arpl
test
sub
repz
mov
sbb
cld
mov
dec
aas
push
movsb
mov
xchg
jbe
rcll
out
xchg
lret
xor
xor
mov
mov
dec
cwtl
jbe
clc
xchg
gs
inc
lods
scas
fdivs
mov
sub
aad
pop
push
sbb
pop
mov
mov
dec
mov
xlat
dec
sbb
out
lods
or
sub
xor
lcall
shlb
outsb
movsl
inc
push
xchg
mov
pop
lock
or
aad
xor
leave
insl
adcl
arpl
mov
jb
test
lcall
divb
ret
and
cmp
adc
bound
jl
mov
push
adcb
lret
scas
aaa
mov
and
mov
rolb
ss
cli
push
in
mulb
mov
sbb
popa
jp
add
mov
repnz
mov
xor
les
xor
dec
dec
adc
je
rolb
jne
add
cmp
jnp
or
cld
pop
cltd
or
pop
push
mov
push
cmpl
stos
leave
ret
js
dec
or
out
inc
xchg
sbb
jmp
ret
pop
lret
sti
cmp
lret
sbb
mov
repnz
outsb
and
out
adc
fwait
adc
jl
pop
push
jge
dec
ja
inc
test
pop
mov
sbb
adc
xchg
mulb
sub
out
xor
enter
push
mov
jecxz
test
lcall
ret
mov
mov
icebp
pop
fiadds
xor
inc
adc
pop
xchg
add
cmp
fdivs
or
mov
jns
pop
push
mov
or
lods
shr
dec
inc
js
out
loope
sub
cmp
fimuls
stc
sahf
scas
mov
mov
ret
jle
xor
in
dec
fnstenv
stos
out
add
in
xchg
jle
lods
adc
test
out
push
add
or
jbe
pop
ljmp
leave
int3
dec
icebp
inc
aam
adc
or
jno
and
cmp
outsb
xor
pop
test
mov
cmc
int
sbb
and
test
das
out
fwait
push
enter
pop
sbb
jecxz
aas
aad
lea
test
xchg
ss
pushf
pop
aam
mov
out
inc
cmpsb
mov
stc
fisubrs
sbbl
stos
add
pop
dec
and
ds
and
lods
mov
xchg
xchg
ds
je
xor
in
xor
adc
lock
daa
inc
jae
xchg
cwtl
xor
or
dec
out
xchg
cmc
and
mov
test
xor
inc
in
lret
loope
xor
and
rorb
jo
mov
fistpl
pop
insb
loopne
lahf
mov
xor
lcall
imul
ret
cwtl
sub
or
add
mov
adc
sub
movsl
enter
xchg
leave
aaa
inc
outsb
loopne
movsl
cmp
cs
mov
add
dec
ds
xor
cmpsb
push
test
sbb
dec
mov
mov
outsl
leave
das
testb
or
lret
lcall
jle
lds
mov
inc
testl
fadds
cmp
icebp
mov
push
and
fidivrs
jl
mov
fnstenv
fs
mov
mov
jns
stos
mov
les
cmp
inc
int
mov
aaa
cmpsb
mov
test
inc
add
fidivrl
add
fstl
push
in
pop
jnp
addr16
ret
mov
xor
xor
mov
jae
xor
les
or
icebp
adc
cmpsl
andl
test
dec
mov
outsb
mov
and
inc
mov
jle
add
into
sub
lret
or
mov
mov
enter
jae
mov
jge
movsl
jmp
push
mov
add
shlb
aas
pop
scas
inc
xchg
jbe
loopne
in
mov
jno
adc
push
jns
icebp
mov
mov
fidivl
add
mov
fimull
jnp
mov
cmc
xchg
push
lcall
loope
in
pop
jmp
xchg
jge
dec
lea
mov
cmp
out
jne
lock
mov
dec
outsb
pop
adc
mov
ret
pop
nop
aam
mov
jnp
mov
push
aam
and
cmp
cld
xchg
movsb
xor
jne
imul
fisttps
sub
ss
push
lcall
inc
add
jns
rol
mov
add
adc
sub
and
scas
test
cmp
fisubl
xor
push
pop
int
lds
outsl
push
xor
aad
aas
lea
lret
inc
cltd
ds
lret
mov
and
outsb
mov
pop
xor
jmp
call
and
movsb
in
out
cmp
insl
dec
and
xchg
ja
and
xchg
outsb
mov
xlat
cmpsl
cmp
dec
cmc
push
es
push
cmp
xchg
push
loope
jae
popf
shll
xchg
lock
adc
clc
stc
int
jns
daa
inc
insb
push
sub
or
mov
roll
pop
pop
push
scas
dec
pop
or
jge
add
lods
negb
dec
movsl
stos
dec
or
fwait
cmc
pop
xchg
or
inc
sahf
into
mov
cmc
sub
mov
ja
mov
add
int3
cmpsb
or
repnz
fimull
les
jbe
add
rclb
cld
push
sub
mov
imul
mov
fimuls
aaa
and
fwait
test
and
cwtl
inc
in
stos
xor
nop
sbb
sbb
loope
inc
sarl
push
inc
fldl
inc
es
sub
dec
popf
adc
lds
cli
mov
jge
sbb
leave
lds
call
adc
ret
dec
rorb
push
or
lahf
and
sti
into
jg
inc
jge
dec
sbb
imul
pushf
mov
ficomps
lods
jmp
es
les
fsubrs
adc
ror
iret
sub
mov
scas
mov
adc
arpl
mov
and
cmpb
sub
loop
pop
in
inc
stc
sbb
push
repnz
aam
push
je
test
and
out
dec
and
inc
cs
shl
add
nop
arpl
inc
pusha
std
inc
pusha
filds
mov
sub
sbbb
aam
dec
mov
xchg
jae
cmpsl
push
cli
dec
int3
cwtl
movsb
cwtl
test
sbb
insl
or
push
rcl
xchg
cmp
inc
shl
lahf
aaa
movsb
out
or
popf
adc
pop
pop
mov
mov
mov
les
push
sub
mov
scas
mov
push
push
pop
pop
and
xlat
lret
pop
xor
and
mov
add
aam
push
dec
mov
push
aad
jnp
fisttpll
repnz
outsb
scas
and
in
sti
inc
xchg
cmc
adc
rorb
or
jmp
ret
dec
js
mov
xor
xor
jmp
je
mov
ret
int
pop
and
popa
mov
pop
test
xchg
xchg
pop
daa
dec
push
cmp
mov
gs
popa
mov
fadds
lahf
enter
pop
outsb
out
inc
jmp
dec
loopne
loopne
sahf
in
jno
rcrl
or
xchg
repnz
mov
inc
fsts
pusha
ret
inc
jl
mov
mov
push
aam
into
sbb
ljmp
sbbl
lods
je
mov
pop
mov
lea
mov
lahf
dec
inc
popf
lods
mov
je
and
mov
out
and
addb
mov
push
sub
std
fistpll
out
and
movsl
add
not
adc
jle
repz
add
mov
inc
mov
push
loop
add
pop
sbbl
mov
xchg
push
or
cmpl
roll
test
call
into
das
cmpsb
jo
je
push
mov
inc
adc
sub
mov
sub
testb
dec
sarb
mov
stc
mov
dec
jmp
adc
cmp
mov
jno
insl
mov
mov
add
cmpsb
test
nop
jmp
dec
popa
xorl
push
shl
mov
inc
pop
filds
or
lahf
mov
aam
fwait
push
jns
dec
popf
sti
fdivrl
mov
lcall
mov
mov
inc
adc
iret
movsb
lret
or
mov
sub
push
pop
nop
shll
pop
fadd
add
sbb
repnz
negl
or
inc
inc
push
mov
jge
inc
cltd
mov
xlat
and
and
arpl
or
sub
aad
jecxz
mov
sub
into
je
loope
push
cltd
lods
imul
cmp
xor
and
inc
and
cmp
fstpt
lcall
imull
or
int3
mov
mov
inc
pop
mov
push
jl
stos
or
test
mov
sbbb
imul
jbe
shrb
mov
push
pop
mov
mov
je
sub
arpl
ret
fcompl
lds
and
push
jns
sbb
adc
push
push
xchg
push
outsb
imul
fisttpll
int3
stc
sbb
sub
into
mov
out
lcallw
xor
pop
xchg
push
jg
outsl
idivl
push
jge
sahf
mov
jae
cli
dec
add
insl
loope
call
dec
mov
jne
xchg
aaa
xor
mov
dec
dec
sub
out
adc
pop
adc
mov
jnp
inc
sub
or
mov
or
faddl
imul
mov
cwtl
add
sbb
testl
imul
and
or
inc
inc
fsubrl
mul
cwtl
call
fbstp
add
loop
pop
cld
sbb
lea
jge
add
mov
mov
xchg
push
add
or
dec
mov
adc
mov
xchg
push
daa
pop
mov
mov
fnstsw
out
ljmp
stc
jg
sbb
insb
pop
inc
mov
jo
add
ja
cmp
fcoms
addr16
into
jecxz
cld
xor
pop
mov
sbb
sbb
fwait
jp
xor
adc
loopne
sub
mov
test
adc
pop
addr16
dec
insl
cmp
ret
sarl
push
lcall
imul
roll
jns
jbe
int3
es
hlt
loop
ja
int
sub
mov
and
int3
int3
lahf
push
sub
call
jge
out
lods
clc
push
roll
mov
mov
pop
pop
lock
fmul
mov
pop
cltd
aas
std
sarl
iret
mov
xchg
pusha
mov
add
stos
cmp
sbb
dec
lods
fwait
stos
pushf
xchg
adc
adc
jge
mov
ds
or
adc
cs
push
pop
and
dec
mov
mov
shll
ret
jbe
and
mov
cmpl
dec
iret
popa
sbb
loop
jae
sub
loope
incl
xchg
outsl
and
fmul
pop
aam
push
movsb
hlt
pop
sbbl
adc
push
fdivrs
push
inc
sub
xchg
mov
out
in
xchg
cmp
rclb
inc
fistpl
outsb
and
rcrl
jmp
int
mov
and
shrl
data16
inc
mov
dec
lret
js
dec
mov
cltd
cmp
adc
hlt
adc
sbb
test
scas
pushf
inc
jecxz
imul
movsb
nop
movsl
dec
mov
iret
xor
fucomp
xorl
add
insb
push
in
mov
jl
push
or
mov
lds
push
data16
int3
mov
adc
jp
int3
mov
cmp
pop
shlb
xchg
jne
pop
es
jecxz
push
jo
pop
jmp
rorb
std
int3
inc
insl
dec
jge
jmp
pushf
insb
xor
mov
push
cld
sarb
adc
mov
cmc
sub
rorl
leave
movsl
dec
dec
sahf
sbb
not
pusha
and
mov
stos
cld
sbbl
jp
cmpsl
push
scas
sub
or
push
add
fiaddl
mov
in
into
jns
mov
mov
fidivl
mov
inc
jg
mov
fstpt
in
outsl
mov
xor
divl
xor
mov
mov
and
adc
pop
sub
push
shlb
insl
push
adc
jae
mov
mov
inc
enter
pop
add
push
push
movsl
ret
and
sbb
jb
shrl
sbb
fisubl
sub
adc
lret
sub
insl
nop
mov
inc
mov
fst
idivb
inc
jg
mov
jae
lods
roll
add
mov
sahf
int3
mov
sbb
add
mov
jno
pop
xchg
popa
sbb
sbb
mov
fcmovu
jp
cmp
mov
push
inc
and
test
dec
add
fists
mov
xor
pop
sbb
sbb
pop
mov
cmp
ja
cwtl
push
mov
dec
repz
stos
daa
cli
jge
je
das
mov
sahf
and
inc
inc
xor
lock
cs
xor
cmc
test
int3
cmpl
mov
mov
fcoml
mov
inc
or
and
rcr
push
cmpl
stos
movw
xor
sbb
mov
mov
adc
push
imulb
inc
dec
push
jae
mov
xor
add
push
loope
dec
bound
adc
movsb
dec
inc
lahf
push
fmul
sarb
sbb
dec
sub
mov
rorb
mov
xchg
cmp
aam
andl
shll
cli
loope
push
push
mov
mov
inc
sahf
cwtl
push
hlt
dec
adc
sbb
loopne
int3
aad
lods
lds
or
sahf
test
out
sbb
jmp
lret
movq
inc
imul
mov
repz
movsb
jge
idivl
and
out
pop
sub
xchg
call
jmp
dec
aad
movsb
ljmp
ja
movsl
dec
sbb
les
push
dec
adc
cwtl
or
pop
and
rcr
jge
dec
in
imul
xchg
pop
ss
mov
pop
fs
dec
add
movb
lods
jge
pop
push
cli
jmp
dec
repnz
inc
movsl
test
in
lods
xor
mov
add
add
scas
decl
jle
pop
mov
xchg
pop
repnz
sub
mov
cmc
mov
lock
jbe
jp
les
sub
jecxz
cmp
jl
in
rcrb
add
inc
and
xchg
dec
push
push
mov
or
xorb
int3
inc
pop
cmp
pop
sub
aam
fisubrl
xor
pop
sbb
and
je
in
fldl
int3
xchg
andb
mov
push
mov
loopne
mov
pusha
pop
lea
nop
cli
jns
mov
daa
push
sub
and
out
push
mov
xchg
xchg
test
and
or
lret
mull
xchg
inc
mov
adc
sbb
sbb
sub
dec
inc
cmp
rep
pop
dec
stos
pop
cmpsb
js
mov
adc
dec
sbb
icebp
ljmp
mov
ret
cmp
lcall
or
dec
cld
gs
cli
sbb
popf
inc
cwtl
int
push
pop
xlat
mov
outsl
cmpsl
lret
fnsave
pop
xchg
nop
mov
nop
mov
ss
test
pop
pop
jae
test
andl
dec
loop
repnz
and
add
sub
stos
add
out
lods
and
or
adc
jo
jo
jnp
fsubp
imul
shlb
mov
sub
sti
cmpsl
sahf
inc
icebp
loopne
jne
push
les
jecxz
out
xchg
or
jecxz
ja
mov
pop
fwait
pushf
icebp
enter
shl
and
mov
lret
sarl
push
out
repnz
jg
aas
insb
inc
iret
push
fwait
repnz
rorb
insl
outsl
pop
dec
or
add
xchg
mov
mov
lret
push
add
dec
sahf
cmpsb
push
push
clc
jo
test
stos
cwtl
arpl
jmp
rorb
sub
lods
in
inc
lods
xor
notb
pop
fidivrs
and
les
jle
lret
cmpsb
lods
aam
stc
add
lods
call
jecxz
sbb
mov
xchg
pusha
and
push
aaa
ja
mov
arpl
pop
enter
bound
and
sbb
adc
imul
lret
mov
or
pop
aaa
std
inc
jo
add
sbb
push
sub
or
sub
xor
or
insl
xchg
pop
sub
fs
xor
cmp
or
nop
cld
mov
pop
shlb
loopne
lock
add
adc
and
xor
pusha
cmpsl
jo
addb
mov
pop
shlb
loopne
lock
add
adc
and
xor
pusha
cmpsl
jo
addb
mov
pop
shlb
loopne
lock
add
adc
and
xor
pusha
cmpsl
jo
addb
mov
pop
shlb
loopne
xor
add
mov
loopne
imul
pop
push
mov
mov
sub
je
dec
jne
cmpw
je
cmpw
je
xor
jmp
movzwl
push
pushl
call
push
pop
pop
ret
push
mov
push
push
cmpl
push
mov
je
cmp
je
push
lea
push
push
movb
movb
call
call
mov
mov
xor
xor
call
mov
xor
call
mov
mov
mov
movzwl
movzwl
xor
xor
movzwl
xor
xor
test
jne
mov
call
pop
pop
not
mov
pop
mov
or
mov
leave
ret
push
call
call
pushl
push
push
call
add
call
xor
mov
test
setne
mov
ret
push
mov
sub
mov
andl
andl
push
mov
push
push
movl
movl
movb
movl
movb
movl
mov
movb
call
push
push
mov
call
push
mov
pushl
movl
movb
movl
movb
movl
movb
movb
call
mov
lea
push
movl
call
pop
leave
ret
fcomp
pop
enter
call
dec
cwtl
pop
test
pop
fmuls
js
push
mov
fcomps
imul
sbb
enter
mov
push
test
mov
enter
call
sub
fmuls
sbb
push
mov
sub
fcomps
and
sub
shll
lods
dec
fildl
sub
or
pushl
xor
sbb
sahf
cmp
or
pop
ja
mov
daa
mov
jns
in
insl
addr16
push
pop
fisubl
sbb
clc
dec
inc
enter
mov
sbb
sub
std
mov
dec
xor
call
enter
fadds
adc
push
mov
mov
cmpsl
aaa
cmp
pop
loopne
adc
mov
xchg
test
or
hlt
sub
dec
pop
aaa
loop
std
adc
in
rolb
aaa
sub
jne
cld
or
mov
enter
call
sub
fmuls
js
push
test
mov
enter
orl
pop
clc
mov
adc
lds
int3
imul
clc
xor
sub
inc
test
and
pop
ret
jnp
arpl
pop
cmpsl
js
xchg
jbe
or
sbb
enter
call
sbb
sub
pop
enter
call
sub
fmuls
js
push
test
mov
and
push
adc
int3
outsb
fistpll
movsl
lods
mov
iret
or
pushf
ss
lock
dec
fsubr
adc
cmp
lret
gs
cmp
imul
shrb
lea
mov
cmp
aas
pop
and
jl
sub
aas
or
leave
repz
outsl
out
jmp
pop
jl
sbb
and
inc
sub
jnp
lret
pop
pop
and
fcmovnb
and
pop
out
pop
xchg
fwait
pop
mov
add
int3
sbb
enter
dec
mov
mov
dec
fsubs
jp
push
lret
or
sbbl
sbb
in
mov
cmp
rcll
out
aaa
add
cmp
dec
aad
add
pop
xchg
aam
xchg
xor
movsl
jecxz
mov
sbb
addl
pop
rcrb
sub
dec
jo
xor
dec
leave
push
out
jge
out
cld
repnz
ret
add
lock
mov
scas
sbb
push
and
adc
xorl
add
movsl
scas
inc
and
fsubl
jno
pop
pop
push
into
push
into
mov
je
cmpsl
ja
jg
aaa
in
adc
out
mov
lock
inc
add
ljmp
dec
cltd
mov
mov
fwait
mov
jb
fsubrs
out
into
popa
jmp
sbb
loopne
and
jae
mov
mov
mov
sarb
into
js
out
add
sub
fcmovnbe
sub
decl
push
lods
mov
sbb
xor
ret
arpl
adc
mov
into
mov
loopne
sub
es
cmpsl
outsl
out
cmp
pop
cmpl
xchg
sub
outsl
mov
clc
aad
inc
fidivs
inc
pop
pop
ret
mov
and
pusha
loop
push
mov
and
icebp
push
sbb
stos
push
and
andl
jno
jg
add
mov
xchg
sbb
je
ja
pop
xchg
push
icebp
arpl
outsb
pushf
lds
add
sub
add
and
test
inc
mov
mov
push
xor
or
stos
daa
pusha
jae
jo
or
out
mov
pop
in
and
add
call
and
push
std
jns
sti
and
aad
aad
icebp
das
add
fldl
insb
je
push
bound
shll
das
inc
push
loope
lcall
shlb
cmp
ja,pt
ds
aad
inc
rorw
call
roll
out
popl
nop
xor
cmpsb
mov
sub
jmp
jne
imul
movsl
arpl
lcall
dec
out
and
xor
fadd
je
mov
xor
icebp
mov
add
jne
sbb
jno
cmp
rclb
lds
lret
push
mov
push
sbb
pop
mov
out
xor
xchg
movsl
fcoml
sub
cltd
inc
and
xchg
dec
and
stos
ja
jno
mov
hlt
mov
in
pop
jge
test
pop
mov
scas
out
and
test
aad
mov
push
jle
and
je
movsl
push
clc
scas
push
lods
clc
push
pop
and
or
add
cmp
xlat
int
sbb
mov
hlt
sbb
fsubr
and
mul
mov
mov
js
and
repz
data16
dec
jecxz
inc
mov
xor
push
jnp
pop
jg
jno
cltd
andl
sbb
fisubrs
push
hlt
scas
sbb
mov
or
lret
out
xor
mov
fbstp
test
das
jle
inc
repz
stos
int3
dec
jmp
xor
sbbb
adc
lods
ds
stos
pop
ds
push
jmp
fbstp
mov
xor
inc
jg
dec
mov
cmpsl
les
cmp
call
xchg
inc
add
jne
mov
xor
addr16
outsb
leave
rorb
leave
lcall
mov
push
cmc
sarb
push
mov
enter
or
xchg
sarl
outsb
lret
push
cmpsl
mov
stos
es
fidivs
ja
jae
in
js
and
dec
fmull
cli
cli
out
das
popf
jl
push
jp
cmp
xlat
xlat
es
xchg
sbb
push
mov
push
mov
adc
push
pusha
xlat
jbe
fsubl
push
pop
mov
jmp
cli
pop
jp
jl
out
xor
push
in
loope
test
pop
mov
sub
lcall
outsl
mov
shll
enter
cmp
mov
mov
ret
or
aaa
dec
out
mov
sbb
cmp
out
imul
in
pop
cmpsb
inc
fimuls
mov
pop
ljmp
add
outsb
mov
cmp
nop
pop
mov
movsb
mov
add
insl
mov
pop
out
cld
adcb
xchg
push
sti
mov
mov
sub
pop
cld
std
sbb
sbb
test
pop
and
xlat
cld
mov
cmp
out
adc
cmp
int3
dec
xchg
sbb
fcomps
into
repz
das
iret
jecxz
and
or
cmc
icebp
mov
jnp
movsl
std
pop
push
pop
addb
add
and
push
cmp
mov
adc
mov
rcrb
jle
fstpl
insl
rcll
fs
push
mov
jl
xchg
lods
gs
ficompl
nop
jmp
sub
test
cs
imulb
mov
leave
inc
mov
xchg
test
or
aam
jle
decb
xchg
les
mov
cmp
shrb
inc
popf
or
loop
mov
frstor
mov
stos
add
xor
push
lret
sbb
pop
arpl
mov
jge
or
movsb
push
sbbb
in
adc
addr16
repnz
movsb
sub
jbe
xchg
push
sarl
je
scas
shlb
gs
lods
inc
lea
cld
hlt
addr16
push
outsl
cmp
pop
pop
je
xchg
sbb
cmp
add
dec
lock
clc
add
andl
popfw
aam
clc
ja
cmp
inc
jle
dec
data16
jge
outsb
jle
sbb
sbb
push
mov
neg
js
adc
sub
fsubp
dec
sahf
xor
mov
xor
pop
je
imul
rcrb
sub
xchg
cmp
or
dec
pop
cmp
cltd
and
enter
inc
es
adc
mov
push
jge
sbb
pop
inc
sub
popf
out
es
push
inc
push
inc
into
inc
inc
sbb
shl
mov
jge
fsts
adc
mov
cli
clc
add
movsb
std
icebp
pop
ja
ficoml
js
push
mov
sub
leave
and
sub
lret
jp
es
dec
sub
push
dec
stos
inc
lret
test
push
inc
repz
ds
out
inc
mov
insl
bound
jbe
enter
mov
adc
lret
push
add
ljmp
mov
cld
fcoml
loope
cmp
add
mov
loopne
dec
xchg
xchg
xor
cmpsl
dec
sub
mov
dec
lock
loopne
pop
dec
mov
sbb
sub
aam
loop
inc
mov
jle
mov
in
out
inc
stc
push
adc
call
fisubrl
outsb
xor
jl
inc
inc
into
scas
dec
xor
sahf
pop
add
or
push
imul
mov
cmp
push
xchg
mov
orl
sub
out
jbe
cwtl
aaa
test
movl
shrl
addr16
xor
jns
stos
lods
out
ja
cmc
lcall
pop
sbb
jno
mov
test
pop
jno
add
cmp
das
outsl
jge
xor
cmpsb
pop
xorl
les
mov
js
xchg
mov
pop
repz
cmp
test
jnp
jge
pop
cmpsl
pop
jo
xrelease
mov
stos
and
and
cli
cmp
ret
add
mov
out
add
lock
jge
ss
pop
psrlw
adcl
push
xor
andb
mov
mov
sbb
push
mov
cwtl
pop
aas
cmp
rclb
imulb
jae
adc
cmp
and
mov
mov
dec
push
pop
and
pop
ss
inc
into
mov
cmpsl
inc
or
roll
mov
push
mov
pop
popf
dec
xchg
inc
cmpsl
scas
lds
xor
lods
fstl
fidivrs
cmp
in
dec
jmp
in
shll
outsl
jb
daa
pushf
xchg
mov
pop
mov
rorb
lods
mov
inc
sti
dec
insb
jae
push
sbb
cmc
test
cmp
fldl
ja
in
xchg
out
mov
pop
test
cmp
pop
mov
out
sub
in
call
mov
or
jecxz
push
push
and
or
mov
and
push
imul
fisubs
insb
cld
inc
gs
adc
jno
cs
insl
shlb
cwtl
int3
mov
test
add
in
out
mov
add
jb
jnp
stc
pusha
mov
fistps
dec
stos
aam
cmp
in
mov
adcl
fimull
sub
and
dec
dec
in
inc
sahf
int3
pop
cmc
data16
jae
and
outsl
in
xor
in
inc
push
xchg
es
fwait
jge
mov
cmpsl
out
scas
dec
mov
push
jo
stc
adc
add
mov
fwait
outsb
cli
idivl
and
scas
jg
fsts
jp
push
test
mov
sub
jmp
pop
cld
lods
popa
mov
notb
arpl
mov
mov
scas
rclb
loop
jmp
mov
int
daa
sub
lock
push
push
pop
lods
pop
movb
jmp
pop
outsl
or
xchg
inc
push
lcall
sbbl
jnp
loop
and
arpl
cmp
inc
test
iret
sarb
xor
aaa
jbe
sbb
sbb
outsl
and
das
and
fisubl
lea
inc
arpl
cmp
pop
in
das
sbb
outsb
dec
lods
cltd
or
xor
out
add
xchg
in
sbb
cmp
inc
xchg
push
cmpsl
rdtsc
rcrl
mov
gs
sbb
pop
xchg
push
dec
daa
push
pop
mov
adc
test
fmull
sub
scas
mov
or
mov
pushf
add
mov
in
sbb
push
push
push
pop
lahf
or
inc
jecxz
into
xchg
jecxz,pn
ja
jmp
movsl
inc
mov
push
xor
inc
fisttps
mov
or
pop
push
repnz
rolb
xchg
lock
xchg
pusha
push
xchg
and
and
cmp
pushf
dec
ja
aam
sbb
jnp
fldt
insl
push
jl
and
aas
inc
mov
mov
jnp
or
sub
sub
and
shlb
adc
mov
push
andl
cmp
orl
lret
lods
jo
push
fistps
mov
movl
add
xchg
push
mov
xchg
cwtl
mov
adc
jnp
outsb
sarb
test
js
stos
cmpsl
mov
adcl
mov
push
and
pop
roll
add
sbb
jecxz
jbe
mov
and
fnsave
fs
sbb
xor
or
xor
jle
pop
add
das
inc
add
jo
pusha
jp
xchg
test
pavgw
xorb
rorb
adc
clc
jle
jle
sbb
sub
pusha
push
pop
sbb
jmp
in
icebp
xor
jbe
sbb
notb
je
scas
mov
movsl
ljmp
jne
mov
insb
fidivs
inc
clc
add
lods
lcall
fsin
mov
or
adc
ret
stos
xor
outsb
js
shr
sub
jae
fcomps
adc
repnz
mov
rcrb
notl
pop
imul
sub
jmp
loope
lods
cmpsb
call
xlat
sbb
or
xor
inc
out
sbb
fbld
mov
push
xor
xchg
dec
fadds
out
scas
movsl
cld
xchg
loope
xchg
push
shrb
cmp
lahf
neg
or
cmp
data16
adc
mov
cmp
sub
stos
mov
dec
mov
les
pop
outsb
sbbb
mov
jge
or
xor
mov
in
xchg
mov
ffreep
mov
outsl
out
shll
jne
push
call
outsl
add
pop
lds
loopne
std
sarl
jbe
push
int
nop
and
scas
cmp
mov
aam
xor
lods
xor
aas
add
aas
inc
jl
xchg
jecxz
xchg
aad
into
cmp
cwtl
and
xchg
mov
lcall
repz
pop
add
arpl
das
int3
stos
xchg
jb
mov
out
pop
dec
lahf
cmp
mov
lret
movsb
popa
lods
mov
icebp
mov
subb
push
xor
pop
jae
add
les
or
icebp
jle
xor
hlt
xor
mov
mov
sti
push
xor
mov
fsts
xor
push
lret
cmp
addr16
loop
pop
push
out
fnstsw
pushf
testb
push
repz
out
mov
ja,pn
xchg
shll
adc
in
adc
insb
int3
stc
cmp
int
in
push
or
jl
sbb
ljmp
sub
leave
pop
jge
in
sarb
lods
mov
addr16
rolb
movsl
sbb
sbb
mov
jecxz
icebp
sbb
cli
push
pop
ficoml
clc
jecxz,pn
sub
fildl
sub
jle
lock
and
das
fmul
gs
test
inc
test
scas
mov
fcoms
fcomp
sub
sbb
xchg
and
push
aam
sti
shlb
sbb
pop
cmp
pop
inc
mov
mov
frstor
pop
mov
cwtl
outsl
ljmp
jb
or
ret
mov
enter
lods
jno
ja
in
mov
cmp
das
sub
outsl
adc
push
loop,pt
push
jecxz
push
xor
popl
scas
fcomps
mov
inc
pushf
pop
aad
push
movsb
and
arpl
test
pushf
or
mov
push
xchg
mov
fcoml
ljmp
out
cmpsl
jecxz
lods
dec
loop
or
push
cmpsb
stc
mov
aam
sub
mov
cmpsl
mov
ficompl
shlb
jle
loop
sbb
fisubrl
pop
cs
xor
mov
dec
xchg
outsl
mov
data16
xchg
and
int3
and
xchg
push
shl
into
sbb
lods
mov
into
sub
adc
push
inc
or
jg
pop
and
and
fldl
sub
push
push
sti
jnp
and
inc
outsl
inc
sbb
out
sub
clc
call
mov
adc
cmp
stos
lds
mov
imul
cmp
pop
xlat
cmp
insl
popf
push
sub
cmp
xor
gs
cwtl
and
cmc
ss
loopne
loop
ja
pop
mov
filds
or
test
add
popf
sbb
popa
inc
fisttpll
out
sbb
test
lds
jle
cmp
add
adc
xor
dec
outsl
fdiv
adc
fidivl
dec
cmp
rorl
dec
scas
cmp
dec
cmp
mov
mov
push
mov
mov
lds
adcl
out
std
fildll
pop
in
jge
fdivrl
mov
test
dec
les
push
cmpsb
jmp
iret
mov
or
xchg
cmp
push
aam
jae
ja
adc
push
pusha
sbb
push
shrb
imul
test
cmp
pop
mov
dec
into
or
scas
pop
aam
mov
iret
popa
push
ja
jo
xor
sub
mov
movsl
pop
mov
icebp
jnp
and
ljmp
mov
addl
jmp
or
dec
lahf
ret
addr16
fcoms
pop
cmpb
cmpsb
stos
mov
cmp
in
loop
fimull
xlat
mov
movsl
cmovns
shll
mov
push
inc
pop
es
popa
mov
pop
xor
int
cmpsb
push
cld
dec
cli
dec
shlb
push
ret
rcrl
cmp
stos
in
popf
pop
xor
cmc
icebp
pop
icebp
sub
xchg
inc
inc
andb
and
std
mov
add
xor
pcmpgtb
add
adc
xor
int
fprem1
mov
mov
fst
or
bound
adc
sub
into
jo
shl
cmp
pop
mov
fists
negl
popf
daa
idivb
lods
jne
pop
sub
jl
pop
adc
or
subb
stos
shlb
inc
repz
inc
stc
icebp
into
pop
iret
insb
int
jge
jne
fwait
mov
arpl
or
mov
or
aam
aad
xchg
popf
mov
inc
mov
clc
cmp
or
add
sbb
dec
cs
mov
sbb
popf
inc
pop
je
or
sub
mov
adcb
or
or
sbb
xor
sub
shl
mov
mov
add
les
or
jno
dec
and
pop
push
dec
jns
lock
lret
loop
push
and
loope
add
jmp
enter
loope
mov
rep
sahf
sbbb
push
xor
loop
mov
xchg
fwait
xchg
insl
pop
mov
jo
push
out
push
mov
mov
cmpsl
inc
repz
pop
nop
arpl
mov
aas
lcall
push
xchg
inc
in
and
pop
xchg
jbe
mov
inc
nop
cmp
sub
bound
lahf
jae
jne
jp
push
mov
xor
pusha
or
insb
aam
or
pushf
dec
xchg
repz
sbb
mov
ret
add
orl
enter
mov
sub
adc
idiv
stc
push
popf
xor
rcrl
mov
mov
jmp
repnz
ss
popa
dec
loope
fadds
mov
repnz
mov
out
pop
mov
das
cmp
adc
clc
aad
ds
push
jne
orl
in
jnp
test
inc
lock
push
add
jne
mov
push
jno
sbb
and
jle
fsubrs
sbb
dec
in
inc
aaa
push
mov
clc
imul
enter
xlat
in
xlat
mov
jecxz
mov
stos
mov
cltd
notl
je
pop
add
in
test
sub
test
outsb
adc
adc
jnp
cli
pop
push
mov
pop
jmp
iret
inc
movsb
insl
push
test
stc
and
lcall
leave
nop
dec
xlat
mov
sbb
cli
data16
mov
push
jp
popa
outsb
sub
jmp
in
test
std
push
xchg
sub
imul
push
push
mov
mov
jne
dec
adc
or
cmp
xchg
xchg
push
movsl
pop
cmc
pop
popl
xor
fwait
sub
test
pop
cmp
mov
sbb
adc
sub
xor
ja
testl
imul
pushf
daa
mov
mov
sti
in
jno
jbe
adc
inc
cmp
xlat
ja
lods
je
iret
sub
adc
js
in
mov
inc
negb
repz
xchg
cltd
cmp
rcrb
mov
into
stos
std
xchg
jbe
dec
sub
inc
aas
mov
icebp
mov
daa
lock
mov
js
xchg
loope
jl
ror
fwait
jnp
fwait
jecxz
dec
cmpsl
cwtl
xchg
push
jo
es
or
movsl
or
fdiv
lahf
pushf
aad
shrl
adc
or
popa
movsl
cmp
push
sub
inc
leave
jmp
push
push
pushl
jp
xchg
or
mov
xchg
or
mov
lret
loopne
xchg
int3
sub
mov
rcll
out
or
inc
rcll
jbe
pushf
js
xor
pop
adc
decl
dec
cmp
scas
jp
jbe
push
mov
mov
sbb
sbb
xor
push
std
bound
iret
sbb
addr16
js
mov
test
pop
add
push
dec
pushf
ss
mov
and
in
push
mov
loopne
ffreep
jns
xchg
sti
mov
insl
lcall
addl
xchg
leave
or
inc
int
jp
pop
std
add
aad
cmp
call
mov
mov
jbe
sbb
ret
test
push
or
pop
ja
push
frstor
cmp
and
pop
push
push
mov
out
cmp
jnp
ss
cld
xchg
enter
call
sub
fmuls
js
push
test
mov
enter
call
sub
fmuls
js
push
test
mov
dec
push
cwtl
sbb
sub
fmuls
js
push
test
mov
enter
call
sub
fsub
inc
js
pop
call
inc
xlat
out
add
mov
fwait
cmp
push
xor
jnp
cmp
outsb
lret
jnp
dec
sti
pop
sti
mov
sub
pop
lret
imul
jnp
cmp
imul
sti
jno
cmp
or
push
mov
out
and
push
jp
dec
mov
mov
mov
fwait
jb
pop
in
mov
movsb
mov
mov
add
nop
in
mov
ds
pop
push
cmpsl
push
in
pop
mov
adc
mov
loope
repz
or
jae
mov
ljmp
hlt
stos
pushf
mov
arpl
jecxz
imul
pop
hlt
pop
in
xchg
fcomi
fstpt
pop
ret
sbb
sub
or
imul
xor
test
fldt
sbb
inc
out
jns
pop
popa
movsb
xchg
xor
je
pop
fistl
js
cmp
fwait
hlt
out
sbb
sbb
cs
add
sti
je
lock
mov
rorl
sbb
push
adc
jmp
or
and
dec
mov
fsts
add
int3
dec
jmp
lahf
fldcw
sbb
sub
cmp
pop
mov
jecxz
jp
add
sbb
stos
jae
sbb
pop
push
cmpb
imul
fbstp
sbb
sbb
sti
dec
fimull
daa
sti
pop
lret
imul
sub
sbb
dec
jmp
sti
stos
or
cmp
dec
sti
pop
lret
imul
sub
sbb
dec
jmp
sti
stos
or
and
les
cmpsl
jbe
ds
xlat
mov
lock
les
and
call
aaa
or
push
xchg
and
scas
fstpt
mov
and
xchg
or
cli
mov
add
orl
lds
jb
xor
pop
mov
mov
stc
pop
fimull
add
jno
loope
push
jmp
ret
scas
push
mov
dec
cs
out
sub
pushf
inc
push
out
mov
dec
and
sbb
cltd
mov
or
mov
lcall
jb
jbe
pushf
dec
dec
pop
sub
xlat
stos
jp
cmpb
ror
jg
xor
iret
xchg
pop
dec
outsb
push
push
cwtl
loop
pop
mov
pop
ja
mov
test
mov
aas
mov
pop
xor
aam
stos
data16
pop
int
in
dec
cmp
repz
pop
inc
fldl
jb
cmpsl
xlat
xchg
imul
cmpsb
pop
inc
fists
in
loope
jge
jp
clc
daa
addr16
dec
mov
adcb
adc
into
mov
pop
insl
aaa
fmulp
mov
xor
dec
cmp
push
aam
imulb
mov
dec
sti
fsts
cmpb
mov
inc
inc
push
mul
insl
out
pop
aas
les
test
mov
gs
mov
add
cmp
ss
out
or
and
subb
mov
lret
cmc
mov
xor
mov
mov
pushf
test
fcomps
mov
or
in
js
ja
jb
inc
stc
fcoms
in
pop
scas
cld
xchg
aad
mov
subl
pop
mov
stos
cld
sub
and
pop
lods
rcll
negl
test
add
pop
test
sbb
xchg
inc
out
inc
sub
ljmp
sbb
inc
and
bound
inc
lock
sbb
iret
out
rcl
in
mov
push
int3
fbld
pop
lret
fbstp
jmp
mov
or
mov
outsb
jne
jecxz
inc
xlat
inc
in
sbb
scas
mov
cmpsb
sbb
cltd
sbb
sub
shlb
sub
mov
dec
insl
xchg
sub
pop
js
or
rorb
lds
dec
ret
fxch
gs
das
push
loopne
adc
jns
fnstsw
aam
mov
mov
test
jne
loope
imul
scas
dec
xchg
push
std
inc
push
add
adc
and
lds
outsl
xchg
mov
cli
cmpsl
lds
clc
movsl
lds
sti
dec
ss
imul
ds
mov
icebp
stos
idiv
push
inc
mov
inc
xchg
add
mov
or
lret
dec
add
std
stc
xchg
add
popf
xor
fbstp
sahf
xor
mov
mov
dec
lahf
loope
jnp
lcall
sub
int3
xor
outsl
xor
sub
mov
test
sub
bound
jmp
aad
in
pop
pop
dec
mov
out
test
clc
sub
push
push
jne
maxps
jnp
sub
ret
int
test
lock
jg
jnp
pop
outsb
ds
and
cmpsl
mov
pushf
lock
mov
imul
fwait
js
das
aam
dec
pop
push
repnz
sbb
out
imul
in
fadd
mov
or
lea
lret
push
dec
mov
pop
xorb
jecxz
gs
jne
pop
mov
pop
fistpll
jne
adc
fstps
mov
fstpl
ljmp
xchg
mov
pop
xor
call
and
mov
outsb
xlat
cmp
scas
pop
adc
movsb
and
mov
jo
add
or
jbe
or
inc
cld
lds
pop
les
and
mov
sbb
xor
stc
aaa
dec
test
pop
sbb
push
mov
sub
or
lds
fucompp
ret
fs
ret
lahf
cmc
pop
adc
jnp
mov
adc
notb
fsubs
xlat
mov
adc
xchg
loop
loope
add
popf
cmp
clc
scas
addr16
lds
in
or
pop
or
pop
jp
sbb
mov
jge
mov
push
dec
sti
xor
jnp
popa
ret
lea
mov
jns
adcb
rol
fsubl
dec
mov
mov
out
mov
out
leave
divl
adc
xchg
jae
scas
dec
out
cmp
or
cmp
imul
gs
mov
sub
or
xchg
adc
xor
sub
int
push
lds
and
xor
ret
mov
psrlw
out
mov
call
lahf
or
cs
adc
jb
sub
out
cmp
sbb
sub
lahf
sbb
and
movsbl
int
jecxz
stos
cmp
sbb
scas
cmpsl
stos
inc
adc
das
fnsave
lret
pop
les
test
aam
jmp
mov
mov
lds
sub
mov
mov
and
or
add
jne
xlat
sbb
sbb
es
and
out
mov
or
scas
dec
push
imul
adc
scas
repz
repz
jno
push
xchg
and
je
mov
data16
and
sub
mov
and
into
push
jmp
xchg
out
inc
jmp
mov
rclb
insl
push
cmp
movsb
cltd
jnp
inc
add
mov
and
xchg
mov
arpl
push
mov
dec
pop
push
mov
pop
imul
xorl
and
pop
mov
lcall
jno
mov
xchg
movsl
pop
push
addl
cwtl
fistl
sti
sub
add
and
es
test
jl
jbe
call
sub
adc
cmc
in
imul
cmp
jns
jbe
stos
mov
lret
scas
jo
lret
roll
or
and
enter
jle
loop
mov
out
aaa
add
fbld
call
lcall
add
xchg
fimull
mov
jae
nop
hlt
cmp
sub
dec
sti
xor
scas
out
xchg
push
or
pop
push
and
arpl
lcall
int3
jb
push
dec
cmp
jmp
pusha
popf
jmp
imul
lahf
jp
xchg
mov
loopne
lods
jo
push
sbb
dec
shll
pushl
pop
mov
dec
mov
mov
das
sub
xorb
dec
adc
inc
stos
push
sbb
mov
dec
lret
inc
fstpl
insb
andb
cwtl
pop
mov
ljmp
jnp
jnp
lds
sbb
and
mov
sbb
cmp
daa
jo
push
add
adc
lahf
xor
out
or
cmc
mov
inc
gs
in
loopne
dec
and
rol
sarb
xchg
add
mov
insl
scas
mov
cmp
inc
mov
pop
sbb
add
fbld
ret
movsl
test
xor
pop
mov
push
out
cld
pop
adc
and
xchg
movsb
add
loope
pop
or
out
mov
or
pop
cwtl
add
cmpsb
mov
out
or
fcoml
jp
rclb
mov
mov
lcall
or
fisubrs
sti
xor
xor
pop
push
cwtl
add
fs
ja
mov
xor
push
ja
push
xor
cmpsb
jp
push
lret
jmp
nop
pop
mov
insl
gs
lcall
push
sbb
inc
pop
or
or
int3
and
and
clc
inc
out
sbb
test
loopne
inc
xor
out
sub
and
int3
ror
fcmovnbe
pop
push
push
push
inc
repz
rcl
les
movsl
ret
icebp
in
adcl
leave
sbb
dec
jmp
inc
push
push
sbb
movb
fisttps
dec
jne
mov
xchg
mov
jecxz
pop
and
dec
jl
out
push
mulb
decl
mov
roll
push
std
cmpsl
mov
leave
bound
xchg
stos
setae
arpl
push
imul
fadds
lret
jns
push
fsubrl
sub
pop
stos
adc
imul
and
andb
iret
inc
fldl
mov
xchg
outsb
test
mov
imul
mov
scas
sbbb
mov
dec
lock
dec
pop
xchg
insl
jnp
push
mov
cmp
orb
aad
repnz
sub
jl
mov
mov
sbb
lods
xchg
adc
lods
dec
adc
loopne
mov
xchg
jecxz
pextrw
pop
in
in
xor
loopne
push
adc
ss
sub
movsl
adc
and
lds
sbb
jae
mov
inc
ret
mov
inc
outsl
and
dec
fcmove
pop
add
daa
dec
ja
xor
inc
daa
jecxz
sub
aaa
pop
jbe
imul
jnp
stos
mov
mov
orl
aad
jecxz
or
sub
sub
in
ss
sbb
cmove
sub
jae
push
push
adc
inc
ffree
inc
nop
xlat
mov
xor
testl
cs
inc
mov
push
ljmp
xlat
jns
jbe
jmp
fucomip
rolb
das
fyl2x
cmp
cltd
xchg
ss
jge
or
test
push
mov
pusha
xchg
jbe
xchg
imul
xchg
sub
fdivrp
lock
out
pop
shufps
outsb
mov
in
xor
and
pop
ss
sub
pop
cmpsb
or
filds
dec
fstpl
and
mov
fcmove
push
outsb
in
jb
imul
dec
lret
or
jmp
jp
shlb
lret
dec
insl
xchg
push
xchg
adc
cmp
lret
push
xchg
cmpl
adc
aaa
mov
std
inc
push
scas
dec
xchg
mov
mov
insb
dec
or
sub
insl
cmc
mov
aam
leave
lret
mov
ret
lcall
scas
popa
cli
add
adc
push
push
inc
lret
test
cmpsb
mov
mov
mov
ljmp
and
dec
cmp
push
inc
and
adc
mov
test
adc
scas
mov
push
sub
out
imul
rorl
in
popf
pop
mov
in
xchg
js
jge
inc
or
fwait
arpl
or
cmc
cmp
mov
cmp
sbb
add
push
and
in
push
repz
sahf
cltd
sahf
dec
jp
dec
push
mov
je
mov
dec
push
jg
mov
and
mov
imul
ret
fadds
stc
repz
ljmp
cmp
je
cmpsb
xor
or
jle
lea
sbb
inc
cmc
jae
and
iret
pushl
sti
inc
cmp
scas
and
scas
lods
adc
push
fidivl
pusha
push
push
adc
adc
sub
and
test
faddl
cmp
xor
xor
pop
lahf
sbb
mov
pop
sub
insl
popa
add
or
sysexit
add
xchg
rorl
dec
lcall
mov
jle
jne
sbb
or
cld
movb
imul
std
into
test
fimull
mov
pop
lds
inc
mov
xchg
cmp
jl
stc
and
jae
scas
sub
adc
jl
push
pop
mull
loop
fildl
lods
sub
es
inc
fst
cmp
mov
pop
adc
sbb
lahf
mov
ret
pop
xchg
dec
andb
mov
sub
and
fisubrl
push
push
cmp
adc
mov
aaa
rolb
das
dec
pop
jno
mov
sahf
les
lds
mov
dec
adc
in
enter
pop
lret
add
test
ret
in
adc
enter
and
push
sub
es
adc
xor
aam
add
cwtl
push
or
sbb
and
mov
pop
testl
cmpsb
pop
xchg
dec
mov
lods
stos
or
sbb
rep
mov
dec
and
cmc
scas
inc
xchg
mov
dec
fistps
std
and
js
xor
jbe
push
ss
add
add
mov
aaa
roll
repnz
pop
mov
and
or
sub
mov
lods
fmull
shll
xchg
fs
fmuls
fisttps
pushf
xlat
inc
aad
repz
push
rorl
or
add
push
xchg
jge
mov
icebp
jb
xor
pushf
scas
or
or
xchg
fisttpll
fsub
and
shrb
jmp
into
jne
or
jne
rcrb
mov
dec
xchg
jb
outsl
xchg
leave
lock
push
pop
dec
cmpb
lds
std
cmp
outsl
push
mov
jp
adc
scas
into
jmp
xchg
and
test
mov
fsts
dec
aam
sub
add
pop
add
dec
xchg
mov
xor
fidivs
add
scas
mov
inc
int3
mov
divl
loop
pop
fbstp
ret
in
bnd
xor
dec
pop
js
stos
clc
jmp
mov
cwtl
cli
decb
pop
mov
inc
push
cwtl
dec
add
push
mov
inc
sub
inc
jne
or
mov
mov
arpl
je
sub
pop
popa
mov
add
mov
dec
aad
cmp
inc
arpl
or
mov
arpl
push
sbb
popw
jg
cmp
dec
sbb
lret
js
outsl
jg
adc
mov
pop
das
cld
or
jnp
and
jns
in
xchg
sub
jl
mov
mov
rclb
push
jl
xabort
add
or
sar
mov
loope
cmpl
dec
dec
test
test
add
mov
xchg
mov
jge
fsubrl
dec
shrb
mov
icebp
dec
xchg
jg
clc
fwait
outsl
sahf
ret
cld
repz
and
mov
lds
dec
out
push
lea
dec
imul
or
aad
rclb
loopne
push
and
int
in
imul
xchg
ss
es
out
dec
or
in
filds
mov
cld
push
sbb
fisubs
popf
xlat
jge
or
push
call
or
push
dec
daa
sahf
xchg
jg
rcr
lea
inc
rcll
mov
dec
or
ret
pop
js
rcr
cltd
inc
xor
ret
xor
or
aad
mov
xchg
add
pop
or
jmp
out
cltd
pushf
inc
mov
rorl
cltd
sbb
dec
adc
int3
push
jnp
push
xor
ds
xor
hlt
pushf
call
aaa
xor
je
jg
push
mov
cli
dec
das
inc
add
jmp
jo
roll
dec
dec
stos
rorb
mulb
es
or
repnz
sbb
mov
push
mul
clc
cmp
xchg
notl
push
push
rol
sub
cld
fwait
int3
mov
add
xor
jno
adc
das
add
cmpsb
inc
inc
xchg
lock
cmpsl
call
dec
mov
jne
outsb
test
sbb
or
fidivs
sbb
push
pop
push
mov
add
push
pop
fdivp
cmp
cmp
ret
xchg
ficompl
repnz
pusha
pop
xor
adc
sub
jmp
pop
sbb
dec
xchg
xor
les
xor
imul
fdiv
pop
or
cltd
cmp
cmp
lods
mov
and
iret
js
push
xlat
xchg
imul
test
adc
push
mov
repnz
cmp
out
jg
adc
mov
xchg
gs
es
adc
inc
mov
jg
xor
ss
push
cli
std
aas
mov
dec
sbb
dec
call
cmp
enter
sbbl
aam
sbb
aas
fldt
xor
rclb
test
stc
jg
jg
nop
in
push
or
add
fadds
imul
cmpsl
stc
fcmovbe
mov
cld
adc
fs
cld
adc
xchg
xchg
xor
ds
sub
mov
stc
or
pop
xor
out
sbb
lods
inc
cmc
mov
push
push
loopne
mov
push
shll
or
sbb
stos
dec
je
cmpb
cmp
into
out
sbb
test
scas
ret
psubsw
mov
mov
mov
xchg
jmp
lahf
or
push
push
sbb
rcrl
gs
cmp
jmp
dec
mov
cld
int3
add
push
insl
cmovle
sbbb
push
push
aaa
jns
std
faddl
and
or
scas
insb
ret
rolb
test
or
pop
lret
add
jmp
jp
cmp
cmpsl
mov
scas
imulb
aad
inc
lods
mov
in
mov
push
cmpsl
cmpsl
cmp
gs
mov
icebp
repz
push
add
cmp
jno
pop
sub
or
sbb
adc
pop
les
mov
sub
xlat
mov
ret
test
sub
jle
or
daa
scas
push
clc
js
sub
xor
mov
mov
out
push
jnp
gs
sub
testb
in
inc
aas
stc
and
push
into
pop
jge
pop
dec
push
pop
cwtl
addl
lods
clc
dec
cli
jmp
das
inc
cld
js
fwait
test
jge
cmp
rorl
imul
or
and
pop
mov
je
scas
push
xchg
mov
jmp
clc
ftst
movsb
imul
neg
mov
aaa
lcall
jmp
sbb
ja
ja
mov
and
xchg
mov
jge
cmpsl
sbb
jmp
xchg
shlb
or
add
sbb
es
in
adc
insl
cltd
js
xchg
stos
outsl
mov
adc
insb
mov
subl
mov
dec
pop
and
sarb
outsb
notl
fs
jle
lock
add
sarl
daa
and
arpl
cli
mov
stc
mov
xor
prefetch
or
call
fisubs
gs
cltd
fmuls
test
inc
jp
and
out
shlb
sub
je
rcrl
jne
pop
push
fdivrs
test
mov
call
dec
push
cmp
aam
aad
sti
mov
or
pop
das
cmpl
sti
xchg
into
fadds
pop
cmp
mov
loop
add
or
ja
jmp
mov
and
nop
ss
adc
adc
adc
cmc
cmc
lods
cmp
push
adc
xchg
push
lds
add
mov
movsl
int
dec
fimull
cmpb
mov
add
enter
fdivs
jns
das
pop
cmpsb
mov
aaa
xlat
out
xor
frstor
add
jg
pop
ss
mov
and
xor
push
in
xchg
clc
outsb
cmp
xor
push
push
mov
xchg
loopne
mov
sbb
dec
inc
dec
or
outsb
imul
es
push
pop
and
mov
sbb
xchg
test
and
and
jbe
fisubrl
bound
shlb
mov
js
fildll
imul
pushf
or
mov
leave
fwait
movsl
xchg
sub
mov
outsb
jb
in
xor
pop
dec
push
data16
sbb
mov
test
mov
cmp
jbe
sbbb
das
lret
mov
into
xor
jns
xchg
fildl
testl
outsb
add
push
pop
lds
push
push
sub
mulb
mov
sbb
add
fwait
xchg
repnz
mov
data16
leave
test
loop
movsl
dec
or
xchg
hlt
fldenv
mov
and
out
cli
loopne
mov
jo
mov
push
dec
mov
mov
stos
aaa
fisubrl
xchg
shlb
subb
push
add
cld
ljmp
or
sbb
int3
xchg
sbb
rclb
daa
outsb
fucomp
stc
insl
sub
aam
inc
jb
lods
sbb
cwtl
adc
and
dec
gs
jnp
das
add
in
pop
loop
arpl
fwait
cltd
sarb
loope
cwtl
dec
test
sub
adc
fisubrs
xor
mov
mov
push
sbb
pop
xchg
rorb
sbb
push
xor
clc
insb
test
xchg
std
insl
icebp
loop
movsb
scas
loopne
rclb
sahf
jns
cmc
pushf
clc
mov
les
pop
lret
imul
sub
sbb
dec
jmp
sti
stos
or
cmp
dec
sti
pop
lret
imul
sub
sbb
dec
jmp
sti
stos
or
cmp
dec
lcall
imul
das
mov
fwait
add
fisttpl
imul
or
cmp
dec
jmp
lret
imul
mov
xor
inc
repz
adc
add
scas
sahf
mov
into
mov
rcr
inc
cs
ds
ds
dec
outsb
pop
outsb
dec
outsb
pop
ljmp
sahf
into
out
fdivrp
out
into
fimuls
cs
ds
push
ds
push
outsb
pop
jle
dec
jle
ss
insb
mov
shr
mov
fisubrs
cmp
push
and
sub
pop
loopne
ror
scas
ljmp
xor
aad
dec
xor
dec
or
cmpsb
push
jp
bound
cmp
push
pop
add
jae
clc
xchg
push
stos
push
ret
scas
add
outsb
dec
andl
pop
mov
int
pop
out
push
sarb
ficomps
sbb
mov
pop
push
push
idivb
xor
fsubrp
adc
decb
stos
lock
cmp
jle
jno
xchg
inc
mov
arpl
out
push
add
jne
imul
or
jb
jno
add
popl
xor
lret
pop
cmp
or
push
ret
xchg
or
pop
aad
enter
mov
out
into
pop
fmulp
test
pop
push
push
push
push
outsb
push
jle
dec
jle
out
in
insl
fcmove
fsubs
stos
scas
push
inc
dec
push
dec
pusha
pop
jo
add
pop
pop
int3
sbb
ret
out
sti
hlt
fmull
mov
fisubrs
dec
push
cs
inc
jb
add
adc
cmp
xor
repnz
in
ljmp
fimuls
cs
ds
ds
dec
outsb
pop
jle
dec
jle
mov
mov
out
into
fimuls
cs
ds
ds
dec
outsb
pop
jle
dec
jle
mov
jle
add
ss
addr16
in
cli
dec
push
adc
sub
mov
pop
xchg
dec
mov
mov
loope
iret
add
cmpsb
decb
les
jmp
scas
sub
push
lods
cltd
and
jmp
sub
pop
nop
add
dec
add
jg
sub
fwait
test
add
imul
inc
cmp
dec
mov
mov
cltd
xor
adcb
push
jge
mov
mov
mov
mov
jge
push
and
push
mov
iret
addl
fwait
dec
das
mov
outsl
out
shrl
jl
pop
scas
xor
mov
mov
xchg
push
sbb
add
push
insl
and
xor
jbe
bound
adc
dec
lods
inc
cld
dec
jne
xchg
add
mov
cmp
mov
mov
sub
xchg
cmp
call
and
mov
and
stos
sub
sub
or
push
lds
data16
pop
arpl
in
dec
rcll
jnp
scas
cmpsl
xchg
cmp
mov
mov
pop
jb
orb
mov
fwait
ss
or
stc
mov
pop
sbb
sbb
insl
insb
in
shlb
jmp
cmp
pop
inc
cs
or
roll
sbb
push
into
and
mov
scas
fdivs
mov
in
push
popa
or
call
int
sbb
cmp
add
adc
movsb
add
xor
lret
sahf
insl
hlt
das
fwait
sbb
in
in
iret
xor
es
pop
ret
fmulp
pop
mov
rclb
call
cltd
in
test
inc
stc
dec
xor
es
and
stos
xchg
inc
repnz
imul
test
lcall
test
ss
sub
bound
out
adc
mov
or
outsl
sub
inc
and
rcl
cli
and
xchg
mov
js
loope
ret
adc
jl
and
ror
lock
mov
into
add
sub
test
sub
xchg
call
dec
idivb
orl
mov
in
lret
cmc
shrw
mov
adc
push
stos
stc
out
adc
jle
add
jmp
and
xor
or
push
out
arpl
inc
aas
ret
jg
mov
aaa
lcall
cltd
cmp
cmp
cltd
push
mov
bound
cmp
push
cltd
cmp
mov
add
ljmp
or
push
ret
ljmp
and
mov
xchg
cld
rcrb
mov
shlb
or
and
into
jl
and
loop
aas
cmpsl
and
inc
mov
into
and
sahf
ret
test
mov
push
in
orl
jmp
mov
jge
sahf
imul
adc
daa
push
insl
jecxz
sub
sbbl
repnz
push
and
ds
push
mov
sub
repnz
mov
xor
or
insb
cmp
inc
sarl
mov
ja
mov
add
in
in
sub
cmpsb
rclb
push
adc
add
mov
xchg
je
pop
mov
sub
pushf
hlt
jb
clc
insl
int
aam
sub
sbbl
push
xor
int3
mov
mov
mov
mov
scas
add
add
push
cmc
jle
cmp
lcall
jb
icebp
pop
dec
cmp
hlt
lds
dec
lcall
aam
int3
sub
insl
cwtl
daa
mov
pop
mov
push
fcoms
out
iret
mov
xor
int3
xchg
nop
popa
cmp
sbb
ficomps
add
adc
add
faddl
sub
dec
popa
xor
mov
inc
sub
push
shll
sti
push
ret
out
mov
cs
pop
adc
loop
cmp
loope
scas
push
sub
mov
js
outsb
adc
nop
jge
sub
fmull
dec
popa
sub
lahf
push
add
rolb
insb
inc
bound
out
pop
stc
movsb
xchg
pop
push
xchg
dec
xchg
mov
sub
arpl
pop
and
dec
adc
lds
mov
push
inc
push
xchg
adc
adc
xlat
shlb
popf
fs
mov
xchg
dec
xor
mov
inc
push
fidivs
xchg
mov
cmp
mov
aam
or
mov
test
popa
movsb
cmp
mov
jnp
inc
cmp
mov
mov
mov
push
scas
mov
or
test
push
clc
rorl
mov
jmp
rcl
or
test
sub
add
insb
sar
or
and
mov
scas
push
flds
cmp
push
xchg
inc
and
ret
int3
ret
pop
ret
inc
call
mov
xchg
pop
movsb
test
add
xchg
xor
dec
xchg
mov
jno
out
or
lea
xor
xor
leave
mov
lea
pop
push
std
daa
aad
rcrb
outsb
in
sub
adc
in
fildll
push
and
mov
imul
add
push
push
je
movsb
sub
decb
inc
push
push
outsl
mov
out
idiv
daa
mov
sub
xor
push
fisubrs
gs
sbb
daa
xchg
sub
ret
jge
iret
ja
rorl
jl
sbb
mov
ljmp
mov
push
xor
out
in
push
js
dec
pop
les
push
adc
ss
scas
shlb
xchg
mov
ljmp
mov
mov
jecxz
dec
jae
sbbb
rcrl
and
and
arpl
and
xchg
push
mov
fcmovb
cmc
and
test
xchg
pop
add
fucomip
cmp
mov
pop
jge
sti
push
and
inc
dec
ret
aas
sbb
les
pusha
jecxz
ficompl
ss
ss
and
cmpsl
ljmp
shl
insl
enter
adc
mov
sti
ja
ja
pop
movsl
imul
loopne
and
scas
adc
or
lea
popf
push
add
mov
jg
mov
cmp
inc
cltd
pop
pop
loopne
dec
xchg
int3
sbb
aaa
outsl
inc
std
sbb
jle
adc
scas
adc
cmp
jp
sbb
shrb
inc
mov
inc
lret
xchg
push
and
pop
push
pop
xor
add
xor
or
cmpl
push
cli
scas
movsb
mov
and
sub
push
pop
mov
xchg
jg
adc
sub
addr16
fwait
pop
es
mov
push
rorb
in
jb
cmc
cmp
repnz
xchg
imul
push
fs
sub
test
cmp
roll
out
inc
insb
aaa
ret
les
or
shlb
ret
pop
dec
cwtl
fwait
out
outsb
fstpl
fnclex
and
fldenv
lods
inc
mov
or
push
inc
pushf
fsubrs
call
and
fxam
js
add
sub
rorb
mov
sbb
icebp
scas
push
nop
xchg
in
jo
or
adc
jp
bound
inc
out
push
cs
lock
jnp
sbb
lret
aaa
adc
add
out
push
je
push
mov
data16
bound
pop
push
pop
adc
sbb
sti
or
sbb
leave
movl
inc
addr16
sbb
push
cmp
and
jecxz
aad
jg
sbb
fisubrs
inc
sbb
jae
out
cmc
ja
xchg
aam
sbb
push
ret
cmp
xchg
inc
mov
lods
call
mov
xchg
jg
ss
and
stc
popf
aaa
pop
inc
test
out
cmp
mov
add
push
ss
mov
xorl
and
sahf
ds
ret
mov
push
add
pop
pop
xchg
xlat
push
xchg
lret
iret
mov
dec
popa
popf
mov
push
loopne
inc
mov
sub
mov
sbb
sbb
clc
xchg
or
xor
mov
add
in
ret
and
mov
out
pusha
rorl
addr16
cmpsl
mov
xchg
mov
and
cmp
stos
les
pop
into
fs
cmp
add
in
jns
adc
popa
push
add
mov
in
popa
push
push
rcll
xchg
sbb
jns
fstp
xchg
stos
and
fistps
mov
mov
in
lods
sbb
call
and
mov
jnp
fstpt
outsb
fidivrl
cmp
fucomi
and
fimuls
mov
mov
xor
test
loopne
or
rol
fsubr
sti
jo
inc
icebp
scas
in
jg
inc
cmpsb
lret
pop
nop
ja
fwait
iret
std
mov
xor
push
xchg
scas
mov
mov
jns
ret
jle
repnz
and
pop
fbstp
xor
fdivp
add
cs
movsb
adc
cmp
fcmovne
jmp
push
sub
ja
orb
stos
xchg
out
jae
push
icebp
jmp
fdivrp
mov
in
add
and
jno
cmpsl
sbb
dec
or
jne
xor
and
imul
xchg
push
vminsd
add
push
mov
cmp
ficompl
ret
cmc
fistpll
mulb
out
idivb
sub
add
mov
sbb
xchg
cmc
fadd
addr16
jns
sub
or
dec
adc
inc
js
sbb
mov
movsl
push
lds
lret
mov
xchg
sbb
mov
test
jmp
scas
divb
test
xchg
lret
loope
call
and
andb
or
add
mov
mov
frstor
lcall
add
jnp
sbb
jmp
mov
fcoms
push
adc
sbb
jo
jge
lret
cmpsb
loope
ret
push
jno
mov
sbb
or
sbb
frstor
xchg
jnp
lds
popf
mov
or
repnz
fdiv
test
insb
repnz
mov
call
loope
push
mov
pop
stos
inc
out
lahf
mov
lret
inc
cs
pop
lods
xor
repz
in
loopne
xchg
add
adc
sbb
aam
dec
bound
das
dec
js
add
imul
fwait
pushf
and
rcl
xchg
cmp
xchg
lahf
into
push
mov
sar
pop
jmp
decb
in
cltd
dec
call
insl
pop
clc
sahf
jg
adc
bound
fidivrl
cmp
push
test
nop
repnz
clc
insl
lahf
dec
fcmovnu
mov
mov
dec
in
mov
add
jecxz
stos
fwait
or
sbb
sub
jbe
pop
mov
dec
mov
and
sbb
xchg
stos
flds
add
lcall
fstpl
shlb
pop
bound
cmp
mov
je
xchg
add
inc
ja
orl
outsl
popf
jo
fdivrl
mov
outsl
daa
xor
and
rcrb
out
jle
iret
lds
rcr
cmc
repz
cmc
dec
pop
push
test
in
inc
sub
sbb
add
adc
jnp
loope
icebp
sbb
movb
adc
add
jecxz
xor
je
jae
mov
xchg
test
xor
xlat
mov
xchg
aad
dec
adc
or
mov
and
add
inc
jo
dec
adc
dec
in
xchg
test
adc
scas
lds
cli
ljmp
leave
pop
jl
mov
lret
push
mov
cmc
push
ljmp
adc
es
or
rcll
aaa
push
push
rcll
mov
loopne
dec
adcb
inc
mov
pop
les
js
out
lcall
popf
pop
clc
ret
sub
mov
movsl
nop
add
shrl
out
das
pop
cmp
ss
pop
or
ja
jae
push
in
add
fwait
jg
adc
dec
pop
add
and
in
into
or
push
push
mov
push
int3
test
push
imul
inc
mov
pop
imulb
cmpsl
cmpb
leave
std
cmpl
jns
push
std
dec
inc
jle
test
xchg
or
jge
fs
fdivl
push
jne
sub
outsl
jns
xchg
cli
mov
bound
xchg
fisttpl
mov
pop
mov
adc
movups
add
lods
dec
pop
clc
int
popf
loop
test
out
sti
insb
ret
mov
or
mov
inc
lahf
sbb
jbe
and
shl
sbb
scas
push
rol
and
dec
orl
lcall
or
lods
xor
shrb
mov
dec
pop
orb
sbb
fs
cmp
in
bnd
push
mov
jp
sbb
loopnew
sub
leave
clc
xchg
adc
pop
in
adc
sti
mov
repnz
pop
repz
es
icebp
inc
leave
lock
mov
sbb
add
imul
mov
cmp
stc
ja
lock
lds
daa
pop
fwait
mov
movsl
jmp
xor
push
push
dec
adc
dec
ljmp
mov
jge
add
incl
insl
sub
xor
inc
addb
mov
xchg
mov
les
sbb
cmp
cmpsb
jne
shl
mov
mov
mov
outsl
fs
mov
popf
out
jo
push
push
xchg
cmpl
bound
add
mov
or
pushf
in
addr16
pop
aad
sbb
into
mov
cli
xchg
xor
fwait
shlb
jp
aaa
daa
jne
cltd
xor
outsl
repz
mov
xor
stos
mov
dec
jb
push
repz
xchg
cmp
mov
and
xchg
dec
jmp
mov
or
ds
add
out
mulb
pop
mov
adc
gs
shrl
mov
mov
loopne
mov
in
mov
cwtl
lret
rcrl
inc
and
scas
push
in
loop
mov
cmp
inc
addr16
in
adc
stos
xor
dec
mov
scas
imul
int
sar
xchg
popa
fimuls
lods
dec
lods
lods
daa
dec
data16
cmp
jne
inc
out
xchg
bnd
nop
ror
sahf
cld
ror
push
mov
xchg
and
pop
and
push
jnp
xor
fdivr
ljmp
mov
or
cli
push
in
icebp
pop
add
iret
lods
jl
mov
xor
gs
add
inc
sub
or
arpl
xor
cwtl
shll
in
mov
out
adc
and
sbb
arpl
jnp
mov
movsb
int3
outsl
push
inc
inc
ljmp
cltd
mov
xchg
mov
mov
add
pop
loopne
xchg
mulb
call
jo
xchg
dec
into
es
test
mov
enter
adc
lcall
je
rcrl
add
add
popa
repnz
ds
or
sbb
push
xor
inc
or
stc
ljmp
daa
scas
mov
mov
or
loop
pop
lods
out
sub
push
sub
sahf
loop
mov
cmp
roll
sub
pop
mov
dec
aaa
icebp
cs
sbb
pop
mov
shll
jp
mov
mov
lods
push
add
arpl
test
pop
lea
xchg
jl
jno
inc
adc
iret
sbb
push
in
mov
insl
xchg
out
enter
mov
push
sub
push
sbb
jbe
sahf
repnz
shrl
sbb
cmpsl
dec
and
add
or
cmpsl
push
lds
xchg
fs
icebp
sub
std
or
cli
mov
jno
insl
dec
pop
add
leave
pop
popf
stos
and
insb
sub
jae
mov
sqrtps
xor
xor
pop
or
fmul
fnsave
ret
lds
dec
in
popa
pop
jmp
outsl
gs
or
mov
mov
and
enter
and
push
nop
repz
in
int
mov
xchg
hlt
imul
jae
aaa
sahf
mov
fcoml
mov
push
jmp
push
imul
push
lock
aaa
lcall
dec
mov
jmp
push
sub
pop
loope
subb
adc
outsl
xchg
jns
or
test
negl
mov
adcl
divl
stc
and
int
in
sbb
mov
dec
roll
out
fldcw
repnz
cs
sbb
popa
sub
jns
rcrl
stc
lahf
test
ds
lret
jge
stos
rcll
test
repnz
pop
mov
cmp
cs
cld
sbbb
imul
in
jmp
mov
xchg
sbbl
in
dec
cld
jmp
dec
call
ss
cmp
cmp
ficompl
gs
mov
jle
and
outsl
enter
sar
fists
repnz
ss
mov
or
int3
ret
xchg
and
sbb
scas
subb
push
bound
lret
cmp
ja
inc
fdivs
lods
js
pop
pop
fxch
jne
mov
pop
insl
mov
cltd
ror
sbb
repz
jg
sbb
daa
and
or
mov
mov
sub
arpl
ficoml
fiadds
movsb
iret
xor
xor
mov
je
out
xchg
xchg
fistpl
inc
push
mov
cmc
aad
xor
pop
mov
dec
pushl
shll
repz
lahf
iret
inc
lcall
fnsave
das
mov
jl
lcall
mov
sub
rcl
xchg
stc
test
sub
in
and
loope
jne
push
push
jmp
cmp
cltd
add
dec
dec
out
cmp
aad
iret
cmp
in
adc
ss
aaa
aas
add
fnstenv
out
mov
adcb
inc
out
sbbl
popa
fcomps
aas
jl
aas
clc
es
add
ss
and
xlat
int
pop
or
adc
bound
sub
sahf
push
mov
mov
js
xlat
mov
dec
aam
adc
mov
mov
cmp
fldl
or
je
xchg
lds
int
jp
clc
mov
ja
nop
dec
rclb
and
outsl
or
dec
aam
fldl
dec
inc
and
cmc
jns
jl
leave
xchg
movsl
inc
lret
xchg
push
xchg
rcll
out
outsl
outsl
sbb
sub
lahf
lahf
je
sbb
adc
sbb
xlat
aas
out
leave
loop
imul
pop
and
jns
mov
xchg
and
inc
es
pop
jmp
or
xchg
adc
mov
repz
les
inc
mov
cmp
add
cwtl
outsb
adc
arpl
dec
jmp
nop
xor
mov
sbbl
and
mov
sub
out
jno
sub
mov
testb
lcall
je
roll
jbe
and
jbe
add
inc
fisubl
lods
xchg
dec
push
push
nop
mov
in
mov
push
pop
or
pop
mov
or
ret
xchg
push
cltd
xlat
and
int3
jae
mov
incb
push
addr16
mov
orl
int3
and
mov
insl
xor
pcmpgtb
jb
mov
xchg
insb
add
xlat
cwtl
push
dec
loopne
xor
mov
movsb
mulb
imul
out
or
mov
mov
stos
dec
push
cmc
mov
pop
test
vpavgb
outsb
or
inc
add
dec
mov
sysenter
lock
imul
leave
test
xchg
jp
mov
push
imul
fisttpll
testb
xlat
sub
jne
dec
in
mov
fs
and
xchg
mov
push
in
mov
lcall
test
cmp
stc
scas
mov
mov
divb
movsl
sub
fnstenv
push
cmp
xchg
dec
pop
xchg
jg
mov
icebp
inc
lret
lcall
xchg
sbb
sub
pop
inc
iret
jb
add
iret
mov
test
push
cmc
jl
jle
push
cmp
nop
mov
add
xor
mov
sbb
nop
cmc
inc
nop
sub
jge
inc
lods
mov
push
pop
mov
adc
adc
jno
cmp
js
or
jecxz
loope
lcall
cmc
jnp
xor
cs
loope
add
mov
rclb
popl
imul
sub
stos
sub
stos
movsb
movsl
or
dec
andl
mulb
mov
and
scas
sub
xchg
push
cmp
sahf
into
out
fdivrp
out
into
fimuls
cs
ds
ds
dec
outsb
pop
jle
dec
jle
mov
mov
out
into
fimuls
cs
ds
ds
dec
outsb
pop
jle
dec
jle
mov
mov
out
iret
fimuls
cs
aas
fimuls
ds
dec
outsl
dec
jle
dec
xchg
pop
lcall
lcall
jle
push
shl
xchg
test
imul
mov
mov
shrl
clc
jl
sarl
insb
mov
jno
pusha
fcoms
inc
clc
xor
add
shrl
js
or
dec
jno
popa
clc
push
call
and
icebp
pop
rol
sarl
mov
and
inc
mov
xor
dec
icebp
fsubrl
scas
dec
test
rcrl
sub
adc
scas
fsubrs
cmpb
in
add
dec
lea
les
mov
jp
in
in
scas
cmpb
inc
test
jmp
push
cmp
and
mov
mov
inc
xor
jne
test
cwtl
je
add
mov
or
cld
aaa
in
scas
add
mov
xchg
inc
xor
push
pop
add
call
and
cmp
das
cmp
fcmovnu
cltd
inc
mov
push
in
jns
inc
jae
push
fwait
sbb
add
scas
pop
imul
push
test
cmp
dec
loope
shr
shll
mov
mov
push
clc
inc
mov
movsb
and
test
mov
xchg
pop
mov
jl
ja
inc
sbbl
add
push
pushf
cmp
jb
inc
fsts
lods
pop
mov
in
jmp
lods
xor
xor
dec
aam
leave
je
xchg
push
loope
mov
insb
mov
cmp
popa
fcoms
inc
clc
xor
add
shrl
js
or
cmp
popa
fcoms
inc
clc
xor
add
dec
lret
out
push
dec
xchg
mov
jae
or
push
mov
mov
push
mov
cmp
mov
icebp
data16
pusha
int3
sbbb
cmp
enter
fstpt
sahf
int3
jl,pt
imul
cmp
outsb
sub
out
or
daa
xchg
add
es
mov
and
shll
fiadds
out
push
aam
adcl
iret
cltd
sbb
pop
dec
cmp
lret
jbe
jno
sbb
adc
pusha
sti
movsl
cs
lock
pop
add
int3
jecxz
cmp
fsubrp
mov
inc
pusha
inc
sub
insl
or
fsubs
fdivr
mov
fisttpll
pop
jl
push
outsb
fldt
inc
adc
dec
out
les
mov
clc
mov
pop
mov
xchg
xchg
pusha
or
jno
imul
int
stos
xchg
pop
mov
xchg
insl
int
mov
jp
frstor
out
xchg
xchg
fs
rcrl
cmp
ret
sub
cmpb
jns
loopne
and
pop
push
insl
mov
mov
cmpsl
movsl
ret
orb
out
sbb
mov
data16
ds
outsl
ljmp
arpl
loope
mov
inc
in
loope
scas
dec
cmp
jecxz
sub
shr
lods
dec
repnz
sbb
inc
xchg
xchg
push
mov
or
xchg
lahf
dec
sub
sub
mov
cld
sbb
pop
mov
sbb
orb
sbb
adc
xchg
push
loop
cmpsl
lea
adc
cmp
insl
jae
mov
out
sbb
out
in
sub
repnz
inc
cmp
test
rclb
mov
subl
scas
std
inc
clc
rcll
xchg
mov
aad
pusha
iret
shlb
int
bound
add
iret
test
inc
mov
adc
imul
mov
pop
shl
out
sub
push
call
xor
inc
adc
fcompl
test
cmc
bound
insl
imul
mov
push
mov
and
repnz
pop
or
pusha
adc
mov
cld
mov
xchg
pop
mov
sar
push
cmp
fsubl
stos
jae
imul
les
add
pop
ss
cmp
xchg
nop
test
js
je
cmpsl
out
insb
bound
addr16
inc
add
cmp
outsl
out
mov
lods
xor
lcall
and
mov
push
sub
inc
jge
xchg
xlat
aas
clc
mov
sbb
mov
jae
je
test
ljmp
fstpt
test
or
in
jg
sub
and
sti
sub
jmp
loopne
lret
cs
xor
xchg
loope
mov
push
or
pop
pop
sub
stos
mov
cmpsb
scas
add
cmc
add
and
push
push
loope
push
dec
mov
and
dec
loop
lods
shr
aaa
sub
and
xor
rcrb
cwtl
pop
psllw
les
out
scas
pop
xchg
fcompl
out
gs
pop
push
aaa
imul
lds
fidivrl
push
sti
push
jle
adc
jnp
sub
inc
das
jmp
add
ss
cmp
xchg
or
adc
fdivrs
lcall
enter
fldenv
out
adc
mov
sub
shll
mov
mov
ror
movsb
aas
mov
mov
mov
ror
mov
mov
pop
mov
pop
xlat
pop
clc
cltd
or
lret
aad
and
pushf
hlt
mov
add
scas
jle
repnz
sahf
sahf
repz
adc
lret
pusha
mov
es
mov
sbb
sahf
inc
adc
or
scas
push
loope
mov
xchg
in
xor
mov
xchg
push
push
mov
les
sahf
sarb
mov
fnstenv
jns
in
adc
decl
xor
in
push
or
sub
stc
fisttps
aad
jg
push
inc
mov
bound
icebp
arpl
sub
das
and
add
cmp
cltd
shlb
pop
xlat
mov
dec
in
or
mov
arpl
sbb
and
cld
enter
sub
sbb
jl
mov
adc
sub
mov
pop
pop
xchg
mov
outsb
push
popf
movsl
or
push
in
xor
mov
pop
xor
add
sahf
dec
inc
pusha
imul
push
incb
xchg
cli
filds
imul
or
or
jg
and
sbb
cmpsl
enter
and
fnstenv
pop
xchg
xor
pop
mov
data16
cmp
adc
adc
and
lods
rolb
mov
push
gs
es
inc
loop
or
outsl
inc
xchg
lock
imulb
inc
outsb
xchg
out
sbb
or
pop
loope
ss
cli
push
cld
mov
pop
mov
lret
add
dec
cmpsb
pusha
call
sub
add
fxch
or
rol
jne
push
mov
and
js
sbb
js
cmp
fisubrs
pop
xchg
insb
lahf
out
add
cld
or
fidivrs
imul
lods
inc
lds
xchg
mov
pop
cmp
ljmp
xor
and
pop
push
adc
sahf
mov
out
pop
test
mov
daa
jle
and
call
inc
lahf
lahf
imul
push
mov
dec
pop
pop
pop
sub
or
pop
hlt
ljmp
sbb
sub
insl
orl
or
outsl
cs
es
sbb
adc
mov
cmp
lea
add
xor
push
jg
jge
movsb
xorb
into
loope
outsl
and
xor
jmp
add
rcll
imul
inc
ret
jnp
les
dec
daa
in
mov
aam
adc
int3
lret
loope
mov
jo
mov
aas
xor
and
cmp
pop
int
rcrl
fs
flds
jge
pop
jns
lods
cmc
lods
push
push
mov
shl
and
inc
add
out
jne
or
leave
mov
cmp
mov
adc
cmpsl
fbld
xchg
push
in
jg
jmp
sub
repnz
shr
cmp
clc
ds
nop
lds
sub
inc
push
hlt
xor
mov
std
xchg
inc
hlt
popf
mov
into
cmp
mov
adc
popa
test
jne
add
mov
adcb
movsb
repnz
or
pop
mov
push
mov
jp
lret
xchg
mov
mov
and
inc
out
outsl
leave
movsb
add
mov
dec
xchg
push
push
xlat
lahf
inc
aad
pop
lret
mov
lods
and
sarb
cmpsb
movsb
adc
push
cmpb
add
xor
mov
lods
xchg
jo
inc
stos
repnz
sbb
xchg
add
aam
dec
nop
out
stc
sub
loop
adc
dec
repnz
mov
js
mov
fdivrl
push
loopne
mov
das
and
xchg
insb
movsb
testb
bound
int3
sub
sbb
add
clflush
lock
test
mov
outsb
cmp
dec
loopne
cld
loope
sub
insl
aad
xor
imul
fxch
dec
mov
fmull
cmp
data16
out
test
xchg
rorb
les
fidivl
stos
nop
cmpsl
mov
and
mov
sub
mov
ret
cmp
dec
fists
mov
sub
xchg
add
mov
push
jp
out
lret
ficomps
cmpsl
jge
push
add
push
mov
xchg
mov
in
clc
mov
movlps
icebp
int3
cmpsl
test
out
xchg
rol
pop
xchg
mov
jle
imul
mov
aam
mov
loopne
dec
xchg
or
mov
mov
int3
add
arpl
cmp
fwait
xchg
sub
push
inc
pop
cwtl
maskmovq
testl
cmpb
xchg
push
icebp
mov
jns
add
das
dec
and
mov
and
sub
and
iret
inc
or
mov
loope
inc
test
add
and
lods
cltd
and
aam
nop
outsl
frstor
push
bts
icebp
inc
push
js
stc
out
stos
outsb
fcmovu
in
mov
mov
mov
lock
into
sbb
cmpsb
mov
xchg
jo
iret
mov
dec
sub
sbb
clc
aas
or
mov
rorl
js
scas
push
or
mov
mov
mov
loope
pop
cld
ja
xor
cmp
stos
fmuls
or
popf
into
and
adc
pop
or
cmp
test
pop
and
shl
pop
jae
rorl
dec
xchg
xlat
mov
out
cmp
movsl
gs
jae
jae
outsl
gs
insb
add
jbe
lret
xchg
xlat
cmp
add
adc
or
sub
push
jmp
pop
movsl
dec
adc
xor
dec
pop
mov
mov
jb
out
les
data16
pop
out
fstps
adcl
shrb
scas
je
xor
adc
lahf
icebp
add
ljmp
stc
pop
rcrl
xchg
fimuls
leave
jo
ds
lods
mov
xchg
cmp
das
inc
std
mov
jle
stc
add
pavgw
cmp
inc
test
imul
das
icebp
fisttpl
lods
push
cld
outsl
inc
shll
loop
inc
pop
and
xchg
pusha
das
and
or
mov
xchg
adc
mov
jne
or
mov
mov
lcall
fucomi
shrl
add
dec
jns
cmpl
fnstenv
jge
test
add
mov
ds
sbbl
jle
test
jmp
add
dec
mov
in
cmpsb
sbb
pop
sbb
in
ret
pop
dec
adc
pop
in
pop
xchg
pusha
in
add
cwtl
in
and
jns
ror
sub
lods
outsl
lret
sbb
stos
cli
ljmp
or
sbb
jp
enter
adc
in
xchg
xchg
push
lea
mov
lret
paddusb
sahf
sbb
mov
cwtl
ret
xor
mov
sub
mov
and
jmp
mov
ss
repz
pusha
inc
pushf
dec
leave
cmpb
hlt
sti
add
inc
xchg
or
ret
fsubl
data16
jae
mov
mov
popa
inc
ret
sbb
int
mov
call
in
or
stos
xor
mov
shrb
clc
mov
mov
xor
sub
scas
test
call
sub
test
das
adc
mov
sub
mov
and
divl
xchg
xor
mov
hlt
test
mov
test
in
jbe
cmp
xor
xchg
mov
js
imul
in
jg
pop
and
mov
cmp
jnp
cld
jo
mov
shl
loope
nop
or
fidivrl
inc
mov
call
jl
sub
repz
lock
fldl
mov
push
mov
add
scas
push
lret
mov
mov
mov
outsl
and
dec
adc
mov
rcll
push
or
add
dec
cmpsl
jns
in
ss
sub
in
mov
sub
cmp
xchg
jg
loope
shr
sbb
mov
lea
testb
daa
test
add
adc
loopne
into
sbb
lods
push
rcrb
mov
movsb
xor
and
loopne
out
int
and
or
mov
movsl
sbb
rorb
add
xchg
mov
mov
mov
jno
sub
and
scas
das
lea
ss
pop
lods
mov
fmuls
mov
push
mov
mov
aad
jmp
fwait
xlat
icebp
sub
into
out
push
mov
fstpl
mov
mov
test
rcll
fwait
jmp
leave
xchg
add
movsl
sbb
insb
outsl
or
inc
xlat
loopne
push
xor
push
xchg
iret
and
mov
pop
cmpsb
lret
mov
rclb
and
subl
xchg
inc
popa
imull
int
fstpt
cmp
sbb
mov
sub
pop
xchg
jae
or
lahf
into
adc
mov
xor
out
jg
aas
lock
and
repz
and
cmp
scas
sub
push
mov
ss
push
sbb
sarl
adc
lods
imul
sti
mov
sub
ja
mov
xor
mov
xchg
je
xor
xor
cmp
mov
daa
mov
in
cmp
xor
pop
mov
cmp
add
mov
sbb
ja
inc
sub
push
jp
xchg
insb
jmp
mov
enter
jmp
leave
xchg
lcallw
pushf
jp
jno
add
rep
insl
into
cmc
mov
aaa
test
add
in
jp
push
mov
loopne
nop
stc
mov
mov
clc
mov
insl
jl
mov
rcl
push
cmp
or
mov
ja
mov
js
lret
test
popa
arpl
mov
inc
xor
inc
lock
fsubs
xor
mov
insb
cmp
push
lea
xor
setge
add
pusha
dec
pusha
jb
scas
movsb
and
mov
sti
mov
pop
je
and
adc
cltd
lret
fcmovbe
out
sar
es
xchg
push
inc
std
xor
push
ljmp
jbe
inc
xchg
sarb
shr
stc
cmp
sti
dec
jg
das
mov
in
fsubr
push
xor
stos
dec
fbstp
push
or
adc
fistl
cmp
sub
movsb
adc
popf
xor
dec
cmp
fwait
divb
cmp
sbb
addr16
push
jae
pop
jo
stos
cltd
mov
lods
sub
pop
sbb
aas
xlat
cmp
mov
push
push
imul
clc
arpl
add
xchg
mov
inc
ficomps
cltd
xor
and
mov
popa
pop
into
ljmp
ret
and
ds
dec
fcomps
icebp
sahf
popa
addr16
xchg
mov
dec
ss
pop
dec
sub
test
cltd
aas
xchg
in
mov
test
rol
push
add
rep
dec
push
arpl
outsb
inc
push
lock
loopne
dec
add
popa
mov
cmpsl
mov
idivb
xchg
mov
call
add
xor
in
movsb
push
pop
cmc
fdivl
jae
jl
das
cmp
test
mov
mov
mov
pushf
mov
loope
popa
pop
fsubrs
pop
pop
xchg
push
pop
sub
jae
cmp
and
lds
jno
and
subb
xor
xchg
inc
or
mov
and
pop
mov
jge
adc
sbb
pushf
inc
fcmovbe
lcall
pop
jbe
rcrl
mov
sub
ss
cmp
pop
pushf
xchg
mov
pop
in
hlt
shrl
mov
imull
test
mov
jmp
and
loopne
in
dec
jo
mov
or
js
aad
pop
jl
shrb
adc
adc
mov
inc
jno
mov
aam
push
sbb
lea
arpl
ret
sbb
ret
mov
adc
mov
xor
mov
iret
mull
add
add
int
and
shll
mov
or
dec
subb
cmp
jb
adc
je
lret
sti
pop
push
mov
jp
cmp
lods
xchg
outsl
leave
inc
add
cmp
push
inc
jo
stc
mov
add
lods
jns
mov
mov
std
add
mov
jp
pop
movsl
fld
mov
pop
fsubl
jmp
fucomp
adc
cmp
je
cwtl
scas
pop
jns
bound
pop
outsl
in
or
fisubrl
into
fnstenv
pop
xchg
ficompl
jle
xlat
scas
test
pop
gs
and
ds
sbbl
fsubrp
lods
dec
aad
mov
cmp
in
and
push
popf
push
push
pop
aas
lcall
arpl
adc
dec
inc
pop
cli
out
pusha
es
lahf
cmc
subb
std
divb
das
jnp
jns
and
ja
loopne
mov
dec
test
movsb
lret
les
sbb
andb
nop
inc
dec
arpl
sbb
or
dec
pop
std
loopne
xchg
xchg
gs
jae
pop
aam
je
pop
cmpsl
push
xor
jl
sbb
insb
inc
jg
or
mov
ds
outsl
scas
mov
push
jg
xor
sbb
idiv
add
or
dec
lret
notb
mov
xor
sub
xchg
mov
push
out
stos
dec
loop
lds
scas
cmp
in
fcmovnu
testb
nop
pop
aad
ficoml
lret
add
mov
cwtl
jo
adc
dec
push
or
mov
adc
adc
cmp
push
push
loopne
sbb
pop
or
pop
xor
in
inc
xchg
fwait
in
loop
ds
jae
or
mov
sub
cmp
out
dec
shl
pop
in
aas
xchg
in
mov
nop
clc
sub
jl
mov
and
arpl
push
and
or
dec
scas
or
xor
jge
lods
or
fs
jae
rolb
push
push
sbb
and
jmp
sub
jb
mov
imull
out
repz
push
add
mov
flds
mov
xor
sbb
mov
fwait
mov
adc
sti
and
pop
into
inc
negb
ret
adc
repnz
ds
outsb
add
leave
popa
xor
aaa
icebp
jmp
daa
xor
xlat
mov
in
inc
sahf
outsb
pop
mov
in
jge
jecxz
aam
adc
cld
dec
daa
mulb
mov
add
sub
enter
mov
add
xchg
sarl
shlb
popa
rcll
adc
aaa
clc
sahf
out
movsb
sub
enter
fwait
test
scas
mov
leave
loop
lock
mov
mov
mov
cs
pop
repnz
loope
sahf
aam
dec
mov
ret
or
sub
fiadds
push
sbb
adc
sbb
sub
sbb
ljmp
faddp
sbb
push
pop
hlt
mov
icebp
mov
loope
push
cmp
mov
sbb
dec
inc
lret
jbe
loopne
data16
mov
sub
movsl
cmc
ret
negl
stos
mov
jg
mov
sbb
push
std
out
imul
ljmp
or
inc
pushf
jmp
dec
shlb
je
and
jecxz
es
nop
push
cmpl
stos
jmp
mov
addr16
adc
hlt
mov
xchg
stos
mov
comiss
cmp
insl
jmp
sbb
ss
addr16
push
inc
dec
dec
xlat
fisttps
icebp
fdivr
adc
mov
mov
leave
out
cmpsb
mov
loope
ss
and
ret
pop
fnstcw
cmpb
mov
dec
out
push
pushf
dec
pop
inc
test
loop
popf
sbb
je
jmp
jno
and
outsl
int
add
js
hlt
sub
out
xchg
cmp
mov
inc
inc
fidivl
hlt
ljmp
stc
loope
mov
cmp
stos
scas
or
xor
jp
pop
sti
xchg
sbb
pop
adc
lods
pop
aam
test
cmc
cli
leave
pop
push
adc
cmp
into
icebp
nop
in
sbb
xchg
dec
xor
mov
stos
jle
inc
xor
mov
and
stc
pop
push
scas
xor
int3
mov
stc
gs
mov
jns
shrb
xchg
adc
iret
mov
xor
sub
sbb
cmc
mov
or
push
std
fmuls
out
mov
test
pop
ja
mov
lods
sti
sbb
dec
es
jp
pusha
fprem
jno
inc
stc
int
test
or
leave
jnp
cmpsl
cmpb
pop
push
mov
js
sub
fsubrs
xchg
into
and
aaa
aam
and
imul
adc
xchg
and
es
push
sbb
mov
sbb
loopne
mov
push
xor
dec
jae
cld
mov
div
pop
cmp
sbb
fs
outsl
cld
popf
sub
dec
adc
inc
bound
int
xor
es
es
mov
sbb
cltd
clc
cmc
cmpb
aam
pop
adc
dec
imul
mov
adc
imul
sbb
and
inc
add
mov
pslld
es
adc
roll
roll
pop
rolb
js
or
cmp
popa
fcoms
inc
clc
xor
add
shrl
js
or
cmp
popa
fcoms
inc
clc
xor
add
push
adc
js
or
cmp
popa
fcoms
inc
clc
xor
add
shrl
jns
or
cmp
popa
jb
call
push
addr16
push
jno
push
mov
sub
lea
push
push
push
pushl
call
mov
dec
dec
je
sub
je
sub
je
call
movl
call
call
pushl
pushl
pushl
pushl
call
jmp
movzwl
sub
je
dec
je
pushl
pushl
push
jmp
pushl
call
jmp
push
push
pushl
push
pushl
call
mov
push
push
pushl
call
pushl
mov
call
pop
jmp
lea
push
push
pushl
call
mov
lea
push
pushl
call
lea
push
push
lea
push
call
pop
push
lea
push
push
call
lea
push
pushl
call
pop
jmp
push
call
xor
leave
ret
in
cmc
outsl
lds
aad
adc
push
idivl
imul
inc
scas
push
and
fists
das
lds
aad
movsl
jg
outsl
test
popa
jne
jne
inc
xchg
pop
and
fists
jmp
mov
push
xchg
jge
mov
sub
mov
inc
stos
mov
outsb
lds
divb
xchg
inc
fcoml
jecxz
mov
fisttpll
jecxz
and
fs
in
mov
push
in
mov
pop
push
mov
ljmp
sbb
jbe
inc
xchg
jmp
xor
xor
fdivs
or
adc
aas
in
or
icebp
cvtps2pd
pop
jp
xchg
ret
je
jo
stos
mov
ljmp
mov
js
dec
loop
lock
dec
lods
outsb
enter
gs
mov
inc
jg
jg
xchg
xor
inc
or
push
fistps
mov
jbe
popf
dec
lcall
in
xchg
data16
add
mov
pextrw
imul
mov
movsl
outsl
test
fnstsw
pop
pop
popf
dec
mov
ret
sub
std
mov
nop
inc
mov
fcmovbe
add
sub
fbstp
cmp
in
and
stos
js
mov
imul
ss
jl
ficoms
fiaddl
adc
and
mov
cltd
iret
test
xor
dec
gs
push
and
fists
das
lds
aad
movsl
jg
outsl
test
dec
gs
push
and
fists
jns
bound
xchg
push
jo
lock
sbb
sbb
dec
xchg
mov
aad
sbb
test
jg
leave
sbb
mov
mov
xchg
or
cmp
push
and
push
pop
sbb
test
dec
and
into
out
adc
cld
xchg
insb
push
jl
mov
mov
mov
pop
mov
pop
mov
mov
outsb
jae
aaa
rcr
mov
popa
shrb
cmpsl
bound
mov
mov
xor
leave
pop
xchg
add
fldt
inc
aad
add
aam
popf
or
add
out
cli
jmp
subl
push
aad
stos
dec
add
sub
mov
ds
sub
dec
inc
test
fldl
out
fisubl
popa
adc
clc
cwtl
jo
inc
insb
cwtl
repz
cmp
shl
mov
fildl
ficoml
loope
dec
dec
cmp
jno
lahf
mov
shr
mov
mov
add
xor
sbb
mov
xchg
fdivl
jle
mov
lock
sub
xchg
in
sub
lret
out
insl
mov
in
cmpsb
int
pop
mov
lods
adc
mov
and
push
ret
sub
dec
sbb
dec
cs
je
jo
popf
gs
pop
sbb
scas
mov
cs
addr16
call
sub
xchg
cld
sub
adc
icebp
shlb
stos
jmp
sub
fs
mov
ss
xchg
fs
popa
sbb
or
lods
out
dec
into
negb
push
divb
mov
jl
push
push
dec
mov
xor
rorb
mov
shl
push
pop
subl
jecxz
in
rolb
adc
ja
or
stc
mov
dec
int
adc
push
subl
pop
mov
out
imul
iret
cmp
rclb
into
jge
out
sub
cli
leave
popf
cwtl
dec
scas
inc
mov
add
xchg
enter
dec
into
jne
xor
inc
add
imul
pushf
pusha
sbb
lds
dec
cmpsl
js
bound
mov
add
clc
push
dec
fld
mov
fldcw
xor
out
add
dec
mov
adc
xor
cmp
scas
pop
ret
jge
pop
stos
popf
aam
insl
sbb
pop
xchg
jle
jne
or
mov
xchg
filds
aad
cwtl
les
mov
add
imul
jae
lret
add
sbb
jne
xchg
lea
or
pop
sti
sbb
cmp
dec
cld
popa
lret
push
rorl
popa
popa
dec
leave
iret
pop
ror
push
xchg
sub
ds
jnp
into
xor
in
xchg
mov
or
mov
cmp
cmp
and
fcoms
idivl
test
sub
xchg
fsubs
add
not
in
aad
jnp
sbb
cmp
fists
ret
xchg
mov
jb
aas
jl
xchg
mov
jge
mov
jp
jnp
pop
lods
cltd
cmc
jecxz
clc
loop
mov
movsl
decb
fisubrs
add
fistpll
loope
mov
scas
mov
push
mov
jo
sti
out
xorb
lods
test
loopne
outsl
dec
jb
popa
mov
lcall
or
sbb
vmwrite
loope
pop
jmp
push
pop
icebp
dec
and
xlat
push
push
or
and
inc
or
pop
iret
adc
ljmp
fwait
xchg
negb
add
inc
repnz
loop
add
xchg
push
xor
push
xor
lahf
cmp
rol
push
mov
lcall
jae
mov
test
adc
xor
andl
mov
aad
adcl
xor
push
fistpll
movb
sub
add
std
or
xor
out
cltd
xor
insb
mov
popa
aas
jg
xchg
clc
call
loop
jp
inc
mull
xchg
sub
jg
pusha
arpl
loop
and
arpl
pop
cwtl
fldt
mov
and
shll
jecxz
cmp
cmp
cmp
inc
inc
inc
das
adc
mov
cwtl
fcomp
jb
cmp
push
dec
mov
aad
das
mov
jecxz
cmpsl
jne
sti
mov
pop
data16
add
adc
jne
or
add
into
rol
jo
push
scas
sbb
rclb
mov
xor
mov
out
std
mov
setb
addr16
inc
mov
and
inc
inc
dec
push
ljmp
cmp
mov
popa
out
dec
fstpt
cli
mov
fldenv
mov
pop
outsl
ret
pop
sbb
test
aaa
in
xor
enter
addb
jl
clc
adc
js
jmp
jmp
rclb
test
mov
jge
arpl
inc
jmp
fadds
in
test
adc
aad
std
and
sbb
int
movsb
pushf
rolb
rcr
add
dec
xor
xor
mov
dec
pop
out
sbbb
mov
out
and
jp
addr16
and
jge
add
adc
fsubl
adc
xchg
mov
aad
in
or
out
stc
dec
or
les
xorl
je
jnp
setnp
mov
outsb
fmuls
xchg
stos
mov
lret
mov
sbb
mov
ljmp
mov
int
push
pop
addr16
mov
mov
aas
imul
jo
cmp
mov
icebp
rolb
ljmp
js,pt
and
and
std
repz
xor
mov
inc
sahf
cmpsl
xorb
ret
mov
adcb
add
sub
les
pop
push
gs
mov
jb
jmp
fnsave
pop
jg
push
mov
pop
xor
loope
jae
add
les
xor
inc
testb
xor
add
mulb
daa
mov
jo
fdiv
xchg
push
push
pop
movsb
bnd
jns
jge
andb
lock
daa
std
pushf
adc
push
xor
stos
sub
in
mov
mov
cmp
pop
data16
mov
jge
ret
les
push
mov
or
push
outsl
pop
xor
int3
sub
adc
jo
push
push
jmp
and
jmp
xchg
out
lea
loopne
adc
push
xor
push
aaa
jg
cmc
gs
mov
push
inc
movsb
mov
mov
jle
pop
sub
sub
jno
xor
loope
and
fdiv
rorl
mov
in
sbb
push
outsl
lock
dec
movsl
mov
xchg
and
js
mov
adc
cmp
push
sub
inc
sbb
invd
jmp
movsl
xor
inc
test
insb
loope
mov
mov
sub
xchg
inc
mov
pusha
fadds
xchg
sti
sbb
aam
outsl
cmp
sahf
shll
dec
adc
xor
inc
or
and
lds
mov
test
out
or
fnstenv
jge
mov
jns
sub
mov
scas
cs
in
jae
popw
or
testb
add
push
imul
xchg
add
insb
lret
xchg
xor
jg
cmp
mov
cmp
movsb
xchg
xlat
jp
add
cmc
into
jmp
pop
xor
nop
xadd
in
int
cmp
mov
push
mov
test
or
ret
cwtl
ljmp
shl
and
das
dec
xor
lods
mov
xchg
jnp
je
adc
sub
jg
xor
pop
or
xchg
gs
mov
mov
cmpsl
decb
stc
orb
cld
aaa
stos
mov
push
iret
push
enter
in
pop
jmp
testb
push
andl
ja
or
imulb
push
int
in
jbe
xor
arpl
or
dec
add
jno
nop
sbb
jnp
xlat
add
dec
mov
loopne
jo
xchg
sbb
xchg
or
ret
add
xchg
push
es
xchg
test
cld
movsb
call
test
jb
xchg
mov
mov
fisubl
cmp
xchg
sbb
imul
test
xchg
fstps
call
pop
sub
loopne
inc
add
das
cmc
ss
sti
dec
repnz
dec
add
adc
mov
les
jle
out
cwtl
adc
shlb
push
cwtl
or
imul
sarb
jecxz
mov
insl
data16
insb
lods
imul
pop
lock
lret
mov
mov
jae
cmp
sbb
jne
sub
and
xor
idivb
xor
push
flds
out
je
xchg
outsl
fsubrl
bound
pop
setp
jno
mov
xor
lods
inc
lea
or
or
inc
sub
pop
sub
aas
fisttps
popa
pop
out
xchg
not
adc
sub
ret
stos
adc
bound
frstor
in
insb
jecxz
imul
notb
cmc
sub
leave
into
sarb
sub
loope
pop
insl
outsl
lock
out
inc
sbb
inc
add
dec
jle
ss
stos
mov
daa
movsb
arpl
mov
mov
add
int
hlt
and
cmp
mov
imul
mov
sub
ljmp
dec
sbb
sbb
icebp
repz
sarl
pusha
mov
ret
push
or
loope
ja
sahf
js
inc
cwtl
std
mull
jmp
in
mov
or
xchg
nop
or
sbb
idiv
pop
fs
aaa
cmp
daa
and
cmp
and
ffreep
mov
fbstp
add
dec
mov
movsb
push
push
aas
cs
pop
adc
pop
ror
js
flds
pop
pop
fs
jmp
hlt
push
ret
sbb
jle
in
mov
pop
dec
jle
stc
lea
xchg
das
dec
gs
sub
add
in
mov
xchg
xor
xchg
xor
sub
mov
jge
sbb
xor
fisubs
mov
cmp
int3
or
xor
pop
mull
stos
cmpl
aad
xor
xchg
jmp
jns
cmp
bound
fidivrs
dec
add
je
adc
cmc
jns
pop
out
pop
adcl
pop
jmp
pop
fnsave
loop
into
cmp
stc
cmp
jno
gs
enter
jb
movsl
jmp
or
pop
mov
outsl
dec
xchg
xchg
fiaddl
icebp
mov
xor
xchg
pop
aaa
or
popf
xchg
pushf
adc
xor
and
jno
sub
mov
jge
mov
rcll
xchg
mov
or
inc
mov
sahf
xchg
lods
push
xor
rol
jbe
int
out
mov
cmp
lret
cmp
ss
dec
jno
mov
or
test
mov
lea
sub
mov
popf
jne
fs
in
jge
mov
andl
sbb
sub
loopne
in
dec
mov
jae
jns
popa
sub
imul
pop
sbb
push
fstpt
fsubrs
fcom
repnz
push
xor
or
inc
xor
addb
jbe
test
cltd
cmp
pusha
cltd
loope
int
mov
sti
mov
adc
outsl
ret
add
lcall
hlt
stos
das
mov
ret
out
xchg
push
push
mov
loopne
inc
push
dec
inc
sahf
dec
mov
mov
in
hlt
mov
sbb
xor
and
cli
inc
pop
sub
fdivr
lds
cmp
push
and
scas
es
out
out
cmp
fs
lods
dec
dec
roll
leave
add
enter
dec
dec
addb
mov
gs
adc
pop
mov
lock
fisubrs
arpl
scas
test
or
jmp
into
add
adc
mov
sub
lds
test
mov
adc
mov
pushf
imul
aam
mov
pop
ficoms
in
jno
xchg
or
pop
fiadds
fimull
dec
sub
jnp
cwtl
pop
cmp
ret
sub
leave
pop
jecxz
nop
and
mov
mov
jecxz
mov
sub
cmpsb
lret
call
fbstp
roll
andb
jb
mov
shlb
xchg
xor
dec
fidivl
ret
xchg
in
inc
std
or
rep
mov
add
cltd
jno
je
lret
fisubs
insl
or
mov
ret
sbb
xor
mov
loope
cld
scas
jmp
in
or
lret
mov
push
pop
stc
call
punpckhdq
fidivrs
jmp
mov
ret
adc
sbbl
int
jns
int
xor
fisubs
shlb
cmpsl
jge
fstp
cmp
cmpsb
mov
and
fcomp
lret
and
stos
sbbl
or
notl
dec
sbb
dec
out
cmp
sti
or
push
in
aad
mov
push
aad
pop
ret
mov
jp
stos
ds
and
mov
mov
jmp
and
sub
addb
cmpsl
scas
cmpsb
xorb
aaa
push
leave
repnz
xchg
daa
and
xor
aad
or
mov
push
lds
mov
add
add
jo
js
push
fimuls
pop
jb
js
sahf
pop
cs
add
pop
inc
movsb
sbb
adc
lahf
repz
push
adc
pop
cmp
in
lret
cli
out
aaa
int
xchg
mov
jnp
ret
lret
popf
pop
pop
icebp
mov
push
sub
pop
mov
add
and
jno
adc
mov
xor
mov
mulb
leave
andl
arpl
pop
add
hlt
gs
loop
aad
dec
aas
inc
dec
aad
cld
adc
int3
push
push
adc
mov
push
aaa
lods
mov
mov
cmp
or
int3
xor
notb
sub
mov
loop
in
push
dec
mov
stos
dec
inc
ljmp
jns
cmpsl
jne
sub
dec
mov
push
lcall
mov
testl
ja
imul
cltd
push
jp
hlt
or
test
xchg
xor
in
add
dec
adc
das
test
mov
adc
outsl
dec
arpl
dec
ja
hlt
cmp
mov
jg
mov
lahf
pop
dec
dec
pop
mov
popa
mov
in
pop
inc
outsl
orb
fistl
inc
pcmpeqd
rorl
fldcw
testb
das
xor
or
les
mov
push
xchg
mov
jo
jp
inc
and
outsl
out
pop
fidivl
or
mov
nop
cltd
dec
cmpsb
loop
sub
in
out
icebp
clc
and
jne
push
xchg
jno
pop
pop
aaa
jbe
mov
leave
aad
cli
out
ss
lods
sub
add
dec
adc
std
ljmp
or
ficompl
in
jne
sub
fildll
adc
jecxz
mov
push
bound
loopne
mov
aaa
test
fcoms
jae
xor
cs
pop
pop
sub
mov
pop
dec
fsubrl
in
call
sbbb
shlb
mov
jne
loope
cld
mov
sarl
iret
mov
fwait
and
pcmpgtd
fimull
repnz
ss
inc
popa
adc
mov
xchg
add
xchg
adc
shlb
pop
sbb
cmc
rorb
fisttpl
lds
loope
out
sub
ja
lods
dec
and
in
push
sbb
add
ficoml
dec
inc
sub
clc
sbb
fildl
subb
popa
cltd
cmp
mov
push
jg
jbe
push
mov
push
mov
jmp
into
add
xor
ds
mov
inc
cli
fistpl
fsub
ds
fstpl
les
popa
xchg
rcrl
mov
lods
push
mov
push
jecxz
mov
xor
mov
jl
ret
push
cmp
rclb
jno
jp
push
je
cld
xor
mov
stos
mov
test
jb
push
rorb
test
lock
popf
push
xchg
out
daa
push
pushf
aam
leave
push
lea
add
shl
aam
xchg
xor
cmp
xchg
loop
mov
inc
lods
imul
xor
or
push
dec
mov
fimuls
fwait
and
in
dec
jge
pop
ret
daa
or
out
add
call
insb
repnz
aad
cmpsl
mov
xor
stos
add
mov
test
push
add
mov
mov
push
stos
xor
icebp
sarb
mov
lcall
jb
imul
shr
and
and
popa
fnstsw
insl
dec
inc
movsb
xchg
fucomi
pop
xor
cmp
dec
mov
mov
push
loope
mov
sbb
add
or
js
mov
push
mov
subl
push
scas
mov
aas
lock
rcl
xchg
xchg
inc
jae
mov
sbbb
and
arpl
filds
ss
addr16
insb
dec
test
sub
insb
xchg
ret
roll
inc
enter
inc
stc
xchg
add
xor
jmp
mov
jecxz
mov
out
cmp
xlat
jnp
adc
lock
fsubs
inc
push
pop
cwtl
push
popa
clc
sub
add
or
sub
push
cmp
scas
inc
jno
sahf
pusha
ljmp
rcrb
pop
mov
mov
sub
arpl
fcoms
jns
jns
dec
int
pop
sbb
call
repz
lcall
dec
jmp
xchg
or
repz
cli
sti
push
push
pop
sub
inc
inc
fsts
jge
sbb
int
fs
dec
into
or
cmp
inc
cmp
add
or
sub
mov
cmp
fcoml
xchg
cwtl
mov
and
xorb
fcmovbe
ss
sti
and
push
movsb
push
into
jg
and
push
clc
pushl
cmpsb
fcomip
arpl
cmp
movsb
dec
jns
and
outsb
aam
fs
int3
dec
je
push
into
rcrb
add
test
sbb
arpl
add
pop
dec
inc
sub
mov
mov
into
lret
mov
aaa
scas
ss
sub
mov
mov
pushf
idivb
imulb
mov
data16
int3
mov
cmp
repnz
stc
dec
lock
in
imul
jp
mov
fwait
movsb
test
dec
outsl
xchg
mov
subb
div
loope
stc
test
pop
mov
icebp
out
and
sub
clc
lods
jns
ja
loop
mov
mov
dec
dec
cmpsl
push
push
and
lods
lahf
mov
and
add
leave
xor
push
frstor
int3
rcl
mov
mov
xchg
imul
cmpsb
push
xchg
add
pop
sbb
mov
push
push
push
pushf
fdivl
bound
mov
push
xchg
jnp
xchg
or
xlat
addl
out
fcompp
xchg
or
ficomps
dec
dec
imul
repnz
mov
inc
stc
sbb
leave
ret
in
dec
pop
dec
jne
int3
inc
cmp
lahf
mov
mov
dec
ss
cmp
jne
cmc
std
and
mov
pusha
imul
adc
or
mov
adc
xchg
fiaddl
xor
cmpsb
in
mov
or
mov
arpl
and
clc
shlb
mov
mov
sub
mov
fstpt
inc
xorb
gs
push
mov
push
dec
adc
or
push
in
shrb
push
mov
dec
out
xchg
int3
int3
rcll
cs
mov
ret
cmpsb
in
pop
outsl
cmp
fildl
daa
adc
loope
fbld
mov
lods
lret
and
adc
fsubs
arpl
mulb
fcomps
shlb
or
fcoml
lret
sub
pop
push
std
clc
and
dec
cmp
test
ss
jmp
cli
movsb
sar
int3
sar
das
cmpsl
cmp
lds
ljmp
push
mov
data16
lret
mov
push
sub
mov
outsl
scas
scas
and
ret
sub
stos
ja
mov
or
mov
out
repnz
iret
sbb
shld
outsl
test
dec
gs
push
and
fists
das
lds
aad
movsl
jg
outsl
test
dec
gs
push
and
fists
and
pop
aad
movsl
jg
add
pop
xchg
dec
gs
push
xchg
pop
sub
fcomi
lret
sti
aad
cmpsl
jg
outsl
add
inc
mov
push
xchg
mov
cltd
rorb
lahf
popa
jecxz
adcb
or
push
cmp
pop
push
and
imul
mov
nop
fldenv
adc
mov
add
adc
jns
imul
mov
mov
mov
sbb
or
add
das
push
pop
cmp
mov
sar
lods
fcompl
or
ret
test
test
mov
aas
adc
cltd
pop
add
mov
stc
inc
test
jns
mov
scas
negl
cmp
int3
mov
loop
mov
test
xchg
loop
lret
inc
sbb
cld
push
lock
sub
mov
cli
movsl
flds
insb
je
cmp
pusha
sub
test
int3
pusha
xchg
jns
sbb
jbe
inc
test
rcrb
push
mov
dec
in
divb
jo
stos
pop
adc
sub
in
and
std
scas
inc
jge
cmp
clc
fwait
mov
lahf
jno
shlb
sarb
add
out
nop
lock
sbb
js
imul
and
push
test
xchg
int3
in
std
test
xchg
fisttpll
cmp
je
inc
push
push
add
test
repnz
hlt
fsin
xchg
cmc
fildl
push
insb
and
sub
push
push
xor
test
lock
clc
ljmp
inc
sbb
pusha
cmp
add
dec
and
imul
mov
nop
leave
mov
sbb
pusha
cmp
add
dec
and
imul
ds
stos
scas
push
mov
imulb
and
sahf
and
mov
xor
mov
clc
loopne
inc
jmp
mov
and
pop
pushf
imul
fldcw
scas
cmp
out
out
cltd
xchg
jo
cmp
xchg
inc
dec
sub
rcr
test
inc
repz
push
lods
push
inc
ret
out
mov
in
test
icebp
loope
aad
jbe
test
lods
data16
sti
push
mov
push
loop
push
add
jmp
mov
leave
dec
test
sti
rol
cwtl
sbb
xchg
lods
pop
mov
pop
ds
imul
and
add
mov
or
shlb
jl
jnp
and
xchg
add
push
movl
mov
add
jmp
jb
loope
adc
cmpsl
cmp
aaa
pop
mov
dec
arpl
push
jecxz
das
mov
jns
adc
cwtl
flds
mov
xlat
push
addr16
icebp
pop
scas
pop
xor
mov
lret
xchg
jecxz
sub
xor
jg
add
xchg
xor
mov
and
dec
cmc
cmpsl
jle
test
stos
add
jecxz
cli
lcall
fsts
lea
lcall
jnp
gs
inc
jns
mov
add
iret
aam
arpl
test
rolb
cmp
aad
and
ss
mov
and
arpl
inc
insb
dec
jmp
jecxz
jae
fsubrs
jns
mov
cmp
add
sub
loope
pusha
mov
sbb
sbb
jno
jne
adcb
pop
xor
sbb
sub
into
lods
rcrl
mov
dec
push
sbb
dec
stc
jnp
and
inc
add
pop
cmp
repz
push
mov
das
cwtl
pop
fwait
cmpsb
dec
adc
cs
iret
add
mov
jg
mov
iret
mov
or
jbe
das
add
pushf
in
inc
call
scas
lods
test
mov
and
pop
jae
adc
sbb
repnz
negl
movsl
lcall
fmull
cmp
lock
leave
pop
cmpsl
xchg
jp
xchg
insb
mov
inc
inc
jle
sahf
imul
inc
rcrl
addr16
adc
xchg
mov
and
jae
cmc
mov
xor
out
inc
add
fdivrl
dec
jp
aam
xor
adc
out
add
popa
pop
jno
insl
outsl
sub
add
push
adc
jmp
add
pusha
mov
xchg
lods
andb
sti
and
ret
inc
mov
scas
push
icebp
aam
call
dec
push
pop
jnp
in
xchg
push
push
scas
clc
aaa
loop
push
jbe
mov
cmpsl
in
int
fisttpl
jb
or
data16
sbb
addr16
rcr
adc
lock
and
icebp
push
push
ror
xchg
dec
es
sbb
enter
xlat
je
test
ret
dec
les
sub
icebp
jg
in
hlt
popl
xchg
add
aas
or
adc
out
cld
pop
jbe
pop
push
aam
and
stc
out
push
and
andl
and
cs
pop
inc
push
cs
not
arpl
fiadds
dec
mov
pop
fdiv
sti
jl
test
mov
dec
mov
push
imul
in
cld
push
shlb
lret
int3
cmp
mov
arpl
sub
inc
fldcw
mov
and
inc
test
jns
mov
add
cli
cmp
and
jp
movsl
xchg
mov
mov
cmp
inc
aam
pop
aad
jnp
ja
jo
repz
mov
cvtps2pi
test
fistl
in
and
xlat
loope
testl
xchg
incl
inc
dec
xchg
pushf
and
lods
inc
data16
fbld
adc
cwtl
fistps
dec
lea
push
leave
imul
stos
aaa
stos
imul
add
into
flds
push
mov
dec
mov
add
sub
xchg
xchg
inc
test
cmp
push
dec
jno
roll
mov
add
add
xor
xor
gs
outsb
call
es
outsb
xlat
shrb
sub
ss
push
fimuls
in
test
pop
jle
or
xor
or
xchg
lods
dec
daa
fisubrl
iret
pop
sbb
shl
hlt
sub
sti
lods
lret
mov
dec
push
xchg
es
sub
inc
stos
jnp
mov
push
xchg
rcrl
adc
es
outsl
pusha
jl
nop
shr
dec
daa
iret
sbbl
xorl
popa
adc
jp
and
sbb
fsubl
mov
cmc
arpl
pop
loope
lret
insb
out
and
pop
clc
ds
cld
push
cs
jne
cltd
and
mov
xor
push
pop
popa
sub
push
jno
jns
inc
xlat
test
xor
iret
or
or
in
xor
xor
add
inc
ljmp
inc
sahf
push
je
jo
in
flds
in
pop
insb
inc
scas
imul
ja
xor
lret
cmp
in
jo
push
outsl
inc
subb
scas
mov
ja
push
jecxz
mov
loopne
sbb
adc
mul
loope
push
add
add
jb
jecxz
out
dec
dec
call
orl
mov
sub
jo
flds
in
xchg
dec
lahf
sub
xchg
or
cmp
cli
sub
outsb
inc
cmp
adc
pop
dec
dec
xor
bound
movsl
icebp
push
jge
lock
and
fists
and
xor
adc
add
sarl
test
add
jnp
dec
inc
fimuls
xor
inc
out
lret
mov
das
xor
mov
fstps
stos
jns
sbb
sbb
xchg
aam
clc
inc
dec
mov
inc
mov
jg
xchg
data16
inc
xchg
push
inc
int
jle
stc
sbb
cmpsl
mov
and
aas
out
inc
sub
fistpl
mov
inc
xchg
les
or
mov
pop
pop
test
pop
aas
iret
pushf
sub
mov
loop
je
insl
data16
pop
cmc
scas
pop
push
xchg
and
dec
test
adc
pop
test
dec
jno
fs
pop
pusha
mov
cmp
jmp
inc
es
les
pop
rcll
or
test
roll
sbb
push
push
rcll
into
lds
shrl
loopne
lahf
fsubl
fistps
xchg
xchg
sub
imul
or
and
push
les
dec
mov
dec
jae
ret
mov
sbb
arpl
or
cmp
les
adcl
lods
lretw
scas
add
jnp
in
jnp
sub
test
or
mov
test
lret
jns
adc
pop
daa
lahf
push
inc
mov
push
add
fistpll
xor
pop
outsb
lea
jbe
pop
ret
aas
out
xor
dec
dec
enter
sub
fsts
lcall
aam
mov
add
add
mov
fdivl
das
cltd
into
insl
mov
add
loope
xor
mov
adcb
xor
pop
data16
sbb
pushf
push
cmp
jge
push
fimull
jecxz
mov
pop
jmp
mov
sbb
xor
cmp
cmp
mov
lods
sahf
inc
pushf
or
fstpt
movsb
int3
cmpsl
fisubl
lret
cwtl
imul
jns
inc
data16
sbbb
mov
fdivrl
push
mov
sub
fwait
ljmp
adc
dec
or
leave
push
push
push
andl
dec
pop
aaa
scas
mov
push
and
mov
adc
adc
sahf
clc
daa
adc
mov
stc
sub
and
pop
int
adc
in
lods
xorl
lcall
in
repnz
rolb
pop
shlb
mov
lods
rcrb
fdivrp
inc
add
cmpl
push
dec
fidivrs
lcall
cs
jne
cmpsb
sti
aas
decl
add
inc
push
into
fs
aas
hlt
mov
jns
jmp
std
mov
xchg
lea
cmp
sti
lcall
mov
lea
add
scas
arpl
push
inc
mov
lahf
stc
pop
adc
jmp
mov
icebp
enter
out
xor
aad
mov
incb
push
cmp
in
jb
add
lcall
pop
daa
int
in
mov
mov
sbb
and
sub
leave
ret
dec
xlat
sbbb
jb
cmp
cmp
adc
in
lods
jg
sub
les
in
js
mov
lcall
mov
lret
repnz
mov
test
push
and
lods
xchg
movsl
je
enter
push
or
push
lret
inc
adc
dec
dec
and
lds
jle
cmpsl
sti
daa
les
cltd
cli
mov
pop
pop
repnz
xchg
cmc
inc
mov
lret
negb
lea
cwtl
add
shlb
pop
aaa
dec
sub
mov
outsl
popf
add
add
mov
mov
clc
or
mov
pop
mov
in
out
in
outsl
call
add
in
jnp
aaa
adc
stos
cmpsb
mov
addr16
inc
cmc
pop
inc
and
cmp
cmp
xchg
insl
jbe
ret
js
mov
repz
js,pn
sub
loopne
cmp
push
sub
out
xchg
lds
push
dec
adc
or
mov
xchg
mov
sarl
notl
sbb
aad
mov
pop
cmp
jnp
mov
bound
mov
cltd
inc
push
test
aas
scas
cwtl
daa
add
lods
sbb
repz
pop
push
pop
adc
insl
mov
popa
xlat
dec
or
mov
pop
dec
sbb
jecxz
out
idivb
dec
in
stos
iret
insl
decb
shl
adc
jp
inc
stc
add
test
jbe
push
dec
int
cmp
fildll
shl
push
into
js
sti
fisttps
out
push
mov
inc
movsb
sbb
mov
pop
std
ljmp
insb
dec
sti
jns
or
push
loopnew
jbe
test
mov
jbe
js
aas
jp
call
jg
mov
es
out
mov
stc
cs
test
es
sti
push
jno
xor
mov
fadds
mov
xor
fisubrl
xor
pop
test
or
mov
inc
outsb
mov
dec
ret
mov
repz
cmp
out
pop
mov
mov
sub
loope
pushf
sbb
xlat
adc
mov
cmp
dec
rol
push
mov
loop
mov
xor
das
push
enter
pop
inc
into
xchg
jle
ret
mov
mov
inc
cld
aam
scas
rcrl
dec
xchg
mov
pop
test
insl
xor
xchg
jp
fsubr
add
and
xor
cltd
add
mov
fistps
and
lcall
jbe
sbb
in
cs
jae
pusha
sahf
scas
lods
pop
into
repz
mov
add
test
pushf
popa
loop
mov
mov
inc
lds
pop
xor
pop
dec
cmpsb
sbb
cmpsl
mov
mov
sbb
jg
pop
pop
add
cld
aad
sub
in
mov
clc
in
ds
call
jo
aas
sub
lds
loope
rorb
ret
fsubs
mov
sub
cwtl
xchg
push
dec
adc
nop
fnsave
jl
repnz
mov
into
xchg
cmpb
jnp
insb
jb
or
popa
in
push
xor
leave
jmp
gs
adc
call
adc
jo
clc
adc
lahf
push
cmp
jmp
and
dec
mov
gs
xchg
mov
cmc
push
mov
rcr
test
pop
in
fidivl
push
adc
xlat
and
icebp
stc
xchg
push
clc
push
bound
jp
pop
sbb
data16
and
mull
adc
mov
add
ljmp
jmp
imul
cltd
sbb
ret
sbb
aam
or
lods
rclb
cli
add
jne
sub
sub
cmpb
cld
push
jp
pop
jns
dec
jno
mov
lock
dec
pop
pop
mov
lcall
lcall
add
push
and
es
sarb
mov
xchg
icebp
outsb
sbb
pop
pop
iret
loope
pop
push
icebp
push
push
data16
pop
lret
mov
jmp
sti
dec
es
in
mov
lock
or
and
xchg
xor
or
roll
add
xor
xchg
decb
sbb
mov
cwtl
fistpl
or
daa
popa
sarl
bound
vrcp28ps
ret
pop
cmp
aam
jmp
dec
pop
ret
movsb
cmp
ficompl
cld
inc
inc
jb
popa
pop
and
les
push
jmp
dec
shlb
jno
aas
sbb
lock
in
addl
out
lock
adc
mov
leave
jae
ret
leave
add
inc
xor
lods
lods
mov
mov
xchg
scas
insl
cmp
fadd
inc
mov
inc
lret
jp
iret
mov
ds
sbb
in
aaa
gs
jb
aas
jp
mov
movsb
andl
push
cmp
xorl
mov
dec
pop
sarl
sahf
push
enter
popa
popa
jo
out
sbbb
ret
in
mov
lods
stos
test
cmpsl
movsb
push
inc
roll
adc
mov
cmpl
aaa
mov
cmp
pusha
daa
aad
lods
nop
out
fwait
in
pop
call
out
mov
aad
sub
mov
add
xor
scas
xlat
mov
jg
rcrl
jno
dec
add
jmp
iret
daa
push
leave
jo
cmpsl
fsub
fidivl
aad
pop
mov
push
push
cwtl
ror
shlb
fistpll
xchg
addr16
mov
outsb
mov
fildl
xor
mov
enter
imul
fcmovnu
stos
add
fwait
pop
xor
pop
gs
mov
imul
pop
stos
mov
adc
adc
shr
sub
adc
pop
andl
sub
call
pop
test
notb
push
lahf
sbb
cli
dec
pushf
lahf
fadd
decb
adc
xor
jp
mov
addr16
dec
jbe
repnz
xchg
or
lods
int
clc
adcb
aam
aam
or
lret
xor
inc
in
dec
lds
sbb
aaa
xor
cmp
aam
dec
aam
aad
or
fidivs
stos
stos
in
stos
mov
out
or
cmp
insb
xchg
mov
loope
ret
gs
xchg
cmc
into
lahf
es
mov
arpl
xchg
mov
pushf
in
mov
bound
xchg
in
mov
das
cltd
pusha
fnsave
jmp
fucomi
and
addr16
xor
dec
dec
sbb
push
push
aam
in
jle
add
jle
out
pop
mov
cmp
and
jo
lahf
outsl
sub
mov
adc
mov
cmp
divl
clc
cmpsl
in
hlt
ret
or
js
out
cltd
addr16
xchg
mov
lahf
push
test
iret
rcr
in
ret
daa
jge
sub
dec
int
push
in
mov
adc
fwait
pusha
or
jp
ret
jg
pop
push
push
fistpl
xlat
das
dec
fistps
lcall
xchg
ret
jne
testl
push
dec
popf
jo
iret
jnp
xor
jnp
sub
sbb
fdivrs
or
inc
mov
les
cmp
pop
std
cmp
inc
adc
xchg
inc
mov
repnz
iret
fildll
fsubp
dec
pop
jo
sbb
mov
insl
sti
js
jb
push
loope
scas
adc
mov
sbb
mov
push
pop
lahf
filds
jnp
inc
dec
lret
pop
popf
in
dec
mov
cmpsb
cmpsb
push
sub
lret
cmp
inc
pushw
add
scas
lret
jmp
push
out
xor
sbb
leave
mov
xor
xlat
ret
jne
dec
xchg
jge
mov
cld
fbld
rorb
loope
in
je
lods
repz
cmp
fnstcw
mov
and
adc
dec
mov
inc
in
lods
inc
mov
rcl
inc
add
test
jae
adc
enter
sbb
jecxz
ficoms
mov
ret
test
loop
or
lcall
ss
out
mov
jge
cmp
data16
sub
test
mov
push
lret
and
dec
mov
ljmp
mov
mov
push
ljmp
sbb
dec
in
push
mov
dec
lcall
insl
ret
lock
push
pop
pop
and
pop
dec
aad
dec
adc
dec
sbb
xor
xor
dec
ret
rolb
jno
xlat
dec
xor
adc
pop
sub
adc
jno
jecxz
fisubrs
es
scas
mov
or
inc
rolb
sub
mov
mov
rol
stos
pop
lds
fs
pop
repnz
sub
subl
fildl
outsl
cmp
dec
lret
das
sub
xor
cmpsl
mov
fidivrs
jns
fisttpl
sahf
sub
call
cmc
and
or
add
push
inc
cltd
iret
mov
jo
rorb
xchg
mov
jnp
sbb
and
sub
loopne
divl
mov
mov
pop
ljmp
mov
or
adc
popf
mov
popa
movsb
cmp
pusha
sbb
sub
inc
loop
mov
jb
xchg
outsl
sub
stos
movsb
pusha
jecxz
mov
pushf
ret
mov
stc
jl
xor
mov
mov
mov
mov
mov
or
test
shl
jmp
lret
cmp
jo
pop
das
xor
inc
cmpsl
pop
int
loopne
aas
mov
dec
fdivrs
push
sub
sub
mov
cmpsl
lods
js
xor
mov
xchg
inc
mov
dec
xchg
and
arpl
imul
subl
mov
xcrypt-ecb
cmpsl
lret
dec
jl
loop
xchg
mov
lea
daa
cmpb
shl
jp
adc
jp
mov
wrmsr
add
test
roll
pop
pop
push
push
sbb
inc
int3
inc
lahf
sbbb
mov
push
negl
arpl
in
push
or
lock
lret
xorb
pop
fisubrs
push
jne
xor
insb
cmp
push
cli
add
mov
dec
dec
cwtl
ds
negb
ret
mov
sub
int
les
adc
lea
mov
pusha
mov
xchg
lret
xor
pop
pop
cmpsb
mov
push
out
jmp
push
hlt
mov
mov
fisubs
cmpsl
in
jmp
fimull
dec
cwtl
mov
and
xor
mov
cmc
xchg
cmp
aas
push
mov
cltd
and
iret
into
loopne
mov
xchg
int
pushf
cli
adc
cmp
or
scas
pushl
mov
sti
lods
popf
cmpsl
cmpsl
ljmp
enter
pop
notb
bound
jne
frstor
cmp
scas
loop
fxch
adc
xchg
cmpsl
adcb
int3
dec
add
filds
cld
mov
popl
xor
arpl
inc
cmp
pushf
and
lret
pop
push
dec
outsl
test
inc
stos
jne
and
scas
aam
dec
imulb
in
cmp
mov
in
inc
mov
and
adc
dec
jmp
dec
aam
leave
dec
test
and
and
jp
pusha
test
push
pushw
arpl
rcl
dec
xchg
aas
div
insb
fs
push
stc
ljmp
das
mov
arpl
sub
sbb
add
std
stc
pop
ror
mov
adc
or
arpl
jae
pusha
sbb
xchg
sbb
push
cmp
cmpsb
mov
movsb
mov
mov
cmpsb
sarb
dec
insl
mov
stos
ja
fistl
jnp
jg
stos
ret
gs
xlat
adc
inc
sarb
dec
sbb
sbb
jmp
cmp
lret
test
test
xchg
jecxz
mov
jae
sub
into
sub
call
hlt
and
pop
push
sub
mov
inc
mov
lds
add
dec
fidivrs
out
mov
jno
loop
sbb
lea
xchg
xor
outsb
adc
fnstenv
or
int
sbb
icebp
mov
inc
pop
je
sub
push
inc
pop
in
mov
dec
or
adc
cli
sbb
lea
ret
and
movsl
and
mov
sbb
cmp
mov
mov
nop
leave
mov
sbb
pusha
cmp
add
dec
and
imul
mov
nop
leave
mov
sbb
pusha
cmp
add
dec
and
imul
mov
nop
leave
mov
sbb
cmp
add
dec
and
insl
hlt
popf
in
mov
nop
leave
and
xor
mov
cmp
ja
cwtl
filds
iret
push
stos
rorl
loopne
divb
nop
mov
inc
push
mov
add
or
add
add
add
and
add
jns
pop
add
cmp
jg
mov
add
add
add
push
add
push
add
add
add
cmpsb
add
arpl
inc
add
add
add
push
add
add
add
movsl
add
mov
fs
add
and
adc
cltd
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
aaa
add
test
loopne
dec
add
jb
mov
add
add
testl
roll
add
add
xchg
addl
add
add
add
movsb
add
add
add
push
add
cmpsb
add
add
add
adc
add
add
xchg
add
add
push
add
dec
add
addr16
add
add
roll
add
add
add
add
add
roll
movl
xor
sbb
add
mov
add
xchg
add
mov
sbb
jae
lahf
add
add
add
loopne
pop
add
add
add
pop
add
add
add
xchg
add
push
add
add
clc
add
addr16
add
add
add
lock
rolb
add
sahf
add
push
add
jno
adc
and
xor
push
add
pop
add
add
add
cmp
sub
sbb
and
jg
cmpsl
add
add
addl
add
lret
add
add
inc
add
add
sub
add
add
add
add
testl
sub
dec
add
add
add
add
sub
aas
add
imul
add
movb
add
pop
add
loope
push
add
add
add
add
and
add
add
add
jns
xor
add
add
add
add
imul
add
add
add
and
cmp
movl
and
and
push
add
xchg
add
inc
add
add
inc
add
add
add
add
test
add
mov
add
add
add
add
imul
add
add
add
add
add
add
add
add
movsb
add
jge
les
movsb
add
add
jmp
add
add
add
add
add
add
add
add
add
pop
add
xor
mov
mov
add
leave
add
push
add
add
add
jle
cmp
sub
leave
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
flds
movsb
add
jle
cmp
loopne
add
push
add
mov
jmp
sub
xchg
add
add
testl
cmpsb
add
add
pop
add
add
add
add
add
add
add
testl
movsb
add
mov
add
or
sahf
add
add
add
add
add
add
mov
add
add
pop
add
add
add
add
add
popf
add
lock
add
add
dec
movsb
aam
andl
fsubrs
rorb
setbe
fdivs
mov
lds
xchg
inc
inc
ljmp
out
addr16
in
push
jg
jg
mov
mov
negl
or
lock
pop
mov
push
and
inc
and
mov
test
fwait
push
mov
push
daa
into
xchg
pop
shlb
lock
mov
jae
pop
aam
out
sbb
icebp
roll
scas
ljmp
xchg
sub
mov
pop
jmp
or
repz
mov
icebp
push
es
cmc
cmpsl
cli
out
mov
lret
in
and
mov
push
xor
add
cltd
or
jb
out
sbb
inc
pop
stos
mov
and
push
mov
push
wrmsr
sub
adc
and
sub
popa
adcl
cli
fmul
sarl
movsl
popf
cmpsl
xor
mov
xor
xor
shr
cmp
add
in
rcrl
mov
and
jo
test
pop
cs
scas
hlt
testb
test
nop
dec
insl
fimuls
push
in
fadds
les
dec
sbb
std
imul
push
mov
not
arpl
mov
cmpsl
pushf
push
into
push
dec
insl
lods
bnd
lcall
les
mov
sahf
jne
or
push
jnp
pop
or
scas
lret
cmp
shll
dec
inc
fwait
orb
cmp
dec
jecxz
push
leave
mov
adc
and
data16
out
enter
lods
push
inc
push
or
push
cmp
shrb
jle
das
sti
rcrl
push
sub
cmpsb
inc
mov
int3
mov
or
mov
dec
or
icebp
aas
repz
hlt
sti
xor
xor
lods
dec
mov
lea
inc
or
pop
mov
sti
sbb
xchg
xchg
sub
cwtl
and
pop
mov
mov
mov
orl
cmp
inc
pop
fucomp
subb
lds
adc
decb
out
test
sub
lds
imul
aam
jge
pop
xchg
cmpsl
jle
bound
stos
jnp
mov
clc
mov
into
and
push
lcall
fwait
or
cwtl
std
rorl
mov
mov
jne
mov
push
mov
es
xchg
dec
and
sub
popf
fsubrs
cmp
inc
test
xor
pop
push
gs
jmp
inc
popf
inc
out
add
pop
push
inc
fcmove
das
add
adc
stos
sub
lret
aam
push
mov
inc
fistpl
add
add
add
add
add
jmp
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
add
dec
hlt
add
jo
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
out
hlt
add
fdiv
add
aam
add
int3
hlt
add
hlt
add
mov
hlt
add
lods
hlt
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
add
adc
add
sbb
add
xor
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
test
add
enter
lock
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
inc
testb
dec
testb
push
testb
pop
testb
testb
insb
testb
je
add
xchg
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
testb
mov
testb
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
push
mov
add
fstcw
fwait
mov
or
mov
fldcw
fistpll
fldcw
mov
mov
leave
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
xor
add
add
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
dec
clc
add
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
clc
add
jl
add
nop
clc
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
or
add
sub
add
push
stc
add
mov
and
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
movsb
stc
add
lods
stc
add
mov
add
mov
stc
add
int3
stc
add
aam
add
out
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
add
add
or
add
sbb
add
sub
add
mov
pop
pop
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
pop
push
call
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmpl
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzbl
push
call
test
pop
je
inc
jmp
cmpb
jne
inc
jmp
cmp
jbe
inc
cmpb
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmpb
je
push
call
cmp
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
add
cmp
jne
pop
pushl
call
pop
mov
mov
pop
pop
movl
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
andl
mov
push
mov
movl
mov
test
je
mov
add
mov
cmpb
jne
mov
inc
cmp
je
test
je
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
incl
test
je
mov
mov
inc
jmp
incl
test
je
andb
inc
cmpb
jne
inc
jmp
incl
test
je
mov
mov
inc
mov
inc
movzbl
testb
je
incl
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
andb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
cmpb
je
test
je
mov
add
mov
mov
incl
movl
xor
cmpb
jne
inc
inc
jmp
cmpb
jne
test
jne
xor
cmp
je
cmpb
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
andb
inc
incl
jmp
test
je
andl
mov
pop
pop
pop
incl
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
movl
jmp
call
mov
cmp
je
movl
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
push
push
pushl
call
add
ret
movzbl
mov
test
jne
cmpl
je
movzwl
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
pushl
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmpl
mov
rep
stos
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
ja
orb
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmpb
mov
je
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmpb
jne
incl
add
cmpl
jb
mov
movl
push
mov
call
lea
mov
movsl
movsl
pop
mov
movsl
jmp
inc
inc
cmpb
jne
push
pop
orb
inc
cmp
jb
push
call
pop
mov
movl
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
pushl
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
movb
test
je
push
push
lea
movzbl
movzbl
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
pushl
pushl
push
lea
push
push
push
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
push
lea
pushl
push
push
lea
push
push
push
pushl
call
add
xor
lea
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
andb
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
andb
inc
cmp
jb
pop
leave
ret
cmpl
jne
push
call
pop
movl
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
jmp
